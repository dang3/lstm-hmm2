sbb
add
mov
sbb
push
inc
loop
aaa
es
dec
xor
mov
lret
shrb
nop
fisubs
pop
out
aam
pusha
jecxz
xchg
jl,pt
add
xchg
jle
inc
mov
lock
repnz
xchg
jnp
pop
jne
sub
rcrl
fsubl
ret
repnz
and
pop
or
outsl
cmp
test
fucomi
stos
in
scas
dec
sbb
sbb
add
enter
add
incl
js
inc
aaa
pop
pop
mov
lahf
mov
das
xchg
hlt
les
push
inc
jo
fldcw
and
lods
sahf
loope
push
or
icebp
out
cmp
fwait
sub
leave
pop
imul
mov
xchg
mov
loop
push
and
dec
in
cwtl
sub
xchg
enter
xlat
sti
mov
arpl
sahf
xor
rolb
icebp
mov
fdivrl
dec
xchg
and
jge
fnstsw
loopne
lcall
insb
sbb
ss
xor
push
or
adc
hlt
sar
adc
test
lds
push
bound
or
cmpb
pop
iret
cmc
push
push
out
dec
movsl
sbb
pop
dec
mov
stos
mov
cmp
pop
mov
insl
mov
push
outsb
mov
test
hlt
sti
cld
mov
fstpt
xor
jecxz
fdivrs
mov
pop
shl
sub
and
and
fnsave
mov
pop
or
in
or
shrb
or
push
pop
cmp
adc
push
mov
cmpsb
mov
add
clc
push
jle
cmp
xchg
xor
adc
adc
in
iret
push
jnp
mov
push
and
sti
punpckhwd
jle
sub
push
add
arpl
push
ss
mov
add
pop
sub
lods
sbb
add
adc
mov
mov
inc
cmp
inc
xor
fcoms
mov
aas
std
and
jmp
mov
jbe
mov
dec
repz
pop
mov
adc
lea
mov
pop
push
xchg
mov
jb
aaa
imul
pop
jb
mov
push
scas
clc
pop
and
test
push
and
xchg
sbb
sub
cs
lea
dec
dec
cmp
adc
cmpsl
xchg
or
stc
jge
pop
mov
mov
jecxz
ret
popa
jge
stos
adc
pop
enter
dec
dec
adc
mov
or
jo
jmp
outsb
hlt
leave
enter
mov
xchg
in
push
mov
mov
orl
mov
das
in
add
push
sbb
ss
xor
arpl
push
sti
inc
mov
sbb
rdmsr
push
jl
sub
pop
jle
out
xor
call
rol
mov
cwtl
jp
in
out
lcall
lea
push
lea
add
out
ljmp
cmpsl
sub
dec
and
leave
or
sbb
jg
push
icebp
sub
cwtl
sbb
out
stos
not
jle
aaa
pop
insb
aaa
mov
stos
loope
and
mov
repnz
arpl
pop
cmc
xchg
xor
fisubl
add
cmp
das
sbb
inc
outsb
mov
xorb
ret
mov
push
cmp
packsswb
pop
dec
xor
jle
loope
jo
xor
scas
fwait
cmp
lds
popf
dec
ss
sbb
enter
cwtl
pop
rcrb
mov
sub
jg
fcomps
jmp
scas
adc
faddl
dec
dec
mov
fs
cmp
in
in
mul
dec
fnstcw
add
cmp
pop
xchg
in
leave
pop
add
bound
lock
xchg
addr16
out
inc
cmp
jp
insb
xchg
movsl
scas
insl
aam
adc
bound
pop
js
cmp
nop
mov
pushf
mov
mov
aas
jl
aad
push
inc
dec
push
mov
addl
jo,pt
inc
adc
push
ror
mov
fidivl
mov
xor
dec
push
hlt
les
lock
mov
mov
out
mov
scas
add
sub
daa
cli
loopne
lods
iret
cs
xlat
inc
or
add
xor
add
or
inc
adc
dec
cs
js
jne
clc
and
adc
sbb
adc
jae
xchg
inc
jnp
or
rcr
test
mov
outsb
icebp
cli
mov
cmp
cli
mov
push
xor
and
pop
jno
rolb
xchg
scas
xchg
bnd
jb
sbb
xchg
in
jmp
mov
daa
hlt
movsl
scas
bnd
adc
mov
stc
mov
out
push
jae
mov
sbb
rcrb
mov
pop
pushf
mov
std
mov
daa
ror
inc
aaa
adc
xchg
jmp
adc
fldcw
in
mov
push
std
cmpl
inc
inc
dec
pop
xchg
dec
mov
loope
ret
push
outsl
mov
in
push
mov
mov
jle
call
repz
inc
and
pop
sahf
in
inc
loopne
and
adc
iret
arpl
xchg
aaa
adc
and
subl
adc
repnz
mov
mov
shll
lods
adcl
pop
iret
pop
or
jg
push
push
dec
pop
mov
inc
out
cmpsb
mov
pop
in
pop
popa
xchg
mov
and
adc
jmp
add
aad
in
add
add
fistps
dec
popf
pusha
mov
mov
jp
inc
test
inc
jge
std
jae
jge
mov
mov
lock
xlat
sub
ret
mov
mov
jnp
push
or
sub
fiadds
push
pusha
cmp
inc
push
inc
mov
pop
xchg
popa
lods
sub
mov
mov
jg
imul
shll
adc
dec
and
iret
jmp
js
pop
dec
and
xor
xchg
push
sbb
pop
pop
jp
lods
div
ljmp
popa
js
jo
iret
ljmp
or
xor
sbb
dec
and
ret
mov
iret
cmp
mov
cmp
sub
cmp
sarl
imul
pusha
mov
xchg
mov
xlat
pushf
leave
lods
bound
pop
push
jmp
sub
xchg
adc
loopne
or
shlb
dec
sbb
loop
adc
aaa
push
or
lea
mov
inc
fisubrl
cmp
mov
dec
iret
dec
jo
ljmp
mov
pop
cmpsb
adc
pushf
mov
gs
sbb
std
cmp
or
pop
cmp
dec
xor
jns
lds
sbb
aas
ror
daa
andb
pop
lods
les
loopne
scas
pop
jg
stos
push
gs
sub
xor
int
cmp
xchg
leave
adc
dec
cmp
mov
js
cmc
mov
aam
xchg
jmp
test
jge
leave
xor
mov
and
adc
jmp
lret
notb
jae
mov
insl
push
dec
sbbb
dec
xlat
xchg
addb
xchg
in
shrb
ljmp
mov
fimull
cli
mov
cli
adc
addl
test
jb
int
sub
sbb
movsb
mov
cmc
popf
xor
push
cmpsb
scas
lret
jo
add
int
mov
lods
push
in
gs
fcoms
add
xchg
jecxz
add
orl
lahf
out
add
daa
dec
sahf
pop
out
sti
roll
out
xor
negb
add
mov
mov
or
xor
mov
adc
repz
dec
pushf
hlt
xor
pop
cli
into
cmp
jae
aas
idivl
mov
das
xchg
lahf
pop
cmpsb
sub
pop
push
inc
pushf
or
inc
mov
pop
or
imul
adcb
sub
into
fstl
jae
in
mov
in
dec
or
fst
mov
negl
sub
leave
jo
xorb
jle
fidivrl
mov
scas
lock
mov
out
fidivrs
xor
movsb
mov
std
and
xchg
imul
movsl
ret
addb
insl
sbb
shlb
loopne
xchg
js
cmp
push
repz
test
scas
sub
and
sub
pop
repz
adc
fildll
ret
mov
inc
test
mov
clc
fstpl
mov
sbb
pop
push
xor
daa
push
xchg
sbbl
mov
push
int
add
xor
mov
pushf
bound
jge
pop
xchg
adc
xor
mov
cmpsl
xchg
into
pop
xlat
inc
push
jecxz
loopne
pop
sbb
out
and
or
rorb
addr16
scas
push
jmp
aaa
jo
std
test
andb
popaw
mov
mov
xchg
jbe
add
dec
in
fldt
push
subb
and
scas
icebp
loop
jb
dec
out
push
inc
cmp
mov
in
push
mov
xchg
cli
inc
js
mov
push
mov
add
or
xchg
orl
aad
pop
jns
pop
gs
lock
mov
repnz
fwait
adc
shrl
add
daa
jg
rcrb
xor
cld
add
jp
out
or
sub
insl
sbb
dec
and
loop
popa
lds
inc
shll
in
repz
adc
enter
add
popa
dec
and
pop
adc
lret
test
gs
in
mov
or
and
inc
sbb
into
mov
sub
or
push
mov
clc
adc
ret
mov
int
aad
shr
push
aad
sbb
pop
jp
sbb
movsl
ret
lds
and
xchg
popa
inc
imul
push
dec
jns
out
inc
enter
xor
mov
mov
xchg
xor
das
lods
mov
dec
loop
movsl
loopne
xor
insb
pop
adc
mov
add
nop
in
loope
mov
jbe
push
shl
xor
gs
inc
in
mov
xlat
xor
cmp
sub
hlt
jno
pop
std
stos
outsb
mov
out
or
mov
fnsave
push
rolb
add
dec
aaa
mov
adc
adc
lahf
fcoms
ja
fwait
das
mov
out
sarl
and
test
js
cmp
bound
cmp
pop
push
push
divl
pop
test
mov
lahf
or
push
dec
mov
sub
mov
cmp
cli
in
xor
addr16
aam
add
popa
icebp
enter
bound
fwait
xor
mov
inc
jno
int3
push
pop
push
push
dec
test
push
rclb
insl
xor
xorl
xlat
pusha
addl
xchg
cmp
icebp
imul
sub
add
or
cmpl
pop
mov
loop
in
std
adc
icebp
adc
gs
insb
fcomp
repz
mov
adc
push
out
push
mov
imul
push
adc
xorb
in
pop
and
dec
mov
stos
ljmp
mov
cmp
push
les
andl
sahf
or
ja
jo
pushf
adc
mov
jecxz
adc
loop
inc
leave
rorl
pop
outsl
lahf
add
add
push
and
mov
pusha
and
and
fisubs
adc
cmpsb
notl
xchg
adc
popf
mov
cmp
shrl
pop
dec
adc
mov
sub
sub
adc
push
in
push
out
cmp
imul
sahf
push
or
int
inc
inc
jl
jg
stc
sbb
mov
subl
adc
loope
mov
mov
ja
ljmp
outsl
add
push
sub
int3
std
cli
pop
inc
sbb
cmp
jnp
leave
mov
fnsave
add
out
out
jns
scas
imul
pop
cwtl
imul
inc
inc
je
lods
pop
jp
call
mov
ss
sub
xchg
scas
sub
gs
cwtl
jns
add
pop
ret
data16
or
push
hlt
inc
daa
pop
fiadds
inc
ret
sti
inc
xchg
add
or
mov
filds
gs
xchg
orb
jp
in
inc
pop
dec
mov
and
int
aam
mov
pop
sub
mov
aam
fcoml
push
mov
std
mov
int3
mov
jo
mov
mov
cmc
adc
jp
pop
xor
ljmp
xorl
add
stos
pushf
stos
testb
pop
pop
sub
into
pop
mov
mov
loopne
cmc
xchg
and
xchg
mov
fisubl
inc
imul
xchg
divb
js
loop
in
in
inc
sub
mov
sub
sbb
in
pop
pop
imul
insb
cld
je
push
sbb
dec
rorb
adcl
or
imul
mov
fs
sub
divl
call
cwtl
add
xchg
call
cmp
or
daa
add
inc
and
xor
out
cmp
mov
pop
repnz
insl
stos
dec
dec
sub
cmp
and
syscall
out
cmpsb
imul
add
pop
leave
in
mov
movsl
popf
imul
jo
in
dec
ja
rolb
fsubrl
fisubs
sub
mov
and
sbb
inc
sbb
pushf
addr16
lods
jnp
cmp
mov
je
subb
sbb
leave
and
loop
mov
xlat
lcall
mov
pop
and
or
cmpsb
das
jno
mov
es
xor
jle
fwait
std
dec
and
stos
adc
sub
push
aam
lods
or
rorb
popa
orl
jb
ret
mov
pop
fldt
out
jae
add
sbb
scas
adc
xchg
mov
or
repz
jp
les
cld
push
sti
popa
pop
dec
pop
jp
arpl
orl
call
and
mov
mov
sub
popa
cs
push
sbb
mov
push
gs
dec
or
mov
pusha
jmp
or
push
sub
loopne
inc
xchg
pusha
mov
rcl
dec
lea
les
push
sahf
pusha
pop
in
jge
and
inc
mov
sbb
fndisi(8087
sbb
mov
loope
stos
pop
icebp
push
iret
shll
int3
lret
stc
sub
cmp
lret
cli
repnz
decl
jle
or
clc
cwtl
mov
lcall
cmp
inc
arpl
mov
xchg
fldt
add
enter
in
jnp
mov
addr16
mov
or
hlt
aam
cmp
daa
cmpsl
push
outsb
iret
lock
imul
xchg
aam
fdivp
adc
mov
out
in
mov
hlt
movsb
dec
sub
pop
imul
add
lea
inc
movsb
or
adc
jno
pop
push
cmp
sarb
cld
daa
mov
ficomps
out
cltd
fisttps
out
add
xchg
sub
fisttpll
xor
xchg
neg
leave
cmc
jo
mov
jle
popa
xchg
mov
adc
cmpsl
pop
mov
mov
idivl
ficomps
imul
jg
jbe
pop
mov
cld
lods
sub
loope
inc
push
xchg
cmp
lock
inc
ss
out
pushf
lcall
icebp
fldcw
cmpsl
mov
push
push
lcall
adc
sbb
mov
or
in
ljmp
out
movsl
adc
roll
dec
pop
iret
and
jb
out
cli
test
in
out
in
adc
xchg
push
fildl
adc
sti
xchg
sub
stc
sbbl
and
mov
scas
nop
aaa
dec
pushaw
pushf
rcll
test
insl
out
jmp
add
hlt
adc
lahf
fisttpll
mov
lock
in
push
cli
jbe
lret
jl
call
sub
loop
and
mov
pusha
out
xchg
xchg
pusha
pop
gs
out
lods
sub
cmp
xlat
adc
xchg
loop
je,pt
cmp
push
test
fidivrs
je
test
loopne
xchg
ret
xchg
add
mov
mov
fisttpl
je
xor
je
add
cli
add
cmp
xchg
dec
fstps
clc
mov
scas
adc
sbb
xor
fstpt
and
ja
add
arpl
pusha
jo
push
mov
arpl
sub
insl
addr16
push
push
push
daa
in
push
push
pop
xchg
dec
sar
fdivl
lcall
call
mov
sub
fsubr
sbb
mov
and
testb
mov
add
inc
pop
jnp
mov
sahf
sbb
push
sub
imul
int
cwtl
and
lret
cmc
add
inc
pop
lods
lea
sub
sbb
adc
and
add
loopne
push
sub
lcall
test
or
ss
pop
lea
xchg
and
movsb
cli
cli
mov
mov
pushf
dec
xchg
shlb
rcrl
adc
ficomps
es
ljmp
jle
jno
xor
xlat
sub
push
addr16
pop
mov
aam
mov
cmpsl
push
xchg
sub
test
mov
xor
sub
and
cs
dec
jbe
je
out
leave
jmp
cmc
cltd
mov
cmpsl
repnz
js
pop
jge
int3
pop
fisttpll
in
loopne
adc
test
cmpb
mov
pushl
or
mov
out
sbb
inc
jg
xlat
or
loop
sub
cmp
popf
mov
cld
push
sub
aad
ret
push
nop
int3
pop
out
jmp
pop
fstpt
aas
jbe
mov
mov
fcmovne
shll
mov
ds
dec
cltd
jl
scas
cwtl
or
jmp
stos
jbe
pop
cwtl
pop
adc
js
mov
add
lods
rolb
push
leave
sarb
jmp
cltd
jnp
outsb
stos
sysexit
fstl
cmp
std
pop
ljmp
cld
push
ficomps
mov
fstpt
add
call
in
cmp
and
dec
in
scas
xor
outsl
in
add
rclb
out
fisttpll
sub
dec
ret
xchg
pop
movb
lret
fstpl
and
sbb
pop
xor
lds
push
or
xor
sub
jno
shrb
fisttpll
out
add
add
inc
jno
out
dec
cmp
xlat
cmp
scas
pop
cwtl
cmp
dec
mov
inc
movsb
mov
cmp
pop
shrb
adc
jmp
pop
call
inc
in
fnstcw
add
xchg
mov
into
xchg
xchg
or
xor
mov
mov
jo
fwait
dec
test
pusha
jne
gs
pop
test
inc
xor
add
bound
pusha
sbb
lcall
dec
and
jle
adc
shl
pop
ja
sahf
stc
enter
xlat
push
scas
jmp
call
int
lock
add
dec
xor
ret
rorb
dec
icebp
aad
mov
js
mov
mov
pushw
jo
lods
and
dec
xor
xlat
and
pushf
addr16
xchg
mov
mov
rcr
add
xchg
test
xchg
sub
bound
mov
addr16
mov
sub
xor
dec
loopne
subl
jne
add
outsb
lods
pop
iret
data16
pushf
imul
xchg
fistpll
in
leave
in
shll
and
and
mov
jne
cmp
push
pop
imul
insl
in
ret
add
hlt
cmp
and
xchg
sub
inc
mov
ficompl
jecxz
and
lea
test
inc
adc
push
fcomi
xchg
sbb
xchg
out
push
jbe
inc
test
imul
data16
xchg
out
sub
pop
sub
pop
mov
imul
sbb
aam
lret
xchg
sbb
cmpsl
daa
testl
dec
push
mov
cs
loopne
adc
or
fs
fisttps
or
data16
adc
push
sbb
push
ja
jo
xor
stos
fs
inc
and
and
cmp
xor
or
incl
inc
call
push
or
in
addr16
lahf
cmp
mov
sbb
mov
in
iret
insl
jmp
or
sbb
subb
popa
xlat
jb
push
jns
push
adc
xchg
xchg
shll
icebp
xor
sub
inc
cwtl
lock
add
xor
mov
cs
mov
lret
ret
inc
adc
cmpsl
in
cwtl
pop
inc
mov
sbb
jp
add
leave
inc
or
addr16
scas
cli
lods
xor
and
je
push
lea
mov
and
push
xchg
xlat
ds
or
cli
rcrl
nop
sbb
dec
dec
dec
out
mov
lcall
add
outsb
lret
fsts
xchg
fsubrl
rolb
inc
jecxz
scas
adc
nop
cmp
int3
jb
fst
je
test
push
cwtl
repnz
jne
lea
dec
loope
xor
sub
inc
xchg
cmp
sub
mov
mov
pop
ss
xchg
rorb
mov
sbb
jecxz
cld
daa
xor
imul
jmp
xor
sbb
imulb
inc
jnp
adc
mov
out
in
mov
jg
push
das
pop
arpl
push
sub
cli
jo
arpl
testl
inc
and
push
incl
pop
xchg
in
dec
pand
in
ljmp
test
add
jae
ficompl
or
mov
xchg
bound
shrb
jmp
leave
rorb
push
cmp
mov
and
add
sub
fdivrs
outsb
push
add
bound
scas
cmp
cld
ljmp
test
and
jnp
adc
data16
pop
adc
nop
call
sahf
pop
jp
push
pop
fcomi
inc
jecxz
xchg
rclb
push
cwtl
int3
jo
xchg
mov
lret
xchg
and
lret
inc
test
push
inc
bound
add
std
clc
add
xor
sub
repnz
fsts
or
or
cmpsl
pop
imul
mov
push
mov
rcll
aas
pop
inc
push
xchg
js
fbstp
mov
arpl
pop
test
int3
call
jo
aaa
int
cmp
arpl
jnp
in
imul
std
lock
repz
loope
cmp
sti
adc
cmp
sbb
mov
test
addr16
mov
test
popf
dec
pop
aaa
scas
andl
or
add
popf
sub
jne
adc
mov
push
ja
sar
mov
ret
sarb
and
xchg
imul
cmp
push
sub
cmpsl
into
push
adc
add
jle
out
and
mov
xchg
outsb
sbb
cmp
mov
sub
add
fstpt
pushf
adc
inc
lock
shl
lret
sbb
jae
outsl
es
inc
push
pushl
jmp
xor
mov
ds
test
aad
test
lahf
aas
movsl
and
fcomps
lcall
mov
les
neg
out
mov
mov
fdiv
jle
clc
jo
dec
test
lds
mov
sbb
andl
scas
in
push
insb
mov
sahf
xor
or
or
push
mov
cmpsb
xchg
fnstenv
lret
ss
xor
xchg
lods
mov
mov
out
aaa
shll
xor
mov
pop
and
fwait
adc
test
sbbb
fisubs
repz
pop
lcall
hlt
test
clc
cmc
ljmp
cld
jns
ret
int3
push
mov
dec
xchg
xchg
ficompl
dec
jecxz
lock
push
push
cmp
roll
xlat
decb
repnz
or
in
into
mov
int3
dec
push
leave
insb
lret
dec
cmp
sub
add
je
pop
mov
fs
xchg
inc
in
stos
stos
cmp
mov
test
notb
push
cmpsb
lock
dec
pushf
cli
xchg
and
jl
les
scas
stc
xor
mov
out
pop
cld
out
push
movsb
cmp
push
test
cmpsl
fidivrs
aam
pop
out
sub
adc
jmp
je
out
add
xor
bound
pushf
mov
mov
mov
pop
adc
mov
addl
lock
add
pop
inc
sub
mov
movsb
fwait
lds
sub
fimull
insl
aam
sub
fcomi
icebp
imul
arpl
fcoms
nop
js
in
and
xor
clc
in
test
add
cmp
lds
cwtl
xlat
jns
les
popa
xor
push
cmpsl
and
imul
xor
je
adc
mov
ret
inc
sbb
jecxz
std
mov
jg
xchg
int3
mov
outsb
pop
mov
sub
push
xchg
pop
add
outsl
pushf
adc
mov
inc
jle
daa
mov
mov
xor
xor
imul
and
xor
adc
int
sub
subb
cmp
xlat
jle
in
stos
cmc
add
mov
add
roll
or
scas
popf
or
dec
mov
inc
jns
in
inc
cmp
inc
outsb
arpl
mov
iret
movsl
loope
mov
iret
inc
xchg
jmp
xchg
xorb
iret
dec
sbb
cs
sar
or
mov
das
cmp
mov
int
outsb
les
or
mov
inc
lcall
iret
or
sahf
in
xchg
leave
jb
sub
cld
cmp
sbb
aam
es
mov
clc
into
movsl
push
inc
loop
xor
lahf
jg
mov
sub
cs
icebp
xchg
scas
mov
xchg
scas
pop
imul
lea
dec
add
jo
mov
cmp
cmp
mov
test
loop
pop
lcall
ja
ficoml
rolb
fsincos
adc
xor
in
inc
in
dec
sub
and
mov
and
loope
jns
stc
mov
gs
sub
jbe
mov
aam
ds
or
jbe
sbb
mov
les
push
add
adcl
mov
push
pop
movsl
xor
xchg
aam
pop
outsb
ja
scas
cli
ljmp
ds
cmp
add
cmpsb
xchg
mov
or
sub
add
movsb
movsb
lock
ss
jl
jb
xlat
mov
bound
subb
fildll
fdivs
pop
mov
push
inc
cmp
sbb
movsb
lea
dec
cmpsb
pop
sub
mov
call
cmpb
orb
imulb
pop
lea
mov
xchg
imull
mov
shlb
lea
fwait
push
jg
cs
xor
xchg
push
lcall
dec
out
jnp
fwait
stos
cmp
jnp
mov
insl
inc
xor
scas
rol
or
sbb
adc
xchg
das
stos
xor
int3
pop
imul
add
cmpb
inc
test
test
icebp
ret
jo
sahf
jbe
ficomps
jne
or
inc
jmp
mov
sarl
pop
pop
arpl
jg
push
cmp
mov
addr16
jmp
scas
daa
or
mov
xchg
out
push
xchg
aaa
sbb
repz
cltd
mov
xchg
in
sbb
mov
jmpw
mov
add
dec
inc
mov
add
pushf
test
in
xchg
add
cmpsl
push
scas
iret
add
fwait
or
sti
sub
movsl
fwait
int3
out
xor
inc
hlt
mov
mov
addr16
rcl
pop
pop
ret
andl
cmpsb
addr16
clc
add
add
stos
jne
ds
fildll
dec
call
xor
pop
mov
jo
mov
add
xchg
in
adc
mov
insb
daa
push
test
push
pop
dec
daa
inc
cmp
dec
stos
mov
popf
test
cmp
push
inc
cmp
adc
push
into
idivl
or
cmpsl
lret
push
xchg
adc
cmp
sub
mov
jecxz
mov
repz
jb
push
adc
add
adcl
jle
xor
jnp
lret
test
int3
test
into
mov
push
fimull
nop
dec
lcall
sar
in
dec
mov
mov
cmp
fcmove
or
bound
pusha
push
cld
pop
scas
call
pop
jb
popf
inc
ret
testl
imul
pop
pop
fwait
cwtl
ss
sub
add
jl
and
lret
fnstsw
dec
adcb
mov
popf
popf
and
xchg
or
scas
lds
pushf
mov
movsl
out
bnd
leave
popf
mov
inc
mov
jp
mov
push
push
test
xchg
cmpl
sbb
jmp
push
aaa
xlat
stos
inc
out
cli
mov
dec
dec
and
popf
and
jns
dec
sub
mov
enter
jp
add
mov
xlat
imul
dec
xchg
pop
push
sbb
fucom
shrl
inc
or
push
or
jno
in
and
je
pop
pop
nop
std
inc
xlat
adc
scas
scas
clc
gs
scas
shrl
inc
inc
imul
adc
loopne
cmpb
add
mov
add
jnp
enter
ficoml
lahf
ljmp
push
adc
inc
xor
aaa
in
mov
je
and
pop
adc
pop
cmpsb
leave
cmp
lahf
push
xchg
ficoms
dec
mov
dec
lret
not
pop
call
je
fsubr
push
pop
dec
pop
out
fsubrl
dec
ds
in
loope
jb
xchg
aaa
lock
imul
jb
push
lock
pop
pusha
jl
mov
push
lods
lcall
mov
mov
pop
add
adc
and
xchg
icebp
shlb
pushf
repz
mov
repnz
in
in
pop
jp
test
bound
aad
shr
clc
cmp
cmp
pop
mov
push
xchg
or
jge
sub
xor
insb
push
push
sub
bound
mov
es
inc
aaa
stos
outsl
aaa
outsl
lahf
sub
push
adc
jecxz
jg
adc
xchg
push
mov
and
jbe
loopne
cs
and
sub
imul
loop
cmp
adc
shll
repnz
sub
fmull
cmp
mov
cmp
jbe
pop
add
xor
hlt
mov
lret
xchg
sarl
cmp
push
dec
jnp
mov
add
sub
pop
or
vcvtpd2dqy
push
cmpsl
out
lret
pushl
jns
repz
push
cmp
dec
cltd
out
icebp
flds
mov
push
js
fidivrs
push
or
shrb
ret
or
dec
sbb
cmpsl
andnps
jo
inc
sbb
cmpsb
cmp
ds
sbb
scas
sub
bound
pusha
mov
and
je
lds
imul
pop
mov
adc
sub
mov
sbb
add
mov
adc
xchg
jecxz
pop
cmp
repz
dec
int3
data16
out
mov
push
dec
cmp
push
mov
or
outsb
mov
cli
insl
or
dec
push
push
jecxz
loopne
jns
les
addb
mov
mov
xchg
add
push
pop
pop
sub
gs
adc
mov
jno
movsb
movsl
cmp
mov
lahf
int
mov
gs
ljmp
enter
xlat
adc
cltd
int3
push
es
push
add
adc
push
pop
cltd
inc
in
adc
mov
xchg
lock
imul
mov
push
fadds
lds
pop
add
loope
fldl
int
pop
jo
mov
mov
clc
add
mov
in
inc
push
push
stc
cmp
ljmp
pusha
add
int
ret
data16
mov
dec
fistpl
add
sub
loopne
mov
stc
lock
mov
mov
xchg
int3
mov
enter
pop
dec
pop
xchg
mov
xor
in
sbb
jno
add
bound
shrl
jmp
outsl
sbb
cmpsb
out
mov
xor
mov
or
in
mov
loop
xchg
push
dec
out
xlat
jg
adc
add
fstps
mov
add
or
pushf
add
cmp
xor
dec
pushf
dec
cmp
push
enter
push
jl
push
leave
xor
sbb
xor
jae
sarb
out
loopne
adc
and
jmp
xchg
mov
or
xor
cmpsb
cmpsb
xchg
cmc
sub
movsl
mov
mov
scas
test
and
add
adc
mov
loopne
fisubrs
je
subl
fdivrp
sar
sub
lods
jns
popf
rorb
into
out
not
xchg
dec
dec
add
or
in
or
sub
xchg
add
stos
mov
cltd
or
or
mov
dec
arpl
mov
push
lock
pop
fldl
cmp
push
lds
mov
or
add
rcrb
push
jge
or
andl
loope
mov
cmp
jae
insb
sbb
and
or
sbb
push
call
inc
je
ds
cld
shl
outsl
jg
or
ja
call
les
xchg
sbb
xlat
sti
addl
scas
xorl
mov
jge
push
xchg
lahf
cmp
cmpsb
int3
enter
jge
adc
jecxz
in
xor
push
enter
and
lods
xchg
xor
or
cmpsl
jo
out
jmp
mov
ss
cmp
jg
pop
dec
dec
fistpl
loopne
in
pushl
cmp
pop
xchg
mov
jns
push
test
imul
cwtl
enter
xchg
inc
push
jge
xor
cmp
pop
gs
repz
and
cmpsl
loopne
jbe
insb
frstor
xor
lea
push
or
nop
pop
inc
je
dec
xchg
sub
les
arpl
fcomps
xchg
cmp
mov
aas
push
push
cmpxchg
scas
cmp
adc
and
adc
stc
jnp
sbb
pop
push
mov
xchg
cmc
dec
pop
xchg
adc
lret
xor
in
sub
notb
add
or
sub
mov
xor
out
xor
mov
repz
xor
out
loop
cs
mov
bound
cmpsl
lods
mov
sub
ret
inc
stc
pop
and
jmp
xchg
dec
stos
jbe
xchg
rolb
and
add
lock
xor
ret
stos
add
pop
mov
jo
shll
clc
insl
divl
rolb
out
xor
push
adc
jge
inc
mov
add
add
out
fwait
sub
jge
or
xchg
mov
ret
xor
inc
xchg
push
jb
jg
test
xchg
mov
call
mov
imul
pusha
jnp
icebp
addb
fwait
xchg
ficoml
data16
in
sub
add
enter
call
push
jmp
xchg
lahf
push
ret
es
sub
adc
hlt
test
icebp
testl
mov
push
ds
xchg
mov
fs
movsl
dec
dec
or
or
and
add
jge
in
jl
adc
ja
call
pop
jo
jns
mov
cmp
fldenv
mov
pop
mov
sub
adc
and
xor
ror
sub
je
inc
mov
and
pop
ret
sbb
fldt
jne
or
movsb
mov
in
or
clc
sahf
imul
sub
mov
lods
xor
fs
inc
leave
and
mov
mov
fwait
out
adc
push
rclb
xchg
mov
sbbl
shlb
movsb
jno
mov
ficoml
pop
pop
jne
rcr
dec
fisubrl
mov
adc
jno
lea
les
mov
fwait
dec
mov
ja
pop
cld
outsb
js
cltd
inc
movsl
jno
or
sbb
sbb
sub
subb
lods
sbb
dec
xor
mov
bound
sub
cmp
gs
fs
sarb
adc
inc
es
test
lret
pop
sbb
std
fidivrl
sbb
and
shl
mov
cmpsb
cmp
pop
fs
jge
in
cmpsb
cmpsb
repnz
dec
movsb
lahf
mov
jne
cmp
jp
stc
sbb
cs
adc
or
cmp
cs
divl
mov
movsb
movsl
push
jmp
inc
and
sub
cmp
pop
jae
and
lret
daa
scas
pop
cs
xorl
mov
iret
mov
shl
push
idivb
arpl
shlb
cmpsb
sub
jb
pop
fcoms
lahf
ja
js
test
xchg
mov
cmc
ljmp
or
repnz
shrb
jae
xchg
inc
mov
sub
or
in
pop
mulb
jl
push
dec
sbb
test
outsl
divb
cmp
clc
jmp
fistpll
stos
sub
push
inc
adc
cmc
jmp
cli
cltd
inc
push
sub
in
push
loop
mov
add
bound
push
pop
sti
cmp
notl
xor
loop
jno
popa
sub
dec
inc
adcb
dec
adc
lret
push
rol
xchg
mov
dec
mov
xchg
cmc
cwtl
cld
repz
aas
ss
jmp
inc
stos
adc
cmp
and
imul
stos
jnp
cmpsb
push
cmp
mov
jle
sub
stos
ret
sub
and
adc
dec
mov
jnp
inc
sbb
adc
adc
mov
pop
cmpsl
push
mov
cmp
jno
sbb
xor
adc
pop
int
les
in
xorb
and
fwait
xorl
arpl
inc
aam
jge
loop
sub
repz
xchg
mov
add
into
dec
cmp
rcl
mov
xchg
xchg
pusha
inc
inc
cmp
je
sub
fsubl
push
cwtl
std
cltd
jbe
cmp
pop
jp
test
xchg
xchg
xchg
push
add
out
nop
test
lds
subb
xor
hlt
mov
xchg
cmp
jns
test
sub
mov
and
js
mov
pop
addr16
jmp
adc
add
inc
adcb
push
scas
push
cmpsl
sub
rcll
mov
cwtl
mov
mov
mov
push
or
clc
cmc
mov
fs
add
cmp
adc
push
inc
cmp
jmp
ret
test
test
sti
adc
js
xor
popf
jge
mov
mov
mov
shll
imul
xor
mov
fldl
lret
ljmp
cmp
fildll
dec
jge
lcall
jmp
jg
xor
cld
mov
mov
pop
sbb
mov
flds
dec
lret
es
cwtl
sub
inc
bound
icebp
inc
cmp
dec
enter
test
sub
cmp
dec
xchg
jl
xor
pop
sub
xchg
and
jge
rolb
jecxz
insb
mov
das
xchg
rclb
imul
xchg
mov
lret
pop
and
xchg
test
sti
stc
loopne
mov
mov
daa
cmp
ss
push
lods
fnstcw
dec
lods
ret
into
pop
fmul
mov
addr16
pop
or
scas
jae
movsl
xchg
in
jns
xorb
and
inc
xor
jp
mov
lea
insb
adc
fcomps
dec
lret
cmp
ret
out
popa
mov
mov
pop
aas
mov
sub
add
lea
pop
sub
cmp
loop
adc
mov
int3
push
or
stc
ljmp
andl
sbb
inc
cs
pushf
mov
or
subb
movsl
std
mov
loope
leave
stos
xor
mov
xchg
js
ss
stos
sbb
bswap
pextrw
xor
stos
inc
ja
jmp
pop
adc
adc
push
test
mov
stc
adc
in
fiadds
jbe
imul
pusha
pushf
mov
and
cmp
xchg
dec
and
mov
dec
push
mov
mov
pop
pop
aad
xchg
adc
push
lret
sahf
mov
orl
mov
ss
call
dec
jge
add
and
loop
jbe
pop
shll
xor
out
mov
xor
nop
movsl
inc
shl
xor
adc
fdiv
sbb
mov
dec
repnz
mov
mov
and
scas
dec
ficompl
push
cmpsb
mov
jae
outsl
push
out
imul
fmuls
xchg
sub
outsb
cltd
hlt
xor
mov
and
adc
add
inc
push
cmpsl
push
mov
mov
mov
arpl
or
sbb
xor
inc
mov
sub
mov
inc
or
inc
mov
shrl
enter
test
mov
cmp
and
cmp
xor
and
inc
sti
add
fsts
push
pop
or
imul
data16
testl
test
lret
xor
pop
and
call
add
xchg
xor
mov
es
imul
into
cmpsl
loope
das
je
cltd
xchg
mov
clc
test
adc
lret
arpl
mov
sub
or
test
push
push
in
enter
jno
jecxz
dec
loopne
pop
sub
out
lret
fcoml
sbb
sub
mov
mov
fdivrl
jnp
cltd
jne
jl
xor
ret
dec
jle
in
sub
orl
pop
or
fdivrs
adc
ror
addps
movsl
xor
pusha
std
out
leave
inc
out
imul
test
int
mov
cmp
mov
idivb
and
push
inc
mov
loop
stc
mov
arpl
sbbl
sbb
stos
sti
add
adc
in
in
addb
mov
js
je
out
push
fdivrs
xchg
inc
cmp
shr
dec
mov
int3
push
jmp
xor
xchg
pusha
pop
dec
test
add
adc
lds
idivl
gs
inc
mov
lock
mov
pop
mov
push
and
xchg
pop
add
lret
ret
aaa
imul
inc
push
lret
lcall
int
inc
adc
or
sub
cmp
push
cmpsl
cli
or
mov
jmp
sbb
das
and
xor
iret
repz
xchg
sbb
mov
sti
xchg
sub
adc
sub
mov
test
lds
lods
push
add
shr
cmpl
in
pusha
push
mov
pop
cmp
or
mov
cltd
mov
stc
ss
daa
push
sub
ret
fldenv
lods
inc
lock
mov
scas
test
gs
pushf
pop
sbb
lahf
aaa
pop
imul
jbe
mov
stc
es
push
pop
jnp
popf
adcb
subb
dec
cwtl
mov
cli
fstp
dec
mov
pop
mov
out
inc
pop
xchg
xorl
mov
pushf
inc
inc
add
arpl
dec
mov
clc
sbb
mov
call
cmpsl
sbb
xchg
movsb
xchg
xbegin
ret
add
aad
or
push
dec
mull
push
faddp
in
sub
jge
inc
push
pop
mov
sbb
mov
repz
and
pop
push
arpl
aas
outsl
aad
cmp
test
fisttpl
cltd
jge
mov
pop
rorl
ret
mov
mov
xchg
fxam
jne
mov
popf
nop
fdivs
add
add
push
dec
push
js
mov
xor
gs
int3
jl
enter
push
movsl
push
xor
pop
mov
fidivs
xor
ja
mov
xchg
cmp
xchg
inc
ja
lret
xor
dec
negb
bnd
jno
sbbb
jecxz
or
mulb
adc
add
pop
arpl
push
cmp
dec
fcmovne
repnz
adc
stc
dec
lods
inc
clc
jmp
dec
in
and
sbb
inc
shll
jnp
mov
xchg
test
lds
jnp
fiadds
mov
push
jb
xor
xor
mov
sbb
sbb
mov
cwtl
pop
mov
add
shlb
mov
and
arpl
cli
cmp
fisubl
push
cwtl
pop
lock
push
lcall
loope
aas
inc
add
popa
add
mov
js
call
mov
addl
pop
xor
adc
lds
adc
adc
bound
arpl
and
out
mov
mov
aas
mov
add
lahf
dec
in
scas
and
insl
adc
popl
ss
int
lea
mov
clc
imul
repnz
adc
cmp
inc
or
and
clc
clc
loop
les
dec
pop
push
dec
add
add
fcom
cmovno
jl
jno
fsub
pop
mov
bound
insb
scas
fidivl
and
add
arpl
sbb
add
ss
jae
lret
pop
inc
jne
aaa
gs
jle
mov
daa
inc
pop
sbb
fwait
clc
pop
or
fistps
std
mov
mulb
shrb
mov
bound
lods
in
push
mov
add
mov
mov
and
ret
mov
jmp
push
mov
fdivrl
dec
xchg
push
in
mov
js
int
les
mov
sbb
mov
dec
mov
dec
lret
sub
test
aam
insb
cld
jo
shr
push
inc
sub
gs
inc
mov
sbb
mov
dec
lock
push
into
mov
movsl
fstps
cmpsb
loope
mov
jne
pop
cs
jl
dec
pop
inc
ret
sahf
insb
gs
xchg
pop
out
jnp
sbb
jmp
mov
mov
xchg
pop
push
aaa
shll
and
sbb
jg
out
mov
out
repz
cmp
fninit
jg
test
and
clc
cmp
xchg
clc
insb
mov
push
jne
xor
mov
popa
jmp
subl
pop
mov
loop
lret
mov
adc
js
add
sub
orb
adc
lds
and
das
fidivrs
lcall
mov
fwait
inc
dec
pop
xchg
pop
shr
js
add
lds
mov
or
add
test
fisttps
ffree
cmp
dec
aad
cwtl
psubsb
je
sub
ds
mov
ret
xor
gs
daa
or
lods
pop
repnz
adc
mov
in
stos
jmp
clc
mov
jb
enter
xchg
xor
popa
sbbl
mov
sub
jge
mov
and
xor
ja
aaa
pusha
movsl
scas
sub
jno
rcrl
ficomps
add
fnstenv
sub
inc
je
or
mov
fisttpll
inc
loop
jl
lods
xlat
xchg
movsb
ss
aaa
xor
pop
push
xor
fstp
mov
movsl
jb
or
jg
jb
std
inc
cli
jg
adc
mov
push
add
into
mov
or
add
int
sbb
shlb
popf
xchg
sbb
mov
mov
js
enter
adc
inc
fsubrs
sub
adc
dec
icebp
je
push
adc
outsl
rolb
adc
sbb
and
test
adc
xchg
xchg
jle
rorl
ljmp
scas
xchg
dec
nop
aam
inc
xchg
stc
shll
int3
adc
insl
pop
jmp
fcmovb
out
fcomps
rolb
aad
cli
mov
in
pop
loope
mov
inc
adc
hlt
mov
jae
push
sbb
cmp
dec
lcall
bound
pop
andb
dec
shll
xor
cmc
ljmp
scas
cltd
sar
add
push
sarb
adcl
test
xchg
mov
pop
dec
push
out
jae
jne
pop
sarb
pop
test
add
imul
pop
jb
shrl
shlb
jbe
lds
mov
dec
xchg
mov
fsubl
lods
in
test
fsubs
and
dec
push
rol
sbb
clc
pop
aaa
mov
or
call
lds
dec
aam
jge
mov
cmc
out
testl
enter
mov
or
add
insb
mov
lock
jge
or
popf
rcrl
mov
mov
cltd
imulb
pop
pop
or
insl
mov
xor
sub
add
rcll
popf
xor
in
int3
add
pop
shl
mov
jle
arpl
inc
mov
sub
lods
mov
test
jmp
mov
andl
jle
cmp
mov
iret
and
or
scas
push
fucomi
xchg
bnd
test
jne
and
mov
or
or
lret
lahf
push
in
xchg
push
cmp
shl
in
cmc
jnp
jnp
jne
es
pop
and
repz
cmp
out
shl
push
scas
xchg
mov
scas
sub
ret
mov
pop
xchg
sbb
mov
es
jecxz
shrl
lret
sar
xor
mov
dec
xlat
js
mov
rorl
cwtl
notl
mov
mov
push
xchg
mov
dec
xchg
inc
jl
cmp
call
into
imul
sbbl
sqrtps
pop
ds
cmp
or
mov
cmp
push
sub
add
push
repz
cld
roll
cmp
xchg
add
jbe
push
lds
subl
and
mov
data16
hlt
mov
outsl
or
sarl
jp
or
aad
pop
ds
out
dec
out
cltd
sahf
jp
and
icebp
notl
push
dec
in
mov
je
scas
mov
ljmp
ja
lock
dec
insl
outsb
dec
lahf
sar
cli
or
mov
push
mov
jl
add
xchg
and
fwait
mov
sub
stc
dec
std
loop
stos
sti
adc
sbbb
stc
mov
dec
mov
shll
sar
mov
sahf
dec
outsb
jge
add
fsubrs
lock
inc
mov
lahf
dec
cwtl
orb
mov
mov
or
dec
repnz
and
mov
ficoml
xchg
xchg
dec
test
dec
lock
add
aaa
cmp
jns
dec
js
xor
jb
ss
xor
mov
mov
cli
mov
psrlq
dec
adc
inc
in
push
in
imul
mov
cwtl
push
ljmp
and
mov
mov
insb
fs
pop
jge
mov
test
in
loop
push
push
in
add
fwait
mov
pop
push
dec
shll
jp
lret
mov
ret
out
or
insl
arpl
lds
repnz
pusha
dec
sarl
negb
push
jge
repz
mov
mov
xchg
rorl
mov
sbb
cwtl
inc
clc
cld
lods
xor
mov
add
lods
out
in
mov
pop
add
inc
mov
shll
push
out
mov
mov
or
pop
shr
sub
jecxz
add
movsl
mov
mov
dec
cmp
or
cmpsb
orb
add
mov
jle
cmovae
mov
pop
xchg
jecxz
xchg
lds
aaa
rclb
sbb
movsb
pushf
sbb
repnz
jmp
pop
mov
nop
push
in
aad
aad
add
repnz
mov
jbe
pop
inc
cmp
inc
shrb
das
xor
in
xor
adcl
pop
in
lods
adc
aad
movsb
mov
mov
jno
pop
inc
shrb
xchg
cld
enter
lahf
in
iret
leave
insb
test
sarb
push
mov
or
data16
lret
fidivs
int3
pop
das
cmc
fdiv
jle
ljmp
dec
cwtl
mov
mov
lods
xchg
out
out
xchg
outsl
cs
pop
pop
and
rcrb
mov
sbb
jl
mov
and
adc
jo
inc
push
cs
pop
insl
cmpsl
jns
iret
inc
sub
sub
mov
and
sbb
and
addl
or
sbb
xor
dec
cmp
outsb
mov
inc
mov
or
or
jo
push
imul
test
in
mov
or
outsb
jmp
das
add
push
pop
adc
nop
fistpl
xorl
aaa
jo
out
imul
addl
cmp
lret
repnz
cli
data16
movsl
test
xchg
bswap
pop
jbe
rorb
xor
outsb
push
xchg
leave
aas
test
push
mov
mov
iret
xchg
inc
dec
cmc
mov
cli
mov
inc
rcr
loop
jecxz
sub
fstpt
mov
movsl
cs
push
in
addr16
xor
and
mov
cmp
cmp
jne
pop
xor
add
xchg
test
jecxz
aas
xor
add
loopne
test
nop
cmp
pop
fsubl
push
xchg
pop
cld
sarb
sub
mov
pop
push
inc
sub
js
mov
jge
mov
in
dec
mov
cmp
fidivrs
and
jns
outsl
lret
test
adc
jne
aad
stc
popa
test
out
addr16
jns
ud2
pop
fcmovnb
movsb
aaa
test
aad
or
ret
insb
jl
mov
loop
enter
repz
arpl
adc
push
movsl
shr
mov
jle
sub
out
enter
aad
sti
cmp
jno
fwait
jbe
or
xor
dec
jecxz
adc
sbb
ret
stos
test
add
mov
popa
test
int
jmp
lret
mov
jo
mov
es
mov
test
je
jb
daa
out
fldt
mov
fadds
mov
lcall
xor
lret
push
mov
int
mov
cwtl
in
mov
dec
dec
fiadds
xchg
sbb
cltd
stos
add
out
insl
adc
mov
imul
inc
mov
cmpsb
add
sbb
sub
mov
lods
cmc
mov
pop
adc
lods
mov
aaa
push
dec
xor
testb
sub
std
test
xor
filds
dec
insb
push
mov
bound
mov
inc
push
icebp
add
dec
jb
cmc
fwait
ret
cs
pop
mov
lret
in
xchg
lock
adc
addr16
jo
jle
mov
out
jnp
pop
test
das
scas
scas
das
push
mov
les
scas
das
push
push
cmc
aad
pushl
cmp
or
aam
aaa
push
sarl
ret
icebp
pop
inc
dec
pop
mov
test
dec
mov
movsb
xchg
in
mov
dec
sub
mov
adc
lahf
aad
mov
xor
pop
or
or
ljmp
loopne
shlb
dec
mov
popf
out
pop
gs
mov
pop
int3
xchg
add
inc
enter
out
pop
jns
pop
pop
cmp
inc
leave
fstps
adc
into
lahf
stos
jb
sbb
jne
inc
subb
pop
dec
push
cwtl
mov
mov
cmp
mov
sub
mov
xchg
push
push
popa
arpl
sbb
and
inc
pop
cmc
mov
loopne
imul
adc
sbb
jns
cmp
lcall
mov
mov
sbb
add
shrl
cltd
mov
pop
out
and
mov
jg
into
pop
es
or
stos
cmp
testl
xchg
dec
sbb
ret
ret
or
lahf
cwtl
shr
out
inc
std
pop
inc
int
push
daa
jae
sub
mov
inc
cmp
sbb
push
fsub
cmp
xchg
outsb
stos
mov
js
mov
push
arpl
mov
clc
cmp
add
outsl
mov
cltd
sub
sub
icebp
enter
movsb
mov
or
dec
jle
sub
daa
mov
clc
pop
and
lahf
inc
push
ret
fcom
mov
movsl
cmp
or
adc
int3
jae
mov
push
xor
or
push
ljmp
ja
xor
lea
movsl
xchg
lcall
mov
repnz
push
jl
sub
lock
std
dec
sbb
mov
and
insl
inc
sub
push
aas
dec
pop
push
call
adc
mov
xchg
pop
arpl
or
pusha
ror
xorb
repnz
test
xchg
ret
stos
enter
adc
push
into
gs
mov
daa
push
add
fcomps
sbb
ja
loope
pop
outsb
pop
mov
xchg
mov
pop
mov
pop
add
push
pop
lods
ljmp
sub
dec
clc
mov
and
cmpl
lret
xchg
call
imul
sti
adc
repnz
imul
push
push
pop
clc
mov
cld
sub
sub
sbbb
out
dec
jg
insl
clc
adc
cwtl
xor
mull
adc
clc
outsb
lret
cmp
lods
fisubrs
adc
and
in
mov
sub
jecxz
int
add
dec
addr16
and
cmpsl
inc
fimull
in
and
inc
pop
inc
fsubs
mov
rcl
inc
mov
sbb
pop
shl
mov
out
xor
frstor
aad
mov
xchg
xchg
adc
and
cmp
sbb
lds
fwait
mov
dec
clc
sti
xorl
clc
fbld
lret
pop
pop
aas
xchg
cmp
nop
push
and
inc
push
mov
fidivl
mov
sub
hlt
icebp
xor
jge
cli
xchg
pop
push
pop
or
sub
xor
adc
jg
shl
mov
outsl
sarl
sub
mov
xlat
and
fwait
popa
mov
hlt
sub
pop
insb
pop
aas
sti
adc
das
lea
fwait
cmp
and
jp
insb
sbb
xchg
fisttpl
and
std
dec
jmp
mov
or
test
sbb
pop
daa
mov
xor
out
xor
and
mov
cli
pop
or
jp
sbb
adc
xchg
ljmp
xor
cli
lods
jl
xchg
jmp
sbb
out
dec
aad
test
add
xchg
and
and
pop
in
jns
notl
push
fucomip
lret
fnstsw
pop
pop
ss
push
stc
dec
sbb
xchg
cwtl
stc
lahf
popf
push
std
cmp
cs
push
dec
jns
or
not
icebp
fsts
dec
push
push
rol
cwtl
clc
pop
mov
lods
fsubr
lock
jae
lahf
and
mov
and
xchg
xchg
xor
add
jl
push
je
xor
jle
mov
sbbl
jle
push
mov
xchg
das
inc
jne
adcl
das
pop
xor
dec
bound
shll
pop
insb
test
jne
stos
push
das
push
in
cmp
dec
mov
cmc
add
insl
or
bound
add
lahf
fsubrl
cmpsb
sub
add
mov
cli
call
xchg
movb
lods
or
add
into
mov
mov
push
pop
ret
xchg
outsl
repnz
dec
xchg
enter
push
dec
push
call
inc
lds
add
and
aad
int
inc
out
lods
daa
ljmp
gs
nop
gs
test
xchg
add
adcl
xor
dec
rolb
dec
pop
mov
push
scas
mov
out
push
mov
ja
jnp
dec
push
std
cmp
aaa
repnz
push
jbe
mov
mov
dec
mov
fisubrl
fldt
jnp
or
adc
cld
cmp
into
or
in
xchg
mov
jo
xlat
mov
fistps
shll
mov
add
outsl
dec
iret
push
rorl
jecxz
mov
mov
or
pop
divb
cltd
std
mov
and
inc
les
cmp
es
adc
outsb
add
ja
mov
dec
test
out
add
ljmp
add
adc
shlb
in
mov
mov
add
cmc
gs
push
xchg
fs
add
movsl
ss
pop
int
iret
fcoms
pop
arpl
mov
addr16
fadds
xchg
mov
stos
xchg
aad
and
jg
mov
cmpsb
mov
je
testb
adc
popa
and
inc
mov
imul
mov
mov
in
mov
lds
mov
inc
add
sbb
pop
pop
rclb
or
stc
out
prefetchwt1
add
aad
pop
jl
or
imul
fsubl
ds
mov
pop
sbb
pop
stos
int
sub
aas
or
pop
and
bound
xchg
inc
add
cmpsl
jg
lret
rcrl
ds
xorl
add
ret
pop
shrb
pop
adc
mov
stos
in
js
mov
insl
les
sub
and
bound
lea
pop
xchg
fstl
adc
ss
data16
and
fadds
mov
adc
lods
mov
aam
lahf
inc
jae
xchg
lods
das
xlat
js
lods
push
push
insb
mov
test
fnstenv
mov
jmp
in
sarb
aaa
or
popf
outsl
popf
pusha
pop
mov
fsts
fbld
movsl
scas
std
xchg
or
fcoms
lods
orl
mov
in
fcmovnbe
push
js
and
mov
add
mov
hlt
mov
dec
jecxz
push
mov
pop
dec
arpl
cmp
movsl
sarb
sbb
je
cmpsl
xor
je
sarb
loopne
dec
stc
pop
rolb
dec
mov
inc
push
shl
jmp
out
mov
scas
xchg
and
lahf
js
mov
lock
lret
test
xchg
test
jge
mov
lds
cmp
ficoms
cmp
shlb
es
into
mov
lods
mov
pop
or
dec
pusha
xor
cmp
in
pusha
xor
sub
adc
xchg
sbb
jge
add
cli
lcall
popf
mov
sti
test
or
mov
faddl
pop
cmpsb
mov
mov
sbb
push
ret
or
nop
sti
pop
mov
mov
stos
push
inc
jmp
mov
je
sti
mov
push
xchg
cli
lds
rclb
push
jb
lods
sti
frstor
and
shll
out
or
xor
push
ret
imul
jl
adc
std
cmp
and
push
fsub
jns
xchg
mov
jns
ret
sub
and
cmp
repz
jo
adc
xchg
jmp
and
movsb
or
cmp
ljmp
clc
roll
mov
mov
mov
cmp
insl
cmpsl
sub
test
in
lds
decb
aam
mov
outsl
jge
or
cmp
push
push
stc
push
repz
dec
movsb
pop
push
das
pop
xor
sub
push
std
jo
inc
jp
and
js
es
or
imull
mov
pop
scas
pop
daa
fldl
sbb
insl
mov
mov
sbbl
adc
lock
jmp
clc
cld
std
xchg
cmp
lea
sti
jne
push
push
divb
das
mov
into
cmpsb
mov
sbb
pop
outsl
dec
cmp
shll
jae
shl
or
add
add
push
aas
push
sub
std
stos
dec
sub
and
testb
sarb
fldenv
out
pop
mov
cs
shlb
mov
test
mov
sbbl
mov
or
dec
daa
test
dec
clc
stos
adc
stos
call
adc
cmp
mov
out
es
jns
xchg
xchg
xchg
cmp
dec
sahf
cld
jg
add
xor
flds
xorl
xor
loop
mov
in
inc
test
data16
std
cmp
in
sub
sti
sar
lock
pop
and
xlat
imul
mov
stos
test
mov
push
ret
mov
pushf
stc
push
cmp
lahf
cmp
sbb
in
call
scas
pushaw
add
sub
mov
mov
mov
aam
pop
fcomps
and
pop
scas
loop
and
mov
imul
sbb
dec
xchg
jl
push
out
sub
jo
out
push
adc
mov
sbb
jb
pop
xchg
pop
js
clc
sub
repnz
sub
das
clc
clc
xchg
mov
fnstcw
leave
mov
mov
push
cmc
je
cli
pop
out
out
inc
imul
notb
sahf
pop
cmp
leave
cmc
cmpsb
aam
lods
inc
xchg
adc
lret
cmpsb
cmc
sbb
fsubrp
lret
mov
mov
mov
lods
icebp
sub
stos
mov
push
outsb
rcrl
xchg
mov
sti
mov
xor
loopne
push
les
or
mov
push
fisttps
gs
int3
movsb
xor
inc
sti
add
mov
arpl
dec
enter
jbe
and
and
cltd
inc
pop
test
std
adc
jns
add
rorl
jae
std
sub
sub
pmullw
inc
mov
cwtl
jb
pop
mov
scas
addb
in
sub
push
call
sub
lods
mov
and
cmpsl
int
mov
je
mov
sbb
inc
cmp
xor
sub
cmp
push
mov
jg
fildl
out
pop
add
inc
push
and
or
xchg
jg
test
ficoml
xor
or
mov
in
push
sbb
sahf
jecxz
cmp
mov
or
jo
xlat
scas
push
or
pusha
mov
add
or
jnp
mov
cmp
push
push
shrl
pusha
adc
add
mov
jecxz
sub
loop
xchg
fstp
pop
xor
lcall
xor
mov
push
subb
mov
sahf
push
sbb
incb
pop
out
pop
push
pop
int3
pop
psubd
or
je
pop
mov
mov
insl
das
adc
cmp
popa
mov
mov
push
cltd
repnz
sub
mov
int
stos
add
jns
outsb
push
int3
mov
cmp
jo
pop
push
fistl
into
cmc
lods
in
jl
inc
setge
adc
xchg
les
mov
xor
mov
outsl
mov
xchg
add
xchg
in
cmpb
fsubl
sub
bound
jle
cli
aam
add
pop
sub
out
push
hlt
pop
adc
cmp
movl
pop
sbb
test
mov
repz
fdivrs
inc
in
fwait
rcr
loopne
jno
movsl
cwtl
jp
stc
pusha
cmp
cmpsb
sbb
pop
mov
test
jnp
inc
xchg
xchg
popa
adc
inc
sbb
pusha
pop
lea
mov
and
out
cltd
fwait
push
les
add
dec
add
iret
std
shll
mov
imull
xorl
loope
push
sub
int3
push
arpl
sbb
pop
frstpm(287
cltd
movsb
fidivs
jnp
test
enter
adc
adc
sbb
popf
mov
jns
jecxz
adc
jle
inc
mov
inc
repz
jnp
jmp
sti
orl
cmpsb
or
rcr
sbb
xchg
sbb
or
popw
cmp
sbb
ja
add
mov
push
sub
xchg
xchg
call
loop
jne
ret
cmpsl
mov
inc
mov
into
push
mov
mov
inc
push
sub
push
jge
into
sbb
pop
aad
jecxz
loope
fcomps
lds
cmpsl
lret
loope
test
sti
inc
in
gs
pop
out
shrb
push
mov
roll
js
sub
insb
arpl
cmpsb
into
inc
jns
repnz
push
sti
cld
pop
xor
stos
jmp
es
sbb
add
mov
push
inc
shrl
ret
push
mov
sub
fstpt
fiaddl
xchg
sbb
xchg
pop
fsubrl
test
stos
dec
imul
neg
jns
pop
mov
push
xor
cmp
jae
mov
loope
xchg
inc
inc
inc
outsb
push
xchg
arpl
jae
cwtl
xchg
cmpsb
addr16
push
cmp
inc
ja
fnsave
rcrb
out
mov
sub
fildll
mov
fsubr
outsl
clc
lahf
mov
pop
into
test
mov
cmp
mov
xlat
bound
inc
push
cli
mov
in
jecxz
lea
and
push
jo
sub
ret
pop
out
js
adc
shl
push
xchg
sub
in
jo
in
sahf
mov
outsb
mov
shr
fildl
mov
subb
lret
pop
add
es
jp
subb
int
test
sub
mov
incl
pop
mov
cwtl
cli
or
test
popa
cmp
dec
push
adc
dec
aad
fcmovu
and
xchg
loop
je
and
sbb
pop
add
pusha
mov
cwtl
push
dec
test
xchg
xchg
push
jae
inc
test
fcompl
out
div
pop
inc
mov
inc
dec
dec
add
push
pusha
mov
jge
mov
arpl
in
cli
inc
out
push
in
add
mov
addb
cmpsb
rcll
sbb
fxch
mov
rorl
lods
arpl
jmp
adc
or
dec
sbb
push
pop
push
out
and
stos
fmull
insl
test
scas
sub
jo
push
enter
cltd
js
fidivrl
cmp
dec
mov
cmpsl
loop
mov
dec
nop
cs
js
fwait
cmp
xchg
xor
adc
dec
jg
push
inc
push
fxch
and
lock
mov
adc
push
xor
mov
cmp
out
cmp
mov
lods
jno
mov
cld
mov
lea
scas
dec
scas
outsl
loop
mov
cmp
xlat
push
int
cmc
pop
push
test
push
test
call
pop
frndint
cli
inc
mov
or
lret
cmc
and
cmp
inc
jge
or
mov
fdivrs
adc
test
xor
popa
sbb
lahf
imul
movsl
aas
cmp
inc
push
push
call
adc
leave
xor
adc
imul
arpl
repz
ss
out
pushf
adc
mov
and
add
data16
mov
and
jne
inc
and
in
shrb
jecxz
or
inc
sub
int
push
push
jmp
jae
push
push
pop
push
pop
mov
xchg
stos
and
mov
mov
lock
xchg
test
add
loope
loope
dec
jo
xor
adc
aam
in
dec
addl
pop
jmp
jl
jbe
call
fcomp
jnp
pop
ss
mov
cmp
stos
adc
shlw
inc
jb
inc
pop
fcoml
dec
pop
inc
dec
loop
add
pushf
xchg
inc
cmp
in
and
adc
jge
call
xor
sbb
out
out
jge
mov
pop
jb
fidivs
push
pop
adc
loope
or
xor
sbb
push
test
pop
scas
aaa
pop
rorb
and
sbb
cmp
decb
push
xor
cmp
nop
out
jno
out
xor
xor
or
mov
test
movsl
add
sub
mov
inc
cmpsl
dec
add
inc
lods
into
mov
inc
mov
dec
in
xchg
pushf
jae
loopne
pop
arpl
imul
in
out
mov
cwtl
cmp
out
push
dec
push
jbe
rcll
add
sub
leave
dec
test
add
out
xlat
dec
shrb
mov
pop
sub
jg
shl
ds
mov
adc
push
mov
adc
jp
into
jle
arpl
jno
movsl
int3
jae
iret
add
or
sti
and
ljmp
jle
mov
push
or
xlat
cmpsb
xor
push
jne
sbbl
mov
fs
cmp
push
cld
lahf
jl
dec
jno
sub
mov
orl
clc
mov
mov
cmpsl
add
or
paddb
sbb
pushf
daa
popf
jmp
in
daa
shrb
mov
sti
dec
pop
shl
test
xor
or
mulb
mov
mov
loope
scas
stc
push
adc
cltd
in
push
ret
shll
adc
push
mov
cmc
xchg
add
mov
inc
xchg
mov
gs
and
cmp
cmp
xor
stos
pop
outsl
stos
gs
mov
shll
fidivl
sub
lcall
jp
adc
fbstp
sbb
xchg
aaa
jo
push
aam
cltd
scas
jecxz
mov
inc
jmp
lock
push
jb
or
out
rcll
popa
ret
xchg
nop
xchg
xchg
inc
jmp
xor
xor
jg
push
mov
xor
subb
std
xlat
gs
sub
inc
adc
je
cld
cmpsb
fdivrp
lea
dec
cwtl
or
mov
push
dec
subb
cmp
sbbb
mov
rcrb
pop
lcall
mov
int
pop
ljmp
roll
xchg
and
fs
jnp
sbb
enter
aad
popf
dec
fists
jno
wbinvd
mov
je
pushf
xor
arpl
sub
inc
in
pop
push
mov
dec
or
cltd
xor
cmp
pop
cmp
sub
xor
pop
jne
jns
gs
and
xchg
fcoms
in
scas
ja
or
repnz
adc
cmpsb
lcall
xor
push
dec
imul
push
icebp
sbb
sti
popf
mov
inc
fadds
pop
xor
enter
inc
push
mov
icebp
lea
push
or
add
ds
jg
ds
add
inc
push
pop
add
mov
mov
out
dec
push
mov
mov
xlat
pop
out
test
sub
pop
sub
clc
pop
jo
add
pushf
mov
rcrb
push
adc
push
aad
outsl
decl
and
jge
mov
aam
dec
clc
shrl
pushf
pop
pop
enter
subl
out
xchg
jle
or
das
decb
inc
add
mov
push
and
or
popf
lods
clc
pop
mov
pop
loope
jbe
jne
add
or
inc
adc
mov
sub
xor
mov
scas
cmpb
andl
push
mov
mov
sub
add
movl
xor
dec
add
mov
lcall
sub
mov
inc
inc
xchg
sahf
stos
lret
and
mov
inc
mov
mov
dec
sbb
out
lcall
adc
repz
movl
movsb
lahf
arpl
ret
in
jecxz
pop
mov
mov
gs
mov
xor
or
fidivs
or
out
in
sbb
add
jmp
dec
popf
adc
adcl
add
rcr
jecxz
inc
adc
sub
test
jecxz
lods
xchg
testb
mov
and
pushf
loope
push
daa
jmp
adc
movsb
push
fsub
out
sub
jne
movsb
dec
xor
add
mov
push
out
lods
stos
rorl
andl
jmp
and
std
sbb
fstps
mov
fists
or
enter
aad
sahf
imul
adc
bswap
lret
mov
stos
xchg
adc
fucom
aad
cmp
jbe
inc
insl
xchg
sbb
mov
cld
push
sub
dec
popf
gs
fnstsw
shrl
outsb
in
out
lea
cwtl
mov
mov
cmc
pop
outsl
cmp
bound
jp
repz
inc
add
cwtl
adc
icebp
loope
pop
mov
sub
sbb
dec
scas
aaa
ficompl
gs
loop
pop
icebp
rol
mov
ret
jle
add
dec
jmp
cmp
aad
shr
mov
das
sahf
pop
xchg
xchg
xchg
jl
rolb
push
fcmovu
sbb
pop
ds
lahf
into
ret
shl
mov
pop
notl
push
insl
sbb
lds
in
xor
inc
xor
not
cli
jae
mov
push
fiadds
test
add
fildl
jae
mov
jnp
sbb
mov
mov
push
fisttpl
or
fidivs
ja
test
dec
sub
add
adc
inc
inc
pop
mov
push
popl
pop
mov
cmp
fmuls
movsb
jb
push
movswl
rclb
mov
call
mov
out
xor
and
arpl
sbb
lret
sub
xchg
repnz
mov
fbstp
rorb
mov
lea
inc
mov
pop
test
out
dec
in
inc
ljmp
loop
cmp
in
cmpsb
xchg
in
in
sub
pusha
sbb
xchg
mov
leave
jl
add
sub
xlat
cwtl
loop
push
inc
inc
bound
lock
add
or
mov
fldt
popf
push
cmp
xor
out
aas
ret
lahf
sub
es
std
push
inc
push
fnstenv
loop
mov
push
push
fidivrl
push
les
out
mulb
cli
mov
dec
fstps
push
fxch
mov
test
mov
fnstcw
mov
cmp
mov
icebp
mov
bnd
sbb
jae
adc
ljmp
jne
cmp
aad
aad
test
ja
sub
push
inc
dec
sbb
mov
cmp
test
inc
mov
maxps
push
pop
pop
or
popf
or
out
xchg
fs
aaa
std
out
addl
pop
sahf
in
push
push
mov
aaa
pop
mov
cmp
cmp
pushf
pop
mov
push
mov
sub
add
jle
mov
lock
daa
xor
pop
std
jae
stos
mov
lret
outsb
jl
sbb
or
jp
sbbb
jp
inc
push
div
repz
xchg
out
inc
cmp
pop
push
test
out
in
mov
repz
aaa
pop
sarb
scas
dec
lods
jo
and
lahf
push
dec
jg
xchg
sub
push
push
int3
xchg
add
mov
aam
out
pusha
mov
loop
push
push
fldt
je
or
xor
leave
dec
cmpsl
pop
movd
shrl
fiadds
icebp
adc
cmpsl
popf
add
es
xlat
insb
das
jg
and
dec
pop
mov
ds
scas
outsb
call
adc
dec
sub
mov
test
or
lds
mov
sti
sbb
adc
pop
sub
xor
lret
xorl
icebp
xlat
and
stos
push
jbe
ret
cwtl
addb
sbb
ret
sub
dec
or
in
mov
filds
mov
in
jbe
push
cld
sahf
sub
ds
mov
inc
adc
sbb
or
sti
mov
out
in
insb
add
xchg
movsb
rep
mov
dec
or
and
int3
sbbb
pop
xchg
xlat
call
mov
out
push
fstp
mov
xchg
rcll
dec
fstpl
cmp
mov
sahf
xchg
insl
lea
sbb
pop
add
dec
ret
mov
pop
lods
mov
ja
sbb
or
lret
and
dec
push
faddl
rcrl
lea
jbe
dec
loopne
fcoms
pop
xchg
push
adc
sbb
pop
adc
fdiv
sbb
stc
mov
mov
push
sbb
test
imul
stc
jp
call
bound
dec
mov
cmp
int3
insb
ret
insb
jne
adc
repz
jecxz
cmc
mov
xchg
jl
ret
stc
cmpsb
inc
out
call
rcll
sub
filds
dec
mov
sti
andl
xchg
pop
mov
repz
fstl
jo
inc
out
mov
sahf
dec
sbb
add
cmp
js
jge
jl
clc
popa
stc
in
mov
dec
cwtl
int3
cmp
pop
xor
out
push
outsb
xor
adc
stos
jne
mov
cmp
divb
jbe
cmpsb
xor
push
aam
das
leave
leave
xchg
cmp
mov
bound
loope
outsb
sub
jb
mov
inc
bound
test
sti
in
adc
sbb
rclb
jo
sub
test
xchg
xchg
cltd
and
in
gs
or
test
mov
jae
cltd
mov
ja
push
xor
stos
add
ret
pop
pop
xchg
push
test
popa
daa
mov
cmp
test
dec
or
cmp
and
adc
and
mov
cld
lcall
mov
push
cmp
jno
dec
dec
pop
scas
bound
js
jnp
mov
push
push
sbbb
frstor
mov
fnop
gs
loop
arpl
sbb
mov
outsl
sub
jnp
int3
and
into
mov
lcall
cmp
mov
lret
mov
in
hlt
push
add
push
push
xor
ja
das
scas
adc
xor
inc
push
cmpsb
jg
iret
les
cmp
mov
dec
sub
cli
dec
sbb
jmp
ss
aad
mov
in
ret
jbe
je
mov
and
mov
mov
jno
fcmovnbe
or
mov
add
popf
adc
pusha
push
call
dec
sub
push
pop
push
pop
jg
mov
std
jp
or
xor
or
out
mov
and
sbb
sbb
mov
lods
into
mov
fwait
push
pop
cwtl
mov
cli
jp
pop
lods
xorb
test
and
push
pop
xchg
test
xchg
mov
daa
inc
cmpsl
pushf
daa
pop
repnz
fistps
in
dec
mov
sub
mov
ret
fcoml
imul
out
pop
push
dec
test
fstpl
lahf
loope
cld
jb
repz
mov
dec
adc
das
push
sbb
adc
cmp
fldl
out
std
adc
cli
cwtl
jmp
nop
lret
in
jecxz
ucomiss
dec
add
mov
push
and
mov
push
out
jae
jbe
sbb
adc
lcall
pop
dec
in
sub
and
and
mov
testb
fwait
push
in
mov
call
sub
jp
adc
mov
ss
pop
or
xor
rcll
adc
inc
stc
mov
ficoms
mov
push
sub
or
add
dec
xchg
clc
push
dec
into
sub
cmp
pop
loopne
push
pop
outsl
xlat
iret
xor
or
inc
mov
shll
aas
dec
enter
sub
sub
lahf
mov
cmp
test
sub
incl
and
into
mov
fidivl
cmp
inc
lahf
fcompl
fmul
arpl
jl
push
iret
cmpsl
scas
test
or
rol
and
int
sub
cmp
out
xor
shlb
pop
std
shl
and
pop
clc
push
add
gs
jle
push
out
cli
mov
leave
daa
jo
call
pusha
xor
inc
cltd
ret
or
insb
and
ss
pop
jbe
fcompl
jle,pt
jl
xlat
in
add
popa
mov
lods
mov
pop
mov
bnd
pop
sbb
and
seta
xchg
push
and
rclb
fstpt
jno
fidivl
add
sub
nop
lcall
cmpsb
jmp
jmp
and
scas
xchg
or
pusha
xor
or
xchg
out
cmpsl
pop
inc
dec
xlat
push
stc
es
xchg
xchg
mov
xor
fiaddl
in
sbb
stc
add
aad
sbb
test
popf
mov
cld
inc
xchg
add
in
pop
fcmovnb
lcall
je
mov
mov
popf
xlat
mov
and
popf
cltd
xor
pusha
fmull
mov
mov
jmp
mov
mov
add
fdivr
add
sub
and
cli
xlat
inc
es
test
les
cld
cltd
sbb
mov
mov
mov
mov
decl
jnp
lock
scas
pop
js
aaa
outsl
pop
jns
repnz
sbb
bound
sub
dec
scas
mov
mov
inc
cmp
or
and
lds
pop
inc
mov
in
or
sahf
jb
loopne
mov
into
aaa
fdivs
test
or
xor
in
scas
dec
xchg
jp
roll
xchg
bt
das
pop
add
mov
cmpsl
fimull
xchg
ljmp
lahf
add
or
cli
push
or
sti
pop
aam
sub
dec
cs
mov
ja
lcall
xlat
inc
xchg
and
sbb
scas
in
lds
ss
loop
in
mov
mov
test
fdivrs
js
ret
stos
sti
rcrb
mov
pop
arpl
or
outsl
xchg
mov
jae
int
inc
sbb
fs
cld
lds
ss
outsb
sub
mov
jecxz
scas
mov
xchg
lds
lock
pop
dec
xchg
xchg
pop
scas
jl
or
xlat
mov
cwtl
data16
mov
pop
adcl
xor
repz
mov
sbbl
popa
mov
outsl
add
jl
xor
mov
inc
sbb
jg
mov
popf
adc
cmp
adc
icebp
pop
pushfw
add
test
push
test
lods
pusha
pop
fcoml
insl
lahf
pop
mov
fldcw
pusha
mov
rcr
pop
stos
insb
sub
leave
cmp
or
push
dec
inc
mov
lret
out
or
push
xor
cmp
inc
xor
lahf
cmpb
shlb
sahf
aam
inc
in
push
mov
iret
jne
and
mov
rcll
add
test
pop
into
push
cwtl
push
pop
jmp
xchg
es
xchg
cwtl
pushf
test
call
xchg
inc
pusha
inc
jmp
ljmp
pop
pop
or
sub
adc
cmp
incl
test
lret
mov
jae
sub
sbb
repnz
cli
or
push
es
pusha
or
inc
push
push
sub
mov
sbb
in
scas
aam
out
mov
jge
daa
inc
je
test
jl
cmp
mov
add
jno
cmp
leave
pop
sti
sbb
adc
adc
outsb
and
mov
and
cmp
mov
mov
pop
xchg
ljmp
inc
dec
jecxz
jl
imul
pop
push
sbb
add
hlt
adc
test
test
cmp
lock
xlat
aam
ret
daa
mov
addb
and
mov
mov
mov
fs
lock
fsubrs
add
xchg
push
repz
mov
repnz
mov
pop
sbb
daa
aaa
xchg
pusha
sub
jbe
jae
jle
fs
fnstcw
cmpsb
int3
push
lock
and
negl
loop
mov
dec
pop
jo
addl
dec
mov
orl
xchg
or
push
shll
jne
jnp,pn
jnp
loop
sarb
push
sbb
testl
je
cltd
test
lds
and
mov
mov
sub
push
push
test
and
jecxz
xor
jmp
sub
stos
stos
out
mov
les
lcall
out
xlat
add
add
and
lods
es
or
pop
mov
jmp
jnp
jl
bound
mov
movsl
xor
andl
es
sbb
xchg
clc
lds
call
scas
jle
fwait
jmp
inc
cwtl
xchg
pop
or
ljmp
xor
outsb
cs
fdivrp
cmc
ja
adc
push
adc
mov
jmp
sarb
leave
fldcw
fcoml
mov
mov
sbb
xor
mov
testb
lods
mov
pop
les
cli
mov
std
pop
out
int3
xchg
aad
bound
je
dec
xor
push
push
cli
jg
test
shrl
cmp
add
add
movsl
lods
gs
mov
bswap
js
mov
mov
push
xchg
ret
dec
test
fidivl
lds
jne
cmpsb
inc
cwtl
fdivr
pop
pushf
sub
lea
popa
add
or
sub
mov
repz
les
pop
add
data16
imul
int3
push
fxch
pop
loopne
sbbb
mov
sbb
adc
push
sub
out
jmp
push
push
push
push
inc
bound
jns
rcr
sbb
and
mov
int3
loope
pop
jle
neg
add
jno
mov
bound
mov
push
sub
into
int3
xor
sbbl
pop
mov
test
mov
inc
inc
jo
repnz
pop
adc
add
pop
mov
push
xchg
cs
mov
andl
or
out
dec
mov
inc
inc
jo
sbb
sbb
jl
in
stos
movsl
sub
sub
cmp
push
shlb
pusha
add
xor
test
rcll
icebp
pop
sbbb
add
xchg
mov
jg
inc
push
xchg
das
iret
sbb
loop
mov
push
outsb
out
or
mov
xorl
imul
adc
pop
xor
ret
xor
leave
mov
cltd
mov
lret
hlt
fsubl
fcmovb
add
mov
inc
cmpsb
cli
mov
fistps
mov
aad
imul
dec
lds
mov
cmp
pushf
lods
adc
es
repz
jae
decl
movsb
pop
rcrl
push
pop
in
addl
mov
and
mov
aam
clc
movsb
xchg
sbb
xchg
fimull
decb
out
jp
pop
mov
scas
icebp
push
dec
jns
or
ds
enter
sbb
sbb
xchg
mov
add
insl
stos
add
adc
filds
dec
mov
push
in
or
push
pop
testl
fstl
lahf
and
mov
in
inc
adc
fbld
push
xchg
into
push
shl
pop
scas
sahf
clc
mov
inc
mov
and
call
push
in
push
jl
outsb
das
gs
cmp
xchg
jecxz
fsubrl
mov
jb
stos
sbb
or
xor
rorb
mov
adc
jg
scas
out
nop
data16
pop
sbb
mov
mov
outsl
pop
inc
mov
lea
mov
xor
outsb
ffreep
fwait
mov
ret
movb
stc
outsl
push
cli
shll
fwait
mov
into
in
dec
sahf
in
outsb
adc
stos
les
rcrl
add
inc
gs
in
shrb
sub
cmpl
ja
xor
imul
xor
sub
jnp
sub
cmp
push
js
jge
jno
lods
xchg
inc
loopne
push
jnp
dec
lods
fs
xor
pop
mov
cmovl
pop
scas
push
clc
sbb
sub
cli
popa
cmp
pop
scas
xor
shll
xchg
mov
dec
lds
jmp
fistps
lret
addr16
and
lock
mov
cmp
jno
adcb
sbb
call
ljmp
push
lcall
push
push
rcl
lods
lea
test
imul
xchg
rclb
fstpt
add
notl
fsubrs
std
xor
push
in
cs
decb
dec
inc
popa
push
cmp
cmpsl
stc
pop
leave
in
call
pop
mov
dec
ret
popa
adc
sub
push
es
and
push
lds
stos
int3
push
in
gs
push
push
mov
movsl
scas
push
sub
pop
xor
repnz
lret
sub
sbb
int3
fidivs
icebp
xor
pop
xor
cmp
pop
das
call
mov
jp
sub
call
add
popa
lahf
push
dec
sbb
dec
or
push
in
mov
fsts
pop
jbe
fdivrs
xor
pop
jmp
cs
or
cmp
xor
pop
lret
cs
dec
push
sti
cmpsb
lods
insb
ret
mov
sub
cmp
push
push
sub
ret
pop
adc
iret
jge
nop
mov
scas
popa
or
pop
sub
lea
mov
ret
and
cmp
ret
loop
mov
addps
lods
pop
mov
pop
or
jmp
adcb
cli
xor
sbb
or
jge
shrb
ficomps
adcl
cmp
bound
or
push
mov
jns
mov
mov
cmp
gs
cwtl
xchg
sbb
andl
rorl
decl
and
xor
sbb
cmpsl
jnp
add
test
sbb
std
mov
xchg
add
mov
mov
loopne
push
jge
jg
ja
mov
cld
mov
cmp
aas
and
int3
daa
inc
sbb
inc
nop
rcr
jmp
movl
imul
sub
push
cmp
push
ret
inc
mov
pop
insb
jnp
dec
jecxz
lahf
sub
test
outsb
ds
push
fcmovnbe
iret
cmpl
mov
mov
push
in
mov
pop
dec
sub
push
in
push
pushf
cmpsb
sbb
mov
adc
cmp
and
popa
fcoms
push
mov
push
push
shr
cltd
or
out
pusha
jmp
mov
repnz
add
andl
fcoml
sbb
cmp
sub
clc
out
ret
push
inc
dec
mov
inc
lahf
insl
call
sarb
incb
lret
clc
xchg
in
fcomip
push
inc
sbb
repnz
or
push
scas
mov
pop
rcll
sbb
sbb
push
mov
lret
push
mov
cmc
dec
adc
mov
jmp
pop
pop
call
sahf
adc
sub
and
add
jmp
jmp
jle
test
cld
mov
lret
mov
jb
xor
xchg
js
push
scas
cmpb
push
mov
sbb
pop
ficoms
jbe
mov
push
mov
lea
ja
adc
ror
push
int3
sti
push
sti
loope
es
inc
pop
pop
aad
add
pusha
inc
mov
test
into
mov
sti
imul
icebp
sbb
out
push
adc
lock
in
test
iret
sub
and
mov
adc
lret
in
andps
fildll
and
and
sar
out
out
scas
test
ret
pusha
or
push
mov
add
inc
inc
mov
aas
inc
mov
xor
jle
mov
mov
mov
mov
in
push
add
lcall
mov
cmp
pushl
add
pop
out
cmp
ja
imul
scas
imul
jo
call
and
inc
dec
daa
stos
jns
ret
jmp
mov
sarl
notl
das
or
jne
es
cli
inc
loop
push
push
push
push
filds
xchg
pop
int
cmc
iret
out
loope
adcl
cmp
jnp
in
add
or
jmp
lret
adc
adc
adcl
cmpsb
and
adc
push
pop
dec
jno
decb
roll
pop
inc
push
mov
gs
or
into
pop
mov
dec
fildl
sbb
stos
dec
sbb
adc
arpl
push
push
lcall
push
adc
sbb
fiadds
fwait
push
test
sub
lds
lahf
fnstsw
jp
fnstenv
dec
in
xchg
loop
mov
dec
adc
mov
xorl
and
mov
mov
push
adc
jne
jb
mov
dec
sub
clc
sbb
add
in
daa
shll
pusha
sbb
add
stos
sbb
lea
in
cmp
nop
jbe
and
inc
adc
push
sbb
fidivrl
or
jae
xchg
out
add
add
sbb
inc
dec
loope
mov
mov
outsb
int3
inc
je
repnz
orb
xlat
cmp
mov
lret
inc
dec
sbb
call
xchg
push
clc
cli
ds
scas
sub
mov
mov
push
pop
mov
popa
idiv
add
xor
fbstp
jge
xor
dec
xchg
cmp
loopne
mov
push
sarb
outsb
pop
fbld
lock
sub
and
push
add
movaps
cwtl
std
inc
mov
scas
dec
addr16
fdivrs
stc
sbb
icebp
pop
ror
sarl
stos
and
scas
xchg
sbb
les
inc
roll
mov
movsl
sbb
and
push
and
add
mov
fbstp
mov
push
movsb
mov
std
test
dec
xchg
mov
inc
stos
xor
es
xor
xchg
sahf
adc
xchg
add
cld
dec
push
adc
insb
addr16
xchg
cmc
popl
jbe
in
mov
pop
or
jno
mov
push
mulb
mov
test
sub
shrl
sub
insl
inc
cmp
inc
xor
push
inc
roll
sub
andl
ds
cmp
push
inc
pop
jns
sbb
test
add
mov
pop
pushf
sub
sbb
xchg
std
lds
scas
cmp
gs
test
aad
rolb
add
inc
neg
xor
xor
daa
push
and
out
imul
bts
adc
cmp
fimuls
or
out
and
stc
xchg
cwtl
inc
sub
enter
push
call
add
xchg
cmpsb
pusha
mov
dec
mov
adc
dec
and
out
fadd
push
or
cli
xchg
or
push
mov
test
insb
mov
cli
test
stos
out
mov
mov
movsb
mov
lods
or
pop
test
shll
xchg
sub
xchg
inc
jg
std
cmpb
jle
mov
or
inc
xchg
test
shrl
push
mov
negb
add
dec
xchg
inc
movsb
cli
xchg
outsb
out
lods
mov
ds
inc
aad
cmp
flds
lock
imul
add
ret
and
dec
shrl
test
push
xchg
aas
cmp
into
sub
sarb
cmp
xchg
cmp
mov
std
jmp
movsl
stc
call
insl
pop
or
jbe
lods
or
mov
cmp
and
sub
lock
xchg
adc
xor
out
pop
push
sub
outsl
sub
cmp
je
push
ret
push
mov
inc
jo
mov
adcb
mov
and
inc
mov
xchg
movb
outsl
jnp
lods
faddl
popf
dec
je
pop
jl
jno
pop
jl,pt
inc
and
mov
mov
inc
xor
pushf
sbb
adc
in
es
pop
mov
jnp
loopne
imul
or
fldl
dec
shrb
sbb
out
outsb
out
ret
add
jge
cmpsb
sti
lock
out
cmc
add
adc
movb
dec
loopne
enter
adc
jge
aaa
adc
xor
push
sub
icebp
adc
out
xor
notb
aas
and
sub
dec
cmp
pop
loop
call
and
jmp
fidivl
stos
rcrb
int
xchg
cmp
loop
mov
add
pop
dec
enter
mov
mov
sbb
in
lea
adc
rcll
and
pop
lds
push
mov
mov
test
mov
cmpsb
cs
aad
add
sbb
pop
mov
sbb
aad
xor
ret
inc
pop
jae
add
pop
rcrl
cmp
push
rolb
call
add
test
in
dec
dec
imul
mov
aad
daa
inc
xor
jmp
icebp
int
or
cmp
scas
es
lods
jg
jnp
push
push
mov
jge
mov
in
inc
int
mov
das
lret
hlt
cli
cmp
repz
ljmp
cltd
ds
fnsave
in
inc
aam
xor
stos
ljmp
cs
mull
imul
imul
inc
mov
sbb
sub
push
inc
add
addr16
jp
inc
ret
int3
bound
dec
push
sahf
sub
and
add
lcall
or
mov
in
and
and
cmc
daa
stos
shlb
test
mov
push
das
scas
decl
in
mov
adc
xor
mov
mov
imul
call
mov
adc
test
lcall
mov
pop
out
lods
pop
iret
inc
mov
cmc
imul
xorb
add
sbb
data16
or
cmc
adc
push
int3
insl
jecxz
pop
dec
xchg
cmc
inc
sub
xchg
inc
sahf
dec
clc
stos
loop
clc
pusha
xchg
mov
xchg
jl
xor
lcall
mov
dec
bound
loop
fadd
mov
shl
pushf
std
mov
test
jbe
jb
pop
mov
loopne
daa
dec
fwait
out
jae
lock
minps
xor
and
sbb
and
rolb
cmpsl
out
jge
daa
bound
into
jae
xchg
cli
add
xor
mov
xor
pop
jne
mov
jp
lods
pushl
popf
rcrl
cmpsb
pop
hlt
fwait
mov
mov
in
loop
insb
push
aaa
mov
mov
mov
fwait
in
xchg
pusha
movsb
rol
dec
pop
and
cmp
pop
fs
pop
sbb
xor
mov
scas
mov
xor
cmc
adc
hlt
out
xchg
lods
dec
and
fcomps
mov
and
add
jp
paddq
add
or
xor
hlt
push
pusha
jmp
cltd
loop
sbb
push
repz
dec
jae
and
in
cltd
lea
xor
out
adc
mov
cmp
xchg
cmp
js
cmp
verr
mov
cli
int3
sahf
aam
or
mov
fs
scas
repz
shll
adc
loope
pop
out
adc
jle
and
mov
bnd
movl
insl
ret
hlt
clc
pop
cmpsl
jo
js
cli
xlat
ret
cld
mov
push
nop
mov
lret
data16
stc
jmp
arpl
adc
aad
inc
sbb
hlt
in
xor
fcom
cmp
xchg
xchg
jne
or
sub
xchg
lret
das
and
inc
lret
inc
add
push
sarb
bound
fs
cwtl
rcll
xchg
lock
lahf
jae
jb
ret
sub
out
mov
mov
fimull
pop
mov
push
into
lea
mov
hlt
mul
js
cld
jle
and
xor
lcall
mov
stc
outsl
push
movsb
sub
sti
jp
imul
dec
out
stos
inc
pop
pop
cld
add
add
xor
ror
push
test
cmp
mov
add
sbb
xchg
scas
loopne
inc
es
push
outsb
xor
aas
outsl
push
ja
fadds
mov
or
xchg
leave
add
mov
shlb
nop
bound
into
xchg
or
dec
popf
enter
popa
test
jmp
outsl
jne
mov
out
insb
or
mov
test
leave
xor
mov
jno
ja
xchg
sub
sbb
popa
data16
clc
xor
lahf
ret
xor
ljmp
repz
clc
repnz
lods
ret
cwtl
cmpsl
xchg
mov
cmp
jbe
mov
adc
or
stos
inc
data16
lret
and
add
popf
inc
lds
sbb
ja
je
mov
movsl
ja
out
fldt
movb
or
movsb
jecxz
insl
add
sub
sub
mov
jecxz
shl
je
dec
xchg
test
movsb
shld
add
mov
jno
xchg
into
pop
int3
cmpsb
leave
aad
shrl
ret
enter
andb
inc
data16
fidivrs
add
rep
ret
mov
sbb
add
dec
in
inc
test
je
sub
ljmp
push
sub
mov
pusha
sbb
adc
lea
inc
daa
push
int
lds
push
inc
and
fwait
xor
adc
nop
rcrl
popa
push
gs
mov
fs
das
sar
out
cmp
sub
sbb
dec
push
pop
adc
mov
js
aas
call
dec
pop
mov
cs
push
adc
mov
mov
mov
fisttpl
mov
push
pop
repz
add
xor
jmp
test
push
add
push
xor
cmc
mov
and
cmp
jecxz
movsl
mov
lds
add
pop
cmp
scas
jne
jmp
jecxz
jp
dec
test
sbb
call
imulb
lahf
inc
scas
lock
cli
mov
push
aad
sbb
push
pop
mov
leave
mov
lret
subb
in
fisubl
pop
push
divl
fsub
pusha
pop
mov
or
std
cwtl
mov
stos
and
sbb
jg
push
cmpsb
cmp
into
test
jnp
jmp
xchg
inc
std
xchg
or
pop
adc
sahf
mov
adc
mov
add
out
adc
cmp
addr16
aad
iret
jne
rolb
push
test
dec
outsb
lock
lods
lock
loop
adc
dec
clc
mov
push
lods
dec
jp
dec
sbb
pushf
enter
lock
stc
rcrl
outsb
rol
xchg
dec
test
cmpsl
adc
inc
daa
fdivrl
cmp
add
mov
mov
in
push
sub
cli
jns
sbb
dec
add
cmp
test
dec
cmp
mov
fmulp
or
rcrl
outsl
test
pop
mov
fildl
or
pop
cmpsl
jmp
incl
je
mov
rol
sub
test
mov
or
inc
mov
subb
in
pushw
mov
pusha
in
out
movsl
or
inc
mov
int3
or
and
lcall
push
add
dec
shlb
dec
dec
push
pop
dec
push
loope
mov
push
testl
cmp
daa
insl
mov
imul
xor
sbb
je
pop
add
daa
pop
or
mov
add
jmp
inc
pop
push
dec
cwtl
js
addr16
fdiv
insb
xor
cmpsl
cli
bound
adc
insl
loop
xchg
mov
and
mov
add
inc
fdivrl
mov
adc
std
pop
mov
mov
add
into
inc
add
mov
dec
aam
decb
sbb
jmp
push
insl
jl
mov
mov
xchg
pop
mov
ret
inc
and
int3
in
js
xor
scas
pop
scas
mov
pop
sti
les
je
pop
pop
orb
cli
incb
out
mov
ret
adc
inc
stos
pop
rolb
cmp
enter
mov
popf
sti
jecxz
hlt
inc
add
push
cwtl
adcb
mov
sti
std
cmp
stc
pop
push
pop
decl
iret
insb
lods
sub
xchg
enter
int
xor
popf
jp
ja
arpl
pop
hlt
sub
and
hlt
mov
popf
mov
or
roll
loope
sbb
pop
adc
add
enter
mov
mov
sub
dec
xchg
into
stos
lock
gs
mov
dec
shlb
cld
push
xchg
je
inc
inc
jle
add
jge
test
xchg
xor
into
retw
fneni(8087
andl
out
cli
sbb
scas
xchg
in
roll
out
fcoml
push
stos
repnz
mov
xor
and
or
imul
jmp
mov
sub
addl
ljmp
enter
lahf
push
daa
aaa
movsb
jne
fdivr
into
push
repz
add
out
sub
and
ss
adc
std
xor
jl
dec
je
add
push
or
push
loop
and
push
mov
pushf
ja
inc
lahf
xchg
mov
or
jmp
add
adc
adc
dec
mov
inc
lcall
jmp
clc
fimull
inc
mov
aaa
and
mov
push
pop
mov
sub
incb
pop
lret
nop
popa
pop
iret
pusha
lahf
cmp
sub
jbe
inc
push
jbe
adc
xchg
in
fs
movsb
dec
sbb
cmp
sub
xchg
jb
xchg
in
sub
scas
sti
mov
out
pop
inc
aam
mov
divb
inc
adc
xor
jnp
and
and
pop
mov
imul
popf
adc
mov
mov
shl
sub
lret
push
jns
inc
out
cwtl
test
stos
sub
repz
test
and
hlt
xchg
shlb
pop
out
mov
mov
push
mov
pop
pop
pop
je
inc
xchg
dec
rcrl
dec
icebp
cmp
nop
je
fidivrs
dec
pop
cli
jle
xor
jge
push
adc
pop
andb
sub
icebp
in
inc
push
xor
or
pop
pop
pop
sti
leave
mov
push
xchg
jmp
out
push
mov
mov
fwait
xchg
cmp
pop
cmp
cmp
xor
aad
xor
sbb
xor
stc
lds
es
xor
stc
out
mov
xchg
dec
and
jne
test
mov
xchg
pop
stc
or
dec
cmp
pop
in
cmpsb
in
mov
mov
vpmullw
jae
cmp
movsbl
or
jne
push
xor
ret
call
and
mov
lock
roll
rcrb
into
ss
ret
sbb
dec
mov
mov
lret
pop
push
mov
cltd
xchg
jge
sbb
pop
pushf
and
xchg
add
push
sub
stos
pop
pop
aad
lahf
mov
jle
or
aam
xor
pop
es
fidivrl
add
cwtl
pop
mov
sarl
pop
int
pop
mov
or
sahf
mov
ljmp
div
lahf
mov
mull
mov
mov
push
pop
xor
xchg
xchg
xchg
mov
adc
in
sahf
aaa
jns
push
or
inc
aam
iret
add
fcomps
jno
jae
dec
xor
mov
push
cmp
pop
insl
sbb
stos
adc
lea
lds
fisttpl
mov
out
push
mov
ss
and
inc
push
bound
in
fwait
pop
mov
cld
int
rclb
or
test
or
xor
daa
jnp
es
stc
jno
iret
out
add
sbb
loope
lcall
jecxz
mov
cwtl
scas
inc
outsl
cmpsl
rorl
xor
push
popa
xchg
dec
and
into
mov
shrb
mov
adc
mov
mov
shll
xchg
rol
mov
mov
sbb
cli
cmp
nop
ss
jmp
mov
sub
pushf
cmp
in
rcr
adc
xor
lahf
adc
sbb
ljmp
idivl
mov
aam
frstor
cli
shl
mov
sbb
idivb
out
test
lea
sbb
jo
jmp
mov
inc
xor
mov
adc
xchg
dec
cli
and
data16
pop
loope
shl
dec
jle
or
pusha
movsb
std
or
and
or
or
stos
loopne
sub
sbb
sti
dec
sbb
adc
loop
movsl
push
cmp
out
or
xor
in
cli
test
mov
enter
mov
push
in
lret
mov
xchg
push
fwait
xchg
xor
xchg
dec
insl
cmp
enter
dec
movsb
inc
aaa
orl
inc
mov
cltd
lods
dec
cli
and
fdivr
xor
xchg
mov
sbb
mov
xchg
lea
xchg
pop
stos
lret
js
mov
stos
sub
stos
jl
adc
sbb
push
cltd
enter
mov
inc
out
mov
xor
aas
fs
sub
data16
fcompl
mov
add
sbb
nop
add
nop
mov
out
jmp
cmp
mov
jnp
ret
pop
push
pop
in
je
inc
inc
cmp
ret
int
and
movsl
repnz
scas
jnp
push
ret
mov
cmovae
mov
adc
and
testb
and
or
cmpsl
leave
xchg
xor
mov
lods
adc
xchg
and
push
imul
cmp
pusha
ss
pop
enter
sarb
inc
negb
jge
inc
adc
mov
and
dec
daa
shlb
loope
mov
ljmp
push
loopne
mov
ds
mov
or
mov
dec
fsubrl
leave
std
bound
sub
xor
or
int3
mov
call
pop
push
xchg
fisttps
push
adc
mov
orl
add
cmpsb
outsb
lods
std
call
mov
outsb
test
xchg
push
add
dec
fs
nop
xor
arpl
test
call
or
sbb
add
call
push
insb
nop
test
push
mov
fs
pop
sbb
inc
xchg
or
imul
push
push
mov
fprem
add
lock
push
shll
fcmovu
fldl
test
adc
push
cmp
ss
std
lret
out
xor
dec
sbb
lods
xor
pop
lcall
aad
push
lret
adc
out
adc
arpl
inc
in
in
fwait
xchg
gs
test
int3
mov
insl
push
sbb
push
or
pop
adc
dec
es
xor
loopne
mov
loopne
xor
outsb
or
aad
bound
es
adc
into
push
lret
xchg
data16
dec
je
cwtl
add
clc
cmp
jmp
repz
jns
cmp
mov
xchg
jnp
rcrl
mov
jmp
call
mov
inc
xorl
jp
jo
xor
jne
xchg
jo
mov
repz
or
and
mov
mov
push
jge
sub
inc
dec
daa
inc
push
mov
dec
dec
and
shll
mov
les
mov
add
iret
rorl
cli
dec
and
mov
clc
jne
jl
data16
cmp
in
add
pop
sub
push
push
fsubrs
push
and
jae
mov
dec
sub
add
jns
dec
lods
inc
mov
andb
bound
xlat
jb
icebp
push
inc
add
inc
aad
add
jecxz
lret
movsl
aaa
cmp
mov
push
ds
cmp
shlb
popa
jl
mov
xchg
mov
add
pop
sub
rorb
push
push
in
and
xor
mov
insl
xlat
mov
jno
testl
and
inc
push
pop
xor
or
loope
cmpsl
dec
sbb
out
dec
dec
xchg
sti
dec
cmc
cld
push
cltd
cmc
and
mull
adc
pop
fmull
push
shl
lret
imul
sti
movsb
out
into
cmp
cmp
test
mov
sbb
shrb
push
inc
inc
push
leave
mov
inc
in
loop
cmpsl
mov
call
rolb
fs
xlat
add
mov
inc
in
sbb
roll
mov
and
cltd
icebp
jns
ret
xchg
or
cwtl
insb
fisubl
in
insl
or
inc
fisubrs
xchg
fadds
sbb
icebp
lret
fwait
cmp
xchg
inc
adcb
inc
xchg
xor
cs
mov
test
lahf
stc
jmp
into
sbb
testl
adc
das
and
sbb
cltd
call
inc
add
push
jl
adc
loop
inc
cwtl
sbb
inc
cmpsl
mov
mov
lret
movsb
clc
pop
mov
push
loope
jb
stos
and
push
cmc
lret
dec
xchg
fiadds
subl
or
push
mov
adcl
fmull
xor
and
popf
cmpsl
iret
xchg
cli
mov
fdivrp
cli
es
rcll
and
dec
outsl
sbb
pop
sub
pop
in
mov
aad
push
or
daa
cltd
push
mov
ret
jbe
push
mov
popf
fists
inc
pop
and
sub
jno
cs
xor
jl
jg
mov
aam
and
aaa
fisubrs
jns
fadd
cmp
iret
pop
test
adc
inc
jle
mov
xchg
push
cs
push
cmp
dec
fisttps
aam
xor
pushf
jns
lods
int3
gs
movsb
insl
and
out
test
sub
inc
testl
lods
xor
lret
jle
mov
clc
pop
inc
and
lret
int3
mov
lock
dec
cmp
enter
jb
mov
ljmp
pop
inc
xor
out
ffree
dec
xchg
push
pop
xor
jae
mov
pusha
rcl
scas
inc
xor
cmp
mov
xor
subb
mov
fld
imul
lea
imul
xchg
sarl
pop
xor
stc
mov
dec
ret
into
pop
addr16
aaa
cmp
sub
shlb
in
call
or
add
stos
fucom
je
int3
cmpsb
add
inc
int
sub
cwtl
jb
shll
push
dec
icebp
scas
cmp
or
pop
or
lds
xchg
mov
out
inc
arpl
push
jmp
sbb
mov
mov
push
dec
inc
dec
into
mov
sub
pop
imul
mov
fwait
jbe
cmpsl
out
pop
lock
adc
pcmpeqb
enter
dec
mov
daa
xchg
jmp
mov
push
inc
lahf
rcl
leave
cmp
jmp
xor
int
sbbl
inc
adc
inc
pop
outsl
xlat
mov
cwtl
push
lods
clc
fwait
cmp
jg
adc
adc
sbb
andb
push
leave
xchg
in
out
and
andl
xor
js
out
cmpsb
inc
out
gs
sub
push
mov
daa
gs
imul
mov
aad
les
iret
test
push
loope
lret
pusha
movsl
inc
mov
xchg
pop
out
inc
repz
mov
mov
pop
in
add
in
mov
lods
inc
xor
mov
cltd
insb
js
add
mov
xchg
mov
push
lock
icebp
out
fwait
cwtl
out
pop
sub
inc
sbb
pop
add
in
jns
enter
das
add
ficoml
and
mov
inc
outsl
out
call
hlt
add
mov
loopne
mov
mov
nop
mov
fwait
xchg
scas
adc
shll
sbb
inc
mov
dec
jb
jo
mov
shlb
mov
call
gs
ja
jge
add
pop
mov
jmp
inc
add
xchg
xor
mov
dec
jbe
sbb
push
fwait
jns
aas
pop
mov
push
loop
les
mov
stos
pop
fldcw
jo
dec
lods
popa
xor
inc
mov
sahf
sbb
mov
sub
dec
pop
ja
pop
stos
ds
aam
call
mov
or
inc
fisubrs
and
call
and
aam
addb
scas
aam
aad
cld
je
xor
insl
scas
sbb
stc
cmp
mov
aam
mov
adc
aad
xor
cmp
and
cmc
mov
sub
popf
pop
lock
popf
pop
sub
mov
fidivrl
add
push
pop
lods
jo
xchg
inc
mov
mov
ljmp
fwait
add
dec
fcmovbe
aas
int
stos
mov
xchg
mov
loop
test
aad
mov
dec
fistps
mov
add
cltd
ror
inc
popl
rcl
xchg
jbe
mov
popa
cld
mov
sbb
inc
mov
outsb
cmpsb
xor
inc
in
jae
jnp
je
aas
dec
and
pop
xchg
xor
push
mov
mov
repz
lahf
sbb
lret
repz
popa
cmp
scas
aad
push
sahf
cmpsb
mov
sbb
mov
pushf
xor
ret
in
sbb
pop
push
dec
adc
push
mov
jmp
in
dec
out
lret
sub
into
xchg
dec
rcrb
cmpsb
in
in
and
push
add
shl
push
push
mov
inc
or
outsl
dec
xor
push
leave
rol
xor
outsl
addl
data16
faddl
subl
sub
rorl
out
out
arpl
arpl
xchg
inc
cmpsl
push
out
jle
lds
sbb
ljmp
sahf
int
bound
sti
push
es
ret
incb
push
adc
push
sbb
ret
adc
es
mov
iret
adc
add
pop
jg
xadd
mov
sub
sub
mov
sbbl
cmpsl
dec
stc
mov
dec
mov
cwtl
popf
xor
pop
inc
mov
repnz
fs
sar
sarl
mov
push
jg
out
mov
push
xor
into
std
arpl
inc
shlb
adcl
push
mov
lods
mov
or
popf
sahf
mov
sub
lret
movsl
mov
repz
push
jge
cwtl
xor
cs
mov
dec
in
add
aad
and
aam
lret
and
pusha
mov
rorl
fcompl
fists
cmpsl
ficomps
or
push
aam
inc
std
and
or
xchg
push
jecxz
inc
cmp
add
sbb
xor
rcrb
jae
sub
mov
xchg
out
out
jmp
and
jb
mov
inc
stc
jno
xchg
and
ja
jns
cmp
cli
cmp
jecxz
adcl
add
and
pop
cmc
enter
call
mov
adc
mov
fisubrs
add
test
or
test
mulb
mov
mov
lret
cld
cmp
or
or
sub
stc
cmp
fimuls
jmp
fsts
sarb
jp
sbb
pop
xor
das
fcmovnbe
insb
jp
repz
push
jecxz
into
sub
repz
push
pop
daa
or
xor
mov
ficomps
std
neg
sahf
xchg
and
jnp
sbb
imul
jmp
outsl
xchg
lods
pusha
adc
cmp
pusha
xchg
dec
or
xchg
sub
loope
test
pop
push
paddb
fstl
sbbb
mov
clc
ret
add
dec
into
add
mov
sahf
xchg
jne
jle
sub
fisubrs
jns
adcb
and
jo
mov
jle
add
imul
mov
fs
movb
sahf
test
stc
loope
pop
push
stos
ss
jne
mov
ficoms
or
adc
ret
pop
es
mov
jae
str
or
or
xor
mov
sbbb
sub
bound
cmp
jb
imul
rol
mov
xchg
inc
cmpsb
test
cld
mov
mov
fisubrl
je
adc
mov
hlt
into
mov
mov
dec
cmp
and
jp
adc
sarb
sbb
or
xchg
dec
sbb
push
jb
xor
loopne
sub
movsb
jl
jl
imul
pop
mov
mov
adc
out
aam
lock
popl
cmc
mov
repnz
pushf
stos
cli
loop
dec
int
jnp
js
ret
xchg
test
lock
loope
xor
push
mov
into
repnz
loope
xlat
test
scas
jmp
dec
in
jge
dec
jmp
xchg
mov
mov
rcrb
leave
push
test
xchg
or
push
cli
dec
repnz
addl
jl
and
or
jb
mov
xlat
xor
dec
faddl
inc
adc
mov
call
sarl
xchg
leave
jp
pop
ret
nop
mov
pop
push
imul
movsb
out
mov
xlat
sub
std
jne
movsb
pop
mov
push
jne
enter
xor
xchg
xchg
mov
mov
mov
add
xor
pop
dec
mov
mov
repnz
jge
subl
jb
fsts
ja
lds
es
icebp
or
mov
mov
push
cmp
dec
ficompl
out
mov
push
movsl
sub
setl
sub
stos
lods
test
mov
call
mov
aas
aam
enter
add
cmp
sbb
push
movsb
cs
jae
push
jno
imul
loope
insb
mov
mov
fadd
out
fs
mov
and
imul
xor
cmc
jge
add
fcomps
sub
inc
aaa
lods
sub
xchg
push
test
add
sbbl
dec
popf
mov
jbe
outsb
test
iret
and
sbb
pop
push
test
jmp
pop
mov
aam
mov
mov
sbb
or
sbb
leave
or
mov
mov
mov
mov
adc
cltd
sub
inc
push
lods
cmp
pushf
cs
or
adc
cmp
and
xchg
adc
les
nop
mov
xchg
aad
push
roll
daa
add
imul
adc
scas
push
inc
cmp
roll
jbe
inc
int3
mov
xchg
orb
shrb
push
mov
cwtl
sub
ss
push
aas
lahf
add
enter
cli
mulb
push
pop
adcb
movsb
jne
push
testb
xchg
fwait
in
subl
jg
stos
jg
loope
sub
add
js
cltd
pop
jp
cltd
cmp
and
mov
sub
xchg
push
outsb
push
mov
movsb
pop
and
xlat
std
rorb
sbb
jae
and
bound
fdivrs
test
in
push
sub
cli
jl
pop
cltd
cli
daa
shl
fstp
and
mov
roll
xchg
das
mov
xor
fisttpll
inc
dec
mov
and
push
sbb
aam
ret
lock
jno
jns
inc
sub
outsb
mov
out
mov
mov
out
add
jno
cli
sbb
mov
jecxz
xchg
adcb
mov
fildl
push
xchg
xorl
sub
push
scas
cmpsl
push
sbb
sbb
xchg
sub
imul
pop
push
mov
incb
sub
xor
sub
add
mov
adc
or
mov
dec
dec
fs
dec
std
jp
ret
in
and
dec
and
jno
xorb
inc
ffree
std
std
pop
call
sub
icebp
push
xor
jno
adc
xchg
xor
popa
jmp
outsb
jmp
mov
sarb
fidivrs
xor
push
shll
lret
cmp
test
jge
pop
fisttpl
dec
cmpsb
push
mov
push
lcall
jg
aam
cmpsl
test
insb
dec
dec
pop
adc
pop
inc
stos
sbb
lods
in
and
mov
ret
mov
jl
in
mov
dec
mov
mov
inc
scas
mov
std
mov
popa
mov
push
sbb
fiadds
imul
dec
push
sub
cmp
pop
mov
ds
xchg
inc
je
lock
mov
xchg
add
out
jnp
cmp
daa
or
lahf
scas
rcrb
popa
xor
ret
shl
push
lcall
jecxz
test
push
aas
push
js
addr16
push
lock
xor
cld
fldenv
lahf
sub
jne
adc
imul
dec
xlat
or
int
int3
stos
test
shrl
js
shl
sahf
sbb
stos
paddb
xor
xchg
push
fsubrs
add
push
jecxz
gs
add
fstpt
popf
jge
fsubr
and
add
out
xchg
add
cmp
sub
and
outsl
gs
js
in
mov
pop
sub
dec
int
std
aas
mov
mov
or
or
lods
sbb
fstpt
rcll
lret
das
cltd
or
in
iret
cmp
fninit
stc
push
cmp
scas
ss
js
clc
mov
adc
push
inc
dec
fucomip
imul
sbb
pop
imul
dec
shl
adc
pop
dec
rorl
cmp
sub
cmc
std
dec
rorl
adc
int
out
fmul
cld
sbb
jecxz
aad
jae
and
add
orl
and
pop
es
shlb
int
lods
nop
clc
jnp
jl
mov
scas
cmp
sub
adc
fdiv
push
mov
arpl
fsub
pop
fs
add
scas
js
or
inc
xor
or
sarl
pop
cmc
dec
cmpsl
mov
pop
mov
into
sub
xchg
sub
sub
jg
out
or
mov
xchg
or
push
testl
es
jae
xor
jnp
outsb
or
mov
sbb
je
adc
pop
or
popa
jbe
pop
and
mov
add
loop
inc
sbb
mov
inc
mov
or
dec
fsubs
mov
or
call
std
add
sub
add
fsubrs
roll
pop
add
loopne
push
adc
outsl
push
push
insb
dec
or
add
cld
mov
in
add
adc
push
arpl
inc
xlat
push
dec
add
or
ret
aas
outsl
fmuls
sub
cmc
xor
out
and
push
dec
fcmovbe
pop
lods
in
incb
stos
icebp
sbb
mov
sub
jmp
xor
adc
dec
inc
mov
xchg
cmpsb
push
jecxz
mov
popa
adc
pop
cmc
fmuls
mov
and
dec
out
ds
xchg
pushf
sbb
movl
cltd
push
dec
shr
mov
fmulp
ret
mov
fcom
cmp
ds
and
mov
mov
xor
sbb
bound
aas
fcomps
sub
std
movsl
ljmp
imul
movsl
xchg
lea
inc
dec
xchg
in
jg
popf
scas
or
jecxz
cmpl
sbb
cmp
out
sub
test
aad
sbb
orb
shrb
and
fwait
fwait
aam
cmpsl
movl
push
inc
imul
cmp
xor
jge
push
sub
test
jb
cmp
js
mul
in
dec
push
cli
pop
cmpsl
out
ficomps
jns
and
push
sbb
and
cmc
mov
nop
cmp
lcall
sbb
loop
and
shll
shll
or
repnz
cmp
scas
mov
or
fdivrs
stos
inc
insl
cwtl
std
cmp
dec
inc
inc
dec
jb
addb
stos
and
sub
movb
std
repnz
mov
imul
addr16
mov
fwait
sbb
push
call
mov
add
lcall
test
aas
into
pushf
jle
icebp
cmp
mov
push
jne
mov
jecxz
fnstcw
in
fiaddl
cmp
xchg
cld
ds
test
outsb
ja
orb
cmpsb
ret
push
das
in
stos
inc
mov
xchg
enter
jg
sub
dec
cmpsl
mov
xchg
inc
divl
cwtl
pop
jb
bound
daa
adc
mov
sar
fisubl
nop
or
cmp
mov
add
push
hlt
cld
mov
and
rcl
add
mov
cmp
xchg
xor
cmp
shrb
jmp
xchg
mov
xor
roll
orb
addl
sub
in
xchg
adc
scas
mov
add
fildl
lret
jg
cmpsb
int3
xchg
push
mov
sub
push
shrb
push
lcall
mov
sarl
mov
add
enter
out
shr
or
pushf
mov
inc
subb
fstps
testl
imul
imul
sbb
int3
xor
hlt
clc
fs
add
pop
add
xor
pop
xchg
das
sbb
cld
mov
jle
ja
push
pop
adc
pop
lock
and
shl
adc
jo
bound
mov
out
cli
xor
adc
adc
sbb
inc
insl
mov
jmp
xor
xchg
sbb
xchg
icebp
push
push
roll
mov
rcrl
int3
rcrb
mov
js
jns
dec
mov
popa
dec
pop
mov
and
test
jne
lcall
lds
pop
pop
jo
pop
rcl
mov
mov
inc
inc
out
inc
xor
or
sub
xchg
inc
cld
lret
sbb
clc
test
jecxz
mov
mov
sub
dec
cs
shl
in
fadds
xor
outsl
scas
movsl
and
andb
mov
fidivs
pop
or
xor
lock
dec
lds
jge
test
inc
cmc
in
and
sub
push
cmp
mov
addl
push
sub
repnz
rcrb
mov
mov
mov
mov
fnstcw
ret
aaa
push
pop
push
ljmp
aam
mov
cmp
out
push
push
sub
lods
scas
inc
scas
cmp
popf
je
dec
dec
lret
fs
dec
repz
pop
sti
mov
pusha
clc
inc
stc
and
mov
test
push
push
mov
int3
in
dec
sub
mov
gs
add
movsl
xlat
xchg
testl
iret
adc
pop
out
loopne
sub
mov
pop
insl
xlat
adc
insl
push
ljmp
mov
test
sub
in
cmp
or
mov
jg
dec
mov
movsl
push
fs
xlat
xchg
jo
dec
add
es
popa
fwait
int3
out
je
mov
mov
ret
push
xchg
jg
lahf
in
ret
push
in
insl
add
jg
movl
outsl
cmpsb
stc
ja
sbb
inc
push
cmp
mov
lret
adc
mov
push
xor
pop
jle
add
rclb
sbb
cmp
sbb
cmc
mov
inc
sbb
pop
push
popl
add
push
nop
inc
test
adc
mov
leave
jp
enter
ss
jmp
loop
add
cmp
mov
adc
repnz
out
loop
pop
loopne
iret
mov
es
jnp
push
xor
adc
or
imulb
pusha
mov
arpl
paddb
lds
sti
frstor
lea
ljmp
lcall
sub
lock
pop
sbb
dec
mov
inc
jecxz
adc
jp
fmul
rcll
pusha
insb
inc
jmp
pusha
jno
ljmp
lret
cltd
mull
ljmp
or
aaa
xlat
xchg
pushf
adc
pop
shll
popa
and
cmp
scas
and
aam
repz
cmp
xchg
jge
sub
dec
scas
es
mov
stos
loop
lahf
or
cmp
out
cmp
push
jae
sub
test
addr16
jnp
add
mov
fnstenv
movsb
xor
pop
cltd
cmc
inc
push
jbe
into
repz
xor
and
inc
dec
fadd
and
shrl
jne
mov
lret
and
aaa
out
mov
mov
aas
cmp
and
insb
mov
mov
adc
xor
xlat
ja
cmp
sub
subl
sbb
cld
es
mov
popa
call
pusha
les
mov
xor
xor
jno
adc
cmp
or
lods
icebp
loope
stos
sub
arpl
dec
xor
sub
lret
loope
ss
mov
mov
inc
sub
mov
fs
inc
pop
inc
in
dec
leave
or
inc
loope
mov
add
mov
xor
in
fstpt
int3
jmp
stc
or
stc
lock
mov
add
push
and
pop
mov
nop
into
roll
jg
ret
inc
mov
fwait
sbb
sbb
cld
mov
adc
jmp
or
or
sub
ss
adc
mov
lds
test
jle
jg
mov
mov
cltd
cmpsb
sbb
fldl
scas
inc
xlat
movsb
movsl
fwait
mov
notl
xchg
mov
in
push
test
mov
call
xor
mov
pop
stos
test
sbb
std
repnz
xor
aaa
mov
repnz
rolb
dec
xor
mov
imul
les
aam
bound
and
xchg
ret
insl
push
mov
cmp
inc
ret
in
push
pop
jp
mov
mov
call
dec
ret
dec
dec
sti
popf
adc
jne
mov
enter
test
stc
jl
sbb
popa
sub
fdivl
jp
in
xchg
out
pop
pop
cmp
push
in
lods
mov
rorl
cltd
cmp
jbe
pop
jno
cmc
repz
dec
jns
out
cmc
jb
xor
add
mov
push
mov
xchg
push
dec
cld
jbe
loopne
pusha
out
loope
jecxz
pop
lret
outsl
repnz
dec
mov
rclb
lds
jle
dec
addb
mov
inc
lahf
or
bound
cmp
loopne
pop
sub
or
push
dec
sbb
pop
cmp
dec
pushf
movsl
mov
mov
popf
movhps
stc
int
test
add
out
andb
xchg
and
stos
cmpb
dec
test
std
jle
xchg
lods
add
fimuls
call
loope
rcll
sbb
fldcw
imul
lods
jo
push
or
das
mov
sub
add
adc
sahf
out
ja
pushf
xor
adc
pop
sbb
fbld
mov
sti
xor
or
mov
mov
loop
sarl
mov
outsl
cmpsb
call
cwtl
mov
mov
out
sarb
and
loopne
push
add
cmp
shlb
es
in
rorl
xor
dec
jo
and
stos
mov
and
sbb
shrb
rcrb
jno
jmp
pusha
mov
loope
enter
imul
sub
cmp
aad
mov
les
and
daa
js
in
dec
lret
add
test
sbb
rorl
xchg
gs
aam
pop
rclb
mov
lods
pop
daa
push
shl
or
jecxz
sbb
in
gs
adcl
mov
sbb
mov
sub
ret
cmp
rorb
inc
pop
inc
cmpsl
jecxz
jle
lahf
lahf
lods
pushf
xchg
leave
cltd
pop
sbb
nop
jecxz
orb
push
jmp
inc
outsb
pop
in
jmp
ljmp
enter
mov
shrl
loopne
fst
dec
mov
je
cmp
les
aaa
icebp
loope
pop
inc
cli
jnp
cmp
mov
movsl
pushf
test
push
in
xchg
lret
add
mov
movsb
cmc
and
unpckhps
push
cmpsb
cs
cmp
pop
js
xchg
jo
pop
add
adc
mov
out
je
push
xchg
inc
pop
ja
leave
rcl
xor
or
dec
cmp
es
jl
cmc
lret
xchg
mov
test
push
imul
jbe
pop
xchg
sbb
loope
push
test
jno
push
sub
sub
add
sbb
push
mov
in
and
fldenv
cmp
mov
xchg
and
mov
mov
sbb
or
mov
pop
test
fs
test
enter
sub
hlt
fcoms
lods
jecxz
dec
xor
and
mov
mov
jnp
pop
cld
into
lods
dec
call
daa
inc
out
imull
loopne
flds
mov
mov
pop
cmp
cmp
mov
enter
ja
arpl
cmp
mov
loopne
scas
jl
mov
or
out
pop
push
repnz
cs
sar
cmc
xor
in
pusha
imul
and
sbb
cmp
add
push
test
push
sub
out
xchg
jge
pop
jp
or
sub
lods
mov
push
lock
adc
mov
fnstsw
push
jmp
imul
mov
scas
pop
pop
xchg
jmp
cltd
data16
daa
sti
push
fisubrl
mov
xor
cmp
cmpb
and
mov
ljmp
pop
aas
aad
sub
mov
out
jnp
mov
xchg
push
sub
lea
adc
and
push
add
xchg
mov
sub
xor
mov
imul
xor
jg
lods
out
add
clc
incl
and
insb
mov
pop
hlt
cmpsb
pop
ja
mov
push
mov
jmp
jle
xchg
js
pop
xchg
fs
adc
popf
xor
stos
ret
clc
inc
add
mov
dec
and
test
ss
fadd
add
mov
hlt
jecxz
in
or
inc
shrl
fiadds
jns
fwait
add
gs
mov
scas
imul
mov
mov
cwtl
popfw
outsb
mov
maskmovq
mov
in
shll
je
xchg
lahf
pushf
jnp
pop
dec
add
nop
pop
repnz
hlt
imul
pop
jb
mov
test
mov
push
add
sti
jmp
sub
sti
icebp
add
and
sbb
mov
cmpsb
pop
mov
xor
or
clc
mov
lret
add
fadd
ss
js
cmp
mov
pushl
aas
jmp
mov
gs
cmc
movsb
xchg
or
adc
dec
xor
fwait
sub
lds
mov
comiss
xchg
jl
cmp
stos
jmp
lds
and
fs
mov
and
pop
leave
lock
sbb
jmp
and
sar
jb
test
in
loop
jo
adcb
insl
pop
dec
xor
xor
test
inc
mov
cmp
outsl
sub
jno
jne
in
shrl
cmp
inc
cltd
fwait
mov
lock
jno
push
jmp
ss
repnz
xor
mov
outsb
jmp
mov
or
adcl
add
push
push
adcl
or
jne
fisubrl
fcoml
lahf
stos
mov
dec
adc
dec
inc
jle
jg
pop
fisubrl
cli
mov
fnsave
les
sahf
mov
in
daa
mov
push
outsb
mov
inc
jmp
sbb
mov
dec
xor
sbb
sti
outsb
mov
inc
std
pop
xor
pushf
xor
cmp
in
pop
and
aad
jp
add
sti
fs
loope
clc
lods
stos
or
lds
insl
insl
mov
in
dec
pushf
lods
xchg
pop
mov
cmpsl
jno
push
mov
jp
lock
outsb
fsubrs
dec
mov
and
test
mov
movsl
sbb
mov
fimuls
pop
popf
pop
jae
bound
xchg
ljmp
daa
bound
jmp
arpl
pop
out
sub
cmp
mov
jmp
adc
scas
sbb
cld
sub
scas
mov
adc
add
xor
fwait
out
sahf
adc
mov
addr16
scas
fistl
mov
aas
insb
inc
and
jmp
adc
inc
dec
cmp
subb
pop
sbb
inc
mov
or
lds
xchg
cmp
stos
clc
loopne
xchg
mov
sbb
and
je
cmp
jg
movsl
jp
push
mov
pop
inc
mov
or
out
jp
mov
test
cld
or
das
loope
mov
pop
xchg
pop
jmp
cld
mov
jb
add
js
xor
mov
out
aas
mov
sbb
loop
ret
cli
jo
into
test
jnp
movsl
dec
repnz
popa
les
lret
inc
or
jmp
mov
je
bound
xor
mov
pop
dec
push
push
or
mov
sbb
cmp
shll
xchg
sbb
dec
jmp
hlt
jae
push
sub
mov
es
loop
in
mov
mov
lds
js
jnp
pop
scas
insl
mov
aas
mov
std
and
lea
inc
outsb
and
fdiv
test
sbb
negl
out
imul
push
mov
cmp
cltd
mov
push
daa
mov
xor
fs
enter
movsl
mov
pop
inc
jge
sahf
aam
pop
sbb
adc
andb
push
xchg
int3
lods
mov
push
mov
stos
fcoml
int
pop
int3
or
mov
shr
jge
inc
inc
cmp
adc
lds
jl
popf
cmpsb
inc
jge
insb
movsl
pop
stos
fs
fdivrs
push
in
jecxz
sub
pop
addr16
ljmp
adc
adc
xor
aam
inc
add
imul
sbb
cmp
loope
lcall
js
mov
mov
adc
cmp
pop
imul
add
and
sub
and
inc
ljmp
push
jno
fwait
pop
xor
cmp
xor
mov
jae
pop
rorl
clc
jl
sub
jno
jmp
pop
ja
cld
cmpsl
mov
arpl
mov
popf
jge
ds
fwait
sbb
xlat
loope
mov
lods
icebp
mov
inc
cmp
inc
test
aaa
sbb
aas
mov
push
aas
lret
xchg
xor
out
cmp
testb
arpl
mov
repz
rcl
imul
outsb
pop
adc
pop
pop
and
sbb
sbb
imul
nop
adc
test
push
inc
or
imul
cmc
mov
ret
xchg
mov
dec
lahf
cmc
mov
mov
out
jb
sub
add
and
mov
mov
or
fldcw
and
xchg
testl
cld
sbb
adc
cmpsl
dec
sarl
or
insl
jae
imul
in
jecxz
lcall
cmp
mov
das
inc
sti
roll
mov
add
repnz
mov
mov
loop
sahf
mov
push
push
cmpsl
or
jecxz
adc
in
and
in
pop
in
sub
cmp
lcall
cld
jnp
pusha
jle
inc
mov
clts
inc
lds
rol
test
sbb
push
fucomp
and
push
subl
movsb
cmp
loope
cmp
jl
aam
ss
into
adc
xor
test
mov
testb
push
lret
mov
gs
cmp
push
lods
hlt
adc
int
fnstcw
push
xor
push
xchg
arpl
mov
jno
sbb
push
notl
dec
pop
pop
and
and
fucomip
popa
or
push
bound
push
es
sub
fstpl
fsubl
lret
dec
adc
sub
inc
loopne
or
sbb
fistps
imul
push
jmp
je
sub
and
js
and
cmpl
or
cmp
sub
push
push
rcl
sub
shll
cld
in
inc
icebp
mov
jno
movzbl
out
pop
mov
loop
cmp
call
sub
decb
syscall
jb
mov
add
sbb
xchg
or
icebp
andw
push
push
mov
rcrb
dec
addr16
pop
mov
mov
cmpsb
cmp
fistpll
jns
aaa
dec
fldl
and
clc
sbb
jl
pop
mov
cwtl
xchg
ss
sub
sahf
addr16
or
call
cwtl
stos
xchg
inc
add
xlat
andl
dec
or
dec
popf
les
pop
xlat
lcall
jae
imul
cmc
fstl
add
in
stos
outsl
ret
repnz
and
mov
ret
mov
loope
mov
fsubrs
push
sub
sub
fisubl
repz
stc
pop
inc
mov
repz
and
js
cmp
sbb
jbe
cmp
fmulp
arpl
xlat
xlat
or
mov
hlt
push
clc
stos
cmp
andb
sbb
lcall
ss
mov
jo
cmp
add
nop
pop
in
mov
push
stos
cld
mulb
push
outsb
xchg
pop
fcoms
shrb
data16
xchg
fdivs
add
int3
xor
jle
mov
int
xor
jb
xor
xlat
ss
push
popa
mov
js
incl
jmp
pop
sbb
and
ljmp
leave
jecxz
mov
js
repnz
and
sub
pop
in
xchg
push
pop
jl
jp
add
inc
cli
bound
mov
fldt
jne
cwtl
pop
mov
in
push
pop
mov
fnsave
mov
sub
inc
rcr
mov
js
xor
or
dec
xchg
test
bound
js
in
push
mov
mov
out
xor
out
jle
dec
inc
mov
jg
sub
pushf
cmc
lods
xchg
cmp
std
cmc
add
into
in
sub
mov
daa
out
daa
nop
dec
lods
lret
fsubrl
pushf
sbb
ds
xor
cmpsb
andl
idiv
push
xor
add
hlt
pusha
adcl
sub
mov
inc
test
aas
out
ljmp
int
popf
in
inc
adc
mov
cmp
lret
imull
push
negb
dec
mov
push
xchg
jge,pn
loop
or
lods
xor
cs
mov
mov
lret
daa
pop
cmp
mov
mov
mov
inc
and
mov
xorl
ss
add
sub
stos
inc
mov
pop
nop
cmp
xorl
imul
outsb
sub
jno
cmp
imul
dec
sbb
jp
ficompl
sub
mov
add
icebp
bnd
xor
loope
popf
aaa
cmp
jno
imul
inc
jbe
popa
mov
jb
aam
sbb
ds
aaa
pop
jmp
dec
mov
ss
mov
repz
push
xchg
inc
fidivl
into
jnp
jecxz
dec
sub
mov
in
gs
pop
jno
ljmp
lods
scas
inc
push
ret
mov
test
gs
scas
pusha
das
and
rcl
dec
cmpsb
or
add
in
adc
xchg
cmp
push
push
sub
aam
xchg
push
push
push
incl
ret
test
aaa
clc
clc
shrl
dec
rcr
popf
sbbb
test
xchg
popa
and
hlt
mov
loop
lret
mov
mov
sti
push
inc
jecxz
or
cmp
push
repz
or
stos
mov
inc
in
outsl
mov
and
jle
or
cmp
inc
shrb
insl
imul
mov
rorl
loop
push
jns
sarl
sbb
jecxz
repnz
pop
hlt
sub
arpl
pop
jl
cmp
adc
push
xor
shll
mov
mov
fsts
inc
xchg
mov
mov
ja
ljmp
dec
sahf
rolb
inc
mov
dec
outsb
mov
cwtl
movsb
in
cmp
push
fdivrl
into
rcrb
dec
or
sbb
shlb
dec
psrad
ret
sub
sbb
pop
cmp
pop
pop
dec
add
js
and
push
ljmp
push
aad
mov
bound
cmc
shrl
outsb
sub
out
mov
outsb
hlt
lods
test
jmp
scas
sub
push
repz
data16
adc
xchg
fwait
in
pop
sbb
jno
fidivrl
push
jmp
jns
orb
shl
sbb
sbb
scas
notb
cmpsb
push
cmp
ficomps
stos
sbb
repnz
stos
and
fsts
push
es
xchg
sub
repz
nop
movsl
daa
jae
mov
mov
movsl
mov
test
and
inc
leave
out
out
test
loop
xchg
hlt
outsl
add
jbe
sbb
xchg
popa
xor
int
sub
push
in
add
add
mov
loopne
xor
mov
cltd
or
pushf
test
movsl
adc
xchg
ljmp
jl
orl
jl
inc
sbb
dec
cld
mov
sahf
das
jbe
pop
mov
xlat
cltd
sti
cmp
out
adc
and
xor
insl
pop
add
shll
add
addr16
and
hlt
leave
cld
mov
dec
add
cmpsb
push
xor
outsb
mov
xchg
out
jns
inc
test
inc
push
test
add
test
sbb
and
dec
in
repz
mov
int3
sbbb
out
push
or
loopne
pop
pop
in
stos
cmp
cs
jnp
pop
inc
mov
pop
mov
lahf
aaa
jecxz
mov
cmpsb
in
inc
add
in
xchg
dec
or
fimuls
addr16
int3
mov
clc
out
repz
sub
pop
out
aas
mov
push
lret
inc
cmp
cli
inc
or
clc
fcoml
mov
sub
adc
ffree
cmpsb
sti
pop
imul
cmpsl
lcall
imul
mov
adcl
addr16
addr16
popf
cmp
mov
mov
dec
arpl
cmp
mov
out
ret
test
lret
xor
jnp
sbb
inc
adc
mov
jbe
fsqrt
icebp
inc
dec
adc
or
cmp
pop
sarl
adc
pop
mulb
addr16
add
cmpsl
add
sub
mov
cmpb
icebp
sub
shrb
int3
jl
lret
mov
xchg
out
into
sub
clc
sbb
in
adc
or
bound
add
or
mov
out
push
push
mov
jo
scas
add
fisubrl
shr
frstor
negl
outsl
negb
inc
ljmp
lea
inc
add
into
pop
jge
pop
xchg
add
outsl
cmp
out
mov
xlat
shlb
mov
nop
adc
cmp
fidivrl
iret
dec
popf
inc
cltd
hlt
adc
adc
xchg
lods
iret
xor
mov
dec
and
inc
das
push
in
xchg
xchg
pop
lahf
xchg
push
jge
in
mov
pushf
inc
push
mov
stos
nop
add
xor
inc
adc
sbbl
add
cmp
icebp
movsl
cs
repz
ret
fadd
mov
sbb
out
xor
pop
or
mov
add
int
sbb
push
ret
stos
aad
add
mov
push
xor
leave
xchg
ss
jb
jo
jl
xchg
rcrb
add
sahf
xchg
das
push
bound
pop
sub
sub
add
mov
add
int3
mov
or
sbb
mov
jle
daa
adc
sbb
xchg
xor
inc
and
sub
add
or
repz
enter
arpl
jbe
mov
mov
jns
cmc
cltd
xlat
xor
push
mov
jg
loope
or
jnp
call
mov
or
pop
jp
rcrb
inc
xchg
push
jg
cmpsb
jno
negb
outsl
sar
mov
pusha
gs
jbe
outsb
pop
mov
jno
outsw
dec
inc
icebp
roll
insl
daa
sub
cmp
push
push
loopne
into
push
mov
inc
xchg
pop
mov
xor
mov
xchg
jne
pop
lcall
pop
movsl
fs
test
and
sbb
testl
pop
stc
xchg
cmp
bound
ja
sbb
fs
stc
stc
or
pop
jb
cmc
rcrl
inc
je
aaa
sub
jo
push
pusha
sub
cmpsl
je
mov
insb
xchg
pop
out
xchg
stc
test
lock
xchg
sbb
mov
iretw
pop
sbb
dec
mov
jmp
jecxz
addr16
arpl
sbb
mov
push
lret
adc
mov
popa
cmp
das
pusha
clc
xor
sub
sbb
divb
into
inc
push
xchg
push
movb
outsb
xchg
stos
test
cli
and
and
add
lcall
sti
push
push
cwtl
mov
xchg
cmp
fists
sub
inc
shl
pop
dec
cwtl
push
cwtl
dec
das
or
push
js
inc
mov
pop
mov
mov
std
loope
daa
sbb
shrl
dec
mov
insl
or
pop
mov
insl
outsl
inc
mov
mov
mov
ret
push
jge
repz
jo
xor
cmp
push
jns
or
mov
mov
mov
or
fs
pop
cmp
data16
iret
movsb
icebp
outsb
cld
push
pop
mov
addr16
xchg
mov
pop
lds
sbb
in
and
jne
dec
repz
movsb
pushf
dec
xchg
cld
cwtl
or
mov
psubb
ds
sub
lds
aas
mov
outsl
rcrb
and
xchg
mov
lds
dec
mov
dec
rcrl
arpl
idivl
stc
jno
lret
nop
lret
cwtl
inc
out
sub
mov
ret
cmp
je
pusha
gs
mov
mov
cmpsb
std
mov
lret
mov
xchg
push
int3
adc
xor
and
scas
icebp
les
adc
sub
mov
mov
push
xchg
lock
inc
scas
inc
adc
mov
push
pop
pop
shl
xor
pop
and
call
push
lcall
jmp
add
jne
daa
sub
jecxz
adcb
push
jb
sbb
fstpt
stc
push
jge
mov
xor
pop
clc
cmp
sahf
cmc
inc
mov
adc
addb
fcmove
das
nop
paddsb
bound
lock
pop
sub
fiaddl
jnp
mov
or
repnz
mov
subb
mov
mov
in
lods
out
dec
cmp
mov
sub
pushf
add
sar
jns
lods
pop
mov
arpl
xor
bound
adc
loope
or
cmp
lock
gs
jbe
pushl
jb
fcomps
inc
push
xchg
sbb
das
sub
xchg
sbb
scas
jle
scas
in
dec
lods
mov
xor
add
xor
in
loope
push
arpl
decl
lahf
clc
xchg
pop
or
pop
mov
jmp
jmp
push
mov
popa
aad
add
sub
insb
dec
lock
mov
add
jp
loope
cld
out
andps
cltd
jns
xor
iret
rol
mov
cmp
cltd
out
add
out
outsb
xchg
int3
mov
insl
fistpll
sub
or
in
push
pop
mov
lcall
push
jl
jnp
lahf
sbb
push
and
xchg
push
jb
stc
ja
sbb
and
xchg
leave
repz
mov
dec
ljmp
fiadds
xchg
lahf
fimuls
cs
movsl
inc
pop
scas
bound
inc
mov
fmuls
lahf
mov
gs
stc
lea
jl
sub
push
roll
stos
in
xor
and
sub
xor
mov
or
outsb
push
in
cmp
xchg
fnstcw
mov
adc
dec
cld
in
jne
icebp
sahf
bswap
rclb
xchg
mov
cmp
or
out
and
push
movsb
test
daa
fmuls
xchg
inc
push
push
into
push
xchg
js
or
sub
inc
incl
pop
adc
fnstcw
mov
xor
sub
cli
add
mov
sbb
jo
jl
mov
ja
jo
jbe
jae
jb
addr16
mov
ret
mov
lret
xor
stos
pop
mov
repz
jg
adc
mov
addr16
js
jb
dec
pop
lahf
push
mov
cmp
inc
push
pusha
or
jb
inc
mov
or
xchg
daa
pop
lods
outsl
or
ljmp
daa
cwtl
mov
lret
adc
test
lcall
movl
inc
add
mov
or
mov
lret
pop
xor
addr16
add
mov
push
add
int
in
xlat
inc
lods
popf
mov
pop
outsl
sub
adc
in
adc
stos
les
push
push
inc
cltd
inc
cmp
lret
push
jmp
sub
aam
sar
insl
pop
and
test
sub
lods
pusha
test
sbb
pusha
xor
mov
inc
mov
push
fwait
dec
std
gs
daa
lret
imul
fnstcw
and
cld
xchg
mov
fs
test
adc
das
jae
popf
jle
adc
das
dec
aad
je
jl
jg
js
mov
out
clc
int3
jb
mov
loopne
sub
push
into
and
sbb
out
insb
xor
ljmp
mov
inc
popa
dec
stos
in
cmc
iret
inc
or
xor
mov
and
lcall
dec
and
js
xchg
xchg
lea
out
je
jo
push
mov
lods
jno
into
cmp
mov
jle
stos
or
shll
or
rolb
pop
mov
cmp
lods
je
cltd
sbb
insl
in
cld
fsubl
mov
out
jbe
gs
xchg
jb
xchg
std
jb
adc
xor
cmp
dec
mov
xchg
pop
push
inc
xchg
hlt
mov
and
xor
daa
lahf
js
mov
cmpl
maxps
mov
cwtl
scas
sbb
dec
hlt
mov
sub
push
pop
jmp
mov
mov
mov
or
jbe
xor
inc
mov
sub
iret
pop
das
mov
pop
dec
xchg
dec
xor
mov
out
sbb
mov
pop
jnp
or
shrl
sbb
add
push
out
enter
xor
subl
jle
inc
ret
fsubl
bound
mov
cmc
test
pushf
mov
xchg
dec
repnz
inc
jecxz
adc
cmc
inc
lds
hlt
mov
testb
hlt
popf
popa
and
hlt
xor
lds
aam
stos
lahf
imul
add
cmp
cmp
jns
lahf
push
out
add
sub
int3
sub
pop
aad
jo
std
dec
ret
lcall
jle
jl
call
add
pusha
pop
shl
or
mov
loope
popa
jno
mov
icebp
cmpsb
cltd
nop
sbb
cmpsl
stc
adc
dec
sarb
jb
dec
jmp
jo
test
adc
push
imul
jns
lret
push
cmovne
insl
scas
jb
lcall
mov
lahf
pop
adc
sti
add
push
xor
stos
pop
add
or
push
cmp
fwait
lret
mov
popa
sbb
push
pop
cmp
fbstp
lods
clc
pop
inc
roll
dec
pop
sti
out
or
xchg
xor
inc
push
loop,pt
xchg
fisubs
add
push
repnz
cwtl
icebp
mov
daa
adc
je
add
cmp
icebp
add
rcl
je
and
gs
in
pop
nop
insl
repnz
sbb
jmp
cmp
cmp
mov
lods
jg
ds
fnstsw
pop
vrsqrtps
cmp
stc
inc
push
add
sub
xlat
sub
pop
jnp
dec
jae
arpl
popf
mov
es
loopne
dec
inc
in
jo
cmp
ja
loopne
jecxz
lea
ds
bound
mov
js
jle
xor
jp
arpl
mov
mov
mov
xchg
addl
aas
cmovno
daa
popa
bound
fdiv
int
push
jl
add
test
dec
mov
je
mov
ret
cmp
sub
jne
icebp
add
xor
andb
pop
dec
cmpsl
add
rcrl
push
mov
sub
push
pop
pop
push
fdivrl
jbe
hlt
inc
into
jns
push
push
test
pop
aas
shll
xor
and
pop
nop
lock
dec
popa
mov
cmp
scas
mov
sub
fistl
add
xchg
lahf
xchg
jecxz
aam
hlt
test
or
add
sub
rolb
xchg
out
jnp,pt
aas
lea
cmp
cmpsl
xchg
imul
sub
sarb
inc
add
pop
inc
mov
sub
pop
iret
add
ss
xor
scas
mov
bound
cmp
out
std
ret
xchg
push
mov
daa
repnz
mov
sub
shlb
jg
jno
scas
lods
insl
push
inc
xor
fdiv
mov
stc
lea
test
sbb
xor
inc
aam
add
xchg
dec
shrl
mov
inc
xor
xor
es
fs
mov
in
mov
bound
lahf
cmp
xor
add
mov
orl
mov
imull
add
cmp
cmp
stc
dec
adc
mov
jbe
mov
test
mov
mov
shrl
sbb
sbb
lahf
jmp
push
or
add
xchg
outsl
test
sub
and
push
dec
shrb
push
cmp
mov
stos
adc
lea
push
adc
test
sbbl
in
movsb
jmp
xor
push
daa
mov
roll
cmp
andl
mov
cmp
xor
lss
cmc
jnp
insl
clc
cmp
scas
jl
mov
jb
nop
pop
in
mov
jle
scas
stos
fadds
das
cmc
nop
sti
or
aaa
lock
mov
jp
and
sbb
sub
fs
mov
insb
loopne
or
mov
jecxz
cmpsb
or
mov
jecxz
out
mov
fiaddl
ss
push
jno
pop
pop
shrb
push
mov
adc
daa
gs
dec
cmpsl
mov
jno
push
sub
cld
cld
ljmp
lret
lret
ljmp
ret
dec
xchg
dec
in
xor
pushf
idivl
sub
jns
js
inc
xchg
jo
add
pop
pop
cmpl
mov
mov
mov
jmp
mov
outsb
cmp
push
add
pop
ljmp
fbld
movsb
fucompp
add
inc
fsubrl
in
les
pop
iret
xor
lret
sbb
dec
movsl
mov
jbe
ss
dec
das
push
sbb
mov
sub
cs
dec
xchg
add
jmp
fmuls
pop
jg
in
sub
gs
pop
aaa
mov
jo
aas
je
and
mov
mov
sti
lds
faddp
jno
xor
enter
subl
stc
mov
or
inc
cmp
mov
dec
adc
std
insb
in
nop
iret
jl
stc
xchg
pop
loop
xchg
inc
dec
rcll
sbbb
push
jbe
je
pop
repnz
pop
je
je
shlb
xchg
mov
insb
std
push
and
fadds
int
sub
imul
inc
notb
mov
xor
fstps
jp
fs
sub
mov
test
nop
or
xchg
leave
in
inc
sub
lret
xchg
mov
gs
or
xchg
stos
mov
mov
test
inc
loope
imul
pop
jmp
mov
xchg
jnp
fildll
push
xlat
popf
shlb
das
inc
and
lock
rcr
pop
and
invlpg
je
push
cmp
mov
andb
out
add
pop
xchg
pop
es
push
xor
push
int
mov
push
adc
test
aad
xor
fidivs
pop
cmp
movsb
out
mov
pop
push
rcrl
inc
enter
push
imull
and
ja
test
jne
data16
mov
add
mov
lret
insl
inc
mov
in
sbb
push
in
xor
push
inc
es
repz
push
fcoms
mov
repz
add
push
cs
push
add
stos
xor
ljmp
out
scas
xchg
movsb
ret
sub
mov
dec
mov
repz
push
lret
mov
in
jecxz
lods
fwait
jns
jmp
push
into
mov
mov
enter
lea
orb
xchg
push
mov
xchg
inc
pop
adc
test
out
in
xchg
in
xorl
inc
mov
xchg
sysexit
sub
xor
xchg
push
sub
sbb
cmp
pop
cli
pop
jmp
mov
lods
jb
mov
je
dec
push
adcb
dec
daa
cs
scas
mov
jp
mov
push
into
add
testl
mov
mov
aas
sub
out
sti
xor
in
cmp
mov
mov
add
inc
fadds
int
pop
xor
cmp
fadds
pop
gs
jns
repnz
cmp
dec
clc
testl
mov
sahf
lods
adc
movsb
and
and
push
out
imul
leave
mov
or
loop
xor
test
xchg
pop
push
adc
pusha
pop
jecxz
xchg
in
xchg
push
pop
daa
cmp
fldt
mov
add
jecxz
pop
and
and
dec
mov
push
xor
scas
mov
adc
rolb
fstps
adc
ja
arpl
ret
push
aad
sbb
mov
jge
pop
mov
imul
dec
or
or
pop
call
lret
shlb
repz
ss
ret
pop
mov
jns
cmpsl
aas
in
xchg
xchg
mov
pop
test
dec
xor
imul
bound
xor
cmp
xor
in
mov
mov
push
lods
fidivrl
cmc
adc
pop
aad
ficomps
push
fimull
push
shlb
sub
push
sub
scas
pop
sbb
out
push
imul
out
and
add
fdivs
mov
outsb
pop
insl
dec
dec
mov
iret
pop
dec
inc
jo
loop
sbb
mov
pop
mul
mov
inc
sub
dec
cltd
cmp
pop
dec
dec
imul
cltd
out
mov
imul
int3
repnz
push
push
hlt
mov
mov
sbb
aaa
inc
sti
jne
inc
inc
xchg
clc
jns
and
ret
mov
or
nop
sbb
or
fsubrs
fbld
stc
fcmovnbe
adc
insb
adc
jne
jmp
dec
daa
cwtl
pushw
xchg
inc
pusha
ret
xchg
sbb
add
ss
out
pusha
xor
pop
into
insl
or
mov
push
mov
cmp
pop
rorb
mov
jnp
mov
mov
cmpsl
jbe
cmp
loopne
sbb
stos
cltd
sbb
mov
push
sub
aas
sarb
stos
xchg
or
sub
cmpsb
jne
icebp
and
lret
lds
mov
and
xor
leave
push
popf
and
dec
mov
mov
inc
inc
or
hlt
cmpsb
lcall
imul
outsb
insb
push
stos
adc
fisttpll
sbb
dec
shrl
icebp
xchg
xlat
and
cmp
test
adc
pop
or
je
fisubs
div
xchg
lods
aam
out
ret
and
push
in
jge
sub
es
pop
and
ss
jb
mov
in
shlb
sbb
xlat
sahf
cli
int
add
jo
push
sub
ljmp
out
cli
out
mov
mov
jnp
ja
movb
adc
dec
negb
fwait
popa
jecxz
rcl
pop
mov
rcrl
test
insb
dec
xchg
mov
dec
mov
pop
cmp
pop
aaa
pop
jbe
sahf
adc
repz
stc
inc
jae
aam
cmp
pushf
jo
xor
push
outsl
jns
pop
mov
fstps
lret
enter
outsl
fs
in
jmp
out
imul
lds
fistps
mov
sbb
cli
lea
pop
pop
sbb
jae
mov
ret
sbb
xor
and
jmp
cltd
adc
and
lahf
fcoms
popl
filds
ss
mov
mov
ret
xor
imul
inc
dec
xchg
xlat
inc
rcrb
inc
pop
hlt
mov
in
pop
lods
ds
ja
data16
enter
push
or
mov
sahf
adc
cltd
clc
hlt
sub
fcmovnbe
divb
ljmp
lea
xchg
mov
adc
in
flds
mov
mov
jge
out
or
clc
dec
push
repnz
sub
jmp
and
popf
push
mov
dec
dec
int3
daa
mov
mov
xchg
dec
inc
jecxz
shrb
inc
shrl
inc
test
stos
fadds
mov
xchg
sub
pop
mov
mov
sahf
aam
cmp
jns
xor
inc
in
mov
mov
jl
stos
lods
out
cmp
adc
jmp
push
push
sub
cmp
lcall
imulb
aas
jno
test
cltd
pop
pop
push
push
movsb
movsb
jns
push
js
hlt
and
add
les
xor
mov
dec
shufps
pusha
int3
or
pop
in
dec
iret
adc
out
cwtl
cmp
mov
mov
setle
mov
sbb
xchg
pop
xor
push
push
adc
jl
xor
sahf
push
dec
jmp
mov
cmp
pop
ret
cltd
jl
cmp
xchg
outsl
pop
inc
pop
daa
outsb
or
sub
jns
icebp
addr16
insb
sbb
push
cmpsb
dec
mov
leave
test
dec
jl
pop
in
repnz
das
sbb
fwait
xchg
imul
aas
test
pop
and
insl
pop
aam
in
in
dec
aad
out
sahf
hlt
xchg
lahf
pop
jl
test
cmp
dec
out
outsb
dec
jns
mov
inc
pop
xchg
pop
movsl
in
sarb
lds
into
or
mov
jb
inc
insl
mov
push
out
push
jl
xchg
jae
add
xlat
test
jge
dec
lods
subb
sahf
test
das
pop
sarl
push
pop
inc
sarl
es
repnz
inc
push
mov
cwtl
pop
shrl
xchg
cmc
mov
pop
shll
das
movl
xor
sub
xor
aaa
add
mov
push
fcmovnb
imul
mov
es
pop
dec
fisubs
xchg
sbb
pop
push
inc
jge
dec
in
dec
dec
shrb
pusha
movsb
ror
subl
cmp
push
add
aam
or
lcall
adc
outsb
fnstsw
inc
jne
cmp
mov
popf
movsb
add
out
insb
pushf
mov
adc
inc
ja
jo
sarb
enter
leave
jo
jecxz
and
adc
cmp
je
add
cmc
lahf
aam
xchg
and
xchg
test
cmp
inc
dec
adc
cli
rorl
in
ljmp
insb
setp
pop
imul
mov
in
mov
sbb
leave
idivb
lods
sub
push
idivb
xchg
sti
inc
arpl
js
insb
push
add
push
mov
fldcw
sbb
sahf
xchg
push
ret
and
and
pop
testb
xlat
test
mov
jo
les
ror
and
xor
jg
add
mov
loope
or
pop
test
jp
dec
xchg
imull
cmp
data16
jnp
add
ss
cmp
shr
test
ficoms
push
and
sbb
pop
in
fwait
lahf
and
jno
mov
sub
inc
jge
or
int3
adc
addr16
mov
add
imul
adcl
mov
adc
push
loopne
imul
leave
outsb
outsl
xor
adc
add
fstp
push
push
stc
cltd
ret
inc
adc
push
imul
cmc
xchg
stos
push
addr16
pop
es
pop
jecxz
cmc
daa
and
inc
jle
jae
or
test
xlat
pop
into
lret
lods
xor
addl
rcll
sbbl
ja
sbb
cltd
jbe
test
out
iret
xor
dec
inc
xor
subl
lret
scas
mov
or
push
mov
xchg
jo
dec
ror
jbe
add
adc
rcr
hlt
xor
pop
cmpb
je
fistpll
lds
lret
jno
push
mov
or
and
inc
jg
xorl
or
lcall
push
adc
jo
ja
mov
or
aam
fildl
ds
aam
bound
add
push
pushl
repnz
sahf
mov
ffree
outsl
push
mov
loop
add
out
neg
jecxz
mov
fldl
fs
mov
xchg
shrl
insb
or
fistpl
inc
mov
sub
add
lock
add
xchg
and
das
dec
ds
stos
mov
push
and
neg
xchg
mov
sub
adc
pusha
scas
add
cmp
in
negl
mov
sub
push
cmpsl
xor
jl
or
and
sub
mov
fs
popf
xchg
cmp
mov
hlt
xor
out
in
inc
inc
int3
adc
lock
mov
int3
fwait
lcall
in
insl
imul
add
movsb
lods
cmpsb
das
jno
inc
cmp
mov
xor
test
cmp
insb
xor
push
xor
sbb
push
sbb
adc
test
or
jbe
pop
enter
popf
test
in
add
add
std
retw
or
test
jp,pt
iret
adc
sbb
lcall
lcall
mov
xchg
movsb
push
adc
rorb
inc
push
lcall
add
inc
lret
and
jnp
aad
fs
cld
dec
icebp
mov
pop
nop
and
roll
push
sub
fsubrl
sub
xor
xor
xor
lock
sti
lea
dec
mov
jae
pop
cltd
jae
popa
add
call
pop
inc
je
sahf
div
push
out
jne
mov
inc
std
sbbl
aas
test
push
aas
je
adc
test
fmull
push
push
sub
xchg
outsb
fwait
cwtl
in
stc
pop
cmp
fwait
sub
or
out
mov
mov
xchg
repz
inc
mov
push
xor
adc
adc
pop
dec
jno
test
dec
lods
and
int
pop
sub
sbb
sbb
adc
adc
int
lret
in
xor
jge
dec
mov
jle
adc
mov
xor
loope
mov
icebp
insl
mov
cmp
in
hlt
test
cmpsb
loop
mov
dec
aas
movsl
in
lahf
iret
or
out
pop
push
jb
add
add
sub
adc
cld
fdivrl
jmp
jnp
fwait
dec
dec
bound
or
add
iret
pmaxsw
test
push
and
movsb
ja
mov
push
pop
fwait
jg
push
push
js
xchg
ds
adc
jle
cmp
das
aad
sbb
mov
cmp
in
add
rolb
dec
out
das
sbb
movsl
push
insl
fbld
fcomp
sahf
into
mov
repz
jecxz
aas
xor
rorl
int3
icebp
mov
push
ror
lods
add
mov
dec
mov
cli
adc
cmp
cwtl
cmp
inc
xlat
cmp
sub
sbb
cmpsl
pop
in
cmc
pop
add
dec
aaa
xchg
mov
outsl
mov
aas
clc
popa
sbb
cmpsb
fwait
sti
ljmp
adc
adc
push
dec
movb
dec
pop
sbb
mov
jne
sbb
cmp
mov
jnp
push
xor
xchg
sub
mov
push
xorl
mov
sbb
bound
ret
cltd
add
or
das
mov
cwtl
mov
xchg
scas
mov
dec
jbe
arpl
pop
mov
bound
xor
pop
shlb
push
xchg
gs
adc
mov
mov
pop
cmp
mov
pop
rcrl
mov
daa
mov
adc
ljmp
scas
fwait
test
mov
std
outsl
lods
sti
clc
insb
push
scas
mov
and
aad
and
pop
maskmovq
inc
mov
pop
jl
clc
push
nop
add
mov
dec
push
testl
out
pushf
sar
lcall
or
and
sbb
jge
shll
in
sbb
inc
inc
into
xor
mov
rclb
mov
sub
or
and
mov
orl
sti
mov
push
popf
lahf
push
insb
shr
fsubs
in
movsl
inc
lahf
lock
mov
jle
movsb
sub
scas
mov
cmp
pusha
cmp
sbb
popa
inc
incl
or
dec
mov
mov
outsl
cwtl
daa
jnp
cmp
inc
rolb
mov
imul
mov
jge
mov
int
mov
sbb
xor
lcall
or
push
inc
xchg
fs
je
movsl
adc
xor
out
pop
mov
mov
outsb
out
pop
dec
andl
out
rcll
pop
push
aad
xchg
daa
rcrl
mov
iret
iret
pop
pop
mov
insb
jmp
pop
arpl
ja
addl
dec
fdivs
lods
ja
cmp
mov
xchg
inc
test
adc
xchg
in
jae
and
push
std
out
cmp
dec
int3
sub
cmp
pcmpeqw
adcb
stos
out
push
pusha
filds
jmp
mov
ss
inc
mov
ret
imul
aad
pop
rcll
or
inc
cld
push
mov
inc
stc
repz
pop
xchg
inc
pop
push
push
adc
mov
stos
pop
cmp
mov
xlat
adc
jnp
vaddsubpd
test
mov
mov
sahf
ror
dec
push
mov
in
adcb
mov
ljmp
sub
and
hlt
pop
int
mov
and
in
sbb
insl
out
insb
pop
fidivl
mov
test
into
or
aas
sahf
scas
xchg
lcall
xor
aaa
push
movsb
sbb
mov
sbb
test
arpl
sub
cmp
aas
push
test
cmpsl
out
cwtl
xchg
mov
es
loopne
std
cwtl
into
call
jae
mov
lcall
fwait
dec
pop
sub
insb
shrb
adc
gs
or
je
cmp
mov
in
mov
cmc
jo
cmp
jg
jle
mov
pop
lds
pop
ret
xlat
adc
or
cmp
xchg
std
cmp
push
mov
iret
add
lods
in
add
adc
jno
into
fcomi
ss
fcoml
inc
mov
insb
out
subl
jae
xor
and
and
dec
fldt
mov
movsl
cltd
nop
ljmp
insl
jns
mov
aaa
cmp
vmovaps
jne
in
pop
insl
ret
push
outsl
out
inc
lret
dec
or
mov
cmp
inc
in
lret
dec
ficoms
shll
jae
into
add
repz
cmc
jnp
cmc
imul
adc
movsl
mov
aaa
lret
adc
xor
pop
call
cli
ds
orl
jecxz
jnp
aad
test
sub
adc
aam
jge
add
mov
push
addr16
hlt
fwait
xor
lret
scas
pushf
inc
xchg
aas
nop
and
jbe
jae
cmp
xchg
testl
and
arpl
insb
mov
ss
enter
js
out
mov
mov
outsb
mov
dec
xchg
xor
jb
repnz
loopne
jp
lahf
arpl
mov
test
cltd
leave
xchg
mov
xor
out
dec
sti
movsl
xchg
lds
pop
iret
andl
mov
loopne
xchg
incl
int3
data16
or
sbb
insb
test
inc
addb
enter
push
out
lods
repz
xor
cmpb
mov
sti
xlat
push
pop
stos
lret
ret
xchg
cs
fwait
int
mov
mov
hlt
add
sbbb
mov
push
cld
and
repnz
cmpxchg
pop
adc
mov
inc
jmp
popf
jp
ficoml
adc
leave
and
aas
sti
nop
addr16
addb
enter
dec
in
rorl
arpl
inc
cmp
orl
mov
fcomps
hlt
lret
xchg
dec
scas
push
jnp
pushf
iret
les
mov
jns
sti
dec
mov
ja
mov
xchg
and
sub
imul
ss
adc
cs
add
mov
cli
cmpsl
aam
ret
dec
pop
push
push
adc
pop
mov
sub
add
jg
cmp
ds
jge
loop
xor
aad
cmp
in
jbe
in
add
cmp
sub
lds
adc
push
xchg
xor
mov
pop
jle
adc
mov
fbstp
dec
sti
movsb
icebp
ja
cmp
mov
inc
mov
cmpsb
sbb
xchg
nopl
popl
dec
pop
cmpsl
outsl
mull
dec
lret
sub
fidivrs
out
adc
and
lds
sub
stc
jg
lcall
call
push
push
aaa
js
ret
mov
les
pop
movsl
push
push
fdiv
stos
out
out
loop
or
push
dec
sub
push
sbb
pop
icebp
add
call
mov
mov
mov
mov
jle
push
and
xchg
jmp
insl
pop
xchg
int
aad
lods
out
inc
inc
aam
cwtl
scas
cmpsb
out
pop
adc
push
imul
shrl
or
out
fs
lods
sahf
mov
pop
add
loop
notl
int3
iret
fiaddl
add
repnz
sbb
ret
push
jmp
xorb
mov
sbb
shlb
stos
ss
add
pop
in
jp
mov
stc
rcrl
add
adc
mov
jb
push
bound
mov
add
push
gs
out
sbb
pop
in
or
fnsave
les
adc
sub
inc
jbe
out
and
jp
pop
dec
inc
ja
dec
out
cmp
and
cmp
cmp
mov
cmp
lods
scas
rol
and
or
idivl
ret
cld
cmp
mov
scas
add
push
or
mov
sub
movsb
pop
icebp
daa
bnd
lods
arpl
insl
add
rorl
arpl
push
scas
xchg
das
movsl
mov
add
popa
lret
in
mov
xor
xchg
cltd
les
ret
popa
lock
imul
fildl
es
das
push
fadd
in
sub
andl
jmp
aad
push
push
jl
mov
mov
inc
test
imul
mov
in
xchg
sub
lods
fisubrl
cwtl
sub
mov
imul
out
xor
cmp
dec
std
push
lcall
mov
ret
cwtl
sti
inc
adc
repnz
xchg
mov
test
adc
dec
jge
enter
mov
inc
jl
push
pop
sub
stc
xchg
popl
leave
out
xor
cmp
icebp
ds
mov
or
inc
gs
aad
mov
xlat
xchg
and
xor
sbb
je
out
sbb
addl
push
lods
push
push
ljmp
out
sahf
repz
xor
cmp
ja
pop
fdivrl
es
mov
ss
lcall
stc
and
or
mov
mov
fcoml
mov
das
inc
pop
pop
dec
pop
mov
dec
inc
push
out
push
or
mov
mov
and
xor
ret
pop
mov
adc
mov
clc
or
divb
sub
lock
or
test
push
subl
aaa
jno
call
push
repnz
movsb
sbb
bound
lret
stos
popa
data16
ss
jmp
stc
dec
add
into
xchg
push
hlt
test
mov
dec
add
or
gs
out
shll
test
dec
and
jg
mov
sbbl
inc
or
icebp
push
xchg
fmuls
push
mov
popa
inc
push
sub
cltd
popa
loope
cmp
or
in
xor
mov
adc
stos
pop
xor
jb
lods
outsl
arpl
rorl
aaa
and
adc
jae
mov
addb
lahf
push
inc
js
adc
leave
outsb
ds
jecxz
jno
iret
stc
cwtl
out
and
ljmp
xor
or
cmpl
fcoms
and
fs
lds
adc
loope
mov
pop
loope
movlps
adc
lds
int3
addl
mov
add
xchg
addr16
ds
cmp
div
andb
push
fmull
call
dec
movsl
or
shll
leave
lds
sub
js
mov
inc
mov
into
mov
adc
outsb
in
gs
out
push
push
stc
or
pop
inc
js
sub
mov
push
jns
mov
pop
and
iret
mov
shufps
test
mov
call
cmp
notl
xchg
add
mov
cmpsb
pop
lock
jle
mov
pop
arpl
test
cmp
int
push
dec
push
aad
dec
cmp
adc
mov
push
sbb
xchg
dec
inc
mov
sbb
inc
push
nop
inc
push
call
and
lret
xchg
aas
orl
xchg
call
ret
mov
jae
xchg
test
jle
sbb
ja
iret
pusha
ja
inc
xor
test
adc
rclb
cmp
sub
cld
loopne
cmc
and
push
imul
inc
pop
pop
adc
loop
call
stos
push
xor
shrb
lods
popl
stos
lea
rclb
js
and
sbbl
pushf
rcrb
lods
call
cwtl
mov
pop
or
int3
fcomps
leave
aas
mul
ret
iret
sbb
popa
push
lods
or
mov
insb
jp
push
cmp
mov
ficompl
adc
mov
fnstsw
cwtl
cmpl
mov
movsb
mov
rcll
insl
or
lret
cld
repz
mov
mov
xor
pop
int3
push
xchg
fwait
mov
cmpsl
imul
push
pop
ror
pop
and
js
ljmp
lds
bound
negb
xchg
xchg
jb
mov
and
clc
cmp
and
mov
cld
or
push
out
xor
xor
inc
sarl
aam
xchg
cmc
lret
mov
scas
fdivs
fidivrl
pop
and
pop
aam
sarb
sub
fidivs
or
pop
mov
add
fbstp
add
insb
ljmp
xchg
sub
dec
aaa
pop
scas
or
sub
insl
mov
fisttpll
out
push
repz
adc
cmp
aas
outsl
push
sub
scas
pop
adc
pop
fs
cmpsl
inc
ds
clc
ret
aas
aam
sbbb
repz
push
mov
inc
cmpsb
adc
dec
mov
pop
and
in
fsubrs
lcall
jmp
pop
push
and
push
jg
pusha
ficomps
pop
outsl
mov
ficompl
insl
pop
mov
out
pop
push
mov
pop
cmp
push
add
adc
pop
ljmp
inc
inc
xchg
sub
jno
sbb
push
or
push
es
and
inc
daa
xchg
in
sti
jecxz
andb
add
pop
add
test
sbb
testb
aam
or
aas
add
data16
scas
xchg
cmpsb
inc
out
mov
lods
pushf
push
into
add
fwait
clc
nop
pop
fcomps
dec
sub
or
icebp
int3
mov
mov
in
dec
imul
sbb
int3
or
adc
xchg
int3
popa
jecxz
cmpsl
cltd
push
push
popf
jno
xchg
jle
jo
jg
ret
mov
mov
mov
pop
cld
ja
jb
cwtl
mov
fcmovu
leave
inc
and
dec
mov
pop
jle
lahf
stc
inc
orb
mov
pop
pop
loop
sbb
jb
inc
inc
add
cmp
dec
dec
mov
dec
rcll
add
ss
int
out
test
dec
mov
data16
hlt
jge
lret
data16
mov
data16
xchg
pop
in
cmp
testl
pusha
sahf
xor
lcall
jno
mov
lea
sbb
adc
loopne
insb
add
insb
fistpll
lods
add
push
inc
or
push
push
sbb
sub
ret
cs
cwtl
jae
leave
cmp
mov
sub
lods
jns
int3
rcrb
lods
pop
or
xor
int3
lcall
cmp
sub
bound
add
fcmove
mov
mov
fucomp
sub
sti
pminub
enter
cmc
sub
jmp
dec
or
cmpsl
push
cmpsb
lcall
fistpl
enter
in
out
fsubs
push
mov
repz
fistps
jne
mov
stos
arpl
fsubs
mov
loopne
mov
and
sub
addr16
xor
and
fiaddl
jg
lods
mov
mov
lods
adc
mov
test
stc
mov
subb
push
and
jne
rorb
insb
inc
or
dec
mov
icebp
cmpsb
cmp
push
xchg
push
mov
test
xchg
pop
imul
test
push
mov
jo
cmp
push
std
push
cltd
push
cmc
idivb
mov
icebp
push
mov
push
mov
inc
pop
shl
dec
int
pop
adc
lcall
js
ss
xchg
negb
cs
lds
ficompl
mov
pop
lcall
lods
fisttps
pop
and
sub
lods
add
xchg
icebp
roll
jge
in
mov
xchg
mov
les
inc
add
push
iret
or
in
nop
int
adc
cmp
or
mov
cmpsb
sub
lods
fcmovnb
mov
leave
daa
icebp
and
push
push
mov
or
cmp
pop
div
iret
push
movsb
jnp
ja
push
ficomps
cwtl
mov
xchg
dec
fistl
scas
in
inc
leave
sbb
out
pop
cmp
loopne
add
cmp
mov
push
out
mov
arpl
push
add
mov
test
cmp
adc
xchg
mov
mov
push
push
test
xor
out
cmp
mov
into
xchg
mov
into
lret
divb
push
sbb
enter
add
std
sub
popf
or
jno
xor
pop
push
mov
xchg
cmp
fisttpll
mov
cld
sub
cmp
pop
jo
cmp
nop
jmp
sub
pusha
sti
inc
xchg
dec
push
shll
cltd
icebp
xor
jae
repz
sbb
fnstcw
sti
push
xchg
aaa
cltd
inc
pop
out
jl
cmc
stc
lahf
cmp
insl
mov
les
or
pushf
addr16
jns
pushf
out
xlat
xchg
and
daa
xlat
daa
inc
push
jnp
add
or
jecxz
out
cmc
or
test
imul
cwtl
fwait
cmpsl
data16
pusha
push
mov
scas
cmp
pop
jno
push
jmp
mov
sub
pop
js
adc
sti
scas
dec
add
and
push
gs
jl
jbe
aam
daa
mov
sub
push
or
mov
scas
push
xchg
ret
cs
insl
scas
fstps
mov
inc
out
adc
pop
dec
lcall
add
sbb
aas
mov
lds
fdivrl
aam
and
xlat
aam
xor
int
call
das
dec
jg
dec
lahf
test
arpl
adc
arpl
sahf
repnz
add
mov
pop
mov
sti
mov
fimull
rorl
mov
xchg
les
in
mov
loopne
in
add
aas
sub
add
mov
mov
jp
out
mov
shl
lea
stos
leave
rol
into
lahf
cltd
sub
cmc
push
popa
xchg
lret
pop
or
mov
push
dec
jle
sbb
sub
adc
xchg
aam
hlt
push
mov
mov
in
scas
je
and
testl
cmp
mov
adc
mov
outsl
fbld
cs
inc
sub
test
mov
ss
cli
test
cmc
mov
sub
les
aam
jo
addl
mov
fsub
bound
pop
test
cmp
push
cmp
pushf
mov
inc
mov
add
and
fisubrl
or
rol
out
inc
cmc
fwait
xor
mov
in
scas
int
and
int3
or
popa
addr16
rcrl
jne
push
leave
push
dec
aaa
stos
lret
push
pop
pop
cmc
mov
stc
aad
mov
adc
insl
inc
cmc
and
into
sub
stos
icebp
and
popf
cwtl
push
outsb
adcb
push
adc
cwtl
arpl
test
cwtl
or
iret
scas
fcomip
popf
push
adc
adc
stc
xor
out
pop
nopl
xchg
push
out
out
scas
jmp
shr
jp
in
push
pop
add
mov
push
sbb
bound
push
push
lds
mov
ja
int
pushf
mov
mov
jmp
xor
pop
lret
cmp
xchg
imul
fildl
test
jl
pop
mov
add
pop
pop
mov
pop
inc
shrl
andb
push
pop
or
mov
ljmp
daa
lock
imul
adc
aad
xchg
mov
lock
popf
or
repz
lock
arpl
adcl
sbb
mov
or
test
in
aam
icebp
jns
les
lock
cmc
iret
mov
dec
mov
shll
fmul
es
imulb
xchg
in
lret
bound
test
aaa
pop
mov
inc
pop
test
aam
sbb
incb
dec
sub
or
push
gs
push
mov
push
jg
sub
cmpsb
pop
in
outsb
aaa
xchg
push
and
fwait
insb
enter
scas
xchg
hlt
dec
cmp
movsb
dec
and
fstl
jmp
cmp
mov
fcmovne
jp
mov
jge
pop
push
mov
jae
ret
xor
ss
push
adc
lea
or
dec
push
outsb
cmp
popf
jmp
push
into
jle
mov
ljmp
push
rcrl
jo
lods
repnz
fbstp
add
movsb
add
out
popf
mov
inc
adc
das
xor
jmp
inc
jb
push
stos
scas
inc
mov
aas
or
cmp
jle
inc
adc
mov
adc
jg
push
dec
roll
cmp
push
jecxz
insb
mov
pusha
push
jbe
pop
inc
popf
cmp
sbb
cmp
sbb
js
fidivl
out
xchg
push
int
cli
xchg
lret
xor
and
jno
add
lods
push
xor
fcomps
imul
xor
pop
ja
fdivs
add
movsb
stos
mov
fnsave
bound
pop
stos
dec
or
xchg
shl
inc
movsl
inc
lret
pop
cmp
imull
inc
iret
sbb
jge
cltd
sarb
call
jb
push
xchg
push
ss
dec
mov
push
out
in
movsb
pop
adc
push
ja
lret
shlb
xchg
jbe
movsl
cmc
je
or
mov
cmp
xchg
inc
test
aaa
lods
outsl
jle
rep
repz
or
rcrb
add
in
xchg
xor
xchg
rcl
or
xor
mov
jns
xlat
loope
push
pop
aam
push
sbb
pop
cld
fiaddl
push
adc
mov
scas
and
mov
fiadds
and
adc
pop
and
mov
or
inc
fisttpll
nop
mov
mov
bsf
xchg
sbb
xor
mov
outsb
cmp
arpl
add
lods
jge
pop
std
adc
xor
addr16
mov
scas
sbb
inc
mov
mov
or
ret
add
fwait
jmp
mov
adc
rcll
loope
mov
push
test
xchg
inc
iret
fs
orl
or
sahf
xchg
inc
or
clc
movsl
mov
aas
push
adc
mov
out
sbbb
dec
test
sub
adc
adc
decl
out
xor
sti
mov
jle
fisttps
mov
out
bnd
or
inc
or
sub
mov
add
or
jne
in
push
aaa
inc
sbbl
or
inc
push
cmp
fistl
mov
mov
sub
fs
mov
adc
xor
sbb
cs
test
fdivrs
dec
mov
dec
push
and
icebp
xchg
pop
imul
or
ss
push
les
cmp
jbe
add
ss
dec
ljmp
jnp
rcll
jae
insl
cmp
and
lods
mov
js
bnd
jecxz
movsl
minps
mov
lds
adc
data16
iret
and
cwtl
pop
xchg
push
lcall
add
mov
xor
xchg
and
push
and
ret
xchg
sub
mov
fmuls
mov
ret
outsb
xchg
jno
cmp
stc
pop
sub
rcl
mov
push
mov
movsb
sub
cmp
jg
inc
sub
add
dec
cmp
pop
cmp
cmp
fistl
xchg
das
jge
cld
or
pushf
xor
pop
rclb
mov
mov
negb
xor
jmp
outsb
js
je
lds
clc
mov
pop
mov
pop
cmp
dec
mov
cs
mov
js
sub
subl
xor
in
loope
pop
ljmp
jo
fdivrs
push
push
arpl
inc
sti
mov
jns
int
mov
lock
jmp
and
mov
sbb
and
test
cmpsb
das
add
and
hlt
xchg
mov
sbb
jp
pop
push
mov
adc
push
add
imul
jp
les
mov
or
mov
sarl
cs
sbb
test
pop
ss
jmp
xlat
add
mov
fwait
lods
jmp
adc
jle
push
add
data16
xchg
adc
push
in
and
mov
ret
add
mov
inc
cltd
lds
fsubrs
repz
pop
fmulp
xchg
and
sub
test
sub
lods
fcomp
and
mov
aad
xchg
push
fs
xchg
mov
jne
adc
ficoms
ds
adcl
push
sti
aam
pop
xor
loopne
mov
dec
mov
lret
push
mov
xchg
adc
mov
nop
mov
mov
mov
leave
jl
push
bound
outsl
mov
push
aam
sets
xchg
pop
loopne
ljmp
push
mov
mov
xchg
xchg
movsb
inc
jecxz
mov
adc
sbb
adc
push
ficomps
mov
in
jecxz
fdivs
sbb
sbb
fmull
fistl
das
roll
ret
mov
pop
inc
repnz
dec
sbb
loop
and
in
inc
cmp
mov
inc
or
push
and
or
pop
mov
adc
sti
pop
movsl
sti
sub
pop
cwtl
gs
in
pop
js
lahf
cwtl
lods
imul
jge
lods
je
sub
mov
hlt
push
jnp
sti
xchg
aaa
cmc
or
or
jbe
fsub
push
adc
imul
std
inc
pop
mov
fmuls
fsubrs
push
mov
jle
dec
add
fcmovnb
mov
dec
test
cmp
test
mov
xchg
lahf
fwait
rolb
int
shlb
jl
sub
pop
je
out
negb
mov
js
jnp
cmp
sbb
loop
push
in
rolb
movsb
mov
cmp
add
out
imul
mov
pop
imul
daa
mov
int
hlt
jne
push
je
rclb
sub
jns
pop
mov
aas
pushf
shll
test
xchg
push
fbld
lock
push
out
jne
outsl
aam
jns
test
aam
mov
mov
inc
jecxz
stos
bound
pushf
lcall
fs
pop
js
jo
pop
jmp
push
xchg
mov
enter
outsb
xchg
pop
xchg
pop
hlt
and
jns
test
dec
popa
fs
xchg
imul
add
mov
mov
aam
ficompl
lock
sbb
or
sub
shrb
adc
lahf
out
je
inc
cltd
jp
xorl
aad
sub
pop
cs
dec
rclb
mov
or
out
shrb
lret
inc
jmp
and
in
xchg
mov
in
jo
mov
pop
repnz
push
jle
fnstsw
inc
negb
and
andb
shrb
fsubp
adc
fcoml
jg
adcb
lods
insl
test
repz
add
xor
je
setle
or
out
int
rcrb
sbb
ds
call
stc
pop
stos
leave
lret
test
orb
or
and
or
mov
fadd
jmp
mov
pop
lods
adc
mov
adc
in
cwtl
in
sbbb
xchg
hlt
add
aas
icebp
lahf
adc
fwait
jb
push
enter
xchg
int
cwtl
repz
push
scas
xchg
in
int3
add
test
adc
jb
mov
cmpsb
inc
test
hlt
xor
mov
call
mulb
ret
cmp
add
mov
in
sub
es
pop
add
mov
in
pushw
pop
pop
ja
or
in
push
mov
mov
pusha
cmp
cmp
js
adc
out
inc
mov
sub
push
enter
mov
leave
inc
sbb
addr16
es
rorb
and
add
out
mov
ja
inc
orb
xchg
test
jb
sbbb
nop
js
je
and
jno
cmpsl
and
pushf
pushf
lret
dec
or
add
jecxz
push
jge
sub
fisubrs
push
das
xor
mov
loopne
loop
cmp
mov
sub
cvtps2pd
inc
mov
insl
add
das
jo,pn
inc
add
cmp
shlb
and
mov
dec
js
sub
pusha
lcall
jns
jne
and
in
dec
arpl
xchg
filds
xchg
mulb
cmpl
fs
or
sub
addr16
jb
mov
mov
das
xchg
scas
sahf
mov
mov
sub
sbb
jg
jne
and
xchg
clc
jl
shl
in
jp
ljmp
sub
pop
outsl
in
insl
sbb
jge
cwtl
pop
in
lock
arpl
stos
rcl
mov
mov
xor
xlat
stos
fs
mov
into
sahf
fldenv
test
fwait
aas
pop
shll
out
push
repz
imull
filds
stos
scas
arpl
mov
imul
inc
mov
leave
xlat
iret
push
or
adc
lret
aam
adc
insb
pop
push
mov
pop
movsb
mov
mov
inc
int
fistpll
out
lods
fcom
cmpsb
lahf
mov
mov
mov
cmp
xor
cmpl
dec
jae
fs
sub
imul
dec
adc
adc
inc
sti
repz
es
add
add
inc
bound
pop
mov
and
shll
mov
aas
mov
fistl
xchg
mov
fnstcw
cmp
xchg
movsb
jl
jae
aas
mov
hlt
out
repz
add
and
jl
sub
sbb
add
mov
or
nop
cmp
nop
add
adc
das
dec
je
push
repnz
popf
in
je
push
inc
sub
outsb
movsb
pop
int
ret
gs
aad
outsl
mov
insl
pop
mov
sbb
sub
icebp
rol
scas
mov
lock
out
cmp
fnstcw
test
cmp
sub
push
push
pop
push
jge
mov
adc
pop
ret
fimull
xchg
in
fidivrl
shll
subl
stc
rcrb
jnp
xchg
or
ds
or
shlb
into
into
xchg
lds
notb
jl
mov
in
ficompl
mov
stc
push
stc
xchg
and
push
jbe
add
jbe
sbb
dec
fstpt
popf
push
leave
jl
mov
mov
xchg
push
sbb
mov
mov
insl
xor
flds
jmp
in
insb
xlat
xchg
push
jl
movsl
pop
lahf
insb
cmpl
fisubrs
test
mov
push
scas
cltd
adc
push
aaa
cmpsl
ljmp
inc
or
or
push
shrl
iret
sub
aad
push
adc
insb
jne
mov
lock
mov
sub
jne
sbb
inc
test
or
pop
sbb
inc
in
jo
sahf
stos
jl
xchg
je
cs
cmp
mov
aaa
frstor
sub
mov
adc
xor
and
push
lods
fadds
ds
or
ficoml
and
add
mov
movsb
mov
sahf
sub
test
addl
and
scas
es
repz
cmp
popa
and
loopne
jns
push
xor
mov
sub
shl
outsb
sbb
fidivl
movsl
negb
orb
xchg
movsb
sub
push
pop
cmp
out
add
int
das
mov
sbb
or
inc
mov
inc
out
pop
into
or
fldt
repz
call
subb
popf
mov
in
jno
fs
daa
pop
jo
add
das
jo
out
jmp
dec
sbb
sub
popf
outsb
lea
adc
cmpsl
xchg
and
incb
mov
cltd
in
loop
xchg
mov
sub
leave
daa
sarb
scas
xchg
test
mov
xchg
popf
xor
or
cmpb
subb
or
nopl
add
push
rcll
and
test
int3
aaa
movsl
xchg
lods
adc
mov
lods
push
push
int3
mov
das
int
fdivr
jl
mov
xor
cmp
lcall
adc
loop
je
xchg
neg
xor
popa
dec
repz
out
lcall
cltd
icebp
inc
dec
movsl
loopne
xchg
jmp
js
sub
xor
icebp
cmp
loopne
xchg
cwtl
pop
sbb
mov
lret
int
pop
les
movsl
sahf
icebp
adc
mov
pop
addl
inc
out
lahf
scas
dec
mov
sahf
imul
jbe
imul
sbb
and
outsb
fisubrs
or
mov
pop
jmp
enter
mov
inc
mov
call
aam
inc
rorb
imul
push
push
jmp
jmp
add
push
lds
xor
loop
cmpsl
out
xchg
xchg
ret
pop
jb
xor
sbbl
push
idivb
jb
push
lock
shrb
sub
add
inc
mov
pop
and
dec
pop
out
or
and
cs
aad
inc
or
aad
aaa
out
je
fadds
sub
dec
xor
mov
daa
out
inc
inc
push
aaa
push
fwait
test
dec
mov
pop
jns
popf
inc
data16
sbb
xchg
pmulhw
push
leave
iret
or
mov
jno
pusha
xor
push
pop
push
dec
call
jecxz
fwait
add
sti
mov
loop
icebp
std
mov
mov
sub
xor
in
mov
in
xor
sub
inc
mov
frstor
out
add
dec
inc
cmp
out
shrl
jecxz
jecxz
cwtl
add
add
mov
mov
adc
test
lret
sub
xlat
bound
sbb
pop
out
getsec
xor
lfs
repnz
out
mov
packssdw
call
cmc
dec
nop
lret
sahf
fsubl
divl
jo
dec
mov
mov
cmp
int3
ljmp
and
sub
push
sti
add
cmp
shr
mov
enter
les
xchg
in
push
iret
sub
lahf
cs
xorl
and
jns
popf
inc
cwtl
aad
xchg
scas
jb
inc
xor
mov
and
jg
adc
pop
rcrb
std
call
data16
xchg
out
ror
sbb
insb
pop
jecxz
stc
repz
pop
orl
jge
mov
sbb
sub
jmp
pop
pushf
xor
mov
jle
cli
fcmovne
or
adc
mov
sub
repz
and
cld
and
inc
into
and
push
lock
or
cmp
inc
sbb
mov
dec
out
hlt
rcrb
repnz
js
fsubp
loope,pt
lods
stc
dec
in
roll
push
gs
mov
xor
inc
or
sub
add
inc
mov
bnd
fnstsw
add
fdivrs
push
mov
cmpsb
sub
aas
sbb
scas
mov
cltd
cli
enter
cmp
mov
adc
mov
test
add
sbb
jne
in
push
and
xchg
xchg
jg
out
stos
xor
aas
pusha
insb
cmpsl
out
cmp
pusha
arpl
in
jae
sub
shll
jmp
mov
insl
cmp
mov
test
repnz
sbb
jge
cmp
jo
dec
inc
sub
cmp
es
aad
mov
loopne
daa
jg
pop
mov
inc
fs
and
nop
repnz
enter
mov
lock
aad
test
push
stos
pop
jbe
faddl
jge
into
test
xlat
cs
jnp
jae
cmp
jle
dec
notb
push
jno
mov
or
lahf
cmp
xor
sbb
fucomi
cmp
mov
sub
jb
dec
cmp
ss
add
pusha
jns
jae
jnp
and
mov
jecxz
jg
inc
push
xor
and
mov
divl
mov
test
mov
je
rcrb
fs
rcrl
push
jne
stc
prefetchnta
pop
dec
sub
lea
cmp
out
loope
fcmovnbe
and
movaps
std
inc
fidivl
jo
and
mov
fs
in
imul
xor
imul
cli
and
sub
lret
or
mov
div
cmc
adc
pop
cmp
push
sbb
out
fmuls
mov
stos
fs
sbb
add
mov
mov
movsl
jle
cmp
jmp
xor
ljmp
fiaddl
cmp
aaa
subl
adc
mov
popa
push
sti
push
mov
in
sub
data16
pop
mov
jb
push
push
andnps
mov
push
ret
cmp
jnp
leave
movsl
or
scas
xor
sub
mov
mov
jecxz
rcr
or
pop
js
mov
add
push
and
mov
mul
cmc
daa
test
dec
out
mov
lcall
inc
dec
test
cmpsl
aaa
mov
sub
stos
mov
xchg
jmp
sub
cmpsb
stos
pop
shrl
sbb
pushw
push
shll
arpl
inc
shrl
pusha
mov
lods
xchg
mov
xlat
and
inc
lods
jno
pop
cmp
decb
xor
imul
hlt
inc
jnp
jmp
adc
mov
sbb
mov
fistl
push
cwtl
lret
cld
imul
lret
dec
mov
into
cs
pusha
sbb
out
lds
dec
sbb
std
add
test
push
and
xchg
cld
push
rsm
pop
dec
in
adc
sub
jg
jecxz
cmpl
shrb
adc
sbb
out
sbb
xor
jge
xchg
inc
icebp
xchg
fdivs
insb
mov
pop
cmpsb
lock
movsl
lcall
push
test
mov
into
add
das
fmuls
in
add
dec
in
push
sub
cmp
inc
pop
pop
push
int3
add
pcmpgtd
or
clc
in
jns
and
cmp
dec
push
xchg
ljmp
cwtl
push
in
ds
lret
fimull
dec
fnstenv
in
lcall
icebp
lods
sub
imulb
or
and
stos
shll
jbe
push
pop
mov
mov
notb
loop
fs
pop
into
cmp
inc
inc
lds
push
push
shll
rol
sbb
roll
jge
scas
movsl
adc
sub
insl
out
or
mov
jle
leave
loope
fisubrs
mov
iret
fadds
iret
adc
and
dec
hlt
adc
pop
mov
inc
mov
inc
mov
push
jge
sub
mov
mov
jl
mov
xlat
stos
mov
clc
jnp
cmp
imul
xchg
and
lds
or
outsb
sbb
imul
outsl
sarl
daa
adc
pop
in
add
mov
add
fisubrl
or
mov
mov
push
cwtl
mov
shll
testb
rcrl
icebp
inc
lret
shr
jo
and
sub
in
aad
addb
rcrb
mov
ficompl
lcall
jbe
sub
int
mov
fidivrs
or
lret
sbb
mov
jbe
xchg
aas
push
ret
cmp
or
jge
pop
xor
in
pop
jecxz
lods
lcall
enter
add
lea
mov
sub
mov
imul
cmpb
dec
roll
mov
and
adc
loopne
pop
gs
push
lret
push
push
mov
andb
jg
adc
sbb
pop
aaa
cmpsb
mov
ss
inc
inc
inc
idiv
jmp
loopne
inc
outsl
popf
fiaddl
loopne
movsb
push
or
sti
xchg
push
rolb
cmp
push
mov
xchg
ss
mov
das
sub
inc
xlat
aaa
sbb
mov
lods
imul
movb
out
add
out
gs
xlat
lods
xor
dec
aas
loope
mov
fdivr
loop
insb
scas
mov
inc
dec
popa
mov
pop
cmp
in
ss
push
iret
loope
pop
push
aas
dec
subb
mov
dec
mov
arpl
add
mov
mov
mov
fstpt
imul
test
jo
gs
in
or
mov
inc
or
dec
xor
aam
jecxz
pop
rorl
movsb
lcall
dec
testb
lock
fistpl
jmp
xlat
addb
ss
aad
loopne
xchg
or
test
sbb
push
repnz
addr16
dec
imul
lock
and
push
stc
and
dec
es
call
add
push
shr
xchg
out
lods
push
fwait
xchg
pop
out
inc
imul
inc
lock
test
sub
pop
mulb
lahf
scas
jo
xchg
or
mov
test
mov
std
insl
mov
xor
mull
pop
in
push
insl
mov
adc
pop
aam
cwtl
push
dec
fwait
dec
cld
or
cmp
add
dec
out
adc
dec
negl
scas
enter
loopne
pop
xchg
push
jb
iret
adc
mov
inc
pop
std
bound
cmp
xor
lods
mull
loop
movsl
test
fldt
in
shrl
xor
xor
and
sbb
shr
lods
xor
cs
outsl
mov
idivb
xor
mov
mov
les
popa
negl
cmpsl
test
iret
std
xchg
sbb
add
negb
cmp
mov
jb
jbe
cmc
mov
iret
sub
insb
and
push
xchg
add
sbb
test
mov
mov
popl
jg
add
sub
xchg
and
cmp
mov
clc
mov
insb
mov
in
add
push
inc
js
jo
aaa
adc
popa
ficoms
dec
outsb
push
rcr
jbe
loopne
mov
jae
xchg
popa
ljmp
sbb
sbb
and
les
adcb
push
inc
cwtl
dec
stos
lret
nop
or
cmp
imul
bound
movsb
shll
adcb
imul
fisubrl
in
cmpsb
xor
mov
jo
mov
jb
lahf
xchg
mov
sbb
mov
clc
jnp
rolb
jbe
clc
ja
adc
pop
pushf
js
or
lods
rcll
sbb
jns
push
test
or
iret
jno
jo
mov
call
gs
add
xchg
inc
and
xor
fwait
test
test
js
mov
cmpb
daa
mov
loop
mov
cmpsl
fisttps
jno
or
lea
fimull
xlat
pop
xchg
and
and
lcall
loopne
sub
repz
data16
xchg
mov
dec
dec
push
push
mov
push
push
repz
mov
je
int3
sub
and
hlt
cmc
repnz
and
aas
push
stos
jg
mov
push
mov
in
add
ret
sbb
fisubrs
fsubs
mov
fmuls
lea
loopne
js
insl
rorb
push
jno
arpl
clc
cmc
cmp
icebp
sbb
cld
arpl
sub
fimull
or
dec
outsb
cmpsb
dec
sahf
cld
movsb
into
adc
jmp
mov
insb
int
dec
lret
jns
mov
fdivrl
cmc
mov
or
insb
adc
or
decb
jmp
dec
andb
mov
test
enter
cmp
sub
iret
flds
inc
addl
jb
cmc
jns
mov
sub
mov
jecxz
fs
or
mov
arpl
mov
xchg
das
mov
repz
test
lret
movsb
cltd
push
psllw
dec
mov
push
cmp
clc
ds
leave
inc
adc
outsl
scas
mov
repnz
add
inc
mov
push
cmp
test
gs
movsb
pushf
jne
mov
adc
in
dec
xor
jg
loope
xchg
or
lcall
std
scas
test
repnz
icebp
mov
sarb
mov
jbe
jne
xchg
push
mov
mov
and
push
dec
lods
jnp
lods
cld
or
ja
jno
stc
mov
vmaxss
cld
inc
xor
push
xlat
push
sahf
ret
add
jae
push
push
scas
aas
dec
subb
push
adc
div
aas
cld
push
or
jp
jae
and
push
pop
das
ljmp
jnp
adc
mov
aam
pushf
mov
mov
jb
fisttpll
negb
out
dec
loopne
pop
inc
cwtl
int3
ja
ljmp
pusha
bound
lret
shll
pop
out
fstpl
sub
push
mov
mov
sbb
pushf
dec
sbb
dec
outsb
cmpsl
push
cld
mov
fwait
pushl
sbb
cs
in
mov
xchg
pusha
or
popf
xor
cld
dec
xorb
jne
pop
hlt
mov
mov
sub
cli
xlat
movsb
sub
lea
in
adc
pop
cltd
mov
dec
jae,pt
sub
repnz
loop
xchg
inc
pop
xchg
aas
pop
stos
movsl
mov
ret
mov
xchg
out
mov
jp
mov
pusha
cld
or
jne
outsl
repz
icebp
cmpsb
push
or
sbb
push
icebp
int3
mov
add
mov
into
add
xchg
addl
lcall
mov
insb
nop
dec
pop
mov
mov
sahf
mov
gs
or
xor
sub
inc
shrl
lods
cwtl
mov
mov
pop
in
scas
mov
and
addl
std
sbb
mov
imul
movsb
hlt
sub
movsb
dec
or
push
xor
jae
inc
test
pop
in
xchg
fdiv
cmp
jnp
lcall
in
cmpxchg
cmp
addr16
aam
pusha
cmp
and
xor
adc
jb
and
pop
or
in
lods
lock
push
add
int3
push
les
xchg
or
xor
mov
push
add
cmp
cmpsl
daa
in
mov
inc
sbb
sub
add
in
es
shlb
test
cmp
jmp
popa
bound
jne
lods
sub
fwait
push
test
mov
ret
ljmp
pop
lahf
sub
sbb
popa
popf
loop
das
push
in
lret
inc
push
dec
adc
add
enter
aaa
outsl
add
call
rolb
movsl
xchg
pop
xor
jecxz
sub
mov
xchg
xchg
cs
mov
fdivr
cmpsl
pop
and
xchg
sbb
gs
dec
repnz
push
mov
sahf
push
add
cmp
bound
lock
pop
sarb
repz
sub
popf
gs
xchg
jmp
dec
mov
xor
mov
sbb
cmp
inc
mov
sbb
movsb
shr
sar
fnstsw
inc
mov
xor
push
ss
call
stc
out
push
mov
outsl
xchg
sbb
dec
sub
outsb
arpl
sub
jbe
test
movsl
fwait
adc
mov
pop
loopne
loop
data16
pop
and
jns
into
notb
arpl
push
push
mov
mov
lahf
cld
notb
popl
addr16
cmp
cwtl
jbe
add
push
and
mov
loopne
dec
cmp
insb
outsb
enter
or
inc
sti
push
sub
aad
push
movsb
fimuls
push
clc
adc
popf
test
ss
loope
add
insb
jp
xchg
inc
xlat
sbb
mov
xchg
dec
or
into
xchg
retw
jmp
mov
orl
incb
testl
fists
js
cmp
lret
sbb
xchg
ja
push
test
xchg
jnp
push
push
adc
mov
jle
movsb
push
pushf
fsubs
sub
adc
sbb
mov
xor
push
pop
bound
jb
jbe
lea
jmp
orl
xor
cmpsb
sub
js
out
sub
xchg
rcll
pop
sub
cli
mov
hlt
sbb
mov
repnz
imul
mov
pop
pop
pusha
add
and
jle
pop
adc
or
daa
ret
psubsb
sarl
push
cmp
out
pop
cld
into
in
ds
xchg
xchg
leave
mov
fiaddl
sub
sub
in
fcomip
xor
or
js
popa
leave
jmp
mov
adc
pop
js
cld
in
gs
push
int3
pushl
pop
rolb
fiaddl
fwait
daa
test
mov
andl
add
sbb
loope
xchg
xor
mov
pop
les
dec
popa
ret
fldcw
xchg
sbb
cltd
or
popf
pop
dec
cmc
jnp
push
scas
out
xlat
pop
xlat
gs
push
dec
xor
aas
push
sbb
pop
xor
lret
jecxz
loope
dec
sbb
mov
mov
stos
movsl
stos
ss
dec
fildl
or
les
cmp
xor
out
mov
and
cmp
pop
xchg
pushf
lods
repz
push
jno
test
jmp
fwait
dec
in
or
mov
mov
mov
shlb
inc
xchg
cwtl
mov
push
push
or
lds
jne
mov
inc
pop
fisttpl
lods
mov
pushf
lcall
dec
cmpsb
ret
mov
jp
mov
stos
xchg
push
jge
xor
pop
por
cld
cld
adc
imul
pop
cltd
xchg
sahf
lret
mov
jno
pusha
push
sbb
mov
shlb
mov
dec
repnz
cltd
xor
cwtl
lods
xor
int3
mov
or
pop
repnz
or
addr16
stos
push
repz
movsl
aam
jge
movsl
pop
mov
mov
setae
push
push
push
sbb
mov
jne,pn
lahf
push
negl
push
and
stos
pop
and
cmp
cmp
div
mov
pop
lret
add
and
mov
push
mov
jno
sbb
mov
and
ss
pop
insb
ret
adc
jecxz,pn
sbb
push
or
ss
test
xchg
imulb
jle
inc
cmc
je
ret
xor
dec
imul
sub
pop
test
mov
jmp
addr16
jmp
dec
test
mov
loopne
leave
adc
pop
sub
cmp
mov
jae
outsb
inc
stos
ret
ljmp
fisttps
push
mov
outsl
add
pavgw
sahf
or
push
ja
dec
cmp
jne
popf
xchg
xor
je
sub
push
sahf
jl
xchg
sub
in
sarb
sub
sbb
test
cmp
cld
sub
or
lret
mov
hlt
jne
mov
pop
orl
mov
inc
leave
mov
inc
loope
inc
int
ds
ljmp
jl
or
and
clc
mov
stc
enter
and
xchg
hlt
pop
out
in
sbb
pushf
inc
loop
jo
ror
mov
scas
sti
aam
sub
inc
mov
cmp
sub
jge
mov
jb
outsl
cld
jne
outsl
dec
xchg
mov
and
data16
cmc
or
dec
xlat
insl
jno
push
out
mov
loopne
out
add
insb
xchg
sub
add
xchg
cmp
inc
jl
loopne
push
mov
into
xchg
in
iret
adc
add
mov
test
xor
ljmp
sub
leave
jnp
arpl
and
outsl
mov
add
sbb
pop
aas
xchg
insb
mov
xorb
int3
aam
dec
fistpll
mov
dec
loopne
ja
out
pop
xor
cltd
repnz
xor
std
enter
and
aam
cmp
xlat
iret
out
out
xor
and
dec
fimuls
out
pushf
and
fsub
jne
sub
inc
out
or
loopne
pop
aam
and
bound
es
loopne
negl
fdiv
hlt
into
stos
in
sbb
icebp
or
gs
jp
dec
xchg
out
cwtl
adc
sbb
int3
cmp
mov
stos
mov
stos
mov
pusha
xchg
subl
sbb
fcomp
adc
nop
inc
gs
ljmp
xchg
imul
mov
jnp
out
cmpsl
lds
sub
insb
scas
sbb
lret
add
cli
dec
aam
out
xor
fnstenv
out
jmp
xor
inc
fdiv
jno
sub
adc
addl
sbbl
add
repz
sbb
or
sub
rcll
inc
ficompl
sahf
je
mov
or
pop
popf
pop
clc
jle
adc
xor
popf
leave
push
pop
rclb
push
js
sarb
shlb
dec
lret
xchg
testb
jecxz
clc
sub
lahf
roll
and
pop
xchg
xor
pop
mov
add
in
leave
js
cmp
push
and
popa
hlt
push
imul
loope
sub
push
lods
enter
mov
sbb
jmp
mov
jb
not
cmp
mov
xlat
jl
or
jae
scas
test
mov
pop
jl
xor
or
fildl
es
sahf
gs
aam
mov
faddp
outsb
xchg
sub
icebp
add
lcall
movsl
out
pop
mov
or
call
lret
stos
imul
or
in
push
mov
mov
and
out
iret
test
sub
add
dec
loopne
fs
imul
push
xchg
xchg
jne
push
jg
jnp
mov
xchg
xor
inc
mov
movsl
jbe
pusha
xor
mov
arpl
cmpsb
push
jbe,pn
push
ficomps
jno
outsl
mov
dec
sbb
mov
lea
mov
mov
dec
mov
sub
jnp
dec
mov
push
sub
sahf
in
jg
push
jno
inc
push
pushf
pop
jns
stc
mov
sti
mov
lcall
pop
pop
in
pop
inc
or
mov
ret
pop
ljmp
push
push
lcall
inc
adc
shrb
lods
adc
xchg
lods
mov
sub
movl
dec
pop
cmovns
ja
xor
pop
movb
shl
cmpsl
repz
jb
daa
or
sbb
movsl
push
mov
jnp
std
dec
call
mov
out
bound
cmp
jp
xchg
pop
sbb
mov
mov
cs
push
push
mov
inc
cld
roll
sahf
inc
ret
rorb
ret
add
jmp
pop
sti
pop
mov
outsb
movsl
pusha
pop
push
loope
scas
push
sbb
sahf
inc
inc
leave
xchg
cmpsb
nop
mov
inc
and
es
cmp
hlt
inc
lea
xor
or
outsb
pop
pop
es
pop
lds
aaa
sbb
subl
ljmp
push
pop
daa
fwait
je
fwait
cmpsb
add
inc
rcl
addr16
lock
push
push
shrb
xchg
fsubrl
loope
imul
or
int
xchg
mov
and
jae
dec
scas
aad
les
cltd
adc
inc
cmp
mov
aad
jae
ja
lret
jecxz
push
pop
pusha
loope
mov
cli
dec
fs
mov
add
fidivs
cltd
jecxz
sbbb
pop
xchg
add
jecxz
cmc
mov
cmpsl
iret
cli
lret
arpl
sbb
push
aaa
int3
xlat
fsubs
sbb
dec
inc
outsl
sub
subb
in
and
iret
dec
jp,pn
push
mov
jg
mov
xor
xor
add
or
ss
andb
repz
mov
or
add
jae,pn
mov
inc
mov
mov
lcall
sbbl
mov
popf
mov
cwtl
inc
add
in
mov
xchg
imul
test
pushf
xchg
push
cmp
lods
mov
out
inc
in
pop
xchg
mov
sbb
mov
clc
cmpb
mov
and
arpl
ds
mov
je
mov
pop
cmc
add
in
stos
mov
push
xchg
xorb
pop
lcall
orl
and
push
iret
mov
dec
je
or
push
cs
sbb
imul
stc
shlb
add
repnz
mov
fidivrs
test
pop
jnp
test
icebp
mov
fidivrs
stc
mov
sbb
sbb
lret
sbb
bound
jo
and
stos
ja
add
and
lods
cld
in
jl
cmp
dec
push
xchg
mov
mov
sahf
notb
pusha
aam
imul
add
jp
xchg
scas
or
out
pop
and
sub
sbb
stc
fldl
push
xchg
xchg
mov
and
icebp
frstor
icebp
pushf
dec
dec
mov
fldenv
mov
jg
lcall
jnp
js
ja
or
test
mov
or
dec
dec
ftst
clc
ja
ja
and
push
add
xor
and
sti
fcoms
sub
xlat
pop
jge
mov
pop
push
xchg
cmp
xlat
test
insb
push
cmpb
ret
add
ror
or
cmp
dec
mov
jb
fs
sbb
shll
ret
jno
mov
ret
aad
into
xor
lds
in
jns
dec
push
fnsave
sar
cld
xchg
nop
mov
lcall
fnstcw
outsl
sbb
das
daa
pop
fcomp
mov
cmp
mov
cltd
in
mov
stc
in
in
xchg
scas
pop
or
shlb
xchg
inc
xchg
and
fsubrl
mov
daa
adc
mov
mov
ja
lcall
xchg
lcall
or
std
scas
xchg
xlat
in
in
test
rcr
lds
fsubrs
xchg
jnp
stc
fstpl
mov
scas
cmpsl
jg
and
out
jle
jmp
enter
in
jle
inc
mov
xchg
imul
mov
jge
sub
cmc
mov
jo
test
push
jmp
push
push
cmpsl
out
mov
adc
or
mov
aad
cld
lret
in
pop
out
sbb
in
sub
mov
and
xchg
lret
dec
lret
lods
xchg
pusha
jno
cmpsl
jns
ljmp
and
lret
adc
jg
cli
sub
out
enter
jo
ds
ss
pop
outsl
lods
lock
mov
int
lcall
and
aam
out
add
inc
ds
adc
fsubrl
addr16
sub
cmp
pop
xor
mov
popa
push
xchg
rcll
addr16
test
std
jbe
call
jecxz
cmp
jp
clc
pusha
inc
cltd
jecxz
out
pusha
dec
adc
jecxz
sahf
pop
mov
xlat
sti
ret
sub
int
call
jb
add
mov
inc
rcrb
mov
or
jb
mov
jmp
fwait
mov
popf
add
clc
or
pusha
push
cld
mov
and
push
mov
sub
jg
fistps
in
adc
pop
icebp
sbb
ret
movsb
ds
dec
hlt
add
xchg
cmp
divl
scas
insb
addr16
sbb
ja
push
loopne
and
pushf
icebp
or
std
mov
fcmovnbe
and
jmp
sub
pop
add
adc
pop
in
test
push
pop
cmp
repnz
and
ss
imulb
jge
inc
or
inc
mov
xchg
enter
add
out
sub
cmp
mov
icebp
pushw
jo
jmp
pop
pop
das
push
lock
and
out
jl
flds
scas
push
dec
pop
arpl
sub
dec
fstpt
pop
mov
push
lcall
xchg
pop
push
sti
jbe
sub
jge
mov
sbb
push
xor
sub
dec
bound
dec
fidivrs
jl
xor
push
ret
sbb
rclb
push
jnp
push
push
dec
shll
sbb
outsl
mov
push
dec
or
in
jecxz
mov
pop
cli
lock
pop
gs
cmpsl
and
loope,pn
loop
lods
jb
in
push
cmp
cmpsl
lret
test
and
or
dec
rcrl
sub
sti
push
dec
mov
test
adc
fsubl
and
jl
fisubrs
mov
or
sub
push
sub
out
in
push
push
pop
push
stos
ljmp
mov
adc
ret
sub
lock
lcall
cmp
cli
sbb
pop
and
jmp
iret
push
ss
sbb
ret
push
shlb
xchg
adc
xchg
mov
add
push
int3
fistpl
lods
inc
ss
jle
gs
inc
addb
popf
pop
adcb
loopne
repnz
dec
adcb
inc
mov
push
sbb
aam
mov
sub
das
xor
xchg
int3
pushl
stos
outsb
dec
out
mov
jb
call
add
in
subb
dec
scas
xor
orb
movl
mov
xor
daa
dec
mov
jo
aaa
out
rolb
jb
test
mov
and
and
push
ret
daa
out
scas
jge
cmp
pop
addl
mov
or
outsl
xchg
sarb
movsl
lret
repnz
inc
xchg
adc
and
add
fcmovne
scas
scas
mov
or
je
orl
call
mov
mov
adcb
or
repnz
cwtl
adc
out
jg
movsb
jno
sbb
jg
hlt
mov
loop
dec
and
pop
scas
jp
stos
xchg
cltd
mov
jns
rep
mov
mov
fisubs
dec
rcll
sub
jae
addl
fldcw
mov
test
sub
sbb
jp
sub
pushf
xchg
push
ret
in
mov
pop
inc
inc
out
adcb
mov
pop
mov
xchg
cmp
inc
out
mov
or
and
cmp
js
das
lea
es
push
je
jg
push
adc
pop
mov
ja
cli
mov
jl
stos
repnz
jecxz
data16
icebp
in
mov
in
or
cmp
pushf
negl
sbb
negl
jbe
jle
or
das
mov
dec
lods
fstpl
and
mov
mov
inc
or
andb
gs
adc
test
inc
leave
stos
pop
xor
fwait
aas
xor
mov
nop
inc
out
xchg
xchg
push
cmp
cwtl
faddp
out
hlt
xchg
outsl
xor
pop
outsb
je
xchg
and
daa
sub
fwait
xor
mov
jns
out
test
push
cmp
lea
and
sub
mov
mov
inc
or
daa
mov
aam
test
daa
loop
adcb
icebp
push
pop
or
mov
sbb
xchg
sahf
dec
es
xor
or
cmp
in
hlt
data16
fs
pop
jle
sbb
sub
loope
adc
xchg
mov
push
arpl
lea
stos
sar
call
mov
arpl
je
push
xchg
dec
mov
stos
push
arpl
mov
mov
add
pusha
dec
movsl
sbb
std
les
pop
outsb
jmp
xchg
scas
fsts
jp
sti
add
pop
into
xchg
dec
push
scas
mov
mov
dec
xor
mov
les
mov
std
jnp
rclb
jae
enter
loope
pop
add
ss
push
es
pop
es
imul
mov
nop
popa
hlt
ficomps
mov
cmp
mov
push
call
mov
lds
test
xor
xor
addr16
adc
add
cmp
sub
sbb
push
dec
lret
popf
adc
fists
imul
mov
fdivp
mov
into
call
popa
ljmp
out
cltd
lcall
inc
adc
pusha
cmpsl
cmpsl
cltd
push
cltd
push
icebp
test
adc
bound
das
xorl
pop
loope
or
mov
xchg
or
fisubs
mov
push
ss
and
divb
mov
sub
mov
lret
mov
fwait
add
clc
mov
sbb
sbb
cmp
push
scas
pop
or
adc
and
enter
lcall
lahf
cltd
xchg
test
stos
movsb
or
flds
test
test
movsb
and
lock
lea
mov
push
mov
inc
lea
push
sbb
jo
xchg
aam
dec
icebp
pusha
inc
das
sub
and
mov
or
mov
decl
inc
sbb
push
sbb
loop
fstps
sbb
test
and
popa
iret
daa
dec
stc
test
pcmpgtb
out
xchg
jle
push
cmpsb
fsubrl
cmc
ret
fs
int
push
scas
fimull
stc
jne
fldcw
sub
cmpb
jmp
adc
shlb
mov
pop
jge
inc
cmp
jecxz
xor
adc
mov
aad
das
pusha
pop
fdivs
outsl
jae
ljmp
les
jnp
add
adc
jbe
out
cmpsb
sbb
daa
adc
cmp
adc
jae
mov
lahf
mov
lods
pop
inc
adc
add
or
mov
adc
bnd
xchg
jecxz
movsb
call
inc
enter
pop
cltd
fnstsw
movsl
jne
stos
std
ret
fldl
jno
in
cwtl
mov
popa
stos
pop
inc
stos
or
test
pop
imul
clc
mov
rcrl
addl
gs
rcrl
sbb
add
sub
cs
aas
xor
lcall
cmp
out
sbb
and
mov
cmp
pusha
sbb
orl
jl
sbb
fdivrl
add
xchg
pop
xor
mov
mov
sbb
push
int3
jb
jnp
mov
push
aaa
mov
push
lods
enter
sub
xor
dec
cmp
and
mov
cmp
xor
insl
sub
mov
dec
xchg
push
clc
stc
mov
pop
mov
popa
mov
mov
js
and
dec
push
imull
inc
icebp
mov
jmp
cmpsb
inc
ficoml
adc
sbb
push
ror
lds
fwait
sbb
cmp
aam
jns
lds
lods
and
inc
cmpsl
xor
leave
es
ljmp
mov
sub
pop
loop
sbb
out
dec
push
pop
xor
not
sbb
mov
aaa
movsl
imul
cmpsl
cli
dec
test
xchg
add
mov
push
sahf
mov
add
dec
arpl
pop
leave
push
sbb
xchg
pushf
mov
movsb
xchg
pop
xor
mov
test
cmp
pop
xlat
adc
fincstp
pushf
clc
enter
ds
jno
sub
cmpsb
scas
pop
ficoms
mov
lcall
icebp
mov
or
and
add
jp
stos
ds
mov
shrb
imul
imul
pusha
inc
lods
cli
pop
in
pop
divb
std
adc
cwtl
mov
adc
hlt
or
icebp
adc
xchg
nop
cmp
into
addl
jb
test
sbb
test
test
lds
loop
jo
fistpl
sub
fstpt
lea
xchg
enter
in
les
andb
and
popl
and
in
dec
scas
or
sub
stos
cmpsl
in
sbb
add
cmc
movsl
js
mov
es
push
das
dec
arpl
mov
jmp
stc
push
jl
pop
xchg
xor
lods
testb
es
pop
daa
scas
mov
inc
into
negl
jne
hlt
dec
test
icebp
es
das
out
xchg
mov
xchg
mov
rolb
les
mov
ficoml
aad
adc
out
mov
popa
mov
lret
loope
jne
adc
push
jnp
aas
ljmp
out
int
aam
loope
jae
sbb
push
inc
pop
pop
mov
in
push
aam
ret
loop
testl
movsb
mov
sbb
adc
aas
jne
jmp
mov
mov
test
pop
mov
jno
fistpll
add
ret
daa
jnp
mov
inc
js
lea
xchg
inc
repz
xor
mov
mov
shrb
push
xchg
xorb
pop
xchg
push
cmp
push
cli
jmp
lret
mov
add
xorb
sub
push
xchg
stos
rcrb
cmpsl
stc
test
clc
andb
daa
fdivr
jns
and
in
ret
je
stos
cmp
nop
fstl
jb
mov
aad
dec
nop
jnp
cmp
mov
xchg
xchg
mov
jne
pop
movsl
inc
jo
sbb
rcrb
inc
sub
inc
test
mov
or
data16
mov
addr16
test
add
pusha
ret
roll
push
or
flds
jp
loope
pop
call
pop
mov
mov
cmc
movsb
hlt
addl
and
push
aam
arpl
in
xor
push
mov
out
jge
cmp
cmc
dec
dec
jmp
and
mov
jae
and
movsb
lock
addr16
mov
adc
bnd
push
mov
fs
das
pop
divl
xchg
cwtl
imul
and
out
pop
daa
sbb
fimuls
mov
mov
xor
dec
aaa
mov
jno
loope
lods
dec
adc
shr
dec
push
subb
lods
shrl
jbe
repnz
or
in
push
es
int
pusha
pusha
dec
lods
jmp
or
xor
lock
outsb
lods
arpl
es
sti
jne
or
shl
xchg
mov
pop
std
std
and
mov
adc
scas
aam
jae
movsl
xchg
mov
lods
push
sub
mov
test
in
cli
iret
dec
mov
cmp
pop
dec
cmp
dec
cli
mov
mov
shl
push
push
dec
dec
or
pop
loop
jg
aad
cld
xchg
sub
xlat
pop
mov
dec
push
lcall
jge
cltd
out
ds
mulb
push
sbb
and
dec
aam
sub
adc
imul
cmp
aam
sub
cmp
dec
lds
cmp
jbe
ret
xor
xor
repz
lcall
into
dec
inc
xor
or
jno
mov
lods
test
aas
mov
dec
testb
xchg
sub
mov
jae
pusha
lods
pop
dec
mov
cmpsl
sub
repz
std
mov
movsl
popa
sahf
jp
sbb
test
inc
push
xchg
push
iret
sub
or
fdivrl
out
mov
adcb
pop
inc
and
pop
loop
jns
sub
adc
shl
push
add
and
lods
cmc
inc
test
xchg
cld
pop
loop
aas
jne
pop
jbe
stc
jmp
fdivl
push
pop
and
ret
aad
lret
cmp
loop
and
leave
pop
or
js
bound
addb
test
mov
inc
xchg
push
inc
outsb
jbe
fnstenv
out
sti
subl
sub
jmp
repz
fwait
leave
js
lea
pop
cltd
pop
stc
subl
mov
lods
sub
lods
ficomps
jno
jno
pusha
fxch
imulb
ljmp
popf
sub
mov
repz
leave
inc
test
fsubl
stc
inc
iret
sti
inc
dec
je
pusha
or
jnp
sbb
jb
push
movsl
sbb
fimuls
cmc
jl
pop
sub
jge
popa
lcall
jae
test
pushf
imul
stos
push
push
sbb
imul
sbb
xor
or
mov
mov
outsl
pop
adc
ljmp
jmp
idivb
shrl
lea
xchg
sub
or
pusha
test
mov
insb
pushf
xchg
cmpsl
or
or
pop
loope
xor
cmc
mov
mov
sbb
cld
xchg
adc
inc
call
arpl
sub
adc
call
call
dec
and
cld
push
cmp
in
popf
and
jl
push
pop
add
xchg
add
xchg
aaa
rolb
push
mov
or
dec
cmp
jb
add
es
fcmovb
cmpsl
fs
adc
aas
and
shl
data16
mov
mov
push
fisubs
pop
int3
inc
xchg
insl
stos
shlb
bound
add
les
pop
sub
addr16
into
lods
insl
mov
pop
push
lods
push
popf
mov
lahf
adc
and
inc
into
mov
cmp
or
dec
jo
pop
xchg
das
loope
cmc
pop
sub
jns
out
sub
fucom
push
ret
fsubrl
cmp
popf
add
dec
mov
push
daa
dec
sub
aas
les
xorb
imul
pop
stc
push
sub
stc
lea
mov
inc
jns
mov
int3
inc
jno
jl
mov
loop
push
adc
xchg
clc
addl
pusha
cmpsl
std
aaa
fwait
das
jg
cmp
enter
mov
jb
vxorps
push
mov
bound
jns
out
xchg
jbe
sub
dec
fistpl
and
loop
and
out
dec
or
sub
iret
call
mov
and
sub
in
jo
jo
adc
and
scas
pop
dec
push
pop
mov
or
mov
into
xchg
and
outsb
and
jo
sub
sarb
mov
mov
push
fiaddl
mov
pop
mov
data16
pop
into
gs
inc
call
pushf
mov
mov
cwtl
cmp
mov
xchg
add
sbb
pop
xor
xor
movl
mov
mov
leave
lds
inc
addr16
pop
ljmp
repnz
jbe
rcll
or
or
vmovd
xor
lods
sarb
push
shrl
push
daa
hlt
testb
xor
push
out
clc
mov
out
les
sub
jno
mov
inc
dec
xor
lret
sbb
int3
add
dec
outsl
into
mov
cmpsb
jnp
sbb
jae
sub
mov
adc
loop
out
icebp
jle
sbb
or
sub
xchg
pop
xchg
inc
mov
das
repnz
xchg
sub
adc
pop
dec
xor
dec
clc
xlat
aaa
adc
pop
rcrl
fwait
loop
inc
in
lret
xor
mov
fdivs
shl
js
inc
push
sub
add
outsl
xor
cmp
add
xchg
out
ret
sub
sub
outsl
push
testb
movsl
cmp
pusha
dec
andb
cmp
push
adc
scas
add
ja
and
jl
push
inc
xchg
push
jge
xor
loope
lock
out
movsl
hlt
add
jb
jno,pn
dec
mov
dec
into
inc
dec
cmpsb
lahf
iret
add
movsl
imul
push
fadds
stos
lret
movsl
ret
shr
xchg
and
jo
data16
nop
cmp
add
rorb
jge
rorb
xchg
cli
jg
sbb
repnz
sub
in
adcb
jbe
push
leave
mov
adc
fwait
adc
lock
hlt
adcb
out
adc
mov
jae
jmp
rcll
jbe
hlt
lock
or
lock
sub
mov
sti
mov
popf
in
lea
icebp
cmpsl
ljmp
roll
push
test
dec
xchg
icebp
rorl
hlt
cld
lret
sub
cmp
add
mov
xor
je
test
fstl
insl
mov
je
jbe
cmpsl
xor
add
jmp
mov
xor
std
add
test
and
jno
push
inc
roll
mov
inc
xor
daa
imul
dec
sub
add
jle
cmp
jp
sahf
ds
ljmp
scas
shrb
xor
jo
mov
and
pop
daa
aaa
pop
sbb
sub
inc
xor
push
test
fs
mov
pop
cli
bound
mov
xlat
test
movsl
test
pop
fdivrs
adc
jmp
fldt
testb
jg
sahf
and
pop
data16
mov
cmpsb
inc
fmuls
xchg
shll
ret
mov
into
bound
clc
mov
addr16
cltd
sbb
cli
imul
push
add
inc
fimuls
popa
xchg
pop
scas
push
mov
out
push
add
xor
pop
or
in
jno
outsb
xor
out
inc
dec
sbb
shrl
mov
jg
sub
dec
ret
sahf
push
out
jecxz
push
and
stos
mov
lods
inc
cmpl
adc
mov
push
scas
cmp
imul
jle
xchg
or
pop
mov
pop
dec
mov
fidivl
fisubs
push
inc
sqrtps
mov
push
ficomps
pop
pop
mov
clc
add
out
mov
adc
movsl
push
fnstsw
mov
test
lcall
inc
addb
mov
xchg
xor
pushl
cmp
sub
pop
aad
or
mov
lods
cwtl
jp
lods
adc
jbe
push
roll
imul
xor
mov
fildll
fidivrl
or
pop
dec
mov
int
jns
add
inc
setnp
xchg
movsl
mov
cli
out
pop
outsl
mov
jmp
xchg
pop
arpl
inc
adc
push
sbb
mov
aas
mov
call
mov
aad
rcrb
adc
inc
rorl
mov
xchg
mov
xor
aaa
fmuls
jns
movsl
add
je
add
mov
cli
outsb
mov
adc
fimuls
mov
push
xchg
cmp
push
sub
pushf
jbe
pop
add
xchg
mov
add
cld
mov
loope
imul
sub
adc
ficoml
mov
andl
mov
das
or
in
ror
and
in
iret
rolb
push
and
cmp
shrl
add
cmp
jmp
cli
fsub
add
cmp
hlt
adc
jg
stos
outsb
and
addr16
fbld
add
adc
roll
ret
xchg
clc
mov
imul
jo
scas
jle
rorb
out
jno
dec
ret
orps
adc
cmp
lret
xor
mov
and
lret
lods
popl
sbb
add
jae
sbb
inc
es
xor
cmp
xchg
add
roll
cmp
pop
jbe
loop
mov
not
pop
sarb
cmpb
lret
mov
les
cmpsb
pop
mov
mov
ret
push
dec
push
sub
inc
mov
pop
adc
xchg
gs
mov
jno
xlat
push
mov
jb
imul
mov
add
lret
inc
divl
js
xorb
xor
repnz
mov
lea
in
dec
pop
jle
inc
cmp
cld
xchg
add
pop
or
pop
xor
mov
mov
not
fdivl
icebp
add
xor
cmovp
mov
cld
mov
pop
out
int
jbe
mov
cmp
sbb
nop
rcrb
mov
adc
push
daa
mov
inc
xor
dec
xchg
adc
cmpsl
fidivrs
rolb
jne
add
mov
notl
pop
mov
or
pop
lahf
pop
test
pop
addr16
fsubl
sbb
sarb
xor
stos
lock
cltd
rclb
outsb
jo
mov
dec
testl
xchg
push
cmp
push
or
imul
jbe
dec
cwtl
movsl
pop
push
jp
call
testb
pusha
inc
sahf
pop
add
jns
scas
or
mov
or
stc
xor
jnp
cli
test
aam
jnp
mov
jle
mov
negl
aas
ret
aad
mov
mov
inc
movsl
pop
jge
xlat
xor
xchg
movl
cmp
or
fwait
sub
ret
orb
push
movsl
pop
aam
xor
test
lea
pop
addl
or
aam
popf
xchg
imul
mov
in
loope
fwait
xor
inc
cmp
loop
out
fwait
xchg
jns
fisubl
div
pop
mov
push
xor
push
or
pop
scas
rcrb
es
flds
loop
fisubl
or
or
insl
pusha
jge
cmp
bound
jle
push
fsubs
jg
fcmovnu
push
lahf
push
sub
pop
incb
cmp
or
dec
jb
aaa
mov
mov
add
xor
mov
ljmp
sbb
xchg
aad
cmp
mov
daa
les
loopne
mov
xor
cmpsl
xchg
xor
insl
test
push
mov
loop
or
push
mov
cmp
mov
sbb
inc
stc
pop
in
fscale
push
shlb
dec
pop
pop
sub
shrl
sahf
inc
testb
faddl
cmpsl
test
hlt
inc
and
jecxz
je
push
dec
inc
and
sahf
sbb
cmp
push
movsl
rcrl
sub
scas
and
pop
mov
test
test
sbb
ret
adc
cmp
dec
adc
movsl
icebp
dec
rcl
add
insl
dec
js
mov
or
lret
mov
lret
mov
repnz
xor
mov
cmpb
icebp
stos
ret
mov
in
jg
mov
cmc
imul
arpl
out
adc
fisubrs
or
bndstx
mov
add
mov
test
xchg
cltd
mov
mov
outsl
dec
inc
mov
cmp
or
dec
xchg
mov
mov
dec
mov
sub
and
jb
push
mov
negl
push
jl
lret
jnp
pop
rclb
int
pop
dec
xchg
xor
sarl
push
lret
push
cmp
fcom
ja
ret
jae
ret
hlt
sub
lds
or
insb
lret
cmc
faddl
out
mov
jge
push
adc
je
sbb
negl
fisubrs
nop
xor
test
mov
enter
fistl
push
sbb
sahf
and
push
mov
jno
mov
fidivs
cmp
push
xchg
in
imul
jne
mov
outsb
push
ret
incb
dec
inc
sub
fistpll
aad
test
arpl
mov
js
xchg
ret
jns
jbe
xchg
mov
leave
ret
inc
cli
call
pop
xchg
in
push
es
in
push
ljmp
or
pusha
les
imul
or
or
dec
xchg
js
cli
pop
test
jo
adc
hlt
push
mov
jl
or
fiaddl
adc
divl
mov
add
mov
xchg
testb
inc
mov
adc
pushf
outsb
pusha
in
mov
and
pop
xchg
repz
inc
mov
xchg
mov
cwtl
mov
push
cmp
inc
stc
adc
or
add
mov
shll
shl
mov
neg
jle
repnz
stc
shll
mov
jmp
dec
dec
jle
das
jp
imulb
cmpsb
jg
insb
push
inc
mov
mov
jg
fdivrl
imul
push
mov
dec
das
ret
mov
sub
into
aam
xchg
mov
pop
mov
out
or
sahf
or
sub
xchg
xchg
jns
fimuls
repnz
sbb
rolb
imul
jge
out
nop
sbb
pop
test
sub
mov
jmp
xor
dec
xor
cltd
add
repz
or
and
xor
mov
iret
add
sbb
insl
ss
mov
mov
out
inc
cmpsb
pop
mov
add
lea
aad
mov
mov
lcall
cmp
test
ss
in
lcall
lcall
xchg
xchg
xlat
scas
out
addr16
fst
sub
aas
repnz
push
loop
paddsb
xchg
vmread
pop
scas
sub
daa
dec
out
mov
orb
add
call
add
jno
add
shll
xor
jmp
js
jne
and
sbb
in
iret
xchg
cmp
cmpsb
jmp
ret
dec
pop
faddl
mov
xorb
cmp
pop
xor
jge
sar
jle
mov
xchg
pop
sub
lods
jo
sub
cli
push
push
adc
or
imul
iret
mov
outsb
stc
jmp
cmp
cmpsb
jge
fsubrl
rclb
test
in
ss
rorb
dec
cmp
movsl
mov
sub
popa
lods
daa
movsb
imul
cmp
loop
and
mov
push
xchg
add
push
pop
es
sahf
push
inc
xor
enter
jle
mov
jg
jg
push
jl
and
mov
pop
lret
xchg
add
stos
jno
out
dec
scas
sub
jg
jle
das
xor
pop
icebp
andl
sub
dec
rolb
lcall
inc
das
lea
mov
push
xlat
sbb
std
xchg
ss
jns
push
in
dec
imul
insl
pop
jle
jno
sar
inc
xchg
jp
jl
aad
cld
ficompl
sub
into
add
cmp
idivb
cvtps2pi
sbb
addb
fisttps
nop
push
push
pop
mov
push
lods
sbb
loope
movsl
gs
push
dec
fistps
adc
int
and
fs
cmp
add
js
fs
cmp
xchg
int3
clc
movsb
rol
in
adc
pop
and
rcll
xchg
in
fidivrs
mov
das
test
mov
mov
int
push
ror
jg
and
mov
mov
test
repz
in
inc
bound
out
scas
lcall
pop
and
inc
fcoml
shll
cld
push
mov
cmp
fimull
out
pop
mov
cmp
in
xor
sbb
fiadds
xor
add
daa
sub
arpl
jo
sbb
scas
mov
mov
xor
loope
into
repnz
shlb
add
adc
int
lds
aaa
cwtl
ret
fstp
sub
fildl
gs
jle
and
jno
out
and
aam
and
lret
mov
cwtl
pop
mov
dec
jecxz
inc
pop
jo
mov
inc
stc
out
daa
push
iret
sub
inc
sti
faddl
or
xchg
movsb
jae
cli
stos
popa
add
sahf
push
shll
mov
cmp
adc
sbb
lcall
sar
add
fdivrl
add
mull
fucomp
call
sbb
movsb
lock
lret
je
jno
out
mov
sub
xchg
repz
into
mov
add
clc
mov
out
bound
inc
inc
dec
rcll
test
fldt
xchg
rclb
push
mov
bnd
mov
sub
mov
or
test
cmp
ret
mov
adc
ss
inc
fimuls
in
popf
adc
leave
rcl
test
jg
jnp,pn
mov
loop
pop
pop
scas
pop
movsb
cs
stos
or
loope
mov
push
loopne
mov
out
fisttpll
ljmp
jne
lods
stc
lds
push
loope
push
repz
fistl
inc
cmp
repz
add
adc
jge
sub
mov
adc
js
sub
push
leave
inc
es
fbld
mov
stos
jno
dec
add
jl
add
add
js
loope
dec
popf
into
lret
adc
outsb
adc
clc
adc
inc
outsl
adcb
scas
push
and
jge
inc
cmpsl
imul
jmp
add
out
jns
shrb
push
jb
cld
jle
iret
push
dec
daa
aam
mov
pushf
cltd
sbb
sub
and
lods
adc
jbe
push
jmp
cld
or
mov
sub
pop
movsb
mov
sub
fldl
and
jne
outsb
xchg
sbb
jp
jns
mov
jns
cmp
push
lods
lret
nop
or
or
sbb
pop
add
adc
insl
into
lcall
jns
ljmp
sub
and
mov
xchg
dec
outsl
jg
jo
ljmp
dec
loop
jg
andb
test
adc
xlat
dec
pop
gs
mov
gs
cmpsl
cmpb
jg
and
in
aaa
xchg
in
and
fcomi
imul
xor
js
xchg
addl
mov
add
ljmp
sub
cmpsl
fbld
nop
fscale
cmp
in
pop
mov
mov
cmp
xlat
test
mov
mov
lcall
adc
mov
pop
adc
insl
loop
arpl
xchg
push
jge
xchg
push
out
mov
xchg
arpl
sahf
inc
sbb
and
test
mov
andnps
das
pushl
loope
iretw
push
enter
xchg
loope
into
sahf
sbbb
nop
test
cmp
movsl
test
adc
add
ljmp
jo
test
jnp
dec
or
cmc
jge
nop
xor
mov
pop
and
mov
cmp
sub
ror
mov
sub
test
out
sub
and
ja
dec
jl
lods
cmp
lret
ss
inc
rsm
mov
out
or
sbb
cmpsl
fs
sti
mov
out
push
add
push
lds
nop
lea
mov
mov
push
aaa
jne
cs
mov
inc
cltd
jle
inc
sub
jo
inc
mov
idiv
fbstp
cmp
out
stc
mov
data16
mov
add
jge
mov
xchg
mov
popf
adc
ret
shr
inc
idivl
jle,pt
add
xchg
push
sub
jno
and
mov
lret
sbb
mov
rolb
stc
jns
cmc
cmpsb
cwtl
cmp
mov
inc
add
add
xchg
xchg
test
hlt
nop
aas
jne
divl
inc
xor
jl
cmp
hlt
push
jl
dec
push
notl
xor
hlt
push
popa
ret
les
mov
dec
inc
in
inc
push
movsl
xor
pop
imull
adc
je
div
sub
aad
dec
push
fucomp
lods
xchg
mov
mov
add
sub
fmull
fdivrs
sbb
lods
test
pop
and
xor
cmpsb
fidivs
xchg
shll
in
lret
sub
dec
push
lret
and
lea
cli
or
lock
fisubl
add
mov
fbld
rcll
lock
lcall
int
out
bound
movsl
orl
sbb
ja
ja
imull
xchg
adc
xor
fadd
inc
shrb
and
dec
ror
mov
jnp
movsl
mov
lea
push
gs
xor
jns
jae
push
sbb
sub
jne
sbb
jns
or
pushf
or
pop
xor
icebp
jns,pt
out
inc
dec
jne
pop
ret
jae
loope
push
and
inc
push
arpl
jecxz
or
mov
push
add
jnp
mov
insl
dec
icebp
adc
mov
push
jle
add
mov
fs
test
dec
movsb
in
dec
imul
cmpsb
hlt
push
daa
lret
outsl
loope
xchg
push
ss
jne
pop
sbb
lgs
std
sbb
mov
sti
mov
sbb
and
sarb
sub
cmp
jae
fdivrs
cwtl
imul
mov
jns
push
sub
jns
cmp
pop
xchg
xorb
mov
fxch
fiaddl
mov
or
jecxz
fcoml
outsl
shr
inc
lods
pop
and
fisubl
pop
fadds
mov
int3
outsb
jge
dec
dec
push
jle
jbe
mov
and
sbb
loop
add
out
lahf
xchg
rolb
aaa
sbb
add
movsb
sbb
in
push
fwait
lea
pop
es
xchg
and
aaa
push
je
sub
mov
into
pushf
sub
stos
mull
mov
fwait
adc
sub
ss
push
sub
mov
imul
rcr
dec
mov
bound
add
repz
cmp
jmp
test
aas
loopne
cmp
enter
inc
inc
cli
or
notb
ret
mov
jl
cmp
add
and
mov
xor
cmpsb
mov
cmpsw
nop
stos
rcrb
jecxz
jnp
movsb
jno
les
ret
mov
mov
jne
jo
xchg
jno
push
push
test
dec
out
cwtl
push
push
pop
mov
and
add
leave
stos
es
popf
jecxz
mov
icebp
jnp
xchg
out
dec
add
ss
dec
aaa
pop
test
cs
and
jp
mov
in
jmp
ljmp
lahf
mov
xor
stc
mov
sbb
lock
push
loop
mov
mov
push
push
mov
clc
mov
insb
dec
arpl
out
xlat
sahf
fisttpl
dec
jg
pop
clc
push
jg
dec
xchg
lock
jbe
mov
popf
fidivl
sbb
push
fdivrl
dec
mov
dec
shlb
das
mov
push
sub
jo
sti
lret
pop
xchg
lods
in
mov
xlat
pop
pop
jecxz
jp
jge
or
cmp
pop
mov
out
clc
jmp
mov
pop
mov
pop
dec
leave
mov
inc
xchg
js
push
xor
mov
pop
sub
stc
hlt
sub
push
jne
mov
movsl
negb
pop
pop
inc
jmp
or
xchg
jg
scas
jae
xor
jbe
inc
add
jb
adcl
leave
mov
mov
cmpsl
cmp
mov
insb
pushf
sub
test
fcomip
mov
xchg
jnp
aas
lods
mov
sub
mov
js
pop
roll
ret
jnp
push
jns
cwtl
ficompl
or
lret
shlb
inc
add
daa
lods
lods
adc
sub
pop
pop
mov
add
push
lock
adc
mov
out
mov
and
cltd
push
cmp
mov
cli
nop
adc
push
jecxz
shl
addr16
rcrl
sbb
push
lock
into
mov
adc
jno
push
pushf
add
push
xchg
dec
icebp
loope
mov
inc
xor
jmp
dec
mov
inc
lcall
int3
xor
in
push
xchg
push
sahf
push
or
and
adc
mov
in
sti
xor
or
jns
mov
in
or
pop
ret
lods
xor
nop
out
pop
js
nop
out
fisttpll
cwtl
cltd
arpl
push
popa
repz
insb
pusha
and
cli
jg
aas
or
xchg
adcb
fldenv
pop
addr16
mov
adc
test
pop
mov
pop
aaa
xchg
add
repz
or
dec
ljmp
cmp
lods
mov
xor
mov
out
cltd
add
jl
hlt
movl
call
mov
inc
popf
je
out
roll
xor
sub
cwtl
and
cli
enter
inc
adcb
popa
test
mov
loope
out
add
mov
aaa
stos
xchg
outsb
mov
int
imul
test
jle
out
arpl
fmulp
mov
lret
insb
aad
mov
mov
push
mov
popa
jp
xor
ss
mov
and
int
ljmp
gs
inc
cmp
mov
leave
inc
push
loopne
inc
jle
mov
lahf
jmp
insl
fisubrs
int3
xchg
add
lock
into
jg
stos
loopne
lods
or
dec
pop
push
aaa
movsb
in
pop
data16
sub
inc
daa
arpl
xor
out
adc
sub
out
mov
cmp
push
in
pop
mov
sbb
jnp
out
adc
sbb
sub
lahf
pop
sbb
out
mov
dec
lods
dec
and
mov
adc
into
dec
ret
outsl
xor
xchg
adc
cwtl
mov
fstps
mov
std
jno
in
and
sub
adc
int
sub
inc
jl
pop
out
insl
jle
add
fldenv
lret
mov
mov
mov
push
fucom
cld
adc
fsubrl
in
or
xlat
jmp
dec
je
lds
or
loopne
test
pop
gs
push
in
mov
cmp
loop
scas
outsb
push
imul
and
ret
enter
or
or
fsubs
cwtl
push
adc
filds
pop
andl
mov
shlb
xchg
js
mov
dec
pop
jge
out
cwtl
mov
jl
lret
mov
add
add
clc
xchg
inc
data16
or
pop
ljmp
push
loopne
rorb
jae
push
cmc
adc
jge
adc
imul
outsb
adc
jne
mov
test
aad
xorb
push
test
and
mov
loopne
mov
mov
jg
rep
stc
in
and
sbb
rcl
lods
ljmp
enter
xorps
in
xchg
inc
iret
in
outsl
dec
dec
mov
call
int
mov
mov
cmp
cmovne
mov
mov
ja
outsb
scas
jge
and
add
call
dec
rclb
pop
sbbl
push
xor
jno
inc
int
inc
jnp
dec
add
mov
add
mov
out
inc
or
cmc
fcmovu
xor
imul
daa
loopne
jge
jmp
js
sub
pop
sti
inc
push
sub
pop
inc
fstl
adc
dec
pushf
and
in
jg
stos
mov
push
lahf
test
dec
mov
popa
mov
xor
das
mov
bound
sbb
stc
mov
dec
std
jecxz
es
and
inc
mov
ljmp
mov
add
repz
shll
add
scas
test
sbb
fwait
jg
pop
ret
setl
lods
mov
out
iret
dec
aad
lcall
and
or
xchg
mov
cltd
add
xchg
loope
cmp
sbb
mov
mov
jmp
stos
les
sbb
pop
inc
sti
or
push
adc
dec
popa
cmp
inc
ficompl
mov
jne
xchg
stos
pop
push
ficomps
mov
sti
mov
jg
shlb
mov
push
test
xchg
fcoms
ds
shr
push
fstps
push
mov
subl
aas
out
mov
add
in
jo
hlt
mov
testb
sbb
push
imul
lock
xchg
inc
cli
lods
jmp
clc
mov
mov
or
sbb
loopne
push
pminub
pop
pop
inc
pop
incl
addr16
jo
sub
add
fisubs
cwtl
push
dec
pop
mov
bound
push
aas
lea
inc
jmp
aad
adc
pop
pusha
iret
dec
jne
movsb
imull
in
push
faddl
pop
mov
imul
adc
fcoml
mov
adc
call
rcrl
mov
test
insb
lret
iret
push
scas
pop
sub
inc
out
test
movsl
adc
andb
sahf
inc
mov
mov
inc
push
ret
push
mov
adc
or
and
int
repnz
out
aaa
in
xchg
xor
jp
xchg
mov
push
mov
or
cmc
mov
mov
pop
aaa
xchg
jo
cmp
data16
mov
ljmp
dec
dec
dec
mov
mov
mov
ja
int
insl
sbb
cli
sub
mov
xchg
adc
cld
mov
decb
stos
lock
sbbb
dec
lret
dec
mov
cmp
cmp
sbb
xor
add
outsl
movsb
out
into
push
mov
xchg
cmp
inc
mov
mov
sbb
int
or
cmpsb
inc
mov
inc
mov
mov
lds
cs
dec
test
pop
pop
std
push
pop
jp
mov
jo
rorl
add
movsl
sbb
jmp
jo
sahf
xchg
sahf
dec
or
inc
js
in
sub
push
mov
mov
aam
jno
ds
xchg
rclb
mov
dec
fabs
fildl
pop
sarb
inc
jae
cwtl
xor
arpl
xor
sahf
fstl
popa
lea
test
js
add
movsb
jns
arpl
mov
mov
adc
ds
aas
add
jecxz
adc
ss
xlat
out
out
subb
add
jl
lcall
lods
pop
rcll
insl
sub
push
xchg
les
adc
lcall
pushf
mov
addr16
inc
xor
cmp
pop
push
loope
into
add
adc
lahf
popa
and
cmp
and
shrb
fsubrl
adcb
das
popa
xor
add
popf
sbb
mov
shll
adc
test
mov
add
xor
and
addr16
clc
mov
adc
pop
aad
lret
adc
mov
xchg
push
daa
enter
outsb
xchg
or
xchg
lock
dec
and
cmp
xor
pop
lret
flds
out
cwtl
sub
pop
pop
lock
fs
sarl
test
dec
jo
insl
sti
and
mov
pop
lcall
inc
sub
ja
sahf
call
lahf
cmp
fcoml
jge
movsb
aad
mov
scas
mov
lds
testl
fsubrl
mov
mov
lcall
inc
aaa
xor
push
push
cmpl
sbbl
jp
push
jmp
fstpl
sub
pushw
mov
sub
popf
cmc
jb
mov
adc
stos
divb
mov
add
iret
or
lds
or
sahf
shl
outsb
lock
and
nop
pop
outsl
int
dec
add
and
inc
jg
les
fstpt
lods
push
push
push
les
mov
out
in
sbb
xor
lcall
pop
xchg
in
add
xchg
sub
or
sub
rcl
mov
outsb
xchg
dec
jns
dec
daa
pop
leave
movb
scas
jbe
mov
subb
mov
lcall
fs
xor
ret
jle
cmpl
stc
dec
mov
jl
sbb
mov
xchg
pop
add
inc
mov
std
push
jmp
sub
stc
pop
pop
subb
xchg
mov
push
int3
and
jge
pop
inc
cmp
push
push
outsl
push
mov
mov
divl
mov
xor
sbb
dec
and
fisubrs
in
or
mov
push
pop
mov
inc
cltd
cmpsl
cmpsb
cltd
jp
rorb
pop
pop
sbb
jecxz
daa
psadbw
hlt
mov
or
xchg
in
lret
out
popf
xchg
jns
cmp
stos
rolb
xor
and
leave
mov
daa
test
pusha
pop
push
fnstenv
out
mov
or
sbb
sbb
fs
js
adc
inc
xorb
bound
jnp
xchg
adc
lea
add
pop
ror
push
push
cmp
scas
sbb
aaa
adc
test
sub
test
je
or
adc
pop
dec
mov
jle
gs
xchg
fdivs
ret
add
pop
jg
mov
leave
shrb
sub
xlat
and
cwtl
gs
fwait
out
mov
ret
aaa
ss
out
sub
ret
xor
push
mov
jne
pop
imul
mov
and
aas
mov
sbb
and
lahf
arpl
or
inc
dec
cltd
and
mov
aaa
lock
dec
xchg
cltd
je
xor
pop
rorl
lds
hlt
imul
mov
iret
dec
push
inc
hlt
cwtl
sub
and
outsl
icebp
outsb
mov
mov
je
pop
sub
ds
les
dec
iret
sbb
fists
divl
xchg
sti
sub
pop
jmp
loop
repz
xchg
sbb
jmp
push
pushl
or
stos
aas
adc
add
pop
xlat
ret
cwtl
jecxz
cmpsb
mov
and
push
sbb
je
inc
mov
inc
pop
sub
movsb
inc
mov
das
pop
cs
push
rcll
xchg
xchg
data16
pop
divb
jno
or
outsl
fisttpll
mov
loop
pop
scas
adc
fwait
shll
popf
rol
arpl
in
xchg
pop
mov
js
shl
mov
int
aad
adc
dec
xor
aam
mov
pushf
mov
stc
push
dec
pop
pusha
jnp
add
in
and
fistpl
xchg
and
xor
and
mov
scas
sbb
out
je
in
sbbl
sub
insl
pusha
pop
jne
mov
jne
or
xor
imul
jbe
xor
in
and
pop
add
test
aam
lea
loop
test
iret
or
push
or
ljmp
jg
dec
call
shl
push
pop
mov
jg
ljmp
jno
outsl
and
cld
xor
popa
dec
sbb
dec
daa
fisttps
leave
jae
jle
out
ljmp
mov
dec
je
xor
or
mov
mov
es
xor
mov
mov
std
enter
or
jge
mov
push
jb
fwait
sbb
testb
rcrb
pop
stos
sub
push
lea
jl,pt
enter
notl
inc
pop
jmp
aam
or
xchg
out
ret
stos
xor
pop
mov
repnz
dec
add
fisubrs
jb
adc
insl
pop
jns
bnd
sub
jb
enter
inc
loopne
mov
ret
bound
lcall
enter
out
xchg
iret
sub
lcall
jg
cmpsl
and
pop
mov
fldcw
hlt
jmp
ja
aam
inc
jbe
cld
xor
das
mov
inc
add
push
movsl
inc
out
or
sub
mov
adc
cmp
orb
popa
aaa
scas
jne
mov
jno
sbb
xlat
push
sbb
testb
insl
dec
xchg
test
jbe
mov
lcall
xchg
sub
lods
pop
jnp
rcrb
gs
in
pop
les
ds
lahf
mov
inc
adc
movsl
aaa
divb
test
fimuls
mov
push
push
jns
sbb
jmp
fcomps
adc
sub
dec
clc
mov
popa
int3
pop
inc
dec
out
adc
xor
jecxz
lahf
icebp
lcall
insb
push
nop
movsb
fmul
mov
cmp
pop
rclb
jmp
movsl
out
je
ljmp
fsub
sub
fs
fwait
imul
lods
lret
xchg
test
inc
incb
ret
inc
push
lock
xor
lahf
mov
adcl
stos
cmp
lea
adc
ss
jle
sbb
cltd
clc
jecxz
mov
leave
xor
or
dec
stc
fistpll
pop
xor
sub
ljmp
ret
call
push
sub
or
out
mov
xchg
dec
dec
xchg
mov
out
dec
push
aam
call
sub
sub
inc
push
pop
add
fidivrl
xchg
lds
dec
xchg
rolb
or
fcomps
fs
in
push
fiadds
mov
pop
push
xchg
in
inc
push
and
nop
push
mov
out
inc
xor
test
add
bound
insl
xor
es
xchg
add
or
xor
cld
cmp
mov
movsl
xor
or
lods
adc
push
je
outsl
or
aad
pop
gs
and
pop
inc
push
mov
jle
dec
add
adcl
mov
and
mov
call
pop
lods
lods
inc
mov
testb
cmp
xchg
pop
inc
push
push
lret
lods
mov
or
dec
push
mov
pop
sbbb
movsl
daa
pop
fstpl
mov
adc
ljmp
lahf
inc
imul
cmp
shl
dec
std
outsb
jne
xchg
push
push
popf
mov
dec
mov
sbb
cmp
popa
loope
roll
xchg
fcomps
addb
add
ret
in
in
cmc
xchg
hlt
movsl
inc
into
sub
add
jle
out
xor
mov
push
hlt
mov
test
xor
xchg
out
loope
mov
pusha
cmc
outsb
mov
sbb
imul
pop
jno
imul
mov
jp
pop
nop
xor
and
inc
mov
or
inc
jae
sbb
sbb
jmp
jge
pop
push
imul
ret
push
adc
fwait
sbb
ret
pop
cmp
nop
or
pop
sti
test
lds
pop
ret
jle
inc
mov
das
pop
scas
push
dec
add
std
and
xchg
push
cmpsl
sub
xchg
mov
mov
es
pop
xchg
sbb
lea
std
mov
adc
mov
push
and
sub
addl
add
insb
mov
cmp
es
adc
incb
pop
xor
lock
add
shll
fs
ficompl
mov
cli
arpl
aam
filds
sahf
loope
outsl
repnz
push
sti
xchg
in
gs
out
and
cs
data16
cli
mov
fcmovbe
or
dec
imul
fsubrs
xchg
out
imull
lock
xchg
fs
popf
pop
rcrb
lea
addr16
sub
and
or
sub
in
push
mov
pop
in
xchg
mov
xor
shrl
out
shll
pop
and
mov
jmp
repnz
lahf
add
pop
pusha
dec
cmp
mov
xor
inc
in
aaa
dec
icebp
sbb
xor
cwtl
cmp
push
aam
gs
loop
inc
sub
mov
fbld
push
mov
enter
push
rorb
add
push
ret
lcall
scas
jne
or
dec
and
loopne
adc
fsubs
dec
clc
cmp
das
mov
add
test
dec
jle
icebp
dec
push
inc
cmp
fisttpl
pop
inc
mov
mov
pop
jge
push
push
mov
add
dec
jae
movsb
sbb
scas
bound
nop
sbb
in
data16
push
fnsave
in
aaa
jp
jmp
sbb
repnz
pop
sahf
lods
pop
mov
mov
cmp
icebp
cwtl
int3
cmpsb
or
sbb
insb
pop
sbb
and
stc
pop
mov
imul
imul
stc
jmp
ficoms
adcl
xor
mov
push
jmp
inc
jmp
stos
jno
call
jmp
cltd
or
pushf
mov
mov
fwait
mov
sub
lods
cmp
ds
aaa
mov
mov
inc
jecxz
dec
cmp
stos
orl
push
outsl
xor
push
aas
or
int3
shll
xchg
xchg
jnp
insb
push
pop
mov
lds
push
push
xor
lods
sub
jecxz
cmp
push
xchg
imul
mov
and
and
in
lock
push
dec
mov
and
rcl
in
sbb
lods
sbb
loope
loop
rcrb
jp
rclb
rorb
pop
jne
dec
hlt
int3
xor
push
dec
push
loopne
nop
stc
mov
stc
out
test
cs
jg
shl
sbb
add
dec
sub
call
ret
stos
cmp
xor
bound
fistpl
xchg
jle
in
nop
cmc
aaa
inc
xor
in
nop
sbb
cmpsb
pop
out
loope
mov
mov
and
xor
gs
dec
jnp
pop
push
dec
fbstp
test
or
rclb
stos
dec
ss
fsubl
adc
js
inc
inc
es
cltd
aam
test
push
mov
lds
jmp
xchg
push
js
lods
inc
adc
and
std
cld
push
mov
mov
jbe
mov
cmpsb
stc
test
sbbl
into
sti
lea
cmp
pushf
in
lret
dec
popf
out
outsl
lea
jno
jle
in
sub
leave
sbb
xor
lods
mov
and
pop
push
or
sbb
xchg
xchg
test
mov
cmc
sbb
sub
incl
push
outsb
xor
dec
aaa
push
xor
popf
sub
test
sub
in
call
lock
stc
push
cmpsl
addr16
lock
pop
imul
aas
cld
les
lods
mov
or
pusha
fsubl
sbb
cs
xor
inc
adc
pop
movsb
adc
xor
mov
mov
cmp
xchg
lods
aaa
jne
int3
and
or
xchg
pop
inc
jbe
movsb
mov
sub
jb
jl
cld
mov
mov
or
jb
push
pop
xchg
push
push
mov
loop
decl
into
dec
in
push
sbb
repnz
mov
cmp
gs
shrb
sbb
cltd
and
push
jecxz
js
pusha
fsubrl
outsb
mov
repz
mov
sub
xchg
test
adc
jns
mov
popa
pop
jmp
popf
test
sub
jb
aad
imul
lahf
and
je
cltd
enter
jnp
push
xor
sub
lock
jb
sbb
lret
adc
iret
pop
int3
repz
pop
push
mov
outsl
add
lret
lock
mov
in
sub
jne
sub
das
scas
jecxz
jge
mov
jnp,pn
and
push
pushf
sub
dec
xchg
mov
cmp
pop
adc
cmpsb
xor
jne
stc
push
xor
sbbl
inc
cmpl
jnp
or
cwtl
mov
push
lods
je
jp
fadds
loopne
and
jno
nop
and
mov
jae
call
mov
mov
xor
sbb
cs
cli
dec
pop
out
flds
inc
cld
cmp
scas
dec
repnz
rclb
add
xchg
out
cmpsl
cli
xor
cmpsl
mov
inc
arpl
imul
xor
mov
dec
outsl
pop
lods
js
fisubrl
test
sbb
jl
fmull
xor
hlt
incl
sub
fmuls
mov
add
aaa
xchg
mov
mov
mov
xchg
sbb
and
and
call
pushf
out
andb
imul
adc
rcl
inc
cmpsb
and
xor
sbb
clc
sub
sbb
in
cs
stc
jns
adc
mov
dec
mov
shl
mov
adcb
hlt
cs
push
jns
jmp
addr16
aas
es
popa
pop
roll
mov
jl
adc
add
les
popa
imul
in
mov
loope
xchg
cmc
xlat
imul
in
mov
xchg
pop
adc
mov
icebp
mov
js
xor
and
enter
imul
pusha
fisubs
dec
inc
inc
adc
out
shll
mov
push
cmp
dec
mov
xor
imul
int3
cmp
adc
shrb
xchg
push
outsb
xchg
sahf
hlt
mov
add
cmp
mov
sbb
sti
xor
jmp
sbb
xchg
cmp
dec
jno
and
nop
dec
xor
cmpsb
loop
cmp
lret
adc
and
stc
fwait
jge
xchg
pop
stos
iret
push
cli
pusha
mov
mov
into
loope
or
mov
das
repz
icebp
mov
stc
in
pop
sbb
insl
fdivl
mov
xchg
mov
sahf
and
jl
xchg
sti
sti
inc
roll
test
mov
fsubl
stc
mov
mov
mov
rcl
insb
or
nop
addr16
ds
mov
push
cmp
loop
shl
jmp
push
lret
cld
sbb
mov
mov
cwtl
or
inc
mov
jae
arpl
clc
sub
or
incl
fildl
mov
ja
xor
jp
aam
sub
mov
enter
jp
mov
aad
and
push
cmp
xchg
js
jno
testb
add
inc
xchg
das
popa
jecxz
arpl
das
aaa
and
dec
jae
mov
int3
lock
adc
sbb
scas
addr16
std
data16
jle
adc
insl
jns
pop
jl,pt
outsl
int3
into
inc
add
mov
and
sar
lahf
dec
pop
jl
inc
pop
sarl
daa
pop
xlat
in
lods
jne
lret
mov
int
inc
sbb
mov
or
xor
xor
shlb
lahf
in
fcomip
adc
rcll
sbbl
cmp
sar
cmp
out
icebp
out
scas
pop
popa
leave
dec
xchg
cltd
mulb
inc
fcmovnu
fdivr
pop
inc
aam
xchg
pop
jg
clc
clc
sahf
test
cmpsl
pop
push
push
sbb
movsb
xor
outsl
sti
stos
mov
iret
fistpl
mov
lret
fnstsw
sahf
inc
sub
icebp
lret
dec
outsb
popf
push
or
sti
sub
ds
cli
ss
mov
addl
or
movsl
sahf
or
and
pop
xchg
sub
mov
lret
mov
xchg
sbb
add
rcll
mov
push
cmc
mov
push
mov
xchg
es
divb
into
fsubs
ja
adc
pop
mov
jb
mov
shrl
add
test
mov
jg
mov
fnstenv
insb
xchg
dec
insl
and
cmp
loope
fdivrl
xchg
push
cmpsb
inc
in
inc
add
add
and
enter
sbb
cmp
inc
bound
jnp
pop
pop
push
fcomip
ja
mov
fisubrs
stc
sbbl
lahf
or
leave
push
hlt
int
rcrl
popa
popa
stos
jg
popa
xchg
mov
arpl
mov
outsb
ret
dec
or
sahf
xchg
test
and
dec
push
pop
lahf
repz
pop
stos
adc
push
scas
and
xor
inc
push
bound
sti
add
push
orb
test
mov
push
xor
push
sbb
push
fldenv
sub
shl
push
add
add
pusha
cs
jo
test
jmp
insl
ljmp
inc
mov
push
add
fcom
movsb
inc
xchg
stc
or
sub
mov
leave
mov
pop
les
inc
in
fisttpl
and
pop
and
repnz
push
rolb
faddl
push
psubd
das
add
sbb
das
push
xor
mov
mov
out
imul
sub
lods
inc
ret
sub
lret
mov
xchg
hlt
jno
aaa
pop
int
lds
mov
dec
jp
sub
lods
push
mulb
jp
les
or
out
lods
into
mov
fisttpl
push
add
shr
dec
jbe
hlt
notl
fistps
addr16
testb
pop
outsb
aad
shr
xchg
pop
dec
cmpsl
add
movsb
adc
repnz
aam
stc
push
sub
in
adc
pop
or
pop
pop
cltd
sub
in
fs
sahf
jmp
jp
inc
push
int
pop
call
inc
mov
cmc
fisttpl
add
add
imul
ret
repnz
xor
imul
shlb
adc
lahf
jb
pop
outsb
sub
dec
outsl
ljmp
push
and
aad
cwtl
mov
and
fcoml
pop
shlb
lock
mov
and
or
pusha
in
inc
ffreep
jb
aas
test
and
in
and
dec
sti
mov
pushf
adc
daa
push
cmc
adc
ror
mov
outsb
mov
or
cs
ret
adc
add
push
adc
gs
xor
sbb
adc
pop
pop
or
push
dec
or
sub
sub
sahf
push
ror
mov
xchg
and
jb
xor
test
mov
fnstcw
mov
sub
enter
inc
popa
adc
xchg
ret
and
dec
aam
loopne
dec
pushl
mov
mov
sbb
in
cmc
in
ror
mov
push
jmp
cmp
jg
arpl
cmp
fidivrl
pop
imul
jae
js
cmc
cmp
mov
stos
ja
mov
dec
mov
inc
sbb
popa
mov
or
mov
xchg
mov
mov
loop,pt
jo
in
loop
xchg
push
int3
sarl
cld
add
add
out
push
cli
daa
dec
icebp
into
clc
insb
xor
mov
xor
cmc
ja
xlat
sub
in
fldl
addr16
xchg
dec
jmp
pop
ret
les
sub
fucom
pusha
mov
scas
jp
dec
and
jmp
popl
cmp
stc
pop
mov
sahf
aam
dec
add
pop
jns
jnp
or
xchg
and
lds
or
fldt
push
push
pop
and
mov
leave
imul
repz
rorb
lock
je
scas
into
xchg
rolb
cmp
xchg
mov
cmp
push
jp
loopne,pn
data16
les
nop
jo
dec
cmp
aam
dec
loopne
mov
xchg
leave
in
xor
dec
mov
push
pushf
test
lahf
in
or
mov
push
add
cli
sbb
cs
test
popa
popf
sti
icebp
lret
mov
cmp
mov
mov
dec
test
lods
cld
add
ret
sub
sub
lahf
push
popa
lods
out
mov
mov
into
jmp
push
add
rorl
dec
imul
xchg
cmpsb
rolb
mov
lahf
add
stc
lods
mov
xor
arpl
push
fs
pop
add
or
imul
out
dec
cmc
push
loop
icebp
or
mull
dec
adc
fnstenv
aam
mov
and
mov
jg
dec
sbb
mov
dec
jae
fimuls
insb
lock
frstor
push
dec
movsb
and
adc
pop
sarb
xchg
pop
aaa
scas
pusha
pushf
xchg
inc
add
insl
loop
xor
inc
outsl
adc
push
cld
mov
shlb
jmp
ret
repnz
movsb
jns
stos
subb
xlat
mov
add
aas
push
lock
ljmp
pop
mov
insb
mov
arpl
pop
pop
sti
in
scas
test
loopne
out
adc
arpl
loopne
mov
in
pmulhw
and
fs
push
popf
sbb
dec
out
aaa
jno
inc
xchg
shlb
sahf
xchg
pop
shll
cld
ret
mov
pop
outsb
mov
ret
lods
mov
jae
inc
movaps
mov
mov
icebp
dec
mov
mov
int
jae
dec
mov
orl
push
loop
dec
adc
scas
dec
xchg
mov
jle
lahf
and
pop
push
test
in
divb
cmpb
cwtl
rolb
stos
mov
int
shrl
jp
mov
and
push
icebp
movb
je
lods
sbb
ret
push
out
xchg
and
xchg
mov
sti
push
mov
aam
mov
fdivs
dec
xchg
xchg
pop
cwtl
pop
push
mov
das
fcompl
pop
push
movsb
cmpsb
push
mov
adc
jnp
inc
pusha
or
insb
shl
repz
rcll
imul
xchg
xchg
loop
mov
popa
shrb
add
shrl
adc
inc
mov
mov
popa
js
roll
cmp
int
shr
fwait
push
mov
cwtl
add
xor
pushf
ss
dec
jl
test
insl
pop
push
out
stc
fsubrs
out
stos
test
cmp
xchg
imul
inc
movsb
mov
xchg
leave
xchg
adc
inc
mov
add
sub
push
iret
imul
mov
mov
outsb
push
mov
shlb
hlt
cmp
jae
cmp
ret
jmp
jns
adc
nop
fldt
add
mov
rorl
shll
iret
mov
inc
sti
ss
mov
shrb
xor
into
dec
aas
mov
push
pop
xor
in
dec
cmp
jmp
jb
mov
mov
fcomps
daa
cmp
mov
pop
jae
cmpsl
mov
aas
pop
mov
mov
xchg
xchg
dec
ret
jae
pop
sub
adc
clc
push
lret
jg,pt
pop
sbb
mov
xchg
js
jp
adc
inc
ds
mov
mov
test
sbb
testb
mov
cli
jmp
orb
sub
dec
test
cs
pushf
mov
loop
inc
or
xchg
test
push
ret
in
lahf
xchg
test
mov
sub
mov
cmc
enter
mov
in
cmp
aas
and
or
testb
inc
jb
loope
jne
add
mov
cs
clc
mov
enter
lods
sub
movsb
cmp
jmp
test
fwait
xor
or
cmp
jae
jp
inc
test
sub
lods
xorb
popa
enter
push
push
nop
adc
aad
mov
mov
xchg
lret
rorb
pop
loop
fbstp
gs
sti
push
gs
mov
aad
sarl
call
add
push
jb
leave
pop
xchg
addr16
in
movsl
in
loopne
cmp
mov
mov
cmp
mov
sbb
aad
add
lods
mov
cmp
fisttpll
test
xchg
int
push
pop
jne
js
xchg
testl
and
cmp
sarb
xchg
dec
jb
mov
push
sbb
mov
ret
in
outsl
loop
lods
dec
and
xor
nop
fsubrl
dec
mov
mov
xchg
xor
and
insb
emms
and
or
xchg
jnp
or
mov
mov
mov
ds
cmp
int
imul
mov
mov
popf
rorl
movsb
ljmp
pop
jmp
inc
pushf
dec
lret
test
fists
iret
sub
test
xlat
jae
lods
xchg
jmp
lods
adc
xchg
adc
pusha
adc
std
or
mov
jp
jmp
dec
inc
lea
cmp
icebp
ret
dec
jns
notb
sti
sahf
imul
data16
cmp
xor
testb
lods
mov
jle
xchg
xchg
mov
divl
cmp
daa
jp
out
xor
out
into
mov
inc
mov
push
mov
test
mov
arpl
cmpsl
iretw
dec
mov
sub
test
xchg
div
add
dec
imul
inc
stos
sub
daa
dec
pop
and
orb
push
inc
popf
stos
cmc
mov
mov
pop
loopne
mov
push
pop
movsl
test
adc
enter
shl
inc
pushf
or
or
and
mov
jmp
inc
inc
mov
jns
sti
insb
mov
push
and
or
lcall
jns
cld
in
mov
loopne
add
shll
popf
in
popf
fadds
push
ficoml
cmpsb
cmp
adc
inc
ds
cmp
leave
mov
rcrb
imul
inc
xlat
add
incb
fdivrl
adc
stos
push
loop
ja
mov
je
mov
cmp
ss
test
push
pushf
loope
je
jns
mov
cmp
jnp
fdivl
inc
dec
mov
jae
or
jge
outsb
mov
adc
push
mov
jl
adc
and
xor
and
out
xor
lods
add
mov
lods
bound
out
mov
out
movsb
out
sbb
cltd
jmp
and
inc
test
jl
les
mov
pop
stos
mov
and
iret
adc
or
fnstcw
fnstenv
ljmp
cmp
cmp
jmp
shl
push
inc
jb
mov
jo
lods
test
inc
fisubrs
jmp
lret
fdivrp
and
pop
nop
ret
sub
fsts
pop
or
mov
jno
fldt
icebp
cmp
xchg
xchg
popa
lds
xchg
imul
inc
mov
push
sub
and
hlt
insb
ret
std
ret
in
imul
cs
ficoml
or
pop
lcall
out
jb
gs
out
mov
push
fs
fs
and
jbe
inc
inc
pop
pop
fwait
pop
jg
xchg
ja
icebp
push
pop
shlb
icebp
xchg
dec
xorb
jae
or
jae
les
js
out
add
nop
sub
add
or
dec
push
mov
add
xorl
arpl
bound
dec
xchg
mov
cwtl
sub
xchg
repnz
mov
outsl
sbb
movsl
mov
xchg
hlt
popf
pushf
lods
or
and
cmc
mov
add
aad
movsb
adc
inc
insb
mov
push
mov
arpl
movsl
daa
ret
jnp
cmpsl
inc
ret
les
test
push
iret
test
shlb
pop
cmp
int
stos
aad
push
xor
test
mov
cwtl
xor
fs
cltd
jns
cltd
test
fdivrl
jmp
inc
shl
sarl
hlt
mov
push
inc
adc
inc
dec
cmpsb
arpl
mov
jl
or
pop
xchg
xchg
mov
fisttpl
jae
or
mov
mov
pop
or
mov
imul
xchg
mov
outsl
pop
popa
adc
xchg
mov
jecxz
push
das
sbb
js
div
mov
push
addl
dec
jb
xor
scas
add
es
incb
mov
and
adc
mov
mov
push
imul
stc
sub
vpmuludq
stc
pop
das
mov
sti
lea
mov
or
dec
imul
icebp
rolb
push
pop
dec
sbb
dec
push
iret
leave
or
repnz
mov
sub
div
stos
mov
int3
test
push
sti
stc
and
xor
call
and
inc
sub
mov
push
call
fildl
scas
shll
jge
push
mov
xor
inc
stos
mov
in
in
daa
int3
mov
xor
jno
imul
cmp
xchg
incb
xorb
test
and
ja
add
aam
roll
jnp
aaa
adc
xchg
cmc
xchg
data16
lret
add
cli
and
push
mov
dec
sbb
adc
add
cmp
push
out
mov
jg
popf
and
orb
out
sti
jge
jnp
outsb
rcrl
cmpl
push
sbb
jl
daa
je
mov
add
inc
sbb
jnp
imul
and
aaa
bound
jl
jo
sub
jns
mov
or
clc
mov
pop
mov
push
lea
cmp
add
adc
pop
and
cmpb
xor
mov
aas
and
sub
repnz
mov
inc
jnp,pt
out
xchg
push
sbb
xchg
dec
mov
and
add
cld
cwtl
imul
mov
ret
imul
cltd
mov
lahf
and
sub
pop
mov
and
jg
movsb
xchg
push
pop
xorb
out
and
mov
dec
data16
xor
fdivrl
stos
lcall
inc
das
inc
cmp
cmpsl
fwait
pusha
jmp
and
out
push
sbb
push
cmc
sbb
add
mov
leave
aas
mov
push
xchg
jo
jbe
cmp
sub
add
stos
mov
out
movsb
adcl
sbbb
push
sub
mov
mov
fisttpl
push
dec
jg
pop
mov
negl
out
inc
fs
pop
in
imul
iret
pop
xlat
mov
lcall
decb
xorb
push
or
int3
pushf
pop
fsubs
addr16
sbb
jecxz
outsl
mov
and
testb
pop
mov
and
mov
popa
daa
and
mov
adc
notl
mov
pusha
std
aaa
adc
jge
adc
push
in
jl
pop
movsl
rolb
xchg
inc
movsl
add
xor
adc
out
push
ja
dec
mov
push
push
les
imul
repz
push
pop
shrb
inc
jmp
jne
shrb
jecxz
pushf
jge
jmp
jecxz
lcall
inc
sub
lods
jge
sbb
sub
jmp
sub
in
push
test
dec
jmp
sub
dec
stc
inc
jp
add
rorl
sbb
inc
or
inc
or
mov
adc
pusha
aad
rorl
lret
or
cwtl
test
in
mov
jmp
stos
cmc
dec
hlt
ret
in
add
inc
jl
insl
jno
adcb
cmc
xlat
enter
adc
jg
ds
push
ficoms
xchg
mov
xchg
iret
push
inc
dec
testb
test
mov
inc
ret
mov
cld
inc
pop
iret
rorb
sbb
push
fnstsw
xchg
pushl
sbb
push
adcb
inc
xor
mov
aaa
mov
or
repz
lods
subb
sub
dec
dec
jns
mov
pop
es
xor
test
jnp
dec
xor
repz
imul
fdivl
dec
sub
and
xchg
push
out
repz
sub
pushf
cli
dec
in
mov
out
inc
mov
cmp
outsl
jmp
adc
scas
and
idivl
mov
mov
mov
mov
fs
loope
div
negl
cmpb
dec
xor
nop
cmp
or
mov
pop
pop
dec
sub
mov
push
sti
mov
pop
in
clc
gs
ret
pop
mov
or
jp
xlat
and
mov
cmp
and
adc
adc
cmc
mov
jp
sbb
xor
adc
mov
pop
sub
cmp
pop
jg
jecxz
adc
sarb
dec
mov
gs
and
out
mov
outsb
push
mov
addr16
push
movsl
push
jnp
cmpsl
aas
mov
aaa
sahf
fprem1
mov
in
inc
and
cmpsl
mov
out
hlt
inc
push
mov
push
xor
push
clc
clc
fstl
mov
iret
xor
xor
mov
fcoml
pop
pusha
pushf
mov
std
fisubrl
jg
pusha
rorb
jge
bound
cmpsb
push
sbb
sub
enter
add
xor
movsb
into
lea
fnstenv
mov
fmul
lret
mov
xchg
xor
cmp
loope
push
adc
xor
and
insb
enter
push
stos
cmp
jo
mov
popa
daa
lret
sarl
fists
das
cmpsl
lcall
cmpsl
enter
lods
imul
std
lods
cmpb
int3
insb
movl
ffree
sub
adc
stos
fdivl
test
sbb
daa
push
clc
mov
ljmp
shr
add
fcmovbe
cli
mov
mov
push
adc
pop
inc
cwtl
xchg
adc
mov
add
pop
adc
sub
in
pop
in
pusha
add
ljmp
xlat
cmp
popa
dec
mov
adc
fwait
sbb
or
push
lahf
test
push
mov
xchg
xor
idiv
punpckhwd
test
bound
cwtl
addr16
std
mov
stos
dec
out
sbb
lods
jbe
cltd
adc
jb
call
fdivrs
jl
leave
push
and
stos
mov
cmpsb
int3
push
imul
out
clc
xchg
mov
fists
fnstsw
lahf
add
aam
jae
push
cmp
push
lds
call
in
push
mov
or
fldcw
xor
aaa
in
cmpsb
push
inc
call
dec
mov
inc
cld
lcall
ret
and
cli
aaa
xchg
outsb
popa
scas
test
iret
add
stos
jb
out
subl
push
pop
int
mov
cmp
jo
std
cmp
push
xchg
stc
lret
loop
call
dec
lret
jns
xchg
xlat
mov
popf
int
inc
jge
cmp
mov
dec
add
sub
dec
dec
mov
fdiv
pop
adc
jmp
push
jle
sahf
pop
in
ret
dec
test
mov
in
es
mov
dec
jg
mov
orb
sbb
mov
jp
jb
dec
xor
pushf
inc
and
jb
dec
and
iret
add
sub
mov
xchg
je
and
lock
add
push
mov
jecxz
sahf
repz
test
out
mov
inc
cmc
call
fs
or
push
adc
push
jmp
int
inc
xchg
mull
xor
mov
mov
mov
clc
mov
push
inc
sbb
mov
or
cli
inc
repnz
pop
mov
xorb
je
pop
popf
jmp
mov
jge
xor
mov
mov
call
int3
stos
lcall
mov
adc
or
mov
mov
adc
dec
pusha
repnz
dec
mov
dec
cmp
mov
mov
je
and
add
mov
cmp
lahf
jle
int
leave
mov
ja
scas
test
cmpsl
cmpsb
fninit
scas
les
push
out
cmp
stos
jne
xchg
leave
cmp
push
div
mov
xor
iret
inc
jno
out
pusha
fisubl
pop
cs
incb
jecxz
dec
jle
xor
or
fs
push
pop
push
xor
imul
mov
jbe
pop
in
je
ret
sub
icebp
xlat
or
movsb
dec
dec
imul
inc
inc
lret
cwtl
into
in
repnz
and
fsts
mov
inc
repnz
pop
stos
or
dec
dec
or
loope
mov
adc
jg
pop
dec
cmpsl
jecxz
shll
int
movsb
lock
adc
cld
rorb
fisttps
mov
jno
fs
fisttpl
cmp
mov
add
inc
mov
insl
in
xor
fnstcw
adc
fsubs
jbe
es
rcll
or
pop
call
cmovbe
into
pop
add
fistpl
xchg
sub
addr16
fsubl
ss
lods
inc
ja
lret
jbe
push
push
push
cmp
sub
lods
out
addr16
subl
rolb
test
lods
mov
push
sti
mov
push
gs
xchg
ljmp
push
cmp
arpl
into
sahf
sub
imul
es
and
in
ljmp
or
int
and
inc
xor
jmp
into
notl
lret
jg
pop
or
bound
leave
xchg
out
movsb
aaa
sti
je
stos
fcmovu
sub
cmp
insb
mov
in
xlat
lds
xchg
mov
inc
lods
insb
jae
xchg
pop
lds
sub
test
ret
orl
je
xor
mov
dec
out
add
sbb
adc
lds
inc
pop
adc
xor
adc
mov
loopne
je
test
cmp
jp
push
lret
stos
pop
push
dec
cli
cmp
jecxz
mov
test
dec
adc
inc
enter
xchg
mov
aas
add
push
mov
repz
jecxz
push
es
repnz
or
sub
pop
in
dec
aaa
fildll
in
push
rcl
adc
pop
dec
cli
icebp
stos
bound
mov
mov
dec
outsl
in
repz
and
and
flds
sbb
jb
int3
fistpll
xchg
lret
mov
arpl
icebp
and
pop
shlb
and
aaa
jo
repnz
out
inc
pop
push
int
hlt
fsubrs
sbb
popa
adcl
jbe
sbb
pop
jno
mov
pop
jb
pop
stos
enter
adc
lcall
arpl
nop
xchg
xor
inc
loopne
cmp
sbb
xor
clc
push
leave
inc
dec
repnz
pushf
sub
andb
out
mov
lods
add
mov
lss
pop
or
shll
xchg
int
arpl
out
or
adc
pop
test
dec
aam
stc
rorb
xchg
adc
mov
lea
hlt
pop
adc
pop
repnz
jae
cltd
insb
rol
inc
add
jecxz
adc
sub
insl
fadd
sub
data16
rcl
push
jmp
push
inc
mov
sti
outsb
nop
and
fdivrl
pushf
cmp
out
xor
int
enter
add
sub
xor
hlt
push
mov
lds
scas
sbb
lahf
jne
lea
sub
cmp
pop
xchg
mov
in
lret
out
imul
mov
ljmp
and
stos
push
lea
push
sbb
mov
cmp
fists
xor
cmp
add
lea
jg
loop
imul
int
sarl
aam
imulb
or
push
insb
pusha
push
lea
jl
sbb
out
scas
test
inc
push
lahf
fidivrl
ss
mov
out
scas
sbb
mov
fstl
adc
int3
mov
sbb
addr16
aaa
repnz
lret
call
ljmp
je
inc
push
or
fistpll
pop
xor
dec
pop
popf
lret
imul
les
inc
inc
jp
pusha
inc
test
mov
sbb
xor
push
js
addr16
movsl
push
mov
pop
dec
cltd
mov
out
cmp
push
mov
dec
cwtl
lret
mov
dec
and
add
imul
cltd
es
outsl
shrb
pop
xor
lods
rcrb
inc
cs
mov
inc
push
jp
dec
repnz
adc
sbb
push
adc
std
push
lea
push
xchg
ret
cwtl
shlb
or
jb
je
or
les
adc
insb
mov
mov
ds
insl
mov
aaa
nop
mov
nop
leave
jo
mov
popa
fs
fwait
adc
add
outsl
popf
in
push
pushf
cmp
inc
decl
pop
int
fistpl
mov
iret
sti
adc
or
sbb
cmp
iret
sbb
push
outsb
xor
push
or
cmp
jb
fisubl
aaa
in
mov
pop
bound
fsubs
add
jns
pop
mov
sub
mov
cmp
lret
xor
adc
dec
cs
mov
mov
mov
mov
xchg
mov
sub
jae
ficomps
jle
dec
sbb
shll
mov
ret
scas
cwtl
mov
ljmp
xchg
cltd
sub
nop
jae
sub
mov
mov
out
sahf
inc
push
sub
xchg
dec
imul
xor
jecxz
mov
adc
push
mov
pop
adc
dec
test
movsl
mov
test
testl
dec
ljmp
push
in
fimuls
xor
cltd
ljmp
jp
push
adc
mov
pushf
out
dec
cltd
test
pop
test
sub
stos
out
lock
icebp
mov
stos
mov
std
or
shll
push
adc
int3
push
sbb
push
add
xchg
jnp
sub
pop
out
jge
push
and
stos
inc
and
mov
ljmp
jg
push
dec
xor
pop
xchg
sub
ret
fsubrl
jbe
mov
xchg
inc
movsl
hlt
pushf
adc
pop
repnz
inc
push
add
shld
inc
push
outsl
jo
mov
sub
in
cwtl
jne
pop
ljmp
mov
push
test
clc
sarl
pop
jg
sub
pop
lret
jle
mov
pop
std
movsl
and
jg
sub
jg
loope
stc
cmpsb
cld
inc
shll
leave
mov
testb
mov
mov
repnz
movsl
dec
ret
cmp
ja
stc
xchg
daa
cmp
mov
mov
ja
fistps
or
movsl
movsl
sub
pop
shll
sbb
xor
mov
add
shlb
or
aaa
loope
or
pop
int
adc
inc
repnz
addl
gs
ss
lahf
mov
inc
push
out
push
jnp
sub
mov
mov
mov
mov
dec
mov
sub
cli
push
test
stos
xchg
dec
pop
in
mov
sbb
ljmp
aaa
mov
xor
mov
pop
bsr
sbb
sarl
jp
sub
int
add
adc
enter
xchg
jle
sti
sub
sub
pop
xchg
stos
pop
mov
shll
jnp
push
fwait
add
lds
mov
jle
sub
imul
ret
adc
jo
mov
jp
stos
movsl
mov
aad
int
push
pop
aas
clc
out
std
sub
arpl
ja
xchg
mov
ja
and
jae
mov
fisubl
jg
push
js
js,pt
aaa
mov
lret
adc
and
ret
mov
aas
mov
xchg
jp
dec
sub
test
fidivs
pushf
mov
dec
add
sbb
xchg
xchg
ds
mov
repz
out
cmc
or
jae
inc
xchg
push
pushf
mov
mov
sub
or
pop
or
out
int3
pushf
sub
jge
inc
ds
and
daa
loop
icebp
push
das
mov
add
out
jnp
repz
in
xor
sub
mov
fcmovne
jae
mov
scas
mov
adc
iret
sti
test
push
push
fildl
add
scas
xor
mov
cmp
cmpb
imul
xor
lds
dec
clc
jge
add
sbb
jl
int3
mov
fcomps
dec
dec
outsl
lock
sbb
daa
pushl
jnp
jl
jg
imul
daa
mov
stos
test
xchg
mov
bound
clc
les
pop
push
lods
mov
testl
add
mov
cwtl
xchg
sahf
lds
xchg
mov
test
mov
outsb
iret
mov
xor
adc
adc
dec
and
stos
gs
sbb
sbb
sahf
cmpb
sub
sub
iret
hlt
mov
stc
push
jcxz
xchg
fsts
cld
leave
push
pop
jmp
subb
incb
insb
mov
mov
push
xchg
insl
out
leave
faddl
ret
outsb
mov
mov
rorb
mov
cmp
add
out
xor
cmpsb
xor
rcrl
pop
mov
jb
and
arpl
in
cltd
push
ljmp
xchg
pop
inc
scas
xchg
out
stc
xor
loop
or
or
mov
scas
push
ret
mov
std
sbb
or
adc
mov
adc
xchg
xchg
push
push
push
pop
push
cltd
in
stos
mov
dec
or
scas
mov
addr16
sub
push
insl
dec
mov
push
mov
aam
out
mov
sahf
in
dec
jle
mov
lods
ljmp
sbb
or
mov
lret
jge
push
insl
insb
fwait
or
enter
repz
imul
or
sbb
int3
mov
cmp
push
mov
xorl
fdivs
out
cmc
add
fwait
pop
pop
mov
jecxz
or
pop
fidivs
mov
pop
add
lret
out
das
aam
sbb
loop
mov
push
add
out
sub
movsb
dec
xchg
push
lock
pushf
adc
sub
ficoms
xchg
imul
das
inc
scas
scas
cltd
cmp
stos
push
pop
xor
idiv
pop
pop
sub
cmp
cmp
pop
popf
dec
aaa
lods
je
imul
xchg
je
and
cli
pop
add
xchg
dec
daa
lret
les
idivl
aas
iret
inc
out
sti
das
add
mov
cmp
adc
sbb
daa
jae
sub
xor
sbb
cmpb
mov
pop
or
pop
icebp
pop
pop
mov
out
sub
push
in
jle
mov
pop
add
je
shll
into
aad
movsb
outsb
adc
xorps
and
jmp
test
std
pop
mov
shlb
cmp
adc
adc
pop
sbb
sub
lods
mov
pop
loopne
mov
pop
pop
popf
iret
pop
sbb
cmp
push
mov
sub
cli
mov
jg
ljmp
cmc
aam
inc
out
daa
xchg
xlat
xchg
mov
neg
loopne
add
push
jno
mov
inc
xlat
dec
nop
xor
pop
subb
xchg
aas
push
lsl
pop
add
xchg
xor
or
fstp
std
sub
dec
inc
adc
xchg
inc
pop
or
jl
mov
icebp
sbb
or
lcall
cmpsl
mov
aaa
inc
jle
xchg
cmp
push
cltd
inc
cmp
arpl
insb
xchg
rol
adc
divb
pop
add
jae
jae
mov
mov
sub
pop
lods
inc
sahf
cmp
fs
outsb
daa
mov
pop
js
rolb
leave
repz
fadds
pop
add
jl
pushf
lcall
jg
pushf
jnp
sbb
iret
rolb
adc
sbb
mov
push
or
cli
add
sbb
pop
test
insl
xor
clc
fadds
dec
jp
or
and
push
bound
out
jle
mov
mov
dec
dec
loopne
fidivrs
push
jle
out
lock
lret
pusha
rcpps
insb
cwtl
inc
xchg
fldt
sbb
in
es
pop
fistpl
adc
movb
xor
sub
rcrl
hlt
xchg
push
add
ss
cli
mov
xchg
xor
test
in
fstps
adc
sbb
pusha
outsl
inc
jbe
xchg
xchg
pop
push
dec
and
jle
bound
enter
xor
pop
movzbl
mov
inc
sbb
pusha
aad
pop
and
add
jecxz
xchg
scas
icebp
push
mov
add
jecxz
mov
outsl
ds
adc
iret
xchg
inc
adc
jno
outsb
inc
movsb
mov
jns
add
adc
rcll
data16
inc
push
xchg
xchg
mov
out
test
clc
mov
mov
jmp
in
mov
adc
inc
adc
rclb
cmp
jne
or
ljmp
mov
mov
adc
jbe
and
in
mov
dec
call
xor
or
adc
pusha
rcrl
xchg
inc
scas
xor
loopne
mov
mov
add
outsl
mov
lret
fistl
mov
cwtl
jb
jle
loope
pushf
push
jp
inc
push
loop
lret
std
jns
inc
into
mov
dec
inc
inc
or
add
cmp
es
in
mov
add
test
rclb
sbb
add
add
sub
cmpsl
pop
jl
or
fs
les
or
xlat
mov
lret
xchg
xor
hlt
enter
arpl
cmp
mov
xchg
aam
push
clc
sub
push
popa
push
ret
pop
loopne
jg
gs
subl
in
repnz
cltd
scas
mov
jl
scas
mov
push
stos
fsubl
test
out
jne
jle
xor
sahf
cmc
or
sub
shlb
pushf
xor
iret
mov
orl
jae
popf
push
int
repz
or
mov
push
sti
fwait
adc
rolb
sbb
and
adc
cmp
push
rol
das
jl
mov
mov
cli
daa
or
and
mov
dec
js
cmc
cmp
lock
and
lock
lret
insb
or
pop
scas
icebp
loopne
xchg
add
ret
add
push
and
mov
jecxz
sbb
dec
dec
gs
hlt
mov
outsl
pop
ret
int3
xor
cmp
mov
dec
mov
je
and
outsl
stc
imul
sub
jns
out
add
dec
in
jnp
fisttps
or
and
scas
add
into
and
clc
ss
rcll
ret
test
mov
mov
mov
loope
lock
into
pop
jp
movsb
aad
ljmp
push
sub
sub
pop
adc
push
pop
push
popa
cli
out
subl
pop
insb
test
push
or
sbb
ds
push
loop
into
ljmp
stos
cmp
push
leave
sbb
fstp
jg
push
push
jnp
sbbb
cmp
in
inc
mov
data16
mov
cmp
push
dec
movsb
or
xor
push
repnz
psrld
jb
jg
sarb
sub
xchg
push
inc
mov
lahf
aaa
inc
or
lock
ljmp
mov
or
enter
and
inc
pop
out
mov
movb
and
lods
insb
rcrb
and
push
pusha
pop
and
shr
fs
orb
cmp
jmp
in
inc
mov
hlt
js
mov
aas
sub
and
inc
xor
lahf
or
dec
dec
pop
mov
jg
inc
lahf
sbb
mov
sbb
lea
xchg
sahf
and
mov
les
push
in
sub
pop
out
add
lea
sub
jmp
cmp
test
pop
pop
cld
dec
in
add
push
lret
xor
dec
or
loope
mov
dec
test
pop
and
daa
adc
ret
adc
and
cltd
mov
mov
add
mov
pop
int3
jecxz
jb
cmp
insl
fwait
jno
sub
push
sarb
or
outsl
cld
imull
xchg
lock
in
cmpsb
int3
lret
mov
push
xchg
or
push
scas
mov
mov
sbb
xorb
lds
mov
scas
nop
fidivl
cmp
sub
jbe
xchg
lret
mov
push
mov
enter
ja
leave
aas
cmp
inc
int
push
dec
in
and
mov
lret
imul
or
adc
pushf
ja
mov
jl
or
mov
loopne
and
xor
jnp
pop
fnstcw
pop
jmp
sub
push
jnp
xor
xchg
pushw
int
mov
pop
imul
addr16
and
sbb
mov
sub
out
scas
ds
mov
dec
xchg
rcll
ss
ret
popa
sub
cltd
repnz
push
or
adc
movsl
mov
fadd
test
mov
aas
ret
int
incl
jmp
mov
cld
subb
mov
cmpl
jp
add
es
push
lret
and
scas
and
push
xchg
sub
jno
mov
mov
mov
xchg
push
movl
pop
call
ret
les
add
out
hlt
or
jl
cli
shrl
fdivrs
bnd
push
ds
stos
inc
push
ret
mov
xchg
or
jle
dec
sbb
mov
adc
das
test
shl
and
jge
ds
add
dec
fldl
popa
mov
sahf
mov
imul
dec
enter
sbb
cmp
imul
lods
lea
mov
sbb
enter
sbb
dec
xchg
push
lea
mov
leave
pop
jmp
add
popa
shl
fsubl
cmpsb
lret
pop
loope
fsubr
das
pop
xchg
clts
scas
jle
or
out
or
dec
push
leave
push
and
scas
adc
call
or
add
jl
mov
cmpsb
shl
jns
repz
adc
int3
shr
mov
dec
pop
dec
es
dec
or
mov
int3
pushf
data16
out
cmp
pop
ret
or
repnz
fwait
jb
cmp
or
aas
in
push
add
xchg
popf
sbb
pop
lahf
mov
cmp
jb
dec
out
mov
fiaddl
aaa
sbb
cltd
ret
xchg
imul
add
test
jp
test
inc
pop
sub
fisttps
inc
adc
hlt
icebp
cmp
out
vmovups
jne
imul
jae
add
pop
fs
cwtl
mov
mov
mov
movsb
jae
mov
addr16
stc
fimull
push
xor
pop
add
fs
out
ret
out
fnstenv
add
out
add
sbb
das
call
xchg
push
int
loop
push
xor
and
es
xor
ret
dec
pop
push
jb
jbe
scas
sbb
subb
insl
arpl
inc
and
mov
mov
pop
jecxz
outsl
movsl
nop
dec
cmpsl
mov
jge
or
sarb
pop
pusha
dec
inc
jmp
shrb
iret
dec
jg
sahf
in
pop
out
dec
lahf
int3
xchg
stos
adcl
imul
lahf
add
mov
movsl
mov
mov
and
mov
push
cmp
mov
jne
mov
adc
pop
xor
add
shl
into
sub
les
nop
je
roll
or
xor
fsub
mov
loopne
popa
push
stc
push
adcl
jns
mov
cmp
adc
xchg
das
pop
dec
aaa
lcall
sarl
jecxz
enter
imul
dec
jp
test
lods
nop
mov
inc
int
xchg
add
and
xor
mov
mov
sub
sahf
jbe
pop
out
sub
ljmp
sbb
and
pop
int3
xor
dec
sbb
xchg
or
fwait
jae
imul
push
sbb
xor
mov
push
pop
jno
cmp
in
ret
icebp
adc
cmp
mov
jecxz
cmp
mov
mul
cld
xor
mov
or
mov
push
cmc
test
mov
dec
xor
jae
and
push
mov
outsb
lahf
in
and
and
cwtl
repnz
xor
ret
jae
cmp
mov
fcomps
mov
and
mov
mov
pop
imul
mov
popa
shrb
dec
push
push
bound
int
arpl
add
test
jg
ret
cltd
xchg
pop
pop
bound
enter
sahf
xchg
jmp
adc
inc
lods
and
inc
icebp
dec
inc
lahf
add
pop
imul
jne
mov
out
data16
out
push
add
movsb
xchg
add
lahf
and
cmpsb
pop
icebp
xor
dec
and
sub
sub
xor
push
adc
imul
or
sub
fistl
or
enter
rcr
xor
stc
xor
push
cmpsb
pushf
in
in
and
jnp
sub
lret
pop
or
test
and
insl
sub
mov
add
xchg
ret
mov
dec
popf
xlat
es
dec
scas
ja
sub
mov
jo
or
jecxz
sbb
xchg
mov
insb
mov
rolb
adc
adc
mov
mov
xchg
cwtl
add
push
and
mov
aas
repz
cmp
iret
lret
gs
out
push
out
ss
inc
mov
cmp
call
outsl
loope
stos
ss
popf
out
lea
sbbl
xchg
mov
aad
mov
loopne
xchg
lock
insb
stos
mov
enter
in
mov
shll
dec
jp
adc
adc
pop
xchg
sbb
into
lock
add
jle
push
lds
stos
les
rcrl
add
roll
in
fidivl
cmp
or
xchg
loope
jg
jnp
inc
inc
xchg
dec
pop
pop
push
sbb
and
jp
xlat
std
dec
push
mov
push
std
data16
push
lods
add
scas
sbb
jns
loop
pop
stc
scas
sahf
jle
or
cld
test
dec
or
mov
push
cmpsl
or
mov
bound
dec
inc
xor
loop
adc
add
daa
cwtl
aas
shr
cmpsl
cmpsb
repz
ret
call
stc
fwait
out
xrelease
sbb
testb
cmp
dec
insb
mov
mov
cs
xorb
mov
or
add
and
lea
and
test
idivb
js
inc
cld
xchg
mov
scas
xchg
ret
jbe
imulb
xchg
outsb
adc
es
jae
push
inc
xor
mov
inc
mov
pxor
ret
insb
and
sbb
fcomps
hlt
push
scas
lea
stc
inc
test
inc
cs
sub
jl
ret
mov
add
inc
sbb
xchg
sbb
gs
xchg
fwait
inc
movsb
int
js
mul
xorb
pop
push
jae
sbb
jns
popa
adc
sub
test
mov
ja
lahf
out
mov
inc
into
dec
xlat
cmp
out
test
insb
mov
ds
mov
pop
pop
push
adc
xor
mov
movsl
rcrb
ja
out
dec
jns
cmp
es
fimuls
cmc
sbb
pop
push
inc
in
xchg
jp
sub
loope
sbb
dec
cmp
jg
dec
pop
and
loop,pn
shll
ljmp
addr16
mov
or
jns
les
pusha
pushf
adc
adc
ss
pop
or
mov
ret
pushf
negb
pop
adc
push
or
rcll
push
pop
pop
mov
mov
and
call
push
mov
mov
inc
insl
in
add
mov
xorb
inc
movsl
aam
sbb
lods
lcall
xor
lods
fs
mov
dec
lods
inc
inc
subb
xor
mov
and
mov
or
pushf
aaa
scas
add
lret
xorb
xor
insb
hlt
aad
add
pop
in
in
dec
enter
mov
fiaddl
cmp
sub
push
insl
rol
inc
jo
mov
shrb
ret
mov
jno
filds
stos
xchg
lea
pop
fnstsw
insb
jg
pop
fs
sbbl
mov
cmp
jge
pop
push
mov
mov
in
add
insb
test
js
jnp
add
insl
jg
sbb
mov
fldenv
ja
subb
call
jno
test
push
jp
cld
popf
mov
sahf
out
fcoms
ds
pop
inc
pop
pop
mov
cltd
push
mov
insl
test
fdiv
popa
pop
jno
js
add
and
add
shll
or
cmpb
lods
sbb
cmpsl
push
lock
fistl
push
das
mov
push
popl
pushf
movsl
stos
push
gs
mov
repnz
out
jbe
cmp
dec
ret
pushf
arpl
push
test
jae
sbb
aaa
loope
andb
inc
xor
cmp
pop
jnp
aas
inc
cmp
jb
sahf
and
int3
mov
out
fnsave
add
xchg
loopne
mov
sbb
adc
ss
pop
rcrb
pop
call
and
or
add
jae
loop
add
and
or
andl
in
push
int
lods
inc
pop
push
test
sbbb
in
sub
pushf
and
cmp
cs
sbb
negl
insl
jbe
pop
sub
ljmp
xchg
xchg
pop
test
imul
lret
mov
cmpsl
out
xor
pop
daa
xchg
out
push
mov
jg
cmpsl
mov
ret
test
mov
sub
push
sbb
jne
cwtl
fwait
push
mov
dec
stc
cmp
addl
fidivs
lock
jno
xor
cmp
mov
xchg
arpl
clc
mov
jge
cld
std
jge
pop
cmp
dec
divl
stos
adc
pop
dec
lahf
dec
mov
push
mov
pusha
mov
xchg
pop
inc
cwtl
stc
sarl
icebp
enter
jo
pop
cld
test
scas
testl
mov
push
lcall
lcall
sbb
add
movsb
jne
popa
aaa
jecxz
pop
int
sub
call
and
adc
fbld
inc
rclb
cmpsb
cld
jp
lret
stos
enter
out
xchg
push
or
outsl
xchg
xchg
add
or
arpl
push
imul
icebp
pop
mov
sub
repz
adc
jns
outsl
mov
xchg
push
popa
imul
add
das
pop
pop
inc
or
or
xchg
inc
rep
idivb
or
daa
loop
test
xchg
mov
je
mov
cmp
test
xlat
push
adc
call
lahf
mov
sbb
sbb
dec
and
adc
imul
sbb
call
mov
cmp
stos
clc
cmp
scas
data16
mov
mov
in
sub
insb
jge
gs
add
dec
sahf
addr16
or
popl
daa
adc
mov
sbb
or
test
adc
adc
adc
dec
jle
adc
mov
and
into
neg
popf
cmp
adc
call
nop
sahf
adc
movsb
jge
or
xchg
loope
adc
fistps
xchg
sbb
and
mov
loop
mov
push
push
push
sbb
push
pop
mov
jmp
cmpsb
stos
rclb
xor
xorb
xor
data16
stc
pop
push
push
cmp
inc
insb
sub
mov
xor
sub
subl
push
leave
pop
push
dec
pop
es
in
inc
ficomps
sti
xchg
push
inc
mov
cmp
lret
dec
movsb
or
push
aaa
test
mov
xor
iret
xchg
addr16
pop
scas
fcomps
add
mov
cs
sub
inc
inc
sbb
fiadds
or
cli
xlat
mov
jae
mov
xlat
arpl
cltd
std
fs
dec
jecxz
and
dec
sahf
cmc
test
movsl
jmp
gs
sbb
mov
pop
fs
addr16
jo
push
sarl
hlt
pop
cmp
mov
aaa
arpl
lcall
rcr
outsb
sbb
fdiv
xchg
cmp
stos
call
mov
cli
add
ja
sub
xchg
mov
pusha
js
lods
cwtl
mov
mov
or
dec
scas
jp
bnd
cwtl
adc
mov
out
mov
gs
xchg
movsl
lret
std
cmp
or
lcall
cld
scas
out
iret
mov
ds
nop
xor
in
cld
int3
imul
out
sub
cmp
and
sbb
imul
sub
jle
push
jbe
in
jnp
lea
xor
mov
lret
mov
aad
sub
mov
insl
outsl
stc
lods
jecxz
jecxz
push
jo
sbb
sub
enter
jl
mov
mov
jbe
jns
je
imul
mov
pop
ja
in
out
mov
notb
mov
data16
pop
fildl
loope
fsts
das
movsb
outsb
aas
mov
in
add
movsb
lock
test
lret
mov
push
xchg
in
ret
ret
add
outsl
subb
nop
arpl
mov
int3
mov
mov
lea
test
xor
push
mov
pop
sub
nop
mov
imul
push
test
push
adc
aas
mov
jp
pop
pusha
stos
cwtl
into
movsl
adc
pop
and
mov
dec
enter
jp
lods
popf
mov
xchg
test
rorb
data16
rol
inc
fsubl
outsl
loope
adc
nop
sbb
xor
push
in
or
imulb
imul
cld
and
test
ret
cmc
add
mov
mov
lods
cwtl
loop
out
in
stc
scas
clc
stos
sahf
sbb
xor
xchg
and
mov
or
sub
cld
addl
dec
negl
or
int
xchg
inc
into
ret
and
pusha
mov
outsb
aam
mov
int
call
mov
xorl
insl
lds
mov
enter
pusha
mov
xchg
xor
xor
insl
out
jno
enter
jg
aad
xor
outsl
pop
jmp
in
and
bound
movsl
jmp
stos
xchg
dec
push
test
notrack
sbb
js
jmp
aaa
cwtl
jge
stc
imulb
pop
cwtl
xorl
incl
and
imul
mov
mov
pushf
push
xorl
jns
adcl
fwait
inc
jg
inc
xor
pop
jmp
shll
add
arpl
jge
daa
mov
xchg
or
ds
lret
pop
fsubrs
cmpsl
call
data16
idivl
cli
scas
imul
mov
pop
add
add
mov
jp
or
pop
cmp
shrb
mov
cld
aam
scas
inc
jl
xor
jg
outsl
jbe
lods
xor
push
dec
lods
pop
jbe
lcall
mov
leave
mov
push
sbb
inc
jb
es
mov
and
pop
dec
and
incb
xor
dec
cmpsb
mov
sbb
dec
xchg
int
mov
jne
cmc
push
sbb
lods
insl
dec
icebp
inc
jmp
xchg
sub
adc
pusha
call
xchg
mov
mov
xchg
iret
pushl
scas
xchg
sbb
in
mov
push
dec
push
push
mov
subb
push
jae
inc
push
pop
or
xchg
cmpsl
mov
xchg
and
lret
int
cli
xor
xchg
clc
aas
pop
lret
les
loope
data16
xchg
xchg
mov
loop
fs
imulb
mov
pop
xchg
scas
lret
jnp
outsl
push
cwtl
out
push
cmp
out
jns
sti
mov
xchg
dec
int
dec
sub
pop
mov
sbb
sbb
xchg
cltd
mov
mov
pop
repz
dec
mulb
inc
mov
jb
push
cli
jno
fsubl
sub
enter
shr
add
out
and
daa
into
jne
and
pop
bound
aaa
popf
out
std
insl
sub
inc
xchg
sub
pop
jbe
push
add
jge
sub
aam
sti
jl
in
adc
adc
pop
xchg
mov
xchg
jp
push
mov
mov
sbb
push
fdivrs
rcr
mov
fs
xor
sub
adc
shrb
imul
mov
data16
rolb
jmp
add
sbb
sub
imul
jbe
sbb
inc
jmp
lcall
pop
push
push
cmp
mov
pop
mov
lock
shll
mov
inc
testl
pop
cli
bound
mov
popa
cltd
pop
fcmovne
mov
movsl
fdivrs
test
push
add
adc
lock
fcoml
fcmove
xor
sahf
push
das
cmpsl
cmpsl
repz
inc
xchg
dec
leave
mov
insl
sarb
pop
out
mov
push
and
push
leave
sbb
mov
lods
popa
in
jg
push
or
push
dec
test
jbe
sub
push
dec
xchg
cmp
dec
cld
testl
jle
mov
add
test
jle
or
mov
mov
roll
jne
xchg
imul
insl
xchg
xchg
insb
andl
and
push
rcll
mov
dec
pop
inc
mov
fs
aas
lods
int
callw
push
push
lods
arpl
idivb
ja
mov
and
add
jns
and
push
mov
nop
js
outsb
sahf
fnstsw
andl
mov
mov
mov
jge
out
xor
enter
lret
cli
jno
cmp
aad
jge
xor
jnp
add
or
xchg
sub
arpl
addr16
clc
push
test
dec
add
mov
and
push
dec
gs
xor
push
jle
cmp
out
lods
pop
shrb
push
test
push
in
imul
testl
int
sub
mov
adc
ja
xchg
bound
clc
cmp
fs
stos
shrb
ljmp
rol
sbb
dec
sti
jmp
stos
daa
sbb
cmp
repz
cli
sub
xchg
sbb
lret
push
xchg
inc
aad
pop
jmp
xchg
jo
pop
rolb
stos
es
jae
jmp
and
cs
xchg
xor
push
aaa
mov
sbb
imul
cmp
mov
mov
arpl
adc
outsb
mov
xor
dec
mov
loop
shll
cs
test
mov
clc
xchg
mov
insb
adc
clc
jp
ljmp
repz
test
inc
pop
test
inc
mov
fst
xchg
jno
inc
adc
xchg
gs
push
push
pop
xchg
ds
je
mov
xor
mov
xchg
jnp
sub
xchg
adc
ds
std
sbb
jb
xchg
lods
xor
gs
push
mov
sub
mov
pushf
mov
imul
adc
sub
mov
scas
or
inc
pushf
inc
mov
popf
cld
addr16
sarl
mov
sub
xor
data16
insl
adc
fmuls
lahf
dec
cmpsb
dec
leave
je
das
gs
sub
ret
sub
mov
popf
aaa
nop
mov
lock
nop
in
rcr
mov
cmp
cli
adc
xchg
repz
adc
jmp
addl
and
xor
in
sti
int3
add
cmp
aam
repz
mov
dec
pop
pop
cwtl
cli
mov
and
pop
jae
shlb
pop
mov
push
sti
enter
fcmovu
push
out
vdivpd
sub
xchg
mov
fists
ds
pop
out
inc
add
inc
or
fwait
addr16
ss
jns
mov
mov
test
mov
lret
in
test
push
orb
jle
lcall
xchg
pushf
xchg
bound
mov
les
fisubrl
push
sub
pop
aam
cmp
or
ss
sbb
sbb
mov
inc
inc
in
loope
inc
dec
add
imul
cmp
xchg
pop
push
pop
jo
out
xor
mov
inc
fdiv
lcall
mov
cmp
ljmp
add
fldenv
stos
stc
jns
cmp
lahf
loope
movntps
mov
mov
mov
mov
call
les
movsl
enter
sub
iret
idiv
jb
jo
push
sbb
lods
nop
push
dec
mov
or
pop
adc
mov
leave
adc
inc
and
mov
inc
or
clc
mov
pop
or
sti
add
and
mov
pop
or
scas
pop
sbb
js
push
jl
dec
test
cmp
ds
lods
mov
jne
cmp
pop
sbb
cmpsb
xor
xor
jmp
stos
in
add
lcall
mov
repz
testb
jae
mov
dec
or
es
daa
add
scas
inc
cmp
mov
in
cmp
into
sub
mov
in
sub
push
push
pop
mov
jl,pt
addb
ss
xor
add
pushf
inc
dec
stos
push
sbb
jle
sub
adc
mov
in
shl
pop
sub
cli
call
lock
out
and
loope
pop
imul
fdiv
stos
jae
sub
jle
push
adc
sti
hlt
push
mov
sub
test
insb
out
or
mov
scas
xor
jbe
mov
aaa
stc
clc
aam
cli
adc
mov
shr
and
pop
xor
dec
bnd
pop
push
mov
pop
mov
out
adc
mov
sbb
test
addl
dec
xchg
fcoml
inc
sbb
dec
test
movb
fsubp
push
lea
enter
mov
movsl
pop
and
mov
popa
adc
push
leave
out
loopne
je
cmp
insl
imul
clc
in
insl
scas
mov
push
lret
leave
es
lret
xor
push
cli
cmp
hlt
push
jae
xlat
pop
push
test
add
mov
xor
inc
adc
sbb
or
adc
js
mov
es
add
fistpll
jge
stos
push
scas
test
cmpsl
inc
inc
inc
cmp
fmuls
fs
xchg
cmc
push
aam
sbb
sbb
es
lret
xchg
imul
or
mov
stc
pushf
stc
popf
push
das
fimuls
es
fisubrs
xchg
call
jge
repz
mov
xchg
lods
sub
jno
mov
roll
mov
cmp
xor
push
outsb
mov
xor
fldl
das
std
mov
mov
movsb
sbb
sub
cli
sub
and
xchg
cmpsl
xlat
fucomip
int
loope
push
xchg
mov
shlb
mov
inc
lds
adc
cmp
out
negl
xor
out
pop
push
sub
cmp
sti
shl
pop
nop
mov
fidivrs
scas
mov
mov
and
xchg
or
ja
dec
cmpsb
cmpsb
jbe
fisubl
sbb
loop
pop
mov
fs
out
jg
xchg
lea
jne
cmc
mov
mov
sbbl
test
rorl
mov
pop
push
aam
jbe
mov
xor
icebp
jg
shr
in
leave
bound
push
xor
orl
in
mov
pushf
sub
negl
mulb
call
push
pop
inc
pop
gs
je
imull
or
popl
sub
add
in
enter
push
sbb
inc
cmp
push
aam
out
popf
fsubrs
arpl
mov
push
adc
xchg
faddl
aam
or
jbe
fcomp
pop
mov
nop
add
aad
aas
sti
cmc
mov
mov
lret
insb
gs
push
push
pusha
movsl
adc
mov
add
scas
out
mov
jo
fwait
pop
mov
mov
aad
rolb
fdivrp
decb
jne
mov
pop
js
adc
xchg
ljmp
in
push
mov
mov
mov
or
fldcw
std
aas
add
sbb
sbb
stc
adc
cmp
movsb
push
mov
std
imul
jo
mov
je
fld
pop
lds
fistl
addr16
jno
fldenv
cmpsl
adc
xchg
fdivr
addr16
inc
adc
push
fwait
mov
pop
bound
aam
push
movsl
push
dec
lcall
mov
out
mov
cli
cld
subl
out
fildll
jb
jae
xchg
idivl
add
mov
dec
packssdw
mov
sub
or
in
jbe
pushf
sub
mov
divb
and
lret
ja
lcall
xchg
pop
fwait
mov
inc
fs
jno
add
fcomps
stos
ret
xchg
pop
and
inc
sbb
notb
mov
mov
mov
mov
or
addr16
popa
rcl
pop
fwait
ret
stc
sbb
out
idivl
adc
cmp
xchg
sbb
imul
mov
xor
addr16
mov
clc
jmp
push
cmpsl
aaa
js
pop
insb
fwait
or
cwtl
and
or
movsl
test
mov
lcall
lock
jbe
fimull
and
les
ficoml
ja
cs
dec
pop
sub
jecxz
mov
mov
xor
cs
mov
daa
dec
aas
mov
lahf
and
mov
dec
mov
and
jecxz
gs
inc
bound
push
in
xchg
pop
push
sarl
ja
das
mov
enter
cli
pop
inc
adc
lds
add
shl
shlb
or
out
ret
inc
mov
ljmp
pop
push
add
add
bound
mov
pop
jno
jmp
imul
ds
push
cmp
cltd
cmpsl
outsb
ljmp
lods
popa
std
inc
pushf
js
insl
pop
fisttpl
mov
ljmp
xor
fstl
arpl
dec
xchg
fildll
or
dec
xor
lods
pop
aam
or
xor
sahf
pop
inc
dec
int3
rorl
addl
xchg
jmp
jge
leave
call
pop
pushf
loopne
inc
inc
lock
dec
fcomps
or
sbb
or
sbb
addr16
imul
ja
scas
or
and
fwait
push
icebp
sub
sarl
fcmove
mov
jmp
popf
sub
inc
sti
test
les
jns
into
cmp
mov
xchg
scas
sub
int
aam
rorl
inc
dec
movsl
pushf
push
mov
in
jg
sti
xchg
orl
pop
ret
sbb
mov
cmp
sub
lcall
cmp
icebp
js
sub
lret
fwait
push
test
sbbb
bound
xchg
push
scas
adc
stos
out
dec
hlt
xlat
pop
jp
std
sub
cmp
xchg
add
hlt
into
jge
adc
mov
popa
mov
mov
sbb
lcall
cmpsb
pop
sub
repz
sub
and
mov
clc
and
aaa
shll
inc
xchg
jb
pop
sub
imul
sbb
xor
sbb
jnp
fcmovb
ljmp
push
ret
sub
pusha
jmp
lret
repz
pop
movsl
leavew
push
pop
xchg
push
std
sbb
lods
iret
aaa
pop
rorl
popf
ds
push
pop
scas
mov
cld
scas
nop
add
scas
loope
mov
mov
mov
push
int3
xor
jae
mov
es
sub
dec
mov
adc
adc
xchg
dec
shrb
in
mov
out
ds
dec
push
mov
inc
loope
cmp
fisttpll
adc
outsb
into
mov
dec
push
dec
xor
inc
es
sub
push
inc
xchg
dec
cmp
or
xor
sub
jns
xor
pop
jle
nop
sub
dec
or
mov
dec
test
inc
jne
and
ficoml
aaa
sahf
fnstsw
clc
lahf
or
out
test
je
mov
inc
and
xorb
ret
stos
cmp
xor
xor
sbb
test
pop
xor
jg
push
scas
pop
dec
lock
cltd
add
call
xor
add
in
xorl
popf
fsubr
out
inc
out
jge
out
mov
subb
sub
sbb
or
call
je
xor
mov
pop
sub
in
pop
scas
roll
push
mov
mov
xor
rclb
jmp
jmp
or
cmp
pushf
scas
mov
shrb
cmpsb
pop
inc
mov
pop
fcomp
xor
dec
add
push
test
fnstenv
sub
adc
fs
ret
in
inc
jg
mov
out
pop
lahf
pop
fs
xchg
out
bound
imul
test
mov
push
pop
xchg
lds
dec
xor
leave
pop
push
stc
mulb
mov
es
or
or
inc
fmulp
inc
xchg
sub
sbb
jbe
jne
jmp
push
cmp
push
add
mov
mov
inc
popf
cmp
fsubl
xchg
adc
xchg
mov
push
push
mov
cmpsl
aam
dec
xlat
cmp
popa
dec
cli
dec
mov
roll
xlat
in
out
pusha
inc
mov
enter
popa
loope
inc
jl
pop
add
jae
aad
sub
jns
mov
iret
lds
shll
cmpsb
bound
in
addr16
sti
imul
js
mov
out
sbb
jg
ja
daa
pop
sub
les
in
and
sbb
lahf
stos
sbb
scas
xor
mov
addr16
sbb
std
outsl
xchg
adc
mov
pop
out
fistpll
sbb
pushf
adc
in
jmp
cmc
xchg
in
icebp
addr16
mov
jb
pop
jns
add
std
sbb
mov
into
fs
inc
or
popa
mov
xor
xlat
fadds
aam
and
mov
mov
adc
fdivrs
pop
lods
addr16
test
sbb
dec
data16
push
aam
mov
cmp
mov
jge
in
mov
sbb
pop
test
add
xchg
test
ja
dec
fisubs
xchg
lret
cmp
xchg
cwtl
fnstcw
add
call
sub
hlt
or
mov
adc
adc
add
jo
push
push
aas
dec
dec
xor
xlat
ret
int
arpl
mov
ss
or
jp
imul
loop
pop
pop
rcr
mov
push
std
dec
push
leave
or
mov
mov
dec
or
jns
dec
push
or
cmp
xor
jge
mov
add
lret
or
sub
sub
test
pusha
xchg
fcoml
adc
and
lcall
mov
iret
cmpsl
mov
fisubrs
adc
cmpsl
sub
call
lods
xor
adc
adc
gs
mov
ret
loope,pn
pop
movsl
shl
sbb
fdivs
fcmovne
pop
arpl
sarl
jmp
scas
jno
ljmp
pop
mov
mov
sbb
idivb
mov
xchg
sub
inc
add
push
call
mov
loope
sbb
add
inc
hlt
fnsave
pop
popa
xor
pop
jl
roll
xchg
pop
push
xchg
repnz
cli
cmc
mov
dec
stos
cwtl
push
daa
repnz
xchg
or
xchg
jge
mov
add
sbb
jbe
out
mov
outsb
pusha
xchg
xchg
ljmp
xchg
imul
into
inc
pop
inc
addr16
dec
cmpsl
jne,pn
add
insl
outsb
adc
ds
mov
pusha
lret
inc
dec
inc
push
or
mov
bound
ds
jo
mov
adc
ss
sbb
loope
push
data16
inc
sbb
mov
pop
sub
std
insl
or
out
push
sbb
les
xchg
in
clc
imul
loop
jae
in
inc
push
add
mov
repnz
lcall
sub
mov
push
dec
inc
imul
cwtl
and
sbb
and
mov
fwait
mov
adc
repz
push
inc
fdecstp
inc
sub
cltd
xchg
push
inc
push
sbb
popf
dec
scas
push
lcall
add
popa
xchg
std
mov
mov
add
add
lahf
pop
mov
cmp
sti
xchg
lret
ds
cld
into
lock
rcrl
stos
pop
inc
cmp
lcall
test
and
add
mov
ds
adc
in
cmpsl
daa
push
out
sbb
sarb
cmp
fisubrs
test
les
imul
jb
ljmp
inc
mov
jb
gs
in
pop
inc
mov
insb
fdiv
test
imul
leave
mov
jb
adc
popa
xor
fldcw
out
jle
add
jae
fisttpl
stc
fstpt
xor
stc
mov
sub
out
fdivl
or
xchg
xchg
or
mov
sub
popa
mov
adc
stc
xor
subl
mov
mov
sub
je
xchg
pushf
adc
sarl
scas
adc
dec
fcompl
jne
ret
pop
scas
xor
adcl
lahf
pop
xor
enter
frstor
jns
lods
test
jl
pop
addr16
pop
out
jne
movntps
pusha
hlt
cmp
mov
je
sub
imul
fimull
pop
xor
rolb
les
es
pop
pop
pop
cmp
adc
mov
movl
pop
movsb
pop
dec
mov
testl
dec
lock
xor
fldl
add
cltd
lret
leave
sbb
pop
lret
jnp
jp
jecxz
lock
in
push
and
sbb
cmp
repz
jmp
fcomi
inc
outsb
lea
cli
test
pop
mov
stos
xor
mov
jge
xlat
cmpsb
mov
push
stos
lods
cmpb
cli
fwait
sub
xchg
fldl
fwait
mull
jb
repnz
cmp
push
inc
popa
addr16
add
and
jmp
pusha
clc
push
xor
inc
fstp
push
mov
pop
or
adc
repz
xor
lock
stc
jg
pop
add
push
pop
pop
mov
in
jns
rcl
xor
sbb
lock
ss
sbbl
inc
pop
data16
mov
mov
xor
mov
shlb
cmc
adc
inc
lret
jae
ficompl
enter
imul
imul
das
pop
daa
pop
stos
sub
movsl
adc
shl
imul
ficoml
jo
xchg
sub
cmpb
sub
inc
test
inc
mov
out
arpl
test
hlt
cmp
outsb
mov
jne
xchg
mov
or
cwtl
mov
sbb
dec
insl
icebp
int
andb
push
repnz
mov
lods
push
fsubl
push
lods
push
jb
negb
imull
repnz
lock
adc
sbb
sub
mov
xchg
ljmp
popf
pop
add
jo
xchg
xchg
sbb
js
shr
rorb
in
sub
movsl
fisttpll
adc
jno
dec
push
in
jecxz
int3
loop
movsb
pop
or
lret
stos
in
sarl
lock
fsubrp
push
or
or
push
pop
test
adc
pop
cmc
insl
jge
into
and
add
xchg
or
adc
test
call
mov
pop
lret
mov
arpl
lock
into
test
aas
data16
lock
and
and
insl
inc
add
shrl
fxtract
insb
add
mov
shll
lret
lock
and
fwait
add
and
adc
xchg
test
adc
xchg
xchg
stos
xorb
nop/reserved
mov
fisubrs
lds
popf
pushf
fnsave
in
xchg
test
and
fisttpll
fwait
ljmp
cmp
push
imul
ds
int3
xor
mov
jmp
stos
stc
mov
shrl
xchg
dec
inc
pop
scas
add
push
dec
cmp
dec
xchg
outsl
pop
pop
stos
push
inc
push
jge
sbb
jp
inc
jbe
xchg
xor
inc
xchg
gs
add
xchg
push
jp
outsl
jns
les
xlat
adc
in
or
jo
mov
int3
sbb
and
sbb
sub
jo
ljmp
aas
push
pop
mov
pushl
gs
sbbb
jb
dec
scas
pop
out
sbb
adc
int3
orl
dec
cs
in
cmp
pushf
daa
mov
inc
xor
loop
xlat
or
jbe
fisttpll
push
xchg
adc
and
sbb
mov
shr
mov
fisubrl
out
mov
mov
sub
je
cmp
shll
pop
mov
outsb
int3
xor
add
lcall
and
sub
xchg
je
decb
dec
or
les
in
pushf
pop
mov
loope
insb
or
outsl
aam
sub
jmp
aad
jge
inc
jne
dec
hlt
mov
mov
in
inc
sub
sbb
mov
dec
and
push
aas
xor
dec
sbb
cmc
mov
or
jl
out
push
and
mov
jae
lcall
and
push
pop
iret
pop
mov
out
adc
add
nop
push
aad
xor
mov
mov
jg
das
or
xor
push
aas
mov
mov
jge
out
pcmpgtb
sub
lret
mov
mov
push
mov
sbb
lahf
xlat
stc
jnp
movb
jmp
insl
repz
jl
dec
clc
jae
inc
push
xlat
lahf
rcl
lahf
push
das
rorb
imul
mov
inc
pusha
mov
lock
iret
xchg
divb
jno
sub
sahf
jbe
sub
jae
or
js
and
fwait
mov
sub
pop
jnp
das
mulb
mov
xchg
adc
adc
xor
rcrl
je
imul
mov
mov
fstp
std
push
scas
xor
xchg
test
sub
mov
fs
and
xor
loop
out
fsubrp
loop
fldt
adc
dec
push
aas
daa
mov
mov
shrb
lahf
mov
pop
test
fcoms
jns
push
fs
fstl
jnp
ss
dec
cmp
sub
stc
sub
and
aad
lea
mov
push
call
test
and
jmp
sarl
shlb
xchg
pop
fmull
jae
dec
lahf
sub
std
push
mov
mov
dec
mov
xchg
xchg
xchg
aam
leave
push
pop
push
jne
daa
pop
addr16
out
or
and
cmpl
and
and
scas
push
jb
decb
push
jecxz
sti
mov
je
out
jle
in
lds
les
adc
pop
dec
adc
xor
mov
sub
test
dec
mov
add
imul
xchg
cmpsb
xor
addr16
lcall
jmp
pop
sbb
outsl
cmc
cmp
sbb
lods
mov
dec
out
mov
sub
adcl
sbb
xlat
push
sbb
aaa
or
lret
gs
outsb
dec
cmp
cs
int
rorb
test
andb
cmc
pop
push
lret
add
das
xchg
inc
mov
addr16
test
scas
mov
cmp
daa
cmp
mov
cmp
in
sbb
push
adc
or
mov
sub
aas
lret
popa
or
push
movsl
sub
movsl
dec
bound
mov
push
stc
pop
jp
dec
mov
jnp
sub
adc
enter
imul
dec
xor
sarl
mov
rclb
ds
fs
push
mov
outsb
popf
jnp
pop
lahf
test
mov
xchg
pop
les
jle
sub
sbb
iret
and
les
push
ljmp
lret
mov
sbb
or
xchg
insb
mov
dec
add
cmpsb
jmp
clc
jmp
mov
mov
adc
loopne
sarb
in
jg
shl
cltd
lcall
out
dec
iret
sbb
sub
mov
add
into
jae
jmp
jb
push
jl
pusha
add
loope
pop
push
sahf
jns
or
mov
fdivrl
cld
mov
inc
adcl
sbb
cmp
jge
jb
movsb
mov
pop
cmpsl
aaa
test
add
popa
fs
ja
add
or
out
pop
stos
je
pop
push
dec
push
cmp
or
pop
sub
jg
cltd
add
test
jg
cmp
mov
push
stos
xchg
sbb
into
cmpsb
xor
sahf
call
lea
in
sub
push
pusha
subl
lcall
push
insl
mov
push
push
gs
sbb
pop
push
mov
push
leave
xor
push
dec
stc
or
adcb
icebp
jbe
cmp
sbb
push
cmc
cli
or
cmp
push
stc
jb
mov
dec
icebp
outsb
push
inc
push
negl
sub
and
mov
scas
lock
repnz
ret
es
adc
jbe
xor
push
popf
cmp
inc
mov
out
cmp
dec
imul
nop
orl
call
xor
lahf
addb
test
inc
addr16
xchg
cmp
pop
adc
pushf
push
xchg
sub
movsl
sti
xchg
mov
stc
mov
jl
stos
and
pop
xchg
ljmp
ds
int3
mov
mov
xchg
sbb
enter
cmp
and
sub
and
js
push
lods
xor
xlat
cwtl
in
push
cmp
push
mov
popa
pop
int
mov
mov
dec
jo
xor
xorb
adc
and
mov
scas
out
cli
xchg
movsb
testb
mov
xchg
lret
outsl
mov
or
aam
push
add
cmp
out
stos
incl
call
roll
int3
pop
sbb
jle
mov
xor
xchg
or
imul
jge
lock
lret
sbb
sbb
jl
stos
icebp
mov
int
rclb
imul
mov
int3
cwtl
pop
leave
movsl
std
push
insb
push
stos
xor
cmp
sub
call
pusha
pop
jmp
movsb
fmuls
or
push
clc
lcall
mov
sbb
sbb
sbb
mov
sbb
mov
jge
ds
jnp
cmpsl
push
inc
ret
mov
std
add
outsb
xchg
xlat
inc
or
inc
inc
out
or
push
fisubrl
xlat
mov
jmp
loop
daa
jle
iret
xchg
push
add
test
stos
aam
adc
add
dec
or
cmp
popf
scas
out
sub
jne
stos
mov
jne
sbb
jo
mov
mov
fwait
scas
mov
cmp
add
pop
mov
pop
push
add
xor
jno
sub
imul
fbld
loope
les
push
jo
jmp
lret
mov
jg
and
mov
mov
pop
data16
in
fisttps
insl
pop
jns
sbbl
cmc
ss
mov
adc
and
sbb
in
cwtl
jbe
call
lea
xacquire
repnz
pop
clc
dec
mov
in
enter
cltd
or
leave
in
dec
loop
sbb
dec
and
scas
jb
lret
and
add
es
in
xor
add
les
mov
sbb
mov
pop
popa
in
jecxz
addr16
test
add
mov
arpl
lods
push
inc
dec
mov
cmp
xchg
in
lret
stos
mov
inc
insl
xor
imul
movsb
and
aaa
test
stc
lret
cwtl
jge
sub
dec
repz
mov
xchg
cltd
push
dec
jno
fwait
or
and
lret
push
mov
lock
enter
daa
push
or
mov
pop
ss
mov
rorb
enter
xlat
sbb
adc
imul
int
cld
loope
enter
nop
xchg
or
scas
popf
pop
inc
cmp
flds
adc
cmp
loope
in
mov
jecxz
fidivrs
lahf
fstl
int3
dec
jae
mov
push
lods
push
inc
mov
xlat
xor
and
sbb
cmpsb
xchg
dec
add
iret
add
sbb
and
xor
fnstenv
sbb
cmp
loopne
sub
lods
inc
mov
lahf
fimull
lahf
pusha
in
push
mov
adcl
xchg
fldcw
notl
outsb
jne
ret
fcomps
and
outsl
or
into
push
iret
subb
or
data16
mov
mov
fld
imul
out
sbb
addb
inc
and
or
inc
jge
nop
in
gs
hlt
and
add
push
dec
lahf
jge
aam
lret
sub
pop
popf
test
mov
xchg
lahf
bound
call
out
adc
mov
and
aaa
mov
mov
leave
mov
mov
in
add
pop
out
mov
aaa
ficompl
xor
dec
pop
ljmp
cmp
mov
xor
pop
adc
adcl
rolb
sarl
bound
sahf
jg
xor
jle
rcrl
sbb
loope
mov
mov
sbb
xor
orb
jge
mov
pop
jae
inc
xchg
rorb
imul
xchg
xchg
popf
xchg
out
mov
lcall
dec
ret
adc
or
lret
pop
lods
xor
popa
add
dec
jp
xor
xchg
loop
pop
cli
adc
rcr
lock
lods
insb
testb
jmp
test
push
movsb
adc
test
pop
xchg
ret
xlat
ss
test
mov
test
aad
jbe
ja
enter
pop
push
ja
inc
push
in
popl
push
in
pop
sar
push
das
loopne
ja
ss
outsl
or
xchg
and
inc
mov
and
aad
sbb
xor
cwtl
insl
repz
adc
mov
cltd
dec
sub
or
out
cmc
push
fld
mulb
add
inc
es
sbb
in
push
aad
subb
mov
fmuls
inc
out
stos
xchg
fistl
xchg
or
inc
jmp
jmp
pop
cmp
fimull
push
dec
cmp
fs
mov
adc
dec
hlt
jne
xchg
push
lds
xchg
sub
push
fucomp
and
jns
or
insl
ret
movl
push
iret
lods
xchg
mov
movsl
sbbb
push
es
in
dec
aad
insl
mov
xor
cmp
cltd
inc
sbb
sbbl
dec
cltd
push
adc
loop
stos
lret
xchg
inc
out
lods
cld
loope
das
adc
jg
lret
or
lahf
cmp
fldl
shrb
inc
lret
sti
cmp
sbb
mov
bnd
fnstsw
xchg
repz
retw
sbb
stos
in
inc
sarb
sub
in
leave
push
int3
adc
and
lret
push
jl
fnstsw
push
shl
out
cmpsl
aam
inc
xor
sahf
xchg
push
outsl
push
cmp
popa
adc
aad
cld
insb
testb
inc
movsb
push
push
fimull
sub
rcrl
shll
into
mov
jns
hlt
adc
repz
repnz
xor
xchg
lcall
mov
pop
mov
pushf
leave
scas
or
jmp
xchg
cmp
or
mov
out
xchg
adc
inc
aam
rcrb
pop
adc
sbbl
in
add
jnp
and
lods
das
mov
push
fcompl
mov
in
add
mov
xchg
mov
mov
std
ret
rolb
movsb
pop
ljmp
mov
xchg
sbbl
std
shlb
lds
scas
mov
adc
sbb
rcrl
pop
and
jbe
mov
pop
lods
push
ror
xor
pushf
loope
fsubl
daa
shlb
inc
cmpsl
pop
jae
into
mov
push
pop
mulb
test
dec
inc
loope
xor
mov
aaa
stos
in
outsl
mov
mov
mov
decl
xchg
in
stos
push
adc
inc
jle
stc
popf
pop
int
cltd
arpl
rcll
inc
xor
mov
in
lods
out
ret
insb
pop
call
push
jno
pop
cmpsb
cwtl
je
mov
fwait
cmp
xchg
mov
push
dec
sahf
jno
mov
xor
leave
insb
hlt
sti
lods
xchg
or
adc
test
ret
mov
cwtl
icebp
imul
testl
adc
int3
mov
clc
adc
je
and
insb
or
in
rcl
jle
xchg
sbb
push
cmpb
aad
add
aad
sti
mov
jnp
ret
sbb
shrl
std
gs
jl
fistpll
in
scas
sbb
cmp
push
jl
adc
inc
and
jb
adc
lret
jge
push
int
ret
add
sub
iret
leave
xor
imul
inc
dec
mov
xlat
imul
or
sahf
movsb
adc
pop
lock
inc
add
mov
fmul
insl
aaa
xchg
and
inc
add
je
in
incb
xor
fisttps
sbb
pop
dec
add
mov
mov
or
inc
adc
pushf
mov
mov
or
stc
mov
push
xor
fnstsw
jb
jns
sbb
inc
xchg
repnz
dec
jg
leave
dec
inc
dec
stos
scas
xchg
int3
out
cmp
lods
addb
pop
adc
adc
adc
mov
das
std
call
in
mov
xchg
push
and
imul
repnz
les
or
enter
sub
jae
mov
push
aas
push
jns
enter
cwtl
loope
xchg
fwait
pop
outsl
pop
cld
cmpsb
pop
call
push
sbb
xor
adc
mov
std
sbb
push
dec
or
lods
fstps
sub
mov
sbb
loop
lds
jnp
sahf
and
push
clc
cmp
push
rcr
mov
cmp
nop
cmc
sbb
nop
fwait
sub
cmpsb
mov
mov
mov
ds
cmp
int
test
mov
push
insl
test
out
add
mov
mov
pop
mov
or
sub
stc
jmp
dec
jmp
mov
fidivs
fidivl
in
shl
repz
fcomps
jecxz
mov
aaa
shll
lahf
fnstcw
mov
dec
jae
or
adc
pusha
pop
lret
in
std
fimuls
xchg
pop
pop
sbb
out
add
ret
hlt
adc
stc
mov
mov
iret
jle
filds
xchg
cmc
mov
inc
out
sbb
pop
popa
cmc
mov
fwait
sbb
xchg
cmpb
outsl
fistl
mov
insl
movsl
sbb
test
xchg
sarb
push
xor
aas
data16
mov
icebp
fisttpl
jno
fdivl
pop
add
pop
sub
lods
sbb
andb
outsl
pusha
mov
xlat
fs
xor
xchg
shlb
lock
mov
int3
pop
sub
out
or
and
sbb
dec
xchg
and
xchg
out
mov
cmp
cmp
mov
jecxz
inc
sbbb
mov
mov
jne
pop
mov
bswap
in
mov
sbb
sub
mov
jecxz
cltd
push
jne
inc
sti
sub
fcompl
mull
xchg
pusha
cmp
xchg
push
xor
sub
cmp
or
lret
jae
call
inc
cmpsb
adc
icebp
imul
loope
mov
xchg
jle
mov
fistps
inc
cld
xchg
and
lods
lret
rclb
jle
and
and
insb
ja
shrl
jmp
mov
jmp
enter
je
call
xor
rcr
sub
mov
mov
pop
mov
cmp
into
dec
adc
pop
xorb
idivb
push
jmp
adc
cmp
iret
mov
push
cmp
hlt
cmpl
ja
mov
std
fnstsw
cmpsb
and
push
lock
pop
sahf
pop
add
popf
mov
xor
xlat
repnz
cmpsl
xlat
inc
push
add
clc
xlat
fistps
jae
mov
mov
imul
out
mov
pop
faddl
adc
inc
jecxz
xchg
filds
inc
pop
movsb
arpl
mov
push
lret
and
sub
mov
popf
adc
mov
jns
lea
adc
lea
sbb
pop
std
jne
es
dec
push
out
lea
pop
mov
mov
cmp
in
add
aad
mov
adc
fadd
jne
jecxz
adc
out
loopne
push
adc
and
xchg
xor
rcrl
pop
or
repz
pop
aaa
ret
mov
popf
movsl
aad
xlat
mov
cmp
inc
sbb
pop
sub
pushf
ss
pusha
cld
outsl
cmp
xlat
aas
fstpt
fisttpl
and
xlat
cmc
test
push
test
daa
test
shlb
lea
mov
das
loope
xchg
jmp
les
ja
add
outsl
pop
inc
push
movsl
std
sub
imul
or
cmp
push
xor
je
movsl
hlt
mov
mov
fdivrl
mov
clc
pusha
shl
inc
dec
xchg
sub
repz
add
hlt
sbb
and
add
jecxz
fmull
inc
dec
dec
jns
xor
jo
fbstp
bound
stc
ljmp
loop,pt
push
adc
aaa
les
es
cmp
subb
inc
push
adc
inc
jnp
pop
into
sbb
sahf
push
pop
add
xchg
and
cli
push
adc
pop
pop
outsl
mov
testl
inc
xlat
mov
cltd
dec
jns
les
cmp
fistps
in
mov
bound
dec
inc
out
ja
and
cld
or
pusha
je
out
jg
rcrl
addl
cmova
dec
push
mov
inc
dec
mov
cmpsb
add
dec
iret
ja
cli
adc
js
adc
pusha
and
mov
dec
imul
cmp
into
int3
xchg
or
inc
mov
xchg
fistpl
loop
pop
adc
add
out
mov
test
es
das
lcall
test
cmp
nop
icebp
std
ror
add
add
jecxz
push
out
pop
or
push
popf
cwtl
mov
mov
popa
jb
rclb
jo
shll
cli
pop
push
das
jp
mov
push
jnp
jmp
in
xor
insl
mov
into
cmp
mov
roll
add
inc
repnz
sbb
or
test
aad
mull
mov
pop
add
mov
jbe
push
or
mov
arpl
push
pop
and
sbb
movsl
fs
in
mov
jns
test
pop
mov
dec
ja
dec
je
mov
push
fisttpll
jp
call
push
push
adc
outsl
cmp
mov
push
cli
sbb
add
cmpsl
or
mov
xchg
inc
pop
jb
shlb
cwtl
cmc
clc
xchg
add
insl
dec
rep
mov
push
xlat
lods
lods
adc
cmp
cmp
sub
inc
push
push
xor
jge
pop
dec
nop
jl
sbb
imul
adc
int3
and
incb
daa
fwait
mov
lods
lock
repz
mov
data16
pop
push
rcrl
pusha
xor
ss
xchg
jae
fwait
jmp
pop
xor
sbb
inc
inc
cwtl
outsl
repnz
mov
out
push
andl
sub
dec
cli
loope
ljmp
lea
sub
sbb
xchg
dec
xor
push
lock
sbb
rcrb
lods
mov
dec
insl
or
ret
mov
sbb
mov
fnstsw
fnstenv
dec
inc
mov
and
nop
mov
mov
in
daa
rcrl
sbb
mov
inc
inc
jne
add
mov
shlb
cmp
es
sahf
sbb
pop
int3
enter
test
sub
dec
cmp
outsl
rcl
shrl
xchg
sub
mov
inc
test
movsl
out
lds
bound
jbe
add
adc
mov
pop
imul
dec
outsl
inc
xorb
xor
sbb
ljmp
arpl
jle
xor
sbb
pop
jae
loopne
mov
test
jns
mov
xchg
scas
mov
mov
out
jp
jns
adc
push
movsl
enter
and
stos
sbb
ret
xchg
data16
loopne
jmp
push
inc
push
fidivrl
mov
shll
adc
sub
jnp
xor
aas
xchg
pusha
in
int3
insl
cs
lods
adc
push
jo
cmpl
mov
mov
push
jmp
add
lcall
xchg
xchg
jg
sub
ja
xchg
inc
mov
je
or
pusha
jns
fs
jmp
loop
cmp
into
pop
mov
mov
mov
es
aas
je
push
test
pushl
push
and
mov
inc
mov
ja
fisttpll
mov
xor
or
ret
mov
adc
xchg
or
outsl
pop
mov
push
test
lahf
imul
xor
adc
js
ja
movsb
cli
push
sub
testb
rolb
xchg
ja
jno
aaa
xchg
adc
jle
ffreep
inc
dec
push
std
adc
pusha
repz
loopne
adc
mov
std
jns
pop
push
clc
out
and
rcrl
xchg
and
inc
sbb
inc
mov
jle
nop
nop
push
ficomps
orb
push
nopl
sub
pop
mov
sbb
cmp
repz
mov
ret
fistl
orl
mov
pop
push
hlt
shlb
loopne
outsb
dec
pop
cmpsb
outsb
and
dec
movsb
sbb
daa
cmc
push
sbb
jp
add
insl
pop
call
mov
mov
sbb
movsl
sub
push
ror
mov
std
mull
inc
push
roll
push
inc
push
out
icebp
sar
xor
mov
out
pop
notl
or
adc
sbb
dec
add
xor
pop
adc
cmp
mov
adc
ss
dec
test
call
fstpt
inc
int3
dec
inc
push
in
push
xor
or
stc
mov
push
mov
cmpsl
jecxz
or
lds
movsl
loope
mov
jmp
cmp
roll
inc
jmp
or
ja
lock
stc
push
mov
fsub
insl
inc
push
sub
jns
sub
xlat
int3
int3
mov
lret
loopne
nop
sbb
push
pop
or
clc
jb
xchg
mov
pop
repz
inc
dec
xchg
lret
cmc
mov
inc
sub
xchg
pop
mov
add
lcall
jge
enter
mov
or
scas
xchg
add
dec
cs
xchg
inc
and
inc
push
cmpsl
insl
xor
add
iret
mov
lods
add
xchg
mov
arpl
and
test
push
jae
add
sti
fisubl
inc
sub
and
inc
test
imul
sbb
test
cwtl
mov
xor
and
add
mov
adc
jmp
stc
fstps
lock
loopne
push
fdiv
mov
xor
das
mov
std
dec
jle
adc
fwait
mov
sahf
pop
pop
jno
dec
xor
cmp
jbe
adc
cmc
mov
std
lret
sub
rol
push
or
aam
inc
xchg
movsl
mov
xchg
iret
sub
push
gs
mov
clc
sub
mov
push
fidivrs
adc
outsl
loopne
push
ljmp
lods
lret
movb
imulb
sub
jo
dec
lock
mov
arpl
nop
aas
push
mov
push
nop
jbe
adc
mov
xchg
push
add
xchg
and
xchg
inc
push
imul
dec
sub
xor
xor
add
out
out
orb
negl
and
jg
jo
jl
test
pop
mov
push
or
pop
pop
pop
mov
or
cmp
push
scas
movsbl
mov
out
imulb
test
xchg
iret
push
pop
or
stos
pop
xlat
mov
dec
jbe
push
add
into
push
inc
loope
inc
xchg
loop
mov
loop
push
inc
int3
mov
data16
dec
mov
pop
mov
push
insl
mulb
mov
push
mov
cld
roll
outsb
out
lds
insl
leave
jmp
dec
clc
add
loopne
cmc
push
std
mov
je
lret
outsl
xchg
mov
xlat
stc
mov
jle
sbb
out
addr16
mov
iret
mov
jbe
mov
jl
jmp
scas
adc
bound
push
push
mov
out
push
mov
outsl
jg
incb
pop
push
insl
int3
mov
pushf
push
les
mov
xchg
or
aad
icebp
xchg
fsubrl
cli
in
test
mov
imul
dec
cmp
orb
in
sarb
inc
mov
and
loopne
in
jo
pop
sub
and
subl
rorl
stos
sub
fcmove
mov
adc
pop
aad
aam
jb
push
or
push
fimuls
popf
xor
jmp
add
cmp
sub
je
jae
jl
addb
mov
test
adc
xor
pop
adcl
cmc
leave
sub
push
pop
xchg
shlb
mov
das
movsb
sub
sub
mov
mov
icebp
test
push
add
mov
test
sbb
mov
sbb
or
jp
push
inc
cs
cs
sub
test
fisttpll
jo
jecxz
add
pop
iret
cmc
pop
jecxz
push
scas
mov
or
cmpsl
andl
das
lods
cmpsl
iret
sbb
popf
adc
sti
stc
sbb
pop
jns
mov
xchg
jae
arpl
loope
hlt
les
int3
ret
dec
in
xor
repz
push
xchg
dec
ret
pop
movsb
cmp
or
fwait
cmc
mov
mov
xchg
scas
fmul
ss
int
mov
ja
in
xchg
cmp
pop
cmpsl
jp
adc
shll
adc
rcll
popa
stc
dec
clc
dec
movsb
in
adc
add
inc
push
sub
or
xchg
pop
mov
outsl
out
es
jp
addr16
stos
mov
stos
pushf
and
das
fsubr
or
ss
insb
push
add
dec
mov
pop
ss
call
push
mov
mov
jae
cltd
push
dec
enter
push
in
inc
push
in
into
imul
xor
jge
push
popa
daa
dec
xchg
out
lret
hlt
jge
aam
pop
cmp
test
jns
adc
aaa
push
arpl
mov
add
lahf
pushf
stc
xchg
mov
mov
xchg
mov
jae
sbb
insl
inc
and
test
mov
lahf
outsb
out
dec
mov
jg
sub
push
es
imul
lret
xor
out
inc
loop
int
cs
in
imul
xor
xchg
xchg
test
lret
lea
inc
jnp
and
scas
dec
insl
mov
leave
aas
or
add
mov
xor
scas
inc
arpl
jnp
or
and
mov
ret
push
icebp
loopne
xchg
and
shll
and
roll
pop
cld
adc
adc
adc
pop
xchg
lods
rep
iret
mov
jno
add
pop
aas
mov
push
xor
int3
popa
mov
sar
fcmovnb
sub
sbb
push
daa
fwait
sbb
xor
inc
es
std
loop
dec
adcb
out
sub
movsl
xchg
cmp
ss
mov
push
adc
fldcw
vhsubpd
popl
cmp
cmp
test
shrb
mov
push
jg
test
jnp
cld
popl
imul
pop
mov
mov
inc
lock
mov
stos
jmp
lock
inc
sbb
pop
into
and
dec
fidivl
or
nop
jp
leave
xchg
mov
js
cli
pushf
inc
loope
aaa
jmp
cmp
mov
inc
pop
push
pop
cmp
sti
lret
pop
lds
pop
push
xchg
jle
jecxz
cmpsl
test
into
dec
lods
pop
cmpsl
sub
add
pop
push
dec
push
pop
sbb
mov
ret
fbstp
popf
dec
push
xchg
and
sbb
fcmovnbe
popa
repz
sbb
sbb
jmp
movsl
frstor
fsts
loope
cltd
pop
das
jo
gs
inc
mov
mov
aaa
cltd
push
push
pop
sti
insl
insb
imul
xlat
stos
or
in
cmp
mov
gs
decb
jae
adc
sub
and
in
pop
jne
pop
shlb
sub
es
cmc
addr16
rclb
movsb
cmc
scas
dec
xchg
nop
fisttpl
push
fisttpl
cmp
and
mov
cmp
fisttpll
cmp
or
sti
pop
pop
and
jp
js
ret
mov
xchg
aas
xchg
xor
popf
mov
pusha
and
lods
arpl
into
daa
jl
cmp
adc
cmp
fimull
int
dec
push
test
lods
lock
fsub
xor
imul
sqrtps
jno
sbb
xchg
mov
inc
decb
rclb
shlb
cli
dec
es
mov
adc
loope
shll
scas
mov
sbb
shll
sub
repz
loope
dec
or
pop
pop
sbb
pop
sahf
push
cwtl
jg
loop
pushf
test
mov
and
popf
mov
sbb
mov
shll
mov
repz
xchg
nop
cli
xor
push
mov
sbb
popa
xorb
mov
repz
std
lods
sub
xor
subb
js
jmp
inc
insl
adc
cmp
dec
rorb
sarb
xchg
fucomp
adc
push
mov
lcall
pop
mov
mull
lahf
cmpb
leave
inc
stos
dec
loopne
push
lcall
int
jne
ss
stc
xchg
fimuls
sub
leave
push
nop
mov
hlt
mov
push
cmp
xchg
loope
in
lds
sub
push
scas
dec
xorl
sub
imul
or
xor
mov
mov
repnz
jbe
out
mov
testb
cmpsl
mov
or
xor
loop
xor
pop
adc
and
les
cmc
insb
jg
shll
hlt
xchg
cmpsb
adc
fs
arpl
nop
xor
mov
sub
leave
mull
fsubr
pop
hlt
daa
push
jns
mov
add
or
or
repz
sbbl
pop
push
add
inc
bound
stos
dec
ss
sub
jb
inc
mov
test
sti
hlt
repnz
xchg
adc
enter
sbb
dec
pop
push
stos
in
cmp
ljmp
imul
imul
lea
mov
scas
dec
xchg
inc
mov
push
jo
cmp
iret
cmc
xchg
jecxz
or
fnop
xor
je
dec
pop
sub
pop
faddl
xlat
fisubs
jp
cmp
pusha
add
repz
push
jecxz
mov
mov
push
and
mov
adc
jns
mov
inc
push
sub
mulb
lret
cwtl
into
imul
xchg
mov
dec
inc
or
mov
aas
shlb
clc
test
and
cmp
andb
mov
loop
xchg
into
push
push
sub
xchg
fs
sarb
mov
mov
cmpsb
imul
enter
movsl
fisubl
imul
mov
sub
test
icebp
cmp
xchg
test
fcmovnu
fstpt
fsubs
or
sbb
cmp
popa
mov
dec
jle
push
decl
jge
jmp
or
xor
adc
jne
aad
insl
loopne
inc
xlat
xchg
mov
xlat
pop
popl
mov
mov
clc
leave
loope
test
ror
scas
arpl
scas
sbb
in
mov
lahf
push
andb
repz
push
ret
test
jmp
push
add
add
mov
arpl
insb
scas
aaa
nop
mov
lahf
add
xchg
xor
pop
xchg
jg
in
cwtl
js
pop
pop
pop
and
add
fimull
push
mov
mov
xchg
pop
cmpsb
xchg
mov
out
cld
insb
andb
inc
add
lods
mov
add
mov
sub
push
bound
xor
jmp
mul
push
push
sub
ja
lea
imul
inc
add
out
sbb
neg
adc
mov
stos
addb
inc
fmul
lods
fildll
mov
cmp
scas
adc
sub
mov
dec
and
sub
adc
fstpt
xchg
aam
adc
xchg
or
cld
sti
test
add
or
je
or
mov
jge
es
dec
jecxz
pop
push
jmp
cmp
adc
rolb
inc
inc
add
push
jbe
ds
dec
push
xchg
push
jbe
ds
dec
xchg
push
jge
outsb
fld
xchg
int
rolb
or
inc
push
ljmp
repnz
inc
lahf
jb
pop
popf
rcll
in
sbb
addl
loopne
outsl
cmp
cs
jp
in
in
jecxz
mov
cmpsb
call
inc
adc
mov
inc
fabs
test
or
push
ret
ror
mov
cmpsb
fsubs
jl
adc
cmpsb
jl
jnp
orl
inc
xchg
sub
mov
js
mov
mov
mov
mov
dec
je
push
xor
out
sub
sbb
in
and
add
adc
lds
sub
stos
mov
inc
dec
jg
and
fidivs
test
lahf
clc
loope
in
repz
test
mov
lock
jl
dec
cli
jecxz
mov
jne
movsb
loop
push
mov
and
lahf
dec
or
in
stos
sbb
fsts
cmp
dec
fimuls
fsts
cli
dec
out
or
lds
test
jge
repz
scas
and
xor
adc
inc
negb
test
rcrl
into
mov
call
xor
sbb
push
push
std
sbbb
push
and
mov
xchg
sti
es
fbld
sti
inc
loopne
adc
movsl
popa
mov
and
mov
subl
mov
inc
push
cltd
mov
lods
push
inc
jmp
sub
mov
add
jo
out
shl
xchg
and
push
imul
lret
lea
rcl
jp
fsubrl
jb
daa
add
mov
or
mov
fsts
mov
leave
xchg
mov
stos
test
std
aad
jns
and
push
lods
dec
jae
lahf
jmp
cs
jae
add
ret
dec
scas
jb
xlat
xchg
dec
mov
into
movsb
fwait
mov
movsl
daa
out
sbb
fstl
and
push
cmp
dec
cmpsl
and
ficomps
icebp
lods
popa
jp
setle
sarl
cwtl
gs
push
icebp
jno
xorb
movsb
icebp
add
fs
pop
mov
ljmp
inc
add
jp
lods
pop
ds
pop
pop
faddp
pop
cwtl
js
cmp
mov
rclb
mov
pop
neg
hlt
iret
or
in
popf
call
push
imul
adc
jle
dec
jno
or
dec
sub
aam
dec
push
mov
mov
dec
aas
movb
inc
xchg
mov
repz
add
aad
cld
or
sbb
jmp
mov
ret
dec
jo
add
xor
adc
inc
daa
ljmp
scas
mov
jecxz
add
scas
or
mov
pop
lock
aas
sub
imull
mov
and
mov
shrb
sti
push
bound
int
inc
push
jmp
lods
dec
mov
out
mov
dec
sbb
jl
mov
push
jecxz
jge
lcall
inc
pop
inc
and
inc
inc
out
or
or
rorl
inc
insl
mov
inc
ljmp
outsb
and
into
out
sbb
lret
xchg
idiv
stos
nop
ss
cmpsb
mov
scas
lcall
ja
sub
push
clc
int
or
shrb
pop
mov
jge
mov
cmp
out
sbb
aad
jle
xchg
adc
cld
cmp
and
ss
push
fsubp
fidivs
lret
popa
mov
lds
and
fsubrs
pop
dec
cmp
pop
or
sbb
cmp
mov
stos
xor
aam
add
in
mov
aas
sbb
xor
mov
pop
mov
mov
mov
push
pop
cmp
sqrtss
lods
into
aad
mov
test
push
fidivs
cmc
xor
inc
arpl
pop
inc
mov
aam
ss
adc
add
in
mov
mov
dec
mov
repz
or
or
scas
push
orl
or
aam
and
dec
sub
and
push
icebp
dec
gs
mov
pop
jb
jbe
pop
adc
jno
js
xor
cltd
mov
xchg
mov
mov
movsl
xor
jl
inc
rcr
push
ret
mov
adc
fidivl
sub
loop
icebp
cmc
push
dec
cmp
test
add
push
test
dec
imul
mov
sbb
pop
insl
push
rcll
jbe
loop
add
or
test
xor
js
fwait
mov
ret
std
dec
mull
stos
inc
mov
orb
mov
mov
test
in
pop
push
sub
lahf
fmuls
jno
mov
push
dec
pop
pop
push
add
int
movsl
bound
adc
aaa
cmp
pop
hlt
test
lds
push
sbb
mov
mov
lea
je
dec
mov
inc
mov
mov
stc
clc
xchg
xchg
xchg
inc
pop
dec
pusha
testb
fistpl
inc
push
gs
clc
inc
and
hlt
jns
in
jecxz
jle
xchg
ficoms
scas
mov
inc
sar
sub
in
sbb
ljmp
push
into
push
dec
mov
cmp
push
jne
adc
popf
inc
insl
jne
xchg
pop
adc
enter
pusha
rclb
outsb
cmp
ss
scas
ret
insb
nop
push
xchg
xor
movsl
mov
fisubrl
pop
mov
outsb
mov
lcall
mov
jge
shrl
sub
test
dec
cmpsb
dec
mov
popf
loopne
xor
jo
mov
enter
mov
mov
cmc
out
xchg
mov
jnp
inc
fwait
pop
and
addr16
nop
test
push
inc
sbb
sub
fists
inc
xor
add
add
mov
and
stos
cmp
sbb
outsb
push
push
inc
mov
cmpl
inc
sub
flds
int3
bswap
cmp
mov
bound
int3
ret
das
aaa
outsl
cmpsl
imul
decb
jb
imul
sbb
xor
or
lret
mov
repz
sub
inc
sahf
testb
imulb
sub
or
test
lods
pop
xlat
push
add
rcll
and
mov
nop
sub
and
jo
mov
lret
mov
xor
insl
ja
dec
push
addr16
sbb
in
jl
xchg
pop
outsl
imul
test
dec
add
imul
adc
stc
mov
and
ds
jnp
cltd
fisttpl
dec
divb
pop
push
cmp
inc
fwait
dec
sub
inc
inc
adcl
roll
mov
stos
pop
ret
adc
xchg
push
cmp
or
xor
xchg
adc
fsubs
imul
cmp
repz
xchg
cmp
adc
ret
aaa
jecxz
cli
cltd
jae
sti
orl
loope
jge
mov
iret
jnp
jo
push
sub
cmp
test
mov
in
or
ljmp
mov
push
sbb
and
rolb
ja
xchg
fs
jl
mov
sub
adc
sub
shl
or
ret
jp
lds
push
repz
mov
pop
andl
add
dec
add
out
repz
mov
or
add
push
xchg
pop
daa
iret
jne
ljmp
dec
outsb
push
mov
test
dec
sub
xlat
aad
loope
gs
fildll
cmc
or
lcall
mov
mov
fists
mov
fimuls
add
ljmp
or
cmp
daa
fisubrl
jne
pusha
hlt
cli
add
lods
je
imul
push
adc
dec
xor
out
in
xchg
dec
mov
fisubl
lods
adc
scas
inc
push
sub
inc
pop
std
loope
push
das
and
loopne
mov
push
xor
push
outsl
fdivl
shlb
ja
aad
arpl
cmpsl
lret
cmp
adc
inc
popa
nop
inc
shlb
stos
mov
lret
mov
xchg
ss
sub
hlt
mov
insl
out
push
adc
xchg
movsl
fisttpl
push
sub
mov
in
and
cmp
les
xchg
inc
imul
leave
loope
loop
test
inc
mov
sbb
xchg
cmc
inc
jne
jp
pop
mov
int3
mov
pop
les
or
or
lret
inc
mov
jp
mov
ss
aad
sub
out
push
or
xchg
les
getsec
xor
pop
and
xchg
add
cs
pop
lods
adc
ja
into
dec
sub
aaa
sub
and
mov
jmp
das
jmp
je
xor
movsl
lods
scas
das
jge
insb
mov
popf
push
add
cmp
loopne
jno
jae
andl
push
in
pop
fmuls
xor
in
adc
xchg
dec
push
push
pop
xorb
vmovdqu
dec
outsl
lcall
mov
cmp
sub
popa
mov
mov
lret
lahf
shll
jnp
int3
inc
in
mov
sub
mov
xchg
mov
test
mov
test
cmp
xchg
jle
push
cld
xor
jbe
ret
adc
popa
inc
lahf
out
stos
leave
das
std
aad
add
cmp
dec
outsb
je
mov
test
repz
xor
jge
nop
or
scas
adc
out
in
xchg
lcall
mov
cltd
jecxz
inc
xchg
and
call
ljmp
sahf
sbb
jl
loop
adc
cmc
outsl
sub
iret
cmp
mov
xchg
mov
add
rcrl
push
sbb
dec
and
or
mov
ret
jno
lock
cmp
enter
arpl
loop
inc
icebp
sbbl
or
pop
mov
aas
and
jne
xor
cld
ss
sti
push
sahf
enter
std
dec
aaa
dec
push
jge
add
iret
xor
or
add
sub
out
sub
jg
jmp
scas
call
aam
or
fs
std
mov
pop
xchg
pop
mov
xor
clc
jle
sahf
push
lods
hlt
xchg
aaa
jno
adc
cmp
enter
arpl
xlat
xor
or
cmp
xlat
into
popa
fisubrs
js
xor
sbb
ret
adc
dec
cltd
lret
xor
sbb
xor
and
xor
push
mov
fildll
inc
cli
ret
pop
fs
or
xchg
aam
in
fs
les
and
push
arpl
call
fistpl
sahf
enter
nop
fidivrs
pop
mov
inc
jmp
imul
lea
sub
in
insb
jne
xchg
pop
mov
iret
xor
in
xchg
or
fsubr
adc
dec
incb
xchg
icebp
xchg
xchg
sub
in
dec
movl
je
sub
cs
sub
pop
js
data16
jl
inc
add
inc
rorb
rcrb
push
loop
or
sbb
mov
push
mov
pusha
jle
xor
fdivr
shl
sbb
lds
push
mov
cmpsl
int3
iret
cmp
cwtl
mov
ljmp
fcoml
hlt
je
call
subb
ds
pop
adc
cmp
mov
rorl
push
mov
clc
addr16
stos
pop
push
outsl
pop
pop
cmpsl
call
out
inc
jl
inc
test
insb
cmp
nop
in
pop
mov
sbb
lcall
add
sbb
in
into
mov
imulb
jo
ljmp
int
and
shl
xor
insb
bound
leave
leave
ljmpw
fistps
dec
arpl
inc
enter
sbb
sub
test
fwait
rorb
imul
int
inc
adc
in
int
call
insl
or
push
fidivrl
cs
mov
test
sub
push
lock
lret
mov
mov
pop
int
pop
or
jmp
adc
insl
fwait
mov
push
dec
mov
push
int3
mov
mov
sub
inc
and
js
inc
mov
cltd
es
repnz
dec
xor
inc
inc
ds
adc
test
pop
xlat
dec
mov
cmpsl
inc
lcall
icebp
fcomps
xlat
js
outsb
adc
sub
push
ja
scas
cmp
in
sub
loop
mov
ret
enter
filds
cmc
pop
xchg
xlat
scas
movsb
jns
mov
getsec
xchg
cmp
stc
pushf
movsl
cmp
daa
imul
fwait
xor
fsubrp
ljmp
add
fsubr
xchg
sti
cmc
xchg
xlat
pop
jl
push
call
fs
fidivl
add
lcall
push
into
adc
push
mov
lds
fs
cli
xchg
cmc
icebp
adc
mov
push
inc
jg
jle
inc
sub
mov
and
mov
shrl
adc
add
push
add
pop
rorl
cs
hlt
push
iret
and
insl
out
or
js
pop
movsl
push
or
sub
and
mov
cmpb
cltd
add
pop
aad
scas
lea
sbb
add
mov
sahf
xchg
xor
jnp
incb
add
mov
inc
cmpsl
push
dec
cmp
xor
inc
mov
dec
das
adc
jp
in
pop
jg
nop
out
mov
push
adc
cwtl
dec
sti
or
ror
and
je
jne
and
not
adc
jl
das
leave
ds
orb
pop
das
adc
enter
add
pop
aaa
call
mov
outsb
mov
imulb
adcl
or
mov
dec
pop
inc
cmc
arpl
out
les
daa
and
ds
lods
dec
adcb
sarb
and
jge
dec
or
flds
popf
dec
mov
xchg
or
xchg
pop
roll
add
iret
and
iret
and
test
fsubl
dec
mov
xorl
sbbl
xchg
in
es
cltd
shll
js
popf
mov
out
dec
push
jge
leave
repz
mov
scas
push
lds
adc
out
mov
and
adc
xchg
scas
scas
sub
cmp
jnp,pt
mov
js
ret
adc
dec
gs
subb
or
pop
out
push
dec
cltd
jp
mov
pop
pop
sbbb
adcb
inc
loope
filds
rclb
add
and
xchg
dec
iret
pop
testb
cmpl
lods
ficoms
lds
xor
mov
xor
sahf
outsl
fsubrs
jae
cwtl
inc
lods
insb
shrl
ja
pop
stos
dec
mov
pushf
mov
loop
or
pop
lock
lds
out
mov
dec
or
or
jmp
sub
ret
cmpsl
xchg
pop
and
pop
rolb
in
or
xor
xor
cmp
mov
out
add
pushl
jl
and
and
xchg
js
fstpt
or
movsl
xor
add
jne
pop
add
pop
sbb
or
lret
aam
lcall
shlb
mov
bswap
dec
and
sarb
mov
addl
adc
jbe
adc
jg
out
lcall
inc
dec
push
pop
adc
mov
push
inc
cmp
push
cmp
xor
mov
pop
fstl
sbb
sub
jns
sbb
dec
mov
pop
jmp
clc
jge
int3
aas
or
jge
les
dec
inc
rolb
outsb
xlat
pop
in
mov
fmul
xor
movsb
fxtract
fbstp
mov
xchg
orb
push
and
cmp
xor
sahf
push
hlt
push
ret
add
mov
and
in
int3
mov
call
and
vandpd
popf
dec
ss
jecxz
sub
pop
ret
iret
xchg
pushf
jecxz,pn
lcall
dec
push
es
mov
sub
out
jmp
test
jge
add
add
hlt
out
dec
stos
xchg
dec
out
cltd
loope
inc
popa
xchg
scas
pop
inc
xchg
xor
roll
adc
scas
movsl
ss
sub
sbb
or
dec
in
pop
mov
cmpsl
lcall
popf
mov
xor
clc
or
dec
jp
je
out
test
in
jp
jae
pop
add
mov
jnp
mov
pop
adc
out
and
inc
pop
or
fs
sbb
in
mov
test
fistl
pop
cmp
decl
adc
cmpsb
cmpsl
jno
add
fdivrl
scas
leave
adcl
and
daa
imul
frstpm(287
lret
add
clc
xchg
clc
out
popf
add
mov
lcall
cmp
call
imul
pop
clc
pop
jb
xchg
shll
inc
fisttpl
mov
xchg
mov
or
fucomip
ror
fldl
sub
jnp
out
mov
pop
add
jnp
hlt
adc
data16
dec
flds
jbe
fs
adc
mov
add
xchg
std
lock
mov
mov
mov
in
aaa
jp
and
cmp
movsl
jp
aad
and
scas
enter
cmp
pop
fsubs
js
mov
jmp
repnz
adc
popf
lahf
dec
pop
add
ds
call
leave
das
inc
ret
call
notb
sbbl
or
mov
jno
outsb
je
in
lahf
mov
and
popf
loopne
jecxz
mov
jge
mov
gs
mov
fdivrs
call
nop
and
mov
jmp
fistps
hlt
mov
cwtl
cmp
cmpl
mov
adc
mov
adc
pop
pushl
lahf
pop
dec
pop
adc
fldcw
and
mov
scas
sub
xchg
xchg
mov
insl
stos
lahf
bound
sub
aaa
adc
xchg
xchg
add
pop
lahf
out
or
mov
imul
add
cmp
mov
out
outsb
dec
cmc
jl
xor
les
mov
sub
jno
dec
repz
dec
cmc
ss
push
sbb
adc
sahf
fcmovnu
movsb
pop
aam
imul
dec
adc
scas
adc
rcll
inc
in
shl
cmp
mov
cli
mov
cmpsb
aam
sub
xchg
mov
aas
push
inc
or
or
cli
jae
data16
jb
pop
aad
cmp
sub
fdivrs
pop
rcrb
dec
dec
in
cmp
cmp
adc
inc
movsl
aad
dec
fistpl
pushf
ljmp
gs
cltd
xlat
je
mov
push
add
mov
xchg
jb
andb
imul
lret
sub
mov
pop
jge
xor
mov
xchg
fwait
dec
ud1
and
mov
int3
mov
sub
add
mov
aam
cwtl
inc
lret
sub
cli
into
and
sbb
inc
jg
arpl
add
jl
mov
aad
pop
or
mov
mov
es
sahf
mov
rclb
cld
or
insb
std
mov
out
add
das
lcall
xor
pushf
cmp
sub
sti
test
fldenv
int
push
dec
lea
arpl
fwait
stos
popf
mov
jnp
stc
dec
scas
adc
jmp
jmp
add
imull
or
fwait
or
mov
pop
cwtl
pusha
lcall
sub
jmp
aam
jl
jo
mov
outsb
mov
daa
xor
ljmp
addr16
mov
ljmp
sub
dec
mov
jo
bound
adc
jl,pt
rolb
insb
or
jg
mov
dec
mov
ljmp
dec
pop
pusha
cmp
lock
sub
sub
cmpsl
add
ret
aaa
les
or
ds
stos
into
cmpsb
jns
sar
jmp
mov
mov
mov
mov
or
jmp
jg
aaa
call
and
insb
pusha
shl
mov
nop
mov
xchg
pop
pop
lds
sbb
test
mov
jno
scas
sub
sbb
popf
cwtl
fs
int3
mov
mov
rorb
push
xor
fdivs
add
xchg
mov
xchg
jp
push
rorb
cmp
fimuls
iret
mov
and
pop
je
or
xchg
adc
push
adc
imul
push
and
test
sbb
ss
sbb
sub
and
repnz
mov
mov
data16
sbbb
dec
orl
sub
push
xor
js
inc
jb
inc
insb
adc
adc
pop
mov
push
push
mov
xor
flds
lods
or
int
mov
sub
int
call
xchg
aas
icebp
adcl
hlt
rcll
lret
call
and
pop
pop
xchg
mov
jge
xchg
sub
pop
pushf
adc
lret
cli
cmpsl
lods
mov
ljmp
mov
out
scas
mov
jae
sub
insl
test
in
leave
pop
sub
loope
adc
inc
sub
push
testb
lds
push
bound
jno
sub
mov
add
mov
lods
xor
sarb
pop
lret
sub
ret
or
jp
dec
lods
xor
mov
mov
ret
fsubs
mov
pop
notl
xchg
dec
mov
ret
pushf
mov
je
xchg
adc
pop
inc
push
lds
inc
data16
mov
mov
or
clc
cmpsl
imul
loope
or
testb
lock
cmc
stc
rcr
cmpsl
ss
push
ljmp
sbb
pop
adc
push
mov
pop
sbb
out
dec
adc
sub
hlt
ror
mulb
add
rcl
ljmp
ficoms
je
adc
mov
inc
mov
jp
dec
cli
mov
cltd
or
or
sub
fimull
js
sub
repnz
out
ljmp
int
rcrl
push
hlt
mov
lods
leave
imul
mov
int3
mov
push
xor
pop
out
gs
inc
or
gs
outsb
fdivrs
xchg
push
psubw
xchg
xor
xor
je
aaa
push
xchg
adc
or
imul
pop
jnp
aad
lret
sbb
adc
xchg
inc
sbb
xchg
sub
ret
add
xor
xlat
into
cmp
push
data16
sbb
in
xchg
xchg
fisttpl
test
into
jmp
push
js
pushf
jo
or
and
icebp
rcl
pop
jmp
dec
scas
and
test
jp
push
fwait
in
mov
or
mov
cmp
cmp
lock
test
jmp
scas
insl
push
add
outsb
arpl
jmp
inc
and
xor
in
sbb
daa
and
pop
pop
gs
cmp
push
out
cmp
loopne
sti
mov
sub
mul
hlt
jmp
enter
sub
mov
cltd
jbe
inc
mov
mov
aad
mov
fimuls
mov
push
pop
sahf
add
js
cmp
lea
or
mov
cmp
inc
jp
inc
add
xor
jo
loopnew
xor
pop
mov
rcrb
pusha
hlt
sbb
push
movsb
je
pop
mov
or
mov
pop
sti
jg
fsubr
lahf
mov
xchg
push
mov
popa
popa
jae
aam
xchg
popl
xchg
dec
xor
pop
stc
and
negl
mov
push
adc
and
jmp
or
ret
in
mov
jecxz
shr
stos
push
data16
push
pop
jne
push
decb
dec
test
jbe
out
jbe
push
or
pop
xor
and
mov
pop
js
iret
sbb
nop
or
xchg
sbb
js
test
gs
pop
iret
insb
cmp
addr16
mov
mov
je
jle
aad
push
sarb
adc
popf
subb
cmp
outsb
mov
or
sahf
pop
in
add
dec
jns
sbb
or
ja
dec
sub
pop
pop
cltd
call
dec
stos
fcomps
push
loope
es
xor
mov
mov
lcall
push
fs
sub
es
fidivl
sub
cmp
jne
mov
cmp
mov
stos
std
inc
inc
fdivr
out
inc
dec
adc
mov
pop
out
mov
jmp
jne
add
movsb
cmp
or
clc
sub
xlat
jbe
jno
push
ljmp
dec
and
popa
sub
std
adc
xor
in
add
ret
xor
add
sub
add
aad
out
fdivs
clc
gs
push
aad
lds
jp
int
sbb
jo
xor
rclb
outsl
xor
mov
or
ds
mov
addr16
jnp
or
pop
inc
icebp
push
and
ficomps
pop
sarb
sub
jle
aas
jecxz
pop
sbb
lahf
out
adc
iret
xchg
pop
mov
fs
sbb
das
jno
out
inc
fwait
pop
aad
mov
test
push
push
jge
stos
push
lods
scas
pusha
daa
jo
loopne
and
mov
sarb
jle
iret
stos
cmp
mov
xor
cmp
popf
incb
mov
and
push
cmp
and
pop
and
loope
fdivrl
icebp
fs
das
sbb
sbb
inc
stos
arpl
ja
outsl
or
popf
mov
pop
pushf
cli
cmp
jns
pop
pusha
xor
fwait
xchg
mov
add
inc
test
insb
lret
adc
lods
out
nop
inc
pop
mov
fidivrl
xchg
cmp
movsb
les
inc
insb
fidivs
fildl
cwtl
les
add
hlt
fmuls
loop
out
pop
inc
fucomip
mov
push
sub
mov
mov
jle
mov
hlt
inc
shll
mov
jae
lahf
ljmp
jne
leave
push
xchg
shr
add
movsl
bound
sub
jnp
call
test
pop
int
scas
fs
loope
and
lcall
jne
adc
xor
dec
andl
push
or
or
sbbb
aad
inc
movb
sarb
insb
int3
mov
jns
mov
push
push
stos
inc
xchg
fcoml
add
xchg
dec
repz
shll
movsl
fbstp
sbbb
adc
add
sub
stos
outsl
into
test
or
cmp
inc
movsb
xor
pop
insl
lock
ja
push
add
ljmp
cwtl
jb,pt
test
decl
push
xor
mov
pop
inc
xchg
roll
popa
jo
sub
loope
jl
push
push
xor
stc
fsubrl
and
xchg
rclb
adc
cmpsl
push
out
lret
jns
pusha
daa
xlat
popa
add
gs
arpl
mov
pmulhrsw
fldenv
js
mov
test
sbb
xor
repz
out
mov
es
push
ret
or
pop
fs
mov
cmp
pop
pusha
pop
addr16
stos
fisttpl
cmp
scas
mov
sub
sbb
jl
cmpl
sub
mov
lock
dec
outsl
orb
sarb
fisubrs
mov
cli
jmp
mov
jb
mov
je
mov
mov
sub
inc
mov
adc
fnsave
xchg
or
cmp
incb
mov
jmp
sbb
imul
cmp
movsl
push
ret
or
fmull
mov
jmp
push
stc
add
cwtl
cmp
pop
jne
sti
decl
xor
pop
jnp
or
cld
stos
xchg
jbe
sbb
and
ja
rorb
fistl
shll
and
mov
add
movsb
int3
stos
subb
imul
inc
cmp
mov
aas
push
stos
divb
lahf
cmp
test
imul
addr16
cmp
xchg
es
les
pop
sub
insb
ret
je
mov
pop
sub
stos
hlt
mov
movsb
lock
mov
pop
and
mov
adc
mov
mov
mov
sbb
cwtl
rorl
fcomps
pop
lcall
mov
movsl
xchg
dec
mov
mov
out
add
popf
mov
test
lods
pop
mov
ror
call
incb
call
cmp
cmp
cwtl
jmp
lcall
adc
std
sbb
xor
stc
test
out
jecxz
pop
mov
addb
jmp
hlt
fldl
enter
std
mov
popl
sbb
repz
insl
aad
and
xor
leave
inc
xchg
xor
push
es
testl
jo
xchg
fcompl
mov
jecxz
rorl
cmpsl
lahf
sub
lods
notb
jnp
mov
adc
outsb
ljmp
and
das
cmp
dec
push
sahf
std
adc
imul
mov
loop
rcll
aaa
jge
jne
out
stos
xchg
fnstcw
sub
popa
push
aaa
push
add
adc
jl
sti
mov
and
or
sbb
mov
adc
xchg
sub
pusha
xchg
jp
push
addr16
xchg
mov
adc
popa
rcll
ffree
or
enter
mov
lret
or
nop
xchg
inc
testb
repz
xchg
mov
jns
in
mov
sbb
pop
ss
daa
fwait
jno
pop
add
add
loop
int
cmp
clc
ficomps
mov
cmc
loop
and
jo
das
loopnew
jge
push
xchg
push
gs
push
mov
xchg
jp
xchg
rol
out
adc
sbb
test
les
mov
sbb
loop
es
xchg
add
enter
dec
sbbl
jmp
jbe
data16
sbb
dec
scas
cmp
mov
jnp
cs
and
mov
aas
inc
fadd
int
sbb
lret
push
mov
daa
in
aam
sahf
lods
xlat
pop
jae
pusha
or
pop
icebp
ljmp
clc
mov
lods
cmc
lcall
xor
push
jecxz
sub
cli
out
scas
push
push
mov
in
sbbl
inc
add
add
xchg
sub
jns
xchg
sbb
and
jno
mov
addr16
fmuls
pop
ljmp
lahf
cmp
cmp
mov
sbb
add
jmp
xchg
cmp
mov
insb
aas
stc
stos
push
adc
imul
add
mov
sub
xchg
lea
add
std
icebp
pop
sub
ftst
ljmp
mov
mov
lods
sarb
inc
pop
cmp
jp
sti
mov
xor
int
pushf
andl
xlat
scas
or
cmpl
sub
into
int
jne
fldl
or
xchg
and
out
stc
xchg
enter
inc
fildll
repz
sbb
pop
lock
push
jae
sub
bswap
mov
out
adc
sbb
push
sub
dec
sub
movsb
dec
push
repz
mov
leave
jno
xchg
jg
or
inc
dec
mov
icebp
pop
pop
or
mov
and
ljmp
lods
js
and
mov
xor
lea
jmp
mov
xor
outsl
mov
inc
into
mov
xor
call
loope
adc
test
clc
shll
jnp
mov
jg
cltd
adc
incl
ret
dec
cmp
mov
mov
shl
push
mov
repnz
push
and
aad
loopne
xchg
dec
inc
enter
ficompl
mov
jae
fmul
jle
or
popl
lret
and
xchg
sub
cltd
inc
or
mov
push
insb
sbb
jecxz
ficompl
and
inc
xor
data16
pop
pop
loop
sarb
insl
or
add
int3
lahf
xchg
or
insl
repz
push
sbb
mov
nop
inc
dec
sbb
adc
in
fucomip
jbe
adc
mov
andb
xor
mov
adc
xchg
gs
xchg
popa
paddusb
sbb
jno
dec
mov
repz
sbb
inc
outsb
repnz
in
adc
gs
ffreep
adc
add
cmc
fildl
shll
jmp
jle
mov
aaa
push
notl
inc
mov
push
inc
add
test
int
pop
xchg
sbb
insb
dec
cmp
add
out
xor
adc
sbb
mov
jns
inc
mov
mov
gs
jle
xor
jp
add
gs
scas
or
mov
push
jmp
es
je
xor
adc
pop
cmp
xor
clc
mov
pop
outsb
jle
jge
xor
lret
and
int3
dec
add
or
xor
xchg
push
aaa
loop
out
push
rcr
subb
cmp
xchg
data16
sub
cmp
or
mov
adc
clc
xchg
out
divl
jb
sahf
cmp
push
cmp
mov
andb
in
in
enter
inc
je
pop
cwtl
dec
push
xchg
dec
inc
jle
clc
jnp
mov
mov
push
gs
mov
xor
mov
xchg
push
sbb
and
mov
in
sub
mov
dec
dec
inc
fmulp
jl
arpl
cmc
adc
and
or
cld
ds
inc
push
psllw
stos
out
mov
xchg
fiaddl
jl
xor
test
add
aad
ds
rolb
sbb
or
pop
adc
add
pop
es
shlb
and
pop
mov
into
sbbb
cmpsb
jne
imul
and
icebp
negb
sbb
out
lret
xchg
inc
std
push
aas
repnz
aam
rcl
mov
int
adc
cmpsl
sub
aaa
fcoml
mov
bound
push
adc
cmpsl
movb
xorl
repnz
sbb
shrb
cwtl
ja
cmpsl
push
cwtl
std
icebp
sbbl
cld
sti
cmp
push
js
or
cmp
in
cmp
lret
add
jae
xor
jge
and
adc
mov
movsl
xorl
insl
decb
test
cli
lcall
rol
adc
hlt
lcall
sbb
adc
dec
or
sahf
mov
or
lcall
lcall
jbe
jno
xchg
pop
ds
xor
call
sarb
adc
xchg
lds
adc
insl
out
les
push
sbb
shlb
cli
filds
xchg
in
aam
stos
insb
push
add
push
mov
movsl
lods
pop
dec
pop
mov
movswl
sbb
push
stos
loop
js
inc
and
add
cld
aas
roll
shl
cmc
stc
mov
inc
jge
mov
in
sub
pop
adc
outsb
ljmp
add
das
sub
inc
cld
ret
je
push
adc
xchg
cmpb
faddp
add
mov
mov
jbe
adc
inc
scas
rclb
fcmovne
xchg
xchg
sbb
out
mov
lea
xchg
jl
es
jecxz
in
xchg
outsl
push
xchg
lret
pop
add
mov
sbbb
xchg
imul
cmp
roll
mov
testb
adc
loope
test
jge
sbb
push
push
adc
sbb
gs
jno
mov
gs
andb
gs
js
mov
jmp
sbb
adc
aad
mov
and
push
aam
jns
jo
cmc
add
and
testl
xor
sti
push
sbb
in
aaa
repz
loope
cmpsl
jns
orb
cmp
outsl
movsl
xchg
sub
dec
dec
movsb
inc
rclb
cwtl
cmc
jbe
insb
push
out
mov
add
gs
dec
mov
sub
dec
add
mov
mov
adc
mov
mov
pop
fs
lods
xchg
out
lret
mov
xchg
fidivrs
aam
sbb
xchg
mov
rcll
sahf
sbb
rol
pop
cltd
xchg
lods
into
sahf
mov
in
pop
or
and
cmp
push
pop
lea
push
call
inc
out
push
mov
cld
mov
xchg
fstps
mov
cmp
cmp
ljmp
pushf
cld
or
insl
inc
xchg
outsb
aad
adc
mov
stos
out
or
popa
outsb
daa
push
out
cmpsl
retw
movsl
clc
or
jb
adc
clc
jecxz
mov
mov
xor
subb
cld
dec
push
js
sub
xchg
rorl
mov
cli
dec
je
or
mov
cmp
dec
mov
addr16
into
dec
xor
xchg
push
imul
and
mov
das
cli
sahf
cmp
cmc
xchg
lcall
mov
cs
push
mov
cmpsl
je
fistpl
loop
or
push
sbb
cmp
ficompl
stos
push
xchg
aaa
mov
movsl
rol
negb
das
push
loop
arpl
pop
fidivs
sbb
out
push
push
mov
xchg
in
daa
inc
ret
xor
test
jns
mov
das
cmc
pop
jne
inc
ja
xlat
sbb
push
xor
shlb
jg
andb
aam
pop
loope
loope
out
xchg
addr16
sub
lock
cmovnp
int3
xor
stos
dec
dec
push
je
and
pusha
xor
lcall
lea
into
fisttps
pop
adc
push
push
mov
jb
push
fildll
loopne
xchg
lods
xchg
push
cmc
cmpsb
ret
dec
test
pushl
enter
loopne
rclb
mov
inc
push
popa
sbb
jle
aaa
jns
inc
mov
mov
into
dec
cli
lahf
cs
rorl
cli
jecxz
arpl
cmpsb
and
test
test
rolb
arpl
loope
lods
mov
fs
rcrl
jnp
and
push
mov
push
pop
xchg
or
jbe
mov
int3
sbb
pop
push
sbb
sbb
outsl
or
dec
ljmp
clc
notb
mov
movsl
aam
scas
mov
push
push
psrld
lret
mov
add
mov
js
stc
into
add
xchg
push
mov
out
pop
push
inc
and
dec
mov
xor
sub
jl
mov
jns
aaa
std
call
nop
lcall
aad
pushf
mov
mov
daa
jge
push
adc
push
push
decb
inc
stc
lea
pop
jnp
insb
gs
in
enter
pushf
adc
fnstenv
mov
gs
pop
cld
popf
sub
cmp
pop
jp
cld
mov
push
mov
enter
je
push
stos
push
pop
pop
sbb
adc
xor
lods
call
fucomip
lcall
add
sti
dec
dec
pop
fldl
sti
xor
cmpsl
mov
xchg
loope
dec
rcr
add
pop
mov
pop
outsl
push
sarb
mov
iret
ret
test
pop
mov
cmpsl
sbb
inc
push
fwait
xchg
subb
sarl
jnp
pop
and
dec
cmpsl
sub
push
cmpsb
scas
jno
mov
jg
push
movsl
insl
add
push
cmp
mov
test
daa
rclb
or
lcall
xlat
mov
or
mov
inc
enter
push
pop
int3
insl
push
mov
jecxz
fprem1
ret
pop
mov
gs
je
push
cwtl
inc
ror
push
cld
or
mov
test
jle
shll
das
add
mov
lret
repnz
in
adc
push
shl
jnp
sbb
inc
adc
ret
out
cltd
cmpb
mov
int3
insl
js
mov
mov
adc
push
movsl
das
dec
dec
outsb
cmp
jecxz
loopne
xor
push
loope
rorb
and
aad
push
and
ficoms
push
outsl
dec
pop
insl
jae
repz
xor
cmc
jo
adc
enter
add
or
pop
push
push
stos
cld
dec
jae
lock
mov
mov
mov
push
push
cwtl
add
orl
push
add
outsb
stc
shl
inc
lret
fbstp
lret
insl
cwtl
mov
imul
or
stos
fldt
je
int3
loope
inc
lods
push
push
or
jp
pop
dec
in
or
jle
cmp
gs
cli
mov
mov
sub
ds
es
fdiv
fwait
ja
xchg
mull
es
rcr
xor
sub
xchg
fdiv
fidivrs
imul
cmp
and
jnp
popa
jmp
sub
dec
xchg
sbb
adc
push
pop
push
mov
ja
shrl
repz
sahf
and
sub
mov
xchg
and
add
leave
fistl
add
adc
pop
lcall
cmp
loopne
mov
xor
or
push
pusha
sub
mov
cmp
jg
jecxz
sbb
xor
scas
stos
scas
push
cmp
pop
inc
mov
pushf
jge
cld
mov
bound
les
scas
fptan
lret
jmp
addb
xchg
mov
nop
mov
addb
insb
xchg
pop
mov
or
jge
mov
pop
ret
sbb
jno
test
push
pop
mov
es
xchg
sbb
faddl
push
add
xchg
outsl
push
aam
out
or
aas
les
and
pop
push
lds
adc
out
mov
jbe
out
dec
cmpl
rolb
in
sbb
subl
test
adc
repz
push
cmc
movsb
sbb
mov
add
push
xchg
xchg
movsb
lret
push
flds
sbb
imul
xor
add
fcompl
clc
jmp
pop
lods
fsubrs
cli
repnz
pop
lods
push
ret
or
and
test
idivl
jecxz
cmp
add
in
ffree
ret
push
push
cltd
lahf
stc
mov
mov
int
push
insb
rolb
std
or
jp
loopne
movsl
cmp
out
mov
fcoml
nop
mov
xor
daa
add
dec
popa
mov
ss
sti
pop
inc
nop
jae
shr
decb
out
xchg
xor
in
gs
sub
add
push
aad
add
lret
test
mov
clc
js
sbb
test
sub
les
jmp
adc
cmpsb
add
in
jb
mov
mov
leave
rorl
pop
data16
lret
cwtl
push
pop
mov
mov
add
aad
xchg
mov
cmp
sub
xor
jge
mov
xor
and
mov
fdivrs
add
orl
sub
jmp
and
repz
bound
out
or
jnp
mov
aad
mov
dec
dec
fsubp
fnsave
dec
mov
mov
xchg
negb
sub
mov
pop
jg
xor
pop
outsl
ss
in
cltd
sbb
scas
xor
lods
stos
mov
nop
mov
mov
fdivrs
push
sbb
filds
cmpsb
sti
pop
inc
xchg
dec
cmp
push
or
ret
mov
ret
ficoml
aas
sub
icebp
adc
jne
in
mov
adc
sahf
lods
mov
xchg
cmp
movsl
aas
scas
mov
pop
mov
test
or
sub
loopne
cmpb
test
lock
mov
cli
daa
in
int3
addr16
mov
push
loop
mov
mov
mov
mov
in
pop
loop
lahf
push
cld
stos
clc
pop
pop
inc
out
pop
jecxz
jecxz
out
bound
pop
xor
push
ret
mov
fistl
sbb
leave
adc
mov
fsubrl
daa
cmp
cmovbe
sbbl
out
fbld
arpl
xchg
insl
pop
jecxz
add
xor
mov
insl
push
push
dec
or
iret
xlat
outsb
add
imul
jmp
dec
cmp
std
shr
repz
flds
icebp
or
std
insb
lahf
and
xchg
inc
ret
add
pop
lret
lahf
and
push
push
mov
xor
movsb
hlt
out
and
pop
cmp
lods
pop
call
cwtl
nop
mov
dec
fisttpl
xchg
pop
pop
add
lahf
jmp
divl
lods
cmp
stc
push
xchg
dec
fbld
movb
mov
je
pop
js
daa
sbb
mov
into
int3
or
lods
push
loopne
pop
scas
stos
sub
push
inc
adc
movsb
push
or
stc
jl
aam
fbstp
movsb
sarl
aam
in
push
mov
push
push
loopne
out
jmp
hlt
add
sbb
xchg
lods
cmp
cmc
cmp
divl
popa
sub
jno
sub
xchg
xlat
idiv
pop
fdivl
int3
and
repnz
dec
mov
push
stos
repnz
jne
cmp
popf
xlat
jnp
xchg
cmc
pop
out
inc
xlat
mov
inc
popf
lret
fsub
icebp
repnz
lods
fiadds
data16
inc
movsb
dec
insl
fsubrs
fnstcw
sub
setno
adc
in
or
shll
xchg
icebp
fstl
jae
add
jns
push
mov
imul
lock
outsl
or
push
cmpsl
je
mov
test
dec
mov
dec
ljmp
icebp
jp
dec
pop
jl
xor
sbb
lods
xchg
push
rcll
aam
and
lock
xchg
xor
ss
xchg
inc
sub
inc
push
lret
xchg
mov
jp
bound
mov
xor
mov
jge
dec
sub
mov
stos
sub
cmp
int3
arpl
xor
test
xchg
xor
jae
jmp
jns
dec
in
or
and
mov
test
js
xorb
mov
sbb
cmc
mov
inc
shr
leave
adc
test
cld
add
push
shrb
loopne
fsubl
test
jmp
inc
mov
out
mov
mov
jle
mov
sbb
loope
clc
loopne
fs
adc
insl
int3
push
jl
int3
test
adc
ret
aas
mov
mov
xor
inc
mov
pop
and
push
in
xchg
and
in
mov
movsb
xor
pop
dec
daa
cltd
adc
out
out
and
mov
adcl
jo
adc
mov
push
and
xchg
imull
xor
sub
xor
sbb
jbe
icebp
push
dec
pop
mov
fidivrl
es
lods
pop
aad
mov
mov
cmp
sub
cmc
xor
push
andb
iret
push
mov
sbb
add
rol
lahf
mov
push
inc
or
dec
xlat
loopne
sbb
lods
fstps
icebp
fs
inc
ja
or
mov
fucomi
dec
xor
nop
movsl
pop
icebp
jecxz
movsl
out
sub
lret
rorl
jne
arpl
hlt
push
push
or
imul
in
cmc
sbb
out
shrb
sbb
adc
aam
adc
cmp
push
jnp
lahf
test
mov
loopne
add
sahf
mov
rcrb
and
cltd
mov
repnz
jmp
outsb
mov
ljmp
xlat
mov
ret
dec
or
cwtl
jne
lods
aaa
fildl
adc
lcall
nop
out
push
jnp
rorl
pop
sub
dec
or
push
mov
fwait
insl
pop
pop
mov
out
mov
dec
je
xor
cmp
lock
pop
xchg
dec
mov
push
sbb
ja
lds
in
push
pop
aad
insl
andb
rcr
mov
pop
push
lods
call
jmp
add
adc
and
mov
ljmp
add
sub
xchg
or
xchg
or
les
bound
sub
adc
xor
xchg
and
in
adc
gs
adc
inc
call
inc
push
jno
enter
into
jg
jg
insl
dec
mov
aad
inc
mov
pop
xor
mov
mov
push
adc
insb
sub
lds
jb
mov
out
dec
dec
adc
ret
mov
shlb
sbb
cmp
sub
mov
sbb
shl
cwtl
lahf
nop
pop
mov
dec
push
xor
movsb
call
dec
sbb
scas
test
psubb
ret
mov
shrl
cmpsb
cmp
mov
loopne
jge
and
insb
popf
lahf
stos
pop
fsubl
insb
sbb
cs
insb
push
dec
lea
leave
add
jb
xchg
xor
sarb
sub
out
cltd
mov
mov
sub
adc
cld
fisttps
nop
add
mov
jl
aam
ljmp
js
push
xor
lret
in
jns
es
mov
jno
push
or
xor
xor
js
cld
add
cmp
pop
in
xchg
iret
sbb
inc
add
fstpl
inc
pushl
iret
aad
push
inc
mov
or
push
jns
xrelease
xchg
push
rorb
mov
std
pop
xchg
adc
xor
aas
push
mov
arpl
fcomip
jg
pop
adc
or
xchg
jl
adc
inc
stc
fnsave
xchg
inc
cltd
xor
daa
pop
xor
xor
push
popl
mov
popl
int3
js
mov
ss
loopne
lahf
sbbb
mov
outsb
push
inc
fnstenv
add
ja
enter
popa
js
lock
cmp
call
xor
mov
test
mov
out
addr16
fwait
xchg
cmc
stos
xchg
mov
jnp
fdiv
mov
push
in
pusha
loop
shl
das
scas
push
sbb
mov
cmpsl
test
dec
scas
add
jbe
outsb
jmp
lea
push
movsb
mov
out
or
pop
add
cmp
lods
test
pop
sbb
rolb
mov
xor
lds
in
mov
out
sub
jge
push
addl
aad
sub
popf
sub
mov
sbb
iret
inc
aad
imulb
les
mov
scas
jp
inc
decl
or
cwtl
fcmovne
hlt
or
push
and
sub
outsl
ror
cmp
popa
jl
repz
mov
jno
lret
cmp
loop
sbbl
adc
fildll
fs
push
cmp
add
jmp
aam
push
jg
xchg
mov
lret
cmp
adc
xchg
or
sar
mov
daa
lret
movb
adc
stc
cmp
mov
fwait
insl
inc
inc
xor
xchg
lds
out
les
lods
push
outsl
cmp
mov
hlt
cmc
js
cwtl
fdivrl
and
and
pop
movsb
aas
imul
mov
mov
push
lock
pop
enter
sbb
xor
push
mov
jp
mov
and
repz
insl
xor
imul
es
jecxz
mov
fidivl
dec
lods
xor
sub
shl
lds
mov
clc
dec
xor
fbstp
xchg
scas
sbb
out
pushf
jno
inc
xchg
je
xlat
clc
cwtl
xchg
repz
cs
aam
scas
push
clc
mov
sub
hlt
or
in
out
lods
imulb
scas
mov
mov
jb
or
sub
and
rorb
maxps
test
shrl
cmp
stc
mov
in
icebp
inc
xchg
ljmp
mov
pop
inc
iret
repz
frstor
cmpsb
fistl
pop
cmpsb
fsub
sbb
movsl
ljmp
ds
and
cmp
movsb
sub
pop
add
scas
xchg
mov
lret
sahf
stc
dec
push
mov
adc
or
xchg
pshufw
not
mov
ret
hlt
mov
call
addr16
das
xor
shrb
push
or
in
in
pop
ds
xor
in
int
mov
sub
inc
jnp
arpl
cwtl
into
sbb
push
stc
sbb
mov
or
push
test
push
and
adc
stos
sub
or
jb
pushf
int3
mov
cmpsb
mov
pcmpgtw
xor
xchg
stos
pop
sub
mov
jnp
dec
add
movb
pop
imul
add
mov
inc
sbb
insb
fs
lea
sti
pop
iret
xlat
into
jae
sub
inc
shlb
push
pop
mov
ds
orl
out
int3
shlb
pusha
xchg
ret
hlt
clc
mull
xchg
fwait
pusha
mov
adc
or
cmp
ficoms
iret
ret
decl
cmpsb
xor
insb
mov
stc
fcompl
imul
xchg
mov
push
fiaddl
dec
out
lock
dec
or
sbb
pop
mov
sbb
or
ret
jmp
test
sub
repnz
and
dec
out
inc
insl
mov
cmp
pop
cli
add
dec
loop
call
std
jbe
fcoms
test
push
mov
fiadds
sub
pop
jg
xchg
int3
and
cld
cmp
mov
xchg
add
pop
in
add
and
cmpsl
and
pop
icebp
sub
sbb
in
stc
das
mov
stos
cmp
enter
dec
sbbl
divb
lea
xlat
loop
mov
dec
xor
rorb
bnd
in
imul
adc
fistl
xor
aad
out
leave
adc
pop
mov
xchg
mov
int3
mov
cld
xchg
mov
idivb
pop
jno
and
movsb
in
mov
mov
push
mov
mov
mov
cmp
cmp
mov
scas
sub
dec
ja
filds
sti
setge
xchg
mov
outsl
pop
popa
ja
sti
xchg
mov
mull
pop
pop
lock
jns
icebp
jne
lahf
add
sbb
insl
int3
xchg
mov
lret
and
adc
mov
inc
scas
dec
aad
and
rol
mov
jbe
xchg
xor
and
rcll
jae
loope
cli
int3
mov
dec
imul
insl
jo
pushf
add
or
cmp
test
inc
mov
adc
and
jns
popa
dec
and
ret
cltd
xchg
cmc
jb
lret
xlat
mov
sub
lock
jp
fwait
lock
jecxz
lret
push
jb
mov
lods
cld
mov
xchg
movsl
les
hlt
insl
movsl
lahf
stos
push
sbb
testb
pop
push
mov
sub
icebp
nop
and
push
aas
add
add
jnp
xchg
mov
ds
mov
cld
out
mov
nop
popa
xchg
xchg
adc
fwait
mov
pop
and
mov
cmpsl
into
jbe
pop
sub
mov
pop
into
icebp
ja
lahf
mov
mov
mov
pusha
inc
and
out
test
insl
insb
adc
lock
mov
imul
divl
mov
and
out
outsl
cmp
dec
add
into
cld
insl
cs
jb
sbb
rep
cs
imul
movsb
mov
jmp
add
mov
dec
xchg
mov
imul
xchg
cli
inc
pop
repz
aaa
cmc
xor
adc
and
push
adc
adc
xchg
rolb
or
les
les
test
xlat
loope
pusha
mov
mov
nop
insl
popa
aas
push
add
hlt
out
cmp
inc
xor
lret
xchg
mov
jne
jmp
scas
mov
mov
pushf
jne
adc
int3
mov
lods
mov
shll
andb
inc
dec
ret
das
js
and
adc
loope
pop
inc
sub
mov
sbb
mov
std
mov
test
xchg
sbb
and
jo
cmc
testb
outsb
sub
push
stos
movsl
cmp
lds
xchg
pushf
loope
aad
cmc
out
das
rcl
push
mull
adc
xor
add
cld
pushw
imul
cld
cmp
jb
push
mov
jno
push
sbb
add
call
pop
fimuls
jmp
jnp,pn
lea
pop
leave
jge
jnp
stos
sahf
sub
adc
cmp
stos
hlt
in
cwtl
xor
cmc
gs
out
add
sub
gs
xor
jnp
pop
ja
sub
add
mov
mov
stos
mov
lds
push
mov
rcrb
pusha
xor
loope
repz
push
lds
stos
mov
jl
call
mov
and
push
add
adc
and
push
xchg
test
inc
imul
outsl
jmp
mov
sbb
cmp
ret
sahf
int3
sbb
in
int
lock
in
outsb
cmp
xchg
insb
enter
roll
xor
dec
orb
mov
ja
int3
lahf
jmp
rclb
mov
lcall
jl
xchg
test
test
jecxz
les
ds
dec
out
sub
adc
int3
pop
jge
ret
inc
adc
pusha
mov
jae
or
stc
out
mov
xor
in
pop
pop
mov
mov
fs
loop
or
inc
adc
xchg
xor
lcall
sub
xor
push
lds
mov
out
push
adc
cmp
push
loope
adc
lret
pop
pusha
and
insl
mov
sbb
cltd
jns
xchg
mov
mov
xchg
or
xchg
inc
bound
outsb
xchg
pusha
jmp
dec
dec
sbb
push
test
outsl
sbb
leave
xchg
shrb
inc
xor
cmp
pop
cmpl
stc
xor
test
push
sub
test
add
inc
inc
sbb
mov
pop
mov
popa
xchg
int3
fsubl
and
pop
mov
scas
adc
subb
mov
sub
inc
push
push
or
movsb
xchg
std
out
or
sbb
fildll
sti
inc
test
cld
xor
clc
or
icebp
jns
push
mov
shlb
cmp
cmc
pop
out
xchg
jne
or
in
mov
sub
push
xchg
cmp
daa
jl
sub
xor
fidivrs
in
icebp
lods
pop
push
pop
jmp
in
lret
loopne
mov
add
mov
mov
ss
clc
outsb
xchg
push
mov
fildll
addb
push
sbb
add
jbe
dec
xchg
pop
addr16
int
data16
jno
jecxz
int3
xlat
sub
xlat
shl
mov
cmp
sub
sar
adc
jb,pn
sbb
test
push
cltd
jle
sub
rorb
bound
mov
loopne
push
add
inc
out
sbb
mov
mov
adc
jle
in
sub
mov
jge
pop
hlt
popf
lods
xchg
cwtl
cmp
in
mov
repnz
jecxz
mov
dec
outsl
inc
setno
cmc
add
mov
push
cltd
add
cmpsb
sbb
add
mov
mov
scas
mov
stos
leave
add
and
dec
loop
repnz
mov
cmp
pop
sar
inc
out
xor
mov
movsl
inc
push
out
cmc
push
cmpsl
fsubl
mov
sbb
jmp
loop
mov
push
adc
rcll
stos
daa
inc
loope
push
pop
push
xchg
lret
mov
jg
mov
jp
mov
mov
pop
jb
sbb
fsts
into
aaa
xchg
fnstsw
xchg
jno
in
ret
dec
cmpsb
ret
ja
stos
inc
addr16
hlt
int
int3
inc
aad
lcall
mov
sbb
add
push
and
insl
es
adc
out
or
push
lret
nop
imul
adc
mov
shll
hlt
dec
in
add
pop
in
js
mov
in
adc
negl
xor
dec
out
mov
in
push
aad
push
jo
orb
dec
dec
mov
adc
mov
mov
lcall
pop
xchg
rorb
mov
daa
push
jbe
and
repnz
mov
jle
mov
rorl
lods
lea
cmpsb
rcrb
jl
iret
dec
dec
enter
cmp
pop
test
dec
ljmp
loop
leave
mov
mov
xchg
xchg
jecxz
mov
outsl
and
jnp
sbb
js
fadds
rol
stos
and
dec
adc
pop
push
cld
addr16
idivl
sub
cli
cmp
xor
cmp
adc
add
stos
aaa
in
mov
xchg
and
arpl
xchg
adc
sahf
pusha
or
aad
lea
rol
lds
clc
xchg
or
jae
dec
into
sahf
sbb
push
cmpsl
or
mov
xchg
cli
into
ss
es
cltd
mov
xor
mov
push
push
cmp
ja
push
outsb
repnz
adc
dec
loope
insl
and
lret
and
xor
sub
jp
insb
sub
sbb
push
aas
or
xchg
push
sahf
mov
jp
push
dec
jl
insb
imul
cmp
gs
push
fwait
ljmp
aam
test
popf
mov
fildll
push
into
xchg
out
popa
stos
aaa
or
leave
sub
cmpsl
enter
mov
icebp
mov
fwait
add
mov
int3
jl
xchg
pop
imul
inc
mov
stos
lds
mov
call
mov
adc
jl
adc
fs
mov
jno
sbb
xor
dec
mov
stos
into
stos
mov
jbe
decl
arpl
imul
pop
loop
cmpsb
test
in
pop
jmp
out
outsb
mov
cltd
dec
inc
fcmovnbe
sar
cmc
inc
xor
movsl
and
fadds
sbb
std
jmp
fisubl
sub
pop
cs
out
jno
xorl
stos
cltd
xor
pushl
xchg
outsb
jo
insl
mov
mov
mov
fisubl
out
enter
or
lock
stos
pusha
inc
lea
dec
lea
inc
pop
ficompl
jp
dec
call
xor
push
cwtl
jne
fdivs
cmpsl
inc
insl
mov
cmp
xchg
pop
sub
and
pop
aad
xor
cmp
iret
push
fwait
jge
fildl
pop
repz
jl
adc
ljmp
xor
cmpb
push
jmp
cmp
or
inc
nop
push
in
movsb
push
push
test
adc
xor
jl
xor
add
adc
push
f2xm1
and
mov
pop
cmp
sbb
sub
aam
lea
jnp
inc
lahf
ret
lret
jbe
into
inc
cmp
movb
fiaddl
iret
add
push
pop
loop
test
sub
dec
test
cli
fbld
movsb
xor
out
jb
popa
daa
mov
push
dec
push
sub
popa
cld
shl
inc
shl
dec
dec
aam
or
or
in
sub
cmpsl
sub
mov
cmp
xchg
aas
insl
repz
cmp
pop
es
int3
cltd
dec
jl
cmp
mov
aas
sbb
pop
push
cmc
mov
and
js
mov
jecxz
aaa
cmp
cmp
je
stos
cmp
fiadds
dec
test
mov
inc
mov
pop
adc
jmp
pop
xchg
packuswb
add
incl
loop
loop
dec
pop
xor
xchg
lahf
mov
push
cmp
xchg
jne
addl
or
mov
xor
mov
xchg
ficompl
in
sti
decl
jmp
jle
adc
test
enter
fucomp
jge
mov
add
lahf
and
inc
pop
dec
jae
jne
xchg
add
gs
test
daa
fiadds
mov
shlb
out
lahf
iret
fistpll
inc
pop
pushf
data16
pop
pushf
std
dec
adc
mov
push
push
iret
in
int3
pop
xchg
xlat
cwtl
push
lret
pop
out
out
popa
add
lahf
fs
inc
mov
pop
cwtl
mov
bound
sahf
add
cmp
addr16
cld
rcrb
repnz
xchg
gs
aad
data16
mov
pop
add
hlt
lret
jno
fstpl
inc
push
push
out
out
inc
pop
mov
in
mov
mov
shrl
jns
sub
add
lret
rorb
inc
cs
dec
push
imul
inc
test
test
xchg
pop
outsb
inc
adc
inc
iret
lods
push
aad
imul
leave
gs
dec
or
dec
mov
xor
rorl
lret
cwtl
subl
jecxz
pop
mov
xchg
ud2
sub
frstor
mov
or
movsl
repnz
inc
and
daa
jae
mov
movsb
jbe
mov
sar
inc
fimuls
push
aas
pop
adc
aas
jne
mov
mov
inc
mov
addr16
iret
sbb
stos
fsubl
mov
adc
and
push
stc
inc
sbb
cmp
and
in
mov
fadds
and
or
sahf
jecxz
and
jns
mov
add
push
cmp
mov
in
sub
popf
cmp
mov
and
subb
repnz
xchg
cmp
sbbb
sub
fistpl
sub
cmp
idiv
mov
hlt
fisttpll
add
adc
addr16
jb
cld
test
mov
js
push
sub
push
outsb
inc
mov
mov
jb
lret
mov
int3
cli
repz
and
sbb
in
sbb
shrb
daa
push
dec
sub
or
in
cmp
out
dec
mul
enter
add
lahf
test
inc
push
cld
mov
dec
clc
pop
inc
test
pop
mov
in
fdivrp
ja
dec
sahf
xor
sbb
pop
stos
jo
jno
mov
mov
cltd
add
ror
icebp
ret
fisttpll
add
ret
sbb
dec
rcr
xchg
and
jle
fs
and
cli
adc
stc
pop
or
ffreep
cmp
outsl
aam
push
inc
lock
adc
xor
fwait
inc
out
pop
cmp
jae
or
jae
push
js
mov
daa
mov
imul
push
dec
xor
push
mov
push
fmuls
orb
mov
mov
mov
movsl
jecxz
insl
aad
bound
cmp
fisubrs
mov
jecxz
sub
into
sub
mov
sti
lods
in
insb
insl
mov
aas
dec
addr16
xchg
aaa
das
lret
mov
push
cld
pushf
sub
adc
loop
cmpsb
daa
xchg
jns
loope
jno
incl
iret
or
adc
or
movsb
cmp
add
stc
ja
mov
clc
cmp
movsb
fdivrs
fldt
cmp
or
in
rclb
or
setno
ja
pop
pop
incb
mov
adc
push
mov
scas
add
cs
xor
xor
adc
sbb
xchg
insl
inc
sbb
add
movsl
xchg
mov
jne
pop
xchg
fwait
popa
and
ss
ja
cli
fwait
push
lds
out
mov
sahf
dec
mov
repz
xor
out
xor
out
xchg
sbb
adc
xchg
pop
push
into
lahf
and
nop
cltd
xchg
insb
ret
faddp
push
in
fists
sbb
mov
hlt
mov
adc
mov
xchg
flds
int
sbb
sub
push
sub
fwait
push
sbb
daa
movsb
ret
ja
xchg
mov
push
test
loope
inc
jbe
es
add
es
push
shrl
aaa
add
jb
cli
out
rclb
push
inc
hlt
jns
sbb
icebp
inc
dec
roll
jle
popa
stos
cmp
dec
xchg
and
ror
cli
paddusw
push
test
test
movsb
loopne
xor
imul
out
mov
out
imul
xchg
aas
das
pop
pop
rclb
xor
push
pop
pop
and
mov
jecxz,pt
loop
mov
es
sarl
xor
add
adc
push
movsl
or
or
sbb
jo
aas
push
lds
push
bound
cmpl
push
cmp
fcoms
or
mov
pop
pusha
push
xchg
fwait
adc
out
in
dec
repnz
pop
loopne
jle
sbb
das
mov
jmp
test
iret
or
push
insl
sub
jp
ret
mov
push
sub
stos
imul
mov
faddl
out
ja
fwait
pop
test
pop
repnz
iret
and
push
or
lods
test
sub
sti
adc
add
mov
xor
push
mov
jge
jg
icebp
popf
sarl
mov
push
add
sbb
sar
es
xor
loope
syscall
jp
ja
cmp
gs
test
out
pop
mov
sbb
and
cmpsl
int3
jmp
add
imul
adc
addl
les
push
jns
push
pop
jnp
inc
je
jae
adc
es
aas
fs
xchg
jno
sub
fcomip
iret
stos
push
mov
scas
pop
shlb
lods
insl
scas
ljmp
lock
test
test
aas
jecxz
scas
fmull
aam
inc
lock
mov
cwtl
es
stos
shl
das
pop
dec
xor
in
mov
mov
jge
push
dec
lods
fimull
add
leave
xor
test
les
sbb
out
popf
fdivrl
je
mov
loopne
movsb
mov
lret
ret
adc
or
and
add
arpl
fsubr
movsl
sub
in
mov
sbb
xor
jae
mov
and
fisubrl
mov
in
xor
sub
cs
jne
cmp
inc
sub
adc
lods
test
fcom
mov
xor
push
xor
idiv
mul
sarl
mov
mov
stos
mov
and
mov
stos
into
mov
pop
push
xor
push
add
lock
sti
ds
lret
adc
mov
and
xchg
insl
ret
adc
mov
stc
mov
adc
lahf
mov
ficoms
cmp
mov
lret
xchg
gs
les
dec
inc
adc
jle
sub
push
pusha
popf
cmp
mov
sub
pop
dec
lahf
mov
push
dec
mov
mov
sti
cmp
fdivr
pop
jb
mov
stos
test
push
cmp
outsb
into
push
xchg
inc
jecxz
jbe
imul
mov
imul
dec
pop
add
scas
imul
in
stos
leave
ror
out
or
cmp
imul
xchg
repnz
loope
xchg
bound
repnz
fsubp
sbb
icebp
inc
sub
pop
aas
sub
xchg
mov
aad
je
cmp
adc
mov
clc
xorl
jmp
mov
pop
scas
popf
pop
sub
xchg
pop
stc
push
and
std
push
mov
cmp
out
and
and
jns
aad
xchg
pop
pop
dec
icebp
in
mov
nop
pop
mov
cmp
mov
repnz
cmp
mov
ret
adc
add
insl
andb
ror
subl
dec
xor
scas
iret
out
mov
add
out
out
mov
dec
push
cli
inc
nop
or
sbb
icebp
lods
sub
mov
repnz
inc
cs
add
scas
aam
xchg
jg
and
and
xor
adc
sub
stc
pop
sub
sub
or
mov
xchg
ss
mov
mov
add
mov
scas
cwtl
ljmp
out
cmc
out
push
neg
popf
mov
inc
add
fucomp
stos
leave
ljmp
jns
inc
cltd
xlat
scas
mov
inc
ja
mov
adc
mov
xchg
xchg
je
pop
add
add
in
cmp
sub
xlat
xor
push
sbb
pop
jecxz
jns
popf
xchg
rorb
and
das
xlat
lcall
jg
add
add
cmp
sub
out
loop
ss
ds
jecxz
fldt
or
jle
mulb
out
arpl
push
aaa
xchg
nop
push
ret
mov
or
pop
mov
mov
push
mov
push
lahf
cmpsl
cmp
jne
xchg
negl
int
into
sub
in
in
js
loope
insb
fisttpl
jno
dec
ljmp
mov
cmp
les
stos
sarb
ficoms
sub
lret
popa
fnstenv
xchg
mov
add
insb
dec
fstpl
pop
push
out
sbb
sahf
lcall
pop
lret
sub
mov
popa
mov
jge
pop
repnz
outsb
mov
ret
adc
ss
sub
jge
pop
cmpsl
pusha
cmp
ret
or
imul
mov
test
ret
addr16
inc
xor
sub
xor
pop
jp
xor
inc
aaa
inc
push
mov
xorl
dec
jno
pop
repz
cmpl
pop
dec
dec
xlat
dec
lods
test
mov
push
testb
sti
inc
out
mov
int
call
mov
adc
mov
sub
xlat
fadd
mov
in
pop
daa
push
lods
test
cmp
loopne
movsl
int3
mov
and
mov
fbld
stos
xor
cld
imul
jno
clc
xor
pop
gs
sub
jnp
sub
mov
into
xchg
add
out
mov
pop
inc
loop
mov
add
mov
add
mov
jmp
jl
xchg
movsl
dec
ss
cmpsb
jecxz
mov
mov
jge
test
subl
inc
lret
lcall
xchg
push
pop
aad
jp
sahf
mov
mov
int
ret
jp
mov
mov
sbb
pop
fstpl
in
adc
or
jbe
xor
jbe
xor
or
loope
xchg
mov
in
add
mov
outsl
mov
ljmp
aaa
pushf
test
adc
xor
fucom
ds
aas
dec
jne
aas
pop
mov
sub
and
and
lahf
lds
lret
fistpl
jp
lods
jbe
push
scas
stos
mov
ss
inc
ss
nop
sti
jo
mov
cmp
add
div
movsb
add
ret
mov
loope
test
fisttpll
mov
test
shlb
xchg
lcall
sub
loope
push
iret
and
int
pop
je
mov
sub
cltd
sub
mov
add
cli
cli
iret
xlat
dec
roll
push
dec
inc
idivl
dec
daa
sbb
mov
or
std
push
sub
and
popf
fwait
or
repz
mov
mov
xchg
stc
fidivs
mov
cld
cmpsb
xchg
stos
adc
sbb
and
fcomps
nop
inc
push
add
add
data16
adc
rclb
sti
sub
icebp
jo
jg
xchg
jmp
push
sbb
gs
es
lret
push
inc
testl
cmp
sub
mov
scas
sbb
jns
in
mov
lods
xor
push
std
mov
cmp
cli
pop
orl
sbb
outsb
pop
fs
popa
sahf
xchg
aaa
sahf
pop
int
int3
mov
hlt
popl
xor
inc
dec
lahf
into
mov
adc
js
in
loope
inc
pop
and
in
mov
cli
addl
call
imul
xlat
stos
add
loopne
daa
inc
ret
push
fstl
add
sub
fsubrs
and
or
pushf
push
xchg
mov
add
outsl
out
sahf
sarb
push
ljmp
mov
jns
fisubrl
add
lret
sbb
jbe
daa
lds
das
sub
mov
pop
and
lret
shll
sbb
mov
mov
fcomp
cmpb
and
stc
jl
shl
fcmovnbe
or
dec
adc
xchg
in
cmpsl
fwait
andb
and
jb
sub
call
and
fists
pop
bound
sbb
mov
xor
fptan
leave
cmp
or
add
pop
xorb
push
or
out
sbb
movsb
jns
test
je
stos
jg
or
popa
lods
xor
cmpsl
mov
mov
push
adc
clc
push
fst
jbe
jge
outsl
jle
dec
pop
addr16
sub
xchg
xor
jp
adc
add
mov
lea
mov
and
cmc
mov
xchg
mov
jg
xor
in
fs
jecxz
xchg
imul
mov
cmp
or
adc
push
popa
hlt
push
push
nop
cmp
mov
lods
dec
filds
fisubrs
pop
cmp
pop
jp
ret
push
mov
xor
inc
mov
adc
inc
aas
adc
stos
push
mov
notl
fisubl
cwtl
movsb
addr16
add
push
je
sahf
cmp
icebp
imul
sub
jle
inc
mov
movsb
xchg
ret
shl
inc
cmc
ret
xor
and
sbb
js
adc
fldl
pop
xorb
pop
pop
nop
xchg
sbb
xor
lds
js
mov
jecxz
dec
std
push
cld
mov
push
cmpsl
fidivs
scas
sarb
sub
aaa
and
mov
or
jne
shl
inc
jecxz
mov
scas
adc
arpl
cwtl
popf
sbb
mov
lods
sub
mov
fnstcw
jno
cmc
testb
outsb
sub
mov
notb
notb
lret
push
int
dec
outsl
push
mov
into
fistps
mov
mov
cmc
sbb
xor
jp
sahf
out
ds
insl
test
pop
int
dec
aam
call
mov
pop
imul
xchg
imul
daa
xchg
sar
mov
sub
bound
mov
adc
mov
out
mov
mov
je
test
repz
mov
add
mov
pop
mov
xorb
cmc
std
push
xor
xorl
in
adc
add
xchg
xor
and
lds
push
je
repnz
jbe
out
or
divl
loop
dec
xchg
ja
adc
dec
dec
xor
sbb
xchg
insl
imul
push
xor
and
xor
test
sbb
mov
adc
pop
mov
dec
sbb
and
pop
in
cwtl
popf
leave
cwtl
mov
popa
jae
inc
or
sbb
arpl
outsl
dec
push
add
out
sbb
push
enter
mov
movl
sub
stc
or
jne
loopne
test
iret
xor
and
out
pop
mov
inc
push
out
push
adc
xor
pusha
into
jae
pop
cmp
cltd
xchg
stc
rcrl
mov
lret
sbb
xor
mov
cs
xlat
dec
leave
sbb
and
fsubl
mov
mov
mov
mov
scas
lahf
cmc
pop
xor
leave
and
cmp
bound
rol
xchg
sar
add
xor
cmp
and
xchg
mov
cmp
test
lcall
xchg
loopne
sub
inc
in
xchg
rol
lahf
js
lods
call
push
sub
xor
add
aaa
mov
xor
mov
rcl
cmpsb
icebp
jbe
push
in
xchg
and
xchg
mov
dec
pop
mov
cmpl
scas
or
lret
fidivs
xor
inc
jmp
mov
ds
push
sbb
fstl
mov
dec
mov
mov
fcoml
adc
jp
dec
pop
xor
out
test
leavew
insb
lds
push
stos
sbb
push
jle
imul
sbb
jecxz
sbb
les
jae
xor
ljmp
mov
imul
or
sbb
lahf
or
and
ss
lea
add
push
push
loop
aaa
mov
lret
stos
or
test
fcompl
pushf
scas
in
imul
push
xchg
mov
jne
xchg
arpl
rorb
mov
sti
mov
pushl
test
outsl
test
into
cmpsb
mov
movsb
push
enter
sbb
mov
into
xor
mov
xchg
and
outsb
and
adc
imul
in
imul
cmp
out
in
jle
call
aas
mov
sti
mov
jecxz
inc
repz
xorb
cmc
mov
stc
iret
mov
leave
aam
out
int3
mov
icebp
pop
subb
mov
fstl
out
rorl
xchg
pop
sti
in
cld
or
push
inc
testb
shl
ret
dec
jge
pop
sub
out
dec
inc
lcall
clc
sahf
rclb
cmpl
popf
add
mov
sarb
jmp
xchg
mov
and
sti
xor
into
mov
jmp
cwtl
repnz
and
sbb
insb
in
icebp
popf
or
sbb
testb
int3
jg
lret
imul
adc
sti
imull
in
dec
in
xchg
in
inc
pop
mov
push
mov
or
sti
push
in
gs
das
cmpsl
and
xor
fildll
ds
or
mov
stos
rorb
or
push
loope
lock
xchg
jl
push
sahf
inc
ss
mov
inc
adc
mov
lret
add
pusha
jmp
ret
movsl
ds
and
xor
imul
repz
sbb
sbb
dec
and
insb
xor
das
out
or
push
mov
adc
xchg
and
adc
mov
adc
pop
xchg
out
push
push
push
insl
xchg
sbb
lods
cmp
in
sbbl
rcll
pop
sbb
scas
lods
and
push
and
inc
sub
xchg
jno
icebp
loopne
mov
cltd
cmp
testl
xchg
mov
lret
addr16
cld
lea
cmpsb
stos
mov
xor
or
inc
mov
push
dec
mov
sysexit
adc
xchg
add
inc
lea
add
ret
add
jae
ret
stc
arpl
xchg
iret
mov
pop
or
aaa
loop
test
xor
cmp
sbb
aam
dec
shlb
adc
outsl
jo
or
xchg
mov
inc
leave
xlat
mov
inc
sub
lret
add
std
push
test
sbb
cli
mov
push
das
jb
xlat
lock
nop
je
pop
or
xchg
xor
sbb
popa
sbbl
push
inc
dec
xor
or
push
push
jp
xlat
pop
mov
xor
std
or
je
dec
ror
xchg
pop
in
inc
sahf
dec
mov
dec
xchg
jnp
shrb
inc
mov
add
mov
hlt
and
adc
inc
out
cltd
dec
push
sbb
pop
ficompl
pop
pop
shll
loop
out
push
jo
jmp
cmpsb
add
stos
enter
icebp
notl
fldenv
fidivrs
sub
pop
fsubl
rol
stos
loopne
jge
cwtl
inc
or
out
jecxz
push
arpl
dec
cwtl
or
pop
test
mov
push
imul
add
jg
adc
or
xor
push
mov
fisttpl
mov
mov
repz
jecxz
add
shll
ret
inc
push
aad
inc
test
jp
mov
cmp
dec
cmpb
or
fsubl
inc
out
jecxz
cmp
enter
ret
imull
in
fnstenv
sbb
sbb
push
push
xchg
bound
enter
shll
out
push
sbb
mov
xor
jecxz
jb
add
and
inc
dec
mov
add
sub
sbb
jb
lret
sbb
pop
nop
adc
mov
and
xchg
jl
es
dec
xchg
mov
dec
mov
movq
int
mov
and
std
mov
inc
mov
imul
push
aam
les
push
cmpl
push
pop
int3
dec
pop
cltd
push
push
xor
sub
je
iret
data16
jecxz
and
push
pop
or
mov
sti
jg
push
test
les
or
dec
test
fwait
decl
jb
cmpsb
sbb
mov
lods
sub
in
mov
loopne
jecxz
loope
mov
cmp
loop
stc
outsb
insb
stos
jle
fcoms
lods
jp
sub
jns
push
popa
rcrl
xchg
pop
dec
seta
or
mov
mov
sbb
inc
and
cmp
sub
ja
sub
and
outsb
insl
or
les
sub
jbe
rolb
jmp
shlb
dec
pop
push
xor
in
lods
js
sub
loopne
testb
movsl
lret
mov
xor
ret
pop
cwtl
cmp
ss
lods
mov
inc
or
sub
push
pop
aam
or
xor
pusha
xorb
testl
or
push
imul
or
ds
and
jg
mov
inc
jo
lds
mov
addb
scas
jmp
and
dec
cmp
imul
in
fistpl
add
scas
aad
negl
data16
adc
fwait
dec
xchg
pop
push
repnz
adc
stos
push
push
xchg
dec
scas
pop
pop
shrb
outsl
adc
mov
add
enter
lock
loope
dec
cmp
fwait
push
movsl
xchg
cmpb
stc
xchg
pop
jmp
dec
rcrb
xor
lahf
mov
mov
mov
mov
mov
jg
in
out
daa
cmp
loope
aam
sub
repz
adcb
mov
es
shll
shl
pop
loope
mov
or
cmp
fdivp
cmp
jne
add
sti
leave
sbb
cmc
dec
and
pop
cmpsb
or
sub
xchg
mov
mov
out
movsb
stos
xor
push
in
push
insb
adc
sti
roll
cli
fsubrl
adc
inc
icebp
imul
adc
inc
loope
xchg
adc
dec
push
adc
insl
mov
lods
aad
dec
cs
ret
pop
test
roll
adc
mov
dec
jl
and
scas
pop
out
pusha
mov
insb
fildl
sbb
test
cmpsb
das
ljmp
lea
ficoml
fcomip
or
pop
loope
xchg
pop
gs
add
nop
pop
add
aad
push
xchg
pusha
lahf
movsb
cmp
gs
clc
adc
mov
lods
divb
jp
jo
and
cli
sbb
mov
cmp
outsb
in
loopne
inc
addr16
movb
js
pop
adc
or
mov
pop
repnz
fwait
add
xor
insl
rolb
dec
mov
fisubrs
lods
pop
clc
out
push
xor
outsl
jge
mov
insb
jb
and
aaa
gs
and
adc
sub
push
push
outsb
sbb
pop
subl
js
mov
lret
mov
icebp
fwait
sbb
mov
mov
arpl
jne
mov
mov
xchg
daa
push
or
das
lods
dec
test
pusha
jle
sub
jecxz
mov
and
nop
fwait
inc
mov
outsl
push
jecxz
mov
lcall
orb
add
call
pop
int
pop
push
push
mov
jmp
dec
cmp
orl
nop
rcr
stos
inc
shlb
lds
outsl
cld
ret
into
pop
testb
or
push
stos
iret
shll
clc
in
aad
or
and
mov
or
sub
mov
add
scas
push
push
les
push
mov
jae
push
push
stc
push
xlat
pop
lds
mov
clc
xchg
cltd
call
ror
mov
loope
pop
mov
bound
lods
cwtl
scas
mov
addl
pop
adc
push
dec
les
push
inc
call
scas
mov
mov
mov
fstps
out
mov
sub
les
out
aad
lret
imul
in
inc
aaa
je
mov
int3
pop
jecxz
pop
iret
in
test
lods
leave
dec
pop
jg
mov
add
dec
mov
das
stc
popa
and
push
pop
dec
aas
fmull
dec
xchg
adc
into
ds
push
jnp
jp
in
mov
mov
push
lds
test
mov
jns
adcb
test
ret
inc
and
popa
arpl
sub
xchg
lods
mov
je
pop
mov
dec
dec
fstpt
in
dec
and
imul
es
jg
data16
mov
enter
icebp
pop
popf
leave
adc
out
jnp
cmp
pop
inc
sub
faddl
add
inc
add
dec
cmp
setae
cltd
movsl
clc
fistl
div
add
daa
add
decb
syscall
adc
mov
sbb
das
cli
lods
push
iret
ret
jge
and
pushf
sbb
mov
aam
fistpl
xchg
mov
or
jno
test
shl
bound
push
popa
push
idivb
jp
fmull
mov
xchg
popa
fwait
inc
ret
cwtl
es
lds
enter
xchg
inc
jae
js
add
sub
sub
clc
stc
scas
sub
cmp
pusha
ret
inc
in
xchg
pop
xchg
nop
inc
pop
jmp
cmc
xchg
fisttps
inc
jbe
sbb
arpl
outsb
xchg
lret
addr16
sub
sbb
lods
xor
sub
push
das
pop
push
ja
ja
popa
std
loop
sbb
jp
push
lret
imul
loopne
inc
stos
jge
pop
mov
mov
or
int3
or
fsts
sar
mov
dec
in
inc
add
and
mov
stos
loopne
cmc
xor
jle
adc
add
dec
loopne
loop
movsl
adc
lcall
push
push
mov
jg
aam
jp
mov
jp
fwait
add
out
add
jno
ja
pop
in
push
negl
pop
dec
add
push
dec
sbb
sub
or
inc
jne,pn
and
dec
mov
jnp
lods
hlt
lods
ds
pop
push
jmp
aaa
js
fisubrs
in
jns
xchg
out
cmpsb
mov
fmuls
or
adc
outsl
sub
hlt
cwtl
xor
ljmp
int
lods
jns
mov
ftst
pop
mov
ret
leave
dec
insb
repz
and
mov
data16
not
add
fst
fimull
test
mov
pushf
inc
push
inc
or
and
jmp
inc
test
fmull
pop
mov
push
fwait
stos
add
sub
in
scas
push
les
mov
push
and
test
cmpsl
dec
add
jae
mov
dec
xchg
cmp
or
push
mov
dec
mov
mov
push
fs
movsl
lds
andl
mov
cmp
imul
jg
or
out
movq
sbb
xlat
xlat
xor
add
jne
push
jmp
pop
cmc
mov
loopne
inc
rorb
jmp
add
add
mov
stos
adc
mov
sbb
test
ret
add
pop
ss
call
xchg
sbb
cmp
roll
orb
or
cmp
xchg
mov
es
shl
shll
mov
dec
das
stos
sbb
xchg
jno
imul
and
test
jge
pop
jmp
std
inc
xlat
stc
mov
aaa
cld
mov
cmc
xchg
cmc
subb
test
sub
mov
rclb
pop
fmul
jecxz
dec
stos
mov
andl
pushf
xor
sub
in
imul
mov
jo
scas
xchg
jns
cmc
std
in
ret
or
dec
dec
popa
sbb
xchg
daa
stos
es
shl
mov
add
js
pusha
mov
or
nop
aad
mov
nop
mov
jo
cmpsb
pushf
aam
adc
inc
push
out
xchg
inc
sarb
stos
fstl
ljmp
add
lcall
pop
divb
out
xchg
sub
in
out
popf
push
hlt
jle
rolb
adc
xlat
cmp
mov
jg
fbstp
xchg
mov
lods
hlt
lret
inc
sbb
movsb
or
fistpll
mov
bound
repz
in
inc
dec
cmc
adc
sub
xorl
pandn
sbb
lret
jae
pop
pusha
out
mov
xor
mov
mov
push
cltd
push
mov
icebp
pop
ficoml
xor
repz
js
into
flds
mov
aaa
ja
movsb
jne
je
cmc
mov
add
cmp
xchg
cs
and
pusha
sub
dec
adc
icebp
pop
shr
ret
scas
jp
xchg
jnp
loopne
jg
and
sub
int3
repnz
shrb
cmp
and
mov
push
push
cmpsb
adc
iret
jno
imul
aam
sub
lea
mov
mov
and
hlt
jp
pop
imul
outsl
mov
xor
out
adc
mov
mov
cwtl
push
sub
jno
inc
dec
imul
popa
in
adc
jmp
mov
cmp
push
in
pusha
stc
mov
and
lods
push
dec
fsubrs
and
divb
mov
loope
or
stc
rclb
mov
std
adc
sub
mov
xchg
stos
xchg
mov
pop
into
cmp
or
sbb
rcrl
pop
inc
push
mov
outsl
add
xchg
in
les
dec
cmp
js
int
push
test
inc
pushf
mov
cltd
outsl
xchg
cmp
out
fistps
clc
cmp
mov
cmpsl
and
jle
popa
adc
cmp
je
mov
std
sub
xor
arpl
ja
cmp
bswap
xchg
and
xchg
sub
in
test
xchg
pop
lret
sub
fs
mov
or
fistl
jp
push
subb
cmp
jl
mov
adc
sbb
pop
pop
push
mov
stos
xor
imul
lea
mov
cmc
lret
pop
cmp
test
add
push
inc
mov
jmp
test
movsb
add
pop
fs
xchg
pop
push
das
cmpsb
or
or
jbe
inc
xchg
lret
xor
push
xchg
push
hlt
jne
scas
data16
mov
pop
test
dec
lds
sub
sbb
lret
or
mov
sub
mov
pop
mov
mov
les
sbb
lahf
test
pushf
jno
or
mov
inc
scas
movsl
pop
and
nop
fisubs
aad
xchg
shll
sarb
sub
xor
dec
faddp
inc
push
sub
cmp
leave
stos
xchg
jmp
dec
mov
mov
cmp
push
sub
ret
into
clc
aam
cmc
stos
mov
push
iret
push
addr16
sti
pop
data16
fbstp
icebp
xchg
sub
mov
and
fnstcw
std
adcl
clc
mov
jp
clc
cmpl
dec
leave
add
outsl
test
in
imul
mov
xor
jno
mov
mov
pop
adc
dec
ljmp
jae
imul
cmp
dec
add
sub
into
cwtl
dec
and
jns
hlt
in
dec
xchg
dec
inc
mov
packuswb
mov
mov
call
xor
out
jmp
cwtl
popf
je
movsb
testl
pop
sub
pop
add
mov
add
adc
inc
push
sahf
cmp
outsb
fiaddl
leave
daa
aaa
mov
stos
push
iret
shlb
cmp
aad
and
cmp
add
pop
sbb
cmp
icebp
and
insb
pop
inc
cmpsl
inc
jg
xlat
cli
push
imul
sub
mov
inc
jg
push
aam
pop
fwait
sbb
sbb
fistpll
sar
pop
rorb
testb
mov
mov
xchg
test
jmp
push
out
jmp
add
lods
lret
dec
ja
inc
sbb
cmpsb
les
data16
sub
das
jl
cmpb
stos
popf
cmp
aam
sub
sbb
lret
bound
mov
imul
inc
les
addr16
cmp
out
mov
hlt
add
ja
xor
das
scas
xlat
mov
scas
lock
adc
neg
cld
nop
jl
push
mov
aaa
mov
mov
faddl
sti
mov
push
sub
inc
test
jne
ja
aas
sub
das
cmp
les
por
and
repnz
or
cmp
fsubs
es
addr16
in
cmp
dec
fsts
enter
les
iret
lods
jl
fldenv
inc
dec
inc
aad
or
xor
jge
lcall
push
pop
movsb
mov
mov
scas
ss
sbb
orl
mov
inc
push
inc
ror
jbe
cmp
inc
inc
mov
mov
popf
jbe
pop
pop
push
popf
int3
adc
fnsave
jle
inc
inc
jo
out
xor
test
push
call
mov
jg
mov
and
or
out
sbbl
lea
xor
or
mov
sbb
int
frstor
or
inc
xchg
mov
in
jo
in
cmc
shrb
push
and
pop
jno
pop
fidivrs
mov
pushw
movsl
roll
sbb
inc
push
add
cmp
inc
sub
sub
call
or
stc
icebp
arpl
insb
xor
out
or
mov
pusha
pop
out
adc
mov
cmc
adcl
lods
add
out
sarl
stc
inc
cltd
out
mov
add
divl
xlat
lods
in
xchg
je
jg
fcomps
fwait
mov
dec
lahf
neg
cmp
or
push
push
mov
leave
stos
pop
data16
mov
cmpsb
lret
nop
dec
ret
pop
jl
cmp
inc
push
dec
xor
dec
or
sbb
and
sbb
sub
fldcw
insb
daa
xor
out
add
pusha
das
mov
adc
in
int3
mov
xchg
ja
xchg
cltd
ret
mov
push
cmpsl
fstpt
xor
lods
pop
out
clc
imul
outsb
inc
lret
xor
and
hlt
inc
jnp
adc
or
xchg
shll
leave
lods
insl
fisubl
pop
adc
push
adc
rol
incb
jecxz
or
dec
mov
rcrb
sub
sahf
mov
xchg
lods
pop
sbb
cmp
inc
add
fnsave
iret
cmpsb
sbb
cmp
jne
mov
mov
imul
clc
lods
and
aas
dec
jmp
and
lock
movsb
imul
repz
test
and
or
cltd
pop
mov
push
and
jno
xor
lret
jnp
cmpsb
fwait
lret
lahf
sbb
movsb
xchg
fwait
gs
sbb
inc
lods
cmp
pop
inc
mov
pop
bound
lea
sbb
mov
sbb
lods
xor
gs
aas
cs
push
cmpsl
pop
loope
adc
sbb
cvtps2pi
mov
mov
loopne
je
jns
loopne
sar
dec
addr16
dec
lahf
ja
fsubs
rorl
test
dec
leave
sub
cwtl
fidivs
popa
aaa
ss
negb
cwtl
int
mov
pop
push
dec
cli
clc
fisttpl
aam
les
sahf
sahf
mov
aas
sub
lea
pop
dec
sti
rol
pusha
dec
mov
inc
push
sbb
xor
add
pop
sub
fstl
pusha
shll
xor
nop
ja
stc
and
cmp
insl
out
nop
mov
rcl
dec
mov
inc
cld
pop
orl
dec
leave
mov
std
stos
sahf
mov
fs
mov
sbb
rorl
xchg
sbb
imulb
pop
push
and
test
je
sahf
pop
add
out
fs
out
and
fsubr
mov
cwtl
idivl
fcompl
popa
mov
inc
xor
inc
aam
or
cmp
std
xor
in
dec
jnp
jge
lds
out
loopne
mov
xchg
popa
fimull
or
ret
bound
cmp
mov
pop
shll
cmpsb
nop
xchg
outsb
adc
ret
dec
add
inc
stc
aam
in
inc
mov
cltd
add
mov
cmc
aad
mov
rcrb
dec
jnp
push
jmp
sub
dec
cmp
movsb
icebp
push
cmp
pop
ja
sub
mov
in
cmp
je
or
jg
mov
repz
xor
ret
cmp
rcr
mov
pop
cmp
sub
add
imul
mov
rolb
lock
icebp
sbb
mov
mov
shlb
pop
dec
and
mov
popf
mov
push
or
cld
mov
loop
scas
inc
stos
scas
jo
adc
cmp
add
xlat
daa
cmp
fimuls
sub
push
sbb
jne
std
dec
fisttps
sub
insb
jmp
sub
mov
dec
mov
dec
pop
outsb
movsl
clc
cld
in
inc
fisubs
movsb
or
insl
popf
hlt
sbb
pushf
shrl
mov
cld
pop
cltd
pop
jg
into
outsb
inc
into
into
mov
xlat
xor
iret
jno
push
mov
addb
lret
pop
xchg
and
jg
roll
lret
cld
and
out
stos
and
dec
outsb
out
cwtl
sbb
xchg
rep
out
add
mov
adc
jecxz
or
ss
push
rolb
std
cmc
xor
pop
adc
lret
xlat
aam
xor
outsl
and
outsb
enter
leave
fldl
adc
ret
mov
fxtract
adc
stos
leave
cmp
vmread
insl
leave
adcb
jne
jg
pusha
or
push
int3
insb
cmp
pusha
fidivrl
jg
mov
fistps
lods
ffreep
inc
cmp
xlat
mov
rcr
stc
add
pop
jbe
jg
cltd
jb
loope
jae
mov
iret
jae
jp
jmp
mov
lods
xchg
push
movsb
ja
mov
mov
pushf
push
push
pop
test
fcom
xchg
mov
adc
addr16
add
inc
sub
int3
mov
icebp
push
cld
dec
pop
push
in
in
xor
mov
cmovle
mov
jne
test
out
testl
or
pop
subl
daa
popl
xor
adc
cmp
int3
fisubs
ret
cwtl
test
jl
subb
lds
scas
or
stos
add
test
and
xor
push
out
mov
out
aam
movsl
lds
and
mov
inc
sti
scas
imul
mov
mov
mov
jl
sbb
cwtl
add
jno
mov
bound
push
xor
arpl
outsb
inc
shll
fs
and
repz
and
nop
add
in
fisubrs
in
pop
push
pop
pop
pop
loope
ss
xor
enter
psllw
xchg
cmp
or
push
xor
push
stos
not
push
popa
je
stos
mov
sbb
sub
int
popa
dec
mov
gs
cmp
push
mov
mov
dec
sub
ljmp
test
sbb
in
ret
xor
push
xor
cmp
test
or
jp
mov
jge
or
mov
mov
ja
push
sub
sbb
out
adc
cmp
insb
test
dec
hlt
push
insb
mov
aad
push
cmp
mov
mov
testl
xchg
mov
leave
aam
jecxz
push
outsl
mov
jae
repz
xchg
jg
loope
cmp
bound
sbb
xor
imull
add
adc
daa
lods
enter
mov
insl
out
fsubl
mov
jmp
test
add
in
fwait
inc
test
leave
cmp
out
movsb
dec
fs
fistpll
jne
and
repnz
mov
sbb
cmpsl
fisttpll
enter
fisttpll
scas
fcmovne
sbb
jmp
mov
mov
out
in
fwait
mov
add
and
popf
mov
sti
push
stos
cmp
mov
mov
fs
cmc
jg
xlat
mov
xor
dec
pop
or
jbe
loope
dec
dec
aad
or
bound
or
out
fwait
arpl
dec
mov
lods
push
and
pop
pop
jnp
push
jl
mov
or
scas
mov
adc
xchg
push
pop
shlb
mov
xor
cmc
aam
rorb
push
inc
mov
push
orl
pop
aam
mov
out
sub
popf
les
lea
ljmp
fcoml
jae
fstpl
or
push
nop
stc
or
inc
mov
push
or
mov
inc
jp
les
subl
or
jge
mov
sarb
and
pop
inc
and
out
out
add
repz
push
je
or
lock
iret
jl
repz
sbb
mov
xor
loop
decb
sbb
push
test
push
add
add
pop
pusha
sub
xorl
sbbl
and
fidivs
fdivs
setbe
addr16
jecxz
fimull
outsb
call
or
sbb
lds
shr
mov
ja
jl
or
pop
cld
das
lahf
cmpsl
xchg
shl
cmp
push
xlat
pushf
dec
fsubl
and
in
dec
cmp
pop
ret
ss
hlt
push
xchg
push
pop
push
gs
shrb
cltd
or
xorb
adc
rclb
fdiv
inc
stos
xor
lret
fdiv
push
inc
add
jbe
cmc
test
pop
in
addr16
mov
icebp
repnz
and
outsl
pop
cmp
mov
iret
nop
add
jne
fcmovb
pop
cwtl
xchg
pop
scas
add
or
sarl
aad
mov
pop
std
cltd
xchg
das
sub
shlb
cmp
mov
fs
stos
mov
mov
cmc
mov
push
inc
lcall
outsb
sbb
int3
cld
loope
loopne
fisubrs
clc
pop
js
in
pop
shl
fsubp
sub
das
test
pop
or
and
popa
out
xor
mov
pop
xchg
mov
stos
lock
cmp
ds
test
sarb
inc
pop
aas
loope
or
sbb
sbbb
push
jl
pop
pusha
sub
or
jne
pop
scas
ds
and
pop
jno
xchg
xor
ljmp
pop
rcll
bound
loope
test
mov
jg
mov
insb
and
fidivl
dec
inc
push
add
fildl
jne
repz
je
orb
xor
loop
cli
cmp
inc
pushf
pop
mov
inc
sbb
mov
movsb
int3
es
cmp
rorl
int3
push
xor
sub
mov
xchg
cld
sahf
bt
lahf
xchg
push
movsb
cltd
xchg
push
push
push
pop
mov
aad
sbb
jg
icebp
adc
stos
cmp
pusha
inc
int3
scas
cld
cmc
xchg
lds
add
or
dec
repz
scas
jp
cmp
sti
add
out
dec
pusha
xor
xor
bound
popl
sbb
je
movsb
hlt
pushf
mov
pop
movsb
cs
mov
push
les
ss
xchg
jecxz
push
xchg
gs
iret
insb
adc
inc
aad
jns
cmp
mov
loope
movsl
mov
sbb
mov
loop
xchg
push
xlat
mov
out
lds
adc
xor
dec
mov
push
dec
push
or
mov
mov
lcall
jbe
les
dec
inc
shrb
movsl
lret
clc
cltd
xor
scas
jl
xchg
rep
add
and
enter
mov
push
dec
or
dec
dec
repz
in
into
rcl
xor
roll
ds
subb
push
mov
cs
es
repnz
cmpsb
mov
dec
lock
lods
mov
mov
ret
and
icebp
lock
pop
pop
pop
fcomps
movsl
call
xorb
or
add
ret
aam
xor
loopne
mov
outsl
sbb
mov
cwtl
cmp
lods
or
add
fnclex
lea
dec
and
sbb
out
pusha
and
negb
fdivrl
imul
sbb
fnstsw
pusha
dec
fwait
inc
arpl
cld
xor
pop
out
sbb
add
fsubrl
cli
sbb
fnstenv
jmp
inc
mov
loopne
test
sub
and
std
into
add
push
loopne
sbb
adc
fstps
inc
insl
jno
cmp
fs
in
xchg
bound
aas
ficompl
ret
mov
mov
or
mov
aaa
mov
pop
add
sub
out
test
int
rcrb
sub
jbe
sub
jge
cmp
stos
adc
aaa
pop
ret
aad
push
adc
ds
stos
push
in
xor
lock
sti
std
pop
push
push
inc
int
mov
decl
mulb
xlat
xor
mov
out
jmp
sub
jne
lcall
jbe
push
xchg
cmp
out
repz
rcrl
xchg
pop
lods
jle
mov
ret
jge
mov
sbb
push
popa
jbe
xor
cmpsb
xchg
das
or
pop
and
xchg
ja
lret
mov
les
dec
xchg
xchg
daa
inc
xchg
xor
inc
and
iret
cmp
sbb
pushf
mov
pusha
adc
out
push
xchg
shrb
sbb
je
pusha
shll
sbb
arpl
cmp
and
sub
or
dec
sbb
fstps
inc
dec
cmpl
into
sub
mov
aad
cmp
or
dec
leave
pop
add
cmp
rolb
clc
push
xor
iret
in
insb
insb
iret
arpl
mov
cmovs
push
mov
sub
add
movsb
shlb
and
dec
cld
rcll
lret
jp
addr16
push
leave
fnstsw
icebp
es
pusha
lcall
mov
mov
dec
arpl
xor
and
sub
xchg
aam
shrb
lds
push
and
ror
sahf
jnp
mov
sbb
or
sub
fiadds
aad
lahf
push
xchg
lds
xorb
arpl
bound
loopne
xor
mov
nop
push
push
xchg
fs
push
lret
add
adc
cltd
adc
pop
jge
shlb
cmp
cmp
mov
mov
pop
mov
test
mov
sub
add
incb
mov
repz
pop
pop
add
jmp
xchg
mov
cmpsl
cmpsb
xchg
aad
flds
cmc
rcl
sbb
and
out
enter
out
ljmp
add
inc
mov
sbb
xor
mov
and
dec
jbe
lcall
fldt
ds
push
and
sub
push
cmp
je
cmp
cld
mov
stos
adc
cmpsb
insl
xchg
mov
push
inc
pop
vmovsldup
test
jecxz
les
popf
mov
sti
or
unpckhps
jp
ljmp
dec
insl
js
and
or
sub
mov
repz
add
loop
jg
leave
in
pop
xor
xor
stos
pushf
sbb
mov
xchg
mov
mov
push
mov
jg
test
dec
daa
aas
xchg
xorl
jl
fldcw
clc
sub
fdiv
jp
jne
pushf
sti
rorl
outsb
pop
inc
lret
adc
xchg
and
sbb
aaa
enter
sbb
xchg
push
sub
cltd
fsubrs
lea
repnz
inc
and
sub
subb
test
lcall
and
rcrb
jp
xor
add
notl
lods
lcall
in
insl
xchg
pop
in
cmpb
xor
in
nop
mov
loopne
lock
adc
lods
ljmp
jle
mov
add
addr16
orb
out
pop
mov
ret
scas
sbb
idivb
jns
ljmp
add
leave
xchg
and
add
hlt
and
imul
dec
cwtl
push
lods
or
ljmp
push
movsb
jecxz
sub
jecxz
bound
dec
xor
pop
ud0
jb
xor
arpl
arpl
sbb
push
push
mov
jno
mov
iret
gs
cmp
and
pop
jb
push
xchg
xor
loopne
in
adc
sbb
ret
xor
mov
fmul
adc
ljmp
mov
push
mov
push
push
inc
loope
push
nop
in
lods
dec
pop
sti
mov
outsb
imul
cmp
pop
jne
sti
push
push
cltd
out
leave
pop
xlat
adc
push
push
mov
push
or
ret
movsl
nop
test
or
out
push
test
mov
jo
or
cli
in
xor
fdivrl
inc
mov
push
call
xchg
xchg
dec
mov
push
aad
inc
test
outsl
jle
mov
cmp
int3
adc
mov
xor
repnz
pop
push
mov
jle
xor
ss
stos
test
out
arpl
cmc
lret
aam
repnz
subb
movsb
sub
aam
repnz
sbb
pop
mov
ljmp
sbbb
sub
sub
add
js
lret
nop
loopne
sbb
adc
in
jecxz
insl
xor
push
cmp
push
push
inc
mov
in
insb
fiaddl
hlt
jl
testl
adc
addb
fcoml
repnz
push
jmp
aam
int
and
mov
mov
adc
mov
mov
es
cmp
call
and
cli
das
pop
xchg
mov
sub
insl
push
xorb
cmp
mov
cwtl
lock
cmp
jmp
add
adc
rcr
lds
add
fdivr
inc
repz
and
mov
mov
shlb
pop
sarb
cltd
lcall
test
mov
push
xlat
sub
clc
rclb
popa
movsl
xchg
mov
or
push
or
cwtd
inc
push
and
mov
das
nop
flds
cwtl
and
rcll
inc
bound
lret
mov
stos
loop
xor
scas
mov
rclb
aam
lea
imul
pop
outsb
push
push
mov
fisubrl
add
xchg
inc
mov
or
xor
push
cmp
adc
jle
into
sub
xchg
mov
xchg
insb
int
jmp
push
ss
cmc
xchg
test
add
xor
sub
xor
xchg
add
imul
mov
jns
fwait
shll
rclb
dec
add
lds
int3
in
mov
mov
or
fcmovb
xchg
movb
leave
inc
lods
cmpl
add
sub
and
hlt
mov
test
stos
int3
rcrl
sbb
stc
jecxz
shrl
je
jnp
movsl
lret
sti
adc
xlat
cwtl
out
aaa
cmp
add
imul
jge
loop
lds
ds
and
mov
push
sbb
mov
pop
insb
ret
test
in
or
fadds
jge
adcl
pushf
into
test
ret
sbb
add
and
fucom
out
or
jg
aaa
test
dec
inc
cmp
stos
mov
ficoms
xor
add
push
pop
dec
mov
mov
shr
lea
sbb
mov
inc
daa
imul
xchg
movsl
daa
sbb
dec
nop
cmp
xchg
mov
ss
inc
mov
jb
fwait
xchg
mov
roll
mov
idivl
jge
fldt
cltd
xor
stc
fwait
lret
daa
jno
lea
push
and
aas
dec
or
jp
cmpsb
repz
test
xchg
sbb
outsl
scas
insl
ljmp
push
popf
bound
repz
or
dec
sub
mov
and
dec
ret
jp
rcl
fs
lcall
pushf
push
mov
aaa
sub
ficompl
ret
ja
mov
iret
in
ds
mov
dec
push
and
xor
lods
cmp
lods
nop
es
rclb
lods
xchg
in
jno
fistps
jne
sbb
cwtl
jnp
cmp
mov
sub
add
lret
xor
mov
fildll
cmpl
sbb
xor
sahf
stos
cli
mov
dec
fnstenv
xchg
mov
sbb
dec
dec
dec
adc
xchg
mov
and
sub
mov
and
jle
jmp
insb
mov
and
add
or
dec
repnz
stos
pushl
xor
xor
cmpsl
cmp
push
out
imul
fdivr
ja
add
mov
mov
push
bound
jnp
pop
push
aad
shr
lret
jle
inc
push
cld
mov
cmp
inc
ja
ja
rcl
dec
push
jbe
pop
xchg
ficoml
int3
mov
jp
pop
jmp
push
test
test
rcr
ds
pushf
jo
inc
jo
rol
inc
and
sub
mov
bound
cs
in
iret
insl
xchg
mov
jmp
data16
test
ficompl
jbe
push
and
gs
adcb
mov
cmc
in
mov
cmp
mov
iret
enter
in
das
out
pusha
cmpsl
lcall
jmp
iret
adc
sub
pop
loope
pop
bound
inc
hlt
out
lcall
mov
ret
rclb
lahf
cli
in
lods
mov
jb
les
in
or
aaa
ja
adcl
dec
sbb
rol
sarl
add
addr16
mov
jle
sbb
iret
std
outsl
iret
mov
fcmovbe
je
push
dec
jo
daa
push
into
mov
shlb
pop
mov
and
js
ja
loop
test
adc
mov
cmpsl
pop
fildl
scas
pop
dec
pop
adc
pop
inc
jae
jo
cmpsl
sub
je
cmp
das
test
rcl
nop
adc
sahf
sbb
inc
aaa
or
push
scas
fincstp
mov
mov
jl
sub
lock
out
add
movsl
lret
push
stos
or
push
sbb
pop
sbb
lock
call
mov
and
stc
inc
sahf
cwtl
inc
in
add
shll
push
or
les
jl
cmpsb
lds
xor
xor
shrl
adc
icebp
adc
adc
insb
push
push
cld
and
bound
inc
xor
jno
dec
fnstenv
xor
and
cwtl
imul
lea
or
xchg
xor
or
loope
cmp
push
or
cmp
scas
popf
lret
xor
loop
in
stc
push
std
rorl
pop
push
cmp
shll
sti
adc
adc
ror
cld
call
pop
or
daa
mov
lahf
push
xorb
xor
data16
push
lret
dec
mov
lock
pusha
xor
dec
mov
sub
cli
outsl
sahf
jge
test
decb
sub
sbb
insb
add
jmp
mov
nop
rorb
popl
xchg
popa
adc
sahf
daa
mov
push
push
into
outsl
xchg
or
lret
adc
test
faddl
mov
add
inc
mov
rorb
call
incl
mov
mov
cmp
add
jno
mov
fdivl
repz
push
jae
mov
or
jp
mov
cli
in
bound
in
mov
jge
mov
xchg
push
xlat
jge
lds
or
mov
js
adc
mov
ss
std
and
inc
jbe
cmpsb
add
adc
mov
jnp
dec
lock
daa
dec
daa
xchg
out
out
nop
mov
movsb
insb
pop
mov
int
scas
lods
ficoms
sub
jle
icebp
xor
outsl
ds
mov
sbb
ja
cmp
in
cmpsb
int
dec
adc
paddusb
int
repz
fnstsw
inc
scas
lods
mov
xchg
add
add
lods
lock
shr
adc
sbb
mov
cmp
sub
pusha
and
and
fsubr
add
test
cmpsl
mov
push
nop
pop
adc
cld
lock
fwait
xorl
push
lahf
repnz
push
and
lock
ret
and
fmuls
lret
das
pop
dec
mov
jb
int3
dec
push
push
subl
inc
or
sbb
push
inc
cwtl
pop
mov
sub
icebp
fldenv
adc
jp
mov
mov
je
popa
hlt
jge
sbbl
jl
push
cmp
lods
xchg
mov
mov
xor
mov
adc
mov
mov
jb
mov
push
cmpsl
les
sahf
cmp
popa
push
xor
es
adc
jns
jl
mov
add
mov
in
pop
lods
xchg
idivb
test
test
in
sub
jbe
jg
aas
out
loopne
addr16
sub
subb
inc
cmp
fmul
jbe
in
sub
mov
pop
call
inc
fsubl
or
mov
xor
movsb
inc
lock
sarl
je
and
stc
pop
pop
and
xor
out
inc
stos
stc
aaa
les
pop
xchg
mov
jge
arpl
test
jge
sub
in
shr
and
dec
inc
push
cmp
jb
fwait
pop
jb
cmpsb
mov
cmp
mov
or
lret
inc
mov
inc
mov
xor
data16
pop
mov
cmc
jo
push
xchg
fcompl
mov
inc
push
xchg
loop
in
mov
sub
lret
out
scas
cmpsb
mov
sub
test
push
push
or
sbb
xchg
add
pop
mov
xchg
mov
inc
or
inc
stos
das
xchg
pop
cld
loopne
lods
pop
push
push
test
sti
push
push
cmp
xlat
mov
out
sbb
sbb
loopne
sub
mov
ss
into
add
mov
in
dec
pop
popa
mov
and
pop
push
incb
push
jp
adc
mov
jns
fbld
inc
push
push
ja
scas
push
orl
or
and
push
jl
fmuls
sbb
pusha
into
je
mov
mov
mov
push
lret
hlt
shl
sbb
sub
sbb
out
subl
lret
shrb
aaa
cmpsb
loope
jnp
fs
mov
lahf
cld
or
sub
aam
cs
push
and
adcb
xchg
movsb
sbb
pushf
test
rolb
jb
mov
push
cmp
fnsave
dec
fiaddl
pop
inc
cmp
cmp
into
mov
jo
dec
cli
dec
imul
cltd
outsl
out
pop
adc
rcrl
fistpll
repz
in
jno
lds
into
test
mov
fdivl
jle
jno
xchg
or
push
mov
mov
ja
sbb
push
jo
js
or
sbb
jb
popf
add
popa
jecxz
or
andb
scas
sbb
cmp
idivl
push
add
jnp
jnp
mov
mov
mov
add
pop
std
stc
lods
aam
sbb
jecxz
mov
xchg
insb
in
jl
sub
addr16
adc
xor
pop
lret
push
push
insl
gs
lret
stc
and
xor
jns
int3
fstpl
mov
pop
jp
adc
or
test
jno
stos
push
ficomps
sub
xor
test
stos
push
fcoms
xchg
xor
pop
outsl
xchg
mov
sub
push
movsbl
aas
ja
loop
stos
jo
in
add
or
data16
mov
jmp
jmp
sub
push
imul
pop
dec
mov
pop
pop
cltd
je
mov
insb
ss
into
cmp
mov
pusha
mov
or
pop
fdiv
and
sti
push
xchg
push
xchg
lret
dec
lods
pop
mov
roll
sarb
pop
das
fwait
mov
stc
sbb
pop
adc
loop,pn
sub
and
sub
sarl
mov
cmpsb
scas
dec
retw
adc
push
and
test
lock
xchg
test
dec
xlat
inc
xor
inc
cmpsb
inc
sar
xchg
lret
int3
repnz
sub
adc
pop
lods
fcoml
pop
mov
lret
test
ss
mov
cmp
adc
arpl
movsl
stos
mov
sahf
stc
fcoms
sti
dec
mov
xchg
in
fs
pop
sti
test
cmp
gs
imulb
xor
packuswb
cwtl
gs
jno
nop
mov
mov
ljmp
cmc
xchg
dec
adc
pop
mov
into
pusha
push
inc
test
cvtps2pi
mov
or
cmpsb
or
inc
jne
addr16
push
jg
shrb
and
dec
aam
lds
mov
jb
or
push
xchg
mov
mov
sub
pop
mulb
and
orl
roll
push
inc
mov
ljmp
jae
in
in
fwait
gs
mov
inc
add
jl
lahf
mov
jnp
out
sbb
cmp
rcll
push
mov
sub
std
fwait
pop
push
arpl
cmpsb
inc
adc
mov
movsl
adc
pop
test
cmp
dec
cmp
and
in
adc
and
rorl
rolb
scas
mov
mov
mov
arpl
into
mov
adc
cs
ret
xchg
sub
push
lcall
mov
dec
leave
sbb
insl
lods
lahf
sub
add
and
inc
xor
hlt
adc
sub
in
lret
lods
pop
cmpsl
sub
ljmp
icebp
shlb
loope
jg
je
lahf
mov
lea
cmpsb
fs
ret
popa
mov
dec
test
sub
adc
ljmp
xchg
adc
cli
push
jmp
ret
fs
inc
or
test
pop
ljmp
roll
in
cmpsl
les
ja
adc
dec
add
lock
popa
int
or
jb
out
fwait
mov
test
decl
testb
mov
jo
inc
ds
leave
mov
jmp
mov
mov
inc
or
mov
popa
sbb
cs
cmp
fdivr
mov
jge
aas
adc
jmp
mov
or
push
fdivl
dec
jns
pop
pop
ja
lahf
jle
lds
adcl
ffreep
jae
or
nop
jge
ret
pop
into
subb
in
test
scas
push
ud2
enter
adc
mov
push
lahf
cltd
sub
kandb
test
mov
sbb
mov
popf
addr16
bound
push
mov
insb
sbb
jnp
xor
xorb
fcom
scas
and
daa
movsb
push
jle
jg
psubd
cmpsl
shlb
mov
pop
mov
je
pusha
jge
or
ljmp
cmp
mov
mov
cmp
or
mov
push
fcmove
lret
jg
cltd
xchg
cli
cmp
in
test
xchg
mul
add
push
or
jno
adc
push
push
inc
cmp
add
popaw
fbstp
pushf
rolb
pop
cmp
jae
xor
jle
mov
mov
mov
js
cmp
inc
mov
lods
mov
ss
dec
mov
push
loope
lret
movsl
add
mov
adc
ja
dec
aad
mov
aas
inc
jmp
aas
bound
std
movsb
sbb
mov
push
ret
mov
or
fsubl
sub
in
sti
arpl
gs
lds
dec
icebp
pop
mov
mov
and
and
movsb
out
scas
pop
lahf
fldt
or
xchg
mov
in
popa
xor
xor
lret
in
je
cmc
sbb
ss
fiadds
and
add
dec
mov
rcrb
dec
in
mov
sahf
xchg
lcall
cmp
scas
mov
sarb
xor
rcrl
jo
push
pop
imul
lds
outsb
test
xchg
pop
fsubrs
insb
adc
push
add
push
push
add
inc
cli
adc
xor
xchg
scas
cmp
sbb
sub
xchg
nop
std
push
gs
sub
outsl
jae
int
mov
push
shrl
jp
inc
sti
loop
mov
loopne
mov
xor
enter
xor
adc
cmp
adc
popa
lret
and
jg
subb
fcmovne
int
mov
xor
or
mov
call
orb
sti
mov
aaa
in
subb
mov
jecxz
nop
negl
push
xchg
cli
jo
nop
xchg
inc
decb
add
sbb
fstpl
adc
push
cmp
int
push
lret
in
scas
jb
sbb
jmp
adc
popf
aad
sub
pusha
adc
or
ja
mov
test
inc
lods
mov
push
cmc
adc
dec
es
ret
pop
xchg
pop
outsl
mov
movsb
aas
in
inc
inc
lea
negb
push
adc
xchg
sarb
xor
pop
test
iret
push
cmp
jl
in
mov
test
popa
ja
cli
addr16
pop
insb
shrl
in
into
stc
push
out
clc
icebp
adc
jecxz
ljmp
cmp
mov
arpl
in
sti
lods
push
es
imul
movsb
cli
sbb
pop
lods
lock
and
pop
inc
rolb
mov
inc
sahf
ret
std
test
jnp
cmp
popa
and
push
test
and
es
cmc
int
out
mov
in
je
add
xchg
xor
repnz
incb
mov
iret
and
xor
out
loop
cmpsl
ds
add
out
xchg
sbb
lods
in
add
cmp
push
mov
pop
shrb
dec
popa
sbb
dec
adc
xchg
sbb
pop
stos
arpl
xchg
fisttps
iret
fdivr
cs
rorb
sub
push
mov
mov
loopne
icebp
cs
out
icebp
aaa
fistps
fwait
inc
pop
jmp
jp
xor
push
das
clc
inc
movsb
adc
repnz
test
sub
inc
mov
movsb
push
je
mov
out
outsb
rorl
es
xchg
and
mov
xor
cmp
js
push
jg
add
mov
fiaddl
sahf
outsl
int
ja
dec
fsubrl
mov
out
push
loop
or
daa
arpl
int
mov
out
mov
sti
loope
repnz
rcrl
inc
mov
add
outsb
cmp
xor
dec
mov
push
mov
and
cltd
fidivrs
xchg
lods
mov
add
xor
and
ja
and
lds
dec
xorb
in
bound
xchg
aad
mov
cmpl
imul
pushf
call
mov
mov
or
push
aaa
mov
jmp
adc
cmp
imul
aas
sbb
loope
cmp
stos
cmc
lods
add
mov
cmpb
mov
out
pop
push
add
pop
push
sbbb
aaa
push
jp
iret
scas
sti
jp
pop
add
aam
lcall
sbb
test
fwait
and
sbb
out
add
movb
sahf
sbb
adc
sbb
mov
or
inc
xor
xor
xor
out
add
or
pop
mov
iret
loopne
cmp
dec
jg
loopne
mov
adc
mov
iret
cmp
adc
and
sbb
scas
sbb
adc
fwait
cli
fstpt
dec
add
fsub
shrl
xchg
pop
jbe
jmp
jns
sbb
aaa
clc
mov
jb
mov
sahf
jp
shrb
mov
sbb
jbe
lea
push
test
cmp
xchg
mov
es
xor
mov
push
in
cmc
mov
popf
dec
test
mov
jp
sub
scas
sbb
ret
jns
push
dec
aad
clc
mov
mov
inc
mov
push
push
jmp
xor
shlb
fucomi
cvtps2pd
pop
mov
sahf
pop
rcl
ljmp
rcr
fs
xchg
faddp
push
aam
int
xchg
mov
push
addl
or
cmp
std
mov
dec
push
push
cmp
xor
xor
jo
sbbl
dec
imul
mov
lret
std
push
lret
sub
roll
data16
jae
dec
stos
mov
cmpsl
fs
adc
sbb
mov
xor
push
das
scas
xor
cmp
mov
xchg
rcrl
imul
mov
loop
fdivrl
jmp
mov
xchg
pop
inc
loope
inc
jns
testl
or
pop
fwait
lock
imul
jo
xchg
pop
verr
xor
loop
mov
lods
xor
dec
ljmp
fdivs
int3
lcall
pop
jecxz
dec
icebp
faddl
clc
popf
push
xchg
outsl
lods
int3
mov
jle
lret
inc
lcall
in
outsl
cmp
inc
cmpsb
ja
test
bound
lahf
test
xor
pop
cli
popf
sti
add
aas
sti
mov
je
mov
jo
gs
cmpsb
push
das
adc
cmp
scas
je
dec
mov
mov
cmp
fiadds
mov
push
ror
inc
dec
add
xor
orb
push
loop
jo
push
mov
inc
adc
xor
xchg
push
ss
cmc
ljmp
jg
jp
pusha
push
cs
out
imul
out
xor
daa
sbb
aam
xlat
sub
cmpsb
int
mov
sub
mov
jns
imul
adc
add
adc
dec
sub
mov
xchg
jns
fiadds
addr16
int
inc
fisttpl
sub
sbb
shll
xor
push
and
push
inc
xlat
sub
nop
inc
xor
jp
stos
or
mov
fbstp
sbb
xor
nop
shlb
out
inc
pop
insl
xchg
int
jno
jb
addr16
loop,pn
mov
into
fwait
leave
fldl
vmovaps
ss
xor
push
insl
cmp
pop
pop
out
and
aam
jg
aam
js
mov
mov
xor
hlt
pushl
call
adc
or
jmp
pushl
push
inc
mov
bound
xchg
popf
stos
cltd
and
je
push
and
jno
popl
lcall
scas
push
push
and
fidivs
pop
push
cmp
lret
jnp
pop
test
cmp
add
cmp
push
aaa
add
lretw
mov
arpl
daa
shl
push
clc
orb
std
imul
cmp
sbb
push
cmp
mov
push
and
and
add
xchg
mov
imul
mov
aaa
rclb
cli
and
fcom
add
loop
test
mov
loope
mov
loopne
or
xor
mov
inc
aaa
push
lea
cmp
xchg
mov
ja
dec
xchg
cs
sbb
pop
nop
sub
repnz
popf
lcall
stc
add
and
adc
sti
push
stc
dec
loopne
sub
int3
sbb
jg
les
add
or
pcmpgtd
inc
mov
fistl
ror
pop
mov
add
loope
or
icebp
mov
xchg
push
call
xchg
lods
aad
cltd
aas
or
cld
jp
dec
fisttps
cmp
inc
cli
cmp
xlat
jecxz
dec
mov
push
inc
les
mov
shl
mov
out
les
cld
movsl
jmp
in
roll
repnz
loop
jmp
nop
lods
mov
xor
push
push
mov
push
imul
mov
fistpl
icebp
sahf
mov
or
jo
or
out
les
shll
ljmp
lds
xchg
push
cmp
imul
lods
les
xor
fisubrl
dec
or
sub
imul
mov
sub
cmpsl
dec
repnz
popf
mul
test
add
in
faddl
adc
ficoms
add
cmc
addb
jg
iret
into
fmuls
push
pop
adc
jmp
mov
ret
adc
sahf
mov
mov
xchg
jb
out
jne
sub
sbb
incl
pop
jg
or
lods
cmp
jmp
xorl
pop
cwtl
imulb
xor
and
test
inc
mov
sbb
sub
or
jg
loop
lea
mov
mov
ret
loop
das
sub
lret
ret
cmpsl
aad
inc
sub
mov
and
mov
xlat
mov
popa
cmp
jnp
push
xchg
add
push
gs
mov
int
out
je
xchg
pop
pop
arpl
jae
nop
cwtl
mov
fbld
mov
lods
addr16
add
ja
push
mov
push
inc
scas
into
insb
sbb
das
mov
mov
outsb
or
icebp
rol
test
jp
pop
xor
sbb
out
jnp
sbb
rolb
lret
mov
xor
bound
add
or
std
movsl
sub
sahf
es
outsl
xchg
adc
lods
pop
lcall
sbb
into
mov
sub
cwtl
fs
lea
jno
movsb
scas
loopne
test
insl
inc
rcr
test
mov
leave
jg
out
dec
xor
daa
mov
int
ss
xchg
imulb
dec
xlat
enter
mov
cmpsb
jmp
imul
cmp
cmc
add
mov
xchg
leave
loop
pop
sub
mov
push
xor
shlb
xchg
std
movsb
push
push
jle
cmp
mov
jns
dec
and
jle
dec
fwait
cmpsb
repz
jecxz
and
enter
sub
and
out
das
inc
cmpsb
or
xor
pop
xchg
push
stc
rcl
push
jns
xchg
rolb
inc
pop
loopne
fwait
push
mov
in
je
les
pop
jp
inc
shl
mov
cmp
pop
jno
aas
sbb
push
mov
fidivrl
int
test
mov
in
roll
out
cwtl
and
xchg
mov
pusha
add
push
inc
adc
jecxz
das
js
xor
adc
sti
scas
mov
mov
iret
mov
xor
sub
jb
imul
into
mov
insb
bound
push
mov
cld
or
shll
lods
jno
mov
xor
testb
arpl
sbb
cmc
das
lods
cltd
in
dec
adc
cmc
sar
jb
pop
insl
adcb
and
mov
pusha
cmp
dec
test
mov
jge
sub
out
das
fsubrl
int
stc
xlat
dec
jmp
aam
outsb
popf
shll
mov
shlb
push
dec
cwtl
jae
fistpll
mov
out
in
stos
jl
clc
jno
jl
xchg
mov
mov
mov
xlat
inc
inc
out
cwtl
or
or
xor
leave
aam
popa
cmc
add
cmp
push
addb
or
inc
jp
mov
jg
js
lcall
sub
cmp
xor
cltd
xchg
clc
das
int3
fwait
outsl
dec
pop
pushf
jl
decl
xchg
and
mov
and
and
mov
lock
and
je
add
sub
cmp
es
ficomps
cs
outsb
mov
jmp
xor
cltd
ds
mov
lahf
incb
jecxz
lea
mov
add
das
xchg
sahf
lcall
jmp
popf
lcall
jl
xor
popf
fildll
outsl
or
or
arpl
outsb
inc
arpl
push
lret
sarw
aaa
iret
call
add
stc
push
jmp
push
adc
cmpsb
mov
pushf
mov
push
jb
adc
jp
ret
push
push
hlt
push
cmpsl
mov
cmc
push
popf
pusha
xor
pushf
mov
xor
out
push
ret
push
cmpb
mov
outsb
cmp
inc
xchg
fnstsw
fwait
clc
inc
sbb
sahf
negb
push
sub
dec
imul
jp
sarl
ds
dec
pop
mov
je
push
and
popf
fldenv
enter
ljmp
je
in
pop
cltd
dec
sub
test
sbb
repnz
xor
lea
jne
imul
rcrl
push
ja
xchg
sbb
hlt
data16
sbb
adc
sbb
subl
add
push
mov
fistps
push
fstpl
sub
rcl
jae
or
pop
popf
mov
ljmp
fildl
pushf
mov
xor
mov
scas
push
sahf
test
leave
sub
into
inc
lret
das
sahf
push
pop
shrl
push
pushf
pop
notl
push
in
xchg
sub
push
add
cmc
adc
outsb
loope
leave
xor
les
dec
hlt
mov
mov
cltd
push
negb
cmpsb
push
loope
fsubrl
xchg
mov
into
xor
iret
popa
jnp
out
ss
sbb
inc
jo
arpl
mov
movsl
sbb
hlt
test
repz
arpl
pop
call
sub
and
scas
jge
lock
push
pop
xor
pop
ss
cmpsb
xchg
xchg
fcmovnb
fmull
add
xor
int
push
sub
sbb
or
add
pop
faddp
notb
bnd
mov
sbb
pop
add
sub
popa
fldt
mov
fldt
push
adc
push
test
sub
pushl
inc
cs
outsl
in
jb
roll
int3
ret
jecxz
mov
xchg
cltd
out
lods
imul
or
loop
sbb
insl
adc
mov
push
mov
lods
sbb
and
push
cmp
js
shrb
faddl
insl
inc
sub
jp
into
std
or
notb
pop
repz
aaa
mov
bound
cs
sub
cmp
push
mov
push
enter
fxch
sbb
push
arpl
push
pop
sub
jb
mov
jle
jb
and
xor
inc
inc
pop
leave
bound
and
add
push
push
dec
inc
sbb
mov
mov
daa
sbb
jecxz
cltd
pop
jne
sub
aaa
inc
popa
mov
loop
outsl
fsubrs
sbb
mov
mov
push
mov
fstpl
in
inc
dec
adc
fs
push
fldcw
xchg
mov
mov
aaa
mov
mov
push
les
cmp
inc
insl
call
outsb
push
jno
nop
movsb
mov
adc
repz
into
jg
scas
adc
cmp
jb
xchg
fucom
in
push
js
inc
call
ret
ss
xchg
stos
fstps
or
xchg
jle
push
adcb
hlt
dec
push
push
mov
xchg
shr
push
xchg
popf
mov
cmp
sbb
aas
add
mov
mov
outsb
mov
into
jno
mov
or
fcoms
loope
aas
cmp
mov
sar
jns
push
sub
mov
pop
call
outsl
movl
lcall
xchg
push
outsl
pop
mov
fistpl
adc
mov
cmp
addr16
outsl
cmp
in
push
pop
icebp
pop
int
sub
jmp
jb
cmpsl
mov
mov
dec
loop
mov
cmp
in
shlb
cltd
in
clc
dec
insb
cmp
cmp
out
xchg
pop
jo
mov
gs
lds
std
or
mov
shr
pop
cmc
notl
pusha
in
jp
xchg
and
loop
nop
dec
and
push
out
movsl
cmp
inc
xor
aas
inc
and
jo
push
pusha
sub
enter
sbb
loopne
addb
mul
cli
mov
push
mov
in
mov
inc
push
adc
leave
xchg
lcall
mov
dec
or
idiv
inc
aaa
push
icebp
mov
mov
mov
adc
push
out
in
pop
or
lods
and
sub
icebp
mov
pop
fdivs
cmp
xor
das
sub
sarl
jmp
ret
loopne
test
fists
mov
cmp
cmp
pop
mov
dec
sub
mov
and
sbb
mov
lret
dec
sbb
lret
jg
scas
mov
mov
pusha
out
jge
push
lods
pop
sub
sbb
inc
rcll
add
add
lods
loopne
add
pusha
xchg
arpl
insb
and
jg
movsb
fwait
movsb
lds
fwait
xchg
sbb
cmp
lahf
sbb
push
int
daa
add
test
and
fisubl
xchg
stos
xchg
xor
mov
push
fidivrs
or
outsl
pop
rolb
leave
cmp
ds
mov
and
push
pop
push
sti
daa
sti
and
fs
inc
jl
jno
addb
xchg
xor
shll
dec
sub
push
arpl
sahf
fstpt
xchg
mov
fcoml
cmp
or
push
sub
mov
lret
mov
cmp
xchg
cs
sbbb
insb
push
or
ret
daa
sub
add
into
mov
insb
lods
jb
jbe
dec
mov
sub
fsubl
pusha
cmp
pop
ret
cmp
enter
jle
push
adc
iret
xlat
ja
ret
and
lock
mov
lock
cmp
adc
enter
mov
pop
dec
push
lea
fdivs
int
mov
jg
jnp
cld
std
test
mov
ds
fbld
lock
dec
xlat
cmp
dec
cmpb
ja
fsubrl
dec
push
xchg
adc
loopne
fwait
or
jp
mov
int
jge
iret
xchg
fisubrl
outsl
icebp
add
mov
in
cld
pop
gs
cmp
push
popa
leave
cmp
lcall
js
push
push
and
push
inc
int
clc
adc
enter
mov
cmp
inc
push
cwtl
push
pop
insb
add
push
in
loopne
mov
cmp
mov
pop
adcl
test
in
pop
xchg
adc
push
stos
icebp
aas
push
mov
mov
cmc
xchg
mov
push
inc
sahf
int3
cmc
xchg
repz
xor
in
hlt
push
in
push
pop
dec
es
rorb
sub
dec
cmp
inc
mov
int
or
int3
and
cmp
add
inc
cmpsb
popa
mov
mov
aas
jo
mov
adc
xchg
in
dec
and
cwtl
jle
sub
mov
lcall
into
scas
mov
in
push
pop
lcall
imul
rcrb
mov
pop
jecxz
aas
jno
cli
dec
in
dec
push
mov
dec
mov
inc
cmpsb
outsb
andb
daa
xchg
push
inc
jne
jp
popf
mov
sbb
aad
add
and
pop
ret
ret
inc
lods
xchg
jecxz
jp
sub
aad
push
cmpsb
sbbb
pop
mov
repnz
testl
xorl
into
push
mov
mov
and
xchg
and
ljmp
out
push
mov
xor
jge
insl
lea
test
adc
mov
adc
insb
dec
add
sub
pop
and
movb
and
cmp
jne
clc
pop
rol
inc
repnz
cwtl
nop
and
das
sbb
dec
pop
mov
sbb
jmp
or
mov
insb
fcomps
clc
rorb
adc
call
aas
lcall
jle
ss
aad
stos
jmp
js
neg
sub
fstpt
or
push
fildl
add
inc
out
daa
pop
dec
stos
icebp
sbb
mov
mov
inc
add
rcl
cltd
sbb
and
movsl
or
jmp
inc
xchg
pop
cmp
test
jecxz
and
stc
jo
or
out
aad
aas
jno,pt
sub
pop
icebp
lods
jg,pn
pushf
or
mov
stos
arpl
pop
dec
jl
mov
mov
xor
lea
popa
push
stos
imul
cmp
mov
pop
and
loop
clc
fistpll
cmp
or
xor
ret
cmp
mov
inc
enter
dec
cld
pop
enter
xchg
stos
mov
dec
incb
sbb
mov
dec
aam
sbb
lret
cmpsl
dec
stc
mov
or
mov
dec
les
jl
or
cmp
shr
push
lods
repnz
cmpsb
mov
lcall
pusha
mov
ljmp
roll
scas
inc
repz
aam
push
sti
sbb
add
adc
lock
iret
jne
imul
aas
xchg
ja
cmc
insl
pop
xchg
jge
shll
dec
rorb
lret
loop
ret
ret
repnz
mov
inc
rcr
scas
pop
sbb
shrb
hlt
ret
mov
lcall
js
fcompp
push
sub
xchg
cmc
movsb
push
inc
aad
add
call
scas
xor
cwtl
inc
fsin
addl
std
pop
mov
mov
fs
int3
jmp
lods
in
xchg
iret
push
test
and
fdivl
mov
inc
fisubrs
add
pop
fdivr
sub
incl
subb
idivl
testb
es
into
pop
je
pop
stc
mov
sub
ret
pop
sub
fsubl
sub
ret
repnz
in
push
std
cmp
mov
push
jp
xlat
shll
enter
inc
ja
jb
in
ret
mov
mov
fnsave
xchg
fwait
out
add
mov
push
mov
lock
dec
hlt
insl
fcoms
cmpsb
sahf
and
and
rorl
jmp
dec
pushf
ret
cmp
jb
push
insb
adc
into
popa
repz
mov
pop
mov
sbb
lret
popa
ffree
lds
test
sbb
nop
stos
imul
in
andb
mov
sub
and
pop
pop
aaa
in
into
mov
in
out
mov
nopl
fs
pusha
iret
movsl
dec
jl
jl
jl
and
sub
fisttpl
pop
lcall
xchg
lret
es
push
dec
pop
push
mov
ficoml
dec
inc
xchg
jecxz
xchg
outsl
sub
inc
ja
repz
fwait
sbb
cltd
scas
js
mov
and
jmp
out
jnp
cmp
and
and
fldcw
sub
adc
stos
das
add
mov
or
jae
hlt
test
xchg
or
jp
ret
daa
adc
sbb
pop
and
cmp
and
mov
loopne
loop
push
repnz
les
out
in
xor
cmp
dec
inc
xchg
mov
pop
jae
insb
lcall
addl
mov
ficoms
jle
insl
inc
add
jp
dec
call
cmc
cmp
sub
or
and
stos
add
xchg
cmpsl
mov
in
leave
pop
repnz
movsl
clc
movsl
push
sub
jae
mov
clc
scas
mov
or
fstpl
nop
cmp
mov
pop
rorb
xchg
inc
sbb
push
pop
lods
or
and
sub
scas
push
aas
ss
inc
add
mov
insb
dec
inc
gs
mov
mov
popa
pop
sbb
pop
mov
fisttpll
cmp
add
sbb
jbe
or
pop
int
out
inc
dec
movsl
and
je
femms
adc
pop
push
mov
mov
jne
sub
test
in
aad
stc
inc
ret
mov
scas
insl
xor
xor
jnp
cld
cbtw
mov
inc
addr16
repz
das
sahf
xchg
jle
cmpsl
fcoml
inc
mov
flds
out
aad
subl
cld
loope
mov
add
popf
hlt
adc
test
xorl
or
push
jecxz
push
sbbl
jae
mov
icebp
sbb
dec
adc
mov
dec
cmp
ficompl
sbb
stos
mov
and
xchg
adc
in
mov
sub
push
lcall
mov
mov
push
hlt
lock
add
inc
and
lods
leave
shll
or
movsl
shr
mov
or
lods
dec
lret
sbb
into
out
xlat
mov
sbb
stos
pusha
adc
mov
cmp
bswap
mov
out
sti
mov
fwait
cld
and
mov
mov
push
notb
cs
adc
fdivl
and
shlb
mov
or
adc
jge
or
int3
pop
stc
add
xlat
push
push
sub
shl
insb
and
push
add
xchg
and
rcrb
jne
int3
std
dec
adc
inc
arpl
fldenv
fsubp
addl
popf
scas
lret
pop
cwtl
push
test
mov
xor
scas
inc
sbb
rcrb
test
aam
sub
and
jmp
lods
add
xchg
sub
mov
fucomip
push
mov
xor
sbb
xchg
iret
adc
stos
shlb
pop
les
inc
dec
testl
mov
mov
inc
push
push
mov
cltd
pusha
adc
xor
adc
cmp
or
flds
mov
xor
ret
push
inc
mov
cld
stos
xor
xchg
or
mov
outsb
xchg
cld
adc
inc
mov
sub
lret
out
cmp
xchg
and
push
sbbb
leave
pop
aaa
mov
pop
lea
mov
jg
xor
xor
lds
mov
clc
push
xor
pusha
sub
xchg
dec
movsl
add
push
push
mov
xor
pop
sub
pop
jmp
insl
faddl
lcall
xchg
mov
jge
movl
jecxz
fldcw
mov
mov
outsb
inc
dec
test
sbb
jne
fs
push
jbe
xor
push
push
scas
jno
or
scas
jo
test
popa
adc
test
pop
fmulp
jae
ficoms
xchg
inc
sub
jmp
xchg
out
data16
gs
push
or
jns
sub
jmp
out
pop
in
pop
nop
mov
mov
ds
pop
and
xor
setl
cmp
leave
xchg
fndisi(8087
inc
cli
pushf
testb
push
shrb
cmp
sbb
clc
push
fnstsw
enter
or
push
arpl
movsb
cmp
std
xchg
sarb
in
xor
test
jnp
rcrl
jno
xchg
andl
lcall
jge
test
sub
adc
mov
scas
cmpsl
imul
fidivl
mov
jns
fsubrl
push
arpl
jl
mov
sub
adc
jo
xchg
lods
jbe
jo
js
and
push
and
xlat
xor
sbb
js
cmc
repnz
loopne
inc
mov
or
fdivr
pop
jo
xor
jb
loopne
incl
inc
imul
nop
mov
mov
push
and
adc
jecxz
stos
adc
pop
lahf
adc
arpl
ficomps
outsb
lods
mov
sahf
xor
add
jl
pushl
cmp
sti
sub
ret
or
jbe
and
test
or
repnz
outsb
test
aam
insb
mov
stc
mov
shrl
dec
sbb
xor
push
push
into
cmp
std
je
sub
cmp
imull
cmp
mov
dec
dec
insl
ror
lcall
xchg
cs
pop
jp
jl
mov
cmpsb
xchg
lcall
dec
sbbl
mov
loope
push
iret
xor
enter
jb
in
dec
mov
sbbb
leave
inc
add
cmpsb
scas
hlt
pop
sub
cmp
mov
lods
xchg
mov
add
shlb
add
xchg
and
xchg
cli
mov
dec
dec
mov
test
cld
xor
mov
push
jb
lods
jp
sub
cmpsl
shl
rcrb
adc
clc
jno
lods
lret
cld
hlt
nop
add
push
push
mov
jbe
mov
mov
sub
xchg
mov
mov
jns
daa
mov
pop
in
mov
popf
popa
bound
mov
loope
add
test
sub
jmp
cmp
cmpsl
leave
jo
mov
lods
bound
cwtl
jb
pop
dec
push
loopne
jl
dec
sbb
add
adc
jge
sbb
xchg
and
mov
int
ja
cmp
cltd
aaa
out
repnz
cmpb
dec
mov
rcrl
jmp
fists
out
mov
jg
cwtl
ljmp
jns
sub
mov
pop
xchg
pop
ljmp
aad
rcrl
idiv
stos
loope
inc
lahf
cld
mov
mov
pop
enter
fists
mov
stc
test
or
out
dec
ds
adcb
clc
mov
xor
push
mov
mov
cmp
int
fsubrs
pop
jae
push
lret
dec
subb
ds
std
mov
or
xchg
xchg
jg
push
lcall
mov
inc
hlt
ljmp
shrb
movsb
test
les
hlt
cmp
inc
cmp
jg
iret
sub
jne
adc
mov
clc
jns
pop
or
test
fwait
int3
hlt
jl
ds
sbb
punpcklbw
adc
push
push
pop
lea
call
sahf
ljmp
sub
push
leave
dec
into
testb
mov
test
scas
jae
or
cmpsb
inc
xchg
fwait
push
iret
mov
fidivrl
lods
xchg
sbb
lret
mov
jmp
dec
sbb
inc
mov
imul
sahf
jne
mov
cmp
jne
pop
adc
jg
sahf
sub
pop
pop
stos
xchg
inc
loope
dec
push
js
loope
mov
mov
iret
cs
and
call
xlat
mov
lret
pop
insb
or
lcall
cmp
faddl
es
cltd
push
xchg
sub
sbb
imul
jne
and
lds
or
or
rcrb
mov
cmp
inc
xchg
push
or
test
bound
inc
mov
mov
jge
sti
inc
cs
nop
aaa
fstl
loope
lods
lods
xchg
or
andl
add
test
jnp
fcmovbe
movsb
sahf
jecxz
inc
ljmp
cmp
iret
mov
xor
mov
shll
pusha
aas
mov
mov
sbb
inc
sbb
xchg
lock
je
jmp
popf
xor
fmuls
outsl
lret
and
jle
inc
orb
dec
dec
scas
lret
mov
xlat
test
jmp
fcmovnu
mov
std
sub
stos
cmp
stos
pop
fs
test
xor
inc
push
mov
and
outsb
sub
jno
imul
aam
mov
pop
bound
push
cmp
or
addr16
jmp
addr16
sbb
das
push
cli
addps
addr16
adc
outsb
insb
or
mov
sub
pop
popa
jp
je
mov
mov
aam
mov
test
bound
dec
mov
fnsave
icebp
pop
sbb
subl
rclb
fsubrl
add
inc
int3
fsubr
inc
pushl
dec
loope
cs
inc
jb
int
clc
xor
jl
fwait
aaa
dec
or
lods
pushf
mov
out
mov
mov
inc
aas
outsl
xchg
jge
xor
cmp
pop
add
ss
mov
jae
cmc
add
inc
dec
lcall
jmp
add
sbb
into
push
push
adc
and
sub
bound
sub
mov
incl
or
bound
dec
cmp
mov
push
push
pushf
pop
push
repnz
mov
add
adc
mov
andl
movsb
xchg
xor
cs
out
in
and
pop
sti
lcall
xchg
mov
jmp
mov
mov
and
fistl
cmovb
sub
and
inc
in
or
mov
cld
clc
mov
lds
mov
pusha
pusha
popa
cli
xorb
and
frstor
add
cwtl
jb
cltd
or
cmp
mov
stos
pop
mov
xor
es
fsub
mov
pop
jo
stc
push
mov
mov
inc
inc
aas
int
cmp
xlat
mov
push
imul
mov
mov
dec
inc
iret
inc
xchg
lods
cwtl
sbb
fidivrs
cmpsb
in
aam
fsubrs
add
test
adc
or
dec
inc
dec
mov
push
sbb
insl
test
mov
inc
cmc
or
push
xlat
xor
mov
insb
lock
aad
cli
sbb
inc
push
rclb
ss
jge
popa
in
clc
mov
add
and
clc
ja
testl
dec
xchg
xor
xor
lret
fsts
adc
test
mov
hlt
xor
sahf
stos
cmp
stos
mov
shr
mov
or
mov
icebp
ret
xlat
in
call
push
pop
aad
xor
mov
mov
xchg
push
mov
xor
pop
dec
fld
in
fs
outsb
faddp
mov
cmp
push
cmp
cmpsb
pop
add
loope
sbb
cwtl
das
adc
into
inc
and
iret
inc
dec
fisubl
push
insb
cs
push
out
std
xchg
push
js
add
mov
xchg
cmp
aas
ljmp
mov
sbb
pop
sbb
inc
jne
mov
rorl
and
stos
or
push
jb
mov
insb
sbb
aaa
cmp
inc
push
int
lahf
mov
mov
sub
hlt
or
pop
leave
pop
roll
or
loop
sub
in
loop
xor
xlat
xchg
in
mov
jmp
nop
push
out
gs
fwait
xchg
pushl
popf
js
imul
push
xor
sub
sub
lods
pushf
arpl
inc
jecxz
mov
sahf
jb
push
pop
sbb
cmp
mov
pop
testl
lahf
cs
inc
sub
adcb
test
jno
adc
mov
sbb
xor
xchg
push
in
jns
int3
nop
ret
enter
out
gs
push
sti
mov
in
insl
rorl
xor
xchg
jmp
jns
cmpsl
enter
test
pusha
mov
lock
fdivp
out
xchg
xchg
in
ficomps
imul
cmp
dec
jp
add
test
and
mov
dec
shlb
adc
repnz
jp
fs
addr16
dec
mov
sub
push
bound
cmp
mov
jbe
adc
inc
scas
enter
jl
rorb
or
movsb
lret
lret
ficoms
mov
stos
ljmp
jl
mov
loope
and
xchg
filds
cmp
cld
icebp
inc
inc
stos
adc
inc
fcomi
shr
in
push
cld
mov
insl
test
add
mov
sub
jb
add
enter
cmp
or
mov
loop
or
and
jnp
fbstp
stos
sub
lahf
pop
push
push
inc
enter
loope
xor
push
incl
push
mov
jge
inc
dec
pop
fcmovne
aam
mov
pushf
mov
and
push
inc
ret
les
enter
cld
or
pusha
xchg
inc
or
ret
lcall
insl
mov
mov
loope
dec
adc
je
pusha
imul
enterw
pop
push
addl
fcmovnu
mov
pushf
scas
fistpll
jns
cli
rclb
xor
rorb
iret
stos
mov
mov
sarb
addr16
pop
dec
adc
rcr
rcrb
cmp
movsb
scas
shrb
dec
pushl
sarb
pop
mov
xor
iret
mov
sub
lock
imul
lods
xor
pop
sti
pop
push
int3
push
in
icebp
xchg
pop
lock
adc
push
mov
xor
cmp
adc
xor
xchg
lret
std
mov
add
lds
cmpsl
loopne
ja
rcl
idivb
inc
jle
andl
leave
std
addr16
into
ret
xor
repz
mov
pop
rcll
incb
jecxz
setbe
adc
cld
jp
pop
jns
imul
rcrl
xor
sub
shll
out
adc
cs
out
pop
jp
inc
pusha
cwtl
pushf
mov
fstl
scas
sbb
jbe
cmp
insb
stc
fwait
es
cmp
aaa
vpmacssdd
sbb
mov
imul
and
sbb
mov
push
and
movsl
cmp
dec
mov
rorb
xor
testb
imul
inc
leave
fidivl
fstpt
pusha
les
and
rol
pop
out
fcoml
inc
push
sub
or
dec
jns
movsl
jecxz
pop
adc
add
es
push
insb
sahf
cli
or
loope
aaa
stos
inc
xchg
in
cmp
sarb
out
out
iret
adc
cmp
pop
xor
xchg
mov
addr16
js,pt
jno
fstps
cmp
push
lahf
adc
xchg
loope
pop
loope
cmp
inc
aaa
xlat
dec
out
sbb
cltd
test
xor
add
mov
bound
pop
jge
cmp
sbb
mov
sub
int
push
xchg
gs
shlb
pop
pop
test
mov
add
lock
mov
stos
jnp
in
daa
and
jo
scas
sub
daa
or
sub
test
adc
add
shlb
xor
scas
and
aam
cli
jl
orl
lcall
push
mov
stos
dec
push
pop
dec
pop
mov
hlt
or
andl
dec
dec
inc
pusha
pop
imul
pop
lds
push
ret
f2xm1
enter
popa
inc
pusha
das
cwtl
pop
dec
out
mov
test
jg
xchg
mov
notl
jne
inc
jne
cmp
mov
rcrl
icebp
cwtl
push
mov
push
lea
lcall
cmp
inc
mov
mov
loope
incl
imul
leave
push
mov
pop
jle
jle
jo
or
xchg
mov
cld
push
jmp
je
pushf
fwait
xor
daa
imul
xchg
iret
test
ret
sub
ds
or
xchg
dec
sbb
gs
ret
shrl
cltd
es
clc
mov
and
add
mov
pop
jge
iret
push
pop
popf
and
mov
cs
cmp
imul
insl
loopne
jg
or
nop
lock
push
inc
mov
rclb
xchg
sbb
mov
push
iret
dec
pop
in
test
pop
xchg
iret
push
in
lcall
outsb
por
xor
shl
add
adcl
in
jecxz
fs
insb
call
pop
mov
js
jmp
adc
xchg
dec
in
mov
mov
jp
arpl
dec
mov
add
jmp
sub
sbb
sbb
sarl
and
sbb
push
sub
cltd
push
add
pop
imul
inc
add
jecxz
jnp
icebp
sbb
cmp
add
mov
jbe
and
cmc
cltd
ja
cmp
mov
lret
push
lcall
cmp
sub
push
or
pop
push
and
lret
repnz
pop
xor
push
and
aas
cli
ds
loop
jl
mov
mov
push
stc
hlt
loope
orb
mov
xor
es
sahf
nop
mov
lahf
inc
mov
cltd
fcoms
jl
es
icebp
lcall
lods
ss
mov
divb
mov
and
inc
inc
shl
iret
lods
cmpsl
les
popa
insl
shlb
lds
icebp
adc
popf
cmpsl
mov
fisubl
adc
add
out
iret
jg
mov
inc
je
sub
or
pop
xlat
jl
arpl
inc
test
mov
pop
pop
inc
fnstcw
les
test
and
dec
cmpb
inc
movsl
loope
push
std
xor
pushf
cmpsl
add
arpl
add
daa
adc
shr
adc
mov
mov
pushf
fwait
je
fcoml
xchg
or
imul
repz
push
sub
std
cli
mov
loop
or
mov
xadd
jecxz
fimuls
jp
in
jg
jo
mov
adc
inc
push
sbbb
mov
shrb
jecxz
shll
xor
inc
jae
push
das
mov
add
shll
stos
loop
mov
test
les
sub
xchg
mov
jo
add
xchg
push
jmp
cmp
inc
call
loop
pusha
sub
xlat
psrad
pusha
add
xor
or
imul
das
xor
xchg
lcall
scas
cltd
xchg
or
push
inc
out
test
mov
pop
sti
loopne
mov
sarb
les
and
adc
jb
mov
mov
addl
jp
sub
stos
and
cmc
stos
push
sahf
mov
push
sub
cwtl
cmp
popf
test
pushw
lea
mov
lret
sti
xlat
dec
push
cld
mov
test
out
stos
and
jno
xor
sbb
mov
jecxz
stc
mov
pop
jl
xor
pop
call
iret
pusha
dec
lods
xor
dec
add
mov
cmp
push
clc
adc
xor
das
aam
cmpsl
icebp
mov
cmp
mov
jne
inc
xor
cmpsl
sub
jmp
xor
cwtl
andl
js
sub
push
pop
aaa
cmpsb
dec
or
or
dec
inc
and
and
sbb
jbe
jecxz
dec
jl
fisubl
adc
add
sbb
add
push
jmp
in
inc
push
mov
cmp
clc
xor
sbb
xabort
xchg
mov
iret
stos
pop
loop
and
mov
fwait
xchg
push
mov
sbb
xlat
adc
xchg
addr16
ret
xlat
mov
subb
inc
mov
repnz
pop
loope
push
cli
cmp
or
jnp
sbb
popf
jecxz
pop
daa
mov
xchg
push
ja
mov
jns
sbb
and
adc
or
cmp
mov
stos
icebp
mov
in
sbb
imul
imul
ret
je
add
add
sub
xchg
out
pop
arpl
mov
fnsave
inc
in
jg
test
push
push
clc
cmp
cs
cmp
lds
jo
mov
mov
js
pushf
pop
push
jnp
pop
outsb
loopne
insl
scas
cli
into
xor
cs
inc
pop
cmpsb
fs
jg
test
xchg
xor
stos
test
xor
mov
mov
cmpsb
adc
push
insl
xchg
js
sbb
mov
sub
test
test
imul
test
cmp
popa
push
xchg
mov
fsts
das
pop
mov
lock
pop
call
mov
xchg
es
jp,pt
lahf
cmp
pop
push
inc
sub
adc
mov
ds
js
dec
inc
dec
mov
aaa
and
stc
mov
call
inc
pop
sti
jnp
fcomip
lret
pop
cwtl
clc
mov
xchg
mov
sbb
adcl
push
int
dec
pop
cs
jno
arpl
aas
cmp
xchg
cmp
rorb
adc
loop
inc
stos
out
sti
mov
jg
call
pop
je
mov
xchg
idivb
push
xor
or
inc
mov
mov
xor
mov
and
jg
adc
cmp
insb
xor
and
xor
mov
stc
movsb
sub
cmp
xchg
mov
jne
xor
pop
xchg
fwait
sub
sub
ret
pop
ja
xor
cmpsl
xor
mov
xlat
mov
dec
mov
scas
xor
pop
push
inc
cli
fs
sbb
out
js
sbb
push
lea
pop
xchg
and
inc
xor
or
and
sub
or
sub
xor
ret
jbe
icebp
rcrl
popa
fbstp
into
add
inc
repnz
mov
loopne
movsl
ret
out
jmp
or
or
sbb
cmpsl
lret
sbb
daa
pop
js
cmp
jmp
lcall
cmpsb
jle
push
cli
mov
std
pop
mov
icebp
sbb
loope
push
mov
jg
dec
or
cmp
push
or
call
jl
movsl
mov
jne
hlt
mov
pop
sub
out
rorl
and
out
lahf
test
dec
and
jo
or
add
addr16
mov
ror
inc
adc
aaa
mov
push
add
loopne
sbb
mov
test
notb
jg
jae
pop
je
mov
xchg
jb
cld
push
ret
ss
xchg
inc
js
inc
pusha
fdivl
into
jmp
lahf
mov
push
xor
dec
lea
daa
stos
je
mov
lods
insb
stos
push
xor
fstpt
jle
add
flds
xchg
arpl
mov
fistpl
icebp
pop
sbb
jae
jae
adc
dec
daa
mov
pusha
xchg
sub
adc
push
loop
ret
xchg
or
aaa
lea
add
pusha
jp
out
lock
out
xor
xor
xchg
sbb
daa
jbe
outsl
xor
pushf
fwait
mov
jne
push
sbb
fisubs
lret
insb
lret
mov
push
subb
jecxz
adc
dec
jle
xabort
gs
out
int3
icebp
adc
nop
fisubrs
gs
lock
inc
mov
pop
push
sbb
jo
les
insb
mov
lret
pop
adc
add
jg
mov
push
ror
or
loopne
mov
dec
and
push
lods
pop
mov
cs
sbb
iret
adc
out
stos
lods
pop
mov
cli
std
scas
mov
pushf
jo
pop
dec
and
jp
imul
arpl
in
sub
es
cmp
cmpsb
pushf
inc
int
push
cmpl
jmp
aad
stc
pushf
pop
cld
ds
xor
adc
fwait
ljmp
mov
inc
cmp
addr16
fwait
out
ds
mov
repz
inc
or
dec
pop
imul
and
repnz
outsl
dec
sub
adc
fildl
xor
jb
mov
dec
cmpsl
add
addr16
or
dec
inc
in
test
jecxz
lods
loop
push
sbb
repz
pop
push
jmp
sbb
dec
test
aas
pop
jns
mov
iret
or
movsl
rolb
push
sbb
addl
addr16
jne
test
ss
test
loop
pop
test
lahf
xchg
dec
js
jno
ret
sarb
icebp
xlat
xor
lds
loop
test
xchg
pop
dec
add
sarb
adc
pop
or
mov
popf
lcall
loope
and
decb
loop
ficoml
mov
aad
inc
fs
das
lds
or
sbb
frstor
fbld
mov
pop
xchg
ja
mov
popa
mov
or
and
mov
mov
inc
idivb
loope
in
pop
xchg
and
inc
in
dec
sbb
lods
imul
push
test
xor
mov
rcrl
test
sub
mov
jl
cltd
push
cmc
jb
mov
fistpl
cmp
xchg
cld
pop
in
mov
add
xlat
inc
xlat
pop
rcrl
lods
and
ficoml
mov
mov
dec
fimuls
out
jle
mov
ja
mov
pop
jbe
insl
ja
push
ss
mov
call
pop
and
push
adc
xchg
mov
scas
pushf
fmull
sbb
adc
xor
mov
or
push
in
stos
xor
sbb
lods
sarb
data16
mov
out
cmp
mov
inc
cli
gs
shrb
or
inc
mov
pop
sti
out
cmovns
adc
jns
and
repz
xor
std
ret
lcall
inc
ficoml
sub
addr16
jo
cwtl
dec
push
je
inc
outsb
ljmp
imul
adc
cmc
movsb
stos
sbb
ljmp
adc
loop
test
sti
nop
imul
or
pop
xchg
sbb
dec
leave
pop
push
cld
push
fcmove
js
cmpsl
xchg
xchg
shrl
cmp
sub
or
sbb
fidivrl
mov
add
lock
ret
jae
sbb
lods
xor
aam
push
in
addr16
push
add
mov
popf
mov
fistpl
popa
xchg
xchg
fnstenv
pop
loope
leave
sub
pop
or
add
dec
data16
pop
movsl
fwait
aam
xor
leave
inc
out
lods
push
out
imul
ret
test
int3
mov
cmp
pop
jecxz
push
movsl
pop
mov
xchg
das
cmp
pop
dec
mov
dec
nop
cmp
lcall
shlb
je
pop
pop
mov
ja
and
daa
subl
and
dec
mov
pop
into
xchg
inc
int3
out
add
lea
xor
push
dec
stc
mov
sbb
fucomp
insb
leave
mov
lcall
jno
sub
dec
sub
add
mov
inc
arpl
movsl
pop
mov
les
fnstcw
out
in
out
rclb
jp
jg
ret
jp
pop
push
nop/reserved
mov
and
iret
pop
fbld
jb
mov
add
xchg
out
dec
call
out
lods
aam
sub
mov
mov
sbb
adc
pop
push
mov
mov
push
adc
aam
and
add
pop
cmp
cltd
iret
addr16
or
mov
andl
adc
insl
loopne
adc
mov
sbb
push
xor
stos
jb
mov
and
stos
repnz
sub
mov
rcl
xor
cmp
jecxz
in
mov
sub
pop
pusha
xchg
test
push
out
sub
ljmp
les
cmpsl
or
nop
lret
add
jg
cltd
and
or
popa
shll
loopne
jno
imul
ret
js
xchg
mov
cmp
jmp
jo
and
mov
or
sahf
cltd
push
push
or
xchg
mov
sub
add
mov
test
scas
and
imul
or
inc
fwait
cmp
push
rcr
pop
mov
lahf
lods
clc
inc
jno
pop
jae
das
jae
push
jmp
and
das
xlat
lds
pop
jge
test
test
pop
sub
addl
or
dec
pop
shlb
ficomps
cmp
sub
dec
lea
mov
mov
das
ljmp
dec
mov
push
xor
pop
mov
jnp
push
fwait
out
push
sub
jo
adc
xor
adc
fnstenv
pusha
jne
dec
pushl
add
arpl
movsb
aas
or
mov
push
xor
mov
sub
clc
arpl
je
xchg
mov
icebp
push
pop
inc
and
lock
pop
mov
xor
xor
mov
and
mov
or
and
jge
pushl
inc
pop
cmpsb
in
out
xchg
jns
lahf
flds
mov
and
fwait
mov
jne
adc
push
push
cmpsb
xor
loopne
addr16
push
rolb
sbbl
mov
lret
cmp
add
and
push
xchg
jmp
jae
push
es
mov
inc
imul
push
lods
insl
mov
mov
push
subl
jns
dec
mov
imul
pop
std
lock
das
fnstsw
cmpsb
adc
dec
out
push
mov
or
repnz
add
imul
cs
jno
out
mov
fldenv
adc
mov
dec
xchg
imul
dec
push
das
sub
sub
inc
or
sbb
js
sbb
xlat
jb
mov
adc
jecxz
sbb
inc
pusha
pop
or
jnp
push
cltd
adc
mov
fwait
xchg
les
and
aas
mov
movsb
cmpsb
bound
mov
dec
mov
and
lret
nop
jp
and
popa
add
mov
dec
jecxz
ret
fnstsw
les
int3
mov
mov
mov
flds
jo
in
sub
fsubr
adc
ret
inc
inc
test
jns
lock
enter
rcl
roll
xor
xor
inc
loop
call
fucomi
push
loope
mov
pop
andl
inc
sub
shl
xchg
fisttpll
out
pop
loop
dec
lds
push
js
mov
cli
jb
enter
sbb
push
pushf
xchg
xchg
cmp
rcrl
stos
repz
mov
add
and
jb
out
adc
std
mov
ret
bound
in
fsubs
push
into
repnz
mov
sbb
mov
call
xchg
xchg
sti
jge
test
or
xchg
push
xor
xchg
fwait
gs
or
mov
mov
push
lods
int3
aas
aas
ret
pop
ret
xchg
inc
push
int3
clc
inc
ds
pop
push
and
xchg
lods
xor
and
fdivp
adc
mov
cmpb
mov
xchg
push
fwait
icebp
pop
bound
icebp
test
mov
adc
mov
mov
sahf
adc
sar
imul
lods
jg
mov
imul
or
inc
inc
int
imul
sbb
pop
cmp
mov
add
arpl
xor
mov
or
sete
mov
ss
gs
js
dec
add
rclb
popf
ja
int3
test
xor
add
in
sub
std
and
or
aas
pop
add
mov
pop
repz
iret
outsl
or
fildl
shr
repz
rep
mov
js
xchg
and
mov
mov
lcall
mov
in
adc
jne
xorb
jg
mov
hlt
and
jo
neg
or
lock
xor
cmc
sub
cli
loope
inc
pop
pop
je
push
lahf
fcmovb
jmp
add
and
add
out
fwait
sbb
dec
dec
repnz
and
add
stc
mov
fldenv
xchg
push
jecxz
fistps
push
out
lahf
add
movl
mov
add
jne
sbb
sub
sahf
mov
xchg
adc
inc
xchg
cmp
in
ja
aam
xor
push
jae
testb
mov
cmp
es
shrl
cmp
pop
sbbb
dec
repz
cmpsb
add
bswap
jne
aas
loop
or
adc
jmp
mov
ljmp
dec
imulb
pop
stos
ficomps
xchg
cli
cmp
sub
mov
pop
push
ret
sub
std
cmp
xor
cmp
rclb
dec
sub
push
xor
movsb
clc
movsb
in
bound
out
xchg
push
sbb
push
lods
lret
jno
cli
pop
jno
adc
xchg
adc
add
ljmp
sbb
add
jb
mov
shlb
mov
pusha
xor
ljmp
sbb
enter
popa
jb
or
in
push
sahf
call
inc
aam
lahf
mov
pop
jl
sbb
shll
mov
jbe
push
psllq
inc
jg
and
mov
mov
mov
jmp
shlb
mov
int3
or
add
inc
push
lahf
push
or
insb
aaa
jno
push
bound
leave
xchg
push
scas
test
cltd
inc
mov
mov
mov
jbe
pop
fisubrs
mov
repnz
jg
fistpll
jl
fidivrl
scas
jl
lock
add
sbbl
shrb
lret
push
pushl
cmp
pop
loopne
inc
jl
orb
sub
pop
pop
jle
fisubrl
jecxz
add
sbb
xor
jg
xlat
std
imul
rcr
lret
xchg
gs
cmpsl
cli
mulb
and
xchg
dec
cwtl
xlat
add
jnp
shlb
adc
aad
mov
mov
jmp
push
jmp
in
mov
or
shlb
cmp
add
pop
jmp
pop
cwtl
insb
and
and
stc
dec
push
sti
gs
iret
pop
inc
roll
mov
sbb
adc
mov
fwait
cmp
inc
xchg
dec
push
std
dec
xchg
mov
shl
sbb
test
aam
cmp
shl
inc
loope
lahf
adc
xor
les
ds
mov
or
mov
repz
lds
mov
pop
loopne
push
test
add
pop
fidivrl
int
sub
cwtl
aas
inc
pop
inc
sti
imul
cmc
cmp
add
adc
test
dec
add
mov
in
out
pop
scas
cltd
cmp
int
mov
shl
imul
adc
and
out
xchg
lds
and
inc
rorl
mov
inc
fsubrs
popf
xchg
inc
xchg
cmp
in
sbb
jb
xor
test
or
scas
and
fwait
xor
sbbb
dec
sbb
xor
arpl
xchg
xchg
iret
icebp
cmp
push
les
push
ss
ds
loop
or
stos
inc
in
xor
adc
mov
fs
scas
fdivr
js
pop
push
xor
aam
adc
aas
sbb
push
repz
mov
in
testb
mov
mov
repnz
add
pop
dec
adc
aam
or
sbb
popf
or
mov
mov
mov
cmpl
and
ss
dec
mov
inc
and
cmp
push
lret
rcll
jo
sti
out
adcl
jl
or
icebp
call
xchg
mov
pcmpgtb
jbe
leave
xchg
xchg
aam
shl
xor
pop
or
and
push
pusha
mov
rclb
mov
push
adc
xchg
test
daa
into
iret
imul
xor
rcl
jne
sbb
add
addr16
inc
jmp
ss
cmp
or
xor
lods
xlat
jbe
cmpsl
jp
push
xor
adc
mov
fistpll
test
jbe
fdivr
leave
mov
pop
jno
mov
inc
lret
sbb
dec
rclb
adc
lock
je
xchg
dec
jp
aam
je
or
sub
mov
pop
mov
inc
je
icebp
test
cmpsb
lret
loope
mov
pop
push
jnp
fdivrl
jae
adc
mov
push
pop
and
outsl
xchg
pop
xor
mov
or
and
std
dec
push
out
jbe
movsb
cmc
fldpi
lock
sub
iret
fs
sub
repz
inc
xor
dec
ss
and
cmp
mov
pop
sar
int3
out
or
in
test
add
enter
xchg
mov
sbb
add
out
xor
loop
test
cmc
je
mov
fstp
cmp
fwait
test
cmp
xorl
icebp
nop
loopne
mov
pop
es
fcoms
mov
pop
and
adcl
pop
mov
outsl
fwait
cmpsl
test
and
mov
xchg
push
faddl
fadd
mov
orb
out
add
jge
lcall
ss
jmp
ret
inc
mov
bnd
in
xchg
hlt
fcoms
inc
sub
cmp
add
scas
sbbb
fdivrl
inc
ds
sub
mov
xchg
add
out
fs
dec
add
loop
or
outsb
cld
dec
pushf
fadds
dec
xor
scas
cmp
out
jne
add
hlt
nop
xchg
sbb
pushf
jl
mov
jle
sbb
imul
clc
jo
sbb
scas
stos
fbld
fldl
jmp
jo
les
ds
mov
out
mov
xor
jns
hlt
mov
inc
push
jle
in
lea
pop
sbb
test
ljmp
xlat
mov
es
xorl
mov
or
enter
mov
adc
sbb
cmp
imull
sbb
sub
aaa
push
dec
dec
adc
pop
sbb
fistpl
xchg
ljmp
mov
subl
inc
mov
jp
pop
dec
cmc
fdiv
mov
push
jmp
movsb
dec
cmp
std
iret
mov
dec
pushf
pushf
inc
movsl
inc
aaa
into
mov
jle
test
shll
lcall
mov
loopne
adc
push
fimuls
mov
rol
jmp
cwtl
js,pn
dec
push
mov
adc
sar
sbb
push
push
or
aas
outsl
inc
movsl
in
sub
dec
and
ficoms
insl
stos
mov
push
call
mov
xchg
movsb
aad
cwtl
notb
adc
sub
inc
xchg
dec
stc
out
imulb
pop
loope
das
std
sti
je
mov
enter
mov
sbbb
inc
cli
es
push
fstpl
adc
xchg
in
jnp
stos
dec
movlps
aad
aaa
je
pop
test
bound
xchg
inc
clc
fwait
imul
fnstsw
aaa
dec
or
out
mov
jo
fcmove
xchg
popf
push
imul
inc
test
cmpsb
add
adc
cmc
sub
and
lcall
jecxz
xchg
in
loope
push
pop
xchg
fidivl
inc
push
aam
pop
daa
out
int3
mov
pop
mov
pop
mov
addr16
ret
jnp
outsb
pop
and
mov
je
mov
adc
mov
inc
and
std
xchg
frstor
sub
xchg
lret
jb
push
sarb
dec
inc
sub
or
jns
xchg
cld
dec
push
gs
loop
pop
xor
jge
and
dec
adc
dec
sub
jp
testb
xorl
pop
inc
mov
lea
out
jne
mov
xchg
clc
je
mov
cmp
jmp
fldt
push
mov
lea
insb
push
idivl
or
loope
int
xchg
sub
aas
mov
cmc
outsb
xchg
mov
xor
aam
sbb
sub
int3
ffreep
mov
xor
and
sbb
jge
pushf
lea
xchg
les
xor
out
inc
int3
loop
xor
inc
adc
icebp
jg
out
jbe
das
fistps
lock
pop
aaa
cmove
cmp
or
fildl
rorl
lock
mov
cmpsl
popl
and
in
xor
mov
arpl
stos
bound
or
sub
push
and
lods
fs
popa
dec
jnp
or
or
stc
xlat
push
int3
add
std
push
sub
dec
jp
pusha
jle
pop
jne
das
movsl
mov
ret
fcomp
and
mov
mul
pop
pop
sti
pushf
int
mov
cs
sbb
in
sub
das
or
jge
aad
shlb
mov
mov
pushf
lret
pop
jo
in
lcall
jo
icebp
pop
es
and
pop
push
jp
mov
fmull
test
mov
fdivrl
cli
mov
and
scas
sti
fisubrs
mov
sbb
lcall
dec
xor
movsl
jnp
scas
cmp
inc
jp
mov
cmp
ja
fcompp
cmp
iret
imul
cmp
lret
insl
inc
jmp
roll
aam
or
adcb
or
mov
popa
cmp
add
mov
lcall
fidivs
in
je
rol
jae
mov
ja
xchg
popf
cmpsl
mov
in
leave
daa
push
enter
mov
jno
aam
xchg
daa
daa
fsts
add
leave
push
sub
scas
mov
aam
jecxz
inc
xchg
rcll
cmc
insl
push
popf
faddp
sbb
std
icebp
aam
icebp
int
mov
or
dec
mov
das
stc
and
iret
stos
loope
pusha
shlb
arpl
insl
mov
sbb
xchg
ret
cmpsl
jns
subl
jbe
push
sbbl
fistpl
push
dec
lcall
jmp
ret
mov
loope
sbb
adc
push
xchg
lds
mov
mov
fdiv
add
aam
movntq
and
and
sbb
xchg
adc
jne
pop
jb
andb
mov
mov
rcrb
insb
cmp
pop
ficoml
push
aaa
jecxz
push
push
inc
shr
jp
lods
cmp
cld
inc
loop
xchg
push
fsubs
aam
xor
sub
and
cmp
loopne
pushf
fcoms
pushf
lea
hlt
inc
adc
xor
jno
fiaddl
cmpsl
pop
add
jns
pop
andb
xchg
out
push
clc
inc
push
clc
jle
aaa
inc
xchg
xchg
adc
pushf
adc
lret
sub
pop
sub
lock
xchg
inc
incb
xor
sub
pop
jne
pushf
clc
dec
movsb
mov
addr16
mov
fsubl
push
in
icebp
cmc
outsl
hlt
fisubl
pop
or
int3
outsl
sbb
shll
push
adc
inc
jae
cmp
xchg
dec
push
mov
fistpl
in
fs
xor
loop
test
pop
lods
mov
stos
mov
lea
mov
sti
sbb
mov
fmull
inc
cmp
push
cltd
cmp
pop
dec
lea
jnp
or
loop
push
push
jnp
je
in
pop
outsb
inc
push
and
stos
add
cltd
sahf
mov
into
sbb
test
in
add
sub
dec
ss
cmp
ret
repz
dec
dec
xchg
xchg
loopne
push
rclb
pop
jecxz
scas
filds
mov
xor
in
out
xchg
pop
lds
and
sbb
in
mov
pop
mov
cmpsb
repnz
les
and
and
inc
insb
repnz
fwait
out
or
sub
pop
or
pop
pop
pop
xchg
pushf
outsl
lret
clc
rcrl
pmuludq
or
xchg
cld
or
cmp
cvtps2pi
mov
movsl
and
lods
add
mov
stos
pop
insb
pusha
cmc
loope
movsl
mov
push
cmp
int
xchg
adc
sub
in
inc
inc
push
push
sbbl
cmpsl
sbb
cli
mov
mov
call
mov
mov
movsb
sub
jmp
fldt
jge
out
xchg
enter
dec
xchg
or
jecxz
test
push
fmull
push
jg
push
sbb
cmpl
adc
sahf
fwait
pop
rclb
stc
sbb
lock
in
mov
or
mov
or
aaa
mov
mov
js
push
mov
add
mov
jp
cld
push
out
cld
bound
dec
sti
xchg
or
and
je
jno
push
and
insl
jl
movsl
mov
sbb
inc
mov
mov
std
cwtl
and
mov
add
inc
in
pop
or
jp
xor
es
je
scas
jns
sbb
arpl
int
add
movsb
mov
mov
pop
sti
leave
roll
adc
fistpll
inc
pop
stc
or
pop
imul
cli
push
lcall
jge
in
mov
icebp
subb
mov
out
mov
jle
aam
sarb
sbb
xchg
pop
pop
xchg
cwtl
push
mov
mov
movsl
xchg
mov
cmp
jns
mov
sub
popa
sbb
mov
nop
push
mov
mov
outsl
adc
mov
scas
or
mov
jb
mov
mov
xor
jo
lods
loopne
jp
xor
lret
sbb
xor
mov
adc
cmp
sbb
jge
mov
sbb
stos
pop
stc
xchg
aas
out
rcrl
test
rorl
je
cmp
rcrl
jg
add
test
ss
lock
cmp
cwtl
movsb
dec
ret
bt
repz
jmp
aad
fsubrs
add
fldl
ds
insl
out
mov
in
push
sub
sbb
cmp
fcmovnb
insb
aaa
mov
aam
mov
xchg
outsl
shlb
cmp
sub
sbbl
add
sbb
xchg
loope
jge
pop
inc
mov
ss
jne
ret
jnp
mov
loope
iret
xchg
nop
or
pop
insb
pop
mov
les
jns
adc
adc
dec
out
xor
les
jl
cld
cmpsb
add
jecxz
mov
mov
loopne
negb
lcall
js
pushf
xchg
cmp
das
push
aaa
dec
xor
xor
sub
pop
std
cmpsl
pusha
out
dec
mov
movsb
stc
loopne
sahf
push
mov
adc
cltd
mov
add
lods
sbbb
inc
pop
xorb
sbb
rcrl
inc
mov
imul
sbb
dec
cltd
rclb
mov
pushf
arpl
js
push
cmp
lahf
fld1
fdivs
in
gs
inc
dec
dec
out
push
jge
pop
icebp
movsb
lret
test
xchg
pop
jg
mov
stc
call
xor
stc
dec
xchg
or
cmpsl
in
add
decl
add
pop
rol
jp
icebp
mov
fneni(8087
fildll
js
lds
jl
fcom
cmp
push
push
test
js
cmpsl
mov
sti
mov
xchg
jmp
jp
lcall
pop
mov
sbb
jns
jno
shlb
jbe
adc
stos
movsl
in
cwtl
mov
xor
pop
jnp
pop
das
lods
popf
sub
rcll
push
cmp
mov
pusha
int3
mov
shll
jb
divb
popa
jg
mov
cmp
call
mov
lds
pop
mov
lea
aam
fcmove
js
add
daa
lcall
fidivl
int3
mov
push
mov
jno
movsb
scas
bound
insl
dec
mov
mov
mov
xor
ja
sbb
mov
push
cltd
xchg
mov
push
cmp
jno
fs
outsb
fmull
imul
lea
jno
push
out
mov
mov
pop
dec
popf
loop
aam
movb
data16
out
gs
or
repnz
hlt
push
and
jl
dec
cmpl
outsb
add
out
dec
test
call
movsl
divb
pop
mov
inc
test
stc
mov
stos
imul
jecxz
inc
lret
jg
mov
out
out
mov
or
test
into
jb
lods
loop
jb
or
leave
jle
jnp
repz
repnz
and
xorl
insb
mov
pushf
nop
adc
add
in
and
in
loopne
in
push
andl
in
cs
pop
push
repz
cli
sbb
je
mov
lcall
rolb
jg
sbb
lods
packuswb
iret
adc
jb
push
sub
add
psrlw
sub
jmp
push
cmp
gs
mov
and
add
adc
icebp
dec
fbld
mov
ret
clc
rorl
loop
adc
xor
sub
dec
inc
jne
cli
dec
notb
bound
cltd
push
jo
xchg
pusha
sahf
lahf
mov
adc
xchg
adc
push
test
xchg
add
mov
rcrb
mov
int
jnp
stc
call
ret
mov
and
enter
lahf
xchg
pmulhw
cli
jle
cmp
mull
popa
inc
fstpl
cld
pop
mov
jge
push
aaa
jle
adc
loopne
mov
jns
mov
cld
frstor
adc
je
push
stos
push
aas
test
xor
cli
push
adc
inc
lcall
fadds
push
push
scas
rcl
es
sub
mov
test
xchg
pop
sub
pop
fs
push
and
jge
inc
lret
movb
mov
ltr
jmp
jae
xchg
sahf
mov
add
cmp
sub
roll
fwait
dec
loope
inc
jmp
hlt
xchg
jmp
fstpt
jnp
mov
dec
inc
mov
cmp
jbe
pop
lods
movsb
popf
fs
jmp
push
in
test
mov
daa
in
out
out
xchg
dec
or
xchg
mov
in
mov
push
insl
mov
sbb
jns
loop
cmpsl
add
sahf
xchg
repnz
jne
push
mov
pop
repz
sub
pop
scas
sbb
je
imul
sbb
bswap
pushl
rol
mov
sub
addb
aad
rcrl
xorb
adc
lret
cmp
ds
or
jnp
hlt
fidivs
mov
add
scas
pop
ret
push
push
sti
pop
nop
lea
fwait
aas
xchg
fsubs
leave
pop
les
cmp
lods
data16
jp
xchg
fsubr
scas
cwtl
dec
cmc
or
movsb
push
dec
and
xchg
cli
in
and
lods
sbb
mov
add
pop
xlat
xlat
cs
es
movsl
out
lock
ss
scas
aaa
into
adc
out
xchg
add
add
xor
pusha
lods
fldenv
push
test
adc
mov
pop
pop
arpl
pop
lock
push
dec
jbe
xchg
nop
in
mov
jg
mov
inc
stc
fwait
cs
fsubrs
or
jmp
repnz
jo
scas
das
ficompl
mov
xchg
pop
lcall
addr16
nop
xchg
testl
push
mov
and
inc
sarb
adcb
cltd
and
test
mov
add
lcall
jl
and
xchg
pop
lods
jp
cmp
gs
push
aad
test
arpl
int
dec
divb
mov
shll
popf
inc
dec
into
leave
andl
or
jae
inc
test
in
rcrb
popf
adc
enter
pop
shlb
cmp
popa
loope
cmp
repz
rcll
mov
or
sbb
lea
mov
push
mov
lock
push
mov
adc
jnp
out
fimuls
push
popa
outsl
adc
fimull
push
aam
inc
jbe
sbb
dec
repnz
fcmovb
xor
dec
jge
dec
inc
scas
dec
iret
jp
inc
pop
mov
dec
fsubrl
pop
pop
aad
mov
mov
sub
jo
and
dec
aas
jne
mov
inc
in
test
outsb
ficomps
push
xchg
pop
in
mov
inc
cmpsl
mov
push
or
dec
imul
sbb
ds
js
pop
or
int
in
sbbl
mov
test
pop
arpl
push
cmp
es
mov
nop
es
scas
or
inc
test
test
testl
adc
lock
es
adc
jae
loop,pt
push
cltd
int
mov
mov
push
or
inc
cmp
dec
frstor
leave
dec
es
or
adc
mov
fistl
cmp
and
jae
mov
dec
loopne
push
sbb
in
add
push
movsb
dec
cmp
leave
test
das
data16
call
scas
pop
das
push
sbb
sub
cmpsl
sub
adc
adc
vcvtsi2sdl
bound
cmp
xor
ja
sub
sarb
loopne
mov
xor
inc
push
mov
adc
popa
sbb
aaa
mov
mov
shl
pop
dec
lock
mov
pop
test
sub
int
xchg
pop
pop
add
mov
rcr
or
test
arpl
sub
aas
mov
mov
cmp
fmul
scas
cmpsb
push
in
movsb
loop
daa
push
jo
cmp
aam
lea
and
lea
cmp
movsl
cmc
xchg
xor
cmp
mov
loopne
addl
push
push
outsb
jo
loope
pop
sub
push
hlt
gs
xchg
xor
shll
loope
stc
or
pop
out
out
sub
xchg
xor
fmull
in
and
outsb
popa
ja
pop
les
push
dec
repnz
stos
sbb
jmp
adc
in
push
daa
sbb
lods
mov
out
jb
jns
jge
in
je
jnp
push
mov
push
aam
dec
xor
daa
in
push
test
push
mov
mov
adc
aam
mov
fwait
dec
inc
test
push
mov
stc
xlat
inc
scas
or
mov
pop
out
popf
mov
adc
or
fisttpl
xchg
adc
notl
xchg
cmp
shrl
inc
insl
jo
mov
sub
adc
push
clc
gs
rorb
les
fstl
add
je
in
insb
mov
ret
push
push
sub
xor
jae
or
sbb
bound
rcrl
jnp
test
inc
mov
sub
mov
xchg
adcl
leave
or
bound
xchg
loop
clc
and
dec
lret
push
out
cwtl
pop
in
xor
dec
sub
adc
ljmp
ret
pop
daa
gs
add
shlb
pop
mull
sbb
or
mov
and
jp
or
in
in
std
inc
xor
hlt
mov
scas
mov
int
cwtd
inc
insl
pushf
xor
mov
mov
clc
ljmp
mov
sbb
lds
mov
sub
mov
mov
fisubrs
mov
call
xor
sub
add
out
add
imul
popf
or
add
stos
dec
add
jno
lds
rcl
mov
movsb
test
cltd
sub
jnp
mov
sbb
push
xchg
arpl
add
dec
test
mov
inc
mov
and
test
shrl
cs
xor
frstor
adc
mov
mov
aaa
out
das
lock
xor
inc
insb
lods
mov
test
cmp
mov
lds
lret
cmpsl
pop
jns
cmpsl
mov
sub
xlat
inc
pop
in
icebp
fidivrs
adc
test
iret
xor
in
imul
ja
in
ja
int
aam
cltd
xor
outsl
or
add
sar
into
clc
mov
in
push
add
out
jbe
lcall
aaa
or
adc
push
movsb
imul
cmp
xor
xchg
push
sbb
int3
push
fmuls
mov
push
adc
dec
imul
cmpsb
push
mov
push
outsl
lahf
call
jl
fldl
scas
pop
mov
push
divl
lret
scas
xchg
imul
sub
out
push
lcall
add
xchg
sub
cmp
popf
dec
jg
movb
loop
cmp
xor
push
or
xchg
insl
ljmp
xchg
outsb
out
lret
mov
mov
cmp
scas
sbb
pop
out
or
pushl
jle
repz
push
mov
scas
insl
jns
push
cmp
and
test
sbb
stos
iret
cmp
fldcw
mov
ja
shrl
stc
aaa
mov
cmc
shl
in
and
lahf
cmpsb
fdivs
push
push
ljmp
hlt
imul
faddp
in
pop
aas
out
shl
add
js
inc
xchg
das
jmp
outsl
mov
out
mov
sbb
pop
pop
fisttpll
fisttpll
in
shr
xlat
adc
adc
lret
jb
fnstenv
push
add
dec
out
mov
add
jbe
mov
js
pop
shl
ds
push
xchg
sub
push
dec
xor
stos
cmpsb
test
rcl
mov
out
cld
pop
dec
pop
into
inc
cmp
gs
enter
cmp
in
pop
aas
sbb
mov
xorl
les
movsb
pop
jnp
mov
and
sti
dec
sbb
or
mov
cmp
cli
mov
xchg
mov
std
jbe
adc
jg
push
cwtl
inc
inc
inc
add
hlt
in
inc
or
pop
push
sbb
pop
enter
imul
jge
leave
inc
add
dec
pop
push
das
lods
loopne
sub
or
xchg
pushf
fsubrs
sbb
outsb
mov
xor
lea
jb
stos
in
xchg
enter
sahf
pop
les
sbb
mov
mov
mov
jp
inc
mov
or
fidivrs
incl
sub
mov
pop
cmp
repz
daa
push
cld
jno
xor
xchg
adc
fwait
jmp
in
sbb
es
aad
cmp
lea
mov
cltd
subl
je
movsb
shrb
jl
push
ficomps
mov
fwait
dec
sub
push
out
insl
clc
pop
cwtl
add
cwtl
jb
dec
lret
or
mov
mov
dec
cmp
cmp
jmp
hlt
sbb
xchg
mov
xor
sub
incl
mov
mov
mov
or
imul
mov
mov
push
loopne
bound
push
repz
mov
sub
call
cmp
divb
ret
mov
or
test
test
fsubr
or
fldcw
xchg
xor
cli
xchg
inc
fnstenv
push
sbbl
xor
out
xor
mov
scas
pop
gs
lcall
leave
push
pop
push
cmp
testb
and
stos
jno
pop
shll
jmp
cmp
or
and
dec
mov
mov
mov
scas
out
js
cwtl
lahf
inc
out
sub
xchg
stos
xchg
out
push
cli
fildl
loop
sub
popf
fwait
mov
movsb
jo
pop
push
adc
push
mov
rcll
add
add
roll
inc
mov
rclb
test
and
cmp
loope
stos
xchg
mov
jnp
cmc
sbb
mov
mov
fidivs
sub
jl
lret
mov
xchg
add
adc
sbb
xor
mov
enter
xlat
sbb
cmp
jmp
ret
jmp
insb
cmp
repz
lea
xchg
arpl
cmp
sti
sbb
pop
mov
push
mov
adcl
arpl
dec
add
dec
cmp
xorl
mov
and
int
mov
into
test
inc
jo
test
repz
xchg
add
stos
push
ja
addl
mov
pop
mov
stos
icebp
jnp
jle
xor
push
sti
sub
dec
jmp
cs
adc
push
xchg
arpl
jge
inc
sub
or
das
rolb
call
sbb
test
popa
hlt
cltd
cmpsl
pop
mov
cli
cs
cwtl
or
rcll
add
ss
pop
jae
mov
dec
les
sbb
or
cmp
sub
imul
int3
testb
jecxz
repnz
and
mov
inc
add
pop
mov
pushf
mov
test
fwait
push
mov
mov
push
jmp
iret
mov
iret
lods
cld
hlt
jno
inc
pand
out
jle
cld
and
aaa
cld
cmc
daa
dec
and
push
cmpsl
jp
shll
dec
cmp
fidivrl
and
popa
loop
jg
add
test
jmp
jle
adc
mov
test
fsubs
js
mov
xchg
movb
test
xchg
out
sub
or
sub
or
imul
int
pop
mov
std
sub
push
das
and
bound
fs
push
call
loop
jne
mov
in
pop
add
or
pusha
cmp
adc
xor
int
sub
aaa
inc
cmpsb
dec
jg
shll
inc
pop
pop
cld
inc
xor
or
int3
incl
shll
icebp
jbe
jns
pop
cmp
test
xor
adcl
lds
mov
mov
xchg
loop
xor
rcll
jne
test
sbb
sbb
lahf
cs
loop
cmp
mov
or
mov
icebp
jmp
xor
cmp
inc
int
clc
ret
jp
test
lock
xlat
movsl
fmull
gs
out
adc
fdivrl
cmpsb
mov
push
lcall
mov
add
mov
push
mov
mov
xchg
and
sub
add
lea
jl
in
add
sub
mov
fcomip
mov
or
ja
outsb
add
add
pop
adc
add
fstl
jmp
add
lcall
adc
push
daa
rorb
push
jo
adc
dec
ljmp
outsb
rcr
add
cmpsb
lcall
push
xor
dec
and
iret
cmovge
popf
xchg
pop
jbe
dec
and
mov
dec
adc
push
jae
jecxz
xchg
repz
iret
mov
jl
clc
add
sbbl
push
loop
mov
loope
jle
test
adc
push
les
cli
add
lahf
rcr
mov
and
mov
jne
loope
outsb
mov
or
cmp
sbb
movsb
hlt
sbb
test
sub
pop
jae
notl
movsb
sbb
pop
pop
dec
fs
das
push
shll
xchg
mov
mov
jns
lcall
xor
pop
popa
ds
jg
lock
sub
sub
test
fiadds
pop
movsb
into
lods
cmp
sbb
cltd
popf
push
clc
mov
ss
les
mov
je
mov
cld
cmp
push
adc
mov
in
cmp
mov
xor
fstps
push
and
int3
xchg
cmp
test
pop
pop
jb
addl
lea
xchg
lahf
inc
iret
or
or
pushf
ds
xor
add
orb
lods
push
movsb
xor
xchg
adc
imul
xor
test
sti
std
in
test
inc
jmp
jne
sti
lea
pushf
mov
test
mov
fstpt
mov
clc
aaa
mov
mov
ja
push
stos
sub
cmp
mov
test
xchg
adc
sub
mov
das
lock
sub
and
pop
shrl
pop
movsb
dec
shl
mov
push
add
push
test
jp
mov
push
hlt
fiadds
lahf
in
push
pop
mov
sbb
std
scas
push
push
push
jb
pop
mov
mov
jae
pop
loopne
cmp
pop
pusha
jecxz
test
jo
sbb
into
mov
jb
shrl
and
stos
loopne
push
inc
xchg
cmp
cmp
adc
xchg
xlat
adc
jnp
iret
jmp
mov
inc
dec
ret
icebp
aas
sbb
sahf
gs
hlt
hlt
test
rcll
jg
push
adc
cwtl
in
pop
mov
add
cltd
shl
cmpsb
sbb
cmc
xor
jl
sbb
dec
std
sub
and
cmp
xor
inc
pusha
xchg
lret
repnz
leave
and
mov
test
sub
stc
dec
outsb
nop
cld
cmc
gs
mov
clc
cmp
stos
ljmp
int3
cmp
loop
leave
fs
jo
xchg
daa
jnp
out
sub
pop
jo
and
push
shlb
jo
add
mov
dec
push
sahf
stos
jle
xchg
xor
sahf
bound
mov
in
loope
lea
rolb
or
shl
xchg
inc
cli
push
dec
jp
add
imul
inc
imul
outsl
mov
enter
lea
jo
rcrl
aaa
jmp
sbb
add
xchg
xchg
subl
jne
dec
shrl
cltd
cmp
sbb
cltd
sbb
imull
call
xchg
or
cmp
ja
lds
cmp
mov
sbb
sahf
xchg
xchg
aaa
pop
jb
outsb
xchg
mov
in
jle
or
fwait
lock
pop
outsb
addl
xchg
cmpl
ret
int3
cmp
dec
add
add
imul
xor
mov
jbe
imul
sbb
sub
mov
mov
or
pop
stos
cmp
jno
and
mov
lahf
inc
imul
lea
jns
lds
iret
pop
js
dec
ljmp
popf
sbb
and
repz
test
mov
in
stos
pop
lock
xchg
sbb
lock
in
mov
dec
gs
hlt
or
jg
xor
cli
shll
dec
clc
sahf
pslld
mov
test
pusha
push
clc
in
and
or
cmp
lahf
lea
cwtl
test
pop
sbb
push
or
lcall
fsubs
sub
mov
mov
mov
inc
in
loopne
xchg
loopne
inc
jmp
cmc
std
ja
ret
cli
push
sbbb
test
mov
cmpsb
fiaddl
dec
pusha
out
mov
lret
dec
in
add
mov
mov
inc
xor
or
jg
rorb
hlt
nop
das
test
jp
clc
in
iret
add
cmp
xchg
aaa
and
cmp
and
dec
fisubrl
push
inc
cli
mov
cmp
or
stc
push
rclb
or
mov
subl
mov
ffreep
out
ret
mov
outsb
imul
add
sbb
jp
fsts
dec
inc
dec
sbbb
test
sbb
inc
xor
xchg
push
ret
in
loope
addl
dec
test
add
mov
lds
add
mov
aaa
fldcw
jl
and
lods
adc
and
lods
xor
sarb
xchg
push
jo
xlat
add
mov
sbb
aas
jno
mov
aaa
lods
dec
add
int3
stos
test
negb
sub
cmp
sub
adc
sub
and
push
mov
outsl
mov
mov
or
push
dec
lods
negb
push
cmc
repz
mov
jno
pop
xchg
into
xchg
push
aas
int
xchg
xchg
jae
movsl
mov
adc
xchg
mov
add
add
cmpsl
insb
adc
or
popa
test
xor
xchg
adc
inc
std
imul
int3
in
or
lods
je
dec
lock
sbb
mov
jbe
stc
push
sub
fbld
loope
jecxz
dec
push
sub
add
lret
push
dec
mov
icebp
std
ret
dec
rcr
adc
stos
jne
adc
inc
jecxz
xchg
js
mov
mov
xchg
insl
dec
jae
mov
pop
fs
and
cmpsb
iret
cmc
add
mov
mov
cmp
mov
pop
neg
push
rclb
rorl
mov
ds
and
push
fdivr
loope
pushf
dec
jle
mov
in
lds
popf
jle
jge
sbb
pop
cmc
jp
and
and
sub
repz
shr
cltd
jo
xlat
in
and
test
mov
insb
cli
push
mov
int3
out
rclb
fistpll
push
push
into
sub
xchg
jl
jmp
pop
pop
insl
jmp
fsts
push
mov
movsb
into
test
rorb
mov
jne
jle
or
mov
shl
and
xchg
or
cmp
add
lock
mov
push
loope
cmpsb
jl
jns
in
or
cmpsb
mov
adc
push
adc
out
xor
js
movsl
das
loop
cmp
leave
xchg
stos
jno
xchg
xor
mov
loopne
rcl
es
or
add
repz
cmp
in
or
sbb
dec
pop
or
add
mov
ret
sbb
fistpl
inc
ds
shr
push
inc
jg
aas
push
sbb
jmp
jle
cmp
lea
inc
sub
cmpsb
call
mov
xor
and
lods
lret
scas
xchg
jne
arpl
push
xlat
cmp
cmpl
in
ds
xchg
outsl
add
inc
mul
fs
add
loope
cmp
mov
inc
adc
popf
push
arpl
push
mov
call
dec
jge
mov
test
data16
pop
mov
mov
and
cmpsl
daa
test
push
lahf
xchg
shl
xchg
dec
jl
jbe
stc
adc
test
cmp
mov
xor
jbe
pop
ss
cmp
dec
mov
inc
fisubl
scas
mov
pushf
mov
sub
scas
inc
cli
mov
repnz
jb
add
and
inc
mov
push
js
xor
cmpsl
nop
push
lret
sub
rcll
mov
push
fiadds
add
and
add
dec
adc
pop
aas
inc
xchg
rol
xchg
jmp
jle
sub
in
cmp
in
cmpsl
adc
jge
or
sub
push
lret
in
repnz
inc
adc
cmpsb
lcall
movsl
mov
repnz
sub
xchg
mov
jl
push
mov
cwtl
insl
out
loope
fstpl
lcall
adc
mov
cmpsl
mov
push
cld
pop
push
hlt
ficoml
cmp
and
inc
sub
pop
std
in
in
cmp
sbb
ret
shrl
sbb
mov
cltd
mov
add
cmp
leave
cli
jmp
imul
or
or
or
loope
dec
xchg
pop
out
add
fildl
ficompl
mov
popa
adc
push
inc
adcb
bound
call
xchg
test
jmp
or
mov
and
mov
lock
shrb
test
fs
jl
aad
xchg
mov
mov
and
cs
cmpsl
pop
js
xchg
mov
leave
stos
pop
in
add
and
and
cmp
mov
popf
jl
push
pop
sbb
lahf
test
mov
shlb
lret
out
pop
fsubp
mov
sbb
imul
mov
mov
mov
negl
dec
jp
ljmp
dec
rol
xchg
jle
loope
js
shll
jmp
into
xchg
dec
xchg
lods
fwait
aam
sbb
clc
push
adc
jae
mov
mov
scas
add
roll
dec
ss
dec
or
outsl
mov
cmp
mov
or
adc
pop
sbb
negb
bnd
mov
xchg
mov
sub
and
stos
push
or
push
gs
ds
cmpsb
inc
dec
push
repz
inc
ficoml
les
imul
jns
mov
shll
test
and
adc
das
ficoms
mov
call
lcall
mov
add
xor
ljmp
shlb
pushw
lods
dec
inc
xor
std
cltd
sub
pop
pop
or
in
nop
rcl
xchg
push
push
mov
mov
in
aas
jp
cmpl
pop
into
imul
mov
neg
xchg
pop
mov
insl
stc
ds
or
cmp
ror
hlt
aam
dec
repnz
xchg
push
in
dec
shl
or
mov
pushf
mov
dec
movd
mov
fst
sbb
aam
dec
xor
notl
in
or
xchg
out
sbb
imul
rolb
sub
hlt
jg
fwait
push
xlat
push
sub
imulb
xchg
sub
add
fcomip
push
mov
pusha
adc
sub
cmpb
cld
xlat
sub
push
and
stos
ficompl
stos
lock
jecxz
gs
add
mov
stos
inc
mov
add
into
orl
inc
test
sarl
ds
pop
sbb
pop
lods
jnp
add
lret
inc
jnp
fdivrp
cmc
xchg
mov
fsubrs
sub
xchg
add
ss
pushf
adc
cmp
movsl
xor
sbb
dec
cmc
sub
cmp
subl
cmp
les
inc
addl
pop
ror
jg
out
jae
inc
out
dec
mov
and
jo
loop
mov
lcall
pop
sub
xchg
jae
pop
push
cmp
das
jmp
jp
popw
xor
sti
ror
jl
cvtps2pd
sahf
fdivr
push
in
rolb
pusha
jge
sub
push
add
pop
lock
add
xor
xlat
mov
fstps
popf
pop
mov
mov
sub
lods
inc
int3
cmp
xor
push
mov
xor
inc
jg
loop
stc
lcall
adc
sub
scas
cmc
jne
iret
pop
xchg
mov
sbbb
cmp
mov
lcall
pop
jae
xchg
xor
je
sub
xchg
inc
leave
nop
arpl
adc
scas
xchg
dec
add
fmuls
pop
daa
pop
add
lahf
add
jae
push
fldenv
sbb
iret
jl
pop
scas
mov
lock
fnstsw
pop
cmpb
push
and
xchg
in
mov
add
test
mov
rcll
xor
es
fsubrs
les
sub
gs
in
mov
and
xor
rcll
lds
jns
insb
sub
xchg
cmp
push
lods
repnz
xor
test
ss
imul
inc
pop
dec
and
xor
das
xor
sahf
push
movsl
out
xor
out
cmp
fldl
shll
pushf
xchg
cli
jns
data16
fldcw
and
sub
imul
in
adc
rolb
lds
ret
sub
in
shll
add
outsb
push
lret
mov
adc
fwait
loope
fistps
adc
jmp
pushf
sahf
stc
mov
in
mov
jno
test
sti
mov
not
stc
lcall
push
int3
push
jle
adc
push
sub
js
gs
pop
jl
and
jae
dec
cmp
in
jge
push
bound
outsb
inc
repz
insb
test
and
xor
inc
outsl
loope
andl
enter
lock
jg
adc
sti
into
push
or
cmp
or
mov
outsb
fldl
int3
and
push
mov
jp
xchg
xchg
cmpsl
idivb
adc
mov
mov
cmc
jbe
je
lahf
cwtl
pusha
pop
enter
cmpsl
sub
fbld
mov
jecxz
push
dec
test
xchg
and
dec
fstpl
mov
lock
shll
cwtl
roll
adc
push
pop
inc
sbb
or
fbstp
cmpsl
into
mov
fsubs
mov
push
mov
icebp
cmp
push
in
lcall
dec
out
popf
pop
xchg
repz
leave
subb
xorb
mov
cmp
xor
pop
scas
jae
roll
daa
add
test
cmpl
and
mov
jae
loop
inc
add
fwait
loopne
sub
jge
stc
jno
or
adc
loopne
repnz
je
das
dec
cmpb
repnz
xchg
cs
stos
jnp
pop
faddl
arpl
push
sub
das
xor
push
mov
jl
cmp
mov
jl
mov
jmp
ss
leave
rcrl
pop
lea
xchg
cmp
cld
jmp
jae
xor
mov
inc
jb
adc
mov
fwait
push
dec
push
sub
stos
or
cs
sbb
mov
cli
shlb
iret
subl
pop
push
lcall
mov
sub
inc
std
pop
in
dec
xor
test
sbb
sub
aad
nop
shrl
andl
sub
adcl
adc
hlt
jb
out
mov
mov
into
mov
stos
outsb
jno
clc
add
pop
add
adc
cli
into
xor
nop
adcl
and
xor
xor
mov
mov
call
out
cmp
add
mov
ret
fsubl
lcall
arpl
ret
mov
dec
dec
ss
pop
xor
stc
fists
sbb
rclb
mov
out
xlat
repz
clc
push
xchg
fcompl
pop
pop
mov
add
xor
inc
lods
or
jl
push
and
inc
outsl
sub
jg
sbb
xchg
in
out
es
call
inc
int
xchg
add
mov
add
add
cmp
cli
mov
and
xor
jbe
repz
jo
test
xor
test
dec
ds
aad
jg
mov
cs
mov
pop
mov
pop
mov
dec
adc
mov
xchg
xchg
cmp
or
in
int3
pop
xor
loope
lahf
popa
call
xor
cltd
outsb
jmp
and
loopne
lcall
lahf
popf
mov
pop
int3
inc
adc
aas
mov
mov
add
iret
push
arpl
iret
pushf
cwtl
mov
arpl
test
insl
xor
mov
push
ss
loope
rorb
pop
or
scas
out
mov
inc
subl
mov
lds
mov
and
push
mov
xor
mov
iret
cmp
mov
jl
mov
push
in
pop
push
cmpsb
jecxz
dec
cmp
mov
inc
add
test
sbb
pop
test
mov
leave
mov
mov
push
lcall
mov
sbb
in
cmpsl
mov
sub
or
rcrb
mov
repnz
into
cli
jmp
mov
pcmpeqw
inc
scas
inc
std
mov
dec
orb
add
xchg
and
xor
or
pop
push
mov
or
test
iret
ja
dec
jae
jne
xchg
sbb
mov
fwait
cmp
add
repnz
push
mov
dec
aas
push
lds
add
rclb
xor
xchg
inc
add
cmc
xor
push
mov
idiv
sahf
mov
sub
insb
pop
and
fisubs
sub
xor
rolb
ret
and
add
and
cld
sbb
loope
sub
loopne
fstpt
mov
inc
cs
mov
jne
jbe
imul
cmpsb
jae
mov
and
loope
out
gs
fiaddl
sub
mov
pop
push
pop
and
addr16
rorb
data16
out
xor
or
cmp
insb
jg
cmpsb
xchg
lahf
sub
or
adc
adc
push
adc
sbb
loop
addb
add
xor
testl
cld
incl
mov
xchg
xor
or
sbb
scas
out
lcall
fcomp
rcl
sbb
test
cmp
das
inc
insl
inc
inc
pop
push
cli
sub
shrb
xlat
rcrb
orb
push
fidivrs
xor
or
addb
shrb
je
ja
loope
les
xlat
sub
cwtl
cld
mov
or
sbb
loop
pop
icebp
push
jle
loop
mov
dec
fsts
inc
pusha
or
xchg
fcmovb
test
sub
push
pop
pop
enter
mov
xchg
pop
clc
push
push
outsl
xchg
and
sub
xchg
mov
int3
movsl
xlat
cmp
call
xchg
jecxz
jbe
cmp
mov
shrb
push
loopne
cmpl
push
fmul
in
pop
cmp
arpl
pop
loop
pop
cwtl
insb
xchg
popa
out
inc
adc
int
jno
pop
mov
sbb
inc
inc
mov
add
or
xor
test
mov
es
imul
push
cltd
std
push
pop
stc
and
xchg
dec
mov
inc
pop
mov
popa
dec
dec
movsb
fisubrl
push
sub
jb
fimull
mov
push
fbld
xchg
cmp
outsb
loop
setnp
adc
xchg
mov
lcall
xchg
sub
icebp
sub
pop
sqrtps
into
scas
in
cmp
mov
outsl
movb
push
stos
cltd
cmc
fdivs
add
les
jp
mov
fs
ja
cmc
inc
and
mov
sub
sarl
dec
repz
lret
pop
imul
iret
and
mov
pusha
dec
daa
fnstsw
mov
dec
mov
and
cmpb
cld
jno
jnp
ret
icebp
fcompl
jp
std
shlb
out
sub
cmc
and
call
fsubrs
lock
aas
mov
rorb
push
sbb
and
push
mov
fidivs
jne
jl
data16
jl
outsb
lds
in
xchg
popf
push
xchg
add
dec
sbb
and
mov
pop
xchg
jle
jnp
out
mov
call
xchg
js
idivl
sbb
call
jo
inc
cmp
mov
insb
addr16
push
adc
mov
add
or
pop
push
movsl
push
push
push
cmpsb
cmp
clc
and
lea
inc
mov
and
fcmovnu
and
xor
lods
mov
cmp
lods
frstor
popf
dec
push
gs
mov
mov
sub
loop
movl
sbb
sti
insl
lock
pop
pop
mov
push
cmc
clc
xlat
dec
xor
ret
mov
inc
mov
lea
lods
cmpsb
cltd
xchg
adc
ja
jge
or
jge
jns
sub
and
roll
ljmp
test
dec
fstl
repz
pcmpgtb
aas
and
push
pop
je
sbb
mov
into
add
sub
mov
jl
les
test
lock
nop
xor
sbb
cs
sbb
insl
lahf
adc
push
mov
scas
arpl
inc
sbb
xor
jmp
jge
mov
cmp
test
gs
xor
inc
jl
cmc
jecxz
sarb
xor
andb
xlat
pop
xchg
lods
sub
push
je
sbb
ficoms
and
jl
add
icebp
xchg
mov
subl
fcmovbe
filds
push
mov
inc
pop
push
adc
pop
mov
xor
or
es
pop
sub
in
push
adc
in
adc
js
fstl
sbb
rclb
aad
rcrl
jge
ss
jns
push
stc
sub
jg
mov
mov
aas
jmp
and
ficoml
fsubs
add
xchg
imul
cmpsb
cmpsb
or
pop
adc
jmp
ds
clc
ljmp
mov
int
jp
gs
scas
ja
lahf
pop
rclb
lahf
ret
out
aas
dec
out
and
push
pop
clc
pop
push
sarl
ds
adc
push
inc
push
stos
jnp
and
add
mov
pop
jb
push
fwait
int
sti
mov
dec
je
mov
xor
cmpsb
ds
je
iret
aam
cld
cmpsb
inc
or
int
inc
cmp
push
int3
int3
iret
cld
mov
fsubrl
add
outsb
ja
and
pop
mov
and
pop
dec
pop
pop
aad
mov
push
pop
dec
jbe
dec
ja
and
add
loopne
and
cmp
xchg
add
imul
jl
scas
imul
dec
or
adc
mov
mov
cmc
add
sti
or
push
je
loope
insl
out
sub
int3
es
mov
push
cltd
jae
rcrl
popa
mov
cmp
jae
adc
fwait
js
ret
adc
stos
lds
call
and
shrl
sbbb
inc
pusha
dec
stos
or
jl
cmp
out
andnps
cld
fsub
lcall
xchg
and
dec
cwtl
adc
subb
or
mov
mov
pop
add
xchg
and
ss
repnz
adc
je
xor
insl
push
out
enter
ljmp
sbb
insl
sub
cmp
jmp
or
iret
and
adc
pop
dec
popl
stos
sbb
dec
xchg
mov
mov
xor
inc
xchg
mov
or
rcll
push
inc
call
sbb
xchg
cld
lahf
mov
orl
inc
cltd
iret
lcall
imul
mov
dec
pinsrw
cli
cmpsl
mov
out
fsubp
or
frstor
cld
or
xchg
rcrb
outsl
lods
xchg
je
pop
addr16
pop
sbb
in
aam
andl
call
adc
test
mov
ljmp
add
in
jnp
lcall
repnz
imul
lret
faddp
xor
push
push
fnstcw
pop
pop
cmp
jge
lret
mov
pop
push
lret
dec
cwtl
xor
lret
cmpsl
test
fwait
or
pop
and
addl
int3
insl
add
mov
xchg
mov
xor
pop
test
push
aaa
dec
in
jb
inc
sbb
mov
insl
lret
mov
mov
test
or
sbb
xorb
lret
cmp
imul
test
or
pusha
jl
dec
testl
cmpsb
xor
je
ja
test
inc
and
fcomp
mov
dec
sbb
push
popf
xchg
test
in
or
xor
lods
std
xor
sbb
rolb
sub
scas
decb
test
popa
ret
std
test
pop
je
cli
jns
push
sti
xchg
dec
int
mov
xchg
in
mov
and
insl
aas
jmp
jg
dec
loope
shlb
and
scas
cmpsl
out
out
mov
adc
andb
call
mov
jb
int
outsb
xchg
test
out
xchg
lcall
adc
out
fisubrs
mov
push
test
mov
aas
lcall
adc
repnz
jbe
dec
rclb
pop
add
or
dec
mov
hlt
jnp
into
jecxz
nop
inc
test
mov
test
and
push
xor
arpl
inc
out
fwait
adc
in
stc
stos
in
mov
inc
test
and
imul
fs
mov
repnz
pop
and
ja
adc
mov
les
sbb
jle
sub
dec
pop
xchg
movsl
and
jbe
rolb
inc
push
mov
in
cmp
mov
mov
scas
xlat
int
jnp
push
jmp
lods
aaa
int3
stos
fisubs
or
adc
out
push
mov
je
popa
xchg
es
cmp
jg
int
out
cmpsl
int3
sub
cmp
and
and
xor
mov
cs
sbb
in
lret
push
loopne
mov
or
pop
adc
inc
mov
add
mov
lods
mov
inc
les
loop
xchg
pop
adc
dec
mov
daa
mov
and
inc
pop
std
out
jbe
inc
jae
cmp
jbe
scas
and
xor
and
scas
xor
or
loopne
int3
mov
scas
pop
shlb
mov
adc
loop
into
xor
cwtl
cltd
mov
fstpt
dec
fsubl
cmpsb
movsb
push
sbb
pop
aam
outsl
in
icebp
inc
lcall
sti
add
dec
push
cmc
sysenter
int3
js
dec
or
pusha
inc
jle
adc
test
add
inc
bnd
repnz
test
in
shll
into
fdivs
cmp
inc
nop
loop
or
dec
jmp
lea
sbb
jne
xchg
lds
sbb
insb
and
push
push
stc
insl
and
ret
divl
cmpsl
mov
rcrb
out
jo
fsubr
test
ror
sub
aam
mov
cmpsl
add
notb
loop
cwtl
decb
adc
fs
xor
stos
mov
add
fs
jg
sub
push
adc
inc
shl
dec
lea
leave
inc
inc
inc
add
and
shr
in
lods
adcb
xchg
andb
in
cmpsl
or
dec
or
and
inc
daa
pop
xchg
sub
test
lret
div
ja
imul
xchg
inc
lret
and
dec
test
inc
faddl
into
dec
dec
cmpsl
inc
repz
jg
rdmsr
out
pop
cmpsl
inc
daa
sbb
aam
and
mov
leave
xchg
pop
lods
data16
leave
xchg
and
notl
mov
popa
adc
dec
cli
stos
cs
cmp
daa
data16
add
in
test
xor
jecxz
xchg
or
scas
or
pop
and
pop
jle
gs
lcall
shrl
dec
cmpsb
pop
dec
mov
cmp
out
push
pusha
out
cmp
dec
je
sti
cmp
imul
mov
sub
lret
sbb
gs
shrl
inc
insb
mov
lock
push
xor
xchg
addb
sbbb
cmpb
ret
stos
popf
push
adc
test
out
in
dec
loope
add
push
dec
dec
int3
fwait
in
stos
push
mov
inc
sbbb
icebp
imul
xchg
ja
cmp
movsl
xor
fs
loopne
or
pop
in
je
outsl
push
xchg
push
sbb
xor
ja
pop
call
jle
inc
sbb
inc
pop
sub
scas
and
in
cmp
pmaxsw
pop
std
adcb
sub
test
sub
xchg
xchg
or
movsl
adc
push
inc
dec
push
sub
jecxz
or
fildll
pop
jne
add
orb
bound
sbb
imul
in
lea
dec
cmpsb
test
or
pop
cmp
jle
mov
inc
mov
sub
or
push
mov
nop
dec
cmp
pusha
cwtl
mov
das
dec
xlat
stc
in
loopne
push
into
sub
pop
jnp
test
adc
adc
mov
xor
stc
mov
pushf
mov
and
ret
out
call
pop
scas
xchg
mov
mov
add
fsub
lcall
arpl
inc
bound
and
xchg
test
jne
jmp
sti
imul
loope
xchg
mov
add
outsb
push
xchg
fdivs
xor
jb
outsb
es
cmp
outsb
fcomps
sbb
jb
mov
sbb
mov
push
push
std
scas
adc
andl
mov
push
repz
outsl
xchg
sbb
pop
rorb
pop
cmp
nop
xchg
mov
scas
xchg
aas
fnstcw
inc
adc
cld
cmp
adc
jecxz
daa
xor
in
push
xlat
fiaddl
xchg
xchg
mov
push
add
cmp
push
dec
fnstsw
push
mov
xchg
add
in
push
movsb
mov
rcrb
adc
xlat
push
pusha
pushf
std
cmpsl
dec
push
fs
sbb
cmp
lret
nop
ret
inc
jns
xchg
mov
stc
xchg
or
outsl
sub
out
in
imul
sbb
loop
jb
mov
pop
pop
adc
cmpb
pop
hlt
jae
cmp
loop
push
or
mov
mov
jnp
fistpl
inc
in
stc
repz
movsl
mov
pop
lahf
xlat
scas
sbb
mov
xchg
aas
and
xor
jg
jb
and
dec
sub
js
outsl
or
add
xor
outsb
mov
xchg
es
or
cmpsb
xchg
adc
mov
mov
sub
comiss
test
jecxz
add
push
xor
insb
pushf
out
fsubrp
fstpt
test
dec
aaa
test
push
cltd
jmp
mov
inc
je
ds
dec
cmc
pop
cmpsl
fwait
lods
fwait
lods
movsl
nop
orl
add
iret
sbb
loope
loopne
pop
and
out
clc
jb
mov
jl
leave
mov
xor
enter
pop
scas
add
lahf
insb
lcall
rol
cli
fcmovnbe
aaa
popa
mov
aad
inc
sub
dec
xor
hlt
outsl
dec
rcr
sub
sbb
add
mov
jno
aad
ja
shl
into
inc
mov
inc
loop
lods
push
inc
or
imul
lret
adc
pop
jae
pop
add
pop
loope
mov
dec
mov
stos
ret
aaa
sbb
loop
out
xchg
push
mov
cmc
inc
jge
mov
aas
push
ja
aaa
jg
add
imul
nop
stc
aaa
pop
popl
dec
add
sub
jmp
add
jecxz
mov
ss
push
into
adcl
sbb
fdivr
not
pop
repz
sub
ja
xchg
mov
xor
sbb
inc
sbb
sub
mov
lods
jmp
add
xor
stc
push
pop
mov
xchg
mov
cmp
je
daa
add
push
out
mov
push
ret
aad
addb
insb
dec
fnstsw
xchg
jno
gs
arpl
push
mov
psadbw
test
je
add
icebp
jb
mov
iret
cmp
repz
mov
aam
pop
into
inc
push
mov
mov
rolb
xchg
jbe
cmp
jno
pop
jge
mov
pushf
or
push
scas
leave
jns
cltd
xlat
jle
mov
mov
sub
outsb
adc
ret
pushf
inc
pop
jmp
push
bound
cmpsl
in
jb
stc
pop
xchg
adc
inc
test
jle
loop
rorl
out
pop
mov
dec
loope
test
fcoms
stc
jle
mov
test
cmp
fistl
lret
mov
std
xchg
test
out
xorl
sub
div
mov
xor
iret
in
mov
adc
lock
cld
insb
aad
xor
insb
aaa
mov
pop
dec
jnp
jp
jae
aam
add
sub
push
push
jb
stos
in
and
das
jl
adc
sbb
nop
inc
xchg
pop
inc
loope
roll
je
pop
and
xlat
add
pop
mov
jnp
sahf
xchg
call
mov
mov
pop
adc
fwait
movsb
jl
sbb
push
jb
fcmovne
movsb
repz
lods
and
out
jge
push
je
rol
and
js
xchg
dec
pop
jl
dec
hlt
pop
mov
sarb
and
movsb
subl
mov
pop
mov
test
les
push
add
rorl
idiv
mov
mov
in
jg
out
adc
pop
mov
jmp
pop
or
fdivl
jle
aam
lret
adc
in
mov
or
or
mov
pop
rcl
and
pop
and
enter
inc
aam
jns
and
or
fisubl
in
testb
jbe
sbb
xchg
ret
and
testl
pushf
lret
inc
mov
dec
lea
movsl
xor
into
in
adc
addr16
bound
int
mov
xor
jle
sub
fdivrs
sbb
pop
and
push
shll
pop
lds
cmp
je
lret
aaa
out
fildll
fsubrs
je
outsl
push
int3
stos
cwtl
cmpsb
int
rorl
pop
or
dec
add
rclb
pop
es
fstpt
xor
xor
lods
or
stc
jge
pop
mov
xchg
das
cmp
push
mov
sbb
test
stc
xchg
jno
sub
pusha
movl
loope
data16
pop
cmc
push
bound
mov
mov
and
loopne
test
jp
in
stos
daa
inc
push
data16
push
xor
sarb
sarl
pop
xchg
dec
int3
mov
das
roll
call
stos
jae
and
jb
add
inc
lcall
jp
adc
pop
push
adc
cmp
imul
ret
sbb
cmp
mov
insb
jg
loop,pt
sbb
jb
mov
mov
push
arpl
pop
insb
adc
mov
rorl
or
arpl
out
lahf
addr16
pop
test
inc
jae
adc
sub
mov
jle
push
dec
outsb
std
aam
imul
mov
mov
or
and
and
cmc
test
xchg
dec
xchg
cmp
shlb
mov
jo
mov
mov
lcall
jo
dec
pop
icebp
bound
js
notb
sbb
dec
xchg
fs
sti
lock
mov
pop
adc
and
dec
inc
js
push
mov
xor
sub
roll
xor
pop
sbb
movsb
cmp
cmp
or
mov
incb
shrl
sub
and
fcomip
mov
ja
shlb
into
scas
inc
cmp
dec
aad
or
cmp
int
cmp
fsubrp
dec
add
push
enter
cmp
add
scas
lret
add
add
and
das
sbb
push
and
mov
aad
lds
ljmp
jb
sahf
fisubrl
mov
pusha
add
call
xor
adc
push
push
add
jle
fdivr
lcall
loop,pt
sub
cmp
out
sbb
imul
jmp
imul
xchg
or
adc
jp
cmp
and
pop
loop
xchg
daa
adc
loopne
mov
jno
jae
xor
out
mov
jg
sbb
bound
in
push
pop
push
inc
lcall
and
adc
mov
out
mov
cmp
jnp
pusha
add
mov
in
es
mov
rclb
les
inc
flds
inc
in
testl
data16
sub
cmc
jl
iret
fcmovne
jg
dec
testl
aas
lods
cmp
test
cmc
push
aam
pop
adc
push
pop
cwtl
mov
outsb
dec
adc
xorb
into
sbb
test
inc
fstpt
pop
sbb
push
int
lahf
popa
es
mov
iret
xchg
ss
mov
jnp
mov
mov
lret
fs
arpl
call
and
push
pop
stos
and
xor
dec
lret
es
mov
mov
stos
mov
xor
adc
cmpsb
pop
xor
shl
jne
sbb
je
loop
add
inc
fwait
jbe
sbbl
std
in
cmpsb
pop
jns
xchg
dec
ficompl
mov
mov
sub
gs
xor
push
mov
lcall
notl
pcmpeqd
test
cmp
out
jg
repnz
call
add
outsb
loope
icebp
mov
jnp
push
and
inc
inc
sub
test
lds
jns
in
iret
adc
dec
aas
dec
lcall
ret
notb
dec
leave
add
loopne
cmp
shl
loopne
nop
mov
adc
dec
dec
dec
out
fmulp
pop
jbe
lret
xor
jnp
repnz
cld
adc
cli
dec
xchg
leave
and
cmpsb
aas
or
or
push
push
incl
cmp
aad
stos
cmp
mov
push
add
inc
jo
in
out
xchg
fld
adc
mov
inc
xorb
adc
lds
push
mov
mov
or
out
sub
mov
cmp
es
ret
test
inc
pop
adc
leave
mov
iret
popa
xor
or
pop
shlb
mov
and
fisubrs
sub
cwtl
iret
fistpl
cmp
cmp
ja
insl
pop
ret
cli
lcall
mov
fs
adc
pusha
popf
xor
mov
sbb
and
dec
xor
xchg
repnz
mov
js
cltd
push
fnstsw
imul
jae
adc
push
mov
pop
fidivs
lods
aad
push
push
inc
sbb
leave
sub
in
les
stos
mov
mov
push
mov
add
push
inc
aad
xor
into
mov
bound
jecxz
sbb
pop
sbb
cmp
loop
add
xchg
lods
rolb
or
push
sub
push
stos
sti
push
xchg
jnp
jmp
push
inc
jne
add
mov
ljmp
lret
insl
adc
sub
popf
pusha
insl
sub
sbb
cmc
lock
xlat
sarb
fsts
shlb
sub
push
mov
jecxz
sbb
pop
ret
or
xor
les
inc
sarb
sub
adc
adc
push
lds
insb
ds
ja
or
scas
cmp
push
stc
stos
lds
div
push
cmp
jge
pop
inc
dec
dec
mov
push
shll
pop
leave
lods
fmull
ret
mov
and
test
iret
and
lea
stc
mov
fs
out
aaa
or
sti
dec
mov
test
icebp
mov
push
fsts
aad
call
pop
pop
cmp
in
lret
push
pop
repnz
test
jo
in
add
xor
xchg
xchg
sbb
and
lods
sbb
cmpsl
lock
hlt
data16
daa
je
std
sbbb
mov
mov
aad
push
jbe
cs
cli
mov
sub
dec
test
pop
arpl
jne
sub
fcom
mov
or
pop
jmp
xor
rcrb
lahf
mov
sahf
das
inc
jns
mov
mov
popa
push
sbb
leave
mov
inc
insl
xchg
mov
stos
pop
cmp
bound
inc
xchg
sub
dec
cmpsl
xchg
outsl
shll
mov
ss
std
push
jge
inc
dec
xor
xchg
cmp
inc
les
mov
or
mov
in
sbb
jle
dec
fnstsw
outsl
pop
jl
js
adc
adc
call
xchg
mov
lcall
imul
jmp
jmp
fiaddl
aam
xchg
ja
mov
add
movsb
mov
xor
and
xor
sbb
dec
cwtl
sbb
testb
or
jbe
adc
insl
dec
sub
mov
xchg
push
sbb
lahf
inc
xchg
jge
scas
mov
mov
pop
xor
es
cmpsl
push
jp
add
fnstsw
pop
ret
add
js
les
or
imul
mov
jns
in
sbb
fistpl
push
and
gs
sahf
mov
out
jge
push
and
das
xchg
push
inc
rcrb
push
js
sbb
mov
and
dec
pop
pushf
addr16
lcall
iret
popa
lods
cli
fistpl
rorb
or
push
out
xor
scas
mov
sbb
test
test
movsb
add
xchg
rcrl
out
lahf
xchg
pop
je
sbb
movntq
xor
xorl
push
jns
inc
jo
dec
push
push
cmc
cwtl
inc
or
add
xchg
push
cwtl
fildl
stc
mov
les
inc
mov
and
fs
movsl
repnz
in
mov
pop
sti
lcall
sub
ret
fadds
mov
mov
cs
and
in
leave
push
adc
subl
sahf
pop
jns
mov
add
jg
xchg
popa
lret
orl
and
inc
jns
jne
leave
loop
fisubl
adc
fsubrs
mov
scas
mov
mov
scas
dec
mov
xor
add
pop
std
mov
jp
push
sbbb
push
add
dec
ret
inc
pop
adc
xchg
lods
popf
jp
imul
mov
mov
mov
je
push
and
loope
push
or
es
mov
iret
sub
add
push
call
sub
xor
inc
lods
jo
ret
pop
dec
int3
stos
fdivrl
bound
xor
sti
or
pushf
pushf
faddl
jns
clc
jae
cmp
lahf
inc
icebp
je
mov
adc
jbe
cmp
in
cmp
inc
adc
iret
push
lods
jg
stos
inc
enter
ljmp
or
les
mov
fcom
sahf
sbb
adc
sub
ljmp
xchg
cmp
into
scas
addr16
sbb
sub
jl
xchg
test
call
lret
test
jge
jae
sarb
adc
xchg
js
sub
in
sbb
fcomps
fs
into
mov
push
mov
jge
jp
add
arpl
ficoms
pusha
adc
sub
add
fcom
jbe
jns
test
les
jnp
inc
mov
push
lret
push
rcll
int3
insb
aam
repz
mov
add
stos
jecxz
jge
inc
inc
fnsave
sahf
les
xor
jne
jp
outsb
mov
mov
sub
xlat
scas
scas
ret
call
ficomps
push
in
out
lea
adc
mov
sarl
dec
pop
movsb
pop
pop
fsub
sbb
mov
mov
rcll
cmp
mov
arpl
adc
les
stc
push
jnp
pop
jns
stos
loope
incl
repz
mov
xor
cmpsb
cwtl
subb
psraw
jmp
outsl
lds
aad
mov
into
and
mov
push
mov
jbe
inc
movl
mov
dec
pop
int3
jae
in
inc
loop
addr16
pop
xor
push
push
mov
movsl
jge
sub
in
cmp
into
test
lods
pushf
sbb
adc
rcrb
test
pop
inc
stc
shrb
dec
stos
movl
adc
outsb
jle
aam
rcrb
adc
fisttpl
and
adc
in
xor
pop
mov
mov
and
movsb
dec
xor
loope
cmp
xor
pop
mov
enter
outsl
icebp
xchg
jmp
jp
cmp
ljmp
mov
mov
shll
imul
test
pop
add
dec
loop
push
jbe
sbb
aaa
adc
sub
xchg
movsb
cmp
lcall
mov
push
fistl
lret
inc
jmp
add
enter
and
xchg
aaa
lcall
imul
aad
mov
mov
dec
sahf
mov
ljmp
cmpb
xchg
cmp
insb
scas
scas
js
cmpsb
pop
or
roll
or
and
movsl
add
push
adc
pop
addr16
test
push
push
daa
js
or
push
mov
or
or
setp
mov
jae
or
mulb
aas
mov
data16
adc
inc
ficompl
pop
loope
xchg
sub
push
pop
xchg
call
pop
xor
testb
orb
loope
sub
xor
inc
sub
sar
pusha
mov
cmp
int3
push
pop
jae
mov
ficomps
inc
add
sbb
enter
out
or
sbb
sti
sub
sub
add
cmpsb
push
push
subb
jmp
andl
addb
push
sbb
fnsave
and
push
dec
lcall
popf
mov
out
mov
test
jno
je
test
sarl
add
inc
mov
mov
inc
mov
inc
addr16
jge
into
xor
push
and
icebp
mov
ds
push
bound
mov
push
push
mov
loope
rcrl
push
pop
and
sub
and
stc
leave
decb
sub
fidivrs
enter
dec
push
lret
dec
mov
push
dec
mov
sbb
call
test
icebp
inc
add
mov
and
push
mov
icebp
mov
dec
in
fiaddl
enter
cmp
adc
stos
sbb
mov
stos
sub
icebp
xchg
mov
push
mov
jnp
ljmp
cltd
xchg
jmp
fwait
pop
inc
jae
popf
jo
pop
and
popa
sbb
in
popa
or
pop
pop
test
or
inc
sbb
sub
mov
cwtl
cwtl
sub
out
mov
in
stos
inc
jo
mov
inc
mov
and
les
js
repnz
xchg
lock
scas
inc
mov
clc
stos
cmp
mov
std
add
jg
jno
call
lds
mov
dec
loopne
jbe
rcll
pop
mov
inc
xor
jge
xchg
or
inc
pop
and
and
lcall
adc
xor
dec
mov
sub
adc
and
out
mov
fcomps
push
add
adc
sahf
xlat
sbb
dec
negb
dec
hlt
mov
mov
xchg
cli
mov
and
cmp
lock
roll
add
add
les
xchg
mov
sub
roll
fistpll
and
mov
fsubl
out
jge
shrb
push
jno
xchg
rcl
outsb
lret
lds
iret
dec
pop
inc
out
out
sbb
ret
cmp
pop
mov
push
cmp
sub
lea
in
sub
dec
xchg
lock
call
rolb
outsl
les
enter
enter
push
ficomps
mov
cli
ljmp
das
jmp
xlat
sub
and
sub
insb
loop
stos
fsts
cmp
mov
in
xlat
push
sti
jnp
xchg
outsl
ret
aad
or
out
dec
repz
cmpsl
or
dec
lret
out
daa
sub
push
jbe
fadds
xor
aas
into
aad
add
fwait
dec
stos
sub
push
jno
out
xlat
movsb
es
jnp
clc
dec
sbb
es
dec
dec
mov
stc
or
test
and
push
pusha
mov
in
sub
xchg
inc
jmp
fcmovb
outsb
xchg
mov
ljmp
test
inc
test
push
scas
and
mov
in
outsb
mov
push
push
sbb
cmpsl
bound
pop
pop
sarl
stc
xor
sub
sbb
pop
fdivrl
xor
push
or
mov
dec
xor
cmc
out
push
xchg
inc
in
ds
push
pop
xchg
inc
shll
sub
xor
js
mov
bound
scas
insl
pop
adc
fcomip
push
jo
pop
lret
cmp
xchg
out
push
mov
add
xor
sbb
outsl
push
jae
js
loopne
ljmp
pop
dec
xorb
testl
test
stc
fst
mov
add
mov
jae
shlb
jns
fdivs
sbb
dec
nop
loopne,pt
push
mov
pop
jge
pusha
popa
insl
mov
insb
lahf
lahf
out
repz
or
ja,pn
lock
shl
gs
ret
sub
push
nop
in
ds
repz
adc
lcall
pop
pop
pop
mov
test
mov
sub
push
jb
repnz
add
mov
cltd
xor
xchg
mov
push
sub
sahf
or
pop
hlt
xlat
aas
das
jnp
jecxz
jnp
adc
in
add
leave
lds
xchg
xor
add
js
cmp
adc
jno
add
fwait
aas
les
sub
xor
nop
xchg
mov
test
add
cmc
out
movsb
pop
pop
lret
mov
ficoms
cmpsl
push
pop
shl
testb
xchg
rorl
pop
aas
or
xorb
dec
push
fs
aas
mov
push
aaa
cwtl
mov
test
jmp
and
jno
lods
outsl
xchg
ss
lds
adc
xchg
xor
mov
push
push
push
data16
mov
pop
arpl
iret
paddsb
inc
call
jecxz
cmp
adc
xchg
sbb
cmc
gs
cmp
mov
add
sbb
pushf
xor
push
ret
out
xlat
shl
popf
push
cmp
fcoms
popa
sbb
clc
pop
cmp
push
imul
mov
pop
add
add
sbb
fwait
outsb
movsl
int
test
incl
fidivl
mov
in
sbbl
aaa
rorl
scas
pop
cmp
loope
test
push
push
movb
push
adc
aam
or
lds
cmp
das
pop
mov
mulb
mov
and
sahf
je
movb
xchg
js
jae
xor
out
iret
mov
inc
add
into
in
mov
lret
jmp
mov
jbe
xchg
daa
call
cld
dec
cmp
add
jmp
clc
jle
mov
repnz
mov
dec
lods
nop
aad
rol
cs
movsl
mov
push
addr16
lret
and
mov
add
push
insb
sub
fwait
stos
in
xlat
fdivrs
enter
sahf
out
call
dec
push
stos
add
add
adc
add
rcll
xor
mull
dec
pusha
add
adc
inc
pop
cmp
or
cmp
daa
lods
add
and
inc
jg
pop
and
jp
adc
test
fwait
je
adcb
xchg
jo
lods
pop
fcomip
mov
pop
inc
jge
icebp
movsl
in
or
push
push
jne
popf
pop
pop
dec
mov
mov
cmp
jne
rcrb
outsl
mov
and
fcmovbe
jp
cmp
cmpsb
push
sub
xor
add
or
mov
sahf
cmpl
mov
cltd
rclb
add
adc
mov
xchg
out
mov
mov
rclb
push
push
xchg
lods
cli
mov
inc
add
cmp
mov
jge
and
out
push
enter
add
xorl
xchg
inc
dec
dec
daa
inc
in
std
lock
push
mov
sub
push
popa
sub
inc
mov
cmp
mov
inc
pop
insl
out
cmp
mov
cmp
inc
sbb
push
int3
add
sub
jnp
and
in
xor
jae
mov
sbb
arpl
xor
pop
test
jp
inc
xor
out
inc
cmpsb
fstpl
fwait
repz
enter
jbe
sbb
mov
jg
lods
test
jl
addr16
add
mov
lret
sti
ja
sbb
add
shrb
sbb
faddl
mov
pop
mov
out
out
xchg
aad
cs
icebp
mov
inc
fs
pop
movsl
adc
sbb
xor
stc
rcll
mov
and
xor
and
dec
adc
pop
add
insb
pshufw
fimull
add
aad
mov
hlt
push
stos
enter
stos
fmuls
mov
xchg
popf
adc
pop
push
adc
and
lret
sub
jmp
mov
fsubl
mov
or
dec
push
inc
xlat
aas
cmpsl
test
sbb
out
fcmovbe
cmc
lret
sbb
es
and
aaa
pop
and
mov
pop
mov
dec
mov
sub
lcall
dec
mov
mov
es
enter
xchg
sub
or
push
mov
adc
dec
movhps
xor
cmp
insl
leave
lcall
or
es
dec
dec
int3
jmp
jb
ljmp
in
setb
or
push
dec
scas
out
jmp
test
fnstenv
loop
aad
push
and
into
shrb
mov
pop
sbb
je
loope
mov
hlt
ljmp
add
repz
xchg
cmpsb
movsl
ljmp
sbb
and
cltd
sahf
sbb
xchg
pop
xlat
cmp
in
testb
sbb
lock
xchg
insl
push
xor
mov
xor
jmp
mov
ja
imul
sbb
jbe
sbb
or
inc
pop
icebp
push
imul
inc
or
mov
movsl
lods
daa
addl
adc
test
ret
in
or
leave
adc
jle
mov
cmp
pop
arpl
mov
sahf
mov
xchg
push
xor
cltd
lods
push
push
inc
mov
pop
es
nop
jae
xor
mov
and
cwtl
lds
sub
int3
mov
dec
jo
sbb
in
std
rdpmc
lock
or
mov
sub
xchg
push
and
pop
and
push
mov
fs
jle
addl
hlt
inc
imul
mov
add
into
lea
jno
in
insl
stos
leave
mov
lcall
movsb
in
xchg
lahf
xorl
inc
mov
push
loop
fiadds
push
mov
pushl
add
jmp
mov
xor
pop
adc
in
fimuls
fwait
loope
icebp
shlb
xchg
in
jo
mov
aad
jg
and
inc
cld
lea
fwait
repz
in
daa
and
fwait
add
push
inc
gs
test
mov
mov
call
popf
dec
add
inc
jb
dec
cmp
jle
lods
xor
mov
sub
fnstenv
outsb
xor
ss
js
repz
mov
or
inc
adc
jmp
lods
pop
mov
call
mov
mov
lods
sbb
or
or
mov
stos
dec
dec
push
arpl
add
mov
add
cltd
nop
jl
aad
out
sub
cmp
jg
push
sub
js,pn
xor
out
out
pop
dec
inc
loop
outsb
data16
es
dec
sub
push
mov
stos
fsubrl
sahf
mov
xor
push
jmp
xchg
xor
xchg
mov
mov
mov
xor
mov
dec
clc
mov
addr16
dec
dec
jmp
jno
or
cmpsb
ljmp
cmc
pop
call
repnz
inc
gs
or
jno
adc
mov
ja
jb
pushf
jnp
jecxz
push
pop
aad
jge
xor
cmp
and
inc
jo
sbb
or
fisubl
test
pusha
lret
xorb
sub
aad
in
ljmp
rol
fstpl
sub
push
push
pop
xchg
adc
cwtl
mov
stos
jl
dec
pop
flds
push
jmp
adc
sub
orl
mov
sbb
or
mov
pop
dec
dec
popa
pop
es
add
loop
inc
iret
inc
int3
icebp
popa
push
pcmpeqw
mov
add
loope
adc
test
xchg
jns
adc
adc
pop
ja
mov
dec
jne
mov
mov
scas
adc
cmp
mov
cld
cmp
cmc
fsubp
pop
or
sub
cmp
mov
xor
xor
dec
cmc
cmp
sub
lods
xor
xor
and
and
sub
adc
sub
scas
hlt
ror
rcll
xor
ljmp
repz
add
subb
loope
lcall
popa
jp
stc
mov
arpl
adc
or
xor
sti
mov
loopne
loopne
mov
fdivrl
cmp
repz
xor
movsb
or
xchg
mov
clc
sahf
xlat
js
jbe
rclb
and
pop
stos
lods
stos
out
jecxz
xor
insl
jae
enter
xor
push
adc
pop
sahf
push
inc
dec
fdivrl
fsubrp
int3
mov
popl
inc
ja
popa
cmc
addr16
cmp
cwtl
aam
sahf
repz
adc
imulb
mov
cmp
jle
sbb
dec
adc
jo
cmp
add
in
dec
xor
mov
imul
push
or
shrl
outsb
dec
out
xchg
je
add
dec
ja
dec
in
jno
inc
pushl
outsb
out
inc
mov
aas
xchg
inc
in
popf
xor
in
das
sarl
mov
and
add
scas
aad
dec
lret
lods
jo
daa
pop
adc
push
pop
movsl
mov
popf
inc
popf
iret
std
into
outsb
sbb
lea
pop
aas
dec
divb
clc
lcall
fdiv
add
lds
scas
push
fcomp
dec
addb
sti
out
mov
mov
test
mov
add
xchg
cmp
jge
in
shll
inc
and
sarb
call
mov
call
sub
jl
mov
iret
fisubl
fstps
adc
popa
lods
std
lock
pop
inc
sbb
mov
xchg
pop
mov
jo
shrb
lods
loop
insl
or
das
out
lret
lret
sbb
push
out
pusha
add
mov
lds
stos
or
test
sbb
inc
imul
ret
and
movsb
jmp
jnp
pop
mov
mov
push
push
or
jns
mov
lret
xor
add
insb
mov
xchg
aas
push
dec
xchg
mov
mov
mov
dec
dec
cwtl
cmpsl
mov
dec
orl
or
mov
mov
adc
std
scas
adc
hlt
cmpsb
shlb
mov
sbb
hlt
outsl
leave
push
hlt
sub
fcompl
les
jge
ret
jp
cmpsb
push
repz
xor
dec
and
cmp
pop
mov
out
add
sbb
aas
xchg
jb
sub
inc
mov
test
xchg
addb
stos
jecxz
and
scas
addr16
in
mov
push
push
adc
es
in
add
mov
imull
mov
fldt
repz
mov
xchg
arpl
dec
lods
cmp
test
jg
and
dec
test
popf
add
push
adc
pop
push
es
xor
ja
ret
inc
add
cld
mov
adc
cli
sbb
sti
lcall
xchg
pop
test
sbb
jp
scas
lahf
fbld
adc
cmpsb
jle
mov
mov
adc
mov
loope
dec
call
notb
dec
mov
mov
cmpsl
sub
out
je
cmp
leave
lods
iret
sub
pop
mov
nop
push
orb
int
xchg
xchg
xchg
add
xlat
xor
icebp
lds
mov
test
pop
jno
addb
jmp
or
mov
push
dec
repz
mov
xchg
lods
pop
jle
push
outsl
dec
xorb
add
cwtl
decb
sahf
movsb
mov
xor
dec
std
fiadds
lcall
out
popl
xchg
mov
add
pusha
test
push
jmp
fnsave
mov
rolb
cmpb
sahf
xor
test
call
adc
mov
pop
mov
sti
and
add
sarb
iret
pushf
dec
mov
adc
lahf
pop
add
cmp
lea
mov
mov
jo
icebp
in
fcoml
cmp
imul
xchg
xchg
cld
mov
out
push
loop
dec
rol
mov
cmpsl
imul
out
fadds
mov
dec
ror
loop
insl
inc
and
or
or
xor
push
gs
mov
outsb
or
stos
cmp
add
lds
mov
xor
cmp
arpl
loopne
mov
push
mov
sbb
loopne
ss
aaa
xor
xchg
das
jmp
jb
mov
es
es
adc
jmp
decb
adc
lret
mov
dec
mov
stos
xor
js
in
mulb
and
jo
and
or
sbb
inc
enter
sub
bnd
jmp
mulps
jnp
jae
arpl
clc
imul
lods
mov
jnp
pop
push
and
pop
mov
or
pop
inc
lods
popa
jg
into
jnp
imull
xor
push
mov
stc
imul
dec
cwtl
lea
dec
jnp
dec
mov
cltd
cmpsl
dec
and
popa
xor
stos
xchg
push
mov
dec
repnz
sbb
stos
jle
sub
or
stc
cmp
dec
shlb
push
int
cmp
and
cltd
and
sub
pop
mov
ja
lock
lret
cltd
add
scas
jge
cmpsb
es
sbb
aaa
dec
cwtl
mov
mov
sub
xor
pop
iret
dec
xor
inc
stos
mov
dec
mov
pop
in
and
in
lcall
mov
jge
and
inc
faddl
out
xor
and
repz
lods
xor
iret
lahf
cmpsl
inc
and
jbe
cwtl
pusha
sub
xchg
jge
sub
sbbb
sbb
ljmp
adcb
mov
dec
push
outsl
xchg
adc
adc
imul
sbb
push
loop
filds
jmp
hlt
repz
dec
rorb
push
arpl
adc
mov
and
and
stc
frstor
out
test
jo
mov
loop
imul
pop
fcoml
mov
int3
in
sub
cmpsl
repnz
pop
je
imul
mov
dec
popa
clc
dec
xchg
negb
fists
or
fs
lea
out
push
push
sahf
push
xchg
sbb
mov
jl
ret
test
fwait
xchg
fnsave
fwait
lret
mov
cmp
cmpsb
test
bound
fimuls
mov
in
outsl
cwtl
fistps
std
pop
je
pop
out
mov
mov
out
push
bound
loopne
enter
cmpsl
std
xchg
xor
sahf
lahf
mov
sbb
fldt
shlb
cmp
inc
or
sti
mov
xor
int3
gs
pusha
test
stos
jmp
mov
dec
jmp
cld
and
adcl
fists
js
push
push
cmp
mov
sbb
outsl
fsubl
shl
in
std
nop
out
data16
or
dec
mov
sbb
mov
clc
fs
or
bound
loope
xchg
and
pushf
or
out
test
lret
int
fbstp
cld
pop
lret
sti
dec
add
xor
daa
xchg
and
sub
frstor
aaa
xchg
or
sub
xchg
scas
push
pop
xchg
popf
imul
ss
test
xor
jne
dec
mov
adc
sub
jne
xorb
arpl
negb
cmpb
inc
inc
in
cltd
sbb
sbbl
cmc
or
cs
lods
add
xchg
sub
dec
imulb
jecxz
fisubrl
addr16
popa
fidivrs
dec
or
xchg
and
mov
and
mov
sub
test
jecxz
dec
mov
push
test
shlb
sbb
mov
sbb
fildl
inc
icebp
cmp
orl
xchg
enter
xchg
ret
add
leave
imul
jge
nop
fdivl
into
push
add
xchg
icebp
imull
imul
int
mov
ljmp
das
js
inc
lea
xor
insl
in
std
sub
sbb
lret
mov
pop
xchg
lret
mov
or
data16
push
out
cmpsl
push
lret
clc
sub
or
pop
pop
mov
daa
nop
lahf
xor
mov
push
inc
sbb
lret
ja
stc
fmul
and
adc
xchg
xor
pop
stc
pop
dec
divl
xchg
mov
data16
cli
xchg
iret
out
stc
mov
xchg
dec
lret
repz
and
enter
mov
mov
xor
lret
mov
mov
xlat
sub
shlw
mov
hlt
orl
ret
arpl
pop
mov
ja
mov
mov
adc
in
jge
je
and
jmp
push
mov
cmpsb
stos
pop
or
dec
in
xchg
int
and
sub
lret
mov
mov
pop
push
xchg
mov
stos
pushf
add
sbb
loop
push
cwtl
cli
xlat
std
push
imul
jno
push
outsl
pop
mov
mull
pop
scas
inc
adc
dec
bound
scas
insl
sub
ljmp
clc
pop
push
xor
or
or
fiaddl
cmpsl
lock
mov
out
dec
std
pushf
mov
fcomps
mov
jno
icebp
inc
add
cmpsl
notb
and
or
fwait
and
mov
or
mov
dec
xor
pop
jecxz
mov
cmp
sub
push
das
nop
lret
mov
push
iret
push
test
insb
sbb
arpl
mov
pop
dec
inc
mov
sbb
adc
adc
pop
lea
mov
stos
jge
mov
jne
incb
insb
xor
pop
stos
add
lcall
mov
cmpsl
mov
mov
or
test
xor
xchg
mov
mov
sahf
and
push
inc
dec
jb
outsl
xlat
test
pop
scas
rorb
movsl
jne
inc
jmp
fmuls
and
scas
xchg
adc
mov
mov
dec
pop
dec
aad
rcrb
stc
imul
les
ret
sub
jmp
inc
popf
aas
push
xor
aad
push
jno
lcall
mov
in
and
jnp
out
sti
loop
xchg
pop
push
in
fs
movsl
out
fildl
xchg
dec
aad
repz
mov
xchg
pushf
pop
mov
test
xlat
aad
cltd
xchg
out
sub
pop
push
jge
mov
shll
std
xor
and
sub
out
testb
inc
scas
inc
jnp
aas
jmp
test
jns
test
sbb
pop
push
xchg
mov
int
cmp
xchg
mov
js
inc
out
ret
out
mov
sbb
xor
xchg
and
loope
jmp
inc
jp
icebp
push
pop
aas
mov
mov
and
cmp
jle
out
imul
xor
push
cs
sahf
icebp
insl
jp
scas
cs
and
popf
sub
out
push
mov
pop
ret
add
or
repnz
or
cld
hlt
or
lcall
cmc
or
stos
push
mov
bound
popa
jno
pop
mov
jbe
inc
adc
cmp
add
xchg
ret
lods
xchg
inc
aad
into
xor
imul
xlat
jae
mov
lods
pop
push
cs
out
or
jae
adc
lret
test
out
mov
jne
data16
or
mov
cmp
imul
fwait
cmp
hlt
or
mov
cmp
sub
mov
xchg
ret
je
adc
dec
bnd
sbb
sbb
ror
dec
lods
popa
xchg
icebp
jle
xor
mov
imul
jns
cmc
add
stos
andl
pop
or
push
lcall
scas
cmp
mov
mov
pop
xor
jecxz
divb
in
cwtl
cld
fisttps
xor
daa
cmp
jb
loopne
push
mov
imul
clc
scas
inc
push
stos
xor
xchg
pop
dec
popa
xor
inc
das
pop
cltd
jl
mov
lds
rorl
pop
sbbb
test
aad
out
loope
popf
xor
cmp
pusha
stos
mov
popf
sarb
jne
cld
add
jecxz
ljmp
sbb
adc
jb
icebp
xchg
mov
rcll
mov
inc
pop
test
dec
xchg
jbe
xor
sbb
jmp
cmpsl
and
pop
jmp
inc
xor
mov
push
cs
insl
push
fadds
dec
jno
push
inc
mov
mov
je
sub
cwtl
lea
sti
hlt
sub
adc
add
cmp
and
push
hlt
dec
shr
andl
adc
iret
push
insb
fistpll
add
xchg
test
std
adc
loopne
icebp
lea
mov
mov
mov
or
loop
call
loopne
cmp
icebp
out
xchg
or
cmc
imul
jg
pop
mov
xor
pop
xor
push
jmp
loopne
sbb
shrb
xlat
lret
sub
inc
orl
adc
jmp
push
test
ds
loope
scas
aas
repz
jbe
dec
popf
rclb
test
aas
and
iret
adc
push
pop
add
pop
inc
mov
hlt
push
cli
loop
inc
ss
mov
icebp
insb
inc
push
jae
stc
cmp
test
xor
push
jp
xchg
popa
imul
les
push
xor
out
inc
ss
cmc
cmp
sbb
xchg
sbb
pop
cmp
lahf
sub
sub
js
lret
test
das
and
cmp
mov
or
jns
insl
inc
mov
fnstcw
pop
pushf
mov
pop
je
push
cli
sarl
cs
xor
sub
gs
in
mov
mov
rcr
sbb
push
mov
inc
mov
fwait
test
push
out
mov
sbb
xor
bswap
ror
rorb
pop
in
lds
bound
in
adc
mov
cmp
je
mov
dec
jmp
lds
cmc
loope
rorl
aas
je
push
call
popa
xchg
push
repnz
sub
loopne
or
fs
divb
sti
and
dec
mov
and
out
mov
pop
lret
cmp
mov
sub
push
lret
jb
xchg
and
pop
fmulp
cmp
push
xchg
dec
mov
sbb
push
test
out
sub
fbstp
mov
mov
clc
push
mov
loopne
outsb
scas
sbb
movsb
jae
loop
jno
xlat
lahf
int
jae
pusha
fsub
notb
xchg
in
dec
push
mov
adc
rcrb
mov
dec
stc
mov
in
push
pop
les
fisttpl
stos
push
insl
in
xchg
mov
cmp
inc
jo
mov
mov
aas
or
shrl
in
in
inc
andl
sub
lahf
les
xor
pop
cltd
fisttpll
mov
jmp
pop
cmpsb
xchg
outsl
mov
pop
push
stc
add
or
pop
jge
pusha
outsb
lret
movsb
repz
stc
mov
pop
push
sbb
lcall
cwtl
aaa
xor
mov
sub
cmpsl
pop
ja
sbb
outsb
ja
jg
xor
jge
or
jg
sub
in
add
int
repnz
aas
js
imul
cltd
lahf
lcall
dec
aas
hlt
sahf
sahf
fisttps
or
adc
ljmp
int3
jge
xor
add
inc
inc
int
cmp
frstor
dec
cvtpi2ps
lahf
loope
ljmp
push
lds
int3
adc
insl
or
add
add
adc
cmp
pop
push
bound
pop
in
dec
pop
inc
xor
or
ss
xor
dec
movsl
xchg
das
xchg
and
faddl
test
mov
fdivl
dec
sub
jle
mov
les
ror
sbb
or
add
cmp
ret
daa
lahf
mov
pop
stc
push
or
fidivl
dec
jns
sbb
or
xor
cmc
out
stos
jp
sti
inc
xor
jmp
add
or
xlat
pop
lcall
sub
call
fs
repz
movsl
cmp
sbb
jl
test
std
lret
imul
insl
popa
mov
adc
lcall
ja
dec
pop
dec
inc
and
mov
jl
test
and
pop
jecxz
dec
sti
fcoml
xor
sbb
imul
roll
mov
hlt
call
jb
xchg
mov
ljmp
aaa
out
inc
sbb
xchg
imul
sub
dec
adc
cmp
jge
dec
adc
lret
sbb
sub
add
pusha
sub
dec
loope
leave
and
decb
jno
rcrb
loop
pushf
iret
je
lods
sarb
cmp
sub
jg
xor
hlt
fbld
iret
insl
xor
fisttpl
arpl
xor
lea
call
pop
push
and
lcall
shlb
ds
hlt
mov
loop
sbbb
mov
cld
add
push
fs
int3
xor
movsb
ja
sbb
subl
pusha
shll
inc
jp
dec
les
out
push
mov
mov
fdivrp
mov
jecxz
sti
in
cld
xor
jo
out
add
mov
sbb
lret
xchg
mov
sar
in
fisttpl
aaa
arpl
std
stos
les
test
inc
int3
bound
xor
xchg
cwtl
sbb
lds
or
xchg
out
push
rcrl
in
sub
fdivl
pop
dec
mov
cmp
aas
or
rorb
in
jns
popa
sbb
push
mov
fldenv
sub
pop
jnp
insb
cli
test
push
bound
sbb
mov
add
cmp
in
push
jmp
cmp
in
pushf
adc
loope
push
lret
xchg
push
cmp
push
aaa
cmp
add
bound
les
adc
daa
cmp
inc
mov
xchg
lret
jmp
fidivl
lds
cs
aaa
testl
or
inc
mov
xchg
push
mov
and
pop
mov
rcrb
std
hlt
mov
decl
xlat
fsubs
scas
rcrb
mov
aas
fsubrl
icebp
movsb
jge
adc
shlb
repnz
push
jp
xchg
out
decb
subb
add
jae
jecxz
rcl
rcrl
push
mov
xchg
ds
adcl
push
sub
scas
enter
stc
dec
movsb
add
cs
add
fwait
push
dec
inc
mov
aad
and
add
mov
xor
aam
pop
mov
imul
dec
mov
jo
mov
sub
scas
nop
les
roll
daa
ljmp
addb
bound
mov
out
cmp
lds
imulb
lods
aam
cld
iret
sub
les
aam
in
and
adc
rorl
shl
cmp
scas
fldl
lret
mov
and
push
add
mov
mov
mov
movsb
sub
lea
jae
aaa
fs
movsb
cs
adc
cwtl
adc
pushf
into
scas
xchg
arpl
mov
test
mov
pop
dec
mov
rep
mov
cmp
mov
push
mov
test
enter
adc
xor
push
leave
xchg
pushf
repnz
in
push
test
movl
adc
call
push
push
mov
lods
jg
std
iret
mov
test
xchg
xlat
lcall
fcom
sbb
mov
mov
cmpsl
bound
shll
dec
mov
mov
cmp
inc
jecxz
adc
pusha
sub
sahf
mov
jle
pop
or
out
loope
ljmp
pop
in
lret
sbb
xchg
in
in
mov
in
call
bnd
mov
adc
cmpsb
add
mov
in
pop
out
pushf
imul
aam
ja
pusha
imul
mov
and
inc
in
or
xchg
int
mov
jmp
mov
dec
mov
arpl
cmp
sti
lock
out
shrl
jmp
dec
scas
iret
push
das
std
call
jnp
inc
jo
fnstenv
outsl
outsl
cmp
rcll
add
fs
add
add
arpl
push
insl
or
imul
sub
mov
push
loopne
push
mov
rolb
test
inc
xor
cmpsl
dec
jnp
mov
aas
inc
jae
xchg
leave
scas
dec
sarb
movsl
into
push
xchg
pop
mov
mov
ja
add
dec
sarb
ds
je
pop
cmp
jl
add
adc
or
mov
in
pop
push
pop
pop
shll
pushf
inc
sbb
sbb
cs
pop
dec
push
sbb
mov
dec
test
out
pop
mov
jnp
jns
cmp
cmp
data16
jmp
add
sti
mov
xlat
pusha
repz
mov
inc
lock
mov
sbb
pushf
pop
test
mov
lods
fwait
xor
xor
inc
sti
inc
sbb
movsb
aaa
iret
inc
mov
push
inc
call
or
xchg
mov
addb
mov
and
mov
jle
shlb
cld
and
lds
sub
sbb
stc
xchg
jb
movsl
push
stc
out
xchg
xchg
enter
jae
testl
xchg
leave
pop
cli
jge
jl
push
cmp
add
adc
xor
repnz
mov
push
xchg
xchg
jns
inc
and
sahf
scas
int
outsb
pop
into
or
jb
sbb
orb
and
enter
out
or
mov
and
mov
lock
int
xor
imul
pop
in
fists
lock
push
imul
ret
xor
xchg
flds
fs
in
test
jno
inc
mov
andb
ror
xor
fwait
jle
adc
jp
and
jecxz
dec
imul
jmp
repnz
stos
pop
inc
xchg
inc
or
dec
inc
sar
mov
inc
aam
add
shlb
repz
inc
mov
pop
cmp
iret
inc
push
mov
lods
push
mov
xchg
das
pop
xchg
mov
xchg
cld
sub
mov
scas
aas
cltd
jg
or
out
dec
or
xlat
pop
cmp
jns
pop
cwtl
cli
nop
aaa
jge
lahf
sub
pop
fld
lahf
cmp
jg
pusha
push
mov
jns
inc
cmp
adc
int3
call
cmpsb
shll
cli
stos
fwait
jmp
sub
lock
mov
adc
mov
inc
xlat
pop
imul
fs
test
add
ljmp
add
cld
rol
cmp
push
int
mov
mov
popf
inc
test
arpl
push
inc
inc
sbb
rorl
nop
push
dec
jmp
repnz
add
jno
daa
and
cmp
mov
in
fucom
inc
sbb
add
fldenv
and
test
jns
mov
int
roll
sbb
xchg
cli
jge
cld
lods
lods
lods
dec
push
sbb
xor
pop
outsl
push
jae
aaa
in
jno
fwait
icebp
inc
add
pop
enter
clc
xor
sub
pusha
jl
aas
paddsw
dec
mov
xor
pop
inc
imul
jnp
outsl
fs
adc
popf
jle
std
jns
gs
jg
xor
adc
jge
mov
jns
lea
lds
inc
lock
mov
push
inc
dec
jns
and
stc
daa
imul
pop
add
jecxz
cwtl
mov
fs
mov
std
mov
lret
push
pop
mov
aam
out
sbb
jb
pushf
push
dec
leave
dec
movsb
arpl
push
mov
addr16
push
lcall
jmp
loope
andb
ret
mov
movaps
ljmp
dec
call
xor
cmp
pop
jecxz
inc
jecxz
shl
popa
scas
mov
jnp
mov
sbb
daa
and
es
adc
sbb
mov
sar
leave
repnz
push
cmpsl
fstps
ja
in
dec
jb
pop
sahf
sub
jl
cmpb
js
inc
scas
mov
inc
sti
ja
int
xchg
cmp
cmp
push
jb
pushf
mov
ds
daa
mov
mov
in
push
push
xor
add
sbb
test
mov
imul
sub
vhsubps
inc
inc
aas
mov
gs
jl
adc
or
or
pop
or
mov
in
jecxz
cmp
and
lret
add
cmp
es
add
sub
jecxz
in
cs
jae
iret
or
sahf
pop
popf
cmpsb
fcmovbe
push
scas
sbb
xor
mov
xchg
mov
test
xchg
test
outsw
push
fisubrl
cmp
bound
cli
mov
sub
fs
xor
cmp
jns
jno
mov
cmc
fmuls
icebp
and
adc
in
add
mov
movsl
fldl
shrb
add
dec
mov
es
push
gs
cld
outsb
lcall
int
in
cli
mov
gs
std
sub
and
divb
in
popa
addb
jbe
gs
sahf
in
jns
scas
adc
sahf
mov
sbb
or
lods
and
and
xor
fucomip
fistl
cmp
nop
sbb
pop
mov
in
xchg
sbb
in
dec
mov
cs
mov
stc
xchg
insl
inc
lock
jmp
push
fldl
ljmp
aad
add
mov
cmp
xor
and
xchg
fidivl
ds
push
cmp
sub
insl
pushf
dec
ds
xlat
adc
std
rcrb
cmp
mov
inc
mov
sub
dec
push
repz
scas
push
test
pop
xor
xchg
mov
cld
pushf
je
insb
pusha
int3
aas
pusha
mov
lahf
push
cmp
jg
leave
lods
dec
mov
fnsave
jbe
cmp
out
jg
pop
adc
lods
pop
push
fwait
arpl
and
pop
mov
pop
sbb
xchg
adc
mov
adc
lods
loope
push
mulb
xorl
scas
adcl
stos
jmp
insl
data16
ficoms
xor
xlat
jno
into
jmp
xchg
lea
ss
sbbl
mov
orl
loop
int3
inc
mov
mov
inc
fcoms
jo
in
in
mov
ret
add
cmp
stos
or
inc
jl
in
nop
stos
icebp
dec
mov
test
and
lds
or
in
ljmp
mov
jge
stos
mov
pop
sbb
cmp
mov
xchg
insl
call
out
out
mov
stos
add
std
xchg
fwait
ret
rorl
imul
aas
fcmovnbe
lcall
jmp
inc
fildll
mov
test
sarl
mov
insb
data16
push
or
enter
xchg
dec
jg
adc
pop
in
lods
jne
mov
cmpsl
lods
inc
jne
jo
and
data16
dec
jecxz
fcomps
loop
and
lods
mov
movsb
mov
mov
negb
testb
xchg
pop
sarb
pushf
jbe
fists
xor
jns
push
imul
xor
call
inc
sub
je
xlat
pop
insb
lahf
dec
mov
pop
cmp
bound
push
sub
xchg
add
int
or
and
and
xchg
repnz
jg
jg
lods
into
lcall
scas
push
insl
rcll
rclb
imul
inc
inc
icebp
pop
mov
add
and
jge
and
dec
ss
mov
cmpsb
or
xchg
push
mov
and
repz
xor
push
mov
cmp
cs
mul
enter
daa
mov
mov
or
data16
inc
pop
scas
incb
jp
fistpl
inc
xor
cs
rclb
mov
cwtl
adc
decb
popf
fcompp
stos
pop
sub
jl
push
xchg
es
out
dec
xor
push
in
inc
adc
mov
fstpt
call
filds
out
cs
pop
mov
mov
loopne
in
xchg
push
in
shl
cltd
xchg
and
test
cwtl
ljmp
xchg
stc
mov
cmp
fsubl
sar
push
push
pop
subb
fists
inc
mov
jbe
xchg
or
cmp
cld
mov
sbb
jg
xor
sti
mov
imul
mov
sbb
pop
push
jbe
jmp
or
xor
cmp
lods
sahf
addb
sub
push
xchg
mov
popa
in
outsl
inc
lds
hlt
js
push
out
in
clc
ja
aam
mov
add
mov
add
push
jp
dec
xchg
pop
pop
add
sbb
cmpsl
sub
insb
xor
sbb
or
add
pop
sbb
cltd
outsl
mov
stos
mov
addb
lcall
leave
cmp
addr16
sbb
add
add
mov
mov
mov
fs
sbb
lods
lods
jns
lods
jecxz
adc
or
pop
out
test
mov
xor
dec
or
loopne
push
lock
pusha
cmpl
xlat
icebp
adc
jg
aaa
pop
adc
mov
into
outsb
imul
loopne
cmpsl
shll
sbb
cmp
popa
xchg
cs
jae
mov
fstps
movsb
fldt
lea
jne
out
dec
push
inc
add
and
inc
push
fidivs
and
lahf
cli
mov
cmpsb
sahf
mov
xor
xchg
jp
clc
and
aas
inc
int3
jg
cmpsb
sarb
movsl
lahf
jg
cmp
xchg
jmp
pop
add
lret
push
pop
out
pop
aas
sbb
and
test
in
mov
jge
sti
js
lahf
xchg
enter
add
sti
mov
mov
je
les
add
jb
dec
and
rol
push
xchg
jbe,pt
mov
pop
repnz
aam
or
icebp
das
in
in
xorl
int
or
nop
add
in
lret
and
xchg
xor
dec
adc
loop
inc
fadds
aas
xor
mov
jge
icebp
out
data16
cmpsb
orb
out
jae
repnz
push
fidivs
mov
lahf
jns
cmp
mull
rol
stos
lods
out
addr16
xor
push
iret
pop
jae
int3
push
pop
cs
cli
dec
sub
adc
lret
xchg
fimull
cltd
lea
xchg
mov
shll
scas
fs
jbe
xor
adc
pop
fidivs
xlat
jae
sbb
push
push
inc
movsl
addr16
lds
pop
xchg
into
in
cmp
adc
adc
sub
inc
mov
aaa
mov
cli
fildll
bound
lock
push
hlt
cmpsb
jb
mov
daa
mov
bound
cmp
sahf
lret
movsb
sbbb
dec
stos
insl
into
inc
popf
pop
es
xchg
repnz
inc
xor
push
stc
mov
aas
loope
pop
mov
pop
jmp
xor
aam
xchg
sti
sarl
dec
cwtl
insl
nop
outsl
imul
div
sbb
test
dec
cmp
iret
mov
push
pop
and
cmpl
fiaddl
cli
dec
jb
add
mov
push
and
xchg
mov
xchg
mov
xchg
push
push
repz
sbb
sbb
aam
testl
imul
or
fists
fldenv
adc
test
adc
addr16
mov
aam
sbb
push
jmp
sarb
mov
jmp
xchg
and
inc
xchg
inc
je
into
lods
scas
ret
pop
stos
das
das
jle
pop
insl
push
or
dec
jnp
data16
sbb
cs
fcoms
push
jmp
insb
add
sahf
in
outsl
jmp
cmp
add
ret
test
pop
inc
dec
push
divl
xchg
stos
sbb
cmp
icebp
pushf
mov
sub
fldt
aas
jne
push
add
imul
insb
loope
sbb
add
mov
std
roll
mov
xor
dec
dec
jo
lret
lods
and
or
insl
dec
jb
outsb
push
out
mov
and
mov
add
aaa
movsl
das
mov
mov
lahf
insl
in
cmp
lret
lods
test
xchg
cmp
dec
and
dec
pop
cmpsl
adc
sbb
sub
or
mov
and
jae
adc
aad
and
test
and
pop
out
imul
je
push
hlt
pop
repnz
jp
aad
sbb
adc
inc
pop
adc
push
gs
test
cli
lret
push
mov
cmpb
mov
or
dec
cmp
cmp
add
mov
mov
clc
push
test
xor
daa
dec
std
xor
scas
stos
sbb
call
xchg
bound
xchg
xchg
mov
cmp
cwtl
aam
fchs
jmp
adcl
lods
mov
shrb
cmp
sbb
push
lods
cmp
ret
xchg
dec
mov
test
and
into
mov
pop
xlat
fstpl
sub
pop
sub
xchg
add
or
jmp
adc
sti
fisubrs
gs
outsb
and
mov
bound
jbe
add
shlb
popf
sti
sub
into
lds
cmp
std
pop
es
adcb
xor
mov
add
mov
jecxz
cmpsb
movsb
xchg
stos
cs
popf
pop
scas
lods
lahf
or
outsb
es
and
popa
pop
xor
icebp
jne
adc
pushf
add
pop
adc
dec
mov
and
jge
and
inc
test
lcall
rorb
jae
mov
and
lret
mov
xchg
push
mov
loopne
or
outsl
jo
sbb
push
addl
lods
jmp
sbbb
pop
int
das
movsb
mov
movsb
and
mov
fcmovu
xor
sbb
int
pusha
push
cwtl
lds
aam
adc
mov
push
inc
xchg
add
lret
popf
inc
mov
hlt
jb
xor
push
out
xchg
pop
fidivrs
push
push
cmc
inc
lods
jmp
adc
sarb
cmp
les
push
inc
jmp
cmc
sbb
stos
jg
jb
dec
data16
outsb
mov
push
fmuls
cmp
addl
xchg
add
mov
sub
bound
js
sti
les
fildll
xchg
push
sub
pop
daa
les
stc
adc
lds
push
cltd
ds
in
loope
shrb
ret
jne
mov
leave
repnz
jl
sbb
and
sbb
mov
mov
test
pop
scas
mov
test
xor
das
out
rorb
xchg
jecxz
lock
loop
stos
or
xchg
out
adc
inc
out
out
sti
mov
stos
imul
aaa
mov
mov
inc
cmp
or
ficomps
hlt
cli
insl
popf
cmp
inc
lret
movsl
inc
mov
lea
lds
jecxz
test
insl
insl
addr16
mov
cmp
movsl
lret
dec
movsb
shlb
add
stos
int
add
pusha
jb
xchg
sbb
test
dec
in
cmp
xor
enter
xchg
dec
subl
cld
cmpsb
xchg
insl
jne
dec
es
jnp
fisubrs
and
cmp
or
sbb
popa
mull
push
bound
adc
push
sub
sbbl
inc
imull
dec
scas
mov
ss
in
xor
jbe
sub
push
nop
xchg
mov
push
xor
and
sbb
xchg
xchg
mov
sti
jmpw
addr16
jle
xchg
mov
push
mov
sbb
ror
pop
push
aas
out
push
js
inc
adc
icebp
mov
mov
insl
adc
and
xor
push
mov
cmp
dec
jb
sub
mov
xorl
ljmp
imul
dec
cmp
incb
and
inc
int3
mov
cmpsl
jg,pn
sbb
stc
dec
mov
pop
sbb
addl
dec
pop
sbb
lods
cld
lea
sbb
push
sbb
mov
add
jno
push
xchg
jno
je
aad
cmp
movsb
jge
rclb
hlt
shll
push
rcll
push
jne
inc
hlt
ja
mov
inc
movsl
mov
aas
jne
cli
stc
adcl
xor
or
jg
xor
or
jecxz
inc
fsubs
sub
and
inc
pop
mov
out
dec
dec
dec
xchg
rep
mov
sbb
mov
and
lcall
bnd
movsl
adc
lret
iret
add
aad
push
hlt
push
add
rcr
adc
popf
divb
fucom
dec
popf
xor
inc
orl
mov
sbb
mov
imul
daa
sbb
movsl
push
shll
loop
es
pop
cli
cmp
mov
inc
leave
imul
mov
mov
aaa
jb
mov
iret
sub
pusha
sar
xor
push
enter
push
jmp
inc
shll
addl
cwtl
adc
orl
jmp
dec
jmp
push
fwait
xor
lret
inc
xchg
inc
cmp
xchg
mov
repnz
cmp
rol
iret
or
mov
shrl
or
and
cmpb
and
in
aas
das
mov
xchg
data16
push
xor
pop
test
jbe
adc
jecxz
test
lret
lcall
mov
fidivs
add
mov
xchg
mov
fcoml
mov
pushf
pop
insb
decb
jae
enter
ret
in
rcrb
jne
adc
mov
scas
repz
cli
push
mov
adc
inc
or
dec
ljmp
mov
stos
add
xor
push
add
sbb
insl
sti
sbb
and
pop
mov
fdivs
ret
test
int
xor
insb
sub
dec
cli
test
cmp
inc
inc
pop
out
fwait
enter
push
cltd
push
repz
rcll
in
mov
stc
mov
mov
push
jo
rol
xchg
pop
push
sub
xor
sub
jge
mov
out
cmc
dec
or
idivb
js
repnz
mov
arpl
orb
xchg
in
xchg
adc
jle
lea
mov
cvtps2pd
mov
jo
or
inc
stos
nop
lods
cld
inc
aas
subb
repnz
into
insl
xor
addl
fimuls
xchg
vucomisd
jo
lea
loope
adcl
xor
aad
imull
les
cmp
movsb
push
push
cmp
sbb
add
cmpb
jmp
nop
lret
scas
repnz
jmp
mov
cmp
mov
fldenv
adc
fwait
push
loop
add
dec
sub
outsl
mov
xchg
in
xchg
push
xchg
mov
jp
pushf
and
mov
cwtl
cmp
mov
jp
and
dec
test
je
fstl
jne
inc
and
dec
adc
inc
inc
loope
xchg
mov
cmp
sbb
mov
out
filds
fwait
les
inc
dec
ficoms
dec
xlat
push
repz
popa
mov
cmp
je
imul
jmp
mov
xchg
testw
syscall
pop
je
mov
subl
dec
add
shll
xor
adc
jp
xor
inc
jmp
out
mov
aam
or
pop
pop
shrl
in
xor
in
sahf
cmp
and
adc
ja
pop
xor
or
test
pop
call
cli
mov
dec
jno
pop
rcrl
inc
pushf
jns
scas
push
in
in
sarl
sub
xchg
in
and
jecxz
addr16
sahf
push
lahf
ljmp
shr
push
add
data16
push
xor
mov
inc
mov
push
and
hlt
xchg
fs
cmp
mov
sbb
push
sub
fcomps
out
sarb
adc
add
push
mov
clc
hlt
xchg
in
fnsave
iret
fcmovnbe
xorl
stc
cmpsl
pusha
cltd
ljmp
lds
aaa
adc
andl
mov
call
call
leave
out
jae
add
pop
xchg
xor
pop
mov
sbb
imul
jns
das
imull
movsl
xchg
add
call
mov
xchg
shll
insl
or
or
testl
daa
mov
imull
mov
xchg
xor
xor
ficoms
es
inc
iret
pushf
push
dec
aaa
ss
insb
mov
xor
xor
imul
insl
les
bound
or
popa
mov
sub
dec
jne
pop
sub
pop
in
push
mov
popa
fmul
mov
ljmp
test
jmp
cs
add
pop
psubw
rorl
jbe
xor
test
jne
lods
and
xchg
mov
rcl
inc
sub
push
repz
and
or
int
mov
dec
test
mov
fistps
xor
and
pop
repnz
jae
popf
les
inc
xchg
decb
push
cmpsb
popf
lds
scas
pop
lea
add
push
fwait
push
jl
fstpt
push
pop
jge
mov
push
sub
cmp
repnz
lds
push
mov
push
jno
test
cmpb
mov
push
dec
sbb
ds
push
pop
flds
mov
xor
ret
jo
push
inc
push
addr16
scas
dec
fs
sub
scas
mov
imul
push
mov
sbb
xor
fldenv
or
loope
mov
fwait
lea
rcrb
dec
dec
mov
daa
dec
sbb
push
std
inc
scas
pop
mov
sbb
pusha
jno
sub
daa
int3
mov
or
dec
mov
inc
and
push
mov
inc
adc
gs
aam
jne
lods
in
test
jmpw
cmp
xchg
lds
pop
pop
xor
jge
fisttpll
orb
cmp
mov
stc
cltd
sbb
xlat
xor
adc
stos
shl
scas
sti
out
xchg
cmp
notl
dec
sub
mov
ljmp
mov
inc
add
in
mov
jp
add
jns
adc
divb
add
add
bound
push
jl
outsb
sbb
xchg
je
jmp
inc
orb
cli
clc
lods
ss
sbb
and
mov
stc
call
fiaddl
ja
out
mov
in
enter
cmpsb
fisubrs
add
push
dec
push
xchg
enter
scas
jp
fstpl
pop
push
sar
mov
cmpsl
ficompl
jmp
inc
jge
and
orb
cmc
xor
cli
iret
fsubrp
mov
xchg
sbb
and
cmp
xlat
rcrl
sub
pop
mulb
mov
psubsb
sbb
sub
bnd
movsl
or
es
cs
add
mov
push
mov
cmp
sub
sbb
movsl
daa
in
mov
xor
mov
xchg
xor
insl
push
stc
lods
jns
mov
mov
adcb
sahf
in
cmp
lcall
aaa
out
fs
pop
push
data16
sbb
in
xchg
imul
push
ljmp
scas
mov
imul
into
and
sub
xor
push
stc
cli
out
cmpb
ljmp
out
pop
jbe
inc
sti
pop
add
pop
je
sub
cmpsb
lret
xchg
out
popa
push
sub
je
test
add
jmp
push
lahf
cmp
in
dec
sbb
dec
push
pop
adc
outsl
cwtl
mov
jmp
dec
add
cmpsl
push
mov
insl
xor
dec
xchg
repz
mov
dec
xchg
test
mov
mov
ret
inc
or
jmp
or
fildl
mov
jbe
jns
adc
fnsave
icebp
cvtps2pi
mov
orb
xchg
push
and
dec
fcomi
sbb
ja
push
adc
incb
and
rcll
imul
jp
mov
ss
cld
popf
imulb
cli
cmpsl
cmp
jns
into
add
add
int3
xchg
cmp
stc
pop
sub
out
inc
loopne
sub
ret
pop
daa
cmp
xor
mov
and
mov
jecxz
ja
jne
je
jb
stos
mov
inc
adc
imul
jnp
cmpsl
shll
cli
xor
push
or
mov
mov
int
jecxz
sub
or
mov
xor
repz
test
cltd
ljmp
mov
and
sbb
lds
xchg
add
movsb
and
pop
aaa
push
xor
stos
xor
sub
cli
mov
test
cmpsl
mov
inc
shrl
ret
movsb
icebp
aas
testb
xor
or
inc
and
cmp
xchg
xchg
lea
sbb
cmc
fisttpl
sub
sub
mov
mov
iret
add
sub
lods
mov
xchg
sbb
push
scas
popa
fwait
ret
jmp
in
add
ljmp
sub
ljmp
pop
add
adc
push
outsl
jbe
cwtl
push
sbb
ds
loop
pushf
pop
fcmovne
jae
into
rorb
test
rorb
movsb
push
cld
inc
mov
dec
sub
iret
xchg
pusha
mov
mov
and
mov
cli
add
sbb
and
int3
jae
div
pop
jl
test
ss
inc
push
bound
cmp
faddl
lahf
cmp
pop
pop
dec
inc
xor
stc
push
rep
daa
cwtl
pop
test
mov
imul
xorl
aad
test
add
or
ficompl
sub
rol
jnp
mov
and
adc
movsl
xor
jae
rol
and
jne
lock
mov
imul
dec
mov
repnz
into
scas
ds
les
leave
and
sub
adc
icebp
inc
dec
xor
ds
ret
push
sub
inc
push
cltd
cmp
add
imul
jns
pop
aas
inc
mov
push
push
ds
xor
pop
ret
mov
mov
xchg
mov
nop
cltd
hlt
adc
fcoms
clc
insb
fistpl
ficoml
ret
jbe
cli
movsl
pop
ljmp
dec
adc
mov
jl
mov
out
enter
sbb
lcall
or
out
call
loop
and
adc
in
xchg
add
loopne
pop
fs
dec
jg
xchg
sarb
lds
sbb
xor
subb
sbb
es
sbb
mov
dec
add
inc
jnp
out
xchg
int
test
pop
sbb
mov
clc
pop
shll
jb
sbb
mov
mov
test
cs
ljmp
inc
outsb
mov
popf
icebp
ret
jnp
jb
add
jnp
push
push
sbb
sarb
out
jl
dec
jle
pusha
cmp
lret
push
into
pop
enter
sbb
fucom
aam
fistpl
sbb
lcall
jns
in
mov
sub
push
test
and
xchg
insl
add
lea
xor
sbb
lret
adc
jne
daa
add
sbb
insl
inc
insl
jae
adc
mov
cld
xlat
add
stos
mov
push
xchg
jbe
imul
sti
cmp
pop
out
inc
dec
inc
hlt
repz
jbe
mov
cmp
popa
out
jne
and
cmpsw
popf
xor
enter
adc
sbb
dec
mov
sub
negb
divl
adc
inc
cmp
ret
int
sbbb
mov
jb
lahf
push
mov
mov
mov
ss
mov
xlat
adc
adc
mov
mov
test
cmp
pop
in
add
mov
popa
insb
pop
pop
add
adcl
mov
inc
jle
sbb
subb
mov
lock
rcl
ljmp
data16
enter
in
seta
mov
mov
callw
mov
sbb
xorl
fimull
sub
fldenv
sti
jb
lcall
repz
cli
aam
fnstsw
and
loope
pop
mov
pop
in
or
arpl
and
adc
icebp
mul
xor
outsb
call
stos
mov
out
in
testb
rolb
add
xchg
popf
lods
fildll
shr
xor
push
add
std
pop
cmp
mov
add
inc
in
or
test
xchg
enter
sti
je
dec
in
out
popa
push
adc
addr16
out
inc
int
mov
pop
out
jg
push
in
aaa
add
push
call
jnp
sarb
xchg
push
pop
pusha
jb
and
mov
cwtl
sbb
ja
insl
pop
dec
gs
cmpb
jmp
cltd
lret
out
xor
mov
sbb
mov
sahf
test
adcl
push
fnstsw
jecxz
sbb
shlb
lods
mov
mov
aad
int
popf
mov
inc
in
mov
ja
push
pop
mov
ss
push
push
mov
sub
les
sarb
and
rclb
cmp
lods
mull
ljmp
loopne
add
fs
sahf
or
mov
mov
out
dec
push
fcmovnbe
xchg
cmpsb
mov
cmp
mov
aad
jno
xor
icebp
rcr
sub
clc
data16
sub
pop
les
xor
int
inc
repz
addb
xor
fldln2
test
inc
pusha
push
test
add
jne
cmp
gs
mov
vrsqrtps
or
push
push
sub
sbb
nop
and
cmpsb
or
stos
dec
aaa
cltd
ffree
inc
fnstsw
add
mov
daa
les
mov
push
ss
xchg
rcll
imul
ds
jo
add
jecxz
pop
mov
loope
sar
or
movzwl
outsl
inc
push
out
adc
xor
sbb
out
inc
bsr
cmp
enter
inc
ja
adc
xchg
xchg
imulb
gs
add
in
addr16
sbb
ds
imul
sub
sbb
or
mov
mov
cmpsb
or
sub
sbb
sub
or
test
stc
jle
fisubs
aam
add
je
mov
fnstsw
or
or
mov
icebp
and
push
cmp
dec
mov
dec
mov
xor
insb
movsb
mov
jns
repnz
lea
and
loopne
push
and
test
mov
push
lahf
or
xor
mov
hlt
push
mov
js
mov
lea
repz
int3
out
cmp
ljmp
mov
popa
dec
lods
call
push
push
sbb
push
xchg
lcall
push
xchg
popa
adc
and
pop
pop
push
ret
mov
out
fists
ss
or
call
mov
jl
mov
leave
enter
loope
scas
jne
xchg
push
sbb
inc
pusha
sti
mov
adc
and
leave
iret
cltd
jle
xchg
lret
jns
xor
lock
add
fiadds
scas
fisttpll
adc
jge
in
repz
pop
pop
stc
popa
aad
cs
test
test
jne
xchg
pop
cwtl
mov
mov
fs
lea
insb
fnsave
pop
or
mov
int3
xor
repz
dec
lods
pop
inc
mov
jnp
ret
rolb
stos
pop
push
push
aam
sbb
push
jne,pt
and
xchg
sub
pop
inc
cli
jl
dec
mov
filds
rolb
jmp
mov
ljmp
ficoms
or
scas
cmp
arpl
dec
cli
xor
xlat
fidivrs
dec
ss
in
sarb
iret
mov
cmp
pandn
outsl
sub
cs
arpl
jmp
cmp
cltd
push
pop
ds
xor
vpavgb
mov
cmp
sbb
mov
cmp
fsubp
add
xchg
fnstenv
lcall
insl
movsl
and
xor
sub
outsl
jno
push
mov
add
fidivs
adc
adc
push
mov
mov
and
inc
or
nop
test
loope
sub
or
pop
ljmp
cmp
lds
es
or
pop
mov
and
loope
dec
mov
push
xchg
cmc
decb
and
test
add
or
sub
xor
mov
mov
sbb
inc
xchg
jbe
pop
in
fnsave
or
or
mov
push
adc
mov
mov
lock
jecxz
add
hlt
adc
jo
jns
sub
mov
push
imul
jge
xchg
test
xchg
sub
gs
sub
dec
insb
jle
mov
addr16
clc
and
xchg
adc
stos
push
inc
scas
fmul
cmpb
lahf
es
inc
adc
jge
dec
ja
mov
add
cs
add
les
popa
in
adc
or
lock
mov
mov
pop
pop
iret
sub
mov
cmp
arpl
and
xchg
ret
pop
test
in
subb
out
mov
icebp
jbe
cs
cmp
jl
and
and
pop
adc
xor
push
push
fsubr
inc
push
xor
ficompl
pop
push
push
lea
cmpsb
inc
fisttps
outsl
adc
ret
add
pop
jo
mov
clc
out
xchg
jle
es
lock
mov
mov
insb
sahf
adc
jg
sbbb
mov
dec
out
andb
loopne
out
jne
outsl
jg
aam
dec
push
ss
sti
nop
in
lahf
pusha
jns
data16
or
dec
xchg
or
push
push
fmuls
jnp
adc
sti
pusha
mov
pop
and
call
shll
sti
sub
jmp
mov
movsl
in
sbb
xchg
movsl
xchg
movsl
cmp
cli
lahf
adc
dec
xchg
popa
mov
sub
xor
jae
ret
popf
pop
test
jne
test
popl
jmp
insl
xor
pusha
mov
clc
je
jl
pop
jo
push
xor
sti
mov
push
dec
cmp
daa
pop
pop
les
and
jecxz
fwait
out
ret
xor
or
negl
pushl
cld
cmc
xchg
je
pop
add
mov
mov
test
jp
lea
jp
lcall
sbb
shll
loop
pop
mov
pop
mov
stc
push
jge
outsl
imul
aad
iret
dec
and
adc
outsl
test
aam
push
fimull
mov
mov
pop
cmpsb
icebp
divb
sub
repnz
mov
and
cmp
movsl
imul
cli
arpl
sbb
test
iret
xor
arpl
mov
sub
outsl
add
cmp
inc
movsl
sbb
dec
cwtl
pop
lret
ficoml
out
inc
into
rcll
xlat
in
js
into
sti
enter
cmpb
test
adc
xchg
test
addr16
mov
sub
add
or
pop
scas
pop
into
lcall
cmc
mov
adc
pop
rcll
cmp
lahf
sti
sub
lret
test
in
add
sub
jge
pop
fcmovnb
push
rcll
or
jp
in
ret
test
pop
fucomip
addl
or
cmp
ret
lcall
pop
test
out
mov
jg
dec
xchg
jge
pusha
mov
cs
xchg
rorb
dec
push
push
dec
fldln2
fists
ret
or
mov
movsb
jecxz
jne
fisttpl
subl
aaa
data16
out
sbb
xor
xor
call
bound
pop
and
stos
aam
insl
and
xchg
push
jge
pusha
add
dec
loope
daa
jno
fisttpl
mov
enter
push
pop
data16
gs
pop
push
mov
jl
bound
gs
les
mov
fidivl
in
pusha
mov
xchg
hlt
lcall
xor
fdivr
jp
jo
insl
cmp
cli
insb
jge
inc
insl
xor
incl
ror
sub
icebp
push
lods
popa
or
jg
jg
add
inc
jnp
push
call
jo
mov
mov
or
add
cltd
xchg
fsubrl
insb
xchg
repnz
cmp
sar
adc
jnp
push
or
in
ret
inc
clc
repnz
mov
adc
add
pop
mov
mov
mov
imul
pusha
out
fldt
mov
sahf
mov
dec
mov
gs
xchg
and
cli
or
cs
ljmp
jae
dec
ljmp
or
rclb
inc
fstps
and
std
jp
cmp
push
xor
mov
je
mov
imul
fwait
ret
cmp
xchg
stc
mov
and
mov
adc
cmp
mov
scas
mov
push
dec
pop
stc
out
lea
pop
dec
mov
shll
add
popf
out
out
xchg
fldt
xchg
mov
or
or
mov
sarl
push
shll
sbb
xchg
xchg
mov
push
mov
add
mov
sbb
out
lods
clc
and
push
test
add
jo
inc
mov
jecxz
cmp
xchg
mov
rcll
push
add
addr16
psubsw
sub
outsl
push
xchg
push
popa
push
mov
cmp
adc
adc
mov
mov
pop
add
sti
fwait
mov
push
je
jns
cmp
addl
bound
mov
mov
cli
jl
outsb
shl
popf
mov
or
mov
sbb
cli
pop
jne
mov
lret
aam
pushf
jl
mov
fstps
mov
dec
inc
sbb
jle
mov
and
push
or
insb
or
and
test
aaa
icebp
int3
cld
test
dec
icebp
mov
lea
shr
les
or
rcl
pop
jo
call
sbb
pop
test
subl
inc
ret
sbb
adc
stc
arpl
test
loope
or
push
rorl
cmp
and
xor
xchg
add
adc
lods
ja
mov
mov
pop
bound
lret
hlt
dec
sub
mov
loope
dec
pop
or
repz
mov
dec
cmc
fbstp
mov
pop
push
stos
push
push
sub
xchg
mov
popf
push
lret
fdivrl
push
xor
dec
fisttpll
and
addl
loop
xchg
push
bound
xor
xchg
jbe
aas
sub
repnz
sar
dec
test
or
add
push
outsb
sbb
into
jns
add
sub
or
ja
jmp
xchg
scas
pop
mov
jb
mov
cmpsb
sub
scas
jl
push
bound
ds
subl
xchg
inc
subl
cltd
mov
add
push
aaa
ja
in
add
adc
mov
outsb
rcrl
pop
ljmp
mov
mov
sarl
orl
sbb
int
and
idiv
xor
ss
pop
aad
scas
les
mov
lods
pop
sub
xor
dec
out
mov
mov
add
lds
lods
xchg
mov
dec
jge
push
mov
test
shlb
dec
in
xchg
mov
clc
testb
sahf
push
jg
cwtl
or
cmp
push
adc
dec
mov
pop
dec
rcll
lret
dec
jbe
insl
test
orl
adc
scas
stc
mov
dec
jno
les
xchg
and
testl
lds
outsl
pop
shrl
sub
sti
inc
sbb
ret
shl
pop
sahf
movsl
fstpl
add
or
sub
out
sti
push
add
stos
push
mov
cmc
jne
xor
or
sub
jnp
or
loop
pop
stos
mov
ret
pop
in
pushf
jmp
jns
adc
mov
cld
cmpsb
jmp
xchg
dec
out
mov
adc
lea
adc
lds
mov
push
inc
repz
sub
sbb
mov
sub
stos
outsb
out
imul
push
or
std
pop
sub
mov
ret
ret
dec
call
fmul
add
and
stos
mov
xlat
rcr
pop
outsb
add
bound
and
addr16
jle
cmp
lret
and
sbb
std
insl
sbb
add
xchg
or
into
repz
popa
jnp
pop
xor
push
imul
pushf
or
sub
out
les
into
jl
mov
movsb
stos
jg
cld
sbb
leave
insb
push
out
hlt
fbld
int
shll
jmp
jg
clc
push
repz
adc
sub
daa
insb
shl
imul
fmull
sub
ja
dec
mov
mov
ret
je
pop
movl
stc
aam
sbbb
aas
adcl
mov
inc
cmp
in
jns
jne
push
sbbb
mov
data16
rcrb
fidivrs
into
push
int
sbb
mov
xchg
mov
xchg
xor
popf
jbe
push
into
mov
sbb
adc
iret
mov
jle
mov
imul
mov
in
mov
lret
push
lods
stos
mov
fucomp
fs
dec
enter
testb
mov
ds
fbld
int3
lahf
jg
gs
mov
sub
repz
mov
lahf
hlt
cmp
mov
push
nop
movsb
cmp
and
out
es
sbb
xchg
mov
and
ljmp
adc
and
jns
push
push
pusha
sub
cltd
repz
and
and
outsl
rolb
cmp
mov
sbb
out
mov
sub
jns
or
mov
rorl
inc
add
xchg
or
lock
inc
dec
loop
das
push
test
push
subl
pusha
cwtl
dec
pop
popf
pusha
add
js
fistpll
add
es
test
call
fwait
xor
jno
es
sub
adc
gs
ret
into
mov
pop
xchg
shl
fstpt
xchg
cmp
xchg
pop
pop
dec
jo
aad
mov
mov
mov
or
sub
xlat
and
dec
shlb
ss
xchg
sub
aas
jmp
jne
push
lock
loop
mov
jb
bound
das
jl
and
scas
jge
lret
xor
cmp
in
aaa
jp
rcpps
cmp
hlt
aas
jb
mov
mov
inc
xchg
lock
or
or
and
cmp
push
xor
jo
mov
leave
sub
bound
pop
sti
inc
push
lahf
push
bound
ret
sarl
push
fstl
mov
rcrb
stos
xchg
and
fnstsw
xchg
sub
and
jno
dec
imul
xchg
dec
jne
xor
scas
std
sbb
test
jnp
jo
mov
mov
inc
xchg
mov
cmp
and
pop
lret
inc
push
mov
das
sbb
xchg
mov
in
dec
push
repnz
iret
fstpt
mov
jmp
call
add
xlat
repnz
fidivrs
imul
lret
call
xchg
test
insb
mov
xchg
push
cmp
cmp
or
or
and
std
push
jp
mov
add
push
or
jne
in
hlt
jle,pn
cmp
add
mov
cwtl
aas
out
add
test
out
cs
jle
jg
add
scas
pushf
loopne
xor
sahf
inc
mov
push
mov
sbb
sbb
add
adc
sbb
mov
addr16
stc
arpl
mov
cmp
or
jno
adc
jle
dec
sbb
jae
dec
std
in
cmp
push
mov
jnp
and
shll
ja
mov
cmp
out
lock
push
push
loope
icebp
pop
sub
shl
mov
pusha
ljmp
shl
ret
adc
cli
fucomi
push
adc
and
arpl
into
add
or
mov
adc
pop
stc
loopne
cmp
ret
dec
ss
addl
das
clc
pop
in
jno
lretw
test
push
mov
mov
pop
xlat
stos
stos
roll
push
jae
cwtl
mov
daa
inc
fistl
cld
lcall
mov
pusha
int
dec
mov
movsb
ljmp
and
add
jmp
ja
push
pop
xchg
inc
stos
push
sub
out
popf
fdivrs
in
jl
sbb
aaa
mov
sbb
sub
push
jae
int
lea
sub
dec
imul
pop
cmp
sub
shrl
rorb
adc
lods
cmp
adc
mov
lds
mov
mov
gs
adc
add
push
inc
mov
into
or
jae
xor
mov
mov
inc
aaa
test
idivb
sub
insl
inc
mov
stos
inc
jo
orb
xchg
cmpsl
dec
seta
jmp
cltd
and
jg
mov
pop
cmpsb
mov
scas
mov
adc
jae
sub
dec
aas
pop
ja
shll
mov
sbb
cmc
jno
clc
repz
and
inc
xchg
in
adc
mov
cmpsb
rclb
lret
stos
ja
pop
cli
scas
dec
nop
adc
pop
stc
scas
mov
ja
inc
pop
mov
lea
dec
pop
ret
in
out
aad
xlat
imul
jp
xchg
mov
push
je
ret
aad
jb
push
iret
test
insl
sbb
cltd
ja
xor
fisubl
aad
dec
cmp
idivb
dec
inc
dec
test
pop
ja
xor
popf
call
cmp
test
insl
push
popf
inc
sub
dec
jns
push
pop
and
pop
mov
inc
int
cli
push
loop
iret
lods
shrl
fmuls
mov
rorb
addr16
mov
std
repz
sub
sbb
mov
cmp
out
sub
jl
push
adc
movsb
lcall
shrb
mov
mov
push
data16
push
push
ret
xchg
les
dec
lcall
mov
arpl
inc
ret
pop
fisubrs
ret
pop
pop
mov
ret
stos
mov
fdivs
test
mov
jg
jle
push
dec
test
movsl
sub
pop
sbb
sub
sub
pop
xor
cmp
lds
xor
out
pusha
std
jo
aam
dec
not
icebp
mov
data16
int3
ljmp
lock
mov
int3
fidivrl
add
aaa
popa
mov
clc
xchg
fidivs
sbb
mov
clc
outsb
xchg
or
daa
xchg
push
push
pop
and
std
fisttps
enter
ret
inc
mov
clc
scas
mov
das
pushf
dec
adc
sbb
adc
ret
jo
in
sbb
cs
fdivrp
cmp
insb
bound
inc
push
pop
mov
repnz
mov
addr16
cmp
jp
ret
mov
icebp
fldenv
or
xchg
sbb
popa
lock
mov
ror
xor
inc
jge
xor
adc
xchg
add
xchg
dec
push
mov
mov
ljmp
dec
mov
js
pop
loopne
bswap
daa
cltd
mov
fldcw
jb
inc
adc
add
push
out
mov
or
mov
mov
add
mov
pop
jp
dec
dec
pop
push
dec
push
push
ljmp
or
inc
cmp
inc
es
push
sbb
shl
out
shrl
in
fistl
aas
test
jmp
js
xchg
call
aad
jb
sub
lock
nop
outsb
pop
sarl
push
sahf
ja
mov
fchs
push
les
cld
push
je
mov
hlt
int3
jns
jecxz
and
in
adc
popf
or
imul
iret
ja
cmp
addr16
adc
icebp
pop
xchg
lea
xlat
pusha
jle
lds
sub
dec
shlb
or
add
xor
push
mov
pop
mov
fiadds
jmp
in
add
cmc
push
out
sbb
or
shrl
mov
popa
pop
and
mov
push
xchg
les
cld
cmp
push
sbb
insl
lods
push
imulb
adc
mov
jne
das
dec
aaa
mov
shrl
gs
sti
push
cs
daa
cmpsb
imulb
sbb
cmp
out
lods
shrb
sub
sub
decb
xor
out
cmp
pop
or
hlt
sub
pop
or
leave
les
jecxz
loop
and
sub
sub
in
sub
mov
mov
pop
xor
icebp
and
sbb
xor
jns
int
cmp
shrb
je
or
or
and
xor
loopne
jecxz
xor
or
rol
mov
cld
inc
mov
cmpsb
rclb
pop
xchg
xlat
lods
dec
sarl
lcall
xor
sbb
xor
xchg
call
jp
sbbl
ret
xchg
pop
xor
dec
jae
or
fucomi
jo
flds
and
sub
imul
pop
fdivs
sahf
dec
inc
js
fdivs
pop
filds
sub
sbb
stos
or
add
in
mov
loope
pop
mov
aad
mov
shr
and
out
pushf
fbstp
iret
dec
or
daa
cs
pop
adc
add
jb
xor
or
pop
mov
lahf
pop
hlt
cld
andb
xor
inc
mov
xor
xor
lea
mov
push
bound
cmp
xchg
inc
jecxz
fildl
jnp
mov
xor
in
addb
or
ss
filds
push
outsl
pop
lock
add
xchg
mov
and
xor
pop
xchg
sbb
mov
aaa
insb
push
lcall
addl
ret
pop
pop
xor
imul
cwtl
cs
mov
adc
fiadds
xchg
test
adc
les
xchg
mov
xchg
dec
mov
or
add
cmp
jnp
xchg
xor
xlat
sbb
into
cmp
mov
mov
sub
repz
outsb
cmc
jne
push
subb
test
sub
jecxz
shrl
fdivrp
sub
cmp
fistpll
adc
mov
cmp
xor
jg
dec
imul
mov
and
sbb
dec
int3
dec
aaa
movsb
push
mov
push
movsb
pop
fdivr
out
or
mov
cli
inc
inc
push
cwtl
push
cmp
aad
mov
call
int
dec
adc
jmp
ret
cmp
cmp
jae
mov
mov
dec
dec
pop
mov
push
lock
pusha
aaa
sbb
movsl
pop
adc
push
sahf
inc
fsubp
stos
mov
pop
mov
sub
jmp
enter
leave
mov
mov
mov
mov
mov
push
xchg
mov
shrl
test
push
push
sub
ja
or
lahf
xlat
sub
cmp
lock
mov
cmp
cmc
add
ljmp
xor
pop
fbstp
cwtl
dec
add
xchg
jae
cltd
jp
das
mov
lea
and
sub
jb
mov
ret
lcall
aad
adc
xor
pusha
xor
push
fidivrs
insw
push
ja
arpl
es
cltd
adc
mov
bound
outsb
js
js
dec
cmpsb
insb
lods
shll
subl
xchg
xor
add
jno
popf
xchg
mov
jle
lret
int
xchg
shll
cmp
ljmp
or
repnz
lcall
or
and
cld
mov
repnz
std
jae
aam
leave
cmp
xchg
ja
lcall
sbb
ds
add
aam
and
push
repz
mov
add
rorb
loope
mov
loope
mov
mov
add
js
repz
bound
jecxz
mov
lds
jg,pn
and
les
jbe
fs
cmp
and
xchg
outsb
mov
pushf
mov
jbe
andl
movb
test
daa
pop
mov
cmc
orl
push
mov
mov
aam
ja
imul
fisubl
sub
mov
mov
cmovb
push
dec
inc
sbb
out
pop
out
adc
arpl
in
rcrb
test
loopne
mov
jbe
je
add
aad
xchg
fmull
or
sbb
sub
pop
es
push
pop
popf
mov
out
fisubl
out
and
add
jnp
ret
ds
jmp
gs
mov
push
mov
push
cmpsb
sbb
aas
lods
jno
lcall
xchg
xchg
in
js
mov
out
shrb
cmp
loop
fdivrl
inc
popa
push
lahf
fcmovu
jo
in
insl
mov
xor
adc
leave
fcoms
subb
and
loope
inc
fistps
push
or
or
cmpsl
push
cwtl
jmp
xchg
movsl
dec
mov
xchg
imul
mov
enter
cltd
sbb
repz
es
cli
movsb
js
add
sbb
imul
sbb
mov
inc
add
jmp
mov
cwtl
xor
adc
jmp
aaa
aam
push
negb
fldl
push
fidivs
push
insb
dec
test
add
pop
adc
cwtl
cmpsl
test
ja
scas
ss
stos
shl
adc
adc
push
fistpl
adc
iret
sub
shrl
cmp
sub
js
mov
dec
dec
scas
jecxz
and
push
or
push
mov
adc
test
pop
cmp
adc
inc
lret
pop
leave
push
aas
out
pop
push
sbb
cld
jge
jg
aaa
or
mov
jae
adc
add
popa
fisubrl
sbb
cmpsb
in
int
push
push
aad
in
sar
xchg
pushf
repz
imull
or
aas
push
shrl
jg
in
sub
mov
cmpsl
inc
sar
jmp
inc
mov
add
or
ret
test
sbb
scas
test
xchg
mov
scas
ret
outsl
jle
mov
mov
push
out
rcr
jbe
aad
cmp
pop
xor
ficoms
xchg
pop
adc
notl
push
idiv
test
bound
jle
sub
cmc
arpl
shr
and
in
subl
jmp
sbb
loopne
les
mov
ss
mov
sub
cmp
cmpsl
mov
inc
mov
inc
mov
sbb
rorb
jmp
xchg
enter
insb
mov
push
mov
mov
xchg
pop
jecxz
pusha
pop
mov
out
mov
xchg
aaa
in
adc
adc
lahf
popa
shlb
pop
xchg
dec
pop
out
aad
pusha
adc
add
jae
pop
lds
inc
sbb
repnz
enter
jmp
dec
sbb
mov
jmp
jnp
mov
test
jb
sbb
or
jne
pop
ja
and
dec
in
jg
lahf
icebp
movsb
jo
insb
aam
jae
xor
push
and
std
push
inc
dec
lea
sbb
rclb
mov
push
mov
fisubl
int
push
adc
cmp
sbb
adc
jbe
mov
lods
mov
jle
out
mov
addr16
fcoms
pop
lds
or
lock
and
inc
cwtl
mov
lods
jecxz
mov
in
pop
push
nop
bound
or
xchg
jl
mov
cmpsl
cmpsl
jge
out
push
adc
cmpsb
xchg
shll
scas
xor
iret
and
pop
push
sbb
aas
inc
sub
cmpsb
adc
std
xor
stos
jg
daa
mov
loopne
lret
mov
xchg
pop
arpl
hlt
js
jno
inc
dec
loop
pusha
movb
sbb
or
jecxz
rclb
loopne
jp
add
or
sbb
dec
fabs
sarb
je
jl
repnz
sub
pop
ja
jmp
mov
push
pop
lods
insb
pop
cmpsl
pop
test
jnp
scas
fcomps
push
or
lret
xchg
lods
scas
and
add
dec
mov
jno
popa
mov
nop
out
lret
dec
push
sahf
adc
popa
lcall
pop
sahf
sahf
cltd
or
mov
cmpsb
jl
push
fisttpl
xchg
push
test
fdiv
add
mov
insb
call
push
loop
sbb
es
adc
popa
and
movsl
dec
fisubl
faddl
arpl
in
mov
xchg
add
mov
in
popf
mov
lods
mov
rorb
adc
sbb
sti
sub
jb
push
pusha
pop
inc
xchg
push
jo
cwtl
dec
jns
and
mov
daa
fdivl
dec
int
push
push
divb
jmp
mov
fisubs
mov
mov
bound
and
bound
rclb
daa
mov
lcall
add
int
ret
lahf
mov
jb
or
fcmovne
xor
inc
fimull
movsb
lret
ljmp
mov
lods
push
fs
icebp
cmp
or
cs
push
jp
add
add
add
inc
push
clc
incl
mov
imull
jnp
and
mov
repz
cmp
dec
dec
fistps
stc
cmp
mov
xor
push
mov
xchg
jnp
inc
std
sub
imul
movsb
cltd
push
mov
pop
popa
test
or
and
cmp
sets
push
popa
test
mov
add
inc
push
leave
pop
outsl
rorl
inc
dec
mov
fildll
sub
lahf
cmp
dec
jne
cs
cld
mov
mov
add
or
int3
int
loopne
and
inc
pop
xchg
push
lret
out
jle
xor
gs
dec
sbb
mov
sub
mov
fldl
pop
xchg
inc
sub
mov
push
repnz
outsb
pop
ds
mov
mov
insb
pop
dec
sti
pop
addr16
jns
jl
lock
arpl
pop
sti
add
add
push
cmp
sbb
or
xchg
std
adc
mov
push
jbe
decl
dec
sahf
mov
jg
push
mov
jle
sub
pop
mov
pop
lcall
pop
mov
xchg
pop
mov
bound
repz
stos
lock
fsubrl
shlb
mov
push
int3
add
inc
adc
ret
cmpsb
mov
arpl
call
add
or
push
jmp
pop
pusha
fildll
adc
fdivl
pop
fs
dec
mov
sub
pop
fs
dec
cmpl
out
jo
out
imul
shll
sbb
arpl
testb
into
push
and
es
ss
xchg
cmc
in
sbb
vmaxpd
daa
jo
loopne
jp
bound
stos
cmpsb
sub
adc
dec
push
cmp
fidivrs
sub
push
dec
rorb
aaa
test
imul
das
cmp
xor
xchg
push
mov
xor
outsl
inc
fstpl
add
mov
xor
mov
jl
pop
mov
cld
in
mov
shlb
jno
outsl
sbb
shll
or
je
push
das
test
cmpsl
ficomps
lret
rol
pop
lods
xchg
jb
imul
mov
sbb
movq
shll
push
xchg
push
ss
into
cmp
push
ds
imul
data16
aam
setle
mov
xor
sub
dec
mov
fnstsw
fld1
mov
cld
pop
add
pop
pop
push
push
xor
mov
pop
outsl
int
jp
cltd
imul
jle
xorb
stos
inc
sbb
jecxz
or
push
adc
sub
mov
jb
jae
lret
and
sub
cmc
ss
mov
mov
ljmp
xchg
ss
dec
xlat
insl
mov
scas
mov
rcl
fmul
xchg
repz
fsts
mov
jnp
add
lret
mov
mov
ret
xchg
cmp
adc
mov
push
fisttpl
mov
or
int3
dec
ret
mov
pop
movsl
xchg
xlat
and
std
adc
cmpsb
repz
push
xor
inc
cmp
fucomip
dec
or
pop
mov
icebp
cmpsb
mov
arpl
xchg
push
jns
sbb
pushf
dec
rcl
sbb
mov
inc
mov
in
aam
mov
inc
cmp
push
ficoms
int3
cmp
push
gs
cmpb
movsb
repz
jo
xor
bound
stos
fldcw
rcl
stos
fwait
in
sbb
scas
repz
fstl
push
mov
arpl
loope
or
pushf
roll
inc
pop
fcmovne
mov
jo
push
negl
add
xchg
popa
cmpl
mov
cli
lcall
pop
jecxz
ljmp
xchg
xchg
or
dec
insb
xor
pop
insl
adc
mov
stc
gs
cmovnp
inc
movsl
dec
cld
test
adcl
xor
ljmp
push
shlb
sbb
inc
pop
jns
mov
iret
dec
xchg
out
cmp
lock
mov
sbb
inc
dec
mov
push
mov
xor
in
mov
fdiv
loopne
rcll
lret
imul
pop
sbb
xchg
lea
sub
mov
sti
pop
iret
sbb
mov
pop
inc
orb
sbb
std
insb
sub
mov
cltd
shrb
movsb
jge
roll
sbb
dec
ljmp
enter
or
aad
int
cmpsl
nop
fcompl
jne
xchg
sub
inc
lret
lds
lds
pop
push
aas
daa
in
cmp
sub
pusha
repnz
cmpsl
sub
cs
hlt
jmp
adc
and
jns
dec
cmpsb
popa
pushw
flds
adc
add
or
mov
sub
inc
fadds
leave
int3
out
lret
andl
cmpsb
in
push
cmp
inc
mov
aas
or
inc
add
jns
adc
iret
loop
test
aam
inc
rclb
cmp
jb
xchg
cmp
xor
clc
cli
sbb
mov
pop
mov
jbe
aaa
dec
out
ror
or
add
inc
iret
inc
mov
clc
repnz
fwait
aad
mov
cmp
out
jne
fsubl
repnz
mov
inc
push
adc
inc
sub
cli
aas
test
roll
in
and
push
popf
pop
cmp
out
js
aad
and
cmc
js
repnz
xor
ficompl
test
cli
cmp
mov
loope
push
dec
xchg
inc
fisubl
mov
add
mov
cmp
dec
mov
adc
outsb
enter
sub
insb
jle
stos
jmp
das
pop
pop
in
jecxz
out
cld
and
push
cmpsl
sub
cmp
lcall
pusha
fs
lock
or
push
xchg
jp
add
add
push
rcrl
daa
dec
fidivl
arpl
in
icebp
push
inc
daa
test
gs
mov
pop
adc
or
mov
add
ret
xor
dec
or
sbb
dec
orb
scas
bnd
cld
mov
ljmp
adc
in
addr16
xor
mull
xchg
sub
lahf
mov
fcmovnb
inc
and
test
xor
inc
inc
into
adc
sub
cwtl
inc
popf
jecxz
lods
inc
fisubl
pop
jle
push
ds
inc
adc
rcr
lret
add
xor
mov
scas
adc
dec
adc
leave
cmp
jg
push
imul
std
xor
outsl
fdivrs
pop
ss
aam
xchg
sub
adc
imul
scas
and
jb
mov
and
adc
movsl
pop
inc
sbb
in
in
loope
mov
pop
jmp
test
xor
popa
adc
mov
arpl
mulb
xchg
repz
push
sub
cmc
mov
in
sbb
mov
les
das
push
ret
jnp
daa
and
cmp
loope
popa
push
sub
fs
sub
insl
int
dec
inc
adc
add
add
mov
mov
lahf
xchg
shl
lds
data16
inc
cmpsb
ja
pop
fadds
int3
add
jge
aaa
bnd
adc
sarl
scas
cmp
insb
adc
mov
mov
in
std
xchg
pop
sbb
mov
sbb
test
fs
fimull
nop
fs
push
insb
pop
je
fisubrl
int3
pop
testl
or
dec
inc
add
pop
int
ret
mov
ret
jnp
orl
mov
fisubrl
mov
stos
cmpsb
js
les
xor
xor
and
adc
add
call
out
and
fisttpll
dec
and
push
lods
cmp
aaa
push
adc
pop
cwtl
jne
leave
cmp
in
leave
inc
inc
mov
inc
jge
das
test
add
mov
sub
inc
int3
sahf
in
or
test
xchg
xor
loopne
mov
pop
push
add
arpl
lret
scas
fwait
sub
lahf
pop
jecxz
mov
nop
add
sub
scas
test
jno
imull
les
imul
push
jnp
xor
cmpsl
dec
cs
add
pop
subb
xchg
sahf
ds
loope
pop
repz
and
loopne
mov
jnp
push
in
fcmovb
cli
subl
addr16
outsb
pop
aas
cmpsl
mov
fists
xchg
int3
pop
add
cmp
sarl
shlb
popa
stos
jbe
push
push
repnz
leave
pop
dec
or
rcll
ja
xor
mov
out
pop
sub
loopne
js
fisubrs
cmp
xchg
jmp
jno
xor
outsb
xchg
fistps
sbb
filds
xor
sti
dec
push
mov
imul
xlat
sub
jnp
xchg
setae
push
dec
pushf
add
inc
lret
mov
jp
jecxz
pop
push
aaa
mov
mov
jg
cmp
ficoms
jne
sti
shrl
lods
into
cmp
push
xor
xchg
mov
mov
sub
jo
mov
das
in
jnp
repnz
iret
dec
push
and
fisubrs
or
push
mov
and
inc
jb
out
daa
adc
pusha
xchg
enter
dec
repz
call
or
jge
mov
mov
dec
mov
cmc
cmpsb
add
mov
aad
sub
hlt
movsl
xchg
and
fstpt
mov
int
wrmsr
xchg
cltd
int3
pushaw
jge
cld
push
mov
sub
movsb
push
stos
xor
xor
jns
out
lahf
or
std
cmp
enter
xchg
daa
idivl
pop
push
bound
jmp
cmp
inc
call
xor
ss
push
mov
xchg
xor
aaa
mov
into
dec
rcrb
iret
and
xor
push
mov
jecxz
jno
lret
push
mov
dec
repz
sub
sarl
sbb
add
addr16
dec
push
cmp
jmp
xor
add
mov
mov
adc
dec
js
xsha1
cmpsb
dec
loop
dec
sub
and
pop
mov
and
les
out
aaa
xor
mov
bound
pushf
dec
das
mov
mov
js
sbb
sahf
pop
sbb
out
jg
sub
js
inc
sarb
xchg
xor
adc
jbe
push
enter
mov
inc
sar
lock
data16
and
enter
jmp
loope
and
fsubrs
inc
mov
loop
mov
push
mov
rclb
lcall
dec
jp
and
mov
mov
add
das
sub
and
subl
mov
jnp
jo
call
daa
sbb
add
mov
pop
bnd
adc
jle
mov
mov
sbb
andb
sub
stos
lods
inc
idivl
add
sbb
decb
into
jg
pushf
sbb
imul
imul
xor
ret
dec
push
out
dec
subl
pop
dec
loopne
das
ja
push
lret
call
outsb
xchg
aaa
sbb
loope
and
dec
icebp
mov
xchg
pop
sub
mov
mov
imul
jns
lret
call
repnz
filds
jae
mov
popa
cmc
jne
aaa
sbb
push
iret
mov
xchg
adc
aam
js
and
pop
aad
pop
iret
jo
mov
in
mov
fsubr
sub
add
andl
cmp
mov
jbe
scas
jbe
dec
inc
cs
sar
clc
lds
xchg
push
fidivs
adc
pushl
scas
mov
stos
jge
mov
cmp
loopne
jb
push
sarb
and
xorb
arpl
inc
ss
lret
mov
push
ss
dec
inc
adcb
dec
jns
movsb
adc
test
insl
pop
lea
add
jl
dec
mov
scas
adc
xor
outsl
push
mov
lds
push
dec
mov
pop
aaa
adc
arpl
bound
sub
or
stos
and
mov
add
mov
jne
sub
jne
mov
push
ret
adc
mov
adc
mov
add
mov
add
hlt
inc
cmp
lock
add
ja
imul
or
das
jo
mov
std
jae
mov
push
or
stc
sbb
out
lea
fistl
lret
stos
cwtl
xor
push
std
sub
xchg
loopne
test
jl
or
push
aas
jl
cwtl
lods
les
movsb
sbb
cmc
inc
in
inc
xchg
and
mov
xor
or
and
xchg
add
mov
dec
mov
in
mov
cld
mov
push
fsub
testb
test
imul
ficoms
popf
ss
mov
pop
mov
xchg
fstps
push
xchg
into
pop
mov
ss
add
flds
ret
sbb
lcall
cmp
cs
add
cmp
mov
cmp
stc
pusha
pop
cmpsb
ljmp
stc
mov
push
mov
cs
sbb
aam
push
xor
pop
lds
test
scas
fwait
int3
imul
push
xor
ret
sbb
and
pushf
mov
cli
add
cmp
add
or
imul
cmpsb
fwait
mov
mov
imul
mov
push
adc
sub
fdivr
add
lret
push
sub
xlat
push
mov
sub
je
or
pop
in
dec
push
pop
pop
pushl
popa
out
outsl
sarb
sbb
jno
or
mov
add
aas
jmp
ds
push
rolb
xor
sarb
scas
loopne
imul
divl
out
stos
dec
and
out
das
in
addb
notb
popa
fildl
fwait
push
outsb
shlb
lahf
lcall
hlt
ror
inc
jb
test
popf
xor
and
fistps
sub
in
mov
in
xchg
gs
jmp
stos
xchg
loopne
cmp
xchg
test
or
jb
sub
fstpl
and
and
add
faddl
xchg
jns
jb
xlat
stc
xchg
mov
and
add
pop
mov
loop
rcr
add
or
push
xchg
push
fdivr
insb
adc
lds
pusha
ljmp
jle
add
push
pop
push
mov
stc
je
stos
sbb
lahf
ljmp
ret
lret
jnp
adc
sub
dec
lcall
xor
fiaddl
mov
adc
inc
movsb
je
fwait
adc
es
clc
imul
or
add
out
mov
mov
pop
cmp
aaa
aaa
jecxz
aas
imul
lret
mov
xlat
inc
lahf
ljmp
repnz
mov
into
aas
icebp
push
pop
aaa
inc
push
testl
mov
inc
cmp
xor
mul
fisubrl
sub
jmp
sbb
sub
lcall
pop
rolb
add
call
sbb
push
mov
jno
fildll
pop
popa
or
pop
int
loop
jnp
mov
inc
out
popa
or
pop
mov
popf
test
jge
xor
mov
stos
xchg
frstor
or
test
mov
lahf
sbb
xor
xor
mov
cld
mov
mov
jmp
stos
adc
stos
nop
jbe
fadds
cld
dec
stos
jmp
repz
xorb
jb
in
inc
ret
jno
adc
sbb
fs
mov
adc
inc
dec
leave
daa
cmpsb
mov
enter
xchg
loop
xor
insl
aam
mov
push
lds
scas
mov
aam
fildl
dec
dec
repz
jl
mov
test
and
cs
lock
mov
out
cmp
das
nop
adc
push
ret
xor
ret
push
nop
les
jge
push
mov
daa
xchg
pop
adc
sar
enter
mov
les
repnz
push
mov
mov
dec
inc
sti
push
or
push
ficompl
das
lds
inc
loopne
nop
jb
aaa
fnstenv
pusha
out
fmull
xor
mov
enter
pop
add
xor
cld
mov
jp
cltd
pop
dec
subb
sbb
in
jmp
dec
aas
xchg
push
movsl
mov
sbb
sub
dec
inc
popl
cltd
jge
popa
dec
clc
repz
mov
add
or
push
call
push
mov
jo
xor
mov
dec
outsl
lret
dec
dec
sbb
mov
call
jo
inc
inc
sub
jge
loopne
sahf
jge
inc
roll
xlat
sub
sarl
mov
imul
mov
cmc
push
dec
gs
add
mov
ret
xor
mov
push
insb
dec
in
filds
pop
jg
mov
cmp
mov
fidivl
and
shl
je
cmc
outsl
sahf
popf
xchg
cmp
ret
into
jle
or
mov
sti
leave
push
sbb
cs
scas
xchg
xchg
jp
aas
cwtl
test
or
jecxz
xor
andl
mov
inc
pop
outsb
movsl
loope
lcall
imul
sahf
xor
pop
pop
mov
ja
ljmp
ret
daa
hlt
jno
jno
xchg
ljmp
cmpsb
je
cmpsl
xor
dec
push
fidivl
in
insb
mov
push
mov
scas
xor
sarl
ss
and
xor
subb
loopne
dec
movsl
ret
js
xchg
jmp
pop
pushf
and
out
adc
mov
sbb
fisttps
mov
jb
int3
ret
dec
pop
aaa
jge
test
jno
jecxz
pop
mov
insl
jge
jns
mul
sbb
xor
sub
lods
dec
lcall
and
or
mov
sub
dec
and
cmp
and
js
mov
or
xchg
jbe
and
push
lock
aad
mov
aas
loope
sti
and
pop
jnp
aas
inc
and
mov
push
in
iret
add
hlt
mov
cmp
rcl
outsb
fnsave
add
sub
xor
mov
aam
xchg
sahf
in
jle
rcrb
push
cs
fldt
or
dec
lahf
sarl
movsb
shlb
jl
sub
dec
mov
mov
ljmp
rcrb
mov
call
arpl
cld
pop
sbb
mov
xchg
dec
out
jne
lods
repz
stc
sbb
mov
dec
nop
xchg
add
in
insb
and
cmpsb
mov
add
dec
and
or
cmpsl
test
inc
out
movsb
cld
fbstp
pop
dec
xor
jnp
add
lds
sub
loopne
push
stos
cmpsl
xchg
jo
jne
pop
cmp
push
and
cmp
out
mov
loope
sbb
push
roll
cmp
and
les
in
ja
repnz
stc
xchg
and
sub
xchg
shlb
outsl
lods
sub
or
lods
mov
jg
sbb
mov
in
pop
sbb
and
sub
outsl
xchg
scas
icebp
push
fimull
push
popa
shrb
imul
fisttpll
into
cli
adc
cmp
xchg
hlt
dec
fidivrl
in
adc
ret
jnp
fmull
push
cmpl
adc
stos
loop
sbb
sbb
pop
fistpll
dec
dec
push
mov
pop
in
and
cmc
inc
or
xchg
fsubrl
faddl
lcall
out
ror
mov
cs
xchg
mov
stos
add
pop
pop
shlb
xchg
fisubrs
ljmp
sub
sub
jle
mov
jecxz
mov
mov
and
int3
mov
mov
mov
es
adc
xchg
jl
dec
daa
mov
or
xchg
sbb
push
insl
push
mov
insl
push
adc
fists
xchg
mov
enter
jp
sub
lret
lahf
push
fcmove
xor
pop
cmpsb
fisttps
stc
fsubrs
jae
pop
cwtl
xor
xor
js
xchg
lahf
sbb
sti
test
push
in
les
or
pop
fsub
ret
insb
icebp
mov
cmp
mov
insb
mov
lahf
pop
push
mov
push
loopne
imul
pop
lods
sub
and
lcall
ret
xor
lret
mov
xchg
mov
pop
xor
sub
out
pushf
or
lret
shrl
mov
or
sub
cwtl
sub
mov
idivl
xchg
push
aad
sbbb
shl
shrl
lret
xchg
hlt
imul
repz
lcall
jno
pop
lds
sbb
jbe
pusha
and
pop
and
cmpsb
push
cmp
pop
pop
daa
mov
xor
leave
daa
les
sub
cwtl
insl
dec
clc
mov
jnp
cld
movsl
outsl
jo
lock
jae
and
lock
mov
js
jne
mov
popa
dec
dec
jle
mov
inc
push
ror
sbb
push
xor
jle
shlb
dec
xchg
stos
and
aad
xchg
cli
cmpsl
push
inc
push
pop
jns
jecxz
sbb
inc
push
inc
idivb
pop
sbb
jb
pusha
and
and
adc
dec
or
lahf
mov
mov
aaa
imulb
sbb
int3
std
pop
popa
mov
pop
mov
pop
pop
cmpsl
adc
jecxz
jmp
dec
test
mov
sbb
fsubrp
pop
pop
sub
inc
loopne
mov
xchg
jle
xchg
and
cmp
sbb
mov
jp
mov
test
mov
ret
xchg
push
mov
gs
push
lock
vpcomd
mov
out
stos
jle
movsb
jbe
and
out
int
or
sub
popa
hlt
rolb
jnp
push
int
pop
push
cmp
fprem1
xor
inc
adc
push
inc
jb
nop
ljmp
mov
or
insb
lret
call
out
into
enter
adc
test
sub
inc
js
dec
cld
imul
cmp
insl
push
inc
out
cli
insl
in
mov
js
iret
stos
add
hlt
rcrl
das
scas
push
repz
pop
cmp
in
test
or
sar
add
imul
std
scas
test
decb
loopne
mov
sbb
xor
pusha
xor
enter
out
pop
dec
jbe
in
repz
mov
add
insl
cmpsl
adc
pop
cli
aad
adcl
pop
fistl
out
int
push
jge
add
stc
cli
cs
mov
or
cmc
or
jno
push
mov
mov
das
xchg
test
loope
incb
adc
cmc
fmull
and
xchg
lret
ret
jbe
and
ret
jno
gs
aas
xor
sbb
pushf
std
repz
mov
sarb
sub
scas
xor
mov
scas
out
and
adc
mov
dec
in
sub
out
pop
dec
mov
mov
stc
pop
imul
pop
repnz
insb
lods
xchg
adc
pop
jp
ret
sub
lods
mov
out
into
jecxz
insl
ret
cmp
lahf
js
push
jg
add
jge
js
xor
std
push
or
add
xor
jp
cmpsl
mov
fsubrp
fsubs
lret
sbb
dec
or
add
sub
popf
ds
push
add
mov
sub
sbb
rol
cld
push
sbb
jne
mov
mov
insb
icebp
adc
add
jle
sub
and
je
and
imul
jmp
fmuls
sbb
mov
push
cmp
mov
es
adc
je
inc
push
sbbb
sbb
xchg
sbb
pusha
imul
lahf
push
sub
imul
mov
inc
aaa
xchg
imul
adc
nop
pop
jne
out
stos
mov
cld
sbb
add
mov
fnstenv
nop
roll
jecxz
loopne
ss
rcr
mov
dec
outsl
inc
xor
cltd
mov
and
push
cmpsb
das
clc
and
loopne
outsb
shlb
cwtl
mov
mov
push
or
xchg
push
pop
or
push
add
mov
mov
cli
xor
loop
mov
mov
xor
mov
xor
test
aam
xor
stos
pop
popa
bswap
mov
cmp
aas
pop
push
outsl
js
xorl
pop
or
cmp
adc
dec
mov
pop
aas
pop
out
loope
xor
lret
scas
xlat
nop
ss
add
jae
inc
add
xchg
cmpl
or
test
scas
enter
fsub
into
push
xchg
lcall
push
cmp
and
mov
outsb
jae
aad
pusha
xchg
inc
sarb
sub
shll
pop
int
mov
xchg
sub
jno
xchg
gs
movl
inc
dec
mov
jp
ficoms
sub
pmovmskb
push
inc
test
popf
push
std
lret
mov
and
mov
sbb
sbbb
push
push
out
sbb
fldcw
enter
ja
xor
mov
add
sarl
sub
cmpsl
jp
pop
cmc
jne
shr
aas
mov
inc
jno
outsl
divl
out
add
xchg
push
jmp
movsl
xchg
mov
dec
jl
lcall
loope
pusha
pusha
lock
outsb
cmp
adc
sbb
sbb
loopne
mov
dec
bound
cs
popf
sahf
pop
xchg
scas
push
fidivs
mov
sahf
cs
imul
cld
enter
call
sbb
sub
cmp
rcl
push
xor
sbb
movsl
mov
jne
scas
mov
xchg
lahf
cmpsb
mov
mov
xchg
xchg
hlt
adc
subb
mov
push
and
xchg
addl
mov
xor
rolb
pop
xor
pop
add
out
and
add
sbb
add
pop
add
add
je,pn
jge
push
outsb
mov
pusha
sub
fwait
shld
cmc
inc
mov
or
paddb
pushf
daa
les
fidivl
mov
xchg
jp
stc
in
pop
adc
mov
adcl
sub
mov
xchg
das
out
mov
je
xlat
jle
repz
sahf
popl
xor
inc
jns
push
subl
inc
adc
test
mov
jle
and
sti
negb
jne
pushf
inc
mov
xor
ret
icebp
xlat
insb
mov
inc
adc
int3
lret
iret
jp
pusha
jb
lods
push
lods
cmpsl
mov
mov
gs
loopne
jle
lcall
dec
xchg
and
pop
dec
add
jb
cmp
pusha
and
dec
shrl
fnsave
cmp
in
cli
bound
stc
sti
inc
sub
outsl
xor
fsubrs
aad
adc
inc
icebp
lds
les
mov
and
push
aas
movd
cmc
mov
dec
lods
adcb
cmpsl
pop
sbb
and
fisttpl
je
and
adc
in
xchg
aaa
imul
out
out
cld
inc
outsl
xchg
sub
daa
mov
adc
shrb
jns
repz
shl
mov
out
psubusb
jle
xor
sahf
mov
cmp
push
and
xchg
in
mov
inc
mov
repz
test
xchg
dec
push
sti
pop
in
cmpsb
or
inc
or
mov
jmp
inc
rcrb
inc
insl
xchg
push
xchg
cs
jle
stos
popf
mov
xchg
scas
fldl
mov
cld
test
fdivr
mov
popa
mov
jmp
ljmp
sbb
push
sbb
mov
icebp
adc
gs
sbb
mov
popf
pop
fisubs
aam
je
aaa
jbe
std
stos
push
stc
aad
jno
xlat
outsb
loope
jge
xchg
xchg
xor
andl
loop
in
in
bound
mov
push
sub
imul
loopne
in
imul
cmp
dec
iret
inc
adc
add
rcl
push
pop
add
outsb
in
lcall
in
aaa
ficompl
jmp
sbb
data16
lea
into
xor
shrb
push
jb
lahf
sub
int3
outsb
loop
cli
jns
rorl
addr16
xor
push
aas
loop
es
in
or
insb
ret
jecxz
push
movsb
int3
sbb
pop
lea
dec
push
mov
mov
mov
loop
inc
loop
fsubs
sbb
adc
stos
fsubs
into
das
bound
sbb
xchg
sahf
stos
add
and
rcrl
mov
and
and
inc
mov
adc
jbe
enter
negl
rcrb
and
out
push
xlat
bound
pusha
xchg
enter
xchg
mov
test
sbb
jne
mov
lods
mov
out
push
fwait
xchg
cmp
pop
stos
push
aas
inc
lret
loope
pop
dec
and
and
lds
fstps
jne
adc
pushf
cs
ljmp
pop
fistpll
or
comiss
cmp
dec
outsl
inc
fiadds
dec
stc
test
mov
sbb
out
dec
cltd
pop
add
mov
inc
stc
stos
push
rcrb
and
lret
mov
xchg
add
icebp
cld
sub
jb
ficomps
bound
testb
icebp
notl
ret
mov
cmpl
dec
insb
xchg
push
sti
push
sahf
sub
adc
js
or
bound
jp
mov
aas
push
testl
mov
dec
in
mov
loop
pminub
dec
roll
push
sarl
fwait
insb
fwait
sbb
aas
sbb
pop
call
clc
mov
sbb
xor
pop
les
pusha
mov
mov
xor
test
cmpsb
mov
aam
aas
mov
sub
test
mov
mull
adc
or
jnp
adc
or
iret
imul
scas
mull
shl
lcall
add
jnp
jg
repnz
aas
pusha
fdivr
add
cmp
addb
bound
xchg
xchg
bound
andb
scas
movsb
addb
cld
stos
jecxz
je
sbb
test
insl
xchg
sub
sub
imul
jnp
mov
xor
movsb
xchg
adc
sub
pop
cmp
leave
mov
adc
je
inc
out
pop
dec
xor
mov
je
pop
lods
adcl
ja
outsb
jp
rcrb
inc
dec
out
sbb
push
sbb
test
push
fildll
ficompl
jmp
mov
pop
push
sarl
xchg
ret
stos
and
inc
icebp
test
in
punpckldq
and
lret
and
and
nop
iret
pop
pop
outsl
fadds
fsubs
inc
xor
mov
outsl
fimuls
mov
lret
jb
roll
hlt
adc
pop
nop
add
out
je
lret
jae
add
inc
sub
scas
xchg
out
sbb
int3
and
lahf
jbe
adc
ljmp
jnp
push
popf
pop
mov
movsl
or
adc
cmc
push
or
sbb
jb
xchg
mov
aad
dec
aam
cmpsl
and
ss
mov
adc
mov
and
cmp
xor
scas
xor
sarb
jp
outsl
dec
mov
sbb
dec
xchg
fwait
imul
push
nop
inc
jae
xor
pop
mov
iret
mulb
out
mov
hlt
jg
and
sbb
jle
mov
push
hlt
lods
jnp
or
jno
cmpsb
jno
pop
fisubrs
fbstp
loop
dec
push
out
sbb
xchg
inc
cmp
pop
pop
mov
dec
or
sub
mov
bound
mov
shlb
xchg
xchg
movsl
xchg
ss
mov
cli
adc
dec
pushf
inc
clc
mov
jecxz
pop
lret
cmp
std
and
loope
sbb
mov
sub
inc
adc
lret
cmp
push
popf
push
les
clc
cltd
lds
scas
dec
fsubl
push
mov
add
push
sbb
add
and
nop
cltd
inc
sahf
cmpsb
cmp
filds
mov
scas
inc
cltd
cmc
sub
in
out
mov
dec
scas
and
movsl
sub
sahf
push
lcall
cmp
push
test
jae
push
xor
jl
mull
loopne
imul
sbb
loope
or
add
add
dec
insb
mov
aas
stos
addl
mov
cmp
jae
out
jb
call
push
pop
and
lods
and
loop
scas
xlat
movsl
mov
sub
fwait
ljmp
out
lods
adc
push
xor
jo
cmp
xchg
std
into
dec
lret
mov
outsl
adc
ficoms
ret
pop
inc
xor
mov
xor
sbb
jecxz
fldl
in
aas
cmp
mov
sbb
pop
in
xor
fnstsw
stos
inc
test
or
jbe
jno
fdivrp
aam
imul
xor
push
push
xchg
repnz
icebp
arpl
xchg
mov
cli
jp
aaa
jl
cmp
push
cmp
je
mov
push
lret
ret
loope
fwait
std
cmp
push
jecxz
or
sub
cmp
test
adc
push
lcall
orb
fwait
push
daa
lahf
jae
sub
mov
push
xor
aad
mov
adc
ljmp
mov
sbb
ret
cltd
xchg
stc
push
or
lret
pop
lods
mov
push
push
sub
clc
adc
mov
and
stc
je
inc
aad
cmp
das
test
xor
enter
dec
or
mov
je
jg
cmc
test
ret
adc
jmp
dec
scas
xor
sub
imul
fcompl
sahf
or
shrb
pushf
lock
test
in
movsb
push
pop
dec
jo
mov
jmp
lret
inc
push
jbe
mov
or
mov
xor
das
dec
idivl
test
sub
repnz
mov
jns
add
icebp
mov
sbb
stc
inc
jne
fcoms
out
push
inc
push
add
jne
jmp
imull
sahf
clc
pushl
mov
adc
fs
mov
lods
mov
add
stos
cmp
and
jnp
nop
insb
js
and
mov
add
sub
mov
inc
jge
imulb
rolb
mov
lahf
in
dec
add
inc
shrb
clc
fistl
insl
hlt
cs
pop
jp
xchg
mov
and
cmpsl
mov
inc
pop
movsl
scas
fisubs
sti
mov
pusha
fninit
aas
dec
addr16
and
inc
adc
inc
sbb
push
xchg
rorl
in
lahf
cmpsl
cs
dec
stos
out
ret
cs
movl
push
cmp
out
xor
push
in
int
mov
ja
xor
inc
in
mov
mov
out
pop
push
pop
ss
add
lock
outsl
mov
or
in
xchg
pop
xchg
sub
cli
imul
jmp
sub
or
pop
mov
jbe
mov
test
fidivs
add
xlat
jle
and
pop
push
and
in
arpl
push
hlt
dec
sbb
pop
mov
mov
fsubrs
push
jo
mov
lock
inc
push
popf
sub
xor
inc
lret
mov
loopne
call
pop
inc
xchg
jbe
push
je
iret
into
pop
push
adc
mov
add
test
or
or
jg
lcall
mov
mov
aad
pop
sarl
mov
stc
ret
sahf
ror
dec
cmp
cmp
div
mov
popa
and
cmp
dec
jno
ret
dec
mov
mov
or
aam
mov
pop
push
sub
stos
arpl
push
push
adc
stos
aaa
lret
shrl
lret
or
xchg
pop
push
ret
cmp
stos
mov
xchg
dec
insb
and
mov
cltd
dec
test
adcl
addr16
jecxz
aaa
sub
jge
cmp
clc
push
sub
fwait
into
ror
sub
ljmp
out
das
loope
dec
jnp
enter
imul
fsubrl
cmp
xor
add
xor
xchg
xor
mov
ja
lea
shl
cmp
inc
mov
adc
adc
daa
add
pop
inc
hlt
mov
push
scas
mov
and
inc
addr16
hlt
or
cli
fisttpll
das
icebp
pop
push
paddb
inc
mov
adc
fldz
pop
jae
pop
test
test
aam
xor
fs
mov
divl
mov
inc
jbe
int3
testb
in
testb
fdivr
mov
inc
call
inc
fcom
adc
ja
inc
pop
ret
arpl
gs
shr
movsb
xchg
lret
stos
pop
mov
push
xchg
bound
push
inc
or
ret
aaa
xchg
insl
repz
add
adc
stc
ds
push
dec
test
push
fistpll
mov
cli
push
dec
or
mov
pusha
xchg
adc
cld
lcall
mov
dec
sbb
xor
add
ss
adc
int3
pop
xlat
mov
xor
push
mov
mov
xor
xchg
ljmp
cwtl
jae
inc
inc
xor
cmp
or
dec
xlat
dec
xchg
xchg
xchg
cld
je
enter
movsb
and
jno
jg
outsl
or
cmp
test
add
xchg
aas
aas
jg
sub
mov
les
imulb
mov
leave
dec
inc
and
popf
mov
pop
cltd
pop
ds
pop
es
testl
mov
lock
lods
insb
mov
and
lock
imul
mov
dec
stos
push
loopne
mov
popa
into
loop
lea
push
stos
and
test
jmp
fisttps
jnp
mov
mov
aaa
ljmp
jne
inc
xchg
or
rolb
sbb
cwtl
enter
mov
fbstp
jns
mov
and
and
cmp
loope
xorb
sub
push
mov
or
xchg
outsb
icebp
jge
cld
push
rcl
mov
mov
sbb
rcr
mov
sbb
stos
nop
push
ret
add
int
mov
fadd
jge
mov
jnp
enter
jecxz
ss
insl
sub
subl
shl
ss
pusha
fdivp
mov
in
inc
stos
add
inc
pop
adc
orb
addb
loop
cmp
test
loop
xchg
out
jnp
std
inc
adc
insb
sub
cld
aad
and
ja
out
into
test
xor
jp
lods
repnz
cmp
shrb
mov
cwtl
hlt
das
mov
popf
jb
hlt
adc
lods
lret
lods
fwait
pop
sahf
movsb
push
jecxz
and
push
sub
fimuls
lret
aam
mov
cli
pop
mov
cmpsl
xchg
in
lea
js
jbe
jge
cmp
inc
push
in
mov
fdivp
stos
bound
pop
cs
inc
fildll
mov
in
loopne
jp
sarb
or
in
cld
push
mov
icebp
and
xor
inc
rcr
dec
push
fs
cli
dec
xor
push
adc
cmp
je
dec
cmp
dec
pop
xor
daa
push
adc
lret
push
fiadds
cmpsb
je
test
cmp
adc
cld
pusha
int3
pop
mov
mov
pop
cmpb
fs
out
js
sub
jle
jnp
push
lcall
jle
inc
inc
sbb
mov
mov
sub
push
sbb
mov
jb
adc
dec
add
add
rol
mov
ret
mov
mov
lock
jecxz
mov
rcl
inc
lcall
lds
mov
aas
inc
inc
iret
hlt
push
leave
ret
lea
movsb
lods
leave
jnp
inc
imulb
clc
jle
sbb
movsb
sarb
lods
movsl
lds
cltd
loop
je
mov
mov
aas
sub
out
xchg
pop
aad
out
mov
bsf
or
rcrb
popf
clc
dec
fdivl
repz
pusha
test
or
ds
jle
adc
cli
test
adc
ljmp
lock
add
pop
loop
jecxz
clc
daa
inc
pop
add
pop
and
mov
push
fcoms
xor
xor
inc
sub
fdivs
xchg
scas
add
imul
rcrb
dec
jae
mov
outsl
int3
push
mov
stc
fimuls
or
lcall
imul
fmul
add
inc
into
mov
scas
add
dec
lock
ljmp
add
and
jmp
xor
out
cmpsb
fcompl
jns,pt
sahf
fisttps
sub
xor
popa
adc
xor
xchg
sbb
icebp
dec
or
mov
loope
push
or
add
jae
es
stos
scas
test
into
xchg
popa
ss
int3
cmp
sbb
xchg
mov
lods
sub
cmpsl
jmp
pop
jmp
push
icebp
push
push
mov
loope
ret
cwtl
sti
lea
add
stos
loopne
inc
xor
lea
ret
icebp
subl
and
pop
sbb
xor
push
push
inc
mov
mov
dec
pop
cmp
xchg
mulb
fs
cmp
inc
movsb
jmp
shlb
pop
sbb
fiadds
xchg
in
xor
fwait
sahf
pop
jp
test
add
popf
dec
outsl
sbb
jbe
mov
xchg
mov
stos
inc
das
xchg
and
ret
sahf
sbb
out
xchg
jno
push
jmp
xlat
or
cmpsb
mov
mov
sbb
inc
mov
pop
gs
cmp
fdivrl
jno
sub
push
fisttpl
pop
jge
mov
push
mov
adc
mov
leave
inc
shll
mov
xor
and
sbb
les
and
loope
mov
cli
add
xchg
dec
outsl
xchg
mov
mov
enter
inc
or
mov
dec
jns
outsb
mov
mov
jl
fdiv
jbe
sti
lea
mov
jb
pop
movsb
out
shr
cmpb
mov
pop
popa
jg
dec
jbe
aas
add
sbb
fmul
ror
cld
mov
xchg
les
cmp
mov
mov
cwtl
cmp
dec
xchg
shll
mov
dec
and
das
inc
push
mov
paddb
arpl
in
push
addr16
int
sub
loope
lea
mov
xor
je
xor
ret
fmuls
dec
mulb
sbb
sbb
xor
mov
xor
xlat
stos
sbb
daa
xchg
xor
imul
dec
and
push
out
shlb
js
jb
jg
push
aas
sbb
push
repz
and
mov
add
pop
sbb
xchg
in
mov
in
mov
xor
ljmp
jno
jae
adc
xor
popl
nop
pusha
gs
lcall
sbb
movsl
xor
inc
std
xchg
lcall
jns
jecxz
xor
mov
in
mov
and
add
nop
dec
pushf
ljmp
cld
push
mov
in
inc
fs
ret
adc
or
sar
pop
ljmp
jmp
mov
mov
cmp
pop
xchg
ret
xor
adc
adc
mov
pop
or
insb
mov
fldt
fs
imul
imul
ss
aad
push
test
pop
pop
add
hlt
push
aaa
sbb
push
stc
arpl
mov
push
inc
faddp
loop
push
test
push
repz
inc
cmp
push
jle
push
xchg
stos
pop
fadds
sahf
jle
mov
sub
fcmovne
repnz
flds
push
xchg
cld
xchg
repz
aaa
pop
loope
xor
and
std
adc
add
cmp
xchg
jne
into
xlat
stos
imul
jo
clc
mov
mov
pushf
or
outsl
dec
rclb
pop
mov
adc
nop
inc
aad
add
cmp
mov
xor
in
sti
cwtl
loope
js
pop
mov
pop
loop
sub
mov
or
hlt
xor
es
in
std
mov
xlat
dec
mov
xchg
jns
jmp
ds
cwtl
jl
pop
mov
sub
out
cmp
lds
adc
mov
mov
dec
cwtl
adc
ja
or
lods
push
dec
shr
push
push
fisttps
inc
and
test
pop
cltd
mov
lock
sbb
repnz
pusha
mov
xchg
and
test
out
out
or
jae,pt
mov
cmp
push
push
imul
inc
mov
in
scas
roll
outsb
stos
or
sub
lock
jg
adc
lret
ljmp
sbb
jge
out
jo
jnp
aas
mov
mov
cmp
jle
ret
fisttps
pushf
sub
out
push
pop
jmp
and
push
adc
hlt
or
ret
shrl
lahf
imul
add
add
fsubrl
xchg
shl
or
scas
movsb
leave
xchg
dec
scas
sbb
outsb
adc
adc
pop
jo
dec
mov
xor
sbb
push
orl
dec
xor
lds
insl
xor
jge
insl
or
or
add
and
shrb
sarb
faddp
or
cwtl
xchg
cli
inc
pop
sbb
test
xor
pop
loopnew
xchg
mov
data16
xchg
ret
popf
inc
mov
aad
mov
lods
popf
imul
dec
insl
sbb
inc
jbe
jp
mov
call
call
pusha
sub
popf
inc
mov
push
pop
push
sub
and
jbe
dec
push
in
mov
mov
ljmp
dec
rorb
sub
lret
jo
adc
mov
call
fmuls
jo
loopne
pushf
or
and
in
out
leave
sar
imul
call
cmp
jae
mov
lds
out
or
sub
stc
cwtl
inc
add
adc
jns
push
out
imul
jae
loope
insb
inc
jp
adc
fidivrs
xor
movsb
cmc
dec
sbb
or
adc
jle
mov
jle
xor
arpl
jge
pop
out
daa
sarb
cmp
outsl
and
std
xchg
or
rcr
inc
repnz
shrb
aas
xor
fs
aas
add
sub
hlt
sbb
cmp
fstpl
fistl
add
movsb
ret
out
fchs
adc
push
test
cmpsl
xchg
xchg
orl
xor
fsubrs
add
int3
scas
inc
stc
push
push
scas
in
adc
sub
in
out
insb
les
outsl
sarl
mov
push
adc
pushf
andb
sbb
mov
sub
and
gs
idiv
ffreep
mov
outsl
int3
mov
popf
dec
jge
mov
andl
xchg
cmp
jno
jae
shll
lret
add
jle
pushf
sub
sti
sbb
push
lret
cmp
jmp
add
dec
inc
mov
jo
push
sbb
out
jne
push
cmp
insb
inc
outsl
sbb
push
fdiv
js
mov
add
sarb
push
adc
call
mov
test
clc
add
jge
scas
lock
scas
mov
lods
arpl
arpl
popa
pop
lds
fcomp
dec
adc
add
roll
pop
scas
pop
lcall
pop
sbb
ss
pop
pop
sbb
pop
out
arpl
jg
cmp
repnz
insb
xchg
mov
stc
es
add
xorl
and
stos
push
aad
mov
dec
and
jnp
outsb
sub
pop
movsl
xchg
in
movb
push
in
out
nop
pop
sarl
push
sbb
inc
jle
ret
add
stc
push
adc
nop
mov
imul
xchg
out
sbb
and
xchg
dec
cs
or
adc
mov
mov
and
pop
dec
jb
jge
sbb
mov
add
sub
pop
cmp
jle
dec
push
mov
push
xor
pop
xor
xchg
push
addl
jbe
cmpsl
sub
inc
rorl
test
mov
pushf
xchg
mov
add
pop
jno
test
out
adc
jb
jnp
inc
aad
push
inc
mov
out
pop
loop
dec
xor
sti
mov
jns
into
pop
orb
jnp
mov
mov
adc
out
arpl
je
rolb
dec
outsl
in
popf
pushl
sbb
js
push
das
xchg
std
cmp
sub
add
test
imul
add
xor
outsb
inc
int
mov
aaa
pop
inc
pushf
add
ret
ds
in
gs
loop
adc
movsl
jb
sti
lcall
dec
daa
or
jbe
push
adc
add
sbb
jb
cmc
mov
repnz
push
cmpl
push
xchg
inc
and
and
xchg
adc
test
in
mov
popa
xorb
ror
out
out
call
lods
inc
movb
fmull
xor
data16
push
iret
and
lods
dec
dec
dec
push
outsl
inc
ljmp
and
cltd
jmp
and
fsubrp
pop
clc
mov
ficompl
push
mov
pop
push
jbe
stos
enter
inc
sub
cmpsb
xor
xor
dec
add
cmp
xorl
stos
icebp
repz
push
mov
icebp
arpl
inc
and
loop
mov
js
cmpb
push
jns
addr16
pop
outsb
loope
cld
jns
lahf
mov
mov
or
push
sti
mov
outsl
xor
xchg
fs
out
xor
inc
push
adc
lock
int3
push
add
movsb
test
fldt
loope
jb
out
mov
cmp
or
mov
das
mov
loope
pop
mov
ds
dec
testb
scas
pop
aas
test
sub
mov
mov
jne
push
sahf
mov
xchg
xchg
xor
jle
xor
mov
jmp
out
bound
xchg
out
mov
and
leave
aam
stos
push
sbb
adc
js
idivb
adc
cmp
jbe
outsb
add
cs
xor
jae
jns
incb
lea
lds
adc
add
mov
test
sbb
das
pop
mov
xor
fwait
cli
and
out
fisubrs
inc
mov
clc
add
inc
or
ss
cmp
mov
ret
pop
arpl
test
fsubrl
mov
shrl
adcl
sbb
pusha
mov
adc
imul
inc
insl
loopew
mov
and
sub
add
cmc
jo
cwtl
jns
xchg
ret
xor
xor
jno
imul
jg
push
cmp
sub
cmp
repz
out
sbb
mov
jne
pushf
mov
bnd
or
or
pop
mov
sbb
xchg
decl
out
fwait
sbb
sbb
push
je
sbb
inc
and
adc
out
les
jne
xchg
aaa
sahf
mov
shrl
popa
fisubrs
sub
add
add
test
shlb
inc
cmp
xor
sarb
icebp
out
adc
xchg
ljmp
jo
jmp
pop
adc
cmpsb
ss
insb
imul
js
pop
add
mov
nop
test
or
cs
sbb
sub
scas
inc
dec
fs
sub
in
dec
rcrl
nop
shr
mov
sub
adc
notb
sub
push
mov
jae
loope
and
push
sbb
ja
mov
push
dec
cs
dec
cld
test
xor
lods
inc
cld
push
outsl
inc
xchg
mov
roll
jmp
or
dec
gs
add
xchg
mov
rcll
sub
push
stos
scas
dec
subb
repz
xor
jne
sub
ret
loopne
mov
mov
lods
scas
ss
and
idivl
stos
jmp
adc
dec
sbb
jnp
xchg
mov
les
sub
mov
cmp
inc
nop
mov
cmp
pushf
and
push
imul
sbb
sbb
pop
cwtl
gs
add
push
fisubrs
cmpsl
adc
mov
mov
std
ja
sub
mov
movsl
int
cmpsb
add
sbb
or
mov
push
pop
inc
push
push
mov
sub
aam
outsl
sub
adc
adc
popf
xchg
iret
stos
repnz
dec
fistl
xchg
ds
xor
fcoml
testl
ds
push
add
call
cltd
shl
dec
fs
prefetcht2
int
pop
pop
aaa
or
and
mov
mov
les
inc
cmpsl
sarb
test
pop
dec
inc
jge
or
pop
lahf
mov
sub
mov
pop
pop
lcall
dec
inc
out
xlat
subl
push
fidivl
sub
mov
jnp
pop
jns
sub
mov
sbb
stos
pop
xchg
sub
les
mov
es
mov
pop
xor
inc
add
sub
jo
cmpsl
ljmp
mov
xor
out
mov
out
aaa
leave
adc
cmp
scas
pop
andl
adc
cmp
icebp
pop
dec
in
mov
cwtl
lock
jae
cwtl
add
jle
add
sarb
dec
sbb
cltd
lcall
movb
fcmovne
adcl
sub
and
rcr
jl
flds
fistl
sub
xchg
mov
push
xorb
popf
fldl
loop
inc
mov
inc
push
lods
mov
jge
scas
cmpsl
pop
ret
subb
mov
push
pop
divb
enter
dec
mov
icebp
mov
outsl
jl
mov
cmp
shl
mov
cwtl
mov
outsb
push
mov
and
jmp
cmpsb
inc
mov
add
aad
xchg
push
push
rcrl
sub
and
lods
pop
sbb
xor
sub
add
aas
mov
add
call
outsl
and
roll
in
xchg
aaa
mov
rcrb
imul
stc
incl
sbbl
inc
sbb
mov
jmp
and
out
fcoml
cmp
inc
fucomip
dec
sahf
imul
fsubrl
lods
sbb
loope
jge
xchg
push
stc
mov
mov
std
xor
test
repz
or
test
addr16
jbe
sub
push
enter
sbb
mov
sub
movsl
jo
jmp
cmp
bound
sbb
inc
repnz
sbb
mov
and
add
mov
imul
dec
xchg
std
push
movl
mov
aad
les
mov
push
add
clc
test
ja
sbb
insl
sub
mov
enter
das
lahf
mov
out
in
outsl
int
mov
lods
mov
aas
ret
mov
lret
push
shrb
sbb
mov
and
push
mov
adc
add
mov
leave
iret
sti
scas
pop
clc
fwait
sarb
cltd
sbb
add
dec
mov
dec
cmp
mov
push
and
in
test
nop
outsl
scas
out
aaa
dec
dec
roll
cs
fists
add
out
cs
shll
das
stc
mov
hlt
dec
mov
and
dec
movsl
jg
sbb
mov
aaa
xchg
jnp
mov
addb
test
adc
cmpsb
in
inc
jns
ret
sti
or
in
push
mov
subb
addb
ret
pop
sub
in
aam
stos
adc
lret
cs
or
scas
xor
inc
fsubrs
and
rorl
mov
fbld
int
scas
lcall
push
dec
pop
int
lea
notl
fs
jne
cld
out
pop
and
aam
xor
sub
scas
rclb
cs
mov
cmp
jno
cmp
cmp
leave
jle
or
and
testl
fisubl
mulb
js
inc
pop
sahf
and
aam
je
fs
sti
aam
dec
daa
rorb
push
push
leave
lods
lods
pop
clc
in
pop
inc
jl
push
pop
mov
jno
and
sbb
mov
repz
push
push
insl
sub
nop
mov
lock
inc
in
dec
xor
outsl
cmpsb
sbb
cmp
lods
je
and
icebp
push
add
ficoms
seta
repnz
mov
data16
fmull
out
stos
popa
lods
pop
sbb
inc
mov
sub
dec
mov
fisttpl
xchg
mov
add
xor
pop
xor
add
loopne
je
push
xor
std
addr16
dec
mov
repz
cmp
dec
data16
add
lret
lds
ret
fs
dec
sub
cwtl
loope
out
testl
dec
cli
out
and
pop
xor
xorl
scas
jae
xchg
imul
mov
push
adc
test
push
pusha
inc
push
jne
or
dec
sub
sub
lds
sbb
adcl
fsubs
cmc
test
mov
daa
loopne
imul
ja
ja
push
repnz
push
xchg
jnp
cld
fiadds
mov
add
xchg
fdivl
pop
outsb
addr16
sbb
jecxz
in
cltd
shl
or
bound
dec
jno
cmc
xor
cmpsb
add
pop
movsb
or
cmpsl
roll
inc
mov
and
fdivs
lret
fmul
or
xchg
add
sti
lret
sahf
dec
jb
mov
sbb
push
xor
xchg
jae
sub
jbe
rcr
push
pop
lods
inc
cwtl
and
jl
and
push
jo
sbb
dec
add
sub
sbb
shrl
outsl
cmpsl
outsl
cmp
jnp
in
aaa
lret
idivl
pop
mov
mov
je
lcall
daa
dec
movsb
push
lods
inc
pop
sbb
movsb
sbb
cmp
lea
hlt
push
dec
cld
jle
fucomip
pop
add
dec
fxtract
jne
js
or
call
ret
ljmp
fwait
imul
mov
cmp
push
ds
fimull
cmp
or
out
repnz
and
test
cwtl
lds
in
sub
shl
inc
pushf
dec
int
test
xchg
pop
lods
pop
sub
pop
xchg
lods
mov
or
mov
cli
xor
push
push
inc
inc
xor
hlt
dec
pop
lcall
inc
rclb
divl
test
jle
loop
leave
lcall
std
scas
dec
mov
out
xor
mov
aas
dec
sarb
jns
jecxz
jl
add
movsl
xor
fisttpl
out
xlat
es
sbb
out
and
and
jg
or
lcall
sub
mov
or
pop
repz
data16
andl
pop
jp
scas
sub
rorb
sti
mov
ss
out
pushf
or
mov
cmc
into
repz
aam
cs
test
mov
dec
mov
jmp
and
dec
insl
mov
xchg
outsl
mov
lret
push
adc
repz
jo
and
sbb
lea
sub
pop
jge
insl
test
pop
cmp
stos
lret
div
mov
aas
inc
in
mov
bound
shld
dec
lcall
mov
pop
mov
or
shlb
jo
pop
notb
sub
clc
xchg
xor
rcll
imul
rorb
sahf
pop
mov
mul
jp
enter
push
faddl
mov
xor
mov
adc
test
outsb
stc
dec
and
push
push
push
fistpl
out
pop
add
cltd
outsl
cmc
add
int
dec
or
dec
xchg
outsb
push
mov
push
sub
dec
xor
rorb
aad
push
xchg
inc
popf
lds
in
mov
jecxz
mov
mov
test
xor
pop
popa
aas
addr16
popa
pop
call
jp
inc
out
lea
adc
inc
xchg
mov
roll
lcall
cwtl
int
push
sbb
inc
xor
gs
jbe
ja
jnp
fs
gs
mov
jl
or
mov
sub
lds
mov
or
fmull
loop
ja
jmp
cmp
or
sbb
sahf
cmp
jae
das
inc
push
fistl
icebp
push
cld
shr
stos
sub
inc
cmpsl
cld
fcoms
ljmp
sbb
and
pop
inc
sub
push
mov
jno
jno
inc
std
sbb
loopne
mov
push
jns
or
pop
mov
cmp
mov
aas
inc
mov
push
lret
icebp
mov
es
fimuls
add
pop
gs
or
stos
sbb
push
sbb
cs
pop
jg
lahf
jne
fldl
fisubs
mov
xor
pusha
jne
cmpsl
xor
dec
push
push
cmp
and
in
push
add
mov
mov
jmp
out
mov
pop
xchg
fwait
loope
sub
mov
push
popf
lods
jnp
jle
jecxz
xchg
int
adc
adc
mov
xchg
or
push
mov
cwtl
mov
add
xor
ret
sbb
and
jae
popf
fildl
std
dec
ja
das
inc
cmp
in
movl
test
stc
xchg
add
mov
jmp
repz
es
or
cli
xor
sub
jno
pop
dec
push
jns
push
mov
jg
loope
shll
pop
lods
mov
repz
mov
push
lods
xor
pop
in
movl
pop
add
stos
mov
adc
dec
ret
roll
sub
ror
adc
popf
out
add
dec
mov
inc
cmp
clc
negb
enter
adc
pushf
pop
rcl
adc
out
loope
cmc
out
mov
nop
cmp
fcmovnb
setle
shll
clc
sbb
mov
int3
mov
inc
mov
je
fcomps
sub
ret
test
ret
lcall
mov
hlt
adc
jne
int
out
xchg
or
or
sbb
or
pop
or
fs
sub
cmp
xlat
push
push
cmp
adc
cmpb
lock
push
imul
jb
mov
or
je
push
xchg
mov
cs
jle
xchg
cld
imul
gs
or
outsb
xchg
pop
xor
cmp
cmc
imul
out
sub
push
mov
imul
shrl
test
adcl
inc
fidivrs
mov
imul
int
stos
shll
imul
mov
sbb
lret
push
in
push
cltd
dec
inc
out
into
dec
push
aaa
and
lret
sub
jmp
pusha
dec
out
inc
fisttpll
stos
adc
out
mov
clc
mov
mov
aam
sbb
xchg
sub
pop
push
xchg
outsb
mov
inc
movsl
add
mov
xor
sbb
xchg
insl
mov
adc
clc
fnstenv
jae
or
sbb
add
loope
xchg
rcrl
mov
lods
sub
sti
add
sub
aam
lods
repnz
and
dec
push
cli
pop
cltd
popf
out
stos
hlt
adc
and
dec
inc
pop
mov
jo
sub
roll
adc
shr
test
inc
inc
and
inc
adc
mov
add
in
jns
jae
xchg
aam
jmp
sti
ljmp
sub
cld
sbb
insl
stos
mov
sbb
or
sbb
or
out
out
inc
popf
add
or
mov
pop
xor
decb
inc
in
test
fistl
pop
push
cmp
push
lock
mov
sub
push
jo
test
add
mov
sbb
fcoml
enter
and
je
call
int
scas
pop
adc
add
mov
push
xlat
xchg
sub
arpl
sub
pop
cmc
mov
std
mov
test
test
sbb
gs
xchg
aaa
ud1
xlat
xlat
or
int
cs
xchg
cli
inc
mov
jo
icebp
jle
ljmp
andl
adc
popa
fwait
in
or
ljmp
and
int3
jbe
icebp
int3
dec
mov
sub
xchg
add
sti
hlt
push
cwtl
add
lcall
das
aas
sbb
in
sbb
mov
cmp
das
and
cmp
pop
mov
sbb
scas
or
mov
mov
out
inc
lea
shr
fs
jl
mov
inc
lds
mov
adc
cmp
jg
andb
in
call
aaa
push
ja
mov
add
push
sbb
nop
xor
mov
jno
test
inc
sub
stos
pop
pop
cmp
les
inc
insl
pushf
mov
lods
mov
and
leave
push
stc
mov
xchg
push
dec
rolb
lds
jmp
inc
push
sar
pop
mov
aam
mov
popf
fnstcw
stos
jl
fbstp
xor
adc
xchg
outsb
stos
push
push
fstpl
push
cmc
pop
inc
add
pop
and
cs
add
mov
pop
jb
scas
xchg
test
sbb
push
ljmp
cs
push
sbb
repnz
decb
inc
push
lret
cmpsl
sbb
ja
inc
jb
inc
je
cltd
add
add
arpl
sub
cmp
cli
or
bound
add
cli
sub
sbb
dec
xor
xchg
adc
mov
bound
out
stos
add
push
test
and
adc
xchg
cli
and
movsl
xchg
and
loope
cwtl
rcll
mov
repnz
cli
out
subb
lds
jae
call
ret
push
dec
xchg
push
fs
mov
rorl
mov
popf
hlt
enter
and
push
push
lahf
call
pushf
hlt
loop
jae
loopne
out
fimuls
outsb
inc
popf
pop
xchg
lret
pop
lret
add
sahf
sti
adc
test
sbb
jp
lea
push
ljmp
mov
fwait
inc
outsl
int3
orb
sbb
mov
jmp
push
out
push
fwait
movsb
leave
push
cmp
fcmovnbe
inc
pop
mov
or
push
ficomps
inc
or
dec
jns
outsl
dec
movsl
mov
push
xlat
loopne
xor
adc
shlb
jmp
daa
push
psubd
ret
lcall
shl
in
pop
mov
adc
jge
cmpsb
nop
and
in
ljmp
pop
pop
ret
mov
sbb
sbb
mov
sub
inc
sbb
mov
incb
fstpl
js
loop
mov
call
sbb
xchg
add
imul
les
loope
aaa
mov
mov
negb
sahf
push
insl
push
or
out
mov
mov
leave
call
jae
lock
pop
pop
xchg
pop
enter
sar
inc
mov
loopne
xchg
xlat
fldenv
aas
xchg
nop
xor
cwtl
and
or
sbb
cmpsl
gs
or
jecxz
push
xor
mov
cmp
es
add
test
scas
lret
mov
inc
inc
mov
mov
jno
jge
lahf
leave
cmp
xchg
and
mov
adc
mov
dec
xchg
clc
fwait
inc
aad
sbb
inc
popf
push
push
add
lods
aad
daa
add
fdivs
outsb
cmp
add
mov
inc
push
jmp
mov
push
mov
or
inc
mov
sbb
jp
test
jl
mov
adc
push
out
repnz
mov
sti
xor
pop
xchg
arpl
out
mov
push
stos
sub
in
adc
add
sbb
pushf
and
sbb
mov
sarl
pushl
cmp
aaa
or
dec
notl
outsb
div
sbb
dec
pop
rorl
or
mov
xchg
and
jge
in
leave
out
outsl
cli
hlt
sub
jge
ljmp
inc
ja
add
xchg
clc
xchg
push
xor
cmp
andb
push
stos
stos
hlt
mov
dec
fcom
mov
xchg
int
std
int3
bound
pop
pop
cmpsl
pusha
int3
addr16
mov
in
les
or
pop
das
cmp
push
stos
out
push
sahf
sub
rorb
je
pop
inc
push
xor
mov
push
test
mov
cmp
je
and
inc
cmp
ds
out
jmp
lock
jecxz
mov
scas
sub
jb
jnp
mov
ja
std
fcomps
push
and
les
decl
gs
inc
or
add
orb
jns
jns
push
sbb
xchg
pop
and
jle
mov
or
xchg
add
or
and
ret
cmpsb
imul
xchg
leave
popf
es
sbb
out
leave
sbb
adc
fisttpl
sub
add
mov
jecxz
xor
test
shl
mov
or
scas
orl
out
mov
sbb
test
lods
test
mov
and
stos
roll
pop
clc
and
in
push
outsl
daa
jge
in
sbb
jo
push
mov
jl
mov
mov
xor
loop
adc
idivl
mov
fwait
xor
pop
dec
mov
das
pushl
jb
shr
dec
out
mov
add
lock
insb
mov
push
mov
mov
pop
fs
push
ljmp
stc
notl
call
fimuls
nop
ret
iret
ret
jnp
bound
shlb
cld
push
jbe
jns
in
add
or
and
pop
pop
inc
xor
push
das
ljmp
das
add
jo
sub
les
sub
adc
pop
sub
sahf
sbb
xorb
sti
lods
out
sub
xor
lret
or
jmp
push
sub
insb
inc
adc
ss
cmp
ficompl
push
movsl
inc
mov
insb
popa
mov
jbe
xchg
popa
sbb
pop
test
fucom
push
das
imul
lret
lods
push
sub
fsubr
dec
bound
pop
ret
and
push
out
int3
test
mov
nop
shl
ds
incl
jae
inc
pushf
dec
out
mov
out
mov
xor
std
inc
clc
in
iret
sub
dec
pop
cs
mov
arpl
ja
jae
stos
sbb
gs
lahf
lea
inc
loopne
xor
loop
call
fldt
or
dec
xchg
sub
xchg
push
cld
je
mov
icebp
fildll
stos
mov
pop
mov
repnz
or
mov
jle
jecxz
lcall
jne
daa
out
jns
stos
add
and
xor
ret
or
sub
xchg
aad
jge
lahf
mov
fistl
or
test
movsl
push
mov
mov
lret
imul
js
cmpsb
loope
mov
call
scas
shr
adc
xchg
inc
pop
jp
sbb
outsl
adc
fs
xor
sbbb
pop
xchg
push
je
pop
xor
test
imul
push
shrl
jo
loope
in
lret
lret
dec
xchg
push
xchg
int
aam
jbe
pushf
push
loope
mov
dec
jb
xchg
xchg
xor
and
addr16
pop
lock
inc
ret
bound
int
aad
sbb
mov
arpl
push
pop
inc
es
jns
iret
inc
mov
aam
ret
pop
in
dec
mov
jns
sti
and
cmp
or
jg
lahf
test
sbb
std
push
jp
out
fisttps
movsl
lcall
in
and
mov
subb
insl
sbb
jg
jmp
jno
in
adc
add
adc
std
pop
pop
hlt
pop
outsl
fwait
hlt
xor
mov
adc
andw
lods
into
in
jg
xchg
scas
cli
mov
sbb
ret
orl
repnz
incl
and
bound
adc
enter
mov
nop
insl
js
pop
push
add
pushf
xor
sub
out
ja
mov
jbe
push
and
dec
aas
push
arpl
pushf
dec
sbb
faddl
hlt
lahf
sub
push
mov
pop
mov
push
xchg
mov
mov
loopne
and
lahf
cld
icebp
push
in
xor
out
add
fnstsw
inc
push
test
stos
or
es
push
xor
inc
lret
pop
mov
sub
adc
inc
shr
jnp
pop
mov
in
mov
xchg
roll
arpl
rcll
mov
aas
jp
loope
jo
sbb
fisubrl
cmp
sub
or
mov
jnp
and
xor
mov
mov
sub
ret
pop
inc
pop
imul
add
in
mov
dec
adc
push
out
sub
xor
mov
cwtl
js
movsb
out
enter
sbb
mov
movb
in
loop
lcall
jge
push
push
xchg
shr
push
aad
pushf
test
hlt
rcll
dec
stc
xorb
std
sub
lret
mov
cmp
mov
aaa
or
out
leave
xor
sub
fdivrs
mov
mov
iret
adc
aam
stos
int3
jnp
sarl
push
xchg
cmp
in
mov
movsl
adc
lods
mov
fcmovne
adc
ds
mov
mov
hlt
dec
dec
cmpsb
adc
cmpsb
sub
mov
pop
xchg
adc
imulb
cmp
or
push
cld
jle
mov
mov
leave
dec
rorb
and
popf
mov
push
adcl
pop
les
orl
mov
aad
movsb
push
mov
pop
stc
jno
stc
std
jp
sbb
xor
xor
sbb
xlat
cmp
in
xor
in
inc
pusha
adc
push
sub
xchg
push
push
stc
mov
xchg
jle
ds
es
lods
es
push
cmp
dec
nop
mov
push
repz
pop
xlat
cmc
add
movsl
addr16
xchg
lods
data16
fidivs
sbb
xor
stc
cmp
je
inc
sbb
sti
xorb
sbb
jb
incb
jns
into
seto
sbb
into
outsl
dec
jo
push
jae
clc
stos
pop
les
test
test
pop
aam
mov
lcall
push
sarb
cmp
cmp
testl
adc
fcmovbe
ljmp
bnd
xor
sub
inc
push
xchg
sar
pop
sbb
push
aad
and
inc
in
sbbb
sub
adcb
stos
xchg
mov
mov
dec
scas
sub
int3
mov
mov
mov
rol
rcrl
shll
lods
push
adc
lcall
adc
mov
xor
jge
fwait
cmpsb
out
leave
mov
bnd
repnz
xor
cwtl
roll
lcall
adc
pop
inc
cli
popf
mov
loop
sub
jbe
dec
imul
je
rclb
mov
enter
mov
dec
adc
push
lcall
add
lods
pusha
cmp
arpl
add
cli
cmp
or
out
ret
test
dec
fld
dec
je
cmp
je
inc
pop
and
pop
inc
addr16
out
je
xchg
adc
push
fdivrs
pop
xor
pop
jno
cltd
rcrl
and
into
mov
es
into
pop
cmc
xchg
int3
xchg
jmp
ret
lds
pop
mov
test
shll
ljmp
popf
sub
xchg
sti
cli
pop
jae
es
and
sbb
cmp
mov
mov
pop
pop
cli
inc
jp
pop
mov
out
mov
mov
scas
pop
xor
pop
iret
sahf
ror
cmp
mov
addb
ret
push
push
pop
ret
ret
std
arpl
ljmp
mov
scas
stos
mov
jno
js
imul
jl
or
adc
in
stos
xchg
lods
mov
xor
jecxz
aam
ficoms
lcall
mov
popf
fmull
push
movsl
xor
sbb
or
cmp
dec
gs
fadd
sbb
mov
jns
outsl
jno
add
cld
loope
mov
sub
outsb
jmp
or
mov
mov
repz
loop
scas
xor
jecxz
jmp
dec
sbb
sub
mov
mov
lock
xchg
and
xchg
jmp
fwait
dec
or
adc
sbb
adc
xorl
lahf
cmpsb
test
ret
aam
out
xadd
and
rorb
mov
gs
mov
push
cmp
out
cmpsb
sysret
enter
jae
lahf
lret
mov
jg
dec
fisubrl
sbb
movsl
mov
cltd
sbb
call
or
scas
in
or
ror
jl
sarl
enter
inc
xchg
jl
cltd
push
std
mov
inc
loope
call
mov
add
xchg
rcll
sbb
push
mov
loopne
inc
sbb
sbb
in
push
jo
sarb
mov
sub
push
leave
sbb
movsl
or
test
sbb
dec
popa
inc
sub
push
hlt
out
xor
and
testb
popf
inc
mov
jecxz
push
cmpsb
mov
mov
clc
cs
leave
jae
push
or
adc
cmpsb
cwtl
cmc
mov
cmp
gs
mov
daa
pop
push
testl
popf
lret
imull
lcall
mov
scas
or
lock
ret
xor
xchg
insl
pop
inc
xor
gs
pusha
jo
fwait
inc
in
popa
repz
fs
shll
xor
aam
pop
enter
adc
aad
test
ds
inc
cmpsl
lock
pop
cmc
add
sbb
xchg
dec
in
icebp
xchg
cmp
inc
dec
and
mov
mov
scas
fwait
jae
adc
inc
jecxz
xchg
sub
jl
fsubl
lahf
sbb
rcr
cli
adc
cmp
dec
mov
lds
and
mov
add
jecxz
insl
and
inc
into
cmp
mov
jne
fcmovu
push
mov
cmp
rcll
int3
add
push
shrb
iret
push
popa
dec
or
adc
pop
out
leave
push
push
sbb
and
sbb
sbb
in
xchg
sbb
insl
jge
sbb
in
lret
gs
adc
imul
and
xor
xchg
rorl
ret
mov
mov
pushf
aas
ss
push
dec
fnsave
cmp
int
loop
push
aaa
push
cmp
shll
pop
loope
aad
or
push
jbe
fxch
std
fwait
int3
mov
dec
mov
sub
jno
fiaddl
jo
fstps
and
sbb
scas
jno
clc
in
inc
push
xorl
je
arpl
cmp
push
inc
cmc
jge
sub
push
fistl
inc
xchg
hlt
or
popa
push
mov
xor
shrb
fmul
ljmp
in
fildl
out
lds
out
inc
pop
xlat
mov
jbe
loope
dec
sub
out
testb
sarb
mov
fistpl
lcall
pop
in
popa
dec
xchg
xor
and
xorb
cmp
add
scas
adc
fists
in
lahf
jecxz
pop
insl
aaa
stc
lods
popa
sbb
fwait
cmp
dec
sub
testl
icebp
mov
mov
xchg
test
mov
pop
jl
insb
mov
bound
rcrl
push
or
rcrb
into
ja
sbb
lock
pop
outsb
adc
sbb
mov
outsb
pop
xor
cmp
mov
bound
hlt
repz
into
jle
das
or
inc
add
and
pop
xor
inc
sbb
loop
adcb
jmp
push
popa
test
ret
hlt
fcmovu
stos
xchg
hlt
mov
add
dec
in
out
or
pop
icebp
inc
jo
xchg
sub
jb
jl
pop
sahf
push
push
shl
pop
mov
sbb
mov
cmp
lcall
outsl
lahf
es
inc
xchg
mov
add
jle
xor
xorb
fnsetpm(287
add
jmp
std
xchg
scas
adc
dec
clc
pop
aas
js
movsb
mov
pop
lahf
jb
mov
and
rolb
xor
dec
add
repnz
fisttpll
cmp
outsb
xlat
inc
movsl
cwtl
xor
ficompl
push
mov
inc
popf
inc
scas
lods
shrb
pop
mov
dec
pop
sbb
imul
imul
mov
stc
push
lods
insb
push
dec
dec
xor
negb
lahf
rolb
sub
and
ret
jo
cmp
shll
lret
xlat
inc
jne
out
sahf
xor
pop
daa
mov
xchg
jle
adcb
add
adc
sbb
sub
cmpb
push
adc
xor
popf
adc
push
lock
out
mov
dec
cmp
sub
push
gs
pop
repz
and
dec
push
and
jb
gs
adc
cmp
adc
mov
cli
aad
addl
popf
add
push
sbb
mov
xchg
jbe
ds
xor
mov
shll
test
testl
ret
and
or
movsb
pop
cmc
orb
fsub
popf
sahf
arpl
or
mov
xchg
push
fbstp
inc
mov
jns
and
cmp
shl
mov
sbb
jae
decb
iret
pop
pop
mov
jb
filds
pop
or
pop
shll
inc
sub
sarl
sbb
mov
or
es
jae
cmpsl
outsl
arpl
xchg
cld
sbb
inc
xchg
daa
or
xchg
cmp
xor
js
hlt
push
gs
add
call
js,pn
mov
imul
call
jp
dec
sub
call
pop
pop
xchg
movsb
jo
clc
add
mov
push
pop
cmp
sub
ror
cltd
pop
enter
jge
inc
ret
inc
idivl
jno
xor
xchg
inc
mov
or
dec
inc
mov
xor
mov
pop
jp
divl
popf
lds
cwtl
test
pop
pop
cmpsl
xchg
mov
div
and
les
ret
enter
dec
lret
cmp
xchg
cmpsl
mov
and
fidivs
and
aas
jg
sbb
add
loope
sbb
push
sub
and
cwtl
mov
loopne
sbb
lods
addr16
xchg
push
mov
lods
in
fidivrl
add
mov
or
or
inc
test
je
mov
sbb
sbb
enter
pop
xor
insb
and
imul
insl
pop
pop
and
mov
das
pop
dec
xor
dec
dec
xchg
int
mov
aam
pop
and
dec
fnstsw
xor
pop
push
mov
aad
aad
imul
inc
lods
lret
mov
cli
andb
mov
fwait
aam
clc
jle
lret
sub
ds
outsl
sub
mov
mov
cwtl
push
add
and
dec
out
lahf
jecxz
addr16
sbb
add
fmull
push
shll
pop
repz
mov
loop
sub
data16
jns
pop
cwtl
xchg
xor
mov
scas
mov
add
lock
rcrl
jno
fs
mov
jecxz
mov
adc
sub
mov
add
push
div
ret
sub
cli
sbb
ljmp
mov
fnsave
bound
inc
scas
push
pop
inc
idivl
cld
inc
mov
fistpll
or
leave
pop
test
mov
out
mov
cmp
dec
andb
and
sbb
lret
xor
xor
sahf
pop
adc
clc
inc
xor
cmpsl
or
xchg
mov
add
stos
pcmpeqd
loopne
lret
cmp
mov
pop
fidivrs
cmp
data16
inc
cmp
sbb
push
xchg
lret
or
dec
inc
in
cmp
insb
mov
ds
xchg
rorb
ds
adc
imulb
int
loopne
shrb
inc
pop
pop
cmp
pop
xchg
add
jb
xor
movsl
mov
xchg
jo
insl
mov
scas
outsb
xor
imul
aas
mov
inc
push
xor
pop
push
push
xchg
sub
movsl
xor
out
clc
int
mov
in
jbe
rorl
lahf
mov
xchg
xor
dec
ret
xor
jecxz
fsubr
pop
or
jno
pusha
and
cmc
inc
cmp
loop
adc
cmp
bound
int3
in
fs
xor
jmp
push
aaa
fsubrs
mov
mov
loopne
sbbb
gs
cmpsl
push
dec
xchg
push
rcr
stc
ja
shll
pop
push
cwtl
xor
mov
xor
ds
adc
adc
pop
dec
sbb
mov
adc
mov
mull
xlat
adc
insb
add
pop
and
test
cmc
jmp
loop
push
iret
movsl
dec
fst
jge
mov
imul
cltd
sbb
dec
push
test
adc
cwtl
das
push
inc
push
jecxz
push
and
pushf
dec
repnz
stos
lods
pop
add
sub
loope
insl
pop
test
dec
in
sub
push
sub
mov
rcll
xor
xor
je
ss
ss
mov
aas
push
jge
in
xchg
mov
mov
test
cli
cltd
out
ss
adc
add
stos
mov
insl
fdivp
and
lods
shll
flds
cmp
xor
mov
xor
and
add
mov
in
idivl
es
ret
ret
sti
aam
xchg
sbb
sbb
sub
das
movsl
push
orl
mov
dec
dec
add
out
and
push
pop
add
dec
dec
ja
and
jns
xchg
loopne
cmpsl
lahf
and
pusha
jmp
push
push
jb
and
and
cmp
data16
jb
in
or
dec
imul
push
mov
cmp
jmp
bound
scas
es
mov
outsb
outsl
inc
push
sahf
shrl
dec
pop
popf
push
hlt
xor
mov
in
jne
xor
out
mov
fsub
pop
jnp
dec
xor
imul
std
imul
movsl
fs
jo
aaa
out
les
movd
mov
addb
notb
bound
cmpsl
cmpsb
lods
mov
cmp
xchg
into
bound
stos
lcall
stos
push
xor
clc
ret
push
jnp
jp
fwait
jns
mov
test
and
out
leave
mov
enter
push
jge
movsb
pop
sahf
sub
push
mov
xchg
inc
sbb
pop
jno
lods
insb
out
insb
xor
les
push
jg
inc
mov
ljmp
ja
fstpl
inc
stos
sbb
push
xchg
add
int3
jno
sahf
sahf
stos
mov
pop
loop
pop
or
out
test
shll
mov
add
xchg
orb
xchg
lds
push
ja
scas
mov
rcll
jmp
xchg
enter
inc
sarb
repnz
sub
in
add
sti
outsl
add
dec
cld
mov
in
stc
xor
sub
jno
je
popf
dec
xchg
stc
fidivrl
aaa
test
jmp
aas
xchg
lods
adc
dec
in
inc
cld
adc
mov
and
cltd
xor
adc
or
cwtl
test
fisttpll
jmp
dec
dec
pop
xlat
ret
addb
cwtl
mov
or
iret
or
and
pop
inc
add
cltd
fistps
imul
popa
xchg
push
lret
ja
fwait
pop
pop
daa
popa
bound
je
xchg
ljmp
rolb
xor
sarl
add
mov
pop
mov
loopne
jmp
jle
movsl
loop
xchg
mov
scas
mov
xchg
push
pop
out
sub
push
push
sub
test
mov
ret
fwait
sub
lret
ljmp
push
leave
imull
mov
xor
adc
pop
mov
xchg
fnstcw
xor
int
cmc
xlat
mov
rorb
popa
cli
xchg
pop
je
divb
out
out
shrb
inc
mov
jge
inc
or
jg
or
push
into
push
mov
adc
iret
hlt
movsl
mov
iret
fidivl
sub
and
in
jbe
scas
xor
and
aam
xchg
inc
push
shrl
fidivrl
daa
rcl
imul
enter
xchg
sub
inc
into
fwait
test
xor
das
pop
or
pop
int
mov
mov
jge
add
mov
mov
push
fdiv
dec
rorb
dec
mov
xchg
xchg
jbe
jg
adc
jl
add
inc
je
cmp
aaa
push
ret
mov
shlb
pminsw
fiaddl
or
loope
pusha
fdivr
pop
xchg
jle
sub
push
sbb
adc
pop
pop
call
jb
or
mov
cmp
or
mov
pusha
in
std
inc
in
dec
cmc
out
int
test
dec
jns
sub
int3
fcomp
or
dec
fisttps
inc
stos
jle
stos
push
cmpsl
mov
imul
mov
and
inc
in
mov
hlt
push
aam
popl
adc
push
shll
sbb
xchg
rcrb
sahf
pop
sub
lcall
jp
jg
xor
test
inc
sub
jmp
xchg
out
mov
in
cs
mov
test
xchg
xor
leave
jecxz
fidivrl
inc
pop
addb
roll
inc
sbb
dec
shlb
loope
add
lock
sbb
cmp
ret
or
out
adc
out
push
es
jo
add
mov
cmp
fcmovbe
adc
sbb
sub
in
mov
inc
cmp
arpl
ret
mov
mov
mov
cmc
mov
mov
sbb
aad
std
sbb
mov
jno
testl
mov
nop
in
dec
or
jnp
cmp
adc
icebp
cli
xchg
push
add
int
ret
enter
hlt
movsl
fnstsw
movsl
enter
jmp
repz
mov
jae
rcl
push
pop
add
mov
rolb
cmc
push
hlt
out
test
adc
cmp
inc
add
repnz
xchg
ret
outsb
jo
out
pop
mov
push
cwtl
push
fs
mov
push
sti
inc
aad
fnstenv
mov
fs
in
jno
xorl
cmp
call
cmp
push
xchg
mov
sub
divb
xor
imul
mov
loope
inc
pop
ret
jle
jge
and
in
sub
jg
or
push
and
xor
outsb
mov
sbb
es
jnp
scas
pop
jle
test
or
ds
hlt
dec
jmp
xchg
leave
xchg
aam
loopne
div
push
out
fwait
mov
sub
dec
femms
shll
or
or
imul
jb
pusha
lret
ret
cld
lret
add
outsb
xor
mov
xchg
lret
xor
add
jae
in
imul
jmp
or
add
cmp
push
hlt
in
jnp
jge
xchg
or
pop
aas
clc
leave
jle
cli
je
dec
movsl
fs
rcr
inc
int
lods
pop
shl
push
jno
push
aaa
mov
cmp
xor
lcall
and
call
pop
inc
daa
push
ja
fsubrs
cld
sbb
pop
mov
mov
jns
adcb
dec
xor
adc
icebp
in
jae
ficoms
scas
or
cltd
mov
sub
cmp
mov
cli
xor
je
dec
sahf
dec
jb
cmc
mov
xchg
mov
pop
cmp
mov
ficomps
rorl
fmull
cwtl
bnd
mov
popf
in
in
in
notl
xor
xchg
inc
jle
aas
in
icebp
ja
add
cltd
fldt
fstpt
xor
cld
sahf
lock
fnsave
adc
pop
push
roll
add
and
push
orl
gs
mov
fidivs
jb
nop
pop
out
sbb
scas
and
xchg
xor
adc
int3
rolb
dec
sbbl
dec
hlt
in
iret
sub
cltd
xchg
jbe
mov
mov
or
jne
inc
mov
out
inc
loop
mov
sbb
mov
dec
vphsubbw
xor
push
mov
mov
and
dec
jno
dec
pop
lcall
ss
lock
adc
sub
mov
lret
mov
sbbl
or
xchg
gs
add
sahf
adc
lcall
mov
and
mov
bound
xor
add
push
cwtl
or
pop
jl
lods
mov
inc
fwait
pop
int
jmp
xor
push
xor
jecxz
andl
fisttpl
sti
int3
mov
and
mov
leave
sahf
inc
arpl
ljmp
divl
adc
imul
fbstp
adc
sbb
mov
mov
dec
lret
int3
sbbb
mov
hlt
mov
xchg
cld
imul
push
leave
inc
and
and
dec
out
in
loope
jne
call
clc
push
mov
jbe
pop
mov
or
push
mov
cld
loopne
sbb
cwtl
clc
neg
jbe
sbbl
imul
dec
mov
mov
dec
xchg
add
inc
ret
in
cmc
clc
or
outsl
call
or
sbb
roll
stc
jg
fsub
push
xchg
mov
imul
mov
imul
push
aaa
enter
mov
test
mov
inc
arpl
cmp
scas
clc
cltd
mov
imulb
cwtl
stos
jnp
cmpsl
adc
xchg
popa
xor
adc
lcall
mov
rolb
dec
in
lock
das
mov
mov
or
out
mov
imul
push
aaa
adc
sahf
cmp
jno
lret
jo
mov
lds
and
xchg
jmp
out
xor
in
push
std
cmc
testb
popa
fwait
call
cli
dec
jle
pop
mov
jge
fiaddl
mov
mov
add
shl
ficomps
xchg
xor
leave
adc
lods
cmp
jne
loop
and
sbb
xchg
mov
add
pop
inc
jge
push
xor
mov
repz
test
rorb
push
sbb
rcll
out
movsb
loope
sbb
je
insl
sub
cmp
lds
leave
outsb
pushf
addr16
mov
jl
data16
fimuls
sbb
dec
sti
cmc
jnp
or
les
pop
into
cld
xchg
daa
mov
fcompl
mov
movsl
lods
jle
sbb
cwtl
fisubl
jae
aam
sahf
mov
rclb
scas
jb
shrb
jno
pop
sub
scas
in
cld
inc
sub
pop
sti
add
scas
fmul
shrl
clc
inc
inc
roll
les
pop
cmp
push
mov
and
jbe
xchg
jl
pop
adc
xor
bound
shlb
out
retw
add
pushf
mov
sub
jae
js
in
in
fildl
sbb
pop
pop
push
xchg
fidivl
jns
or
fidivrl
sbb
mov
andb
ljmp
mov
insb
mov
shll
out
inc
mov
jne
movsl
and
cmp
in
scas
in
inc
aam
stos
mov
int3
cmp
pop
scas
inc
outsl
cmp
loopne
int3
addr16
fs
pop
rorl
mov
test
add
into
stos
pop
mov
jne
shr
push
mov
cmc
inc
sub
mov
pop
in
pop
in
xor
outsl
loopne
xchg
push
into
mov
stc
xchg
and
sbb
in
xor
dec
cs
insb
subl
cmp
cli
icebp
jmp
xchg
push
xor
nop
repz
lds
pop
mov
mov
out
jmp
outsb
xor
add
push
sub
rorb
jp
push
mov
jo
lret
cmc
dec
cmc
jns
out
inc
xor
dec
mov
stc
mov
sub
sub
jb
aaa
out
pop
insl
insb
jns
inc
xor
push
rolb
push
jb
imul
in
pop
ret
fildl
add
into
xchg
ja
bound
adc
jl
insl
loopne
pusha
call
jmp
icebp
mov
mov
xchg
jns
shld
lods
into
lret
cmpl
enter
arpl
push
out
loopne
pushf
push
outsb
cltd
push
push
stc
push
lods
jno
test
sbb
mov
test
or
jmp
imul
out
pop
pushl
xor
adc
and
xchg
cmp
adc
mov
jg
push
jle
xchg
mov
lahf
push
xor
out
loopne
leave
xor
iret
fisttps
sbb
and
enter
cmp
mov
movsl
cmc
fists
jns
jmp
pop
mov
xchg
fstps
mov
stos
negl
jno
js
jno
loope
pop
jne
ss
xchg
jmp
mov
movsb
out
lcall
or
inc
fiaddl
iret
hlt
or
xchg
or
in
divb
enter
inc
pop
pushf
mov
cmp
sub
and
inc
or
xlat
and
xor
mov
loop
decb
pop
cmp
rorl
push
cmp
pop
and
js
cmpsb
fneni(8087
lret
repnz
int3
push
mov
cs
xlat
mov
mov
addr16
mov
insl
jmp
fadds
jecxz
pop
xchg
mov
jbe
inc
inc
aad
cltd
adc
mov
repnz
into
xchg
repnz
mov
lcall
test
and
pop
in
xchg
xor
xor
bnd
sbb
or
ds
test
mov
push
daa
fcmovbe
dec
call
aas
xchg
add
jg
out
addl
test
jo
les
mov
xor
inc
xor
xor
rcl
xor
inc
xchg
adc
xchg
and
push
pop
je
adc
icebp
xchg
or
and
lea
frstor
mov
inc
scas
adc
mov
mov
or
aas
les
out
in
test
jo
adc
mov
fistps
dec
add
jmp
test
mov
insb
xchg
mov
xor
outsl
call
mov
into
shrb
adc
inc
out
xor
cmc
pop
add
sub
jle
pop
inc
add
xchg
dec
arpl
imul
lea
int3
mov
rcll
outsb
jns
je
jecxz
test
jbe
lods
pop
fwait
push
xchg
arpl
sub
mov
dec
mov
stc
aas
notl
pushf
pop
shrb
ja
scas
mov
in
aas
push
fs
insl
mov
push
pusha
jecxz
pop
mov
pop
test
mov
jne
adc
jmp
dec
ljmp
adc
cwtl
pop
sbb
xor
sar
mov
cwtl
cmp
dec
dec
mov
std
lcall
ja
pop
int
pop
int3
mov
lcall
mov
mov
mov
jl
in
pop
sub
inc
rcr
cmp
mov
adc
sbb
xor
xlat
aam
cmp
sbb
jno
ret
mull
mov
movb
lds
test
mov
out
leave
or
jmp
nop
mov
je
mov
int3
and
out
xchg
xchg
lds
jnp
adc
pop
mov
cltd
and
stc
add
fidivrl
add
into
scas
mov
clc
enter
lods
adc
cmovle
addb
jge
sub
push
mov
jmp
xchg
inc
scas
dec
mov
xor
shrb
es
pop
mov
int
dec
loope
sub
adc
adc
stos
gs
fiaddl
pop
inc
idivb
notl
pushl
clc
gs
clc
and
adc
icebp
mov
cmp
fmull
lahf
inc
fdivrl
mov
and
push
mov
nop
clc
js
xchg
xlat
push
decb
mov
js
lods
inc
test
call
stc
pop
sbb
pop
fidivrl
or
push
fists
ljmp
lahf
dec
xor
cld
out
stc
test
scas
aad
sbb
or
dec
sbb
cld
mov
sub
fnsave
cmp
orb
out
out
movsb
ret
scas
add
mov
cs
add
lock
lahf
aam
hlt
mov
cmp
pop
xorb
or
jb
xor
pop
into
scas
daa
movsb
and
xchg
jo
adc
xadd
loopne
lret
push
movsl
fidivl
std
mov
test
lea
les
js
xor
sti
out
jbe
xchg
push
jp
cwtl
aam
outsb
mov
push
push
xchg
popa
xlat
in
dec
jl
imul
lret
dec
repz
adc
inc
rcr
in
mov
and
sahf
push
int3
cmpsb
push
jbe
or
cmc
xor
lods
inc
scas
popf
lcall
in
inc
es
dec
pop
adc
shl
push
and
xchg
test
mov
sbb
sbb
jb
xlat
push
pop
inc
xchg
push
jg
fildl
jl
add
lahf
xor
pop
out
dec
xor
hlt
adc
and
xor
dec
add
push
mov
or
xor
sahf
xchg
daa
flds
sbb
adc
pop
jg
add
sbb
pusha
dec
mov
xor
dec
inc
scas
pop
into
sub
scas
dec
push
sbb
mov
movsb
rcrb
subb
pop
inc
xor
lret
xchg
mov
jne
in
ficomps
xchg
call
xchg
mov
sub
pop
loopne
insl
mov
xchg
daa
lahf
ss
jbe
cmpw
jo
ljmp
fwait
jmp
sbbb
jb
push
or
arpl
adc
adc
rorl
fdivr
call
aam
xor
stc
rorl
or
xor
testl
xor
enter
sahf
pop
dec
ljmp
insb
xor
inc
xchg
stos
add
push
int3
sbb
stc
and
sub
push
mov
je
ror
rol
jne
aaa
add
lret
add
jecxz
test
daa
ret
xor
fs
add
lcall
mov
test
mov
jae
fmull
and
popa
lcall
loopne
jecxz
lods
cmp
addr16
mov
test
loop
loope
aaa
cmp
in
cmp
mov
mov
in
mov
xorl
cld
or
fistl
movsb
jg
cmp
fcomip
hlt
mov
sub
and
iret
imul
test
out
lahf
stos
xchg
icebp
xor
repz
repz
push
and
data16
jbe
dec
loop
fiadds
std
sub
or
sbb
pop
mov
lret
mov
cmp
and
les
pop
fwait
xchg
hlt
inc
cmp
cmp
sahf
rep
stc
pop
ja
ret
inc
mov
xor
sbb
cmp
cmp
out
mov
data16
cmc
testl
aas
fildll
add
mov
int
dec
jb
inc
push
sbb
lret
ret
pop
fists
je
dec
jne
inc
mov
pop
movsl
jecxz
imul
jbe
or
cwtl
mov
lret
jle
add
fidivrs
xchg
jo
in
mov
push
mov
adc
dec
push
jnp
mov
jns
rcll
subl
mov
lret
xlat
cmp
dec
xchg
mov
hlt
inc
enter
xchg
inc
aas
jg
pushw
mov
inc
add
pop
es
mov
pusha
clc
shll
data16
stos
xchg
in
es
clc
dec
push
dec
movsl
sbb
rcrb
cmp
js
add
inc
jl
jmp
jge
test
and
js
jg
sbb
sub
shll
inc
aas
fcmove
and
mov
out
jb
mov
adc
sbb
daa
pop
push
bound
es
lret
aad
stos
divl
mov
xchg
and
lods
movsb
xor
cmp
jp
outsb
rorl
ret
and
insl
pop
pop
mov
mov
push
and
or
je
pop
add
repnz
mov
dec
cmp
adc
jb
stos
fdiv
test
clc
loope
jg
xor
adc
fwait
testl
adc
mov
popa
jge
mov
cmc
sbb
imul
mov
mov
add
loope
lea
xchg
push
jns
jg
push
test
out
inc
sti
cmp
ds
imulb
mov
cmp
fs
cli
jae
mov
sbb
ss
rorl
adc
stc
adc
int3
jb
sbb
fldl2e
sub
xor
js
jle
jecxz
adcb
je
bound
incb
dec
ret
add
fdivr
pop
jbe
add
jmp
mov
sbb
xchg
mov
fbstp
jmp
ds
xchg
sub
push
jo
dec
mov
lret
das
out
sub
cmp
pushl
push
loope
cmp
sub
adc
push
mov
rcrb
idiv
outsl
sbb
jne
inc
subl
scas
xor
sub
push
xor
jae
gs
fwait
jne
cld
jcxz
sub
fs
sub
xor
lock
data16
or
movsb
aaa
sbb
mov
je
inc
push
sbb
and
aam
clc
sbb
call
push
lcall
cmp
lds
push
mulb
jg
sahf
call
mov
push
push
das
mov
pop
push
jg
or
decb
and
in
or
popa
out
add
test
adc
mov
xchg
mov
jecxz
mov
mov
nop
and
pop
les
pop
outsl
sar
jb
pop
movsb
pop
xorl
push
pop
push
pop
mov
mov
push
inc
jo
adc
push
push
xor
jl
rolb
xlat
testb
into
fistpll
and
pop
movsb
jl
stc
popa
cltd
adc
xchg
bound
loopne
les
inc
out
cmp
enter
ja
and
test
stos
adc
cmpb
or
cmpsl
adc
lds
mov
or
dec
icebp
cmc
and
test
repz
push
pusha
movsb
test
in
mov
jle
mov
xor
lea
xchg
in
jg
push
xchg
add
and
ja
sub
pop
mov
movl
mov
js
dec
pop
out
fsubrs
std
pop
sbb
btr
jmp
das
jp
clc
test
sbb
stc
popa
scas
inc
pop
push
sbb
mov
gs
sub
push
mov
or
lret
sbb
pop
pinsrw
dec
or
inc
mov
add
xrelease
sub
out
or
jne
cmp
pusha
pop
mov
and
sub
repnz
cmp
call
mov
and
xor
out
in
dec
repnz
gs
loope
pop
movsb
aaa
jnp
dec
dec
orl
inc
cmpb
push
mov
mov
inc
and
xchg
jne
xor
divb
xor
dec
int3
aas
or
dec
popf
mov
filds
adc
in
push
or
and
add
jecxz
xlat
sub
popf
mov
je
dec
fisubs
lcall
push
dec
add
xlat
jno
jne
jno
cltd
cmp
jb
inc
pop
testl
or
or
je
imul
jb
setne
nop
mov
scas
xor
fs
or
repnz
push
cltd
xchg
les
daa
dec
jno
dec
pushf
gs
dec
xchg
insb
mov
push
xlat
repz
inc
les
and
push
repz
push
std
prefetcht1
add
fstl
sub
sahf
xchg
imul
push
fcmovne
mov
sbb
or
sbb
pop
popf
cmpsb
push
pop
mov
sub
add
mov
adc
cltd
lret
inc
in
xor
outsb
or
mov
fxtract
add
ljmp
pop
cmpb
cmp
pop
xchg
adcb
dec
lods
or
mov
pop
jecxz
sbb
xor
out
cwtl
and
cmp
in
jg
xor
mov
daa
imul
mov
xchg
nop
or
clc
sbb
in
iret
mov
dec
fstps
test
jmp
and
inc
and
push
sub
cli
repnz
fnstsw
cmpl
hlt
or
and
inc
jnp
sbb
add
xchg
inc
mov
fdivr
xchg
fwait
out
call
hlt
clc
mov
insl
addb
ficomps
inc
xor
in
inc
cld
rcll
sub
mov
arpl
dec
hlt
mov
decl
push
jg
and
adc
or
inc
inc
jmp
jmp
aad
insl
call
jmp
pop
loop
ret
and
movsb
les
pop
xor
xor
push
inc
mov
out
and
sbb
pop
incl
pop
mov
sti
add
les
movl
lahf
out
cmp
bound
xlat
aas
mov
cwtl
decl
mov
push
divb
and
and
sti
pop
inc
jle
xchg
pop
mov
scas
hlt
cs
loope
inc
sbb
mov
mov
fistpl
or
xchg
nop
mov
inc
mov
int3
add
scas
mov
cmpsl
and
mov
jp
leave
inc
and
or
lds
cmpb
enter
jp
jb
sub
dec
inc
jae
xor
pop
in
sbb
push
outsl
loope
cmp
out
bound
and
loop
vpavgw
inc
in
or
rcr
jno
movsl
mov
loope
lcall
aad
lock
dec
xchg
jnp
fldenv
dec
cmp
dec
notl
fwait
jae
xchg
popa
mov
js
push
and
movsl
xchg
in
popf
incl
xchg
into
and
sbb
fbld
dec
rorb
iret
mov
out
pop
fcoms
jae
xchg
add
mov
ret
ljmp
lret
jmp
or
cmp
je
xchg
pop
dec
ljmp
lcall
ss
test
jb
jns
adc
cmp
fs
inc
inc
push
or
cltd
scas
and
fstl
seta
icebp
sbb
addr16
inc
mov
pushf
adc
dec
loope
push
xchg
imul
adc
lret
test
and
mov
jne
inc
loope
dec
push
push
loopne
push
dec
cmpsb
sbb
repz
int
popf
out
xchg
icebp
loope
xchg
jno
in
aam
mov
outsb
call
sahf
fsts
adc
and
adcl
repnz
pop
fwait
xchg
sub
dec
clc
mov
jae
fistl
xor
jmp
in
sbb
and
and
mov
inc
dec
testl
cmp
out
lahf
pop
xor
mov
lret
mov
and
call
adc
in
cltd
movsl
mov
pop
jnp
pushf
lods
push
imul
andb
jecxz
sub
sub
sub
jb
sbb
jl
cmp
sbb
sahf
sub
adc
mov
dec
or
xor
cld
in
and
add
or
sbb
sub
ljmp
push
mov
push
inc
mov
lcall
fcoml
movsb
jle,pn
icebp
pop
xlat
jne
addr16
add
gs
or
stos
jne
jnp
sti
push
inc
xorb
pop
mov
and
xor
xchg
scas
or
sahf
mov
cmp
sub
xchg
mov
xchg
add
test
xchg
ds
stos
int
popf
scas
push
adcl
mov
xchg
nop
stc
xchg
daa
push
imul
adc
loopne
and
jp
test
aam
mov
mov
call
xchg
sti
imul
mov
dec
dec
pushf
xchg
jge
rolb
lret
scas
inc
jle
mov
test
in
inc
movsb
push
lds
scas
loopne
ss
and
lret
fsts
dec
lock
into
popa
dec
push
inc
push
push
into
or
mov
rcl
mov
xchg
aas
fmulp
dec
mov
adc
xor
pop
scas
sub
mov
stc
imul
add
mov
mov
pop
out
xchg
cmc
xchg
std
call
or
pushf
mov
fld
inc
pop
addl
icebp
pop
xor
dec
push
mov
int3
add
xor
dec
es
idivb
mov
mov
xchg
jg
pop
or
sbb
mov
in
imul
pop
lea
stos
mov
mov
in
ret
sbb
mov
pusha
add
cmp
cwtl
inc
popf
ja
rol
fbld
or
insb
nop
lods
flds
int3
push
xlat
imul
mov
jmp
push
and
adc
aas
stos
repz
ja
and
sub
test
cmp
data16
push
loope
mov
shll
popf
xor
dec
jns
icebp
call
movsb
mov
test
jecxz
or
jmp
ret
fs
daa
sbb
mov
rolb
fimuls
mov
xchg
outsb
in
push
dec
inc
repnz
xor
cld
out
jge
add
inc
or
inc
cmp
xor
lds
enter
pop
repz
sbb
mov
cmpsb
jp
pop
lock
aas
cmp
lds
mov
xorb
mov
mov
jae
xchg
imul
jno
aaa
pop
adc
call
int
jo
adc
sbb
aam
jns
iret
push
sbb
sub
xorl
push
adc
xchg
mov
int
push
inc
adc
roll
imul
daa
mov
and
das
mov
xchg
test
dec
cwtl
push
in
jbe
adc
and
add
out
rdtsc
push
in
outsb
push
xchg
es
mov
loop
imul
and
dec
adc
xchg
movsb
fildll
pop
es
leave
dec
inc
or
arpl
andb
mov
mov
mov
out
pop
loopne
xlat
pop
adc
pop
push
rorb
xchg
popa
dec
lods
push
aam
fdivl
push
sahf
xchg
in
push
in
push
lcall
mov
into
inc
je
or
lret
inc
push
push
gs
out
pop
jbe
push
cmp
test
pushf
pop
jnp
movsl
jae
fcmovb
mov
xchg
push
add
xor
cmp
xor
or
bnd
jge
push
mov
popf
std
dec
popa
jmp
lds
jae
mov
ja
lahf
inc
push
shlb
mov
adc
sub
lahf
lret
leave
les
adc
out
iret
mov
incb
popf
push
dec
cmp
scas
es
push
rorl
dec
add
cmpsb
sbb
push
mov
mov
jg
mov
rorb
push
xlat
jg
out
jne
mov
pop
or
arpl
fsubs
mov
fs
inc
mov
ret
xor
and
mov
xor
cmpsl
inc
test
outsl
sbb
leave
xchg
add
inc
push
pop
jo
push
sbb
popa
or
imul
call
dec
movsl
cmpsb
bound
insb
ss
xchg
mov
fistpl
ret
cmp
pop
mov
fadd
das
roll
movsb
mov
mov
jns
icebp
pushf
fstps
aas
xor
cmp
loope
cmpsl
stc
mull
dec
sub
sti
pop
add
pop
inc
jo
xor
pop
fsub
fucom
adc
pop
in
dec
mov
rcll
pop
loopne
jns
push
stos
loop
insb
xchg
or
mov
mov
out
pop
int
adc
pop
xor
daa
add
and
stos
mov
mov
mov
add
adc
dec
inc
adc
xor
pop
inc
push
add
and
lods
jmp
lds
loop
cwtl
jmp
mov
int
out
jb
push
cs
lret
inc
inc
and
insl
and
mov
lret
js
add
gs
cmc
mov
div
jg
stos
add
or
rolb
sbb
setp
xchg
subb
sbb
mov
jae
pop
es
mov
lea
mov
dec
enter
add
jp
cmp
push
clc
inc
xchg
xor
xchg
ret
rcl
stc
shlb
cld
jne
dec
out
dec
out
xor
xchg
sub
daa
inc
add
rorl
push
mov
fstps
out
pop
mov
jae
pop
arpl
orb
sub
xchg
jo
adcb
jo
cld
cmp
sub
rolb
jmp
cmp
das
lds
jmp
xchg
insl
push
scas
push
imul
movsb
fisttpll
inc
sbb
inc
xchg
mov
inc
push
ja
lret
xchg
lds
cmp
pop
jl
push
dec
add
xor
clc
push
pop
loop
adc
addr16
pop
mov
enter
inc
sbb
stos
shll
xor
sbb
and
mov
and
push
inc
sbb
fwait
push
addr16
sbb
sti
mov
pop
mov
mov
dec
and
mov
cmp
jo
mov
pushf
xlat
push
repz
dec
ss
test
adc
dec
fnstenv
jg
push
ss
dec
fwait
mov
mov
dec
dec
cmp
xlat
pop
test
sti
test
loopne
jae
cwtl
int3
or
arpl
and
inc
aaa
arpl
pop
push
xchg
xchg
ret
mov
js
xor
call
mov
mov
cli
fxtract
or
icebp
add
mov
sub
xchg
mov
cmp
push
sbb
and
test
scas
lock
lahf
orl
jae
out
or
popf
jmp
adc
sub
pop
cli
clc
pop
or
adc
int
inc
jnp
shrl
and
sbb
pop
sbb
inc
hlt
fcos
and
jb
and
push
movsb
dec
inc
mov
outsl
imul
call
xlat
mov
and
dec
cmp
jo
nop
xchg
mov
xor
mov
inc
cmp
je
popa
push
push
sbb
cmp
mov
inc
aas
mov
test
or
mov
cmp
mov
adc
repnz
lret
jo
in
aam
inc
repz
mov
adc
rcrl
ss
movsb
mov
iret
mov
popf
push
sbb
fidivrl
in
pop
into
push
sub
fisttpll
mov
lret
inc
cmp
lret
ret
xchg
cmp
mov
and
adc
inc
sbb
cli
and
push
in
cmp
aad
call
movsb
stc
icebp
push
inc
stos
xchg
mov
add
sub
fldcw
xchg
push
pop
cmp
out
pusha
push
xor
mov
cmp
repnz
fdivrs
pop
mov
jp
cli
mov
mov
mov
add
lods
popl
lcall
sub
cmp
repnz
dec
subl
push
push
pop
add
repnz
cmp
aam
out
sgdtl
push
fdivp
jns
movsl
js
pop
and
or
paddsb
xlat
mov
xor
mov
pop
fcmovne
adc
xchg
das
test
pop
dec
add
cmp
inc
es
outsb
adc
lahf
jae
pop
jo
sbb
cmpsb
data16
psubusb
test
mov
popf
cltd
inc
dec
mov
and
mov
cmc
stc
pop
pop
enter
or
ss
push
in
push
repz
mov
inc
inc
std
js
je
push
dec
out
hlt
push
mov
mov
and
cli
push
aaa
ss
mov
dec
pop
ret
sub
sub
pop
mov
pusha
dec
mov
ja
shll
mov
ret
push
imul
iret
popf
push
out
orb
lcall
jg
inc
mov
mov
xchg
fs
and
and
movsb
jo
xor
lret
jbe
adc
lock
dec
repnz
mov
add
push
pop
mov
out
push
and
bound
adc
les
jl
inc
addr16
xchg
cld
lds
mov
pop
push
xchg
into
inc
mov
fidivrs
mov
jecxz
popf
pop
dec
xor
push
mov
popf
push
stos
xchg
dec
sub
leave
mov
loop
mov
dec
loopne
dec
cmp
shrb
xchg
xchg
adc
out
stos
loopne
jmp
jns
out
in
addr16
outsb
push
call
es
pushf
mov
lods
inc
dec
pusha
fxch
not
adc
xor
lock
fmul
jmp
cmpl
mov
lcall
jmp
add
addl
xchg
adc
bound
mov
into
inc
int
test
push
shrb
push
in
es
jbe
mov
sub
cmp
mov
and
inc
mov
add
aad
add
loopne
pop
ret
shll
int
aad
inc
xchg
mov
xchg
or
xchg
sbbl
xchg
lret
push
stos
filds
inc
outsl
test
push
inc
cmp
jle
mov
sahf
ljmp
aam
sbb
jno
ret
sbb
pop
loopne
imul
push
loop
es
outsb
push
lea
mov
mov
ds
insb
xor
jno
jmp
mov
xor
mov
cmc
dec
jp
decl
loopne
and
js
test
es
adc
test
dec
jbe
imul
ja
jl
adc
mov
or
fildll
in
inc
int
cmc
scas
xchg
lods
fdivrp
ret
pusha
outsl
push
inc
fs
mov
inc
data16
sbb
or
cltd
xchg
add
mov
jb
lret
or
cmp
cmp
insl
cmpsl
cmpsb
loopne
adc
outsb
push
loop
into
mov
cmp
les
lods
mov
fucompp
mov
fistpl
outsl
jp
push
pop
ret
xchg
cwtl
insl
fisubrl
stos
add
in
out
pop
mov
xchg
loop
jbe
cmpsl
add
in
aaa
adc
out
jmp
cmc
jmp
flds
movsl
mov
push
loop
adc
cld
sbb
loopne
mov
je
dec
xor
sahf
out
push
fsubrl
nop
mov
pop
sbb
xor
mov
pusha
and
cmp
cmpsb
pop
mov
testb
mov
push
xchg
repz
xlat
icebp
or
movsb
dec
jae
inc
pop
lods
jmp
or
js
and
cmp
not
xchg
jmp
je
in
xor
js
cmc
push
inc
mov
add
repz
in
jo
ret
lods
mov
shrb
pop
xor
fidivrl
lcall
out
jbe
push
jno
fldl
inc
clc
int3
sbb
xor
mov
cwtl
fwait
jbe
xchg
aad
pop
lods
sub
dec
out
adc
fcmovnu
push
lret
pop
inc
fs
xor
fsubrs
or
inc
mov
mov
xor
xor
pop
push
sub
fdecstp
rol
inc
mov
fidivrs
sbb
std
lret
clc
or
xchg
rcrl
add
xlat
push
mov
stc
std
lock
pop
jge
pop
add
xchg
inc
iret
xchg
or
sbb
mov
mov
lahf
inc
mov
sub
movsb
xor
push
arpl
aas
dec
xchg
inc
sar
xor
push
rolb
jb
scas
mov
mov
mov
repnz
out
jl
hlt
imul
test
testb
test
push
arpl
aaa
mov
jp
mov
fildl
mov
lret
push
pop
bound
test
dec
rcll
outsl
mov
lahf
pushf
push
popa
repnz
and
andl
jl
mov
test
add
mov
sub
stos
bound
scas
lock
xlat
push
push
dec
fnsave
lahf
cmp
arpl
out
push
jb
add
hlt
add
lods
or
sub
hlt
dec
ss
mov
pop
add
jle
scas
push
movsl
mov
scas
mov
fdivs
out
mov
pop
mov
shll
lahf
jecxz
mov
pop
loop
xorb
push
loope
and
std
out
push
in
lods
sub
cmp
xor
cmp
fsubrl
mov
aaa
pushf
stos
lock
in
cmc
push
or
inc
dec
dec
adc
clc
nop
push
mov
mov
imul
aad
mov
inc
pushf
pop
dec
mov
ret
cltd
dec
loopne
add
iret
call
repz
aad
mov
xchg
jle
and
or
movsb
sahf
pop
jne
dec
mov
sub
jnp
jae
test
or
cmp
jns
cwtl
pop
fisttpl
mov
into
sub
fwait
sub
jmp
je
pop
mov
add
dec
lea
ljmp
pop
cmpsl
xchg
in
lds
or
sub
mov
push
inc
cmp
inc
repz
mov
test
popf
xor
mov
push
enter
out
or
mov
decl
out
test
fidivrl
iret
jmp
sbbl
xor
mov
aas
aam
mov
sbb
pop
push
xchg
scas
mov
push
rorl
add
lods
lods
mov
jno
icebp
push
push
div
data16
push
lea
mov
jle
pop
jae
push
cmp
adc
cs
sub
es
sbb
cmp
jge
jge
fs
xchg
ja
xor
add
xchg
das
sahf
push
pop
mov
into
sub
inc
loope
lret
fsubrs
outsl
fisttpl
fwait
cwtl
leave
inc
in
test
xchg
xchg
mov
mov
xchg
das
cmp
cwtl
std
add
or
xor
mul
adc
cmpsb
out
jle
loop
testl
and
loop
add
push
popl
addr16
je
or
int3
pop
and
sbb
in
mov
pop
mov
mov
pushf
call
test
adc
sub
push
andl
sbb
mov
insl
sbb
xchg
ss
xchg
movsb
imul
push
adc
insb
pop
pop
rclb
fs
shlb
lea
and
sarl
stos
stos
and
ret
adc
lock
mov
push
jp
movzwl
scas
inc
lcall
mov
cld
adc
mov
dec
push
js
rol
sbb
mov
outsl
jg
cs
push
xchg
cmp
stc
ss
fcoms
mov
dec
hlt
daa
jl
pop
cld
inc
mov
hlt
out
fwait
mov
pusha
mov
imul
addr16
and
pop
pop
call
lret
xor
mov
popa
rorb
in
fcomps
xor
and
mov
rcr
xor
mov
sahf
push
sub
fists
lahf
insb
dec
xchg
scas
stc
jns
iret
jge,pn
rcrb
mov
js
cmp
jmp
adc
and
jle
cmp
test
rolb
cmp
jae
test
xor
mov
das
dec
mov
cmp
lahf
pop
fisubrs
push
orl
mov
call
sti
mov
ljmp
push
and
push
dec
nop
cmp
cwtl
rolb
mov
add
mov
das
or
sbb
jno
test
push
sti
mov
and
aam
push
arpl
pop
jnp
jbe
sbb
lahf
cmp
test
popf
adc
in
mov
or
rorl
and
call
add
clc
pop
or
js
aaa
add
dec
push
movsl
sbb
jmp
cmp
lods
add
or
das
in
shll
outsl
imul
lahf
jns
push
sbb
xchg
cmpsl
dec
mov
xor
pop
movsb
cs
mov
dec
ret
push
stos
loopne
sbb
mov
sahf
xchg
stos
mov
mov
pop
push
popf
sub
scas
mov
test
loope
xor
push
scas
dec
cmpsb
sub
repz
cmp
push
insb
mov
jle
or
pop
shrb
add
bound
cli
jbe
sub
repnz
xor
push
adc
rcrl
daa
cmp
xchg
test
pop
jge
xlat
dec
mov
mov
mov
test
adc
sbb
pop
mov
repz
add
stc
jecxz
insb
push
add
scas
out
imul
rcl
dec
mov
add
bts
shll
adc
sbb
scas
out
adc
inc
ror
popf
ret
orb
es
hlt
test
js
lods
ficompl
xchg
pop
ja
popf
mov
xlat
dec
jg
call
mov
movsl
int
roll
jmp
push
dec
mov
inc
push
ds
enter
mov
rcr
shlb
pop
mov
hlt
xor
push
pop
out
and
in
add
imul
and
in
push
cmp
pop
lcall
fimull
pop
into
sbb
leave
xor
aas
imul
push
or
cmpsl
je
cli
lods
fs
lret
xchg
push
bound
bsr
inc
xlat
enter
jb
fstl
sti
sub
es
aaa
test
out
insl
bound
ret
mov
inc
sbb
insl
fimuls
mov
outsb
and
xor
mov
cmc
imul
and
in
es
ljmp
xchg
mov
mov
out
fisttpll
jns
nop
fs
push
jl
jnp
ficoml
scas
xor
xor
sub
out
in
enter
or
adc
dec
xchg
mov
fistpll
pop
cmp
add
fwait
test
cmp
and
pop
push
xchg
inc
add
or
xchg
fisubs
ja
iret
xchg
arpl
adc
and
and
lods
sbb
xor
adc
fidivrs
jge
test
insl
aad
sbb
cmp
cmp
js
inc
fstps
scas
mov
mov
sbb
pop
mov
fstps
mov
jnp
inc
sbb
xchg
push
xor
into
cltd
sbbb
push
ss
arpl
push
jnp
sbb
sub
adc
sbb
cmp
jle
pop
aam
dec
add
popf
push
pop
arpl
ss
ja
popa
cltd
repnz
pop
inc
mov
out
les
push
cwtl
push
mov
int3
add
gs
aaa
inc
jae
enter
fimuls
mov
cmp
sub
inc
pop
andb
mov
in
mov
pop
add
mov
out
bswap
mov
xchg
inc
sbb
ja
movsl
mov
push
or
in
and
negb
repz
loopne
cmpb
dec
xchg
lods
scas
adc
je
pushf
notb
jbe
sub
packssdw
das
pop
sub
add
ret
out
or
push
fdivrs
pop
add
dec
adc
sahf
in
ljmp
loopne
push
pushf
add
sbb
or
ss
pushf
and
lcall
data16
sub
ficomps
mov
xor
dec
jne
mov
inc
inc
sbb
mov
sub
adc
push
ficoms
jg
push
dec
mov
pop
cmp
mov
mov
ja
mov
dec
push
mov
stos
les
adc
push
cmp
pop
xlat
lcall
add
xor
cld
scas
cmp
dec
xor
mov
xchg
xchg
xor
insb
jne
sub
adc
push
push
mov
sbb
push
mov
mov
push
sub
mov
push
push
in
or
aaa
sbb
adc
xchg
mov
push
jne
push
add
inc
xchg
jb
mov
leave
sbb
daa
outsb
das
push
das
sahf
jg
xor
sahf
sbb
ret
pusha
jo
lret
pop
lds
and
xchg
mov
lcall
iret
sub
orl
sbb
dec
mov
ss
cmc
call
adc
or
les
push
cli
push
lea
insb
lcall
and
xchg
stc
jg
jb
mov
sahf
pushl
sub
and
lock
or
mov
xchg
mov
xor
mov
and
mov
loope
xor
lahf
add
dec
nop
mov
sbb
inc
mov
fildl
test
mov
mov
lods
jmp
decl
shrl
xor
test
call
leave
jmp
jbe
sbb
iret
adc
movsl
imul
es
xchg
sbb
xchg
rcr
xchg
rorb
aam
leave
mov
mov
popl
and
call
cmp
ja
and
addr16
mov
mov
out
xor
jno
cmp
enter
outsb
pop
push
aad
in
pop
mov
push
xlat
push
fstl
or
adc
int
orb
mov
out
sbb
cmp
adc
mov
rcr
add
aas
inc
aad
sub
out
jns
push
fldenv
push
rcl
or
jl
cmp
mov
push
sbb
mov
gs
cmp
push
out
shlb
jne
mov
std
jle
sbb
adc
mov
adc
mov
mov
adc
or
adc
fisttpl
fldl
and
xchg
movsb
addr16
lahf
mov
ja
cmp
sti
pop
push
movsb
sbb
inc
mov
add
jno
push
fcmovbe
xchg
gs
jbe
xor
test
cltd
lret
dec
dec
cmc
in
push
cmp
adc
xchg
shll
stos
pop
shll
dec
mov
inc
movsb
insl
push
sbb
xor
les
pop
mov
int3
xorb
loopne
inc
cli
xor
popl
and
movsb
adcl
sub
jne
push
inc
inc
ss
leave
imul
mov
cmpsl
xor
cmp
out
mov
pop
bnd
jbe
pop
jp
insb
sahf
or
insw
cmp
test
decl
mov
stos
call
fs
ret
out
dec
into
xchg
mov
ret
xor
cli
aaa
outsl
pusha
sti
call
mov
pop
push
push
outsb
test
pop
faddl
mov
out
insl
outsb
adc
sub
idiv
into
in
lcall
fisubs
dec
fiadds
lret
mov
fwait
push
scas
test
mov
mov
mov
int3
jnp
cld
cmpsb
mov
out
mov
mov
mov
mov
dec
outsl
aaa
mov
mov
mov
into
xorb
fimuls
pusha
mov
in
mov
xchg
push
cli
cmp
xorb
sbb
stos
insl
pop
jae
int3
push
mov
jle
lcall
sub
lret
cs
loopne
int3
xchg
pop
sahf
pop
movsb
int3
insl
in
push
sub
pusha
add
push
cmpsl
mov
inc
fldenv
insl
cwtl
add
lcall
pop
fsub
pop
scas
movsl
mov
mov
dec
mov
sahf
cmp
inc
call
cwtl
mov
in
add
mov
in
cmpsb
jmp
popf
xchg
insb
aas
push
int3
test
jbe
aad
icebp
mov
sub
cmove
cwtl
out
hlt
xchg
pop
adc
xor
icebp
or
scas
loope
fmul
sbb
mov
test
aam
cmp
lods
jmp
push
or
sub
arpl
sahf
xchg
je
fsts
jl
lea
xchg
imul
xor
test
sub
dec
pop
push
repnz
mov
xchg
out
mov
lret
movsl
incl
xchg
dec
cmpsl
in
sub
sub
adc
mov
inc
dec
gs
and
xchg
in
xchg
aad
pop
out
cmpsb
cs
out
stc
cmp
inc
jo
or
sbb
jo
dec
inc
mov
push
adc
mov
cmc
pop
pop
xchg
daa
push
mov
push
xchg
in
ret
mov
arpl
addr16
pop
scas
insl
sub
jp
sbb
sarl
and
in
jl
bt
mov
jge
cli
pop
xchg
push
int
pop
sbb
or
movsl
addr16
test
shlb
arpl
jmp
out
mov
fcoms
mov
xor
mov
inc
popa
popa
into
addr16
xchg
pop
insl
adc
jg
cmpsl
scas
aas
shlb
jns
mov
push
pop
xchg
out
sbb
mov
jns
pushf
arpl
mov
or
into
cld
sub
dec
jb
mov
adc
jns
push
lds
cmp
loope
mov
fsubrp
or
mov
les
lret
dec
pop
daa
xchg
mov
ja
push
inc
ljmp
sarl
xor
mov
adc
sub
push
mov
jle
add
lret
sarl
cmp
add
mov
shll
xor
stc
and
push
out
movsb
outsl
cmp
mov
or
xor
mov
xor
mov
lds
adc
jge
fnsave
cmc
push
arpl
in
fdivr
push
fsubrs
xchg
inc
stc
call
sbbl
jg
ss
inc
xorb
rcr
cs
add
pcmpeqw
call
outsl
fnsave
imul
stos
aad
in
testb
lahf
mov
mov
ds
sti
mov
aaa
sbb
cld
ret
ja
test
cmp
push
jle
in
mov
mov
jae
mov
sarl
test
sahf
push
ret
mov
std
dec
xchg
cmp
fmull
dec
add
adc
sbb
stos
sbb
lcall
mov
int3
pusha
arpl
shrb
shrl
test
or
pop
ror
xchg
mov
cld
out
and
loopne
cmp
xor
mov
insl
dec
mov
ds
arpl
aam
fistps
shr
add
cmpb
lret
out
iret
or
push
test
cmp
lret
push
push
or
jne
test
add
jb
or
push
out
sub
pop
push
jno
inc
push
mov
test
femms
sbb
cmpsl
lods
xchg
in
sbb
mov
andl
pop
cmpb
adc
sbb
testb
mov
jns
imul
bound
or
pop
xor
out
cmp
jnp
cmp
ret
les
popa
and
iret
xor
jo
jne
or
je
sub
sbb
in
lret
sub
and
sub
outsl
cmp
ljmp
rclb
and
dec
sub
andb
adc
jl
fsubr
or
push
out
mov
adc
dec
mov
pop
and
sbb
cmp
js
xchg
ret
add
icebp
jae
push
jg
cmp
xchg
dec
test
xchg
sub
pusha
mov
int
icebp
lahf
adc
cwtl
out
gs
push
jne
and
dec
xor
fucomi
repnz
repz
push
pop
pop
scas
cmp
xchg
bound
aas
mov
cmpsb
popa
mov
int3
pop
push
sbb
sbb
mov
lods
mov
insl
ja
jmp
pushf
leave
pop
aam
mov
leave
es
xchg
mov
jge
cmc
mov
das
xchg
rcll
adcl
addb
mov
sub
push
jp
ret
ja
sbb
call
cld
int
cltd
in
inc
push
outsl
rol
daa
push
ret
mov
into
jbe
fcoml
inc
in
sbb
cmpl
inc
scas
mov
imul
cmpsl
lcall
sub
fstpl
iret
in
sahf
and
repz
pop
and
mov
movsl
stos
adc
xchg
data16
add
sub
push
sub
int
dec
pushf
cld
dec
or
dec
sub
inc
in
arpl
cld
inc
pop
pop
jnp
test
push
enter
xlat
lea
push
push
push
xchg
add
pop
push
xchg
lods
mov
add
cmp
repnz
inc
xchg
mul
pop
dec
xchg
jno
jg
and
sbb
das
js
push
and
dec
ds
call
out
cmp
lret
push
insl
int
in
ja
mov
hlt
mov
push
sbb
rclb
inc
shrb
adc
fldenv
sahf
test
xchg
jmp
in
cs
js
rcr
xchg
insl
rorb
xor
inc
stos
push
movb
sub
adc
stc
pop
mov
lahf
push
testb
ss
das
or
mov
sub
sub
mov
sub
xor
ljmp
adc
sub
adc
imul
inc
sahf
enter
pop
jnp
pop
jge
xchg
lea
pop
enter
pop
pop
subl
mov
mov
mov
mov
and
lods
gs
mov
push
dec
mov
notl
adc
and
nop
and
or
fstpl
pop
stos
pop
loopne
mov
push
fisttpll
cmc
push
mov
jp
sbb
mov
cli
scas
scas
push
pop
movsb
mov
xor
sub
add
dec
xor
sbb
cmpsb
int
push
push
inc
out
or
dec
je
pop
adc
inc
addl
repnz
cltd
mov
insl
arpl
das
imulb
inc
aad
stos
and
adc
fld
in
stos
sub
dec
cmp
xchg
pop
leave
shll
push
pop
es
push
jmp
pop
pop
xlat
push
add
jns
rcll
dec
push
loopne
inc
sub
sub
scas
inc
stc
out
fmul
push
test
jnp
in
fcomps
dec
lahf
nop
mov
xchg
test
scas
adc
ja
sbb
and
adc
nop
ret
sbbb
push
xor
xor
mov
out
dec
adc
out
sbb
inc
out
dec
repz
lock
adc
enter
jl
fidivrl
push
lds
cmp
pop
xchg
mov
stc
arpl
mov
xchg
mov
shlb
subl
leave
push
push
dec
orl
cmp
pop
sarl
shlb
fistl
inc
test
mov
or
inc
mov
cmp
arpl
cmp
out
xor
ljmp
and
ss
mov
cmp
rcll
pop
mov
cmp
pop
xor
imul
mov
in
or
dec
ret
test
mov
es
cmp
aad
sbb
xchg
xchg
add
ret
sbb
test
jmp
xor
push
jl
and
pusha
rorb
cmpsb
aam
int
xchg
popf
push
add
cmp
dec
jmp
movsb
and
out
std
rcrb
add
gs
fcomp
mov
je
stos
pop
sub
mov
js
cmpsl
sub
sub
or
dec
mov
mov
push
inc
loopne
cmpb
mov
add
lods
pop
inc
movl
inc
out
cmp
jle
dec
sbb
das
push
pusha
mov
push
adc
jl
loop
xor
cmp
sub
jmp
daa
pop
cmpsb
test
icebp
adc
lea
outsb
push
es
or
loopne
add
notb
mov
jo
fwait
imul
adc
cmp
xchg
mov
push
push
js
push
pop
jmp
sub
add
mov
loope
iret
into
xchg
xchg
mov
push
mov
cltd
out
mov
fisubrl
roll
hlt
jg
sar
hlt
pop
daa
cmp
stos
imul
rolb
mov
mov
dec
sub
inc
das
dec
mov
in
movsb
in
sub
sub
rcl
cmp
mov
sti
cwtl
out
jns
or
sbb
mov
jge
outsl
mov
enter
xchg
test
dec
sarl
adc
inc
jno
ret
leave
mov
loopne
cs
push
pop
nop
mov
dec
adc
mov
xchg
in
push
repz
push
cmpsl
sbb
sub
push
pushf
mov
xor
and
ljmp
push
loopne
jp
fldl
ds
or
jns
cmpsb
inc
inc
filds
stos
arpl
xchg
add
mov
and
mov
nop
aad
push
xchg
dec
lcall
js
inc
sbb
inc
es
sub
sbb
jmp
inc
cmc
inc
rolb
cmp
roll
jmp
clc
lods
movsl
xor
cwtl
cld
sbbb
outsb
and
test
popa
loop
push
loop
inc
daa
enter
jne
shl
sub
push
mov
in
push
jne
fimull
ja
pusha
cmp
jnp
fisubs
hlt
inc
jp
imul
and
sti
aas
or
inc
inc
ljmp
stos
push
dec
sub
push
jne
int
int3
cmp
popf
xor
xchg
gs
lock
inc
fs
jge
stos
loope
test
push
jns
loop
pop
mov
out
mov
aam
inc
stc
lcall
dec
cmp
fistl
push
add
lret
inc
push
testb
pop
jle
js
jns
movsl
adcl
xor
out
adc
roll
in
add
add
ja
mov
mov
loope
pop
cmp
movsb
stos
iret
push
mov
std
in
inc
mov
xor
push
and
lods
xor
in
dec
inc
mov
and
jmp
cmp
sub
cmp
insb
adc
js
int3
pop
xor
jp
jmp
stc
fstpt
imul
mov
pushf
xchg
push
in
dec
sub
clc
push
jmp
sub
and
dec
iret
lcall
call
jle
lds
inc
arpl
adc
shll
xchg
test
xchg
cmp
scas
or
lods
cmp
sbb
pop
movl
xor
mov
sbb
js
adc
imul
test
imul
ja
xor
mov
aam
add
cld
int
mov
paddusb
push
fninit
jnp
sbb
xor
ds
sub
negl
subl
and
sbb
jg
cwtl
cs
shll
push
cmpsb
dec
dec
add
and
int
sub
test
rcll
push
stos
inc
xor
repnz
xorb
orb
lahf
arpl
or
mov
jne
dec
lods
test
pop
dec
testb
mov
mov
cmp
jo
pusha
xchg
mov
dec
es
rolb
pop
jmp
sahf
pop
dec
pop
stc
out
movsb
pop
out
sub
test
ret
sarl
in
and
xchg
jecxz
enter
pop
mov
xchg
jp
lds
icebp
sti
int
mov
frstpm(287
mov
xor
movl
pushl
sbb
aad
in
and
push
pop
mov
lret
jae
imul
icebp
xor
push
push
cmpsl
pop
sbb
jnp
jbe
rolb
rorb
xlat
sbb
leave
xlat
test
das
jo
cmp
xor
out
jecxz
subl
mov
rclb
mov
arpl
fidivrl
cs
or
and
add
fcompl
stos
cmp
sub
in
push
out
cmc
cltd
or
ljmp
mov
add
cmpsl
xchg
xchg
shl
pop
scas
fs
fisubl
mov
sbb
enter
insb
push
pop
fdivl
inc
push
pop
inc
in
jae
dec
mov
bound
or
pop
inc
lods
rcl
in
jl
mov
outsl
lea
cltd
cmp
test
pop
jbe
and
adc
jmp
lea
pop
out
test
fucomp
fldenv
xor
or
fcmovbe
or
sbb
push
xchg
add
lret
xchg
push
hlt
mov
aad
cmc
mov
xor
lahf
sbb
mov
dec
sbb
mov
push
mov
sbb
dec
std
sbb
loope
lret
inc
aad
add
dec
enter
xchg
inc
rcrb
aaa
inc
lds
lods
pop
xor
rolb
inc
pop
div
push
cs
lahf
ss
and
je
loop
in
inc
xlat
sbb
fwait
popf
cmp
push
sbb
xchg
xchg
outsb
sub
aaa
push
in
pop
int3
test
fdivrs
and
pusha
mov
jmp
jge
fstpt
pop
cmp
pop
inc
pop
jno
ja
adc
lret
mov
int3
adc
stos
mov
jns
fcompp
arpl
pusha
mov
cmp
stc
rolb
das
jp,pt
sbb
dec
pop
and
jmp
cmp
mov
fwait
aaa
loope
fwait
mov
sbb
hlt
andb
mull
fildll
jmp
aam
inc
pushl
lahf
es
pop
aaa
cli
mov
out
fdivrs
out
sub
fs
scas
or
or
loop
in
add
inc
js
jnp
push
into
adc
aad
push
or
push
and
inc
gs
add
lea
cmp
dec
aas
outsl
and
cmp
imul
jno
nop
jg
adc
das
or
mov
jae
in
xchg
jns
xchg
add
aam
mov
clc
ss
push
aam
popa
out
xor
pop
repnz
push
jnp
cld
sbb
sti
push
and
pop
clc
xor
rcr
jae
movsl
xchg
jle
cmp
mov
sbb
mov
stc
pop
daa
sbb
push
mov
enter
pop
pushf
mov
pop
push
inc
sar
cltd
outsb
sbb
xor
mov
fs
test
jg
push
xchg
cmpsb
aaa
sahf
jbe
inc
int
mov
mov
repz
cli
and
adc
add
je
mov
dec
mov
push
out
and
fcmovu
orl
cmpsl
mov
ficomps
sahf
ljmp
fwait
jmp
push
sub
add
add
mov
mov
mov
test
in
or
sub
mov
mov
jecxz
and
popf
out
cmp
les
pop
xor
mov
aaa
mov
xchg
cltd
ss
daa
pop
pop
hlt
mull
popf
sahf
adc
mov
jecxz
insl
push
cmp
and
push
xchg
sbb
mov
or
bound
sbb
sti
fisubrl
int3
push
test
sub
cmpsb
jmp
insl
sti
lcall
int3
js
mov
push
ljmp
add
ficompl
test
imul
add
cmp
icebp
in
xor
pop
loop
mov
pop
push
imul
mov
adc
test
cmp
pop
mov
push
lods
mov
es
cmp
bnd
jg
movsb
jle
std
pop
jl
pop
sub
fisttpll
fnstsw
call
adc
inc
cmp
dec
call
lcall
xchg
out
imul
and
outsb
adc
cmp
sbb
sbb
jl
fists
xchg
out
jno
sbb
pop
push
daa
inc
pop
insb
repnz
cli
adc
sbb
adc
xchg
cwtl
fsts
jmp
pop
jb
inc
cld
in
gs
insl
push
stos
andl
lock
movsb
mov
loopne
neg
pop
cmp
or
fsubp
dec
push
or
movsb
pop
xchg
das
adc
lods
mov
fildll
adc
push
inc
clc
xor
add
adc
cmp
cmpsl
test
inc
or
dec
mov
fyl2x
outsl
pop
adc
mov
add
pushf
popf
leave
cmp
mov
push
mov
dec
jno
and
mov
mov
out
insl
mov
shr
add
mov
cs
movl
xchg
jne,pt
aad
int3
mov
daa
xchg
add
shll
xor
jecxz
mov
sub
stos
sar
push
fsubs
rcrl
pushf
jno
pop
inc
jo
xchg
and
data16
mov
andl
mov
mov
xchg
inc
mov
movsb
int
out
mov
stos
lock
adc
push
fnstsw
mov
xchg
push
jno
movb
mov
jp
add
add
pop
sub
ret
xor
jp
dec
pop
xor
cmp
insb
dec
scas
or
mov
insb
cwtl
adc
jae
push
dec
dec
push
jo
jae
jmp
repz
cwtl
xor
cmp
push
cmp
push
jns
inc
xor
xor
out
rorl
fprem1
out
aas
dec
mov
jne
iret
mov
popa
dec
dec
adcb
aaa
sbb
xchg
femms
clc
xchg
fbld
adc
iret
xlat
into
dec
jbe
dec
jg
rcrl
mov
mov
mov
adc
sbb
fisubl
sbb
scas
push
cwtl
mov
repnz
lret
mov
xchg
shlb
mov
loop
adc
imul
pusha
icebp
xor
mov
je
ret
les
popa
dec
mov
in
adc
aad
xchg
cmc
enter
stos
xor
xor
fdivrl
inc
fidivl
mov
jnp
pop
pushf
sub
repnz
lds
scas
repnz
cld
cmc
imul
insb
inc
mov
mov
icebp
adc
mov
jno
xor
sbb
dec
loope
dec
xchg
test
xor
xchg
fisubrl
rcr
inc
lcall
and
aam
mov
mov
cmp
cld
notb
loope
fdivrs
adc
mov
pushf
cmp
xchg
jbe
rcr
mov
lods
movl
pop
jne
mov
jb
pop
and
outsb
xor
movq
add
loopne
popf
stos
mov
mov
shrb
loope
ljmpw
inc
xchg
and
inc
pop
and
adc
movsl
push
xlat
in
sub
popa
clc
inc
push
sbb
jnp
cwtl
repz
cltd
test
inc
out
sbb
mov
lcall
push
mov
pushf
push
aam
test
call
daa
cmpsb
cmp
pop
cmp
and
outsl
jp
pop
cmp
push
add
aam
mov
sahf
or
pop
inc
adc
pop
popf
in
sbb
pop
dec
adc
ljmp
notl
push
adc
movsb
mov
jns
mov
or
cltd
mov
cmp
mov
adc
xor
mov
fisttpll
test
in
in
cmpsb
add
jg
sub
outsb
in
xlat
gs
pop
mov
lret
dec
pushl
lahf
lahf
adc
sbbl
inc
das
lahf
loop
push
adc
pop
mov
adc
mov
loopne
subb
sbb
outsl
and
lds
jp
adc
xchg
fdivrl
inc
clc
push
hlt
lods
xor
xor
lea
push
daa
scas
mov
mov
imull
movsl
adc
out
adc
mov
add
out
imul
cli
mov
push
repnz
in
fs
xchg
mov
add
add
or
mov
inc
mov
jge
mov
movsl
mov
cmpsl
sahf
test
shrb
sbb
in
mov
xchg
ficoms
jle
cmp
push
repz
dec
popf
aaa
dec
ret
cs
xor
push
out
mov
and
stos
sbb
xor
fcomp
push
adc
xor
and
mov
daa
dec
nop
repnz
sub
dec
in
xchg
pushf
pop
mov
psubusb
les
push
or
jmp
leave
cmc
shlb
pop
movsb
jp
add
mov
imulb
add
mov
nop
fwait
sbb
pop
out
adc
mov
sahf
repnz
dec
mov
test
dec
sub
out
cmp
ss
sub
fstl
sub
xchg
cmp
rolb
sahf
pop
jno
stos
in
adc
fwait
insl
inc
test
dec
in
out
cwtl
push
adcl
into
xor
mov
das
mov
popf
sub
test
dec
shrd
mov
mov
fsubr
add
and
clc
and
mulb
or
fwait
sbb
adc
jmp
cwtl
inc
in
mov
xor
mov
inc
fadds
lret
adc
enter
inc
pop
clc
dec
mov
lret
mov
std
adc
rorl
sub
movsl
push
repnz
inc
fimull
cmpsb
jl
test
lods
mov
data16
faddl
imul
popa
mov
adc
push
jb
ja
and
lea
mov
outsl
in
dec
mov
mov
pop
sbb
xor
dec
ss
loope
cmp
cmp
add
mov
xchg
jne
cli
lret
mov
mov
inc
hlt
add
mov
cmp
std
push
test
mov
inc
ja
push
fildll
rorl
js
cmpsb
xchg
pop
mov
sub
into
jo
fadds
test
dec
ss
test
rol
nop
ret
lods
and
inc
push
imul
jne
xchg
xchg
pop
ror
mov
enter
lahf
sbb
stos
cmpsb
repnz
rclb
jne
in
xlat
xor
jo
mov
push
dec
loopne
pop
test
jbe
push
mov
lods
xchg
xchg
pop
sbb
adc
dec
scas
and
test
pusha
or
pushl
outsl
or
lds
mov
leave
pop
mov
lods
popf
and
loopne
mov
in
sbb
aaa
mov
push
arpl
lods
inc
not
mov
pop
inc
sub
sbb
stc
dec
cmp
sbb
jnp
mov
mov
add
ret
dec
sbb
sahf
fmuls
mov
mov
pop
or
sub
cli
dec
outsb
sbb
dec
lea
sbb
sub
fsubrl
push
iret
pusha
mov
cmp
mov
pop
adc
js
add
mov
in
cmp
push
jne
pop
mov
or
sub
daa
xchg
ljmp
pop
mov
push
cmp
inc
sarl
pop
rcr
dec
lods
cmp
inc
xlat
ja
leave
jmp
aas
pop
pop
add
cld
sub
xor
inc
xchg
jl
and
jg
fldenv
jb
mov
stos
in
mov
push
cmpsb
in
pop
dec
imul
mov
popf
mov
dec
sub
fiaddl
out
repz
aad
loop
fcmovb
or
pop
dec
dec
sbb
mov
sbb
ja
push
nop
cltd
and
jo
fisubrs
or
scas
loope
sub
popf
mov
lods
xlat
inc
xorl
add
pop
or
insl
xor
or
repnz
jnp
hlt
inc
cmpsb
divb
aaa
filds
mov
fisubs
push
fistl
test
sahf
or
dec
pop
xor
jbe
cld
ds
xlat
adc
cmpl
cmp
mov
xor
lea
mov
gs
aam
fldcw
xchg
add
sti
push
jg
push
or
jo
sbb
mov
sahf
mov
adc
jge
cmpsl
or
dec
int
test
ss
clc
inc
push
movhps
mov
mov
adc
xchg
mov
mov
cs
add
inc
mov
or
dec
dec
or
out
and
sti
aas
fisubrl
mov
mov
pop
es
xchg
cmp
xor
aaa
loopne
inc
xchg
mov
cs
andb
inc
into
dec
movsl
repnz
xor
js
lds
arpl
pop
jae
mov
jmp
aad
lcall
sbb
lds
pop
pop
test
insl
cwtl
adc
addb
ljmp
aas
outsb
or
pop
sub
xchg
int3
jne
in
mov
or
add
es
mov
or
rclb
sub
push
lcall
notl
cmpsb
jl
arpl
jle
aaa
and
sub
mov
sbb
frstor
insb
xchg
xor
std
jae
hlt
je
sub
push
loope
cmp
sub
push
mov
push
dec
cltd
add
push
mov
jle
fmuls
js
mov
fdivr
push
xor
mov
jb
jne
stos
sub
das
xor
or
fwait
shl
mov
fscale
in
iret
scas
outsl
mov
in
push
jmp
sbb
and
sbb
jnp
sbb
jns
out
lods
js
ss
in
fisttps
lahf
sub
lcall
mov
push
iret
sbb
daa
push
and
ret
xchg
xchg
or
pushf
xchg
lahf
jle
push
inc
stos
scas
jo
pop
and
push
loope
add
sub
xchg
mov
pop
je
pop
ljmp
into
lret
fwait
dec
lods
lahf
xchg
xor
add
push
pop
jno
jg
jns
sbbb
jg
xchg
push
add
jp
lret
mov
nop
jecxz
jne
dec
jl
or
shr
loope
xchg
mov
fcomi
mov
pop
pop
ret
cli
mov
aad
pushf
sub
cmp
repnz
xlat
mov
call
mov
mov
mov
push
dec
sahf
adc
push
mov
js
add
xor
mov
xor
nop
mov
dec
idivb
out
dec
ds
xchg
xchg
insb
movsb
mov
scas
cmp
pop
xchg
popl
fimull
aaa
or
lock
or
in
cmpsl
les
ja
dec
ret
dec
push
sub
cmp
cmpsb
popa
cmp
mov
hlt
jnp
inc
push
mov
inc
out
mov
push
int3
sub
int3
cmp
std
xor
out
push
imul
mov
fisttpll
mov
divb
rcll
sub
mov
inc
out
leave
scas
cmp
push
fistpll
jl
insb
pop
sbb
add
fbstp
scas
xchg
lcall
cmp
or
mov
popf
inc
adc
out
mov
insl
jns
xchg
mov
mov
sbb
dec
sub
pop
mull
add
dec
pop
test
in
lcall
push
mov
mov
xor
pop
and
cmpsl
inc
sub
cmp
inc
push
lods
xchg
and
sub
gs
push
inc
pop
daa
bound
lret
scas
xchg
jmp
mov
mov
dec
push
imulb
push
arpl
stos
idivb
int3
xor
pop
mov
enter
ret
rorb
loop
je
mov
and
mov
push
xor
add
lret
fucom
stos
lds
pop
pop
stos
std
aas
aam
mov
repnz
iret
cmp
imul
xchg
flds
or
mov
shll
mov
xchg
ljmp
movsb
stc
outsb
fwait
cmp
std
out
lods
ja
push
pusha
aad
shrl
mov
push
test
xchg
aas
jmp
aaa
mov
jnp
out
or
scas
cmpsl
ffreep
sub
in
pop
cld
test
mov
xor
sarl
dec
aad
or
ret
cmp
shrl
cmp
jbe
and
lret
sub
lock
movsb
push
pop
test
mov
mov
cmp
std
push
into
loope
sub
sub
push
cwtl
shlb
adc
pop
xchg
sub
jno
and
jns
adc
stos
mov
loopne
xchg
outsl
mov
cs
jg
faddl
fucom
adc
ss
sbb
ret
mov
jmp
or
rclb
cmp
hlt
pop
push
lret
stos
push
sti
out
setae
popa
mov
pop
cs
pushf
adc
gs
in
addr16
lret
ret
push
and
int
cmp
inc
mov
cmc
inc
dec
or
xchg
fldl
rorl
mov
pop
sub
data16
stos
or
scas
lret
mov
fiadds
rcrl
push
adc
inc
mov
out
rcrb
pop
mov
push
jo
mov
bsr
lret
je
mov
sub
mov
inc
jbe
mov
les
out
mov
icebp
in
or
mov
sbb
sarl
shrl
or
fs
fcoms
shlb
cs
xchg
or
ud0
leave
mov
sar
push
pop
scas
and
pop
sub
jno
movsb
xor
cmp
aad
mov
inc
xchg
inc
out
mov
mov
xchg
add
divb
int3
add
mov
pop
mov
push
push
ror
adc
bound
pop
flds
jne
mov
inc
xchg
adc
lret
xchg
sub
add
mov
pop
ret
mov
add
lret
lret
mov
and
inc
arpl
push
jno
or
sar
jge
loop
mov
pop
fmulp
fisubrl
add
cmpsl
pop
mov
fst
cmp
lret
mov
mov
in
ficomps
sub
lods
fdivp
mov
add
fnstenv
dec
add
sbb
dec
or
test
fwait
dec
cmp
cwtl
jbe,pt
stos
or
pop
cwtl
xlat
adc
xor
mov
push
sub
mov
testb
shl
sbb
or
push
push
and
jmp
std
test
jmp
mov
jne
fmul
pop
xlat
or
inc
sbb
lods
ret
int3
add
sbb
jge
or
jno
std
adc
adc
and
js
push
jp
jmp
cli
test
jl
pop
out
dec
inc
push
popw
arpl
adc
cs
jns
popaw
jne,pt
push
orb
xchg
or
cmp
and
sbb
adc
jg
dec
sbb
mov
mov
adc
push
mov
fildl
push
dec
push
sub
imul
cmp
pusha
cld
mov
popa
or
sub
movq
pop
cmp
and
mov
mov
and
xor
pushf
sbb
inc
in
inc
mov
sti
xchg
fcmovne
xor
xor
lret
and
sub
cltd
fwait
sahf
jecxz
adc
lret
cmp
cmpsl
loope
jno
cmp
and
test
cli
imul
mov
xchg
xor
adc
push
xchg
xchg
cmp
insl
push
xor
scas
jnp
loop
adc
cli
and
push
iret
and
xchg
movsl
dec
leave
andl
nop
shlb
mov
mov
pop
xchg
sbb
and
jo
dec
or
stos
sub
push
roll
leave
bound
ss
cltd
mov
sub
stc
mov
imul
cmpsl
cwtl
cmp
outsb
add
or
das
jno
push
mov
inc
popa
xor
mov
roll
xor
jmp
pop
pop
xor
xchg
mov
sub
ss
jecxz
push
aaa
add
dec
fnstcw
rol
inc
push
mov
inc
outsb
sub
xchg
insb
jae
xchg
sub
lock
js
hlt
mov
xchg
sub
jnp
add
loope
shl
pop
fldz
mov
inc
sub
jns
lret
add
xlat
jl
ret
popf
loop
or
mov
js
iret
add
push
sbb
fildll
sbbl
add
and
push
mov
adc
cmp
movsl
call
insb
xor
out
and
out
ss
mov
outsb
rcll
push
dec
dec
xor
sahf
mov
adc
in
inc
cld
popa
push
dec
clc
ss
adc
leave
mov
cmp
jp
movsl
add
jl
js
pop
adc
test
pop
scas
sbb
inc
add
sbb
push
lcall
adc
or
sub
xchg
lret
dec
sub
dec
push
pop
inc
int3
xchg
mov
stos
fadds
fnstenv
xor
imul
lcall
xchg
mov
mov
xchg
adc
fstl
push
aam
stos
fadd
sarl
pop
insl
push
int3
and
in
test
cmovbe
mov
sahf
mov
rcr
das
mov
inc
push
sahf
mov
call
add
mov
jae
and
into
outsb
insb
cmp
add
shlb
jp
into
enter
mov
push
sub
mov
inc
sub
cmpb
pop
ss
adc
push
in
push
inc
call
fimuls
and
jnp
adcl
adc
out
imul
lahf
push
dec
idivl
adc
es
stos
enter
add
pop
out
aam
hlt
pop
adc
cmpb
xor
es
cmpsl
adc
sbb
lcall
fs
out
fstps
outsl
outsb
jae
testb
nop
sub
inc
ret
lahf
lret
ficoms
push
pop
cmp
xor
sbb
pusha
arpl
in
jge
daa
movsb
pop
push
jno
add
inc
xchg
cmp
popa
push
ds
sbb
adc
aam
jb
sbb
es
aas
test
xor
xor
call
gs
adcl
xchg
aad
aaa
sbb
mov
lret
jb
jmp
or
push
cs
sti
jbe
jge
movd
in
cmp
dec
aas
shll
dec
popa
mov
cmp
stc
or
cmpsb
icebp
shll
mov
clc
xchg
popf
pop
adc
push
pop
iret
mov
scas
negl
and
gs
mov
rol
adcl
dec
or
push
mov
popf
pop
xchg
sti
inc
std
push
jecxz
imul
stc
aad
iret
loop
xchg
push
jno
and
inc
mov
repnz
dec
jp
xor
sbb
mov
out
loop
arpl
insl
xor
rclb
jg
aad
data16
cmc
and
cwtl
mov
sub
movsb
sbb
or
pop
mov
sub
dec
cmp
jae
jg
and
cs
out
sub
mov
repnz
rorb
mov
loope
sbb
push
daa
mov
cs
add
mov
cmpsl
inc
into
dec
bound
xchg
mov
nop
in
int
lahf
add
dec
jecxz
movsb
pop
push
adc
lret
jae
test
sete
jbe
sub
mov
gs
popf
pop
mov
stos
aaa
mov
in
or
rcrl
jnp
rolb
in
ss
mov
in
lcall
ffree
inc
rclb
xchg
inc
jo
adc
push
jecxz
cvtps2pi
mov
test
add
xor
mov
orl
cli
fwait
or
xor
xchg
cmpb
and
pop
rep
ja
mov
fdivrl
xor
mov
push
xchg
rcrb
dec
dec
rcrl
mov
jecxz
int3
xchg
push
loop
fcoms
jecxz
and
rcll
aaa
add
or
fildll
inc
dec
sbb
mov
repz
arpl
push
inc
scas
mov
and
pop
or
xor
das
push
dec
adc
xor
jo
mov
mov
hlt
mov
nop
test
push
xor
push
mov
scas
sub
dec
lods
push
xor
lahf
dec
lret
mov
int3
pusha
add
mov
adc
cs
xchg
fsubl
mov
notb
leave
addr16
xchg
cltd
ljmp
push
mov
and
stos
add
scas
push
out
xlat
daa
jmp
popa
movsb
and
lahf
push
dec
fstps
nop
in
bound
aaa
fs
in
mov
lcall
mov
dec
popf
mov
pop
cmc
ja
sub
int3
jmp
rolb
jp
mov
sub
arpl
out
cli
cwtl
imul
add
shrl
js
cli
testb
sub
sti
push
mov
sbb
es
cmp
in
mov
int3
sti
ds
jg
cmp
fisttpll
push
jns
pop
js
das
pushaw
sub
jecxz
outsb
pop
xchg
pop
mov
aam
fistpll
cmc
imul
push
mov
jecxz
lret
push
adc
cmc
xlat
mov
in
mov
inc
jecxz
sub
jmp
mov
dec
stos
pop
inc
enter
add
call
inc
cwtl
mov
push
xor
movsl
imul
imul
dec
je
dec
mov
mov
sub
fistps
stos
mov
adc
ljmp
sbb
cltd
imul
leave
and
lods
lods
add
insl
out
ficoms
scas
aam
rorl
cmpsl
push
ficoms
adc
in
movsl
loope
popf
in
dec
jbe
pop
dec
je
icebp
imul
gs
push
out
xor
cmp
jp
pop
rorb
cli
mov
dec
arpl
movsl
lea
cmpsl
in
push
out
lcall
pop
cmp
lret
inc
cmpl
lods
mov
and
loope
push
imul
adc
jp
arpl
sub
lret
fimuls
jp
sbb
mov
jecxz
icebp
pop
pop
sbb
popa
xor
mov
add
repz
or
sbb
rcr
jns
out
out
dec
jns
mov
push
cmp
nop
pop
ror
jle
mov
addr16
jmp
dec
xchg
scas
jp
sahf
and
out
mov
rcll
loope
mov
fiadds
int
clc
sbb
in
push
mov
je
xchg
fs
in
mov
movsl
cmc
bound
imul
jl
adc
lcall
cld
mov
ljmp
popa
sbb
bnd
cs
mov
pop
dec
mov
lods
stc
cli
clc
inc
inc
sub
inc
stc
xor
and
in
fs
fnstcw
dec
ret
mov
sub
js
lock
sub
andb
inc
xchg
test
aaa
hlt
pop
clc
mov
pop
dec
movsb
movsl
int
inc
jbe
add
negb
jbe
insb
mov
jno
jge
xchg
add
inc
cmp
jle
sbb
fcoms
sub
cli
mov
mov
mov
in
cmp
xor
push
lods
icebp
nop
cmp
mov
out
sti
mov
out
insw
sub
sub
andb
hlt
xchg
lcall
aaa
lcall
inc
rcrb
add
mov
jl
mov
xchg
iret
lcall
les
lcall
and
xchg
jmp
lcall
popf
xchg
ds
dec
mov
cmp
sti
imul
das
or
outsb
stos
inc
mov
inc
ljmp
lods
aas
ret
xor
jp
mov
out
mov
jle
sbb
cmc
out
roll
mov
sub
push
test
jl
xor
sbb
arpl
out
mov
add
in
adc
hlt
loope
arpl
mov
rorb
in
mov
pusha
mov
push
inc
xor
cmp
jl
dec
addb
pop
mov
test
std
loop
testb
mov
sahf
mov
stos
sub
cmpsb
fldt
fsubl
xor
adcl
jl
leave
cmpsl
sbb
loopne
lods
dec
rcrl
dec
adcl
sbb
inc
stos
pusha
cld
test
int3
sbb
stos
aad
sub
pop
mov
adc
mov
add
pop
into
loopne
lea
and
pusha
xor
fistpl
test
mov
xchg
sbb
and
movsb
push
and
aad
mul
das
inc
mov
xchg
sbbl
test
imul
adc
mov
fcoml
pushf
popf
pop
pop
mov
popf
loop
xchg
loopne
sub
je
pop
push
sahf
repz
movsb
imul
sbb
and
sti
or
fcmovnbe
push
push
hlt
mov
cmp
ret
data16
add
out
ds
inc
mov
jp
xor
ja
add
fnsave
pop
lods
incb
pusha
push
and
xchg
or
mov
sub
xor
fsts
roll
in
or
add
pushf
dec
mov
mov
push
xchg
lahf
push
fwait
je
push
pop
xor
shrl
fwait
scas
xor
out
aaa
mov
movsl
adc
mov
push
adc
jg
ljmp
lcall
testb
stos
sarb
dec
jns
fldl
sbb
rcrl
xor
cmp
push
push
fxch
imul
loope
adc
sub
mov
pop
in
and
inc
stos
fsts
outsl
cmpsl
stos
sbb
sarb
popf
sarb
jp
iret
hlt
push
xlat
lods
outsb
into
outsb
add
cmp
dec
mov
cli
cmpl
loop
jno
ret
dec
pushf
out
mov
jg
out
imul
ficomps
dec
in
js
pop
mov
mov
mov
sub
sarb
dec
test
repnz
repnz
call
je
sub
cmp
and
pop
jecxz
cs
ret
sbb
mov
inc
fimuls
or
int
dec
push
ds
imull
jbe
lcall
mov
arpl
inc
in
insl
inc
lods
inc
mov
in
mov
jg
push
push
pop
push
mov
add
pusha
cmp
test
cli
mov
loopne
mov
out
rclb
add
test
js
leave
in
xchg
insb
jle
imul
sub
lods
xor
pop
adc
pop
mov
ss
scas
xchg
mov
or
test
pop
add
push
test
cmp
xlat
insl
xor
cld
fisubs
mov
mov
stc
xchg
or
scas
dec
sbb
xchg
shlb
pop
leave
xor
adc
cmp
fdivrs
repz
fsubl
ds
scas
lcall
mov
mov
hlt
adc
dec
add
xor
sahf
jecxz
ss
or
mov
adc
jae
daa
jmp
sarb
in
out
nop
incl
test
and
shrl
mov
adc
jae
xchg
fnsave
es
xor
mov
aaa
xlat
add
in
dec
outsl
movsl
xor
mov
outsl
outsl
ds
pop
clc
xchg
aaa
loope
orl
add
adc
mov
mov
adc
sbb
loop
inc
lods
mov
jg
adc
dec
or
xchg
jecxz
clc
mov
inc
loop
inc
mov
xor
ja
paddusb
leave
fdivrs
stc
int
lea
sbb
dec
shr
mov
loop
fneni(8087
fisttps
in
add
xlat
ljmp
insl
iret
mov
and
and
sub
mov
mov
in
fbstp
dec
fisubs
iret
sub
pop
push
out
mov
test
mov
dec
out
jecxz
inc
outsb
or
addr16
stos
mov
dec
fisttps
cmp
sub
cmp
std
jl
clc
push
out
outsb
push
xlat
repz
cli
or
sub
inc
call
mov
adc
mov
in
push
jne
mov
mov
adc
lcall
sahf
jo
jge
inc
xor
cwtl
lds
outsl
pop
fisubrs
mov
jecxz
cmp
inc
arpl
mov
mov
jns
mov
mov
ret
cld
fwait
shlb
sbb
cmpsb
and
cltd
and
nop
jnp
mov
mov
fldt
jbe
roll
dec
stos
repnz
mov
ds
push
mov
cmpb
int3
fdiv
ljmp
out
mov
mov
test
and
stos
movsb
ja
test
sti
std
xchg
loope
mov
imul
gs
fs
aam
in
xchg
adc
js
dec
int3
or
cltd
jge
stc
xor
jbe
mov
mov
mov
inc
and
push
lods
add
sbb
and
jb,pt
dec
ds
dec
dec
jno
js
cmpsl
adc
ja
shrl
fadd
fistl
xor
fdivr
arpl
outsl
pop
push
push
dec
shlb
jns
jbe
cmp
dec
push
push
cltd
movsb
xchg
out
xchg
sbb
aad
cld
jne
jb
shlb
cs
add
and
pop
test
jno
leave
add
or
out
filds
mov
dec
loopne
or
sub
fsubp
jns
popa
adc
inc
inc
mov
aad
push
inc
xor
test
into
or
and
or
xchg
jne
jl
jbe
push
mov
dec
dec
out
ljmp
inc
into
inc
cltd
adc
ljmp
aaa
sbb
and
cmpsl
and
jl
add
inc
sti
lret
loop
ja
into
fs
loope
fstpl
add
sbb
jmp
mov
mov
lcall
mov
imul
jmp
dec
pop
jecxz
push
mov
subb
sbb
sbb
jg
andb
sub
xor
fs
xchg
orb
dec
movsl
xor
out
xchg
dec
jne
movsl
repnz
cmp
or
mulb
in
std
shrb
ds
mov
jo
add
jo
sbb
push
daa
jg
and
cmpsl
inc
push
pop
lret
jmp
popf
jecxz
int
push
push
xchg
push
cmc
js
in
hlt
divl
into
aaa
ret
pusha
lcall
jecxz
sub
inc
jge
sub
jmp
je
popa
sbbb
fcmovu
outsl
push
jns
inc
shrb
cs
mov
push
neg
jno
push
sub
mov
xchg
nop
lcall
cs
xchg
push
jno
inc
ret
jg
mov
sbb
adc
cmp
xchg
sbb
mov
mov
mov
lret
mov
into
dec
test
pop
mov
add
xchg
ds
push
lahf
ds
cld
add
push
pop
and
pop
xchg
outsb
and
inc
mov
fldenv
ds
mov
mov
in
inc
out
push
outsl
aam
into
push
inc
jl
fs
adc
mov
nop
jo
push
in
inc
dec
scas
icebp
in
arpl
lret
bound
xchg
out
or
xchg
inc
ffree
mov
xchg
insb
jbe
rolb
or
xchg
fimull
pop
xchg
outsl
aaa
and
lds
push
data16
ret
pusha
push
pop
sub
loopne,pt
into
mov
mov
fs
outsb
iret
inc
imul
sbb
rcr
jle
mov
mov
mov
fimuls
inc
nop
xchg
pop
sbb
aam
sbbb
mov
mov
cmpsb
insb
sbb
sub
xor
cld
adc
leave
mov
ret
and
ds
mov
cltd
inc
cmp
push
pusha
jp
cmp
movsl
fldt
ja
mov
sub
outsl
pop
jns
jbe
decl
sub
push
cwtl
jb
daa
das
aaa
arpl
adc
pop
cvttps2pi
enter
ret
jae
jae
fsubs
mov
fistpl
xchg
mov
daa
aas
dec
jne
clc
push
add
adc
pop
jb
les
and
or
push
sub
ja
ss
aas
push
adc
bound
jp
xchg
jo
cwtl
pop
andl
sub
idiv
mov
mov
add
sub
xchg
mov
mov
and
sbb
rolb
push
addl
inc
mov
or
loope
test
sbb
jb
scas
mov
adc
repnz
leave
sbb
xor
in
icebp
push
push
jmp
jns
ja
insb
sbb
dec
pop
hlt
or
dec
nop
add
cmp
je
and
int
rcr
dec
std
cmpsb
sbb
cli
xchg
xchg
or
loop
jg
cmp
lds
xor
dec
xchg
je
jns
rcrl
inc
cmp
jge
or
mull
jns
mov
call
neg
lcall
sbb
rorl
popf
dec
hlt
xchg
mov
andb
mov
inc
jl
and
test
push
or
jg
ret
jecxz
lret
push
cmp
inc
rcll
pop
push
out
mov
xchg
cmp
and
dec
cli
es
stos
and
std
mov
fisubrl
das
jmp
mov
cltd
cmp
inc
xorb
sub
and
pop
cmp
mov
nop
ss
lods
sbb
cmp
call
stos
xor
add
js
cmp
pushf
cmp
xchg
clc
inc
jge
mov
mov
aam
dec
decb
adc
js
test
mov
xchg
aaa
jecxz
push
mov
loope
pop
add
hlt
xchg
les
movsl
xor
and
and
mov
sbb
push
lea
pop
or
sub
outsl
xchg
and
loop
xor
push
movsb
sub
push
inc
pop
xchg
negl
dec
test
mov
cld
sub
mov
mov
push
mov
xchg
mov
stc
daa
outsb
mov
push
test
xlat
test
in
in
insl
fs
out
sahf
push
mov
mov
stos
push
sbb
or
movsl
adc
xchg
adc
lods
cmc
rorb
lds
dec
stos
pop
fnstcw
mov
sub
xchg
call
inc
stc
mov
mov
sarl
and
pop
mov
xchg
sbb
shl
push
lea
sub
das
xchg
cmp
mov
xlat
js
push
jmp
test
push
fiaddl
mov
jge,pt
cmp
pop
sbb
sub
push
push
pushf
repz
add
push
repnz
push
xchg
jle
mov
ret
gs
insl
jmp
mov
test
loope
mov
xchg
sti
jnp
xchg
xlat
xchg
push
mov
adcb
ds
mov
pop
jne
negb
jbe
hlt
sbb
pop
xor
enter
mov
cld
lods
adc
push
scas
pop
or
jno
push
mov
fimull
or
fistpll
push
fcomps
sbb
fs
adc
mov
es
lods
mov
cmpsb
out
adcl
fadds
inc
sarb
out
mov
test
mov
scas
push
dec
pop
inc
loope
dec
es
addr16
bound
xchg
lret
je
in
sub
in
jb
nop
sub
test
lock
push
aaa
dec
push
mov
shlb
xchg
add
jnp
pop
lods
mov
jb,pn
add
aas
aad
mov
nop
mov
cli
into
dec
jecxz
shll
jmp
iret
push
mov
andl
out
js
fstl
push
mov
or
enter
inc
mov
dec
data16
lahf
pop
mov
mov
sbb
filds
movsl
mov
pop
aam
xlat
xchg
mov
cmp
fcoms
mov
outsl
mov
pop
ljmp
mov
mov
lock
aaa
adcl
pop
xchg
lea
dec
xchg
mov
es
cmpl
push
pop
leave
ret
loope
jb
rcl
idivl
mov
adc
cmp
jbe
das
fbld
rcrb
mov
adc
cmp
dec
jge
fists
jmp
pop
cmpsb
xor
stos
dec
aam
or
pop
es
mov
mov
insl
sbb
mov
jno
and
sbb
scas
shll
cwtl
inc
adc
inc
fcomi
mov
adc
add
je
cwtl
xchg
lret
dec
cmp
gs
push
divb
push
test
add
xchg
stc
add
xor
jnp
adc
mov
add
xchg
lds
push
xor
jecxz
enter
enter
adc
mov
sub
mov
dec
mov
or
dec
fisubl
sbb
lods
arpl
sbb
xor
xchg
out
js
inc
xchg
pusha
cmp
aas
fimull
cld
loope
call
std
mov
out
pusha
dec
pop
adc
jb
cli
dec
cltd
call
xchg
movb
gs
rcll
pushf
xchg
or
cmc
pop
push
jne
mov
int3
cmp
or
push
in
push
test
pushf
lea
xor
fs
mov
dec
and
dec
cmp
dec
add
jp
pop
scas
mov
adc
imul
ja
dec
ret
ds
dec
out
test
lcall
add
or
sbb
std
scas
pop
jb
js
mov
mov
jle
shrl
inc
jne
insb
call
cmp
out
sub
dec
jmp
mov
arpl
pop
lock
adc
or
gs
bound
loopne
dec
scas
fwait
sbb
inc
ljmp
lods
shll
jl
ja
jle
xor
sub
popf
xlat
into
daa
rclb
es
stos
rclb
mov
loope
inc
or
mov
mov
je
adc
adc
dec
add
jle
rclb
fwait
and
sbb
js
xor
jb
nop
pop
push
fsub
add
mov
sub
ja
push
pop
and
or
cwtl
sahf
mov
icebp
mov
push
mov
push
ljmp
xor
ds
loopne
cltd
repz
ror
or
sbb
sbb
stos
test
sbb
fistps
jge
flds
and
insl
testb
jecxz
aaa
pushl
adc
xchg
mov
jb
and
cmp
lea
jg
orb
fdivs
sbb
fwait
movsb
pusha
leave
adc
xor
out
pop
jnp
push
mov
loopne
jmp
add
clc
sbb
push
repz
xor
jle
push
xor
mov
fisubl
xor
ret
mov
or
div
dec
adc
shl
sahf
pop
jae
push
arpl
mov
mulb
sub
enter
sub
inc
cwtl
sti
inc
xchg
mov
hlt
cmp
int
dec
shlb
xchg
or
ljmp
cmp
push
jnp
dec
push
clc
mov
lahf
aam
cmpsb
mov
inc
push
sbb
mov
cvtdq2ps
push
nop
andl
outsb
insl
stos
adc
mov
cld
mov
test
add
shl
fildl
xor
test
shrl
sbb
lods
inc
das
insl
xor
cmp
movsl
mov
repnz
push
popa
aam
rep
lea
out
jno
ss
cmp
fcoms
mov
mov
push
and
xor
mov
cmp
sti
mov
test
mov
inc
and
cmp
mov
inc
and
insb
insb
mov
out
push
iret
cmp
pusha
aad
xor
xor
ja
adc
ret
cld
pop
jb
mov
es
rcrl
lret
in
test
lock
cmpsl
cmc
imul
int
inc
jns
sbb
cmc
std
sarb
insl
shll
mov
jg
sub
iret
push
xor
add
and
pop
cmp
test
mov
xor
mov
test
fistl
fnsave
fdivp
pop
pop
jne
cmpsl
jae
ret
cmp
lock
mov
das
stos
pop
fildll
lahf
nop
fcmove
ret
repz
jne
xor
pop
push
and
das
movb
test
pop
cmp
mov
sbb
inc
popa
loope
mov
mov
fldl
lea
push
xlat
call
stos
sbb
out
mov
mov
out
ret
arpl
dec
scas
dec
push
pop
imul
cwtl
fwait
sub
sarl
cs
dec
xchg
fistpl
or
lods
rolb
fstpt
repnz
in
push
fisubs
xor
je
push
adc
jmp
sbb
std
icebp
stos
sub
mov
stos
push
popa
push
movsb
inc
fidivrs
lret
jae
ret
aam
fbld
or
push
pop
inc
push
sub
adc
sbb
daa
mov
sbb
andb
mov
adc
lods
inc
std
call
fwait
imul
mov
lret
dec
push
sbb
pop
popf
lods
dec
push
sub
jle
cmc
stos
push
scas
xor
pop
and
inc
ja
cmp
arpl
jne
adc
push
pop
cld
jecxz
lret
arpl
or
lret
sbb
jno
fildll
in
inc
mov
movsb
dec
sbb
rclb
push
adc
xchg
jle
shlb
js
xchg
lret
data16
adc
jge
ja
scas
mov
dec
dec
lods
inc
jmp
or
mov
sbb
dec
ja
loope
adc
mov
cmp
iret
inc
inc
imul
mov
xor
cli
pop
mov
add
test
fildl
idivb
inc
mov
cli
mov
fdivrs
jp
out
outsb
adc
xor
dec
fcompl
jl
mov
in
in
push
daa
sub
pop
ljmp
je
sahf
test
mov
in
lds
cmp
cmp
mov
filds
dec
jl
cwtl
test
mov
sub
je
inc
movsl
arpl
pop
sbb
xchg
mov
pop
or
mov
gs
inc
sbb
fcomps
jecxz
dec
loop
xor
scas
pop
sbb
insl
mov
adc
arpl
mov
adc
sbb
inc
out
inc
ds
sbb
cmp
dec
outsl
stc
pop
add
lahf
lods
xor
in
xchg
fdivrl
test
mov
inc
push
cld
add
adc
test
xor
jne
mov
push
cld
inc
pop
call
jecxz
mov
sub
sub
arpl
mull
sbb
dec
stos
lret
pop
adc
mov
adc
js
xlat
cmp
sbb
aam
dec
pop
daa
clc
js
into
out
xor
jecxz
pop
xor
mov
cld
inc
scas
nop
in
jae
cmpsb
jno
mov
or
and
sbb
addr16
mov
sbb
insl
lods
lods
jo
pop
xlat
push
xorb
lods
sub
aam
sbb
sbb
out
cmpl
add
jecxz
xchg
in
adc
ljmp
repz
imul
stos
mov
and
repz
cltd
out
out
insl
push
add
or
pop
ljmp
imul
nop
and
inc
push
or
out
or
sub
push
mov
psubusw
mov
inc
out
mov
cmp
add
push
sub
mov
bound
pushf
dec
or
mov
or
sbb
add
or
call
ss
or
or
push
inc
rcrl
adc
cli
xchg
lahf
mov
in
adcl
scas
sbb
mov
repnz
sahf
inc
inc
jns
mov
jge
adc
add
push
inc
xor
dec
mov
divb
enter
aam
sbbb
repz
mov
adc
or
nop
leave
stos
push
test
adc
das
insb
aas
pop
mov
push
lret
pop
ror
sub
add
jns
fs
sub
sub
sub
into
cld
out
pop
inc
iret
out
stc
bound
xor
lahf
fs
shrb
jb
test
xor
mov
lret
ss
jecxz
push
outsb
pusha
sub
and
mov
leave
mov
dec
xchg
mov
dec
fwait
sbb
inc
data16
inc
les
insl
jge
lock
dec
add
jecxz
sub
out
push
mov
ds
cli
cmp
aad
mov
mov
int3
jno
mov
adc
test
adc
pop
enter
push
jp
push
loope
popa
daa
pop
lea
stos
mov
pop
mov
dec
jle
inc
jb
xchg
jnp
cmc
lret
aam
add
and
inc
decb
xor
add
fidivrs
mov
mov
mov
inc
mov
fnstenv
pop
or
inc
fs
push
jmp
jmp
lea
jge
bound
xchg
popf
push
adc
stos
jo
cmp
jge
sbb
jmp
sbb
pop
in
neg
sbb
push
add
dec
xchg
mov
push
mov
jae
push
mov
scas
dec
mov
jmp
cli
pop
loope
cmpsl
mov
insb
xchg
mov
xchg
cmp
ret
push
fbld
iret
add
jno
lret
push
adc
aas
mov
sub
fbstp
ret
xor
mov
jbe
add
cmp
divb
daa
mov
push
dec
mov
xor
xor
sub
push
jns
sbb
xor
or
fstl
mov
xchg
test
nop
orps
fucomip
jl
jl
mov
daa
cmp
je
mov
lret
loopne
enter
push
jno
add
mov
mov
sti
rcrb
dec
mov
std
cwtl
add
xor
insl
pop
push
dec
shrb
stos
out
mov
jle
add
cwtl
or
xchg
dec
iret
into
push
cmovbe
subb
jbe
rcr
dec
stos
out
imul
pop
inc
sbb
sbb
cli
aas
insb
jl
add
cmp
fdivrp
cld
incb
fbld
dec
jno
stos
dec
or
popf
cs
cmc
push
pop
test
inc
jo
fistl
addr16
pop
cmp
pop
cmp
test
sbb
push
sarl
fsubrs
cld
mov
stc
or
stc
inc
mov
int3
pop
dec
mov
das
into
xlat
loopne
cmp
cmp
push
lea
and
add
arpl
cli
fmull
jns
mov
mov
mov
lock
jno
and
int3
sbb
jge
cwtl
hlt
or
push
jo
pop
adcl
mov
inc
fisttpll
xchg
mov
lock
mov
add
stc
or
pop
pushf
inc
aad
add
int3
jmp
pop
stos
xor
insl
movsb
pop
aad
and
pop
jg
xchg
dec
movsb
and
sub
sub
inc
xchg
and
push
mov
adc
and
in
or
mov
insl
add
xlat
outsb
xchg
add
mov
loop
je
fiaddl
in
jne
lahf
in
xchg
into
jecxz
mov
shrl
cs
test
dec
call
mov
fdivs
fldt
or
mov
or
inc
jecxz
dec
icebp
lret
nop
mov
movsl
jbe
jecxz
push
or
cmp
cmp
das
aas
sahf
xor
out
and
sub
hlt
jns
aas
adc
xor
dec
sahf
mov
jbe
cmp
jnp
inc
sti
jns
fistps
loop
daa
lret
movl
aam
mov
sub
xchg
test
xlat
push
and
test
cmp
mov
lea
jo
mov
jge
ja
or
cwtl
mov
inc
pop
or
xchg
sbb
jb
jb
rorb
out
lret
mov
aam
mov
sub
sahf
lahf
jmp
xor
idivl
lret
lret
orl
mov
mov
out
push
addr16
mov
inc
xchg
push
jmp
aaa
cmp
cmc
push
mov
shrl
mov
sub
daa
jecxz
in
cmp
stos
data16
jae
clc
les
add
xchg
aas
imul
not
stos
sbb
iret
lock
ss
inc
jmp
outsb
cld
inc
and
cltd
add
cmp
and
adc
sub
into
pop
mov
adc
sti
inc
negl
enter
rcll
leave
jne
jg
mov
je
dec
dec
shll
mov
lret
sub
sti
or
ds
inc
mov
jge
out
stos
jmp
push
xor
mov
in
mov
cmc
inc
jmp
ds
mov
inc
std
mov
pop
pop
fnstsw
pop
dec
outsl
imul
add
aam
cs
dec
add
mov
or
xchg
or
mov
push
mov
push
bound
push
mov
das
mov
add
std
cmp
adc
hlt
pop
adc
lds
and
push
jge
test
in
mov
jae
test
push
bound
mov
push
pop
cmp
cmp
inc
jo
jae
dec
xchg
jmp
cmpsl
cmc
push
insl
cli
mov
or
stos
push
mov
into
dec
push
pop
fdivs
and
daa
xchg
out
mov
jo
dec
xchg
repnz
mov
sub
add
into
lds
in
js
push
out
inc
loopne
cli
lret
iret
stc
sbb
lahf
lock
nop
jecxz
and
int3
or
sbbb
cmc
call
shrb
int3
je
inc
push
mov
xchg
sub
dec
mov
and
in
aas
shl
aam
ss
dec
xchg
lret
es
les
mov
inc
add
stos
cmp
jge
cld
cmp
or
pop
sub
xor
or
jae
aaa
push
mov
pop
adc
fidivl
mov
inc
jbe
negb
pop
and
mov
test
jmp
adc
cmp
push
or
lods
gs
es
bound
dec
adc
andb
icebp
xor
and
dec
jne
mov
pop
push
out
bound
pusha
jecxz
icebp
mov
push
arpl
test
dec
jp
enter
dec
dec
call
js
mov
jmp
push
and
cmp
shll
sbb
mov
add
push
fbstp
test
mov
outsb
xor
xchg
push
push
push
sub
jbe
mov
or
pop
loop
inc
gs
jmp
push
cmp
sbb
imul
in
leave
jge
fisubs
iret
push
pushf
mov
divl
notl
notl
xlat
jmp
jecxz
cmp
fcmovnu
pop
mov
test
inc
mov
push
cmp
daa
ror
aam
pop
ss
sbb
fsubs
call
fistpl
dec
les
enter
popl
mov
jle
lret
cmp
or
add
mov
xor
pop
dec
pop
jne
lahf
add
lea
xor
in
xchg
cltd
mov
xorb
mov
adc
stos
xchg
mov
inc
je
gs
iret
dec
and
cmpsb
cmpsl
fld
dec
push
adcb
fdiv
jle
mov
sbb
scas
in
push
mov
ja
adc
xchg
push
loopne
negl
mov
rcl
fisubrl
jns
cmp
out
mov
in
mov
mov
out
jecxz
orl
mov
push
sub
hlt
adc
cmpsl
adc
jg
iret
inc
adc
popf
cmp
and
xor
or
insb
les
pop
nop
mov
jl
in
dec
lds
dec
movsb
int
movsl
dec
hlt
aam
subb
enter
add
fisttpl
stos
and
shlb
fwait
aad
xlat
mov
inc
scas
pop
leave
xor
dec
dec
adcb
push
ja
lods
cwtl
nop
pusha
fadds
jne
jne
dec
bound
cltd
jne
into
aaa
xchg
sub
scas
xchg
sub
xchg
popf
enter
lahf
xchg
mov
in
fidivs
mov
push
mov
dec
cmpl
add
ljmp
frstor
adc
jb
icebp
adc
cmp
and
outsl
imul
jl
jnp
dec
ljmp
loopne
nop
inc
das
mov
jbe
leave
jo
pushf
insl
add
sub
mov
loop
js
push
test
fcmovne
pop
or
cmp
outsl
push
scas
cmpsl
jns
fisubs
and
daa
test
lds
adc
or
aad
movsb
cs
pop
adc
inc
inc
and
push
pushf
mov
das
jle
daa
mov
mov
mov
xchg
push
movsl
jne
call
scas
sbb
dec
loop
cmpsl
ds
sti
and
dec
sar
xor
xchg
mov
rcrl
clc
ljmp
ret
outsl
out
mov
jb
pop
inc
push
cmpsl
lods
loope
xor
outsb
data16
ret
fsts
mov
scas
lcall
mov
sub
cmpsl
pop
movsl
sbb
push
incl
cli
add
lahf
push
cs
inc
imul
cmp
adc
xchg
mov
xchg
adc
test
push
xchg
pop
aam
aas
mov
jno
mov
mov
dec
in
xchg
icebp
dec
movsb
cmpsl
adc
adc
pop
sbb
pop
sub
xchg
popl
lods
xchg
jecxz
aad
mov
sub
dec
pushl
pop
xor
fdivrs
sbb
in
inc
xor
fcoms
lods
hlt
outsl
ss
ss
or
call
mov
mov
popw
lret
jb
cli
mov
loop
ficomps
rcr
inc
stos
les
xor
inc
divl
adc
xchg
loopnew
and
aas
xor
std
mov
cs
mov
jmp
inc
pusha
out
push
mov
lods
jno
sbb
dec
jmp
mov
jns
cs
mov
rcrl
fimuls
inc
mov
inc
jg
add
mov
andl
test
rclb
pop
push
dec
int
cltd
sub
adc
push
cli
mov
psrlq
jne
sub
stos
scas
sbb
xchg
and
fidivrl
dec
aam
pop
mov
lcall
jmp
stos
fcompl
cwtl
mov
ljmp
lds
in
inc
xchg
mov
ds
arpl
jl
in
or
outsl
inc
sbbb
push
add
mov
cli
bound
rol
fld
arpl
dec
cmp
pop
fistpll
inc
sti
in
push
pop
jmp
sub
mov
pop
pop
xchg
jbe
fmuls
fistpll
push
pop
sahf
cltd
mov
or
lock
pop
fdivl
rcrl
mov
lcall
push
imul
dec
push
pop
mov
in
mov
sti
das
repnz
lods
add
sbb
repz
jb
out
mov
subl
bound
pushf
out
ja
xlat
scas
enter
shl
cmp
sti
out
push
sahf
lret
dec
mov
inc
add
mov
sti
mov
stos
push
enter
mov
fisubrl
mov
lcall
and
jmp
push
push
adc
js
or
stc
loope
scas
in
sub
out
fstpl
or
icebp
test
mov
popa
loope
negl
inc
dec
scas
pop
das
test
stos
xor
jne
out
into
mov
add
dec
sub
sbb
mov
and
xor
fcmove
aad
mov
in
icebp
lcall
roll
mov
and
pop
dec
es
sbbl
repnz
sbb
ljmp
shl
loop
xor
insl
dec
je
out
in
pop
rclb
push
pop
mov
pusha
mov
inc
fidivl
lret
add
inc
ja
cwtl
mov
leave
movsb
int
ljmp
test
sub
mov
inc
mulb
sub
sbb
test
icebp
cmp
stc
mov
in
cli
xor
js
add
ret
movsb
test
lea
ja
dec
ja
inc
pop
pop
adc
dec
cmp
mov
lods
push
pop
inc
push
sub
flds
adc
or
push
lret
lcall
js
mov
or
or
fimull
mov
aaa
inc
lahf
and
inc
ret
and
push
mov
jp
add
push
stos
push
push
dec
dec
in
push
cmpsl
mov
out
fucomp
addr16
pop
jle
ja
adc
jae
xchg
cmp
xchg
push
inc
pop
cmp
cmp
inc
mov
xchg
cmp
ja
xchg
push
xchg
pop
xchg
stos
pusha
es
outsl
jg
in
int
sbb
mov
cli
fcoms
lock
icebp
das
mov
xchg
movsl
dec
pop
scas
notb
lcall
hlt
imul
gs
loop
ds
out
sub
fldl
nop
mov
jne
jne
imul
movsb
daa
ret
jo
or
and
pop
stos
imulb
jg
jb
jmp
pop
js
dec
dec
jge
adc
mov
or
jb
lcall
mov
or
xor
add
in
call
cmpsb
cwtl
mov
xchg
dec
xchg
sar
ret
mull
xor
mov
sub
mov
ret
outsb
inc
bound
jbe
popa
hlt
or
loopne
test
dec
sbb
lods
add
stos
test
xchg
sarb
inc
xor
xor
imul
shrl
pop
dec
sbb
sbb
jbe
popa
push
xchg
arpl
call
xor
sarb
mov
push
xchg
ret
test
pop
jnp
and
lahf
bound
mov
push
inc
pop
pop
ret
stos
mov
mov
sub
add
scas
dec
mov
mov
gs
jecxz
jg
outsb
inc
fsubrl
or
dec
and
out
dec
cld
and
sub
push
repz
push
mov
cmp
mov
ja
or
stc
or
mov
add
dec
jne
push
inc
xchg
xchg
fldenv
or
lds
fistl
xlat
out
std
inc
sbb
popa
in
imul
mov
sbb
mov
fidivrs
mov
aad
push
inc
sahf
int3
out
push
cmp
add
cmpb
int
jecxz
push
mov
push
sbb
adc
push
fnstenv
dec
scas
pop
add
adc
loopne
jl
arpl
mov
das
sbb
push
or
cmpsl
call
std
ret
push
lahf
mov
rolb
cmp
das
mov
or
mov
and
ret
mov
xchg
cmpsl
call
xor
loop
pop
cmpsb
hlt
pushl
pusha
dec
pop
les
dec
ror
rolb
cmpb
sbb
inc
sbb
int3
lret
lret
shlb
pop
push
xchg
jne
ljmp
inc
loop
ja
clc
sarb
push
adc
imul
fdivl
mov
lds
cmp
add
or
push
lods
add
mov
xchg
sbb
add
test
leave
fdivs
mov
jbe
adc
pop
xchg
scas
mov
jnp
addb
addb
movsl
or
xor
in
mov
sub
addr16
xlat
sbb
jmp
das
and
dec
insb
ja
push
cmp
mov
clc
popa
mov
sbb
push
jns
imul
ret
sub
jmp
pop
sub
lahf
cmp
adc
jge
repz
lret
jmp
int3
repz
in
idivb
sub
outsl
fsubr
loope
bound
test
jmp
pop
data16
and
ja
leave
addr16
dec
movsb
fs
repz
xchg
mov
cmp
leave
cmp
mov
cmc
filds
xchg
pop
cmpsb
test
sti
lret
inc
outsb
pop
addl
mov
cmp
mov
popl
xlat
movsl
and
cmp
movsb
test
insb
ffree
lds
cmp
cmc
jno
bswap
out
outsb
jmp
outsl
dec
cmpsb
mov
clc
jmp
cli
mov
xchg
jno
ljmp
xlat
add
or
and
ficoml
pop
push
inc
stos
push
mov
inc
push
dec
inc
int3
xchg
js
lahf
mov
iret
jp
xorl
cmpsb
adc
andb
loope
loop
and
dec
lcall
outsb
rorl
jl
adc
cs
push
cwtl
add
or
mov
inc
cmpsb
in
add
mov
test
js
scas
cmpsl
xchg
sahf
sub
cmpb
jge
loopne
adc
mov
cmpsb
add
pop
push
add
sbb
mov
sub
out
movsb
adc
test
inc
imul
fwait
insb
sub
out
jne
or
lahf
ljmp
inc
mov
cmp
push
sub
pop
xor
sub
or
xchg
mov
loopne
cli
pop
jnp
jecxz
lods
cmpsl
mov
in
adc
mov
mov
and
adc
jecxz
adc
jg
ja
pusha
aad
jmp
adc
stos
cmp
push
xchg
cmp
pop
sbb
jnp
push
push
inc
dec
arpl
sub
lods
mov
int3
jg
std
mov
mov
loope
jge
fldl
dec
xchg
lock
scas
push
or
insl
mov
and
and
xchg
jo
lds
and
push
inc
sbb
and
xchg
sti
les
lds
mov
mov
jmp
jg
into
jns
fimull
shlb
daa
into
repnz
movsl
cmc
or
pop
sub
movsl
stos
mov
cmp
paddusw
mov
fistpl
cmc
aaa
dec
push
lahf
xchg
push
insl
and
aam
in
mov
push
into
pop
cmp
insb
mov
inc
or
jge
stos
push
xor
jne
ret
je
sarb
dec
sub
pop
popl
and
into
insb
sar
or
mov
cli
repnz
add
ds
clts
out
mov
adc
jns
sub
cmp
lret
out
lods
clc
roll
aam
sahf
rcl
adc
imul
jae
pop
and
out
fstpl
insl
sti
mov
cwtl
mov
ror
adc
mov
dec
fistps
in
cmp
jle
das
dec
scas
lock
cld
sbb
mov
aas
int
sti
addr16
xlat
iret
add
jl
stc
testb
push
jp
sbb
adc
mov
pop
inc
fdivrs
adc
lret
add
and
cld
vmulps
mov
add
stos
pop
mov
sub
sub
push
push
push
push
mulb
in
adcl
xchg
lea
outsb
es
pop
xor
push
sbbl
adc
pop
push
cld
sub
or
inc
lock
mov
cli
outsl
cmp
mov
pop
inc
arpl
jne
add
sbb
sti
aas
push
ss
mov
push
ljmp
fdiv
aas
inc
add
push
cmp
sbb
out
out
nop
popa
jns
fistps
movsb
leave
in
mov
inc
enter
cld
jno
push
outsl
add
sub
pop
xor
pop
pop
inc
scas
sub
mov
jne
pop
sbb
insl
inc
aaa
xor
pop
adc
sub
rcll
mov
arpl
arpl
lcall
sbb
xor
pop
ljmp
sub
or
mov
fmull
mov
bswap
and
mov
mov
sbb
and
pop
pop
loope
test
repnz
cltd
jl
nopl
inc
rcrl
ljmp
mov
data16
cmc
and
xchg
and
outsl
inc
in
mov
dec
or
jbe
outsl
sbbl
mov
notl
sub
subb
mov
xchg
xchg
fbstp
push
out
outsb
fidivl
stos
fildl
lret
jne
stc
and
in
in
pop
test
ss
aam
mov
test
xchg
dec
inc
inc
mov
fs
dec
push
in
mov
push
mov
pop
movsl
bnd
mov
std
mov
pop
lret
mov
in
in
jmp
add
daa
mov
mov
inc
daa
pushf
adc
fiaddl
notl
ja
push
test
jp
dec
sbb
repnz
insb
pop
mov
fisttpl
movsl
lods
aam
fwait
mov
out
nop
xchg
stos
inc
sbb
mov
adc
mov
lret
mov
dec
push
fsubrl
dec
pop
or
arpl
adc
xchg
pop
xchg
adc
mov
xor
xor
and
and
mov
cld
pushf
inc
inc
out
gs
mov
jns
inc
decl
hlt
mulb
xchg
inc
inc
ds
dec
insl
jns
test
loope
icebp
or
ret
out
dec
or
mov
aad
ffree
shlb
push
mov
mov
nop
subb
jne,pn
repz
test
sbb
lcall
jne
call
das
fisttpl
insl
sbb
cmp
outsb
int3
sar
push
cmpsl
sub
sub
fists
lcall
jno
adc
nop
cmp
ljmp
rorl
loope
test
adc
fcmovu
mov
jnp
je
xchg
icebp
adcl
inc
mov
ret
in
ja
stc
push
mov
insl
cmpsl
cmpsb
fistpll
sbb
iret
lahf
lcall
add
lock
mov
icebp
add
or
push
inc
into
xchg
in
imul
popf
enter
icebp
mov
inc
mov
lods
test
iret
push
jge
and
mov
ljmp
jbe
aas
aam
loop
enter
dec
add
insb
jae
jmp
nop
ret
mov
push
mov
out
pushf
inc
jmp
mov
fistl
xchg
jo
mov
mov
fildl
inc
mov
adc
mov
push
pop
sub
outsb
daa
es
push
pop
sub
and
mov
push
and
xor
cmp
jo
ds
jno
adc
call
pop
rorl
leave
sbb
and
aad
xchg
imul
cltd
cmc
popf
or
jae
or
pop
mov
scas
add
mov
push
int3
push
sub
mov
test
shufps
xor
mov
jl
pop
mov
push
fwait
fwait
sub
enter
fisttpll
mov
cwtl
jnp
mov
xor
scas
pusha
xchg
sti
cltd
out
xchg
pop
and
inc
or
popf
lahf
mov
jb
mov
in
dec
or
lret
jg
xchg
inc
cmp
int
popf
pop
mov
pop
mov
es
rclb
push
sahf
dec
sub
xor
dec
aad
mov
and
inc
mov
push
jl
cmc
scas
repz
je
dec
out
and
mov
imul
or
sbb
lahf
jno
cmc
inc
jb
xchg
stos
fmuls
or
mov
aad
lret
scas
adc
and
pop
and
adc
xchg
inc
xchg
xchg
add
pop
fs
and
pop
pusha
js
and
bound
ljmp
and
sarb
mov
int
clc
decl
and
mov
push
sbb
fsts
testb
rcll
add
inc
cmp
push
pop
xorl
rorb
adc
dec
sarb
xor
rorb
cmp
mov
pop
pop
sbb
in
inc
dec
imul
shlb
sbb
inc
out
ret
inc
shlb
lcall
lock
out
icebp
leave
aas
or
inc
xchg
adc
dec
push
or
mov
xchg
incl
push
mov
in
push
insl
dec
xchg
dec
ljmp
lods
ljmp
mov
test
clc
mov
aaa
sbb
hlt
bound
sbb
lods
mov
or
es
stc
test
lea
ret
call
jns
or
or
and
dec
loope
fwait
enter
adc
pop
xchg
cmp
push
fisubs
mov
iret
sarb
leave
push
adc
loopne
sub
bound
dec
and
ficomps
sub
in
xchg
loop
xor
mov
fstp
sti
stos
orb
xor
popa
mov
mov
test
fisubrl
cmp
pop
mov
lret
fstpt
or
adc
mov
jl
mov
and
mov
sarl
and
lods
into
pop
push
jno
mov
jp
adc
or
leave
mov
dec
pusha
in
popf
sbb
sbb
mov
movsl
jle
int
call
push
hlt
icebp
and
rorl
cmp
mov
add
mov
jle
cmp
imul
lds
incl
or
pop
add
test
add
mov
cmp
push
shlb
fidivrl
sub
out
rorb
xchg
cltd
pop
in
mov
pop
sub
mov
aad
ja
and
push
xor
mov
sub
mov
xor
xor
pop
aam
jne
jge
outsb
jg
mov
or
push
cs
ret
adc
in
mov
out
jmp
in
sub
push
inc
mov
sbb
nop
mov
add
cmp
cwtl
and
jp
sbb
fwait
xchg
lcall
sub
add
int
adc
rclb
pushf
jle
iret
mov
stos
push
push
subl
sahf
imul
mov
inc
jo
mov
pushf
test
sbb
xor
mov
mov
or
int3
je
orb
xchg
push
lcall
pop
jno
jnp
xor
sbb
push
and
popf
inc
lea
inc
sub
popf
inc
xor
dec
insl
mov
nop
mov
dec
stos
dec
xor
jp
jns
mov
inc
bound
cmc
scas
mov
push
outsb
mov
jns
mov
fiadds
sub
dec
mov
ds
in
pop
scas
dec
xchg
push
pop
mov
mov
sbb
in
jb
adc
aas
adc
loop
aas
lods
movsl
sub
jo
lcall
dec
ljmp
fs
jecxz
inc
gs
fsubr
test
dec
popf
fmull
xchg
jl
int3
mov
push
cwtl
lret
inc
and
adc
push
in
push
dec
fiadds
int
scas
int
arpl
push
scas
or
sbb
jbe
cwtl
je
or
sub
cmpsb
or
mov
pop
test
rol
push
inc
lret
push
shll
sub
pop
repnz
pop
stc
dec
cwtl
jbe
daa
or
scas
test
dec
cmp
stc
cmp
pop
andl
nop
push
out
mov
jb
rcll
out
arpl
mov
fisubrs
stc
jge
into
test
sbb
or
xor
aas
iret
mov
es
jo
mov
xchg
adc
mov
and
mov
push
sbb
jecxz
jg
jecxz
imul
lret
lds
mov
mov
mov
bound
inc
stos
jae
jb
add
push
xchg
mov
fdivr
in
adc
jns
jge
mov
push
movsl
pop
out
mov
lods
mov
or
dec
jnp
inc
lods
xor
popa
lock
or
pop
cwtl
popf
mov
addb
call
repnz
movsb
fs
inc
push
out
mov
pop
andl
xchg
rcrl
out
dec
das
sarl
repnz
push
ret
mov
inc
fists
mov
push
in
jno
pop
xchg
sub
jbe
rcll
adc
jnp
cmpsb
rcll
xchg
mov
imul
jns
cs
pop
xchg
sti
ljmp
pop
iret
aaa
fisttps
add
sub
and
cmp
mov
ja
push
mov
lcall
add
mov
xchg
mov
int
and
mov
jnp
test
xchg
xchg
add
adc
lret
test
mov
push
stos
loope
std
pop
push
adc
push
lahf
push
xchg
dec
je
jle
lods
sbb
mov
outsb
pop
cltd
dec
int3
movswl
leave
mov
adc
or
push
hlt
nop
mov
or
push
add
in
test
scas
jnp
xchg
mov
jl
movsl
jmp
mov
mov
jle
or
lea
nop
ss
lret
push
jo
in
mov
jle
mov
lock
nop
ret
jp
and
aaa
jbe
out
jmp
rolb
int3
das
imul
insb
or
push
push
pusha
ret
sub
test
loop
cs
add
loop
int
xor
dec
dec
in
adc
xchg
inc
call
inc
jno
inc
fimuls
cld
xor
push
or
dec
cmp
lret
addr16
push
int3
pop
sub
popa
push
dec
lahf
out
sub
cmpsb
stos
jb
insl
cmpb
sub
push
pop
cmc
cmpsl
dec
jbe
lea
cmc
push
sti
pop
xchg
dec
add
imul
dec
rorb
imul
jg
adc
mov
rolb
lahf
lret
xor
pusha
outsl
int
mov
icebp
rcl
into
jg
push
mov
adc
cli
leave
clc
rorb
std
mov
ds
jno
xchg
mov
sahf
bound
xchg
sbb
je
insl
jne
rcll
loope
arpl
jle
fwait
roll
stc
js
loop
in
aas
movsl
mov
or
in
inc
inc
movsl
cltd
sub
adc
add
jl
loop
out
aas
push
fisubrs
jmp
jp
push
xchg
loope
addb
adc
int
dec
dec
repnz
stos
pop
stos
lock
mov
dec
daa
mov
inc
or
pop
int3
sar
mov
sub
dec
and
or
jge
inc
andb
jl
sub
dec
mov
icebp
mov
in
dec
fs
push
outsb
adc
xlat
lahf
faddl
add
cmp
ss
jo
les
aam
sahf
jne
out
jnp
xchg
mov
or
mov
int
fisttpll
ja
add
xchg
imul
xchg
rorb
loope
pop
lret
sbb
scas
mov
dec
mov
xchg
mov
adc
push
movsb
lahf
cmp
decl
push
pushw
cmp
ljmp
jl
xchg
out
jo
ficoml
jp
xor
mov
jge
mov
lock
ror
repnz
int
hlt
lcall
pop
adc
sbb
insl
fldenv
dec
fyl2xp1
mov
popa
aad
ficompl
out
xor
cmp
aam
pop
sarl
sbb
or
jl
cmp
mov
lret
xchg
inc
sub
pop
push
mov
mov
mov
add
push
jle
push
data16
push
mov
jb
dec
add
xlat
or
sbb
enter
incl
das
and
mov
dec
mov
push
pop
aam
xlat
lods
xchg
xlat
lret
mov
dec
ret
loopne
daa
xor
sahf
mov
fbstp
jae
fstpt
cmp
dec
cmpsb
out
xchg
xchg
ficompl
xor
and
pop
dec
jp
lahf
sub
jne
dec
mov
pop
add
and
ja
sbb
in
cli
in
pop
sar
sub
xor
mov
mov
lret
mov
xor
push
gs
ljmp
xor
mov
mov
ficoms
aas
stos
or
lea
das
mov
cli
push
daa
nop
sbb
xlat
cmc
jne
xchg
ss
int3
mov
loope
test
sbb
aas
cmp
mov
add
in
aad
xchg
or
mov
or
xor
insl
mov
es
cmp
xor
call
xor
ret
cmp
jmp
and
insl
jno
rolb
pop
or
add
xor
mov
dec
lea
mov
ljmp
ss
scas
or
outsb
jbe
push
mov
mov
cmpsl
mov
test
and
xchg
inc
or
lret
data16
icebp
loope
cmp
mov
cmp
cmp
xor
pushf
jne
pop
imul
aaa
mov
into
ret
adc
jno
in
cli
sbb
and
jb
xor
mov
rep
mov
cmp
insb
sub
inc
adc
or
test
mov
test
ret
lock
push
lods
fcomps
fs
scas
mov
movsb
push
cli
sbb
cld
sub
cmp
cvtdq2ps
add
dec
pusha
mov
adc
cld
aad
inc
inc
pop
arpl
xchg
push
int
addr16
cmp
addr16
add
jmp
cltd
dec
addr16
shlb
mov
jle
pop
jmp
cmp
or
xchg
cwtl
rcll
push
sti
jnp
mov
sti
scas
add
or
ljmp
int3
int
test
jbe
addr16
pop
push
mov
xchg
dec
test
test
inc
rcrl
push
jge
out
inc
xor
mov
dec
mov
mov
js
fwait
mov
xchg
mov
je
imul
je
roll
mov
cmc
sub
stc
jae
push
push
push
mov
fcoms
sub
jbe
insl
negl
mov
ret
jb
lds
add
jnp
or
push
and
add
or
mov
add
jp
inc
xlat
dec
mov
fs
inc
cli
xor
and
rcrb
popf
movsl
add
pop
jne
in
adc
mov
fnstcw
jg
push
push
inc
nop
ffree
lds
mov
and
mov
fsub
push
mov
jmp
lret
aaa
inc
cld
lahf
jl
xchg
dec
push
mov
loope
std
aad
xchg
lock
jle
outsl
adc
cmpl
test
imul
popa
imul
in
aad
inc
add
or
mov
xchg
aam
sbb
and
mov
dec
and
fwait
cmpsb
pop
cld
jmp
jg
aaa
mov
roll
mov
sbb
xorl
mov
inc
lea
push
inc
cmpl
jg
shll
rol
or
pop
jne
xor
iret
bound
rcl
in
out
or
push
movsb
sbb
pop
out
push
xchg
int
xchg
mov
or
xor
push
jbe
sbb
lock
jle
sub
das
add
out
sbb
cmp
xor
cmp
fisubrs
loopne
iret
in
lock
push
call
xchg
xchg
lea
dec
xlat
xor
repnz
cmp
bound
fs
cmp
loopne
cld
je
mov
movsb
add
cmp
ss
test
fs
stos
popf
xor
inc
and
in
and
xchg
aaa
mov
lods
aad
sub
inc
add
fstpt
cld
in
imul
loopne
mov
sahf
gs
fs
ljmp
sarl
dec
test
inc
call
inc
jecxz
add
pop
shlb
push
pop
xchg
sbb
sbb
fwait
xchg
dec
mov
mov
push
fdivrp
jno
jg
daa
fiadds
fwait
dec
mov
or
adc
imul
mov
imul
pop
scas
mov
or
dec
and
cmp
inc
mov
movsl
jmp
xor
aas
ror
pop
popf
xor
dec
sbb
push
dec
mov
aas
divb
add
nop
mov
sbb
and
aas
test
int3
cmp
nop
sbb
xor
out
inc
adc
scas
lcall
loope
dec
ret
xchg
xchg
test
popa
imul
idivl
iret
mov
add
pusha
xor
fimuls
mov
sti
pop
dec
stos
xchg
scas
and
ret
cmp
or
sbb
pusha
mov
hlt
push
cmp
movsb
rorl
sbb
push
pop
push
mov
sbb
nop
aaa
in
fadds
pop
xor
stc
je
ret
xchg
ljmp
lock
je
or
xor
nop
arpl
or
jle
stc
adc
jnp
arpl
insb
stos
inc
mov
sub
popf
clc
ss
and
cmpsb
sub
dec
dec
xchg
cmpsb
out
rorb
push
in
push
jnp
fldl
adc
mov
sbb
arpl
xchg
jb
adc
mov
mov
cmp
andl
sub
test
test
adc
push
es
mov
loope
loopne
cmpsl
divl
lds
mov
mov
mov
mov
add
add
pop
sbb
into
sub
add
mov
ror
or
leave
movsl
cmpsl
rcrb
push
outsl
ss
pusha
xchg
xchg
std
push
xor
lret
cmp
jge
mov
loop
inc
in
in
hlt
xor
mov
cmpsb
adc
test
rorb
stc
ds
jmp
add
push
cmp
jle
mov
rorb
cmp
jae
lea
mov
pop
sbb
into
testl
test
dec
test
push
roll
idivl
daa
jg
lods
int
xchg
gs
mov
mov
mov
xor
lods
lds
jp
cmpsl
xchg
pop
jns
jno
xlat
sbb
scas
mov
rcr
int3
int3
rcrl
xor
insb
aad
push
stos
orl
aam
or
jg
hlt
jl
sarl
xor
dec
outsb
dec
hlt
xchg
inc
popf
test
push
in
shrl
mov
push
xor
adc
call
and
lea
lret
xchg
fsubs
mov
outsb
out
adc
mov
sub
inc
mov
rcr
push
push
and
repnz
nop
push
in
cmp
into
mov
xor
out
call
adc
stos
mov
iret
push
jbe
out
scas
mov
jnp
dec
cmp
fwait
pop
rcll
add
sbb
adc
fnstcw
aas
sbb
inc
sbb
pop
mov
das
cs
and
and
mov
cltd
jecxz
shr
xchg
les
leave
add
insl
test
pop
mov
shrl
pop
jns
enter
stos
jmp
jne
jne
movsb
pop
xor
xchg
ficoml
add
inc
mov
fidivl
fiadds
fnsave
jno
cmpsb
repz
cmc
jns
adc
scas
js
fsubrs
push
adc
push
lret
daa
enter
addr16
xchg
and
mov
pop
cltd
rorb
in
jmp
xchg
pop
sbb
jle
loope
pushf
jbe
xor
sarl
lahf
into
mov
std
xor
dec
push
stos
sahf
ret
cli
jbe
ficomps
inc
pop
xchg
jnp
popfw
or
insb
or
sbb
sbb
sub
and
sbb
mov
push
jge
loope
sbb
pusha
sbb
iret
out
imul
ret
or
mov
or
jp
stc
pop
enter
jge
or
shlb
mov
jmp
dec
pop
mov
fs
jmp
gs
mov
icebp
inc
fisttpl
cmp
xor
fcoml
sub
call
add
pop
cmp
in
dec
fwait
inc
adc
hlt
dec
xchg
push
stc
cs
pop
sbb
jb
mov
cmp
int3
mov
fstpt
loopne
mov
jns
ret
jae
jle
je
hlt
sbb
jno
jmp
fnstcw
inc
inc
push
fnstenv
add
pop
mov
mov
xor
pop
mov
fisttpll
xor
test
int3
xchg
fbld
ljmp
testb
repnz
popf
les
out
pop
mov
sbb
scas
xchg
cli
rorb
mov
xor
pop
push
sub
xchg
incl
gs
cmp
imul
mov
sarb
mov
or
cli
pop
cli
inc
fwait
pusha
pushf
cs
adc
out
xchg
mov
push
sub
lods
mov
jg
jns
mov
shrl
cmp
loop
mov
cmp
sub
dec
and
sarl
jnp
mov
cmc
into
mulb
jmp
out
mov
mov
mov
lcall
shrb
into
jle
mov
mov
into
mov
dec
sub
push
insl
shlb
xor
bound
mov
adc
mov
shll
adc
incb
mov
mov
jnp
sbb
add
adc
iret
std
mov
outsb
mov
leave
or
out
cs
cld
andb
sbb
adc
and
scas
add
push
and
push
mov
nopl
daa
in
and
sub
rorl
in
fs
jmp
mov
rorl
aaa
pushf
testb
ret
mov
pop
flds
jp
mov
orl
faddl
xchg
sti
call
rorl
xchg
icebp
sub
inc
fimull
enter
xchg
lods
pop
sub
imul
mov
xchg
add
gs
icebp
xor
cmpsl
adc
sbb
ret
adc
push
jl
ljmp
xor
push
or
into
mov
xchg
out
sbb
imul
fisttpl
aad
fiadds
and
imul
fcompl
sahf
jns
pop
cmp
enter
sbb
push
mov
dec
dec
mov
mov
xchg
test
xor
ljmp
adc
jo
ss
cmp
jae
aaa
cmc
cwtl
lahf
add
jl
fsubrs
pushf
mov
mov
push
icebp
divb
dec
icebp
inc
add
mov
insb
ja
add
lret
jae
xchg
ret
pop
xor
pop
cmp
faddl
cmp
jb
jns
push
popa
mov
mov
leave
cmp
std
or
xor
je
das
or
incb
test
shrb
arpl
icebp
iret
mov
arpl
and
sarb
shlb
mov
or
scas
or
pop
dec
mov
jbe
xchg
or
jg
ljmp
mov
pop
mov
xor
loop
and
shll
sbb
ja
pop
aas
cmpsl
mov
imul
and
sub
aam
mov
mov
jnp
pop
call
push
loopne
xchg
cmp
lcall
mov
cltd
pop
lods
cmove
push
test
movswl
sbb
pushf
cwtl
mov
imul
mov
pop
ret
sub
scas
insl
cwtl
fs
and
pop
cld
jl
xchg
stc
inc
arpl
scas
xchg
sbbl
xor
ss
pop
inc
sbb
pop
xchg
mov
inc
pushf
popa
addr16
mov
add
jecxz
xchg
xchg
mov
pushf
add
jp
jae
pushf
cmp
and
lret
loope
xor
hlt
xchg
mov
fmul
inc
xor
jp
xor
rorl
inc
mov
dec
sub
movsb
inc
cmc
roll
pop
lods
dec
ds
mov
xor
insl
sbb
sub
incb
lea
fisttpll
xchg
sbbb
dec
out
cld
inc
xchg
pop
pop
jns
rcrb
call
test
jb
fnstsw
jbe
aaa
and
mov
sub
mov
cmp
jne
pop
dec
sbb
repz
scas
cmp
or
mov
bound
hlt
xor
arpl
cmpsl
push
xor
hlt
test
cmp
push
adc
xchg
inc
sub
flds
int3
outsb
pop
ja
imul
ss
ja
stos
les
or
js
gs
mov
and
adc
scas
sub
xor
sar
push
cmp
scas
in
sub
cmpsl
mov
pop
mov
and
inc
gs
pop
add
rorl
jae
dec
test
xor
add
mov
mov
jmp
mov
push
sbb
in
icebp
inc
jae
xor
cmp
xchg
inc
int
lret
popa
ljmp
xchg
lock
outsb
cmpsl
ret
xchg
jecxz
add
jecxz
mov
leave
jge
jp
push
outsb
scas
xchg
je
pop
or
fdivl
xchg
xchg
ljmp
push
loopne
mov
sub
nop
ljmp
dec
leave
inc
adc
lock
push
in
cmp
or
les
xchg
sub
lds
jb
fdivr
movsb
and
mov
or
cmpsl
cs
push
sub
adc
popa
testl
or
sub
test
dec
test
push
dec
mov
ds
js
adc
fnstenv
xor
inc
adc
lea
push
jecxz
test
ficomps
adc
or
cmovp
and
les
mov
inc
and
in
cmc
push
dec
lea
inc
and
repnz
mov
ret
es
aas
mov
mov
imull
push
inc
and
lret
loope
popf
add
gs
ret
in
jbe
mov
insb
adc
push
insb
dec
leave
cmp
xlat
inc
loope
push
jnp
inc
fistpl
rcrb
pop
scas
jge
cli
popa
xchg
cmp
push
dec
nop
pop
pop
push
mov
cmp
std
jae
sub
mov
cld
iret
mov
sbb
mov
enter
cwtl
ret
sbb
mov
xor
or
adc
das
mov
repz
adc
jbe
push
leave
adc
arpl
hlt
and
cmp
mov
lods
mov
icebp
sti
mov
popf
in
sbb
sub
out
jl
popf
sti
and
int3
es
jg
cmpsl
lods
es
add
fcoml
and
pop
lock
or
jecxz
adc
repnz
mov
call
fcmovu
sahf
sbb
test
js
fistpl
or
push
mov
ret
fst
ja
mov
sbb
pminsw
test
nop
inc
push
mov
stos
xchg
adc
lds
stos
and
jb
fisubrs
stos
pop
pop
test
out
aad
adc
or
testl
scas
sub
xchg
xchg
ret
sub
mov
pop
movsb
jl
push
add
ljmp
ret
movsb
stos
loop
shr
mov
insl
test
fadds
js
or
pushf
ljmp
sub
test
sbb
push
fucom
sub
jl
dec
insb
imul
cli
subl
sub
cmpsl
jo
stc
shll
adc
xchg
dec
sub
into
fsubs
mov
lods
lahf
add
xor
ss
jmp
shlb
cmp
nop
sub
dec
sarb
dec
cmp
test
push
jae
pop
adc
shlb
adc
in
xor
scas
mov
mov
scas
call
aas
ret
pusha
xchg
out
dec
sub
add
mov
imul
and
cli
xlat
enter
dec
xor
fildl
aaa
mov
cmpsl
iret
xor
in
aam
mov
fsubr
sub
dec
into
cs
stos
and
add
cmpb
mov
cmp
mov
xchg
sahf
or
pop
pop
movsb
into
xchg
inc
popf
pop
mov
cld
mov
sub
cmp
out
add
out
xchg
and
mov
orb
xchg
adc
jb
and
and
sbb
loop
mov
jnp
dec
ret
inc
adc
movsb
cs
or
cmpsl
lret
ja
scas
inc
pop
add
cmp
xor
scas
icebp
sub
mov
mov
dec
mov
mov
les
xchg
mov
xchg
bound
data16
push
roll
sbb
and
fs
lcall
int3
add
aaa
jp
jae,pt
call
jecxz
pushf
scas
incb
scas
jp
sbb
cmpsl
aas
dec
fcmovnbe
popf
repz
dec
or
pop
lea
divb
out
add
mov
daa
lcall
mov
cmp
pop
xchg
jmp
jmp
orl
aad
js
das
mov
mov
fisubrl
xor
hlt
xchg
cmpsb
inc
loope
lods
lahf
cwtl
in
mov
pop
cmc
lds
lods
imul
jmp
out
testl
pop
bound
jle
adc
jp
jl
jae
stos
lahf
dec
cmp
shr
mov
jl
outsb
xorl
fcmove
loopne
push
outsl
lcall
out
dec
lods
lret
int3
hlt
mov
js
push
lret
scas
shll
adc
repnz
ficomps
sub
add
pop
cli
mov
cli
movsb
xor
fdivl
dec
xor
xchg
mov
fstps
inc
je
hlt
je
ret
and
mov
jne
adc
lret
stos
jle
cmp
arpl
les
jmp
push
lock
aaa
repz
push
or
xor
cli
mov
push
pop
mov
mov
mov
sub
aas
sbb
or
imul
mov
or
inc
push
int3
and
lret
mov
pop
fcoms
leave
sub
jecxz
sub
sbb
mov
imul
mov
adc
shrl
int
stos
cltd
jg
ljmp
pop
into
insl
dec
push
es
repnz
lds
pop
ret
cmp
sub
pop
orb
mov
push
hlt
aas
xor
xor
sub
repnz
cltd
mulb
mov
je
adc
pop
pop
jbe
lds
mov
jne
cs
rclb
mov
aas
fnsave
sbb
dec
push
sbb
adc
pop
cld
add
ror
pop
push
mov
xchg
mov
inc
ljmp
jge
adc
adc
dec
mov
ret
mov
xlat
inc
popa
mov
sbb
push
xchg
mov
or
shrl
sub
and
test
jnp
jo
js
push
push
jmp
out
dec
push
mov
and
mov
lods
mov
cltd
xchg
nop
icebp
jb
sub
or
and
push
leave
sarb
outsb
sbb
mov
lods
sub
lds
mov
insl
jae
cltd
fsubl
in
sbb
rcrl
xor
mov
roll
testl
jmp
mov
std
jecxz
out
fwait
mov
outsb
movsb
lods
fisubrs
aad
jns
addr16
pop
xchg
clc
dec
cmp
push
and
jbe
xor
sub
jmp
cmpl
aam
roll
fisttpl
movsb
fisubrs
add
fldl
mov
adc
and
jecxz
mov
and
packssdw
dec
push
addl
inc
loope
fwait
stos
lea
jns
insl
fldl
test
or
xchg
add
mov
xor
adcl
inc
xor
test
inc
mov
jae
inc
cmp
icebp
into
push
jnp
cmpb
dec
pop
fisubl
xchg
jp
test
arpl
mov
sbb
in
aaa
mov
inc
test
or
insl
stc
fdiv
loop
insb
push
imul
cmp
jg
ret
dec
or
les
or
xchg
ljmpw
mov
nop
enter
xor
push
mov
das
add
nop
cmpsl
pop
xchg
mov
and
test
mov
cld
outsl
pop
push
add
add
shll
insl
mov
and
sarl
dec
jl
fmull
lods
fisubrl
mov
es
repz
xor
ss
cltd
mov
pmullw
cld
push
inc
jne
pop
cwtl
and
push
scas
xchg
movsb
sub
fnstcw
aam
adc
enter
fimuls
mov
sbb
xor
rcrl
das
sarl
dec
insb
add
mov
in
loope
or
sti
lds
dec
test
into
out
in
pushf
jmp
xchg
rcl
jns
ret
shll
sahf
and
sti
push
dec
lds
mov
in
mov
nop
mov
cli
xchg
dec
sahf
mov
gs
push
fildl
hlt
mov
ja
jl
dec
dec
inc
fnstenv
pop
fdiv
nop
lea
jmp
or
mov
jle
in
jns
ret
jbe
jne
aad
inc
fwait
xchg
adc
arpl
add
xor
jecxz
cmpsl
sbb
cmp
and
sub
push
adc
stos
in
mov
mov
fldt
sbb
out
sbb
in
sub
sbb
dec
je
pop
mov
pop
aas
mov
mov
jne
aam
dec
mov
hlt
mov
adc
dec
sbb
push
data16
jmp
shrl
and
or
sbb
fucomp
test
loopne
aaa
scas
adc
add
pop
jb
cmp
pusha
mov
sub
add
fildl
cmp
cmp
fdivr
je
mov
bound
and
dec
call
xlat
stos
inc
cmp
shlb
mov
and
jae
lods
push
frstor
lret
lahf
push
aas
stos
and
daa
mov
lcall
sti
in
mov
jno
mov
and
push
adc
mov
ja
popf
mov
jnp
loopne
push
mov
aas
das
jecxz
arpl
popa
xor
push
jne,pn
pmulhuw
adc
scas
movsw
pop
mov
gs
sbb
cmp
dec
add
ret
cwtl
stos
sbb
mov
nop
aaa
xchg
adc
sbb
jb
cmpsb
mov
cmc
test
sub
lods
push
jp
cld
ds
cmp
xchg
xor
cld
cwtl
cmc
add
mov
xchg
mov
sbb
adc
cmp
sub
xor
or
mov
and
xchg
gs
insb
mov
or
pop
sbbl
into
xchg
inc
jle
and
repz
dec
mov
xlat
iret
mov
call
push
fcomps
mov
cli
iret
bound
movsl
pop
js
nop
xor
lea
enter
dec
fistpll
mov
xor
jl
sbb
rorl
mov
lcall
mov
clc
inc
ljmp
cli
dec
sub
dec
push
xor
clc
cmp
scas
mov
leave
repnz
orb
fdivrl
scas
js
jl
imul
push
lods
push
out
xor
push
sahf
xchg
sbb
sahf
loop
and
cmp
push
cld
in
mov
outsb
xor
mov
sbb
pop
loope
lret
divb
in
xor
ja
adc
loope
mov
clc
add
nop
sub
adc
and
adcb
xor
xlat
add
cs
push
stos
and
das
mov
and
jns
hlt
or
cltd
mov
inc
mov
add
cmp
cmc
lret
pop
test
popf
aaa
push
push
adc
sbb
mov
jp
push
dec
in
add
ret
xlat
sub
movsb
push
nop
xchg
dec
sbb
inc
bound
leave
sarb
xlat
inc
dec
dec
sub
jp
aas
ficoms
ffreep
lahf
jmp
jnp
mov
fmull
jle
jno
xchg
lahf
adc
mov
aas
pop
rcll
leave
add
mov
clc
lea
and
and
xorl
lods
lds
fsubs
repnz
xor
jp
push
ret
push
daa
pop
and
outsl
je
outsl
adc
pop
cmp
cmc
jmp
cmp
movsb
sbb
cltd
adc
cli
lock
in
ror
ficoms
jbe
adc
cmp
popf
cmpl
inc
cmp
mov
addr16
std
mov
add
mov
push
dec
add
fidivrs
fmul
cmp
fistpl
add
add
fcmovne
sbb
sahf
and
ja
mov
loopne
ljmp
movsl
adc
add
int3
fstps
clc
adc
dec
dec
push
roll
xchg
inc
sub
inc
cmp
stos
xor
dec
mov
mov
push
mov
cwtl
in
int
add
subl
jecxz
movsb
pop
dec
pop
inc
sbb
adc
mov
enter
xor
mov
mov
jg
into
inc
hlt
pop
test
clc
mov
mov
in
arpl
mov
adc
and
push
or
cmpsb
faddl
or
sbbb
popa
je
loop
sub
mov
and
clc
xchg
sub
xchg
lock
fmuls
mov
mov
in
inc
cmp
inc
add
xchg
imul
cmpsl
stc
pusha
out
or
inc
enter
sub
outsl
gs
mov
xlat
mov
cmp
pop
mov
mov
inc
outsl
imul
gs
testb
mov
nop
mov
mov
jbe
jl
iret
lret
jp
insl
push
cmp
xor
cmp
in
xor
xchg
outsl
jae
xor
dec
sbb
push
dec
xor
mov
cmpsl
adc
mov
imul
ds
sbb
das
pop
adc
push
sarb
jnp
inc
xor
shll
nop
je
push
popa
adc
jns
pop
and
mov
out
push
sub
xor
ret
pop
jle
add
lods
push
adc
mov
stos
cmp
in
mov
fiadds
jnp
mov
inc
les
jb
mov
jbe
sub
dec
into
jne
mov
hlt
test
aaa
loope
jmp
sbb
mov
mov
or
jns
xchg
adc
les
jb
out
and
test
cmp
cmpsb
push
testl
and
jbe
addb
xor
pop
lahf
sbbw
not
sahf
mov
mov
rolb
pop
test
aaa
hlt
ret
push
pop
jl
ds
adc
xchg
out
sub
push
xor
stos
loop
leave
addl
add
jo
pop
xchg
fnsave
sbb
sub
sub
add
adc
xchg
std
xor
movsl
out
inc
dec
je
int
pop
and
mov
jne
mov
push
add
stos
mov
and
add
stc
out
sub
xor
xor
pop
movsb
mov
or
pop
cld
sarb
and
ljmp
in
mov
out
pop
mov
aaa
jo
dec
subb
fidivrl
dec
fwait
cld
mov
daa
test
loopne
or
ret
js
jge
adc
test
jp
push
mov
enter
icebp
mov
out
and
and
scas
hlt
ds
mov
mov
cmp
fadds
jbe
pop
add
inc
out
mov
lret
into
leave
repz
test
ja
fs
jb
sub
icebp
xchg
xor
adc
test
cmp
mov
pcmpgtd
sub
mov
mov
cmp
into
xor
in
outsl
sbb
scas
inc
dec
test
inc
inc
ss
xor
xchg
push
scas
int
aaa
sbb
xor
mov
in
cs
movsl
inc
lock
xchg
scas
mov
cmpsl
stos
test
js
std
adc
jle
xor
shll
pushl
xor
hlt
add
lods
and
stos
xor
imul
fisttpl
sbb
or
jne
xchg
cmp
inc
cli
es
nop
push
enter
mov
movsb
aad
lock
dec
fcompl
adc
inc
nop
mov
xchg
add
cmc
cmp
arpl
outsb
pop
push
mov
add
int
stos
enter
stos
insb
stos
out
cmp
std
or
sub
adc
dec
pop
xchg
mov
addr16
hlt
jae
add
add
pop
stc
cmpsb
ficoml
pop
dec
pop
xchg
and
out
add
dec
push
push
push
fwait
push
js
xor
aam
xor
scas
lcall
aam
and
dec
test
mov
push
lock
push
movsb
dec
rol
mov
sub
dec
push
sti
pop
filds
jle
inc
lods
cmpsb
jg
ds
adc
loopew
inc
pop
mov
fimuls
loopne
cmpsb
or
js
cmp
cli
jle
fs
and
adc
xchg
cmp
fsts
mov
fstpl
ja
sbb
jg
pop
addr16
leave
fld
out
pop
mov
nop
xchg
test
xchg
mov
xlat
ds
or
test
int
loopne
adc
pop
int
imul
cmp
or
dec
inc
pop
jo
outsb
test
leave
int
push
sub
sbb
fnstcw
mov
movsl
jmp
lods
inc
jns
inc
and
sbb
cli
popf
xcrypt-ctr
cmpsl
pop
mov
movsl
stos
jno
xor
addr16
sahf
cmp
jp
in
js
mov
cli
pop
mov
aaa
sbb
sub
add
movsl
sbb
stos
mulb
test
hlt
sbb
aam
out
ljmp
jmp
sub
jno
sbb
insl
iret
mov
sahf
shrl
pop
inc
cmpb
fs
jecxz
push
mov
adc
dec
adc
cmp
stc
push
ret
push
adc
pushf
popa
dec
hlt
inc
negl
and
push
or
dec
jae
and
and
icebp
fidivrl
inc
dec
popa
dec
fldenv
scas
sub
sub
lahf
test
mov
mov
mov
addr16
inc
lret
and
or
imul
aas
mov
dec
repnz
aam
fmulp
sbb
xor
hlt
icebp
jb
les
rol
add
pop
push
stos
mov
cltd
add
insb
or
sbb
mov
sbb
fsubrs
inc
cmp
sbb
stos
test
cmp
int3
xchg
mov
fwait
pop
imul
hlt
sarl
or
dec
lahf
ret
xlat
out
mov
fwait
pop
inc
mov
shrl
adc
or
subb
fldl
movsb
push
cmpb
bound
push
xor
ret
call
adc
xchg
mov
and
nop
mov
jg
xor
jnp
ljmp
cmpsb
xlat
nop
ret
mov
dec
rolb
inc
imul
mov
test
cmpsb
jle
add
gs
or
mov
mov
in
mov
or
jb
negl
xor
lea
xchg
jmp
or
pop
int3
lahf
insl
popf
adc
lea
sub
lcall
inc
xor
test
js
mov
fidivl
loope
jg
push
xchg
sub
jne
cmpsb
notl
enter
mov
or
sub
dec
or
fwait
aam
push
insl
das
addr16
add
pop
jne
stos
rorb
cli
mov
loopne
xor
dec
and
and
xor
orl
gs
lods
and
popf
pop
xchg
add
mov
stos
mov
les
popf
movsl
dec
adc
fsubr
ficompl
push
dec
rorl
rolb
adc
arpl
inc
cmp
lods
fstl
push
insb
loopne
fdivrs
pop
aaa
mov
push
pop
pop
and
jl
arpl
lret
jge
fidivrl
icebp
or
mov
ljmp
push
jl
pop
add
jns
xchg
push
aas
pop
pop
mov
shrb
jl
into
xchg
lods
mov
inc
pop
mov
setnp
and
cwtl
inc
ljmp
ficoml
push
daa
mov
das
xor
cmp
or
in
jl
xchg
sub
dec
or
mov
mov
xchg
icebp
loop
jno
js
lret
xchg
xchg
iret
cmpsl
repnz
and
rorb
sahf
or
and
popw
sub
fs
ja
aad
mov
adc
cmp
movb
cwtd
aad
fstl
std
xor
mov
jl
mov
jns
push
popa
and
sub
int
mov
sti
jmp
mov
aaa
sub
lods
pop
test
mov
push
mov
or
es
hlt
cs
adc
loop
jae
push
dec
fld
cmpsb
js
pop
out
xor
or
jmp
cmp
sub
pushf
and
and
sti
dec
and
call
faddp
add
std
or
lret
inc
in
vxorpd
jbe
jge
loopne
daa
lcall
and
repz
leave
cmp
sub
and
sbbl
in
popa
lock
cmp
push
jl
and
dec
popa
ret
outsb
filds
mov
test
jns
in
mov
and
shlb
scas
dec
pop
scas
in
sarb
movsb
xchg
mul
mov
int3
fucomp
fdivrs
mov
and
xchg
mov
pusha
push
js
add
repnz
js
je
test
dec
jb
repnz
in
dec
addr16
and
aas
sbb
mov
int3
aas
enter
call
data16
std
les
aad
mov
jge
sub
add
xchg
inc
cmpl
sbb
xchg
cmpsl
cwtl
xor
mov
mov
fnstenv
fsubrs
repnz
jne
orb
sti
mov
insb
leave
and
cwtl
or
call
or
mov
fcompl
cmpsb
mov
xchg
sub
cmp
aaa
or
es
add
jmp
lahf
cmp
cmp
mov
jno
inc
lds
mov
mov
scas
jecxz
xlat
lahf
cmpsb
mov
fdivs
push
gs
push
jecxz
mov
lcall
shll
cmc
jp
dec
xchg
xchg
xchg
loopne
jo,pt
sti
in
xor
xor
mov
pop
sti
xchg
push
stc
outsb
mov
xchg
push
out
push
sbb
and
pop
mov
mov
push
out
add
lock
ret
pushf
ret
cld
add
ret
dec
push
imul
andb
pop
and
fists
inc
xor
scas
lds
cmc
adc
cmp
push
mov
mov
xor
cmp
sub
add
jp
inc
dec
push
add
data16
sbb
das
inc
aaa
in
adc
arpl
sarl
hlt
adc
inc
sbb
fildll
shlb
out
icebp
jne
xchg
xor
mull
cmpsb
shll
or
out
jae
scas
dec
outsb
pop
jno
out
into
adc
jge
aam
pop
dec
pop
xchg
int
imul
push
leave
sub
cmpsb
lock
adc
je
test
jb
mov
cmp
jp
iret
dec
cli
sub
es
cld
cmp
jae
adc
inc
scas
cmp
lods
dec
xor
pop
sbb
mov
sbb
pop
push
ds
mov
dec
cmp
or
xchg
inc
cmp
jl
data16
sub
int3
fistl
test
push
es
and
mov
jnp
notb
push
xchg
in
xchg
je
jne
jns
out
nop
cmp
rorb
mov
jle
or
or
adc
or
mov
xchg
cmp
sbb
sbb
mov
sub
call
ljmp
or
adc
mov
dec
inc
mov
push
xchg
cmpb
or
popa
ret
mov
xor
xor
in
add
mov
mov
xor
push
mov
xchg
inc
outsl
stc
cmp
xchg
lret
lret
loope
clc
xchg
insl
push
push
adc
jge
mov
rcll
lea
fisubl
pusha
jne
fistpl
pushl
mov
lret
mov
into
aaa
mov
mov
jnp
cmp
int
cmp
shl
test
loop
push
test
mov
cmp
movsb
mov
cmc
pop
lret
mov
pushf
sub
mov
js
call
jmp
xchg
in
incl
cmp
mov
jo
push
cli
mov
xor
jg
jge
dec
lds
mov
and
orl
jne
mov
adc
int
mov
out
pusha
jb
xchg
in
inc
fildll
outsb
cmp
lea
data16
enter
cmp
lea
dec
sub
setge
pushf
fistl
or
jle
push
push
pop
jbe
mov
repnz
mov
in
cmp
push
mov
call
lods
gs
or
lret
adc
aad
xor
nop
cmp
lock
add
cmp
and
out
jae
mov
shrl
or
push
popa
sub
sub
clc
cmp
imul
mov
fstl
push
xchg
mov
sbb
lahf
cmpsl
pop
push
stos
xor
sbb
out
in
add
and
insb
inc
cld
lea
ja
fs
aad
out
sbb
clc
lds
insb
jbe
insl
loop
leave
and
and
mov
inc
dec
jl
hlt
add
add
add
in
es
or
fisttpll
fwait
popa
push
incl
jmp
inc
sahf
bound
shrl
stos
and
mov
aam
lret
sbb
pop
data16
ds
jl
jg
jmp
aad
inc
pop
aas
push
hlt
shr
jb
jg
xlat
ja
out
fmull
mov
nop
sbb
lock
bnd
adc
sub
mov
push
cmp
cli
out
sub
push
sbb
inc
fisubl
imul
inc
mulb
pop
sub
andb
mov
xchg
inc
ljmp
mov
enter
xchg
mov
ss
push
dec
int
jb
test
es
arpl
push
pop
push
adc
icebp
shll
push
loopne
jge
pop
cmpsl
dec
mov
and
into
mov
xor
or
ds
stos
out
shrl
sahf
popa
mov
dec
ljmp
nop
rcll
mov
or
int
or
stos
cmpl
pop
jne
pushf
pop
push
adc
ja
aas
mov
sbbb
in
js
and
mov
and
pop
arpl
outsl
fisttpl
jb
pop
ja
cmp
dec
arpl
cwtl
lahf
lods
or
adc
scas
loope
or
or
sti
push
dec
push
lcall
lds
and
or
stos
add
dec
xchg
fcmovb
fcomi
es
cltd
sub
stc
or
ljmp
jg
or
cmpsl
dec
sar
and
outsb
idiv
jp
add
add
test
addr16
insb
lahf
popl
xor
sbb
jbe
sbb
aam
cwtl
in
imul
xorb
test
fisubrs
sbb
mov
push
and
xor
test
sti
in
vmread
scas
mov
adc
repz
add
sti
pushf
lcall
sbb
mov
jb
aaa
mov
mov
rorl
push
mov
arpl
pop
mov
xchg
and
repz
sub
or
aam
test
in
jl
ja
jl
cwtl
sbb
push
cmp
das
add
push
xlat
mov
add
sbb
add
push
rcrb
lret
movsl
mov
or
sbb
mov
lods
leave
jno
out
inc
in
push
ds
insl
fldenv
stos
xchg
in
dec
xor
mov
mov
loope
int
xor
xchg
pop
insb
add
or
push
xchg
xchg
int
outsl
repnz
adc
lcall
je
rcrl
in
mov
and
push
sub
inc
mov
gs
aad
adc
movb
sbb
or
call
inc
and
dec
movsb
jecxz
pop
and
aas
xchg
lea
inc
ret
adc
imul
xchg
outsb
xorl
mov
mov
and
adc
xor
shrb
sub
fistl
lods
cmpsl
lds
loopne
pop
mov
popf
stc
cmp
imul
sbb
fwait
adc
push
mov
lock
pushf
inc
aaa
mov
cltd
aas
sbb
stos
add
out
arpl
aam
and
or
mov
pusha
xor
bound
push
xchg
xchg
cli
hlt
inc
push
hlt
rol
and
movsl
pop
ds
push
cmp
movsb
int3
adc
test
lret
fs
xchg
repnz
es
mov
push
je
mov
imul
daa
scas
js
add
shrl
in
hlt
add
push
rorl
xchg
or
mov
out
cmpl
xchg
lods
daa
fldenv
imulb
ljmp
rcr
jp
sub
and
mov
and
mov
lret
jnp
and
or
push
std
lret
jne
xchg
data16
pop
push
daa
xor
aad
push
pusha
cmp
jns
mov
decb
xor
dec
in
sti
repz
icebp
leave
push
repz
ror
mov
inc
fimull
out
mov
int
loop
sub
repz
leave
xchg
xor
adc
push
fwait
jmp
push
mov
ffree
out
pop
lret
fwait
cmpsl
dec
pop
int
sub
jbe
cli
sub
jns
or
mov
lret
dec
cmp
shll
or
xchg
dec
mov
fisubrl
push
lods
std
test
dec
ss
add
push
leave
cmp
in
int
dec
sahf
xchg
sbb
fmull
cwtl
clc
dec
jno
mov
xor
or
into
jecxz
lods
icebp
xchg
lock
or
dec
movsb
push
or
cmp
lret
dec
fstpl
lret
push
jp
out
pop
inc
and
push
cli
jne
jmp
out
in
ret
sub
adc
js
jb
les
xor
cmpsb
push
into
mov
dec
inc
inc
ret
mov
gs
push
xchg
adc
xchg
adc
mov
fldl
cmp
arpl
in
mov
pop
add
or
pop
sub
fbld
aad
pop
hlt
sub
rorl
or
flds
in
jl
hlt
add
cwtl
out
movsl
cmc
sbb
int3
arpl
or
movsl
and
push
repnz
ficomps
movsb
aad
das
mov
test
dec
test
jle
rcrb
cmp
sbb
movsb
ljmp
cmp
sbb
dec
mov
xchg
pusha
subb
pop
and
add
inc
jp
sub
nop
mov
push
sbb
jb
dec
insb
pop
scas
push
lea
call
scas
loope
pusha
push
dec
and
dec
mov
out
push
sub
xchg
push
jp
adc
jle
jns
fmull
xorl
inc
mov
loope
or
je
test
inc
dec
inc
fadd
xchg
es
xchg
into
or
dec
inc
sub
mov
mov
cld
lcall
mov
mov
jbe
mov
subl
mov
js,pt
aam
jbe
ss
xor
adc
xchg
std
push
pop
and
call
push
ja
jnp
jmp
in
inc
dec
leave
sub
mov
ljmp
adc
pop
data16
rcrb
xlat
pusha
jnp
xchg
lret
mov
push
int3
insb
adc
lret
or
enter
mov
mov
and
sbb
and
inc
lea
mov
arpl
std
or
add
pusha
sub
push
or
push
inc
cwtl
ljmp
xchg
inc
xchg
sahf
cltd
add
xor
cmp
mov
inc
ljmp
shll
and
sub
pop
push
nop
cmpsl
xor
fwait
in
xor
inc
scas
ret
cmp
jno
xor
and
icebp
dec
scas
test
push
stos
popa
inc
mov
and
test
rcll
fbstp
pop
mov
inc
imul
push
dec
pop
cmp
jne
jg
sbb
scas
jg
push
inc
test
rcr
pushf
subb
out
cmp
cs
fcmovne
sbb
aaa
jo
sbb
mov
test
xchg
pop
js
popf
lcall
test
lods
jae
out
in
jmp
sub
sub
mov
add
xchg
or
pop
and
lcall
imul
push
and
dec
add
imul
or
and
and
jmp
inc
dec
subl
jmp
sub
outsl
mov
aaa
xchg
push
inc
dec
in
pop
sbb
sbb
sub
add
int
sbbl
je
mov
testl
addr16
mov
or
add
sub
and
jmp
jb
push
ss
lret
fcmovbe
cmpsb
popa
fmull
dec
dec
bound
sti
sbb
and
sub
das
jmp
lods
add
fbstp
dec
mov
lods
subl
ret
jb
adc
inc
xor
push
inc
xchg
mov
cli
cmc
jo
stos
jno
sarb
mov
adc
mov
stos
fcoml
dec
sti
test
inc
rcll
ja
pop
pop
lea
sbb
mov
repnz
mov
lret
push
lret
mov
iret
jbe
mov
fnstcw
stos
repz
in
dec
push
sahf
mov
sbb
cmp
xor
divl
push
jl
push
popf
jg
subl
cld
and
movsb
mov
pop
inc
cmpsl
shll
or
jns
fcmove
xor
push
dec
pusha
lcall
pop
rcrb
leave
jae
mov
data16
and
xorl
cmp
push
arpl
enter
xlat
push
cmp
xchg
mov
and
shrl
inc
pop
or
jno
or
fimuls
in
mov
in
mov
lock
mov
bound
and
stc
mov
mov
scas
nop
mov
call
jne
stos
and
mov
xor
mov
xor
mov
adc
cli
mov
jno
or
cmp
mov
jecxz
bound
fs
hlt
inc
and
mov
mov
out
cld
jb
inc
pop
mov
jge
pop
pop
mov
jne
iret
pop
mov
hlt
or
icebp
lods
in
xchg
or
add
test
in
cmp
xor
subl
mov
andl
or
mov
sub
sarl
subl
xor
fdivrs
mov
sub
shrl
push
inc
mov
mov
or
sbb
jmp
sub
push
ds
loop
aaa
push
shrb
push
ja
scas
fsubr
pop
and
pop
cmp
xor
ja
pop
pop
xchg
fs
fldl2e
mov
loope
notb
daa
stc
popf
insl
cmp
cmp
sub
gs
stos
xor
mov
movl
rcrl
mov
cld
jecxz
jg
ljmp
std
in
scas
pop
shr
jne
scas
xor
sti
int
lsl
aam
in
in
mov
fidivs
pop
push
sub
mov
adc
or
inc
fsubrl
pusha
push
idivb
dec
jno
cmp
push
cmp
add
and
or
addr16
cmp
loope
and
insb
adc
sub
inc
pop
inc
arpl
xchg
jle
dec
test
fsubs
jo
jecxz
subb
pop
ret
mov
and
ficoms
and
inc
enter
insb
pop
xchg
lods
xlat
cld
repz
rorl
ja
iret
cmc
aad
fidivrl
xor
and
add
cld
mov
insl
sub
xchg
add
int3
nop
jle
xor
repnz
jl
int
fisttps
ja
mov
loop
cs
push
xor
addb
sbb
jge
sbb
mov
aad
int3
pop
xor
cmp
gs
pushf
lret
or
pushf
mov
lret
push
js
cs
inc
xchg
pop
and
rorl
adc
pop
cmpsl
fwait
or
stc
movsb
call
sbb
or
icebp
jp
sbb
outsb
fs
push
mov
xchg
ret
xchg
fcmovne
add
jne
jae
out
enter
cmp
or
push
sahf
sub
mov
xchg
xor
loopne
inc
sub
fwait
mov
ss
ret
stos
imul
mov
add
enter
sub
mov
cmp
lock
rorl
es
out
shll
adc
dec
in
cwtl
mov
rol
push
hlt
ja
scas
popa
sub
sarb
daa
cmp
iret
cli
xchg
mov
rcrb
sbb
decb
es
jns
sbb
fwait
out
cmp
jb
std
jge
out
dec
cmp
insl
jecxz
std
jne
xchg
fs
adc
pop
shll
mov
pop
mov
pusha
stc
lcall
cmc
mov
or
cmp
pop
fadd
add
push
fisttpll
push
or
scas
cmp
test
out
dec
cwtl
cmp
push
and
xor
aaa
dec
dec
inc
fidivl
lret
dec
push
adc
adc
push
sub
pop
and
rcrb
nop
xor
stos
add
insl
mov
fstp
scas
jl
call
pop
aaa
mov
pop
sbb
and
dec
mov
stos
pop
daa
inc
lret
test
adcl
push
arpl
gs
dec
mov
jo
divb
adc
xor
pop
scas
lahf
pop
inc
stos
push
inc
arpl
adc
pop
stc
mov
add
adc
test
dec
stos
cwtl
cmpsl
jb
sbbb
neg
shl
aaa
jno
popf
mov
xchg
pop
add
dec
lods
mov
mov
jbe
sub
cld
adc
mov
dec
fwait
and
test
test
cmp
rcrb
insb
icebp
loop
push
or
das
push
or
dec
std
outsb
sbb
xor
repnz
loop
test
stos
stos
data16
mov
xor
and
sub
lcall
dec
mov
in
sbb
add
shll
scas
shl
xchg
add
inc
movl
jb
adc
add
fcmovnb
hlt
pop
mov
sbb
dec
cmp
or
mov
mov
adc
push
cs
sub
jmp
gs
movsb
lods
and
insb
fdivrl
fidivl
fdivr
cmp
ret
push
or
xor
pusha
sbb
test
mov
lods
jae
icebp
mov
cmp
notl
xchg
xchg
jmp
sbb
int3
sub
push
pop
out
nop
cs
or
jae
test
mov
sub
js
or
fisttpl
out
dec
cmpl
mov
xlat
fcos
out
stc
fnstenv
xchg
out
mov
shrb
test
call
test
ja
inc
data16
popf
dec
stc
mov
test
in
imul
adc
sbb
std
mov
mov
sub
pop
or
jae
jb
push
jb
movsb
adc
rcrb
xchg
testb
in
out
cld
or
add
push
pop
in
aam
leave
jl
scas
adcl
mov
int3
jno
addr16
jb
jnp
pop
jns
xchg
ljmp
sti
in
pop
in
shlb
test
add
jb
jb
xchg
aas
lock
add
ljmp
cmp
mov
es
loopne
fisubs
add
and
push
repz
clc
xchg
and
es
inc
add
xchg
lret
inc
or
xor
sbb
iret
sbb
lcall
dec
add
addr16
lods
adc
neg
mov
xchg
xchg
xchg
cwtl
call
jmp
xchg
mov
pop
scas
rorl
sbb
add
lcall
stos
jae
mov
cwtl
push
lods
push
sti
add
movsl
mov
or
ljmp
xchg
cmovge
mov
test
xor
cmp
push
push
sub
dec
pop
sub
in
daa
jge
pushaw
cli
stos
xlat
pop
int
nop
cwtl
lods
or
jp
call
jae
mov
arpl
scas
jbe
ret
and
out
call
sbb
mov
in
mov
cmp
decb
inc
xor
sbb
mov
add
js
push
pop
in
and
stos
or
ficoml
xchg
mov
lds
sub
shlb
outsl
mov
add
lods
ret
xor
addb
test
or
add
std
dec
int
fistl
pop
rclb
rorl
cmp
jmp
sub
fwait
jae
pop
mov
xorl
jae
mov
jg
add
sbb
out
push
mov
pop
sub
imul
cmpsl
push
hlt
xchg
out
fdivrl
clc
jp
cmp
mov
jp
or
push
mov
mov
cmp
or
mov
jne
divb
push
js
call
mov
pop
icebp
cmp
scas
sub
xchg
cli
ss
andl
rclb
jno
lret
pop
int
sub
mov
xchg
rcrl
ds
hlt
cmp
ret
hlt
add
loope
shll
rorb
sti
call
insb
movsl
arpl
lds
and
mov
push
inc
test
gs
outsl
scas
in
sub
jl,pn
add
push
lcall
xchg
cmp
sbb
dec
scas
xor
push
jl
vpmuludq
mov
dec
shrl
ficoms
or
dec
sbb
and
pusha
lock
sub
cmpsl
sub
out
js
pop
jle
xor
cmp
in
ds
sub
cmpb
mov
aaa
iret
jg
popa
outsl
sahf
jle
pop
test
and
push
cmc
neg
fadd
call
or
sub
push
mov
addr16
mov
adc
pop
and
repz
ret
pop
and
mov
mov
sub
cmc
jo
sub
outsl
movsb
add
push
enter
loop
push
popw
cmp
ja
fbld
aas
pop
cltd
cmpsl
sahf
lcall
xor
add
cmpsl
js
sbb
lahf
outsl
push
mov
cld
xor
sbb
je
lcall
bound
fidivs
addr16
inc
jns
je
jne
adc
outsl
rorl
into
dec
push
ljmp
cld
cs
dec
inc
mov
dec
imul
in
sti
shl
icebp
cs
jb
out
sub
lock
lods
push
sbb
cmp
rol
inc
push
pop
in
dec
aam
xchg
or
adc
inc
cmpsb
mov
jnp
mov
imul
in
cmpl
pop
dec
or
popf
stos
dec
mov
pop
cmp
addr16
mov
pop
jge
int3
js
fistps
insb
jno
test
mov
pop
fcomip
bound
pop
inc
stos
jne
inc
cmpsl
inc
lahf
cmpsl
pop
lcall
inc
jg
aas
fidivrl
xor
mov
insl
test
dec
xchg
cmp
lret
mov
ljmp
aam
loopne
or
bound
out
fmuls
andl
imul
inc
jge
inc
jbe
das
adc
das
ss
ror
push
sbb
jns
stc
push
pop
dec
insl
arpl
adc
loop
push
mov
mov
xor
add
divb
fistpl
lods
dec
xor
shlb
sti
mov
bound
or
push
rcl
push
cltd
test
std
jl
sub
add
scas
mov
jnp
inc
sub
jne
lock
subl
xor
mov
xchg
lret
notl
adc
mov
xchg
adc
and
cmp
and
pop
les
jb
in
dec
xlat
cmp
xchg
cmpsb
jb
test
rorb
cli
xor
shlb
outsl
sarl
push
lahf
sbb
pop
js
cmpb
xchg
xchg
lods
mov
or
rcrb
test
repnz
loop
push
jl
cs
pusha
imul
loope
sub
dec
lods
mov
sbb
jne
xchg
mov
aam
cmp
loop
mov
cltd
in
push
mov
cld
sbb
outsl
stc
mov
pushf
insb
xchg
adc
jne
mov
xor
xchg
push
pop
add
int3
lahf
mov
xor
in
add
ret
stc
sub
arpl
sub
add
mov
fs
mov
addl
pop
jecxz
xchg
jnp
cmpsb
fwait
mov
and
fildl
ljmp
cmc
sbb
jle,pn
pop
mov
icebp
shlb
roll
iret
add
cmp
push
fsubl
pop
xor
aad
push
iret
sbb
data16
jge
outsl
fstpt
outsb
and
into
test
mov
aas
test
mov
jo
push
sbb
fs
xchg
gs
lods
in
sbb
pop
ret
mov
or
and
mov
daa
adc
jg
outsl
pop
and
leave
dec
push
fildl
cwtl
frstor
arpl
jae
mov
add
pushf
bound
jecxz
inc
cmp
in
imul
push
xor
test
xchg
push
std
int3
push
mov
jno
fists
ret
cmp
leave
lods
subb
sub
push
fs
mov
push
pop
push
mov
fsub
addr16
xchg
mov
xchg
sbb
test
dec
mov
cmpsb
int3
loope
cli
lret
test
out
mov
push
pop
and
and
push
mov
sahf
dec
iret
outsb
dec
cltd
dec
xchg
insb
cwtl
test
dec
data16
outsl
xor
pop
imul
faddl
jns
sub
cs
inc
hlt
pop
in
mov
inc
mov
mov
and
jb
cmpsb
andb
adc
push
lahf
rcll
mov
jb
loope
clc
xor
dec
repz
sbb
rcrl
repz
push
add
outsl
sub
mov
push
pop
xchg
mov
and
test
out
call
int
or
cmpsb
sbb
xchg
popa
jecxz
mov
lret
insb
jns
inc
pop
mov
adc
sahf
and
or
mov
loop
mov
inc
je
pop
sub
stc
sbb
jne
add
negb
push
add
and
xchg
or
test
xor
pop
lods
das
or
sahf
lock
sub
arpl
nop
ret
jne
pushf
mov
dec
movsb
sbb
mov
xchg
mov
or
orl
into
scas
jnp
mov
in
stc
xchg
icebp
aas
daa
xchg
xchg
mov
mov
xor
and
push
data16
jl
xlat
mov
arpl
xchg
scas
adc
clc
cmc
mov
push
shrb
pushf
fisubrl
ficomps
outsl
aam
aas
jp
pusha
lret
inc
or
addr16
or
sub
repz
movl
outsl
mov
das
sar
lahf
les
fcmovu
int3
leave
jl
cmc
cs
jmp
sub
loop
sub
leave
bound
pop
push
stos
jl
and
pop
ret
cmp
test
jnp
mov
mov
xchg
inc
pop
inc
jp
gs
xor
jo
lahf
push
push
sub
cmp
ret
inc
or
lret
push
repnz
gs
xchg
sub
test
mov
jbe
xchg
xchg
sub
mov
dec
aas
mov
loope
outsb
hlt
std
in
fidivs
sub
mov
or
xor
dec
inc
pop
pop
movsb
insb
xchg
cmp
jg
and
jge
leave
add
in
mov
in
push
out
imull
push
xchg
jnp
test
outsl
test
orb
iret
out
rol
stos
jno
std
sbb
mov
call
jmp
stc
xlat
adc
adc
ret
jne
push
inc
daa
sub
popa
cs
jnp
xchg
movsw
dec
push
lret
inc
and
pop
push
sbb
sub
out
cmp
out
call
sbbb
xchg
aaa
pcmpgtb
mov
enter
mov
xor
test
adc
and
fadds
xchg
lahf
sar
popl
addr16
arpl
jge
or
iret
add
in
mov
repnz
xorb
imul
je
inc
mov
iret
jmp
inc
es
push
iret
inc
fwait
dec
pop
dec
sub
insb
jnp
adc
xor
es
aam
shrl
jno
pop
push
add
adc
cmp
fs
adc
lods
cli
mov
gs
mov
lock
push
xor
dec
jle
sub
rcrl
push
fwait
pop
mov
mov
sarl
and
xlat
adc
loopne
pop
ds
orl
out
inc
mov
aam
xchg
add
pop
jae
jb
stos
out
jmp
and
jmp
jb
cmp
sub
pushf
ret
in
push
jl
fistpl
add
js
jb
jo
jp
gs
mov
mov
lds
mov
or
sub
cwtl
add
and
addb
jg
test
mov
les
mov
sub
xchg
repnz
jns
xchg
loope
imul
mov
dec
sub
dec
sbb
call
shrl
ljmp
sbb
pop
sbb
in
adc
mov
jecxz
aas
sbb
out
sti
jp
test
dec
insl
inc
clc
fadd
in
daa
lods
dec
push
jg
push
xor
mov
cwtl
xchg
cs
inc
xorl
ljmp
inc
mov
push
mov
cld
adc
push
mov
mov
sub
arpl
stos
stos
mov
cmpsb
addr16
inc
cmp
adc
add
adc
pop
add
xor
ljmp
xor
test
bound
xor
jnp
test
dec
jle
in
outsb
push
test
hlt
scas
int
iret
push
mov
push
inc
fcoml
xorl
std
sarl
testw
outsl
pop
adc
sub
cs
aas
and
jns
js
jbe
rcrl
pop
loopne
sbb
icebp
test
jp
clc
lods
lea
icebp
cmp
xchg
and
sub
mov
push
push
outsl
outsl
mulb
sub
or
cmp
js
inc
pushf
jle
fsubs
idivl
jbe
int3
fwait
dec
push
push
mov
and
divl
out
icebp
dec
int
jp
lock
sbb
in
test
jbe
pop
pop
push
mov
pop
stc
xchg
dec
rorb
sbb
lods
out
mov
pop
sti
in
mov
xchg
dec
dec
into
out
pop
std
pop
and
jle
jo
mov
lock
pushf
inc
das
pop
in
mov
adc
jns
cmpsl
in
xchg
push
sub
sbb
aam
adc
push
imul
add
jl
imul
cmpsl
int
push
pop
data16
mov
cmp
sub
adc
cltd
lock
notb
xor
fisttpl
test
aaa
aam
insl
add
or
jecxz
mov
loopne
mov
dec
hlt
adc
pop
xchg
or
xor
in
scas
cmpb
mov
xor
pop
sbb
hlt
loop,pn
fwait
in
xchg
jge
fisubrs
mov
fildll
das
pop
push
int3
cmpl
push
push
cmpsl
fidivrl
sub
sub
test
pusha
inc
dec
scas
push
cli
mov
pop
fcoms
sbb
lret
inc
pop
or
inc
inc
or
push
pop
in
add
mov
je
push
dec
cmp
jmp
daa
and
or
orl
rclb
int3
fldt
jbe
sbb
jb
ret
outsb
xor
sbb
xor
fisttpll
mov
lret
adc
sub
sbb
adc
cs
push
test
sbb
pop
push
xor
pop
rolb
pop
push
mov
pop
xlat
fldt
shrb
ds
and
lods
push
push
adc
fisttps
or
roll
mov
das
mov
repz
adc
mov
divb
pop
test
in
iret
xor
adc
les
insb
cmpsl
fs
pop
aad
ds
mov
cmp
lea
pusha
xchg
jp
clc
stos
fsubrs
xchg
mov
fnsave
fstp
arpl
das
je
mov
and
lods
dec
cwtl
xor
push
jae
xchg
xchg
iret
cmpsl
int3
fimuls
lods
int3
jno
add
incb
test
adc
test
mov
sar
js
pop
dec
roll
jg
pop
daa
inc
dec
ficoml
push
add
mov
daa
cmc
aaa
cmpsl
mov
mov
push
loopne
aam
jge
sbb
mov
push
and
push
fisttps
xchg
mov
jno
sarb
fstl
jbe
add
mov
mov
cmpl
aam
icebp
cmpsl
pop
aam
xchg
push
xor
ret
add
fs
ret
sub
out
pusha
lcall
enter
and
arpl
mov
push
fwait
out
in
mov
mov
add
mov
data16
enter
mov
pusha
pop
fadds
jo
push
mov
popa
sbb
jl
les
cmp
mov
cli
and
ret
sub
sar
xchg
xchg
stos
mov
cltd
pop
stos
fs
loopne
into
test
jl
adc
cld
ja
sbb
jo
out
fisubrl
jnp
xchg
jmp
mov
aam
stc
sub
sti
shll
ss
test
arpl
gs
push
fs
lock
or
test
pop
jo
cmp
fdivp
sub
fdivr
fs
xchg
sbb
ljmp
es
sbb
or
jmp
xor
sahf
mov
add
dec
mov
xchg
mov
mov
push
stc
cmp
mov
jp
scas
xchg
inc
cmpsl
pusha
fwait
adc
fadds
push
push
mov
mov
fidivs
jns
aas
push
call
adc
sbb
xor
dec
xchg
add
xor
pop
push
enter
hlt
and
add
scas
mov
xchg
dec
pop
out
push
js
add
jns
orl
mov
xchg
add
jg
js
sbb
rolb
jnp
lock
out
xchg
cmc
imul
adc
test
call
or
cld
jo
xchg
divps
test
cmp
pop
loopne
push
mov
mov
int3
push
loope
cmp
xlat
adc
les
push
dec
xor
push
addr16
push
push
shl
push
lods
xchg
popw
xor
repnz
loop
cmpsb
pop
push
mov
dec
loop
loop
or
stos
stos
faddp
hlt
pop
add
push
cmp
iret
popa
inc
pop
ljmp
push
pop
arpl
mov
pop
cmp
out
pusha
sbb
addb
es
jg
mov
push
sub
add
push
arpl
xchg
mov
xchg
jl
cmp
mov
inc
ffreep
adcb
and
push
sbb
outsl
or
and
repz
xlat
int
xlat
mov
cmp
mov
mov
aas
hlt
sub
adc
pop
jbe
je
xchg
jg
and
je
xlat
lds
push
cmpsl
xor
jg
jo
insb
lds
mov
loope
popf
mov
pop
pop
xchg
xlat
inc
adc
jno
das
movsl
rcrl
ja
xor
insb
inc
hlt
out
jbe
mov
push
push
cs
pop
sbb
push
lea
int
pop
sbb
mov
jbe
repz
push
mov
mov
mov
adc
ds
ret
arpl
cmp
ret
mov
adc
push
mov
fists
inc
jge
loopne
faddp
pop
xchg
jecxz
outsb
shrb
adc
inc
shll
mov
imul
and
insl
loope
rorl
lods
insb
mov
test
cmp
rcll
sbb
push
push
mov
rcrl
cmpsl
add
and
jae
loope
pop
bound
repnz
mov
cmp
push
sub
out
fisttps
cmc
adc
bound
lcall
cmp
repnz
or
jg
aaa
mov
loope
mov
mov
xchg
sub
sub
adc
xchg
pop
pop
jp
notl
push
lcall
test
inc
sbbl
xlat
outsl
call
aas
push
adc
pop
sbb
and
arpl
sarl
js
pop
pop
pop
gs
out
fdivrs
in
gs
aam
mov
int
xor
je
and
mov
jbe
out
xor
mov
inc
lret
ljmp
in
cmp
inc
imul
dec
fiadds
push
inc
mov
or
mov
mov
xchg
les
lret
hlt
lret
xor
inc
test
mov
add
imul
inc
push
aaa
mov
movsb
push
test
imul
out
and
cmp
xorl
into
cmp
lods
inc
test
sub
fs
ds
adc
in
push
push
push
push
cmpps
hlt
mov
dec
add
inc
dec
ficompl
loop
rolb
popf
lods
adc
out
nop
cmpsb
jg
mov
jae
xor
js
nop
loopne
and
dec
insl
add
call
push
add
inc
mov
or
stc
cwtl
cli
pop
jbe
jmp
lret
inc
inc
push
js
push
dec
push
jnp
aam
mov
xchg
pop
int
adc
add
mov
ffree
loop
nop
in
jp
jp
jne
jp
pop
xchg
inc
and
loope
in
mov
xor
ja
out
in
or
imul
jns
cltd
fnsave
orl
stos
inc
mov
adc
cmp
jl
dec
cmp
mov
ss
and
xor
xor
ret
sub
jne
clc
adc
iret
icebp
popa
mov
and
scas
lahf
or
pop
fstl
cmpsl
loopne
andb
gs
popf
inc
jb
xor
inc
or
adc
repz
and
xor
les
inc
pop
in
adc
movsl
cmp
les
ljmp
test
sbb
mov
js
mov
iret
adc
pusha
clc
sbb
int3
rsqrtps
lods
jge
test
hlt
cli
mov
push
pop
and
jp
cmp
cwtl
sub
scas
inc
jbe
or
push
mov
movsb
jns
lock
filds
xchg
cmp
pusha
add
out
pop
div
enter
shlb
xchg
mov
lahf
sbb
pop
adc
pop
negl
or
mov
lahf
into
or
cld
ret
sbb
lea
lahf
pop
jnp
ret
and
xor
or
call
mov
lret
iret
lea
loope
lock
bound
jae,pn
movsl
inc
rcr
dec
cmp
xchg
cmpsl
or
pop
mov
jecxz
pop
mov
insl
pop
mov
ja
ficoml
push
ficomps
xchg
scas
or
sbb
cld
and
or
sbb
or
out
je
sqrtps
in
push
inc
insl
gs
imul
inc
pushf
adc
jmp
dec
adc
rorb
repnz
ss
cmove
xchg
cld
lea
arpl
insl
and
mov
fmul
mov
xchg
mov
lods
stc
jl
daa
shll
sub
push
dec
push
add
adc
dec
rclb
adc
adc
fwait
repz
dec
push
sub
mov
push
cmp
in
add
fbld
push
lds
jno
scas
cmpsb
imul
movsb
orb
fstl
adc
outsl
mov
push
sbb
lret
cmp
mov
hlt
and
js
in
out
test
lods
push
aaa
ja
cmp
mov
scas
lods
or
enter
mov
jp
aaa
sub
and
inc
ret
mov
and
lock
out
mov
roll
ds
xchg
repz
sbb
fldenv
and
movsb
cwtl
jo
sub
add
push
stos
xchg
out
mov
push
in
mov
mov
js
xchg
push
xchg
aaa
adc
cmpsb
outsl
mov
insb
testb
rol
outsb
cmc
jge
lods
clc
xlat
dec
sub
int3
xor
fwait
xchg
jbe
lea
cmp
outsb
leave
pop
add
test
mov
sbb
dec
and
fnstcw
fxch
add
out
mov
fwait
mov
nop
push
lock
add
fiaddl
sbb
insl
ret
jbe
dec
adc
xchg
jmp
dec
les
pop
notl
movsl
es
fbld
and
mov
dec
clc
cmc
int
sbb
push
js
addr16
and
or
push
pop
cmp
shlb
shll
mov
addr16
aad
and
mov
ds
lea
pushf
push
inc
fiaddl
mov
jg
add
orb
xor
pop
arpl
sbbl
cmp
das
cwtl
filds
shll
mov
cmp
sub
popf
sub
inc
icebp
repnz
add
inc
outsl
lock
and
pop
mov
sbb
push
js
mov
dec
push
mov
out
fstpl
repnz
fwait
repnz
sbb
scas
push
jae
fimull
lock
testb
ret
inc
imul
adc
jbe
pop
cmpsl
adc
push
iret
orb
sub
xchg
adc
inc
loop
mov
xorl
push
inc
cmp
xorl
xlat
in
mov
dec
icebp
fstl
aad
xchg
lcall
xor
jmp
jne
mov
aam
xor
loop
cli
xlat
pop
ljmp
jnp
lcall
jp
psrlw
es
or
push
fs
cmpsb
loope
inc
scas
adc
into
push
pop
lock
and
inc
mov
lds
xor
sub
xchg
pusha
je
cmp
jmp
jae
or
bound
push
mov
inc
push
fcomps
mov
jns
adc
in
arpl
xchg
cs
sbb
pusha
xchg
inc
mov
inc
cmp
shl
xor
mov
sbb
inc
mov
ret
pop
pop
mov
rcr
jge
or
les
push
fnstsw
sahf
xor
push
inc
idivb
xor
mov
adc
cli
sahf
or
icebp
or
mov
iret
sbb
mov
adc
mov
and
into
or
pop
dec
dec
xchg
sbb
mov
xor
cmp
pop
xchg
data16
push
and
xchg
jle
sbbl
fildll
rcll
mov
faddl
aaa
clc
jp
les
sahf
test
mov
cltd
jbe
cmp
cwtl
pop
mov
mov
xchg
idiv
sbb
fldcw
sub
xchg
xchg
xlat
sbb
or
rcrb
mov
adc
mov
arpl
test
hlt
xchg
add
mov
or
pop
mov
addb
sbb
sub
adc
push
daa
clc
pusha
or
sbbb
rcr
jnp
ja
loope
insl
and
or
lea
test
fldcw
cmp
push
push
cltd
push
or
fistpl
add
aam
inc
sub
jbe
int3
frndint
pusha
int
movsl
mov
inc
mov
addb
sti
pop
ljmp
into
insb
sbb
sbbb
adc
iret
lods
outsb
push
leave
jl
xor
out
dec
ja
push
orb
adc
pop
cmp
xchg
jno
pop
or
icebp
std
cli
mov
daa
aam
rolb
test
inc
lret
add
popa
jp
dec
jo
aaa
push
mov
add
lods
push
pop
pop
mov
imul
jnp
sbb
add
jo
sub
pushf
or
pop
into
insb
mov
mov
pop
mov
jns
sub
in
hlt
and
jbe
hlt
mov
dec
lret
pop
fistl
push
jp
mov
mov
adc
mov
aas
out
pop
lods
daa
clc
mov
sub
jb
jne
in
mov
and
mov
cmpsb
mov
test
sbbb
imul
les
cltd
jno
sub
mov
mov
cmpsl
xchg
shrl
add
popa
xorb
mov
mov
jnp
pop
daa
daa
or
or
in
fnstcw
movb
mov
mov
jbe
dec
ficoms
lds
adc
pop
repz
pop
enter
lods
xor
sahf
xchg
pop
out
ret
pop
mov
clc
xchg
dec
mov
sbb
mov
lods
pushf
in
enter
test
mov
bound
mov
mov
xor
clc
mov
call
in
shrl
shlb
mov
test
xchg
jmp
xchg
repnz
xor
repz
imul
je
push
scas
notl
jo
sub
in
pop
dec
xchg
incb
sbb
mov
int
out
cmp
scas
xchg
xchg
sbb
pop
sub
xchg
sarb
repnz
data16
pop
pop
xor
xchg
sbb
je
sub
adc
arpl
lea
outsb
dec
rcl
pop
inc
adc
fucom
ljmp
ja
lock
xor
lods
cmp
and
cmc
sbb
stc
sbb
inc
int
push
cmp
scas
pushf
sub
jae
rcll
popa
mov
fidivl
leave
mov
adc
out
dec
mov
adc
fstl
cmp
xor
sbb
jns
aaa
sub
stos
cwtl
sbb
and
push
vmaxss
les
mov
pop
adc
icebp
and
jg
xor
add
repz
pop
push
stos
pop
adc
dec
addl
and
sub
fists
push
inc
cmpsb
rorl
dec
ss
cmpsl
pop
sub
outsb
nop
jp
sbb
mov
repz
movsb
addl
pushf
shrl
dec
adc
outsl
popf
pusha
sbb
jmp
lods
sbb
cmp
cld
and
gs
cmp
hlt
sub
loopne
out
xchg
cmpsl
imul
nop
iret
xor
mov
push
ret
cld
ffreep
int3
outsb
cmp
mov
rolb
xchg
pop
xchg
mov
inc
mov
sbb
lods
xor
lock
mov
mov
out
repnz
pop
notb
mov
sub
dec
in
in
lahf
cmp
cs
cwtl
bound
xchg
add
fidivrs
jl
xchg
or
push
mov
push
arpl
mov
cs
and
outsb
add
mov
push
fidivrs
mov
push
cs
xchg
mov
sub
outsb
inc
clc
add
jae
push
cmp
fs
jno
addr16
pushf
jo
repnz
cmp
adc
pop
idivl
shll
xchg
ja
das
sub
push
mov
inc
les
pop
and
das
inc
popf
pushf
cmp
movsl
scas
shl
sub
pop
cmp
ljmp
dec
or
bound
test
fildl
fdivr
andb
dec
adc
add
lock
test
outsb
mov
pop
push
dec
cmpsb
cs
pop
jbe
stc
mov
popa
adc
les
out
ljmp
stc
cmc
fstps
repnz
lret
mov
xor
cwtl
cmpb
dec
add
popf
cltd
sub
lcall
ljmp
jge
mov
cwtl
mov
cltd
aad
jo
inc
xchg
xor
outsb
push
sub
pop
sub
stc
adc
mov
bound
ljmp
xlat
mov
sub
pusha
adc
lds
outsl
popl
int3
sbb
dec
repz
pop
shrl
sbb
mov
pop
push
ljmp
mov
inc
jno
add
adc
lahf
and
negl
add
sub
mov
nop
xchg
mov
adc
outsb
xor
out
cmp
lods
stc
mov
jg
jp
sti
jns
push
inc
dec
fwait
test
and
dec
gs
stos
sbb
dec
or
mov
lahf
mov
shrl
fcoml
icebp
push
and
ret
mov
adc
and
in
outsb
jl
jae
dec
daa
jecxz
repz
scas
jb
shll
lods
adc
lcall
and
cmpsw
mov
mov
pop
add
adc
iret
loopne
out
call
mov
or
sahf
xor
test
cmp
fxch
push
xchg
or
fdivl
mov
mov
imul
jecxz
das
fwait
sbb
mov
nopl
arpl
xor
jno
mov
sbb
mov
push
jge
decl
cli
out
push
je
adcl
sbb
fisttpl
mov
in
push
add
push
push
or
mov
pusha
sbb
mov
mov
insb
fs
scas
int3
gs
mov
shll
sbb
insl
loopne
and
inc
pop
push
lods
repnz
dec
and
xchg
adc
mov
xchg
xchg
lods
jl
idivl
inc
or
sti
std
scas
mov
mov
jo
jp
ds
movsl
test
push
adc
mov
faddl
cmp
jo
or
xor
mov
or
testl
jb
test
scas
dec
dec
xchg
jle
push
dec
mov
les
sahf
sub
mov
sbb
push
out
xchg
rorl
pop
stc
repnz
iret
mov
cmp
push
test
loopne
lahf
test
push
leave
test
xchg
and
ret
test
sti
add
or
subb
enter
mov
xchg
mov
insb
sub
adc
hlt
into
lock
in
mov
inc
or
jle
test
add
adc
xchg
adc
sub
mov
subb
sbb
test
adc
and
divb
sbb
bound
jbe
pop
push
pop
insb
inc
stc
adc
pop
cmp
xlat
xchg
or
xor
pushl
and
adc
rorl
lods
popa
aad
movsb
xchg
sbb
sbb
sub
adc
jg
in
lods
jb
sub
xor
cmp
lahf
inc
ret
ror
sti
scas
pop
mov
popf
shlb
stos
pop
mov
mov
hlt
aas
insl
bound
jns
lds
dec
sti
lret
stos
dec
ljmp
push
lock
int
push
ficoml
jg
inc
or
mov
and
mov
xchg
pop
sbb
jmp
out
pusha
cmpsl
insb
aam
test
xor
stos
jbe
push
or
es
insb
insb
dec
jb
push
dec
in
sti
sti
sbb
xchg
dec
sbb
cmpb
cmp
pop
pusha
pop
loope
int
andb
jp
aam
fwait
xchg
add
dec
dec
mov
or
and
cmpsb
mov
xchg
jbe
stos
aam
xchg
mov
mov
aaa
jg
int
mov
push
sub
push
cwtl
mov
or
cwtl
data16
inc
daa
addr16
mov
pusha
add
jnp
adc
ficomps
inc
mov
stc
rclb
sti
or
scas
xchg
repz
jmp
inc
sahf
jecxz
fistl
push
in
notb
pop
mov
jo
shrb
into
cltd
adc
xchg
mov
pop
outsb
aam
testl
sub
sub
ljmp
lahf
test
lods
test
adcl
andb
and
pushf
outsl
cmc
cmp
shr
jbe
dec
arpl
iret
idivl
push
out
mov
sub
clc
xchg
sbb
scas
push
sahf
loopne
pop
insl
clc
ficompl
mov
pop
scas
push
xchg
daa
pushf
idivl
sbb
push
dec
jo
inc
js
xor
jg
dec
and
loope
imul
sahf
loope
in
mov
cmc
flds
cmp
adc
pop
movsb
mov
fwait
jle
adc
and
rcr
lcall
cmpsl
sbb
adcl
xor
fwait
sub
sbb
dec
out
idiv
repnz
outsb
fiaddl
inc
xor
ret
mov
or
cmpsb
push
xor
rcll
mov
push
cmpsb
push
mov
and
sarl
fcoml
and
and
xor
inc
cmc
imul
mov
push
js
dec
fcompl
adc
pop
icebp
in
cmp
mov
fidivl
mov
stc
leave
test
cmp
mov
sbb
shrl
outsb
call
int3
popf
pusha
cld
lods
jo
fldt
lret
outsl
jge
std
arpl
jbe
dec
cs
pop
and
pop
int
cwtl
cmp
sub
mov
cmp
xor
test
cmp
out
iret
loop
ficompl
push
gs
sbb
pop
js
push
repz
or
xchg
cmp
ret
mov
cld
jg
cmp
out
sub
mov
push
sbb
or
aas
sbb
jns
dec
sbb
push
fs
push
pop
fstl
pop
shr
push
outsb
pop
dec
mov
add
xchg
jecxz
fabs
pop
cltd
mov
shll
mov
mov
and
adc
cmpsl
pop
add
xor
cmp
lods
and
aam
cltd
xor
sbb
cmp
xor
jmp
pop
ja
int
mov
mov
xor
hlt
mov
mov
add
cmp
je
push
and
loope
or
roll
lahf
push
jne
loop
inc
rcl
mov
sub
inc
in
fsubl
ja
fidivrs
aad
xor
pop
scas
gs
je
addr16
es
xchg
fadd
test
pushf
call
jne
and
add
outsb
insb
sbb
mov
push
lea
inc
clc
and
sbb
jb
mov
mov
into
and
push
xlat
sbb
dec
je
ja
jmp
mov
pop
cmp
arpl
push
push
ljmp
outsl
or
jl
inc
mov
cmp
mov
lock
ja,pt
lcall
aad
jg
xchg
cmp
xor
fsubrs
repnz
or
mov
cmp
mov
loop
mov
add
subl
mov
lea
mov
dec
or
stos
rcrb
sub
and
xor
cmp
fnsave
push
add
xor
loop
push
ljmp
jmp
or
outsl
xchg
dec
iret
ret
or
push
cmp
mov
push
lahf
xor
pop
hlt
and
bnd
inc
pusha
adc
hlt
lret
inc
popa
xchg
cmp
test
mov
stos
adc
cs
inc
cmp
cli
mov
jg
test
jl
mov
mov
xor
xchg
icebp
addb
xor
pusha
repnz
jnp
out
mov
movsl
repnz
fucomi
cmpsb
xchg
jnp
cwtl
insl
jns
in
pushf
mov
mov
hlt
mov
pop
mov
push
dec
in
lret
jae
stc
push
bound
ds
rep
mov
xchg
lds
add
adc
outsb
mov
ret
and
add
out
rorl
sub
cmp
loop
sbb
xchg
mov
xchg
xchg
mov
adc
mov
pop
and
inc
sub
or
ss
jp
mov
push
cmp
enter
getsec
xchg
push
xor
fiaddl
dec
mov
mov
je
jp
sahf
inc
cmpsl
xchg
stc
mov
dec
lret
aam
add
add
xor
shrl
testl
cmp
into
and
inc
andb
cld
ss
into
mov
push
xor
mov
cltd
and
dec
jae
jnp
xchg
jl
mov
sbb
mov
js
rorb
xchg
sub
and
popf
mov
cmpsb
cmp
cwtl
mov
and
adc
hlt
mov
fisubrs
xchg
mov
iret
lcall
rcl
nop
loopne
jno
lods
inc
xchg
jl
pusha
fstps
cmp
add
out
lcall
push
push
fisttps
inc
mov
add
pop
adc
fwait
jmp
clc
loopne
inc
jnp
in
mov
dec
cld
cld
add
int
insb
icebp
mov
movsl
nop
cmp
repz
push
sub
stos
sub
aas
lods
fwait
lret
xchg
in
aam
call
das
iret
sbb
jno
mov
cmp
or
xchg
sub
scas
aas
out
or
xchg
cmp
mov
je
inc
bound
jns
jae
push
icebp
subb
sub
pop
jmp
or
ror
fxch
repz
bound
xchg
divb
push
rorl
loope
adc
popa
add
dec
bound
std
clc
scas
mov
or
dec
popa
mov
mov
sub
fsubrp
mov
and
inc
pop
leave
sub
leave
jecxz
push
mov
pop
into
fisubrs
mov
rcr
mov
jno
data16
push
inc
popa
scas
xlat
notb
jmp
imul
ror
sarl
mov
inc
or
insb
fnstcw
mov
int3
jmp
test
xchg
xor
ljmp
dec
xchg
mov
pop
cmp
lahf
cld
in
test
adc
xchg
mov
icebp
ljmp
dec
repnz
dec
mov
inc
popa
jmp
pop
add
fcoml
out
les
and
data16
sbb
out
test
pop
lods
and
ficoms
lahf
jns
orl
push
ljmp
push
inc
or
out
lods
and
iret
outsb
pop
out
mov
js
repz
pushf
sarl
ljmp
cld
adc
mov
jnp
or
dec
push
inc
cs
pushf
add
in
nop
or
std
insl
ficoml
mov
dec
popa
fnsave
shrl
dec
jl
sti
add
jnp
dec
sar
pop
fildl
adc
add
and
pop
inc
mov
inc
mov
dec
sub
xor
ds
pusha
mov
mov
rolb
leave
add
mov
sti
xor
repnz
test
jge
lcall
xchg
sub
add
mov
cld
lock
les
lds
testb
add
cmp
mov
pop
add
adc
sub
cli
aam
xchg
inc
outsl
mov
movsb
testl
jp
call
add
mov
sub
and
push
mov
decl
or
cli
jmp
lds
and
in
add
jp
lret
jle
push
mov
mov
push
and
in
and
inc
loopne
sbb
mov
out
ljmp
repz
push
jmp
jmp
or
call
lahf
pop
std
out
xchg
test
dec
fisubrs
jg
scas
sub
shlb
addl
mov
call
fcoms
jle
dec
cmpsb
dec
shlb
xchg
sahf
xchg
sbb
dec
repnz
push
or
xchg
fdivrl
aam
aad
cmp
adc
ret
scas
lods
repnz
and
inc
aaa
fwait
adc
mov
ret
loopne
je
xchg
imul
cs
icebp
fadds
nop
fdivrp
push
xchg
repnz
outsl
lock
push
mov
sbb
lcall
cmp
pop
bound
notb
xchg
and
and
sub
fidivrs
pop
lret
cli
pop
xor
pop
pop
sbb
mov
inc
mov
dec
jl
jb
jmp
pusha
nop
inc
dec
pop
movzwl
dec
add
cmp
or
add
xchg
mov
rclb
and
out
inc
lcall
rclb
subb
and
sbb
mov
imul
pop
pop
add
lds
test
xchg
mov
jns
lods
enter
sbb
call
adc
pop
lods
shll
enter
ret
fwait
mov
push
adc
pop
inc
xchg
pop
jb
fwait
mov
push
push
inc
in
lret
js
aam
push
out
cli
test
adcb
inc
loopne
stc
push
repz
xlat
push
xor
push
mov
mov
enter
xchg
enter
pop
lcall
push
inc
xor
add
inc
pop
sub
outsb
sub
and
popf
pop
push
test
push
stc
mov
in
es
xchg
push
cmp
adc
movsw
stos
xchg
pushf
cwtl
or
cs
inc
das
std
jecxz
cmp
lods
scas
pop
outsb
inc
xlat
cltd
fmull
mov
out
mov
mov
or
loope
shll
cmp
xor
mov
push
jp
shlb
lock
mov
mov
inc
test
iret
push
push
mov
inc
add
push
imul
jmp
clc
loope
cwtl
push
sbb
lods
scas
cmp
xor
mov
shl
icebp
scas
cmp
push
and
sub
insl
sbb
push
sub
xchg
cmc
outsb
iret
xchg
imul
xlat
jbe
mov
add
js
imul
pop
xchg
add
cmp
xor
push
add
jne
out
xor
repnz
data16
hlt
imull
fs
icebp
add
insb
jmp
cmp
push
or
repz
or
out
cmp
and
enter
lods
lea
and
or
dec
inc
fiadds
adc
add
xlat
mov
in
ja
out
sbb
mov
and
fs
inc
xchg
mov
hlt
mov
int3
or
pop
fdivl
mov
xlat
int3
std
sbb
mov
popa
bound
xchg
sbb
je
xor
repz
sahf
movb
stos
inc
pop
inc
sbb
pop
or
xchg
dec
decb
cli
addr16
adc
dec
rorb
loope
inc
out
jno
lock
xchg
iret
jne
jp
mov
popf
popa
shlb
dec
ret
aas
inc
sbb
scas
outsb
scas
dec
xchg
roll
imul
jno
pop
out
mov
fildll
pop
nop
jl
xor
scas
cld
push
aad
loope
cs
in
gs
rcrb
js
popf
or
xor
xchg
push
pusha
inc
dec
outsl
test
jg
nop
pop
jae
loopne
xor
dec
imul
xor
push
xchg
xchg
mov
xchg
jl
adc
dec
xorl
testb
lea
inc
daa
adc
mov
xchg
stc
pop
xlat
inc
dec
dec
fidivrl
add
jnp
mov
clc
ljmp
fs
jns
test
sbb
rclb
out
test
insl
push
sub
movsb
push
add
add
jle
repnz
add
dec
mov
jmp
ret
inc
aam
lret
pop
inc
repz
out
negb
xor
enter
push
add
insb
xor
jnp
mov
jle
inc
clc
jae
or
loop
or
test
into
jbe
lret
xchg
xorl
mov
bound
cmpsl
inc
aad
pop
add
in
push
out
int
cmp
fdivrl
jae
fdivrs
icebp
mov
test
xchg
out
fwait
sub
or
in
insl
loopne
stos
dec
mov
mov
aad
mov
pusha
pop
cltd
sbbb
std
test
ret
addl
dec
xchg
inc
and
cmp
mov
cmp
scas
xor
add
jmp
mov
mov
or
or
es
pop
cmpsl
inc
cmp
push
pop
add
scas
jb
jbe
or
test
nop
dec
inc
push
inc
scas
jno
push
push
jl
dec
out
mov
inc
mov
test
das
lods
lea
frstor
cmp
mov
add
bound
jbe
or
movsb
dec
pop
adc
mov
sbb
ret
xchg
rcll
aad
add
pop
cwtl
testb
fsubrp
repnz
push
mov
aad
pop
jae
stos
inc
jnp
and
test
iret
pop
sbb
or
add
je
fs
mov
xchg
xchg
scas
mov
loope
cli
and
lods
stos
fnstcw
jecxz
sub
test
iret
cmp
mov
mov
mov
add
cld
adc
adc
jp
adc
xchg
sbb
pop
jmp
cmp
sbb
inc
inc
sub
push
sub
fcomi
jg
sarb
push
loopne
mov
testl
std
das
dec
out
in
fdivrl
sbb
add
pushl
adc
mov
add
mov
inc
mov
mov
xor
enter
adc
xchg
test
daa
outsb
sahf
ret
movsl
jp
push
mov
add
xchg
aam
mov
popf
jno
outsb
fs
adc
mov
movsb
enter
cmp
pushf
aaa
and
mov
fstpl
aas
sti
nop
add
inc
add
pop
in
add
jg
stos
mov
xor
out
mov
cmc
xchg
xor
mov
shlb
mov
out
xchg
sbb
sti
pop
pop
xor
loopne
mov
sub
push
das
jle
mov
mov
and
mov
cmp
lret
test
cwtl
dec
inc
push
popf
lcall
sbb
fsts
mov
inc
mov
cmc
mov
jne
rcr
dec
mov
push
push
mov
mov
xor
mov
repz
das
inc
leave
es
cmp
dec
and
stc
les
xor
lods
cmp
pop
pop
fcomps
push
dec
test
ja
pop
loop
xchg
addl
stos
out
mov
out
jge
fmul
outsl
mov
fsubs
add
xchg
scas
sbb
adc
sub
dec
sbb
stos
inc
rolb
dec
inc
sub
mov
ss
scas
jle
dec
or
xchg
shll
mov
or
xchg
push
stos
lcall
int
loope
push
xchg
dec
insb
push
lods
adcl
sub
in
inc
sbb
ljmp
dec
push
shlb
cmp
jne
shll
arpl
mov
dec
std
mov
call
push
sub
cs
cmp
in
lods
or
jbe
negl
xchg
and
out
aaa
pop
es
js
push
xchg
push
inc
xlat
or
dec
adc
fistpll
xchg
xchg
mov
pop
ljmp
xchg
ret
test
sub
out
shrb
or
lock
cmpsb
fisttpll
add
cwtl
mov
pop
addr16
stos
fisubs
jl
outsb
xor
cmp
mov
jnp
rol
movsl
ret
lret
mov
pop
out
mov
jbe
push
gs
bound
jne
scas
inc
cs
jne
dec
enter
fldl
dec
push
and
pop
rorl
jno
mov
ljmp
xchg
push
test
mov
mov
push
mov
test
cmp
mov
fbstp
out
in
idivl
cmp
lcall
sbb
pop
jno
std
xor
call
out
and
ret
lock
jns
ds
jp
cmp
mov
loope
call
movsb
jbe
test
mov
lods
mov
jbe
arpl
shrb
jge
in
jns
fidivrl
jns
scas
ljmp
movups
sti
outsl
lods
dec
mov
xor
cwtl
pop
lahf
cmpsb
jne
push
repz
out
sti
or
sub
dec
xchg
das
mov
and
stos
cld
aaa
lods
dec
pop
and
cmp
adc
dec
repz
imul
in
dec
inc
mov
add
enter
push
mov
out
lret
jmp
push
jmp
je
adc
out
push
jg
pop
sarb
lock
pop
mov
cld
imul
jne
rorl
pop
ret
jge
xchg
jns
adc
out
jp
data16
push
lcall
sbbb
sahf
out
mov
imul
mov
lcall
jnp
mov
push
nop
xor
inc
std
sbb
insb
jae
and
jnp
push
ds
mov
or
xor
sahf
xor
cmp
orl
push
adc
test
xlat
push
ja
jae
cmp
loope
loope
jbe
enter
rcrl
mov
dec
sub
push
inc
xorl
or
inc
imul
push
repnz
fisubl
lods
xchg
popf
adc
rcrb
add
and
js,pt
test
push
or
das
icebp
push
or
roll
xchg
sbb
out
mov
pop
mov
jg
sbb
dec
ljmp
es
std
inc
insb
mov
mov
xchg
fisubl
push
es
mov
int3
into
push
xchg
nop
push
xchg
jge
dec
into
push
sbb
in
xor
pop
mov
test
sub
pop
jmp
sub
push
into
sub
adc
pop
push
adc
add
mov
icebp
cmp
std
sti
dec
loope
xor
push
mov
push
cmp
test
test
push
fcomps
jecxz
mov
sub
daa
lcall
lea
inc
push
add
push
add
and
add
sahf
je
bound
push
mov
xor
fisttps
push
mov
cmp
dec
daa
icebp
push
fstpl
add
iret
in
jb
das
fnstenv
jg
bound
int
and
call
addb
mov
addl
sbb
push
xor
test
movsb
xchg
cmc
iret
or
push
push
mov
mov
push
mov
mov
insb
mov
mov
fwait
cmp
mov
add
xchg
mov
in
push
xchg
xchg
xlat
pop
fldl
aaa
or
fs
adc
or
insl
xor
lods
stos
xor
ds
inc
icebp
inc
cld
xor
fnsave
push
add
inc
lods
inc
mov
push
pushaw
add
jnp
rorb
bound
fistpll
loopne
ljmp
xorl
iret
push
loop
subl
add
in
fwait
test
ss
push
loop
daa
push
lods
iret
int3
xchg
jmp
stos
shl
xorb
fadds
mov
jbe
imul
sub
aad
movsl
sub
fmulp
aas
mov
aad
icebp
shrl
jb
sarl
arpl
lods
sub
loopne
and
lock
jne
cmp
mov
lods
adc
daa
sbb
movsl
lds
xor
sub
mov
xor
push
fs
inc
jb
sub
jecxz
dec
jbe
mov
add
aas
cmpsb
aaa
ds
data16
or
dec
int
xchg
xchg
push
or
daa
xor
push
ret
or
outsl
lret
mov
pop
shlb
ja
pop
push
insl
pop
aam
cmpl
repz
xor
sub
sbb
popa
or
leave
cwtl
ficomps
pop
or
jbe
test
cmp
cmpsb
test
xchg
push
insb
and
stc
rcr
cli
outsl
nop
out
inc
jmp
xor
pusha
inc
stc
stos
test
adc
dec
push
mov
aas
add
subb
sti
cli
out
cmpsb
pusha
mov
repnz
and
fiaddl
push
loop
adc
cli
divb
xor
sbb
test
repnz
scas
pop
sub
push
jl
stos
bound
cmc
xor
push
out
out
cltd
scas
hlt
lods
lcall
pop
ret
out
daa
or
rcll
xchg
pop
and
aam
aas
outsl
sub
imul
fdivs
inc
aaa
mov
addb
out
sahf
fdivl
mov
aam
shl
stos
push
add
xor
dec
add
out
mov
xchg
jl
mov
mov
sbb
icebp
sbb
outsb
lods
repnz
and
lds
ror
inc
ja
push
mov
popa
jmp
out
pop
mov
int3
mov
gs
lods
adc
stc
hlt
sarl
add
das
mov
or
and
xlat
inc
sbb
push
lcall
mov
mov
mov
mov
daa
shll
pop
shlb
add
leave
adc
sbb
xchg
push
aaa
mov
inc
xor
adc
adc
pop
pop
fcompl
mov
adc
shl
mov
mov
xchg
imul
les
outsb
shll
dec
ds
stc
adcb
nop
or
sarl
ss
in
repnz
xchg
and
cmp
xlat
lret
popf
push
adc
out
xor
dec
repz
inc
aaa
dec
xor
pop
das
popfw
hlt
mov
arpl
popf
in
fucomip
fldt
test
movsl
test
adc
fldt
xor
jg
movsl
cmp
rorl
in
lea
nop
and
adc
jmp
stc
stc
or
movsl
mov
ds
lock
inc
push
call
fstpt
nop
shlb
sbb
nop
stos
stos
imul
xchg
test
insl
cltd
stos
and
loopne
shrb
vphadddq
xchg
sub
rorb
jmp
or
or
dec
lods
push
mov
addb
icebp
popa
scas
dec
or
das
cmp
push
addl
jecxz
xchg
and
fsubrs
out
xlat
fisubrs
dec
push
movsb
aaa
mull
push
sub
sbb
fwait
xor
pop
mov
ror
xchg
add
sbb
fdiv
pusha
fistpl
enter
fnstcw
in
cli
jo
dec
dec
jmp
add
xor
mov
testb
bound
inc
inc
inc
jl
stos
cmpsl
jae
inc
imul
sub
das
pusha
push
js
cmc
call
push
flds
aaa
xchg
jge
inc
cmp
sub
ljmp
stc
pop
testb
aas
into
jb
dec
loopne
and
aas
cmpsl
adc
and
mov
dec
xor
mov
out
jl
and
loope
aaa
mov
loop
jg
sbb
leave
xchg
xchg
test
jp
int3
push
shlb
aas
sub
mov
mov
stos
fnstcw
pop
sub
adc
loop
into
jmp
outsb
pop
pop
call
or
repnz
xchg
daa
or
loop
dec
jecxz
dec
inc
lret
jne
int
xchg
scas
cmpsb
sbb
inc
or
test
pop
mov
std
xchg
dec
push
xchg
les
daa
popf
pop
xor
fmuls
or
cmp
sahf
xor
mov
mov
sbb
mov
xchg
imul
add
in
lret
lods
adc
pushw
call
rol
xchg
loopne
aas
push
sub
push
sbb
mov
sahf
mov
mov
lock
jecxz
ficomps
shll
sbb
mov
notl
enter
lcall
cs
lods
mov
aam
sbb
push
and
mov
cmpsb
jae
inc
xlat
sbb
fs
dec
fstpl
xor
cmpsl
mov
lret
out
inc
mov
pushf
cmc
hlt
inc
xor
dec
movsb
mov
cmpsb
xlat
and
push
lods
scas
or
or
mov
repnz
sub
jo
inc
cltd
adc
mov
mov
sar
push
outsb
xchg
fnstenv
mov
xor
push
stc
pop
jo
stos
incl
adc
inc
pusha
sub
fs
xchg
lods
dec
mov
cmc
or
dec
sti
push
in
adc
inc
lahf
lahf
pop
and
push
push
pop
arpl
inc
in
push
jmp
outsl
pop
jp
or
pop
add
fidivs
jne
and
dec
loop
pop
daa
icebp
xor
lahf
and
popa
repnz
fcomp
rorb
idivl
and
xchg
cmpsl
ja
leave
loop
sbb
mov
mov
pop
out
fwait
xchg
xchg
lock
into
sbb
scas
es
testb
loop
js
dec
mov
pop
cld
push
in
pop
and
outsl
xchg
mov
inc
stos
nop
inc
out
and
add
lret
cmp
mov
pop
pop
stc
jmp
inc
push
push
pop
pushl
loop
in
inc
nop
lcall
add
xchg
add
imul
xorb
lret
hlt
fisubs
mov
xor
push
or
push
test
add
pop
and
imul
jne
enter
lods
mov
leave
aad
xchg
stc
lret
pop
aas
add
repz
shrl
sarl
cmpsb
lock
push
cmpsl
xchg
mov
sbb
lret
outsb
in
push
pop
enter
jecxz
rcr
or
pop
mov
jl
push
mov
sahf
lds
sbb
push
hlt
out
clc
gs
or
inc
outsl
movsb
pop
mov
dec
leave
cmc
mov
test
or
xor
pop
adc
orb
idivb
push
push
mov
movsl
cwtl
jecxz
cmpsl
sbb
xor
fstpt
and
mov
mov
hlt
mov
leave
sbb
sbb
dec
add
fidivs
sti
pop
std
popa
fildl
scas
push
in
and
xor
and
mov
push
mov
jno
mov
mov
ss
sub
or
xchg
adc
dec
ljmp
popw
enter
sub
lods
mov
cmovge
and
inc
je
sti
ss
cmp
data16
dec
mov
cmp
outsb
in
movsl
inc
mov
xchg
cmp
sbb
std
mov
dec
sub
rcll
les
and
mull
ds
pop
lock
adc
pushl
adc
mov
loope
add
dec
orb
das
mov
adc
and
std
and
cld
gs
pop
arpl
adc
inc
xchg
stc
xchg
sbb
push
imul
dec
dec
in
dec
xchg
mov
mov
jne
sbb
mov
or
lods
inc
dec
popf
fldcw
arpl
and
mov
cmp
jb
fistpl
lock
out
shlb
lods
ljmp
loope
stos
sarb
repnz
gs
dec
mov
sbb
and
mov
test
xor
incl
cmpsb
out
out
mov
lcall
xchg
pop
pop
cmp
pop
mov
adc
leave
ror
mov
xchg
outsl
push
ficoml
aam
mov
adc
in
aad
fmull
push
les
hlt
fsubr
arpl
pusha
insb
cli
pop
dec
push
adc
loope
and
mov
insb
out
xchg
stos
or
adc
cmpsb
lods
add
popa
aaa
sub
xor
pop
out
lods
addr16
mov
xor
mov
mov
loopne
lds
data16
inc
dec
bound
fidivrs
mov
je
loopne
aas
mov
pop
or
add
inc
je
imul
loop
push
xor
test
jge
pop
jmp
fists
mov
cmpl
push
mov
adcl
arpl
aad
cmpsl
in
xchg
xor
mov
ss
or
inc
jae
psrlw
rol
adc
shrl
xchg
inc
add
int
push
pop
jg
mov
les
mov
in
aad
cmp
cmpsb
push
sarl
xchg
mov
out
movb
lods
push
mov
call
mov
adc
xorb
testl
adc
sahf
lahf
and
daa
loop
loopne
xor
inc
pusha
sub
sub
jns
inc
aad
xor
jbe
mov
sbb
or
jg
mov
fstpt
or
pop
out
cmp
out
in
sbb
mov
push
sahf
rol
xchg
sub
sub
pusha
lret
mov
test
add
call
sub
push
ja
lret
out
inc
ror
test
adc
lahf
in
mov
addb
xchg
add
dec
jg
loope
push
dec
mov
xchg
xor
add
test
cmpsb
add
call
adc
push
pop
and
sub
and
xor
xchg
sbb
jecxz
push
addr16
in
or
mov
inc
out
outsb
data16
sbb
data16
dec
out
mov
inc
out
daa
in
xchg
xchg
fcompl
inc
push
int
inc
fidivrs
shll
push
xchg
iret
add
mov
movsb
xchg
outsb
aas
insb
lods
mov
sbb
paddsw
sub
insl
xor
mov
loope
cmc
mov
or
mov
fcomip
mov
data16
mov
insl
sar
nop
cmp
cmpsl
repz
push
inc
mov
xor
test
sub
mov
mov
lahf
bound
jge
sti
cli
lock
dec
fs
mov
jl
mov
or
je
divb
or
lret
arpl
ja
loopne
push
pop
jecxz
xor
xor
dec
and
inc
cmp
add
pop
outsl
lcall
mov
add
nop
testb
stc
clc
inc
fwait
roll
push
insl
test
push
sbb
and
jmp
pop
push
dec
lea
mov
mov
das
pop
sub
inc
aas
rorb
xlat
fadds
push
mov
imul
jne
pop
int3
jmp
xchg
repnz
enter
inc
jl
call
xor
mov
sub
dec
aad
push
repz
scas
outsb
and
rorb
scas
imul
push
add
pop
ja
mov
add
cmp
jbe
add
inc
aaa
xlat
pop
xchg
jmp
xchg
popa
popf
push
out
mov
pop
mov
adc
mov
add
out
call
lret
xor
or
mov
sub
push
pop
inc
add
mov
pop
pop
jns
xor
fwait
inc
scas
or
pop
adcb
inc
in
add
mov
das
add
test
pop
inc
xchg
pop
adc
stos
les
sbb
roll
scas
pusha
out
enter
mov
pop
sbb
sbb
pop
inc
scas
push
aad
xlat
ret
push
cld
addr16
pop
inc
push
and
push
bound
adc
shrb
jg
lret
subb
cmpl
and
arpl
insl
cltd
stos
les
out
out
add
test
leave
lds
das
ljmp
imul
mov
adc
int
adc
out
cmpsl
xor
test
sbb
cli
adc
or
add
pop
rolb
stos
insl
nop
call
sbb
push
jno
pop
xchg
push
push
xchg
or
jbe
mov
gs
inc
aas
mov
ja
adc
lret
inc
test
shll
lock
mov
clc
add
test
dec
push
sti
mov
and
loopne
test
cmc
or
push
inc
ljmp
adc
or
icebp
mov
test
push
pusha
cs
ficoms
push
aas
xchg
dec
add
sub
cmc
push
dec
cmp
outsb
or
insl
or
addr16
mov
ja
pop
push
jle
jl
pop
call
ljmp
add
and
aas
sahf
jmp
inc
cmp
pop
xor
fs
sub
sti
adc
mov
out
shll
pop
sbb
sbb
call
push
sahf
or
in
jle
add
mov
in
sbb
into
loopne
ficomps
dec
sbb
mov
inc
dec
push
dec
pusha
cmp
in
or
add
insb
fildll
adc
adc
pop
sbb
popa
lds
jb
and
sub
mov
add
nop
or
push
loope
test
idivl
pusha
inc
out
test
cld
pop
xor
ss
mov
or
sub
fs
int
pushf
enter
inc
test
dec
push
inc
addl
sub
aam
fs
repnz
xchg
pop
sbb
iret
iret
inc
std
inc
sbb
xlat
lret
lods
or
cmpsl
mov
push
cmc
pop
pop
mov
add
fisubrs
shll
xor
imulb
push
sbbl
mov
filds
into
mov
loop
adc
test
mov
movsb
loopne
jbe
movsb
stc
mov
push
lds
insl
es
or
rcrl
xchg
adc
pop
dec
mov
xor
sbb
imul
sbb
push
inc
mov
dec
push
in
scas
stc
inc
dec
repz
mov
and
mov
mov
sbb
inc
movsb
mov
nop
std
je
mov
scas
mov
jle
pop
test
pop
insl
jge
cmp
lods
jmp
jmp
xor
jne
xor
push
mov
and
lcall
dec
rorl
imul
or
repz
out
sahf
xchg
push
inc
xchg
inc
das
cmpsl
fidivl
jl
cmp
ljmp
xchg
xor
loopne
mov
sbb
or
in
pop
jnp
cli
and
repz
rcl
hlt
sub
push
cmp
cs
jns
stos
not
fnstenv
cmp
sbb
pop
jg
add
rcl
shr
xor
xor
bnd
pop
repz
shlb
faddl
ljmp
popf
int
sub
xchg
dec
xchg
jo
bound
jne,pt
leave
test
push
mov
dec
inc
test
mov
add
scas
or
shll
lret
push
int
clc
xchg
pop
fidivs
xor
lret
hlt
pusha
rcll
movsb
mov
mov
mov
inc
fwait
popa
int
stos
lret
rol
jle
cmp
or
lcall
push
cli
mov
jo
loop
jle
jle
xchg
ret
iret
rcrl
sarl
std
mov
inc
add
jmp
fstpt
cmp
ret
push
jne
jp
push
xchg
inc
addr16
add
ljmp
cmp
pop
mov
or
cmp
out
loop
rorl
cltd
mov
jge
jae
fcomps
lea
and
rol
imul
mov
adc
inc
fisubl
fildll
push
loopne
xchg
notl
cld
push
xchg
jne
outsb
sbb
jmp
and
call
ljmp
xor
xor
jns
inc
pushf
fs
sub
test
add
push
push
xchg
sbb
fstpt
cmp
fadds
sar
and
jecxz
dec
mov
cmpl
cmp
in
and
or
stos
outsl
cmp
push
shrb
fisubs
jle
inc
test
add
adc
loop
sub
or
fcoms
in
pop
ret
movsb
inc
inc
adcl
stos
scas
rorb
mov
lods
in
inc
enter
push
movsl
sub
mov
xor
xchg
les
cltd
nop
int3
fsubs
loope
loope
inc
pop
dec
mov
mov
push
cli
int
int3
cli
aaa
lcall
and
shll
fldt
sahf
mov
inc
sbb
xor
subl
cmp
shlb
mov
cmpb
popa
pop
data16
loopne
jno
cmc
mov
mov
and
sbb
lock
std
pop
push
test
adc
mov
xchg
out
in
bnd
jle
mov
mov
imul
test
aaa
mov
in
cmp
and
in
xor
nop
shrl
stos
mov
sub
into
outsb
fwait
push
aam
sbb
jnp
ret
call
jb
iret
imul
and
clc
cmp
xor
push
sub
mov
dec
ret
jb
mov
inc
sbb
mov
adc
in
adc
cwtl
test
jp
mov
repnz
into
fwait
repz
sti
add
dec
rcll
cli
jle
dec
push
ja
and
das
out
fs
in
jmp
lods
int
mov
insb
pop
jmp
scas
add
adc
sub
mov
out
xchg
adc
cwtl
push
push
mov
pop
gs
mov
test
test
cmp
ficomps
sti
cwtl
arpl
push
sub
xorb
mov
bound
aad
inc
or
lcall
add
push
sbb
roll
mov
xchg
mov
daa
or
fmul
mov
stos
es
lret
jno
rcrl
mov
cmp
out
scas
cs
mov
fldl2e
dec
sub
out
popf
inc
inc
lret
sub
cmp
and
jns
mov
jbe
loop
sub
shr
cmp
inc
inc
jmp
mov
pop
jnp
jl
ljmp
and
xchg
xchg
clc
dec
mov
aad
lret
cmp
ss
fstps
dec
jns
mov
cmpsb
daa
add
push
mov
es
cmp
insb
popf
jo
cmc
xlat
xchg
pusha
pop
cmc
jecxz
mov
mov
cli
lods
test
mov
jne
mov
enter
or
pop
sbb
cmp
add
mov
aaa
xor
ret
mov
jo
test
into
hlt
popf
fcomip
jne
cmp
or
mov
inc
xchg
jno
cltd
orl
sub
icebp
aas
movsl
outsb
mov
xchg
and
sub
pop
pop
push
xchg
push
inc
push
add
mov
push
xor
out
enter
stc
sub
loopne
scas
fdivl
pop
inc
aam
mov
mov
outsb
loope
imul
adc
and
cmp
mov
in
insb
jno
jmp
test
jo
lret
movsb
pop
adcb
xor
inc
stos
jns
icebp
mov
fcoms
mov
jp
nop
movsl
jecxz
aaa
push
push
mov
sbb
sti
popf
mov
int
data16
data16
movsl
nop
ja
popf
les
xor
jo
fcmovu
push
xchg
mov
lods
sbb
clc
fdivrl
ja
out
popa
mov
jecxz
jl
mov
scas
jecxz
add
and
fimuls
aas
adc
push
subl
push
cwtl
stos
lcall
leave
pop
xchg
cmp
push
lock
pusha
xor
imul
add
test
scas
fcomi
andb
arpl
cmpsl
cmp
in
test
and
mov
ficoml
scas
mov
movsb
scas
aam
bound
mov
mov
cwtl
iret
icebp
sbb
or
inc
addl
loop
and
mov
or
test
pop
jo
xor
cwtl
fwait
adc
or
outsl
sub
pop
es
push
cmp
fidivrl
out
dec
lcall
scas
lahf
xchg
fildll
into
adc
pushl
in
sbbl
pushf
add
jge
and
push
mov
lods
fwait
mov
push
out
fidivrl
or
or
stos
shlb
lcall
mov
mov
push
inc
adc
xor
push
rol
xchg
orb
out
push
sbb
add
sub
imulb
xchg
je
xlat
adc
push
add
mov
jb
or
std
push
aas
pop
cmpsl
loopne
mov
pop
aas
xchg
add
mov
dec
jb
cmp
je
imul
push
and
or
sahf
adc
data16
cmp
notb
adc
jae
outsb
xchg
mov
or
iret
jecxz
or
and
adc
sbb
pushf
and
les
stc
dec
jae
jae
out
xchg
leave
jge
lahf
dec
pop
inc
pop
fs
scas
insl
xchg
stos
sbb
rcr
test
jle
cmp
sub
cli
lea
gs
loopne
xchg
int3
cmpsl
rcrb
cmp
mov
lret
daa
fs
lahf
les
or
and
xchg
fcoms
jbe
and
inc
dec
add
xor
lods
cmc
sub
movsl
cmp
mov
push
sbb
mov
xor
mov
jg
xchg
rol
je
adc
bound
arpl
imul
dec
int3
lds
dec
pop
iret
push
cltd
sub
push
std
rclb
dec
adc
repz
or
cs
aas
popa
add
mov
jne
stos
jne
dec
xchg
mov
push
ljmp
xchg
adc
push
adcl
jno
lods
push
popf
ja
fwait
mov
gs
mov
pushf
lcall
out
push
jno
ret
insb
cs
fucomi
cmp
jecxz
pop
scas
cmp
int3
sbb
into
in
ss
cmp
sbb
dec
cmp
jne
dec
into
ds
imul
aad
sbb
into
push
test
popf
and
ret
add
hlt
std
fadd
xor
cmpsb
or
mov
dec
imulb
pop
jecxz
int
push
test
ja
or
lcall
aad
movsl
xchg
in
cmpl
mov
sbb
push
in
xlat
sub
add
icebp
cltd
outsb
out
lret
xchg
test
loop
xor
stc
or
ja
jo
mov
shlb
push
andb
out
in
mov
sbb
lret
lock
pop
es
mov
inc
lods
lret
idiv
aaa
lahf
mov
mov
sbb
push
cmc
int
sbbl
or
jb
loope
mov
scas
adc
adc
inc
out
xchg
mov
fcmovnbe
mov
es
or
les
push
xor
loopne
into
scas
cld
xor
sub
push
mov
aas
push
mov
mov
negl
sbbb
cmpsl
aas
mov
lods
cmc
loope
in
addb
cmpsl
enter
pop
cmp
add
jecxz
aaa
mov
scas
push
in
and
cmp
jle
inc
jne
jo
hlt
fsubrs
jp
add
ljmp
mov
stos
or
push
jne
jne
push
adc
popf
pop
mov
xchg
push
adc
inc
jl
mov
js
cmp
cmp
and
pop
or
lods
imul
mov
add
in
pop
xor
jp
fldcw
bound
xchg
stos
add
jns
shrl
push
in
pop
sub
xlat
jae
sub
fdivl
pop
xchg
jne
mov
sti
pusha
mov
insl
pop
push
mov
in
sahf
jmp
xchg
xor
js
iret
lea
popa
pop
not
xchg
jbe
jae
clc
and
enter
xor
cmp
cld
xchg
jne
push
adc
jae
ret
inc
add
ret
out
pusha
mov
or
iret
aad
pop
sbb
mov
mov
push
out
push
das
out
out
shlb
mov
inc
lods
test
scas
adc
xchg
lea
inc
imul
sbb
inc
fucomp
insb
inc
and
dec
sbbl
and
or
scas
cmpsl
mov
lods
sar
push
mov
bnd
xchg
arpl
jmp
imull
jb
shr
and
sub
mov
fists
jae
and
ja
mov
and
push
gs
pop
inc
push
or
lea
jmp
pop
push
lret
cs
mov
mov
dec
sbb
cmp
push
inc
and
popa
sub
xchg
mov
jge
std
fmull
mov
sub
jne
mov
pop
arpl
dec
lret
pop
push
cmp
decb
aad
ja
pusha
dec
xor
mov
xlat
ficoms
jo
xor
dec
mov
aam
and
push
mov
stos
aaa
into
or
inc
sbb
movsb
in
jg
adc
inc
daa
loopne
pushf
adcb
bound
sbb
and
cli
inc
or
pop
jbe
cli
fsub
les
stos
aaa
mov
cmpl
mov
mov
stos
pop
dec
or
or
fnstenv
jne
dec
sti
mov
shll
mov
popa
aas
mov
mov
leave
sbb
or
adc
push
sbb
pop
sub
mov
int3
cmp
daa
push
pop
adc
idivl
cmp
jnp
int3
and
movsl
jl
scas
imul
sub
rcll
dec
cmp
out
lret
jnp
cli
fsubrs
push
test
scas
loope
cwtl
add
out
or
sub
push
cs
hlt
mov
push
out
lret
xchg
xchg
lea
std
jl
imul
scas
bound
daa
loop
movsl
lods
arpl
rorb
and
push
pop
mov
sar
mov
dec
pop
sbb
mov
lahf
cmpsb
xchg
pop
pushf
xchg
std
mov
inc
add
mov
sbb
dec
sub
ljmp
sub
push
enter
xor
sti
cmpsb
xor
sbb
cmp
or
movsb
int3
ja
mov
cmp
push
nop
sbbl
push
ror
adc
std
flds
pop
jbe
mov
loopne
xchg
mov
das
ret
and
mov
push
push
mov
inc
sbb
out
stc
push
push
mov
xchg
cli
in
xor
fstpl
pop
or
pop
stc
jg
mov
inc
mov
sbb
add
lret
xchg
push
and
mov
loopne
xor
xlat
movsb
je
aam
fcompp
mov
imul
hlt
aas
rorl
lods
xchg
pushf
fcoml
sarb
lods
jmp
sub
arpl
scas
les
sub
stos
inc
pop
sub
mov
pop
sbb
sbb
mov
sub
mov
shrb
lods
xor
clc
iret
lahf
ret
xchg
imulb
out
sbb
xchg
jle
pop
test
pop
sub
dec
sbb
imul
daa
fnstcw
cmp
je
ja
mov
mov
test
in
inc
push
fwait
xor
cmp
cli
notb
mov
repz
jae
cld
pop
mov
hlt
rolb
sbb
je
repz
out
popa
in
mov
add
lahf
jo
xchg
push
repnz
xor
and
mov
cmp
xchg
adc
popa
std
jp
fwait
sub
cmpl
popf
les
mov
popf
negl
xchg
cmp
cmp
data16
orl
push
cs
outsb
pop
sbb
mulb
aam
add
data16
xor
jae
add
dec
add
mov
mov
aaa
sub
mov
sbb
xor
adc
ja
and
gs
outsl
push
es
hlt
or
fmull
xor
mov
dec
in
rorb
ret
movl
stc
rcrl
fs
inc
addr16
inc
and
sti
pusha
add
fdiv
insl
mov
popf
mov
cmp
jg
or
xor
mov
movsl
xor
mov
xchg
sbb
rorb
sub
sub
je
insl
sbb
pop
push
adc
jno
inc
xadd
out
rcl
jmp
mov
push
imul
cmp
lods
xchg
or
int
ds
sub
icebp
jle
leave
xchg
sub
and
rorl
or
clc
lods
adc
mov
adc
movsl
sbb
mov
repnz
add
sub
movsl
ds
push
test
mov
sbb
xchg
es
mov
int
dec
inc
fsubs
jo
sbb
dec
sbb
mov
dec
add
inc
push
je
aam
fstp
mov
xchg
aad
faddl
jl
cld
and
pop
mov
add
and
repnz
lcall
lahf
rcrb
add
push
dec
bound
push
and
idivb
pop
and
in
jns
pushl
popf
mov
lahf
xchg
es
shrb
adc
in
rclb
push
xor
jle
sub
test
std
sbb
mov
add
adc
cmc
out
cmpb
jno
or
lods
or
cmc
jne
push
negl
jbe
jbe
xorb
jg
push
xchg
scas
not
je
pop
mov
lock
sub
imul
inc
inc
pop
cmp
in
cltd
jb
adc
ja
shrl
xchg
cs
jl
inc
jno
mov
out
xchg
pop
xchg
sbb
mov
flds
and
xor
out
ficompl
push
sub
das
stc
inc
jge
jnp
movsb
shlb
or
lock
sbb
shrb
incb
jg
xor
jno
adc
cld
gs
sub
lahf
in
cld
adc
dec
cmp
pop
mov
push
iret
loopne
fstpt
hlt
jns
cmp
or
jns
adc
sbb
clc
lahf
sub
test
cmpsb
fmul
adc
fimull
hlt
test
and
int3
pop
pop
cmc
out
push
div
or
xchg
adc
in
push
ljmp
or
bound
ret
es
jl
push
das
dec
dec
fcoms
in
push
adc
and
lods
jl
xor
test
xchg
xchg
insl
fimull
sbb
xchg
clc
pop
push
mov
ret
jb
cmove
jg,pt
dec
pop
outsl
push
scas
sbb
fistl
jbe
pop
inc
movsl
into
outsl
pop
add
xlat
dec
sbb
dec
repnz
ss
dec
adc
mov
out
in
rclb
je
lods
jle
mov
inc
jp
cwtl
std
add
add
or
outsb
sbb
rcl
hlt
jmp
test
cmp
jo
aad
cmc
aam
sbb
jbe
sub
aaa
xchg
mov
loopne
push
jns
out
sbb
mov
mov
inc
inc
dec
xor
ljmp
test
push
xor
cmc
mov
or
lahf
xchg
fdivs
stc
cmp
int
rcrl
scas
lcall
xor
cwtl
cmp
mov
sub
xchg
or
loop
popf
push
insb
cmp
imul
fsubs
push
out
jns
jo
fwait
jmp
mov
lret
xchg
es
ljmp
insl
jmp
icebp
mov
stos
mov
and
loope
xchg
dec
repz
push
jecxz
cmp
mov
cmp
das
inc
dec
popa
mulb
pop
mov
stos
sbb
scas
mov
aad
loop
mov
daa
dec
rorl
add
arpl
sbb
in
cld
adc
out
mov
add
adc
mov
pop
or
ss
cmpsb
and
shlb
adc
bound
test
pop
lock
mov
push
fbstp
mov
lea
xchg
repnz
ja
add
roll
adc
push
inc
inc
int
lods
popf
jns
mov
fisubs
xchg
xchg
mov
push
add
or
into
dec
pop
pop
ret
mov
js
ljmp
stos
lcall
bound
loope
mov
lret
add
mov
orb
xchg
fimull
sbb
jge
dec
insb
push
pop
sbb
clc
out
add
push
arpl
jae
orl
fs
out
orl
sub
stos
fcompl
cltd
movups
cs
dec
clc
daa
xchg
into
lahf
or
sbb
out
hlt
pop
jmp
add
icebp
roll
xchg
lds
mov
js
call
lods
repz
pop
hlt
xor
jp
js
in
in
lods
sbb
xchg
iret
les
xchg
ret
adc
outsl
daa
jb
mov
sarb
lods
in
mov
mov
sbb
and
lea
fstl
insl
dec
sub
jns
push
push
repz
pop
data16
cmpsl
mov
inc
lahf
jge
add
mov
add
cs
xchg
fidivrs
dec
dec
int
je
dec
lahf
ss
xchg
jp
cmpsl
cmpsl
jne
push
shll
push
mov
stos
ds
push
jl
pop
xchg
mov
add
leave
sub
or
jo
adc
xchg
mulb
out
mov
lcall
xchg
sbb
dec
xor
xlat
push
into
dec
in
xchg
push
inc
in
aaa
shrw
dec
dec
les
mov
popf
lcall
and
in
cld
dec
incb
fdivl
pusha
sub
not
roll
or
sub
cs
mov
je
repnz
pop
pop
imul
mov
mov
push
aas
sub
xorb
adc
dec
cmpsb
xchg
mov
pop
push
gs
iret
jecxz
test
xor
jge
addl
lods
aad
pop
sbb
out
sbb
hlt
daa
fidivl
sti
and
sub
jge
fildl
mov
sbb
testl
or
xchg
cwtl
pop
mov
and
aam
das
ja
xchg
scas
insb
cmc
xchg
sbb
sbb
jp
lret
movaps
push
mov
pause
xchg
dec
pusha
push
xchg
dec
or
lea
add
enter
aad
and
fucomi
rcll
in
dec
fcoml
es
fdivrl
dec
xchg
stos
je
flds
push
xlat
mov
mov
cltd
and
dec
jp
inc
adc
jno
pop
sub
add
outsb
xor
or
call
sbb
and
dec
pop
ss
mov
adc
aam
pop
mov
aas
or
rolb
mov
mov
or
push
sub
pop
push
xor
jne
cmpsb
lods
int
daa
push
lret
mov
mov
test
sti
fsubrl
test
xchg
and
iret
mov
push
adc
cld
mov
lock
mov
cmpb
subb
popf
sbbl
xchg
data16
rclb
jle
inc
inc
fsubrl
mov
add
lret
mov
lret
or
insb
test
shr
xor
inc
xchg
cltd
jl
and
leave
mov
sbb
jae
fwait
enter
test
pop
adc
push
xor
ret
ret
inc
fldl
sbb
test
mov
scas
inc
das
cmc
fdivs
dec
jb
ret
push
in
xchg
mov
and
clc
pop
cmp
or
mov
jae
dec
cld
pop
sti
jp
in
sbb
outsl
dec
mov
cmp
shr
in
inc
ret
pop
mov
sti
sbb
pop
add
cld
mov
in
fisttpll
push
fimull
push
xor
loopne
fdivr
xor
popf
out
sbb
notb
sub
nop
movb
dec
fbstp
xchg
nop
push
out
jae
inc
mov
test
xor
popa
jg
adc
inc
mov
andb
xlat
pop
shlb
push
push
test
rolb
fidivrs
and
dec
sbb
out
xor
out
sub
out
cmp
cld
and
sbb
loop
jae
mov
test
jge
in
push
jo
sbb
push
fmull
dec
xor
fcoms
add
mulb
mov
xchg
fidivl
je
sub
pop
push
adc
or
xor
loop
das
fwait
std
ja
jecxz
popf
jns
rol
out
es
repz
insb
jbe
jmp
test
xorl
jae
rcrb
mov
mov
fiaddl
mov
add
cmpsb
cmp
xchg
cmpsl
bound
mov
push
orb
jo
cmp
mov
jg,pn
cltd
icebp
push
aas
mov
inc
inc
pop
shlb
fldt
int3
loopne
jbe
add
nop
ljmp
outsb
cmp
inc
mov
ficomps
lods
sbb
add
adc
pop
push
dec
inc
pushf
js
jl
test
fmull
popf
sub
dec
addr16
xlat
inc
pushf
andb
popf
jge
mov
aad
jl
push
into
outsl
adc
pushf
or
push
out
pusha
add
pusha
xorb
mov
add
int3
push
mov
imul
push
xor
mov
or
adc
notl
cld
orb
xor
cmp
popa
adc
pop
pop
cmp
adc
leave
cwtl
mov
in
js
fs
xchg
and
cmpsl
adc
push
shll
mov
pop
cmp
dec
loop
mov
xor
pop
and
cmp
rorl
add
add
int
mov
test
mov
dec
sub
adc
call
imul
lods
xor
xor
loope
mov
pusha
aad
sbb
cld
cwtl
mov
pop
sub
mov
push
inc
mov
ja
ret
mov
jle
xchg
sbb
mov
or
sarl
pop
jo
xor
andl
sub
mov
inc
test
mov
mov
cmp
push
test
and
xchg
imul
fdivrs
pop
xchg
cltd
call
bound
add
cmp
xor
ret
xchg
push
push
lods
std
repz
int
sarb
push
pop
adc
aam
and
mov
sbb
fnstenv
and
mov
fidivrl
mov
test
js
scas
xor
js
and
cld
xchg
imul
jb
inc
negl
addr16
arpl
push
jp
and
pop
pop
lods
cmc
jg
je
divl
mov
add
xchg
fcomp
xor
in
or
jg
push
mov
push
push
sbb
mov
and
cmp
cmc
rolb
movl
cmp
sub
into
insl
jo
dec
fs
cmp
inc
outsb
cs
jne
sub
out
and
jecxz
out
jge
addb
fs
mov
scas
adc
insl
or
sbbb
push
imul
jmp
in
cltd
fsubrl
xchg
ljmp
lods
scas
add
outsl
or
jb
cld
mov
mov
fcoms
shrl
pop
jbe
mov
xchg
inc
jg
pop
shll
icebp
ss
lret
lds
stos
dec
mov
push
or
ss
mov
xchg
scas
lea
and
lret
cmp
sbb
rclb
dec
loope
dec
sbb
jecxz
jo
mov
incl
push
outsb
adc
dec
push
andl
mov
or
xor
or
push
xchg
add
xchg
int3
dec
lret
xor
jb
and
push
push
adc
das
out
call
mov
setno
lahf
adc
push
add
push
scas
cmpsb
mov
arpl
mov
pop
pop
inc
push
out
test
push
mov
xchg
test
xor
push
dec
call
mov
inc
cmp
add
add
rcll
mov
fdivrp
sub
test
jbe
or
rcrl
lods
dec
fucom
mov
inc
loopne
sbb
cmc
sti
mov
cmp
rcll
cmp
xchg
shll
jae
in
mov
iret
and
cmpsb
cmp
fimuls
daa
add
fwait
sub
es
jb
jl
jge
sub
ja
or
adc
jb
cmc
pop
inc
inc
into
sahf
adc
gs
addr16
adc
movsb
loopne
cmc
push
push
fmull
xchg
mov
mov
sbb
loop
loop
xchg
outsb
xor
test
or
imul
into
loop
adc
push
cmp
pop
insl
pop
lods
repz
pop
pusha
fdivs
lcall
xchg
pop
pop
ja
repnz
ret
repz
jmp
loopne
stos
insb
add
xchg
jae
insl
sub
lcall
call
add
insb
loopne
cs
or
scas
test
cmp
test
xchg
mov
mov
cmp
pop
mov
inc
inc
sub
shrl
cmp
popa
pop
inc
aas
repz
sbb
mov
ljmp
lret
and
cmp
mov
mov
add
mov
pop
ret
data16
mov
mov
faddl
sahf
addr16
pop
push
aam
or
xchg
test
pushf
fisubl
xchg
push
cmc
xor
mov
jge
mov
test
outsl
or
jns
outsl
pop
loop
in
gs
xlat
test
jno
pop
rol
nop
insl
test
xchg
icebp
fstpt
ret
inc
xor
or
leave
fs
int3
adc
cli
std
sub
std
mov
fldl
mov
pusha
sub
sbb
aam
lds
jecxz
test
insl
sub
or
push
jne
or
ljmp
in
push
inc
jnp
mov
xchg
arpl
mov
arpl
dec
rcll
std
push
mov
add
jl
imul
dec
jns
jmp
and
xchg
jae
stc
hlt
in
inc
cltd
test
add
loope
rcl
out
fdivrs
pcmpgtb
push
pop
stos
xor
jmp
jnp
pusha
push
push
repz
sbb
pop
mov
rcr
mov
mov
icebp
pop
imul
fildll
dec
jnp
outsl
hlt
cmc
or
sub
dec
xchg
sub
add
push
jg
or
bound
inc
faddl
rcrl
sub
and
mov
outsl
adc
out
push
mov
cmp
cmp
pop
sub
xlat
popl
pop
sub
inc
orps
xchg
sub
imul
test
jge
and
sub
rorl
arpl
lret
data16
xchg
jae
arpl
in
arpl
add
push
mov
xchg
jnp
sti
mov
dec
fs
pop
outsb
adc
xor
pop
scas
popf
pop
add
scas
mov
inc
out
or
inc
cmp
leave
mov
sbb
xlat
jnp
cli
fmuls
fdivrp
sarb
aaa
sub
data16
out
cltd
shlb
movsl
push
and
cmp
ss
sub
cmp
insl
into
insb
adcb
mov
lea
push
xchg
mov
ss
pop
test
lret
jp
and
push
fbld
jns
dec
scas
test
inc
mov
loop
popf
add
movsl
sahf
pop
xchg
and
jne
inc
jno,pn
xor
sbb
insb
das
js
sbb
dec
lods
hlt
out
iret
ja
lods
jmp
add
dec
xor
fwait
xor
test
push
or
jecxz
popl
add
stos
xlat
scas
addb
js
pop
adc
or
shl
adc
rep
test
cltd
notl
aad
les
lret
std
stos
outsb
fisttpll
mov
push
push
xor
lret
xor
jle
sahf
pop
hlt
jmp
or
imulb
sub
cmpsl
add
shrl
push
xchg
inc
inc
sbb
int
cli
push
repnz
fidivrl
stos
pop
sub
mov
jns
test
es
es
repz
call
xchg
mov
test
jnp
punpcklwd
pushf
or
xchg
rcr
jae
inc
jns
xchg
jmp
aad
jle
mov
aas
gs
cmp
jb
jg
scas
jns
xchg
add
inc
jbe
dec
push
jns
cmp
mov
mov
es
lods
push
lcall
popf
jnp
clc
sbb
iret
mov
xchg
aaa
mov
jmp
out
daa
dec
cmpsl
xchg
mov
mov
adc
xor
or
ds
std
add
adcl
xchg
fisubrs
stc
dec
push
lock
push
push
je
into
xlat
cmp
ss
push
xor
jge
adcl
xchg
imul
inc
paddb
dec
out
test
pushf
mov
xor
mov
mov
jne
adc
test
imul
jne
cli
jecxz
mov
imull
mov
insl
repnz
lret
out
jnp
outsl
mov
inc
xchg
pushf
loop
and
andl
dec
adc
cmpsl
aad
mov
xchg
sbb
push
adc
pop
push
lock
inc
or
mov
sub
bound
dec
lods
add
xchg
push
push
jne
cmp
sbb
ds
imul
stc
xor
and
pop
dec
jmp
xor
mov
pop
push
daa
dec
cmp
cmp
push
push
dec
and
pop
mov
shlb
push
mov
sub
imul
stc
sub
jno
xorb
push
in
sbb
test
xor
test
cmp
and
pop
fwait
mov
mov
hlt
inc
popf
loope
pop
daa
lods
dec
cmp
adc
add
and
lahf
dec
and
das
mov
or
arpl
sub
cltd
mov
inc
test
mov
outsl
hlt
or
jecxz
mov
push
cltd
lds
out
push
xchg
test
in
repnz
lea
mov
out
sub
sub
dec
pushf
sbb
fidivs
pop
pop
mov
mov
sub
stos
std
mov
xchg
xchg
fnsave
jp
pop
sub
xor
xchg
mov
cmp
cli
in
inc
and
pop
test
dec
adc
pop
gs
adc
lcall
inc
mov
jbe
mov
inc
jne
lock
push
xchg
jecxz
add
loopne
arpl
iret
cmp
pop
stc
mov
inc
test
or
lahf
dec
sarb
gs
mov
cmp
adc
pop
mov
outsl
mov
mov
mov
sbb
ss
push
jp
jns
popf
sub
jmp
lcall
fs
clc
cld
test
mov
aaa
cmp
xchg
dec
loopne
fsubr
xchg
lcall
push
mov
jge
enter
xor
push
clc
jno
lret
push
pop
jl
aaa
and
xchg
icebp
or
xchg
xchg
xchg
bound
sub
pop
pop
ficoml
xor
imulb
jmp
dec
cmpsl
add
cmp
roll
adc
push
add
loopne
inc
xor
xor
add
lahf
jnp
jl
and
out
sub
add
dec
jge
push
cmpsb
xor
leave
push
ss
cmp
lods
jge
mov
rcll
fdivs
cld
ret
pushf
pop
into
mov
dec
mov
or
int3
dec
stos
dec
testb
mov
push
sbb
and
push
jp
inc
pop
repz
push
inc
sub
dec
mov
xlat
repnz
imul
sbb
gs
cwtl
bound
fiadds
insl
sub
xor
nop
sub
fdiv
mov
lock
push
test
sti
xor
ss
jge
push
and
subl
test
xor
testl
push
mov
push
pop
add
jg
mov
mov
xor
mov
ffreep
idiv
cmp
roll
xchg
in
xchg
leave
mov
dec
xor
mov
cwtl
mov
out
pcmpgtw
jne
pop
xor
sarb
dec
or
mov
fldcw
stos
mov
jne
sar
pop
or
lods
ljmp
jb
push
jecxz
das
js
bound
cmp
daa
mov
pop
mov
mov
xor
jb
jg
fcom
push
cs
mov
int
ret
aaa
cmp
mov
and
add
jle
nop
std
mov
xor
out
push
dec
sbb
fdivl
into
daa
cmp
dec
mov
mov
scas
mov
aas
xor
push
add
jno
aam
cld
or
push
movsl
aad
repnz
fildll
jae
mov
push
pop
and
es
out
add
repnz
fimull
mov
out
iret
in
std
inc
mov
mov
stc
jmp
inc
or
mov
jns
or
pop
scas
icebp
or
adc
addr16
mov
inc
test
sbb
aas
cmp
je
dec
jle
es
mov
dec
jp
test
dec
xchg
xor
sbb
mov
in
sbb
add
add
mov
add
or
mov
cs
sub
push
sub
mov
mov
cld
jns
out
out
ret
xchg
sbb
mov
mov
dec
fcmovnb
jno
pop
dec
imul
pop
pop
mov
cmpsb
cmp
xor
adc
push
adc
ja
jo
ljmp
add
mov
ret
mov
aaa
ror
sub
popa
fsubrs
push
push
jns
push
cmp
ret
add
stos
lret
sbb
or
push
jl
popa
dec
xor
sub
je
out
push
sub
popf
push
inc
shll
daa
jmp
xchg
add
popa
cmp
aam
lret
rolb
sbb
inc
cmpsb
mulb
scas
call
sbb
fstcw
into
xchg
loop
out
xchg
sbb
mov
pop
cmpsb
je
pop
in
loope
mov
outsl
fiadds
out
mov
xchg
jns
lret
xlat
mov
dec
xor
incl
in
push
aam
adc
adc
dec
adc
add
jae
dec
lds
icebp
jmp
div
mov
lds
xor
and
outsl
mov
mov
aaa
mov
dec
imull
dec
int
fidivl
push
mov
fcmovne
mov
fcmovne
inc
inc
xor
push
lea
dec
mov
inc
pop
clc
inc
dec
std
rolb
inc
adc
in
push
push
adc
aas
in
imul
loopne
jecxz
loop
cwtl
fisubrl
and
test
imul
pop
faddl
jne
xchg
pop
ds
daa
pop
imul
shrl
lahf
pop
sahf
dec
sbb
dec
aam
lods
insb
inc
mov
jmp
rcl
mov
mov
xchg
bound
adc
lods
js
xor
gs
pcmpgtb
test
adc
mov
loop
subl
push
push
iret
adc
and
in
aad
or
outsb
jmp
inc
repnz
cmp
adc
gs
xchg
cmpsb
push
and
mov
mov
inc
movb
pop
inc
mov
popa
inc
call
jno
mov
loop
push
or
push
ret
scas
mov
clc
xor
out
sahf
popa
xor
in
push
mov
ret
jmp
ljmp
xchg
lret
imul
lahf
fmull
call
leave
push
insl
out
addl
ss
shlb
mov
lret
and
std
repz
shl
call
sub
and
je
lcall
jle
inc
dec
faddl
stos
push
or
cmp
mov
insl
xor
lret
arpl
lea
pop
negb
sbb
fildll
sbb
sbbl
xchg
imul
repnz
jl
pop
in
cmpsb
sbb
test
mov
or
icebp
pop
cmpsl
push
sbb
inc
mov
mov
dec
inc
cmp
mov
jp
not
shl
inc
push
aaa
mov
mov
jne
test
stc
xchg
roll
mov
pop
dec
pop
lret
xchg
test
insl
push
insb
add
jmp
scas
out
adc
pop
stos
mov
outsl
dec
jnp
jmp
lea
imulb
in
cmp
or
sub
lcall
fstl
xchg
test
lret
push
in
sarb
and
jo
aaa
mov
pop
xchg
jo
lods
ja,pn
mov
mov
cld
xor
jmp
or
adc
lods
mov
or
mov
addr16
push
xchg
int3
mov
notl
add
in
call
jbe
sbb
ror
dec
icebp
push
lret
xor
mov
aad
mov
push
scas
cmp
sti
cmp
xchg
pop
test
es
int
lods
push
cli
sahf
pop
jo
sti
icebp
in
dec
les
mov
jne
xchg
or
pop
dec
addr16
int3
inc
dec
xchg
push
sub
xchg
sbb
mov
outsb
scas
mov
ljmp
fmull
test
rclb
int
xchg
mov
dec
cwtl
ret
call
cmc
inc
inc
hlt
imul
xorl
jne
icebp
push
addr16
push
push
and
mov
cmp
cmp
mov
mov
dec
in
rcrb
rcrb
aad
in
into
mov
sbb
and
cltd
cmpsb
inc
dec
nop
mov
sub
or
loopne
sbb
sahf
xchg
jae
mov
inc
clc
xor
in
dec
jecxz
cmp
jg
xlat
sbb
aam
inc
out
or
push
cld
and
mov
pop
js
push
test
mul
cmp
les
mov
jno
call
pop
mov
inc
jecxz
sbb
scas
sub
incl
sahf
sub
and
xchg
inc
subl
lea
mov
loop
mov
aam
push
ficomps
jl
inc
out
les
cs
aas
and
mov
neg
jecxz
jecxz
lods
or
out
dec
mov
fdivrs
xchg
mov
mov
jb
test
and
lret
iret
js
stos
cmp
pop
in
movsb
mov
in
mov
cwtl
push
jl
sub
add
jecxz
enter
dec
cmc
pop
scas
xchg
or
adc
cmc
inc
lret
fimuls
cmp
xchg
xchg
mov
inc
ror
xorl
mov
mov
flds
inc
sbb
sahf
or
rorl
lds
repz
and
mov
push
inc
jge
movsl
lock
cwtl
push
lods
inc
mov
dec
jge
adc
inc
fdivp
js
cwtl
outsl
les
pop
jl
and
xchg
test
sbb
push
imul
xchg
inc
cmp
mov
jecxz
mov
rcr
pusha
rep
nop
shlb
push
fwait
imul
sbb
xchg
fs
cli
push
fsubs
popa
sahf
pop
lds
jae
adc
test
rclb
fisubl
sbb
inc
xlat
xchg
cmp
jnp
mov
add
push
push
adc
mov
xor
xor
xchg
sbb
sbb
mov
shll
into
sbb
mov
xor
ds
repz
inc
pop
push
adc
and
sbb
mov
jbe
mov
inc
rcl
mov
cmp
dec
jae
repnz
or
cmp
push
sbb
adc
jmp
push
mov
add
mov
ret
sbb
mov
cs
in
addl
xchg
push
ljmp
sbb
repz
ja
sarb
mov
adc
xor
push
mov
xlat
addb
and
adc
mov
jo
and
cmp
pop
loope
push
mov
fidivrs
repnz
mov
xorl
pop
jge
push
es
shr
mov
popa
rcll
arpl
test
mov
pop
cmc
fists
and
add
outsl
out
jp
add
iret
movsl
xchg
fidivrl
pop
lret
sub
clc
jl
popf
lea
jns
mov
fwait
jbe
mov
mov
mov
pop
cli
test
mov
and
jno
dec
sub
xchg
nop
fiaddl
xchg
jle
push
jle
sbb
inc
aad
and
jmp
or
cmpsl
cmc
outsl
or
mov
addl
or
mov
out
lods
les
xchg
push
ljmp
sub
lahf
cld
inc
xchg
xor
fs
and
stos
xchg
iret
shll
mul
ds
sbbl
adc
xor
enter
mov
or
mov
push
xchg
outsl
jnp
xor
cs
dec
loop
icebp
ficoml
fs
inc
pop
out
jns
mov
xchg
loopne
repnz
int3
lock
add
test
mov
hlt
ja
ret
mov
hlt
pop
jae
daa
adc
push
pop
jl
fbld
jecxz
xchg
insb
cmp
imul
dec
cmp
jbe
jle
xchg
repz
ljmp
inc
fisubrs
push
movsl
and
ss
fildll
fadd
xchg
repnz
movsl
cwtl
xor
jno
decl
loope
loop
adc
mov
sub
push
jp
xchg
dec
ret
xchg
fiaddl
xor
jge
fistl
and
addr16
cli
aad
std
inc
mov
inc
nop
les
xor
rcrb
mov
jmp
ret
popa
lcall
roll
mov
xchg
jno
push
jb
xor
mov
jb
js
aad
stc
movsb
stos
pop
dec
les
cmp
pop
mov
in
shl
movsl
push
sbb
sti
mov
testb
sbb
cmp
mov
pop
shr
loopne
lods
pop
pop
pop
and
push
mov
cmp
das
stos
mov
or
lahf
movsl
not
jne
pop
iret
pop
xor
jbe
outsb
data16
aam
std
sbb
movsl
push
stos
adc
xor
gs
gs
dec
enter
dec
imul
jns
jl
stos
lea
rcr
aad
pusha
je
test
mov
rcrl
leave
es
cmp
push
push
scas
imul
sub
jmp
mov
nop
lods
add
cs
xor
setb
adc
or
mov
sub
rolb
and
js
sbb
jo
add
loope
cmc
mov
leave
roll
mov
fnop
sbb
es
push
pop
adc
shll
mov
xor
mov
add
js
xchg
adc
pop
in
xchg
cwtl
aad
sbb
cmp
call
aas
xchg
stos
xchg
sub
jne
into
mov
sub
ret
xor
adc
in
adc
bnd
sbb
mov
xor
shlb
add
les
sub
add
sub
mov
inc
and
rcrb
lods
movsb
out
hlt
movsb
jp
jmp
and
pop
aas
sahf
dec
pusha
inc
xor
std
jle
cltd
lret
push
andl
and
mov
cmpsb
mov
adc
xor
test
jb
into
xor
das
aad
cwtl
mov
leavew
sub
adc
fists
push
imul
xchg
gs
push
sub
jl
call
fprem
xchg
inc
sbb
scas
mov
push
nop
out
and
push
inc
fs
scas
mov
insl
jno
ljmp
ja
dec
decl
pop
int3
jmp
fisttps
xlat
mov
ja
lahf
xchg
sub
lret
jge
xor
mov
arpl
mov
jg
imul
inc
lret
in
popf
push
scas
arpl
fstpt
das
insb
outsl
pop
xor
lea
mov
rorl
int3
popa
jbe,pt
adc
clc
bound
data16
jnp
int
cmp
iret
pop
stos
cmp
ja
mov
cltd
je
mov
and
je
fcmovbe
mov
cmp
pop
mov
stc
repnz
add
inc
les
scas
mov
mov
adc
bound
cmc
lret
into
push
or
mov
inc
call
jo
in
ja
fstps
lods
mov
adc
mov
push
pop
and
mov
out
xchg
push
iret
rcr
jb
add
dec
shlb
and
push
rcrb
xchg
xor
jns
aad
sbb
out
ja
ret
gs
mov
ss
pop
or
ret
dec
fcmovnb
add
dec
mov
xchg
out
sbb
sbb
and
or
or
repz
gs
les
pushl
adc
sub
mov
or
js
push
mov
movsl
dec
xchg
inc
xchg
test
nop
loopne
add
test
lock
or
cld
imul
std
clc
mov
jbe
dec
inc
mov
fs
in
fs
ds
scas
or
mov
leave
push
fmuls
or
pushf
xchg
add
test
lcall
sub
dec
mov
or
pop
ret
cli
pushf
push
icebp
push
and
inc
lahf
loop
add
jne
les
dec
pop
aaa
fdivrl
test
test
jbe
ss
imul
or
push
dec
mov
fdivrs
mov
cmp
in
xchg
sahf
cmpsb
jnp
adc
les
repnz
xor
repz
push
or
xor
mov
repz
xchg
sub
xchg
leave
aas
in
cs
pop
into
pop
or
je
ds
xchg
add
popf
xor
mov
fnstenv
cmpb
cmp
and
sub
dec
inc
idiv
test
jmp
fnstsw
outsl
and
std
pop
push
mov
dec
aad
loop
stos
lret
imul
jo
cmp
or
or
aam
stc
inc
mov
rclb
xor
jae
xchg
cld
sub
xchg
clc
fisubs
push
ds
into
jae
popf
mov
and
popa
pop
dec
clc
test
push
test
mov
jp
and
xor
shrl
icebp
sbb
aad
imul
push
outsb
psubb
mov
mov
adc
fisttps
cmpsl
mov
aad
add
push
rorl
ja
loope
cltd
jae
js
pop
pop
int3
test
push
pop
test
sbb
and
cmpsl
cmp
mov
adc
dec
jae
stos
lea
and
pusha
movsl
stos
xchg
sbb
pusha
jno
mov
mov
jns
pop
stc
cmc
popa
push
dec
aad
je
imul
pop
jae
test
mov
dec
sub
jb
ljmp
xchg
xor
or
inc
mov
nop
xor
mov
andb
push
loope
push
mulb
cld
push
inc
and
sbb
push
lods
je
sbb
inc
call
addr16
adc
mov
pop
xchg
loope
das
loop
inc
mov
push
or
mov
sbb
scas
dec
popa
dec
mov
push
in
aad
aad
std
out
or
imull
orb
outsl
mov
ja
dec
pop
push
repz
dec
push
sub
push
and
lret
mov
inc
cltd
shll
rcl
mov
lcall
icebp
into
movsl
or
xchg
movsb
sti
js
shrb
lcall
mov
bound
xor
mov
jle
or
cmp
lret
mov
cli
pop
xlat
mov
dec
xchg
into
ds
inc
lahf
inc
retw
in
add
js
dec
inc
xchg
mov
iret
inc
dec
xchg
int
jne
inc
pop
rcll
jp
mov
push
jp
push
repnz
repz
add
or
jle
inc
lods
add
adc
inc
test
arpl
scas
scas
popf
fidivs
in
fistl
jg
or
mov
dec
jae
mov
aam
add
insb
aam
mov
ret
push
mov
mov
mov
pushl
stc
arpl
mulb
sbb
push
mov
adc
mov
cld
loopne
insl
fisubl
divl
sbbl
mov
adc
dec
push
ss
mov
addl
mov
scas
push
pop
add
or
ja
stos
jp
mov
jb
and
dec
pop
mov
fs
adc
jae
jecxz
or
mov
cmp
lods
shll
and
sub
movsb
mov
addr16
in
lcall
cmpsl
jne
or
sbb
sub
pop
dec
dec
xlat
xchg
add
dec
dec
xor
jge
cmpl
dec
xchg
jno
push
adc
stc
into
and
insb
pop
sahf
cltd
test
negb
loopne
mov
lret
xlat
bnd
hlt
icebp
mov
fisttps
mov
std
xchg
enter
lahf
cmp
cs
pop
pop
jle
pop
mov
mov
test
decl
pushf
lods
lahf
mov
stos
ds
outsl
mov
cwtl
xor
js
xor
sub
jg
xchg
or
or
and
inc
push
xor
add
movsb
push
mov
fs
aam
and
pusha
ja
fmuls
pop
movsl
and
pcmpgtw
mov
mov
mov
into
xor
js
jge
aas
push
or
mov
push
xor
test
orl
pop
js
les
mov
insl
sub
inc
dec
in
xchg
cmp
jns
inc
adc
push
iret
cmc
loop
in
sub
sbb
dec
dec
rorl
mov
cli
cld
in
faddl
jns
inc
sub
daa
dec
hlt
mov
aad
fadds
xor
fiaddl
cmc
and
dec
sbb
andl
push
mov
ret
xchg
ficompl
lock
jns
add
push
sub
aaa
and
repnz
ss
jnp
xor
inc
inc
or
sub
jmp
and
aaa
arpl
test
cmp
inc
subl
mov
jbe
sahf
outsb
adc
addr16
fistpl
insb
xor
xchg
lds
xor
jl
push
or
lock
ljmp
nop
ret
mov
sbb
add
rorl
into
jbe
dec
mov
xchg
jp
push
inc
icebp
pop
packsswb
mov
stos
jb
xchg
sbb
mov
insl
movsb
mov
out
cmp
pop
icebp
daa
push
pop
xlat
cltd
idivl
inc
nop
mov
cmc
addr16
lret
cmp
and
sub
js
clc
mov
dec
dec
not
pop
push
rcrl
xor
cmpsb
dec
cld
adc
xchg
add
sbb
mov
push
notl
mov
push
xchg
arpl
mov
add
mov
jmp
mov
cmp
mov
xor
jge
test
jo
adc
fwait
enter
jmp
jge
pop
adc
lcall
pop
cmp
pop
mov
and
jg
fsin
mov
imul
jmp
hlt
ja
pusha
in
push
sub
or
xor
push
lods
outsb
scas
jge
shrb
sub
inc
push
loopne
push
inc
push
xchg
rolb
or
dec
sbb
lahf
cmp
movsl
cld
lods
mov
sbb
icebp
pop
and
pushf
inc
adc
int
jb
loope
ficomps
test
in
adc
xor
xchg
jle
arpl
push
jae
pop
mov
or
push
fnstsw
scas
xchg
call
jo
mov
pop
jmp
add
xchg
ficoml
jne
mov
fnsave
cmp
mov
movsl
ja
data16
shrb
clc
mov
adc
push
adc
jecxz
bound
rorb
pop
add
repz
inc
or
data16
push
ja
add
push
inc
jp
pop
mov
ficoml
sub
fnstcw
push
fistl
incl
push
cmpsl
loopne
pop
adc
arpl
or
push
aam
subb
sub
sarl
sbb
ds
popa
push
sub
enter
in
repnz
rcl
adc
cmp
cmp
fstpl
fsubl
pop
jo
pop
mov
cmp
inc
cmc
jp
sahf
sub
push
loopne
xchg
enter
xchg
mov
or
out
aad
popf
jecxz
sub
js
lock
pop
in
push
xchg
mov
fcomp
cmpsb
mov
or
dec
and
sbb
and
adc
outsl
mov
es
pusha
push
in
gs
jle
test
dec
or
sbb
sbb
hlt
dec
push
mov
loop
jo
imul
aaa
fs
mov
aad
jo
out
int3
ror
aas
xlat
fistpl
mov
cmp
adc
movsb
es
in
and
mov
sahf
movsl
and
push
dec
xlat
pop
push
dec
xchg
sub
repnz
jne
in
push
pop
in
cmc
sub
test
pusha
jno
pop
cmpsb
mov
fwait
movsb
adc
insl
js
adc
cmp
iret
sbb
test
cltd
cmc
jns
push
out
xor
mov
mov
pop
jge
sar
mov
dec
into
mov
leave
cli
and
ficomps
xor
mov
push
mov
ja
push
aas
dec
lret
sti
add
push
je
sbb
jle
js
popl
js
sbb
hlt
xor
adc
sbb
push
pop
jnp
pop
aam
jecxz
inc
sub
pop
stc
inc
mov
adc
dec
jne
add
cli
out
call
cmp
sbbl
loope
xlat
lret
gs
adc
leave
inc
lods
mov
inc
cmpsl
sub
cld
mov
xchg
adc
out
mov
sub
mov
std
jb
adc
lret
iret
sub
push
mov
adc
push
pushf
fsts
test
out
int3
and
lret
pop
mov
in
sarb
mov
pop
and
stc
inc
xchg
xchg
mov
into
mov
add
fs
cwtl
dec
jle
test
mov
fistpll
sub
pop
lds
lds
mov
outsl
jo
out
enter
jns
jle
leave
and
xchg
rorl
or
in
dec
xor
loop
dec
aad
xchg
int
imul
jns
shrl
pop
jne
bound
ror
lods
jge
ds
mov
scas
inc
jge
lret
sub
daa
sbb
cltd
sbb
push
lds
xchg
mov
dec
mov
dec
outsb
pop
push
daa
pop
daa
push
fimull
out
ret
and
lods
pop
mov
jo
repnz
outsb
inc
xchg
addr16
scas
fcomps
sbb
arpl
pushf
push
inc
dec
loopne
lahf
jmp
xchg
dec
je
add
leave
imul
outsb
lcall
cmpsl
dec
add
mov
ljmp
leave
pop
imul
add
push
sub
pop
popl
push
stos
sub
filds
popf
jle
fldl2e
aam
pop
mov
lahf
mov
je
add
sbb
imul
das
inc
cmp
movsb
and
repz
arpl
xchg
sub
adc
data16
mov
cmp
arpl
xor
aad
dec
ret
xchg
daa
in
test
inc
repnz
mov
movswl
jb
or
sub
ss
enter
test
arpl
das
jb
cmp
dec
dec
sub
jb
mov
bnd
rcll
add
iret
mov
dec
jnp
mov
scas
cmc
jmp
test
cli
push
fisttpll
mov
jmp
pop
lock
xor
loop
mov
mov
and
sbb
ret
test
xchg
popf
sbb
add
andl
xchg
mov
shl
mov
lods
xorl
inc
cwtl
sbb
aaa
inc
mov
jecxz
inc
dec
sub
push
int
pop
push
in
insb
sbb
mov
test
push
jecxz
lods
call
dec
pop
xor
rorl
daa
xorl
lods
jmp
outsl
aaa
xchg
push
testb
jae
mov
mov
aam
mov
jae
fisubrs
adc
push
icebp
xor
jnp
add
out
mov
mov
loope
cwtl
insl
ret
mov
fimuls
adc
cmc
fwait
enter
sahf
lods
je
scas
aad
mov
fstps
mov
xor
rcrb
int
lds
cmp
mov
imul
and
inc
bnd
pop
lods
push
push
iret
call
inc
cli
xchg
sub
ficompl
cmp
popl
or
outsl
faddl
fildl
push
inc
push
repz
jo
cmp
daa
sbb
xor
loopne
fsubs
jne
frstor
and
mov
push
sub
sarb
pop
pop
pop
bound
mov
push
loope
xchg
pop
mov
xlat
lret
jecxz
add
lcall
adc
xchg
data16
adc
mov
xchg
or
outsl
scas
pop
inc
and
sbb
inc
cmp
mov
test
mov
jne
mov
sub
inc
inc
jp
lods
add
stos
lock
inc
idivl
call
add
sbbl
ret
adc
jns
bound
insb
lock
inc
shlb
divb
mov
jo
movsb
in
jp
fcompl
and
rcr
out
outsb
xor
in
push
lcall
mov
sbb
fucom
push
xor
fdivrs
sbbb
lods
dec
cmp
insb
cmp
mov
cwtl
xchg
push
icebp
cmp
fisubrs
and
fsubr
cmp
inc
lret
cmp
sbb
push
dec
mov
mov
cwtl
test
inc
imul
jp
mov
mov
push
pop
fstl
dec
lret
repnz
negb
mov
push
mov
adc
dec
js
stc
jmp
push
sub
ss
push
jno
iret
ss
iret
inc
insb
str
jnp
pusha
xchg
push
lret
insb
je
cmpsl
ret
or
or
lods
jnp
leave
fdivr
je
adc
jae
out
les
jge
xchg
push
pop
stos
jno
and
js
aas
popf
pop
mov
icebp
aad
mov
cmp
iret
xor
scas
hlt
sub
xchg
inc
insl
cmpsb
and
shlb
pop
cmpsl
fisubl
inc
fldl
jne
fs
push
sbb
dec
or
cli
jo
out
sbb
push
repz
shrl
out
sub
jmp
pop
fcomi
lods
shlb
pop
daa
jne
dec
out
cld
dec
cmp
sbb
push
push
shrl
or
mov
or
adc
insl
lret
sbb
mov
lahf
orb
pop
or
cwtl
sub
sub
lock
add
mov
ja
enter
jle
inc
subps
fnstcw
out
xchg
mov
adcb
push
add
jno
pop
hlt
jae
mov
std
xchg
sub
sbb
and
jbe
fsubl
mov
mov
js
push
ljmp
sub
and
and
pop
addb
cmpsb
adc
mov
in
test
adc
and
add
push
bound
sub
push
addr16
movb
or
pop
stos
xor
push
je
mov
fisubrs
hlt
cli
pop
push
lcall
repz
test
push
andl
push
mov
ss
enter
sbb
mov
ficompl
in
lock
lods
fcoml
out
push
inc
cmp
pop
mov
scas
insl
jnp
xchg
imul
cmp
lea
sbb
mov
fdiv
lods
mov
mov
pop
push
add
ljmp
test
scas
call
pop
int3
andl
xorl
jb
arpl
movsb
shrl
mov
dec
adc
mov
xchg
leave
addr16
or
repnz
cs
roll
inc
mov
into
enter
mov
adcl
mov
sbb
mov
cmpsl
adc
mov
inc
inc
add
es
mov
ljmp
shlb
push
xor
cmp
cmp
push
fimuls
pusha
lret
addr16
jg
push
jbe
mov
test
lock
int
sub
sarb
jae
push
insb
imul
sub
orb
sbb
adc
dec
je
sahf
adc
adc
insb
mov
hlt
leave
outsl
push
and
sbb
and
jae
rep
dec
loop
sbb
xchg
outsl
xor
jle
xchg
dec
jecxz
dec
mov
aam
clc
cli
sbb
shrl
push
cmp
add
mov
and
jmp
sbb
jns
xchg
addr16
mov
adc
fbld
lods
ss
loope
jb
fcomi
loope
dec
les
xchg
sti
cmp
cmp
mov
jae
mov
adc
add
test
xchg
fisttpl
pop
pop
inc
mov
pop
jnp
or
sbb
push
sub
lcall
sub
mov
xchg
fcoml
mov
mov
sub
sahf
in
mov
mov
xchg
fdivrs
pop
push
adc
xchg
mov
dec
inc
imul
clc
outsb
jecxz
cmpsb
push
and
pop
dec
xchg
or
and
jmp
scas
nop
inc
fmuls
mov
push
std
jae
mov
cmp
push
or
lock
and
and
push
ljmp
scas
xchg
andl
add
aam
and
jecxz
scas
cmp
add
mov
test
arpl
test
or
pop
aas
fbstp
mov
sti
or
sbb
dec
hlt
xchg
je
or
insb
cmp
push
cli
pop
in
xor
inc
sarl
in
mov
fcomip
adc
jo
pop
push
and
jecxz
sub
daa
jle
or
pop
inc
ja
aad
cmp
shrl
jnp
jns
fiaddl
xchg
dec
ds
and
and
mov
mov
out
mov
inc
push
cmpsb
add
inc
sarb
das
cmp
adc
cmp
xchg
test
negl
pop
xchg
les
and
adc
in
jbe
int3
pop
sbb
insb
dec
mov
mov
cltd
mov
rorl
test
fwait
clc
scas
and
or
cmc
sbb
ret
icebp
xchg
cmp
and
mov
xor
or
in
push
testl
mov
andl
outsl
lret
stos
lods
sub
inc
or
mov
push
fistps
mov
push
adc
sbb
cwtl
lods
bound
fisubs
lds
mov
xor
movsb
lret
fcomps
or
lret
lods
fidivrs
pop
xchg
mov
rcll
xchg
fmull
mov
mov
sbb
lret
mov
scas
lret
and
mov
test
jne
in
addr16
jno
dec
leave
in
cmp
lcall
push
jmp
outsb
pushf
mov
add
jl
sub
arpl
push
xchg
dec
sbb
pop
dec
inc
cmpl
ret
mov
ret
int
popf
mov
pop
repnz
push
cli
mov
loopne
out
je
loopne
das
addb
aad
adc
loop
hlt
pusha
jno
in
rcll
pushf
and
lods
lret
je
ret
lret
nop
or
lcall
enter
lret
push
fadd
sub
iret
jp
mov
int
sbb
les
stc
xor
push
or
dec
and
pusha
jp
loopne
mov
fmull
or
outsb
fnstsw
into
inc
aaa
and
gs
in
jbe
negb
pop
jecxz
je
xchg
jo
jge
icebp
pop
and
jle
mov
mov
scas
push
mov
mov
xchg
cmc
pop
cmp
ja
out
sub
cmpsb
inc
xchg
mov
loopne
mov
pushl
and
mov
cmp
stos
out
dec
ja
loope
xchg
decb
jns
mov
lahf
xchg
mov
push
in
pop
test
push
repz
stos
dec
cmpsl
data16
jge
rcr
arpl
add
pop
scas
mov
popf
mov
add
faddp
out
cld
es
mov
push
insl
add
sbb
adc
mov
imul
into
add
lock
in
add
lods
lds
adc
jle
int
repz
push
out
nop
test
mov
fcompl
mov
xchg
mov
mov
sbb
mov
cld
dec
cmpsl
inc
mov
in
lods
adc
xchg
notb
outsb
inc
les
pop
daa
movsl
xor
mov
stos
stc
push
or
adc
mov
mov
lods
js
adc
sub
xorl
pop
mov
imul
cmp
cmpsb
sbb
inc
test
mov
fisubs
xor
xor
xor
fstpt
xor
pop
popa
shrl
inc
cmpsl
ljmp
pop
in
pop
out
push
mov
dec
inc
cmp
inc
xor
call
out
ss
pop
jns
mov
cmp
xchg
push
add
fistpll
xchg
int
inc
imul
shrl
imul
dec
jb
sbb
mov
bnd
add
popa
pop
cmp
imul
mov
pop
mov
fbld
push
andb
or
dec
cwtl
sbb
pop
fwait
test
mov
inc
imul
fs
sub
stc
int
adc
pop
movsb
int3
stos
push
xchg
insl
mov
and
add
inc
dec
and
ss
xor
xor
inc
outsb
clc
adc
xor
lds
xchg
imul
dec
sbb
pop
cmpsb
pop
addl
pop
fs
mov
mov
sub
leave
pop
int3
daa
enter
fimull
cmp
sbb
les
test
cli
push
ret
bswap
repnz
pop
cmp
lods
in
imul
sub
jmp
dec
mov
push
mov
adc
push
push
iret
sbb
inc
jl
mov
lods
adc
xor
sub
cwtl
int
andl
or
dec
jnp
push
push
jle
cwtl
imul
adc
xor
mov
sub
add
jp
pop
ds
scas
sahf
sahf
mov
stc
out
dec
lcall
ds
fstp
mov
movsb
in
adc
and
fxch
or
cld
pop
outsb
dec
fsubr
inc
or
out
dec
out
jl
cmp
xor
imull
int
pop
sbb
cwtl
ja
int
test
jb
push
xchg
mov
mov
dec
aam
inc
push
sbb
arpl
push
fisubrs
aad
mov
shl
sbbl
mov
jae
mov
mov
dec
idivl
and
mov
mov
push
shlb
add
nop
or
and
push
mov
mov
lahf
fstpt
push
int
fs
add
add
lret
push
fld
mov
js
pop
cmc
xchg
mov
out
fldt
out
bound
mov
std
pushl
cltd
push
fstpt
mov
add
enter
jne
or
xchg
xlat
cmp
push
jecxz
shlb
and
jae
and
lods
lods
sub
movsb
push
fdivl
sahf
dec
mov
fsubrl
mov
xor
adc
xor
adc
addb
pop
add
or
bound
push
cmc
jge
sub
add
cltd
mov
ljmp
mov
gs
lret
mov
fcompl
push
repnz
lret
in
adc
lods
xchg
movsl
js
sbb
xlat
fs
cmc
fistpl
mov
xchg
out
mov
inc
push
aaa
cmp
jne
sub
ret
sbb
mov
test
lahf
ds
shrb
int
push
fxch
popa
outsb
iret
sbb
jo
jmp
call
fcoml
push
add
mov
rolb
mov
scas
pop
add
das
add
pop
add
and
and
inc
mov
jg
push
fwait
out
mov
dec
lret
sbb
out
mov
aad
xor
dec
sbb
cmp
xchg
push
push
cmp
xor
jl
cld
test
and
mov
cli
inc
pop
xor
loop
cmpsl
push
push
pop
fldenv
repnz
jmp
jmp
sub
sahf
aad
mov
addl
xchg
jnp
into
sbbl
aam
mov
ret
scas
je
mov
sbb
mov
out
pop
push
adc
sub
pop
xor
repz
sar
inc
mov
mov
xchg
rorb
pop
xchg
addr16
es
comiss
sbb
add
int
ja,pt
lcall
push
test
mov
outsb
inc
out
dec
or
nop
aas
xchg
inc
movsl
pop
xchg
call
mov
inc
fistps
ds
inc
dec
jmp
std
incb
add
stos
mov
ss
nop
adc
in
jnp
divb
icebp
lahf
xchg
inc
push
outsl
and
xchg
and
roll
push
adc
fwait
adc
repz
mov
jo
insb
stc
fsubrl
rcll
xchg
mov
and
lea
sti
es
clc
mov
cmp
push
jnp
mov
jecxz
shrb
jecxz
pop
mov
and
dec
cmovo
pop
loop
cmc
inc
outsb
add
add
cmc
data16
loope
dec
sub
ss
jne
outsb
imul
nop
rol
in
fnsave
in
or
int3
dec
test
jecxz
push
inc
enter
or
push
in
addr16
mov
mov
sbb
sbbb
orb
inc
mov
leave
int
orl
addr16
mov
out
and
sbb
sbb
mov
inc
out
cltd
cmp
or
pop
jae,pn
into
xor
sahf
sbb
or
mov
mov
cld
mov
ret
dec
push
mov
aaa
cmp
dec
negl
sub
pop
push
scas
jo
std
cmp
cltd
loope
mov
or
iret
sub
mov
pop
and
xchg
shlb
jns
mov
loop
xchg
sub
and
fwait
hlt
pusha
loope
cs
sti
pop
repnz
imul
xchg
stos
into
stos
pop
mov
jmp
ss
loopne
sbb
mov
sbb
inc
mov
es
push
lock
xor
cmp
outsb
dec
push
fcomps
mov
dec
push
mov
push
cmp
stos
call
enter
repz
push
inc
loop
mov
call
xchg
subb
rcll
pop
shl
pop
cmp
xchg
aaa
ljmp
sub
xchg
out
in
movsl
mov
jg
ficompl
xor
sub
enter
out
push
or
insb
sub
xor
cwtl
fmul
push
sub
jle
jb
fwait
cld
dec
inc
outsl
pop
xor
pusha
xchg
fsin
pop
sub
fwait
js
xchg
test
das
test
push
pusha
shlb
aad
test
cltd
shll
mov
out
js
adc
pop
inc
mov
jmp
mov
pop
mov
lods
cmp
pusha
idivb
cmp
xchg
out
loop
xor
mov
les
push
and
movsl
ret
jge
cltd
outsb
push
pop
fnstsw
les
pop
loopne
jge
mov
push
mov
nop
aad
lahf
mov
clc
add
fidivs
or
lods
lahf
adc
add
jnp
shrb
mov
ss
push
and
call
push
stc
into
sub
jbe
jge
dec
add
pop
insb
mov
movsl
mov
xor
popa
rol
nop
scas
xor
int
jae
jge
mov
add
int3
in
icebp
scas
int3
cwtl
pushf
dec
mov
testl
jbe
jae
cmp
or
push
mov
cli
cltd
pushf
mov
rclb
jne
jecxz
cs
leave
outsb
fldl2e
in
cmpsl
mov
or
mov
jmp
jno
rcl
clc
rclb
gs
fistpl
push
clc
jae
xor
or
sub
cmp
pushf
sub
sub
int3
ds
push
xchg
dec
cltd
cltd
movsb
xor
iret
sub
adcb
mov
or
ds
cmp
das
shl
dec
int
push
sahf
mulb
test
dec
dec
add
add
push
dec
out
mov
xor
xor
insb
mov
add
repnz
in
call
in
mov
test
mov
enter
movl
xchg
and
lods
jnp
scas
daa
dec
mov
jecxz
cltd
lds
add
lret
xchg
xor
inc
sbb
cs
test
cltd
sbb
imul
dec
jle
mov
mov
lea
mov
fucomi
ret
inc
push
xorl
mov
dec
cmpsl
xor
jmp
xchg
push
dec
add
ja
cmpsb
lea
and
ret
sbb
jbe
xchg
sub
clc
jae
mov
xor
pop
addl
adc
ljmp
cltd
sub
ljmp
addr16
call
pop
fwait
dec
mov
pop
rcrl
xchg
sbb
push
dec
pop
sbb
add
iret
mov
pop
out
sub
inc
std
pop
es
cli
pop
mov
or
cmpsl
in
mov
add
dec
push
int3
pop
jne
sub
dec
in
inc
cmp
add
adc
jg
daa
sub
in
mov
cli
in
pop
and
pop
aas
inc
jg
loope
xchg
mov
mov
add
xchg
and
pop
xlat
push
xchg
inc
add
dec
testl
aam
mov
shlb
push
xchg
inc
test
xor
scas
add
xchg
mov
insb
inc
addr16
push
sbb
xchg
imulb
nop
push
test
and
xchg
fdivs
cmpl
loop
cwtl
ficomps
test
mov
addl
xchg
ljmp
cltd
stos
mov
int
hlt
inc
or
ret
sbb
mov
and
sbb
scas
jnp
xor
mov
jno
mov
idivl
fimuls
into
xor
pop
xor
js
xlat
mov
int
adc
adc
testb
sub
cmp
mov
mov
xchg
jbe
popf
aam
xchg
data16
inc
inc
cmp
jno
sti
xchg
cmp
mov
fiadds
push
xchg
imul
jle
ljmp
aaa
jae
mov
fisubl
leave
xchg
pop
sahf
shl
xchg
dec
int3
rcrb
lahf
adc
jne
inc
sbb
mov
lods
adc
je
xor
nop
jg
or
inc
je
js
movl
insl
jl
and
psubusb
int
test
pusha
inc
aad
insl
hlt
cs
clc
pop
movsl
insl
mov
push
sub
mov
in
or
js
das
fistpll
xor
xlat
mov
mov
sahf
cmpsb
mov
mov
pusha
dec
mov
inc
dec
test
lret
mov
push
pushf
mov
mov
bound
aaa
pop
inc
fstps
push
aas
test
add
dec
decb
hlt
lcall
and
les
icebp
je
or
hlt
fistpl
push
jns
test
jae
adc
movsl
push
pop
leave
clc
cltd
test
sbb
mov
stos
mov
sbb
sahf
sub
sub
xchg
mov
shll
mov
popf
xchg
cmp
xor
mov
dec
pop
jle
ret
fs
sub
push
mov
or
push
cmp
and
fdivrs
sti
es
pop
sbb
xchg
outsl
jno
mull
loopne
fs
cltd
jmp
jo
outsb
sub
dec
jbe
hlt
mov
test
adc
lcall
fmull
in
leave
sub
xlat
lods
stos
daa
fsub
dec
cmpl
scas
mov
xchg
lcall
push
add
pop
pop
leave
ljmp
mov
sbbb
or
xchg
xor
stc
jno
pushl
xchg
mov
pusha
pop
mov
inc
fwait
setne
cmp
add
cmp
xchg
push
adc
cs
inc
mov
out
adc
imul
outsl
mov
cmp
hlt
movsb
cs
aaa
out
jo
mov
sbb
insb
xchg
aaa
or
or
lock
sbb
and
les
xchg
in
mov
or
fcmovne
ficompl
cld
sub
mov
ss
mov
cmp
add
mov
xor
jmp
dec
loop
shlb
jg
aaa
pusha
pushf
dec
sbb
stos
clc
cmp
or
fmuls
adc
jno
xlat
shll
fwait
out
aas
hlt
es
movb
cs
iret
mov
icebp
sub
push
movsl
nop
bndldx
out
in
cmp
and
imul
push
mov
dec
add
popf
mov
adc
int3
pop
bound
int
lods
cltd
mov
push
fsts
repnz
in
xor
dec
pusha
ret
mov
jp
in
sahf
push
les
lock
xchg
int
sub
cmpsb
mov
ja
cli
cmp
add
jecxz
mov
daa
loope
xorb
mov
mov
test
dec
js
cwtl
pop
mov
leave
shlb
push
scas
push
out
xchg
dec
inc
stc
aas
dec
adc
sbb
lahf
cmp
packssdw
ds
test
shr
push
ret
sub
adc
inc
xchg
gs
or
push
cmc
xchg
out
std
sbb
push
sbb
mov
mov
aam
ja
mov
std
notl
fistpll
ja
shlb
imul
mov
mov
mov
je
xor
inc
aaa
add
xor
js
ss
pop
sub
xor
jmp
aad
and
repnz
sti
adc
mov
sub
mov
pop
lret
xor
test
pop
mov
gs
in
es
fiaddl
push
mov
int
je
sarl
xor
sub
insb
sub
pop
xor
mov
push
adc
push
mov
sbb
js
insb
imul
out
sbb
push
jp
push
dec
add
fcomps
cmc
cmpsb
sbb
push
cmc
iret
into
jmp
or
repz
and
cli
push
mov
mov
mov
icebp
push
lock
xor
xor
imul
popa
gs
sbb
lahf
jo
jb
mov
cmc
cmc
add
mov
ss
and
mov
xchg
and
nop
jnp
mov
std
pop
mov
mulb
ret
arpl
jp
mov
xor
test
add
push
popf
mov
test
xor
imull
fdivrl
movsl
dec
in
jp
or
cmp
jl
scas
fsubrl
dec
fcompl
and
push
mov
push
mov
mov
mov
psubsw
and
push
jbe
inc
sub
mov
aaa
shl
xor
cli
jns
mov
inc
in
dec
movsl
mov
inc
xor
insb
mov
mov
mov
loope
cwtl
aas
pop
jmp
pop
jnp
xor
sbb
xchg
lret
push
dec
or
addr16
hlt
mov
fdivrp
adc
mov
inc
cmp
sub
hlt
pop
or
je
pop
jae
push
sub
dec
inc
movsl
fbld
adc
and
xchg
inc
sbb
mov
inc
ljmp
sbb
hlt
add
pop
xor
loop
lds
xor
aas
sbb
ljmp
pusha
shrb
addl
push
adc
repz
out
ljmp
mov
ret
pop
add
cmp
repnz
fs
sbb
fisttps
add
jnp
js
aad
sub
pop
ss
cmpsb
js
cltd
in
lcall
mul
lret
iret
dec
int3
fistps
inc
popa
pminsw
xchg
jae
stos
test
pop
call
hlt
dec
outsb
fdivs
jb
mov
mov
nop
cmp
es
insl
test
sbbb
push
movsb
dec
ja
das
es
test
dec
lcall
scas
push
jg
sti
mov
mov
mov
or
sarl
movsl
sahf
push
mov
pop
stc
imul
cmp
mov
jae
xor
sub
fisubs
imul
pop
ss
arpl
int3
sub
movsb
push
sbb
push
sbb
sti
cli
inc
aas
push
test
testb
int3
pop
jmp
push
lcall
xor
mov
dec
xor
dec
in
cltd
cmp
or
mov
ret
jl
mov
sti
int
xchg
sub
jl
mov
push
out
jl
or
int3
addr16
jp
cli
bound
iret
mov
inc
and
std
and
out
adc
out
sbb
cmp
jg
adc
mov
xor
rcrl
push
fwait
add
pop
out
xorb
imul
adc
fcmovnb
bound
cmp
xchg
adc
mov
cmpsl
arpl
mov
fidivrl
inc
sub
daa
pop
pop
pop
xchg
cmpsl
mov
mov
or
mov
add
frstor
movsb
mov
sbb
jg
sti
and
cmpsl
push
xchg
mov
outsb
ljmp
pusha
loop
xchg
cmp
dec
jmp
repnz
adc
inc
stos
rorl
js
arpl
push
loopne
dec
xor
daa
jl
inc
lahf
in
sub
mov
call
dec
iret
cs
inc
lock
ljmp
adc
arpl
sbb
mov
lds
aaa
rorl
movsb
push
lahf
mov
push
shrl
mov
ret
pop
iret
shl
mov
jb
testb
cmp
test
loope
inc
subl
xor
imul
jno
mov
cltd
add
mov
loope
in
enter
xor
loopne
jno
xor
icebp
ja
jb
fmull
mov
out
ret
cmp
rolb
dec
jp
jnp
pop
mov
sub
ja
push
insb
pop
lods
or
lret
fidivs
jb
dec
push
push
inc
mov
out
pop
push
mov
xlat
or
scas
sbb
cmpsl
out
jo
js
jecxz
es
ficompl
inc
ja
sub
inc
arpl
mov
xchg
pushf
mov
cmpb
loop
cmp
adc
insl
pop
dec
and
sub
push
dec
jge
fbld
in
dec
cld
xchg
jmp
cmc
in
insb
ret
xchg
outsl
mov
mov
stos
das
push
cmp
shlb
lcall
add
popf
sbb
jo
and
cmp
and
enter
ret
jmp
pop
ss
push
icebp
add
xchg
mov
mov
cmpsl
cwtl
push
dec
xchg
jae
ss
sub
adc
sti
in
add
lret
cs
and
xor
jb
cld
lret
mov
shll
fdiv
inc
out
popf
jbe
rorb
sarl
enter
inc
or
sub
insl
mov
cmpsb
xor
xor
js
int
fisubs
hlt
lods
adc
jle
fmull
or
mov
adc
jae
es
xchg
or
sub
movsl
dec
loop
mov
adc
daa
aaa
orb
pop
sbbb
push
sub
push
and
mov
push
jbe
mov
xchg
cmpps
arpl
lret
cmpl
xchg
stos
jl
adc
data16
stos
popa
jb
xchg
inc
push
inc
xlat
mov
jae
insl
in
sarl
sub
pop
xor
fwait
int
pop
aaa
push
fwait
push
enter
ja
dec
xchg
sbb
lahf
xor
dec
pop
sub
addl
jmp
out
fsubs
loopne
daa
idiv
sbb
add
adc
lahf
stc
mov
movsl
out
int
jge
lahf
dec
mov
xor
cmpsl
sbb
das
aas
xor
je
sub
cmp
pop
adc
repz
push
jecxz
xor
into
and
pop
pop
dec
jae
xchg
adc
mov
pop
ffree
mov
pop
or
mov
out
and
orl
mov
lock
test
push
gs
lods
repz
rcrl
mov
cmpb
icebp
add
cmp
inc
jl
adc
scas
push
scas
std
cwtl
mov
ret
clc
add
dec
xor
mov
lds
out
xor
xchg
les
test
pop
cs
scas
dec
jge
into
shl
repnz
and
xor
xor
mov
int3
inc
test
cmp
add
in
in
ffreep
faddl
in
notb
jl
push
sub
jns
iret
negl
mov
sbb
insb
or
xchg
adc
jno
jne
mov
das
push
dec
into
fs
in
adc
xchg
lret
and
push
dec
or
fsubr
enter
bound
rcl
adc
inc
pop
mov
or
aaa
stos
mov
aad
xchg
mov
jbe
jl
or
mov
and
sbb
sub
cld
aaa
push
inc
sub
pop
mov
imul
mov
adc
xchg
pop
push
loopne
movsl
push
cmc
filds
insb
inc
inc
cwtl
and
xchg
sub
mov
push
inc
fidivs
out
pop
sub
xor
rcr
add
xor
lock
mov
cli
scas
inc
mov
mov
sbb
xchg
cmp
push
push
out
out
lods
sub
or
xchg
pop
out
imul
idivb
sub
inc
pushf
inc
popa
sub
push
das
mov
lods
jg
sub
enter
xlat
inc
jge
xchg
mov
jno
icebp
ret
jge
sbb
pushf
cs
mov
imul
xchg
pop
inc
scas
cs
into
lea
sub
adc
movsl
pop
xchg
sbb
movsb
sbb
adc
xor
jnp
cwtl
add
enter
movsb
mov
dec
enter
ljmp
mov
add
popf
pop
dec
test
ss
mov
adc
loopne
mov
and
fadds
jb
cmp
inc
dec
ffreep
mov
stos
aas
sub
pop
inc
pop
push
mov
xor
into
mov
pop
das
mov
sub
sar
iret
lcall
mov
insb
out
ret
inc
pop
xor
idivl
jle
mov
xor
stos
cld
fs
js
xor
sub
call
lock
divb
mov
pop
mov
inc
nop
inc
xchg
fimuls
mov
mul
pop
sbb
sahf
lret
add
inc
xor
dec
xor
popf
inc
push
shrl
arpl
scas
fcomps
dec
add
xchg
test
push
std
xchg
sub
popa
sti
mov
daa
out
push
mov
rorl
push
popa
xor
pop
add
test
stos
adc
jae
mov
xchg
in
je
lret
out
lcall
push
mov
adc
add
mov
mov
imul
inc
adc
aam
xor
dec
jns
mov
test
lea
dec
notb
ret
cmc
ret
clc
sti
ds
mov
or
mov
imul
filds
jmp
bound
test
inc
test
es
andb
or
xchg
movsl
inc
into
push
outsl
cld
jecxz
jo
sbb
cli
aas
jae
imul
fcmovnbe
mov
jne
mov
or
stos
mov
gs
sbb
imul
cmp
or
xor
or
lea
adc
dec
js
dec
inc
std
push
test
adc
je
xor
ljmp
cwtl
jnp
insb
xor
mov
push
int3
xor
push
fstl
jno
xchg
dec
in
jle
lods
adc
adc
jne
not
fwait
add
sbb
test
mov
mov
mov
jns
sbb
mov
stc
mov
push
jbe
sub
or
mul
xchg
pop
rcl
push
add
cmpl
repz
sub
sahf
int
cmc
cmp
dec
fistl
repnz
sbb
inc
hlt
push
insl
sbb
sub
aam
jbe
sub
loope
adc
jno,pt
andb
cld
pop
jb
mov
adc
xchg
dec
in
xchg
adc
jle
jp
inc
scas
mov
stc
leave
add
mov
inc
lcall
testb
cmp
push
loopne
inc
lds
sub
push
mov
cmp
xor
or
icebp
sbb
pop
lock
fs
enter
jp
pop
mov
dec
pusha
sub
pop
out
jg
mov
sub
xchg
ficompl
clc
test
push
and
dec
mov
cltd
insb
pop
dec
or
add
pop
mov
mov
lds
iret
iret
dec
sahf
call
sub
icebp
cmp
nop
fwait
cwtl
cltd
sbb
movsb
push
or
push
or
pop
push
notb
inc
arpl
dec
jo
je
push
dec
or
adc
iret
xchg
and
and
lahf
dec
xchg
xor
push
and
not
mov
icebp
cmpsb
inc
sub
adc
movsb
dec
arpl
jne
out
sahf
cmp
leave
aaa
les
inc
jnp
push
arpl
addl
movsb
mov
fidivrl
outsb
lahf
xlat
mov
popa
push
fistl
jl
aad
or
ja
fidivs
sbb
xor
mov
and
aas
lds
xchg
mov
jbe
mov
inc
aad
dec
xor
add
pop
aad
sahf
dec
daa
pop
ret
lock
repz
lcall
repnz
sbb
push
ja
mov
test
xchg
mov
inc
lahf
pop
xlat
xchg
xchg
ret
loop
movsl
fisubl
cli
pop
and
mov
xlat
ljmp
mov
in
mov
mov
inc
push
shlb
lcall
outsb
push
inc
test
cmp
push
mov
sub
and
daa
fistl
mov
xor
or
test
dec
mov
enter
sub
jne
out
and
in
mov
mov
xor
push
rolb
cmp
mov
xor
in
xor
leave
dec
out
mov
jbe
gs
sub
xor
fwait
xlat
loop
decb
xchg
pushf
test
dec
adc
sahf
mov
mov
pop
lahf
aad
sbb
cmp
lcall
mov
test
imul
clc
fcmovbe
inc
es
or
lcall
aad
inc
rcll
cmp
loop
cmp
inc
cmp
push
outsb
lcall
sti
testl
mov
fidivrs
mov
addr16
pop
or
mov
push
add
ja
push
jle
aaa
dec
mov
scas
sbb
divb
inc
pushf
cs
fisubl
and
enter
cmp
jnp
orb
xchg
inc
pop
sbb
add
cli
fistpll
lds
fs
vbroadcastsd
repnz
jp
cmpsl
fmuls
movsl
iret
inc
add
out
mov
nop
push
fnstsw
adc
lret
cwtl
pop
or
xchg
push
mov
pop
hlt
mov
mov
in
xchg
and
dec
add
loope
test
adc
mov
sub
xor
sbb
mov
faddl
punpcklwd
and
inc
daa
xor
imul
jge
and
jge
xchg
mov
xor
jnp
pop
sbb
loopne
les
jbe
negb
into
mov
inc
imull
xor
pop
push
jne
add
adc
mov
mov
mov
dec
mov
or
jnp
mov
fistpll
pop
inc
hlt
dec
inc
sbb
pop
movsl
mov
mov
scas
sub
lds
push
call
and
and
pop
mov
punpckhqdq
sbb
mov
lock
andl
rclb
cmp
fildl
imul
cld
push
int
push
cmp
jb
stc
int
push
sbb
lds
mov
pop
fidivrl
test
roll
pusha
mov
xchg
sbb
js
hlt
jno
jg
js
ja
sbb
push
addb
sub
int
aam
sub
pop
mov
add
dec
addl
or
movsl
push
jbe,pn
or
stos
lods
mov
mov
repz
sub
scas
stc
mov
jle
sub
stos
call
out
les
jno
sbbb
adc
ss
mov
mov
rorl
cld
add
nop
adc
mov
out
outsl
les
add
lods
mov
and
push
insb
and
cmp
insl
add
or
jecxz
daa
repz
push
outsl
je
cmp
in
pop
dec
inc
bound
jle
hlt
out
pop
repnz
add
mov
adc
sub
mov
enter
add
sbb
sub
movsl
insb
pop
fiaddl
nop
inc
lods
xchg
ljmp
or
cmp
mov
cmp
pop
pop
mov
mov
aad
mov
jno
repnz
adc
inc
fs
jae
orb
lods
rclb
mov
jmp
sub
sahf
gs
jno
or
jl
rcrb
dec
movsb
imul
flds
test
xchg
jns
adc
out
mov
jecxz
aaa
mov
mov
scas
jbe
setle
loope
mov
push
jbe
add
es
xlat
out
add
xor
sub
inc
fs
test
mov
inc
out
loopne
gs
lods
mov
xchg
and
inc
jl
jl
aaa
mov
xchg
aam
fwait
sub
jp
repz
jnp
in
cmp
test
sarl
and
inc
and
xorb
or
pop
mov
rolb
loopne
xor
ss
sub
mov
sub
les
push
out
lret
xchg
or
push
push
jbe
push
xchg
xchg
aad
outsl
loop
mov
mov
iret
inc
es
dec
fcom
aad
test
add
pushf
insl
scas
test
mov
xchg
in
lds
loope
or
mov
scas
arpl
jle
js
ret
add
jb
dec
jge
rclb
leave
sbb
scas
jnp
xchg
sub
or
mov
mov
mov
sarb
pusha
aam
mov
loope
rcr
inc
lods
icebp
mov
push
pop
je
jl
mov
fsubp
jge
and
std
insl
inc
imul
mov
push
imul
orl
jns
subl
cwtl
xor
push
ja
xor
cs
mov
nop
std
xchg
ljmp
mov
std
popa
or
add
and
lds
xor
cs
mov
ds
insb
int3
cltd
xchg
sti
popa
rclb
mov
sub
dec
sub
aas
ss
rolb
push
daa
pop
mov
outsb
into
mov
cltd
add
fsts
int
inc
or
mov
es
and
jbe
test
dec
ss
sub
std
jne
mov
test
lock
jge
das
sub
jae
lret
xchg
pusha
enter
ljmp
lock
out
adc
aaa
mov
insb
and
pop
lods
add
fsubrs
push
dec
xor
jne
repz
adc
mov
xchg
lret
icebp
push
std
or
mov
shrb
loopne
mov
in
dec
dec
sbb
or
clc
mov
insl
pop
or
xlat
mov
sbb
push
jle
movsb
jnp
lret
fwait
sahf
outsb
dec
inc
mov
push
cmp
test
mov
rorb
pop
loop
lods
out
sub
sti
dec
push
repnz
notb
push
out
in
or
xor
cli
pop
into
mov
pop
push
pop
sub
das
ret
mov
int
call
jns
fmul
mov
imul
repnz
cltd
mov
mov
aas
fildl
push
fnstcw
bound
ss
and
push
fildl
dec
xor
stos
iret
adc
cmp
sub
mov
mov
test
cmc
in
mov
out
add
adc
lock
rcr
lock
pushf
inc
out
sbbl
das
xchg
nop
out
inc
mov
out
movsb
pusha
cmc
pop
xchg
fisubs
push
insl
fnsave
scas
jb
mov
inc
aaa
mov
lds
pop
or
add
dec
dec
cli
push
adc
cltd
outsl
addr16
and
outsl
test
push
pop
jl
push
fisttpll
or
loope
out
mov
mov
dec
nop
pop
ljmp
imul
inc
negl
lcall
mov
icebp
push
out
push
subl
loop
mov
or
sub
add
xor
loope
push
ficoms
dec
jmp
lods
ret
in
fwait
adc
inc
insl
xchg
dec
jg
in
rcl
push
pop
movsl
stos
ljmp
xor
sub
fdivrs
inc
iret
fmuls
shrl
or
mov
jle
sbb
outsl
or
jecxz
cwtl
into
pop
in
popa
and
fwait
cmpsl
xchg
sti
push
loopne
cmpsl
sti
fldcw
sub
scas
sub
mov
mov
push
hlt
jb
loopne
lret
xor
and
adc
pop
arpl
push
rcll
mov
popa
fsubrs
jle
xchg
shlb
jge
scas
fidivrl
dec
pop
cmp
mov
mov
imul
add
push
ja
sbb
xor
mov
ljmp
xor
insl
js
adc
sti
or
or
dec
add
jns
cmp
subb
pop
gs
out
jne
ret
push
add
daa
push
cld
sti
mov
repnz
outsl
mov
pop
adc
xor
fcoml
das
mov
dec
inc
in
mov
icebp
mov
loop
xchg
scas
xchg
adc
lds
or
inc
ret
iret
insl
fsub
call
ffree
loope
sbb
push
roll
stc
out
adc
fsubrl
jne
add
inc
in
stos
stos
push
in
ss
leave
dec
jo
bound
inc
or
lcall
push
iret
loop
jb
cli
loop
cli
xchg
jecxz,pt
and
fsqrt
add
clc
lock
cmp
in
mov
js
inc
lret
add
jae
movsl
outsl
cmpsl
aaa
in
add
arpl
addl
mov
leave
dec
sbb
mov
xor
inc
xchg
dec
bndldx
and
stc
rorl
mov
jno
cmpsl
fwait
dec
test
push
sub
into
inc
push
mov
jmp
dec
add
adc
loopne
insl
lret
xchg
or
clc
shrb
cli
and
lret
sahf
icebp
adc
stos
lock
cmc
xchg
stos
js
cwtl
mov
stc
cwtd
add
dec
insl
xor
das
cmpsl
lret
fstpl
mov
push
ret
pop
pusha
push
cmpsl
cmp
cltd
ficomps
imul
mov
and
fdiv
jmp
arpl
and
shlb
movsl
sbb
sub
sub
push
into
xlat
push
mov
enter
fstpt
push
dec
outsb
outsl
add
jne
movsb
lods
movsb
sub
cltd
out
dec
xchg
aaa
xchg
call
xchg
call
data16
sub
test
mov
sub
sahf
sbb
js
xor
xor
fstps
cmpsb
loopne
cmp
cli
lret
cmp
sub
int
push
loop
cmpsl
ret
nop
cmc
ror
loopne
fstpl
cmp
aad
mov
mov
xor
dec
sub
cmp
fnsave
sbb
insl
pop
mov
aas
sbb
inc
adc
xchg
rcrb
jne
add
xchg
sub
and
cwtl
adc
into
lock
mov
adc
dec
in
jp
pop
scas
xchg
pusha
xlat
or
loopne
add
cmp
sarl
cmp
scas
lock
lods
xchg
adc
push
mov
xlat
jg
and
add
sub
in
mov
push
ja
loop
fcomp
sub
or
cmp
rolb
jecxz
enter
out
lock
sbb
pop
xchg
mov
stc
dec
cltd
fldt
fdivr
cs
pop
push
cs
daa
idivl
repnz
pop
incl
and
cmp
popf
xchg
dec
sub
clc
sbb
out
hlt
jp
pop
xchg
jg
mov
sub
dec
cld
stos
cmpsl
sub
bound
or
int3
addr16
stc
push
xlat
and
inc
es
mov
inc
scas
test
add
sub
push
out
mov
or
cld
pop
and
inc
dec
stc
bound
stos
mov
ror
xchg
dec
in
inc
or
mov
das
sbb
xor
inc
jbe
mov
mov
repz
rorl
jae
jb
jno,pn
sub
sbb
xchg
push
xchg
jmp
incl
cmp
and
jb
push
iret
fsqrt
cmp
in
jns
int
jae
out
mov
fucomp
and
in
in
aad
mov
pushf
orl
jge
bound
popf
negb
out
cmp
pop
fdivr
sub
imul
lcall
push
add
lahf
pop
push
jae
xor
pop
jns
aam
lods
mov
mov
jg
adc
dec
cli
xor
jno
or
inc
push
aam
movsl
pop
cld
scas
jge
add
and
inc
dec
xor
aaa
sti
add
loope
pushf
loopne
popa
adc
cmp
mov
mov
jle
jecxz
pop
outsb
and
ret
sti
adc
mov
xor
adc
mov
ja
loop
cmpsb
fisubl
pop
adc
movsl
xor
pop
negl
push
xor
dec
shll
or
jae
push
cmpsb
aas
jecxz
and
jne
cltd
sbb
enter
nop
loopne
mov
stc
mov
movsb
mov
mov
hlt
cmp
mov
lods
adc
stos
jns
bound
rolb
inc
nop
dec
push
or
imul
lea
fisttpll
fisubs
add
rorl
mov
mov
mov
inc
out
push
xor
adc
pop
or
and
andl
ljmp
xor
js
movsb
enter
mov
cmp
outsl
push
mov
hlt
inc
imul
add
xlat
sbb
ja
mov
add
sbb
cmp
push
scas
inc
pop
xchg
jmp
stc
jmp
lea
ljmp
mov
adc
ds
jbe
jbe
loop
or
push
sar
outsl
jmp
insl
mov
out
test
into
icebp
aad
insl
xlat
sbb
jecxz
subl
add
outsl
jecxz
and
cmp
jmp
ficoml
stc
xlat
lods
cli
aaa
pop
inc
mov
lods
ja
rcrl
je
dec
fsubs
cld
pop
icebp
dec
inc
xor
stc
icebp
mov
out
aam
cmp
data16
or
jno
fbld
in
jmp
insb
jmp
cld
aad
cmpsl
inc
adc
pop
add
hlt
adc
or
addr16
or
or
jg
dec
sbb
jno
mov
push
and
push
add
nop
dec
psrld
pop
and
cmp
outsb
or
es
pop
dec
xor
pusha
fs
jmp
sub
push
mov
in
and
sub
push
aaa
lock
pusha
sub
mov
mov
sub
jo
mov
shll
pop
cmp
and
scas
es
arpl
pop
arpl
pop
jno
lret
xor
mov
repnz
into
push
pop
int3
inc
scas
rorb
push
xor
mov
xorb
push
movsb
inc
or
sub
xor
arpl
dec
mov
and
sbb
mov
jne
add
jne
lds
sbb
nop
inc
repz
jmp
int
pop
aas
lds
xor
xor
jl
adc
or
xchg
adc
sbbb
idivb
insb
pop
mov
jp
pusha
ret
xchg
add
xchg
addr16
es
out
adc
cs
ja
out
pop
es
dec
xchg
lds
mov
sub
lods
dec
xchg
xchg
add
into
scas
mov
shlb
sub
enter
pop
inc
mov
pop
imul
sub
pop
cmp
push
sub
xor
dec
pushf
lahf
bound
mov
hlt
cwtl
mov
loopne
dec
loope
scas
cs
cltd
jo
popf
mov
daa
push
outsl
add
jo
cwtl
clc
cs
div
outsl
fstpl
clc
nop
test
lds
ljmp
inc
cmp
cmp
sub
ret
cld
jle
cmp
sub
mov
dec
mov
fcomp
out
jb
inc
cltd
fcomps
sbb
adc
xchg
mov
or
ret
in
dec
add
les
imul
movsl
clc
pop
mov
cmpsb
mov
ret
mov
in
lds
jmp
or
push
data16
dec
fs
inc
inc
stc
xor
stc
cmpsb
out
sbb
pop
add
repnz
push
outsl
aad
testl
push
out
aas
rcrl
jno
int3
imul
outsb
pop
ja
into
inc
push
pop
lock
add
daa
cltd
inc
dec
outsl
ljmp
les
sbb
push
cs
push
popf
test
or
mov
xchg
imul
lds
addl
cmc
cmpsb
push
sub
addr16
mov
jo
sbb
jns
insl
nop
push
fs
xchg
mov
addr16
shlb
clc
sub
xlat
sub
xchg
fcom
aas
and
xor
mov
ja
imul
xor
xor
add
push
mov
xchg
add
pop
and
xlat
xor
lea
jbe
push
adc
data16
ja
inc
test
cmp
mov
lea
test
loopne
inc
sub
push
cmp
and
int
or
les
arpl
mov
sub
xor
xor
jae
iret
xlat
lods
pop
out
aam
jecxz
ss
push
out
mov
nop
popl
shll
push
mov
std
jae
jbe
cwtl
arpl
lds
add
mov
testl
sub
adc
add
xchg
and
cmpsb
xlat
les
cmp
cwtl
adc
insl
addr16
js
pop
inc
insb
jae
push
sub
inc
shr
mov
or
xor
test
sbb
cmp
inc
lods
scas
mov
xlat
add
out
ret
out
imul
xchg
xor
out
pop
movsl
push
push
testl
ja
icebp
lahf
cmp
repz
in
sub
xchg
cltd
add
mov
mov
shrb
adc
xchg
sub
stos
mov
cmpsb
add
lds
jns
inc
insl
jp
push
mov
sbb
sbb
scas
std
fdivrs
adc
fsub
imul
scas
and
insl
cmp
ret
adc
xor
sub
pop
adc
add
insl
mov
cli
nop
js
add
mov
adc
daa
lods
test
pop
mov
lock
pop
pusha
push
pop
add
and
cwtl
adc
or
mov
into
movsl
ret
ss
icebp
adcl
fdiv
and
xchg
mov
cmpsl
stos
lods
cli
dec
mov
out
loopne
es
and
std
sub
pop
lret
inc
xlat
jmp
cmpsl
insl
outsl
ror
jg
ds
and
cs
stos
fsubrl
add
inc
sahf
adc
xchg
mov
xor
adc
call
mov
xor
sbb
xchg
cmp
mov
test
jae
movsb
and
xchg
pop
add
out
push
imul
jge
clc
adc
adc
int3
jns
xchg
sti
push
in
xchg
leave
outsl
sahf
lods
jnp
pop
test
repnz
adcb
jb
inc
push
lcall
mov
pop
jle
rcll
mov
push
cmpsb
mov
hlt
repz
mov
enter
out
loopne
xchg
and
outsl
sbbl
xchg
jae
mov
lds
cli
xchg
aam
and
fs
add
mov
jge
dec
mov
jl
cmp
nop
jbe
nop
addr16
xor
push
cli
in
call
enter
pop
sti
or
enter
cmpsb
int
andb
fs
lret
out
sbb
dec
add
sbb
lea
mov
xor
filds
cmpsb
push
mov
jb
push
cmp
jecxz
push
cwtl
fisttpll
adc
lcall
lods
mov
inc
cmp
insb
sahf
cmp
push
push
push
jns
add
loop
or
mov
sub
sbb
jl
in
fstpt
pop
shlb
adc
addb
mov
cmp
out
ss
bswap
rorl
jmp
or
mov
or
add
jae
sbb
movb
dec
cmp
movsl
or
test
push
sbb
or
cmp
in
outsl
cmpsb
mov
mov
repz
adc
lods
xchg
xchg
jb
bound
icebp
adc
dec
mov
fisubs
push
out
dec
and
data16
std
es
push
fcomi
and
dec
sti
lcall
gs
cmp
push
push
leave
iret
outsl
aam
push
aas
inc
and
sub
pop
mov
lahf
mov
pop
fisubrl
fnsave
or
dec
mov
aad
mov
sub
int3
pop
sahf
test
bound
mov
mov
ss
adc
mov
pop
leave
scas
xchg
jmp
jnp
repnz
aas
push
inc
outsl
mov
add
scas
pop
pop
dec
arpl
in
jp
jmp
xchg
inc
lds
pop
fsubrl
fwait
sarl
adc
jp
sbb
cmp
jns
rol
les
sahf
cmpsb
jb
lea
insb
mov
sahf
mov
sti
cmp
cs
mov
add
rdtsc
das
enter
add
pop
stos
lds
fistl
and
sbb
xchg
mov
mov
jae
adcb
fdivrs
das
test
inc
cmc
test
fstpl
xor
sbbl
test
xchg
je
js
jle
xchg
gs
imul
push
pop
mov
fneni(8087
pop
mov
pop
shl
inc
mov
sbb
push
gs
sbb
fs
cmp
shlb
sbb
flds
xchg
sbb
jecxz
pop
int3
lret
insb
push
imul
stos
outsb
sub
out
cwtl
dec
leave
es
jnp
xchg
ret
fbstp
lods
pop
aaa
insl
setns
repz
dec
and
sarb
and
mov
jmp
sti
and
sbbl
dec
jbe
push
lods
adc
jecxz
ss
sub
js
push
pop
cld
mov
pushf
jo
inc
aad
adc
jnp
leave
insl
inc
mov
push
je
sbb
add
cmp
lcall
and
sbb
mov
pop
mov
jl
sbb
cmpb
imul
jbe
inc
mov
mov
sbb
xchg
rcrl
or
mov
in
mov
add
jbe
jno
xor
or
dec
test
enter
xchg
js
mov
call
fnsave
and
or
dec
sub
sub
dec
out
fadd
add
push
inc
adc
push
outsb
push
jl
jbe
xchg
jns
push
cs
stos
addr16
mov
jne
push
ja
and
dec
dec
xor
les
and
fwait
mov
loop
cmp
arpl
dec
outsl
xchg
add
out
mov
out
leave
sbb
dec
insl
stc
std
mov
out
nop
push
jecxz
sub
mov
out
mov
mov
xor
jae
and
xchg
les
pop
lock
aaa
int
inc
xchg
add
rcr
xor
fcoml
dec
dec
icebp
jg
cmp
add
rclb
and
into
pop
and
xor
mov
std
push
in
imul
add
bound
cltd
xor
xchg
push
xchg
std
cld
push
xor
ljmp
ficompl
push
add
lods
xlat
xchg
loopne
cmp
mov
mov
sub
xchg
outsl
int
pop
sub
daa
out
pop
sub
pop
imul
and
repnz
jp
gs
fmul
loopne
dec
mov
in
jne
out
push
inc
cmp
scas
ja
push
cwtl
and
sbb
addr16
push
cmpsb
add
adc
in
clc
test
sbbb
or
cmpsb
cmp
dec
mov
loopne
sub
mov
or
inc
ss
jge
stos
clc
mov
cmpsl
rcrl
mov
inc
add
pop
inc
fadd
sub
lahf
fdivr
test
xchg
stc
jbe
inc
cmp
call
cmp
sub
xchg
scas
jg
sub
push
sbb
pushf
es
test
mov
outsl
adc
jl
insl
mov
ficoml
stos
js
xorb
cmpsb
aam
xchg
cmp
fsubs
stos
pop
std
shll
mov
mov
aam
jno
mov
popa
dec
movl
es
outsl
call
mov
xchg
inc
pop
roll
ret
pop
rorb
sub
fidivs
adc
enter
cmp
inc
je
mov
jecxz
or
inc
xlat
adc
sbb
bound
test
sub
xor
inc
pop
decb
or
jp
popf
pop
cmp
xchg
pop
push
mov
and
int3
fwait
imul
xor
scas
mov
test
pop
adc
lods
or
and
mov
jo
jns
mov
mov
pop
fidivs
bound
inc
loop
je
add
call
dec
push
sub
cmp
jle
daa
add
fxch
mov
push
sbb
add
xor
mov
sti
je
sbb
mov
leave
loop
inc
inc
or
shr
mov
ficomps
sahf
mov
in
fndisi(8087
repz
jecxz
lock
lcall
mov
sub
jb
cmp
push
xor
sbb
imul
push
jae
es
imul
cmpsb
push
add
pmaxsw
cltd
sbb
and
ja
iret
lock
mov
push
add
stos
cs
aaa
repz
or
fs
mov
mov
ljmp
imul
lret
pop
ja
jb
lea
std
neg
jo
lds
in
js
insl
lods
stos
lea
sti
das
mov
rcrl
cmp
bound
xchg
sbb
inc
aam
dec
ret
int
pop
repnz
xorl
in
adc
data16
int
inc
por
jne
test
xor
sbb
cmpsb
mov
lds
xchg
xor
and
push
cmp
rclb
or
into
ret
sbb
xchg
mov
mov
stos
jo
xchg
orl
cltd
imul
sbb
ljmp
shl
jle
sbb
mov
pop
mov
or
jecxz
mov
lahf
jge
xor
loope
hlt
es
xchg
cwtl
push
lcall
xchg
call
sub
insl
push
movsb
sub
sub
xor
dec
cmp
push
lods
adc
add
leave
lods
mov
mov
aaa
stos
sbb
das
mov
dec
push
lahf
cmpb
imul
repnz
xor
ljmp
mov
loope
cmp
rcrb
je
int3
or
lahf
ficomps
pop
cwtl
and
inc
mov
cmp
loopne
cld
cmp
cmp
cmp
enter
stos
jbe
or
shrb
push
inc
sub
sbb
dec
dec
adc
sub
jmp
sub
cmp
xor
fadds
push
cld
xor
cli
iret
mov
inc
not
and
mov
sbb
sbb
add
mov
outsl
mov
mov
push
mov
adc
sbb
aad
mov
adc
fldz
cmp
aas
in
cltd
outsl
mov
dec
push
std
and
adc
aas
cmpsb
jp
adc
xor
xchg
bound
inc
test
xlat
push
cmpsb
cwtl
out
leave
push
addr16
imul
mov
adc
adc
inc
and
xbegin
shll
pop
jp
adc
push
aad
insb
xchg
dec
lds
push
mov
mov
cmpb
push
dec
jo
test
in
xor
clc
stc
mov
addr16
sbb
cs
subb
aaa
loopne
shr
pop
xlat
add
mov
test
call
sbb
gs
popf
xchg
pop
fdivrp
in
inc
ret
and
mov
adc
cltd
je
jns
push
popf
jl
pop
ret
push
mov
mov
jecxz
aam
roll
jne
xor
stos
pop
mov
mov
pushl
mov
inc
sarl
into
xor
leave
sub
mov
fisubrs
enter
cltd
fdivr
clc
cwtl
xchg
push
jmp
mov
mov
fnstcw
mov
popf
inc
xchg
xchg
ret
lods
or
dec
comiss
mov
mov
sub
jge
mov
nop
nop
xor
cmpsl
adc
sbb
push
rcrb
cwtl
out
inc
fstpl
inc
popa
xchg
dec
mov
and
inc
lock
into
pop
add
mov
addr16
pop
fstpl
test
xchg
pop
pop
adc
jnp
fnsave
add
lock
xchg
push
pop
xor
notb
push
inc
mov
insb
shrb
jo
enter
out
scas
xchg
ljmp
ljmp
sbb
stos
je
mov
aas
stos
adc
in
test
push
test
fimuls
inc
scas
sahf
inc
push
mov
cmp
mov
mov
mulb
sbb
imulb
mov
int3
or
ss
sub
pop
mov
in
inc
out
fists
mov
push
dec
xchg
xchg
clc
jo
xlat
jmp
add
movsb
in
inc
lret
dec
test
or
cs
outsl
or
xlat
sbb
sbb
pushf
lods
rorl
mov
or
popa
jp
sbb
stc
ror
push
stc
jmp
popl
sub
lods
xchg
jnp
test
or
outsb
xchg
pushf
lahf
mov
push
fwait
mov
lret
int3
out
or
jns
mov
enter
leave
jp
mov
imul
ret
cmp
data16
and
ficompl
dec
sbb
in
popa
and
popa
push
shr
pop
inc
inc
xor
xor
mov
clc
arpl
ja
es
push
push
fidivrs
push
mov
inc
xchg
bound
push
cld
add
mov
dec
das
mov
pop
push
and
mov
or
ljmp
dec
mov
cwtl
or
pusha
les
pushf
add
push
outsl
int3
mov
imul
scas
stc
cs
scas
jecxz
bound
loopne
sub
push
ss
lcall
mov
fdivrs
popf
sbb
ret
add
leave
scas
mov
and
sbb
jmp
rorl
es
sbb
das
sbb
push
jmp
ljmp
into
pop
cmpsl
in
mov
fs
and
fcmovb
stos
xchg
sbbb
mov
mov
ja
push
adc
cmpb
mov
and
icebp
sub
into
dec
pushl
ret
or
inc
arpl
xchg
adc
push
mov
or
cmpsl
adc
mov
push
fisubrl
lahf
imul
in
cmp
dec
push
addb
mov
cmpb
aad
lret
in
fmull
xchg
jp
insl
pop
xchg
and
out
cmp
push
stos
xor
dec
mov
cli
out
mov
dec
jg
xor
sub
pmulhuw
addr16
mov
pop
jnp
push
adc
roll
mov
mov
das
mov
enter
popf
push
dec
stc
outsb
stos
clc
lahf
ds
xchg
adc
pushf
ja
push
test
mov
in
cmp
pop
push
les
xchg
ret
xchg
lahf
mov
out
pop
enter
stos
push
sub
mov
addr16
or
sahf
pop
push
jmp
and
dec
pop
cmc
std
loop
cwtl
in
adc
sbb
jnp
mov
mov
mov
pop
or
insb
sbbl
ret
dec
sub
and
cmp
push
pop
sbb
daa
sub
pusha
les
sbb
adc
or
sbb
mov
and
lods
xlat
and
subl
cmc
idivb
push
cmp
and
sbb
pushf
and
imull
or
push
inc
mov
mov
mov
mov
icebp
xchg
and
adc
scas
xor
lahf
mov
and
int
lea
xor
xchg
pop
fadd
rcll
out
leave
call
push
mov
test
data16
shlb
lock
or
lods
stos
add
pop
jns
aad
push
pop
cmpsl
mov
add
cmp
lcall
pop
into
pop
jmp
pusha
divsd
mov
ja
xor
aam
mov
fdivrs
cwtl
add
xchg
add
rclb
adc
scas
cmp
mov
pop
loop
xchg
and
mov
shlb
icebp
in
cmp
ret
inc
inc
jle
sahf
aam
sbb
les
mov
xchg
pusha
iret
loope
mov
hlt
sub
jb
mov
out
subb
sbb
fisubrs
inc
mov
mov
in
push
mov
sub
lock
dec
jecxz
sbb
sahf
pop
test
rolb
in
inc
inc
add
cltd
sub
adc
add
roll
or
dec
imul
nop
jne
movsb
cmc
shlb
dec
pop
rcll
leave
mov
pop
inc
out
xor
rorl
xchg
xchg
xlat
jmp
pusha
push
pop
adc
dec
mov
idiv
mov
add
stc
push
mov
insb
hlt
xchg
sbb
fisttpll
mov
mov
xorb
pushw
leave
stos
xor
mov
outsl
cmp
inc
les
in
inc
sbb
jns
mov
in
movsl
mov
and
fcoml
jmp
jne
xor
pop
push
dec
inc
movsl
int
xor
pop
loop
lahf
jecxz
icebp
lods
cmpsl
xchg
popa
add
pusha
mov
ljmp
or
lea
outsl
inc
aas
cmpsb
mov
mov
cltd
lods
daa
cmc
les
rorl
adc
insl
fsubs
jne
and
sbb
fidivs
jbe
mov
pop
sbbb
test
pop
sub
pushf
cltd
les
adc
shl
dec
jecxz
sbb
xchg
push
inc
xchg
inc
fs
mov
jne
mov
jnp
or
das
in
fs
std
imul
sub
mov
aas
jmp
dec
insb
push
add
ss
mov
lock
mov
pop
dec
and
push
dec
push
xchg
pop
jecxz
mov
mov
popa
test
call
xor
inc
add
lret
lds
cmp
lea
sub
adc
dec
pop
orb
sub
add
fnstenv
and
jae
jmp
out
and
out
sbb
mov
ja
out
cli
pmaxsw
adc
test
mulb
orl
test
sbb
mov
mov
aaa
test
mov
imul
fmuls
in
jge
cmp
jae
push
xor
shrb
xrelease
int3
add
mov
dec
repz
jg
xorb
inc
lahf
insb
out
push
sbb
and
lock
pop
ret
mov
ret
pop
in
jle
xor
cmp
call
stc
mov
fmulp
xchg
es
repnz
lret
adc
cli
adc
pop
arpl
sarl
aaa
std
cmpsb
les
xchg
aaa
pop
mov
mov
popl
mov
ja
pop
mov
sbb
sbb
push
stc
lret
int3
lock
insb
jmp
sub
mov
and
or
rcrl
mov
mov
pop
popf
shr
and
sub
xchg
data16
ja
push
lret
sub
movl
movsb
pop
add
jbe
lock
movsl
jae
inc
cmp
sbb
cmp
fwait
sbb
orb
or
bound
dec
xchg
sub
faddl
std
mov
or
or
dec
or
lahf
cmp
pusha
outsb
subb
scas
pop
pop
jecxz
scas
xchg
and
aaa
jl
and
fnstenv
mov
push
loop
push
push
imul
aam
mov
and
inc
daa
roll
into
add
out
add
aaa
xor
lret
lcall
pop
cld
add
fcmovu
bound
push
xlat
xlat
test
lods
add
aas
and
mov
leave
cld
mov
icebp
rcl
fwait
out
loope
sbb
adc
mov
pop
hlt
push
push
ljmp
mov
sub
nop
dec
aaa
rcl
push
outsb
pop
mov
imul
xor
leave
mov
inc
push
and
push
or
push
xlat
mov
lcall
inc
jbe
fsts
mov
mov
das
sub
sahf
pop
movl
shll
insl
push
pushl
cmp
inc
pop
iret
test
fiaddl
xor
jp
xchg
push
leave
mov
in
lret
cltd
in
push
add
pop
in
sahf
lcall
test
sbb
xor
xchg
mov
jmp
loopne
loopne
in
aaa
jl
or
xor
insl
lret
fistl
push
xchg
dec
lods
push
mov
pusha
cmp
out
aad
inc
inc
ffreep
ret
je
jno
xchg
aaa
imul
lods
jne
je
mov
or
cmp
push
out
mov
sbb
insl
push
cmpsl
fsubl
es
cmpb
mov
lods
mov
outsl
dec
jae
push
ljmp
addl
xchg
pop
xchg
xchg
insb
jno
mov
or
pop
push
and
pushw
fisttpl
out
or
enter
out
xchg
dec
mov
mov
cltd
pop
inc
test
xchg
inc
dec
pop
sbb
arpl
xor
fsub
loope
sub
or
push
loop
daa
mov
inc
jb
scas
pop
jp
mov
nop
inc
push
lahf
inc
adc
and
ds
imul
sub
movsb
int
lret
cmpsb
cs
jne
add
ror
xchg
les
xor
shrl
cld
add
arpl
jg
xor
add
fnstsw
inc
lret
jo
cltd
cld
insl
mov
sbb
sub
in
xchg
daa
mov
dec
lods
or
fstl
enter
fisubl
jp
push
cs
aaa
push
push
mov
push
stos
mov
stc
add
das
popf
scas
je
sub
pop
outsb
orb
pop
lods
and
add
sub
cmp
add
sub
or
out
nop
stos
cld
mov
repnz
adc
pop
testb
adcl
mov
aaa
jge
xor
out
jle
aas
pop
nop
mov
pusha
jl
rolb
mov
inc
pusha
int
xchg
pop
push
aas
sbb
push
xor
pop
jg
mov
leave
cmpb
and
out
enter
xor
sbb
data16
scas
push
dec
enter
push
inc
ss
sbb
xlat
inc
add
or
cmp
pop
inc
cmpl
push
xor
xor
cmpsb
leave
dec
push
subb
imul
lcall
clc
sahf
mov
push
loope
int
xor
inc
mov
idiv
mov
push
jmp
es
daa
mov
ret
push
stos
sbb
cmp
hlt
mov
xchg
das
mov
mov
jl
dec
xchg
inc
push
xchg
stc
mov
and
cmpsb
fdivl
movsl
or
test
sub
xchg
push
mov
arpl
xchg
mov
lods
imul
mov
inc
ja
mov
rcll
jbe
push
adc
sub
or
scas
adc
xchg
dec
cwtl
js
xor
scas
sbb
ss
aas
in
pop
sub
shlb
sub
xor
arpl
cmp
scas
lea
daa
or
aaa
repnz
ret
mov
inc
repnz
jo
lds
xor
cmp
loop
adc
mov
cmp
and
insb
mov
inc
cmp
fistpll
clc
ljmp
pop
out
test
in
je
movsl
mov
adc
inc
and
test
inc
pop
pop
test
adc
xchg
xor
mov
dec
sbb
ret
adc
das
movsb
lret
rcl
sbb
stos
fstl
adc
push
inc
fmuls
repnz
push
jno
jno
movsl
add
cld
outsb
adc
shlb
or
mov
lret
inc
imul
lds
or
mov
cmp
dec
jge
inc
das
cmp
inc
jecxz
push
jg
pop
cmpsb
mov
pop
fwait
mov
and
cmp
out
insb
or
je
shlb
pop
lods
test
push
bound
or
ret
cwtl
call
sbb
into
mov
and
ja
mov
mov
aaa
repnz
cmpsb
mov
dec
mov
cmpsb
sbb
cmp
xchg
push
ds
mov
xchg
test
jecxz
add
das
cwtl
pushf
test
ss
xchg
and
inc
push
aas
pusha
jl
push
and
jnp
stos
ret
inc
fstp
add
popa
lea
in
or
int
or
xlat
leave
fildl
lahf
mov
jns
inc
clc
fwait
mov
dec
gs
lcall
mov
cmp
dec
jns
xchg
sarb
inc
jle
dec
inc
cmpsb
clc
jo,pn
in
stos
jg
mov
js
push
jbe
hlt
fldl
sarl
cltd
orl
inc
fs
xchg
jmp
add
or
aam
shlb
outsb
rorl
ds
sti
in
jg
fstpl
mov
push
dec
xchg
incl
pop
jns
scas
pop
lods
test
fsubp
orl
or
addb
cwtl
dec
fcompl
cmp
jmp
fnstsw
orb
lahf
fists
adc
mov
test
pop
lret
fadd
fwait
mov
mov
cmp
xchg
push
popf
jbe
inc
ficoms
icebp
out
jmp
movsb
sub
es
sbbb
sbb
mov
mov
scas
scas
mov
jl
daa
mov
pop
mov
sub
and
sbb
dec
insl
lods
dec
jb
push
adc
or
sbb
sub
pop
xchg
mov
aaa
sbb
leave
out
shll
pop
push
or
jle
in
subl
popf
push
aaa
lahf
shlb
inc
pop
cltd
push
push
fists
repnz
popf
dec
mov
leave
addr16
shll
mov
movswl
dec
mov
inc
addr16
cmpsl
mov
mov
sahf
out
sbb
pop
idivl
mov
movsb
stc
push
and
testb
test
cmp
or
push
out
jmp
dec
subl
adc
iret
out
shlb
dec
aas
dec
shlb
dec
mov
and
ror
fcmove
outsb
or
imul
fisubs
movsb
mov
sbb
leave
test
test
and
dec
inc
lcall
adc
mov
dec
xchg
push
dec
int3
outsb
inc
clc
int
daa
xlat
or
mov
outsb
mov
fs
out
fadds
stos
dec
mov
dec
daa
std
cmp
add
dec
ja
lds
jo
mov
mov
mov
fstpl
mov
cs
lods
pushf
fldl
mov
or
in
adc
cmpsb
shll
pop
sub
test
cmp
daa
loope
mov
gs
pop
or
movb
dec
lea
lret
xor
repnz
test
or
inc
lds
fsubrs
or
or
or
imul
mov
cmp
clc
ret
push
and
leave
pop
or
scas
dec
call
pop
es
mov
arpl
clc
outsb
adc
addb
sarb
cli
les
push
popl
test
data16
cld
add
sti
in
fsubl
pop
popf
or
ret
loopne
sti
icebp
dec
pop
enter
mov
ja
inc
dec
pop
and
fdivrp
hlt
or
aam
dec
xchg
sbb
stc
sahf
xchg
aam
add
aaa
dec
add
test
int3
ds
ja
cmpsb
push
xchg
icebp
pushf
mov
pop
scas
in
mov
stos
fiaddl
and
rcl
mov
cmpsl
or
push
dec
shrb
pop
iret
pop
mov
fcmovnb
data16
movsb
push
dec
mov
pop
je
addr16
movsb
int3
scas
mov
inc
push
es
push
cld
dec
push
jns
mov
cmp
cmpsb
imul
add
imull
aad
sbb
and
xlat
sbb
sti
sbb
clc
pop
dec
ja
imul
in
lea
test
inc
inc
and
adc
cmp
push
fs
mov
push
add
aas
xchg
das
sub
mov
lret
ud0
xor
add
sbb
cli
test
dec
enter
add
inc
xor
sti
dec
mov
pop
push
popa
and
inc
roll
jp
mov
dec
jae
mov
add
sbb
cmc
data16
sbb
fildl
loopne
imul
cmp
sub
sbb
push
push
or
jmp
pop
dec
cltd
icebp
cmp
jns
xchg
mov
out
out
pop
int
xchg
dec
fdivl
mov
add
call
outsl
addl
or
in
xchg
in
add
inc
mov
add
dec
ret
shrl
popa
mov
in
into
bound
or
push
xchg
push
dec
push
icebp
lret
jge
or
rorb
push
dec
adc
add
loop
sub
stos
sub
test
mov
inc
fidivs
mov
rol
mov
jmp
or
addb
lcall
cmc
mov
pusha
incl
gs
call
mov
out
shrb
pop
fldl
jecxz
push
jbe
dec
jge
scas
and
pop
cld
and
push
sbbb
cld
cmp
bound
push
mov
xor
test
insb
inc
imul
aam
mov
shll
div
pop
sbb
mov
les
nop
aad
pop
loopne
testb
jns
xor
lods
repz
jo
clc
icebp
outsl
les
or
mov
lret
sbb
push
call
mov
ds
adc
xchg
sbb
push
mov
and
sub
xor
popf
sub
pushw
mov
lret
out
cmpsb
mov
push
sti
push
or
adc
jmp
cmp
xor
nop
mulb
jle
and
sti
inc
pop
dec
xor
sub
xchg
inc
or
aas
fwait
mov
sub
outsl
inc
enter
xchg
pop
adc
mov
fcmovu
outsb
jbe
cmp
sub
push
in
jns
bound
pop
ret
mov
in
es
jae
clc
cmc
dec
and
xchg
ljmp
xor
mov
xchg
loopne
mov
jae
xlat
jo
mov
data16
xor
loop
mov
xchg
in
inc
dec
dec
in
xor
rol
lock
sbbb
or
adc
pop
mov
sbb
and
pop
in
add
loope
mov
test
fistpl
out
iret
frstpm(287
mov
inc
sbb
pop
outsb
pop
mov
das
push
test
mov
jmp
xor
pop
add
inc
jle
daa
popf
dec
adc
xchg
daa
std
frstor
mov
sbb
fildll
jno
xchg
jae
mov
dec
mov
out
pop
ret
xor
add
test
dec
comiss
movsb
ds
in
outsl
inc
aaa
sub
movsl
cmp
xlat
insl
push
jbe
fnop
cmp
xor
je
or
ret
addr16
jae
ss
imul
in
outsl
ret
testl
shrl
ds
jo
es
idivl
cmp
xor
sti
xchg
dec
stos
hlt
orb
mov
data16
push
jp
pop
cmp
sbb
loop
lcall
mov
cmp
and
shll
stos
push
pop
std
jg
sub
test
int
xchg
push
push
lahf
xor
pop
lods
add
fs
inc
push
add
lods
daa
mov
and
fs
out
pop
fs
cmp
pop
inc
pop
xchg
lret
fdivr
lods
adc
in
add
dec
jnp
repnz
or
enter
and
dec
inc
insb
mov
cmpsl
insl
push
lds
sub
adc
push
fsubl
sti
adc
pop
lods
ljmp
xchg
mov
ficoms
sbb
lock
push
jl
je
or
mov
ret
test
sbb
fs
mov
pop
lods
push
cmp
sbb
pushl
hlt
in
xchg
in
xchg
test
sub
fst
arpl
pop
in
jb
ficoms
or
repnz
mov
xchg
cmp
testb
popa
cmp
lcall
push
jge
daa
dec
enter
adc
pushf
rcrb
popa
cli
xchg
repnz
jp
in
bound
outsl
pop
sbb
inc
inc
and
inc
xor
insb
push
xor
lock
pop
push
adc
stos
lds
inc
ljmp
fwait
dec
push
repz
add
or
fstp
sub
jne
xorl
mov
pop
lock
pop
sub
cmp
addl
arpl
dec
ss
shll
adc
lret
ret
aad
out
sub
arpl
fstl
cli
mov
lods
daa
cmp
repz
lcall
add
divl
jne
push
sbb
inc
aaa
ss
insl
scas
sbb
sahf
push
jbe
call
outsb
pop
icebp
sbb
inc
dec
negl
jle
xchg
loope
shlb
ds
stos
xor
mov
fdivrl
mov
and
sahf
divb
jg
outsb
mov
dec
leave
add
stc
sbb
mov
and
dec
and
mov
or
lret
je
or
lods
lods
ja
or
jne
sub
adc
daa
dec
or
push
pop
dec
mov
add
ss
fstl
or
pop
push
insl
and
cmp
pushf
out
pop
mov
xchg
dec
add
rolb
sub
rolb
adc
cltd
clc
pushf
mov
pop
and
lea
int3
inc
idivl
pop
mov
rorb
out
cmp
pushl
xor
cmp
xchg
stos
mov
add
sbb
dec
add
add
out
gs
movsb
aam
mov
loopne
xor
xor
push
fucom
xor
jb
mul
stc
mov
lods
sbb
inc
adc
sub
lods
push
xor
das
push
icebp
or
pushf
mov
pop
shrl
pop
or
repz
les
mov
cmc
ljmp
aam
arpl
or
adc
push
adc
adc
add
and
pusha
cld
int3
mov
movsb
lds
outsb
and
fs
jle
push
mov
clc
aas
or
add
jne
push
insl
adcb
sbb
xor
lret
sbb
test
mov
or
loop
ror
push
lds
jb
or
push
int
cs
std
inc
and
xchg
cmp
cmp
imul
in
das
imul
push
inc
or
jmp
lret
push
cs
pusha
lods
mov
test
add
imul
lods
xchg
ret
or
icebp
push
push
xchg
push
xor
dec
in
jnp
shlb
in
lahf
add
lock
arpl
jne
jge
dec
pop
add
adc
bound
push
decb
jecxz
clc
push
fwait
int
clc
aas
cmp
sbb
pushf
mov
xchg
repnz
out
jl
xorb
aaa
push
xchg
jbe
add
je
into
add
adcb
shrb
jb
xchg
pusha
mov
sarl
scas
jl
inc
scas
cmpsb
popf
xchg
test
in
popa
adc
push
das
mov
scas
push
icebp
xor
or
cld
std
xchg
fisubl
and
cmp
pop
and
sahf
sbb
xchg
iret
xchg
or
cmp
aaa
add
jb
jl
mov
pop
scas
mov
fistpll
inc
sbb
cmp
aam
mov
clc
arpl
es
adcl
mov
or
pushf
sub
pop
mov
inc
es
xorl
nop
sbb
cmp
nop
push
cmp
jb
mov
jge
xchg
inc
push
fisubrl
cli
jb
int
or
xchg
fisttpl
jae
subl
fmull
xchg
cmpsl
mov
xor
xchg
aas
mov
addb
mov
fbld
push
and
push
xchg
fimuls
add
aas
ss
es
pop
push
adc
jnp
iret
mov
test
sub
insb
int
es
std
ss
loope
mulb
fwait
mov
push
scas
pop
mov
inc
inc
cs
inc
ja
dec
sub
ss
inc
negl
push
imul
mov
inc
out
icebp
jbe
stc
push
xor
insb
push
sub
int
bound
out
push
or
andb
sti
ds
fistps
xor
jge
xor
cmc
mov
mov
push
cwtl
icebp
shr
xlat
sbb
pop
mov
push
pop
sahf
cmp
hlt
mov
shrl
push
repz
add
into
movsl
frstor
mov
mov
ljmp
shl
stos
mov
mov
clc
cmp
in
mov
and
sbb
movsb
in
pushf
mov
lock
fldl
lods
cmc
mov
mov
or
sarb
xlat
in
pop
sbb
xor
fisttps
adc
mov
shl
cmpsb
mov
mov
mov
pop
mov
cld
inc
pop
pop
sahf
push
addl
adc
ja
lods
mov
pop
mov
sub
sahf
xchg
mov
popf
push
ja
rorl
cltd
jl
stc
pop
test
xorb
bound
vmaskmovdqu
icebp
imull
jne
inc
fisttpl
pusha
in
mov
push
pushf
arpl
fcoms
mov
mov
inc
jns
ficomps
test
int3
mov
mov
add
je
push
dec
sub
xor
dec
jecxz
imul
cmpsl
mov
push
push
mov
sbb
ds
adc
insl
mov
cmp
pop
mov
das
adc
mov
dec
loopne
push
push
enter
mov
js
cmp
sbb
push
or
push
jmp
imul
jns
jnp
shl
mov
jge
arpl
fsubr
addr16
jnp
pop
cmp
inc
psraw
xorl
sti
add
in
cmp
lcall
mov
pushf
gs
nop
hlt
pop
bound
inc
imulb
addl
mov
out
xchg
daa
shl
pop
inc
gs
insb
aam
push
fidivrs
pop
xor
arpl
cltd
jns
mov
js
jmp
xlat
dec
pop
xchg
xchg
dec
fisubrl
fnstenv
jge
xor
cmp
mov
jp
loop
cmpsl
inc
iret
mov
jecxz
jns,pt
pop
adc
lock
enter
cmovle
xchg
xchg
mov
inc
test
mov
push
sbb
iret
dec
mov
cmp
or
jle
jle
mov
fmull
lcall
dec
je
cmp
push
sub
or
dec
mov
mov
adc
mov
xchg
pop
adc
pop
pushf
and
and
xchg
stos
add
lret
mov
scas
daa
cs
adc
dec
and
jg
lds
aaa
or
stos
or
jo
outsb
sbb
cli
iret
rcr
mov
loop
pusha
jne
jb
add
sub
cmpsl
ljmp
push
scas
pop
dec
sbb
negl
pop
loopne
jne
aam
jo
inc
mov
int3
and
inc
cmp
xor
das
pop
cli
xor
fwait
sbb
lds
cmp
icebp
jmp
addr16
outsb
jbe
mov
mov
mov
inc
insl
pop
add
dec
bound
lcall
xchg
scas
and
sarb
jl
arpl
inc
ret
shlb
pop
shrl
scas
mov
lret
adc
pop
cld
inc
mov
sahf
cmp
lock
push
testb
sub
shlb
mov
test
or
or
add
addr16
leave
insb
mov
jle
inc
push
aaa
push
jge
gs
les
repz
shrb
mov
add
or
or
cmpl
mov
pop
sbb
das
inc
sbb
pusha
ds
cmp
dec
or
or
push
push
lods
push
fsubs
rorl
add
rcll
aaa
out
es
fstpt
cmp
xchg
lcall
repnz
xor
std
jnp
mov
adc
test
std
lahf
mul
fstps
pop
insl
inc
pop
jg
ljmp
mov
sbb
in
pop
push
and
cwtl
insb
push
fisttps
xchg
iret
adc
mov
mov
addr16
dec
dec
and
pop
mov
dec
aaa
clc
into
sub
sub
mov
mov
adcb
mov
adc
scas
scas
mov
arpl
push
jmp
mov
jg
pop
fdiv
inc
mov
cmc
jne
mov
fucomi
cld
pop
xchg
add
xlat
inc
test
addr16
std
mov
repnz
repnz
test
ret
mov
mov
leave
sub
xlat
cmp
loope
xor
add
daa
mov
popa
icebp
pop
and
push
ljmp
fcoms
cmp
add
jae
stos
fstl
iret
ror
mov
rcrl
jne
push
cld
pop
call
lock
sub
cmp
nop
jmp
in
inc
iret
sbb
fstps
dec
jg
xchg
fsts
jg
inc
push
push
push
test
sbb
clc
testl
lods
jmp
sub
in
jns
push
jnp
mov
push
xor
cmp
das
es
mov
add
xlat
mov
fdivrs
lcall
cmp
imul
mov
mov
jle
imul
pop
int
adc
iret
pop
cmp
xchg
sub
xor
mov
mov
stc
jp
mov
xor
or
cmp
push
dec
jl
jle
addr16
jl
push
shr
insl
cmpsl
mov
xor
ror
movsb
incb
dec
call
mov
push
and
sbb
or
xchg
ds
adc
cmp
outsb
jns
call
loopne
rcll
shll
js
xchg
sti
ret
pop
cmc
out
cld
jb
xchg
pushf
mov
mov
push
shrl
aam
int
dec
in
jp
xchg
adc
dec
fistpl
xchg
mov
add
sbbb
arpl
push
xor
or
xor
mov
in
cmpsl
adc
leave
push
xor
dec
cmp
outsl
call
adc
jle
js
sar
ret
adc
out
jl
and
mov
fisubl
lods
adc
push
pop
lcall
lods
or
fistpl
sub
add
repz
cltd
repz
cs
dec
dec
filds
xchg
js
mov
stos
insb
jnp
dec
sub
jo
ret
xchg
cmp
cmp
fwait
and
scas
movsb
es
repnz
sarb
push
addb
clc
cmp
andb
xchg
sahf
inc
inc
mov
das
cmp
inc
push
cli
xor
lret
inc
xor
sbb
fsub
jae
clc
mov
cmp
mov
into
cld
lret
aaa
lcall
cmp
dec
negl
clc
pop
push
js
fwait
cwtl
cmpsl
les
pop
cmpsl
jae
or
in
popf
icebp
and
out
in
inc
mov
repz
sbb
adc
stos
lcall
and
aaa
add
std
add
xor
and
sbb
ret
loop
sbb
popf
rcrb
and
sub
push
mov
int3
test
lods
mov
arpl
std
fistl
orl
popl
jge
mov
add
mov
and
rol
mov
nop
lods
push
insb
jecxz
inc
shr
clc
aas
xchg
fstps
dec
popf
popf
or
int
ss
push
sbb
ja
dec
cmp
xor
movsl
mov
sub
bnd
bound
std
cmp
lcall
push
xchg
mov
jge
cmpsl
jg
ret
xchg
call
in
out
lcall
jne
popa
and
dec
sub
mov
dec
cli
push
iret
push
pushf
lret
pushf
scas
pop
dec
outsb
adc
andb
push
jne
repz
push
xor
and
jge
jae
xlat
movsl
jmp
or
adc
mov
out
mov
aad
mov
pop
sbb
inc
ljmp
xor
aam
imul
adc
cwtl
ret
jmp
rol
dec
je
pop
pop
jecxz
cmp
in
fs
or
sti
stos
jge
mov
sbb
or
out
or
xchg
xchg
out
fiadds
lcall
push
std
pushf
lea
fwait
in
daa
push
mov
inc
in
loop
outsb
sub
dec
jne
jmp
push
inc
shlb
test
shrb
lret
rorb
mov
mov
popf
mov
lea
or
mov
mov
jne
xchg
sub
inc
loopne
icebp
loope
decb
adc
out
shll
mov
jno
lret
imul
mov
pushf
add
xchg
jo
insl
push
popf
sbb
cmp
inc
push
mov
in
or
pop
inc
dec
cmc
pop
scas
pop
in
cwtl
jne
xor
sub
push
dec
cmp
push
push
sub
test
jp
jg
insl
jmp
rorl
filds
jle
out
jno
fs
xchg
in
jp
add
rcr
pop
add
iret
data16
cmc
cmpl
fisubs
or
or
das
das
pavgw
aas
aam
movsl
sahf
gs
adc
pop
cltd
push
mov
icebp
sahf
mov
adc
sti
bound
sub
fwait
sti
xlat
mov
push
sbb
xchg
or
sub
and
xchg
jmp
jo
shlb
mov
mov
mov
arpl
jns
bound
mov
jno
aad
jbe
hlt
pop
or
adc
jecxz
dec
or
inc
sub
in
mov
add
sub
scas
rorl
xor
mov
nop
xchg
mov
cmpsl
insl
fdivl
cmc
or
mov
inc
fcoml
enter
mul
das
ror
pop
xchg
cmp
push
jmp
loop
xlat
adc
imul
mov
mov
cmpsl
addr16
sarl
xor
fdiv
incl
in
push
push
stc
in
sbb
xchg
mov
lret
inc
sub
scas
cmpl
xchg
in
leave
pop
cltd
loop
dec
popa
testb
loopne
xchg
sti
cmpsl
mull
mov
je
xchg
mov
xchg
or
sbb
jg
jle
sbb
fiadds
inc
cwtl
xchg
lcall
inc
adc
fsts
aaa
test
pop
mov
aaa
lret
call
sbb
das
sar
mov
ret
mov
call
cmpsl
js
dec
xchg
mov
rcrl
jne
hlt
jg
insl
repz
add
push
adc
xchg
loopne
mov
xchg
inc
popa
or
cmpb
aas
mov
inc
test
fcoms
xor
out
push
js
pop
pop
ljmp
ja
loope
inc
adc
or
dec
clc
xor
adc
pop
adc
sti
pusha
add
test
fxch
cs
js
jae
stos
cmpsl
movsb
pop
test
lret
es
push
jo
ss
in
cmc
sbb
pop
adc
pop
stc
mov
pop
mov
shl
pop
xor
jp
roll
lea
inc
or
mov
sub
mov
xchg
xor
xchg
xchg
mov
add
popf
pop
sbb
add
mov
dec
xor
mov
jae
xor
xor
or
mov
lahf
clc
cmp
or
imul
add
cmp
lcall
pop
jne
sti
jp
loop
cld
test
fsubrs
jp
or
stc
sub
das
mov
xchg
mov
and
inc
daa
sub
xor
sub
dec
mov
ret
sub
lds
mull
jp
ret
insl
pop
mov
fs
jl
mov
jmp
add
mov
out
jae
xchg
lcall
push
mov
adc
sub
and
pop
jecxz
pop
inc
dec
clc
jecxz
xchg
dec
pop
cli
and
xor
sub
gs
nop
outsb
aam
pusha
sar
fistl
cmp
stos
push
push
add
adc
sbb
out
mov
sbb
out
cmpsl
push
xchg
mov
xor
lock
cmp
je
mov
jbe
mov
jp
xchg
popa
lods
fidivrl
jnp
shl
sbb
test
int
jnp
push
xor
sub
outsl
adc
jmp
or
and
lea
jo
sbb
jmp
jo
pop
cli
iret
pcmpeqd
test
dec
cmpl
loopne
clc
sub
mov
add
fdiv
std
mov
aas
dec
adc
addl
fs
sbb
mov
rolb
inc
lahf
add
mov
mov
jb
call
addl
push
and
pop
out
xor
in
inc
fisubrs
jbe
movsb
xchg
xor
pop
je
adcb
xlat
outsl
call
cmp
rcrb
pop
outsb
cmp
stos
rorb
or
xchg
mov
rorb
pop
add
lret
dec
xor
adc
xor
aaa
movsb
in
mov
jae
lahf
pop
cmp
sbb
rolb
push
inc
and
or
subl
rorb
clc
sub
roll
movsb
std
rsqrtps
popa
xor
jg
push
jmp
out
jmp
cmpsb
mov
out
clc
dec
cltd
jne
xchg
sub
pop
incl
lock
loop
stos
jo
divb
repz
or
sbbl
stos
push
and
aaa
jge
test
test
test
fistps
add
inc
stc
lret
test
adc
jo
scas
push
mov
outsb
push
push
testb
xchg
sub
mov
mov
or
sbb
sbb
bound
insb
or
mov
scas
jae
push
das
cmp
or
mov
xchg
ds
sub
sarb
mov
icebp
sbb
call
push
inc
or
adc
jne
pop
push
iret
inc
jbe
test
dec
dec
jae
pop
ret
scas
or
cmp
fcmovbe
lcall
repnz
pop
mov
push
add
dec
adc
cmp
push
mov
add
sub
inc
ret
jp
mov
fwait
lods
clc
shrl
mov
mov
insb
jecxz
ret
mov
inc
fwait
cmp
sub
in
jl
and
in
notb
cmp
movsl
inc
sbb
add
mov
out
cli
push
scas
sbb
fsub
push
das
fiaddl
les
fsubl
mov
inc
or
mov
out
stos
jo
fcmovb
mov
cmp
cmp
dec
dec
adc
dec
jnp
jmp
adc
xor
fwait
mov
pop
push
dec
lea
push
sbb
lock
mov
fwait
cmp
cli
xchg
add
xchg
sub
lcall
inc
fstpt
lods
cmp
mov
mov
int3
add
fbld
lcall
dec
out
add
mov
data16
test
imul
loopne
push
mov
xor
and
push
jo
push
cmp
adc
mov
adc
fucom
dec
popf
mov
aam
cmp
inc
lds
push
cwtl
imul
mov
sub
lahf
ljmp
and
imul
ljmp
add
dec
jge
out
es
shll
add
inc
jp
dec
mov
cmp
add
cmp
fwait
adc
data16
in
or
sbb
icebp
call
je
cmc
mov
inc
inc
cltd
cmp
pop
mov
add
jo
pop
and
push
lret
clc
test
lahf
mov
jae
jg
repz
int3
test
test
push
sub
mov
shr
sub
and
mov
xorl
gs
dec
push
std
das
inc
pcmpgtw
sbb
mov
adc
xchg
mov
dec
lahf
xor
data16
mov
jno
in
mov
mov
xchg
push
adc
frstor
cmp
test
or
inc
cmp
cmp
movsl
inc
test
inc
xor
sbb
push
inc
movsb
inc
mov
sbb
fs
sbb
test
add
mov
cltd
inc
adcl
push
dec
dec
jb
xchg
decb
pop
repnz
cmp
jmp
ljmp
pop
cmp
mov
rcll
mov
negb
cs
aaa
xor
jbe
dec
popf
sbb
ss
movsl
rclb
bound
out
adc
pop
inc
jnp
adc
pop
mov
dec
xlat
lds
jbe
add
pusha
stc
and
imul
xor
popf
pop
rcrb
xchg
dec
hlt
ljmp
mov
lcall
stos
pop
dec
adc
pusha
pop
adc
dec
sbb
adc
pop
pop
fwait
push
lea
jmp
xchg
sub
cmp
xchg
decl
hlt
mov
jge
jae
and
std
outsb
aaa
xchg
xchg
ss
or
inc
ja
outsl
adc
enter
xor
push
pop
sarl
xlat
ret
inc
push
mov
sar
xchg
test
push
push
mov
xor
int
aad
bound
mov
sbb
add
je
jl
xchg
xchg
out
xchg
cmp
lock
stc
pop
pop
imul
andl
cwtl
out
and
xchg
jae
inc
enter
mov
push
xor
outsb
mov
cmp
xchg
adc
jne
dec
mov
adc
add
ljmp
inc
aam
push
and
out
ret
jo
ss
clc
rol
dec
dec
mov
cmpsb
xchg
cmp
and
fwait
mov
jno
push
sti
cmp
xor
add
pop
dec
pop
loopne
inc
jmp
ret
mov
inc
jp
inc
xchg
xor
in
rcll
shr
mov
dec
jle
out
inc
mov
add
nop
idivb
sarl
jno
adc
push
cmp
add
or
imul
cmp
sub
jecxz
mov
xor
inc
sub
test
xor
out
mov
jecxz
jl
pop
push
fisttps
cmpsl
notb
aad
xchg
arpl
push
gs
shl
mov
lock
scas
fisttps
or
lret
add
xor
repz
mov
pop
addr16
cmp
nop
xor
cld
pop
cltd
les
cmp
pop
lds
int3
vpaddsw
inc
cmp
flds
mov
adc
sbb
and
into
add
push
cmc
dec
sub
push
mov
loopne
shll
movsb
sbb
imul
dec
pop
jnp
dec
jle
loopne
mov
cmp
das
xor
xchg
mov
push
adc
xor
ss
mov
sub
xchg
ja
inc
cmp
lret
popf
repnz
mov
ds
addr16
loopne
xchg
jl
xchg
lret
push
jbe
mov
cltd
aaa
pop
test
cmp
leave
cmp
jecxz
inc
adc
push
lcall
cmp
mov
or
lock
enter
jb
dec
jle
mov
mov
xor
dec
mov
and
les
lods
xchg
push
testl
scas
sbb
negl
mov
mov
cmc
je
pop
inc
rclb
das
add
xchg
les
data16
pop
insb
cmpsl
dec
sti
leave
rorl
idivl
xchg
inc
dec
mov
inc
sub
fprem1
std
in
fwait
sti
mov
xchg
leave
push
sub
das
inc
push
mov
mov
mov
shrl
in
repz
jge
and
dec
ret
mov
pop
xchg
push
movsl
adc
test
ret
nopl
jae
xchg
fisubs
push
mov
xor
pop
aaa
inc
stos
jae
or
cltd
fld
out
xchg
sahf
xor
xchg
or
popl
and
ljmp
data16
das
xor
leave
jl
lea
in
loope
scas
xchg
add
mov
fadds
bound
lret
mov
mov
ret
insl
data16
fidivrl
ror
das
jl
adc
stc
adc
xor
inc
sub
stc
sub
ret
aaa
and
jl
inc
sti
or
adc
jo
daa
or
inc
repz
adcb
decb
mov
testb
incb
jl
xchg
jno
inc
adc
pop
jae
cld
inc
inc
jns
mov
inc
cwtl
aam
test
testb
inc
adc
xor
pop
mov
and
call
incb
jbe
popa
jns
insb
adc
test
sbbl
xor
sbbl
adc
sub
add
fdivl
pop
mov
ret
jbe
xchg
sub
stos
divb
shlb
and
incb
in
inc
orb
lcall
cli
inc
pop
adc
xchg
push
cmp
mov
mov
rcrl
pop
aad
fcmove
jnp
addl
ret
shlb
testl
or
xchg
sub
jg
imul
hlt
cmpsb
pop
and
xor
dec
loope
inc
lods
fildl
int3
jmp
les
das
cmp
dec
addr16
adc
jg
ficoms
inc
imul
mov
push
in
data16
lcall
push
in
xor
imul
cmpsl
push
jb
lds
mov
pop
repz
or
push
mov
inc
rcr
hlt
or
mov
jo
cmpsl
sub
fisttpl
mov
out
bound
jg
fldl
cmp
enter
dec
mov
ss
mov
mov
shl
test
mov
add
add
mov
sti
in
faddl
mov
dec
out
sub
jg
into
cmp
fiaddl
jp
lods
push
sbb
sub
daa
int
pop
fcmovu
rsqrtps
xor
xlat
pop
and
fdivrp
pop
mov
xor
fisubl
mov
push
aad
movsb
rclb
aam
jmp
ficomps
ret
inc
scas
add
pop
test
inc
inc
and
test
push
call
pop
sti
sarl
mov
aad
cmp
xor
mov
fstp
int
pop
mov
adc
iret
sti
mov
rolb
movsl
bound
ljmp
inc
pushf
sbb
fwait
sbb
pop
int
and
mov
pop
or
dec
and
jl
xchg
sbb
mov
stos
adc
add
lock
inc
js
push
jae
ret
rcll
clc
add
fidivs
mov
jecxz
push
repnz
jmp
dec
test
int3
ror
fidivrs
mov
stos
mov
cmp
lods
jae
and
or
adc
sub
fs
or
pop
adc
ret
ror
idivb
cli
xchg
call
popa
out
cltd
adc
in
pop
outsl
cmc
repnz
insl
ja
lods
shl
test
popf
loopne
sbb
shl
xor
push
in
icebp
xchg
outsl
sbb
jecxz
mov
fsts
mov
xorl
jle
stos
ja
int
incl
js
mov
sbb
add
sti
lret
xchg
outsb
test
and
out
mov
push
sub
icebp
jp
mov
sbb
sarl
popf
stos
fmull
mov
fldl
inc
lcall
add
out
mov
or
xchg
in
cmp
dec
mov
or
mov
inc
int3
jle
fisubl
mov
cmp
out
out
cmp
pop
adc
mov
cmp
jae
mov
push
adc
mov
dec
mov
fdivrs
test
cmp
inc
addr16
mov
icebp
lret
sub
pop
aaa
dec
fdivrl
inc
lcall
mov
stos
push
out
adc
mov
rcrb
jp
sbb
dec
clc
fadds
orb
push
gs
pushf
insl
mov
push
loope
push
int
sub
mov
icebp
fnsave
je
aam
push
adcb
aad
xor
inc
lret
xor
pop
xchg
outsb
ret
orb
sub
xchg
pop
dec
jl
fsubrl
out
mov
dec
rclb
shll
mov
mov
jl
std
mov
mov
dec
aas
xor
popa
xlat
jp
cmp
xor
int
mov
bound
jo
xor
lcall
imul
push
ret
sub
add
jmp
fsubrs
cli
leave
test
movsb
ss
clc
shrl
incb
and
ret
adc
adc
mov
mov
dec
clc
push
jne
in
and
cmp
fnsave
imul
in
test
xchg
inc
cmpsb
test
add
mov
mov
and
imul
dec
push
inc
add
xchg
mov
jno
cld
push
lods
ret
dec
movb
xlat
icebp
dec
lcall
mov
cmpsb
out
not
ja
icebp
test
and
out
test
push
in
lods
mov
adc
push
xchg
or
fbld
xor
dec
push
or
popa
rcl
inc
outsb
mov
lods
fdiv
fucomi
pop
repnz
cltd
sub
inc
pop
xor
dec
cwtl
loop
mov
and
ljmp
inc
push
inc
pop
cmp
pusha
push
mov
cmp
jmp
mov
arpl
jae
mov
add
jmp
fwait
add
into
mov
std
push
adc
mov
rorl
jge
test
jmp
mov
pop
sbb
and
dec
sub
outsl
mov
adc
add
repz
jnp
notl
insb
rcrb
pop
fildl
jne
push
mov
leave
in
dec
mov
jbe
jecxz
mov
outsb
or
or
mov
and
jmp
jbe
add
push
mov
stc
jbe
lret
jg
mov
insb
adcl
daa
xchg
out
jle
mov
fiaddl
sbb
rorl
jge
fiaddl
jmp
pop
xor
std
hlt
mov
inc
fisttpll
adc
cmp
xchg
aas
xor
push
hlt
inc
and
adc
cltd
adc
cld
les
jge
sbb
add
inc
popf
jo
in
mov
xor
xor
cmp
sbb
add
dec
pop
inc
sarb
loopne
jle
pop
mov
in
xchg
push
xchg
out
inc
or
jecxz
cmp
test
fdiv
cs
jecxz
mov
mov
in
jbe
imul
mov
cli
mov
sbb
mov
fisubs
push
jnp
popf
rcr
cmp
pop
and
jbe
xchg
pop
call
stos
aam
insb
lret
leave
mov
out
je
pop
scas
adc
inc
sbb
mov
xor
fisttpll
cmpsb
xchg
aad
out
xor
cmp
sub
not
mov
xchg
pop
stos
loop
jl
lea
mov
mov
mov
clc
add
fdivrl
xchg
mov
push
fsubrl
in
test
loope
popf
insb
jb
adc
mov
xchg
nop
pop
jnp
mov
pop
pop
imull
iret
pop
clc
jecxz
add
add
scas
insl
xchg
stc
test
std
clc
and
jl
xor
xchg
dec
cmp
xchg
jae
jno
add
xor
js
mov
popf
pop
pop
xor
sbb
sbb
enter
or
sub
mov
insl
mov
mov
mov
rcrl
pop
mov
adc
push
repnz
jl
sbb
in
jmp
inc
pop
ljmp
push
insb
int3
insb
cmp
clc
inc
dec
push
xchg
cs
xchg
movsb
test
jnp
xorb
mov
cmp
add
insb
leave
and
loop
jae
insl
jae
push
and
repnz
lods
mov
jne
fwait
xorb
jo
xor
lret
inc
xor
xchg
negl
cmp
sub
pusha
cmpsl
mov
clc
scas
push
xor
cmp
cs
adc
in
pop
and
or
arpl
dec
sbb
lcall
mov
xchg
out
ret
xor
fyl2x
enterw
inc
jle
xor
pshufw
ja
sub
add
in
mulb
and
int3
and
pop
imul
jge
jg
test
jae
stc
sar
je
insl
mov
inc
dec
lret
inc
and
sub
daa
scas
aas
sbb
pop
cmp
adcl
push
xor
push
movsb
xchg
jns
inc
or
xchg
ss
std
jle
add
inc
xor
mov
ss
cmp
sbb
dec
adc
sub
push
jb
outsl
cmp
lock
ds
inc
mov
inc
ret
sti
aaa
sarl
or
add
jg
outsl
fldenv
adc
push
fldl
sub
js
fs
negl
call
fiadds
mov
imul
mov
mov
mov
sub
or
mov
ljmp
popf
hlt
fisubs
int3
nop
loopne
pop
jo
sbb
cmp
push
popa
cmp
sbb
adc
sbb
mov
inc
arpl
and
add
inc
sub
inc
jge
out
inc
and
cwtl
test
mov
jmp
mov
fsubr
inc
lock
pop
push
mov
pop
push
inc
sub
xchg
test
mov
mov
xchg
adc
nop
js
sub
and
cmp
adc
iret
bound
and
repz
orl
inc
cmp
sbb
xor
push
out
fs
mov
stc
push
fisubl
cmp
ret
inc
fnstenv
inc
pop
cmp
icebp
mov
addr16
mov
es
add
pop
xchg
cmp
test
mov
push
jecxz
push
push
andb
ret
mov
sbb
cmpsl
outsb
mov
and
scas
mov
in
lret
inc
lret
mov
test
aaa
or
jge
mov
inc
loope
stos
loop
xlat
mov
jb
pop
or
test
push
dec
pop
mov
div
shlb
ror
repnz
pop
adc
xor
mov
add
jae
inc
mov
push
mov
xor
cmp
repz
xchg
testb
insb
mov
mov
mov
jnp
fwait
push
dec
mov
iret
jne
pop
adc
scas
outsl
mov
jmp
insb
outsl
cmpl
fnstcw
hlt
inc
loop
pop
int
aaa
aam
jns
xor
adc
xor
add
test
dec
mov
sbb
out
push
jns
cltd
enter
mov
push
insb
mov
sbb
adc
mov
mov
ss
loopne
outsl
aaa
mov
sahf
push
jae
shrl
cmp
mov
mov
jno
mov
pop
pop
js
call
out
les
xchg
lods
in
lods
push
pushf
clc
into
inc
dec
ret
jb
mov
inc
xchg
imul
mov
ljmp
rol
jae
xor
mov
lock
jge
call
pop
gs
lods
gs
ss
lods
add
xchg
cmc
andl
ret
fnstsw
mov
out
fstpl
ja
in
pop
mov
jb
popf
jge
jmp
sub
adc
aas
js
pop
loopne
lock
hlt
ret
mov
xchg
dec
and
aam
int
xor
lock
jae
ds
roll
and
rorl
cmp
test
fdivs
inc
fmuls
addr16
movsb
pop
mov
aad
mov
mov
mov
cmpl
cmpsl
sbb
jecxz
fbstp
push
js
cmp
lods
stc
or
jns
xor
dec
cmp
leave
aaa
mov
cmpsl
mov
mov
push
cltd
pop
hlt
sub
outsb
pop
pop
test
js
icebp
mov
sbb
clc
lds
mov
push
cwtl
dec
add
jno
jmp
aad
inc
and
enter
addr16
mov
push
rorl
dec
mov
sub
das
dec
xchg
xchg
and
pop
int3
fisubl
ror
lods
sbb
popf
inc
ret
in
mov
adc
scas
aas
mov
sub
sub
push
les
jle
xchg
ror
outsl
and
mov
scas
push
jae
dec
sub
cli
xchg
mov
fisttpl
outsb
inc
jp
pop
xlat
insb
out
mov
inc
fst
mov
cmc
mov
push
les
fsubs
popf
mov
test
mov
in
out
shll
sub
pop
lods
stc
push
aam
test
aad
jmp
test
clc
std
jnp
push
mov
mov
xor
pop
and
sub
cmp
lcall
push
adc
mov
test
mov
mov
cmp
rorl
pop
adc
mov
pop
pop
or
sbb
popf
xchg
jne
fcmovnb
sub
out
fincstp
pop
mov
scas
stos
sub
adc
inc
sbb
xchg
out
icebp
push
push
arpl
cmpsl
and
jp
imul
leave
mov
insl
push
and
and
push
out
pop
ret
icebp
jle
pop
mov
push
out
mov
daa
lahf
ret
or
push
mov
xlat
mov
or
jne
sub
and
mov
jmp
loope
cmp
lds
mov
data16
mov
push
mov
lcall
sub
jb
imul
pushf
pop
or
lcall
or
add
inc
bound
je
jge
jo
xchg
mov
sarl
push
imul
ret
loopne
push
jbe
adc
not
push
ds
push
jg
push
arpl
rcrb
cs
enter
sarb
pop
sti
aam
jmp
iret
pop
repz
mov
push
in
mov
test
xor
push
je
mov
jg
mov
cmp
or
push
fildll
out
dec
sub
cmpsb
gs
movsb
nop
ds
pushf
fstl
lods
das
mov
xchg
add
add
adc
dec
xor
sbb
sti
or
cmp
pushf
addl
xchg
idivb
add
bswap
call
xlat
jge
pop
popa
push
sbb
push
int3
inc
jl
scas
insl
stos
aaa
movsl
push
add
cmp
adc
jns
lock
loope
aam
jns
cmp
pop
call
icebp
repnz
arpl
push
sub
and
out
ret
xchg
push
and
xor
mov
push
adc
mov
dec
add
sbb
rcr
in
ret
xor
jp
loope
jae
ds
lock
push
icebp
cmp
add
mov
fidivrl
cmp
fnsave
enter
popf
cmpb
xor
arpl
int
fisubrs
out
jmp
jmp
xlat
mov
dec
cmpsb
inc
mov
xor
cwtl
rorl
mov
adc
fisubrs
xchg
stos
fnstenv
mov
das
lahf
outsl
sbb
xchg
mov
lods
mov
xchg
jae
in
pushf
insl
cld
push
fwait
mov
out
inc
clc
add
add
ret
mov
add
iret
mov
pop
sbb
jmp
cmp
inc
cltd
clc
inc
imul
dec
inc
les
push
dec
xor
mov
loope
add
loop,pn
nop
mov
and
inc
add
mov
hlt
cltd
adc
jmp
scas
lahf
xor
cmc
clc
jg
add
pop
ja,pt
mov
mov
mov
sbb
mov
das
mov
imul
inc
sahf
mov
xchg
lods
mov
sbb
mov
fbld
cmp
jns
push
in
lcall
xchg
add
popa
outsl
in
loopne
out
mov
dec
and
inc
sub
sub
jo
jp
add
lods
leave
bound
mov
call
rclb
aas
pop
and
add
add
pop
dec
ljmp
push
xchg
fsubrs
or
addr16
cmp
push
xor
mov
jno
cli
pop
jns
movsl
xchg
ficoml
out
add
jge
or
stc
adc
sub
insb
sub
or
out
jge
mov
and
push
call
decb
lahf
or
loop
enter
xchg
mov
mul
pop
and
add
imull
adc
and
and
arpl
aam
fistl
decb
cwtl
jno
push
xor
jns
cwtl
add
frstor
std
pop
lret
data16
inc
pop
in
mov
mov
dec
or
push
pusha
adc
mov
fwait
mov
add
clts
pop
or
insl
fucom
lock
push
sub
loopne
push
sti
das
add
iret
dec
repnz
cmp
insb
jbe
sub
and
fimuls
dec
sbb
test
rolb
sbb
sti
dec
push
cmpsb
lcall
cli
mov
inc
mov
lock
jno
testb
xacquire
mov
fstps
mov
and
push
mov
int
xor
cmp
inc
scas
leave
fstpl
jmp
scas
or
mov
mov
cmpl
and
imul
sbb
xchg
enter
jb
cmc
ja
js
inc
pop
xchg
xchg
out
enter
push
mov
dec
pop
and
arpl
mov
fstps
stos
cmp
xor
aas
hlt
xchg
popf
jp
xor
dec
mov
repz
not
cmp
push
mov
mov
pop
aaa
mov
xchg
in
ljmp
xchg
fs
jo
pop
out
and
iret
xor
dec
sub
bound
mulb
jne
adc
add
scas
pop
sbb
fidivl
sbb
cmpl
dec
mov
ja
neg
scas
bound
ret
or
out
mov
push
bound
inc
pushf
lret
mov
push
inc
push
mov
loopne
xor
int
push
cmp
fisubl
mov
das
mov
arpl
jg
sti
mov
loope
loopne
enter
sbb
mov
xor
test
sub
jne
lret
lods
inc
movsl
int3
mov
out
cli
cmp
or
xchg
cmovns
je
imul
inc
int3
repnz
outsl
mov
sub
lds
mov
push
iret
imul
cmp
sub
jb
xor
ljmp
sti
aad
outsl
jp
and
aas
or
mov
lret
push
or
outsl
jg
xor
loop
out
pop
jle
das
mov
inc
lock
mov
mov
or
cmp
xor
scas
and
ds
mov
mov
push
sub
ficoml
mov
leave
loop
repnz
jae
jg,pn
sbb
addr16
aam
in
std
fmuls
jne
mov
lods
pop
jle
push
sub
push
jnp
and
clc
aas
inc
add
push
dec
dec
int
pop
adc
and
sub
mov
push
push
adc
neg
int
xchg
dec
push
dec
scas
and
test
jae
dec
inc
lock
mov
xor
iret
in
daa
and
adc
add
js
insb
push
xchg
lret
loope
je
xchg
jae
mov
xchg
mov
dec
stos
stos
pop
jb
dec
repnz
fwait
add
jge
outsb
mov
xchg
lods
dec
xchg
pop
xchg
jns
js
sbbl
lcall
ja,pn
xchg
rclb
or
jo
out
out
ss
sahf
out
loope
sbb
lret
sub
fs
jb
les
lea
push
mov
push
sbb
lods
xor
mov
lea
mov
jnp
cmpsl
push
add
mov
push
dec
xchg
or
outsl
xor
repnz
das
test
call
inc
and
cld
out
jl
lea
xor
dec
shll
mov
cmp
and
nop
jb
in
mov
lea
xchg
mov
or
or
sub
mov
mov
mov
loope
and
sub
mov
xor
mov
negb
in
and
jecxz
test
ret
cmp
mov
insb
push
fucomp
dec
cmp
fwait
mov
fldt
daa
sub
test
and
pop
test
push
mov
das
test
prefetcht2
aad
or
pusha
xchg
pop
movsl
sub
push
inc
adc
sbb
inc
adc
mov
int
mov
jge
mov
icebp
sub
das
into
insb
fmul
fnstcw
das
cs
inc
test
mov
pop
pop
stos
xchg
mov
push
xchg
inc
and
jp
mov
out
push
mov
or
nop
iret
in
xchg
rcr
mov
or
andl
popf
in
jecxz
loopne
dec
or
test
popa
sti
insl
jb
and
inc
sbb
cld
sbb
aaa
pop
test
jb
push
hlt
lods
pop
mov
cmp
sbb
ja
cmpsb
xchg
inc
xchg
pusha
push
call
jne
xlat
dec
mov
mov
mov
mov
lock
mov
sbb
sbb
xlat
ljmp
cmp
iret
addr16
andl
dec
sbb
xor
sub
lds
das
icebp
lock
inc
push
jnp
pop
xor
enter
pop
loopne
movsl
inc
mov
scas
xor
lods
lcall
mov
jp
xchg
inc
inc
out
int
xchg
mov
leave
add
out
inc
pop
cmpsb
or
pushl
and
mov
movsb
mov
or
hlt
loopne
jbe
mov
mov
repnz
pop
lods
pusha
xor
fsubs
movsl
data16
add
xchg
call
cmp
adc
lret
sbb
mov
mov
iret
xor
xor
les
xchg
addr16
push
inc
lahf
out
xchg
jge
inc
dec
or
sbb
mov
in
ja
sub
mov
test
shrb
sub
in
adc
push
aaa
lahf
pop
cwtl
mov
adc
popa
notl
sub
add
bound
fprem1
cmp
jmp
mov
xchg
fwait
xor
sbb
jp
movb
and
sub
pop
in
cmpb
dec
pop
dec
xchg
push
fstp
adc
lret
insb
mov
int
cli
add
dec
shll
clc
xchg
add
sbb
jne
addr16
icebp
sub
mov
test
mov
cmp
outsl
js
or
xchg
les
scas
push
aad
pop
pushf
pop
stc
mov
cld
cmpsl
mov
aam
out
mov
lock
sbb
xchg
lcall
pop
jl
pushf
dec
mov
daa
pop
jo
xchg
ljmp
cltd
loopne
loope
dec
lock
push
jl
mov
jle
and
mov
xor
ror
pop
jg
cmp
sarb
cmp
pusha
negl
cwtl
iret
movsb
push
rcll
jmp
push
xor
enter
movsb
pop
arpl
shlb
fbld
mov
pop
cmpsb
adc
leave
lcall
inc
ss
mov
je
pop
mov
loop
aam
sub
xchg
add
mov
lods
mov
jo
mov
and
dec
inc
hlt
cs
push
jp
je
dec
mov
xchg
or
test
fwait
push
std
loopne
iret
sti
jl
xchg
jne
add
shlb
jae
xor
gs
sub
sbb
add
inc
or
pop
mov
mov
cmp
into
movups
push
sub
ret
adc
roll
and
mov
xor
mov
sub
lods
hlt
mov
cmc
mov
dec
add
ja
sub
stos
inc
aas
fimull
pushl
loope
lods
loop
stos
data16
cltd
iret
cmp
dec
shl
cli
pusha
daa
pop
int
test
inc
bound
mulw
fistl
sub
shrl
icebp
movsl
sti
lcall
pop
xlat
pop
iret
jmp
lods
rcll
stos
fs
dec
sbb
jno
mov
pop
cs
sahf
cltd
popa
cltd
cld
push
bound
jmp
jbe
cmp
add
sarb
push
cmp
stos
add
fcmovnu
out
cli
push
pop
mov
cmp
xchg
out
ja
aaa
or
push
or
and
std
push
addr16
push
sbb
mov
sub
aad
jmp
push
sbb
imul
popf
and
pop
sub
insl
das
movsl
push
daa
and
outsl
pop
jl
sbb
mov
fildl
mov
jns
hlt
daa
mov
cltd
sub
pop
cmpsl
add
jecxz
fwait
aad
loope
mov
jmp
insb
cmp
ret
jp
mov
push
popf
xchg
cwtl
mov
add
xor
popa
push
jno
push
data16
ret
xlat
stos
fwait
stc
daa
popa
mov
pop
je
lret
fisttps
roll
leave
jl
aas
xor
aaa
lea
cmpsl
leave
push
mov
push
xor
cmp
pop
lahf
loope
call
sbb
fnsave
inc
roll
mov
cli
sub
add
insl
jg
pop
inc
inc
stos
xor
cld
imul
loop
test
les
clc
dec
ffreep
sahf
jge
xchg
push
call
xor
insb
xor
jb
sbb
subb
out
sarl
mov
lds
lock
cmpsb
fcoms
cmp
addb
xor
decl
cmp
sub
adc
xchg
stc
jo
test
cmc
into
mov
mov
push
sbb
ja
add
repz
adc
xchg
dec
adc
mov
lcall
pop
or
mov
push
out
sbb
iret
cmc
dec
xchg
mov
mov
xor
jg
lcall
sub
jmp
push
push
shlb
scas
mov
bnd
adc
into
pusha
push
sbb
or
loope
loop
xchg
lock
inc
sbb
enter
lahf
inc
lret
sbb
mov
jg
mov
ja
and
mov
inc
cmc
mov
mov
ffreep
out
in
sbb
hlt
imul
addr16
xorl
xchg
in
mov
add
lods
repnz
mov
mov
je
loopne
jae
xchg
adc
mov
push
push
ds
aas
push
ja
and
cld
dec
in
xchg
enter
add
ffree
stc
jge
in
repnz
mov
and
mov
inc
inc
inc
int
jp
je
jns
jb
mov
push
sub
cmp
pop
enterw
jno
in
xchg
test
ja
mov
mov
sahf
cmpsl
fwait
mov
adc
xchg
xor
fbstp
mov
push
cmc
xchg
sbb
lods
mov
inc
mov
mov
sbb
les
xchg
sbb
test
stos
lahf
mov
xor
out
inc
add
push
in
mov
mov
test
push
jo
mov
aam
sti
or
cmp
rcrb
ds
inc
dec
xchg
mov
xor
cmpsl
fnstcw
add
dec
subb
sahf
mov
push
repnz
negb
cmp
cmp
push
aaa
jb
in
mov
mov
out
and
popa
test
add
lret
mov
aad
xor
jne
hlt
loop
stos
fadds
je
cmpsl
repnz
adc
stos
jle
sarl
adc
out
pop
and
xchg
adc
mov
cmp
xchg
jp
rolb
pushf
add
aas
push
adc
out
pop
cli
jno
lret
frstor
loope
push
push
test
sbb
fdivl
dec
push
cmp
insb
push
add
xor
push
mov
inc
fcompl
dec
shrl
sbb
lods
mull
icebp
out
push
inc
dec
rorb
add
test
je
cwtl
scas
pop
xor
cmp
cwtl
xor
sbbl
das
pushf
xlat
mov
inc
pushw
cmp
sub
shlb
enter
add
push
xlat
xchg
cmp
sub
fisubrl
xor
arpl
sub
mov
sti
sahf
mov
fisubrs
xchg
dec
cld
xchg
stos
gs
stos
inc
xchg
shrb
lds
xor
xchg
mov
cmp
xchg
mov
mov
cmp
add
inc
stos
or
inc
cmp
cld
stos
imul
std
dec
test
and
jae
repnz
scas
sub
and
sarl
and
mov
or
sbb
jo
add
inc
pushf
push
push
arpl
add
loop
adc
adc
leave
imull
repnz
test
add
cmp
shlb
imul
mull
stc
xchg
pop
loopne
std
scas
xchg
mov
mov
or
cli
in
cmpsl
es
das
adc
mov
sub
jno
sti
push
mov
dec
mov
xchg
jbe
dec
stc
jo
mov
and
jno
xor
test
ljmp
jnp
int3
adc
in
punpckhwd
pop
jg
push
cltd
or
xor
cs
shll
ret
loop
popa
out
xchg
out
imul
inc
add
in
sti
xchg
adc
cmpsb
pop
inc
xor
xchg
sahf
scas
das
out
mov
push
ret
mov
push
pop
xor
fldl
sub
pop
mov
test
adc
aaa
popa
cwtl
sbb
mov
and
aad
pop
dec
setg
repz
mov
shll
test
mov
dec
mov
xchg
jmp
cmc
dec
rorb
sbb
inc
xor
xchg
ds
cmp
push
lcall
mov
and
testl
mov
int
sbb
fimull
lahf
loope
lahf
mov
add
jns
nop
nop
cmp
pop
imull
push
in
in
stos
push
pop
sub
lods
xor
xchg
call
mov
xchg
mov
repz
xlat
test
push
ret
xor
rcrl
mov
sub
push
xchg
and
lods
mov
aas
dec
mov
jmp
int
sub
std
xor
popf
mov
nop
mov
mov
inc
push
movb
clc
call
loop
inc
popl
jnp
xchg
lcall
sub
ds
js
flds
sub
sub
pushf
inc
leave
xor
fdivs
sub
dec
xor
sbb
ja
jecxz
and
jnp
stc
loop,pt
in
notl
sbb
fstps
insb
jg
xchg
push
pusha
sub
out
xorb
repz
or
xchg
mov
jmp
cmpl
dec
pop
je
xchg
in
addr16
push
js
xor
mov
and
aaa
fcoml
pop
hlt
test
daa
xchg
xlat
pop
rol
xor
sbb
repnz
dec
out
xorb
push
iret
jnp
jns
sub
arpl
scas
sti
dec
cmp
xor
outsb
leave
ljmp
mov
cmp
mov
inc
and
inc
push
hlt
loope
inc
repz
pop
dec
sbb
stc
push
cmp
pop
push
or
push
inc
and
shrl
lods
sub
lods
add
xor
sahf
aas
mov
xor
mov
lea
lods
push
push
inc
sub
ds
add
push
jne
push
dec
mov
or
pop
sub
and
jno
xor
lahf
xchg
in
mov
test
cs
lahf
xchg
mov
cmp
inc
dec
xor
cltd
push
fisubs
xchg
mov
push
shll
jle
push
xchg
ljmp
pop
inc
into
loop
addr16
add
adcb
rcll
and
hlt
pop
call
cmp
shl
cmpsl
icebp
sub
mov
pop
push
mov
sbb
push
xchg
mov
pusha
jne
xor
test
hlt
imul
or
leave
dec
xchg
iret
fbld
add
jl
xor
mov
movsb
mov
adc
ror
outsl
cmp
int3
xlat
jle
in
stos
sub
jo
fdivrl
pop
sar
in
dec
push
shr
jno
jns
dec
jns
add
popa
mov
shl
fidivrl
mov
fucom
roll
xlat
fdivl
mov
jo
xchg
mov
mov
jp
adc
or
mov
and
dec
inc
adc
jg
sub
call
test
aad
cmpsb
out
mov
gs
insb
andb
mov
jbe
dec
and
pop
fst
sub
xor
and
iret
sbb
sub
int
popa
bound
mov
sahf
push
ds
cmp
jnp
mov
push
insb
dec
pop
or
mov
roll
and
mov
xchg
xor
mov
jbe
pop
pop
cmpsb
jb
xchg
int
movsl
scas
jnp
xchg
push
sub
pop
ret
shlb
pop
daa
and
movsb
pushf
outsl
sub
xchg
mov
das
repz
xor
or
loop
pop
ret
out
pop
nop
stos
je
push
div
leave
lahf
inc
jb
cmc
stc
rcll
cli
xchg
cmc
bound
fidivs
push
jl
lods
push
decl
imulb
pop
push
and
mov
xchg
ret
out
icebp
sub
sar
mov
sbb
loop
cwtl
jnp
mov
dec
das
push
pop
jae
and
fs
mov
pop
jns
xchg
lahf
mov
pop
adcb
xor
cltd
inc
je
adc
pop
sub
mov
mov
outsl
sub
out
repnz
and
push
pop
and
les
fwait
imul
ss
adc
cmpsb
or
in
ja
cmc
out
push
dec
mov
adc
cltd
cs
es
repz
popf
outsb
sbb
push
push
aas
mov
pop
insl
jnp
imul
out
sbb
fists
stc
jnp
sbb
sub
mov
insl
pop
call
jns
adc
pop
dec
ret
fsubrl
xor
push
cmp
inc
test
lock
jns
push
aad
jg
shlb
mov
cmpsb
out
nop
bound
testl
mov
or
cmpsl
push
mov
add
inc
jne
xor
jmp
add
cwtl
imul
pop
fnstenv
bound
fsubs
imul
fwait
push
into
push
fwait
xchg
xchg
add
push
movsl
jns
nop
shrl
rcll
and
mov
mov
pop
adcl
jle
push
xchg
mov
or
mov
int3
pop
mov
xor
pop
lret
test
xchg
insb
add
add
xor
inc
xchg
cld
arpl
mov
xor
mov
imul
mov
loop
test
ljmp
test
pop
shlb
add
jmp
dec
push
mov
add
bound
popa
xor
enter
mov
out
xor
jl
mov
push
out
cld
jo
cmpsb
xorb
and
jbe
jp
cwtl
fimuls
push
sub
inc
dec
aaa
hlt
sbb
dec
mov
leave
pop
mov
jae
lock
or
inc
pop
inc
fildl
pop
cmp
addr16
aad
and
insb
dec
ds
push
xlat
ret
and
out
sub
in
orl
push
sub
lock
lock
push
dec
adc
mov
mov
sbb
mov
cs
fidivrl
imul
fmull
subl
sti
aaa
xor
imul
push
and
or
loope
fs
in
push
je
nop
mov
jns
or
dec
andb
subl
outsb
out
adc
aaa
sub
loope
mov
inc
inc
ret
loopne
sbb
and
inc
xchg
sbb
dec
negb
inc
xlat
mov
ss
and
jle
dec
cmpsb
daa
loope
insb
xor
push
add
jle
sub
jbe
xchg
or
clc
inc
pop
xor
fnstsw
and
inc
pop
test
fcmovnbe
mov
into
lret
xor
insb
push
movl
stc
push
nop
clc
pop
cmp
pop
in
lock
dec
or
daa
cmp
cs
out
nop
dec
fcomps
loope
push
sub
xor
shlb
pop
push
jge
in
jae
add
and
pop
add
scas
pop
pop
add
jb
in
data16
insb
jo
push
pop
and
outsb
fstpt
xchg
mov
mov
sub
xor
cld
xor
sub
xor
jmp
jno
leave
gs
jae
outsb
mov
sub
lret
stos
adc
or
sbb
push
cwtl
add
xor
mov
cmp
sub
sbbl
fstl
arpl
insl
stos
fwait
stos
repnz
pop
mov
sbb
sarb
add
inc
add
into
aam
in
jecxz
jle
pop
push
add
mov
lcall
sbb
stos
sub
and
scas
leave
mov
fsubl
repz
dec
push
adcb
ja
and
icebp
sub
add
rep
leave
das
aad
mov
xor
push
cli
jnp
add
push
inc
or
cwtl
imul
cmp
das
jmp
add
lcall
clc
push
xor
sti
addr16
scas
rep
stos
fcomp
pop
ret
scas
loopne
pusha
xchg
out
fpatan
es
iret
push
repnz
fidivs
in
push
lods
adc
js
dec
xchg
aad
lds
jecxz
and
mov
pop
jbe
es
jle
fcomps
inc
pop
in
cli
push
xchg
dec
fdivrs
test
add
shll
or
stc
add
movsl
push
iret
lock
inc
testl
push
sub
dec
ljmp
pop
test
mov
add
fsts
shlb
lods
or
insb
jb
cwtl
inc
mov
lds
cmp
fwait
lds
je
mov
dec
into
xor
idivl
dec
mov
lret
pushf
lahf
add
sbb
je
les
sub
repz
pop
sbb
dec
dec
push
dec
mov
into
andl
fcomi
jmp
sahf
add
test
cmpsb
adc
dec
sbbl
idivl
pop
fnstsw
mov
xlat
nop
add
ja
cmp
adcl
popf
jp
je
das
mov
push
sub
jns
push
rcl
or
std
cmp
lods
xchg
sbb
loop
ds
insb
inc
popf
xchg
jb
mov
fistpll
repz
outsl
stos
cmp
inc
sbb
xor
mov
adc
cltd
test
mov
xchg
shl
into
scas
sub
pusha
sub
add
inc
xchg
shlb
cwtl
or
xor
ja
or
xor
mov
mov
call
xchg
adc
mov
jl
clc
mov
push
cmpsl
xorl
sbb
daa
jl
nop
mov
or
sbb
dec
xor
jle
sub
pop
xor
fidivs
es
fwait
in
cmp
xor
filds
xchg
jne
cwtl
int3
daa
mov
mov
outsl
sbb
pop
jo
xchg
aas
sbb
push
test
in
mov
xor
mov
loopne
in
or
xchg
lea
jmp
cld
test
outsb
addb
inc
adc
in
outsl
lahf
mov
test
and
sub
mov
inc
mov
cmpsb
adc
add
rclb
mov
pop
mov
mov
or
mov
mov
addr16
jb
pushf
rcrl
xchg
pop
out
mov
wbinvd
sbb
lret
xorb
adc
test
lret
cmp
jg
push
mov
outsb
mov
pop
pop
setb
std
addr16
jecxz
adc
dec
icebp
rcll
mov
jg
mov
outsb
imulb
imul
pop
push
mov
loop
push
mov
ret
aam
xchg
or
inc
xchg
sbb
es
mov
push
pop
fwait
sbb
lods
adc
jnp
mov
rcl
shlb
idivl
jl
ss
push
jne
out
pop
hlt
sbb
mull
mov
sti
dec
fucomp
mov
aam
fadd
sbb
sub
outsl
fstps
or
out
xchg
js
aam
out
into
mov
mov
test
jns
int3
nop
xor
jmp
or
mov
pop
xor
pop
push
mov
mov
flds
mov
out
loope
call
and
jo
mov
push
and
mov
aaa
or
std
std
outsl
idivb
mov
fmul
or
sub
jge
test
sti
les
fisubrl
jne
fbld
je
mov
push
insb
xor
add
mov
cmp
out
fists
dec
mov
cltd
xchg
xchg
add
push
lods
out
sbbl
mull
into
insl
sub
pop
lock
adc
mov
sbb
imul
mov
or
cmovb
jecxz
mov
mov
std
inc
pop
pop
jbe
loopne
sbb
shrl
dec
push
jp
test
cmp
setge
xlat
push
addr16
sbb
outsb
adc
cwtl
sarl
cmp
push
mov
add
pop
cmp
les
es
jb
dec
mov
dec
test
push
lods
pop
mov
stc
orb
outsl
push
aad
in
pop
fucompp
and
mov
xchg
xchg
notb
in
push
mov
and
fucom
sbb
arpl
inc
push
xlat
pop
roll
in
leave
ret
add
xchg
adc
mov
pusha
arpl
cld
cld
fucomp
lods
dec
test
mov
out
push
lcall
shrl
insb
or
inc
dec
cmp
shl
mov
jge
ljmp
add
sbb
inc
inc
in
enter
inc
ret
icebp
ds
clc
dec
maskmovq
imull
mov
dec
add
pop
or
mov
mov
outsb
push
push
push
mov
jnp
sub
cs
lret
addr16
push
ds
xor
mov
in
mov
push
in
push
mov
arpl
mov
sub
repnz
ljmp
jl
or
jecxz
mov
push
jp
sub
push
and
cli
imul
bound
fst
mov
cmp
sbb
stos
shl
add
js
enter
push
push
stos
xchg
leave
push
lret
cld
loop
mov
sub
xchg
outsb
mov
stc
inc
pop
cmp
jb
jl
push
cwtl
in
mov
push
dec
ja
dec
das
insb
jno
jo
and
cmc
inc
dec
pop
pop
das
mov
lods
inc
and
sub
scas
fwait
pushw
mov
int
xor
bound
lea
mov
out
inc
fs
dec
push
divl
es
sub
mov
jge
in
jecxz
insl
popf
test
jg
pop
lds
in
mov
or
or
fcomip
imul
xorb
test
jmp
mov
iret
add
dec
and
insb
xor
mov
sub
ljmp
sub
mov
mov
sbb
adc
mov
inc
xchg
jae
sub
aas
scas
or
inc
bnd
mov
jns
xor
int
rorb
or
rcr
sub
jbe
popf
frstor
xchg
xlat
notb
repz
pop
and
outsb
ds
imul
cmp
pop
and
xchg
pop
mov
push
loopne
and
lds
cmp
inc
into
jb
rolb
push
nop
jne
xlat
xor
enter
rsqrtps
push
inc
sub
xor
repz
jb
push
push
shll
nop
push
in
rorb
jns
and
rclb
inc
mov
sti
xchg
out
pop
adc
jno
mov
stos
jne
or
xchg
repnz
pop
mov
das
xor
add
stc
out
mov
adc
fadd
cmp
ss
sub
push
mov
adc
sub
jno
stos
xor
xchg
and
test
inc
pusha
mov
xor
enter
incb
out
das
mov
aas
jb
adc
jns
rorb
adc
and
and
inc
and
adc
mov
addr16
outsl
rclb
or
nop
mov
dec
in
or
je
or
mov
dec
fst
test
push
pop
loop
repz
push
cmp
lcall
hlt
sahf
fs
cmc
clc
mov
add
mov
movsl
ror
in
mov
xchg
inc
insl
popf
cltd
mov
ds
or
cmc
out
mov
push
xchg
sub
dec
add
stos
sub
and
addr16
repnz
insb
arpl
jno
adc
push
sbb
aas
ret
mov
jne
ss
cmpsb
sub
and
lret
cmp
lret
fnsave
arpl
imul
stos
pop
jno
dec
mov
imul
mov
xchg
dec
enter
adc
in
mov
inc
outsb
sti
push
xchg
adc
js
jno
adc
pop
mov
aam
push
vpsrad
and
jb
or
mov
dec
imul
loope
adc
std
pusha
dec
movsb
push
paddusw
sbb
jg
pop
cmpsb
cmp
push
mov
inc
sub
push
shll
mov
sbb
cltd
push
xor
stos
add
sbb
mov
adc
and
sub
sbb
fmull
sbb
xor
xchg
mov
into
adc
xchg
rolb
aas
mov
aad
repnz
sarl
into
int
xlat
sub
jge
cmp
repnz
adcl
mov
cmpsb
mov
nop
mov
xchg
mov
arpl
test
dec
mov
and
das
roll
xor
sub
push
out
cmp
insb
test
xchg
int
iret
aaa
mov
rcll
ljmp
lret
jb
sub
xor
push
sub
jno
lock
int
cmp
mov
push
loopne
and
faddp
shrb
mov
and
and
imul
push
int3
incb
xlat
aas
dec
or
mov
mov
mov
xchg
mov
lods
loop
scas
leave
sti
cmp
outsl
jb
adc
cmp
jl
scas
cmpb
jae
mov
pop
lods
dec
or
mov
stc
xor
push
iret
pop
test
mov
fsubs
int
pop
cmc
aad
pop
lcall
outsb
add
out
push
lea
pop
aam
xchg
dec
ljmp
push
dec
push
jb
in
push
fchs
cmp
test
lret
adc
ret
aaa
dec
lahf
sbb
ljmp
push
cs
icebp
daa
mov
push
pop
mov
in
bound
add
cs
dec
xchg
sub
mov
push
imul
jg
imul
ds
rolb
repz
jmp
mov
insl
arpl
mov
js
inc
inc
sub
mov
rorl
aad
dec
mov
cmovae
mul
sub
out
out
cmpsl
rorl
push
call
js,pt
xchg
clc
adc
cmpsl
pop
xchg
sbb
xchg
dec
inc
popf
aas
lahf
jmp
ficompl
sbbb
sbb
xor
push
movsl
lret
push
lret
dec
sbb
imul
clc
sbb
fcomps
ret
test
sbb
fbstp
jnp
mov
mov
add
dec
test
fmull
insb
mov
adc
aaa
or
mov
adc
clc
test
das
scas
int3
jle
mov
sbb
mov
xchg
cwtl
jmp
pop
dec
adc
sti
les
or
mov
es
aam
xchg
fnsave
pusha
rolb
push
ljmp
ret
pop
push
lock
daa
cwtl
das
or
xor
shll
orb
push
sub
push
jmp
mulb
dec
xor
pop
jg
mov
lret
sub
test
es
lret
sarb
jnp
negl
jo
insl
ret
xor
test
testb
insb
ror
repz
jnp
scas
lcall
mov
cmp
lods
and
ret
mov
add
sbbl
les
fisubrl
push
stos
xor
pop
inc
out
leave
xor
outsb
fbld
xor
inc
int3
sbb
dec
enter
push
and
sbb
fwait
add
loopne
and
enter
mov
shll
aam
mov
shlb
adc
adc
pop
jmp
shlb
xchg
jo
jae
loop
shlb
dec
bsf
pop
xor
fdivl
add
bound
popa
fs
stos
outsl
or
out
ljmp
test
negb
push
sbb
notb
aas
pop
pop
sub
lret
adc
lea
or
cmp
add
scas
fldl
or
std
mov
or
xchg
and
xlat
mov
pusha
std
orb
movlps
shl
js
mov
sahf
sbb
cmc
dec
insb
push
test
into
jae
mov
xchg
push
movsl
jnp
lahf
mov
xor
mov
cmp
sbb
test
cwtl
out
and
lea
ret
pop
and
arpl
das
and
cmp
popa
pop
cmpsl
loopne
test
out
aam
xlat
xchg
cmp
pushf
movsb
in
lods
push
lret
ja
pop
lret
fcoms
loopne
sub
int3
xor
orb
push
mov
call
add
sub
outsb
fldcw
popa
mov
into
sbbl
mov
ret
pop
pop
add
inc
push
sbb
push
icebp
pop
or
lods
movsl
xchg
mov
cs
or
sbb
pop
iret
push
or
arpl
lret
mov
cmpsb
sbb
mov
dec
sub
mov
pop
push
fcoms
ret
jmp
xlat
push
sbb
insl
and
cmp
inc
lcall
ret
inc
xor
dec
xorb
xor
lods
cmpsb
xchg
add
jbe
sti
test
aam
inc
xchg
cmc
incb
movsl
out
imul
loopne
in
icebp
cmp
insl
adc
aas
scas
in
testl
test
push
rep
xchg
xor
pushf
mov
jb
add
cmpsb
cwtl
call
aaa
add
ds
push
aas
mov
and
jmp
mull
in
mov
or
inc
pop
clc
jns
sbb
into
mov
and
mov
in
fistpll
out
sti
adc
fxch
and
je
mov
mov
outsl
or
push
push
in
jb
scas
ss
jecxz
inc
out
in
sub
cmp
adc
dec
inc
mov
ljmp
jns
inc
jge
leave
and
mov
ljmp
xor
lret
jecxz
mov
addr16
aaa
nop
std
jmp
outsb
sub
xchg
sarl
xor
in
js
add
stos
icebp
addr16
cwtl
in
cwtl
test
and
mov
mov
cmp
push
xor
test
insb
cwtl
sbb
pop
cli
loopne
push
jo
and
xchg
jp
and
xchg
cmc
pop
push
outsb
mov
push
fs
jmp
and
frstor
inc
and
mov
pushf
mov
repz
or
cmp
pop
or
jbe
xchg
cmpb
loop
sbbb
clc
cli
aam
xchg
pop
jne
jp
in
insl
xchg
sub
or
jo
in
xor
push
ds
lock
in
dec
pushf
add
xchg
lret
push
popf
sbb
mov
pop
dec
push
adc
int3
inc
fwait
aam
int
testb
sbb
shl
test
shll
ficoms
xchg
and
filds
and
push
rcrl
js
jge,pt
imul
xchg
fnsave
mov
xor
movsb
push
lret
add
mov
icebp
dec
xor
add
add
call
mov
or
in
add
icebp
loopne
inc
aam
or
mov
add
jg
or
sarl
add
sbb
arpl
fstps
pop
movsl
adc
ret
std
pushf
and
stos
cld
mov
push
nop
pop
aad
fnstcw
jne
and
pop
and
mov
and
dec
and
dec
mov
xlat
pusha
mov
popf
mov
pop
movaps
push
lret
mov
or
jne
mov
nop
mov
sbb
cli
addb
jne
adc
cmp
adc
cmp
mov
lahf
out
loopne
sub
mov
fldln2
sub
pusha
add
sub
data16
mov
xor
inc
pop
jne
and
push
and
scas
mov
fdivrs
jle
popa
lods
jns
sbb
push
repnz
mov
into
pop
sub
mov
sub
cmp
mov
push
cmp
pushf
dec
ljmp
push
xor
pop
imul
sti
add
cmpsb
dec
adc
outsb
xchg
jbe
les
movsl
add
pop
je
or
je
fcomps
shrb
mov
jge
lahf
shll
out
cmp
sbbb
clc
fs
and
flds
je
out
das
mov
jecxz
sub
lods
xlat
push
js
adc
jno
cwtl
movsb
mov
movsb
push
repnz
sbb
pop
xchg
xchg
cmc
insl
cltd
out
iret
xchg
scas
repz
loop
ds
mov
mov
cmp
inc
mov
mov
push
mov
inc
push
cmovle
dec
hlt
divl
jecxz
gs
sahf
lods
in
rolb
gs
jb
jnp
stos
sub
add
xlat
clc
xchg
pop
js
cmp
repz
pop
sub
push
or
or
rcrl
mov
loopne
mov
fisubrs
dec
adc
inc
fldenv
insl
fsubrp
mov
lds
and
add
jae
in
inc
push
xchg
jnp
mov
cmpl
push
lds
inc
and
pop
and
mov
mov
jbe
mov
adc
lret
cmpsb
pusha
popa
mov
sub
dec
out
sub
outsb
sub
xor
stos
and
rorb
push
dec
outsl
add
push
xorb
pop
lret
jnp
dec
push
mov
cmp
fcmovbe
pop
jno
xchg
rorb
in
sub
pushf
daa
mov
mov
mov
cmp
and
and
movsl
lahf
ror
es
sbb
xchg
mov
lods
lods
sahf
or
test
jge
push
repz
pop
inc
sarb
inc
and
or
aad
mov
sub
dec
mov
push
dec
mov
adc
popa
mov
or
push
call
mov
hlt
pop
lahf
jge
push
sbb
sub
and
ja
inc
pop
or
shl
pop
add
jne
mov
inc
sbb
xchg
push
mov
fdivrl
loope
jg
pop
test
fistps
loopne
mov
fcompl
add
daa
out
into
xor
sahf
push
push
lret
xchg
cli
cli
mov
pop
insl
fwait
test
sti
jne
sti
xor
xorb
rorb
lea
mov
imul
cli
ret
aas
lock
mov
mov
mov
hlt
sbb
or
sbb
inc
mov
xor
pushf
and
fistpll
sub
inc
add
or
jmp
mov
push
push
cmp
cmp
xlat
mov
subb
negb
lock
mov
call
cli
mov
mov
clc
jb
adc
or
fstpt
aad
xchg
or
pusha
adc
lods
sbb
not
adc
jae
push
adc
jle
test
sbb
xchg
adc
aaa
fnsave
add
add
mov
mov
je
mov
and
sbb
in
mov
cmpsb
outsl
scas
lock
fistpll
inc
sub
sub
mov
outsl
mov
jae
fildll
mov
sub
loopne
aaa
fpatan
inc
xchg
fcomps
sbb
jno
push
sub
mov
bound
gs
loopne
icebp
scas
mov
cmp
nop
lods
sarl
adc
and
pop
cwtl
loopne
bound
push
mov
sub
daa
adc
in
xor
jno
sbb
data16
ss
in
fsubl
mov
mov
movsl
cld
nop
imul
sbb
shl
push
fs
cmp
jns
adc
cmc
ret
mov
inc
out
cltd
adc
inc
mov
cwtl
mov
push
int3
test
xor
movsb
push
sbb
jge
sbb
movsl
testb
xchg
mov
inc
jo
shrl
orb
add
jle
outsb
dec
cmp
mov
movsb
das
mov
in
inc
mov
jb
leave
hlt
adc
jl
dec
loope
mov
fldt
sarb
popf
cli
cld
inc
pop
or
and
je
aam
ret
jmp
push
inc
test
pop
enter
jae
hlt
inc
dec
into
repz
pop
pop
lea
mulb
loopne
into
jbe
push
lahf
jne
xlat
scas
dec
sub
add
push
shll
jp
jae
or
test
int3
pop
popa
add
or
in
fildll
rorb
mov
dec
push
pusha
dec
mov
idiv
or
xchg
xchg
jmp
jp
sbb
adc
shlb
aad
pop
imul
lret
xchg
imul
insb
insl
sub
adc
mov
and
fisubs
cmovno
fcompl
repnz
out
push
pop
add
xorb
push
dec
mov
mov
push
arpl
jp
xor
xchg
pushf
mov
leave
pop
ss
arpl
scas
movsb
aaa
mov
push
or
in
xor
mov
in
lock
and
add
and
mov
mov
aad
stos
iret
xchg
jo
aam
pop
xchg
jle
mov
out
xor
pop
and
fmuls
jae
lods
add
mov
into
push
pusha
lret
adc
jbe
mov
inc
xchg
ret
mov
rolb
stos
loop
mov
dec
mov
add
add
push
adc
mov
fnsave
ret
pushf
or
xchg
dec
dec
xchg
mov
jno
cmp
outsl
xor
xor
jg
mov
out
lock
andb
outsb
add
xor
xchg
sbbb
mov
cmc
stos
mov
pusha
bound
or
shlb
sub
gs
push
inc
mov
js
xlat
sbb
jp
in
into
mov
sbb
dec
mov
and
aas
clc
mov
cs
ret
xorb
xchg
add
jecxz
add
pop
pop
aas
enter
or
out
sub
mov
ss
dec
sbb
enter
add
rorl
mov
aas
jns
mov
insb
imul
adc
pop
cmpsb
mov
cmp
or
mov
lods
cmpsl
mov
inc
xchg
sbb
ljmp
data16
stc
stos
add
pop
and
stos
or
sbb
jmp
sbb
lds
nop
cli
mov
stc
and
sbb
out
sub
leave
out
and
and
add
ja
cmp
xor
mov
cmc
pop
xor
inc
cmp
mov
loopne
mov
lcall
scas
push
repnz
jecxz
jae
lret
add
and
inc
and
xchg
cmp
mov
inc
pusha
xor
pop
int
jb
inc
lcall
pop
mov
sbbl
lock
or
das
test
les
mov
loopne
xor
pop
scas
sub
jecxz
xlat
cwtl
pop
inc
lahf
mov
outsb
dec
arpl
push
push
pop
mov
cmpl
pop
mov
loope
mov
mov
push
in
icebp
pop
push
cmp
dec
std
mov
sbb
pop
xlat
jg
sarl
dec
mov
jne
aad
xor
push
xchg
pop
aad
inc
movsb
mov
mov
in
mov
sub
shrl
sbb
imul
outsl
xlat
mov
mov
sarl
push
sbb
mov
insb
testl
sub
mov
ret
popa
mov
mov
inc
xor
mov
cs
icebp
jno
out
and
pop
mov
adc
rcrb
lea
jns
pop
cmp
add
mov
mov
jmp
out
test
mov
xchg
fimull
inc
adc
inc
xchg
cmp
nop
bound
xchg
stc
adc
sbb
mov
iret
mov
repnz
push
adc
lret
faddl
out
jmp
into
mov
lock
or
in
loope
test
iretw
stos
or
sub
repnz
sbb
dec
mov
inc
ss
pop
je
enter
adc
rcll
cmp
in
testl
subl
mov
or
jnp
push
jb
cld
cmp
sar
xchg
jae
xorl
ret
xchg
adc
push
add
sub
inc
dec
enter
pop
cltd
adc
clc
push
jne
inc
push
pop
sti
pop
dec
in
test
and
in
sub
pushl
ja
jo
sti
xchg
xor
cmp
jl
outsl
push
js
int3
rcrb
mov
or
test
mov
mov
out
pop
out
xor
push
fldcw
inc
faddl
aad
pop
xchg
in
popf
push
outsb
pushf
fstp
mov
stc
adc
and
dec
rcrl
addr16
sub
push
sub
mov
int
shll
push
sbb
mov
adc
add
lds
cmp
call
rcrl
cmpsl
rclb
mov
cmp
orb
mov
mov
cmp
out
out
test
jne
cmp
dec
idivl
adc
out
bound
dec
push
or
and
xchg
shlb
mov
add
sub
add
pop
xor
fcmovnb
test
insb
jmp
testl
adc
jae
test
daa
dec
repnz
cmpsl
loop
out
xchg
jno
test
into
xchg
pop
fwait
cmp
repnz
cmp
jno
pop
loope
mov
jl
lock
mov
pusha
add
push
int3
push
adc
mov
and
adc
push
mov
mov
push
mov
jg
xchg
out
jns
stos
jle
inc
repz
sub
movsb
icebp
into
push
mov
shrb
mov
push
into
andb
test
push
nop
dec
pushl
enter
repz
insl
push
cld
mov
sbb
inc
dec
or
mov
stos
and
push
test
xor
inc
aam
mov
jne
push
add
xchg
pop
icebp
push
mov
xor
or
jge
xchg
mov
xor
cld
in
ljmp
testl
jnp
popf
pop
dec
lea
push
xchg
mov
add
mov
xor
stc
cmp
push
enter
scas
add
inc
cmp
add
add
mov
mov
inc
inc
fcmovbe
mov
imul
add
lods
or
and
push
loopne
daa
sahf
adc
push
fs
jg
aaa
fwait
jge,pt
or
or
repz
loop
sbb
out
in
jnp
in
pop
jnp
or
mov
je
popa
mov
setns
in
inc
mov
icebp
fstpt
iret
add
push
cli
in
movsb
enter
xlat
cmp
cmpb
dec
and
jno
jl
mov
lods
adc
dec
adc
or
cli
mov
jo
mov
into
cwtl
push
hlt
dec
xor
int
lcall
pop
xchg
lcall
sar
fcompl
push
cmp
imul
xor
xchg
push
test
lods
in
sbb
inc
outsl
out
imul
int3
clc
xor
xor
or
fldenv
lret
nop
push
sti
out
mov
pop
hlt
pop
call
imul
out
jne
scas
inc
add
cmp
mov
jmp
cmpsl
add
jo
mov
sar
push
xchg
add
pushf
xchg
xchg
or
cmpsb
test
shl
dec
into
jle,pt
shl
jle
xchg
fidivl
mov
add
std
xchg
push
test
arpl
outsl
and
fwait
dec
sahf
sbb
xchg
cmc
jnp
add
sub
xchg
lods
shlb
std
test
mov
outsl
leave
into
sbb
ljmp
test
mull
fnstenv
icebp
in
pusha
jne
sbb
mov
mulps
cmc
clc
sbb
jb
pop
mov
or
or
mov
into
cmpsb
jbe
sbb
aaa
jne
outsb
es
jbe
mov
inc
push
mov
fs
xchg
repnz
adcl
jae
add
fwait
enter
into
into
je
in
xchg
andl
das
sbb
xchg
mov
iret
inc
pop
adc
in
cmp
add
lods
jg
out
aad
les
insl
mov
imul
nop
push
push
push
jmp
xchg
das
adc
push
and
jmp
stos
jb
dec
sub
inc
jl
xor
stos
and
xchg
jecxz
push
mov
push
mov
cmc
insl
pop
test
mov
loope
xor
dec
push
fs
xchg
int3
in
push
jecxz
sbb
xchg
mov
shrb
inc
and
mov
inc
mov
pusha
rcrb
popa
call
push
mov
mov
int3
aam
repz
dec
lock
sarl
add
mov
outsl
mov
adc
popf
push
cwtl
xchg
jp
aas
push
adc
fcomi
lods
in
mov
movsb
dec
js
and
and
jecxz
dec
maskmovq
idivl
mov
scas
int3
icebp
jmp
pusha
adc
pop
lret
push
xor
sahf
jmp
mov
std
rorl
push
sub
sub
or
mov
push
or
data16
mov
fwait
outsl
aas
inc
and
cmp
mov
or
xchg
and
roll
fstpt
shrl
add
sbb
mov
xor
inc
cmp
mov
add
xlat
xor
loope
or
xchg
pop
xchg
clts
xchg
and
dec
inc
aam
adc
jg
call
push
mov
fcoms
decb
jns
xor
stos
negb
outsb
add
mov
test
dec
push
hlt
je
and
cmp
cli
mov
jmp
outsl
or
frstor
ret
sub
insl
mov
fcmovne
outsb
pusha
adc
cltd
outsl
fdivrl
jmp
fwait
dec
mov
or
fadds
adc
hlt
mov
xchg
mov
ss
mov
cs
push
js
cmpl
xchg
jl
mov
cmpsb
rcr
sar
dec
pop
stos
jecxz
and
ss
std
lods
mov
push
jp
push
pop
fisttps
or
sbb
sbb
cmp
ja
in
pop
sbb
cmp
fwait
inc
test
fidivl
dec
add
xchg
mov
mov
mov
ljmp
jge
scas
cmp
es
pop
mov
xlat
stos
or
jno
sub
loopne
inc
testl
dec
or
add
ret
push
adc
sbb
loopne
adc
scas
adcb
inc
ret
ja
fsts
mov
lcall
lds
ljmp
cmpsb
sub
jae
inc
add
jns
push
ficoml
or
sbb
jb
cltd
lock
lcall
sbb
sbb
movhps
or
jge
jo
shl
out
and
dec
fs
lret
popf
sbb
jecxz
aam
pushf
push
movsb
lods
mov
scas
mov
subl
int3
std
mov
xor
fs
cli
pop
mov
add
sub
mov
movsb
test
dec
jae
mov
hlt
xchg
out
sbb
pop
rcl
orl
mov
filds
sbb
jo
sub
and
adc
jecxz
int3
push
shlb
and
fwait
lock
inc
add
sbb
inc
sbb
test
push
jle
fucomip
dec
xchg
adc
notl
lock
in
cmp
aam
gs
aad
negl
sarl
and
cmp
jmp
cmp
xor
sarl
mov
bound
pop
cmp
sbb
adcl
rolb
jns
xchg
out
mov
nop
add
lods
push
adc
clc
lahf
stos
pop
sbb
inc
xor
daa
inc
push
imul
cmp
movsb
add
and
and
jp
pop
sub
je
into
sub
ja
cld
arpl
push
adc
fsubr
cmp
mov
inc
daa
dec
ret
lahf
int3
dec
add
cmp
sbb
ja
loopne
cld
es
adc
cld
enter
inc
or
sub
fs
pop
int
jae
mov
arpl
and
fcompl
jmp
lds
scas
xlat
sub
xor
sbb
sub
add
and
insb
lds
mov
mov
xchg
xchg
imul
je
sub
js
mov
inc
sti
std
out
xor
bound
call
into
pop
movsl
pop
mov
push
dec
pop
sahf
or
mov
add
adc
push
ja
ror
mov
imul
sbb
inc
sub
mov
or
add
add
cmp
push
mov
mov
cmc
xlat
xchg
mov
inc
cltd
pushf
jnp
pop
pushf
sbb
xchg
jl
xchg
mov
ds
inc
iret
test
cmc
mov
xchg
cld
mov
sbb
adc
ss
lret
cltd
lret
pop
imul
ljmp
and
lods
fmulp
iret
jno
lods
lret
fs
pop
test
cli
push
adc
mov
add
mov
inc
mov
xlat
xor
pextrw
push
sub
push
mov
rorb
fisttpl
test
dec
and
movsl
int3
popa
cwtl
xor
mov
adc
in
lret
xor
je
xchg
icebp
sahf
xchg
cmpsl
pop
rcll
in
mov
dec
inc
dec
xor
insl
int3
scas
hlt
mov
stos
jle
push
fstl
push
popf
in
das
xchg
sbb
fstps
out
loope
jbe
mov
jle
pop
mov
lea
pushf
xor
aam
sub
adc
jle
push
cmc
mov
in
mov
xchg
sti
xlat
sarb
fidivl
mov
inc
jbe
inc
cs
dec
xchg
fs
stos
daa
inc
scas
fwait
sub
push
filds
mov
sti
loop
lret
mov
cld
and
add
ret
xchg
jb
push
mov
sub
shr
push
and
loope
xor
roll
push
inc
xor
xor
push
add
notl
inc
cmpsl
and
push
xor
dec
inc
inc
jmp
popf
insb
sub
fsubrl
mov
stos
xor
xchg
sbb
add
test
lahf
mov
xor
push
jbe
into
in
inc
lcall
mov
js
shll
xchg
jg
xor
test
ret
movsl
or
pop
test
jb
aad
lods
nop
imul
mov
jae
scas
mov
inc
push
sahf
adc
inc
adc
sub
xor
pop
and
push
loop
push
jae
jnp
fs
pop
or
mov
cs
shl
loope
leave
mov
imul
test
xchg
repz
xchg
arpl
popa
mov
test
jle
fst
xchg
adc
pop
inc
and
mov
add
div
clc
pusha
mov
pop
mov
or
inc
dec
arpl
lds
popa
testl
pop
ret
int
lcall
pop
adc
xor
fnop
addl
fsubl
filds
nop
dec
mov
adc
push
mov
or
pop
mov
ss
jne
sti
imul
scas
lock
pop
cmc
addr16
jns
add
mov
mov
or
insb
cld
das
push
cmp
sbb
inc
out
mov
sbb
and
lock
push
lock
push
dec
mov
sub
push
je
out
mov
cli
sub
lods
fdivrs
push
and
and
shr
mov
mov
push
leave
out
scas
loopne
std
xchg
mov
roll
jg
pushl
jle
lahf
cmpsb
int
mov
popf
imulb
cmp
jbe
test
xchg
or
jp
fnstsw
andl
sub
test
out
push
push
cs
sbb
mov
sbb
hlt
jecxz
add
imul
leave
pushf
pop
repz
cmpsl
jl
cmp
leave
sbb
mov
pop
push
lret
mov
ja
dec
xchg
ja
movsb
pop
push
mov
mov
fcompp
mov
out
pop
mov
or
popa
and
inc
and
in
test
inc
iret
fwait
sub
sti
faddl
adc
loop
sbb
adc
pop
or
mov
rclb
push
push
push
cmp
mov
cmp
rclb
lcall
ljmp
sub
enter
inc
mov
or
cmp
xor
mov
mov
sbbb
pop
cmc
sbb
in
aas
dec
xchg
mov
push
jge
fwait
mov
mov
xchg
inc
mov
fists
cmp
lahf
dec
addl
data16
int
xor
mov
aas
lahf
mov
icebp
push
push
js
and
and
pop
pop
aas
xor
mov
call
dec
sbb
xlat
mov
insl
adc
pusha
or
cmc
mov
inc
adc
jecxz
mov
lock
cld
jne
jmp
cmpsb
pop
clc
test
mov
inc
cltd
out
shrb
enter
jecxz
jb
sub
xlat
sub
cmp
cltd
adc
mov
lret
mov
in
es
adc
in
or
sti
ret
adc
add
push
cmp
jmp
cmp
mov
filds
sti
scas
enter
mov
scas
xchg
std
insb
in
into
in
pop
add
dec
inc
dec
adc
seta
dec
sub
add
cmp
and
xlat
xor
mov
add
out
xor
test
ss
push
xchg
push
cmp
ret
adc
mull
inc
add
movsb
test
daa
and
std
inc
mov
sbb
push
jo
pop
sub
insl
xchg
or
and
mov
push
mov
mov
push
jg
xchg
sub
xor
test
adc
shr
aaa
ja
mov
jl
sbb
mov
hlt
xchg
divl
cmp
loope
add
ljmp
pop
gs
dec
sbb
jns
pop
or
push
cmp
dec
jle
dec
mov
jae
int
mov
mov
jmp
sbb
jb
inc
shrl
or
xchg
cltd
mov
xchg
testl
pop
mov
imull
dec
ja
stc
in
mov
pop
push
pop
push
xor
insb
int3
out
xchg
rcll
xlat
addr16
mov
ljmp
and
mov
jl
fs
pop
inc
mov
fisubrs
push
pop
lea
out
jae
lds
xchg
lock
jmp
insl
cltd
dec
xchg
scas
fwait
stos
xor
imul
inc
dec
mov
mov
icebp
cld
cmp
mov
mov
es
xchg
sbb
cmp
xchg
inc
cmp
push
pop
movsl
loopne
into
add
push
in
iret
ljmp
and
aaa
xor
sbb
sub
sbb
xor
push
adcb
mov
push
out
sbb
and
aam
mov
jecxz
outsl
pop
popf
daa
xchg
or
in
pop
jae
sbbl
popa
dec
and
cmp
or
test
js
push
inc
push
fmull
dec
or
jecxz
mov
mov
not
sarl
sub
pop
mov
xchg
pop
jo
fldl
nop
cmp
insl
mov
data16
xlat
mov
daa
mov
stos
les
loope
jns
cmp
aad
inc
and
push
dec
xor
sub
sub
mov
int
fs
mov
jo
int
js
rcll
inc
cli
outsb
mov
cmpsl
mov
out
sub
enter
insb
mov
pop
push
mov
pusha
in
mov
jge
mov
es
clc
les
mov
rcl
lods
xchg
rclb
mov
push
es
inc
add
dec
in
pop
pusha
lret
loope
or
mov
scas
push
or
xchg
jle
jo
pusha
test
int
sbb
mov
pop
pop
inc
ja
add
sub
ljmp
arpl
push
pusha
ffreep
jecxz
jno
daa
jb
ret
mov
mov
inc
inc
sbb
lock
cmp
xor
mov
iret
scas
popf
ja
adc
mov
roll
fbld
adc
or
ljmp
push
push
es
mov
sbb
and
lretw
lret
push
mov
out
pushf
and
fsubs
sub
scas
inc
pop
outsl
test
lock
outsb
jne
mov
inc
xor
je
cmp
bound
mov
clc
bound
dec
dec
sbb
jo
inc
xchg
rcl
xchg
and
cmp
loop
in
pop
mov
test
addr16
stc
mov
lahf
cmp
mov
lahf
ja
jl
fidivrs
mov
movsb
push
cmpsl
bound
jmp
pop
sub
inc
in
jp
adc
mov
jo
mov
test
mov
xchg
inc
push
addb
stos
cmp
push
out
ja
or
jl
xchg
pusha
jg
push
cwtl
pop
cmpsb
mov
ljmp
icebp
cmp
outsl
or
gs
leave
pop
ds
movsb
jns
xor
cmpsb
push
pop
popf
jns
inc
cmpl
imul
sbb
aas
jo
dec
mov
out
addb
lret
les
popa
int
or
lea
add
ja
call
inc
stos
sti
ja
mov
add
aam
fmul
test
xchg
mov
sti
js
into
add
fistl
jns
mov
mov
xchg
mov
cltd
push
jne
fs
xor
jne
push
mov
lret
pop
sbb
gs
add
mov
inc
scas
sub
aam
xchg
lret
fldenv
call
les
add
stos
jmp
sub
insl
les
mov
insb
fs
pop
scas
dec
mov
mov
dec
clc
outsl
inc
pop
xchg
or
enter
cmp
mov
dec
jae
pop
mov
fstps
sbb
daa
stos
repz
movb
and
repnz
cmp
outsb
stos
dec
stc
cmp
xchg
sbb
push
xchg
jnp
adc
mov
stc
mov
add
mov
jno
inc
shll
jl
arpl
sub
lret
adc
test
inc
out
sbb
into
call
sub
jns
sahf
mov
pop
add
pop
popf
xchg
call
in
xchg
ss
sbb
jb
inc
adc
mov
mov
xchg
das
mov
pop
adc
inc
and
dec
int
call
mov
out
xor
scas
sub
lock
jnp
sarb
mov
cmp
sbb
dec
mov
jne
ljmp
into
and
decl
js
add
gs
enter
popf
push
test
cmc
push
adc
add
push
push
shl
jge
out
dec
imul
adc
mov
stos
cmp
js
push
and
mov
dec
mov
push
jp
outsb
divl
xchg
sbb
sbb
xchg
std
outsl
cld
out
pop
out
or
das
out
adc
insl
call
or
or
jo
inc
sub
push
ljmp
inc
pop
arpl
scas
fsts
jecxz
mov
and
bound
cmpsl
aad
lret
xor
ret
mov
dec
fisubrl
iret
loopne
movsb
mov
jp
lcall
pop
loope
in
into
inc
rclb
out
xchg
adc
out
or
orl
addr16
adc
xchg
or
inc
dec
xor
leave
push
jbe
insl
pop
xor
jbe
mov
pop
adcl
push
mov
mov
push
cmp
push
out
fstpl
imul
or
mov
outsb
decb
test
or
mov
and
clc
mov
hlt
adc
lcall
dec
out
xorl
sbb
inc
xor
loope
fwait
scas
sbb
jb
jp
rcll
js
lock
mov
aad
pop
dec
cmp
shrb
iret
push
das
mov
sbb
xchg
lock
das
and
push
repnz
fwait
add
sbb
outsl
or
mov
jae
sbb
mov
aaa
adc
rol
dec
cld
scas
je
mov
dec
lret
fs
cmc
imul
stc
mov
mov
repz
icebp
pop
imul
dec
enter
cmc
adc
jp
lds
hlt
call
outsb
add
fcomps
nop
pop
lods
push
mov
xchg
mov
xor
jo
adc
in
insb
mov
data16
sti
inc
imul
out
ja
fsubrl
es
enter
and
in
push
shrb
add
xor
fidivrl
lret
divb
test
cmp
cmpsb
adc
aas
cmp
mov
addr16
aam
mov
inc
iret
aas
mov
mov
aam
in
cmp
adc
fcoml
std
pop
mov
dec
sahf
out
int3
inc
sub
and
jmp
out
lahf
or
in
iret
cs
add
incb
pop
sbb
repnz
adc
jge
inc
push
pushf
mov
lods
xor
inc
jmp
sti
fs
outsb
aad
or
add
pusha
daa
mov
or
mov
inc
scas
pushf
outsl
cwtl
cmp
mov
imul
test
dec
xlat
xor
cmpsl
cld
push
push
sbb
test
out
xchg
test
sbb
adc
mov
fbstp
jno
aad
std
fstl
xchg
xor
sub
and
je
rolb
ret
mov
xchg
adc
movl
ss
loop
dec
dec
loop
dec
sub
push
jb
dec
into
dec
daa
push
pushf
or
movsl
pop
cmp
test
out
mov
and
lea
aad
test
rorl
or
push
shrl
add
xchg
push
test
loope
out
mov
test
xor
or
movsb
sbb
or
or
daa
sbb
repz
aas
cmpsb
mov
pop
fdivrs
mov
pushf
cs
adc
dec
fwait
lcall
call
and
xchg
dec
jns
sbb
mov
cmp
das
inc
push
jb
adcb
rcll
roll
xor
outsb
leave
out
imul
lods
push
mov
jbe
fistpl
js
mov
cmpsl
xor
xchg
loopne
lahf
inc
imul
xlat
sti
mov
das
jns
sub
dec
or
in
mov
and
jo
mov
dec
movsl
inc
dec
and
jbe
mov
and
xchg
dec
mov
pop
push
scas
cmp
adcl
or
nop
pop
imul
int3
and
sbb
mov
loop
fsubrs
pusha
mov
popf
sbb
loopne
mov
pop
lds
mov
sbb
popf
add
push
js
xchg
jmp
out
mov
ret
mov
mov
xchg
xchg
push
aad
popa
js
ret
int3
outsb
faddl
xor
je
testb
and
inc
xor
andb
push
xchg
mov
loopne
rol
dec
xor
sub
dec
mov
push
dec
hlt
test
cmp
adc
loopne
mov
scas
push
test
movsb
dec
mov
mov
in
movsl
fcompl
mov
mov
jl
iret
jne
dec
adc
push
and
add
inc
add
jne
add
sub
rcrl
inc
inc
jle
pop
mov
fwait
int3
inc
roll
outsb
dec
pop
xchg
pop
dec
jl
insl
add
hlt
inc
test
sub
mov
xchg
cltd
daa
push
popa
mov
ljmp
imul
out
stc
dec
out
sbb
out
xchg
add
pop
mov
xchg
scas
fstpl
push
sub
cmp
lret
insl
hlt
insl
jmp
addr16
loop
dec
cmpsb
stos
imulb
cmp
adc
inc
and
repnz
sub
push
mov
inc
dec
std
adc
xlat
fiaddl
or
mov
mov
dec
sub
dec
js
outsb
xchg
push
loopne
mov
icebp
ja
testb
jns
loop
jo
fdiv
pop
dec
lods
ds
cmp
orl
mov
addr16
andb
divl
pop
xor
popa
pop
jo
adc
add
pop
dec
cmp
bound
cmpsb
into
scas
lcall
or
test
ret
popa
dec
jle
lods
in
mov
add
out
sbb
mov
fwait
icebp
dec
push
adc
pop
bound
ss
ljmp
leave
xor
scas
mov
jmp
mov
xchg
and
pinsrw
jne
js
sub
mov
fistpll
push
aad
add
mov
daa
push
lods
or
adc
sti
inc
mov
or
shlb
push
inc
pop
ljmp
in
bound
out
aam
inc
ss
scas
and
or
mov
adc
insl
iret
aad
mov
xor
xchg
sub
push
inc
sbb
bound
cs
insb
cmp
adc
in
popf
lods
clc
jno
jns
notl
jbe
lcall
fdivrp
sub
pushf
and
cmc
jge
mov
adc
mov
outsb
xchg
add
lahf
add
push
push
int3
addr16
jae
fisubl
cld
dec
cmp
mov
lods
jecxz
fildl
nop
xchg
mov
mov
nop
push
jb
mov
dec
rclb
mov
sete
sub
pop
fcmovb
xchg
aad
dec
inc
scas
loopne
pop
lret
inc
dec
xchg
lcall
mov
lods
mov
or
mov
sbb
jns
fsts
xchg
mov
adc
mov
adc
xchg
into
sub
xchg
in
jne
dec
pusha
repz
jp
fcomps
mov
sbb
and
je
movl
jns
sub
xlat
mov
add
add
inc
mov
leave
xchg
xor
lock
cmp
mov
fistpl
push
add
test
punpckhdq
mov
mov
pop
loopne
jmp
xor
pop
nop
sbb
sub
inc
dec
push
mov
jo
cmpsl
orb
cli
cmc
stc
loope
push
daa
cmpsb
ret
mov
push
mov
cs
fidivs
push
out
sti
push
sub
fldenv
push
hlt
xchg
mov
sti
into
sub
incb
clc
mov
outsb
roll
or
mov
daa
or
mov
lods
inc
mov
xor
adc
push
inc
js
pusha
pushf
mov
fimuls
mov
dec
or
int3
xor
ret
out
jmp
push
outsl
call
jno
sets
lret
jmp
mov
pop
jne
push
cmp
je
insb
mov
ret
inc
pushf
mov
mov
push
popa
mov
pop
mov
xchg
pop
insb
cltd
ljmp
idiv
insb
hlt
jae
and
lea
hlt
sub
xor
inc
aad
push
cmp
xlat
out
int
aaa
sub
fcoms
jge
das
imul
js
jns
insb
cmp
inc
mov
jmp
addr16
insl
les
nop
jg
adc
or
pusha
gs
mov
xor
adc
xor
inc
dec
add
mov
dec
leave
mov
mov
stos
imul
cmp
or
mov
or
sbb
data16
pop
adcb
pop
add
xchg
jno
jp
in
gs
loope
cmp
shlb
rcrb
mov
lret
fistpl
aas
dec
fcomps
mov
cmp
test
pop
out
jmp
cmc
sub
cmp
fwait
test
ficompl
pop
cmpsl
sub
xchg
jo
jns
cmc
adc
cmp
pop
push
cli
incb
divb
mov
push
xchg
out
mov
add
sub
dec
xor
rol
dec
xor
stos
or
mov
out
rcl
mov
fs
loop
shlb
inc
inc
mov
mov
jecxz
shr
jnp
pusha
add
adc
shlb
mov
fdivp
xchg
lods
out
rcl
shll
repnz
das
inc
adc
rcr
cmp
push
out
xlat
dec
in
jno
jge
jge
and
jl
fcoms
inc
inc
and
xchg
jg
daa
push
dec
xchg
pop
dec
sbb
xor
xchg
pop
inc
mov
fdivl
adc
ljmp
cmc
cmpsl
cmp
jmp
cmp
jp
xor
push
adc
fcomip
out
adc
call
lret
outsb
mov
iret
mov
fldcw
inc
cmp
mov
sbb
push
xchg
lea
xchg
mov
stos
cmp
movsb
mov
cmp
scas
cmp
and
mov
jnp
jae
xchg
popf
shlb
stos
repnz
les
mov
jns
addr16
jne
sbb
xchg
cld
mov
pop
push
push
cmp
adc
pop
ret
in
pop
std
and
in
cld
out
push
xor
xchg
movsl
ret
add
cltd
out
jo
daa
push
nop
inc
rcrb
jl
add
pop
mov
dec
stos
imul
sub
jp
dec
mov
cmp
cmpsl
push
test
inc
inc
xor
mov
scas
jo
icebp
pop
pop
jg
jge
mov
pop
test
enter
stc
jl
mov
lret
sub
inc
adc
hlt
std
mov
mov
ret
and
dec
mov
mov
sahf
add
cmp
inc
push
xor
sbb
mov
push
loopne
loope
mov
les
call
mov
mov
bound
cmpsb
jg
cmp
push
jns
repnz
and
xchg
rcr
in
cwtl
fs
add
adc
adc
adc
sbb
outsb
lods
rol
push
or
xlat
ret
and
jne
sub
mov
jns
mov
inc
add
add
push
xor
push
push
cmpsl
adc
mov
push
adc
shl
mov
add
add
sti
sbb
mov
rorb
cli
jne
pop
aaa
sti
fwait
movsb
xchg
movsl
mov
ja
inc
loopne
lret
fidivl
dec
cmc
ja
push
fldenv
test
out
sbb
xor
or
out
aaa
and
inc
icebp
sub
fsubrs
jnp
loopne
pop
ja
js
call
cmp
push
push
mov
scas
cmc
xor
mov
sahf
mov
mov
cmpb
ljmp
mov
cli
out
arpl
xor
and
or
frstor
add
sub
mov
pop
mov
pop
out
pop
and
adc
popf
jbe
pusha
xchg
inc
test
add
xchg
xchg
popf
lret
scas
lret
xchg
dec
loope
sahf
jl
sub
mov
scas
and
adc
inc
xorl
pushf
rcrb
insl
repnz
mov
jecxz
add
call
lret
rcrb
or
xlat
pop
fidivrs
xor
cli
mov
mov
aam
rcr
mov
lods
jbe
jp
in
and
jae
fstpl
lcall
pop
ret
insb
sub
jle
push
inc
loop
sub
sbb
or
or
push
push
add
mov
rclb
fimull
stc
aaa
sbb
int
adc
sub
les
pop
aam
xor
mov
xchg
sbb
sbb
push
or
push
loope
pop
das
outsb
idiv
push
xchg
pushf
push
inc
pusha
mov
iret
push
mov
mov
fs
push
and
jno
sub
je
push
cwtl
in
mov
and
cmpsl
loopne
lock
leave
push
sbb
mov
stos
jge
mov
xchg
xor
sti
xor
or
sbb
mov
cmp
adc
mov
mov
or
decl
adc
and
adc
jne
sub
clc
sbb
daa
jbe
inc
lret
movsb
mov
push
xchg
push
push
imul
enter
out
fnsave
in
mov
cmc
mov
xchg
in
in
mov
jge
sub
xor
imul
in
inc
pop
adc
xchg
gs
sarb
js
fcomps
mov
cmp
xor
mov
bound
jae
icebp
mov
and
or
jge
xchg
dec
insb
ljmp
jmp
je
cmp
es
lahf
sbb
loop
and
je
or
dec
cwtl
inc
addb
inc
push
xor
fwait
and
add
and
clc
roll
mov
xchg
push
lret
pop
mov
pop
add
adc
xchg
shll
fdivrl
pop
enter
ja
lock
outsl
sbb
or
jmp
push
je
inc
mov
and
jecxz
filds
fbstp
mov
icebp
jl
in
mov
bnd
mov
addb
xchg
mov
daa
and
mov
dec
mov
xlat
mov
adc
icebp
pop
xor
cmp
xchg
test
ds
and
into
gs
gs
add
test
pextrw
and
rcl
cmp
in
dec
fistpll
cltd
sbb
loope
inc
push
mov
lods
cmpsb
jnp
iret
bound
hlt
rcrb
dec
fs
dec
sub
mov
mov
or
movsl
push
je
and
ja
les
jge
jecxz
push
out
xchg
pop
bound
or
jno
adcl
push
rcll
or
jne
xchg
test
mov
push
or
cmc
decl
out
arpl
es
test
push
sub
std
js
or
sbb
mov
lret
lret
push
ret
mov
adc
fdivrs
clc
inc
sub
xlat
mov
push
pandn
icebp
repnz
push
lret
cmc
jae
aas
mov
mov
pop
jae
xchg
jns
daa
mov
aaa
mov
cli
adc
cli
cmc
mov
add
stos
out
andl
insb
dec
icebp
aaa
fmuls
fidivl
insb
popf
mov
lret
xchg
arpl
dec
outsb
mov
test
add
dec
mov
add
jae
fldl2t
ret
adc
push
test
ds
ja
iret
xchg
in
int3
in
adc
outsl
dec
insl
sub
push
mov
cmp
xchg
or
pop
aam
dec
enter
shrb
sbb
dec
fsubs
mov
sub
xor
inc
jne
stos
scas
or
cmpsl
xchg
pop
sti
push
lea
cmp
decb
xor
out
push
push
jno,pn
lds
enter
cmp
lret
loopne
mov
aaa
xchg
movsl
in
push
xor
aam
add
sub
outsb
stos
and
jb
inc
shlb
mov
pop
fcmovne
popa
divb
push
xchg
mov
sti
cwtl
add
mov
pop
mov
adc
and
aaa
mov
or
inc
xor
out
fists
mov
adcl
dec
aam
repz
or
adc
sbb
sbbl
mov
push
and
loop
fs
imul
mov
imul
xlat
dec
sbb
jne
mov
fs
push
stc
inc
mov
rorb
xlat
mov
adc
fildll
imul
stos
jne
sub
scas
jne
mov
xchg
fucomi
push
jne
jae
ljmp
dec
out
or
xchg
bound
and
adc
addr16
mov
mov
jns
fwait
inc
push
xchg
cmc
clc
fdivl
inc
mov
int
fldcw
inc
mov
cmc
xor
call
add
rcrl
sbb
popa
jae
bound
cmp
int
movsl
sbb
sub
das
lcall
rclb
jbe
mov
and
shlb
stos
push
loope
dec
pop
cmp
outsl
xchg
xor
je
movsl
push
lods
pop
mov
das
imul
bnd
test
or
dec
sub
and
sti
es
inc
push
jl
cltd
add
ret
aad
jge
ror
mov
cmp
subb
add
aaa
in
xlat
adc
push
or
idivb
sbb
and
mov
mov
dec
xor
insb
cmp
sti
fnstenv
xchg
mov
and
call
inc
shrl
mov
or
pop
adc
lcall
sbb
test
lcall
idivb
shrl
dec
test
sub
push
mov
inc
jbe
sub
pop
xchg
xor
mov
les
imul
cmc
mov
jle
jl
subb
aad
mov
in
mov
stos
lock
jp
cld
lods
and
test
adc
add
push
mov
outsl
gs
jl
ret
cmp
xchg
pop
cmpsb
or
out
mov
cltd
imul
push
cmp
ds
jns
mov
rolb
jmp
arpl
into
pop
mov
jg
sbb
popa
jp
and
call
test
and
aaa
data16
inc
jae
push
mov
loop
rorb
adc
pushf
mov
aad
adc
mov
inc
aam
xor
fidivs
xchg
cmp
mov
loope
ss
mov
inc
mov
adc
xchg
push
add
cld
mov
out
outsb
pop
shl
inc
test
sbb
sub
sub
mov
aam
orl
dec
in
mov
fwait
dec
push
cltd
out
or
adc
fnstsw
mov
mov
mov
pop
xor
sbb
sub
fwait
push
pop
sub
adc
mov
mov
dec
push
pop
sbbl
xchg
addb
or
out
or
in
mov
mov
insl
jmp
xor
mov
and
xchg
or
adc
cmpxchg
roll
pusha
push
mov
cmp
jo
xchg
add
iret
pop
dec
popf
add
pop
orb
pop
xor
outsb
imul
xchg
pop
js
xchg
lret
and
xchg
lock
je
mov
mov
repz
aas
and
push
sub
push
mov
aad
or
cld
dec
decl
sbb
xchg
cmp
adc
stos
mov
adc
orl
push
push
daa
or
lcall
outsb
mov
scas
push
mov
pop
cwtl
mov
adc
dec
add
sbb
or
stc
mov
out
imul
shll
in
dec
mov
ja
or
scas
in
jmp
adcl
leave
mov
mov
fmuls
sti
and
push
aas
add
imul
jle
mov
mov
jb
and
insl
jno
lock
jae
dec
xor
sarl
jns
enter
pop
inc
push
mov
in
cltd
aad
push
xor
sub
adc
pop
mov
cli
add
xor
and
sub
psubusb
outsb
pop
psubusb
inc
xor
lock
push
mov
stos
adc
mov
push
jbe
pop
sbb
push
fldcw
mov
and
xchg
insb
jp
add
xchg
mov
hlt
pop
and
or
arpl
sbb
repnz
adc
jl
outsb
in
in
insl
test
cwtl
int3
pop
sbb
mov
add
test
test
dec
fld
fdivrl
or
sbb
icebp
out
cld
out
push
sbbl
fwait
lcall
outsl
repz
xlat
sub
jae
or
rorb
jns
mov
adc
lret
out
jecxz
nop
iret
pop
out
mov
and
lret
push
inc
lods
jbe
mov
sub
push
sbb
mov
lock
mov
dec
setle
cs
int3
pop
pop
xor
lahf
jecxz
sbb
in
lds
mov
movsl
cltd
inc
push
jnp
xor
aas
hlt
leave
sub
in
out
iret
pop
addr16
mov
push
les
pop
xchg
dec
sti
or
mov
cli
xchg
push
mov
out
mov
and
pop
arpl
jmp
jbe
andl
xchg
xchg
in
add
ficompl
ds
xchg
push
outsl
fadds
xor
jns
std
ss
add
cmp
sbb
or
jecxz
and
in
and
push
sub
sbbb
push
mov
sbb
jmp
mov
mov
lahf
movnti
inc
jno
dec
xchg
push
mov
cmp
stc
inc
mov
gs
dec
dec
xchg
mov
inc
insb
xor
jle
lods
jnp
popf
std
aam
sub
mov
sbb
sbb
and
fsubr
popa
dec
and
jg
or
jns
aam
das
repnz
push
js
mov
insb
and
inc
sbb
pop
lods
test
pop
pop
aam
sub
dec
push
jns
fucomi
xor
push
cmp
add
shll
add
aam
jb
lcall
and
mov
movsb
adc
int
lock
insl
dec
and
jg
jmp
out
push
stos
fdivrl
and
cld
pop
xchg
imul
loop
dec
sub
sub
test
mov
adc
fiadds
lahf
mov
push
call
mov
cmp
les
mov
sbb
mov
rol
leave
pop
out
out
loop
cli
out
loopne
push
or
jg
pop
shr
insl
and
inc
inc
dec
iret
push
fldcw
pop
xchg
js
std
dec
add
imul
inc
mov
popa
test
shll
inc
hlt
adc
imul
jae
dec
repz
int
mov
in
and
dec
scas
mov
addr16
hlt
outsb
lcall
insl
jb
xor
shlb
or
rorb
inc
negb
add
dec
push
shrl
ss
adc
movb
fadd
fs
js
repnz
mov
inc
and
push
mov
sub
sub
cmp
push
int
pop
add
add
push
mov
cmc
ret
pop
aam
lods
out
ljmp
inc
xchg
mov
cmp
cltd
test
push
and
sbb
cmp
jns
loope
mov
jns
sahf
loope
inc
inc
xor
daa
scas
inc
add
outsl
fld
lcall
xor
push
lret
pop
lock
mov
dec
jl
pop
cmp
popa
es
xor
movsbl
aas
push
or
cmp
leave
mov
cld
push
or
call
adc
mov
or
push
addr16
xor
xchg
imul
loop
cmp
call
xor
imul
cmp
mov
mov
jmp
jge
jl
iret
cmpsl
jg
pop
mov
cs
fstl
lahf
adc
adc
cs
jecxz
loopne
pop
mov
pop
xor
jmp
data16
cmc
lock
bnd
pop
stc
inc
push
xchg
movsl
adc
notb
out
mov
mov
mov
arpl
ficoml
jno
fwait
lock
cld
mov
rol
mov
stos
push
pusha
sbb
xchg
cltd
xorl
rorb
std
cmp
lds
fsubrp
mov
daa
fcoml
div
int3
ss
mov
mov
and
fsubs
jne
jnp
cmpsb
sub
jbe
das
pusha
add
addr16
dec
pushf
pop
ja
scas
cmpsb
roll
ret
inc
mov
cmpl
shll
xchg
fisubs
sbb
or
push
mov
mov
adc
xor
xchg
xor
into
mov
les
movsb
mov
mov
add
lret
xlat
or
lea
xchg
in
xchg
mov
jnp
loop
push
push
and
out
dec
pop
push
js
xor
cmp
fistl
push
add
or
xchg
mov
add
inc
pop
int
adc
ljmp
pop
fsubl
lock
les
test
mov
jo
notb
adc
pop
mov
sbb
xchg
or
jl
movsb
xchg
lds
in
popl
add
sahf
mov
xchg
xchg
jb
pop
enter
adc
lods
int3
cmp
cmp
cwtl
add
mov
mov
and
rorb
mov
xlat
stc
ss
mov
hlt
push
cmp
sub
stc
loope
lods
or
sub
mov
movsl
add
mov
mov
cwtl
jnp
loopne
push
inc
lds
hlt
leave
ret
iret
mov
pop
dec
push
in
call
push
push
xchg
nop
shll
xchg
mov
in
mov
in
inc
enter
push
adc
aad
fstpt
sub
adc
lahf
mov
addb
sbbl
push
arpl
pop
add
sub
sub
incl
cwtl
push
cmpsl
out
insl
pop
stos
sub
sbb
xorb
loopne
shll
scas
daa
push
mov
push
push
push
fistpl
cmp
es
pop
test
nop
pop
mov
fmull
adc
push
neg
jp
ljmp
test
arpl
cltd
popa
stos
ret
mov
inc
gs
ss
dec
das
jle
add
fstpt
fmuls
add
clc
imul
inc
push
xor
fisubs
leave
xlat
es
xchg
push
mov
movsb
mov
loope
jae
mov
hlt
cmp
in
mov
imul
add
jge
inc
enter
popf
mov
dec
jl
mov
bound
call
loope
adc
xor
push
xor
sbb
cmpsb
xchg
mov
in
xlat
sti
cmpsb
cmp
pop
and
lea
pop
incb
cmp
push
int3
stos
rol
cmp
call
mov
cmpsb
jno
xor
fbld
mov
shlb
hlt
or
lods
xchg
loop
pop
test
or
ficomps
xor
sbb
rcll
xor
loope
xor
mov
cld
pop
hlt
mov
idivb
pop
xor
shr
xor
aas
pop
adc
mov
jg
sbb
lds
dec
and
cmp
dec
inc
adcb
push
jge
rcrb
sbb
mov
pop
mov
or
lods
xor
and
xchg
push
repz
stc
or
push
jb
into
fnstsw
pushf
lock
imul
fisubl
inc
cmp
testl
rclb
in
or
lcall
add
or
xchg
std
hlt
scas
mov
je
ds
inc
pop
ret
jnp
lahf
ret
xor
arpl
add
scas
and
data16
mov
jp
dec
loopew
cs
xchg
mov
xchg
add
inc
mov
push
pushf
add
gs
imul
ja
in
enter
jecxz
sbb
data16
loopne
sub
ss
jbe
inc
jecxz
mov
jae
in
pop
loopne
mov
add
pop
cmp
inc
sub
rcrb
shl
mov
insl
int3
push
sbb
stos
cmpsb
out
inc
sub
aaa
cmc
int
pop
jmp
add
add
push
frstor
pushf
scas
add
les
jg
xchg
lret
mov
in
mov
aaa
dec
cmp
stos
test
dec
loop
std
add
push
mov
mov
lods
or
pop
cld
imull
ficoms
fcmovu
into
stc
ret
mov
push
ficoml
loopne
gs
xor
adc
mov
mov
std
test
push
lods
pop
cmp
add
mov
loopne
dec
rcll
sub
xchg
adc
ja
sbb
loop
dec
xlat
leave
xor
sub
int
stc
lds
xchg
lods
push
push
dec
sbb
lods
nop
in
cs
lods
jne
mov
push
sub
ffreep
mov
push
mov
inc
aam
ljmp
cmpsl
lods
jl
jae
movsl
daa
icebp
jl
push
lret
lods
call
xchg
inc
mov
xchg
push
test
inc
ljmp
lods
aas
sbbl
fcmovnu
add
push
nopl
mov
cli
xlat
dec
sbb
mov
and
mov
fcoms
mov
and
inc
push
test
sub
movsb
les
vmovups
out
test
shlb
adc
or
dec
mov
inc
pop
out
dec
pop
aad
mov
lret
enter
sub
mov
cwtl
pusha
cmp
xchg
xchg
ficomps
inc
outsb
sbb
pusha
lret
inc
pop
pop
fldl
jno
jb
movsb
xchg
imul
mov
mov
enter
call
or
sub
xchg
clc
jns
shrb
mov
add
mov
rorb
dec
fincstp
push
rclb
xchg
sbb
or
push
fstpt
cltd
enter
outsl
out
pcmpeqb
fcomi
mov
and
xchg
xchg
pop
test
fs
xor
call
mov
dec
jne
xchg
mov
icebp
pop
xchg
push
jle
mov
pop
std
pushf
cmpsb
jge
les
jge
into
cmp
mov
and
xor
pop
ss
stc
add
fldl
movsl
mov
jl
inc
icebp
mov
mov
inc
js
std
in
fsts
xor
dec
mov
sub
or
add
lds
clc
aaa
and
xchg
sbb
mov
dec
dec
pop
xlat
imul
xor
mov
jno
jb
ret
flds
scas
dec
in
int3
jmp
divb
hlt
xchg
andb
jne
lods
test
pop
or
lahf
and
dec
sub
push
jno
jg
lret
sahf
rcrl
leave
aam
fcompl
dec
lock
call
int3
sbb
jno
in
xor
loope
rol
call
mov
imul
xchg
push
pop
jmp
ret
movsl
or
mov
movswl
mov
cltd
mov
ret
jmp
sbb
test
je
pushf
sbb
leave
push
pop
xor
loope
test
and
jnp
pop
and
cmp
ds
into
movsb
pop
pop
jno
cs
fcmovnbe
jo
stos
xlat
and
pop
cwtl
dec
into
xor
adc
pop
loopne
add
push
ja
fstl
cmpsl
cmpb
and
daa
sbb
sub
cmc
dec
sbb
push
dec
sub
dec
loopne
inc
js
jmp
xchg
mov
pop
pop
inc
fildl
mov
pop
ret
and
gs
mov
call
mov
ds
or
cli
incb
aaa
sbb
test
add
mov
dec
pop
mov
fimuls
cli
push
test
jae
mov
push
icebp
jbe
call
add
mov
sbb
push
adc
mov
adc
or
pop
jb
mov
adc
stos
filds
shlb
xchg
adc
dec
dec
lret
movsb
cmpsb
cmpsb
push
inc
mov
push
dec
xchg
xlat
dec
jae
dec
nop
push
mov
arpl
out
and
aad
add
out
imul
shrl
cmpsb
pop
or
jp
mov
mov
sbb
arpl
sub
movsl
test
adc
cmp
sbb
enter
inc
loopne
cmpsl
mov
sub
fsts
or
das
add
mul
aaa
lret
pushf
mov
jl
leave
setl
push
dec
adc
jnp
jbe
divb
ss
repnz
das
imul
and
jle
pop
aas
jg
push
push
pop
gs
mov
gs
and
dec
ret
pop
in
test
aaa
sub
cmp
adc
int3
add
das
or
dec
mov
xchg
mov
pushf
xchg
pop
test
cmp
jle
loope
inc
sahf
rcr
cs
mov
push
mov
adc
mov
int3
and
loope
addr16
insl
and
lods
pop
jle
jbe
pusha
fdivs
xchg
sbb
sbb
or
sarb
mov
cmp
sar
shrb
and
js
pop
jns
pop
mov
ds
push
sub
cmp
add
bound
ficompl
push
fists
mov
test
in
test
sbb
push
push
pusha
fldenv
xor
pop
cwtl
adc
push
adc
push
mov
push
lock
test
adc
inc
push
dec
mov
sub
mov
push
mov
mov
lcall
sbb
stos
dec
mov
and
fwait
push
mov
in
xor
in
mov
jne
cmpsb
cmp
repnz
xlat
lahf
pop
mov
pop
in
insb
pop
pop
rorb
movsl
out
insb
jl
push
xchg
ret
sbb
mov
shlb
cmpsb
xchg
lret
idiv
call
add
dec
inc
push
jle
inc
or
fwait
cld
fsubl
pusha
iret
fnsetpm(287
mov
or
fs
adc
aaa
xchg
test
inc
test
sahf
mov
bound
clc
inc
inc
iret
sbbb
loopne
je
add
add
rcl
shlb
dec
gs
inc
xor
jle
xchg
test
fcoml
sti
jmp
int3
mov
push
sarl
inc
push
movsb
or
adc
cmp
add
daa
cmp
push
jnp
or
pop
and
into
mov
das
iret
cs
ja
ret
testl
mov
inc
iret
jge
lock
out
ffreep
jne
or
cwtl
mov
jne
clc
mov
cli
push
mov
ja
jle
aas
dec
nop
dec
cmp
fstpt
out
push
xchg
sub
push
out
sub
sahf
cmp
mov
int3
pop
cwtl
pop
mov
dec
xadd
push
or
sub
jge
jns
and
out
rolb
shl
test
push
ja
adc
add
mov
jo
ljmp
push
pop
fisubs
aad
lret
sub
mov
shl
ja
int
pop
imul
sbb
cmp
icebp
dec
or
jno
in
push
mov
mov
lcall
stc
ljmp
stos
cli
cmp
xchg
repnz
fisubs
pusha
pop
mov
lods
cmpsl
ds
subb
in
mov
orl
and
xchg
sbb
test
adc
inc
cmpl
sub
cmp
aas
and
mov
les
push
dec
cwtl
jno
jb
xor
mov
adc
pop
arpl
pop
jl
popf
ljmp
filds
push
mov
les
adc
xchg
es
jmp
in
and
and
push
ds
mov
and
inc
lods
mov
adc
je
xchg
ffreep
leave
xchg
ja
or
cmp
add
jno
sbb
clc
jno
sub
mov
inc
push
add
cli
or
inc
add
mov
push
int
xor
in
ret
push
jmp
inc
push
pop
in
push
push
xor
iret
inc
subb
push
jmp
hlt
push
sub
jno
mov
sahf
inc
and
pop
adc
pop
push
jle
mov
jb
dec
fists
xchg
dec
incl
insb
imul
aas
cli
add
push
shlb
push
in
lds
sbb
xchg
aam
adc
jge
push
out
jns
sub
jl
loopne
mov
enter
out
mov
inc
adc
or
mov
std
add
or
sbb
into
inc
inc
dec
bound
out
cmpsl
pushf
lret
addr16
and
movsl
test
fidivrl
jmp
jl
sbb
in
inc
test
lahf
xchg
xlat
xor
aam
js
shrb
int3
loopne
clc
jmp
lock
jbe
or
adc
jbe
ljmp
enter
cmp
out
in
fstl
imul
insl
pop
clc
adc
jnp
repnz
jbe
sub
xchg
and
pusha
or
sub
jbe
cmp
mov
add
mov
xchg
inc
jp
faddl
call
mov
xor
ret
add
or
mov
hlt
jl
jge
mov
mov
fld
lods
inc
loop
icebp
leave
pop
fcoms
fst
jge
or
mov
mov
jns
sarb
call
ret
cld
push
or
pop
shll
push
inc
aad
mov
iret
mov
sbb
fsts
add
cmpb
rcl
ss
mov
in
xchg
jnp
lock
int3
dec
stos
enter
mov
push
mov
xchg
mov
and
mov
arpl
push
sub
ds
jae
sbb
roll
cmp
push
push
sub
add
or
fnstcw
faddl
rorb
insl
or
fs
sarb
jbe
sub
or
push
imul
mov
sub
addr16
cmc
mov
in
or
cli
in
lcall
pop
fdivs
mov
jle
pop
sbb
jecxz
add
ror
mov
aaa
mov
cs
adc
pushl
cmpsl
lock
cltd
mov
add
xchg
jmpw
add
sbb
lock
sbb
lds
mov
cmp
ljmp
ss
jno
lea
mov
mov
add
jmp
xchg
pusha
mov
es
fistpl
xchg
js
mov
cmp
pushf
pop
sub
and
notl
add
sub
push
mov
push
stos
mov
jo
adc
or
jp
or
mov
int
dec
push
adc
aam
add
jg
sti
aaa
mov
je
sahf
mov
pop
push
jae
xchg
pop
wbinvd
pop
dec
pushf
inc
add
movsb
insl
push
push
xor
pop
jmp
test
pop
bound
imul
data16
mov
les
push
call
pop
xor
lods
adc
jecxz
cltd
mov
adc
inc
adc
jmp
jo
push
pop
out
iret
call
or
loop
stc
ret
sub
sub
in
aaa
pop
xchg
cmp
loop
scas
push
psubw
shrl
es
mov
outsb
jmp
adc
mov
insb
nop
in
pop
dec
mov
pusha
mov
pop
movsb
push
push
in
inc
pop
sbb
adc
gs
mov
xor
test
pushf
aas
mov
addb
ret
fistps
shr
and
inc
inc
cs
lock
das
lret
sbb
xor
sub
dec
mov
adc
mov
aam
repz
mov
mov
sub
cltd
icebp
sub
mov
lods
jnp
add
shll
aaa
int
clc
jne
ja
xchg
int3
fsts
mov
outsl
std
dec
fcoms
fwait
aad
xor
cltd
lcall
loope
ret
sub
fs
fmul
loop
add
repnz
mov
jne
lock
sub
test
imull
or
dec
mov
sub
sub
mov
xchg
pop
pop
aaa
subl
mov
sub
pop
in
out
fmull
jl
stos
sahf
insl
orb
jmp
shll
and
xor
dec
addr16
cs
fstl
lods
arpl
shl
arpl
push
mov
pop
sub
stos
jbe
xorl
jbe
cld
inc
mov
sbb
mov
mov
mov
sub
cmp
outsb
cmpsl
adc
mov
pop
stos
aas
mov
jmp
xchg
mov
loop
movsl
gs
incl
popa
ss
lahf
dec
test
sbb
mov
test
add
cltd
test
fisttps
add
jne
test
xchg
das
adc
mov
xchg
push
testb
adc
and
imul
leave
or
adc
dec
dec
loope
dec
insl
xor
add
fstl
jno
cmc
rclb
aam
sbb
adc
jno
sub
pop
cltd
mov
mov
dec
aad
shll
jge
in
inc
mov
xor
inc
insl
call
int
mov
pop
icebp
stc
jb
fwait
cmp
mov
add
sbb
mov
cld
outsb
and
js
in
jmp
pop
mov
loopne
xor
lret
stc
mov
push
xor
pushl
mov
mov
xchg
lcall
jmp
in
push
imul
dec
jne
jle
push
shlb
mov
fildll
mov
out
fsubr
repnz
icebp
push
and
mov
pop
sbb
cli
dec
mov
rorl
scas
mov
daa
pusha
sbb
sub
fiadds
scas
jno
push
jbe
jp
out
xor
jbe
test
mov
or
mov
popf
xchg
mov
xchg
inc
loop
inc
mov
movsb
popa
enter
enter
add
xor
mov
mov
lea
sarl
adc
enter
adc
inc
lahf
xor
xchg
dec
jne
dec
add
sarl
mov
cld
sbb
or
addr16
cmpl
inc
jg
test
out
popa
push
mov
adc
orb
icebp
xchg
lret
cmp
jo
push
ss
out
mov
nop
jmp
xchg
pop
or
inc
pop
push
add
call
loope
mov
cwtl
pushf
mov
pop
and
push
ljmp
hlt
add
imul
rorl
sbb
push
fimuls
mov
mov
mov
cmp
jb
test
insl
sub
scas
sti
xor
jbe
lret
rcl
or
sbb
sar
cltd
fxch
mov
inc
repnz
imul
cmovg
loope
loope
addr16
jl
xchg
xchg
mov
cmp
dec
in
jbe
push
xchg
sahf
push
or
dec
mov
xchg
xor
fld
push
cld
mov
pop
movsl
push
gs
fstpl
jnp
ficomps
or
mov
xor
int3
cli
mov
lret
fnstsw
pushf
jmp
adc
es
push
lret
insb
mov
jb
sti
enter
xchg
or
leave
scas
fldcw
cmpsl
jecxz
and
loopne
mov
mov
push
mov
and
cli
jmp
add
sbb
in
setae
fwait
add
nop
cmp
add
cvttps2pi
pusha
xchg
jmp
int
mov
dec
dec
push
push
jo
or
sub
xchg
and
push
pop
outsl
call
in
xchg
push
inc
stos
jge
clc
push
sahf
fstpt
mov
mov
add
frstor
je
sub
lahf
loopne
inc
push
data16
stc
ja
push
loope
dec
flds
fnsave
cmp
cmp
inc
lretw
mov
les
xor
sbb
adc
pusha
mov
lock
cmp
data16
dec
mov
enter
dec
lea
popf
ss
jns
push
roll
lcall
jecxz
xchg
cmp
sub
ficomps
jno
sub
push
ja
es
imul
and
leave
cli
rol
push
inc
cmp
xlat
cmp
popf
cld
cmp
cmp
dec
jae
mov
pop
das
fwait
add
fs
sbb
xorl
loope
xor
mov
std
add
int
push
test
pushf
push
xchg
or
mov
int3
jnp
fs
cmpsb
mov
lahf
movsl
stos
adc
inc
andl
test
rorl
inc
cmp
mov
repz
jno
push
push
repz
jecxz
mov
pop
outsb
ja
pop
pop
fistl
in
ficoml
xor
outsl
add
arpl
ljmp
dec
popa
xor
inc
mov
scas
mov
imul
sbb
jecxz
insl
pop
mov
fcomps
mov
xchg
or
push
sub
dec
mov
xchg
jnp
jecxz
inc
or
mov
mov
aad
imul
sbb
cs
hlt
dec
or
xor
nop
mov
sub
movsl
loopne
mov
mov
jne
pushf
popa
lods
cld
and
mov
or
cs
add
push
pop
mov
mov
lock
xchg
adc
mov
shl
push
leave
cld
mov
idivb
cmpsb
pusha
jbe
ret
incb
push
arpl
rorl
jbe
iret
adcl
sbb
jmp
mov
repz
mov
cmp
jns
mov
mov
push
xor
in
inc
pop
adc
ja
cwtl
mov
adc
pop
adc
hlt
test
cmpsb
inc
stos
mov
aad
mov
mov
lret
dec
popf
add
test
adc
push
xor
fnstenv
push
repnz
imul
sub
movsb
repnz
pop
enter
fs
xchg
mov
mov
and
test
sti
lods
scas
lret
xchg
and
and
cmp
lret
xor
aad
test
movl
or
decl
movsl
xchg
xchg
scas
imul
lahf
sbbb
pop
dec
scas
hlt
fbld
jle
into
fistpl
and
ret
lods
inc
mov
sub
mov
adc
pop
out
dec
xor
fmull
or
or
jb
lods
sub
andl
jnp
ret
into
mov
ja
leave
loope
sarb
out
jo
mov
jge
movsl
adc
cmc
jb
and
jmp
hlt
pushf
jne
fsub
mov
xchg
pop
fcompl
inc
pop
dec
stos
xor
jl
andl
xchg
in
ds
mov
mov
mov
das
shll
in
lods
shll
xor
and
mov
outsb
ret
call
lcall
or
xlat
insb
and
call
dec
xchg
lcall
ret
cs
xor
inc
cmp
mov
push
mov
les
push
in
and
loop
adc
fldenv
mov
xor
push
mov
das
scas
lods
jl
xor
sbb
adc
dec
jb
cltd
jo
add
jge
notl
jnp
fs
mov
push
addr16
fmul
push
cmpsl
cmp
stos
insb
lea
mov
mov
lods
or
fbstp
imul
filds
and
add
add
shll
in
and
inc
push
addr16
fcmovne
pop
inc
or
xchg
in
out
popf
mov
mov
mov
into
or
ds
aam
cmp
jno
xor
pop
add
out
movb
sub
lret
inc
sub
imul
push
lret
jge
adc
mov
inc
xchg
cmovo
mov
mov
push
mov
or
pop
xchg
loope
and
jge
jno
or
add
lock
jno
mov
and
sarl
add
nop
clc
test
inc
outsb
cmp
and
pusha
push
nop
push
lods
out
jl
pop
dec
lcall
aas
lods
cmc
fmul
shl
dec
cwtl
or
in
inc
sahf
inc
leave
xor
daa
or
lock
arpl
test
push
nop
adc
out
and
or
and
sub
rorl
adc
xor
or
mov
sub
and
sub
push
ficomps
adc
jg
push
sub
pop
cli
mov
cmp
out
es
out
shlb
test
imul
mov
aad
inc
dec
rorb
add
and
pop
icebp
fs
test
dec
pop
hlt
les
pop
call
add
sub
or
or
int3
fcomi
push
inc
stc
jmp
xor
sbbl
movsl
pop
or
add
mov
push
lahf
in
into
iret
popf
xchg
dec
adc
pushf
jecxz
inc
add
xchg
orb
in
push
rcrb
iret
stos
popf
pop
in
test
mov
push
pop
dec
mov
in
xchg
sahf
loop
cwtl
jmp
adc
mov
lods
jle
mov
add
pusha
pop
fdivs
ss
mov
lahf
aad
mov
and
hlt
imul
sarl
cmc
mov
lods
push
fistpll
dec
cs
jecxz
mov
lds
dec
sbb
ljmp
sbb
movsb
pop
xchg
mov
push
inc
addb
cmpsb
cmpsl
ret
sub
repnz
popf
push
xchg
cmp
jb
sub
sar
xor
in
mov
inc
les
push
inc
out
push
and
int3
jbe
fistpll
mov
out
lret
sub
push
add
sub
sbb
mov
rcrb
lods
popf
test
and
jns
dec
inc
cmp
mov
sar
ss
jno
ds
insl
mov
clc
sbb
js
data16
test
mov
fistl
repnz
adc
push
inc
aaa
rcrb
mov
sub
das
push
test
lds
jge
jno
push
push
jge
stc
adc
rorl
push
or
mov
cwtl
sub
insb
addr16
ljmp
add
jae
sbb
xchg
mov
mov
sub
jno
lahf
inc
aaa
push
adc
push
imul
jne
inc
sub
stc
std
ss
int
jnp
callw
addl
mov
fmuls
dec
cmp
movsl
arpl
adc
xchg
adc
jns
stc
loop
xor
push
cmp
ja
xlat
dec
rcrl
xchg
mov
adc
out
mov
or
jns
inc
inc
popf
pop
hlt
enter
test
xor
int3
xor
jl
testl
scas
jl
or
outsl
add
cmp
mov
mov
ror
inc
das
add
stos
adc
mov
scas
jno
sub
stc
enter
xor
pop
pop
xor
push
scas
xor
das
mov
xchg
sub
mov
cwtl
mov
mov
jno
inc
adc
mov
shll
adc
inc
mulb
mov
nop
pushf
nop
push
sub
es
pop
mov
lahf
cwtl
pop
and
mov
adc
push
daa
mov
sub
hlt
ljmp
cld
jae
insb
cli
push
cmp
je
outsl
xchg
mov
dec
xchg
bound
fldl
bound
or
sarl
cli
inc
jge
pushf
pusha
mov
xor
data16
dec
jbe
lea
push
incb
les
mov
inc
cmpsb
jo
cli
jo
inc
lret
negb
xor
jne
xchg
mov
mov
jmp
jno
test
and
loope
sub
lcall
out
popf
adc
repnz
jmp
es
fstps
in
sbb
insb
and
ror
loope
sbb
inc
lock
adc
jne
jp
dec
lock
ljmp
cmp
pop
pop
push
inc
pop
cmp
mov
mov
mov
mov
mov
shlb
mov
mov
inc
inc
dec
mov
pop
mov
cwtl
cld
adc
pop
loopne
jbe
xchg
mov
cli
and
mov
loope
lds
cltd
push
sbb
pop
loop
jne
adc
mov
shlb
xor
adc
lds
in
add
jb
dec
xor
mov
int
jg
mov
add
sbb
push
fistpl
movsb
mov
add
lahf
aaa
insl
mov
addl
lods
scas
enter
jo
add
sub
sti
shll
or
ds
dec
cltd
imul
sbb
xor
mov
mov
mov
bound
inc
dec
shl
cmp
xchg
mov
fmul
lret
cmpsb
imul
scas
xor
filds
xchg
stos
push
in
dec
ss
cmpsb
jns
inc
cmp
sbb
xor
sbb
lds
add
xor
pop
popa
out
call
data16
in
mov
jg
out
bound
mov
xchg
leave
mov
mov
cltd
cmp
mov
lahf
imul
les
jns
loope
sub
jns
test
add
jne
xor
push
or
xor
stos
daa
mov
imul
std
and
sub
push
arpl
jne
imul
cmp
scas
adc
push
ret
xor
sub
loope
addb
jge
mov
mov
push
sub
mov
xchg
repnz
adc
cmc
fcmovnb
out
inc
loopne
rorl
jb
and
push
insb
and
in
mov
dec
clc
sar
mov
mov
add
dec
xchg
inc
lods
stc
sahf
ror
ficoml
icebp
imul
or
and
jecxz
xlat
xchg
imul
push
xor
lcall
scas
cmp
fsubs
outsb
mov
gs
push
sbb
sub
xor
dec
das
mov
ja
or
or
push
sbb
ffreep
xchg
push
mov
imul
push
sti
sub
sub
xor
adc
jne
inc
fiadds
fwait
rorb
dec
adcl
xlat
push
movl
fiaddl
aaa
mov
and
inc
fstpl
out
mov
imul
push
and
add
push
lahf
xor
aam
lret
or
dec
rcrb
xor
mov
cmpsb
add
xchg
and
jl
mov
pop
dec
xor
xchg
fs
das
sbb
fidivs
xor
xchg
cltd
xor
lock
adc
out
cmp
mov
imulb
leave
push
inc
lea
ja
sar
test
lods
ja
sub
cmp
jae
inc
lods
addr16
loopne
inc
neg
leave
cmp
jp
inc
sarb
popa
push
in
adc
leave
add
out
fwait
cmpl
in
inc
scas
xor
test
jecxz
pop
int
adc
adc
sub
sbbl
dec
jp
sub
cmp
loope
jmp
mov
mov
mov
dec
or
cmpsb
cmpsb
and
fdiv
jb
mov
mov
out
into
es
inc
sbb
xor
test
cmp
lret
push
fldl
add
inc
jmp
xor
stc
shlb
mov
xor
imul
mov
push
fsubr
mov
cmp
pop
push
ss
nop
loop
push
xor
mov
int
inc
cmp
pop
mov
mov
roll
and
inc
ret
fdivrs
arpl
and
call
cmp
shll
and
loopne
inc
push
out
in
fs
in
jp
data16
push
scas
push
div
xor
icebp
stos
aam
sbb
and
mov
in
add
mov
lret
push
jle
mov
outsb
pusha
add
cmp
nop
push
sbbb
imul
xchg
adc
dec
push
or
ror
lahf
cmp
xchg
insb
xor
adc
add
sub
push
or
sbb
ss
mull
add
add
aam
loop
xchg
repnz
sub
imul
and
packsswb
ss
inc
pop
or
push
sbb
jo
ja
mov
pop
jno
sbb
call
sbb
fdivl
adc
shlb
inc
push
lcall
fwait
add
ds
cwtl
cli
push
enter
out
jae
mov
dec
adc
dec
mov
hlt
das
cmpsl
jge
imul
inc
insb
in
mov
xor
xor
daa
mov
dec
ss
ljmp
mov
rol
xor
add
movsb
dec
jmp
into
pop
imul
sbb
jns
dec
sbb
ss
rcrl
adc
or
adc
in
dec
pop
fs
ret
imul
mov
lds
pusha
cmp
lea
ds
aam
jg
adc
pop
cli
fsin
add
push
sub
sub
imull
loopne
ficomps
add
mov
mov
je
sub
inc
jns
cmp
inc
ret
jl
lea
push
iret
adc
dec
push
sbb
push
cmp
pop
cmp
push
jae
addr16
cmp
test
insl
xchg
sbb
xor
mov
movups
fdivrl
pop
stos
inc
cs
lret
arpl
pop
movsb
push
inc
fucomi
mov
iret
and
test
mov
mov
mov
or
jo
lcall
inc
pop
clc
sbb
ror
into
dec
mov
xor
fstps
into
mov
xchg
fcomps
xchg
push
add
fwait
js
aam
pop
mov
into
xor
lret
sub
pusha
test
ret
std
add
jno
test
cmc
pop
pop
data16
mov
and
push
sub
mov
xchg
test
pop
fcoms
arpl
jp
loope
dec
jo
aam
inc
adc
lds
popa
cwtl
loope
add
push
mov
push
idivb
jbe
mul
push
imul
ficompl
pop
mov
add
sub
into
or
in
pop
jnp
rcll
jge
mov
sub
js
xchg
leave
std
mov
iret
xlat
int
push
lods
fs
test
pop
sbb
jecxz
ret
push
dec
xlat
mov
sti
sbb
lcall
push
jl
mov
cwtl
dec
mov
or
xchg
ja
pop
shl
xor
mov
mov
inc
sbb
add
pop
xor
xor
adc
inc
dec
mov
adc
cmp
mov
sbb
fcoml
add
fwait
inc
pop
pop
nop
or
repnz
repz
cmc
jno
mov
lea
and
xchg
pushf
mov
test
div
pop
pop
push
sub
fstl
das
nop
dec
xchg
add
data16
and
lahf
dec
cmp
fwait
ja
sbb
mov
xchg
sbbb
fisubrs
dec
and
mov
and
data16
scas
dec
fwait
loope
jmp
push
in
cmpsb
sub
ret
mov
popf
push
mov
push
fists
dec
add
and
pushf
xchg
sbb
xchg
cltd
test
out
inc
loopne
imul
pop
outsl
or
push
pop
fs
or
dec
pop
iret
push
xchg
sub
arpl
outsl
sub
loop
xor
mov
xor
outsl
jno
mov
jg
xchg
and
fcomi
xor
cltd
sub
dec
imull
shl
dec
mov
mulb
mov
jne
stc
inc
cmp
scas
sub
cmpsb
xor
mov
jecxz
adcl
scas
mov
mov
movsb
ljmp
les
incl
adc
and
inc
addl
xchg
bound
push
lret
dec
dec
fistpl
xchg
inc
mov
jg
imul
iret
mov
repz
xor
fxch
adc
js
dec
dec
sbb
or
cwtl
add
inc
dec
cmpsb
enter
nop
ja
lods
mov
aad
sti
mov
dec
std
test
xchg
jecxz
stc
pop
xchg
pushf
dec
data16
mov
jp
sbb
sub
popf
and
mov
cmp
shll
jmp
sub
ret
rclb
inc
ljmp
cmp
icebp
ja
and
or
jnp
ds
fisttps
ds
notl
mov
rorl
mov
dec
cmp
push
cmp
jo
cmp
loop
add
jle
jno
insb
dec
mov
cmp
push
shl
fdivrl
repnz
adc
push
xchg
mov
into
jbe
repnz
loopew
dec
ret
lahf
loopne
rcrl
lods
jl
jp
or
mov
lret
pop
and
or
adc
xor
xor
jne
clc
iret
fadds
nop
mov
dec
outsb
testb
mov
std
push
pusha
std
fcomi
stos
add
adc
or
sbb
mov
cmp
jecxz
mov
js
and
cltd
enter
cwtl
lds
stos
jne
fsubr
cld
and
sub
iret
in
mov
xchg
mov
mov
sbb
leave
cs
add
mov
jbe
push
mov
xlat
pop
xchg
inc
jno
iret
sub
jle
jg
jmp
sbb
mov
cmc
iret
aas
mov
nop
mov
ss
mov
sub
sub
ja
ret
mov
xchg
and
mov
pop
faddl
or
and
loopne
es
popf
fs
or
pop
in
xlat
int3
fisubrl
xor
adc
popf
and
fdivrs
cmpb
push
cmpsb
cmpb
xchg
mov
pop
mov
xor
dec
xchg
or
mov
imul
outsb
dec
out
mov
or
nop
mov
mov
cli
push
rorl
jecxz
ds
add
int3
movsl
clc
int3
adcl
sub
mov
sub
pop
outsb
jg
into
lahf
out
or
lea
mov
pop
out
lock
mov
jge
out
faddl
js
pop
or
xlat
add
jnp
leave
mov
sbb
pop
das
sub
add
lahf
mov
repnz
daa
clc
xor
sub
lcall
jge
push
pop
into
shlb
mov
bound
jne
push
jge
pop
fwait
mov
fimuls
push
ja
push
sbb
push
jnp
data16
dec
or
jecxz
and
loop
inc
xor
mov
dec
loope
sbb
int
mov
in
pop
ds
mov
negl
fcomps
bound
and
push
xchg
inc
movsl
inc
adc
jae
out
xchg
mov
jb
arpl
adc
js
xor
or
mov
mov
xor
mov
stos
out
push
xchg
jp
mov
cmp
sub
negb
inc
imul
or
divl
xor
ljmp
ret
lods
lret
shl
fcomps
xor
mov
stos
cli
les
lahf
mov
movsl
arpl
push
das
cli
mov
out
mov
scas
gs
mov
sbb
mov
iret
lds
cmc
es
loopne
imul
sub
les
rcr
mov
addr16
sub
cmpsb
mov
sub
outsb
sbb
enter
xlat
icebp
add
jae
mov
mov
fwait
out
lds
out
cmp
data16
push
mov
dec
shr
xchg
stc
jp
push
cmp
adc
outsl
and
push
cs
adc
fdivrp
imul
mov
xchg
movsl
out
cmp
out
push
dec
mov
cld
inc
into
adc
cmp
push
xor
cmp
fs
sub
and
xor
jae
test
pop
push
popf
test
push
add
lret
cmpsb
inc
fimuls
and
jno
lods
jge
icebp
mov
dec
mov
dec
sbb
dec
popa
mov
cmp
mov
inc
fsubrp
or
movsl
pop
mov
pop
sub
cmpsl
lock
and
cltd
cmp
stos
cwtl
add
add
sbb
out
fiaddl
mov
or
loope
fmuls
popa
nop
in
jnp
cmc
out
inc
mov
push
xor
data16
push
push
jne,pt
xor
in
sub
add
lds
mov
jecxz
xor
in
std
out
ficoms
stos
mov
fstp
test
dec
sahf
mull
lock
sbb
jo
aam
ss
clc
cli
push
lahf
dec
and
sub
push
hlt
cmp
push
sub
add
fisttpl
aaa
dec
mov
scas
inc
ret
int3
pop
xor
push
or
nop
xor
jg
es
adc
jle
add
pop
pop
or
pushf
and
in
cmpsl
jns
gs
rolb
outsl
out
test
shr
leave
aad
pusha
ds
adc
dec
mov
adc
movsl
jecxz
jle
or
push
push
fsubrl
push
outsl
mov
push
inc
pop
jp
movsl
cwtl
jp
dec
lods
shlb
in
xchg
div
sbb
stos
cmp
popf
add
push
ljmp
mov
movsl
sbb
es
int3
dec
clc
pop
dec
in
push
add
mov
movsl
push
cmp
inc
cmp
mov
fs
fld
lea
cmpsb
jge
ds
sub
cmp
jl
in
cmc
xor
shlb
push
test
cltd
push
mov
aas
popa
les
mov
mov
fwait
mov
cmpsb
inc
mov
add
fsubl
or
fsubrs
mov
int3
and
or
gs
add
imul
repnz
sti
pushf
jg
leave
pop
jae
and
iret
xchg
cld
or
mov
pop
bound
xor
pop
cmp
fisubrs
mov
pusha
mov
fcomps
inc
loop
xchg
dec
aad
mov
fdivrp
lret
cmpsb
inc
out
pop
xchg
enter
push
pop
xchg
ret
cs
popf
nop
rcrb
jp
dec
xor
fwait
pushf
enter
pop
mov
xor
sub
daa
lds
add
icebp
mov
or
sbbl
movsl
test
jae
dec
cmpsl
lahf
inc
pop
push
rol
aas
sub
insb
and
dec
insb
jae
mov
cmp
stos
popf
out
lock
sbb
adc
mov
mov
mov
or
fimull
rorl
loope
int
jecxz
in
jae
mov
lret
fs
popl
dec
repz
es
pop
shrl
mov
pop
aaa
imul
arpl
bound
and
arpl
sbb
sti
dec
cmpsb
sahf
ret
fstsw
cltd
movsb
adc
ds
mov
mov
add
ss
nop
sub
jo
or
rcl
dec
sbb
sub
cmpsb
mov
int3
in
push
pop
sub
push
ret
cmp
inc
jno
or
sbb
sbb
pop
inc
mov
push
cld
xchg
mov
xchg
push
pushl
into
push
insb
jbe
and
jl
sbb
xor
and
daa
pushf
fsubs
ret
repnz
divl
or
mov
mov
jmp
mov
sub
or
std
inc
neg
adc
dec
jnp
pop
or
sub
ja
fildll
rorb
lods
cmp
js
mov
push
popf
cli
mov
mov
mov
xorl
aad
aad
and
mov
fdivs
rcrl
loopne
xchg
xlat
xor
out
aaa
push
and
jp
insl
cmp
and
inc
mov
or
les
movsb
in
sbb
fisubs
push
xchg
fbld
jno
sub
mov
jns
jae
lret
lea
call
jge
lods
jbe
aaa
push
popf
mov
sub
inc
adc
pop
xor
pushf
xchg
movsb
sbb
pop
sbb
cmp
dec
cltd
clc
lods
rolb
test
data16
add
jmp
jl
leave
cmpb
xchg
out
xor
or
push
mov
scas
adc
jecxz
outsl
dec
inc
lea
dec
add
inc
cmp
aaa
dec
ljmp
cmp
pcmpgtw
inc
adc
push
push
scas
movb
mov
pop
mov
fidivrs
sub
mov
mov
and
jbe
sbb
jb
mov
add
into
pop
ret
cld
dec
dec
movsl
lods
fimull
pop
xchg
rolb
sub
inc
out
ret
lcall
fldt
or
dec
push
add
push
ljmp
cmp
pusha
pop
notb
push
cmp
adc
push
lret
xchg
in
xorl
cmpsb
loope
das
dec
push
xorl
ds
add
fsubrs
xchg
sub
lcall
jg
mov
jp
cld
dec
mov
lahf
ffree
add
xor
jmp
outsb
push
std
scas
mov
cmp
imul
sub
add
sti
stos
adc
mov
les
inc
or
mov
pop
sti
inc
mov
in
roll
fwait
inc
mov
push
add
inc
mov
sub
popf
xlat
psrld
or
dec
fsubrl
pop
push
pop
jp
adc
out
mov
test
fs
push
fstl
jp
jne
push
push
xchg
clc
and
into
or
pop
aaa
mov
inc
mov
sbb
xor
jge
mov
cltd
mov
cmp
ret
adc
mov
iret
xchg
sti
sbb
movsl
and
or
leave
cld
jno
fs
lret
sar
out
cmp
xchg
iret
ljmp
mov
aad
cmpsb
xor
imul
addb
cmc
sahf
movsb
fiaddl
clc
ss
scas
das
iret
loop
inc
dec
jnp
rcll
and
loopne
push
mov
lods
rol
cmp
ficomps
xor
dec
pusha
push
pusha
cmc
mov
insl
push
mov
mov
ficomps
add
clc
dec
and
f2xm1
lret
test
jns
cmp
xchg
popa
mov
mov
lahf
jmp
ret
adc
and
dec
cmp
adc
arpl
push
cld
jle
lret
outsb
aam
inc
inc
mov
in
call
push
add
jg
mov
mov
lcall
push
push
dec
cmc
mov
and
push
dec
lods
addr16
hlt
nop
sbb
xor
cmp
cmp
mov
pop
jg
data16
ss
idiv
dec
mov
push
fdivl
push
jbe
mov
imul
jp
add
scas
or
arpl
jbe
ja
mov
es
mov
push
cmc
clc
or
pop
xchg
aam
xlat
mov
push
icebp
xor
test
cmpsl
imul
jge
in
inc
aas
ljmp
pop
cli
in
mov
dec
out
push
fsubl
jecxz
mov
cmp
adc
mov
and
out
fs
jl
jmp
adc
pop
sarb
ljmp
popa
adc
cmp
dec
pusha
push
js
mov
or
lods
aad
adc
or
and
add
ljmp
lods
push
negb
popf
add
aad
push
rolb
mov
sti
fcomp
xchg
cmpsl
scas
add
xchg
ja
dec
inc
in
sub
cwtl
inc
out
pop
push
lcall
enter
cmpsl
imul
in
mov
jl
mov
push
std
xchg
rcll
mov
xchg
mov
push
mov
scas
jmp
in
imul
jp
subl
mov
fsts
xlat
addl
call
mov
stos
dec
cmpsb
icebp
mov
iret
push
lahf
dec
pop
push
sbb
push
sbb
add
mov
jnp
fadds
lahf
fwait
ss
test
fmuls
mov
sub
ds
push
out
lea
push
nop
hlt
bound
mov
dec
xor
adc
aam
xor
fistl
adc
aam
enter
test
int
mov
inc
jl
stc
xchg
ja
cmp
iret
es
jnp
mov
or
rcrb
scas
mov
mov
data16
imul
pop
data16
int
test
imul
outsb
xor
inc
xchg
aad
call
or
icebp
mov
jle
ja
push
xchg
adc
pop
pushf
add
mov
xchg
ret
fadd
lahf
mov
jp
outsb
adc
enter
mov
xchg
pop
out
in
daa
pop
adc
lds
cli
and
lds
pop
test
nop
jb
jg
out
insb
mov
popa
jnp
fsub
in
push
ss
es
adc
mov
mov
lcall
pop
incl
push
idivl
xchg
jle
pusha
sub
add
imul
inc
fldlg2
jne
dec
xchg
fstpt
aas
push
pusha
adc
add
inc
dec
test
mov
movsb
stc
sbb
add
mov
jmp
pop
dec
mov
push
or
lret
sub
leave
adc
lods
cmp
dec
sub
add
mov
loop
in
sbb
ja
and
nop
mull
rcrl
sbb
clc
dec
repz
test
sub
fcoms
repnz
hlt
sub
inc
pop
in
or
xchg
std
or
mov
fisttpl
xor
std
dec
lret
out
movsb
cmp
jb
int
test
cwtl
sbb
addr16
jmp
in
outsb
push
leave
mov
xchg
dec
xchg
xor
idiv
shlb
cmpsl
cmpsb
rcrl
xchg
mov
fmul
adc
xchg
sbb
decb
add
aaa
ss
cltd
mov
mov
int3
add
insl
hlt
xor
ficoms
mov
rcrl
cmp
loope
or
sub
mov
stc
out
xchg
mov
xchg
jnp
dec
sub
xor
sub
mov
movsb
aad
and
sbb
and
outsl
out
pop
push
popf
pop
fdivrl
mov
shl
lods
jle
add
cmp
aaa
subb
fdivr
mov
or
test
inc
mov
xor
popf
pop
jl
ss
jno
push
sub
xor
jle
or
cwtl
lock
or
sbb
repnz
xchg
popa
push
pop
jge
push
xchg
xchg
add
mov
les
push
jp
or
adc
int
ss
aas
mov
pop
add
jg
out
pop
pop
in
in
mov
lds
fnstsw
in
xor
je
andb
mov
sbb
hlt
int3
pop
roll
jo
adc
scas
mov
sbb
or
mov
push
lcall
dec
add
dec
int
mov
mov
lods
jns
test
inc
mov
js
mov
mov
mov
outsb
je
mov
rcr
cmc
inc
aaa
movsb
add
jle
arpl
bound
cmp
aam
jl
pushl
inc
and
xor
fadds
cli
xor
jne
std
inc
mov
std
and
lods
dec
pop
push
push
jl
out
jb
mov
sbb
int
mov
adc
inc
popa
outsl
jle
mov
xchg
lcall
scas
add
std
lods
cmp
pop
mov
bnd
mov
mov
cs
inc
cld
jae
xor
cmp
push
repnz
lods
jae
jno
arpl
dec
icebp
scas
imul
xchg
jno
rcll
cld
mov
inc
out
cltd
push
rcr
xchg
arpl
push
xor
pop
mov
test
push
push
cmp
test
mov
out
mov
mov
or
mov
sbb
or
out
cli
scas
dec
push
jle
bound
repnz
test
insl
jecxz
repnz
out
sub
xchg
jns
inc
jne
xchg
hlt
je
and
push
ds
pop
adc
or
jge
xor
mov
loope
loope
cli
cmp
dec
sbb
jnp
cld
cmc
addr16
fcmovne
push
or
fdivrs
addr16
lods
cmp
inc
jae
jb
xor
mov
inc
lods
mov
cmpsb
sbbb
mov
test
fldl
lds
lret
jmp
jnp
mov
inc
sbb
rorb
or
add
jl
and
and
add
mov
sti
mov
es
push
jb
in
mov
daa
and
enter
push
out
mov
and
jbe
or
aam
repz
inc
push
faddp
inc
sbb
fdiv
mov
lods
mov
dec
fsts
nop
aaa
mov
ret
cmp
dec
cmp
xor
cld
push
jle
dec
jp
into
popa
loope
mov
lods
add
inc
test
push
mulb
lret
jge
pop
or
sahf
sbb
jnp
lods
push
addr16
adc
je
cli
call
cmp
nop
out
xor
and
rorl
add
incl
push
and
mov
shrl
js
aad
xor
pushf
xchg
mov
pop
push
add
jge
mov
push
lock
mov
in
jo
ljmp
aam
adc
cs
and
mov
shrl
lret
sub
in
and
insb
mov
ficoml
xchg
push
adc
sub
xor
sbb
mov
pop
push
out
cmp
call
rcll
xor
xor
xchg
mov
dec
push
rorl
js
gs
mov
cs
sti
out
in
movsl
add
inc
push
push
std
sahf
dec
pop
push
or
mov
ret
js
in
sbb
mov
gs
jb
ret
insb
mov
inc
es
cmp
push
out
xchg
dec
mov
flds
and
cltd
xor
mov
mov
into
cs
or
inc
stos
inc
add
popa
sub
push
mov
ljmp
hlt
and
ljmp
inc
add
xor
fstpt
lcall
pop
jne
add
inc
ss
lcall
xchg
clc
imul
or
push
jg
jne
cmp
adc
int3
mov
xchg
test
xlat
imul
xor
xorb
pop
xchg
or
pop
fwait
nop
cmp
and
into
cli
mov
shrb
in
mov
lret
adc
xor
push
mov
dec
mov
pop
aas
leave
push
scas
iret
loope
or
jo
mov
sbb
fdivrl
lret
shll
fwait
call
sbb
mov
ds
push
mov
jmp
shlb
scas
mov
jle
fcmovnb
jl
xchg
out
bound
xor
fwait
arpl
sub
xor
inc
pop
push
loope
sbb
cltd
enter
adc
rep
add
fnstcw
push
push
jecxz
cmpsb
pop
sbb
fcoml
sar
es
fcomip
bound
mov
mov
rcl
adc
aaa
mov
push
ficoml
pop
jl
dec
pop
mov
mov
mov
xchg
and
jb
mov
js
pop
xor
and
cmpb
mov
inc
or
mov
ss
mov
lods
jmp
sbb
stc
mov
or
and
lock
adc
or
pop
mov
in
loopne
pusha
flds
adc
push
out
cmpsl
mov
mov
les
aaa
xor
test
inc
push
iret
addr16
icebp
jne
int3
in
bound
sbb
pop
add
cmp
loopne
mov
fisttps
sbb
cltd
xchg
jb
xlat
imul
inc
or
into
stos
insl
push
inc
adc
jne
jae
lods
sbb
sbb
push
shlb
ljmp
enter
jae
inc
rorl
mov
ljmp
repz
insb
adc
sbb
push
lods
and
data16
jae
ljmp
call
mov
inc
arpl
pop
xor
outsl
mov
aas
jae
jnp
adc
xor
mov
xlat
add
mov
add
add
cwtl
and
pop
mov
leave
stos
cli
adc
lock
cmp
add
aaa
repz
and
sub
cmp
add
fildll
pop
scas
sub
cmpsb
int3
pop
mov
leave
adc
inc
ja
mov
insl
push
sbb
xor
roll
xchg
adc
mov
mov
and
stos
sbb
sub
loop
roll
sbb
imul
xor
sar
push
outsb
in
add
fisubrs
roll
lahf
pop
adc
cmp
bound
add
push
pop
cmc
outsl
push
push
mov
sub
sbb
aas
fstps
sbb
popa
lahf
dec
movsb
insl
push
mov
push
test
fdivs
add
stos
push
pop
nop
pusha
mov
push
ljmp
and
scas
cmp
mov
and
sub
enter
dec
jge
dec
xchg
in
dec
lods
mov
shrb
jo
pop
shll
outsl
mov
xor
lods
push
pop
jbe
jnp
cltd
jecxz
sbb
push
test
imul
add
mov
pop
inc
insl
pop
scas
jns
in
xor
jecxz
and
insb
clc
fwait
jno
or
fildll
out
push
shr
cmc
dec
into
inc
add
adcl
sub
fsubrl
add
int3
fxch
push
js
fidivrs
loopne
mov
mov
fildl
movl
in
pop
jae
and
pop
dec
xor
roll
xorb
xor
push
aas
dec
sbb
stc
xor
sahf
sbb
aas
jo
dec
pop
idivl
bound
addr16
mov
aad
in
shl
mov
js
jno
mov
push
sbb
dec
add
testl
cmp
icebp
pop
dec
adc
stc
inc
xor
xchg
push
add
scas
mov
xchg
pop
scas
cltd
mov
jno
loope
or
mov
inc
test
iret
mov
dec
gs
adcl
pop
mov
in
cmpsb
rclb
mov
or
xchg
cmc
xchg
sahf
xchg
nop
test
imul
lods
mov
into
mov
xchg
push
aam
cmp
cmp
aas
mov
test
sarb
sbb
xor
test
test
push
lods
repnz
cmpl
ja
sarl
loope
loopne
movsb
xchg
xchg
aas
jo
mov
and
sbb
mov
jns
xor
out
or
or
and
leave
pop
mov
xor
inc
call
insl
scas
sbb
jg
and
xchg
lret
push
daa
jb
mov
jl
dec
pop
xor
mov
inc
inc
pop
test
mov
negb
xor
insb
push
insb
jo
out
aaa
pop
mov
adc
inc
in
mov
outsb
aas
popf
andb
imul
or
add
dec
xchg
popl
add
mov
push
js
sbb
pop
gs
jbe
or
inc
mov
xor
insb
lcall
and
xlat
sub
test
and
pusha
subb
xor
push
sti
aaa
pushl
shll
push
inc
sub
aam
out
inc
pop
sub
sarl
imul
xor
xor
sbbl
xchg
and
or
fisttpl
lret
and
xchg
dec
push
push
inc
sahf
xor
adc
imul
push
jmp
mov
and
pop
out
popf
dec
int3
enter
mov
out
jne
jmp
xchg
andb
lock
pop
jae
mov
cmp
hlt
jne
fisttpll
xor
pop
std
fiadds
pop
add
dec
push
nop
in
mov
pop
repz
jp
push
cmp
jecxz
or
fidivrl
xchg
dec
out
jp
inc
scas
loope
mov
adc
sbb
lret
in
mul
adcb
dec
ffreep
fistpll
push
shll
sub
loopne
inc
push
rorb
cmpsb
out
shlb
packuswb
bound
sbb
and
idiv
mov
stc
loop
lret
jno
sub
jae
pop
imul
fwait
jns
dec
sahf
int
and
dec
negl
mov
in
pop
int3
repnz
repz
and
lcall
out
xor
divl
adc
or
sub
push
add
inc
sti
mov
inc
xchg
sub
add
inc
xchg
shll
push
xor
add
ds
mov
inc
outsb
sbb
jnp
or
stos
popf
dec
mov
mov
aad
jo
mov
sub
mov
inc
dec
lods
negl
bound
insl
xchg
outsb
or
gs
in
push
imul
lcall
aad
jnp
cmc
jnp
push
pop
fldenv
cmp
push
iret
mov
mov
call
cmp
mov
cmp
arpl
shlb
or
sbb
push
cld
in
push
fadds
sahf
pop
pop
cmp
mov
mov
mov
cmp
jg
push
push
test
dec
filds
stos
cwtl
add
mov
rcll
stos
xchg
push
sbb
adc
mov
cld
ds
hlt
pop
or
mov
rcll
scas
inc
push
dec
pop
mov
sbb
iret
mov
loope
lods
adc
mov
push
in
push
inc
xchg
mov
inc
ss
push
push
mov
iret
rorl
gs
sub
or
ficompl
cmp
insl
stos
lahf
dec
popf
ja
sti
fsubs
test
hlt
jne
inc
xor
sub
mov
imul
int
mov
insl
push
inc
stc
mov
and
jecxz
push
mov
add
cld
xchg
mov
mov
cwtl
movsb
inc
cli
jb
in
adc
movsl
lods
arpl
cmc
inc
sbb
jb
notl
daa
popf
dec
fnstcw
stos
das
movsl
add
jne
loope
push
pop
xchg
adc
push
or
sub
fildl
inc
fisubl
daa
stc
imul
adc
outsb
and
stc
xchg
push
xchg
repz
gs
nop
rcll
mov
aad
sbb
mov
mov
or
inc
and
xor
xchg
mov
rcrl
fbld
ss
repnz
sbb
inc
jg
mov
rcr
cmpsb
jecxz
dec
adc
push
jns
popf
mov
cmp
jp
inc
popa
push
push
jnp
dec
mov
adc
or
arpl
scas
dec
enter
cmpl
xchg
adc
dec
sbb
add
pop
mov
pop
inc
enter
jl
add
dec
pop
lret
or
popa
test
push
cmpsb
repnz
jmp
xchg
inc
ret
push
outsl
iret
fstps
fisubrl
out
add
lahf
and
aad
or
pop
shll
add
shrb
pop
inc
rcr
or
js
daa
mov
fcomps
addb
mov
inc
call
mov
in
dec
adc
fsubrp
or
inc
ret
dec
inc
cmpsl
mov
inc
je
sub
cs
or
mov
repnz
popl
fwait
dec
push
fnstsw
test
cmp
repnz
leave
data16
xchg
mov
mov
push
cmc
inc
incl
nop
jnp
test
or
mov
lods
pop
shll
add
aam
push
dec
testl
out
out
dec
loop
jno
xor
cmpl
mov
rolb
cmp
jns
popa
test
arpl
mov
and
leave
call
sub
ficompl
fsubr
push
rcrl
sahf
popa
mov
cs
int3
jbe
xchg
sub
stc
dec
xchg
incl
decb
dec
div
pop
add
pop
rclb
and
addb
cmp
mov
xchg
xor
fdivs
mov
sbb
sahf
sub
icebp
jno
fsub
adc
add
pop
and
adc
jns
je
aaa
scas
or
push
cmp
aaa
mov
adc
add
cmpsb
mov
add
out
nop
orl
out
sub
out
mov
mov
sbb
out
cmp
daa
push
sub
sbbl
cmp
fstpt
sbb
rorb
data16
inc
cs
outsb
ret
inc
lods
movmskps
mov
and
and
xchg
adc
cmp
add
inc
jno
add
fs
dec
push
cmpsl
bound
xchg
push
xchg
std
xchg
pop
nop
movsb
inc
add
cs
mov
hlt
pop
pop
and
push
loope
jo
stc
inc
adc
mov
or
cmp
sbb
mov
sbb
xchg
lret
mov
xchg
or
insl
or
popf
ljmp
fdivl
out
shll
mov
mov
loopne
lock
xor
cmc
or
sub
pop
mov
lods
outsl
movsb
cmp
xchg
add
push
cld
insb
aad
push
aad
stos
sbb
je
or
pop
mov
aaa
fdivr
lcall
aaa
cmp
leave
xor
push
push
add
jle
xchg
pop
push
push
xchg
pop
shrl
cs
div
pusha
sub
push
xor
in
or
mov
cwtl
sarl
roll
dec
outsb
cltd
mov
and
push
ds
lcall
adc
adcb
pop
fistl
and
push
sub
mov
ljmp
mov
lret
ljmp
icebp
sub
jg
xor
bound
insb
imul
stc
test
push
in
fsubrp
mov
mov
inc
sti
pop
jns
dec
gs
imul
xchg
and
xor
cmp
xchg
mov
popf
adc
aas
repnz
ret
push
les
mov
es
andb
sub
roll
dec
mov
jecxz
xor
sbb
xchg
out
xchg
push
aaa
sbb
pushf
out
sub
nop
hlt
push
jg
push
stos
stos
shlb
nop
xchg
cmp
rcl
lret
in
out
out
adc
mov
xchg
pop
rorl
mov
popa
cmc
push
mov
mov
insb
sub
insl
mov
outsb
sti
cmpsl
mov
and
mov
xorb
or
or
add
jno
int3
jo
mov
push
adc
scas
cmp
inc
push
or
push
lret
jo
leave
xchg
faddl
fidivs
pusha
add
pop
in
adc
and
loope
add
ljmp
mov
push
ja
icebp
test
out
push
cmp
out
adcb
cmpl
into
and
into
rolb
pop
rorb
cmp
mov
xor
lahf
enter
cltd
xor
pop
add
sarb
stc
push
rol
cmpsb
sbb
cli
cltd
jmp
cwtl
add
xor
sbb
pop
xchg
pop
jo
cmp
add
sbb
dec
jb
inc
fwait
cld
pop
or
xlat
and
cvttps2pi
call
clc
or
lcall
mov
lods
fnstcw
mov
cltd
xchg
mov
cmpsl
rorl
out
cmp
xchg
out
pusha
lds
sbb
pusha
mov
insb
xor
in
mov
adcl
js
daa
mov
mov
cs
outsb
lret
xor
cmp
dec
xlat
aam
clc
loope
scas
jb
sarb
gs
mov
out
mov
pop
jae
or
faddl
xchg
dec
and
es
shrl
and
jmp
mov
stos
dec
mov
jl
mov
inc
sbb
jbe
push
xor
bound
data16
sbb
aaa
xorb
mov
or
xor
cmp
ds
rcll
fcompl
fcoms
cwtl
xchg
add
les
adc
jo
dec
mov
sub
xlat
pop
dec
lock
dec
jp
ret
jg
shll
mov
and
pop
xor
pusha
enter
pop
push
mov
jne
imul
mov
sbb
lods
movsb
cwtl
mov
pop
jb
int3
into
dec
jmp
push
xchg
mov
mov
ja
jmp
xor
lods
cmp
test
sub
into
ret
mov
int
mov
inc
int3
int3
iret
jns
sub
lcall
out
ljmp
in
add
or
xchg
popf
sub
cld
mov
mov
jecxz
lcall
lods
dec
fs
popf
mov
nop
cmp
xchg
push
lds
xchg
je
pushf
sub
test
xor
mov
out
jecxz
or
sbb
movb
lods
mov
or
add
adc
sub
in
cmp
test
sub
fisubrs
xchg
movsb
xor
lock
add
mov
sub
pop
push
orl
and
push
pop
jne
inc
cmp
out
adc
pop
push
jge
jp
outsb
inc
push
lret
jnp
aad
xchg
cltd
movsl
aaa
fwait
and
bound
inc
xchg
outsl
inc
pusha
and
les
mov
mov
cmp
pop
add
cmpsl
jmp
or
inc
std
pop
xchg
inc
cltd
pop
pop
out
xor
xor
cmp
jmp
pop
imul
mov
push
push
jl
cmp
cmp
or
xchg
sub
movsb
sub
inc
jecxz
and
xlat
imul
xchg
cmp
ja
lret
aaa
jno
ret
jno
pop
mov
mov
mov
xor
hlt
adc
add
sbb
xacquire
movb
or
mov
cmp
cmp
in
sbb
inc
pop
shl
push
imul
gs
mov
push
sahf
daa
in
push
pop
out
insb
sahf
lea
and
hlt
jmp
push
aas
pop
enter
shrl
aaa
lock
push
out
imul
pop
mov
add
mov
rclb
pop
xor
inc
sahf
mov
jns
imul
mov
andb
sbb
lahf
into
dec
in
nop
and
jnp
mov
call
dec
fs
jp
stc
inc
xchg
push
add
ret
movsl
cmp
mov
xchg
jb
and
int3
lock
out
mov
sub
sbb
div
jecxz
iret
jno
jl
xor
mov
imul
mov
mov
lds
fmul
sub
movsl
fiadds
gs
iret
jp
jo
insb
outsl
mov
jns
in
repnz
jo
push
sub
ret
aas
sbb
imul
mov
xchg
push
pop
ret
sahf
pusha
mov
mov
or
and
dec
jecxz
fisubl
mov
fwait
push
mov
fadds
inc
fisubs
in
mov
pop
test
cs
adc
js
mov
mov
sub
mov
push
add
insb
popf
lea
inc
xchg
stos
lcall
mov
jno
loop
call
jo
fwait
jns
fwait
and
sub
pop
inc
adc
adcl
fstl
jge,pn
mov
and
out
xchg
mov
inc
repnz
cmc
or
lea
jo
and
dec
outsb
adcb
adc
pop
mov
lahf
mov
lret
jge
in
idivb
loop
sbb
pop
sbb
sbb
inc
inc
daa
add
rcll
jg
fs
push
idiv
sarl
push
jle
xor
xchg
cmp
sbb
ror
inc
mov
mov
inc
adc
jo
stos
mov
add
mov
adc
and
mov
push
xchg
mov
mov
pop
sub
aaa
jnp
add
adc
notb
pop
jb
ss
insb
movb
outsb
fwait
test
loopne
and
sbb
mov
sub
mov
shl
push
jle
and
inc
movsl
rcrb
aad
insl
lods
je
mov
sub
arpl
stc
add
dec
jp
fsubrs
aam
push
imul
lods
jmp
xor
xor
xchg
jle
out
out
cmp
push
xchg
add
sub
mov
imul
cmp
xor
push
fcomi
adc
inc
out
sub
push
xchg
sub
xchg
inc
push
ja
jmp
movsb
jmp
out
add
pop
test
mov
xor
out
fmul
stos
jbe
jbe
xchg
pop
scas
push
enter
ret
lods
ljmp
ds
sar
jge
rol
fbld
mov
dec
mov
dec
ficoml
icebp
xchg
stos
xchg
enter
stos
pop
or
cmp
jmp
jo
jmp
cmc
loope
push
das
dec
mov
jo
shlb
aam
mov
lds
in
ja
lods
ret
and
sbb
or
cld
std
fsubrs
ljmp
mov
jmp
and
hlt
push
lret
movsl
push
ds
mov
pop
stos
in
and
jmp
pusha
lea
mov
aas
lea
cmpsb
jp
loopne
inc
leave
dec
lods
mov
xchg
push
pop
push
xor
inc
and
inc
out
cmp
dec
rcr
bnd
xchg
flds
enter
rcr
jnp
fcmovnbe
adcl
aas
xchg
hlt
ret
or
pop
push
addr16
jmp
or
sbb
add
aad
push
int3
and
dec
aas
pop
push
inc
movsl
jmp
int3
xchg
xchg
sub
pusha
lods
cs
mov
mov
push
dec
jmp
push
sahf
and
mov
inc
xchg
xor
mov
push
mov
mov
lods
scas
xor
pop
push
cs
out
out
jge
mov
cmpsl
aas
aaa
sub
rcr
movsb
ss
dec
aaa
xor
or
pop
and
pop
xor
add
lret
push
mov
xchg
lahf
rcrl
xchg
clc
cmp
xor
imul
outsb
scas
inc
pop
sbb
sahf
adc
daa
push
jle
rol
mov
jle
mov
xchg
orb
dec
inc
cmp
mov
mov
sarl
jle
clc
xchg
pop
xor
mov
and
push
lods
xchg
gs
clc
in
pop
out
mov
pop
ret
sbb
into
and
into
mov
es
sub
xor
sub
iret
fistl
mov
pop
jne
scas
lock
xchg
inc
sub
aad
pop
adc
xor
imul
xor
movzwl
fdiv
lock
add
test
pop
lock
cmp
or
push
jae
insl
aad
lret
movsb
enter
scas
ljmp
and
dec
rcrw
cmpb
test
push
dec
jmp
mov
xor
insl
out
sbb
sub
dec
dec
fsubrs
in
mov
add
ret
cmp
push
xchg
and
jle
jecxz
jne
adc
movsl
jno
mov
sub
je
ds
push
sub
and
sbb
sub
test
mov
je
imul
jecxz
sbb
push
scas
xchg
nop
leave
add
daa
sub
idivb
lock
nop
xchg
inc
jo
lret
mov
push
pop
pop
and
sti
sbb
push
ss
cmpsl
cltd
dec
cwtl
in
mov
test
aas
add
daa
cmc
jge
fisttps
mov
rorl
loop
or
cs
pop
aas
ds
rcll
pop
cmpsl
inc
in
imul
cmp
mov
rcr
push
mov
fwait
movsl
std
or
aam
and
lcall
testl
and
scas
sub
cmp
loopne
stos
cmp
cmp
push
xchg
xchg
xchg
fs
push
adc
loopne
call
shr
js
lret
out
adc
out
daa
push
dec
rorb
leave
mov
push
xchg
sahf
dec
fldcw
mov
inc
iret
lea
in
mov
sbb
jno
mov
imul
mov
pop
test
fsubs
clc
nop
or
xor
into
push
sbbb
mov
out
fistpl
xchg
jle
xor
loopne
popf
inc
test
xchg
and
repnz
pushf
xor
popf
sub
jmp
add
out
mov
scas
popf
test
mov
push
dec
xchg
loop
cmp
xor
dec
out
stc
dec
aaa
mov
jmp
lods
push
cs
gs
push
fsubs
pop
int3
sbb
jmp
jmp
jecxz
je
mov
enter
pop
cs
sbb
repz
dec
lcall
xchg
and
fldln2
push
or
out
pusha
out
pop
pop
sahf
fwait
mov
adc
mov
mov
gs
cwtl
arpl
jb
jg
arpl
aad
mov
ret
jns
hlt
and
add
and
mov
loope
leave
dec
and
push
jl
in
jb
movsb
push
and
mov
jno
repz
loope
lcall
mov
aam
dec
jmp
in
ret
lock
add
jbe
fcoms
jb
mov
movb
mov
xlat
push
xor
sahf
ljmp
pushf
xchg
nopl
jp
inc
mov
stc
adc
leave
and
rol
inc
pop
dec
push
inc
dec
cmp
sub
popl
jae
sub
jne
inc
out
lret
pop
mov
inc
loop
je
xchg
pop
ret
loopne
ds
adc
xchg
out
cmp
inc
mov
pop
pop
out
mov
or
adc
test
imul
xchg
mov
adc
pushf
pop
outsb
out
jno
mov
lods
dec
ret
jae
dec
push
inc
std
mov
or
push
lret
jge
push
mov
pop
dec
or
adc
insl
push
shll
ja
add
adc
and
mov
lds
divb
mov
add
mov
mov
and
int3
jae
jecxz
ror
cmp
cmpsb
mov
pop
add
fistpll
or
inc
push
and
mov
enter
repnz
rolb
out
aad
mov
add
fwait
sbb
and
out
pop
loopne
mov
xchg
lds
notb
mov
mov
divb
jp
cmp
ret
inc
ja
mov
addr16
xlat
add
bound
jbe
mov
sbb
mov
or
loop
and
pop
inc
mov
fisubl
out
dec
out
mov
jne
cmp
stc
sbb
jo
and
push
mov
pop
xchg
sub
jmp
mov
jns
or
popa
cs
jp
mov
test
mov
jge
jg
ljmp
stc
negl
call
imul
imul
stc
dec
xor
iret
lea
adc
push
arpl
xchg
sbb
sub
dec
cs
adc
mov
pop
push
add
loopw
push
dec
or
rclb
movsb
inc
push
call
ret
mov
imul
imul
mov
xchg
mov
aas
test
cmc
mov
daa
shlb
lret
lcall
adc
ss
les
cwtl
push
mov
pushf
add
test
mov
jmp
jle
inc
mov
arpl
cltd
adc
cmpsl
dec
push
and
mov
or
jnp
in
aad
jns
xor
push
xor
into
dec
xchg
jbe
shlb
out
sub
outsb
mov
push
aas
dec
fsubrp
push
jge
cmc
adc
push
cmp
sub
lods
add
popa
hlt
data16
repz
jp
test
cmp
ret
lock
dec
bound
and
lods
jmp
cli
xor
adc
sbb
or
jle
sub
adc
mov
mov
dec
push
push
cmp
sbb
imul
int3
ljmp
pop
xchg
mov
call
int
orb
addr16
stos
repz
test
ret
jo
cmc
sub
cltd
or
xchg
lock
pop
scas
lahf
xor
sarb
inc
sbb
jne
and
lahf
and
mov
hlt
pop
movsw
jb
sub
or
nop
xlat
mov
rcrb
lds
leave
or
sbb
push
inc
push
les
sub
movsl
dec
out
cmp
xlat
dec
outsb
sub
imul
ljmp
les
pushf
jae
pop
cld
xchg
cli
add
mov
popf
inc
adc
iret
dec
es
mov
and
xorl
inc
mov
popf
sub
inc
mov
out
sbb
xor
and
add
sbb
je
xor
mov
or
or
mov
cmp
outsl
xor
std
gs
js
jne
or
shlb
mov
icebp
enter
xchg
cmp
xchg
dec
jnp
inc
cmpsl
xchg
inc
push
push
or
dec
addr16
sub
jae
out
call
mov
out
int
xchg
std
pusha
mov
sub
lods
xchg
xlat
into
xor
outsb
or
aaa
add
outsl
xor
iret
fs
sbb
jl
cmpsl
cltd
or
and
xchg
dec
inc
xchg
incb
dec
fmulp
outsl
lcall
setle
jb
inc
dec
mov
sub
jne
xchg
mov
pop
or
mov
jg
and
cmpsb
jmp
adc
sbb
addr16
pushf
rcr
imul
dec
cltd
dec
jb
mov
mov
clc
push
pop
sti
add
inc
repz
cwtl
orl
movsl
outsb
gs
push
fisubrl
cmp
xchg
mov
pop
adc
mov
add
pop
mov
das
mov
sbb
mul
cmp
stos
jns
out
push
sbb
mov
xchg
push
xchg
cmp
mov
stos
mov
dec
sub
insl
ds
jb
xor
add
lahf
pop
mov
push
pop
imul
push
jne
add
dec
pop
jecxz
dec
pop
pop
xorl
fwait
and
fldl
add
test
inc
dec
inc
pop
int3
loop
mov
pop
adc
fwait
andl
xor
mov
add
mov
roll
mov
int3
or
cli
das
cltd
pop
and
ljmp
push
lea
mov
fisubrl
mov
pop
sbb
cmp
xlat
or
xchg
mov
sub
dec
mov
jp
or
mov
pop
adc
sbb
repnz
in
arpl
jecxz
lcall
cwtl
mov
add
jp
aas
mov
sub
pop
daa
stos
cmp
mov
jge
mov
xor
pop
cmp
pop
sub
sub
push
cmp
rorb
adc
invd
cli
aaa
int3
out
cmp
xor
aas
jb
xchg
pop
orl
dec
lea
fistpl
fs
push
jbe
lahf
xorl
je
loop
fists
inc
pop
inc
mov
inc
or
add
shll
int3
scas
popf
mov
scas
mov
lret
mov
adc
cs
sbb
push
div
pusha
jle
int3
daa
mov
push
shrb
cwtl
outsb
push
inc
xor
xor
lods
in
sub
jae
push
xor
jns
jmp
mov
loopne
movsb
out
push
sub
je
mov
shrl
sarl
dec
test
push
jb
xor
jno
scas
sub
in
repz
pop
std
mov
clc
rcrl
pop
daa
clc
mov
add
pushf
lods
fildll
lock
and
movsb
aaa
xchg
out
sbb
push
in
xchg
addb
inc
adc
dec
aad
test
js
repnz
push
mov
dec
outsl
outsb
push
jbe
loop
lahf
out
sbbl
loop
mov
inc
stos
jge
lods
ror
cld
add
mov
dec
dec
or
incb
cmp
ds
cmpsl
stc
testb
or
sub
loope
mov
shrb
fcmovu
lods
out
pop
lock
jmp
add
sub
pushl
and
loopne
and
mov
xchg
fisttps
xor
sbb
cmp
inc
int3
pop
push
repnz
sub
fiadds
pop
cmp
and
xlat
jbe
aad
jge
scas
aaa
pushf
mov
outsb
femms
dec
add
adc
inc
lods
jb
aaa
xchg
imulb
out
sbb
adc
jl
mov
insb
push
pushf
rcrb
xor
scas
jb
clc
mov
inc
push
enter
pop
jne
lods
and
les
ja
jl
mul
push
data16
test
lea
xchg
icebp
je
lcall
or
hlt
mov
lock
pusha
sbb
aas
nop
fisubs
pop
test
and
fs
enter
mov
push
cmp
inc
push
pop
sub
lahf
pushf
xchg
sub
jne
ljmp
lds
jb
loop
mov
cwtl
pop
aaa
sti
scas
mov
cmc
inc
js
or
aaa
and
cmp
jns
ds
push
inc
sbb
dec
scas
push
in
iret
push
mov
pop
ds
daa
cwtl
or
and
call
pop
movb
xor
cwtl
jmp
xchg
ret
jle
imul
sub
sarb
out
sbb
in
fnsave
lods
std
adc
mov
repnz
xchg
inc
adc
ljmpw
dec
data16
lahf
ss
cmp
arpl
lods
lahf
popa
jmp
lcall
mov
gs
push
daa
sub
lds
in
sub
jmp
ljmp
int
sub
inc
leave
sub
mov
inc
out
lahf
decb
lods
aas
inc
cmpsb
loopne
dec
outsl
xchg
js
jl
adcb
pushf
mov
add
jnp
xchg
push
mov
and
movsl
mov
sub
or
mov
mov
xor
mov
or
jl
jnp
iret
push
into
xor
sarb
pop
dec
js
sbb
fildl
mov
pop
mov
shr
jbe
ss
pop
push
adc
mov
or
ja
xchg
add
stos
mov
mov
leave
mov
cwtl
stc
pop
outsb
mov
mov
mov
push
mov
add
cmp
scas
jns
cmpl
xchg
pop
xchg
mov
xchg
xchg
push
shrl
rol
enter
mov
xchg
mov
into
fdivrl
mov
imul
xor
inc
push
mov
out
and
arpl
xchg
mov
in
js
mov
push
jne
mov
push
into
std
aas
xchg
dec
lock
adc
inc
mov
and
cmp
lds
mov
xchg
jmp
movsb
sahf
int
mov
jae
jecxz
sti
mov
sbb
popa
pop
cmp
test
rclb
jg
mov
mov
lock
mov
mov
cmp
jg
add
inc
out
pop
pop
mov
add
add
sub
clc
and
cwtl
adc
sarb
push
xchg
lcall
jecxz
xor
sahf
lcall
inc
addr16
mov
fisttps
aas
add
mov
jp
mov
jo
push
loop
push
inc
jle
xchg
popf
data16
lahf
mov
ret
fisubs
and
xchg
fisttps
std
das
loopne
sbb
lcall
int3
mov
pop
data16
lea
mov
mov
es
mov
cmpsl
inc
bound
rol
dec
frstor
pop
xchg
cmpxchg
jnp
jo
js
andl
imul
jo
das
fnstcw
cld
into
into
xchg
sarb
sbb
sbb
jnp
mov
adc
mov
cmpsb
sbb
jbe
fcmovnbe
call
testb
test
mov
jbe
adc
push
leave
push
sti
push
sub
push
mov
xchg
fwait
xchg
mov
imul
jp
orl
fs
inc
int
lods
leave
push
push
sbb
cs
fwait
push
push
sbb
icebp
int
js
clc
shll
or
xrelease
shlb
mov
xchg
mov
into
jns
xchg
mov
ljmp
add
xchg
hlt
ljmp
fcomps
adc
pop
push
xlat
in
lock
cltd
and
mov
shrl
test
lds
xchg
sub
dec
mov
inc
pop
jo
cmpsb
sub
cs
cmc
aad
jp
fiaddl
push
iret
insl
rorl
and
cld
sub
mov
int3
js
test
shlb
dec
cmp
rorb
addr16
rcrl
in
fmul
rclb
int3
push
cmc
jmp
mov
inc
test
xchg
xor
pop
das
jnp
sbb
sbb
test
rorl
imul
loope
xchg
cmc
lods
inc
ret
aam
call
insb
jns
or
xchg
push
scas
movsl
inc
test
inc
mov
shlb
cmpsl
data16
stos
adc
xchg
push
xor
rorb
push
lea
mov
inc
xchg
sbb
scas
mov
cli
and
and
jo
in
mov
pop
fsubrl
bound
out
sub
xor
in
test
or
decb
cmp
jbe
mov
cwtl
nop
fdivl
mov
dec
cltd
outsb
sbb
mov
cmp
xchg
test
add
inc
and
pusha
xor
lret
fadds
push
call
movsl
fcomi
mov
popa
dec
dec
cmc
bnd
in
xchg
popf
or
xchg
adc
out
fadds
ret
sbb
push
popf
jb
mov
out
pop
cmc
repnz
es
lods
in
call
scas
pop
and
dec
push
repnz
decl
or
aam
xchg
lret
mov
icebp
xchg
icebp
jmp
mov
test
adc
pop
stos
loope
mov
xchg
stos
out
in
aaa
jno
loopne
lea
mov
sahf
cmpsb
push
xlat
ret
xchg
int
pop
mov
scas
aam
sub
sti
rcr
lea
fs
xchg
mov
sub
pop
jno
dec
dec
mov
adcb
out
jp
adcb
jnp
pushl
dec
inc
add
aaa
sub
aas
pop
aaa
push
imul
xchg
xchg
mov
jmp
xor
mov
and
sbb
mov
or
mov
sarb
out
jo
dec
cmpsb
dec
lahf
add
sub
and
nop
aas
pop
sbb
repz
xor
push
sbb
pop
out
jecxz
aad
jle
icebp
aam
movsb
popa
add
or
addl
fildl
jl
xchg
mov
jmp
fldenv
push
leave
mov
sbb
stc
or
add
nop
dec
into
inc
xchg
sbb
or
cmp
lahf
loope
fcoml
pusha
clc
rcll
loope
movsb
cltd
shrb
jae
xchg
xchg
test
mov
mov
adc
mov
push
adc
push
lret
inc
int
incl
aas
sbb
dec
xchg
inc
into
add
dec
mov
lcall
xchg
push
imul
add
out
rcr
push
ss
pop
sub
cltd
sbb
mov
cmp
cmpsl
push
movsl
cs
sbb
pusha
lret
loopne
inc
lds
jne
sbb
dec
fdivl
sub
outsb
cmpl
mov
add
mov
xchg
dec
jg
jns
xchg
adc
in
xor
nop
dec
call
stc
pop
jne
pop
rol
es
outsb
push
adc
test
or
aaa
lea
add
push
inc
in
ret
sub
out
cld
jle
enter
aam
in
das
or
xor
arpl
enter
test
pop
push
hlt
fxch
pop
pop
pop
outsl
mov
and
adc
jg
xchg
adc
mov
int3
push
or
add
and
cmp
fnsave
das
sbbb
and
lock
pop
add
xor
jb
imul
gs
dec
adc
popa
and
cmp
daa
inc
nop
in
filds
and
sub
aas
mov
pop
je
mov
enter
mov
dec
xor
leave
xchg
aam
lods
cld
sarl
push
pop
and
mov
xorb
in
data16
xor
xchg
iret
mov
or
subb
ds
jbe
sub
dec
xor
and
ret
inc
nop
cmp
inc
xor
in
mov
repnz
stos
aam
pop
add
out
mov
xor
xor
xor
cmpsl
inc
push
icebp
idivb
loop
movsl
outsl
jo
cmp
pop
mov
add
pop
mov
lock
in
flds
adc
mov
fsubl
jns
out
mov
sub
pushf
cmp
mov
pop
push
and
add
int3
mov
lods
enter
jg
xchg
cmp
cmpsl
pop
das
xor
fstps
xchg
xor
pop
dec
sub
sahf
jmp
inc
lret
xchg
pop
es
divb
jne
pop
popa
jmp
test
test
lret
jo
pop
adc
lcall
fstpt
xlat
add
sbbl
loope
je
adc
or
les
add
xchg
das
mov
in
pop
xlat
jecxz
nop
out
jnp
jae
js
sahf
inc
inc
scas
push
ror
daa
push
jo
push
notb
das
inc
rcl
lods
fstl
aad
ljmp
aam
loopne
sahf
push
cs
sub
mov
xor
inc
sub
push
and
xchg
push
pop
pop
mov
jle
fs
pop
sub
popa
sub
or
dec
xchg
xchg
and
leave
in
jp
and
sbb
icebp
adc
push
adc
ret
sbbb
shrb
xor
dec
mov
insl
jl
xor
ja
xor
mov
pop
notl
mov
pop
pusha
push
and
mov
jb
xchg
cmp
pop
sub
mov
pop
les
or
mov
repz
test
mov
push
mov
and
mov
and
cld
inc
aaa
inc
jbe
xor
push
bound
popl
cmp
cmp
inc
dec
mov
adc
popf
dec
in
cwtl
xchg
pop
into
mov
test
cmc
lret
add
xchg
adc
inc
out
iret
inc
call
push
xchg
out
pop
pop
movsl
dec
sub
jo
inc
or
inc
push
add
sub
loope
sbb
in
adc
lods
sti
add
int3
pop
in
and
xchg
jbe
push
push
pop
pusha
pop
mov
jge
rcr
movsl
sub
inc
adc
xor
jecxz
mov
test
add
repz
scas
or
mov
mov
cmpsb
fsubs
test
stos
xor
xor
inc
or
and
pop
sub
add
inc
xorb
jae
xor
xlat
mov
int3
dec
xchg
or
adc
push
sub
push
mov
outsl
jb
aaa
xchg
jo
push
mov
movsb
int
cmpl
push
sbb
cli
jmp
xor
movsl
pop
loop
pmullw
xor
xchg
enter
lahf
iret
cld
and
aas
jmp
stc
aaa
jle
mov
xchg
test
dec
fmul
mov
and
mov
mov
jp
push
jo
aaa
in
push
imulb
sahf
repz
les
test
sub
jmp
cmc
push
push
add
mov
push
adc
incb
data16
movsb
mov
mov
or
call
icebp
push
add
int
sbb
adc
sti
jb
popl
pop
jb
loopne
in
and
mov
sub
mov
aas
repnz
cmc
pop
scas
sbb
push
arpl
push
add
fists
out
pop
addr16
ja
pop
pushl
mov
mov
scas
xchg
popf
sub
sub
push
mov
in
lods
add
cmp
test
adc
cmp
or
imul
addr16
call
push
int
jmp
fisttps
cmpsl
or
pop
and
push
jne
jl
sbb
jecxz
and
cltd
jae
lds
lret
jnp
repnz
xor
mov
mov
pop
nop
popf
mov
dec
mov
das
cmpsb
xchg
mov
leave
leave
aad
stos
push
das
pop
imul
inc
push
loop
cmpsl
gs
pushl
and
xchg
mov
mov
sub
or
rcl
pop
mul
stos
pushl
movsb
popf
ljmp
and
xor
testl
cmp
ja
xchg
and
cmpsb
movsb
mov
fsubrl
iret
sub
adc
cmp
fistpll
and
aaa
xchg
xor
das
icebp
xor
sbb
mov
push
mov
fwait
out
loop
pop
loopne
stc
hlt
popf
and
dec
push
in
push
into
sbb
stos
loopne
and
mov
ss
mov
test
jno
lods
call
sub
pusha
ss
rorb
sub
sub
cmp
sub
or
shl
add
pusha
jl
pop
sbb
stc
repz
mov
adc
jns
jp
xor
inc
fists
outsb
add
jmp
jmp
inc
pop
xchg
fcompl
xchg
popa
inc
push
fsubrp
jno
mov
fwait
lds
imul
enter
jecxz
mov
cmp
lea
sub
sub
jae
jne
out
sbb
bswap
inc
cmc
sub
sub
hlt
jge
sub
dec
ret
xor
sbbl
inc
dec
popf
arpl
out
out
lds
mov
xchg
dec
cltd
aam
in
test
loope
mov
xor
movsb
out
pop
aam
mov
push
jae
mov
adc
int3
ljmp
lret
adc
pop
pusha
out
inc
jo
icebp
xor
lahf
in
aad
in
jae
mov
push
lds
sarb
je
js
or
test
fcompl
add
cmc
xor
repz
ja
sbbl
dec
xchg
push
mov
aas
fwait
xor
sti
cld
mov
mov
or
test
cli
lcall
mov
gs
movsb
jl
mov
imul
mov
jae
cmp
jo
xchg
loop
pop
jae
sub
sarl
roll
jb
out
into
push
add
loopne
dec
out
pop
in
mov
stc
das
sarl
into
or
sub
pop
shll
sbb
xor
fcoml
cmp
cli
inc
mov
mov
out
cwtl
push
sub
ss
stos
dec
repz
cmp
imull
or
lods
ds
push
mov
gs
xor
iret
dec
aaa
dec
pop
out
lds
push
cmp
bound
dec
lds
aad
xchg
fistps
pop
sbb
insb
movsl
pop
xor
mov
add
xchg
push
pop
adc
lock
imul
notl
out
sbb
int3
cmp
dec
icebp
out
scas
gs
das
es
adc
out
cmp
jecxz
test
gs
xchg
inc
pusha
mov
add
out
fnsave
xlat
ljmp
mov
sub
lods
cld
xor
push
mov
in
cs
fstpt
pop
scas
fstpt
xchg
adc
dec
sbbb
jnp
loop
pop
xor
inc
mov
fdivs
jecxz
push
movb
jns
or
add
add
push
mov
sbb
dec
inc
fldl
lock
push
fildl
xor
mov
mov
pop
push
inc
dec
sbb
call
sub
sbb
xchg
pop
pushf
or
aaa
sbb
testb
jne
repz
sbb
dec
pop
dec
popl
sub
scas
adc
imul
mov
scas
test
add
les
or
inc
push
push
sub
lods
dec
jl
stos
loopne
push
mov
mov
add
enter
mov
popf
pop
or
adc
add
inc
xor
stos
jp
mov
roll
xchg
outsl
dec
lret
outsl
cltd
inc
dec
add
ds
mov
cmp
insl
dec
lods
sbb
cwtl
rol
dec
or
adc
mov
iretw
mov
push
lods
std
movsb
repz
jmp
sub
jmp
movsl
insb
shlb
ret
dec
js
pop
ds
bnd
lods
jns
mov
push
jo
lret
shrl
pushf
and
or
cmp
xlat
adc
and
cs
ss
call
sbb
insb
and
push
stos
scas
fcompl
cmc
repnz
jb
fiaddl
fnstcw
cmp
and
arpl
stos
jmp
xor
aas
hlt
xchg
sub
mov
jl
cmp
pop
loop
shl
popf
ds
es
ds
fiadds
and
rcr
inc
add
mov
dec
mov
xchg
lods
push
lahf
xor
inc
and
aaa
xor
js
test
pop
leave
mov
cs
and
in
mov
lret
in
xchg
jae
jnp
xchg
mov
enter
push
mov
shl
nop
cmpsl
mov
cmp
pop
xchg
cmpsl
push
pushf
dec
fstpl
mov
shlb
pushf
mov
sub
imul
ja
and
and
jp
jbe
shl
sbbl
call
mov
push
xor
test
and
sub
pop
adc
inc
jmp
ficomps
cmc
sbb
mov
push
xchg
jecxz
dec
cmp
fwait
xchg
adc
dec
adc
aad
mov
sub
loope
addb
ja
rorl
xor
ficoms
jbe
jno
dec
adc
jge
push
inc
cmp
pop
jno
int3
jne
dec
mov
dec
inc
js
stc
ja
mul
dec
outsb
stos
mov
clc
xchg
mov
dec
mov
not
mov
lds
call
mov
push
sub
ss
pushf
int
outsl
mov
mov
push
pop
pop
push
inc
adc
push
mov
sub
cmpsb
outsl
rcrl
or
sub
sub
repz
in
adc
add
lods
dec
inc
mov
enter
test
jge
xchg
sub
popa
cli
loopne
aas
mov
pop
clc
xor
stos
add
ja
pop
or
cwtl
pop
mov
cmp
xchg
jo
nop
and
cwtl
inc
ret
inc
jle
inc
push
loope
jl
loopne
push
insl
das
popf
jmp
loop
sub
pop
lock
or
imul
js
lods
inc
fidivrl
add
cld
adc
xchg
stos
in
and
mov
xchg
js
enter
pop
loop
std
std
mov
jbe
fmull
fistl
ljmp
into
mov
inc
outsl
call
jne
cmp
adc
pop
inc
js
decb
mov
popa
fidivrl
cli
pop
inc
pop
sti
pusha
xor
mov
mov
imul
test
lcall
insb
jg
loope
cmp
inc
sub
lahf
ds
fnclex
xor
mov
mov
dec
sbb
test
sar
and
movsb
insb
mov
out
or
cmp
add
xor
cwtl
cmc
push
adc
and
je
mov
or
es
mov
in
test
outsl
shrl
mov
dec
test
pop
insl
gs
movsb
bound
adc
jno
jns
push
iret
aad
movl
shll
lcall
mov
in
popf
pop
in
sarb
sub
mov
xchg
scas
lret
sbb
outsl
leave
stc
imull
pop
cmp
das
push
add
mov
enter
ljmp
cld
jb
cbtw
xor
sbb
clc
xor
inc
sbb
aad
cmc
scas
movsw
aad
xchg
pop
push
cmpsb
sbb
push
shrb
std
test
pop
in
je
xor
mov
dec
jb
and
sub
pop
scas
shrl
or
stos
and
int
sbb
push
sbbb
xchg
or
pop
push
push
lods
or
insl
imul
mov
jmp
lea
out
jno
sub
inc
rcr
sar
xlat
sbb
inc
add
xchg
cld
sbb
lahf
das
xor
testb
xchg
fisttpll
push
mov
loop
gs
jno
jecxz
add
rclb
push
hlt
fwait
or
inc
xchg
ja
cmp
cs
fcmovne
xor
rolb
inc
jge
cmp
js
jg
lea
sbb
shrl
lock
mov
xchg
and
mov
popa
add
inc
pop
add
sbb
pop
ds
jnp
inc
pop
jg
and
sub
divb
pop
ffreep
in
push
pop
les
fdivs
pop
cwtl
shr
fcmovbe
and
pop
dec
imul
in
in
push
cmp
mov
mov
xrelease
jbe
inc
xor
adc
sbb
jl
mov
test
movb
daa
sbb
xchg
mov
push
cltd
xor
mov
ds
cwtl
fcomi
mov
push
sbbl
xlat
das
jbe
push
xor
xchg
push
jno
mov
sbb
pop
pop
fxch
mov
mov
aas
mov
and
and
sahf
pop
push
pop
popa
test
xor
lods
mov
nop
mov
fistpl
mov
and
movsb
lret
inc
and
divb
add
jae
movb
and
arpl
mov
gs
es
cwtl
add
pusha
out
mov
pop
insb
ss
shll
cmp
sbb
popf
aaa
hlt
inc
add
adc
jbe
lds
xchg
mov
rol
cs
adc
cmp
jb
loop
mov
stos
push
mov
or
loope
aad
cmp
in
out
divb
faddl
jns
aas
inc
mov
fs
iret
or
cmpsb
roll
pop
into
mov
add
push
clc
xchg
dec
jmp
lret
add
add
xchg
add
or
repnz
dec
call
jo
inc
in
xchg
ret
xchg
subl
mov
movsl
jle
adc
lock
xor
lret
inc
loopne
pmullw
lods
xor
iret
xor
call
enter
outsb
je
sub
mov
jmp
jae
out
xchg
lods
inc
imul
pop
jb
xor
sub
sbb
push
inc
and
scas
pop
imul
sbb
mull
cmp
mov
fs
mov
ss
in
ficompl
xchg
jmp
into
xlat
adc
jbe
in
add
push
outsb
cltd
test
or
clc
insl
pop
stos
jb
mov
lods
shrb
adc
mov
xchg
jae
cmp
sub
icebp
sub
cmp
mov
sub
dec
mov
sub
xlat
leave
dec
mov
jo
ret
sub
dec
lret
pop
clc
mov
push
jp
adc
or
mov
pop
je
cmp
pop
sub
push
scas
out
rcrl
pop
xor
das
fisttpll
xchg
in
loope
jmp
scas
sub
test
push
push
stos
aaa
rcll
fldl
out
test
out
xor
movsb
cmpb
test
mov
add
pop
xor
mov
int3
test
pop
pushw
sarb
cmp
push
lds
std
adc
push
pop
test
fildll
lea
mov
clc
cmp
or
sbb
or
mov
pop
movsb
nop
add
pop
sub
xchg
adc
or
test
sbb
nop
fwait
fs
addl
push
adc
cs
xchg
dec
jge
jecxz
xchg
fcoml
pop
addr16
pop
icebp
or
pop
sub
jp
out
mov
jp
xchg
mov
xorl
dec
inc
data16
imulb
pop
ds
xor
testb
mov
fbld
dec
mov
adc
and
testl
rorl
xchg
hlt
mov
scas
fdivl
leave
daa
clc
jae
dec
dec
pop
fdivl
lcall
out
in
cmp
jp
sbb
add
fsts
sbb
lods
decb
lcall
ret
clc
int3
inc
out
sub
jmp
pop
pop
faddl
xlat
sbb
mov
loop
cwtl
shlb
movsb
ret
into
daa
sahf
fmul
in
mov
dec
popa
fisubrs
loopne
mov
aad
push
xchg
xor
and
addb
cmp
fmull
lahf
xor
cmc
xchg
xchg
pop
leave
push
push
push
scas
mov
add
mov
jecxz
mov
cmp
aam
pop
jp
cwtl
pusha
lret
push
addr16
cwtl
mov
jecxz
movsl
add
sub
dec
rolb
std
jg
test
xor
cld
mov
cs
mov
pusha
xchg
pop
adc
dec
mul
sub
xor
cli
adc
and
push
xchg
call
dec
inc
andb
frstor
push
sub
add
push
pop
bswap
dec
fisttps
push
mov
popa
mov
punpcklbw
push
xchg
outsl
aaa
or
xchg
pushf
jecxz
dec
and
insl
jbe
fbld
xor
mov
push
jl
aad
cld
loop
pop
mov
aaa
adc
inc
in
mov
inc
jnp
call
mov
test
test
jne
xor
loopne
mov
pop
rcrb
jne
cli
push
adcl
push
gs
adc
cmpb
mov
xchg
and
or
std
sub
ret
or
fbld
jae
daa
push
push
ja
mov
aam
adc
imul
aam
test
leave
xor
jbe
rorb
and
fdivrl
in
jle
push
test
pop
cmp
lcall
loope
sbb
or
add
cli
mov
scas
out
pop
sub
cmpb
iret
dec
mov
xchg
jg
xor
notl
xchg
into
push
jmp
mov
or
xchg
jno
pop
aaa
gs
negl
mov
xchg
test
push
imulb
and
insb
xchg
push
mov
and
mov
sub
jecxz
mov
cmpsb
or
gs
mov
data16
mov
mov
repz
ja
scas
arpl
adc
clc
pop
push
jb
popa
push
mov
mov
orb
mov
in
je
hlt
rcl
mov
pushf
push
xchg
ret
mov
sbb
jmp
cmp
dec
dec
mov
sar
xor
dec
fldenv
dec
mov
aas
in
add
fs
into
pushf
dec
addr16
insb
lea
adc
rolb
out
fiaddl
inc
sbb
adc
ret
flds
inc
push
hlt
adc
jno
mov
das
and
and
je
dec
and
popa
sub
push
xor
pop
fldt
aaa
andl
add
jae
inc
das
sbbl
fimull
inc
pop
and
mov
add
inc
cmp
push
pop
iret
xor
sub
xor
and
jmp
mov
xchg
push
jnp
pop
jg
inc
mov
ret
aad
popf
cs
lds
and
xor
mov
retw
fldcw
shll
pusha
bound
test
xor
test
ds
inc
imull
addr16
push
cmp
addb
push
or
aas
dec
repz
pop
and
cli
std
fwait
mov
sbb
lods
push
shr
xchg
clc
insb
inc
int
push
clc
push
jmp
adc
sbb
mov
aaa
call
dec
or
fldcw
pushf
pop
sub
scas
xor
movl
rcrl
cltd
mov
cmp
pop
lret
xor
ss
insb
rorl
or
sub
frstor
in
out
cltd
push
or
pop
sbb
lret
lds
or
jmp
out
aas
jo
and
iret
addr16
mov
and
mov
cmpsb
sbb
push
xor
pop
aaa
lret
xor
outsb
lods
inc
mov
mov
cmp
std
inc
aam
push
int
xchg
push
incb
push
mov
js
sub
test
mov
push
push
cmp
in
inc
scas
shlb
or
adcl
in
pop
pop
movsl
xorl
inc
and
xlat
fcmovnb
push
push
cmp
push
stc
insl
sbb
or
stos
clc
lods
ljmp
and
sub
mov
jecxz
mov
jp
pop
jno
inc
test
out
and
and
cmpsb
push
gs
test
mov
xchg
push
and
push
andb
xor
ret
out
outsb
jl
daa
xor
xchg
fs
or
add
rorb
mov
mov
or
psraw
xchg
jns
pushf
pop
movsb
lret
lds
test
dec
adc
test
das
fmull
pop
loop
sti
mov
xor
xchg
std
push
pop
mov
je
jo
in
mov
int3
push
popf
xorl
in
jl
test
imull
push
push
pop
scas
sub
jb
insb
lahf
pop
push
filds
mov
xor
fidivl
pushf
shll
aaa
fwait
jns
data16
xchg
out
popl
xchg
pop
xchg
mov
and
or
mov
ljmp
lahf
and
mov
outsb
addl
pop
mov
push
lock
addl
test
out
inc
std
rol
jbe
or
xchg
push
cmpsb
push
outsl
shlb
rorb
jg
sahf
jmp
or
cmpsl
shrb
mov
add
popa
call
mov
dec
pushf
sbb
mov
repnz
sub
xor
xlat
or
out
clc
pusha
cld
out
sti
xor
and
popf
xchg
inc
cmp
add
aas
out
push
adc
dec
out
stos
or
mov
in
dec
mov
outsb
rcll
lcall
leave
daa
call
push
lahf
loope
cmpl
mov
int
aam
mov
jne
inc
jne
and
xchg
lds
dec
popf
xchg
jg
and
nop
ficoml
insl
lret
cmp
push
xchg
lret
ret
or
and
or
inc
insl
xor
push
rol
sub
or
jns
mov
clc
mov
popa
inc
mov
adc
aad
mov
xchg
sahf
lret
stos
mov
cmp
jns
sub
lahf
insb
test
dec
scas
aam
in
loope
test
jbe
push
xchg
push
cmp
ljmp
mov
xor
sbb
cmpsb
fwait
cs
inc
sbb
pop
add
loopne
pop
adc
mov
mov
jge
shlb
xlat
adc
fdiv
fwait
lds
jmp
cltd
iret
inc
les
arpl
enter
mov
jbe
pop
add
mov
imull
pop
mov
outsb
dec
push
mov
push
mov
sbbb
je
mov
ss
mov
rolb
mov
push
inc
arpl
push
or
sub
loopne
fs
mov
ljmp
push
stos
fmull
jl
push
xlat
mov
mov
sti
std
stos
in
popf
jg
out
add
cmp
jl
lahf
rcrl
stos
cs
jns
stc
add
fs
aam
sub
adc
and
leave
or
sbb
sub
and
cmp
jecxz
add
mov
xchg
sub
xchg
imul
jo
nop
fcmovnu
jns
std
fmull
jle
movsl
bnd
or
insl
test
outsb
sbb
std
add
mov
mov
adc
int3
pop
mov
test
shlb
mov
jo
push
lock
adc
xor
lock
dec
xchg
mov
jnp
test
inc
or
sahf
in
aas
fdivrs
sub
and
repnz
xchg
push
xchg
insl
xchg
imul
subb
inc
pop
cli
imul
mov
insb
pop
negb
jge
and
dec
lret
inc
les
and
imul
aaa
inc
xor
notl
xor
in
jmp
js
inc
ficoms
mov
sub
adc
dec
call
out
cltd
push
mov
cmpsl
fisttpl
add
lods
add
subl
inc
mov
test
cwtl
xor
dec
push
sub
xchg
sbb
loopne
pop
push
xor
rclb
xchg
push
stos
push
shll
push
adc
jb
or
roll
sbb
aam
jmp
in
push
lds
sub
imul
mov
sbb
shlb
repz
pcmpeqw
jecxz
inc
cmp
mov
mov
imul
or
repz
imul
fistpl
jecxz
popf
sti
adc
movsl
cwtl
or
xor
int
pop
and
sbb
mov
out
mov
scas
call
adc
imul
stos
fisubs
xor
dec
jmp
fs
pushf
cs
dec
xchg
adc
lods
ds
vminss
jmp
and
xchg
pusha
pushf
cmc
fildll
negb
fldcw
mov
pop
pop
outsl
ret
or
sub
mov
jle
cmpsb
mov
xchg
push
incb
pop
aam
cli
cmpsb
xchg
xor
mov
mov
bound
cs
loope
cltd
jbe
mov
clc
ds
push
lods
rcll
jo
pop
dec
in
mov
inc
dec
sahf
pop
or
fisttpll
cmpb
push
xchg
push
xchg
sub
cmp
xor
adc
dec
push
je
inc
ret
sbb
sbb
repz
movsb
rcl
ret
pop
movsl
sub
aaa
sub
popf
dec
mov
pop
inc
in
sbb
and
lea
sbb
add
sub
sub
adc
lret
outsl
sub
jecxz
dec
mov
mov
xor
jge
fstpl
pop
sbb
inc
mov
cmp
mov
xorb
push
roll
mov
mov
mov
and
mov
rorb
push
ficoml
add
insl
pop
lds
cmpsl
add
mov
and
test
mov
hlt
aas
mov
adc
dec
je
leave
fdiv
ja
inc
arpl
jmp
movsb
pop
xor
test
jno
insb
imul
xchg
test
mov
push
jmp
and
dec
hlt
lcall
test
jle
adc
test
xchg
or
and
push
jmp
popf
pop
and
mov
cmp
mov
adc
pop
lret
shlb
cmpsl
fimull
subb
fsubr
lcall
xchg
dec
fidivs
mov
dec
dec
jno
std
shrb
icebp
out
les
mov
mov
sub
sub
enter
scas
xor
fsubs
lock
sbb
cmp
lahf
mov
sbb
les
flds
mov
addr16
test
pop
sti
xlat
push
mov
mov
es
mov
loopne
outsb
lds
push
cli
pop
xchg
jbe
out
cmp
outsl
and
sbb
mov
xchg
jno
daa
lock
sahf
inc
mov
pop
cmp
xlat
adc
cmp
loop
cmp
test
fwait
enter
sarb
int
shl
pop
inc
jnp
divl
cmpsb
add
in
lods
xchg
push
jg
jg
mov
dec
xchg
fwait
clc
and
rclb
sarb
sub
ja
xchg
fadd
out
stc
out
push
adc
shlb
add
mov
add
pop
mov
lods
mov
xchg
testl
orl
mov
cmp
mov
and
mov
movsl
popa
stc
sbb
fsubrl
pop
enter
xor
mov
cmp
jb
sti
cmpsl
dec
mov
mov
sbb
adcl
jmp
push
cmp
or
lret
int
pop
dec
mov
insl
or
std
dec
xchg
mov
sti
pop
xor
add
insl
or
cmp
jl
cmp
rolb
push
pop
and
jl
pop
imul
jp
push
dec
mov
push
mov
stos
adc
sub
cmc
ret
mov
negb
inc
fmull
mov
sub
pushf
movsb
scas
inc
ror
dec
loope
mov
cmc
xor
inc
fcomps
push
and
int
and
jne
add
sbb
ljmp
sub
xlat
popa
add
and
out
xchg
out
xlat
std
les
cltd
or
mov
cmpsl
stos
aam
add
addr16
out
adc
jecxz
daa
outsb
imul
push
ficoml
sub
mov
fdivrl
cmpb
scas
cwtl
xor
xor
mov
cmp
cmp
and
jp
mov
push
subl
xchg
aas
jne
push
dec
jbe
sub
jecxz
scas
int
ss
in
out
aaa
fcompl
jecxz
mov
jg
addr16
in
rorl
ljmp
test
int
and
insb
xor
pop
fstp
inc
sub
icebp
mov
sub
mov
cs
hlt
xor
ret
mov
ds
xor
fldenv
mov
sub
pop
pop
adc
push
aas
outsl
push
push
dec
pop
mov
jb
push
loope
sub
fimull
jo
int
pusha
divb
shlb
lods
mov
push
in
jnp
in
adc
xchg
push
sbb
cmp
imul
mov
insb
fsubrl
test
outsb
inc
lret
loope
mov
int
data16
loope
stc
xchg
mov
cmc
sub
add
clc
cmp
pop
push
mov
push
test
pop
insl
mov
fidivs
jmp
and
outsl
inc
fnstcw
pusha
sub
inc
xchg
outsl
mov
fwait
inc
insl
pop
div
pusha
and
fstl
std
adc
jae
ss
or
stc
lds
pop
sahf
idivb
sqrtps
push
pop
and
mov
jge
or
pop
out
test
push
jbe
pop
movsb
in
jo
pop
jns
mov
aas
add
sar
fdivrl
sub
sbb
sub
das
ret
dec
int3
imul
pop
loopne
mov
leave
xchg
pop
mov
inc
inc
mov
mov
push
mov
addr16
mov
nop
sbb
and
xorb
outsb
mov
fwait
jmp
mov
dec
push
insl
popa
xor
repnz
dec
mov
cmp
push
popa
lret
xor
pop
fcmovu
aam
mov
mov
or
jae
mov
outsl
aas
mov
lock
and
inc
cltd
cmp
jmp
mov
mov
fldcw
cltd
or
cwtl
popa
movsl
mov
andl
inc
stc
inc
push
inc
mov
mov
jbe
test
cmp
xchg
pushw
dec
popa
push
push
fcmovnu
jecxz
xor
movsl
mov
insl
lods
jl
out
imul
pop
movsl
push
int
mov
stc
cmc
call
xor
fimuls
push
ficomps
inc
fiadds
sar
ret
repnz
mov
push
and
outsl
mov
xor
dec
and
lods
xchg
cmp
imul
jbe
fistpl
mov
lret
lret
inc
orb
add
mov
mulb
lds
sarl
sbb
scas
inc
pop
or
push
dec
xchg
xchg
lret
icebp
fdivl
fwait
movsl
imul
das
loopne
dec
push
add
aas
sub
data16
loopne
mov
popa
arpl
jl
es
movsb
xchg
mov
jae
dec
jne
and
clc
cmpsb
mov
fildll
flds
outsb
mov
jmp
fs
inc
sbb
jl
aas
pusha
jnp
cld
ljmp
mulb
push
movsb
mov
imul
sbb
outsl
sbb
addr16
repz
rcll
mov
int
nop
cmp
or
cmpsl
sub
add
xchg
insl
jae
js
stos
ja
bound
xor
iret
inc
add
xchg
xor
jmp
hlt
roll
jne
cmp
pusha
xchg
stos
lds
mov
sarl
sub
cmpsl
pop
xchg
and
push
lds
push
iret
adcb
or
dec
adc
aam
inc
xor
das
push
lods
cmpsl
xchg
jnp
ficoms
or
pop
xchg
jl
es
adc
mov
adc
sub
icebp
xchg
sbb
sbb
dec
repnz
or
mov
sub
jb
ret
movsl
sub
and
xchg
pop
push
hlt
js
lock
push
shrl
fcoms
dec
cmp
insb
sbb
push
in
test
add
imul
dec
push
loope
cmp
loopne
arpl
sub
pop
arpl
fstpt
pop
stos
aas
xor
sub
ja
pop
fwait
jnp
dec
or
jo
sub
mov
in
adcb
xor
or
xchg
xchg
scas
mov
and
dec
repnz
or
add
sub
push
js
test
or
xor
sbb
enter
enter
xchg
jno
mov
xchg
xchg
cmpsl
fcoms
test
pop
test
mov
call
andl
mov
iret
sub
int
xor
loop
enter
pop
test
inc
std
ja
scas
xlat
sub
mov
fisubrs
mov
das
mov
xlat
xor
leave
add
gs
inc
sub
imul
popa
mov
add
xchg
fldenv
and
push
pushf
xchg
xchg
loopne
cmp
into
mov
mov
nop
jg
adc
mov
xorb
in
dec
dec
loopne
loop
jns
js
popa
mov
xorl
imul
pop
pop
dec
xor
push
arpl
ficoms
or
mov
and
adc
sbb
adc
mov
test
fisttpll
sbb
xor
rcll
arpl
adc
jp
pop
jbe
push
cmpsl
jg
adc
cli
in
xchg
add
shl
add
add
insb
in
pop
add
fstps
dec
jle
cmp
inc
js
dec
ffreep
test
rolb
mov
outsl
fs
cmpsl
xchg
sbb
fidivl
ss
mov
popa
xchg
nop
mov
xlat
mov
in
aaa
jns
pop
nop
in
inc
nop
pop
leave
fstpt
cwtl
cmp
das
sti
mov
shlb
call
adc
lret
filds
out
imul
jmp
adc
scas
test
out
notl
adc
lods
mov
and
pusha
jne
lea
movl
push
push
ret
dec
add
mov
ljmp
xchg
inc
push
gs
stos
imul
cmp
insb
outsl
jb
out
xchg
and
sub
cmp
inc
and
mov
and
dec
dec
icebp
jmp
mov
add
divl
adc
xor
adc
test
aam
testb
push
sbb
mov
or
or
push
rcr
arpl
cmc
js
cmp
shrl
ret
xor
push
fmul
xchg
scas
ret
mov
sub
fimull
jns
inc
and
sti
sbb
inc
jp
cmp
add
and
cmp
jmp
mov
mov
in
push
mov
daa
out
sbb
xchg
cld
in
inc
cmc
xlat
xor
fwait
cmp
or
jne
pop
into
ljmp
mov
push
in
adc
push
test
push
fs
test
jo
jae
add
jno
inc
cmp
in
push
mov
std
sub
dec
insb
xor
push
sbb
ret
nop
hlt
rcll
lods
dec
mov
shr
hlt
mov
aad
mov
xchg
inc
orl
rclb
inc
push
cmp
xchg
cmp
lcall
ret
js
pushf
mov
dec
jbe
add
inc
push
sbb
icebp
or
dec
lock
xchg
jno
mov
loopne
repz
mov
les
jle
pop
adc
std
outsb
clc
pop
inc
inc
in
cmp
movsb
add
cmc
mov
jns
mov
sub
and
divb
lea
inc
xorb
hlt
or
pop
jl
or
mov
push
mov
dec
shll
inc
jp
pop
mov
adc
mov
ret
xor
dec
adc
fwait
mov
xor
sub
arpl
mov
adc
inc
gs
enter
sbb
dec
adc
mov
scas
mov
mov
movsb
arpl
in
xchg
mov
lea
jbe
cmpsb
loop
add
jno
es
mov
xor
cmp
enter
sarl
push
xor
scas
add
or
mov
jp
icebp
add
movb
sub
add
sbb
and
jmp
cmpl
pop
and
dec
movsl
in
clc
sbb
push
jb
out
iret
rcrb
out
cmpsb
popf
shlb
mov
mov
mov
lds
sti
pop
ljmp
jmp
lret
inc
dec
lret
sbb
jns
jecxz
adc
out
mov
cld
pop
lock
loope
test
lock
jnp
inc
add
inc
cmp
mov
pop
sbb
mov
mov
mov
dec
push
jmp
aam
xchg
xchg
inc
enter
mov
sub
call
mov
jae
mov
cmp
dec
sub
push
mov
inc
sbb
popf
mov
mov
es
xor
mov
int3
pop
aam
cmp
scas
fimuls
xlat
pop
mov
aas
xor
sub
popf
adc
dec
push
push
pop
lahf
sbb
aad
inc
sub
add
fcmovne
jmp
lret
outsl
or
or
in
xor
sub
or
int3
dec
mov
cmp
in
mov
ds
inc
inc
inc
ss
scas
fldcw
jge
fdivrl
jb
adc
xlat
push
daa
dec
shrb
js
xor
fadds
rcrb
sbb
fucomi
cltd
push
add
mov
sti
mov
jecxz
adc
outsl
xlat
decl
inc
scas
daa
into
js
mov
or
repnz
jmp
aas
sub
out
mov
xlat
test
xor
out
jne
lea
pushf
cmp
push
subb
fwait
aam
pop
aaa
shll
xchg
xchg
fistpll
and
das
sbb
jbe
sub
mov
xor
cmp
sbb
adc
pop
pop
loopne
jns
popf
sahf
push
loopne
sti
arpl
pusha
mov
icebp
mov
pop
mov
lcall
movsb
add
jl
push
test
lods
call
add
cmp
cltd
xchg
outsb
mov
jl
rorl
inc
sbb
out
fs
xchg
dec
jnp
daa
pop
dec
fisubrl
mov
js
mov
cmc
xchg
pusha
stos
stos
mov
adc
pop
insb
xor
mov
daa
mov
mov
mov
lret
movl
lods
mov
mov
cmp
shlb
pop
xchg
fstpl
adc
xlat
jecxz
mov
cmpsb
cmp
int
js
xor
and
aam
addb
nop
enter
add
repnz
and
mov
xchg
repz
jle
imul
test
jg
sub
mov
je
fsts
or
js
and
mov
ret
and
pop
xlat
add
stos
xor
xchg
pop
adc
test
dec
jae
test
faddp
js
outsb
dec
pop
fs
mov
repz
add
xlat
aas
nop
lea
sbb
fisubrl
inc
xor
xor
int
cmp
std
imul
test
jnp
adc
add
sbb
cld
adc
lea
add
adc
incb
cli
mov
mov
adc
dec
divl
fstpl
in
mov
repz
insb
les
jp
loopne
sbbl
lods
jne
xchg
loop
aad
and
adc
adc
faddl
sub
pop
push
pop
sbb
fdivrl
lods
add
loopne
and
mov
in
lds
outsb
inc
sahf
arpl
or
test
push
or
sahf
loopne
jge
enter
sub
jg
add
fistpl
aas
xchg
cmc
jp
mov
mov
sub
and
mov
push
sti
xchg
dec
xor
jno
pop
outsb
dec
bound
jns
xor
mov
ret
jg
xor
ret
pop
pop
mov
sti
imul
into
mov
xlat
mov
int3
rcrb
sub
outsl
mov
mov
add
dec
add
dec
cmp
mov
jbe
mov
and
adc
lods
fidivl
data16
std
sti
imul
in
nop
pop
xor
jbe
pop
sub
jecxz
mov
aas
outsb
push
orl
sub
sahf
stos
mov
jmp
xlat
in
out
sub
out
pop
push
lret
xchg
xor
test
dec
mov
xchg
pop
mov
mov
repz
or
vandnps
rcll
movl
jnp
pop
mov
xor
cmpsb
nop
loope
pop
cmp
or
stos
fld
cmp
imul
push
iret
or
inc
dec
xor
jns
aaa
mov
mov
sahf
fbstp
sbb
daa
cmp
and
inc
test
mov
fstpt
jg
lock
push
int3
cs
out
mov
arpl
arpl
mov
push
stc
jb
jnp
cmp
sbb
repnz
addb
xchg
jne
addr16
je
in
cmpsl
ja
out
inc
test
and
je
repnz
test
stc
orl
pop
push
fstps
adc
loope
cld
lret
mov
jo
dec
insb
mov
fldcw
sahf
and
int
lret
jb
inc
dec
enter
popf
mov
and
push
loopne
mov
int
std
cli
aam
sbb
sbb
es
mov
push
addr16
mov
out
pop
mov
and
test
sbb
inc
inc
sbb
jle
frstor
mov
push
fidivrs
mov
push
cmpsl
rcrb
lret
adc
mov
xlat
jl
in
push
push
popf
xchg
or
into
sub
pop
mov
sti
push
out
pop
add
adc
lock
mov
dec
pop
or
sub
push
pop
js
gs
sub
fistpll
clc
cmp
or
adcl
add
cmp
iret
subb
jns
loopne
popf
dec
addb
scas
jp
mov
mov
cmp
push
outsb
aam
movsb
popf
hlt
popf
push
pop
gs
sqrtps
sar
xchg
push
fnsave
cld
xor
cmp
popf
mov
xor
test
or
call
push
lods
enter
push
lea
fisubl
inc
icebp
hlt
lret
inc
call
pushf
mov
add
add
movsl
or
in
iret
std
push
lcall
fs
popa
xor
sbb
and
jbe
scas
ret
mov
jnp
adc
add
dec
jbe
pop
aad
ret
outsb
rcrl
pop
je
sti
and
and
add
jl
mov
in
mov
add
icebp
je
xlat
pop
sub
out
inc
mov
cmp
pop
and
dec
jp
jecxz
in
xchg
lahf
sub
cmc
inc
and
push
cmpb
mov
inc
mov
adc
jno
and
js
xchg
mov
mov
push
xor
mov
jmp
frstor
nop
insb
inc
or
mov
mov
xchg
mov
add
add
clc
inc
mov
add
andl
jle
int
lea
shrl
movsl
enter
hlt
xchg
cmp
dec
add
xorl
push
pop
xchg
fdivl
pusha
aas
mov
adcl
aaa
add
mov
cmpsb
shrb
fsubr
jns
cmp
data16
add
pop
movb
rolb
sbb
push
mov
popa
xor
lcall
inc
call
add
jo
jle
lahf
add
xorl
mov
leave
popa
inc
add
js
loop
mov
pop
xchg
sbb
inc
dec
dec
outsl
mov
or
jle
mov
jno
aad
fneni(8087
sub
xor
xor
mov
mov
xor
loope
rcrl
imul
aad
aaa
orl
cmp
dec
push
xorb
lea
and
pop
int
jl
xchg
xchg
inc
inc
int3
add
mov
mov
out
data16
jecxz
xlat
push
aam
mov
dec
outsb
cmp
out
or
shll
setg
or
andl
and
ljmp
mov
iret
lock
pop
xchg
jge
fistps
mov
push
xchg
aas
xchg
cli
movsb
ret
mov
imul
dec
cli
mov
js
jb
xchg
push
mov
fdivrs
pop
stos
arpl
enter
pop
inc
pop
shrl
mov
jmp
loop
sarl
fistpl
add
push
sbb
mov
popa
mov
scas
and
ja
movsl
jg
ficoml
dec
mov
and
jl
mov
lretw
push
repz
popa
add
mov
aaa
cmpsl
xchg
push
mov
jbe
test
stos
mov
dec
aaa
das
add
inc
loopne
sbb
and
imul
lock
jo
std
mov
bound
push
fdecstp
sbb
testl
out
or
fldl
pusha
in
lods
jmp
out
xchg
out
jg
adc
mov
dec
das
adc
xchg
scas
pop
push
and
clc
rorl
and
leave
cli
out
jge
adc
mov
arpl
rclb
lcall
mov
punpckhbw
push
jae
outsb
dec
pop
loop
cli
mov
inc
add
xor
outsb
test
or
cmp
xor
call
jg
nop
xchg
sub
sbb
outsl
outsl
add
xchg
mov
ret
or
mov
cmc
sbb
fadds
mov
jnp
cmp
inc
cmp
or
cmpsl
mov
inc
ffree
mov
lcall
jnp
in
mov
push
push
cli
cmpsb
jns
mov
aaa
ret
push
in
pop
adc
rcrb
mov
testl
xor
clc
in
mov
pushl
pop
js
shrl
xor
dec
push
daa
shlb
cmp
mov
mov
addr16
adc
mov
dec
mov
fnstsw
adc
adc
pop
stos
aad
mov
test
out
xchg
leave
mov
or
adc
pop
xchg
icebp
in
insb
mov
in
lods
in
loop
or
cmp
shrl
loop
dec
sub
fcomps
hlt
fidivs
adcl
xor
push
sbb
dec
in
jo
in
xor
jmp
mov
loopne
insl
lcall
inc
xor
js,pt
shl
lahf
lret
xor
in
and
fcmovne
in
jo
test
jbe
outsl
sub
arpl
mov
pop
stc
fwait
cld
ror
mul
js
and
adc
push
hlt
clc
mov
pop
push
pop
js
mov
ss
or
roll
shl
subb
or
sub
xor
aad
push
stos
mov
adc
pop
icebp
xchg
aad
std
std
lods
daa
clc
mov
repz
call
mov
push
movsb
inc
jmp
stos
mov
repnz
sbb
jns
pusha
dec
and
sub
jmp
loop
sti
jmp
leave
cwtl
mov
dec
xchg
ljmp
cmp
cwtl
ljmp
mov
mov
and
inc
or
xor
pop
das
xchg
jp
xchg
cmp
push
adc
xchg
or
cltd
jnp
mov
sbb
pop
push
push
sub
int3
out
dec
pushf
lea
or
and
adc
mov
fsts
xchg
cmp
leave
fs
push
inc
mov
sbb
dec
imul
sbb
xchg
por
dec
int
xor
and
inc
imul
add
xchg
cmp
mov
xchg
mov
push
add
mov
xchg
sbb
and
pusha
in
and
fisubrs
inc
add
jns
pop
fcompl
aad
or
pop
add
jmp
dec
add
fdiv
pop
into
push
push
mov
sub
in
mov
mov
loope
in
adc
mov
xor
mov
out
mov
xchg
js
ret
pop
sti
jae
scas
jmp
ficompl
or
lret
inc
cld
fldt
mov
outsl
inc
cs
sbb
and
mov
add
xchg
scas
test
pop
adc
out
lret
es
in
movsb
mov
dec
stc
jae
arpl
mov
sar
lret
push
pop
clc
inc
iret
add
rol
cmpsl
jno
or
mov
push
mov
push
aad
jmp
outsb
pop
xor
or
fldz
fsubrl
js
cmp
cli
out
rolb
sti
divl
sub
aam
repz
punpckhdq
cwtl
jae
ja
mov
pop
mov
adc
jle
jmp
sbbl
jge
out
rclb
cmc
xor
mov
mov
nop
xcrypt-cfb
cmpsl
and
insb
les
sbb
mov
pop
js
xlat
or
cmp
xor
fisubrs
fcomps
xor
add
dec
sarb
mov
ret
lret
fcmovb
setle
pop
and
sahf
sbbl
movsl
repz
pop
inc
fnstcw
int
rcrl
iret
lret
adc
in
das
mov
roll
pop
xchg
pop
xor
enter
nop
mov
mov
xchg
fimull
cmp
xchg
push
mov
and
fxch
mov
popf
es
test
mov
push
arpl
imul
js
xchg
mov
sub
call
xchg
mov
aaa
imul
enter
mov
pushl
mov
leave
push
dec
jge
or
in
push
and
gs
daa
test
push
jbe
in
std
fidivl
cli
adc
in
mov
pop
xchg
test
and
ret
or
insl
cwtl
leave
lds
mov
and
rolb
xor
daa
mov
mov
and
mov
inc
ja
add
fsts
pop
cs
mov
inc
or
mov
xchg
test
jno
in
push
sub
cltd
cmp
mov
lahf
inc
stc
imul
aam
inc
imul
rcr
push
pop
aad
fidivs
stc
lds
xchg
mov
jg
xchg
aad
enter
mov
and
lret
xchg
scas
addr16
mov
nop
test
jns
jmp
xchg
jecxz
or
sbb
jo
shll
add
jle
or
test
ffree
mov
aam
pop
mov
inc
mov
cld
shlb
cmpsb
sub
mov
push
sub
dec
jle
orl
leave
sub
jnp
ss
xor
dec
add
in
push
cmpsb
mov
adc
pop
loope
mov
repz
lods
or
or
lods
pop
mov
mov
movsl
sub
mov
negl
out
and
push
popf
in
or
and
lahf
sbb
out
in
jne
mov
fs
jge
mov
mov
stos
aaa
mov
sti
pop
xchg
pop
sub
pop
inc
inc
push
xorb
pop
sbb
lret
shlb
xchg
mov
lahf
shlb
clc
into
int3
cli
add
cmp
fwait
cmp
mov
lret
add
pop
jno
xorl
cmp
sub
inc
fcoms
subl
lret
lea
in
jg,pt
repnz
shlb
adc
inc
lds
or
inc
cs
sbb
js
xlat
jg
jno
and
or
mov
push
and
jb
and
cmp
aas
imul
jns
push
lea
dec
or
add
push
das
cmc
push
es
out
fdivr
sbb
inc
mov
cwtl
dec
decl
and
in
loop
mov
push
inc
cmp
pop
jnp
in
popf
ljmp
movsl
lock
lods
jb
mov
es
pop
shll
mov
mov
pop
cmpsb
push
pop
inc
pop
sub
inc
jge
adc
cmp
mov
rcrb
cmp
jbe
or
fs
fwait
push
mov
movsl
je
cmp
insb
jb
jecxz
lock
out
push
jle
ret
fucomp
jmp
ja
cs
cltd
lods
loop
jnp,pt
xchg
xlat
pop
mov
and
jbe
add
pop
xor
mov
cmpsb
test
in
inc
dec
adc
psubsw
add
insl
dec
repnz
mov
ja
mov
test
sbb
jns
lock
cltd
cmp
cmpl
mov
mov
adc
repnz
daa
ja
arpl
out
lods
jg
xor
push
xchg
sub
nop
cwtl
notb
fbld
insb
inc
and
adcb
testl
jae
call
pop
sbb
lahf
or
dec
cmpsl
std
nop
jo
xor
mov
mov
mov
in
lcall
add
js
loopne
push
icebp
nop
and
jge
stc
mov
data16
mov
sub
es
add
add
cmpsl
push
inc
fmul
sbb
cmp
jno
jle
nop
std
cmp
in
mov
inc
shlb
imul
lods
mov
sub
mov
or
pop
pop
inc
sub
call
rcr
pop
xlat
push
int
out
push
aaa
sbb
cmp
ja
push
mov
das
pop
nop
cmpsb
jbe
in
popa
testl
cmpsl
popa
insb
icebp
inc
mov
sub
scas
jb
jns
fisubrl
ja
inc
xchg
cmp
out
mov
insb
mov
jmp
incb
inc
rorl
dec
or
ss
call
inc
vpavgb
push
mov
adc
repz
mov
push
push
mov
call
gs
mov
push
push
sbb
sbb
sbb
lock
rcll
loopne
mov
cmpsl
pop
mov
cmp
pop
mov
inc
test
jg
scas
fidivs
in
fisubrs
jmp
enter
testb
cs
xchg
out
mov
xchg
ret
fldcw
outsl
pop
xlat
cmp
xor
inc
in
adc
es
mov
insb
je
add
mov
inc
push
mov
mov
pop
add
lock
aaa
and
jp
xor
test
jg
lds
jnp
jnp
sysret
imul
jp
mov
pushf
jne
sub
arpl
test
push
push
cmp
daa
std
mov
jae
pushf
and
mov
adcb
fistl
push
fcoml
sub
stos
inc
mov
pop
sbb
mov
mov
push
push
inc
addl
jg
xchg
push
stos
add
aad
negb
js
je
fists
sub
cmp
negb
push
cmc
xchg
mov
int3
mov
mov
mov
xchg
push
lahf
mov
out
and
popa
pop
cwtl
mov
push
push
or
lret
mov
fldl
jmp
and
mov
fs
ljmp
call
fcompl
insb
add
jl
call
inc
or
out
call
insb
pushf
ljmp
rclb
mov
sub
fisubrs
ss
cmp
sub
scas
out
mov
out
jle
fnstsw
mov
call
mov
dec
inc
daa
dec
daa
xor
bound
stc
or
cmp
shlb
jecxz
sub
mov
jmp
push
mov
addr16
xor
popa
shll
and
and
xor
ss
fildll
or
fbld
popf
daa
add
icebp
pop
cmp
adc
cmpsb
lahf
aas
loop
adc
push
sbb
and
pop
xor
popf
pop
xchg
mov
mov
js
cwtl
imul
mov
pusha
sbb
notl
mov
or
adc
mov
ljmp
or
push
mov
jns
inc
inc
insb
fstps
or
sbb
insl
aaa
jg
xor
test
vrcpss
cmp
into
daa
cmpb
mov
cwtl
repz
inc
or
js
xchg
lea
mov
mov
cmp
xor
pop
mov
mov
test
inc
iret
popf
lret
incb
in
sub
ret
fistps
mov
sub
jbe
mov
inc
xor
mov
xor
movl
jo
std
jae
test
pop
int3
cmpsb
pop
dec
jmp
mov
inc
jae
add
movsb
xor
sbb
or
cmpl
mov
jbe
and
mov
jl
cmp
scas
rcr
xchg
push
mov
jecxz
std
jp
jmp
rcrb
sbb
jmp
ss
filds
pusha
mov
sub
pop
sub
hlt
xor
cwtl
movsl
inc
push
and
sbb
mov
pushf
mull
mov
sbb
or
or
pop
push
dec
out
jns
mov
xchg
hlt
std
jbe
sbb
fneni(8087
inc
xchg
xchg
fs
rcl
lcall
mov
ja
cld
jle
mov
cli
jb
jecxz
or
stos
or
ret
cmp
enter
jno
xchg
pop
cwtl
clc
mov
mov
das
push
insl
enter
cmp
imul
lcall
and
pop
mov
ja
insb
leave
outsl
ja
lahf
enter
push
pop
out
pop
pop
xorb
daa
or
xchg
mov
xor
cmp
sub
dec
daa
leave
adc
jle
iret
shrb
loopne
testb
imul
cmp
and
mov
in
push
ret
mov
mov
test
add
adc
sarl
mov
fsubl
lret
pop
mov
mov
testl
jbe
aam
mov
hlt
push
gs
dec
adc
bound
enter
stos
pop
dec
mov
sbb
mov
stos
xchg
in
pop
push
adc
aam
push
cmp
jnp
movsb
jle
cltd
mov
imul
mov
btc
xchg
inc
imul
mov
push
or
dec
aad
adc
cwtl
test
js
mov
jmp
or
pop
mov
inc
out
jo
or
xor
mov
cmp
imul
mov
sarl
shlb
sbb
fcoms
sar
andb
jo
jnp
pop
lret
shlb
movsb
cmp
aaa
pop
mov
dec
out
xchg
inc
leave
push
mov
loope
cmp
mov
adc
lea
stos
mov
movsb
adc
popf
jg
sbb
pop
push
mov
call
aad
js
mov
jge
popf
cmp
add
ja
mov
shrl
pop
aas
sbb
xor
sub
pop
icebp
loope,pt
int
je
jg
adc
or
rorl
pushf
in
ret
js
shlb
push
xchg
popa
dec
test
popa
jg
aas
icebp
push
jbe
js
mov
pop
ja
mov
pushf
ror
pushl
shll
push
lret
popf
rcll
dec
ret
cmp
cmp
xchg
mov
jmp
mov
addl
fnstcw
sbb
add
arpl
in
fisttpll
lds
stc
sbb
mov
fcomi
pop
xchg
mov
aas
pop
jae
adc
dec
jle
inc
add
or
fisttpl
and
test
in
ror
push
mov
das
cmp
addr16
fld
push
js
sub
sbb
mov
adc
mov
test
and
push
cmpb
out
adc
ret
lods
inc
les
in
insl
pop
mov
sbb
mov
push
mov
fcompl
sub
dec
fchs
lret
jae
lahf
das
xlat
push
inc
mov
xchg
inc
cwtl
rolb
adc
push
jae
adc
iret
ja
and
jne
stos
sbb
clc
jle
rorl
sub
jnp
and
pop
adc
sbb
clc
inc
cs
stos
int
imul
inc
scas
mov
js
dec
scas
icebp
sbb
out
les
jnp
in
out
pop
out
je
xlat
cwtl
shll
rcrl
test
loop
out
iret
fnsave
xchg
insb
and
inc
sbb
pop
jl
adc
mov
aaa
sarl
jbe
shll
cmp
mov
cmpsb
sbb
xor
xchg
sahf
sub
test
out
inc
pushf
or
loope
inc
loopne
sbb
outsl
into
mov
test
insl
jmp
xor
cmpsl
mov
movsb
pusha
daa
addr16
mov
mov
cwtl
push
cmp
jnp
rcrl
data16
sarb
jns
int
sbb
jmp
scas
mov
mov
and
aam
shrl
add
in
dec
popf
rolb
mov
clc
add
jns
xchg
ljmp
cli
aad
mov
out
icebp
cmp
cmp
imul
mov
roll
pop
les
test
jge
push
cmpsl
sub
cmp
ret
adc
in
jne
cmp
and
cwtl
pop
add
popa
dec
fs
jne
stc
inc
mov
imull
insl
pop
in
test
inc
push
movsl
lods
jns
ljmp
test
leave
sub
test
or
loopne
iret
mov
jae
ja
stc
neg
add
stos
stos
loopne
xor
movsl
int
inc
or
ffree
jns
daa
xchg
icebp
popl
das
sbb
mov
sbb
mov
xor
push
xor
es
notl
stos
cmp
cmc
lahf
ds
lret
iret
loop
push
imul
insb
dec
rorl
das
mov
out
adcl
inc
stos
rcl
fnsave
fcoml
adc
xchg
cmp
mov
xor
incl
adc
outsb
xchg
mov
mov
xchg
cld
in
xchg
stc
stc
aaa
test
mov
cmp
loope
pop
add
sub
inc
or
cwtl
mov
fbstp
mov
ljmp
adc
in
sub
jg
dec
xchg
xchg
sub
inc
je
xorb
fiaddl
sub
stos
push
in
outsb
mov
iret
jnp
in
pop
cmp
cmp
pop
popa
cmp
jmp
leave
aam
push
push
push
inc
leave
jo
jecxz
mov
dec
mov
dec
test
cmp
loopne
into
lock
xchg
mov
scas
out
mov
jmp
ficomps
out
rcrb
out
push
ret
cmc
ret
push
addr16
pushf
add
out
jo
add
pusha
fistps
iret
ja
inc
fdivs
mov
lret
and
sbb
push
mov
cmp
pop
or
jle
xchg
iret
pop
add
push
inc
or
into
out
jnp
sbb
les
sub
repnz
sbb
xchg
mov
dec
cli
inc
pop
leave
xchg
add
sarb
xchg
int3
movsb
addb
xor
sbb
sub
imul
jmp
icebp
mov
and
rclb
cmp
sarb
jae
mov
pusha
stc
mov
mov
cs
lret
jmp
fsub
dec
fdivp
xchg
movsb
out
movsb
jo
add
jnp
jnp
or
pusha
sbb
arpl
adc
jecxz
cmp
xchg
xchg
arpl
outsl
lcall
lock
sub
and
shr
cmp
and
lea
adc
faddl
bound
jge
sub
mov
je
ljmp
notl
in
cmpl
mov
pop
aas
scas
iret
adc
and
and
pmuludq
jns
mov
jecxz
gs
icebp
add
pusha
dec
dec
clc
test
lea
jmp
sub
or
insb
sbb
jae
stos
lock
ret
pop
sti
or
jmp
aam
leave
lock
aad
mov
pop
dec
add
xor
clc
mov
xor
push
stos
mov
adc
push
scas
jge
lea
cmp
jecxz
push
sti
sub
test
leave
sbb
aaa
addl
daa
gs
xor
cmpsb
outsb
movsb
push
sub
push
bound
aas
jl
lret
out
in
push
testl
mov
aam
jnp
xor
or
call
pop
sbb
xchg
sbb
es
stos
repz
adc
inc
sarl
mov
out
mov
fdivl
outsb
loop
mov
and
and
sbb
stos
pop
mov
pop
out
mov
mov
mov
std
scas
inc
and
xchg
daa
mov
out
or
mov
pop
fstps
fistpll
cmp
xchg
nop
fcomps
jl
inc
mov
ret
aas
aam
rclb
cmc
jp
pop
jmp
jmp
jo
cmp
mov
inc
push
sub
xlat
mov
inc
ja
lds
push
das
popa
add
hlt
xorl
rclb
leave
in
sub
out
jns
gs
push
mov
push
repz
int
cmpsb
inc
sub
lcall
mov
je
jo
addl
sar
mov
sbbl
movsb
cmp
pushf
xor
test
mov
ljmp
pop
xchg
test
xor
sbb
stos
notb
repnz
mov
push
or
add
sub
orl
xchg
fiaddl
in
aaa
dec
cmovae
xor
in
add
push
mov
or
pop
mov
xchg
dec
add
push
popf
or
push
sub
repz
insb
mov
xchg
jne
dec
jnp
pop
mov
mov
add
push
adc
nop
sub
inc
gs
subl
xor
xor
mov
out
outsb
or
inc
loopne
ror
push
out
imul
xor
mov
push
inc
ds
out
dec
lret
stos
out
test
or
cmp
and
out
out
popf
sarl
incl
je
bound
lcall
cmp
and
lock
dec
lret
enter
fnsave
inc
mov
rcrl
and
mov
mov
add
fs
inc
jne
fnstenvs
out
sbb
cmc
sti
mov
push
sahf
jge
adc
jne
cmp
push
cmc
sbb
fwait
js
sti
mov
into
data16
dec
out
jo
sbb
loope
adc
jo
les
jno
div
and
sub
jae
inc
mov
inc
pop
bound
ds
shlb
adc
cmp
jo
ret
fbstp
mov
icebp
sub
in
adc
mov
std
pushf
incb
adc
addr16
test
fbstp
push
mov
jns
cli
outsl
add
xchg
adc
aad
lahf
stos
loop
movsl
pop
cmp
addr16
mov
adc
das
xchg
mov
mov
xchg
inc
loopne
mov
pop
mov
and
out
sub
dec
jmp
cmp
xor
jo
fildll
popf
call
int
and
jg
inc
push
cld
dec
or
mov
das
mov
clc
dec
out
dec
mov
jg
push
jno
pop
int3
inc
xor
pop
mov
test
lcall
and
or
fsubs
lods
mov
inc
loop
cmp
stc
dec
scas
ret
xchg
inc
sbb
rorl
mov
inc
aam
aas
mov
mov
fbld
repnz
and
add
sbb
cwtl
sbb
sahf
mov
cmpsl
lds
push
push
sbb
sbb
mov
cmp
enter
mov
push
jo
pop
out
push
scas
xchg
xchg
and
dec
jecxz
pop
sub
sub
iret
aad
adc
roll
test
fistpll
in
arpl
jl
aad
xor
sbb
aas
aam
inc
mov
sub
lock
shrl
mov
pop
xlat
call
stc
jnp
mov
nopl
inc
jmp
popf
sbb
xchg
dec
xchg
lret
push
nop
orb
or
xchg
or
aam
push
and
repz
cmp
fistps
mov
cmpsl
iret
jns
jle
mov
inc
loope
pop
inc
sahf
sbb
rol
add
sbb
mov
rcrl
cmp
pop
das
add
or
xchg
cli
les
push
xchg
pushl
test
cmpsb
xor
popa
ret
mov
call
xchg
sub
jne
pop
mov
dec
add
sub
int
sub
arpl
stos
and
sbb
jb
mov
pop
xchg
xchg
mov
xchg
or
rcrl
mov
js
movsl
push
stos
mov
adc
lock
decb
sarb
std
mov
cs
mov
lret
sub
rcrl
mov
aas
into
sti
fldenv
pop
gs
in
fmuls
fdivl
push
shlb
shll
jl
dec
cwtl
loop
jmp
push
in
mov
stos
bswap
pop
je
sub
and
js
cmove
lret
pop
dec
data16
xchg
or
adc
dec
sub
mov
loopne
rcrb
pop
mov
inc
rcrl
push
cmc
and
and
cmc
ror
push
xchg
add
adc
xor
xchg
lcall
cmpsl
mov
lret
push
lock
jnp
rcr
ja
pop
cmc
mov
gs
cmp
bnd
loope
aaa
sbb
sarl
xchg
ror
mov
pop
push
cmc
xor
cmpsl
lret
sub
cmp
and
inc
nop
decb
xchg
xor
mov
xchg
gs
loopne
out
out
std
orl
cmpsl
push
out
xor
idiv
ret
pop
aam
xchg
push
loope
pushf
adc
cmc
in
or
les
stos
inc
daa
outsb
aas
adc
enter
or
jb
or
lds
loopne
call
fmull
cmp
aad
ss
push
fwait
incb
roll
xor
or
fwait
dec
push
mov
insl
jno,pn
stos
loopne
mov
test
test
mov
loopne
daa
push
test
addb
adc
aam
scas
pusha
scas
arpl
xor
cmp
mov
outsl
mov
call
pop
lahf
shrb
andb
and
pop
mov
mov
or
std
arpl
push
ret
mov
mov
call
fsubp
hlt
jmp
imul
in
cs
dec
arpl
jbe
lret
je
add
hlt
xor
mov
mov
movsl
icebp
loope
lea
mov
stc
sub
stos
add
jno
jnp
sbb
aam
loopne
adc
cmp
jns
daa
mov
cs
repnz
lahf
leave
jnp
or
xchg
push
lahf
add
sub
push
cltd
inc
push
pop
jmp
aam
adc
mov
sub
jmp
cmc
push
adc
lock
fistl
dec
rclb
lret
stc
jnp
in
fldcw
xchg
jo
loopne
icebp
js
pop
xchg
adc
outsl
ss
add
insl
push
push
adc
repz
xchg
sbb
subl
lcall
mov
fwait
push
jmp
out
mov
aam
into
aas
dec
pop
int
xchg
xchg
out
cmp
adc
mov
cmpsb
xchg
bound
push
mov
xlat
mov
xchg
test
imul
je
inc
push
rorl
aam
daa
mov
repnz
xchg
sbb
or
jo
mov
icebp
movsb
out
or
sti
nop
sub
cmp
mov
xor
pusha
sbb
test
ret
shl
inc
pop
sub
sbb
leave
jmp
aam
pop
push
mov
mull
pop
imul
stc
rclb
stos
mov
out
mov
add
cmpsl
stos
mov
in
lea
mov
mov
mov
pusha
push
push
dec
pusha
inc
rcll
xchg
in
inc
pop
scas
push
or
mov
mov
popa
fnstcw
sbb
out
dec
dec
imull
aam
and
or
mov
int3
in
mov
daa
scas
cmp
enter
pop
mov
aaa
sbb
pop
enter
xor
xlat
movsb
jle
add
dec
lods
jg
mov
cld
jbe
xor
jae
or
scas
aam
mov
stos
lea
pushf
add
xor
add
rorl
jbe
and
xchg
int
xchg
scas
and
ret
lods
inc
cld
sub
mov
cmpsb
int3
push
and
scas
inc
fs
mov
mov
dec
add
out
and
lods
addb
xor
adc
xor
fnstsw
mov
sub
jg
pop
mov
push
jbe
aas
pop
out
hlt
out
ret
xchg
pop
movsl
mov
push
cmp
add
push
in
in
repnz
mul
mov
push
cli
out
pop
mov
push
adc
jb
jb
sbb
mov
test
dec
fisttpl
push
iret
cmp
je
lret
xchg
inc
mov
fdivp
fimuls
and
mov
mov
xchg
test
mov
aam
or
lahf
filds
mov
sub
xor
dec
push
mov
xor
and
in
mov
adc
xlat
and
mov
push
popf
ror
jl
out
push
jne
iret
nop
mov
push
cld
scas
lock
dec
push
inc
sbb
and
shl
stos
into
je
out
cmpl
filds
das
dec
into
mov
jae
repnz
mov
adc
addl
or
sarb
ret
imul
and
test
mov
or
cltd
add
jbe
add
or
cmpb
ja
fidivl
mov
loope
jl
pop
inc
xor
fistps
add
roll
dec
cmp
sbb
ss
jge
cs
mov
movsl
in
push
loope
enter
popa
push
mov
loopne
rcll
mov
xor
pop
int
mov
jnp
sbb
lea
repnz
inc
or
rol
js
test
ret
scas
pushf
divl
inc
mov
pop
aaa
cmp
bound
xor
pop
jle
dec
sbb
outsb
mov
xorb
in
mov
jp
add
mov
push
popf
xor
mov
fistpll
xchg
aam
outsl
pop
xchg
addl
mov
jnp
pop
aam
inc
sbb
fs
adc
shrb
pushf
test
push
xlat
dec
test
js
adc
and
rclb
leave
add
push
stos
mulb
pop
cmpsb
and
add
es
mov
loop
decb
and
cmp
aam
ds
insl
mov
loope
test
mov
sbb
aad
and
int
shlb
icebp
ror
jb
fs
arpl
jae
push
imul
pop
lea
loope
repnz
rcrl
mov
out
fcmovb
out
cmp
inc
in
sub
push
cmpsb
add
pusha
inc
ss
pop
movsl
xchg
sbb
mov
pusha
mov
cld
sbb
cmc
and
push
and
ret
lcall
mov
bnd
cmp
outsb
xchg
js
adc
add
fcompl
mov
outsb
add
aad
imul
xchg
add
cltd
mov
stc
and
or
arpl
and
add
and
loopne
ss
adc
lds
mov
stos
xor
and
xchg
pop
sub
cmp
icebp
or
int3
in
add
mov
pushf
mov
jae
jmp
test
sub
mov
mov
mov
add
xor
mov
sbb
adc
adc
mov
dec
xchg
sti
xchg
arpl
lds
mov
test
cpuid
mov
mov
std
mov
pop
ret
push
enter
in
adc
pop
sahf
fldl
sbb
inc
and
loop
cmp
ret
fdivl
xchg
pop
insl
sub
mov
and
test
shlb
push
inc
int3
lea
iret
out
fcmovu
mov
mov
or
repz
ret
xchg
shll
into
mov
mov
xor
shll
mov
mov
pop
add
mov
cltd
push
adc
lods
es
inc
xor
data16
out
stc
jg
outsl
push
sub
jge
dec
xchg
fisubrs
ret
and
in
pop
xlat
lret
fidivs
gs
sub
lahf
sub
sti
xchg
sub
test
jle
jle
xlat
dec
fxsave
xor
pop
mov
lcall
add
cmp
mov
sub
pushf
fsubrs
sahf
mov
adc
adc
jecxz
inc
orl
addr16
jne
sbb
dec
mov
addr16
pop
enter
sahf
xchg
xchg
dec
ret
mov
mov
sbb
adc
add
and
inc
loop
push
cmpb
cli
sub
jmpw
adc
pushf
ret
je
xor
jnp
pop
push
lcall
xchg
xor
sub
xor
xorb
pop
lods
cmc
test
xchg
int3
outsl
mov
mov
mov
je
stos
lods
mov
mov
addr16
fs
ret
dec
push
push
mov
adc
test
pushf
icebp
adc
int3
insl
jmp
mov
mov
or
imul
pop
lret
pop
aad
sub
jns
sbb
in
lret
mov
inc
mov
pop
ja
cltd
mov
mov
mov
push
or
adc
add
xchg
insl
mov
adcb
sub
imul
jnp
cmpsl
jne
rolb
sti
mov
xchg
cmp
out
cmpsl
push
sbb
imul
pop
add
mov
jge
icebp
sbbb
dec
pushf
shlb
test
xor
js
popa
push
scas
ja
shlb
movsl
rcll
cmp
ret
adc
xchg
das
loop
inc
scas
xor
mov
pop
jg
in
out
cld
mov
adc
mov
push
sub
icebp
jg
or
clc
out
shrl
pop
jl
ret
out
cmpsb
or
mov
cltd
test
lret
ds
sub
add
jns
pop
pop
mov
or
inc
pop
inc
xchg
xorl
decl
dec
ret
clc
int3
je
inc
sub
mov
std
and
sub
mov
pop
outsl
mov
cmpsb
std
xchg
pusha
mov
faddl
xchg
ljmp
mov
jo
pusha
repz
jecxz
add
mov
mov
outsb
mov
pusha
xor
cwtl
add
pop
pop
inc
cmp
shll
cmp
mov
or
mov
ffreep
cmp
xchg
cltd
mov
sbb
push
mov
adc
pop
stos
jge
adc
push
xchg
xchg
sub
gs
loopne
shlb
leave
add
fisttpll
pop
addr16
sub
mov
hlt
ja
in
jnp
push
loop
pop
pop
jne
out
in
dec
stc
jns
xchg
cmp
stc
pop
mov
int
jae
xchg
aas
mov
cmp
popf
lret
outsl
pop
mov
xor
push
or
xchg
das
pop
mov
mull
out
xchg
mov
sbb
aad
icebp
inc
int3
add
roll
xlat
cmpb
je
scas
inc
stos
inc
leave
jg
fiadds
mov
out
or
mov
push
mov
jbe
sbb
int
adc
aas
test
ljmp
and
test
push
popf
repz
dec
sub
pop
fadd
jbe
dec
scas
aaa
pop
in
pop
mov
mov
testl
pop
push
mov
fistpl
lret
dec
negb
stc
fdivrs
in
scas
inc
lret
stos
and
rcrl
pop
rolb
sub
mov
cmp
mov
xor
in
jbe
fcomi
add
cmp
push
lods
push
xor
clc
fsubrs
lods
rcl
shrb
inc
dec
in
inc
push
sub
inc
or
sbb
jo
fcmovnu
jmp
mov
mov
ljmp
push
push
mov
mov
cli
mov
ret
mov
loop
loopne
add
lock
xchg
cmpsl
fisubrl
cmp
data16
jbe
xchg
data16
lock
cmp
in
shrl
mov
aaa
jmp
or
dec
mov
adc
jne
and
aam
push
int
mov
std
jp
montmul
cmpsb
test
fstl
mov
jmp
adc
adc
adc
pop
in
int
xor
mov
leave
int3
sub
aam
addr16
adc
lahf
popf
xor
into
pushf
aad
call
jns
xchg
fcoms
mov
sbb
insb
mov
scas
jns
out
imul
dec
sub
cmp
repz
stos
mov
mov
adc
out
scas
repz
cmp
imul
pop
cmp
xchg
lcall
mov
mov
scas
pop
ficomps
mov
dec
dec
adc
adc
enter
loopne
aas
push
cmp
call
xchg
lea
mov
test
sbb
xlat
inc
ficompl
or
pop
adc
cmpl
adc
gs
push
mov
imul
leave
pop
push
in
loop
les
sbb
mov
pop
std
xor
xlat
push
js
jl
jbe
rcll
clc
sbb
test
jp
inc
xor
jno
hlt
arpl
jnp
mov
ret
dec
sbb
mov
lret
repz
push
mov
jle
in
push
add
sarb
in
pop
jg
aad
sahf
shl
adc
sub
pop
or
cmp
nop
sti
mov
dec
loop
sbb
inc
mov
fldl
mov
jl
jge
leave
pop
push
decl
cld
mov
push
lea
sar
iret
fcomi
fbstp
inc
mov
sub
push
jo
int
lcall
adc
mulb
xor
out
sub
aas
add
imul
scas
and
mov
or
test
jg
mov
jg
inc
outsb
add
cs
adc
inc
test
sbb
sub
stos
xlat
movb
ja
sbb
cli
xchg
aam
enter
jne
add
imul
lods
or
insl
fildl
inc
nop
roll
mov
aas
mov
push
loopne
iret
outsb
test
leave
jecxz
xchg
pop
push
jmp
scas
mov
ret
movsb
outsb
dec
movsb
push
mov
into
lret
shl
or
mov
daa
adcb
addl
cs
xor
mov
sub
shlb
add
filds
dec
inc
mov
push
loope
pop
inc
loopne
outsb
adcb
loope
je
sbb
adc
flds
cmpsb
in
je,pn
mov
dec
dec
repnz
jle
push
jmp
lods
gs
sub
aaa
or
inc
lds
jg
in
fists
sub
mov
sbb
rolb
movsb
imul
fsubr
pop
push
adc
movsl
mov
pop
pop
jl
and
mov
pop
sbb
inc
scas
addr16
scas
fwait
mov
and
adc
push
cmp
and
or
add
scas
jge
and
add
out
push
loop
das
mov
and
scas
leave
lods
mov
mov
push
jo
xor
pushf
push
jmp
xchg
push
imul
orl
popf
pop
sbb
lods
adc
sbb
aam
jnp
fstpl
inc
pop
incb
or
mov
sti
inc
iret
mov
out
loop
bound
xchg
lock
cwtl
or
cmpsl
inc
lock
push
add
pop
jns
idivb
in
fldenv
ja
sbb
lcall
jbe
and
bound
sbb
sub
sub
rcrl
mov
cmp
pop
mov
add
sub
adc
js
sub
roll
imul
cmp
mov
and
ds
xchg
fidivrl
sti
incl
lret
jae
lods
dec
icebp
dec
int
lret
add
cmc
aad
mov
sti
sti
pop
mulb
cmp
inc
lahf
outsb
inc
and
popf
cmp
cmpsb
leave
test
lods
ficomps
cwtl
cmp
mov
mov
outsb
hlt
cmp
loope
into
ret
sub
cmp
lock
fbld
add
mov
ss
inc
pushf
jo
mov
in
mov
dec
das
inc
lret
pop
mov
sub
mov
mov
inc
ja
cs
inc
xchg
and
inc
sbb
mov
pop
pop
mov
popa
cltd
lock
ret
push
loopne
adc
int3
dec
mov
js
lret
fwait
dec
add
cli
lcall
push
sub
mov
sbb
sbb
aaa
movl
scas
rcr
out
mov
outsl
xor
xchg
mov
pop
out
lret
shrl
imulb
mov
pop
stos
mov
pop
scas
mov
mov
lods
xor
je
add
push
arpl
pushf
fcomps
ja
roll
mov
fwait
cmp
and
push
inc
enter
cmp
mov
jge
data16
dec
ljmp
push
sarb
in
aas
arpl
fidivs
cmpsl
loopne
inc
pop
je
int3
xor
xchg
sub
mov
push
ficompl
pop
xor
mov
adc
mov
pushf
notl
int3
push
fstps
jo
adc
jg
movsl
jne
xor
fisubs
jbe
mov
mov
test
sub
adc
cld
cmp
jmp
imul
mov
inc
jnp
in
pop
data16
imul
mov
mov
mov
lcall
sub
ljmp
sbb
mov
push
mov
inc
mov
rorb
lock
mov
fmuls
jne
shr
fxsave
adc
in
cs
repnz
sbbl
rep
cmp
dec
mov
jmp
ljmp
fisttpll
scas
cmp
xchg
mov
or
arpl
mov
inc
test
add
ljmp
dec
andl
test
mov
lcall
adc
jge
je
fistpll
cmp
rorl
adc
xor
sbb
mov
pop
mov
pop
and
or
and
mov
pop
idivb
int3
pop
pop
dec
add
stos
jmp
int3
insl
fdiv
out
add
mov
out
push
dec
xchg
aaa
or
cmc
pop
jge
test
adc
mov
sbb
pop
add
hlt
cltd
and
xchg
mov
out
sub
shlb
push
mov
fistpll
mov
push
cmpsl
and
and
loope
das
fiadds
push
lcall
push
dec
outsl
rorb
nop
xor
dec
sub
xchg
mov
mov
add
lcall
pop
or
push
and
mov
push
inc
jecxz
pop
xchg
pusha
and
hlt
test
push
rcrl
les
mov
jmp
clc
cld
out
fwait
mov
mov
cmp
cld
fnstsw
movsb
xchg
ds
mov
fwait
in
jno
inc
pop
xchg
into
in
test
xor
arpl
cwtl
and
icebp
bound
in
pop
pop
jo
rcl
mov
fimull
sub
loopne
lcall
and
clc
mov
test
mov
sbb
nop
fisttpll
jl
cld
test
ret
sbb
push
outsl
dec
fcoms
xor
pop
cmp
adc
push
mov
mov
repz
cmp
pop
bt
mov
mov
inc
fwait
jae
idivl
mov
mov
cmp
and
cmp
std
add
lret
fsubrs
pop
shll
loope
push
imul
xor
test
jge
sub
pop
sbbl
cmp
les
scas
push
xchg
into
xor
xchg
jnp
out
into
mov
push
adc
push
inc
jae
inc
pop
insl
push
lret
pop
in
int3
stc
call
push
xlat
or
push
faddl
mov
cmp
ja
ret
pop
cli
mov
mov
cwtl
add
movsb
or
push
cmp
repz
enter
and
cmp
pop
xor
jecxz
loope
xor
mov
outsb
push
adc
push
out
les
inc
in
dec
repz
cmp
std
push
xor
leave
mov
sub
in
dec
fdivrs
js
or
and
orb
out
out
insb
testb
out
fsubrs
cmpsl
pop
testb
mov
push
sti
adcl
and
fs
lret
ja
sbb
mov
mov
jae
push
movsl
mov
inc
xor
popa
fistpll
orb
mov
mov
sub
ret
imul
stos
pop
or
in
mov
or
into
ret
insl
sub
imul
unpckhps
loope
call
mov
lods
fucomp
push
and
mov
cltd
sti
sbb
mov
pop
scas
shl
movsb
adcb
dec
lock
cmp
fisubrs
xor
add
fsubl
xchg
push
loope
sub
lock
sub
xchg
mov
stc
jge
aad
jb
or
notl
mov
pop
dec
and
push
and
mov
lahf
or
push
dec
ds
pop
rclb
jecxz
push
pop
sbb
das
ret
flds
push
lea
mov
shrl
loope
adc
fnstcw
sbb
outsb
setp
push
pop
imul
std
lods
in
repz
cmpsl
in
mov
test
adc
stos
rolb
clc
fldl
mov
inc
push
jno
daa
xchg
cmp
push
hlt
mov
mov
push
pop
addb
xor
mov
sbb
xor
xchg
pop
stos
shrb
mov
icebp
or
cmpb
ret
dec
es
push
fists
test
and
pop
ljmp
pop
aad
cmp
lcall
push
xor
fdivr
dec
ljmp
add
popf
jmp
sbb
cltd
and
mov
mov
clc
subb
int3
repnz
mov
mov
les
mov
ret
xchg
pop
inc
gs
dec
add
pop
lret
xchg
mov
mov
adc
iret
dec
movsb
push
cli
lods
pop
data16
lock
not
xchg
dec
vpunpckhdq
lret
aaa
insb
loope
ja
imul
cmpsl
adc
sub
sub
aam
mov
pop
push
arpl
dec
sub
xchg
testb
loopne
cmp
lret
int
jp
mov
js
mov
xchg
sbb
xor
mov
jne
xlat
mov
mov
pop
shrl
subl
adc
jbe
pushf
adc
cmp
sub
popa
leave
xor
push
lcall
mov
mov
test
mov
adc
mov
xor
push
cltd
inc
mov
pop
in
mov
test
sbb
mov
add
test
xchg
fs
and
and
addl
jmp
adc
mov
cmp
jl
adc
pop
sub
jb
inc
or
xchg
mov
icebp
fwait
and
push
xor
push
mov
cld
test
xchg
mov
xor
ret
ljmp
lds
sub
out
dec
scas
push
lea
sbb
cmpsb
stos
iret
pop
pop
shl
jae
push
in
cmp
cmc
adc
aaa
pop
adc
cmpsl
cltd
mov
xchg
fwait
in
leave
in
mov
mov
pop
out
inc
sub
mov
push
das
mov
daa
xchg
roll
dec
mov
mov
pop
or
mov
mov
pop
pop
dec
cmp
clc
inc
push
insb
pop
xchg
lods
pop
out
jns
mov
mov
aam
into
fistl
jo
js
xchg
jns
xlat
popf
andb
pop
movsb
jns
je
sbb
push
pop
int3
fstps
push
pop
vfmsubss
jge
sbbb
dec
nop
insb
xchg
xchg
mov
les
cli
xchg
pop
lret
cmp
lret
xor
mov
fisubrl
pmaddwd
xchg
pop
cli
hlt
mov
cmp
test
push
pushf
push
pop
push
sbb
xchg
xchg
xor
pop
cwtl
ret
sub
shrl
xchg
lret
and
cmp
add
imul
mov
xchg
push
shlb
jno
loopne
idivl
xchg
loopne
or
inc
lock
testl
cwtl
xor
orl
and
outsl
inc
push
flds
jno
sbb
pop
or
mov
into
pop
fmul
sbb
sbb
stc
mov
loop
mov
add
bound
dec
shll
push
jnp
mov
cltd
std
jno
mov
je
addl
std
pop
pop
jns
ss
xor
inc
cmp
pause
sub
stc
jl
enter
fsubrl
jo
inc
stos
loop
cmpsl
repz
ds
ja
pop
xchg
test
lods
inc
daa
shlb
pop
std
push
or
stos
and
mov
int3
sbb
jbe
loopne
push
lods
iret
adc
fsubs
inc
inc
push
test
mov
loop
ljmp
sbb
push
loopne
pop
inc
cmp
xor
ss
push
xchg
sbb
xchg
mov
inc
test
test
push
xor
sahf
scas
mov
pop
inc
aas
dec
lods
sub
call
js
pop
mov
stos
xorb
rol
adc
sub
xchg
cmp
mov
push
mov
sub
cmp
push
xrelease
xchg
movsl
sub
or
mov
and
adc
test
loop
inc
lahf
dec
cmp
inc
outsl
and
scas
cmp
or
cmpsb
mov
sbb
ret
jnp
push
xor
mov
in
cmp
xchg
cmp
mov
fsave
and
imul
scas
adc
dec
rclb
dec
or
fadd
fs
insb
add
je
imul
cmc
jecxz
pop
push
filds
cmp
lea
push
test
dec
jno
insl
xor
cmp
in
lahf
movsl
cltd
ja
xor
xchg
mov
fidivrs
rcr
inc
lcall
fistpll
fsts
push
popf
call
push
push
vmread
fdivl
pop
fidivrs
ja
jb
push
cltd
push
sub
jae
jp
sub
mov
sbb
lea
push
and
adc
fcmove
add
repz
mov
in
cmc
imul
jne
pop
pop
or
or
xchg
lds
and
test
dec
mov
jl
scas
es
rcll
jb
pop
jl
lret
roll
jecxz
into
mov
fnsave
pushf
mov
divl
mov
jp
in
lcall
push
aam
mov
cmp
adc
mov
ja
add
mov
fisttps
movsb
adc
jmp
adc
jae
cltd
pushf
add
mov
les
inc
mov
jno
out
icebp
scas
inc
dec
cwtl
dec
jg
enter
lods
add
inc
rcrl
jle
dec
push
sbb
out
ljmp
mov
pushf
out
mov
ljmp
aad
addr16
in
cmp
push
jle
outsb
xor
mov
xor
cmp
mov
and
jno
mov
out
je
shrb
adc
mov
lock
push
mov
and
lcall
sbb
push
add
mov
int3
mov
xchg
mov
enter
xchg
lds
lock
loopne
test
cmp
out
fs
push
dec
push
mov
scas
fisubl
xor
and
pop
icebp
enter
mov
mov
arpl
and
testl
mov
sub
add
leave
stc
and
add
ficoml
movsl
ret
and
cmp
jbe
into
ljmp
mov
dec
shl
pop
leave
pop
sub
sub
outsb
mov
aam
inc
lret
push
mov
mov
cmp
cmp
adc
push
jo
jecxz
cmp
xlat
adc
out
cmp
call
inc
mov
cltd
push
jns
fistpl
sbb
mov
and
leave
aad
cpuid
xor
mov
inc
pop
pop
outsl
lea
push
push
into
sbb
fcompl
push
shll
mov
sbb
data16
mov
ds
lea
out
test
mov
lcall
adcb
dec
aaa
jns
pop
dec
in
mov
stc
jne
xor
xor
push
shrl
mov
add
mov
xchg
push
fiaddl
sub
aas
push
daa
cmpb
inc
test
cltd
ss
test
dec
cmp
mov
cs
lret
push
aam
call
stos
inc
clc
mov
scas
adc
adc
push
xchg
dec
fwait
cwtl
sbb
icebp
mov
movsb
cwtl
sahf
movsl
push
jecxz
popf
xchg
imul
xor
dec
fiadds
mov
ss
jle
lods
xchg
sub
aas
aaa
out
cmpsb
xchg
mov
mov
les
lahf
ljmp
into
xor
sahf
cmpl
dec
jae
scas
xchg
cmp
movsl
repz
add
mov
push
inc
add
out
jle
lock
mov
and
or
xchg
jg
push
push
add
jne
lds
lea
fdivrs
mov
mov
mov
or
and
adc
jnp
add
icebp
lcall
imul
push
jge
imul
dec
fcompl
enter
stc
rol
shr
in
push
daa
jnp
dec
in
in
mov
cmc
repnz
push
std
enter
test
lods
and
lods
dec
dec
scas
inc
add
cwtl
jae
jne
lods
nop
or
hlt
or
pop
add
shll
cmpsl
mov
pop
daa
cltd
sub
jo
aaa
call
lods
xlat
or
cmpsl
ja
outsl
adc
mov
or
pop
dec
loop
xchg
scas
rol
xchg
jl
adc
aam
add
js
dec
and
inc
and
cmp
xchg
pop
sbb
lret
jnp
fidivs
jno
xor
xor
pop
mov
mov
push
pop
aam
dec
jne
and
divb
or
in
sbb
sub
mov
jne
loopne
inc
pop
sbbl
dec
jg
xor
dec
fdivrl
pop
adc
sub
aad
jmp
sbb
popl
xchg
lock
pop
and
shr
data16
aad
test
add
lods
or
mov
mov
movsl
sti
sarb
and
or
and
cmpsl
adc
out
fmull
pop
inc
lret
jge
ja
or
pop
push
mov
movsb
sahf
incl
mov
movsl
lea
mull
fwait
mov
sbb
xchg
rol
xchg
xchg
jnp
or
or
decb
sub
mov
dec
sbb
mov
adcl
insb
insb
dec
inc
jmp
les
rcrl
pop
loope
add
test
incb
jns
int3
shlb
cmp
ss
xchg
inc
je
leave
enter
out
stos
fsubl
fimull
mov
sahf
dec
adc
mov
movsl
jns
dec
jmp
popa
subb
xchg
cmp
rolb
fisubrs
rorl
fwait
outsb
fisubrs
push
in
sub
cmpsb
mov
jae
mov
scas
cld
push
jmp
mov
test
lret
mov
pop
into
push
lock
aas
test
divb
pop
popa
pop
pushw
and
loopne
cmp
mov
cmp
pop
cmp
jl
xchg
aam
inc
in
xchg
sub
gs
sbb
pop
ficompl
sahf
mov
int3
dec
popf
sbb
mov
ja
or
xchg
or
clc
or
test
mov
stos
aaa
in
fildll
pop
xchg
fwait
or
push
sub
loop
test
dec
shlb
push
cwtl
ss
scas
bound
das
push
nop
das
icebp
ja
int3
lods
mov
xchg
push
inc
sbb
sub
imul
fcom
mov
inc
stos
mov
xor
mov
lret
flds
mov
repnz
lret
ret
call
scas
sti
in
sbb
and
iret
mov
xchg
in
imul
and
mov
mov
aas
fisttps
sub
mov
jno
nop
scas
cs
xchg
outsb
insb
and
testl
daa
sub
mov
jp
mov
ret
nop
xchg
dec
stos
cwtl
inc
outsl
sbb
popw
ss
lret
imul
loopne
icebp
imul
rcrb
roll
add
mov
cs
pop
jmp
pop
push
or
pop
and
pop
into
push
sti
loopne
imul
roll
cmc
push
dec
loop
inc
inc
sbb
or
mov
jo
test
inc
adc
sbb
ret
ja
andl
fnstcw
hlt
aam
push
outsl
in
es
mov
stc
in
and
fs
sbb
xchg
or
adc
movsb
addb
sahf
movsb
pop
xchg
add
out
fldt
call
cmp
inc
and
pop
ret
pop
xor
inc
and
and
xor
imul
mov
dec
add
faddl
adc
xchg
pusha
pop
xchg
push
popa
les
mov
insb
pop
cmp
push
xchg
sarb
loop
fnstsw
fistl
inc
xor
xor
lods
xor
dec
lahf
test
pop
std
repz
lret
mov
ret
fcmovbe
pop
pop
xchg
dec
pop
push
push
inc
pop
lock
jge
mov
out
sub
add
xor
imul
adc
jno
sub
arpl
clc
stos
mov
mov
sahf
jecxz
add
and
test
sbb
fwait
sbb
stos
pusha
popf
pop
push
jmp
idiv
std
mov
jmp
xor
mov
or
loop
adc
rol
popa
fidivs
in
mov
mov
adc
mov
adc
dec
xchg
ss
jmp
fistps
fildll
es
xlat
push
int
test
push
push
fwait
movq
cmp
fisubrl
and
lret
sub
scas
lret
cwtl
fistpl
pop
xchg
mov
ror
xor
outsb
add
push
inc
xorps
xchg
orl
and
and
movsl
and
jmp
inc
jle
test
ret
mov
les
push
push
dec
mov
inc
stos
jmp
test
cmp
or
sub
inc
or
rcll
cmp
out
fs
cmpsl
adc
fcompl
and
adc
or
cmp
push
pop
adcl
mov
adc
sbb
add
and
jge
mov
pop
popw
sbbb
jnp
cmp
push
imul
push
stc
mov
sub
das
xlat
lahf
mov
xchg
or
mov
popa
mov
or
lcall
push
cmpsl
mov
fwait
js
and
test
dec
das
add
fcoms
add
outsl
push
push
jge
outsb
mov
push
mov
lret
lret
push
cmp
or
or
in
inc
lods
mov
xor
fimull
aad
daa
add
jl
imulb
or
sub
inc
subb
xlat
punpckhbw
enter
adcl
dec
movsb
fcoml
out
ljmp
fisubrs
push
rcll
or
sub
fisttpll
clc
cli
jge
inc
les
mov
hlt
popf
jg
stos
sbb
dec
nop
adc
mov
gs
lret
into
daa
mov
xchg
outsb
in
cmp
pop
or
pop
inc
mov
dec
scas
cmp
ficoml
repnz
pop
test
movzbl
ror
int3
sbb
lret
xchg
mov
dec
lret
add
shlb
xchg
cmpsb
cli
nop
ljmp
cs
mov
push
fsubrl
and
xor
pop
scas
std
fs
fisttpll
mov
or
mov
iret
push
jmp
int3
lds
inc
je
sti
imul
movsl
popl
xchg
rcr
cmp
mov
dec
pop
add
dec
imul
mov
and
aad
lret
cld
jnp
push
cmp
fnstcw
mov
addr16
lcall
call
adc
and
mov
xchg
sbb
jecxz
sarl
mov
cwtl
lret
std
push
rorl
insl
nop
fs
fucompp
xchg
xchg
push
fnstcw
test
notl
sbb
or
cmp
xor
cmp
jb
mov
popf
out
fstps
lret
movb
repnz
jecxz
iret
or
test
je
mov
add
sub
dec
pusha
pop
iret
lods
push
mov
jmp
sub
leave
in
mov
and
and
sbb
inc
add
jo,pt
adc
loop
clc
ret
insl
pop
lret
cmp
pop
pusha
aaa
pusha
pop
lods
adcb
rolb
pop
into
fwait
out
in
repz
add
sbb
shrb
push
push
fmull
push
out
pop
mov
xor
imulb
mov
outsb
inc
inc
cmp
loop
cltd
jo
loop
push
sub
repnz
xorb
ljmp
fwait
push
push
sbb
push
cmpsb
mov
mov
out
test
and
sub
loopne
mov
mov
sub
inc
pop
sbb
sbb
dec
out
lcall
les
popa
ret
push
sub
mov
or
and
fisttpll
cmc
or
xchg
scas
ret
pop
outsl
jmp
lock
notb
shrl
mov
call
pop
cwtl
stos
xchg
xor
jbe
cs
ret
sti
sbb
iret
clc
mov
mov
test
adc
jecxz
xor
scas
movsl
xchg
add
mov
push
xchg
cld
in
inc
inc
outsl
push
mov
movsb
push
mull
push
or
jns
xchg
leave
or
cmpsl
popa
icebp
insb
lret
adc
or
imul
push
or
pop
mov
sub
pop
bound
jo
lods
pusha
mov
outsl
insl
push
or
insb
dec
jne
lahf
add
ret
jmp
lahf
addl
mov
aam
outsb
push
pop
fisubl
pop
fwait
sub
imul
mov
or
mov
add
popf
adc
or
dec
out
or
mov
sub
in
shlb
dec
sbb
sarb
shll
out
je
lea
xlat
mov
pop
shlb
iretw
rorb
ja
test
inc
faddl
into
inc
inc
clc
rorl
push
sbb
ljmp
sub
test
dec
pop
or
jge
arpl
dec
int
cltd
pop
and
add
push
jno
imul
add
jle
fiaddl
aam
mov
adc
and
dec
mov
and
bound
pop
pop
nop
bnd
push
dec
mov
rcrl
add
add
shrl
jb
iret
inc
enter
mov
repz
pop
bound
xorb
jnp
dec
popf
dec
or
and
xchg
and
mov
enter
in
outsl
mov
pushf
hlt
mov
xor
cmp
or
sbb
pop
push
lret
lods
addb
jl
mov
adc
dec
push
into
add
and
ss
mov
sti
dec
andb
cmp
xor
add
fnstenv
stc
nop
mov
inc
inc
xchg
or
loope
hlt
rcrl
dec
movzbl
js
mov
scas
lret
sub
sbb
testl
cmpsl
pop
sub
iret
test
push
stos
call
pop
pop
mov
inc
and
mov
sbb
mov
addr16
push
aas
lcall
sub
pop
sub
or
daa
lret
xlat
insl
out
es
mov
test
mov
xchg
mov
fdivr
adc
lock
je
sbb
icebp
in
icebp
xlat
mov
add
push
mov
xlat
pop
insb
sbb
push
stos
pop
lret
popf
and
xor
push
xorb
xchg
dec
jo
cmpsl
jnp
jns
pop
push
pop
inc
sub
divl
mov
stos
sub
pop
xor
div
testb
and
or
js
pushf
sahf
ror
pop
hlt
fldenv
push
daa
mov
lcall
pop
sub
push
test
pop
neg
pop
lock
rolb
sbb
decb
test
jo
and
fmuls
je
push
scas
or
dec
lods
mov
mov
nop
shl
push
mov
cmp
add
mov
fstpt
fstps
mov
xor
sbb
adc
sub
inc
push
jo
sbb
hlt
out
fwait
or
or
sti
inc
pop
cli
sahf
pop
hlt
mov
push
scas
sub
push
pushl
adc
jg
div
push
test
enter
adc
arpl
adc
sub
cltd
cmc
mov
sbb
sub
cmpsl
mov
addl
xchg
xor
dec
mov
pop
aam
mov
stos
or
and
mov
jae
es
fisttpl
cmp
fldcw
pop
jb
adc
mov
test
mov
cmp
test
addr16
movsb
mov
scas
in
or
sub
movsb
cwtl
es
mov
in
sahf
out
cmp
cld
or
fidivrs
or
sub
mov
dec
mov
xlat
add
hlt
lock
sbb
movsb
cmp
out
stos
mov
push
int
jmp
sub
sbb
mov
test
mov
pop
add
dec
pushf
iret
test
jbe
push
test
lods
loopne
mov
outsb
mov
lods
les
push
aas
int
cwtl
outsb
pop
aas
ret
mov
adc
stos
inc
inc
loop
idiv
xor
pop
adc
les
inc
aam
pop
pop
push
push
push
push
jl
xlat
jge
call
loope
sub
pop
xchg
adc
sub
jg
ja
movl
cmpsl
jl
in
dec
adc
mov
adc
jl
pop
jne
scas
pop
sti
testb
cld
pop
imul
jbe
and
mul
push
sbb
dec
sub
cwtl
imul
add
and
inc
out
jb
ja
adc
enter
xchg
add
push
xor
pop
inc
inc
dec
test
pop
push
xchg
lock
outsl
mov
loopne
fs
add
mov
mov
sub
push
and
pushf
fcoml
pop
inc
in
fistl
add
push
fcomip
aaa
std
jnp
pop
in
pop
fnsetpm(287
adc
push
mull
das
lods
add
pop
sbb
pop
cmp
add
leave
lds
adc
ja
aas
push
sub
add
test
pop
aad
aam
jbe
je
push
in
and
sbb
push
std
dec
jecxz
cmp
dec
ljmp
pop
sub
shll
jecxz
push
jno
lahf
adc
mov
cli
test
negl
mov
push
gs
xor
pop
test
shll
int
call
repz
pusha
test
lods
mov
xchg
mov
pushf
scas
push
andb
inc
and
aam
xchg
mov
lods
imul
adc
mov
ljmp
lcall
xrelease
cltd
call
aaa
int
fs
sahf
and
or
fisttpll
or
push
lret
xchg
rcrb
jnp
cmc
ss
repz
sahf
cmp
je
imul
xor
pop
popf
jb
fdivl
or
xor
push
jmp
pop
aaa
or
scas
pusha
out
fbld
cltd
sbb
mov
sbb
sbbb
add
push
mov
mov
mov
xchg
outsl
fimull
xor
jmp
mov
shll
test
mov
pop
sub
dec
mov
and
xor
jae
jmp
lods
pop
inc
mov
lret
imul
enter
mov
cmc
cmpl
negb
cmp
mov
mov
fcoml
int3
aaa
dec
push
inc
dec
jns
scas
lds
jp
xchg
add
dec
push
xor
dec
pop
lret
adc
flds
bound
mov
iret
loopne
add
push
sahf
jmp
mov
xchg
shr
cli
mov
sub
lock
je
jbe
xor
dec
in
insb
lods
rorl
and
push
ror
addr16
fwait
mov
push
mov
mov
jp
push
mov
xor
loope
rolb
xchg
inc
or
cltd
or
ja
mov
lret
xor
lahf
call
push
mov
lods
pop
lret
xchg
pop
xor
aad
scas
mov
sub
inc
int3
nop
out
dec
adc
test
mov
stos
in
mov
xor
pop
add
das
jecxz
xor
or
xor
push
stc
enter
sub
clc
notb
xor
mov
mov
adc
mov
jecxz
shll
lcall
jp
leave
jmp
bsr
push
enterw
loopne
lret
divb
xor
push
mov
rep
or
cld
ret
and
adc
push
or
xchg
stos
fcoml
daa
mov
das
jb
ss
push
shlb
jo
xchg
hlt
loope
mov
jge
addr16
ss
inc
mov
jmp
mov
iret
int
jge
aaa
jo
push
jnp
sahf
mov
das
lea
cmc
and
push
dec
dec
cmp
insl
mov
mov
je
xor
dec
sbb
xchg
xchg
lods
lods
adc
ss
xchg
out
jb
gs
or
cld
jg
negb
les
xor
xor
push
inc
neg
adc
sti
xor
sbb
hlt
xchg
pop
cs
test
push
dec
loopne
into
sbb
jb
lods
fsubrs
jne
and
mov
psrld
sub
cmpsb
jae
sti
cmpsl
cs
pop
mov
jne
icebp
dec
jns
push
fwait
push
mov
inc
sbb
or
lock
decb
popfw
mov
and
lods
cmp
inc
lods
in
sub
sub
repnz
inc
cmp
lods
test
pop
mov
and
cmpsl
gs
push
icebp
add
cmp
jb
xchg
mov
jmp
xchg
sti
addb
inc
adc
jle
imul
int
jl
pop
loop
sub
jne
mov
mov
dec
sub
pop
in
scas
pop
fstp
jp
outsb
mov
pop
cmc
in
push
pop
mov
add
push
lds
xorl
add
cs
mov
popw
into
int
mov
incb
shrl
in
loope
xlat
pop
xor
jno
movsl
xchg
loop
int3
pop
sbb
cmp
cmp
mov
pop
fs
das
test
mov
sbb
addr16
loopne
push
cmp
sbb
inc
jno
pusha
out
pop
aad
mov
xor
stos
xor
fwait
sahf
xor
js
push
scas
mov
dec
mov
inc
xchg
push
cmc
lret
aas
mov
pop
jge
pop
mov
mov
ds
pushf
mov
mov
outsb
jo
cmp
dec
outsb
leave
jae
jnp
fidivrl
testl
mov
adc
js
lods
jge
or
xor
inc
cwtl
cmc
sbb
insb
and
xlat
adc
jecxz
mov
movsb
mov
add
xchg
aas
xor
in
cmp
pop
or
fldl
loopne
mov
movsb
pop
xchg
lret
pop
movsb
pop
xor
and
pop
dec
test
scas
and
xchg
cmp
aas
cmpsb
mov
into
inc
push
or
pusha
rclb
adc
ljmp
stc
cmpsb
nop
pop
lock
ljmp
push
xlat
jnp
dec
lock
or
sbb
ja
aam
mov
push
in
xchg
mov
dec
adc
pop
mov
xor
ret
arpl
cmp
cwtl
repz
xor
notl
sub
aaa
push
cltd
imul
xorb
je
movsb
cmp
pop
sub
test
fs
sub
jg
xchg
das
mov
cld
es
arpl
or
cmpsb
lcall
and
add
xchg
mov
std
imul
xor
fdivrl
aam
pop
cmp
pop
das
jno
push
mov
push
inc
fnstenv
push
mov
fs
ret
sti
filds
pop
push
inc
out
inc
imul
ljmp
mov
or
fistps
inc
push
test
ret
adc
sbb
lahf
sub
scas
mov
cmp
mov
in
fimuls
mov
or
test
xchg
loop
fsubrs
jbe
leave
ja
shlb
das
mov
inc
xor
push
or
mov
std
rcrb
leave
push
lret
mov
call
xlat
lods
dec
add
aad
mov
mov
jbe
iret
inc
sub
insb
rclb
pop
aam
cmp
test
out
fdivl
mov
cmp
add
sub
cmpsb
inc
in
lods
pusha
xchg
mov
loopne
push
lea
sub
insb
int3
in
arpl
pop
mov
into
out
pop
adc
decl
and
test
add
push
aas
pop
lods
xchg
or
xchg
shll
neg
stos
jns
jg,pt
or
cmp
jl
inc
les
out
sub
adc
hlt
iret
popa
cmpb
imul
mov
adc
shrl
hlt
cwtl
xchg
mov
sub
icebp
mov
mov
clc
inc
xor
js
mov
xchg
mov
pop
rcr
push
pop
xor
cmpsb
inc
xchg
pop
push
push
cwtl
ja
stos
pop
jmp
cmp
xor
and
imul
nop
mov
sub
stc
fwait
add
inc
insb
je
fiadds
lock
loope
push
jno
sbb
cltd
lods
push
xchg
mov
in
inc
bound
arpl
insl
pop
inc
add
push
mov
mov
mov
int
jne
sub
or
adc
adc
fcompl
inc
xor
push
sbb
adc
adc
xor
test
jbe
hlt
loope
scas
repnz
sbb
pop
rorb
pop
or
rcrb
into
shrb
pop
xchg
lods
mov
xor
push
and
outsb
pop
or
popf
out
push
sub
pop
jl
push
dec
or
outsb
jl
jecxz
test
mov
loope
imul
add
xorb
xchg
or
push
inc
xor
cmp
dec
push
push
xor
add
out
fldl
movd
mov
inc
push
dec
call
cmpsl
fwait
mov
xor
testl
adc
pop
xchg
imul
rcrl
sbb
aam
push
sbb
sub
std
sbb
mov
popf
addr16
stc
xchg
hlt
dec
add
mov
xor
mov
mov
ljmp
call
pop
dec
push
dec
push
mov
mov
mov
push
in
cmp
lds
jl
insl
cmp
bound
aas
mov
out
daa
mov
cmp
xchg
lods
inc
sub
sub
push
lcall
xor
mov
js
or
cmp
ret
fistpll
sbb
bswap
inc
mov
mov
or
adcl
out
jge
and
mov
xchg
shl
pop
cmp
xlat
dec
cmp
and
sti
pop
pop
add
movsl
adc
jbe,pn
out
aam
test
sub
xabort
out
pop
in
add
add
fwait
cmp
adc
ficoms
and
sbb
mov
pusha
leave
cmc
outsl
stc
pop
xlat
xchg
jno
cmpsb
cmpl
cmp
mov
pusha
mov
and
stos
popf
add
lea
nop
out
stos
in
loopne
mov
sbb
xchg
movl
pop
add
cmp
out
xor
stc
sbb
xchg
pushf
xor
push
jmp
daa
rolb
dec
cmp
jp
pop
hlt
lahf
sahf
mov
or
mov
hlt
or
inc
in
sti
mov
daa
jmp
hlt
push
push
mov
sbb
mov
cli
rcrb
push
enter
out
jmp
sub
and
test
jecxz
gs
in
test
jns,pn
movsl
fwait
mov
in
dec
push
adc
mov
inc
jl
mov
movsl
add
xchg
faddl
test
mov
jno
pusha
out
cmpsl
lcall
mov
xor
and
test
loop
push
mov
pop
jp
mov
dec
loope
dec
fwait
push
cmp
push
sbb
xor
dec
mov
hlt
addr16
jecxz
jno
clc
icebp
dec
xchg
push
adc
stos
stos
adc
push
bound
jge
out
xchg
or
iret
xchg
or
imul
fucomi
popf
js
sub
pushl
leave
sbb
inc
call
cmp
cwtl
ja
push
push
pop
divb
ja
movsl
mov
sbb
push
mov
cltd
scas
lods
push
fs
test
jns
mov
loop
loop
push
xor
insl
imulb
adc
push
push
movsl
hlt
fstpt
jl
mov
dec
cmp
dec
cmp
mov
adcb
daa
push
jp
jno
sbb
mov
jae
clc
and
xor
cmp
mov
mov
xchg
pop
out
dec
int3
insb
mov
push
cmp
jecxz
in
fcmove
jl
cmp
pop
push
sub
mov
pop
xchg
repz
sub
mov
mov
rcrb
fwait
loopne
xor
push
mov
rol
add
cli
std
movsl
popf
jno
stos
jecxz
jo
in
sbb
cmp
adcl
mov
or
cld
cmp
mov
mov
lea
fwait
movsl
cmp
aaa
add
add
subl
outsb
adc
adc
imul
testl
les
leave
mov
xchg
jns
mov
pop
dec
cld
push
cmc
aad
lods
xchg
mov
out
test
mov
sahf
dec
mov
push
rclb
sub
or
das
pop
fsubrl
dec
cmp
outsb
jecxz
insl
push
pop
cmp
outsb
mov
cltd
incb
mov
pushf
pop
jno
push
jne
rclb
adc
add
and
add
stos
jo
test
mov
addr16
pop
push
enter
jp
jbe
jno
mov
test
pop
sbb
mov
jle
les
mov
incl
dec
cmp
negl
sahf
bound
jae
in
insl
outsb
and
lahf
mov
push
jge
divw
xchg
add
das
jge
lcall
lods
ret
mov
scas
cmp
cmp
cli
loope
ret
lahf
inc
sbb
jnp
in
imul
ret
pop
lods
cli
sub
cld
arpl
in
mov
mov
cmpsl
lea
jl
pusha
cmp
and
out
add
or
repnz
mov
push
fadds
fwait
sbb
inc
sbb
sahf
movsb
and
push
xorl
pop
cmpsl
push
xchg
push
pop
mov
clc
icebp
imul
jmp
cmp
out
fdivrl
loop
cmc
mov
in
dec
pop
ss
lds
in
add
push
jp
pop
cmpb
xor
or
nop
adc
or
jae
lods
icebp
pop
jl
inc
push
add
xchg
ret
mov
lret
insl
push
add
jle
sbb
or
add
adc
test
adc
das
test
mov
adc
mov
sub
fistpll
addl
out
std
out
fstl
fcoml
adc
lods
adc
mov
cwtl
mov
mov
and
cmp
sub
push
xchg
mov
push
push
in
adc
into
outsb
leave
jle
cmc
cmp
not
pop
sub
ret
clc
cwtl
adc
add
jnp
in
xchg
mov
add
cmp
inc
push
mov
aas
fisttpl
std
sub
adc
les
sahf
adc
stos
push
sahf
jg
pop
int
movb
out
popf
mov
aad
loop
jl
subl
and
test
fildll
lahf
popa
in
into
scas
movsl
arpl
test
pop
psllw
jl
divb
mov
mov
sbb
push
outsb
mov
aam
fstpt
xchg
test
adc
dec
adc
leave
push
inc
jmp
ret
adc
out
mov
inc
add
scas
jae
xlat
sub
mov
mov
jns
int3
mov
dec
ret
jecxz
xchg
push
loope
pop
popf
hlt
sahf
fcoms
jo
push
icebp
mov
mov
jmp
cmc
xchg
dec
sbb
dec
dec
in
jecxz
add
aad
lahf
mov
inc
jge
int3
fs
int
lret
hlt
dec
in
cmp
xchg
sbb
sarb
push
sarl
and
stc
lods
lret
fcomps
and
xor
lret
loope
insl
mov
mov
shrl
cld
dec
js
das
pop
jns
cmp
lds
shrb
fiaddl
nop
sbb
pop
fsts
mov
pop
adc
or
shlb
xchg
sbb
lods
xor
pusha
sbb
out
std
adc
pusha
loop
ss
cmp
xor
mov
fwait
cmp
dec
lods
cli
inc
popa
xchg
in
bound
cld
int3
adc
lcall
je
mov
pop
in
stos
test
popa
imul
jne
fisubrl
or
bnd
push
pop
loope
clc
cmp
cwtl
sub
cwtl
push
adc
mov
cmpsl
jns
js
xor
fisttps
nop
push
mov
or
int
xchg
xor
int3
mov
xlat
pop
adc
ljmp
rol
aad
xchg
negb
icebp
pop
dec
or
mov
lret
sar
ss
dec
xchg
jae
sarb
mov
pop
mov
cwtl
pop
lahf
mov
int
jle
sti
inc
fucomip
in
loopne
mov
pop
cmp
fisubl
jl
es
or
mov
jo
cmpsb
insl
fs
loopne
fildl
mov
gs
xor
adc
les
nop
mov
xor
cltd
dec
mov
enter
cmp
cli
mov
cmp
mov
aam
lahf
mov
js
stos
jecxz
jecxz
ljmp
scas
mov
add
jno
mov
fcomp
out
push
stos
int
mov
push
mov
or
dec
adc
mov
hlt
jl
jl
or
ret
inc
les
xchg
cmp
fsubs
mov
xchg
inc
sub
ljmp
loope
fstps
jmp
dec
xchg
lock
clc
push
fcompl
nop
mov
mov
push
insl
pushf
sbb
push
inc
dec
add
clc
xchg
es
push
xchg
mov
xor
iret
and
cmc
test
sub
xor
sub
loopne
mov
std
gs
mov
jns
cmpb
push
rcrl
test
xor
rcr
jns
out
sub
frstor
loopne
pushf
mov
sbb
mov
gs
es
in
incb
dec
scas
pop
xor
inc
jno
or
cmp
std
loope
test
lods
mov
inc
mov
dec
outsl
fildl
pop
sar
scas
lahf
xchg
push
jmp
push
push
js
imul
ja
fnstcw
mov
aam
and
xor
push
out
lock
or
xlat
lds
insl
jbe
lock
push
mov
int3
sub
incl
lock
imul
data16
dec
jnp
aas
leave
xor
repz
outsb
push
or
mov
mov
movsl
cmp
scas
adc
test
inc
lcall
mov
cmp
mov
lahf
push
sub
push
cmp
decl
sbb
sbb
jle
add
paddw
mov
push
sbb
addr16
push
insl
inc
mov
jp
lcall
add
arpl
imul
pop
mov
cmpl
mov
jbe
cmc
iret
push
sub
and
xchg
ret
jnp
push
lds
sbb
into
scas
xchg
or
sbb
popf
mov
loope
inc
ja
sbb
in
xchg
scas
lcall
dec
xor
cli
add
ja
out
lods
cmc
or
shrb
add
dec
lret
pop
xor
mov
xchg
xchg
jns
nop
mov
cmp
mov
push
fcoml
call
sub
idivl
cs
xor
in
inc
jmp
pop
push
jge
sub
xlat
dec
lock
mov
je
pop
jecxz
in
mov
fs
test
xchg
ret
ljmp
test
mov
add
xor
cli
mov
xor
icebp
add
ret
je
mov
cli
cmp
jnp
mov
sub
cmp
jp
cli
data16
ret
xchg
adcb
in
out
push
xorl
test
fs
or
fcmovnbe
lock
or
jo
pop
je
addr16
test
test
mov
push
fmuls
pop
in
scas
jns
add
jb
pop
or
xor
sbb
xchg
gs
adc
fadd
loop
push
add
jge
daa
mov
pop
pop
mov
push
jle
dec
movsb
xchg
jnp
or
cmp
cmc
adc
inc
bound
bound
add
test
addr16
stos
scas
psubusb
push
mov
xchg
fstps
mov
mov
rorb
jo
pop
es
aaa
mov
dec
sbb
push
bound
fs
sbb
or
inc
les
sbb
loope
mov
int3
dec
in
xchg
cmpsl
add
jns
bound
push
mov
pop
lret
cmp
inc
xor
jge
mov
xlat
insb
or
and
jmp
cmovb
push
mov
mov
and
jg
push
jne
shrl
jb
sbb
cmc
sub
je
aas
rorl
mov
enter
adc
repnz
lret
or
daa
insl
or
add
aam
sbb
mov
divb
cltd
xor
push
mov
aas
jns
sbb
sbb
xchg
cmpsl
pushf
pop
cld
inc
int
mov
dec
adc
push
rcl
loope
mov
mov
pop
orl
cmp
loop
out
xor
jl
in
add
fcoml
mov
pop
sub
sti
clc
sbb
push
lods
xchg
and
and
jnp
lret
mov
cmpsb
xchg
shlb
sub
mov
xor
sub
dec
movsb
fwait
dec
pop
cmp
xor
xor
and
xchg
arpl
in
outsb
jl
ds
push
ss
into
add
out
push
adcb
jle
cmpsl
enter
enter
mov
and
xchg
mov
les
add
lods
hlt
add
loop
add
push
andl
loope
cs
je
fucomip
outsl
mov
adc
cs
cli
aas
jns
ficomps
jb
mov
mov
mov
stc
fdivp
gs
push
inc
xchg
sub
rorb
in
es
rcrl
add
dec
sbb
rorl
inc
movsl
hlt
push
jl
pop
clc
mov
jne
xchg
mov
in
cltd
sbb
movsb
cmp
repnz
aas
push
imul
movsb
nop
pop
int
stos
rcl
dec
arpl
leave
je
aas
push
mov
das
sub
xchg
imul
out
jo
sbbb
imull
loopne
push
dec
pushf
repnz
popf
hlt
and
clc
mov
cmp
mov
addb
xor
cmp
stos
out
jae
mov
clc
xchg
pop
sub
je
lret
sahf
test
xchg
bound
std
js
mov
sbb
in
xchg
cmp
jp
jmp
nop
aas
lock
adc
pop
sub
jp
inc
pop
jnp
orl
fnsave
decb
xor
nop
jno
pop
fists
int3
enter
sbb
cmp
push
dec
or
sub
popf
add
sarb
pop
cld
push
push
popf
cld
add
xor
inc
pop
movsl
scas
rorl
std
test
xchg
movsb
ficomps
push
aam
jmp
push
push
sahf
push
sarb
push
lea
mov
shrl
cmp
je
jge
fidivrs
adc
aad
jb
push
movsl
popa
js
arpl
std
push
call
or
jno
das
test
fmuls
and
je
cmpsb
rol
pop
sahf
nop
in
jo
xchg
or
std
sti
adc
pop
ja
lds
mov
push
pop
or
and
rclb
or
pop
jo
mov
int3
sti
xchg
mov
dec
jbe
or
jno
es
clc
es
mov
xchg
jne
fwait
cmc
fidivl
wbinvd
sub
cmpsb
xor
cmp
fdivs
movl
cmp
push
add
clc
add
sub
pusha
dec
out
mov
cs
inc
push
push
pusha
pop
or
aad
aaa
push
lahf
inc
xorb
push
jl
cli
out
mov
sub
dec
push
mov
mov
mov
mov
mov
cmp
add
mov
adc
lods
pop
adc
out
mov
add
mov
dec
ret
out
pop
js
cltd
scas
rcll
adc
mov
xor
clc
lcall
push
inc
jne
mov
sub
dec
mov
and
mov
xchg
xchg
and
mov
dec
lea
xchg
adc
loop
sub
cltd
ss
xchg
adc
call
jmp
cli
mov
movsb
lcall
loope
divl
pop
mov
push
push
push
push
adc
jp
mov
mov
jbe
inc
dec
inc
jnp
ljmp
push
ss
rorb
or
cmp
push
mov
push
xchg
pop
daa
xchg
inc
shlb
icebp
jmp
jbe
mov
push
adc
add
cmpb
jg
adc
mov
cmp
call
xor
cmp
shlb
adc
mov
sbb
loope
jecxz
pop
das
jmp
fcomp
outsb
test
inc
or
inc
lds
xchg
fs
cmc
jne
mov
sub
fnstcw
pop
or
mov
popf
inc
addr16
leave
negl
movsb
jl
insl
sub
ljmp
jne
scas
ret
adc
sarb
and
push
loopne
or
test
and
in
sbb
inc
into
xchg
icebp
jp
pop
push
xor
cmc
sub
lret
jns
leavew
cmp
inc
mov
inc
repz
xor
xchg
add
and
cmp
adc
lret
cld
lret
outsl
aaa
movsl
mov
scas
inc
fisttps
jnp
mov
lret
and
lret
or
push
push
jmp
in
gs
mov
add
hlt
add
nop
dec
mov
push
mov
dec
ret
xchg
lods
pop
popf
fldenv
adc
leave
fwait
or
xchg
ret
stos
mov
adc
dec
mov
fwait
mov
mov
mov
push
xchg
inc
xchg
call
cwtl
or
iret
mov
je
cmp
jge
push
hlt
cmp
add
pop
out
nop
lods
dec
pop
xor
add
lods
xchg
notb
inc
test
mov
xor
lret
mov
negb
iret
pop
push
into
sbb
push
inc
pop
push
insl
fsts
dec
xor
mov
negl
aad
pmullw
and
in
sbb
mov
mov
jg
sub
push
mov
dec
ja
and
les
cmp
negb
aam
mov
mov
cmp
jp
jle
es
out
sub
test
cltd
pop
sbb
pop
das
or
mov
xchg
mov
rcrb
mov
out
jne
mov
jo
add
pop
bound
out
daa
bound
jle
scas
cmp
ret
fmull
stos
imul
add
mov
xor
mov
and
adc
or
scas
pop
pop
mov
adc
outsb
stos
in
popa
data16
ret
lock
hlt
mov
test
jbe
inc
dec
lock
ret
and
lds
jl
sub
outsl
pusha
pop
inc
aaa
add
mov
adc
mov
inc
orw
int
jl
xor
mov
fwait
iret
and
arpl
pop
mov
xlat
orb
bound
cld
inc
ret
mov
jg
sub
jmp
add
xor
adc
das
rcr
adc
repz
hlt
mov
sbb
push
test
rclb
mov
mov
sbb
mov
pop
gs
pop
pop
push
ljmp
mov
and
inc
js
mov
xchg
sti
inc
mov
scas
stos
sub
jo
pop
shll
xchg
xchg
test
fwait
dec
pop
imul
mov
sbbl
mov
jg
ljmp
pop
repz
jmp
ljmp
sarb
adc
aad
mov
and
aaa
out
xor
lods
ret
pop
mov
out
push
mov
outsb
xchg
jno
cmp
add
sbb
jmp
das
dec
lods
mov
push
adc
dec
fcomps
int3
adc
testb
dec
imul
inc
iret
jae
push
out
dec
xor
popf
sahf
testb
insb
dec
bound
es
ret
std
out
cmpsb
enter
add
sarb
ror
sbb
mov
jns
es
dec
ficoms
xor
xchg
loopne
sbb
mov
push
cli
shl
adc
push
mov
js
xor
push
pusha
jge
lcall
scas
lods
fsubs
mov
mov
fcmovnu
xchg
int
pop
aam
adc
xchg
mov
lea
sbb
daa
lret
fisttpl
xchg
dec
outsl
call
add
out
imul
fadds
or
inc
mov
xor
icebp
dec
pop
insl
push
sub
std
addr16
sarb
mov
xchg
inc
repz
xchg
imul
std
mov
cld
push
mov
push
fisubs
test
aam
push
mov
jae
test
les
mov
xor
clc
insl
mov
pusha
sub
pop
insb
jns
cmpsb
mov
sahf
push
fiadds
add
bnd
jmp
ds
repnz
pcmpeqw
mov
sahf
push
xor
repnz
repnz
pop
inc
aaa
loopne
scas
nop
cli
push
cmpsl
mov
inc
mov
into
and
ja
or
repnz
adc
stos
outsb
ficoml
fstl
leave
nop
mov
mov
adc
shr
popl
loope
scas
pop
lea
pop
outsl
pop
orb
repnz
out
iret
clc
shl
dec
jp
sub
add
mov
or
cwtl
cmp
pcmpgtb
sbbb
pop
sbb
mov
fisubrl
mov
scas
sub
inc
scas
inc
cmp
pusha
popa
mov
add
cmp
mov
mov
or
pop
dec
inc
inc
loopne
or
adc
xchg
mov
mov
adc
cli
add
cs
xchg
lods
xor
cmp
fbld
addr16
sbb
jnp
and
jbe
jmp
jnp
jge
insl
rcll
mov
add
es
push
fcompl
loop
mov
ja
mov
push
aad
cwtl
cmpsb
call
jle
sub
jmp
and
inc
jnp
cmpsl
cmpl
sbb
shlb
inc
push
ljmp
or
xchg
test
or
mov
out
repz
xor
mov
cmp
lahf
fsubl
addr16
rclb
aad
jl
out
mov
and
out
fwait
add
cmp
cmp
adc
jno
and
out
add
test
push
sbbl
add
xchg
cmp
fmuls
pop
sub
sub
pop
inc
adcl
adc
pop
sarb
mov
dec
ds
xor
jae
lods
dec
jo
push
mov
xchg
pop
movsb
outsb
stos
stos
jae
out
cmpsb
jb
enter
or
mov
mov
pop
cs
or
inc
mov
pop
push
xchg
call
rolb
enter
clc
das
dec
mov
pop
nop
or
ret
mov
sbb
push
mov
adc
pop
adc
mov
jne
xchg
fdiv
cli
test
mov
ror
and
jp
add
add
pop
mov
mov
rcrl
scas
add
sbb
mov
pop
push
dec
dec
mov
int3
sub
repnz
xor
lahf
cmp
and
lcall
movsl
cmc
mov
fdivrs
pop
and
jge
test
je
mov
mov
mov
test
sub
cwtl
sub
es
rep
sub
outsb
cli
fisubs
clc
lods
xor
enter
insb
clc
lock
ret
mov
and
lea
repz
loop
clc
and
mov
cmpsl
int
imul
mov
mov
std
test
leave
jns
lods
popf
add
movsl
cs
sub
insl
movsb
icebp
xor
and
dec
repz
jae
adc
subl
es
push
jbe
inc
cli
subl
sub
clc
or
shll
imul
pusha
fcmovnu
or
cmpsb
jnp,pt
xchg
addr16
ds
cmpsl
sbb
dec
mov
lods
outsb
xor
ljmp
sahf
dec
jmp
mov
inc
call
jecxz
pop
push
repz
aas
in
mov
jg
xchg
cltd
xor
sub
mov
jns
dec
xchg
and
cld
push
xchg
mov
pop
movsl
testb
ss
and
jb
dec
pop
adc
xorl
fsincos
inc
ret
pop
add
sbb
jge
cmp
mov
pop
mov
add
repz
mov
repnz
xchg
dec
dec
xor
sub
sub
xchg
mov
xlat
cmpsb
mov
subl
dec
xor
lock
pop
clc
adc
test
test
push
push
push
sub
push
or
in
sti
fwait
push
lods
xchg
jl
cmp
aam
cmpsb
mov
sbb
mov
mov
popf
scas
pop
int3
mov
movsl
and
mov
adc
pop
ja
push
push
iret
ss
push
ud2
pop
xchg
mov
push
xlat
push
into
dec
fldl
push
sbb
ljmp
lret
cmp
ljmp
xor
mov
dec
mov
iret
int3
adc
lcall
xor
adc
gs
neg
stos
mov
pop
pop
mov
cmpsl
mov
push
mov
adc
call
push
mov
adc
aam
icebp
fwait
sub
adcb
movsb
mov
cmpsl
je
xchg
adc
cld
pop
xor
mov
sub
add
stos
xlat
xchg
mov
ja
adc
insb
fisttpl
lods
test
rcll
in
fwait
xchg
push
adc
sti
ss
cmpsb
push
cmpsb
dec
je
push
dec
lods
push
jae
cmp
arpl
rorl
sarl
sbb
adc
outsl
inc
or
push
in
pop
dec
add
xor
imul
push
rcrl
xlat
or
xchg
nop
imul
or
xor
mov
pop
mov
jecxz
dec
adc
insl
icebp
cwtl
sti
dec
sbb
push
mov
or
mov
jg
xor
ret
pop
popa
adc
daa
out
int3
dec
testb
insl
push
pusha
push
push
xchg
pushf
vmovd
and
lods
pop
sub
push
fcmovnb
lcall
sub
movsl
bound
out
pop
pushf
inc
insl
andb
out
mov
rclb
mov
xchg
xchg
les
sbbl
cmp
loop
jbe
sub
mov
sbb
loopne
push
ret
pop
cmpsb
mov
mov
pop
and
sub
fisubs
sub
ret
repnz
test
mov
test
dec
push
insl
call
inc
dec
lock
mov
add
push
lods
das
or
les
push
cs
pop
pop
push
mov
insl
shll
pop
mov
adcl
sbb
ret
cmpsb
add
sub
fiadds
test
fiadds
jo
inc
imul
fwait
fwait
jp
jle
and
insb
cmp
sbb
imul
subb
fisttps
sub
fisubl
pop
shll
mov
testl
or
int3
mov
xorb
push
into
ret
addl
fildll
mov
jno
jbe
cwtl
cmp
pop
mov
sbb
in
lea
les
cmp
call
into
xor
adc
fildll
loope
mov
imul
xor
fwait
pop
shl
pop
sbb
xchg
mov
push
inc
pop
mov
cmp
xor
xchg
adc
cs
add
adc
int
xor
inc
aam
inc
jns
pushf
jge
les
popa
outsb
scas
mov
stc
xchg
lcall
inc
jb
daa
jnp
sbb
jp
sbb
push
mov
cltd
sub
pop
or
dec
jp
cmp
dec
out
in
aam
sub
mov
or
pusha
out
or
cmp
mov
lcall
inc
fs
cltd
arpl
insb
lods
jg
mov
test
xor
aaa
lock
stc
and
sub
xchg
or
jb
inc
sub
scas
out
push
adc
push
inc
xorb
push
xor
das
mov
or
mov
ds
hlt
ja
push
inc
mov
sub
repz
int
and
in
divb
sub
repnz
dec
or
inc
push
lret
popf
pop
in
mov
ds
aad
subl
std
sub
push
jno
ret
lret
ljmp
iret
add
out
lahf
pop
sub
add
push
or
sti
into
pop
jp
notb
sbb
popa
jno
aaa
imul
icebp
and
xor
ret
inc
daa
dec
aas
aam
fiaddl
outsb
or
sahf
dec
and
sbb
push
jns
leave
push
stc
int
stos
jge
jg
shlb
test
out
sbb
sbb
cmp
pop
pop
xchg
jge
out
ret
ret
jmp
ss
or
call
gs
hlt
mov
push
dec
xchg
cmp
mov
data16
or
sti
xchg
push
xchg
ret
in
shl
jecxz
orb
xor
stos
push
add
imul
or
hlt
stos
je
cmp
pop
scas
mov
dec
pop
xchg
mov
mov
out
shrb
or
xor
lock
movsl
test
insl
int
outsb
sbb
es
jp
mov
fildl
fcmovb
test
stos
push
sub
xchg
out
out
iret
in
xchg
sub
aaa
or
xchg
add
aas
repnz
mov
xchg
ret
push
das
mov
cmp
daa
subl
mov
pop
int
int
add
sbbb
mov
addr16
add
add
ja
sbbl
sub
dec
outsb
loop
xor
out
jno
push
int
pop
in
lret
mov
pop
push
clc
data16
cltd
jp
fidivl
pusha
push
push
mov
cmpsb
and
mov
sub
or
nop
ss
ds
movsl
jmp
stc
cmp
dec
repnz
addr16
stc
add
fistpll
test
add
jle
push
adc
mov
add
insb
sar
in
sub
sub
dec
xchg
sysret
add
xor
in
adc
dec
imul
imul
daa
mov
jl
pop
cmpsl
outsb
xchg
jecxz
adc
xor
fstl
inc
test
jmp
dec
pop
loopew
loop
insl
cltd
int3
adc
mov
cmp
jecxz
sti
jne
popa
stc
scas
sbb
stos
lds
mov
jno
push
and
push
add
mulb
nop
and
out
std
mov
adc
xor
jo
popa
jo
inc
sub
mov
jle
xchg
rclb
push
mov
mov
popf
push
or
nop
shl
add
sub
aam
push
jnp
outsl
jg
adc
jns
into
adc
mov
or
push
and
test
cmc
ret
add
aad
pop
lods
inc
xor
jns
xor
mov
subl
arpl
ficoms
ret
xchg
mov
mov
push
daa
or
add
popa
add
or
push
es
and
aad
inc
stc
pop
xor
call
lcall
mov
mov
inc
push
lods
fs
lcall
shlb
test
rorb
les
jp
popa
dec
cltd
out
test
mov
psrlw
outsl
cwtl
pushl
adc
fdiv
bound
mov
shlb
xor
inc
xor
jnp
and
rolb
xchg
cli
add
sbb
ret
sub
pop
div
xor
sti
sbb
or
ret
or
in
rcrl
sti
sbb
and
or
inc
sbb
arpl
sbb
add
push
loopne
cmc
cli
ljmp
xchg
and
jp
and
adc
jge
lods
scas
mov
loopne
add
xor
pop
adc
inc
push
mov
ret
pop
out
mov
jp
fadds
mov
and
std
or
rcll
and
push
dec
aad
jmp
xchg
mov
jbe
mov
inc
stos
rclb
push
flds
xchg
inc
popa
pop
out
push
movb
push
js
push
movsl
jp
or
xor
ret
xchg
mov
fs
sub
leave
or
rolb
in
enter
pop
jb
fcompl
dec
stc
lahf
push
in
push
and
fistps
adc
ja
mov
test
test
in
out
xchg
insl
mov
imul
dec
add
lahf
or
in
sbb
sbb
repz
ror
fbstp
or
sub
pushf
cld
lea
stos
xchg
stos
inc
inc
orl
scas
test
imul
jmp
sub
push
jl
mov
dec
inc
test
push
xor
mov
clc
sub
jno
ss
inc
fidivs
fcom
pop
push
loop
lcall
cwtl
xor
fsubp
in
inc
stc
lods
outsb
xor
int
iret
hlt
mov
jno
pop
push
cmpb
out
or
inc
ss
int3
mov
xchg
pop
lds
sar
jo
inc
mov
jecxz
cmp
adc
out
andl
stc
jl
scas
jp
pusha
scas
mov
add
pop
jg
adc
mov
sbb
or
fbld
push
sub
pop
push
cmp
cli
mov
and
out
jbe
cwtl
sbb
xor
ret
or
xchg
jbe
push
bnd
insb
lcall
inc
movswl
xor
and
lds
sbb
push
dec
mov
repz
lea
loop
sar
push
aam
and
lcall
mov
or
mov
jb
dec
dec
mov
sti
jge
jne,pt
mov
sbb
fsubrl
adc
pop
out
je
dec
aam
jb
cli
push
movsb
stc
or
and
xchg
sub
insl
adc
jmp
les
cmc
pop
loope
cltd
pusha
js
jp
cvtdq2ps
xchg
jb
push
ret
pop
nop
aam
aam
jl
mov
and
add
lret
lahf
scas
sub
pop
sbb
mov
push
pop
aaa
adc
adc
call
mov
mov
push
jo
clc
insb
mulb
fcmovnbe
lods
jmp
shrb
ljmp
lret
insl
push
lahf
lods
popf
push
test
cli
rclb
add
sbb
push
dec
adc
leave
cmp
ret
add
adc
sahf
repnz
loop
jb
frstor
sub
xor
jnp
les
ficoml
dec
jle
repnz
lods
ret
gs
sub
cs
cld
mov
sub
jl
cmpsl
sub
decl
pop
jle
sarb
sub
jge
popa
iret
daa
rcrl
mov
mov
es
daa
cmp
jo
jecxz
xlat
fsts
fidivrs
clc
sbb
adc
xchg
add
mov
xchg
fdivr
mov
stos
adc
imul
push
aad
test
into
gs
addr16
inc
xchg
inc
cmp
jo
cmp
into
pop
xchg
aam
jae
movsl
lea
xchg
and
scas
shrb
movsl
adc
out
sbb
inc
sub
jae
fs
dec
aam
js
or
scas
xchg
out
adc
shrl
pop
loop
adc
xchg
leave
iret
xlat
stos
arpl
loope
xor
inc
and
ret
dec
ss
mov
fbstp
addb
aad
dec
add
mov
mov
lahf
mov
adc
fs
or
pop
scas
sahf
mov
inc
movsb
xor
jae
lcall
sarl
mov
std
lods
out
mov
pop
lock
sub
fldt
add
or
je
shrb
cwtl
dec
jae
call
addr16
ds
aad
push
jne
lods
mov
cmp
push
adc
insl
cmp
sub
jge
aad
lds
mov
jo
xchg
sbb
cmpsb
push
adc
divb
daa
repnz
sti
pop
sub
stos
clc
test
outsl
ret
xchg
test
sub
in
mov
cmp
popa
push
imul
lret
cmpsl
js
stos
fildll
lea
xchg
stc
fsubrp
sbb
test
loop
fisubl
inc
lds
add
lods
and
dec
in
lds
into
or
iret
or
jp
mov
fldenv
sbb
cmp
mov
lea
xchg
mov
push
iret
scas
xor
fmull
cmp
enter
push
jns
pop
lods
dec
out
and
in
loopne
mov
leave
test
push
mov
paddb
mov
adc
jecxz
and
icebp
loopne
adc
xor
jmp
test
je
dec
cli
mov
in
jb
lods
or
cli
lods
fmulp
out
dec
sbb
dec
rcrl
stos
push
sbb
xor
pop
loopne
pop
pop
mov
inc
lock
mov
loop
jae
adc
sbb
adc
push
xchg
mov
mov
leave
xchg
fidivrs
icebp
rolb
cs
jae
outsb
mov
inc
int
sarb
lods
int3
sub
loop
inc
aaa
mov
and
aas
sub
insl
mov
sub
mov
js
mov
push
imul
pop
pop
pop
int
lea
ljmp
cwtl
and
xchg
xlat
clc
int3
and
xchg
jne
ja
inc
mov
cmp
sub
mov
mov
or
imul
pop
ret
lock
std
push
xor
cld
je
cmp
push
inc
test
cmp
fsubp
lds
mov
xchg
pop
fwait
pop
push
mov
xor
bound
psubb
sbb
fstpl
push
push
push
and
push
inc
jbe
cmpsb
lods
mov
jbe
cmp
xor
xor
arpl
stos
dec
aad
fmull
mov
push
aaa
lock
setno
cmp
jge
in
pop
ljmp
lods
add
mov
mov
mov
mov
cmpsl
mov
in
fcmovu
mov
in
out
xchg
mov
sbb
pop
dec
and
inc
call
movsb
mov
xlat
shll
adc
pop
pop
sti
or
sbb
into
pushf
sbbb
maskmovq
notl
dec
call
or
cmp
inc
outsl
lret
repnz
mov
inc
cmpsl
mov
daa
add
aad
sti
cld
or
repz
sbb
pop
daa
fmuls
pop
mov
push
fldenv
cs
pop
mul
add
shld
loop
sub
and
pop
inc
addb
jae
xchg
les
cmc
and
sub
jmp
je
out
rorb
jmp
jno
xorb
cli
imul
mov
pushf
ljmp
add
imul
cmp
pop
cmpsb
and
or
mov
sub
dec
out
fists
mov
adc
hlt
in
inc
cmp
dec
out
in
push
pop
rorl
push
movsl
js
jb
stos
enter
lret
fistpl
js
lret
pusha
add
inc
jle
jbe
push
stos
gs
cmpsb
mov
cs
cmpb
es
cwtl
aaa
adc
fistpll
jmp
mov
push
loop
mov
lods
cmp
inc
sub
adc
jns
lods
xor
xor
inc
jnp
cmp
xchg
icebp
mov
clc
or
mov
add
xchg
fstl
or
add
mov
inc
sbb
or
or
mov
sub
and
das
xchg
loope
outsl
push
jo
mov
sub
outsb
jmp
cmp
fiaddl
mov
and
sbb
outsl
cld
jno
sbb
xchg
adc
xchg
icebp
or
cwtl
pop
xchg
pop
jo
mov
pop
movb
sbb
sbb
cli
dec
mov
xchg
mov
pop
mov
mov
mov
lds
add
xor
call
lret
jne
jp
push
pop
int
insb
cmp
inc
xchg
nop
test
xchg
rcr
sub
hlt
xorl
arpl
xchg
imulb
fxch
push
cld
mov
negb
clc
cmp
sahf
aam
shl
inc
test
nop
push
lahf
mov
sub
and
in
fmul
add
cld
repz
add
pop
jae
mov
push
aad
pop
addb
cli
arpl
imul
out
dec
dec
cmpsb
fs
test
dec
movsb
inc
mov
xchg
movsl
sub
dec
xchg
call
mov
cmp
insb
push
mov
jge
das
sbb
mov
imul
adc
and
scas
jp
mov
in
in
loop
not
std
adc
or
test
mov
fucom
jnp
std
rcr
adc
wrmsr
lea
xor
dec
push
jnp
divb
ret
xchg
add
mov
push
dec
mov
dec
mov
repz
add
xor
stos
outsb
rorb
test
push
push
sti
imull
jb
add
mov
cmp
xor
sbb
arpl
outsl
jo
setbe
push
cs
fcomip
or
leave
push
xor
add
imul
ljmp
xlat
cltd
dec
in
fdecstp
test
cmp
adc
sarb
mov
pushf
ss
daa
dec
sub
pop
push
sbb
adc
jo
fdivrs
ficoml
adc
and
or
fists
pushl
push
pop
lds
test
cmc
cmp
or
pop
xchg
adc
and
sub
or
out
inc
sarb
mov
add
xor
shll
jecxz
add
clc
notl
sbb
aam
out
push
lea
loope
imulb
mov
in
mov
ficoml
inc
aam
jns
jmp
mov
adc
pop
mov
rcl
das
ljmp
mov
ficomps
push
mov
pusha
scas
leave
roll
cmp
adc
jmp
fcmove
out
les
cmp
lock
add
notb
aaa
les
popa
fcmovb
xor
xchg
popa
sbb
sbb
dec
notl
lock
test
pop
les
arpl
out
pop
lea
add
add
popa
pop
inc
lods
mov
mov
jns
or
fisttpll
repz
xor
fidivs
inc
iret
lods
cmc
es
ret
inc
cs
pop
sub
call
add
ss
xchg
inc
dec
movsb
popf
cmp
popf
dec
popa
aas
pop
fs
mov
push
cmpsb
xchg
call
sbb
in
sti
mov
rol
push
mov
mov
or
jmp
dec
movsb
fsub
mov
cs
jb
call
jae
xlat
dec
sub
gs
jge
cs
adc
mov
mov
stos
sub
xchg
shlb
inc
fisubrs
mov
mov
jmp
inc
add
mov
xchg
ds
sub
add
pop
fisttps
pop
popl
es
and
addr16
sti
push
in
pushf
xor
xchg
xor
sbb
insl
push
test
push
add
mov
push
nop
mov
iret
xor
mov
loopne
daa
pop
test
adc
imul
popf
popf
and
or
inc
imul
sbb
lock
mov
jle
popf
jmp
and
dec
movsl
pop
inc
mov
jecxz
or
mov
pop
stc
add
add
mov
fistpll
jb
cmp
shrl
out
cwtl
add
in
icebp
sbb
test
jo
int
mov
or
dec
fsubl
mov
imul
mov
push
fcomps
cmp
sarb
adc
jge
add
add
pusha
push
sub
dec
add
loopne
sub
rcl
pop
push
jne
subb
xor
mov
xchg
dec
pusha
ret
sbb
mov
jmp
ds
imul
jle
mov
xchg
mov
push
push
jmp
fisubs
out
mov
jae
int
mov
cltd
push
aad
sti
xor
and
sub
dec
push
mov
cmp
sub
arpl
outsl
xor
and
cs
decb
ror
jle
cld
and
mov
adc
leave
push
push
ss
loope
out
scas
daa
aam
inc
mov
jmp
fsubrs
pushf
lret
mov
fdivrs
xor
and
scas
negl
lds
enter
in
xor
pop
js
inc
dec
sbb
ror
xchg
in
or
sbb
popf
rcll
dec
add
fisttps
xchg
sbb
loopne
imul
int3
inc
cmp
sbb
mov
jp
mov
pmulhuw
aas
inc
shrl
ret
pop
ss
mov
mov
inc
or
stos
jns
clc
mov
test
ss
rcl
or
mov
sbb
pop
jg
mov
ss
call
jecxz
das
push
mov
jge
popa
jnp
cmp
xchg
fists
fnsave
pop
lcall
mov
shr
pop
adc
and
ljmp
inc
xchg
mov
sub
mov
out
es
fldl
lods
ficoms
jge
loop
ja
scas
out
xorb
xor
popf
ss
sub
sahf
cmp
sbb
xchg
mov
xor
mov
push
or
inc
add
pop
ret
mov
cltd
cmp
xor
and
stos
mov
dec
or
mov
cmp
pop
xor
mov
pop
icebp
inc
push
xchg
fcmovu
ds
fs
mov
jl
sbbl
sub
sbb
out
lret
adc
test
repnz
or
out
push
stos
jge
xlat
mov
xchg
mov
pop
ror
push
sub
or
mov
mov
inc
or
test
adc
mov
mov
push
arpl
mov
sbb
or
mov
or
sub
incb
inc
int
jge
sbb
popaw
mov
cmpsl
jb
shl
inc
mov
mov
test
push
mov
lret
mov
and
test
jo
inc
adc
pop
scas
inc
subl
hlt
lcall
inc
add
scas
std
mov
out
dec
mov
pop
lds
and
inc
mov
add
ljmp
enter
pop
mov
mov
popf
and
lahf
sbb
icebp
inc
ficomps
push
xchg
push
lea
insl
sbb
cmc
jbe
scas
loopne
ret
leave
insb
jecxz
arpl
adc
rcr
pop
sbb
outsl
dec
adc
fisubrl
loope
aam
and
dec
aad
fdivrs
aam
cmpsb
out
jle
sbb
pop
xlat
jae
cmpsb
fisttps
sub
push
arpl
mov
es
movsl
cwtl
add
push
es
jp
adc
jne
push
mov
sbb
xor
rclb
pop
testl
xchg
mov
lods
and
cmp
pop
xor
in
jae
push
fcmovu
xchg
mov
sub
std
shl
cmp
das
gs
mov
pop
mov
jo
jnp
testl
insb
inc
mov
cmpl
mov
sub
cltd
xchg
xor
mov
aam
pushw
aas
xor
out
ficoml
out
push
cltd
setp
adc
xor
fs
insl
or
jbe
in
rcll
or
jg
jecxz
add
es
jae
hlt
outsl
mov
cmpsb
or
dec
or
stos
mov
andb
stc
lods
cmp
lret
or
push
or
mov
sub
push
sub
mov
xchg
aaa
rcll
add
pushf
jg
dec
mov
jb
lods
pop
jb
push
aad
out
into
xchg
sub
or
pop
lret
jle
add
divb
or
test
in
cmp
push
xchg
aam
das
mov
push
cmp
mov
push
and
jecxz
imul
lods
mov
mov
out
in
jl
cmpsb
stos
dec
pop
jmp
lcall
mov
shlb
push
jae
sbb
lret
lcall
add
inc
orb
pop
mov
cmp
fidivrs
ret
xchg
je
in
mov
mov
jmp
rorb
testb
mov
test
jnp
push
fldcw
test
popf
nop
cld
inc
stos
cltd
mov
push
sti
leavew
fstenv
ret
fisttpll
lea
sbb
mov
in
cmp
fsubs
mov
push
sub
in
ds
dec
mov
sub
xor
movsl
repnz
or
mov
xchg
jnp
pop
out
into
sub
cmpsl
repnz
sbb
xor
out
addb
or
arpl
inc
mov
pop
aam
movsl
sbb
cmp
cmp
fistl
mov
cltd
scas
jno
and
dec
cmp
popf
hlt
loopne
push
push
orb
addr16
sub
aam
add
add
adcb
mov
mov
in
or
loop
inc
add
dec
bound
or
pop
int3
xchg
xor
rorb
hlt
and
pop
mov
sahf
xchg
cmpsl
xchg
iret
repz
xor
loopne
pop
mov
mov
addr16
pop
or
cld
xorl
iret
popa
push
push
push
mov
cwtl
xchg
mov
pop
lret
xchg
mov
dec
inc
in
push
push
lret
popf
pop
loop
outsl
ret
addl
adc
add
and
cmp
mov
add
adc
daa
lods
adc
filds
cmp
fbstp
xor
cmp
insb
xchg
or
loope
loope
lret
xor
push
xchg
es
lcall
in
mov
inc
jno
and
and
push
sahf
mov
inc
jnp
fidivrl
push
xchg
fsubrs
repnz
mov
jp
push
shll
xor
fnstenv
xchg
ja
out
ss
jae
adcb
xor
gs
es
out
jp
inc
iret
xor
insl
or
jmp
and
int3
inc
cld
push
push
pop
or
or
fdivp
and
xchg
mov
cmpsb
sbb
loope
arpl
push
aam
and
mov
in
cmp
jecxz
nop
ret
not
bound
in
std
adc
pop
dec
fninit
pop
mov
mov
stc
mov
xor
mov
call
pop
js
repz
scas
fwait
adc
fwait
inc
add
mov
inc
dec
jbe
mov
xchg
sub
push
cmp
mov
imul
cld
cmp
mov
xchg
int3
cli
dec
ds
scas
lcall
fcomps
sti
repz
test
idiv
sti
or
push
out
adc
jbe
imul
mov
jns
cmp
icebp
data16
outsb
sti
cwtl
mov
fldz
in
push
cmp
jmp
loopne
fcom
test
jnp
ljmp
xchg
aaa
mov
pop
test
popf
mov
sbb
mov
test
rorb
mov
lea
leave
mov
pop
add
sub
mov
mov
dec
es
sub
or
or
xor
pusha
addb
xor
iret
lret
cmp
inc
or
pop
cmp
aad
scas
mov
outsb
repnz
loopne
out
mov
es
adc
xchg
cmp
push
lcall
cmp
push
mov
cs
cwtl
shrl
iret
or
jnp
fimuls
mov
mov
popf
js
xchg
loop
ret
inc
mov
repnz
inc
rol
test
cltd
call
sahf
ds
fmulp
adc
in
lods
cli
xor
cs
mov
adc
mov
sbbb
gs
dec
jge
sub
lock
daa
repnz
cmpsb
std
leave
xor
repz
out
loop
jbe
xor
aas
out
and
xchg
pop
dec
fwait
mov
cmp
movsl
push
aad
dec
sbb
lcall
fmull
pushf
mov
xor
inc
mov
xor
mov
adc
sbb
int
addr16
xchg
pop
xor
xchg
inc
cmp
sti
mulb
xor
sarb
daa
xchg
ficompl
or
inc
fsubrp
jae
aad
lret
add
jo
test
xchg
xor
mov
mov
cmp
mov
aam
mov
push
mov
xor
xor
aaa
test
dec
lret
mov
mov
add
fdivs
dec
push
dec
rcrl
movl
jle
shlb
movsb
xor
sub
ja
dec
in
inc
and
inc
jno
inc
test
subl
fstps
mov
add
in
push
pop
pop
push
pop
ja
xchg
add
insl
stos
nop
xor
ja
pop
inc
dec
sti
icebp
lea
mov
sbb
cmp
mov
cltd
fdivrs
ficompl
es
cs
dec
xchg
jp
push
pop
aaa
and
push
fiaddl
mov
testl
jne
in
mov
mov
xor
dec
pop
loope
jg
mov
pushl
data16
adc
and
stos
rcl
jmp
into
or
sahf
add
ljmp
inc
ror
pop
push
adc
out
and
adc
das
jno
xor
repz
hlt
mov
imul
jne
imul
pop
adcl
push
and
sbb
shrb
push
mov
mov
jbe
cmp
out
xchg
sti
scas
pop
sbb
pop
loopne
pop
lea
jbe
insl
bound
mov
scas
leave
sbb
jns
sbb
dec
sub
scas
js
sub
xchg
out
mov
mov
cmpsl
les
xchg
xchg
cld
mov
lea
dec
cmp
ljmp
inc
loop
push
jl
ljmp
push
addr16
mov
mov
inc
add
jmp
incl
mov
pop
cmc
inc
dec
movsl
movsb
adc
jno
cmc
cmp
and
into
push
int3
bound
sub
jnp
cli
jae
mov
mov
dec
inc
dec
xor
xchg
mov
pause
frstor
push
pop
ds
add
lods
push
or
cmc
es
in
pop
std
mov
cmp
push
imul
jmp
hlt
cmpsl
mov
dec
mov
movsl
sbb
adc
aad
or
sub
xor
iret
pop
sbb
mov
xchg
inc
xor
adc
into
sub
btr
mov
and
cli
out
loope
jno,pt
and
into
ret
rclb
dec
insl
das
lods
std
ss
adc
int
clc
cmpsb
mov
stos
popa
fwait
dec
add
std
lret
lods
xchg
sbb
jp
pop
cli
adc
dec
cmp
dec
stc
add
movsl
inc
in
imul
add
test
cmc
aaa
jp
mov
add
add
jae
nop
dec
cmp
test
sar
into
mov
fldl
mov
xchg
aam
clc
dec
or
adc
mov
or
rcll
push
cltd
lret
lods
sub
jnp
push
scas
add
and
dec
jnp
sub
cld
shl
fsts
jne
fdivrs
iret
cmpsl
into
loope
xor
addr16
or
xchg
and
clc
jg
stos
enter
fucomp
cmp
test
dec
ret
pop
into
xor
rorb
scas
push
mov
mov
hlt
fs
mov
enter
cmp
dec
lods
sbb
and
xor
les
add
jns
inc
ljmp
daa
pop
jae
adc
lock
ss
mov
ljmp
les
test
mov
loope
sub
cltd
mov
subb
jecxz
aaa
pusha
jl
jmp
out
mov
icebp
inc
pop
and
loope
rclb
pop
adc
sbb
adc
push
xchg
dec
iret
out
push
cmp
sub
bound
lods
sub
es
clc
jg
xor
test
jo
adc
int3
pop
mov
push
pushf
iret
gs
lret
mov
mov
scas
inc
inc
mov
push
lret
adc
aam
mov
sub
out
mov
andl
lcall
dec
data16
js
fs
and
loope
sub
pop
ljmp
pop
mov
loope
push
push
ja
xor
sbb
sub
mov
fiadds
negb
fists
pushf
add
std
stos
out
ljmp
pop
mov
shrb
push
sub
cmc
iret
adc
loope
int
add
jge,pn
sar
imul
popf
std
pop
pop
dec
or
adc
pop
and
ror
mov
xchg
inc
and
cld
dec
add
mov
inc
jbe
sbb
mov
or
mov
fcomps
ds
or
jbe
repnz
les
add
cmp
je
lret
jecxz
xchg
mov
lods
in
push
in
js
or
in
fldt
adc
mov
clc
lock
mov
fstpt
mov
or
adcb
lea
inc
cld
lahf
loope
movsb
xor
test
and
lea
mov
rolb
adc
fcmovnbe
mov
xchg
sub
cmc
orb
negl
or
pop
faddl
jecxz
push
sub
repnz
out
sbb
mov
dec
jne
aam
xchg
mov
lods
push
data16
in
inc
leave
out
pop
lods
and
jo
iret
adc
sbb
je
not
mov
sarb
ss
jb
and
lock
add
mov
dec
jbe
or
xchg
lret
sahf
jmp
sti
cli
mov
add
dec
stos
loope
int
push
sbbl
mulb
ficomps
mov
mov
push
outsb
pop
cmp
push
call
and
cwtl
fwait
push
arpl
xor
negb
lcall
in
dec
add
jnp
push
out
test
cwtl
push
push
mov
daa
cli
iret
and
mov
sahf
jbe
orb
ljmp
pop
pop
mov
cltd
andl
mov
push
cmp
leave
sub
jmp
stos
cmp
pop
mov
notl
cmp
popf
jg
in
std
sub
inc
outsb
mov
add
movb
movsl
add
xlat
cld
fs
mov
xor
cmp
lods
into
test
sahf
sub
xlat
lahf
pushf
cmp
shlb
inc
add
xchg
fcompl
xchg
pop
xor
jnp
mov
jo
nop
dec
mov
inc
fstps
int
mov
aas
lret
mov
pop
push
add
push
jp
cltd
daa
xlat
push
out
mov
loope
inc
jle
pop
in
sti
mov
dec
mov
pop
push
movsl
or
mov
pop
pop
add
inc
add
add
cmp
inc
jg
leave
add
in
cmp
cmp
pop
push
lahf
dec
ljmp
iret
jne
xor
ret
mov
mov
movsb
sbb
jnp
jp
cmpb
pop
sub
cld
cmp
and
cwtl
jne
jmp
shrl
loop
dec
pop
adcl
adc
packssdw
sbb
jecxz
xchg
ds
jecxz
lods
or
add
mov
or
adc
shrl
int
mov
call
dec
fldenv
scas
sub
mov
and
cli
sahf
fmulp
adc
dec
pushf
mov
rcrb
icebp
cmpsl
sub
fwait
mov
cltd
add
xor
and
ds
mov
push
sahf
scas
test
cmpsl
cmp
or
mov
mov
pop
mov
lret
inc
xlat
outsb
scas
lcall
jecxz
xor
lcall
jmp
aam
pop
jle
out
sub
aaa
insb
jo
test
jo
xor
decl
xor
jp
es
popf
add
es
mov
pushf
pop
jp
xor
out
out
test
dec
push
call
or
adcl
in
fld
pusha
ret
sub
aam
sbb
daa
sbb
shr
mov
push
popf
dec
popa
incb
data16
pop
leave
xchg
jg
sub
icebp
daa
cwtl
mov
lret
pop
sbb
cs
pop
int
fucom
add
or
lret
mov
sbb
es
dec
shlb
shlb
sub
pusha
fldcw
xor
gs
mov
lods
jp
mov
xchg
stc
add
xchg
frstor
xor
ja
nop
mov
subl
dec
xchg
xchg
inc
xchg
xchg
add
sbb
xlat
in
xor
cmp
ret
mov
js
add
movsl
repz
rclb
jl
inc
stc
arpl
dec
mov
imul
inc
dec
lahf
lea
and
xor
sbb
sti
scas
dec
mov
xchg
fnstenv
insl
test
mov
cmp
inc
movlps
xchg
cmpsb
clc
push
lods
cmp
jne
pop
aam
ja
arpl
test
repz
cs
imulb
cmp
jbe
mov
jne
popf
nop
popa
fxch
xchg
rcrb
mov
lret
gs
sub
jl
dec
push
ljmp
xor
sub
push
add
jne
icebp
mov
movsl
sub
icebp
pop
push
sti
or
ret
xor
out
shr
jo
roll
and
pop
push
insb
negl
out
and
xchg
fcomi
iret
mov
cmp
cmp
insl
pop
cmpsb
jp
movsb
in
push
adc
inc
insb
jecxz
dec
outsl
mov
lahf
into
xchg
jno
and
pop
add
mov
in
loopne
pop
and
loop
lcall
aas
mov
cmp
out
xchg
sbbl
fnstsw
xlat
ja
inc
mov
xchg
sbb
pop
push
or
pushl
addr16
dec
pop
dec
mov
les
sbb
xchg
sbb
int3
cmp
int3
xor
mov
faddl
pop
enter
leave
lods
sub
dec
cmc
into
addr16
shlb
add
inc
push
gs
mov
mov
dec
decb
scas
loopne
loop
push
jbe
mov
add
insl
bswap
int3
daa
jno
imul
popa
std
mov
mov
rorb
cmp
or
out
dec
test
cltd
movsb
jne
mov
inc
xor
imul
andl
mov
jle
popa
cmp
push
shrl
mov
pusha
insb
jae
ret
inc
and
push
addb
push
mov
sbb
imul
out
dec
or
stos
sar
pop
dec
cmp
sub
xlat
add
dec
repnz
and
popf
pushf
sbb
mov
xor
add
mov
scas
jmp
loopne
gs
pop
cltd
pmaxub
shrb
notl
xchg
dec
rorb
dec
push
aas
lods
adc
adc
mov
stc
lds
sbb
je
movsl
jae
rol
inc
idivb
and
dec
adc
cmp
jb
push
mov
push
dec
push
jns
jne
push
out
push
jae
or
adc
idivl
jne
test
scas
pusha
mov
lods
sti
shr
and
dec
lods
sub
mov
stos
adc
and
movsl
ret
aas
test
pop
iret
or
jmp
mov
pop
mov
shr
pop
cmpsb
jne
mov
mov
jns
js
pop
dec
daa
jmp
aas
mov
pop
gs
sbb
clc
mov
in
cmc
test
cs
cld
ret
cmp
and
imul
mov
sahf
sbb
ror
adc
push
cmp
int
js
push
cmp
data16
icebp
mov
push
lret
jmp
mov
mov
ds
pop
xchg
mov
shlb
shll
aam
pop
adc
sti
out
ret
mov
stos
call
xchg
mov
mov
inc
lea
xchg
sub
mov
movsl
add
inc
cmp
stos
xchg
fsubp
into
mov
mov
and
xlat
iret
adc
repz
sti
das
cmpsl
test
sub
inc
dec
pop
mov
xchg
mov
out
ljmp
sub
jb
mov
adc
jns
clc
packssdw
mov
dec
or
test
aad
cwtl
dec
jle
dec
mov
mov
into
xchg
fsts
orl
adc
rcrb
cld
dec
je
ret
stos
cmp
pop
inc
scas
addb
fisttpll
pop
sub
out
mov
inc
inc
shr
pop
jmp
bextr
sbb
lret
addr16
cmp
aad
xchg
cmp
stos
push
aad
in
pop
dec
clc
into
das
dec
bound
mov
sub
enter
aaa
mov
je
xlat
outsb
xor
pop
mov
fcmovnb
xrelease
mov
and
mov
sbb
add
push
jo
cmp
int
mov
and
testb
sub
xor
imull
imul
roll
out
mov
mov
xchg
sub
cmpsb
pop
fildl
xor
loope
in
popl
cmpsb
xchg
and
rcrl
pop
mov
xchg
rcl
int3
out
test
mov
lcall
outsl
pusha
loop
iret
inc
imul
push
sbb
lahf
test
push
cs
sbb
scas
jge
lods
and
gs
inc
mov
das
je
jo
mov
mov
leave
dec
or
inc
lods
push
test
and
adc
aad
hlt
mov
inc
lds
mov
in
insb
cmp
push
in
pop
scas
outsl
loop
cld
aad
sub
sub
xchg
xor
xlat
or
and
mov
aas
inc
mov
pop
mov
rcll
subl
stos
mov
inc
jecxz
xor
xor
adc
xchg
fwait
int
fdivs
test
ss
push
pop
xchg
mov
mov
in
mov
test
das
fwait
xchg
pop
xchg
cmp
push
xchg
rorb
jp
sahf
push
xor
jle
cs
stos
setb
mov
pop
popl
mov
cmp
ret
mov
das
out
add
pop
inc
outsl
xor
test
orl
push
cmp
cmp
les
cltd
mov
sub
sub
adc
mov
clc
jl
lahf
mov
or
pop
loopne
sub
dec
mov
jmp
xor
xor
cmp
fmul
ds
push
add
repnz
movsl
std
rclb
adc
icebp
xor
push
dec
and
out
addr16
dec
mov
mov
daa
std
insl
ja
sub
iret
mov
adc
das
ljmp
jp
jl
or
adc
inc
add
das
mov
jne
mov
xchg
scas
pop
mov
mov
rcrb
test
addl
add
adc
fcomps
insl
in
mov
js
and
mov
loope
in
lret
cmp
ror
cmp
push
sahf
mov
dec
adc
sub
aad
sahf
push
lock
pop
movb
js
adc
mov
xchg
xchg
sub
ficoms
xor
inc
pop
lret
pop
xor
inc
lock
inc
movsb
cmp
adc
addr16
pop
lods
mov
aam
je
jle
cmp
add
fistps
inc
push
outsb
data16
aaa
outsb
or
mov
adc
sti
subb
fs
push
fdiv
sbb
ja
sbb
mov
pop
inc
jb
shll
cmpsl
movsl
cmc
sbb
inc
lret
aaa
mov
inc
std
pop
call
mov
test
sub
jle
mov
xchg
dec
stos
xor
sahf
lock
inc
adc
pop
pop
fcoml
stos
scas
jae
and
scas
aad
dec
push
push
rcrb
mov
je
scas
enter
notl
jno
push
ret
and
adc
cld
inc
dec
xor
into
jmp
outsb
xchg
pusha
mov
stos
hlt
cld
and
cmpsb
addl
lea
enter
in
jl
add
adc
leave
lcall
popf
cmp
cmc
test
fwait
mov
sahf
popa
mov
pop
xchg
mov
jge
add
lahf
dec
scas
dec
mov
inc
in
push
out
clc
test
scas
add
cmpsl
mov
cmpsl
cmpsl
lret
ret
push
rolw
jg
cmp
jno
xchg
mov
mov
cwtl
movsl
sub
dec
popf
cmpsb
std
loop
sbb
imul
orl
and
add
and
insb
add
mov
xchg
mov
adc
fldcw
sbb
pop
jecxz
push
adc
lahf
xchg
sub
enter
xor
push
add
pop
mov
mov
jb
dec
test
imul
jns
add
mov
pop
fists
mov
jmp
stc
pop
aam
cmp
insl
popf
fistpl
sbb
std
js
jne
lret
pop
popa
sti
mov
dec
jns
and
jp
xchg
add
jns
roll
inc
fnstenv
sbb
stos
adc
jmp
mov
add
test
xor
aaa
pop
mov
or
pop
in
mov
dec
pop
das
ljmp
inc
cmc
lcall
test
adc
pop
cwtl
lret
xor
das
cmp
imul
and
hlt
xchg
adc
add
mov
push
jp
and
sahf
push
ja
lret
mov
push
std
std
cli
out
jmp
incb
popf
pop
push
je
pop
mov
inc
stc
push
mov
sbb
cmp
arpl
xchg
movsl
add
in
cmc
je
cmc
rcll
lret
sahf
and
fcmovnu
jb
dec
push
cmp
pusha
xor
arpl
shl
push
sti
pop
lea
movsl
je
sti
mov
jle
jae
shl
addr16
cmp
ja
xor
xor
pop
loop
lock
fcompp
push
shll
mov
aas
xchg
add
fcompl
xchg
fwait
test
adc
cmpsb
in
out
inc
mov
arpl
gs
test
dec
sti
dec
popf
cltd
mov
repz
lcall
idivl
inc
ret
sahf
mov
gs
pop
stos
daa
jle
int
out
inc
push
je
mov
jne
loope
lods
push
pop
inc
daa
insl
data16
popa
fldcw
mov
lods
or
lock
test
jno
push
ficomps
scas
jg
outsb
lods
sbb
and
shll
push
inc
sub
mov
popf
lods
push
mov
and
xor
std
lds
leave
dec
out
jne
popf
sub
outsl
ret
repnz
sub
add
scas
adc
jb
lcall
std
inc
sbb
sarl
cmp
mov
stc
fdivl
jno
push
xor
lret
jp
imul
adc
inc
cmp
or
orl
test
loop
sbb
popa
les
dec
xor
adc
push
xor
pop
ljmp
mov
push
arpl
push
xlat
inc
sub
pop
dec
xlat
lods
pop
mov
xchg
movsb
fsubl
mov
cmp
jno
and
sbb
in
jmp
cs
fs
and
imul
enter
lods
cs
into
ja
cmpsb
mov
sub
adc
mov
mov
rclb
data16
push
pop
jmp
sbb
dec
fcomi
movsb
push
ljmp
sti
sub
xor
fists
inc
mov
ja
cli
push
in
cmp
jnp
pop
call
test
push
sbb
ljmp
nop
je
adc
xor
xchg
loope
sub
cmp
pop
push
lret
xchg
ror
dec
testl
mov
mov
shr
movsb
lods
inc
int
pop
push
popf
insb
sbb
dec
sub
ficomps
in
mov
xor
cmp
scas
mov
out
dec
adc
shrb
ret
and
cltd
cmp
enter
enter
pop
mov
pop
jb
pop
mov
mov
and
xor
mov
scas
cmp
imul
test
bound
sub
sbb
cmp
push
jecxz
xchg
imul
dec
repz
fbstp
mov
mov
or
push
or
hlt
push
adc
in
lods
xor
or
and
and
int3
dec
cmp
neg
mov
imul
push
inc
inc
clc
shll
mov
jns
lods
inc
test
mov
xchg
mov
rcll
mov
out
mov
push
out
jecxz
or
cmp
add
ljmp
int
dec
out
push
test
push
cmpsb
lahf
cmp
cld
outsb
adc
repnz
or
or
adc
stos
add
sub
or
cmp
inc
ljmp
mov
mov
xor
filds
jmp
jp
sti
rorb
sahf
or
lds
or
mov
adc
ljmp
stos
iret
scas
pusha
imul
xor
mov
or
xchg
xor
lret
lock
xor
mov
mov
cld
fwait
ljmp
pop
inc
mov
gs
inc
jnp
mov
and
dec
add
ret
jno
das
pop
and
sub
cmp
jbe
push
frndint
mov
pushf
lods
mov
into
or
cmpsl
std
stos
daa
repz
jo
int3
push
frstor
xor
xlat
inc
cmovl
lcall
adc
mov
hlt
stos
outsb
fwait
adc
lcall
xor
in
imul
mov
or
fstpt
mov
jmp
bound
mov
popf
mov
clc
pop
dec
xorl
sub
lods
mov
sub
or
xchg
push
mov
rorl
int3
lods
scas
jmp
or
dec
fcmovb
insl
mov
dec
jmp
xchg
jae
xor
sub
xchg
jbe
add
dec
outsl
xchg
and
dec
mov
sub
mov
inc
cmp
popf
xchg
sbb
mov
fldl
add
pop
sar
inc
fiaddl
inc
into
aad
aam
scas
lcall
in
pop
cmp
xor
fs
outsl
jo
ss
add
lcall
and
outsl
fisubrs
insl
xchg
mov
cwtl
push
xchg
push
mov
int3
jecxz
negl
mov
xor
mov
movsl
dec
or
push
mov
mov
movl
inc
add
fwait
ljmp
xchg
dec
jge
mov
lea
test
jb
out
cmpb
xor
push
ret
adc
push
adc
push
imul
sbb
cmc
mov
js
lcall
idivb
out
jl
gs
sub
rorb
in
in
das
sub
ss
leave
mov
rclb
xchg
loope
add
pop
add
mov
outsb
mov
mov
mov
mov
push
xchg
add
loop
cmp
mov
mov
add
mov
lret
in
xor
mov
les
jb
imul
push
inc
mov
les
mov
xor
std
mov
and
push
xlat
popf
inc
xchg
xor
das
adc
adc
or
pushf
arpl
lret
fadd
cmp
push
ficoml
fsub
and
jnp
fdivs
xor
nop
mov
sub
ds
ds
add
lret
inc
jne
sar
lcall
jno
fcomip
sbb
cmp
stos
sub
sub
shll
and
in
xchg
xchg
mov
sub
adc
imul
daa
pop
or
sbb
mov
xchg
fimull
inc
pop
ljmp
jns
push
scas
jg
jo
and
mov
add
mov
mov
loopne
bsr
xor
adcb
mov
inc
xchg
add
lods
dec
popa
or
js
xchg
lahf
cld
pop
lds
ljmp
jo
int
and
push
lret
in
dec
jl
cmc
xor
loopne
xor
pop
sahf
dec
leave
xchg
inc
fdivl
scas
stos
pushl
sub
test
lods
mov
nop
adc
mov
lock
jl
push
xor
sbbl
push
add
or
scas
aam
shl
add
loope
or
movsb
in
lret
aaa
and
leave
push
sub
mov
mov
aaa
int3
mov
inc
bound
cwtl
jg
and
fisubs
insl
push
stc
mov
sub
loopne
pop
aaa
sbb
mov
in
lock
or
test
mov
rcrl
rcrb
sbb
add
xchg
sbb
adc
push
jl
icebp
mov
nop
aaa
jg
rorb
and
and
push
in
and
mov
shrl
xchg
and
out
pop
movsl
xchg
stos
icebp
jge
addr16
ds
call
jl
mov
lods
cmpsl
dec
cmp
pop
outsb
ret
mov
hlt
inc
aad
pushf
aam
enter
pop
and
add
and
push
jno
ret
cmp
scas
adc
xchg
movsl
in
xrelease
cmp
mov
sub
ficomps
cmc
cmp
mov
adc
lods
adc
movsl
cli
testb
andb
out
js
adc
icebp
mov
int
aad
adc
ja
inc
sub
mulb
adc
push
push
adc
sub
in
aas
xor
sbb
push
xchg
jae
fstps
movsb
push
xorl
mov
pop
jmp
adc
sbb
loop,pt
bound
stc
cltd
cmp
test
pop
int
das
push
sbb
add
cld
adc
imul
loop
push
cmp
test
aad
push
sbb
pusha
dec
pushf
loope
divl
or
dec
xchg
es
fldenv
aad
rcrl
scas
addr16
xchg
xor
adc
dec
cs
decl
mov
mov
sub
scas
cmp
repz
lods
imul
xor
incl
and
int3
std
and
hlt
push
xor
scas
out
mov
aas
psllq
cs
loopne
leave
mov
inc
data16
add
ret
dec
mov
push
fdivs
fdivs
ja
mov
adc
ret
cltd
or
movsl
stos
pop
scas
ljmp
pop
push
inc
lds
rorl
dec
sar
mov
dec
sbb
push
jne
pop
test
icebp
in
das
jno
mov
add
mov
cs
jnp
lea
out
pop
cmc
gs
lea
fcoml
jle
sub
les
jg
and
inc
cmp
shrl
fisubrs
cltd
pusha
arpl
cli
cmp
adc
sub
in
jae
arpl
lcall
mov
insb
mov
sti
bound
jge
xchg
jno
lock
adc
jae
sub
sub
ja
les
push
or
subb
rcr
sub
nop
jo
and
mov
pushl
xchg
or
jl
or
xchg
cld
mov
mov
push
adc
rorl
push
out
es
shrl
stc
push
push
jle
test
mov
push
movsb
testb
cmp
fdivrs
add
ljmp
out
dec
dec
add
popa
inc
daa
into
adc
aas
mov
lods
ret
adc
das
add
andb
nop
adc
pushf
pop
mov
jg
dec
stos
adc
or
fsubrs
test
mov
leave
negl
dec
cmp
sub
nop
out
in
xchg
popa
clc
push
inc
xchg
mov
pop
clc
sub
inc
xchg
cld
icebp
ja
and
testl
lcall
mov
or
add
xchg
cmp
add
pop
xlat
f2xm1
lock
jmp
sub
sbb
cmp
loop
outsb
scas
fdivrl
xlat
jl
sub
add
push
out
mov
movsb
pop
pop
arpl
popa
xchg
xchg
inc
jnp
cld
roll
push
loopne
ja
andl
push
xchg
into
inc
scas
fisubrs
push
xchg
dec
lea
pop
lods
mov
decb
in
loope
rcl
or
insl
outsb
nop
rclb
repnz
ficoml
jnp
sbbl
outsb
xchg
xor
push
add
lods
ficompl
rcl
sub
or
sub
mov
mov
fsubl
or
aam
shrb
or
fwait
cmp
cmp
fsts
adc
mov
orb
xchg
cli
pop
mov
push
mov
adc
fsubrl
divb
xor
xor
mov
roll
cld
orb
out
cld
cmc
inc
pushw
or
stos
or
adc
loopne
icebp
inc
add
mov
and
xchg
call
xor
sbb
sbb
out
loope
or
xchg
leave
and
dec
in
lret
xchg
and
pushf
xlat
mov
adc
xchg
int
xlat
xor
mov
ds
mov
loopne
mov
clc
ds
jb
stos
mov
push
lds
push
rcll
leave
jle
ds
int
dec
xor
jbe
jge
and
rcrl
jns
dec
inc
push
int
outsb
xchg
aas
mov
inc
inc
dec
pop
xorl
ljmp
pop
or
xor
addr16
xchg
jo
in
add
ret
movsl
cmc
inc
push
movsb
dec
inc
sbb
jl
pop
shr
icebp
fwait
in
loopne
fwait
push
inc
push
push
mov
int
es
cltd
sbb
cmc
testb
ficoms
xchg
fcmovnu
sub
pop
xchg
xor
xor
dec
mov
sbb
push
sahf
pop
divl
mov
enter
push
loope
mov
stc
movsb
sub
in
and
sbb
push
push
mov
and
enter
shlb
ret
into
sub
and
mov
xchg
push
and
push
cltd
sbb
cmpsb
ss
aam
jle
mov
mov
inc
enter
mov
push
push
push
outsl
sub
add
enter
fs
mov
lcall
sub
test
xchg
sub
mov
dec
sub
mov
and
sbb
shl
cs
add
in
dec
jnp
movsl
inc
push
sbbl
mov
stos
pusha
aam
push
lret
scas
pop
stos
cmp
push
adcl
data16
xchg
stos
loopne
ret
mov
add
lret
mov
lahf
mov
test
mov
fidivs
lahf
xlat
dec
mov
pop
js
stos
pop
jns
outsb
gs
out
call
and
pop
mov
cmp
arpl
hlt
sbbb
int
rcl
sti
dec
fcompl
mov
bound
mov
out
adc
and
sub
enter
mov
xchg
jns
dec
push
mov
sahf
fsubrl
test
jbe
xchg
pop
or
ljmp
gs
loopne
jae
outsb
fs
dec
loopne
pop
pop
jg
or
shlb
punpcklwd
push
push
jecxz
pop
rolb
lods
jl
int3
into
xchg
push
sarl
sahf
push
sub
dec
in
or
out
das
push
repnz
push
sbb
pop
cmp
lods
mov
inc
test
leave
in
out
lret
push
popf
cld
js
push
pop
ja
mov
fidivrs
daa
pop
xchg
xchg
adc
cwtl
fisubs
xchg
outsb
xchg
cwtl
imul
popa
xorb
or
ljmp
and
into
inc
sub
fs
push
xor
xchg
dec
stos
sahf
inc
xchg
rcrb
mov
rclb
int3
jg
lds
out
inc
sbb
sbb
loop
jb
iret
int3
add
pusha
outsb
jns
pop
and
stc
jns
js
pop
fldt
shlb
pusha
lods
inc
inc
adc
push
cmp
int3
and
roll
jmp
add
cli
lods
add
mov
pop
pop
leave
stos
mov
jg
mov
sub
cmp
mov
sub
or
leave
inc
mov
cwtl
push
imul
nop
mov
xchg
sbb
sub
sub
adc
xor
mov
pusha
int3
int3
cltd
pop
outsl
out
negb
xor
mov
dec
dec
xchg
subb
ret
xor
ds
out
pop
pop
inc
out
imul
xchg
mov
mov
sub
mov
mov
imul
inc
dec
ss
and
and
push
iret
jl
rcll
cwtl
xor
loopne
inc
or
popa
dec
jecxz
test
aaa
arpl
cmp
mov
cmpsb
repz
pop
mov
repz
adc
inc
mov
call
xor
pop
or
or
xchg
mov
cmp
in
dec
adc
lods
push
movsb
cmp
xlat
out
xlat
out
adc
sub
mov
xchg
sbb
cmp
jle
imul
mov
test
cmp
push
mov
xchg
adc
hlt
push
dec
loope
jo
dec
imul
fadds
sub
jl
pushf
mov
stc
rorl
pop
lret
mov
add
jmp
push
lods
pop
arpl
sbb
fidivrl
xor
xor
imul
xor
out
adc
arpl
push
ljmp
push
lods
sub
je
cmc
pusha
mov
jno
push
ret
cwtl
and
pop
adc
lods
mov
lds
fsubs
add
and
inc
mov
sub
sub
mov
jge
cld
arpl
adc
je
test
mov
pop
cwtl
stc
or
cmp
in
mov
cs
in
sub
xchg
and
out
imul
add
fstp
jb
call
sub
push
repz
jg
aam
sbb
mov
xchg
stos
lock
sbb
cmp
popa
pusha
jl
clc
xchg
gs
loopne
xchg
add
movsl
cli
adc
add
mov
outsl
or
stc
xor
xchg
add
std
mov
jno
fnsave
cmp
enter
mov
sbb
xchg
push
mov
in
xchg
mov
cmp
in
addr16
mov
lret
sbb
repnz
jle
mov
sbb
subb
adc
lods
jp
sahf
mov
mov
stos
out
xor
fnstenv
popaw
sub
ja
ljmp
out
lret
stc
sbb
or
pop
in
or
div
lods
xchg
mov
rolb
jp
sahf
loopne
loope
test
jecxz
jo
sub
outsb
jbe
insb
and
stos
jge
sub
mov
mov
imul
inc
adc
sbb
dec
clc
cmp
adc
incl
in
mov
fs
clc
sbb
xchg
iret
cli
jne
inc
pop
cmp
clc
dec
or
sub
shll
push
mov
decb
jl
call
ficoml
lds
and
xor
lea
push
jecxz
mov
mov
popa
in
dec
jge
mov
sbb
ret
inc
pushf
fisubrs
xor
mov
out
lods
sti
out
inc
aaa
paddsw
inc
popa
cmove
adc
fldt
mov
ret
xchg
mov
pop
push
mov
jne
cmc
iret
push
bound
arpl
cmp
jmp
fisubrs
stos
xor
and
lds
and
imul
mov
fwait
in
scas
jns
mov
imul
mov
hlt
loop
push
wbinvd
repnz
popf
push
or
add
cmp
inc
shrl
dec
inc
mov
pop
mov
lahf
pop
jg
pop
sbb
outsb
fsubrs
sbb
mov
sub
out
jns
cmpb
fnstcw
and
daa
xchg
rcrl
filds
push
cmpb
xor
shrl
js
jmp
xchg
sbb
jg
xchg
jmp
cmpsb
xor
push
rol
xor
iret
jecxz
jmp
xchg
outsl
das
lea
xchg
stos
xor
stc
fwait
xchg
xorl
insb
mov
into
gs
dec
cs
ljmp
inc
lahf
mov
imul
lea
inc
stos
add
bound
or
adc
xor
cmp
arpl
push
imul
rorl
or
push
or
pop
mov
arpl
pop
test
cmc
lret
das
sbb
add
fldcw
sbb
mov
inc
pusha
pop
mov
xor
fwait
push
jnp
jg
lahf
mov
in
aad
repz
sbbl
psubb
cli
fstpl
test
int3
pop
adc
test
std
pop
cmp
mov
or
push
std
and
dec
lods
push
stc
and
in
sbb
mov
out
cmpsb
push
int
mov
lret
pop
add
sahf
jb
je
stc
int3
sbb
dec
jno
push
cmp
cmpsl
sub
pinsrw
push
cmp
push
xor
push
fmull
sub
movsb
mov
xor
iret
mov
loop
push
lods
dec
fsubrl
sub
lahf
inc
movsb
inc
and
outsb
aas
popf
push
loopne
mov
movl
adc
jecxz
inc
fs
fadds
inc
fdivs
pop
insb
push
call
adc
xor
ror
mov
dec
rolb
pusha
add
or
push
add
add
icebp
jne
jno
scas
enter
push
loop
movsb
mov
sbb
pusha
xchg
xchg
adcb
mov
adc
inc
jmp
out
clc
fs
pop
sub
mov
int
lret
outsb
adc
int
ret
or
cwtl
subl
push
mov
shl
rclb
scas
adc
sar
lea
insl
popa
pop
push
pop
in
lret
lret
orl
scas
int3
push
pop
mov
jo
test
mov
nop
push
xchg
dec
mov
or
inc
sub
add
test
std
clc
out
xor
jne
mov
inc
sbb
lcall
jg
addr16
outsb
scas
and
imul
lahf
mov
cltd
or
jne
clc
mov
call
repnz
mov
push
mov
inc
pop
bound
sbb
and
add
xchg
adc
dec
jmp
out
aaa
shrl
insl
mov
adc
xchg
xchg
mov
inc
mov
pop
icebp
rol
mov
cmc
out
jno
and
cmp
fimuls
cmc
xlat
and
ret
lret
test
int
and
lcall
sbb
adc
ss
cmp
xchg
pop
jmp
inc
and
pop
mov
out
inc
mov
xor
cli
movsl
int3
dec
mov
ss
sub
pop
movsl
pop
jp
inc
add
mov
aad
jne
sti
inc
dec
dec
testb
jne
inc
jg
scas
mov
and
in
sarb
rcll
sahf
jge
push
call
sbb
ja
inc
pushf
push
cmc
popf
jge
shlb
aas
jle
mov
jmp
fwait
mov
mov
xchg
xor
notrack
pop
les
sbb
jp
xchg
sub
test
mov
aam
mov
sbb
add
fwait
test
pop
mov
loop
scas
daa
sub
fs
xor
add
mov
fidivrs
sub
sub
mov
mov
cmp
fs
adc
enter
xchg
jle
cld
lret
adc
and
fistps
or
dec
lock
mov
inc
repz
fstpt
cmp
in
pop
sti
jp
imul
cli
ret
lods
sub
mov
add
jg
xchg
sar
rcrl
sbb
mov
js
push
xor
lret
mov
int3
aaa
jnp
and
sbbb
pop
pop
add
ficomps
in
add
push
and
jmp
xchg
pop
sbbb
mov
rclb
popa
cmp
mov
sti
push
loope
mov
lcall
pop
pop
nop
mov
jg
push
sbb
insl
xchg
push
mov
out
push
mov
mov
cmpsl
cwtl
sbb
cmp
clc
into
push
or
cmc
flds
push
outsb
pop
lods
xor
arpl
sbb
out
fwait
loop
adc
mov
xlat
sti
out
iret
sub
sti
ficoml
sbb
add
xchg
cwtl
and
fucomip
lcall
scas
mov
push
in
repz
mov
test
lcall
roll
test
or
ret
xchg
inc
and
adc
nop
jmp
add
scas
jb
xlat
push
into
inc
cli
xor
in
shr
lahf
adc
jmp
xchg
jno
adc
mov
jns
repnz
jo
xchg
push
cltd
call
sub
mov
push
sbbl
jb
jmp
bound
sub
test
scas
adc
cmp
or
shlb
std
and
cmp
add
test
lds
and
pop
and
rorb
push
sbb
jmp
loopne
cmpsl
enter
pop
mov
cmp
repz
notb
jp
stos
pop
sub
in
test
pop
mov
shr
rep
inc
mov
jecxz
das
hlt
jae
rolb
adc
je
and
dec
ret
mov
xor
push
addr16
push
aad
sub
in
sub
nop
mov
xchg
xor
dec
jp
jp
shll
add
inc
inc
lock
iret
in
sub
mov
mov
mov
loop
jecxz
shlb
popa
sti
mov
ret
adc
insb
test
enter
jp
sarb
xchg
mov
cmp
lret
and
icebp
cmp
cltd
mov
imul
pushf
mov
jae
subl
mov
inc
pop
jge
xor
inc
mov
or
outsl
xchg
xor
xlat
jecxz
cs
mov
cmpsb
je
add
mov
aas
jae
sub
sub
lahf
jno
xor
xor
dec
inc
fstl
clc
xor
pop
jo
in
imul
lret
pop
push
jnp
push
pop
jb
enter
cmpl
int
jg
lods
cwtl
pop
or
and
into
in
sub
inc
add
and
inc
out
popf
add
sub
adcb
inc
fiadds
jp
sbb
push
int
int
sub
sbb
cmpl
mov
pop
xchg
add
shlb
jnp
ss
mov
mov
pushf
or
cmp
orl
fistps
push
sub
sub
inc
out
insb
push
mov
inc
push
in
ss
fcoml
cltd
test
jmp
fmul
and
adc
dec
jno
jg
popa
test
push
or
shlb
mov
lods
push
ret
mov
mov
pop
or
or
dec
pop
xor
xchg
and
sahf
mov
jne
sbb
hlt
sbb
mov
jo
test
sub
push
add
leave
pop
mov
bound
rcrb
mov
outsb
mov
adc
addl
nop
cmp
pop
fmul
lods
stc
stos
jnp
jle
inc
xlat
sar
ss
pop
shrl
mov
xchg
mov
ret
push
addr16
cwtl
adc
enter
jnp
mov
add
mov
mov
cmc
pop
jae
aam
xor
rcl
push
lahf
adc
and
mov
mov
add
sub
or
jno
cld
xchg
mov
push
loopne
fs
jl
xchg
test
out
push
aas
outsl
gs
call
pop
outsb
ret
sti
loop
cmc
in
pop
push
push
shrl
xchg
add
gs
aad
shl
aam
and
out
movsb
andb
pushf
movsb
lea
sub
push
dec
adc
loopne
mov
cltd
cmp
xchg
filds
xchg
fldl
or
ds
outsl
pushf
scas
mov
dec
stc
je
xor
lcall
xchg
loopne
testl
or
jge
aam
stos
add
js
and
sbb
cmp
cmpsb
bound
pop
sbb
or
dec
adc
fiaddl
pushf
lods
and
test
popf
pop
lods
mov
sahf
sub
add
pushf
pushf
popf
xor
sub
lret
fwait
mov
inc
cwtl
in
adc
call
mov
in
cmp
aad
cwtl
cmc
ljmp
pushw
push
aad
jae
sub
orb
aad
xchg
iret
mov
adc
pop
stc
pop
mov
sbb
arpl
jbe
aam
dec
inc
inc
fstps
mov
sub
lds
inc
xchg
cmp
and
mov
and
pop
cmp
or
movsb
xlat
in
ds
or
mov
xchg
leave
sub
mov
mov
insl
cmc
inc
fistps
pushf
xlat
xlat
cmp
test
jl
popf
lret
inc
push
xchg
ret
lods
pop
mov
pushf
shll
pop
jb
jns
das
cmp
xor
mov
xchg
pop
in
sub
roll
pop
pop
push
in
or
mov
rol
loope
or
pop
lea
stos
xchg
ror
stc
mov
adcb
inc
or
enter
lret
mov
fidivl
es
sub
ljmp
jl
loopne
mov
aad
fyl2xp1
add
test
mov
add
push
data16
inc
mov
push
mov
sarl
ds
test
fxch
stc
jl
or
mov
loop
sub
dec
in
mov
mov
sbbl
sahf
push
and
in
pushf
fcmovnbe
jge
movlps
les
data16
aad
sbbl
or
arpl
addb
ds
add
imul
test
stc
fdiv
pusha
mov
and
out
jmp
push
dec
mov
sbbl
insb
fwait
loopne
pop
faddl
cmpsb
xchg
imul
aam
sub
mov
aad
in
pop
add
fs
pop
cmp
mov
add
loope
jl
xchg
and
push
jo
subps
jl
movsl
sbb
iret
test
stos
cmpl
xor
lret
or
ret
jnp
push
into
xchg
push
inc
rolb
scas
push
sbb
aas
or
andb
sub
test
stc
mov
repnz
push
inc
out
js
dec
sbb
adc
adc
push
jle
or
mov
jl
leave
shl
or
sub
es
fucom
fwait
in
es
fucomp
lret
sub
loopne
adc
cmp
cmp
mov
pop
into
in
iret
jg
push
lret
mov
sbb
int3
push
sahf
cmp
ds
or
add
icebp
scas
dec
inc
ss
loopne
and
ja
out
xor
adc
jbe
fmuls
fiadds
enter
and
test
pop
in
xor
mov
xor
jecxz
xor
xchg
out
add
add
nop
dec
adc
cmc
push
insl
out
idiv
inc
in
sti
xchg
lods
xchg
rcr
test
pusha
pop
loop
adc
push
icebp
sbb
loopne
imul
sub
outsl
aas
mov
xchg
pushf
and
sbb
imul
jno
mov
sbb
stos
sbb
inc
roll
pushf
sbb
dec
xchg
dec
out
pop
sarb
jne
loope
pop
pop
shrl
aad
dec
int
cmp
add
jno
shll
imul
out
lcall
jg
gs
xchg
mov
jp
in
int3
stos
pushf
outsl
push
dec
aaa
int3
loop
sbb
push
fucom
jnp
xchg
int
add
jle
or
je
jge
pop
popf
std
ret
lods
push
in
sbb
ss
xor
adc
dec
sbb
mov
push
movsb
shl
pop
js
push
push
xor
and
xchg
adcb
push
scas
cli
je
sub
das
stos
xchg
dec
push
xor
add
loopne
fdivr
aaa
lods
sub
scas
xor
aad
jecxz
mov
jbe
push
adc
mov
fwait
test
in
mov
jne
stos
add
sbb
jnp
ret
pop
mov
gs
aam
mov
jo
cmc
cmp
jmp
mov
jae
ljmp
adc
mov
je
cmp
leave
les
loopne
cmp
paddw
jbe
std
int3
iret
sub
cmpsb
xchg
xor
xchg
dec
nop
imul
xlat
addr16
push
mov
dec
lcall
aas
std
adc
ljmp
add
mov
mov
ljmp
fwait
rcl
out
mov
sti
inc
xlat
jo
popa
or
xlat
out
jmp
movsl
inc
sub
je
rcrl
push
cmp
push
push
jl
sub
push
push
outsb
mov
test
enter
push
push
lret
mov
adc
mov
fcompp
int3
xor
mov
mov
or
dec
mov
fs
movsb
sub
cmp
dec
fcoms
pop
in
cmpsb
mov
sarl
cmpb
mov
scas
frstor
push
mov
add
mov
mov
hlt
out
push
cmp
pusha
mov
call
pop
pusha
loope,pt
sbb
cmp
insb
rcll
sahf
push
jp
lcall
mov
rclb
inc
int
mov
cli
mov
push
jno
aam
dec
mov
test
sub
jnp
dec
mov
repz
addr16
and
inc
lods
dec
fidivrl
aas
enter
lods
cmp
push
mov
int3
popf
push
add
jnp
push
nop
push
rorb
sub
mov
popa
push
inc
jge
mov
push
mov
push
dec
lcall
adc
lcall
xor
push
jecxz
fwait
dec
xor
addr16
xor
sbb
lods
jbe
xchg
sbb
or
mov
jp
outsl
jle
add
movsb
addr16
scas
mov
mulb
int3
lods
or
sbb
gs
fcomps
mov
decl
je
xorl
dec
mov
dec
scas
addr16
pusha
pop
loope
adc
xor
inc
iret
nop
cmpsl
jno
mov
pop
pop
or
pop
push
insb
fsub
cmpsl
add
dec
lds
out
pop
pop
and
fstpt
aaa
imul
loop
or
or
imul
aas
dec
push
dec
sbb
cwtl
shll
lods
jecxz
into
je
sub
mov
movsb
xchg
push
mov
cs
scas
mov
and
adc
sti
pop
nop
repnz
push
cs
jecxz
out
hlt
cmc
mov
in
sahf
sbbb
mov
sbb
cmp
inc
mov
std
xor
scas
lcall
mov
in
mov
push
insl
or
stc
hlt
outsl
jmp
loope
out
xchg
data16
daa
movsb
mov
push
pop
jnp
scas
or
shll
imul
mov
mov
sbb
inc
leave
dec
je
push
mov
and
mov
fs
jo
stc
lcall
or
iret
roll
enter
mov
movsl
gs
cli
xor
mov
jg
xor
mov
mov
lds
into
sbb
cmp
mov
push
mov
adc
clc
mov
mov
insb
sub
push
repnz
call
into
dec
and
jp
mov
jp
fs
push
shlb
xlat
cmp
lods
lcall
sub
negl
adc
sti
lcall
push
insb
out
and
push
xor
cld
push
cwtl
jg
stos
dec
sbb
in
test
adc
mov
jle
sub
mov
and
cmp
imul
mov
sub
mov
imul
pop
mov
ljmp
cmp
fsts
pop
dec
int3
mov
out
pop
push
fbld
fdivs
dec
bound
inc
jae
dec
out
mov
sbb
add
rorl
in
xor
pop
inc
fwait
and
jle
cwtl
xchg
add
cmc
push
movsb
add
ret
dec
cmpsl
jno
sub
vpermil2pd
and
icebp
iret
insl
outsl
dec
lea
adc
js
inc
jp
cmp
pop
xor
lahf
jb
mov
cmp
rorb
mov
icebp
mov
hlt
data16
jae
or
push
inc
cmpsl
fdivrl
sub
fildl
loopne
in
popf
jne
mov
add
xchg
insl
test
jecxz
cmpsl
dec
lods
lret
repnz
lds
addr16
xlat
inc
pop
push
dec
inc
int3
je
ficompl
std
cmc
push
leave
fisubrs
add
cltd
and
les
or
cld
fsub
dec
cmp
sti
xchg
pop
mov
mov
adc
lea
push
pop
sbb
cmc
pop
ljmp
or
lret
call
xchg
xor
into
push
stos
popa
sbb
adc
jo
dec
inc
into
cld
xchg
xorb
test
xchg
jne
fcoms
jb
push
dec
ret
mov
mov
test
adc
aam
in
rolb
push
cltd
mov
xchg
xor
sbb
loopne
aaa
or
jmp
mov
mov
mov
mov
mov
mov
test
sub
and
ljmp
in
fsub
xchg
sub
sbb
mov
pop
mov
lcall
popa
xor
and
xlat
arpl
lret
bound
or
dec
popf
xor
jp
insb
mov
mov
movsl
repnz
out
mov
sub
pop
nop
fcoms
int3
cli
test
rorb
jg
add
cmc
dec
lcall
dec
add
les
mov
inc
adcl
test
das
sti
mov
mov
imul
or
cmp
mov
nop
dec
test
fwait
adc
push
sbb
popf
inc
and
cltd
xor
inc
sbb
in
pop
sti
mov
imul
mov
cmp
mov
pop
cmp
jnp
sbb
xchg
mov
mov
pop
pop
es
repnz
cmp
push
iret
cmpsl
cli
xchg
xchg
and
movsl
clc
jnp
arpl
ljmp
adc
cmp
adc
xor
jmp
cwtl
fmulp
dec
je
addr16
imul
lods
bound
pop
add
push
xchg
cmpsl
adc
hlt
push
add
mov
mov
adc
pop
mov
add
inc
dec
das
int3
mov
pushf
cmpsl
cmpsb
pop
cltd
pushf
lcall
stos
data16
adc
movsl
mov
xchg
sub
mov
adc
ret
arpl
aad
aaa
je
in
jbe
sbbl
pop
lock
je
adc
out
xor
imulb
push
cmp
dec
das
cltd
je
rol
inc
pop
mov
inc
dec
jge
test
adc
sti
js
xor
xchg
or
or
push
fisttpll
cmpl
ror
jecxz
adc
fisubl
js
out
fwait
jg
adc
decl
ja
cmp
movsl
call
cs
iret
sbb
adc
cli
cmp
xchg
push
pusha
pop
sub
int
jl
into
fcoml
pop
iret
dec
sbb
leave
outsl
shlb
aaa
mov
out
or
lods
stos
fdivrs
shl
pop
dec
pop
cwtl
cmp
push
sub
into
lcall
adcb
sbb
jno
inc
push
lret
loop
mov
aad
push
scas
jecxz
sbbb
rcrl
inc
stc
out
test
sbb
inc
rcl
rcrb
popw
adc
in
mov
negl
mov
call
xor
into
pop
dec
xor
mov
and
cmpsl
push
push
mov
add
ficompl
in
or
xor
jo
popf
in
sbb
xchg
dec
shrb
hlt
stos
je
jl
enter
and
in
fmul
stos
mov
or
lret
loope
lahf
adc
add
hlt
mov
scas
jne
dec
and
mov
cmp
mov
sahf
sti
lahf
mov
mov
jnp
push
mov
nop
sti
adc
push
shrl
lods
inc
fsubrs
sbb
mov
in
fwait
mov
pop
inc
popa
andb
push
js
push
call
leave
sub
add
lea
sbb
aam
mov
cmpsb
icebp
push
inc
data16
jg
enter
stos
mov
xchg
popa
cwtl
sbb
inc
in
adc
push
out
push
int3
dec
adc
lods
cs
pop
add
xchg
popf
shl
push
stos
sub
mov
inc
int3
jl
mov
add
cmpb
inc
scas
fists
scas
xchg
movsl
fs
sub
and
xchg
sub
mov
loopne
out
rep
ja
dec
inc
mov
push
inc
jg
outsl
jecxz
outsb
popf
add
bound
cld
pop
fmul
scas
dec
enter
scas
inc
push
icebp
jle
xchg
cli
imul
imul
cltd
fiaddl
scas
lods
adc
mov
aad
adc
dec
sub
cld
cmp
dec
mov
pop
jle
pop
and
or
movsl
xor
mov
out
xchg
icebp
lret
push
jnp
repz
repz
mov
sbb
imul
mov
cmpsb
lret
or
sub
xor
mov
push
xorl
cmpsl
cmp
cmp
xchg
test
lret
pop
shlb
cmc
adc
and
ror
js
mov
mov
push
inc
pusha
sti
cs
inc
jp
cmpsl
xchg
lret
jne
sarb
sub
movsb
and
push
cmp
jecxz
and
cmp
or
pop
jne
cmp
daa
mov
out
xor
lds
sti
imul
andb
test
insl
int
push
mov
adcl
push
add
jecxz
lock
mov
lds
lret
imul
mov
jne
mov
push
cs
and
mov
mov
mov
adc
adc
addr16
cmp
push
jb
loope
lods
adc
fdivrl
adc
adc
shll
sub
push
push
pop
pop
adc
sbb
sbb
mov
loop
int
mov
cmc
adc
jge
into
add
mov
in
inc
jae
jns
cwtl
ds
add
jae
xor
pop
xor
mov
sbb
dec
mov
lcall
add
cltd
adc
clc
ljmp
clc
out
mov
or
pop
fcoms
xchg
cli
inc
inc
cmp
add
lcall
mov
push
mov
es
xchg
mov
adc
add
sbb
mov
outsl
testl
cmp
stos
push
cltd
mov
or
push
push
add
xchg
sbb
mov
sahf
lahf
jne
jge
jbe
or
and
lret
fs
pop
jle
addr16
sub
jbe
fucomp
test
sbb
sarl
sub
xorl
rol
cmp
frstpm(287
mov
loopne
xchg
push
imul
inc
leave
xor
or
repnz
push
sub
jg
jmp
int3
mov
fidivl
sub
or
cmp
sub
cmpsl
popf
ficoms
in
dec
leave
xchg
je
cld
stc
aaa
jnp
lods
mov
add
popl
push
stos
das
imul
pop
xor
xor
hlt
pop
pusha
jg
push
loope
cmp
sbb
cmp
int
add
or
dec
mov
or
mov
ljmp
pushf
push
xchg
fmull
repz
or
adc
testl
dec
sub
dec
movsb
sub
loop
cld
xchg
mov
loope
or
fidivl
add
cmpsl
or
add
call
outsb
lea
cmp
ljmp
pop
in
inc
cmp
sbb
inc
arpl
popf
pop
mov
inc
and
imull
sbb
cmp
push
sbb
sub
in
in
in
xor
dec
or
stc
or
ret
hlt
cli
neg
cmpsl
test
or
pop
mov
aas
outsl
in
in
cltd
mov
xchg
aad
popf
out
xor
pop
mov
cmp
sub
cld
enter
pushf
and
popf
insb
into
mov
xchg
das
movsl
xchg
in
jb
clc
rorb
movsb
and
roll
scas
sti
sub
lds
icebp
scas
arpl
hlt
insl
idivl
lahf
addb
jge
hlt
xchg
mov
enter
adc
jbe
scas
cmp
outsl
jmp
pushl
scas
pop
pop
inc
jmp
jae
or
loope
mov
xor
lds
push
push
dec
out
shlb
or
cmpsb
pop
jp
mov
jecxz
inc
add
add
xchg
mov
sarb
mov
rclb
sahf
les
pop
adc
arpl
inc
mov
icebp
mov
out
inc
popf
out
sti
scas
arpl
les
jge
fwait
ljmp
mov
xor
jp
adc
and
jp
in
iret
sbb
movsb
add
xchg
add
push
dec
aas
adc
ret
mov
sbbb
test
or
push
pusha
inc
xlat
adc
adc
imul
jecxz
push
sbb
mov
repnz
jno
aaa
pop
push
frstor
loope
leave
lds
jecxz
mov
icebp
and
push
test
das
out
shrl
or
inc
jle
mov
xchg
dec
pop
js
nop
jge
and
call
lcall
movsb
fcoml
ss
pop
add
sub
jns
pop
mov
jo
xorb
mov
shlb
inc
sbb
in
cmpsb
mov
mov
and
xchg
push
jecxz
push
xchg
inc
mov
popf
inc
lret
xchg
das
pop
dec
popl
sahf
stc
lahf
sbb
inc
into
pop
sbb
fdivr
sarb
add
and
cmpsl
cs
mov
push
pop
inc
mov
int
pop
push
push
jo
pop
mov
ret
mov
inc
lret
pop
inc
mov
mov
push
mov
inc
in
hlt
mov
and
mov
nop
mov
mov
dec
das
fdivrl
dec
lods
sub
cmp
rcrl
dec
cmp
dec
adc
add
jns
sbb
cltd
jns,pt
cwtl
mov
push
in
out
stos
and
es
jns
mov
mov
fldt
jae
sub
shrb
inc
cmp
clc
add
int3
push
movsl
adc
aam
popa
pushf
adc
daa
outsl
shrb
adc
imul
jno
lea
jg
out
jnp
aas
clc
lahf
xchg
adc
roll
push
insl
ja
and
push
or
rclb
das
insl
fiaddl
mov
dec
sub
cmp
bound
xlat
jns
cwtl
hlt
cmpsl
out
jbe
lea
mov
les
sbb
sub
imul
mov
add
xor
mov
call
sub
sub
add
jge
sbb
xor
out
mov
add
or
xchg
popa
rorb
push
xor
addr16
cmp
dec
xchg
test
into
jno
mov
cltd
icebp
jle
iret
jnp
sbb
cs
inc
mov
dec
dec
pcmpgtw
push
mov
jbe
orl
insb
in
movsl
sahf
xor
imul
dec
scas
xor
mov
test
lock
mov
cmpsl
jmp
and
push
test
sbbl
xor
xchg
arpl
adc
mov
outsl
dec
movsl
mov
pop
cmc
scas
push
lret
movb
ficomps
lea
mov
clc
jae
data16
and
mov
outsb
adcb
and
nop
add
out
xchg
ds
ficoml
pop
cmp
jmp
test
jae
fwait
pop
xor
mov
adc
mull
ret
mov
push
adc
pop
cli
pop
sub
test
lret
ljmp
pop
xchg
xchg
xchg
adc
scas
rcl
sahf
pop
test
ss
sub
jnp
xor
or
lock
jb
outsl
cmpb
daa
sub
sbb
xlat
daa
mov
sbbl
xor
pusha
xor
in
inc
test
sbbl
pop
adc
lds
adc
pop
in
mov
adc
fstps
sub
cld
ja
movsb
mov
addr16
fwait
outsb
stos
loope
mov
enter
sub
fcmove
mov
cli
les
movsl
test
pop
sbb
and
jp
sub
lcall
xor
ljmp
aad
cmpsb
pop
inc
aas
insb
push
sbb
imul
adc
xor
ds
sahf
push
std
cmp
inc
enter
xchg
imul
bndldx
xchg
xchg
pop
dec
repz
pop
dec
fadd
stos
in
jmp
and
das
adc
stos
imul
sti
mov
push
rcrl
enter
out
outsb
push
mov
test
push
popf
cmp
dec
rolb
xchg
inc
rorb
and
xchg
ret
mov
cltd
inc
rcll
adc
sar
mov
inc
jbe
fcompl
pushf
nop
mov
sbb
mov
aad
push
rolb
mov
loop
pop
mov
aaa
adc
ja
pop
rcll
dec
dec
mov
cltd
push
fwait
push
dec
or
aaa
cli
mov
cmp
xchg
mov
xor
cs
ja
jnp
shlb
bound
dec
mov
int
sbb
inc
or
cmp
out
rorb
outsl
pop
addl
mov
fs
mov
lret
nop
dec
mov
jle
outsb
test
adc
ret
das
add
xchg
repz
lret
xchg
stc
mov
stos
sbb
test
loop
dec
popa
jo
loope
mov
sti
test
push
cmpb
imul
aad
das
shll
out
out
jno
inc
lea
pusha
pop
test
insb
mov
sub
mov
clc
sbb
xchg
mov
jle
out
int3
jl
xchg
sub
pop
push
int3
mov
inc
inc
adc
cwtl
rorb
and
arpl
sbb
mov
ss
cmp
pop
pop
mov
dec
mov
shlb
dec
scas
or
loop
cmp
les
sti
xor
or
sub
movsb
pop
rcl
xor
dec
popf
push
pushf
inc
xchg
lock
push
xchg
push
and
bound
xchg
aaa
fisubrs
adc
sbb
out
sbb
popa
movsb
out
aas
test
add
repz
or
push
dec
imul
xor
fcompl
and
push
add
mov
jl
sbb
sub
test
sub
jae
cld
test
adc
das
inc
xchg
push
push
or
idivl
sarb
mov
out
lret
push
nop
push
push
inc
aaa
sub
mulb
sarb
xor
push
movsl
push
popa
leave
sbb
sub
sbb
inc
cmp
inc
add
movsl
ss
push
adc
cltd
xlat
fwait
lret
cli
sahf
movsb
sub
les
in
insb
pop
shlb
push
mov
fwait
out
add
sub
aas
js
inc
or
jle
pop
xchg
mov
mov
stc
mov
fildll
popf
push
add
je
stos
lahf
lds
aas
sub
xor
pop
repz
daa
das
in
xchg
xor
stos
nop
shlb
loopne
inc
mov
fs
lcall
xchg
mov
jecxz
sbb
jmp
insb
add
jbe
sub
into
mov
aas
xchg
leave
jp
push
cmp
mov
je
cli
mov
and
cmp
xchg
jo
hlt
sub
fmull
loopne
ljmp
inc
rorl
fbstp
add
call
mov
sbbb
adc
sub
jne
push
out
jl
pop
pop
cmp
aad
clc
push
das
int3
scas
add
mov
test
paddsb
je
lcall
mov
jge
mov
xor
lret
lds
cmp
fwait
ss
xchg
xchg
inc
pop
int
or
cmp
cmp
mov
adc
push
push
sub
rorl
mov
inc
fwait
lock
push
cmp
cmp
push
out
adc
arpl
push
xor
sub
cmpsb
xchg
imul
movswl
jno
leave
adc
sarb
jno
ret
mov
je
dec
push
ficoms
xlat
push
test
xor
add
lods
push
cmp
or
mov
hlt
mov
pop
sbbl
in
out
sub
stos
sarb
imul
push
and
std
mov
or
push
cld
push
mov
shrl
sub
shlb
mov
dec
aaa
pop
add
leave
data16
cmpsb
cmp
dec
push
mov
xchg
fsts
sbb
xlat
outsl
movsb
hlt
subb
jnp
movsl
ljmp
pop
push
xor
pop
and
xchg
jp
mov
movsb
push
mov
jl
xor
outsb
xor
cwtl
pop
or
xlat
pop
movsl
int
data16
adc
jg
pop
mov
dec
mov
mov
jae
out
ja
and
or
xor
sbb
push
fnstsw
mov
mov
mov
push
ss
sbb
jo
shl
mov
sahf
lret
jl
inc
jnp
push
add
mov
jp
out
mov
or
lea
push
xchg
mov
daa
icebp
push
jp
movsb
cld
stc
sbb
dec
dec
cwtl
sub
cmp
cltd
lcall
cltd
adc
call
sbb
xor
xlat
les
push
mov
pusha
push
in
mov
fs
imul
sbb
sbb
adc
add
inc
xchg
xchg
lret
fsubs
push
inc
and
mov
cmpw
sub
or
sbb
push
push
es
or
fs
push
sub
adc
fnsave
das
pop
sbb
shrl
mov
js
mov
ss
ljmp
fidivrl
sbb
push
leave
repz
xor
xchg
es
les
out
push
inc
test
add
icebp
push
fimull
insl
pop
add
inc
rorl
sub
sub
xchg
mov
fdivrs
int3
lcall
bound
stos
insb
movsl
jg
cmpsb
ret
call
insb
test
xor
sub
adc
jo
outsb
mov
mov
xchg
lcall
pop
mov
das
sub
or
or
mov
mov
into
pop
mov
notb
or
xor
lock
sbb
es
jnp
xchg
js
xchg
test
and
lods
mov
lcall
aad
shlb
push
std
cltd
idivb
jp
enter
mov
aaa
push
into
pop
ret
loop
and
fs
push
lahf
cli
rclb
aad
data16
inc
clc
push
pushf
mov
fbld
gs
mov
loopne
in
sub
cmp
jmp
sbb
mov
cmc
mov
or
pop
pop
and
or
pusha
int
repnz
aaa
push
xor
push
xchg
repz
add
rclb
sub
andb
xor
test
fstpl
cmp
xchg
nop
xlat
sub
pop
pop
cmp
xchg
cmp
pop
loop
pop
sbb
xlat
or
dec
sbb
xlat
cwtl
stos
fwait
dec
ljmp
mov
imul
inc
je
push
cmc
lds
clflushopt
aas
sbb
fidivl
xchg
les
icebp
sbb
aad
bndstx
jp
mov
or
sbb
dec
lock
sub
fsubs
jno
cld
xchg
mov
sarl
je
or
and
inc
and
xchg
inc
pop
je
pop
add
jo
pop
push
and
loop
out
xchg
shlb
adc
jp
loope
xchg
jp
xor
adc
jnp
data16
pusha
adc
jno
mov
daa
rcrb
push
in
pop
negb
xchg
sub
cmp
js
lds
cmp
pop
loop
fnsave
inc
mov
pop
push
and
cli
inc
xor
repz
adc
inc
imul
ror
cmp
out
cwtl
mov
push
call
mov
cmpsl
dec
mov
shll
aam
or
cmp
mov
jl
test
add
pop
mov
push
jecxz
mov
pop
mov
xchg
shrb
std
add
inc
sbb
outsl
push
test
imul
out
outsl
push
mov
add
mov
loopne
mov
aad
dec
and
push
jg
clc
cmp
dec
and
mov
sub
inc
icebp
sub
adc
imul
adc
paddb
and
jns
sbb
push
js
mov
inc
cmc
jo
jp
movsb
addr16
sbb
aam
loopne,pn
lcall
jmp
sbb
and
pusha
rcll
pop
jns
frstpm(287
cmp
mov
sub
push
mov
out
adcb
and
nop
jbe
test
pop
sbb
sahf
andl
jle
cmp
int3
pop
mov
cmp
fdivs
shlb
pop
daa
xor
das
insb
add
and
lock
std
xchg
fwait
xor
jno
pop
xchg
aad
inc
mov
or
arpl
rorl
add
test
int3
mov
aam
pop
mov
jb
out
lods
push
xchg
movsb
popa
sarl
or
cltd
daa
std
cmp
inc
add
pop
push
cmpl
outsb
fs
add
ss
mov
lods
push
dec
shrl
mov
jo
mov
jae
ret
pop
and
in
outsb
jl
mov
dec
fcompl
mov
dec
sub
mov
dec
sbb
sub
insb
inc
subb
aaa
mov
cmc
or
cwtl
xchg
pop
jge
fldcw
sbb
je
fs
and
decl
mov
cmp
adc
push
hlt
jbe
and
or
lds
pop
xor
and
lcall
inc
nop
xchg
icebp
xchg
in
adcb
aam
xor
outsb
out
jl
outsb
sahf
xchg
push
push
sub
stc
cld
aad
xor
jmp
movsb
addb
fcompp
sub
es
add
repz
cwtl
cli
and
sub
xchg
sahf
and
add
mov
xchg
js
stos
in
jle
es
dec
jne
dec
mov
fdivl
fidivs
dec
movsl
pop
xchg
inc
sub
xor
xchg
ljmp
fs
xor
push
pop
xor
xor
inc
jnp
iret
cmpsb
dec
push
add
push
xchg
loop
pop
into
xchg
sar
inc
inc
mov
dec
jl
or
adc
mov
pusha
pop
jge
rcr
nop
add
inc
rdmsr
adc
ret
repnz
sub
add
jp
scas
mov
ficoml
jp
lahf
mov
mov
inc
or
and
pop
data16
mov
pusha
lods
xor
xchg
gs
xchg
jb
mov
dec
ret
cld
cmc
dec
xlat
or
andl
jbe
xor
xchg
fsubrp
lods
pop
xchg
push
pop
mov
cltd
lods
jns
aam
mov
pop
movsl
jmp
lods
sub
arpl
and
es
notl
inc
fwait
test
dec
addr16
inc
mov
add
fbstp
mov
subb
int
dec
inc
dec
flds
mov
xor
dec
mov
ss
mov
lcall
and
mov
cld
rcrl
sbb
sbb
jecxz
dec
out
test
or
in
lcall
push
mov
loopne
jg
adc
cmp
xchg
xchg
mov
or
rcrl
push
mov
cmp
aas
int3
inc
je
inc
sti
daa
mov
pop
and
pop
int
push
insl
enter
fsubrp
sahf
in
ljmp
push
fimuls
cmp
inc
pop
leave
mov
or
icebp
cmpsb
xchg
popa
xchg
xchg
inc
subb
add
or
and
imul
aam
jnp
sar
mov
mov
loop
push
jl,pt
add
and
jo
mov
cmp
std
sub
outsb
aas
cmpxchg
addb
inc
xor
stos
fs
data16
mov
lock
jmp
gs
ret
inc
xchg
ljmp
sub
sbb
pusha
jmp
or
cmpsl
out
mov
push
push
lcall
push
nop
fisubs
push
xor
cld
imul
or
mov
xor
dec
andl
adc
scas
sbb
ret
mov
mov
cmc
mov
dec
xchg
scas
hlt
bound
and
movsb
add
js
loop
int
adc
xor
add
hlt
fiaddl
inc
aas
fidivrs
imul
xor
jnp
jno
add
add
dec
gs
fwait
sub
jae
mov
cwtl
imul
inc
rorl
outsb
leave
imul
mov
gs
lcall
push
ljmp
imul
inc
jp
adc
inc
mov
xchg
mov
pop
cmc
repnz
outsl
sub
inc
jnp
ffreep
in
adc
es
mov
jecxz
sbb
xor
mov
call
mov
in
stos
xchg
sub
mov
test
stos
mov
add
adc
mov
sub
sub
fisubs
jmp
xchg
in
xchg
insl
sbb
ja
ret
testl
xlat
xor
sub
inc
stos
push
repnz
mov
bound
mulb
xchg
movsb
mov
ret
sbb
insl
pop
stos
scas
das
push
iret
push
pop
fdivl
lret
hlt
or
push
pop
ret
out
imul
insb
out
xchg
xchg
in
scas
out
sub
dec
or
pop
sub
mov
mov
add
adc
jp
cmpsb
pop
sqrtps
pusha
ss
negb
cmp
jge
xchg
xor
dec
mov
xor
push
fyl2xp1
scas
stos
mov
push
inc
imul
pop
movl
mov
lods
aad
xlat
sub
dec
cmp
in
lahf
stc
fcompl
aam
push
push
pop
mov
or
repnz
test
inc
xchg
jne
inc
mov
jb
bound
fimuls
in
lods
lods
add
fs
in
push
scas
adc
cmpsb
test
arpl
add
xlat
and
int
inc
shrl
push
inc
mulb
lea
dec
and
add
mov
inc
sbb
aam
out
sub
sbbb
fwait
push
je
jmp
fdecstp
hlt
mov
and
pop
jne
cmpsb
xlat
inc
mov
cmpl
ja
outsb
xchg
xor
sbb
push
xor
cmp
jnp
in
pop
or
cmc
gs
pop
les
in
movsl
xor
pop
sbb
das
lds
out
pop
or
cmpsb
int3
pop
notb
cmp
decl
lds
cmpsb
in
jl
int
cmp
fldt
jbe
aaa
xchg
mov
or
test
rcll
jae
pusha
or
inc
sbb
xchg
jno
ja
in
pop
mov
sbb
xchg
test
jecxz
ss
lcall
push
mov
inc
shrl
jmp
int3
mov
push
cmc
pop
pushf
pop
repz
icebp
add
cld
ds
adc
mov
dec
test
outsb
ret
repz
xor
mov
push
out
stos
pushf
cmp
mov
adc
jo
dec
daa
test
cmp
repz
mov
lods
ss
xchg
mov
inc
adc
sbb
pusha
mov
jl
nop
sbb
dec
dec
cwtl
add
jne
lds
pop
je
jno
push
orb
add
inc
dec
mov
sub
shrl
scas
push
mov
or
js
inc
fisttpll
inc
inc
rorl
mull
mov
dec
lret
or
sahf
faddp
in
sbb
mov
adc
inc
mov
xchg
push
div
inc
call
pop
pop
sub
mov
call
movl
aad
sub
ret
imul
faddl
and
xchg
insl
cmp
add
imul
jmp
pop
inc
test
jo
movsl
data16
jmp
lea
pushf
lahf
cwtl
popa
add
je
dec
pop
call
divl
mov
fdivr
and
out
inc
clc
rcrb
xchg
xchg
out
mov
push
in
out
ficoml
fidivs
out
test
addb
movsl
adc
inc
stos
aas
inc
ljmp
daa
mov
arpl
push
add
insl
fmuls
inc
jo
dec
push
mov
gs
xor
lods
aam
push
cli
insb
fdivs
int
pop
mov
ret
lret
add
sub
in
loopne
in
in
dec
mov
rcrb
pop
clc
jo
lods
out
push
fisubrs
sub
mov
test
mov
sbb
xchg
lret
mov
cmp
adc
fldcw
dec
dec
xlat
movsbl
sub
andl
enter
call
inc
or
push
loop
adc
inc
aas
lds
mov
sub
rcl
xor
into
cmp
push
pop
movsl
jmp
cli
test
xchg
pop
or
add
cmp
loopne
sbb
xor
jge
sbb
incl
outsb
cli
outsb
and
hlt
mov
jbe
ljmp
mov
push
push
mov
cmpsl
mov
mov
cmpsl
shll
bound
jno
js
movsl
ret
out
and
mov
add
push
sti
movb
sub
sbb
ja
cs
push
xlat
nop
movsb
mov
pop
or
or
test
insl
das
pop
imul
add
jb
and
test
sbb
cmpsb
sbb
and
add
pop
je
mov
jl
push
addr16
and
loopne
jl
fxch
mov
insl
xorl
dec
dec
push
enter
ss
push
mov
xchg
inc
dec
and
or
shrb
psubw
jo
aas
mov
cmp
sbb
mov
mov
push
out
in
sti
mov
fldt
add
mov
push
mov
out
dec
or
outsb
shl
rcll
aad
push
in
pop
cmp
mov
pusha
sub
movsb
aad
jle
leave
dec
clc
cs
cs
imul
or
gs
inc
cmc
imul
jnp
jno
lods
movb
sti
decb
dec
inc
js
sbb
fisubrs
xor
add
xchg
popa
cld
movsb
subb
fmull
cmc
iret
loope
in
mov
popf
jae
shlb
inc
fisttps
int3
sub
mov
js
insl
lock
pop
jecxz
ja
sbb
pop
mov
add
rcrb
fldenv
pop
xchg
lods
fstpl
jecxz
inc
push
cmc
jns
cs
sahf
outsl
or
push
jo
xchg
decb
pop
mov
pushf
test
inc
jae
add
lds
lods
or
inc
push
mov
jl
repz
inc
jl
push
rclb
jnp
test
adc
arpl
adc
cmc
cld
add
inc
mov
mov
pusha
test
shrb
and
ss
aaa
shll
aas
shrb
test
cs
aad
add
and
mov
jecxz
test
sahf
inc
rcll
aad
push
adc
jp
mov
and
sub
gs
je,pn
negl
push
icebp
jp
jae
fistl
cltd
jb
mov
jns
mov
mov
jnp
xchg
mov
mov
pop
push
lock
lock
xor
pop
popf
ds
sbbl
add
jl
mov
mov
enter
xchg
test
sub
add
dec
insl
inc
pushf
adc
rorl
sub
fs
std
cmp
out
movsb
mov
sbb
std
mov
adc
inc
fildll
imul
and
rcll
mov
btr
pop
out
loop
loope
sub
outsb
sbb
mov
ffreep
lods
mov
lea
hlt
lock
js
push
and
inc
pop
mov
fs
mov
cmpsb
cwtl
jnp
jbe
std
cmp
or
pop
cld
mov
imul
cmpsb
hlt
addr16
out
mov
scas
cmp
ret
adc
pop
fcomi
mov
clc
shrb
adc
dec
pop
sahf
mov
add
into
fcompl
insl
lea
cltd
mov
insl
sbb
dec
pop
xchg
mov
inc
xchg
pop
mov
mov
cmp
jae
xlat
sbb
int3
adc
jnp
and
cmp
jmp
mov
lods
mov
stos
cltd
sub
xor
testl
orb
pop
insb
adc
in
frstor
cmpsl
mov
cwtl
jg
mov
ret
lcall
xchg
cld
test
jno
mov
mov
outsl
xchg
mov
bound
or
dec
loopne
xor
jmp
arpl
pop
call
cmp
rcr
pop
cld
mov
sbbl
xchg
xchg
cmp
imul
js
bound
mov
and
jnp
xchg
daa
sub
inc
jge
rorl
cmp
inc
std
adc
in
add
mov
mov
jne
addr16
rcll
js
dec
add
xchg
and
ret
inc
mov
data16
sbb
pop
sarl
jo
mov
pop
jle
xor
clc
bound
movsl
gs
es
rolb
mov
xchg
xlat
movl
rorl
lret
jb
cmpl
xor
cmp
xor
mov
or
jg
xor
fcomp
jb
lret
imul
adc
mov
add
sbb
mov
and
lret
ret
mov
in
cmp
sbb
mov
fs
cwtl
daa
xchg
xchg
pop
inc
mov
push
call
jo
sbb
push
pop
addr16
add
fmull
cmp
lds
imul
divl
into
sub
push
dec
xchg
pop
jp
lahf
clc
enter
fwait
movsl
or
xor
insl
jg
pop
mov
adc
lods
pop
cmc
in
dec
sbb
repnz
dec
inc
pop
cli
in
test
inc
dec
fildl
outsl
or
xchg
lds
dec
mov
test
pop
add
and
add
in
lods
jb
cld
dec
or
out
rorl
lcall
add
sub
out
nop
fwait
adc
mov
les
cld
int3
and
cmpsb
ljmp
jmp
jb
insb
add
cmp
ja
enter
in
ret
fldenv
xor
or
lcall
jp
xchg
lods
int3
jns
sbb
out
cmpsl
mov
mov
mov
dec
hlt
pop
scas
ja
bound
enter
aam
cmp
and
nop
xchg
call
pop
scas
mov
shl
mov
jle
in
mov
push
add
enter
sub
inc
xchg
test
sarb
adc
stos
inc
lds
mov
add
outsb
push
jecxz
mov
stos
shrd
rorb
aas
dec
daa
lods
jp
lcall
and
ret
ret
nop
adc
mov
call
dec
xlat
inc
cmp
lock
lods
lret
pusha
cs
mov
jae
jae
mov
mov
je
pop
cmpl
pop
dec
mov
sub
xor
call
ffree
xchg
inc
mov
and
cmp
cmpl
mov
movsb
in
xchg
dec
nop
sbb
sub
xor
mov
cmp
mov
mov
add
inc
xchg
jno
pop
push
rcrl
jo
out
fs
jl
push
out
out
mov
aas
inc
mov
xor
out
sbb
pusha
pop
add
aad
das
jnp
icebp
test
jecxz
outsb
sub
aad
push
fsubrl
fstpt
inc
into
mov
adc
jae
loope
cmp
sub
repz
dec
cli
cmp
mov
xor
dec
cmp
xor
arpl
pop
outsl
mov
outsb
das
and
cmc
or
mov
mov
leave
or
pop
bswap
int3
testl
mov
jecxz
sarl
dec
std
push
dec
sbb
les
sub
mov
scas
pop
cwtl
mov
shrl
stos
xor
ljmp
jl
sbb
mov
das
sbb
fisubrs
ja
les
iret
bound
mov
ret
mov
loop
lret
loop
push
add
insb
or
mov
movsl
push
mov
shlb
and
shll
aas
jmp
adc
jp
sub
test
jb
sub
shlb
mov
lock
fcmovb
int
xchg
or
aam
mov
sbb
pop
stc
adc
clc
adc
push
mov
mov
loop
icebp
icebp
scas
dec
pop
shlb
inc
push
jbe
xor
xor
pop
add
das
jns
ljmp
insl
fcoms
pop
aad
mov
sub
mov
shrl
cwtl
repnz
cmp
add
sbb
xchg
pop
mov
sub
jno
mov
addr16
xor
sub
mov
lret
jmp
xor
and
add
jmp
sub
loopne
jl
test
xor
mov
loopne
inc
push
inc
cmp
lock
sbb
cmp
mov
leave
into
inc
outsl
ja
jl
nop
inc
ds
mov
roll
sbb
adc
lea
adc
xchg
xor
mov
imul
test
incb
mov
sbb
adc
sub
loopne
sbbl
xchg
mov
and
add
mov
mov
mov
fnstcw
outsb
pop
repz
adc
mov
pop
ret
mov
les
jge
jp
scas
mov
ljmp
fisubrl
jmp
sub
sbb
and
movsb
pop
xchg
clc
test
mov
mov
shrb
dec
cwtl
add
cs
push
xor
add
or
push
and
pop
arpl
sbb
in
mov
ss
mov
cmp
push
push
leave
outsb
dec
push
add
pop
ja
ds
push
push
pop
and
dec
dec
jp
dec
mov
je
pushf
jno
int3
fdivrp
lahf
ret
adc
scas
inc
inc
mov
and
es
sbb
fwait
push
mov
shll
jmp
in
inc
ds
lods
cmp
bound
pushf
lret
sub
jmp
loopne
sbbl
xchg
push
sldt
or
cltd
and
jno
scas
jle
in
in
enter
dec
inc
sbb
lgs
sbb
mov
test
mov
pop
push
shrl
mov
daa
andl
xor
and
adc
fdivl
ss
add
xor
fs
push
inc
and
loope
add
cmp
sbb
xor
xchg
cli
stc
loope
ret
or
sbb
push
out
out
mov
fsts
push
push
xor
adc
sub
sub
pop
sbb
mov
shrl
push
jnp
push
movsl
loope
daa
add
outsb
sbb
adc
les
xchg
push
push
jne
or
ljmp
leave
add
mov
push
ljmp
insb
xchg
and
xor
or
inc
test
dec
out
test
adc
out
iret
pop
rolb
outsl
sbb
jb
daa
xchg
or
add
inc
popf
andl
aad
pop
push
fwait
testb
inc
jecxz
imul
add
adc
xchg
fwait
lea
or
fnstcw
cmpsb
cmpl
test
cld
movsb
or
push
out
jno
sub
flds
mov
push
icebp
call
cmp
or
jecxz
push
dec
movsb
mov
daa
mov
test
aaa
rorl
push
xlat
xor
pop
inc
rorb
adc
and
clc
xor
punpckldq
pop
sbb
xchg
mov
xchg
addr16
cmp
and
pusha
test
pop
adc
add
mov
adc
sbb
aas
jg
fldcw
shlb
lret
push
sub
jns
and
push
andl
lds
jns
sub
ss
jno
or
jmp
xchg
fcomi
inc
sbb
jnp
push
mov
scas
or
push
fsubrl
mov
mov
or
cmp
push
scas
mov
adc
or
mov
int3
xor
arpl
imul
in
push
fnstcw
cmc
dec
sub
incl
add
test
and
mov
xor
pop
pop
cmp
hlt
pop
repnz
imull
push
pop
sub
xchg
cli
push
cltd
call
jecxz
adc
iret
lds
xchg
sbb
inc
hlt
or
dec
sahf
imul
cmp
or
inc
jge
or
fs
mov
sahf
in
mov
mov
in
jbe
out
pop
add
outsb
stc
mov
dec
fisttps
adc
jbe
popa
fimull
mov
pop
out
add
mov
and
pop
mov
outsl
pop
shlb
stos
int3
into
lahf
adc
sub
jp
dec
inc
sahf
out
push
mov
outsb
sub
xchg
xor
test
lock
cmp
iret
add
and
inc
je
mov
xchg
mov
int
addr16
cmp
sbb
or
into
out
loopne
ret
lret
sub
fmuls
jb
push
jmp
fidivl
sbb
add
out
lret
xchg
insl
je
addl
lret
inc
cmp
mov
out
fisubrs
xor
and
mov
test
ror
xor
mov
mov
fwait
sbb
insb
testb
and
xchg
ret
outsl
push
inc
popf
sbb
cld
xchg
fdivs
or
mov
inc
pop
lock
loop
loope
add
or
push
cmpsl
mov
out
insb
xor
push
mov
jp
or
cmp
add
pop
and
mov
in
xor
xchg
push
je
fldenv
or
push
xchg
pop
sbb
mov
jmp
or
gs
sbb
inc
xchg
adc
mov
dec
jl
xor
xor
add
test
sbb
mov
data16
mov
nop
popf
cld
xchg
ja
ss
fwait
adc
test
jl
jae
ss
pop
cmp
les
mov
mov
test
xor
int3
sti
pop
out
push
dec
mov
cmp
fs
xchg
jg
mov
sti
xchg
pop
jle
mov
out
mov
ds
fnstsw
and
inc
test
stos
jns
cli
xchg
push
jbe
popf
mov
xor
aaa
mov
jge
lock
mov
cmp
aas
xor
shl
cmp
cmp
aad
or
fwait
sub
test
add
and
push
pop
pop
sbb
clc
out
mov
sbb
ja
and
movsb
pop
inc
inc
add
pop
cltd
push
scas
mov
adc
push
mov
jb
push
into
dec
data16
loopne
mov
cmp
push
jbe
and
scas
out
dec
lcall
sub
xchg
in
adc
jecxz
push
stc
jg
inc
aaa
cltd
cs
ljmp
pop
inc
pop
jl
inc
ja
push
pop
stc
sub
dec
jb
push
aas
jmp
jg
pusha
aam
negl
jnp
mov
clc
scas
test
cmp
test
sub
add
int3
sbb
jmp
pop
jbe
mov
sti
add
aaa
or
outsb
jbe
and
dec
ljmp
ret
or
sbb
lahf
fstps
pop
adc
mov
jno
fmulp
fwait
xor
adc
leave
lock
mov
push
adc
cltd
mov
mov
je
and
inc
fiadds
repnz
shlb
jbe
aas
scas
dec
shlb
mov
ljmp
jecxz
outsl
xchg
sbb
data16
mov
imul
jg
inc
in
cmpsl
dec
sub
sbb
sbb
scas
sti
inc
test
imul
sbb
xor
pop
push
xchg
mov
jae
cmp
xor
mov
jbe
inc
jle
mov
xor
in
jl
sbb
fmull
lock
call
lds
ret
xchg
scas
pop
insl
add
scas
dec
fsubrp
jge
xchg
int3
mov
sbb
jmp
jno
cwtl
lret
mov
stos
in
cmp
xchg
repz
jb
out
sbb
shrl
adc
imul
stos
test
sbb
sar
mov
in
inc
iret
jecxz
and
mov
lret
mulps
int3
pusha
mov
cli
or
shr
ret
xor
loope
movsb
in
ret
sbb
push
les
pop
fdivs
xor
push
mov
leave
comiss
pushl
mov
clc
int
mov
push
ds
in
adc
and
mov
dec
fdivrl
jl
mov
call
push
adc
dec
rolb
mov
push
movsl
pop
ret
cmp
mov
add
es
push
push
sti
les
mov
loopne
outsl
ljmp
js
jle
jge
pop
push
cmp
fwait
enter
mov
imulb
dec
cs
lret
sub
je
inc
outsl
and
and
jno
push
pop
aam
aad
mov
xchg
mov
cld
pop
mov
repz
out
adc
cmp
xor
cltd
loopne
das
or
add
or
cmp
mov
mov
std
dec
test
xchg
ret
icebp
into
dec
ret
aas
daa
mov
xchg
movsb
mov
or
std
pop
hlt
cmp
ja
inc
push
jb
repnz
mov
ss
dec
int
sbb
mov
inc
divl
mov
xchg
loopne
movsl
iret
nop
jnp
movsb
mov
int
xchg
arpl
xor
or
sahf
repnz
icebp
jmp
nop
lea
adc
jne
ficoms
out
mov
sahf
nop
dec
movl
imul
jnp
outsl
mov
fwait
shlb
or
push
and
pop
loopne
xlat
stos
push
mov
addl
in
ja
lahf
xorl
lret
jnp
bound
lods
ret
xchg
fisubl
lahf
push
pop
push
cmp
mov
mov
inc
mov
adc
and
inc
movsl
cmc
xor
cmp
fimull
mov
sub
hlt
outsl
inc
cmovo
or
push
or
xor
iret
cmp
or
sbb
loopne
fwait
pop
daa
repz
imul
test
imul
push
add
sarl
cltd
dec
repz
std
in
pop
adc
ljmp
and
adc
pop
aas
dec
imul
jg
iret
cmp
sub
sbb
sub
xchg
pusha
sti
adc
adc
sub
test
xlat
lds
std
sbb
xchg
mov
jge
sbb
sbb
nop
es
inc
loope
inc
or
mov
pusha
jge
jmp
popf
and
push
fisubrs
call
into
ss
stos
sbb
xchg
sub
filds
lahf
stos
insl
jnp
cmp
mov
test
adc
xchg
int3
jo
pop
mov
std
sbb
xchg
push
push
fldl
lock
mov
scas
xor
add
sbb
sbb
cltd
ja
inc
in
cld
xlat
jmp
sbb
insl
pop
lahf
jnp
mov
jp
cmp
dec
movsb
cwtl
loopne
aad
sbb
lret
daa
sbb
popa
cld
push
push
adc
fcoms
or
pop
adc
xchg
jle
outsl
or
pop
dec
and
je
hlt
lret
call
pop
pop
fs
push
ljmp
repz
sbb
cs
add
out
push
stos
divl
iret
push
mov
dec
mov
sahf
jae
psrlq
sub
clc
mov
ret
out
add
pop
out
dec
pop
inc
mov
cmpsl
roll
inc
icebp
out
or
dec
add
lret
xlat
inc
jae
xor
mov
sub
and
fistpl
inc
cld
mov
orl
dec
inc
lcall
mov
inc
jge
lret
adc
ds
icebp
sbbl
jns
and
pop
or
mov
add
and
inc
pop
clc
jno
inc
pop
scas
jmp
mov
adc
imul
cmp
imulb
sti
imul
ret
jp
sbb
leave
cli
cltd
lds
int
and
movb
pusha
jge
inc
mov
int3
arpl
ss
push
inc
push
mov
mov
cwtl
adc
decb
add
test
xor
adc
jle
mov
mov
pop
rclb
jg
xor
sub
roll
lcall
pop
shll
std
xchg
xor
push
dec
testb
jnp
lcall
sub
mov
out
test
push
add
rorl
call
dec
fs
sub
mov
aam
pusha
xor
mov
rcll
and
stc
std
out
fsubl
jmp
dec
mov
xchg
mov
mov
mov
jae
inc
push
jnp
dec
aad
les
cmp
add
js
lahf
decb
push
aad
cs
cs
inc
push
leave
push
sbb
movlps
jge
stc
ret
js
sbb
pop
push
insl
mov
popf
fisubrs
inc
add
fdivrl
loopne
outsb
ret
lcall
pop
or
jne
pushf
sub
jg
xchg
xor
lret
sbb
sbb
je
ja
in
shlb
decb
aas
push
sarb
push
add
sti
mov
cli
dec
loop
pop
add
jmp
fucomp
or
add
loop
scas
fists
loope
push
xlat
and
cmpsl
lahf
and
and
out
loope
push
cmp
push
add
std
sub
jns
mov
or
je
xchg
mov
add
movsb
or
jg
jo
lods
jmp
das
or
mov
fs
pop
popa
fnsave
xor
mov
mov
stc
js
cli
jmp
int3
add
arpl
pop
inc
sbb
movsl
addr16
pop
aad
testl
std
nop
mov
and
insl
mov
inc
inc
push
jns
lods
and
cli
scas
ljmp
insb
mov
outsb
jne
xchg
dec
sbb
ljmp
sahf
xlat
mov
aas
ja
push
outsb
mov
fwait
xchg
ds
cmpsb
les
in
ja
sub
sbb
or
push
mov
ja
inc
ljmp
cs
and
jp
jmp
or
mov
mov
test
sub
sbb
mov
or
in
and
lcall
in
mov
pop
cmpsb
mov
outsl
add
cmpsl
adc
out
arpl
aas
jnp
mov
movsl
lods
daa
and
pop
lret
add
loope
jecxz
test
enter
in
push
adc
lcall
and
add
loopne
shufps
push
add
mov
and
movsb
int
and
imul
mov
lret
jne
aaa
xchg
andb
jg
or
jge
push
es
call
adc
out
or
lea
mov
push
and
test
sarb
push
mov
inc
mov
dec
pop
mov
jg
dec
sar
imul
xor
add
xchg
pop
movsl
cmp
test
push
test
into
xchg
ss
mov
call
data16
imul
test
aad
rclb
push
out
mov
repz
test
jmp
inc
xlat
or
or
adcl
out
jae
jbe
dec
js
notb
les
adc
xor
cmp
jno
jle
inc
mov
ret
repz
rolb
fimull
mov
pusha
dec
adc
lahf
xor
outsl
or
and
jmp
push
and
xlat
int
imul
dec
loop
xlat
je
pop
pop
scas
gs
jo
inc
dec
dec
add
pushf
pop
inc
add
dec
mov
jecxz
notl
iret
dec
cmp
hlt
mov
mov
jb
out
addr16
push
push
sbb
mov
cmpl
pop
insb
push
xlat
xchg
and
testb
add
cmpb
and
cmp
adc
inc
add
cmpsb
lret
fstps
xchg
add
xor
sahf
mov
lock
shr
cld
loopne
cmp
subb
les
xchg
jl
push
jg
in
sbbl
xchg
sub
xchg
mov
add
lods
mov
adc
call
nop
sub
addr16
test
pop
inc
push
outsb
les
in
dec
add
jae
xchg
mov
dec
fisttpl
test
pop
or
mov
imul
dec
movsb
adc
loope
pop
mov
sub
dec
popf
jmp
cld
and
lds
icebp
inc
cld
call
xchg
movsl
test
aam
cs
inc
inc
jnp
mov
cmp
xchg
loopne
loope
lds
cli
mov
in
stc
jb
or
dec
cmp
pop
cmp
jnp
stos
dec
ljmp
push
add
jle
aam
loopne
jnp
lods
mov
notb
jno
sbb
data16
js
dec
or
subl
mov
insb
cmp
or
adc
xchg
das
out
sahf
pop
adc
xchg
jns
xchg
divl
movb
and
scas
mov
xchg
adc
imul
cmp
sbb
pop
pop
enter
push
out
shll
std
les
or
or
jle
or
lea
stos
pop
out
cltd
outsl
lahf
ds
add
ret
mov
in
mov
gs
mov
mov
jle
inc
stos
pop
inc
sbb
sarl
xchg
push
adc
mov
pushf
bound
iret
mov
pop
jbe
shrl
movsl
ja
lods
movsl
dec
rorl
dec
or
cmp
pop
outsb
idivl
arpl
pop
popa
xor
cmpb
mov
mov
sahf
dec
dec
pop
repz
outsl
enter
popa
add
mov
popf
insl
test
daa
cmp
xchg
sbb
mulb
adc
scas
fnstcw
or
cmpsb
mov
xchg
rcr
pop
jp
jl
ljmp
fbstp
sahf
cmp
lea
xor
in
lods
out
lods
loopne
in
cld
cltd
mov
jns,pt
movsl
pop
std
inc
cmp
inc
into
xchg
push
pusha
mov
push
repz
lods
xor
popa
jno
lret
push
into
test
mov
cmp
or
ljmp
xchg
imul
fisttpll
jbe
push
and
xlat
int3
dec
xchg
js
xchg
call
out
pop
sbb
mov
push
pop
adc
lret
clc
addb
cld
and
rol
movsb
stos
lahf
lcall
and
ljmp
inc
mov
xor
popf
mov
or
or
mov
push
mov
std
adcb
fisubrl
or
pop
fcomi
scas
das
sub
sub
outsl
add
repnz
and
add
jbe
lds
inc
adcl
fcmovu
jb
xor
cmp
lds
mov
inc
jbe
lock
sbb
outsl
sbb
cmpsl
sub
in
pop
xor
or
xor
adc
mov
pop
hlt
dec
lea
fwait
and
add
xchg
cmp
negl
pop
cmpsl
js
mov
enter
fistpl
flds
sub
lret
fnstsw
das
scas
adc
icebp
dec
addl
pop
aad
lock
mov
arpl
jecxz
test
inc
sub
sub
inc
loopne
enter
lock
adc
push
cmpsl
jnp
jae
je
mov
jge
popf
sbb
cmpsb
pop
pop
push
jl
loop
aaa
outsl
flds
or
mov
xor
or
std
add
mov
ja
fcoml
pop
add
arpl
insb
call
jg
mov
popf
jns
shlb
fisttpll
test
je
ljmp
inc
jecxz
inc
xlat
xor
lret
pop
mov
in
sub
lods
in
lock
ljmp
xlat
fdivrp
insb
sbbb
inc
dec
addl
push
aaa
mov
out
fimuls
sbb
clc
inc
dec
lds
inc
notb
or
cli
shrb
test
push
gs
add
pop
loope
or
and
add
cmp
stos
aad
arpl
pop
jno
sub
roll
mov
push
mov
cmc
add
aad
in
sub
push
mov
dec
sahf
dec
mov
or
mov
mov
inc
jle
jb
gs
jo
int3
sahf
daa
jmp
out
addb
mov
sub
xchg
clc
pop
ret
jecxz
je
xor
popf
cmp
xlat
js
ret
shll
pushf
mov
aam
push
xchg
out
sub
pop
cmp
movsl
mov
arpl
or
pop
adc
push
scas
cmpsl
inc
fistps
bound
outsl
out
inc
xchg
mov
mov
or
fldenv
fwait
insl
xor
sub
xchg
out
cmp
js
mov
daa
ret
call
xchg
dec
mov
leave
pop
cmp
push
xchg
add
outsl
inc
push
lcall
sbb
imul
sbb
lret
in
inc
sub
je
jbe
mov
mov
mov
mov
pop
adc
mov
fsubl
mov
std
push
les
mov
mov
rcrb
jl
xor
mov
pop
adc
cmp
scas
rorb
jnp
cltd
push
push
push
scas
sub
and
dec
sbb
and
int
dec
outsl
or
mov
int
push
inc
sub
push
fucomip
loop
xchg
icebp
sbb
cli
pop
dec
pop
add
pop
outsl
inc
xchg
repnz
push
popf
out
iret
jle
add
enter
xor
pop
dec
add
xlat
xor
out
pusha
cmp
inc
int3
pop
sub
out
sarb
adc
add
les
jmp
test
mov
cmpsb
clc
cltd
fidivrs
ss
add
push
or
mov
movsl
je
test
push
stc
push
cmpsl
int3
stos
push
out
add
push
or
mov
mov
or
movsl
aam
movsb
sub
roll
rcrl
adc
mov
jo
dec
mov
pop
add
scas
push
js
cwtl
fistl
cmpsb
sbb
mov
lods
sbb
inc
mov
and
mov
add
xchg
mov
int3
mov
inc
jnp
dec
out
mov
sbb
jb
fsubrl
xchg
filds
mov
mov
inc
pop
or
mov
js
push
jo
and
push
sbb
pop
xor
call
mov
call
popa
cs
xor
mov
add
std
cmp
jl
xchg
mov
pop
mov
cmp
and
dec
testl
mov
inc
pop
cld
shlb
fbld
fidivrs
jns
xchg
loope
cltd
jo
adc
rcrl
inc
fiaddl
pusha
dec
addr16
cmc
imul
notl
add
and
jge
fnstsw
leave
cmpsb
repz
pop
pop
jecxz
lret
ret
add
imul
addr16
cmp
jbe
ds
push
cmpl
adc
adc
adc
xchg
pop
sbb
xorb
ja
mov
mov
scas
loope
bnd
sub
in
push
cmp
or
sti
int
inc
test
pop
repnz
movsb
push
inc
add
sar
or
or
cltd
mov
mov
jecxz
in
fdivp
dec
push
fbld
ja
mov
push
or
lods
enter
sub
stos
ret
jo
jns
call
pop
xlat
adc
aaa
insl
imul
xchg
and
dec
mov
add
icebp
icebp
imul
sbb
popa
mov
rorl
jo
test
adc
cmp
sbb
jg
rol
jno
scas
loop
cmp
xchg
cmp
in
test
inc
mov
add
xchg
mov
addr16
sbb
inc
jl
inc
cmpsl
xchg
enter
pop
movl
xchg
mov
dec
adcb
movsl
les
dec
adc
mov
xchg
popa
addr16
sub
insb
or
jp
sahf
iret
fs
ljmp
mov
cmp
add
add
fs
aam
inc
ljmp
imul
imul
or
sub
and
cmp
loope
fisubl
xchg
adcl
lret
adc
adc
cwtl
xchg
mov
and
dec
inc
dec
les
nop
xor
lret
push
inc
sub
push
setp
mul
sbb
imul
outsl
sub
out
mov
outsl
cmp
es
lret
dec
aad
aas
cmp
push
pop
mov
jl
jmp
mov
push
mov
sbb
not
pop
and
add
test
es
push
dec
imul
scas
xor
jle
and
dec
jle
aam
lret
lods
sub
icebp
into
js
aas
pusha
xor
and
pop
divb
pop
mov
push
nop
sahf
fisubl
push
and
ds
aam
loopne
lret
ss
jecxz
inc
ret
or
in
pushf
inc
jl
es
fistps
pop
mov
pop
sub
leave
sbb
mov
jp
outsb
push
sub
inc
mov
cmc
jb
insb
dec
push
jb
mov
adc
stos
test
stos
loop
cwtl
pop
in
repz
cmc
inc
push
push
popf
jg
mov
iret
add
in
xchg
xlat
addr16
lahf
inc
mov
push
pop
jl
or
push
lret
leave
shll
add
mov
cmc
jns
jge
jns
scas
jecxz
pop
mov
sub
lret
push
lret
in
jg
jg
lods
testb
cmpsb
popa
mov
dec
pushf
push
xor
mov
shrl
lods
and
adc
dec
xlat
mov
fwait
push
ficoml
imull
scas
cmp
mov
fnstsw
mov
in
mov
mov
popa
stos
push
shlb
xorl
scas
rep
push
test
xchg
pusha
addr16
mov
outsl
xor
push
adc
mov
cld
mov
cld
addr16
jbe
mov
movsl
outsl
leave
repnz
movsb
icebp
lock
inc
push
xor
cli
repnz
lret
leave
pop
mov
fmull
push
cmpsl
and
loop
xor
xchg
push
loope
negb
cmp
out
sub
test
daa
dec
pop
xor
mov
test
addr16
call
nopl
adc
mov
mov
aam
xor
dec
rorl
pop
pop
movsl
cmp
xor
jp
xor
mov
mov
xlat
push
sub
std
mov
rolb
dec
add
xor
cmpsb
mov
or
and
jle
fimuls
and
dec
aam
addr16
jbe
pop
inc
dec
fidivrl
sub
aam
outsb
jecxz
rcll
out
and
mov
xchg
xchg
mov
cmp
push
shr
sbb
stos
xchg
loop
fs
add
push
cmp
in
repnz
shl
test
out
inc
xchg
pop
add
popf
mov
add
push
out
int
lret
jmp
and
adc
jg
and
daa
adc
aam
mov
mov
push
mov
xchg
scas
into
bound
sub
sbb
pop
push
daa
js
shl
mov
insl
scas
mov
sbb
or
fildll
knotw
mov
enter
in
inc
imul
mov
outsb
bswap
fwait
pop
mov
add
jae
out
jae
mov
insb
mov
sub
sub
enter
mov
imul
pop
jecxz
or
and
sbb
in
sti
insl
dec
dec
ja
push
cmp
jnp
lea
push
mov
push
and
xchg
test
pop
sbb
adc
mov
lcall
daa
dec
imul
fwait
pop
test
sub
mov
lret
dec
scas
imul
pop
xchg
push
cs
xchg
int
ljmp
cmpsb
jnp
insl
mov
das
or
cmp
lea
sti
cs
nop
mov
fs
jnp
xchg
test
and
sub
push
sbb
cmpl
repnz
push
cs
testb
sub
testl
pop
leave
int
jge
dec
mov
dec
iret
mov
mov
pop
xchg
fnsave
adc
inc
call
lahf
push
popa
subb
sbb
ds
pusha
imul
lock
pop
jo
mov
test
sub
push
push
xchg
push
leave
push
gs
sub
lret
pop
xor
test
or
push
jmp
scas
mov
dec
lcall
sub
add
shlb
jge
xchg
fsubrs
repnz
xchg
push
dec
push
aam
jl
hlt
pushf
sub
cmp
imul
jne
cltd
dec
push
orb
pop
lock
mov
xchg
loop
lods
push
xor
unpcklps
pop
clc
cmp
push
xlat
hlt
pop
lods
int
les
adc
in
imul
pop
popf
jle
repnz
pop
frstor
divl
ljmp
mov
xor
lds
aas
inc
movsb
ja
push
int
bound
mov
pop
mov
jo
jmp
fwait
mov
lods
cmc
cwtl
push
push
xor
pop
mov
data16
mov
add
in
addr16
hlt
sub
xor
and
scas
xlat
out
gs
sub
fsts
add
fsts
xchg
inc
add
push
or
mov
add
push
sub
mov
lret
cltd
sub
push
xchg
mov
and
or
stc
jmp
adc
adc
sbb
cmp
lret
jo
mov
mov
jno
in
stos
fcmovb
leave
mov
lahf
jecxz
ret
or
mov
icebp
sbbb
int
out
popf
pop
xchg
int3
xor
cmp
int
fldt
cli
ss
mov
and
or
jg
lea
into
jp
call
mov
push
and
adc
push
fidivs
push
loopne
call
dec
sub
insl
les
int3
imul
jb
and
push
cli
xchg
daa
dec
dec
insl
in
das
std
std
dec
loope
push
jg
jecxz
jne
into
or
dec
ds
scas
ljmp
fcmovnbe
hlt
inc
inc
adc
inc
cs
movsl
std
sub
inc
pusha
cmp
dec
pop
pop
sub
sarl
add
and
sub
cmp
cmc
xchg
sub
mov
aas
push
mov
xor
dec
test
lret
lret
jecxz
inc
mov
pop
int3
out
outsl
push
jp
aad
push
pop
je
xchg
lret
adc
xchg
movsb
jg
mov
subb
pop
and
mov
sbb
or
sbb
cmp
push
bound
inc
cmp
xchg
daa
fsubrs
xchg
xchg
push
or
in
xchg
jge
cli
in
xor
js
xchg
mov
sub
push
cmp
jecxz
rol
in
inc
push
jns
ds
scas
ds
inc
mov
xchg
mov
push
shrl
jb
jmp
fisubs
fsubs
in
xor
push
leave
push
pushf
das
shrb
xchg
pop
pushl
adc
cmp
loope
icebp
jnp
and
rcl
fstpt
es
les
mov
frstor
jmp
scas
xor
sub
rcl
and
push
imul
pop
pop
fsubrs
xchg
xchg
popf
std
xchg
sbb
xchg
and
into
or
cmpsl
cwtl
loopne
xor
das
filds
push
inc
jb
das
addr16
mov
bound
mov
popf
es
mov
cli
push
popf
test
cmp
bound
push
mov
push
imul
sub
push
and
fs
hlt
adc
dec
pop
mov
mov
fiaddl
mov
sbb
dec
sub
aad
in
out
test
imul
mov
adc
jge
dec
push
cli
xor
mull
jbe
xchg
movsl
fs
icebp
adc
mov
pop
into
mov
add
sub
adc
mov
adc
mov
xor
dec
ja
mov
pop
pusha
mov
and
mov
inc
sti
aaa
mov
push
mov
aaa
pop
ss
in
xchg
int3
jl
pusha
sbb
cmc
mov
cld
daa
push
test
sub
sbbl
cmpsl
mov
dec
mov
add
and
test
dec
push
dec
sbb
outsb
sub
je
mov
or
sbb
aad
outsl
adc
mov
hlt
fwait
ljmp
mov
leave
jl
pushf
push
sbb
call
fidivl
test
mov
pop
mov
rclb
pop
jmp
mov
xchg
sbb
mov
lds
pop
cs
ljmp
pop
pushf
lret
xchg
jns
js
inc
push
repz
cmp
in
jne
out
subl
jp
pop
mov
es
mov
ficompl
fisubrs
pop
add
cmpsl
scas
cmp
pop
cs
cmp
xor
es
jae
jb
imul
stos
aad
push
mov
sahf
cmp
push
cmp
scas
jp
cltd
xchg
pop
lds
mov
insl
test
xor
cmp
stos
and
sub
mov
and
inc
mov
popf
fs
fnclex
loopne
dec
sub
push
cmpsb
xor
mov
lds
bound
xchg
test
scas
push
dec
inc
cmp
push
push
data16
or
lcall
sti
outsl
mov
inc
psubw
sbb
dec
xor
add
adc
and
icebp
cmp
les
insb
xor
iret
stos
and
enter
into
sub
and
jle
lds
test
das
sahf
enter
mov
pop
cmpsb
fstps
push
test
ret
test
dec
pusha
stos
incl
gs
xorl
test
pop
cwtl
inc
ficoml
push
cwtl
xor
jbe
mov
cwtl
inc
jle
fdivrs
repz
jns
clc
xchg
jo
out
in
call
xchg
xchg
movsb
inc
jge
mov
push
stos
mov
pop
sub
or
les
inc
mov
mov
xor
jns
cmc
mov
sub
es
mov
xchg
das
nop
xchg
add
inc
inc
fwait
shl
aas
sub
jae
push
cmp
push
mov
xor
call
ja
shlb
mov
popf
pop
xorb
push
aas
loop
push
out
xor
insb
outsb
cmpsb
push
insb
push
enter
inc
cwtl
xor
mov
rolb
xchg
xor
faddl
iret
and
jne
aam
fcoml
in
add
enter
stos
pop
or
cmp
or
js
jmp
in
popa
daa
or
icebp
cltd
xchg
sbb
stos
out
outsl
sub
ds
cmp
and
pop
sub
mov
dec
enter
je
fsubrl
outsb
test
jp
ljmp
aaa
jp
test
test
push
ljmp
inc
inc
inc
repnz
movsb
cmp
pop
bound
fistpl
jae
mov
fstl
push
lcall
sbb
cld
dec
gs
adc
cs
into
outsb
mov
ja
in
mov
out
mov
fs
dec
scas
and
add
adc
lods
scas
push
xchg
leave
push
clc
xchg
cmp
dec
roll
sbb
mov
pop
bound
jl
or
push
icebp
and
sbb
pop
inc
xor
int
pop
lret
sbb
add
ljmp
or
outsb
push
lock
push
stos
daa
pop
and
mov
and
rcll
outsb
repnz
jbe
add
push
mov
scas
pop
mov
push
hlt
cmpsl
adc
jb
movq
pop
insl
test
es
clc
mov
aam
fs
dec
add
aaa
or
mov
mov
into
in
cmp
cmpb
inc
cmpsl
out
out
push
movsb
mov
fidivs
dec
jbe
dec
xor
sub
add
sub
inc
mov
jne
lret
pop
sub
pop
add
push
push
rol
test
pop
pushf
sti
dec
lea
xor
gs
mov
mov
cmp
out
xchg
lcall
icebp
mov
mov
mov
popf
inc
and
mov
push
pusha
pop
lods
mov
addr16
lcall
test
test
jns
mov
stc
xor
add
pop
inc
test
popf
or
add
inc
cmpsb
push
sub
shll
repnz
das
repnz
sub
push
jns
ret
dec
ljmp
repz
inc
cwtl
push
fisubrl
mov
jecxz
pop
dec
push
pushf
imull
arpl
es
loope
lret
jl
in
shrb
hlt
pop
mov
mov
xor
stos
or
iret
daa
mov
sub
out
pushf
lret
jne
imul
mov
and
mov
xor
pop
pop
sub
sub
xor
fst
incl
loopne
push
dec
mov
in
cmc
andl
mov
gs
jns
lret
rcll
notb
xchg
inc
cmp
push
lock
pop
je
imul
or
pop
mov
rcrl
xchg
iret
xor
lcall
bound
or
push
icebp
jo
mov
out
xchg
out
ret
add
and
jecxz
fdivl
push
dec
xchg
or
jmp
jb
mov
fwait
pop
ret
clc
push
inc
loop
xor
push
rcrb
inc
jno
inc
jb
sub
sahf
rorb
cwtl
lret
inc
mov
in
or
sbb
fiadds
mov
add
and
cltd
inc
dec
es
bound
out
loopne
cmp
xor
lods
or
inc
jns
or
out
sbb
xor
jns
shrb
push
outsl
push
rcrl
dec
push
popf
aad
imul
std
cs
mov
in
push
push
sub
or
imul
aad
in
mov
cmc
icebp
mov
lds
inc
sbb
jae
jle
stos
mov
sbb
hlt
sub
int
or
pop
xor
rcll
sub
pop
mov
mov
mov
clc
cmpsb
cmpsb
dec
sbb
xchg
fsubs
hlt
or
xor
and
xor
stos
sbb
and
and
xor
test
js
mov
loop
adc
dec
mov
inc
stos
out
out
mov
out
xor
jns
mov
jne
daa
push
ljmp
pushf
fsubrp
scas
ret
int3
mov
xchg
jns
sub
pop
cmpsb
cmp
dec
popa
jl
mov
push
leave
add
add
jae
fst
xchg
mov
and
sub
movsl
pop
and
rolb
jb
std
inc
insl
lock
fiadds
add
clc
xor
xor
jp
push
xor
pop
and
nop
out
jl
adc
out
das
push
mov
push
and
pop
inc
inc
add
jb
pop
out
xchg
mov
fdivrl
aas
fcomps
sbb
lcall
mov
and
jno
daa
or
xchg
jnp
jge
xor
cmc
pop
xlat
pop
dec
ljmp
out
sbb
cmp
lret
xchg
mov
and
sub
fcomip
iret
adc
pop
notb
mov
or
dec
jecxz
push
push
adc
outsl
movsl
sahf
mov
lea
sub
mov
fiadds
loopne
icebp
push
aaa
in
jg
lahf
adc
bound
out
jne
out
sbb
xor
popf
mov
js
stc
cmp
pushf
push
hlt
adc
cwtl
xchg
mov
cwtl
and
push
sbbl
pushf
mov
add
dec
inc
or
loope
adc
jl
sbb
insb
xchg
or
sbb
mov
das
push
popf
stos
mov
out
xchg
imul
fistpll
in
pop
pop
or
push
or
xchg
fcoml
cwtl
dec
lret
or
std
mov
mov
inc
ret
inc
cmp
sbbl
enter
adc
out
xchg
xor
inc
jo
dec
mov
mov
mov
lahf
fwait
and
in
in
ja
cmc
push
pop
pop
jo
ss
js
sbb
rorb
lret
inc
sub
fs
jle
cmp
adc
adcb
ret
mov
pop
jo
fs
aad
cmc
lea
pop
jne
mov
dec
in
push
cmpsl
jge
adc
lcall
and
sub
movsb
lcall
dec
mov
push
and
rcrl
daa
loop
cmp
sbb
adc
inc
push
or
xchg
iret
inc
jg
mov
mov
lods
xor
jp
jge
and
adc
ljmp
add
adc
sub
jae
sbb
inc
scas
cld
les
pusha
shlb
push
add
or
mov
mov
xor
loope
inc
stos
incb
mov
lods
lret
xchg
jmp
fwait
repz
sub
and
pop
inc
fs
ficomps
pop
xchg
sahf
jbe
or
sbb
adc
jmp
pop
inc
xchg
jg
cmp
or
xor
imul
jge
xchg
test
sub
mov
jmp
xor
shlb
adc
imul
enter
xchg
movsb
inc
in
mov
add
stos
mov
popa
lret
pop
shll
js
addr16
xchg
jno
stc
cmp
bound
and
shll
in
leave
xor
mov
pop
jns
das
and
and
sarb
xchg
push
ss
xor
pop
mov
dec
movsl
out
and
jne
scas
dec
js
aam
aad
jnp
bound
pop
jg
lods
add
ror
sbb
loopne
cmp
dec
aas
inc
cwtl
mov
data16
mov
cmp
imul
adc
inc
add
adc
pusha
mov
imul
adc
shl
mov
std
dec
xchg
mov
fwait
cld
jmp
lods
subb
shr
jl
jne
inc
fiaddl
in
mov
stos
push
push
and
mov
xor
mov
pop
xor
sub
scas
sub
clc
jne
cs
push
add
int
sub
shrl
movb
xchg
iret
lcall
xorb
and
cli
jge
xchg
fldenv
int
lods
in
stc
push
inc
test
roll
xor
repz
fisttps
lods
movzwl
scas
fs
popa
ljmp
mov
xchg
andl
mov
pop
pop
mov
jle
sub
mov
les
pop
xor
out
addr16
mov
add
adc
or
lahf
push
movsb
xchg
jp
jb
jg
pop
sub
sbb
insl
ret
adcl
orb
jno
sbb
jb
fisttpll
xor
pusha
sub
or
insb
push
test
sub
out
repnz
sahf
push
arpl
mov
ss
movsb
aas
scas
int
mov
add
pop
add
mov
mov
data16
add
shrl
in
insl
roll
jmp
push
pop
ror
push
mov
inc
insl
pusha
add
xor
inc
add
jae
jecxz
xchg
cmc
leave
mov
sub
enter
lcall
outsl
xchg
inc
jmp
loope
ljmp
xchg
mov
icebp
or
loope
aad
popa
mov
jmp
and
inc
lock
sbb
adc
sub
lret
mov
sub
shlb
ret
les
jle
jne
les
xchg
je
add
mov
cmpsb
cmpsb
dec
inc
daa
rcll
mov
mov
in
bnd
inc
call
cmp
jg
jp
data16
test
movsl
les
mov
push
scas
jae
pop
rcrb
cmp
sbb
das
lods
mov
dec
sti
mov
jg
outsl
mov
push
aad
mov
dec
add
cmp
pop
fnstcw
dec
pusha
add
xor
test
lahf
pop
loop
loopne
pop
fsubs
push
adc
push
pop
add
fldt
loop
popa
cmp
dec
sti
in
stos
sub
jne
pop
jbe
and
gs
test
pop
xor
add
popf
push
push
test
mov
test
cmc
ljmp
bound
into
sbbb
sub
das
cmp
sub
stos
pushl
aaa
pop
cli
adc
inc
jmp
mov
dec
leave
mov
dec
mov
adc
fistpl
xchg
lcall
mov
mov
adc
sbb
sbb
inc
xchg
fyl2x
inc
loop
fucomi
ret
fisttps
sar
movsl
lock
cmpsl
ja
cmp
mov
or
add
nop
es
lret
sbb
js
xchg
xor
mov
ljmp
cmp
outsl
add
add
or
je
movzwl
cmpsb
popf
int
mov
and
aam
jns
and
xchg
dec
imul
mov
xchg
out
xor
add
jmp
adc
cmpsl
arpl
cld
jg
imul
push
iret
or
lods
jbe
roll
out
outsb
push
mov
ds
leave
popl
xor
bound
pop
out
sbb
in
push
sti
into
jb
add
mov
inc
enter
xchg
sti
lret
sbb
jb
jl
and
add
test
dec
fsubrs
rcrb
mov
inc
xchg
aad
xlat
hlt
das
cmp
out
sub
inc
or
jge
and
les
jmp
push
jecxz
fdivr
cld
aas
mov
iret
imul
cmpsl
mov
das
mov
adc
sub
sbb
test
mov
adc
out
frstpm(287
hlt
push
push
sub
scas
pop
add
ss
shrl
add
loopne
add
ss
or
in
mov
mov
mov
mov
out
push
mov
push
add
mov
out
adc
xor
test
push
mov
mov
in
adc
and
lcall
outsb
xor
fs
xchg
pop
xchg
or
movsb
sahf
dec
mov
pop
leave
jle
rolb
adc
lods
push
decb
sti
in
mov
dec
js
daa
daa
imul
lods
adc
test
ja
scas
addr16
push
repz
stos
nop
lods
lahf
sbb
push
pop
mov
jbe
dec
jno
into
pusha
xor
das
stos
testb
xchg
inc
sub
jae
lcall
cmp
cltd
rcrb
push
arpl
hlt
shrl
scas
dec
cli
mov
mov
leave
daa
add
adc
mov
int
sbb
lock
call
into
fcmovu
test
daa
notl
test
js
jg
sub
hlt
xchg
push
xchg
dec
fcoml
xlat
mov
inc
push
ret
jb
loopne
mov
iret
ret
mov
mov
jmp
xor
mov
cmp
xor
mov
push
ret
mov
call
mov
insb
iret
push
xor
xchg
push
or
ja
sub
sahf
cmp
movsl
jmp
add
out
lea
rol
enter
stos
pop
loope
lret
jle
in
clc
jne
in
inc
mov
pop
je
stc
xchg
mov
bswap
divl
insb
nop
cltd
enter
jmp
shll
sbb
cwtl
mov
push
xor
mov
aaa
fcoml
fs
pop
aad
movsb
or
clc
cli
insb
add
ja
stos
sbb
ret
mov
scas
subb
testl
jmp
adc
jge
xor
sbb
popa
jbe
sarb
in
rcl
sbb
sub
adc
sarl
xchg
mov
in
loop
jge
cmp
cmpsb
push
rep
out
dec
jp
or
cwtl
or
sbb
jae
aad
lods
or
dec
mov
push
hlt
lds
push
xor
dec
aad
lret
pop
mov
fwait
jnp
push
dec
dec
push
rorl
pop
dec
sub
fisubl
pop
mov
ljmp
pop
jle
out
inc
icebp
push
sub
push
and
xchg
xor
dec
fisubrl
aas
lds
cmpsb
adc
in
pushf
in
fmul
pop
fld
jge
dec
shll
or
push
and
xlat
data16
mov
repz
mov
xchg
jmp
jae
clc
repz
jge
int
insb
test
adcl
aam
test
mov
mov
jl
mov
sbb
ds
mov
cmp
pop
mov
test
aas
call
pop
int
test
imul
inc
cli
mov
inc
mov
and
in
push
movsl
popa
cmpsl
test
gs
xchg
xchg
testl
outsl
popf
cmp
shlb
daa
xchg
adc
push
jl
or
mov
ljmp
cmp
leave
leave
in
mov
test
popf
stos
sbb
push
lcall
and
xchg
stos
test
shl
lret
push
dec
mov
sbb
xor
mov
insl
mov
mov
mov
cltd
psllw
enter
int3
nop
mov
mov
adc
leave
outsb
fidivl
cwtl
sub
sbb
adc
sbb
test
fnstcw
adc
mov
iret
daa
lret
pushf
jmp
faddl
popf
mov
push
lds
rcrl
push
adc
pop
dec
dec
mov
sub
and
and
inc
loopne
inc
pop
lret
and
sub
inc
dec
je
or
and
adc
lcall
cmp
in
repz
lods
pop
outsl
adc
daa
loopne
mov
mov
int3
and
fs
add
imul
inc
push
pop
ds
and
mov
mov
enter
js
pop
inc
xchg
ficompl
mov
ret
jmp
or
and
nop
inc
add
xchg
jge
leave
add
aaa
xor
sub
scas
inc
add
out
push
jb
xor
xorb
push
push
rolb
add
fcomi
or
push
popf
cs
iret
fdivrp
add
push
push
jecxz
push
mov
into
out
rcll
cmp
pop
pop
adc
test
mov
or
mov
and
sti
fiaddl
fisubrs
push
add
lods
into
hlt
test
es
stos
xor
inc
insl
in
lds
push
xor
movsl
sbbb
mov
or
push
lods
aas
lret
iret
add
lea
or
or
push
jns
adc
xchg
cmp
jo,pn
inc
stos
data16
pop
jmp
stos
pusha
or
mov
dec
es
repnz
mov
out
jno
mov
push
pushf
out
inc
cltd
fisubrl
push
push
jge
test
dec
cltd
push
mov
in
das
sub
hlt
sbb
mov
push
fwait
jl
rcl
pop
shlb
sbb
push
xchg
mov
sub
adc
sub
es
cmp
mov
aas
sbb
out
rorb
cmp
xor
cwtl
mov
sarl
mov
pop
shrl
jmp
fadds
push
movsb
aas
xor
xchg
and
inc
adc
ret
ss
xlat
dec
notb
xchg
inc
mov
or
out
and
pop
push
mov
jnp
cmp
inc
sub
add
in
int
add
xchg
cld
adc
sbb
outsb
daa
jne
sar
adc
pmullw
sub
or
push
xorl
and
mov
scas
and
pop
push
xchg
or
aaa
and
movsb
jle
dec
lcall
in
iret
jne
sub
into
xor
ja
lea
loopne
sbb
push
or
rolb
lods
daa
cmp
or
jo
test
int
data16
test
cld
inc
mov
jecxz
jle
pop
mov
cmp
aam
shlb
push
movsb
out
fld1
xor
std
je
stos
inc
mov
sbb
sahf
lcall
sbb
mov
push
hlt
dec
js
daa
pop
inc
test
jg
mov
cmp
cmp
xchg
mov
xchg
inc
repnz
out
mov
dec
and
in
in
clc
push
mov
bound
fldcw
call
cli
mov
clc
arpl
dec
mov
fisubrs
mov
in
jae
pop
js
dec
lret
pop
adc
cmp
int
test
sarb
cmpsb
inc
mov
test
cld
lret
jmp
insl
mov
sti
call
fistps
imul
add
mov
out
sbb
test
xchg
lret
cli
cmp
scas
imul
stc
in
ljmp
in
pusha
pusha
push
les
es
and
adc
lcall
cs
and
adc
daa
adc
add
lcall
daa
or
cmp
cmpsl
in
and
xchg
lods
mov
xchg
test
dec
cmp
test
mov
xchg
jo
sbb
andl
fsts
or
mov
mov
sbb
out
inc
xlat
loopne
sbb
mov
push
mov
and
js
pop
icebp
test
hlt
cmpsb
pop
inc
sub
push
dec
mov
xor
push
cltd
fucomip
adcl
cmp
ljmp
sarb
pop
and
popf
and
inc
dec
mov
cmp
std
adc
or
push
add
push
push
ficomps
lret
lret
mov
aad
fisubrs
movsb
outsb
jo
rcl
leave
pop
mov
fisubs
sarb
icebp
adc
mov
and
mov
and
or
ficompl
setno
es
jo
pop
dec
xchg
stos
repnz
push
cmc
ss
add
mov
cltd
fimull
sub
jl
jl
push
in
xchg
jbe
loop,pn
lcall
mov
mov
aam
sub
push
adc
xor
inc
ficoml
rep
fisubl
outsl
int3
mov
xor
dec
adcl
icebp
xor
pusha
fidivrs
cvttps2pi
jecxz
out
call
sbb
loop
cmp
testb
adc
xor
jg
leave
xor
xchg
xor
cmp
repz
sbb
cli
icebp
btsl
cmp
sbb
scas
leave
mov
xchg
std
cmp
or
bound
outsb
sti
add
repz
loopne
out
mov
push
lahf
pop
in
pop
and
sbb
add
mov
jo
jns
cmc
ret
js
and
inc
les
add
popa
orb
dec
xor
lret
xor
push
cmp
add
xchg
push
outsl
jne
enter
lahf
rcr
cmp
cwtl
test
ret
mov
loope
popf
xor
adc
gs
add
jmp
mov
insb
dec
sbb
push
mov
dec
loopne
pop
ret
add
mov
sub
push
jl
xor
clc
sti
out
idivl
stos
shlb
cltd
mov
pop
pop
pop
adc
leave
push
mov
add
fiadds
cmp
fpatan
jecxz
sub
mov
sbb
jl
or
sub
adc
lock
imul
mov
add
lds
xor
mov
mov
or
enter
arpl
shr
and
push
cmp
repnz
in
push
je
push
popf
push
enter
sub
lret
jbe
sub
push
mov
rclb
mov
fimuls
or
fistl
xchg
lods
imul
mov
jp
and
das
cli
test
test
push
out
les
lods
mov
insb
imul
inc
xor
loop
push
pop
in
dec
sbb
sub
jg
bound
iret
xchg
push
sub
aad
test
ss
mov
cs
out
mov
mov
xchg
push
xchg
adcb
sub
icebp
aam
add
int3
imul
loope
mov
and
jecxz
pushf
dec
xchg
pop
popf
fstl
aad
xchg
aas
pop
hlt
mov
mov
out
push
mov
ror
ss
outsb
out
mov
pop
incb
sbb
cmp
fidivrs
inc
insl
pop
cmp
push
shll
sub
mull
out
cmpsl
data16
push
iret
les
js
cwtl
daa
scas
pushf
and
adc
daa
mov
inc
dec
xlat
adc
pop
add
scas
cmp
movsl
cs
outsl
xchg
outsl
rcl
jp
sub
pop
pminsw
out
inc
dec
nop
stos
movsb
xor
or
adc
filds
test
stos
out
je
movsl
inc
mov
inc
popa
out
xlat
cwtl
push
xchg
scas
rcrl
fucom
shll
sbb
add
add
fistpl
aas
sti
and
pop
mov
in
inc
and
xlat
jecxz
jle
popa
ficoms
add
lret
jne
xor
nop
cvtps2pi
out
lock
cli
mov
pushf
aaa
inc
sub
cmc
inc
xchg
dec
inc
pop
notl
cmp
ret
stc
pusha
dec
pop
push
push
dec
in
push
lods
mov
push
jmp
mov
repz
mov
dec
sub
lcall
aaa
insb
mov
mov
pusha
jp
and
dec
insl
leave
jl
cli
outsb
jno
outsb
xor
jle
cmpsb
mov
add
push
pop
outsb
add
and
mov
push
es
jp
in
jae
popf
test
jnp
add
cmpsb
dec
outsb
jne
push
mov
lcall
push
push
xchg
mov
cmpsb
inc
add
ret
xchg
int
or
test
add
sbb
add
xor
addr16
imul
cmp
int
addr16
add
cmpsl
cmc
pop
fmul
jl
ret
test
dec
xor
lods
rcrl
inc
lods
push
inc
test
dec
cmp
add
ds
add
mov
adc
out
scas
sub
cmpsl
jp
or
je,pn
imul
jno
xchg
mov
popa
fisubrl
mov
mov
xchg
movsl
dec
jl
pop
xor
lahf
jae
stc
cmp
lods
push
pop
lock
cli
sbb
dec
inc
aad
push
mov
sbb
je
movsb
dec
xchg
mov
or
adc
inc
popa
ja
xor
das
rorb
movsl
pop
lret
int
daa
mov
mov
loop
lcall
cmp
repz
or
dec
pop
popa
dec
add
cmp
pop
stos
cltd
adc
xor
sub
hlt
and
jecxz
sbb
jl
mov
mov
xchg
xchg
lods
mov
add
stos
cld
or
and
int3
pop
mov
xchg
add
ret
xchg
push
in
movsl
xlat
test
vmovq
dec
pop
jmp
stos
lret
add
jno
lock
int
sbb
xchg
jge
fdivl
cmpsb
ljmp
cwtl
lods
arpl
lret
iret
jno
fucom
sbb
and
xchg
js
mov
adc
out
push
mov
add
cmp
add
negl
mov
fadds
mov
cmp
adc
cltd
repnz
mov
outsl
push
xchg
das
repz
sti
aaa
out
xchg
jp
or
in
or
repz
jl
lds
iret
gs
mov
test
pop
loope
jae
mov
mov
lret
push
mov
pop
mov
arpl
add
dec
sbbb
imul
popa
aad
and
push
jle
std
cli
cmp
dec
add
sahf
pop
data16
fidivs
push
jle
sbb
add
cmp
push
and
aam
jmp
test
or
cmpsb
xor
mov
insl
push
mov
sbb
inc
push
mov
mov
icebp
test
cmp
xorb
jmp
lcall
ss
adc
mov
adc
mov
in
notb
adc
cmp
mov
cmp
jbe
jns
icebp
dec
or
pusha
mov
push
ret
sub
enter
jne
pop
jo
stos
inc
sar
pop
cmp
jle
xorl
lock
push
jns
add
insl
insl
outsl
or
hlt
sub
xor
mov
mov
or
rolb
push
inc
lret
adc
inc
rcrl
sahf
enter
leave
adc
cltd
jecxz
jg
fisttpl
je
je
or
dec
lret
js
rorb
fstl
fadd
inc
and
sti
add
or
sub
jl
pop
cltd
push
inc
xor
sub
pop
mov
aas
pop
adc
test
push
mov
pop
jno
lret
mov
pusha
mov
aad
test
lahf
cwtl
push
ss
jle
mov
cmc
adc
mov
xchg
jb
inc
push
xlat
shll
sti
inc
clc
jae
dec
setle
test
or
and
pop
outsb
pop
mov
jge
sub
and
inc
in
enter
ja
ficomps
pop
mov
jp
jne
xor
out
xor
push
clc
pop
dec
pop
sbb
cmp
enter
cmpsl
inc
daa
leave
mov
inc
and
loopne,pt
orb
sti
daa
aad
and
xlat
and
lret
push
dec
je
lcall
jnp
scas
lods
adcb
add
arpl
in
negb
stos
push
sahf
rcrl
pop
in
add
dec
sti
cmc
or
jmp
dec
jmp
movsl
scas
fisttps
sbb
mov
jecxz
fwait
and
outsl
mov
leave
ljmp
test
xlat
lret
and
push
cmp
je
jo
push
fsubs
insb
push
push
js
and
mov
or
inc
mov
in
jns
mov
lds
in
inc
mov
dec
adc
lahf
fwait
fs
cmp
cmpsb
jae
sbb
xor
adc
jecxz
inc
sbb
shr
outsb
insl
and
push
jp
push
fildl
and
aad
sbb
and
fsubrp
xchg
mov
and
xor
roll
cmpsl
rcr
mov
stos
fisubrs
loop
out
cmp
out
ds
je
xor
and
sub
mov
dec
cmp
mov
call
xor
jmp
out
jmp
stos
xchg
call
popl
cmp
dec
out
or
push
out
outsl
aas
out
cmp
jns
nop
or
daa
call
xchg
mov
fsubs
jle
xchg
xchg
sahf
scas
hlt
sub
aas
mov
fsubr
adc
sar
mov
and
push
cmp
bound
das
mov
lds
hlt
lahf
or
jns
or
xor
sar
test
sbb
nop
iret
jb
pop
ret
jle
in
in
mov
icebp
pop
inc
and
and
scas
cmp
xchg
in
inc
and
or
jle
push
ljmp
jmp
cmp
mov
or
mov
mov
xchg
xor
dec
cmp
mov
lret
and
pop
or
sub
pusha
sub
arpl
in
xor
nop
xchg
jp
or
mov
hlt
cmp
sbb
stos
mov
sbb
fnstsw
rolb
inc
xchg
rclb
dec
lcall
data16
cmp
mov
notl
arpl
popf
inc
cwtl
cmpsb
ror
jo
in
pop
jbe
mov
sbb
adc
jo
movsl
cmp
rcr
in
or
pop
cmp
and
outsb
xchg
mov
test
cli
shrl
cmp
leave
mov
xchg
fbstp
mov
dec
rorl
out
insb
xchg
adc
push
inc
or
shrb
pop
pop
cmp
mov
mov
test
push
push
stc
add
stc
jnp
into
cmpsl
adc
cld
xchg
dec
jb
xor
jne
xchg
dec
jnp
add
roll
push
jb
test
pop
pop
std
dec
lret
xchg
lods
jns
xchg
adc
int
sbbl
jne
insb
fidivl
leave
sub
dec
std
add
imul
push
ret
mov
and
add
andb
cltd
pop
aas
cmp
icebp
aad
inc
pop
push
xchg
xchg
dec
rorb
pop
fstp
movsb
fisubrl
std
mov
ja
mov
mov
cld
cmpsb
mov
pop
popf
sti
mov
std
ss
cmp
movsb
push
sub
adc
sbb
mov
lock
pop
xchg
xor
cmpsb
mov
rcr
pop
lods
push
cmp
xor
mov
or
cmpsb
stos
nop
push
mov
fidivl
fs
mov
pop
aad
add
mov
jmp
push
clc
fsts
and
lahf
pop
stos
fistps
add
insb
adc
push
rclb
jle
xchg
jo
int
loop
in
loopne
insl
int
jge
xor
iret
dec
std
inc
add
and
aad
sub
out
dec
dec
push
test
lret
xchg
mov
mov
adc
push
push
cmpsl
cmp
jnp
mov
fbld
and
inc
clc
mov
out
mov
leave
in
cli
lds
ja
add
test
scas
mov
mov
push
mov
das
push
xlat
scas
fsubs
int3
es
jg
divl
push
dec
fadds
arpl
loopne
or
jns
mov
fwait
push
shlb
test
adc
mov
mov
negb
or
fidivrl
jp
inc
and
loop
lods
push
push
ss
and
adcl
cmp
dec
push
sub
ljmp
add
cmp
sub
xchg
cmp
xchg
lock
test
in
out
test
insb
shlb
int
and
sub
lahf
push
push
insl
adc
gs
dec
jl
adc
clc
inc
dec
orl
pop
inc
pushf
nop
sbb
xchg
xchg
dec
push
idivb
sti
aas
bound
test
mov
mov
mov
notl
int3
mov
test
movsb
popa
dec
les
stc
lret
jp
dec
shll
insl
jg
inc
pop
cli
push
sbb
js
sub
jne
movsl
js
lods
insl
jnp
out
es
sahf
add
ret
movsb
test
outsb
adc
sbb
dec
mov
fists
mov
xchg
sub
dec
mov
shll
addr16
adc
mov
dec
loopne
clc
into
cmpsb
test
adc
jnp
adc
in
fwait
xor
in
or
and
push
add
jmp
pop
xor
pop
call
or
adc
dec
add
fnstenv
sbbl
sbb
imul
icebp
sub
and
arpl
mov
pusha
xor
mov
jno
inc
les
in
mov
mov
js
fwait
cmpsl
xchg
roll
ret
mov
mov
arpl
push
ljmp
es
mov
out
cmc
mov
aam
subb
movsb
push
dec
cmp
icebp
gs
push
dec
test
dec
shll
push
push
sbb
fs
sti
repz
or
std
push
xchg
push
add
jg
shll
sbb
sahf
mov
pusha
cmpsl
stc
ffree
mov
nop
xchg
pop
push
inc
inc
adc
cmp
das
rclb
inc
int
fcmovu
int3
inc
jmp
mov
fisttpl
mov
pop
cwtl
inc
in
add
les
adc
rcrb
and
xor
push
pop
push
daa
stos
pop
adc
arpl
into
iret
or
mov
out
pop
cmp
jl
sbb
mov
int
push
test
push
mov
jbe
xor
jo
stos
and
in
int3
loop
xor
push
popf
loop
ss
imul
clc
es
and
pushf
fdivl
adc
mov
push
mov
cmp
out
xchg
jmp
imul
pushf
dec
push
hlt
cld
add
in
xchg
mov
loopne
mov
es
jbe
mov
je
fisubrs
loope
vpsubb
dec
mov
or
dec
mov
test
mov
push
fists
out
sub
or
sbb
adc
daa
inc
call
sbb
and
mov
rorl
xor
or
jmp
fsts
popa
or
mov
out
dec
add
adc
in
out
int3
adc
adc
mov
mov
and
jae
add
sub
sahf
cmpsb
lock
ret
lea
xchg
loope
icebp
add
popaw
sub
js
gs
shr
aam
jmp
mov
pop
dec
fiadds
je
pop
push
test
add
mov
mov
and
pop
or
jl
add
push
pop
sub
pop
out
insb
loopne
lret
repnz
faddl
iret
mov
imul
sub
push
movsb
jp
rorb
sbb
nop
or
inc
adcb
jbe
repnz
mov
jl
add
cmp
and
sub
add
jo
dec
cmp
in
mov
jns
fdivl
xor
jg
mov
pop
leave
ret
ror
iret
pop
insl
mov
popf
pop
lods
sysexit
inc
push
mov
push
xlat
and
dec
inc
xchg
mov
jp
or
sbb
clc
xor
cltd
add
jns
orb
int
lret
xor
ljmp
mov
pushf
icebp
adcb
mov
cmp
lea
adc
rcl
push
push
into
test
pusha
arpl
jp
or
loopne
outsl
shrb
sbb
inc
outsl
xchg
loop
clc
jns
xacquire
or
scas
and
out
sbbl
push
pop
out
loop
lods
cltd
out
jns
mull
cmp
sub
repnz
or
icebp
add
jnp
mov
divl
and
jns
clc
fcompl
xchg
hlt
jmp
pop
jg
inc
aad
push
mov
test
fwait
push
inc
mov
mov
sbb
popa
cmp
cmp
stos
ret
mov
enter
loop
push
jp
imul
mov
cli
jno
pop
stc
popf
imul
sub
mov
dec
jb
push
scas
mov
js
push
add
ljmp
mov
push
inc
fldl
pop
xor
push
ss
add
clc
outsl
dec
cli
stos
js
mov
iret
repnz
bnd
push
xchg
js
inc
jo
out
jl
add
inc
xchg
adc
imul
es
inc
cmp
ss
mov
fwait
shlb
sbb
clc
cld
xchg
dec
pusha
sbb
push
xchg
push
scas
popf
adc
sbb
inc
mov
les
and
js
add
movsb
sti
mov
mov
mov
sahf
or
stos
ljmp
fs
outsb
scas
mov
xor
call
lods
cltd
in
mov
jge
rcrb
in
push
rcrb
test
mov
icebp
hlt
mov
fs
cmpsl
pop
mov
pop
push
aas
in
mov
outsl
and
popa
pop
cwtl
repnz
frstor
adc
and
fiaddl
mov
xor
jno
push
mov
fldl
inc
lahf
daa
gs
push
sub
sub
es
enter
xchg
dec
mov
dec
mov
addr16
xchg
mov
cwtl
fmuls
mov
je
cltd
xlat
aad
push
mov
je
inc
jb
mov
mov
hlt
mov
xchg
mov
and
xchg
mov
stos
push
mov
add
rorb
jo
pop
imul
rolb
xchg
mov
ret
rolb
fistpll
leave
aam
dec
test
add
inc
leave
aad
mov
and
mov
ja
aaa
movsl
cmp
or
pop
pushf
pop
inc
push
or
lret
add
in
into
push
enter
rclb
negb
pop
call
loope
int3
sahf
sbb
dec
imul
lea
lahf
mov
ja
xlat
jb
fucomp
out
xchg
std
mov
shrb
rcrb
jl
mov
fildll
and
mov
out
out
shl
sar
sarl
imul
inc
cmpsb
add
jecxz
leave
xchg
stos
int3
inc
jecxz
andb
jnp
dec
and
ljmp
mov
mov
fnstcw
xchg
xchg
jmp
jecxz
jae
loop
cmpb
icebp
cwtl
inc
sbb
fists
push
add
adc
outsb
movsl
xor
fcmovnb
ja
sbb
test
cmpsl
mov
fisubrl
or
sahf
push
dec
fimull
js
addr16
std
mov
dec
pushf
adc
stos
push
xor
cmpsb
loopne
nop
cltd
dec
jns
inc
pop
cld
test
inc
sbb
lock
aad
push
out
add
jl
mov
mov
sub
je
mov
sbb
pop
fcompp
hlt
stc
stos
pop
mov
xor
xor
hlt
dec
cld
stos
jge
mov
test
test
or
fcoml
pusha
and
pop
dec
mov
mov
test
mov
inc
mov
cmc
cs
ss
test
xor
inc
push
data16
jmp
inc
out
push
pop
add
aam
loopne
add
es
push
inc
jmp
xor
repz
xchg
fistpl
incl
stos
repz
sbb
into
loope
xlat
mov
or
jmp
sub
add
add
addl
das
adc
mov
cmc
inc
loopne
mov
cli
lret
mov
inc
es
in
aaa
ss
lret
clc
jne
add
jae
sub
and
clc
arpl
sub
mov
or
subb
test
jo
add
pop
insl
xlat
js
mov
mov
jl
inc
cmp
and
pop
mov
popaw
aad
sub
sub
push
testl
cmpsb
and
lods
dec
das
hlt
mov
loopne
mov
ss
imul
int
lock
aam
psubb
loope
adc
movsb
bound
out
nop
out
andb
leave
sub
cwtl
test
sbb
cwtl
rcl
sub
call
aam
and
mov
sub
addb
or
ss
xchg
imul
push
add
loope
xchg
xchg
dec
add
mov
mov
ja
stos
mov
dec
ss
in
jge
mov
out
jg
cmc
adc
mov
or
cmpsl
popf
add
xor
lea
ljmp
jo
jp
ret
in
add
mov
push
cld
sbb
xlat
jae
sbb
decb
sub
mov
sarb
cmpsl
jle
jo
fistpll
jmp
insl
int
lock
push
out
js
stc
mov
sub
xchg
push
pop
or
mov
jl
movsl
js,pt
jecxz
sbb
fdiv
inc
push
popf
sbb
fldt
in
and
xchg
pop
testl
leave
xchg
imul
and
mov
and
sub
adc
cmpsb
mov
xor
sbb
stc
xchg
pop
test
roll
cld
jl
push
fdivs
add
ss
xor
sahf
aad
push
or
adc
pop
les
adc
cli
cmpl
cmpb
mov
mov
jno
push
dec
daa
iret
push
shlb
mov
mov
mov
imul
jno
dec
insl
adc
popa
faddl
cmp
xor
cmp
shll
sarb
movsb
jg
addr16
or
cmpsl
out
adc
fadds
mov
and
cmp
push
adc
cmp
es
push
cmc
xchg
pop
popf
push
loope
sahf
mov
mov
mov
cli
mov
push
jg
repz
cmovp
int3
push
fcoml
inc
pop
or
dec
inc
inc
sub
mov
faddp
mov
add
adcl
arpl
cmpsl
loope
or
pop
mov
mov
outsl
mov
fs
cmp
ljmp
mov
aas
fstps
aad
mov
dec
int
loop
xchg
movsb
sbb
push
add
xchg
arpl
dec
lods
aaa
test
insl
lods
mov
call
loope
and
sti
mov
sarb
push
in
out
push
or
jg
pop
enter
sub
jne
ljmp
aaa
inc
xorb
fsubr
add
in
cmc
sti
cmp
lea
call
cld
je
adc
cli
push
xchg
inc
push
lcall
in
enter
pusha
mov
ja
sahf
inc
in
dec
aad
sub
cmp
jg
ds
pop
fldl
jno
sbb
xlat
mov
add
vmwrite
jne
mov
cmc
push
mov
sbb
xchg
mov
addb
lret
add
jp
adc
cld
jbe
push
xor
mov
mov
in
sub
push
jmp
movsb
cmp
add
test
push
in
test
dec
xchg
dec
inc
cltd
mov
mov
call
aam
push
mov
in
mov
xchg
jbe
mov
pop
mov
push
inc
iret
pop
into
cmp
xor
popf
mov
sub
in
fwait
xchg
popa
fildl
mov
sbb
adc
adc
mov
mov
jg
xchg
mov
fucomp
xorb
icebp
fdivs
inc
jp
stos
or
sub
mov
or
mov
stos
dec
loop
jb
xchg
aam
loope
sub
xchg
or
pushf
fwait
mov
jo
repnz
or
cmpsl
inc
sub
insl
mov
sahf
lahf
call
bound
jno
decl
inc
insb
imul
mov
inc
ret
mov
xchg
ds
or
push
das
mov
bound
and
sbb
add
dec
adc
adc
aam
and
rcl
enter
adcb
xor
adc
cld
je
xlat
les
xchg
pop
and
mov
add
fwait
jp
mov
cwtl
lock
ret
into
dec
jo
xlat
pushl
inc
outsl
or
push
into
int3
fs
stc
les
outsb
cmovbe
dec
fsubrs
jg
add
scas
jle
jae
imul
xchg
xchg
outsl
mov
mov
clc
cmp
insl
jle
aaa
cmc
loop
je
test
cmp
aas
mov
xor
outsl
popa
test
push
rcl
or
lret
cs
hlt
imul
push
pop
dec
and
push
inc
aas
xor
pop
mov
or
ja
test
jecxz
lea
mov
ret
and
js
cld
inc
jge
mov
mov
andl
mov
xchg
adc
ret
xchg
and
punpcklbw
nop
dec
faddl
adc
dec
jmp
rcrb
fs
insb
jnp
jmp
scas
fistpll
pop
push
outsl
daa
or
add
mov
imul
sti
and
int3
lock
test
loope
mov
arpl
insl
xchg
inc
shr
ficomps
fadds
in
mov
es
xchg
dec
inc
in
repz
shl
inc
lret
int
pusha
aas
int
add
xor
out
sbb
loope
movsl
lcall
dec
test
inc
xor
cmp
mov
jge
mov
mov
pop
dec
insb
nop
popa
push
lret
sbb
mov
iret
adc
in
sbb
or
or
add
xor
aas
test
mov
movb
call
jmp
push
scas
push
pop
push
out
mov
ss
adc
sti
fldt
ljmp
jns
in
jb
sahf
mov
mov
adc
aad
mov
adc
pusha
in
sub
push
sbb
dec
stc
lds
xchg
dec
bound
jnp
dec
stc
stc
or
bound
mov
push
outsb
inc
aam
xor
loopne
push
and
sub
data16
xorb
ret
inc
xor
sub
fstpl
out
xor
sbb
in
insl
movsb
lea
adc
sub
dec
sbb
or
pop
and
dec
ret
lods
stc
cld
mov
jmp
lock
jle
or
jb
xchg
lcall
imul
push
repnz
ret
loopne
aaa
pop
xor
and
push
mov
cmp
mov
or
push
dec
xchg
xchg
add
gs
jbe
pushf
dec
mov
jg
xor
aam
rol
rcr
cltd
ljmp
cli
push
das
mov
into
jmp
pop
dec
jl
push
cmp
mov
js
pop
stos
sub
lahf
cwtl
ret
jge
sbb
loopne
inc
sbb
inc
mov
stos
jbe
ror
sbb
pop
test
movsb
mov
mov
call
flds
cltd
test
lods
aaa
and
mov
sub
inc
inc
iret
arpl
push
inc
call
xchg
mov
add
xor
test
cmpl
adc
add
std
sub
push
push
in
xchg
mov
pop
js
incb
xchg
cmpsl
sbb
testb
ret
ss
sbb
imul
sbb
jp
xchg
push
mov
and
and
ss
jge
pushf
jb
aas
push
inc
push
movsb
xchg
push
dec
popf
cmp
pop
je
fsubs
xchg
cwtl
cmp
xchg
bound
daa
inc
bnd
mov
mov
lret
mov
mov
repnz
lea
sti
shll
call
data16
je
in
fsubl
pop
popa
adc
jae
push
dec
and
scas
pushf
enter
or
dec
xchg
mov
enter
in
sub
adc
mov
lahf
scas
pusha
mov
push
mov
sub
cmpsb
in
test
cmp
mov
xchg
push
pop
or
or
xchg
dec
jae
sub
rcrb
sub
add
xor
cmp
and
mov
andl
sbb
jne
xchg
mov
fistl
inc
pop
mov
adc
pop
in
jmp
test
gs
jecxz
push
into
aaa
sbb
les
aas
sub
add
xchg
xchg
dec
loop
in
cmpsb
ja
ret
jmp
xor
outsb
and
popa
push
addr16
cmp
mov
inc
xlat
jb
xor
sub
mov
outsb
mov
movsb
mov
je
cmc
add
mov
sub
xchg
mov
xor
mov
add
or
xchg
lret
testb
pop
mov
int3
pop
xchg
pusha
fstpl
mov
jb
jns
lret
mov
push
inc
dec
cs
cmp
jo
xchg
insb
pop
in
mov
push
out
pop
mov
jo
rcrb
xor
xchg
push
or
add
inc
jp
xor
and
add
jecxz
xorl
and
inc
dec
rcr
mov
popf
or
inc
xchg
clc
clc
and
xor
jno
test
mov
jns
mov
fsts
mov
aam
cmp
mov
sub
sbb
sbb
push
icebp
and
cli
pusha
fmul
sbb
mov
dec
fistps
xchg
shlb
xor
and
cmp
mov
inc
mov
pop
mov
pop
sub
aam
or
mov
mov
mov
scas
sbb
inc
inc
push
sub
lret
out
iret
iret
mov
in
push
icebp
decl
psubusw
mov
dec
ret
test
popf
mov
pop
adc
outsb
add
cmp
inc
adc
adc
jle
mov
pop
sub
jb
sbb
sub
adc
cmovle
mov
cmpsb
ret
cmpsb
imul
mov
repnz
aaa
or
fs
scas
jg
inc
inc
dec
cmp
inc
cmp
sbb
out
fwait
aaa
and
sbb
cltd
gs
cli
ficomps
and
xor
inc
sbb
rorb
rclb
imulb
dec
bound
adc
cmpsl
in
ficoms
out
in
fstl
push
jb
sti
imul
mov
clc
icebp
out
jb
cs
loope
add
pop
movsl
insb
pop
je
notb
loope
hlt
add
out
andl
ss
push
pop
dec
xchg
popa
push
adc
lock
push
ja
mov
mov
sub
cmpsb
fcoml
mov
outsb
mov
jge
xorl
cs
and
or
pusha
cs
scas
sub
sub
out
add
sub
fildl
sub
lret
push
or
and
ds
stc
loopne
push
mov
push
mov
lea
mov
jge
sbbl
movsb
scas
add
lods
sub
sub
fisubs
push
lahf
shll
cld
mov
ljmp
sub
push
clc
xchg
sbb
loopne
or
cwtl
aas
rorl
sbb
jne
insb
push
jnp
sbb
jne
in
dec
gs
fsubrl
incl
sbb
arpl
incb
jp
dec
popl
jns
ficoml
sub
add
outsl
cmc
pop
push
adc
adc
out
cmp
xor
aad
mov
add
cli
xor
incb
inc
add
sar
and
lret
inc
bound
mov
fisttps
test
popa
pop
je
mov
lahf
mov
add
push
inc
push
jp
aaa
outsl
push
cmp
xor
push
inc
cwtl
fimull
ljmp
flds
mov
dec
cmp
sbb
lahf
rcrl
push
add
cwtl
and
inc
push
pop
lods
cmpl
test
hlt
enter
stos
outsb
jecxz
jge
inc
lock
jnp
pop
jae
add
sbb
cmpsb
add
insl
mov
xchg
adc
into
push
out
jmp
rolb
xchg
pop
add
add
push
scas
sub
pop
call
and
movsl
cld
mov
cltd
out
sub
mov
adc
jmp
iret
push
jge
mov
loope
cmc
call
daa
shrl
mov
cld
scas
pop
insl
ljmp
les
dec
and
hlt
mov
jno
inc
jmp
sub
unpckhps
daa
adc
cmc
or
sub
outsl
inc
adc
stc
fwait
das
jge
out
xchg
jno
out
stos
lahf
sub
add
daa
cmp
jns
pop
mov
les
enter
sub
stos
xor
insb
pop
cs
sbb
les
jne
andb
ret
and
pop
scas
sar
pop
pusha
mov
icebp
mov
andl
adc
in
out
sti
xchg
jb
adc
sbb
pop
in
scas
adc
enter
mov
bnd
xor
xchg
pop
add
xchg
push
arpl
test
insb
adc
jb,pn
push
jnp
mov
and
mov
fsubl
push
adc
icebp
inc
add
xor
cmp
enter
push
sub
aad
inc
rcl
dec
rclb
test
cld
insl
cli
xor
xchg
ret
pop
and
xor
aam
mov
inc
pop
enter
mov
loopne
idivb
and
std
mov
call
mov
neg
lcall
test
subl
jge
mov
lea
loope
mov
xchg
and
movsb
sarb
dec
js
pop
js
add
dec
rcrl
dec
fisubrl
or
inc
inc
cmpsb
je
pop
sti
mov
dec
mov
fistl
sbb
add
movl
mulb
sub
mov
nop
fmull
dec
test
and
pop
xchg
sub
sub
mov
setbe
test
cmpsl
cld
fldl
xchg
jns
push
cmpsb
add
scas
sahf
mov
cltd
bound
or
mov
push
xor
scas
sub
add
xor
jnp
cli
sub
mov
pop
mov
or
add
xchg
gs
ja
mov
stos
dec
js
dec
insl
neg
aas
push
sahf
pop
notrack
js
jns
cmpsb
adc
mov
enter
test
fwait
jnp
add
fs
aad
dec
movsb
add
loop
push
push
mov
repnz
ret
adc
jmp
xlat
sub
push
shll
mov
lds
pushf
mov
inc
frstor
sub
xor
pusha
pop
divb
dec
js
repz
dec
push
sbb
sti
js
jecxz
fs
dec
dec
adc
xor
std
xlat
sub
inc
sahf
nop
pop
jne
fbld
cmp
mov
mov
dec
sub
clc
xchg
jle
mov
clc
sarb
cmc
mov
out
jo
popa
jecxz
inc
and
cmp
sub
adc
popa
xchg
cld
mov
push
jns
jl
adc
call
int3
push
lods
shlb
sbb
jp
jecxz
repnz
mov
sub
pop
pop
push
sub
repnz
insb
jge
mov
ffreep
inc
cld
add
imul
imul
mov
add
add
or
sarl
js
lret
hlt
lcall
out
insb
fpatan
cmpsb
jecxz
scas
inc
daa
push
adc
and
mov
call
repnz
aam
hlt
xchg
jg
sub
push
or
cmp
js
lea
cmp
push
test
out
xor
cmc
in
or
push
or
in
xor
stos
adcl
pop
pop
jns
aaa
js
xchg
iret
jo
jmp
adcl
mov
ss
mov
push
nop
loop
mov
cmpb
dec
lods
popa
int3
movsl
mov
nop
das
or
jecxz
das
loop
lret
jbe
dec
push
test
aad
inc
andb
xor
adcb
hlt
js
iret
jg
xchg
pop
add
es
jmp
and
xor
mov
push
in
pop
sbb
xchg
pop
cmpsl
ret
add
cmp
adc
cmp
out
negl
lock
shll
imul
adc
mov
add
aaa
in
mov
dec
loopne
push
rorb
es
dec
cmp
push
cmp
imul
cli
cmpsb
ror
pop
push
jnp
call
adc
cltd
xchg
jp
xchg
xorl
clc
stos
xchg
mov
sub
sbb
push
or
repz
xchg
rolb
jns
xchg
rcrl
sarb
movsb
cli
dec
sub
push
lret
adc
and
jb
das
jno
cltd
xor
fldl
ja
arpl
rorb
repnz
movsb
mov
xchg
stos
sti
rcrl
aaa
insb
pop
sbb
inc
test
cmp
stc
jnp
out
pop
sub
ds
pop
sub
or
dec
and
xor
sub
ja
mov
arpl
inc
stos
mov
clc
div
std
das
push
and
fbld
xor
cld
mov
test
iret
mov
adcl
out
mov
icebp
out
iret
aaa
add
inc
stc
arpl
mov
in
add
sub
cmp
dec
inc
sar
sub
push
icebp
popa
pusha
fld
pop
or
mov
mov
movsl
in
xchg
hlt
inc
outsl
dec
pop
add
jecxz
pop
stc
bound
xchg
or
cmp
push
enter
xor
sbb
out
ds
mov
fmuls
cs
cmp
sub
sbb
sbb
dec
dec
inc
inc
mov
lret
inc
nop
mov
lcall
pushf
arpl
add
leave
mov
push
outsb
mov
or
ror
mov
adc
arpl
push
sub
sti
es
das
adc
lock
push
lods
out
xchg
lcall
lcall
mov
push
xorl
cmpsb
out
aaa
adc
lds
test
out
sahf
loop
inc
dec
repnz
inc
mov
into
insb
adc
cmp
lock
inc
add
negw
jo
mov
xchg
enter
idivb
ret
dec
or
call
dec
bound
jnp
inc
cmp
stc
addr16
subb
insb
mov
mov
imul
gs
push
push
lock
mov
push
or
mov
sub
mov
rcl
push
adc
mov
push
jo
mov
lods
ja
or
pusha
mov
mov
xchg
movsb
push
loope
nop
adc
loopne
push
fstpl
cmc
xchg
imull
loop
sub
loopne
jmp
mov
data16
jmp
xchg
andb
cmp
cltd
notb
push
cmp
mov
mov
arpl
test
dec
jmp
mov
mov
inc
push
jmp
adc
adc
lea
test
mov
mov
mov
push
les
rol
jge
lock
jo
inc
aas
mov
nop
cmp
mov
jg
jno,pt
outsb
cld
inc
mov
jb
iret
es
sbb
fadd
cmc
imul
movsb
out
cmp
lock
outsb
popf
sub
mov
pop
in
mov
xor
jmp
push
pop
leave
loopne
nop
mov
fcom
xor
es
or
fcmovb
cmpb
enter
xor
and
mov
mov
or
jmp
and
or
pushf
in
hlt
adcb
inc
cmp
call
fwait
dec
and
int
sbb
xlat
and
add
dec
loope
mov
imul
repnz
pop
push
dec
add
out
xchg
lahf
and
pop
sbb
add
push
orl
sbb
stc
xchg
pop
jns
dec
in
stos
scas
ss
insb
enter
mov
popa
stos
andb
adc
cmp
sub
data16
fmul
lea
dec
lds
movsb
mov
sbb
sub
mov
dec
out
loop
bound
ja
push
dec
mov
xchg
jns
dec
out
loopne
daa
aad
rcll
sahf
fldl
out
add
pushf
lea
sbb
inc
lret
test
xchg
xchg
sub
pop
mov
inc
test
fldt
fsubrl
xchg
aad
adc
and
xor
into
in
sbb
sub
push
adc
stc
pop
jo
aam
push
test
lret
in
sub
pop
in
jg
mov
pop
lret
pop
xchg
sbb
adc
test
popf
add
es
lcall
in
sbb
dec
mov
orl
mov
pusha
outsl
test
push
sub
pop
mov
cmp
call
xor
test
cli
popf
push
push
mov
insb
aaa
insb
popa
jnp
nop
pop
sub
adc
mov
ja
call
xchg
mov
shlb
xchg
xor
push
icebp
lret
lock
fidivrs
test
aad
push
das
push
adc
repz
lret
jno
and
mov
dec
inc
pop
mov
jmp
xor
xor
adc
das
push
sbb
hlt
imul
ja
loop
or
mov
xchg
sbb
jmp
stos
sbb
sbb
sub
adc
in
sub
shlb
ljmp
insb
lods
in
sub
pop
add
sub
lods
stc
nop
add
aam
lods
mov
cwtl
addr16
mov
sbb
cs
outsb
lea
lds
or
sub
popa
negl
jle
ret
ja
xchg
lcall
or
in
bound
in
xchg
out
or
int3
fwait
addr16
or
xor
push
arpl
test
cld
cmp
cli
fbld
and
push
and
lods
ljmp
cmp
repz
repz
fiadds
pusha
in
mov
dec
add
fs
xchg
pop
mov
lea
cmpsl
xchg
and
lods
daa
imul
cld
pop
add
jl
pop
push
mov
shll
cltd
pop
push
xor
scas
pop
xor
fdivr
mov
adc
clc
and
sbb
daa
jnp
push
aam
cmp
fdivrl
scas
mov
sub
sahf
cmp
aaa
int3
repz
and
xchg
xor
out
jge
aam
frstor
lods
call
ret
pusha
xorl
addr16
cld
adc
push
addr16
push
outsb
jge
iret
fstpt
add
sbb
inc
bound
into
xchg
hlt
adc
lret
mov
sti
pop
je
sbb
fs
mov
lea
sbb
fistl
stos
mov
xchg
ss
popa
or
sbbl
jp
fwait
imulb
push
or
ss
add
cmp
and
xchg
mov
xlat
movsl
pop
sub
inc
pop
mov
cwtl
xor
in
mov
mov
adc
test
pushf
test
push
push
xchg
jmp
addb
into
fdivrs
push
lret
or
rorb
ret
add
inc
sti
out
xchg
out
and
shl
sub
stc
lcall
outsl
or
mov
int3
sarb
test
add
dec
dec
lods
xlat
mov
test
mov
inc
in
jmp
pop
hlt
out
adc
das
pop
out
cmpsl
xchg
sbb
xorl
mov
sbb
jle
pop
or
mov
out
or
pop
sbb
sti
mov
es
addr16
rolb
xlat
fbld
xchg
arpl
mov
cmpsb
add
cmpsb
mov
sbb
loop
lret
inc
add
xchg
test
movsb
inc
das
sub
cmpsl
xchg
push
push
gs
gs
lods
jbe
arpl
into
imul
pop
sahf
push
inc
add
adc
and
stos
mov
loopne
cmp
xchg
ja
out
xlat
pop
mov
daa
jecxz
inc
lahf
xor
mov
out
ror
pop
les
movb
pop
sub
or
fs
xor
aad
stos
fwait
jp
rol
in
add
stos
jbe
pop
add
mov
data16
int
sub
and
and
mov
push
xchg
push
push
xchg
sti
xchg
xor
jo
adc
jecxz
add
imul
cmpsl
repz
stos
xor
mov
adc
pusha
pop
in
xchg
mov
mov
inc
mov
push
pop
repnz
ret
mov
ss
xor
cmp
mov
nop
pop
shrl
mov
loop
jl
inc
pop
lahf
xchg
movsb
test
sti
popa
aas
dec
ljmp
rcrl
enter
popf
fnsave
jb
cmp
iret
ja
ret
cmp
pop
mov
push
push
jo
adc
sbb
dec
jb
sub
xorb
rol
jns
pusha
popa
adc
xchg
mov
pop
inc
cmp
pop
icebp
mov
loop
cwtl
xchg
fiaddl
sub
fstl
jbe
push
mov
packsswb
ret
adc
les
push
in
xchg
repnz
add
dec
add
and
push
andl
addr16
push
add
mov
pop
lahf
test
or
ja
rcrl
add
dec
ret
test
jge
shl
cmpsb
pop
loopne
cld
andl
mov
imul
pusha
and
add
mov
test
ja
call
jg
loope
jo
out
add
xchg
lahf
aam
out
add
out
add
jmp
notb
cmp
mov
add
aam
scas
vzeroall
xlat
pop
mov
gs
movsl
push
and
mov
inc
sub
ret
mov
jge
test
dec
mov
inc
das
lahf
mov
fcom
cli
adc
cmp
lret
sbbl
insl
es
lea
pusha
test
imul
cmpsl
orb
shl
test
lock
pop
ret
push
xchg
jl
repz
cmp
jns
inc
add
int3
hlt
jmp
jbe
or
outsl
sbb
cmc
push
loopne
mov
call
dec
hlt
jnp
cmp
ljmp
jns
mov
cld
repnz
push
or
into
mov
outsb
rolb
xchg
mov
leave
fildll
mov
mov
xchg
aad
mov
mov
int
test
movsl
out
out
sbb
mov
xor
xchg
incl
xchg
and
sub
mov
hlt
push
sub
add
andl
iret
push
out
inc
xchg
inc
jb
imul
sbb
pushf
inc
popf
jne
sbb
push
ja
adc
pop
jg
inc
xchg
cmp
in
stc
leave
inc
imul
push
mov
les
pop
mov
ret
daa
pop
xor
mov
mov
cmpsb
mov
xchg
mov
filds
push
enter
shlb
sub
sub
rcrl
daa
adc
pop
push
xchg
mov
inc
imul
into
stos
movsl
and
jmp
pop
xorl
or
nop
mov
icebp
sub
or
mov
bound
mov
jnp
orl
or
push
out
lret
arpl
or
xchg
cmp
cli
mov
fwait
sarb
or
test
hlt
aaa
out
lods
xchg
jle
push
cmpsl
cwtl
inc
insl
ret
movsl
xchg
loopne
in
leave
and
push
cmc
push
xor
sub
pusha
outsb
rorl
test
pop
adc
fisttpll
es
mov
jge
hlt
insl
xor
cmp
mov
jge
jecxz
adc
xchg
fbld
dec
lret
stos
scas
mov
leave
jmp
xor
lahf
mov
daa
lods
leave
fdiv
cs
adc
or
push
les
adc
out
mov
xchg
andb
jg
aad
mov
enter
rcrl
xchg
dec
mov
ja
xor
test
addb
mov
xlat
mov
mov
push
xchg
enter
test
aam
addr16
push
or
mov
aas
dec
in
daa
loop
popa
js
mov
mov
nop
stc
push
test
jbe
or
add
xchg
imul
outsb
xchg
mov
iret
ljmp
adc
nop
sbb
push
xor
imul
sub
sub
push
movsl
add
or
in
mov
pop
sbb
or
pop
push
js
mov
ds
mov
mov
in
sub
repnz
inc
pop
and
push
jle
out
ret
test
cmp
sub
jbe
inc
or
lcall
inc
sti
adc
sub
repnz
add
imul
lcall
push
cld
mov
cmp
loope
inc
inc
call
cmpb
mov
stos
dec
pop
repz
lcall
lds
je
loope
mov
icebp
gs
mov
lock
ljmp
jno
dec
add
mov
ret
cmp
fmulp
mov
push
push
movsl
sub
jl
jge
dec
dec
fcoms
mov
test
dec
testb
inc
out
push
aam
cmp
ja
jns
xor
test
xchg
lods
or
push
das
xor
mov
adc
in
inc
jae
fmuls
mov
jb
adc
sub
mov
iret
push
mov
push
pop
leave
pop
addb
fistl
movsl
xor
fdivrs
push
enter
mov
adc
jl
xor
adc
ficoms
xor
mov
cmp
xchg
ficompl
js
jne
inc
add
mov
or
or
pop
jno
pop
shlb
pop
or
sbb
jg
subl
pop
ds
add
in
push
mov
daa
push
iret
outsl
jg
daa
loopne
shlb
lods
cmpsb
cmp
jp
mov
fwait
out
outsb
test
dec
shrb
cmp
xor
gs
ret
outsl
dec
fmull
sub
rol
sbb
sbb
imul
addl
adc
cs
out
cld
daa
jg
mov
ficoml
mov
mov
xchg
cltd
in
arpl
mov
lret
xchg
cld
pop
inc
fbstp
fsubrs
scas
lea
out
dec
push
into
xchg
leave
mov
lcall
push
es
mov
cmp
xor
jl
jo
mov
mov
and
xchg
lcall
add
cltd
in
outsl
jno
fimull
adc
jp
push
sub
push
cmpsl
mov
jge
lahf
aas
addr16
push
js
push
mov
mov
mov
xor
mov
iret
divb
jbe
add
mov
pop
icebp
xor
sub
or
xchg
sub
je
add
adc
aad
das
adc
pop
fwait
jl
cmp
jns
jp
popa
ja
push
lods
jp
fstps
jo
add
mov
addr16
or
loope
mov
pop
jno
mov
jne
mov
mov
mov
pop
movsl
addr16
sub
inc
mov
daa
adc
psadbw
inc
add
mov
ds
insb
dec
scas
and
and
mov
fldl
push
inc
iret
int
repz
mov
xor
inc
stc
das
das
daa
xor
rcr
arpl
sub
xor
adc
rol
call
int
pop
adc
jae
std
std
je
ficoms
test
xchg
test
sub
or
pop
mov
add
xchg
push
movb
jg
pop
jmp
xlat
jnp
and
repz
stos
push
jmp
in
and
fmulp
cmp
pushf
mov
stos
cmp
hlt
xchg
xchg
xor
xor
jb
jno
orb
ljmp
scas
mov
add
ret
outsl
mul
xor
xchg
sbb
fistpl
ret
xor
lods
inc
add
mov
loopne
cmc
push
lods
mov
std
fisubrs
push
jmp
dec
imul
xorl
loop
xchg
int
test
popf
iret
push
jp
ljmp
mov
pop
sbb
leave
adc
sbb
sub
mov
enter
fs
xor
mov
movsb
stc
jl
mov
bswap
jae
test
fcoms
scas
andb
inc
cmp
push
inc
inc
dec
xor
imul
cmp
cmc
xchg
jbe
sub
add
jl
adc
push
pop
and
addr16
out
daa
jle
sub
scas
sti
or
adc
out
xchg
mov
in
pop
sbb
xor
sbbl
and
pop
lock
push
cltd
das
xor
loop
dec
pop
insb
loop
mov
add
scas
add
sti
mov
or
mov
mov
dec
fmuls
jecxz
pop
add
loopne
xor
sbb
pop
std
divb
xchg
lret
push
daa
xlat
or
inc
sub
cmp
push
adc
in
outsl
jnp
pop
dec
repnz
inc
pop
out
rclb
imul
decl
sbb
cmpsl
and
into
fwait
test
int3
or
pcmpgtb
mov
rcrl
popl
mov
cmp
dec
lods
test
xchg
mov
cmpl
xchg
dec
cmp
pop
pop
clc
int3
and
cmp
out
ss
fwait
test
sbb
les
pop
mov
push
popa
ss
aas
adc
jg
sahf
arpl
adc
rclb
dec
adc
addr16
sub
sub
or
mov
data16
clc
outsb
mov
xchg
fildll
aad
in
mov
das
mov
mov
fisubrl
and
aad
mov
lds
cmp
scas
fsubs
ss
and
mov
cld
mov
mov
aad
std
cs
push
fiadds
in
inc
subb
sar
imul
xor
inc
jns
shll
or
subl
sbb
repz
or
xor
add
call
gs
xchg
idivb
pop
out
or
jns
repnz
pop
mov
mov
lret
mov
mov
fisubrs
pop
sub
push
pop
es
loopne
rcrb
cmp
jl
mov
icebp
mov
out
mov
jle
or
hlt
dec
sbb
fdivl
push
sub
mov
jecxz
jnp
add
repnz
jae
mov
fistps
xor
lahf
jmp
les
or
int
mov
loope
pop
out
add
xor
jbe
sbb
sbb
pop
push
ja
lock
sbb
mov
jmp
repz
add
mov
jl
cwtl
mov
out
pop
cmp
jbe
cmp
test
mov
inc
mov
lea
dec
jns
push
and
jmp
loope
js
repnz
out
mov
fidivl
nop
dec
mov
mov
outsl
xlat
cmpsb
pop
jae
inc
jo
or
lret
xchg
xchg
ja
popl
sti
and
cwtl
push
xchg
clc
std
lcall
jns
bound
cmp
das
inc
and
inc
pop
rcrl
in
rcrl
and
jnp
fisttpl
popa
xor
scas
adc
sbb
and
sbb
inc
out
dec
fs
xor
xor
cltd
mov
jp
and
icebp
loop
nop
push
scas
mov
jmp
sub
jne
xchg
xchg
scas
loop
aaa
mov
jb
cmp
ds
gs
rcll
pop
negb
add
gs
jge
das
test
outsl
aad
xchg
ret
lcall
mov
xor
mov
arpl
mov
imul
push
cwtl
cltd
lcall
dec
outsb
je
fwait
lret
pushl
shll
repnz
inc
gs
gs
fdivl
lret
int3
in
je
xchg
mul
mov
movsl
popf
in
mov
loop
and
xor
fisubs
mov
mov
js
mov
push
xchg
lods
push
add
aad
lahf
mov
cmp
and
adc
test
adc
xor
fcmovnb
push
push
xor
loop
xchg
adc
les
loopne
dec
cmp
ja
or
shlb
add
adc
mov
out
stos
dec
xor
mov
jg
mov
into
lds
xlat
lods
int
int3
pop
mov
xor
bound
mov
xchg
mov
stos
sub
jg
shlb
inc
pop
rcll
dec
mov
push
push
lahf
and
xchg
lds
sbb
sarl
mov
push
sbb
into
jg
push
jg
sub
cwtl
in
out
loopne
pop
pop
push
sbb
cli
cmp
in
pop
cmp
cmp
or
mov
or
inc
int3
push
xor
adc
cmp
or
test
xchg
adc
sub
inc
jl
mov
sbb
bound
movsb
pusha
jle
idivl
call
hlt
jp
jmp
movsb
clc
xor
mov
jno
in
test
push
mov
popf
push
pop
loopne
das
inc
sti
mov
sbb
loopne
rorb
inc
push
dec
sbb
jl
push
mov
add
add
mov
cs
mov
pop
xor
xchg
jge
mov
clc
mov
mov
push
push
sbb
or
jle
mov
andb
xchg
leave
scas
jge
xchg
jo
adc
cmp
mov
push
ljmp
mov
test
jnp
pop
jo,pn
cmp
in
mov
xchg
sub
sbb
iret
push
clc
xchg
in
mov
xchg
fsts
fists
repnz
lahf
call
sbb
xlat
outsl
sbb
fdivr
push
and
sti
decb
jne
clc
jns
adc
xchg
popf
and
jns
imul
cmp
ret
pop
leave
ds
mov
jb
dec
sub
stc
sbb
fmulp
ror
xor
dec
mov
inc
shl
jnp
mov
lds
and
aaa
mov
and
dec
mov
or
popa
xchg
mov
cld
mov
outsl
imul
aam
negl
mov
jo
stc
cwtl
sub
mov
mov
pop
pop
cmp
pushf
pop
xchg
aam
enter
pop
jle
es
jae
clc
jge
mov
adc
mov
in
jae
sbb
xor
stos
movsb
outsl
rcrl
ret
dec
int
adcb
or
loopne
out
push
mov
pushf
jns
mov
jle
ja
jae
insl
std
ljmpw
sbb
frstor
add
addr16
xchg
and
sbb
sbb
inc
in
add
push
and
ret
call
mov
in
xor
add
xchg
mov
jecxz
jne
jg
cld
je
inc
sub
rol
iret
and
ret
push
pop
out
cmp
push
pop
call
cltd
ds
int
ds
adc
lock
lret
cmp
sbb
dec
gs
loopne
cmc
pop
xchg
sbb
dec
adc
out
ljmp
pop
aam
mov
cmpsb
mov
jle
mov
stos
push
push
inc
adc
push
ja
frstor
out
int
sub
dec
je
loopne
jl
or
andb
insb
int3
mov
sub
ret
push
popf
repz
ret
or
jmp
lods
incl
pop
frstor
jmp
mov
or
mov
jbe
pop
dec
push
sub
cmp
mov
and
push
dec
mov
leave
jns
jp
xchg
aad
jbe
and
lcall
sbb
add
cli
xchg
icebp
push
out
jb
imul
lret
push
mov
xchg
dec
lods
sub
ds
lcall
mov
ret
ss
test
fildl
iret
stos
call
aas
xchg
in
shl
mov
add
push
xor
addr16
lret
arpl
pop
stos
lret
dec
mov
fldenv
mull
mov
lea
lret
mov
or
xchg
pushf
pop
push
stc
addb
out
pusha
cs
fs
mov
sbb
pop
xchg
je
shl
cmp
mov
pop
add
mov
pop
sub
mov
inc
inc
inc
idiv
jb
sub
adc
popa
xor
pop
das
dec
in
insb
test
push
fmull
cmp
hlt
xorb
mov
lock
jbe
xlat
mov
push
jns
pop
push
adc
arpl
hlt
cmc
sbb
and
arpl
call
mov
flds
fsubrl
mov
mov
lret
les
xor
out
sbb
loop
cs
add
loopne
idiv
in
lds
or
das
pop
or
leave
sub
insl
lock
jb
daa
mov
xchg
push
ja
jge
sbb
xchg
sub
test
adc
and
adc
or
pusha
aas
loop
mov
push
and
sbb
movsb
sbb
push
sub
mov
mov
loop
jge
pop
paddw
xchg
dec
rcl
stc
push
dec
xchg
hlt
and
push
jecxz
push
popf
loop
addl
stos
or
pop
mov
inc
jl
mov
sbb
pop
and
loope
dec
shlb
jg
fcmovnb
test
daa
lea
push
mov
dec
push
mov
hlt
iret
jb
ljmp
push
jl
xchg
xchg
in
bound
add
lahf
sti
lock
sub
sbb
daa
and
add
mov
mov
or
pop
pop
add
sahf
adcl
fisttpll
pop
push
mov
aaa
pop
adc
add
mov
ja
insb
cmp
adc
daa
lahf
out
jg
xchg
push
add
sbb
mov
inc
mov
std
pushf
mov
rclb
les
jecxz
pop
sbb
pop
pop
repnz
lret
pop
cmp
jmp
fwait
mov
cwtl
add
bound
jg
jecxz
mov
mov
push
int3
jp
mov
jecxz
mov
insb
mov
or
in
inc
shll
clc
nop
in
out
lret
fadd
mov
jle
shlb
xchg
add
cld
dec
ds
lds
aas
inc
repnz
iret
xor
les
data16
scas
movsl
or
icebp
push
jge
int3
rorb
jno
in
adc
xchg
cltd
out
in
cld
orb
call
das
mov
cli
inc
das
inc
fwait
cmp
pusha
icebp
cltd
shlb
jg
clc
dec
adc
mov
xchg
pop
in
or
cmpsb
xor
sub
jl
imul
nop
cmp
dec
lock
xor
dec
inc
cmp
adc
xlat
sar
mov
cmp
test
xor
jnp
mov
mov
cmp
daa
pop
push
addr16
dec
std
xorb
bound
inc
ss
xchg
xor
sub
or
and
ljmp
jp
fmuls
or
add
call
xor
mov
or
mov
sbb
roll
adc
movsb
dec
pop
fcom
mov
mov
pusha
outsb
test
push
out
imull
stos
jne
out
jl
ret
test
loop
mov
js
imul
jl
inc
push
adc
stos
pop
orb
fcoml
ds
push
jae
ja
mov
xor
cli
jb
mov
dec
inc
pop
js
mov
inc
jl
xchg
push
test
fcmovnbe
cld
xchg
or
fwait
outsl
pushl
in
dec
test
jp
and
std
pop
jbe
outsb
sbbb
pop
sbb
xchg
faddl
adc
mov
mov
and
and
xchg
repnz
cmpsl
loop
test
push
repnz
push
xchg
cmp
scas
add
out
hlt
jnp
cmp
sub
jge
adc
dec
mov
adc
fs
pop
cmpsb
xchg
xchg
pop
add
and
mov
sti
cwtl
nop
xchg
mov
inc
cmc
std
int
popa
nop
ss
mov
bound
clc
sub
fwait
popa
push
sub
loop
call
xchg
addps
ss
xor
pop
sbbl
ret
mov
outsb
test
sub
fs
popf
push
mov
cwtl
push
lods
mov
sbb
cmp
jecxz
xor
pop
stos
add
subl
dec
jne
mov
pusha
mov
dec
xchg
mov
jmp
add
subl
test
inc
das
add
push
mov
call
add
xchg
repnz
pushf
rorb
cmpsl
je
adc
jge
pop
add
lock
shlb
dec
mov
push
scas
xor
cmpsl
sbb
mov
je
xor
addb
dec
faddl
cwtl
xchg
mov
and
movsb
test
mov
jge
cs
ss
sub
inc
out
imul
repnz
incl
mov
loopne
out
shlb
in
andb
adcb
push
lods
mov
aam
aas
mov
cmpsl
fbstp
loop
shlb
stos
mov
inc
dec
ret
ja
dec
and
fmull
nop
sub
movsb
out
mov
add
xor
mov
inc
fcomps
mov
cmp
lods
lcall
ss
movsb
cmpb
sub
std
rcll
mov
pop
jno
stos
addr16
cld
icebp
fmulp
xchg
jae
jne
sahf
xchg
cmpsl
int3
cmp
push
push
sarl
dec
data16
adc
aaa
pop
cmpsb
sbb
jno
ljmp
cmpsl
xchg
mov
xlat
inc
cs
lret
xchg
xor
in
lods
sub
or
inc
cwtl
push
test
mov
inc
pop
hlt
out
sub
icebp
loopne
mov
xchg
xchg
data16
pop
push
aam
xlat
pop
mov
cmp
jnp
xor
mov
stc
rcrl
pop
pushf
iret
lock
int
mov
pop
frstor
lods
data16
sub
mov
cmp
dec
pop
clc
push
jne
push
mov
mov
cs
jne,pt
jmp
sahf
mov
sbb
aam
adc
jae
xor
add
sarl
xor
enter
push
mov
repnz
cmp
jbe
inc
mov
pop
push
xor
insl
push
mov
or
inc
aas
divl
adc
orb
xchg
pop
mov
call
movsl
int3
cld
fbstp
push
jne
cmp
pop
out
xor
movsb
pop
sbb
push
sbb
lods
push
fs
push
fwait
popf
mov
xor
mov
mov
cmp
sub
xchg
ljmp
push
and
ret
pop
das
iret
lahf
call
xchg
dec
add
push
fimuls
mov
repnz
popf
adc
xor
out
les
lods
xor
clc
cmpsb
xchg
scas
push
add
sbb
addb
mov
or
sbb
mov
lods
fstps
add
or
fnsave
pop
and
mov
pop
mov
dec
aam
mov
fs
nop
insb
mov
repz
and
pop
rcrb
cmp
pop
fadds
add
or
aaa
pop
pop
xor
dec
bound
jo
pop
loop
sub
sub
sar
push
cmpsl
mov
jg
subl
dec
push
nop
inc
xor
dec
sub
mov
push
xchg
fcompl
push
xchg
push
aad
imul
cmp
js
es
and
gs
lock
xchg
mov
mov
dec
aam
and
ja
mov
cmc
mov
ja
mov
sbb
mov
test
push
faddl
adc
cmp
xor
or
repz
dec
mov
ret
stos
sbb
jo
insl
cli
lds
addb
push
mov
dec
cmp
pop
adc
or
lcall
iret
mov
outsb
test
iret
or
imulb
dec
push
sbb
daa
add
testb
enter
add
lcall
or
push
inc
mov
push
cmpsl
test
pop
mov
cld
push
sub
mov
mov
mov
mov
sub
and
add
inc
add
leave
inc
aas
push
fsub
xor
std
xor
adc
ret
pop
xchg
and
pushf
mov
add
fldt
pop
sbb
push
insb
xchg
or
test
mov
pop
adc
sub
gs
in
mov
fmuls
dec
pushf
lret
pop
push
xchg
les
add
aas
xor
movsl
or
shr
out
lcall
stos
dec
js
stc
hlt
in
js
adc
mov
cmp
sub
push
rcrb
testb
jnp
xchg
jge
mov
pop
decl
loopne
out
xlat
pop
jno
or
jae
inc
loopne
xchg
jo
icebp
xchg
test
add
iret
mov
push
scas
sbb
cwtl
pop
in
adc
add
sarl
ja
rorb
pop
call
out
lods
mov
in
mov
movsb
fdivrs
adc
punpcklbw
xor
xchg
pop
inc
mov
lret
and
sti
mov
mov
mov
xor
xor
loope
xor
xor
repnz
jg
das
sbb
std
inc
fnstsw
testl
cmpsl
mov
ficomps
jae
add
xchg
inc
into
lea
sub
in
inc
pop
push
adc
xor
sbb
xchg
das
push
inc
leave
jne
out
loope
sarl
call
mov
inc
insl
in
pop
fucom
pop
addb
mov
ja
cs
mov
out
adc
xchg
fadd
outsb
scas
lock
stos
es
outsl
xchg
add
popf
push
xlat
mov
inc
push
push
lret
xor
call
inc
cmpsl
addb
hlt
or
cwtl
mov
testb
cmpsb
and
lock
pop
mov
clc
lret
mov
mov
mov
or
xchg
jl
jecxz
psubusb
mov
lods
or
out
or
inc
mov
push
std
iret
movsb
push
jecxz
jb
cmp
push
jmp
push
xchg
pop
dec
lret
test
gs
and
ds
jne
pop
mov
test
loope
shl
popf
imul
xchg
pop
fimuls
scas
add
cmpsb
fbld
push
mov
and
sti
movsl
shl
xor
mov
jb
enter
dec
or
add
cwtl
scas
dec
fcmovbe
pushf
in
jo
loopne
xor
cltd
sub
mov
push
xchg
lds
fisubrl
cs
and
stos
mov
jg,pn
jnp
mov
or
adc
shr
cmpsb
into
loop
fidivrl
or
sti
dec
popf
loopne
sbb
pop
pop
push
nop
dec
push
jne
aam
push
cmp
mov
pop
or
xchg
adc
jae
repz
enter
mov
data16
mov
sub
nop
inc
or
icebp
das
push
nop
push
xchg
fbld
sbb
cmp
push
or
sub
lock
aam
or
lret
in
and
loopne
and
jns
sahf
aam
lret
mov
push
leave
imul
into
xchg
add
push
dec
xor
loop
adc
cmp
rcrl
lcall
outsb
pop
fisttpll
inc
lea
dec
lds
jp
pop
stos
cmp
cltd
fwait
push
sbb
xchg
adc
roll
push
mov
fwait
pop
pushf
jb
mov
es
push
arpl
add
add
inc
adc
sarl
mov
cmc
ret
push
dec
add
or
mov
or
push
mov
push
dec
adc
inc
lds
cmp
push
fsubs
push
leave
mov
jno
cmp
stos
daa
pop
jo
loope
rcl
mov
dec
imul
stos
sub
jo
cld
out
fwait
pop
mov
rcll
mov
sub
mov
cmc
lods
das
imul
sub
push
aas
cmp
fwait
mov
int3
jle
mov
mov
cmp
cld
dec
cmp
pop
testb
dec
mov
or
je
adcl
aam
outsl
outsb
in
movsl
pusha
mov
mov
das
mov
in
add
add
lds
or
fidivs
push
repz
test
lods
rolb
aas
cmp
mov
ss
push
xlat
and
fidivl
call
push
pop
pop
jp
test
dec
outsl
lods
stc
mov
xorb
iret
xchg
call
ljmp
into
lret
push
push
movsb
or
cmpsb
stos
dec
imul
dec
pop
jle
or
loope
in
lods
sub
popa
inc
and
adc
lret
mov
jp
jnp
add
sub
mov
roll
lret
loopne
xchg
cmp
cmp
jae
mov
xor
test
push
mov
outsl
pusha
xchg
mov
aaa
push
push
std
popa
add
rorl
test
or
stc
sti
add
pop
vmovaps
sbb
cmp
inc
daa
out
push
dec
popf
fcmove
jmp
push
xchg
adcb
sti
inc
test
pop
scas
sub
mov
pmulhuw
addl
clc
dec
insl
adc
lods
add
mov
jle,pt
push
xchg
fwait
lret
jbe
cmp
or
jb
repz
cmp
jp,pn
lret
inc
ljmp
lea
push
mov
fnstcw
loop
push
in
fistl
sbb
nop
pop
mov
mov
adc
push
fistpl
adc
ret
mov
mov
arpl
inc
lods
inc
xor
xchg
add
in
test
enter
and
dec
fdivrl
je
cwtl
sbb
pusha
inc
mov
pop
in
cli
jnp
cli
aaa
jmp
into
cmp
mov
push
pusha
mov
lods
push
add
aad
cwtl
mov
pop
sar
mov
lcall
jg
movsb
test
or
jge
fucomp
lods
or
data16
roll
ret
mov
stos
mov
out
cmc
ret
jl
sbb
and
inc
and
int3
jo
xor
jnp
gs
pushf
out
mov
hlt
rcrb
faddl
sahf
xchg
fcomip
cmp
dec
mov
lock
outsb
push
add
call
xlat
rcll
subb
adc
popa
mov
and
xchg
cmp
jg
push
stc
dec
shll
lret
jno
pop
std
mov
xchg
sbb
les
and
mov
push
push
mov
sub
js
hlt
fildll
cmp
test
stc
pop
shr
jns
xchg
inc
cmp
int3
dec
lock
pop
xchg
ljmp
aam
cltd
cs
xchg
sub
cli
iret
push
mov
shrb
dec
scas
sub
data16
push
in
test
sbb
pop
jl
adc
sub
sub
pop
call
push
enter
jge
dec
or
in
inc
stos
movsl
pop
push
sahf
scas
add
repnz
ror
xchg
cltd
rep
xchg
mov
ss
mov
add
lods
aas
cld
in
push
lds
fsts
fs
loop
cld
out
shll
scas
mov
mov
fidivrs
mov
pop
out
data16
popa
mov
dec
inc
add
xchg
jl
add
mov
push
scas
cs
pushf
std
cli
jno
ja
pop
adc
mov
les
ja
jae
mov
lods
test
xchg
sbb
sbb
push
sub
xor
in
inc
pop
xor
loop
adcl
pop
pop
rorb
and
lret
lcall
mov
pop
lock
or
sub
jns
sbb
adc
jbe
sub
test
dec
shll
push
sbb
jle
shlb
xchg
loop
jmp
clc
add
inc
jne
or
and
ljmp
inc
sbb
pop
loope
xchg
jae
mov
scas
cmpsb
dec
dec
repz
lahf
and
lods
mov
fwait
xchg
push
test
movl
or
pop
jg
push
cltd
inc
shlb
xor
pop
shlb
push
and
pushf
clc
cld
or
mov
mov
cwtl
mov
add
dec
mov
cmpsb
xchg
mov
add
out
xor
loope
push
popf
insb
in
clc
xchg
and
mov
test
aad
adc
rolb
xchg
test
fdiv
lret
cmp
xor
xor
jnp
rcrb
jmp
push
add
ds
cmp
hlt
cmc
outsl
xlat
out
mov
mov
cmp
in
stos
hlt
fadds
shll
arpl
call
mov
push
mov
lods
ret
xchg
hlt
jl
dec
mov
sbbl
dec
push
xor
loop
jp
outsb
pop
sarb
sbb
fwait
push
mov
mov
mov
xchg
out
jbe
out
aam
hlt
pusha
sarl
sub
xor
push
fbstp
dec
aas
mov
call
mov
xchg
xor
cmp
jmp
enter
push
pop
mov
mov
fildl
push
shlb
dec
repz
mov
ss
fbstp
add
xchg
jg
fcoms
aas
sub
push
jnp
jle
jp
les
aas
adc
out
pop
mov
into
sahf
in
sar
adc
jmp
lret
loop
daa
hlt
adc
mov
enter
insl
pop
mov
adc
dec
mov
test
mov
xor
push
cmp
loope
push
lahf
out
and
outsl
jg
out
xchg
ds
sub
dec
jb
popa
and
mov
clc
mul
mov
cli
in
lcall
inc
cmp
inc
add
mov
nop
hlt
sub
push
arpl
pop
rcll
arpl
insl
and
shll
jp
fbstp
and
and
lea
div
inc
adc
test
movsb
ds
jmp
adc
pop
lcall
mov
push
mov
cli
sbbl
pop
pop
mov
mov
or
or
stos
sub
add
loop
ret
jle
mov
mov
in
pop
sub
jno
leave
mov
stos
dec
out
cmc
push
sbbb
daa
lret
and
push
lds
mov
dec
inc
sub
add
push
jb
lret
jg
fadd
test
and
jb
pop
inc
and
stos
sbb
notb
sub
xchg
js
and
arpl
inc
ljmp
xchg
adc
ficoml
adc
cmp
sti
test
out
stc
mov
xor
jae
adc
xchg
sti
pop
sete
push
in
xchg
sbb
add
adcl
lock
adc
fnstenv
pop
imul
test
mov
xor
popf
mov
cmp
lret
pop
jbe
loopne
cmp
mov
into
cmp
and
adcl
mov
out
sbb
dec
pusha
pusha
xor
xchg
jae
jnp
jbe
dec
jns
aad
and
push
stc
adc
cltd
inc
xor
xor
outsl
shl
test
lock
out
mov
xchg
mov
sbb
mov
andb
rcl
ss
aam
les
sub
sbbb
andl
inc
sbb
mov
fidivrs
aaa
mov
inc
inc
xlat
pop
icebp
jns
fcoms
xchg
pop
test
add
std
mov
dec
loop
in
nop
push
stos
mov
pop
nop
test
or
sbb
out
aaa
outsb
jg
push
fldcw
jne
nop
xor
ror
dec
insb
push
aas
das
ja
aam
xchg
and
pop
idivl
sbb
fistpl
xchg
jae
sbb
std
dec
jecxz
lea
jbe
ret
les
fsub
imul
inc
test
loope
dec
xchg
inc
out
push
mov
pop
daa
adc
lret
push
mov
cwtl
sbbl
inc
pusha
mov
cli
movsl
add
cmc
ficoml
aam
addr16
cs
xlat
arpl
xor
inc
je
mov
mov
inc
test
or
adc
adc
loopne
cmp
in
jg
pop
lods
sbbl
pusha
aaa
fcomp
in
lock
sub
sbb
jns
aad
cmpsb
addr16
ja
mov
inc
int3
push
and
lock
lcall
inc
mov
ljmp
ficompl
mov
jbe
ja
movsb
add
imul
jb
movsl
dec
jnp,pn
idiv
jnp
lea
jmp
movsb
xchg
pop
ret
pop
cli
jne
sub
ret
xor
stos
or
shrb
test
int3
stos
and
or
fiadds
push
sub
aaa
pop
mov
jbe
nop
push
xchg
mov
fs
jge
ss
mov
pop
into
or
xchg
mov
xor
ds
adc
and
mov
jne
sbb
fwait
inc
dec
or
bound
jmp
pusha
scas
fcoms
sub
xchg
subl
pop
lret
roll
inc
mov
pop
test
push
push
or
daa
daa
xlat
pop
pop
mov
decl
sbb
xor
stos
push
imul
pop
div
mov
xchg
jne
lods
pop
ret
test
add
lods
fiadds
lods
cwtl
cli
je
xchg
in
inc
fisttpll
or
cmp
lds
into
sub
dec
aad
cmp
inc
jne
mov
cmp
out
leave
sbb
sbb
out
or
jns
sarl
xchg
jl
sbb
adc
fcoms
or
adc
jmp
cmc
loop
lret
dec
ljmp
popf
mov
pop
rcr
sub
and
adc
pop
out
jae
jle
xorb
addr16
out
testb
sar
xchg
xchg
imul
pop
and
xor
jle
xchg
shll
jne
cmpsl
add
mov
call
and
mov
sub
inc
mov
push
xchg
xchg
rorl
aas
inc
test
ds
leave
and
cli
sub
xchg
add
insl
lods
pop
outsb
mov
adc
mov
iret
inc
push
rolb
cmpsl
fwait
mov
inc
fwait
hlt
icebp
fistpl
inc
xor
xor
das
sub
lods
into
addl
sahf
pushf
popf
ficoml
hlt
sbb
mov
sub
or
xchg
adc
inc
add
scas
and
adc
imul
push
or
shrb
cmc
leave
fsubp
xchg
cmp
lahf
adc
sub
scas
aad
dec
xor
sub
pop
jecxz
jl,pn
add
jno
mov
or
in
js
or
cmp
xchg
ja
sbb
sub
sbb
imul
add
jbe
cld
jle
push
ret
jne
stos
pusha
cmc
add
test
divb
or
push
ds
dec
pop
adc
out
clc
xchg
or
jbe
and
test
in
mov
jns
shlb
pop
sahf
outsb
faddl
test
in
daa
enter
cld
movsl
js
iret
je,pt
jp
xchg
ss
jno
clc
mov
and
lcall
mov
stos
mov
subb
sahf
mov
jg
daa
enter
and
movsl
mov
and
pop
ja
or
cmp
loope
in
sbb
inc
jns
je
out
mov
jmp
sarb
daa
lods
shl
inc
addr16
xchg
repnz
sbb
jo,pt
sub
mov
lcall
stos
nop
jae
xlat
xor
loopne
dec
pop
pop
test
into
xchg
xchg
adc
inc
dec
pop
xchg
out
lods
lcall
pop
pop
jecxz
enter
fisttpll
mov
mov
add
mov
loopne
movsb
pcmpgtd
fwait
and
decb
outsb
faddl
mov
rcrl
shrb
arpl
push
mov
shlb
inc
movsb
addr16
mov
pop
lahf
movsb
sub
icebp
xchg
int
cmp
ss
std
mov
sub
cmp
repnz
xchg
sarb
mov
jo
dec
push
pop
rcl
lock
mov
jmp
push
pusha
inc
orl
orb
aaa
mov
mov
int3
cs
push
fwait
jo
pop
mov
pop
fsubrl
aaa
cwtl
lahf
mov
inc
lahf
mov
and
test
inc
addr16
ret
inc
jecxz
cld
inc
lcall
or
cmpl
mov
mov
jmp
fimuls
in
mov
or
ss
or
cmpsb
lahf
bound
into
and
pop
rcll
outsl
in
divl
mov
hlt
push
repz
jbe
jl
ja
dec
adcl
and
mov
cli
lahf
dec
das
nop
or
loopne
mov
call
and
sbb
invd
test
in
lcall
inc
mov
pop
lods
and
pop
shll
sbb
popa
inc
add
push
and
xchg
jb
xor
jns
dec
popf
movsl
dec
cmp
sbb
mov
jmp
mov
ret
movsb
ss
repz
cvttps2pi
int3
sarl
mov
outsl
add
in
in
fs
repz
inc
movsb
or
jge
or
adc
gs
clc
lea
fiadds
test
mov
ret
in
dec
mov
xor
xor
push
and
cs
cli
test
stc
lcall
xchg
cld
lcall
cmp
aam
pop
pushf
mov
cmpxchg
adc
sbb
jo
fistpl
xlat
hlt
lods
aaa
adc
scas
sbb
stos
cmp
daa
stos
mov
jp
jo
nop
mov
adc
mov
pop
inc
add
push
and
mov
enter
gs
dec
movsb
inc
ret
mov
popa
and
les
fwait
and
mov
mov
int
pop
popf
sarl
mov
ja
cltd
push
popa
sub
scas
pop
lea
mov
mov
mov
clc
mov
or
push
sarl
icebp
rcrb
and
int
sbb
or
fstl
fisttpll
gs
or
insl
sahf
lcall
sub
into
pop
xchg
pmuludq
mov
stos
out
test
inc
xor
ljmp
stos
loopne
sub
leave
add
filds
xlat
pop
cltd
inc
dec
inc
xor
mov
mov
mov
adc
pop
adc
negb
mov
lahf
in
fsubrp
xchg
insl
and
cmp
adc
sub
push
jmp
gs
addr16
mov
jno
cli
inc
inc
inc
cmp
mov
std
add
cmp
dec
popl
fidivrl
jns
and
int3
push
add
dec
dec
adc
inc
insl
dec
loopne
lret
pushf
lods
movsl
pop
mov
or
rcrl
mov
adc
sub
jb
push
les
mov
jp
and
and
mov
mov
jmp
push
sarb
cltd
sub
push
cmp
ja
test
xor
incb
jl
xor
dec
or
push
loope
mov
adcl
imul
and
xorl
ss
push
icebp
mov
lret
jae
and
int3
push
cmp
and
push
in
pusha
iret
aaa
push
test
loope
rolb
adc
lea
in
ja
sbb
sub
rcl
mov
xlat
xor
repnz
adc
lods
mov
dec
pushf
mov
ret
testl
jb
imul
hlt
mov
mov
clc
scas
dec
push
mov
movsl
mov
adc
ljmp
and
cwtl
sbb
mov
das
dec
cs
rclb
cli
arpl
clc
mov
addr16
cmp
jmp
sub
push
pop
aaa
dec
xor
add
in
out
data16
es
cwtl
jge
pop
jecxz
xor
xorb
lea
js
xor
hlt
mov
add
sahf
sbb
sbb
lahf
in
inc
xor
push
mulb
xor
lret
cwtl
xchg
mov
test
jo
jle
std
pop
stos
shr
jno
loop
ds
mov
std
scas
xchg
je
mov
es
ds
sub
cmp
aad
mov
clc
fcmovnbe
and
jg
inc
test
repnz
scas
stos
xlat
pop
sbbl
dec
ja
scas
jae
dec
pusha
fcmovu
dec
push
and
fucom
outsb
or
mov
sbb
lahf
negb
push
dec
mov
jno
fimull
pusha
dec
scas
mov
sub
out
test
lret
mov
adc
push
inc
insb
lds
pop
pop
jae
xor
lock
prefetchw
or
lods
int
in
dec
adc
inc
cwtl
outsl
push
push
cmc
lahf
lock
fidivs
rep
into
aas
jnp
inc
aam
femms
ret
test
imul
push
mov
pop
stc
fwait
mov
imul
add
jb
xlat
das
xor
cs
stc
pop
jno
dec
out
lret
sub
leave
pop
mov
lret
cmp
pop
adc
out
mov
push
xchg
stos
jecxz
iret
repz
inc
jecxz
push
pop
xor
gs
xor
dec
dec
int
mov
adc
xchg
dec
xchg
ficomps
push
dec
dec
outsb
mov
imul
sbb
sub
mov
xchg
cld
dec
jl
aaa
mov
out
jne
insl
loop
cmp
xchg
bnd
sub
xor
add
lret
sbb
inc
sub
add
mov
sbb
adc
in
dec
shl
cmp
enter
cmp
mov
movsb
stos
mov
adc
pop
idivb
xor
scas
mov
mov
cmp
insb
add
addl
push
jmp
loopne
xchg
mov
stos
cmc
inc
sbb
imul
imul
cmp
or
shrl
into
jg
repz
xor
adc
and
scas
sbb
push
fdiv
daa
push
pop
and
popa
mov
push
adc
fimull
pusha
xchg
dec
jmp
mov
cld
lret
rclb
fnstenv
cwtl
jl
inc
cmpsb
adc
jl
push
fnsave
test
mov
sub
fsub
pushf
pop
inc
roll
jg
into
sub
inc
jge
stos
sbbb
filds
ret
les
push
sbb
xchg
js
int
es
mov
sbb
jno
fscale
jle
push
fldenv
cmc
push
push
inc
lea
cmpl
push
mov
cmp
frstor
cli
push
add
fstpl
stos
popa
dec
pop
fnstenv
mov
pop
or
inc
and
xor
add
push
aaa
mov
or
lret
fsubr
fwait
pop
sub
dec
repz
adc
sahf
push
in
movsb
pop
lods
cmp
sbb
or
jno
jge
add
mov
stos
adc
bnd
aas
mov
sub
lret
adc
sub
insl
sbb
movsl
xor
cltd
iret
out
mov
jae
adc
out
stos
sbb
jae
xor
add
xchg
out
jmp
sub
fmuls
xchg
das
cmp
test
ja
push
mov
cmp
dec
out
sbb
mov
shr
mov
inc
mov
ret
mov
cmpsb
mov
clc
add
mov
movsb
dec
sarl
sbb
dec
mov
rclb
jg
sub
mov
rcl
jb
repnz
jl
jge
popf
js
cmp
sub
rorb
cmpl
mov
popa
cmp
test
pop
dec
ret
imul
cmpsb
dec
push
dec
push
xchg
jo
imul
das
pop
mov
cltd
hlt
jno
sub
std
jns
mov
mov
push
inc
mov
std
jge
pminsw
outsb
xchg
jno
lret
dec
jge
pop
les
nop
aaa
mov
addr16
mov
sar
loop
mov
mov
cmp
xchg
pop
sbb
mov
nop
mov
xor
dec
jnp
std
pop
mov
pop
fisubrl
outsl
sbb
mov
push
sti
loope
inc
push
cltd
pop
xorl
aad
sub
adc
test
adc
aam
lods
mov
ficoml
dec
scas
imul
data16
dec
ret
dec
sbb
shrl
in
or
jg
jge
ret
mov
into
ss
pop
cwtl
test
add
das
sbb
loopne
jbe
shl
orl
cwtl
xor
mov
mov
ljmp
in
out
shll
movsl
mov
shrl
loop
mov
push
stc
addr16
cmp
push
cs
pop
mov
xor
mov
push
xchg
sarb
push
in
cmp
jle
loope
sti
pop
in
test
repnz
sbb
out
adc
cmp
pop
add
cld
mov
sti
shll
pop
inc
adc
or
shll
and
ret
daa
adc
cmp
lret
xchg
repnz
add
and
inc
cltd
movsb
test
iret
loopne
aas
cmc
rcll
in
cmp
mov
and
xchg
lcall
mov
lds
mov
in
xlat
lock
dec
clc
pusha
int
out
das
inc
fs
fs
jb
jne
loopne
push
mov
pop
aas
rcrb
imul
testb
push
mov
cs
in
ret
mov
sbb
fwait
jp
fsubrp
fidivs
dec
xchg
popa
pop
stos
xorb
jg
bound
mov
fsin
bound
add
sti
mov
in
add
mov
or
jmp
pushf
imulb
nop
sbb
in
xchg
jnp
in
adc
out
out
stos
scas
cmpsl
mov
adc
inc
and
and
push
shrl
psubusw
or
popf
fisubs
dec
or
nop
jo
mov
mov
roll
xchg
sbb
sarb
push
inc
sub
xor
add
sbb
lahf
sbb
or
sub
mov
sti
call
lods
andb
sub
mov
dec
mov
outsb
insl
mov
nop
mov
clc
lret
inc
out
inc
adc
sub
xchg
mov
mov
int3
leave
cmpsl
daa
lock
mov
adc
jne
and
mov
imul
cld
jae
xor
push
adc
sahf
addl
jg
outsl
sub
aad
xchg
stos
inc
pop
xchg
ret
xchg
mov
scas
jl
add
movsb
jbe
insb
jle
cwtl
stos
sub
mov
ljmp
enter
mov
mov
push
push
imul
push
fisubs
jg
add
fwait
sahf
sbb
es
sub
and
mov
sbbl
push
push
adcl
jo
or
push
insl
gs
push
call
adc
enter
das
mov
ja
iret
lds
mov
adc
ret
sbb
scas
jg
mov
mov
and
and
imul
decb
das
cmp
fs
fsts
addl
enter
add
int3
xchg
and
das
or
adc
stos
dec
sbb
push
imul
xchg
fwait
adc
aas
mov
xor
xlat
mov
imulb
mov
out
jmp
jns
and
rcrb
out
call
cmp
icebp
dec
cmc
jge
ror
xor
or
add
inc
and
das
mov
or
xchg
insb
sub
fisubrl
push
mov
das
xorb
cs
gs
and
jle
dec
xor
cmp
cmp
jmp
out
jne
xor
inc
mov
push
sti
sub
push
aad
outsb
cmc
fwait
sub
xchg
pop
mov
jl
rolb
adc
fs
mov
xchg
and
xchg
rcrl
and
jnp
sti
popf
add
ds
in
or
add
int3
fisttpll
cmp
pop
fadds
sarl
jnp
pop
int
addl
fs
scas
test
push
inc
divl
sub
rorl
shrb
popa
loope
or
fst
js
or
adc
and
xchg
aam
shr
sbb
mov
clc
nop
pop
mov
inc
and
pop
test
ud1
inc
loopne
mov
sti
outsb
bound
mov
or
or
das
stos
notb
cmp
xor
and
xchg
jne
jecxz
out
sub
xchg
dec
mov
pop
or
orl
in
filds
sub
or
xor
xor
pop
inc
xchg
jo
and
mov
mov
add
dec
xchg
jb
sbb
aam
orb
inc
int3
push
push
push
push
cmp
mov
and
cmp
jg
mov
jle
xor
icebp
sbb
gs
jnp
test
out
inc
cmp
or
scas
jo
movsb
or
in
sbb
sbb
ffreep
cmp
sub
insl
nop
jb
dec
in
sub
xor
stos
jg
enter
nop
inc
ret
or
imul
dec
inc
outsb
nop
jg
arpl
sbb
dec
sub
xchg
repnz
jns
int
mov
mov
dec
test
sub
rcll
jno
adcl
inc
insb
pop
stos
fidivrl
lock
inc
lods
fcomp
inc
fstpt
popa
dec
pusha
adc
out
and
push
push
out
dec
in
cltd
jge
icebp
nop
popf
adc
imul
jnp
or
add
dec
in
mov
and
pmulhw
iret
or
push
out
scas
fcomps
jmp
dec
cld
jge
jbe
ret
push
sub
xor
enter
aaa
sub
pop
insl
cmp
icebp
push
inc
in
in
dec
clc
cmp
sub
mov
mov
andb
push
arpl
sbb
sub
aam
xor
add
push
xchg
dec
ljmp
frstor
xor
mov
mov
ffree
ja
dec
and
inc
dec
shr
sub
pop
hlt
mov
xchg
cmp
mov
sarb
daa
jmp
stos
dec
rcrl
xchg
xor
jb
and
je
popa
push
lds
test
popl
mov
push
pop
or
popf
jge
cld
in
or
out
mov
mov
push
scas
inc
xor
loop
sbb
mov
push
lds
aaa
jae
mov
movsl
test
daa
mov
jno
or
lock
xor
mov
xlat
mov
dec
push
or
push
hlt
jnp
push
adc
dec
outsb
push
ret
mov
movsb
imul
filds
ss
subl
lret
out
loopne
push
sbb
pushf
int3
sub
lods
xlat
push
out
aaa
mov
xor
or
sbb
xor
mov
sub
shrb
cmp
inc
xor
push
cs
push
sub
fiadds
scas
xchg
push
mov
repnz
mov
insb
repz
std
xchg
add
cmp
icebp
jb
shl
sets
popa
lret
cmp
outsl
xchg
push
pop
lock
test
sub
stc
mov
outsl
mov
out
mov
sahf
mov
mov
mov
mov
sarl
or
lret
add
shl
or
cmpsl
dec
inc
jo
stc
pop
mov
cwtl
out
mov
cmc
mov
mov
jg
add
cld
jmp
push
subl
fnstcw
js
sbb
or
test
stc
lcall
add
sub
cmp
ret
mov
ficoms
test
sub
sbb
out
adc
mov
inc
imul
jns
ret
fldenv
dec
rorb
stos
cli
stos
out
lahf
mov
jo
inc
dec
xor
cmpsb
icebp
mov
scas
cmp
xchg
in
cld
jecxz
cwtl
aad
fidivrs
mov
mov
lret
dec
cltd
sub
cmp
repnz
pop
mov
aad
cli
lahf
or
lret
sub
rcpps
shll
repz
sub
imul
and
mov
mov
mov
stc
cmp
es
jns
inc
inc
and
cmp
leave
sub
daa
inc
or
test
aad
out
in
popf
mov
shrb
adc
inc
sub
cmp
aad
loopne
add
pusha
leave
loopne
jb
stc
rclb
mov
push
lret
push
int3
jmp
sub
jl
push
movsb
in
out
mov
fistps
mov
jg
mov
adc
movsb
jge
adc
xchg
or
loopne
inc
add
loope
or
mov
cmpsb
and
mov
jb
mov
aam
lcall
push
mov
dec
nop
mov
cmc
mov
xor
adc
inc
lret
push
out
mov
jns
push
mov
push
sbb
gs
mov
rolb
sbb
hlt
or
aam
and
cmp
mov
rolb
cwtl
fwait
pop
jmp
idiv
push
push
pop
dec
or
sbb
in
cwtl
or
std
push
add
loope
jge
fldenv
lods
push
lods
pop
sub
adc
cli
jae
mov
jne
mov
leave
fwait
inc
aad
jp
fiadds
shr
xchg
xchg
or
lods
cld
mov
inc
arpl
pop
sahf
jb
aas
jle
sbb
cmp
lret
je
stos
ret
sub
cmp
pop
aam
mov
adc
cli
loope
pop
aaa
test
movb
in
mov
xchg
push
ja
andb
outsb
imul
sub
loop
sbb
and
push
fisubs
rcrl
nop
add
mov
push
or
loopne
fsub
pop
rcl
mov
lods
shrb
mov
xlat
lods
mov
xchg
or
enter
push
inc
mov
fucomip
pop
lods
jge
sub
pop
push
sarb
enter
adc
push
mov
pushf
dec
stc
add
outsl
add
mov
fstpt
adc
hlt
lret
dec
lret
imulb
imul
test
out
adc
jae
sbb
pop
sub
jl
add
push
mov
inc
insb
outsl
fcmovnb
xor
push
pushf
frstor
and
pop
push
cmpsb
pop
insl
and
call
lret
adc
lock
push
mov
mov
sbb
in
movsl
jns
add
cmpsl
push
pop
inc
clc
shr
pushf
rep
gs
push
stc
stos
sub
push
push
inc
gs
cmc
lds
movsl
xchg
loop
shll
mov
ds
movb
clc
popa
jo
lea
stc
repz
xchg
cmp
dec
jae
mov
add
fwait
mov
cmp
cs
rcl
lahf
pop
dec
mov
push
movsl
xchg
test
addl
xor
in
test
push
aas
sbb
int3
jmp
fimull
mov
or
xchg
enter
mov
movsl
cmp
pop
jnp
add
data16
push
lret
xchg
in
fisubs
push
fmul
mov
out
mov
mov
dec
in
cli
cmpsb
mov
xchg
xor
aad
or
inc
pop
or
sbb
lret
stos
ror
stc
jne
sbb
jge
jae
stc
jmp
jns
test
inc
pop
pop
add
push
movsl
in
inc
xor
dec
lods
in
scas
dec
pop
and
xor
mov
fs
cmpsl
pop
daa
cld
aam
mov
js
ja
lods
test
adc
addb
cli
mov
sub
xchg
rcll
mov
jo
add
mov
inc
testb
jno
xlat
lods
mov
hlt
sub
xchg
add
ret
mov
pop
test
shr
shrb
test
dec
aas
jmp
aam
sbb
or
cmpb
pusha
jb
popf
cltd
mov
fwait
push
xchg
fistl
lea
and
inc
inc
sbb
inc
push
jmp
and
mov
shlb
cwtl
scas
orb
add
xchg
mov
xor
mov
mov
dec
lea
mov
mov
pop
out
fwait
cmp
jle
and
pusha
inc
iret
push
sub
inc
test
cmp
push
dec
std
cld
rcll
std
xchg
push
clc
push
clc
sub
jns
imul
adc
mov
je
adc
or
dec
insl
sti
aaa
rclb
lret
fcoms
test
jno
stos
mov
call
push
and
stc
push
in
in
pop
jle
push
xchg
out
std
popf
not
es
fistl
and
testl
jg
test
icebp
mov
data16
in
das
cmc
add
xor
insb
loop
xchg
cmp
imul
std
lahf
es
or
fdivrs
movsb
dec
cmpsb
rcrb
inc
jmp
dec
cmp
mov
cli
or
mov
push
mov
and
imul
mov
dec
xlat
add
hlt
mov
pop
lods
mov
mov
mov
mov
cltd
enter
adc
fnsave
imul
adc
mov
repz
sub
sbb
dec
sbb
xchg
dec
repz
imul
data16
rol
jg
mov
out
or
int3
sub
mov
push
inc
sub
sbb
test
dec
cmpb
mov
adc
push
faddp
lods
pushf
xchg
fldl
enter
jno
fcompl
xlat
mov
mov
or
iret
scas
movsl
orb
dec
out
lds
cmp
inc
mov
and
sbb
or
pop
jp
popf
sub
or
and
lcall
out
add
je
dec
pop
push
shr
mov
lods
cmp
cs
rol
jne
out
cmpsb
loop
or
ss
repz
div
adc
dec
gs
and
out
iret
add
xchg
or
int
mov
adc
push
fbstp
jne
out
mov
aam
iret
push
fs
stos
xorl
stc
rolb
lods
inc
inc
test
inc
insl
and
mov
addr16
inc
jnp
push
mov
push
xchg
cmpsl
dec
rolb
pop
hlt
or
sub
insl
les
dec
insb
pusha
adc
cmc
fcmovnbe
fstps
inc
mov
pop
sub
push
adc
out
and
cs
mov
test
insb
pop
jle
jl
sbb
stc
mov
jp
sub
cwtl
and
mov
call
sbb
pusha
xor
jg
xlat
lret
sub
outsl
add
mov
fnsetpm(287
add
ret
sbb
sar
jmp
xchg
shlb
jbe
sub
mov
push
pop
push
sub
adc
sahf
lock
or
xor
enter
push
inc
int
dec
and
icebp
xchg
fsubr
ljmp
pushf
enter
mov
dec
mov
repnz
negb
inc
sbb
nop
sub
or
inc
std
mov
ljmp
xor
pop
into
pusha
inc
jo
jg
sbb
movsl
mov
cs
cmpsl
in
push
fisubs
dec
out
sbbl
pop
xchg
in
xor
add
pop
lock
dec
mov
sub
lds
divl
inc
loopne
aad
mov
jecxz
shrl
out
scas
mov
sbb
push
add
pop
pop
ljmp
fimull
jecxz
loop
imul
out
push
inc
jl
add
dec
mov
mov
xchg
ljmp
dec
push
and
sbb
cmp
adc
jae
test
jecxz
sbb
adc
xchg
sub
lcall
push
sbb
out
mov
clc
mov
and
dec
repnz
sub
je
lret
push
cli
cli
mov
mov
add
push
xchg
pop
repnz
add
fistps
test
jns
and
pop
inc
pop
mov
sbbl
mov
ss
mov
mov
push
jecxz
sti
cli
xchg
sbb
loope
xchg
ret
pop
addr16
push
xchg
jns
rclb
cltd
mov
pop
mov
jnp
jne
notb
mov
gs
xorl
out
call
or
nop
std
aam
mul
daa
xor
dec
pop
arpl
push
inc
or
test
call
in
outsl
sti
daa
movsb
jbe
pop
sahf
push
mov
mov
in
add
out
or
mov
call
mov
xchg
stc
lods
jno
inc
out
push
xchg
pop
push
and
add
test
pusha
mov
xor
imul
xchg
cmp
jb
sub
jb
mov
popa
dec
shlb
adc
xchg
xchg
push
push
pushf
movsb
mov
test
sbb
stos
adc
mov
das
adc
jl
fstpt
push
or
mov
push
pop
mov
bound
cs
mov
stos
nop
loope
jge
cmp
xchg
adc
sub
push
orb
lahf
add
mov
mov
push
and
in
sti
dec
je
dec
pop
add
mov
jne
jne
pop
lret
loopne
gs
xacquire
dec
and
xchg
cmpsl
adc
ret
mov
sarl
add
stos
sub
fldl
rcrl
xor
sarl
cwtl
stos
add
xor
lret
mov
cwtl
cltd
jp
xchg
cmp
xchg
lret
jne
test
lea
mov
pop
test
imul
lahf
fdivrl
jl
shrb
add
inc
movsl
and
movsl
mov
jge
pop
and
adc
ja
pop
scas
dec
rorl
inc
pushf
pusha
jp
not
out
push
xor
mov
sub
xchg
adc
arpl
sub
popf
ret
repz
stc
sub
js
cmp
dec
loop
push
fst
dec
bound
cmpsb
xor
in
ucomiss
popf
xchg
sub
cmp
xor
cmpsl
mov
and
dec
push
js
rorb
pop
xor
fwait
dec
test
mov
jle
push
or
lds
je
cmovnp
pop
mov
ljmp
mov
scas
ljmp
mov
jb
adc
add
call
mov
outsb
sub
sbb
jbe
imul
adc
dec
inc
sbb
jne
xlat
outsl
lods
lret
xchg
lahf
fwait
mov
xlat
test
push
lret
subl
xorb
outsb
cs
insl
sub
ret
push
aam
imul
jmp
inc
imul
outsl
push
push
and
and
mov
clc
jle
fwait
inc
xchg
popa
movsb
pushf
out
popf
filds
adc
fisubl
pop
lahf
inc
jmp
je
mov
orl
stos
push
cmp
popa
inc
and
es
repz
emms
iret
adc
mov
sub
xchg
push
lret
insb
mov
fcmovb
out
icebp
pop
pop
test
sub
sahf
in
mov
les
inc
sbb
test
xchg
je
push
mov
jl
mov
jecxz
pop
xchg
shrb
dec
and
pop
cmp
dec
mov
je
jmp
jl
push
sub
adc
rcrb
inc
push
sub
cli
xor
add
leave
add
test
push
mov
sbb
sub
and
fs
lds
jns
pop
aas
in
push
aas
xor
fcmove
add
jp
out
xor
mov
cli
mov
ffree
add
hlt
arpl
jecxz
cld
dec
test
xchg
sub
outsl
fldenv
sbb
jg
lea
ss
lods
loopne
aam
push
mov
adc
call
cmc
arpl
sbb
jecxz
and
inc
roll
dec
test
fbld
fiadds
adc
mov
ljmp
repnz
imul
data16
adc
andb
cmp
mov
mov
xchg
aam
cmp
sub
mov
mov
ss
xchg
mov
add
xor
stc
int
js
mov
add
std
scas
sbb
cmc
lret
xor
jo
dec
aam
jge
into
pop
movsl
movsl
dec
nop
dec
inc
cld
sahf
addl
mov
inc
jb
repnz
xchg
sbb
arpl
fldcw
mov
bnd
es
add
sahf
add
fimull
mov
jecxz
sbb
jg
sbb
imul
xor
pop
adc
and
cmc
and
sub
call
scas
cmp
push
mov
mov
ficompl
adc
dec
mov
hlt
dec
fistl
test
dec
mov
push
int3
das
and
lret
iret
dec
fcomps
dec
into
or
fs
test
jbe
xor
shll
fisubs
arpl
jge
fld
xchg
rclb
std
jns
mov
xor
das
xchg
lock
leave
mov
xchg
sbb
xchg
jg
jne
inc
test
rcrl
test
movsl
es
icebp
xor
jp
imulb
jne
lods
and
push
in
and
pop
and
loope
cs
or
jnp
push
lock
bound
pop
add
arpl
sbb
divl
loop
jae
adc
daa
jb
adc
mov
fisubs
pop
sbb
nop
fxch
and
stos
imul
push
mov
dec
shlb
pop
jmp
and
mov
xchg
mov
lret
push
ds
cwtl
sbb
lock
push
mov
dec
mov
push
mov
or
lret
arpl
cs
xchg
sub
jge
xor
rcl
fsts
mov
inc
xchg
lock
es
push
popf
les
and
mov
xchg
xchg
sbb
xor
cmp
int3
popf
lods
aas
mov
cld
fdivrl
and
int3
in
faddl
call
ds
mov
adc
dec
adc
ss
dec
xchg
ficomps
mov
inc
data16
sbb
cmpsl
add
xchg
inc
sbb
add
mov
and
js
pop
out
out
mov
mov
jle
popf
mov
imul
pop
inc
mov
ret
or
stc
mov
mov
in
pushf
xorl
scas
xchg
cmc
popa
into
xor
cmc
ficomps
shll
cmp
inc
subb
repz
mov
pop
push
push
cltd
xorl
cwtl
mov
leave
pop
jle
stc
sub
sub
xchg
sub
ja
jg
sub
dec
lds
sahf
cwtl
add
shl
aaa
out
jle
jmp
daa
jno
xchg
std
scas
add
mov
mov
xor
push
enter
jne
int
pusha
imul
outsb
rcr
movsl
mov
jmp
pop
stos
mov
addr16
inc
cmp
mov
pop
out
mov
cs
and
mov
loop
sbb
pop
movsb
lahf
iret
arpl
outsb
stc
or
sub
lret
daa
push
push
out
cmpsb
mov
sub
mov
xor
dec
sbb
mov
cmp
enter
loope
add
xchg
enter
jno
xorl
outsl
es
jmp
mov
or
jne
cld
xchg
mov
and
fists
jo
rorb
mov
xchg
jno
adc
xchg
add
sbb
fs
jnp
mov
jno
fs
jle
add
xor
jl
xchg
popa
adc
pop
mov
sbb
xchg
adc
push
lcall
outsl
mov
out
iret
and
inc
pop
rcr
inc
push
xchg
dec
mov
adc
xchg
mov
test
fisttpl
movsb
popa
pop
jb
push
jg
cmpsl
fisttpl
int3
ja
xor
inc
add
jge
add
xlat
in
cld
out
std
ret
add
subl
pop
aam
repnz
aaa
popa
and
pop
sarl
mov
lea
mov
add
jb
jp
xchg
inc
out
scas
sbb
lret
out
pop
inc
ret
cmp
mov
cmp
mov
sbb
cmpsb
cmpsl
aad
divb
stc
xchg
lea
scas
mov
or
pop
adc
mov
fstps
idivb
pop
and
jp
decl
push
insb
jne
stos
inc
mov
fdivr
push
insl
jp
mov
fs
or
pusha
mov
xchg
xorl
xor
xchg
notl
cmc
inc
leave
pop
dec
cmp
jnp
out
sbb
cmpsb
mov
in
xor
jne
jo
add
dec
outsb
cmpsl
addl
xchg
xchg
inc
or
sti
fildl
inc
lock
mov
rol
jne
push
pop
das
shl
test
scas
push
aam
insl
flds
mov
mov
xor
or
mov
push
lods
cmpsl
movsl
cld
xchg
push
in
sbb
pop
fmull
test
xor
fs
into
dec
sbb
popf
imul
idivl
xchg
stc
dec
or
jg
shll
dec
pop
pop
sahf
addr16
sarl
mov
ja
jne
lods
lret
xor
inc
incl
mov
rorl
lret
sbb
out
aas
cmp
and
cmc
lods
push
js
inc
pop
icebp
mov
jo
dec
lahf
xchg
adc
jne
ds
push
fs
ja
popf
ds
mov
xchg
dec
mov
das
push
adc
mov
sar
or
push
addl
cmp
mov
sbb
sbb
repz
pop
push
push
imul
lods
inc
in
jle
iret
std
sub
cmovb
and
sbb
xchg
and
xchg
movsl
jge
inc
xchg
test
imulb
inc
xchg
cmp
lods
pop
xchg
outsb
outsb
stos
mov
aas
mov
mov
test
roll
stc
pop
or
or
arpl
nop
push
out
shrl
stos
mov
or
inc
or
mov
mov
cs
cwtl
pop
jns
arpl
bound
lahf
cmp
fisubl
jmp
jecxz
sbb
add
cld
xchg
stos
aaa
cmp
dec
push
mov
sub
inc
mov
aam
jg
insb
ljmp
and
std
xor
lods
mov
cmpsl
cli
fs
xor
xchg
mov
push
shl
cltd
and
aam
or
subl
rclb
and
lahf
mov
push
push
adc
pop
aas
ljmp
shrb
sbb
jbe
std
cli
pop
mov
jle
fdivl
xchg
mov
jmp
in
mov
mov
jge
stos
mov
lods
cld
mov
dec
pop
jb
sbb
dec
dec
in
cmpsb
movsb
cmp
clc
movsl
addr16
jecxz
xor
mov
xchg
data16
es
inc
xchg
fidivs
scas
lock
cltd
push
sbb
mov
xchg
clc
repz
cmc
xchg
push
mov
in
add
es
xchg
xchg
cmp
ss
fldt
jmp
and
mov
out
dec
mov
into
fdivrs
lea
mov
shlb
cli
movsl
mov
inc
cmpsb
sbb
mov
dec
jg
aas
je
out
adc
ret
in
mov
dec
mulb
test
jae
jne
adc
jmp
pushl
sbb
filds
cmp
cmpl
pop
mov
push
jp
mov
scas
cltd
lret
jle
mov
sbb
std
ljmp
mov
cmpsl
outsb
cs
movsl
into
mov
lds
inc
add
mov
xor
xor
cmc
push
repnz
aad
std
dec
dec
dec
jb
lgs
lds
xlat
aam
cltd
test
sbb
xchg
insl
inc
test
test
jg
mov
or
push
inc
pushf
sbb
jne
gs
loop
adc
and
xchg
mov
fucomip
or
pop
jo
loope
jns
push
dec
bound
push
pushf
filds
xor
or
pop
aas
mov
arpl
pop
mov
jle
mov
mov
inc
test
mov
add
mov
mov
ret
mov
imul
sbb
arpl
mov
jg
cmp
icebp
inc
mov
xchg
or
js
push
add
cmp
stc
push
stc
pop
nop
ja
stc
shll
decl
cmp
int3
pop
scas
repnz
sub
push
jmp
add
lds
imul
sub
and
sub
adc
fldenv
cmpl
mov
jmp
sbb
in
pop
ret
ds
in
mov
loopne
mov
adc
popa
add
or
cmp
jmp
and
ror
popf
ret
fdivs
ds
int3
xchg
ljmp
movsl
inc
leave
popa
mov
addr16
push
pushf
mov
jp
sub
pop
inc
and
add
lds
xor
js
cmp
fcmove
js
sub
mov
xor
out
cmp
add
loope
adc
cld
inc
leave
add
in
mov
out
xchg
inc
adc
mov
pushf
aad
mov
test
cmp
cltd
icebp
cmp
and
sbb
push
cmc
xor
add
and
outsl
iret
dec
ror
or
mov
cmpsl
add
xchg
aam
cltd
push
pop
or
fmuls
sbbb
sub
or
fwait
loopne
sub
divl
sarb
push
shrb
xor
enter
out
and
orl
in
xchg
cmpsb
push
addr16
scas
sub
aaa
loopne
or
pusha
jo
mov
stos
mov
pop
and
mov
mov
push
or
shrb
call
jl
fwait
mov
and
xor
cmp
lfs
lods
aam
push
out
cmp
adc
jmp
jne
jne
aas
pop
xchg
out
loope
test
mov
xchg
mov
mov
repz
xlat
sub
add
cmpsb
nop
jo
and
push
loope
fwait
cmc
and
shrb
mov
and
sti
sti
stos
push
jbe
add
pop
cltd
jle
mov
mov
jl
push
rorb
lds
jbe
lods
mov
push
mov
in
and
cmp
cmc
push
xchg
dec
push
lods
dec
cmp
pushf
lea
cli
adc
jl
inc
dec
jmp
decl
xorb
ficoms
push
dec
loope
jae
mov
clc
add
je
jp
xchg
lods
xchg
and
loope
jp
rorb
xor
push
inc
imul
push
push
jmp
and
ficoms
sub
std
xchg
push
aad
fiadds
scas
repz
mov
cmpl
jmp
out
xor
outsl
mov
mov
in
add
test
pop
dec
test
jo
push
into
out
nop
or
add
sbb
xor
push
shl
dec
and
xchg
jb
sub
push
dec
mov
inc
mov
js
std
sbb
enter
imul
pop
xor
mov
jmp
test
iret
push
not
lds
jne
int3
pop
jb
in
pop
jge
dec
inc
fstl
fisubrl
and
loopne
daa
ljmp
js
mov
push
leave
push
dec
inc
jo
aaa
icebp
pop
std
in
push
decl
sub
xchg
mov
leave
or
push
add
out
cltd
pop
mov
movsl
aaa
dec
push
adc
je
xchg
add
xor
push
imul
fistpll
aaa
lea
add
add
push
mov
cld
dec
xchg
add
mov
xchg
lret
cmpsb
lcall
insl
leave
int
enter
xor
daa
lcall
daa
dec
pop
clc
mov
pop
xor
lcall
xchg
out
mov
dec
lret
jae
pop
sub
gs
daa
lret
or
add
lahf
std
popf
in
jno
sbbb
xchg
test
shlb
cmp
paddusb
cmp
lret
lcall
pop
mov
loop
sbb
movsl
inc
je
pop
int3
inc
hlt
fnstenv
sti
ret
pop
mov
divl
xchg
or
inc
pop
cs
mov
cmpsl
shrb
and
outsl
cmc
sarl
push
push
ret
cmp
cmp
inc
subl
sbb
jne
push
fstpl
push
or
subl
and
pop
gs
in
sbb
lock
cmc
mov
inc
or
pop
stc
data16
stc
dec
orb
aaa
shll
adc
cwtl
xor
insl
aaa
mov
sbb
ja
cld
xlat
aad
int3
and
cmpsl
loope
int
mov
out
jmp
lea
push
orl
cmpsb
push
pop
sub
adc
sub
icebp
jp
outsb
or
in
jl
dec
cli
adc
mov
pop
mov
lret
sub
sti
xorb
jo
js
outsl
daa
or
cmp
push
mov
imul
mov
mov
imul
and
fmuls
and
outsl
ja
fs
iret
sbb
stos
dec
sbbl
jb
stos
shll
and
cmc
fildll
lods
add
lret
pusha
int
or
aam
xor
clc
gs
ss
fisubl
or
push
jp
inc
lock
sarb
adc
test
cmp
xchg
inc
repnz
cmpsb
leave
xlat
jl
mov
mov
cmpsl
push
jmp
adc
mov
ja
inc
jae
mov
clc
xchg
push
push
sti
lods
mov
jb
lret
in
add
push
and
fnstsw
mov
mov
test
int
inc
jb
ja
insl
repnz
js
ret
mov
mov
mov
push
ret
ljmp
add
mov
jns
sbb
push
movsb
mov
mov
xchg
push
sbbl
out
insl
add
and
add
js
mov
cmpsl
jno
rclb
divb
push
sbb
repz
pop
xor
adc
mov
enter
jae
cwtl
insb
movsl
data16
in
push
xchg
mov
data16
lods
mov
ja
sarl
test
jae
inc
call
pop
outsb
fmull
jb
push
andb
inc
sub
mov
mov
shrb
pop
fsubrl
cmp
lods
sbb
or
push
loopne
insl
jns
movsl
popf
insl
aam
pop
pop
js
popa
out
xchg
repnz
dec
aaa
pop
mov
lock
mov
cli
jle
or
imul
mov
cwtl
mov
adc
adc
test
lods
cld
adc
je
jg
dec
xchg
fwait
mov
call
adc
lea
daa
cmp
cld
faddp
adc
adc
cmp
cwtl
test
mov
subb
cmp
cwtl
jo
loopne
mov
lds
hlt
js
cmpsl
dec
and
sar
push
xor
mov
sub
mov
popa
push
add
lcall
out
stos
push
int3
loop
sarb
stos
shll
insb
jg
les
in
inc
rol
jb
cmp
jl
imul
jge
addr16
incb
inc
sti
sub
dec
out
lcall
fisubrs
movsb
lds
pop
addr16
push
push
sbb
adc
clc
aaa
mov
mov
lahf
xchg
adc
js
mov
and
or
xor
aas
push
dec
fnsave
addl
push
cmp
bound
pop
xor
jnp
add
adc
popf
gs
fs
xor
sarl
scas
dec
pop
sbb
cmp
add
sbb
movhps
xor
dec
sbb
imul
mov
test
push
int3
or
ret
nopl
leave
or
nop
add
pop
jl
rol
add
cmp
movsb
gs
mov
in
in
std
cmpb
dec
je
inc
insb
addl
xchg
shl
adc
and
data16
jnp
jle
or
sbb
fcoms
insl
add
jb
mov
jecxz
sbb
test
js
lret
and
sub
test
dec
push
push
sbb
xchg
mov
rcr
shlb
call
sbb
mov
cmc
mov
lds
mov
push
in
movsb
mov
ljmp
loope
daa
mov
in
les
mov
fmul
xchg
xlat
int3
ja
mov
jae
dec
test
imull
pop
and
cmp
or
mov
dec
push
fs
and
lods
jne
and
and
dec
sbb
jbe
push
cmp
push
pop
jecxz
out
shrl
cli
mov
adcl
xchg
js
lret
mov
xchg
ret
int
jne
or
cli
sahf
mov
fwait
rolb
cmp
or
icebp
gs
pop
movsb
ljmp
repnz
lock
cmp
shlb
jmp
fwait
aas
xchg
jecxz
and
cmp
add
push
in
push
addl
push
fidivrl
fwait
jae
pop
hlt
addr16
lcall
mov
outsb
ret
movsl
sbb
adc
ljmp
aad
xor
mov
out
dec
outsb
popa
mov
stc
dec
lcall
fwait
cmpsl
pop
bound
mov
cmp
pop
adc
and
repnz
mov
cld
jno
mov
cld
fcoms
outsl
je
adc
addr16
xor
imulb
xor
cs
mov
subb
imul
outsb
fdivl
mov
testb
or
xchg
fwait
stos
repz
ret
mov
jl
push
dec
or
sub
jg
add
xchg
sub
and
jg
mov
pop
out
lret
arpl
sbb
frstor
hlt
das
inc
mov
mov
aaa
adc
in
sti
jge
rorb
addl
sbb
push
jl
inc
fisubrl
dec
outsl
adc
iret
push
stos
stc
test
shlb
fcompl
sbb
or
push
mov
inc
cmp
cmp
mov
dec
sub
stos
repz
xchg
ficoml
dec
faddl
adc
sbb
adc
bound
mov
inc
xlat
xor
stos
test
adc
and
jo
cmp
cwtl
jne
mov
lret
popf
xchg
inc
jb
mov
aaa
cmpsl
ja
jmp
enter
in
pop
or
or
jno
or
into
insb
loope
outsl
cmp
mov
mull
fsubl
lea
sub
in
sub
jg
xchg
ret
js
repnz
cli
js
push
mov
enter
loope
jbe
jo
sarl
xchg
push
jb
int
xchg
arpl
mov
push
fdivrs
pusha
dec
mov
test
in
fwait
add
sub
fcmovu
dec
insb
add
mov
int
fsubrs
cmp
stc
icebp
je,pn
pop
rcll
or
fbstp
cmpsl
jle
stc
push
test
and
pop
sti
cmp
mov
push
adc
inc
add
out
jecxz
pop
xchg
data16
loop
push
int3
xchg
xor
ja
and
jl
sub
or
mov
inc
xor
aaa
pop
stc
es
ror
jbe
xlat
push
cs
xor
and
xlat
sbb
mov
movsb
xor
push
cmp
pop
outsl
fsubs
sbb
in
jae
push
mov
adc
jg
out
mov
dec
add
push
mov
in
mov
hlt
mov
fwait
in
testb
sbb
out
mov
insl
xor
mov
cmp
and
iret
mov
lds
int
out
nop
mov
mov
and
mov
add
adc
and
shl
jmp
push
rcl
mov
movsl
mov
mov
scas
adc
js
adc
cmpsl
je
ss
loope
jnp
cmp
cld
lods
add
push
in
mov
jecxz
or
aad
add
jno
mov
jmp
mov
sub
push
mov
dec
fs
jmp
pop
and
stos
pop
xchg
mov
addr16
and
jp
pop
leave
push
insl
cltd
sub
cmp
fsts
dec
jnp
daa
imul
and
cmpsb
enter
andl
cs
ret
or
mov
test
or
shrb
push
lcall
jle
mov
xchg
das
lods
ss
sbb
test
aas
or
sbb
outsl
lret
jge
out
rcrb
ret
arpl
adc
push
aas
in
mov
pop
stc
insl
sbb
mov
add
mov
sahf
pop
add
mov
arpl
or
je
int
shrb
xor
adc
std
iret
cmp
xchg
mov
leave
daa
push
aad
pop
fsubl
push
sbb
inc
jae
fcompl
aaa
mov
mov
xor
or
daa
mov
cmp
stos
xor
cmp
add
andl
mov
cld
mov
insl
xchg
xor
shlb
int
mov
in
lret
call
repz
add
movsb
add
cmp
and
adc
mov
rcrl
popf
and
ret
stos
mov
pop
push
popa
f2xm1
mov
pop
adc
ljmp
mov
mov
lods
mov
xchg
push
iret
push
and
or
cmp
mov
or
inc
jne
or
popa
out
ffree
test
xor
mov
loop
loop
mov
inc
mov
pusha
sahf
xor
pop
mov
mov
adc
lods
aad
mov
loop
pop
fdivrs
popa
stos
xchg
mov
into
sti
sub
insl
int3
loope
mov
insb
inc
das
add
pop
sub
gs
mov
xchg
sbb
adc
stos
ds
rcrb
xlat
and
jg
push
dec
in
mov
ljmp
push
insl
repz
or
fsubrl
cli
fstpl
test
lock
jnp
lea
sbb
dec
cli
mov
pusha
scas
cmp
iret
ljmp
cltd
fisubrs
sti
mov
jo
insb
fstl
or
lret
test
mov
or
adc
fstl
ret
icebp
out
pop
mov
cmc
adc
mov
add
mov
xchg
add
mov
mov
cli
add
test
or
dec
out
jnp
clc
add
push
sahf
adc
mov
xchg
mov
push
in
rclb
addr16
or
scas
rcr
mov
sub
and
loope
cld
test
xorl
sbb
adc
test
adc
sahf
stos
push
xor
movsb
divl
test
sub
lahf
das
jns
dec
enter
lahf
dec
cltd
sub
mov
sub
ds
test
mov
faddl
insb
adc
sbb
mov
cmpl
enter
in
jns
frstor
aam
jle
rcll
mov
test
shld
aaa
pop
fldenv
pushl
sub
mov
add
cmpsl
lock
mov
mov
lret
lds
mov
call
xchg
scas
add
call
lods
dec
jnp
mov
cmp
lahf
cmp
mov
xchg
sub
cmpsb
and
push
lahf
jecxz
push
int3
push
push
jle
adc
rep
cli
or
cmc
or
mov
pop
push
popl
lock
and
scas
jb
add
fs
jmp
cmc
adc
lods
push
fimuls
call
or
lds
int3
sbb
cli
in
loopne
pop
sbb
out
mov
pop
cmc
mov
xlat
es
push
js
arpl
lods
sub
aam
or
pop
shrl
fnstsw
scas
ss
jno
xlat
int
insb
mov
jnp
adc
or
add
push
adc
aam
loope
ds
das
fdivrp
fcmovbe
rorb
cmp
in
mov
sbb
in
rclb
push
pop
cltd
push
sbb
xchg
xor
mov
cmp
insl
mov
inc
cli
xor
fcom
sbb
push
adc
ret
loope
mov
aam
and
dec
std
sbb
add
push
test
pop
jns
jecxz
fmul
lret
cld
or
cmp
aam
lret
push
sub
fs
gs
loopne
cld
xchg
inc
rol
jbe
adc
cmp
jle
test
pusha
sbb
pop
push
addr16
jbe
xorl
jbe
mov
scas
lret
outsl
adc
loopne
xchg
push
fs
jg
cmp
mov
push
xchg
ds
mov
imul
pop
inc
or
cwtl
add
add
jle
mov
sub
ja
aaa
mov
fmul
lahf
lcall
xchg
push
jge
fucom
test
pop
or
jb
pop
pop
or
adc
pop
test
push
mov
jbe
push
mov
xchg
aaa
icebp
pop
or
sub
xor
add
js
jbe
das
test
sub
fucomi
xchg
add
xchg
mov
xlat
xor
inc
out
dec
or
xchg
sahf
test
and
sbb
outsl
mov
aas
mov
outsl
or
sub
loop
fildll
or
jno
lock
pop
xchg
pop
inc
sub
es
into
mov
push
das
clc
cmp
orb
shrl
leave
inc
xlat
dec
mov
mov
fisubrs
cmc
ljmp
fnstenv
fildll
push
xchg
enter
into
sahf
jp
adc
enter
out
icebp
decl
jno
loopne
pop
in
loopne
pop
fistpl
fildl
fcoms
int3
xor
test
jb
dec
ret
jl
dec
fsubs
fwait
mov
popa
repz
jmp
rcll
xchg
cld
pop
cli
clc
test
xor
push
es
aad
add
or
nop
mov
hlt
in
push
stc
insl
or
mov
xchg
xchg
dec
or
dec
iret
pop
jge
lcall
test
xchg
xchg
xor
jmp
cmpsb
repz
es
popa
mov
lret
and
mov
cmpsb
in
cs
mov
xor
and
in
xor
cli
xor
xchg
out
lcall
xchg
mov
xchg
cmp
jbe
mov
rcrb
testb
das
lret
sub
xor
xor
jg
mulb
dec
xchg
pop
mov
inc
dec
stc
roll
stos
dec
adc
lcall
out
out
pop
jmp
scas
mov
add
push
fwait
outsl
jne
stos
or
fwait
mov
mov
add
push
imulb
jae
hlt
stos
lods
xorb
mov
sub
cs
push
pop
lds
add
inc
cld
push
jle
mov
mov
aaa
adc
int
out
mov
cmc
into
clc
push
lods
fimull
testl
mov
lcall
test
add
mov
jle
js
mov
sub
and
mov
mov
movsw
cmpsb
out
xchg
pop
pushf
loope
cli
mov
mov
inc
movsl
inc
and
aas
and
push
add
xor
shrb
dec
int3
leave
sbb
xor
add
adc
test
scas
cwtl
sbb
testb
es
inc
push
pop
push
sbb
cs
jo
ljmp
mov
popa
mov
sub
dec
sbb
arpl
xor
pop
add
push
adc
cld
jg
sub
outsb
xor
or
mov
jbe
mov
push
fwait
lock
push
or
inc
pop
and
ljmp
addr16
jmp
cld
out
pop
rclb
mov
cmpsb
jo
pop
les
ss
push
in
sbb
fdivs
loopne
or
das
sub
stos
orb
lret
rcr
inc
inc
push
xchg
fcom
cmpsl
cmc
pop
arpl
stos
in
sbb
test
push
mov
dec
lods
stc
rorl
xchg
call
sbb
mov
scas
fcompl
leave
adc
cli
cmpsb
jbe
in
add
push
sub
cmp
push
pop
adc
jmp
dec
lea
ja
iret
test
cmpb
getsec
pop
repz
shll
sbb
in
movsb
in
popa
and
add
imull
xchg
sbb
push
and
sbb
jmp
out
jge
add
sbb
gs
mov
lods
rcll
inc
adc
pop
dec
and
aas
inc
xor
and
cmp
out
pop
jmp
pop
xchg
fistps
jbe
in
clc
lahf
xchg
push
push
inc
jl
imul
lret
or
jge
and
cmp
mov
jp
jno
in
mov
adc
test
dec
xor
ss
inc
sar
mov
nop
dec
aad
int
sahf
mov
adc
inc
out
maskmovq
idivl
sub
xor
fsubp
adc
int
rep
push
pop
pop
pop
xorl
xchg
xor
ja
addr16
mov
pop
cmp
adc
jmp
sub
xchg
les
pop
pop
adc
cli
loope
test
fnstcw
imul
mov
arpl
js
int
dec
xchg
push
pop
mov
into
pop
or
xchg
mov
adc
cmpsl
insb
and
and
lea
mov
push
xor
dec
clc
mov
sahf
xchg
gs
sub
faddl
clc
arpl
or
scas
lock
enter
mov
enter
lahf
add
fwait
pushf
push
or
push
out
icebp
pop
jo
push
imul
jo
sbb
out
cmp
inc
xor
roll
pushf
and
repnz
xorl
jo
cmp
out
aad
jne
aad
jecxz
rcrw
mov
adc
jbe
scas
mov
roll
ret
inc
test
sub
int
mov
sub
push
dec
mov
enter
stos
ficoml
ret
shrl
outsl
js
xchg
ss
sti
add
and
addr16
mov
push
xchg
mov
dec
pop
mov
or
das
sbb
subb
lret
outsl
mov
and
rcl
pop
mov
test
repz
add
xchg
movsb
dec
in
jle
sub
dec
xchg
imulb
cmp
xchg
xor
lea
clc
data16
aad
mov
movsb
adcb
inc
clc
xor
dec
ss
push
lea
jg
out
pop
push
inc
stos
add
mov
ljmp
xor
mov
fiadds
mov
lods
ss
mov
mov
add
fidivrl
das
or
sub
jecxz
xor
iret
sub
and
mov
sub
imul
imul
data16
pop
adc
dec
push
add
outsl
les
loope
leave
push
cld
insl
sub
sbbl
lahf
insl
fldt
scas
dec
js
loope
ret
fsubrs
lret
or
cmc
lahf
shll
mov
popa
gs
adc
fnsave
push
cwtl
loope
andl
sbb
mov
push
mulps
testb
mov
pop
sub
mov
mov
aaa
aad
lods
aaa
sahf
sub
push
movsl
jecxz
notl
leave
mov
mov
pop
aaa
fwait
outsb
xchg
xchg
dec
mov
test
xchg
iret
test
xlat
testl
push
cs
push
sub
sbb
jne
xchg
outsl
xor
fldenv
mov
fs
imulb
rcl
loope
xchg
adc
fcoml
ror
ret
stos
push
xchg
js
xchg
inc
mov
xor
test
mov
std
mov
jbe
fdiv
push
cmc
orb
cmp
xchg
aaa
adc
jl
push
jge
sbb
enter
cwtl
leave
jae
dec
das
mov
sarl
adc
mov
pop
fwait
sahf
fwait
andl
sub
cmp
push
push
adc
add
rorl
dec
aas
movsl
mov
pop
cmp
or
adc
jg
shll
sub
xor
fsubr
mov
mulb
push
lods
or
rcrb
int
push
in
cmpsl
and
fcoms
mov
inc
mov
out
clc
cmpsl
ret
mov
xchg
or
pushf
mov
xchg
and
lahf
adc
aas
stc
xor
int
in
out
testl
rcll
push
pop
xchg
call
fidivrs
xchg
mov
data16
adc
inc
push
clc
ss
sbb
xor
sbb
sbb
sub
mov
stos
lds
jne
mov
inc
push
jne
sub
sbb
hlt
pop
fnsave
in
outsb
sub
jp
adc
loop
push
stc
popa
and
leave
out
icebp
or
rclb
cmpsb
sub
xor
ret
xchg
fcmovu
push
fadd
inc
push
stos
xchg
push
sub
fdivl
jnp
push
imul
mov
fsubl
jb
cltd
ds
pop
pop
mov
aaa
ja
jb
negb
outsb
dec
cmpsb
lock
stc
xchg
inc
mov
lods
jmp
imul
movsl
adc
out
fsubrl
xor
push
adc
push
push
and
imul
shll
mov
push
loope
xchg
stc
fildl
sub
or
pop
jb
imul
out
out
fsubs
and
int3
jbe
shrb
ret
add
mov
sub
fistps
pop
pop
enter
xchg
sub
popa
jo
out
xchg
mov
pop
and
xchg
aad
and
mov
lcall
sbb
sbb
dec
popf
add
fidivrs
cmp
js
mov
and
std
in
mov
inc
sarl
loope
push
mov
dec
mov
inc
jl
and
sub
pop
add
pop
scas
inc
or
push
rcrl
in
xor
mov
jbe
mov
pop
sub
push
out
in
fsubrl
mov
decb
mov
fcoml
nop
and
adc
gs
dec
loop
push
icebp
xor
add
push
adc
sti
pop
cmc
das
pushf
enter
push
jb
lret
cwtl
lock
test
mov
scas
rorl
cmpsl
mov
adc
hlt
scas
scas
sbb
shlb
add
dec
dec
imull
sub
xchg
xchg
and
lret
das
cli
push
mov
push
ja
dec
cmovbe
jecxz
xor
insb
and
xchg
sub
cld
dec
xor
mov
negb
outsl
or
clc
arpl
push
cmp
int3
aaa
pop
in
jbe
pop
sbb
aad
dec
mov
pop
or
test
insb
out
cwtl
or
in
xor
jno
and
sub
loope
enter
fwait
pusha
insl
jmp
sub
orl
subb
mov
test
push
aad
cmc
adc
lds
and
mov
xlat
enter
pop
lock
lcall
push
shlb
imul
or
lock
add
lea
leave
sub
inc
adc
cs
jnp
shl
sbb
pop
xlat
mov
daa
or
and
out
and
enter
or
je
rcrl
or
stos
les
adc
stos
repz
loop
imul
mov
pop
lahf
in
cltd
imul
loop
jne
outsl
outsb
pop
cmp
cwtl
xchg
jbe
inc
push
xlat
dec
fcomp
fwait
sub
adc
flds
sarb
inc
cmp
fmuls
std
mov
adc
cli
out
inc
jns
pushf
rcll
push
add
sbb
jmp
mov
push
insb
xchg
xchg
int
push
cmc
lahf
mov
das
or
lret
mov
ljmp
mov
jmp
jecxz
push
jnp
jecxz
push
pop
lcall
int3
es
jae
sbb
call
rorl
imul
xor
pop
int3
pop
sub
mov
loopne
pop
out
inc
movsb
shlb
pop
subb
mov
mov
iretw
shrl
loopne
aas
pusha
fcoml
in
shlb
gs
cmp
add
sbb
xchg
mov
es
data16
mov
or
fsubrs
out
add
std
jo
mov
clc
and
movb
fstl
push
pop
mov
cld
adc
shll
fbstp
outsl
sbb
pop
divb
jmp
and
das
mov
cmp
inc
cmp
pop
jl
imul
mov
adc
mov
imul
and
pushf
adc
fsts
imul
pushf
nop
xchg
or
sti
adc
cmp
lods
mov
and
lods
push
cmpsb
cwtl
or
scas
and
inc
adc
adcl
lods
sub
dec
pop
add
mov
flds
jne
adc
imul
test
xchg
add
mov
mov
ja
pop
and
mov
aas
arpl
mov
mov
das
clc
ret
shr
mov
stos
mov
call
cmpsl
xchg
rorl
push
sub
repnz
adc
mov
int3
daa
adc
test
iret
fnstenv
les
mov
lock
vmulss
inc
fdivr
addr16
test
sbb
mov
and
scas
xor
inc
sub
add
aam
fildll
jl
loopne
jne
in
jge
insl
stos
mov
xorb
inc
data16
rorb
rolb
insb
dec
jg
xor
test
jge
xchg
inc
test
out
mov
iretw
mov
icebp
push
icebp
dec
mov
sub
lods
xchg
push
or
cmp
inc
xchg
dec
sub
inc
jno
sub
inc
mov
xor
mov
shll
add
mov
and
adc
in
dec
pop
mov
loop
iret
imul
repnz
or
fidivl
test
test
popa
rcr
inc
fsubl
mov
loop
dec
push
in
test
pop
loop
ret
mov
jge
lcall
repnz
dec
orl
cmpl
std
or
push
and
jbe
mov
push
jbe
popa
jmp
inc
xchg
and
ss
adc
test
in
cli
dec
icebp
dec
imul
out
xlat
into
mov
mov
scas
enter
pop
mov
mov
fsubl
xor
movsb
jmp
push
mov
dec
ds
xor
or
rdmsr
and
inc
enter
xor
scas
mov
mov
mov
ljmp
scas
xchg
int
sbbl
data16
mov
push
xor
mov
pop
mov
lea
aaa
jle
cmp
test
jge
test
aam
out
or
dec
pop
shlb
stos
fisubrs
jbe
mov
mov
mov
mov
mov
jg
pop
xor
sub
or
xchg
mulb
sub
sbb
sbb
jnp
out
xchg
sbb
inc
in
pop
movsb
addps
loope
xchg
sub
inc
push
test
inc
jne
pop
cwtl
xor
add
popf
or
xorl
xchg
iret
nop
dec
jl
repnz
sbb
stos
or
es
lock
inc
mov
lret
aas
subl
mov
jg
xor
add
push
repnz
fs
gs
fmul
daa
or
andl
sahf
scas
in
nop
mov
fs
int3
repz
and
mov
nop
fs
jnp
mov
icebp
rorl
xchg
push
jecxz
call
fisubrl
sbb
mov
loope
mov
leave
push
addr16
loopne
dec
inc
repz
jmp
ja
fmull
test
jmp
pop
movsl
cs
addl
fisubl
stos
pop
nop
or
dec
jno
xchg
stos
je
lcall
push
js
gs
dec
inc
shll
pop
and
faddl
adc
pop
jmp
xor
incb
inc
ret
pushl
imul
out
push
add
adc
leave
and
lods
or
test
pop
mov
xlat
stos
mov
scas
gs
lds
xchg
stos
mov
mov
mov
in
xchg
sub
inc
sarb
outsb
and
jb,pn
cmp
push
mov
xchg
mov
idivb
pop
lcall
outsb
xchg
imul
sub
lret
mov
mov
int
mov
cmc
ljmp
xchg
clc
mov
dec
loopne
cmp
jns
sarb
imul
lret
and
mov
cmpb
adc
loopne
nop
push
jb
push
movsb
mov
notl
addl
or
mov
rorl
mov
in
mov
dec
xchg
stos
push
dec
xchg
ljmp
add
xchg
sub
test
dec
jb
ja
push
mov
dec
out
jae
aaa
mov
push
gs
adc
push
pop
aam
xchg
mov
mov
add
dec
fldl
test
add
movsb
outsl
lcall
cltd
xchg
mov
push
xor
ja
push
inc
sti
sub
rclb
sti
jmp
cmpsl
negl
lods
cmpsl
jg
leave
jle
dec
dec
sub
inc
loop
sub
mov
js
jne
jge
pop
pop
adc
shlb
negl
xor
cmpsl
mov
mov
into
sbb
iret
adc
and
xchg
sbb
sbb
inc
outsb
call
int3
dec
jns
shll
add
add
mov
fsubrs
in
je
adc
das
fimuls
inc
sub
cltd
es
mov
leave
outsb
push
add
pop
xlat
dec
fdivs
adc
mov
and
inc
mov
sub
adc
incl
cltd
sub
adcb
std
inc
shl
loop
fildl
and
fldl
mov
ja
scas
and
mov
xlat
dec
xor
xrelease
push
push
lock
cmp
pop
lret
into
incb
es
adc
cmp
movsl
jbe
inc
dec
adc
adc
cmpsl
ficoms
out
sti
sbb
xchg
cmp
push
pop
bsf
pop
data16
shlb
mov
mov
mov
lods
insb
inc
hlt
fldl2e
fisttps
adc
xchg
scas
and
cs
dec
je
mov
aas
movsl
hlt
push
ret
xor
mov
sahf
fists
rorb
xor
jl
jno
cli
sarb
inc
inc
xlat
dec
push
shlb
lcall
stc
nop
push
sbb
leave
jo
cmp
dec
dec
cmc
mov
movsb
mov
adc
scas
das
push
test
pop
pop
call
fcmovne
pop
push
jo
dec
sbb
mov
aam
repz
insl
mov
subb
arpl
out
mov
cmpb
dec
add
sti
dec
push
add
popa
popa
xchg
cmp
xchg
sbb
shlb
dec
inc
mov
lods
in
cmpsl
mov
push
jns
sbb
inc
mov
lcall
sbb
push
imul
cmp
sbb
ja
mov
xchg
sbb
sub
test
ss
xchg
es
push
add
and
imul
test
aaa
movsl
test
inc
push
xlat
insb
fs
clc
xchg
adc
push
jle
sub
sbb
push
lahf
out
jl
into
mov
xor
mov
xor
adc
cwtl
ds
fnsave
xor
mov
xchg
sub
bound
push
fwait
inc
cmp
xchg
stc
imul
stos
xchg
xchg
adcb
sub
pop
adc
ficomps
lds
push
imul
idivb
popf
dec
push
jmp
mov
xchg
and
jge
subb
add
dec
fnstsw
xchg
push
mov
sbb
push
test
cmp
pop
cmp
mov
xlat
dec
mov
inc
or
cli
lock
hlt
test
dec
aad
mov
xchg
out
stc
pop
cld
pop
call
cli
lds
ja
inc
fstl
mov
push
test
je
cld
shll
std
mov
insb
or
cmpsl
push
in
arpl
inc
stos
frstor
mov
in
arpl
pop
daa
stc
cmpsb
xchg
dec
loopne
push
fistps
cltd
xchg
and
repz
adc
daa
leave
fwait
int3
cmp
lods
or
sbb
loop
mov
add
test
aas
hlt
test
stos
rcrl
push
stos
pop
xchg
cmp
iret
ss
aad
subb
and
cmp
stos
xchg
xlat
jb
sub
dec
mov
xor
push
jne
adc
sub
push
sub
fisubrl
insb
cld
bound
sub
sbb
adc
sub
lcall
add
ret
add
hlt
xchg
mov
popa
test
fiadds
mov
pop
das
add
mov
nop
or
scas
push
jne
mov
and
sarb
es
insl
or
inc
push
mov
je
push
icebp
add
lcall
jbe
arpl
xor
sbb
repnz
fidivrl
mov
push
dec
repz
add
lods
or
int3
add
lods
rorl
xor
mov
popf
clc
je
jb
jg
jne
lods
cmpsl
or
lret
rclb
les
dec
sbb
roll
repnz
push
or
jns
outsb
jp
mov
mov
je
dec
fcomip
jbe
loope
or
pop
rol
and
inc
jae
std
ljmp
mov
pop
jg
arpl
jns
or
mov
inc
fs
ds
adc
pop
sub
lods
xchg
fdivrs
push
mov
leave
test
test
fildl
jmp
std
mov
bnd
and
out
sbb
mov
adc
mov
jl
in
ja
popa
je
push
ljmp
pop
stos
testl
mov
xor
jmp
repz
jecxz
xchg
cmp
inc
jmp
lods
push
pushl
leave
xor
daa
fisttps
aad
or
cs
dec
push
pop
rcll
cltd
inc
pop
mov
dec
lods
mov
into
aad
adc
pop
leave
lods
test
fistps
xor
bound
fmuls
jo
sahf
outsl
in
outsb
sahf
cmp
hlt
mov
jmp
mov
stc
jne
rcll
cmp
es
jle
pop
dec
leave
lds
cli
adc
xor
data16
bound
jne
loopne
adc
in
in
mov
mov
mov
lods
ljmp
push
js
push
push
iret
jg
sbb
adc
and
mov
loop
inc
pushl
mov
lret
out
xchg
xlat
cmp
jmp
jb
xor
dec
stos
jp
out
jnp
xchg
movsl
insb
rclb
sub
xor
mov
cmp
sahf
mov
jae
fmuls
mov
mov
aaa
enter
out
or
icebp
mov
jge
or
push
cs
pop
mov
fsubrl
jg
lds
in
and
out
mov
sub
jecxz
xchg
popa
dec
mov
sub
std
adc
push
pop
lock
mov
std
fldenv
xor
adc
push
mov
add
pop
inc
outsl
aaa
rcrl
xchg
inc
mov
ja
mov
ljmp
mov
mov
add
xchg
out
sbb
xchg
xchg
dec
push
add
out
fcmovnu
and
xchg
or
test
jp
push
mov
add
jne
pop
jbe
pop
es
push
icebp
sub
repz
adc
test
sahf
les
add
out
adc
xor
push
popa
and
and
jg
cmpsl
in
xchg
test
dec
outsb
in
cmp
dec
push
xor
mov
lret
loope
lock
aas
push
pusha
inc
stc
pop
lret
mov
out
jg
scas
push
pop
adc
cmp
pop
fdiv
iret
or
mov
or
cmp
pop
xor
mov
push
or
stc
loope
adcb
push
lods
mov
fs
push
jmp
js
imull
mov
pop
addl
inc
xchg
hlt
inc
das
mov
pop
mov
jns
cmc
out
leave
xchg
pop
mov
mov
push
ficoms
dec
xchg
xor
pop
adc
or
add
test
cmpsb
ds
jo
pop
mov
mov
mov
dec
daa
loopne
jle
xlat
mov
lahf
cmpsb
pop
mov
cmp
outsb
xor
fnstcw
pop
or
sub
mov
int3
push
int3
mov
add
push
jmp
cs
or
ret
mov
and
arpl
jo
mov
hlt
inc
sar
mov
movsl
pusha
nop
push
sub
jecxz
push
pop
cmp
fiadds
sbbl
mov
add
mov
aam
sub
mov
xchg
jno
push
mov
pop
xchg
mov
sub
aad
sbb
inc
mov
jnp
xor
in
sub
jle
mov
repnz
xchg
hlt
xorl
sbb
mov
rclb
jno
jne
pop
int3
sbb
das
push
stos
outsb
fucomip
aad
jl
cmp
sarl
test
in
les
cmp
pcmpgtb
mov
sbb
dec
lock
sbb
inc
add
pushf
jbe
addr16
mov
xchg
lea
and
cmc
or
mov
pop
push
aam
cmp
jbe
mov
cmp
scas
mov
test
mov
jl
xchg
ret
mov
xor
jg
mov
loopne
cmp
sbb
add
sub
pop
ret
ret
jb
jp
mov
cmp
orb
push
push
das
jecxz
addl
pop
fs
pop
jecxz
pusha
sub
inc
and
or
bound
pop
in
mov
fs
cwtl
xchg
jb
out
pop
add
dec
aas
mov
mov
mov
jp
nop
aam
mov
sbb
push
mov
jne
mov
jnp
add
fistpl
cmp
add
loop
sbb
rcrb
rep
mov
scas
scas
roll
xor
pop
mov
mov
fisttpl
jb
rcll
mov
ljmp
insb
mov
push
bound
mov
sub
add
xchg
mov
or
xchg
sti
pop
cli
es
mov
mov
les
fiadds
pop
aam
enter
xor
decl
ret
pop
pop
mov
and
mov
lret
sub
aaa
jp
fucomi
mov
sbb
mov
rcrb
popf
mov
in
outsb
faddl
mov
pop
testl
xrelease
jl
ss
cmp
sub
mov
subl
xchg
push
push
mov
jle
or
and
dec
shlb
mov
arpl
pop
je
mov
pushf
dec
ret
mov
das
xchg
call
repz
call
divb
adc
mov
dec
ds
sub
jno
xchg
das
mov
xor
add
jmp
imul
lret
mov
inc
hlt
add
fstps
push
mov
jge
xchg
push
sub
dec
pop
xchg
sub
shll
icebp
or
in
dec
dec
fwait
wrmsr
jle
xor
jmp
js
ds
push
rolb
testl
lods
push
jae
push
jae,pn
pop
mov
jle
in
shrl
rcll
push
test
push
lahf
clc
sub
cli
js
outsl
repz
add
sub
or
xor
fcompl
push
xchg
cs
and
cmp
mov
in
imul
xor
jnp
fbld
mov
jo
xchg
jecxz
inc
xor
add
daa
test
adcl
je
fstps
cmp
nop
movsb
sub
add
push
xor
ja
sub
lods
inc
mov
fisttpl
je
cld
out
cmp
and
push
inc
es
push
mov
adc
out
fisubs
lods
pushf
movsl
pusha
xchg
or
jbe
lcall
sbb
fistpll
pop
cmp
and
mov
add
xchg
push
jb
push
mov
pop
je
mov
test
jns
cs
push
dec
adc
xchg
jnp
mov
push
push
icebp
pop
inc
and
call
sbb
movsb
xchg
out
subb
xor
and
jg
push
jle
mov
flds
outsb
xor
cmp
sbb
push
jmp
ret
filds
scas
aas
icebp
dec
insl
push
xchg
in
aad
dec
out
pop
add
jne
ret
xlat
data16
lea
push
or
lock
lea
ret
loop
test
jne
nop
sub
sbb
push
mov
popa
push
mov
adc
sub
jp
int
pop
leave
xchg
dec
xchg
adc
mov
mov
out
ret
or
daa
mov
sti
dec
inc
imul
cmp
adc
mov
outsb
xor
xchg
dec
inc
push
jg
std
jp
dec
jmp
andl
fstl
inc
ret
jb
scas
std
push
lock
push
jp
jle
into
add
imul
je
out
cmp
sbb
aad
sahf
in
ret
adc
aaa
data16
fidivrl
cmp
insl
cmc
roll
aad
xor
sbb
xchg
xor
sbb
stc
adc
mov
test
daa
movsb
aad
ficoms
int3
mul
mov
push
pop
int3
hlt
pop
jmp
int
out
jle
mov
lret
int3
loop
loope
add
mov
repnz
sahf
outsb
push
mov
lds
lods
addr16
xchg
xchg
sub
mov
repz
pop
insl
ljmp
push
mov
mov
enter
push
out
mov
xor
or
out
mov
xchg
adcb
cmp
add
jb
cwtl
mov
mov
pop
out
pushf
mov
aaa
and
lret
push
icebp
lods
cmp
or
jmp
leave
mov
test
sub
repnz
push
sub
sub
clc
or
pop
pop
add
xchg
andl
xchg
dec
pop
xchg
in
je
scas
loopne
not
popf
cmp
cmp
mov
mov
pop
mov
popa
into
dec
mov
mov
xchg
sub
jnp
jb
xchg
rcrb
cmc
mov
mov
push
adc
dec
pusha
adc
movsb
dec
negl
cs
in
push
in
mov
xchg
mov
adc
stc
pusha
and
fdivrp
sub
dec
cmp
lret
mov
stos
push
xchg
out
scas
add
in
insb
and
popf
hlt
lods
inc
cltd
int
cld
lret
mov
mov
das
push
ss
pushf
or
pop
repnz
pushf
cmp
jle
andl
sbb
loop
push
test
fstpl
adc
popa
rol
fcmovne
xchg
jecxz
sbb
mov
jecxz
daa
mov
ret
aas
icebp
aad
fsts
dec
dec
xor
xor
xchg
mov
jmp
cltd
test
int3
sbb
pushf
insl
inc
ficoml
fwait
subl
into
cmp
mov
ss
add
dec
in
in
jecxz
push
mov
xchg
sahf
jg
test
jb
xor
xchg
into
pop
pop
or
xchg
shrl
add
fcompp
mov
push
sahf
int3
ficompl
jns
push
loope
push
lea
push
dec
stos
je
or
dec
test
jne
pop
rclb
shl
std
mov
popf
lods
data16
jbe
std
loope
call
pop
jecxz
xchg
test
and
add
xchg
mov
push
push
ss
xchg
fsubrs
sub
lcall
popa
out
pop
mov
insl
dec
jns
sub
aam
mov
adc
outsb
sbb
mov
and
jae
mov
xor
lret
lea
xor
cld
or
push
xor
in
stc
pop
pop
push
cmpsb
out
xlat
int
prefetch
arpl
pop
xchg
insl
test
fmull
packssdw
fwait
in
cltd
pop
ja
andb
testb
mov
jmp
and
xchg
js
cmpsl
jbe
and
mov
mov
sub
cmp
xor
js
lahf
sbb
std
mov
in
fs
xor
imul
jge
inc
adc
bound
ljmp
out
jnp
in
aas
int3
test
ficoms
add
out
mov
movb
bound
mov
lea
xor
je
int3
sbb
lock
andb
aam
add
sbb
cmc
sub
xor
pop
cmp
lea
in
sub
dec
pop
and
fadd
mov
xor
xchg
mov
xor
and
je
sub
inc
inc
cmp
mov
lahf
pop
dec
jb
les
adc
and
arpl
add
add
mov
xchg
jnp
ja
add
and
fucomi
add
data16
rcr
dec
scas
fimuls
lock
insl
in
cmp
or
stos
mov
inc
xor
jns
cwtl
div
pop
xor
ret
and
mov
pop
das
inc
push
pop
rolb
jo
xlat
movsb
jg
inc
addr16
adc
rcrl
imul
stos
mov
mov
aas
das
subb
mov
outsl
push
mov
fs
lods
push
fs
adc
test
in
push
iret
pusha
push
test
out
iret
xchg
jmp
lret
jae
test
and
lret
add
das
cmpsl
mov
xchg
outsl
fldenv
jbe
or
pushf
scas
leave
repnz
xchg
pop
inc
aad
ja
cmp
outsl
ljmp
call
mov
mov
mov
jo
iret
mov
fsubs
xor
pop
or
cmp
leave
cmpsl
pop
sbb
sub
ljmp
pop
aaa
adc
fxch
fwait
cmp
jecxz
aas
inc
pop
lds
xlat
cmp
pop
jle
repz
jns
inc
cwtl
loope
lds
push
mov
jle
loop
in
push
sbb
aaa
popf
xchg
aad
pop
cmp
clc
les
test
fiaddl
cmpsl
pusha
ja
jle
jne
test
mov
imul
dec
pop
mov
add
xor
mov
out
xchg
test
call
dec
repz
test
cld
mov
and
mov
mov
cmp
push
sbb
bound
sbb
sub
inc
int
leave
xor
scas
psubsw
std
cmp
repnz
pop
jbe
in
pushl
pop
mov
out
lret
sbb
ret
push
sub
dec
in
add
pop
xor
bound
sbb
fisubs
or
negb
ffree
adc
jp
pop
add
fcoms
dec
dec
jmp
pusha
shll
sub
push
mov
dec
out
xchg
inc
lcall
roll
add
cmp
mov
je
mov
gs
push
ja
insl
xor
sub
icebp
movl
fmul
stos
push
push
inc
lcall
fistpl
mov
push
jle
cmp
cmp
adc
xor
xor
pop
fldenv
pusha
mov
mov
lcall
aad
inc
lret
xchg
sti
jae
jo
add
dec
jmp
pushf
or
inc
sbb
or
add
xchg
push
js
mov
hlt
aaa
jae
aam
push
fbstp
mov
andb
sbb
mov
xor
jg
or
dec
jno
jecxz
cli
add
int
out
or
inc
sbb
cmp
push
outsl
in
pop
lods
pop
mov
mov
mov
xor
test
fdiv
xchg
sbb
mov
add
push
lock
cmp
add
pop
cld
loop
pop
cmc
push
mov
mov
lock
dec
jl
jnp
iret
jnp
test
dec
sahf
aaa
int3
cmc
cmp
jo,pn
and
inc
movsb
xchg
cmpsl
sub
fsub
lret
loop
cmpsl
dec
xor
addb
js
mov
jge
call
adc
pop
cmc
pop
sti
out
mov
mov
adc
roll
lods
mov
bswap
cmp
pop
mov
loopne
fsubr
push
lock
jo
pop
xchg
inc
mov
mov
xor
cmp
pop
pop
mov
nop
xchg
outsl
add
cmp
inc
rcl
test
push
sbbb
add
rcr
scas
fimuls
mov
int
add
ds
jmp
push
mov
adc
fs
int
enter
sbb
add
mov
mov
xor
xchg
lahf
inc
outsb
fistl
mull
adc
inc
ret
stc
pop
stos
xor
imul
xchg
or
jg
dec
addl
xor
jge
push
ds
sahf
nop
mov
and
lret
jno
dec
xchg
fdivs
xorl
enter
vmread
or
cld
ja
and
lcall
scas
mov
cwtl
popa
add
leave
cmc
das
inc
fwait
cmp
rolb
add
xchg
out
mulb
dec
push
movsl
mov
jecxz
jg
sub
lods
cmp
call
xchg
inc
mov
icebp
icebp
mov
insb
pop
cs
mov
push
lahf
jmp
aaa
and
repz
dec
lods
pop
inc
cmp
aaa
push
daa
mov
jg
ds
sbb
inc
jge
mov
add
sbb
sub
mov
push
popa
push
jmp
imul
inc
cld
lea
lods
pop
jle
or
je
dec
cs
clc
or
out
push
sti
inc
inc
xchg
addr16
dec
loope
mov
sub
data16
push
int
or
aas
xor
insl
adc
xchg
cmpsl
call
mov
test
ret
jg
imul
dec
jg
jp
pop
mov
popf
out
add
xor
sarb
mov
daa
push
ja
bound
dec
or
in
add
xchg
add
jge
add
sbb
ret
decl
insb
inc
jb
fistps
mov
push
mov
je
fcompl
push
push
sub
sar
pop
sub
mov
out
jne
sbb
push
in
lods
cwtl
sar
sub
push
shlb
adcb
fadds
pop
adc
inc
cmp
ret
sbb
mov
out
mov
xor
addl
ret
leave
mov
shl
pop
out
test
cvtps2pi
daa
fcmovu
cmp
cmp
xor
inc
xchg
inc
jge
add
lret
mov
jmp
pusha
jns
mov
test
gs
jnp
lret
lahf
shl
fidivl
aaa
outsb
leave
outsl
jns
cmp
outsl
shrb
sbb
jge
add
mov
mov
adcl
je
lds
frstor
adc
push
lods
mov
cmp
scas
jns
fsubs
or
movsl
push
mov
sbb
sub
lret
mulb
inc
pop
cs
je
jg
cmpl
out
sub
stos
cld
je
movb
imul
ds
mov
pop
aad
mov
jne
sbb
mov
fbstp
sub
mov
ja
test
sbb
sysret
and
test
nop
loope
cli
fstps
adc
xchg
enter
or
or
mov
outsb
stos
mov
dec
stos
push
sahf
mov
sti
fbstp
loop
test
mov
xchg
or
xor
mov
aad
ss
jmp
leave
mov
and
cmpsb
jl
push
jb
dec
lods
test
pop
js
sub
shrl
daa
or
rclb
lcall
mov
jmp
stc
mov
lea
jo
ror
repz
add
mov
push
push
add
lahf
lret
or
push
mov
clc
push
popf
scas
or
sarl
sub
add
cmp
in
add
sbb
cwtl
insb
out
lea
mov
jg
mov
push
mov
inc
mov
insb
fwait
or
push
test
mov
int3
cltd
imul
cmpsl
negl
imul
or
lcall
adc
popa
outsb
cmp
ljmp
or
or
mov
lret
ljmp
scas
loopne
shll
iret
clc
mov
mov
arpl
sbb
and
mov
cs
mov
pop
sahf
jb
fwait
or
andl
shrl
int
xor
shl
sarl
aaa
jae
out
rorb
sbb
in
outsl
and
fdivrp
call
call
push
outsb
std
push
es
je
inc
data16
pop
jns
mov
in
inc
fcoml
adc
sub
pop
jmp
adc
mov
call
jle
xchg
stc
fisttps
gs
ds
mov
shll
std
pop
pop
adc
icebp
mov
add
inc
gs
popf
imul
ret
insl
mov
push
jo
sub
mov
fwait
popa
cs
or
add
push
sbb
push
mov
cmp
inc
xchg
push
popa
adc
jno
jnp
scas
out
sbb
shr
mov
xor
pop
sub
addr16
daa
movsb
loope
cmp
pusha
lds
ja
mulb
inc
sbb
add
mov
add
mov
add
std
sub
mov
rol
sub
je
fdivl
adc
add
sub
jns
arpl
add
mov
test
fmull
in
arpl
dec
xchg
std
cltd
jmp
cltd
stc
inc
xor
aam
nop
movsl
pop
or
addr16
leave
stos
mov
jge
adc
mov
test
pop
xor
mov
movsl
daa
dec
jae
adc
scas
lret
out
fadd
push
lock
add
repz
sbb
adc
adc
inc
js
push
cmpsb
inc
sahf
and
cmp
loope
movsb
adc
inc
leave
xchg
test
mov
cmp
push
mov
iret
test
jmp
fistpll
repnz
cmp
int
xor
out
mov
adc
xchg
and
xchg
outsl
scas
mov
inc
mov
cmpsb
repnz
in
xchg
mov
add
xor
repz
and
lods
push
inc
cwtl
pop
rol
test
ss
mov
jbe
movsl
or
xor
sub
jg
pop
into
cmpxchg
mov
cmp
mov
test
fldenv
push
test
mov
adc
loope
adc
es
fistpll
ret
divb
test
dec
pop
aam
dec
sbbl
sbb
and
addr16
pop
sbb
jg
push
lret
xchg
or
xor
call
stos
cwtl
shll
jo
jns
movsl
cs
push
outsl
push
imul
mov
sti
mov
jge
cli
and
outsb
mov
inc
arpl
and
cmp
popa
sbb
call
xchg
movsl
lods
testl
jb
stc
inc
mov
cmp
cmp
data16
and
push
pop
pop
shll
pop
jp
mov
xlat
jle
jo
mov
mov
pop
outsl
in
push
out
xor
jne
loopne
imul
push
jnp
dec
in
nop
rcll
lods
mov
imul
push
sub
jno
and
inc
repz
inc
jmp
stos
adc
lods
and
in
loopne
push
std
dec
test
mov
adc
pop
inc
outsl
ret
lods
add
add
jmp
stc
nop
jl
sub
dec
xchg
iret
inc
ss
mov
mov
inc
movsl
fldl
cmpsl
fisubl
pushf
mov
clc
jge
adcl
jnp
mov
fdivrp
sti
mov
es
outsl
cmpsl
nop
cmp
rcll
or
ret
pop
cld
add
jle
stos
mov
fs
jnp
jg
cmc
adc
push
dec
stc
xchg
aad
shlb
add
aas
es
ja
stos
pusha
shr
cwtl
insl
pop
mov
sbbb
pop
movsb
inc
mov
mov
xor
jmp
outsl
mov
xchg
and
mov
xchg
push
add
dec
push
cs
call
dec
lcall
fidivs
mov
fstps
or
jne
aam
icebp
aaa
sarb
movsb
pop
pop
jmp
sbb
dec
loope
pop
cmc
hlt
cmpsl
cmpsl
cmc
outsl
es
xor
scas
sub
outsb
lds
pop
inc
xor
dec
sti
push
inc
pop
pop
clc
sub
fsts
movb
and
inc
or
pop
stos
fucomi
dec
mov
add
mov
lcall
inc
or
les
repz
shll
dec
mul
imul
cmc
xor
aaa
aas
inc
mov
dec
insl
jle
xor
adc
mov
sbb
aaa
iret
adc
sbb
sbb
xor
mov
or
mul
sub
je
pop
mov
mov
out
and
lock
popa
loopne
mov
cli
sub
or
mov
les
pop
lock
inc
mov
in
xchg
cmp
sub
push
scas
inc
lods
inc
in
jp
mov
adc
push
sub
push
dec
pop
daa
sub
pop
sbb
fistps
and
ret
dec
sbbb
fstl
imul
xchg
mov
call
push
cmp
sub
rorl
cli
jle
into
and
adc
jno
aam
addr16
dec
inc
adc
test
fdivl
adc
shll
xchg
ret
mov
mov
mov
or
jo
fidivs
fsts
dec
xchg
es
rorl
jp
and
and
adc
add
pop
nop
sbb
xor
fwait
int
and
xchg
rclb
std
filds
mov
adc
jne
aas
or
xchg
insl
cmp
jne
mov
inc
stos
adc
cmc
lea
hlt
xchg
or
xchg
or
testl
mov
mov
mov
push
fbstp
mov
imul
psubusw
sub
fsts
add
sbb
div
ljmp
mov
mov
xchg
mov
pop
inc
mov
and
leave
fcmovbe
icebp
adc
jp
scas
xor
mov
jo
aam
outsl
push
fwait
and
pop
cwtl
iret
shl
push
add
dec
sbb
dec
fsubrl
mov
cmpl
xor
pop
enter
cmp
jae
add
aam
ret
push
xchg
xlat
push
mov
xchg
insb
push
mov
sbb
adcb
jns
shl
jmp
xchg
cmp
mov
shrl
mov
xor
sarb
mov
stc
add
and
and
mov
sbb
iret
jmp
int3
andl
mov
pop
fcoms
xor
lahf
lret
scas
roll
inc
or
mov
stos
mov
rcrl
in
xor
repnz
jg
lret
add
pop
inc
repnz
shll
je
cmpsb
in
mov
add
and
dec
imulb
lods
xchg
sbbb
clc
cmpsl
fcoms
jg
and
jle
and
int3
dec
iret
add
sbb
jle
pop
xor
mov
sarl
pop
cmpsb
xchg
dec
orb
stos
sub
mov
cmp
movsb
sub
push
icebp
push
push
int3
mov
add
sub
xor
ret
sub
call
shr
sub
jo
jbe
fldt
and
popa
je
xchg
push
inc
imul
andl
xchg
call
pop
lods
sub
fadd
out
es
pushf
mov
iret
test
jp
in
cmp
sbb
mov
in
loopne
sbbb
cmp
pop
popa
or
enter
adc
mov
int3
or
call
shrl
mov
sub
test
dec
out
sar
clc
mov
sbb
mov
add
int3
mov
in
jp
into
or
adc
mov
loopew
mov
imul
scas
inc
test
incl
dec
sbb
adc
push
out
sub
mov
mov
js
push
mov
mov
into
xchg
icebp
pushf
jne
push
cs
jne
ret
popf
inc
sbb
xor
js
rclb
pop
xchg
sbb
pop
xchg
out
aas
pop
inc
rcrl
push
xchg
fdivl
les
xchg
daa
daa
dec
jo
dec
les
cmp
andb
inc
xchg
mov
aad
insl
int3
test
adc
lea
push
mov
mov
out
mov
dec
test
cmpsl
inc
jle
addr16
or
insl
xchg
mov
loopne
shl
cltd
add
mov
or
bound
mov
lret
jbe
clc
inc
pop
ret
in
shrl
dec
and
push
ds
and
js
and
in
inc
jb
ja
add
cmp
jecxz
mov
call
ljmp
jbe
xor
mov
gs
push
cwtl
test
test
ret
cli
icebp
dec
cmp
gs
adc
sbb
movsb
xor
movsb
sub
xor
mov
addb
sbb
hlt
adc
sbb
ror
in
lods
out
rorl
shrb
arpl
inc
sub
pop
je
cmp
adc
jns
sbb
arpl
dec
xor
enter
cmpsl
adc
popa
mov
arpl
lods
cmp
mov
or
dec
push
mov
aam
mov
cmp
enter
pop
and
xlat
cld
loopne
fcoms
sbb
mov
dec
imul
jmp
dec
lock
adc
rolb
outsb
cltd
sahf
lds
xor
out
adc
push
inc
or
mov
jmp
dec
sbb
mov
arpl
gs
leave
or
and
mov
ljmp
xlat
mov
push
inc
ja
adcl
sub
les
fnsave
cmp
push
mov
push
in
xlat
pop
pop
pop
sti
loope
push
in
mov
cmpsb
mov
int
insb
cmp
adc
mov
mov
in
sub
and
fiadds
pop
jmp
pop
xchg
scas
addl
scas
adc
fcmovnbe
ss
jo
test
outsl
inc
jnp
rcrb
out
shl
insl
lock
pop
lods
or
cmpsb
sbb
scas
push
enter
push
jo
jae
add
cwtl
push
push
jle
mov
lea
dec
das
out
dec
dec
outsl
cmp
push
fdivrl
fimuls
lcall
add
cmpsl
insb
lahf
inc
sarl
xchg
jmp
xlat
in
popa
adc
adc
iret
push
and
or
sub
out
loope
test
and
sub
and
dec
das
cmpb
sahf
add
cli
popf
push
scas
push
dec
cltd
fistps
gs
and
add
mov
outsb
in
imul
outsb
xchg
sub
cmpsl
out
xchg
sbb
inc
leave
cmp
xor
sti
mov
stos
xor
xchg
bound
ret
jae
cwtl
sub
fdivl
mov
and
outsb
pop
jno
test
mov
testb
gs
lea
cmp
lods
sahf
movsl
sti
sahf
in
sbb
sub
popa
fldt
push
adc
sub
aas
popf
mov
lods
jecxz
dec
cltd
pusha
sub
or
daa
jmp
sti
pop
mov
das
xor
and
push
ror
pop
push
aaa
mov
bound
das
movsl
push
outsb
fcomps
pop
cmpsb
jns
cmp
sti
push
arpl
stos
and
je
jns
je
cmp
testb
xorw
loope
push
or
lret
mov
insl
adcb
xlat
mov
sub
inc
jl
test
lods
jmp
loope
adc
test
and
and
add
add
in
push
mov
xchg
int3
test
or
shl
pop
orb
pop
dec
xorl
nop
add
xor
fs
ja
mov
outsb
cmp
xchg
stos
rcr
aad
jne
mov
rclb
sub
cwtl
aas
sbb
subb
or
jge
jp
inc
fstps
mov
fdivr
fs
lahf
mov
sarb
lret
cwtl
mov
jns
mov
mov
xchg
cmpsb
pop
les
scas
adc
inc
lret
push
cmp
cmpsl
mov
inc
cmp
aam
out
insb
jo
outsb
rorb
aaa
lea
adc
pop
xchg
pushf
mov
gs
sar
lret
inc
mov
andb
loop
or
adc
dec
sti
jmp
mov
loopne
dec
mov
inc
inc
pop
push
push
add
mov
and
inc
into
push
sbb
pop
das
mov
js
aam
mov
dec
add
in
jnp
xlat
test
test
into
jo
adc
nop
cmc
push
fdivl
lret
xor
mov
cmp
inc
xor
add
lock
sti
pop
sbb
xor
clc
cld
lods
mov
arpl
int
jl
cmp
and
xchg
pop
call
es
fldcw
mov
mov
inc
cmpsl
pop
imul
push
cmpsb
xchg
out
cmp
aaa
mov
ret
test
cmc
or
pop
jo
dec
lods
pop
adc
pop
pop
daa
sbb
scas
cmp
int3
sub
in
xchg
aaa
or
xor
dec
insb
ret
cmp
and
mov
mov
pushf
or
rclb
rcrl
insb
es
loop
xchg
pusha
add
test
popl
jnp
or
jle
lcall
push
arpl
or
mov
push
sub
outsb
mov
outsb
jne
cmpb
mov
mov
mov
insl
repnz
test
adc
jg
dec
inc
jmp
push
ffreep
jg
lds
and
jp
mov
js
repz
in
push
leave
sti
stc
push
mov
ja
or
int
push
mov
inc
jmp
lret
pop
jge
shrb
add
fisubrs
sahf
inc
lea
ljmp
stc
int3
imul
jg
xchg
pop
cltd
jmp
pop
inc
aam
movsl
sbb
push
mov
in
adc
jg
leave
imul
scas
andl
lds
xor
and
call
mov
js
and
gs
test
cmc
les
jmp
lahf
into
aas
push
or
sbb
pop
pmulhw
test
and
jae
jl
into
xchg
mov
movsb
sti
icebp
insb
adc
pop
sahf
lods
fistps
sub
out
enter
lock
pop
cli
sbb
outsb
inc
dec
loopne
test
mov
push
lret
ret
sub
iret
sub
xor
push
jne
xchg
sbb
pop
push
mov
mov
add
add
mov
subb
movsb
sub
push
pusha
or
mov
cmpsb
xchg
out
xor
mov
push
jecxz
add
fwait
pop
lock
dec
add
scas
cmc
mov
jo
scas
xlat
jns
je
lret
xlat
mov
jo
imul
cld
cltd
lods
jmp
xacquire
into
test
je
mov
jne
sbb
or
and
rorb
inc
or
insb
je
or
cli
loopne
sub
mov
movb
pop
adc
or
push
inc
dec
push
int
jne
das
in
outsl
add
gs
adc
js
cld
push
into
ljmp
pop
xor
leave
in
test
add
dec
add
mov
rclb
scas
es
inc
sbb
aas
mov
cmp
hlt
pop
mov
inc
lahf
jne
jns
mov
add
jl
loop
sub
adc
insb
in
je
test
insl
fistl
les
push
jbe
aam
shrl
ret
dec
push
call
mov
movsb
cli
iret
sbb
std
pusha
dec
dec
mov
aam
lret
and
jns
daa
or
and
arpl
jge
pop
jecxz
mov
add
lcall
pop
cwtl
fdivrl
stc
outsb
test
lret
or
cmc
jae,pt
jne
pusha
loope
add
pop
xor
lcall
inc
icebp
push
mov
sub
iret
cs
jae
in
or
mov
xchg
inc
xor
shl
cmc
jge
mov
out
repnz
jbe
push
xlat
notb
fs
and
jecxz
mov
inc
sbb
inc
mov
into
xchg
ljmp
mov
add
shrl
mov
popf
movsl
push
cld
popf
jb
rcll
push
push
addb
mov
mov
adc
sub
stc
lds
into
movsl
lods
repnz
ja
sbb
movsl
aam
cs
or
lret
popf
popl
inc
jl
mov
xor
stos
ficompl
pop
jbe
rcr
pop
xor
mov
popf
push
lahf
je
sub
xchg
adc
push
push
sub
inc
and
decb
add
rolb
and
cltd
xchg
cmp
jb
jbe
mov
cmp
inc
add
dec
cmp
scas
jle
pop
push
jle
aam
xor
insb
sbb
jne
pop
loop
mov
or
sub
inc
jae
sub
popa
int
iret
movsb
pop
sti
mov
mov
das
daa
shlb
test
jo
ror
lret
scas
fwait
pop
std
xchg
xor
pop
in
test
pushf
lock
inc
loopne
int
stc
xor
outsl
addb
xchg
jae
adc
pop
imul
adc
sbb
pop
ficoml
mov
inc
lret
xlat
or
enter
notb
jno
cmp
sbb
fs
outsl
rolb
or
lea
call
js
stc
arpl
jl
fistpll
cld
movsb
pop
clc
push
leave
mov
dec
out
push
jmp
icebp
movsb
inc
xchg
xchg
leave
pop
mov
inc
xchg
push
inc
test
xchg
into
aad
test
xlat
pop
add
jne
stos
js
xor
test
arpl
insl
xchg
dec
fisubs
in
shrb
insb
jp
sub
cmpsl
inc
mov
out
inc
add
dec
andb
pop
pop
out
push
mov
call
xor
xchg
jne
cmp
add
mov
stos
adc
ret
pop
xchg
or
mov
repz
jo
int
cmpsb
leave
sub
leave
ret
negl
mov
sbb
popf
push
adc
push
inc
aam
add
mov
mov
push
jae
xor
frstor
dec
dec
xor
data16
popa
push
in
out
xchg
jb
es
pop
inc
and
lahf
iret
jl
repnz
insl
jmp
push
jnp
push
loopne
movsb
cwtl
jp
aas
aas
or
loop
jecxz
and
jp
subb
xchg
aaa
jns
cmp
xchg
movsl
dec
jmp
mov
out
xchg
mov
sbbb
xor
mov
mov
icebp
adc
push
mov
cmpsl
dec
repz
push
rcr
js
adc
and
out
out
pop
lock
aas
and
push
loopne
inc
pop
fimuls
cmp
xlat
lcall
xchg
xchg
sub
pop
mov
adc
sarb
jo
cmp
int3
add
add
leave
imul
loop
push
xor
into
das
sbb
leave
push
leave
sub
dec
mov
add
dec
popa
sub
pop
dec
fsubrp
adc
sbb
sub
and
dec
gs
out
cmp
or
nop
out
mov
pop
mov
nop
call
sub
leave
fcompl
fs
sub
cmp
xor
push
repnz
inc
or
xchg
out
mov
dec
mov
dec
xchg
xchg
jmp
pop
and
xchg
mov
dec
sbb
pop
cmpsl
cmp
lods
cli
lods
je
loope
xchg
insl
dec
pop
mov
mov
push
ret
insl
imul
insl
mov
dec
lods
ljmp
mov
dec
or
or
les
loopne
pop
push
mov
daa
popa
or
cmp
xchg
jb
test
ljmp
sbb
lods
cltd
jo
out
addr16
inc
inc
mov
leave
pop
in
pop
jno
pop
jl
sub
jo
mov
jmp
cmp
sbbb
push
ret
into
pop
ds
cmp
inc
add
or
bound
dec
jmp
sub
mov
int3
stc
fildll
lcall
imul
xchg
iret
jg
xchg
test
inc
data16
fstps
lcall
gs
xchg
sti
in
leave
sbbl
mov
mov
leave
xchg
mov
fldl
out
adc
pop
jns
out
mov
mov
out
leave
or
jnp
ja
lahf
mov
movsb
inc
test
movl
sbb
push
scas
imul
xchg
xor
fisubrs
push
or
jnp
xchg
mov
adc
push
push
push
cwtl
mov
push
jp
rcrb
ret
movsb
pop
push
mov
cmp
nop
xor
mov
or
loope
gs
lret
mov
sahf
fbld
popa
enter
fadds
imul
imul
ret
jp
and
dec
imul
sarl
dec
xor
lret
jbe
frstpm(287
xchg
or
fs
popa
pop
push
push
jns
add
out
mov
cwtl
jg
test
xchg
mov
cmp
cli
push
xor
inc
cmc
sub
sarl
sub
andl
cld
cld
lock
xchg
int
sbb
pop
dec
arpl
sub
cmp
xchg
lea
int3
pushf
inc
in
dec
sbb
in
jecxz
insl
clc
cs
inc
mov
jns
je
xchg
imul
sub
cwtl
inc
jle
int3
outsl
mov
mov
add
mov
push
sbb
insl
in
mov
ret
lcall
ficompl
jle
bnd
push
imul
cmp
push
jmp
ds
push
insl
das
je
cmp
cmp
inc
popa
pop
xchg
bound
fiaddl
iret
sbb
sbb
xchg
jecxz
lret
std
rorb
mov
addr16
dec
mov
ret
arpl
jg
pop
int3
enter
cwtl
arpl
stos
mov
jne
push
scas
jns
fldt
icebp
xchg
rclb
mov
shrb
lea
sub
or
js
repz
ss
xor
lret
jb
xchg
add
sub
jb
mov
lock
mov
ret
xor
gs
lahf
orb
sub
in
in
and
sub
into
mov
jmp
push
subb
pop
in
mov
and
xchg
xchg
pop
mov
int3
or
or
ss
xor
push
dec
sar
or
cmp
push
inc
fldcw
mov
xor
mov
lea
xchg
in
lods
pop
add
cwtl
push
mov
movsb
mov
mov
add
jmp
xchg
lods
loope
enter
data16
in
pop
xor
and
cmpsb
or
add
loop
aaa
shlb
or
movsb
sbb
sub
push
ss
mov
test
push
xor
pop
adc
xchg
sbb
xchg
or
jge
cli
jg
dec
pop
test
test
cltd
out
in
dec
sarl
mov
cli
mov
sbb
dec
or
int
pop
fmull
xor
out
adc
xchg
push
or
cmc
ss
adc
fcompl
sub
repnz
push
push
ss
mov
cmpsb
mov
test
xor
bound
jno
imul
icebp
cli
push
inc
push
hlt
cltd
cmc
fcmovnu
mov
addr16
mov
sub
dec
mov
sahf
pop
in
add
stc
lods
xchg
mov
rcrb
pop
jecxz
add
jg
cmp
mov
notl
out
push
clc
jno
mov
repnz
mov
cltd
pop
or
or
shl
pop
xor
in
cli
pop
pop
mov
jg
insb
stos
mov
cmpsb
jo
dec
dec
adc
push
movsl
push
push
dec
ja
data16
cmp
mov
push
es
arpl
lods
jnp,pn
push
cmpsb
lds
bound
rorl
cwtl
fsubr
push
ljmp
dec
andb
pop
cmp
inc
mov
jbe
in
inc
jp
fildll
orl
xchg
loopne
mov
cmp
push
xlat
mov
call
lods
jne
incb
fstps
or
xchg
ljmp
icebp
sbb
and
sbb
inc
push
mov
test
hlt
inc
push
jecxz
mov
ficoms
pop
adc
jno
mov
add
xorl
mov
mov
xchg
in
pop
fidivrs
jge
jp
push
or
pop
or
daa
dec
add
jae
test
inc
aas
pop
cmp
aad
jecxz
pop
mov
pushf
fisubl
cmp
ds
push
rclb
jne
mov
xchg
mov
adc
xchg
jg
mov
push
neg
xor
out
std
cli
fwait
dec
andb
push
pop
dec
stc
pop
sub
in
fs
cmc
cmp
jmp
fsubrs
cmp
xchg
mov
cli
sub
adc
xor
xchg
testb
aaa
call
push
repz
mov
inc
and
dec
xor
or
mov
xchg
push
xor
jo
inc
pop
ss
or
mov
mov
data16
imul
xchg
stc
sahf
ret
fwait
hlt
and
repz
into
pop
iret
or
xchg
mov
jns
jmp
push
sbbb
icebp
loop
inc
rorb
dec
nop
jge
scas
and
dec
int3
scas
push
inc
arpl
icebp
adc
jb
cmp
imul
movsl
push
inc
fdivrl
xor
pop
pop
or
mov
aam
adc
fs
sub
push
mov
mov
lret
and
popa
adc
mov
popf
push
sbb
sbb
xchg
mov
inc
dec
test
lcall
jno
inc
sbb
push
in
sbb
fwait
or
dec
and
mov
fs
add
mov
outsl
cld
mov
jne
push
cltd
sbb
inc
sub
cli
rorl
ror
mov
dec
sarl
xchg
adc
in
test
xchg
mov
clc
jmp
sbb
std
inc
xchg
dec
cmp
in
ljmp
mov
push
jmp
dec
lods
notl
sub
sub
test
jle
or
ja
cmc
sti
push
stos
mov
xor
mov
movsb
fdivs
shll
jne
mov
mov
cmc
aas
jns
mov
pop
mov
sbb
movsb
test
addr16
aam
adc
cmp
mov
imul
insb
out
lea
movsl
sub
sbb
aaa
in
aad
lret
and
stos
lock
daa
int
enter
push
dec
mov
pop
mov
ss
dec
cltd
imul
jae
jnp
in
mov
and
nop
out
inc
sub
inc
out
mov
addb
push
xchg
xchg
sbb
cmp
data16
jnp
adc
push
aas
pop
mov
jnp
mov
pop
or
orb
fisubs
bnd
xor
sbb
fwait
inc
cmpsl
inc
lret
mov
or
xor
scas
rclb
fildll
shll
pop
adc
or
sub
inc
out
popa
je
mov
outsb
es
in
hlt
and
mov
mov
jle
leave
call
hlt
and
js
jne
pop
lea
xchg
pop
pusha
jle
push
shll
xor
cmp
pop
dec
nop
out
into
jecxz
inc
jle
cmpsl
sbb
test
dec
inc
dec
adc
sahf
pop
cs
icebp
iret
jge
and
in
jmp
ss
pushf
cmp
jecxz
ficomps
std
loop
xchg
mov
insb
mov
rcrb
loopne
bound
push
xor
mov
das
jbe
outsl
mov
jnp
lret
inc
xchg
xchg
cmp
test
jae
fmull
jno
xor
movsb
or
mov
add
movsb
cwtl
ret
dec
and
inc
dec
and
fiadds
stos
cli
pop
shrl
movsb
push
pushf
dec
xlat
push
xchg
or
es
dec
jmp
loop
je
arpl
push
cmpsb
sub
fidivrl
or
fcoml
test
dec
sbb
push
out
xchg
adc
dec
popa
cmc
xchg
daa
out
rorb
add
lods
nop
out
mov
or
sbb
loope
out
sub
leave
repz
loop
sub
jg
popa
adc
push
add
mov
nop
lcall
mov
sbb
mov
mov
mov
addr16
clc
sbb
lods
iret
mov
add
out
and
sbb
movsl
popf
out
lcall
jle
inc
xlat
dec
stos
pop
test
dec
or
hlt
ljmp
call
jnp
or
outsl
or
insb
adc
push
mov
je
sub
inc
mov
cmp
jle
add
lds
mov
push
push
add
sbb
dec
imul
cmp
sub
inc
xchg
in
jp
dec
jne
dec
mov
aam
jbe
stos
xor
test
mov
test
add
mov
push
addr16
cmp
cmp
ret
xchg
repz
std
popf
test
scas
sub
mov
sbb
in
cmpsl
mov
fidivs
dec
nop
mov
push
icebp
loop
add
js
mov
inc
ss
cmp
sub
push
jecxz
xchg
dec
imul
and
in
add
loop
ficompl
cmp
jbe
adc
push
int3
cmp
bound
jecxz
mov
xor
jnp
fldenv
mov
es
adc
push
loopne
cmpsl
push
stos
call
cs
mov
lcall
enter
test
mov
jns
mov
push
jae
popf
dec
jl
cmp
negl
mov
stos
jo
or
test
and
inc
test
imul
ret
leave
push
nop
or
xor
sti
in
pop
xor
add
addr16
movnti
xchg
sbb
inc
scas
xorl
cmp
jmp
scas
add
mov
add
fisubrs
lock
xor
or
push
mov
iret
cmc
and
movsb
into
inc
sbb
popf
sbb
adc
leave
fadds
pop
push
jnp
pop
repnz
sti
jg
test
pusha
mov
cs
cmp
mov
push
mov
pop
into
mov
call
xchg
cmpsb
mov
cs
xchg
daa
loope
xor
inc
jmp
jmp
add
cmp
in
or
aam
xor
pop
add
mov
inc
inc
mov
leave
js
cmpsl
stc
mov
jmp
push
dec
fiadds
dec
outsb
and
xor
jge
sbb
imul
pop
cmp
js
cltd
shrb
out
push
jne
inc
fcompl
adc
jo
into
cmpsb
sub
pushf
out
fstpt
xchg
fistl
mov
push
daa
mov
jns
adcb
jns
es
scas
mov
adc
jns
sub
xor
test
pusha
hlt
inc
mov
pop
mov
ret
jnp
movsl
cmp
sbb
and
or
sub
orb
jle
je
pop
sub
lods
xchg
ret
mov
xor
add
sahf
sti
in
es
rorl
lret
cmp
stc
sarl
xor
pop
addb
orl
jnp
lock
adc
inc
mov
mov
dec
ja
insb
sub
add
cmp
push
adc
out
jle
xlat
mov
jne
mov
test
adcl
sarl
dec
sahf
ret
testl
push
sbb
mov
mov
xor
push
pop
subb
jge
data16
mov
test
iret
pop
stos
mov
pop
push
add
mov
out
add
test
jns
imul
iret
ja
stos
fsts
fmul
cwtl
neg
sbb
lods
pop
out
fildll
int
mov
adc
jp
test
and
fs
mov
mov
fcoml
xlat
xchg
mov
mov
int
mov
into
aam
js
int
mov
xchg
cli
out
sub
jo
jp
mov
imul
lcall
add
sahf
add
aas
in
push
out
pop
add
jnp,pn
mov
sbb
pop
hlt
lcall
popa
cltd
out
or
dec
sub
lock
inc
fwait
mov
mov
ds
aaa
lret
ret
add
addr16
pop
rcr
shrl
push
sub
in
mov
mov
or
call
imul
cld
push
xchg
adc
sbb
sbb
xor
cmp
mov
cmpsl
xchg
xlat
lret
sub
push
shl
out
clc
std
xorl
mov
adc
xor
rcrb
xchg
inc
add
or
mov
cmp
add
rol
inc
xorb
sbb
lea
xor
jb
xor
dec
mov
xor
and
add
cmp
repz
cmpsb
outsb
inc
adc
fcom
pusha
mov
data16
jne
xchg
cmp
xlat
fs
mov
xchg
pop
push
fidivrl
ror
lret
lods
imul
js
rsqrtps
xor
call
jge
outsb
xchg
pushf
cld
lods
mov
rcrl
mov
mov
mov
jge
jno
leave
andb
leave
in
jo
adc
repz
push
incb
dec
stc
nop
hlt
ja
add
rcl
lds
clc
in
mov
xchg
sub
and
sub
cltd
into
test
dec
lcall
stos
outsl
loop
ja
xor
cld
movsb
cmp
fbstp
pop
out
adc
dec
pop
or
cltd
stos
sub
sub
out
movsl
add
sahf
cs
aad
aam
cmp
lods
cmp
sbb
adc
mov
or
mov
and
xchg
push
adc
cli
icebp
data16
or
mov
icebp
shrl
movsl
push
cld
gs
pop
orb
jmp
and
aam
gs
pushf
mulps
inc
enter
clc
lret
lcall
outsb
lds
popa
push
and
or
repz
pop
popf
mov
ds
in
scas
clc
bound
movsl
xchg
pop
inc
add
cmc
mov
jbe
sub
out
or
fst
inc
fdivl
mov
aas
into
mov
xlat
jmp
sub
and
pusha
xorl
shlb
push
cmpl
test
pop
cmp
into
jnp
mov
mov
jg
adcb
sbb
rol
sub
cmpsb
shufps
jp
ja
iret
mov
std
xor
stc
mov
mov
cwtl
ds
inc
adc
mov
inc
iret
ss
xchg
mov
jg
xor
push
cmp
mov
mov
pop
mov
scas
jl
xchg
and
lahf
repnz
jge
xchg
out
ljmp
jge
jo
sub
pop
lea
fbld
xlat
mov
sbb
push
inc
dec
pushf
and
pop
fcoms
dec
sbb
inc
inc
ljmp
hlt
call
stc
aaa
jp
mov
xor
push
mov
popf
push
pop
das
shl
lahf
sbb
fstpt
push
lods
bound
push
lahf
xor
stos
gs
xchg
xchg
mov
xchg
and
adc
inc
or
neg
pop
jl
iret
fisubrl
cmp
aam
jl
out
dec
push
xor
iret
outsb
push
dec
cmp
mov
mov
fwait
sbb
in
add
rorl
jne
mov
clc
les
dec
pop
sub
jp
jb
sub
xchg
mov
enter
xor
cmp
jns
dec
mov
add
inc
into
mov
int
cltd
inc
repnz
push
sti
dec
sbb
test
inc
aam
cmp
jbe
xor
pushf
dec
bound
sub
inc
adc
or
in
addb
imul
jg
sub
cmp
push
pop
inc
xchg
lods
mov
sahf
mov
lea
inc
sub
jne
or
mov
dec
int
cmpsl
sbb
fcmovnu
mov
popf
in
and
mov
push
xchg
adcl
inc
add
xchg
fnstcw
mov
cmp
dec
mov
hlt
inc
sbb
cltd
jne
lcall
add
mov
mov
or
dec
daa
loope
repz
jns
pushf
sub
mov
es
xor
cli
xor
sub
mov
mov
lea
cltd
pop
lods
mov
and
mov
test
out
into
stos
int3
sti
add
mov
cmpb
aam
cmp
lods
std
push
jge
dec
stc
cmp
leave
mov
sahf
bts
dec
xlat
in
pushf
dec
ja
repnz
mov
mov
mov
rolb
pop
stos
sbb
push
mov
inc
add
adc
mov
push
std
imul
xorb
xorl
push
jle
subb
stc
adc
outsb
sarl
adc
sub
subl
hlt
shll
mov
mov
xchg
mov
movsl
cs
neg
mov
add
or
mov
push
sbb
push
loopne
add
push
or
cmc
aaa
repnz
daa
xchg
mov
sub
dec
lods
push
rcrb
cmp
pop
jne
mov
add
test
hlt
jmp
sbbb
xchg
into
mov
ds
mov
in
pop
sti
and
fsubrl
iret
mov
je
mov
and
and
enter
add
cmp
pop
pop
sbb
outsb
sbb
stc
nop
test
adc
sbb
sti
sarb
pop
jbe
dec
test
jmp
out
lea
adc
test
dec
notl
dec
mov
popa
pop
movsl
mov
xor
xchg
jmp
data16
fisubrs
sub
mov
aam
inc
mov
ret
orl
mov
dec
jg
xchg
cs
lcall
xor
and
mov
add
xchg
cmp
jmp
push
mov
outsb
sub
mov
push
out
add
test
mov
rorl
stos
jno
jo
sub
jns
xchg
pop
jno
xlat
cmp
ss
xor
xchg
sahf
shlb
pop
out
pushf
xchg
int
pop
fwait
xchg
mov
sub
and
stc
mov
mov
inc
fldcw
lahf
sub
mov
mov
cmp
fldt
jb
fsubr
pop
inc
sub
rclb
adc
into
scas
mov
aad
imul
sbb
ror
or
pop
sbb
push
sub
add
or
repnz
mov
stc
pop
stos
and
xlat
cwtl
movsb
std
dec
add
mov
and
or
loopne
and
pop
push
cld
xchg
inc
xor
fwait
out
inc
addr16
andb
mov
or
push
int
sti
inc
push
mov
mov
arpl
jg
cmc
push
xchg
frstor
repnz
pop
fdiv
add
and
push
jg
ror
adc
push
mov
rcrb
and
dec
outsb
xchg
fcoms
ja
or
iret
sbb
cmpsl
mov
xchg
add
out
scas
xor
mov
lods
pop
pop
aad
in
rclb
sub
pusha
loop
cmp
sub
jp
push
loopne
shll
cli
push
rclb
xor
test
jns
or
fmuls
test
inc
std
mov
into
or
lret
add
out
sbb
and
pusha
pushf
dec
pop
mov
leave
push
inc
and
fldl
cs
ja
daa
lret
and
sub
xor
adc
mov
ret
push
push
test
pushf
ffreep
jno
adc
addl
push
mov
arpl
xchg
shl
outsl
addr16
sub
add
push
and
rol
sbb
and
or
jmp
orb
jb
pop
or
xor
mov
pop
xor
in
cmp
inc
cwtl
adc
sahf
add
push
and
mov
adc
movsb
dec
dec
lock
mov
jno
mov
sbb
dec
repz
dec
ss
adc
adc
mov
and
sbb
rcll
cmp
and
dec
cmpsl
std
push
inc
lods
sbb
mov
ret
or
movsb
ljmp
push
insl
xchg
and
test
lahf
inc
sub
xor
fistpl
jmp
rolb
lret
sub
jb
xchg
xchg
cmp
popa
push
insb
repnz
insb
dec
or
inc
dec
ficoms
sub
scas
popa
js
adc
ja
leave
pop
xchg
rol
ret
sub
jb
ret
cmpsl
push
cmp
push
adc
pop
ror
insl
and
cmpsb
stos
icebp
int
and
dec
dec
push
pop
iret
jg
out
popa
adc
jg
test
lret
pop
repz
adc
inc
lods
and
scas
mov
outsl
sbb
or
pop
or
daa
das
mov
cmpsb
cmp
lods
fucom
mov
jo
dec
sub
dec
jl
mov
jo
mov
cmp
xchg
sarb
ret
sub
jne
aas
lret
fidivs
call
jae
orl
loop
and
clc
mov
sbbl
lahf
hlt
pop
dec
roll
nop
and
lods
lret
inc
dec
jnp
xchg
jg
imul
test
or
or
and
arpl
clc
jae
shll
mov
lds
fisttps
fidivl
or
push
push
xlat
cmpsb
cmp
mov
bound
aad
es
ja
cs
sub
cmp
jnp
cmp
mov
in
idivb
data16
lea
loope
adc
outsl
and
mov
arpl
jecxz
movsl
jle
test
insb
push
shrl
sub
dec
mov
mov
mov
cmpsl
cmpsl
leave
movsl
cmp
or
mov
inc
stc
xlat
jge
jo
inc
lahf
push
iret
lahf
push
aam
mov
pop
ficoms
test
push
popf
lea
mov
fs
pop
cmp
clc
aad
jmp
popa
test
ficoms
adc
mov
jns
inc
or
out
loop
cmpsb
dec
mov
jmp
fsub
sub
ss
shlb
out
xchg
lods
sbb
jp
add
jbe
repz
mov
loopne
cmpsb
add
mov
mov
xor
int3
sarb
push
pop
js
add
adcl
mov
mov
and
push
int3
xor
or
mov
dec
mov
jmp
pusha
cmpsl
sbb
sbb
pop
mov
xchg
cmp
fwait
sub
pop
sbb
jge
jbe
lcall
aad
inc
sub
test
cmp
dec
addr16
jmp
mov
mov
popl
mov
pop
add
sti
loop
sub
mov
xor
enter
ret
jmp
dec
xchg
imul
add
or
inc
jmp
sub
mov
or
cld
fstpt
dec
jge
mov
ss
pusha
dec
call
icebp
loopne
xchg
ss
or
aas
inc
add
push
push
and
mov
xor
dec
bound
ljmp
dec
add
stos
fbstp
and
sbb
xor
fnstcw
lahf
push
xor
inc
add
movsb
add
mov
mov
cmp
sub
pushf
in
icebp
mov
lcall
out
adc
fs
leave
iret
inc
fdivs
mov
add
add
cltd
jbe
cli
jne
pop
sub
add
decb
outsb
pop
jl
repz
mov
into
imul
fmull
dec
push
adc
sbb
sub
pop
leave
je
stos
lahf
push
inc
shlb
nop
add
and
inc
sub
imulb
call
hlt
aad
stc
or
push
jmp
xor
sub
fcompl
and
repz
mov
xor
leave
out
lahf
adc
stc
or
mov
xchg
sahf
lret
cmp
adc
xchg
das
shll
outsl
cmpsb
clc
inc
dec
je
call
push
pop
adc
sbb
ja
js
jae
nop
mov
test
jae
out
sbb
in
lods
shll
xsave
push
jle
lea
mov
push
pop
out
xor
xchg
lock
or
cli
subl
adc
xchg
mov
es
out
lea
pop
stos
das
daa
jmp
pop
mov
sub
fldcw
shlb
das
xor
sahf
jge
test
insb
dec
xor
xorb
mov
cmp
das
adc
inc
cwtl
sbb
or
lods
pop
je
mov
inc
sbb
test
xlat
fs
or
mov
cs
sub
pop
rcrb
scas
in
adc
shlb
sbb
and
testb
xchg
dec
jmp
mov
xor
and
rorl
mov
mov
sbb
ja
cli
les
fnstenv
mov
roll
stos
daa
push
incl
sbb
xchg
mov
sahf
sbb
mov
rorb
mov
push
or
sbb
cmpl
popa
icebp
movsl
sub
mov
cli
int3
jge
mov
push
pop
jle
jmp
sub
popa
aaa
hlt
sub
int
adcb
cs
outsb
xchg
sub
and
xor
test
test
leave
je
sub
fdivr
cmp
mov
mov
xor
data16
inc
mov
ret
pop
sbb
pusha
xchg
push
aad
es
lahf
enter
leave
fildl
adc
out
add
test
jo
rorl
adc
and
outsl
decb
sbb
push
jle
iret
cld
xor
std
sbb
push
cmp
icebp
jnp
fnsave
les
es
arpl
imul
sti
mov
dec
mov
inc
in
xor
lods
pop
or
mov
xor
movsb
cmc
fnsave
push
mov
adc
shlb
repnz
mov
xchg
add
jb
test
fidivs
dec
scas
xchg
adc
jmp
shl
xchg
push
inc
jae
cmc
dec
or
pop
mov
sarb
sbb
js
push
mov
jno
xor
mov
or
or
cmpsb
sti
mov
mov
jb
push
mov
mov
clc
pop
or
jnp
add
lock
fdivl
repnz
subb
jb
fidivrs
int
sub
push
inc
insb
sbb
push
jmp
sub
mov
or
fdivrs
lds
mov
add
mov
dec
das
ss
dec
aas
mov
fiadds
adc
mov
movsl
push
cmpsl
lock
inc
cmp
add
fstp
ds
pop
push
aas
fdivrl
sbb
mov
in
cld
rorb
cli
rcll
bound
and
jo
xchg
daa
cmp
xor
or
add
jmp
or
mov
jle
aas
rcrb
insl
ficoml
ret
pop
mov
adcl
aam
mov
sbb
aam
sbb
xchg
adc
rclb
jg
ret
and
repz
scas
sbb
dec
mov
add
rcl
xor
imul
clc
xchg
sbb
fbld
push
adc
into
mov
or
dec
enter
lock
dec
or
aaa
cs
loope
xor
ret
insl
out
pushf
and
hlt
push
fiadds
xchg
js
dec
stos
jo
mov
and
or
xchg
xchg
int
loop
test
mov
mov
lahf
mov
ja
int
enter
stos
shlb
mov
pop
sbb
adc
int
call
stos
imul
aam
in
ljmp
fnstenv
xchg
adc
xchg
adc
pop
sub
jmp
xlat
int3
mulb
jle
fbstp
mov
cld
cwtl
xchg
adc
xor
rolb
mov
lret
into
mov
and
sbb
push
and
mov
popf
mov
inc
lods
scas
bnd
xchg
cmp
sbb
adc
jnp
fbstp
pop
or
cs
inc
adc
in
lcall
fcomps
jbe
jo
sbb
mov
fiaddl
jnp
or
clc
inc
jmp
push
or
pop
cmpsl
sub
xlat
cmp
mov
rcrl
add
add
xchg
cmp
movsb
xor
add
pop
cli
js
sub
inc
xor
stc
push
fists
enter
pop
rorl
or
rorb
add
add
mov
jmp
xor
faddl
ljmp
sahf
insl
xchg
mov
fnstsw
pop
and
clc
stc
jg
out
insl
imul
cli
push
lret
mov
stos
sbb
xchg
enter
rcrb
xlat
xchg
shr
arpl
or
pushf
pop
push
cmpsl
bound
sub
or
mov
add
or
insb
add
pusha
or
inc
sub
adc
int
push
insb
add
push
add
push
mov
pop
popf
push
arpl
cmp
outsb
jae,pn
enter
imul
mov
cmp
sbb
aam
push
sbb
and
sub
mov
icebp
xlat
adc
jnp
data16
inc
mov
cmp
addr16
pusha
sub
ss
fdiv
lods
jne
loopne
je
aas
mov
lret
xor
loopne
sbb
cmc
cmp
push
dec
scas
and
or
mov
sbb
push
daa
xchg
mov
push
push
iret
imul
mov
ja
add
xchg
push
dec
in
iret
xchg
push
dec
int
xchg
icebp
test
aas
sbb
add
stos
push
jns
cmpsl
add
cmp
sbb
mov
push
inc
ljmp
mov
and
push
popf
lods
mov
iret
sahf
mov
pop
jnp
ds
pop
call
repnz
cltd
xchg
push
add
push
shll
xor
mov
int
xchg
xchg
jne
mov
ret
mov
mov
inc
out
aaa
push
mov
add
sahf
adc
xlat
push
into
inc
cltd
mov
cmc
movb
dec
js
or
mov
cltd
es
push
mov
xchg
clc
jnp
xlat
mov
sti
aas
icebp
push
cmp
cmpsb
cmp
and
insb
mov
out
decb
mov
mov
jnp
mov
push
je
jmp
dec
fnstcw
xor
in
nop
push
mov
sbb
pusha
jmp
lods
push
mov
repnz
cwtl
mov
jmp
es
fidivl
or
sub
push
daa
mov
adc
jae
testl
cs
xor
add
sbb
shll
mov
pushf
pushf
jg
outsl
mov
aad
cmpsb
cld
aaa
sbb
cmp
test
ss
mov
xor
sti
push
inc
inc
shll
xchg
xor
cmp
sahf
es
out
fs
dec
arpl
test
cmp
mov
bound
push
js
mov
mov
sub
ss
push
insl
push
cmc
pop
or
sub
mov
add
pop
movsb
cmc
or
out
fwait
push
test
int3
lcall
pop
pop
je
lods
sbb
push
or
pop
mov
imul
aad
xorl
popa
and
jg
mov
mov
pop
jg
imul
pop
adc
out
rcll
adc
movsl
in
inc
cmp
mov
mov
lahf
jecxz
cmp
inc
aad
jae
pop
addr16
add
pop
mov
jp
fisubl
or
fcmove
lds
shl
sti
mov
adc
clc
inc
push
mov
cmpsb
push
imul
mov
jns
mov
outsb
test
mov
pop
stos
push
into
inc
dec
xor
jmp
sarb
mov
in
movsl
adc
es
add
push
mov
mov
in
std
push
inc
pop
in
mov
sub
jle
rcrb
pop
bound
xchg
lcall
mov
shll
sub
xchg
out
jns
sub
push
mov
cmpsl
mov
mulb
dec
jo
pop
in
clc
lea
jnp
mov
adc
dec
dec
xor
sub
pusha
lcall
jb
sbb
out
bound
lcall
mov
arpl
cmp
pop
adc
mov
int3
sbb
add
xchg
jbe
pop
lods
sub
adc
mov
mov
xchg
xor
jmp
sub
mov
cmp
fdiv
mov
cmp
cmp
and
jecxz
aad
xchg
int
loop
dec
jp
xor
xor
imul
xchg
push
jge
jge
mov
dec
test
leave
dec
popf
dec
iret
adc
xor
dec
xchg
push
sbb
imul
das
mov
ud2
jo
ja
jmp
sbb
pop
pop
gs
shlb
sbb
aaa
or
jae
aam
pop
lods
and
jg
cli
jg
add
int3
data16
dec
div
mov
shll
pop
xor
mov
xchg
sahf
les
lret
mov
bound
shrb
dec
xchg
dec
add
fld
popf
mov
sbb
jl
sbb
and
pop
sbb
daa
in
mov
enter
add
movsl
push
arpl
xor
cmp
jle
int
ret
pop
or
ffreep
aam
adc
inc
xor
adc
mov
ret
fs
in
aas
sbb
stc
inc
pop
push
adc
dec
fwait
add
mov
cmp
jl
es
test
and
jno
hlt
mov
sbb
js
jmp
sbb
ret
andl
and
mov
gs
sbb
lret
or
inc
mov
dec
xor
inc
repz
jge
inc
pop
mov
aas
xchg
out
inc
orl
sub
mov
xchg
dec
out
das
and
adc
xchg
mov
inc
iret
pop
xchg
outsl
xlat
inc
pop
xchg
icebp
inc
movsb
jmp
mov
dec
ljmp
hlt
mull
pop
sub
aaa
iret
std
cli
sbb
mov
adc
push
adc
out
or
cli
arpl
dec
out
outsb
xchg
sbb
mov
xchg
push
andb
outsb
ljmp
pop
jmp
test
push
shll
lret
cs
rcl
inc
cmp
fisubs
mov
es
cmp
jmp
xchg
gs
outsl
jbe
imul
insb
ret
out
push
popf
xchg
mov
xchg
pop
ljmp
dec
shl
adc
sub
in
sbb
stos
jnp
lcall
add
push
rol
adc
mov
and
pop
mov
inc
mov
or
int
sub
jp
loopew
mov
pop
dec
rorl
js
mov
shrb
inc
xchg
loope
inc
inc
push
sub
aas
xor
jo
arpl
mov
js
fs
jno
mov
xor
shlb
jg
leave
jno
cmpsb
push
mov
xor
maskmovq
imull
rorb
cbtw
sbb
jbe
in
dec
shrl
mov
into
addl
inc
and
adc
sbb
scas
fildl
loope
xchg
cmp
cmc
les
mov
aad
jg
mov
jo
mov
pop
add
pop
cmpsl
addb
dec
or
pop
push
mov
subb
inc
jl
pop
and
inc
sbb
cmp
into
xor
and
insl
rcrb
testb
or
dec
fs
mov
inc
into
in
adc
inc
movsl
stos
mov
sbb
pop
jecxz
ficoml
add
cwtl
pop
xchg
cmpsl
adc
jle
loopne
fisttps
dec
mov
adc
lret
into
lcall
lahf
test
jp
push
mov
in
cmp
push
test
add
push
pop
sub
cli
jne
addr16
mov
fdivrl
mov
cmp
sbb
mov
inc
fisubs
adc
mov
pop
cmpsl
filds
outsb
mov
sbb
in
insb
jb
lods
call
xchg
push
and
out
cmp
movsl
cmp
loopne,pn
out
sbb
bnd
inc
popl
lea
fs
add
cmc
outsb
mov
cmc
inc
mov
test
mov
push
ficompl
cltd
repz
cmp
call
sbb
lcall
or
cmpsb
mov
ds
hlt
jae
pop
pop
pop
dec
sub
pop
add
push
sub
push
cmp
add
push
push
cmp
mov
jecxz
ficoms
inc
test
mov
adc
lds
pop
dec
xchg
faddp
sbb
pop
xor
xor
in
inc
add
pop
dec
in
cltd
mov
out
push
and
je
xchg
mov
std
add
scas
ficoms
enter
lods
xor
pop
decl
xchg
sbb
inc
push
push
imul
jae
lock
and
pop
lods
andb
mov
adc
imul
sbb
dec
lcall
cmpsl
scas
pop
inc
pop
sbb
inc
and
das
xchg
xchg
stc
push
fsts
lods
jmp
dec
inc
adc
testl
push
xor
insb
cmc
rorl
cltd
adc
dec
out
xchg
fldl
adc
rclb
dec
outsl
mov
add
add
and
lods
xor
cwtl
ja
std
divl
push
imul
cli
in
mov
call
rclb
jbe
sub
jge
cmp
cwtl
fdivs
mov
ljmp
imul
push
add
out
mov
addl
adc
div
iret
pusha
cmp
dec
aam
cmp
sbb
fs
add
into
xchg
int
pop
aas
inc
adc
dec
sbb
insb
push
outsb
push
ds
pop
and
cmp
add
pop
clc
pop
cltd
js
jno
adc
ret
sar
lcall
inc
or
pop
inc
pop
and
loope
or
clc
and
stos
repz
pop
movsb
add
hlt
sbb
out
icebp
jo
lret
aad
shl
les
add
ss
movl
cltd
xchg
testl
xor
jae
mov
je
mov
sub
dec
lret
xchg
fwait
mov
inc
xor
std
mov
fmulp
fsubl
sbb
mov
or
pop
lock
pop
ds
test
enter
push
test
and
xchg
out
flds
jno
mov
aas
lea
aaa
ret
mov
adc
push
dec
enter
mov
inc
sbb
jle
roll
or
add
arpl
jg
pushf
je
adc
movsb
sub
dec
sti
mov
std
pop
sbb
fisubs
mov
aad
sahf
jecxz
push
lret
fcoms
and
sbb
in
mov
pop
push
aad
es
out
shlb
dec
and
or
sahf
dec
push
sahf
addr16
push
insb
xor
add
dec
pop
aas
xchg
ds
arpl
inc
fdivs
sahf
mov
mov
insl
mov
sub
imul
scas
and
sti
cwtl
cwtl
clc
in
xlat
xchg
int
fisubrl
push
push
mov
jmp
jmp
and
mov
out
mov
adcl
xchg
stc
inc
js
adc
mov
jmp
repnz
add
jae
shll
stos
in
das
sub
lods
clc
cmpsb
lock
daa
mov
jno
lret
js
in
push
pop
jge
push
sbb
fwait
push
pop
mov
push
sbb
divl
xor
test
pop
das
xor
cmp
pop
push
cmp
scas
stos
shll
sahf
and
in
dec
clc
fistpll
push
mov
insb
pushf
jne
ret
jns
dec
push
shl
cltd
mov
cs
xchg
xor
mov
loope
out
jnp
lea
sub
mov
mov
pop
imul
es
arpl
mov
and
mov
into
pop
xchg
sub
adc
cmp
jmp
or
fcmovnb
and
sub
repnz
inc
mov
cli
and
sub
dec
or
mov
xchg
mov
or
xchg
lahf
adc
jp
aaa
pop
cmp
stc
or
rorl
data16
sbb
sbb
mov
lret
jns
lods
cltd
int
dec
fistl
subb
xchg
or
cmp
jns
hlt
mov
or
lea
scas
lcall
xlat
cmp
ror
or
lods
push
mov
stos
out
aas
ret
inc
jge
push
icebp
inc
aas
sahf
xor
sar
sub
inc
xlat
leave
inc
jb
outsb
ret
aaa
pop
enter
sbb
aad
insb
push
sarl
pop
xor
movsb
pop
xchg
jecxz
popf
pop
sbb
daa
mov
sub
cwtl
test
jle
imul
outsb
push
shlb
push
jg
pop
aaa
sbb
jecxz
mov
mov
cmp
xor
aas
and
cli
outsb
and
cltd
mov
lds
mov
je
xchg
pop
mov
aaa
test
imul
or
pop
mov
out
addr16
add
push
test
jno
stc
mov
and
lahf
pop
addr16
in
rcll
imul
inc
repz
imul
jbe
cwtl
test
into
movsb
jge
out
icebp
jb
pop
xchg
mov
leave
test
push
add
test
into
xchg
lret
pop
cs
outsb
outsb
mov
leave
sbb
push
xchg
and
or
sahf
cmpsl
pop
pushf
and
sahf
bound
xor
ret
cmp
leave
or
scas
mov
sbb
or
add
and
mov
dec
pop
aas
jle
lret
and
jno
lahf
iret
mov
imull
call
mov
xchg
sub
push
sbbb
lea
sub
pop
sub
xor
into
fistl
push
and
add
xchg
loope
dec
rcll
sar
call
sbb
sub
lret
bnd
sub
rol
test
imul
rorl
dec
scas
sbb
pop
out
stos
cmp
cld
icebp
test
and
push
xor
dec
cmc
mov
ljmp
fists
fcomps
dec
or
mov
movsb
dec
pop
push
loope
fcomps
ret
into
jle
or
imul
addr16
pop
mov
cld
dec
xor
ss
xchg
outsb
xchg
add
frstor
mov
aad
jne
push
mov
mov
cwtl
mov
xor
mov
pop
mov
je
loop
inc
cmp
aam
data16
ds
push
loopne
inc
push
imul
lods
cmpl
mov
outsl
aad
and
sbb
mov
andl
lret
jg
cmp
into
mov
pop
in
imull
pop
in
xor
negb
rclb
es
fcom
lock
xor
pop
push
cmpsl
add
int
xchg
or
inc
push
pop
mov
scas
sbb
pop
in
sbb
mov
add
addr16
sub
cmpsb
pushf
loope
push
imul
xchg
cmp
fdivrs
dec
mov
out
into
les
push
shrb
outsl
push
dec
push
sbb
push
sub
movsl
pop
add
call
mov
mov
rorb
pop
lods
sub
dec
xchg
adc
or
mov
or
ret
and
or
or
mov
jns
aad
out
xchg
lods
mov
mov
daa
imulb
punpcklbw
cmp
mov
push
int
ror
stos
jp
adc
call
add
or
jmp
pop
mov
rorb
call
loopne
and
xchg
mov
lret
test
adc
shlb
xchg
movsl
das
push
xor
and
scas
mov
xorl
outsb
adc
andnps
mov
pop
xchg
dec
cmpsl
loopne
mov
jns
arpl
mov
fadd
in
cmpb
stos
mov
cmc
in
sbbb
mov
push
dec
imul
add
aam
and
les
test
pop
cmp
lods
aad
fisttps
xchg
add
loopne
sbbl
nop
imul
sub
jmp
xchg
jg
repnz
inc
push
jl
sbb
les
ljmp
dec
sub
dec
aas
fs
movsb
clc
xchg
in
aad
inc
incl
pop
into
push
lea
push
lea
add
dec
cltd
xchg
or
inc
mov
mov
mov
push
vprotq
gs
add
das
and
mov
out
xor
lret
xchg
mov
cmpsl
mov
jg
mov
daa
jmp
xor
pop
mov
cltd
add
push
in
je
add
in
sub
loop
jmp
xor
lahf
ret
cmp
icebp
daa
sti
call
rcr
dec
adc
std
or
das
cmp
mulb
push
pushaw
pop
lret
inc
xorb
lods
lods
xchg
inc
nop
repz
push
ret
lret
adc
data16
push
jmp
cltd
mov
mov
fcomps
add
push
aaa
sbbl
aam
bound
arpl
call
sub
pop
sub
dec
sbb
lods
js
jp
mov
or
mov
clc
mov
in
or
repz
stos
sti
iret
stos
jmp
std
adc
mov
dec
sysret
jecxz
push
lods
ret
shlb
aaa
aad
xchg
mov
push
loop
add
mov
jns
arpl
es
push
adc
jl
adc
rorl
add
sarb
push
xchg
test
repz
mov
xchg
pop
mov
test
ret
enter
push
test
cmp
aam
test
jb
mov
jno
xchg
inc
inc
cmp
rol
enter
inc
adc
jge
jb
jge
and
and
sbb
mov
dec
jle
fadds
xchg
sub
push
pop
xchg
pop
insb
mov
out
push
je
fwait
adc
xlat
xchg
int
mov
shl
mov
sub
movsb
cmp
xorb
sahf
cltd
aaa
test
pop
inc
inc
mov
bnd
repnz
imul
ljmp
cmp
shrb
ret
push
lea
fcmovb
adc
in
enter
fadds
mov
inc
sub
inc
and
pop
pop
and
mov
or
cs
sub
xchg
loope
int3
loope
adc
jp
lret
cmp
push
ljmp
and
cltd
mov
insb
stos
in
mov
dec
push
xor
push
sub
leave
dec
mov
push
lahf
mov
mov
pushf
movsb
dec
sbbb
inc
test
mov
hlt
ret
sbb
test
test
loop
dec
out
inc
xchg
mov
js
std
mov
cli
push
pushf
rcll
xchg
repnz
out
xchg
mov
call
jbe
pop
fs
popf
shll
shrb
cmp
ja
in
outsl
add
in
dec
ds
cwtl
stos
imul
std
leave
test
test
and
and
or
jp
xor
sahf
push
bound
lea
cmp
insb
mov
jno
inc
jns
cmp
rol
fcoml
xor
and
sub
pop
je
cmp
mov
cmp
xchg
sub
xchg
les
adc
inc
xor
jge
push
sti
sub
test
dec
pop
js
add
pop
in
ds
pushf
mov
dec
int3
aas
pop
sar
and
pop
insb
push
cmp
shl
sub
icebp
shlb
and
iret
xchg
dec
ret
jnp
jbe
mov
popa
xorl
mov
rcll
mov
popa
cwtl
inc
or
das
sarb
adc
data16
cmp
sbb
test
mov
sbb
pop
jmp
sbb
das
or
out
jmp
push
mov
lock
repnz
xchg
and
dec
in
or
es
mov
xor
push
jns
outsb
inc
or
data16
hlt
mov
pop
mov
mov
imul
sarb
inc
ja
sbb
repz
dec
and
int
dec
jne
or
xor
mov
mov
inc
imul
leave
icebp
or
sub
sub
js
cmpb
outsl
mov
jmp
mov
loop
in
mov
jae
or
dec
imulb
cmp
rcrl
push
xchg
dec
jmp
mov
inc
dec
mov
or
popf
mov
jne
mov
lds
lock
cmc
icebp
ror
lods
mov
inc
jmp
ficompl
adc
bound
cmc
rol
or
adc
in
stc
clc
cs
sbb
and
push
fdiv
xor
push
dec
xchg
mov
pushf
fnstsw
push
outsb
pop
push
popf
call
mov
xchg
sbb
or
xchg
push
mov
ror
sub
mov
fadd
aas
cs
inc
push
popf
pop
scas
sahf
lods
in
stos
xor
dec
imul
scas
mov
or
stc
adc
and
xchg
ret
loopne
jl
add
rclb
xchg
mov
fnstcw
mov
push
xor
mov
and
std
out
push
mov
aam
push
mov
add
mov
clc
insb
sbb
fidivs
jo
lcall
clc
sub
push
cmp
cmp
cmpsb
pop
mull
fwait
lret
sub
pop
mov
std
push
cmpsl
enter
add
in
add
mov
in
xchg
pop
iret
adcb
shll
notl
lcall
in
out
push
cwtl
gs
adc
push
sbb
sub
push
jle
movsb
add
sahf
push
cmp
je
daa
cmp
or
xchg
mov
dec
sub
test
push
inc
jge
notb
jmp
lds
dec
mov
dec
pop
fs
stos
mov
sbb
sbb
sub
jg
call
mov
cmc
sbb
rdtsc
add
pop
jno
outsl
arpl
ret
xlat
movsb
lods
cmp
xchg
sub
jmp
gs
jmp
popf
dec
cmp
xchg
das
cmpsb
lods
xor
push
add
cs
pusha
push
mov
pushf
div
icebp
data16
sub
cmc
sbb
push
repnz
scas
mov
xchg
mov
pop
adc
sahf
mov
or
jl
scas
divl
les
pushf
mov
dec
lcall
push
mov
idivl
mov
subb
jo
jp
fs
inc
pop
fsts
aam
mov
mov
imul
aam
jg
mov
fisttps
arpl
dec
jl
sub
mov
rcrl
addr16
or
call
xor
jge
ret
js
mov
lahf
jb
aaa
mov
sub
cli
in
insb
xor
out
sbbl
jle
movsb
jne,pt
out
cmp
mov
mov
xchg
dec
jmp
inc
aas
pop
movsb
xchg
jmp
popa
pop
out
test
xor
sti
mov
xor
xor
out
out
sub
jnp
push
sbb
ljmp
and
push
lods
push
cmp
sbb
cmc
andb
pop
lret
rorl
adc
or
mov
sub
lret
cmp
outsb
mov
mov
das
and
sub
mov
dec
movsl
mov
cmp
iret
xor
dec
sbb
inc
xchg
add
in
cmp
movl
cmp
cmp
xor
pop
in
shll
ret
dec
cs
dec
insl
cmp
xchg
std
mov
xor
in
jae
pop
adc
jge
push
pop
std
lahf
std
fs
and
lcall
mov
fmuls
dec
or
and
pop
data16
inc
adc
fiaddl
repnz
rolb
add
stos
mov
pop
faddl
mov
fbstp
cmpsb
mov
mov
sbbb
aas
orb
imul
int
xor
lods
mov
mov
push
inc
pop
ljmp
call
pop
cmp
mov
inc
sbb
lods
mov
inc
dec
je
fnstcw
test
loope
and
mov
xorb
add
cmp
xor
lret
rcr
stc
lea
xrelease
cmp
cs
add
dec
xchg
lcall
aam
test
mov
les
aam
addr16
test
out
xor
sub
sbb
add
cmc
inc
push
shl
les
scas
pop
xchg
add
mov
xor
cwtl
icebp
inc
enter
jg
mulb
bound
mov
iret
fimull
decb
fsubs
out
inc
xlat
or
nop
or
dec
xchg
in
repnz
ss
pop
mov
jnp
sub
addr16
pop
jnp
popf
je
movsb
dec
sbb
sub
mov
dec
and
jns
push
movsl
shlb
movsl
cmp
or
add
jmp
insb
pop
fiaddl
rorl
mov
and
pop
loop
mov
ds
cltd
sbb
jne
lahf
dec
jge
and
arpl
and
mov
adcl
mov
daa
repz
js
or
cmc
xchg
lods
adc
push
push
adc
divl
push
mov
lods
outsl
nop
lahf
xor
in
mov
or
jecxz
ror
mov
or
jne
jecxz
les
pop
jge
jle
xor
or
lret
pop
lret
sbb
arpl
popl
sahf
iret
cmpsl
pop
mov
adc
test
xchg
xchg
adc
push
cmp
arpl
mov
mov
xchg
mov
repnz
and
movsb
imul
lds
mov
shr
xchg
inc
fwait
jle
xchg
fbld
xchg
mov
pop
dec
stos
movsl
push
push
fwait
lods
stos
pop
inc
imul
ds
daa
dec
out
and
roll
or
test
xchg
js
imul
stos
and
imul
dec
xlat
cmp
xor
lcall
inc
nop
dec
cli
ljmp
or
jbe
lods
ffree
inc
inc
mov
movsb
jae
mov
in
mov
imul
dec
add
cmp
mov
mov
and
dec
mov
inc
mov
push
stc
xor
repnz
cmpb
add
popa
mov
xchg
aam
sub
pop
mov
sub
out
xchg
test
dec
mov
add
cld
pop
or
xchg
xlat
inc
fld
mov
clc
repnz
jmp
call
sti
hlt
add
push
xor
jb
lret
mov
hlt
fadds
cmp
xor
mov
aaa
std
pop
sub
jae
jns
sub
sbb
cmp
addr16
xor
pop
jne
movsl
sub
js
test
in
rol
xor
sbb
inc
mov
loope
mov
test
xchg
aad
push
rolb
les
es
push
jb
push
mov
adc
cmp
mov
das
mov
fnstenv
add
enter
jg
mov
cmc
loop
jp
movsl
xchg
je
adc
aaa
sub
inc
fbstp
push
mov
rcrb
lret
cmp
mov
jae
repz
sub
das
jmp
dec
test
mov
fmul
outsl
jae
shlb
rorl
test
sbb
leave
ret
cmp
std
cmp
dec
cmp
in
mov
or
iret
mov
sbb
push
dec
and
setae
xor
pop
fs
cmp
push
mov
dec
call
dec
and
pop
pop
cltd
int
shll
xchg
xor
mov
pop
xchg
pop
icebp
mov
mov
push
sbb
inc
ds
pop
sbb
xor
xchg
pop
mulb
adc
ss
jo
mov
dec
adc
stos
mov
jb
jge
ljmp
sub
pop
mov
loopne
arpl
mov
and
fstp
cld
movsl
add
test
dec
pop
push
outsl
test
dec
or
pop
mov
sahf
lcall
sub
ds
ret
enter
pop
fsubrs
and
psubb
fimull
push
sbb
data16
pop
rcrl
pop
dec
ret
lret
xchg
pop
pop
or
mov
and
and
test
sbb
loopne
jnp
fisttps
iret
pop
pop
inc
cmp
loop
adc
arpl
cs
pushf
fmulp
sarl
pop
jle
mov
out
jne
les
jne
es
dec
add
cwtl
lahf
sbb
outsb
loopne
ds
add
inc
fwait
stos
fsub
das
dec
jge
xchg
dec
hlt
aam
mov
scas
xchg
jne
or
push
cmp
jmp
sarl
sub
inc
into
mov
sub
popl
mov
add
push
or
cltd
cwtl
stos
std
aam
divl
inc
and
fwait
mov
inc
and
sbb
fidivrl
dec
xchg
scas
or
jp
xchg
mov
lds
xor
mov
push
mov
mov
xor
mov
adc
in
cmp
jbe
or
dec
pop
sbb
in
xor
cmp
std
movsb
cltd
cmp
in
pop
hlt
inc
adc
cs
out
xorb
movsb
add
mov
js
sbb
xchg
sarb
and
fcompl
push
ret
add
js
inc
nop
jns
cli
pop
jno
lret
jg
jle
jle
ljmp
ja
mov
jno
cmp
out
jle
cmp
fisttps
jae
pop
dec
aaa
lds
into
xchg
push
mov
pop
lret
pop
cmp
daa
add
aad
outsb
and
out
push
sbb
jno
pop
fisubl
ucomiss
outsl
fs
push
popf
push
mov
push
push
inc
adc
push
sti
lcall
dec
std
mov
lock
imul
aam
pop
mov
adc
cmp
jb
sti
test
inc
inc
xchg
push
cmp
xor
push
shld
les
movsb
jp
arpl
mov
nop
adc
pop
push
sti
arpl
nop
fnstsw
fcoml
pusha
sub
mov
xchg
in
insl
adc
into
mov
fidivs
rcrl
jle
cmpl
int3
arpl
push
dec
mov
cmove
inc
jno
in
insl
out
push
and
jecxz
add
jecxz
mov
xor
add
les
stos
stos
ret
out
in
movsl
sbb
and
jl
pop
sarl
mov
sbb
test
minps
pusha
xor
ljmp
icebp
pop
sti
add
in
jge
in
ret
or
push
arpl
adc
mov
outsb
push
mov
mov
xchg
pop
pop
dec
push
sbb
inc
xchg
out
pop
mov
aas
je
add
add
int3
push
cmp
xchg
dec
bound
movsb
sti
cmp
in
jo
femms
call
pusha
mov
push
xchg
into
adc
dec
xchg
popf
hlt
lods
ficompl
bound
pop
idivb
cld
mov
add
dec
cltd
sub
dec
rorl
imul
pop
sbb
mov
into
mov
push
stos
cmp
sub
dec
jb
jae
push
lds
mov
jg,pn
mov
push
rcll
enter
das
fwait
fs
xor
inc
or
push
mov
or
imul
mov
ljmp
out
jae
aad
mov
mov
pop
jg
pop
mov
and
shl
mov
ljmp
push
hlt
addr16
hlt
sbb
jne
ret
inc
inc
test
imul
inc
push
sub
fwait
push
jb
lods
xchg
in
das
pop
repz
shlb
mov
push
scas
shl
adc
cli
scas
outsl
cwtl
test
jnp
inc
and
orl
dec
dec
jbe
cltd
push
sahf
mov
ljmp
or
addb
sub
sbb
adc
mov
dec
jns
push
xchg
cmpsb
xchg
lock
inc
mov
dec
int3
adc
xor
sti
cmp
aaa
push
mov
out
sbb
push
xchg
mov
push
and
leave
int3
std
jge
das
sbb
sti
testl
addr16
dec
test
lcall
mov
mov
cmpsl
sahf
lds
mov
xchg
push
mov
in
push
insb
sahf
aas
adc
dec
dec
scas
out
or
mov
fwait
popf
push
pop
mov
mov
sbb
and
cli
jnp
mov
pop
fimull
ret
icebp
push
ds
shl
xor
cmp
lahf
dec
jle
add
pushf
shrl
sarb
call
pop
push
leave
imull
ja
aas
mov
xrelease
test
and
add
cmp
setne
push
mov
jno
fs
xchg
cmpsb
pop
dec
out
dec
sbb
mov
outsb
mov
pop
and
iret
sub
or
addr16
faddl
mov
adc
punpcklwd
jp
adc
shll
in
inc
pop
sarl
test
fmull
subb
xchg
sbb
loop
mov
clc
fnsave
xchg
and
or
cli
push
imul
inc
xchg
xor
lea
in
out
call
outsb
xchg
cmpl
pop
lcall
inc
leave
pop
mov
jnp
int3
cmovle
lods
leave
mov
loop
movsb
lret
inc
sbb
mov
mov
gs
and
ljmp
cwtl
mov
mov
addb
test
jae
cmp
cltd
scas
mov
pop
and
jno
in
inc
and
mov
push
test
jp
or
fcom
in
mov
in
sti
enter
push
cmp
jno
stos
insb
lock
sbb
dec
leave
test
stc
inc
push
scas
cs
fistpll
adc
stos
mov
xchg
mov
add
or
test
aas
dec
hlt
subl
in
pop
es
hlt
fdivrl
insl
add
and
mov
adc
cwtl
loopne
and
jae
in
add
popa
mov
daa
push
inc
mov
mov
pop
in
rcl
js
ja
int
push
dec
mov
mov
dec
jnp
add
stos
mov
popw
sti
pop
roll
lret
repz
pop
cmpsl
mov
jge
xlat
add
popa
stos
sbb
pop
mov
mov
sbb
xchg
addr16
scas
out
xor
sub
inc
mov
sbb
inc
sub
push
jb
out
ret
test
incl
xor
jns
cld
lret
iret
in
or
pop
mull
jo,pn
stos
lds
jecxz
lret
stos
cmc
and
imul
inc
in
imul
xchg
mov
mov
cs
mov
lahf
cmp
ljmp
pop
ret
aad
sub
xchg
jmp
push
sahf
lcall
and
fisttps
cld
pop
mov
add
add
sbb
outsb
enter
rclb
pop
jmp
fwait
cmpsl
loopne
insb
mov
sub
fadds
test
cmpsb
jl
rol
test
inc
add
xchg
mov
bound
mov
ja
lds
jb
idivb
repz
add
xlat
push
mov
sub
stc
pusha
pop
adcb
push
fisubs
lret
mov
pushf
adc
test
add
test
push
sub
ljmp
arpl
call
fsubrl
out
stos
or
inc
mov
arpl
xor
insb
adc
and
and
sbb
stc
mov
leave
cli
addr16
adc
inc
dec
gs
add
pop
or
and
sarb
mov
pop
fildll
and
and
ljmp
je
push
in
scas
shl
mov
sbb
aad
push
pop
push
popf
data16
pop
inc
adc
sbb
jp
stos
jno
and
orl
adc
sub
jp
shl
sbb
jle
sub
xchg
pop
outsl
mov
in
mov
adc
movsb
cmp
fwait
out
mov
movhlps
ds
inc
dec
add
into
pop
mov
scas
stc
mov
faddl
iret
xchg
neg
jbe
cmp
or
sbb
push
jle
push
push
cmp
insb
ds
call
pop
arpl
andb
mov
sbb
and
out
fs
jmp
mov
xlat
cli
mov
mov
fcmovbe
jae
mov
jns
cmpsb
ja
xor
sbb
cmp
divb
popa
mov
xchg
es
negb
xchg
ja
dec
sub
cld
jecxz
and
push
mov
aam
push
imul
shrl
fsubr
out
xor
aam
mov
ljmp
cld
xor
je
rclb
jb
inc
xchg
or
inc
inc
and
or
xor
outsb
leave
movsl
jle
sub
xor
ss
enter
lods
ficoms
shl
add
scas
push
sub
or
add
jl
out
js
push
adc
xchg
addr16
in
mov
dec
aaa
shl
pop
pop
cmc
dec
jg
xchg
js
sar
arpl
popa
mov
or
rorb
popf
lods
arpl
stc
mov
es
and
icebp
sub
pop
jns
xchg
xchg
aas
lds
dec
mov
lods
mov
mov
push
daa
loopne
sbb
adc
loop
xor
jbe
mov
jmp
push
call
pop
and
clc
fsubrl
rcrl
mov
mov
fsubl
fxch
scas
aam
outsl
rdtsc
jb
nop
mov
mov
xor
stos
lock
cmc
push
loope
or
das
hlt
xor
je
imul
xor
and
pusha
imul
ret
mov
cmpsb
dec
les
stc
nop
cmp
dec
movb
mov
cmp
les
mov
fcoms
es
shr
bound
and
push
mov
xor
and
xchg
jge
cmp
scas
sahf
jp
cs
rorb
ret
jle
mov
pop
pusha
scas
aas
mov
data16
inc
ss
cmp
sahf
fisttpl
bswap
sbbb
insb
mov
stc
push
cmp
mov
imul
fstps
ja
dec
jge
sbb
in
dec
adc
mov
inc
cmp
nop
jbe
sub
dec
mov
paddsw
pop
and
ja
inc
loopne
sub
negl
jge
and
push
loope
or
cmp
mov
add
imul
dec
aas
mov
je
push
push
mov
and
dec
fs
daa
and
cmp
or
sbb
aas
rol
xchg
iret
and
xor
les
cmc
inc
out
test
sbb
in
sarl
push
je
mov
pushf
jmp
jb
xor
fdivl
jmp
inc
test
xlat
outsl
sub
in
push
nop
repz
add
dec
addl
add
xor
lods
xchg
pop
mov
inc
insl
push
stc
push
leave
aam
std
and
mov
cmp
inc
mov
xor
in
fwait
add
xchg
cld
cmp
inc
fcoms
pop
pop
repz
flds
xchg
aaa
inc
dec
xchg
movsl
xor
inc
or
push
push
mov
rcr
mov
cmp
fcomp
stos
into
fadds
and
cli
mov
add
ret
pop
xchg
lods
sbb
push
jle
rcll
jo
sbbl
sbb
in
mov
mov
iret
mov
adc
pop
popl
pop
xchg
jl
and
dec
lcall
pop
fistps
iret
cwtl
es
hlt
out
push
add
outsl
dec
loope
pop
daa
outsb
mov
push
lcall
shll
scas
and
ret
mov
sar
stos
ficoms
fxch
fnstcw
mov
repnz
call
push
mov
cli
aam
arpl
xchg
xor
cli
mov
adc
push
daa
and
mov
sti
push
repnz
inc
adc
jl
jb
pop
dec
and
xor
mov
mov
ret
hlt
lret
std
or
das
pop
pop
jge
mov
mov
jo
into
inc
jno
test
sbb
leave
xor
stos
pop
mov
adc
mov
lret
mov
mov
inc
pop
stc
ret
sbb
shrb
div
inc
push
js
fldl
movsl
mov
push
push
mov
loope
out
in
ds
inc
or
and
sub
out
int
mov
dec
mov
xlat
ja
lret
outsb
xchg
xchg
movsb
mov
xchg
inc
mov
mov
push
shr
into
rcll
sub
dec
aas
stos
and
out
aaa
leave
dec
rclb
pop
aad
jne
push
fldt
cltd
cltd
sub
iret
aam
push
in
int3
scas
adc
pop
mov
lahf
orl
out
lret
pushf
jnp
add
out
jg
aaa
inc
fidivl
push
dec
hlt
fidivs
and
cs
insl
retw
cltd
ret
popl
scas
push
mov
cmpsl
xor
push
or
imul
cld
fcomi
int
mov
pop
sti
jmp
das
cli
sahf
jb
cmc
mov
mov
inc
and
sub
mov
fidivl
push
outsl
push
nop
fldl
and
arpl
pop
xor
push
adc
sbb
inc
addr16
cmp
xchg
in
push
pop
adc
nop
std
mov
stc
int3
sbb
in
fwait
xchg
inc
popf
rep
ffreep
daa
scas
or
shll
mov
in
ss
mov
dec
xor
mov
mov
inc
stos
pop
add
aad
and
cmp
lock
inc
mov
jnp
xor
daa
sbb
imul
mov
outsl
cmp
pop
adcl
jns
test
jp
inc
test
push
push
mov
jno
negb
or
mov
test
mov
pusha
pop
sub
sbb
mov
aam
loop
mov
sub
jecxz
cmpsl
mov
mov
repnz
pop
dec
and
test
push
addr16
cmp
ljmp
adc
in
std
jmpw
cmpsl
fnstcw
xchg
adc
loope
sub
sbb
rorl
loope
xchg
pop
lret
sub
jnp
mov
int3
jle
stos
dec
lret
jae
xchg
or
or
mov
addr16
jmp
xchg
ret
sbb
fdivr
fildl
ljmp
test
push
adc
or
push
in
mov
pop
dec
inc
cld
xchg
inc
sbb
rcl
mov
fwait
dec
xor
push
jl
rclb
jp
sub
les
xlat
js
fidivl
fidivrl
xchg
js
outsl
dec
jecxz
mov
cmpsl
cmpsb
lret
sarl
bound
jae
jb
clc
jge
rcrb
andb
inc
xchg
aas
push
int
test
adc
pop
jle
and
xlat
mov
or
aam
mov
in
jp
cmp
push
movsl
loopne
testb
or
lahf
popf
jmp
jne
rcrb
xchg
mov
jmp
mov
adc
das
stos
popa
repz
sub
xchg
es
mov
jp
pop
or
pop
pop
fcoms
or
shlb
jo
mov
xchg
push
sahf
loopne
test
loop
cmpsl
in
cmp
mov
test
push
mov
aad
ret
jl
xor
mov
sub
push
sbb
adc
lods
jnp
scas
addb
mov
pop
xchg
mul
cltd
stc
cmc
sbbl
inc
loope
repnz
add
sti
pop
jle
pop
lea
repnz
mov
pop
add
das
jns
jbe
adc
ds
in
pop
pushf
nop
cld
sbb
fimuls
icebp
out
int3
inc
push
es
mov
and
aaa
sbb
xlat
push
xchg
adc
enter
ds
cld
add
fcomp
jp
aad
shlb
adc
pop
jmp
aad
lea
pusha
add
test
pop
ret
add
flds
adc
pop
je
jg
push
jae
jb
sti
push
cli
or
int
jp
cmp
xor
test
mov
cmp
fs
daa
je
mov
mov
or
adc
in
pusha
outsl
xchg
dec
adc
fs
or
mov
jmp
rolb
iret
push
iret
lret
ljmp
xchg
in
cmp
mov
or
fdivs
or
out
mov
mov
fimull
sub
add
mov
arpl
mov
inc
scas
add
mov
ret
push
sub
in
in
lcall
or
adc
fwait
shlb
pop
cli
imul
dec
cmp
test
aaa
jecxz
mov
cs
xchg
jb
sub
scas
mov
call
xchg
cmp
adc
xchg
mov
cmp
mov
push
fcoml
xor
jb
push
add
xchg
mov
fbstp
sbb
ja
in
dec
fcomps
pop
popa
fwait
loop
mov
inc
pusha
stos
mov
mov
or
mov
add
inc
xor
fisttpll
pusha
jecxz
repnz
xchg
push
jbe
scas
test
ds
xor
aam
rcll
jecxz
jnp
dec
cmp
push
mov
jno
test
and
push
xchg
rcl
and
les
dec
dec
imul
ljmp
jns
iret
shrb
ret
popf
orb
clc
add
mov
add
mov
inc
push
fcomip
mov
jae
rolb
ret
push
fst
mov
mov
pushf
rclb
jp
lods
add
adc
stos
ja
pop
outsb
add
pop
and
push
sbb
wbinvd
mov
int3
adc
inc
jge
test
ljmp
lds
inc
repz
sub
pop
xchg
and
push
mov
int3
icebp
daa
mov
jno
aad
add
lahf
jge
xchg
jle
sub
and
inc
jbe
ds
sbb
mul
mov
mov
pop
lret
ljmp
bnd
xrelease
adc
in
mov
std
jbe,pt
ret
ds
sbb
sahf
mov
movsl
test
jnp
push
cmp
and
xor
or
xor
ja
jbe
sbb
fwait
shlb
pop
popa
ja
pop
lods
out
adc
adc
fcom
dec
adc
insl
nop
lret
das
and
movsb
dec
mov
insb
test
popa
fistps
mov
push
addl
popa
add
xchg
fadd
stos
sbb
pusha
inc
push
ljmp
enter
fdivl
jo
xor
clc
call
loop
outsb
sbb
inc
pushl
sahf
sbb
xchg
in
mov
sti
xchg
dec
mov
sbb
scas
mov
out
mov
jge
popa
fdivrs
js
in
mov
jl
jmp
loope
lea
movl
mov
xor
mov
add
popa
add
lea
pop
out
push
mov
fdivrp
dec
sub
adc
mov
loopne
fisttpl
out
ja
and
sub
cmpb
fwait
shrb
rol
adc
scas
mov
mov
dec
popf
adc
xor
cmpsb
mov
sbb
dec
adc
stos
je
pop
gs
jne
addr16
cmpsb
cs
mov
ljmp
push
mov
clc
mul
mov
leave
mov
lcall
pop
dec
push
push
hlt
movsb
sub
mov
popa
leave
inc
xor
cmp
jle
push
sbb
inc
mov
cli
jns
cltd
dec
sub
jno
movsl
jae
mov
lret
gs
mov
xor
jno
jb
stos
stos
iret
xchg
xchg
sub
mov
adc
out
push
ja
shlb
or
mov
testb
scas
add
adc
add
fsubs
sbb
add
xlat
test
push
aas
adc
and
xor
das
sbb
push
inc
imul
mov
cmpsl
or
jle
mov
inc
push
xor
into
icebp
rorb
xchg
pop
cmc
dec
out
xchg
fs
xor
fsubl
xchg
test
stc
mov
inc
dec
push
mov
pop
pop
minps
pop
push
mov
push
sub
jg
cmp
in
in
aaa
pushf
loopne
cwtl
js
fisubrs
mov
dec
xor
dec
add
mov
loopne
xchg
movsb
inc
inc
idiv
into
jle
orb
inc
pushf
outsb
push
mov
dec
mov
cmpsl
inc
stc
mov
xor
lock
sub
pop
icebp
mov
ljmp
lret
imul
loop
mov
mov
cwtl
test
cwtl
push
data16
adc
pop
imul
pusha
and
add
call
stc
cmp
cmp
fists
out
ds
sbb
pop
ds
leave
xchg
inc
notl
faddl
mov
pop
pop
cltd
jno
in
cmp
jp
test
faddl
push
loope
shlb
mov
adc
jmp
in
and
js
shll
adc
outsl
xchg
imul
mov
ret
mov
test
daa
andl
ret
dec
pusha
rcll
fwait
je
mov
faddl
iret
dec
loop
cmpsl
sbb
xor
and
cwtl
in
aaa
imul
in
inc
cmpb
std
push
cmpsb
mov
mov
in
mov
jne
cmp
daa
cmpb
repnz
xlat
je
icebp
cltd
lret
ljmp
cmp
testb
xor
out
jae
mov
mov
and
sbb
inc
hlt
lcall
in
icebp
in
xor
or
hlt
mov
xchg
pusha
outsb
dec
mov
addl
push
aaa
sbb
and
addr16
outsb
pop
push
jecxz
popf
cmpsb
push
mov
ss
xchg
sti
hlt
and
ret
sub
inc
out
xchg
fcompl
iret
dec
dec
out
adc
mov
out
dec
enter
stos
paddq
mov
ret
pop
xchg
movsb
adc
mov
popf
add
fmul
cltd
rorb
sbb
sar
jge
mov
adc
rorl
das
xchg
imul
dec
xor
scas
push
mov
lock
lcall
mov
gs
lds
xchg
or
pop
jle
push
inc
sub
mov
loope
cmp
js
jmp
out
jbe
pop
jp
scas
inc
adc
pop
dec
sbb
into
rcll
adcb
cmp
adc
xchg
neg
pop
popl
into
es
rcrl
stc
stos
icebp
call
sub
imul
roll
and
into
dec
pop
cmpsl
jb
push
jb
mov
hlt
repz
xchg
jmp
les
mov
adc
lods
or
lock
mov
inc
out
mov
mov
mov
xor
mov
add
mov
pop
sub
shrl
push
pop
pushl
adc
cli
out
enter
lds
into
call
lahf
sbb
mov
test
mov
xchg
adc
test
or
and
loop
or
int3
jp
cmpsb
xchg
mov
frstor
xchg
ljmp
orb
and
clc
mov
jp
jecxz
mov
jbe
xor
xor
in
push
xchg
cmp
icebp
xchg
ret
fldt
insl
mov
or
dec
out
test
les
and
inc
mov
ror
inc
ja
push
cmp
push
dec
push
push
ljmp
sahf
mov
sbb
xchg
add
lods
or
adc
cmp
in
leave
sub
inc
and
mov
cmpsb
pop
mov
dec
jg
push
daa
std
pop
pop
aas
push
cmp
hlt
pop
pop
mov
mov
xchg
ja
add
leave
jmp
mov
mov
jp
mov
mov
loope
div
adc
cmp
scas
outsl
iret
sub
pop
mov
push
cmpsl
ret
mov
pop
and
outsl
jecxz
pop
jbe
sahf
insl
add
dec
outsb
std
pop
jne
xchg
lret
mov
cmpsb
pop
cmpsl
pause
push
nop
in
dec
sub
lahf
shl
add
adcb
inc
int
cmp
out
lret
popa
sbb
xlat
pop
sbb
aaa
mov
pop
daa
push
cmpsb
sub
inc
icebp
sbbb
rolb
xchg
bnd
push
popf
dec
cmp
out
dec
sub
dec
mov
mov
add
fidivs
in
cwtl
into
mov
fcomip
jbe
pop
lcall
sbbl
and
cld
mov
pushl
inc
inc
dec
xchg
dec
lds
or
mov
hlt
inc
xchg
xchg
inc
aam
mov
adc
out
popa
sbb
imul
mov
inc
adcb
jne
or
xlat
pop
inc
pop
mov
mov
pushf
push
fcomip
test
loope
xchg
imul
jbe
sbb
cmp
aad
test
add
push
cld
xchg
jge
or
pop
mov
adc
lock
repz
test
jo
dec
xor
das
sbb
mov
mov
ficoml
nop
fnstsw
mov
pop
pop
cmp
jmp
loop
mov
mov
clc
add
push
or
or
popa
mov
daa
cmpsl
jne
and
xchg
sbb
mov
add
int
mov
cmp
push
lcall
sbb
cmp
push
push
mov
call
mov
mov
mov
mov
into
mov
mov
xchg
rclb
stos
mov
cmp
in
pop
cmpsb
into
jl
enter
test
shl
mov
and
sub
push
xor
or
cmp
lret
andb
push
in
xor
ja
repz
jno
lret
dec
movl
mov
and
and
ja
out
fs
mov
mov
cmp
loop
in
neg
sbb
adc
and
test
outsb
js
out
adc
dec
aaa
push
adc
enter
dec
test
out
dec
mov
out
pop
sti
outsl
cld
xor
jle
scas
ror
push
nop
jle
fcoms
mov
mov
or
sub
call
mov
fs
imul
push
or
adc
mov
jge
adc
pushf
faddl
dec
lcall
loopne
iret
aaa
fisttps
push
insb
scas
dec
mov
sub
movsl
loope
adc
adc
fsubp
mov
ret
sbb
or
lods
sub
push
pop
push
or
daa
adc
jge
aam
inc
push
push
fisttps
cli
push
fcmovne
scas
mov
inc
xchg
mov
lcall
ss
in
jae
addr16
push
or
sbb
ja
jo
inc
rcll
es
jmp
xor
mov
popf
rorb
lods
adc
inc
pusha
cld
call
cwtl
cmpsb
out
inc
clc
sbb
sbb
das
cmp
ret
mov
jae
dec
jle
test
jge
fisubrl
xchg
jp
or
mov
lock
adc
dec
mov
inc
add
mov
in
pushf
push
ss
xchg
pop
ret
push
sbb
cwtl
call
mov
stos
imul
mov
mov
incl
or
insl
inc
mov
cmp
movsb
shl
cmpsb
xchg
mov
xchg
mov
mov
lret
aaa
push
xchg
push
into
push
xchg
addl
xchg
imul
and
xor
add
inc
and
cmp
pop
pop
mov
mov
mov
inc
enter
outsb
mov
ss
lahf
aad
sbb
sub
int
hlt
mov
mov
xor
nop
push
pop
repnz
jge
jb
stc
enter
pop
jno
jbe
outsl
push
leave
pop
jo
or
jmp
cmpsl
in
mov
jnp
inc
test
cs
cmp
es
call
push
adc
movsl
stos
or
jnp
inc
clc
aad
add
pop
fadd
xchg
mov
dec
xchg
stc
imul
clc
lcall
jno
jg
rcr
mov
mov
add
addr16
pop
inc
adc
adc
mov
and
shrl
das
adc
sub
dec
push
std
clc
dec
data16
cmpl
inc
hlt
or
fisubs
shl
dec
lods
pop
cltd
orl
incb
das
dec
outsl
xchg
add
mov
lcall
pop
and
dec
mov
out
mov
and
sub
xchg
sub
out
sub
out
cmp
cmp
outsl
ja
movsl
mov
sti
in
and
xor
inc
mov
add
add
mov
push
push
aam
push
movsb
scas
notl
in
insb
pop
arpl
mov
jb
jb
mov
adc
repnz
fstpl
push
sbb
xchg
mov
fninit
imul
push
hlt
pusha
lds
xor
sub
dec
dec
cmpsb
dec
sahf
mov
js
jp
cmpsb
jne
sbb
xchg
pop
neg
test
mov
sti
jnp
and
scas
add
jp
subb
je
cmpsb
mov
pop
aas
imull
iret
out
inc
push
cmpsb
and
roll
jno
mov
lock
out
popf
lea
inc
jmp
out
in
mov
or
les
adc
clc
les
addr16
cwtl
jo
in
jp
jmp
inc
mov
push
cmpsb
add
mov
mov
push
test
out
and
push
xor
push
loope
mov
push
mov
xor
sbb
or
push
jge
shr
sub
fmull
mov
mov
ret
push
or
lods
push
daa
xchg
out
adc
mov
add
iret
mov
sbb
scas
cmp
cmpsl
pop
imul
aaa
rclb
jg
pop
das
pop
xor
fisubl
mov
xchg
adc
or
ret
movsb
fnstsw
test
pusha
push
bound
test
jns
into
xchg
popa
cmp
jp
dec
push
and
push
fwait
jno
dec
sub
ret
or
jp
sub
shll
jb
mov
aam
test
and
scas
enter
shlb
call
popa
xchg
sub
fidivl
mov
sbb
xchg
jbe
cld
cmpb
subb
mov
cmpsb
add
out
test
bound
repz
int
and
sbb
in
mov
cltd
into
pop
adc
inc
shrb
movsw
cltd
and
push
sbb
cs
mov
shll
ja
and
cs
pop
in
int
shll
dec
ror
imul
cmp
dec
push
xor
hlt
lods
mov
mov
sub
sub
mov
lahf
sbb
jmp
jecxz
pop
invd
hlt
pop
pop
mov
rorl
ret
test
fstl
scas
cmc
shlb
jge
jle
push
xorb
jp
sub
jmp
jns
dec
int3
cmc
lcall
jnp
push
stos
jns
xor
fisttps
push
into
pushf
sub
sub
pop
inc
mov
sbb
jnp
inc
jnp
cmp
dec
jns
mov
mov
inc
cmp
call
scas
lods
sbb
and
pushf
into
mov
test
dec
int
jb
inc
stos
in
add
cmp
jnp
sub
daa
adc
jecxz
xor
ret
sti
andb
leave
add
xchg
or
xchg
mov
dec
mov
das
fcomps
subb
shr
popa
mov
fbstp
xchg
jg
jae
and
fdiv
in
pop
mov
in
popf
notb
out
fs
out
adc
std
push
addl
out
dec
mov
add
pop
inc
lods
mov
movsb
sub
pusha
out
and
pop
mov
add
sub
mov
and
jge
xchg
sub
xchg
lahf
cmp
lods
mov
push
adc
ds
mov
inc
insl
mov
in
fwait
test
or
dec
dec
mov
mov
cli
mov
loop
xor
cmc
test
les
lds
rcrl
mov
out
jmp
cwtl
push
pop
std
pop
xchg
push
out
dec
dec
mov
or
xor
jp
inc
inc
sub
sub
and
sbb
lahf
rcrl
fmuls
and
not
or
mov
xchg
dec
mov
push
insb
or
in
pop
test
mov
sti
mov
mov
xchg
aad
sbb
push
and
mov
pop
imul
push
das
inc
sub
sub
daa
rcll
test
jle
sub
jp
xor
loope
sub
push
loope
jbe
dec
daa
mov
push
stos
mov
stos
and
mov
in
lea
mov
out
sbb
les
stos
shlb
outsb
pand
and
pop
ffreep
pusha
sub
jle
fstpl
in
sbb
lcall
cmp
aaa
bnd
cmp
mov
mov
arpl
mov
subb
pop
ds
ss
les
divb
repnz
cmp
call
and
adcl
sub
bound
or
and
pop
pusha
test
bound
xor
push
cmpsl
lock
push
lret
mov
stos
iret
sbb
or
jecxz
mov
out
rorb
loope
xor
sub
dec
sbb
sub
enter
loope
jle
xchg
cmpsl
adc
xor
xor
push
mov
repz
orb
fimull
mov
std
mov
clc
pop
shl
jb
dec
xchg
mov
add
xchg
ds
int
jno
jb
add
mov
nop
aad
adc
inc
cmp
lret
js
sbbl
jns
jne
fnstsw
es
dec
or
iret
and
insl
lods
sbb
jge
adc
cli
aas
jb
inc
add
insl
out
lea
mov
mov
cs
aad
cli
adc
push
jae
pop
mov
daa
inc
pop
mov
xchg
or
pusha
stos
inc
mov
mov
stos
js
mov
add
push
cmp
add
and
push
add
ljmp
enter
sbbl
shr
jbe
sbb
sbb
pop
mov
add
pop
xorb
dec
pusha
cmpsl
outsb
aad
cmpsb
fcoms
cwtl
loop
fcompl
std
sbbb
xor
mov
mov
pop
lods
pop
xlat
scas
mov
push
jg
xor
rcrw
shl
js
sbb
cmp
inc
jo
fidivrs
jnp
and
mov
inc
push
in
outsb
push
jl
cld
pop
mov
fldcw
pop
fldcw
or
icebp
xchg
cmp
psllq
sbb
fnsave
mov
mov
dec
cmc
mov
nop
dec
cmp
dec
xchg
cli
into
clc
pop
aas
mov
outsb
movsl
in
add
xor
movhps
insb
mov
adc
add
test
pop
pop
mov
stos
scas
inc
fxch
dec
data16
iret
cmp
in
adc
push
cmpsb
fsubp
sbbl
je
pop
dec
and
packuswb
pop
cwtl
pop
aad
enter
lret
cli
cmpsb
sub
nop
mov
outsb
clc
rorl
pop
cli
pop
inc
or
and
dec
enter
push
xlat
push
pop
lahf
insl
insl
mov
dec
nop
pop
jg
in
stos
mov
push
push
xchg
inc
int
insb
xchg
sub
les
add
pop
push
movsl
stos
push
or
comiss
inc
or
imul
cwtl
xchg
insl
leave
loop
fs
es
and
loop
sti
or
and
push
xor
and
loope
das
out
cwtl
out
adc
pop
push
dec
test
into
or
mov
cmp
dec
out
push
pop
divb
add
mov
cld
in
sti
hlt
mov
jle
inc
es
roll
push
out
fwait
or
xchg
aaa
in
and
dec
test
repz
xchg
sbb
xchg
fwait
mov
or
add
test
cmp
ja
add
jp
sub
iret
mov
es
jnp
sbb
sub
das
cmp
xchg
or
ja
sub
enter
xchg
imul
movsb
mov
and
in
out
ss
es
or
sarl
fisubrl
hlt
sbb
lods
mov
dec
std
push
or
cwtl
pop
cli
fnsave
scas
in
mov
call
pusha
mov
and
push
ljmp
push
mov
std
daa
jo
fs
cmp
xor
mov
ret
je
int3
push
push
jp
cmpl
pop
xchg
dec
stc
jle
stos
and
roll
cmp
ja
and
sub
cmp
test
pushf
andl
xchg
pop
cwtl
sub
push
aaa
or
add
fstpt
test
fsubr
aam
add
cli
cltd
das
test
movsb
out
imul
lret
pop
adc
cmp
shlb
outsb
out
jl
insl
or
fwait
add
lahf
sahf
add
shlb
push
aad
dec
test
xor
cli
gs
pop
and
mov
aad
adc
cwtl
xchg
jg
xchg
sti
test
into
pop
cmp
sbb
data16
in
mov
and
cmpb
or
pop
push
jno
fidivrl
mov
pop
push
imul
jb
fidivl
icebp
jae
jecxz
scas
dec
push
aaa
fmull
data16
mov
std
or
mov
cmp
ficoms
imul
ret
pop
dec
pop
lea
or
fisttpl
and
movsl
cwtl
fists
push
fs
jb
jb
test
pop
rcll
push
icebp
stos
jmp
orb
lods
add
mov
push
push
mov
pop
dec
je
les
adc
hlt
mov
dec
js
or
or
ljmp
push
fucomip
in
insb
fdivl
sub
pop
adc
pop
icebp
cmp
lds
dec
test
mov
lahf
push
mulb
lret
push
loop
cmp
push
add
jp
stc
testb
push
repnz
jmp
mov
xlat
icebp
xchg
rorb
push
aaa
rcrb
enter
jmp
test
in
cmpsb
mov
movsl
enter
sti
shlb
ja
jge
lds
jle
jb
xor
add
push
sub
dec
adc
xchg
xor
out
fwait
jg
add
sub
mov
lahf
pop
push
sarl
dec
cmpb
or
clc
inc
rcrl
mov
pop
cmp
out
mov
push
jbe
mov
jbe
cltd
into
inc
sub
rcr
dec
popa
test
fwait
inc
insl
es
iret
mov
and
jbe
mov
call
cvtpi2ps
cld
cmp
adc
fadds
add
fists
fidivl
dec
or
jl
rsqrtps
xor
mov
cmp
dec
dec
xor
xchg
outsl
insb
cmp
shl
cs
xchg
jae
shll
sub
pop
and
xor
pop
fistl
insb
out
cli
jp
push
leave
sub
test
push
lcall
fcmovb
add
rclb
sbb
rcll
out
jnp
pop
daa
outsb
cld
int3
sbbb
pop
adcb
data16
dec
xor
dec
mov
popa
adc
mov
push
cmp
jg
push
xchg
cld
push
pop
dec
jne
cwtl
outsb
and
lods
rsqrtps
mov
adc
add
jl
sti
mov
inc
sub
jnp
dec
pop
fs
fnstenv
bound
sti
nop
mov
fnsave
cltd
jo
add
std
sub
dec
iret
cmp
jl
pop
push
jp
hlt
pushf
in
ret
sti
xchg
fidivrl
fmuls
test
js
push
sub
mov
pop
aas
xchg
in
mov
ret
lods
mov
fistps
push
mov
mov
data16
inc
pop
push
jge
mov
add
dec
push
mov
rclb
shlb
mov
adc
out
ljmp
imul
ret
je,pn
mov
adc
sub
xchg
sarb
push
pop
fcomip
iret
test
leave
jo
mov
xlat
pop
jl
add
sbb
xor
pushf
push
xor
xchg
push
iret
jmp
mov
shll
fadds
jae
xor
or
push
push
lcall
stos
sbb
fimull
fistl
sahf
dec
push
scas
mov
mov
cmpsl
out
outsb
hlt
xchg
jo
aad
cwtl
jb
bound
movsl
sbb
jmp
cmpsl
jnp
jmp
add
rol
or
or
lods
loope
and
sbb
mov
mov
jp
ss
leave
dec
in
inc
les
int3
loopne
cs
cmp
and
jl
lea
xchg
or
cmp
push
jae
addl
fcoms
pop
push
xor
scas
push
or
divb
je
ss
push
cs
aam
fsubl
cmc
ret
movsb
or
xor
mov
cmp
sub
push
jne
jmp
pop
pop
dec
cmc
pop
in
adc
push
out
fiaddl
popf
mov
daa
jecxz
shrb
mov
lcall
inc
sbbl
cmp
inc
pop
jp
imul
dec
iret
pusha
cmpsl
popf
ss
push
xchg
inc
imul
push
mov
jge
sti
movsb
arpl
sahf
inc
andl
outsl
sub
mov
clc
xchg
out
loope
xor
ror
jns
pushf
mov
data16
inc
fs
jmp
xchg
subb
ds
ja
mov
mov
cmpsb
aam
xchg
pop
cs
pushf
cmpsb
pusha
pop
pop
jmp
add
das
pop
addr16
xchg
sub
imul
mov
jno
sahf
std
adc
testb
pop
mov
movsb
push
jl
mov
sahf
xchg
imul
cmp
pop
test
mov
xchg
sub
das
jne
dec
mov
cmp
std
aad
pop
xchg
push
sbbl
dec
push
std
scas
push
push
movsb
mov
sbb
sar
cmp
sbb
cld
and
fwait
shl
inc
and
cmpb
sarl
xorl
dec
and
lods
xchg
mov
jp
push
jae
inc
sbb
cmp
adc
call
xor
inc
xor
cmp
mov
pop
xor
mov
mov
imul
adc
dec
jne
aas
and
mov
mov
sub
xchg
pop
sbb
sbbb
in
test
icebp
jmp
adc
mov
pop
sbb
aas
adc
dec
aaa
mov
add
dec
and
ljmp
std
lock
repz
mov
cmp
or
arpl
aaa
push
push
repnz
jno
rol
jne
hlt
daa
push
mov
push
cmovg
push
push
lds
je
jmp
cli
fnstcw
xchg
jg
lcall
pop
dec
xchg
decb
scas
outsb
push
mov
mov
push
push
cli
imul
and
dec
adc
jbe
jo
jp
stc
xchg
push
push
ds
and
dec
push
stos
call
mov
ds
fmull
pop
xor
xchg
loop
mov
into
out
mov
inc
sbb
sub
sar
movsb
hlt
mov
dec
sbb
ret
xchg
and
cmp
push
xor
aas
inc
sbb
stos
adc
mov
stos
mov
fstpl
ja
inc
sub
clc
mov
and
es
roll
dec
ret
pop
cs
test
push
and
inc
jmp
sbb
clc
or
mov
int3
cvtdq2ps
inc
or
js
dec
popa
mov
mov
mov
sub
addl
fildll
ret
jmp
cmp
mov
inc
mov
mov
inc
enter
jnp
mov
pop
mov
push
jbe
and
pop
and
or
inc
or
cltd
ret
mov
mov
lahf
push
inc
lcall
outsl
adc
movsl
ret
mov
notb
lds
cmpsb
rcrl
jle
sbb
into
xor
lock
stc
jo
shrl
cs
mov
test
test
aam
or
mov
mov
xorl
add
or
loopne
mov
mov
cmp
in
pop
rcr
jmp
pop
add
les
stc
push
pop
jmp
sub
jg
test
pop
sub
hlt
outsb
sub
orb
pop
into
mov
sbb
mov
and
mov
xchg
inc
mov
scas
test
xor
adc
aas
jl
mov
cmp
jecxz
cmp
jge
outsb
or
push
aad
pop
cmp
cmp
push
xor
addb
mov
out
sub
andb
xlat
sarb
xchg
js
lcall
xchg
jmp
jnp
bound
sbb
sti
jae
mov
mov
call
jnp
sub
lret
push
pop
sbb
and
ficoml
mov
mov
fcoml
jl
test
jne
xchg
rorb
mov
jg
push
inc
jmp
pusha
adc
sti
sub
fidivrs
xchg
sti
xchg
leave
jo
cmp
mov
xchg
imul
pop
pop
mov
adc
data16
fcmovnb
aas
sbb
ja
fmul
sar
jno
fsubrl
aam
inc
fisubrl
stos
jo
out
ret
jp
sbbb
cmc
jo
out
out
mov
lcall
xorb
add
pop
inc
or
mov
aaa
fnstenv
and
cmpsl
adc
xor
out
jmp
popf
sub
sbb
inc
sub
loope
mov
jle
fs
cmpsb
mov
mov
leave
shrb
dec
lret
push
mov
bound
mov
and
pop
and
lret
sub
scas
sahf
cmp
mov
add
add
xchg
ja
xor
sbb
sub
out
jg
and
add
ret
pusha
jecxz
into
sub
rcrl
or
dec
push
xchg
mov
jmp
in
cmp
jecxz
xchg
mov
pop
jns
bound
subb
out
push
and
mov
in
mov
iret
int
jp
mov
dec
leave
add
sub
stos
push
cmp
cmp
arpl
addr16
fwait
sub
sahf
pop
mov
in
mov
sarl
cltd
bound
push
xchg
add
mov
xor
aas
outsb
xor
lods
out
push
jns
les
cmpsl
mov
insl
jnp
cmpsl
and
xor
mov
fbstp
leave
add
dec
iret
inc
push
jo
cli
imul
movsl
push
and
stc
mov
out
in
inc
mov
lret
aad
fidivrl
inc
hlt
jns
das
pop
stc
les
cs
movsb
mov
sbb
mov
in
sbb
repnz
loop
lods
sarb
andb
inc
sub
fwait
push
aas
scas
dec
shll
push
add
sbb
decl
rclb
inc
movsb
mov
mov
and
cmp
test
les
mov
inc
dec
fwait
decb
mov
les
add
ror
xchg
push
mov
cmp
lahf
icebp
add
dec
mov
cli
xchg
inc
adc
daa
nop
xor
pushf
mov
dec
mov
pop
mov
mov
popa
jecxz
inc
out
sbb
je
push
repz
lock
jp
stc
cmp
ret
test
shl
mov
in
decb
lret
inc
mov
sbb
shl
bound
je
arpl
mov
cmp
sarb
movsl
aad
andl
adc
cld
mov
cmp
sub
jmp
jg
nop
mov
outsb
idiv
or
clc
mov
mov
lret
inc
xor
dec
aam
add
mov
int3
push
pop
out
sbb
mov
mov
jle
push
data16
test
mov
sarl
insb
sbb
int3
test
ret
rclb
andl
inc
jmp
adc
add
xlat
inc
sbb
mov
mov
inc
mov
les
lods
dec
pop
fstpl
js,pn
lock
pop
shl
push
shll
mov
pop
jns
test
sbb
mov
cmc
lcall
ljmp
mov
sti
sub
pop
pop
arpl
inc
fidivrl
das
mov
mov
ljmp
lcall
dec
lea
rol
lret
xor
inc
xchg
xchg
imul
adc
out
rol
inc
add
sahf
mov
flds
pop
sbb
es
rorl
dec
cmp
xlat
int3
jmp
dec
mov
push
sarb
jae
mov
lods
scas
jno
mov
cwtl
in
cmp
or
repz
adc
pop
cltd
es
xchg
sahf
lock
loopne
push
icebp
cmp
pop
xchg
sbb
jnp
xchg
cmp
in
fwait
add
xlat
ljmp
lret
imul
popl
adc
dec
pushw
adc
das
iret
icebp
in
sbb
outsb
rorb
xor
pop
test
cli
or
pop
jo
mov
hlt
imul
test
pop
test
xor
enter
cmp
fdivr
lcall
lret
pop
pop
ret
insl
lcall
shrl
jle
cmp
arpl
ret
mov
or
int
leave
adc
jns
or
sbb
dec
jne
pop
fwait
sub
fucomp
sub
sbb
adc
sub
ret
out
xchg
int3
dec
cmp
add
pop
jg
jecxz
leave
cmp
loop
sbb
add
ret
daa
vandnps
nop
aaa
pop
inc
stos
sub
sub
push
mov
push
or
aad
push
mov
mov
out
pop
cmp
mov
dec
push
aad
mov
fs
lds
insb
xlat
lock
adc
mov
lods
test
xchg
push
aas
xor
adc
pop
push
inc
jae
fimuls
repnz
or
aas
inc
mov
jp
fs
shl
cmpb
dec
xor
fdivl
aad
push
sarb
xchg
xor
jp
cmpsb
mov
das
adc
pop
stc
push
mov
scas
repz
fldenv
arpl
fsubs
stc
sbb
push
adc
lods
inc
adc
and
sub
int3
pop
popf
scas
addr16
push
imul
adc
scas
aad
testl
test
add
inc
pop
adc
lock
scas
jmp
pop
int
fwait
jb
pop
daa
mov
push
out
and
xchg
push
lods
pusha
jmp
fmul
adc
sub
roll
gs
xorl
and
call
lcall
xor
xor
fldl
enter
or
sub
cmp
shl
cmpsb
add
xchg
mov
daa
mov
adc
rorl
mov
mov
out
stos
stos
inc
cld
xchg
jno
or
mov
fbld
cmp
mov
mov
cld
in
inc
hlt
ror
mov
ds
imul
jne
mov
sbb
shrd
xor
pop
sub
pop
jecxz
inc
aaa
push
testl
xchg
cltd
leave
aad
adc
lods
jae
in
or
dec
mov
dec
in
movsl
repz
xor
je
push
mov
imulb
dec
mov
iret
ja
xlat
sbb
test
cmpsl
mov
bound
lds
push
mov
sub
int3
lret
dec
test
mov
sub
jno
ret
xchg
lock
fmuls
cmp
pop
ret
sub
scas
shll
addb
mov
or
dec
mov
add
mov
insb
ss
mov
mov
stc
xchg
je
and
push
insl
shll
std
movsb
xor
popa
shrb
push
mov
cwtl
pop
scas
pop
icebp
and
xlat
bnd
cld
sti
or
cmp
mov
fcoms
gs
stos
aas
push
cmp
dec
shl
sub
and
mov
jbe
fwait
dec
aad
push
mov
mov
ret
rol
xchg
xor
or
in
arpl
sarl
push
cmp
and
pop
jbe
jp
mov
repz
xchg
xchg
mov
xor
xchg
lods
mov
fmuls
addr16
and
push
inc
pop
cwtl
add
icebp
push
mov
das
aam
dec
pop
imull
dec
sbb
insb
jl
mov
dec
mov
xchg
cltd
lock
inc
fwait
scas
xchg
lahf
xor
pop
inc
pushf
adc
push
inc
adc
mov
je
nop
leave
stos
fs
mov
sub
pop
repnz
jo
and
stc
ret
lcall
not
adc
dec
das
out
mov
dec
aaa
addl
pop
movsl
mov
xchg
cld
hlt
hlt
das
loopne
ret
iret
fisubl
lea
shrl
movsl
xchg
div
cld
scas
cmp
lret
out
add
xor
outsl
aam
inc
mov
frstor
xor
inc
jbe
mov
int3
loope
cmpsl
mov
or
lock
push
in
fbld
mov
insb
je
xchg
xchg
inc
add
shl
lods
outsl
add
inc
ret
ljmp
fs
out
xchg
mov
add
aam
push
xchg
lcall
xorl
ljmp
std
sbb
mov
sub
subb
stos
push
cli
fucom
fisubs
cmpsb
xor
dec
sbb
stos
mov
rep
pusha
inc
xor
pop
sbb
push
adc
scas
movsl
call
pop
loop
cmp
movsl
pusha
xchg
xor
xchg
pop
mov
xchg
loope
sbb
xchg
dec
pop
or
xchg
mov
mov
insl
sarb
cwtl
dec
decb
lods
add
movaps
sti
and
mov
fidivs
push
lret
push
xchg
loopne
arpl
add
movsl
cld
lds
mov
xor
leave
and
pusha
cmpsl
test
popf
mov
out
mov
fnstsw
pop
in
pop
je
in
adc
insb
push
pop
xchg
push
aas
mov
stos
outsl
mov
js,pn
pop
flds
and
mov
cmc
dec
and
xorl
lret
add
shl
notb
outsb
mov
pop
in
mov
mov
or
pop
outsb
out
push
scas
add
push
sahf
subb
pusha
bsf
ja
pop
loope
mov
lea
mov
xchg
fiadds
push
movsl
int3
hlt
xor
jp
lock
lcall
loopne
lahf
lods
add
ja
aad
lods
inc
clc
pop
mov
xchg
jne
sbb
clc
or
loope
imulb
pop
xchg
test
sub
lea
out
xchg
sbb
adc
dec
sbbl
dec
iret
cmpsb
or
or
ds
pop
cmc
pop
or
mov
pop
xor
mul
inc
add
xchg
lea
xor
pop
cmpsl
mov
pop
sub
js
iret
pop
jle
shlb
inc
pop
xor
push
std
scas
aad
cmp
cmp
int3
sbb
mov
mov
and
mov
fstpt
sbb
rdmsr
jecxz
cmp
popw
test
jle
fs
mov
push
jmp
in
add
cmp
adc
ss
push
jne
pop
loop
in
and
test
test
mov
mov
dec
ret
sbb
nop
cmp
mov
icebp
jae
shlb
push
fbstp
inc
xor
cmp
aam
mov
in
mov
jb
test
sbb
cmp
mov
and
jnp
mov
xor
mov
fsubrs
add
dec
or
sub
inc
and
adc
je
jnp
mov
dec
in
cld
xchg
aas
pop
lods
cmp
mov
sbb
adc
mov
lock
ficomps
out
cli
mov
stc
insl
mov
shrb
xor
icebp
xchg
inc
insl
push
xchg
inc
cmp
rolb
addr16
lea
scas
arpl
pop
jmp
xor
sbb
call
push
add
pop
call
jbe
out
lret
cltd
xchg
mov
jns
mov
sub
pop
pushf
int
cld
adc
mov
insl
push
cmpsl
dec
push
sub
and
push
dec
mov
std
enter
push
xor
jecxz
jge
sub
add
sbb
jb
sti
push
adc
push
mov
cmp
sub
pop
cmp
sub
push
pop
out
cltd
ficoml
dec
pop
lds
leave
cmp
adc
ret
iret
in
cmp
test
mov
movsb
les
lcall
ret
je
popa
dec
enter
mov
insb
jns
ljmp
aad
fcmovnu
add
jmp
dec
movsl
fwait
jg
cs
stc
ret
jl
jb
mov
lods
loop
insb
das
pop
cmp
push
andl
je
sub
fstl
sbb
inc
out
jnp
pop
xor
xor
mov
sub
mov
test
clc
subl
pop
and
cmc
add
fists
sarl
js
fimull
mov
lret
mov
push
inc
adc
das
roll
cmp
jle
pop
or
or
jp
pop
pushf
dec
dec
fnstenv
pop
pop
sub
pop
pop
adc
push
inc
xor
ss
lret
add
out
scas
jecxz
fwait
cmp
sub
lods
xchg
fistps
xchg
outsl
dec
mov
lea
loope
mov
out
xchg
push
shr
nop
aas
rcll
cmp
sbb
popa
dec
add
sbb
sub
dec
scas
out
pop
into
lret
dec
lods
cmp
jg
movsl
xor
dec
repnz
icebp
mov
out
mov
inc
call
and
movsb
lock
mov
pop
shl
adc
lahf
push
imul
xor
jl
add
pop
out
inc
loopne
cltd
push
lock
and
inc
fimuls
pcmpgtb
mov
jl
addr16
mov
in
dec
cmp
adc
in
pop
jo
dec
pop
mov
xor
call
ja
dec
cmpps
jp
addl
shl
mov
cli
jbe
jg
xor
xor
and
inc
push
sub
cwtl
mov
int3
mov
mov
pop
hlt
cld
mov
mov
xor
fistl
std
fistpll
insl
cmp
mov
push
xor
pop
stos
mov
xchg
and
pop
xchg
fwait
pop
push
jge
test
xchg
nop
mov
clc
insb
inc
sbb
hlt
fwait
inc
or
inc
aas
test
jmp
clc
ljmp
ror
lea
and
in
pop
outsb
adc
xchg
pop
dec
add
sbb
outsb
lcall
ficoml
mov
psrlq
fisubl
dec
or
pop
leave
pop
fisttpll
adc
cmc
lahf
mov
xchg
fcom
fs
xchg
inc
jb
lea
mov
xchg
lock
add
fisubl
push
cmc
bswap
mov
xor
lea
cmc
js
arpl
sub
shlb
inc
push
or
lcall
stos
out
jae
cmpsb
mov
inc
loopne
inc
jb
repnz
mov
push
vunpckhpd
fsubrl
shll
cld
cld
mov
shrb
xor
sbb
movsl
adc
dec
fsub
jbe
jmp
add
cs
pop
and
xlat
ljmp
stc
in
xor
stc
cmp
cmp
aad
xor
in
sbb
aas
inc
lahf
sbb
lock
or
rcrl
mov
insb
cmpsl
mov
roll
jnp
cwtl
repnz
cmp
inc
xchg
mul
and
add
lret
in
xchg
xor
sub
cld
and
cs
mov
mov
movsl
jno
adc
lret
add
adc
jecxz
je
movsl
sub
dec
aam
out
jne
popf
cmp
rcrl
xor
insb
mov
in
or
fs
das
pop
xor
pop
jnp
jl
cmp
inc
aad
es
cmp
clc
lds
jg
pop
popa
cmp
mov
inc
inc
pop
inc
int
repz
shll
rcr
outsl
insl
jae
daa
imul
dec
xchg
fsubrs
inc
mov
data16
test
test
adc
adc
cli
iret
mov
xchg
cld
mov
add
adc
push
mov
push
adc
xchg
ja
jns
mov
ds
xchg
neg
pushf
pop
mov
mov
es
push
inc
jmp
push
mov
out
mov
inc
dec
imul
cwtl
ljmp
negb
rclb
mov
leave
rcll
mov
xor
call
orb
out
add
mov
cmpsb
push
push
cld
mov
or
test
and
mov
xchg
pop
nopl
fcoml
fwait
lcall
push
and
sbbb
jbe
lds
loop
lahf
js
mov
jno
shrb
or
adc
sbb
xor
add
sahf
or
xor
hlt
in
xor
dec
sub
insb
mov
aad
iret
sbb
xchg
repz
pop
add
in
mov
ljmp
and
cs
out
addr16
mov
in
lahf
repnz
or
fwait
arpl
into
mov
mov
ljmp
or
pop
mov
bound
subb
mov
sbb
sbb
mov
test
lea
daa
stos
rcrl
cmp
pop
sub
mov
inc
pop
sti
in
test
pop
jo
in
jae
inc
mov
adc
sahf
mov
pop
into
js
adc
int3
sarl
add
pop
shrb
std
xor
insl
shll
pop
xlat
xlat
xchg
or
xchg
lret
mov
xchg
cmpsb
lds
add
push
xor
inc
inc
sbb
dec
lods
fcmovu
add
cs
enter
jge
sub
push
mov
adc
lcall
repnz
mov
adc
fdivrl
jbe
sub
push
mov
jnp
xchg
std
cmc
enter
mov
inc
mov
into
int3
aam
dec
mov
jl
testl
movsl
neg
cmp
dec
or
clc
xchg
ja
out
push
das
dec
ret
lret
cmc
scas
fs
mov
sbb
or
xor
inc
data16
ja
inc
iret
pop
xor
addr16
dec
popf
xor
stos
adc
insb
popa
mov
sub
sbb
scas
inc
aad
mov
loop
mov
inc
jecxz
adc
and
jmp
leave
inc
mov
cmp
divb
xor
add
adc
dec
sub
and
daa
sbbl
xchg
pushf
mov
in
cmp
imul
adcl
jb
aas
loope
rcrb
push
lahf
sbb
aas
mov
ljmp
sbbb
jbe
icebp
imul
add
add
add
adc
lea
fdivrl
insl
sbb
mov
add
insl
push
mov
inc
outsb
daa
fxch
insl
jecxz
in
repnz
cwtl
ds
jecxz
sub
sub
test
and
add
or
das
int
pop
and
ret
pop
js
mov
rcll
dec
lcall
mov
pop
lock
nopl
push
stos
mov
fcoms
dec
push
push
cs
imul
and
sahf
xor
add
fnstsw
xchg
stc
mov
into
jb
push
pop
movsl
inc
fstps
xor
cmpsl
aad
in
fildll
mov
cmpsb
dec
mov
cmp
mov
fmuls
call
ret
xchg
pop
mov
push
dec
or
ficomps
nop
jb
mov
mov
push
jo
cltd
push
adc
cmp
data16
or
mov
pop
xor
in
aam
jno
jle
clc
mov
insb
scas
out
femms
add
adc
faddp
ss
mov
jp
int3
std
subl
push
add
push
xchg
push
add
fidivl
sbb
inc
adc
test
mov
movsl
inc
jp
sahf
fstpl
mov
push
mov
fimull
repz
xchg
rolb
adc
xchg
mov
cmp
jg
movsl
std
jmp
loope
imul
popa
sub
pop
shrl
push
mov
and
add
push
outsl
cmp
lcall
push
sbb
stos
je
ret
ficoms
push
lods
loopne
cmpsb
and
sahf
pop
clc
pop
out
lret
lahf
xchg
mov
fcmovu
sbb
movntps
mull
add
or
cli
xchg
mov
inc
sbb
or
and
add
loopne
mov
aam
test
xor
test
mov
repnz
xor
fsubrl
adc
mov
sub
sub
clc
mov
push
and
lahf
aaa
ja
stos
icebp
mov
xchg
cwtl
das
orl
or
mov
mov
out
in
aad
das
jecxz
push
and
jo
and
rcr
inc
cmp
sbb
inc
bound
repnz
inc
mov
lret
fsubrl
sar
sbb
arpl
test
mov
out
rclb
icebp
lret
cmpsl
inc
loopew
sbbl
test
add
rcll
clc
jmp
pop
pop
in
mov
shl
dec
daa
mov
sbb
ret
mov
fnsave
sbb
pop
mov
ja
push
insl
xchg
aas
loop
lock
fsubr
int3
test
gs
add
xor
shll
gs
lds
imul
xor
insb
andl
shr
pop
mov
push
cmp
push
stc
cmp
loope
mov
mov
pop
in
movsl
fucomip
insl
out
push
addr16
cmp
cmp
stos
fdivs
jle
rcrl
xor
pop
pop
cmp
test
sbb
mov
pop
xor
push
mov
pop
cmp
mov
repz
icebp
dec
lods
outsb
popf
dec
sbbb
add
sarb
cmp
je
push
and
enter
or
xchg
or
iret
das
pop
lret
fdivrl
repnz
lods
push
dec
sbb
insb
sarb
sahf
nop
shrl
in
out
es
pop
cmpsb
ljmp
shll
sbb
pop
shlb
dec
pop
ss
adc
and
scas
push
lret
leave
imul
add
inc
cmc
xorl
mov
add
in
cmp
mov
inc
sub
pop
ret
stos
ss
inc
mov
cmp
into
push
ret
ja
xlat
sub
jl
mov
daa
jbe
mov
les
sahf
cmp
int3
inc
repnz
push
cmpsl
test
in
mov
mov
test
out
mov
aas
in
jno
xor
jo
nop
ljmp
cmp
pop
hlt
or
imul
sti
xor
cmp
shrl
lea
das
xchg
inc
jno
dec
push
cmp
movsb
cwtl
adc
sti
lea
pop
test
adc
jle
test
jmp
push
lods
movsb
data16
cmc
lret
add
fcoml
mov
lock
jg
in
iret
popa
push
cmpb
not
cwtl
cli
insb
jne
xlat
les
std
paddusw
cmc
xchg
cmp
shlb
lret
pop
loop
leave
jp
scas
push
int
fnstenv
test
pop
push
orb
int3
sub
dec
outsl
jno
imul
mov
mov
push
jl
adc
xor
sbb
mov
add
out
cmp
adc
into
loopne
push
popf
ss
sbb
mov
mov
clc
shrd
dec
scas
aad
mov
mov
rorl
bound
jbe
pop
imul
cmp
cmp
fsubrp
ljmp
cmp
push
mov
xor
test
movsl
scas
inc
mov
and
jmp
xlat
gs
or
imul
xchg
sbb
mov
pusha
jns
add
loopne
fwait
cmp
das
pushf
jns
mov
pushf
js
icebp
test
or
mov
mov
pop
pop
jle
xchg
enter
add
insl
xchg
jns
test
mov
sbb
nop
insl
and
cmpsb
or
fmull
shrl
mov
xchg
mov
pop
lds
push
push
mov
test
xorl
xor
dec
mov
lahf
test
or
pushf
test
hlt
subl
es
scas
add
movsb
test
popa
xchg
in
sbb
popa
push
xchg
jno
jb
dec
pop
mov
dec
repz
aam
dec
mov
xor
sti
mov
addr16
inc
addr16
or
mov
mov
xorl
mov
and
dec
push
jnp
mov
imul
sahf
mov
sub
mov
in
cmpsb
or
mov
gs
pop
shll
sub
divl
or
mov
cli
pop
cmpsl
and
push
pop
inc
mov
mov
cli
cmpsb
adc
pop
xlat
pop
lret
loop
out
pop
mov
aad
rcl
cmpb
neg
push
xlat
mull
mull
enter
xor
mov
sbb
fs
es
adc
bnd
add
outsb
loopne
lret
lock
in
sahf
test
inc
jae
fcomps
pop
xor
inc
inc
sti
add
pop
lods
mov
fwait
xlat
lea
jns
nop
js
loopne
push
repnz
lea
es
iret
mov
sahf
add
adc
jnp
enter
mov
mov
mov
test
pusha
lods
cmp
mov
aas
nop
mov
rclb
adc
rol
lods
dec
dec
hlt
divb
cmp
jns
sub
push
inc
or
mov
add
es
adc
icebp
sbb
test
dec
and
imulb
xchg
aad
lret
rolb
icebp
mov
mov
jle
leave
mov
test
hlt
push
sub
add
sub
xor
in
xor
sub
jmp
les
sbb
dec
xchg
mov
xlat
sub
repnz
inc
hlt
pop
sbb
enter
scas
pop
mov
push
cmc
lods
inc
sarb
inc
jmp
int3
cwtl
mov
jle
lret
sbb
xchg
push
js
pop
ja
jecxz
xchg
fistpl
xorb
test
sbb
add
push
lea
ds
or
mov
fwait
mov
mov
mov
mov
add
stos
mov
das
aad
pop
mov
pushf
adc
imull
jl
mov
stc
hlt
sarb
mov
mov
movsl
adc
dec
sub
xor
jne
mov
cmp
inc
test
pusha
push
mov
sbb
and
cmpsl
inc
loop
cmpb
inc
loopne
roll
lret
int3
inc
mov
rclb
in
andb
mov
shrb
loop
and
inc
adc
adcb
je
es
nop
cmp
ss
fcoml
jns
or
adc
and
push
out
stc
push
cli
pop
and
mov
mov
cmpsl
iret
out
adc
fisubrs
cmp
push
inc
xor
jl
scas
inc
sbbb
filds
loop
xlat
add
pop
aaa
pop
or
mov
lret
adc
xchg
jne
test
add
add
xchg
jp
sbb
sti
test
xchg
mov
cli
int
js
test
jae
out
in
fcmovu
aas
test
call
imul
fiadds
push
or
ffreep
jns
jnp
xor
adc
cmp
jl
jp
cld
ret
scas
jno
ret
push
dec
pop
push
mov
fisubl
push
xchg
or
sbb
lahf
jo
nop
stc
xchg
cltd
cmp
aad
mov
sbb
es
les
fs
aad
lret
subl
adc
lret
jp
popa
rcrb
enter
mov
int3
das
outsb
jno
out
mov
and
sahf
xchg
and
arpl
mov
ds
int3
mov
popa
fdivl
add
cmp
fsubrs
sbb
pop
out
inc
scas
int3
mov
xor
leave
adc
pop
lahf
nop
test
bound
jne
sahf
int3
fprem1
repnz
xchg
sbb
jmp
pop
seto
cmc
dec
xchg
fstpl
add
jg
push
imul
jnp
insb
daa
inc
outsl
sti
adc
add
push
mov
cmpsb
mov
call
xor
dec
int
sbb
xor
mov
or
std
aad
pop
fldz
lcall
add
lret
ret
repz
rclb
push
sti
add
push
xchg
outsb
jmp
dec
inc
dec
negb
mov
mov
jb
test
adc
data16
mov
js
shll
push
hlt
add
sbb
sbb
mov
jmp
lods
dec
xchg
movsb
push
imul
lea
test
nop
lods
sbb
jle
mov
jbe
pop
lea
mov
sub
and
sbb
negb
subb
dec
in
xor
mov
cmp
fldl
xor
ja
add
ret
gs
outsb
fdivrl
ret
and
pusha
dec
inc
xor
mov
sahf
hlt
aas
inc
lahf
sub
outsb
into
flds
xchg
or
fucom
ret
je
adc
lock
xor
arpl
inc
imul
into
pushf
mov
movsl
stos
pop
pop
inc
mov
lcall
std
in
inc
xor
jge
mov
adcb
mov
int
and
jp
xlat
fnstsw
data16
xchg
call
add
jbe
mov
fsubs
test
or
push
adc
lods
sub
mov
dec
fcmovnbe
sbb
insb
xor
outsl
jp
rcrb
xor
push
adc
std
sub
and
xor
mull
jno
fistpl
add
inc
lods
sbb
aad
lds
cwtl
movsl
gs
nop
fwait
sbb
repnz
js
mov
mov
gs
es
jnp
or
lcall
sub
cmp
stos
cmc
xor
insb
ret
jbe
jg
dec
add
cmp
in
pusha
mov
mov
inc
enter
rcrb
test
pop
mov
and
mov
push
test
stos
mov
loopne
ret
adc
mov
pop
loop
test
pop
in
mov
and
fidivl
xchg
lret
push
mov
mov
adc
fldcw
loopne
pop
xchg
call
cmp
cmpsb
lock
ljmp
data16
roll
jo
mov
ljmp
mov
fsubrs
hlt
fisttpl
fwait
adc
add
xor
je
push
test
mulb
cmp
pop
dec
lcall
lcall
sub
mov
cmpsb
out
add
fidivrl
fistps
push
insl
adc
pop
mov
int
jecxz
aas
jb
push
pop
xchg
mov
or
leave
das
test
cld
stos
test
leave
xor
insl
mov
idiv
pop
and
push
sbb
popa
cwtl
jo
jge
test
jmp
frstor
in
adc
xor
fsubrl
or
or
lock
fwait
stc
push
insb
push
add
bound
jo
shlb
sub
ljmp
jne
add
or
mov
push
jmp
push
mov
loopne
aam
push
mov
mov
xchg
mov
pop
cli
or
pop
daa
add
sbb
mov
int
outsb
movsb
les
lds
mov
std
mov
mov
jle
or
shrb
ret
shr
pop
cmp
imul
xor
aaa
push
loope
push
out
scas
cltd
add
or
fsts
js
jno
movl
ss
out
sbb
push
dec
jmp
mov
pop
cmp
pop
dec
pop
sub
int3
rcll
in
movsl
or
in
fistps
je
pop
in
xor
push
sahf
divb
xchg
inc
stc
pop
inc
ret
xor
add
loope
mov
jg
nop
xor
and
les
add
add
mov
dec
fsubp
jge
inc
sbb
inc
rcrl
add
lret
pop
aas
adc
sbb
dec
shrl
test
sbb
mov
jbe
idiv
xchg
xor
xor
xchg
ljmp
push
xorb
inc
ucomiss
lds
js
xchg
insl
ret
stos
in
mov
clc
les
adc
and
scas
cmpsb
es
scas
bound
mov
jmp
mov
es
inc
repnz
sub
lds
jne
cli
ja
pop
loope
loopne
in
push
insb
push
inc
inc
lds
call
fstps
sub
pusha
mov
add
fdivs
mov
or
jns
sarl
mov
xor
in
inc
lret
dec
jge
mov
xor
repnz
jno
cmpb
in
add
dec
mov
nop
frstor
mov
mov
push
xor
mov
cwtl
aas
pop
rorl
cmpsl
mov
push
mov
inc
sbb
mov
mov
dec
cli
sbb
clc
sub
shl
nop
jno
inc
into
mov
fst
pop
cmc
mov
sbb
cmp
sub
mov
aad
popa
movl
lds
push
jecxz
mov
ret
int
shlb
xchg
mov
cs
or
mov
rorl
mov
inc
xchg
repz
dec
mov
stc
pop
mov
daa
xchg
scas
jae
pop
cmp
shrb
jmp
ret
scas
scas
neg
jl
jns
es
arpl
test
dec
bnd
inc
jno
push
mov
push
test
jp
sbb
dec
mov
mov
stos
cld
je
shll
mov
sbb
enter
mov
adc
fwait
xchg
jnp
fildll
icebp
add
sbb
mov
cmpsl
cs
adc
std
add
aam
fsincos
repz
sahf
sub
shlb
aaa
les
pop
and
jmp
xchg
sub
sbbl
or
jecxz
lods
mov
iret
sbb
je
add
sub
pop
decb
pop
adc
xor
inc
insb
adc
stc
sbb
mulb
cs
in
adc
ret
jo
push
out
mov
out
mov
scas
mov
and
outsb
jno
filds
pusha
and
leave
out
les
data16
mov
mov
push
and
das
pop
sub
js
xlat
cwtl
jno
stc
xlat
or
imul
shlb
xor
sub
aaa
aad
enter
andl
jmp
in
add
add
and
loop
cld
cwtl
pop
int3
or
jle
mov
and
insl
jbe
pop
sbbl
je
add
xchg
sarl
cmp
lret
mov
js
sbb
les
stos
pop
inc
push
aaa
push
aad
daa
cmp
fwait
xchg
lock
xchg
push
decb
mov
jnp
rorl
xchg
push
lods
xor
mov
xchg
stos
mov
data16
and
orl
aaa
gs
stos
pop
stos
sarl
addr16
int
shlb
daa
imul
mov
pop
loope
mov
inc
cmp
xor
aam
pop
dec
jle
pop
aad
movsb
cltd
jne
js
mov
mov
movsl
shll
xchg
mov
adc
ss
data16
mov
stc
and
or
xchg
push
dec
je
mov
jge
imul
bound
movsl
jbe
mov
fsts
jg
mov
mov
mov
add
popa
dec
int3
icebp
add
mov
push
ret
cmpsb
ljmp
rcr
and
lods
icebp
pop
lods
popa
mov
mov
and
mov
xchg
push
cmp
jge
cwtl
ret
imul
jmp
cmc
fdivrp
or
push
jle
or
pop
inc
insl
iret
stc
inc
rcr
mov
outsb
fists
or
mov
lret
lods
push
ret
cmp
aad
subl
ficompl
mov
mov
add
push
sbb
daa
sub
repz
adc
imul
push
xchg
insb
arpl
sub
fwait
push
inc
sub
pop
loope
adc
shlb
sbb
jbe
icebp
cmp
daa
mov
imul
cmp
loopne
xchg
mov
test
insb
jno
mov
ficompl
push
rcrb
pop
test
dec
adc
dec
es
std
aam
neg
sbb
movsl
mov
insl
sbb
push
jp
dec
int3
adc
filds
push
data16
ficoms
inc
dec
mov
divb
adc
data16
mov
ljmp
add
dec
in
add
pop
xor
add
or
fldln2
lcall
cmp
les
bound
sbb
push
jmp
addr16
hlt
sub
push
lcall
repz
jmp
fmuls
popa
push
out
inc
int3
out
ss
cmpsl
out
mov
sub
push
jp
mov
aad
sbb
jl
cmp
inc
sub
adc
idivb
rcll
lret
dec
lret
mul
push
lret
pop
sbb
cmp
frstor
add
pop
fimuls
inc
outsl
mov
ljmp
sub
add
fs
in
and
in
sub
les
andb
std
imull
mov
pop
es
dec
repnz
mov
jb
inc
push
adc
aaa
or
rolb
gs
out
pop
jmp
test
rol
jnp
inc
dec
pop
sbb
dec
xor
sbb
xchg
push
lret
push
sub
cmpsl
mov
sub
dec
stc
mov
jae
negl
cs
mov
imul
and
insb
fs
mov
push
stos
iret
cmc
cld
mov
cwtl
pop
mov
repz
mov
fwait
les
sarl
stos
ljmp
and
loopne
arpl
adc
fldenv
pop
loope
xchg
enter
inc
push
cmpsl
inc
dec
icebp
ljmp
xchg
mov
fwait
mov
add
jns
pop
ret
pop
ljmp
movups
cmp
shl
aaa
push
in
lods
sbb
scas
push
xor
jle
or
frstor
inc
cmp
ljmp
adc
in
push
ret
fwait
and
xor
test
xor
mov
push
push
ret
sub
mov
mov
test
dec
dec
mov
jbe
inc
daa
pop
sbb
mov
jp
pusha
jl
addb
cltd
jo
pop
cmp
push
in
nop
testb
sbb
and
movsl
push
les
xchg
sar
cmpsl
mov
adc
or
lods
xchg
add
outsb
dec
popf
enter
mov
push
xor
xor
xchg
std
push
add
inc
sub
ret
pop
and
xchg
in
fidivs
ret
xor
jg
xor
inc
push
mov
lret
faddl
ja
xor
dec
sub
lods
int
xchg
lahf
xchg
lret
test
inc
stc
into
jns
push
xchg
leave
repnz
jno
outsl
lea
dec
push
jg
cltd
lret
adc
pop
pop
mov
in
mov
mov
and
cmp
add
out
mov
repz
push
pop
ret
aam
sbb
shrl
fsub
cmp
or
mov
lock
inc
repnz
cs
andb
test
or
les
and
push
into
jno
ret
daa
adc
fwait
xchg
adc
dec
mov
in
mov
sbb
fdivrs
or
fisubl
push
pop
sbb
test
cmp
cmp
push
movsl
xor
daa
das
mov
sub
lret
rcrl
lcall
movsl
icebp
jnp
sbb
xchg
stos
sbb
push
mov
jne
hlt
or
arpl
jo
inc
stos
add
mov
pop
adc
jg
dec
stc
mov
insb
and
test
dec
dec
and
xor
jl
aad
sar
inc
fwait
mov
xor
adc
rcrb
ficomps
xchg
xlat
mov
push
jmp
jne
jl
aad
adc
sarl
add
out
pop
adcl
push
cmpsl
movl
pop
dec
pushf
mov
xor
jmp
jo
jecxz
push
sbb
int3
test
and
outsl
and
lods
xor
cmp
jbe
cmpsl
repz
sub
loope
fs
out
jg
scas
lcall
inc
adc
outsb
jb
mov
inc
xor
pop
repz
jo
or
push
popf
les
stos
lds
ficoml
push
test
enter
scas
jge
add
andl
dec
mov
xlat
lods
imul
cmp
dec
push
push
in
mov
xchg
push
lcall
mov
inc
adc
fisttpl
jl
sbb
xchg
nop
and
aam
cld
add
jbe
aam
fidivl
mov
pop
lret
mov
nop
dec
jle
mov
adc
dec
add
push
pop
stc
pop
add
cltd
mov
sbb
push
cs
stos
cwtl
arpl
add
dec
pop
cmpl
sub
xchg
xchg
ret
mov
int3
jae
sub
addb
cmp
adc
adc
decb
cmp
mov
orb
popa
pop
push
fcompl
or
repnz
cmp
inc
adc
and
dec
ds
data16
sub
cld
mov
movsb
pop
fadd
mov
inc
mov
mov
add
jne
xor
pop
fdivs
pop
and
scas
test
push
std
inc
in
add
movsb
aam
lods
cmp
pusha
or
sarb
lods
jns
mov
bound
into
push
leave
dec
mov
iret
int
scas
cwtl
dec
sub
cmpl
push
sub
fnsave
loop
int
and
inc
pusha
push
clc
lock
bound
lea
xor
dec
cli
sub
sub
inc
or
cmp
dec
fcompl
sub
mov
dec
fstpt
xchg
mov
ret
dec
push
sub
add
outsb
sbb
icebp
pop
jle
jnp
adc
orb
and
es
in
stc
mov
fucomip
data16
lret
sahf
cmp
and
inc
xlat
shll
sub
dec
shll
fistpll
mov
roll
aaa
daa
repnz
fidivl
and
xor
jle
repz
push
hlt
repz
and
subb
dec
vpaddusb
mov
or
loop
sbb
and
sbb
inc
push
movsl
mov
aad
pop
mov
ret
mov
jb
mov
pop
jmp
and
pop
lcall
data16
lret
jae
or
pop
lea
movsb
daa
ja
ret
dec
xor
pop
lock
fistpl
lahf
cwtl
stos
mov
mov
lahf
mov
add
std
iret
test
ret
jns
jl
xchg
jge
sahf
cmpl
xchg
push
cmc
push
mov
sti
jmp
shll
mov
jecxz
fnstenv
push
mov
enter
mov
mov
dec
imul
xchg
sub
or
adc
mov
mov
cmp
stos
mov
jno
pop
jg
add
shll
mov
fs
sub
xchg
mov
scas
xor
dec
pop
filds
dec
out
cmc
or
pop
enter
cld
adc
sbb
gs
lahf
jle
xchg
aas
cmp
inc
jge
test
or
in
das
fnstenvs
xlat
or
fiaddl
mov
cmpsb
test
js
dec
adc
cmpsb
std
add
ja
addl
rcrl
cmpsl
dec
jp
mov
int
mov
xchg
out
movsb
vpshufd
cmpsb
pop
stos
pop
mov
test
sbbb
lret
jp
loope
and
dec
push
mov
xor
lods
ror
sbb
in
add
leave
or
push
nop
add
mov
in
loopne
sbb
cmpsl
xchg
add
hlt
jno
mov
lret
int3
push
lods
fcoml
fistl
push
into
lods
mov
out
and
adc
cli
hlt
int3
xchg
ret
out
add
pop
sbb
ljmp
addl
xchg
mov
adc
jg
out
rcr
fisubs
mov
pushf
aas
jb
mov
jmp
mov
fnstcw
jge
sbb
cmp
mov
push
push
push
xchg
sbb
sub
fwait
mov
outsl
push
lret
push
inc
outsb
js
in
mov
shl
xor
sbb
adc
call
xchg
and
pop
lds
xchg
or
mov
jecxz
lret
mov
xchg
sahf
dec
shrb
jle
mov
mov
shll
shll
fcomps
loop
sub
mov
les
adc
out
fucomi
lahf
jle
ror
push
mov
dec
pop
dec
inc
mov
int3
lock
cmp
or
xchg
jae
add
jge
test
jmp
xchg
nop
scas
cs
iret
loop
sub
subb
cmp
sbb
movsb
jg
outsl
cmp
scas
rcrl
icebp
dec
stos
cmp
inc
push
adc
ss
inc
pusha
ss
jg
or
pushf
jg
mov
fisubs
mov
fstps
push
push
jnp
cmp
add
jmp
or
mov
dec
push
mov
repz
sbb
cld
push
xchg
shlb
aad
imull
je
dec
mov
cmpsl
ja
jnp
xchg
sbb
dec
jle
neg
ret
mov
or
mov
jg
in
jo
imul
pop
pop
push
sub
popf
or
data16
dec
inc
data16
pop
sbb
cmp
lret
jmp
push
and
add
jecxz
mov
gs
insl
out
jmp
test
mov
adc
jno
mov
or
nop
scas
jb
mov
dec
iret
in
sbb
mov
dec
ret
dec
xchg
cmpsl
into
push
pop
enter
mov
iret
pushf
mov
sub
fwait
add
decb
mov
shrl
mov
dec
sbb
push
addr16
and
xchg
lods
enter
or
inc
cmc
out
xchg
jmp
jmp
add
or
into
adc
into
insb
popf
push
hlt
jle
xchg
push
inc
jp
sbb
cmp
enter
mov
pop
out
daa
in
add
sbbl
or
cmp
xchg
jge
sub
popf
inc
mov
das
cmp
sbb
push
jo
in
xchg
loope
jb
in
pop
mov
mov
xor
inc
xchg
icebp
ret
jmp
sarb
shrl
dec
lret
dec
ds
xchg
test
out
out
fisubrl
lods
xchg
test
pop
jge
mov
push
adc
stc
adc
rorl
pusha
fistpll
dec
es
iret
inc
pop
inc
lret
in
or
push
aas
sub
xor
add
add
xchg
es
pop
dec
ja
mov
int3
test
mov
adcb
mov
adc
sub
xor
sub
test
sub
pop
mov
sbb
mov
inc
mov
add
mov
jbe
aaa
mov
in
xchg
sbb
add
dec
loopne
add
cmp
cld
inc
xchg
repnz
adc
lahf
aas
xchg
gs
mov
jo
xor
fnstcw
mov
fsubs
add
sub
shll
adc
mov
movsb
push
cmp
int3
xor
sub
cmpsl
sahf
mov
ftst
dec
xchg
and
jae
or
push
mov
mov
push
cmp
adc
enter
test
push
push
jp
and
repnz
int3
cmpsl
adc
cmp
jl
in
imul
cmp
ljmp
fnstsw
push
movsl
leave
inc
xchg
subl
movsl
icebp
lock
lret
std
outsb
das
test
mov
out
push
int3
notl
or
bound
ss
clc
test
jp
arpl
retw
mov
jp
lock
mov
sub
mov
aad
dec
lret
push
nop
fcomps
and
mov
pop
subl
adc
mov
clc
push
pop
sub
in
or
sbb
std
jmp
movsb
aas
dec
push
filds
pop
mov
and
movsl
into
mov
sbb
ljmp
sbb
mov
popf
push
loopne
into
xor
adc
test
jg
imul
pop
sbb
xadd
push
aas
cmp
aad
lret
dec
repz
lea
repnz
or
jns
mov
out
ljmp
xchg
cs
add
add
push
xlat
movsl
cmp
pusha
stc
std
mov
add
mov
aam
repz
jmp
xchg
cmp
cwtl
dec
aas
jo
lds
adc
jne
inc
jecxz
lods
lret
hlt
ljmp
xorl
push
mov
mov
cmp
sbb
mov
jne
push
add
popa
add
aas
inc
add
scas
mov
je
mov
les
mov
test
imul
scas
sub
push
jne
mov
scas
jae
sub
xchg
subl
mov
inc
xchg
roll
jmp
or
add
cmpsb
out
cld
pushl
inc
push
dec
jmp
sub
lret
sub
jge
adc
push
sti
jmp
pushf
and
icebp
mov
add
movsl
aad
adc
mov
cmpsb
xchg
xchg
dec
sub
int
in
mov
pop
or
xchg
mov
pop
mov
leave
jbe
mov
cmc
clc
bound
gs
sbb
sahf
pop
leave
mov
ret
xor
xchg
inc
je
out
subb
outsl
mov
stos
movsb
or
cwtl
testb
and
and
gs
movsb
cli
test
pop
xchg
jmp
pop
xor
mov
cmpb
repz
mov
pop
xchg
dec
dec
lret
pop
and
aaa
rorl
in
ds
cmpsl
cmp
aad
jl
mov
data16
mov
push
and
jae
testl
les
lahf
xchg
mov
ficomps
xor
pushf
cs
dec
sahf
cmp
sahf
test
pop
scas
das
into
in
xor
cwtl
push
push
xor
adc
pop
jge
push
jbe
seto
cmpsl
mov
iret
mov
addr16
dec
addr16
sbb
mov
mov
les
out
sbb
pop
sarb
and
push
fstpt
mov
sbb
mov
mov
aaa
test
adc
testb
adc
scas
aad
pushf
or
xor
imul
dec
out
xor
cmp
add
mov
xchg
dec
jmp
ret
mov
aaa
pushf
jmp
cld
push
outsb
pop
jecxz
lahf
sub
icebp
mov
stos
fldcw
into
dec
gs
cmp
mov
loop
jo
and
xchg
xchg
sti
mov
test
in
out
ret
jle
fs
into
xchg
xchg
jg
or
push
pop
mov
cmc
xchg
push
cli
add
sbb
xchg
clc
cmpl
sarb
add
dec
mov
vcvtusi2sd
rcr
jnp
fldl
dec
dec
adc
xchg
mov
cmpsb
sub
add
sbb
cmpsb
sbb
scas
or
aad
xchg
aaa
fnsave
xor
adc
les
cmc
nop
test
push
pop
negl
in
adc
adc
inc
mov
mov
negb
icebp
nop
dec
mov
int3
cmpsb
cmp
inc
xor
les
jp
push
xchg
or
jbe
andl
inc
outsl
pop
push
or
mov
scas
mov
sub
das
or
data16
test
xor
out
mov
ret
ret
aad
ret
jp
sahf
mov
sbb
in
and
pop
xor
pop
lods
jns
lods
das
jp
sub
inc
mov
and
pop
jbe
outsb
mov
xlat
pop
pop
cwtl
inc
pop
mov
or
out
dec
icebp
cli
push
or
or
sub
jnp
mov
jl
jnp
rclb
imul
mov
mov
stos
jbe
xchg
movsb
inc
adc
jns
inc
imul
cmp
cmpl
xchg
push
shlb
flds
lcall
xor
mov
cld
aam
test
pop
sub
sti
jmp
pusha
dec
test
lods
fidivrs
jbe
sbb
orb
mov
int
fs
pop
xchg
jbe
cli
mov
cmpsl
es
add
push
add
jne
dec
aaa
loop
jp
test
sbb
mov
jo
mov
std
pop
add
pop
jns
adc
scas
jb
mov
jle
loop
pop
adc
fsubs
lock
adc
sub
popa
xchg
cs
push
and
or
leave
lds
ja
sti
or
pop
or
xchg
jnp
sbb
rcrl
cmp
xchg
fisubrl
ds
repz
sbb
fmuls
in
jbe
adc
adc
cld
push
loop
and
iret
xchg
mov
add
cld
mov
into
jecxz
loop
lods
lock
leave
dec
scas
and
or
mov
pushf
cmpsb
sbb
pop
pop
icebp
in
cmp
adc
xor
or
xor
add
mov
push
inc
mov
push
xchg
movsl
aad
cmp
imul
xchg
test
rcrb
add
sbb
loope
ds
stos
add
xor
mov
mov
addr16
mov
inc
xlat
and
inc
lret
sbb
inc
adc
sahf
pop
ret
add
mov
hlt
andl
int3
push
dec
aad
movsl
jle
jp
sti
xor
lock
mov
aaa
inc
sub
mov
call
mov
xor
ficoms
repnz
add
bt
pop
inc
mov
jmp
add
mov
loopne
mov
stos
push
cs
sbb
fisubrs
inc
xchg
push
addr16
addr16
jmp
xchg
inc
call
addl
int3
shll
loope
push
xor
call
fs
or
dec
call
pop
rol
lods
movsb
cwtl
rorl
icebp
fadd
inc
movntq
out
or
xchg
leave
mov
ret
test
sub
cmp
ss
push
es
and
sub
xor
enter
sbb
je
clc
pop
push
iret
les
mov
jnp
dec
loop
fdivr
sub
mov
mov
aam
adc
mov
push
insl
scas
pop
ret
or
packsswb
ss
push
movb
jmp
popa
dec
mov
aaa
jo
fdivl
nop
adc
push
cmp
ljmp
outsb
mov
sub
adc
adc
pop
into
xchg
dec
jae
daa
xchg
pop
xlat
pop
popa
out
mov
adc
out
loop
and
mov
xchg
movsb
aad
sub
popa
cmp
mov
mov
out
sbb
jp
add
inc
pop
pop
mov
pushf
rcll
sahf
popa
mov
cmp
push
fmull
loopne
cltd
shr
fldcw
cwtl
lahf
add
ds
sar
push
icebp
push
cmp
inc
mov
adc
sub
cli
dec
xchg
mov
les
xchg
mov
repnz
and
mov
push
add
xor
jbe
xchg
sbb
in
or
mov
mov
ljmp
jl
lret
das
mov
mov
into
jg
sub
scas
movsl
xlat
mov
shll
popf
mov
loop
mov
push
icebp
xlat
cltd
aaa
xchg
add
imul
out
fmull
sbb
inc
jae
or
pop
mulb
push
aas
mov
orl
jnp
jle
dec
ret
xor
dec
shlb
or
sbb
pop
aam
js
push
es
inc
in
pop
fnsave
jl
into
mov
mov
dec
inc
xchg
mov
ret
and
dec
push
cmp
inc
scas
repz
xchg
mov
xchg
lock
gs
and
test
das
jmp
or
addr16
mov
mov
cmp
or
pop
je
inc
daa
adc
pop
push
aaa
test
sub
xchg
jge
es
sbb
mov
lods
mov
push
jo
xlat
adcb
sbb
mov
sub
loope
mov
push
jg
mov
lds
loop
pop
int3
inc
xor
aam
mov
enter
pop
mov
sub
test
cmpsl
rcr
add
cmpb
cmp
inc
mov
mov
stc
in
push
add
ds
xor
and
scas
je
testb
inc
jns
mov
inc
jge
push
fs
xchg
fcom
rcr
mov
mov
mov
xchg
shll
cmc
ret
lret
pop
lock
xchg
ljmp
fsubl
mov
fbld
mov
insb
or
data16
stos
hlt
and
dec
jne
mov
xlat
xchg
loop
jge
das
inc
and
sub
test
imul
adc
mov
scas
inc
mov
xor
fiadds
movsb
xor
call
xlat
cwtl
sub
movsb
jge
mov
cwtl
icebp
stos
dec
sub
adc
or
cs
cld
movsb
dec
adc
cmpsb
jbe
fcmovbe
and
cmp
enter
xchg
jge
mov
dec
jle
movsb
push
lods
leave
out
loop
mov
dec
test
inc
mov
push
add
filds
dec
test
ja
outsb
aas
imul
imul
adc
dec
pop
jne
mov
xchg
mov
mov
cmp
outsb
dec
popa
xor
imul
aad
test
ss
xchg
jecxz
mov
or
xor
nop
into
pop
mov
xor
add
addl
adc
mov
enter
loopne
mov
xlat
imul
add
aad
pop
ret
loopne
das
rorl
mov
xor
mov
das
fsub
test
outsl
mov
aaa
cltd
daa
jno
daa
arpl
lcall
out
repz
test
push
mov
clc
mov
stos
popa
and
xor
inc
testb
es
sti
arpl
lea
iret
or
inc
cmp
push
hlt
mov
scas
out
pop
ljmp
xor
stos
sub
scas
loopne
sbb
xor
xchg
mov
out
xor
jmp
push
cmp
ja
xchg
bound
imul
sub
dec
push
pop
pusha
cmp
and
mov
xchg
stos
shlb
inc
sbb
enter
int
mov
data16
pop
movsb
imul
xchg
and
push
pop
shlb
jns
mov
popf
pop
inc
mov
xchg
mov
xchg
scas
add
cmp
cld
jle
lcall
test
mov
jg
mov
in
inc
sbb
dec
clc
fwait
inc
cld
es
in
outsb
cmpsb
xor
call
shrb
popf
dec
negl
dec
cmpsl
push
jecxz
ret
mov
out
jecxz
xor
xchg
ja
call
jb
fxtract
pop
rcr
cmp
pop
add
xchg
enter
hlt
cmpsb
jecxz
lea
xchg
jb
sti
adc
lea
fdiv
mov
cltd
iret
lock
and
leave
push
pop
je
jne
dec
js
imul
sbb
mov
test
mov
cltd
xchg
push
or
fisubrs
mov
ja
lods
clc
fisttps
adc
es
sbbl
or
cmpsl
imul
xchg
ja
push
ja
les
fdivs
jae
ss
sub
in
mov
daa
xor
pop
cmp
or
push
mov
call
fisttpll
shll
xor
push
fisttpl
cmp
mov
inc
jmp
jae
cli
movsl
test
loop
sar
cltd
std
sub
daa
push
in
adc
dec
jg
rcrl
into
adc
xlat
mov
jl
divb
jb
inc
sub
mov
cltd
in
push
leave
lcall
inc
jmp
ljmp
in
in
je
lret
jmp
adc
lds
xor
stos
test
add
into
jne
out
es
test
mov
movsw
popl
xor
int3
sbb
dec
sub
cmp
dec
cmp
fstl
test
pop
hlt
into
jbe
mov
cmp
into
inc
lahf
push
or
movsb
mov
das
shl
orl
addr16
mov
jnp
cmpsb
addb
jecxz
int
pop
and
mov
dec
sub
mov
jno
pop
adc
in
aaa
mov
pop
out
fdivrl
cmp
push
out
icebp
frstor
xchg
adc
cmp
fstpl
sbb
sti
and
mov
popa
test
pop
adc
push
pop
pop
mov
adc
inc
fistpl
lret
adc
xchg
iret
movsl
pop
sbb
and
test
sbb
faddp
mov
push
aad
imul
scas
cmp
push
xchg
add
and
cli
in
bound
push
adc
jp
sub
push
lods
lock
loop
pop
popf
addr16
cld
xchg
aaa
jmp
aam
adc
out
jo
cmp
mov
pop
out
mov
fsubrs
mov
insb
popf
mov
mov
cmp
cs
ja
cmp
push
pop
lret
mov
mov
push
xor
cwtl
add
add
add
mov
cmp
jmp
cld
je
sub
mov
inc
jg
loop
nop
mov
pop
movsb
lds
cmc
mov
fnstcw
jnp
sub
or
mov
push
add
bound
pop
daa
jecxz
mov
addr16
add
or
mov
icebp
insl
call
jmp
sbb
xorb
iret
or
fucomi
addr16
repnz
cmp
pushf
pop
icebp
push
jnp
push
rcpps
loopne
stos
push
cmp
stos
hlt
xchg
loope
cmp
sbb
test
xchg
or
cmp
fcoml
push
ljmp
rorb
and
shlb
xchg
mov
xchg
mov
scas
gs
test
jae
push
push
imul
mov
pop
mov
andl
enter
popf
push
mov
cmp
test
mov
inc
pop
pusha
mov
ljmp
pop
xchg
xor
cmpsl
mov
aaa
loop
cmp
jmp
adc
mov
ja
mov
ds
add
xchg
mov
mov
out
pusha
fisubl
test
jno
inc
lds
hlt
arpl
pop
sbb
andb
adcl
sbb
clc
fwait
push
dec
push
xchg
cmp
popa
jo
adc
pop
mov
rorb
ror
idivl
arpl
xor
xchg
pop
aam
inc
into
ljmp
inc
js,pn
sub
ljmp
adc
xchg
xor
pusha
add
inc
push
std
pusha
imul
lret
pop
push
mov
lret
sahf
sahf
mov
and
ja
lea
and
add
clc
jecxz
test
or
shl
mov
shrl
dec
adc
push
loopne
leave
xor
adc
mov
cmp
pop
shl
mov
lret
pop
lahf
nop
mov
hlt
cmp
push
push
xor
rcll
cltd
into
les
push
xchg
xchg
gs
fisubrl
imul
outsl
jae
sarb
shrb
mov
add
xchg
push
mov
xlat
insl
mov
js
lds
inc
loopne
pop
pop
out
jo
mov
push
xor
mov
flds
push
jnp
ss
mov
out
jp
aaa
stc
stos
repnz
mov
test
dec
mov
inc
mov
mov
loop
jb
push
cltd
stos
pop
jo
push
fs
mov
jp
mov
mov
fnsave
or
outsb
dec
dec
sbb
pop
mov
ficoml
jl
jmp
cld
out
call
or
stos
dec
cmp
enter
push
lods
jnp
xor
test
das
xchg
das
dec
and
xchg
loope
stos
aas
cmpsl
popa
sub
push
mov
adcb
jo
mov
cltd
insl
loope
cmp
mov
jns
jl
cld
lds
xchg
adc
mov
jl
and
lods
adcb
xchg
ss
mov
cmp
pop
mov
stc
cmpsb
push
inc
inc
fimuls
or
dec
test
and
in
xchg
outsb
adc
xor
pop
mov
loopne
add
and
clc
insl
lahf
push
ljmp
fsts
sbb
lret
mov
jno
insl
outsb
mov
leave
jle
push
in
fcmovbe
mov
jno
mov
test
mov
cld
mov
popf
adc
in
push
fistpl
das
shlb
or
pop
pop
lods
test
ret
pop
pop
pop
pop
ds
aas
loop
dec
xchg
inc
ror
adc
adcb
jg
mov
lods
pop
imul
jno
imul
notl
mov
add
mov
mov
cwtl
imul
pushf
ds
aaa
xchg
add
inc
lods
mov
repz
cmpsl
pushl
addl
sbb
xchg
xchg
push
or
dec
jmp
stos
icebp
xor
fisttps
jecxz
or
cld
cmp
movsl
gs
adc
int3
les
in
push
mov
call
iret
lcall
inc
sub
jbe
adc
out
adc
inc
xchg
jne
ficomps
mov
inc
icebp
addr16
stos
test
negb
pop
mov
jecxz
push
or
stos
sbb
adc
adc
testl
pavgb
push
xor
add
jp
insl
and
loop
mov
add
popf
add
outsb
dec
push
fmul
imul
sub
mov
pop
mov
mov
sarl
in
in
cmp
push
sbb
sbb
les
popa
iret
pop
lahf
dec
insb
adc
add
jo
scas
fisttps
in
int
lcall
lock
fs
roll
adc
cld
jae
push
cmpsb
fwait
sbb
and
pop
lcall
dec
aad
push
pop
sbb
leave
dec
sbb
xchg
mov
mov
scas
iret
mov
sub
shlb
stos
xor
out
stos
lods
sahf
mov
lods
jne
in
mov
mov
push
out
ljmp
dec
push
popa
inc
mov
xchg
cli
mov
adc
mov
jb
add
push
pop
cmp
push
rol
add
insb
out
mov
adc
adcl
pop
in
lea
addr16
inc
mov
lods
push
sub
mov
cltd
and
stc
add
mov
negl
jnp
cmpsl
jge
add
cmp
shll
add
fs
inc
nop
lock
pushf
lods
in
psubb
xchg
mov
adc
aad
ljmp
push
test
mov
rclb
sub
pop
or
fnsave
popa
js
out
push
dec
inc
jb
cmp
push
aam
pop
push
rcrl
cwtl
inc
jle
inc
xlat
and
sub
into
and
pop
pop
int
jl
int3
cld
jo
sahf
pop
sbb
rolb
xchg
ret
ja
push
pop
stos
inc
push
daa
fsubp
adc
sbb
insb
rorb
xchg
jbe
cmp
dec
mov
xlat
iret
or
vmread
xchg
shlb
std
ret
js
test
mov
sti
adc
push
ja
lret
dec
ror
inc
stc
add
lcall
idiv
and
or
mov
icebp
adc
in
or
cmp
popa
mov
jle
mov
cld
mov
pusha
nop
mov
sub
inc
and
ret
mov
xchg
xor
movsb
cmp
outsb
lods
test
movsb
dec
and
aas
mov
fisttpl
sarb
in
cmp
shlb
repnz
xor
daa
js
hlt
inc
scas
ret
xor
push
cmpsb
cs
dec
jl
sub
test
or
stos
inc
rcr
dec
in
ja
mov
adc
adcb
pop
mov
sbb
jne
xor
push
ds
xor
xchg
sbbl
shl
fisubs
out
loop
push
popf
push
subb
ret
add
sub
outsb
daa
pop
aam
je
out
pop
daa
mov
mov
scas
into
adc
and
fidivs
rorl
cmc
jo
fdivrs
loopne
push
add
stc
mov
in
rorb
pop
mov
jnp
jne
data16
sti
inc
fdivl
pop
adc
pop
lods
cwtl
mov
xor
pop
das
pop
mov
shlb
dec
mov
pop
out
call
rorb
insl
pop
mov
mov
imull
xor
insl
sti
and
lret
das
xchg
xor
stc
mov
inc
scas
dec
cmc
lds
inc
xchg
int3
mov
fnstcw
inc
xchg
lret
insb
leave
xchg
push
xchg
xchg
stc
xchg
rorb
movsl
pop
ds
pop
pusha
icebp
out
sub
inc
sub
cmp
pop
call
lret
imul
testb
jmp
js
in
loope
pop
gs
popa
or
or
iret
dec
jg
jecxz
pop
insb
testl
repz
das
jmp
sbb
int
loope
mov
mov
shl
jg
jne
rcll
data16
mov
push
adc
push
out
cmp
stos
leave
js
dec
push
loope
lods
hlt
sbb
popa
xor
mov
loopne
sbb
bound
rep
ret
int
pop
jbe
imul
add
ljmp
ja
icebp
add
jl
test
jmp
and
xchg
repnz
xor
cmp
loopne
enter
xor
pop
lds
xchg
mov
sar
pop
dec
loope
mov
sbb
xchg
icebp
cmpsl
sbb
dec
mov
aas
in
push
push
fwait
lret
xor
das
dec
sub
inc
repnz
push
push
icebp
insb
jl
and
mov
xchg
test
sarl
jne
orb
sub
push
sub
shl
cmp
lods
cltd
mov
mov
adc
dec
xor
andb
jmp
sub
push
or
sbb
pop
cld
push
rcl
cs
lret
sbb
cwtl
fdivrl
push
sbb
cmpsl
adc
cmp
test
test
mov
push
sub
test
xor
jbe
je
pop
sbb
mov
jb
xchg
fiadds
and
out
mov
imul
aaa
and
mov
mov
push
ljmp
and
lea
stos
or
jl
pop
insb
push
sti
ffree
in
adc
xor
dec
lds
ja
dec
cmp
sbb
setl
aaa
cmp
cmp
ja
sub
mov
push
push
loop
jl
loope
pop
cmpsb
popf
hlt
adc
adc
mov
cs
adc
fcom
out
fcomps
in
add
shr
dec
xchg
mov
mov
loope
outsl
sub
jmp
fmul
push
mov
push
mov
jne
mov
mov
stos
aaa
mov
lea
mov
xchg
cmc
pop
pop
cmp
popf
imull
adc
or
lds
sbb
arpl
and
pop
iret
sub
in
scas
adc
popf
fisubs
cmp
lock
clc
xchg
jo
loopne
sbb
adc
and
cli
in
fs
mov
repz
push
xlat
mov
icebp
xor
movsl
push
lea
sub
rcrl
mov
xchg
sbb
dec
jbe
add
fcomps
hlt
push
pusha
xor
loop
cmp
cmc
mov
dec
sbb
cmpsl
mov
bound
popf
sbb
jmp
sbb
in
add
cmp
jp
arpl
dec
nop
shll
and
sub
je
lock
into
mov
inc
aas
fiaddl
adc
sahf
lods
mov
int3
mov
fmull
pushf
cli
sbb
pop
lds
in
push
rol
cmp
mov
ss
xchg
mov
repnz
addb
and
loope
inc
stos
aam
arpl
jns
pop
mov
adc
out
test
lcall
lea
lret
je
pushf
mov
adc
fdivr
cld
mov
cmp
sub
jg
in
mov
mov
out
sysexit
aam
sub
fwait
mov
sub
push
and
adc
pusha
sahf
add
addr16
call
push
mov
insb
in
aas
insl
sub
out
xor
jb
and
lcall
mov
jp
das
or
cmp
insb
inc
xchg
jnp
imul
xor
adc
xchg
out
bnd
iret
test
jge
fcompl
or
xor
jmp
seto
mov
xor
jae
jle
mov
mov
or
mov
das
adc
jno
dec
xchg
mov
xor
inc
cld
sbb
jl
cmp
xchg
jae
pusha
aam
push
das
xor
sub
mov
and
stc
and
push
jnp
fldenv
mov
jb
lea
mov
sub
push
push
inc
les
push
daa
cmp
ljmp
ds
and
push
sbb
or
sbb
je
pusha
loope
push
enter
fists
mov
mov
pop
pop
or
sub
hlt
fs
push
idivl
sub
push
sub
xor
std
mov
lock
xchg
mov
in
xor
jmp
loop
mov
xchg
and
inc
rcr
ja
xchg
jg
mov
adc
andb
push
push
mov
sub
mov
test
data16
in
pop
out
cmpsl
push
ret
sbb
sbb
test
adc
dec
dec
sbb
cltd
cmpsb
pop
das
push
cmpsb
fsts
sub
mov
negl
inc
mov
ret
leave
add
adc
mov
add
ljmp
inc
stc
mov
sahf
mov
pushf
pop
xlat
push
pop
ja
sub
in
sbb
jle
orb
or
or
and
in
cli
scas
and
outsl
mov
mov
stos
push
sub
sbb
push
push
in
jg
mov
pop
xor
aam
xchg
jg
sub
dec
push
dec
in
mov
pop
jle
jmp
mov
sbb
lret
stc
push
ret
sti
pushf
xchg
pop
cmc
xor
pop
mov
push
xchg
lea
push
mov
push
push
sbbl
in
orl
ret
sbb
dec
sbb
lahf
add
stos
das
dec
outsb
cmp
hlt
xor
sbb
sbb
mov
pop
jl
jmp
sub
into
fnstsw
jg
pop
or
fs
mov
push
push
mov
xchg
scas
lcall
adc
lea
dec
cmpb
sub
push
xchg
lods
sub
dec
stc
jns
leave
mov
insl
test
sbb
insl
jmp
popf
or
cmpsb
adc
add
int
pusha
inc
inc
adc
ss
lds
jl
pop
pushf
xchg
or
sbb
pop
test
shll
ret
in
add
hlt
push
push
adc
out
lods
lods
mov
mov
lds
ds
leave
sub
push
in
jns
fwait
xchg
mov
jnp
cwtl
ljmp
in
scas
and
inc
and
add
pusha
out
sbb
test
pop
repnz
mov
pusha
mov
cwtl
pushf
pop
repnz
adc
rdmsr
sub
jge
mov
test
aam
xchg
in
xor
mov
xchg
imul
fs
inc
cmp
mov
inc
mov
dec
mov
push
cmpsl
lret
insl
fstpt
aaa
js
mov
jp
ja
cmp
and
xor
inc
fsub
xor
add
mov
lcall
mov
out
or
into
or
fimull
aaa
shll
mov
jo
out
mov
adcb
pop
aas
lret
xchg
cli
sbb
jo
mov
das
push
je
lcall
adcl
icebp
sbb
mov
jp
inc
and
xchg
insb
xchg
aad
clc
mov
pop
popf
cwtl
cmpsl
adcl
aad
loop
adc
dec
adc
jns
sub
push
fildl
xor
stos
test
sbb
push
mov
stos
loopne
std
ret
ss
shlb
rolb
jne
jnp
xor
je
out
repnz
daa
jecxz
pop
dec
mov
or
outsl
in
adcl
clc
cmpsb
inc
lock
push
out
mov
out
or
iret
popf
mov
out
mov
mov
cld
lods
daa
notb
lock
add
mov
adc
sub
loope
sbb
jb
pop
xchg
nop
dec
and
mov
sar
cli
sbb
das
int
test
or
pmaxub
cld
std
jbe
cmp
and
test
inc
adc
lahf
iret
scas
push
adc
sbb
std
adc
lea
inc
pop
mov
clc
xchg
sbb
mov
pop
pop
fimuls
test
pop
jmp
xchg
adc
shr
mov
fistpll
leave
jns
aad
fistpll
dec
fsubp
mov
inc
xor
inc
rcr
cltd
popa
pop
mov
daa
or
imul
add
mov
mov
jnp
push
push
pop
imul
lcall
jmp
test
mov
add
insl
je
sub
jp
test
and
mov
push
addr16
add
or
mov
imul
ja
je
sahf
mov
fcmovnu
cs
push
jle
shrb
fstps
sbb
cmp
int
and
jle
cltd
or
push
inc
xor
orl
sub
or
movsl
or
jnp
inc
mov
sub
and
cmp
lea
xor
clc
mov
popf
rolb
adc
mov
jo
out
lea
mov
scas
mov
mov
and
push
inc
pop
push
in
je
mov
xchg
pop
pop
fisttpll
insb
sbb
sahf
dec
sti
mov
test
push
mov
fisttpl
scas
sbbb
xchg
neg
sbb
inc
insl
lock
dec
dec
out
jb
push
pop
add
in
ret
or
shll
test
dec
inc
pop
or
mov
push
pop
push
adc
lds
aas
add
mov
xor
testb
cmc
dec
cmp
pushf
push
imul
mov
shll
daa
lods
ljmp
or
inc
mov
mov
push
and
mov
icebp
or
std
mov
icebp
xlat
inc
hlt
push
sub
xchg
fwait
mov
roll
ret
ret
dec
and
in
xlat
test
xchg
pop
adc
xlat
shr
mov
inc
iret
jle
in
imul
push
lock
rol
daa
and
xchg
and
push
mov
mov
push
aaa
cs
loopne
xor
arpl
cmp
shr
xchg
in
test
jno
push
into
mov
lret
rcrl
xchg
cmc
pushf
push
inc
mov
xor
test
ret
add
inc
inc
cmp
dec
outsb
mov
fs
mov
cmp
sbb
js
loop
xchg
aas
xor
cmp
xchg
pop
cld
movsb
xor
and
jb
sbb
add
mov
pop
clc
mov
cmp
subl
cmp
into
jp
xchg
ds
push
icebp
ja
jl
call
adc
push
push
sub
stos
or
push
push
negl
xchg
cmp
adc
vmovdqu
ss
xlat
outsb
sarb
cwtl
push
fwait
stos
xor
xorb
push
lret
clc
ror
faddp
xchg
inc
xchg
es
js
es
pop
push
aad
jne
out
mov
mov
ja
adc
aas
loopne
test
xchg
jmp
aas
leave
iret
dec
lret
subb
push
jp
jbe
pop
dec
jge
inc
inc
loop
insb
sbb
popf
test
int
loope
fidivs
mov
lods
mov
inc
aaa
xlat
jge
mov
cmp
mov
cmp
pop
jl
cmp
inc
pop
mov
rcrb
sbb
fsqrt
jge
dec
stos
into
or
lods
sub
inc
lods
dec
cld
xor
insl
jnp
inc
stc
add
in
into
cltd
mov
jo
shll
jns
xor
and
push
inc
scas
sti
jno
add
inc
adc
repz
mov
jb
or
insb
std
mov
pop
fists
adc
daa
ljmp
lret
and
push
jge
pop
pop
mov
sti
dec
in
insl
nop
mov
cld
in
pop
jo
jg
bnd
enter
loope
xchg
jne
jmp
mov
psubusb
inc
mov
insl
lds
jb
push
xchg
movsl
sbb
push
ljmp
pop
xor
add
pop
jne
push
mov
repnz
ret
scas
test
mov
les
or
arpl
movsl
or
push
xchg
fsubr
dec
adc
movsb
mov
inc
mov
out
movsl
jle,pt
xchg
mov
lahf
jo
aas
shll
das
scas
mov
std
hlt
pushf
nop
cli
xchg
push
xchg
enter
popf
test
cmp
cld
and
dec
jo
fdivrs
push
test
out
stos
stos
hlt
xchg
xor
cmp
dec
inc
shl
or
es
es
loopne
xor
lds
popaw
leave
cmpb
or
inc
out
sub
scas
rclb
sti
in
popl
icebp
and
int
frstor
add
and
adc
mov
pop
or
mulb
fiaddl
aaa
xor
xor
and
stos
push
cmpb
lret
push
bound
jle
icebp
das
inc
and
movsl
xlat
imul
inc
movsl
in
pusha
fbld
dec
and
xchg
daa
or
sahf
or
xlat
test
in
dec
jmp
fcoml
push
ss
cmp
push
xor
add
and
push
imul
push
mov
push
mov
pop
mov
mov
jno
cltd
sub
and
rcrb
sbb
xchg
push
inc
aam
jecxz
outsl
pushf
mov
and
cmpb
insb
push
mov
cmpsb
sbb
cmp
out
xchg
mov
notb
cmp
std
pop
sub
ljmp
xchg
fs
push
push
jp
or
sub
out
popf
in
mov
roll
notl
arpl
shlb
jmp
or
xchg
fs
xchg
mov
je
pop
xchg
pop
popa
adc
push
mov
mov
xor
xor
test
int
cmpsb
sub
lahf
imul
das
and
sahf
stos
leave
mov
call
jmp
dec
int3
cmpsl
mov
adc
fcmovnbe
js
pop
and
in
jno
outsb
lea
mov
loope
popa
jmp
or
iret
ror
testb
cs
scas
std
pop
out
imul
outsb
or
std
mov
cmp
or
daa
lods
cmpsb
mov
xor
scas
fs
push
adc
into
push
dec
fwait
adc
mov
bound
loope
leave
gs
add
leave
mov
cmc
out
popa
pop
mov
mov
pop
dec
mov
xor
cmp
mov
loope
sub
jae
adc
fs
imul
lock
dec
idivl
clc
ficompl
ret
out
enter
pushf
cmpsb
push
loop
in
enter
arpl
ljmp
scas
mulps
dec
xchg
lret
xor
or
movl
mov
mov
cmpsl
mov
in
cwtl
adc
cmpsb
call
jo
leave
aam
popa
mov
lahf
and
sub
cmp
into
inc
repz
popa
out
dec
aaa
jge
mov
push
loope
or
loopne
push
mov
aam
test
cld
mov
mov
test
inc
cmc
je
cmp
mov
movsb
xor
lods
mov
push
aad
rcrb
sbb
inc
enter
daa
dec
pop
leave
dec
int3
mov
pop
mov
or
inc
add
pop
xchg
idivb
lea
push
xor
add
push
lret
movsl
mov
in
rolb
negl
bound
adc
dec
stos
jge
and
pcmpeqw
mov
xchg
or
jno
popf
cmp
xchg
mov
push
std
lock
lock
sbb
add
or
rcl
push
out
cmp
xor
cmp
dec
inc
mov
push
push
add
cmp
inc
dec
push
iret
ljmp
scas
sub
pop
out
movsb
push
jp
sbb
cltd
lods
ljmp
push
movsb
xchg
pop
cmp
add
pop
inc
stos
and
ljmp
pusha
in
add
cmp
ss
je
cmp
sub
jge
pushf
xchg
and
scas
xchg
pop
push
fmulp
jb
mov
popf
fbld
mov
add
mov
or
jb
cwtl
inc
cltd
clc
js
jmp
add
iret
pusha
rorb
jns
lock
inc
test
ret
xor
push
sub
out
mov
dec
shl
pop
dec
add
mov
inc
scas
xor
dec
sarb
es
mov
and
jnp
adc
push
sbb
mov
cmp
push
test
js
or
shrl
sti
sub
stos
push
clc
lahf
out
xor
fiaddl
ds
pop
call
add
cwtl
jle
jge
mov
or
das
sbb
cmp
mov
aam
std
push
mov
mov
cmp
mov
push
pop
mov
jmp
lods
mov
fisttpll
es
popf
dec
out
sbb
inc
insl
xor
jmp
pop
sbb
in
xchg
xor
shll
out
iret
push
xor
dec
inc
ret
popf
mov
and
pop
inc
sarb
dec
sti
cmp
xor
aaa
adc
cmp
adc
pop
or
mov
cli
pop
lock
push
out
test
stc
sub
mov
dec
xor
stos
arpl
mov
out
pop
mov
adc
fcompp
ret
adc
push
xor
fwait
inc
mov
in
pop
std
sub
xrelease
jnp
test
push
or
lret
int
add
dec
xor
or
jp
mov
xchg
std
inc
out
jo
out
sahf
int3
cmp
aad
in
adc
out
dec
outsb
pop
les
push
push
scas
pop
and
pop
aad
into
mov
mov
pop
icebp
out
pop
jg
dec
pop
aas
cmp
pop
dec
enter
cmp
icebp
add
xor
inc
pop
in
cmpsl
pop
dec
movsb
inc
les
lret
movsb
mov
adc
sbb
lret
rolb
shlb
insb
fcomps
or
push
mov
inc
mov
sub
imulb
test
addr16
fwait
xchg
cs
insl
and
cmp
orl
inc
mov
popf
fstpt
inc
loope
iret
imul
loopne
lret
mov
and
xchg
adc
sbb
mov
xchg
cmp
xchg
adc
les
insb
xchg
mov
stos
out
fs
bound
lret
jae
sub
lret
clc
inc
pusha
jbe
aad
pop
push
dec
mov
enter
sbbl
sub
mov
ret
in
imul
clc
xchg
mov
jg
mov
test
xor
inc
push
add
fnstenv
iret
mov
stc
aad
adc
xor
mov
sub
imul
push
fisttpll
jp
sub
jbe
cmpl
mov
loope
mov
adc
cltd
dec
aad
std
addr16
into
sbb
call
pop
addr16
jecxz
mov
jmp
inc
pop
divb
test
fadds
pop
addr16
jo
mov
add
xchg
xor
or
mov
fisubl
mov
jge,pt
push
call
fstl
ror
adc
jmp
repz
iret
fbld
ss
mov
dec
jp
data16
ret
iret
flds
jp
sub
enter
cmp
andl
pop
fwait
mov
sbb
xchg
sbbl
add
dec
sub
int3
idivb
cltd
bound
fs
inc
adc
scas
jns,pt
dec
or
mov
add
call
mov
push
mov
fiadds
xchg
jb
into
mov
cmp
repnz
mov
dec
xlat
sub
add
inc
inc
mov
data16
and
and
ja
mov
bound
dec
movsl
push
call
sub
shrb
jae
xor
mov
mov
fisubl
add
add
inc
mov
ss
rcrb
int
xchg
in
insb
jp
add
insb
cwtl
adc
aaa
std
or
std
insl
ja
ret
sub
incl
add
cli
dec
mov
ja
mov
and
cs
mov
pop
sub
test
or
mov
push
inc
clc
or
inc
icebp
inc
mov
gs
movsl
inc
pop
xchg
sub
mov
sbb
jne
or
pop
add
gs
lret
adc
repz
xchg
leave
and
pop
mov
cmp
mov
ret
pop
jbe
and
shll
orb
push
jle
pop
adc
rorl
push
loopne
mov
aam
clc
cmpsb
or
outsl
push
inc
jecxz
fcoml
int
mov
and
lods
mov
popa
fwait
maskmovq
notl
mov
gs
je
cmpsl
je
mov
in
cwtl
roll
gs
aas
lret
gs
mov
pop
cmpsb
adc
ret
mov
pop
pop
fmul
enter
pop
xor
push
testb
loopne
add
out
ljmp
mov
jbe,pn
sbb
les
incb
push
and
jne
jmp
jp
mov
sti
xlat
and
and
pop
sarl
fwait
lea
push
sub
inc
aaa
pop
pop
sbb
xchg
inc
push
dec
insb
xlat
dec
jns
cmp
sbb
xchg
jne
mov
jle
inc
inc
fwait
out
aas
mov
mov
mov
ret
call
and
stos
movsb
jae
dec
sub
pop
mov
loopne
pushf
insl
repz
or
pop
jae
in
inc
xor
push
sub
fisubs
xor
push
cmc
test
lea
pop
ja
mov
out
leave
out
jecxz
aad
stos
sbb
insb
out
adc
aas
gs
dec
iret
mov
adc
sub
popf
hlt
mov
lcall
cmp
hlt
mov
cmp
adc
mov
stc
mov
cld
sahf
add
cmp
jno
inc
xlat
pushf
dec
jmp
xchg
sahf
scas
jge
cmp
daa
les
dec
xorl
and
xlat
inc
xor
sbb
jge
and
jo
adc
mov
les
cmp
inc
mov
cmp
test
sub
icebp
add
lods
fistl
aam
rolb
sar
into
mov
mov
clc
adc
arpl
inc
stc
adc
sbb
and
stos
out
stos
inc
es
push
adc
enter
xorb
cmp
mov
cmp
std
sbb
cltd
movsl
lcall
cmpsl
cmp
call
orl
out
jmp
mov
mov
pop
pop
pop
fldcw
fcmovne
cmc
into
inc
jbe
daa
je
and
in
mov
adc
pop
mov
xchg
popf
adc
fwait
xor
adc
into
push
sub
xchg
and
cmpsl
adc
pop
sahf
out
stc
pop
push
mov
sub
ds
push
xchg
pop
subl
push
fneni(8087
aad
pop
test
mov
into
in
scas
mov
inc
shll
ljmp
sbb
shlb
xchg
or
mov
out
xlat
mov
in
dec
or
sbb
cli
xchg
ss
fwait
sahf
bound
je
push
cmp
out
and
lret
sti
push
stc
lea
movsb
fmul
add
iret
int
stc
jmp
je
push
popa
faddl
lds
fldz
sti
pusha
dec
repz
ret
subb
add
jne
stc
ja
or
mov
rolb
leave
jecxz
cmp
jp
and
popf
add
pop
fsubr
jb
xor
inc
jle
cltd
dec
pop
imul
lods
hlt
adc
mov
fcoms
sbb
or
mov
cmp
outsl
push
fs
sub
dec
aaa
out
mov
insl
xor
mov
sbb
jecxz
fimull
dec
fimuls
add
pop
dec
out
adc
adc
in
dec
jns
cwtl
mov
loope
push
ljmp
fbstp
xchg
cmp
add
jge
sarl
rep
cmp
jle
mov
std
call
sub
jmp
scas
addr16
cmp
cmp
inc
dec
mov
sbb
lods
stos
test
sarl
imulb
nop
xchg
cmp
xchg
mov
and
ljmp
out
lock
pop
lret
mov
inc
add
mov
fisubl
movsb
jle
pop
les
inc
test
repz
bound
out
sub
or
push
es
je
insl
xor
ret
cmc
add
cmc
jecxz
mov
dec
lcall
imul
sbb
fldt
dec
cmpsb
jmp
fistpl
js
js
roll
mul
sub
xchg
mov
push
cmpl
pand
mov
or
xchg
iretw
adcl
ss
and
pop
pop
stos
leave
imul
fcomps
push
xchg
cltd
xchg
and
jno
in
ljmp
adcl
ficompl
dec
cmp
pop
ret
in
push
and
pop
dec
mov
sub
jne
negb
icebp
dec
cld
sahf
dec
test
jnp
imul
sub
cli
pop
add
stos
pusha
lock
movsl
cmpsl
dec
fwait
pop
outsl
mov
xlat
leave
mov
mov
dec
or
sub
int
lods
sahf
sti
scas
push
mov
repnz
cwtl
ret
inc
sub
adc
sub
push
inc
dec
push
and
repz
jno
gs
jnp
cwtl
push
mov
push
ret
sub
loopne
hlt
in
cmp
stos
mov
fldl
movsl
and
inc
scas
xor
pop
push
out
xchg
cmp
stc
xor
popa
mov
push
mov
and
pop
sbb
pop
cs
popa
xor
sub
and
ret
inc
dec
scas
lret
fdivl
iret
xchg
push
cmp
ds
adc
mov
mov
and
cmp
cli
mov
lret
or
sbb
movsl
cmp
dec
inc
ret
popf
mov
push
in
movsb
mov
jge
jnp
fidivl
addr16
mulb
and
mov
into
mov
dec
mov
lea
push
pop
iret
pop
rorb
outsb
fadds
adc
pop
pop
pusha
pop
xchg
cmpsb
das
int
lea
pop
lea
cmpsb
test
out
ret
jae
jo
pop
push
jns
add
adc
push
add
sub
sti
inc
enter
insb
mov
sbb
mov
scas
cmpsl
ret
fdivl
dec
xchg
jge
xchg
sbb
in
jne
sub
lret
mov
xor
fisttps
in
sub
push
imul
and
mov
call
pop
push
xlat
push
jp
xchg
add
jle
push
std
mov
mov
push
xchg
push
pop
jge
dec
sbb
cmpsl
mov
mov
push
js
insl
scas
data16
mov
fdivrl
popf
lahf
dec
fmull
js
and
frstor
pusha
push
xchg
jle
repnz
loop
test
mov
xchg
stos
les
cmp
loopne
lods
test
cmp
mov
xlat
or
mov
inc
pop
dec
aaa
scas
mov
aaa
mov
xchg
outsl
jns
cmp
xchg
into
jne
inc
xlat
xchg
sbb
or
imul
mov
imul
xor
dec
dec
js
test
push
lds
test
push
add
sbb
mov
jecxz
jg
loopne
in
and
ficoms
sub
xchg
sahf
jae
xchg
pop
daa
fistpl
push
xchg
test
push
sbb
scas
push
outsl
xlat
out
push
push
xchg
xchg
push
test
enter
adcb
add
lret
mov
adc
call
hlt
subl
sub
fsubrl
cwtl
and
or
adc
dec
inc
xor
in
dec
repnz
inc
cwtl
mov
int3
dec
mov
movsb
in
ficoml
add
inc
add
stc
aaa
leave
jo
test
pop
and
sti
sub
gs
sbb
insb
out
add
int
mov
popa
and
inc
or
imul
jecxz
inc
inc
xor
push
lret
leave
imul
sbb
dec
xor
xchg
dec
lods
jb
dec
sbb
pop
movsb
mov
push
sub
dec
xor
jbe
in
pop
fisttpll
iret
test
scas
or
lock
in
jl
fstps
loopne
dec
pop
pop
inc
jge
sub
repnz
jecxz
jle
cltd
dec
mov
out
outsl
inc
test
loope
lret
and
pushf
lcall
mov
push
loop
insb
cmc
loop
hlt
pusha
xchg
ret
jb
xor
cmp
testl
dec
scas
mov
das
mov
icebp
frstor
fdivp
sbb
test
cs
sbb
scas
mov
rol
fimuls
into
mov
cli
xor
and
xor
mov
jns
xlat
and
mov
sbb
sbb
mov
add
dec
sbb
imul
sbb
mov
xor
jmp
icebp
jl
lods
cmp
clc
popf
xchg
es
push
and
dec
push
pushf
loope
adc
es
cmp
jbe
or
xchg
sarb
data16
xor
fwait
xchg
lcall
aas
xor
shr
xchg
inc
cli
in
mov
dec
mov
sub
jg
in
jle
mov
add
dec
in
repz
jle
insl
mov
sti
testl
outsl
cmp
lods
push
add
int3
cmp
xchg
jo
add
push
mov
frstor
popa
pop
lcall
dec
or
in
gs
sbb
mov
dec
out
add
pusha
clc
mov
mov
jno
push
or
mov
push
sub
out
mov
es
mov
sbb
repz
cmpsl
pop
stos
enter
jl
pop
add
stos
pusha
push
aas
mov
push
in
xor
cld
mov
or
xchg
loop
les
cmp
aad
pop
pop
lods
mov
jmp
fsubp
pop
add
pop
sbb
mov
cmp
mov
xchg
sbb
lret
out
fwait
dec
xor
dec
cmp
fdivr
fdivrs
push
dec
loop
sbb
mov
mov
sbb
jg
popa
inc
mov
adc
dec
add
out
pop
adcb
mov
mov
sbb
xchg
cmp
xchg
pop
in
movaps
lcall
push
imul
sub
ja
loop
mov
out
xchg
hlt
in
daa
mov
cwtl
mov
xchg
enter
adc
icebp
pop
dec
xor
nop
cmc
push
lds
out
push
cld
xchg
movsb
inc
xor
shrl
inc
filds
push
or
push
sub
adc
dec
pop
add
sbb
out
out
ret
pop
push
inc
inc
scas
sti
es
inc
mov
jmp
pop
in
mov
cwtl
cmpsl
or
mov
into
and
cmc
sti
add
cli
mov
jbe
cli
hlt
or
dec
inc
test
imul
and
jb
rcrb
add
ss
sub
sbb
mov
mov
bound
xchg
and
lds
pop
shll
dec
jb
xor
in
lds
movsb
add
mov
and
add
stc
cltd
xchg
arpl
push
sub
sahf
jecxz
ljmp
sub
repnz
xor
xchg
mov
lods
outsb
xchg
fistpl
mov
xchg
movd
xor
movsl
xor
icebp
rorl
sub
cs
or
cs
aam
int3
mov
xor
popf
cmp
roll
cmp
rorb
in
dec
sub
and
test
xchg
xor
push
xchg
enter
cmp
push
jl,pt
xor
jnp
pop
mov
pop
sahf
icebp
rcrb
jg
stc
pop
fildll
dec
jno
dec
ficompl
add
mov
daa
rcrb
test
sbb
add
out
jb
lret
add
inc
out
lods
cmp
cltd
and
inc
stos
push
xorl
xor
mov
mov
inc
loop
cmp
inc
out
dec
cwtl
push
cli
loope
sti
ss
fstl
lahf
fmulp
pop
add
mov
les
inc
xchg
dec
jmp
cmp
mov
int
out
mov
or
inc
movsl
or
inc
and
jl
jl
gs
xor
outsb
mov
mov
push
mov
lret
fidivl
pushf
dec
jecxz
push
jno
inc
loope
pop
out
xchg
imul
or
xorl
and
ds
jmp
xchg
pop
and
xor
in
popf
loopne
and
stc
push
popa
mov
mov
mov
mov
out
ljmp
cld
lds
sub
cld
and
pop
adc
pop
in
int
dec
bound
pop
in
lret
aas
imul
mov
jno
mov
push
dec
notl
push
fcoms
cmc
dec
add
push
cmp
inc
lea
adc
cmp
daa
xor
fisttps
add
xchg
std
push
inc
cmc
stos
adc
inc
jl
in
xchg
cli
sbb
or
fadd
mov
jnp
dec
daa
jo
sbb
dec
xor
adc
cltd
les
xor
mov
push
inc
call
pop
push
std
mov
mov
call
jge
movsb
xor
or
pop
jns
jge
mov
mov
negb
pop
xor
jle
rcrb
ud2
in
adc
movsb
inc
dec
jae
cmc
inc
scas
loop
aaa
mov
xchg
fst
xor
cltd
in
repz
mov
fwait
out
fdiv
push
and
mov
shl
in
jp
scas
addl
out
adc
int
jecxz
fistpl
aas
subl
repnz
cltd
lret
adc
adc
aaa
mov
pop
adc
hlt
movsl
push
or
jb
xor
outsb
aam
ja
aam
shll
inc
insl
cld
xchg
push
fisubs
push
xchg
cld
cmpsl
scas
sbb
jo
adc
clc
sbb
or
dec
pop
cli
mov
mov
pop
mov
mov
fisttps
mov
rcrb
lea
inc
mov
fmull
popa
adc
pop
xor
push
mov
mov
and
icebp
cwtl
fnstcw
mov
pop
mov
dec
add
les
rcrb
fs
movsl
xor
lahf
inc
out
mov
repnz
aas
insb
test
mov
jle
xchg
sbb
jo
int3
cmpsb
pop
pcmpeqw
stc
fwait
ret
sub
movsl
cmp
mov
add
std
imul
insl
into
xchg
jns
out
adc
sahf
jb
cmp
jae
mov
dec
aad
pop
aad
scas
and
jp
fsubrs
dec
clc
xor
push
jae
lahf
insl
rcr
shlb
xor
cmp
sub
mov
das
mov
push
sub
fidivrl
or
cltd
push
ljmp
jne
inc
fcomps
pop
lods
aam
sub
mov
jbe
lods
dec
mov
das
ljmp
jae
pop
mov
stos
cmp
loop
sbb
mov
out
rolb
mov
and
xchg
jo
aam
loopne
mov
cmp
sarb
jge
mov
push
sbbb
mov
and
adc
cmp
add
add
cmp
stos
dec
adc
sbb
jns
nop
test
cwtl
mov
outsl
stc
leave
dec
imul
cmp
mov
movb
and
ja
daa
mov
ficompl
loop
dec
enter
scas
and
add
pop
adcb
sbb
mov
leave
cwtl
fists
jmp
mov
aaa
cmp
add
popa
je
in
stc
mov
in
cmp
notl
scas
pushf
hlt
mov
xor
push
lock
movsl
xchg
xor
lods
loop
ja
ret
sbb
lret
mov
shrl
in
mov
jns
mov
cmpsl
imul
jge
jae
ss
mov
mov
incl
icebp
std
lcall
insl
jnp
mov
push
jnp
xchg
sti
out
sub
in
add
iret
inc
mov
jno
pop
jno
lahf
cli
cld
push
out
repz
mov
cltd
lds
fimuls
and
pop
imul
movsl
cmp
aaa
test
ljmp
shrl
adc
and
fistps
in
popa
cmpsb
ret
sti
nop
aam
js
test
cld
cmp
inc
fistl
push
test
dec
mov
adc
popf
adcb
loopne
fmulp
mov
pop
stos
pop
sbb
addr16
jmp
hlt
xor
add
pop
rolb
jae
imul
push
cli
scas
dec
fisttpl
test
or
mov
sbb
xchg
decb
test
adc
test
sub
lods
cwtl
les
fs
mov
and
das
adc
cltd
shrb
fs
and
insb
push
loope
jp
adc
jg
pop
iret
dec
loopne
call
xchg
xchg
bound
inc
popf
jo
sub
mov
pop
leave
mov
cld
or
scas
sub
stos
cmp
js
push
and
dec
mov
leave
xchg
mov
nop
cmp
sub
pop
sub
xchg
push
rcrl
inc
xchg
mov
mov
cwtl
sbb
idivl
popf
add
iret
xor
stc
and
rclb
sbbb
pop
dec
cmp
in
das
imul
xchg
sub
stos
das
leave
call
scas
dec
mov
push
sahf
jl
inc
pop
enter
icebp
dec
popf
decl
test
pop
test
test
loop
inc
repz
xchg
mov
mov
push
in
int3
inc
sahf
daa
add
pop
bound
mov
jae
mov
mov
into
xor
sub
addr16
arpl
fwait
movsb
or
out
sub
cmp
xchg
xchg
pusha
pusha
jp
in
pop
aam
shrl
add
rolb
stos
inc
stos
daa
fildll
adc
idivb
repnz
xor
dec
ret
ds
mov
jp
or
mov
dec
adc
pop
shlb
pushf
mov
or
sbb
cli
mov
jge
es
mov
enter
incl
push
inc
pop
nop
jnp
out
in
push
jecxz
arpl
into
shrl
mov
inc
cli
test
cld
push
lahf
in
xchg
push
sub
mov
cmp
lcall
inc
or
scas
cs
add
stc
mov
loop
cmpsb
jno
sbb
int3
test
pop
das
jb
mov
movsl
xchg
dec
mov
or
sbb
mov
lret
xchg
pusha
sub
in
sbb
cs
enter
or
rolb
inc
jo
cwtl
inc
test
imul
insl
repnz
inc
jl
mov
sbb
push
push
popf
cmpsl
dec
pop
nop
ret
adc
mov
pop
fsub
mov
scas
loopne
fs
imul
push
jne
and
pop
ret
and
shrb
and
lods
mov
push
or
aaa
rcrb
sub
lcall
lds
cmc
mov
mov
ficomps
fstpl
adc
pop
push
js
insl
xchg
imul
ja
mov
clc
dec
or
xor
subl
test
jns
xchg
xlat
arpl
popa
dec
mul
aas
xchg
out
jae
in
lea
dec
dec
cltd
fwait
cmpl
xorb
lcall
movsb
dec
sbb
and
jecxz
in
cmp
and
fdivl
fs
or
pop
or
sub
xchg
fcmovnu
out
test
jb
gs
stc
fisubs
push
adc
addb
jmp
sbb
gs
xchg
push
mov
addl
push
push
mov
push
dec
adc
rclb
jmp
dec
test
cmp
cmp
fildll
popf
int
clc
movsl
std
or
adcl
aas
sub
shlb
push
sub
loop
mov
test
adc
or
fs
push
inc
xchg
mov
mov
push
cld
ja
pop
mov
push
insb
lret
fnstcw
jecxz
lods
das
ror
mov
push
adc
jp
cmp
les
xor
xchg
sbbb
movsb
xchg
mov
stc
sub
cmp
loope
lds
and
repz
out
enter
into
jbe
cmpl
pop
xor
es
hlt
out
pop
mov
stos
sbb
outsl
push
lods
rol
xchg
xor
test
mov
sbb
test
mov
adc
dec
arpl
push
test
xor
cwtl
inc
and
ja
or
mov
test
mov
repnz
out
lcall
or
mov
mul
loopne
insb
out
pop
mov
fmul
and
inc
sub
out
push
add
imul
leave
popf
lret
pop
adc
jnp
adc
or
lret
insb
cltd
inc
lods
jle
pusha
mov
data16
add
mov
ficoml
sti
enter
ljmp
enter
dec
inc
adc
mov
sub
add
mov
es
jno
mov
js
cmp
sub
outsl
pop
fcmovb
mov
mov
cmp
repnz
pop
shrl
out
popa
or
dec
pop
push
mov
mov
jns
jne
lods
ja
cltd
mov
data16
mov
or
js
fisubs
enter
std
lcall
in
lods
in
arpl
cmp
cmp
dec
xchg
rcll
or
sbb
push
jmp
into
add
repnz
insb
mov
stos
jb
fwait
mov
jo
mov
sbb
je
add
stos
jg
xchg
shlb
pop
jmp
fiaddl
into
neg
aaa
out
repz
shrb
mov
inc
lea
dec
cmpl
jle
test
mov
or
fwait
dec
mov
push
es
or
imull
test
cmp
pop
sti
add
aas
repnz
xchg
call
inc
js
add
lcall
xchg
adc
jmp
xor
shlb
sub
pusha
ds
enter
aaa
mov
ds
cmpps
cmc
lcall
fwait
outsb
add
push
cmp
je
push
fldenv
cltd
xor
stos
stos
lret
cld
adc
fidivs
and
inc
test
push
mov
mov
cmp
iret
push
adc
or
idivb
mov
test
stc
cmp
ljmp
je
jne
sbb
dec
sub
insl
and
and
scas
jg
hlt
cmp
sahf
mov
push
mov
mov
xchg
nop
test
add
or
adc
lock
sbb
mov
pusha
pop
mov
stos
jge
push
adc
fldenv
mov
stc
mov
sbb
dec
jo
andb
mov
mov
test
bound
jp
mov
aaa
mov
scas
sbbb
rolb
rcll
dec
cmp
in
aaa
cmp
pop
lock
xor
xchg
movsl
push
dec
sub
pop
frstor
sbb
dec
cli
mov
cmp
cld
push
and
dec
ret
sub
pusha
scas
adc
into
pushf
ja
adc
into
loop
inc
adcl
xor
fmull
hlt
jae
and
xlat
pop
pop
arpl
imul
add
es
cmpsb
cmp
adc
adc
pop
cmp
cmpsb
dec
scas
mov
or
imul
shrb
shl
test
into
jge
mov
mov
rorb
jo
movsl
xchg
inc
mov
in
adc
xchg
jmp
mov
shl
pop
xor
cmp
sarb
aad
push
cmp
or
call
cmp
rcll
div
repnz
sub
pop
adcb
aas
jmp
inc
sbb
gs
das
je
jecxz
frstor
lcall
dec
lods
fcom
insb
out
repnz
inc
jno
cmp
mov
ja
and
pop
jle
and
jecxz
repnz
cltd
push
rclb
pop
ret
xor
lret
pop
sub
das
mov
push
bnd
xor
fnstsw
jns
pop
movsl
xchg
jnp
push
cmp
cmp
popf
mov
cmp
sub
lock
add
dec
test
stos
or
or
and
cmp
call
daa
insl
jge
out
dec
and
sub
aam
cmp
jg
rcr
in
mov
or
push
xchg
push
js
repnz
mov
sbb
leave
stc
mov
cmp
xchg
cmpb
outsb
jns
pop
jl
cmp
lods
jl
fmull
lods
jmp
cwtl
imull
mov
lahf
mov
dec
push
adc
daa
dec
cmc
in
sbb
fdivr
xchg
or
or
mov
jmp
and
push
arpl
cmp
mov
mov
loop
cmp
and
mov
arpl
test
xlat
sbb
mov
nop
scas
loopne
test
test
ds
dec
std
icebp
mov
push
push
sub
fisubl
mov
pushf
ss
fs
pop
jns
push
int3
ret
inc
dec
in
pop
xor
mov
je
aad
lock
aad
mov
xor
adc
scas
movsl
into
movsb
sarb
aam
es
stos
mov
xchg
sahf
int
bndldx
or
fcmovnu
icebp
in
dec
dec
cld
mov
mov
add
and
cs
push
jno
sub
orb
vmptrld
jmp
lcall
pop
je
dec
stos
inc
xor
xchg
cmpsb
sub
and
out
dec
fsubrs
mov
cmc
dec
in
mov
stos
sbb
loopne
push
mov
lret
sbb
dec
dec
stc
push
cmpsl
cmp
insb
add
sub
push
sbb
push
mov
pop
or
mov
jno
xor
and
adc
mov
xor
ja
mov
stos
cmp
jp
inc
data16
lods
add
mov
das
mov
or
mov
ja
fcomp
test
lret
inc
mov
repz
daa
dec
mov
adc
sub
cmovno
dec
jnp
cwtl
sub
mov
jae
sub
ja
out
stos
sub
xchg
add
xchg
out
movsb
imul
mov
movsb
rep
mov
jae
in
lods
rolb
inc
sub
in
test
call
adc
sbb
jns
add
shll
pop
push
xchg
mov
mov
xchg
repz
or
cmp
sarl
dec
into
mov
push
pop
jecxz
iret
push
dec
aas
mov
ffree
mov
clc
popf
and
popa
fstps
sbb
mov
add
fwait
mov
jg
pop
push
call
in
xor
and
or
in
xchg
add
notb
inc
pop
movb
sbb
int
in
mov
adc
pop
bound
adc
mov
dec
mov
jle
pusha
pop
mov
cwtl
cmpsb
pop
cmp
into
sub
test
mov
iret
mov
push
leave
sbb
jecxz
dec
out
jb
pop
xlat
pop
xorb
mov
mov
add
in
push
mov
fadd
inc
out
mov
insb
xor
pop
pop
and
push
dec
in
add
and
pop
repnz
arpl
inc
cmpsb
stos
or
add
xchg
pop
jmp
xor
int
std
mov
add
mov
fcompl
mov
xor
notb
lahf
leave
in
lahf
or
lds
pop
lock
fmull
insb
push
mov
roll
fistpl
jno
adc
jb
mov
jb
and
in
test
pusha
enter
lock
mov
cltd
lds
fisttpll
dec
lds
xchg
push
arpl
in
jge
cmpsb
gs
mov
and
test
das
rclb
js
aad
scas
sbb
cmc
fnstenv
ret
cltd
dec
loopne
stc
ja
sbb
pop
cmp
inc
into
or
lret
test
int3
xor
jno
mov
mov
inc
sarb
sbb
pop
lret
dec
sarb
popf
mov
push
insl
cs
xor
jmp
aam
add
mov
push
orb
add
jno
xchg
shrb
xor
hlt
lods
loope
add
lods
dec
push
sub
leave
subl
divb
mov
sub
jbe
and
out
test
mov
add
sub
pop
mov
add
ret
test
sub
daa
sub
rep
pop
inc
xchg
ret
jg
pop
in
pop
cli
inc
lea
sbbb
outsb
or
xchg
ja
mov
cmp
xchg
fmull
mov
icebp
pop
push
ds
into
mulb
add
aas
xchg
mov
mov
fcos
and
imul
xchg
cwtl
mov
push
fcomip
jmp
pop
inc
aaa
or
add
mov
mov
mov
mov
popl
add
imul
xor
popa
pusha
popa
stc
pop
push
mov
and
dec
lea
mov
in
xchg
ds
sarb
xchg
add
cmp
pop
cwtl
in
or
cwtl
adc
call
inc
aad
out
fdivs
scas
add
or
addr16
and
sti
cmp
and
push
cld
aad
sub
sbb
mov
cmpsb
cmpsb
push
je
cmp
pop
jne
mov
lea
repz
cltd
mov
fisubs
sbb
pop
pop
out
js
pop
mov
aad
push
sbb
pop
mov
jle
imul
mov
out
xchg
add
and
dec
loope
mov
xor
adc
and
xchg
ss
pusha
and
or
adc
pop
xchg
addb
add
lret
addr16
or
xlat
fidivs
add
mov
pop
lahf
pop
cmc
push
loopne
sbb
jnp
mov
cmpsl
js
nop
mov
js
mov
jno
cmp
lock
pushf
leave
roll
sbb
ds
outsb
cmp
cmp
push
xchg
sub
dec
dec
dec
aaa
xchg
sub
xchg
jne
push
pop
fsubl
scas
add
das
cs
push
cli
sub
mov
in
dec
push
jg
pop
dec
out
dec
jmp
pop
pop
xlat
addr16
push
movsl
dec
mov
test
sub
pop
test
push
cmp
or
into
sub
sahf
nop
adcl
shr
inc
mov
jmp
sbb
pop
sub
orl
mov
mov
addl
mov
imul
aad
or
or
cmp
ret
in
sub
pop
mov
dec
aam
inc
xor
dec
push
outsb
imul
in
pop
xchg
push
push
ret
pop
fsubrp
jbe
addl
aas
pop
dec
sahf
adc
push
loope
inc
fdivrs
jnp
xor
jge
sub
mov
scas
dec
xlat
stos
call
dec
loopne
call
es
push
ret
push
jns
cltd
cs
sub
out
xor
cltd
jl
jns
sbb
cwtl
fldl
enter
call
dec
jp
out
and
scas
out
lods
mov
ret
cmp
ja
test
mov
fadds
pop
imul
cmp
fcomi
push
int
nop
cmpsb
test
mov
lcall
push
jae
scas
mov
mov
popa
lahf
insl
outsb
sub
add
jle
pop
sub
push
ror
movsl
rolb
movl
cltd
test
inc
push
aam
sbb
mov
pusha
pop
insb
inc
xor
daa
inc
jp
pop
cmp
jae
lods
movsb
pushf
mov
mov
add
dec
push
orl
iret
pop
ret
push
cld
pop
jnp
jge
lea
repz
test
lret
adc
fsubl
xchg
pop
js
rcll
aas
gs
ljmp
adc
pop
mov
and
arpl
test
es
lds
hlt
in
fadds
pop
mov
daa
hlt
cmp
mov
cld
in
inc
jbe
mov
inc
rol
push
shrb
stos
fcom
pop
adc
mov
pop
jae
xchg
push
testb
stos
sbb
hlt
mov
aad
sub
mov
cs
mov
jmp
inc
shlb
pop
sbb
sub
mov
jg
js
xor
mov
sub
and
icebp
mov
xor
mov
fdivrs
pop
mov
fcompl
xor
xchg
imul
pop
js
clc
mov
sub
jge
bound
daa
fdivs
in
pop
inc
sub
xchg
dec
adc
lahf
mul
push
pop
xchg
insl
mov
mov
mov
mov
sti
mov
sbb
mov
sbb
jno
loopne
push
into
pusha
inc
mov
stc
cmp
push
comiss
mov
out
pop
cmp
lock
fbstp
adc
push
sub
fs
sbb
out
add
adc
inc
cmpl
cs
lcall
mov
mov
cltd
sbb
push
int3
dec
enter
or
pop
jns
dec
push
int
ds
fimuls
inc
outsb
dec
jecxz
lods
mov
mov
mov
sahf
test
popf
mov
mov
movsl
inc
push
jae
cld
mov
das
dec
aad
in
dec
push
mov
iret
aam
fs
dec
push
push
xlat
push
dec
xchg
and
push
mov
push
inc
outsb
loop
enter
les
sbb
add
scas
fs
pop
notb
dec
push
out
out
xchg
stc
xor
cmp
mov
push
jae
jg
repz
inc
test
jbe
addl
imull
xchg
jl
inc
xchg
test
dec
pop
dec
cmp
jmp
cmp
test
in
xor
add
hlt
adc
call
cwtl
adc
enter
testl
pop
xchg
inc
jmp
xlat
lods
cli
imul
cmp
imul
jne
divb
les
jbe
jno
subb
mov
pop
mov
into
jnp
mov
mov
mov
lds
mov
insb
test
cmc
rcr
cmp
testl
mov
mov
out
mov
test
pushf
arpl
xor
pop
les
push
addr16
sti
pop
sub
xor
mov
jp
jp
lret
mov
mov
jne
fnstsw
and
adc
ss
ljmp
xlat
lods
aam
bound
xor
jbe
xor
pop
int3
fs
add
dec
mov
iret
cmpsb
lret
mov
insb
lods
je
fidivs
je
or
pop
rorl
add
insb
jmp
ljmp
add
add
dec
clc
aaa
mov
jmp
jb
xchg
or
sbb
sbb
icebp
clc
push
jge
jg
orb
fsubrp
call
xchg
movsb
sbb
xor
adc
pop
xchg
dec
into
mov
sbb
call
push
sbb
rorl
andb
fldenv
adc
mov
cmp
adc
nop
test
xor
pop
push
pushf
out
into
andl
inc
xchg
inc
dec
mov
jp
into
xor
jmp
imul
js
inc
into
jbe
adc
data16
es
fimull
xor
xor
jmp
out
and
scas
cmp
pop
mov
adc
push
cltd
mov
scas
dec
push
push
imul
jge
push
sbbb
arpl
inc
dec
inc
inc
dec
pop
andl
loope
xchg
push
or
mov
xor
jle
jbe
test
and
hlt
js
in
sbb
mov
push
sbb
nop
push
mull
mov
adc
test
and
lock
mov
cmc
aaa
ret
mov
ret
mov
pushf
insl
push
cs
imul
adc
jl
ss
ffreep
and
mov
dec
das
add
inc
test
cmp
xchg
lods
sub
ffreep
pop
cmp
fisubrs
push
stos
insl
or
packsswb
and
push
nop
scas
pop
xor
jp
sub
mov
aas
in
popa
mov
jg
insl
jge
lret
in
ss
pop
icebp
cmp
sub
inc
idivb
mov
lret
movsb
jle
in
adc
mov
mov
scas
lds
inc
clc
incl
cmpsb
push
pop
and
pop
ret
popa
adc
aas
mov
cmpl
jae
pop
push
dec
cmp
mov
mov
ja
mov
mov
jmp
xor
sub
shll
mov
pop
adc
push
jl
fsubl
out
imulb
mov
shll
sub
fstl
cmp
enter
adc
push
inc
aas
aam
inc
fwait
inc
push
cld
outsb
and
mov
and
xchg
or
inc
outsl
out
das
fldt
mov
aam
or
addr16
pop
daa
repnz
cld
mov
loop
lods
pop
out
pop
lods
fidivrl
xor
or
aam
dec
shrb
mov
push
xchg
cmp
adc
in
mov
pushf
push
pop
sub
sbb
aam
fsubrp
aaa
adc
scas
inc
sub
inc
cli
sbb
and
add
xor
pop
outsb
jmp
add
addr16
aam
mov
fstpl
xorb
cmp
ds
mov
in
int3
pop
data16
or
lds
pop
mov
cli
add
pusha
jle
mov
outsb
dec
sbb
inc
and
mov
jecxz
jg
jg
popf
insb
xor
and
push
pop
mov
push
and
lock
dec
push
out
clc
aaa
xor
xchg
sub
jle
adc
mov
in
mov
cmp
loope
jno
xor
hlt
sbb
adc
cmc
or
and
jmp
xchg
and
mov
lods
loopne
jo
std
or
jbe
cmp
dec
lock
pop
pop
sub
aad
mov
push
cs
xchg
repnz
cmp
test
push
mov
xor
dec
dec
jnp
aas
push
popf
jb
or
popa
stc
mov
daa
iret
mov
outsl
ret
ja,pn
xchg
mov
movsb
into
out
mov
jmp
push
movsb
lds
inc
test
in
sbb
idiv
fidivl
test
das
stos
jle
or
sub
out
or
fucom
mov
lods
xor
scas
mov
mov
xor
insl
ja
xchg
dec
shll
subl
mov
divl
outsl
push
adc
inc
push
jae
dec
push
inc
clc
scas
cmpsb
sub
or
add
fisttpll
ja
push
push
cmp
das
inc
mov
pop
cmpsb
sbb
mov
pop
mov
ja
stos
das
loop
jg
fwait
xchg
xlat
pop
outsl
sbb
xor
mov
out
xchg
sbb
inc
ss
push
pop
jecxz
mov
lock
mov
loopne
jmp
pop
cltd
mov
cmp
push
pushf
push
sub
imul
test
aam
pop
xchg
jmp
add
mul
or
popa
xchg
xor
hlt
lock
rorl
stos
test
dec
inc
dec
cmp
sbb
dec
push
mov
or
insl
lfs
and
cmp
rclb
sub
jmp
jbe
inc
mov
push
and
pop
popf
push
jo
loope
xor
repnz
push
mov
loopne
cmp
test
fwait
jmp
and
sbbl
fwait
mov
insl
fs
loop
jns
je
leave
dec
sub
adc
ror
xchg
scas
pop
xchg
xchg
mov
cmp
inc
dec
xor
int
inc
jo,pt
mov
stos
cmp
adc
cmp
sti
pop
daa
push
pop
push
add
add
jge
sub
in
fnstenv
das
xchg
insl
in
or
fdivp
or
movsb
mov
rclb
pop
sbb
outsl
pop
add
cs
and
sub
mov
mov
insb
enter
in
add
fwait
adc
push
add
jp
inc
pop
pop
cmp
jno
daa
inc
loope
mov
mov
aas
sbb
xor
sbb
negb
stc
push
jo
push
scas
pusha
ret
pop
push
paddusb
ret
dec
xlat
shrb
jmp
int3
pop
mov
cltd
jo,pn
test
push
jl
dec
cmp
adc
adc
jns
out
mov
adc
xlat
pop
scas
cmc
stc
jp
cwtl
xor
hlt
cmp
das
cmp
mov
and
cmp
andl
adc
mov
sti
in
sbbb
sbb
push
adc
or
fistps
xor
cmp
cwtl
jge
test
icebp
out
sub
dec
mov
iret
mov
sub
std
xchg
push
xchg
mov
mov
ds
into
mov
pop
ret
aaa
fcompl
fs
dec
xchg
push
cld
jl
and
mov
fdivrl
leave
es
addr16
sbb
lods
js
jo
shll
push
jge
add
mull
pop
outsb
cmp
and
dec
lock
mov
stos
push
shll
in
bound
lret
and
cld
sarl
xlat
lods
mov
cmpsl
insb
jbe
xchg
or
cmp
xchg
popa
icebp
aaa
shll
rclb
iret
mov
push
stos
ficoml
jp
sbb
repz
dec
stos
into
sub
lock
push
push
add
fsts
add
mov
inc
movl
mov
mov
xchg
xchg
je
or
jbe
ret
xor
lods
mov
cmp
adc
mov
divl
sub
push
push
cmpsl
jo
subb
in
lahf
sbb
lock
mov
mov
imul
cltd
jno
xor
jbe
mov
jmp
je
mov
mov
inc
lods
shrl
cmp
and
mov
push
sahf
mov
out
jb
fwait
cmp
jb
cmp
xchg
add
adc
fbld
and
push
and
xchg
daa
xlat
mov
fs
or
movsb
subl
add
scas
or
outsb
inc
loope
loope
pop
jo
ja
cmpsb
add
jbe
cwtl
iret
or
inc
loopne
stc
subl
jecxz
loop
mov
jbe
xlat
incl
icebp
xchg
fsubs
sti
sub
xor
sbb
in
cmpsb
jae
mov
clc
push
shrl
mov
add
je
mov
std
mov
push
add
pop
fwait
xchg
imul
clc
mov
imul
sbb
xor
push
xchg
imul
rclb
push
mov
repnz
fwait
out
cmp
sbb
cmp
icebp
and
inc
outsb
lock
pop
insb
inc
or
addb
lret
bound
gs
in
lcall
mulb
pop
sub
pop
subb
popa
mov
loope
adc
or
push
aad
jl
pop
jmp
pop
mov
adc
fwait
inc
fyl2x
cmp
sub
mov
int
and
ja
jno
push
adc
push
sti
pusha
out
mulb
imul
xchg
cmp
and
adc
jecxz
enter
mov
dec
inc
xchg
movsl
adc
inc
pop
xor
add
dec
sbb
mov
sbb
enter
cmpsb
jns
add
jp
aas
push
cmpsl
cli
cmp
dec
or
inc
aad
jecxz
pop
inc
push
sbb
mov
js
fcmove
push
inc
mov
mov
bound
pop
stos
cmpsl
lret
jl,pn
jecxz
sar
jae
or
test
and
and
ret
cmp
psubw
pop
or
outsb
sub
scas
dec
pop
jno
ficoml
sbb
rcrl
es
add
mov
int
ret
mov
bound
pop
sarb
xchg
cmp
mov
mov
inc
mov
scas
fisubrl
xlat
push
sub
jae
scas
lret
pop
cmc
shl
mov
rorb
pop
icebp
and
dec
pusha
icebp
inc
stc
xor
fisubs
scas
lcall
xor
jge
out
mov
lret
xor
into
jecxz
clc
mov
and
out
negl
mov
jo
inc
aad
push
ds
push
mov
scas
mov
mov
mov
mov
adc
mov
sub
repnz
aaa
lock
inc
cs
inc
inc
mov
insb
dec
aad
xchg
aaa
mov
adc
cmpsb
push
xchg
mov
sub
movsb
jle
leave
addr16
ret
bound
adc
mov
push
into
mov
leave
mov
cmpsl
loope
sbb
or
aad
notl
into
adc
clc
testl
mov
hlt
ds
shrl
inc
jno
andb
cmp
rcll
or
je
ficoml
mov
ss
orb
jmp
lcall
addr16
dec
xor
and
sbbl
popf
pop
imulb
push
lcall
pop
xlat
shl
jb
mov
in
test
jb
aas
test
push
and
jbe
lds
imul
fisttpl
pop
push
orb
jns
push
int
adc
out
das
mov
movsb
es
push
mov
mov
xchg
int3
loope
daa
mov
add
sub
lds
mov
mov
cmp
pop
inc
inc
fucom
add
mov
test
push
xor
loop
dec
xlat
mov
lret
dec
xchg
mov
jg
and
lret
add
inc
bound
scas
inc
ret
rorb
leave
popf
pop
jbe
sbb
mov
sbbl
cwtl
adc
aad
loopne
jle
movsl
xchg
cmp
outsb
stos
cmpsb
xchg
out
sbb
jg
mov
mov
ror
cwtl
scas
cmp
fisttpl
pusha
mov
pop
or
loop
add
ja
aas
ret
and
loop
xchg
mov
movsb
xor
loopne
xor
cld
lret
das
rcrb
sub
call
mov
mov
pushf
xchg
jp
add
pop
cmpsb
mov
and
out
push
js
adc
push
enter
cmp
int
mov
xor
jo
subb
adc
ret
lods
sub
imul
sbb
out
hlt
ret
pop
adcl
push
sub
mov
xchg
repnz
xchg
lret
je
out
adc
mov
inc
sbb
push
mov
mov
sub
xchg
filds
sub
pusha
mov
add
lods
loop
mov
push
movsb
clc
push
cltd
out
dec
mov
clc
and
adc
adc
xor
stc
outsb
imul
and
push
xchg
inc
gs
movsb
sbbl
lock
fdivrs
cld
ret
xor
imul
push
push
dec
adc
push
imul
jnp
stos
add
nop
adc
xor
and
jle
js
and
icebp
inc
test
lret
jmp
lcall
sbb
cwtd
pop
xchg
xchg
pop
add
fwait
sbb
clc
aas
cld
xchg
xchg
mov
push
xchg
or
inc
mov
xchg
ss
sub
pop
loopne
repz
cmp
or
xor
ja
push
mov
jno
adc
dec
arpl
shrb
or
pushf
mov
or
sub
mov
fldl
fnstcw
inc
add
adc
mov
negb
sub
and
lea
loopne
xor
data16
jns
aam
jmp
pop
sbb
xchg
xlat
push
mov
test
mov
xchg
or
cld
xchg
pop
nop
leave
sbb
arpl
fsubs
adc
sub
cmc
adc
out
pop
test
fiadds
push
mov
xor
loope
push
lahf
xor
xchg
clc
jbe
sub
fnclex
in
nopl
and
push
loop
xor
inc
jb
movsb
divb
xchg
rolb
cs
inc
aad
adc
jno
fucomi
dec
lods
fwait
pop
orl
adc
leave
lds
nop
inc
mov
lret
std
fstpl
movsb
sbb
push
bound
push
movb
lcall
loopne
sti
ss
dec
and
adc
out
xchg
mov
pop
and
nop
clc
jp
mov
cli
aaa
xchg
cmp
mov
mov
jnp,pn
mov
in
mov
aad
jmp
and
push
mov
cli
xor
jmp
test
jecxz
sub
jge
adc
adc
inc
mov
pop
loope
imul
insl
cmc
cmpsb
aam
lds
cwtl
cld
stos
stos
out
push
pop
dec
in
push
and
cmp
push
jg
test
divb
out
xorl
lock
lds
xor
push
popa
jg
mov
lods
cwtl
test
inc
nop
addl
pop
in
add
cmp
clc
pushf
inc
pop
inc
mov
cmpsl
xchg
scas
inc
test
lds
imul
stos
lods
xchg
or
or
ja
stc
cmpsl
insl
cld
nop
repnz
cmpsb
add
push
sub
cwtl
add
xor
inc
fistl
imul
loope
jge
adc
and
sbb
dec
push
add
xlat
cmp
xor
xchg
xor
add
pop
add
out
in
cmpsb
mov
rcrb
push
fcoml
adcl
arpl
push
mov
es
push
jecxz
sbb
cltd
outsl
mov
lea
sahf
push
sahf
aaa
or
ljmp
ret
pop
popa
lds
xchg
dec
xor
outsl
int3
icebp
xchg
pop
xchg
pop
push
cli
dec
sub
mov
jno
fs
sub
mov
rolb
cmp
in
imul
mov
mov
jmp
lret
sbb
push
adc
xchg
ds
paddusw
lret
pop
idivb
cs
or
jecxz
xor
add
xor
mov
and
add
xchg
push
jno
or
test
jle
fimull
sbb
leave
or
add
cmpb
ret
pop
xorb
insb
xchg
pushf
out
cmpsl
mov
das
push
inc
xlat
mov
jl
pusha
add
mov
adc
or
mov
mov
fwait
cmp
in
or
loopne
sub
xchg
fbstp
inc
loop
or
cltd
lret
add
inc
jle
xor
jns
add
pusha
das
mov
cmp
in
es
lcall
ja
adc
mov
xchg
sti
rorb
pop
jmp
xchg
lods
test
jb
and
cld
dec
js
or
clc
stc
aaa
xchg
cmpsl
inc
scas
add
hlt
test
repnz
lods
inc
jl
push
xchg
xchg
mov
js
cmpsb
fldenv
sbb
dec
sbb
push
dec
sub
loopne
inc
push
mov
nop
mov
xchg
addl
mov
addr16
repz
and
sahf
mov
loopne
lcall
xor
jecxz
xor
cltd
shlb
out
and
jnp
xchg
ss
out
push
dec
sub
inc
fcomip
aaa
int
lahf
sub
adc
jmp
xorl
xchg
popa
mov
and
pushf
and
and
in
and
mov
test
mov
mov
push
adc
in
sub
lods
sub
sub
and
push
loop
bound
shrl
inc
aaa
rol
sbbl
cmpb
popf
and
jno
add
xchg
or
jge
fiadds
repnz
fmull
sub
daa
sub
push
adc
cld
pop
cmp
lods
inc
sbb
repz
mov
adc
or
subb
cld
push
call
aaa
lock
xor
mov
testl
xchg
adc
mov
scas
cmp
popf
stos
pop
ljmp
lret
mov
mov
fisubl
dec
push
cmpsl
push
or
inc
divb
cwtl
xchg
in
outsb
shlb
std
in
in
and
sbb
dec
xchg
fnsave
insb
popa
repz
inc
xchg
mov
jbe
add
mov
loope
inc
addr16
cmp
lret
add
decl
imul
lods
lock
in
jae
lret
jae
inc
ret
push
add
push
xor
roll
push
test
shll
cs
push
xchg
fcomps
lcall
int
sti
cmc
push
fisubs
and
xchg
mov
xor
push
push
shr
icebp
dec
sahf
cmp
cmp
push
lds
adc
lods
pop
popa
movsb
movsb
call
push
mov
mov
add
sbb
inc
jnp
int
mov
jmp
mov
lret
mov
adc
and
sbb
xchg
out
shrl
sbb
stos
fcoms
cs
mov
xchg
jno
mov
test
dec
mov
inc
ljmp
sbbb
mov
or
call
icebp
pop
iret
push
mov
cmp
mov
movsl
pop
inc
out
es
out
sti
into
or
push
int3
bound
xor
inc
mov
cltd
push
mov
cltd
xor
imul
xchg
mov
fcomps
jmp
mov
sbb
outsb
dec
repz
mov
mov
mov
jecxz
lahf
cmp
ljmp
fimull
ret
insb
mov
push
movsl
leave
loop
cmp
mov
sbb
mov
and
inc
add
push
int
and
clc
xchg
sub
mov
push
and
gs
out
mov
pop
mov
cmp
lret
pop
loope
sbb
xchg
push
push
mov
push
jmp
div
sbb
xor
rorl
jl
jnp
lcall
jp
and
sbb
int3
mov
inc
inc
addb
iret
std
cmp
add
lods
xchg
xchg
jg
scas
call
pop
cmp
sbb
imul
fildll
fimull
lds
mov
orb
dec
lcall
movsb
scas
mov
int
and
fldcw
cld
xchg
dec
idivl
loope
cmpsb
daa
dec
sbb
jbe
push
imul
sbb
leave
adc
mov
les
and
add
mov
aas
movsl
je
mov
push
dec
lods
daa
mov
push
xor
sbb
mov
fdivs
mov
inc
sub
push
inc
push
mov
dec
add
sub
or
ja
mov
bnd
fcmovnu
mov
fwait
cli
testl
jecxz
adc
dec
aaa
mov
and
sbb
pop
int3
lods
push
into
xlat
mov
rorb
add
push
dec
hlt
je
popa
dec
or
mov
insl
fsubs
je
add
les
fidivrl
jp
mov
cmp
mov
mov
pop
jl
or
pop
into
xchg
jmp
push
pop
push
xorl
ss
sbb
pop
push
dec
stos
mov
mov
sub
fidivl
push
cmpsb
xlat
into
pop
mov
adc
sbbl
push
ret
mov
stos
rcrb
cmp
pusha
inc
or
sbb
mov
mov
fstpl
or
rorl
mov
jge
rolb
aam
add
mov
outsb
push
cmc
xchg
adc
xchg
iret
mov
aaa
fadds
mov
fsubrs
adcb
into
push
pop
jmp
addr16
imul
push
arpl
dec
call
push
mov
or
push
fs
jae,pt
test
sub
push
testl
or
fsub
or
dec
mov
dec
pop
inc
ret
in
jmp
clc
cmpsb
dec
xlat
repnz
push
in
repnz
repz
inc
mov
int3
inc
imul
inc
inc
push
pop
jno
lods
rolb
std
jmp
mov
push
xor
mov
mov
repz
adc
mov
sub
hlt
push
xchg
mov
js
dec
les
push
js
sub
pop
das
imul
stos
sbb
scas
divl
test
xchg
jb
pop
mov
je
xor
push
mov
andb
out
aaa
icebp
add
rclb
mov
cmpsl
jge
jo
xchg
jg
push
xor
xor
les
pop
mov
mov
es
fisttpll
std
dec
adc
test
sti
or
push
lods
xor
sbb
xchg
adc
xlat
dec
lods
inc
sahf
rolb
sbb
xor
dec
jmp
stos
jne
push
lahf
lods
movsb
out
xchg
pusha
mov
adc
stos
push
sub
add
sbb
shrb
cld
in
cmp
mov
shl
dec
sub
and
push
or
xchg
jb
jo
sbb
fsubl
or
aaa
jno
je
rclb
bound
pop
cmpsb
add
mov
jg
sti
cmp
cmp
ljmp
out
mov
test
fnstenv
dec
push
call
test
stc
jg
mov
jnp
pop
xchg
gs
dec
and
sahf
push
push
add
scas
movsb
pop
mov
jp
xchg
es
push
xor
xchg
ficoml
dec
xchg
adc
out
stos
mov
nop
dec
mov
lret
adc
shll
enter
pusha
sbbl
sbb
inc
por
mov
lret
xlat
jg
add
adc
pusha
out
pop
out
mov
adc
les
imul
inc
rorb
test
xchg
in
out
dec
movsb
xchg
jno
or
adc
repz
sbb
xchg
orb
or
les
in
dec
movsb
fucomp
fdivrp
xor
divl
call
jge
fdivrs
icebp
mov
arpl
shlb
xchg
cmp
sbb
int3
xor
ficoms
and
mov
mov
push
fcomip
testb
sub
lods
sub
push
sub
push
fwait
mov
arpl
pop
lahf
mov
sbb
jle
repz
fidivrl
mov
aad
push
outsb
jno
in
or
inc
sub
ret
mov
enter
mov
in
push
mov
xor
jmp
out
rcr
aaa
mov
jne
add
test
ret
loop
movsl
popa
jo
divl
or
into
pop
pop
mov
loope
add
movsb
lret
negb
outsl
mov
loope
xchg
adc
repnz
pop
pop
imul
mov
pop
aam
flds
in
cmc
orb
cld
and
cmpsl
push
cmp
or
cmpsb
lret
mov
inc
ds
cmp
and
out
add
movsb
jg
push
mov
lahf
cmpsb
mov
pusha
xchg
or
mov
pop
mov
pop
or
mov
stos
shl
mov
pop
pop
mov
pop
jge
push
xor
enter
repz
cmp
roll
add
mov
imul
jbe
add
scas
imul
es
sbb
push
out
mov
repz
and
hlt
add
movsl
mov
arpl
popf
push
sbb
les
outsl
push
mov
pop
cmpl
sub
filds
lods
addr16
mov
faddp
jns
mov
rcrl
test
movsl
and
mov
sbb
xchg
sub
jb
clc
ja
pusha
das
mov
sbb
mov
inc
rcrb
jbe
and
and
or
lods
sub
pushf
pusha
mov
lret
push
mov
pop
dec
sub
push
data16
jns
lea
in
imul
loopne
jp
lea
sbbb
xor
pop
jns
movsl
and
pop
mov
mov
adcb
or
sub
jns
sub
repnz
dec
stc
pusha
bound
fcmove
mov
pop
aaa
jns
cmp
and
nop
test
mov
shr
stos
fsubl
push
jo
scas
add
cmpps
bound
xor
xchg
pop
mov
sub
mov
and
and
outsb
pop
test
jl
adcl
out
fists
mov
cli
sarb
test
ret
out
pushf
or
dec
xchg
sub
push
pop
pop
jmp
dec
in
dec
dec
es
test
dec
push
push
daa
lahf
loopne
in
sbb
es
lds
dec
inc
adcb
iret
mov
pop
sahf
cmpb
ret
clc
inc
mov
enter
lock
push
mov
dec
xchg
mov
cmp
cmp
adc
dec
andb
mov
and
cmpsb
pusha
mov
add
or
insb
iret
jns
push
inc
not
shrl
hlt
cmp
cmp
testb
cmp
ret
mov
inc
mov
lds
or
sbb
lea
xchg
or
mov
movsl
and
dec
idivb
stos
jmp
repz
dec
cli
cmc
mov
sub
clc
fstp
outsb
sub
dec
jl
xor
xor
ja
cmpsl
add
fwait
ljmp
mov
les
test
dec
xorl
repnz
pop
ret
mov
pop
cs
mov
xchg
xchg
xchg
jmp
push
cmp
add
adcl
push
insl
pop
fwait
pop
inc
es
adc
rcll
xchg
add
sbb
mov
sub
mov
inc
jp
jge
add
scas
test
inc
xchg
adc
arpl
add
mov
inc
jmp
test
outsl
in
repnz
mov
mov
mov
icebp
sub
fs
sahf
mov
jo
ret
inc
jnp
mov
mov
repz
cmpsb
push
xchg
cmp
outsb
sub
dec
jne
out
movsl
add
sub
pop
std
jp
into
jge
push
push
push
jae
pop
xchg
sbb
push
shr
pop
outsl
in
out
sub
in
and
mov
movsl
lret
les
cmc
and
test
ljmp
fistpl
roll
inc
testl
scas
daa
std
jg
dec
gs
clc
add
inc
and
out
arpl
pop
dec
movsl
and
mov
inc
stc
mov
jle
int3
push
sarb
mov
lret
or
and
pop
mov
out
stc
dec
jbe
xchg
out
pop
loope
decl
inc
sub
mov
cs
lods
add
clc
inc
or
lcall
pop
mov
xchg
movsl
mov
push
stos
and
sub
lock
or
or
scas
mov
leave
adc
mov
insb
out
andl
sub
inc
cmp
mov
cltd
pop
in
ret
rcr
adc
mov
or
adc
and
shrl
repz
xchg
xchg
mov
adc
fcomp
femms
and
out
rcr
or
je
outsl
inc
aas
jecxz
inc
sar
testl
loop
ret
or
jl
mov
out
shll
lcall
pop
inc
dec
setle
pop
mov
add
push
or
dec
cmp
pushf
jp
ljmp
daa
xchg
test
fbstp
stos
mov
cmpsb
jg
xor
push
cmp
nop
sub
outsl
es
stc
xlat
cmp
mov
stos
pop
aaa
xchg
pop
jp
jmp
xchg
sbb
sahf
xor
inc
subl
push
inc
sub
lods
popa
scas
or
icebp
mov
sbb
clc
xchg
std
or
aas
sarb
add
pop
push
mov
xchg
mov
pop
jl
cmpsl
sub
into
outsb
cmp
mov
mov
mov
or
mov
jl
insb
pop
repz
fsubrl
out
or
popa
sbb
dec
and
in
sbb
in
addr16
push
inc
ds
lahf
aam
inc
cmp
mov
cmp
push
out
or
push
jl
dec
dec
repz
ficompl
test
es
mov
xchg
pusha
add
mov
mov
sub
cli
fs
fistpll
mov
rclb
xor
dec
shll
nop
psrld
jmp
lcall
pop
mov
push
dec
and
mov
sub
ljmp
lahf
fcmovb
add
das
push
popf
push
mov
rcr
sbb
cmp
cmp
sbb
icebp
xchg
rcll
sub
and
imul
aas
mov
int3
mov
push
andb
ljmp
into
xchg
cmpsl
pop
lds
sub
out
int3
pop
adc
rorb
mov
push
add
push
inc
cltd
sub
adc
out
scas
cmpsl
and
cmp
push
inc
cld
xor
mov
xor
cmpsb
fs
out
js
cmc
cltd
pop
orl
push
cmp
sbb
push
mov
negb
push
rorb
mov
add
cmp
pop
mov
lcall
push
sbb
inc
cmp
push
cltd
add
add
mov
negb
in
psllw
scas
pop
arpl
pop
fcmovu
into
arpl
bound
ljmp
jecxz
int3
pop
stc
sbb
dec
mov
mov
mull
enter
inc
xor
fwait
rcll
in
mov
add
stos
out
and
mov
xchg
mov
xchg
cmp
stos
or
jbe
imul
xchg
cwtl
or
xor
test
mov
mov
icebp
maxps
mov
ja
mov
call
popa
and
test
dec
pop
mov
inc
js
xor
test
mov
cmp
lds
jmp
out
lahf
xor
fdivs
mov
imul
in
ficomps
jp
cmpsb
aad
outsl
jp
xchg
xchg
mov
mov
ss
xchg
jne
sbb
or
int
jne
cli
popl
stc
popf
mov
in
push
out
cwtl
ret
and
xchg
dec
lea
cmp
sarl
add
test
sub
mov
es
mov
out
insl
dec
inc
aas
ret
push
hlt
xchg
adc
cmp
aam
jmp
test
out
insl
push
test
xchg
outsb
xchg
loope
mov
icebp
shrb
cmp
in
dec
sbb
add
stos
out
faddl
xchg
clc
loop
and
mov
outsb
xor
jmp
xlat
mov
fistl
adc
outsb
scas
mov
mov
fcmovb
adc
or
push
adc
cwtl
lcall
movl
pop
int3
mov
and
sub
fstp
jbe
rol
xor
scas
js
mov
outsl
sbb
shll
mov
add
cmp
jecxz
or
ret
push
pusha
mov
sbb
les
fcmovnb
into
in
inc
mov
test
nop
int3
pushf
add
aam
in
adc
repz
mov
cmpsb
in
hlt
loop
inc
cmp
push
rorb
movw
pushf
cmp
sbb
bound
pop
sub
push
and
ftst
jae
sub
adc
jae
scas
hlt
inc
push
es
jno
add
sbb
adc
mov
flds
pushf
xlat
mov
mov
push
push
add
je
hlt
adc
cmp
stos
push
cmpsl
jmp
adc
movsl
inc
sub
pop
sbb
dec
bound
add
cmp
imul
std
sub
or
stos
sbb
rcrb
mov
xor
mov
cmpsb
and
or
jecxz
arpl
aam
push
cwtl
daa
push
fbld
xor
int
add
push
mov
negb
sub
nop
xchg
mov
add
aas
negl
pop
testl
insb
xchg
push
sub
ss
xor
int3
mov
mov
mov
jecxz
int3
push
push
ljmp
mov
hlt
incb
out
das
stc
push
call
in
lahf
lds
fisttpll
imul
shll
orb
hlt
jecxz
nop
ss
push
or
sub
sahf
ficoms
mov
pcmpgtw
inc
jb
jo
pop
pop
mov
enter
sub
xchg
ror
in
adc
mov
ret
mov
std
dec
ja
dec
mov
in
fstpl
pop
fnstenv
xchg
push
sub
dec
pop
insb
xor
mov
sub
aaa
mov
push
pusha
mov
lock
jecxz
ja
jle
or
iret
sbbl
pcmpgtw
add
addb
fstps
lret
sub
bound
int3
push
add
pop
nop
cmp
mov
cmpl
mov
mov
xor
pop
xchg
dec
fistl
loope
ss
rolb
aam
inc
lods
icebp
pushf
in
jne
es
movsb
mov
stc
rclb
or
xlat
movsl
fs
inc
xor
incl
pop
jl
pusha
loope
push
sbb
incb
ret
pop
jnp
test
cmpsb
jae
inc
or
outsl
sub
cmpsb
inc
insb
or
push
push
xchg
lods
inc
gs
nop
mov
mov
imul
and
pop
mov
data16
pop
jge
stos
cmp
sub
scas
mov
push
jns
dec
outsb
rorb
push
aam
and
shlb
stos
mov
dec
testb
mov
js
sbb
jecxz
aaa
xchg
std
out
cs
fdivl
daa
adc
test
mov
push
shll
jmp
mov
ss
mov
and
jp
or
test
push
popf
mov
sbb
daa
jge
popa
cmp
imul
aam
xchg
aad
sti
je
dec
add
fimuls
xchg
call
push
dec
stos
in
and
xor
ret
pop
xor
int
cmp
fwait
push
lret
mov
nop
xor
jnp
jp
dec
and
sbb
popl
mov
dec
pop
xchg
dec
inc
lock
sub
clc
push
sbb
test
orb
into
push
lahf
cmpl
mov
jecxz
cmpl
fsubl
test
cmp
pop
cwtl
pop
lea
ja
adc
lods
dec
ss
int3
cmp
mov
xchg
loop
sti
or
outsl
mov
lock
sbb
push
bound
das
dec
add
xor
push
gs
clc
enter
pop
mov
push
inc
rep
jnp
je
push
adc
push
xchg
scas
mov
pop
push
dec
xor
jmp
xor
or
dec
fs
cwtl
nop
push
int3
lock
jl
push
pop
arpl
or
push
jb
mov
stos
pop
cltd
in
mov
aam
clc
cmpsb
fistpl
add
jne
sti
mov
dec
inc
inc
mov
add
xorl
movsl
xchg
std
cli
dec
pop
arpl
mov
lret
sbb
mov
pop
add
xchg
lods
mov
jb
ss
mov
xchg
int
popa
push
pop
add
repnz
popa
and
push
push
jae
sbb
add
aas
adc
adc
repz
adc
jl
test
ljmp
pushl
mov
pop
dec
stos
sbb
clc
push
or
sbb
lahf
adc
daa
cmp
sahf
cs
repz
jo
xchg
out
cmc
icebp
icebp
fwait
sub
xchg
push
cltd
ud2
jnp
fmuls
push
pop
or
jbe
cmc
insl
call
gs
add
repnz
idiv
pushf
xchg
out
mov
add
dec
icebp
pop
imul
mulb
xchg
in
mov
xor
js
jl
scas
mov
pop
ret
ljmp
jne
int3
mov
iret
test
and
add
shrl
sub
jmp
insl
xchg
push
ds
test
sbb
push
cmpl
or
out
dec
clc
inc
push
mov
adc
fadds
dec
stos
shr
xor
or
adc
negl
add
push
pop
movsl
sub
dec
push
enter
mov
fs
mov
les
ret
cmp
fiaddl
jp
pop
bound
nop
xor
inc
enter
hlt
int
aam
inc
mov
and
mov
mov
call
stc
jnp
mov
aam
fidivs
popa
mov
dec
fcmovb
popf
push
leave
adc
jp
scas
scas
vpmuludq
ss
or
mov
mov
cmc
out
repnz
jne
orl
mov
sbb
dec
imul
ja
jno
cmc
inc
jl
inc
bound
ret
hlt
or
scas
aam
call
mov
daa
mov
lcall
mov
sahf
daa
repnz
loope
jb
sub
add
lcall
movl
out
cmp
jge
inc
lret
or
xchg
xor
fstpt
pop
mov
pusha
addb
add
and
pusha
fcmovbe
test
jae
imul
jg
push
inc
or
popa
popa
mov
cmp
lret
cli
mov
jecxz
mov
sbb
fisttpll
mov
cltd
dec
pop
jb
aaa
pop
icebp
cmp
push
mov
inc
and
jo
or
inc
lds
push
inc
fwait
jno
add
es
mov
ds
cmpsl
push
mov
jg
iret
icebp
sub
fnstsw
xor
in
pop
push
movsb
call
or
mov
and
stos
stos
mov
sub
inc
cli
xor
mov
cmp
adc
sub
xchg
push
int
pop
clc
cmpsb
mov
jo
jg
clc
out
pop
jo
xor
mov
xor
outsb
mov
pushf
inc
imul
sbb
call
xchg
cmpsl
lods
icebp
gs
mov
add
ja
out
ljmp
mov
or
push
and
ds
mull
jno
mov
scas
clc
sbb
and
sub
outsb
pop
mov
lret
pop
insb
fwait
popa
or
cltd
sbb
push
fcomps
sbb
mov
mov
pop
aas
int3
push
div
out
cmpb
out
dec
in
fistps
imull
data16
es
je
mov
push
rcl
outsb
mov
vpunpckhbw
loopne
push
adc
rorb
jmp
js
sbb
bound
add
adc
sbb
jmp
pop
aam
pusha
mov
mov
inc
aas
pop
and
pop
lods
mov
iret
push
push
in
jl
cmp
test
jno
icebp
out
ja
jns
cmp
xchg
rolb
pop
loopne
daa
xor
jo
lea
xorb
loopne
push
add
mov
cmp
popa
test
icebp
mov
mov
andl
rcl
xchg
dec
mov
jno
arpl
sbb
jb
pusha
xor
dec
adc
and
pop
ret
mov
into
push
jle
data16
push
adc
scas
movsb
shll
rorl
xor
dec
xchg
xor
ret
loop
out
call
aam
clc
stos
xor
negb
fildl
jge
addr16
adc
sarl
or
cli
sti
shlb
popf
dec
cld
lret
cli
xlat
hlt
and
inc
in
push
mov
fmuls
je
xchg
ja
mov
pop
jg
lods
imul
in
int3
pop
popa
cmpsl
push
sbb
out
mov
and
mov
pushf
inc
aaa
das
repz
fisubrl
arpl
out
push
lods
mov
mov
movl
or
test
fs
movsl
add
nop
imul
mov
cmpsb
push
lods
sahf
lods
fucom
je
xchg
scas
jbe
add
sub
pusha
or
std
arpl
sbb
and
mov
lret
cmc
cmpb
int
push
dec
rclb
jp
sbb
mov
jg
add
outsb
rolb
push
cmp
sub
mov
stc
cld
sahf
cmp
insl
dec
movsb
adc
inc
loopne
jle
stc
jno
stos
mov
or
adc
addb
loope
mov
cmp
js
outsl
sbb
inc
xchg
push
inc
mov
pop
cld
test
mov
xor
repnz
out
adc
ljmp
data16
xor
or
loopne
jnp
adc
adc
aad
add
sub
lock
inc
push
repz
xor
mov
mulps
dec
inc
aaa
push
sbb
sub
sti
cmp
loop
inc
clc
xor
add
sub
sbb
sub
dec
xchg
test
push
and
insl
sbb
es
jp
pop
in
sbbl
adc
push
cmpsl
jnp
cmpsl
add
sub
cmp
push
push
cmp
shrd
adc
cmp
mov
adc
pushf
xor
mov
dec
lahf
hlt
pop
inc
jl
xor
into
mov
mov
fdivrl
std
add
cmp
xor
mov
aaa
pop
cmpsb
test
into
je
fwait
sub
mov
fcmovnb
add
jmp
shll
out
sbb
jbe
mov
scas
mov
or
mov
es
ds
adc
pusha
aam
mov
jno
fdivrs
shrb
push
lahf
xchg
call
in
mov
rcrl
adc
jnp
or
clc
lock
sub
iret
sub
push
xchg
popf
xor
aad
std
les
imul
movb
mov
inc
test
jl
lret
mov
and
pop
cmc
xor
or
clc
adc
add
xchg
mov
mov
es
loope
popa
mov
mov
inc
pop
lods
fldt
mulb
push
mov
xor
je
shll
jp
xor
and
mov
xor
jl
dec
push
jae
mov
sbb
ljmp
cmp
cmp
sub
xchg
xchg
jb
pop
testl
loope
jns
fidivrl
pop
popf
push
fisubl
xchg
movsb
xor
cli
mov
dec
xor
push
xor
push
scas
xor
hlt
rorb
shl
cmp
jno
push
in
repz
les
or
pop
lret
and
arpl
nop
pop
gs
fistpl
sub
add
inc
mov
mov
lods
insl
pop
cmpsb
lahf
xchg
push
adc
add
cli
aam
lods
pop
pop
movl
sub
iret
inc
fiadds
sub
dec
or
inc
iret
mov
pop
jae
scas
sbbb
mov
mov
or
cmc
cmc
jp
xchg
push
adc
mov
push
sbb
pop
mov
das
call
add
fildll
loop
aas
jae
mov
jmp
int
jle
test
xor
adcl
add
xchg
and
push
aaa
jle
outsl
cmpsb
and
enter
lret
mov
hlt
mov
shl
push
addr16
cld
mov
fs
xchg
test
push
fs
mov
jne
ret
aaa
pop
ja
lcall
std
cwtl
int
adc
push
cmp
adc
push
mov
push
mov
xor
mov
pop
repz
rol
push
mov
push
lods
pop
cwtl
xchg
ja
pop
cld
repz
xor
mov
hlt
test
ret
loopne
das
add
icebp
dec
cmp
mov
shrb
sub
mov
aad
cmpsl
ljmp
ljmp
aaa
mov
push
push
out
cmp
aam
out
cwtl
and
mov
testb
push
fbld
lea
sarl
nop
pop
sub
add
xchg
pusha
lods
xchg
jno
test
test
push
not
jb
enter
popa
inc
pop
dec
inc
mov
fmul
jl
stos
gs
mov
aaa
lock
pushf
dec
sarb
sub
pop
in
fwait
inc
arpl
stos
mov
and
aaa
xacquire
mov
stos
sub
fcmove
add
push
ret
jmp
imulb
lcall
xchg
mov
pop
ja
xchg
sbb
cmp
cmp
repz
loop
add
popa
xchg
jns
loop
loope
sti
pop
adc
cmp
in
dec
mov
je
mov
ja
lds
dec
daa
cmc
xor
and
inc
cmp
adc
jae
sub
mov
cmp
cmpsb
fiadds
pop
cmpl
dec
stc
test
int3
sub
cmp
dec
push
pop
fstpt
call
jg
jecxz
sbb
mov
inc
jb
jl
jae
rorl
jmp
js
mov
in
xchg
bound
loopne
and
leave
mov
cmp
push
jae
cmp
cmp
xor
jmp
or
push
repnz
pop
mov
iret
movsb
jns
jno
push
mov
mov
int3
xchg
sbb
ss
pushf
mov
fcmovnb
xchg
out
stos
pop
inc
push
mov
push
movsl
jo
int3
aas
shrl
test
test
mov
repnz
jo
xor
push
es
mov
mov
mov
icebp
inc
aaa
mov
fmulp
stos
call
push
scas
mov
lods
sub
fwait
insl
insl
in
xor
popf
pop
repz
sub
icebp
lahf
jb
mov
cmp
test
sbb
ror
add
scas
out
lea
aas
sarl
pop
subl
push
inc
cmp
xor
jbe
pop
aad
ljmp
lock
fxam
and
fistps
mov
ret
cmp
xchg
or
jmp
push
pop
adc
movsl
pop
mov
cmp
ss
lods
mov
out
xor
in
adc
jg
mov
push
in
adc
inc
mov
xchg
adc
add
mov
pop
xlat
repz
sbb
aam
movsl
xlat
adc
xchg
or
jne
push
pop
rol
or
call
mov
shll
fs
sbbl
adc
imul
stos
mov
xchg
mov
fs
and
ljmp
add
inc
sahf
int
sahf
xlat
outsb
lahf
es
xchg
cmp
sub
mov
push
inc
movsb
push
or
mov
sub
jo
icebp
jl
ds
mov
xchg
and
shlb
sub
mov
mov
dec
inc
or
adc
push
lcall
jnp
sti
or
push
xor
outsb
adc
sbb
pop
inc
movsl
clc
filds
aad
popf
adc
push
insl
aad
cmpb
cmp
scas
xchg
cmc
in
sub
push
cmc
xchg
loope
or
jg
pusha
fcmovnbe
push
push
je
push
out
fnsave
jecxz
push
jae
out
and
sbb
mov
adc
pop
sub
std
lret
or
mov
add
je
xor
mov
aam
fldcw
mov
mov
or
stos
xchg
in
cmp
daa
cmpsb
loope
xchg
xchg
std
shll
pop
push
push
movsb
and
shrb
aaa
stos
int
les
jno
imul
jl
lahf
or
icebp
xchg
ret
loop
jmp
or
loopne
out
jb
xor
cmp
mov
lods
cmpxchg
and
rcrb
and
mov
add
dec
fnstenv
mov
ja
xor
out
outsl
roll
stc
add
enter
mov
xchg
stos
lret
test
pushf
in
jp
mov
sbb
lea
dec
adc
dec
mov
inc
cmp
roll
in
movsl
mov
and
dec
push
out
push
lea
lret
loop
int3
sub
popl
mov
fs
or
dec
jecxz
mov
jmp
adc
stc
add
sub
dec
push
push
or
fildll
dec
sub
xchg
dec
in
iret
les
fsubl
gs
data16
adc
bound
mov
sarb
mov
mov
and
mov
sbb
inc
jp
push
iret
sarb
pop
jecxz
xor
and
xor
lods
jg
sbb
inc
jnp
sbb
mov
fldl
lret
inc
pop
enter
divl
popf
pop
loop
cmc
lahf
cmp
jg
out
jmp
mov
xchg
inc
shrb
push
out
test
pop
es
push
cmpb
mov
xlat
cmp
dec
cmpsl
pushf
adc
lret
or
inc
pop
cmpsb
nop
test
pop
mov
mov
clc
fadds
push
sub
and
into
mov
jmp
sbb
jl
lock
mov
xchg
leave
scas
xlat
sti
movsl
leave
jb
mov
imul
xchg
dec
in
fmull
fisubs
mov
shll
ret
dec
pop
fisttps
daa
jecxz
int3
std
push
rcrb
xor
dec
xor
xor
push
and
mov
add
push
jp
mov
mov
bound
fwait
hlt
outsl
subl
fcomip
addr16
dec
aam
iret
jle
call
adc
jno
mov
jge
xchg
cwtl
imul
fistps
test
xchg
push
lods
jmp
lock
nop
imulb
fcmovnbe
add
add
scas
aas
out
jb
aad
or
dec
pop
rclb
pusha
data16
and
out
xor
mov
outsl
montmul
cmpsb
mov
popa
test
std
or
push
ljmp
pop
mov
test
stc
out
jecxz
mov
addr16
mov
test
and
xchg
cmpsl
sub
mov
xchg
call
cmp
pop
leave
icebp
dec
push
mov
into
xchg
push
cmp
cld
repnz
pop
scas
push
xor
das
nop
stos
mov
sub
insb
aad
inc
in
mov
and
andl
sbb
xchg
pushf
loopne
ficomps
stc
icebp
push
mov
stos
lret
xchg
jp
push
pop
dec
sub
jns
mov
push
sahf
jp
cmp
push
xchg
sub
mov
cmp
test
fwait
sbb
rcrl
mov
xchg
mov
addr16
cld
dec
jp
mov
out
sub
and
xorb
in
push
lock
jmp
scas
xor
adcb
xchg
js
or
lea
jge
jge
cmp
or
xor
movsb
outsl
icebp
ficomps
ficomps
mov
sti
add
xchg
cs
pop
push
cmp
xchg
cmp
in
ficompl
scas
fchs
add
jne
or
loop
push
xchg
add
ljmp
pop
add
dec
pop
jmp
cmp
div
jb
push
add
scas
push
mov
cmp
je
cmp
packssdw
stos
stc
cli
and
xor
pusha
ja
test
mov
imul
fucom
ljmp
adc
xchg
out
sub
rolb
imul
int3
arpl
cmc
or
sub
in
add
sbb
ljmp
push
popf
and
gs
popf
dec
xor
cmp
push
subl
xchg
adcb
sahf
movsb
xchg
xor
dec
xchg
rol
sub
mov
repnz
bsr
pop
ret
mov
pop
or
push
sbb
xor
sbb
xchg
jmp
in
out
sbb
dec
sub
cmc
iret
in
jmp
sarb
je
mov
jl
cli
jae
mov
inc
jg
pusha
ret
inc
jle
adc
adc
pop
into
test
repnz
xchg
into
into
cmpsb
iret
std
or
call
xor
int3
dec
xchg
addr16
test
push
inc
out
jecxz
lcall
push
ljmp
nop
popf
cmpb
or
std
or
jb
push
stos
jge
ficoms
fstpl
and
mov
xchg
pop
stc
leave
pop
and
mov
js
lods
icebp
fwait
dec
outsl
repnz
cmp
popf
pop
mov
adc
mov
je
adc
adc
and
pusha
push
push
pop
xchg
test
inc
jbe
in
andb
daa
cmp
sub
aas
xor
dec
imul
or
and
decb
and
push
cmp
lods
inc
push
xchg
je
mov
jb
sbb
mov
cltd
rorb
cmp
mov
xchg
mov
rcll
nop
fbstp
test
sbb
lahf
xchg
inc
mulb
push
sbb
add
imul
mov
mov
pusha
enter
cmp
cs
fdivrl
cld
mov
adc
cmp
lret
push
xchg
xor
les
inc
loope
xchg
xor
sub
xor
scas
das
push
pop
cli
pop
mov
sahf
xchg
leave
jbe
scas
out
shl
fnsave
lret
iret
insb
push
push
inc
xchg
or
out
lds
scas
in
inc
jecxz
sub
insl
nop
test
cwtl
push
shlb
jp
adcl
popf
cmp
jl
push
stc
aam
xchg
fsubs
pop
mov
into
loop
fiadds
inc
movsl
push
sub
sub
mov
ret
push
mov
out
jmp
sbb
xchg
mov
subb
ljmp
jp
push
repnz
inc
notb
pop
ds
imul
lret
adc
xchg
mov
mov
scas
mov
jmp
mov
mov
scas
insl
retw
lea
and
mov
xchg
mov
add
mov
adc
and
es
mov
cmp
mov
test
and
and
int
out
sbb
or
shll
mov
ffree
or
cmpsb
jno
fbstp
dec
out
inc
outsl
popa
push
lahf
dec
or
pop
add
jb
test
mov
in
mov
dec
in
mov
adc
gs
adc
scas
mov
inc
hlt
dec
xor
inc
aad
and
scas
rcr
in
pop
outsb
jp
pop
js
mov
sbb
repnz
in
xor
cmc
pop
add
jnp
cmp
mov
scas
es
movsb
pop
pop
xor
dec
pop
andb
and
pop
mov
cltd
rorb
lds
mov
jno
xchg
pop
pop
clc
sbb
cmc
shll
cmpl
stos
ret
test
push
fadds
push
ret
fimuls
stc
adc
in
add
pop
pop
clc
icebp
test
and
and
pop
or
adc
mov
jg
mov
mov
mov
mov
cmpsb
pop
jmp
pop
out
scas
ss
icebp
xchg
cmc
pop
adc
xor
adc
inc
push
int
and
xbegin
andl
std
shll
lcall
add
push
lock
cli
jb
js
dec
inc
add
shl
pop
shlb
dec
xchg
jge
dec
add
jmp
stos
push
cmp
fstpt
xor
mov
mov
cmpl
rol
push
negl
push
cld
jbe
lock
enter
in
cmp
sub
test
outsb
xor
test
scas
test
jo
cmp
ds
xchg
sbb
rorb
xchg
fldcw
sub
lods
pop
pop
adc
int
jnp
mov
decb
repz
repnz
sub
scas
jg
and
loope
outsb
pop
ffree
add
jb
xchg
loopne
cmp
lea
jne
mov
xacquire
in
addr16
push
inc
pop
sub
jne
ljmp
jg
push
adc
mov
decl
xchg
rol
out
ss
add
mov
std
mov
loop
iret
cld
ret
or
push
xchg
lock
add
xchg
mov
movb
dec
push
mov
imul
push
test
fistl
mull
and
cmpsl
nop
add
call
mov
xchg
rcrl
xor
test
test
mov
lahf
imull
data16
jbe
inc
adc
lds
movsl
xor
cs
addr16
sbb
scas
sbb
arpl
hlt
mov
xchg
xchg
or
cmp
adc
cltd
cli
mov
shl
or
mov
fldl
nop
repz
push
insl
scas
or
cmp
mov
inc
pop
setbe
push
cmp
lahf
jo
xlat
scas
lock
stos
and
cs
jbe
adc
sub
cli
or
stos
fmul
loopne
pop
push
cmpsb
out
shll
bound
push
mov
rcrb
out
dec
js
arpl
push
adc
addl
stc
into
pop
and
xchg
inc
aad
test
clc
jae
xchg
inc
orl
lods
stos
jp
fistpll
xchg
sbb
xor
mov
negl
push
stos
test
mov
pop
pushf
test
mov
inc
dec
mov
inc
adc
out
xchg
dec
rolb
jae
fwait
std
cs
cmp
cwtl
rorb
jge
js
xchg
je
push
sbb
je
fsubs
ret
ljmp
fwait
cmp
dec
xchg
loope
scas
gs
scas
cmp
movups
jle
cwtl
fsubl
or
inc
test
jg
cmp
jno
in
or
mov
das
mov
lret
pop
out
add
dec
nop
loope
cmp
hlt
mov
push
insb
mov
cli
fists
sbb
call
or
and
shrb
inc
add
out
sbb
rcrl
adc
fdivrl
cmc
adc
dec
test
cmp
mov
jo
mov
dec
arpl
jnp
mov
stos
mov
outsl
idiv
mov
inc
push
add
mov
sub
jns
pop
xchg
aas
mov
jecxz
sub
xchg
jnp
sbb
dec
sti
movsl
fnstcw
adc
popl
mov
push
int3
add
subl
sub
pusha
stos
je
push
push
pop
outsb
xchg
cmp
test
push
lods
in
pop
jl
enter
mov
cmp
outsl
lods
xor
push
sbb
add
addb
aas
dec
mov
imul
dec
and
cltd
aam
dec
fisubrl
and
shll
jno
orb
testb
mov
rcll
mov
add
sbb
shll
es
movsl
lock
mov
add
loopne
xchg
lds
imul
jae
sub
cld
notb
jge
js
pop
inc
sar
ja
addr16
jmp
mov
or
data16
fs
ja
stc
jno
xchg
frstor
lret
in
arpl
and
mov
outsl
dec
pop
inc
dec
inc
sub
mov
jbe
adc
sub
xrstor
jmp
adc
pop
in
and
repnz
lea
xchg
sbb
cli
and
pop
insb
stc
adc
adc
lock
sbbl
push
outsb
int3
xor
cmpsb
mov
push
bound
xchg
gs
dec
scas
or
sbb
push
adc
add
push
inc
push
test
sarl
inc
sahf
jb
shlb
xor
adc
shll
aas
push
inc
add
inc
addb
popf
or
add
dec
sahf
mov
mov
xchg
adc
gs
adc
clc
imul
adc
les
paddq
jo
or
push
dec
lock
add
xchg
xor
sub
or
mov
int
mov
xor
and
dec
test
dec
and
out
out
mov
stos
mov
mov
push
shl
xchg
nop
jmp
and
push
inc
test
add
les
mov
dec
ds
push
push
sub
int3
add
in
cmpb
cmpsb
push
add
cld
cmp
push
lret
rcr
pop
aad
ja
cmc
pop
xor
sbb
dec
int3
push
jl
movsl
or
inc
inc
push
popa
mov
enter
mov
cld
or
hlt
jns
and
cmp
aaa
lods
inc
popa
pop
xor
insb
push
push
inc
rcrb
fsubrs
dec
push
data16
shrb
addb
or
cmp
xor
popa
xchg
into
out
inc
sbb
xchg
mov
pmovmskb
je
mov
bound
bound
roll
les
loopne
jle
mov
adc
xor
push
daa
repnz
fisttps
in
flds
dec
jle
mov
dec
jns
std
scas
jb
int3
adc
adc
testb
rcrb
adc
jge
xor
xor
sbb
jmp
mov
or
mov
mov
pop
lods
out
dec
lods
fstpl
sahf
push
cmp
xor
sub
mov
inc
shrl
pop
test
xchg
mov
sbb
add
adc
insl
pushf
test
test
jecxz
sub
ljmp
cmp
stos
push
scas
pop
rcrl
cld
xchg
lods
lods
aam
nop
dec
loopne
mov
add
pop
push
xchg
out
orb
xor
cmp
dec
mov
fildll
jae
add
lods
inc
mov
sub
dec
stc
push
cmp
loope
sarb
cwtl
xor
xor
add
outsl
jo
mov
mov
lret
leave
ljmp
or
xor
and
cmp
int
mov
mov
fnstcw
pop
insl
xor
lret
mov
cmp
xchg
jbe
lcall
std
add
addl
mov
js
bound
mov
dec
pop
movsl
fnstenv
jno
xchg
cld
test
push
ds
aaa
lahf
popa
pop
bndldx
pop
in
dec
jg
loope
mov
es
sbb
aam
stos
jge
insb
and
stos
into
and
pop
fbld
mov
cwtl
sahf
lea
mov
xchg
inc
aad
jecxz
and
cld
call
mov
xorb
popf
mov
cmc
insb
or
sbb
movsl
insl
testb
mov
in
call
ficomps
ja
xchg
test
pop
clc
pop
lcall
mov
mov
mov
lds
mov
cmp
mov
test
jle
mov
stos
sahf
int
lret
mov
das
push
sub
jp
and
roll
or
dec
test
or
pushf
imul
out
out
mov
pop
outsl
fdivrs
push
xchg
in
stos
nop
cmp
cs
xchg
les
mov
mov
or
sub
inc
jp
daa
and
loop
repz
mov
icebp
stc
dec
push
imul
mov
lds
dec
sbb
inc
dec
fs
aam
movsb
jo
or
cld
nop
push
enter
mov
repz
mov
nop
xor
shlb
sbb
popa
repnz
fs
divb
mov
xchg
movb
or
jo
mov
imul
adc
arpl
je
xchg
sbb
lahf
lea
mov
fs
out
jne
push
mov
imul
cmp
pop
lock
mov
dec
mov
scas
ret
adc
in
jne
mov
xchg
es
mov
cmp
cmp
hlt
push
loopne
out
sarl
jo
loopne
incl
xchg
mov
xchg
adc
insb
stos
push
adc
inc
push
jno
stc
ljmp
arpl
hlt
outsb
movsb
pushf
movsl
outsb
divl
inc
pop
out
inc
dec
inc
xchg
mov
or
in
sbb
orb
orl
jo
sar
cmovb
jno
cltd
xlat
jg
aam
shl
xchg
mov
push
add
pushf
pop
jp
mov
mov
lods
icebp
hlt
xor
dec
mov
push
arpl
pushf
mov
xorb
addr16
rolb
or
inc
mov
or
jo
cwtl
sbb
cs
mov
dec
mov
mov
je
mov
ja
ljmp
and
les
cli
dec
inc
push
fmul
test
sbb
jg
jge
daa
sti
xlat
sub
fnstsw
je
out
lcall
scas
push
in
and
outsb
inc
lock
lods
dec
scas
repnz
adc
pop
cld
mov
scas
cld
pop
jb
mov
int
in
loope
mov
cli
or
dec
pop
add
call
out
xchg
inc
pop
scas
xchg
fstps
xor
mov
mov
cmp
mov
push
jnp
inc
call
jns
cs
outsl
push
add
les
sbb
and
add
cmp
outsl
fisubl
cltd
test
rcr
jo
xor
mov
mov
shrl
mov
pushf
add
loopne
fiaddl
xor
pop
sbb
out
and
fldl
stos
pop
pop
lods
out
movsl
jecxz
fldenv
loope
or
aad
icebp
ds
and
lock
xor
push
pop
cmp
push
movl
out
iret
test
aad
mov
inc
aad
sbb
jl
fwait
adc
and
repz
leave
ds
xor
cmp
mov
lret
and
xor
pop
xor
mov
cmp
roll
in
ds
jmp
fisubrs
sarb
fcmovbe
cmpsb
cmpsb
into
aad
dec
fcomip
xor
inc
scas
movsb
scas
bound
pop
negl
sbb
lea
shrb
cli
js
adc
or
mov
mov
fnstcw
xchg
push
fistl
in
in
dec
sub
stos
pop
lahf
movsb
lods
xchg
in
jle
mov
mov
cs
in
sub
fcmovnbe
popf
xor
out
jo
mov
inc
fiadds
imul
movsl
mov
ja
imull
mov
clc
fs
imul
cmc
popl
mov
shlb
out
test
gs
and
mov
pusha
nop
loope
xor
andb
pop
out
adc
inc
addr16
rcll
rorl
jge
aaa
adc
push
aam
mov
stos
add
movsb
jg
cmp
sub
dec
rcll
adc
dec
adc
jne
insb
pop
cmc
ss
in
ja
decb
mov
addl
jnp
jge
bnd
shrb
inc
iret
imul
pop
sub
jne
pusha
push
jp
cmp
and
pop
iret
push
je
jb
loope
push
lods
test
es
repz
fwait
pop
or
sar
lds
out
adc
mull
inc
xchg
dec
mov
and
rcl
inc
scas
mov
add
icebp
fadd
mov
repnz
pop
pop
imul
lea
loop
push
mov
pop
sbb
mov
pop
jle
cwtl
lock
out
into
add
push
sbb
pop
leave
int3
outsb
or
in
fwait
inc
push
out
mov
sub
jbe
adc
cmp
das
lock
pop
adc
les
push
xor
call
out
cmp
in
xor
fwait
cli
sub
arpl
push
stc
or
in
and
movw
pop
loope
adc
sarb
out
cli
shll
subl
cwtl
mov
in
lahf
sub
int
enter
push
add
ret
ds
test
push
cwtl
add
or
pop
rcrl
mov
and
cmc
inc
pop
nop
fmuls
mov
mov
in
xchg
sub
imul
fcmovb
ficoms
inc
jmp
stc
cmp
loopne
lcall
int
and
les
xor
cmp
ret
xchg
dec
jnp
pop
pop
sub
scas
lea
lods
arpl
push
cld
outsb
xorl
fldcw
addb
das
or
pop
fisubrs
ss
jno
fcomi
or
pop
jbe
cwtl
imulb
pusha
repnz
repnz
in
inc
out
stc
sbb
test
arpl
xor
jbe
add
call
loop
lods
xchg
jle
ja
and
add
mov
jo
decb
inc
hlt
add
cltd
mov
je
inc
push
mov
cltd
pop
mov
sub
jecxz
mov
push
mov
add
pop
rcl
pop
call
jno
cmc
leave
and
mov
fisttpl
xor
rol
aad
and
xor
sub
insl
lods
jle
mov
xchg
je
and
fildll
cwtl
popa
bt
std
lods
outsl
scas
push
xorl
fs
shrb
fsubs
sbb
jp
ret
dec
scas
pop
pop
int
push
dec
push
test
sbb
mov
xchg
mov
dec
xor
cmpsl
lea
sbb
loop
dec
loope
xchg
lret
shrl
inc
push
sub
aad
ss
dec
jge
leave
xchg
js
outsb
sbb
fadds
enter
jns
push
imul
sub
sarb
js
sbb
std
dec
ss
push
xchg
xchg
push
sbb
sbb
cwtl
mov
test
aam
mov
dec
push
out
mov
adc
push
sbb
sti
push
mov
xchg
out
xor
aad
int3
add
rsm
mov
les
inc
xlat
int3
or
in
add
cmp
dec
add
lahf
cmp
push
add
in
movsb
gs
pop
popf
jmp
push
cmp
and
xor
sub
cmpsl
adc
mov
push
popf
mov
rep
adc
dec
sbb
mov
inc
cmp
fistl
and
imull
cmp
xor
test
jno
adc
mov
cmp
popf
adc
imul
jae
xchg
jle
sti
xchg
nop
jns
jb
pusha
adc
jno
jmp
jo
and
cmp
outsl
mov
cmc
push
pop
shrb
jecxz
dec
fcoms
test
jge
cmp
daa
in
js
shl
mov
mov
mov
mov
mov
cmc
movsl
push
das
pop
push
lods
mov
in
lcall
pop
lret
in
jne
xchg
js
mov
shl
cmp
push
sbb
imul
mov
mov
repz
jle
mov
mov
in
push
xor
ret
or
xor
add
dec
xchg
push
push
sub
fsts
int3
push
jge
pop
mov
mov
or
push
adc
outsb
mov
sub
fcompl
repnz
lea
xorl
sbb
cmp
jecxz
mov
scas
push
int3
ret
rcrl
add
dec
lods
icebp
ljmp
inc
mov
inc
test
test
mov
push
inc
and
push
add
shr
in
out
lods
push
push
fdivs
cmc
adc
push
loop
into
add
pop
sub
les
enter
ss
call
adc
xor
lods
popa
push
mov
out
inc
pusha
pop
rorl
mov
das
adc
swapgs
cmp
mov
rclb
mov
jbe
push
sbb
xorb
aas
loopne
enterw
rorb
mov
je
jge
iret
or
stos
js
jns
cmp
js
dec
in
ja
inc
mov
scas
mov
sarl
gs
lock
mov
sbb
sub
adc
xor
fisubl
and
pushf
jmp
into
sub
xor
and
sbb
add
mov
stos
hlt
fwait
adcl
pop
cld
sbb
cmc
pop
push
add
adc
add
fists
loopne
test
ds
pop
sbb
fcompl
push
xchg
and
test
shlb
scas
gs
sub
gs
sub
sti
or
jae
sbb
pop
mov
adc
push
repnz
loopne
in
scas
mov
ss
movsl
sahf
mov
popf
jle
mov
inc
sub
hlt
add
add
inc
mov
mov
cmp
jno
mov
sbb
jno
mov
xchg
mov
xor
add
jl
adc
add
nop
lods
push
stos
xchg
jge
gs
in
xor
lock
cmp
or
adc
test
popf
leave
mov
imul
cmpsl
cmp
int
pop
in
shlb
adc
loope
out
inc
pop
sub
pop
add
loope
inc
adc
stos
test
roll
mov
or
gs
jmp
adc
aas
clc
lods
ud0
pushf
mov
xchg
leave
xor
movsb
pop
fsubrl
fwait
cmp
adc
inc
fcmovne
dec
sub
popa
cmp
push
xchg
lahf
mov
cmpps
push
xor
clc
das
scas
push
jmp
hlt
dec
mov
sub
fidivrl
call
ret
call
xchg
lret
pushf
ret
incb
leave
cmp
repz
or
sub
mov
fisttps
decb
jno
lret
dec
mov
std
ljmp
jmp
repz
scas
iret
fldt
pop
push
test
test
leave
loopne
adc
mov
insl
sbb
push
repnz
xchg
inc
lret
or
insb
shlb
test
inc
dec
xor
je
mov
or
imul
fdivl
push
mov
pop
lea
mov
popf
xor
aam
sub
or
out
and
pop
sub
sbb
jmp
push
aaa
call
and
aad
stc
je
or
std
stc
shll
pop
or
xchg
aas
jno
mov
call
xchg
dec
jle
decb
jns
inc
fldt
adcl
push
in
jmp
xchg
repnz
pop
sbb
mov
mov
pop
stos
jg
pop
pop
daa
cwtl
jmp
imul
fldenv
pop
pop
fmul
sahf
add
bound
vmovddup
inc
mov
cld
insl
or
out
imul
inc
mov
adc
or
or
inc
mov
loopne
cmp
inc
jae
orl
xchg
push
jg
repz
mov
bsf
shl
mov
aad
cmp
jl
ja
das
sbb
inc
or
nop
xor
sbb
push
pop
sbb
push
dec
pop
hlt
pop
cmc
addr16
mov
jge
sub
push
mov
jmp
sahf
js
jbe
ja
aam
lahf
std
imul
mov
arpl
addr16
jb
cmc
fistl
jmp
aam
out
scas
cmp
pop
sahf
inc
jmp
mov
or
call
popa
and
dec
in
rcrl
inc
lcall
scas
jne
mov
mov
or
test
pop
and
ret
leave
int
ja
mov
rcrl
mov
fst
jno
push
jno
inc
imul
sbb
add
enter
in
mov
gs
cmpsl
ljmp
inc
cmpsb
cmp
jp
mov
out
scas
subl
shrb
add
xor
or
les
mov
push
cmpsl
mov
cwtl
push
hlt
mov
mov
fs
add
sub
lods
aas
mov
adc
xor
daa
cli
push
out
adc
iret
in
fdivs
pop
xchg
push
xor
arpl
xchg
cwtl
lea
push
adc
push
lods
lods
cmpsl
sub
and
jbe
xor
mov
push
or
fsubs
scas
test
mov
mov
mov
pop
insl
stos
xchg
lret
in
or
loopne
cmp
popf
outsb
mov
mov
or
cwtl
mov
mov
ljmp
mov
add
iret
fucom
loope
mov
mov
add
lods
fidivrl
and
js
add
stos
mov
popa
insl
orl
loope
in
push
and
jmp
repnz
rcll
jae
pop
ss
fs
das
lret
adc
mov
xchg
xchg
or
adc
and
jnp
in
push
jbe
mov
xor
sbb
in
cmpsl
xor
jecxz
cmp
sbb
jge
sahf
das
popa
adc
aad
loopne
pop
cmpsl
adc
or
mov
enter
cmp
test
ret
int
aam
dec
cbtw
dec
mov
add
arpl
xchg
cmp
sub
out
cwtl
insb
mov
dec
cmpsb
pushf
popf
js
lods
cli
pop
lret
add
movb
mov
call
call
fidivrs
lcall
orb
jg
push
adc
iret
andl
stc
mov
push
pop
and
mov
xchg
scas
xchg
daa
push
hlt
mov
add
mov
or
loop
mov
mov
add
mov
add
mov
popa
cld
or
jbe
mov
mov
or
jbe
daa
add
jae
mov
icebp
lahf
lods
insl
and
xchg
and
lods
test
mov
lcall
sub
mov
lea
cmpsb
adcb
cli
shll
push
mov
or
push
pop
sbb
stos
lret
add
mov
enter
xchg
subb
lahf
mov
sub
push
pop
mov
adc
jo
pop
lds
or
ds
and
cmpsb
fcompl
adc
scas
ret
fdivrl
cmp
cmp
jg
lahf
cmp
fwait
lds
leave
icebp
orl
xor
fnsave
loopne
pop
in
std
add
jns
mov
dec
aaa
pop
push
test
cmp
cmpsl
rcr
pop
pop
inc
dec
add
mov
lret
addl
mov
adc
ljmp
pop
push
jns
cmp
sbb
leave
scas
das
cmc
sub
xor
fldenv
test
shll
xchg
popa
sub
stc
outsb
push
sti
loop
data16
push
pop
push
dec
pop
fmuls
and
gs
dec
push
lea
insl
push
lods
mov
test
testb
dec
add
repnz
mov
mov
pop
sti
cmp
push
cmp
sub
stos
or
jecxz
xor
cmp
mov
xchg
outsb
push
xlat
cmp
push
test
adc
push
cmp
and
cltd
imul
stos
cli
fisubrl
xacquire
outsb
cli
hlt
pop
shlb
or
mov
andb
lods
leave
mov
lahf
add
bound
hlt
lods
lahf
rolb
popa
int3
cmpsb
les
sbb
jb
xchg
push
in
fdivl
mov
lds
pop
sbb
movsb
cld
je
insb
sarl
enter
sub
jg
and
lods
xchg
sub
cmpsl
mov
xchg
mov
jno
stos
xchg
movl
cmovg
addr16
or
xor
mov
or
in
dec
pop
jae
add
sbb
rcrb
aas
arpl
andb
cwtl
jo
in
scas
and
clc
mov
inc
mov
jmp
mov
aas
ja
ret
cmp
es
lret
mov
add
adc
push
pop
popa
or
scas
dec
or
and
jg
cmp
std
xchg
jno
in
call
fdivrl
pop
repnz
pop
shlb
shlb
rorl
jge
cltd
call
mov
or
push
sbb
adc
xchg
jl
push
loopne
mov
pop
mov
mov
ds
jmp
movsb
clc
int
adc
gs
js
jmp
inc
fldl
lret
adcb
das
int3
xchg
cmp
nop
loope
enter
add
sbb
jmp
mov
subl
popf
cmp
les
add
adc
scas
imul
ss
sahf
xchg
repz
and
lods
jns
pop
jmp
ror
add
cltd
dec
inc
test
xchg
xor
fnsave
mov
jne
sbb
pop
jbe
sbb
push
xchg
clc
pop
xor
jo
xchg
cld
mov
jge
sub
push
inc
pop
pop
dec
sub
pop
divb
shlb
adc
fistl
mov
xchg
in
js
jmp
mov
insl
xor
pusha
adc
insb
add
adc
testb
fadds
pop
cmp
test
shlb
dec
sub
lock
mov
lds
pop
lods
ss
mov
enter
sahf
mov
add
add
xor
bswap
mov
xchg
mov
lcall
ja
fnstenv
add
sarl
test
push
cmp
mov
ficoms
cltd
sub
mov
adc
dec
sbb
insb
int3
ret
xor
arpl
mov
addb
add
add
jne
paddd
je
sub
jb
adc
inc
mov
sti
gs
or
cli
ja
cld
scas
push
loopne
pop
xor
ja
inc
rorb
fnsave
mov
lret
in
popl
mov
into
mov
mov
or
xor
mov
dec
insb
xchg
push
cmp
ret
imul
fstpt
sahf
dec
cwtl
push
lahf
add
push
mov
and
je
and
adc
aad
lret
stos
lds
or
sub
stc
lea
mov
mov
pop
in
aam
sbb
add
insb
xlat
jp
ficoml
popf
push
sbb
jae
jg
lret
pusha
fucomp
fistl
cmp
cmp
jp
outsl
lret
out
in
mov
in
in
jmp
pushw
xor
gs
outsl
inc
pop
cld
and
sqrtps
pushl
adcl
sbbl
mov
sahf
jo
test
jp
or
xor
add
mov
pop
jo
xchg
fldt
mov
pop
repz
push
movsb
push
cmp
fucom
jae
and
or
or
xor
mov
lock
jns,pt
lret
out
xchg
mov
inc
ja
arpl
lods
ds
dec
dec
lret
and
mov
ds
imul
jo
pop
adcl
imul
enter
sub
sbb
push
outsl
xchg
xor
int
sbb
int3
out
loopne
mov
ja
je
mov
pop
cmp
icebp
mov
mov
fcompl
arpl
sbb
or
pusha
xchg
mov
pop
in
xor
mov
outsb
mov
and
arpl
mov
ret
cld
sbb
xchg
cmc
int
and
inc
and
xorl
fwait
or
ljmp
inc
mov
or
jo
popa
pusha
sub
or
fildl
dec
cmp
inc
ja
iret
cmpb
jg
sbb
inc
pusha
ljmp
lea
dec
push
mov
nop/reserved
test
lahf
pushf
cwtl
cmp
int
push
cmp
mov
dec
cmp
push
jl
stc
push
pop
mov
and
mov
or
daa
adc
test
inc
push
fidivrs
loopne
or
dec
test
mov
jo
inc
add
dec
mov
test
xchg
repnz
out
xor
inc
and
pusha
jecxz
add
out
shll
add
mov
shrb
nop
sub
sbb
rcrl
incb
daa
mov
pop
push
movsl
or
fmull
scas
ret
add
stos
sti
xor
jo
mov
xchg
sbb
les
or
cmpsl
and
loope
push
push
push
loopne
xchg
add
in
mov
test
mov
and
mov
mov
xor
xor
addl
insb
push
add
xchg
dec
or
je
mov
mov
and
fwait
dec
mov
and
enter
jp
or
mov
sahf
rolb
ret
sbb
ds
dec
dec
adc
dec
pop
jae
dec
iret
insl
rclb
shr
popf
xchg
orl
sub
lahf
psubusw
lret
aas
lret
arpl
aam
iret
pop
lds
out
mov
stc
adc
adc
insb
adc
stos
jae
mov
je
push
adc
inc
add
lea
dec
sbbb
jbe
or
ret
mov
loopne
pop
fsubrl
or
cmp
adc
insl
js
mov
adc
or
add
outsl
call
dec
adc
mov
xor
stc
aad
or
rcll
sbb
es
add
jp
push
mulb
lea
and
ret
imul
fisubs
mov
fisubl
in
mov
leave
cmp
outsl
fs
jl
repnz
xchg
imul
sar
mov
xlat
mul
sbb
pop
mov
inc
imul
push
pop
push
add
subl
xor
xchg
lds
mov
mov
dec
inc
out
fnstcw
mov
fsubrl
dec
lcall
cwtl
insb
sub
ja
scas
xor
adc
push
xor
sbb
and
lcall
sub
inc
repnz
addr16
jne
cmp
push
repnz
pop
movsb
sbb
mov
mov
ret
sub
mov
pop
bswap
loope
and
lcall
jbe
jae
mov
pop
call
mov
mov
xchg
jg
pusha
loopne
dec
cmp
jne
jle
sbb
fs
cmp
add
fldenv
push
scas
sub
jo
mov
or
push
in
sarl
push
mov
jmp
adc
push
in
lcall
les
add
out
out
mov
filds
fimuls
aaa
jmp
push
inc
jae
or
sub
les
adc
mov
and
push
jmp
sbb
int3
mov
dec
cmpsl
lcall
push
dec
cmp
mov
jge
ss
ret
out
hlt
cmp
cmp
aad
dec
cwtl
add
lods
ds
xor
xchg
jl
mov
lcall
sub
push
pop
adc
xor
js
push
cmpsl
mov
sub
aaa
cltd
pop
push
jg
mov
bound
cwtl
push
scas
inc
jne
inc
jmp
pusha
jle
inc
cmp
pop
inc
cltd
out
loop
sbb
cli
push
shrl
inc
mov
lahf
push
fcmovne
testl
dec
pop
imul
mov
sub
nop
scas
adc
daa
push
cmp
mov
or
pavgw
mov
sbb
je
mov
aas
js
js
in
ss
loop
ss
ljmp
sub
outsb
add
insb
inc
popf
mov
shrl
push
sbb
pushf
pop
lods
cmpsb
xchg
int3
mov
out
xor
pop
subb
push
into
outsl
jbe
in
jbe
xor
sub
rclb
aam
mov
mov
ljmp
xor
aas
and
arpl
imul
sub
add
adc
cli
stos
and
dec
xor
in
jge
decl
mov
divb
adc
sbb
cwtl
cs
mov
jge
xchg
add
xor
adc
outsb
cmpsl
add
iret
mov
jl
push
mov
jmp
push
ss
movsl
aas
int3
clc
sbb
inc
or
fnstsw
cltd
stc
es
ret
jl
mov
std
jge
test
mov
adc
push
fadds
sub
lods
mov
stos
push
push
sub
pop
fwait
dec
out
ret
pop
sub
push
test
sbb
out
and
fsubl
xchg
mov
cmpsl
mov
pop
test
popl
lret
pop
fs
dec
and
shrb
jmp
dec
bound
cs
sub
ret
jl
test
ljmp
cltd
inc
test
ficomps
and
and
bound
in
xchg
cmp
xlat
push
lcall
fsubrs
jno
jnp
sti
sub
icebp
fsubrl
dec
cli
pushf
add
xchg
fistpl
xchg
pop
test
in
add
aam
push
dec
push
sub
add
int
outsl
lods
mov
das
sahf
mov
std
icebp
mov
imul
nop
sbb
mov
fsub
or
push
push
imul
and
sbbb
xor
ficompl
out
in
mov
lds
mov
adc
fstpt
lret
xchg
mov
jl
es
sbb
insl
lods
sub
mov
xor
mov
int
sbb
rcl
mov
inc
push
sarb
ficoms
sbb
cmpsb
push
inc
in
loop
cmp
pop
scas
js
inc
mov
rol
xchg
ret
pop
dec
mov
or
xchg
out
call
dec
lret
jo
mov
loopne
int3
jmp
in
shll
mov
xor
lea
jo
imul
test
ret
fwait
xchg
out
movsl
jns
rcr
gs
cmpsb
xchg
push
aaa
clc
cmp
mov
scas
sahf
js
shl
ds
daa
jne
jb
mov
data16
dec
dec
in
movsb
int3
sub
jge
push
jmp
lods
inc
xor
cmc
sub
push
inc
sub
sub
xchg
cmpb
and
mov
cmpsl
lock
mov
aad
push
jle
cs
mov
call
int
dec
mov
sub
add
test
or
roll
popa
adc
jo
mov
gs
jb
jmp
mov
andb
iret
dec
and
push
xchg
or
lcall
mov
xchg
dec
xchg
pushf
cmp
sti
jmp
pop
bound
je
punpckldq
mov
xor
scas
or
stc
xchg
pop
jnp
and
and
call
iret
xor
repz
xor
pop
faddl
fidivrl
ss
cmp
mov
imul
mov
scas
into
pop
mov
xor
out
fbld
jg
repz
jp
insl
icebp
and
xchg
ret
mov
push
push
into
out
cmp
insb
mov
lds
out
xchg
out
push
dec
xchg
jnp
adc
add
stos
lcall
repz
adc
jg
and
test
mov
cmp
push
xchg
roll
movsb
imul
pop
mov
sar
dec
adc
or
push
test
sub
xchg
fldt
push
jb
mov
les
rcrl
sbb
js
push
or
xor
imul
andb
loop
or
sahf
pop
repz
lcall
push
mov
test
and
add
mov
repnz
pop
daa
rolb
adc
and
dec
in
or
lret
push
dec
cmp
les
mov
pop
mov
int
mov
aaa
notb
and
pushf
sub
inc
pop
cmp
decl
adc
jg
lods
popf
pushf
bnd
movsl
outsb
and
jecxz
mov
push
push
nop
or
sub
movsb
hlt
repz
mov
jnp
jl
dec
xchg
nop
cmpl
push
insb
inc
jl
decl
rcl
rorb
mov
fiadds
jne
lea
xlat
aaa
orps
popf
lahf
jg
xchg
test
add
cmpsb
or
jns
mov
out
mov
cli
pop
insb
dec
adc
mov
cmpl
mov
adc
inc
loop
and
cmpsl
lcall
sahf
inc
mov
sti
mov
add
fs
lret
sbb
iret
enter
cmpb
lahf
loopne
clc
cmp
mov
inc
mov
ds
in
daa
enter
lds
adc
pop
loope
pop
push
or
fcoml
insl
dec
push
and
les
jl
pop
xor
push
les
cmp
and
cmc
sub
cld
push
adc
sub
jns
xchg
adc
fs
adc
pop
stos
push
pop
scas
sub
les
gs
xchg
enter
adc
outsl
ljmp
xor
jns
mov
jge
fdivs
hlt
subl
sub
jmp
das
push
mov
add
and
and
movsl
inc
pop
gs
or
hlt
push
pop
dec
pop
cmp
add
inc
mov
pop
cmp
movsb
jmp
mov
outsb
aaa
mov
loopne
add
cwtd
push
jne
xor
mov
cmp
mov
or
nop
into
jne,pt
orl
push
or
rolb
pop
outsl
ss
lds
pusha
js
imull
stos
mov
dec
push
mov
sbb
cmp
jnp
dec
repnz
mov
adc
jne
xchg
pusha
push
rorl
stos
rcr
inc
repz
divl
push
and
jnp
cwtl
adc
repz
sbb
scas
push
aad
movsb
clc
pop
pop
pop
outsl
inc
lret
mov
bound
sub
and
inc
inc
push
xchg
rorb
outsl
cmpsb
mov
daa
mov
pushf
leave
shr
sub
push
cmc
mov
bound
scas
cmpsb
push
xchg
icebp
ret
push
xchg
mov
mov
and
adc
cld
mov
dec
bound
aad
mov
aad
fadds
lock
test
test
test
lds
adc
pop
or
loope
cmp
adc
jns
popf
push
push
stos
sahf
in
cmp
das
or
mov
inc
sub
setno
data16
mov
lret
idiv
push
cltd
sahf
sub
lret
clc
cmp
or
dec
loope
adc
aam
mov
sbb
jo
in
ret
jbe
xor
sub
rol
push
add
inc
inc
fcmovb
popa
or
in
inc
jle
inc
gs
stos
rcll
push
andb
xchg
cmpsb
jl
mov
pop
imul
fcoms
pop
and
add
push
outsb
mov
mov
push
add
es
sbb
shl
lea
orl
xchg
sub
test
push
add
insl
sarl
mov
xchg
sub
test
lods
aas
inc
jecxz
push
ret
xchg
lods
dec
xchg
add
xor
ret
pop
sub
cli
push
std
shlb
pop
mov
cmp
mov
in
test
dec
test
stos
mov
movsl
addl
cmp
cmp
push
jmp
mov
mov
fstp
xor
or
jae
rcrb
xchg
and
dec
outsb
or
mov
fstl
les
aam
flds
push
out
inc
aam
adc
cmp
mov
lea
dec
or
sbb
add
jo
push
mov
push
lds
cmp
fildl
es
jecxz
pop
mov
mov
test
or
cmpsb
ficomps
or
mov
out
add
and
or
jl
jae
xchg
xchg
mov
mov
pop
jge
dec
cli
jo
mov
lock
pop
sub
sub
inc
xor
xlat
mov
roll
in
mov
call
cmpsl
mov
in
pop
out
mov
pop
inc
lods
lods
stc
jb
lea
cmp
es
lret
movl
lahf
lods
lea
and
and
and
push
pusha
es
dec
stos
cmp
fnstcw
arpl
mov
pop
adc
xchg
jl
addr16
cmp
or
mov
repnz
inc
icebp
fcmovnu
fmuls
test
jecxz
mov
ljmp
adc
mov
lock
inc
imul
pop
inc
pop
aaa
cwtl
cmp
dec
imul
cmpsb
or
mov
iret
xlat
idivb
cmpsl
adc
mov
pop
pushf
hlt
loope
mov
dec
or
js
repnz
jne
int3
push
loopne
xchg
daa
adc
push
inc
pop
xchg
dec
inc
test
fwait
and
jnp
int
test
inc
outsb
aas
shrl
xchg
xor
adc
jg
xor
icebp
cwtl
push
sbb
adc
mov
cmp
or
scas
push
push
lock
outsb
xor
mov
push
je
popf
or
mov
xchg
push
sbb
jnp
add
mov
shl
pop
lcall
inc
mov
cli
mov
cmp
xchg
mov
add
pop
in
push
and
filds
shrl
mov
pop
lods
cmp
jne
mov
cmp
pop
xchg
lcall
sarl
xchg
mov
sbb
xlat
outsb
mov
mov
sub
outsl
aas
push
inc
pusha
fwait
in
repnz
addb
test
out
pop
push
mov
leave
daa
shll
repz
dec
sahf
inc
pop
inc
jmp
add
sbb
jp
mov
movsb
xor
inc
lret
arpl
scas
pop
adc
lea
xchg
dec
mov
bound
stos
sbb
gs
insb
push
mov
setl
ret
fstps
in
dec
inc
lcall
mov
out
jecxz
dec
inc
dec
sbb
xlat
loope
adc
stc
jbe
aaa
lcall
jl
enter
mov
lea
cmp
dec
mov
ret
addr16
mov
jae
shll
cmp
in
jp
mov
cmp
scas
mov
into
mov
das
xchg
xor
mov
sahf
inc
or
sar
jecxz
addb
dec
aam
lock
dec
inc
add
add
cwtl
sub
shlb
dec
cmc
das
jmp
test
mov
sbb
movhps
inc
fbld
sub
and
sub
xor
bswap
inc
movsl
fcomip
movsb
jl
cmp
fsts
cmp
aas
outsb
imul
dec
jg
cmpsb
xchg
stc
cmp
out
fstps
mov
inc
leave
hlt
inc
fdivl
xor
test
out
imul
into
mov
add
cmp
push
bound
mov
sub
cmc
pushf
lods
hlt
xor
loopne
dec
je
cmpsb
arpl
jbe
and
dec
lods
inc
test
loopne
fisubrs
lods
jo
nop
adc
hlt
mov
jae
out
adc
jge
mov
and
adc
mov
fidivs
jae
xor
and
push
je
xchg
loop
xchg
and
lods
pushf
add
pop
arpl
mov
adc
cmp
cmp
sub
sbb
pop
lret
mov
std
imulb
mov
dec
outsl
pop
adc
add
xor
fdiv
cmp
xor
js
pop
sub
dec
cmp
call
lds
push
push
xchg
test
dec
and
fsubl
loopne
cltd
push
shr
pusha
adc
dec
mov
mov
jne
jae
or
dec
cltd
mov
cltd
mov
int3
cmp
fcomi
pop
sti
mov
xchg
add
mov
imul
mov
xlat
push
add
aas
jb
sbb
outsb
aaa
cmp
add
add
push
fnstcw
xor
or
jp
js
iret
pop
cmpsb
inc
dec
fs
dec
mov
icebp
add
xor
ficomps
xor
call
mov
inc
xor
sub
int
mov
arpl
xor
repz
mov
decb
aad
fwait
mov
addr16
loop
cld
cld
je
add
mov
bound
lret
jo
jns
and
sbb
xchg
xchg
stc
xchg
or
add
mov
xchg
shrb
pop
jmp
and
das
xor
jne
movsl
fistpl
shll
pop
xchg
mov
or
xor
inc
dec
mov
adc
pop
jns
jl
inc
in
sbb
sub
mov
js
ljmp
push
lcall
jg
lods
scas
xchg
add
ljmp
cmp
mov
and
fsubrl
mov
dec
incb
jmp
arpl
pop
fildll
lods
sbb
push
enter
mov
bound
jno
aam
loopne
add
outsl
mov
clc
cmp
xchg
mov
or
outsb
repz
ficompl
mov
fs
inc
test
xchg
leave
pop
dec
dec
ret
icebp
fisubl
in
nop
jecxz
das
mov
bound
fsts
fmul
sahf
outsb
or
out
hlt
sti
pop
jno
stc
or
outsb
pop
lds
mov
mov
jecxz
inc
adc
and
flds
mov
cmp
rsm
inc
lock
pop
adcl
pushf
jno
add
inc
int
add
xor
shl
lret
or
pop
and
cwtl
sbb
dec
dec
cmp
xor
cltd
jae
mov
cmp
rorl
leave
add
dec
mov
inc
popa
cmpb
dec
cmpsl
faddl
jle
or
repnz
out
or
inc
cmovns
cmp
scas
adc
decl
arpl
ljmp
stos
cmp
dec
stos
add
test
jmp
mov
out
push
nop
in
xor
mov
pop
bound
sarb
cmp
int3
fwait
mov
stos
dec
in
sbb
cld
out
pushf
and
inc
fmuls
adcl
bswap
mov
add
mov
cmp
sahf
inc
add
adc
pop
imul
imul
xchg
decb
jb
movsb
and
mov
sbb
in
sub
sahf
test
outsl
dec
out
hlt
js
loope
add
sbbb
sub
das
mov
sub
adc
pop
pop
leave
add
add
mov
out
aaa
loopne
dec
out
sti
mov
add
or
xchg
dec
sbb
mov
jne
mov
sbb
aas
test
dec
mov
iret
sahf
bound
adc
call
call
pop
add
fwait
incl
loope
stos
rolb
fsubrs
imul
sbb
push
cmp
push
mov
insb
jmp
and
std
shrl
xlat
daa
out
cmpsb
cltd
push
out
shl
dec
xor
jnp
mov
xor
aam
pushf
call
sarb
loop
movsl
xchg
pop
jmp
pop
mov
js
jns
mov
adc
mov
mov
inc
cmp
sahf
lret
pop
inc
fdivrs
loope
daa
pop
sbb
and
push
ret
lock
mov
je
pusha
scas
mov
in
pushf
fwait
lds
mov
dec
jno
rcrb
dec
jmp
ljmp
mov
adc
inc
dec
push
mov
mov
movsl
push
jmp
push
mov
in
jne
call
push
imul
das
push
or
loop
adc
sahf
mov
jmp
cmc
aas
fbstp
xchg
shld
cwtl
xor
sub
scas
mov
xor
cmp
js
sbb
xchg
std
add
data16
adc
cmp
push
mov
mov
clc
shl
mov
das
lods
loopne
xchg
leave
orl
pop
idivl
xlat
scas
pop
frstor
mov
cld
or
std
push
stos
out
adc
in
movsb
das
stc
iret
je
xchg
jae
mov
dec
xor
xchg
jge
push
sbb
arpl
arpl
in
sub
mov
pop
pusha
xchg
fcmovnbe
push
ss
mov
push
iret
outsb
and
pop
push
adc
inc
mov
add
mov
or
ja
dec
xor
orb
inc
stc
stos
mov
jb
mov
pop
jno
jge
sub
cltd
loop
pushf
test
mov
mov
cmp
cmp
cmpb
popl
int
push
imul
loop
dec
cmc
je
lods
sbb
ljmp
xchg
repnz
fsts
rcll
pop
jmp
mov
int
cmp
out
or
xor
jne
cmc
enter
into
inc
mov
out
ds
fdivrl
shlb
pop
add
mov
popf
push
mov
mov
add
pop
dec
pop
fistpll
test
loope
es
loop
lret
mov
jae
xor
and
out
into
cmp
push
mov
mov
cmpsb
adc
insl
or
in
push
pop
xchg
gs
cs
cmp
adc
xor
xorb
imul
pop
dec
push
cmpsl
xchg
lret
sbb
push
cmp
cmp
xor
stos
ja
pop
sub
pop
sub
inc
leave
aad
sbb
lahf
and
jmp
sub
mov
xchg
mov
push
xor
addr16
pop
cld
jge
out
icebp
mov
xor
xchg
sbb
outsl
aad
fstpl
fidivrl
or
clc
sub
cmc
enter
mov
test
mov
fmuls
mov
add
mov
add
iret
mov
aad
jg
push
loopne
movsl
iret
shlb
jbe
pop
into
movsl
mov
mov
call
sbb
stc
xor
movsl
pop
xor
and
cmpsb
outsl
imul
or
xchg
js
push
inc
sbb
movsl
insb
ret
pop
fs
lea
loop
decb
push
jle
add
icebp
mov
add
into
int
fsts
test
fnsave
enter
into
fsubs
mov
arpl
mov
scas
add
dec
scas
pop
xchg
insb
out
iret
pusha
pop
cmp
jo
lods
mov
loopne
andl
mov
stos
sub
mov
mov
push
clc
cs
fwait
push
mov
pop
aaa
xchg
sbb
jae
adc
je
subl
mov
hlt
fcomps
lahf
mov
jg
scas
xor
int3
dec
push
rorl
push
lds
add
hlt
icebp
cld
push
in
iret
cs
and
sbb
sub
or
sub
push
add
xor
inc
mulb
fsubrl
sbb
pop
movsb
cwtl
pop
mov
xchg
xlat
add
jae
jp
enter
sbb
push
mov
rclb
rep
icebp
or
jecxz
pop
or
mov
fstp
inc
cmp
leave
mov
shrl
and
dec
push
js
mov
lret
fdivrl
repz
fwait
int
add
pop
xchg
imul
aam
cmpsl
sub
pop
push
dec
adc
jbe
mov
and
push
pop
mov
or
push
xorb
xor
jnp
mov
jmp
jp
pcmpeqw
jbe
adc
stc
cmpsb
push
fadds
imul
test
mov
dec
sub
and
adc
insb
in
outsb
xor
leave
xor
repz
pusha
push
jl
pop
pop
icebp
inc
out
out
fs
mov
mov
push
or
int
stos
daa
sbb
lods
mov
rorl
orb
loop
pop
mov
jno
je
ret
inc
ret
std
mov
loopne
clc
test
ds
or
test
sbb
loopne
test
mov
daa
jge
pop
inc
call
cmc
dec
add
xor
divl
gs
pushl
sbb
lret
outsl
loopne
popf
loop
sahf
insb
mov
inc
scas
mov
lcall
rcr
rcl
inc
push
cmp
push
lods
clc
repnz
jbe
ret
inc
mov
sbb
aad
pop
dec
movsb
fwait
leave
ret
ljmp
and
pushf
pop
jg
imulb
rcrl
stc
mov
jmp
push
hlt
cltd
fisubs
out
dec
push
insb
xor
sbb
std
xor
push
xchg
mov
sub
inc
sbb
pop
sub
je
lods
pop
addr16
push
push
inc
inc
jbe
mov
xchg
xlat
sub
jmp
cli
xor
cli
dec
inc
jo
aaa
pop
mov
shlb
pop
push
or
jnp
jbe
dec
out
jp
subb
cmpsb
mov
ficompl
dec
mov
push
ds
mov
pop
movb
test
jp
stos
inc
not
leave
rcl
pop
imul
fsubs
jl
shll
mov
sub
and
push
xor
stos
loope
pop
mov
mov
sub
lret
icebp
stos
fldcw
add
xor
mov
and
fisttps
ficoms
xchg
mov
or
ret
jge
fdivs
bound
mov
rcrl
fstl
jae
cmp
inc
mov
xchg
xlat
add
dec
xchg
sbb
lea
sbb
inc
int
sti
sub
adc
outsl
sub
fisttpl
int
lret
cmp
add
mov
lcall
bound
jge
mov
push
shll
pop
mov
and
mov
sti
sub
fwait
adc
cmp
adc
loope
mov
decb
out
dec
arpl
inc
xchg
jp
mov
sub
xchg
sbb
pushf
test
jbe
jne
ja
inc
into
mov
js
rcrb
xchg
add
pushf
mov
ret
jbe
pop
mov
popa
fwait
add
mov
sub
sub
lcall
add
mov
andl
int
data16
push
jbe
sti
xchg
mov
dec
leave
sub
je
movsl
aas
push
dec
push
sbb
cmp
test
call
or
jbe
rcll
sbb
aaa
or
movsl
pushf
int3
into
jae
shl
daa
cmp
jo
stos
fdivrp
insb
xchg
mov
cmp
inc
sarl
insl
or
mov
aam
subl
or
mov
xor
dec
shr
rcr
and
sti
popf
xorl
mov
popa
jge
das
push
loop
jg
lret
and
jae
sub
andb
sub
scas
shll
xchg
ja
sbb
jl
mov
add
cli
and
test
loopne
sub
jge
push
pop
mov
pop
test
pop
xor
dec
dec
sbb
sub
adc
mov
jge
movsl
dec
aaa
push
ljmp
inc
inc
dec
scas
push
dec
fwait
mov
push
sub
loopne
addb
or
mov
icebp
imul
das
xchg
xor
leave
fwait
dec
mov
mov
xor
test
push
int3
sub
mov
ss
add
dec
jmp
dec
sti
clc
jmp
jp
push
push
movsb
jp
lods
outsb
pushf
adc
jb
das
insb
stos
inc
loopne
mov
mov
daa
or
pushf
in
fchs
cmpsl
iret
lods
xor
test
mov
and
leave
cs
popa
lret
cld
and
sbb
stos
mov
cld
sub
mov
popf
popf
test
inc
pop
sbb
pop
outsb
mov
adc
and
cmpsb
test
mov
jbe
out
clc
xchg
ret
mov
jbe
xor
paddsb
mov
jl
jo
jp
dec
xchg
mov
fnclex
loopne
xchg
push
cli
push
jmp
mov
in
aad
out
sarl
lcall
leave
add
bound
js
clc
push
xchg
jg
dec
cmp
push
mov
adc
add
loope
jle
pop
arpl
aas
mov
ja
sbb
and
dec
rclb
loope
sbb
cwtl
or
lods
inc
outsb
ss
and
xchg
orl
pusha
lods
xchg
pop
xlat
push
xor
pop
xchg
mov
jbe
and
adc
loopne
inc
addb
popa
mov
jle
dec
sti
loope
jg
mov
mov
mov
push
pop
repz
adc
cmp
jb
xor
imul
fwait
mov
sbb
imul
insl
pop
and
xor
in
sub
into
jne
push
arpl
sti
add
xchg
jne
push
or
dec
add
pop
jo
xlat
add
loope
ss
pop
dec
adc
inc
ffreep
fcoml
cwtl
in
sbb
inc
and
jno
sbb
test
xor
adc
test
sti
loop
or
leave
into
dec
enter
and
ds
add
xchg
inc
popa
sbb
mov
mov
enter
imul
mov
out
enter
and
das
pusha
xchg
inc
inc
out
scas
in
sbb
push
inc
xchg
out
push
outsb
notb
arpl
jbe
mov
das
shll
adc
aaa
xchg
test
and
dec
sti
mov
adc
imul
fdivrs
rcr
adc
jecxz
lret
in
fld
imulb
popa
mov
lock
mov
lcall
mov
pop
push
out
lods
lea
mov
aad
pop
inc
inc
test
ss
test
in
sahf
cmp
mov
or
jl
xlat
sub
ja
pop
push
movsl
fstl
sbbl
lcall
pop
lea
mov
aad
add
test
inc
mov
fwait
mov
mov
sub
lret
mov
or
xor
rcrb
das
aad
aaa
push
push
imul
out
lea
cli
mov
xor
movsb
jl
push
mov
lea
jmp
mov
loop
cld
stos
cwtl
mov
or
sub
fmull
mov
cmp
or
pop
or
in
xlat
cltd
repnz
insb
mov
ret
aas
xlat
cmpl
pop
orl
lret
push
lahf
cmc
mov
gs
mov
cmp
and
insl
repz
lods
jo
push
in
and
adc
push
sub
js
testb
sub
in
int3
arpl
xchg
ja
ljmp
sarb
int3
call
sahf
test
shrb
mov
rcrl
cmp
jle
imul
dec
push
ret
int3
sub
mov
ds
mov
repz
arpl
shlb
xor
cmp
rcrl
adc
stos
cmp
push
xor
not
pop
xchg
dec
cmpsl
fwait
mov
dec
repnz
lcall
repz
and
push
loope
mov
and
mov
les
enter
cld
sbb
stos
add
pop
pop
pusha
aaa
add
push
pop
sti
mov
imul
xchg
fcompl
jp
enter
and
pop
push
or
xchg
lods
add
xor
sub
jge
ret
jge
nop
jle
dec
stc
mov
repnz
in
out
cmp
xor
dec
or
jae
push
rol
mov
mov
inc
sub
out
xchg
push
in
xlat
loop
lock
sub
mov
jno
mov
stos
xlat
push
je
mov
xchg
das
pop
pop
cmpsl
push
mov
and
ljmp
sub
or
movsb
cmp
or
mov
lods
add
jno
std
push
popf
dec
shrb
imul
jp
sti
xchg
pop
adc
loopne
or
test
jb
mov
mov
push
push
dec
rclb
push
pop
pushf
adc
fiaddl
add
aaa
or
test
and
gs
jnp
in
dec
push
fwait
sub
icebp
iret
mov
push
jnp
xor
sbb
shl
mov
sub
cmpsb
lods
test
test
ja
or
xlat
cs
pusha
add
xorl
inc
js
leave
adc
int3
inc
out
cmp
popf
jbe
push
mov
inc
insl
lods
mov
push
mov
sbb
imul
inc
mov
mov
ret
and
pop
pop
push
mov
mov
push
and
mov
das
add
inc
scas
out
cmp
cwtl
mov
cmp
xchg
jg
cmpsb
sub
fiadds
xchg
jmp
das
nop
fs
rcr
push
cmp
jns
pop
xchg
shll
mov
push
stos
scas
sar
imul
xchg
cmc
or
pop
mov
fdivp
xor
js
sahf
movsb
adc
imul
out
js
and
in
cmp
mov
dec
imulb
jecxz
sbb
ljmp
repnz
rorb
imull
mov
or
mov
in
imul
jg
and
add
or
sub
fdivr
push
popa
stc
movsl
and
rcll
fidivrs
les
mov
push
sti
sbb
or
adc
pop
adc
and
mov
add
mov
je
fmuls
sbb
and
dec
push
sbb
or
mov
data16
mov
mov
mov
push
stos
xchg
jl
mov
hlt
add
xchg
lock
add
cmp
cltd
xchg
add
xlat
xor
push
xchg
mov
xchg
cmpsl
xchg
jo
dec
and
in
mov
call
mov
addr16
pop
adc
subl
cwtl
nop
dec
sbbl
mov
stos
subb
add
xchg
mov
add
mov
in
mov
aas
out
stos
movsb
mov
mov
mov
into
sbb
adc
mov
out
jae
outsl
scas
inc
jno
xchg
jbe
add
jecxz
imul
lret
xchg
fnstsw
mov
aaa
add
dec
sbbb
sub
xchg
loop
push
notl
sub
mov
push
xchg
mov
mov
add
or
mov
idivl
mov
jb
mov
add
and
movsb
fwait
sbb
push
inc
sti
clc
adc
cmp
leave
inc
adc
stos
mov
cld
out
cmp
sbb
out
dec
fisttpll
sub
out
add
inc
test
adc
mov
pop
xchg
xor
mov
xchg
roll
cs
and
lds
jae
jg
in
out
jb
push
mov
lea
cld
xchg
mov
mov
call
daa
pushf
cmp
mov
lock
sbb
or
scas
sub
mov
pop
mov
pop
xor
xchg
stos
xchg
fdivs
sub
or
dec
xchg
pop
mov
and
push
pop
pop
and
loopne
dec
mov
nop
mov
mov
mov
outsl
sbb
hlt
loopne
or
dec
lock
dec
dec
sar
or
inc
add
xchg
out
fwait
stc
push
lea
pop
es
addl
fsubl
push
nop
es
lcall
std
movsl
add
div
cmpsb
repz
or
mov
cmp
popf
sbb
dec
out
and
outsb
sbb
stos
adcl
insb
mov
ljmp
push
into
call
mov
rol
cmp
outsb
mov
enter
sub
out
sbb
inc
fcoms
cmp
jmp
outsl
addr16
sbb
addl
popf
inc
jnp
jno
xor
mov
rorb
mov
push
push
fsubs
pop
adc
outsl
mov
push
inc
push
lret
jecxz
adc
xor
dec
ficompl
bound
pop
sub
outsb
xor
insl
in
das
insl
adc
inc
arpl
dec
inc
push
movb
adc
sti
insb
xor
jb
or
or
add
cmp
gs
mov
or
sbb
out
ficoms
icebp
mov
outsl
fstps
movsb
fwait
mov
jno
cmp
adc
cmp
inc
shrl
repz
cmp
enter
adc
xor
icebp
mov
pusha
daa
sahf
push
push
inc
loop
subl
movsb
add
not
jno
stc
sub
mov
cmc
mov
cmp
decl
mov
jnp
shll
ret
sarb
arpl
mov
push
fistps
xchg
out
aad
jo
in
dec
jno
outsb
adc
or
push
add
sbb
push
inc
push
js
test
mov
addr16
adc
push
lret
or
out
in
adc
jae
clc
push
mov
outsl
enter
cmc
dec
fldenv
inc
jecxz
add
mov
mov
push
pop
adc
pop
cli
leave
addr16
and
pop
jb
aad
cmp
es
fidivrs
push
dec
or
pop
add
mov
xlat
pop
jg
in
sub
das
fidivrl
mov
mov
sbb
adc
jle
mov
stc
mov
andb
insb
cmp
jg
cmp
adc
adc
and
outsl
or
add
mov
loop
jnp
adc
nop
sahf
int3
mov
pop
cmp
fs
pop
pop
lcall
mov
pop
sbb
into
xlat
xor
dec
xor
xor
mov
ror
popa
pop
sbb
add
mov
dec
sbb
pop
push
jno
sbb
xchg
cmp
sub
repz
insl
mov
and
dec
sub
xor
pop
add
pop
mov
pop
loop
jmp
lds
inc
lret
pop
sub
fldcw
and
sub
lret
cs
sub
dec
adc
or
or
movsb
sbb
inc
add
jno
movsb
mov
add
hlt
fimull
mov
inc
cmp
daa
sbb
push
mov
jne
adc
sbb
push
cmp
sub
out
mov
jl
inc
push
fistps
je
inc
pop
sbb
aas
adc
sbb
in
divl
mov
daa
sub
fcoms
loope
sbb
mov
jge
bound
mov
xchg
mov
lret
fdivs
mov
inc
adcb
loop
push
cmp
mov
mov
pop
jg
dec
add
movsb
and
and
jmp
movsl
insb
jg
sub
lea
and
push
ja
add
mov
pop
lret
sbb
lea
xorb
mov
dec
jge
cltd
push
adc
mov
mov
int3
shll
movsl
test
inc
cmp
mov
fwait
fs
cld
fs
setl
ret
inc
pop
in
outsl
jge
int3
and
push
cmpsl
inc
aam
mov
mov
pop
sbb
xor
ficoml
subb
scas
mov
lcall
arpl
js
jno
sub
sbb
or
sub
test
lahf
aas
repnz
mov
jg
scas
sub
mov
stc
xchg
mov
pop
add
adc
pop
jnp
lock
pop
test
nop
jns
jl
mov
lods
movsl
push
push
mov
jmp
popf
mov
shlb
or
cmp
cld
les
setno
sahf
cltd
mov
sti
adc
push
sbb
xor
cmpsb
aad
push
mov
mov
scas
shll
scas
dec
les
and
in
xchg
ficoms
or
xchg
pop
inc
pop
push
inc
cmc
adc
scas
outsl
add
xor
pop
push
cmp
or
ret
sarl
mov
sub
mov
sub
scas
lcall
cmpb
and
add
sti
pop
aad
push
aam
mov
adc
dec
or
and
cmp
jb
or
cmp
rcrb
in
sub
rcrl
sti
ret
outsl
mov
sub
jbe
and
in
bound
in
adc
push
lea
mov
lock
push
dec
pop
xor
inc
insb
mov
nop
mov
jo
repz
pushf
jnp
xacquire
call
jecxz
xor
daa
jl
test
jge
jp
add
xchg
adc
jne
andl
inc
xor
jb
mov
push
rcll
mov
and
cmp
push
jg
in
lcall
imul
leave
orb
lods
cld
pop
pop
in
pushf
ljmp
cmp
inc
adc
cltd
js
das
jp
mov
orl
push
xchg
movb
or
xlat
add
add
into
in
lahf
jo
xor
add
negl
xor
scas
js
pushf
and
xchg
jge
push
ficomps
out
arpl
add
sub
push
ss
ss
cmpsl
jmp
mov
pushf
scas
ret
mov
xchg
addr16
pushf
xchg
xchg
or
shrl
push
push
rorl
pop
and
sub
jbe
dec
ja
fcoml
movswl
movsl
ja
mov
or
mov
xchg
pop
dec
stc
push
test
or
movsb
and
mov
aam
lcall
scas
and
mov
push
mov
xor
jbe
aad
ljmp
pop
mov
adc
xchg
mov
lods
xor
or
scas
or
xchg
pop
mov
loope
dec
aas
fbstp
push
ret
or
cli
mov
or
enter
inc
dec
imul
cmovge
je
pop
push
fs
out
imul
dec
shll
or
mov
jb,pn
pop
fwait
sbb
mov
push
lods
stos
jmp
inc
mov
rcrl
mov
push
addr16
les
sub
push
jge
jg
xchg
jle
imul
out
jge
fwait
int3
jne
adc
xlat
shl
xchg
push
in
sub
out
inc
inc
pushf
jg
sub
push
pop
stos
dec
icebp
xchg
mov
popf
testl
pop
mov
xor
jne
mov
out
repz
jae
adc
pop
push
repz
adc
sbb
pop
lods
mov
mov
add
fs
lds
jecxz
test
aad
add
mov
les
xchg
shrb
int3
out
lret
push
adc
in
in
inc
and
mov
cmpl
lret
in
das
ja
repz
xchg
mov
add
xorb
push
jl
addr16
andl
aaa
subl
and
jl
shlb
inc
rorl
dec
mov
in
cltd
jmp
xor
pop
shll
shr
cwtl
mov
lret
movsb
push
loope
xor
test
push
mov
adc
or
mov
mov
das
notb
in
fildll
cld
fldcw
fldl
test
nop
iret
cmp
test
and
inc
mov
roll
mov
mov
pushl
push
orb
xor
enter
and
sbb
push
dec
push
fwait
add
bound
dec
aaa
mov
dec
repz
mov
les
in
cmp
sbb
ret
mov
push
lock
mov
lret
lret
sarl
and
aad
aam
jmp
and
xchg
inc
cli
pop
shlb
clc
rclb
cmp
adc
sbb
mov
loop
lcall
je
mov
lods
mov
dec
cmp
adc
cwtl
sbb
scas
xor
sub
jnp
sub
xor
movsl
arpl
shlb
push
pop
shrl
stos
outsb
out
mov
lret
mov
push
std
pop
and
pop
cwtl
dec
or
mov
lods
cmp
or
xor
jb
insb
jp
cmp
es
pmulhw
dec
lods
push
xchg
and
sub
imul
xor
arpl
arpl
dec
lods
inc
cltd
mov
lret
stos
mov
popa
push
fwait
loopne
xchg
sbb
inc
jbe
or
adc
mov
insl
lock
lock
lcall
push
out
xlat
xchg
cmp
pop
or
mov
inc
xchg
sub
inc
cwtl
inc
sub
dec
pushf
add
cmp
adc
in
icebp
rclb
cmpsb
inc
xchg
jl
mov
or
jmp
adc
cmp
sbb
popa
mov
mov
faddl
dec
outsb
jmp
fiadds
pop
push
fsubrl
adc
dec
popf
and
fstpt
into
in
xor
clc
lods
pop
inc
lods
lods
sub
pop
sahf
fstp
mov
jne
add
xor
inc
mov
add
mov
arpl
in
std
push
loop
sbb
jae
inc
addb
test
sbbl
mov
push
fistpl
add
pop
push
add
stos
xchg
jp
mov
out
in
add
mov
sub
xchg
push
sarl
addr16
mov
mov
jnp
mov
sub
movl
push
sbb
xor
xor
push
pop
xlat
fadd
add
out
popa
sub
popa
lea
pop
in
mov
cs
or
nop
mov
push
sbb
arpl
scas
or
mov
out
hlt
icebp
xchg
insl
push
in
subl
int3
and
mov
in
inc
ljmp
jns
pusha
pushf
adc
inc
adc
xchg
jge
lock
add
push
sti
pop
sub
xchg
jo
das
xchg
pop
sub
iret
dec
mov
pop
ljmp
xor
push
lea
cli
js
mov
pop
aam
cwtl
test
shll
xchg
pop
xor
sub
fistpl
bound
jmp
pop
push
inc
mov
jge
or
xchg
int3
fnsave
fcmovb
insb
sahf
inc
jle
xor
nop
aad
arpl
mov
nop
jno
cmp
xor
cltd
imul
jle
pop
inc
jb
pop
cld
js
arpl
cmpsl
pop
cwtl
inc
jle
ja
lcall
adc
xchg
sub
mov
ds
adc
imul
jle
mov
add
std
mov
insl
rcrb
and
mov
sbb
mov
adc
jecxz
inc
add
scas
mov
and
mov
mov
insl
sbb
psadbw
jmp
xchg
dec
xchg
mov
xlat
push
push
insb
stos
mov
xor
icebp
jnp
xor
xorb
jp
roll
jmp
lds
lcall
cmp
lea
cmc
rcrl
addr16
dec
push
fidivrs
cmc
lods
adc
jl
stos
fcoml
or
mov
clc
stos
aam
cmpsl
dec
fidivl
fimull
mov
mov
dec
dec
or
lcall
xchg
aaa
inc
pushf
push
fiadds
movsl
jecxz
add
es
add
addr16
or
mov
mov
adc
int
dec
out
pop
mov
enter
rorl
push
push
and
int3
sbb
das
push
fwait
mov
mov
mov
sahf
mov
adc
or
jmp
or
imul
sbb
shll
or
in
add
mov
mov
fwait
outsl
cli
jp
mov
adc
rcrb
pop
fwait
test
add
push
jb
mov
inc
push
pop
push
jns
test
mov
stc
or
ljmp
inc
sbb
std
mov
mov
sbb
mov
aaa
test
pop
lock
push
dec
addr16
mov
lods
dec
push
or
int3
sbb
cmp
add
mov
cmp
jne
into
jg
lret
int
jbe
out
jecxz
push
and
sahf
or
imul
call
sahf
sbb
pop
sbb
rcrl
xchg
adc
jne
sbb
std
xchg
popl
cmp
nop
cld
adc
pop
mov
clc
add
push
add
clc
addb
mov
fistl
add
test
inc
and
je
pop
daa
mov
push
xchg
addr16
out
mov
bound
push
icebp
outsl
xor
jg
and
leave
ret
addr16
shll
mov
adc
or
inc
fwait
loop
xchg
jmp
insb
sbb
mov
xchg
or
mov
xor
nop
and
fdivrs
iret
jnp
add
sub
jne
nop
addb
mov
jns
gs
dec
lret
push
mov
lcall
int
addl
inc
std
xchg
cmp
mov
pop
jb
mov
cltd
mov
mov
dec
inc
mov
mov
les
push
xchg
xor
pop
sub
movsb
icebp
outsb
ds
out
test
push
xchg
xor
cmp
es
push
ret
mov
or
xchg
push
jge
jmp
xorl
movsb
and
hlt
das
sarl
adc
fwait
jbe
jae
les
subl
inc
inc
pop
jp
out
hlt
test
mov
and
in
pushf
push
mov
push
clc
insb
pusha
cmp
gs
pop
or
cmp
loopne
icebp
cmp
and
pop
gs
and
dec
addr16
or
push
push
ss
ds
loope
popa
adcb
push
loope
in
sub
and
icebp
adc
psrlq
xchg
in
movsl
xor
jb
enter
dec
jle
pop
ret
sbb
dec
xor
aas
aad
push
xchg
xchg
mov
sti
aad
lcall
and
hlt
lds
xchg
jne
jns
jg
dec
pop
out
xchg
in
xchg
lcall
cmp
out
inc
mov
orl
cs
repnz
insb
sub
loope
negb
add
sub
outsl
push
fld
mov
add
jno
das
cmp
in
xchg
inc
sbb
sbb
imul
enter
mov
mov
sti
lea
xchg
rcrl
out
aam
ljmp
arpl
and
scas
nop
push
leave
addl
ja
test
mov
push
stc
mov
push
jmp
adc
xor
lret
data16
stc
jmp
pop
or
sbb
jnp
rolb
sub
mov
fs
mov
pop
push
mov
cmp
inc
aas
jno
icebp
push
or
adc
out
dec
repz
push
mov
xchg
cwtl
push
lods
xchg
or
fwait
pop
xchg
test
sbb
shlb
adc
sbb
sbb
bswap
cmp
dec
mov
outsl
jo
shl
movsb
xlat
add
loop
outsl
fdivrl
dec
xor
dec
outsb
mov
and
ljmp
out
mov
ret
mov
cmc
xchg
mov
scas
pop
cmc
xor
stos
xor
sarb
push
push
mov
int3
cmpsl
pop
fcoms
mov
inc
sbb
imul
and
test
cld
notb
mov
lea
ss
gs
push
in
mov
dec
out
dec
cmpsb
xchg
popa
test
popf
and
cmp
cmp
dec
iret
pop
cltd
into
ljmp
pop
xor
inc
and
push
push
cmp
aas
mov
ret
xchg
idivb
add
mov
decb
call
adc
jb
add
jo
bound
cmp
popa
repz
orb
xchg
ljmp
xchg
cmp
ljmp
fidivl
repnz
cmp
mov
sub
dec
ds
cltd
jg
ds
faddl
inc
xorb
jecxz
aaa
fisubl
mov
adc
cmc
mov
xchg
add
push
das
int3
xchg
int3
and
roll
push
loop
dec
mov
test
lahf
mov
movsb
out
push
dec
sbb
mov
jmp
loopne
js
xchg
inc
mov
jno
fisubrs
sbb
inc
stc
lcall
cld
movsb
addr16
testl
xchg
addl
cs
push
xor
push
inc
filds
inc
push
sarl
ja
loop
insl
lret
rolb
insl
jl
nopl
sub
jae
or
xlat
sub
nop
jnp
and
lods
pusha
dec
dec
jg
test
jg
sbb
faddp
in
scas
and
rorl
pop
in
adc
ret
sbb
sahf
cld
jg
js
sub
lock
push
adc
inc
lods
mov
in
dec
mov
push
inc
pop
jle
add
ss
scas
inc
cli
pop
push
test
jns
xor
call
mov
cmp
mov
mov
in
ds
cmp
sbb
jmp
jle
inc
cmp
outsl
push
mov
orl
mov
insb
stos
xor
sub
cmpsb
push
inc
jnp
test
mov
fildll
mov
sub
sbb
lods
jb
mov
xchg
les
in
add
jl
lods
cmpb
xchg
sbb
clc
or
test
xchg
popa
adc
into
mov
mov
cmpsl
arpl
aad
stc
and
inc
inc
and
push
add
mov
mov
faddl
ret
xchg
adc
dec
loopne
shl
dec
adc
fnstsw
adc
xchg
shl
mov
and
cmp
arpl
dec
push
mov
adc
and
cmp
loop
int
insl
popl
sahf
adc
dec
add
lcall
movsl
decl
jmp
xchg
cmpsl
cmp
xchg
cmp
icebp
jmp
inc
ljmp
je
sub
gs
or
jno
mov
pop
adc
sbb
ficompl
pop
push
pop
sarl
xchg
cli
cmp
push
cmpb
test
subb
cli
cmc
pop
cmc
shl
inc
out
adc
lods
ds
or
sub
outsl
jo
test
dec
pop
push
call
mov
ret
in
into
lret
jns
ss
pop
xor
lret
jmp
cwtl
add
in
mov
xor
sub
mov
ja
or
test
int3
mov
dec
lret
inc
jl
aam
bound
subl
jae
jmp
push
test
ret
pop
jo
loopne
stos
fs
dec
cmpsb
jbe
pop
repz
add
int3
xor
out
and
mov
sbb
icebp
jbe
cmp
pop
xor
mov
fldenv
or
hlt
sbb
jg
shlb
sub
adc
cmp
popa
mov
or
call
ja
repnz
adc
mov
xchg
les
xchg
push
sbb
pop
inc
mov
or
pop
and
jl
jne
add
mov
push
popf
js
js
jge
cmp
inc
xchg
mov
popf
fnsave
dec
and
jecxz
push
es
sahf
inc
idivl
ss
scas
imulb
cmp
ret
iret
sbb
popf
gs
or
rcll
pop
je
xchg
cmp
std
inc
pop
imul
test
aam
mov
arpl
stos
sbb
xor
stos
jg
push
fistpll
shrl
subb
push
sub
sbb
pop
xor
xor
push
inc
loop
xchg
std
sti
sti
add
add
rolb
jnp
int
cmc
cltd
xchg
add
fadd
repnz
adc
and
mov
mov
add
ret
out
js
mov
scas
sub
pop
loope
cwtl
sub
adc
ja
xor
or
cld
sub
add
jb
out
add
call
xlat
adc
xor
scas
xchg
sub
call
add
xchg
fst
inc
out
mov
push
mov
jb
idivl
jbe
scas
sbb
notb
aam
add
or
ljmp
fisttps
and
mov
fbstp
loope
sti
rolb
add
or
adc
imul
sub
shrl
cwtl
fisttpll
xor
pop
jp
add
sub
frstor
mov
ljmp
stos
dec
dec
leave
out
pusha
sbb
push
xchg
int3
or
lea
mov
xchg
xor
lods
and
movsb
repnz
and
jo
or
lahf
stos
mov
adc
add
push
mov
mov
adc
pop
lahf
or
dec
rorb
insb
mov
sbb
pop
jae
xchg
xchg
cld
jbe
mov
and
iret
call
sbb
loop
lahf
inc
fcmovb
enter
cwtl
dec
inc
fmulp
mov
pop
idivl
into
mov
mov
mov
xor
out
into
sub
std
cmpl
sub
pop
push
xchg
out
or
and
add
mov
mov
fs
mov
mov
cwtl
lds
pop
hlt
fcmovnb
jbe
sbb
xor
push
xchg
push
or
push
pop
iret
add
dec
xor
or
mov
filds
dec
repz
fsubr
mov
fwait
rdtsc
adc
mov
add
sub
ja
mov
jecxz
sub
cmp
adc
inc
mov
pop
inc
xchg
shrb
popf
loop
mov
push
pusha
shr
fiadds
rolb
xor
fcmovnb
mov
mov
and
ljmp
push
and
sub
xchg
adc
adc
fmul
fcmovu
ja
jge
aam
fimuls
insl
pop
mov
cld
in
lret
data16
add
add
scas
inc
cmpsl
std
sub
xchg
mov
cmp
inc
pop
cli
negb
push
pop
cmp
hlt
mov
mov
add
addl
jp
jbe
test
mov
dec
cld
scas
in
mov
sarb
loope
data16
pop
filds
notl
cmpb
adc
or
xchg
repz
xchg
ja
js
mov
sbb
fcmove
fimuls
cs
jns
out
cld
and
or
cmp
xchg
mov
add
cmpb
cli
jae
dec
cld
iret
push
and
jg
add
jg
mov
add
cmp
filds
addr16
xchg
dec
movsl
inc
je
mov
jae
inc
cmpsl
lea
iret
sub
dec
fs
cmp
dec
mov
ss
xor
test
pop
or
mov
sub
outsb
inc
aam
sub
jo
adc
lcall
les
lcall
push
ljmp
mov
sarb
xchg
push
mov
jle
push
popa
sbb
xchg
int
not
add
mov
mov
dec
xor
hlt
and
xor
inc
xchg
in
add
nop
call
jmp
ljmp
fsubs
pop
cs
push
mov
push
filds
mov
jmp
inc
mov
jbe
outsl
add
mov
xor
test
add
mov
and
rorb
mov
and
push
int
mov
dec
mov
cs
push
cmp
or
sarl
jp
in
push
push
pop
iret
jecxz
std
inc
jmp
sbb
and
fistpll
jmp
addr16
and
shlb
nop
adc
mov
and
cmp
addr16
les
xor
sub
and
pop
fnstcw
jge
cltd
into
ss
and
push
out
add
fdivrl
cmpsb
push
in
addr16
sbb
jnp
cli
cmpsb
xchg
xor
sbbb
mov
cld
pop
clc
loop
lret
jno
cmp
or
sbb
icebp
shll
arpl
mov
mov
sbb
adc
inc
in
xchg
test
dec
ja
aaa
mov
sub
mov
mov
or
inc
inc
arpl
pusha
or
pusha
fidivrs
cmp
mov
push
sbb
pop
jae
sub
cmc
xchg
jmp
adc
xchg
xchg
int3
mov
cs
jl
and
mov
pushf
orb
faddl
sahf
popa
or
or
adc
inc
imul
jge
std
jbe
dec
decl
xor
xorl
in
out
add
aaa
sub
mov
jo
leave
inc
sub
jmp
mov
jnp
adc
nop
add
mov
stc
dec
out
inc
jno
dec
sub
mov
clc
stc
sub
xor
mov
dec
pusha
adc
adc
pop
sbbb
outsb
adc
dec
dec
sbb
mov
add
xor
xorb
into
lcall
mov
cltd
enter
push
add
lods
fisubs
in
ja
iret
repnz
inc
call
push
fidivrs
inc
dec
ja
sbb
cltd
adc
adc
aaa
and
pushf
in
negb
push
xlat
inc
neg
sub
pop
andb
push
mov
cmp
std
daa
pop
add
lcall
push
stc
loope
mov
in
lods
popa
hlt
loopne
js
inc
cmp
inc
xor
fwait
ja
mov
jge
jecxz
stos
push
xchg
adc
mov
jmp
std
lea
bound
mov
orl
mov
push
test
leave
xchg
pop
dec
mov
jns
shll
mov
xor
xchg
xor
jo
mov
ljmp
aam
pop
sbbb
cmpsb
cltd
sarl
dec
and
enter
sarb
sbb
imull
push
addr16
loop
mov
ficoms
mov
rcrl
int
jo
push
mov
fwait
mov
ret
mov
pop
out
push
inc
sub
cmc
insb
jl
inc
pop
push
fs
or
hlt
mov
xchg
adc
test
sub
cmp
lods
xchg
ret
dec
pop
sbb
or
lods
mov
les
dec
fisttpl
xchg
xchg
iret
fcompl
sbb
stc
mov
pop
inc
fcmovnu
xlat
pop
inc
sub
mov
cmpsl
xchg
mov
test
das
mov
cmp
xchg
mov
push
fwait
xor
popf
pop
pop
mov
pushf
xlat
sbb
fxam
cmp
push
ret
add
subb
mov
fmull
pcmpgtb
and
fnsave
pop
or
movsb
inc
cli
xor
push
fisubrs
dec
and
add
mov
ficoms
mov
ret
insl
xor
adc
pop
fdivs
mov
add
lock
adc
xor
out
repnz
xchg
in
ljmp
jnp
inc
gs
inc
jecxz
mov
stos
mov
ret
bound
mov
sbbb
xor
fmuls
sbb
inc
pop
and
pop
lcall
js
inc
sub
push
cmp
push
mov
jae
xor
in
int3
sbb
and
push
outsl
fwait
cld
and
cmp
inc
xlat
jp
mov
imul
push
bound
add
lahf
test
push
mov
sbb
out
adc
mov
cmpb
fsts
mov
rcrb
imul
or
bound
mov
adc
xchg
ficoms
stc
das
add
addr16
add
pushf
sbb
inc
sbb
insb
test
es
ja
clc
out
ja
sub
or
rsm
lock
mov
fdivl
cmp
test
sub
arpl
inc
add
inc
scas
pop
cmc
cmp
xor
cs
jb
push
add
std
addr16
jno
pop
negl
mov
xchg
push
add
movsl
cmpsb
outsb
sbb
and
xchg
mov
xchg
sarl
mov
aas
int
adc
adc
pushf
je
shr
inc
adc
cmp
rcrl
lret
stos
mov
stos
cld
ret
jbe
sbb
jg
mov
dec
scas
add
cbtw
repnz
pop
or
pushf
int
pushf
test
rcrl
pop
pop
mov
xchg
arpl
adc
push
cwtl
hlt
aam
xchg
push
push
sbb
das
out
jae
fisttps
in
pop
test
add
adc
mov
adc
das
pop
movsb
push
aam
push
dec
lods
mov
xchg
testl
dec
jnp
in
push
sbb
js
dec
int3
shlb
adc
ds
cld
call
mov
push
and
mov
sbb
mov
fs
rorb
je
in
jno
fists
or
xor
std
dec
out
pop
fimuls
adc
pop
jae
pusha
or
dec
push
arpl
lods
cmpsb
repnz
jns
jle
fistpll
push
push
sbb
cmc
push
jp
hlt
test
mov
outsl
ret
fwait
lds
push
ret
push
cmp
add
mov
pop
lahf
adc
mul
lock
iret
fwait
std
mov
jnp
je
sbb
cli
xor
sub
bound
ret
pushf
dec
push
sahf
mov
stos
pop
popl
lods
xbegin
test
dec
cmp
test
shr
pusha
sub
xor
std
fcomi
pop
sub
iret
fwait
out
imul
test
test
ficoml
faddl
sub
testl
rolb
cmpsl
or
clc
cmp
lcall
xchg
out
repz
xchg
sbb
fildl
scas
cmpsb
fdivrl
lcall
mov
pusha
mov
jne
or
fldcw
mov
repz
jmp
inc
jns
adc
jg
addl
dec
pop
cmp
mov
andl
loope
int3
stos
outsb
inc
inc
sbbl
xor
into
fistl
push
mov
in
lahf
dec
pop
mov
jmp
pop
lret
movb
mov
mov
roll
mov
loope
dec
cmc
lock
scas
aas
push
xchg
adc
xor
call
mov
mov
pop
push
cmp
mov
xor
cmpsb
cmp
xchg
mov
xor
inc
cs
jmp
mov
mov
mov
fxch
and
dec
adc
pop
mov
sub
je
lret
or
push
push
das
mov
inc
fistl
fnstenv
test
pop
push
addl
push
cmp
loope
shll
ret
inc
adc
sub
dec
sbb
inc
mov
or
fdivr
sub
divl
cltd
or
lods
rcrb
loop
arpl
clc
xor
jle
push
mov
mov
xor
pop
js
sub
aaa
subb
inc
les
mov
popa
ja
js
fnstenv
cs
out
fildll
mov
repz
jno
ja
jp
xor
cltd
ss
mov
add
inc
test
popf
pusha
xchg
dec
add
sbb
push
notl
lret
dec
xchg
scas
stos
fsubl
in
inc
jnp
aam
jg
loopne
imul
enter
dec
insl
clc
fisubs
add
mov
or
in
ret
test
insb
push
pushf
xchg
aad
insl
insl
in
cld
cs
xor
push
jb
sub
mov
loopne
sbb
mov
sbb
ret
test
lret
mov
ss
shrb
lcall
adc
xor
shlb
pop
stc
mov
subb
pusha
pop
cmp
mov
cmpsb
dec
mov
mov
insb
jb
jae
lock
and
les
ret
xchg
lcall
subl
xor
test
test
or
dec
inc
hlt
cmp
push
and
mov
clc
jmp
es
ss
faddl
nop
cli
mov
pop
out
pop
adc
cltd
out
mov
subb
cmp
sbb
ss
sbb
int3
int
and
push
adc
add
fsts
jae
test
cmpsl
mov
jb
adc
sub
pop
jg
repz
pcmpgtd
pop
faddl
jg
mov
or
fwait
xchg
sti
or
mov
or
and
fcoml
adc
outsb
or
xor
pop
xchg
lahf
jmp
or
das
outsb
stc
xor
stc
cmpsl
push
jno
mov
or
stos
mov
enter
movsl
adc
ret
cld
imul
stos
xchg
mov
push
stos
pop
mov
inc
cmp
inc
jnp
and
xchg
jae
pop
jle
push
andb
jge
mov
mov
pop
push
or
call
jae
mov
adc
aad
or
mov
dec
jp
cmp
xchg
jne
mov
inc
and
and
mov
outsb
push
and
add
jo
mov
xchg
dec
lret
push
cvtps2pd
ss
imulb
inc
or
cmpsl
sbb
out
lret
loope
pop
scas
cs
xchg
std
and
or
sbb
gs
dec
inc
xor
mov
jne
nop
pop
xchg
imul
lret
mov
aam
mov
xchg
mov
in
iret
out
mov
std
jle
or
sub
add
ror
lret
bound
lret
jmp
jp
mov
decb
sbb
xor
fstpl
jbe
or
cmp
movsb
jbe
out
in
int3
loope
xor
test
cmp
outsl
push
scas
inc
mov
sbb
sbb
jbe
std
and
pop
push
mov
lahf
fbld
insb
dec
dec
xor
cmp
xchg
or
das
pop
dec
mov
data16
adc
lret
push
dec
std
xchg
lret
scas
rolb
in
add
push
test
enter
mov
cmpsb
dec
inc
std
rclb
sub
fsubrp
pop
test
jae
push
sub
inc
fcmovnu
sub
cmp
movsl
test
xchg
clc
popa
adc
into
sbb
std
and
iret
or
mov
xchg
aam
stos
lret
mov
push
int
les
jb
rcrl
xchg
cld
adc
cmp
pop
mov
ss
in
fmull
inc
stos
mov
sbb
adcl
jns
ret
aaa
mov
sub
ret
shlb
jmp
out
outsl
add
jns
sub
cli
cmpsb
and
dec
mov
mov
test
xor
add
jae
mov
xchg
fcmovu
out
mov
jae
push
lea
nop
pop
sbb
mov
rclb
jno
loopne
int3
fxch
jecxz
mov
scas
pop
xor
mov
xchg
fnstenv
in
out
mov
test
and
and
mov
popf
cmpsb
pop
pop
test
ficompl
xchg
inc
popf
lea
mov
push
mov
mov
fdivrl
std
mov
jae
sub
scas
aaa
cmc
insb
nop
fistps
jb
in
add
movsb
add
fwait
add
test
fiaddl
inc
decb
in
push
push
push
and
jle
sub
icebp
adc
mov
outsl
xchg
mov
sbb
icebp
fidivl
mov
cmp
iret
pushf
xchg
inc
push
idivl
out
or
xchg
shl
jo
or
push
sbb
cmp
sahf
cmpsb
cmpsb
push
mov
out
mov
in
push
sbb
sub
fnstcw
insl
mov
push
xchg
mov
pusha
outsb
push
in
pop
ljmp
pop
loope
ret
mov
fwait
dec
les
push
out
xlat
push
mov
jne
out
xchg
insl
sbb
cmp
inc
cld
cmp
push
fucomi
ss
inc
dec
pop
dec
mov
xchg
sub
add
mov
lods
pop
push
jo
push
xchg
ja
lods
inc
mov
push
pop
stos
fmuls
lahf
jp
lods
scas
dec
xor
movsb
pop
push
sub
fsubr
cmc
mov
je
mov
into
test
pop
int3
fisubrl
andl
cmp
mov
xchg
ds
mov
sbb
xchg
loop
shrb
lods
test
movsl
pop
inc
scas
push
clc
sub
lcall
xchg
enter
jae
ja
xchg
in
pop
sbb
ret
mov
and
int
sahf
rcr
jo
in
inc
outsl
cmp
outsl
mov
stc
jmp
inc
dec
or
mov
jmp
inc
pop
daa
ret
lahf
leave
jp
inc
mov
outsl
xor
cmpsl
pop
add
sbb
push
movsl
bound
test
jne
jge
push
push
inc
inc
aam
and
push
jnp
xchg
cmc
into
cmp
pop
sub
sbb
test
out
cmpsb
jp
push
jl
cltd
push
or
mov
aas
stc
jo
mov
mov
and
stc
adc
fistpll
cltd
lods
adc
insb
lret
and
jl
lret
lcall
pop
sub
pop
fdivrs
mov
pop
xor
cvtpi2ps
in
mov
and
sbb
lcall
loop
jp
sar
loopne
push
xchg
jno
fld
insl
dec
xor
push
clc
pop
dec
iret
sbb
lret
cwtl
in
pop
es
mov
test
mov
xor
mov
nop
push
cltd
hlt
jo
xor
fldenv
cmp
pushf
xlat
inc
add
mov
dec
popf
jp
jae
jge
inc
mov
and
sbb
idivb
mov
mov
fstpt
jb
mov
mov
popa
add
jmp
dec
inc
shlb
sahf
iret
adc
push
cmc
ret
lock
out
out
rolb
mov
mov
idivl
add
mov
mov
jecxz
jmp
xchg
bound
gs
js
mov
xor
cwtl
stc
xchg
js
call
in
cld
popa
out
sbb
or
sbb
xor
shlb
mov
sbb
pop
adc
test
pop
iret
mov
stos
push
lds
inc
xor
lret
test
xchg
sbb
aaa
pusha
push
stc
out
nop
inc
aas
movl
sbb
inc
int3
pop
cmp
jmp
sarl
stc
fwait
mov
sbb
fisubrl
sbb
jg
test
dec
mov
fidivrs
mov
aam
xchg
lcall
inc
and
and
add
test
rcrl
mov
sub
push
pushf
mov
mov
inc
aad
loopne
xor
pop
cli
push
test
lret
outsl
mov
bound
inc
rcll
mov
test
shl
pop
pop
das
pop
movsl
add
mov
std
cmpsl
lahf
fs
cmpsl
mov
sbb
mov
push
rorl
popa
addb
mov
pop
xchg
sub
pop
loop
or
imul
mov
jae
mov
aaa
loop
addr16
mov
sbb
clc
shll
in
ljmp
xchg
stos
pop
dec
loope
imul
std
mov
jno
mov
xor
cmp
lock
lods
sti
pop
pop
jl
daa
icebp
xchg
pop
sub
rol
cmp
mov
jge
cwtl
pop
or
ret
test
ror
ret
push
push
stos
dec
sbbb
mov
sbb
andb
push
pop
cmpsb
les
les
pop
in
ds
loope
jecxz
cltd
mov
fldenv
push
aaa
pslld
rcl
jae
cmp
scas
int3
inc
mov
clc
dec
jne
popl
faddl
mov
cmpsb
or
scas
mov
mov
fnstsw
dec
stos
xor
data16
cmp
lcall
ds
je
imul
scas
in
sahf
dec
fwait
ret
ret
pop
dec
sub
nop
dec
std
cmp
pop
mov
jmp
jne
icebp
ja
mov
scas
mov
jae
sbb
sub
cmp
int
push
scas
dec
pop
push
inc
mov
stc
loope
pusha
fwait
mov
lcall
xor
xchg
cmc
lods
xor
icebp
mov
xchg
sti
arpl
mov
pop
fwait
and
pop
test
cs
in
push
lret
push
mov
outsl
cmpsb
out
mov
ja
pop
cbtw
xchg
pmaxub
out
aaa
add
xchg
xchg
push
mov
cmpl
and
ljmp
das
xor
dec
movsl
push
pushf
das
mov
cli
push
idivb
popa
mov
pop
dec
push
shlb
xor
test
stos
sbb
popf
imul
dec
movsl
enter
stos
ror
mov
mov
pop
sbb
test
aad
mov
iret
dec
aas
cmp
pop
pop
pop
dec
sub
pop
test
test
pop
xor
js
ljmp
mov
mov
adc
repnz
mov
push
dec
xor
or
jns
inc
jb
stos
adc
push
repz
popa
cmp
movsl
sbb
imul
sub
add
pop
aas
fistl
sbbb
lock
fadds
and
dec
rcrl
pop
mov
lock
jne
jecxz
xor
fmulp
pop
test
mov
jnp
xchg
jge
mov
dec
and
jae
mov
inc
dec
shrl
popf
std
pop
add
or
add
das
outsl
cmpsl
jmp
imul
fwait
xchg
mov
adc
cltd
adc
cwtl
js
mov
sbb
mov
add
es
sbb
push
test
insb
flds
push
imul
sar
and
imul
sub
test
sub
dec
cmp
addb
fwait
ja
jae,pn
xchg
push
xchg
lret
push
hlt
and
aam
xor
fstpl
sub
aam
cmc
rol
bound
movsl
hlt
je
test
jns
test
xor
int
lock
test
jle
mov
pop
nop
mov
push
call
add
inc
pushf
dec
xor
enter
sub
je
data16
dec
mov
sbb
inc
test
ljmp
cwtl
imul
and
ja
pop
mov
shll
repnz
mov
jmp
aas
out
mov
int
jns
add
cmc
mov
in
sbb
add
inc
cmp
loope
cs
loopne
imul
push
lcall
jl
js
mov
xchg
mov
aas
test
test
mov
pop
into
icebp
adc
cwtl
pop
jae
dec
or
repz
ljmp
cmpsb
roll
or
inc
decl
jge
rcll
insl
cmpsl
int3
in
mov
lcall
inc
stos
out
push
rcrl
mov
daa
outsl
cmpsb
ret
pop
push
out
loop
fcomps
push
jbe
ljmp
je
push
push
inc
mov
add
call
mov
pop
stc
in
xor
sbb
stos
aaa
xchg
pop
mov
lcall
outsl
insb
mov
cmc
bound
shrl
add
dec
push
mov
adc
mov
dec
jge
stc
jae
sbb
loopne
adc
js
xchg
fsts
jmp
bound
add
cwtl
ret
jae
mov
stos
mov
add
xchg
int3
mov
push
mov
shrl
jmp
jae
mov
adc
pop
or
gs
cmp
sub
test
jae
pop
imul
cmpsl
pushf
mov
add
add
lret
mov
jg
dec
data16
inc
adc
inc
pusha
xlat
pop
outsb
mov
add
adc
ss
mov
or
das
pop
fildl
inc
pusha
push
jns
test
xlat
xor
and
cld
push
and
lahf
adc
xor
mov
mov
xchg
mov
ja
and
mov
mov
pop
adc
jl
inc
subps
push
pusha
outsb
sbbl
mov
xchg
jns
lods
int3
dec
repz
rcr
and
stc
mov
sub
gs
loop
loope
lcall
ret
sar
xchg
repnz
fimull
mov
fldenv
xor
fidivs
loopne
pusha
xchg
in
sub
les
inc
pop
test
adc
insb
jno
pop
adc
dec
cmp
loopne
nop
cld
xchg
divl
hlt
addr16
mov
inc
and
das
dec
xor
jp
lods
movsl
pop
sahf
inc
mov
xlat
insl
sar
outsb
out
and
nop
mov
aaa
xchg
sub
repz
and
out
cmp
dec
or
mov
loopne
mov
cli
lods
sub
push
shrb
jne
aas
test
mov
xchg
mov
lods
sub
jns
gs
add
andl
fisubs
das
cmpsb
movl
mov
xchg
push
movsb
shl
mov
ds
lret
and
dec
in
in
sub
sub
inc
jae
data16
and
or
mov
xchg
cmp
pop
insl
cmp
cli
inc
inc
mov
outsl
cli
xorb
dec
push
push
int3
out
push
add
push
lcall
pusha
enter
and
and
mov
adc
fiaddl
adcl
int3
mov
mov
jns
pop
rorl
adc
fmull
imul
mov
mov
jmp
mull
xor
aam
jle
shrb
dec
xchg
cmp
or
pop
mov
mov
popf
outsb
xchg
mov
sti
aad
cmpsl
mov
or
ror
xchg
mov
test
mov
ret
inc
and
ret
clc
jnp
fwait
jne
stos
mov
mov
jp
outsl
adc
in
insb
int
nop
adc
fs
test
ljmp
push
lock
dec
inc
cmpsb
jb
test
out
rcrb
cmpsb
mov
and
fldenv
jmp
dec
mov
jmp
push
arpl
cwtl
and
and
roll
or
xor
fistpll
fsubrs
rorb
push
lock
jl
nop
xchg
jecxz
shlb
adc
jae
add
shlb
inc
idivl
push
pop
push
scas
sub
inc
jno
scas
mov
push
inc
out
les
lods
xchg
repnz
cmpsl
notb
push
adc
outsb
incb
mov
mov
call
sub
xchg
fisttpll
push
mov
push
pop
adc
or
push
mov
pop
nop
adcb
ljmp
push
cmp
add
dec
add
loop
xor
xor
xor
cltd
enter
mov
out
jmp
cmp
outsb
pop
loope
xchg
or
test
pop
sbb
push
pop
je
push
pop
ret
adc
imul
mov
in
pop
ret
jae
jmp
jp
pop
js
mov
popf
stc
or
hlt
adc
cmpsb
add
pop
out
dec
xchg
ja
test
in
lcall
rolb
cmp
sar
cli
in
ret
mov
sub
pop
movsl
stc
xchg
lcall
xchg
push
pop
push
xchg
shlb
dec
cmp
lret
ret
cmp
insl
fcoml
pop
jnp
push
add
sbb
mov
les
xor
call
sbb
cmp
sub
pop
repnz
jp
nop
sahf
push
inc
jge
adc
cli
adc
jecxz
movsl
dec
imul
loope
mov
inc
sub
stos
mov
pop
int3
fidivl
stos
mov
sbb
fisubs
mov
movq
stc
adc
mov
mov
sub
jns
sbb
ja
jno
movsl
icebp
xchg
push
test
adc
lock
push
in
pop
shrb
and
pop
jb
sbb
push
or
rcr
mov
jb
pop
push
popa
into
popa
pop
cmpsl
mov
mov
dec
outsb
iret
jae
insb
sbb
jecxz
mov
fs
sti
sub
adc
movl
cmpl
xor
out
ss
lret
test
imul
insb
adc
inc
ret
adc
into
lods
fisttpll
sub
xchg
xor
mov
mov
daa
in
repnz
fistps
push
sub
mov
push
jb
jmp
dec
scas
stc
jecxz
into
xchg
push
mov
xor
popf
or
sbb
loopne
call
out
fmul
outsb
mov
push
push
call
inc
aaa
xor
dec
les
inc
decl
mov
xlat
inc
imul
and
insl
pop
pop
outsb
call
jae
cmp
ja
push
stos
inc
ror
mov
xor
cmp
mov
aaa
test
int3
xor
mov
orb
outsl
mov
fiadds
mov
push
call
jl
jb
rcrb
sarl
test
divb
jne
mov
jo
lcall
fdivp
pop
dec
ret
ret
daa
std
rep
test
bswap
xor
mov
rorl
mov
int3
ds
cmp
push
inc
int
addl
push
mov
inc
jae
pop
popa
daa
xor
jo
movsl
addr16
pop
xchg
add
loopne
xor
mov
push
fsubrs
aas
adc
or
das
pop
ja
jns
cmc
xchg
mov
lret
pusha
push
mov
xor
pop
mov
std
cs
imul
jae
cmp
dec
and
pop
xchg
inc
in
sub
sbb
mov
int
lods
jmp
imul
jns
fmuls
sub
push
push
push
inc
repz
sbb
out
dec
inc
cwtl
repz
rolb
cmp
xor
idiv
ss
xchg
cld
std
popw
jmp
in
inc
dec
jb
adc
sahf
lahf
inc
pop
ljmp
out
popf
clc
fcomps
xor
adc
adc
insb
xchg
jl
xchg
repnz
call
outsb
int3
xor
mov
sub
mov
sti
lret
mov
pop
popa
push
rorl
pop
repnz
mov
addb
jg
dec
fnstsw
icebp
and
mov
cmp
aad
cmp
or
mov
mov
sbb
mov
jo
xlat
push
jb
into
jecxz
xchg
test
dec
sahf
push
mov
cmp
adc
mov
in
cmp
cmpsl
dec
fcoml
cmp
mov
mov
sbb
imul
mov
jle
enter
pop
sbb
push
aam
adc
enter
aam
je
pop
jns
shll
xchg
mov
xchg
mov
adc
dec
enter
xchg
xchg
add
outsb
mov
mov
cmp
aad
fcompl
or
or
mov
addps
mov
loope
sub
jne
pop
lret
in
sarb
aad
scas
ja
and
mov
inc
fwait
and
lods
dec
ret
testb
adc
mov
xchg
sub
and
cmp
jg
pushf
sarb
es
cmp
out
test
addr16
fimuls
mov
push
sub
xorl
jecxz
sub
mov
ret
ljmp
stos
fiadds
mov
mov
pushf
cmc
mov
push
int
push
jbe
cmp
xchg
xor
into
mov
inc
ret
repz
push
jmp
mov
arpl
adc
cmp
xor
sbb
shlb
jle
xchg
jecxz
nop
xor
jp
mov
mov
test
xchg
test
sub
cmpl
mov
lea
add
dec
xchg
jns
call
jge
cltd
push
cmc
xor
pop
mov
lods
cs
add
incl
mov
sbb
jp
out
into
mov
fcmovnu
stos
fs
pop
jnp
inc
lea
in
sbb
push
mov
ljmp
cs
jge
out
roll
int3
sahf
nop
mov
into
pop
push
sarb
leave
xchg
js
xchg
insl
mov
incl
pop
loopne
sbb
in
imul
and
mov
ljmp
or
jge
loop
shrb
rcll
ffree
sti
scas
or
inc
in
pop
call
xchg
int3
pop
xchg
popf
daa
push
dec
nop
cmp
sbb
cmc
jle
pusha
mov
sbb
adc
jmp
push
adc
adc
out
fnstenv
pushl
add
lea
ret
mov
cmp
std
test
int
aas
mov
sub
jbe
lcall
lds
mov
popa
adc
add
enter
sahf
jl
repnz
or
xchg
mov
aad
das
movsl
cli
xor
sub
sti
xlat
rorl
inc
adc
add
jbe
insb
pop
mov
mov
add
mov
sarb
pavgw
mov
hlt
sarb
mov
ljmp
mov
dec
cmc
sti
push
in
sti
hlt
dec
xlat
mov
cmp
dec
lret
mov
repz
imul
and
clc
aaa
adc
pop
push
cmpsl
notl
outsl
hlt
je
xor
mov
adc
jbe
cmpsl
adc
pop
lcall
cmp
mov
pop
sub
scas
or
adc
idivb
mov
fstpl
jo
ljmp
mov
jbe
xchg
subb
mov
fwait
test
insl
in
jo
movsb
cmpsb
fistl
add
fwait
addb
dec
out
out
out
sbb
outsl
fisttps
mov
lret
ror
mov
imul
out
pop
cli
mov
mov
test
testl
scas
push
mov
imul
sbb
movsl
into
addb
push
out
xor
push
into
inc
mov
pop
push
ret
jge
fsubs
or
sbb
test
test
or
addr16
add
push
int
pushf
loopne
pop
xchg
or
pop
or
repz
rorb
xor
std
add
push
mov
push
jno
mov
jmp
dec
loopne
popa
mov
and
icebp
sub
int3
loopne
in
ss
xchg
repz
fucomp
add
push
stos
sub
xchg
xchg
dec
and
mov
outsl
ss
ret
int
cmp
fdivrl
stos
jge
int3
push
sbb
cmpsb
lock
lahf
sub
out
roll
cmc
push
mov
shr
fsts
push
idivb
dec
ror
pop
sbb
into
lea
xor
mov
dec
divl
push
test
pop
inc
arpl
lcall
lods
cli
fiaddl
xlat
mov
xor
les
jp
mov
call
sbb
mov
andb
leave
sbb
adc
adc
adc
addr16
cltd
clc
les
pusha
sti
sbb
mov
hlt
and
loopne
mov
add
ss
mov
out
out
and
cmp
jecxz
xchg
and
jge
or
psubusb
stos
loop
pop
fdivl
repnz
leave
sbb
inc
pop
dec
sbb
sbb
sti
cmpsb
xchg
lret
sbb
aas
scas
dec
xchg
cmp
adc
pop
and
dec
outsb
push
js
ror
cmpsb
xor
insl
stos
jmp
sbb
jg
inc
adc
push
aas
adc
add
cld
lahf
cmp
icebp
insl
icebp
xor
xchg
int3
scas
addl
jbe
push
mov
xor
adc
push
adc
cmp
mov
cmp
sbb
sbbb
bound
data16
inc
jae
dec
cmp
ss
lods
xchg
push
xchg
and
push
sbb
mov
push
push
push
add
or
xchg
xor
out
mov
xor
adc
inc
mov
repz
fwait
ficompl
sub
mov
push
imul
jg
into
gs
or
enter
cmp
sarl
enter
fdivr
sub
sub
es
insb
lock
and
nop
repz
adc
neg
into
push
aam
jle
fidivl
adc
pop
dec
insl
fnstsw
fsubp
insl
pop
and
pop
push
sbbl
jb
cmp
pushf
fldenv
frstor
jno
pop
adc
fldenv
mov
das
aad
adc
ss
mov
xchg
or
in
add
sbb
xchg
jmp
pusha
lea
pop
aas
leave
cmpsl
fadds
pop
sbb
jge
lahf
icebp
push
aas
push
or
aam
xchg
sub
lea
or
and
call
cmp
mov
gs
mov
or
fdivrp
ret
movsb
ja
sub
jge
inc
inc
or
movsl
mov
pusha
dec
stos
test
dec
adc
cwtl
push
and
sbb
or
dec
cld
data16
jmp
push
fsubrp
xor
mov
xchg
inc
in
mov
xor
rorb
movsl
jge
addr16
fwait
or
inc
je
mov
in
cmp
sti
add
adc
cmpsl
shll
adc
in
cli
incl
roll
outsl
xchg
aas
adc
fdivs
push
cmpl
cltd
jmp
sub
scas
insl
jmp
adc
cltd
xlat
mov
and
mov
xchg
mov
and
imul
ljmp
push
jb
shrb
push
xchg
cmp
pop
lods
je
cmp
clc
aas
inc
scas
mov
cli
or
ficoml
and
add
je
bound
xchg
inc
sti
xchg
dec
lods
mov
xchg
scas
and
ds
out
stos
inc
int3
std
mov
add
adc
inc
test
fildl
sub
lret
jns
add
sti
cwtl
adc
out
out
push
movsl
idivb
cmp
mov
pushf
out
jo
cmp
in
pop
rorl
xor
mov
jle
lds
inc
push
test
cs
cltd
add
ret
xchg
sub
dec
pop
das
jl
pop
sti
mov
xchg
mov
enter
xor
ret
popa
sbb
ret
add
jecxz
and
add
cmpsl
sub
xor
out
dec
xchg
jmp
outsb
push
mov
pop
push
dec
sub
test
xor
lea
mov
push
sub
inc
push
cmpsl
mov
dec
sbb
cmp
xor
outsb
arpl
adc
aas
xor
add
test
mov
cltd
jmp
clc
jbe
testb
adc
jbe
push
aaa
add
jnp
fcomps
stos
loopne,pn
and
test
aad
fidivl
dec
fucomi
iret
mov
dec
jbe
mov
jge
cmc
push
cmp
movsl
jge
in
add
cld
divb
inc
push
push
and
mov
xchg
loop
cli
sub
push
adc
movsl
loope
push
into
std
test
out
adc
inc
and
adc
mov
jbe
push
aaa
pmaddwd
stos
jo
into
jne
jge
outsb
test
test
in
xor
out
pop
or
popf
cwtl
add
test
add
inc
mov
sarl
mov
jg
jno
jg
jbe
divl
in
adc
mov
sbb
xchg
mov
inc
movsl
add
lahf
lahf
sbb
testl
lret
mov
outsb
data16
push
leave
movsb
inc
jno
stos
movsb
mov
or
jno
sub
push
pop
inc
sbb
movsb
add
pop
sahf
cmp
dec
xchg
ss
push
xchg
push
cli
pushl
pop
add
aam
das
mov
jb
jb
or
cmpsl
test
lock
sub
jl
mov
mov
adc
pop
mov
rcrl
xchg
dec
xchg
sub
cmc
fwait
in
addl
aam
mov
ficoml
ret
sub
cmp
test
cmp
mov
mov
xchg
mov
inc
xor
push
ljmp
cs
cmp
data16
xor
leave
jb
stc
cmpl
out
enter
addr16
xor
addb
loope
jno
imul
and
cmp
dec
cmpsl
xchg
enter
push
les
mov
jb
leave
mov
xchg
enter
out
mov
mov
xor
pusha
repnz
mov
mov
add
pusha
popf
adc
subl
pop
lret
arpl
jnp
jns
dec
adc
cmp
xchg
push
jp
clc
cmpsb
ds
repnz
sahf
shl
popa
mov
out
clc
ljmp
jb
mov
cmp
int3
jecxz
xor
out
stos
push
dec
add
in
jmp
iret
mov
jg
push
daa
adc
les
and
pushf
jbe
test
mov
je
aas
mov
inc
adc
sbb
push
jle
xchg
xor
adc
ret
pop
rcrb
in
insl
jnp
cmp
jg
mov
insb
cmp
jno
mov
mov
cmpsb
sbb
adc
mov
mov
fsubl
pop
push
sbb
shlb
push
sub
cmp
jmp
stos
dec
xchg
inc
push
insb
jecxz
adc
sbb
jno
push
sub
sbb
daa
shl
sub
jmp
add
inc
inc
flds
mov
push
and
js
lods
mov
ds
and
cld
mov
cmc
in
in
xor
hlt
dec
xor
jne
dec
pop
xor
test
nop
or
outsb
push
xor
xchg
cmp
xchg
push
jns
aas
jge
mov
fldl
mov
stos
pop
dec
imul
outsb
je
push
sub
cmc
les
into
aaa
cmp
mov
or
inc
stc
cmp
dec
sbb
cmpsl
punpckhdq
dec
xchg
xlat
mov
jae
test
sub
sbb
dec
hlt
mov
stos
pop
lods
pop
lock
mov
mov
jge
inc
test
pop
daa
out
iret
push
outsb
or
xchg
mov
or
pop
dec
jge
pop
es
lret
mov
mov
leave
push
loope
insl
fists
pop
pop
mov
dec
mov
jae
pop
lods
or
andl
jmp
aas
xchg
cli
jg
sbb
cmc
sbb
divl
mov
fwait
cmp
mov
cmp
in
xchg
shl
or
add
mov
dec
and
lds
insb
jmp
sbb
cmp
push
mov
cwtl
push
loope
xchg
popf
in
sbb
ficompl
movsb
cltd
jb
pop
stos
iret
daa
sbb
push
jmp
or
xchg
jbe
aaa
in
or
in
xchg
dec
dec
adc
jl
adc
push
ja
push
insl
leave
mov
sbb
inc
push
nop
mov
jp
push
loopne
rol
push
bound
jo
dec
shlb
mov
faddl
dec
dec
mov
sbb
dec
mov
xchg
push
push
push
repz
test
xchg
orb
push
or
fdivr
mov
clc
jne
xchg
cwtl
clc
sub
mov
mov
adc
pop
es
movsb
scas
in
aam
subl
shrb
cs
pop
xor
and
adc
sbb
out
xchg
lret
addr16
inc
mov
ficoms
test
aas
cmpsl
mov
insl
add
sbb
cmp
xor
mov
pop
sub
repz
cmp
popf
dec
cmp
dec
cmp
or
adc
mov
add
js
xchg
addl
ljmp
adc
push
fwait
mov
dec
in
mov
dec
pop
fs
mov
push
popf
xlat
mov
push
mov
enter
xlat
sbb
ficompl
ds
inc
jnp
sub
mov
ja
ljmp
mov
out
jmp
lods
sub
scas
inc
and
mov
dec
das
shr
movb
std
inc
xchg
out
loope
inc
test
and
xchg
imul
jle
mov
mov
pop
inc
add
cmp
inc
popa
mov
aad
inc
sbb
lea
adc
fidivl
sbb
stc
mov
out
adc
loop
rcll
and
jb
es
aad
aaa
xor
loop
ret
popf
xor
pusha
test
and
shrl
lods
mov
pop
mov
test
stos
out
sbb
nop
mov
orl
fildll
ds
push
stos
lret
out
mov
fstpl
sti
mov
daa
test
scas
in
push
mov
jle
push
dec
add
imul
xchg
fnstenv
mov
repz
and
loopne
pop
ret
push
sahf
xchg
sub
pop
sbb
out
lret
sub
cmc
clc
stc
outsl
mov
adc
iret
iret
mov
mov
sbb
xor
out
add
push
cmp
outsl
fdivs
jp
mov
push
sub
pop
mulb
mov
loope
adc
scas
mov
ret
jae
sub
int
dec
cs
idivb
outsb
mov
dec
add
mov
push
pop
adc
xchg
mov
repz
out
popf
mov
fnstcw
mov
hlt
mov
outsl
push
jns
and
jmp
fcoms
jb
xchg
inc
fwait
pop
in
data16
lret
iret
fistpl
jbe
lods
or
adc
movl
push
dec
jae
stc
loopne
int3
das
outsb
xor
or
movsb
xor
ret
and
pop
cmp
and
mov
push
movsb
adc
leave
cmp
jl
xchg
iret
dec
jp
arpl
scas
pop
sarl
into
xchg
lea
sbb
pop
xchg
pop
or
push
jne
xchg
ret
or
jae
ret
rep
inc
sbb
mov
int
adc
cltd
sbb
dec
inc
sub
jns
sti
adc
cmpsb
pop
push
jnp
inc
iret
fists
daa
pusha
and
sub
sub
rolb
sub
popa
mov
into
mov
pop
mov
cmp
in
jb
dec
push
in
cmpsb
clc
jns
repz
insb
sub
dec
add
stos
sub
loope
lret
cmp
jle
cmp
sub
add
sub
pop
lea
xchg
push
aas
sub
imull
push
fstps
mov
pop
leave
fdivrl
fnstsw
lret
xchg
and
mov
outsl
mov
outsl
hlt
mov
sarl
mov
mov
cmp
xor
sub
mov
inc
push
xchg
dec
lret
aad
mov
mov
insb
or
mov
adc
cmp
fs
je
cmpl
outsl
aas
data16
jne
js
mov
es
or
out
es
xchg
push
sahf
ret
mov
pop
popl
cwtl
mov
pop
pop
jbe
test
mov
sti
pusha
mov
loopne
lret
fisttps
dec
cmp
mov
pop
xchg
aam
lods
imul
aaa
popf
test
mov
mov
add
add
lret
bnd
fnstcw
stos
shlb
sarl
and
dec
xor
xchg
add
pushf
xor
dec
aam
mov
adc
inc
call
push
mov
test
nop
sbb
out
add
xor
ss
js
lahf
filds
pop
jle
mov
cmp
sub
inc
pop
sbbb
adc
or
xchg
and
inc
push
imul
test
insb
popa
jbe
pop
lret
loop
jbe
leave
sbbl
loop
aas
or
dec
push
mov
cltd
stos
pop
ss
inc
fucom
push
jb
rorb
or
sahf
js
sti
sarb
int
aam
or
roll
dec
pop
ret
les
or
and
adc
push
mov
fstpt
arpl
xor
jmp
push
dec
nop
inc
mov
lock
sub
mov
pop
inc
ret
dec
and
cwtl
repnz
xchg
cmp
movsb
and
test
mov
push
sub
out
push
imull
push
lods
test
sbb
sar
dec
sbb
lcall
pop
add
aas
mov
in
jo
push
sbb
cmp
sub
add
sarl
push
ja
cmp
dec
pop
push
sbb
mull
sub
fnstenv
daa
pop
or
out
fwait
dec
mov
jp
sbb
pop
stos
hlt
jle
adc
cmp
mov
push
and
adc
movsb
lahf
bound
cmp
scas
cwtl
loop
jnp
add
inc
adc
and
dec
dec
or
inc
pop
jp
lods
je
cwtl
ret
int
dec
cld
cs
cmp
mov
pop
ja
movl
push
jno
rcr
pop
and
shrb
test
scas
inc
imul
lcall
rcll
roll
fcoml
xor
inc
adc
sti
cmp
push
test
push
cmpsl
pop
mov
xor
cmp
lea
subb
pop
fldl
or
stos
mov
roll
mov
bound
add
in
ljmp
sbb
lock
ret
xorl
mov
or
xor
into
repnz
lret
test
aas
cwtl
pop
divl
fldt
rorb
loope
push
fidivs
fs
orl
pop
xor
jns
jnp
fucomip
ret
xchg
pop
xor
mov
cmp
lods
cmp
cld
push
test
insl
aam
rclb
cli
in
cwtl
dec
dec
adc
or
ficompl
cli
sar
out
push
inc
cli
lret
pop
fstps
pop
in
inc
loop
cmp
or
mov
dec
sbb
jge
outsb
push
enter
xlat
mov
sahf
xchg
mov
jle
in
outsl
jmp
pop
jl
dec
xchg
mov
push
sub
xchg
in
stc
or
ja
and
jl
or
push
and
xchg
pop
xlat
ljmp
jno
push
push
fs
out
ljmp
rorb
push
mov
or
mov
sub
add
or
lret
fcom
and
mov
ss
cmpsl
adc
in
bound
jl
mov
imul
mov
arpl
lea
outsl
rcrl
clc
and
lret
sbb
aaa
mov
aas
jmp
pop
js
pop
dec
pop
cltd
enter
or
xchg
arpl
jno
fldenv
jecxz
xorl
mov
mov
mov
scas
aad
sbb
leave
clc
lods
stos
dec
test
ret
ret
push
dec
mov
mov
hlt
jl
popa
and
scas
or
test
fs
sbb
jno
dec
fldl
insb
ljmp
xchg
and
mov
aam
or
lea
mov
cmp
int3
xor
jp
testb
or
mov
aaa
les
xor
popf
insb
xchg
aad
adc
jge
sbb
pop
xchg
fwait
ja
imul
cmp
sub
scas
jmp
aad
cmp
test
insb
inc
es
push
inc
push
push
rcl
cs
into
jp
loop
jno
addb
addr16
lret
popf
xchg
sub
mov
mov
fidivrl
movsb
cmp
jp
pop
sub
dec
jg
dec
pop
das
fwait
dec
mov
xchg
fistpll
inc
adc
jg
push
lea
pop
xorb
adc
bound
fnsetpm(287
movb
mov
fmull
sbb
sbb
popa
mov
in
sbb
pop
mov
ret
mov
pop
mov
outsl
gs
loopne
pop
lcall
pop
mov
incl
insb
jnp
bound
pop
add
fstpt
cmpsl
push
dec
dec
call
push
dec
pop
inc
inc
inc
xchg
push
call
leave
les
arpl
mov
fsubrl
inc
mov
lahf
inc
xchg
cmp
pop
mov
repz
adc
loope
mov
jg
pop
mov
insb
movsl
enter
adc
les
adc
int
in
jbe
rcl
mulb
inc
mov
mov
dec
stos
fidivl
fucomip
adc
mov
pop
fnstenv
mov
sub
outsb
push
fidivrl
xchg
inc
inc
or
xchg
cwtl
shl
jns
test
ficoms
iret
mov
lea
popf
iret
dec
sahf
les
jg
and
cwtl
insl
dec
mov
and
xor
and
or
inc
adc
xchg
rorb
dec
xor
stos
jmp
xor
outsl
and
push
pop
hlt
pushf
or
mov
pop
sbb
jns
pop
adc
xlat
sbb
std
insl
mov
cmpsl
inc
call
push
sbb
std
xchg
xor
mov
clc
and
adc
data16
push
xor
cmp
cmpsb
in
iret
fs
stos
fwait
std
mov
pop
and
mov
popa
xor
mov
cs
sbb
aaa
cmp
jge
test
push
lods
mov
pop
mov
imul
popa
lcall
dec
add
icebp
dec
out
sbb
out
xor
cli
pop
jl
cmp
subl
repnz
cltd
push
ds
loopne
mov
cmp
shll
push
loope
pop
std
mov
enter
repz
int
xchg
mov
pusha
push
push
push
popf
adc
sarl
leave
lahf
pop
or
and
fcom
inc
xrelease
jge
aaa
sub
popf
mov
inc
cmp
jbe
push
in
dec
adc
aad
xor
inc
cli
ss
ja
mov
and
cli
aad
pop
popf
lret
push
rorl
negb
mov
push
adc
stc
mov
enter
shrl
ficoml
sub
ss
add
stos
jne
sub
js
pop
clc
mov
int
loop
stos
repz
xlat
cmc
lods
xchg
or
pop
ud1
icebp
mov
cs
cmpb
pop
fldenv
cmpsb
inc
loopne
in
out
movnti
push
xor
iret
rcrb
insb
scas
sub
idivl
dec
pop
mov
dec
imul
mov
jnp
mov
xor
mov
dec
push
bnd
dec
jp
sub
iret
and
in
inc
stc
pop
shlb
jle
mov
add
pop
dec
aad
mov
pop
mov
xchg
inc
add
cmpl
pop
das
sti
or
pop
cmp
sbb
xchg
fdivr
cltd
out
mov
xor
mov
sub
enter
mul
jl
mov
hlt
mov
xchg
test
mov
sbb
fwait
mov
xchg
jmp
sti
aam
in
scas
add
movsl
ror
notl
dec
jns
ja
add
dec
mov
mov
mov
popf
mov
and
js
fbstp
mov
push
mov
fwait
and
sbb
adc
aaa
ds
les
mov
es
aas
and
xor
repnz
sub
clc
leave
jae
cli
xchg
push
xchg
and
jbe
enter
xchg
jae
mov
fldt
and
xchg
testl
xchg
and
mov
inc
xchg
loopne
lock
stos
enter
scas
and
loope
ja
imulb
mov
ret
mov
test
sbb
bswap
add
xchg
xchg
stos
ja
pop
pop
dec
jne
mov
mov
pop
xor
test
fldcw
jbe
sub
push
sbb
dec
push
jnp
push
cmp
loope
loop
and
sub
ljmp
mov
jo
xor
jle
dec
or
outsb
pop
inc
cmp
mov
loopne
aam
fwait
into
or
push
ss
ljmp
inc
out
mov
cwtl
inc
iret
shll
mov
mov
repz
dec
jo
jo
and
lods
scas
insl
sub
adc
mov
rorl
cmp
cli
js
jbe
mov
pop
add
mov
fcoml
gs
test
scas
ret
mov
sub
arpl
test
in
mov
js
insb
and
jp
int
dec
mov
insl
mov
mov
movsl
imul
ret
push
test
test
mov
arpl
clc
jnp
ror
sbb
vandnps
cwtl
hlt
adc
cmpsl
loopne
inc
fisubrl
sub
xchg
jno
out
xchg
scas
pop
movzbl
rorb
dec
test
sbb
mov
inc
nop
cltd
ljmp
mov
xor
push
dec
dec
in
dec
out
mov
aaa
scas
out
cmc
mov
dec
popa
inc
push
es
inc
push
jecxz
inc
idivb
dec
xchg
ss
cwtl
sahf
pop
push
rclb
xor
or
xchg
shr
arpl
adc
xchg
je
sub
imul
ret
rcrb
and
add
inc
inc
pop
xlat
outsb
imul
fcomps
ljmp
icebp
fcoml
sbb
inc
int
aaa
and
adc
bsr
mov
lock
and
fsubrl
cltd
add
mov
cs
stos
scas
loopne
cld
push
enter
insb
push
jle
adc
insb
dec
xchg
retw
dec
and
ret
inc
mov
test
or
lods
pop
outsb
popf
sub
ret
xor
repz
and
cmovnp
sti
and
in
inc
rcll
xor
push
dec
jbe
insb
aad
push
mov
fsubrs
inc
lcall
nop
cmc
adc
mov
mov
ljmp
inc
repz
shll
xchg
ja
xchg
aas
lcall
sub
xchg
lock
xor
fwait
dec
pop
inc
mov
jmp
pop
dec
mov
adc
adcl
stos
lods
ljmp
int
inc
cmp
shlb
shrb
adc
cmp
push
loopne
sbb
push
lcall
jnp
test
mov
into
addl
dec
mov
add
push
mov
xchg
js
lods
aas
js
ret
fsub
push
or
xor
mov
jb
dec
sbb
jnp
cmc
mov
sbb
mov
or
pop
mov
sbb
mov
or
sbb
push
mov
fucom
xor
adc
arpl
subl
mov
in
xlat
xchg
fcmovne
jg
fistl
ljmp
les
add
fwait
sti
cmp
clc
adc
adc
or
fnsave
cs
xor
xlat
add
add
xchg
inc
fisttps
push
bnd
pop
mov
nop
jmp
les
int3
cmpsl
xor
mov
mov
xchg
mov
mov
fsubl
pop
pushf
and
shll
test
jecxz
cld
push
jne
dec
or
testb
adc
adc
mov
cmp
or
js
ss
movsl
and
loop
ret
imul
xchg
sahf
insb
mov
sahf
sti
jno
stos
pop
push
jbe
aam
dec
cmpsb
jb
adc
sub
les
add
xor
and
adcl
gs
mov
jo
sub
sub
lahf
xchg
repnz
jmp
jle
mov
movsl
mov
arpl
fs
push
jo
jle
inc
cmpsl
mov
cmp
rolb
inc
cld
sub
sub
xchg
adc
mov
mov
fucomip
dec
or
ljmp
push
std
dec
fsub
scas
adc
jae
imul
leave
and
jb
sbb
jns
into
pushf
nop
shll
cmp
mov
mov
dec
adc
popa
mulb
pusha
push
imul
add
mov
popa
pop
adc
and
inc
mov
jecxz
and
popf
outsl
pop
and
cmp
enter
mov
xchg
cmpb
shr
test
aaa
stos
mov
out
pop
push
dec
cmp
push
inc
dec
loope
mov
mov
pusha
push
xchg
divb
dec
enter
testl
jbe
lahf
sbbb
push
es
xor
into
ss
lock
add
jg
jp
imul
sub
fdivs
sbb
mov
jp
test
inc
fsubrs
jge
mov
sub
pop
imul
sub
lret
inc
xchg
popf
xchg
sbb
mov
shrb
mov
popf
cmc
daa
mov
sbb
xchg
and
mov
ljmp
mov
fs
xchg
data16
pop
and
xchg
jge
leave
imul
pusha
adc
std
push
inc
cltd
xchg
mov
lods
shll
jne
pop
pop
add
and
aaa
loop
aam
mov
ds
imul
subl
shll
sub
loope
sbb
sub
mov
adc
shrb
cmpsl
jns
fs
xor
outsl
xor
rcrl
xchg
ds
outsl
sti
stos
int
sbb
in
xor
jecxz
jo
mull
or
repz
shld
or
cmp
mov
pop
sahf
fistl
imul
repnz
and
jmp
into
andl
je
lret
mov
dec
mov
std
test
stos
sbb
mov
mov
and
push
adc
idivb
sbbb
fwait
fs
mov
imul
sbb
negl
mov
and
jp
fisubl
outsb
mulb
sub
stc
sbb
push
mov
inc
cmp
jae
pop
jo
mov
jecxz
ds
push
mov
mov
lea
jnp
les
sbbb
push
mov
idiv
xchg
ljmp
cmpsl
into
dec
jle
mov
inc
fbstp
jge
rclb
mov
sub
push
xchg
sub
bound
mov
clc
sbb
add
sti
shrl
mov
pop
stos
cmp
cli
rcll
sti
cwtl
mov
loope
nop
fstps
aaa
and
test
add
repnz
xorb
insl
lea
and
aaa
xchg
and
imul
mov
out
movsl
scas
pop
and
or
cmp
xchg
in
sbb
and
mov
sarb
negl
into
hlt
int
mov
mov
pop
jb
stc
dec
dec
pushf
loopne
pop
jle
sbb
pushf
jp
push
lcall
iret
add
pop
add
adcl
movsl
adc
cwtl
push
push
fists
sahf
ss
ja
loop
push
das
repnz
adc
push
aas
testl
sbb
sti
push
roll
pop
dec
int3
int3
mov
or
sub
push
jo
test
mov
xlat
push
xlat
xchg
fidivs
and
out
ds
xchg
push
stos
and
rorl
jecxz
lret
out
cltd
add
mov
push
fcomps
sarl
insb
xchg
inc
sub
push
cmp
in
sbb
pop
popa
xchg
lods
mov
aas
jno
xchg
mov
insb
outsb
xchg
in
push
add
rcr
and
inc
xchg
fiadds
repnz
xchg
pusha
push
mov
test
and
movsb
push
dec
sub
jp
inc
mov
ret
xchg
mov
inc
jne
sbb
or
mov
clc
shrl
outsl
adc
rolb
sub
fldcw
scas
push
jno
adc
test
push
lea
in
ret
push
mov
movsl
std
push
push
sub
stc
movsl
pop
or
mov
mov
insl
lods
ljmp
lcall
rcrl
dec
shll
xchg
and
cmp
leave
push
mov
jnp
rcll
test
cmpsl
les
pop
push
cmpsl
xchg
lds
inc
xchg
mov
add
adc
jp
sub
jmp
inc
sub
pop
ja
mov
bound
xchg
mov
scas
pop
mov
jae
ja
xchg
pop
int
sbb
push
dec
dec
outsl
fs
fwait
xchg
mov
testb
adc
pop
fstl
sarl
sbb
mov
leave
xor
jle
jne
imul
mov
addr16
adc
pop
mov
cmc
xchg
mov
je
outsb
inc
into
sbb
lret
or
pop
sbb
les
cmpsl
fs
jmp
lock
pop
cmp
mov
arpl
addr16
ret
mov
imul
fildl
mov
fnstenv
pop
sbb
mov
push
mov
push
sub
popa
xchg
shlb
incb
mov
adc
pop
xor
sub
mov
pop
imul
push
pop
stos
test
outsb
ja
adc
repnz
test
adc
movsl
out
das
in
sar
mov
or
mov
inc
push
pop
mov
mov
int
gs
and
mov
sub
or
mov
or
in
lea
shll
int3
fldt
jmp
fidivrs
ljmp
icebp
mov
xchg
insb
fstps
and
iret
fistpll
insb
insl
lock
mov
je
aam
scas
in
les
mov
lds
pop
adc
adc
mov
inc
mov
js
sbb
dec
jecxz
movsl
aas
aaa
fstpt
aam
scas
dec
out
mov
popf
jo
pop
cmp
ret
call
push
inc
mov
cmpl
sar
stc
cli
xlat
mov
mov
lds
mov
jnp
and
jl
or
lahf
insb
pop
pop
mov
pop
fcom
test
fwait
dec
xchg
sub
stos
fwait
pushf
mov
aaa
arpl
inc
jne
pop
inc
jne
loop
int
jns
xchg
insl
test
addr16
and
and
push
test
mov
jmp
xor
lock
inc
insb
sub
int3
pop
and
xchg
aam
bound
inc
sub
repnz
sti
cld
hlt
dec
cmp
sahf
and
pop
daa
sbb
test
scas
xor
js
xchg
xchg
out
not
lret
pop
out
movsl
and
cli
and
sbb
pop
jbe
adc
or
dec
cmp
pop
pop
pop
lds
lahf
xchg
xlat
pusha
jbe
fiaddl
std
enter
sbb
sti
fnsave
push
fsubrs
jp
push
mov
stc
pop
bound
cmpsb
push
lock
lret
aaa
mov
mov
mov
xchg
push
sahf
mov
enter
sbb
dec
push
into
mov
fwait
add
mov
pop
dec
mov
xchg
fidivs
test
and
push
jge
xor
or
loope
jae
into
cmc
imul
into
pop
lods
fcmovu
sbb
rolb
test
je
cwtl
mov
adc
imul
out
out
rcll
inc
push
mov
scas
js
jge
mov
int3
sbb
cmpsl
xor
push
inc
sarb
inc
jmp
inc
adc
into
imul
lods
cmp
shrl
lea
pusha
mov
scas
push
into
rolb
adc
fidivrl
fwait
lock
loopne
cmp
xchg
inc
lods
sbb
cs
add
push
popf
outsb
ret
mov
cwtl
mov
daa
test
mov
cmp
or
outsb
fnstsw
stos
push
adc
cwtl
xchg
fadd
cmp
stos
jnp
aad
xchg
and
daa
inc
gs
data16
mov
lret
push
dec
add
loopne
in
sub
ss
or
and
xchg
jp
push
in
sub
or
mov
bound
cmp
sahf
cmp
dec
addl
sbb
fidivrl
push
cwtl
jbe
ja
xor
ss
xchg
jle
jle
in
loop
jnp
into
xchg
jae
pop
leave
fdivrs
movl
pop
test
jo
stos
fnstsw
mov
pop
lahf
mov
movsl
std
mov
shll
ss
insb
in
outsb
movsl
cltd
int3
mov
pop
cmp
test
lea
sub
popf
jl
pop
mov
fisttpll
mov
push
inc
cwtl
xchg
xor
mov
fs
xor
in
clc
test
popf
dec
aad
jbe
jg
mov
cmp
test
and
sub
pop
xor
fcmovb
mov
mov
shll
arpl
test
push
popf
pop
jns
add
mov
sub
push
or
push
xor
push
or
sub
mov
xchg
push
data16
ljmp
stos
or
outsb
or
sti
pop
sbb
mov
or
das
int3
hlt
in
jp
mov
jle
inc
cmp
sbb
ret
inc
push
xlat
enter
jle
sbb
inc
push
and
ljmp
xchg
ret
push
add
mov
mov
cmpsb
xchg
mov
aas
push
cmp
enter
out
mov
ds
stc
inc
cmp
mov
push
jnp
push
adc
rcl
shlb
addr16
in
loop
fbld
ss
mov
sbb
push
idivb
adc
jg
mov
addr16
lods
aam
add
or
cmp
sbb
sbb
out
outsl
loopne
push
cmp
insb
cli
jle
out
lea
pop
jl
pushf
mov
mov
sbb
mov
and
dec
cmp
cs
and
popf
loop
add
sbb
push
daa
or
in
insb
pop
lea
testl
ss
jae
in
or
pop
lods
pop
insl
inc
and
popf
popl
stos
sti
sbb
imulb
dec
mov
out
call
pushl
mov
push
scas
and
mov
push
cs
loop
hlt
push
icebp
aad
mov
and
push
orl
cmp
cmp
pop
popa
test
scas
loope
insb
mov
push
in
mov
sarl
cltd
nop
sub
push
mov
cli
pop
dec
jo
mov
cltd
dec
xchg
pushf
sub
push
cmpsb
in
or
stc
shll
cltd
hlt
lret
jg
pop
stos
int3
out
sub
shlb
mov
xor
add
mov
dec
dec
dec
hlt
xchg
sbb
xor
lds
adc
pop
pushf
repz
adc
cmp
stc
inc
push
inc
xchg
jae
xchg
dec
add
and
fwait
xor
insb
ja
gs
cmp
fmuls
dec
inc
jb
sbb
sahf
xchg
jnp
iret
fldenv
pushf
xor
push
movsb
push
mov
sub
outsb
aad
add
push
sbb
fcoml
mov
pusha
xor
pop
cwtl
gs
mov
repnz
mov
loop
aaa
mov
stos
sbb
fucomip
cmp
test
pop
aad
jmp
sbb
or
shlb
gs
mov
scas
cli
cmp
pop
xor
prefetch
pop
sub
leave
xor
cmp
movsl
sbb
pop
lret
ficoml
and
pop
insl
sbb
add
sub
sbb
popa
addb
cld
pushf
push
repz
std
inc
push
adc
cmpl
stc
dec
push
xchg
push
mov
adc
mov
in
insl
sub
add
mov
sub
arpl
lret
pusha
and
dec
sbb
mov
or
daa
fldenv
fidivl
pop
lock
lods
dec
adc
adc
cmpsl
subb
sbb
sarb
les
mov
test
daa
or
adc
mov
add
push
xor
push
test
stos
sub
arpl
clc
jmp
in
add
push
mov
dec
mov
mov
add
test
inc
out
sub
adc
sub
dec
loopne
inc
inc
movsl
cmp
xchg
lret
ljmp
xchg
es
fidivrl
and
hlt
cmp
xor
scas
sahf
push
or
ljmp
stc
pusha
scas
lea
shll
add
lahf
pop
adc
xor
arpl
push
mov
idivl
jno
fucomip
andl
dec
adc
inc
adc
sbb
insl
hlt
into
mov
aad
mov
sub
adcb
movsb
sbb
pushf
sbb
ljmp
xor
das
xchg
dec
rorb
pop
or
push
sub
ret
loope
or
xor
data16
cs
jecxz
ljmp
cmp
pop
pop
pusha
mov
bound
sbb
leave
pop
add
sarl
insl
repz
sub
outsl
loope
in
outsb
sbb
dec
imul
insb
nop
jb
pop
shlb
addr16
stos
std
cwtl
and
out
arpl
jecxz
aas
aas
into
insb
mov
adc
sub
xchg
mov
in
push
jae
add
jle
push
lods
dec
mov
adc
mov
jo
jge
inc
scas
mov
repz
nop
xor
ret
lcall
or
fdivrl
lods
pop
adc
pop
push
mov
cli
xchg
cwtl
mov
fstpl
dec
in
shl
sbb
mov
xchg
loop
int3
leave
pop
hlt
shrb
dec
add
cld
mov
nop
dec
push
in
pop
sbb
sbb
shll
test
das
inc
dec
sub
shufps
adc
push
cmp
pop
das
push
mov
popa
sub
xor
in
push
push
jnp
xorl
inc
aam
in
adc
test
mov
notb
outsb
or
mov
lahf
in
inc
dec
ds
or
arpl
or
jp
push
jo
push
enter
lods
pop
mov
cli
inc
mov
cmp
aad
xchg
mov
dec
adcl
test
inc
repz
pop
jnp
dec
sub
fincstp
sahf
jmp
mov
xor
adc
add
movsl
push
test
xchg
mov
std
sahf
or
and
jae
sub
push
test
fcompl
inc
and
scas
jmp
cli
lret
or
mov
push
mov
jmp
das
enter
xor
add
outsl
and
inc
xor
out
aaa
daa
icebp
mov
outsb
adc
cmp
rcll
cmp
jl
sub
pop
or
xchg
sub
or
fimuls
adc
and
pushf
inc
or
inc
ljmp
imul
pop
out
xchg
out
sbb
mov
push
test
insl
xor
sar
jno
or
fisttps
lds
loope
lea
js
lret
lea
cs
adcl
cmpsb
or
mull
jge
cmp
cmp
jecxz
shrb
fwait
xor
mov
addr16
popf
insb
stos
add
and
jmp
loop
lock
rolb
sub
out
lea
cmp
shll
sbb
cmp
and
inc
jb
sub
xchg
sub
push
xchg
mov
pop
sahf
divb
loop
mov
xchg
xor
and
inc
pop
in
pushf
mov
mov
jecxz
mov
std
enter
aaa
aaa
cltd
outsl
sub
adc
xor
scas
js
push
insb
pop
cmp
dec
sub
aaa
cmp
xorl
inc
and
rcl
sti
pop
xor
sbb
mov
inc
insb
data16
inc
jle
sub
pop
mov
mov
xchg
je
mov
pop
test
jo
stc
pop
dec
insl
dec
fldt
lds
cmpsl
insl
push
xor
stos
std
repz
mov
sub
adc
fdiv
push
pop
push
jo
test
jmp
rorl
movsl
scas
cmp
cmc
dec
icebp
test
cmpsb
rcll
test
aas
inc
xchg
sbb
inc
xor
lea
scas
scas
jne
fsubrs
test
mov
cmp
xor
bound
mov
aaa
sub
jl
push
jne
push
call
adc
cld
inc
fs
jne
out
les
and
stos
xchg
popa
or
out
popa
and
sbb
mov
inc
push
ja
pusha
lock
push
loop
outsb
inc
fmuls
cld
fldl
add
cmpsl
test
pop
prefetch
data16
in
mov
pop
out
mov
inc
mov
and
lock
lods
lahf
push
or
test
xor
mov
adc
dec
add
shlb
pop
adc
out
pop
add
cmpsl
data16
testl
sti
or
mov
xor
jnp
jg
sbb
std
nop
cmpsl
stos
imul
aam
jmp
push
call
aad
or
imul
daa
jecxz
out
stc
cvtdq2ps
xor
inc
jne
lret
sbb
sub
test
jns
in
ljmp
aas
lret
push
roll
cmp
fdivrl
jl
push
stos
adc
adc
adcb
jmp
cmp
test
insl
jno
jg
stc
ret
pop
jmp
icebp
arpl
xchg
sbb
ret
les
cld
pop
or
jg
xchg
lds
jb
jae
pop
nop
sarb
xor
data16
in
or
ret
jmp
enter
sti
xlat
mov
lret
rorl
cld
js
jbe
in
aad
fwait
sbb
jge
lods
and
sub
mov
jle
or
icebp
adc
or
test
push
jo
jbe
add
pop
test
lahf
mov
pop
nop
sbb
sub
add
mov
dec
xchg
sahf
cmp
push
xor
popf
sti
cmp
les
inc
and
xor
cmc
fcmovb
fisttpll
and
lcall
xor
jno
loop
loope
push
sbb
pop
iret
pop
push
pop
mov
add
ds
cmp
les
pushf
mov
cs
xchg
cli
test
mov
inc
cmp
lds
imul
mov
fisubl
outsl
roll
fnstsw
adc
int
jg
scas
sub
xchg
jo,pn
ja
xchg
inc
pop
mov
mov
mov
sbb
sbb
cli
mov
push
cmpb
cmpsb
xor
sub
push
test
push
or
sbb
in
scas
push
jb
int3
and
rorl
push
fstpt
push
test
xchg
ljmp
or
dec
add
hlt
aas
inc
nop
test
mov
jae
mov
pop
mov
adc
mov
dec
xchg
cmp
fisttps
push
das
adc
daa
imul
mov
add
shrb
pop
addb
cli
xchg
call
insl
mov
cmp
scas
pop
push
xchg
jb
sub
lahf
call
mov
add
lahf
and
fistpl
pop
pop
std
out
fwait
dec
push
daa
stc
push
pop
add
sub
jbe
jne
fstpt
xor
sub
and
mov
mull
and
mov
je
cmp
shll
in
daa
aas
and
sub
ljmp
jo
nop
mov
mov
outsb
cmp
test
fwait
xchg
adc
lcall
scas
mov
loope
test
inc
mov
or
or
jno
lods
testl
adc
popf
mov
ret
adc
inc
jne
pop
xchg
jp
inc
xchg
outsb
push
mov
enter
clc
cmp
push
mov
scas
push
in
lahf
push
adc
pop
ficoms
popf
cmpsb
add
scas
inc
iret
ret
mov
and
mov
cmpsb
outsb
daa
inc
test
xchg
add
imulb
pop
or
cld
inc
dec
pop
pop
insl
and
cmp
mov
iret
add
push
es
sbb
ret
fisubs
clc
repnz
jmp
mov
lahf
push
cwtl
push
sahf
adc
xor
xchg
adc
fcomp
or
orl
fidivl
inc
mov
or
repz
scas
sbb
or
add
push
frndint
scas
xchg
xchg
mov
orl
and
bnd
cmp
dec
xchg
daa
popf
lea
pop
pop
mov
jo,pn
or
push
les
sub
popa
daa
stos
push
ret
lds
fnstenv
lds
lods
mov
cmp
sar
in
int3
test
cmc
sub
sysret
cmp
std
push
inc
lock
lahf
mov
addb
clc
out
cmp
inc
fcoms
jnp
out
push
jnp
xchg
je
adc
loopne
or
or
scas
fidivs
and
lds
jp
loopne
mov
and
jne
in
mov
lock
mov
mov
xchg
inc
add
out
or
fdiv
daa
outsb
mov
rorl
cmp
inc
and
test
mov
or
and
mov
mov
aam
adc
and
insb
pop
push
stos
in
mov
test
outsl
loop
into
fisubs
dec
lret
jl
in
push
lea
mov
jb
dec
cmp
sub
shrl
pop
sub
pop
inc
dec
in
push
mov
addl
out
add
add
out
lea
pop
sub
cwtl
ss
mov
popf
mov
jnp
pop
jnp
cld
xchg
es
pusha
dec
or
cwtl
cs
sti
push
mov
dec
mov
pusha
or
aas
dec
cli
xor
mov
adc
xor
in
xor
bound
fninit
mov
sub
mov
fiaddl
dec
out
xor
imul
mov
mov
out
std
add
push
cmp
push
mov
add
call
sbb
or
inc
add
es
or
pop
pusha
mov
sti
call
fistpll
mov
mov
lds
dec
push
iret
subb
push
shll
nop
outsl
jb
xchg
pop
bound
pop
cltd
rcl
and
cmp
mov
out
loope
cmp
sub
inc
xor
fbstp
sti
mov
jbe
mov
fadds
cmp
xor
xchg
das
addb
sbb
mov
movsl
repnz
inc
ss
mov
jno
int3
wbinvd
xor
shl
out
test
sti
lock
bound
jae
aad
fstpl
dec
out
mov
int3
push
cli
cmp
jae
mov
aas
pop
xlat
push
lock
sbbl
outsl
jo
subl
insl
lds
nop
call
jge
dec
jnp
pop
push
fists
mov
pop
rcrl
ret
aaa
insl
pop
jmp
mov
cmp
add
jns
shlb
call
add
scas
lods
clc
xor
ficoml
mov
sti
cmc
jo
shll
jp
jne
xchg
andl
enter
pop
lods
into
sub
ficoml
test
ss
mov
lods
shl
dec
or
xor
or
push
mov
dec
add
mov
jmp
insb
in
xchg
mov
shrl
adc
xorb
aaa
jae
pop
hlt
je
lahf
mov
or
push
push
arpl
stos
lea
mov
inc
or
or
iret
or
or
dec
out
in
aam
or
add
pop
mov
sbb
lods
sbb
dec
add
arpl
les
aaa
aad
idiv
imul
xchg
sub
jp
addr16
and
xchg
dec
or
sbb
mov
mov
scas
jno,pn
roll
jbe
cwtl
mov
out
cltd
scas
ret
dec
pushf
negb
xor
lret
leave
addl
push
dec
dec
cmpsl
mov
scas
pusha
mov
cwtl
jnp
add
mov
jno
test
xchg
lds
xchg
rorl
push
cmc
push
jo
cltd
std
xchg
inc
and
inc
or
dec
push
insl
jo
popf
test
iret
int
mov
or
jb
cmp
adc
push
outsl
or
jo
in
adc
push
pushf
pop
fcomps
sub
inc
push
xor
pushf
pop
mov
rep
sbb
adc
add
cwtl
jecxz
pop
jl
jmp
icebp
or
or
test
cmp
xchg
nop
or
fs
les
push
xchg
sub
mov
pop
mov
xchg
push
stos
jno
mov
mov
sbb
sub
gs
dec
xlat
xchg
sbb
std
inc
xchg
adc
sbb
insl
ret
dec
repz
xchg
iret
dec
jae
setg
add
popa
adc
and
jae
fcmovnbe
inc
jne
pusha
je
shrl
mov
add
popa
sti
cltd
push
daa
cmp
add
pop
call
xchg
xor
shll
sub
jl
xchg
dec
sbbl
dec
fildll
pop
push
testl
jbe
sbb
lea
imul
icebp
pop
mov
out
inc
cli
mov
sbb
adc
hlt
rorl
inc
loopne
add
ljmp
pop
ret
mov
pop
mov
in
jae
pushf
fldl
add
sub
je
mov
cltd
push
pop
mov
insb
adc
aam
pop
test
mov
and
lret
test
movsl
adc
cmc
imul
xchg
add
jg
popf
inc
adc
outsb
ss
xchg
mov
decb
dec
lods
ret
jg
push
lds
sbb
and
add
aaa
adc
pop
lea
jmp
adc
sahf
push
mov
inc
loop
fiadds
add
loopne
push
mov
cmp
inc
scas
outsb
mov
jmp
mov
and
dec
mov
lods
cmpsl
add
or
imul
push
jo
cwtl
outsb
pusha
insb
jbe
or
in
call
pop
inc
test
mov
xor
or
push
dec
and
bound
insb
ljmp
push
and
stos
insl
xor
inc
jp
rorl
stc
push
mov
mov
xchg
mull
outsl
cmp
icebp
mov
scas
pop
enter
adc
lcall
test
and
rep
mov
mov
dec
pop
cs
mov
mov
mov
lret
cmp
dec
mov
jbe
lds
pop
inc
mov
jg
cld
aaa
sub
das
mov
sub
and
push
rol
xor
and
shr
pop
scas
jne
mov
mov
pushf
lods
push
push
cmp
enter
into
push
mov
pop
movsb
mov
jo
cli
into
mov
sub
pop
movl
icebp
ret
adc
test
rolb
lret
fwait
pop
adc
repz
add
jnp
cs
test
jl
inc
aam
and
iret
in
scas
shll
gs
lds
mov
aad
push
inc
ret
mov
in
sbbl
add
test
vpmacssdql
cmp
call
bound
addr16
xchg
stc
jecxz
lea
nop
mov
mov
xchg
add
sbb
or
mov
cmp
out
sbb
cmp
sbb
push
mov
mov
and
ss
addb
int3
fsub
out
xor
push
add
cld
stc
push
cli
pop
pop
enter
sbbl
in
cli
fwait
in
mov
inc
inc
dec
or
shrl
outsl
cli
aam
fiaddl
mov
pusha
sub
nop
push
push
pop
xor
enter
filds
int3
xchg
in
aaa
push
push
pop
push
lock
or
lods
dec
icebp
mov
mov
pop
movb
push
mov
enter
adc
sub
data16
fcomps
mov
imul
cmp
xor
push
movsb
dec
xor
lock
inc
and
cmp
loop
inc
sbb
pop
lods
mov
xchg
mov
sbb
xchg
gs
cld
lds
test
data16
mov
je
nop
pop
xchg
inc
std
ljmp
xchg
jb
adc
sahf
lretw
in
loope
dec
mov
adc
int3
and
jns
sbb
pusha
jmp
mov
repz
jg
jle
xchg
lret
pop
mov
imul
aam
mov
and
add
subl
ja
lods
jo
or
jl
cmpsl
fisttpll
pushf
inc
push
cmp
mov
test
cwtl
push
push
mov
insl
sub
and
loop
call
cmp
andl
xor
lahf
push
and
icebp
out
cwtl
push
nop
pop
ljmp
mov
test
sub
ss
inc
data16
movsl
xlat
lret
mov
jno
adc
pop
cmp
sbb
stos
ret
dec
jmp
in
jb
inc
and
pop
push
lahf
sbb
mov
fadd
xor
jo
int3
cli
in
fstps
fs
pop
push
sbb
repnz
ffree
std
xchg
aad
inc
inc
popa
dec
aas
divb
int
push
add
mov
dec
cmp
stc
sub
add
decb
push
jge
cli
inc
adc
xchg
push
mov
in
and
ljmp
cltd
fists
int3
scas
fsubl
push
mov
fdivrp
or
xor
dec
and
idivl
push
pop
xchg
hlt
cld
stos
jae
mov
in
and
cld
stos
push
in
jns
push
jg
pop
sbb
icebp
in
push
sub
popf
popf
mov
ds
or
cmp
ljmp
dec
mov
mov
pop
out
es
and
daa
mov
loopne
pop
popa
mov
inc
leave
push
dec
add
sub
sub
fcomp
in
jne
jecxz
add
adc
mov
dec
xor
cmpsb
mov
jl
mov
aam
out
xchg
jb
sti
pusha
fisttps
jns
inc
pop
and
adcb
repnz
xor
push
sahf
and
xchg
sub
call
imul
xchg
xchg
enter
aad
repnz
push
pusha
cmp
add
or
daa
dec
std
arpl
pop
lods
dec
dec
sahf
cwtl
xor
xchg
push
fs
int3
frstor
js
out
outsb
sub
ss
addr16
sub
mov
sbb
stos
jae
add
pop
lds
inc
dec
push
cmp
xchg
aaa
jg
cmp
int
mov
flds
mov
jp
cmp
test
push
inc
and
out
push
fsubrp
in
mov
add
pop
and
jmp
loopne
imul
and
idivl
xor
mov
adc
insb
cmp
rorb
sbb
mov
mov
into
mov
add
out
cmp
mov
lods
cmp
lea
popa
jp
push
in
das
mov
cmp
jge
xchg
push
lds
test
push
cmp
mov
mov
adc
xor
mov
cmp
dec
inc
or
sub
add
in
push
mov
inc
inc
and
jl
and
push
out
push
sti
testl
mov
push
nop
cmp
repz
jno
dec
mov
pop
inc
popa
push
pop
sbb
jge
jmp
scas
inc
das
sbb
mov
mov
cmp
jl
je
inc
push
aaa
in
cs
daa
loope
xchg
mov
int
push
add
pop
repnz
stos
xchg
daa
inc
dec
ds
sub
js
or
xchg
gs
push
loopne
push
jle
bound
andl
ds
xor
push
jle
mov
mov
jns
mov
dec
pop
imul
push
inc
or
lahf
out
lods
sbb
into
int
push
sub
int
pop
cltd
push
add
adc
add
cmpsl
gs
xor
push
xchg
lea
jecxz
outsb
cltd
pop
jecxz
cs
int3
pop
or
cmc
mov
sbb
mov
jmp
jnp
sbb
outsl
push
push
and
sbb
cmp
fsubrl
pop
mov
and
out
cmp
or
loop
imul
mov
fbld
lods
mov
outsl
mov
loop
adc
jne
std
jns
jecxz
loopne
andb
mov
pop
push
jo
push
or
int3
mov
sarb
jle
mov
aam
iret
adc
pop
stos
stc
bound
mov
stos
add
pop
movsb
bnd
mov
das
mov
pop
insl
mov
dec
js
fdivl
or
lods
push
jo
ret
cmpsl
loope
xor
pop
cs
xchg
test
sub
loop
jg
cmp
loopne
sbb
dec
jecxz
test
rorl
sar
ret
incl
xor
repnz
dec
dec
leave
push
mov
js
xchg
jg
or
outsl
mov
pop
and
les
xchg
in
daa
and
inc
jnp
sbb
leave
scas
and
push
inc
sub
cltd
xlat
mov
mov
push
adc
cmpsl
mov
fnstsw
pop
pop
pop
sbb
push
in
cltd
mov
rcr
stos
pop
mov
mov
dec
repnz
push
repnz
mov
rorb
or
inc
jae
shll
xchg
push
leave
inc
xchg
lahf
mov
ds
sbb
mov
std
cmp
or
lret
sbb
scas
cmp
rcr
cmp
xor
xor
outsl
inc
ss
ficoml
sub
lret
stc
insl
in
jns
xor
inc
xchg
into
fdivl
iret
cli
mov
mov
pop
pusha
mov
lret
popa
dec
mov
add
mov
and
inc
pop
lds
jecxz
andb
sbb
xor
and
ljmp
rorb
fdivrs
lcall
pop
idiv
cmp
scas
lock
std
sarb
push
in
gs
inc
fs
cwtl
push
lods
clc
ss
popa
inc
lea
cmpb
fisubs
mov
es
dec
xchg
insb
je
cmpsb
push
adc
inc
jbe
xchg
scas
xchg
insb
jo
int3
xor
flds
or
add
roll
mov
out
cs
mov
icebp
jge
adc
sub
mov
add
lods
or
cwtl
push
lods
or
mov
mov
lea
nop
call
mov
inc
gs
mov
hlt
or
ss
dec
or
push
mov
add
xchg
jecxz
mov
ror
ja
inc
mov
out
movsl
movsb
pop
mov
xchg
pop
repz
cmpsl
clc
xchg
or
and
es
xlat
xlat
sbb
inc
cmp
call
dec
inc
pop
jg
fsubl
out
dec
mov
mov
push
lock
mov
int3
and
ret
cmp
jmp
mov
icebp
mov
fwait
push
scas
jge
mov
push
pop
lea
jl
imul
shll
xchg
out
inc
dec
mov
pop
subl
push
xchg
dec
andb
mov
jbe
imul
in
int3
adc
jno
lods
jo
xor
cmpb
outsb
aaa
shr
clc
leave
push
or
or
mov
dec
jno
mov
movsl
out
add
dec
inc
lods
pop
mov
dec
int
insl
test
xchg
mov
jb
lods
xchg
lock
jne
pop
in
sbb
clc
sbb
arpl
push
sub
arpl
pop
ret
and
xchg
lahf
stos
scas
les
outsb
pop
ret
jg
ljmp
out
push
inc
int3
data16
push
popa
pop
test
adc
inc
lret
mov
adc
xchg
dec
jbe
fcomps
cwtl
test
lods
cwtl
rorl
xchg
push
das
les
inc
xchg
divl
inc
add
xchg
adc
out
or
cli
or
sbb
xor
push
in
xchg
lahf
pusha
jecxz
pop
push
arpl
cmp
fisubs
cmpsl
adc
mov
pop
inc
jnp
fabs
mov
or
push
lods
cltd
out
mov
ret
cwtl
mov
fs
mov
les
mov
js
push
aaa
or
aad
mov
jnp
scas
int
or
cmp
leave
pop
addb
stos
pop
fwait
mull
aad
aaa
popa
add
xor
mov
jns
xchg
sub
fstl
sub
data16
mov
pop
loop
fisubrs
out
adcl
cmpl
scas
jle
sbb
sbb
fcom
std
push
xor
sbb
adc
loope
or
adcl
fwait
cmp
xor
inc
or
push
xor
cli
and
cmp
mov
xchg
popf
add
fs
ljmp
push
jnp
mov
test
out
adc
cmp
push
aas
pushf
adc
mov
xchg
dec
mov
imul
jmp
test
and
not
jmp
sub
into
adc
inc
cmc
sbb
jbe
xor
das
sub
mov
ss
jle
loopne
xlat
sbb
ds
mov
inc
ljmp
shlb
sub
push
adc
push
dec
push
push
dec
mov
push
scas
mov
in
adc
loop
mov
cmpb
test
dec
rcll
mov
frstor
arpl
cmpsb
jp
jecxz
nop
int3
sub
fxch
shll
xor
inc
std
and
lea
mov
xor
pop
cmp
shlb
adc
push
or
and
cmpsl
in
add
sbb
movsl
lock
iret
shl
lock
mov
leave
jmp
cwtl
or
jle
ret
repnz
cmp
inc
sti
addr16
pushf
cltd
push
andb
lock
mov
cli
cmpsl
imul
push
sbb
out
cwtl
cmp
imul
fucom
xchg
mov
movsl
popa
in
cmpb
pop
nop
inc
inc
jg
push
repz
xor
pop
and
adc
cs
insl
mov
test
jl
xchg
dec
xor
insb
sarb
cmpb
call
push
cli
std
shll
sub
dec
sub
icebp
inc
into
jbe
fwait
mov
fiaddl
hlt
add
lcall
push
jmp
lock
sbb
or
push
aas
repz
and
ret
sbb
cmpsb
cmp
pop
cmp
cltd
or
mov
sbb
ds
jl
mov
lahf
mov
pop
add
push
imul
subb
add
dec
sti
adc
add
out
aad
in
lds
popa
daa
sbbb
ss
mov
jb
scas
xchg
sub
fisttps
scas
push
jecxz
jge
pop
xchg
lock
xchg
adc
fcmovnbe
push
test
and
test
ja
fadd
stc
sbb
nop
or
push
mov
cmp
shll
push
dec
and
ror
aad
add
push
mov
mov
repz
out
outsl
cmp
cltd
push
icebp
mov
add
stc
pop
repz
mov
sub
gs
sub
imul
inc
push
mov
jae
inc
jo
mov
in
cmp
enter
arpl
xor
inc
dec
or
cmpsl
pushf
xor
dec
xorl
fwait
mov
insb
push
js
mov
jl
mov
popf
insl
dec
add
sub
and
jns
push
sbb
loopne
pop
repz
sub
out
or
mov
lds
mov
push
mov
mov
adc
daa
shll
iret
nop
jnp
sub
xchg
mov
aad
fcomip
inc
cltd
cmp
xor
inc
sahf
sub
packuswb
movsl
cmpsb
cmpsl
leave
ss
push
pop
cmp
push
mov
shrl
pop
out
or
pop
push
movsb
cmp
jno
xor
jno
cmp
aas
subl
pop
daa
add
cmc
mov
add
shll
movsb
int3
sub
movsb
push
pop
mov
int3
es
mov
jbe
aad
push
mov
lcall
repz
and
into
dec
inc
xchg
repnz
sub
inc
ror
mov
pop
sub
fdivrs
fldl
pop
cmp
imul
fbld
push
jg
and
jle
or
sub
pop
gs
add
je
insl
rcr
xchg
dec
add
cmp
cmp
pop
test
int
adc
fwait
lds
push
adc
mov
lds
mov
jge
cmp
push
push
out
leave
popa
add
outsb
dec
pop
call
lea
icebp
aad
cmpsb
xchg
ja
arpl
mov
shrl
popf
mov
repnz
lods
mov
mov
and
xchg
sbb
xlat
inc
addr16
adc
subb
adc
arpl
dec
inc
cmp
adc
mov
js
test
out
idiv
js
add
lock
cwtl
mov
into
pop
jg
mov
push
adc
int3
mov
sbb
lock
loopne
mov
mov
push
push
outsl
pop
pop
cmp
jl
mov
scas
mov
or
dec
jo
mov
adc
and
scas
and
dec
or
or
mov
adc
jno
scas
call
sub
or
cltd
out
rcrb
orb
pop
mov
inc
push
or
ljmp
push
out
ret
mov
mov
dec
orb
add
pop
mov
aad
shr
dec
bound
jne
add
xchg
push
fwait
adc
enter
call
int3
mov
and
xchg
push
inc
mov
leave
dec
adc
and
adc
push
jmp
icebp
xor
insb
lret
adc
loopne
in
imul
clc
jecxz
mov
les
inc
xor
outsl
xor
xchg
cmp
in
enter
dec
pop
in
int3
or
cmp
das
fadd
dec
loope
add
sbb
mov
cmp
mov
fmull
cld
mov
outsb
ds
and
lcall
sub
xorb
xchg
sub
and
bound
orb
sub
jl
mov
cmc
sbbl
sbb
jb
cmp
subl
jmp
add
fucom
adc
mov
rorb
xchg
fiadds
lods
mov
lea
stc
push
loop
imul
dec
xchg
push
adc
add
js
mov
in
jno
push
mov
in
dec
xchg
lcall
fs
adc
jmp
add
or
rolb
fists
shl
stc
out
or
or
aas
rorb
mov
int3
imul
xchg
mov
pushf
cmpsl
push
out
les
aad
ljmp
mov
ror
cmpsl
or
leave
jmp
xlat
divl
shll
dec
push
mov
jb
inc
jns
test
mov
loop
mov
jmp
fisubrs
jne
adcb
rorl
lcall
xchg
lahf
mov
xchg
dec
rorl
xchg
ret
sbb
dec
jo
sub
out
fiadds
cmp
adc
pop
popf
sbb
xchg
or
cwtl
push
cmp
ret
mov
or
sbb
ficompl
shlb
jae
nop
cmp
and
mov
push
fildll
rolb
roll
les
sub
adc
and
cmpl
mov
inc
inc
mov
iret
cmp
add
sahf
aad
cmp
jg
xlat
or
push
push
jns
cltd
sbb
pop
subb
scas
adc
jmp
ljmp
jl
xor
jbe
or
inc
enter
push
inc
or
add
inc
mov
fwait
inc
aaa
mov
inc
xchg
push
lret
add
shr
ret
lock
jle
lret
or
jns
hlt
ja
adc
lret
aad
mov
shll
ja
sub
xchg
sbb
pop
sub
les
adc
or
int
and
add
adc
adc
int3
mov
ss
mov
adc
pushw
dec
or
push
jmp
pop
imul
xrelease
mov
cli
jmp
cmpsb
cmp
jbe
xor
jge
lea
shlb
inc
add
xchg
lods
mov
mov
test
cmc
cmc
adc
setnp
mov
pop
icebp
ss
sti
add
aaa
bswap
or
mov
jb
clc
mov
mov
out
xor
xchg
divb
mov
mov
nop
xor
mov
pop
cs
pop
xchg
jb
js
movsl
movsb
xor
lret
cs
stc
jg
push
stc
mov
cwtl
leave
repnz
insb
mov
and
jno
stc
cmc
aas
mov
add
dec
or
or
cmpsb
mov
adc
push
cmp
jle
std
and
dec
jo
jg
outsl
cmc
inc
ljmp
and
add
mov
faddl
cli
xchg
jae
jecxz
je
enter
push
mov
fists
jmp
and
lret
push
lods
arpl
out
mov
xchg
mov
mov
lahf
jne
lcall
xchg
adc
mov
push
push
out
rcrl
jne
push
clc
mov
xchg
mov
in
int
out
lods
or
in
cmp
and
push
inc
stc
lods
adc
dec
sarb
xchg
mov
jns
ret
ficoms
fdivs
pop
pop
out
jmp
lret
cmp
xlat
repnz
sarb
inc
sbb
rcl
rcll
test
int
sbb
cmp
stc
movsl
pop
cltd
fcmovnb
sub
jmp
setp
cmp
jno
std
mov
aaa
mov
stos
sbb
mov
mov
cld
sub
mov
ficomps
jmp
std
lret
cmp
sahf
xchg
icebp
in
push
inc
mov
or
sbb
adc
dec
dec
jl
adc
sub
dec
adc
mov
push
ss
insb
or
sub
fnsave
dec
dec
xchg
mov
adc
insl
mov
cmpsb
cld
decb
test
mov
pop
dec
adc
das
movsb
sbb
jb
xchg
mov
push
or
imul
andnps
int3
mov
fisttpll
mov
mov
mov
xor
cmp
test
notl
inc
in
in
dec
cld
push
nop
out
cmc
xchg
xchg
cmp
mov
jle
inc
icebp
sbb
cmp
adc
push
ljmp
jp
ss
shlb
arpl
add
sbb
test
xchg
aam
dec
ljmp
pop
jae
mov
or
dec
sbb
mov
xchg
lods
aaa
push
pop
mov
into
xor
jno
jl
movzbl
in
pop
sbb
push
xor
xor
jp
or
sti
gs
mov
setge
repz
dec
stos
int
adc
repnz
lea
sahf
inc
or
mov
out
jb
pop
arpl
gs
inc
js
mov
mov
scas
cmp
or
sub
fildll
sbb
popa
or
insl
shr
rcll
cltd
cwtl
mov
hlt
lahf
roll
mov
pop
outsb
dec
adc
pop
call
mov
push
test
test
push
in
imull
outsl
push
sub
aad
pop
inc
loopne
nop
dec
scas
mov
mov
cmpsb
faddl
inc
sub
jns
pusha
and
adc
mov
push
shl
mov
or
hlt
mov
loopne
iret
jmp
cmp
jno
or
or
cmp
sub
in
xchg
jnp
icebp
jno
std
into
inc
mov
sub
or
cwtl
pop
stos
push
cld
xor
xor
in
mov
in
fwait
test
xor
or
ret
dec
xchg
out
stc
leave
outsl
dec
scas
shlb
mov
mov
xor
jbe
inc
es
add
push
mov
shlb
sbb
in
lds
fs
int
mov
icebp
add
mov
stos
scas
add
pop
push
mov
and
into
push
inc
mov
sbb
mov
pop
xchg
xor
inc
push
adc
fnstsw
lret
dec
lock
sub
in
sbb
adc
inc
mov
lahf
in
lea
nop
aad
mov
test
daa
sbb
and
in
sub
and
mov
xor
push
pop
mov
xchg
jnp
je
in
das
add
cltd
pop
pop
add
addr16
pop
dec
outsb
adcl
push
lods
in
sbb
ret
xor
mov
movsl
pop
mov
pushf
outsb
clc
aam
repz
incb
ja
add
ss
rcll
adc
call
dec
pop
je
mov
xor
xor
sbb
jb
and
xchg
adc
inc
push
mov
push
leave
mov
pop
lods
jmp
sbb
mov
sti
xor
add
pop
inc
fdivl
add
sub
cmp
xlat
pop
jbe
push
inc
mov
mov
xor
inc
jbe
xchg
sbb
add
in
jo
inc
ss
je
sbb
std
adc
pop
test
xor
push
sbb
cmpsl
out
jnp
loope
or
rcrl
pusha
xchg
xor
cmp
shll
xchg
mov
mov
xchg
outsb
adc
int
movsb
add
outsl
int
sub
xorb
mov
sub
sub
cmp
push
jae
jmp
mov
pop
daa
or
jmp
mov
jmp
cs
movsl
mov
jecxz
enter
lods
sbb
aas
dec
or
mov
shll
cltd
mov
lds
push
fs
aad
fidivrs
xchg
ret
jns
jno
les
sbb
in
mov
shlb
repnz
lea
sbb
scas
cmp
sti
sub
or
aad
inc
mov
inc
add
cmp
popa
push
push
adc
out
cmpsl
jb
sbb
inc
xor
push
test
mov
jns
add
dec
test
mov
daa
push
fsubl
out
outsb
movntps
out
fwait
xor
add
and
insb
fldt
adc
test
psubw
shll
nop
add
dec
lds
sbb
ljmp
je
ficoms
ror
ret
push
or
cwtl
dec
mov
les
in
and
xchg
stc
cmp
lds
jecxz
sub
add
fwait
jl
rcr
push
sub
movsl
push
add
cwtl
adc
push
inc
adc
mov
insl
xchg
adc
push
mov
stc
mov
prefetcht0
lods
xor
lret
roll
xor
fbstp
mov
mov
insb
sbb
shll
daa
pop
jge
dec
ss
pushf
in
inc
in
mov
fwait
sub
add
loopne
imul
sub
callw
dec
sbb
mov
mov
sti
int
aad
mov
scas
dec
lret
pop
xchg
adc
and
sarb
inc
jae
bound
cmp
xchg
negb
insb
imul
xchg
movsl
and
lret
call
test
dec
test
sbbb
sbb
xchg
sbb
inc
mov
jmp
js
xchg
jno
sbb
sbb
push
xchg
ljmp
adc
push
mov
inc
ja
rcrb
xchg
insb
es
aad
xchg
cmp
addr16
je
or
mov
ljmp
icebp
sahf
adc
jmp
cmp
mov
or
push
cli
pop
mov
movsl
adc
cwtl
in
daa
mov
jmp
xchg
mov
icebp
ffreep
cmpsb
iret
jmp
dec
fimuls
lds
in
pop
lea
out
sahf
push
imul
arpl
fcoml
xchg
test
push
xchg
and
orl
scas
out
or
shrl
insb
and
and
imul
sahf
in
jne
lret
xchg
stos
fs
shrl
ss
sarb
sbb
mov
pop
pop
js
inc
jle
das
les
dec
jns
inc
shlb
jle
mov
mov
mov
out
scas
xchg
and
mov
mov
repnz
lahf
push
test
adc
loope
arpl
mov
mov
popa
loope
test
sub
dec
pop
lea
movb
sarl
inc
mov
rcll
adc
or
cmp
pop
mov
je
bound
aam
cltd
xchg
and
xchg
jg
sbb
mov
jno
lea
call
xchg
mov
icebp
push
jmp
mov
or
mov
int3
fsubl
call
icebp
or
push
xchg
mov
les
rorb
and
mov
movsl
scas
ret
loope
loopne
mov
outsb
mov
daa
movl
jmp
lock
cmp
fbstp
sub
pop
pop
jbe
icebp
mov
pop
sbb
daa
inc
push
popa
lds
pop
push
leave
and
jbe
mov
ds
and
or
repnz
adc
mov
cmp
cli
sbb
arpl
xchg
jp
sti
add
lock
add
cwtl
dec
dec
and
adc
jp
dec
aas
in
xor
sbb
add
addl
shl
adcb
imul
iret
add
nop
cmpsl
repz
dec
cs
xor
sbb
jecxz
hlt
dec
test
rolb
ljmp
fucomi
test
hlt
fldl
lret
sub
cmp
push
out
cmp
push
mov
inc
imul
dec
incb
insl
movsb
jae
fisubrs
stos
sub
leave
bound
in
fldt
into
cmc
inc
std
mov
aam
out
mov
lds
mov
mov
adc
pop
add
push
xchg
xchg
xchg
or
sahf
xchg
add
jmp
mov
add
add
push
xchg
mov
cmc
lret
out
mov
inc
sbb
call
cmp
fsubr
jmp
xchg
mov
lock
mov
mov
mov
add
inc
test
in
repnz
xchg
pop
add
call
cli
or
repz
test
aaa
movsb
dec
inc
rolb
adc
cmp
cmpsl
test
pop
insl
mov
pop
add
or
sbb
test
inc
cmpsl
add
push
mov
mov
hlt
jns
cmp
xor
adc
int3
dec
sbb
fsubs
cld
xchg
jg
jno
ds
jle
pop
dec
repnz
scas
int3
mov
pop
lea
jmp
sbb
xchg
daa
adc
xchg
incb
in
xchg
stos
filds
dec
mov
fistpll
pop
mov
negb
push
in
je
mov
cmp
ror
rcrb
bound
leave
clc
call
sarl
jns
jno
xor
xchg
test
or
mov
fsubr
ds
lahf
es
in
stos
jae
out
sub
push
inc
pop
jmp
test
xor
outsb
or
mov
frstor
addr16
js
pushf
fldcw
xchg
mov
xchg
rcrb
mov
shlb
mov
adc
xchg
icebp
xchg
imul
cmc
xchg
and
fwait
mov
pop
cmp
xchg
adc
nop
mov
fcompl
shl
pop
jmp
cltd
sub
add
and
fstpt
sbb
loope
fdivrs
fcom
cwtl
subl
lcall
loop
mov
xchg
int
loopne
dec
add
cltd
dec
or
mov
fdivl
xor
or
in
mov
cmpsl
push
imulb
push
addr16
orl
das
adc
xchg
rorl
faddp
iret
cmpsl
lahf
mov
fwait
data16
cmp
mov
inc
test
repz
dec
repz
jp
mov
rclb
inc
and
cmp
adc
aam
adc
sbb
push
sub
popa
call
push
ret
and
roll
stos
js
adc
xor
and
clc
jno
outsl
mov
popa
mov
cmc
mov
outsl
inc
xchg
jp
test
mov
int3
fmuls
xchg
negl
pop
add
cwtl
mov
mov
scas
mov
add
int
push
in
sbb
in
sbb
xchg
xchg
in
loopne
add
repz
stos
xor
mov
adc
xadd
or
xor
jle
sub
jnp
rolb
fimull
icebp
mov
mov
les
scas
pop
rclb
test
jg
aad
jle
mov
inc
shrl
popa
test
in
push
or
jecxz
cli
pop
push
into
ljmp
dec
inc
addr16
dec
js
subl
cmp
nop
aaa
gs
xor
in
push
insb
xchg
jge
out
xlat
push
mov
test
pop
xchg
test
mov
call
xor
pmulhuw
ret
lret
jmp
lahf
mov
repnz
push
data16
imull
scas
in
imul
loop
and
sahf
mov
mov
push
jne
xchg
xor
js
push
inc
pop
add
sbb
push
sti
or
inc
sahf
cmp
out
test
pop
mov
decb
adc
imul
jl
or
fldl
cmp
in
inc
addr16
fidivrl
cltd
call
dec
idivb
iret
out
pushf
sub
sbb
pop
sti
ret
mov
cltd
dec
sbb
cwtl
push
dec
jmp
add
fsts
data16
mov
pop
ss
scas
outsl
cmp
in
pop
fistpll
ret
ret
xlat
test
and
push
jb
and
shll
clc
dec
inc
test
push
mov
sub
fistpll
in
xor
je
sub
aam
cs
ss
dec
movsb
push
ss
shr
push
int
popf
cmp
loope
pop
inc
xor
fildl
add
insb
jo
divl
mov
mov
js
adc
cmp
aaa
data16
xchg
push
jp
aam
push
es
mov
fidivrl
mov
inc
push
andb
inc
mov
bound
inc
pop
or
cmp
pop
pop
jp
lods
jmp
sbb
test
fldt
sbb
or
pop
xchg
adc
gs
mov
fwait
adc
sbb
mov
mov
pop
outsb
dec
pop
mov
jae
dec
div
jbe
int3
stc
push
popf
or
xor
pushf
subl
ficomps
outsb
pop
or
repz
lock
mov
lahf
cld
jno
push
sbb
lahf
mulb
ds
cmp
bound
xchg
loop
cmp
test
adcb
inc
jp
xlat
sub
outsl
xor
repnz
insb
xchg
xchg
fnsave
inc
inc
sub
pop
push
in
jne
arpl
aam
rcl
je
mov
ja
js
push
enter
cld
mov
out
mov
jle
push
pop
inc
ficoml
repnz
xchg
data16
scas
jp
sub
push
fcoml
je
lea
movsl
arpl
lret
scas
pop
dec
or
mov
gs
out
add
and
xchg
dec
pop
pop
test
mov
or
icebp
stos
aam
and
inc
std
daa
popa
call
ret
out
lock
popf
ljmp
inc
pop
imul
add
jbe
cmp
mov
push
dec
add
add
mov
outsl
imul
call
pop
lahf
test
cmp
les
popa
pop
mov
cmp
cmp
divb
call
or
jmp
incb
cmp
push
inc
xchg
push
int
sbb
shlb
pop
testl
sub
es
cmp
xor
popf
clc
mov
xchg
mov
cmp
xor
sahf
icebp
imul
movsb
out
dec
rol
and
fwait
outsl
and
aad
adc
mov
fsubrl
popf
stc
mov
sbb
xor
sarb
gs
sbb
movsb
and
je
mov
sbb
inc
push
push
insb
dec
sbb
xchg
sbb
push
xchg
inc
jle
lcall
jmp
and
push
fadd
hlt
push
push
pop
dec
push
nop
push
or
iret
movsb
mov
adc
adc
mov
inc
xchg
nop
fsubl
fidivs
js
push
mov
sbb
cmpsb
cmp
adc
cli
pop
movsb
leave
xchg
push
xor
mov
jnp
or
adc
jp
pop
pop
add
fs
sbb
rcrb
xchg
jns
imul
sub
nop
stc
adc
int
xor
xchg
mov
call
add
jg
idiv
cmp
sarl
bound
gs
dec
es
inc
dec
dec
xlat
xchg
push
inc
inc
aam
hlt
cmc
jno
mov
pop
ja
fadd
and
outsb
dec
movsb
stos
rcrb
shlb
lods
pop
add
adc
pushl
test
out
mov
shll
cmp
inc
inc
mov
and
cld
cmpsl
push
aam
aas
popf
jns
pop
sub
and
jg
orl
jae
ljmp
pop
inc
inc
and
or
pop
test
jl
inc
jne
xchg
test
jbe
mov
cli
cltd
xchg
mov
push
push
loopne
incl
ret
es
jge
iret
mov
mov
ficompl
adc
loopne
jo
fsts
dec
fmull
rclb
outsb
push
imul
xchg
inc
ds
pop
mov
pop
push
jae
mov
add
xorl
or
cmc
sbb
mov
mov
sub
insl
xor
subl
mov
push
out
mov
test
stos
mov
dec
lahf
popa
cmp
test
mov
popf
or
cwtl
enter
xchg
dec
sbb
imul
insl
sub
sbb
jne
fldt
and
sbbl
rorl
mov
and
lret
jmp
sub
outsl
mov
and
data16
or
jmp
rolb
ficomps
pusha
and
aam
lea
and
or
shl
cltd
scas
jle
sbbl
adc
movq
add
xor
idivl
or
cmpsl
sahf
out
subb
pop
outsb
pushf
lcall
ss
inc
in
adc
dec
add
dec
or
jmp
bound
pop
or
lods
cmp
aaa
xchg
movl
pop
jecxz
arpl
movsb
add
dec
into
ljmp
das
stos
dec
loop
sub
pushf
inc
ret
lods
sub
jl
stc
push
push
testb
mov
or
out
and
shrb
push
mov
aad
nop
mov
inc
jns
cmpsl
in
cli
rolb
mov
jno
mov
add
stos
or
icebp
insl
xor
jp
fwait
inc
mov
xor
inc
xor
insl
andb
nop
divl
pop
loop
fdivl
mov
inc
mov
mov
js
pop
movsl
add
or
sub
shr
hlt
cltd
pop
sub
mov
and
enter
xchg
mov
xchg
mov
shll
and
test
pushf
scas
movsb
xlat
xchg
fwait
movsl
fldl2e
cmp
mov
ja
pop
xchg
fsubl
push
or
sub
dec
mov
call
and
cmp
inc
lods
push
clc
mov
cmp
jle
cmp
out
pop
imul
jae
les
dec
iret
mov
xchg
fs
arpl
sbb
popf
cmpsl
or
mov
cmc
pop
add
ficompl
enter
stos
inc
loopne,pt
jb
scas
ret
xchg
shrb
dec
mov
adcb
sbb
scas
add
ss
inc
pop
sbb
jecxz
sbb
adc
pop
rep
ljmp
sarl
pop
cwtl
sar
or
movsb
jns
movsb
push
ljmp
test
inc
jbe
sbb
arpl
cmpsb
push
sub
ret
iret
mov
in
jge
ljmp
stc
sbb
mov
out
fldenv
mov
popa
xor
sbb
sbb
mov
adc
cmp
jns
aam
mov
mov
mov
fsubr
adc
popa
and
xchg
jns
aas
pop
pop
mov
xor
push
xabort
loopne
cmc
xor
push
fsubrs
leave
call
adc
nop
push
sub
jb
shl
sbb
jp
sbb
rol
mov
outsb
push
ret
ss
sbb
int
sub
rep
push
push
negl
rorl
xchg
xor
fcmovb
in
leave
mov
leave
fnstenv
fwait
cwtl
test
jne
push
xchg
jae
cvtps2pd
jno
xor
jp
or
or
movsl
inc
sti
sub
adc
cmpsb
cmpl
sbb
sbb
loop
jl
hlt
cmpsl
pop
and
sbb
push
xor
mov
mov
ss
jo
addr16
enter
sti
imul
cmc
into
stos
das
lret
sarl
push
mov
gs
mov
and
je
ret
pusha
icebp
sbb
movsl
addl
lcall
or
push
mov
xchg
das
dec
push
jmp
test
adc
add
sbb
stc
nop
pop
incl
call
push
test
dec
jne
sub
and
idivb
jmp
outsb
aas
idivl
ret
or
ret
sub
insb
adc
test
pop
mov
popf
int3
rcll
cs
outsb
mov
clc
sbb
sub
testb
imul
sbb
push
sbb
daa
daa
shlb
fldcw
push
push
test
mov
push
ljmp
cmp
cmp
arpl
jmp
leave
push
cld
mov
add
and
call
or
adc
bound
and
int
and
enter
mov
enter
lret
mov
push
repz
mov
fcoms
es
cli
mov
adcb
inc
xchg
mov
out
imul
data16
dec
sbb
jmp
add
ret
jnp
or
cltd
in
rol
dec
jno
in
imul
test
inc
test
push
rclb
cld
call
or
mov
pop
lahf
pop
mov
insb
fsubl
mov
js
pop
bound
out
iret
ja
lcall
out
pop
push
push
out
call
outsl
mov
xchg
jb
cli
pop
jo
mov
cmpsl
aam
insb
movsl
aam
xor
cmpb
test
je
addr16
dec
pop
sbbb
inc
cmp
andl
dec
lret
or
mov
mov
sub
pusha
xacquire
out
das
sub
sahf
hlt
fnsave
jmp
or
sahf
pop
add
repnz
ja
mov
cwtl
dec
push
mulb
pop
inc
jg
mov
pop
sbb
aas
dec
pushf
mov
jge
fdivrs
mov
add
dec
sub
daa
lret
rorb
mov
mov
mov
les
inc
lds
leave
cld
adc
inc
pushl
add
push
dec
fs
pop
jns
sbb
ret
fisubrl
mov
jecxz
push
sahf
lcall
cmp
or
adc
movsl
or
aas
rorl
dec
adc
push
out
cmp
out
fs
cmp
jae
push
jbe
ds
fptan
call
les
arpl
adc
stos
cmpsb
add
or
shrl
push
or
cmp
mov
and
add
neg
pop
dec
add
push
fadd
xor
dec
push
xor
and
in
jbe
or
leave
adc
insl
dec
xchg
mov
mov
into
xchg
jne
repz
punpckhwd
and
inc
cmpsl
scas
or
pop
xchg
and
adc
adcl
fnstcw
or
sub
in
sbb
jae
pop
cmpsw
neg
and
lock
or
lock
mov
out
or
xor
adcl
sub
add
sbb
xchg
xor
sbb
adc
into
cltd
cmp
inc
jnp
pop
adc
add
inc
and
add
xor
mov
cli
ss
xchg
sub
cmpsl
mov
mov
add
jns
push
leave
loopne
stc
int
rcrl
dec
out
js
fildl
fwait
mov
repz
je
xchg
icebp
adc
push
jns
jp
or
jbe
or
ljmp
and
imul
add
repz
popa
add
fwait
push
addr16
lret
add
and
fwait
mov
mov
mov
cmpsb
cmp
adc
push
outsl
push
rcll
push
dec
jno
adc
xor
push
adc
mov
lret
sub
sub
lea
push
test
push
imul
and
addr16
dec
jns
jns
mov
fimuls
rclb
rcrl
lret
das
pop
jbe
loopne
inc
pusha
jb
test
jbe
sub
je
cs
cmpb
imul
ret
xchg
int
inc
popf
or
fisttpl
lods
adc
ds
les
mov
jp
mov
in
add
and
mov
mov
fidivrl
jmp
mov
push
or
xor
mov
jno
lret
hlt
jns
subb
jp
jecxz
push
in
fs
imul
push
or
leave
or
call
jge
arpl
add
adc
pushf
and
or
mov
ret
add
subb
sarb
xchg
pop
push
xchg
repnz
loopne
xchg
cmpsb
mov
cmp
xor
push
in
shl
cli
mov
std
push
ljmp
xor
xor
int3
aas
insb
js
mov
push
add
pop
addr16
mov
inc
nop
leave
inc
inc
inc
pop
call
out
sahf
pop
jns
or
or
stos
inc
xchg
mov
sub
xchg
ret
test
push
jae
inc
pop
lods
lahf
and
jecxz
gs
outsl
push
fnsave
daa
pop
xchg
pop
rorl
mov
mov
ljmp
pop
xchg
push
push
cmpsb
sub
loopne
shlb
mov
pushf
loop
insl
sub
int
pop
out
mov
js
in
jnp
adc
icebp
sahf
sub
sub
pusha
cmp
fs
fimull
inc
push
or
pop
jp
adc
jae
cmp
push
bound
sti
in
ss
sub
sbb
mov
mov
lea
lods
outsl
je
dec
mov
sub
adc
ret
and
movsl
mov
push
stos
cmpsb
outsb
jno
stos
cwtl
xchg
cli
and
ret
imul
adc
lea
push
int3
scas
cmpsb
push
test
notl
pop
inc
or
repz
mov
add
outsb
cld
fs
sbb
cmc
scas
mov
shll
adc
add
das
xor
out
out
frstor
xchg
adc
cmp
sbb
out
and
sub
test
insb
cmp
xorl
popa
xor
push
das
push
aam
mov
adc
sub
test
ds
and
cmp
aas
xlat
xor
cmp
jl
dec
pop
out
push
cs
imul
lock
fwait
mov
lret
mov
div
movsl
into
js
sub
repz
and
mov
stos
in
sbb
imul
sbb
test
jae
xchg
push
lods
fadds
mov
subl
outsb
push
testb
js
jmp
push
mov
mov
xchg
sbb
scas
popl
insb
push
mov
dec
mov
icebp
into
lea
leave
push
mov
mov
add
sar
hlt
popf
xchg
bound
xchg
lret
in
or
scas
cld
dec
sbb
jo
jne
and
cld
mov
filds
mov
inc
in
repz
lcall
js
jg
xorb
fs
inc
lret
cmpsl
adc
aad
push
inc
inc
push
dec
loopne
std
in
mov
mov
mov
orb
add
push
jo
cmp
or
xchg
bound
fwait
hlt
xor
int3
ret
dec
jno
cmp
test
lret
cmp
stos
ret
mov
or
daa
je
add
sbb
aaa
cli
fidivl
lret
sbb
and
scas
mov
repz
or
inc
inc
xchg
add
jmp
push
inc
sub
les
or
roll
sub
fs
xchg
stos
or
test
icebp
loop
mov
fwait
mov
dec
push
and
dec
jl
pop
repnz
xchg
ret
sahf
icebp
sbb
jmp
imul
mov
insl
xlat
xchg
xchg
add
push
xchg
inc
or
jno
call
lret
or
cmp
les
pop
imul
add
enter
and
icebp
inc
loopne
cmp
lods
push
mov
mov
outsl
sbb
sub
xchg
mov
jo
gs
push
rcrb
cltd
int
jnp
lds
fucomip
outsb
cmp
nop
or
mov
ret
popf
notb
sub
add
and
mov
mov
stos
jno
cmp
or
mov
mov
mov
push
popa
pop
sahf
rorb
xor
jle
mov
outsl
jecxz
pop
cltd
cld
add
iret
push
into
push
push
repz
mov
xor
jno
imul
imul
inc
push
loope
lock
mov
es
mov
gs
inc
out
out
adc
push
cmp
xor
ret
jnp
jmp
jnp
stos
dec
pushf
push
xor
sti
imul
js
inc
mov
movsb
dec
test
pop
mov
pop
push
fldl
cld
cmp
jp
jmp
cli
repnz
xchg
inc
adc
out
ret
mov
outsl
sti
cmpsb
int
mov
inc
popa
cltd
adc
push
add
jle
xor
stc
out
dec
mov
loope
add
or
inc
xchg
out
dec
cmp
rolb
add
push
jge
out
ret
jo
sbb
inc
push
cmp
minps
lcall
add
fstl
adc
mov
sbb
sbbb
das
jno
scas
mov
add
mov
mov
pop
or
call
mov
divb
pop
pop
arpl
mov
adc
inc
or
jns
mov
mov
mov
cwtl
call
ja
fmul
loope
fwait
sub
mov
std
and
jb
xchg
jnp
cmc
mov
cmp
sbb
add
negl
or
mov
pusha
es
jl
int
or
mov
into
icebp
daa
dec
mov
bsf
and
dec
push
addl
fnsave
pop
pop
jg
mov
out
and
outsl
ss
dec
pop
fsub
push
push
and
data16
arpl
adc
movsb
dec
mov
cmpsl
sbb
inc
xor
xchg
dec
aam
push
jge
add
mov
push
sarb
jle
cli
inc
leave
inc
ds
cmp
sub
sbb
mov
setle
aam
shl
add
leave
lahf
jge
adc
push
test
jg
iret
push
add
or
ja
pop
out
mov
mov
mov
mov
sti
ss
out
cld
xlat
or
icebp
loope
out
jae
mov
int3
or
or
mov
pop
imul
cwtl
cmp
jno
xor
and
xchg
out
sub
iret
popf
xchg
loop
mov
loope
out
test
andl
cmpsl
movsb
insl
mov
in
loope
mov
inc
pop
xor
test
lea
lods
test
push
popa
pusha
jb
aad
aas
mov
mov
data16
cmp
js
lea
sub
in
popa
lahf
jb
test
mov
out
xchg
cmp
pusha
sahf
out
outsb
cmp
lahf
popa
popa
in
xchg
jge
push
pop
mov
xchg
add
sahf
pushl
sarl
filds
dec
notl
repz
pop
pop
fcompl
or
mov
mov
pushl
leave
outsb
push
xor
stos
ret
adc
lcall
mov
xor
cmp
std
popf
sbb
into
nop
cmp
xchg
xlat
or
mov
mov
addb
jo
inc
subl
adc
int3
in
leave
addr16
cmpsb
lahf
or
cli
mov
pop
fdivrl
hlt
push
xchg
out
test
lea
jg
mov
add
add
and
push
je
add
inc
mov
cwtl
push
xor
cmp
lock
sbb
and
dec
cs
xor
add
arpl
sbbl
jl
pop
inc
add
ds
sti
mov
paddusb
stc
add
and
lahf
dec
sub
mov
and
jb
fdivrl
lcall
cld
leave
outsb
movsl
mov
push
loope
insl
mov
mov
mov
xchg
pop
pop
fidivs
or
inc
cmp
cmp
shrb
add
pusha
dec
pop
push
inc
push
pusha
jns
inc
inc
add
adc
arpl
jne
imul
cld
fnstenv
clc
test
mov
or
mov
cmp
push
dec
fistpl
rorb
pushf
inc
jecxz
pop
stc
xchg
clc
imul
sbb
xor
push
adc
lods
push
aam
adc
rcll
sahf
mov
loopne
sti
ja
fisubrs
push
in
fs
shld
adc
sub
mov
ret
dec
sub
leave
xorb
jne
sub
jo
mov
in
jbe
push
sbb
inc
xor
xchg
sub
pop
mov
outsb
cli
adc
mov
sub
rorb
mov
hlt
js
mov
sahf
cltd
pusha
adc
pop
popf
out
ljmp
addr16
mov
ret
std
iret
mov
ds
mov
mov
out
stos
pusha
mulb
stos
or
rolb
and
in
dec
outsb
jne
push
scas
fildl
icebp
push
xor
mov
fs
test
jo
jge
in
enter
lods
lcall
jecxz
sti
cmp
fcomi
bound
cmp
xchg
xor
inc
inc
xchg
add
mov
dec
pop
mov
mov
inc
add
lock
add
adc
sbb
int
inc
aam
lcall
shrb
xor
orl
ja
pop
sahf
cmp
call
jno
mov
icebp
cwtl
mov
or
scas
xchg
rorl
in
jmp
jae
call
or
push
mov
push
and
pop
lea
jbe
mov
data16
mov
out
cltd
stos
cmp
mov
int
mov
adc
stc
test
sub
scas
sahf
cmc
mov
mov
xor
mov
or
push
scas
xor
cmp
icebp
and
daa
jp
aaa
jne
shlb
std
mov
sub
pop
repnz
xchg
push
mov
mov
lret
fdivl
popf
push
mov
out
testb
das
addr16
ret
mov
cmp
lahf
dec
push
xchg
cmp
adc
add
cmp
inc
rcl
ss
xlat
mov
push
fiaddl
fmul
sbb
push
fwait
stos
rcll
repnz
jns
in
sub
mov
jmp
xor
jmp
fcoms
mov
add
ss
ret
shlb
cli
pop
mov
sbb
cmp
add
sub
inc
outsb
or
insl
or
outsl
out
cmp
cwtl
fdivrp
ret
scas
xor
sub
imul
mov
pop
scas
int3
xchg
mov
scas
xchg
stc
lock
sbb
xchg
pop
pushf
inc
mov
je
out
add
popa
ret
push
insb
jp
mov
xchg
xor
sub
inc
fxam
push
or
outsb
dec
add
dec
mov
es
xor
dec
xchg
roll
push
pop
iret
and
hlt
repnz
outsl
fistpl
cmp
dec
rclb
decl
cmp
mov
push
imul
out
fwait
push
adc
mov
mov
popf
cmp
xchg
jo
fs
fldt
lret
xlat
bound
das
icebp
add
pop
and
test
int
xchg
sbb
mov
adc
imul
push
ss
inc
push
test
into
xorb
sbb
dec
add
mov
cli
stos
adc
sub
mov
add
ret
pop
xor
push
iret
fidivl
into
mov
xlat
mov
mov
mov
aaa
inc
scas
inc
stos
rclb
add
cli
push
jg
inc
adc
in
cmp
sarl
imul
xor
test
or
imul
xchg
push
adc
jnp
lods
movsb
inc
push
int
xorl
adc
clc
mov
pop
dec
icebp
cmp
icebp
insl
sub
lahf
in
xlat
idiv
xor
bound
ss
push
mov
push
frstor
mov
stos
sti
and
imul
mov
imul
fidivl
xchg
adcl
add
push
dec
fldt
outsb
ss
add
inc
jb
outsb
add
mov
jle
sbb
adc
test
mov
loope
repz
jo
push
inc
sbb
sbb
lods
jnp
inc
jge
xchg
push
dec
add
mov
dec
in
jns
scas
jb
inc
xchg
or
pop
adc
in
jbe
jmp
push
rcll
scas
mov
push
test
xchg
inc
daa
dec
sbb
push
loop
dec
ret
stos
xchg
lret
and
outsb
out
sahf
sbb
mov
sbb
lods
or
loop
fistpll
mov
and
aas
sub
mov
inc
xchg
push
gs
or
cwtl
adc
fprem
jne
scas
push
into
or
mov
into
jge
adc
xor
mov
xor
xor
lock
push
icebp
stos
jns
xor
lods
push
test
aad
sbb
cmpsl
jo
push
xchg
pushf
cli
cmc
inc
pop
xchg
in
cmp
xor
push
outsb
xchg
mov
movsb
mov
fwait
cltd
sbb
dec
push
in
jecxz
mov
inc
inc
scas
lds
outsb
cli
int3
divb
out
adc
movsb
mov
repz
mov
subb
push
or
sub
sub
xchg
fstpt
push
pop
mov
xorb
and
mov
test
adc
mov
cmp
add
adc
jl
adc
ret
mov
xsetbv
out
lea
xor
ljmp
inc
add
add
mov
xchg
pop
dec
enter
sub
jae
jo
cmp
dec
inc
rcr
mov
xchg
sub
mov
clc
rcpps
loopne
fistps
add
and
push
dec
adc
xor
sub
shll
sahf
pop
loopne
cld
or
loop
xchg
xchg
out
or
sarl
mov
lcall
or
fs
cwtl
and
imul
inc
outsl
ret
or
sbb
sub
add
adc
or
pop
sbb
or
jmp
lods
push
aaa
mov
cwtl
adc
in
push
dec
and
xchg
push
leave
fsubp
std
dec
rclb
and
add
dec
ss
in
into
sub
push
lret
mov
xchg
and
dec
xchg
fildl
cmp
sub
jno
or
js
inc
mov
push
popf
enter
sar
in
lea
fwait
enter
xchg
adc
cwtl
mov
mov
es
push
pop
testb
test
sub
outsl
sbb
cmp
sti
es
bound
arpl
push
cmpsb
pop
xor
mov
nop
call
test
or
add
push
fwait
pop
sub
int3
push
jge
mov
call
aam
es
popa
loop
mov
xchg
push
out
mov
filds
dec
pop
dec
insl
fcomi
ja
leave
mov
mov
andb
pop
push
icebp
movsb
fs
jp
jns
mov
push
popf
inc
push
sub
add
addr16
push
stc
ret
lcall
popa
out
iret
in
adc
outsl
ja
dec
outsl
aad
sbb
sub
div
add
fnsave
pop
pop
mov
ret
adc
icebp
lea
shr
sub
aaa
call
xchg
lret
roll
popa
iret
mov
cmp
pop
je
push
lea
int
mov
mov
or
cmpl
les
aam
into
fistps
mov
sub
push
xchg
pop
push
cltd
stos
dec
inc
jecxz
les
pop
sbb
pop
test
push
mov
sbb
lcall
fisttpll
test
add
popf
std
ljmp
inc
in
je
neg
cltd
inc
sbb
shll
xorl
mov
gs
test
daa
lret
outsl
add
in
adc
mov
cltd
push
pop
sahf
mov
cld
dec
mov
mov
pop
xchg
in
sub
xor
in
jge
in
andb
orb
les
outsb
gs
stos
loope
insl
mov
xchg
out
jne
sub
mov
pop
and
in
cmp
cltd
xor
push
jns
iret
xchg
std
ret
ret
and
mov
in
nop
imul
lods
sub
outsl
cmp
jecxz
pop
arpl
pusha
or
insb
mov
adc
outsl
add
sub
mov
sub
dec
scas
mov
add
insb
fimull
jp
ffree
mov
dec
lret
mov
pop
adc
sub
cmpsl
xor
sub
push
pop
mov
mov
dec
add
jl
and
and
xor
cld
push
leave
into
push
outsl
xchg
adc
js
popf
push
loope
bound
ljmp
sbb
in
sub
cmc
jge
xor
jg
call
daa
fcoms
or
sub
xor
xor
ljmp
adc
fsubl
jb
std
mov
inc
mull
movups
enter
adc
fmuls
inc
lret
daa
pop
and
inc
ret
dec
xchg
jae
inc
mov
inc
repz
sbb
cmp
mov
push
cmp
mov
filds
sub
mov
mov
sub
pop
call
test
orb
fdivrl
mov
or
negl
out
call
loopne
mov
les
leave
adc
mov
bound
add
sbb
aam
dec
sbb
cmpsl
insb
add
mov
jns
or
cld
les
and
pop
jl
mov
shl
sbb
cmp
pslld
loop
cmp
sbb
xchg
lret
enter
insb
xor
ficoml
lret
pop
jg
mov
add
cmp
aad
dec
push
test
mov
or
push
sahf
push
mov
out
xchg
and
aas
or
dec
stos
mov
shlb
and
mov
xorl
in
push
add
outsb
shlb
das
lret
fstps
xchg
xor
add
imul
lds
xor
bound
nop
mov
cmp
xor
dec
push
scas
xchg
insl
test
pusha
test
mov
mov
pop
cld
sti
les
xor
sub
inc
div
ss
jl
adc
lods
push
outsb
rcll
jbe
push
lcall
adc
push
je,pn
fnsave
ret
aas
and
push
push
jle
lea
xorb
jbe
mov
pop
leave
push
mov
pop
jge
decb
pop
jns
xor
loop
cmp
cmp
scas
in
push
aas
or
xor
popa
repz
std
lret
das
in
ret
lods
add
outsl
push
andb
xchg
and
andl
movsb
loopne
js
adcl
aad
cmp
push
sbb
pusha
cmpsl
inc
add
dec
js
call
push
inc
mov
mov
rcrl
cmpsl
jae
ja
and
cmp
mov
stos
cmp
push
push
test
outsl
pop
mov
mov
out
sbb
pop
and
pop
mov
push
test
pop
cld
sbb
cmp
xorb
mov
loopne
es
sub
stc
ss
or
clc
imul
fstsw
out
jo
push
pop
push
shl
out
xlat
xor
and
dec
cmp
jne
int
pop
or
dec
xchg
mov
adc
aaa
loop
cmp
lods
jle
cmpsw
mov
xor
cmpsb
fidivs
dec
movsl
js
add
mov
adc
pop
imul
lock
popf
data16
sarl
aas
loope
cmp
jge
mov
pop
xor
ds
testb
stc
mov
inc
outsb
push
mov
ss
pop
push
stos
lret
in
add
xor
mov
push
sub
xlat
test
pop
addl
xchg
push
push
adc
xchg
jne
inc
adc
inc
leave
in
inc
out
stos
dec
add
outsb
or
dec
inc
call
sub
xor
push
jne
test
into
push
fs
enter
js
movsb
lods
ficoml
daa
enter
sbb
lods
subb
test
ds
xor
ja
cmp
pop
pop
movsl
push
mov
lret
imul
dec
pop
push
pop
inc
dec
mov
sbb
cmc
outsb
out
mov
rcrb
shlb
dec
outsb
jno
sbb
hlt
add
outsb
xor
cmpl
mov
in
ja
and
jns
cmp
out
mov
jae
and
lahf
or
pushf
rcll
addb
das
fadd
aad
out
push
roll
jge
mov
xchg
rdtsc
fwait
rorl
fs
imul
mov
dec
xchg
scas
test
mov
ljmp
push
xorl
sub
rol
out
mulb
mov
and
sbb
hlt
adc
sbb
xchg
fsts
sub
out
ja
jnp
xchg
sbb
aas
xchg
mov
data16
dec
jbe
sub
gs
orl
roll
call
movsl
add
andb
mov
sub
scas
pushf
outsl
push
xor
and
andb
repz
cmp
xchg
aad
fisubl
in
push
in
add
push
inc
fs
push
sub
enter
in
ret
push
flds
stos
in
mov
xchg
cmp
mov
pop
mov
mov
jns
in
cmp
inc
sbb
cmp
pop
out
adc
mov
imul
dec
cmp
out
mov
lret
fstp
js
mov
mov
and
mov
test
test
negb
es
sub
jp
sub
inc
sbb
stc
mov
lock
rcl
mov
inc
pop
pop
push
subl
cltd
movl
jmp
mov
sub
dec
ss
inc
add
adc
jp
xchg
clc
mov
jl
aam
lcall
inc
imul
stos
mov
xlat
adc
adc
pop
xchg
loope
jg
jmp
add
jae
nop
scas
int
pop
nop
fs
or
cmc
repnz
xchg
cld
mov
fsubrl
inc
jmp
mov
btr
sti
sbb
push
pop
sbb
xor
popf
cmp
and
xor
sub
aad
ss
insl
adc
xor
xlat
pop
push
fdivs
push
imul
cmp
arpl
inc
xor
or
test
dec
imul
lds
sub
aaa
push
mov
add
mov
and
adc
decb
sub
and
mov
fdivs
fnstsw
jmp
sub
adc
or
add
jnp
xor
popf
and
imul
ret
fsubp
xchg
bnd
popa
mulb
ss
mov
subl
pushf
sbb
xlat
lea
dec
pop
jle
jle
cli
cmpsb
scas
adcb
xchg
std
ds
addr16
inc
mov
ret
movsl
or
fmul
xor
in
test
js
xor
add
mov
xchg
fldt
dec
scas
inc
aam
sbbb
adc
xorl
ss
shll
fldcw
movsl
push
and
jp
imul
repnz
pop
xor
push
mov
pusha
pop
movsl
pop
ret
dec
push
clc
inc
mov
push
lea
test
sbb
xlat
and
cmp
out
mov
sbbl
je
aas
push
xor
fdivs
pop
pop
jmp
lds
scas
in
xor
mov
mov
cld
push
lea
jmp
rorb
adc
dec
fwait
and
mov
jl
inc
add
mov
and
test
mov
mov
loopne
add
jecxz
sbb
xchg
jge,pn
stc
adcl
ret
add
mov
cmp
ss
int3
push
push
js
out
not
adc
idiv
test
xor
xchg
les
pop
and
inc
int3
inc
sub
pop
inc
das
notl
leave
jmp
ja
pop
int3
stos
sbb
adc
and
pop
add
jns
mov
rorb
shlb
ja
pop
jo
out
jle
pushf
xchg
push
mov
xlat
or
add
mov
outsl
cwtl
inc
mov
gs
loope
in
aas
out
les
push
ds
dec
popa
loop
jmp
inc
cmp
pop
stos
pop
mov
add
dec
out
cmpsb
inc
adc
in
call
stos
push
pop
mov
aam
stos
inc
xor
mov
shll
fisttpll
or
outsl
push
mov
inc
data16
subb
sahf
adc
cld
imul
and
push
add
jp
out
dec
outsb
lea
add
lret
push
jl
add
inc
into
rol
mov
xor
out
loope
sahf
dec
lcall
jne
rorl
push
ss
jecxz
add
call
add
mov
popf
push
lock
repnz
xchg
ljmp
dec
pop
movsb
cltd
fsubrs
aam
fidivl
pop
out
jns
in
add
lods
fprem
dec
sub
xchg
xor
into
push
pop
inc
push
cmp
cmp
ret
and
inc
pop
popf
adc
cmp
clc
mov
sbb
adc
jne
cmp
mov
xchg
mov
add
inc
out
popf
repz
stos
fcmovnbe
push
sbb
adc
sbb
shl
jns
mov
mov
sbb
jbe
jmp
cli
and
push
stos
ja
xchg
inc
stos
loopne
std
popf
ja
xchg
push
mov
mov
xor
pop
mov
sbbb
or
xchg
fiaddl
xor
jo
adc
insl
xchg
push
hlt
subps
xchg
fildll
or
sbb
test
xchg
pop
mov
mov
pop
sbb
push
mov
out
sub
xchg
mov
aad
adc
sbb
jg
in
xorb
pop
xchg
inc
inc
ret
adc
pop
jp
outsb
push
sbb
jns
nop
mov
mov
sbb
mov
xchg
jno
pop
xchg
jbe
xor
pop
sbb
cld
pusha
scas
fwait
mov
xchg
fwait
mov
lock
pop
pushf
mov
divb
jnp
into
pushf
inc
sbb
insb
xchg
sbb
nop
push
lods
insl
inc
data16
mov
ljmp
and
lods
lret
orb
outsb
sub
cmp
mov
incb
loopne
dec
popa
add
and
daa
test
jmp
push
add
out
pop
mov
and
inc
or
icebp
cmp
mov
leave
testl
mov
xchg
lahf
sub
pop
or
jns
enter
adc
flds
and
hlt
enter
jne
aaa
lret
lahf
dec
ljmp
jns
ljmp
jns
pop
inc
xor
fwait
pushf
push
rorl
ret
mov
aam
push
or
lcall
shlb
xchg
mov
xor
int
dec
or
test
mov
pop
cltd
jl
leave
sub
dec
loopne
cmpsl
pop
mov
jecxz
std
push
add
pop
aaa
data16
test
cwtl
stc
pop
jno
mov
mov
mov
pop
bound
rcrl
mov
mov
icebp
adc
lea
shrb
xchg
cmp
popf
les
or
pusha
arpl
fwait
jge
adc
xlat
push
arpl
shr
test
jl
inc
cmp
push
push
mov
outsb
mov
andl
mov
jle
and
adc
mov
in
sub
sbb
fistps
xor
cltd
pop
in
jno
fsubs
pop
mov
movsb
push
insl
scas
sub
in
ljmp
jbe
mov
inc
jecxz
sub
mov
pop
inc
aaa
fwait
and
xlat
fistpll
xchg
rcll
push
aas
lret
and
add
cmp
shrl
das
inc
faddl
scas
sub
sub
ja
mov
xor
add
pop
repz
and
fiadds
sahf
pop
jae
sbbb
push
inc
pusha
or
in
dec
stos
in
pop
bound
icebp
or
cli
pop
test
frstor
mov
mov
loope
imul
dec
xchg
xchg
jne
adc
jge
push
addb
sub
jne
jnp
int3
mov
rol
mov
aas
mov
sbb
xchg
es
fisttps
dec
movsb
jg
sbb
fmuls
push
lods
add
add
or
sti
push
cli
lea
dec
cld
jge
xchg
in
cld
mov
sub
std
adc
shll
mov
aad
xor
enter
jmp
xor
add
cmp
ljmp
fiaddl
inc
jns
mulb
cltd
lret
lods
push
push
cmp
mov
dec
mov
sbb
sbb
cld
int
pop
fcoml
push
jg
pop
fisttpl
cs
mov
sbb
fldenv
clts
mov
imul
xor
ret
cmp
rcrl
pop
cvtpi2ps
lea
mov
out
inc
cli
push
sub
mov
adc
sbb
jmp
xchg
cmpsl
sarl
pop
cltd
daa
int3
jle
aas
jl
ss
scas
fisubs
rorl
out
stos
jmp
aam
out
mov
in
pop
clc
mov
mov
loope
out
mov
fsts
mov
out
sub
aam
imul
xchg
lss
or
push
jmp
dec
dec
jbe
scas
push
mov
and
xchg
mov
xor
leave
sbb
je
pop
xorb
in
inc
add
js
sub
jns
or
sub
xchg
hlt
stc
pop
call
lods
sti
cmp
lahf
add
mov
test
push
add
jns
dec
adc
mov
push
add
pushf
insl
fistpll
scas
pop
movhps
push
das
pop
adc
mov
mov
xlat
dec
jb
and
sbb
mov
iret
jg
fcompl
mov
int
cmp
add
xchg
sbb
jmp
fwait
lret
test
insb
ljmp
cmp
mov
xchg
iret
jmp
lahf
outsb
das
dec
mov
jns
addb
sub
dec
and
mov
cs
pop
push
div
loop
dec
hlt
inc
popf
ds
jns
aam
mov
outsb
bnd
jo
ja
xchg
movb
or
into
and
add
lea
push
cwtl
mov
clc
fcmovb
pop
popa
call
movsl
sbb
addb
cmpl
push
sub
dec
jg
cmp
push
lea
loope
loope
fcoms
dec
cltd
mov
sbb
fwait
jno
outsb
lret
pop
sub
xor
mov
ljmp
jecxz
or
inc
andb
mov
shl
push
push
mov
jb
lds
shrb
mov
pop
fwait
fs
push
movsb
pop
push
sub
ficoml
in
data16
push
mov
daa
push
mov
push
shlb
push
inc
lret
jle
dec
in
sub
add
sub
into
shlb
lock
repz
icebp
aas
outsb
sub
mov
lods
sub
push
or
pop
sbb
outsl
jp
mov
das
jecxz
xor
sub
adc
dec
out
incl
xor
pop
jnp
mov
push
stos
mov
jns
mov
fwait
not
addr16
in
sbb
xchg
sarb
mov
leave
clc
cmpsl
pop
and
xchg
les
test
mov
lret
movsb
push
je
ja
sbb
xchg
dec
push
sbb
push
les
loopne
or
push
mov
xlat
push
sbb
or
pop
add
lea
jmp
mov
push
cmc
jmp
clc
pop
jae
cmp
pop
mov
jnp
loopne
cmp
je
int
dec
xlat
test
rorl
imul
add
and
das
je
loope
pushf
lcall
rcl
add
jb
frstor
fstl
test
add
imul
add
ds
push
dec
adc
jne
xor
lcall
sbb
outsb
cmp
loopne
sti
lret
arpl
push
xchg
int
ljmp
andl
daa
addr16
in
xor
or
adc
push
outsl
mov
cmp
ror
cmpsb
add
mov
stos
cltd
cs
es
dec
fsubs
push
scas
jmp
and
xchg
fstl
and
movsl
mov
xchg
jbe
push
or
outsl
dec
dec
lods
xchg
jle
pop
xlat
loopne
cmp
shrl
xchg
sub
cmp
push
pop
pop
fs
pop
out
js
adc
clc
mov
lahf
xchg
sub
cmp
push
pushf
clc
jne
out
xchg
jb
repz
sarl
movsl
rcll
sub
ficoml
test
xlat
imul
bound
push
aad
adc
fcoml
xorl
pop
xchg
push
out
pop
popa
mov
push
lods
jae
mov
lods
jne
shlb
and
lods
and
int3
sbb
movsb
and
loope
jo
addr16
cli
push
aam
jnp
int3
cmp
in
subl
lahf
adc
dec
xchg
in
mov
mov
lods
divl
xchg
mov
rorl
mov
lea
or
inc
pop
es
fildll
xchg
mov
mov
pop
fidivrl
ret
xor
mov
mov
pop
cmp
lods
or
fidivrs
aad
pop
adc
vcvtss2sd
and
pop
loope
repz
sub
out
fldt
iret
push
popa
sub
clc
incb
scas
pop
addb
aas
lcall
out
pop
add
cltd
ljmp
cmc
aam
mov
in
cmp
sahf
ljmp
xchg
rclb
inc
mov
inc
clc
enter
inc
pop
cmp
pushf
cld
dec
lret
int3
mov
je
xchg
nop
adc
jmp
jg
push
inc
dec
imul
mov
insl
jle
or
mov
mov
cmp
cmp
out
loopne
ret
std
jg
inc
fisttps
mulps
test
pop
adc
cwtl
add
daa
pop
mov
stos
lock
enter
pop
imul
pop
xor
pop
jg
fwait
stc
loope
mov
rcl
fsubrl
or
jmp
push
aas
inc
insb
addl
je
in
cmp
outsl
pushf
popl
test
jecxz
idiv
jne
dec
jmp
int3
ret
jnp
adc
dec
scas
into
and
xchg
jp
push
pop
xchg
inc
inc
gs
lcall
push
push
cmc
jns
inc
loopne
test
out
cmp
std
mov
and
add
ja
lods
fucomi
mov
push
int
jo
inc
fldcw
inc
ljmp
and
xchg
daa
rolb
mov
xchg
xor
sbb
lds
shrl
adc
cmpsb
mov
push
lret
test
or
jnp
inc
repz
icebp
sub
flds
ss
xor
std
dec
inc
outsl
fsubrl
cmpsl
dec
mov
add
mov
je
or
sti
or
sub
mov
push
sub
pop
dec
and
popa
jbe
ja
fnstsw
sub
imul
lcall
xor
push
push
cmp
or
push
add
rorl
inc
and
dec
mov
jmp
push
in
fmul
mov
loope
mov
dec
movsl
scas
fwait
int3
sub
jmp
lods
adc
xchg
mov
ja
jnp
mov
fstl
scas
icebp
mov
fcomps
cmp
jne
inc
pop
das
jae
repz
add
pop
add
xchg
push
stc
test
adcb
pop
adc
rorb
stos
mov
pop
outsl
insb
lock
fists
xchg
or
xor
icebp
mov
shll
sub
je
int3
sub
hlt
decl
roll
jmp
push
xchg
inc
sub
jae
loopne
outsb
xchg
sbb
in
out
pop
add
and
fisttpll
mov
imul
clc
aaa
fadds
dec
repz
stos
testb
adc
push
adc
in
scas
test
cmpsl
dec
jae
popa
mov
outsb
sbb
mov
push
push
adc
mov
aam
jnp
sbb
mov
mov
iret
test
ss
pop
into
mov
mov
pop
jl
mov
or
sti
adc
sub
test
loop
das
sub
jo
mov
sbb
sbb
push
test
ret
cmp
and
add
xchg
push
xchg
int3
cld
lock
and
stos
es
xor
aaa
cwtl
pop
mov
sbb
sahf
or
sbb
pop
call
outsl
in
divb
test
dec
push
or
in
mov
mov
add
movsb
fwait
dec
stos
jmp
rorb
cmc
loopne
popa
mov
jecxz
jp
sbb
out
lock
cmp
test
or
push
cmc
cmp
cmp
add
xchg
xchg
mov
loopne
sub
movsl
test
lods
out
out
adc
adc
xchg
stos
xchg
jo
xorl
inc
cmp
pop
push
inc
xor
ljmp
or
dec
or
aam
push
fidivl
push
addr16
mov
outsb
aam
jle
push
pusha
cmp
xchg
and
jecxz
dec
push
in
ret
sbb
pusha
mov
cli
imul
imul
sub
repz
xchg
inc
or
lret
add
adc
sbb
lret
rcll
jne
jne
push
repnz
gs
stos
pop
add
shll
in
das
mov
dec
push
lcall
aad
mov
andl
cmc
divb
cli
pop
in
xchg
mov
cmp
dec
clc
mov
aad
int3
mov
outsb
pop
ljmp
mov
imul
mov
lods
jecxz
std
mov
scas
aaa
push
sub
inc
add
addr16
pop
stos
mov
pop
adc
test
imul
pop
push
stc
sarl
xchg
mov
push
xchg
outsb
jb
loopne
pop
and
test
es
rorb
into
jae
decb
loopne
push
repnz
or
and
sbb
cli
lret
sbb
aaa
sub
sbb
mov
adcl
std
out
push
mov
xor
sti
pop
xchg
inc
mov
adc
xchg
cwtl
pop
cmp
insl
movsb
push
nop
mov
xchg
and
push
adc
mov
mov
fdivs
test
cmp
jecxz
sahf
cmpsb
jge
insl
sbb
lods
cmp
jp
lods
into
pop
jmp
js
loopne
xchg
xchg
repnz
lock
fmulp
jb
lret
cld
mov
jns
xchg
sub
xor
add
sub
repnz
jo
repnz
sub
movsl
inc
add
ret
mov
icebp
inc
test
repnz
jmp
xchg
xor
insb
jbe
shll
sub
sub
shlb
sbb
mov
scas
xor
or
popa
inc
xor
int3
test
cmp
daa
add
and
push
xchg
lods
xor
mov
xor
xor
xchg
fcompl
push
xchg
pop
xchg
loope
ret
and
sub
mov
cmp
adc
jg
adc
aaa
jno
or
jecxz
fxch
insl
sbb
or
lods
les
jecxz
pop
cli
movsl
sub
scas
addl
ficoml
sbb
push
or
fsubs
pop
roll
push
cltd
adc
sbb
sub
pop
add
pushf
pop
ss
adc
cmp
adc
jge
mov
std
jns
aam
cmp
les
fwait
int
jne
xchg
adc
push
mov
sbb
enter
inc
inc
inc
cmpsb
inc
push
sub
cmc
iret
std
shrl
fwait
ja
leave
and
mov
pop
es
dec
movsl
sub
sbb
dec
loop
push
mov
stos
push
popl
ss
xor
and
mov
jbe
cwtl
push
xchg
movsl
jmp
or
stos
sbb
push
aad
push
xorb
cmpsl
out
xchg
adc
movsb
pushf
fimuls
add
fwait
and
xchg
aas
shll
adc
dec
popa
or
mov
jecxz
cs
int
cmpsb
inc
cmp
data16
dec
inc
cmp
aad
ja
in
xor
arpl
sub
pusha
sarb
shrl
pushf
pop
pop
xor
sbb
mov
xchg
imul
jo
xor
adcl
mov
sbb
sub
je
cmp
movsb
sbb
adc
test
jo
mov
mov
add
aaa
jg
pop
test
bound
and
pop
inc
jno
dec
add
movsb
and
pop
ret
adc
jecxz
mov
mov
adc
push
enter
xlat
pop
cmpsb
in
pop
cmpsl
jge
xchg
call
and
push
xchg
xlat
dec
fs
adc
adc
jecxz
loopne
mov
jge
lods
sahf
dec
out
cmp
imul
test
lahf
push
arpl
inc
push
nop
lods
cmpsb
jne
mov
inc
cmp
sbb
push
xlat
add
int3
out
std
in
fwait
xor
pop
jecxz
dec
std
dec
stc
icebp
ja
add
fsts
pop
sbb
xlat
inc
adc
js
mov
jno
adc
test
inc
imul
xchg
loopne
stc
pop
out
xor
gs
mov
cmp
fists
test
decl
je
fisttps
pop
mov
mov
enter
aas
sub
dec
les
and
stos
cmpsl
sbb
jmp
in
mov
in
lods
pop
jecxz
pop
pop
push
gs
rorb
negl
lcall
sarb
ss
mov
lcall
dec
test
sbb
inc
outsl
lcall
imul
add
iret
add
cmp
sub
push
jno
in
add
fs
add
into
inc
ss
xor
inc
push
addb
dec
out
cltd
std
jo
xchg
jl
sbb
pop
inc
xchg
push
jle
and
sti
push
js
rorb
lret
lock
xor
lds
push
rorl
add
popa
pop
fisubrl
rcrb
int
fwait
mov
pop
enter
jmp
or
leave
not
in
inc
mov
jp
push
aad
pusha
cmp
fmuls
push
in
mov
fwait
push
roll
ret
and
or
imul
xchg
mov
lods
shl
daa
lods
cmpb
adc
fs
mov
imul
popa
push
loope
pop
cmp
movsb
mov
add
fs
ffree
pop
jmpw
xchg
jmp
shrl
iret
mov
sub
push
pop
cmp
aas
xchg
scas
jmp
sbb
fisubs
mov
bound
enter
imul
or
paddd
pushf
mov
shl
shrb
sub
dec
pop
xchg
or
sbb
test
ds
data16
cmc
or
sub
in
inc
xor
or
icebp
pop
and
mov
dec
jae
sbb
arpl
mov
imul
sbb
notl
into
dec
cs
enter
sub
test
mov
repz
pop
rclb
pushf
xor
in
pop
jmp
aaa
or
rclb
sbb
jl
in
adc
cmp
in
mov
add
xchg
xor
jo
pop
pop
mov
xchg
sub
outsb
pop
fs
fsub
cmp
mov
lods
xchg
jmp
pop
lahf
xchg
dec
js
aad
adc
lcall
outsb
cmp
xchg
inc
int3
ficoml
dec
sahf
pop
aaa
dec
xchg
out
xchg
xor
fs
cltd
popf
pop
loopne
xor
scas
lret
loope
inc
int
cwtl
pop
mov
cwtl
push
dec
xor
mov
sub
or
bound
xchg
xchg
cld
dec
insb
xchg
fs
jmp
and
pop
cmp
pop
je
sbbb
jl
xlat
bound
sbb
inc
adc
lret
in
leave
xor
and
push
cmpsb
leave
stos
dec
je
adc
repz
shll
test
out
mov
adc
lret
cmp
and
mov
sbb
and
insb
mov
xchg
lcall
pop
stos
and
dec
xchg
push
xchg
lea
cmp
int
mov
cmc
mov
aas
or
mov
add
mov
add
shlb
xchg
outsl
pop
gs
hlt
jge
cmpsb
jp
mov
mov
out
inc
test
or
outsl
fcoms
clc
mov
scas
sbb
imul
test
jno
fcomps
lds
repnz
push
cld
clc
mov
js
es
dec
xor
jo,pt
andl
inc
inc
pop
and
test
mov
jmp
lcall
push
sub
push
mov
and
test
dec
push
and
mov
mov
aad
sbb
xor
sqrtps
sbb
and
adc
call
outsl
enter
push
dec
and
inc
or
or
or
sub
sub
xor
sub
aad
es
mov
shll
repnz
in
pushl
add
test
mov
sbb
adc
push
jns
sbb
cmp
jmp
loop
add
and
je
sbb
bound
xor
push
adc
xor
xchg
in
in
ret
pop
inc
cmp
mov
mov
pop
fidivl
jne
sub
leave
dec
jmp
pop
lret
movsb
mov
dec
push
aas
test
and
add
xchg
inc
out
clc
stc
fcoml
inc
repz
outsl
inc
cmpsl
push
push
sub
notl
inc
lock
jmp
dec
cmp
mov
mov
sub
pop
ret
mov
xchg
mov
add
xor
mov
jmp
adc
pusha
and
nop
dec
or
lds
mov
sahf
orb
in
push
cmp
sbb
mov
push
scas
jbe
dec
scas
out
pop
std
mov
lods
pop
jg
fisttpll
cld
aam
lock
call
scas
cld
shrl
xor
fisttpll
cli
ret
fdiv
mov
inc
or
xchg
pop
or
setnp
xor
mov
xchg
fidivrl
mov
inc
repz
push
push
sub
test
dec
out
lods
push
mov
lods
fbld
xor
arpl
es
or
dec
fdivl
push
mov
leave
je
in
push
lea
lods
fdivs
rclb
or
imul
mov
jg
jo
cmp
jg
mov
daa
jge
lods
stos
cld
adc
outsl
sbbl
push
into
dec
mov
mov
jno
xor
in
mov
xor
cmpsb
pop
stos
and
sbb
dec
rcrb
and
adc
pop
pop
dec
push
jl
out
lahf
and
mov
mov
stos
test
dec
fsubrl
or
xchg
in
daa
mov
mov
cmp
adc
lret
mov
mov
pop
mov
stc
jl
scas
inc
jmp
sub
imul
xor
repz
and
add
repz
gs
sbb
dec
add
and
repz
pop
dec
insb
das
xchg
lahf
pop
cli
mov
movsb
add
fnstenv
jp
cmp
insl
roll
adc
insl
shll
adc
scas
push
pop
iret
jle
and
clc
xchg
adc
outsl
mov
call
stc
add
xchg
sbb
sub
nop
mov
mov
ret
fisttpl
fsubs
les
sbb
pop
mov
xor
cli
popf
mov
jae
mov
stc
aam
adc
mov
roll
xchg
xor
mov
add
lea
xor
bnd
pop
aas
subb
call
lret
sub
adc
bound
scas
fwait
insb
xor
push
imull
cltd
xor
xorl
mov
movsl
push
dec
jmp
dec
das
adc
or
mov
movsl
pop
jae
mov
and
jp
fdivrs
sbb
mov
xor
in
mov
lcall
mov
out
stc
pop
sti
dec
mov
inc
fucomi
mov
decl
sahf
add
mov
pop
es
jnp
fcomps
xchg
sub
lods
xchg
xchg
mov
mov
push
push
pop
call
mov
out
incl
andl
jecxz
lods
jle
adc
mov
pop
lahf
scas
sti
pusha
inc
test
add
cld
loope
icebp
loopne
sub
in
fcompl
jmp
aam
or
imul
sbb
enter
sbb
xchg
in
in
stos
nop
adc
cmpsl
into
push
sub
popf
loop
cmp
or
call
in
inc
xor
jb
push
lahf
les
jae
call
lods
sbb
adc
and
mov
sub
xor
inc
mov
lret
mov
or
int3
adc
divb
inc
cmp
and
mov
cmp
add
mov
or
sbb
sub
lret
nop
mov
jb
lret
dec
movsl
jge
insl
sbb
and
loop
test
shll
jnp
sbb
xchg
mov
or
dec
sbb
dec
cmp
ficoms
cld
pop
imul
jbe
and
repnz
lods
push
sbb
cmp
sub
push
push
pushf
dec
push
enter
cltd
jge
inc
mov
xchg
cli
cmpsb
jno
repnz
and
inc
pop
add
sub
pop
mov
mov
imul
not
int
scas
ret
icebp
dec
xchg
sbb
cmp
fwait
cmpb
js
ffree
lods
dec
push
in
add
dec
jle
push
adcb
xchg
cmc
ljmp
fisubrl
loopne
repnz
sbb
or
sub
fimuls
scas
roll
sub
in
inc
inc
xchg
stos
push
jge
push
xchg
in
jp
andb
iret
dec
and
and
mov
sub
cld
mov
call
jmp
cmp
es
pop
lcall
jne
int3
cmp
test
jge
imul
gs
dec
jae
test
imul
xchg
pop
popf
andl
dec
mov
jb
test
xchg
add
loop
scas
and
enter
dec
sub
sbb
test
dec
adcl
xchg
xchg
bound
addr16
stc
aas
fbstp
cmp
push
adc
pop
cmp
mov
cmp
push
mov
in
insb
scas
repnz
psubusb
pop
je
cmpb
mov
shll
push
cli
cmp
and
inc
xchg
mov
lock
or
pop
sbb
adc
inc
repnz
data16
inc
push
cmpsl
xlat
or
out
popf
lret
fistpll
addb
pop
jg
cs
mov
sub
push
push
or
lods
adc
or
call
xor
and
or
sbb
imul
mov
pop
cltd
sarl
out
test
jle
add
sub
adc
sbb
dec
stos
lock
dec
push
jecxz
xorb
mov
jae
or
sbb
mov
push
stc
loope
imul
movsb
ror
cli
xor
sub
hlt
lds
jmp
lret
in
add
cmp
loop
lods
cmp
jp
repz
je
shlb
fldt
lods
inc
sub
imul
adc
test
je
cld
or
imul
push
incb
fisubs
outsl
mov
mov
mov
jge
xchg
xchg
mov
std
repnz
std
push
pop
out
lock
dec
xchg
jno
push
mov
mov
outsb
dec
xchg
sbb
mov
mov
dec
leave
xchg
xchg
adc
cli
test
mov
out
cmp
add
ret
js
pop
mov
fistpll
cmp
das
sti
fstps
enter
jp
daa
inc
mov
xor
inc
sbb
jbe
cltd
mov
fwait
insl
icebp
jns
out
jmp
xor
movsb
jmp
jle
xor
insl
cmp
aam
aaa
lretw
stos
mov
popf
push
pop
cli
cmp
mov
stos
outsl
fdivl
shl
mov
pusha
jecxz
push
dec
iret
or
jecxz
sbb
xchg
lahf
mov
fsts
iret
or
ret
in
decl
dec
pop
lret
jb
xlat
popa
into
lods
jns
repz
cmpsb
mov
sysret
cmp
cmc
lret
gs
jge
fcomi
push
inc
cmpsb
jmp
inc
push
adc
cmpsb
lahf
add
cli
fmull
cmp
adc
mov
stc
call
pop
mov
or
test
and
sub
mov
mov
movsb
inc
add
fiaddl
cmpsb
insl
fisubrl
xchg
loopne
push
pop
mov
jl
mov
add
push
xlat
fisubs
ss
dec
out
sbb
icebp
mov
in
rcll
sub
pop
cmp
dec
cwtl
mov
pop
outsb
xchg
jmp
enter
bnd
mov
lret
mov
sbb
stos
push
jne
push
add
adc
in
stos
xchg
cld
insb
pop
ror
bound
insl
or
pop
xor
sub
in
add
fsubp
cmpsb
leave
pushf
ss
xor
outsl
jle
ret
rorl
scas
aam
adc
sbb
cli
or
sbb
pop
sbb
inc
outsb
js
add
lods
test
push
pop
ja
ficompl
jns
mov
jp
leave
sub
test
adc
and
push
and
loope
pop
or
add
lcall
or
cmp
and
cmp
scas
mov
int
push
inc
or
push
xor
add
gs
push
popa
adc
mov
pop
aaa
mov
add
add
aad
mov
mov
sbb
ret
into
int
insb
fwait
push
stos
out
pop
push
push
xor
in
lahf
bound
mov
stos
sbb
lea
push
aad
or
mov
mov
sbb
test
mov
pop
mov
popa
mov
fs
test
lcall
lahf
cmp
fcomps
imul
inc
cmp
bnd
test
jb
cmpsl
leave
pop
es
jg
lods
mov
xor
adc
loopne
das
pop
pop
pop
mov
outsb
imul
xchg
lret
outsl
mov
or
and
cmc
out
inc
enter
les
loopne
adc
stos
mov
popf
lock
std
adcl
cwtl
jb
sub
xchg
mov
call
add
testb
inc
add
xchg
in
xchg
ds
lcall
test
pop
xchg
in
or
jmp
stos
or
dec
sub
or
pop
rclb
mov
mov
jns
stos
int3
push
gs
or
roll
mov
mov
shrl
mov
jmp
lods
imulb
rolb
ficompl
pop
mov
cmpsb
sbb
imul
cli
pop
push
jp
mov
xchg
mov
lcall
js
or
inc
mov
ja
popf
xchg
pop
xlat
inc
adc
sti
fwait
test
ljmp
cld
addr16
dec
xlat
lret
in
ljmp
arpl
aam
push
out
outsl
lret
push
mov
daa
push
sbb
sub
int
pop
xlat
in
add
sub
mov
movl
fucomi
jmp
outsl
and
mov
mov
add
nop
fistl
loopne
idivb
or
cmp
lea
xchg
leave
mov
xchg
loopne
aas
lea
int
pop
cmp
out
aad
iret
inc
out
ret
cltd
mov
jno
pop
imul
ror
mov
cmc
inc
imul
and
pop
dec
jne
andnps
daa
lcall
roll
push
push
fildl
or
cmpsb
fucomip
std
test
popf
lret
dec
adc
inc
pop
dec
adc
jp
add
pop
addb
aad
les
ret
add
jl
jle
fadds
dec
jle
cli
mov
xor
inc
imul
jl
fdivrl
sub
and
xlat
call
push
arpl
adc
testb
pop
ret
mov
loop
lcall
outsl
mov
cmp
filds
add
call
mov
jmp
mov
sbb
xchg
lock
dec
inc
and
dec
jne
pop
cli
mov
dec
lods
mov
popf
jl
shl
cmp
dec
add
xor
lds
add
cwtl
mov
dec
jnp
add
pmaxub
js
and
add
mov
mull
fcompl
cltd
or
or
in
add
mov
add
jbe
mov
sbb
or
popa
dec
repnz
rcrl
int3
add
cld
out
imul
push
push
arpl
cli
sbb
stos
fldl2e
push
clc
mov
or
adc
ret
test
std
pop
hlt
push
mov
mov
aas
test
mov
mov
imul
ja
mov
outsb
add
dec
aaa
jecxz
jae
xchg
mov
sbb
out
mov
idivb
pop
subb
push
or
divb
inc
pop
daa
loop
mov
addl
ljmp
pop
push
repz
testl
insb
cmp
js
cltd
adc
cld
push
shl
mov
or
adc
out
add
in
adc
subl
imul
sub
lds
lret
sbb
xchg
sbb
push
cmp
jae
mov
pop
or
push
imul
xor
outsl
jb
iret
jne
xchg
andb
imul
popf
jg
repz
mov
aad
xchg
ja
lods
mov
sub
xchg
push
dec
fiaddl
ja
pop
inc
inc
adc
cmp
stos
lods
adc
cltd
jns
fucomip
leave
data16
test
in
ror
shl
lret
xchg
inc
in
ja
jns
add
adc
aas
cmp
xor
mov
mov
dec
mov
sub
sbb
sti
ret
lea
jnp
divl
sub
cmpsl
cmp
aaa
adc
xchg
dec
and
sti
int3
clc
stos
and
or
fst
adc
sbb
mov
stos
add
jecxz
jae
jge
cmp
mov
sbb
fcmovu
ret
pop
cmp
add
in
pop
push
jnp
jns
pop
cmp
and
mov
ficomps
sbbb
pop
aas
mov
adc
int
jnp
nop
sub
push
cmpsl
fnstenv
dec
in
cmp
fidivs
mov
dec
mov
in
lret
or
mov
mov
add
nop
mov
sub
fstpl
push
adc
sbb
je
ja
jne
lahf
or
or
repz
ret
xchg
pusha
jecxz
fnstsw
xchg
adc
xchg
mov
clc
dec
mov
push
aas
outsl
sbb
pop
adc
mov
leave
outsb
in
mov
xor
jne
pop
nop
pop
insl
pop
sbb
jne
or
lret
sbb
and
pop
int3
cmpl
xchg
mov
mov
pop
fdivs
inc
xor
mov
sub
sub
sub
subb
incb
cli
adc
fdivrs
bound
es
xor
lds
mov
cmpb
scas
or
fisubrl
xchg
jl
js
in
popf
sub
sahf
sbb
loop
xor
xchg
lcall
cltd
ret
xor
test
dec
clc
mov
sub
push
jae
jl
pop
es
cmp
fldt
jle
xor
and
outsl
inc
dec
aas
pop
pop
fisubs
adc
sub
mov
sarb
and
pop
loop
cmp
sub
dec
insl
xor
aad
imul
sahf
clc
pop
cli
sbb
jne
or
add
scas
nop
add
mov
add
inc
adc
popf
fldt
fisttpl
lahf
ds
or
add
in
ja
mov
pusha
xor
push
mov
dec
mov
cmp
testb
pop
and
inc
ficoms
xor
das
lahf
mov
mov
xchg
jle
nop
cmp
pop
pop
push
mov
jo
push
popl
fidivs
pop
pop
dec
sub
cld
jnp
fistl
push
mov
dec
insb
pushf
repnz
shl
jg
adc
xor
rolb
fnstenv
movsb
mov
fcoms
in
pop
stos
imul
test
inc
mov
jae
movsb
or
sahf
shll
mov
cmpb
inc
xor
adc
test
or
bound
dec
mov
mov
or
hlt
mov
je
mov
ficompl
xchg
xor
cmpsl
sub
decl
mov
pop
inc
fcoms
fldcw
pop
sbb
xchg
cmpsl
fildl
xor
data16
outsl
inc
pop
cmp
lea
and
int3
jecxz
negb
inc
daa
sahf
jge
lea
xchg
mov
jl
nop
enter
imul
mov
and
je
fdivrs
cli
xor
outsb
fs
add
push
incb
test
shll
xchg
adc
lret
cli
or
adcb
jl
fsubl
rclb
cmc
out
std
jmp
fs
jp
sub
cmp
mov
cmp
adc
pop
mov
inc
sarl
dec
lods
pop
pop
mov
iret
dec
enter
pop
ret
mov
mov
sbb
or
adc
lds
add
xchg
xchg
push
adc
pop
fcmovnu
lret
jnp
mov
das
mov
add
jl
in
and
jl
out
js
adc
out
and
jecxz
out
cmp
andl
jae
daa
fldt
in
scas
jbe
sbb
aad
imul
or
xchg
adc
inc
ss
test
dec
ret
mov
mov
sarl
out
ds
dec
rcll
dec
mov
out
iret
cmp
sbb
mov
outsb
adc
popa
mov
rorl
mov
mov
jmp
ja
mov
not
push
mov
divb
cwtl
leave
loope
into
test
ret
sub
cmp
sub
mov
je
or
arpl
adc
adc
inc
pushf
or
xchg
add
adc
add
jmp
into
sahf
outsl
cwtl
xchg
stc
shrl
das
xor
and
sub
jle
out
and
pop
adc
into
test
dec
fcmovnbe
out
pop
pop
or
adc
loope
or
fcomps
je
mov
call
lret
dec
sub
pop
push
push
nop
ret
fistpll
sub
xor
test
and
mov
mov
lret
xor
add
dec
ds
cmpsb
pop
mov
pop
jno
add
test
aam
popa
xor
pslld
sbb
cs
js
dec
and
stos
outsl
jg
out
fnsave
testb
add
icebp
inc
test
push
rcr
cmovno
insl
insl
aam
mov
sub
ja
repz
mov
stc
cs
push
pop
and
bound
xchg
sub
popa
ficoms
insb
es
or
dec
sub
js
loop
ret
jo
push
adc
push
sbb
xor
scas
jno
ds
pop
iret
dec
jmp
jne
mov
adc
lret
dec
notb
cltd
push
dec
sub
mov
addr16
jno
ja
lret
jne
fistps
sbb
in
ds
cmc
mov
mov
pop
test
xchg
xor
mov
mov
mov
mov
xchg
bound
addb
xchg
dec
jecxz
xor
adc
cltd
inc
push
out
xor
inc
test
into
ss
jns
or
test
rol
popa
push
or
adc
into
push
pop
push
daa
xor
xor
popa
push
icebp
push
mov
aad
pop
icebp
imul
sub
addr16
dec
xor
jle
daa
lret
mov
sub
int
dec
imul
or
push
push
lock
fistpll
test
decl
imul
test
dec
fistl
shr
test
test
mov
pushl
jp
pushf
jmp
jae
dec
imul
sti
addl
sbb
aas
in
arpl
mov
loope
push
mov
sub
pushf
and
aaa
push
stos
loop
mov
pop
in
jmp
filds
daa
rcl
repz
lock
scas
ja
xchg
pop
bound
cmp
inc
xchg
push
rcrl
mov
pushl
add
sbb
add
cmp
or
jbe
mov
lods
incb
add
ret
pusha
call
or
jecxz
adc
out
pop
inc
jo
mov
out
cmp
out
pushf
rcr
mov
and
das
sbb
addr16
or
aas
cmp
dec
adc
es
in
sub
inc
test
sbb
cmp
adc
outsl
das
mov
movl
sbb
xor
cmp
cmp
dec
and
lcall
scas
fistpll
mov
enter
dec
test
jl
pop
movsl
sbb
std
stos
ljmp
ljmp
jmp
jo
adc
adc
add
xchg
xchg
push
jae
mov
mov
mov
and
scas
and
push
ret
push
mov
mov
xchg
pusha
pop
clc
testb
lret
nop
mov
sbb
lahf
ds
mov
mov
je
sub
xchg
jle
cli
inc
mov
das
scas
add
xbegin
inc
adc
cmp
cmp
daa
mov
cli
aas
js
mov
and
out
lock
cmc
xor
test
fdivr
mov
js
cmp
stc
push
xchg
es
aaa
and
in
sbb
jno
in
cmp
and
cli
mov
push
ljmp
fldcw
aad
xchg
inc
clc
xchg
das
dec
jle
mov
roll
xor
sbb
fwait
sub
loop
push
dec
incb
fbld
xor
or
jnp
in
mov
insb
sub
das
cmp
repz
repz
jmp
push
in
insl
mov
adc
pop
out
add
xchg
add
push
arpl
jns
mov
orb
stc
sbb
fidivs
lods
push
movsb
jp
mov
dec
nop
int
add
aas
cmp
mov
inc
mov
shrl
repz
repz
and
orb
ja
dec
fsts
push
xchg
or
add
repnz
out
loopne
insl
and
enter
and
stos
add
in
ljmp
lcall
lret
addr16
cli
scas
lahf
dec
lods
maskmovq
testl
dec
stos
into
ret
xor
outsb
arpl
sbb
adc
sbb
push
pop
enter
pop
icebp
add
mov
or
xchg
ja
add
push
or
mov
xchg
sub
cmp
ljmp
lret
aam
bnd
dec
arpl
push
push
insl
xchg
sub
sub
call
std
gs
xchg
insl
stos
lcall
or
popf
add
scas
icebp
dec
int3
stos
pushf
cmp
fwait
jne
es
push
test
out
mov
sub
push
cmp
mov
daa
jmp
rorl
push
xchg
mov
pop
or
jnp
push
sbb
dec
mov
sub
popf
mov
and
mov
mov
unpckhps
mov
xchg
lret
jo
or
xor
shrb
sbb
sbb
js
and
in
mov
mov
pushf
xchg
jbe
fistl
sub
sub
add
scas
mov
enter
dec
and
xchg
fiaddl
cmp
sub
sub
movsb
out
dec
repnz
mov
push
pop
pop
iret
ss
pop
xor
jns
lds
movl
arpl
rcl
out
sub
jge
sbb
aas
lds
imul
movsb
aam
pop
test
data16
cmpb
mov
xor
mov
jb
or
cld
sub
xlat
js
shl
mov
mov
lcall
stos
pushf
cmp
pop
jb
out
flds
leave
dec
sbb
out
adc
and
dec
dec
xor
jne
pop
sbb
pop
xor
push
push
sub
stc
cmpsl
cmpsl
push
pushf
or
stos
sahf
cli
sti
mov
insb
lock
pop
add
adc
push
bound
fadds
jmp
mov
pushf
jmp
inc
sbb
jle,pn
sub
pop
sbb
push
dec
xchg
sub
ss
out
fdivs
mov
jmp
push
xchg
push
mov
arpl
test
mov
or
ficoml
out
lds
mov
fistl
mov
mov
or
jo
scas
ret
sub
inc
mov
ljmp
cmpb
jne
int
test
pop
std
jge
dec
les
lahf
out
stos
sbb
outsb
and
inc
movb
push
ja
jo
mov
jecxz
mov
lds
in
push
stos
fwait
and
sbb
ja
dec
movsb
in
push
or
sbb
lahf
jecxz
mov
mov
jmp
mov
shll
cmpsb
mov
ret
popa
stos
arpl
mov
nop
and
repz
out
out
insl
mov
imul
testl
dec
mov
in
sub
ret
pop
sub
fists
mov
ret
xchg
mov
call
push
sbb
cmp
jle
cmp
dec
xlat
mov
sbb
mov
sub
bound
iret
sti
sub
dec
test
jo
orl
adc
mov
lret
js
clc
or
xor
inc
xor
adc
push
fsubrl
stos
xor
mov
outsl
dec
sbb
mov
lcall
xchg
out
fldt
push
enter
pop
fidivrl
jnp
adc
mov
rolb
dec
mov
aas
sub
xchg
and
ret
pushf
in
cmpl
cmpsl
sbb
mov
pop
dec
push
sub
test
mov
cmp
or
push
mov
jno
sub
push
ss
aas
jmp
arpl
cmpsb
inc
or
adc
mov
subl
test
jbe
rcrl
sahf
repnz
inc
nop
cmpsl
mov
push
test
pop
leave
ret
inc
xlat
inc
out
sbb
push
push
loop
sbb
xchg
stc
int3
dec
and
lret
pop
add
inc
and
push
sarb
std
addr16
arpl
adc
cmpsl
adc
mov
xor
cli
cmp
je
mov
loope
sti
mov
pop
pop
aas
cwtl
sti
repz
test
push
insl
xchg
adc
loop
dec
mov
mov
iret
notl
cmovbe
fistpll
sarl
ffreep
stc
dec
es
rcll
scas
push
xchg
shrl
pop
es
cmp
add
lods
insl
lock
xchg
jp
arpl
xchg
test
cmc
sbb
leave
jge
movlps
js
adc
push
adc
and
xor
outsb
int
dec
ret
fildll
cmpsl
push
fucomi
mov
mov
es
dec
jbe
adc
ss
add
sub
or
into
rorb
pushf
fwait
xchg
mov
mov
mov
pop
mov
and
push
lock
outsl
addr16
jno
mov
jecxz
pop
in
and
push
pushw
out
jl
sub
xchg
lret
jbe
adc
bnd
xchg
mov
test
push
cmp
mov
and
lret
sbb
movsb
push
cltd
xchg
xchg
in
mov
cmpsl
adc
mov
dec
mov
lock
std
push
scas
sbb
lock
adc
aaa
lods
cmp
xchg
inc
mov
push
pop
push
cltd
mov
shlb
test
add
inc
xorb
mov
mov
jl
adc
rcrl
fiaddl
arpl
add
mov
iret
push
sub
xchg
xchg
jnp
xchg
icebp
add
and
mov
jo
fcmove
sub
lret
stc
mov
pop
jp
loopne
fiadds
cli
adc
mov
pusha
dec
xchg
fwait
or
push
ds
or
cmp
iret
lea
cwtl
ret
jg
or
push
add
mov
jmp
imul
push
fldl
repnz
push
ret
stos
xchg
popf
mov
loopne
push
sbb
add
or
lock
sub
mov
stc
loop
or
mov
adc
dec
mov
mov
test
bound
dec
rorb
cmp
add
mov
loop
test
sarb
bound
pop
pop
dec
clc
jnp
imul
mov
sub
lret
sub
fdivrs
jnp
adc
rcll
and
xor
fisubrs
mov
cmpsb
cld
mov
fisubs
iret
cltd
test
ljmp
sbb
add
movsl
stc
push
lods
pusha
add
adc
or
mov
or
cmp
lahf
cli
ds
mov
test
sarl
sub
jg
mov
cmc
das
daa
xchg
fidivrs
vsubss
jbe
xor
sahf
sbb
jecxz
sub
mov
sub
outsl
imul
sub
cld
and
outsb
xchg
mov
xchg
sbb
mov
lret
mov
push
mov
fcomps
test
jne
cli
lea
push
ret
lods
ret
lock
les
or
jge
sbb
testl
bound
dec
pop
dec
daa
mov
jmp
ja
mov
adc
sub
int3
gs
cmp
dec
push
adcl
mov
mov
dec
xchg
mov
mov
jo
test
pop
out
push
icebp
mov
inc
testb
adc
cmc
gs
daa
imul
and
mov
cld
scas
dec
pop
inc
add
inc
loopne
int
cmpsb
mov
pop
imul
dec
outsl
aam
cs
les
mov
out
dec
aaa
fcoml
push
stc
fwait
push
hlt
dec
fsubrs
stos
outsl
jnp
shrb
push
add
and
mov
mov
mov
xor
cmp
or
mov
mov
cs
iret
cmpsl
mov
bound
and
pop
test
into
femms
scas
or
fsubrs
sub
notb
mov
sahf
insb
inc
insl
out
pop
push
mov
or
mov
fimull
sahf
stc
pop
push
pop
cmp
jno
inc
sbbb
lret
das
mov
pop
dec
jb
mov
jle
pcmpgtw
adc
insb
push
arpl
mov
or
inc
mov
push
repz
or
loopne
inc
adc
xlat
inc
lahf
outsb
clc
inc
mov
rcr
inc
inc
scas
sub
out
jo
pop
fstps
cld
pop
push
sbb
pop
xor
das
loop
push
push
stc
insb
xor
xchg
and
xlat
insb
xchg
lahf
jae
out
xchg
adc
jae,pt
push
dec
ficoml
out
je
lahf
ret
js
insl
push
dec
adc
sti
sub
in
jl
xchg
xchg
pop
stos
or
jns
in
fsubrs
add
add
cwtl
push
shr
xchg
cwtl
xor
push
sti
adc
and
jb
out
data16
mov
popa
xor
cli
ja
shlb
ja
fnstenv
rol
inc
inc
mov
les
imull
cmpsl
add
mov
in
dec
add
pusha
int3
std
push
sti
xor
sub
punpcklbw
test
test
inc
nop
push
loopne
mov
addl
jmp
loope
and
dec
das
pushf
pop
cmp
lea
incb
and
mov
dec
test
in
mull
in
data16
loope
pop
jp
int
mov
jne
outsb
push
aam
andl
je
inc
adc
out
enter
adc
xlat
adc
mov
push
andl
xchg
inc
dec
jmp
aaa
and
ficoms
xchg
outsl
das
fwait
test
inc
data16
pop
js
sbb
cmpsb
push
pusha
popf
push
es
jno
lcall
sbb
test
ljmp
hlt
loopne
mov
xchg
and
negb
jge
xchg
jmp
pop
sub
dec
aaa
adc
addr16
mov
cld
mov
jmp
inc
push
add
or
fidivrs
mov
cli
insl
gs
jnp
or
xchg
lds
cmpsl
idivb
clc
xchg
sbbb
test
pushl
lret
mov
jp
data16
cli
fs
loopne
jg
jno
out
lahf
leave
jnp
out
pop
es
push
int
mov
inc
or
frstor
xchg
pop
jg
inc
sub
fidivs
int
outsb
nop
sbb
add
sub
xor
mov
cmp
pop
inc
int3
or
in
mov
or
in
lret
mov
lock
enter
movsl
cmp
fucomp
int3
arpl
icebp
in
add
fwait
sbb
push
sub
fidivs
mov
inc
pushf
mov
std
sbb
pop
adc
and
nop
xor
fisttps
pop
loop
mov
mov
inc
mov
inc
lock
or
ret
xor
rcll
sti
add
jle
xor
lds
or
ds
in
imul
movsl
ljmp
movsb
inc
pop
sbb
fucomip
adc
lods
jmp
dec
jo
arpl
in
push
push
jbe
mov
mov
ret
xor
add
test
fimull
rcrb
push
cmpsl
jb
cmp
std
outsb
xchg
sbb
mulb
adc
cltd
push
and
inc
out
imul
fdivr
mov
les
or
mov
ret
jecxz
or
jmp
in
icebp
cld
sub
je
xor
imul
adc
dec
in
int
pop
nop
addl
push
or
add
cmp
mov
out
and
or
lcall
mov
dec
pop
push
lret
xchg
or
cmp
xchg
stos
sbb
repz
dec
xchg
jb
jcxz
cmp
lods
pop
dec
ja
lods
sub
add
inc
and
ficoms
call
imul
inc
and
xchg
loope
pop
pop
rcr
sub
push
iret
fdivs
outsl
or
idivb
imul
or
mov
push
xor
mov
pop
lcall
mov
icebp
mov
dec
xor
aaa
push
mov
mov
nop
aaa
push
xchg
dec
xchg
push
std
push
les
arpl
clc
sub
push
imul
cltd
lea
xor
mov
jmp
rorl
std
into
xchg
stc
add
fnstenv
cmp
jecxz
or
adc
int3
inc
sarb
int
imul
gs
inc
in
lock
mov
add
inc
cltd
rol
pop
stc
frstor
popf
lds
sbb
std
andl
xchg
lods
loopne
aaa
pop
pop
xchg
sub
pop
push
sbb
andb
icebp
mov
mov
mov
nop
out
xchg
aam
lods
fisubs
pop
add
cmp
frstor
push
push
add
pshufw
inc
add
pop
cmpsl
xor
sub
sahf
int
subb
xor
iret
out
mov
cmp
bound
sti
jo
sbb
xchg
lahf
fisttpll
push
aad
dec
xor
roll
sti
xchg
inc
sub
pop
mov
jnp
or
add
dec
push
scas
jl
andb
pop
sbb
lret
int
pop
mov
jmp
pop
fbld
mov
std
movsl
mov
fwait
sbbb
pop
xchg
and
in
mov
mov
out
sbb
jmp
push
xor
adc
pop
cmp
or
mov
mov
cmp
sbb
ds
push
add
xchg
in
and
pop
and
outsb
movsb
cs
sub
mov
lahf
mov
xchg
pop
add
data16
stos
aad
popa
mov
xchg
adc
test
inc
sbb
push
sbb
push
fbstp
outsb
mov
sbb
mov
xchg
call
and
sub
ficoml
and
add
or
shrb
movsb
in
stos
ja
ret
xchg
push
adcb
in
sub
xchg
sbb
xlat
and
cli
sub
xor
cmp
test
ljmp
fxch
xor
fs
pusha
icebp
jnp
shll
out
ds
je
arpl
mov
lret
outsb
dec
mov
mov
or
cmc
rolb
pop
mov
shll
add
and
std
lret
movsl
in
push
mov
mov
das
repnz
std
iret
movl
adc
mov
dec
popf
hlt
add
loopne
lahf
sbb
ret
out
mov
push
dec
xchg
adc
shll
imul
mov
daa
popf
mov
faddl
push
or
mov
int3
movsb
cmp
jae
xchg
cmp
xchg
loope
xor
add
je
xor
add
bound
scas
cmp
aam
fdiv
add
adc
inc
fisubrl
fdivs
push
push
xchg
js
gs
pushf
xchg
aaa
out
ret
out
dec
and
fstl
call
lods
stos
jno
dec
dec
popa
adc
mov
push
pop
sahf
inc
dec
lcall
nop
push
dec
shrl
scas
sarb
movsl
inc
ljmp
cmp
xchg
push
cmpsb
pusha
cmc
pop
mov
cmpsl
leave
push
lock
incb
flds
xchg
cmp
gs
mov
movsl
jp
push
lcall
sub
cltd
adc
inc
ja
mull
popa
lock
out
fisubrs
jl
in
inc
data16
jle,pt
jae
test
gs
ret
mov
jb
and
mov
adc
adc
andl
adc
int
xorl
loope
fstpl
xor
push
lock
push
es
lods
out
imul
jno
pop
jb
test
insb
jno
push
fimuls
daa
int3
out
js
pop
in
push
fistpll
mov
pop
pop
push
insb
push
mulb
mov
je
stc
mov
xchg
sub
movsl
pop
mov
repnz
movsl
std
sti
out
mov
jb
in
test
xlat
scas
cs
sbb
pop
orl
or
push
sti
pop
add
sbb
loop
scas
das
xor
rclb
fnstsw
or
pop
add
cld
in
sarb
cld
push
xchg
insb
mov
sub
inc
cmp
pop
jne
outsl
hlt
es
or
pop
mov
stos
push
gs
inc
mov
adc
xchg
jge
enter
mov
popa
ja
hlt
mov
jbe
or
int
je
fnstcw
repz
cli
cmc
pop
sti
sbbb
mov
push
pop
movsl
cli
popa
stc
and
fcmovnb
jmp
mov
sbb
rcr
repz
mov
rolb
mov
popa
in
dec
sbb
mov
cmpsl
or
or
xlat
in
mov
clc
and
fs
fnstsw
shlb
cli
or
sbb
mov
mov
testb
ficomps
mov
ficoml
mov
enter
sbb
xlat
push
and
push
cs
sbb
cltd
or
add
cld
loopne
xchg
xchg
jg
jecxz
xor
sti
dec
outsl
mov
test
repz
fnsave
fbstp
lcall
aam
jb
pmaxub
out
arpl
shrl
push
push
jge
lods
xor
cltd
push
mov
cmpsl
and
imul
movsb
xchg
pushf
xchg
ds
mov
out
pop
mov
or
mov
cmp
jl
out
cmpb
subb
xchg
mov
adc
adc
dec
bound
jbe
inc
jmp
aad
dec
pop
jns
jle
std
xchg
jne
mov
stos
sar
inc
mov
jbe
pusha
repz
sbb
and
fisubrl
lret
and
push
jne
pusha
push
aas
fcom
or
xchg
dec
mov
shll
js
dec
xchg
xor
and
xchg
mov
fadd
xor
and
test
pop
adc
ljmp
scas
mov
ficoml
pop
push
sub
popa
or
pop
xor
int3
adc
push
mov
xchg
into
pop
push
imul
dec
push
cmpsl
imul
inc
add
or
jae
mov
xchg
jp
out
jp
sahf
lods
int
pop
jg
cmp
insl
xchg
cmp
ja
ljmp
sub
popa
dec
mov
notb
stos
jo
cld
test
aaa
test
cmp
mov
stos
repnz
mull
subb
dec
mov
mov
pop
pop
daa
jae
pop
stc
outsl
fistl
pushf
or
loope
ficompl
rorl
leave
enter
fildl
pop
add
xchg
push
adc
enter
push
xor
cmp
fucom
cmpsl
pop
iret
jae
inc
add
mov
ss
pop
mov
clc
in
cld
call
aam
xor
dec
cmc
xor
sbb
dec
xchg
repz
ds
movsb
xor
jae
call
inc
dec
pop
xchg
sub
sub
dec
bound
in
jmp
mov
mov
ds
mov
add
pop
ficoml
es
test
js
push
sbb
loope
push
mov
push
dec
push
addps
jae
mov
xor
adc
adc
inc
data16
mov
adc
jbe
imul
jns
stos
xchg
mov
jl
mov
and
push
xchg
push
pushf
mov
outsb
add
imul
or
mov
inc
inc
xchg
add
and
push
stos
xchg
mov
or
jge
add
movsb
cmp
lods
sbb
xlat
mov
push
stos
imul
push
pop
or
in
clc
inc
bound
or
lret
inc
jmp
lock
in
cmp
xlat
les
std
out
jle
sub
ss
lds
cmp
js
jmp
cmp
pop
mov
mov
dec
xor
xlat
jne
mov
ficoms
add
ss
inc
mov
int3
call
mov
loop
adc
testb
dec
daa
jle
xlat
sub
int3
mov
insb
mov
lods
mov
cs
lods
xchg
mov
fs
test
push
sbb
xchg
mov
dec
and
in
push
or
cli
cmc
stos
mov
inc
xchg
int3
incl
push
orl
dec
sub
jle
cli
sbb
out
cmp
pop
clc
mov
jl
sbb
and
fwait
sub
add
bound
lock
sahf
xlat
loope
ljmp
mov
or
add
and
scas
insl
fiadds
popa
pusha
jns
mov
bnd
push
faddp
test
int
pop
inc
adc
mov
pop
loopne
sub
negb
sub
cmp
or
xchg
call
nop
nop
std
pop
loop
sbbl
loop
push
mov
pop
jecxz
das
das
pop
cmp
jl
xor
cmp
out
inc
cltd
pop
pop
fnstenv
lods
and
test
mov
cli
addr16
pop
sub
or
mov
xchg
pushf
or
fstl
test
jno
rolb
add
or
mov
ljmp
scas
aaa
mov
add
int
mov
mov
inc
push
shll
pushf
inc
mov
mov
inc
cli
lret
aad
push
fsubrl
xchg
push
xor
or
fsubrl
mov
xchg
inc
jge
inc
cmpsb
andl
sahf
imul
cltd
mov
fwait
sahf
dec
sbb
mov
or
push
ret
fistpll
push
test
push
xchg
and
lret
lods
enter
sbb
or
mov
jb
cmpsb
xchg
jae
outsb
push
idivb
cmp
in
mov
mov
hlt
push
and
rorb
out
stos
dec
aas
push
insl
mov
pusha
lea
add
mov
enter
sub
rclb
sbb
cmp
push
mov
lret
popa
cmp
lret
fsts
fisubrl
insb
mov
icebp
ja
pop
dec
mov
push
jmpw
daa
mov
inc
sbb
shll
mov
out
jmp
ret
or
leave
iret
test
xchg
xchg
pop
loop
jg
pop
mov
outsb
outsl
mov
data16
mov
rclb
xchg
or
mov
loopne
dec
aad
jmp
xor
in
mov
mov
lret
sbb
add
pop
in
jl
push
lret
sub
jne
lret
xchg
push
movsl
xchg
ss
clc
push
pop
fwait
xor
xchg
push
dec
movsl
mov
aad
je
fcmovbe
lock
inc
cmp
les
les
fbld
inc
push
push
jbe
sbb
mov
push
mov
mov
push
mov
mov
xor
sub
sbb
incb
outsb
dec
dec
push
sbb
xor
inc
fstp
mov
lods
lahf
xor
daa
and
cmp
aad
outsl
jg
adc
jg
push
jmp
xchg
ja
shll
subb
push
cmp
sarb
out
shr
push
jle
fdiv
insl
xor
jno
in
sub
or
pop
rol
subb
jae,pt
xchg
insl
mov
hlt
mov
sub
adc
pop
out
popa
flds
push
and
stos
xor
or
mov
cmc
cmp
sub
dec
add
lods
sahf
inc
adc
fwait
bound
lahf
and
inc
add
mov
aam
fimull
or
xor
push
or
int
adc
sarb
sub
push
testl
pusha
dec
mov
aad
jnp
pop
sbb
cmpsl
insb
push
loope
lret
stos
inc
push
cmp
das
arpl
stos
jb,pn
shr
cmp
mov
fwait
pop
mov
or
push
lret
ljmp
adc
push
sahf
popf
pusha
sbb
lds
xchg
movsb
mov
clc
and
fwait
das
stc
mov
sbbb
xchg
roll
pushf
jp
rorl
dec
push
scas
adcl
lods
repnz
push
aam
push
sub
jae
sub
stos
les
pop
cld
mov
cmc
pusha
jbe
or
push
adc
enter
dec
addr16
mov
outsb
push
sbb
mov
mov
jbe
std
or
pop
es
xlat
imul
xorw
mov
mov
adc
leave
neg
aas
dec
inc
es
inc
fidivrs
in
andl
push
loopne
and
xchg
xchg
cmp
in
push
fwait
adc
das
mov
inc
movsl
out
inc
jne
fmuls
pop
xor
xor
movsb
mov
jge
pop
push
shll
out
cli
outsb
add
fsubr
call
inc
popa
mov
cmp
mov
stos
mov
cmp
mov
ret
fimuls
sbb
lock
daa
in
mov
notl
jo
and
cmp
shrl
push
cmpsb
andl
popa
mov
or
sub
les
test
icebp
add
xchg
mulb
aam
fildl
or
ljmp
inc
cmp
and
jg
leave
jns
decl
mov
outsb
mov
cmp
jg
jle
fistpll
imul
add
shll
in
cmp
ret
or
jae
xor
cld
jb
mov
pop
mov
xchg
sub
and
jno
shl
insl
aaa
jnp
pusha
sbb
adc
enter
cmc
out
jmp
outsb
add
pusha
pop
jle
pusha
fcoml
je
adc
out
mov
and
iret
in
test
adc
or
arpl
cmp
xchg
std
mov
js
lcall
in
xchg
cmpl
lock
js
flds
ja
push
cs
mov
cmp
mov
sbb
inc
daa
or
div
lods
jge
nop/reserved
fwait
shlb
fiaddl
into
inc
dec
aam
dec
mov
fbld
lcall
adc
outsl
iret
lret
not
jbe
or
ljmp
sbb
lcall
fnsave
sub
xlat
xchg
dec
add
cmp
inc
inc
bound
fwait
push
inc
dec
sbb
xchg
jmp
fidivs
mov
outsl
cld
popa
jmp
pusha
in
inc
jno
and
or
mov
dec
pop
mov
jecxz
and
push
iret
cli
inc
es
shlb
je
add
rcrl
daa
inc
cltd
cmp
xor
jo
clc
inc
sub
xchg
push
mov
inc
popf
je
pop
sub
dec
into
pmulhuw
nop
mov
add
xor
divl
pop
add
clc
mov
sub
mov
sub
fs
call
xor
push
addr16
push
jb
sarl
je
inc
cmp
inc
jp
bound
in
movsb
mov
mov
stos
jae
sub
add
xchg
shll
jno
dec
fcmovnu
daa
sbb
clc
cmp
mov
jecxz
out
movsb
add
fimull
hlt
out
daa
fwait
cmpsl
inc
cli
push
jle
pusha
sub
dec
add
loope
and
fsts
lock
or
fistl
aas
sbb
mov
or
cld
add
xor
sbb
sti
lds
in
loope
xor
and
cmp
jmp
mov
ja
movsl
loopne
xor
jns
mov
xlat
cmp
or
sti
lods
xchg
jno
cmp
inc
pop
scas
outsl
push
add
mov
in
imul
dec
data16
jge
sbb
xchg
lret
xchg
sarb
push
pop
jo
push
mov
jb
inc
cli
pop
in
orb
nop
push
mov
stos
jo
adc
loope
aad
pop
mov
mov
pop
pop
pop
jns
pop
mov
into
lret
add
mov
dec
sbb
push
les
sti
push
dec
add
jno
int
bound
sub
xchg
and
lods
in
cwtl
out
cmp
addb
push
xorl
sbb
jp
cmc
pusha
pop
adc
pop
dec
cs
outsl
jmp
stos
lock
push
filds
and
pop
ja
lcall
lods
push
mov
jnp
inc
xorl
scas
mov
add
hlt
sub
push
lcall
lahf
lods
lods
pop
mov
aam
lret
mov
jge
ror
pop
jge
and
jno
test
repnz
mov
adc
insl
dec
mov
push
dec
push
jecxz
mov
pop
and
and
mov
shlb
rcrb
mov
out
pusha
inc
test
sub
stc
das
add
imul
in
add
push
jmp
pop
xor
repnz
push
xchg
cmp
sub
push
jns
jp
sarl
or
mov
out
popa
or
enter
mov
daa
push
push
push
mov
xchg
adc
scas
inc
xor
loope
pushf
mov
ljmp
stos
pop
insb
fisubrl
add
fimull
xor
lret
push
and
dec
outsb
aam
pop
ficoml
cmp
test
clc
dec
push
adc
loopne
push
mov
mov
outsb
imul
cmpsb
cs
cmpb
dec
add
shll
xchg
xchg
cmp
hlt
subl
sbb
jne
jae
inc
out
xor
cmpb
iret
fcoms
mov
push
xor
sub
repz
lret
lea
cmp
and
inc
dec
in
cmp
loope
dec
mov
incl
cld
fisttps
pushf
add
pop
shlb
mov
cmp
orl
insb
xchg
cmp
lcall
mov
shrl
mov
sti
js
int3
std
jmp
pop
arpl
insb
pop
sub
pop
mov
movsb
pop
shrb
pop
cld
push
sahf
sbb
jle
fxch
imul
jno
pushf
out
xor
gs
mov
dec
fistl
push
lock
and
adc
aas
lock
xchg
gs
sub
sbb
gs
jo
sbb
cmp
das
jo
pop
movsb
into
jnp
and
fdivrl
inc
ret
nop
xlat
and
xchg
inc
pop
rcll
fadds
push
dec
mov
ret
xor
and
dec
sub
insl
imul
repnz
jno
rolb
push
cmc
mov
push
adc
movsl
jg
out
push
xor
or
cwtl
push
push
hlt
ret
fidivrs
jmp
cmp
sbb
je
fcoms
hlt
js
mov
mov
cmp
mov
cmpsl
pop
fisttpl
fstpt
mov
xor
scas
mov
outsb
pop
mov
jb
adc
sub
mov
into
jmp
cmp
xor
cmp
jecxz
push
add
mov
fistpl
in
and
into
stos
lcall
sahf
pushf
pop
repnz
inc
push
mov
adc
cmp
mov
dec
dec
lock
cmp
dec
stos
dec
mov
pusha
cmp
call
mov
and
pop
jecxz
xor
jno
xchg
xchg
or
cmpsl
sub
inc
and
test
sahf
inc
loopne
popf
decb
js
or
dec
les
mov
rolb
cmp
je
aad
jecxz
les
pop
add
mov
mov
xchg
cmp
out
mov
mov
sub
mov
shl
dec
push
mov
cmp
jb
push
push
dec
insl
rorl
aad
mov
icebp
sub
stos
mov
fisubl
jge
add
xor
jo
mov
testl
pop
push
or
add
sub
jg
inc
xchg
adc
loopne
inc
adc
pop
adc
adc
push
xchg
aam
enter
cs
cs
mov
std
adc
sub
add
xor
push
push
imul
jecxz
pop
inc
in
jge
mov
mov
ss
xor
iret
xchg
mov
cmp
rorb
add
ds
outsl
adc
cmp
or
dec
add
cmp
stos
es
fwait
loopne
and
xchg
out
cmpsl
cmp
shlb
outsb
adc
ljmp
sub
test
jecxz
dec
hlt
mov
out
rcrl
repz
ret
dec
lea
adc
jb
fdivrs
mov
cmp
shll
push
xor
xor
lahf
xchg
in
ljmp
mov
cmp
xchg
adc
pop
dec
hlt
dec
insb
daa
push
and
sub
fadd
push
jb
repnz
pushf
mov
dec
test
stos
pop
inc
jge
xchg
js
cld
popf
mov
fisubrs
popa
cwtl
mov
push
movsb
jl
sub
pop
scas
aas
xchg
mov
lcall
mov
movsl
stc
add
fcmovnbe
icebp
sbbl
leave
mov
add
mov
cmpsb
or
push
push
call
adc
loopne
mov
scas
pop
jl
insb
add
enter
imul
in
sbb
shll
js
jecxz
or
ss
fcoml
cmpb
mov
cld
inc
fucomi
mov
fimull
divb
mov
mov
sub
into
push
lret
jne
xlat
mov
cmp
cmp
dec
popf
leave
test
add
mov
sbb
stos
enter
lods
xlat
jl
mov
xchg
cs
add
or
sbb
cmpsl
mov
sbb
mov
loopne
shlb
jmp
mov
mov
int3
xor
cwtl
in
mov
stc
int3
movnti
push
push
inc
pop
push
popf
into
or
cld
push
js
cmp
and
ret
jo
or
lret
int3
xchg
push
add
fldenv
push
mov
add
add
or
mov
out
out
sysexit
mov
les
cmp
xchg
jo
outsb
jmp
sub
dec
mov
repz
sub
mov
adc
es
or
std
in
std
jnp
sti
sbb
xchg
nop
repnz
ss
pushf
inc
faddl
mov
xchg
cs
sti
inc
scas
add
cltd
aas
push
or
arpl
mov
test
repz
outsl
cmp
xor
and
pushf
pop
dec
jno
jae
mov
imul
xchg
mov
into
xchg
dec
std
mov
mov
das
mov
push
inc
push
xchg
adc
pushf
int3
xchg
cmp
out
xchg
dec
mov
clc
and
shlb
cmp
sub
cld
leave
clc
dec
in
push
hlt
out
imul
cmp
loope
repz
pop
imul
outsb
or
adc
and
leave
outsl
outsl
sbb
div
mov
ljmp
sti
test
mov
pop
sub
sub
outsb
mov
ficoms
iret
fbstp
pause
mulb
lret
pop
stos
xchg
sub
out
les
fmull
fwait
incl
insb
mov
mov
das
push
cmp
ret
pop
jp
mov
lret
movsb
dec
scas
imul
pusha
jns
sbb
fs
repz
jns
fists
out
frstor
das
sti
mov
sub
mov
dec
pop
dec
outsl
in
sub
inc
test
dec
imul
jl
adc
xlat
test
mov
mov
imul
sti
ret
xor
xor
divb
pop
mov
cmp
jge
sbb
sti
pushf
shll
loope
adc
fdivl
ret
sbb
and
xchg
push
xor
mov
mov
movsl
mov
cmp
jnp
hlt
in
inc
jns
std
sub
je
or
push
idivb
pushf
and
or
adc
bound
and
jnp
xchg
setg
insb
fsubs
pop
or
add
test
mov
scas
shrl
movsl
cli
mov
jl
mov
ja
fwait
push
flds
popf
mov
scas
cmp
int
cmpsb
pushf
pop
daa
push
inc
xor
push
adc
push
rcrl
test
dec
ret
jns
call
lcall
xchg
jle
mov
lea
fldcw
pop
xchg
xchg
ss
fs
cmp
jl
jle
lods
sbb
rcll
out
fstpl
push
pop
sub
and
imul
out
icebp
and
jne
adc
pop
jo
out
subb
inc
push
das
mov
mov
inc
push
cmp
dec
xchg
in
pop
cwtl
sbb
lcall
arpl
aaa
in
cmp
mov
div
lds
ret
test
mov
jbe
mov
into
cli
repnz
pop
jmp
jno
dec
out
dec
jg
out
pusha
cmp
out
nop
xorb
dec
les
mov
stos
pop
inc
popa
or
sub
add
sbbl
xlat
subl
rol
sti
inc
add
mov
mov
rclb
ds
push
mov
cmp
push
movsl
icebp
ljmp
pop
std
test
sbb
shrb
es
aam
aaa
add
mov
in
mov
add
jo
stos
ljmp
xchg
xor
hlt
cmp
pop
cmpsb
dec
xchg
and
mov
adc
popa
into
lea
and
inc
arpl
ret
push
mov
inc
adc
es
push
dec
xchg
lret
sbb
dec
cmp
adc
and
out
sahf
or
inc
loopne
cmpl
pop
lcall
mov
shlb
xor
and
pop
mov
addb
or
jae
mov
loopne
xchg
outsl
cmpsl
mov
or
mov
push
push
cld
loop
outsb
fisubrs
imul
movsl
scas
js
fisubs
addb
test
mov
les
mov
push
sbb
lcall
ret
andl
xchg
and
pop
xchg
xchg
clc
push
push
adc
mov
popf
jns
lods
mov
xor
add
fs
mov
push
aaa
daa
mov
jns
jns
cmpsb
std
rorl
arpl
sbb
lock
mov
cmp
popa
test
pop
ljmp
test
shlb
cmp
lret
xchg
incl
push
and
enter
dec
jmp
and
xchg
pushf
sub
add
cmp
out
scas
push
dec
inc
adc
pop
push
mov
pop
inc
out
jg
mov
dec
data16
cli
inc
arpl
xchg
pop
cli
mov
faddp
inc
xor
inc
sub
icebp
jle
xor
insb
add
pop
cmpsb
into
loop
jmp
pop
mov
or
les
cmpsb
sub
xchg
shll
jbe
xor
xchg
pop
inc
xchg
sub
lds
push
sahf
pop
rorl
cmp
xchg
inc
shrb
movsb
nopl
leave
inc
iret
adc
xchg
add
cmp
pop
inc
jmp
add
jo
test
jmp
and
add
dec
xor
orl
xor
lret
clc
outsb
sti
leave
orb
divl
pop
ficoml
xchg
xor
fisubrl
shlb
jb
outsb
cmc
push
inc
or
shl
mov
fisttpl
fwait
in
push
lods
jnp
iret
inc
lahf
andl
and
xchg
inc
lods
pop
push
xchg
xchg
dec
push
enter
pop
inc
inc
pop
imul
out
mov
cmp
jbe
into
cltd
and
xchg
divb
int
out
dec
ds
or
mov
mov
sbb
imul
mov
mov
mov
jno
jmp
cmp
add
jp
and
push
xor
mov
addb
pop
or
jg
stos
pop
in
add
sub
pop
inc
xchg
pop
lods
adc
insl
lock
mov
xor
mov
fiaddl
and
xor
add
dec
mov
das
pop
stc
push
pushf
out
loope
lahf
mov
cltd
ret
sbb
bound
in
popa
mov
xor
add
stc
imul
lds
mov
ja
movsb
fdivl
test
inc
mov
enter
mov
arpl
cmp
xor
xchg
xor
or
addb
movsb
sub
das
sub
pop
cmp
push
scas
xchg
addl
insb
mov
xchg
jp
cmp
cmp
xor
fwait
xchg
addr16
push
ret
insl
mov
pop
mov
fimuls
mov
mov
aas
daa
xchg
mov
xor
dec
pusha
lret
je
jp
in
int3
pop
je
test
xor
mov
mov
andl
out
mov
cs
xchg
daa
sub
in
repz
nop
cmp
clc
or
push
das
imul
sti
int3
fcomi
scas
std
test
mov
adc
repnz
pop
ss
test
cmp
pop
icebp
pop
scas
ss
dec
dec
mov
das
sub
repnz
pop
enter
sub
or
cmp
mov
popf
mov
sub
scas
sub
dec
lcall
jnp
pop
push
mov
fs
jns
xchg
add
test
jge
xchg
mov
stos
xchg
mov
add
sahf
xchg
movsl
sub
jo
insb
adc
sbb
cmp
push
mov
pop
jmp
adc
pop
lods
aas
clc
bound
mov
addb
cmpb
xchg
test
push
pushl
les
fcoms
fistps
stc
jbe
mov
add
aad
in
rclb
fnsave
scas
ss
jmp
cs
arpl
lahf
sbb
sub
inc
inc
mov
mov
push
sti
das
cmp
in
lahf
outsb
pop
pop
adc
bound
movsl
stos
in
imul
scas
in
jmp
loopne
outsb
movsb
mov
out
insl
aad
das
or
jecxz
int3
lds
jg
push
pushf
mov
mov
xchg
mov
scas
xchg
push
lcall
addr16
pop
out
mov
cmp
ss
sbb
cltd
imul
ljmpw
ds
mov
ljmp
mov
andb
in
testb
clc
and
or
xchg
sub
addr16
lea
ja
cmp
cmc
in
and
inc
scas
out
cmp
and
or
pop
pusha
je
ret
pop
insl
pop
pop
xchg
sub
pushf
iret
inc
mov
rdtsc
sub
mov
popf
pop
ret
fistl
js
xchg
ja
idivb
stos
inc
les
aaa
jp
and
sbb
add
inc
jns
and
pop
out
pop
fsubrs
rorl
push
push
inc
mov
cmpsb
pop
mov
outsb
sbb
stos
mov
loopne
xor
decl
add
jno
ficoml
mov
cmp
in
outsl
popa
rorb
sarl
mov
dec
scas
mov
unpckhps
aam
out
inc
mov
lea
out
cmpsl
stos
cltd
cmp
or
add
cmp
iret
xor
xchg
xchg
xchg
push
sahf
mov
in
aaa
popa
push
fcoml
bound
cli
test
jo
jg
adc
pop
fcomps
bound
cmp
out
out
pusha
inc
mov
jmp
cs
adc
lods
stos
pop
mov
mov
js
cmc
adc
jnp
out
pusha
test
dec
xchg
and
mov
lahf
aam
inc
xor
add
data16
lahf
rorl
cmp
fwait
pop
pop
mov
clc
scas
js
sub
fsubp
jge
mov
scas
inc
jmp
in
sbb
fcmovnu
and
push
push
pop
add
dec
fs
scas
jne
loop
push
out
out
pop
repnz
in
adcb
es
lret
push
addr16
sub
pop
insb
jo
mov
inc
mov
sbb
and
mov
aam
adc
shll
ret
shlb
out
test
push
dec
add
icebp
push
lds
add
xlat
mov
mov
add
sti
ret
insl
int3
mov
adc
dec
jge
xor
ficoms
scas
fs
aad
pop
test
push
orb
sub
cmp
jnp
mov
adc
or
xchg
dec
jne
mov
jbe
sub
inc
or
xchg
inc
adc
mov
sub
push
mov
or
dec
loopne
xor
jae
aam
push
mov
fwait
lock
out
hlt
mov
xchg
pop
fwait
dec
cltd
and
mov
test
inc
push
mov
frstor
xchg
mov
push
mov
jp
pop
icebp
xor
sbb
cld
push
fwait
sbb
push
fistpl
pop
and
mov
mov
roll
dec
push
imul
in
mov
stos
sbb
push
push
in
lret
inc
fwait
pop
cwtl
jl
add
mov
lods
fadd
dec
call
add
outsl
push
mov
mov
fldcw
fisubrl
jb
icebp
mov
rcr
jp
inc
dec
inc
jecxz
inc
mov
push
cmpsb
leave
dec
mov
out
adc
ja
into
in
ds
sbb
jmp
sub
xchg
jno
adc
movsb
sub
insb
inc
hlt
xchg
out
pop
iret
loopne
mov
cmp
rcll
mov
push
jns
ret
aad
inc
cmp
mov
lods
jo
xchg
add
fwait
sub
cli
mov
push
pop
inc
mov
or
jbe
icebp
fnstenv
aaa
push
inc
popf
jnp
lods
sarl
sub
out
mov
dec
jg
fst
sbb
mov
jecxz
nop
test
push
xchg
fidivrl
or
xchg
mov
test
test
xor
sbb
aad
mov
mov
pop
fwait
jbe
sti
mov
push
pop
lret
xorl
xchg
rorl
xchg
mov
repnz
push
pop
pusha
xchg
push
jmp
jmp
jecxz
mov
push
or
or
push
inc
cmc
lret
sub
inc
mov
jns
mov
mov
pop
pop
ret
pushf
xchg
lcall
jae
negb
pop
cs
sarl
int
cmp
inc
jmp
fimull
mov
sbb
jg
les
decl
fistps
daa
call
int
cmpsl
cmc
lret
fxch
ja
adc
xchg
jae
mov
push
or
push
cmc
ret
sarb
leave
mov
loopne
push
lcall
lret
cmp
and
jle
inc
dec
mov
pop
popa
push
mov
sahf
dec
es
cwtl
inc
rolb
sub
imul
out
mov
pop
push
rorb
aam
and
and
mov
jp
jmp
xchg
sbb
cld
leave
ja
lds
jecxz
cmpsb
sarb
movsl
jae
nop
pop
add
stc
hlt
jae
lret
cmpsb
cmp
mov
iret
popf
add
inc
fdivl
fldcw
push
aam
dec
sbb
jp
bound
hlt
cli
sarb
inc
xchg
mov
push
outsb
jbe
push
mov
int
dec
adc
mov
xchg
pop
or
and
inc
jae
lret
mov
bound
push
dec
add
and
pop
or
jle
in
repnz
mov
ret
jo
pop
stos
shll
xchg
inc
pop
add
mov
daa
pop
cwtl
mov
loope
jne
sbb
sub
mov
pop
xchg
dec
pop
inc
addr16
or
out
in
mov
sqrtps
xchg
test
xchg
sahf
bswap
jp
mov
cmpsl
mov
shlb
dec
push
int3
or
in
call
pop
adc
jb
daa
xor
ljmp
test
push
cmpsb
in
insb
test
imul
dec
sbb
cmc
inc
in
or
add
add
lock
mov
cld
fcmovne
jg
std
int
inc
adc
or
sbb
fldt
mov
mov
push
dec
ret
push
cmp
mov
icebp
out
jp
or
lock
into
in
scas
jb
lds
or
addr16
push
rcrl
leave
lock
sub
std
aas
imul
lahf
lds
mov
mov
mov
mov
lock
jp
rorb
iret
lods
push
mov
pop
add
divl
pop
insb
lahf
fcmovnb
out
or
sarl
push
xchg
dec
mov
sbb
outsl
pop
mov
xor
popa
std
fisttpl
ss
fwait
repnz
cltd
xchg
jbe
out
and
ret
adc
pop
stc
popa
cwtl
push
cmp
fs
xchg
mov
andl
pop
cmpl
add
inc
mov
fxch
dec
mov
aam
and
sar
push
sbb
mov
ja
pop
cmpsb
and
sub
int3
push
mov
cli
mov
push
add
sbb
ljmp
in
insl
cltd
dec
addb
js
and
xor
cmp
push
out
sti
dec
cmpsb
inc
and
inc
pop
scas
cmp
jb
xor
pop
jecxz
xorps
push
popa
stos
mov
in
or
mov
mov
mov
dec
mov
cmp
xor
rcl
xor
scas
xor
ljmp
shll
add
imul
into
int3
add
cmp
lods
cmpb
mov
scas
adc
xchg
sti
aaa
mov
dec
jle
imul
push
popa
loop
jne
xor
rcrl
pop
lret
aam
lcall
fidivrs
adc
test
fimull
pushf
mov
cmp
fmuls
lods
push
push
lcall
aam
mov
pop
inc
mov
cld
repnz
sbb
xor
add
pop
cwtl
cmp
movsb
pop
stos
add
loop
test
gs
xchg
clc
pop
lret
adc
mov
test
push
jp
rolb
mov
nop
dec
mov
in
pushf
inc
jb
int3
fnsave
and
xchg
lret
imul
scas
rcll
cmp
jmp
jmp
idivb
and
add
add
rcll
movsb
sbb
out
add
stc
es
shl
fsts
jno
dec
js
push
outsb
mov
es
cld
cld
inc
push
sbb
pop
shl
lods
aas
sbb
sub
loopne
std
jno
mov
pushf
jno
mov
mov
clc
adcb
ss
mov
pop
lret
xchg
jmp
fs
add
shr
sub
shl
pop
popa
mov
ret
sysenter
jb
cli
faddl
mov
mov
push
inc
mov
or
jle
fdivs
test
push
jo
jge
mov
dec
mov
sub
bound
pop
push
stos
pushf
xor
jp
out
ds
les
sub
loop
subb
and
paddq
fwait
adc
pop
in
in
cmp
call
inc
xlat
dec
dec
hlt
mov
or
pop
cli
jb
inc
sti
push
mov
adc
pop
fstpt
fwait
mov
sub
aas
outsl
mov
outsl
loopne
mov
sub
adc
dec
mov
sub
subl
popf
jnp
cwtl
inc
sbbb
int
cs
cmp
mov
jbe
push
fdiv
jno
xor
push
push
jno
dec
fwait
jnp
movsb
in
and
out
dec
adcl
out
repz
outsb
mov
stc
and
lods
mov
pop
das
mov
fildll
fadd
xorl
mov
ds
mov
cmpsl
add
jg
xchg
lods
push
and
stos
fadd
fadds
add
stos
push
mov
loopne
lods
jno
out
cmp
sbb
xor
pushf
idiv
popa
lds
mov
dec
fisubrl
xchg
sti
negl
dec
sub
test
xchg
dec
and
sub
scas
jo
dec
cmpb
lods
fldenv
ret
pop
adc
leave
daa
stos
lock
pop
jge
scas
neg
jns
loop
mov
cs
inc
inc
pop
sub
mov
xchg
jecxz
ljmp
mov
push
fildl
and
hlt
lods
mov
mov
push
xor
xor
and
shl
lds
inc
hlt
push
jb
xchg
push
std
mov
push
in
dec
aam
rorb
ja
xor
ret
sahf
and
test
xor
push
sbb
repnz
mov
add
mov
add
mov
mov
imul
or
inc
mov
cmp
pop
test
sub
es
add
btc
jl
jo
cvtdq2ps
bound
adc
fcoms
orb
movl
push
mov
subb
cli
adc
out
mov
and
dec
ja
mov
lods
shll
mov
lcall
fcomip
mov
sahf
aad
outsl
mov
xor
cmp
mov
sbb
inc
popf
push
inc
dec
leave
mov
xchg
add
sahf
xor
cltd
adc
jge
push
mov
and
mov
xlat
dec
icebp
cmp
fsubl
test
jae
xchg
inc
pop
loop
loopne
mov
pop
fisubrl
repz
cmp
sbb
and
in
cs
out
or
mov
or
sbb
aad
repnz
sub
xchg
cs
and
xchg
xchg
ret
adc
into
cmc
mov
cltd
sub
cwtl
loopne
inc
or
jnp
mov
mov
mov
add
mov
fmuls
pusha
clc
loop
pusha
mov
int
mov
mov
xor
imull
rorb
or
add
test
or
jo
add
not
adc
call
mov
sbb
and
hlt
inc
ss
movsl
push
lret
rorb
xor
xchg
sbb
cmp
sbb
je
decl
cmp
mov
add
std
or
fmulp
sub
mov
and
stos
pop
rcr
sub
xor
jl
sarb
cmp
test
out
es
push
cmp
daa
in
pop
xchg
jno
push
sub
je
and
or
cltd
int
ret
sub
ficomps
xor
add
rol
loope
ss
pusha
jae
cmp
jge
int
ret
mov
or
loop
mov
scas
aam
mov
movsl
ss
fstps
fstp
popf
pushf
and
lcall
mov
fisttps
mov
shlb
push
out
jmp
stos
pop
push
push
fdiv
loope
push
addl
add
idivb
dec
jno
jne
das
inc
inc
mov
repnz
jne
movl
cmpb
sub
xchg
cmp
inc
stos
mov
push
xor
mov
pop
jmp
cld
adcl
push
mov
pop
or
dec
sub
and
inc
sub
mov
stc
sub
inc
insl
or
mov
push
pop
pop
inc
pop
in
mov
adc
andl
loope
pop
push
pop
leave
adc
cmp
mov
lcall
aad
out
stos
aam
or
sbb
popa
sbb
xchg
push
insl
sub
push
sbb
in
xchg
mov
out
cli
xor
adc
lahf
imul
sbb
aad
adc
pop
pop
gs
pop
scas
test
add
clc
sub
cmp
or
sub
add
add
outsb
orl
xor
pusha
fdivrs
dec
aaa
push
fisubl
sbb
push
mov
pop
cmpsb
adc
out
stc
mov
out
jmp
aad
inc
cld
jno
push
push
xchg
jle
lds
sbb
xchg
push
jae
xor
adc
inc
add
mov
bound
stos
jns
fidivs
sub
imul
mov
pop
in
pop
jns
adc
jp
fstsw
lock
iret
nop
or
mov
mov
fstps
dec
lea
xchg
stos
movsl
mov
jae
mov
bound
push
outsb
jns
xor
jnp
jmp
dec
stos
imul
popf
iret
std
gs
cmp
lds
repz
push
lea
push
push
sahf
sbb
mov
scas
mov
aad
cmp
mov
bound
nop
popa
dec
or
push
insb
out
mov
clc
ds
dec
in
cmp
cmp
out
xor
jg
xchg
gs
mov
sbb
inc
fsubp
imulb
jecxz
and
test
adc
test
jae
inc
pop
lahf
vmovsd
int
jnp
fxch
sub
gs
jle
push
push
adc
in
adc
mov
ffree
or
inc
xchg
mov
inc
jnp
mov
push
jp
call
xor
hlt
shrl
lods
enter
or
adc
fadd
ljmp
adc
and
xchg
push
push
and
divl
xor
in
jne
jae
push
mov
sub
or
inc
push
jns
int
daa
popa
loop
mov
inc
dec
roll
aad
pop
stc
filds
and
insb
xchg
jmp
ja
mov
or
fstpl
mov
iret
xchg
clc
jns
sbb
das
stos
or
cmpsl
dec
popf
test
xchg
jns
popf
push
fstl
xor
push
iret
icebp
lds
cmp
push
push
lock
fcompl
imul
aas
and
sbb
int3
sahf
dec
dec
aad
lcall
push
scas
lahf
push
enter
mov
sub
fidivrs
cmp
mov
pop
les
aaa
pop
sub
shll
es
fildl
les
lods
or
out
lea
add
add
xor
pop
lret
hlt
add
int
test
mov
fcoml
xchg
cmp
jno
test
arpl
lods
and
inc
mov
leave
adc
or
jbe
dec
jge
fisubrs
cmpsl
lods
in
or
aaa
idiv
std
xchg
push
mov
icebp
scas
pop
inc
inc
mov
fcompl
inc
ret
fadds
dec
lahf
pop
pop
inc
rcrb
pop
push
mov
sarl
xchg
in
and
jo
lahf
push
aaa
sub
xchg
push
mov
addr16
jb
cmp
arpl
xor
add
stos
xchg
int3
daa
add
repnz
roll
jne
dec
dec
and
repz
jbe
ret
clc
pop
jp
popf
loopne
inc
aam
mov
cmp
imull
fsubs
sub
pop
xchg
andb
fmul
lea
das
pop
jmp
lods
xchg
imul
mov
jl
mov
fstpt
ret
loopne
call
cltd
lock
fnstcw
fidivl
insl
push
push
sbb
push
lods
dec
fstps
cmp
cs
clc
fwait
lds
sbb
mov
adc
add
lret
imul
into
or
cmc
daa
adc
in
add
mov
repnz
xor
add
out
sbb
pusha
imul
movsl
mov
xchg
sbb
bound
dec
and
movsb
sbb
dec
roll
inc
or
movsl
or
jp
je
dec
in
mov
mov
enter
les
adc
push
inc
mov
jno
push
je
insb
mov
insl
dec
mov
mov
pop
sub
or
lds
mov
pop
cmpsb
mull
push
pop
out
mov
stos
jl
jbe
insl
xchg
jl
loop
pop
dec
xchg
repnz
insl
arpl
andb
es
mov
mov
and
push
xchg
int
adcb
mov
lea
xlat
xor
stos
scas
push
adc
clc
into
aam
add
xchg
enter
xor
and
cld
cmp
rolb
mov
jl
imul
mov
cwtl
inc
icebp
xor
xor
loop
pop
cmpsl
aas
jle
pop
sbb
pop
fdivl
out
add
scas
push
lret
test
clc
vmovupd
int
mov
mov
add
arpl
adc
sahf
das
mov
mov
sub
pop
in
pusha
xlat
test
mov
add
cmp
andb
or
inc
addb
subl
cmc
fimull
dec
ret
or
and
repz
jae
outsl
inc
mov
dec
outsb
mov
jo
xchg
xor
outsb
sub
aaa
inc
sahf
fcompl
sbb
xchg
fsts
pop
xchg
add
lret
aad
mov
stos
stos
xor
lods
mov
lods
fcom
cwtl
jo
je
push
inc
push
outsl
cmpsl
ja
xchg
pop
xchg
xchg
cmp
test
mov
rorl
push
ja
iret
push
test
sbb
cltd
mov
mov
mov
xor
loope
je
mov
test
mov
mov
outsl
jnp
pop
mov
ja
mov
aam
add
push
cmpsl
jmp
in
inc
cmpsb
cmp
or
movl
dec
add
addr16
movsl
stos
and
push
fsubs
jnp
subl
cli
ret
adc
mov
cmc
outsb
repnz
loop
loop
ds
jmp
clc
dec
test
loopne
lods
clc
in
loop
jmp
call
fs
ljmp
outsb
dec
mov
ret
mov
out
out
lret
pop
es
pop
clc
sbb
inc
aam
jbe
sub
movsl
ret
and
xchg
packuswb
inc
lcall
add
or
lahf
xchg
mov
pop
sub
mov
sub
pushl
cmp
jo
mov
aas
mov
pop
faddl
jns
nop
lock
lcall
mov
mov
das
push
test
imul
sub
sbb
sbb
fsts
add
sti
cmp
data16
loope
push
dec
fcoml
and
push
pop
xor
cmp
sub
pop
imul
fwait
subb
and
xchg
aam
cmp
cltd
das
mov
sbb
jecxz
pushf
ds
push
iret
addr16
xchg
cwtl
leave
bswap
nop
data16
xor
sbb
sub
dec
ja
mov
popa
rol
xchg
ss
dec
shr
cmc
pop
clc
js
mov
push
insb
mov
insb
aaa
sar
in
push
xchg
cs
jp
pop
arpl
scas
or
mov
lock
xor
or
cmpsb
fistps
inc
js
pop
in
out
xchg
xor
insl
pushl
mov
pop
pop
cmp
mov
imul
or
das
dec
or
pop
addr16
int
xchg
dec
sbb
pop
xor
stos
mov
and
lods
dec
dec
jnp
add
or
mov
sub
sub
cmp
test
cmp
testl
fmull
out
push
lcall
pop
in
loop
loop
and
outsb
sub
call
add
xchg
js
adc
dec
scas
cmp
cmpsl
in
pop
jae
pop
sub
lcall
xchg
inc
out
scas
fisttps
and
add
cmp
rorl
mov
fs
mov
mov
jnp
cs
cmp
inc
repnz
pop
pop
and
movsb
insb
adc
adc
test
add
cld
pop
sbb
dec
pop
ds
xchg
pop
and
pop
test
mov
or
aas
imulb
mov
daa
leave
add
jnp
jns
pop
das
and
sbb
push
dec
pushl
push
dec
je
inc
mov
lods
popa
aam
dec
mov
push
fcmovnbe
push
inc
lods
mov
xchg
mov
stos
mov
stos
cmp
inc
das
mov
scas
in
mov
out
mov
cmc
pusha
test
and
aas
push
sbb
mov
mov
cs
sub
cld
pop
movsl
ret
subl
arpl
cmp
ret
sbb
fs
mov
cmp
rcrb
cmpsl
les
pop
je
fidivrl
aad
icebp
jbe
insb
nop
addr16
jns
lret
mov
push
lahf
mov
xor
pop
inc
mov
inc
out
lret
popf
aaa
dec
adc
outsl
inc
ss
mov
mov
inc
and
adc
push
sbb
ja
test
das
lcall
add
lods
iret
sub
gs
xor
and
jo
mov
addr16
popf
jo
rolb
daa
sub
cmp
inc
mov
inc
inc
pop
sub
pushf
rcr
adc
and
jle
stos
jb
cmp
aaa
mov
and
push
cmpxchg
inc
xor
std
pop
ljmp
jg
popa
stos
stc
enter
push
out
inc
pop
and
loopne
lock
fidivrs
xor
and
sbb
jno
jo
dec
sahf
mov
rcl
mov
lcall
js
dec
scas
mov
jl
push
movsb
js
outsb
jg
or
adc
sti
dec
or
insl
dec
shll
sbb
adc
pushf
scas
jns
adc
pop
pop
or
gs
inc
int
mov
daa
adc
jnp
das
mov
xchg
roll
ljmp
adcl
push
fwait
pop
inc
or
add
daa
orl
mov
or
orb
dec
xchg
push
push
pop
enter
ficompl
sbb
cmp
mov
shll
inc
xchg
push
and
adc
push
dec
mov
cmp
jg
out
popf
dec
pushl
mov
imulb
mov
xchg
movsl
jo
jle
sbb
lcall
cli
cld
popf
cmpsb
fsubp
nop
sub
xor
push
gs
mov
inc
imul
mov
jg
leave
aas
and
rcrl
xchg
in
je
push
clc
sub
dec
je
test
cli
push
mov
adc
je
mov
fidivrl
cmp
jns
xlat
mov
int3
cwtl
pop
push
add
xchg
fs
loopw
je
jge
jb
sbb
test
popf
mov
sbb
mov
xor
add
lods
push
mov
scas
sarb
dec
adc
or
popf
inc
xor
bound
jge
idivb
mov
imul
xor
aam
push
adc
cmpl
outsl
imul
inc
popl
out
jne
and
inc
add
or
loopne
das
sub
cmp
lahf
jae
mov
xor
pop
inc
es
sbb
out
bound
mov
in
xor
or
data16
scas
lds
popa
dec
push
adc
mov
popa
inc
dec
push
rcrl
fs
das
cmp
cmp
pop
int3
mov
cs
and
or
adc
mov
cmc
rcll
mov
jl
fwait
sti
mov
cmc
and
inc
adc
mov
mov
pop
push
lea
pop
sub
aaa
shlb
sbb
or
dec
test
pusha
flds
stos
shll
sbb
cmc
dec
loopne
sbb
cmp
pop
bt
or
aam
jmp
push
out
mov
sti
enter
notl
jno
mov
pop
mov
out
cld
in
out
test
pushf
mov
xchg
bound
xchg
mov
xor
xlat
cmp
jnp
popf
test
dec
scas
test
cmp
out
xchg
mov
cwtl
add
cmp
scas
mov
push
icebp
in
loope
aam
insl
push
stos
jge
cmp
push
xchg
cmp
or
add
and
ds
insl
les
movsb
test
sbb
push
add
aas
in
cld
dec
cli
push
pop
dec
lods
lods
mov
cmp
cli
flds
int
inc
scas
mov
bsr
call
dec
mov
lahf
sbb
mov
pop
shll
mov
xchg
inc
loopne
sbbl
test
btr
das
xor
insl
iret
push
push
imul
lock
lcall
nop
pop
dec
sbb
ret
loopne
add
jo
dec
jl
rclb
mov
fldt
cmpl
add
push
xor
cmp
xor
test
lods
add
aas
idivb
mov
xchg
sub
and
rol
pop
xchg
loope
fstps
xchg
dec
movsl
in
xor
arpl
js
dec
hlt
cmc
dec
rcrl
jne
mov
lret
aad
inc
mov
and
das
xchg
iret
stos
call
outsb
pop
mov
add
lds
and
xchg
mov
popf
xorb
imulb
xchg
lds
add
out
and
subl
pop
sbb
add
dec
pop
outsl
dec
and
jnp
out
gs
or
outsb
mov
mov
imul
test
push
sub
stc
ficompl
jge
inc
add
push
mov
popaw
ret
add
adc
adc
jbe
or
inc
push
jnp
repnz
stc
push
jb
sub
sub
or
faddl
rcrl
push
roll
ret
cmp
arpl
adc
sbbb
or
cmp
add
data16
dec
jne
inc
arpl
loope
flds
insb
call
push
push
add
sbbb
loopne
mov
sbb
mov
adc
daa
pusha
mov
mov
adc
subl
xor
add
add
mul
push
sub
mov
pop
enter
daa
mov
shll
and
cmp
mov
inc
call
jecxz
fadds
arpl
outsl
pop
dec
inc
adc
insb
ror
jecxz
sahf
push
jmp
cmp
icebp
cmc
mov
add
call
js
inc
push
out
test
stc
ret
mov
cwtl
mov
push
push
lods
icebp
add
sahf
fwait
outsl
gs
and
mov
push
out
xchg
addb
xchg
and
xor
call
cmp
popf
pop
cmp
adc
and
repz
ljmp
ja
mov
leave
jmp
in
and
jae
xor
pushl
lret
in
pop
push
lods
cmpsl
inc
xor
sarl
scas
fimuls
scas
pop
icebp
adc
sub
jmp
je
lods
lret
aas
xor
test
insb
push
mov
mov
inc
popf
xchg
icebp
ret
jge
push
xchg
and
adc
fdivrl
bound
mov
cltd
push
subb
lods
jecxz
test
push
pop
int3
mov
lock
pop
cmp
sbb
loope
jnp
test
ret
sbb
cli
cwtl
int
fnstsw
and
sub
xchg
ds
xchg
into
push
xor
int3
jns
les
jl
pusha
mov
mov
adc
cld
inc
jae
sbb
loopne
mov
popf
andb
and
mov
push
daa
movsb
out
pusha
fs
fs
mov
push
pusha
repz
add
cmpsb
ret
inc
jp
xchg
mov
and
nop
divb
pop
cld
lret
imul
cmpb
push
mov
mov
adc
sti
xlat
xor
scas
je
fs
xlat
stos
bound
cmpl
jno
jne
mov
rolb
insl
inc
and
fwait
std
pop
xchg
add
aas
scas
loop
xchg
jae
repnz
mov
je
or
sbbl
push
arpl
mov
inc
repz
inc
scas
fldt
xchg
addl
test
out
fstps
cmp
dec
je
es
mov
outsl
jbe
loop
popf
int
jbe
sahf
outsl
mov
or
mov
pop
inc
pop
jb
popf
cmp
pop
xchg
faddl
ds
sub
divl
test
es
cmp
jb
mov
push
sub
call
dec
add
push
mov
sqrtps
mov
lret
lods
out
aaa
jae
adc
jmp
push
xchg
lret
inc
adc
movsb
sbb
imul
or
icebp
fwait
inc
add
push
push
aad
push
rclb
scas
dec
mov
mov
xchg
gs
icebp
fnstcw
jne
cmp
repnz
in
cmc
popf
xor
addr16
inc
lds
and
and
mov
inc
sbb
cs
sub
push
or
in
pop
loope
call
pop
int
imul
mov
cmpsl
shl
mov
cmpl
lahf
cmp
scas
pop
iret
cmc
push
sub
cwtl
add
jle
ss
movsl
repnz
add
jmp
xchg
cltd
and
in
jg
push
loope
jnp
push
xchg
es
data16
in
jne
pop
repnz
sbbl
push
adc
xchg
sub
xchg
sar
clc
and
nop
ret
add
pop
fbld
das
mov
adc
push
pop
fistpll
mov
aas
cli
cmpsb
shl
xor
inc
movb
pop
pushf
arpl
sbb
or
fdivl
xchg
xchg
push
dec
jge
mov
mov
insl
insl
adc
mov
scas
testl
add
adc
sbb
mov
lods
fdivrs
aas
inc
fucom
rorl
sub
aam
mov
cli
mov
or
and
mov
addr16
pop
or
add
sub
jnp
or
sbbl
cld
cmp
dec
dec
ja
jbe
and
arpl
inc
js
jae
scas
loope
cmp
push
or
daa
jns
xchg
std
jmp
cmp
add
add
orl
das
sbb
and
sub
dec
mov
inc
mov
leave
movsb
sbb
add
out
push
dec
fldl
and
dec
cmpsb
bound
jp
jb
stc
ret
out
testl
stos
into
repnz
mov
sub
inc
push
pop
jmp
sti
and
loopne
mov
dec
daa
xchg
push
cmp
jle
add
dec
nop
pop
andl
repz
clc
aad
add
aaa
adc
mov
inc
je
data16
orb
adc
jno
pop
int
push
fyl2x
or
fidivrl
cmp
das
dec
xor
and
inc
lahf
or
xor
sub
dec
sbb
mov
fs
iret
movsl
and
adc
rclb
mov
mov
aam
cmpsl
xchg
je
loopne
cmpb
cmc
lahf
inc
enter
mov
mov
roll
dec
flds
xchg
push
js
mov
mov
push
jns
xchg
mov
cmp
testl
lds
jl
push
push
mov
cmc
lret
xchg
and
mov
fldenv
jbe
sarb
pop
push
outsb
sti
xlat
mov
add
inc
fnstsw
sti
imul
std
subl
fcoml
push
stc
popf
xor
or
outsl
sahf
mov
cmp
sahf
mov
and
jle
lods
inc
and
inc
jae
mov
fadds
bound
xor
pop
mov
sbb
das
cltd
pushf
aam
mov
lcall
pop
lret
in
and
pop
jae
xor
cmp
push
mov
cwtl
pop
xchg
lahf
mov
xor
adc
aam
gs
xchg
aam
xchg
filds
into
clc
xchg
inc
cmc
mov
inc
daa
ja
cltd
stos
dec
mov
xchg
xor
pop
rcr
push
inc
out
or
cwtl
sti
sub
emms
popa
cmpsb
inc
dec
int3
in
or
in
inc
in
mov
ljmp
leave
in
stos
and
bswap
mov
in
fsubl
cmpsl
iret
testl
inc
jnp
es
xor
jne
sbb
push
nop
or
cmpsl
jo
mov
xchg
pop
dec
test
xchg
scas
aad
test
es
scas
xor
xchg
pop
aad
out
pop
fmull
jbe
jmp
add
push
shrb
aad
jle
xor
and
mov
out
nopl
mov
sbb
cmp
cmpsb
gs
es
in
lods
repnz
repnz
ss
cmp
jecxz
in
mov
scas
pushf
int3
ret
mov
adc
shlb
stos
cmp
in
adc
das
int
adc
into
jg
inc
xchg
fs
and
iret
sub
add
sub
roll
inc
and
hlt
xor
sti
mov
push
jecxz
cld
or
inc
sub
mov
mov
popa
std
or
movsl
mov
adc
jbe
add
jnp
push
jbe
iret
in
fs
mov
jno
mov
cmp
fucom
cmp
sub
sbb
mull
pusha
enter
in
mov
add
rolb
enterw
sub
or
sbb
popa
dec
pop
jge
cmc
ljmp
dec
mov
add
mov
push
push
iret
xchg
mov
jbe
aam
dec
cmp
fcoms
pop
sub
fildll
stos
adc
lahf
shl
lods
and
incb
ja
jl
ds
fwait
mov
dec
mov
addr16
push
mov
or
push
xor
push
ss
aas
mov
iret
je
jne
stos
les
cltd
es
dec
dec
sbb
cmpsb
add
clc
xchg
and
inc
adc
leave
out
mov
in
repz
cmp
cmc
and
mov
xchg
cwtl
mov
mov
push
js
mov
xor
mov
dec
or
lahf
jecxz
daa
nop
dec
popf
xor
outsb
lods
jecxz
in
leave
add
roll
popa
insl
imul
bound
jbe
loopne
arpl
jecxz
test
cli
ja
sbb
movsb
mov
inc
cvttps2pi
or
ljmp
rcr
inc
das
loop
lret
ljmp
push
int
dec
icebp
pop
mov
stos
mov
pop
lods
xchg
fistpl
xchg
push
js
int
xor
stos
pop
xchg
andb
imul
hlt
ja
loope
sahf
pop
stc
mov
vmaxsd
pop
jl
or
bound
adc
insl
sbb
adc
fldl
incb
cmp
cmp
xor
adc
sbb
xor
mov
sarl
addb
outsl
xchg
loope
rorb
addr16
or
adc
insl
pop
cltd
imul
mov
fimuls
fisubrl
addb
mov
nop
popa
testb
push
cld
sahf
xor
enter
fs
shlb
adc
filds
repz
push
jge
popf
jnp
lock
sub
adc
test
pop
nop
cli
sub
dec
jecxz
setne
int3
cmp
sahf
lcall
or
lods
mov
lods
mov
cld
sbb
popa
out
fsubs
mov
adc
sub
hlt
cmp
popl
mov
xor
sbb
inc
stos
imul
loope
adcl
push
ljmp
inc
outsl
cmp
lcall
push
mov
loop
or
and
pop
idiv
add
and
mov
loopne
repz
sbb
inc
mov
es
cmp
push
dec
inc
xchg
call
in
cmpsl
enter
icebp
mov
or
jo
add
sub
jo
xlat
and
nop
mov
fsubrs
in
adc
mov
pop
xchg
testl
push
in
fbld
mov
jnp
sbb
iret
cmpsb
std
and
dec
movb
xor
hlt
pop
mov
sub
add
sub
mov
mov
jg
and
mov
add
sub
icebp
test
mov
dec
mov
xchg
fbstp
adc
loopne
addr16
shrb
roll
adc
dec
push
xchg
stc
xchg
fisubrl
mov
sbb
clc
inc
push
movsl
jg
stos
cmp
add
cmpsb
xchg
ljmp
cli
leave
sbb
loop
imul
push
push
mov
jae
push
and
mov
sbb
sub
lret
negb
sub
push
sbbb
sub
cltd
hlt
and
jl
shr
xchg
xchg
jl
js
push
adc
sbb
jns
popa
push
xchg
or
cmp
jae
add
cmpsl
stos
pop
icebp
mov
popa
mov
cmpb
aam
leave
mov
inc
cmp
xor
xchg
sbb
rcr
adc
sbb
lret
aad
or
lds
out
aam
adc
sti
enter
stc
enter
scas
pop
rcr
or
pop
sbb
adc
lds
fs
push
add
xor
add
arpl
sub
jns,pt
jae
xchg
xor
or
adc
cli
lret
loope
adc
mov
jo
sub
in
std
jge
jmp
insl
mov
jl
cli
push
or
pop
mov
enter
in
pop
rolb
sahf
add
jo
lcall
orl
sub
push
imul
push
xchg
hlt
stos
sbb
ror
or
pop
xchg
pop
mov
shlb
es
adc
fsubrl
pop
mov
fs
jo
loopne
imul
fisubl
lods
adc
out
rcrb
dec
aas
jl
and
repnz
in
sbb
fisttps
cmp
sbb
sub
and
pop
xor
flds
cmp
js
push
dec
or
iret
sbb
add
es
inc
push
pop
scas
adc
shrb
adc
xchg
and
in
sbb
inc
ficompl
shlb
pop
jge
shl
sarb
fucomp
or
out
push
or
and
sbb
je
ret
das
jns
shr
cmp
and
pop
mov
mov
int
mov
inc
shl
sbb
andb
pop
stos
fisubrs
xor
test
cli
push
add
push
cli
push
inc
adc
fldl
into
jb
mov
add
dec
loopne
add
ja
daa
mov
fwait
dec
dec
daa
jo
mov
jns
int3
and
push
jle
js
pop
sub
adc
or
mov
xchg
fnsave
jnp
add
sub
iret
mov
jb
rep
fsubl
sub
push
outsb
je
sar
push
push
scas
mov
fldl
in
adc
dec
cli
aad
sbb
xchg
bound
sub
mov
outsb
sarl
mov
pushf
jbe
cmp
decl
add
pop
inc
pop
sub
dec
cs
js
sub
cmp
lcall
add
lret
aad
out
dec
int
mov
dec
xchg
sub
fmul
gs
push
scas
and
dec
stos
mov
lahf
xchg
sub
xchg
outsb
icebp
xchg
sbb
fdivl
rorl
out
cwtl
xor
popf
jb
cwtl
xchg
cld
pop
into
add
es
xchg
leave
add
sub
jo
iret
divb
pop
fcomps
inc
cmpsl
cmp
movsl
out
sbb
sbb
dec
je
repnz
xor
test
and
fwait
jmp
js
adc
insb
faddl
dec
and
aas
mov
lret
jge
movsb
sarl
cmp
adc
loop
int3
xchg
mov
icebp
xor
stos
shlb
addb
testb
outsl
into
xchg
jp
rcrl
pop
pop
xchg
and
movsb
inc
xor
test
jg
cmp
adc
sar
cmp
aad
jl
mov
cmp
pop
leave
jno
negb
ss
ljmp
shrl
cmpsl
rcll
inc
movsl
lods
sbb
push
int3
cmp
in
jmp
lds
ljmp
add
rclb
and
mov
and
mov
dec
xor
and
push
dec
ds
mov
cld
mov
aad
sub
shr
imul
addr16
xchg
xor
inc
xor
imul
insl
loope
mov
push
dec
repz
scas
and
inc
shlb
iret
aas
stc
cmpl
daa
jb
aad
and
dec
imul
jno
rclb
cmp
mov
ret
scas
pop
icebp
es
lea
mov
stos
mov
pop
cmp
popa
rcrb
loope
sbb
sbb
cmp
inc
jb
inc
out
mov
xor
scas
incl
mov
std
testl
mov
add
lahf
adc
popf
sub
pop
adc
cmp
aad
addr16
test
jmp
jge
cmp
add
rcpps
and
sub
sub
inc
js
loope
mov
dec
jo
test
xor
rcl
adc
xor
mov
xchg
push
inc
gs
cld
test
cltd
cmpsl
mov
shlb
clc
pop
mov
mov
cmp
push
stc
push
std
rcrb
add
stos
mov
mov
xchg
mov
cmp
rolb
or
push
push
in
cmp
mov
or
xchg
sub
xor
adcb
jns
pop
fisttpl
xchg
in
pop
cmp
add
and
pop
and
ret
lret
adc
dec
insb
insb
les
cmp
cmp
push
jae
or
mov
pop
pop
insl
add
mov
push
and
shrl
imul
rorb
scas
or
adc
out
mov
push
xchg
xchg
xchg
scas
jp
in
xor
dec
jo
ljmp
int
inc
dec
mov
add
dec
in
push
mov
jl
xchg
movsb
out
lea
or
loop
xchg
cmpsl
jb
push
jl
pop
jle
push
sbbl
mov
cmp
add
test
mov
and
mov
pushf
data16
addr16
push
sbb
in
iret
add
push
loopne
iret
imul
jae
ds
pop
jp
lret
add
int3
ss
lcall
out
sti
iret
stos
in
movsl
xchg
adc
inc
ja
outsl
outsl
repnz
push
mov
fwait
xlat
arpl
jge
frstor
push
iret
push
mov
jno
or
fwait
xchg
ja
dec
mov
fcoms
and
nop
in
fisubrl
mov
cmp
xor
inc
add
sahf
out
xchg
lahf
dec
sar
movsb
jge
cmp
in
repz
loope
outsl
jb
enter
dec
push
jbe
shl
adc
mov
lahf
mov
aas
pop
xchg
jg
cwtl
pop
cmpl
ss
adc
jp
push
push
inc
std
dec
jmp
repnz
dec
cltd
lret
push
fwait
sbb
mov
pop
loop
ljmp
cmp
loopne
jnp
dec
cmpsb
and
inc
xor
in
sub
cmpsb
push
out
loopne
in
scas
fwait
cltd
fucomip
pop
xlat
testl
jp
sub
enter
dec
fstps
das
lock
or
jmp
push
push
dec
or
pop
cli
mov
mov
je
cwtl
xchg
push
imulb
cmovae
sarb
inc
push
or
test
xor
daa
loop
rsqrtps
xchg
or
andl
xchg
jbe
or
push
xchg
sbb
outsl
push
mov
push
dec
sbbb
rol
rol
mov
aam
cmp
jb
lds
cmpsb
lods
and
aas
ret
out
push
pxor
xlat
push
dec
iret
jo
jae
call
xchg
repnz
bound
fists
add
mov
mov
stos
movsl
jnp
mov
adc
mov
pop
push
ret
dec
test
lods
in
push
mov
arpl
xchg
mov
shll
adc
test
loop
push
cmp
inc
xorl
cmp
jl
mov
out
add
daa
add
mov
xor
sub
retw
mov
sarb
push
push
xor
jno
mov
mov
jmp
lret
outsb
lret
cli
push
out
or
xchg
repz
lret
jp
mov
adc
in
adc
sub
psubsb
aaa
sub
dec
jbe
mov
push
and
pop
jge
cmp
mov
add
out
xchg
outsb
movsb
inc
packsswb
mov
fwait
xchg
out
imul
in
js
mov
into
push
jg
jbe
ja
ud2
xchg
or
inc
dec
pop
adc
test
movsb
push
pop
xlat
jmp
cmp
add
ja
int
or
jo
and
int3
mov
push
ja
daa
inc
xchg
mov
lock
jne
loop
fstp
dec
mov
mov
jg
int3
jno
daa
dec
std
fisttpl
jae
inc
cmp
cmp
cld
xchg
fwait
jmp
xchg
mov
lret
or
push
pop
sbb
mov
and
and
nop
push
jecxz
adc
stos
repz
pop
insl
mov
sbb
xchg
push
add
push
fidivrl
and
aaa
mov
xchg
pushf
cmp
mov
push
mov
leave
jmp
mov
mov
push
jbe
mov
into
idivb
aaa
ds
pop
repz
les
stos
imul
pop
fidivl
cmp
push
les
clc
mov
dec
pushf
sub
sub
jne
test
or
repnz
fbld
js
popf
inc
cmp
and
push
aaa
adc
push
sti
jns
int
inc
or
cli
sbb
mov
xchg
iret
ret
xchg
add
xlat
sub
jns
neg
pusha
sbb
cmp
int3
and
sub
std
leavew
movsl
dec
add
mov
fsts
mov
repz
jnp
jg
inc
and
inc
xor
push
mov
pop
pop
sbb
inc
in
out
mov
mov
fistl
and
loopne
add
jae
out
dec
pop
dec
push
pop
js
jns
jl
shlb
cmp
int3
xchg
jge
inc
dec
sbb
dec
movsw
ljmp
dec
popf
iret
push
imul
cltd
ret
adc
mov
cltd
xchg
cmp
push
sbb
pop
inc
js
pop
cli
jno
outsl
insl
mov
ret
sahf
pop
and
jmp
sub
out
test
loope
fildll
stos
sbb
mov
aad
imul
xchg
fwait
mov
mov
inc
or
lods
sub
idivb
jmp
cmpb
fsubrp
in
lods
outsb
mov
push
pop
sub
pop
lret
das
int
mov
push
insl
rorl
bound
mulb
mov
flds
movsb
les
fsubl
mov
cmp
cmp
xor
add
pop
or
push
mov
out
fdivrl
inc
mov
jl
jle
cmp
test
inc
shl
fcmovu
loopne
push
loop
dec
xchg
add
mov
push
les
call
clc
push
jg
mov
mov
sbb
push
mov
arpl
addb
xchg
add
xchg
bound
mov
stos
leave
push
popl
sub
jecxz
xchg
adcl
push
in
jecxz
mov
and
or
mov
or
sarl
rcl
mov
mov
sti
and
mov
or
jns
or
push
jnp
mov
xor
sub
cmpb
push
dec
pop
mov
pop
ficoml
jns
pop
cmp
and
cmp
mov
fs
pop
jmp
in
push
jae
or
adc
push
mov
xchg
test
in
js
inc
cwtl
fdivr
ljmp
movb
shrl
jo
pop
sub
or
or
dec
fwait
add
mull
jnp
sbb
out
jmp
aaa
pop
lret
lods
aad
cs
cmpl
cpuid
mov
iret
xor
pop
lret
xor
push
in
pushf
stos
sti
std
mov
push
popl
cmpsl
loop
sarb
ret
sub
inc
idivb
jg
add
mov
loopne
inc
leave
orb
mov
jno
icebp
lret
cli
mov
pop
inc
inc
test
or
mov
add
outsl
shr
adc
or
pop
cld
cmp
mov
jg
stos
and
cmp
ja
daa
popa
xor
or
sbb
in
out
nop
rcl
ja
shlb
push
sbb
inc
or
fistps
loopne
or
bound
sbb
dec
xchg
sub
dec
in
mov
clc
mov
cmp
test
jno
cwtl
push
push
jl
jnp
add
mov
sbbb
mov
cmp
sub
jae
and
sarl
aas
lods
test
push
dec
fstp
mov
shr
adc
enter
mov
bound
ljmp
xor
mov
mov
add
leave
sbb
sub
cmp
pusha
or
and
push
sarb
rorl
add
push
aad
outsb
adc
jbe
push
dec
enter
jge
fmulp
mov
enter
mov
jbe
push
aas
inc
pusha
jns
orl
sub
jge
ljmp
addr16
bound
data16
mov
xor
mov
rclb
adc
xor
stos
adc
and
enter
gs
dec
or
jmp
cwtl
pop
xchg
mov
scas
mov
xchg
in
or
or
mov
sbb
and
adc
dec
sub
dec
mov
lods
add
dec
sbb
cmp
in
add
mov
test
bound
mull
and
neg
push
jbe
in
enter
pop
push
dec
div
call
mov
push
bound
inc
sub
std
or
int3
addb
push
ljmp
jo
out
in
call
out
mov
je
loop
aad
mov
mov
mov
fdivrs
sbb
mov
fwait
test
gs
cld
ret
mov
dec
pop
mov
push
loopne
fidivrl
cltd
mov
call
cld
fdivs
mov
popl
pop
cmc
jnp
xor
mov
dec
ret
xchg
loop
hlt
rcrl
and
enter
mov
xor
dec
xlat
mov
push
mov
pop
cmp
sarl
or
shl
add
inc
sti
cltd
pop
xchg
aad
pop
stos
lcall
add
adc
dec
and
pushf
or
pop
out
xchg
push
mov
dec
cltd
in
cmp
sbb
in
sub
mov
inc
repz
xor
fsub
cwtl
pop
mov
jbe
ja
stos
rol
dec
std
shr
iret
and
jb
jne
jge
je
mov
and
xor
mov
add
clc
and
jnp
test
lahf
mov
outsb
or
inc
push
decl
push
pushf
cmpsl
data16
in
dec
lds
insl
jbe
sti
and
and
cmp
sub
jge
shrl
inc
or
mov
lea
scas
mov
in
pop
inc
jge
testb
lret
xchg
xchg
loop
icebp
andb
or
add
xor
pushf
call
frndint
das
add
inc
cmp
fistl
mov
mov
jns
pop
sub
or
fisttpll
inc
outsl
out
mov
cmc
xor
pop
dec
fstpt
xchg
or
jmp
jae
dec
xor
repz
lea
mov
dec
adc
cmp
inc
out
adc
ret
mov
cli
scas
xrelease
pop
mov
lret
adc
mov
sbb
cld
or
adc
and
jne
cmpl
mov
push
andb
sub
inc
adc
inc
inc
mov
dec
fwait
das
jbe
out
mov
xor
cmpsl
aam
test
pop
arpl
insl
push
test
fwait
scas
cmpsl
mov
mov
icebp
push
jne
push
insb
and
out
or
fistps
lahf
cmpsb
xlat
lret
mov
and
outsb
ds
iret
test
mov
push
icebp
mov
addl
pop
test
push
push
mov
mov
cmpl
push
testl
pushf
aad
sub
out
sub
call
icebp
inc
mov
lds
adc
or
xchg
ds
addb
fadds
cmp
adc
cmp
mov
and
xor
sbb
out
insb
push
stos
shl
xor
out
rcll
jp
add
mov
mov
je
icebp
gs
pop
je
or
xor
cli
adc
cmpsl
jae
jg
popf
mov
cltd
fsub
test
mov
mov
loop
fsub
js
dec
cmp
add
call
test
adc
mov
mov
pop
mov
cmp
stos
lea
mov
sub
or
and
add
ds
in
add
cmpsl
mov
push
mov
movsb
cltd
adc
sub
lea
testb
loopne
mov
pusha
lcall
push
pop
fucomp
scas
pop
stos
andb
mov
insb
or
pusha
or
xchg
les
rorb
dec
mulb
popa
jnp
call
mov
add
pop
inc
stc
add
mov
mov
and
xchg
mulb
pop
addr16
mov
jp
ljmp
popa
fisubrs
add
jbe
in
jne
ljmp
popa
dec
sbb
and
in
mov
hlt
insl
xchg
out
cmp
mov
mov
inc
xchg
insb
pop
cmp
pop
hlt
inc
movsb
or
fisubrl
lock
inc
push
mov
mov
and
gs
gs
adc
sub
jno
clc
mov
jle
or
mov
or
add
or
xchg
mov
fcmovnb
xor
jl
mov
xchg
xlat
dec
js
enter
pop
lock
pop
mov
mov
pusha
mov
jo
push
aad
jae
jmp
iret
gs
sbb
aas
cmpl
mov
xchg
mov
pop
aam
sbb
adc
inc
js
test
cmp
clc
in
xchg
ja
cmp
xchg
mov
lcall
scas
pop
and
jbe
dec
cltd
mov
or
push
inc
and
mov
mov
mov
pop
mov
orl
add
insl
aaa
pop
pop
js
pop
mov
dec
decb
daa
adc
push
xchg
ret
pop
clc
jbe
mov
testl
fcmovu
insb
inc
add
scas
shr
xchg
lahf
cld
adc
mov
into
adc
xor
cmp
push
xor
test
into
push
repnz
pop
lock
dec
jb
imul
shll
lods
jp
and
or
jle
sbb
fwait
push
fistpll
push
adc
xor
clc
pop
ss
xchg
dec
jle
dec
mov
sbb
mov
sub
mov
sub
jne
shlb
cwtl
incb
inc
dec
imul
sub
shl
nop
xchg
or
dec
adc
xchg
js
fbstp
mov
inc
xchg
dec
rolb
scas
int
push
cmp
pandn
dec
shlb
dec
dec
scas
pop
fndisi(8087
shrl
sbb
pop
pushf
arpl
into
shl
aam
sub
pushf
out
rolb
daa
dec
fwait
mov
xor
cltd
das
out
fdivrs
fsubrl
mov
call
push
mov
lahf
insl
and
and
icebp
fs
jo
fistps
sub
gs
add
enter
adc
xchg
callw
mov
mov
mov
es
xchg
rorl
sahf
mov
xchg
pop
loopne
and
out
js
mov
mull
adc
ds
xchg
push
jnp
test
mov
xlat
mov
add
insl
mov
imul
test
rcll
xchg
insb
fimull
xor
adc
xor
ds
repz
and
xor
jae
das
mov
sub
cmp
mov
mov
out
cmp
xor
pop
sbb
loope
dec
cmp
jmp
add
fstpt
mov
repz
inc
ret
mov
or
mov
jmp
inc
cmp
mov
in
jno
push
loope
jbe
mov
jecxz
push
cmp
xor
fdiv
in
daa
out
ljmp
jbe
xor
sbb
dec
ds
mov
or
mov
sub
loopne
pop
mov
iret
das
sub
mov
mov
xchg
mov
in
jne
sbb
and
outsb
pop
or
cmp
dec
cmp
dec
push
inc
fsubr
nop
jnp
mov
into
inc
or
pop
inc
push
dec
lea
pop
sti
movsb
fcmovnbe
hlt
sbb
mov
loopnew
mov
xchg
leave
sti
pushl
movsl
stos
scas
out
imul
add
fidivs
popf
pushf
xchg
test
adc
jno
add
sbb
sbb
pop
jne
mov
ds
subb
xlat
sbb
mov
inc
sub
xor
stos
js
push
add
out
pop
aas
xor
inc
sub
inc
jg
push
push
std
cmpsl
xchg
pop
and
into
mov
push
mov
subb
push
ficoml
fldcw
sbb
pop
inc
mov
inc
ljmp
pop
jne
jae
or
jecxz
test
stc
adc
movsb
sub
pop
push
cmp
inc
repnz
mov
cmp
mov
lret
sub
pop
test
cmp
xchg
cmpl
pop
jno
mov
xchg
inc
pushf
ret
negb
loope
es
push
jecxz
lret
push
icebp
xchg
mov
sbb
pop
in
xor
pop
xor
movl
sub
push
movsb
cmp
and
sbb
das
pop
or
dec
test
loop
push
add
repnz
cmp
jg
lret
pop
loopne
cmp
movd
jge
inc
adc
and
jp
dec
adc
repnz
mov
fidivrs
cld
pop
icebp
loope
sub
sbb
mov
int3
ja
mov
ret
movsl
incb
ret
es
aas
pop
push
stos
xchg
pop
ret
pop
mov
mov
mov
scas
inc
ds
xor
mov
adcl
jmp
fcoms
xchg
sti
jmp
sbb
cltd
lahf
xchg
add
cld
or
pop
sub
cmp
mov
jmp
fcmovne
add
lahf
mov
mov
leave
sub
add
leave
mov
insb
pop
push
jge
jns
push
cmc
inc
insl
insl
faddl
data16
test
push
sbb
cli
mov
and
rorb
insb
inc
push
addr16
cmp
fldenv
jge
mov
add
and
pop
jno
shll
cmpl
mov
stos
int
aaa
mov
fstpt
mov
mov
mov
mov
xchg
cwtl
cmp
fstpt
mov
xchg
loop
outsl
shll
mov
sbb
fidivrl
inc
xchg
adc
dec
xchg
mov
imul
pop
dec
jns
push
lret
aad
enter
addr16
sbb
imul
fldenv
rcll
xchg
inc
cwtl
ljmp
cli
loop
adc
fsubs
leave
jp
mov
out
add
ja
pop
push
lahf
jg
loope
xchg
in
xlat
movb
pop
jecxz
push
imul
cltd
ret
mov
in
sbb
or
in
fstp
fadds
ds
dec
add
mov
stos
test
cld
add
mov
je
pop
cmpsl
mov
subb
fistpl
or
cmp
ret
cmp
mov
fs
pop
xor
sub
sbb
pop
jnp
cmp
lret
pop
ficoms
outsb
ret
test
sahf
sbb
jbe
test
loope
pop
jae
stos
outsb
cmp
push
lock
push
pushf
sbb
pushf
xchg
dec
imul
lcall
mov
jecxz
jmp
ror
cld
outsb
pop
mov
movsb
and
inc
mov
roll
jo
push
sub
dec
mov
cmpsl
jg
jge
xor
loop
pop
sarb
mov
leave
popf
dec
add
dec
xchg
cmpsb
adc
out
push
ret
sub
pop
and
pop
mov
push
jmp
gs
jnp
sbb
fcmovnb
les
dec
dec
cmp
and
adcl
jns
sbb
mov
cwtl
jae
mov
out
push
lds
enter
xchg
in
mov
lret
mov
add
sbb
out
enter
orb
add
xchg
sti
pop
in
leave
daa
add
adc
fcompl
mov
mov
sub
aam
flds
bound
mov
sub
push
mov
test
out
pop
das
int3
out
lds
aas
adc
ljmp
lods
xchg
jle
ja
movsb
add
mov
mov
lods
imul
jle
addr16
or
aaa
jno
leave
pop
fsubs
xchg
xchg
test
loop
pop
jle
fldenv
mov
frstor
add
xor
mov
test
inc
hlt
fdivl
cmpsl
imul
int3
adc
pop
pusha
ds
outsb
xor
cs
out
jo
inc
jge
cmpl
enter
xchg
fsubl
and
cwtl
mov
jl
xor
jnp
stos
push
daa
cli
mov
pusha
push
sbb
shrw
adc
mov
adc
into
ret
dec
mov
shll
fcoms
sbb
cltd
adc
test
cwtl
sub
cmp
js
nop
fistpll
xchg
lock
inc
mov
imul
insb
loop
shlb
jb
movsl
xor
cmpl
sbb
cmp
xor
mov
add
addr16
sarb
pop
stos
sbb
call
adc
cmp
in
aas
shlb
outsb
xor
mov
push
sub
mov
in
test
movsb
scas
stos
movsl
cmp
int
xchg
dec
xor
in
jb
bnd
mov
jae
jnp
repz
je
sbb
repz
jns
xchg
loopne
leave
jo
or
inc
rclb
xor
sbb
fidivl
mov
fistpll
push
push
fisubrl
xor
adc
mov
sahf
cmp
icebp
push
jbe
pop
icebp
sub
ret
mov
outsl
and
cld
cmc
arpl
in
fsubrl
sub
icebp
loopne
ljmp
in
mov
xor
mov
xchg
ss
adc
mov
push
jbe
push
cwtl
mov
vpor
shld
aas
hlt
jl
inc
add
fisttpll
movsb
add
insl
jb
lods
pop
mov
push
in
in
pop
push
mov
add
out
scas
fisubl
pop
mov
mov
cmp
imulb
lods
stc
ljmp
sbb
xor
fiadds
test
clc
xlat
sub
mov
dec
dec
mov
frstor
lock
inc
fcmove
inc
dec
sbb
xchg
int3
adc
cmp
ret
das
xchg
mov
ret
sahf
xor
jbe
into
leave
fwait
cwtl
loope
roll
movsl
rclb
stc
sub
aas
icebp
push
je
inc
dec
stc
push
xchg
sbb
xchg
xor
push
and
movsl
or
testl
dec
add
sbb
sbb
lea
push
jnp
lret
ss
fldl
cmp
andl
pop
add
call
icebp
dec
dec
sbb
pop
adc
cmp
mov
inc
jb
dec
xor
leave
xchg
sub
pop
pop
fsts
mov
enter
out
mov
push
movsl
loop
pop
sbb
jb
ss
lods
dec
sbb
insb
jbe
sbb
outsl
and
jg
cmc
lods
dec
fwait
adc
jecxz
xchg
and
xchg
out
xor
xchg
mov
jg
repz
aam
inc
mov
mov
icebp
xchg
pop
mov
out
dec
loop
push
xchg
sbb
testl
pushf
cwtl
pop
mov
pop
push
push
js
push
sti
hlt
flds
cmp
lret
jo
mov
sub
pop
push
arpl
jo
pop
mov
adc
fnstenv
ds
cmp
clc
scas
cmp
hlt
add
push
mov
push
jo
jl
pop
mov
mov
sub
test
and
into
mov
iret
das
lods
lahf
cmpsb
xchg
xchg
pop
pop
cmpsl
pop
into
push
mov
cltd
mov
push
aaa
fbstp
int
push
sbb
mov
sbb
adc
mov
xchg
xor
insb
and
sub
and
in
jnp
in
insb
lret
mov
in
xchg
daa
xor
stos
sub
push
fsubp
jp
mov
ret
mov
iret
ror
pop
repz
dec
jnp
inc
pop
pop
jbe
cmc
aas
nop
jle
data16
sub
pop
xlat
or
ss
mov
dec
pop
mov
push
pop
loopne
lret
cmpl
dec
lods
out
adc
jle
aas
arpl
into
and
and
je
sbb
sbb
mov
push
or
js
mov
or
insl
addr16
cmp
cs
mov
add
add
inc
jb
gs
xchg
xor
jge
pop
xchg
icebp
push
adc
test
lret
push
or
fnstsw
or
orb
sub
hlt
jb
pop
icebp
push
or
mov
loopne
cwtl
cli
lcall
es
mov
mov
push
xchg
jb
jne
lret
dec
add
sbb
xchg
pop
lea
aas
jnp
ss
aaa
cs
mov
or
scas
sub
sub
xchg
inc
testb
popa
mov
push
int
movsl
je
inc
pop
sbbl
fprem1
icebp
repz
jne
xchg
mov
ret
in
mov
sub
mov
movsb
mov
adc
sahf
stc
xor
jecxz
int
sub
js
pop
lods
xor
inc
mov
dec
xor
xchg
loop
ficoms
aad
fimuls
xchg
cmpsb
inc
cltd
dec
mov
sbbw
and
fadds
mov
pop
push
stos
jge
adcb
mov
mov
dec
rcrl
adc
imul
shrb
push
pop
inc
push
fistl
fistps
xchg
or
stc
jb
mov
outsl
push
and
mov
xchg
addb
mov
ljmp
lock
push
sahf
rorl
push
fdivs
or
inc
scas
cmp
cltd
loope
jo
and
mov
lods
or
or
adc
push
dec
jo
in
push
fdivr
xlat
fdivrl
inc
mov
push
sub
lds
mov
adcb
jmp
push
mov
mov
shlb
jnp
adc
fpatan
lret
fs
jae
loop
inc
call
mov
enter
jl
pop
lret
rolb
bound
cmp
jmp
pop
in
xor
adcb
push
out
outsb
notb
loop
ret
aam
jns
rorb
cmp
sub
mov
push
cmp
fildll
out
sbb
ja
addr16
jo
or
iret
sub
leave
xor
lahf
sti
dec
inc
inc
sbb
pop
sub
mov
lea
arpl
scas
sub
and
adc
jl
xchg
mov
hlt
lds
cli
inc
lds
int
gs
jnp
xor
clc
add
mov
sbb
or
icebp
rorb
daa
lret
je
xor
lret
in
es
cwtl
out
pop
jge
fiadds
push
push
cmp
jecxz
test
jnp
out
push
jbe
cmp
imul
movl
shlb
loopne
sub
pusha
mov
fldz
dec
jg
ljmp
jbe
bound
fmull
sahf
daa
aad
mov
test
pop
mov
imul
jnp
cld
in
or
int
push
mov
sahf
test
scas
fidivrs
push
repz
imul
mov
mov
sub
adc
sahf
pop
lea
lcall
adc
ljmp
int3
test
inc
xchg
mov
jb
iret
imul
frstor
xchg
outsb
subl
aam
cltd
aam
lods
sbb
push
fsubrs
hlt
stc
mov
or
xchg
daa
xchg
enter
ficoms
int
pop
aad
pop
adc
jge
ret
lock
inc
jp
leave
mov
lcall
jo
aas
or
test
ss
inc
in
inc
sub
pop
aas
ret
movsl
push
loope
or
cmp
cld
or
mov
pop
pop
sub
stc
clc
imul
leave
mov
es
into
sub
cmp
add
xor
jb
mov
mov
inc
mov
aad
mov
jns
imul
aam
cmc
clc
pop
dec
xchg
pop
jp
jl
xchg
fsts
test
xchg
fwait
lahf
fimull
mov
fisubl
dec
orl
cmp
pop
jno
insb
in
jo
in
inc
jo
loopne
rolb
rcrl
mov
pop
arpl
cmp
mov
movsb
mov
stc
adc
scas
inc
ds
ret
mov
lcall
cmc
jmp
jg
out
outsl
adc
aaa
ss
lock
loopne
fwait
aas
inc
adc
and
daa
mov
fsts
xor
pop
ja
add
push
sub
push
xlat
scas
push
outsl
test
mov
cmc
inc
ret
xor
in
std
push
ja
cmpsb
scas
mov
in
insb
dec
inc
push
leave
mov
inc
mov
movsb
jecxz
test
rcrl
je
leave
dec
add
sub
jbe
jb
leave
arpl
test
xor
pop
xlat
sub
dec
mov
adc
push
pushf
lcall
pop
lock
ja
xchg
xor
fnstcw
subb
xchg
xchg
fnstcw
xor
xor
add
cmp
sub
fists
push
addr16
dec
jl
xchg
xchg
ds
rcr
loop
loopne
push
icebp
mov
and
cld
pop
xor
sbbb
shl
mov
push
or
addb
push
push
or
mov
int3
xlat
imul
mov
dec
dec
aad
inc
xchg
shlb
sarb
pcmpeqb
ret
mov
aad
scas
mov
xor
cmp
jb
mov
and
dec
mov
rorb
out
add
jg
jecxz
or
repz
sub
push
pop
js
mov
push
jae
cld
repz
ljmp
fdiv
mov
aad
lret
pop
in
cmpsb
inc
daa
notrack
add
xchg
rorb
int
pop
cmc
add
rorl
fcomip
sarb
sbb
pop
pushf
pushl
faddl
sbb
out
xchg
fmuls
jns
and
stos
shll
repnz
dec
jo
mov
mov
pop
xchg
in
das
les
lret
stos
repz
stc
bound
std
mov
dec
push
adc
or
cmp
test
adc
sbb
xlat
xchg
ret
lret
ljmp
and
mul
loope
mov
or
loope
pop
mov
push
scas
inc
xor
dec
mov
mov
popa
lods
cmp
mov
shrl
sbb
dec
add
dec
cmp
jae
in
lret
dec
out
xchg
cwtl
roll
les
into
dec
pop
in
mov
mov
stc
and
mov
rolb
rclb
dec
pop
xor
mov
idivb
in
flds
jmp
xchg
out
push
loopne
out
mov
sub
scas
sbb
std
lock
insl
jne
out
xor
call
insb
shll
sahf
or
push
out
and
xchg
push
fistpl
out
or
jge
cs
mov
fistl
jbe
lds
add
test
aas
inc
dec
sbb
inc
cmp
loopne
bound
pushf
adc
dec
dec
into
pop
cmp
push
mov
fistl
jl
std
orl
cmpsb
xor
sahf
repnz
lock
iret
and
jle
jns
sbb
leave
cmpsl
shrl
sbb
ret
cli
xchg
movsb
pop
xchg
jns
lcall
negl
test
nop
xor
xchg
ljmp
imul
cmp
sub
pop
inc
push
pop
jmp
jp
mov
mov
inc
lods
int3
ljmp
sub
fisubrl
xor
in
fnsave
cmp
inc
lahf
mov
fisubrl
xor
gs
cmp
cmp
jp
imul
pop
inc
pop
jnp
cmc
ljmp
mov
outsl
sub
enter
nop
cmpsb
xchg
es
xchg
push
cli
es
pop
mov
pop
test
mov
fidivl
cmc
cmp
xchg
cmc
pop
add
mov
jns
inc
fadd
clc
add
pop
jecxz
shl
js
jge
inc
je
ficoms
sbb
int3
sub
rclb
jp
lret
or
cmc
add
xchg
mov
lods
loope
cmp
push
dec
es
push
add
cmp
push
cmp
mov
sbb
jmp
sub
pop
mov
and
aad
cmp
sub
dec
cmpsb
repz
xchg
dec
sbb
popf
jg
cs
test
sub
cmpb
sbb
push
stos
dec
jne
int3
cmp
cmp
lcall
push
adc
jae
es
dec
int3
popf
mov
leave
scas
inc
inc
pop
push
in
xchg
or
testl
out
or
shr
push
out
addb
cmp
mov
jle
cmp
pop
stos
inc
xor
popa
xorb
pop
lods
nop
jp
push
xchg
icebp
lcall
and
push
pop
xchg
push
dec
data16
pop
out
pop
lock
jb
pop
hlt
shr
gs
mov
xchg
inc
jb
sbb
adc
icebp
insl
je
jne
lock
jl
mov
enter
mov
dec
jb
loopne
lock
cs
push
cmp
orl
pop
cmp
pusha
lahf
push
pop
jbe
ljmp
ja
test
ja
xchg
add
lods
sbb
je
pop
and
adc
jp
scas
mov
jnp
sub
shr
xor
add
or
inc
push
cld
test
mov
xlat
loopne
lret
aaa
repz
sbb
add
xor
add
pushf
inc
popf
daa
aaa
movsl
push
shll
push
sub
subb
imul
xchg
push
xor
jne
int3
aad
mov
pop
gs
fld
lret
push
aaa
xchg
xchg
add
cmpsb
call
mov
adc
loopne
insb
les
sbb
cmc
jnp
sub
mov
mov
jo
xchg
xor
je
mov
int3
ja
ret
pop
call
jg
xor
xor
sbb
cmp
push
jno
inc
or
cmp
push
mov
pop
or
mov
pop
push
mov
adc
cmpsl
mov
ss
dec
mov
jno
jns
lret
sbb
xlat
leave
pop
ret
sub
sub
pushf
add
cwtl
add
jp
push
jnp
ljmp
fcom
mov
pushf
addb
push
mov
cmp
fnstcw
fs
pushf
inc
shll
ljmp
jno
rcpps
fsubs
inc
pop
sbb
pop
mov
std
les
add
adc
scas
inc
arpl
mov
stc
pop
out
enter
or
push
push
jg
ja
mov
jmp
cld
jo
out
fmull
sbb
cmpb
in
mov
mov
xor
and
imulb
push
cmp
mov
das
and
mov
fwait
data16
pop
xchg
xchg
mov
mov
inc
mov
icebp
cmp
aaa
test
daa
cltd
lcall
hlt
push
add
add
mov
jnp
jp
test
push
xlat
aad
addb
cmp
or
and
imul
or
ret
out
and
dec
mov
aaa
pop
mov
fcompl
daa
inc
push
popa
neg
orb
cmp
cltd
cltd
adc
addr16
test
mov
jae
lods
push
pop
aad
sti
adc
mov
push
mov
inc
sbb
loop
insl
mov
jno
add
loope
outsb
aam
pop
xchg
jno
imul
xchg
xchg
sub
pushf
dec
mov
ret
cmp
pop
add
xchg
sbb
fldt
mov
or
mov
icebp
mov
imul
xchg
or
sbbl
test
outsb
push
add
jae
jno
jb
adc
adc
ja
lea
stos
mov
lods
jle
sbb
sub
xor
shll
mov
ret
sub
jmp
fldt
add
out
adc
test
fwait
add
inc
mov
pusha
push
cmc
jnp
je
mov
inc
clc
fdivr
ss
ds
adc
imul
push
in
cmpl
push
push
scas
sbb
xchg
mov
mov
sti
mov
js
push
add
popa
ret
orl
mov
rcr
jl
sub
or
ds
mov
repnz
out
shrl
fs
ret
in
xchg
test
mov
pop
push
ljmp
and
aad
loope
push
or
outsb
cmp
aad
dec
mov
xchg
repz
je
mov
and
cs
mov
dec
test
inc
rorl
pop
cmp
mov
pop
mov
sbb
mov
sbb
dec
jo
imul
jae
ss
dec
sbb
orb
ret
add
into
enter
lahf
adc
jle
xchg
ljmp
or
mov
stos
bswap
les
jne
push
test
pop
dec
mov
jno
push
sub
inc
cmp
call
movsb
mov
sub
inc
insb
jns
and
xor
gs
filds
scas
frstor
push
jecxz
jno
sbb
ficoms
add
jno
out
adc
fwait
gs
cs
lds
loopne
mov
lret
cmp
push
test
imul
stos
cltd
ficompl
xchg
or
cmp
push
adc
daa
mov
cli
lcall
out
ficoml
jge
mov
sti
pop
inc
fisttps
lret
mov
adc
mov
pop
or
push
dec
cltd
fistl
cmc
addr16
inc
roll
cmpsb
pusha
icebp
dec
mov
mov
fs
lret
and
inc
jg
int
add
mov
ret
sub
jl
test
mov
pop
out
movsb
sbb
into
push
jmp
cmc
mov
lds
jecxz
sub
inc
mov
xor
push
pop
test
sbb
inc
xor
inc
lea
sbb
fistl
and
lods
xchg
icebp
les
lcall
mov
das
jge
nop
cmp
aas
bound
jbe
xor
mov
movsl
cmpsl
sbb
repz
aad
cmp
jnp
add
xor
cltd
xchg
jmp
insb
mov
jno
fsts
adc
sub
lods
je
xlat
fildll
test
fisttps
inc
mov
push
cmp
push
mov
repz
testl
cmp
out
push
fstpl
popa
nop
mov
xchg
mov
ficoms
jle
pop
dec
cmp
or
xor
pop
mov
and
arpl
lds
cmp
pop
and
sbb
add
jo
stos
enter
inc
iret
les
cmp
inc
leave
repz
add
loopne
loope
sub
popf
xor
xchg
add
fnstcw
adc
add
movsl
lods
adc
mov
or
ret
mov
cmp
mov
hlt
sbb
xchg
mov
rorl
adc
push
cmp
and
orb
aas
stc
sbb
roll
pop
outsb
pop
pop
cmc
push
jmp
rclb
dec
lds
movsb
test
dec
inc
jb
popa
mov
mov
loope
mov
pop
dec
lret
cltd
or
or
and
mov
inc
fadd
mov
test
ljmp
push
ss
lahf
inc
jns
mov
fucomip
mov
ds
push
inc
pusha
lahf
mov
xchg
inc
and
repz
inc
icebp
mov
inc
dec
mov
jg
scas
xchg
mov
stc
pop
xor
push
inc
in
int3
jno
loope
addr16
shll
inc
insl
test
popa
in
dec
fucomip
pop
les
mov
xchg
test
mulb
sub
cli
nop
cmp
test
fistps
jl
sub
jno
movsb
dec
xor
mov
sub
repz
or
fwait
aaa
adc
idivb
pop
movsl
test
repz
push
xor
push
or
cmp
out
scas
mov
cmp
xchg
stos
mov
lds
inc
enter
negb
inc
inc
movsl
push
jb
and
pop
push
jmp
jecxz
mov
push
pop
bound
or
xor
mov
cs
push
sub
pop
adc
insl
adc
fwait
inc
addb
movsl
dec
sbb
jnp
test
xor
lods
push
addr16
outsl
rclb
lret
in
imul
pop
xchg
sbb
and
mov
lods
push
fisubrl
mov
cmpsb
jnp
inc
push
movsb
mov
jmp
pop
inc
push
and
mov
nop
push
mov
sahf
scas
sbb
inc
stc
test
lret
lret
push
gs
test
mul
sti
jne
dec
in
mov
jg
add
push
outsl
cmp
fwait
push
push
push
xor
mov
lds
out
cltd
shll
outsl
scas
or
imul
jae
test
or
jp
add
inc
sbb
fs
inc
shl
mov
jae
jns
cmp
ret
je
xor
adc
and
or
push
pop
lods
ds
call
pop
dec
je
addr16
leave
insb
test
outsl
lods
in
outsl
pop
cmp
or
mov
loope
fdiv
jns
in
into
sbb
test
jne
lods
push
sub
sub
fmuls
out
ret
fsubrp
movsl
and
pushf
mov
lods
arpl
mov
pop
outsl
add
jae
mov
test
lret
jle
jp
sbb
fidivrs
ja
xor
push
sub
mov
push
sub
dec
dec
adc
mov
idivb
lock
add
mov
sbb
dec
fldl
lcall
or
pop
icebp
cmp
fildll
loope
fstps
pop
or
js
sarl
repz
daa
movsb
cmc
ds
das
call
cmc
and
add
add
xor
cmp
add
mov
pop
xchg
and
sub
mov
mov
int3
push
bound
movsb
test
subb
mov
cs
ja
clc
jmp
push
stc
xchg
xchg
fcom
fsts
aam
jb
test
enter
arpl
ret
push
rclb
xchg
test
in
mov
enter
aas
mov
sbb
aam
sti
and
ret
enter
cmp
fwait
and
icebp
loopne,pn
add
in
push
sub
fsts
lahf
sbb
aam
scas
int3
decl
mov
jnp
roll
testb
in
mov
stos
jmp
outsl
stos
pop
jg
loop
clc
test
negb
add
iret
das
rcll
test
push
jno
mov
cmpsb
cmp
adc
and
into
cmp
push
ss
pop
pop
out
sbb
mov
inc
xchg
or
add
icebp
mov
inc
daa
insl
testl
cltd
pop
rcl
xor
movsb
pop
push
cmp
outsl
sub
movsb
int
cmc
add
inc
inc
and
pop
aad
test
adc
fcmovne
push
in
mov
xor
xchg
popa
pop
pop
stos
or
push
mov
mov
scas
stos
push
mov
neg
out
scas
mov
popf
ja
xchg
or
aaa
mov
in
aam
dec
in
std
hlt
loope
sbb
lahf
push
sbb
test
nop
aam
push
mov
push
rolb
add
push
sahf
jbe
xchg
xchg
pushf
add
cmpsl
jp
mov
hlt
jge
sti
adc
cmp
jo
dec
pop
sub
cli
inc
cmp
nop
mov
insb
inc
repz
lea
scas
or
xor
mov
fcom
cmp
mov
in
sbb
aam
rcl
push
mov
aam
jns
popf
and
cmp
push
lret
jle
push
ljmp
setg
jae
rorl
arpl
ret
mov
jle
mov
push
sub
xor
adc
outsb
mov
sbb
repnz
into
popf
adc
adc
cmpb
add
movsb
dec
inc
lret
jg
ret
jo
inc
sub
xor
or
imul
jl
sub
inc
out
test
fisubrl
mov
jno
fnstenv
push
cmp
mov
sbb
fs
sub
daa
jg
ss
movb
mov
push
sbb
cmp
lret
sbb
dec
jnp
repnz
mov
pop
out
shrl
out
stc
and
adc
and
sub
pop
mov
fistpll
das
sti
mov
in
lods
and
jb
into
pop
pop
mov
sbb
inc
out
mov
pop
pusha
sub
cmpsl
fstps
int
xor
shl
lea
jbe
ret
out
mov
push
lods
lret
nop
outsl
fcompl
hlt
sub
lock
nop
or
ja
out
push
dec
mov
xchg
or
test
mov
and
test
enter
adc
adc
inc
shlb
push
inc
fisttpll
mov
inc
mov
mov
rol
iret
data16
xchg
xchg
jg
loopne
scas
js
push
sub
mov
jnp
adc
jp
dec
xor
in
xlat
inc
jg
scas
in
call
adc
add
bound
and
dec
pusha
xchg
sbb
call
or
mov
adc
add
mov
dec
repz
or
pusha
sub
cld
test
dec
add
inc
push
enter
stos
iret
mov
jmp
cmp
out
decb
jae
rolb
dec
cmp
rorb
pop
xchg
ret
push
fisttpl
movsb
pop
iret
jecxz
imul
sub
inc
movsl
xlat
push
cltd
addr16
aas
cmp
ret
sub
hlt
and
in
mov
xor
ret
mov
sarb
pop
popa
je
inc
outsl
xchg
or
jle
ss
mov
cmp
insb
mov
jecxz
out
push
adc
push
xchg
in
loop
inc
add
cli
out
xchg
push
in
fidivs
stos
mov
dec
jmp
nop
mov
fists
xchg
adc
cmc
dec
inc
pop
pushf
rep
pop
stc
and
aam
aad
leave
push
xchg
jmp
xor
adc
mov
fdivr
pushf
mov
or
je
test
xor
adc
lahf
push
sub
enter
sbb
pop
dec
inc
inc
insl
jno
shl
hlt
mov
pop
adc
into
xchg
out
in
mov
push
sbb
xchg
mov
test
ljmp
mov
xchg
int
and
adc
out
xlat
pop
fsubr
insb
pushl
aam
popa
xchg
mov
xlat
lea
push
dec
cmc
push
or
popa
push
mov
xor
jle
xchg
jecxz
js
and
inc
cmpsl
cli
in
jo
xor
xor
mov
testl
stos
aam
xor
shlb
pop
push
inc
xlat
adc
xor
orb
mov
add
imul
push
ja
loope
lds
lods
out
fs
inc
cld
jl
mov
xchg
insb
sub
sahf
adc
nop
hlt
lret
xchg
aam
aaa
mov
scas
jae
cmp
shrl
push
adc
mov
test
sbb
cli
xor
outsl
insl
sarl
in
nop
xchg
add
xchg
add
into
fmul
scas
xlat
sbb
cmp
lods
mov
cmp
pop
call
fistpll
outsb
lcall
and
scas
sbb
test
cmp
negl
inc
in
cmpsl
add
pop
daa
fldl
adc
hlt
outsb
sahf
in
inc
ss
pop
repnz
jo
pop
icebp
nop
mov
outsb
cmpsl
out
sub
push
cmpb
adc
cmp
lds
cmpsl
xor
lcall
in
rcl
sbb
pushl
dec
int
push
icebp
sbb
out
and
push
jl
sub
or
mov
jno
mov
mov
leave
mov
push
lock
inc
mov
fwait
push
cld
mov
mov
jne
push
jnp
std
jae
push
cltd
sti
mov
clc
dec
hlt
bound
shlb
or
test
aas
out
lds
cld
mov
mov
adc
mov
not
push
cltd
popf
xchg
push
fimull
mov
push
sbb
adc
mov
mov
scas
je
jmp
jnp
mov
lret
and
mov
les
and
add
subl
mov
mov
mov
and
jae
in
orb
or
sub
testl
stc
repnz
sbb
fdivrl
mov
xlat
push
lahf
pop
das
mov
aaa
jbe
sub
push
sbb
jge
push
xor
cwtl
and
and
shl
mov
pop
cmpsl
insl
sub
stos
das
adc
decl
aaa
push
out
aas
into
insl
repz
subl
cmpsb
push
lcall
xchg
push
bound
lea
lret
push
push
mov
shr
jb
pop
ja
and
or
jb
loope
mov
sbb
xchg
outsb
movsl
in
mov
dec
cmp
fsubrl
cmp
in
sub
sbb
insb
xlat
fldcw
or
sub
sub
or
inc
mov
add
int
testl
add
sbb
gs
sub
and
imul
imul
mov
jp
cmp
push
or
cmpb
out
aam
or
xchg
mov
inc
popa
sbb
call
lock
and
xor
cmp
and
mov
hlt
push
insb
cmp
rsm
test
mov
outsl
mov
icebp
add
testb
sub
mov
or
ja
ljmp
cld
xchg
lods
or
xchg
out
jb
or
aas
or
mov
pop
divps
test
into
and
leave
int
cmp
icebp
xchg
xorb
movsl
adc
cmp
xchg
push
dec
std
pop
xchg
mov
stos
bound
cltd
xor
push
pusha
mov
mov
add
mov
fnsave
sar
lahf
pop
daa
or
and
stc
inc
movsl
and
xchg
jge
xor
ljmp
push
xlat
inc
xor
shr
fsubl
std
xchg
aaa
shl
imul
push
and
rcll
sub
or
addr16
fbstp
aam
aam
rcl
xchg
cmpsb
sbb
lea
or
pop
cmpsb
insl
cmpsb
pop
add
imul
lods
subb
test
pop
sub
mov
xor
cmpsw
sub
and
mov
aad
jle
pushf
push
sbb
mov
sub
jge
or
icebp
data16
fisubrs
pop
sub
lret
ss
pop
pushf
out
dec
lret
ljmp
stos
adc
imul
xchg
cmp
jl
jbe
movsb
or
sub
xor
loope
getsec
cli
pop
pop
pop
sub
gs
cmpsb
push
inc
or
mov
loopne
sbb
lods
out
mov
das
icebp
imul
dec
xchg
cmp
cltd
jno
mov
jnp
push
dec
std
lret
pushf
jp
mov
jbe
aas
iret
push
aad
xor
lods
mov
out
sub
in
inc
fldcw
mov
push
sbb
push
push
push
insb
push
sbb
stos
loope
xor
and
sbb
loope
loopne
pop
arpl
popa
xchg
out
or
mov
push
inc
dec
sbb
xlat
mov
pop
push
push
mov
or
adc
push
dec
scas
mov
aaa
xor
int3
xchg
cmpsl
add
mov
movsl
or
fdivs
inc
into
jecxz
bound
add
clc
adc
mov
aaa
stos
cmp
or
lea
dec
adc
xor
pop
outsl
das
test
clc
mov
add
cmp
jnp
mov
mov
lret
out
cltd
dec
push
cmpsl
mov
dec
jl
xor
leave
fstpl
xor
outsl
sub
stos
add
or
jae
enter
jo
mov
not
loop
out
shrb
inc
push
inc
add
imul
or
push
call
adc
imulb
sbb
dec
cli
adc
mov
xchg
push
fs
inc
jb
adc
push
sub
jbe
mov
or
sarl
or
mov
and
adc
jae
mov
xchg
or
insl
xor
fwait
sub
push
jmp
in
sbb
ret
test
adc
push
add
lods
out
mov
stos
dec
scas
arpl
sub
xor
push
fwait
push
cld
mov
xchg
or
fwait
loop
loopne
xor
inc
fildll
adc
loop
lods
jg
add
ret
das
xlat
aas
add
mov
rcll
sub
jno
loopne
pop
test
push
test
out
pusha
leave
pop
mov
mov
cmc
mov
rol
sbb
in
adc
shlb
xchg
sbb
xor
fdivr
inc
jne
jbe
inc
jo
test
cmp
es
test
ljmp
mov
ficoms
lahf
xor
sbb
cmp
push
cmp
push
cmpsb
les
in
sahf
mov
fdiv
add
fwait
rcrl
adc
mov
mov
pop
icebp
enter
cli
cltd
push
xor
outsl
movsb
cmp
inc
and
je
mov
dec
xor
mov
ret
pop
lds
lret
ret
mov
dec
cld
cli
sub
xlat
mov
or
subb
xlat
sub
and
cmp
dec
sahf
test
inc
cmc
out
sti
add
inc
fimull
add
gs
inc
fcomip
dec
mov
sbbl
dec
stos
push
fsts
cmp
test
jo
push
dec
add
jl
xchg
hlt
jg
icebp
xor
xor
add
pop
and
add
mov
arpl
ret
adc
lret
scas
adc
pop
movsl
add
scas
xor
pusha
add
loop
mov
push
leave
mov
mov
ficompl
insl
push
pop
xor
aaa
aad
lods
repnz
pusha
jnp
stc
sbbb
xchg
sub
push
push
mov
push
out
ss
lods
mov
jecxz
adc
jae
out
and
pop
add
test
jge
test
push
in
int3
adc
ds
sub
and
mov
cmp
pop
mov
mov
lahf
sbb
cmp
jl
push
pop
das
push
and
insl
loope
push
sub
ss
cli
test
popa
add
iret
test
mov
inc
xchg
loope
inc
and
addr16
jbe
outsl
cmp
pop
lret
lds
cld
outsb
gs
popf
in
iret
adc
rcrb
mov
pop
dec
sbb
popf
jno
fcoml
mov
mov
pop
ret
iret
lret
mov
mov
mov
cmp
out
xchg
xor
inc
jo
xchg
mov
push
mov
test
pop
inc
sub
and
push
faddl
lcall
sbb
cmp
cmp
add
jle
xchg
cmp
mov
jb
daa
or
lret
xchg
fs
int
fwait
roll
sbb
es
out
mov
mov
repnz
fmull
aad
fists
imul
or
pop
xchg
push
sub
adc
mov
jne
pop
pop
in
jle
cmp
xor
getsec
mov
loop
xchg
movsl
jne
aaa
xchg
or
aas
repnz
ss
or
enter
aad
dec
mov
cmp
icebp
lock
sbb
ja
cmp
jns
shl
xchg
push
adc
out
mov
ds
jno
xor
test
and
inc
neg
pop
cltd
pop
sbb
in
cmp
clc
rclb
js
pop
enter
std
push
aaa
out
cli
or
fwait
push
and
or
mov
fwait
or
lret
lret
div
in
pop
mov
sahf
cmp
mov
jge
or
mov
push
repz
clc
mov
jl
xlat
mov
add
pushf
pop
ficompl
or
pop
dec
movups
sub
sbb
fs
sbb
mov
setne
cwtl
xchg
cmp
xchg
or
rorb
jmp
adc
push
pop
or
inc
das
dec
fwait
push
std
in
stos
or
sahf
out
cwtl
iret
fsts
shl
xchg
iret
ret
and
xchg
ret
mov
clc
loop
jb
gs
cmp
pop
stos
in
test
dec
inc
mov
push
rol
push
adc
outsb
or
sub
sti
mov
sti
mov
mov
mov
sbb
in
cmp
push
xchg
sbb
fildl
sbbb
mov
jbe
add
pusha
cld
out
adc
icebp
and
subl
push
add
mov
stc
cmpsl
out
jecxz
scas
call
mov
mov
mov
sbbb
cli
mov
mov
pop
test
mov
enter
mov
jns
xchg
cmpsb
je
add
cld
jmp
push
lret
adc
adc
push
mov
pop
dec
jo
jno
mov
dec
pop
fstpl
in
pop
loopne
les
scas
sub
xor
ret
loope
jo
fsubs
jno
das
push
pop
dec
mov
jae
dec
inc
in
xchg
xchg
sbb
gs
mov
clc
adc
pop
pop
test
or
and
iret
xorl
pop
leave
pop
pop
mov
out
sub
mov
dec
and
fxch
xor
push
sbb
pop
pusha
cmpsl
out
jge
push
mov
sub
aam
xchg
pop
movsl
mov
js
cli
mov
mov
leave
cmp
ja
lcall
or
inc
mov
xchg
lock
data16
xchg
test
out
lds
xor
mov
pusha
fdiv
das
pop
sbb
jae
iret
pop
mov
loopne
push
xchg
mov
jp
addr16
inc
xor
push
pop
ret
pop
xchg
inc
jl
mov
test
nop
push
mov
pop
adc
inc
inc
daa
repz
lidtl
cmp
jb
hlt
cli
sbb
dec
popa
rcrl
data16
sub
lods
popf
jle
jp
push
sbb
mov
out
pop
outsb
movsl
subl
jne
xchg
xor
jno
or
movsb
add
add
push
filds
mov
popf
push
pop
xchg
fisttpl
adc
pop
fs
adc
and
mov
adc
icebp
fs
jp
inc
inc
cmp
mov
cld
ds
gs
iret
das
xor
mov
test
sbb
jmp
mov
fdivl
pusha
fcmovne
in
loope
push
sahf
mov
xor
test
push
stos
test
mov
push
sahf
ds
fdivrp
imulb
mov
inc
cmp
std
xlat
lahf
lds
mov
push
sub
nop
call
in
gs
ds
test
mov
or
mov
jl
daa
sbb
not
fiaddl
insb
repnz
cmc
mulb
stos
push
or
inc
pop
das
and
les
inc
sub
cmc
insl
dec
aad
rorb
rcrb
enter
pop
aad
pop
pop
scas
les
fidivl
adc
popa
addr16
adc
outsl
les
bound
jb
aad
cltd
popa
int3
iret
scas
xchg
and
mov
nop
subb
in
xor
mov
aam
ljmp
and
xor
add
add
lods
xchg
leave
pop
arpl
jo
stos
dec
sbb
cmp
stos
shrl
add
jecxz
sti
addl
xchg
pop
in
sbb
jmp
scas
mov
in
fisubs
dec
xor
loope
adc
mov
push
fcmove
mov
out
mov
into
jno
mov
test
arpl
xchg
aad
xor
pop
and
cmp
push
mov
and
and
movsl
push
mov
lods
push
inc
jp
sbb
lea
adc
pop
or
aas
outsl
mov
sbb
imul
xchg
ljmp
leave
cld
mov
dec
cmp
jmp
test
ret
jmp
lock
push
repnz
std
add
jo
inc
sub
cld
add
adc
pop
in
test
aaa
dec
inc
outsb
mov
mov
cwtl
test
cmp
inc
add
nop
invd
stos
jle
mov
mov
inc
out
dec
cwtl
dec
mov
jae
xchg
out
lods
out
inc
scas
fidivrl
dec
mov
pop
inc
test
outsb
dec
into
and
outsb
pop
jge
mov
dec
cltd
ja
adc
adc
fimuls
or
fwait
stos
inc
pop
inc
push
in
inc
imul
inc
ret
and
pop
pop
cmp
or
mov
jl
fisttpl
cmp
iret
or
cmp
jbe
bound
in
push
jle
enter
push
mov
stos
mov
inc
dec
int3
or
push
cmp
jnp
push
cmp
xlat
data16
inc
rorl
pop
daa
pop
mov
daa
push
lret
push
inc
add
and
lods
mov
dec
jne
xor
in
fwait
inc
add
in
xchg
xchg
mov
cmpsl
sarb
xchg
sub
mov
or
xchg
clc
test
push
push
fidivl
add
inc
pop
sbbl
jnp
inc
popa
mov
roll
dec
lret
sbb
adc
nop
jne
mov
repz
lahf
ljmp
hlt
hlt
mov
jmp
cmovge
loopne
rclb
xorl
rcl
cmp
xchg
scas
cmc
mov
cmp
int3
inc
lods
xchg
addr16
scas
cmp
jmp
push
mov
out
test
ret
jp
xor
int
mov
mov
mov
and
adc
cli
insl
dec
iret
add
mov
inc
jp
push
xor
lods
pop
jmp
hlt
jg
fdivrp
clc
pop
outsl
jae
push
rcrl
xchg
cmp
leave
ja
xor
in
enter
fiadds
sahf
add
ss
sarl
sub
push
xlat
mov
fidivs
mov
sbb
sbb
fstl
jns
pop
pusha
stos
cmp
es
clc
cmpsb
das
jmp
push
mov
mov
imul
cmpb
lods
jmp
adc
out
scas
cmp
pop
shl
pop
orl
fs
cmp
or
fstp
cmpsb
mov
scas
xlat
enter
lahf
add
test
push
fsubrl
sub
lods
sar
mov
push
fdiv
lock
popa
shr
loope
add
or
js
addr16
inc
jb
inc
jnp
inc
loop
cmp
imul
cmpl
ret
add
mov
lock
sbb
leave
sbb
xchg
fisubrl
dec
inc
insb
and
adc
dec
sub
cs
xchg
test
or
aam
repz
adc
leave
pop
cmp
fldenv
jae
push
sbb
sbb
psubw
add
xorl
fdivrs
dec
push
jb
ljmp
stc
stc
out
adc
mov
cmp
movsl
cmp
and
and
xor
loopne
jmp
adc
or
loope
dec
bound
mov
jle
dec
fsubrl
lods
mov
mov
xorl
insb
xchg
jecxz
in
loope
inc
dec
divps
loope
sbb
push
or
mov
xor
ret
hlt
mov
insb
pop
jne
push
xchg
mov
inc
pop
push
es
dec
sbb
xor
lahf
outsl
sbb
outsb
leave
mov
jbe
movsb
add
mov
dec
pop
pop
imul
jne
pushf
xchg
mov
stos
cmc
push
fldt
out
testb
sahf
ja
xor
rcrb
cwtl
aaa
dec
fwait
subb
pop
jae
mov
fistpl
inc
jg
adc
or
or
jae
mov
mov
daa
rclb
xchg
mov
push
faddp
push
mov
fadd
pop
sbb
js
jl
leave
xor
dec
push
push
test
xchg
mov
inc
or
mov
inc
pop
insl
xor
pop
jge
scas
std
and
adc
roll
mov
negl
clc
jg
mov
jae
aad
sbb
scas
mov
pushf
push
ret
daa
stos
shrl
insb
loope
xchg
aam
leave
daa
test
scas
push
aaa
loopne
jge
sub
in
cli
in
daa
cld
fstps
push
das
lods
push
in
pop
mov
sub
dec
mov
lea
arpl
sub
jne
sti
push
xchg
into
jle
inc
mov
stc
mov
iret
stc
movsb
add
sbb
and
jmp
mov
pop
and
or
and
cmpsb
jns
shrl
in
icebp
popf
xlat
pop
ror
cmp
leave
daa
push
div
adc
sub
add
loope
enter
leave
popa
xlat
pop
adc
mov
pushf
ret
das
lahf
jno
and
lahf
sub
out
pop
lret
stos
not
iret
pusha
mov
sub
adc
jp
arpl
ja
pop
mov
jb
push
adc
sbb
insl
add
jle
sub
into
cmpsl
gs
cmp
add
jmp
xor
mov
lret
mulps
hlt
rolb
loop
pop
adc
ja
rcll
orb
add
sub
lret
daa
int
inc
adc
inc
mov
push
imul
sahf
inc
popa
mov
mov
cmp
sub
and
nop
inc
adc
dec
out
adc
dec
push
mulb
in
cmpxchg
pushf
lods
sub
inc
mov
fdivs
daa
or
aas
mov
sti
cmpsb
ds
lea
sbb
inc
jb
jmp
jg
in
in
addr16
and
lret
add
lds
jmp
jle
xlat
ja
iret
stos
lret
out
adc
mov
inc
push
push
out
cld
in
adc
inc
outsb
call
cwtl
cmp
xor
aam
adc
push
in
bound
xchg
js
sbbb
mov
jb
add
mov
jb
jl
sub
mov
arpl
ss
cmp
sub
fsub
fidivrl
mov
push
in
pop
lock
cmp
xchg
lea
xor
mov
xor
movsl
adcl
test
inc
aaa
pop
push
mov
rcll
push
out
jmp
loop
sahf
adc
xor
mov
inc
pop
xchg
bound
pushf
dec
adc
repz
jmp
adc
addr16
dec
adc
data16
gs
jl
fs
xlat
push
pop
xchg
in
mov
aam
push
cmp
cli
and
fcoms
arpl
mov
inc
xchg
arpl
out
push
xchg
imul
outsl
pop
aam
lret
dec
cwtl
aam
fwait
mov
cmc
push
inc
stos
mov
add
ficomps
pop
adc
sbb
pop
xchg
jae
popa
inc
jge
enter
ljmp
mov
add
clc
sahf
push
iret
fwait
fwait
sbb
loop
fistpll
call
jns
dec
add
mov
aam
and
adc
insb
xor
stos
cmp
dec
jbe
or
push
lds
and
js
xor
inc
iret
mov
loope
scas
add
mov
pop
mov
jae
fsubrl
push
or
cmp
cmovb
in
xchg
add
dec
mov
add
imul
xchg
pop
call
fidivl
iret
bnd
rcpps
mov
add
nop
js
mov
dec
or
inc
add
lret
rcrl
adc
mov
ja
pop
nop
out
test
test
inc
mov
or
fdivl
mov
nop
add
addr16
into
std
dec
aam
inc
lret
push
dec
lcall
push
pop
inc
fadds
mov
mov
sbb
aad
in
mov
xor
sub
stc
or
pop
sbb
mov
push
push
test
bnd
out
test
pop
iret
mov
add
mov
push
sbb
daa
inc
data16
in
xchg
cld
lock
daa
test
stos
icebp
pop
adc
fstl
jmp
dec
mov
cltd
shl
shl
mov
out
jg
pop
std
sbb
shlb
jo
cmpsb
push
addb
or
fisubs
mov
sub
gs
push
cmp
jns
mov
xchg
scas
push
inc
adc
mov
mov
add
xchg
js
shrb
pop
mov
and
xchg
inc
mov
lret
add
add
mov
xchg
mov
mov
adcl
and
mov
dec
shlb
call
sti
cmc
dec
outsb
mov
or
outsb
pop
or
dec
mov
mov
out
sub
sti
mov
imul
mov
mov
addr16
out
xor
push
dec
mov
jno
lea
or
enter
out
mov
mov
popa
stc
das
mov
es
pop
xchg
fldcw
mov
cmp
ljmp
mov
xchg
pop
outsl
xor
ds
and
sub
cmpsb
int3
pop
popl
xchg
push
sub
or
ret
testl
cltd
mov
and
mov
dec
mov
lahf
icebp
call
icebp
add
out
mov
es
mov
outsl
and
loopw
mov
call
imul
pop
ret
mov
and
stos
je
mov
push
pop
mov
or
cmp
cltd
mov
jp
lds
jl
xchg
sahf
mov
js
aad
push
popa
cmp
push
mul
mov
adc
frstor
loopne
and
jae
insb
ja
push
or
pop
dec
push
inc
mov
testl
loop
test
fcoml
or
xchg
mov
mov
and
sahf
fwait
dec
popa
cltd
nop
ret
dec
fs
push
sub
fnstenv
ss
cmp
aas
jp
xchg
popf
ljmp
orl
repz
adc
inc
fists
mov
and
or
adc
movsl
jmp
leave
jne
xchg
mov
push
cli
pop
xchg
cs
dec
or
jnp
push
xor
cmp
fiadds
lods
int3
sub
je
repnz
test
ja
outsl
sti
mov
mov
add
dec
mov
test
insb
ret
je
mov
aas
sbb
pop
loopne
lock
test
sub
add
repz
popa
xchg
arpl
sub
inc
in
mov
push
popf
mov
add
fs
inc
cmc
cmp
out
adc
sub
jb
mov
mov
aad
test
loopne
adc
push
inc
pop
into
cwtl
jo
push
or
popf
push
call
je
inc
dec
cmpsl
dec
call
add
sub
jns
and
xor
fdivr
push
fdivrp
arpl
add
pop
and
shr
xor
ret
or
jae
fnstenv
test
addr16
js
dec
out
cli
scas
mov
jbe
ret
cmpl
add
inc
mov
mov
jns
adc
and
ja
jnp
xchg
ljmp
repnz
mov
gs
xchg
cmpsb
adc
inc
stos
lock
sar
std
pop
mov
in
and
cmp
cmc
pop
xor
dec
inc
stos
jge
in
pop
popa
jecxz
lods
fcomps
sub
mov
stos
divl
out
test
sbb
jge
cli
sbb
sub
das
fucomp
cltd
repz
or
imul
xchg
cmp
xchg
icebp
orl
xor
sbb
movsb
add
inc
aas
xchg
mov
rorl
sbb
fisubrs
mov
cld
jnp
xchg
add
lds
or
lea
push
pop
iret
pop
ljmp
les
push
cmc
jp
pushf
loope
mov
je
movsl
cmc
xchg
fldz
xlat
or
movsb
ja
js
add
rorb
inc
pushf
outsb
mov
test
ljmp
mov
jecxz
insb
loope
nop
in
loopne
insl
pop
roll
dec
test
and
mov
popa
insb
inc
or
movsb
push
leave
in
sti
loop
mov
cmp
adc
sub
mov
mov
mov
cltd
inc
push
test
rcl
sub
arpl
xor
cltd
mov
xchg
jnp
cmp
jmp
mov
and
stc
and
les
es
mov
arpl
inc
push
and
repz
shrl
mov
xor
iret
iret
xorb
aas
out
mov
mov
pop
int3
aam
flds
dec
mov
mov
or
icebp
mov
out
add
add
sbb
bound
cld
fistps
adc
dec
inc
jmp
cmp
xchg
push
or
adc
xchg
adc
sbb
stos
mov
push
sbb
leave
aaa
mov
or
movsb
push
pop
jle
les
mov
mov
mov
pop
or
or
pop
add
imul
push
ja
lea
xor
add
inc
lret
daa
push
jmp
mov
fiadds
scas
lock
inc
scas
cli
jge
jmp
jmp
adc
or
push
ficoml
repnz
pop
inc
out
aam
enter
fldl
mov
sub
push
or
adc
jno
push
negl
xchg
or
xor
subl
xor
rorl
imul
inc
adc
mov
jl
add
fisttpl
mov
les
insl
and
pop
movsb
sub
aam
insl
and
push
dec
push
int
lea
mov
add
pop
sbb
repz
mov
push
mov
adc
dec
fidivl
repz
adc
mov
cmp
jp
xchg
mov
leave
fimull
add
cmp
inc
dec
aaa
or
rcrb
and
cmpb
rorl
sub
jmp
pop
pop
clc
sub
xorl
fcoml
push
cmpb
and
faddl
inc
sahf
enter
add
das
pop
scas
mov
lret
jbe
test
add
les
sub
stos
in
addl
hlt
gs
jns
mov
dec
loope
icebp
sbb
pop
mov
mov
add
in
or
xorl
mov
mov
in
andb
shll
insl
in
inc
and
repz
dec
mov
fdivrs
mov
and
jge
cmp
cmpsb
sete
mov
shll
outsb
mov
aad
dec
das
daa
push
movsl
inc
test
add
xchg
or
xor
shll
or
fimuls
adc
imul
or
mov
add
pop
cmp
cli
nop
leave
push
movsb
jge
pop
xchg
cmpsl
cltd
pop
mov
inc
or
loop
aad
ss
int
leave
pop
adc
insb
xor
lahf
add
aad
aad
mov
jnp
jge
push
sbb
cmp
mov
inc
pop
aas
push
xor
aaa
js
pop
push
pop
sub
push
fdivrl
pop
add
aaa
inc
sbb
daa
cmp
dec
das
popf
out
mov
fstl
idivb
inc
clc
jle
in
xchg
clc
sub
hlt
pop
add
mov
jb
mov
mov
push
js
cmpsb
add
or
fs
push
pop
push
fmul
jecxz
icebp
xor
mov
mov
jnp
dec
shr
clc
pop
pop
adc
imul
sbb
push
flds
outsb
call
add
or
ljmp
xchg
adc
mov
sub
movsb
adc
std
push
pushf
xchg
sbbb
xchg
loop
adc
stc
inc
pop
out
insb
imulb
inc
dec
scas
or
push
push
mov
and
insl
mov
enter
mov
dec
out
fwait
cltd
out
sub
call
aad
adc
dec
sub
test
xor
or
mov
fsubrs
repnz
push
push
dec
or
ljmp
adc
pop
inc
jnp
sahf
jp
jo
dec
movsl
push
clts
add
js
pop
call
push
xor
cmc
cli
pop
mov
addr16
rorl
jo
dec
mov
and
mov
das
aad
lea
pop
adc
mov
leave
outsb
stos
pop
aam
jp
sbb
mov
sbb
pop
mov
pop
adc
push
inc
sbb
testl
mov
adc
lcall
loop
mov
mov
ret
stc
out
xchg
mov
or
jo
iret
dec
or
dec
arpl
stos
mov
push
cmp
ret
and
cmp
fisubl
jns
push
test
ss
jmp
pop
inc
mov
add
push
and
and
scas
adc
adc
ffree
mov
xor
test
outsb
mov
push
adc
arpl
cmp
stos
dec
xlat
gs
jno
imul
jle
adc
add
mov
sar
lret
inc
xor
sub
dec
jle
int
jns
xlat
add
push
repnz
lret
insl
cltd
jl
sub
cltd
shlb
pop
lcall
pop
lods
popa
jnp
lret
adc
ja
or
fwait
xchg
test
imul
xlat
cmp
es
jg
xchg
sbb
insb
jne
mov
loope
je
push
loope
popf
test
xchg
pop
flds
loopne
push
dec
dec
dec
test
pop
adc
adc
imul
xlat
test
outsl
shll
aaa
jne
das
cmc
sbb
mov
sub
daa
lret
mov
jmp
das
stc
imul
gs
std
mov
ds
jno
push
or
jp
pop
in
hlt
or
repnz
stos
pop
out
cs
mov
std
bound
fcom
fdivs
ljmp
into
xchg
push
daa
mov
sub
out
or
aas
xchg
adc
push
mov
adc
sub
push
pop
lea
add
xchg
std
lock
xor
test
inc
repz
mov
jp
mov
dec
xchg
cmp
inc
enter
stc
mov
mov
or
outsb
adc
adc
outsl
and
ljmp
xchg
in
outsl
inc
mov
imul
mov
inc
mov
fmull
test
sbb
aad
mov
sub
cmp
rcl
mov
sbb
cmp
loope
outsl
add
popf
xor
stos
cmp
sbb
cli
mov
pop
xchg
lea
sub
repz
lret
pushf
mov
push
int3
lds
popf
sub
add
loope
fsubrp
sbb
jecxz
lret
shrl
or
inc
movsl
scas
push
mov
mov
inc
xchg
rcr
pop
jg
sbb
xor
mov
jg
inc
out
and
cmp
ret
jecxz
andl
add
sti
push
jb
mov
rcrl
and
out
push
and
in
test
cmpsb
jg
scas
inc
pop
cltd
nop
or
and
aaa
std
mov
jl
arpl
sbb
out
divb
push
leave
lahf
cmp
xor
ds
pop
mov
ffreep
icebp
xchg
clc
rcr
cltd
push
repz
loopne
cmpsb
pop
sub
xor
ljmp
dec
into
stos
imul
shlb
shr
add
scas
test
dec
loopw
rdtsc
outsb
pop
out
mov
jl
loopne
inc
mov
mov
xchg
adc
inc
add
hlt
mov
adcl
in
cmp
jns
inc
push
dec
pop
out
pop
jmp
push
dec
xchg
push
ja
mov
mov
push
shlb
push
jb
sbb
xchg
add
add
xchg
cld
lret
icebp
stos
mov
lret
sahf
sub
loopne
xchg
mov
inc
imulb
std
lea
push
mov
or
mov
xor
cwtl
push
cmpsb
jmp
push
mov
xor
dec
ljmp
mov
and
push
lock
mov
and
adc
push
es
adc
sub
add
adc
data16
into
pop
mov
cmpsl
dec
lock
mov
dec
push
inc
sbb
mov
out
popa
dec
jae
sub
xchg
clc
call
pushf
ljmp
xor
fisubrs
cmp
and
cltd
loope
dec
daa
fwait
jmp
add
es
adc
cwtl
sbb
push
add
pushf
xchg
gs
leave
enter
pop
dec
jns
std
testl
fistpll
inc
inc
cmp
pop
mov
call
test
sub
ljmp
sbb
aad
pop
sbb
je
addl
rorb
in
jb
lcall
mov
inc
ret
mov
mov
lahf
xor
aaa
pop
mov
mov
adc
xchg
mov
daa
push
dec
xorl
int
nop
mov
inc
psllw
mov
cli
jg
adc
loope
outsl
into
dec
mov
jne
cmc
mov
mov
push
and
decb
sub
je
stos
dec
pusha
push
sbb
cmp
outsl
xor
in
es
or
jae
hlt
pop
xor
arpl
jnp
add
cmp
testb
and
aaa
imul
add
aas
sub
dec
popf
mov
out
adc
mov
push
or
fsubrs
std
mov
xchg
adc
mov
scas
insl
inc
and
and
add
sub
outsl
ja
jns
pop
cmp
scas
shlb
hlt
and
int3
int3
mov
and
fucomp
std
mov
push
mov
orb
hlt
insl
inc
or
cmp
dec
cmpsb
mov
mov
stos
adc
je
imul
xor
lods
ja
fisubs
fwait
wrmsr
sahf
dec
mov
mov
jle
sub
xor
aad
sbb
jmp
lret
add
dec
cs
mov
pusha
cli
stos
inc
sbb
dec
pushf
or
cmpsb
sub
bound
mov
cmp
mov
popf
xchg
xchg
mov
push
push
dec
or
jecxz
or
xchg
push
in
pop
dec
lods
push
jno
idivl
ret
or
jl
loopne
sbb
xchg
xor
iret
sub
std
outsb
or
jbe
and
mov
push
dec
cld
pop
lcall
ds
sub
in
insl
sbb
lods
inc
popf
stc
std
xchg
sub
scas
shrb
loope
pop
imul
mov
jo
mov
sbb
ret
mov
and
push
push
mov
or
enter
and
sar
jns
jae
push
ja,pt
add
fistl
sahf
mov
mov
sub
push
rolb
int3
jns
add
mov
add
sti
add
scas
cwtl
fcmovnu
push
jne
xchg
cmpsb
dec
lea
jg
movsl
jg
sub
movsb
stos
or
xor
fildl
test
mov
das
sbb
pop
push
cmp
cmpsb
xchg
rcl
daa
rcrb
or
outsb
or
insl
adc
lods
repnz
sbb
insl
and
movsb
add
mov
mov
mov
jo
fcompl
or
rcll
inc
fcmovb
xchg
and
xchg
add
pop
lods
enter
xor
lea
fcomps
add
inc
lock
cmp
or
imul
dec
xor
aad
mov
ja
mov
pop
iret
mov
aaa
push
dec
cmp
addl
jge
cmp
repnz
cmp
scas
mov
push
push
sbb
jne
mov
push
or
lea
stos
sbb
xchg
in
gs
fnstenv
lea
mov
xchg
ds
stc
and
iret
incl
cmc
cmp
sub
shlb
in
testb
scas
add
cmp
shr
fsubs
aas
xchg
int
imul
or
shrb
test
sub
cmp
cmp
inc
pop
scas
push
add
dec
mov
insb
clc
adc
loop
xor
add
xchg
test
jecxz
jae
aam
add
in
mov
fwait
into
loopne
sub
cmpsl
xchg
and
out
lods
inc
and
cmp
in
adc
jp
add
in
std
call
bound
sub
icebp
shlb
scas
jecxz
inc
push
push
adc
pop
mov
jbe
sbb
pop
sbbb
sar
icebp
mov
jns
shll
shr
sar
push
sbb
stos
and
aaa
test
cmpsb
cltd
lds
mov
adc
or
rcrl
jmp
mov
xchg
ficomps
adc
bound
fwait
dec
sbb
add
mov
in
jno
xchg
lret
jmp
ljmp
mov
xor
lcall
add
shlb
cmpsl
cwtl
cltd
ljmp
call
mov
xchg
xchg
inc
pop
xor
mov
sbb
mov
lret
lds
push
pushf
shll
mov
bound
mov
iret
in
scas
enter
mov
pop
mov
fimull
out
jge
adc
imul
mov
icebp
jns
cld
lea
add
mov
xchg
pop
stos
pop
xchg
in
aaa
mov
lds
jae
inc
push
mov
inc
mov
adc
lea
jnp
pop
mov
push
cmpsl
xchg
cmp
xlat
hlt
in
jge
pusha
push
sub
int
xor
xchg
jno
lods
push
push
psrlw
pop
mov
lods
ret
push
jmp
in
sahf
test
cmp
jb
cmp
or
xchg
inc
es
or
dec
dec
jb
mov
lret
push
negl
ljmp
sti
push
test
je
mov
insl
jnp
mov
pop
sub
lcall
adc
push
sub
add
lahf
imul
dec
lret
cmp
iret
orb
stc
out
xor
pop
pop
vmread
ljmp
inc
mov
jb
ficoml
flds
test
sbb
cli
mov
test
loop
mulb
and
jl
adc
stos
imul
jmp
and
or
lock
and
test
cmp
xchg
or
pop
and
in
test
scas
and
mov
cmpsb
enter
scas
mov
push
inc
mov
mov
pop
shrl
shll
enter
int3
mov
iret
mov
inc
lods
fidivl
fisubrs
push
fsubp
lret
and
in
rolb
int3
and
mov
adc
or
fistps
cwtl
push
pop
ds
mov
scas
mov
push
inc
mov
test
xlat
pop
cmp
mov
mov
ret
lods
mov
or
idivl
hlt
mov
xor
mov
mov
dec
in
insb
loop
push
cmp
pop
adc
sar
fcmovnb
xor
lret
movsb
mov
fsubs
sub
or
ds
clc
dec
mov
imul
stos
push
bound
js
jle
mov
mov
jne
lock
cmp
scas
test
fwait
push
ror
and
mov
idivl
pop
fxtract
mov
jecxz
sti
lods
daa
je
adc
fbstp
inc
mov
int3
out
lods
cmpsl
push
rorl
pushf
out
clc
add
shl
add
test
jmp
sbb
inc
sahf
icebp
and
dec
mov
jge
fnstenv
mov
pop
lock
xchg
loopne
sub
aam
daa
push
and
cmp
jle
adc
add
cld
mov
rolb
push
cmp
sbb
cmpsb
sub
in
jmp
aam
sub
hlt
mov
subl
cmp
jno
fdivs
pop
push
cltd
out
pop
leave
adc
mov
lahf
add
lock
fildll
loop,pn
les
aam
faddp
daa
insl
push
scas
sti
std
sub
fisubrl
dec
cmp
mov
mov
in
jl
jne
mov
into
pop
outsb
xor
mov
xor
push
dec
imul
cltd
mov
xor
sub
and
and
out
xor
lret
and
insb
jbe
jmp
or
sub
sbb
cmp
lods
push
sbb
scas
test
cmc
adc
or
pop
or
pop
sbb
clc
in
ljmp
ds
xor
pop
pop
jae
or
gs
inc
jns
call
mov
xchg
adc
push
cmpb
in
sub
nop
data16
dec
or
sbb
jno
add
mov
xor
dec
fstpt
add
push
mov
push
push
and
dec
popf
popa
cmpsl
frstor
sub
add
or
insb
xor
outsl
loopne
testl
add
test
xchg
clc
movsb
in
repz
pop
dec
jecxz
mov
inc
test
inc
pop
stc
lret
dec
pop
fsubrs
mov
xchg
jno
roll
mov
dec
dec
loopne
aas
inc
xor
mov
inc
and
je
inc
adc
cmp
aad
xchg
aaa
mov
adc
jmp
stc
test
ja
int
jl
addr16
sbb
es
aaa
pop
fsubs
add
fists
sub
adc
sub
jo
and
jge
inc
dec
pcmpeqd
jmp
cmp
jns
xchg
fwait
inc
add
pop
push
out
in
sbb
push
popf
pop
xchg
mov
mov
fcoms
out
mov
mov
mov
adc
fs
lods
nop
xchg
sahf
pop
icebp
loope
jb
decb
inc
add
inc
adc
mov
cmc
lahf
inc
pop
mov
lret
lret
outsb
jns
sbb
cmp
jmp
sub
std
rcl
xchg
dec
push
inc
lret
scas
jnp
jb
hlt
out
movsb
or
enter
mov
mov
lret
sahf
mov
scas
and
pop
xor
movsb
mov
dec
mov
mov
jbe
in
int3
pop
stc
das
push
insl
jl
out
mov
sub
cs
fs
dec
test
jb
bnd
lcall
out
daa
addr16
aaa
push
dec
sbb
inc
test
jne
out
in
pop
je
mov
add
scas
cmp
mov
mov
cli
and
sarl
movsl
js
xor
jmp
popf
add
pop
jmp
scas
or
sbb
and
push
jecxz
imul
repnz
mov
arpl
jo
test
jbe
xor
adcl
adc
adc
mov
fbstp
cmc
hlt
mov
jle
push
push
fisubrl
dec
push
into
dec
xlat
cwtl
sbb
arpl
cmpsl
dec
stc
push
imul
fists
sub
cmpsl
and
inc
fsubl
push
shr
icebp
cmpsl
sub
add
outsl
fisttps
xor
pop
or
xor
mov
insl
or
pop
mov
scas
negb
mov
sub
jg
dec
ror
in
rcrb
adc
push
mov
sbb
loope
es
inc
jno
pop
movsl
pop
sub
mov
mov
stos
ja
arpl
mov
push
jno
pop
testl
cmp
cmp
mov
popa
fiadds
shl
lods
shl
iret
ds
jp
aad
push
and
roll
dec
mov
or
fwait
push
out
sahf
pop
mov
mov
shrl
ret
jmp
xor
inc
jb
pop
out
dec
pop
iret
and
or
and
int3
dec
popf
or
mov
cmpsl
dec
mov
mov
pop
jge
loope
push
pop
mov
mov
sub
pop
jo
and
sarl
push
shll
push
jmp
push
jbe
push
shll
int
adc
cmc
xchg
lcall
scas
imul
xchg
sbb
add
pushf
flds
pop
jle
jl
das
pop
lret
pop
test
lock
dec
test
fmull
shl
push
xchg
dec
sti
cmpb
push
inc
rolb
mov
push
out
nop
hlt
push
pop
out
pop
and
aas
mov
fcoml
hlt
sbb
daa
adc
fmuls
sbbl
mov
shrl
lods
xchg
pop
dec
stos
or
inc
stos
movb
outsb
orl
sti
insb
jl
rcrl
popf
bound
dec
dec
pop
add
pop
popf
jno
dec
hlt
adc
mov
addr16
outsb
xor
jne
xor
leave
rclb
nop
xchg
sub
mov
int
in
lods
pushf
cld
aaa
popf
pop
or
pop
mov
lea
in
sete
int3
popa
shrb
rorb
lahf
sub
push
test
dec
decb
icebp
sub
aam
ficomps
les
stos
andl
cmp
clc
cmp
in
mov
cmp
sub
testl
inc
xchg
rorb
pusha
mov
mov
adcl
jbe
sub
sti
inc
andb
cli
shrl
sub
mov
fnsave
es
cmp
test
aas
jae
fsubs
mov
nop
data16
push
push
lahf
rcrb
or
mov
lds
ret
test
jmp
mov
cmp
or
xlat
adc
dec
mov
callw
and
and
adc
sbb
leave
lret
jmp
sub
scas
jecxz
mov
or
cs
imul
and
ss
adc
adc
inc
xchg
and
dec
xor
in
or
out
push
add
gs
push
inc
mov
add
insb
sbb
loopne
fistl
mov
mov
fistps
cmp
lea
lahf
sbb
jno
mov
lods
xor
rcrl
mov
outsb
sub
lods
push
mov
in
sahf
xor
insl
and
jne
push
cmc
pop
aad
adc
stos
out
or
test
cmp
jne
add
jp
jb
sub
lret
lcall
jo
xchg
mov
and
rep
mov
lock
subl
mov
rorb
push
xchg
popf
aas
or
pop
loope
dec
leave
xor
out
xchg
jl
mov
js
loopne
loopne
out
add
add
pop
fs
add
mov
js
push
xchg
sub
mov
push
sti
lock
add
push
fistl
lahf
and
xor
pop
outsl
mov
mov
lea
mov
leave
divb
push
jg
dec
sub
jmp
mov
push
ret
jmp
pop
jns
loopne
dec
push
ja
xor
scas
jge
aam
or
jle
jge
out
xor
in
lret
mov
pop
pop
cmc
rorb
sub
loope
inc
cmp
rorl
push
sbb
add
testb
adc
jne
pop
adc
add
mov
mov
gs
imul
imul
pop
sub
lcall
pushf
mov
inc
xchg
scas
pop
movsb
xchg
xchg
mov
sbb
sbb
sub
pop
filds
and
repnz
dec
loop
fbld
rcrl
xchg
stc
inc
gs
movsb
and
imul
cmp
jle
pop
insb
jae
pop
fiadds
insb
pop
add
add
je
testb
push
and
out
or
xchg
inc
sbb
xlat
gs
add
and
arpl
jb
scas
mov
pushf
and
push
in
sbb
mov
dec
int3
xor
push
mov
or
xchg
mov
adc
psubq
les
fldt
fbstp
xchg
fdivrs
mov
sbb
lods
jge
jne
ja
jns
test
push
inc
xchg
sahf
pop
pop
xchg
sbbl
jecxz
mov
add
cwtl
xor
push
sub
mov
inc
xor
mov
clc
xchg
jno
ljmp
xchg
fcmovnu
pop
lret
dec
nop
mov
jb
jno
or
sbb
cmp
rol
fistl
mov
testb
cmp
xchg
int3
mov
in
mov
rol
loope
fsubrl
andb
jo
jp
shl
popf
xor
xor
cmp
out
int3
js
jge
lret
fidivs
sbb
jo
loopne
jo
mov
pusha
jl
test
test
xchg
adc
sbb
dec
addr16
repz
lcall
inc
aaa
inc
or
sbb
data16
inc
cli
sbb
rcll
ja
xchg
xchg
push
dec
jle
inc
mov
xlat
insb
sbb
insl
sub
scas
cmp
xlat
ffreep
jecxz
add
fstps
imul
or
dec
imul
and
pop
movsb
shl
out
ret
push
pop
mov
icebp
pop
cmp
jns
jne
jmp
loop
mov
jecxz
mov
popf
lret
mov
dec
lds
movsl
ficomps
mov
jnp
inc
push
stos
lods
xor
mov
test
cmp
xor
cmp
addl
jnp
inc
pop
test
out
jno
xchg
ljmp
add
loopne
stc
mov
aam
and
dec
adc
outsl
icebp
ds
dec
movl
dec
mov
rclb
icebp
dec
xchg
and
mov
shlb
dec
shr
push
jne
or
xlat
and
imul
or
pop
mov
ja
cmp
dec
icebp
push
pop
and
and
xchg
fsubrl
mov
movsb
aaa
pop
push
test
clc
jg
inc
add
mov
mov
push
add
add
jge
mov
addr16
cli
mov
mov
inc
ss
mov
fidivrl
out
and
je
xor
sbb
in
mov
xchg
leave
iret
xchg
mov
dec
dec
or
xor
cmc
cmp
cmp
cmpsb
enter
pop
imul
xor
int3
sub
lcall
fisttps
jmp
mov
mov
lea
sub
es
outsl
jl
ret
out
pop
sahf
ss
clc
cmpsb
push
aad
mov
xor
cmp
es
jp
scas
idivb
jne
add
sbb
in
das
je
jg
je
scas
notl
outsl
jg
xor
stos
les
and
mov
xchg
jp
pop
mov
cld
fstpl
jp
aam
fbstp
cmp
je
jmp
daa
inc
and
iret
scas
repz
xlat
inc
xchg
data16
loopne
mov
loopne
out
out
cmp
push
xor
jmp
loop
aas
mov
and
add
mov
xchg
sarb
mov
or
inc
cwtl
cmp
or
xor
lahf
dec
add
mov
jge
push
add
dec
test
sahf
add
push
mov
mov
arpl
hlt
mov
inc
test
push
sub
je
mov
test
and
sub
cmpsb
arpl
js
push
push
add
scas
jp
sbb
test
lcall
and
in
ja
push
xchg
or
fcmovnbe
mov
dec
shl
inc
jbe
jns
xchg
cmp
jnp
test
xchg
test
push
xorb
nop
aas
xor
outsb
and
mov
adc
xchg
repz
popa
mov
lret
push
adc
js
push
sub
iret
outsl
add
adc
push
xchg
mov
movsb
xchg
pop
mov
xchg
icebp
mov
lcall
add
cld
push
dec
shlb
dec
jb
lahf
lds
sub
push
jle
fs
rcl
add
les
outsb
pop
adc
dec
inc
lret
pusha
sub
xor
sbb
mov
and
mov
push
out
push
push
adc
repz
mov
jge
loop
sti
add
cmp
sub
sbbb
das
dec
loopne
loop
iret
rep
jg
mov
cltd
repz
jns
push
adc
dec
jo
andl
vcvtps2dq
push
outsl
rorb
and
push
push
mov
iret
ds
cwtl
xchg
mov
cld
xor
aas
test
xorl
sbb
cmp
mov
ss
sbbb
test
xchg
xor
and
inc
jne
push
mov
mov
mov
mov
push
xor
in
lcall
mov
sub
pop
mov
cmc
test
inc
adc
jle
lahf
pop
xor
ficoml
das
jecxz
sbb
add
mov
xor
lret
test
clc
fwait
test
xchg
aad
sahf
mov
cmp
inc
imulb
pop
loope
fsubp
ss
cmc
inc
dec
iret
xchg
cmp
sarb
fcoms
pusha
pop
jmp
sbb
pop
popf
push
imul
push
sarl
xchg
inc
or
pop
dec
cwtl
daa
inc
mov
mov
xor
adc
add
cmc
mulb
cmp
sbb
mov
sub
das
jb
jne
jae
rorb
mov
add
pop
sbb
inc
je
dec
fimull
cmp
mov
xor
pop
adc
in
and
fxch
push
lods
push
xchg
mov
dec
ja
fisubs
fildl
inc
dec
pusha
xor
in
iret
repz
add
and
dec
add
pop
shl
mov
push
push
mov
lcall
movsl
xor
and
jbe
subb
cmp
fsubrl
mov
xchg
dec
stc
xchg
add
test
cmpsl
dec
and
loope
cwtl
sbb
pop
dec
ja
data16
mov
and
xchg
stc
ds
cli
pop
mov
xlat
bound
jnp
sub
adc
outsl
sbbb
pusha
rorl
jne
jns
inc
pop
shlb
and
add
jmp
jo
loope
or
cmp
lret
inc
push
mov
mov
xchg
xor
pop
rcrb
mov
hlt
sub
xor
dec
stc
pusha
mov
jae
mov
jle
negl
lods
sbb
mov
mov
test
shrb
movsb
sub
pop
dec
jno
sbb
push
shlb
xchg
scas
mov
xchg
jmp
pusha
outsl
and
cli
inc
mov
inc
adc
int3
dec
lcall
mov
sub
sbb
nop
nop
jb
sbb
pop
dec
pop
inc
mov
xor
mov
js
mov
sub
jp
mov
jnp
dec
es
mov
fidivl
gs
sbbb
xchg
cltd
xchg
jge
pop
ret
jnp
cmc
add
test
insl
addr16
pop
int3
xchg
jge
inc
xor
loope
rorl
fs
das
jns
ror
lahf
sub
aaa
sbb
jmp
or
ss
mov
cmp
scas
daa
test
lret
sbb
lods
enter
mov
or
test
mov
lahf
sbb
shlb
or
push
out
lock
pop
negb
cmp
and
lds
and
jb
push
sub
xor
add
xchg
and
insl
jae
sub
mov
fidivs
seta
imull
push
int
andb
and
add
add
dec
push
push
and
pushf
sub
adc
repnz
lcall
jne
sahf
fildl
addb
pop
les
add
pop
cmp
add
xor
cmpsl
xchg
mov
das
fidivl
xor
adc
sub
adc
sarb
sbb
int3
lret
rcr
or
mov
xor
dec
mov
pop
or
out
cwtl
push
arpl
addr16
mov
test
inc
mov
jle
fbstp
insb
sub
dec
or
add
or
fnop
lock
sahf
mov
bnd
xor
dec
in
lahf
jg
or
mov
sarb
xor
mov
repnz
ret
insb
insl
jae
stos
jle
adc
cmc
or
nop
cmp
icebp
and
roll
cmpsb
ds
mov
xchg
xchg
or
inc
ret
es
xchg
data16
addl
pop
cmc
in
pop
cltd
xchg
add
lret
add
test
push
mov
test
push
mov
sbb
in
pop
and
pushw
sbb
imul
nop
popa
nop
add
inc
mov
xor
inc
sub
lcall
pop
leave
rcrl
jge
xor
xor
cmc
leave
fadd
mov
fnsave
fwait
adc
loop
mov
sub
test
mulb
leave
ds
xchg
mov
mov
mov
sbb
cwtl
pusha
pusha
xor
xchg
negl
or
ja
xchg
pop
call
lock
cmp
idivb
jb
movsl
dec
js
push
add
rorl
dec
pop
mov
xlat
sbb
imul
repz
or
aaa
out
repz
and
push
xlat
sub
lds
stos
fisubrs
and
jae
inc
lret
in
mov
stos
push
xchg
mov
into
mov
inc
into
mov
loop
mov
inc
push
sub
clc
and
xchg
mov
mov
fildll
adcb
dec
push
lods
aam
sti
xchg
jne
push
fidivl
sahf
and
xchg
je
pop
testl
jmp
mov
outsl
pop
out
pop
je
fwait
inc
pop
cwtl
mov
lods
pop
js
sbb
lods
mov
leave
test
stos
stos
movsl
inc
out
outsl
jl
mov
pop
xchg
adc
xchg
mov
xor
flds
sbb
add
int3
cmpsb
add
xor
insl
movsl
out
mov
add
adc
bound
out
testl
push
dec
inc
inc
lods
jne
pop
pop
int
xchg
fsub
mov
lds
sbb
mov
cmpsl
sbb
inc
ljmp
lock
jp
add
xor
jg
out
mov
cmp
or
inc
dec
out
repnz
fisttpl
ret
loop
xchg
outsl
int
cli
pop
in
add
imull
ljmp
insl
xor
pop
mov
push
cltd
clc
jl
mov
mov
ror
leave
pop
loopne
push
mov
fnsave
jle
pusha
mov
lahf
xchg
mov
pusha
icebp
pop
inc
jno
and
dec
adc
ret
xchg
mov
loope
or
or
sbb
dec
cmp
sub
cs
or
cmpsl
fstpt
out
xor
xor
cmc
inc
shr
cmc
mov
jo
hlt
aam
mov
and
addl
pop
arpl
enter
aad
push
rorb
shll
push
push
pslld
mov
adcl
dec
inc
js
pop
loopne
js
popa
and
insb
cwtl
push
push
pusha
out
xchg
lss
cli
inc
and
scas
dec
stc
dec
jne
sahf
std
inc
sub
pop
mov
or
mov
lcall
movb
inc
add
sbb
push
fidivrs
pushf
push
push
std
sub
push
push
ret
sub
js
repnz
out
jl
out
dec
jmp
inc
mov
leave
inc
sbbb
aad
adc
push
push
and
rcrl
cld
mov
repz
sub
in
lcall
xor
fs
cmc
aam
popa
or
int3
pop
movsl
jecxz
roll
shrb
fwait
scas
aaa
inc
dec
jno
mov
jns
rclb
cwtl
jle
mull
inc
xor
push
pop
sub
adc
addr16
aad
sbbb
sub
pop
mov
aas
test
outsl
pop
inc
fcompl
aas
fiaddl
mov
or
push
pop
pslld
sbb
cmc
xchg
and
sti
mov
jp
aad
shrb
jecxz
daa
xor
mov
dec
xor
sub
movsb
arpl
jle
cmp
aas
sbb
fidivs
adc
mov
orb
jo
sub
push
fcomps
inc
xchg
loop
jp
adc
jbe
sub
imul
pop
test
ds
sub
mov
outsl
adc
or
jne
jns
mov
mulb
jbe
push
add
xor
cmp
jo
push
cmp
jno
xor
in
or
adc
cmc
ds
or
insb
scas
in
jge
lret
test
cli
mov
xchg
jg
adc
test
mov
cmp
sub
cmp
push
xchg
cmpsb
pop
sbb
icebp
lock
in
in
inc
and
fwait
cmpsl
fs
xchg
daa
addb
std
or
andb
adc
movlps
negl
xchg
movsl
aaa
cmp
jl
mov
enter
push
mov
in
xor
fs
leave
mov
bound
push
mov
test
mov
or
add
mov
mov
mov
mov
pop
sarl
sbb
xchg
dec
mov
pop
or
lea
mov
ja
fldenv
stc
push
pop
jmp
add
sbb
push
clc
dec
bound
push
cmp
inc
call
outsb
fdivrs
add
test
push
ja
nop
jo
bound
sarb
out
add
push
in
pop
pop
pusha
mov
ret
lahf
xchg
rclb
push
mov
lret
or
arpl
push
fcmovnbe
add
sub
add
mov
lods
stos
inc
mov
and
mov
stc
divl
dec
int
xchg
dec
mov
or
pop
pop
fdivrs
lds
dec
inc
lds
inc
shrb
loopne
cs
imul
xor
inc
iret
cmpsb
and
mov
movb
sbb
dec
pop
movsb
dec
cmp
cmpsb
mov
mov
and
adc
mov
cmpsl
mull
adc
mov
jb
push
mov
push
gs
scas
mov
stc
ret
ljmp
jb
das
stos
out
and
call
jae
cmp
mov
adc
jmp
rol
icebp
test
sti
outsb
pop
shll
adcb
aad
fisttpll
stc
les
mov
mov
lds
negb
pop
xchg
out
pushl
push
pop
jae
add
push
lods
xor
icebp
sub
je
shl
mov
lret
out
clc
rol
cmp
stos
push
cmp
int
mov
sub
add
cld
lret
xor
bound
lret
push
mull
jle
dec
and
icebp
and
stc
or
cmp
jno
out
push
dec
insb
sahf
outsl
inc
subl
adc
das
inc
lds
jne
sarw
call
movsb
lret
jmp
fidivrl
scas
repz
fsts
repz
out
jno
fldt
lods
das
in
bound
fcomps
lret
xorl
sbb
dec
and
lock
xchg
scas
cmpsl
in
add
mov
nop
mov
pushf
gs
xor
fsubrs
jecxz
pop
mov
loop
sub
out
lock
stos
lods
mov
cs
repnz
xor
mov
loopne
cwtl
rcll
out
push
adc
inc
cltd
xor
sahf
pusha
mov
nop
mov
lahf
pop
daa
cmpsb
in
stos
adc
sub
rcll
movsl
jecxz
jbe
sub
pop
sbb
sarl
cwtl
pop
push
lcall
xchg
popf
cld
test
icebp
adcb
or
mov
xlat
xor
mov
fidivs
adc
aam
mov
or
imul
pop
stos
mov
add
out
xchg
inc
xor
orb
inc
adc
mov
xchg
subb
adc
in
push
push
cmp
add
sbb
sbb
push
cli
jp,pt
inc
rcrl
loop
dec
out
mov
push
fcmovnb
and
xlat
inc
mov
call
pop
adc
movsl
pop
outsb
cmpsb
cmpsb
call
sub
xchg
clc
push
sub
in
dec
pop
aam
or
add
or
fdivrp
xchg
mov
mov
aas
pop
inc
or
fstpl
fdivrs
leave
sbb
mov
jns
int
or
sahf
fdivp
xor
mov
push
push
adc
add
or
add
jne
dec
sbbl
xlat
pusha
sbb
into
pushf
ja
and
ss
in
lcall
ja
sbb
cmp
mov
jo
fnstcw
and
cli
enter
loop
es
cmp
mov
lahf
xchg
pop
pop
test
pop
outsb
iret
adc
int
rorb
inc
sbbl
je
nop
jecxz,pn
negl
lret
pop
jge
cmp
pop
rcll
cmp
mov
add
andl
sub
in
jbe
dec
in
mov
sbbl
out
adc
enter
sbb
fmul
jmp
insb
into
mov
cmp
add
inc
pop
dec
ret
das
loop
mov
jmp
sbb
sub
pop
push
sub
or
push
test
xchg
ror
movsb
outsb
xchg
pop
shrb
jnp
mov
inc
stc
mov
and
fisttpll
dec
incl
inc
imul
lret
cwtl
xor
loopne
xlat
in
xorl
lret
xor
loop
cmp
fcmovu
jbe
stc
sti
cwtl
adc
adc
jl
xchg
lcall
adc
adc
or
push
mov
mov
hlt
cmpsl
divb
mov
xor
fsubrl
std
pop
movsb
les
dec
xlat
xchg
test
dec
int
fiadds
fistl
repz
lds
jns
pop
lcall
cmc
jle
in
mov
imul
movsb
pop
insb
push
pushf
pop
lahf
mov
idivb
popf
lods
mov
xchg
scas
sahf
je
aam
sbb
loope
jnp,pn
sbb
jecxz
pop
push
jne
loope
push
lock
scas
sti
mov
rep
xor
ret
sub
mov
out
pop
lcall
stc
fnstcw
and
arpl
mov
faddp
or
xor
inc
test
inc
mov
repz
pop
inc
ja
das
rorb
xchg
sub
sbb
xchg
inc
xor
data16
xchg
frstor
call
mov
test
cmpsl
lock
add
aad
callw
pop
dec
mov
pop
jmp
out
push
mov
inc
stc
pop
clc
mov
adc
adc
push
ja
pop
pop
dec
inc
shl
jbe
cmp
dec
mov
mov
or
jae
gs
add
mov
stc
jne
pushf
jle
sbb
jl
in
mov
popfw
ss
in
fidivrl
imul
add
ljmp
push
cmpb
out
aas
icebp
ss
adc
and
loopne
notb
call
dec
fmul
sub
adc
mov
movb
lret
pop
pop
adc
or
lret
mov
mov
jno
stc
mov
int
add
pop
nop
lods
cmpsb
dec
push
lods
imul
jne
fcomps
out
lret
mov
into
adc
fldcw
xchg
pop
mov
sti
push
mov
mov
js
mov
cmp
stos
pop
shl
and
jnp
sbb
mov
mov
pop
cmpsb
mov
jno
dec
cmp
test
arpl
push
das
popf
dec
ds
fs
inc
pop
clc
sub
dec
xchg
incb
mov
outsl
scas
inc
movsb
sbb
mov
add
mov
fmul
popa
bound
dec
les
cli
shrb
xchg
cmp
jnp
dec
notl
pop
lahf
jb
push
xchg
cmp
mov
icebp
and
shrb
stos
fstpl
incb
test
loope
ror
fcmove
ror
lds
roll
mov
mov
push
fisubrs
scas
add
mov
into
fistps
adc
ds
xchg
shr
stc
pop
xchg
mov
inc
jne
mov
popf
cmp
mov
sub
jbe
pop
mov
pushf
lret
loope
popl
xorl
lret
inc
and
loope
lahf
cmp
cwtl
mov
pusha
jmp
sub
push
dec
or
push
imul
cmp
mov
cmpsl
cmpsb
lret
sbb
jle
pusha
fmuls
sbb
movsl
imul
stos
std
sahf
rorb
in
push
cmc
pop
mov
jp
pop
fmull
cltd
adc
mov
sub
out
jle
pop
and
pushf
sbbl
and
and
pop
test
pop
in
arpl
inc
out
lret
xchg
add
xor
jnp
leave
insb
call
xchg
test
jmp
jle
add
test
mov
and
subb
ss
jl
adc
jmp
xchg
cmp
add
call
jns
push
hlt
cmc
push
cld
repnz
push
out
xchg
daa
pop
cltd
pop
jg
add
push
data16
imul
int
cmpsl
jle
js
or
in
shrb
xchg
pop
push
xchg
fbstp
push
pop
jno
test
shrl
aas
jb
popf
xor
rcr
es
pop
mov
lahf
into
dec
stos
dec
xchg
push
jae
arpl
mov
jl
fistl
sub
aad
cli
fcoms
lcall
scas
xchg
mov
cmp
es
lds
xchg
sbb
adc
sub
je
repnz
and
out
jmp
test
dec
pusha
aad
sub
or
lds
mov
les
and
cmp
andl
lret
imul
dec
rcrl
daa
add
mov
jecxz
mov
mov
push
and
adc
xchg
movsl
inc
nop
inc
jne
sub
popa
pop
and
shrl
push
jb
lock
push
add
lock
mov
or
xchg
aaa
fwait
ds
nop
cli
cmp
cmp
xchg
pop
add
aam
sub
ds
xchg
in
cmp
cli
jb
jno
fcoml
iret
out
mov
adc
and
or
cmp
adc
jb
cmp
loopne
inc
sbb
fidivs
rorl
xor
sbbb
mov
out
daa
cmpsb
dec
or
sti
and
or
in
xchg
mov
cli
xlat
imul
clc
pop
ret
sbb
xchg
pop
push
inc
ror
bound
fxch
cmpsl
push
sbb
ss
inc
cmpsb
dec
push
push
test
jne
cli
test
sbb
xor
hlt
icebp
call
fcomp
cmc
add
and
shll
in
daa
jo
adc
and
loopne
push
inc
mov
xchg
push
dec
or
pop
xchg
pop
and
aam
jb
out
lods
mov
bound
mov
shrb
jbe
fisubrl
repnz
jo
inc
push
orl
into
int3
iret
mov
mov
popl
shlb
aaa
outsb
and
push
xchg
icebp
dec
lods
lahf
outsl
cli
sahf
mov
pop
sbb
xor
lods
xchg
sbb
daa
cli
adc
shl
inc
cli
nop
lods
aam
xlat
stc
cmp
les
cmp
mov
ret
jg
sub
sbb
mov
inc
pushf
inc
scas
shll
mov
subb
and
jae
fisubrl
mov
and
idivl
mov
xchg
stc
lahf
inc
cli
dec
push
adcb
lods
sub
add
lea
push
popa
and
das
mov
orb
sbb
sar
out
sbb
xor
mov
jl
adcl
or
mov
push
mov
xchg
fiaddl
xchg
lahf
push
imul
in
jb,pn
sub
ret
add
mov
dec
jmp
pushf
cmp
lret
push
test
adc
or
push
cmpsl
jecxz
jle
shll
lock
in
xor
jo
xlat
xchg
fcoms
and
and
lret
xchg
and
or
push
sbb
jmp
xchg
int3
inc
dec
clc
push
jecxz
lods
mov
pop
dec
int
es
lret
jmp
rclb
adc
mov
inc
sub
lock
xor
icebp
dec
mov
into
adc
dec
rep
loopne
jmp
cmp
ljmp
pop
pop
test
into
imul
lods
jnp
xor
lret
sbb
out
jne
adc
cwtl
cwtl
shlb
mov
sub
jno
bound
aam
sahf
enter
jbe
xor
lcall
lock
mov
and
push
lds
lock
mov
mov
push
push
pop
or
out
fs
mov
inc
lds
pop
cmc
inc
pop
dec
ljmp
cli
pop
mov
test
lods
and
fistpll
xchg
push
sbb
xor
dec
addr16
cmp
sbb
mov
aad
and
in
aaa
ja
push
sub
push
xor
jns
jl
ljmp
mov
mov
arpl
jbe
sub
int3
pop
mov
add
cmc
mov
lret
or
adc
fmull
xlat
cmp
loop
and
mov
jae
scas
xor
fucomp
cli
repz
jl
arpl
je
adc
xor
or
or
mov
imul
xlat
xor
adc
stos
jecxz
test
test
je
aas
shl
cmpsb
lahf
cmp
dec
mov
mov
jle
daa
cld
and
sarb
jl
in
mov
ja
push
test
filds
mov
mov
or
push
repnz
jg
dec
sbb
adc
int
mov
lds
fisubl
imul
mov
cmpsl
stc
movsl
inc
xchg
lods
les
cmp
mov
daa
or
push
test
sub
lods
in
mov
rolb
test
cs
mov
add
sub
cli
es
dec
aas
mov
stos
aam
inc
jo
int3
mov
mov
sahf
loop
fildll
pop
adc
popf
loopne
sti
lahf
and
insb
and
shll
das
xor
in
and
lds
and
into
repz
xchg
aad
lea
pop
fldenv
jmp
or
xchg
rolb
mov
mov
cwtl
cmp
pusha
mov
xor
test
inc
int3
test
test
ds
aas
sub
repnz
out
cmc
movsl
sahf
xchg
or
ds
rclb
mov
loopne
xadd
dec
mull
imul
push
mov
jno
hlt
xchg
push
jns
dec
shrl
jle
sbb
mov
adc
and
data16
loope
sub
xor
pop
jmp
ljmp
mov
mov
out
lret
cmp
loopne
in
js
test
pop
aam
enter
lods
mov
stc
push
aas
ret
ret
mov
cmpsl
mov
xchg
out
insb
add
notb
add
mov
add
enter
cmpsb
iret
fisubrs
sub
clc
movsl
mov
inc
bound
dec
repnz
loop
pusha
jno
and
push
outsl
pop
notb
mov
out
lahf
int
mov
iret
adc
add
push
jle
into
hlt
ljmp
enter
mov
stc
and
mov
mov
mov
enter
mov
inc
pop
mov
lcall
in
cmp
ret
outsl
pop
mov
mov
inc
cltd
add
pop
ja
js
mov
fwait
xor
xchg
cmpb
mov
push
cmp
test
jb
rorl
mov
mov
fsts
pop
mov
jp
scas
jmp
pop
jb
insl
in
clc
dec
xor
daa
into
out
xchg
inc
xchg
ficompl
push
in
mov
sbb
sub
and
out
adc
cmc
test
loop
fisttps
push
mov
lods
xchg
cli
add
iret
xor
xor
data16
sahf
pop
js
inc
xchg
popa
and
xchg
lcall
outsl
push
inc
outsb
aam
pop
mov
push
cmp
lods
imul
jge
mov
fistps
shlb
sbb
and
pop
iret
dec
push
mov
fists
mov
stos
aad
test
movsl
push
stos
mov
pop
data16
pop
addr16
push
fdivl
or
adc
or
fstl
js
pop
mov
bound
cwtl
mov
jne
repnz
pop
arpl
cld
and
cwtl
xchg
test
cmc
in
jbe
sub
outsb
cld
mov
imul
adc
xchg
or
mov
lea
sub
stos
roll
push
lods
addr16
push
jno
test
lretw
nop
inc
add
mov
dec
xchg
pusha
xor
or
bound
arpl
lret
shrd
pop
jmp
xchg
cmp
dec
sub
lret
mov
das
lcall
mov
aad
fcmovbe
and
sbb
and
stos
aam
bound
jmp
xor
or
adc
insl
cmp
mov
jnp
sub
pop
cs
sbb
mov
out
dec
imul
lret
fcmovbe
out
fbstp
cli
pcmpgtw
mov
xchg
mov
clc
enter
stos
mov
aad
stos
nop
pop
mov
lret
and
mov
fsubrl
dec
inc
orl
fadds
pop
out
and
decl
mov
mov
rcr
and
loopne
loop
cmp
roll
and
push
jge
mov
push
bound
sbb
mov
adc
jecxz
std
call
jnp
arpl
cmpsl
mov
icebp
push
aas
movsl
cmc
stc
push
and
nop
popa
add
xchg
xor
std
adc
adc
mov
lret
gs
cmpsl
insl
xchg
out
pushf
adc
sbb
mov
std
fcompl
push
pop
test
xor
mov
and
jno
pushf
call
lods
xchg
int3
xor
clc
popf
inc
insb
cmc
fsubrs
mov
roll
data16
mov
ljmp
repnz
cmp
xchg
xchg
mov
push
pop
out
test
xchg
insl
enter
add
pop
xchg
cltd
sub
push
lock
and
push
and
lahf
jg
aaa
jb
fldt
dec
mov
fwait
adc
cmc
shlb
xchg
inc
scas
aas
mov
scas
mov
dec
mov
mov
inc
scas
mov
popa
idiv
out
pop
cs
ljmp
sbb
cmp
arpl
xchg
cmp
sbb
sysenter
hlt
cld
push
or
sbbl
jmp
ror
xchg
sti
mov
mov
mov
adcb
dec
push
jp
rorl
and
rclb
push
dec
adc
sbb
push
aas
dec
sbb
testb
rorb
sbb
adcl
jecxz
sbb
pop
lock
leave
jbe
push
adcb
inc
and
jae
pushl
aaa
cmp
push
les
aad
push
sbb
sbb
push
jns
push
imull
in
lods
das
mov
gs
mov
into
loopne
xor
push
aad
xchg
push
dec
dec
pop
dec
scas
ret
add
or
pop
arpl
mov
mov
push
jg
out
pop
and
les
mov
cltd
fildl
movsb
lcall
sbb
and
cmpsb
ja
stc
pop
not
out
mov
and
cltd
mov
sti
add
pop
inc
adc
inc
ljmp
movsl
pop
sbb
cmpsb
test
fnstenv
jmp
pop
pop
or
pop
add
imul
lret
cmp
pop
xchg
fmull
out
gs
push
mov
lret
lods
stos
das
verw
lods
vpmuludq
push
rol
imul
or
push
sbb
cld
test
lret
pop
sub
mov
pop
sbb
sub
loop
pushf
out
xchg
pop
or
mov
mov
mov
and
jg
pop
sbb
jo
and
fwait
mov
loop
cmp
sub
hlt
pop
adc
in
decl
enter
xor
push
ds
push
popf
push
mulb
lods
mov
cmp
xlat
loope
mov
or
pop
mov
addb
push
xor
popl
sbb
lods
lret
jnp
rol
loop
movsb
sub
or
imul
push
mov
push
push
add
jb
cmpsb
out
sbb
fcompl
test
out
les
push
adc
ljmp
push
leave
mov
lahf
pop
pop
adc
rcll
ljmp
mov
test
enter
je
push
mov
cwtl
nop
fdivl
lea
push
xchg
or
push
clc
shlb
adc
fstpt
jg
gs
jne
dec
mov
and
out
bound
pushl
sub
push
les
iret
mov
sbb
or
add
push
jmp
lock
icebp
mov
mov
cmp
je
sub
jne
lods
add
sub
pop
jb
insb
and
sbb
cli
lds
ja
je
mov
pop
nop
aas
push
and
testl
sub
push
xor
push
and
or
cmp
lcall
les
dec
or
jo
mov
inc
adc
dec
iret
jp
push
out
pushf
fbstp
cmpb
leave
sbb
sarb
mov
fiadds
inc
loopne
insl
daa
sbb
aaa
fstl
dec
pusha
push
test
cmp
adcl
xchg
loopne
icebp
and
test
out
sbb
fisubl
test
inc
ret
or
or
les
and
test
xchg
pop
push
cmp
jns
stos
in
cmp
mov
in
jae
or
sub
mov
dec
jmp
xchg
adc
scas
shll
pop
js
das
xor
jbe
stos
cld
xchg
insb
pop
hlt
imul
pushf
mov
out
sub
andl
gs
push
push
mov
jle
add
jg
aam
sub
shrb
jmp
add
pushf
aas
ret
cmp
jae
xor
mov
mov
xchg
jmp
adc
rorb
or
leave
in
loop
push
test
ja
and
gs
cmp
push
call
xchg
inc
imul
fsubs
dec
push
pop
xchg
jb
pop
subl
shrb
adc
in
inc
mov
sub
imul
or
cmpsb
add
mov
inc
pop
mov
xlat
shll
aas
cmpsb
in
sub
lods
into
xchg
jnp
xor
int
clc
xchg
xlat
xlat
fnstenv
sub
imul
xchg
ss
popf
idivl
inc
hlt
xchg
lds
bnd
cmpsb
incb
mov
loop
out
in
inc
mov
into
movsl
xor
loop
je
mov
shrl
xchg
push
ja
es
cmp
xor
sbb
xchg
inc
loope
inc
push
jecxz
jl
cmp
jne
cmp
arpl
pushf
jb
ds
rsqrtps
pop
out
shr
jl
enter
sub
mov
jnp
lods
xor
repnz
insl
mov
int3
popf
sbb
push
xor
jg
repnz
movsb
fwait
js
idivl
loop
push
shll
rcr
sub
and
addr16
leave
dec
in
out
push
xor
adc
push
lcall
stos
pop
sub
xor
pop
adc
pushf
mov
idiv
mov
adc
push
aas
push
push
push
inc
in
cmpsl
mov
les
adc
lahf
add
jae
aam
xchg
dec
jnp
test
pop
xor
mov
inc
cmp
mov
sub
adc
xor
inc
xchg
arpl
ss
push
mov
dec
popf
inc
fildll
leave
test
pop
push
pop
test
outsl
pushf
sbb
scas
fnsave
test
in
xchg
cmp
stos
push
out
cmpsb
sub
les
lock
cwtl
or
mov
push
gs
outsb
fwait
cmp
mov
push
popa
jecxz
scas
subb
cs
stos
in
push
sti
lods
nop
addr16
xchg
scas
or
cmpsb
jmp
in
add
mov
and
inc
jb
fdivr
mov
xlat
jg
sar
std
les
cwtl
ljmp
inc
xchg
push
or
or
cmpsb
lcall
mov
arpl
repz
xchg
popa
je
xor
call
mov
mov
sub
xchg
mov
out
sub
push
sub
prefetchw
or
pushf
jnp
lods
clc
out
push
testb
cmp
dec
cmpsb
stos
scas
aaa
sub
aaa
adc
ljmp
push
cmp
ljmp
or
cmp
jne
jb
pop
jle
sbb
int
push
mov
idivb
les
push
push
or
fsubr
xor
mov
sbb
fcoml
jne
aam
sbb
gs
or
ror
and
js
ror
imul
mov
aam
mov
xor
js
jno
pop
inc
sarb
cmp
mov
gs
imul
scas
mov
aas
test
pop
mov
stos
popa
lret
adc
inc
and
inc
cmpsl
jns
inc
scas
mov
andl
out
inc
jne
mov
inc
inc
ljmp
fistps
cwtl
pop
xor
repnz
aaa
loop
rcrl
fcmovnb
pushf
lcall
out
pop
aad
decb
dec
jo
or
leave
mov
push
ljmp
cmp
sbb
jmp
sub
adc
jecxz
test
test
mov
pushf
pop
mov
adc
lea
shrl
jge
int
inc
clc
in
aad
aam
stos
push
cmpl
stos
loopne
push
adc
xor
xchg
mov
jl
mov
pusha
pop
gs
or
add
leave
scas
mov
hlt
mov
mov
jmp
dec
mov
pop
mov
push
icebp
jnp
mov
push
xor
xlat
shll
fisttpll
xchg
jecxz
sbb
xor
jae
pop
dec
xor
popa
inc
xchg
notl
leave
mov
pop
xchg
inc
pop
cwtl
add
ds
leave
iret
ss
arpl
push
sbb
mov
in
push
and
jo
sbb
lret
cmp
repnz
fcom
push
lock
jg
cmp
or
andb
dec
add
fidivrs
xor
pop
roll
nop
sarl
mov
lods
cmp
adc
fisttpl
gs
jbe
mov
add
cmc
popf
mov
or
xor
ss
push
sub
mov
sahf
cmpsl
jno
repnz
push
fs
jns
jne
adc
es
dec
xor
sub
movsl
testb
inc
xchg
jns
cmpl
div
scas
daa
and
int3
int3
call
inc
fsubrl
mov
je
mov
sbb
pushf
cmp
inc
scas
lret
cmp
test
rcrb
push
mov
pop
and
dec
scas
jge
mov
mov
and
jge
dec
outsl
mov
pop
mov
test
xor
pop
jae
dec
std
xor
scas
cli
mov
cmp
mov
and
movsb
xorl
stos
lahf
in
mov
inc
dec
hlt
mov
and
std
outsl
push
std
aad
push
sbb
adc
and
call
ljmp
dec
popf
fisttpl
icebp
jns
cs
rolb
adc
dec
test
dec
xor
int3
xlat
jl
mov
pop
or
fists
stos
in
jo,pn
std
movd
in
sub
call
cmp
mov
cmpsb
fs
test
imul
add
jmp
lahf
or
arpl
divb
jno
into
xor
stos
cmp
mov
aad
or
cmp
add
subb
pop
mov
push
pop
xchg
rol
push
fiadds
jecxz
cmp
sahf
sub
std
cmp
cwtl
push
cmc
mov
jae
mov
lret
shll
cld
das
push
or
jae
in
repz
and
pushw
fcompl
xchg
imul
add
mov
testl
inc
push
sub
stos
imul
loop
or
lods
sub
jne
sbb
mov
inc
call
outsl
cmc
sbb
les
xor
jne
pop
out
mov
in
add
jbe
andb
jl
cld
movsb
mov
jns
adc
mov
enter
add
or
sub
mov
dec
sbb
lods
push
mov
lea
sub
imul
pop
repnz
pop
test
mov
popa
push
sti
std
adc
dec
and
push
mov
leave
push
popa
mov
les
inc
test
cli
jno
push
jbe
lret
jmp
inc
dec
add
adc
sub
sbb
sbb
xchg
mov
in
std
mov
adc
inc
test
cmp
pop
rorl
mov
icebp
xor
shrb
clc
mov
xor
fs
insl
fsts
rol
gs
cmp
mov
pop
cld
jb
inc
jo
jmp
mov
sbb
jmp
insl
push
xor
mov
sbb
pop
inc
xor
cld
test
mov
imul
dec
arpl
dec
xor
sti
lret
or
cltd
aam
mov
inc
int
call
daa
shll
das
insl
or
jo
push
inc
fstpt
popa
scas
mov
dec
std
mov
sub
fxch
outsb
aam
mov
inc
ret
shrl
xchg
mov
cmc
je
fnstcw
jno
xchg
mov
jns
xor
mov
movsb
cmp
insl
xor
cwtl
fstps
cmp
pop
or
jbe
bsr
aaa
imul
lea
jae
fildl
xchg
scas
adc
mov
jbe
push
jle
dec
test
loope
jp
cwtl
add
fwait
inc
scas
and
stos
and
jae
rorl
ret
nop
arpl
xorb
test
shll
pusha
mov
fs
shl
js
jmp
jp
mov
push
dec
dec
xchg
ret
aas
sbb
dec
cwtl
add
sub
repnz
add
pop
xor
cld
imul
loop
inc
fisttpl
test
movsl
fcompl
pop
pop
hlt
pop
push
push
mov
mov
xadd
adc
scas
mov
faddl
dec
cmp
cld
adc
jmp
jno
bound
pop
mov
pop
movsl
fstpt
jb
cmp
ret
mov
sti
and
int3
dec
jns
outsl
jnp
pusha
dec
lahf
xlat
push
scas
stos
xchg
jb
xor
ficompl
and
push
mov
adc
push
mov
iret
sub
pushf
int3
mov
xchg
mov
scas
and
sub
lods
add
pop
sarl
push
mov
enter
cwtl
scas
xlat
xchg
int3
xor
jecxz
mov
jns
cltd
pop
xchg
cmp
mov
lods
nop
imul
fmull
jo
jp
mov
jg
fsubr
out
out
jmp
sbb
adc
test
cmc
adc
fwait
sbb
mov
ljmp
mov
shlb
enter
mov
mov
inc
ret
pop
dec
ficoml
jl
xchg
test
insl
or
xor
outsl
xchg
or
imul
dec
xor
into
enter
jbe
sti
jo
mov
test
lds
pop
cld
addl
stos
loop
scas
divb
mov
scas
lods
xchg
mov
add
lds
add
js,pt
test
mov
or
jge
pop
fdiv
outsl
xor
sub
aaa
xor
ja
or
xor
add
adc
add
and
jb
addr16
xchg
cld
sub
jmp
xchg
pop
arpl
leave
pusha
cmp
shlb
sti
jmp
dec
ret
adc
xor
jnp
xlat
int3
fdivrp
dec
movsl
jmp
mov
push
push
je
pop
adc
add
fdivr
in
daa
cld
xor
dec
xchg
test
or
adc
scas
repz
mov
pop
cmp
out
arpl
jmp
jne
sbb
push
cmp
ja
mov
scas
lock
sbb
inc
mov
flds
and
pop
xor
and
pop
popa
mov
mov
sub
out
cmpsl
jae
add
xor
icebp
js
mov
xlat
and
pop
and
xor
sub
push
fisttps
adc
mov
sub
shr
mov
add
pop
sub
rcrl
ret
pop
push
int
xchg
mov
fildll
jp
sti
xor
stc
pop
pop
and
mov
lret
sarl
in
aas
call
pop
pop
dec
je
loop
pop
jae
aaa
add
sbb
repz
inc
subb
adc
fildl
jae
loop
cwtl
pop
sahf
mov
push
inc
out
cltd
into
lods
pop
sbb
push
mov
cmp
loop
or
adc
lods
and
pop
add
enter
fisubrl
dec
xor
jmp
add
lods
js
cmp
push
insb
repnz
stos
xor
or
movsl
xchg
push
push
push
inc
fsts
push
sub
add
adc
xchg
dec
outsb
pop
daa
fdivp
pop
cmc
or
sub
inc
jnp
jle
xor
lea
test
push
xor
sbbb
call
insl
in
push
int
lock
or
mov
sub
test
push
xchg
in
ljmp
ffree
int
xchg
mov
xor
sbb
icebp
sbb
cmc
das
sub
lods
cmpsb
jle
push
fisubl
add
jne
mov
aas
rcr
jmp
mov
pop
mov
out
or
xchg
sbb
sarb
push
dec
xlat
xchg
insl
jae
sbb
jb
sub
iret
lahf
push
out
jnp
push
int
push
xlat
lret
lret
ljmp
repz
insl
dec
inc
movsl
inc
xchg
rep
sbb
jp
mov
arpl
fstps
loope
into
enter
push
mov
push
sub
jae
icebp
adc
addr16
or
inc
jne
loope
in
ss
cmpsb
pushf
ds
in
test
mov
in
mov
sbb
pop
sbb
mov
cmpsl
dec
sub
mov
jnp
stos
add
push
pop
jg
decb
test
dec
push
mov
push
sbb
movl
jnp
decl
popa
cmp
popf
lcall
in
call
adc
ficompl
cld
dec
movsl
stc
fisttpl
jp
int
repnz
add
test
mov
popf
loop
shrl
xor
dec
push
pop
pop
and
push
stos
dec
les
cwtl
mov
cmp
pop
and
cmp
aas
int3
cs
inc
rcr
test
lcall
cmp
inc
inc
test
cld
cmp
push
sbb
adc
jne
lds
enter
pop
push
js
xchg
pop
add
sbbl
cmp
jp
mov
inc
mov
or
loopne
movsb
sti
pop
xchg
out
cmc
cld
mov
inc
and
push
pop
xchg
sub
dec
xlat
pop
mov
jp
and
fadds
je
jae
xlat
mov
dec
lods
dec
addr16
loope
mov
pop
cld
stos
adc
jns
jae
add
rolb
ficomps
mov
leave
adc
jl
js
sub
lods
and
inc
mov
sbb
lahf
sti
push
inc
sti
xor
addr16
cmp
repnz
shlb
mov
push
shlb
repnz
scas
outsb
jecxz
test
and
arpl
insl
arpl
xor
mov
lahf
pusha
and
sbb
push
fwait
adc
mov
and
sbb
inc
imul
ds
xorb
dec
aas
pop
iret
arpl
lea
repz
das
shrl
cmp
and
stos
jecxz
in
add
inc
jns
cmpsl
cld
push
jl
jg
mov
mov
mov
in
jae
das
push
shrl
adc
dec
and
into
sub
fidivl
or
dec
mov
cltd
xor
aad
rclb
or
mov
sub
push
sti
cmpb
add
mov
cmp
in
push
pop
push
push
rcrb
fisubl
xacquire
incb
mov
sbb
fdivs
and
insb
sub
lods
int3
outsl
pusha
lods
test
mov
pop
xchg
push
mov
decl
push
push
or
hlt
mov
hlt
cmpsl
andb
add
xchg
cwtl
aaa
lea
adc
and
lahf
dec
addr16
leave
mov
mov
mov
sub
mov
add
mull
pop
pushf
hlt
mov
jne
lahf
xchg
xchg
addr16
push
or
mov
shll
loope
jbe
pusha
lcall
mov
cmp
add
stc
and
shr
xor
sbb
and
and
lds
pop
xchg
lods
pop
cmp
in
scas
sub
icebp
jns
arpl
jbe
in
xchg
push
inc
dec
pop
sub
movsl
sbb
out
cmp
push
mov
shlb
push
call
push
test
addr16
lret
leave
pop
loopne
push
hlt
cmp
fwait
add
sub
mov
and
icebp
cwtl
jge
adc
mov
cs
push
sti
ljmp
bound
stos
inc
mov
push
es
in
push
test
sub
outsb
js
not
test
cmp
fimull
shr
loopne
mov
sub
push
icebp
mov
loop
push
and
xlat
mov
dec
dec
xor
pop
outsb
icebp
dec
in
pop
xchg
movsb
faddl
js
nop
xchg
insl
pop
cmp
popa
and
outsl
mov
pop
mov
clc
mov
pop
ja
jmp
lds
ss
sbb
or
add
repnz
aaa
cld
int3
addr16
stos
mov
xchg
mov
in
ret
jae
push
out
mov
sub
cmp
nop
lods
test
test
cmp
nop
and
sbb
push
mov
inc
jp
jmp
fs
xlat
pop
testb
sub
xchg
mov
rclb
sub
or
ret
mov
jg
lret
fwait
sbb
test
push
scas
lcall
rorb
fwait
and
mov
std
jo
sbb
mov
test
out
xchg
xor
adc
inc
add
or
lods
adc
cmpsb
cmp
ficoml
jg
pop
out
and
int3
jo
ljmp
aaa
jne
aas
insb
inc
cmp
out
pop
jle
lock
aad
insb
jge
push
jp
ja
jo
ja
jae
arpl
cmp
cmpsb
mov
out
xor
ret
adc
rcl
sub
jbe
adc
rcr
decb
insb
sub
mov
inc
push
aam
out
inc
cmp
outsl
aad
aas
jbe
ja
mov
fldenv
mov
rcll
adc
aaa
cmp
inc
pop
bound
jnp
fsubrl
sbb
mov
mov
loope
push
outsb
enter
dec
adc
push
adc
iret
xchg
arpl
add
jae
push
loop
adcb
js
xchg
add
xor
lret
cmpsl
pop
mov
mov
sub
stos
xlat
cmc
gs
push
cmp
adc
in
inc
stc
mov
pop
inc
jns
sbb
inc
lea
mov
pop
xchg
push
mov
daa
pop
mov
or
jb
adc
es
mov
pop
stc
jmp
jl
xor
mov
inc
cmp
rcll
mov
ja
popa
icebp
cmpsb
fdivr
pusha
int
inc
xchg
push
ret
stos
test
mov
ret
mov
dec
mov
inc
das
jno
pusha
pop
xchg
fwait
mov
xchg
sbb
leave
adc
inc
and
push
jnp
sti
cmc
cmp
jmp
xchg
inc
aas
or
xorl
push
push
aad
jg
adcl
sub
sbb
pop
mov
push
das
xor
lret
std
xor
call
or
or
xchg
xchg
cmc
fldl
in
cmp
add
dec
in
cwtl
cmc
jmp
add
dec
inc
add
call
add
ds
mov
jp
add
ret
leave
push
pop
lds
out
les
mov
cmpsb
inc
lret
adc
sub
nop
xlat
lods
stos
jmp
leave
sbb
xchg
int
into
test
dec
pop
stos
inc
test
out
jmp
mov
neg
xor
in
pushf
clc
mov
hlt
cmpsb
jae
sub
test
lea
repnz
not
add
clc
fbld
pop
xchg
ja
jo
mov
or
sbb
mov
jb
stos
ret
dec
popf
and
push
pushf
inc
mov
lcall
and
push
fs
ds
xchg
jg
inc
cmpb
fwait
pop
fistpl
sub
test
sti
dec
add
jne
hlt
and
rcll
and
sbb
rcrl
adc
sbb
mov
pusha
pop
pop
out
lock
cmc
rolb
lea
dec
push
ret
mov
push
mov
pop
dec
add
js
cmp
mov
testb
mov
xchg
mov
out
jo
pop
push
mov
mov
and
push
pop
and
jbe
clc
pop
add
addr16
lahf
cltd
and
loop
xchg
icebp
pop
cs
lea
sub
push
push
cmp
push
sub
rcrl
cmp
test
test
mov
sbb
or
loope
mov
inc
test
fldenv
sti
dec
push
jo
es
aam
lds
jae
cmpsl
bnd
repnz
jmp
jno
xchg
movsl
nop
lock
or
mov
js
call
clc
ret
add
sbbl
mov
add
xchg
xor
push
xorb
or
cmpl
xchg
mov
push
bound
xchg
mov
inc
dec
outsb
lock
mov
xchg
inc
roll
mov
jle
divb
fistpl
jg
inc
sbb
push
jnp
loop
lret
shrl
lret
jle
mov
sahf
jbe
add
pop
xchg
xchg
scas
xchg
imul
mov
decl
dec
dec
xchg
enter
or
ljmp
cli
cli
scas
mov
pop
loope
add
add
sbbb
jbe
dec
pop
les
bswap
dec
in
jbe,pt
pop
mov
cmp
das
and
mov
adc
inc
outsb
pop
notl
into
and
shll
mov
push
rdmsr
xchg
nop
lahf
or
dec
lods
test
sti
rcll
and
clc
dec
nop
xor
cmp
xchg
pop
scas
cs
roll
cld
jo
push
push
mov
dec
div
sti
arpl
nopl
ds
mov
bound
cld
add
xor
lock
pop
push
daa
or
jo
sahf
lock
mov
sti
xchg
push
cwtl
dec
sub
mov
scas
push
pop
add
or
psraw
data16
lods
in
pop
and
ret
or
das
addl
cwtl
cmpsl
lea
out
orb
imul
or
pop
jae
imul
mov
inc
dec
nop
pop
int3
and
dec
or
out
jl
or
sub
lahf
pop
pop
pop
sub
dec
push
push
ja
or
xor
test
rcll
mov
pop
scas
mov
pop
call
pushl
adc
mov
sub
fimuls
xor
pop
and
sbb
test
mov
bswap
or
jb
or
jmp
mov
push
sbbb
shll
or
loop
mov
cld
xchg
ds
mov
or
or
cmp
mov
hlt
sbb
sbb
pop
scas
xchg
gs
flds
dec
mov
hlt
inc
inc
xchg
into
hlt
adc
stc
xor
ffree
sbb
dec
cmp
sbb
inc
mov
jmp
xchg
and
mov
ss
add
pop
movsl
cmpsl
stos
jne
xor
fildl
call
pop
mov
xchg
jne
jp
dec
dec
fistpl
jno,pt
or
dec
out
arpl
xor
sub
aad
pushf
std
lcall
mov
jmp
aam
shlb
es
mov
jne
lret
cmc
dec
loope
in
mov
lcall
or
and
ss
xchg
rcl
rclb
pop
mov
xchg
mov
xor
xchg
loopne
xchg
pop
cmpsb
mov
lods
inc
ret
jecxz
ret
cwtl
pop
pop
mov
add
jo
push
mov
or
xlat
mov
dec
push
mov
addr16
jnp
jle
mov
in
mov
out
xchg
shll
lret
lret
cmovno
and
jmp
sub
bound
jmp
bound
aaa
adcl
xchg
hlt
cmp
inc
jg
jmp
out
jp
aad
or
dec
xor
fwait
jmp
jne
jmp
dec
mov
jl
pop
cmpsb
cmp
sub
bound
arpl
inc
cmp
push
adcl
push
cld
lahf
xor
imul
jns
mov
repnz
fadd
fists
adc
mov
mov
and
jle
popf
mov
rcr
adc
aas
push
es
sub
mov
insl
jae
incb
push
or
sub
add
jge
addr16
pop
xor
sbb
ja
and
cli
mov
jle
dec
mov
inc
push
lcall
int3
fdivs
mov
stos
mov
mov
imul
or
and
sbb
cmp
mov
shr
or
repnz
push
roll
jmp
mov
adc
fimuls
xchg
in
fildll
push
ds
pushw
fisubrs
jge
or
cmp
out
cmp
mov
scas
das
adc
xor
aaa
movl
aas
sbb
andl
sarb
lret
fldenv
clc
dec
cmpsw
inc
push
pop
test
sbb
xchg
push
rorl
push
subb
dec
cmp
imul
cs
xor
jle
sub
cmpsb
nop
testl
scas
and
xchg
les
into
jp
xchg
stos
push
mov
es
mov
sbb
and
mov
adc
mov
add
jg
int3
clc
mov
outsb
lret
negb
push
fs
mov
add
dec
pop
ret
scas
inc
xlat
dec
pop
jo
mov
shlb
movsl
pushf
lahf
adc
out
mov
pop
pop
add
test
mov
mov
dec
pop
out
mov
and
sbb
dec
sub
mov
jo
pusha
cmp
push
sbb
cmc
das
cltd
push
lds
mov
jo
gs
shrl
out
test
or
lret
mov
clc
stos
and
pop
jno
and
jmp
leave
xor
mov
or
loopne
add
sub
and
mov
jg
aam
sbb
xchg
dec
loopne
out
or
xchg
push
cmp
mov
enter
sbb
outsb
aam
sub
lods
in
in
sti
jae
xchg
scas
jmp
adc
popa
xchg
stos
mov
loopne
lock
add
mov
cltd
es
and
imul
and
repnz
jl
push
jns
push
sub
loopne
sarl
add
es
sub
sub
cmc
sbb
dec
jnp
bound
popa
pop
xchg
dec
dec
fadd
sbb
cs
push
dec
mov
mov
icebp
mov
hlt
mov
aas
xor
push
hlt
sbbl
push
pop
jge
cmpl
int3
mov
dec
mov
fdivr
int3
stos
movsb
xor
dec
test
cmp
xor
add
in
adc
xchg
jne
dec
ret
mov
in
jne
mov
push
dec
shll
movsl
fstpl
fistl
ja
arpl
cmp
sbb
sbbl
mov
lahf
dec
xchg
jns
inc
mov
pop
adcb
sbb
stos
test
popf
or
enter
loope
mov
sub
mov
mov
out
fiadds
cmp
add
mov
fildll
adc
jle
andl
and
aad
adc
mov
int3
cmp
in
ret
mov
xchg
loop
push
test
adc
cmpsl
pop
scas
popf
outsw
cmp
xor
sub
insl
inc
xchg
pop
cmp
insl
stos
lea
xchg
push
pop
xchg
xchg
jmp
shrb
fildl
xor
shr
push
cmp
xor
dec
adc
and
aas
mov
std
test
jle
pop
and
sub
gs
pop
into
lcall
mov
jp
orl
test
pop
out
mov
arpl
mov
lds
jo
mov
fsubrs
jb
jno
es
add
xchg
mov
imul
and
mov
inc
inc
lcall
mov
sti
daa
dec
sbbl
out
mov
mov
push
scas
nop
movsl
add
and
insb
xor
cmp
pushf
inc
sub
adc
inc
mov
cmp
mov
enter
xor
sahf
js
jp
or
leave
je
test
add
sbb
lods
pop
mov
mov
arpl
fdivrs
pop
xor
imul
aas
xor
xor
sub
outsl
outsb
fsubs
or
xchg
in
movl
popa
pop
cmp
fnstcw
outsl
mov
fmulp
xchg
and
fwait
mov
js
pop
ror
mov
push
movsb
fldt
es
jp
sti
pop
outsl
fistpll
dec
outsb
popa
pop
sbbl
or
cmpb
jmp
es
fs
shlb
femms
js
popa
push
add
arpl
scas
xchg
push
adc
cwtl
pop
aam
insl
mov
shrd
popa
jbe
pop
xchg
fcmovnb
imul
imul
sti
je
push
fisubl
test
dec
pusha
repnz
cmpsb
les
xor
jge
push
ja
jle
xchg
dec
mov
add
rcl
dec
and
push
ror
dec
rcrb
xchg
fcomp
int
aam
gs
jg
call
pop
mov
into
sbb
out
mov
pop
xlat
or
sbb
cltd
jg
push
lahf
mov
push
xchg
add
mov
and
sub
jp
stos
shlb
cmp
inc
add
dec
sbb
cs
sub
mov
sahf
or
imul
push
cli
rcl
adc
and
mov
cs
mov
cmp
push
lcall
je
dec
push
sarb
cs
fiaddl
negl
xor
je
xchg
aas
push
inc
mov
push
cmc
cmp
sbb
inc
sub
dec
adc
addb
pop
mov
jl
xor
xchg
pop
loope
jge
add
inc
into
outsl
inc
jecxz
aam
andb
rcrb
lock
dec
das
push
cmpsb
mov
and
in
dec
lcall
jp
ret
iret
mov
outsb
jnp
inc
mov
xor
mov
fisubl
repz
aaa
or
and
in
pop
stos
shr
js,pt
add
aam
dec
dec
cmp
lea
inc
sbb
sbb
cmp
fs
jle
sub
xchg
fldl
and
sahf
mov
mov
push
ds
movsl
out
out
gs
subl
inc
mov
dec
cltd
repz
xchg
mov
pop
pop
sahf
or
mov
add
in
adc
mov
pop
cli
xor
jmp
mov
aaa
mov
push
pop
movsb
xor
outsl
mov
mov
sbb
insl
and
mov
add
js
xchg
pop
push
lcall
inc
aaa
test
mov
nop
xchg
pop
movsb
ds
or
out
addl
lods
dec
aas
mov
mov
inc
sub
push
xor
push
rorl
lcall
enter
aas
fdivr
xchg
cs
adc
mov
loop
add
mov
push
and
dec
les
sbb
stos
jmp
xchg
repz
ja
adc
arpl
lock
jo
into
adc
fdivs
gs
push
jecxz
imul
or
fstl
rcrl
dec
pusha
stc
sub
xlat
or
pop
incl
sbb
add
sub
mov
jge
inc
in
pop
test
jg
das
sub
je
sahf
call
out
mov
inc
push
outsb
dec
dec
sysexit
loop
jecxz
xchg
dec
cli
ss
add
cmc
flds
bound
inc
push
inc
dec
enter
jnp
pop
mov
inc
pop
cmp
or
test
jae
mov
adc
lahf
leave
dec
lea
adc
pop
ds
xor
lret
mov
and
int3
add
push
cmp
test
inc
rorb
pop
dec
insb
sub
mov
jp
sub
scas
hlt
jbe
push
scas
fwait
push
mov
iret
xchg
pop
and
lret
ja
dec
enter
add
or
mov
mov
xlat
push
int
pop
test
mov
push
lock
add
fsts
mov
sahf
and
inc
xor
je
sub
jo
mov
ss
sbb
pop
add
xchg
das
sbb
inc
inc
rorb
cmp
and
ljmp
insl
lea
in
orl
sbb
cmp
xchg
push
mov
or
leave
adc
jne
xor
add
nop
fsubl
sbb
stos
jne
lock
movsl
mov
stos
mov
cmp
mov
arpl
pop
bswap
iret
bound
add
lock
ja
pop
mov
or
jmp
inc
dec
push
xchg
cmp
or
insb
adc
or
mov
popa
icebp
inc
mov
mov
stos
mov
xor
sbb
sub
aad
std
dec
push
cltd
jecxz
pop
jg
lret
push
pop
cmpsl
mov
adc
mov
gs
push
xchg
mov
pop
jnp
push
dec
lret
pop
xor
pop
cld
test
jl
xor
cli
dec
cwtl
arpl
adc
push
movsl
push
les
lds
xlat
clc
and
mov
std
inc
lods
arpl
xchg
lock
xlat
sbb
es
aaa
push
jge
jp
adc
cmp
addl
mov
ret
mov
sbb
xor
sub
cmp
sbb
lds
daa
incb
cwtl
mov
movsl
mov
push
xor
add
jge
fimuls
daa
addr16
stc
xchg
sub
xchg
das
mov
xor
imul
push
lds
jg
out
lea
sbb
xchg
or
das
jmp
popf
shr
into
inc
inc
xlat
popf
or
sub
pusha
mov
sbb
add
push
pop
int
movsb
lock
xchg
repz
add
jmp
daa
sbb
aad
aaa
sbb
mov
xchg
add
popa
std
cltd
jae
xor
mov
and
sub
mov
push
mov
push
add
add
xlat
sub
pop
add
mov
and
pop
push
sar
stc
sbb
xchg
mov
lds
inc
sub
or
lret
mov
out
push
pusha
dec
pop
mov
pop
mov
scas
in
mov
rolb
es
fs
mov
and
js
xchg
or
out
xchg
arpl
pushf
xor
sub
lret
inc
xchg
mov
sub
int
std
cmp
pop
push
dec
clc
pop
push
jg
adc
out
out
pop
xchg
std
lcall
xchg
and
add
or
xor
pop
or
cwtl
dec
rolb
sub
leave
push
imul
fwait
xchg
dec
repz
into
and
fdivrs
mov
cmp
jmp
lods
into
fstl
pop
outsb
insb
daa
movsl
movhps
jbe
mov
and
pop
jns
popa
and
or
fsubl
fldt
cmp
xchg
xlat
push
repnz
inc
push
or
xor
mov
push
and
xchg
movsl
jge
js
scas
xor
jnp
xchg
push
xchg
xor
pop
jae
sub
xor
std
xchg
test
test
imul
adcb
push
xor
xchg
ret
imul
repnz
in
jb
mov
dec
ja
cmc
and
adcl
sbb
cli
jo
sbb
dec
and
sub
cltd
imul
inc
add
add
xchg
dec
cmpsb
mov
or
scas
mov
je
mov
mov
into
pushf
jns
cmp
xchg
aad
scas
scas
sbb
push
sbb
inc
sbb
test
jb
xchg
inc
call
rcll
in
leave
inc
push
jge
ret
std
xchg
pop
das
shrb
call
xchg
loope
sbb
int
or
xchg
loop
arpl
and
subb
pop
adc
push
pop
mov
pop
sahf
pop
or
jecxz
jne
fsubr
jmp
push
mov
sbb
dec
out
pop
add
fdiv
ret
stos
dec
pop
movl
fidivl
lcall
fldt
aam
jno
mov
call
in
adc
adc
mov
imul
cmp
push
lock
inc
cltd
scas
cltd
sub
sub
mov
movsl
mov
fcom
mov
or
add
rolb
sbb
std
shlb
repz
mov
push
jp,pn
cltd
pop
or
mov
push
or
mov
pop
push
int
xor
dec
mov
notb
adc
addb
sbb
add
ret
call
pop
pop
stos
push
rclb
or
es
xor
push
or
and
cltd
cmovp
mov
ds
inc
inc
insb
cld
mov
ja
out
iret
mull
mov
stc
sbb
enter
add
repnz
fstps
cli
fistpll
mov
ret
stos
pop
popa
in
jl
lods
adc
arpl
mov
addr16
stos
leave
sbb
sbb
xor
je
mov
or
int
addr16
out
scas
and
and
leave
pop
xchg
frstor
or
jns
test
test
cmc
insb
mov
mov
xor
lds
in
outsb
pop
add
popa
sub
pop
sub
jl
cmp
ja
mov
dec
pop
imul
int3
sarb
dec
mov
mov
in
sub
cmp
or
push
xchg
mov
push
in
popf
sahf
mov
jo
fs
out
enter
das
fisubrl
mov
ret
add
and
and
xchg
or
jbe
fldl
lock
mov
sbb
data16
daa
push
add
mov
das
xor
ret
mov
push
sbb
adc
xor
popf
inc
in
mov
jl
sarl
je
mov
arpl
fs
dec
arpl
repnz
sbb
add
std
in
in
insl
cmp
mov
mov
adc
or
decl
fwait
pmaxub
pop
sub
jnp
mov
mov
mov
lods
dec
sub
mov
imul
cli
add
aas
mov
andb
xchg
or
loop
add
inc
sbb
jne
es
cltd
jg
xchg
es
outsl
sub
sbb
in
leave
clc
in
mov
shl
cmp
in
fsubrs
lods
imul
mov
gs
dec
xlat
into
insb
int3
mov
xor
sbb
add
out
push
cld
jno
ss
xor
mov
in
pop
jge
xor
xchg
test
jae
mov
daa
sbb
stos
das
xchg
or
xchg
jno
mov
and
push
dec
mov
adc
sub
out
shll
aad
adc
inc
mov
lret
mov
into
jle
mov
orl
mov
int
adc
clc
mov
mov
lcall
xor
jbe
dec
mov
loopne
fbld
sub
push
rolb
pop
xor
iret
adc
push
ret
or
push
mov
inc
jp
cli
sbb
mov
gs
add
xor
adc
scas
cmpsl
lret
stos
sbb
cs
je
and
cmp
jecxz
ja
pop
fdivl
jge
test
test
push
pop
dec
aaa
jne
out
push
sub
daa
push
loopne
mov
lahf
into
push
js
popf
or
es
pop
xor
mov
loop
jp
sar
push
inc
ljmp
imul
jmp
mov
sub
adc
xor
mov
rorl
mov
adcb
test
push
das
ret
cmp
xor
fiaddl
xchg
lds
sahf
push
gs
pop
push
dec
mov
pop
in
and
lret
mov
lock
insl
mov
sbb
cld
nop
add
nop
push
fwait
popf
jae
pop
pop
lock
xchg
shrb
sar
aad
loopne
loopne
push
test
dec
mov
lds
xchg
push
imul
and
imul
fs
adc
pop
mov
sahf
sbb
mov
rclb
cs
aad
test
jne
xor
dec
xchg
mov
push
cmp
push
fcompl
jecxz
push
in
test
popf
pop
lock
jp
aad
sub
dec
int
and
inc
sti
es
push
imul
pusha
in
or
pusha
or
int
call
lds
rol
imul
lds
xchg
int3
xchg
sarb
xchg
cmp
push
es
or
and
or
loop
rcll
aas
fbld
and
cmp
jno
mov
jb
add
mov
das
subb
sub
and
or
sub
std
jb
lods
dec
dec
mov
add
inc
call
jmp
fisttps
ss
fcomps
jl
popa
ret
cwtl
fwait
or
inc
mov
push
xchg
int
xchg
push
jnp
push
mov
mov
lahf
cmc
xor
mov
adc
xor
subb
push
adc
sti
jge
and
jge
fistpll
movsb
dec
or
ret
aaa
lret
test
adc
insl
adc
mov
xchg
mov
or
xchg
and
sbb
inc
pop
cmp
fistps
xor
xchg
xchg
movsb
mov
add
push
mov
mov
fnstenv
mov
lods
lods
lea
aas
movsl
mov
out
cmp
push
aam
das
inc
and
clc
into
sub
mov
dec
loopne
jae
faddl
in
js
adc
dec
ret
das
sub
lock
adc
dec
sbb
fwait
dec
jo
sbb
icebp
popa
imul
lret
cs
inc
inc
enter
xor
or
xchg
jle
jnp
outsb
sub
sub
mov
test
adc
or
sbb
test
and
ljmp
jge
push
mov
mov
enter
je
dec
ret
loop
push
mov
lds
scas
out
sbb
mov
cmpsb
daa
push
arpl
xor
mov
call
jecxz
mov
push
adc
daa
rolb
int
int3
dec
xor
push
andl
scas
adc
sub
inc
test
scas
inc
dec
and
xchg
ljmp
xchg
jp
add
scas
or
or
pop
cwtl
cmc
fcmovnb
shl
xchg
out
push
lcall
lock
cmp
sarl
jl
movsl
insb
adc
repz
mov
mov
fidivrl
inc
xchg
pop
test
subl
jo
jmp
jl
or
ss
subl
push
lods
jae
enter
sub
mov
push
iret
xorb
arpl
or
jo
sub
call
sbb
cmp
or
or
pop
sub
push
sbbl
in
adc
mov
ss
xlat
pop
test
fcmovb
mov
imul
int3
clc
pop
je
sub
fldenv
stc
jb
push
cld
and
shl
rolb
push
mov
jg
mov
jge
dec
add
lcall
jb
adc
insb
mov
jmp
dec
xor
xor
bound
dec
insl
inc
daa
clc
xchg
addr16
cli
cmp
or
xor
jnp
cli
int
movb
mov
jbe
cmp
or
cmp
in
push
and
out
xor
lock
jmp
push
lods
sub
aas
pushf
scas
lret
push
test
sub
loope
jge
push
hlt
cmc
shr
mov
xor
rcrb
ret
push
inc
xor
mov
xor
sbb
es
mov
xor
iret
cs
movsb
sub
stos
in
je
clc
xchg
push
stc
fmuls
mov
scas
shll
enter
mov
add
sarb
jae
add
cwtl
mov
xor
sub
jl
push
popa
push
sub
ljmp
hlt
xchg
sbbb
jo
mov
jae
inc
movsl
popa
les
mov
dec
pop
jg
or
frstor
data16
aaa
aaa
xchg
and
pop
fbstp
push
sub
cmp
out
adcb
shlb
mov
mov
out
mov
cmpsb
pop
sahf
aad
push
jl
push
insl
iret
mov
mov
jle
shlb
ret
cwtl
shrb
sbb
popa
pop
daa
mov
push
pop
inc
inc
incb
and
add
adc
push
xchg
adc
sbb
ja
lahf
popa
or
andb
add
xchg
mov
mov
enter
les
push
xchg
cli
mov
pop
cmpsb
push
cmpsl
aam
cmpsl
aaa
es
dec
pusha
js
test
data16
lock
jg
test
mov
repz
xchg
jae
repnz
lcall
mov
xor
mov
jmp
hlt
jb
sub
dec
fsubrl
xlat
pop
std
dec
mov
gs
and
push
in
pop
lahf
sub
cltd
jnp
mov
jne
shll
cmp
movsb
sub
ss
xor
inc
into
cmpl
aaa
sahf
icebp
mov
cmc
inc
cmp
orl
dec
fists
pop
sti
js
xchg
adc
jae
mov
xor
adc
ljmp
pusha
lock
loopne
pop
add
inc
jecxz
jne
sahf
lds
outsb
sti
cwtl
fisttps
stos
sub
subl
incl
mov
fmull
out
xchg
adc
aas
xchg
mov
fmuls
ret
mov
test
mov
jns
cwtl
dec
sbb
test
pop
adc
imul
pop
mov
xchg
aaa
cmp
pop
outsb
add
in
fmul
fbld
cmpsl
insl
daa
cltd
ret
pusha
lock
into
fisttpl
jg
inc
into
mov
push
outsl
jno
mov
mov
dec
or
jmp
mov
in
test
mov
xor
mov
and
push
paddw
sbb
adc
ficompl
jecxz
mov
hlt
ljmp
xor
cs
roll
or
nop
lea
or
imul
cld
mov
adc
or
nop
insb
aad
dec
pushf
in
pop
mov
insb
xlat
sar
fs
jp
push
stos
ljmp
sbb
lods
sbb
jne
out
ret
xchg
dec
inc
rcl
sbb
dec
cmp
aaa
xchg
out
mulb
pushf
adc
insl
lret
fxch
push
inc
pop
xchg
pop
leave
inc
ret
dec
int3
jo
lcall
imul
fdivs
mov
mov
test
fcmovnu
jp
das
pusha
into
in
cmp
mov
dec
cmp
je
xchg
sti
dec
pop
mov
stos
aad
xor
dec
movsl
imul
ds
jns
push
jns
mov
mov
sbb
sub
push
cmp
and
dec
ret
lret
orb
pop
fildll
setp
lods
mov
dec
push
aad
lahf
adc
inc
popf
mov
pusha
sbb
jns
scas
or
cmp
push
xor
pushf
lahf
daa
push
cmp
mov
pop
movsb
xor
popl
mov
or
push
arpl
xorl
shrl
pop
mov
popa
add
push
pop
and
jb
cmpb
out
lret
cltd
dec
push
addr16
adc
fisttps
cwtl
jle
addl
test
mov
subb
mov
movsb
ljmp
out
cmpsb
mov
nop
je
and
mov
bound
mov
outsl
push
scas
fwait
es
inc
mov
inc
mov
imul
outsl
sub
jmp
scas
mov
and
mov
lock
lret
fwait
cmp
dec
testb
stos
cmp
mov
mov
adc
out
fcomi
xchg
pop
mov
fsubrs
mov
cmc
mov
mov
bound
ds
popf
pushf
mov
cli
pop
test
test
adcb
xchg
push
stos
or
mov
cmp
pop
jle
jae
adc
mov
inc
insb
add
adc
rclb
shrl
fsts
or
movsb
je
pop
mov
enter
mov
push
lea
jp
push
inc
in
outsl
xchg
je
scas
enter
cs
cmp
iret
xor
add
call
mov
mov
int3
dec
mov
lock
push
jge
jle
jbe
mov
xchg
dec
mov
jg
cli
or
push
add
and
jg
xlat
daa
lahf
inc
sbb
lea
insb
xchg
je
stc
int
bnd
xchg
cmp
fwait
leave
in
push
cmpsl
pop
adc
lds
lock
jl
fidivs
cwtl
add
xchg
scas
in
mov
sub
cmc
rorl
adc
xchg
icebp
cmc
and
or
pushf
cs
test
push
push
jo
sub
ret
xor
daa
aam
and
or
fwait
jmp
std
dec
cltd
jg
and
xchg
int3
mov
mov
xor
jmp
dec
dec
jae
fsts
mov
push
cltd
pop
lock
xlat
pop
dec
dec
cwtl
and
mov
aas
pop
sub
mov
in
sub
jecxz
cwtl
inc
push
std
sti
mov
pop
dec
aad
orb
and
cwtl
cmp
idivl
es
testl
sbb
cmp
ret
push
mov
adc
push
inc
xchg
flds
push
pop
sahf
or
sti
std
xchg
inc
mov
mov
mov
mov
jbe
mov
push
cmp
sub
cmp
push
lcall
lods
fsubrl
xchg
ds
jle
out
sahf
cmc
jnp
sub
aas
mov
adc
fwait
fs
test
movsl
mov
repnz
sbb
xchg
push
push
or
cmp
das
adc
out
mov
or
jmp
xchg
rcll
sahf
and
jl
push
push
or
mov
or
inc
pop
cwtl
mov
xor
jg
lret
imul
insb
inc
sub
in
or
adc
mov
hlt
clc
mov
ja,pn
imul
or
and
cs
xchg
dec
icebp
sbb
arpl
mov
out
xor
nop
popa
icebp
add
mov
mov
mov
outsl
sub
out
fwait
mov
push
jmp
test
mov
cmp
adc
fs
mov
adc
cmp
push
cmp
jl
loop
mov
mov
leave
jnp
push
inc
pusha
adc
pop
cmp
loopne
popa
out
mov
outsb
push
arpl
cwtl
dec
add
gs
mov
xchg
sbb
fmulp
mov
mov
jns
xchg
jo
les
add
cli
subb
push
cwtl
aad
dec
sbb
fistpll
jne
dec
gs
mov
jno
addr16
hlt
mov
pop
sub
mov
or
inc
sub
shlb
push
mov
add
jp
call
ret
mov
xchg
inc
or
xor
out
xor
mov
dec
adc
test
add
mov
xchg
stos
xor
push
push
inc
in
js
bound
les
lea
lock
push
add
nop
lock
dec
mov
in
sbb
add
hlt
and
jae
mov
sahf
inc
cmpsb
sti
jne
push
std
cld
sub
aad
xor
xchg
imul
rolb
push
mov
fldenv
push
dec
sbbl
cwtl
dec
pop
xor
mov
adc
cmp
inc
jmp
xor
lcall
testb
das
inc
lret
sub
pop
and
inc
jle
test
imul
test
mov
mov
add
pop
cwtl
lahf
push
or
xchg
mov
pop
rol
dec
and
xor
cmp
jno
testl
cmp
stc
repnz
xor
fidivrl
jecxz
inc
lcall
scas
xchg
imul
or
ss
xchg
or
addl
int
and
subb
in
fs
ror
jl
loop
push
cmp
add
fadd
cmp
adc
mov
jnp
hlt
mov
dec
mov
and
call
lahf
ret
adc
ret
mov
xor
add
icebp
sub
enter
xor
xor
les
and
sbb
jo
popf
jl
sbb
or
mov
dec
mov
les
add
scas
ffreep
lods
shll
push
icebp
mov
jecxz
xlat
cmp
inc
adc
sbb
inc
sbb
in
pop
in
mov
or
int
repz
outsb
hlt
jg
lret
jmp
fimull
dec
inc
mov
imul
inc
aas
add
imul
xchg
es
xchg
mov
push
test
jbe
inc
mov
mov
mov
jge
imul
mov
addr16
movsl
cmp
xchg
js
ljmp
out
mov
jg
cmp
adc
mov
mov
in
jne
fmuls
inc
enter
scas
pop
pushf
push
inc
stc
pop
jno
insl
xchg
xchg
fcmovnb
dec
sub
mov
add
inc
xchg
adc
sub
outsl
push
xchg
mov
pop
stos
lds
mov
test
stc
rcrl
jnp
sbb
pop
test
call
lock
push
lret
movb
add
cmp
adc
jns
xchg
xor
xchg
inc
test
dec
rol
xchg
cmc
sbb
das
push
jns
mov
add
dec
incb
les
insl
mov
popf
lahf
pop
lods
cmp
lock
mov
out
lret
mov
ja
ficoml
in
gs
jae
test
out
clc
repz
outsl
loop
out
or
mov
xchg
or
fmul
pop
fnstsw
mov
stc
push
in
fmulp
aas
in
pushf
sbb
mov
xor
cmp
out
leave
rol
inc
mov
push
push
std
test
mov
inc
loop
enter
adc
loop
pop
cmp
jae
sub
les
data16
iret
dec
fs
inc
in
sbb
cmp
push
pop
sbb
sbb
jge
xor
jge
and
xor
or
call
pop
jl
jnp
or
jecxz
add
dec
iret
shrl
xchg
icebp
mov
shll
and
mov
push
rorb
inc
fnstenv
rorb
mov
add
call
lods
popf
and
xchg
inc
leave
sarl
push
loopne
push
or
iret
fimull
fwait
or
or
imul
and
pop
in
in
mov
mov
sub
jmp
mov
stc
cmp
xchg
mov
loope
mov
xchg
fidivrs
mov
fs
push
rcrl
mov
aad
cmpsb
outsb
adc
hlt
sbb
mov
xor
arpl
ss
dec
rorl
lret
jg
sbb
or
mov
jecxz
lock
push
cmp
iret
arpl
fs
dec
sbb
aad
inc
fbstp
mov
loopne
test
dec
jbe
lret
pop
jnp
jne
into
fsubrs
add
add
or
push
cmp
pop
pop
mov
addr16
xchg
cmpb
jno
test
sub
popf
pop
stos
or
xorl
jge
xor
push
daa
cwtl
shll
and
shl
cs
icebp
stc
fldt
stos
dec
mov
adc
xor
cmp
movsl
fsts
inc
arpl
outsl
jnp
mov
lret
jns
cmp
lahf
push
sbbl
jae
out
test
and
mov
popa
stos
jge
pusha
or
sub
lods
cmpsb
lock
test
sub
vunpckhps
adc
insb
pop
cwtl
dec
in
iret
xchg
rcl
scas
lret
push
sbb
scas
and
adc
cmc
sbb
out
sub
seto
mov
test
shll
mov
mov
cs
pop
mov
add
dec
sub
data16
jbe
leave
pop
pop
test
push
jg
aam
push
jno
and
jo
std
push
shll
lea
lods
or
lcallw
pop
and
ret
sbb
inc
xchg
leave
dec
xor
ret
xlat
cmpb
xchg
jg
fwait
mov
call
jl
leave
mov
mov
sub
cmp
shrl
sahf
fsubrs
sbb
inc
mov
dec
mov
js
das
xchg
xchg
test
mov
in
cs
stc
es
mov
loopne
sub
xchg
push
inc
mov
xor
pushf
vmread
or
xchg
mov
adc
test
cmp
fstps
outsb
jg
andb
sti
push
jmp
xchg
pop
inc
pop
push
mov
dec
test
hlt
mov
cwtl
mov
jp
push
scas
outsl
jle
xchg
and
into
mov
insl
mov
xchg
jo
rorl
push
xor
stos
and
subb
push
dec
shrb
test
shll
mov
loopne
push
sub
push
jo
mov
incb
testl
pop
jl
and
lcall
mov
andnps
mov
js
ss
es
loope
jae
loopne
adc
xor
inc
sub
fwait
dec
add
or
xchg
mov
mov
insl
mov
lods
test
scas
pop
mov
in
pop
dec
xchg
jae
clc
mov
shrl
inc
xor
fdivs
dec
ret
cmp
jo
popf
in
jns
xor
test
mov
mov
sub
mov
inc
mov
scas
mov
test
xchg
and
loop
cld
ret
mov
pop
inc
daa
sbb
ss
fcomps
or
xorb
jbe
call
cmc
sub
and
add
bound
push
test
cld
push
cmp
ljmp
int3
idivb
dec
mov
popf
lods
out
js
adc
xor
sub
mov
cmp
inc
dec
lods
sub
lds
fndisi(8087
jae
arpl
push
cmpsl
inc
aas
lret
mov
mov
dec
adc
or
pop
into
xchg
into
cld
or
mov
sarb
jmp
mov
sbb
ss
call
insl
popf
xlat
test
cmc
lods
sub
mov
imul
inc
arpl
pop
push
popa
xlat
loopne
call
addl
push
or
iret
xchg
imul
fnstcw
pop
pop
js
lock
push
cmp
mov
aam
jmp
mov
inc
pop
ljmp
pop
push
cmp
popf
out
jo
sub
sbb
or
or
adc
jne
fsubp
pop
mov
xor
call
divl
xchg
dec
lock
xchg
scas
loopne
std
cmp
stc
cmpsl
push
jg
inc
je
jge
xchg
mov
fidivrs
std
jb
mov
or
xor
out
bound
cmpsb
lret
push
cmp
add
mov
aam
xorl
jb
jg
inc
sarl
dec
dec
push
push
mov
fnstcw
or
out
sub
add
mov
int3
cltd
fwait
xchg
or
mov
cmpxchg
cmp
cmc
mov
scas
bound
movsb
in
lret
cmp
cmovne
ret
inc
hlt
gs
push
jle
push
int
das
int3
insl
push
dec
or
mov
jmp
xor
xor
sahf
mov
dec
pop
imul
inc
or
adc
mov
scas
dec
mov
add
inc
stc
mov
pop
lods
inc
testl
push
pop
inc
cmp
shlb
and
mov
jae
pop
add
adc
leave
dec
fnsave
cmp
sbb
lods
psrlw
cmp
xchg
jmp
lcall
jo
sbb
push
call
cs
lods
or
mov
test
inc
enter
pusha
lcall
pop
and
jecxz
adc
lret
popa
lock
xor
mov
unpcklps
data16
inc
sub
mov
sub
add
xor
imul
dec
jbe
fcoml
ljmp
mov
lods
shrl
cmp
inc
test
ret
xchg
inc
push
hlt
xchg
push
sbb
mov
push
icebp
xor
addr16
aad
inc
movsl
and
add
jmp
pop
fwait
ret
dec
int
jp
enter
aaa
jae
jle
cmp
pop
fcomip
pop
cmp
mov
mov
test
test
int
jae
leave
xchg
cmp
int
es
lock
jle
xchg
jnp
mov
mov
dec
in
push
inc
mov
push
xor
mov
mov
mov
cmpsb
out
push
add
inc
jmp
sti
sbb
aaa
iret
cld
push
loopne
leave
imul
adcl
imul
push
mov
fwait
sarb
mulb
jb
cmp
mov
in
push
pop
cltd
dec
xchg
mov
jmp
jo
aas
int3
dec
push
fsubrp
jns
xor
pushf
push
jmp
sbb
and
int
add
or
jp
ret
jle
push
mov
inc
jnp
xchg
jmp
es
cld
sbb
pop
mov
and
mov
dec
daa
dec
dec
outsl
sub
cmp
int3
bound
hlt
lret
mov
xlat
jno
sub
xchg
fnstsw
movsb
sbb
mov
shl
jb
lea
pop
jno
and
jnp
mov
cltd
shl
jb
mov
pop
sbb
out
cwtl
mov
sti
mov
mov
cli
sti
outsl
or
sahf
inc
clc
adc
adc
pop
dec
add
ds
testl
jmp
xor
cli
mov
add
inc
adc
jmp
mov
out
sbb
ss
xor
sbb
sbb
xchg
mov
inc
loopne
mov
jnp
pop
jb
mov
bound
push
mov
testl
shlb
in
stos
stos
sti
and
sbb
aam
pop
test
shrb
xor
jg
imul
cli
mov
fucomp
xchg
lret
arpl
add
ljmp
movsl
icebp
inc
cmpsl
sbb
aas
stc
mov
testb
mov
lret
jmp
xchg
cld
outsl
pushf
shrl
lea
inc
cmp
dec
in
stos
bnd
iret
and
mov
movsb
sub
push
iret
inc
nop
les
ret
mov
jno
lock
popa
adc
ret
popf
jmp
lods
jecxz
dec
inc
loope
adc
push
pop
add
xor
test
mov
inc
aaa
mov
enter
pop
jmp
cmp
and
cmp
xor
sbb
and
ss
scas
in
dec
sbb
int
insl
rclb
test
or
dec
js
mov
jnp
lods
pop
or
jle
in
in
enter
or
and
add
in
xor
incb
scas
mov
testb
sbb
dec
test
pop
stc
scas
xchg
ret
inc
pop
arpl
mov
les
and
sub
mov
sub
jecxz
cmp
popa
cmp
lahf
pop
adc
stc
inc
mov
or
inc
lret
pop
fimuls
inc
inc
pop
cmp
rcr
lret
pop
orl
add
sbb
and
mov
incl
incl
pop
sti
aaa
pop
mov
es
xlat
cmp
movsb
sarl
sbb
cmp
mov
lret
dec
xchg
inc
loop
pop
mov
ss
jbe
popa
sub
jecxz
hlt
aaa
in
adc
lock
bound
pusha
or
std
addr16
mov
mov
fadd
orl
dec
cmp
xlat
xor
movsl
stc
mov
inc
xchg
xchg
mov
or
aad
repz
adc
loop
add
out
jns
mov
lret
dec
aam
mov
xor
jnp
shr
xor
mov
mov
pop
into
xorl
sti
xor
aam
cmp
jbe
cmpb
inc
ljmp
mov
ret
xchg
sbb
lock
enter
jg
insl
hlt
xchg
das
lock
lahf
jg
sbb
sti
and
inc
cmp
lea
gs
fsub
cmp
mov
mov
into
dec
xchg
in
jmp
test
inc
xchg
or
sbb
xor
dec
push
xchg
aaa
jno
iret
mov
lds
mov
mov
pushf
jnp
addb
faddp
dec
push
enter
mov
inc
xor
iret
cmp
arpl
jecxz
ljmp
sahf
sub
ret
push
xchg
cmpl
jecxz
xor
xlat
inc
decl
sbb
xlat
inc
and
mov
sbb
pop
jb
cs
mov
sbb
or
inc
nop
inc
add
ret
repnz
xchg
test
mov
subb
pushf
addl
xor
stos
mov
sarl
sub
das
mov
jnp
in
cli
mov
rcll
pop
lahf
cmpsb
and
filds
shll
out
movsb
gs
call
push
ss
mov
xchg
jae
pop
jbe
pop
add
out
jnp
cwtl
aas
adc
sub
cmc
mov
std
ja
push
stos
popf
daa
fidivl
aas
das
xor
cli
mov
cmp
movb
stos
repnz
dec
fs
loope
mov
cmpsl
pop
add
or
repz
aad
sbb
test
push
outsb
jnp
ljmp
fisttps
push
xchg
pop
mov
pop
inc
dec
xor
xorb
and
xor
and
fcmove
into
mov
mulb
lods
in
sbb
mov
xchg
pop
in
dec
bound
in
daa
push
jge
loopne
jo
add
mov
cmpsb
js
adc
movsb
sbb
repnz
push
sahf
and
mov
arpl
jo
inc
mov
pop
inc
ret
push
adc
sub
xchg
xor
daa
ljmp
sti
inc
xor
push
mov
pop
sub
and
aad
push
loopne
leave
mov
popf
rorb
scas
jae
test
xlat
clc
jecxz
or
enter
popa
aad
data16
adc
cmp
lahf
jmp
sti
mov
cmp
or
or
out
sub
pop
mov
add
sbb
cmp
lcall
shrb
pop
scas
inc
pop
adc
cli
xchg
nop
sub
ss
mov
int
xlat
adc
in
mov
shrb
inc
pop
fwait
inc
pop
mov
push
xchg
push
cmp
dec
ss
mov
outsb
int
add
cmc
movsb
push
add
out
mov
ret
sbb
pop
xchg
inc
lret
push
inc
pop
mov
mov
in
clc
into
xchg
pop
push
push
mov
shr
xlat
mov
adc
rol
or
lods
stc
test
stc
and
clc
or
inc
loop
js
int3
adc
jb
andl
negb
add
push
and
jp
arpl
sahf
fucom
inc
insl
inc
aaa
fcoms
into
addr16
js
outsl
inc
loop
sub
outsb
jge
mov
jecxz
divl
inc
std
mov
mov
dec
adc
xlat
push
int
mov
hlt
mov
test
test
fidivrl
fst
add
push
icebp
fistpll
inc
xchg
fdivrp
imul
mov
add
enter
cmp
push
mov
mov
push
xor
mov
insb
pop
or
shrb
popf
popa
pop
push
ret
lock
mov
push
inc
fsubl
add
imul
cwtl
aam
rcll
push
adc
mov
or
jl
xchg
mov
mov
pop
dec
in
mov
push
cmp
sbb
fwait
mov
pop
rorb
push
cmp
inc
or
in
jns
push
and
inc
xlat
ja
out
fistl
int
cmpsb
dec
shrb
scas
adc
or
xchg
jg
jb
xor
test
and
dec
les
sti
into
dec
jge
cli
jmp
sti
outsb
std
mov
pop
pop
arpl
mov
testb
push
insb
jbe
jns
aad
pop
popf
test
stos
divl
pop
xchg
sti
dec
sub
dec
xchg
mov
imul
daa
cs
push
fisubrl
pushf
xlat
fidivrl
sub
mov
repz
lret
orl
je
sub
xchg
insb
adc
push
cmp
dec
dec
ret
sub
mulb
cld
jmp
cli
pusha
fs
jle
aas
popa
push
and
jae
popf
iret
insl
enter
bound
scas
mov
test
stc
loope
cld
adc
fistpll
inc
fnstcw
mov
in
nop
mov
outsb
xlat
popa
pushf
xchg
notl
pop
cmpsb
bound
mov
push
cmp
sub
rcrb
sbb
pop
jmp
shlb
adc
mov
aaa
jns
jno
roll
mov
movsb
aaa
sub
lock
jo
jg
add
mov
add
addr16
fadd
mov
outsl
pop
les
loop
outsl
in
sub
fwait
mov
sub
mov
inc
push
pushf
push
pop
cmp
cmc
xchg
pusha
outsb
shll
sub
xor
pusha
sarb
lods
pop
pop
ds
push
in
hlt
mov
daa
popf
movb
pop
and
xor
add
or
sbb
enter
or
jbe
mov
call
repnz
mov
in
lcall
js
dec
pop
mov
ret
cmc
fsubs
mov
lahf
jbe
inc
push
jb
adc
mov
ljmp
mov
shlb
aas
lods
push
add
dec
incb
mov
jne
pop
clc
fisubl
out
repnz
adcb
and
xor
out
sbb
insb
cli
not
imul
push
popf
sbb
cmp
andl
cmp
xchg
test
dec
adc
pop
inc
enter
dec
outsb
push
xor
adc
int3
outsb
dec
jp
call
sub
fcompl
xor
cld
jne
and
adcb
xchg
arpl
adc
inc
rcrb
mov
pop
pop
divb
pop
push
jbe
inc
sbb
mov
dec
lock
testb
movsl
outsl
and
iret
inc
loop
push
cltd
fwait
push
add
mov
test
or
in
jg
clc
jnp
sarb
mov
les
push
and
cwtl
rcll
xor
jne
out
sub
sub
pushf
sub
flds
cmp
jb
ret
sub
pop
dec
ret
inc
stos
scas
or
into
inc
scas
xchg
push
inc
cmp
mov
add
mov
ja
in
int3
in
js
sti
cltd
movsl
mov
sub
sub
push
hlt
jle
arpl
mov
inc
dec
pop
int
xlat
or
cmp
mov
in
sbb
fisttpl
mov
xchg
and
arpl
mov
clc
je
mov
jmp
aaa
pop
stos
add
in
stc
push
gs
std
add
sti
mov
inc
xchg
out
sbb
or
lods
and
das
mov
xor
outsb
imul
lret
adc
xchg
push
rol
mov
push
sub
mov
xor
and
adc
sub
mov
shll
insb
int3
arpl
sahf
iret
inc
ljmp
into
sahf
xchg
jl
and
mov
pushf
pushf
cmpsb
mov
and
push
cli
ljmp
mov
cmpsb
scas
repz
mov
and
fisubs
mov
shll
xor
xor
push
imul
int
inc
dec
push
lock
adc
xor
dec
repnz
pop
std
mov
push
lods
sub
lock
sti
push
pop
arpl
inc
mov
flds
in
or
bnd
xchg
mov
mov
xchg
mov
push
and
in
mov
addr16
xchg
clc
lods
arpl
xorl
pop
jecxz
sub
inc
push
inc
fsubl
push
mov
aaa
sahf
cwtl
add
mov
sahf
notb
fistl
out
push
jno
xchg
mov
xchg
mov
lods
xlat
and
mov
movsb
or
mov
in
and
cwtl
shl
int
mov
push
pop
lret
subb
dec
and
cli
pop
add
js
pop
dec
sahf
pop
bound
cmp
xor
add
int3
aas
sub
stc
sbb
pop
xor
xchg
push
sbb
in
mov
xor
lcall
sub
in
dec
or
roll
xchg
and
pop
call
loop
jo
out
fidivl
sub
jecxz
jmp
mov
or
and
xchg
inc
in
shll
call
or
mov
shr
mov
xor
pop
addr16
jle
cmp
fcoml
mov
push
or
push
test
das
mov
mov
xchg
jns
idivl
cli
sbb
and
cwtl
movsb
fcoml
xchg
lods
jb
outsb
add
push
mov
fldl
dec
xor
repnz
stos
iret
out
test
or
or
sbb
adc
mov
mov
xchg
ljmp
lret
popa
lret
bound
push
inc
sbb
in
xor
aaa
or
xchg
shll
scas
cmc
in
call
jno
inc
xchg
cmp
pop
pop
sbb
sub
lahf
sbb
call
loopne
mov
in
test
jb
gs
in
stos
xor
add
sti
push
add
mov
add
in
jb
icebp
jle
inc
call
fsubrl
jne
add
inc
mov
mov
enter
or
add
adc
ds
jmp
xchg
int
push
enter
lret
mov
femms
fsubp
inc
dec
and
dec
gs
int3
mov
out
xchg
ficoms
mov
mov
leave
xchg
mov
ja
pop
sbb
and
enter
ret
jns
push
cs
mov
xor
jae
leave
jl
and
fdivr
jp
sti
inc
jno
sbb
pop
cltd
jmp
xchg
in
dec
cs
mov
pop
fimull
sub
mov
stc
enter
sub
pusha
and
add
sbb
mov
loop
nop
je
sbb
push
daa
sub
or
sbb
add
add
sbb
mov
imul
mov
xchg
repnz
call
or
test
out
lea
insb
or
and
aaa
arpl
rclb
sbb
xchg
mov
sub
xchg
push
xchg
push
jno
lret
icebp
push
ffree
push
cmc
ljmp
das
jb
pop
lahf
dec
popf
fs
or
jg
mov
jo
sbb
or
cmp
cltd
mov
xor
out
dec
js
add
push
sbb
xor
mov
jecxz
scas
fwait
push
ljmp
mov
fists
push
mov
outsl
mov
js
pop
leave
add
pusha
add
inc
pop
ffree
mov
mov
dec
sub
push
ret
cmp
mov
dec
xor
push
adc
movsb
mov
mov
pop
mov
imul
mov
mov
clc
pop
mov
out
mov
mov
jecxz
and
sbb
jne
dec
rcrb
in
jnp
lock
ficoms
jnp,pt
test
sarb
sbb
mov
adc
mov
sbb
push
and
jg
pop
cmp
jg
das
sbb
lods
mov
cmp
data16
cmpsl
in
insb
jecxz
nop
and
jp
jno
clc
jb
popf
int
pop
ficompl
push
and
dec
push
test
pop
push
add
bswap
push
arpl
mov
inc
addr16
fcomp
jnp
lds
mov
add
lods
mov
adc
and
aas
into
je
gs
inc
das
jae
push
mov
es
loop
testb
stos
fsubl
div
mulb
inc
xchg
lds
mov
and
lahf
sahf
scas
mov
and
xchg
sub
sbb
adc
add
inc
faddl
xor
fldt
mov
sti
in
mov
mov
pop
dec
fnstsw
jl
inc
mov
adc
cmpb
sub
push
loop
daa
inc
rorl
lahf
scas
pop
cmp
pop
cmc
add
je
leave
test
or
outsb
push
xchg
cmpsb
push
cmpl
pop
lea
xor
sbbl
lret
jg
push
xlat
in
call
push
dec
mov
subb
cwtl
jecxz
adc
sbb
add
paddw
daa
popf
jle
loop
paddsb
aam
push
cmp
call
loopne
add
jp
mov
cmp
mov
ds
notb
sbb
cmp
movsl
push
mov
shll
mov
repz
jge
lods
adc
dec
movsl
or
push
lret
clc
or
rcrb
push
mov
popf
cld
ja
fs
dec
cmp
fisttps
scas
mov
push
jne
mov
test
mov
fildl
and
aaa
test
cmp
test
outsb
fcomps
outsb
and
mov
mov
inc
pusha
daa
add
push
push
aad
add
or
jecxz
sti
cld
adc
pop
sub
and
cmpsb
and
dec
in
leave
or
pop
mov
mov
sbb
mov
test
mov
mull
icebp
jmp
xchg
aas
mov
xchg
icebp
jo
imul
test
adc
mov
and
or
aaa
sub
dec
insl
push
sahf
rclb
push
xor
mov
hlt
mov
add
lcall
shrl
ja
dec
cmc
test
xor
movsl
cmc
dec
bnd
add
scas
aad
mov
mov
iret
shl
mov
testl
das
and
mov
cmp
mov
sbb
mov
xor
aas
push
sub
scas
cmp
xchg
fcoms
xor
out
fidivrs
xor
fwait
test
and
push
add
jo
xchg
in
pop
add
mov
call
adc
adc
mov
loopne
popf
pushf
dec
sti
xchg
ret
pop
stos
mulb
or
out
ja
sarl
mov
clc
sub
add
push
es
xchg
rcl
lahf
push
inc
xor
cmp
jno
sub
clc
loope
int3
xchg
fwait
mov
rorb
and
cli
wbinvd
lock
ret
mov
or
pop
mov
int
and
add
adc
std
xlat
xchg
xchg
and
mov
push
in
popa
sbb
mov
je
popl
int3
push
notb
ss
int
sub
and
ret
mov
repnz
cmp
sub
adc
adc
add
push
sbb
or
adc
inc
push
movsl
scas
jae
xor
nop
int
cmp
stos
repnz
mov
lds
int3
ror
and
add
pop
rcl
dec
sbb
cli
iret
xor
mov
mov
pushf
push
cltd
push
inc
mov
loop
xor
repz
test
or
mov
pop
movsb
aas
rcrl
pop
xor
cmp
ret
in
stc
adc
call
jecxz
pop
and
movsl
rolb
inc
cmp
dec
inc
jns
mov
daa
cmpsb
cvtps2pd
sub
push
or
mov
loop
outsl
in
gs
jae
int3
mov
ret
repnz
outsb
js
into
add
mov
push
xchg
sub
and
out
jb
xor
push
scas
cltd
loopne
mov
mov
bound
adc
repnz
mov
pop
add
data16
adc
xchg
adcl
sbb
sbb
fistpl
cmc
test
scas
and
dec
xor
add
shll
pop
xchg
shll
pop
sbb
mov
out
pusha
aam
ss
and
sarl
and
mov
lds
or
les
pushf
scas
mov
fsubrl
mov
lods
cmpsb
daa
push
xchg
shrb
jns
or
or
mov
pop
repz
jmp
inc
es
scas
inc
lea
lcall
movb
push
loopne
outsl
loop
les
mov
xchg
xor
jno
daa
pop
dec
xchg
or
mov
inc
in
movsb
aad
and
outsl
out
data16
push
mov
das
mov
push
cmpb
rcrb
cli
xor
pop
xor
inc
pop
out
pop
mov
sub
sbbb
bound
arpl
js
push
pop
sub
pop
std
andb
cmp
scas
add
in
cmp
test
sub
jg
sub
cli
add
mov
xchg
cs
dec
fnstenv
pop
mov
shr
or
hlt
push
pop
out
ds
lret
movsb
sbb
rcrl
aas
jle
das
aaa
mov
mov
into
out
retw
cltd
lock
xor
mov
adc
test
stc
repz
push
int3
xchg
cmp
adc
insl
mov
xor
roll
add
lahf
int3
mov
mov
addl
jp
xlat
jg
ja
fistpll
pop
cmp
mov
imul
nop
arpl
push
loope
ficoml
pop
and
push
jbe
popf
and
arpl
xor
pop
imul
xor
add
fbstp
adc
ja
test
addb
fmuls
jne
push
into
cmp
xlat
mov
lcall
mov
jns
mov
cld
adc
shlb
pop
jno
pusha
in
pop
jp
mov
add
ret
sbb
cmp
and
mov
push
fsubrp
sbb
loope
inc
lods
ret
lret
ds
pop
sub
cld
int
mov
idivl
sbbl
insb
jg
and
iret
push
mov
xor
rol
push
and
sub
cmp
jne
hlt
or
into
lock
xchg
sub
mov
idivl
std
lret
fisubrs
mov
inc
jne
adc
aam
mov
mov
pop
or
jae
or
data16
into
pusha
xchg
mov
out
add
and
dec
leave
pop
push
add
mov
adc
push
mov
or
mov
xchg
aam
and
dec
aas
es
popf
lods
inc
mov
and
and
cmp
retw
push
lret
les
stos
int3
pop
test
stos
insl
popf
ljmp
loopne
and
int3
sub
inc
movsb
clc
jbe
inc
push
cmpsb
daa
push
pop
dec
sbb
xor
jb
cli
lcall
mov
insl
jp
xchg
mov
ja
xchg
sbb
mov
mov
mov
mov
out
and
sbb
push
loopne
fsubl
cld
mov
inc
push
xor
pop
sub
testl
sub
popf
jmp
je
jno
mov
cmp
mov
mov
xor
push
mov
addl
mov
sbb
adc
in
rcl
fucomp
lods
mov
lods
adc
lock
cmp
lods
pop
in
pop
fidivs
xchg
popf
pushf
xchg
jp
and
insl
xor
lret
inc
jecxz
or
xchg
mov
lea
movsb
lock
fnstcw
xchg
fdivl
addl
es
mov
int3
adc
clc
cli
mov
ljmp
fstpl
push
mov
fstpl
repz
mov
repnz
mov
xor
sbb
es
dec
std
pushf
out
test
dec
mov
pop
out
fistps
xchg
cmpsl
ss
inc
mov
outsl
mov
mov
ja
out
punpcklbw
and
pop
pop
sub
mov
push
xor
in
fdivrs
gs
push
mov
push
aaa
xchg
in
enter
cmp
dec
adc
push
xor
fists
push
insl
maskmovq
testl
xor
aas
xlat
rorb
sbb
in
leave
in
mov
nop
mov
mov
jmp
imulb
out
clc
add
movsb
out
std
mov
xor
repz
add
and
fistpl
out
out
jbe
fcompl
dec
push
stc
and
cmc
mov
mov
push
sbb
daa
mov
mov
fidivl
into
fwait
add
mull
dec
fsubrp
fldcw
pop
sub
pcmpeqd
mov
out
cmp
push
mov
pop
hlt
js
jg
popa
ret
mov
sub
push
loopne
test
imul
bound
in
add
fwait
mov
cmp
fs
jmp
pop
mov
ud0
pop
and
hlt
das
cmp
sbb
push
out
dec
mov
cmpsl
les
fmull
cld
je
jmp
loop
call
in
mov
mov
adc
shl
addr16
les
ja
dec
cmovns
cmpsl
dec
je
xchg
je
sub
mov
rclb
stos
movsb
fnstcw
jl
popa
mov
jg
mov
push
mov
das
popa
into
data16
adc
mov
add
sarb
mov
fisubrl
loopne
xchg
mov
xor
cmp
or
aaa
inc
xlat
std
dec
fildll
push
dec
pushf
outsb
push
movsl
xchg
in
fs
adc
mov
dec
insl
daa
gs
aad
mov
pop
lahf
cmpsl
push
mov
push
aaa
or
mov
cmpsb
loop
ss
push
mov
sbb
xchg
jge
mov
sbb
push
lret
sbb
icebp
fildl
cmp
pusha
mov
mov
pop
xlat
mov
pop
stos
vmwrite
fldenv
jp
fld
dec
sbb
sub
add
notl
jmp
aam
adc
daa
nop
mov
pop
mov
cmpsl
xchg
inc
adc
ljmp
aaa
sub
sub
sub
shrb
jp
loope
push
jecxz
push
or
dec
pop
push
les
sub
rorb
fcmovnu
cmpsb
lahf
in
dec
xlat
cld
sahf
shrb
scas
stos
lods
shrb
jne
jnp
mov
inc
or
int3
lea
insl
adc
or
sbb
dec
mov
xchg
jbe
out
cmp
xor
out
pop
cmp
xchg
icebp
hlt
pop
push
int
pop
xor
popl
and
dec
fisubl
pop
xchg
loope
xchg
cvtdq2ps
pop
mov
aas
pop
cwtl
test
xor
cld
jno
adc
mov
xchg
sbb
div
mov
sahf
test
or
mov
aad
ret
stc
add
adc
lea
ret
push
stos
xchg
lcall
mov
xlat
cmp
or
aas
or
mov
cs
dec
xor
sti
imul
cli
rcl
repnz
imul
sub
lock
pop
jmp
mov
cmp
xchg
in
push
icebp
sti
loopne
sbb
leave
sub
testl
insl
fwait
clc
push
push
xchg
in
jae
and
and
aad
and
xor
call
dec
les
cmpb
cmp
std
shll
jg
inc
popa
icebp
imul
xlat
xor
sahf
cmp
inc
adc
outsl
call
lds
push
fs
and
and
adc
and
in
and
add
mov
xchg
popf
jne
jle
adc
xor
dec
inc
add
cmp
dec
ja
into
push
adcb
xor
cwtl
inc
loope
inc
dec
and
jae
daa
lea
fs
fiadds
add
xchg
sub
dec
mov
out
cmp
out
stc
push
lret
mov
clc
mov
in
inc
rorb
xchg
inc
mov
mov
in
stc
shlb
jecxz
decl
mov
test
cmp
test
push
xor
pop
xor
or
enter
jno
test
ret
mov
test
xchg
movsb
pop
dec
rorl
sbb
dec
and
sub
cmp
js
adc
push
and
lock
mov
push
jae
iret
push
xchg
cmp
sbbb
cmp
mov
out
jne
sub
xlat
pusha
jmp
notl
xor
pop
inc
pop
daa
sub
sub
cs
inc
cmp
movsl
iret
inc
in
lods
jno
addl
in
cwtl
mov
ret
mov
loopne
sbb
cmp
outsb
xlat
pop
xor
or
fsub
xor
decb
jnp
lods
push
mov
shrl
cld
mov
arpl
data16
add
add
add
sbb
jb
sti
dec
dec
int3
mov
mov
in
xor
movsb
dec
pop
lcall
sub
inc
sub
pop
fimull
jg
mov
push
rcl
jns
mov
cmp
icebp
fcompl
jno
and
outsb
test
jle
fistpl
loope
enter
lahf
lods
fisubl
das
icebp
or
xchg
xchg
fcmovnb
push
and
cmp
dec
adc
insb
push
cmp
sarl
psubd
lods
mov
or
je
mov
adc
push
xchg
lock
cmpsb
je
popf
lock
xchg
and
dec
mov
arpl
or
push
hlt
cmp
lret
mov
mov
pop
fsubr
mov
dec
cli
push
dec
lea
dec
mov
and
dec
pop
jo
hlt
arpl
inc
lahf
mov
bound
cmpsb
xor
test
or
pushf
cld
pop
loopne,pt
fsts
jmp
fldl
aas
in
xchg
adc
scas
inc
stos
cmpsb
mov
pop
pop
jno
aad
xor
adc
and
pop
xchg
inc
popl
pushf
and
daa
sub
movb
mov
cmp
inc
push
pop
ret
sahf
adc
sub
rcrl
jb
cmp
pop
into
xchg
jmp
lods
mov
fimuls
xor
mov
and
xchg
inc
cld
clc
pop
add
sub
nop
add
push
lahf
xchg
fyl2x
push
in
cli
cmp
lds
std
mov
dec
mov
lock
push
mov
sbb
dec
test
mov
mov
sbb
fisubs
lret
push
sub
and
sbb
or
lock
stos
sbb
scas
push
or
bswap
stos
les
pop
xchg
jns
mov
pop
lods
jo
mov
xchg
ljmp
lret
fildll
pop
xchg
sub
jnp
and
dec
and
sub
movsb
int
sub
xchg
pop
pop
jmp
cld
mov
sbb
into
test
push
mov
xor
mov
xor
int3
push
mov
cmp
mov
test
testb
jmp
push
cltd
xchg
hlt
call
popa
mov
pop
push
cs
xlat
fsubrs
shll
shl
jmpw
ss
mov
ljmp
xchg
inc
mov
mov
xlat
jg
ja
mov
stos
loope
mov
and
push
mov
push
add
mov
jle
hlt
jle
push
xchg
pusha
pop
test
mov
xchg
xor
ja
fidivs
push
es
adcl
adc
xor
mov
pop
movsb
mov
jno
adc
push
and
pop
scas
jae
sub
in
jae
jbe
fistpll
cmp
fisubrl
xchg
mov
xchg
es
sbb
dec
xchg
push
jb
push
fsubrs
cmp
daa
lods
dec
fs
sbb
mov
rcrl
mov
push
jle
std
aas
dec
push
insb
hlt
arpl
dec
fwait
mov
in
mov
push
sub
adc
push
cltd
mov
std
popa
fwait
inc
push
imul
filds
lock
jmp
pop
notb
in
jmp
lds
in
stc
adc
xlat
daa
xchg
je
data16
lret
jne
insb
fcompl
ds
inc
push
push
add
fcmove
or
dec
popa
push
inc
jge
ret
xor
push
ficoml
sar
repz
iret
mov
add
aam
jnp
and
sub
cli
aas
icebp
test
add
loope
xchg
add
mov
ficoms
xor
outsb
aaa
pop
or
lret
push
icebp
mov
fidivrl
insb
mov
test
sbb
push
and
push
add
ret
loop
inc
mov
out
inc
hlt
or
lock
test
cmpsl
xchg
adc
add
push
add
sbb
repz
mov
mov
xor
loopne
test
ja
sbb
movsl
std
cmpsb
repz
aas
push
mov
lods
sbb
cmp
into
stos
leave
pop
mov
adc
shl
jo
cld
pop
in
sti
movsb
xchg
int
insb
test
icebp
xor
sti
xor
xor
jb
push
mul
loop
add
mov
movsl
mov
ds
push
jno
fimuls
add
fstl
cwtl
mov
into
inc
xor
push
sbbl
adc
mov
icebp
imul
sarl
xchg
popf
and
sahf
insl
js
into
data16
fs
mov
push
std
scas
jl
add
fdivrs
jno
test
mov
fwait
enter
stc
testb
mov
mov
xchg
loopne
sahf
push
stc
mov
nop
int
adc
dec
sbb
aaa
movsl
ja
rcll
int3
xlat
sti
mov
mov
dec
mov
cmp
jle
stc
push
pop
push
jno
mov
ret
inc
fsubrs
xchg
lahf
test
mov
das
mov
mov
mov
push
das
mov
jae
mov
mov
add
outsl
mov
fildll
std
push
inc
ror
and
lock
inc
lret
fcoms
mov
mov
jle
push
inc
cld
jnp
jae
shl
insl
jecxz
lret
sbb
imull
into
rorl
jl
out
mov
jg
dec
sbb
out
ficoml
aas
push
push
dec
sahf
movsl
or
cli
cwtl
fsub
imul
into
xlat
dec
mov
xor
int3
imul
gs
ror
cwtl
sbb
test
std
lret
test
add
cmpsl
popf
xor
push
cmp
mov
pushf
lret
out
insb
mov
pop
out
sbb
sarl
jo
subl
push
mov
push
pop
jle
sbb
dec
lock
dec
sub
icebp
mov
jb
push
push
js
icebp
aaa
adc
pop
xchg
push
sbb
jmp
dec
pop
lea
xor
sub
adc
mov
lds
jns
stos
arpl
xchg
pusha
push
mov
xor
enter
mov
push
inc
jbe
or
js
mov
pop
lret
insb
icebp
imul
movsl
pop
mov
xchg
sub
cltd
or
fbstp
xchg
jo
and
cmpsl
lret
popa
push
dec
sbbb
fistps
roll
minps
lods
imul
inc
movsb
fdivrs
and
mov
mov
mov
out
sub
dec
mov
xchg
push
mov
imul
ficompl
sbb
sahf
mov
movsb
int
mov
mov
sti
sbb
mov
add
mov
loopne
stc
lea
adc
cmp
sub
cltd
loopne
and
inc
dec
xchg
popf
push
sti
cbtw
sahf
adc
shl
push
das
and
dec
inc
lods
mov
and
out
mov
mov
aad
cmp
jae
repz
xchg
cmp
fcoms
pop
enter
jo
or
inc
scas
std
cmp
mov
pop
les
js
or
fidivrs
addr16
jp
mov
adc
jne
dec
mov
aam
outsb
push
fisubrs
clc
inc
repnz
outsb
dec
lret
mov
lret
xchg
xor
shrb
pop
imul
jge
dec
fs
sub
adc
adc
mov
push
mov
loopne
sti
notb
pop
lds
sub
cs
dec
mov
pop
xor
inc
imull
add
out
stos
jae
movsb
lock
fsts
xchg
scas
dec
lret
mov
test
add
mov
int
sbb
into
xchg
addr16
ret
cs
cmp
insl
ficomps
adc
sti
scas
push
mov
sysexit
xchg
add
scas
cmp
stos
les
stos
xchg
or
fistps
xchg
je
call
faddl
es
mov
sub
dec
or
sar
jae
dec
loope
pop
cltd
popf
push
es
ret
sahf
out
mov
jecxz
outsl
inc
out
push
int
inc
insb
mov
xchg
jl
aam
jge
cmp
sub
xor
add
mov
imul
jmp
sbb
push
push
stc
add
test
fxch
mov
mov
popf
and
cmp
or
lret
dec
fldenv
arpl
mov
and
jge
pop
push
or
jno
stos
push
mov
push
decb
inc
aam
pop
xor
orb
sbb
adc
sbb
lahf
and
aaa
imul
inc
add
jg
mov
sbb
dec
sub
pop
rorl
loopne
je
imul
aaa
xchg
rolb
pop
mov
out
or
orl
jno
bound
divb
sub
jp
imulb
pop
scas
rclb
idivb
js
push
jbe,pt
popa
pop
imul
push
xchg
in
lret
mov
movsl
aad
aas
iret
cmp
and
aam
bound
out
adc
loope
xor
enter
dec
arpl
or
int
incl
setle
popl
mov
ror
notb
jg
stos
scas
mov
fisttpl
mov
dec
daa
adc
or
or
push
lea
out
dec
sbbl
fwait
lods
push
sbb
push
push
sbb
leave
sub
fwait
out
aas
pop
dec
scas
decl
push
add
sub
cmp
mov
icebp
mov
ds
in
lcall
push
popf
jle
jle
mov
cli
jmp
pushw
aaa
repz
out
popa
int3
test
ret
mov
mov
in
dec
and
pop
xchg
subb
add
lahf
pop
xchg
test
adc
shr
pop
icebp
hlt
ficomps
test
jg
loopne
mov
mov
aam
enter
adc
mov
nop
adcb
pop
sub
rcll
test
push
sub
and
jle
les
lods
push
js
mov
push
out
pop
add
les
andb
inc
mov
push
mov
fadds
xor
loop
mov
test
lret
fiadds
or
mov
and
sbb
popf
fstpl
dec
fildl
add
add
sbb
dec
fnstsw
mov
sahf
out
lcall
pop
aas
call
int
imul
xor
mov
in
fsubrl
je
cld
push
stos
cli
int
movsl
sti
mul
xor
mulb
mov
loopne
aaa
testl
mov
mov
jnp
cmc
aam
mov
lret
adc
daa
das
imul
lahf
cmp
clc
das
test
scas
xor
jns
out
in
jbe
popa
in
pop
jl
in
push
pop
and
arpl
fcompl
cmp
in
outsl
jg
fscale
or
in
shrb
loop
pusha
pop
dec
mov
sbb
push
ja
add
ffreep
adc
xor
out
pushf
add
in
cmp
mov
xlat
xorb
jo
push
add
mov
pushf
sbb
fsubl
and
xchg
lret
popa
test
addb
mov
mov
push
ja
je
sti
mov
ret
push
cmpsb
je
cs
mov
xchg
cs
inc
roll
dec
pop
adc
fisubrl
push
scas
or
sub
call
pop
mov
xchg
shll
push
mov
xor
cltd
aaa
add
inc
lods
das
fsubl
fidivrs
dec
sub
mov
xor
test
ss
cli
stos
xor
and
push
sbb
xchg
mov
push
repz
xchg
outsb
addr16
dec
mov
aam
push
mov
pop
xchg
cs
sbb
pop
cvtps2pi
in
outsb
jge
fldl
mov
orb
xchg
and
mov
xor
out
adc
lea
xor
rcll
stc
sahf
mov
pop
pop
xor
pop
pop
mov
and
int
pop
pcmpeqb
mov
inc
add
daa
jns
cmc
clc
mov
jno
jne
sbb
loopne
cmp
xchg
aam
sub
xor
push
xor
in
push
in
hlt
or
pop
aad
sbb
sub
and
daa
inc
loopne
cmp
stos
int
sahf
es
test
pop
out
dec
ja
inc
lcall
inc
pop
jae
rorl
sub
mov
lcall
jp
movl
test
dec
jp
ss
outsl
mov
dec
dec
cmova
in
into
testl
sbb
sbb
cmp
out
pop
in
imull
pop
pop
adc
daa
add
test
hlt
or
loopne
adc
cmp
adc
mov
pop
mov
lret
add
jle
add
pop
push
inc
push
lods
es
dec
loope
lods
jb
insl
shr
test
push
adc
cmp
xchg
mov
mov
add
push
pop
jle
loopne
mov
push
sbb
das
jb
add
xchg
lods
mov
mov
subl
jns
decl
inc
popa
add
cmp
mov
les
add
popf
xor
pop
in
daa
mov
push
and
and
cmp
pop
shl
sbb
pop
movsb
lcall
cmpsl
inc
mov
mov
daa
xchg
mov
leave
int3
out
addr16
std
push
xchg
add
rclb
xchg
add
fwait
and
push
mulb
out
mov
popa
int3
js
mov
out
sahf
mov
dec
sbb
mov
mov
inc
xlat
fcompp
iret
cmpsl
test
clc
dec
aaa
push
aad
pop
stos
push
mov
std
inc
pop
jbe
pusha
insl
mov
and
add
mov
xchg
jns
xchg
fldl
ljmp
sbb
shll
testl
sbb
ss
not
cmpb
jge
pop
pop
sbb
aas
jp
sbb
nop
xor
or
sarl
push
mov
cmp
xor
or
js
mov
jne
imul
scas
and
adc
into
mov
inc
xchg
ja
and
in
xor
rorl
sti
fistps
in
adc
mov
mov
push
movzwl
dec
or
add
insb
insb
pusha
stc
cmp
lahf
sbb
inc
sbb
shlb
push
and
mov
or
data16
andb
cli
adc
in
std
cmpsl
push
pop
loope
jp
arpl
mov
mov
ret
int3
outsl
pop
mov
stc
sub
lock
mov
jecxz
aas
pop
or
outsl
cmp
fistps
icebp
adc
pop
dec
mov
ret
push
stos
push
inc
jmp
subb
or
adc
mov
inc
push
dec
add
ret
scas
mov
lods
and
adc
jle
mov
in
sahf
in
cltd
xor
in
or
sti
testl
push
pop
dec
and
xor
in
in
shl
sti
fmuls
je
inc
ljmp
push
rcrl
jno
aas
xchg
enter
mov
mov
mov
xchg
push
push
inc
mov
cmpsb
mov
jns
iret
das
mov
pop
mov
push
icebp
aad
push
loope
pop
lret
dec
push
add
lahf
jmp
sbb
mov
dec
out
loop
pushf
xorb
ret
sti
mov
adc
jle
stc
mov
inc
inc
lods
lea
mov
mov
mov
dec
lock
xchg
dec
or
pop
jo
pusha
outsb
ja
cmp
and
les
lret
ret
addb
push
and
shlb
jnp
ljmp
cmc
sbb
push
fdivs
xor
test
xchg
jbe
xor
das
aad
cli
push
in
enter
iret
and
sbb
mov
outsw
test
sbb
and
cs
insl
pop
or
or
loop
jno
addr16
mov
sub
outsb
movsl
sbb
aaa
movsl
dec
push
mov
adc
cmp
mov
gs
inc
mov
out
fimuls
jae
notl
cmpsb
pushl
into
pop
stos
popa
mov
pop
sbb
lods
push
cmp
pop
arpl
mov
dec
cmp
popf
xor
aas
idivl
rcll
inc
icebp
adc
divl
mov
inc
xor
jle
pusha
xorl
lret
pop
mov
clc
jb
sub
mov
add
shlb
mov
jecxz
jb
or
out
loope
sahf
dec
lcall
sbb
test
sbb
sub
jb
mov
cmp
xor
push
ja
pop
out
scas
mov
int
cwtl
pop
or
dec
adc
fwait
lahf
mov
jns
inc
fnstenv
jb
push
movsb
stc
fisubrs
add
stos
cld
mov
addb
jl
into
fnstsw
sub
jmp
push
mov
sarl
mov
adcl
pop
mov
add
sbbb
mov
iret
clc
addl
jp
cli
cmp
push
frstor
mov
out
ror
push
in
out
push
mov
mov
cmp
pushf
insl
mov
int3
adc
aad
sub
pop
mov
and
in
and
outsl
and
ret
and
pop
or
jmp
scas
xchg
pop
ficompl
mov
loope
pop
adc
dec
adc
fdivrl
dec
sub
xchg
repz
outsb
outsb
push
sbb
int
jns
out
and
fs
pop
jae
jnp
jl
mov
cwtl
push
scas
sbb
push
loop
loope
adc
fdivrp
stc
mov
or
xchg
leave
stos
inc
pop
mov
xor
pop
fmulp
xchg
dec
mov
pop
arpl
inc
icebp
in
in
enter
fwait
rorb
lds
je
arpl
orb
push
sub
xchg
pop
test
jmp
cmp
jno
into
insl
shll
inc
cmp
dec
dec
ret
es
cmc
xorb
add
cwtl
adc
cmp
sbbl
pop
xchg
repnz
test
add
sub
ds
mov
sub
pushf
cmp
mov
inc
mov
cmp
into
aaa
andl
cmp
xor
push
adc
jns
xchg
and
jae
and
pusha
fs
add
sbb
mov
or
xchg
call
mov
lods
ljmp
movsl
enter
pop
cmp
xor
mov
push
xor
daa
xchg
xchg
out
outsb
mov
mov
xor
cltd
or
ficoms
mov
adc
cmp
sbb
imul
jns
add
es
jecxz
jb
push
ja
mov
inc
or
int
nop
pop
push
pop
mov
xchg
bound
mov
stos
scas
sbb
scas
into
pop
test
fwait
or
fwait
mov
fs
imul
inc
mov
add
out
sub
clc
push
into
add
add
sub
cmp
es
popf
pushf
movsb
cmp
xor
xchg
aas
dec
mov
cwtl
dec
or
adcl
mov
cs
daa
sub
rol
push
into
push
sahf
pop
adc
or
iret
pop
leave
leave
dec
pop
lock
enter
inc
cli
xchg
xor
cltd
outsb
out
fmul
jg
call
insl
in
push
mov
int
fnsave
pop
or
call
imul
std
add
cmp
pop
setne
icebp
and
fstl
push
inc
pop
pop
gs
cmc
lock
adc
inc
das
xor
and
sbb
mov
rcrl
sub
mov
xlat
test
add
int
mov
outsb
ljmp
add
pop
mov
xlat
sub
mov
sarl
push
mov
xchg
orb
sbb
scas
sub
mov
mov
add
imul
scas
inc
mov
fbld
jno
pop
ljmp
les
ja
cmp
dec
movsl
xchg
sub
xor
and
test
xchg
mov
fwait
push
jl
cli
ds
jmp
push
mov
mov
pushf
jbe
mov
mov
add
fisttps
into
aad
jnp
cmp
or
sub
sub
pusha
adc
test
mov
mov
add
mov
inc
js
adc
popa
xor
xchg
pusha
mov
cmp
mov
mov
push
push
ljmp
fnstenv
sbb
mov
int3
push
stos
sarl
mov
inc
gs
cmpsl
pusha
xlat
fldt
jmp
mov
mov
jns
xchg
mov
xor
adc
jl
dec
fcom
adcl
xor
jno
daa
xchg
fucompp
jge
inc
cmpsl
stos
jecxz
into
add
addps
cmc
shrb
mov
inc
sbb
xor
aas
push
int3
xor
arpl
mov
xchg
cmp
pop
push
addl
sbb
fs
lret
xor
outsb
fldl
subb
es
or
lret
rcl
pop
fisttpl
and
mov
push
inc
pop
adc
pop
jae
arpl
lret
sbb
outsl
cli
pop
inc
fsubs
shll
arpl
gs
push
mov
sbb
sub
arpl
jg
and
adc
test
cmc
push
pop
dec
daa
sbb
adc
mov
mov
push
shr
jo
pop
addl
mov
ds
cmp
and
mov
xor
push
pop
lea
in
lock
pusha
push
mov
and
inc
aas
in
dec
xchg
or
mov
ja
inc
imul
mov
dec
insl
cmp
decb
out
push
sti
push
outsl
jp
fiaddl
sub
push
rclb
dec
dec
fcomps
push
xchg
je
inc
mov
push
xor
rcll
pushf
sbb
add
js
sarb
repz
je
roll
popa
mov
mov
repz
dec
scas
addr16
outsl
sub
xorl
inc
push
sbb
cmpsl
hlt
sti
lods
sbbl
cmpsb
cmp
dec
push
inc
adc
mov
push
out
leave
ss
lret
xchg
mov
loop
or
js
cmp
sub
aam
adc
mov
idivl
xchg
data16
andl
inc
mov
fwait
adc
mov
adc
or
xlat
add
int3
jne
sarl
add
sub
push
bound
loopne
mov
inc
sub
jno
pop
testb
outsb
out
or
xchg
dec
js
pushf
mov
sub
sub
jns
cltd
aas
and
les
xchg
jne
add
or
scas
push
aam
movsl
mov
test
dec
scas
mov
ds
imul
pop
inc
xor
pusha
fcoml
stc
pop
sub
xchg
nop
xor
sub
repnz
mov
pop
das
insl
fdivl
pop
insl
repz
mov
adc
aaa
hlt
xor
jmp
loop
and
in
dec
scas
push
or
fimuls
das
push
stc
roll
je
cmp
leave
cmp
loopne
sbb
xor
das
mov
popa
cmp
mul
jp
lcall
sub
or
sbb
popa
scas
mov
jo
mov
push
xor
push
and
das
pop
mov
push
xchg
add
sbb
mov
movsb
jns
jno
stc
int3
mov
push
pop
repnz
ljmp
fcmovne
loope
pushl
jns
inc
insb
sbb
pop
es
add
mov
testl
jmp
testb
data16
into
pusha
pop
ffree
cli
mov
in
inc
call
sbb
subl
jns
lock
add
and
inc
dec
pop
outsl
pop
bound
in
jns
aad
xor
jmp
arpl
pop
push
arpl
lock
das
clc
pop
sub
jge
les
and
out
testb
xchg
and
sbb
cmp
out
test
rcll
add
ret
stc
sti
adc
pop
mov
push
jbe
leave
push
je
aaa
lahf
lret
pop
cmp
int
adc
lock
xor
fstl
jne
pop
test
add
movsl
adc
sbb
add
and
xchg
mov
mov
and
test
jg
xor
cmc
jp
fsub
sub
and
int
fwait
test
pop
stos
add
daa
sbb
mov
out
sbb
fidivrl
movsl
das
ljmp
bound
or
das
sub
stos
daa
pop
mov
icebp
push
addb
sub
mov
cmp
loopne
lea
add
test
inc
shl
mov
xchg
bound
rcl
out
push
push
mov
and
xor
test
push
add
ja
das
or
inc
add
sbb
ret
test
or
daa
mov
and
jmp
mov
movsl
pop
loop
mov
cmp
sbb
pop
mov
push
insl
imul
sbb
add
add
and
into
cmp
jl
ret
outsb
dec
ljmp
and
jb
ds
mov
rorl
mulb
push
movsl
mov
inc
xor
mov
lods
imulb
push
out
jnp
mov
mov
std
xchg
push
rcl
into
std
sbb
xchg
and
mov
xchg
repnz
stos
bound
fdivrl
sbb
outsl
aaa
jg
push
cmpsl
fcmovu
sub
jge
and
arpl
push
sub
ja
xor
out
jnp
movsb
adc
and
push
cmp
jne
sbbb
jns
lea
jno,pt
adc
ds
in
mov
add
push
fucom
testl
push
push
adc
jle
and
add
mov
fistps
mov
xlat
mov
xchg
stc
push
pop
jbe
mov
aaa
cmpsb
dec
jl
fiadds
adc
bound
mov
add
lahf
orb
pop
cmp
jle
std
xchg
jno
xchg
jae
xchg
icebp
arpl
incl
xchg
mov
sbb
inc
sbb
addr16
aas
mov
xor
cmp
cmpsl
divb
lods
popa
mov
cmpsl
xlat
xchg
push
or
imul
ret
sbb
lods
cld
mov
notb
std
push
shll
xor
out
jo
movsb
shll
fsub
std
jbe
mov
sub
inc
pop
leave
popf
outsl
adc
pop
adc
cmp
hlt
repz
dec
xor
lret
sbb
mov
faddl
xchg
dec
xor
out
lret
loope
jl
pop
push
pop
sbb
mov
push
push
pushf
and
adc
dec
in
pop
test
outsb
test
or
mov
scas
cli
in
imulb
sbb
adc
jae
and
sub
mov
in
adc
sub
xchg
xchg
xchg
sarb
dec
dec
lea
ret
fdivl
loope
mov
call
push
xchg
insb
sbb
imull
outsl
and
mov
mov
add
push
jecxz
mov
dec
mov
push
sbb
testl
cmp
nop
pushf
push
or
mov
inc
jno
repz
in
sbb
or
cmc
aad
out
add
movsb
adc
mov
cmp
in
in
outsb
test
xchg
mov
ds
clc
imull
insl
mov
test
shl
mov
loopne
mov
pop
js
aad
pop
cmp
push
dec
in
rcr
ret
scas
out
or
and
xchg
mov
cltd
xchg
out
dec
jb
pop
cmpsb
lcall
adc
dec
mov
data16
add
mov
xor
inc
and
push
test
movsb
mov
jb
sbb
cmp
mov
mov
jl
cmpsb
pushf
sbb
xor
repz
out
ja
sbb
push
or
ftst
xchg
xchg
lods
cmp
mov
xchg
pop
aam
lret
mov
jb
inc
mov
fldl2e
xchg
and
push
fnstcw
dec
repnz
je
xchg
xchg
mov
jae
cmp
push
test
sbb
pop
mov
orb
test
pop
lcall
sub
jg
sub
cmp
in
pop
pop
shrb
lock
or
mov
pop
mov
int
mov
xchg
push
daa
push
dec
cmpsl
push
ss
dec
push
call
dec
daa
int
cmpb
mov
lret
aaa
mov
xchg
cmp
jae
jne
rcr
scas
xor
stos
int3
fadd
dec
movsl
jnp
mov
sub
mov
push
mov
lahf
xchg
dec
outsb
fists
pop
es
pop
ja
xchg
mov
repnz
push
mov
xchg
movsb
lcall
push
add
and
adc
or
cmp
inc
out
mov
pop
jbe
repz
stos
push
or
outsl
or
push
or
loop
cmp
in
mov
ret
gs
ja
sub
aam
or
adc
or
sbb
xchg
les
inc
out
stos
mov
movsb
mov
cmp
call
push
pushf
in
sti
addl
add
mov
bound
xorb
cld
mov
cld
aam
mov
or
push
fistps
push
fwait
leave
repnz
inc
test
push
ss
push
pop
pop
pop
add
dec
sub
repnz
cltd
dec
or
das
hlt
inc
adc
cmp
fdivrl
test
inc
aam
int
inc
push
push
loopne
jb
clc
and
pushw
pushf
testb
mov
jo
hlt
cmp
mov
sbb
cmp
push
push
fcomip
ss
scas
adc
fprem
dec
out
scas
rorb
fwait
or
test
outsl
sahf
test
sub
cmpl
sub
and
push
xchg
out
jb
out
pop
notl
push
lcall
daa
in
inc
xor
jbe
imul
fwait
or
xor
pop
or
imul
aaa
jne
pusha
push
jns
dec
lret
mov
dec
jle
testl
es
jmp
cltd
jae
imul
lahf
cwtl
jecxz
icebp
aaa
loope
mov
push
push
sub
nop
jns
popa
cs
xchg
mov
out
push
outsl
push
jg
fsubl
testl
add
in
or
icebp
or
fnstcw
int
rcrl
and
mov
jb
lret
jae
cli
bnd
lret
mov
and
jb
xor
loop
insb
pusha
lds
xchg
mov
jno
push
in
push
pop
dec
push
dec
pop
and
push
loopne
lret
jns
loope
push
lahf
imul
add
add
popa
or
jnp
dec
ljmp
lds
mull
or
sub
fstpl
mov
std
js
sahf
fcompl
adc
mov
sbb
mov
push
out
xor
popf
mov
xchg
ss
xor
jg
sbbl
add
or
inc
add
push
fidivs
in
or
fimull
repz
cld
dec
xor
lods
or
lcall
cmp
adc
icebp
mov
popa
lret
fnstenv
lock
jg
lahf
add
jne
cmp
sahf
push
orb
and
stos
cmp
jbe
notb
sub
xlat
bound
pushf
lds
shll
cmp
or
in
jmp
lods
pushf
dec
shrl
dec
mov
mov
mov
add
cmc
lcall
lock
push
fstpt
mov
pop
fdivl
lcall
test
into
cwtl
mov
sub
bound
pop
add
shll
je
lret
adc
pushf
xlat
mov
mov
movsb
out
push
mov
mov
dec
push
sbb
repnz
insl
flds
inc
stos
xor
loop
dec
sbb
push
inc
mov
repnz
mov
popa
mov
push
sbbb
xor
aad
xchg
mov
sbb
push
in
aas
or
rcrl
pop
in
inc
add
test
sbb
mov
jnp
in
xor
inc
stc
jl
mov
pushl
sub
cmpsl
imull
in
mov
and
out
insl
xchg
test
cwtl
ljmp
xor
inc
loope
rcrl
push
aaa
push
fcoml
xchg
pop
imul
dec
jb
cs
mov
xor
cmp
pop
scas
add
lods
sbb
aas
cld
imul
cmpsl
std
dec
inc
orb
xchg
not
mov
je
jnp
sub
inc
push
shl
fistpll
pop
and
icebp
sub
cmpsl
clc
cmc
sbb
pop
aaa
enter
test
inc
xlat
sbb
inc
cmpsb
dec
lods
sbb
pop
addr16
movsl
fbld
dec
sbb
cmp
lods
ss
idivb
mov
std
dec
stos
pop
mov
int
loopne
popf
mov
sub
das
movsl
mov
mov
mov
fisttpll
cmc
enter
inc
rcll
out
sub
cmpsb
outsl
push
and
inc
mov
jae
out
mov
dec
cmpsb
sbb
mov
rep
out
push
sub
lahf
xchg
cld
imul
dec
inc
leave
jle
scas
fisubrl
ss
movsl
or
icebp
and
sbbl
jmp
xchg
test
xchg
into
loopne
add
lahf
scas
in
push
hlt
sahf
mov
pop
dec
insb
mov
test
je
out
adc
push
repz
int
sbb
mov
daa
pushf
or
cmpb
movsb
addr16
mov
test
jb
addb
push
inc
or
or
in
mov
mov
fadd
mov
das
ret
ret
les
xchg
cmp
mov
inc
sbb
xor
int
pop
stc
sti
inc
or
lock
push
pop
jo
push
lahf
pusha
mov
push
dec
xor
xchg
or
mov
outsb
nop
les
inc
aad
xchg
or
lods
push
sbb
rorb
bound
cli
sbb
xor
daa
in
xor
lock
push
push
imull
lock
sbbl
sbb
xchg
mov
ud1
stc
shll
adc
push
imul
mov
jno
adc
mov
pop
sbbb
cmp
pop
sbb
mov
dec
dec
stos
pop
daa
and
ss
int
in
pop
dec
iret
add
je
and
xchg
sti
sbb
push
scas
gs
movsl
fs
cmpsl
out
std
nop
push
shrb
cmp
jne
or
imul
aaa
inc
je
adc
test
add
xor
mov
cmp
or
hlt
xchg
mov
mov
and
dec
or
nop
les
push
mull
pop
mov
insl
add
pop
sub
aas
push
out
or
lds
or
and
jle
mov
jne
xchg
adc
sbb
mov
xlat
adc
sbb
xor
push
dec
push
jne
or
jmp
ret
pop
cmpsb
xor
xchg
or
or
and
sub
jmp
pop
mov
imul
push
movsl
hlt
dec
jmp
mov
ljmp
test
fildl
pop
mov
pop
jmp
daa
jl
arpl
mov
xor
repz
ljmp
mov
gs
mov
lods
lods
cltd
cltd
mov
int3
ss
dec
sbb
repnz
jae
leave
std
sbb
daa
call
pop
mov
les
idivl
lcall
das
cmp
scas
push
xchg
test
std
pop
ret
in
shlb
add
mov
mov
jge
sti
cmp
in
iret
cwtl
popf
and
mov
ss
mov
mov
mov
lea
out
adc
pop
pop
ja
sub
lods
cmc
push
call
push
mov
int
movsl
jle
test
inc
xor
sub
arpl
mov
cmp
xor
insb
adc
pop
ficoms
call
popf
pop
xchg
int3
fwait
push
cld
mov
xlat
push
xchg
cmp
inc
lock
repnz
xchg
adc
push
jp,pn
mov
sbb
xor
push
cmp
scas
lret
je
mov
ss
inc
dec
mov
outsl
push
fcompl
xchg
add
sbb
add
inc
dec
jbe
or
or
aad
aas
push
shll
in
mov
pop
xchg
cmp
or
ja
add
mov
testb
adc
fldl
in
test
xor
fnstsw
daa
lcall
mov
fildll
mov
sbb
stos
mov
mov
loope
test
push
dec
xlat
and
or
xchg
fwait
or
fs
outsb
xchg
es
sbb
les
ja
ja
push
jp
jb
mov
jge
add
ljmp
dec
jnp
lahf
xlat
push
pushf
insb
jp
inc
mov
jle
and
lds
in
add
add
pop
sbb
clc
lcall
add
dec
push
cmpb
or
cmpsl
jae
test
popf
sarl
inc
jecxz
data16
leave
sub
ds
and
jb
dec
sub
mov
std
sti
xor
add
popf
movsb
mov
dec
mov
repnz
push
push
mov
cmpsb
or
cmp
aaa
mov
sbb
jmp
sbb
push
xor
pop
push
push
mov
loopne
xchg
adcl
idivb
daa
hlt
adc
lret
push
dec
ds
sti
out
test
pop
maskmovq
testl
fisubrs
inc
insb
or
shrb
int
push
pop
fdivs
jnp
adc
mov
in
adc
addr16
lahf
cwtl
inc
jbe
mov
imul
rcll
jb
mov
adc
les
rcl
sbb
inc
les
add
ljmp
iret
pop
mov
mov
mov
jns
sbb
imul
lret
repnz
es
jecxz
imul
push
pop
jge
stos
cmc
adc
mov
sub
call
jp
xor
adc
xchg
fistpll
add
add
push
sub
test
rep
mov
in
and
pushf
adc
jmp
movsl
loopne
inc
pusha
scas
add
jno
mov
dec
pusha
xlat
push
stos
int
xchg
mov
cltd
aas
lcall
push
pop
jecxz
icebp
shr
pop
mov
fdivrl
in
insl
xor
inc
mov
adc
or
jno
fwait
es
nop
pop
cmpsb
inc
inc
ds
xchg
fidivrl
pop
lods
dec
arpl
lds
jns
loopne
test
pop
xor
sbb
push
stc
add
mov
mov
jb
popa
cmc
les
fisubrs
sbb
dec
popf
shrl
sub
adcl
aaa
subl
outsb
or
mov
cld
movsl
sbb
xchg
lcall
adc
iret
rorl
fcmovnu
sahf
in
test
inc
bound
mov
mov
adc
orb
dec
shlb
add
mov
sub
add
mov
fwait
mov
add
push
push
lahf
cmc
fstpl
insb
adc
jecxz
gs
ja
dec
and
dec
inc
cwtl
xchg
xchg
imul
adc
xchg
push
lods
push
or
and
mov
jg
int3
cld
flds
cld
enter
call
dec
aaa
clc
movsb
fcomps
or
lahf
fidivs
pop
cmp
loope
es
int
mov
dec
insb
call
pop
fwait
dec
xchg
bound
mov
xchg
jnp
mov
adc
jl
inc
test
scas
fistpl
arpl
stos
aas
and
dec
out
push
hlt
gs
out
loop
sar
jno
mov
mov
call
mov
and
adc
out
test
adc
lea
mov
scas
cmp
ja
mov
cmp
cmp
jb
jae
cmpsl
and
xor
adc
mull
jne
inc
test
dec
subb
cmp
fmuls
xchg
push
mov
xor
cmp
jp
adc
outsl
testb
cmp
adc
jne
movsb
cmpsb
cwtl
dec
and
pop
or
ss
sbb
outsb
cs
movsb
hlt
lret
xor
xchg
pop
dec
add
add
adc
bound
mov
pop
test
int3
mov
xchg
repz
xchg
cmp
or
cmp
imul
and
cmpl
fsubrp
jge
mov
mov
dec
enter
sub
divb
loop
pushl
cmp
xchg
test
jnp
cmc
in
lods
popa
fistpl
inc
mov
xor
pop
jbe
movsb
js
jg
in
and
pop
gs
cmc
mov
popa
adc
jno
orb
test
mov
jle
push
out
mov
adc
imul
ds
imul
mov
in
lods
jb
sti
and
sbb
fsubrs
sahf
mov
sub
cmp
outsl
mov
adc
sub
jae
xor
dec
jnp
in
lcall
xchg
das
fcomp
sbb
cmpsl
sub
outsb
in
lahf
fldl2t
sahf
stos
inc
sbb
jp
xor
test
inc
dec
push
sbb
in
out
pop
sub
dec
shrb
mov
pop
xchg
sub
mov
fdivs
or
cmp
adc
jbe
test
lods
jmp
fs
outsb
dec
sub
call
mov
jns
scas
adc
sub
fsubr
popa
fwait
jle
mov
bound
push
xchg
or
mov
push
mov
sub
loopne
mov
movl
mov
sub
jbe
mov
les
neg
test
pop
xor
addr16
pop
push
repz
cli
je
repnz
mov
cmpl
mov
xchg
jns
mov
or
adc
gs
jns
aam
jmp
mov
insb
mov
shr
cmp
or
test
lahf
adc
cmp
adc
pop
ds
loope
mov
add
and
call
addr16
sub
shlb
lahf
cwtl
pop
cmp
stc
sub
fwait
in
je
jp
mov
aaa
shll
cmpsl
pop
or
ret
lret
outsl
lods
es
stos
cltd
std
mov
xor
jnp
xorl
dec
dec
daa
loope
sbb
popa
mov
cmp
xlat
sahf
sbb
loop
lcall
aaa
inc
jnp
jg
adc
jb
sti
sub
or
out
fcmovb
pop
xor
jl
pop
xor
sub
mov
testb
test
inc
mov
inc
push
call
and
inc
ds
inc
lret
mov
sub
fsts
jns
xor
setne
adc
mov
adc
jmp
xor
imul
sub
sub
stos
and
nop
test
mov
inc
xchg
jae
cmp
xchg
ret
call
call
js
cmp
sbb
aam
push
sbb
ffreep
xor
daa
arpl
daa
sti
into
dec
aaa
sti
dec
fldenv
test
daa
repnz
test
mov
mov
sub
scas
cmpsb
mov
pop
cmp
dec
mov
cmc
adc
inc
jne
jb
cmp
pushf
fisubl
mov
jecxz
movb
clc
jl
adc
mov
scas
cmp
out
daa
ret
inc
sti
cmpsb
pop
mov
add
sbb
aas
into
int
mov
mov
sbb
fwait
or
iret
pop
lods
repnz
arpl
outsl
mov
out
push
in
pop
test
icebp
jne
cltd
inc
out
dec
ss
jo
leave
dec
ret
lahf
cmp
add
mov
stos
daa
pop
enter
or
xchg
loopne
dec
das
and
rcl
fcmovnbe
mov
std
pop
adc
out
mov
sub
rcr
mov
jge
xlat
pop
ds
lahf
or
dec
add
jae
pop
sbb
stos
push
jb
fcompl
in
outsb
and
push
sbb
shll
lods
pop
cmp
lahf
iret
sbb
imulb
jp
test
mov
push
faddl
cmp
inc
fstpl
fsubrl
cmp
neg
xchg
mulb
push
mov
mov
cmp
jge
pop
jno
enter
out
mov
cmpsl
icebp
roll
int
push
orl
mov
inc
adc
out
sahf
jne
mov
push
jl
mov
sbb
outsb
sbbb
lea
add
adc
mov
fs
fwait
lahf
push
push
ljmp
xchg
loope
out
mov
pop
jno
add
sbb
jg
ljmp
pop
imul
movsl
jmp
lahf
jcxz
pop
shl
pmaxsw
sub
popa
ret
add
mov
in
jl
clc
divl
and
xchg
dec
jg
ljmp
mov
ljmp
xorb
adc
leave
dec
sbb
push
adc
loopne
mov
ret
xchg
lcall
ret
dec
xchg
lods
adcb
and
inc
push
sarb
fists
and
lahf
les
fmul
pop
pop
addl
fnsave
add
push
hlt
out
dec
out
cs
xchg
out
cmp
cli
jo
stc
int3
mov
mov
inc
sub
and
and
jo
push
sbb
pop
outsb
sub
mov
in
and
int
lret
andl
sbb
sbb
stc
sub
xchg
or
sub
cwtl
mov
xor
das
xchg
shrb
pushf
xchg
ja
push
lock
add
lret
out
adc
cmp
scas
dec
add
or
xor
dec
insb
out
ljmp
jmp
xchg
lahf
add
je
out
jns
imul
push
lods
mov
andb
sub
mov
fsub
jl
dec
xchg
insl
push
mov
xor
mov
xor
mov
cmp
leave
mov
pop
sub
fsubs
lahf
or
jb
sbb
jo
gs
adc
js
ja
scas
loopne
addr16
sbb
or
rcrb
lcall
xchg
rcrl
out
sahf
outsl
push
jge
rcll
aad
fnstsw
xchg
paddq
mov
addl
rolb
push
cmp
sbb
push
inc
sbb
mov
adc
clc
mov
cli
cmp
scas
sbb
lahf
call
cmp
push
daa
xchg
sahf
idivl
adc
call
test
add
jl
stc
arpl
pushl
lea
icebp
add
jae
outsb
mov
insl
call
mov
jae
push
cs
cmp
bound
lret
ds
fbld
imul
adc
push
test
cmp
cmp
insb
mov
arpl
repz
jae
xor
outsb
sbb
adc
and
std
pop
cmp
dec
les
fwait
xor
xchg
leave
adc
dec
dec
aam
in
mov
ljmp
cld
int3
jne
mov
add
das
or
dec
xor
movsb
icebp
inc
dec
sbb
adc
cli
mov
fucomip
into
push
jo
sbb
or
ret
shll
or
mov
pop
pushf
cmp
xor
imul
jne
je
mov
incb
sub
popa
mov
cmp
adc
inc
sub
iret
jp
ret
inc
xchg
and
sbb
xchg
jecxz
jge
sarl
adc
sub
jg
out
arpl
insb
sbb
mov
mov
jns
std
mov
pop
insl
loop
push
mov
add
push
dec
bnd
pop
push
cwtl
sti
cld
inc
mov
push
loope
add
sbbl
push
inc
ret
orb
sub
sbbb
inc
pop
xor
or
loopne
scas
dec
push
in
lret
mov
pop
dec
pusha
jne
shrl
ljmp
mov
or
mov
pop
movsb
out
jno
divb
std
xor
lret
pop
pop
js
fwait
orb
inc
sarb
mov
jo
mov
gs
xchg
inc
pop
push
add
lods
sahf
jmp
adc
jns
lods
roll
cmp
mov
or
cmp
mov
je
lods
xchg
xor
std
xchg
mov
cld
std
push
and
rclb
mov
ljmp
loope
arpl
jne
inc
shr
cmp
sub
outsl
ret
clc
adc
jge
push
test
clc
mov
daa
pop
jmp
bound
push
mov
ss
mov
aas
imul
push
dec
movsb
mov
insb
pop
mov
and
adc
mov
xor
sbb
add
gs
fwait
xchg
out
sbb
push
inc
xchg
daa
dec
and
add
in
fs
push
icebp
fwait
into
jo
and
or
adc
jae
cmpsb
push
inc
or
adc
enter
insl
scas
aam
jne
stc
fs
cmp
lcall
xor
popf
test
outsb
add
pop
pop
out
aas
imul
sub
push
xchg
adc
sarb
sub
fbstp
or
push
aaa
pop
ret
hlt
rorb
scas
mov
mov
addb
mov
sbb
imull
xor
sbb
mov
mov
cs
shrl
mov
insl
pop
lcall
mov
sbb
cs
jae
mov
xchg
cmpsb
mov
dec
pop
cmp
pop
sbb
push
mov
stos
loop
hlt
iret
scas
stc
ljmp
into
sarl
mov
cmp
inc
int
sti
cmp
mov
clc
cmpsb
pusha
jmp
pop
shrb
icebp
pushl
cmp
jae
adc
or
leave
decl
or
lds
loopne
int
stos
adc
push
pop
cli
mov
sbb
push
mov
mov
jg
scas
insb
jl
dec
fwait
imul
test
sahf
mov
or
cmp
std
jbe
in
cmp
out
sub
ror
add
mov
jmp
push
inc
xor
jle
dec
cld
jo
inc
or
push
fldenv
jnp
out
insb
mov
jg
ljmp
and
sarl
xchg
lds
lds
mov
fs
iret
arpl
rorb
add
sbb
pop
mov
push
js
in
sub
subl
mov
push
leave
add
adc
mov
inc
xchg
xlat
sbb
xchg
sbb
sbb
out
insb
popf
imull
das
jbe
lret
lods
ret
and
daa
adc
inc
and
test
mov
sete
mov
push
in
aad
push
and
and
add
mov
mov
pop
adcl
adc
fstpl
xor
mulb
out
mov
loop
dec
jecxz
subl
and
leave
icebp
add
dec
or
mov
popf
pop
sub
imul
stos
lret
lods
jmp
testb
fsubs
pop
inc
ret
ret
fstl
pop
rolb
das
adc
test
xchg
jo
xor
sbb
icebp
js
add
insl
xchg
inc
cli
sub
fistpll
lret
pusha
rcrb
push
js
mov
inc
sahf
mov
push
sub
cld
repnz
daa
icebp
push
gs
pop
out
clc
jno
push
sbb
push
push
mov
in
push
add
push
cmp
add
in
js
orb
adc
in
sbb
pushf
daa
cmp
add
outsl
add
cs
je
lods
adc
pop
jns
mov
dec
ficompl
jno
push
pop
std
dec
xchg
mov
xor
sti
cmp
shl
mov
dec
sub
cmp
xchg
push
in
mov
aad
and
ror
xor
dec
sub
and
mov
and
mov
dec
fmulp
sub
or
pop
hlt
lret
jb
nopl
in
adc
aas
jmp
mov
fcmovbe
lods
std
push
les
inc
push
lcall
mov
mov
js
fnsave
jbe
adc
push
cwtl
jns
jmp
dec
test
xchg
jno
cli
aad
sub
ret
adc
addr16
loope
iret
and
mov
je
inc
leave
pusha
push
mov
ret
cwtl
stos
jl
xor
popf
jge
jns
aad
loop
or
rcl
or
or
and
mov
ror
pushf
test
sub
ja
dec
xchg
adc
cld
mov
xchg
fbld
insb
popa
mov
aad
imul
xchg
gs
inc
jg
in
add
sbb
adc
mov
xchg
loope
or
xor
or
xchg
test
pop
movsb
dec
xlat
and
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
incl
sbb
pxor
jmp
scas
cmp
and
insb
jge
push
cwtl
ficoms
push
jno
cs
mov
mov
xchg
popf
jnp
das
push
sbb
ljmp
push
imul
pop
cltd
add
jmp
adc
adc
rcll
ljmp
outsl
call
inc
inc
stos
int3
jl
fdivp
sbb
mov
sbb
rcrb
pop
xor
adc
or
lret
or
ret
pop
mov
mov
cmc
mov
pop
mov
roll
jns
jge
pop
pusha
adc
dec
mov
or
shrb
mov
jb
mov
int
in
sub
je
leave
shrb
xchg
addr16
dec
jmp
mov
movsl
mov
out
and
shll
popf
jp
aam
enter
sbb
cmp
adc
xchg
lret
test
subb
push
repnz
int3
adc
cli
data16
out
rcrl
mov
jp
outsl
fwait
test
mov
aas
xchg
js
push
lcall
popa
out
mov
imul
mov
sbb
push
gs
leave
fwait
int
sbb
inc
xchg
lret
xchg
sahf
lods
pop
jns
pusha
int
lret
cmp
mov
lcall
movsl
mov
and
lcall
imull
lock
adc
fiaddl
dec
or
aas
xor
inc
ret
push
mov
inc
pushf
fs
pushf
or
out
dec
fistl
sbb
add
das
das
ja
les
insl
loope
or
pop
stc
add
push
repz
shll
mov
pop
push
insl
cmpsl
sbb
mov
sbb
rorl
imul
data16
leave
cwtl
in
cs
push
add
test
push
scas
or
mov
fildl
ljmp
dec
jo
add
cmpl
adc
push
adc
add
cmp
mov
sbb
hlt
enter
lds
adc
sbbb
pop
and
lock
mov
aaa
mov
hlt
sbb
pop
xchg
andl
out
jbe
aad
xchg
sbb
ljmp
jnp
mov
fsubp
xor
sahf
jmp
fidivrs
jmp
or
xchg
stos
lods
cwtl
clc
jo
jno
add
loopne
xchg
outsb
idivb
sub
push
divps
jb
fdivr
jmp
outsb
out
and
cs
push
add
fwait
xchg
pop
enter
js
leave
nop
mov
cli
rorb
test
ljmp
testb
xor
and
jbe
inc
sarb
jo
dec
adc
mov
sbb
insl
pop
cmp
pusha
sub
mov
addl
adc
jae
jg
leave
es
lods
jle
adc
lcall
jle
addl
mov
arpl
call
inc
mov
pop
and
xchg
in
pop
mov
les
out
das
mov
shll
fildll
mov
adc
push
sbb
xchg
add
popa
add
lcall
jmp
bnd
or
pop
or
inc
mov
push
sub
jmp
pop
nop
mov
fdivrs
cmp
adc
jecxz
and
filds
gs
add
lret
inc
subl
push
js
adc
or
sbb
pusha
or
outsb
add
push
mov
int3
cmpsl
sbb
test
mov
sbb
aas
ljmp
jb
xchg
mov
fimull
les
cltd
mov
sub
push
jg
adcl
jge
push
inc
je
push
add
jne
cmp
push
mov
and
xlat
cmp
mov
adcb
xchg
out
dec
in
jl
out
xchg
fmul
adc
imul
and
inc
xchg
jns
negl
jle
mov
lret
cmp
test
ljmp
dec
dec
lds
and
aaa
jp
add
sub
pop
insl
das
sbb
push
insl
jo
cwtl
imul
push
enter
call
mov
testl
jmp
lahf
sbbb
and
pop
pushf
mov
dec
in
test
add
shl
stc
inc
xchg
fucomi
mov
xor
sahf
loope
lds
and
mul
pop
ficompl
xor
jae
pusha
cs
pop
popf
in
cmp
jp
mov
xor
out
inc
push
inc
lcall
in
inc
sbb
jg
aam
gs
or
adc
xchg
sub
sbb
dec
or
test
mov
cmp
add
or
mov
insb
mov
and
lcall
imul
push
cmp
outsb
adc
cmp
rorl
push
fdivrs
repnz
in
sbb
push
movl
sub
lret
or
stos
out
pop
and
or
mov
pandn
adc
sbb
je
push
aaa
pop
mov
cmpsb
pop
std
xchg
xor
mov
mov
lahf
mov
add
aaa
inc
ds
iret
in
enter
rcrb
cld
movsb
or
mov
insl
mov
sarl
insl
jmp
loopne
and
lds
aaa
xchg
pop
cmpw
sbb
adc
xchg
cltd
pop
ljmp
pop
and
cmp
call
data16
rcrb
jge
mov
inc
push
adc
mov
mov
sbb
filds
pop
lds
fsincos
in
leave
stos
sub
dec
loop
push
push
ljmp
shll
icebp
fwait
cmp
mov
cmp
dec
cmpsl
stc
add
into
xor
mov
mov
loope
ret
jge
and
gs
xchg
pop
mov
push
lcall
icebp
iret
rcrl
in
mov
xor
jecxz
das
lods
adc
shl
mov
cmp
pop
out
or
call
nop
lock
ja
movsl
scas
icebp
jmp
ds
out
adc
bound
mov
mov
inc
fsubr
xchg
loope
mov
shrb
xchg
push
in
ret
mov
and
sbbl
xchg
fistps
jnp
jmp
test
jl
pop
xchg
outsl
popf
and
loopne
jo
mov
xor
rep
fs
mov
pop
lcall
dec
negl
sbb
fldl
inc
insl
jmp
inc
gs
mov
and
aas
and
test
lods
adc
aad
call
dec
loope
and
pop
mov
popf
dec
xlat
in
cmp
sub
sahf
divb
pop
push
sub
dec
xchg
jmp
cmp
mov
cmp
and
pop
lea
out
inc
add
data16
mov
or
adc
in
and
test
sub
lods
imul
nop
jbe
xchg
lcall
aaa
or
jecxz
and
aaa
push
push
adc
jno
aad
lret
aaa
insl
fcoml
sbb
movb
dec
lods
outsb
or
scas
xchg
add
std
aad
repz
data16
mov
mov
or
les
jo
or
ror
bound
cmpsl
or
sbb
bound
sbb
jl
add
std
ljmp
sarb
hlt
gs
push
mov
cmp
mov
sub
aam
pop
es
mov
jmp
and
xorb
ss
call
dec
adc
lret
mov
mov
cmp
push
sub
xchg
xchg
aas
imul
adc
pop
addr16
sbb
notb
les
outsb
gs
push
aam
pop
mulb
cmpsb
jbe
sti
or
sbbb
jmp
lahf
std
cmp
sahf
cwtl
mov
icebp
push
mov
sahf
jbe
xchg
mov
mov
and
addb
cltd
mov
in
sbb
pop
arpl
pusha
xchg
add
jnp
mov
xchg
cli
adc
ja
lds
adc
rcr
dec
mov
add
dec
adc
mov
push
push
jae
mov
in
xor
ljmp
mov
imul
dec
inc
cmc
push
or
stos
cmp
sub
sti
push
sbb
push
push
mov
adcb
popa
in
jecxz
loopne
cmc
call
and
cmc
adc
dec
cmpsl
lret
iret
adc
push
dec
arpl
push
and
in
xchg
inc
sub
lret
out
enter
and
sub
ljmp
roll
aaa
in
lea
mov
sub
enter
dec
mov
xor
mov
insl
dec
lret
jle
push
push
xchg
test
sub
mov
ret
mov
cmp
lahf
call
lods
insl
in
cld
xor
add
jnp
gs
daa
iret
xchg
mov
xor
or
in
push
int3
js
test
rcrl
jp
mov
test
es
iret
ljmp
fdivs
lret
and
je
int3
and
push
movsb
test
cld
jmp
xchg
mov
in
xchg
out
cwtl
xor
push
sbb
mov
inc
sub
in
je
sbb
sub
sbb
xchg
add
fnstsw
push
gs
popa
outsb
lahf
or
pusha
scas
mov
pop
decl
pop
shll
push
ret
sbb
jo
in
dec
pop
adcb
cmp
imul
subb
mov
and
and
stc
cmpl
jmp
divl
hlt
pop
push
and
cmp
cmpsb
jo
sub
in
pop
or
cs
inc
inc
into
addr16
adc
mov
movsl
popa
out
out
xchg
aaa
jle
fdivl
sub
shl
mov
mov
repz
addr16
push
aad
scas
pop
lock
dec
fcmovnu
aad
jb,pt
push
inc
hlt
lret
sub
jle
les
xchg
repnz
lret
sbb
cmpsl
shll
sbb
in
pop
insb
xchg
mov
imul
xchg
sbb
jae
mov
mov
lock
cld
jmp
fsts
je
fadd
gs
mov
or
cld
cmp
inc
lcall
in
fnstsw
aad
or
add
sub
add
int3
fstpl
les
into
ret
mov
stos
out
inc
cmp
fiaddl
das
int
out
das
test
mov
icebp
push
pop
push
ficoms
push
jg
stc
mov
cmpb
pusha
adc
pusha
hlt
dec
or
push
cwtl
xchg
xorb
loope
cmc
jno
test
pop
xchg
mov
mov
inc
sub
cmp
mov
sbbl
cmp
cmp
inc
mov
cltd
jb
mov
sbb
xchg
adc
cmc
add
sub
xor
mov
xor
jns
mov
sbb
shlb
push
arpl
xchg
xor
pop
pop
stc
lock
sbb
and
mov
add
movl
ja
push
cmp
inc
jbe
push
nop
pusha
add
int
push
loopne
push
or
adc
and
pop
push
push
jnp
nop
mov
jb
add
push
cli
pop
cltd
sbbl
cltd
add
ja
jl
pop
dec
adc
jb
pop
mov
jle
add
push
or
sub
push
xor
in
jbe
ret
dec
aaa
ret
xchg
adc
mov
cwtl
out
xchg
ds
xor
mov
pusha
mov
jg,pn
xchg
push
repnz
imul
inc
push
adc
fistl
sbb
nop
popf
push
xchg
fmul
out
sub
push
adc
sahf
mov
mov
push
jnp
pop
mov
or
movsl
cs
mov
jg
int
jg
test
xchg
cmpsb
lret
pop
movsb
lock
cmp
imul
push
pusha
cld
movsl
lret
push
adc
mov
hlt
fcmovnbe
push
and
ljmp
fiaddl
xor
jns
add
add
imul
inc
jl
frstor
jne
xchg
cmp
inc
mov
sbb
xchg
call
mov
sbb
stos
sub
xchg
and
das
fs
lret
add
add
add
inc
xchg
add
cmc
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
