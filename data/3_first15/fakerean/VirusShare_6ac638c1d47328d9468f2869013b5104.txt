add
and
dec
inc
mov
sub
lea
movzbl
movswl
inc
mov
dec
inc
mov
inc
xor
movzbl
lea
mov
add
dec
inc
and
dec
sub
movzbl
and
lea
xor
mov
add
inc
dec
sub
inc
add
lea
mov
sub
dec
sub
inc
dec
jne
or
mov
lea
mov
pop
dec
dec
pop
dec
dec
pop
sub
lea
mov
inc
dec
inc
dec
xor
lea
imul
sub
add
ret
push
add
inc
dec
add
lea
movzwl
inc
inc
push
push
push
push
sub
inc
or
push
lea
movsbl
inc
dec
dec
dec
or
lea
mov
mov
inc
push
add
inc
xor
dec
sub
push
lea
imul
push
dec
dec
pushl
inc
call
dec
add
xor
lea
imul
dec
inc
sub
add
pop
ret
fucomip
and
add
pop
and
inc
add
sub
ljmp
test
push
pop
hlt
arpl
sarb
push
push
rolb
int3
pop
mov
xor
ja
jne
or
lcall
pop
sti
lea
fisttpll
dec
lea
xor
lret
or
mov
pop
pop
or
jbe
mov
fcmove
push
jmp
mov
in
outsl
or
mov
iret
mov
xor
hlt
mov
std
int
inc
lahf
test
lds
out
xchg
sub
cmc
pop
ror
add
push
push
lods
ljmp
and
movsb
xor
inc
les
movsl
pop
mov
divps
jmp
jg
pop
sub
xchg
jb
inc
xchg
push
subb
std
gs
push
imul
movb
push
adc
adc
jno
js
adc
xchg
mov
fcoml
dec
pop
lcall
xchg
pop
jne
jmp
outsb
jp
jmp
xchg
push
mov
ljmp
dec
stc
lods
and
test
pop
cld
jne
clc
push
sub
icebp
andb
fdivs
popf
sub
pushf
pop
mov
dec
cmp
fdivs
mov
mov
lock
add
rcll
jp
and
lods
rclb
xchg
sub
mov
in
mov
mov
aas
add
cmc
mov
inc
les
outsl
mov
pop
xchg
movsb
push
scas
fnsave
sub
lds
mov
mov
mov
fsubrs
mov
sbbl
clc
jns
cmpb
inc
add
ja
or
adc
add
and
icebp
lock
call
sub
mov
inc
xor
das
scas
jmp
sbb
loope
dec
loope
mov
dec
ja
loopne
sbb
push
js
adc
add
sarb
and
insb
bswap
sub
outsl
popf
in
push
adc
inc
mov
cmpsb
push
sub
stos
repz
vfmsubadd231pd
aaa
out
xlat
or
dec
sbb
stos
daa
call
adc
aam
xchg
xchg
fisttpll
xchg
outsl
ljmp
jo
aad
cwtl
pop
and
mov
sbb
mov
sub
aas
mov
dec
mov
les
loope
mov
inc
in
movsb
xor
std
jnp
mov
addr16
mov
pop
dec
orb
cld
leave
mulb
pop
insl
movsl
adcb
mov
mov
xchg
inc
test
mov
push
adc
jo
mov
sub
jnp
sbb
dec
mov
leave
ret
cs
cwtl
enter
scas
cwtl
fstpl
jle
stos
popf
push
fistpl
imul
out
mov
push
loopne
xchg
mov
push
cmp
and
xchg
jae
addr16
outsl
xchg
jge
xor
or
mov
lds
mov
je
js
jmp
call
fnsave
mov
int
cli
imul
rcrb
xchg
aad
push
cmp
jge
xor
xor
dec
xor
adc
mov
mov
enter
fs
mov
inc
scas
adc
movsb
dec
call
adc
ds
pushf
mov
jecxz
out
mov
fsubrl
jge
or
mov
hlt
pop
loopne
mov
subb
xor
out
lea
nop
divb
cmpsb
popf
lahf
stos
in
js
jno
sbb
jg
add
insl
push
cltd
mov
repz
sbb
repnz
xchg
jns
mov
stc
dec
cmp
adc
lds
rolb
imul
dec
push
cmp
push
call
xchg
and
ds
push
adc
xlat
mov
and
mov
fstpl
cmp
fcmovnu
ljmp
aaa
gs
adc
and
aad
push
pop
lcall
jno
test
leave
or
cmp
inc
inc
imulb
nop
xchg
jnp
pop
cmpsb
dec
mov
cmp
mov
iret
cwtl
xor
inc
jmp
push
mov
pop
or
push
into
daa
xor
inc
or
leave
out
lret
or
sub
test
push
sbb
add
mov
cltd
mov
sahf
inc
add
addr16
xchg
jecxz
mov
push
das
lock
push
sbb
dec
in
cwtl
data16
notl
insb
mov
dec
cld
fcomps
in
push
imul
jl
jne
mov
sub
pop
lods
sub
push
shrl
aam
ss
outsb
mov
mov
fs
xlat
arpl
sub
sub
lret
push
xor
aad
pop
mov
ja
mov
cmpb
sub
push
xchg
pop
mov
cmp
lret
jge
insl
fidivrl
lret
fisubs
mov
movsb
inc
mov
add
mov
dec
lcall
movsb
test
shrb
insl
jns
add
jae
mull
xor
imul
mov
fmulp
xor
mov
mov
aam
pop
daa
sub
lds
cmp
shrb
dec
sub
lcall
xor
outsl
rclb
arpl
mov
sbb
or
arpl
fdivl
push
fcmovnb
adc
or
vpmacsdd
inc
jns
jge
mov
cmp
xchg
mov
in
outsb
mov
sbb
enter
andl
pop
ss
jl
mov
dec
inc
cmpsb
adc
test
mov
cmp
jecxz
add
ret
stos
mov
push
insl
cli
in
mov
jnp
mov
rcr
adc
sti
sbb
xchg
stc
or
inc
je
pop
ss
subb
adc
lahf
dec
xchg
cwtl
and
lods
ret
mov
mov
jbe
out
test
pushf
cmp
jnp
add
call
inc
mov
mov
add
and
test
inc
rolb
jo
mov
sub
int
or
hlt
stos
inc
pop
sub
inc
rcrl
dec
mov
sar
add
daa
shrl
pop
and
inc
add
loop
or
jle
mov
mov
icebp
cmp
cld
and
das
test
push
add
sti
sbb
mov
mov
or
popa
jp
add
mov
pusha
ljmp
jmp
test
pop
add
inc
loope
xchg
nopl
bound
pop
pop
test
imul
adc
cmp
mov
fcoms
add
stos
std
ret
in
pop
nop
fstpt
nop
sahf
push
addr16
mov
pushf
imul
cltd
jbe
loopne
xchg
push
mov
mov
out
mov
fdivr
or
mov
popf
jno
out
nop
iret
inc
clc
dec
push
add
mov
pop
cmp
add
test
std
add
jmp
mov
test
inc
pop
sub
xchg
mov
iret
aam
adc
jp
jo,pt
repz
negl
repz
inc
pop
sbb
pop
lcall
sub
imul
jo
xchg
mov
rcll
push
inc
mov
insb
cwtl
das
inc
cmpsb
mov
cmp
sbb
cli
jns
xor
pop
test
ljmp
fsubrl
dec
mov
cmp
repz
xlat
mov
cmc
or
pop
push
arpl
jp
sbb
lea
inc
fmuls
call
xor
fnstsw
arpl
and
sbb
xor
xor
or
push
pop
dec
stos
jo
push
pop
test
ucomiss
pop
outsl
data16
adc
xor
mov
adc
adc
shlb
popa
mov
push
xchg
mov
jbe
xchg
inc
adc
cmpsl
xchg
jo
daa
int3
cltd
test
enter
out
push
push
jmp
add
fsubr
mov
mov
loop
fisttps
push
add
add
ret
jecxz
inc
jo
repnz
popa
sub
lock
cmp
iret
les
jge
repnz
sbb
push
xor
testb
decb
pop
jl
hlt
sub
mov
cmp
test
dec
dec
sahf
movsb
add
outsl
pop
xchg
sbb
pop
or
and
xor
sarl
scas
arpl
jns
push
sbb
stc
mov
mov
cmp
push
add
es
jno
ret
dec
cmp
outsb
movsl
ljmp
fcomip
fcmove
inc
lock
pushaw
imul
ss
in
imul
enter
xorl
jo
pop
xchg
sahf
add
negl
int3
sub
nop
jbe
movsb
pinsrw
pop
pop
and
sub
push
int
out
push
dec
or
imul
int3
es
and
lods
jb
push
int
push
int3
ja
mov
mov
push
or
loopne
rcrb
sub
pop
add
push
cli
adc
enter
fnstsw
cmp
and
jmp
mov
and
jl
fdivp
mov
js
mov
cltd
scas
xchg
scas
mov
mov
dec
das
arpl
mov
xchg
les
ljmp
lahf
fadds
fmull
dec
int3
push
sbb
lahf
mov
daa
fnstenv
push
loopne
js
lret
movsl
push
test
filds
inc
out
repnz
cli
pop
pushf
std
cld
cmpsl
jl
mov
mov
test
pop
inc
cmp
stos
sub
popf
and
pop
or
in
cmp
jo
hlt
scas
push
inc
xor
loope
testb
insb
inc
push
cld
stos
mov
jmp
mov
out
fcompl
lcall
nop
movsl
data16
jecxz
and
shrb
into
jmp
mov
repnz
push
jle
punpckhbw
add
push
ljmp
or
xchg
ret
test
jle
lock
movsb
mov
jmp
jge
cmpsl
mov
push
std
mov
bound
ficoms
jne
test
mov
jne
rol
lods
mov
and
dec
xchg
add
stos
es
mov
or
mov
mov
imul
ffreep
inc
cwtl
pop
push
loopne
jno
mov
push
jmp
cltd
sbb
jmp
int
or
xchg
inc
sub
test
ror
or
imul
lds
test
push
jecxz
jbe
xor
sub
push
cmp
sub
lods
cmp
cltd
lock
lock
ja
jb
pop
arpl
xchg
sub
pop
in
adc
pushf
popa
mov
cwtl
pop
int
fnsave
mov
mov
mov
lods
mov
mov
jne
mov
loopne
rcrl
cmpsb
xlat
ds
jnp
adc
mov
mov
and
xor
testl
andb
pusha
imul
stos
fucomip
lahf
out
lods
xchg
pop
ja
mov
jns
enter
xor
scas
roll
cmp
fisubrl
add
stos
mov
mov
mov
dec
test
mov
jge
push
rolb
mov
movsb
push
ds
sub
or
and
cltd
aas
sub
icebp
dec
sub
mov
test
push
push
popa
adc
inc
fistpl
cmp
push
popa
pop
sub
xor
mov
xor
les
test
setae
mov
imul
inc
rcr
jge
lods
cmp
popf
cmp
les
sahf
lea
js
push
aaa
sbb
dec
mov
xor
leave
xor
xor
inc
popa
jae
or
xlat
pusha
add
loop
xor
mov
mov
mov
xor
nop
dec
mov
lret
clc
ja
cwtl
mov
mov
jno
cmc
push
adc
aam
lcall
pop
jle
sbb
push
out
aam
dec
sub
jle
mov
test
fadd
sub
inc
rcr
lret
gs
xlat
xor
dec
icebp
push
out
std
add
dec
jo
cltd
mov
lcall
xchg
cmc
mov
es
xor
mov
rsqrtps
leave
cmp
pop
dec
mov
ret
mov
out
lds
mov
xchg
pop
int3
scas
test
sbb
in
pushl
ds
mov
in
scas
je
push
mov
dec
dec
inc
jp
xlat
lahf
ror
adc
xor
pop
add
cmp
dec
adc
mov
jae
cmp
daa
sub
cmp
les
xchg
sbb
add
idivl
leave
nop
add
pop
mov
popa
fsts
les
jnp
push
push
into
cmp
xor
dec
adc
and
icebp
push
xor
sub
mov
lods
push
xor
lea
dec
pop
iret
xchg
jbe
es
mov
sub
bound
xchg
pop
es
imul
dec
mov
lea
xchg
mov
lret
xchg
addr16
stos
mov
mov
cs
outsb
push
or
and
aam
mov
dec
mov
cmp
jo
orb
gs
jl
and
fsubrl
repz
rcll
shlb
cmp
or
stos
in
es
xor
sbb
stos
das
enter
repz
addr16
test
js
dec
test
test
ret
mov
jo
cmp
mov
and
js
jmp
outsb
popa
fidivs
or
add
and
adc
adc
add
fistps
mov
in
stos
lods
std
jnp
add
push
cmpl
hlt
xchg
imul
fidivs
and
xlat
test
or
xchg
push
out
mov
enter
push
xchg
ja
mov
lock
icebp
pop
xor
outsl
mov
addb
pushf
arpl
dec
push
pop
adc
call
mov
jno
xor
jne
stc
xchg
test
test
mov
cmp
sub
das
inc
mov
jne,pn
pop
or
inc
xchg
and
movsb
mov
out
dec
sbbb
lret
scas
ficoms
jne
push
xchg
xor
shll
movsb
lods
cmp
cmpsb
and
sbb
hlt
jns
mov
pop
das
mov
and
js
jmp
dec
sbb
stos
in
call
ljmpw
sbb
std
in
fadds
inc
vmovlpd
ds
loope
mov
pop
push
cmp
fs
adc
mov
rolb
sbb
mov
sub
cmpsl
div
call
mov
outsb
out
repnz
insl
sti
jl
dec
mov
shlb
inc
les
lods
mov
jne
outsl
out
lret
adc
cltd
repz
cltd
add
idivb
mov
shr
sub
sub
sbb
jns
jl
and
mov
cmpsb
in
mov
insl
mov
jle
jl
aam
jnp
and
jne
nop
fimull
rcr
xor
call
stos
mov
sub
inc
lods
push
sub
cwtl
shrl
add
mov
push
out
jne
dec
jecxz,pn
inc
cmc
shufps
or
adc
mov
ja
cmp
stos
push
lret
imul
push
je
mov
cmpsl
add
bound
inc
sbb
out
and
aam
mov
jns
cld
inc
repz
mov
pushf
sub
xchg
mov
inc
or
lret
sbb
es
mov
pop
dec
cli
pop
cmp
aas
mov
push
xor
lods
xor
shrb
jmp
mov
sbb
stc
xchg
adc
push
pop
arpl
add
and
push
jge
mov
int3
idivl
cwtl
test
idivl
pop
lea
cmp
repz
push
jnp
sti
pop
in
call
in
jle
jo
mov
or
push
mov
mov
icebp
test
movsb
cmpsb
pop
add
cltd
stos
lods
mov
mov
push
cmp
test
push
or
movsb
push
bound
iret
add
or
enter
fld
loop
sub
fildl
push
mov
inc
in
jge
cltd
bound
mov
xchg
lock
xchg
je
sub
movsl
xchg
push
out
outsl
add
or
mov
and
sbb
in
dec
stos
inc
and
ja
jne
pusha
add
mov
mov
ss
and
sbb
jnp
cmpsb
ret
shrb
add
dec
popf
test
nop
cli
gs
sarb
idivl
push
mov
sahf
call
mov
out
xchg
jl
adc
adc
addr16
test
mov
or
loopne
sub
dec
lcall
jb
es
xor
mov
and
pop
pusha
xchg
fs
mov
mov
jns
dec
add
mov
jecxz
inc
sbb
loope
aam
loope
jb
adc
negl
insl
dec
dec
push
push
push
or
popf
test
test
pushf
lcall
cwtl
push
adc
xchg
ss
mov
add
dec
and
mov
mov
mov
and
loopne
jne
jg
into
xor
xor
outsb
out
lahf
xchg
sub
cltd
testl
xchg
push
icebp
dec
lods
push
lret
sbb
loope
pop
xor
mov
push
lods
bound
hlt
or
pop
fnstenv
fldcw
pop
insl
jo
xchg
sarb
mov
mov
pop
mov
lock
sbb
aad
daa
int
in
movsb
and
inc
fwait
cmp
push
outsb
popf
xor
mov
loop
flds
outsl
sub
dec
add
cmp
xlat
inc
inc
mov
and
rorb
addr16
shrb
lods
cld
fidivrl
dec
ds
xchg
leave
sub
xchg
iret
mov
mov
test
push
lret
nop
jecxz
or
mov
inc
inc
fildll
ja,pt
out
jmp
out
sti
mov
lcall
xchg
aas
pop
mov
add
outsb
cmp
xchg
lea
push
mov
dec
add
xchg
daa
push
sub
and
movsb
enter
imul
cmpsl
mov
xor
ja
stos
aam
inc
inc
add
mov
cmp
insl
inc
test
es
adc
roll
out
push
mov
mov
push
add
retw
sbb
jle
inc
adc
icebp
mov
int3
xchg
ret
cmp
add
lahf
test
adc
ljmp
leave
xor
xchg
mov
cmp
icebp
sbb
dec
sbb
repnz
push
cli
cld
sub
mov
inc
push
inc
ja
and
mov
rcl
call
int
xor
mov
sbb
or
xchg
addl
and
sub
cmp
lock
negl
jno
pop
push
addr16
hlt
mov
adc
imul
dec
leave
fidivl
icebp
cmp
and
shrb
leave
scas
lahf
enter
jl
push
pop
lds
cmp
jg
shll
push
inc
imul
sub
xlat
mov
fcmovb
jge
popf
push
xorb
loop
adc
stc
dec
movsl
cmp
xor
nop
xor
xor
aad
cmp
sbb
iret
call
xchg
add
out
dec
sbb
loopne
inc
sarl
popa
xor
sbb
pop
mov
xchg
adcl
loop
xor
pop
out
push
stc
mov
negl
or
les
jl
loope
mov
sub
outsb
push
mov
push
loopne
push
inc
sbb
cld
flds
shlb
xchg
sbb
out
addl
or
dec
mov
imul
add
cwtl
or
iret
and
dec
push
xor
sbb
arpl
insl
adc
adc
add
fsubrs
incb
cmp
jae
mov
add
out
add
xchg
xchg
js
clc
int3
clc
cld
sub
dec
pop
or
cmpsl
jl
adc
mov
cs
cwtl
pop
and
xchg
out
decl
mov
dec
xor
inc
popf
loopne
xchg
test
add
clc
mov
dec
je
fdivrl
ja
jae
fsubrl
add
jbe
sahf
aas
aam
mov
mov
pop
nop
and
out
or
dec
test
mov
nop
mov
rolb
pop
es
pusha
movsb
cmp
cld
pop
add
js
fwait
nop
bound
cmp
jo
mul
mov
xchg
jle
repnz
ds
out
fnsave
mov
sbb
pusha
pop
push
outsl
cli
jae
push
mov
int3
inc
adc
sub
inc
add
shll
mull
add
or
push
cmp
and
sbb
dec
inc
sbb
push
or
inc
clc
aaa
sbb
fxch
outsl
jmp
mov
pop
test
ljmp
xchg
aam
xor
xchg
shr
xchg
fisubs
push
adc
dec
dec
lds
sub
hlt
dec
push
dec
lret
out
sub
sub
dec
cmp
insl
imul
pop
push
or
cmp
insl
or
add
leave
pushl
and
mov
dec
repnz
jno
fisttps
fstps
jbe
cmp
cmpsl
mov
adc
push
aaa
mov
xor
push
shrb
push
dec
not
lret
mov
cmpsl
add
lret
loop
adc
test
xor
mov
push
inc
inc
dec
or
and
and
adcl
rcpps
mov
les
jecxz
fnsave
notb
outsl
push
jo
pop
lea
mov
sub
and
lods
fisubl
hlt
pop
fistps
xchg
sahf
int3
sti
insb
xchg
sarb
push
mov
mov
inc
aam
js
js
inc
xchg
jns
push
cmp
dec
aaa
clc
movsb
addl
popf
cmpsl
popa
pop
push
push
lods
cmp
sub
push
ds
jg
push
pop
jge
in
jns
mov
scas
daa
rclb
xchg
cli
into
mov
xchg
bound
add
std
dec
mov
outsl
or
clc
xchg
lods
test
jp
push
push
add
lgs
fildl
jb
xchg
jmp
mov
cmp
in
popf
jl
loopne
jnp
lahf
push
scas
or
fmuls
je
pop
add
hlt
mov
lock
pop
loope
push
insb
jmp
mov
cmp
popf
cli
int
testl
fidivs
mov
shll
sub
sbb
sahf
adc
mov
and
lahf
fs
xor
in
push
dec
outsl
or
jns
cmp
mov
icebp
lret
into
repz
jns
mov
xchg
cmp
pop
aaa
mov
lcall
pop
jle
hlt
div
nop
pop
fwait
gs
pop
push
call
enter
push
idivb
jae
inc
cmpsl
ds
add
in
outsl
cmpsb
stos
adcl
inc
lahf
test
mov
enter
pushf
imul
sti
pop
jmp
mov
rol
out
mov
enter
test
xchg
fsubrl
test
mov
jnp
ss
test
repz
xor
xorb
lods
ret
in
mov
fcmovnb
push
jl
dec
jo
push
jg
or
xor
inc
fwait
and
pop
mov
sbb
inc
push
mov
sbb
and
ret
fildl
pop
dec
decb
into
insb
sbb
test
jecxz
or
cmp
cmp
xchg
xchg
add
xchg
lods
adc
jb
sbb
lods
adc
pop
inc
mov
xchg
add
and
jae
and
hlt
push
cmp
inc
adc
loopne
int
add
adc
aam
and
ds
sbb
sub
push
ljmp
popa
jge
test
and
inc
push
shrb
push
mov
stos
fisttps
add
arpl
sub
dec
ja
push
sbb
dec
mov
push
jnp
or
jg
mov
push
mov
cmp
pop
mov
test
adc
into
lret
loope
adc
outsl
cld
into
cltd
pop
mov
inc
jne
in
stos
lcall
sahf
mov
dec
mov
jno
sbb
mov
ret
pop
inc
fs
iret
mov
pop
or
jb
test
sub
testb
mov
dec
loop
pop
mov
sbb
cmpb
add
cmc
fwait
pop
pop
xchg
in
out
lods
ret
mov
mov
loop
jecxz
or
dec
pop
pop
nop
fmuls
dec
shlb
cmpsb
jmp
push
adc
into
aas
loop
and
dec
and
jp
adc
jp
xlat
xor
cmc
sub
out
pop
rol
gs
leave
mov
push
add
jmp
lods
shl
pop
xor
adc
mov
sbb
addl
jno
sahf
fs
cltd
aas
stc
sub
fwait
cltd
pusha
insb
dec
xchg
shr
mov
sbb
mov
adc
scas
push
lret
or
orb
outsl
and
test
push
arpl
push
ret
cwtl
jno
scas
mov
movsl
sub
test
jl
leave
and
push
jge
add
dec
jp
inc
test
mov
xor
sub
mov
mov
icebp
lret
ja
dec
xchg
and
enter
mov
push
loopne
xchg
repz
and
push
testl
out
pusha
inc
sti
mov
push
jle
repz
neg
push
movl
stc
cltd
jl
xlat
hlt
ret
pslld
mov
push
cltd
pushf
push
jnp
push
and
ljmp
jbe
and
push
sbb
lcall
ret
pop
pop
leave
movl
mov
mov
popf
arpl
test
xor
cltd
dec
jl
mov
repnz
iret
stos
icebp
fdivp
sbb
enter
std
in
out
cmp
out
out
lcall
fwait
in
mov
fcmovb
fmull
mov
fdivrs
in
add
cmp
out
pop
push
hlt
lds
sbb
push
and
and
ficompl
or
push
in
pop
and
lods
pop
lcall
push
or
cmp
xor
or
pop
jnp
mov
insl
push
lret
xchg
lock
dec
sub
xchg
notl
hlt
inc
xchg
xchg
and
incl
insb
jae
dec
xchg
ljmp
into
xor
mov
cmp
mov
les
jae
into
out
dec
mov
mov
andl
stc
lret
adc
pusha
lock
or
outsl
add
ljmp
adc
rcrb
push
xchg
sbb
push
dec
lahf
pushf
and
test
fwait
into
loopne
aaa
mov
enter
push
subb
je
inc
sub
push
cmp
pop
push
add
sub
jo
cmpsl
popf
ja
stc
push
std
ljmp
sbb
sbb
sbb
cmp
hlt
pop
shlb
in
rcll
ror
push
sub
jle
cmp
add
adc
lock
sbb
or
push
xor
rcll
cs
rol
jbe
test
cmp
mov
push
mov
and
in
nop
orl
add
xor
sbb
inc
mov
into
or
xchg
xchg
lret
push
cmc
dec
mov
and
inc
push
imul
dec
aas
push
pusha
loope
jno
cltd
ss
sarb
xor
cmp
test
fdivr
xor
inc
je
call
lret
pop
clc
pop
popf
aas
fistpll
aas
ds
cld
ss
in
hlt
daa
test
add
fcomps
popa
mov
pop
push
test
mov
xorb
cltd
loopne
sub
pop
and
inc
mov
rclb
sub
add
test
pop
add
stos
adc
outsl
adc
test
mov
mov
mov
pop
mov
jecxz
das
pop
adc
xor
in
inc
adc
cmp
nop
fnsave
addr16
in
add
dec
ds
cs
push
jmp
jge
fisubrl
sub
das
push
int3
push
insl
cmp
or
dec
jne
aad
sahf
sbbl
fcmovne
and
mov
push
jg
xor
add
rclb
jmp
pop
ds
test
out
sbb
inc
notb
push
mov
fmull
out
lods
movsb
xor
sbb
out
inc
shll
dec
dec
hlt
stos
arpl
aaa
xchg
mov
push
jae
into
adc
sbb
mov
in
punpcklwd
jo
in
stos
mov
into
js
mov
in
adc
fnstsw
outsb
ss
xchg
ds
sub
lds
push
pusha
mov
sub
fbld
xchg
jl
test
add
repnz
jns
bound
sub
cmp
or
inc
sub
aam
aas
sbb
cld
lret
in
lcall
mov
scas
xchg
and
mov
cmp
inc
xchg
sbb
sbb
sti
movsl
out
movl
test
dec
cmp
dec
jle
xchg
adc
mov
push
pop
jae
inc
lret
push
leave
pop
outsl
shll
rcrb
data16
inc
loope
data16
leave
jae
inc
daa
cmp
inc
and
enter
push
adc
sub
or
mov
inc
mov
es
test
mov
xor
ss
lret
lods
js
ret
loope
ror
icebp
adc
mov
pop
in
pop
test
fnstsw
loopne
cmp
test
in
mov
and
stos
fs
push
sub
inc
scas
add
std
scas
xorl
lods
lods
xor
sti
mov
jmp
add
xchg
jmp
loope
inc
xor
popa
jle
fs
out
je
fcomi
shrb
mov
ret
stc
pop
nop
push
mov
loope
scas
dec
pop
or
xchg
cltd
test
cmp
shrb
jo
int3
add
xchg
cli
testl
bound
andl
jge
cld
jne
sub
scas
inc
arpl
ror
or
mov
sahf
rep
outsl
stc
xchg
iret
push
rcll
roll
sub
sbb
fs
idivb
push
push
lea
outsl
cmp
push
pop
iret
aad
aas
mov
or
lods
add
jnp
mov
icebp
sti
mov
in
js
in
pop
or
cld
push
push
ret
test
mov
mov
sbb
test
es
dec
sbb
mov
fdivrl
iret
cmpsb
push
shlb
pop
jb
adc
mov
cmp
scas
mov
dec
sbb
adc
lods
mov
add
andl
movsb
rcll
aam
shlb
fidivrl
fiadds
jge
xchg
loope
mov
sbb
jp
leave
arpl
outsb
ret
ret
ja
in
out
mov
call
pop
dec
mov
push
lds
mov
call
das
or
jg
stc
out
shrl
lcall
xchg
leave
jmp
stc
mov
xlat
dec
pop
out
jge
adc
or
insl
adc
jne
sahf
das
adc
sub
inc
pop
cs
dec
push
push
aad
cmpsb
dec
fisttpll
aas
scas
and
outsb
add
lret
pop
int
or
dec
dec
aaa
inc
scas
inc
push
repnz
adc
or
mov
cmp
xchg
insl
mulb
push
rcr
ficomps
adc
loope
aaa
sbb
loop
movsb
pop
addr16
adcl
sahf
ljmp
xchg
lcall
popf
leave
test
call
imul
sub
rorl
dec
sti
and
xchg
mov
jp
lock
frstor
lret
mov
cmp
mov
es
mov
cmpsb
das
or
andb
push
push
leave
aam
xchg
adc
int3
fs
xor
pop
jno
and
test
xor
and
stos
ret
pop
push
lds
mov
arpl
test
in
xchg
addb
sub
lret
in
test
in
xlat
push
ret
pushl
out
rorl
popf
inc
xor
sbb
cmp
pop
cld
push
pushf
inc
movsl
pop
loope
push
push
data16
push
adc
jb
repz
les
fists
cmp
sub
adc
sbb
mov
push
mov
xchg
ficoms
repz
lret
ficomps
sub
es
icebp
mov
dec
jo
sub
pusha
popa
inc
out
lods
cmpsb
sbb
sbb
add
mov
pushf
and
push
insl
pop
fbstp
cmp
mov
jg
and
xchg
pop
cmp
xchg
test
cs
lods
cwtl
shll
fmul
mov
cli
mov
pop
cmpsb
mov
pushf
fs
jnp
adc
and
push
movsb
sub
sub
pop
mov
mov
negb
test
sti
subb
js
movsb
testb
jno
incl
into
ret
mov
imul
mov
pop
ljmp
loopne
inc
xor
xchg
ja
adc
pop
mov
mov
or
xor
repnz
scas
push
fcmovnbe
sub
mov
mov
repz
mov
jmp
jo
std
arpl
push
jmp
fsubp
or
pop
gs
sub
in
or
add
mov
sub
fcomip
sti
mov
add
inc
add
out
ficomps
movsb
jp
pop
mov
rcr
nop
push
xlat
and
xchg
sarl
sub
push
sahf
dec
mov
sarl
push
push
and
in
insb
sbb
xor
xor
cltd
mov
aas
scas
fmuls
adc
xchg
hlt
andl
sbb
div
mov
cmpsb
xchg
movsb
and
inc
xchg
scas
repnz
cld
mov
les
pop
inc
or
mov
add
xor
or
loop
push
js
jmp
jns
aas
stc
test
divb
fstl
push
test
loope
mov
add
mov
ret
gs
outsb
pushf
jns
add
stos
jbe
stos
pop
ds
pop
and
jb
stos
cwtl
aad
adc
xchg
out
call
and
out
or
sub
icebp
inc
rol
mov
repnz
into
loop
cmpsb
bound
in
in
shl
push
cwtl
lret
hlt
or
into
xchg
aaa
loop
pop
inc
mov
push
xchg
cmc
mov
pop
inc
lods
ffreep
xlat
shll
in
adc
jae
loopne
push
sbb
or
push
sub
mov
addr16
xor
scas
adc
hlt
test
scas
pop
roll
popf
dec
dec
nop
sbb
mov
jne
xchg
pop
and
jecxz
cld
xchg
xor
mov
insl
pop
int
mov
adc
inc
mov
fstpt
mov
aaa
mov
dec
data16
and
fildl
jle
jmp
test
and
xchg
mov
fnstcw
inc
jl
lret
pop
test
add
sub
sub
pop
push
mov
or
cmp
lahf
cmpsb
hlt
adc
pop
enter
dec
adc
ljmp
in
cmpsl
cmpsb
imul
hlt
insl
cmpsl
loopne
int3
mov
mov
xor
add
sbb
mov
jp
mov
ds
lock
xchg
stos
rorb
cltd
cs
nop
pusha
bound
stos
or
daa
es
xor
pop
call
jge
pop
mov
pop
add
scas
xor
adc
and
inc
sbb
je
aad
out
repz
jbe
loopne
fidivs
adc
jno
js
xor
sub
cmpsb
movsl
sbbl
ljmp
les
xchg
mov
mov
and
nop
mov
pop
shll
rolb
stc
pop
rcll
pop
mov
mov
stos
add
int
not
imul
inc
xchg
or
cli
jns
mov
xchg
xor
adc
faddl
mov
scas
fisttpll
push
sbb
dec
fdivrs
add
frstor
imul
inc
adc
cmp
fcmovnbe
inc
cmp
push
jnp
cmp
mov
imul
adc
repz
sub
mov
aam
xor
outsb
dec
mov
mov
mov
mov
xchg
andl
test
pop
pop
push
mov
int
cmc
in
cmpsb
les
repz
loopne
aam
das
inc
loop
inc
in
in
cmpsl
lahf
lods
mov
imul
pop
or
pop
push
mov
pop
loop
xor
xor
mov
stos
inc
adc
dec
adc
dec
scas
sub
inc
adc
dec
lret
outsl
mov
repnz
cmp
lea
mov
xchg
stos
js
lds
out
jle
inc
jo
adc
addr16
pop
or
test
nop
push
fcmovne
jmp
push
les
mov
sarb
add
pop
jmp
test
pop
movsl
push
imulb
dec
mov
in
outsl
and
sub
addr16
outsb
push
inc
sti
pop
jmp
imull
xlat
mov
push
jp
call
dec
stos
jne
add
dec
enter
xchg
jae
mov
or
adc
movsl
mov
dec
and
and
mov
in
cmp
imul
in
push
jns
shrb
mov
add
inc
sub
ljmp
cmp
dec
out
add
sti
adc
aaa
rcr
jl
jns
mov
aam
or
aas
xchg
std
mov
and
sub
inc
xchg
int3
je
fwait
pushf
pop
sub
cmp
sbb
or
jl
push
cmp
nop
mov
orl
add
xchg
add
idivl
mov
pop
xchg
mov
sub
jo
daa
mov
mov
movsl
cld
sub
inc
iret
or
push
scas
scas
ret
fcmovnb
int
lahf
das
aas
xchg
imul
mov
mov
jae
lock
mov
jno
call
xchg
inc
sub
out
cs
pop
jae
iret
imul
add
aam
mov
jns
rep
clc
fcmovb
or
shr
pop
and
push
mov
adcl
cs
jmp
movsl
ljmp
sbb
jge
movsb
mov
dec
and
adc
popf
mov
dec
pop
mov
ss
jo
pop
push
cwtl
test
mov
pop
jle
push
and
jne
rcr
inc
sub
aas
push
lahf
sbb
dec
pop
mov
fs
push
mov
jnp
xorl
out
push
push
dec
xor
fcmovu
movb
stc
jae
aad
sub
outsl
jp
jle
push
sub
sub
and
sub
mov
jo
pop
push
cmp
mov
shlb
xchg
xchg
cld
push
andb
xor
inc
popf
jecxz
daa
sbb
sbb
test
sub
nop
repnz
jp
cmp
lahf
cmp
xor
mov
mov
sbb
and
mov
and
sub
mov
push
data16
iret
setno
outsb
xchg
cmp
ja
popa
mov
and
mov
pop
sbb
leave
stos
ss
int3
sub
sub
scas
lcall
dec
aad
subb
aam
in
incb
cmp
mov
push
lret
xorl
aas
lock
fisttpl
or
fwait
sbb
inc
add
in
dec
pop
push
jae
dec
and
sub
shl
pusha
cmp
les
mov
stc
ljmp
es
stos
dec
jle
fldcw
adcb
adc
addr16
dec
adc
jl
cmpsb
ss
stos
dec
test
notb
mov
mov
mov
and
cmp
inc
sub
xchg
je
in
pop
xor
sbb
mov
xchg
loope
int3
xchg
mov
adc
and
dec
xor
adc
insl
into
stos
bnd
mov
cmp
mov
fildll
stc
sbb
push
and
xor
fistpl
jnp
std
mov
xchg
pop
mov
fs
push
sbb
push
fnstcw
xor
imull
loope
lea
pop
popa
int
imul
sti
add
loopne
push
je
mov
or
sbb
hlt
mov
dec
xchg
cld
loop
xchg
sbb
mov
insl
add
mov
dec
les
sub
jb
mov
xchg
push
jb
xchg
in
inc
push
pop
mov
cli
sti
push
dec
lcall
les
xor
mov
repz
test
sbbl
and
and
lods
sub
ror
aas
ljmp
jbe
jmp
mov
loop
fmuls
or
jmp
mov
outsb
mov
and
fidivrl
test
dec
int
adc
mov
inc
cltd
repnz
in
je
add
lods
xor
push
push
push
rcl
cld
xlat
push
jp
or
ret
jecxz
pop
leave
add
call
ret
mov
orl
lods
test
cmp
stos
cmp
mov
iret
repnz
mov
and
or
cmp
iret
mov
shlb
mov
and
pop
xchg
test
insb
push
inc
test
das
pop
xlat
rcll
popf
nop
xchg
cmp
xor
push
les
rcrb
pop
popa
clc
adc
push
ret
pop
mov
movsb
push
repz
stc
imul
mov
mov
mull
or
cmp
test
ss
clc
and
popf
lods
in
pop
adc
sub
jne
std
in
or
jns
aaa
mov
dec
test
in
fwait
pop
push
cmpsl
insl
or
jecxz
mov
mov
sahf
ficomps
cmp
jo
pop
enter
imul
inc
lea
mov
mov
pop
xchg
in
movsl
cmp
sbb
outsl
andb
adc
xchg
arpl
shrl
sbb
cmpsl
stos
jo
jae
mov
inc
dec
cmp
mov
push
test
bound
mov
mov
mov
scas
dec
ds
test
insl
pop
inc
xor
mov
jns
mov
int3
lods
pushf
or
rorb
aas
pop
push
cltd
lea
arpl
xlat
mov
iret
cmp
scas
into
jg
push
mov
jmp
xor
ret
jmp
add
sarl
jns
mov
call
sbb
les
data16
fbstp
and
rcll
rcr
xor
movsb
push
adc
aad
movsl
cmc
ret
ret
xchg
out
out
jo
add
loope
ret
pop
xchg
xor
push
imul
out
outsl
jae
in
cmpsl
adc
pop
mov
mov
pop
jmp
rolb
hlt
mov
mov
xchg
adc
pop
pop
ljmp
cli
mov
inc
add
lock
add
lahf
out
push
repz
in
fsubrl
test
ja,pt
sbb
sbb
outsl
imul
xor
pop
mov
les
sbb
sti
sub
sub
int3
cmpsl
xor
inc
pop
add
and
or
xlat
pop
sbb
lods
dec
pop
lock
stc
inc
rolb
cwtl
mov
mov
xor
mov
cld
out
mov
adc
js
add
in
and
and
outsl
xchg
and
outsl
sub
add
mov
sahf
out
jmp
addr16
int3
fstpt
pop
adc
mov
push
out
push
sub
or
arpl
xor
dec
negl
sub
pushf
mov
jns
push
xor
es
jno
push
jcxz
fwait
sete
and
mov
jae
sub
xchg
jl
test
and
lcall
mov
fbld
inc
roll
fcmovu
and
sahf
pop
call
scas
call
cmp
inc
mov
scas
cmp
mov
lret
cmp
inc
and
aad
mov
pop
scas
in
jne
imul
in
pop
in
mov
mov
xchg
or
adcl
ss
dec
andb
mov
xchg
lock
insl
nop
insb
jo
std
or
rorl
fsts
setp
xchg
lret
movsb
cmp
push
sahf
xor
push
jmp
xchg
inc
sbb
btr
jo
test
imul
int
sarl
xchg
sti
sti
mov
fstpl
ss
in
fwait
ret
std
push
mov
push
mov
rcl
flds
std
jle
fwait
pop
jae
ljmp
push
pop
jp
mov
mov
popa
jmp
je
push
pop
cmova
jae
movsl
pop
dec
insb
int3
mov
push
cmpsl
adc
out
insl
addb
ret
push
pushf
leave
or
mov
daa
out
push
ljmp
scas
or
call
test
je
shll
jmp
lods
xor
dec
gs
dec
sbb
test
sbb
lea
xor
jl
popa
mov
pop
je
out
lret
into
fadds
cmp
dec
jcxz
bound
lret
pop
dec
mov
pop
fcoms
cmp
fbld
or
in
push
lds
push
aam
lods
mov
adc
push
mov
pusha
cmc
jg
sbb
insb
and
sahf
xor
pop
inc
bound
ror
ds
movl
es
jno
std
mov
test
sbb
mov
sub
int3
sub
sti
addr16
xchg
add
ret
and
push
xor
pop
ljmp
in
repz
stos
push
mov
cwtl
jge
insl
int3
addr16
insb
orb
dec
and
ja
sar
cmp
mov
call
in
push
pop
jmp
pusha
add
mov
stos
idivb
sbb
sbb
repz
subb
pop
repz
xor
add
push
addb
jg
pop
aam
jle
inc
cmp
mov
mov
xor
inc
adc
out
orl
and
dec
jmp
dec
addr16
ss
movsl
lcall
sbb
cmp
cmp
cld
ljmp
and
sub
scas
jg
imul
inc
or
xchg
mov
out
inc
cmc
cmp
js
rcr
sbbl
call
in
mov
inc
arpl
xchg
imull
sbb
popf
push
jmp
inc
adc
xchg
mov
xchg
in
inc
or
out
fistl
mov
cmp
mov
into
gs
sbb
or
pop
pop
push
sub
outsb
jnp
enter
inc
ds
xchg
mov
lret
adc
sub
push
jns
cmpsl
xchg
and
and
mov
mov
push
loopne
cmp
lcall
loopne
mov
sub
push
mov
loopne
out
out
jns
pop
or
shll
lahf
inc
or
stc
dec
outsb
jns
or
xor
rorb
add
subb
and
pop
lds
dec
add
dec
in
xor
ja
push
jne
rcrl
imul
lock
xchg
push
lret
icebp
das
aam
and
push
mov
inc
pop
mov
mov
testl
xor
imul
lods
sub
bound
out
and
xchg
push
pop
hlt
cmp
decl
cmp
ret
or
mov
mov
push
sub
lret
loop
xchg
jl
cmpsl
cmp
mov
and
jae
int
mov
xor
fnstsw
sbb
xor
sbb
push
out
xchg
cmp
pop
adc
out
sub
test
push
dec
mov
out
jo
jecxz
packssdw
cli
inc
nop
into
rol
fcomps
sbb
xchg
in
js
push
sub
push
jnp
push
cs
jno
stos
lcall
inc
stos
lods
mov
pusha
insb
dec
dec
inc
xchg
popf
repz
sub
xor
sub
pop
sbb
mov
add
mov
bound
adc
imul
in
push
xlat
jno
jg
push
or
mov
lds
inc
and
mov
push
inc
inc
sub
adc
sbbl
pop
push
in
pop
pop
mov
xchg
in
jecxz
pop
pop
std
mov
jbe
and
or
xchg
or
adc
mov
outsl
cli
ret
cli
xchg
and
jbe
sub
or
sub
scas
add
pusha
inc
xor
ficompl
lods
aas
lcall
mov
xchg
int3
add
dec
sub
jmp
stos
push
scas
leave
xor
dec
cmp
les
ficoml
cmpsl
xor
mov
in
je
xor
into
mov
mov
or
test
push
and
popa
pop
mov
lcall
sbb
ret
push
lods
jns
fdivp
pop
push
daa
xor
inc
fidivrl
xor
and
or
xor
mov
rolb
pop
fprem1
xor
test
push
incl
add
rclb
fldt
movsb
mov
xchg
sbb
hlt
push
hlt
and
dec
lret
testl
add
and
bound
lods
xchg
aaa
adc
out
test
sbb
xor
mov
and
cmp
push
in
dec
jge
inc
sub
inc
sub
xchg
imul
jb
or
outsl
aad
fmulp
dec
push
or
add
inc
push
sub
scas
cmp
std
push
gs
ret
fnstcw
mov
dec
out
mov
sub
shll
mov
iret
sbb
pop
int3
sahf
lcall
test
pop
push
data16
dec
daa
cli
mov
push
outsl
fst
lods
sbb
leave
icebp
jp
ss
sbb
and
ss
pop
enter
hlt
xchg
cmp
sub
out
pop
cwtl
sahf
jo
inc
sbb
jno
mov
and
daa
sbbl
ds
inc
mov
jnp
mov
mov
add
insl
aam
dec
ss
jbe
enter
mov
jbe
xchg
push
jno
jb
sub
xchg
mov
dec
out
and
add
mov
xchg
dec
dec
mov
test
dec
sbb
stc
push
xor
push
cs
inc
cmc
lahf
xorl
scas
cmp
inc
lods
in
xchg
sub
xchg
test
jb
pop
jmp
iret
sub
xchg
xchg
mov
or
in
dec
add
cmp
xor
sahf
jg
fwait
xor
mov
int
push
loopne
hlt
icebp
outsl
das
dec
lret
xor
xadd
int
xchg
xchg
popf
cmp
mov
shrl
mov
adc
xchg
push
inc
jnp
lods
and
mov
add
out
and
jg
scas
das
das
mov
ss
mov
fisttpll
adc
or
and
ss
and
in
mov
xor
lret
pop
push
jp
test
mov
jbe
add
jl
icebp
shrb
shr
lods
jg
xor
cmpl
fcompl
add
ss
lea
push
lea
adc
sub
adc
insb
in
pop
dec
xor
push
mov
das
enter
push
add
lods
ja
xor
push
imul
push
in
push
cmp
push
adc
or
cmp
inc
scas
pop
leavew
lods
test
cltd
jl
add
and
inc
inc
cli
dec
cmc
adc
pop
out
sub
popf
ficoms
pushf
int3
pop
mov
scas
mov
pop
aaa
iret
roll
sbb
pop
repnz
sbb
xor
addl
leave
inc
js
scas
addr16
mov
mov
into
push
repnz
insb
xchg
push
ss
jle
imul
arpl
test
dec
push
jge
lcall
mov
hlt
test
cmpsl
imul
dec
pop
loope
push
push
jne
mov
sbb
or
aad
mov
xor
test
fdivl
je
add
and
dec
sub
pop
adc
pop
std
mov
push
sub
cmp
inc
xor
fisubrl
ror
mov
push
test
jl
inc
outsl
fs
push
xor
adc
popa
dec
xchg
fdivp
inc
mov
pusha
int3
xor
and
dec
push
mov
adc
xor
push
aad
lcall
mov
mov
push
aad
xchg
repz
xor
push
sub
arpl
xchg
stos
mov
lret
dec
mov
cmp
into
es
out
or
or
push
cmc
lret
and
rcll
xlat
xchg
pop
fwait
test
add
test
loopne
xlat
mov
lea
pusha
inc
mov
mov
cmc
push
pop
pop
std
inc
insb
push
dec
mov
and
insl
cmp
xor
loop
jae
pop
fs
stos
fisubrl
mov
mul
arpl
test
in
adc
movsl
cmp
or
cmp
xchg
mov
sub
lret
xchg
cmpsl
jle
or
inc
pop
leave
or
incl
dec
dec
pop
inc
dec
mov
stc
and
jge
fstps
or
jl
ret
dec
hlt
sub
inc
out
fwait
inc
mov
orb
movsb
outsb
dec
inc
ja
push
out
ror
mov
adc
ret
pop
push
dec
jae
adc
xchg
xor
push
adc
insb
dec
test
inc
sbb
inc
mov
inc
loope
out
imul
xchg
or
pushf
aas
and
jmp
js
loopew
sbb
mov
sbb
cld
stc
daa
sbb
or
lret
xchg
je
push
inc
enter
jle
sbb
fidivrs
cwtl
mov
in
xchg
clc
push
aam
xchg
fistpll
cmp
cli
lcall
adc
cmc
cmp
pop
or
push
push
aas
jmp
jg
inc
insl
xor
mov
in
push
cmpsl
ret
and
stos
lods
inc
ret
sub
xchg
sub
mov
cmp
loopne
add
xor
insb
mov
push
adc
dec
sti
jno
ror
xchg
cmpsb
pop
subl
sbb
and
mov
mov
or
and
mov
mov
cmpsl
and
lret
mov
push
outsb
std
sahf
in
push
lcall
jb
xor
cmp
xchg
cmpsb
imull
je
sub
dec
xchg
mov
das
aas
sbb
sub
mov
arpl
pop
inc
mov
nop
mov
cwtl
jo
adc
shll
leave
jb
insb
js
sar
movsb
out
jg
mov
pop
outsl
jge
aaa
clc
sbb
sbb
int
adcb
cmp
mov
cmc
push
sbb
inc
movsl
inc
xchg
cwtl
aam
sti
pop
das
or
push
sub
dec
add
bound
xchg
or
fs
dec
cmp
call
inc
out
push
pushl
sub
sub
inc
aam
es
fadds
mov
mov
iret
inc
lods
jns
call
mov
add
sti
es
mov
add
repz
and
mov
lret
je
add
xlat
and
addr16
sub
adc
and
test
out
push
dec
cmc
push
bound
stos
dec
das
int3
mov
or
inc
insb
lret
bound
jl
inc
inc
cmp
mov
cwtl
push
les
fsubs
int3
aas
mov
rcr
je
pop
mov
cmpsb
jo
sub
shlb
push
aam
call
daa
test
and
dec
insl
inc
sub
nop
inc
ret
add
sub
mov
mov
inc
ror
mov
js
aam
pop
dec
ja
into
jne
xchg
or
push
imul
stos
xlat
fdivrp
lds
scas
inc
lods
jle
and
pop
out
outsb
nop
sahf
jmp
xchg
xor
dec
in
int3
cmp
adc
loop
call
pop
pop
inc
imul
lcall
lcall
jl
inc
push
inc
rorl
jnp
pop
or
adc
sbb
mov
aaa
or
jl
sub
stc
lea
inc
push
cmp
orl
xchg
fmuls
xor
sbb
mov
sahf
call
loopne
icebp
dec
jns
jg
push
movsl
dec
sub
int3
xchg
jne
cmpl
ds
or
cmp
pop
das
mov
or
mov
jns
ja
lea
bnd
or
pop
aaa
push
call
iret
rol
cmc
mov
sbb
cli
gs
cli
push
roll
cmp
lret
or
dec
inc
mov
add
dec
rcll
fsub
sub
mov
test
movsb
xor
out
jnp
in
sbb
sbb
das
imull
pusha
sub
movsb
mov
push
sbb
cmp
push
fsub
sub
jno
xchg
std
call
cs
daa
mov
pop
xchg
pop
out
or
pop
push
int
xlat
imul
xchg
das
das
repnz
sub
mov
icebp
dec
xor
add
ret
cltd
adc
jne
imul
rcrb
jmp
stc
xor
addl
sbb
or
cld
adc
xor
add
insb
lods
push
dec
push
pop
dec
jbe
sahf
leave
jbe
int
dec
mov
stos
inc
add
into
dec
dec
jl
jno
ret
dec
push
pop
std
push
or
or
data16
ja
in
mov
xchg
scas
sbb
repz
push
mov
int
add
lea
aad
fidivrs
je
fildll
popf
scas
fucompp
arpl
mov
shrb
mov
pop
dec
jge
aad
std
fisubrl
pop
inc
jae
stc
and
es
in
int3
fistpl
fstps
and
jge
mov
push
testb
out
jmp
cmp
loope
sub
push
xor
in
lcall
lods
pop
xlat
push
hlt
stos
ljmp
ljmp
adc
xchg
movsl
test
iret
dec
mov
test
outsb
nop
test
xorb
sti
dec
mov
insl
adc
leave
mov
push
mov
out
mul
outsb
stos
ret
xor
push
lea
mov
pushf
cmove
cmp
loopne
or
int3
pop
stc
or
mov
push
pavgw
cwtl
sub
in
movsl
jae
gs
ficompl
sbb
ja
sbb
push
xchg
int3
rcll
add
adc
add
pop
js
imul
jp
pop
and
xchg
push
fsubrl
mov
push
xchg
xchg
or
notb
sahf
sarb
xor
rcl
mov
insl
mov
sti
aas
jns
pushf
cmp
mov
mov
rcl
push
aaa
pop
cmp
dec
popf
xor
call
mov
pop
lcall
mov
adc
lea
xchg
pop
out
mov
push
inc
adc
out
icebp
adc
jbe
shll
in
ja
addr16
loopne
aad
inc
mov
or
cld
inc
sarb
mov
pushf
mov
dec
dec
fwait
push
hlt
imul
cwtl
jo
daa
mov
xor
push
xor
fildll
movsl
shl
add
pop
mov
cmp
add
sub
subl
or
fsubs
jl
bound
nop
cmp
nopl
xor
jo
jnp
xchg
aam
outsb
inc
insb
jge
add
stos
ja
cwtl
les
faddl
dec
pop
into
push
lahf
and
push
xchg
pusha
dec
hlt
fs
jg
inc
xorb
mov
jp
je
cmp
mov
mov
xchg
movsb
fldt
in
loop
sub
mov
mov
pop
cmp
addl
add
sahf
cmp
and
out
dec
pop
or
mov
dec
leave
sti
jmp
icebp
xchg
shl
in
push
je
pushf
push
push
movsb
mov
repz
aaa
and
or
xrelease
sbb
je
adc
cmp
cld
ja
pop
push
testl
jecxz
repz
xchg
adc
out
repz
ret
cmpsl
pushf
pushf
imul
lds
dec
repnz
or
es
pop
adc
xor
sahf
addb
jno
out
jle
pop
mov
in
push
xchg
bound
in
sub
xchg
mov
xchg
jo
or
sub
mov
dec
fcoms
fmull
mov
sbb
adc
stc
pop
cmp
jecxz
fisubrl
push
gs
push
sarl
test
mov
fists
xlat
in
jns
mov
xchg
and
ja
dec
shlb
inc
lods
push
sahf
movl
and
xchg
gs
fstl
sahf
ret
adc
or
daa
data16
movsb
cltd
jb
xchg
cmpsl
sahf
das
out
sbb
or
mov
imul
mov
add
rorl
dec
push
adc
jno
nop
daa
sbb
xchg
stos
int
and
pusha
adcl
add
push
insb
sub
add
push
and
and
xchg
push
jb
mov
mov
xchg
in
xor
push
adc
cli
dec
adc
sub
cmp
test
inc
pop
inc
sbb
aaa
pusha
cld
lret
mov
xchg
cli
sub
mov
in
push
xor
xor
adc
addl
push
push
aam
xchg
inc
shrb
out
xchg
cmp
test
sub
pop
je
ds
mov
nop
std
add
in
xchg
pop
mov
mov
test
frstor
cwtl
mov
jecxz
mov
addr16
mov
je
lret
sub
mov
iret
sti
test
jecxz
mov
jb
cmpsl
fbld
xlat
rorb
sub
pop
fstps
add
pusha
es
mov
or
sbb
or
stos
xor
popf
int3
aaa
jnp
popf
xlat
jns
or
or
bound
cltd
and
cmp
adc
in
rorb
and
lcall
mov
andb
ja
fisttps
mov
jbe
xor
test
push
popa
in
cmpsb
pop
iret
sbb
pop
lret
pop
stos
in
pop
sti
xor
ret
push
dec
ds
je
int
xchg
sbb
repz
dec
aas
imul
sbb
mov
xor
jae
pop
or
jnp
insl
xor
cmp
mov
xor
gs
movsl
jns
lock
adc
cmc
int
je
daa
mov
imul
rcll
pop
into
xchg
add
mov
xchg
or
pop
lods
jb
mov
dec
sarb
sbb
pop
inc
and
or
into
or
sub
push
mov
xor
stc
leave
push
int
invlpg
insl
enter
call
xor
inc
popf
jecxz
call
jl
pusha
push
stos
dec
sbb
push
push
sub
and
fcomi
and
push
lods
push
fsubrl
fwait
fnstcw
rcr
test
out
xchg
cmp
mov
lea
push
enter
cmpsl
stos
xchg
mov
pop
fsubr
icebp
icebp
out
addr16
lds
pop
clc
xor
addr16
lahf
xchg
xor
mov
imul
fldt
mov
stos
mov
jo
sub
fcoml
mov
add
int3
adcb
adc
sbbl
mov
ret
jge
jmp
out
xor
hlt
fcomp
dec
fadds
adc
ret
and
popa
out
sahf
pop
mov
iret
sti
pop
pop
add
xchg
repz
data16
hlt
add
push
stc
mov
dec
movsb
rol
negl
jmp
xchg
out
adc
sub
xor
adc
cmpsb
sbb
pop
cmp
mov
dec
jl
dec
jg
push
fsts
push
dec
aaa
aam
xor
pop
pop
or
pop
mov
sub
and
adcb
sub
lods
mov
insb
push
shlb
loopne
imul
sub
jle
inc
or
mov
nop
sbb
scas
clc
xchg
rorl
aad
and
xor
sbb
test
xor
mov
cltd
fdivs
aaa
in
mov
daa
cli
dec
in
nop
cmp
add
sahf
cltd
push
sbb
and
push
xor
cmpsb
mov
dec
iret
jl
scas
leave
mov
test
jge
sub
iret
in
enter
adc
pushl
fldenv
sub
mov
in
xchg
mov
jg
test
inc
push
dec
hlt
sub
and
inc
xchg
pop
sbb
mov
pop
dec
cmp
sub
in
and
mov
adc
push
leave
jb
movsb
add
sti
cmp
xchg
cmpl
sbb
push
imul
sub
inc
inc
clc
imulb
adc
sti
mov
std
push
fistl
cmp
fidivrl
push
pop
js
sbb
jge
ret
gs
rolb
lret
xchg
jnp
fistpl
push
mov
or
pop
scas
out
xor
scas
ret
ret
cmc
or
xor
cmp
ret
inc
ss
xchg
outsl
and
loope
mov
xor
das
out
data16
lret
sub
lcall
enter
dec
imul
push
pop
out
fiadds
nop
add
push
mov
push
jmp
push
lret
arpl
mov
jecxz
scas
nop
sbb
push
fmulp
aas
hlt
mov
mov
inc
lret
xchg
add
icebp
cltd
mov
push
mov
and
scas
or
mov
xchg
nop
and
push
aaa
mov
push
xor
jecxz
or
rorb
inc
rcrl
mov
and
lds
mov
dec
jge
lcall
lcall
test
dec
or
les
insb
loopne
iret
stos
ljmp
pop
or
fsubl
xor
jb
mov
jecxz
enter
dec
push
cmp
cmpb
sub
sbb
enter
lcall
pop
stos
jecxz
and
jge
lods
std
popf
aam
pushf
push
pop
sbb
movsb
xchg
aad
cwtl
pop
in
popf
minps
loope
pop
scas
ficompl
fsubs
aam
adc
in
sbb
pop
shlb
hlt
jg
loopne
and
movsl
stc
mov
mov
and
sub
pop
into
jge
icebp
xor
mov
loop
loopne
cmpsb
push
es
pop
fnsave
rolb
idivb
jno
loopne
ss
sarb
mov
inc
and
or
outsl
jl
cmp
xlat
sbb
nop
mov
mov
mov
add
mov
lods
jo
mov
and
out
testl
inc
movsw
inc
das
xchg
xor
jge
mov
les
push
jp
mov
stos
push
sub
pop
and
loop
xor
pop
adc
push
sbb
mov
mov
in
add
xchg
adc
pop
cli
les
cmp
pusha
popa
clc
js
or
mov
mov
pop
fs
cmp
dec
or
xchg
sbb
push
movsl
data16
int3
lock
insb
sub
push
xor
fcomps
fadds
hlt
sbb
pop
xlat
sbb
pop
push
mov
inc
mov
pop
xchg
push
out
mov
sbb
dec
in
aam
gs
and
repnz
push
icebp
iret
repnz
sbb
mov
xor
daa
add
out
pop
cmp
rorl
std
fs
imul
out
fsubr
arpl
xchg
xlat
or
cmp
mov
add
jns
shrl
data16
push
lds
push
stos
inc
iret
cmpsb
rcrb
aad
dec
data16
or
enter
rolb
dec
lods
pusha
xchg
shll
pop
mov
mov
cmpsl
int
scas
in
mov
ret
sbb
pop
jmp
jnp
and
jl
in
lret
sbb
mov
mov
aaa
fs
push
mov
xor
jecxz
dec
jo
and
movsl
fildll
add
sub
add
mov
sbb
daa
dec
xchg
nop
jbe
stos
dec
insb
jge
cli
cmpsb
dec
aam
jle
ret
jle
xchg
shlb
push
mov
sub
pop
stos
push
enter
jg
popa
jle
sub
faddl
xor
xchg
test
and
mov
push
add
cmpsl
mov
push
push
adc
fs
shlb
repnz
xchg
xchg
and
lret
adc
mov
push
lds
push
into
fcmovne
add
in
pop
test
push
ret
push
pushf
fs
push
mov
xchg
pop
cltd
in
pop
mov
cld
subl
or
fmull
push
xchg
jae
or
push
mov
or
das
test
sub
mov
cmc
mov
sub
inc
leave
imul
inc
pop
cmp
sub
adc
cmp
mov
lret
stos
cli
loop
loopne
fcoms
pop
mov
and
sub
fiaddl
push
jb
inc
add
arpl
out
mull
ja
fldl
push
pop
inc
jb
shlb
and
lods
cmpsb
adc
outsb
sub
cmp
fildl
cmp
loope
pop
cmp
add
jmp
add
cmp
adc
sbb
inc
push
dec
setp
das
test
mov
cld
ret
pop
lock
enter
ds
mov
pop
orl
mov
ljmp
push
mov
or
push
or
jno
iret
add
insb
call
ja
inc
xchg
cwtl
add
push
scas
sub
lret
lea
orps
fdiv
cmpsb
adc
pop
jae
adc
out
or
push
das
ja
movsb
adc
push
and
out
and
sbb
loopne
iret
subb
ret
roll
fcoms
enter
into
pop
jae
add
in
mov
and
shl
dec
xor
add
aam
stc
sub
or
push
leave
push
xor
jecxz
call
loopne
imul
cmp
xorl
fnstsw
movsb
popa
pop
and
mov
je
fsubrl
mov
in
adc
cmpsb
pop
out
mov
cwtl
cmc
mov
cli
shr
mov
mov
cmp
xchg
xchg
sbb
jmp
xchg
adc
push
fwait
or
and
xlat
xor
mov
add
ljmp
sbb
bound
movsl
fildll
cmp
inc
jge
inc
and
cmp
gs
push
jmp
pop
in
mov
imul
dec
push
cmp
out
pop
iret
stc
xor
ficompl
mov
ret
mov
mov
push
sbbb
fnsave
sahf
cs
jo
cmp
aam
insb
pop
mov
fldcw
fs
inc
dec
mov
mov
push
shrb
mov
add
pop
jnp
and
push
rcll
stos
push
jo
dec
cmpl
or
adc
clc
cltd
push
imul
xchg
pusha
mov
jg
mov
push
jnp
je
jae
dec
lret
jno
mov
push
test
or
mov
mov
inc
jns
cmp
cld
push
adc
and
ss
cmp
xchg
pop
pop
scas
arpl
in
push
dec
rcl
ret
cmp
push
adcl
xor
mov
push
call
and
test
inc
mov
stos
mov
pop
pop
idivb
mov
sbb
push
in
or
pop
movsb
xor
dec
or
pop
jnp
dec
xchg
imul
or
jae
mov
mov
imul
cmpsb
fcmovne
fisttpll
ja
or
fildll
sbb
xchg
or
leave
dec
iret
adcb
gs
dec
mov
fsubs
fiadds
mov
xor
sub
les
fwait
xchg
jns
pop
movsb
push
sbb
gs
dec
add
test
jne
jl
add
aas
cmp
add
shlb
and
std
lods
dec
pop
lods
xor
mov
xcrypt-cbc
cmpsl
aad
add
int
dec
jecxz
int3
jmp
dec
inc
jmp
inc
fcomps
lods
xor
push
dec
dec
fistpl
aad
jae
fwait
into
not
jo
leave
fwait
int3
mov
sub
es
xor
mov
dec
fsubl
mov
mov
aad
mov
jge
adc
scas
inc
aad
xor
scas
mov
js
int
mov
rcll
out
xchg
push
in
stos
iret
mov
inc
int3
jo
add
fstl
and
enter
jne
std
andl
std
mov
xchg
cltd
outsb
pop
push
int3
gs
dec
hlt
sbb
andb
stos
push
add
adc
xor
mov
adc
adc
testb
push
xor
shrl
push
int3
pop
pusha
cld
in
daa
and
in
cmp
inc
clc
add
pop
loop
shrb
nop
jge
hlt
stc
xchg
push
das
dec
jne
popl
lods
fnsave
lcall
mov
rcrl
mov
jns
sbb
mov
xchg
inc
xchg
sub
pusha
push
jl
lods
pop
xor
add
mov
pop
iret
mov
jecxz
cmpb
dec
xor
cld
add
xchg
in
lahf
je
xchg
outsl
scas
test
mov
daa
mov
hlt
je
sub
sub
sub
mov
xor
fildl
fsubrl
pop
es
nop
repz
ret
fistpll
adc
repz
movsb
xchg
push
dec
sub
out
jae
pop
jle
ret
mov
sbb
fmuls
jp
xchg
movsl
repz
sub
jno
xor
cmc
xor
xor
push
push
bound
jmp
rolb
shl
jns
stc
pop
into
xchg
mov
clc
pop
push
ljmp
pop
out
jecxz
jns
nop
jge
out
pop
mov
gs
bound
jg
push
int
mov
imull
pop
cs
shl
cltd
push
pop
sbb
nop
pusha
lds
shrb
mov
negb
js
jge
pop
pop
cld
jb
roll
xor
xchg
les
orl
fwait
lods
je
jecxz
sub
loope
add
pop
mov
hlt
je
test
xchg
xor
test
lret
sbb
pop
out
cli
xchg
pop
data16
je
xor
enter
or
mov
mov
sbb
popf
and
popl
fucomip
ror
adc
xchg
sbb
push
shlb
icebp
cli
and
mov
and
testb
add
pinsrw
jae
adc
mov
mov
and
jbe
pusha
mov
adc
xchg
test
cmpsb
xchg
mov
cmp
add
xchg
rcll
stc
push
jge
outsb
ljmp
sub
pop
hlt
xor
orb
xor
fbld
jmp
pop
movzbl
outsl
adc
cmpsl
iret
push
sahf
iret
sub
push
mov
test
mov
mov
lahf
imul
jnp
cmp
sbb
and
or
push
sub
mov
xor
cmp
mov
lods
lock
dec
jl
or
xchg
pop
movsl
ss
cmp
sti
pop
xlat
sbb
je
div
std
movsl
jne
loop
lds
pop
es
in
add
cltd
sbb
jbe
jno
inc
xchg
adc
test
cmpsl
outsb
aam
cmp
xchg
adc
loope
lea
aad
push
test
pop
aas
push
sub
stos
dec
mov
fs
mov
xor
adc
cmpl
and
shrb
ret
mov
adc
mov
pushf
mov
cmp
sub
cwtl
cmp
push
lcall
push
int3
leave
xchg
popa
dec
push
adc
xor
pushf
mov
xor
stos
imull
jne
xchg
mov
mov
xor
aad
lret
push
outsb
lcall
cs
scas
idivb
xchg
mov
pop
xor
xor
les
or
aam
setp
xchg
aad
aas
les
xor
movnti
fs
mov
addr16
pop
push
test
dec
shlb
sbb
pop
sbb
xchg
popf
cmp
sbb
mov
xor
add
loope
stos
push
or
lods
imul
sub
test
imul
sub
dec
sbb
or
push
stos
mov
or
unpckhps
scas
cli
mov
mov
jne
rcll
fdivrs
mov
push
push
mov
mov
dec
imul
or
jmp
xor
test
notb
push
and
mov
ss
pushl
jne
sbb
jl
sbb
sub
dec
xchg
cmpsb
je
add
enter
test
daa
xor
fidivl
mov
das
sbb
jmp
dec
rorb
and
xor
sahf
and
call
fdivrp
dec
stc
sbb
adc
adc
mov
pop
push
and
aaa
addr16
mov
repz
adcb
dec
adc
xchg
pop
inc
pop
sub
and
cltd
mov
push
mov
and
cmp
mov
mov
jge
test
dec
sbb
into
push
jp
movsl
bound
lds
in
cmp
stos
adcb
inc
push
pusha
pop
popa
fsts
adc
adc
outsb
in
aaa
sub
sub
cmp
scas
out
xlat
mov
sbb
cld
mov
mov
das
loope
sbb
loopne
in
inc
out
in
ss
fnsave
loope
aad
rorl
dec
jns
es
insl
std
insb
jne
sahf
mov
adc
in
movsb
xor
cltd
vmulsd
int3
xor
movsl
add
sbb
jl
sarb
stos
xchg
jns
inc
insb
stos
xchg
xchg
lock
aaa
gs
sarl
dec
lea
aas
popa
jbe
out
mov
movsl
jnp
scas
cwtl
cwtl
imul
mov
adc
mov
pop
cmp
xor
lret
repz
cli
jl
jne
aad
push
inc
lret
ja
test
sbb
rcrb
xlat
cs
ds
jbe
mov
push
fidivs
imul
pop
daa
int
mov
bound
scas
add
fisubrl
cmpsl
rdtsc
mov
push
jmp
pop
xor
mov
push
imul
cld
lcall
cmpsb
stc
loope
leave
xchg
movsb
sbb
popf
cmp
or
nop
mov
cwtl
xor
iret
mov
and
sub
lods
ds
xorb
adc
xor
mov
adc
stos
lods
adc
outsl
inc
xchg
mov
test
ret
aam
xor
sub
mov
ss
cmp
cmp
sub
and
stos
lods
mov
cld
mov
fistpl
hlt
shr
push
adc
fdivrl
cmp
leave
fistpl
subb
sub
inc
ds
dec
or
sub
pop
dec
pop
jg
pop
push
adcb
or
mov
aam
aas
out
or
sub
addr16
jge
sbb
or
imul
icebp
mov
push
push
mov
cmp
scas
xor
int3
mov
inc
arpl
push
sti
out
mov
ud1
mov
addl
js
pop
cmp
xchg
adc
xor
mov
cs
cld
xchg
and
adc
jne
push
push
fwait
push
ja
and
push
popa
fisubs
popa
js
fnsave
cs
mov
test
adc
add
xchg
in
das
pushf
sub
loopne
fidivrl
xchg
cltd
cld
pusha
lds
jmp
sbb
lret
pusha
dec
sbb
sbb
notl
loop
sub
xor
dec
mov
jns
pusha
push
jg
jg
and
lret
pop
pop
add
js
and
or
push
jns
das
push
inc
xchg
in
enter
xchg
or
dec
pop
leave
push
jle
add
lret
sub
or
xor
daa
ds
inc
rcl
add
lret
push
jmp
and
fidivrs
pop
les
aam
imul
cvttps2pi
in
in
scas
pop
lahf
std
pop
dec
jnp
jne
ret
mov
adc
repnz
call
aam
jecxz
or
mov
iret
fsubrs
mov
mov
cli
fsubl
daa
repnz
call
cs
insb
mov
push
aaa
lock
jb
fwait
hlt
jns
xor
test
jae
inc
push
push
cwtl
lret
jb
and
mov
lods
mov
int3
enter
inc
cmc
add
imul
xor
loopne
call
bound
add
sub
inc
inc
insb
push
inc
repz
mov
mov
push
or
ret
push
pushf
pop
rcll
pusha
pop
rcr
pop
pop
xchg
and
lea
jo
adc
aad
lods
in
movsb
call
jl
fisttpl
xchg
push
add
mov
inc
inc
scas
lods
mov
out
sub
popa
pop
pop
fldenv
ljmp
push
xlat
pop
scas
mov
dec
cmp
cmp
data16
and
cmc
jmp
add
ret
xor
mov
loop
lods
fwait
ss
cs
test
call
xchg
scas
lret
hlt
push
aaa
jle
cmp
jne
subb
lret
pop
mov
xchg
mov
sbb
push
inc
cmc
mov
in
in
inc
enter
adc
mov
call
inc
js
sub
negl
cmp
rcrl
aaa
in
sub
lock
ljmp
push
xchg
add
sbb
sbb
jbe
mov
or
lcall
inc
ret
ja
cmp
mov
adc
in
or
sbb
push
out
lea
mov
pop
pop
mov
add
lds
out
pop
lock
shrl
shr
cltd
adc
push
mov
fcmovnu
or
mov
pop
push
das
cmp
mov
out
repnz
outsb
pop
inc
int3
pop
les
push
rol
xlat
mov
adc
mov
inc
gs
cmp
mov
push
ds
aas
dec
cmpsl
add
adc
mov
hlt
lods
sub
xorl
outsl
push
pop
xchg
insb
adc
jle
dec
cmp
daa
icebp
loop
cmp
adc
test
push
pop
xorl
stos
fcoms
lock
movsl
mov
mov
aam
push
push
jmp
mov
adc
pop
add
clc
leave
gs
and
out
dec
pop
cmp
imul
lahf
sbb
cmp
pop
clc
gs
dec
jno
adc
xchg
lods
out
mov
jb
data16
mov
xor
inc
xor
mov
jmp
clc
arpl
lds
inc
dec
jmp
fidivrl
add
and
cld
mov
ret
dec
jle
and
sbb
sti
hlt
out
push
cmp
or
ds
addr16
pushf
pop
aad
nop
xchg
aas
cmp
out
pop
and
pop
pop
pop
xor
call
inc
popa
lods
mov
cli
fwait
test
js
xchg
pop
jmp
je
inc
cmp
push
ss
mov
cmp
mov
pop
sti
mov
lcall
pop
mov
push
lcall
sbb
xor
inc
int
clc
in
inc
cwtl
and
in
add
lds
push
int3
cmc
dec
imul
test
push
pop
fstl
bound
shll
add
xor
inc
and
pop
or
int
pop
jmp
mov
bound
jge
sub
pop
scas
push
test
ret
dec
loop
xor
dec
cmpsb
scas
mov
ficoml
js
and
cltd
test
and
fildl
cltd
xor
std
xor
cmp
andl
push
ss
outsb
cmp
movsb
sahf
jae
bound
incl
dec
stos
in
mov
add
mov
push
dec
loop
push
nop
add
cmpsb
icebp
outsb
mov
mov
fistps
data16
mov
xor
out
dec
xchg
cs
push
rclb
mov
pushf
jb
mov
int3
sub
sbb
iret
idivb
pop
jg
out
fwait
push
adc
gs
je
cltd
sub
rcrl
mov
cltd
mov
mov
inc
lods
movsl
in
ret
inc
insb
adc
cmc
add
pop
and
flds
xlat
dec
pop
pop
dec
xor
sbb
lret
mov
test
inc
pushf
and
aas
jb
or
sbb
jno
in
rcl
and
mov
cmp
std
mov
push
into
shrl
push
out
faddl
jmp
ret
sti
sbb
ja
inc
mov
hlt
rcrl
cli
hlt
or
pop
std
jecxz
add
xchg
dec
push
js
mov
cmc
add
int3
sub
dec
sub
jp
cmp
cmp
fldcw
jb
or
xor
and
cmc
test
pop
mov
sub
cmp
cs
cmp
imul
ret
testb
fsubp
xchg
cmpsl
lcall
mov
cwtl
jae
fwait
mov
jl
xchg
push
popf
jns
stc
mov
jae
mov
movsb
je
test
fwait
push
adc
aad
aam
push
outsb
cltd
xor
lds
cli
popa
imul
mov
jb
jno
scas
int
cmc
add
adc
pop
inc
inc
insl
or
and
pop
sbb
repz
cli
xchg
mov
pop
and
inc
les
js
imul
sbb
cs
cmp
inc
push
mov
mov
and
pop
in
je
test
lcall
pop
jb
xchg
bound
pop
add
cmc
cmp
push
adc
stc
jns
sbb
xchg
jnp
lcall
inc
adc
xor
push
sahf
rorl
sbb
loopne
mov
popf
ds
sbb
mov
int3
mov
imul
xchg
pop
or
mov
js
dec
rorb
stos
inc
into
add
adc
mov
gs
push
repnz
std
or
pop
mov
dec
loope
ss
adc
push
mov
js
adc
sbb
out
enter
pop
add
inc
jge
movsl
inc
insl
ret
sbb
divb
leave
orb
adc
scas
jmp
or
push
mov
hlt
sbb
lods
gs
mov
aam
lcall
jg
pusha
inc
xor
mov
sub
sbb
ds
movhps
dec
jmp
insl
dec
cwtl
inc
sahf
test
int
xchg
andb
divb
cltd
in
dec
clc
ds
push
out
jle
jno
mov
arpl
test
add
icebp
jp
lret
cmp
in
mov
push
sub
pop
xchg
mov
lcall
sbb
or
cld
pop
js
rcrb
sbb
bound
add
sbb
mov
inc
inc
aas
hlt
stos
pop
fiadds
mov
lock
mov
ret
stc
mov
mov
loop
loope
mov
je
mov
mov
pop
jno
pxor
arpl
fmul
lock
xor
pop
jg
xlat
push
mov
add
mov
in
scas
push
movsl
mov
les
in
mov
inc
hlt
push
repnz
push
adc
cmp
mov
scas
mov
xor
dec
mov
sti
test
pop
push
adc
lahf
xlat
pop
call
jl
mov
aas
fdivrp
daa
aad
dec
fimuls
ja
int
jge
int
test
dec
out
and
enter
dec
addr16
nop
repnz
cmp
enter
xor
movsl
xor
mov
shlb
insb
ficomps
mov
fsubrl
dec
inc
fucom
inc
or
popa
push
stos
in
aaa
in
jecxz
pushf
cmp
in
out
leave
jno
push
mov
fimull
jp
out
jl
pop
adc
frstor
movsl
loopne
lods
jp
mov
insb
jecxz
add
add
je
jl
or
sub
mov
sbb
ret
xchg
in
pop
jne
mov
ja
hlt
push
repnz
cwtl
jp
mov
enter
lret
lret
dec
jge
xchg
rorb
xor
push
or
fdivr
out
sub
mov
cmp
jae
enter
jecxz
and
jge
addr16
pop
insl
lods
int
or
repz
xor
in
mov
adc
mov
cmp
sbb
sub
mov
mov
in
in
divl
decb
test
adc
lds
mov
stc
sbb
push
vmread
and
in
lock
add
add
rorl
push
push
adc
push
shlb
fildll
cmp
shll
pop
ja
inc
aad
out
in
aas
sti
or
jae,pn
mov
sub
dec
or
fsubrl
and
mov
clc
mov
push
gs
in
pop
cli
push
in
push
popa
add
cmp
pop
xchg
sti
in
add
movsb
push
or
daa
xchg
pushf
js
adc
adc
mov
xchg
sbb
add
mov
or
aad
fisubrl
jecxz
cmpsb
icebp
ficompl
jmp
into
push
gs
pop
and
push
mov
mov
mov
sub
fiaddl
mov
jle
and
mov
jno
jo
lret
clc
pop
pop
imul
xchg
repnz
testl
xlat
sub
loope
sbb
out
stc
mov
shrb
push
xchg
jge
mov
insl
nop
enter
callw
jae
loope
je
xchg
sub
mov
adc
dec
sbb
jno
out
sti
mov
stos
addr16
mov
and
pop
xchg
inc
testb
mov
mov
jl
and
xor
aaa
test
and
out
jmp
xor
aam
jae
loopne
mov
cmp
pusha
adc
leave
addr16
pop
stos
es
jbe
and
cmp
adc
inc
xor
dec
cld
jb
mov
out
sub
sbb
mov
xor
lods
inc
jl
cmpb
test
popf
fidivl
jbe
cmovne
xchg
sub
mov
pop
push
fcompl
lea
repz
xchg
dec
lea
fsubp
out
push
mov
movsb
fwait
sbb
xchg
xor
or
xor
fst
out
mov
cmp
cmp
int3
pop
mov
pop
jmp
lahf
mov
add
mov
fsts
xor
stc
jle
cltd
fs
xor
enter
sti
imul
jnp
or
and
scas
test
sub
sahf
data16
xchg
add
pop
lods
and
gs
mov
clc
in
adc
insl
add
push
adc
sub
or
rcll
insl
sbb
movsb
push
out
push
push
cmc
ret
mov
xor
std
xchg
enter
inc
aam
dec
push
jae
mov
popf
loope
outsl
mov
mov
and
pop
scas
xlat
in
test
rclb
sbb
hlt
inc
outsb
sbb
inc
lcall
aaa
fistps
iret
adc
fwait
lahf
aad
pop
stos
pushf
cmp
dec
loope
aaa
inc
adc
jmp
ljmp
pop
lcall
mov
or
icebp
jmp
jae
mov
adc
mov
fwait
gs
jg
dec
insb
mov
push
jle
mov
mov
pop
jmp
gs
inc
adc
out
outsb
jb
cmpsl
pop
call
xchg
mov
mov
popa
mov
push
sub
xor
xchg
xchg
clc
lods
rcll
pop
and
shufps
lods
pusha
iret
add
andb
movsl
sub
xchg
movsb
lds
subl
inc
stos
jge
testb
pushf
cmpsl
mov
sbb
xor
shlb
sahf
cltd
ss
imul
cmpsb
ds
pop
push
cmc
mov
aaa
sahf
frstpm(287
pop
push
testb
jo
mov
add
jne
pop
lret
and
xor
xchg
jl
ret
inc
cmp
inc
or
dec
inc
loope
adc
jle
mov
add
dec
movsl
sub
dec
xchg
inc
xor
push
enter
pop
sti
jb
mov
jl
sub
inc
sbb
mov
in
movsl
lcall
movsl
xor
repnz
je
fwait
ljmp
lret
negl
into
movsb
test
dec
xor
push
pop
pop
clc
test
ret
insb
and
sbb
lds
rcrl
scas
gs
sub
push
cmp
aam
std
push
xchg
call
lods
xchg
sbb
sub
and
cmp
lods
or
push
mov
imul
xchg
jns
ss
mov
ret
hlt
sbb
or
mov
clc
xchg
rep
ja
es
cmc
pop
orb
jecxz
call
std
fs
pusha
cmp
or
or
movsb
mov
stos
xor
mov
mov
push
fwait
dec
shrl
clc
fdiv
xor
fmul
push
mov
cwtl
add
xor
imul
pop
mov
lahf
stos
enter
arpl
aam
cltd
orl
sbb
lds
out
outsb
jg
test
dec
das
movb
and
enter
xor
sbb
in
out
clc
xchg
ret
sub
sbb
jmp
add
xchg
push
or
pop
int
pop
mov
shll
enter
add
mov
xorb
scas
lock
jnp
loope
mov
inc
fmuls
fists
icebp
and
mov
mov
mov
aaa
out
pop
dec
gs
push
sbb
fcom
cwtl
loop
adc
pop
add
into
sbb
push
cwtl
dec
jle
mov
dec
call
mov
adc
cmpsl
and
dec
jge
push
std
pop
and
repnz
dec
push
mov
inc
and
subl
aad
add
ret
fmull
sbb
push
js
in
xor
mov
sub
pop
out
pop
insl
cld
imul
adc
inc
pop
push
pop
pop
add
cmpsb
mov
clc
dec
mov
push
pop
sahf
xchg
push
idivb
adc
daa
jne
sub
push
scas
push
jge
pop
shlb
or
pop
push
xor
pop
inc
mov
xor
ja
std
int3
sbb
inc
jns
mov
xchg
push
jns
addr16
in
fstps
adc
cwtl
jns
dec
jae
xchg
xchg
push
popa
push
pusha
pusha
orl
in
rcll
add
outsl
ficoml
inc
jb
mov
or
jl
lods
in
lds
pop
xchg
repz
xor
sub
or
sub
push
push
rcrl
jne
movsl
jbe
adc
sub
icebp
pop
sbb
pop
jne
jb
push
or
xchg
jno
ficomps
outsb
inc
add
ja
seta
mov
push
rorl
pop
shlb
in
mov
xchg
adc
xchg
stos
pop
and
mov
mov
test
sarl
xchg
cmp
in
inc
sbbb
xchg
je
push
dec
jge
aad
in
mov
fwait
icebp
sub
ljmp
movsb
mov
or
mov
fisttps
fsubrl
jl
sahf
jae
inc
ret
push
hlt
addr16
cmpsb
push
shlb
repz
orl
jl
test
mov
xchg
mov
push
mov
pop
test
push
jge
cld
lods
jecxz
mov
dec
daa
popa
idiv
sub
push
loop
push
fsub
adc
add
push
outsl
repz
mov
out
lods
cmp
mov
cmp
loopne
push
mov
push
popf
sbb
loope
mov
ret
int
cmp
mov
mov
out
call
data16
popf
sbb
arpl
mov
mov
inc
shrl
push
jb
adc
inc
lock
cmp
xchg
push
filds
jmp
popf
sub
xor
jo
mov
pushf
push
out
out
gs
mov
fwait
cmp
add
in
sub
stc
fbstp
and
das
fadds
lea
and
sarb
jge
push
mov
jmp
sbb
inc
stc
mov
popa
inc
test
insb
js
mov
sub
jp
cmp
int3
repnz
rorb
xorl
cmpl
mov
xorb
push
lods
sub
test
mov
ret
xchg
mov
dec
push
jns
jecxz
dec
out
movsb
iret
sub
pop
sub
push
sbbl
inc
xchg
loop
xor
mov
sub
popf
inc
sbbb
pop
clc
jae
enter
inc
sub
negb
sarb
dec
or
sbb
ret
xchg
or
push
jg
js
pop
jp
push
lods
arpl
and
xor
pop
jo
arpl
jl
sarb
xorb
inc
xchg
xor
fistpl
inc
mov
lods
stos
mov
jae
xchg
xchg
mov
push
pop
xchg
mov
pop
das
out
inc
lret
mov
cmc
lock
sbb
sub
testb
adc
mov
jl
stos
mov
scas
cmp
loope
loope
xor
lods
mov
dec
stc
lcall
icebp
sqrtps
jecxz
mov
inc
cmp
xor
fwait
push
dec
sbb
jae
dec
xchg
rcrb
pop
loope
mov
adc
pop
xchg
arpl
lods
or
jecxz
shl
repz
in
inc
sub
lock
outsl
inc
adc
jb
pop
push
addr16
cmp
sahf
mov
lahf
adc
pushf
pushf
adc
adc
xchg
out
stc
xor
push
sub
xor
pop
mov
sbb
les
and
imul
mov
lcall
lds
xchg
mov
ja
stos
ljmp
sarb
daa
dec
lea
jae
icebp
jno
lcall
rcrl
push
xchg
shll
adc
insb
add
insb
dec
sub
cmc
mov
xchg
shlb
outsl
inc
xor
lret
add
int
mov
push
mov
addb
lcall
ret
dec
fcmovnu
sub
jp
mov
and
repnz
xchg
mov
sbb
inc
pop
inc
xchg
lret
popa
out
int
mov
int
pop
aam
mov
pusha
pusha
add
jg
pop
xchg
orl
aam
mov
repz
lcall
data16
hlt
jl
insb
push
push
jp
mov
aaa
cs
enter
fdivrl
push
pop
mov
icebp
push
pop
mov
xor
addr16
clc
push
inc
cmp
adc
xchg
movsl
fstps
ud0
into
in
jmp
pop
popw
rol
movl
pop
push
or
and
and
leave
jle
std
fildl
pop
xor
loope
xor
das
ljmp
imul
pushf
loopne
clc
add
aad
int
decb
pop
pop
mov
or
outsl
xor
push
mov
sub
daa
cmp
cli
xchg
mov
sbb
xchg
push
xor
loope
fcomp
int
mov
sahf
imul
ds
xchg
mov
stc
cmpl
sub
add
push
inc
arpl
pop
mull
repnz
in
add
test
sbb
bound
idiv
adc
es
cmc
mov
mov
jne
seta
sub
daa
mov
pop
pop
rorl
push
dec
push
mov
dec
ss
lock
sbb
push
mul
dec
sbb
scas
test
pop
jle
xor
inc
and
cmc
add
lahf
in
ljmp
mov
pop
iret
ficoms
dec
push
or
lcall
add
inc
adc
and
js
jbe
adc
jno
push
into
adc
or
pop
and
dec
fadd
filds
stos
sbbb
pop
lds
ds
mov
aam
xchg
repz
jge
adc
fistps
inc
add
movsl
pop
ret
xchg
jge
imul
fisubs
data16
push
shlb
cs
push
mov
call
push
outsl
loop
jmp
lcall
ret
mov
sbb
scas
add
lret
jg
scas
inc
pusha
push
nop
scas
hlt
mov
mov
push
out
jecxz
je
dec
pop
or
lret
hlt
xor
in
stc
shl
test
aad
aam
in
mov
cmpsl
imul
bound
aad
ss
sbb
out
test
sub
cmp
imul
push
jnp
sub
test
je
ja
in
push
lret
ret
inc
add
idivb
xlat
mov
sub
push
xor
loopne
mov
sub
push
test
lret
cld
js
inc
sub
bnd
jmp
sbb
jo
enter
dec
xor
mov
nop
adc
adc
push
adc
cld
and
mov
rolb
sub
jmp
xlat
mov
fidivrs
scas
mov
xor
cmp
stos
ss
mov
pop
mov
cmp
lret
gs
and
js
sbb
cmp
jne
loopne
fs
or
ja
inc
or
aam
lds
inc
add
es
jns
into
add
fdivrs
pop
jnp
scas
iret
sti
mov
stos
jno
and
jns
ds
in
add
bound
movsb
adc
sbb
fmull
nop
repnz
push
cmp
push
jo
jl
icebp
int3
outsl
ror
mov
xchg
jo
fisubl
xchg
dec
add
add
cmpsb
ljmp
aas
pop
adc
and
inc
add
xor
fbstp
sbb
mov
fcompl
add
add
cmp
aam
outsb
loopne
xchg
jae
mov
cmp
in
add
and
mov
inc
push
mov
popf
mov
ret
js
pop
nop
sub
pushf
xrelease
arpl
shr
inc
movsl
or
adc
stos
dec
pop
loope
mov
xchg
inc
mov
sub
std
push
xor
mov
jno
dec
sbb
cs
xchg
lret
enter
pop
xor
xchg
fists
test
push
imul
mov
ljmp
sbb
test
mov
add
in
xchg
jne
mov
sub
int
addb
mov
jle
inc
out
mov
sbb
insl
mov
sub
fstps
pop
fdivs
or
mov
pop
jbe
movsl
fsubs
add
inc
push
cmpsl
lock
xchg
stos
lcall
test
or
movsb
or
xchg
orb
sbb
cmpsb
bound
fs
das
push
push
dec
sub
xor
dec
movsb
inc
push
sbb
stos
nop
sbb
lds
cld
sti
out
daa
mov
sbb
xor
pushf
inc
das
subps
jnp
repz
or
popf
push
in
pop
loop
and
cmpsb
mov
mov
xchg
arpl
movsb
mov
rcrl
movsb
test
in
and
pop
pop
jo
jle
push
mov
imul
xchg
add
mov
xor
inc
sub
into
cmpsb
pop
jne
aam
cmpps
in
mov
jo
sahf
inc
les
repz
outsb
push
inc
call
scas
js
mov
stos
je
hlt
pop
xor
int3
add
stos
and
jno
out
ret
and
insl
sbb
dec
xlat
and
movsb
push
pmullw
rcll
es
xor
lods
cmpsb
es
loop
mov
shlb
outsb
insl
mov
push
lods
mov
dec
pushl
mov
ja
xor
shrl
pop
sbb
sub
js
fcmovnbe
movsl
fdivrl
or
ljmp
pusha
mov
push
nop
in
dec
bnd
pop
testb
push
dec
and
shll
push
adc
adc
bound
cld
inc
push
xchg
xchg
push
popf
sub
or
popf
sub
push
pushf
cmp
mov
push
push
ja
scas
jmp
out
clc
in
lds
aas
jno
push
aam
dec
test
scas
push
test
repz
in
mov
mov
arpl
dec
xlat
enter
mov
jns
sahf
mov
loope
pop
xchg
mov
cmc
dec
pop
xchg
out
imul
add
cmpsl
adc
cld
dec
test
inc
loope
xchg
addr16
push
stc
pop
pop
xor
adc
pop
sbb
aas
push
std
mov
stos
aad
pop
cmp
pop
and
lds
popf
jae
xlat
or
je
std
jae
fstps
fnsave
jl
stos
inc
test
mov
lock
sub
scas
fsubs
andb
loope
mov
inc
test
cmpsb
push
insb
pop
mov
mov
out
sub
lods
shrb
cmp
mov
stos
push
mov
sub
jns
add
mov
cmp
xlat
movsl
aad
xor
cmp
fstpl
es
into
stos
push
pushf
mov
or
xor
mov
ja
imul
jnp
aam
mov
xchg
push
mov
pop
clc
jl
mov
sub
dec
mov
inc
in
xchg
xchg
ds
jno
in
popa
cmp
cli
cmp
jmp
cmp
jns
mov
js
aaa
loopne
aad
mov
jne
xchg
jns
adc
dec
sub
sahf
jbe
inc
and
add
inc
test
stos
sarl
test
les
xlat
in
mov
repnz
push
mov
mov
in
and
pop
push
ficoms
xor
cmpsb
pusha
fstpt
adcl
loopne
fs
jae
pop
push
jl
mov
in
ret
adc
pushf
popf
int3
out
push
mov
sub
or
out
mov
push
xor
sbb
jns
or
push
out
pop
sub
mov
sbb
loop
ljmp
inc
inc
ljmp
negl
xor
in
cmovne
pop
push
pop
inc
notl
inc
inc
push
dec
es
lock
rol
mov
leave
push
mov
fldl
lods
and
jle
add
cltd
in
inc
lea
imul
loop
pop
sbbl
xchg
sbb
scas
movsb
push
sub
xor
shlb
xchg
add
or
pop
ljmp
pop
add
sarl
out
adc
cmpsl
sarb
sbb
insl
lods
mov
daa
push
lods
add
movsb
push
push
mov
imul
pop
dec
add
push
dec
inc
mov
and
lea
movzbl
dec
inc
sub
add
add
lea
mov
dec
call
add
inc
inc
or
lea
mov
inc
add
dec
inc
and
lea
mov
sub
inc
add
add
sub
lea
imul
inc
add
dec
dec
call
add
lea
mov
inc
call
inc
dec
add
xor
call
lea
push
mov
inc
inc
inc
inc
call
add
lea
mov
dec
inc
dec
call
inc
pop
and
lea
imul
add
inc
pop
inc
add
pop
dec
sub
lea
mov
pop
inc
inc
inc
dec
or
lea
mov
sub
pop
sub
dec
pop
dec
xor
mov
lea
mov
call
dec
inc
inc
dec
ret
and
lea
push
mov
dec
push
dec
dec
push
inc
xor
push
lea
mov
push
inc
dec
mov
inc
inc
push
or
ret
push
lea
push
imul
inc
push
add
dec
push
add
and
lea
mov
push
inc
inc
inc
call
dec
and
lea
imul
dec
inc
dec
inc
add
lea
imul
inc
sub
dec
jmp
add
mov
inc
inc
mov
xor
lea
movzbl
movswl
dec
dec
add
add
inc
add
add
lea
mov
movzbl
add
dec
add
inc
add
lea
mov
dec
inc
dec
dec
mov
inc
sub
lea
mov
inc
sub
cmp
jb
dec
xor
add
or
mov
lea
imul
mov
add
inc
inc
sub
inc
and
lea
movsbl
dec
mov
dec
inc
cmp
jb
dec
mov
sub
lea
xor
dec
xor
sub
add
pop
add
xor
test
jbe
lea
mov
dec
inc
inc
dec
or
lea
movzbl
inc
inc
inc
add
xor
lea
mov
add
inc
dec
inc
inc
xor
lea
mov
and
inc
inc
mov
sub
dec
movzbl
and
lea
add
add
and
sub
inc
mov
dec
xor
mov
lea
movsbl
mov
inc
dec
mov
dec
dec
add
lea
mov
dec
dec
jne
sub
mov
dec
add
sub
lea
mov
inc
inc
dec
dec
and
mov
lea
movsbl
inc
dec
add
inc
xor
lea
mov
imul
inc
test
jbe
sub
inc
dec
xor
lea
imul
dec
sub
add
inc
xor
lea
mov
sub
add
inc
inc
dec
xor
lea
mov
sub
and
sub
dec
mov
add
sub
movzbl
lea
mov
add
inc
jmp
inc
and
lea
dec
inc
pop
ret
push
sub
add
add
lea
movzwl
add
dec
inc
sub
dec
push
xor
lea
push
mov
dec
push
dec
sub
push
inc
add
lea
mov
dec
dec
inc
inc
and
lea
imul
sub
dec
add
dec
add
lea
imul
inc
call
call
sub
dec
inc
xor
lea
imul
add
sub
dec
add
xor
lea
mov
dec
dec
inc
inc
sub
lea
movzwl
inc
inc
add
dec
xor
lea
mov
cmp
je
dec
inc
add
sub
and
lea
mov
dec
add
inc
add
xor
lea
imul
dec
dec
dec
add
and
lea
mov
sub
dec
add
inc
and
lea
mov
inc
inc
dec
inc
sub
lea
imul
dec
inc
inc
sub
and
lea
mov
dec
add
dec
add
and
lea
movzbl
sub
add
add
inc
sub
lea
ret
mov
inc
pop
dec
ret
push
dec
mov
inc
add
push
lea
mov
add
dec
inc
push
inc
push
inc
push
add
call
jmp
lea
push
movsbl
inc
xor
inc
mov
inc
mov
inc
add
mov
lea
mov
test
je
add
dec
dec
inc
or
lea
mov
dec
add
mov
add
add
mov
xor
lea
mov
inc
repnz
inc
add
add
sub
jmp
xor
lea
mov
add
inc
dec
dec
sub
lea
mov
sub
inc
dec
inc
and
lea
pop
pop
ret
push
mov
add
add
inc
sub
and
lea
movzbl
add
inc
dec
sub
or
lea
mov
inc
inc
add
sub
add
lea
mov
dec
sub
add
add
or
lea
pop
ret
sub
mov
mov
add
dec
mov
inc
dec
mov
sub
lea
mov
mov
inc
xor
sub
add
mov
add
sub
inc
lea
mov
add
dec
add
sub
cmp
jb
sub
push
lea
mov
push
inc
add
push
dec
dec
mov
sub
lea
xor
mov
inc
xor
dec
inc
xor
inc
sub
push
lea
mov
xor
dec
jmp
fwait
inc
insb
mov
cmpsb
lret
push
int
add
repz
push
adc
mov
adc
jns
in
cmp
stos
mov
sbb
dec
sti
add
out
sbb
insb
xchg
or
add
les
mov
test
or
pop
pop
movsb
xor
xchg
sarl
in
fistpll
push
push
add
add
jmp
in
add
loope
push
xor
out
mov
rcl
cmpb
jne
into
call
mov
mov
out
inc
cmpsl
or
pop
iret
xor
sti
mov
movsl
adc
add
add
and
jno
sbb
out
pop
fiaddl
inc
push
insl
lea
mov
push
andl
mov
clc
test
in
in
ss
in
movsb
pop
adc
and
int3
mov
daa
add
iret
add
arpl
cmp
adc
pusha
sahf
jns
mov
sub
add
repnz
ficoms
or
outsb
xchg
aas
push
mov
pop
ljmp
js
adc
into
mov
mov
ja
cwtl
dec
imul
cltd
inc
pop
mov
fwait
outsl
pop
scas
inc
mov
inc
fistps
in
push
lahf
adc
int
xchg
in
in
cli
pop
mov
pop
cmp
xor
inc
in
ljmp
lods
push
jp
or
mov
mov
shll
out
xorl
adcb
stos
add
les
shlb
dec
iret
adc
pop
rol
les
sub
rorb
cmp
or
mov
jbe
jg
sti
adc
out
jne
cmp
jge
push
jae
or
lock
xchg
add
ja
xor
and
jecxz
mov
js
pop
dec
cld
subl
lods
pop
ud0
jl
or
and
aaa
movsl
es
movsl
fs
and
mov
push
pop
or
push
jnp
arpl
pop
insb
sub
cmp
inc
xor
sarb
ret
loopne
mov
push
rcrl
mov
mov
jmp
pushf
adc
push
mov
xor
or
mov
mov
mov
ret
lcall
xlat
shr
push
mov
xchg
pop
rcrl
xor
aas
xor
and
lods
dec
sbb
jmp
mov
push
das
inc
je
in
adc
mov
push
add
mov
jo
outsl
call
xlat
jp
out
jae
add
or
dec
mov
fcmovbe
je
xlat
cmc
int
dec
mov
imul
pusha
das
enter
sub
push
clc
xor
jecxz
in
and
pop
js
mov
loop
jmp
xlat
push
arpl
insb
mov
fld
mov
test
dec
les
mov
lcall
jbe
sub
pop
ljmp
dec
cli
lock
nop
insb
stos
mov
ds
jae
cmp
push
inc
cs
dec
or
in
xchg
dec
mov
push
sar
mov
jle
mov
fsubr
sub
nop
inc
in
adc
stos
dec
jmp
and
dec
cld
into
push
stos
in
inc
into
and
cli
jecxz
pop
xchg
popa
pop
pop
add
cmp
ret
inc
mov
sbb
push
jne
and
scas
pop
cwtl
in
jl
enter
add
lea
aam
mov
or
dec
pop
enter
lahf
cli
or
repnz
and
adc
pop
fisubs
outsl
fidivl
dec
add
sti
stos
testl
test
push
jmp
push
jae
shrb
pop
xchg
sbb
loopne
jne
adc
or
mov
mov
jecxz
xchg
imul
flds
movb
out
mov
mov
sub
push
and
imul
sub
test
dec
scas
les
shll
in
dec
daa
mov
iret
rcr
loopne
out
js
test
fimull
and
sbb
sbb
imul
push
mov
mov
not
push
es
sbb
fldcw
cmp
push
push
push
xorl
mov
ret
jb
mov
adc
pop
mov
sbb
mov
add
std
mov
lcall
push
sub
xchg
lds
xchg
dec
testl
cmp
ss
ja
xchg
pop
xchg
push
xchg
xchg
sbb
pusha
and
or
aam
mov
add
pcmpeqb
sub
mov
cmp
add
sbb
mov
xchg
cld
xchg
sub
mov
mov
stos
in
inc
fcomi
mov
aas
sub
dec
out
xchg
popa
adc
inc
into
push
imul
icebp
inc
negl
xchg
ret
lret
fisubs
xlat
or
cmp
cld
adc
sub
leave
ret
arpl
or
das
mov
push
sbb
jmp
js
mov
fidivrs
pop
popa
lret
pushf
int
ja
mov
lea
outsl
lock
test
addr16
jg
cmpsb
fdivrs
inc
mov
mov
jmp
sbb
push
out
stc
lahf
rcll
ret
jno
mov
cltd
sub
rol
or
xchg
add
jl
mov
sub
pop
lret
add
inc
xor
dec
aas
add
cmpsl
hlt
xchg
pop
lret
push
cmp
in
or
or
imul
adc
inc
test
adc
mov
lea
jne
rcr
push
lahf
sub
jnp
jmp
and
dec
repnz
jno
adc
iret
fidivl
push
pop
das
cmp
insb
or
popa
test
cmp
cmc
inc
lcall
add
fildl
popa
lret
mov
jg
loopne
movsb
in
mov
fcmove
dec
lret
iret
pop
into
add
pop
inc
aas
jne
cmpsl
arpl
jo
push
adc
int
incb
je
sti
pop
mov
sub
cwtl
sub
or
inc
inc
cmp
ja
cmp
addr16
add
pop
mov
mov
add
mov
adc
insl
je
sbb
imul
sbb
imul
cmc
pop
out
sbb
ret
test
xor
test
dec
cmpsb
ja
inc
jo
or
lds
arpl
dec
sub
jbe
mov
xchg
jb
inc
or
push
sub
divl
ret
outsb
jecxz
mov
sahf
js
cli
and
xchg
roll
jl
inc
repnz
std
inc
hlt
mov
call
mov
insl
popl
movsl
push
or
fsubl
lret
push
addl
and
pushf
add
mov
sbb
lcall
sub
cmp
or
stos
shll
xor
push
and
test
aad
and
in
test
rcrb
adc
outsb
xchg
sbb
mov
and
ja
mov
and
cmp
icebp
sbb
add
cvtps2pi
subb
adc
pop
nop
jbe
insl
cli
mov
lahf
push
push
adc
mov
push
mov
inc
int3
xchg
test
inc
pop
shrb
or
and
mov
mov
xor
sbb
ja
mov
gs
shll
test
add
or
fistl
add
subb
hlt
add
loope
out
push
or
out
dec
xchg
scas
adc
jbe
cmp
jg
add
xchg
ljmp
arpl
adc
aas
hlt
push
mov
data16
add
pop
je
sub
lcall
arpl
pop
std
mov
scas
flds
jmp
and
into
repz
testl
pop
mov
push
dec
inc
or
sub
xchg
test
cltd
xor
fistpl
pop
out
dec
xor
add
test
xor
movsl
xchg
mov
int3
das
ss
in
aad
je
push
pop
call
or
add
out
pop
jge
or
jl
mov
clc
and
int
cltd
mov
push
aad
jns
or
pop
push
add
sub
mov
dec
roll
and
sub
stc
lahf
pop
jne
sarb
or
lcall
or
cmp
outsb
jmp
into
movsb
mov
clc
and
sub
add
loopne
mov
xor
push
in
and
jno
or
stos
mov
mov
daa
or
cmp
xchg
aas
int
shrl
rolb
mov
notb
int3
and
xor
cld
cmp
in
push
sarb
sbb
ret
hlt
push
mov
jp
out
lret
adc
icebp
in
mov
jbe
mov
add
sbb
and
sub
add
arpl
aam
loope
mov
lret
and
mov
cld
jge
dec
sar
sarl
cmpl
repz
pop
xor
mov
dec
ja
test
inc
cmpb
jmp
imul
enter
test
repnz
iret
xchg
rcl
rcrb
shll
sub
add
stos
mov
out
inc
into
aad
pop
outsl
mov
movsb
pop
pop
add
enter
jle
mov
scas
pop
ret
jns
loope,pn
inc
or
cmp
jecxz
lcall
dec
loop
xchg
dec
aam
dec
cmc
add
ss
adc
push
bound
and
cwtl
xor
stos
adc
add
les
outsl
lods
in
and
fcomip
sarl
jne
cmp
fimuls
call
icebp
and
push
sbbl
repz
cmpsl
sbb
jbe
inc
push
push
into
cmp
xor
sahf
sub
jne
and
jnp
repnz
loope
stos
mov
mov
fldpi
mov
stc
fadds
push
jb
adc
xor
mov
cmpsb
or
sbb
jle
lock
sub
lahf
adcb
push
lahf
cmp
lcall
in
xchg
lret
scas
cmp
push
push
cmp
rclb
mov
cmp
mov
sub
xchg
rolb
pop
fidivs
mov
outsb
mov
adc
push
pop
push
int
push
sub
fldcw
mov
sbb
cltd
insb
add
fidivs
jle
xchg
cmp
mov
mov
pop
shlb
cmpl
mov
lods
js
mov
add
sbb
sbb
push
cli
pushf
dec
or
jne
lret
add
mov
or
jmp
push
push
int
cmpl
repz
stos
adc
gs
lea
mov
xor
popf
sub
mov
movsl
push
shll
jp
mov
jae
mov
mov
shlb
lods
test
jecxz
xchg
test
add
or
pop
fcoms
lahf
dec
pop
ret
mov
inc
cmc
std
popa
fiadds
and
xchg
and
dec
push
mov
out
push
dec
jno
loopne
gs
popa
push
sub
jae
inc
and
push
xchg
enter
push
loop
test
cmp
cmpsl
add
or
xchg
push
mov
pop
fdivrl
xchg
mov
rclb
sahf
sub
ja
xor
movsb
cli
cmpsl
and
jp
mov
repnz
hlt
out
stos
movsb
cmpsb
inc
push
sub
adc
pmullw
sub
repz
out
leave
stos
and
sub
pop
popf
xchg
fidivs
imul
mov
cld
push
fucomi
popa
mov
mov
out
out
mov
or
push
push
inc
add
pop
jmp
mull
and
xchg
dec
repz
int3
arpl
push
bound
ja
adc
ja
fwait
xchg
jns
jb
stos
pop
outsw
jle
add
inc
jmp
pusha
cs
testl
test
inc
mov
push
cmp
sti
sbb
inc
mov
jg
xor
and
loopne
ss
movl
push
fmull
mov
pop
jno
xchg
lcall
mov
test
lods
mov
lods
jo
aaa
xor
loopne
aas
xor
gs
shrl
rorl
out
mov
fwait
mulb
sub
mov
fidivrs
mov
mov
rcrl
mov
pop
xor
aaa
fwait
loop
lods
sbb
mov
imul
cmp
sbbl
loopne
pop
jb
aad
pop
pop
pop
outsl
cli
sbb
push
jmp
ficompl
cmp
mov
stos
imul
sbbb
xchg
sbb
imul
idivb
bound
insl
cwtl
cld
mov
mov
inc
test
js
mov
mov
add
lds
mov
cmp
movl
and
xor
mov
out
popf
xchg
xchg
mov
popf
pusha
xor
jl
push
sub
mov
arpl
xlat
xchg
ljmp
lea
mov
jl
test
jnp
sbb
push
mov
decl
gs
jl
mov
lods
hlt
adc
icebp
jmp
inc
pop
mov
sbb
push
mov
pop
sub
pusha
sub
sub
inc
push
pop
xor
arpl
shll
popf
out
in
negb
inc
mov
std
xor
pop
mov
cltd
dec
fwait
pop
sub
in
push
test
xchg
movsb
rcl
xchg
jae
pop
jnp
mov
js
mov
pusha
cmp
pop
cwtl
or
push
push
adc
push
adc
xor
ja
sub
sahf
loope
std
les
pslld
stc
lock
add
mov
jp
and
and
sub
lods
and
xlat
cmc
jg
inc
call
popa
movsl
aam
cmp
jb
and
push
push
or
and
and
es
mov
mov
or
push
push
arpl
fiaddl
aas
dec
and
sti
out
and
mov
jo
jae
rcl
repnz
cmp
xor
mov
jp
push
das
pop
cmp
mov
mov
mov
mov
loopne
ljmp
xchg
lea
cltd
pop
cmp
inc
sub
pushf
bound
jns
cmp
into
adc
rcll
mov
fwait
out
xchg
jnp
xchg
mov
fsubr
inc
out
cmc
insb
pop
jp
jbe
je
push
xor
mov
dec
insb
push
pop
nop
or
push
jle
ret
ret
and
dec
add
jb
xor
js
sarl
jno
movsb
mov
mov
and
inc
sbb
jmp
cmp
scas
es
gs
pop
inc
jmp
dec
mov
in
xor
mov
or
loopne
mov
sbb
adc
push
mov
lret
xor
mov
pop
mov
cmp
dec
test
mov
aas
rcr
stc
incb
jp
negl
inc
dec
pop
dec
lods
aam
adc
push
lcall
arpl
sub
dec
push
sub
mov
mov
das
pushw
push
sub
into
scas
les
inc
mov
xchg
sbb
dec
addr16
in
dec
cli
cwtl
cs
loopne
incb
lock
lret
lods
mov
aam
jge
in
add
push
hlt
or
sbb
lahf
or
jbe
jle
mov
push
or
xor
inc
and
inc
or
fwait
cmp
jns
icebp
mov
lods
imul
jg
inc
xor
je
clc
in
jb
pop
and
jecxz
jb
xchg
bound
insb
mov
or
pop
cmp
push
in
repz
push
loop
ds
jae
cmp
xchg
rcll
mov
stos
inc
adc
push
sbb
fstpt
cmp
mov
imul
in
and
out
jbe
std
lods
adc
jns
or
cwtl
sub
lods
sbb
outsl
fld
in
dec
add
orl
lock
cld
push
outsl
adc
cmp
jmp
and
lock
mov
xchg
mov
fcoml
fs
jl
mov
jle
iret
jo
push
movsl
push
test
dec
pushl
jl
into
push
adc
loop
mov
loop
leave
dec
lock
dec
jns
lcall
push
roll
divl
push
stos
cwtl
push
int3
movsl
jp
push
cli
pusha
sub
jae
stc
jb
nop
mov
cmp
mov
sbbl
cmp
xor
and
mov
add
out
fcomps
pop
push
test
std
xchg
call
and
repz
loopne
stc
popf
and
in
push
nop
push
stos
cltd
push
pusha
popf
std
fs
dec
mov
push
pop
test
dec
adc
cli
xchg
addb
jo
jae
mov
leave
testb
iret
stc
mov
cmp
lret
pop
imul
out
add
outsl
inc
or
push
repz
test
adc
divb
in
jns
sub
aam
mov
mov
inc
jecxz
cmpsb
subb
jmp
xchg
xor
pusha
xchg
xchg
pop
pop
mov
fstpl
js
fldt
aaa
pop
dec
lea
lea
push
dec
movsl
les
imul
or
adc
add
cmpsl
inc
xchg
cmpsb
adc
fmulp
mov
in
xchg
xor
adc
rcrb
enter
mov
sti
clc
or
js
mov
adcl
xor
dec
and
xchg
sar
shl
in
mov
xor
mov
mov
lcall
scas
lret
mov
push
or
pusha
faddp
stos
push
xor
fildll
rol
fcompl
loope
sbb
jb
jmp
mov
adc
shll
lcall
pusha
or
adc
inc
mov
adcl
into
mov
in
int3
test
cmpb
push
out
xchg
iret
movsl
mov
dec
sub
test
int
push
jae
pop
in
inc
addr16
inc
mov
ds
push
pop
call
lahf
adc
or
in
cwtl
mov
mov
js
add
push
mov
test
xchg
inc
add
jns
shll
xchg
and
int
std
test
inc
fiadds
imul
sbb
mov
xor
popa
mov
cwtl
lret
xchg
adc
sub
mov
sbb
add
xchg
fistpll
sbb
or
push
pusha
add
xchg
sub
cmpsl
or
xor
cs
jo
push
js
jb
xor
mov
lret
adc
sub
dec
iret
call
push
lods
dec
add
jl
jns
and
sahf
cmp
mov
push
ffreep
icebp
adc
sub
jge
inc
inc
xor
cmpsl
stos
dec
push
pop
movsl
in
push
icebp
sbb
cwtl
int
ds
out
adc
mov
pop
lea
or
pop
sti
stc
int
dec
imull
or
loop
lds
and
fisttpl
xor
xor
int3
or
call
outsl
add
jl
and
add
scas
data16
ret
and
shl
mov
mov
pop
push
sahf
psubb
jmp
dec
xchg
or
xchg
adc
scas
or
iret
mov
jecxz
mov
jmp
adc
sbb
in
or
int
les
or
sub
subb
jmp
dec
mov
jae
push
mov
mov
iret
mov
outsb
roll
mov
ret
mov
or
fsubrs
lret
push
mov
ja
add
iret
ret
mov
shlb
inc
pop
sbb
and
jmp
xor
leave
inc
mov
fsubrl
or
nop
jo
fists
lret
mov
divl
shl
mov
dec
mov
fists
cmp
pop
xor
jl
lret
lods
dec
mov
lea
subl
push
fdivrs
loopne
stos
test
jmp
les
filds
pop
jno
out
sub
test
in
hlt
xchg
inc
test
jae
repnz
pop
inc
out
or
loopne
std
std
mov
pop
cltd
jmp
jo
or
xor
and
loop
mov
cmp
sbb
leave
out
mov
or
xchg
jecxz
jecxz
mov
enter
and
cs
in
adc
iret
repnz
in
xor
push
outsb
insb
std
gs
mov
mov
add
xlat
cld
fnstenv
xlat
xchg
shrb
cmc
fwait
jo
int
jp
mov
movsb
inc
cmp
mov
inc
push
rorb
mov
add
adc
ja
xor
mov
mov
jp
mov
xor
xchg
xchg
sbb
jnp
das
pushl
inc
jb
jo
test
sarl
lock
xchg
insb
adc
pop
mov
xchg
and
jle
repz
rcll
jo
stos
les
xlat
lret
xor
or
popf
mov
lcall
mov
sub
or
cld
loop
lret
mov
jmp
cmp
mov
xchg
icebp
dec
xchg
ja
ret
inc
out
add
in
cmc
or
cmc
fisubrs
or
sti
in
xor
movsl
push
mov
iret
inc
sub
leave
mov
and
jnp
cmp
lahf
loope
sarb
mov
leave
and
mov
xor
arpl
xor
xor
mov
loopne
sbb
add
rcl
sysenter
mov
and
loope
sti
jbe
mov
push
mov
add
add
test
loop
push
ffreep
adc
cld
add
js
lret
xor
cld
xchg
xlat
sbb
pushf
inc
mov
cmp
out
stc
out
or
xor
push
cwtl
add
mov
sbb
xor
out
or
popf
and
mov
adc
imul
sub
or
mov
test
std
push
pop
jp
out
in
in
push
pop
inc
dec
scas
bound
fstl
mov
in
mov
push
testb
cmp
add
call
call
lcall
data16
push
xor
lret
sahf
jb
ds
mov
cmp
ret
test
cld
ja
pop
mov
pop
fcompp
cs
push
pop
fstpl
xchg
dec
xchg
cmp
jmp
xor
and
lods
xchg
xlat
test
shr
mov
sub
stos
mov
popf
or
fnsave
aaa
clc
mov
xor
ja
outsl
ret
push
out
jp
lahf
mov
and
sub
jb
cmp
jns
mov
mov
push
mov
and
test
mov
adc
xchg
jb
mov
push
ja
inc
ds
shrl
in
xor
adc
push
sbb
arpl
sbbb
adc
popa
int3
cmp
out
ss
jg
mov
lds
cmpsb
mov
mov
sbb
fsts
repz
xchg
sbb
xchg
mov
mov
scas
jno
mov
cmpsb
mov
les
sbb
xor
nop
ret
cmp
and
jle
shlb
adc
xchg
mov
lret
in
movsl
mov
mov
int
rorl
dec
and
pop
shrb
cmpsl
fidivrl
iret
mov
es
daa
jae
pop
add
sub
lock
roll
xor
in
test
idiv
pusha
shlb
fldcw
and
and
jns
push
stc
pushf
xorl
and
into
xor
mov
ja
mov
pop
jnp
in
out
sbb
cmpsb
lea
mov
insb
cmc
xor
cmpsl
mov
adc
aaa
sarb
cmp
jge
std
push
mov
aas
lea
rolb
out
in
cmp
sbb
mov
cmp
or
jp
es
sbb
cmp
incb
inc
sbb
je
push
mov
cwtl
ljmp
pop
and
addr16
fwait
xchg
aaa
int
rol
cmp
movsl
clc
inc
pop
aad
test
sub
popf
dec
push
loope
mov
dec
add
je
dec
mov
inc
and
aad
iret
xor
push
imul
xchg
adcb
pop
add
mov
test
sar
adc
inc
push
pop
inc
jo
jne
push
insb
std
enter
out
and
pop
cmpsb
shlb
or
daa
pop
sbb
mov
out
xchg
mov
sbb
cmp
shrb
cmc
xchg
add
inc
cwtl
call
rorl
mov
daa
inc
shlb
pop
dec
mov
mov
push
dec
cmc
jge
jns
jmp
sub
inc
test
sti
or
jge
inc
mov
divl
sbb
jne
xchg
mov
pmuludq
lock
bnd
jno
popa
jae
insb
je
inc
inc
fldl2e
arpl
stc
pop
add
xlat
lcall
sbb
in
loop
shrl
pop
xor
rep
dec
fwait
dec
push
sti
test
push
sub
lods
dec
fbld
imul
aad
cmp
mov
pop
xlat
push
test
inc
ja
jbe
push
data16
xor
mov
repnz
mov
lea
int3
nop
sbbb
mov
lea
enter
mov
movl
sub
mov
inc
std
loope
cwtl
pop
mov
clc
jno
pop
pop
out
out
stos
rcll
inc
mov
and
int
das
add
pop
and
mov
loop
adc
mov
sub
and
ds
stc
sbb
rcrl
imul
shll
test
bound
fsubs
inc
cld
adc
sub
jbe
shl
mov
pop
cmp
mov
aam
xchg
cld
mov
cwtl
ret
or
adc
pop
fsubrl
dec
cmp
add
lret
inc
insl
sbb
test
iret
bound
lods
mov
inc
xchg
rcrl
loop
sti
mov
or
mov
cmc
push
pop
into
lret
jp
movsb
xor
ja
sub
jp
cltd
adc
or
je
jnp
cli
mov
pop
iret
in
icebp
aas
and
out
test
mov
and
xchg
cwtl
push
pop
mov
roll
fisttpll
scas
and
inc
icebp
mov
pusha
cmp
cltd
push
dec
popa
pop
mov
arpl
aam
cmp
icebp
add
adc
mov
push
mov
repnz
out
mov
inc
push
mov
dec
xchg
ja
sti
add
or
fwait
cmp
inc
sti
sbb
dec
dec
jge
mov
in
xor
test
xchg
xor
rcrb
dec
out
push
sbb
pop
and
and
add
aam
fwait
mov
inc
in
dec
fisubs
insb
rcr
rol
jae
outsb
cmc
push
lods
ss
inc
cmp
icebp
lock
aam
sbb
das
cmp
ds
mov
jnp
mov
and
int3
push
xor
push
and
mov
das
mov
and
mov
imul
pop
repnz
cmpsb
cli
cmp
cwtl
das
dec
lds
subb
into
dec
int
test
test
mov
incl
icebp
or
pusha
sbb
rcll
jne
shlb
xor
loopne
cmp
mov
mov
and
mov
mov
push
pop
xchg
xor
inc
push
or
dec
jbe
pusha
jo
sub
out
lcall
jp
pop
adc
sub
inc
lcall
imul
or
imull
sbb
into
das
adc
cmp
mov
sbb
cmp
lock
insl
dec
xchg
pop
pop
jge
push
into
daa
aaa
dec
cmpsb
in
adc
push
rcl
shll
repz
mov
lret
pushf
decl
mov
inc
adc
ljmp
pop
pop
fnsave
mov
fwait
xlat
jne
sub
pop
push
add
rorb
xor
shlb
sbb
dec
inc
scas
inc
sahf
popa
xchg
mov
xorb
daa
cwtl
jecxz
lods
mov
loope
lcall
in
cld
int
lods
popf
loopne
xchg
fstpt
add
in
test
mov
in
and
and
pop
add
nop
sti
or
mull
mov
mov
xor
jecxz
outsl
add
cmp
sbb
out
mov
jb
push
and
popa
pop
imulb
imul
and
lea
ljmp
imul
movsl
movsl
jl
decl
int3
inc
in
dec
fldenv
push
aaa
dec
push
add
cmpb
or
es
mov
dec
cwtl
push
stos
cmp
std
add
push
push
sub
and
fldt
or
lds
adc
lock
sub
jnp
jo
adc
ja
xor
outsl
lods
outsb
jl
jecxz
test
imul
sarl
lds
je
rclb
out
in
cmp
sbb
sub
adc
mov
jb
repnz
dec
fdivrp
andb
out
xor
movsl
loope
mov
ljmp
je
cmpsb
mov
ficompl
filds
push
loop
xchg
adc
mov
lret
push
fidivrs
out
jmp
jge
lods
mov
push
push
cmp
imul
dec
loope
push
pop
xor
leave
mov
ss
mov
mov
popa
jno
notl
les
je
push
imul
xlat
fadds
repz
xchg
andl
aas
repz
loopne
fstpt
repz
mov
jmp
js
out
jne
dec
addb
lret
sbb
pop
enter
bound
dec
test
dec
out
flds
sbb
xchg
in
outsb
fadd
xor
add
dec
jb
lods
push
xlat
adc
jge
cmp
and
mov
out
cwtl
ret
andl
mov
addb
fcompl
lods
cwtl
push
inc
clc
aad
mov
das
int
addr16
loopne
inc
test
into
push
and
sub
imul
sti
mov
arpl
or
std
mov
or
pop
in
ds
xchg
mov
scas
jge
aas
push
push
mov
arpl
enter
jbe
cmp
pusha
pop
in
sub
mov
les
mov
das
loope
fs
lcall
xlat
pop
aas
push
xor
add
mov
fsubl
leave
or
bound
iret
cmp
lea
aaa
test
jmp
xchg
cmp
xlat
xchg
push
arpl
cld
movsb
cmp
ret
push
popa
sbb
imul
push
insl
xchg
mov
mov
adc
inc
mov
inc
xchg
fisubrs
and
insb
mov
jb
xchg
xchg
and
fnsave
inc
nop
cmc
fs
mov
movsb
or
loope
insb
insl
jbe
xor
ss
push
test
mov
sarl
inc
ss
lahf
inc
fists
xor
les
push
fstpl
stos
mov
xchg
insl
es
mov
pop
pop
int
push
cmc
dec
test
cs
and
mov
and
cmp
mov
lahf
sbb
add
int3
xor
lahf
and
cmc
add
and
fwait
dec
xor
xchg
movsl
popf
cmp
push
imull
cltd
xor
inc
mov
test
jge
sarl
cli
add
fcmove
adcb
cltd
jbe
leave
hlt
jp
jo
adc
xor
dec
cmpsb
mov
xorb
pop
xchg
insl
adc
fildl
test
mov
xchg
push
adc
pop
out
mov
int3
or
sub
movsl
fdivrs
lcall
push
mov
js
xchg
sub
in
jbe
imul
in
or
pusha
lds
add
add
sub
jp
iret
pop
icebp
outsl
repz
inc
in
sub
stc
lds
in
xchg
pop
fidivrl
les
jge
jge
fdivs
jae
jns
and
mov
dec
adc
int3
adc
insb
repz
scas
lahf
arpl
nop
cld
sbb
push
adc
ja
mov
mov
loope
sti
sahf
add
add
call
xor
mov
fwait
mov
mov
xor
stc
sbb
test
lahf
push
xor
add
sbb
inc
inc
out
dec
xchg
or
or
push
rclb
repnz
imul
dec
adc
xchg
inc
pushf
lret
pop
mov
mov
and
pop
add
adc
mov
inc
shlb
out
lods
mov
iret
pop
ja
popf
pop
dec
cmpl
ja
repnz
push
fisttps
mov
xor
jmp
fstpl
mov
loopne
lret
lock
nop
mov
push
push
popa
push
in
shlb
decl
adc
lret
cs
test
in
push
push
into
jnp
inc
and
mov
and
dec
jbe,pt
push
loopne
cmp
jmp
mov
mov
jge
pushf
and
test
mov
sbb
add
out
sbb
aad
dec
cld
inc
inc
out
push
pop
dec
mov
inc
imul
test
dec
sahf
adc
and
push
mov
mov
or
jb
mov
aam
addl
mov
lcall
test
gs
and
sbb
xor
push
push
in
jns
cmp
icebp
gs
jecxz
outsl
lock
dec
inc
sbb
xor
or
frstpm(287
ljmp
xor
les
int3
in
cmpl
test
adc
mov
adc
mov
xor
cmp
jbe
test
push
or
dec
idivb
lock
inc
xlat
sub
push
aaa
pop
int
mov
repz
pop
shr
sbbb
adc
imulb
mov
push
lods
loop
adc
xchg
and
adc
iret
inc
test
dec
mov
adc
test
aas
cmp
imul
fsubrs
out
arpl
shl
repnz
nop
jg
jno
push
adc
xor
fwait
aas
bound
xor
or
xor
jno
mov
xchg
push
scas
aaa
pop
scas
pop
std
jl
xchg
test
push
mov
jl
mov
movsl
das
dec
cmpsl
outsb
std
xor
les
aaa
xor
int
sbb
dec
push
test
test
les
xchg
testl
sahf
inc
arpl
pop
adc
mov
push
loope
cmp
pushf
inc
mov
lahf
xchg
cltd
fwait
gs
pop
xchg
fdivrl
movb
inc
in
insb
or
cmp
add
sbb
jo
loopne
xchg
inc
adc
mov
out
inc
push
push
fwait
inc
or
adc
sub
shlb
aaa
inc
mov
in
popa
mov
inc
dec
inc
push
out
or
ficompl
lds
adc
scas
adc
mov
sbb
clc
lret
sti
dec
mov
sbb
ja
mov
icebp
cmp
mov
lret
mov
pop
and
xchg
lea
inc
sti
rorb
or
inc
sarb
push
dec
sub
inc
push
loop
imul
inc
mov
daa
stos
sbb
inc
call
inc
sub
mov
jecxz
sbb
lret
lret
jmp
dec
mov
out
push
movsb
fwait
sbb
mov
cmp
js
and
scas
jle
or
push
aam
xor
in
push
in
pop
icebp
add
mov
popf
arpl
sbbl
fcmovnb
ja,pn
mov
sbb
cmp
mov
movsb
xor
mov
adc
inc
repz
cmp
pop
lds
sub
nop
adc
mov
push
bound
jecxz
inc
push
cmp
mov
imul
push
jecxz
outsb
sub
pop
lods
sahf
test
mov
push
inc
push
mov
in
in
shrb
out
cltd
jbe
movsb
ret
add
sub
fs
int3
and
push
jo
jo
psubsb
adc
jbe
fistl
and
pop
js
inc
xchg
push
ficoms
cli
outsl
bndldx
dec
mov
dec
fwait
push
cmp
sbbl
sbb
stos
mov
jecxz
mov
repz
push
and
lcall
lea
adc
sti
dec
pop
xchg
push
dec
mov
and
inc
pop
int3
clc
cli
mov
sub
insb
adc
pop
int
pushl
inc
adc
cmp
add
idivb
push
sbb
stos
pop
xchg
adc
push
add
mov
aam
movsl
sub
xor
push
pushf
push
in
push
mov
out
not
push
shr
daa
cmp
xchg
xorl
push
and
ficoml
out
adc
mov
addl
notl
mov
loopne
and
stos
pop
xchg
add
ret
push
fistps
lcall
add
xlat
pushf
xchg
dec
repz
int3
test
fdivs
inc
in
stos
and
les
push
movsb
mov
adc
jne
dec
addr16
out
mov
and
cwtl
mov
push
in
jnp
mov
and
fwait
loopne
and
mov
push
fcoml
mov
lds
push
jb
mov
xchg
push
lret
hlt
ds
mov
enter
cmc
and
cwtl
jb
cmpsl
movsl
ds
vpacksswb
pop
pop
and
scas
xchg
ss
outsb
adc
jae
inc
jle
jg
sub
mov
mov
mov
mov
inc
test
loop
inc
out
ss
pop
jge
ret
adc
add
pop
xchg
mov
icebp
das
cmp
fstpl
adc
jno
xlat
dec
xchg
dec
dec
leave
aas
mov
repnz
pop
dec
ret
je
and
xchg
outsb
lock
fst
stc
mov
adc
cmp
js
inc
jg
cmp
fsubl
dec
sbb
in
mov
mov
popf
test
xor
cs
fcomp
arpl
mov
xchg
add
dec
cmp
out
aad
xlat
jp
pop
pop
addl
dec
xchg
push
jmp
mov
fadd
xor
lock
adc
fdivp
adc
sbb
jle
add
sbb
repz
xor
mov
cmp
adc
fisubl
fwait
or
outsl
fistps
xchg
addr16
jl
xorl
outsl
inc
pop
push
push
rol
jge
push
add
xorl
stos
mov
mov
lahf
jecxz
push
jno
inc
popf
test
xchg
adc
add
jg
jmp
jns
ss
movsb
add
and
js
movsl
test
stos
xor
rorl
jb
and
inc
insl
imul
mov
add
cwtl
pop
aam
push
out
and
pop
pop
out
lret
jno
sub
dec
cmp
cmp
arpl
lods
imul
xor
pushf
sbb
add
fcmovu
pop
xchg
das
repz
cmp
or
mov
stc
mov
aaa
sub
push
cmpb
dec
push
repnz
jo
hlt
inc
addr16
cmpsl
xor
mov
jle
push
orl
inc
call
mov
mov
fisttpll
sahf
in
loope
rcll
add
aad
in
inc
gs
movsl
sbb
lods
add
fwait
mov
sbb
cwtl
push
jo
jge
scas
mov
jns
repz
shrb
out
cmp
scas
mov
es
mov
popf
mov
mov
ret
stos
push
push
data16
stos
push
pop
movsb
int3
stos
int
jge
out
sbb
cmp
out
lods
adc
test
imul
inc
cmp
scas
sub
push
mov
or
adcl
sbb
mov
fcoml
inc
ret
fcoms
lds
fnstsw
cli
or
mov
movsb
ret
xchg
mov
mov
lret
mov
popa
push
or
shr
jp
mov
pusha
mov
and
ds
xor
sub
icebp
inc
fdivl
xor
push
xchg
lods
xchg
pusha
sar
xchg
xor
stos
mov
loope
jl
outsl
mov
sub
movsb
inc
adc
rcll
mov
fstpt
xor
lock
xor
lods
cmpsb
sar
sahf
lods
pop
dec
aaa
push
mov
mov
jo
pop
rcl
mov
aad
int3
mov
cmp
icebp
mov
sbbl
ret
and
popf
add
mov
std
fneni(8087
push
sub
test
les
in
add
mov
mov
xchg
stc
addr16
xchg
lds
popa
jg
adc
inc
jp
inc
mov
addr16
cmp
ret
or
ljmp
pop
inc
sti
mov
jae
stc
stos
inc
mov
lods
in
sahf
fcmovb
inc
adc
push
adc
sub
inc
dec
cld
mov
and
sub
call
sbb
cmp
imul
push
xor
push
mov
mov
push
stos
lods
jg
hlt
sub
pop
fisttpl
out
sub
rolb
adc
sbb
mov
out
outsb
pop
xchg
jge
mov
push
notb
stos
ja
sub
and
push
popa
mov
and
mov
sbb
push
push
ljmp
mov
jg
sti
imul
cmp
mov
incb
int
cld
adc
push
adc
mov
jg
leave
add
sub
sub
adcl
mov
dec
xchg
inc
push
movsb
dec
xor
xor
pop
mov
xchg
mov
gs
mov
rclb
popf
mov
gs
out
xor
movsb
pop
das
push
sub
or
insl
fwait
push
lock
dec
jge
mov
mov
xchg
mov
dec
inc
push
add
inc
adc
xor
dec
push
adc
push
or
insb
ja
mov
sub
jle
loop
cmp
xchg
dec
jmp
mov
sub
and
loopne
outsl
jg
into
xchg
inc
lea
cmc
jl
sbb
inc
inc
mov
adc
add
jmp
into
pop
jg
fnstsw
push
scas
adc
jnp
fwait
stos
movsl
xlat
in
and
negl
push
push
dec
mov
pop
sub
mov
pusha
cmpsb
imul
in
or
inc
xor
fldcw
cmpsb
add
in
jecxz
aam
adc
and
inc
and
in
addr16
jmp
xor
lahf
mov
test
push
mov
sub
xchg
cmp
xchg
lds
lods
or
and
roll
jecxz
loop
xchg
pop
lea
fistpl
popf
mov
cmp
push
or
mov
mov
push
push
mov
jbe
xchg
mov
out
daa
sub
inc
pop
ja
nop
dec
dec
mov
jbe
and
leave
jnp
std
ss
sti
lret
clc
mov
inc
xor
fimuls
cmp
aad
das
mov
std
int
andb
orb
ret
inc
mov
adc
jb
push
jns
mov
jb
xor
aaa
js
in
int3
testb
fidivrl
pop
cs
sahf
lahf
xchg
xor
sbb
adc
adc
repnz
fidivl
xlat
pop
lcall
test
popa
jo
dec
inc
push
and
scas
imul
jmp
jae
push
sub
xor
sbb
arpl
mov
arpl
fwait
mov
mov
pop
lds
test
test
push
add
test
mov
insl
rcl
fmuls
pop
mov
cmp
test
or
dec
popl
in
and
or
das
mov
mov
stos
adc
shll
jge
lahf
sar
adc
icebp
mov
jp
sub
in
in
and
jp
andb
aam
bnd
movsb
inc
int3
mov
pcmpeqd
mov
int
jns
xchg
pop
lea
mov
imul
mov
mov
std
xor
pop
iret
sbbl
popf
xorl
cmp
xor
lahf
push
mov
insb
lods
icebp
rep
repnz
out
sbb
ret
test
sarl
jne
dec
mov
sub
or
sbb
mov
mov
mov
sarl
popf
and
pop
repnz
scas
push
cmp
out
fsubrl
add
xlat
and
and
dec
call
pop
stos
popf
xchg
mov
jbe
add
orl
and
lea
push
icebp
in
int3
fwait
jae
cltd
in
in
ret
cmp
sub
loop,pn
je
outsl
xchg
int3
push
mov
cmpsb
bound
dec
push
pop
adcl
mov
mov
jb
inc
imul
mov
fldenv
mov
addr16
mov
or
xor
arpl
test
dec
sti
ficoml
push
xchg
push
test
xor
inc
push
add
mov
xchg
js
xchg
xchg
test
aaa
jle
aaa
xor
es
dec
stos
xor
popa
fcoms
rcr
mov
adc
jecxz
fisttpll
jle
push
xchg
in
mov
sti
fdivs
scas
pop
std
imulb
aaa
rcll
sti
inc
fsubr
jno
mov
cmp
and
insl
inc
cmp
push
rorl
cwtl
mov
pop
repnz
pop
jp
nop
rorl
or
push
sub
sub
push
xchg
das
or
jmp
fmull
hlt
sub
mov
push
sbb
sub
lahf
in
or
sbb
mov
mov
imul
dec
cld
inc
stc
xor
mov
lock
dec
loop
adc
idivl
sbb
in
dec
mov
lret
repnz
push
mov
iret
cmp
pcmpgtd
add
ret
adc
ret
fsubp
xchg
or
movsl
lahf
xor
out
call
sbb
lea
jb
cmp
lods
ret
aas
int
add
push
push
loopne
jecxz
flds
push
js
or
dec
jne
mov
fldenv
int3
push
or
pop
lods
fistl
mov
mov
sub
mov
push
or
xchg
add
rcrb
rcr
in
fwait
jo
clc
and
pop
loop
or
sbb
inc
arpl
xlat
ret
dec
mov
in
xor
es
outsb
mov
or
test
mov
jae
lods
into
into
jge
test
test
lret
in
or
push
loopne
mov
ret
rclb
mov
nop
mov
shl
pop
push
mov
cmp
jne
pop
and
shr
sub
inc
mov
add
inc
fisttpl
cld
repnz
jne
scas
mov
push
mov
in
mov
outsb
add
xor
fstpt
mov
out
or
inc
lahf
adc
and
gs
les
pop
fiaddl
cmpsl
mov
inc
lahf
mov
dec
or
fstpt
std
xor
xlat
sbb
add
cmp
ss
ret
int
cmpsl
push
mov
push
pop
stos
lock
add
lds
ficoml
xchg
add
imul
mov
push
getsec
call
cmp
mov
push
ret
je
mov
scas
add
pop
int3
jle
xchg
ja
jmp
sbb
sbb
pop
push
sub
jae
in
aam
inc
or
fiadds
loopne
and
fld1
mov
inc
dec
sub
mov
push
jp
push
mov
mov
xor
fs
sbb
jo
push
ret
cmp
and
cmp
repnz
push
fiaddl
mov
lea
repnz
mov
sti
push
test
xor
jg
add
xor
fsubrl
into
in
pop
dec
out
inc
insl
pop
lea
nop
into
jnp
pop
fnsave
lods
scas
mov
mov
sbb
pop
rep
sbb
sahf
jbe
faddl
jo
jo
mov
jle
cmp
mov
and
inc
ds
xor
push
push
int3
jmp
ret
imul
mov
mov
ja
test
add
and
scas
testl
out
insb
movsl
enter
mov
mov
jle
push
fwait
xrstors
out
fadds
dec
aad
pop
sub
iret
stos
stos
mov
shll
fisttpl
pextrw
fwait
xchg
pop
xor
ds
lock
cmp
cmpsl
jle
leave
xchg
dec
ljmp
int3
or
push
mov
insb
es
mov
push
or
lcall
int
imul
and
lods
fsubl
cld
in
cltd
jge
jbe
mov
mov
test
jge
or
inc
push
popf
sahf
movsb
jnp
add
aaa
cwtl
fbstp
dec
enter
mov
into
dec
enter
xor
cmp
sbb
xor
stos
sbb
int3
mov
xchg
pop
into
inc
sbb
push
xor
mov
inc
call
jge
mov
pop
xor
divl
lea
mov
cld
push
jne
xchg
jmp
add
jg
cli
fmuls
lret
xchg
ljmp
fucomp
stos
insb
xchg
ds
mov
repnz
or
cmp
cmp
addr16
mov
call
mov
iret
cmpsl
gs
jae
cld
dec
push
inc
and
xorb
lcall
fisttpll
inc
add
cs
sahf
pop
or
sbb
fucomi
popaw
aam
pop
fbld
je
pop
sub
loope
fdiv
mov
lahf
out
dec
loop
cmpl
insl
das
repnz
or
pushf
xor
aaa
push
icebp
adc
adc
rol
mov
mov
cs
mov
jp
mov
stos
jp
ficompl
inc
movsb
lret
lret
cltd
and
in
jne
jns
sbb
sbb
mov
cld
jecxz
fisubs
inc
push
jae
xchg
sub
dec
mov
decb
push
add
pop
loop
mov
mov
mov
fldcw
popa
jns
fbstp
xor
in
js
or
stos
push
or
fisubrs
push
mov
nop
xchg
push
pusha
js
add
ss
mov
pusha
mov
xchg
dec
cld
in
push
adc
scas
xor
stc
lods
cmpsl
mov
fistpll
daa
fs
imul
fiadds
xor
out
cltd
push
jp
loop
cs
cmp
test
leave
test
xorl
addr16
push
push
add
mov
xchg
sbb
ffreep
ja
stc
adc
inc
xlat
mov
add
repz
push
mov
lods
dec
fcomps
cs
cmp
sahf
clc
xor
das
cmp
push
lods
mov
outsb
out
and
or
ds
fldl
pop
dec
in
lea
lock
into
cmp
stc
test
jg
mov
cli
xchg
push
and
mov
ja
lret
cmp
int
dec
es
sub
test
popl
incl
pushf
inc
mov
add
push
inc
cli
xlat
sub
cli
pushf
mov
bound
das
adc
stc
jbe
ljmp
mov
cmp
pusha
and
adc
add
jne
out
lcall
iret
xchg
and
inc
mov
test
stos
shlb
lods
inc
cli
bound
adc
sbb
arpl
out
sahf
jb
sbb
inc
js
pop
outsl
in
stc
fidivl
psubsb
pushf
mov
cmp
add
leave
dec
and
or
sub
popf
pop
push
sbb
sub
dec
sub
jg
inc
mov
in
fnstcw
or
jg
daa
and
xchg
es
fstpt
in
outsl
xor
cltd
fnstsw
ss
rcl
loop
roll
dec
dec
out
mov
push
sub
jo
loopne
mov
push
inc
int
xor
bound
adc
mov
xorb
cmp
sub
sub
adc
or
sub
xor
mov
fiaddl
mov
dec
xchg
or
jae
popf
insl
ss
and
insl
add
mov
lret
mov
jo
insb
jle
inc
sub
push
pop
inc
mov
jb
mov
stos
loop
shrb
in
xchg
cltd
int
and
stc
cmp
xlat
xor
push
jecxz
ficompl
dec
pop
push
or
std
shrl
cmp
cmp
call
add
cmp
lds
in
notl
mov
in
int3
mov
mov
jg
pop
adc
repnz
aaa
xchg
imul
lea
jbe,pn
xchg
sahf
adc
xchg
inc
vpcmpgtb
xchg
cwtl
jae
push
xchg
or
push
sbb
in
mov
roll
dec
outsl
js
pop
icebp
gs
jge
push
lahf
xor
int
xchg
lods
jbe
aam
pop
sti
fildl
pop
imul
aad
mov
or
adc
in
fstl
test
mov
push
pop
xor
mov
sub
addl
sbb
xor
mov
mov
mov
into
sbb
mov
cmpb
std
dec
cmpb
fimuls
faddl
xchg
jp
dec
fsts
jno
testb
sbb
mov
push
sub
iret
lods
or
imul
sbb
subb
cmp
add
mov
xor
cmp
or
mov
rol
push
or
cli
lds
or
push
inc
jb
mov
or
out
mov
mov
or
pusha
mov
adc
inc
loope
loopne,pt
and
fs
pop
xlat
mov
xor
add
mov
mov
push
push
mov
cmp
adc
lret
shlb
mov
out
sbb
and
lahf
js
xlat
ror
push
int
push
pushf
mov
or
mov
fwait
lret
leave
cmpsb
sbb
push
mov
mov
sub
jns
mov
shrd
sti
loope
popa
adc
ja
cmpsb
sbb
mov
xor
je
fs
aad
mov
out
xor
push
mov
xor
rep
imul
add
les
or
mov
mov
hlt
ljmp
jp
jne
sub
pop
scas
dec
ja
mov
pop
out
mov
scas
mov
jbe
pop
rcll
mov
pop
out
fwait
and
jge
mov
sub
rcll
subb
sbb
adc
cmp
mov
adc
ret
mov
iret
imul
out
mov
xor
test
imul
cld
mov
cli
std
dec
imul
push
mov
in
rcr
inc
mov
bound
imul
xchg
add
addr16
adc
out
pop
push
mov
js
pop
shrb
rcrl
loope
or
rclb
cs
outsb
dec
ds
into
cld
or
push
int
call
inc
and
mov
xchg
pusha
fwait
mov
dec
stos
out
movsl
jg
in
lods
out
mov
xchg
shll
cwtl
mov
dec
pop
pop
mov
add
fstp
sbbb
loopne
sub
and
pop
or
mov
dec
in
cld
sbbl
cmpsl
in
push
dec
mov
ja
pop
inc
and
test
push
mov
push
bound
out
fstps
sti
stc
push
fidivs
mov
pushf
in
and
dec
add
mov
mov
xchg
int
test
loop
sub
sbb
and
pop
dec
mov
out
incl
rcl
iret
pop
rcr
outsb
pop
sahf
mov
dec
popa
nop
push
mov
nop
or
push
cld
mov
jecxz
out
pop
and
mov
jl
es
mov
ret
dec
xor
jecxz
pushf
xchg
ss
dec
dec
lahf
sub
cld
mov
outsb
ss
movsl
jbe
adc
lret
lods
or
mov
icebp
into
or
lahf
dec
jge
mov
sub
leave
mov
add
xchg
pop
and
or
ret
jp
lods
mulb
adc
daa
sbb
jmp
pop
mov
push
push
sub
dec
mov
lds
idivb
mov
cmp
jl
stc
jb
dec
scas
outsl
mov
rclb
push
dec
xor
push
push
push
and
mov
mov
push
cwtl
roll
stos
jg
subb
adc
pusha
into
cltd
adc
arpl
repz
mov
fstl
lds
mov
sbb
js
pushf
jae
sar
in
fwait
out
fsubs
out
or
xchg
mov
roll
stos
mov
sbb
aas
shrb
ret
mov
test
test
sub
xchg
div
cmpsb
pop
dec
stc
ljmp
or
cmc
enter
mov
adc
aam
jne
cmpsb
jp
insl
adcl
in
mov
jmp
fsubs
adc
xchg
xor
and
sbb
dec
xchg
mov
testl
mov
xlat
lret
cmp
shll
ficoms
and
sub
test
sbbl
cmp
pop
push
and
jns
stc
scas
mov
adc
lock
das
arpl
sub
bound
sbb
push
push
or
adc
aas
mov
andb
xor
xchg
inc
js
scas
xlat
cld
mov
sbb
push
pop
scas
mov
sub
dec
cld
sub
cmpb
pop
pop
add
pop
xchg
je
inc
data16
pushf
iret
adc
dec
in
xchg
sbb
test
and
xchg
or
negl
mov
cli
insb
frstor
int3
int3
sub
enter
ss
mov
leave
inc
mov
inc
push
lods
add
jbe
or
clc
rorl
jle
test
in
addb
xchg
gs
cltd
cltd
jae
add
push
dec
gs
sarb
outsb
mov
sbb
test
sbb
movsb
ljmp
mov
das
inc
pop
jge
stc
mov
adc
sbb
stos
pop
lds
fadd
cmpsl
sub
ljmp
rclb
dec
test
repz
rcrb
inc
mov
aas
and
movsb
ljmp
mov
filds
lret
mov
es
adc
sub
mov
or
xchg
mov
lock
pop
sbb
iret
inc
mov
or
or
xchg
mov
aad
sahf
mov
and
adc
test
cli
and
xchg
mov
pop
mov
outsl
ret
iret
ret
push
jne
push
mov
fmuls
push
pop
mov
inc
jnp
mov
arpl
inc
cmp
lret
xor
push
pop
scas
jo
cltd
xchg
cmp
add
or
dec
movb
pop
pop
dec
addb
jae
cmpl
aas
stos
cmp
or
lcall
dec
xchg
inc
push
push
adc
and
cmp
mov
fsts
jo
add
in
lcall
mov
xchg
ja
xchg
adc
test
inc
fcmovne
cmpsl
push
cmp
icebp
mov
int3
adc
push
cmp
mov
cmp
inc
aaa
lea
add
mov
sub
push
movsb
or
imul
lcall
movsl
lret
sub
mov
mov
xchg
jne
call
mov
sahf
pushf
mov
test
jno
dec
mov
mov
in
cmpsl
xlat
mov
insb
mov
and
aad
rep
jne
xchg
leave
lock
push
in
test
mov
and
pop
imul
cld
inc
cltd
cli
mov
adc
jmp
jecxz
inc
mov
popa
mov
mov
in
push
jno
stos
pop
sbb
xor
loope
imul
mov
mov
daa
aaa
jno
jle,pn
mov
sbb
je
inc
sbb
gs
fmul
loop
adc
scas
jae
shrb
dec
seto
mov
movb
jo
mov
jmp
aas
or
xchg
cmp
mov
mov
push
mov
jl
daa
ja
subb
lock
sub
mov
or
lods
hlt
sbb
call
pusha
mov
and
movsl
aaa
pop
xchg
mov
jge
cs
and
jno
push
gs
in
mov
loope
in
cli
mov
xchg
mov
popa
repnz
jae
decb
fs
dec
arpl
mov
adc
daa
xchg
mov
mov
mov
cwtl
jmp
jp
fiadds
lock
mov
add
data16
mov
imul
std
mov
sub
je
imul
jecxz
xorb
inc
ret
vmread
dec
adc
mov
adc
int
es
aam
mov
cmp
sbb
and
mov
mov
pop
neg
cld
lods
jmp
push
je
push
out
push
inc
inc
inc
repnz
push
out
inc
test
cmp
push
xor
iret
andb
cmp
data16
je
clc
scas
ret
into
pop
cmp
jns
and
xchg
cltd
pusha
push
cmp
fmuls
sarl
mov
xor
out
and
mov
xchg
jecxz
mov
sbb
lret
jae
flds
mov
mov
mov
push
push
dec
fisttpl
jmp
shrl
loopne
pop
push
out
mov
test
in
cmp
jmp
shrb
fcom
and
or
mov
sub
push
lahf
pop
mov
out
push
inc
dec
dec
fistpll
nop
cmp
push
cmp
mov
test
or
add
jae
popf
cwtl
ud0
sub
lahf
les
js
in
xchg
cmp
cmp
jp
jmp
mov
cmp
cmp
pop
movsb
push
ds
ja
mov
popa
imul
cmp
xchg
mov
clc
pop
rcrl
sbb
mov
fs
imul
or
mov
ret
hlt
int
jne
inc
pop
popa
imul
imull
into
jmp
movsb
pop
pop
inc
sbb
and
lahf
int3
cltd
mov
repnz
insb
out
les
cltd
aas
lods
repnz
xchg
push
clc
xchg
jg
push
mov
in
xor
stc
shl
mov
fdivr
xor
daa
jb
int3
das
in
push
in
out
aas
ret
push
in
sahf
or
sub
movb
in
adc
fwait
call
mov
jb
mov
inc
lret
push
inc
std
pop
and
in
and
into
xor
or
out
out
or
mov
cltd
mov
popa
sarb
jbe
cmp
sub
jb
sti
inc
inc
xor
loop
aam
aam
scas
jmp
pop
inc
lret
jle
insb
xchg
sbb
sahf
ret
aam
add
mov
cmpsl
in
mov
ret
jle
sbb
mov
add
jmp
into
repnz
pop
negb
out
sub
dec
mov
test
pop
jmp
dec
roll
out
loopne
movsb
xchg
scas
push
subl
xchg
hlt
in
mov
mov
cmc
or
cwtl
fstpl
sarb
js
xchg
push
xchg
js
lret
jp
lahf
mov
dec
int
popa
out
jecxz
sbb
lods
int3
jecxz
shl
push
mov
stos
add
rorb
push
lea
movsb
sbb
xor
sbb
call
ds
dec
aad
mov
pop
inc
mov
cmpsb
insb
inc
pop
test
sub
loopne
xchg
xchg
enter
cmpsl
mov
or
mov
pop
clc
jnp
addr16
mov
sub
jnp
in
mov
jne
and
mov
cmp
dec
mov
jg
mov
shlb
out
aaa
sarl
sbb
mov
js
sub
push
scas
inc
cmp
popa
cmp
adc
pop
dec
and
mov
mov
sub
push
std
je
jne
and
pop
mov
xchg
and
sub
out
cmpl
fcmovu
cli
inc
pop
cs
adc
and
aad
add
jb
xchg
mov
mov
add
loop
sbb
add
adc
es
mov
mov
mov
test
push
lds
jbe
mov
cmpsl
mov
pop
inc
int
jp
movsl
pop
test
shl
mov
clc
fucomp
and
mov
or
or
pop
dec
subb
mov
test
mov
loopne
jecxz
cmp
or
scas
mov
mov
push
push
mov
std
scas
inc
and
and
ss
clc
cmp
dec
xor
jae
push
cmpsb
ja
enter
cmc
mov
movsb
test
push
in
mov
and
push
pop
ljmp
jo
inc
or
sub
cld
ret
xor
and
jbe
mov
es
lret
fwait
ss
lret
pop
stos
xchg
jge
cld
lods
sbb
into
jge
lock
ffreep
ljmp
loopne
cmp
xchg
mov
popa
fidivrs
iret
mov
popf
dec
in
add
jp
clc
icebp
pop
jae
lock
movsl
xchg
inc
jge
popl
pop
out
ds
test
dec
adc
cld
into
icebp
out
dec
gs
jb
cli
sbb
pop
notb
cmp
bound
inc
aaa
mov
sti
jo,pt
sub
xchg
mov
enter
push
stos
xchg
add
inc
jecxz
data16
ror
cmp
outsl
jne
pop
jbe
jns
pop
sub
fsubs
pushf
out
in
stos
mov
sub
out
sub
icebp
fidivrs
pusha
mov
ss
rclb
repz
adc
cmp
xchg
add
fcos
adc
sahf
in
sub
mov
cmp
int3
or
imul
addr16
jmp
shl
mov
sub
arpl
adc
xchg
add
loopne
cmc
inc
push
bound
pop
fiadds
adc
loope
cmp
xchg
stos
int
scas
xchg
xor
pop
sub
cld
stos
into
aas
add
les
mov
pop
ds
jmp
xchg
pop
ja
or
jns
mov
jae
fisttps
mov
aas
or
std
jg
dec
sub
inc
push
in
pop
add
in
int3
cmp
or
call
lret
mov
or
inc
jg
push
cmp
xchg
mov
xchg
scas
pop
cmp
repnz
pop
mov
jmp
push
push
test
daa
push
cmc
jmp
aaa
lock
ret
pop
insb
dec
pmulhuw
outsb
push
sbb
lock
cmc
mov
jmp
cmpsb
adc
mov
and
leave
movl
jnp
je
jecxz
mov
call
pop
sub
pop
sub
out
mov
push
loopne
daa
inc
stos
faddp
pop
xchg
xchg
dec
movsb
push
sub
push
frstor
pushf
aaa
pop
lcall
outsl
cmpsl
orl
or
gs
sub
cli
xchg
mov
mov
je
je
mov
push
insb
sbb
cmp
mov
cs
sbb
and
lods
ret
sti
fwait
pop
ss
jae
or
mov
pop
outsb
jp
into
ret
cmp
scas
je
adc
shr
mov
test
pop
jbe
dec
fmull
loop
fdivrl
xchg
dec
jne
std
test
pop
dec
add
sub
push
dec
mov
jge
push
outsl
out
xchg
in
loop
inc
lock
and
mull
aam
test
sti
jbe
jnp
pop
rcrb
xor
jp
cmp
mov
jg
sarb
test
mov
push
sub
fsts
idivl
mov
push
push
pop
sbb
sub
popf
stos
lret
or
adc
push
jne
push
pop
int3
test
pop
push
mov
out
andb
jmp
in
mov
in
fnstcw
inc
mov
rorb
pop
popf
mov
lods
fsubrs
cmp
enter
mov
cmc
add
or
sti
test
subb
fwait
into
leave
aaa
sub
loope
notb
movsl
sub
ret
shrb
adc
cltd
and
add
lods
imul
jnp
es
popf
pop
xchg
mov
cmp
push
xor
pushf
push
sub
stos
arpl
mov
cvtpi2ps
mov
sbb
push
push
shll
leave
popf
xor
test
xor
shlb
aas
arpl
jbe
ret
daa
jo
mov
xor
test
mov
out
xor
push
rclb
in
mov
les
mov
addw
xchg
movl
and
pop
dec
aam
in
js
arpl
enter
popa
fwait
add
pop
push
test
and
aam
mov
dec
cmpsb
adcb
and
fdivl
int
popf
push
mov
pop
jl
fdivrs
ljmp
outsl
and
jno
push
stc
sub
pop
repnz
dec
lds
xchg
lret
loop
pop
pop
pop
jo
lock
xchg
push
or
es
mov
cmp
cs
xor
daa
lods
shr
or
cmp
mov
pop
jo
cmpsl
xor
jnp
out
test
aam
arpl
mov
lods
inc
ret
pop
aas
add
push
mov
std
mov
mov
mov
pop
out
add
dec
out
lods
fdivr
sub
push
jns
bound
xchg
mov
pop
dec
add
sbb
mov
loopne
or
pop
movsb
cltd
push
xchg
push
jp
cld
sub
or
push
add
adc
movsl
mov
xchg
xchg
jo
cmc
aas
ss
dec
cmp
inc
mov
xor
js
rcrl
sti
or
push
and
dec
cmpsl
daa
mov
cs
stc
mov
and
jnp
ljmp
int
add
sbb
and
push
iret
pop
popf
std
jbe
in
fldenv
int3
sahf
pop
std
mov
outsb
aaa
clc
jae
push
into
sbb
jne
sub
fmuls
sub
stos
aaa
xor
jl
and
push
cmovl
shrl
pop
mov
pop
pushf
mov
jp
lea
cmp
int3
mov
movsb
jg
jns
push
pop
inc
inc
adc
push
jecxz
xchg
fcoms
sbb
sarb
xchg
mov
imull
xchg
mov
outsb
dec
je
out
mov
mov
mov
fldenv
cmp
inc
xchg
or
js
sub
pusha
leave
add
push
mov
xchg
push
loope
xor
fcmovbe
dec
icebp
ss
pop
lods
jne
sbb
adc
aam
je
cwtl
orl
leave
and
adc
sbb
out
std
divl
add
xchg
jecxz
dec
push
stc
jnp
shlb
inc
jne
inc
lds
inc
testb
xchg
jns,pt
je
iret
pop
push
sti
shrb
adc
cmp
mov
data16
xchg
mov
cmp
adc
dec
arpl
push
mov
lea
xchg
dec
mov
cwtl
frstor
sarb
jg
fsubrs
xor
push
inc
out
pop
adc
out
xor
pop
shll
mov
cmc
pop
call
rcll
ds
test
jle
jp
mov
out
jmp
in
or
rep
mov
xchg
mov
or
aaa
stos
aam
fwait
mov
ror
aaa
je
cltd
aaa
je
mov
data16
dec
mov
jp
jb
add
pop
sub
fisubl
es
shl
pop
sbb
shl
mov
xchg
sbb
cmp
pop
ljmp
ficoml
js
fildll
pop
mov
rol
orb
or
stos
stos
xlat
add
fidivrl
dec
idivb
push
call
jg
mov
xor
add
aaa
fmuls
addr16
icebp
xor
jg
test
in
mov
shrl
push
lcall
cld
push
shll
pop
lock
popf
add
xorl
stc
out
jbe
mov
movsl
sti
sbb
fldt
jae
push
pop
xorl
iret
or
pop
xor
inc
add
mov
lock
add
mov
sub
aad
or
push
lock
mov
sti
jg
insb
push
and
ret
cmpsb
xor
dec
aaa
sbb
cltd
js
fcomi
into
cmp
jno
push
fidivrs
mov
or
idivb
sbb
pushf
ret
xor
cltd
jmp
cmp
mov
and
push
test
or
popa
pop
in
jge
jbe
aaa
mov
pop
ja
lcall
dec
mov
in
xchg
jbe
xor
into
rorl
dec
es
jecxz
in
inc
popf
xchg
subb
and
pop
mov
inc
daa
jbe
jg
mov
int3
dec
sbb
mov
iret
pop
dec
in
add
insl
das
and
xchg
aas
jg
pop
cmp
ds
and
leave
mov
dec
aaa
push
mov
sbb
in
clc
xchg
daa
cmp
faddp
cmpsl
outsb
dec
stos
inc
adc
xor
mov
xchg
pop
xor
fisubs
ret
push
sbb
or
stos
inc
aaa
lods
fimuls
fisttps
adc
mov
sbb
add
fiadds
fs
fidivs
xchg
inc
in
add
mov
repz
outsl
inc
mulb
mov
popf
or
push
fidivl
sarl
test
mov
fisttpl
pop
mov
push
into
jp
push
ljmp
pop
fs
imul
mov
lods
mov
inc
sbb
and
xlat
jns
add
jo
cmp
arpl
push
outsl
mov
lret
das
shrl
and
fstpt
orl
mov
mov
lcall
adc
and
inc
rolb
cmp
aas
test
dec
jnp
push
ljmp
je
push
xor
dec
cmp
lret
push
or
arpl
dec
adc
and
pop
cwtl
inc
shl
dec
xlat
loopne
inc
dec
and
icebp
xor
push
inc
insb
iret
push
ds
mov
into
test
and
cmpsl
mov
std
shr
cltd
pop
imul
add
mov
mov
pop
lret
sbb
sub
sbb
clc
dec
mov
movsb
push
mov
push
outsl
arpl
sbb
out
cmp
sub
add
xor
push
sbb
ja
test
lea
mov
or
cwtl
insb
repnz
push
movsl
sub
pusha
xor
sbb
mov
nop
aam
jg
xchg
movsl
mov
aam
pop
xor
into
sarb
addr16
fstpl
out
jnp
mov
and
xchg
dec
fcomps
jno
mov
inc
jae
popf
jae
push
xchg
into
mov
pop
call
mov
and
push
sub
sbb
int
dec
push
mov
or
movsl
popa
dec
push
or
or
inc
sub
gs
shlb
mov
cmp
xchg
fnstsw
mov
xchg
cmc
add
sub
or
and
lock
cmp
mov
out
lods
add
jge
and
mov
add
or
hlt
cli
pop
push
aaa
sbb
ljmp
leave
rorb
lret
leave
pop
jmp
mov
sahf
pop
scas
arpl
or
ds
aam
gs
mov
lods
into
xor
les
sub
ss
jle
and
pop
lcall
rorb
decl
mov
push
out
cli
repz
push
sub
or
sub
inc
and
mov
push
and
xchg
push
sbb
nop
mov
pop
shl
popa
or
inc
sub
jnp
jg
jmp
test
or
outsb
push
movsb
les
or
icebp
or
pusha
scas
mov
outsb
sub
mov
mov
pop
inc
nop
lods
loopne
sub
cmp
cmpb
out
or
arpl
sub
xchg
add
mov
shlb
xlat
lret
fcmovbe
fmull
call
pop
es
cmp
movsb
xor
mov
dec
rcll
xchg
or
dec
push
dec
jne
mov
or
jno
jne
jecxz
inc
in
mov
and
mov
jns
fistpl
rcrb
push
in
mul
inc
push
adc
push
insb
stc
fisttps
add
adc
cmp
jle
jecxz
jg
xchg
addr16
jle
pop
pop
inc
insl
add
scas
pop
sub
jae
or
mov
inc
mov
xchg
or
mov
and
push
lea
out
out
cli
jbe
lea
push
ja
aam
jp
mov
call
xchg
inc
mov
sub
into
inc
push
push
and
adc
cltd
sbb
mov
fmull
repz
mov
pop
fidivl
pusha
cmp
test
dec
icebp
int3
test
pop
adc
rorl
cwtl
adc
divb
push
nop
pop
lcall
and
cli
push
mov
shlb
jb
jnp
shlb
mov
push
inc
ljmp
mov
push
and
push
mov
inc
push
test
mov
nop
push
cmp
mov
jo
in
rorb
fwait
mov
adc
out
movb
adc
lret
insl
xchg
push
aaa
ljmp
cli
leave
imulb
push
les
movsb
stc
xchg
sub
fstl
push
sbb
fs
dec
push
or
call
jo
std
shll
cmc
jg
mov
jo
or
mov
das
or
sub
test
push
ja
push
out
push
push
push
ss
push
inc
dec
xchg
out
imul
and
cld
mov
cmp
icebp
add
fisttps
stos
mov
mov
xor
dec
jg
and
les
mov
loopne
dec
out
push
test
xchg
je
jmp
faddl
ficomps
cmpsb
mov
arpl
push
testl
fs
pushf
jecxz
lret
pushf
rolb
in
sarb
mov
add
stos
insb
cmpsl
cs
addl
adc
cmc
addr16
rorb
jecxz
adcb
not
pop
jl
and
int
outsl
dec
sbb
pop
sub
pop
test
mov
mov
cmpl
addr16
lcall
sub
stos
cmp
pop
or
xchg
fnstcw
cli
aas
dec
in
xchg
in
jne
dec
sub
pop
cmp
pop
pop
lret
stos
aaa
cmp
xchg
out
dec
push
out
in
or
and
inc
mov
dec
sbb
jne
mov
add
dec
and
movsb
pop
or
pop
call
xchg
jle
add
int3
test
hlt
dec
add
sbb
int
add
leave
sar
mov
lods
in
sbb
pop
adc
sbb
ljmp
mov
mov
xchg
xor
fldcw
cmp
lahf
ret
dec
add
push
aad
lret
das
arpl
and
push
movsb
cli
ja
cmp
inc
mov
stc
fs
lock
pop
sbb
imulb
xchg
pop
js
push
sar
or
fsubr
movsl
inc
jp
sub
push
xor
push
outsl
fadds
lods
mov
and
jp
shr
add
test
into
or
arpl
notl
inc
or
std
addr16
lods
xor
das
fstl
adc
inc
push
inc
and
and
cs
aaa
jns
cmc
cmp
ret
fcompl
sbb
lods
arpl
push
shll
xor
std
xchg
or
cmc
movsl
stc
iret
add
push
and
ja
andl
fiadds
dec
stos
add
xchg
jmp
mov
inc
ljmp
and
xchg
cld
test
and
dec
push
mov
adc
add
jne
and
inc
adc
ds
push
xchg
cmpsl
mov
sub
test
sbb
xchg
inc
std
jl
test
mov
rorl
jg
cmp
into
aaa
leave
mov
cmp
js
cli
addr16
rolb
dec
out
push
fsubrl
popf
jb
pusha
ja
ret
jp
and
push
dec
fs
sub
data16
mov
adcb
leave
rcrb
das
test
mov
daa
std
stc
out
mov
inc
cs
mov
into
pop
jb
lea
push
clc
mov
aaa
jg
jns
je
lock
sbb
lea
inc
add
push
cmpsb
icebp
push
jle
lds
lock
cltd
dec
mov
and
xchg
push
arpl
cmp
xchg
js
xchg
stos
cmp
inc
sbb
fwait
xchg
mov
cmpb
into
out
pop
mov
xor
hlt
inc
jo
mov
sbb
jnp
outsb
dec
int3
lea
das
mov
lret
std
inc
push
push
fstpl
mov
outsb
fbstp
pop
inc
add
leave
fcmovbe
fisttpl
xchg
mov
sub
fisubrs
push
fsubl
enter
shll
mov
js
jmp
ret
mov
pop
add
test
push
mov
out
adc
add
fcmovu
cmp
xchg
sbb
push
cmpsl
jno
or
in
stos
sarl
les
jmp
mov
faddl
xor
mov
dec
mov
fmul
inc
or
sti
add
sub
add
sub
mov
test
bound
push
xor
pop
out
sub
sbb
std
add
stc
popf
add
out
jae
jge
cmp
mov
jecxz
ljmp
jae
cmp
jae
adc
lahf
orl
repnz
adc
lcall
jecxz
movsb
aas
aaa
inc
mov
push
aad
push
push
add
dec
sbb
adc
stos
xor
bound
push
and
ljmp
jnp
and
cmp
aaa
arpl
mov
inc
mov
jae,pt
icebp
ljmp
push
push
std
pop
ret
mov
xlat
loope
cmp
out
mov
and
jmp
sub
sub
jb
dec
cld
sahf
mov
mov
push
mov
sub
outsb
adc
inc
pop
in
fnsave
div
mov
pop
ss
pop
sbb
pushf
loop
les
push
cmpsl
repz
fcoml
ror
out
mov
sbb
push
xor
int3
mov
lea
xor
xor
or
sub
mov
movsl
aad
popf
pop
sub
cmp
js
adc
insl
test
andl
lcall
adc
scas
adc
test
test
adc
jmp
imul
jmp
fdivs
adc
add
iret
jbe
imul
out
rorb
loop
ficoms
mov
pop
xchg
adc
sbb
pop
xchg
adc
dec
ss
mov
pcmpeqd
lea
cmp
jle
arpl
jbe
fdivl
jecxz
push
or
in
mov
cmpsb
pop
mov
sub
enter
add
jg
adc
inc
ss
or
arpl
jo
mov
fisubs
mov
or
popf
dec
sbb
ljmp
pop
lret
dec
iret
out
pop
jne
icebp
jbe
cmp
xor
test
into
inc
cmc
sbb
mov
lods
add
shl
push
mov
fsubl
shl
hlt
and
rorb
sbb
movsb
in
adc
mov
pop
lea
cltd
sbb
xchg
jnp
inc
scas
pop
movsb
mov
insl
je
sub
fidivrl
sub
addr16
js
push
sahf
and
insb
and
loop,pn
or
and
ret
push
aas
in
scas
sbb
and
pop
daa
pop
jge
enter
shrb
int3
mov
inc
data16
jae
add
loop
enter
and
pushf
ja
sarb
out
imul
and
inc
addr16
ljmp
ljmp
sbb
pop
xlat
inc
roll
inc
jo
add
ds
cmc
sub
adc
shlb
out
dec
mov
cli
pop
and
or
lods
hlt
scas
sbb
dec
sub
addr16
push
repnz
xor
aad
js
sbb
pop
xor
xchg
stos
lret
daa
mov
lock
and
leave
jnp
pop
sub
sbb
fnsave
xlat
add
notb
xor
mov
aaa
in
fildl
mov
pop
mov
and
or
shr
fisubrs
inc
outsl
lret
push
inc
mov
adc
mov
dec
sbb
ds
movlps
cli
enter
inc
jp
jle
and
add
pusha
adc
es
movl
jmp
cs
inc
outsb
cmp
stos
mov
les
orb
arpl
jae
jle
xor
mov
and
jns
lahf
insb
inc
xchg
ret
mov
ret
mov
xchg
push
push
nop
pop
decl
lret
cmpsl
mov
test
mov
mov
jo
cli
xor
loopne
sbb
fcmovbe
mov
aaa
je
push
sahf
pop
stos
pop
adc
mov
jo
add
movsb
cmpsb
das
jp
gs
mov
mov
xor
jnp
rcrb
cmp
push
ret
mov
mov
sbb
addb
pop
mov
cmpsl
lcall
out
pop
sbb
xchg
scas
xchg
call
xor
mov
jbe
push
adc
es
lods
dec
std
sub
in
inc
addl
dec
add
shlb
and
push
sub
pushf
dec
jno
nop
mov
cs
sub
movsl
ficompl
or
pop
in
jle
pop
xchg
jno
jmp
sub
enter
jmp
sar
sbb
adc
jbe
add
scas
jge
std
out
xorb
push
cmp
outsl
xchg
xchg
push
cld
add
push
mov
repnz
and
xor
add
daa
mov
xchg
fucomip
aad
mov
cs
cmp
pop
mov
loope
cmpsl
push
das
es
push
das
ret
inc
loope
je
inc
scas
cwtl
gs
push
sub
daa
jecxz
mov
xor
movsb
scas
xor
push
sbb
js
mov
sbb
or
outsb
dec
pop
sub
mov
stos
mov
insl
jo
sub
jg
fdivrs
cmc
pop
sbb
into
and
inc
xor
jp
lret
lods
or
jecxz
je
pop
mov
and
push
pop
fsubr
jl
lods
adc
mov
int
stc
sub
sbb
mov
in
aam
dec
pop
out
push
ret
mov
outsb
cltd
addr16
in
inc
pop
sbb
sbb
rclb
ljmp
loope
clc
sbb
fs
fnstsw
ja
mov
popa
mov
and
loop
add
ja
push
loopne
popa
stc
inc
mov
mov
outsb
mov
sahf
xor
icebp
ja
mov
sahf
mov
insl
movsb
mov
mov
pushf
outsl
xor
mov
mov
ljmp
xorl
add
jne
adc
into
pop
sbb
xlat
dec
fstps
add
inc
adc
xchg
push
rcr
cli
adc
xchg
mov
imul
outsl
mov
sahf
push
stc
add
repz
dec
les
popf
icebp
push
imul
lcall
fldl
add
fnsave
sub
mov
outsb
cmpl
jl
inc
inc
mov
push
add
mov
ja
xchg
sub
inc
mov
mov
jno
xor
jl
imul
adc
pushf
xchg
push
dec
adc
mov
or
les
inc
push
mov
cmp
sub
mov
push
xchg
int
fildll
push
pop
test
push
in
jecxz
add
out
mov
std
sti
mov
inc
mov
push
insl
push
rcr
loopne
stos
xchg
mov
out
lahf
or
jae
xor
in
or
std
loopne
dec
jo
fxch
popf
push
out
int
dec
or
loopne
or
cmc
inc
mov
ja
inc
in
int3
adc
mov
pop
orb
jge
lcall
cli
andb
cmp
iret
mov
pop
loope
mov
add
lods
sub
mov
mov
popa
fmull
push
lea
adc
stc
push
movsl
sbb
and
lahf
cmpsb
add
push
pop
mov
sub
repnz
stos
fwait
or
inc
sti
pop
cli
push
sbb
push
ret
pop
jo
xor
or
dec
lea
jnp
mov
sbb
cmp
sti
outsb
in
cli
call
hlt
movsb
das
adc
xchg
imul
inc
arpl
addl
rcrb
inc
mov
lock
jecxz
shl
sub
mov
add
ss
repnz
fwait
repnz
sbb
out
je
or
add
out
iret
sbb
adc
lea
pop
and
lds
push
adc
cmp
sbb
in
cmc
div
outsb
imul
jmp
jnp
and
dec
scas
cmp
in
insb
mov
jmp
add
ret
int
hlt
lds
jg
xchg
mov
jg
push
mov
ficomps
fiadds
jecxz
hlt
lret
and
mov
ja
mov
cmpsb
bound
icebp
sub
jg
jge
xchg
gs
sahf
push
mov
mov
cmp
ret
cmp
jp
inc
call
in
xor
fwait
test
insb
iret
jmp
jecxz
cs
repz
inc
mov
cmpsb
into
sarl
mov
pushf
scas
mov
fbld
repnz
addr16
pop
xchg
sub
push
cld
fisubrl
xor
movsl
jmp
push
jbe
adc
xchg
fisubl
ret
ds
jb
addr16
lods
jns
aad
mov
jp
icebp
xchg
jnp
mov
test
dec
push
cli
repz
mov
adc
cmp
not
mov
cmp
rorb
iret
jg
in
push
es
mov
int
push
adc
mov
cwtl
test
and
insb
jns
lret
push
inc
or
scas
xchg
insl
mov
cmp
add
dec
xchg
pop
and
sbb
and
dec
push
push
add
sub
jo
adc
adc
dec
jae
dec
leave
xchg
sbb
and
add
popa
mov
out
mov
loopne
jmp
pusha
outsb
sbb
and
int
mov
repnz
push
int3
mov
dec
pop
inc
sbb
or
movsl
outsl
fistpll
mov
sbb
mov
push
je
fcmovnbe
notb
call
in
pop
int3
rdmsr
mov
ror
mov
inc
test
xor
mov
mov
push
and
das
cmp
and
gs
and
sub
inc
xchg
pop
jbe
mov
andb
xchg
jp
mov
fisttpll
add
jmp
mov
jge
mov
sbb
xchg
movsl
scas
xor
outsl
lret
outsb
mov
inc
out
push
mov
mov
add
inc
lcall
jl
sbb
popa
imul
or
and
mov
xor
jns
sub
mov
xchg
xchg
push
mov
imul
rolb
xchg
rorb
jp
movsb
clc
adc
loopne
xchg
arpl
rorb
outsl
lahf
stc
dec
or
lds
xchg
jle
add
cmp
popf
faddl
mov
les
cmp
and
add
shr
and
xor
clc
lds
adc
arpl
in
outsb
inc
dec
sbbl
mov
lret
loop
popf
fisubrs
mov
mov
sub
lods
cmp
cld
js
mov
dec
sub
xchg
insb
pop
jmp
mov
adc
mov
jno
pop
outsb
mov
push
nop
sub
push
outsl
popf
mov
imul
je
push
jge
lret
dec
aam
es
arpl
jbe
mov
nop
xor
clc
cli
jns
or
pop
pop
mov
stos
mov
adc
pop
xchg
scas
call
repz
jmp
lods
scas
jge
or
loopne
mov
fstpl
push
shrl
mov
lea
in
inc
mov
xchg
xchg
insl
cli
fisttpll
orl
add
sub
add
and
cs
pop
cli
push
jnp
mov
xlat
ret
jbe
pop
dec
jae
inc
mov
dec
mov
jbe
jbe
push
lods
push
xchg
adc
cld
fisubrs
cld
pop
xacquire
adc
in
dec
pop
daa
sub
cmp
rclb
sub
mov
mov
mov
or
mov
lcall
sbb
pusha
in
add
hlt
imul
fcoms
xor
les
test
sub
fstpl
cs
add
and
jmp
cwtl
filds
pusha
fsubp
loope
and
mov
xor
dec
loopne
sbb
ret
xor
jnp
aam
test
xchg
adc
into
push
sbbb
cmpsl
sbb
pop
add
aam
dec
jnp
xor
in
jle
and
cld
dec
jbe
sub
lods
sub
xor
pop
add
aam
test
mov
sbbl
arpl
jecxz
repnz
icebp
cmpb
xlat
cmp
shlb
dec
or
xlat
push
div
pop
sarb
imul
lret
jmp
pop
mov
cmc
das
or
bound
adc
mov
jge
into
and
sbb
inc
ret
fwait
movsl
xchg
data16
imul
dec
jmp
add
mov
jae
addl
jmp
stos
jb
xor
fcoml
and
dec
sbb
adc
dec
mov
and
inc
jecxz
and
clc
ret
pop
sti
jb
iret
cmp
sbb
out
cmp
es
sub
cmpsl
popf
sbb
daa
jmp
pop
ror
push
jecxz
dec
andl
mov
cmc
push
cmp
xor
cmp
mov
pop
mov
jecxz
push
les
sbb
js
imul
test
mov
cwtl
inc
jge
inc
stos
rcll
pop
mov
dec
or
inc
int3
adc
nop
cwtl
jns
popf
je
cmp
daa
jb
push
testb
popf
jp
nop
sub
or
pop
aam
pop
js
dec
int3
sub
scas
cld
add
repnz
or
movsb
cmpsl
mov
lahf
pop
and
pop
pop
or
int3
shlb
mov
mov
shlb
or
inc
and
enter
pop
leave
pop
pop
cs
mov
sahf
repnz
add
cltd
cld
sbb
loopne
imul
pop
lahf
pop
sbb
cld
lret
out
das
scas
ja
in
lahf
stc
add
dec
outsb
xacquire
sbb
push
lds
and
jo
int
xor
rorb
jle
mov
push
xorb
jnp
push
fcmovnb
in
jg
outsb
fwait
mov
lahf
imul
xor
jne
stos
and
out
push
addr16
pop
pop
cmp
hlt
push
lock
dec
es
xchg
push
sbb
es
cltd
fld
icebp
xchg
ret
jmp
into
sub
ret
insl
in
cmp
imul
adc
push
fmul
or
push
adc
dec
ja
mov
jb
in
mov
dec
push
adc
ja
aas
sahf
mov
mov
jnp
xor
inc
sub
in
and
rorl
fsubrl
and
jb
adc
jge
lods
push
or
adc
insl
outsb
or
andl
pop
loope
mov
mov
push
xchg
xacquire
aam
jl
add
mov
pop
or
cltd
test
jb
mov
out
mov
push
xchg
jmp
clc
call
nop
popa
adc
add
mov
xor
adc
dec
arpl
mov
push
icebp
pushf
loopne
pop
push
xor
pushf
cmpl
and
mov
into
dec
cmpsl
xchg
inc
fs
mov
ret
aaa
out
jne
pusha
jge
jae
test
rorb
lcall
sub
cmc
les
or
arpl
mov
sub
test
movsl
es
pop
in
cli
out
out
notb
pusha
mov
lods
xchg
test
imul
les
push
arpl
mul
adc
sbb
mov
dec
ret
cld
inc
xor
xchg
push
arpl
push
add
mov
cmpsl
out
jecxz
xor
dec
clc
dec
in
cs
adc
flds
cmp
fbstp
cwtl
cmp
in
out
xchg
dec
push
cmpb
fldt
pushf
dec
fnstcw
xchg
in
not
add
xlat
cli
push
repnz
push
inc
cmp
stc
pop
adc
lret
xor
xor
mov
or
loopne
xchg
into
push
jne
mov
mulb
scas
jne
mov
cmp
fldt
clc
mov
mov
cmc
mov
push
mov
shll
mov
fnstenv
sub
sub
pop
pop
adc
xchg
adc
test
jmp
sbb
cmpsl
xchg
mov
notb
adc
outsl
cld
push
mov
and
xchg
jle
mov
adc
push
cmp
test
sbb
inc
add
das
outsb
jno
mov
mov
stos
mov
pop
aaa
xor
dec
jae
nop
sarb
mov
pop
dec
push
xchg
je
dec
orb
cmp
push
add
xlat
sbb
adc
push
sub
imul
out
inc
xor
loope
mov
pop
sbb
ljmp
add
loopne
mov
mov
fldenv
xchg
inc
repnz
ds
mov
lret
daa
movsl
int
icebp
push
int
daa
sbb
or
das
push
mov
inc
mov
pop
movsl
daa
mov
sub
les
inc
sbb
jnp
fildl
cmp
aaa
pop
icebp
shlb
add
cmpsl
jmp
mov
adc
sbb
mov
push
loopne
sbb
jg
jno
cli
popa
push
xchg
jns
stos
push
int
jns
call
mov
mov
popa
mov
out
inc
add
in
jle
push
xchg
fadds
inc
adc
push
inc
pop
dec
std
popf
jmp
js
pop
data16
test
scas
movsl
inc
push
shl
mov
xchg
push
imul
int
mov
mov
mov
cmpsb
outsl
cli
fsubl
in
or
data16
sti
dec
cmp
pop
imul
imul
add
dec
lds
sub
adc
mov
mov
inc
adc
shlb
test
rorl
jbe
cmp
mov
xchg
cwtl
pop
mov
rcll
or
adc
cmp
mov
push
push
jnp
inc
pop
xchg
xor
rolb
ja
das
outsb
frstor
sbb
stos
loope
sbb
mov
clc
in
out
loopne
rclb
adc
xor
clc
xchg
mov
push
xchg
and
cmc
add
dec
clc
jns
lods
dec
sub
shll
dec
jae
fnsave
push
outsl
xor
push
cmpsb
sbb
mov
cwtl
repnz
dec
in
xor
xchg
mov
call
ja
cmpl
inc
xor
inc
xchg
pop
sahf
xchg
mov
jmp
jecxz
pop
mov
add
repnz
xchg
inc
mov
ljmp
or
jmp
lret
push
sbb
ds
push
or
dec
shll
mov
fmul
imul
shrb
and
sub
mov
fidivrs
xchg
xorl
adc
jno,pn
subl
inc
pop
arpl
or
adc
lods
and
sbb
loopne
mov
adc
xchg
cs
fimull
cltd
rcrb
pushf
inc
stos
pop
nop
cmp
clc
pop
pop
fsubrl
pop
mov
cmp
faddp
mov
rcrb
subb
lods
xchg
fmul
mov
pop
dec
sar
pop
ds
push
sti
cmc
stc
inc
shll
adc
sbb
arpl
pop
cs
repz
test
fbstp
out
dec
jge
movsl
decb
popf
or
js
or
popf
cmpsl
mov
mov
mov
jge
pop
xor
stc
inc
enter
xor
ficomps
xchg
inc
lods
pop
xor
mov
gs
cmpsb
and
jl
jns
pop
jbe
das
mov
fcomp
call
mov
fsubrs
scas
sahf
xor
in
pop
mov
pushf
mov
xchg
adc
adc
adc
ret
cmpsl
xor
ljmp
addl
test
xchg
rolb
inc
scas
jg
daa
popa
adc
pop
sahf
dec
cwtl
dec
outsb
leave
stos
jmp
scas
outsb
pop
in
sti
call
mov
aam
jne
pop
or
test
push
vcvtpd2psx
insl
push
outsb
and
rolb
imul
xchg
inc
enter
dec
out
inc
mov
inc
mov
push
push
mov
into
jno
mov
mov
or
hlt
or
loope
xchg
or
mov
dec
addr16
sbb
and
lods
cmp
std
jp
mov
or
call
notb
jp
pop
sub
mov
sbb
add
mov
cld
mov
testl
sub
movsl
sub
jge
push
push
and
sub
sar
mov
mov
addl
pushf
hlt
add
xor
mov
inc
pop
sbb
ds
pop
aaa
lds
mov
adc
fiadds
leave
or
fwait
stos
aam
pop
pop
stos
or
in
xchg
mov
inc
push
sti
mov
sbb
or
std
fisubl
push
daa
dec
out
sub
cs
and
lds
pusha
jae
rcl
dec
mov
in
sti
scas
fwait
mov
fidivrs
pop
or
add
push
cltd
adc
sti
push
adc
fwait
pop
rolb
add
jnp
mov
out
pop
bound
daa
out
sbb
dec
fs
adc
mov
sub
repnz
jno
sbb
lea
loope
or
inc
es
pop
fstpl
loope
inc
mov
dec
shl
ret
mov
pop
dec
push
filds
sbb
xor
dec
stc
mov
add
pop
loope
xor
lods
jns
jb
sbb
std
or
out
test
jne
fsub
jo
sahf
test
add
inc
and
pop
push
ljmp
ds
jae
or
pop
andb
pop
dec
jle
xlat
pop
mov
xchg
dec
jp
ds
es
cld
dec
jb
add
jnp
add
pop
xchg
or
out
fsubl
lods
jns
add
arpl
lods
xchg
push
loop
jmp
pushf
out
dec
subl
mov
scas
sub
leave
mov
ds
push
in
stc
mov
sbb
sub
insb
stos
dec
stos
fs
test
sbb
push
mov
jg
imul
dec
shlb
shlb
pop
call
jns
inc
lds
push
outsl
inc
sub
mov
inc
sti
sub
mov
cwtl
cmpsl
lds
push
mov
adc
dec
sub
clc
mov
inc
mov
inc
test
adc
jno
inc
push
sahf
xchg
in
nop
jecxz
push
mov
xchg
ss
push
lock
jecxz
insb
pop
pop
scas
rorb
icebp
mov
mov
mov
xchg
sti
xchg
and
repnz
sahf
xor
in
or
xor
mov
xor
push
clc
cld
out
pop
or
sub
and
stc
and
imull
mov
rclb
mov
sbb
repnz
xchg
mov
mov
sub
mov
pop
adc
negb
sbb
dec
rcl
hlt
fcmovnu
lods
cmpl
std
ss
shlb
and
pop
xchg
or
or
lcall
aaa
add
pop
and
fsubrs
adc
mov
push
fwait
jmp
dec
repz
mov
jno
cmp
mov
inc
testb
movsb
out
or
jmp
mov
test
dec
mov
pusha
pusha
dec
aaa
jl
rcrl
lds
iret
bound
pop
dec
add
sbb
mov
orw
lea
andl
mov
or
movsb
dec
cmp
push
nop
xchg
ret
test
push
and
mov
sbb
mov
cwtl
pop
test
jb
and
test
sbb
out
adc
xor
jbe
xchg
xlat
push
push
jnp
sbb
hlt
pop
pop
and
inc
daa
push
xchg
cmp
je
push
and
mov
push
mov
xor
pushf
ficompl
jle
test
dec
xchg
scas
jp
aam
cmpsl
leave
aam
js
int3
les
mov
imul
ret
and
sar
and
sub
ja
repz
ret
xor
add
ss
jb
sbb
icebp
pop
cmp
in
dec
mov
dec
mov
add
das
sbb
mov
jno
and
subl
jb
popf
popa
push
daa
in
fstl
and
and
imul
sarl
inc
jne
xor
into
inc
jo
outsl
dec
xor
jo
add
xchg
sub
outsb
imull
cmc
loop
or
sarb
push
insl
jne
aam
subb
and
jle
std
cmc
in
test
push
add
sbb
cmpsb
sub
pop
test
dec
insl
jp
push
and
lods
jnp
int
jecxz
sbb
cmpsl
jb
inc
mov
andb
sub
xor
adc
jno
lcall
lret
das
add
pop
jge
scas
pop
cli
repz
adc
pop
mov
pop
adcl
pushf
dec
outsl
js
test
dec
rcrb
iret
ss
clc
mov
push
loop
xchg
adc
xchg
push
bound
mov
push
dec
filds
shufps
inc
repnz
into
sub
sahf
jl
jl
adc
mov
mov
test
std
cmp
mov
cmp
loopne
adc
pop
in
push
inc
xchg
mov
mov
cmpsb
dec
mov
pop
cmp
xchg
mov
push
and
jne
xor
fmuls
mov
dec
mov
push
mov
sbb
call
cmp
movsl
mov
add
jge
ret
inc
or
pusha
jo
insl
sets
and
fst
adc
leave
adc
bound
pop
lcall
cmp
jmp
fwait
std
dec
cwtl
push
div
rolb
je
repnz
push
or
scas
mov
jns
aas
ja
mov
outsb
add
mov
cmp
adc
push
arpl
mov
call
das
push
pop
scas
addr16
add
pop
xchg
data16
cltd
dec
aad
mov
jae
lret
hlt
cmp
pusha
imul
aaa
bound
imul
cmc
daa
test
xchg
cmp
test
lret
jl
fidivrl
enter
bswap
loopne
sub
fsubrp
in
sub
imul
pop
aam
mov
lea
and
push
mov
inc
aaa
fwait
movsl
ficompl
aam
mov
popa
je
imul
out
ret
jae
loopne
sbb
leave
aaa
pop
test
lods
ret
fsubr
sub
out
jbe
xor
int3
loopne
test
scas
or
xchg
sti
inc
sbb
push
inc
je
jp
rcr
mov
sahf
lods
push
lds
call
and
cmc
fidivl
arpl
mov
lods
or
push
lods
mov
push
negl
sbb
js
pop
test
jae
cmp
mov
add
jne
sahf
jle
jo
jne
ret
pushf
jne
inc
or
adc
adc
lea
add
jns
push
jns
sub
test
sbb
adc
rsm
mov
cmpsl
jle
lods
leave
add
enter
pop
rcrb
add
mov
pop
pop
xchg
pop
std
pop
mov
push
sub
pushf
pop
daa
aas
cmp
dec
ficomps
in
arpl
mov
dec
pop
dec
cmp
mov
insb
insb
test
lcall
xor
adc
inc
xlat
and
sub
mov
cmp
sub
xor
js
push
mov
dec
fisubrs
imul
jmp
cli
sahf
sarb
inc
fsubs
mov
insb
xchg
outsl
fimuls
adc
call
cmp
mov
mov
push
mulb
gs
cs
int3
or
fldcw
arpl
sub
adc
fdivrl
mov
jge
dec
dec
jl
in
iret
js
mov
inc
clc
push
and
push
flds
adc
jb
aad
into
cli
mov
mov
scas
arpl
add
push
sub
test
push
pop
arpl
sbb
push
mov
adc
pop
es
pop
jp
cld
stos
int
jmp
insb
pop
or
mov
imul
adc
or
adc
es
out
ljmp
loope
test
fsubrp
cmp
jbe
out
push
pop
inc
int
mov
push
inc
sbb
pop
ret
stc
in
or
test
sbb
loop
cmp
and
cltd
out
in
push
or
sbb
jbe
sbb
sub
mov
int3
push
xor
stc
lea
loop
push
roll
pop
cmp
into
addr16
xchg
sbb
dec
xorl
mov
cmpsb
ss
fwait
or
call
adc
mov
jge
outsl
inc
in
cmpsl
lea
outsb
das
adc
mov
pop
sbb
js
cmc
push
cmp
mov
gs
xor
jle
movsb
test
rorb
ja
add
pop
inc
inc
mov
xorb
in
sbb
cmpsb
and
mov
sub
add
and
outsl
and
sub
adc
pop
lods
dec
inc
fisubrs
lcall
sbb
sbb
loope
inc
adc
mov
sub
and
and
in
jmp
in
adc
stc
mov
cmpsb
neg
pop
sbb
stc
sbb
repz
aaa
jl
clc
lods
push
cwtl
add
inc
daa
lret
mull
mov
xchg
inc
shrb
mov
pop
jge
sub
or
push
out
in
jne
pusha
stc
bound
shrb
inc
in
inc
stos
push
aas
cmp
ss
imul
pop
xchg
fldcw
mov
ret
outsb
lds
les
out
and
or
lret
push
pop
ss
add
cli
mov
sub
lods
xorb
repnz
stos
fnstenv
xor
jge
scas
pop
cli
scas
ret
xor
in
mov
cmp
push
mov
pop
mov
pop
add
jbe
mov
xlat
std
mov
dec
sub
fadds
and
dec
adc
jp
das
xor
fcmovne
std
test
ficompl
fsubl
mov
aas
flds
pop
inc
pop
nop
cmp
cwtl
call
je
lahf
rorb
add
out
cmp
sbb
sbb
pushw
ds
loop
inc
mov
mov
sub
repnz
xor
fildl
insb
in
push
cmp
jnp
adc
rcrb
xchg
push
push
xchg
jne
lds
xchg
movb
addl
mov
inc
mov
mov
fmuls
mov
je
mov
mov
imul
scas
shlb
popa
subl
mov
jae
repnz
js
push
and
and
add
jp
xchg
and
cmpsl
adc
sub
xchg
int3
jns
cmp
sub
inc
or
call
jecxz
notl
les
shll
jmp
pop
cmp
sbb
lcall
mov
xchg
in
jp
fldt
push
mov
mov
repz
fwait
jp
cs
add
popa
imul
out
iret
jp
xchg
push
testb
jge
jmp
mov
push
adc
jno
mov
pop
sbb
scas
rolb
les
jecxz
aad
enter
mov
inc
repnz
sub
hlt
push
frstor
mov
dec
mov
adc
hlt
sahf
aaa
jb
jb
cmp
fmul
add
dec
dec
rolb
xchg
pusha
add
je
lods
add
push
in
out
ljmp
nop
pop
ja
xchg
ficoml
dec
enter
ds
pop
popa
mov
test
pop
xchg
or
popf
push
push
mov
and
arpl
leave
push
into
mov
mov
insl
rclb
out
inc
sbb
sub
popa
into
jbe
iret
mov
fdivrs
sbb
mov
sbb
or
insl
inc
jecxz
mov
not
lock
repnz
adc
cmpsb
pop
xor
fidivs
test
fsubr
jno
aas
pusha
inc
pop
adc
pop
js
stos
sub
mov
sbb
mov
push
in
xor
mov
mov
cmp
pushf
cs
push
cmpps
in
and
scas
in
int3
mov
xor
and
jle
dec
mov
xor
sti
int
pop
add
jg
outsl
cmp
push
ficompl
add
mov
jo
inc
shlb
mov
aaa
out
xchg
int3
xor
roll
cmpsl
int
and
mov
push
push
jno
call
sbb
movsl
xchg
cmc
divb
xor
and
xchg
adc
mov
cltd
movsl
enter
jns
aad
pop
jmp
out
ja
sub
mov
xor
fcoml
mov
es
adc
fwait
xor
sbb
out
enter
jge
cmpsb
sbb
arpl
fwait
movsb
mov
insl
mov
push
mov
movsb
adc
andl
daa
sub
xchg
xor
popf
xorb
mov
pop
enter
adcl
mulb
xor
sbb
js
andl
pop
mov
dec
icebp
sbb
jnp
xchg
mov
insl
push
push
mov
adc
or
mov
sahf
push
in
adc
xor
sbb
test
and
jne
mov
mov
fcomi
jmp
xchg
loop
hlt
test
jmp
out
mov
insb
hlt
or
mov
aad
push
movsl
and
fldl
sti
arpl
and
xchg
xchg
xchg
stos
cmc
jecxz
push
pop
jno
mov
nop
xchg
lds
mov
jmp
or
push
dec
es
xchg
int3
sahf
cwtl
add
mov
scas
mov
sub
mov
fistl
lods
daa
xor
cltd
movsb
jge
data16
jno
fs
cmp
pop
mov
adc
sub
imul
cltd
out
test
fdivs
test
and
cmpb
faddp
pop
test
xor
or
adc
leave
cmp
push
sbb
lock
inc
jo
loopne
mov
das
mov
loope
push
mov
in
pop
cmp
pshufw
and
xchg
inc
mov
movsl
jecxz
std
inc
add
cld
mov
nop
jo
stc
adc
add
dec
popa
mov
stc
lds
imul
pop
rorb
pop
inc
push
iret
mov
mov
aam
mov
fs
cmpsl
movsl
cwtl
pop
repnz
out
push
inc
sahf
add
push
xchg
mov
adc
jno
test
scas
insb
shlb
out
mov
cmp
dec
jo
test
cmp
push
loopne
fcompl
scas
les
mov
movsl
repnz
shl
jnp
mov
and
out
mov
push
mov
mov
ret
fisubs
int
cmpsb
xchg
sub
out
push
dec
ja
lea
orl
insl
and
sahf
or
ret
addr16
pop
in
mov
dec
inc
cwtl
test
addr16
xchg
adc
mov
ja
cmp
adc
jmp
iret
jae
xchg
enter
mov
adc
int
add
lds
xor
fcmovu
mov
xchg
pop
pusha
ret
sbb
enter
outsb
xchg
mov
cmp
jne
sahf
mov
pop
mov
push
pushf
test
xchg
movsb
icebp
jbe
adc
lds
jmp
push
int3
mov
cltd
cmp
in
in
lret
and
or
jmp
mov
shrb
mov
push
xor
data16
adc
mov
cs
pop
mov
pushf
xor
dec
push
inc
and
or
cmp
fwait
lret
cld
arpl
scas
out
or
mov
test
pushf
repnz
push
adc
add
push
nop
fsubl
lock
mov
jmp
xchg
jecxz
shl
lods
in
int
cmc
or
mov
fimuls
add
push
and
mov
ljmp
outsb
sub
iret
or
add
pop
jne
mov
xor
clc
fbstp
push
xchg
adc
pop
rorl
cltd
dec
or
push
mov
call
loope
mov
inc
or
push
aas
add
jecxz
jno
jle
adc
in
xchg
push
lods
cmpsb
xor
cmp
and
stos
mov
mov
push
dec
cmp
inc
iret
lods
cmpl
or
mov
fiadds
sub
sbb
notb
pop
ss
mov
and
nop
rcr
jg
cmpsl
mov
dec
jb
cmp
repz
sarl
xchg
mov
mov
fisubs
sbb
mov
sub
xchg
jge
jae
mov
shlb
and
ret
outsb
mov
push
scas
nop
cmp
cmp
stc
mov
jmp
mov
push
in
sub
pop
jnp
xorl
lea
jns
aaa
mov
pop
imul
adc
outsb
into
shlb
fs
pop
cmc
xor
gs
add
inc
mov
mov
sub
lcall
cmpsl
out
roll
push
xchg
mov
fmulp
shlb
mov
push
mov
in
jbe
and
jo
ss
add
push
enter
or
pop
gs
lods
dec
pushf
xor
xchg
add
ret
lock
pop
mov
mov
outsl
scas
dec
lock
int3
repnz
repz
mov
add
xor
mov
cmp
or
in
popf
imull
mov
out
push
mov
xor
fsubrl
out
mov
cli
cmp
aaa
stc
repz
stos
cmp
dec
lret
jecxz
xor
enter
repnz
int
gs
dec
push
jge
mov
movsl
mov
fs
not
fcmovu
cmc
xchg
mov
and
in
mov
sub
xor
ds
out
loopne
push
sub
shlb
lods
mov
xor
pop
fmull
pop
xchg
adc
sub
push
push
inc
sarb
fsubl
add
dec
mov
ret
adc
rcrb
mov
idivb
test
loopne
into
xor
or
ljmp
push
mov
xchg
icebp
pop
arpl
push
enter
loopne
out
jmp
xchg
jg
fcomip
xor
push
adc
inc
and
cwtl
cs
xlat
xchg
ljmp
pop
cli
out
xor
push
mov
rcr
nop
jl
rcrl
das
repnz
dec
imul
or
pop
sub
popa
daa
push
cmp
pop
dec
push
mov
imul
mov
push
mov
sbb
sbb
push
outsl
scas
cmpl
xorb
out
shrl
push
aaa
imul
filds
pop
das
or
pop
ret
loope
mov
mov
add
xorl
pop
lds
out
lcall
rcl
mov
push
lret
pushf
pop
push
leave
lret
dec
lahf
and
fyl2x
icebp
leave
mov
jge
lds
dec
pop
sti
das
xor
dec
pushf
inc
lods
fcmovnbe
jecxz
sub
mov
pop
dec
mov
popf
pop
dec
mov
xor
mov
push
mov
mov
or
pop
cld
mov
aaa
adc
push
test
and
stc
push
push
outsb
push
dec
adc
mov
sub
pop
jmp
and
add
mov
and
mov
lods
sub
fisttpll
fildl
les
jg
rol
dec
scas
push
mov
out
fldl
scas
jle
or
pusha
sub
lods
pushl
outsb
xchg
jp
or
add
cltd
lods
fsubrl
jne
jge
negl
dec
pop
cmp
mov
test
or
repnz
add
mov
es
inc
push
out
cmpsb
ficomps
popa
and
mov
push
js
daa
dec
fwait
mov
fnstenv
push
ret
jnp
fisubs
dec
jmp
pop
lcall
mov
iret
jl
fldenv
sti
test
popa
pop
fistpll
pushf
add
jbe
dec
std
jl
scas
sahf
popf
idiv
mov
fcoml
mov
mov
int
in
stos
adc
inc
mov
jecxz
fldt
xor
pusha
sahf
test
stc
xchg
jecxz
leave
jnp
pop
xor
push
mov
sub
adc
ds
push
fsts
outsb
push
sub
sbb
ret
or
xor
jb
test
dec
mov
xchg
dec
jg
sub
pop
mov
jg
loope
mov
aas
pop
xchg
dec
in
jmp
jno
jae
push
or
lods
push
xchg
sbb
cmpsl
mov
lret
add
pop
inc
mov
or
dec
pop
mov
arpl
add
test
or
xchg
push
repz
adc
sbb
jecxz
xchg
aad
icebp
inc
mov
inc
out
push
or
repz
adc
add
xchg
out
inc
xor
scas
leave
ds
add
cwtl
ficomps
lcall
xor
dec
mov
cmp
lret
ss
popa
sub
push
mov
imul
xor
mov
inc
mov
test
repnz
std
push
mov
or
in
dec
insl
pop
hlt
mov
into
das
pop
enter
fwait
jb
push
cmp
imul
out
push
aad
jp
pop
sbb
jg
mov
ja
fildl
jecxz
or
in
fwait
xchg
out
fsubrp
dec
inc
mov
pop
in
sahf
adc
pop
sbb
loop
adc
lret
mov
fiaddl
cmpl
mov
je
ljmp
aam
das
imul
icebp
shrd
jbe
mov
inc
sub
loopne
mov
mov
pop
cmpsb
fmuls
into
inc
cmp
inc
out
xchg
push
xor
jo
sub
lods
push
dec
sbb
xchg
cmpsb
push
cmp
pop
xchg
xchg
daa
pop
add
mov
sub
rcrl
jp
pop
push
ja
xor
fsts
sub
push
cmp
movd
sbb
jo
adc
inc
and
bound
pcmpgtd
imul
mov
add
pop
push
jns
movsb
ljmp
mov
cmc
xor
rolb
lret
out
ret
add
dec
leave
fnsave
xor
push
das
es
repz
dec
dec
mov
shll
xchg
idivb
pop
sub
pop
mov
cmp
ror
mov
mov
pop
test
pop
enter
ja
les
mov
xchg
scas
lds
fwait
push
cmp
sbb
test
dec
bound
leave
cmp
dec
mov
mov
int
xchg
test
mov
sub
mov
and
lods
mov
cmp
push
add
xor
ds
mov
and
cld
loop
daa
mov
xor
and
mov
or
outsl
fcmovnbe
dec
xchg
pop
sub
jns
popf
aaa
sahf
push
xchg
xchg
dec
les
mov
mov
call
in
mov
out
negb
cmpsl
mov
ss
sbb
xor
repz
test
test
shll
imul
mov
arpl
insl
xchg
fstps
or
fildll
pusha
pop
jle
sub
mov
lret
fadds
mov
out
loope
mov
std
xchg
mov
inc
aad
ljmp
push
push
sbb
dec
adc
out
mov
sbb
sbb
pop
jg
sbb
fwait
movb
or
push
hlt
out
in
inc
fstl
xor
cltd
icebp
lea
stos
jo
scas
mov
in
je
dec
push
jp
or
ja,pn
fmuls
inc
push
and
ljmp
push
or
scas
jmp
xor
dec
and
dec
pop
insb
rcl
or
sbb
inc
movsl
loope
lock
cmpsb
lods
jl
stc
jmp
mov
pop
ret
pusha
pop
sbb
data16
dec
xchg
or
mov
and
add
push
mov
and
repnz
add
and
scas
jg
mov
push
hlt
fbstp
xor
aaa
cmpsl
imul
dec
and
xor
shrl
addb
cwtl
adc
outsl
xor
out
sub
push
fs
sahf
sbb
clc
push
nop
mov
sbb
sbb
sti
xlat
aam
clc
jg
rolb
int3
sub
insb
movsb
jmp
sub
push
sub
mov
test
mov
sub
sub
cwtl
dec
push
fists
pop
xlat
pop
or
shrl
xchg
andl
push
stos
mov
cmp
sub
mov
push
fwait
jnp
jns
filds
xlat
int3
inc
xlat
sub
adc
push
sub
nop
cmpsl
push
aaa
xor
decl
fisubrs
iret
int3
fsin
rorl
iret
hlt
pop
lcall
hlt
addr16
dec
hlt
inc
jnp
in
fimuls
dec
mov
sbb
push
xchg
ret
xor
sbb
lods
xchg
repz
ljmp
mov
jl
push
dec
lea
out
sub
rorb
sti
sbb
jbe
push
outsb
mov
das
clc
jb
nop
sub
sub
ja
sbb
xchg
add
xor
repnz
fsubs
fbld
leave
mov
jbe
js
ucomiss
orb
xchg
shll
test
pop
pop
cmovle
sbbb
mov
mov
adc
stos
mov
stc
ret
mov
dec
pushf
movsl
or
or
loope
mov
icebp
fwait
cs
push
mov
std
int
xor
or
mov
xor
push
lret
pop
mov
popw
lea
cmpsb
dec
push
int3
ficompl
mov
icebp
xchg
xchg
fucomp
test
pop
jl
aaa
dec
cltd
xchg
fwait
mov
cmc
push
xchg
call
loop
lds
sti
test
push
loope
mov
mov
rorb
xchg
pop
xor
and
mov
dec
lcall
jmp
addr16
shlb
das
scas
adc
std
iret
inc
push
pop
js
shrl
int3
dec
ret
popa
xchg
lods
addr16
std
lods
pop
mov
xlat
lods
xor
loopne
xor
jmp
sbb
in
pop
mov
mov
sub
pop
mov
leave
jns
out
and
jb
jecxz
cwtl
dec
cmp
push
xchg
mov
out
adc
test
push
hlt
ss
pop
je
out
mov
lahf
mov
mov
stos
sbb
repnz
loope
ss
rorl
stc
mul
ljmp
and
lahf
add
popf
cs
jno
data16
pop
mulps
sbb
pop
jbe
shlb
dec
inc
movsb
leave
xchg
cs
stos
sub
mov
scas
pop
and
aas
out
cld
cld
dec
cld
cmp
adc
fsubl
xchg
inc
dec
mov
mov
xchg
push
mov
adc
and
fucomip
mov
lret
sbb
js
incl
add
fistpl
daa
cli
push
stos
int3
mov
out
outsb
cmc
into
sub
xchg
mov
nop
and
adc
ss
xchg
imul
mov
jp
cmp
sub
gs
mov
pusha
call
push
mov
fdivrl
fwait
repnz
scas
fstpl
mov
xor
jnp
psubusb
jo
xchg
xchg
jge
mov
int
cmp
dec
jnp
push
dec
and
xor
pop
scas
push
out
xor
sub
repnz
test
pushf
push
rorb
inc
pop
cmp
repz
mov
xchg
dec
in
and
pop
outsl
test
sahf
push
out
sarl
ret
cld
jle
push
cmp
sti
mov
push
xor
pushf
adc
push
aad
cli
rcll
je
jnp
push
inc
mov
cmc
push
fadds
sbb
fldcw
mov
fisttps
test
inc
mov
or
in
rcll
dec
sbb
add
xor
fwait
cs
loop
add
push
xor
out
data16
cmpsl
xor
insl
xchg
mov
hlt
repnz
inc
push
add
and
dec
arpl
rcr
outsb
in
or
out
dec
mov
repz
cmp
or
testb
aas
cld
pop
push
call
jg
mov
repz
daa
pop
dec
xor
call
jmp
jp
mov
inc
dec
mov
xor
mov
nop
cmpsl
inc
fisubrl
je
jle
ljmp
imul
add
movsl
pop
into
inc
daa
dec
sahf
mov
rorb
ss
dec
jmp
lret
mov
sbb
push
out
sbbb
xchg
pop
xchg
loope
dec
loopne
mov
dec
pop
mov
mov
cmpsl
bnd
adc
les
mov
mov
xor
iret
xor
sbb
les
dec
ror
rcl
xchg
jo
dec
inc
out
xchg
insl
mov
sbb
cmpsb
outsb
arpl
mov
sbb
sbb
xlat
in
and
sub
inc
or
push
xor
xchg
cmp
dec
jge
scas
fmuls
dec
jp
sub
insb
in
pop
frstor
aas
lock
inc
out
dec
movsl
fadds
repz
pop
push
scas
aad
pop
scas
sbb
cmp
stos
and
mov
pop
das
push
dec
mov
fld
iret
pop
mov
sub
or
jne
rcrb
mov
fcoms
inc
adc
pop
jne
xchg
jg
xor
mov
xchg
push
lock
mov
lea
cmp
add
adc
enter
pop
shlb
hlt
jp
pop
sub
pop
insl
movsb
rcrb
push
lods
jmp
iret
and
jnp
or
fsubl
lock
inc
mov
hlt
push
cmpsb
lret
ret
pop
movsl
pushf
inc
add
out
insb
adc
pop
mov
dec
stc
sbb
xor
jg
aam
pop
roll
or
lods
jge
iret
mov
cmpsb
sub
mov
es
das
les
cmp
sahf
jno
sbb
int3
data16
cld
pop
stos
xlat
dec
mov
pop
and
out
cmpsb
int3
push
sti
pushf
sub
lea
fists
jb
mov
push
mov
add
shrb
popf
repz
gs
loopne
pop
sti
sahf
ss
xchg
pop
mov
imul
fldcw
jle
jns
jo
fsub
adc
es
push
pop
jge
iret
or
push
dec
push
in
push
dec
mov
mov
dec
xchg
aam
sub
fbstp
or
data16
scas
arpl
das
mov
sub
sahf
and
pop
push
adc
stos
sbb
mov
mov
add
mov
out
icebp
xchg
mov
mov
jge
add
in
popf
xor
xor
cmpsl
inc
in
xchg
ja
jl
lods
push
mov
insl
fwait
jo
inc
push
cmp
and
into
push
int3
sti
scas
imul
mov
add
aad
adc
xor
adc
dec
loop
loope
inc
ja
mov
leave
mov
pop
stos
inc
mov
imul
and
or
mov
notb
mov
jns
in
xor
cmp
outsl
std
dec
sub
in
cmp
or
adc
loopne
lods
xchg
xor
dec
sbb
in
dec
xor
mov
inc
add
xor
dec
test
cmp
or
fnstcw
outsb
notl
pop
addb
push
pop
or
mov
lea
push
test
push
cmpsb
rcr
mov
pop
dec
das
sbb
jle,pt
loopne
aas
cmp
ret
push
lods
jge
roll
mov
cmp
les
stc
in
imul
inc
aam
sbb
outsb
push
dec
repz
out
mov
mov
push
push
mov
cmp
xlat
pop
inc
call
mov
pop
addr16
push
sbb
xor
inc
gs
lcall
cmpsb
jmp
push
push
sub
rolb
or
lcall
pop
cmp
lods
loopne
jo
cli
aas
aaa
es
mov
sub
leave
xor
jmp
mov
mov
enter
mov
insb
shlb
sub
into
jl
inc
push
cwtl
cmp
and
jg
data16
or
loop
sbb
xlat
mov
xorl
pop
es
cmp
push
in
pop
aas
in
mov
aaa
mov
mov
je
cmc
cmpsb
mov
or
jb
dec
cmp
insl
dec
mov
sub
xlat
xchg
xchg
lods
sarb
sbb
sahf
pop
fdivp
out
loopne
push
into
xchg
lret
xchg
push
xchg
mov
and
cltd
push
sub
iret
xchg
mov
inc
mov
or
adc
stc
and
int3
push
xlat
add
push
aad
lock
fdivp
push
stos
mov
loopne
pop
xor
jle
lock
inc
in
and
or
mov
dec
inc
aad
int
imul
xor
jno
inc
lcall
jl
iret
sbb
adc
das
call
xchg
test
sub
loop
mov
pop
xor
mov
lods
add
in
xchg
fs
jle
pusha
aad
es
cmp
jmp
shrl
lcall
es
repnz
je
push
stos
ljmp
fiadds
pop
rcr
adc
sti
adcl
xorb
iret
xchg
ret
xchg
js
imul
sbb
rorl
adc
push
enter
or
jae
ss
fwait
sbb
pop
push
sub
xlat
pminsw
aam
mov
push
fdivs
push
rcll
lret
xor
adc
mov
addr16
hlt
inc
loopne
test
xlat
adc
and
fsubs
lcall
pop
int3
xor
push
add
outsb
ljmp
dec
pop
push
mov
pop
jo
packssdw
mov
and
les
mov
lods
lds
adc
jmp
das
ljmp
je
pop
xor
jae
cld
mov
push
nop
cmp
push
ja
out
data16
mov
fs
push
mov
adc
outsl
lcall
scas
fdiv
mov
call
adc
xchg
sbb
adc
popf
inc
mov
xor
mov
into
mov
mov
pop
dec
or
mov
sub
add
aaa
in
mov
add
test
push
stos
repz
dec
push
ds
cmp
mov
ljmp
jnp
fstpl
lods
mov
inc
sahf
aaa
sub
lock
pop
mov
das
inc
scas
aas
fiaddl
fcompl
dec
cltd
pop
mov
test
lock
add
mov
inc
mov
cmp
repz
adcb
in
outsl
mov
xor
out
jge
mov
in
popf
in
lcall
fstl
loop
or
sbb
aas
sbb
mov
pusha
cmpsl
and
jle
inc
add
mov
jl
push
or
subl
stc
je
mov
mov
cmp
cmp
sub
dec
fdivrl
sahf
shlb
or
rcrb
xor
outsb
enter
push
hlt
cmpsb
sub
push
mov
stos
into
imul
dec
push
dec
insb
in
adc
xor
cwtl
stos
jecxz
mov
ret
or
es
push
test
adc
pop
lret
cli
sar
xchg
frstor
sbb
insb
dec
dec
movsb
bound
mov
ret
sub
idivl
mov
std
xor
jg
mov
dec
cmp
inc
lret
clc
mov
repz
rorb
inc
inc
arpl
stos
dec
add
xchg
lret
popa
jae
and
push
xchg
fbld
inc
out
sbb
pop
aaa
adc
jbe
daa
in
popa
push
sub
cmp
push
xchg
enter
outsb
pop
mov
test
popf
xchg
int3
clc
jae
test
fimull
jne
xor
lods
xchg
push
dec
jo
loopne
jl
jle
mov
stc
add
jp
or
jae
insb
in
fisubrl
xor
fisubrs
rolb
inc
fs
push
out
sbb
int3
je
inc
repnz
add
sbbb
loopne
lahf
ret
sbb
popa
aas
dec
push
pop
sahf
in
mov
es
lret
int3
xor
pushf
pusha
add
mov
xchg
mov
dec
add
mov
aad
sub
out
mov
pop
mov
int
jecxz
jns
fdivs
in
repnz
add
jecxz
add
push
jo
hlt
arpl
adc
std
dec
inc
ja
pop
lret
push
je
out
dec
popf
xchg
in
aaa
fidivrl
pop
ret
sahf
mov
pop
adc
push
jle
out
xchg
and
adc
mov
mov
dec
cmpsl
cmc
push
in
mov
mov
xchg
mov
test
pop
dec
arpl
pop
pop
mov
or
jbe
rcl
fildl
jecxz
aad
fildll
mov
jp
notb
in
sub
dec
sub
in
mov
adc
pop
adc
imul
stc
sar
xchg
cld
cmp
nop
aam
sub
lcall
ja
add
hlt
or
dec
fwait
cmp
pop
fcoml
dec
repz
inc
inc
ss
scas
imul
pop
mov
notb
mov
mov
lret
mov
lahf
push
test
mov
dec
add
xor
popf
push
rcrl
rolb
fucomip
sub
fcoms
fs
push
dec
cli
lock
out
out
push
dec
sbb
popa
in
mov
add
sub
push
push
push
iret
sub
sahf
add
stos
fidivrl
cltd
jnp
out
adc
insl
fucomp
rolb
js
cwtl
jne
jno
lock
cmpsb
jecxz
enter
movsl
lea
jnp
push
pop
jge
dec
push
bound
test
rcl
hlt
lahf
rcrb
sub
in
out
js
push
adcb
test
fisubl
pop
outsb
outsb
bound
shlb
testb
ret
xlat
psrad
xor
and
aad
sbb
fdivrl
fnstenv
leave
rorb
add
inc
xor
sbb
inc
lods
mov
fwait
mov
add
cld
jb
push
jle
out
test
jecxz
iret
mov
push
popa
xor
into
inc
clc
call
xor
shl
ja
lods
ss
aaa
pusha
stos
ficompl
sbb
cmp
inc
and
cwtl
cld
lcall
repnz
nop
mov
jae
popf
mov
shl
pop
test
sbb
jle
loopne
sti
push
inc
push
fadd
leave
scas
divl
inc
insb
out
xchg
rorl
fbld
jp
ror
adc
shrb
xchg
fnstsw
or
mov
xor
call
les
popf
pop
push
jmp
mov
cwtl
jbe,pn
mov
sar
fcomps
fstpl
fstps
pop
pop
adc
fdecstp
push
adc
rcrb
push
imul
addr16
frstor
insb
aad
rcl
out
push
and
out
je
ror
xchg
arpl
jae
out
and
enter
jp
jbe
aaa
dec
insb
clc
sbbb
pop
add
or
pop
pop
ljmp
jnp
out
pushf
dec
stos
push
sub
jle
inc
pop
iret
std
es
test
mov
or
movsl
and
iret
xchg
adc
fstps
pop
or
or
std
imul
inc
dec
in
rolb
mov
out
fistpll
adc
add
test
push
jle
jae
getsec
js
or
dec
pop
fdivl
out
mov
fs
clc
push
mov
int
mov
pop
mov
pop
and
inc
or
adc
jns
inc
fistl
mov
push
cli
repnz
cwtl
mov
shlb
push
imul
or
sub
cmc
push
push
stc
movsl
inc
ret
ret
es
je
push
cmpsl
and
out
imul
add
loope
inc
push
add
jecxz
lods
scas
movsb
aaa
dec
pop
adc
and
mov
leave
out
sub
test
scas
jl
shll
mov
mov
in
pop
pop
adcl
ss
ret
sbb
shrb
cli
mov
push
inc
cmc
scas
icebp
cmpsb
push
and
mov
and
subl
mov
cmp
pop
je
in
insl
sahf
xchg
lret
dec
je
sbb
xchg
movsl
mov
int3
sbb
insl
das
dec
xchg
in
call
cld
sbb
out
test
or
cmpsl
aas
rorl
inc
add
and
jecxz
mov
and
cvtps2pd
les
sub
sub
outsb
mov
push
js
pusha
pusha
sub
dec
divb
fwait
je
adc
sub
sub
test
adc
sub
adcb
hlt
test
jl
adc
push
dec
jecxz
pop
jno
fdivs
xchg
cmpsl
icebp
in
dec
sbb
loop
xchg
in
out
out
or
xchg
inc
xlat
sub
xor
fisttpll
shll
sub
shlb
cltd
and
fldcw
scas
dec
inc
xor
clc
andb
nop
jmp
and
inc
outsb
cmpsb
imul
ret
jle
arpl
movsb
mov
bound
and
xor
add
push
xor
add
cli
int
scas
daa
popf
mov
jg
int3
movsb
and
push
or
cmp
aam
imul
adc
loop
repnz
lds
jnp
pushf
pop
divl
data16
js
push
dec
movsl
cmp
jnp
or
cs
out
add
lret
sti
sbb
xchg
dec
enter
mov
shll
pushf
or
cmovae
ret
jg
jle
stos
push
inc
push
adc
cli
ds
mov
mov
in
nop
mov
sbb
fs
dec
mov
fnstsw
mov
mov
push
arpl
enter
call
shll
ds
out
cs
push
fwait
jg
mov
ljmp
adc
jl
pop
lret
rcll
xor
pop
xchg
adc
sbb
pop
scas
inc
outsb
mov
outsl
lret
jle
leave
mov
push
pop
inc
sub
fcmovne
xorb
mov
jnp
leave
mov
dec
cld
mov
std
jno
jle
shll
cmp
push
pusha
je
cmp
cmp
popa
fdivrp
mov
movsl
pushf
enter
inc
jbe
pop
push
mov
or
sub
sahf
out
pushf
mov
std
inc
divb
or
jp
push
repz
push
cmp
pop
dec
mov
mov
dec
subl
dec
cld
les
push
arpl
sbb
adc
or
sbb
insb
push
std
xor
cmp
test
mov
jmp
bound
lcall
mov
pop
jne
sub
sbb
fwait
int3
mov
stos
xchg
pop
rcl
pop
mov
inc
push
push
sub
and
fsubs
in
push
pop
fstps
jge
pop
cmp
xchg
lcall
sub
fcompl
movsl
fwait
aam
cwtl
outsb
or
adc
xchg
add
arpl
aas
inc
decl
push
rorl
call
mov
and
cmp
mov
adc
arpl
xlat
cs
sbb
mov
in
and
adc
ret
dec
lahf
jo
jb
mov
mov
push
lods
lock
mov
rcrb
xor
sar
pop
out
inc
mov
lret
sub
and
push
data16
out
inc
cmpsl
and
cmpsb
ret
ljmp
add
ss
dec
pop
cmc
push
mov
ret
clc
jg
test
js
add
lods
pop
pop
pop
push
sbb
add
cmpsb
add
adc
cmp
sbb
adc
gs
mov
lock
add
addr16
xorb
stos
mov
iret
loop
xchg
iret
or
push
inc
mov
inc
cmp
cwtl
or
ja
and
sub
or
imul
insb
ficompl
hlt
jns
and
stc
cmp
repz
mov
lock
mov
clc
roll
push
cmp
xchg
arpl
js
imul
xchg
or
in
sub
cltd
pop
mov
push
data16
imul
lea
imul
mov
mov
daa
jno
test
cmp
pop
movsb
push
pop
and
outsl
inc
lret
es
movsl
test
push
xor
and
xor
jno
arpl
test
sahf
fdivs
pop
mov
int3
xor
jle
add
shrl
xchg
add
ja
scas
jecxz
dec
dec
pop
mov
push
fistps
jge
jbe
pop
push
and
in
or
ret
inc
inc
bound
out
int3
cli
lods
ljmp
out
cltd
mov
mov
sub
shll
mov
jmp
and
xor
daa
test
push
int
imul
pop
or
dec
and
inc
xchg
push
push
xchg
roll
and
imul
mov
sub
dec
jne
aad
lea
adcb
fidivrs
jo
aas
pop
out
rolb
out
fst
inc
fildll
jl
cmp
add
mov
adc
add
adc
sub
mov
int
ds
jo
jecxz
in
sub
adc
inc
jl
or
dec
out
push
inc
jae
mov
ficomps
jae
outsb
sub
mov
jl
or
icebp
test
push
test
mov
add
out
inc
scas
cmp
sub
pop
jns
push
mov
js
lea
out
lds
xor
dec
test
enter
pop
adc
sbb
divl
xchg
xor
mov
repz
inc
test
cmp
jne
xlat
mov
clc
movsb
popf
pop
pop
add
jbe
xchg
jecxz
jno
adc
dec
lods
sbb
ss
adc
scas
cmp
fiaddl
loope
mov
jne
sbb
adc
enter
xchg
mov
out
lret
or
pop
test
insb
test
push
int3
or
in
ficompl
lcall
jp
scas
cmpsl
sti
shlb
mov
adc
sub
jne
xchg
jnp
sti
pop
push
lret
fidivl
lea
ja
xchg
imull
and
xchg
push
in
aas
aad
push
shr
pop
sbb
popf
inc
mov
xchg
xor
push
jg
shl
sub
dec
loopne
jmp
lock
push
shl
push
data16
or
push
sahf
jg
mov
mov
mov
push
or
sahf
mov
xor
adc
pop
aaa
jge
out
cmp
movsb
and
jg
sub
int
in
fnstsw
xor
push
imul
test
xchg
test
jmp
xor
add
cltd
stos
test
gs
imul
mov
sub
loop
or
xlat
sti
xor
out
dec
pushf
pop
daa
xchg
fidivl
enter
pop
in
stos
cmpsb
jle
mov
add
hlt
sbb
lds
shll
aad
inc
sbb
lret
sarl
movsb
or
or
std
into
pop
fnsave
sub
inc
mov
sbb
add
cmpsl
test
jmp
mov
jl
xor
aad
outsl
movsl
adc
cwtl
les
test
repnz
pop
pop
xor
sbb
lahf
inc
scas
ljmp
mov
in
lods
push
mov
dec
jg
dec
nop
xchg
sbbb
lods
adc
fucom
adc
mov
shrb
mov
arpl
pop
fcompl
sbb
incl
inc
test
xlat
lock
js
add
pop
xor
pop
jl
sti
add
sbb
ljmp
pop
outsb
out
mov
push
and
imul
inc
subb
inc
cli
push
int3
pop
scas
jecxz
push
mov
int3
imul
mov
mov
mov
in
mov
scas
lds
dec
pop
mov
add
sbb
call
mov
imul
mov
addr16
fadds
mov
cmp
fcmovb
divb
addr16
ds
dec
cwtl
dec
fsubs
add
arpl
lea
jnp
xchg
bts
lock
add
dec
mov
cmp
int3
xchg
stos
call
and
and
sbb
dec
pushf
and
xor
loopne
xchg
mov
shrb
outsl
jmp
mov
cs
shlb
lcall
bnd
lret
add
ljmp
mov
lret
jge
in
mov
and
sbb
shl
jb
inc
outsl
adc
loop
bound
push
pop
insb
jecxz
ljmp
loopne
popf
xchg
loop
pusha
push
popf
mov
lods
enter
add
out
jb
mov
in
pop
mov
imul
inc
jp
repz
sub
xor
scas
adc
popf
inc
and
xchg
mov
shl
xchg
popf
pop
add
jbe
ffree
dec
into
or
test
stos
push
inc
sub
sub
test
les
outsl
retw
out
jle
das
mov
js
adc
int
add
lds
mov
adc
insb
jmp
es
bound
jmp
scas
aaa
lahf
xchg
shrb
js
xchg
and
inc
imul
sbb
dec
xor
flds
mov
ds
mov
dec
icebp
cmc
stc
mov
add
out
out
into
pop
adc
cmp
dec
mov
fstpt
hlt
pop
stc
or
sbb
push
test
iret
xor
loop
jle
inc
addb
lods
xlat
cli
pop
hlt
call
test
xorb
les
xor
jne
cld
pop
sub
call
push
mov
addr16
push
sbb
je
mov
stc
lcall
sbb
jp
or
add
mov
movsb
fistpll
stos
mov
jns
pusha
in
xor
pop
in
es
js
cmpsb
adcb
sbb
imul
fisubl
pop
sub
push
adc
dec
iret
loope
es
bound
cld
arpl
push
sub
lock
dec
jp
shlb
and
and
iret
inc
pop
ljmp
fimuls
imul
scas
mov
xchg
xchg
ds
lretw
aaa
ret
pop
or
and
fs
ficomps
scas
jnp
enter
mov
enter
aad
repnz
call
push
and
jmp
push
aas
mov
scas
mov
and
imul
push
adc
mov
jg
imul
hlt
inc
dec
cld
lsl
in
xor
xchg
sub
adc
push
lcall
std
adcb
cmp
psllq
cmc
jae
mov
jg
cmp
sub
sbb
xor
or
ja
xor
mov
mov
les
loope
sub
sbb
dec
cmp
sbb
imul
popf
sbb
leave
inc
insl
movsl
cs
mov
js
lret
loopne
xchg
push
lret
out
jno
mov
loopne
push
inc
pop
std
jne
sti
push
clc
jae
and
je
dec
dec
roll
fucomp
dec
pop
xor
sbbl
xchg
xor
xchg
inc
test
push
inc
pop
pop
cmc
out
pop
or
in
push
lret
cmp
cmp
pushf
mov
test
push
aam
inc
bound
add
adc
or
faddl
xlat
or
sbb
cmp
and
adc
inc
mov
jnp
sub
in
mov
insb
mov
out
lret
movsb
inc
movsb
adc
pop
inc
cld
pop
lea
xor
idivb
xlat
cmpsb
dec
aam
xor
pushf
call
jbe
add
jmp
jbe
rolb
and
mov
test
popa
mov
ret
pop
fwait
out
jbe
stc
outsb
inc
mov
lea
jne
mov
aad
push
sub
add
jg
popl
jns
lret
lcall
xchg
imul
dec
sti
js
dec
xchg
xchg
adc
sbb
sahf
call
sub
inc
cmp
popa
call
dec
fistl
cmp
push
push
cld
xor
mov
push
push
cs
jmp
orl
fildll
add
inc
pop
adc
int
add
iret
aam
jl
push
orl
cmp
inc
scas
or
mov
mov
js
or
in
testb
lret
mov
std
popf
jl
insl
xchg
inc
sbb
sub
push
shlb
jmp
ljmp
pushf
xor
addl
aas
pop
rcrb
loopne
pop
mov
and
in
and
xchg
push
inc
cmc
mov
outsl
in
fadd
fildl
shl
dec
addr16
aam
push
xchg
test
inc
outsl
aam
cltd
cmp
dec
jle
sbbl
mov
xor
cld
loop
test
icebp
lahf
or
out
xchg
ja
fisubrl
ffreep
lret
or
cmc
xor
jge
dec
mov
out
xchg
repnz
push
mov
nop
cmpb
sbb
outsb
mov
fldt
in
and
pop
sbb
mov
xchg
cli
mov
in
xchg
mov
or
addl
lock
push
push
outsb
xor
inc
and
cmpsl
stos
push
lds
jge
mov
es
es
mov
cmp
and
xor
mov
data16
mov
xor
pop
fldt
jg
or
xor
or
sub
test
jnp
mov
and
sub
xlat
lea
lahf
cmp
lret
mov
cwtl
test
and
pop
ljmp
clc
xlat
jno
mov
fs
mov
adc
mov
out
negb
ret
in
jmp
insb
mov
shll
mov
fsubp
into
pop
sub
pop
mov
or
test
int
in
jle
dec
inc
lods
xor
fldenv
push
xor
clc
pop
xlat
and
lret
xchg
jno
pusha
mov
pop
jg
dec
jl
xchg
xchg
pop
fs
inc
in
les
repnz
fwait
mov
out
inc
adc
add
jl
adc
test
cmpsb
sbb
mov
fidivl
movsb
sub
cmp
imull
daa
repnz
hlt
je
add
or
aam
xchg
movsb
loopne
je
les
addb
movb
and
scas
lahf
cmpsb
shll
jmp
and
xor
in
test
xchg
push
sub
idivb
mov
aam
outsb
test
loop
out
fsubr
push
mov
xchg
roll
daa
aam
movsb
sbb
and
sarb
jae
dec
ljmp
aaa
sub
filds
mov
mov
jle
div
int
xchg
out
loope
pushf
loope
and
ja
iret
dec
pop
jecxz
loope
pop
shlb
add
pusha
loopne
sarl
out
push
jne
scas
pop
inc
scas
push
scas
shld
dec
sub
outsl
or
push
das
dec
rorb
testb
inc
and
lods
fwait
int3
pop
or
push
pop
popa
stos
adcb
dec
aas
pushf
data16
push
pop
fucomip
sbb
cmc
ljmp
mov
les
push
xchg
add
js
inc
enter
neg
lcall
js
adc
insb
insl
sarl
inc
xchg
sbb
dec
dec
dec
fistpl
mov
int3
gs
mov
jmp
lea
mov
aaa
xchg
fcmovnb
or
ds
jnp
ja
shlb
sbb
les
fsub
fs
sub
insl
pop
mov
movsl
cwtl
cwtl
push
mov
inc
mov
xor
sahf
pop
mov
frstor
adc
dec
or
mov
sti
lods
cmp
or
adc
add
xor
push
push
ds
insb
mov
test
cltd
jnp
mov
pop
jg
iret
iret
push
enter
in
add
mov
mov
into
mov
pusha
mov
jmp
repz
sbb
leave
push
outsb
sbb
xchg
pop
in
mov
fcmovnbe
inc
xor
sbb
ret
imul
add
insl
bound
sbb
stos
jb
mov
imul
leave
mov
or
mov
sub
xchg
dec
mov
outsb
lock
daa
aaa
and
fyl2xp1
mov
dec
fsubl
sbb
ret
bound
add
add
sub
lods
xchg
dec
test
out
adc
loope
dec
pop
sub
push
dec
mov
push
pop
mov
cwtl
lret
xchg
fldl
lcall
jb
fists
jo
in
je
in
lock
mov
add
popf
jbe
cmovo
jne
adc
cmc
xlat
nop
xchg
mov
or
outsb
call
fwait
rcrl
mov
cmp
jnp
add
push
lcall
insl
out
pop
jg
sub
jns
xorb
rcr
push
add
sbb
addr16
fists
mulb
lret
test
leave
enter
cmpsl
xchg
aam
mov
test
push
mov
cs
or
lcall
dec
add
push
or
lahf
leave
clc
push
or
iret
fiadds
xchg
xchg
int3
fmull
jle
jns
pop
clc
out
mov
adc
cmc
cmpsb
mov
mov
arpl
xchg
pop
scas
jnp
add
adc
or
inc
or
shlb
sarb
jne
jae
mov
mov
add
mov
mov
ljmp
jae
ljmp
jp
loope
sub
aaa
inc
clc
sub
enter
lds
adc
bound
pop
push
je
imul
jmp
cmp
leave
xor
add
arpl
imul
mov
mov
cmp
cmp
jnp
push
lret
push
faddl
or
cmpsb
les
mov
push
and
enter
jmp
sbb
sub
and
scas
sbb
xorps
jo
loop
xchg
daa
cmp
adc
cmpsl
inc
xor
fisttpll
mov
fldcw
cli
test
lahf
pop
sbb
cmpsb
mov
sti
scas
xchg
test
push
and
mov
mov
cli
mov
add
sbb
nop
and
cmp
shl
bound
dec
mov
mov
dec
dec
jne
mov
push
and
mov
stc
pusha
push
xchg
add
mov
jnp
pop
ja
test
or
stos
mov
dec
xchg
bnd
sbb
dec
add
add
setg
dec
jmp
cmp
mov
push
fstp
loopne
fs
jp
or
xchg
pop
pop
sbb
stos
out
mov
js
cmpsb
fisttps
pop
adc
add
jns
and
cmpsb
movsl
icebp
sbb
aam
insl
int
cmc
mov
sbb
dec
test
popf
test
jnp
and
sbb
dec
sbb
test
mov
xchg
int3
pop
sbb
dec
in
mov
dec
imul
xchg
andb
push
jne
mov
push
sbb
out
out
enter
push
inc
ret
gs
jg
dec
xchg
mov
out
pop
daa
xlat
fcomip
icebp
mov
incb
or
arpl
jle
jecxz
adc
fcompl
test
mov
pop
sbb
mov
xchg
mov
adcl
dec
push
repnz
xchg
cs
pop
jns
push
mov
arpl
cli
jmp
nop
xchg
xchg
imul
test
loopne
insl
mov
sbb
stc
imul
push
inc
push
subl
jns,pt
pop
sub
pop
mov
inc
sub
ds
adc
dec
push
xchg
frstor
or
mov
rcll
pusha
data16
in
pop
adc
or
xchg
or
pop
jne
leave
adc
add
int3
mov
add
fbld
and
pop
jno
les
lret
jecxz
and
bound
call
cld
xor
jo
pop
out
pop
jle
mov
xor
inc
into
lahf
insl
push
loop
sbb
xor
mov
outsb
or
int
sbb
pop
push
jmp
cld
stc
je
jbe
fwait
insl
xor
lahf
cmp
movsb
xchg
call
mov
lret
cmp
fcoms
xchg
xor
gs
mov
jb
fadds
sarl
into
push
fldenv
mov
pop
or
adc
add
test
pop
pop
jg
movsl
inc
inc
fstl
les
movb
int
aam
test
bound
rorb
imul
js
cmp
out
movsb
jmp
inc
aam
mov
js
out
stos
xchg
xchg
outsb
mov
and
mov
add
out
add
sbbl
imul
ret
inc
mov
les
aam
jge
pop
sub
xchg
adc
xchg
popf
hlt
mov
xchg
into
jno
pop
stos
adc
inc
xchg
insb
pop
mov
fidivrl
or
and
pop
adc
test
fildl
insl
addr16
or
les
inc
arpl
lods
ljmp
test
cmpsb
scas
mov
push
pop
adc
popa
fistl
scas
mov
je
adc
loope
testb
mov
scas
mov
fwait
lds
lret
push
repz
add
add
xchg
addr16
add
xlat
lret
fiaddl
outsl
sti
sub
in
outsl
push
pop
scas
cwtl
add
mov
xor
std
mov
dec
push
xor
aaa
add
mov
push
cli
rorb
xchg
pushf
sarl
cmp
add
push
or
lds
push
out
mov
imull
xchg
inc
and
fldl
jo
xsave
ljmp
test
and
lock
jmp
out
mov
inc
xor
jo
pop
push
fst
cli
jns
mov
sub
push
push
pop
inc
testl
cmp
mov
nop
incb
or
mov
pusha
addr16
cmc
cmp
out
inc
shlb
stos
xlat
xor
rclb
push
pop
out
int3
je
mov
xor
clc
enter
lea
lret
clc
fmul
fiaddl
xor
loop
sub
mov
or
loopne
jo
stos
or
outsl
pop
dec
addl
cmpb
ja
inc
xchg
xor
lock
inc
mov
sub
hlt
cltd
xchg
push
sub
push
pop
mov
lods
or
sub
ret
call
sbb
jecxz
or
add
fldcw
sbb
sub
scas
or
and
xchg
sub
xor
push
lret
push
aas
jmp
and
filds
mov
mov
xor
insl
dec
scas
adc
mov
js
cmpsl
or
int
dec
sub
lahf
lock
inc
pop
push
pusha
or
add
inc
jno
movsl
add
inc
jae
sub
sbb
sbb
and
mov
jl
xchg
pop
mov
test
sub
pop
into
mov
inc
sbb
pop
xchg
sarl
fisubs
pop
adc
lret
sub
shl
mov
dec
addb
imul
out
push
stc
nop
dec
sub
test
cmpsb
inc
iret
dec
mov
and
decl
xchg
call
mov
adc
jle
push
lcall
hlt
inc
sub
adc
shlb
lods
adc
into
xchg
mov
xcrypt-ofb
cmpsl
cs
xor
dec
xchg
inc
lock
mov
xchg
lretw
sbb
cmpsb
sahf
sbb
inc
ret
pop
push
pop
cmc
int
dec
insb
or
pushf
mov
ss
sub
outsb
jns
push
stc
sub
cmp
lea
mov
cmpsb
daa
or
leave
pop
test
and
push
sub
outsl
fildll
sub
leave
fsqrt
cmp
xor
ret
xor
loopne
jne
add
xor
test
ficoml
mov
xor
lret
ret
mov
mov
popf
pop
adc
lahf
jecxz
les
dec
inc
mov
jg
addr16
jmp
imul
lds
int3
pop
out
cmp
or
jle
xchg
rcrb
xchg
sub
fwait
push
mov
mov
shl
