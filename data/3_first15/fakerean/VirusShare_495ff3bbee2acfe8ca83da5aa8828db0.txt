sbb
add
mov
fnstsw
fst
pop
daa
sti
jge
das
aad
jmp
lods
mov
test
fstps
andl
cwtl
cmp
dec
iret
mov
mull
andl
push
sbb
fadds
jl
pop
push
imul
mov
adc
jecxz
ja
fsts
fnstsw
scas
int3
mov
insl
or
jne
sbb
sbb
lahf
mov
mov
andb
push
leave
mov
inc
cmp
xchg
dec
jo
cmp
pushf
mov
jae
xchg
adc
add
push
std
popf
sbb
jl
mov
sysexit
cmp
lahf
and
mov
cmpsb
ds
sti
adc
cmpsb
pop
rcll
cmp
push
int
sar
ss
stos
push
mov
jb
mov
test
xor
sbb
push
test
cmp
aaa
cmp
bound
repz
jmp
inc
out
pop
dec
mov
add
jge
bound
inc
call
xor
jmp
add
xor
cmp
scas
pop
xor
inc
pop
retw
cli
lea
sub
mov
js
push
dec
aad
cmp
outsl
lret
inc
pop
and
jo
dec
mov
cmp
test
xor
outsl
sub
adcl
add
jle
jae
xchg
dec
mov
push
ds
inc
sbb
bound
xor
pop
fcmovb
fs
dec
ljmp
push
in
pop
outsb
mov
les
rcrl
add
stos
push
dec
into
xor
or
mov
or
outsl
add
lea
and
sbb
cmp
repz
dec
mov
adc
ret
sbb
std
push
jb
dec
push
arpl
mov
cmpsb
movsl
or
mov
cmp
jle
dec
out
arpl
in
imul
mov
cs
aas
out
fs
ja
mov
or
mov
jg
sub
xchg
jne
fisubrs
jge
mov
cwtl
ja
lea
inc
popa
mov
push
pop
jecxz
add
add
roll
add
das
push
push
imul
ss
lock
xor
js
cmp
fsubrl
push
push
fyl2x
lods
push
sub
aam
mov
loope
pop
cmp
xchg
xchg
adc
lds
cli
xor
cltd
jns
lret
sub
push
push
or
ret
push
jle
sahf
xchg
dec
dec
xor
mov
mov
testb
pop
mov
xchg
xlat
std
mov
adc
test
lret
call
test
sbb
mov
cmp
adc
dec
sbb
lahf
jge
fiaddl
test
mov
and
push
lock
movsl
imul
xchg
mov
pop
pop
push
sbb
or
mov
push
or
push
pop
push
fisubrs
sahf
xor
inc
mov
add
jecxz
imul
gs
inc
add
adc
push
xor
mov
cld
outsl
in
add
lret
jne
jbe
or
stos
mov
insb
or
jg
aam
std
mov
lds
pop
mov
ret
movsb
lret
and
push
popa
adc
inc
mov
mov
hlt
out
mov
lds
sbb
and
sbb
out
inc
mov
xchg
je
popf
jo
mov
and
mov
push
adc
ret
adc
dec
and
lods
mov
int
pop
mov
xchg
shl
jge
sub
inc
cs
fimull
shll
into
cltd
int3
stos
icebp
inc
cmp
jno
push
sub
or
mov
in
or
cmpsb
pop
mov
ja
mov
loop
sbb
mov
inc
insb
daa
pop
mov
outsl
in
add
xor
cmp
xor
popa
cli
mov
or
imulb
xor
out
pop
loope
das
adc
adc
imul
pop
adc
cmp
enter
xchg
mov
xchg
das
cmp
ret
stos
cmp
push
push
jle
jno
clc
imul
push
aas
sub
insb
dec
js,pn
mov
inc
lods
sub
cmp
lds
mov
push
cmpsb
xchg
sub
push
mov
push
out
inc
sub
mov
xchg
int3
jge
dec
fld
or
push
outsb
jmp
xor
out
rol
cmp
addr16
jnp
aad
dec
jae
pop
cld
sarb
xchg
bound
lods
pop
pusha
pusha
out
mov
out
pop
jo
xchg
cmc
mov
call
dec
push
cmp
pop
inc
xchg
sub
testl
mov
int3
mov
lret
mov
roll
jae
pop
or
hlt
bound
xchg
pop
dec
in
sub
pop
push
inc
mov
push
jl
and
rcl
frstor
mov
mov
loopne
sub
jp
fisubs
call
mulb
sbb
adcl
push
cmpb
jae
sbb
test
push
jl
movsl
cli
stc
mov
adc
or
jp
scas
popa
shll
dec
xchg
call
arpl
in
sbb
outsb
or
stc
dec
insl
cmp
push
cli
adc
mov
push
jp
ficoml
and
icebp
push
lret
dec
popf
scas
or
shll
lret
pop
test
cmp
stc
arpl
iret
nop
add
pop
subl
mov
inc
imul
or
jl
push
sub
shrb
sbb
cmp
repnz
faddl
sarl
adc
push
or
push
mov
adc
mov
outsb
cmpsb
stos
jp
adc
pop
mov
sbb
push
mov
jmp
in
mull
out
divl
cmp
bound
imul
cs
std
jecxz
outsb
cmp
bound
pop
out
clc
add
popa
or
mov
ret
add
fcomip
mov
je
data16
xor
call
cwtl
mov
mov
push
mov
int
sti
std
jo
xchg
fisttpll
sub
mov
mov
and
push
mov
cmp
shll
xor
adc
fmulp
cmpsl
push
jnp
push
jl
xorb
add
mov
int
sub
sarl
mov
out
jge
xor
outsb
cmp
stos
cmp
pop
subl
mov
movsb
push
or
shll
ds
sub
push
ret
or
dec
fwait
push
fldt
cmp
mov
jmp
xchg
aad
adc
pop
sbb
push
jecxz
xor
mov
pop
inc
pop
mov
fs
shll
fcoms
jae
fiaddl
std
lds
mov
mov
pusha
dec
jns
hlt
xlat
jp
add
cmp
das
fcoml
subb
pop
ss
cwtl
mov
push
mov
subb
sub
cwtl
mov
cs
xor
add
inc
cmp
inc
stos
bound
push
loop
nop
out
cmpsl
xchg
and
xor
fistl
mov
ret
fsubrl
mov
sub
shr
xor
lods
mov
pop
push
push
cmp
add
test
int3
sub
jle
dec
xor
cmpl
xchg
shl
lea
and
mov
adcl
fnstsw
mov
push
sti
pop
mov
stos
mov
or
lock
adc
daa
dec
mov
in
les
fs
inc
adc
insl
adc
xor
xchg
nop
fcmovnb
mov
popf
adc
sbb
std
mov
test
frstor
add
fldt
ret
lock
sub
add
mov
mov
std
rcll
imul
adc
jne
push
int3
cs
test
lcall
dec
sub
orb
cld
dec
cmc
and
in
push
insl
push
out
loopne
int3
xchg
sub
dec
jl
in
test
repnz
test
out
lea
dec
xchg
and
daa
ljmp
arpl
xchg
inc
js
mov
ficomps
out
or
add
push
push
aas
xchg
fildl
pop
xchg
fadd
push
sbb
sub
in
into
jne
cmp
test
pop
ret
imul
je
mov
imulb
jne
aad
sub
fwait
mov
and
faddl
fcmove
mov
gs
in
stos
mov
mov
stc
push
repnz
pop
aaa
push
fnsave
mov
loop
int
out
xor
clc
jp
roll
leave
shll
outsb
jg
scas
pop
inc
xor
xor
and
bound
inc
out
aam
cld
pop
cmpsb
fdivp
add
mov
cmp
pop
out
ja
data16
imul
outsb
add
sub
cmpsl
or
dec
xor
notl
enter
in
stos
ror
pusha
push
mov
cmp
neg
mov
sbb
addr16
sbb
or
inc
cmp
clc
out
xchg
xchg
fdiv
jg
push
popa
shlb
cmp
ss
cmp
lcall
push
mov
std
mov
pop
pop
add
pop
jle
out
ret
mov
jl
dec
or
sbb
xor
out
lret
mov
push
bound
xor
filds
bound
or
loopne
and
xchg
xchg
notl
mov
xchg
idivl
dec
ljmp
dec
aad
jecxz
or
xchg
std
jbe
punpckhwd
jb
jmp
fs
loope
cmp
adc
dec
add
and
pop
bound
or
negl
add
adc
sbb
addl
mov
xchg
mov
cld
push
bnd
jg
mov
rol
in
jge
or
daa
outsb
insb
sbb
adc
xor
sbb
jg
lcall
ror
push
inc
mov
fs
sahf
xor
ja
jg
mov
push
fst
xor
lods
inc
fdiv
mov
lods
orb
roll
fucomi
add
loope
sbb
mov
icebp
fcomip
xor
mov
dec
insb
lods
sub
jns
les
sbb
cld
sub
imulb
lds
es
jae
xor
cmp
rcl
adc
call
aas
test
xchg
mov
subl
pop
das
pop
cmp
jp
in
fistpl
shrb
test
inc
stos
xor
loope
arpl
loope
push
or
push
in
jp
xchg
test
sbb
lahf
sub
push
jnp
jmp
outsb
sti
or
outsb
negb
mov
xor
adc
aaa
fcos
movl
jge
pop
push
imul
arpl
fcoml
push
aas
mov
stc
in
lcall
mov
hlt
not
pushl
ds
shrb
fldenv
cmp
in
push
pushf
cmp
adcl
sbb
add
inc
pop
ret
fsubrl
sub
sub
gs
or
cmp
xchg
ss
add
out
testl
adc
lds
outsl
fcoms
lahf
out
sahf
and
enter
xchg
add
push
ret
or
movsb
ja
icebp
inc
ja
xor
xchg
jb
mov
jmp
outsl
adc
ss
test
sarl
out
ds
add
add
xor
sub
fs
jb
jmp
sbb
rcrl
xor
push
push
int
and
mov
cmpl
xor
cmpsl
xor
cmp
cmc
out
in
add
ljmp
inc
adc
pop
imul
in
das
stc
mov
jecxz
xor
sub
int
adc
jp
mov
and
jno
mov
data16
sbb
les
jno
jb
cmp
dec
mov
add
sub
pusha
pop
mov
jnp
repz
insb
xor
out
lods
mov
mov
sub
rcll
ds
mov
sbb
pop
and
gs
cmp
add
mov
ds
aam
gs
xchg
cmp
sbb
mov
mov
mov
sbb
sub
les
pop
enter
sbb
cwtl
ret
jge
jo
add
pop
scas
nop
xor
outsb
inc
pop
add
push
gs
or
adc
dec
cltd
adc
xchg
pusha
xchg
fwait
in
or
fdivr
cmp
stc
into
pushl
mov
loopne
sub
push
or
outsb
cs
outsb
loop
aaa
bound
or
inc
repz
inc
sub
add
cmp
dec
pop
cmp
cwtl
and
xchg
push
xchg
push
sbb
cmp
mov
mov
xchg
frstor
subl
xlat
lds
ret
fidivs
add
bound
cld
cltd
cmp
xor
pop
push
sahf
movsl
cmp
sub
hlt
insb
push
push
negb
mov
cmpsb
mov
dec
add
imul
aaa
sbb
into
lcall
aam
in
outsb
in
jnp
and
je
movsw
xchg
stc
out
imul
cmc
mov
push
push
pusha
int3
sub
cmp
adc
sbbb
hlt
jbe
sub
mov
js
fstps
stos
movsb
cld
lret
mul
bndstx
jl
or
imul
aam
cli
ds
xor
das
je
pop
dec
dec
nop
ljmp
or
xchg
addl
pop
inc
cwtl
mov
xor
xor
mov
dec
mov
mov
insb
and
cmp
std
add
pop
pushf
fnstsw
call
scas
mov
push
popa
movsb
dec
jl
imul
jle
push
aam
sbb
mov
and
cmpsb
test
pop
mov
mulb
lret
add
adc
popa
jo
xchg
imul
add
adc
stc
sbbl
fistpl
mov
mov
mov
cmp
sbb
mov
inc
test
add
and
addr16
xor
or
js
xchg
mov
push
fcomip
out
add
mov
adc
clc
push
lcall
inc
add
push
loope
dec
xchg
adcb
cmp
jle
lahf
xor
pop
cmp
push
lds
ljmp
push
xchg
adc
data16
stc
movsb
or
fcompl
mov
mov
sub
adc
insb
lods
lds
push
inc
pop
adc
shlb
push
or
imul
cmp
adc
scas
fidivrs
dec
dec
repnz
sub
rcrl
xor
loop
insl
cmpl
mov
or
int3
push
xchg
aam
fisttps
mov
loop
hlt
ret
shrl
hlt
mov
fstl
mov
addb
mov
xor
sub
pop
jne
icebp
inc
mov
fildll
in
jmp
push
push
fsubrs
mov
adc
test
cmp
lcall
mov
jmp
or
mov
popf
stos
mov
xchg
fwait
mov
movsl
mov
jbe
daa
fnsave
lret
inc
jb
xchg
mov
xchg
cmp
lcall
xchg
je
cs
fcomps
and
loope
ret
loope
pop
mov
popa
lcall
and
sbbl
add
xlat
pop
cli
xchg
sbb
mov
sbb
seta
mov
xor
jnp
push
mov
xor
adc
xchg
neg
jge
xchg
pop
addl
or
es
outsl
test
addr16
idiv
das
cmpsl
imul
and
push
add
sbb
ss
mov
sarl
test
fcoml
mov
and
mov
pop
arpl
inc
imul
lods
es
add
inc
mov
jae
mov
jge
adc
dec
mov
sbb
dec
inc
mov
imul
sbb
jmp
es
and
paddb
lcall
xchg
ficoms
fstps
or
xchg
mov
ret
mov
mov
lods
xor
jp
or
insl
out
xor
data16
popl
inc
mov
pop
sub
xchg
rcrb
ror
and
int
or
idivl
xlat
fsubs
jge
mov
jae
and
js
aad
jl
test
mov
inc
jmp
imul
xchg
bt
cltd
lret
and
in
dec
scas
mov
icebp
iret
das
mov
pop
fistl
adcl
scas
sub
daa
cld
add
lea
pop
mov
je
insl
fnstcw
shrb
dec
xchg
outsl
repnz
gs
dec
mov
dec
sub
rcl
fdivs
ja
dec
sub
cmpsb
ret
or
lds
sub
test
cmp
sub
subl
test
push
mov
dec
xor
es
sbb
repnz
jge
movb
mov
mov
roll
push
xchg
cli
popa
and
sbb
jecxz
push
fs
push
push
xchg
arpl
push
or
addr16
fistpl
jl
cmpsl
push
test
fsubl
mov
xor
in
jno
ret
addr16
cmpsb
lods
out
shll
and
icebp
xorl
xor
jle
push
mov
sbb
imul
imul
and
add
push
je
fmuls
dec
xor
dec
xchg
in
in
mov
lea
cltd
int
cmpl
hlt
push
push
int3
adc
push
mov
push
lock
fstp
in
ret
add
mov
mov
push
ret
xor
std
and
cmp
out
outsl
jo
xor
push
nop
xchg
movsb
imul
scas
je
mov
pop
mov
ljmp
cmp
pop
dec
mov
dec
lcall
and
lea
repz
outsb
int3
cwtl
data16
cmpsl
pushf
lahf
mov
pop
jo
lds
aam
pop
lea
xor
ret
cmp
mov
add
rolb
mov
push
sbb
jmp
jecxz
mov
divl
ret
cmp
clc
mov
popf
push
add
js
or
add
test
outsb
adc
movsl
push
adc
jge
mov
fadd
jmp
push
iret
shr
movsl
mov
and
mov
lcall
cltd
stos
jns
adc
imul
in
aaa
inc
sbb
lds
lret
sub
push
cmc
daa
inc
repnz
cmp
adcb
push
popa
dec
icebp
js
dec
inc
push
test
sub
mov
add
outsl
mov
outsl
push
and
shlb
mov
jl
or
jle
adc
mov
repnz
scas
jg
xor
mov
push
xor
sbb
jl
push
xlat
mov
popf
pop
sbb
xlat
push
orl
repz
and
ret
clc
pop
mov
repz
cli
rcrl
movsl
mov
and
sbb
mov
and
and
in
ljmp
sbb
push
sahf
xor
mov
inc
popf
cmp
lds
mov
dec
stos
cs
mov
in
push
jb
stos
cmpsl
sub
cltd
mov
inc
cmp
sub
adc
pop
std
divb
or
inc
dec
sahf
mov
mov
and
je
lret
insl
mov
adcb
movd
fildll
arpl
pushf
push
rcrl
cmp
mov
fildll
xor
adc
lods
mov
lods
xchg
sbb
jns
imul
jae
fmull
cmp
jne
imul
sub
ficompl
mov
cld
sub
push
jno
mov
int3
push
testl
cmp
gs
mov
popa
int
adc
mov
in
aaa
out
in
sti
stc
or
loope
addr16
clc
inc
push
shll
ror
bound
hlt
inc
pop
add
mov
aaa
lods
jo
gs
data16
push
lods
out
ret
ret
lock
fdivrl
stos
int3
xchg
pop
inc
loope
add
inc
mov
sub
jge
shrb
sti
jg
cld
in
add
les
and
xchg
jle
iret
imul
xchg
fldl
test
mov
subb
mov
aam
push
test
leave
ret
pop
sub
es
movsb
adc
dec
das
jns
dec
inc
sbb
xchg
out
out
pop
scas
jg
pop
sar
add
mov
mov
leave
mov
int
mov
pop
aad
mov
pslld
mov
sbb
aaa
ja
pop
mov
mov
or
das
push
jb
jl,pt
loopne
jb
filds
lcall
shll
pop
test
pushf
mov
inc
push
pop
pop
jge
aad
fisubl
dec
inc
loop
lahf
popf
aam
sub
out
dec
pop
setle
lods
jle
mov
adc
jae
sub
lret
icebp
inc
fbstp
in
mov
mov
push
cwtl
lret
ficompl
out
rcrl
xchg
popf
idivl
fdivrl
sub
jae
cltd
popa
mov
cmp
or
cs
fwait
js
shrl
lcall
or
cmp
or
or
or
jp
jbe
mulps
test
mov
lds
adc
or
pop
sub
cli
or
ds
jns
sub
lret
inc
orl
jecxz
jecxz
xchg
cmp
out
shll
movsl
lea
rclb
cld
mov
xor
jnp
popa
test
call
les
xchg
shll
lea
push
and
stos
dec
adc
loop
mov
loopne
popf
push
pushf
out
divl
or
xchg
and
test
xchg
insb
ret
push
mov
sarl
inc
mov
icebp
cltd
fnstcw
pusha
jo
ret
imul
cmp
sahf
and
ret
rcrb
pop
addr16
cmp
daa
sub
test
mov
jp
xchg
mov
mov
adc
es
pusha
imul
inc
inc
inc
and
cmp
xchg
aad
dec
add
sbb
insb
loope
push
lock
jno
jge
mov
pop
loop
jl
add
dec
pop
push
nop
stos
inc
and
movsl
sub
insb
mov
xor
mov
and
dec
pop
adc
jge
inc
or
push
ret
fst
jl
mov
lds
mov
pop
pop
sbb
aas
sbb
test
arpl
mov
push
leave
ss
aam
fs
aas
out
add
jg
pop
int
sub
mov
bnd
pop
add
cmp
mov
pop
dec
in
add
xor
cmpsb
fcoms
sub
dec
aam
fldl
dec
and
sahf
mov
pop
pop
cli
xchg
cltd
mov
in
jmp
xlat
xlat
mov
xor
sbb
lret
mov
popa
xor
daa
in
mov
cwtl
xor
fucomp
sub
cmp
cmp
lods
test
pop
xor
pop
jecxz
adc
mov
jo
xchg
test
inc
aaa
sahf
add
adc
cmp
pop
jno
dec
aad
bound
pop
pop
sub
fidivl
xchg
lret
or
xchg
mov
add
jns
shrl
adc
mov
pop
and
fdivrs
pop
sub
aam
dec
sub
mov
cmp
mov
dec
gs
jmp
sbb
dec
pop
inc
iret
add
pop
shr
adc
inc
push
mov
out
push
into
cmp
and
dec
pop
pop
mov
xchg
xlat
xchg
sub
mov
mov
aad
xor
lret
sbb
in
repnz
cld
aam
call
jb
pushf
das
ficompl
push
push
pushf
sub
jno
shrb
or
sbb
add
das
adc
into
scas
add
mov
aaa
push
push
sbb
jmp
push
xlat
aas
xor
pop
cmpb
dec
xor
insl
ror
sub
push
or
pop
enter
sub
dec
jno
ret
push
push
movsb
das
dec
mov
mov
test
push
scas
andl
dec
sub
xor
dec
insl
mov
fs
xlat
js
test
scas
jns
aad
gs
xor
popf
cld
add
pop
add
roll
xchg
leave
test
lds
ljmp
pop
add
mov
rorb
xchg
out
and
xchg
call
dec
mov
je
cmp
inc
mov
jns
push
mov
adc
dec
data16
inc
in
hlt
pop
lcall
jmp
xchg
lcall
push
es
mov
in
ficomps
adc
adc
js
mov
and
gs
jle
int3
push
popa
sub
ja
mov
outsb
push
mov
fs
pop
aaa
movsb
mov
subb
jno
cmpsl
inc
xchg
data16
out
jae
cld
push
loop
add
or
aad
sub
je
pop
push
aam
add
sahf
sarl
popl
rolb
imul
jae
imul
fsub
aaa
arpl
stc
std
push
repz
popa
xchg
sub
clc
push
loopne
xor
jl
sahf
leave
or
xor
or
xor
mov
mov
mov
cmp
sbb
cmp
cltd
lods
nop
in
cmp
pop
clc
and
jno
and
mov
outsl
test
sbb
or
mov
movsl
sub
adcb
ret
xchg
sbb
xor
push
data16
movsb
push
mov
ds
fisttpl
mov
push
addl
dec
test
pop
in
or
imul
lcall
jecxz
cli
aam
cmp
mov
lds
aad
inc
lahf
xor
inc
jnp
xchg
push
add
inc
rep
fbstp
mov
cwtl
dec
int
pop
cmp
rorl
jno
sbb
rol
jg
inc
js,pn
xchg
and
scas
and
ficoms
shll
xadd
sbb
fdiv
sahf
stos
shll
mov
mov
adc
cmp
add
mov
scas
and
pop
push
lcall
adc
sub
ss
cmp
mov
jno
xor
out
push
in
cmp
cmc
leave
mov
repz
sub
and
cld
fmull
lcall
push
nop
mov
xor
adc
icebp
pop
xchg
loopne
out
inc
mov
lcall
sub
lahf
adc
cltd
xchg
push
xchg
insl
iret
lret
sub
cmp
push
push
mov
mov
shrl
xchg
mov
mov
push
cmpsb
cmpsb
je
jl
shlb
mov
mov
pop
dec
lcall
jns
xchg
pop
dec
subb
and
cltd
push
xor
int3
loop
mov
add
add
or
push
test
scas
sub
mov
sub
inc
into
jae
mov
test
jae
lret
push
or
mov
in
dec
jae
jno
pop
aas
xchg
mov
add
and
jae
pop
ror
call
ds
aas
daa
cmpsb
pop
cmp
inc
in
pop
xor
inc
insl
pop
lea
jno
xchg
pop
jb
fnsave
mul
pushf
scas
lahf
cld
lcall
das
adc
pop
xchg
mov
aad
out
or
sbb
sbbb
xchg
cmpsb
cmp
mov
cmp
movsl
pop
shl
xchg
test
mov
nop
inc
or
mov
shll
les
push
xchg
inc
es
clc
lea
outsb
clc
add
scas
mov
mov
cmp
icebp
lea
inc
loopne
cmp
push
fadd
lcall
arpl
test
mov
sub
cmpsl
mov
sbb
mov
ds
jnp
sub
aad
inc
add
push
and
sbb
mov
jb
mov
push
cwtl
push
pop
out
xor
sti
lcall
loopne
push
jmp
push
repnz
dec
mov
lahf
fs
test
sahf
rolb
daa
add
vpcmpeqb
cmp
mov
iret
test
outsb
ds
leave
mov
aas
ret
add
and
in
in
inc
jp
lcall
sbb
lds
sbb
push
pusha
mov
rorl
xchg
fucomp
mull
cli
je,pt
or
ds
insb
in
jnp
mov
xor
addr16
xor
incl
loope
xor
divb
or
jge
sub
mov
and
out
mov
ss
pop
popa
and
pusha
mov
mov
xor
dec
imul
xchg
lea
adcl
sub
out
sub
cmp
test
cmp
lods
lret
rcl
test
stc
stos
in
push
or
repz
jns
idivb
aam
lret
jns
mov
in
ret
dec
mov
push
xor
rorl
xchg
iret
add
push
mov
jbe
mov
pop
je
lods
jg
or
movsb
sub
scas
ja
pop
call
push
xorb
xchg
lods
cld
push
fisubrs
repz
pushf
jmp
fldl
int3
daa
xor
bound
mov
fadd
outsb
mov
test
jns
xchg
inc
lds
inc
movsl
ret
es
faddp
roll
cwtl
dec
xor
add
scas
xor
icebp
dec
loopne
int3
sbb
movsb
pop
inc
sub
scas
stos
inc
es
test
std
xchg
lods
jo,pt
cmp
sub
sub
cmc
xchg
dec
push
in
mov
in
fs
divl
sub
stc
cld
xchg
orl
les
sbb
pushl
std
xor
loope
xchg
mov
mov
out
sbb
lret
inc
lock
or
mov
xlat
sbb
add
shll
pusha
lods
call
push
add
or
das
jne
lcall
std
sbb
jge
ss
idivl
lds
push
or
dec
add
cmp
jae
mov
jecxz
mov
das
pop
mov
xor
fwait
addb
adc
cmpl
mov
faddl
xchg
imul
inc
lea
fidivrs
sub
pop
fcoms
push
cmp
push
stc
mov
cmpsb
push
pop
cmpsb
fmull
into
adc
cli
xor
or
mov
test
pop
pop
adc
in
dec
mov
xchg
and
cmp
and
cmp
xchg
cmpl
and
sub
lea
stc
fsts
lods
push
xor
dec
test
dec
jb
bound
mov
in
mov
loopne
sbb
les
sbb
rcll
and
cmp
lahf
inc
sub
int
sbb
repz
js
mov
or
sbb
push
fsubl
cmpsb
movsl
sbb
rolb
sub
mov
dec
pop
scas
add
mull
sub
shrl
mov
adc
nop
pop
cmp
movsl
and
jbe
dec
and
mov
mov
dec
cwtl
imul
pushf
bound
dec
push
jne
pop
inc
xchg
jnp
in
ficomps
sahf
pop
xchg
sbb
outsl
pop
sbb
adc
sub
xor
in
pop
jne
in
jge
rcl
iret
popf
rclb
out
mov
push
jnp
mov
dec
add
mov
shl
daa
ret
call
cmp
fimull
insb
mov
mov
popf
icebp
pop
pop
cmp
in
add
fstpt
ret
insl
popa
mov
sti
jo
fadds
in
orb
scas
enter
adc
je
shll
or
pop
add
jp
jne
mov
mov
jge
fstpl
push
enter
dec
push
icebp
or
sbb
push
or
int3
or
cltd
sub
scas
sub
hlt
mov
jmp
int3
mov
dec
call
push
fiadds
xor
adc
aas
mov
in
inc
movsb
test
das
cs
loop
pop
push
sbb
and
adc
into
mov
xchg
enter
or
in
pop
sub
xor
or
push
sbb
xchg
scas
and
mov
and
mov
xor
mov
dec
mov
cmpsl
xlat
inc
adc
and
pop
and
sahf
lret
arpl
mov
jns
mov
test
pop
loop
sahf
stos
fs
sbb
mov
add
or
out
adc
push
divl
dec
jp
negl
mov
push
jne
pop
mov
mov
cwtl
adc
enter
dec
or
in
mov
outsl
in
jno
mov
scas
shl
xchg
ja
sbb
xchg
mov
pop
push
sub
mov
inc
imul
jmp
inc
dec
loop
mov
dec
repz
mov
repnz
mov
cmp
ret
jo
rorl
arpl
mov
jae
lret
and
cmp
add
aaa
or
mov
add
iret
repnz
jno
mov
cld
pop
hlt
lea
insl
inc
sbb
mov
enter
push
inc
push
adc
jge
stc
mov
and
xchg
comiss
mov
dec
out
cmp
les
pop
std
iret
mov
mov
or
pop
daa
insb
lret
imul
nop
push
mov
scas
mov
loopne
mov
inc
pop
pop
je
sub
cmc
jl
xor
pop
push
sbb
jmp
out
cld
push
inc
pop
es
pop
or
sbb
lock
js
dec
shll
jb
jne
cmpsb
mov
jb
loop
enter
sub
movsl
mov
gs
ljmp
loop
lcall
adc
push
out
cmp
and
pop
andb
xchg
jae
shrl
fadds
fadds
jnp
pop
inc
cmpsl
adc
and
fwait
add
xchg
add
jge
les
bound
lea
mov
sub
popf
mov
es
pop
pop
addl
cwtl
pop
mov
into
fisubl
hlt
lcall
cli
insb
ds
push
movsl
fcoms
mov
repnz
or
mov
add
gs
sbb
mov
sub
in
cli
mov
aam
or
int3
xchg
out
ret
sub
xlat
sub
loop
fisubrl
mov
cltd
push
aaa
sub
and
or
std
jge
cmp
ja
nop
subb
inc
sbb
jl
faddp
sbb
loopne
and
jmp
bound
stc
inc
xchg
push
int
push
and
inc
lret
xchg
pop
mov
inc
ficomps
sub
iret
stos
inc
pop
jne
cltd
jae
fdivl
jle
sub
andb
repnz
push
stos
push
fucomip
mov
mov
shll
hlt
xchg
and
imul
arpl
imul
mov
sti
jge
filds
popf
les
jle
mov
mov
loopne
adc
sbb
push
and
xor
ja
fdivs
ss
xor
ja
pop
push
mov
push
xor
lock
push
scas
insb
enter
xchg
je
sarb
shlb
jge
je
adc
jl
lret
pop
stos
adc
add
jge
sbb
sub
jge
in
out
xchg
ja
aam
fmuls
sbb
test
dec
pop
xor
or
mov
xlat
in
lds
and
sbb
pop
dec
subb
cmp
jp
mov
or
ret
rorb
xchg
mov
nop
lahf
int
jne
mov
mov
pop
inc
cmp
aas
xor
mov
xlat
inc
mov
cmp
sbb
jmp
fldenv
and
xor
aaa
xchg
xchg
fldcw
popa
popf
lret
push
gs
pcmpeqw
ja
in
dec
xchg
sbb
cmp
arpl
mul
aaa
std
repz
push
mov
je
pcmpgtw
mov
push
mov
movsb
ret
daa
xchg
fidivs
xchg
xchg
and
sarl
xchg
pop
fadds
notl
out
lods
and
imul
cmp
adc
dec
call
pop
mov
adc
jbe
gs
or
add
in
sbb
pop
lods
clc
mov
stc
cmp
fwait
push
in
test
sub
dec
sbb
rclb
sbb
mov
decl
push
bnd
cmp
cmp
test
shrb
inc
outsb
stos
push
filds
test
es
add
pop
add
fcmovnbe
jp
cwtl
dec
decl
outsb
jne
and
jge
rcr
xorb
dec
dec
and
iret
ret
push
test
aas
sub
test
mov
mov
fisubl
in
xor
and
stc
mov
adc
sbb
ficoms
jae
pop
fmuls
jge
repz
cmp
mov
xor
mov
xor
mov
repz
cld
scas
pop
insb
fbld
mov
std
vmovntps
shld
add
testb
pop
cmpsb
mov
mov
xchg
dec
pop
cmp
sbb
test
jno
gs
mov
test
cmp
into
dec
ret
or
test
push
cmp
or
mov
jne
xchg
adc
sub
add
aam
add
sub
lods
pop
imul
leave
sbb
mov
xchg
add
pop
sub
ja
inc
jge
shll
das
and
cmc
jae
xchg
mov
push
mov
pop
cltd
jecxz
jb
ljmp
andb
insl
loope
pop
or
sub
pop
add
cmp
bswap
xlat
xchg
adc
jnp
inc
mov
js
push
arpl
dec
dec
and
dec
int
rcrb
insl
mov
insb
mov
andl
mov
add
loopne
jge
xchg
xor
pop
stos
xor
xchg
aam
lock
and
testb
and
xor
mov
dec
lds
pop
lods
insb
loopne
mov
jle
bound
pop
mov
fcompl
push
add
iret
adc
in
add
mov
mov
mov
mov
imul
mov
or
sahf
es
push
mov
flds
cmp
sti
dec
leave
imul
arpl
mov
test
cmp
sbb
clc
sub
push
dec
dec
xchg
cwtl
cwtl
cltd
dec
ja
rclb
clc
int3
divb
push
sub
jmp
push
sub
sti
jae
mov
aas
lret
mov
xchg
iret
add
mov
shr
add
out
stos
or
mov
push
mov
addl
leave
xorb
out
cmp
sub
sarb
mov
data16
mov
mov
jge
imul
notl
es
add
mov
dec
pushf
lahf
lea
xchg
xchg
push
or
xchg
mov
cmc
sbb
into
adc
sub
sub
out
fidivs
lret
mov
adc
iret
cwtl
in
frstor
punpckhdq
aas
mov
out
inc
es
lcall
push
and
mov
cmpsl
mov
movsl
mov
pop
jge
movsb
imul
inc
inc
insb
push
mov
lods
xchg
jbe
mov
shlb
xlat
insl
popa
je,pt
cmpsb
pop
inc
sub
fbstp
fsubs
mov
fldt
jbe
pop
jmp
xchg
fwait
sbb
popl
sbb
or
jge
or
repz
push
outsl
mov
or
mov
inc
xor
stos
inc
inc
andb
scas
pop
push
dec
inc
pop
dec
into
fidivrs
xor
fwait
pop
insb
imul
mov
cmp
stos
and
scas
jmp
or
xlat
subb
sub
xchg
movsb
dec
dec
mov
sbb
mov
pop
loop
mov
mov
fs
ja
ljmp
ret
inc
dec
pusha
movb
sub
arpl
and
sbb
and
jge
lds
and
ja
hlt
jbe
sbb
fisubrs
xor
jl
mov
inc
ret
fcomi
lcall
jno
ret
test
xchg
ret
dec
ret
push
jl
inc
cmovge
jo
lea
es
mov
shrl
jo
fisubrs
cmp
shl
pop
mov
cld
test
in
inc
insl
jb
jbe
lret
adc
mov
dec
loopne
rcrb
in
les
repz
lcall
inc
cmc
and
and
xor
fnstsw
data16
mov
testl
pop
iret
jp
out
sbb
stc
sbb
add
xor
incb
lea
dec
and
jnp
aad
packssdw
cmpl
das
outsb
push
arpl
jge
nop
push
mov
sbbl
xchg
xchg
push
cs
flds
push
ds
pop
cmp
cmp
mov
and
stos
ss
cld
loop
movsl
sub
divl
repz
rol
jmp
mov
and
neg
cmp
shr
lods
insb
mov
cmp
mov
out
int
jb
addr16
enter
mov
clc
push
in
lock
xchg
mov
cmc
mov
sbb
ffree
in
movsb
inc
es
inc
stc
ret
lret
mov
popf
jo
pop
shll
sbb
or
pop
adc
inc
outsb
inc
loope
push
out
xchg
lcall
sbb
mov
pop
cli
popf
cmp
sbb
pop
arpl
movsl
jne
outsl
shlb
cld
cmp
xchg
push
xchg
dec
mov
fcoml
push
in
je
xchg
dec
pusha
jg
mull
pop
sub
loopne
push
push
sti
ret
mov
call
inc
icebp
inc
lret
ret
jle
push
mov
mov
mov
mov
mov
mov
sub
enter
dec
cwtl
and
rcll
popf
jmp
pop
xchg
cli
adc
push
popa
shll
mov
movsl
into
pusha
bound
lret
rcl
insl
fiaddl
xchg
and
bound
aas
push
shl
push
xlat
std
movsb
adc
sbb
das
pushf
sub
jne
dec
iret
jmp
push
jne
lods
ss
aam
xchg
pop
sbb
ret
hlt
sbb
sbb
orb
nop
enter
cwtl
add
jp
enter
push
xchg
leave
repz
test
cmpsb
lcall
roll
mov
and
xchg
mov
dec
aad
inc
ret
push
fstps
push
das
mov
sbb
mov
xlat
push
mov
mov
inc
pushf
pop
inc
inc
add
roll
loopne
adc
shlb
int3
fidivl
enter
and
mov
cmpsb
inc
out
adc
sbb
mov
jo
cmp
add
iret
push
mov
mov
push
jg
or
cmp
add
sbb
inc
ret
pop
mov
jecxz
pop
insb
inc
sub
in
in
xchg
lea
lock
push
fimull
cmp
cs
ds
pop
cld
orb
out
popf
mov
dec
mov
mov
cli
scas
mov
int3
mov
push
mov
xchg
push
cmc
andl
movb
mov
push
aad
push
pop
jne
daa
inc
sbb
test
jl
mov
xor
dec
xchg
testl
xchg
push
addb
enter
xchg
lret
ds
push
adc
or
test
movsb
outsl
mov
pop
add
int3
pop
aam
dec
scas
test
cmp
and
inc
adc
ftst
jns
push
rcrl
inc
hlt
dec
cmp
mov
popf
jnp
mov
sbb
cmp
divl
call
pop
call
and
ret
lcall
mov
fsts
push
xor
dec
xor
or
xor
cmpsl
mov
leave
fdivrp
mov
push
mov
mov
sbb
mov
in
movsl
lock
scas
sbb
lahf
jo
ss
mov
push
inc
sub
hlt
xchg
xor
mov
ret
sbb
mov
loopne
pushf
daa
adc
fadd
stc
jecxz
lcall
outsl
sarl
bound
inc
lods
sbb
push
inc
mov
mov
sahf
adc
hlt
scas
mulb
cmpsl
or
adc
jge
xchg
pop
jno
scas
dec
ss
sbb
jmp
movsb
lret
mov
jbe
insl
imul
sub
push
push
adc
es
cmp
loopne
inc
das
mov
loopne
xchg
rcrb
add
fidivrl
mov
movsb
or
dec
sub
lods
aam
mov
js,pn
xor
push
adc
jl
in
jle
sub
jl
sar
jmp
jo
cmp
or
mov
pop
jns
je
mov
stos
and
cmpsb
notb
xor
xchg
pusha
daa
push
ret
sub
outsl
cmpsb
add
test
push
dec
cmpsb
mov
test
int
pop
or
fcmovnb
push
inc
and
in
pusha
jp
pop
xor
ret
repnz
and
xchg
lods
mov
jl
sub
js
xchg
sbb
dec
js
out
adc
rcrb
out
xchg
rolb
inc
mov
jl
pushf
stos
xchg
push
cmp
insl
sbb
mov
inc
jns
in
mov
sub
push
add
arpl
inc
jns
lods
into
in
mov
jne
sbb
jge
pop
ss
push
mov
in
mov
out
out
sahf
xchg
jle
lret
or
add
push
sbb
inc
sub
or
stos
pop
cmp
sahf
sbb
das
adc
push
or
mov
nop
scas
adc
das
das
dec
cwtl
movsb
xchg
cmp
mov
mov
mov
ds
aam
sub
mov
inc
aaa
scas
adc
sub
jecxz
cmp
cmpsl
adc
push
mov
fwait
xor
pop
jo
out
dec
inc
push
mov
fistpl
dec
sahf
iret
dec
jae
shlb
lock
lcall
pushf
aas
mov
mov
xchg
lds
insl
aam
jmp
iret
mov
pop
add
xchg
jmp
and
or
add
adcl
mov
mov
icebp
and
insb
in
pop
cmp
mov
jge
push
jg
sub
sub
ds
jecxz
sub
nop
inc
xor
mov
xorl
in
push
test
sub
aaa
mull
lock
sarl
inc
stc
mov
add
fs
loopne
mov
fstpt
mov
mov
inc
orl
lahf
pop
fiaddl
xlat
and
stos
fisubl
mov
and
cltd
adc
add
scas
bound
sub
into
add
jecxz
dec
xchg
popf
mov
pop
das
ret
or
sub
bound
mov
and
loop
out
out
pop
imul
fcmovne
mov
stos
xor
lock
ret
mov
ljmp
out
mov
cmpsb
xor
lds
adc
popf
xor
jmp
jo
insb
mov
psadbw
nop
stc
fwait
inc
jmp
data16
adc
repz
xchg
inc
imul
ret
jmp
push
shlb
mov
push
jb
rorl
xor
mov
mov
cli
hlt
js
jnp
push
cmp
aas
mov
ficoms
dec
adc
sbb
lds
popa
sub
mov
mov
cmp
adc
cwtl
iret
xor
repnz
jle
movsl
push
xor
push
jb
cmp
shlb
jmp
jl
sbb
std
imul
jmp
cmc
jle
test
cli
mov
pop
shll
movsl
outsl
imul
in
add
sbb
insl
push
test
or
call
cmp
jae
lock
xchg
add
fcoml
jo
stos
add
dec
sti
loope
cmpsb
leave
addl
xchg
clc
rorl
fnstenv
xor
pop
sbb
aas
addr16
popl
popa
out
aas
sub
mov
ret
push
pop
imul
lcall
mov
addr16
into
adc
dec
outsl
pop
nop
mov
stos
je
pop
or
xor
testb
test
mov
add
jne
adc
jno
imul
push
xor
jmp
dec
xchg
push
sahf
cld
xor
pop
ret
ss
cli
xchg
push
pop
clc
inc
sub
adc
out
inc
cmp
lahf
push
jle
lahf
insl
dec
push
xor
clc
adc
stc
and
ss
fbstp
sbb
push
fxch
mov
in
lods
push
dec
cmp
call
jno
inc
movsb
adc
cmpsb
addb
sbb
push
mov
cmp
sbb
jmp
xchg
cmp
pminub
adc
mov
push
add
push
add
dec
jbe
ret
data16
clc
xor
push
ret
sahf
mov
ljmp
inc
paddq
adc
insb
test
call
icebp
sub
xchg
sub
pop
out
xlat
push
popf
lds
roll
dec
aas
xor
aaa
add
daa
aaa
fistps
sub
popf
jmp
je
push
sub
mov
inc
into
fstpl
jbe
fstpt
movsb
push
lea
out
aas
test
test
jp
pop
popf
rcrl
stos
in
or
xchg
subl
ljmp
jnp
mov
sub
gs
fiadds
mov
repz
ds
out
and
and
jp
add
in
ret
sub
fsubl
sbb
das
andb
leave
mov
lods
lret
sbb
push
or
or
inc
mov
lret
ljmp
sub
mov
inc
test
pop
int3
dec
mov
jbe
fnstenv
push
popf
xchg
add
stc
pop
and
jns
push
bound
or
cli
jo
icebp
jg
rcrb
add
xchg
xchg
push
ss
pop
sub
jecxz
mov
rcrb
loopne
daa
xchg
push
out
jne
out
psllw
mov
imul
sbb
loop
push
mov
out
in
add
pop
pop
dec
pushf
jp
xor
subl
cld
rcll
mov
test
repz
shrb
icebp
sub
test
push
nop
sub
pop
dec
and
xor
dec
cmp
fdivrs
out
adc
out
mov
pop
out
call
cmpsl
mov
mov
jle
in
movsb
jecxz
jbe
push
inc
imul
je
or
out
cmpsl
jb
and
mov
fs
pop
sbb
and
cmp
insl
nop
jmp
pop
push
rclb
insb
cmp
push
insb
dec
mov
sub
sub
sbb
or
test
and
cmp
dec
mov
dec
dec
aad
jae
add
cmp
les
imul
adc
push
dec
loopne
testl
in
int3
out
lock
jbe
lret
enter
mov
fnsave
cmp
loopne
sub
jecxz
cmp
pop
adc
add
mov
jbe
sahf
fsubr
icebp
pushf
mov
pop
movsb
xchg
sti
sub
cld
test
pop
xor
std
ja
mov
mov
pop
loop
adc
outsb
mov
mov
or
adc
and
lret
pop
and
and
data16
sbb
mov
and
cltd
sbb
cwtl
mov
cmc
sahf
xchg
int3
add
fcompl
cmpsl
data16
daa
dec
push
inc
push
enter
fwait
pop
dec
lret
out
mov
inc
adc
push
pop
enter
xlat
inc
pop
daa
lock
and
cs
inc
lods
xor
dec
mov
xchg
lock
mov
sbb
lcall
mov
inc
aam
cmp
sti
xor
insb
sub
and
xor
sbb
popa
loope
mov
dec
or
stos
testl
cmp
xlat
mov
xchg
das
jl
lret
mov
add
aas
mov
lods
lret
mov
or
daa
jbe
in
push
scas
jns
shll
xor
stos
std
ljmp
adc
cmp
mov
test
mov
pop
hlt
loope
pop
in
bound
mov
pop
push
leave
repz
push
mov
jmp
mov
inc
and
dec
dec
cmp
jle
pop
pop
jno
dec
dec
pop
mov
cmp
or
es
cmp
xor
or
inc
mov
mov
das
in
and
icebp
pop
add
jmp
lods
sbb
inc
push
add
je
cs
aam
div
push
mov
clc
cmc
fbld
jp
pop
das
ljmp
jns
dec
and
repz
les
xchg
adc
jp
jno
addr16
dec
jmp
mov
cmp
inc
xchg
nop
icebp
pop
xchg
lret
dec
insb
aas
xor
and
xorb
jle
inc
sbbb
shrl
pop
loop
cmp
push
mov
lds
lea
add
test
lret
pusha
cmp
jp
cmp
test
add
mov
ficoml
inc
movnti
mov
pop
or
jg
adc
in
xchg
movsb
adc
inc
inc
pop
lret
outsl
je
jp
push
jnp
outsb
cwtl
push
sub
cmpsl
mov
xchg
cltd
stc
outsb
cmp
add
dec
pop
add
inc
or
fiaddl
mov
jno
xchg
adc
cmpl
cli
adc
jbe
and
sbb
mov
rcrb
es
in
sbb
js
hlt
bound
rcr
in
xor
push
in
jle
jns
mov
inc
sbb
xchg
jns
push
jecxz
and
xchg
xor
jmp
inc
add
in
imul
stc
push
inc
data16
loopne
add
or
data16
push
mov
cmp
in
kxnorw
mov
pop
jb
xchg
sub
push
dec
mov
mov
std
lods
popf
sub
mov
add
mov
and
and
adc
pop
icebp
daa
mov
jecxz
mov
cmp
mov
or
inc
mov
fildl
icebp
xchg
cli
jb
bound
jb
adc
add
add
pop
out
std
cmpsl
xor
in
aam
or
push
je
insb
jo
push
jge
stc
and
pop
neg
mov
repz
or
insb
dec
loopne
ret
outsb
pop
or
jecxz
cmp
in
or
cmp
or
jge
sbb
mov
push
xchg
or
jo
mov
stos
mov
mov
xlat
push
movsb
or
fwait
sub
mov
not
dec
lahf
pop
cmp
push
jbe
pusha
cmp
scas
outsl
xlat
sarb
inc
mov
aam
js
inc
and
xchg
scas
lret
out
mov
lock
test
mov
dec
mov
or
imull
push
fcmovnb
in
ja
out
stos
adc
inc
add
adc
loopne
clc
ljmpw
xchg
int
pop
fsubr
mov
cli
jp
adc
jecxz
mov
fwait
scas
in
xor
test
mov
dec
sub
dec
xchg
mov
pop
clc
sbb
fs
aas
lea
filds
and
fwait
pop
in
ljmp
mov
shr
mov
pop
add
mov
dec
mov
bound
movsl
or
mov
and
adc
fiadds
xor
stc
mov
inc
sarl
movsl
cmp
and
xchg
testl
sbb
lods
inc
idiv
ds
dec
mov
fisttpll
xchg
adc
mov
inc
addr16
push
adc
mov
mov
mov
inc
movsb
dec
sbb
cmp
xchg
adc
popf
adc
fistl
pop
sub
fwait
adc
movsb
mov
les
and
imul
jns
push
fistl
aas
lret
in
dec
pop
mov
mov
sub
sub
sub
push
push
inc
idivl
lcall
mov
ljmp
sbb
push
jmp
pop
cmp
jae
cld
add
push
sbb
rorb
or
push
movsl
add
mov
push
jmp
hlt
xor
popf
add
int
mov
inc
pop
loopne
push
mov
xchg
sahf
lods
cmc
mov
push
pushf
sbb
xchg
dec
jmp
xchg
mov
fs
lock
repz
les
pop
push
inc
hlt
andb
movsb
imul
fs
scas
dec
mov
xor
and
lods
and
sub
enter
add
and
bnd
ret
inc
sbb
xchg
cli
cmp
sbb
pop
shlb
inc
stos
imul
rolb
sar
cmp
push
mov
mov
jo
mov
aam
inc
jns
pusha
push
in
mov
mov
insl
clc
push
push
aas
dec
lret
jmp
mov
js
nop
fldcw
xchg
and
incl
fdiv
xor
rcll
aas
sbb
sub
mov
xor
jno
movsb
adc
inc
push
lds
xchg
sbbb
mov
dec
sbb
test
jg
sub
imull
int3
in
mov
ja
mov
imul
icebp
outsl
outsb
push
adc
mov
daa
push
mov
lret
insb
sbb
xchg
xchg
sti
out
push
popf
add
aam
cs
cmpb
fadds
xchg
mov
fcomps
xor
sub
jle
rol
repz
sub
pop
push
jle,pn
push
xor
nop
scas
test
loopne
sub
mov
outsl
rol
stos
jg
bsr
aas
jmp
mov
ficompl
es
inc
jle
test
lret
loopne
rcrb
js,pn
dec
mov
lahf
loope
mov
das
mov
arpl
popf
arpl
mov
jle
dec
xlat
loop
mov
addr16
sarb
insb
push
sbb
movsl
out
enter
movsb
or
mov
pop
cmc
lret
cwtl
adc
mov
aaa
or
loopne
xor
add
mov
mov
lret
and
lret
loopne
dec
mov
sbb
xor
xor
and
imul
mov
arpl
mov
nop
scas
popa
testl
pop
and
mov
and
bswap
lods
fistpl
push
jae
inc
mov
add
test
jp
lods
jb
mov
cwtl
pop
cmp
mov
xchg
lret
cmpsl
imul
pushf
fildll
stc
mov
cmpsb
loop
loope
iret
out
stos
pop
jmp
insl
pinsrw
stc
cld
imul
popa
jno
pop
bound
push
imul
icebp
cmp
pop
jle
push
inc
pop
adc
dec
int
imul
addr16
jge
fs
dec
push
jmp
stos
push
in
jns
pop
in
mov
push
fcompl
pop
js
cmc
test
scas
es
sbb
cli
sbb
stc
outsb
xchg
inc
fldcw
cmp
lods
cmp
lock
dec
xchg
xchg
pop
jg
data16
jle
lods
sub
mov
in
dec
mov
xchg
es
mov
xor
inc
std
cmp
out
mov
add
lret
push
adc
mov
sub
loopne
add
jns
pop
xlat
and
ds
repz
sub
pushf
or
lds
jbe
inc
pop
xlat
sbb
push
inc
stos
imul
sub
aam
movsb
and
icebp
sbb
lds
mov
enter
adc
adc
sbb
mov
jge
out
mov
jno
test
jecxz
mov
or
pop
and
test
and
das
push
test
mov
leave
adc
push
imul
and
mov
mov
ja
mov
pop
dec
inc
popl
movsl
repz
dec
cmp
leave
imul
sub
xchg
sahf
loopne
mov
mov
inc
xchg
repnz
push
fldenv
xorl
push
cmpsl
rol
add
sub
add
pop
mull
xor
sti
adc
or
xchg
or
popf
es
inc
jmp
cmp
mov
pop
movsb
xor
sub
aaa
not
jmp
xchg
pop
outsl
iret
jno
adc
cmpsb
add
mov
mov
xchg
and
pop
and
ret
call
imul
push
sbb
mov
notl
sbb
xchg
dec
mov
xor
mov
iret
enter
mov
stos
popa
mov
push
out
xchg
sbb
hlt
dec
popa
cmp
dec
lret
mov
jp
hlt
ss
mov
mov
cltd
adc
loop
pop
sub
lahf
fwait
cld
insb
push
inc
sbb
je
in
lcall
push
and
sbb
je
jmp
out
out
mov
mov
outsl
shll
sbb
push
rclb
mov
mov
mov
push
cld
mov
push
and
cwtl
push
mov
shrb
xor
leave
mov
mov
and
ret
push
xchg
ja
cs
data16
xchg
je
and
mov
icebp
ss
push
cmp
pusha
lahf
or
fistpl
data16
fwait
hlt
push
jnp
adc
stc
loope
fidivs
icebp
sub
inc
lods
pop
sub
xchg
sbb
jae,pt
shrl
or
jp
dec
jp
adc
inc
xor
pop
loope
mov
rol
es
daa
fwait
jg
or
mov
pop
xor
and
jmp
sbb
cwtl
in
or
inc
aas
pop
add
xchg
push
mov
fimull
ja
mov
jbe
push
sub
std
xchg
mov
imul
mov
mov
xchg
lcall
fwait
shll
and
imul
push
leave
loopne
les
sub
out
jb
pop
jbe
outsb
xchg
xor
cld
xchg
jge
xor
outsl
adc
push
dec
add
mov
sbb
adc
push
mov
ds
inc
add
cmc
fdiv
fiaddl
sub
or
mov
cwtl
push
enter
adc
cwtl
test
je
mov
pushf
xchg
xchg
in
jb
jecxz
pop
mov
out
mov
popa
mov
dec
inc
xlat
pop
jecxz
insb
push
inc
ds
lods
add
cmp
iret
cmc
ss
icebp
mov
mov
inc
mov
imul
xchg
or
sbb
mov
sti
sub
dec
adc
cmp
repz
inc
stos
sarb
inc
sahf
push
mov
mov
sti
pop
mov
mov
outsb
gs
sbb
mov
dec
scas
test
mov
cmp
iret
pop
cmc
mov
jge
dec
pop
int3
mov
pop
scas
dec
push
sub
cld
push
adc
loopne
cmpsb
mov
xchg
mov
cld
paddd
xchg
outsb
fsubr
push
mov
mov
rolb
xchg
jl
iret
xor
jnp
call
jno
mov
xor
and
lret
out
test
jnp
xchg
or
popf
shrl
mov
pop
repz
add
loope
rorb
arpl
xchg
repnz
sbb
jle
pop
xchg
pop
hlt
lcall
add
jns
mov
test
mov
lret
mov
clc
sahf
movsl
pusha
call
jae
mov
jae
ret
mov
js
adc
cmpsl
dec
repz
ja
daa
es
pop
shrb
test
sahf
out
sbb
rorb
pop
out
lret
pop
lods
out
lods
insl
cmpsb
sub
ja
jo
xor
shlb
bnd
add
sub
loope
cltd
cmc
fisttps
aaa
add
lds
dec
and
call
adc
pop
pop
inc
cli
rcll
inc
scas
xchg
push
in
test
dec
sub
ret
push
jge
scas
mov
ss
cmp
lea
sub
test
adc
mov
cmpsl
sbb
cltd
or
mov
inc
test
fwait
mov
mov
push
test
push
jle
add
lds
cltd
jne
rclb
test
xor
stos
test
shlb
movsb
sbb
inc
dec
js
aaa
add
inc
pop
iret
lret
ja
filds
dec
hlt
xchg
jl
sbb
cmpsb
mov
cwtl
call
ljmp
out
mov
mov
mov
out
inc
pop
or
mov
enter
pusha
movsb
inc
sbb
mov
adc
push
xlat
jbe
push
dec
jne
lahf
xchg
push
cmp
popf
mov
and
or
ss
cmc
mov
mov
insl
jae
out
adcb
cmp
cmp
dec
jno
js
testl
sbb
pusha
inc
popa
mov
fsubl
fs
repnz
add
pop
pop
fnstenv
sub
cmp
mov
scas
clc
cmpsb
push
xchg
push
outsl
lahf
mov
pusha
mov
aas
mov
test
shrb
pop
fisubl
stc
lds
and
add
pop
imul
cmp
or
dec
les
subb
dec
add
mov
ret
push
lret
pop
ja
jbe
idivb
mov
sarl
sbb
fwait
das
aaa
mov
ds
mov
fnstenv
jge
or
imul
stos
mov
std
add
stos
int3
lods
sbb
mov
jmp
jp
jle
outsb
sbb
sbb
call
push
outsl
in
dec
xchg
inc
mov
mov
pop
popf
dec
lahf
xchg
sbb
push
sti
loopne
std
insl
in
test
cmp
fmull
negl
insb
adc
push
jne
movsb
xor
adc
push
lds
scas
idivb
dec
inc
ret
pop
fdivrs
sub
sbb
add
xchg
clc
xchg
mov
int3
aam
arpl
pop
ss
mov
or
dec
dec
mov
loop
test
or
ret
int3
pop
xchg
sub
push
mov
or
fisubrs
sub
sbb
inc
mov
xchg
push
xor
or
lcall
pop
movsl
mov
pop
fst
outsb
fldt
mov
dec
nop
rcr
pop
repz
mov
sub
mov
inc
das
test
mov
test
xor
shr
and
mov
and
inc
push
or
mov
dec
mov
shr
add
stc
pushf
in
pop
shrb
push
lds
pop
arpl
mov
lods
hlt
and
or
popa
xor
pop
jle
inc
sub
call
insb
mov
xlat
je,pn
pop
jecxz
mov
jecxz
mov
js
out
fsub
test
sbb
push
sahf
loop
mov
ret
add
loope
fsts
shlb
and
das
sub
add
out
nop
lahf
jnp
dec
stc
movsb
lret
popa
cmc
aam
js
pop
cli
cmp
xlat
negl
xchg
dec
leave
iret
arpl
and
sbb
inc
mov
pop
int
sbb
dec
xor
mov
sbb
lods
sub
xchg
xchg
inc
insb
cmp
xor
and
shl
jno
inc
and
jge
jne
call
dec
sub
lret
push
ret
adc
jae
push
sub
dec
or
jns
mov
jae
loopne
xchg
pop
mov
jle
dec
aam
adc
rcr
xchg
cmp
sarl
cld
sub
subl
jmp
inc
add
and
mov
xchg
sbb
fnsave
mov
or
xchg
sub
movd
pop
pop
jbe
mov
adc
jnp
aad
testl
out
mov
xchg
sti
lcall
dec
jnp
das
imul
sbb
out
fisubl
mov
jg
mov
sarb
nop
adc
xchg
test
dec
push
dec
mov
mov
adc
mov
lock
ficoml
inc
das
in
repnz
inc
adc
mov
jg
mov
outsl
mov
fsts
cmp
pop
and
or
pop
mov
pop
sbb
mov
clc
push
aad
xlat
cmp
adc
out
in
lock
data16
mov
mov
repz
add
pop
inc
addr16
gs
stos
std
add
ret
movsb
lock
stos
jp
pop
popf
rcr
clc
in
cwtl
std
aad
and
unpckhps
shrb
or
mov
dec
or
inc
js
sub
lcall
dec
pop
and
sarl
mov
mov
lods
mov
sbb
and
cmp
mov
jnp
pop
jns
add
icebp
mov
hlt
stos
and
int
stos
lods
shl
ret
out
rorl
out
gs
push
xor
insb
pop
out
jl
push
arpl
mov
pop
icebp
imul
dec
add
scas
pop
sub
dec
ds
push
incw
mov
ficoms
mov
int3
xchg
sbb
icebp
out
addr16
or
loopne
les
and
mov
dec
in
addr16
cmc
mov
inc
push
add
dec
imul
xlat
mov
call
push
insb
push
inc
adc
out
lahf
jge
mov
fsub
mov
out
sarb
xor
scas
pop
adc
dec
mov
push
pop
sub
cmpsb
in
fistl
jmp
mov
leave
cli
xor
pusha
clc
and
mov
std
dec
push
xor
adc
inc
add
inc
cmp
mov
sar
pop
push
mov
mov
lcall
mov
jo
pop
cmp
push
scas
cmp
loopne
pop
cwtl
lods
fs
nop
imul
imul
xchg
scas
add
cmp
xor
mov
sbb
je
add
rorb
push
mov
stc
test
push
hlt
mov
jnp
dec
cwtl
jns
mov
adc
imul
cmp
imul
mov
movsb
test
cli
jbe
sub
js
shlb
mov
lahf
repz
out
push
or
mov
ljmp
add
in
pop
aad
sbb
push
das
mov
jne
mov
lods
lret
xchg
js
js
fdivr
xor
fwait
add
mov
jnp
sub
pop
push
dec
aas
mov
inc
push
popf
lea
out
jae
test
pop
add
adc
fstpl
scas
or
int3
push
filds
and
mov
stos
pop
cmpsl
icebp
nop
call
jp
out
imul
xor
dec
cmp
sub
shrl
aas
jmp
add
push
mov
test
test
mov
fadds
stos
adc
or
sbb
out
xchg
cmp
cwtl
pop
ffreep
aad
in
cmp
adc
insb
and
pop
shll
fstpl
add
fstps
repnz
jl
outsl
aaa
rcl
xlat
repz
ds
popa
adc
jno
or
aad
enter
outsl
xor
push
jne
mov
adc
rolb
daa
mov
roll
mov
pop
notb
mov
scas
adc
push
stos
sub
mov
sahf
pop
and
or
psubd
fdivl
mov
cli
push
jne
cwtl
inc
add
inc
lahf
out
pusha
mov
inc
xchg
out
fwait
xor
and
test
pop
sbb
adc
fidivrs
enter
ret
adc
push
fnstcw
cmpsl
xchg
push
push
and
popa
xlat
ror
pop
and
and
mov
and
sbb
pop
rclb
or
xchg
or
stc
or
mov
jns
xchg
pop
cli
sbb
push
in
fsubl
pop
int
push
lcall
aam
nop
lret
cs
xchg
ud0
imul
cwtl
sub
sbb
lret
dec
shr
cmp
mov
mov
mov
adc
incb
xchg
mov
xor
ss
lret
cmp
and
cmpsl
shr
es
ljmp
adc
mov
xor
into
sbb
or
push
outsb
mov
lods
cmp
std
inc
xor
mov
sub
dec
daa
in
pop
fcomip
dec
pop
cmc
cs
lds
sbb
pop
ljmp
in
shll
pushf
es
jne
push
cmpsb
insl
pusha
mov
or
push
jecxz
mov
fsubs
push
aas
add
cmc
es
mov
mov
or
or
insb
dec
lahf
das
sub
xlat
sub
scas
inc
mov
insb
pop
push
mov
imull
cmpsb
xchg
out
div
popa
cmpsb
addr16
xchg
ja
leave
mov
xchg
rolb
push
faddl
jg
inc
sahf
enter
je
data16
lgs
roll
cli
mov
pop
lock
and
mov
les
subl
stos
xchg
or
lcall
cmp
enter
push
xchg
xchg
cmp
leave
adc
pop
dec
xor
lds
daa
lcall
mov
mov
adc
push
les
xorb
push
push
ret
cltd
pop
ret
call
sarl
fcmovu
int3
cmpsl
jae
pusha
mov
xchg
je
in
loope
adc
mov
int3
shr
jecxz
lods
mov
add
pop
inc
cwtl
loop
jnp
imul
out
lahf
test
and
mov
xchg
inc
pusha
lahf
out
scas
or
mov
insl
hlt
roll
mov
jns
push
pop
xlat
enter
mov
cmp
pop
les
pop
mov
out
or
sbb
inc
ss
stc
cs
mov
cli
or
sub
int
push
push
loopne
mov
lods
inc
xchg
push
iret
pop
mov
clc
adc
jmp
cmp
rolb
push
out
stos
mov
xlat
std
adcl
mov
ficomps
js
sbb
xchg
add
lcall
jno
test
lods
int3
fbld
dec
icebp
gs
or
cmpb
rol
sbb
call
fucomip
cmp
mov
imul
mov
add
int3
jg
jle
inc
and
lar
loope
test
leave
mov
add
fildll
imul
std
mov
pop
jae
cmc
push
xor
inc
push
daa
shll
iret
mov
out
push
imul
mov
sarb
fs
fsubp
sub
mov
dec
cmovno
xor
mov
xor
fists
cmp
lret
movsl
xchg
mov
pop
push
insb
ljmp
stos
inc
popa
shll
or
dec
ss
cmc
andb
xor
mov
mov
fs
pop
sub
xlat
and
lret
jmp
xor
jbe
sbb
gs
mov
lret
shlb
mov
ljmp
or
test
add
repnz
mov
aas
call
cwtl
insb
mov
push
mov
scas
mov
out
mov
dec
das
xor
push
pop
xlat
inc
cs
mov
xor
or
in
cmpsb
push
insl
push
dec
or
sahf
sbb
mov
out
lds
fidivrl
ret
mov
sbb
sti
mov
mov
int
push
mov
dec
xchg
int3
bound
lcall
popa
jb
lds
fnsave
cmpsl
pop
into
or
or
inc
lock
mov
sbb
test
into
std
add
add
loopne
dec
movsl
mov
rolb
sbb
jl
scas
cmp
push
in
cmp
or
fisttpll
out
xchg
sbb
ja
dec
lret
xor
sub
cmp
into
sbb
mov
jmp
sbb
je
scas
mov
nop
fstl
mov
jnp
dec
jns
ret
popa
sbb
sbb
sub
sub
adc
arpl
or
pop
add
ret
out
scas
shrb
enter
push
dec
outsb
jmp
mov
cmp
out
icebp
fwait
and
out
in
negb
mov
and
clc
jp
jns
inc
repz
jg
les
call
adc
adc
jo
or
lock
inc
cmp
cltd
pop
js
addr16
dec
sbb
hlt
sub
lret
mov
adc
hlt
dec
push
mov
loopne
sub
dec
aad
cmp
into
ljmp
jl
lahf
pop
push
pop
dec
int3
mov
js
les
jp
cltd
ret
adc
das
fisubl
popa
cmp
loop
fs
xchg
push
jg
dec
adc
mov
adc
movsl
add
hlt
leave
pop
out
outsl
pop
push
xchg
mov
dec
jl
sub
xchg
dec
out
add
lcall
imulb
dec
in
cmp
adc
jae
and
mov
fildll
lds
std
sbb
and
aas
push
jbe
inc
xor
sbb
test
jp
pusha
push
push
xchg
mov
push
xor
shrl
lock
xor
pop
pop
loop
stc
add
test
and
aad
std
lods
mov
inc
push
in
mulb
sub
jl
xchg
pop
das
scas
adc
sub
push
adc
pop
add
inc
aam
out
ss
lds
in
and
imul
dec
imul
dec
mov
lds
pop
push
inc
imul
hlt
mov
jbe
mov
fsubs
sahf
or
outsl
adc
es
lods
data16
or
cmpsb
dec
mov
sub
sbb
cli
xor
ja
inc
or
jmp
into
sub
pop
adc
arpl
loopne
popa
push
call
out
cld
ja
insl
jne
lret
out
or
das
pusha
push
push
add
pop
xor
jno
fadds
call
xchg
inc
cmc
xorb
mov
sub
xchg
mov
js
stos
cmpb
sub
loop
call
pop
into
daa
mov
push
mov
xchg
sub
js
xor
add
pop
in
cltd
enter
arpl
xor
rorb
pop
lcall
and
lds
mov
lods
test
rorb
movsl
dec
push
je
aad
adc
add
add
and
xchg
popa
clc
fucomip
testl
fs
ss
cli
std
sub
mov
inc
mov
jp
cmp
test
ret
or
pop
cmp
add
mov
mov
rcl
dec
aam
xor
pop
into
mov
add
in
lods
daa
out
mov
insl
xchg
inc
xchg
pop
mov
arpl
lcall
mov
popa
mov
mov
js
ficoml
mov
mov
adc
or
call
add
ja
sti
push
and
filds
push
je
pop
mov
push
das
out
repz
repnz
lcall
xor
mov
xor
scas
enter
ss
mov
mov
pop
mov
mov
cmp
inc
aad
mov
jbe
imul
cmp
addr16
adc
fimuls
adc
dec
mov
addl
fadds
pusha
filds
scas
xlat
add
sub
adc
sub
push
xlat
ret
mov
dec
sbb
scas
mov
inc
mov
mov
xchg
shl
sbb
negb
cmpsb
inc
test
cmp
enter
cs
inc
adc
in
mov
mov
fwait
inc
and
mov
sub
or
cmpsl
adc
push
jmp
jbe
mov
cli
loop
pop
arpl
cld
jmp
js
inc
popf
rcrb
mov
test
cmc
mov
std
or
insb
cmpsb
mov
scas
arpl
and
pop
jle
jo
mov
in
jmp
xor
adc
mov
push
jg
lods
and
clc
sti
in
inc
mov
adc
pop
orl
xchg
stos
pop
sbb
loope
jns
mov
sub
sahf
pcmpgtw
das
dec
mov
push
fcmovne
aas
xor
or
and
nop
notl
lcall
mov
pop
or
mov
mov
push
push
pop
lea
and
es
add
pop
sbb
and
popa
dec
repnz
dec
fsubrs
cmpsb
inc
or
shl
adc
clc
push
pop
mov
cli
mov
mov
loope
popa
mov
cmp
inc
and
mov
jge
les
push
pop
cli
sarb
mov
xchg
mov
adc
cwtl
pop
nop
outsl
pop
xchg
push
mov
adcl
outsb
inc
mov
incb
fwait
ljmp
les
mov
inc
pop
inc
out
xor
std
insl
shl
rclb
mov
bound
mov
in
pop
enter
lret
xchg
and
aad
daa
pop
push
push
cmp
pop
jb
pop
aad
int
dec
fs
xor
sub
jmp
push
addr16
pop
lret
popf
mov
enter
jge
popf
es
enter
cltd
dec
xchg
mov
mov
jp
mov
stos
rep
insl
adc
lcall
adc
pop
mov
bound
jmp
xor
popa
dec
sbb
sahf
test
sub
push
push
xchg
xor
push
inc
xchg
rclb
insb
ret
push
cwtl
jmp
dec
jp
lcall
jp
clc
mov
imul
out
adc
adc
dec
xchg
cmp
out
mov
scas
sub
jg
xchg
cmpsb
cmp
and
mov
lret
cmpsb
call
adc
jmp
pop
test
or
gs
push
int3
mov
fists
rolb
and
add
int
insb
sub
ror
sub
adc
fadd
lods
clc
add
repnz
sarb
ret
cmpsl
cltd
clc
lods
lods
fdivr
or
sbb
in
movsb
aad
mov
push
xchg
mov
jb
fs
lea
push
xchg
mov
xor
dec
orl
cli
xor
lcall
jnp
mov
push
push
push
cs
cli
push
dec
call
add
shl
mov
sub
fldl
repnz
lods
push
lcall
lea
cmp
adc
xchg
xor
add
aam
fisttpll
call
xchg
hlt
and
fbstp
fistpll
call
fistl
xchg
lds
push
test
xchg
icebp
jle
dec
push
inc
cltd
cli
in
sub
fnstsw
bound
push
aas
xor
outsl
test
mov
andl
mov
mov
frstor
cmp
pop
popf
mov
outsl
or
adc
mov
mov
test
ret
fs
mov
jecxz
pop
cmp
xor
std
mov
repz
loope
dec
loope
fxch
jmp
int
xor
jg
testl
or
popf
xchg
and
mov
inc
dec
sub
mov
mov
pop
sbbb
or
mov
sub
out
fisubl
cs
sbb
and
cmpsl
and
mov
sahf
and
pop
xor
stc
cmc
ret
cmp
stc
jecxz
cmp
jl
test
iret
pop
fcoms
dec
inc
cld
fs
ljmp
repnz
es
decb
xor
cmp
push
daa
data16
bound
cmpl
xlat
imul
leave
add
repz
in
out
mov
push
mov
jg
add
orb
test
add
in
icebp
cmp
xchg
mov
push
mov
into
jg
sbb
dec
inc
push
ror
sub
jp
add
xchg
cmp
xchg
sbb
scas
add
dec
dec
cmpsb
outsl
push
sub
xchg
cmpsl
inc
movsb
or
movsl
and
scas
mov
add
add
dec
es
repnz
das
in
out
js
adc
pop
aam
jg
inc
clc
or
sbbb
test
mov
adc
mov
jle
mov
jb
inc
inc
pop
outsl
das
or
out
into
dec
test
subl
jnp
adc
imul
xchg
pop
sbb
sbb
push
addr16
cltd
add
or
stos
mov
shll
dec
jno
or
inc
mov
mov
jb
lret
movsl
call
jne
cmc
jnp
not
xor
repz
inc
mov
call
clc
xor
dec
daa
jmp
pop
test
insb
imulb
jnp
pop
adc
fistpll
insb
pop
xor
bound
xor
test
in
repz
in
mov
xchg
mov
sbb
call
push
cltd
cmpsb
lods
out
inc
xchg
fwait
jnp
into
dec
sar
mov
xchg
adc
js
arpl
cmp
push
fidivrs
lret
or
adc
pop
insl
insb
jb
mov
andb
movsl
push
movb
mov
pusha
adc
scas
sarl
repnz
frstor
sbb
fstpl
aas
mov
dec
cmp
sar
das
or
es
mov
xchg
or
mov
repnz
rolb
sbb
pop
repz
cmp
loop
push
aad
sub
aad
inc
xchg
xor
pop
and
loop
lds
push
push
push
pop
aam
enter
add
sub
ror
mov
xor
jb
roll
adc
push
jecxz
lcall
cmpb
lods
std
fidivs
pop
aad
jnp
dec
ret
cld
mov
push
xor
sti
sahf
mov
ret
fucomp
data16
fdivp
mov
loopne
pusha
jno
adc
xchg
jnp
and
roll
mov
lcall
xchg
xchg
pop
loop
push
push
psubsb
and
adc
loope
add
mov
mov
enter
lcall
sahf
dec
in
adc
inc
pushf
fistpll
push
sub
arpl
mov
fsub
xlat
rcl
sub
roll
js
jne
and
stc
and
push
fists
xchg
jle
mov
cmpsl
imul
repnz
in
cmp
and
sub
jae
outsl
xor
xor
xor
sbb
cmpsb
loop
or
xchg
imul
mov
mov
pushf
jb
call
fcmovbe
iret
adc
lods
or
lret
cmp
xchg
movsl
inc
daa
adc
sti
sub
jne
cs
scas
data16
jecxz
ss
xor
test
fs
repnz
inc
and
mov
test
pop
push
fwait
push
or
std
stos
ret
mov
loop
rol
in
adcb
dec
call
sub
fidivs
xor
and
mov
mov
pusha
out
jmp
not
xor
fwait
adc
xchg
cmpsb
ret
add
popf
jne
fwait
pop
jne
lahf
stos
sarb
in
pop
sub
mov
dec
adcl
jns
popa
jb
cmpsb
dec
or
jns
xlat
xchg
adc
sub
call
xor
lea
push
aam
xlat
imul
loop
in
out
arpl
scas
sub
cmp
cs
je
shll
lods
fsubrl
cmpsb
ljmp
in
outsb
mov
xchg
cmpsb
inc
adc
mov
fstpl
inc
popa
movsb
sbb
stc
adcb
sbb
mov
out
cmp
test
jl
xlat
jmp
adc
mov
xor
inc
into
jge
mov
fwait
lods
lret
sub
outsl
xor
mov
mov
std
cmp
jmp
and
mov
pop
jp
addb
jae
pop
daa
in
mov
rcll
adc
rcrl
jns
aaa
mov
mov
mov
add
inc
jg
cli
add
test
pop
rcll
fdivs
push
dec
mov
test
fisubrl
std
mov
insl
je
insl
repnz
dec
sahf
push
insl
cmp
cmp
adc
mov
mov
roll
mov
lahf
mov
and
sahf
lcall
jge
cmp
cmp
sar
lock
sub
push
int3
cmp
sbb
sub
mov
into
jl
mov
add
adc
lahf
add
aas
mov
aad
out
mov
pop
mov
xor
fmuls
rclb
push
aam
or
mov
mov
pusha
jl
imul
lcall
repnz
cmp
scas
adc
and
and
jbe
movsl
pop
pusha
sahf
repz
xchg
and
mov
jle
add
xchg
jae
xchg
pop
push
cmp
adc
pushf
or
daa
or
or
stos
mov
cmp
popa
cmpsb
mov
bound
mov
mov
fstps
mov
mov
in
iret
jp
xor
xchg
or
lods
test
xchg
cmp
sub
jmp
xor
sbb
sbb
in
mov
and
aad
loope
push
push
into
sarb
sbb
push
cmp
outsb
sbbl
lock
push
lcall
dec
movsb
js
fnstenv
fcmovnu
pop
cwtl
cmc
push
sti
imul
pusha
xchg
jge
in
sub
sbb
lret
mov
mov
push
pushf
inc
ds
bnd
mov
sbb
cltd
cmp
jle
push
stos
mov
sub
insl
divb
mov
rorl
sbb
cmp
and
mov
mov
push
dec
fists
loop
scas
pop
in
dec
push
jl
xchg
sbb
out
test
movsl
loop
shlb
cmc
or
cwtl
push
cld
stos
cmpl
imul
testb
sti
push
jle
cmp
aaa
insb
lods
xchg
mov
xchg
fs
and
in
xor
lods
in
mov
and
sub
dec
insl
dec
sub
test
xchg
out
addr16
pop
std
testl
test
jo
cli
outsl
and
adc
jbe
fdivrp
xlat
dec
pusha
and
xlat
int
xchg
and
add
mov
push
bound
aas
cs
mov
push
stc
jg
and
je
jns
lret
ljmp
xlat
push
fsts
shlb
out
jmp
mov
loope
fisubrs
xchg
push
xchg
pop
xlat
outsl
fstl
inc
dec
cld
adc
out
hlt
mov
out
mov
xorl
test
push
adc
shrl
enter
lods
je
aad
cmpsb
push
push
xor
imul
xorb
bound
xorb
xchg
pusha
pop
cmp
pop
sahf
or
jl
addr16
fcmovnb
and
js
flds
pop
cmp
leave
bound
sbb
jle
into
testb
xor
inc
cltd
pop
loope
lods
lods
sbb
inc
int
ret
sbb
addr16
dec
mov
and
cmp
cmp
sarl
mov
jp
adc
add
fildll
adc
mov
cmpsb
xor
adc
jmp
mov
das
int3
into
out
sbb
lods
add
stos
add
loop
lds
cmp
or
sub
loope
and
sti
mov
int
xchg
cld
or
push
mov
mov
inc
int3
push
sbb
mov
push
mov
adc
mov
ja
xchg
add
rcrb
gs
mov
xlat
sub
shr
call
mov
stos
push
push
xchg
jns
jl
aad
scas
xor
and
cs
xor
dec
mov
fnstcw
scas
std
sbb
sbb
stos
dec
cmp
into
jle
inc
or
cmpsl
pop
enter
enter
int
data16
pop
push
mov
push
hlt
mov
xchg
out
fadds
int3
negl
je
testb
sbb
out
dec
jp
ret
movsl
inc
jl
imul
pop
or
sub
mov
xchg
sub
dec
push
or
lret
js
and
inc
mov
pop
int
daa
xor
iret
mov
std
add
ljmp
sbb
fnsave
fwait
imul
sbb
add
aaa
sub
inc
push
fldcw
or
icebp
mov
and
fcoms
bound
loop
inc
jmp
jp
fstpl
cmpsl
push
sbb
daa
test
add
xor
xchg
dec
bound
subl
iret
lock
pusha
inc
movsl
sbb
pop
or
hlt
cmp
test
jbe
cmp
mov
out
xlat
jae
dec
andb
dec
cmp
lea
lods
mov
dec
das
shrl
sub
jl
pop
mov
inc
repnz
out
dec
into
cmp
push
mov
rcrl
xor
and
dec
xor
xor
std
sub
pop
and
or
js
adc
mov
mov
cmp
push
les
fisubrs
pop
jb
inc
xchg
sbb
popl
aas
mov
adcb
pop
jle
pop
mov
xor
mov
cmp
cmp
in
not
and
loop
bound
rorb
and
cmp
leave
jne
std
or
dec
inc
inc
aas
sbbl
and
mov
imul
xchg
fwait
outsb
mov
fildl
daa
inc
stos
cmp
xor
int
jae
shl
jl
inc
loopne
and
js
popa
pop
push
repnz
ja
cmc
leave
mov
lods
out
cmp
imul
cmp
out
mov
scas
sbb
int3
sub
mov
add
aad
pop
push
aaa
push
push
mov
ljmp
pop
add
daa
ret
mov
xchg
enter
push
jmp
lods
punpckldq
ret
mov
stos
mov
out
addr16
aaa
mov
and
daa
jg
mov
incb
and
mov
inc
add
std
adc
test
jge
mov
mov
xchg
cmpb
xchg
cwtl
jecxz
push
push
lcall
push
test
mov
mov
cwtl
cwtl
shll
mov
jne
repnz
scas
fwait
mov
or
in
imulb
mov
pop
dec
mov
push
or
and
fs
xor
movsb
sbb
dec
add
pop
adc
sub
sbb
push
mov
ss
sub
lret
sbb
cmpsb
xor
popf
lds
or
and
enter
push
mov
adc
adc
and
pop
aaa
pop
mov
fcoms
xchg
jo
xor
mov
mov
push
pushl
les
jl
cld
lea
pusha
jne
nop
sbb
and
mov
std
xchg
pop
sub
mov
cmc
jae
pop
lds
mov
lods
or
out
add
stc
popa
sub
xchg
adc
cwtl
popa
lcall
je
jne
sub
faddp
mov
sub
pop
or
outsb
inc
call
inc
and
add
push
cmpsl
inc
mov
hlt
mov
lock
adc
inc
mov
sub
push
xor
jmp
sbb
test
inc
mov
or
inc
xchg
push
pop
add
mov
mov
and
arpl
outsb
jne
push
sbb
push
xor
and
pop
ja
push
pop
pop
ficompl
fsubs
mov
sarl
clc
xor
pop
push
clc
push
arpl
clc
xchg
clc
fildll
adc
xchg
push
stos
test
adc
lock
arpl
adc
sub
sbb
mov
ja
bound
push
pop
dec
xor
pop
lea
add
and
insl
cmp
int3
daa
mov
aam
and
movsb
loope
call
sarl
push
inc
xchg
repnz
loopne
nop
shll
aam
outsl
xchg
into
aas
inc
int3
pop
xlat
xor
lret
stos
loopne
loop
test
adc
aaa
mull
dec
push
push
adc
out
lods
mov
loop
lds
inc
lock
std
dec
popf
mov
clc
pop
ret
add
cmp
pop
sub
cmp
fdiv
cltd
nop
data16
ds
xchg
mov
mov
push
push
lods
loop
and
xchg
xchg
sbb
adc
or
jne
dec
popf
cmc
lods
add
neg
cmp
addb
xchg
ret
mov
shll
cmpb
mov
sub
and
out
dec
leave
add
fwait
sbb
dec
add
xchg
inc
fcoml
imul
pop
loop
dec
adc
adc
fidivrl
inc
aaa
mov
xor
sub
or
pop
adc
pop
repnz
aaa
pop
jmp
rorl
sbb
fldenvs
lods
adc
sub
adc
and
hlt
lea
popa
inc
arpl
jle
sub
fsubs
fsubs
pop
sbb
sahf
mov
ret
data16
pop
fwait
div
push
js
pop
shrl
daa
imul
xchg
cltd
mov
mov
sbb
mov
pushf
mov
ss
mov
push
aaa
data16
mov
shrl
outsb
clc
fiadds
inc
xchg
imul
jnp
push
lret
dec
aam
out
jnp
add
clc
scas
or
jmp
or
adc
popf
loopne
ficoml
xor
test
sub
cmp
les
or
test
aaa
cmp
or
and
arpl
imul
inc
jmp
cli
cmpsl
ret
jne
std
dec
sbb
adc
lret
test
ljmp
outsl
sbb
movsl
stos
adc
jno
cmc
ss
dec
roll
dec
fadd
jnp
sahf
push
aaa
inc
add
add
sbb
pop
cwtl
aad
xchg
sti
das
leave
jns
test
fiaddl
rcrl
stc
mulb
ret
mov
add
enter
pop
repnz
sub
mov
mov
jl
pop
or
or
dec
and
test
sbb
jmp
mov
bound
cmpsl
push
xor
sbb
stos
data16
cmp
pop
aas
rorb
in
sbbb
adc
or
sub
xor
pushf
scas
or
or
test
cmovp
mov
mov
insb
test
clc
mov
mov
mov
sub
ss
inc
stos
aad
adcl
mov
outsl
sub
and
cmc
shl
sete
addr16
lcall
mov
pop
adc
jbe
dec
and
xchg
mov
repnz
and
or
es
sahf
and
fwait
adc
negl
cwtl
push
jl
ja
jae
mov
shr
pop
out
ljmp
pusha
sbb
ret
shrl
jns
subb
sub
subb
cltd
push
aam
dec
movsl
push
dec
mov
out
hlt
fmul
mov
addb
hlt
es
inc
pushf
jl
push
stos
shrl
xchg
and
pop
mov
or
fisttps
negl
push
iret
popa
jae
sbb
inc
xchg
test
push
xor
ret
jl
jo
mov
cmp
insl
mov
jo
cmp
ja
cltd
jnp
int
cltd
adc
in
inc
out
movsl
pop
jecxz
push
and
adc
mov
ss
ss
cs
pop
mov
std
loop
test
jo
in
sbb
cmp
stc
push
cs
jmp
cs
je
les
push
and
add
xchg
insb
icebp
inc
out
jne
sub
cltd
leave
orb
shlb
add
popa
cmp
add
mov
icebp
and
cltd
vpsubq
pop
push
jge
test
sbb
mov
repz
jb
subl
push
imul
test
vshufps
movsl
loop
arpl
xlat
fidivs
cltd
stos
shlb
add
cmp
ret
or
or
and
mov
rcrb
add
loope
mov
mov
dec
int
pop
add
stos
add
gs
sub
test
imul
dec
test
mov
jns
pop
lods
notl
outsl
and
popa
add
popf
scas
popa
xor
xchg
mov
xchg
shll
movsb
cmpsb
push
xor
into
aas
or
pop
xor
xor
fildl
push
sahf
mov
sub
adc
sti
cmp
sub
push
test
sbb
pushf
sti
cmpsb
fldcw
pop
lods
cmp
fcompl
fisubs
xchg
cmpsb
jg
inc
mov
mov
dec
or
sub
mov
out
push
adc
mov
xchg
push
jns
push
out
test
xor
xchg
in
add
mov
mov
cmc
mov
mov
lret
sbb
pop
and
nop
icebp
jae
xchg
icebp
gs
icebp
ja
push
push
cltd
jge
mov
leave
dec
adc
pop
aad
mov
stc
add
mov
xchg
fstpl
test
lods
cmpsl
mov
pop
push
or
fsubrl
js
mov
testl
pusha
in
js
push
clc
lret
sbb
icebp
xor
mov
push
leave
stos
cltd
shll
add
xlat
fmull
inc
in
into
xchg
push
dec
adc
popf
mov
fs
adc
ds
pop
lcall
xchg
mov
leave
and
sub
xor
shrb
ret
lcall
enter
testl
mov
mov
mov
lcall
mull
mov
repnz
mov
dec
ret
scas
icebp
mov
or
test
mov
lahf
in
sbb
out
enter
add
sbb
inc
inc
movsl
iret
cmpsl
push
and
dec
loope
inc
adc
cli
in
push
sar
outsl
lret
lret
cli
add
jb
or
xchg
lods
xor
lcall
push
loopne
jbe
xor
mov
sbb
inc
mov
xor
push
out
ss
pop
mov
movsb
mov
shll
push
aad
xor
mov
aam
je
stos
pop
ss
mov
jle
lcall
jb
mov
sbb
movsl
lock
add
lsl
leave
cwtl
xchg
add
enter
and
sbb
mov
inc
mov
andl
lea
popf
loopne
fs
jp
jmp
mov
fdivrp
add
cmc
mov
addr16
imul
adc
push
aam
and
cltd
jb
dec
mov
popf
adc
xchg
mov
and
and
adc
fwait
push
or
outsb
adc
idivl
xor
sbb
loope
xchg
popf
cli
jge
add
out
cmpb
jne
sbb
lock
adc
inc
call
add
cmp
fildl
jle
and
aaa
decb
fsubs
xchg
call
aaa
cmpsb
xchg
imul
inc
xchg
push
cmpsl
fadd
mov
ficomps
xor
push
repz
leave
xchg
and
sahf
jle
push
daa
rol
jns
or
jb
mov
addr16
mov
jle
jp
cmp
pop
inc
js
add
cmp
clc
out
mov
cli
pusha
andl
xchg
dec
icebp
push
or
movsl
dec
sbb
cmpsb
mov
mov
dec
add
sub
loop
je
or
rolb
cmpsb
and
mov
cmp
push
test
mov
add
clc
mov
enter
mov
incl
push
add
push
sub
jb
test
lcall
xchg
faddl
aad
cs
push
pop
or
fwait
scas
pusha
ret
push
mov
inc
mov
imul
inc
mov
sbb
ljmp
sub
mov
aam
icebp
sub
insl
xor
arpl
xor
push
sti
nop
cmp
jo
addb
mov
inc
dec
sub
sbb
insl
loop
imul
dec
scas
lds
sub
enter
scas
ret
mov
pop
dec
xor
lock
loope
loopne
mov
sbb
std
arpl
mov
sub
adc
push
mov
jle
xchg
outsl
mov
in
cld
inc
dec
imul
dec
or
in
add
loop
cmpsb
stc
dec
lock
adc
mov
adc
dec
inc
inc
lret
xchg
fldenv
in
xchg
std
rcll
rclb
mov
or
test
mov
or
fstpt
inc
add
divl
mov
mov
jo
insl
ljmp
add
addr16
xchg
rcll
xchg
pop
push
lock
pop
dec
cmp
pop
andl
leave
xchg
mov
sbb
enter
movsb
pop
ss
ret
popf
mov
outsb
mov
pop
mov
outsb
outsb
adc
mov
jp
outsb
jnp
aas
pop
pushf
inc
bound
sbb
outsb
lret
mov
icebp
outsb
popf
and
xchg
jmp
push
mov
and
rcll
rorb
sub
pop
jne
lcall
jbe
dec
mov
mov
add
push
fnstenv
iret
out
mov
or
fadd
jle
fwait
stos
push
inc
outsl
mov
movsl
mov
mov
sub
dec
lret
and
push
and
push
fadds
pop
mov
inc
lret
rcll
add
ror
sbb
test
push
add
les
mov
sub
out
imul
lea
xlat
jnp
mov
jg
and
aaa
jle
xchg
test
sbb
pop
jl
jmp
xchg
cmc
orb
inc
cmp
idivb
and
rcll
jae
lret
stos
scas
in
xchg
xor
out
jno
push
cli
adc
mov
cltd
inc
decb
or
into
jae
sarb
and
adc
push
jbe
push
test
add
dec
repz
scas
jp
jno
adc
xlat
mov
jle
push
pop
cmp
cwtl
or
lock
jmp
ljmp
adc
cmp
adc
jo
lahf
pop
sbb
sub
adc
jp
mov
not
rcrl
inc
lcall
mov
lahf
dec
iret
outsb
mov
mov
rclb
mov
js
lret
cmp
popa
imul
mov
sub
cld
sbb
jne
or
aad
mov
int3
outsb
clc
pop
inc
pop
pop
inc
call
jae
dec
dec
jae
pop
stos
fldcw
or
xor
mov
mov
xor
inc
inc
js
and
jl
jle
mov
ljmp
orl
jns
inc
adc
les
fists
orb
dec
jb
stos
sahf
xchg
aam
mov
mov
pushf
or
fcmovnb
mov
lahf
mov
add
ljmp
fwait
inc
mov
dec
sub
jae
pop
notl
sub
in
mov
arpl
xor
push
rol
test
or
pop
out
aaa
scas
cwtl
or
fcoms
or
jle
jmp
inc
aad
add
push
mov
sbb
sahf
je
out
hlt
and
add
pusha
push
repz
call
cmp
ret
pop
stos
les
push
inc
pop
loop
aaa
mov
fs
and
push
ret
mov
xor
mov
iret
aam
mov
xchg
sub
outsb
dec
inc
fistps
sub
mov
mov
and
jmp
pop
xor
mov
dec
cmp
lds
xor
testl
sysret
dec
sbb
mov
leave
sarb
imul
inc
cltd
dec
gs
xchg
cld
xor
in
testl
add
mov
mov
int
fs
mov
xchg
add
sub
ss
jg
push
inc
cltd
mov
std
mov
sbb
dec
adc
push
scas
mov
nop
data16
imul
jne
jmp
out
xor
sub
insl
mov
or
jne
xchg
xchg
lcall
jle
dec
cmp
push
data16
xor
fcmovnu
lods
dec
insb
imul
sub
inc
dec
xchg
mov
adc
mov
mov
jo
fwait
mov
fildll
mov
stos
and
xor
lods
push
cmc
mov
in
les
scas
daa
inc
cmp
and
mov
xchg
pop
cs
push
dec
xlat
jmp
sti
js
add
jno
mov
push
mov
and
push
and
and
xor
js
divb
rorl
mov
pop
jmp
and
jnp
push
inc
test
shll
movsl
fistpll
fwait
stc
xchg
je
icebp
jbe
adc
test
dec
jae
cmc
adc
mov
loope
inc
outsl
lock
mov
push
mov
imul
dec
mov
push
sti
mov
jmp
mov
mov
popf
fiadds
jle
fmull
shll
int
sbb
dec
mov
cli
ljmp
fcomps
dec
cmpsb
pop
lcall
mov
pop
mov
push
lret
cltd
inc
pop
sahf
fsubr
jbe
aas
mov
bound
xor
mov
jb
pusha
lret
inc
cld
xchg
or
push
clc
xchg
mov
xor
movsl
lahf
sti
loope
cld
push
mov
arpl
in
popf
scas
adc
cmp
pop
add
adc
icebp
lahf
dec
aad
lcall
jno
mov
and
divl
xor
or
shr
frstor
adc
mov
xchg
add
jp
jno
bound
icebp
rcl
loopne
sarl
pop
pop
test
ret
pop
inc
dec
adc
push
mov
pop
jbe
jmp
jmp
pusha
sti
jnp
stos
mov
adc
jecxz
sbb
test
push
sbb
sbbb
xor
aad
sub
mov
arpl
lock
aas
dec
aas
dec
iret
add
aas
ljmp
out
ficomps
dec
insb
cld
xlat
dec
fstps
out
fidivrl
scas
add
xor
cmpsb
sub
fs
hlt
pusha
xor
inc
xor
mov
inc
stos
and
mov
xor
shr
cmp
sbb
subb
addl
in
dec
xchg
cmpsb
aaa
and
orl
cmpsl
loopne
adc
push
in
js
jge
jl
fwait
cmc
jle
dec
mov
inc
mov
pop
loope
mov
adc
pop
and
cmp
rol
sbb
xor
into
mov
fidivl
mov
pop
mov
xchg
and
movsb
mov
jae
xor
cltd
cmp
mov
pushf
xor
test
icebp
xchg
inc
mov
xor
es
adc
mov
pushf
pop
pop
mov
ljmp
cmp
push
out
cmp
roll
jns
mov
pusha
adcb
mov
movsl
stos
xchg
sbb
fsubr
movsb
jp
sub
add
ss
ljmp
or
mov
les
xchg
xchg
xor
data16
or
jns
lea
push
xlat
mov
adc
sub
ror
mov
dec
lds
scas
xor
cmc
in
xchg
aad
test
xor
dec
lret
jge
jns
cltd
cltd
jbe
iret
mov
negb
arpl
pop
cmp
in
leave
imul
aam
cwtl
fadds
adc
cwtl
adc
push
xor
aam
add
jmp
inc
mull
add
sub
repnz
xchg
adc
hlt
mov
jle
daa
js
fnsave
lea
sub
popf
pushl
or
mov
shl
push
pop
jo
aam
mov
pop
in
xchg
test
arpl
iret
into
ja
add
add
add
and
ja
adc
fs
sub
mov
adc
jecxz
sbb
adc
cmc
push
cmc
pop
jge
cmp
rorb
mov
xchg
push
lods
jnp
lods
mov
add
cmp
mov
in
cmpsb
fidivl
rcrl
pop
mov
inc
pop
out
xchg
pop
inc
mov
xchg
mov
xor
dec
imul
inc
inc
cmp
in
mov
push
cltd
mov
pop
sub
xor
loope
cmp
mov
mov
dec
pop
mov
lock
cmp
xchg
jns
mov
mov
rclb
jle
jl
fs
data16
push
enter
add
push
in
xor
mov
pop
out
jno
add
cld
cld
cmp
mov
aad
mov
inc
je
mov
and
imul
dec
shl
scas
sahf
push
jne
clc
or
testl
dec
xchg
lcall
cwtl
inc
testl
cmp
dec
mov
push
ret
pop
rcrb
loope
lds
sti
popa
and
sbb
xchg
mov
movsl
vminsd
fisttpll
rol
cmc
imul
aaa
or
cltd
mov
jecxz
pushl
or
sub
out
scas
mov
daa
aad
sub
movb
inc
rolb
jo
loope
jbe
cmpl
mov
aaa
xlat
cmp
sub
xorl
notrack
cmpsb
fsubrs
adc
sysenter
pop
sub
jge
xor
fmull
adc
sbb
testl
pop
adc
shrl
dec
test
cld
shll
std
fistl
inc
or
pop
xchg
push
mov
jle
mov
xchg
aad
arpl
lods
jmp
mov
jg
in
test
jno
shrl
jns
pop
and
xor
pop
cmp
nop
mov
mov
cmp
jne
jmp
cli
add
mov
out
cmp
aas
into
adc
out
push
pop
cmp
es
sti
mov
adc
dec
mov
rcll
movsl
insb
inc
mov
sub
fidivrs
cmpsl
jecxz
pushf
ret
loop
iret
xlat
jo
std
stos
imul
push
mov
enter
xchg
jb
or
mov
xchg
and
jmp
ret
addr16
nopl
jp
enter
nop
pop
je
inc
sub
sub
mov
or
cmpsb
xor
repz
imul
push
jl
insl
xchg
mov
in
shlb
pop
add
insb
mov
or
xchg
pusha
movsl
jno
push
sbb
movsb
and
and
dec
mov
filds
outsl
iret
mov
xor
mov
jnp
adc
data16
push
das
pop
cmp
xchg
inc
xchg
push
jmp
jno
bsf
cmp
jo
call
mov
aas
xchg
mov
add
idivb
test
push
out
lds
jmp
cltd
inc
pop
push
cmp
jp
sub
push
fdivs
mov
rclb
mov
and
pop
or
sar
ret
jle
xor
and
push
das
jnp
xchg
and
add
adc
fsubrs
mov
jg
call
adc
ret
loope
sub
sbb
push
int3
cmp
dec
adc
pushf
cmpsb
jecxz
push
ret
vpcmpgtb
pop
clc
add
cld
jg
mov
cmp
adc
push
out
fidivl
mov
dec
es
mov
mov
mov
std
shl
mov
dec
dec
mov
std
icebp
pop
stos
scas
jmp
add
mov
mov
push
and
std
jge
fbstp
push
lret
mov
lret
jae
hlt
add
jmp
and
mov
fidivs
mov
jno
cmp
cmp
call
mov
sbb
arpl
pop
push
and
push
ljmp
fsubrl
lods
std
push
outsb
or
rorl
mov
call
sbb
mov
adc
inc
mov
lds
into
xchg
ret
nop
pavgw
mov
inc
jl
sbb
sbb
fisttps
xchg
rorl
fnstcw
xchg
mov
mov
sbb
lret
mov
cmpb
push
cmc
mul
adc
jnp
js
loope
push
ss
mov
adc
mul
cs
sub
or
push
rclb
adc
push
test
rolb
mov
push
lret
test
mov
popa
movsb
lret
test
in
mov
push
call
addl
insb
sahf
jne
push
call
inc
mov
roll
mov
xchg
mov
scas
dec
enter
pusha
jb
lock
xor
cwtl
adc
cli
pxor
mov
push
jo
push
push
dec
int3
in
pop
or
mov
mov
movsb
pop
outsl
insl
scas
sbbb
inc
sarb
ljmp
aam
std
cmp
repz
pop
xlat
bound
mov
xchg
push
fs
outsl
lods
ss
xor
push
xor
jle
mov
sbb
pushf
jbe
jae
scas
inc
mov
pop
mov
int
addr16
fs
adcl
push
adc
adc
xchg
sub
loopne
stos
into
jne
sub
push
and
sub
addb
loop
bound
adc
repz
cmp
push
pop
pushf
test
adc
mov
mov
popa
stos
push
dec
mov
roll
bound
fsubr
adc
pop
and
or
stos
arpl
push
add
fdivrs
inc
or
inc
jmp
mov
jbe
nop
push
jo
es
stc
cmp
pop
push
cmc
aam
fcoml
inc
bts
or
and
lock
xchg
dec
repnz
fstpt
and
icebp
adc
jle
js
xor
jecxz
jnp
lahf
jmp
cmc
pop
dec
test
mov
inc
sub
mov
out
sub
sbbb
mov
pop
mov
mov
sub
mov
inc
dec
lds
lret
xchg
es
repz
frstor
lcall
pop
ds
jae
push
inc
jno
aaa
xchg
lock
lahf
lds
pop
and
sar
jle
jns
stc
push
cmp
out
push
je
sub
fdivs
cmp
movsb
sub
sarl
pop
jae
lock
mov
or
or
outsl
stc
pop
jge
ja
clc
ss
cmc
push
aad
and
mov
push
les
inc
lods
sbb
mov
jge
jecxz
cmp
int
imul
jmp
stc
testb
jg
fmuls
fsub
mov
pop
mov
into
pop
test
mov
dec
add
sub
aam
jl
aas
out
arpl
mov
out
ss
add
addr16
inc
push
repnz
call
cmp
jle
das
pop
jbe
or
aaa
jmp
jl
lods
push
mov
mov
in
aad
jmp
xchg
push
push
and
xor
push
clc
aad
fnstsw
cmp
loop
xchg
dec
mov
pop
cli
rorl
and
cmp
dec
cmpsb
push
cmp
test
push
nop
push
mov
pusha
pop
mov
ss
pop
insb
out
repnz
push
add
inc
lods
add
push
push
mov
push
loopne
xor
push
cwtl
push
or
sbb
mov
daa
cmp
fistpl
lods
jb
sbb
push
pop
test
cmp
mov
inc
cmpsb
jecxz
and
cli
imul
lcall
movsl
sbb
clc
inc
mov
fadd
push
in
ja
subl
dec
adcb
sbb
les
mov
roll
ja
cltd
ret
aaa
pop
rcrl
xor
je
cmp
sti
pop
stos
stos
lods
sbb
mov
movsb
js
cmp
fnstenv
fwait
les
cmp
pop
rcrb
jo
ljmp
mov
push
ret
ret
jg
mov
subb
sub
cli
lods
sub
push
loope
inc
jmp
xchg
les
push
movsb
push
bound
loop
std
inc
or
mov
lock
in
int
test
aam
es
lods
push
xchg
scas
or
inc
and
stos
outsl
xchg
pop
mov
mov
aad
cmp
pop
mov
popf
push
pop
cwtl
cwtl
rcr
xor
out
xchg
je
repnz
mov
pop
test
dec
add
lock
shll
and
cs
mov
xor
inc
mov
fcmovne
repnz
lea
mov
push
xor
mov
jmp
ja
inc
sub
xchg
fiaddl
or
xor
or
xor
int
pop
inc
jmp
cmp
mov
xor
std
jne
push
inc
outsb
aas
addl
sbb
jne
mov
xchg
cmpsb
cmp
inc
sbb
mov
adc
cmpsl
dec
lret
arpl
add
or
xchg
popf
fldt
shl
jl
mov
stc
pop
imul
ret
mov
sbb
clc
icebp
inc
out
cmp
sub
add
clc
push
sbb
dec
pop
push
inc
mov
add
fwait
mov
push
jnp
sbb
cmp
daa
je
or
xor
mov
decb
cmp
loop
loop
inc
sub
cld
lcall
sub
in
pop
fstpl
jns
pop
movsl
lahf
shrl
cmp
push
ja
fildl
push
fdiv
insb
jne
dec
pop
cmp
aam
popf
push
icebp
xorb
daa
jnp
jns
ljmp
mov
push
in
jae
fdivl
aam
sub
pop
test
mov
shrb
lods
xchg
mov
es
or
xchg
mov
cwtl
out
test
mov
mov
xor
sbb
psubusw
iret
es
test
or
and
popa
shl
mov
out
or
push
inc
mov
cmp
xchg
enter
les
jbe
add
outsl
fs
icebp
dec
xor
push
test
mov
mov
scas
cltd
rcl
cmp
in
mov
jnp
sahf
mov
arpl
jl
cmpsl
pop
sub
into
inc
nop
mov
mov
sbb
in
mov
insl
retw
mov
test
lcall
adc
xlat
and
xchg
mov
inc
pop
sarb
or
and
mov
xchg
test
and
hlt
xor
xchg
roll
in
jns
dec
stos
jnp
in
mov
sahf
sub
cmpsl
cmpsl
pop
or
in
jmp
imul
mov
subb
jo
in
insb
sub
sbb
xchg
addb
jp
jnp
lret
fcoml
aaa
pop
inc
xor
sbb
cmp
xchg
hlt
roll
shr
push
in
inc
std
mov
xor
jb
imul
lock
jb
mov
and
and
loope
cltd
rolb
movq
mov
adc
push
and
fcoml
cmp
xlat
pop
sahf
mov
popf
cli
gs
mov
insl
out
pop
aad
lods
mov
outsl
insl
pop
outsl
pop
and
divl
clc
sti
ja,pn
pop
dec
hlt
xchg
xor
inc
cli
sbb
cmpsl
roll
std
xor
add
loope
add
outsb
cmpsb
dec
cmp
dec
mov
data16
jle
ret
adc
jecxz
data16
cltd
out
cmp
lock
test
pop
sbb
scas
mov
insb
add
test
cld
lea
popf
andl
mov
sbb
dec
loope
lahf
inc
dec
les
sbb
enter
cmp
push
add
inc
jbe
ss
bound
push
stc
cli
es
aaa
vmovaps
adc
adc
fcoms
push
and
jae
mov
xchg
leave
das
xchg
out
jb
jae
lds
xor
jle
pop
mov
cmp
repz
fisubrs
inc
repz
stos
addr16
cmpsb
inc
inc
mov
pop
pop
and
push
cmpsl
repnz
jmp
sub
nop
xchg
lret
or
xchg
mov
mov
adc
sahf
nop
adc
mov
pushl
mov
xchg
addb
sbb
fcompl
test
test
jo
orb
mov
pop
subb
sub
mull
xor
add
daa
out
fstl
ds
sub
cwtl
in
movsl
out
jmp
cli
loope
mov
or
push
jecxz
lcall
jecxz
ja
stos
dec
imul
insb
popf
jnp
lcall
mov
jmp
dec
sub
bound
stos
out
adcl
jge
fnsave
lret
mov
inc
sbbl
add
adc
jae
adc
lea
inc
ja,pn
fildll
call
mov
sbb
out
push
stos
scas
mov
ds
and
jge
adc
push
divb
sti
and
aaa
lea
int3
dec
cmp
xchg
loopne
scas
cltd
daa
push
cmp
dec
mov
outsb
jl
dec
jl
fs
mov
ret
and
pop
inc
mov
mov
outsb
mov
scas
icebp
cmp
cmp
xchg
push
rclb
imul
pop
dec
hlt
rcrl
xchg
pop
cmp
sarb
stos
out
in
and
pop
stos
les
cmp
sub
gs
jg
imul
jmp
sbb
arpl
dec
fidivrl
xchg
or
dec
xchg
push
cwtl
clc
repnz
and
icebp
jecxz
xchg
cmpb
mov
xor
pop
or
xor
or
popf
icebp
and
shrb
shl
je
xor
hlt
aad
dec
xor
xchg
cmp
push
push
jg
lods
inc
adc
cli
das
xor
sbb
jl
out
lret
ficoms
pop
pop
xchg
ja
mov
lock
cmp
pop
lock
sub
mov
xchg
push
call
push
loope
daa
pop
xchg
mov
dec
or
xor
movsl
jg
mov
jno
mov
pushf
or
xor
in
inc
push
lcall
push
pop
loope
jno
jns
mov
push
dec
cli
arpl
add
jle
mov
sarl
jb
lahf
mov
cmpb
adc
sbb
lds
xchg
sbb
hlt
pop
fs
es
jbe
push
add
lret
popf
jg
ds
inc
test
in
or
xlat
je
movsb
mov
pushf
add
je
push
push
popa
inc
mov
and
mov
test
inc
lahf
dec
adc
lock
xor
test
lock
push
std
clc
push
sub
pop
push
movsb
cmc
mov
in
loope
adc
cmp
clc
insb
mull
lock
jecxz
fs
fimuls
mov
adcl
xchg
popa
xor
iret
mov
fisttps
inc
sub
sub
push
push
gs
mov
xor
xor
push
or
inc
pop
inc
lret
xor
push
add
inc
ja
lods
jecxz
mov
fisttpl
mov
call
push
fisubrl
sbb
push
fs
cli
mov
jg
jmp
test
in
push
xor
pop
ja
xor
inc
addb
repnz
pop
fwait
stc
jge
out
out
xor
push
jae
xor
subl
lahf
pop
sub
ret
dec
aam
js
ss
cmp
outsl
arpl
mov
lds
pusha
xor
sub
stos
fsubrp
dec
test
cmp
dec
inc
mov
arpl
push
lods
fildll
lret
lock
mov
adc
xorb
dec
xor
or
dec
mov
outsb
pop
es
lcall
insl
call
xchg
fmul
jge
lods
out
loop
jg
xor
add
and
lods
mov
mov
pop
mov
sti
jae
shll
xchg
das
and
pushf
mov
in
popa
pop
loop
loopne
fisubs
lds
dec
adc
cmp
or
mov
inc
mov
push
out
mov
movsl
pop
arpl
mov
adc
sbb
xchg
nop
mov
in
add
sarb
dec
pushf
ds
xor
cmp
pop
or
dec
sarl
xchg
push
popa
shll
cmc
jg
divl
stos
ja
testl
cmpsl
jecxz
sbb
cmpsl
pop
xchg
add
and
xchg
pop
mov
fldl
je
sbbl
xlat
es
faddl
dec
dec
inc
ljmp
outsb
push
cmc
fwait
sub
add
lcall
cltd
dec
pop
mov
xchg
in
mov
sahf
stc
xchg
push
in
mov
orb
pop
adcb
rcrl
lret
add
rorb
stos
out
ss
mov
pop
xlat
jecxz
jge
mov
xor
ds
mov
in
pop
ds
add
data16
out
ret
out
mov
fidivl
sub
inc
and
ss
push
add
xchg
testl
jae
sub
es
ja
out
fstps
jmp
in
icebp
les
ds
add
fdivs
add
and
fldt
mov
jg
cmpb
daa
insl
pop
cmp
inc
scas
aaa
inc
sarl
mov
imul
cvttps2pi
or
jb
sbb
incl
pop
outsl
lret
mov
int3
loop
mov
cmp
mov
call
mov
push
jp
dec
sbb
push
or
adc
aaa
movb
xchg
loop
repnz
pop
pop
inc
iret
cmpsl
enter
pushw
xchg
push
or
pcmpeqd
add
ret
jns
insb
in
sub
jns
jno
orl
push
lret
in
cmc
pop
insb
dec
pop
sbb
push
dec
jae
xchg
repz
das
push
loope
pop
insb
js
subb
scas
outsb
inc
fwait
push
and
push
stos
sbb
adc
clc
mov
mov
adc
push
sbb
push
popa
or
rcll
inc
aad
test
sbb
ljmp
lds
mov
neg
stos
pop
sti
pop
dec
std
divb
push
sbb
sbb
sbb
and
mov
lods
movsb
cmpsb
xor
inc
mov
les
ljmp
dec
cld
bound
testb
leave
aaa
add
xchg
sahf
das
out
inc
dec
lret
cltd
push
pop
mov
push
ror
push
filds
cmp
mov
xor
xchg
jecxz
xor
in
fidivl
fs
jbe
xor
scas
cli
inc
and
adc
lea
rclb
inc
pop
aam
leave
push
int
pop
jnp
cmp
addr16
mov
mov
add
es
outsl
pop
pop
adc
in
lea
ja
das
xor
and
dec
imul
scas
or
ret
fidivl
mov
loopne
call
inc
je
sbb
loopne
mov
cli
stc
shll
and
test
scas
lahf
daa
jmp
xchg
cltd
sub
sub
outsb
ret
jmp
push
in
push
dec
jmp
rclb
loopne
lods
pop
xor
mov
in
loopne
into
out
inc
outsb
push
int3
jg
mov
push
push
inc
into
test
ss
mov
imul
in
sub
xchg
mov
fwait
lahf
and
and
lret
cmp
sbb
dec
inc
adc
in
icebp
mov
cmp
jge
mov
push
daa
mov
pusha
sbb
ret
cmp
stos
arpl
dec
fbld
test
or
or
jle
mov
faddl
inc
mulb
cmp
pop
push
or
iret
xchg
jne
pop
push
test
les
xor
jo
mov
out
lcall
es
mov
xchg
mov
lea
add
lcall
dec
adc
and
xchg
stc
jge
subb
push
xchg
inc
xchg
cld
push
jo
movsl
adc
dec
mov
cmp
inc
in
nop
inc
add
xchg
loop
sub
jns
mov
outsb
imul
ret
mov
pop
cmp
jmp
jg
adc
loop
pop
loop
mov
dec
or
pmaddwd
or
pop
add
imul
mov
dec
dec
lret
ljmp
or
cmp
clc
popf
scas
out
das
jecxz
push
insl
fptan
jne
push
mov
fs
jmp
sarb
jnp
out
sbb
and
xchg
inc
xor
xchg
push
shl
push
fidivs
dec
pusha
scas
clc
push
and
cmp
jbe
mov
stc
jmp
adc
notb
fiaddl
je
or
jle
stos
sub
adc
sub
fwait
xor
or
pop
imul
sbb
fbld
pushf
in
pop
shrl
dec
stos
loop
gs
scas
xor
int
mov
mov
cwtl
mov
cs
add
cmpsl
lock
xor
cltd
adcb
add
mov
mov
fwait
xchg
xor
jnp
repnz
sbbl
lock
mov
shll
leave
mov
jle
sub
int
and
adc
or
or
call
xor
hlt
pop
xor
je
adc
lds
pop
out
pusha
cli
jp
aam
out
sub
jecxz
mov
jmp
adc
mov
xor
mov
in
sbb
dec
adc
inc
gs
xchg
and
insl
jg
out
movsl
pop
mov
pushf
jns
ficompl
push
outsl
clc
mov
xchg
lret
sub
sbb
je
out
lock
or
or
dec
xor
int
cmp
stc
add
outsl
icebp
les
or
out
mov
pop
stc
test
inc
lea
dec
movsl
mov
rcll
testl
and
or
mov
or
mov
sbb
jmp
mov
fcmovbe
cmp
adc
push
or
xor
sbb
sbb
or
je
jb
shrl
xor
in
mov
lods
sbb
leave
mov
xchg
dec
gs
pop
scas
iret
repz
bound
sti
sub
jne
mov
mov
jg
xchg
aam
aad
clc
ret
paddb
cmovle
inc
test
or
jmp
mov
sub
dec
sbb
pop
aaa
xchg
sbb
cld
xor
outsb
mov
pop
mov
jmp
orl
fists
sbb
inc
push
jae
xchg
stos
cli
popa
je
jo
or
repnz
call
inc
inc
cli
adc
xchg
and
sub
popa
push
inc
fmull
sti
xor
dec
fs
add
sub
push
sysenter
xchg
repnz
pop
repnz
push
jb
add
xlat
sbb
enter
mov
lcall
sub
add
test
push
sti
adc
push
sbb
xchg
into
je
addr16
jns
inc
js
aad
or
int
push
iret
movsb
sub
stos
or
mov
scas
or
pop
inc
jns
dec
dec
lock
pushf
xchg
shrl
lret
xchg
sbb
or
xlat
sbb
pushl
cmc
cmp
xor
add
test
push
mov
pop
xor
jl
adc
push
loop
inc
mov
mov
pop
push
imul
shll
in
in
sbb
add
pop
push
cli
fcmovnb
daa
inc
int
jo
lods
pop
js
stc
xchg
int
inc
mov
inc
dec
xor
mov
das
aad
push
inc
faddp
or
sbb
sbb
dec
test
push
and
cmp
mov
or
push
call
sub
add
sbb
shlb
sbb
mov
jbe
repz
fcoms
mov
loope
cmp
outsl
push
lods
into
push
and
shrb
imul
mov
scas
ret
outsb
sarl
push
dec
ret
loop
and
add
jnp
jbe
xchg
out
sub
mov
pusha
cmp
notl
std
sbb
sar
jb
push
mov
dec
mov
movsb
in
outsb
and
jns
stos
pop
cltd
xor
popa
mov
mov
test
nop
ds
fs
jp
inc
shr
or
sahf
inc
sub
mov
xor
jecxz
sub
hlt
xchg
neg
jl
mov
out
andl
insb
or
sbb
int
dec
lret
enter
push
cltd
sub
std
pushl
mov
sub
outsl
fisubs
mov
lock
xor
ds
add
js
jg
rolb
std
jle
in
jne
pusha
stos
addl
stc
out
insl
mov
xchg
andl
inc
aam
loop
aad
inc
mov
xlat
mull
mulb
icebp
xchg
xor
dec
jmp
push
gs
or
lcall
xorl
jle
push
fisttps
jecxz
adc
or
aaa
mov
mov
cmp
idivl
enter
and
pop
imul
mov
dec
xor
hlt
in
sbb
nop
jne
mov
mov
xchg
and
pusha
pusha
or
loopne
out
pop
cmp
rcll
bound
or
mov
xchg
inc
xor
ja
mov
jl
aam
ja
jno
idivl
rcr
aam
ja
push
inc
test
and
adc
pusha
sub
cs
es
aad
xor
or
scas
inc
in
pop
adc
fwait
or
mov
adc
ror
sub
int
mov
jae
or
mov
sub
sarl
add
int3
bound
jno
pushf
pusha
div
cmp
shrb
icebp
movsb
mov
mov
jns
lret
inc
pop
pop
mov
cld
cmp
xchg
pop
ja
mov
or
or
mov
push
ja
cltd
add
xorb
popa
insb
outsl
sub
inc
arpl
dec
adc
cli
add
dec
sbb
dec
fsubrl
xchg
jmp
inc
jo
ss
jnp
add
sbb
adc
fcmovnb
in
dec
jmp
push
ljmp
je
jnp
jo
dec
and
push
pop
dec
mov
rcrl
pushf
mov
cltd
lcall
enter
jp
sub
inc
daa
fwait
out
cli
xchg
std
cmp
xor
adc
rcrb
sub
jno
cmp
mov
addr16
dec
sahf
and
bound
bound
scas
aas
xchg
outsl
sub
mov
popa
fsts
adc
push
mov
insl
fadd
xor
sub
add
std
insb
arpl
push
mov
sub
std
push
int
pusha
mov
xor
subb
scas
dec
stc
lret
loop
es
lods
jo
dec
movsb
fisttpl
sti
mov
jg
jle
mov
pop
stos
mov
dec
cmp
mov
xor
and
mov
or
int3
jecxz
adc
push
jbe
push
inc
lea
push
mov
cltd
lock
push
iret
cwtl
js
loope
sahf
dec
clc
mov
cltd
push
inc
mov
sbb
mov
mov
xchg
sbb
mov
cmc
data16
scas
popf
mov
cmpsb
xor
push
mov
xchg
lahf
cmpsl
loope
jnp
add
lahf
lock
mov
lahf
push
jbe
mov
xor
cmp
movsb
mov
cs
mov
add
and
sbb
test
cwtl
push
nop
mov
sti
adc
jo
mov
push
bound
adc
dec
call
sbb
call
movsl
mov
push
or
lcall
cs
stos
mov
sarl
iret
dec
loope
push
loop
mov
pop
xchg
jecxz
int
dec
imul
adc
lea
inc
sbb
mov
push
xchg
cmp
xchg
out
mov
test
in
mov
sbb
jne
sbb
mov
adc
enter
rorb
jb
pop
ret
in
js
jno
ds
jne
and
lret
fmuls
pushf
push
jae
push
lea
mov
std
dec
xchg
adc
arpl
add
hlt
mov
mov
psubw
stc
mov
pop
daa
outsl
mov
xchg
decb
inc
sbb
addr16
loop
leave
jle
xchg
or
push
pop
sub
inc
mov
mov
xchg
jge
shr
outsl
cld
xchg
mov
inc
jl
jno
dec
mulb
fs
mov
outsb
cmp
fdiv
mov
iret
ss
es
fbld
mov
push
lds
dec
jl
and
shrl
mov
out
push
sub
int3
insb
xchg
xor
xor
xchg
cmp
pusha
out
aam
mov
mov
inc
fisubl
int
int3
inc
push
call
jne
sahf
in
dec
xlat
aad
jo
cmpsb
data16
xor
fcomps
xchg
inc
cmp
add
stos
nop
xchg
and
inc
out
pusha
mov
les
mov
and
and
test
aam
idivb
mov
pop
outsb
lods
sahf
pop
out
jl
inc
lret
gs
mov
js
adc
adc
insb
sbb
cltd
sbb
push
les
push
rcrl
or
loopne
mov
lock
imul
lock
ret
or
outsl
ss
push
aaa
pop
add
mov
call
ds
cld
mov
dec
and
fwait
nop
jecxz
mov
pop
test
dec
and
ss
sti
mulb
push
popf
loope
mov
fbstp
cwtl
sub
neg
loop
or
xchg
mov
lods
inc
or
testb
or
outsl
fnstsw
lea
in
pop
lret
pushf
and
pop
enter
pop
pop
fs
xchg
pusha
or
mov
inc
dec
loopne
and
movsb
cmpsl
arpl
jnp
inc
pop
mov
outsb
in
push
clc
repnz
xor
fcoml
rcl
sbb
push
and
in
fnstenv
fimull
leave
pusha
xchg
xor
mov
nop
xor
scas
js
adc
pop
mov
ja
fs
sub
mov
lcall
xchg
js
xor
xlat
pop
dec
dec
das
push
jae
ficompl
aad
std
pop
push
inc
mov
xchg
mov
inc
ss
push
push
cmpsb
out
jne
in
mov
insl
xor
mov
dec
pop
sub
pop
adc
xchg
repnz
push
sbb
fidivs
insb
mov
pusha
cltd
sub
and
lock
pushf
into
xchg
pop
je
insb
cmp
mov
xchg
sub
sbb
ja
push
push
xchg
cmp
sbb
fwait
cwtl
mov
and
leave
enter
inc
sti
cltd
add
jl
add
rclb
sahf
pushl
cmp
scas
fs
data16
mov
mov
sub
dec
cmp
add
xor
loope
test
loope
mov
or
or
and
fisttps
cmp
out
loop
aam
int
sbb
hlt
sbbl
jecxz
sub
push
aas
inc
fstl
leave
lret
jnp
inc
into
mov
mov
mov
jae
xchg
in
mov
push
jmp
scas
adc
mov
mov
push
sub
or
fst
xchg
jle
or
sub
inc
or
scas
addr16
int3
xchg
loope
adc
xchg
cmp
pop
inc
mov
add
adc
std
and
in
mov
lds
insb
sub
cld
repnz
lods
add
fdivrl
pop
scas
fbstp
jbe
jbe
and
jmp
pop
pushf
jmp
popf
mov
xlat
and
loopne
pop
cs
push
sub
cltd
mov
lret
into
mov
pop
push
pop
inc
jmp
lock
dec
ret
sahf
nop
lods
popa
push
std
lock
rcrl
xchg
xchg
shll
mov
fwait
into
pop
imul
addr16
enter
arpl
push
cmp
dec
cmp
mov
dec
addr16
ficompl
mov
xchg
fwait
ss
std
adc
push
aam
jmp
es
push
lock
sbb
fs
imul
filds
xor
jecxz
adc
push
adc
xor
inc
dec
ficompl
in
hlt
insb
sub
mov
add
sub
push
and
sbb
xor
xor
sbb
or
pop
ss
in
pop
imull
sbb
mov
aad
notl
ja
in
negl
cmp
repnz
cltd
adc
int3
loopne
out
mov
or
and
imul
sub
push
jecxz
fs
hlt
mov
xchg
push
jbe
je
sti
lcall
hlt
shlb
push
inc
push
jp
sub
data16
fs
inc
pop
adc
cld
negb
mov
add
nop
pop
inc
sbb
pop
fcoml
mov
lods
jae
stos
js
or
inc
leave
loope
lcall
outsl
or
xchg
xchg
mov
mulb
lcall
pushf
mov
int
inc
imul
loop
ja
lock
xchg
shr
xor
fldl
ds
shlb
jg
int
inc
fldl
aam
jle
aaa
cmpsl
in
out
test
loop
or
dec
imul
cmpsb
inc
jnp
lcall
and
out
test
out
sbb
addr16
fwait
mov
cmp
fadds
aaa
jge
ss
and
fcoml
hlt
dec
cmp
sbb
daa
mov
and
fs
push
push
test
or
cmp
pop
leave
xchg
jge
lods
cmp
sbb
divb
scas
out
cmp
fcoml
sbb
add
and
mov
sahf
or
cmp
sbb
popf
push
in
mov
pop
ja
je
push
mov
imulb
jl
popf
or
push
inc
pop
sbb
or
sub
pop
push
xor
pop
add
cmp
mov
xchg
inc
push
mov
popf
rorl
dec
mov
pop
pop
push
mov
jmp
or
pop
pop
out
jnp
or
push
and
sbb
or
iret
add
stos
add
shl
mov
mov
fistpll
and
inc
mov
ljmp
imul
jmp
mov
movb
push
xchg
inc
mov
jecxz
je
add
jmp
mov
xor
adc
sbb
scas
aad
repnz
push
sbb
mov
sub
sub
xchg
loop
cmp
dec
push
push
inc
sbb
loope
pop
dec
or
jbe
xchg
lock
in
stos
sbb
lods
popf
add
aam
shl
sub
dec
arpl
clc
iret
rcr
cli
sti
push
test
daa
movsb
mov
fnsave
mov
sbb
pop
inc
adc
push
inc
xorb
dec
aaa
loopne
jmp
lcall
or
sub
push
test
cmc
shlb
sub
incl
dec
cmp
or
scas
dec
imul
jbe
xchg
push
insl
xchg
clc
add
lock
repnz
popf
pop
ljmp
push
cmp
hlt
mov
xchg
jbe
inc
pop
fmuls
call
add
scas
cmp
in
ret
jns
notb
dec
pushf
inc
sarb
pop
inc
ret
jns
xchg
pop
out
repnz
cli
std
mov
sar
adc
sti
add
jo
mov
icebp
xchg
shll
fdivrl
mov
cmp
mov
cmp
sbb
inc
add
adc
sbb
arpl
fcomip
mov
gs
sarl
dec
ja
mov
add
shll
add
decl
aad
jne
and
push
sbb
fcmovb
loop
sub
dec
push
xor
ja
jae
ds
dec
ss
mov
rolb
test
ret
fistl
test
test
pushf
adc
icebp
gs
fdiv
cmp
mov
sbb
insb
lahf
mov
or
cmp
fdivrl
jno
pop
dec
inc
fcompl
dec
ss
and
icebp
pop
test
add
lcall
push
sti
idivb
pandn
in
pop
ret
ret
loopne
je
ja
cmp
mov
arpl
push
push
cmp
mov
xor
loop
sahf
jp,pt
push
jge
test
pop
and
nop
add
jl
adc
sbb
inc
bound
lds
pushf
pop
adcb
dec
pop
xchg
mov
outsb
or
dec
shll
cmpsb
out
or
inc
sarl
sbb
inc
arpl
stos
inc
imul
inc
sub
mov
adc
sti
addl
jae
int3
cmp
mov
loope
mov
scas
int
xchg
ror
push
or
lock
stc
sub
ret
cmc
insl
cmpsb
cli
shrb
xchg
ret
jge
dec
lret
out
test
jae
cmp
aaa
loop
arpl
hlt
add
shr
pop
lods
lahf
jle
cmp
nop
cmpsb
adc
cmpsb
test
out
popa
in
cmc
xlat
and
sti
dec
mov
gs
add
sbb
sbb
test
dec
or
mov
xchg
icebp
lret
inc
sbb
gs
clc
add
cmpl
dec
mov
cld
adc
sti
xchg
bnd
stc
add
xchg
out
and
jnp
mov
stc
inc
adc
mov
sbb
das
xor
mov
mov
lcall
mov
pop
adc
jmp
mov
mov
xchg
hlt
xorb
pop
cmp
sbb
loope
pop
mov
loopne
imul
or
or
loope
sbb
or
rcll
push
mov
aam
outsl
mov
mov
movsb
mov
inc
stos
lods
fwait
pop
dec
adc
mov
jl
sbb
insl
out
or
ljmp
loop
iret
inc
fistps
cwtl
or
rorb
adc
shlb
cmp
jno
mov
sbb
test
test
xchg
or
rclb
aam
push
sub
xchg
fs
cmp
iret
negl
cmc
mov
in
repnz
push
fists
cltd
and
mov
jns
mov
cmp
mov
sbb
cli
push
add
mov
outsl
cmp
sbbb
jnp
and
pop
dec
je
aam
mov
cmpb
mov
leave
pop
andb
sahf
mulb
sub
or
popa
jo
pop
xchg
mov
dec
outsl
sbb
mov
in
sbb
stos
mov
and
lea
adc
or
and
inc
nop
inc
xor
pop
add
mov
addb
mov
or
pusha
mov
sub
mov
stc
aam
fidivl
dec
mov
and
adc
and
loop
pop
xchg
loop
repnz
jnp
pop
push
fcoml
sarb
xchg
test
in
jmp
sub
pop
push
mov
loopne
mov
inc
nop
jae
in
lds
push
test
sub
lock
pop
xchg
jp
jne
jge
jnp
mov
mov
mov
aam
sub
mov
in
xor
or
mov
and
cli
fmull
inc
pusha
xchg
icebp
or
shll
and
inc
or
and
ss
andl
dec
xchg
or
jp
mov
bound
pop
aas
pop
sbb
icebp
mov
and
cli
in
cmp
push
mov
cmpl
push
adc
push
int
stos
add
or
das
add
aad
sub
psrlq
je
arpl
pxor
gs
jp
cwtl
test
in
hlt
test
fsts
mov
cwtl
sbb
pop
andb
pop
xchg
shlb
pushf
inc
rorb
pop
mov
je
jnp
cmp
mov
cs
je
jecxz
loop
aad
popf
sub
mov
sub
repz
xor
stos
iret
lret
sti
inc
dec
sbb
sbb
push
lock
cld
push
or
push
repz
push
mov
xor
cmp
pop
sbb
aas
xchg
outsl
mov
or
arpl
aaa
ds
negl
xchg
push
pop
pop
sbb
mov
mov
and
push
insl
pop
jle
sub
outsl
addr16
andb
xchg
lret
and
inc
push
repz
sub
xor
mov
loopw
daa
pushf
std
gs
aam
shl
mov
gs
xlat
xor
cmc
mov
rcrl
lret
in
pop
push
cwtl
mov
fcomp
rcrb
icebp
or
cmc
lds
push
movsl
es
mov
add
out
mov
rolb
adc
loop
fs
sahf
jmp
pushf
stos
mov
push
dec
repz
fdivrl
xor
cwtl
xchg
in
or
xchg
call
aas
loop
and
pushf
popf
cmp
das
add
lods
test
lds
leave
repz
and
jnp
test
xchg
insl
fs
mov
mov
jge
mov
mov
push
andl
xorl
inc
sbb
cld
xor
test
and
cmpsb
lcall
fs
shll
inc
mov
push
dec
mov
jnp
pop
lods
cmc
adc
cli
mov
lock
movsl
and
pop
fmul
movsl
cmp
incl
ss
leave
lret
inc
push
and
pop
sbb
xchg
dec
jmp
cmp
mov
inc
lds
or
xor
jb
iret
fs
daa
dec
enter
cmc
fnstcw
aas
and
push
sub
mov
sbb
aas
out
add
xor
sbb
jle
or
push
push
jae
jg
aad
aas
mov
pop
and
imul
in
sbb
lock
pop
jns
dec
pop
outsl
cld
sbb
sub
pop
aam
or
loopne
and
test
xlat
mov
adc
fldl
jns
imul
xor
add
push
pop
sub
push
push
cmp
ret
bound
pop
dec
stos
loopne
mov
adc
ljmp
or
out
shrl
in
and
xchg
ret
xor
iret
add
stc
and
daa
stc
cmp
ret
push
mov
inc
xor
outsb
push
pop
test
popa
xchg
jg
dec
dec
mov
out
lods
sub
xorb
push
xchg
jmp
and
enter
mov
dec
je
mov
dec
push
fmuls
lcall
fnstsw
or
cmp
jmp
jl
pop
xchg
jmp
xchg
mov
sub
push
jns
mov
push
dec
sub
pop
lret
rclb
imul
jmp
mov
pop
mov
dec
repz
mov
test
adc
nop
push
or
add
inc
out
jno
loopne
scas
push
cmpl
loope
cmp
into
xchg
dec
imull
cmp
mov
fs
mov
adc
xlat
cmp
adc
fld
adc
add
add
insb
dec
cli
mov
sbb
adc
fwait
lock
aaa
fistpl
pop
test
pop
stos
inc
dec
mov
int
dec
xor
inc
aas
cwtl
jl
pop
xchg
fisttpll
jg
jecxz
pop
or
or
outsb
sub
mov
fisubrs
outsb
push
pop
xchg
outsl
xchg
cmp
in
scas
gs
sub
push
xchg
fwait
or
arpl
xchg
das
mov
shll
ret
mov
push
fwait
pop
out
or
inc
gs
int
or
inc
cld
mov
in
xchg
fldenv
xchg
dec
aad
jae
fldt
inc
cmp
pop
aad
sub
inc
les
dec
pop
jmp
fnstenv
pop
dec
movsl
and
loope
std
cmpl
dec
mov
fcoml
push
mov
es
insl
gs
jb
in
test
loope
jo
jl
mov
ss
cmp
insb
fyl2x
cmp
add
lds
das
push
in
xchg
lock
sbb
xor
mov
sahf
add
sbb
or
mov
sub
lret
sbb
shl
fwait
jnp
or
inc
test
sbb
sbb
incl
xchg
xchg
adc
lret
push
mov
or
dec
xor
dec
dec
sbb
jmp
lcall
in
scas
mov
leave
xchg
inc
mov
pop
or
int3
add
test
xor
sub
pop
and
or
pop
xor
adc
nop
jae
aam
sbb
rcll
int
push
cmpsl
imul
push
cmp
loopne
mov
or
mov
in
lods
getsec
ret
fs
jbe
stc
idivl
jecxz
aad
ret
inc
andb
mov
fsubl
cmc
ljmp
mov
mov
nop
dec
jno
shlb
loopne
xlat
aas
add
loop
jp
xor
stc
mov
je
jmp
dec
cmp
in
mov
arpl
jp
mov
fsubrs
inc
lret
fdivl
clc
sub
push
mov
test
cmpsb
xchg
xlat
fists
jge
mov
ja
mov
sub
icebp
arpl
cwtl
movsb
add
pushf
gs
cld
add
mov
jns
aad
xor
jp
les
jl
out
sub
loope
jge
imul
sub
lods
bswap
outsl
sub
adc
cmc
mov
cli
inc
xor
outsl
inc
push
lfs
cld
xchg
jb
sub
pop
jl
dec
ljmp
jb
ret
scas
push
enter
loope
mov
loope
icebp
sub
xchg
inc
cmp
sub
jnp
loop
popw
lret
jo
ret
int
pandn
jge
jns
and
scas
enter
push
mov
icebp
mov
bound
push
inc
fisubrs
cmp
in
mov
cmp
sub
push
dec
imul
xchg
sub
jg
jl
shll
inc
push
filds
data16
xlat
lock
jno
or
xor
call
cld
pusha
popl
pop
pop
add
mov
cmp
dec
push
outsl
scas
mov
insb
cli
push
je
inc
and
xchg
test
adc
cwtl
int3
mov
cmp
mov
sbb
push
leave
mov
inc
xlat
pop
mov
mov
adc
xchg
pop
jl
in
cmp
jno
stc
mov
add
mov
cmpsb
rol
sahf
xchg
mov
pop
mulb
mov
mov
adc
imul
or
dec
cmp
jl
adc
push
stos
fldcw
xor
add
dec
add
cmp
stos
clc
xchg
mov
gs
loop
int3
xchg
push
jbe
push
or
push
mov
push
xchg
in
in
ja
add
adc
sbb
fnstenv
inc
jnp
jmp
addl
orl
mov
jae
jno
ror
pop
rol
je
pushl
popf
and
imul
mov
lret
add
lret
dec
xchg
pop
lea
out
lahf
mov
push
adc
ds
mov
subl
cli
out
out
in
fs
jno
sub
adc
fs
ret
jnp
mov
xchg
hlt
aam
rcrb
or
aaa
push
pop
xchg
popf
pushf
pop
out
inc
mov
pop
cmp
cmpl
xor
mov
xchg
cmpsb
movsb
mov
stos
aaa
add
sbb
lods
mov
sbb
cmpsb
imul
push
stc
mov
mov
cmp
stos
movsl
loop
cmp
xchg
jl
pop
xchg
and
out
xchg
and
adc
icebp
push
push
xor
fs
push
mov
adc
or
imul
aam
mov
hlt
ror
lods
push
dec
clc
mov
test
fidivrl
inc
ficoml
sub
jp
adc
notl
fstps
cmp
lahf
leave
cmp
cld
mov
test
stos
xor
mov
xor
xor
mov
mov
pop
stos
bound
xor
aaa
push
into
lods
inc
lea
mov
loop
enter
or
pop
adc
cmpsb
stos
iret
push
and
mov
stc
iret
push
mov
pop
push
repnz
movsb
mov
sbb
cmp
hlt
in
cmp
cld
mov
sbb
cld
mov
popa
int
imul
jmp
mov
or
fidivrl
in
cmpsl
ficompl
xlat
and
adc
jno
mov
cmc
pop
shr
pop
jb
xor
or
enter
push
loopne
adc
clc
and
test
and
sbb
arpl
xchg
rep
xchg
jns
sbb
and
rol
jo
adc
push
cs
or
sarl
cmpsl
cmc
pop
test
add
lock
sahf
pusha
and
loopne
inc
fadds
fsub
out
mov
sub
std
jne
jl
mov
mov
and
xchg
push
int
dec
add
fucomip
and
push
ss
push
mov
push
pusha
decb
loopne
pop
mov
or
cs
sub
int
add
into
pop
ss
in
push
sbb
testl
mov
scas
dec
xchg
mov
mov
in
cmp
mov
cmp
pop
mov
loop
dec
insb
push
cmp
or
rorb
lods
mov
out
jae
test
adc
xchg
mov
pushf
shll
xor
mov
pop
inc
cmp
sub
gs
insl
repz
cmp
mov
dec
cwtl
or
mov
pop
push
repz
jnp
xchg
aaa
dec
mov
xlat
push
push
orl
inc
test
leave
inc
and
jge
jns
xchg
sbb
test
sarb
lahf
gs
repz
mov
jmp
mov
repz
pusha
lcall
fistpll
push
sbb
fwait
stos
cmp
cwtl
test
cmp
push
movsl
ror
out
mov
pop
lret
bound
mov
mov
add
sbb
pop
mov
roll
popa
test
gs
pop
cltd
mov
cmp
aad
ret
je
test
or
push
lret
call
pop
shll
mov
adc
in
sub
popa
repnz
add
jno
lea
pop
mov
inc
fcomps
cmc
fimull
xchg
pusha
or
cmp
fsubs
ss
cmp
sbb
lock
repnz
pop
ljmp
incb
ror
or
pop
sub
jp
sub
mov
sbb
cmp
sbb
jmp
test
lret
shlb
push
push
ss
add
out
push
and
pop
inc
imul
push
ret
sub
imull
and
cmp
sbb
mov
inc
add
in
leave
pop
sub
cld
mov
mov
bnd
or
or
cmp
icebp
mov
test
cmp
xchg
pop
data16
mov
lahf
lods
cmp
jp
or
pop
test
pop
push
das
es
add
mov
mov
sub
push
std
hlt
lds
lods
cmp
dec
and
sub
lcall
popa
das
push
cmp
test
divl
cmp
pop
pcmpeqw
push
ja
mov
xchg
ljmp
aas
push
and
mov
mov
mov
clc
in
xchg
stos
roll
pop
fs
dec
ds
mov
mov
subb
xchg
cmp
mov
inc
test
push
mov
pop
sub
jle
or
imul
push
sub
push
add
movsl
sarb
xchg
das
outsb
sbb
xor
lods
inc
cwtl
fcomps
ljmp
xchg
lahf
dec
das
dec
gs
pop
inc
sbb
push
pushf
adc
cmc
or
cltd
subl
or
adc
mov
lcall
cwtl
rolb
loope
int
push
jo
pushf
xor
sbb
popf
shll
add
push
and
mov
lret
enter
repnz
aaa
mov
pop
repz
dec
andb
sub
cli
inc
js
jno
aas
or
adc
out
aam
inc
cmp
in
mov
dec
enter
iret
pop
in
aam
pushf
sbb
cmpsl
std
rcrl
lock
add
fs
add
pusha
lret
imul
pop
fwait
aad
mov
xor
adc
rorb
shrl
pop
jae
ljmp
imul
mov
jae
xchg
loope
pop
je
aaa
out
pop
int
push
unpckhps
and
cmc
pop
and
cmp
popa
and
jnp
xchg
cmpsb
stos
pusha
std
fsubrl
popf
mov
sti
push
dec
jne
bound
pushf
dec
dec
insb
or
ret
fucomi
push
loop
ds
ss
mov
test
jle
cmp
cmpsl
rcl
ret
outsb
jle
mov
dec
shll
and
cmp
insl
pop
jno
push
inc
cmp
jns
das
add
adc
jno
nop
fldenv
push
jl
divl
das
mov
rcr
push
repnz
mov
into
fidivrl
xchg
or
sub
ja
xor
push
mov
cwtl
adc
push
call
adc
xchg
lea
icebp
xor
inc
inc
push
repz
adc
popa
sub
jle
mov
pop
cmp
xor
hlt
fcmovnbe
inc
js
inc
cmpsl
xor
cmp
cmp
push
lss
jge
cs
out
and
add
repnz
rorb
sbb
fwait
stos
xor
movsb
popa
sti
lahf
mov
push
adcl
add
aaa
push
cmp
test
mov
dec
das
xchg
jecxz
repz
js
sahf
mov
push
mov
aam
mov
and
adc
or
jns
lahf
dec
pop
icebp
push
dec
xchg
ds
pop
and
xchg
test
xchg
es
xchg
aad
sub
aas
adc
mov
out
decb
adc
das
and
jnp
shl
push
sub
out
rclb
dec
clc
mov
jecxz
rsqrtps
loop
cmc
mov
out
filds
and
nop
out
ss
in
stos
cmpsl
gs
das
pushf
cmpl
sub
mov
es
pusha
mov
test
addr16
les
cmp
cli
nop
xor
mov
stos
add
cwtl
iret
ret
addr16
daa
fwait
bound
mov
outsb
inc
mov
and
sbb
leave
inc
adc
ret
cltd
dec
aaa
mov
and
xchg
idiv
cmp
pop
popa
test
xchg
test
lds
pop
dec
dec
cmovno
stc
pop
outsl
push
fisttpll
jne
ja
jmp
mov
add
xor
mov
mov
and
mov
push
in
inc
cmp
stc
push
push
dec
push
fwait
mov
pop
cmpsb
inc
pusha
xchg
nop
in
sbb
mov
inc
inc
or
rolb
sbb
xor
inc
mov
clc
cltd
int
repz
push
je
xor
lcall
fwait
adc
stc
jnp
dec
mov
pop
les
pop
mov
sub
enter
dec
push
sub
mov
dec
sub
mov
imul
lods
icebp
lret
pusha
mov
mov
push
xchg
fmull
loope
loope
call
mov
jge
mov
and
and
dec
test
cmp
sarl
xchg
hlt
cmp
jmp
xor
mov
test
cmpsb
jbe
loop
jo
sub
inc
pop
imul
sbb
insl
cmpsb
fisttpl
ljmp
sbb
iret
lock
add
or
push
pusha
movb
mov
jno
mov
ret
ret
fs
outsl
pop
movsl
std
sets
pop
icebp
icebp
push
sbb
cwtl
cld
cmpb
mov
mov
cli
test
adc
rolb
or
push
and
mov
hlt
lcall
lods
push
js
fisttpl
rclb
inc
lret
loopne
mov
add
push
add
mov
or
fsubs
aaa
aas
sbb
cmp
xchg
std
add
insl
cmp
fwait
add
jb
cmpsl
div
daa
fisttpll
and
in
cmp
push
dec
stos
ljmp
test
mov
and
stc
inc
xor
pop
xchg
inc
js
sbb
adc
hlt
adc
sarb
cmp
aad
gs
lret
leave
jb
mov
jg
jae
stos
xlat
mov
pop
mov
in
cmp
mov
inc
int
out
flds
cwtl
scas
jo
push
jecxz
sbb
popf
mov
cwtl
call
mov
push
jmp
out
imul
or
or
addr16
mov
je
fistps
mov
mov
aad
push
cmpsb
ljmp
popa
xlat
mov
pushf
sbb
es
loope
notl
mov
push
inc
push
fcompl
imul
nop
cmp
mov
scas
jg
push
pop
inc
repnz
dec
push
or
insb
jg
loop
xchg
dec
shrb
dec
adc
fsubp
mov
push
icebp
pushf
add
mov
test
push
or
pop
outsl
pop
lods
and
and
pop
or
jl
xchg
jp
adc
xchg
jecxz
jge
add
inc
lahf
aad
stc
cmp
loop
test
dec
or
xor
inc
mov
insl
or
push
dec
push
push
mov
xchg
popa
or
aaa
pop
dec
mov
mov
ret
test
movsl
imul
sahf
mov
push
sub
aam
and
mov
cmp
imul
or
int3
add
mov
popa
repz
mov
xor
mov
cld
fnstenv
cmp
jp
sub
jp
adcb
je
pusha
push
adc
jmp
cmp
ljmp
mov
mov
jno
in
insl
mov
lods
daa
jbe
icebp
push
cmp
shrb
push
jle
les
push
test
js
sub
pop
clc
fsubrl
sub
push
daa
inc
lcall
inc
aas
icebp
jo
jmp
bsr
int3
lahf
adc
mov
fucomip
insb
pusha
push
iret
sbb
loop
in
lods
sbb
dec
add
jge
shll
mov
out
xchg
enter
clc
dec
push
push
sub
sub
pusha
je
repz
repz
scas
hlt
cmp
jnp
data16
test
out
cmp
popf
fldl
push
rcll
fisttpl
jb
ret
les
mov
cmp
daa
sti
daa
add
roll
push
test
jecxz
imul
imul
pop
xchg
mov
jbe
push
adc
sbb
ret
pop
jb
dec
dec
jmp
call
add
sbb
dec
les
icebp
add
mov
lret
bnd
pop
out
xchg
adc
loopne
nop
mov
repnz
mov
cmp
das
rolb
adc
pop
dec
bswap
mov
mov
or
ds
fs
in
sub
push
mov
lock
sahf
add
icebp
xchg
popf
xor
push
shlb
sbb
arpl
adc
fadd
xor
add
adc
loope
shrb
inc
xchg
and
daa
aaa
cmp
stos
or
add
or
inc
jg
sub
inc
roll
std
shrb
idivb
sub
aas
or
scas
inc
nop
sbb
les
or
ror
dec
dec
data16
mov
jb
adc
imul
cmpsl
cwtl
dec
and
pop
pop
sub
popf
out
cmpsl
pop
testl
lret
or
and
aaa
cltd
sti
outsb
xor
sub
sbb
push
das
cmp
in
mov
clc
or
clc
mov
mov
mov
push
mov
int
ja
imul
dec
popf
es
xor
popf
out
sbb
stos
pop
cmpsb
push
mov
sahf
xchg
stos
push
aaa
mov
mov
mov
push
fisubl
les
sar
fstps
scas
xchg
xor
orb
push
scas
daa
adc
pop
mov
jmp
xor
sbb
out
pop
pop
hlt
lods
and
je
test
popf
mov
jmp
dec
xor
push
mov
mov
sbb
addr16
push
xor
inc
sbb
mov
stos
into
fnstenv
sub
or
in
out
mov
imul
test
and
dec
cmpsl
pop
jae
rcll
xchg
lret
cmpsl
push
loope
adc
aaa
mov
ljmp
or
imulb
dec
push
adc
jb
sbb
cmp
rorl
sbb
fmul
and
pop
cmp
aad
inc
test
enter
add
mov
dec
jns
insb
dec
aad
mov
into
lock
lock
roll
add
popa
sahf
adc
sahf
cld
scas
or
imul
repz
testb
pop
mov
mov
stc
daa
mov
arpl
ds
int
pop
je
lcall
cmp
enter
pushf
inc
jmp
push
test
mov
in
push
test
jg
cmpsb
pop
mov
jl
xor
imul
inc
fnstsw
les
scas
mov
fstl
dec
shl
push
fidivl
adc
addr16
pop
lods
mov
and
data16
nop
jno
sbb
adc
jbe
and
dec
mov
jo
popa
pop
inc
bnd
mov
cmpsl
movsb
movsb
mov
fwait
in
sub
repz
dec
jg
xchg
sbb
sbb
or
mov
js
mov
dec
jbe
aad
push
lret
pop
jns
xor
and
fxch
push
popf
fwait
cs
xchg
stos
add
mov
jp
leave
push
sahf
mov
xor
mov
dec
daa
cmpsb
push
jmp
fcoml
rorl
test
shr
or
cmc
stos
nop
cli
scas
fcompl
cmp
stos
xchg
xor
mov
out
and
aad
jge
push
xchg
mov
pop
mov
and
cltd
pop
in
mov
loop
xchg
push
out
inc
mov
xchg
cmp
js
and
dec
aaa
rclb
push
out
mov
mov
sub
les
mov
imul
cmp
ss
dec
xchg
mov
inc
sbb
cmp
ljmp
bound
fists
rorb
les
fs
xchg
cwtl
je
cmpsb
pop
into
lds
lret
into
and
inc
push
lret
leave
adc
push
jb
ror
iret
lahf
cli
fsub
addr16
ss
cwtl
jo
in
aam
jl
lea
push
ret
outsl
sbb
out
or
mov
mov
ljmp
lock
sarl
fadd
repnz
mov
stos
cmp
or
fsubr
sub
bound
xlat
int
jo
xlat
les
mov
sbb
add
fs
int
cmpsb
push
sub
frstpm(287
add
lcall
mov
inc
ficompl
int
call
cmc
and
in
mov
inc
mov
and
lahf
cmpsb
push
push
xchg
push
lods
jmp
push
shrb
stos
dec
xor
mov
data16
inc
or
mov
loopne
pusha
cwtl
dec
loopne
xchg
and
stos
in
xor
clc
lret
dec
imull
fcmovnb
sub
jl
adc
adc
std
jecxz
mov
or
inc
xchg
fs
push
jle
int
mov
lea
fsub
fwait
shlb
ret
popf
repnz
pop
ret
insl
jae
sbb
daa
jns
ss
shlb
xor
mov
xchg
ljmp
popf
xor
xorl
inc
inc
jmp
out
insb
pop
in
sub
dec
add
jecxz
icebp
push
jg
inc
xor
jg
dec
push
punpcklwd
mov
in
iret
sub
dec
enter
jmp
jnp
popa
adc
scas
sub
adc
fsubrl
jge
mov
repnz
addb
cmp
cmc
insb
sub
xor
sbb
and
sbb
pushfw
xchg
subl
mov
daa
inc
inc
mov
js
and
push
jne
icebp
mov
mov
dec
cmpsb
mov
in
in
xchg
mov
jl
jo
je
inc
mov
pushf
inc
incl
or
adc
pop
je
ja
adc
mov
pop
pop
lock
gs
repnz
outsl
dec
inc
jno
fsubs
sbb
test
outsl
imul
enter
xchg
addl
lcall
inc
out
dec
out
inc
lcall
scas
pop
mov
idiv
mov
pushf
into
mov
stos
das
or
jmp
out
cltd
leave
les
ljmp
loope
mov
movsl
or
subb
push
ret
insb
pop
xchg
inc
mov
imul
and
inc
xlat
dec
mov
dec
inc
mov
mov
or
test
jno
nop
cli
outsb
mov
dec
fs
call
cmp
mov
add
outsl
aam
xchg
test
sub
or
idivl
xor
dec
or
test
push
mov
fimuls
xor
and
mov
ljmp
hlt
dec
test
addb
lret
jb
insl
testl
jb
inc
pop
mov
dec
lock
out
out
jecxz
mov
mov
loop
fisttps
sub
sahf
in
scas
fnstcw
iret
cmpsl
lods
push
lcall
call
add
cwtl
push
psubw
gs
repnz
outsl
inc
jecxz
fidivrl
test
jne
jmp
cmpsl
jp
pop
pushf
pop
mov
adc
mov
and
push
xchg
cli
jmp
adc
daa
repz
adc
xchg
in
ljmp
mov
ds
adc
jbe
test
push
xor
test
imul
clc
jp
lea
ljmp
or
fcmovnu
jae
lret
loop
inc
into
pop
ja
enter
lahf
pop
xor
xchg
jb
xor
sbb
cmp
jl
mov
mov
inc
icebp
jne
push
adc
in
or
dec
xor
mov
lods
test
sub
inc
inc
scas
mov
pushf
popf
cmc
sbb
adc
loop
cmpsb
push
sub
pop
dec
mov
inc
adc
mov
xchg
xchg
pop
add
mov
fildl
insl
ss
icebp
cli
inc
push
add
push
lock
stos
lods
es
add
mov
xor
pop
mov
imul
pop
imul
or
jp
push
dec
sbb
enter
loope
adc
or
mov
fnstcw
push
jae
lds
xor
xchg
sbb
xchg
sbb
inc
or
pop
js
sub
rol
inc
and
arpl
out
leave
call
sbb
push
out
lds
ljmp
xchg
sbbl
mov
cmp
and
xorb
icebp
pushf
les
test
push
adc
mov
or
mov
scas
movsb
je
mov
ret
xlat
dec
pop
out
pop
ret
rcr
xor
in
in
mov
in
int
aad
stos
adc
pop
sub
sahf
xchg
adc
inc
int
add
test
popf
out
mov
mov
mov
sub
and
dec
ja
dec
xor
pop
push
sbb
cmp
push
les
pop
stos
dec
inc
hlt
lds
push
mov
ficoms
das
cmp
shrl
lret
inc
inc
stos
and
xor
testl
add
dec
int3
rcll
outsb
mov
fimull
loop
xor
aad
lds
cwtl
add
sbb
and
call
ss
adc
pop
adc
mov
add
mov
mov
sbb
adc
push
stos
xor
mov
sub
fs
and
repnz
popf
inc
sub
xchg
bound
adc
ficomps
mov
or
mov
decb
jbe
loopne
push
fildll
inc
rol
inc
daa
and
inc
ja
cs
inc
sub
mov
push
jne
cmp
dec
pop
jecxz
adc
jg
sbbb
mov
data16
cmp
or
cwtl
jmp
mov
imul
dec
std
or
inc
cmp
icebp
xchg
test
and
stc
sub
cmp
lock
aas
out
or
sub
jb
rorl
dec
add
or
daa
pop
mov
shl
insb
std
inc
fdivrl
pop
pop
fildll
int3
sub
mov
cmp
add
inc
fldcw
loop
movsl
scas
cwtl
subb
dec
cwtl
fwait
lcall
cmp
rolb
add
cmp
ret
and
rcll
in
mov
divb
test
add
fstpt
xor
jmp
push
pop
mov
es
fdivl
js
lock
jbe
pop
mov
xor
rol
sbb
imul
dec
mov
add
test
inc
in
leave
rep
add
xchg
sarb
das
scas
and
jo
pop
mov
push
movl
ljmp
dec
adcb
into
aaa
mov
out
bound
repz
movb
pop
mov
adc
xor
mov
inc
mov
insb
rclb
cmpsl
popa
push
imul
fsubs
test
xchg
mul
lea
test
mov
add
pushf
mov
jbe
aad
ljmp
cmp
in
cmpsb
mov
jns
or
outsb
cs
popf
repz
sub
push
or
rclb
inc
insb
mov
ds
xchg
daa
mov
nop
mov
lds
mov
push
and
rclb
cmp
movsl
push
jo
leave
inc
inc
notl
jmp
pop
data16
dec
lret
out
mov
cmpl
rcll
cmpsb
dec
cmp
inc
enter
mov
mov
mov
jno
pop
jmp
cmp
pop
sub
mov
add
test
js
arpl
or
adc
scas
movsl
jnp
shl
fadds
aad
xchg
inc
pop
adcl
popf
das
adc
inc
and
jns
xchg
notl
ret
jne
push
shlb
xchg
aam
pop
pop
and
nop
mov
hlt
push
lcall
xlat
in
push
mov
pop
mov
pop
outsl
mov
lret
loop
fwait
xchg
cmp
imul
out
mov
and
push
fimuls
add
dec
rep
xchg
xchg
push
cli
mov
in
or
dec
inc
xchg
test
out
dec
andb
push
enter
pop
stos
or
clc
ficomps
cmp
lods
mov
xor
jmp
imul
or
inc
pop
cld
sbb
or
mov
inc
adc
dec
mov
jp
int3
outsl
shrb
adc
shl
dec
xchg
sbb
pop
mov
jp
orb
push
mov
cmp
pop
leave
xchg
inc
add
jl
in
sbb
imul
inc
adc
repnz
je
xor
jp
int
pusha
repz
mov
xchg
jnp
adcl
lahf
sub
xchg
loope
pop
pop
nop
adc
sbb
insl
mov
aam
push
push
jns
in
xor
push
repz
jp
insb
jge
in
flds
inc
add
xchg
xchg
dec
sarl
pop
dec
cmpsl
and
inc
sbb
sahf
sti
mov
push
testb
ja
scas
cmpsl
pop
call
jp
lods
cmp
xchg
aaa
loop
mov
arpl
lcall
arpl
push
xor
jl
sbb
sbb
out
ret
add
subb
and
inc
push
cmp
das
hlt
add
mov
idivb
ljmp
jno
out
test
lahf
clc
xlat
fcompl
mov
mov
in
ja
mov
pusha
pop
pop
sti
push
test
lea
mov
pop
fcoml
add
add
xchg
lret
das
mov
imul
and
cwtl
mov
je
sbb
in
cmpb
xchg
xor
xor
inc
insl
jnp
das
aaa
pop
push
xchg
ds
pop
rcr
inc
xchg
rcr
pop
xchg
out
fisttpll
inc
int
xchg
test
sub
outsb
repz
mov
shrb
call
loope
jno
insb
orb
jb
cmp
sub
lods
mov
movsl
xlat
sub
rorb
iret
jo
pop
mov
jp
js
shrb
mov
mov
pop
pop
jbe
pop
jae
adc
or
xchg
push
jmp
and
xchg
xor
lea
fisttps
cmp
repnz
faddp
add
pop
sub
fidivs
aam
test
xlat
out
fdivrl
inc
and
lds
or
inc
leave
push
ficoml
xchg
mov
fwait
cwtl
test
movsb
arpl
je
push
outsl
mov
adc
add
mov
pop
bound
in
push
cmp
or
mov
mov
mov
push
mov
xor
or
fiadds
mov
scas
loope
std
je
aad
insb
daa
cmp
pushf
push
inc
ss
fs
inc
popf
jno
nop
jmp
push
mov
sbb
ret
jbe
xchg
popa
push
adc
stos
lret
pushf
loope
sub
icebp
aad
aas
dec
outsl
dec
cmp
and
lea
sub
adc
pop
cmp
int3
mov
mov
ret
jecxz
outsl
stos
sbb
push
inc
cmp
pushf
hlt
cltd
in
xchg
negl
push
imul
popa
xlat
pop
dec
fldenv
pop
addb
cmc
adc
lea
jmp
mov
sbb
test
icebp
mov
sbb
or
jb
ret
out
popa
pop
or
xor
loop
lea
out
push
or
sbb
adc
pop
test
mov
daa
xlat
sub
or
aaa
js
nop
push
adc
jne
rcrb
out
jmp
add
push
neg
fildl
push
pop
add
and
mul
add
gs
dec
insb
cmp
js
mov
enter
insl
mov
jnp
lret
pushf
pusha
pop
enter
sar
int
dec
adc
stc
cmpsb
out
pushf
or
fucomp
cmc
scas
lock
pop
mov
int
cmp
push
xchg
movsl
sti
jne
xchg
mov
cmp
js
jp
inc
pusha
ret
mov
loope
repz
and
or
aam
and
loope
sbb
ret
inc
fsubrl
out
add
xor
rol
ret
out
jnp
ret
fisubs
pop
in
pop
push
daa
push
push
scas
mov
lret
pop
or
adc
data16
pop
dec
lret
xchg
aam
out
cmp
in
je
ret
inc
mov
dec
ja
rorl
push
shll
sbb
pop
mov
dec
in
das
pusha
inc
arpl
xchg
ret
pop
cmp
sub
push
xor
mov
scas
out
add
scas
inc
cs
outsl
pop
imul
mov
jnp
mov
nop
sbb
jno
enter
add
cmp
pushf
ret
xor
movsl
sub
sbb
icebp
lds
dec
jbe
lea
nop
xor
enter
stos
js
inc
pop
fadds
fiaddl
cmpsl
mov
loope
popf
jb
push
lret
add
and
push
sub
push
xchg
jo
xchg
leave
popf
in
daa
mov
cmp
insb
in
dec
outsb
pop
or
dec
bound
jno
add
push
in
or
or
jno
outsl
sti
in
and
shl
lret
in
ja
stc
out
outsb
loop
std
or
xchg
fstps
push
sub
js
mov
lds
stos
dec
out
mov
int3
repnz
inc
mov
sahf
cmp
mov
or
imul
sub
pop
inc
rcrb
xchg
inc
sub
ds
push
arpl
iret
cmp
lods
mov
das
fimull
add
cmp
mov
sbb
sub
inc
push
pusha
dec
xor
push
arpl
sbb
sbb
stos
stos
lcall
push
pushf
sbb
daa
dec
mov
sub
push
icebp
push
mov
lods
rol
out
dec
adc
insb
sub
jb
and
xchg
in
mov
jnp
mov
push
cmpl
in
pop
jl
decl
movsb
das
aad
cwtl
int
mov
push
testl
ja
pushf
mov
movsl
push
cmc
clc
xor
xchg
add
sbb
xor
adc
mov
mov
push
daa
sbb
call
xorl
cmp
and
push
jnp
or
lods
into
std
psubq
stc
ret
sbb
addl
lods
cmp
pop
fnsave
rorl
enter
mov
jecxz
loope
pop
push
mov
ret
push
push
xor
or
fmuls
outsb
adc
loope
jp
push
xlat
inc
into
fs
pop
adc
negl
mov
adc
and
jl
sub
xchg
aad
das
mov
imull
sarl
cmp
mov
mov
push
test
leave
rcr
inc
aaa
adc
scas
je
jge
push
add
data16
icebp
mov
fidivs
rcrb
push
sbb
pushf
ret
icebp
in
repnz
xchg
rorb
aad
mov
mov
fcomi
pop
sbb
sbb
inc
and
out
dec
adc
push
stos
mov
xor
push
or
shl
cmpsl
icebp
jne
negb
pushf
outsb
inc
scas
into
rcll
fadd
jae
jg
and
negb
cli
xor
xchg
sahf
data16
add
sbb
into
int
scas
inc
cmp
dec
inc
push
sbb
or
test
rcrl
ret
cli
or
sbb
xchg
daa
cmp
hlt
into
test
std
es
xor
xor
outsb
push
xchg
gs
xor
scas
test
jno
mov
daa
dec
sbb
add
push
lret
lahf
call
es
push
dec
mov
gs
cmpsl
insb
cmp
inc
nop
dec
js
mov
hlt
mov
pop
stos
into
mov
mov
adc
jno
mov
fldcw
xchg
xchg
loop
mov
dec
pop
into
aas
lcall
jle
cli
cmpsb
sub
mov
int
lret
jnp
inc
cmpsb
jl
hlt
push
sbb
mov
inc
or
imul
xchg
fs
jns
sub
push
int3
adc
lret
dec
push
cmp
mov
test
cmp
fisttpl
or
outsl
dec
mov
mov
adc
dec
inc
imul
shlb
mov
adc
call
cmp
dec
scas
and
adc
push
popa
das
push
pop
clc
push
push
add
imul
in
and
in
pop
loopne
icebp
add
dec
xor
mov
cltd
cli
popf
popa
sbb
mov
fstpl
js
adc
pop
mov
enter
and
dec
mov
sub
jge
je
push
cmp
and
push
and
shlb
cmpsb
cmp
jmp
int3
mov
pop
rol
hlt
xor
jae
call
cmp
push
lds
imul
cld
xchg
fimull
in
insl
push
bnd
xchg
in
lret
loop
lods
mov
arpl
out
inc
test
push
pop
hlt
mov
insb
fcoml
inc
int3
leave
jg
inc
fadds
mov
xor
shrl
popa
xchg
xchg
mov
push
mov
decb
dec
cltd
adc
inc
lahf
filds
ja
or
jge
and
flds
or
popf
movsl
in
cmp
stos
add
fwait
data16
push
pop
pop
stos
push
addb
pop
sbb
mov
fnstcw
sub
mov
aaa
pop
pop
int
jns
mov
cmp
pop
pushf
clc
cmpsl
and
inc
lret
mov
mov
sahf
lods
xchg
sub
fwait
add
shll
cmpsb
inc
mov
inc
cmp
pop
push
push
xchg
daa
and
adc
ret
popa
inc
mov
lock
scas
or
scas
ljmp
lods
adcb
cltd
push
pop
dec
aaa
imul
or
and
test
rcll
mov
cmc
xchg
xor
incl
mov
int3
in
mov
pushf
ret
test
dec
shll
sbb
ja,pn
mov
inc
aaa
aam
add
loop
pop
jo
fstps
jp
push
xchg
imul
sbb
cltd
adc
orl
popa
test
xchg
lahf
mov
repnz
pushl
cmp
jns
cmp
ret
push
push
out
sbb
adc
mov
xor
and
mov
mov
push
xlat
or
mov
or
or
jg
nop
enter
mov
sbb
push
fidivrs
adc
sub
daa
fdivl
sbb
out
daa
push
stc
cld
subl
xchg
loop
pusha
adc
pusha
pop
inc
mov
cli
out
sbb
xlat
push
nop
orb
imul
adc
dec
sbb
dec
push
xlat
cld
xor
dec
pop
xchg
divb
add
imul
subb
jno
scas
xor
dec
imul
out
insl
mov
rorl
xor
jl
inc
push
jmp
daa
call
pop
test
or
pusha
daa
fs
xchg
int3
gs
push
xchg
xor
lahf
sub
lea
pop
add
daa
popf
push
cmp
xchg
cmp
stos
xchg
fsubrl
in
or
outsb
push
cs
cmc
insl
dec
push
ja
loopne
into
inc
test
test
xchg
xor
dec
clc
divb
cld
sub
pop
cmp
dec
es
mov
and
cmpsl
sub
lods
mov
in
cmpsl
mov
xchg
cwtl
orl
mov
jl
lock
repz
out
and
aas
xor
pop
roll
sbb
dec
sbb
push
inc
cmp
pop
cmpsl
or
xchg
or
mov
out
imul
adc
aad
insl
jno
fnstsw
push
pop
imul
and
dec
pushf
add
pop
jmp
xchg
ret
push
inc
or
cmpsl
push
aad
js
mov
mov
pop
ja
or
cld
cmpsb
and
lea
repnz
or
or
pop
lock
inc
aad
mov
jg
mov
mov
aas
pop
dec
mov
fldt
xchg
fisubl
pop
stos
or
mov
pop
adc
and
jge
jge
inc
pop
jl
arpl
ret
stos
sti
mov
mov
and
leave
testb
adc
orb
xlat
mov
mov
movl
out
fistps
push
divl
inc
daa
sbb
ret
cli
insb
rolb
lret
push
xchg
and
push
xchg
mov
orb
test
push
ljmp
inc
subl
cltd
mov
mov
lods
and
fsts
testl
inc
fimull
xor
shlb
sub
push
dec
sub
jae
cld
popa
loope
sahf
or
xchg
or
and
mov
add
pop
mov
es
sbb
addr16
sub
cli
push
mov
icebp
cmpsb
imul
jno
mov
shll
add
jnp
mov
xlat
and
or
add
mov
out
mov
sub
cs
stos
cs
jb
push
rclb
in
jecxz
dec
and
icebp
push
push
sbb
iret
fdivs
out
jo
das
dec
push
in
add
jb
or
ds
jle
cli
pop
lret
mov
lock
arpl
in
sub
mov
mov
pand
sbb
xor
cmp
mov
scas
cmp
inc
in
pop
xlat
fwait
daa
cmp
in
pop
mov
and
jecxz
sub
dec
movsb
add
and
in
lahf
push
push
mov
out
cmp
xchg
push
xchg
xchg
xor
cmc
xchg
ja
sbb
clc
loope
or
sbb
mov
arpl
jg
xchg
in
sbb
xor
inc
aas
ds
push
mov
lds
int
xor
pop
cmp
mov
cmp
aas
mov
jmp
es
mov
mov
mov
mov
pop
mov
inc
adc
sub
xchg
and
cs
sub
das
rcll
dec
pushf
adc
fdiv
movsl
and
outsb
js
xchg
pop
je
pop
aaa
lfs
cmovb
mov
gs
cmpsb
sub
fs
lea
loop
lds
imul
sbb
dec
xchg
out
push
daa
in
addr16
mov
stos
out
hlt
stos
fprem1
add
sti
jae
xor
cmp
gs
fdivrl
je
dec
cld
jae
sub
add
nop
sahf
out
cmpsl
popa
cmpsb
lret
jnp
gs
es
xchg
jno
fwait
notb
ja
xor
fistpll
rcrl
add
jbe
inc
cmp
pop
mov
cmpsl
out
fcomi
ljmp
or
mov
popf
sti
dec
pop
lahf
nop
fnstcw
js
push
jb
mov
call
fdivp
inc
xor
mov
xchg
dec
pop
push
scas
push
test
inc
or
scas
stos
jbe
adc
add
cltd
pop
pop
cmp
pop
xor
lahf
mov
mov
inc
xor
jo
push
sub
jb
sub
scas
cmp
andb
jb
pop
lea
fnstenv
leave
shll
cltd
aaa
addr16
fistpll
mov
jno
jbe
xchg
in
rcr
inc
lcall
xchg
nop
jno
sub
loope
je
cltd
push
push
inc
pop
xor
or
lods
pop
mov
popf
mov
cltd
xchg
loope
in
cmp
ds
xchg
ret
push
push
loopne
sarb
xor
pop
lret
add
stc
push
test
xchg
in
sti
insb
int
push
test
mov
js
ret
mov
lea
cs
sub
and
xlat
insb
adc
lods
pop
jns
pop
sub
dec
sbb
pop
mov
xchg
in
lahf
shll
dec
cwtl
and
scas
mov
cmc
jne
and
fidivrl
xchg
xor
fstpt
loopne
daa
movsb
mov
inc
rcll
mov
add
sub
cmp
mov
xchg
add
mov
push
dec
add
out
faddl
jmp
cmp
popa
pop
cwtl
aam
add
rclb
mov
cwtl
and
insl
fisubrl
out
cld
repz
enter
xchg
ret
jno
sbb
mov
and
jae
xchg
dec
xchg
adc
fcoml
rorb
xor
xlat
jne
repz
sbb
pop
mov
sbb
mov
popf
loopne
psubb
pop
pusha
cmpsb
jmp
enter
mov
mov
dec
sbb
jecxz
add
mov
push
push
mov
push
xchg
jne
add
push
hlt
cmp
xchg
scas
mov
push
xorb
dec
sbb
aam
pop
cmp
pop
addl
cmpsb
adcb
jb
xchg
and
sub
mov
stos
stos
loop
adc
pop
loopne
and
lods
jecxz
ja
mov
add
imul
call
mov
je
fidivrs
push
pop
adc
jg
jg
lahf
jg
pop
out
insb
jne
aas
icebp
push
mov
sarb
ljmp
jge
rorb
jmp
aaa
add
mov
xchg
sub
push
and
bnd
stos
stos
pop
and
test
pop
jo
dec
jge
mov
xlat
lret
xchg
lods
cmp
rcl
mul
dec
leave
cmp
add
push
pusha
xchg
push
cmp
insb
sbb
inc
pop
stc
pop
nop
testb
inc
sbb
sbb
and
or
sub
comiss
je
push
xor
lea
rol
mov
xor
scas
push
fwait
mov
jmp
mov
push
scas
jp
test
adc
jno
clc
fdivrp
out
add
scas
popa
pop
aam
add
mov
movsb
movsb
pop
sub
xchg
push
ret
push
adc
loope
pop
push
mov
xchg
mov
or
adc
bound
jns
mov
fs
ljmp
hlt
xor
and
xor
inc
mov
xchg
lods
bnd
mov
jge
sbb
mov
sub
or
xor
sahf
xchg
pop
and
push
adc
pop
adc
inc
inc
jl
aad
addr16
ds
fwait
hlt
gs
cltd
imul
dec
cltd
data16
rcl
push
es
lods
adc
or
and
xchg
add
cltd
arpl
or
cmp
mov
add
repz
je
sub
or
mov
add
mov
jo
je
arpl
dec
fisttpll
sahf
or
in
faddl
out
mov
add
das
adc
and
mov
add
repnz
jno
lds
test
jg
dec
jns
pop
push
mov
dec
scas
mov
js
ret
mov
mov
fsubr
dec
cmp
sbb
rorb
inc
dec
mov
clc
adc
test
pop
jae
push
sub
sbb
dec
arpl
pop
sbb
dec
test
push
lods
test
je
mov
jl
int3
jmp
adc
leave
push
adc
jns
push
mov
mov
aam
sahf
fisubs
nop
inc
pop
lea
sbb
xor
aad
mov
xchg
sub
std
sub
push
push
lret
lret
push
in
repz
push
mov
aam
sub
loop
movsb
int
loopne
decl
adc
cmp
out
push
lock
mov
xorb
test
dec
fsts
repz
xor
das
sbb
sub
push
mov
sti
fdivrl
jl
decb
sbb
lret
popa
test
push
ss
pusha
mov
adc
jecxz
jmp
jg
cmpb
pop
cmpsl
cli
fldenv
mov
lods
sbb
sub
test
fucomi
xchg
lock
ret
jge
dec
push
sti
test
movsl
jnp
int
notl
and
xchg
test
cmp
sti
mov
mov
insl
dec
add
lahf
xchg
adc
mov
adc
inc
repnz
ss
sub
mov
inc
iret
filds
xchg
mov
mov
dec
adc
mov
movsb
aas
jp
adc
ja
fnstcw
test
mov
movsl
popa
pusha
sbb
aam
mov
loopne
in
shlb
push
mov
jno
sahf
or
cwtl
int
mov
sbb
pusha
in
lods
adc
mov
shlb
mov
jb
or
sbb
mov
push
addr16
cmpb
cs
shrl
add
jno
push
adc
rorl
not
push
test
fistl
icebp
loope
lcall
dec
mov
insl
fmuls
xchg
cmpsl
mov
orb
cmc
dec
fdivl
xorl
jns
pop
addr16
fiadds
stos
stos
adc
stos
add
push
dec
jns
aad
sbb
xlat
loope
push
fsubrl
andb
pop
fidivrl
push
pop
mov
ss
es
shlb
push
xchg
jmp
loopne
mov
loope
and
mov
cmp
ret
pop
incb
inc
sbbl
rcrb
lds
mov
mov
or
pop
push
xchg
shlb
xor
dec
cmp
insl
mov
stc
and
mov
cmp
sbb
ret
sti
jmp
imul
imul
enter
iret
or
jl
ja
movsl
pop
add
fiadds
xor
dec
je
cmp
and
sbb
pop
push
lcall
stos
cs
inc
xor
cwtl
shr
inc
mov
into
or
adc
mov
pop
sub
mov
mov
inc
and
and
nop
jb
test
leave
and
rol
mov
pop
lcall
call
push
and
fdivrs
lods
out
adc
fscale
jnp
xor
push
push
into
out
mov
test
adc
add
and
push
pusha
pop
pop
push
dec
cmpsb
gs
mov
jecxz
out
scas
mov
repnz
push
jg
lcall
jmp
das
rcr
rcl
jae
inc
xchg
sbb
jnp
insl
sub
das
inc
xchg
in
frstor
fisubl
aad
push
nop
push
mov
mov
jbe
orl
adc
mov
test
xor
pushf
test
in
orb
lods
in
testl
push
mov
cwtl
mov
xchg
arpl
shll
mov
stc
cwtl
cmpsb
stos
sbb
and
std
xchg
or
bnd
jb
inc
fwait
imul
nop
iret
imul
jnp
pop
xchg
popa
sub
jno
bound
cvttps2pi
dec
nop
lds
xor
add
sti
aas
mov
xor
xchg
jge
mul
testb
sbb
xor
xchg
lods
daa
ds
xchg
fidivs
or
dec
dec
pusha
xor
cwtl
or
sbb
sub
jo
mov
lock
jns
sub
movsl
push
in
mov
repz
out
test
add
je
fistpl
lret
jo
sub
ja
jl
adcb
pushf
ds
xchg
and
outsl
and
xor
push
loope,pt
pop
dec
jb
push
sbb
mov
mov
retw
sbb
mov
xor
inc
dec
jbe
mov
lcall
inc
hlt
pop
test
shll
pop
push
sti
mov
aaa
or
mov
sub
sub
inc
sbb
pop
rcll
rcll
mov
mov
ljmp
xchg
inc
ret
xchg
fwait
cmp
aam
sbb
loop
ljmp
add
or
aaa
dec
ds
cmp
sbb
aad
scas
adc
mov
jbe
sti
adc
add
cltd
mov
out
push
push
fdivrl
add
movsb
cltd
scas
push
or
dec
testb
or
cmp
jle
cwtl
mov
call
inc
xor
jp
mov
aad
xchg
nop
pop
inc
lods
rol
pop
aam
mov
adc
adc
mov
fldcw
std
ret
shr
inc
cmc
gs
jne
rcrl
sub
mov
stc
mov
sbb
mov
mov
repnz
mov
hlt
xor
in
mov
mov
sub
mov
adc
mov
es
pop
jns
inc
dec
ss
xor
or
js
cmp
push
movsb
ret
or
pop
jne
push
adc
sbbl
testl
aam
int
and
in
jo
loope
push
cmp
push
lds
sbb
pop
out
sarl
jne
pop
xor
adc
aas
and
add
lret
in
movsl
lea
jg
lcall
jnp
adc
cs
mov
xchg
cmp
fsubrl
out
stos
and
mov
inc
mov
js
jno
aaa
ret
push
int
ds
mov
stos
icebp
fmuls
mov
mov
nop
ja
iret
push
mov
mov
fidivs
int3
sbb
fbld
cwtl
mov
pop
imul
sub
fdivrl
push
sti
or
xchg
cmp
out
rclb
ds
jnp
arpl
enter
popf
xor
ja
out
or
ss
sub
mov
popa
push
jl
in
push
jae
mov
jo
mov
cltd
bound
or
sarb
sbb
mov
rorl
rcll
cltd
mov
aam
push
repnz
mov
mov
ret
xor
or
jne
pop
mov
jp
daa
sub
mov
xor
or
popa
cmp
fs
pop
iret
repz
ret
xor
jecxz
push
sbb
pop
int3
ljmp
pop
sub
lret
dec
scas
pushf
test
inc
sbb
dec
ja
mov
mov
scas
and
jecxz
fisubs
dec
adc
inc
xchg
movsl
add
inc
ds
jmp
ss
cmpb
ds
inc
and
adc
iret
sbb
jle
pusha
outsb
popf
push
in
add
into
icebp
mov
jp
cmp
scas
push
or
sbb
pushf
sub
mov
dec
mov
clc
sarl
call
push
cmp
lret
jg
shr
jne
in
mov
popf
outsb
adc
xchg
imull
xchg
jmp
pop
pop
inc
dec
cmp
jg
rcrb
stc
dec
mov
popa
test
cmp
outsl
mov
stos
mov
mov
or
cmpsl
sbb
fwait
cmpsb
ja
inc
add
aad
out
add
mov
mov
dec
mov
inc
mov
icebp
mov
in
adc
or
dec
xchg
gs
std
push
sub
push
addr16
and
push
mull
rolb
loope
and
pop
iret
gs
in
les
xchg
sub
xor
sub
rorl
cmpsl
fistps
inc
mov
imul
inc
adc
xchg
or
xor
aam
mov
scas
and
sub
fildll
idivb
outsb
ja
adc
rorb
leave
js
scas
mov
gs
loope
pop
pop
push
mov
movsl
jg
lea
outsb
ja
aam
pop
fsubp
mov
jp
notl
jp
fistps
jl
push
mov
shll
in
inc
mov
test
fcmovbe
cmp
das
repnz
jmp
push
scas
sarl
arpl
fstpl
sub
push
mov
ds
inc
jnp
push
jp
add
cmpsl
xor
push
lea
mov
jo
ljmp
xor
ja
stos
mov
adc
in
scas
cld
sbb
mov
sti
mov
mov
mov
xchg
jg
sub
mov
mov
enter
aam
mov
in
pop
gs
push
jmp
add
mov
mov
out
dec
mov
sti
and
or
das
or
cmc
inc
dec
push
sbb
roll
push
in
mov
std
ljmp
fxch
adc
lcall
repnz
imul
cmp
fdivrs
mov
push
mov
or
iret
in
lods
lahf
lock
mov
push
push
daa
or
xor
add
nop
lods
mov
repnz
sub
xchg
mov
in
pop
out
jo
mov
insl
sub
cwtl
ret
movsb
ss
pop
xchg
xchg
push
inc
mov
rol
aas
lcall
in
es
push
xor
push
jmp
jnp
bnd
push
std
iret
in
and
cwtl
mov
jb
pop
mov
jns
jne
test
cld
xor
loope
pop
fbld
fiadds
adc
add
lods
bound
hlt
mov
xor
mov
jge
and
mov
rclb
mov
mov
push
push
cwtl
ret
or
imull
adc
testb
cmpl
notl
mov
int
dec
dec
pushf
es
mov
sbb
test
in
xchg
andb
in
sub
jb
test
sbb
or
adc
xchg
fistpll
mov
int
adc
lock
adc
inc
or
rolb
fcmovb
add
pop
popf
add
dec
test
js
adc
mov
scas
jmp
cmpsb
adc
hlt
enter
repz
xchg
repnz
mov
sbb
dec
pop
test
popa
sti
inc
das
les
pop
aad
loope
aaa
cmpsl
test
call
or
mov
data16
mov
pop
loopne
movsb
data16
fisubl
mov
lret
and
and
jnp
mov
dec
xchg
xor
or
dec
fucomi
inc
mov
dec
in
ss
mov
and
xor
iret
jecxz
xchg
cmc
lock
inc
pop
or
fisttps
jae
and
push
mov
dec
mov
ja
es
or
inc
jbe
fcoms
mov
mov
dec
rsm
mov
jnp
and
or
cmp
fdivrs
pop
aaa
pop
jl
mov
hlt
shlb
mov
jg,pn
fmull
dec
sbb
fdivs
fsubl
and
call
push
dec
inc
xchg
fmuls
cmpsl
cltd
lods
outsl
int
insb
imul
enter
push
roll
dec
pop
cwtl
std
outsl
jns
sbb
fmull
push
fisubs
sub
push
out
sti
jmp
iret
mov
mov
lods
dec
std
inc
dec
cmp
push
sarb
loope
jno
xchg
lahf
roll
leave
les
pusha
leave
sub
loopne
cli
mov
mov
mov
mull
add
movsb
stc
cs
xchg
popa
and
inc
rolb
fistl
mov
mov
shll
outsl
push
popa
mov
out
lret
fdiv
add
sbb
add
dec
aaa
push
ret
sti
or
add
mov
jns
shll
sti
rolb
divl
and
outsl
rorb
popf
dec
notl
mov
mov
repnz
adc
insb
cmpsb
mov
insb
push
or
je
xchg
adc
sub
out
call
sub
cli
xor
pop
or
andl
dec
add
jge
xor
jmp
lret
subb
aam
cld
cld
andl
jmp
rol
sbb
aas
or
pop
jmp
cltd
sbb
int3
xchg
xor
outsl
sbb
or
hlt
and
hlt
mov
pop
jmp
in
mov
cmpsl
mov
mov
lret
rcll
fldt
mov
inc
in
inc
fstps
gs
push
push
js
xor
loopne
jnp
jle
xchg
xchg
jge
scas
pop
adc
iret
push
adc
arpl
jbe
pop
mov
pusha
add
mov
daa
adc
iret
lret
mov
ja
les
mov
lock
add
add
mov
sbbb
enter
lods
into
adc
scas
xchg
cwtl
fwait
testb
scas
xchg
movsl
fucomi
int3
push
stos
mov
scas
mov
popf
fninit
dec
cmp
jle
insl
push
xor
mov
push
movsl
sbb
insb
add
xlat
test
pop
pushf
incb
mov
popa
aam
imul
inc
push
pop
mov
jmp
out
sub
cmpsl
xchg
or
outsl
shlb
mov
push
mov
movsb
mov
test
inc
cmp
shr
adc
or
scas
mov
movl
std
sub
aam
cmp
inc
pop
cmp
pusha
in
out
cmp
ret
subb
cmp
sbb
repz
or
ljmp
in
jg
sbb
leave
mov
insl
and
add
rorl
lods
mov
pop
js
loope
lret
arpl
dec
sub
negl
fmul
pop
nop
insl
adc
add
gs
inc
popf
jns
sub
adc
mov
cmp
std
into
or
pop
fadd
dec
in
fwait
xor
ss
mov
fstpt
mov
insl
pop
repz
xchg
pop
inc
pop
mov
jne
sbb
int
and
repz
call
shl
or
mov
jge
sbb
jg
icebp
out
cmp
movsl
fnop
push
mov
shl
std
mov
inc
sbbb
sbb
jbe
inc
loope
out
inc
stc
stos
gs
imul
shll
cwtl
push
out
inc
dec
jecxz
and
cmp
sub
stc
mov
cmp
cmp
mov
and
xor
pop
fs
insl
into
lret
pop
or
mov
fcoml
nop
and
sub
stos
add
or
adc
push
icebp
test
inc
mov
sub
addr16
pop
je
cmp
add
pop
subl
jl
fdivl
shr
movsb
aaa
or
outsb
mov
mov
loop
mov
dec
cmp
push
xor
mov
cmpsl
loope
or
xchg
rcl
pop
out
dec
inc
outsl
movsb
jne
xchg
xlat
push
mov
hlt
loope
rolb
mov
lret
scas
sarl
test
ss
jge
or
and
jo
fidivrl
pushf
mov
or
in
add
xor
ja
pop
repz
cltd
xchg
mov
lcall
test
cmpsb
pusha
ljmp
xchg
inc
and
mov
or
incb
ljmp
inc
dec
push
mov
mov
mov
cmp
pop
dec
insb
mov
dec
mov
add
lret
sub
repz
xchg
dec
cmp
mov
loop
dec
mov
int3
lods
stos
inc
mov
popa
in
mov
pusha
mov
in
lret
movsb
jnp
lods
xchg
push
adc
nop
mov
bound
adc
jbe
std
push
ja
je
xor
add
jp
and
cmp
iret
mov
add
adc
cmpsb
xchg
gs
enter
shlb
loopne
out
cli
fisubrs
mov
stos
lret
cmp
lods
mov
jb
mov
push
inc
and
sub
jns
mov
adc
shll
xchg
xchg
push
das
mov
jnp
and
bswap
imul
mov
cs
and
and
mov
aad
cmpsb
jle
dec
int3
xchg
out
pusha
or
ficompl
movlps
pop
scas
mov
mov
push
mov
cwtl
xchg
xchg
pop
cmc
cmp
iret
push
xchg
pop
mov
sub
mov
pusha
sti
inc
mov
mov
adc
lock
dec
jb
icebp
fimuls
je
popf
dec
mov
aas
add
insl
sub
in
cltd
aaa
add
cmp
in
push
and
jae
jne
mov
sub
lds
push
dec
jge
adc
xchg
stos
rorl
mov
addr16
repnz
adc
pop
sub
inc
xor
pop
mov
mov
orb
stc
mov
push
lret
xorl
mov
push
mov
jl
js
jmp
rcrb
das
xchg
push
pop
int3
data16
std
adcl
jbe
mov
jecxz
and
inc
cmp
fwait
rcrb
dec
jo
sarl
xlat
push
mov
inc
cmp
jno
pop
jp
mov
mov
fadd
faddl
or
daa
sub
jp
dec
and
aam
xor
add
xchg
and
bound
push
dec
cmpsl
rorb
aad
loope
inc
xor
pop
jp
or
adc
jg
js
push
jmp
jo
mov
outsb
sub
rorl
fisubl
ss
sbb
jge
clc
jo
iret
push
xor
cmp
int
add
fadd
mov
loope
adc
sub
dec
rcll
mov
aam
idiv
xor
sbb
xchg
sbb
mov
lods
imul
xor
fwait
mov
jnp
xchg
cli
mov
mov
rcl
pop
sbb
jmp
and
das
rclb
shll
sub
cmp
push
mov
hlt
xor
add
adc
stc
arpl
js
enter
dec
testb
or
int
mov
lock
js
xchg
shll
stos
aas
sub
sahf
ficomps
xor
fistpl
add
popa
cmp
hlt
sub
jns
jae
out
ret
cmpb
pusha
out
sub
cld
daa
mov
daa
cmp
xchg
icebp
cmc
out
push
pop
int3
jmp
sarb
popa
call
xchg
jg
into
ret
popa
mov
movb
pop
xchg
and
lods
sub
adc
negl
lahf
shll
inc
cmp
push
addr16
jne
add
mov
mov
in
stos
testl
in
jmp
addr16
mov
push
jmp
push
out
cmpsb
push
test
cmp
mov
lret
push
enterw
add
std
icebp
movsb
mov
popf
xchg
sub
sbb
push
mov
loopne
cmpsl
in
dec
cmp
add
pop
push
cmp
rcrl
mov
ret
xchg
xor
ds
or
dec
xlat
add
popa
outsl
pusha
ljmp
dec
repz
pop
and
jns
hlt
es
xchg
jbe
jb
xchg
shlb
call
pop
ds
sub
sbb
lods
adc
outsb
lods
or
adc
and
mov
out
ret
test
jmp
push
mov
and
inc
push
jl
popa
jne
mov
cmp
aaa
addr16
sbb
or
mov
adc
lods
mov
scas
repz
dec
call
xor
fnstsw
iret
mov
movsb
pop
mov
das
or
sbb
jg
decl
jecxz
cmp
mov
cmp
jns
pop
pop
rclb
pop
cmp
xlat
cli
sbb
ja
mov
arpl
sbb
inc
mov
mov
in
daa
or
jb
cmp
out
push
cmpsl
insb
or
movsl
fcmove
sbb
loope
xchg
jmp
ret
cmpsl
aam
cli
cmp
leave
adc
stos
sbb
and
movsb
sub
mov
add
jmp
fdivrl
lds
daa
pusha
inc
push
inc
leave
and
in
mov
hlt
dec
mov
outsb
and
dec
mov
das
in
jb
pop
push
pop
push
mov
sub
fadd
loopne
movl
add
gs
aad
cmpl
daa
inc
aas
dec
mov
cmp
adc
not
mov
hlt
fcoms
cmpsl
aas
lcall
outsl
in
xor
mov
addb
fbstp
jmp
inc
out
jns
dec
mov
add
lods
dec
fdiv
inc
sub
outsb
std
cmp
push
lret
fisubrl
xor
stc
repz
sahf
stos
adc
pop
cvtdq2ps
fistl
and
mov
xchg
movb
stos
dec
arpl
push
cwtl
pminsw
out
mov
lds
js
js
mov
dec
fstl
mov
pushl
pushf
movsb
adc
stos
enter
and
out
lret
fwait
sahf
inc
mov
cmpsl
inc
lds
cmp
test
or
out
jge
outsb
xor
inc
scas
jle
jge
subl
sub
stos
je
movsb
sub
pop
ret
aaa
jge
mov
xor
in
pushf
jle
rcll
jp
sub
sub
jo
insl
mov
adc
jns
pusha
movsl
mov
sub
sti
xchg
mov
push
div
mov
adc
push
jae
add
pop
movsl
imul
xchg
mov
mov
mov
jne
mov
jne
mov
cltd
sbb
cmp
pop
imul
in
jle
cmp
cmpsb
sbb
rep
cld
and
jno
inc
idiv
push
aas
or
push
xchg
in
mov
xor
xchg
mov
sub
rclb
addr16
sbb
pop
mov
rcll
mov
inc
les
hlt
add
les
stos
cmp
cli
pop
xchg
shll
mov
pop
mov
xchg
rcll
xchg
in
imul
add
ljmp
and
call
inc
imul
or
mov
sahf
in
add
add
mov
pop
ret
push
jecxz
mov
sbb
std
xor
add
push
into
lds
mov
jecxz
sub
lods
sub
mov
xor
jmp
or
stos
cmp
mov
adc
loopne
mov
mov
pop
jmp
cmp
insl
xor
dec
mov
dec
cmpsb
repz
push
inc
shlb
ss
fstpl
pusha
mov
movsb
pop
jo
inc
jb
std
stos
sbb
cmp
movsb
daa
loope
test
lds
int3
stos
loopne
sbb
jmp
ret
nop
in
xlat
dec
jp
inc
dec
or
push
jmp
sub
push
add
jne
sbb
add
xor
cmp
ror
push
shrl
cs
stos
shr
dec
mov
xchg
pop
xchg
mov
enter
movsb
mov
xchg
cltd
and
add
imul
sbb
sub
je
ret
add
adc
mov
pop
outsb
adc
test
test
fnstcw
lds
stc
das
push
shlb
nop
rcrl
out
mov
xor
pop
negl
jnp
push
add
mov
sub
sub
mov
xor
lea
fcompl
sub
fwait
xlat
and
icebp
sub
jl
or
sbb
int3
call
push
push
fimull
cmp
cmp
dec
cmp
mov
das
ss
dec
cmp
fs
sbb
iret
cmp
jmp
sbb
and
sbb
addb
shlb
std
fwait
popa
iret
aas
cmpsl
arpl
cltd
mov
sub
pop
xor
jbe
sub
adc
push
xor
lods
sahf
scas
jbe
or
test
aaa
dec
fnsave
push
cwtl
pop
push
lret
cmp
clc
cmp
fimuls
int3
mov
mov
scas
mov
and
jp
outsl
testb
cmp
in
mov
les
mov
ljmp
fistpl
mov
jnp
push
push
imul
adc
mov
and
pop
aaa
les
xchg
and
daa
xor
gs
arpl
stos
pop
gs
xchg
cmp
add
mov
aad
xor
mov
fstpt
sarl
dec
fnsave
mov
fwait
adc
aad
xor
shlb
inc
mov
push
mov
sbb
jns
or
mov
jl
aam
out
out
and
add
dec
cli
out
pop
aas
std
aaa
xchg
dec
or
jmp
in
push
notb
arpl
fwait
lods
daa
xchg
sub
and
imul
xchg
popf
or
insl
sub
and
sub
aad
aaa
mov
jns
movsb
cmpsb
jae
cmp
into
js
dec
dec
add
ret
enter
xchg
fnstcw
or
xorb
mov
cmp
pusha
mov
dec
or
fsts
add
loop
jae
shrb
std
das
out
add
pushf
aam
insl
out
ljmp
fildll
push
mov
cltd
rcrb
lea
ja
js,pt
repnz
pop
cmp
xchg
ss
mov
push
ret
in
mov
fdivrs
pop
inc
fwait
das
jmp
scas
out
mov
imul
push
jmp
cmp
mov
jb
aas
push
pop
inc
push
int3
xchg
leave
jp
fisttpll
mov
lcall
lods
inc
jnp
pop
iret
push
aas
mov
adc
mov
ds
and
inc
rorb
or
or
mov
xchg
mov
in
fcomps
pop
sbb
push
mov
inc
call
add
insb
shll
dec
lds
pop
xchg
push
xchg
outsb
xchg
imul
push
mov
sbb
xchg
fadds
aad
lods
mov
scas
mov
lret
mov
and
icebp
stos
imul
addb
push
sti
data16
pop
fnstsw
lcall
shlb
or
das
jg
test
mov
adc
dec
and
sub
sbb
stos
rorb
sti
fmull
sub
mov
and
dec
je
xor
out
add
or
and
cld
pushf
roll
lahf
stos
ljmp
int3
jl
rcr
out
mov
sub
in
cld
fwait
ljmp
icebp
jno
xchg
dec
out
stos
js
jns
fsubr
xchg
pop
daa
ljmp
sarl
sti
rcrb
movsb
arpl
xchg
sub
push
addl
mov
sub
out
std
repz
arpl
adc
add
cmp
loopne
sub
push
mov
jle
scas
test
xor
push
js
clc
out
iret
add
aam
popa
enter
mov
test
out
jl
lret
xor
push
push
pop
jle
je
clc
jl
out
xchg
and
ss
sar
decb
cmc
lods
xchg
push
mov
pop
dec
or
sbb
jl
cmp
sti
in
in
sbb
jbe
icebp
fwait
cmc
test
call
sbb
ds
scas
adc
sub
fiaddl
loope
sub
loope
xchg
out
paddd
push
or
mov
push
enter
les
cwtl
stos
lret
int
shr
clc
jb
sbb
pop
bound
lds
loope
je
fdiv
aaa
jge
lahf
inc
out
sbb
mov
add
outsl
push
push
fsubr
addr16
ss
xchg
testl
mov
icebp
xor
fwait
xor
mov
lds
adc
inc
dec
jp
fwait
inc
jl
xor
data16
or
mov
or
xchg
push
jnp,pt
rcrb
jge
sbb
in
fwait
jg
pop
ds
xchg
xchg
icebp
mov
ret
ljmp
repnz
dec
or
clc
mov
lock
sbb
and
mov
int
xor
push
cmp
es
aas
lods
imul
push
jae
inc
stc
add
jno
jge
filds
std
mov
js
and
mov
mov
adc
cmp
insl
cmc
and
in
mov
ljmp
lods
mov
fwait
clc
jmp
out
hlt
imul
push
jecxz
loopne
lock
mov
jns
das
in
repz
mov
lea
in
dec
inc
dec
mov
filds
jl
ret
loop
addr16
lahf
push
sub
xor
cmp
cwtl
xchg
pop
and
dec
sub
adc
popa
add
cmp
sti
test
ror
in
mov
pop
jnp
pop
add
mov
pushf
or
and
add
or
cltd
push
push
pop
adc
lds
dec
out
insl
push
sbb
mov
rcl
cmp
fdivrl
and
xor
mov
inc
leave
lea
and
inc
es
popf
cltd
fsubrs
popa
sbb
inc
or
xlat
and
xchg
jb
int
sub
mov
mov
cmp
lock
pop
mov
leave
pop
mov
es
push
xlat
dec
shll
mov
or
popa
cmp
push
insl
inc
mov
lret
jge
dec
push
loop
mull
inc
pop
stos
dec
cwtl
or
loop
push
mov
sbb
push
and
dec
mov
mov
jecxz
ja
ds
jecxz
rcrl
jle
and
fucomip
lahf
push
mov
jns
cmc
shlb
arpl
ret
mov
fcoml
mov
adc
fcomi
test
sbb
jae
orl
lds
fidivrs
inc
pop
pop
mov
outsb
mov
dec
test
sbb
test
cmp
nop
je
scas
cmp
sti
jno
mov
mov
push
call
pop
neg
cmp
loope
stos
imul
sbb
push
sahf
fadd
ljmp
mov
sub
faddl
mov
jl
icebp
repz
push
mov
arpl
adc
mov
inc
fs
mov
int3
xchg
ror
out
jns
arpl
je
adcl
cmp
mov
dec
cld
inc
pop
leave
aam
push
movsl
xchg
jbe
fadd
xor
xchg
dec
loop
and
pop
ss
sbbl
lcall
das
jg
stos
dec
mov
shl
cmc
xor
fcoml
add
adc
xchg
dec
push
arpl
dec
inc
pop
int3
jo
xchg
lahf
mov
fcoml
mov
fsubs
pop
cmp
cmc
push
pop
xor
pusha
adc
scas
lock
jecxz
jmp
cmp
cmp
push
in
inc
ljmp
loop
mov
inc
and
and
clc
bound
mov
decl
inc
inc
xor
test
push
notl
pop
fiaddl
jo
push
dec
orl
nop
pop
popa
push
cmp
mov
out
or
mov
jno
lods
dec
movsl
lret
daa
mov
and
jno
dec
cld
mov
xchg
imul
dec
mov
ret
cltd
aad
andl
cmp
cmp
enter
repnz
shrb
or
daa
pop
bound
gs
add
jae
inc
adc
mov
movsb
call
leave
shr
std
sub
out
lret
lcall
dec
and
fildll
pushf
push
jle
mov
pop
mov
jp
shlb
or
fndisi(8087
lahf
cvtps2pi
in
subb
jno
or
dec
adc
sub
out
push
jno
loopne
adc
ds
dec
adc
sbb
ljmp
jno
in
test
in
push
xchg
and
fsubrp
pop
out
je
pushaw
lret
mov
and
outsb
movsb
paddq
push
scas
mov
sub
pop
sub
or
xor
test
out
jle
push
add
mov
add
daa
mov
clc
push
out
stos
inc
loop
push
xor
push
mov
mov
xchg
adcb
and
xbegin
repnz
pop
pop
repz
and
insl
mov
push
jbe
sbb
loop
mov
dec
sahf
sbb
lods
mov
repnz
lds
imul
mov
xor
push
pop
div
mov
mov
es
xchg
push
mov
inc
cld
iret
push
xchg
xor
mov
scas
pop
into
xchg
aaa
ja
push
add
cmp
inc
mov
add
inc
xchg
jle
xor
pop
fsub
mov
dec
outsl
mov
pop
cmpsb
div
or
sbb
out
sub
pop
testl
sub
andl
dec
sbb
outsb
pop
data16
leave
aas
daa
inc
or
mov
xor
gs
xchg
enter
stos
fiadds
test
or
lds
pushf
testb
pop
sub
push
dec
fnop
mov
pop
push
aam
push
jb,pn
shll
push
pop
loope
outsl
iret
or
cmp
loope
xor
movsb
mov
adc
mov
push
lea
mov
xor
pop
fiadds
xlat
fs
lret
testb
mov
fdivs
rolb
shll
cmc
roll
int3
sub
pop
shll
sub
mov
or
in
stos
inc
in
pop
insb
call
fisubl
adc
shrl
adc
inc
int
in
addr16
enter
jp
jp
jmp
aam
xchg
or
cltd
inc
lods
sbb
in
jno
into
in
in
pop
out
movsb
xor
call
imul
and
ret
in
stos
js
xor
cmp
outsl
xor
loope
mov
pop
imul
arpl
fdivrl
jmp
inc
shll
xchg
push
xchg
sbb
inc
ret
cmp
mov
pop
pop
adc
test
stc
stos
scas
fidivrl
xchg
fildll
mov
rolb
jne
mov
mov
sahf
negl
std
pop
lahf
nopl
stos
cmp
cmp
sti
inc
out
pop
pop
stos
shll
fwait
popf
mov
xchg
mov
iret
pop
test
dec
inc
jbe
insl
jp
dec
aad
aaa
ret
sbbb
fisubs
xchg
sub
jns
xchg
and
sub
ss
mov
lods
and
shlb
mov
faddl
xor
xchg
in
xor
sbb
cmc
inc
dec
and
xchg
xor
ret
inc
pop
andb
jmp
pop
xchg
add
jae
mov
mov
mov
mov
enter
stc
shrl
out
inc
xor
xor
std
or
arpl
cwtl
dec
adc
cmp
push
add
daa
adc
dec
xor
andb
leave
pusha
mulb
push
daa
scas
call
ret
jb
xor
mov
sub
xchg
cmp
andl
mov
jle
mov
push
std
mov
test
sub
lret
call
scas
xchg
pop
mov
or
lods
xor
sub
lcall
xor
mov
push
and
fstpl
out
int
fcoms
popf
or
push
js
xor
push
in
in
and
fwait
xor
rcr
xchg
inc
pop
push
ficomps
divb
in
sub
test
and
dec
push
push
xchg
out
lcall
push
aam
push
adc
divl
cmp
xchg
add
sub
repnz
push
mov
jns
roll
jle
in
gs
dec
jle
movsb
xor
bound
das
inc
jle
std
sbb
insb
push
sbb
movb
jle
cli
out
aaa
sub
and
add
xchg
pusha
test
xchg
jge
mov
test
and
lret
pusha
xor
xorl
xchg
gs
sbb
fmuls
gs
dec
or
xchg
fistps
and
and
mov
imul
dec
jge
push
mov
rcl
int
mov
std
jne
jnp
scas
arpl
mov
popf
sbb
mov
jle
mov
or
lret
fstpl
adcl
orb
inc
mov
xor
std
pop
pop
fiaddl
jns
push
dec
sbb
push
adc
push
jg
and
cli
lret
ret
mov
in
cmp
mov
mov
add
ret
push
inc
mov
outsb
push
xor
xor
icebp
out
fdivr
movsl
push
testl
lods
sub
out
mov
push
mov
shrb
push
enter
lret
and
testl
cs
adc
dec
test
cmc
add
xor
mov
cmp
xor
sbb
ficoml
nop
mov
aam
xchg
je
xor
cwtl
ficompl
mov
mov
cmpsl
cmp
cmp
sbb
pop
pop
adc
push
pop
leave
movsb
dec
rcr
jl
mov
out
adc
ja
xchg
std
int
lods
ret
sub
test
pop
inc
xor
push
and
add
jg
push
add
pop
fs
stc
cltd
cwtl
test
lock
cmp
jp
xchg
sub
ds
popl
xchg
rcll
push
repz
cmp
cli
cli
cld
mov
mov
mov
mov
loope
in
iret
mov
adc
out
sub
stos
xor
cmpsb
loope
ja
ss
movsl
ret
dec
jmp
je
jmp
or
xor
sbb
xor
shlb
neg
mulps
push
jb
in
push
loop
mov
sub
enter
bound
inc
testl
stos
jbe
ficoml
sub
adcb
arpl
outsl
lret
sbb
out
sbb
lock
enter
fsubrs
dec
testb
cltd
mov
and
pop
ljmp
out
push
ljmp
jge
rorb
or
mov
push
xchg
cmp
mov
mov
or
pop
shlb
ficoms
xchg
fildl
cld
aad
mov
cmpl
testl
jae
sub
xchg
xlat
mov
mov
jbe
jb,pn
mov
test
pop
out
xor
xor
add
jmp
xchg
scas
cmp
ljmp
dec
sbb
cli
std
mov
cmp
push
sti
inc
out
adc
push
xor
push
enter
cmpsl
dec
pop
sbb
aam
imul
mov
adc
sti
or
or
mov
push
sti
pop
out
pop
call
iret
rorb
test
xchg
aad
loopne
out
in
or
push
xor
aam
test
ja
aam
mov
and
enter
mov
test
pop
outsb
sub
aas
ret
add
mov
orb
jg
or
lods
xor
pop
mov
out
dec
lss
xchg
jge
lret
cwtl
sub
xchg
pop
jp
jge
pop
in
pop
lret
jl
xor
std
lods
fisubl
aam
cmpsb
cmpsb
xor
inc
in
xor
jl
push
mov
sub
push
cld
cld
outsb
push
cwtl
xchg
fimull
push
in
fdivrl
ss
repnz
pop
and
or
movsb
mov
adc
jns
sbb
jb
arpl
repz
in
sti
cmpsl
imul
jmp
test
insl
jl
dec
mov
sbb
or
popf
lods
lret
mov
insb
xchg
pop
inc
push
lods
and
shlb
dec
push
sub
xor
mov
cld
mov
sbb
in
cmp
pop
gs
dec
lahf
mov
inc
xorb
sub
pop
test
mov
mov
mov
and
ja
fdivrl
shrl
add
sti
xchg
lock
sbb
or
sti
int
ljmp
cld
adc
mov
pop
jno
inc
push
or
ja
pop
add
lods
test
scas
dec
cmpsb
inc
test
fwait
sub
insl
add
or
mov
gs
xchg
mov
pop
jo
xchg
popf
mov
in
dec
push
sarl
fimuls
outsl
jp
fistpll
sti
pop
movsl
adc
fmuls
stos
push
pop
outsl
aam
cli
xor
dec
frstor
aad
es
cld
or
jmp
fwait
out
mov
lock
repnz
cmpsb
inc
in
mov
addr16
ret
cltd
xor
fnstsw
lcall
sub
pop
xor
sub
incl
lahf
and
testl
push
and
mov
push
pop
inc
xor
adc
inc
int3
iret
inc
mov
fwait
mov
shl
mov
and
mov
inc
jnp
sbb
pop
mov
call
push
push
rorb
imul
decb
iret
xor
adc
and
out
aad
xchg
ja
dec
test
add
xchg
in
adc
lahf
rolb
dec
cs
sub
cmc
cmp
scas
and
xlat
rorb
out
push
sub
or
dec
push
stos
ss
xchg
jo
ret
sbb
js
dec
inc
cmc
jecxz
lods
jge
add
xchg
ret
push
sub
cmp
sub
loope
lods
jne
xchg
inc
fldl
lcall
pop
icebp
in
and
gs
pop
fildll
lcall
test
fucomi
mov
rclb
icebp
add
aad
insl
cmp
fucom
dec
push
pop
jbe
mov
sbb
push
das
stos
clc
add
push
out
and
iret
mov
ret
popa
mov
cmp
jnp
pop
in
push
dec
or
rcll
push
or
insl
or
aam
popa
ret
xor
inc
mov
in
lods
add
loopne
inc
jge
push
cmpsl
outsl
std
xchg
stos
sub
test
testb
adc
mov
lods
icebp
mov
popf
fnsave
push
cwtl
mov
mov
or
clc
cmpb
dec
mov
mov
fwait
mov
mov
orl
es
mov
mov
dec
pop
pop
inc
daa
mov
imul
add
loopne
jecxz
push
inc
inc
int
lret
mov
push
scas
orl
adc
movsl
pushaw
test
inc
jmp
adc
adcb
cmp
or
lea
out
pop
std
out
push
pop
mov
push
cmpsl
bound
xchg
addr16
mov
stos
in
inc
cmp
xchg
fistpll
ljmp
pop
or
mov
mov
sbb
jns
das
jb
int3
stos
mov
xlat
mov
repz
aad
cmpsl
lcall
mov
les
je
aam
cmpsl
outsb
sub
mov
clc
cmp
loope
xchg
out
push
pop
stos
adc
mov
mov
stos
add
pop
mov
in
xchg
push
pop
xchg
sti
cmp
push
jns
mov
dec
test
jae
movsl
mov
xchg
insb
cmp
add
jp
je
mov
repz
and
in
mov
shll
pop
test
or
pop
sarl
psrld
mov
ljmp
adc
sbb
icebp
mov
pop
xor
lret
dec
test
xchg
aas
loop
and
xor
add
ret
pop
mov
sub
cmp
push
rcll
cmp
inc
push
dec
push
lcall
outsl
hlt
cmp
imul
pop
lock
inc
in
movsb
jne
popa
dec
adc
xchg
jae
mov
cmp
sub
xchg
in
jnp
lods
aad
std
mov
daa
lock
in
or
push
clc
std
dec
adc
orl
xorl
inc
je
adc
add
jp
mov
jmp
mov
shl
std
ficompl
or
inc
ret
aaa
adc
pop
jg
outsb
mov
jg
clc
popf
lret
jbe
push
icebp
jno
inc
or
popa
arpl
mov
mov
cltd
xchg
sub
and
cs
jle
and
mov
ja
mov
cmp
mov
mov
lods
sbb
xchg
in
xchg
push
xor
mov
or
arpl
adc
cmp
mov
mov
call
call
xor
loop
add
or
fisubs
cmp
pop
rclb
stos
mov
xor
and
jle
dec
lret
lds
adc
into
cli
dec
xor
imulb
movsb
scas
lds
inc
jle
daa
mov
outsb
repz
popf
mov
mov
push
adcl
in
mov
push
dec
jmp
ss
pop
mov
mov
movsb
adc
xor
xor
movsb
or
mov
push
xchg
sbb
pusha
pop
psrld
cmp
pop
icebp
je,pn
add
orb
push
aaa
pop
lock
stc
popa
roll
insl
sti
jl
stc
lret
dec
add
fiaddl
sahf
jns
cmp
scas
or
out
in
jbe
jmp
lods
ret
shll
pop
data16
or
movsl
push
loopne
or
int
daa
lret
mov
jbe
mov
inc
shr
push
cmp
xor
dec
movsl
mov
mov
daa
insl
shl
pusha
cmp
clc
sbb
xor
push
inc
lds
xor
mov
pushf
xchg
dec
int3
push
out
test
sub
xor
xchg
movsb
sbb
lret
add
pusha
pop
dec
or
popf
repz
or
js
hlt
dec
cltd
out
xor
xchg
xlat
xor
sarl
mov
pusha
fldcw
scas
jmp
pop
add
and
adc
out
hlt
cmp
sbb
push
push
or
sbb
push
sub
sub
sub
pop
cmp
xchg
aam
mov
roll
inc
sub
sub
mov
dec
fldt
aas
ljmp
stos
and
out
aaa
or
mov
mov
loope
jl,pn
mov
int
fimull
into
pushf
mov
fs
test
pop
pop
adc
or
mov
jecxz
cmp
pop
dec
cmpl
pop
sahf
ret
or
mov
sbb
mov
jge
dec
cmp
cwtl
xor
push
cmp
ljmp
popa
add
or
inc
push
jbe
adc
dec
ret
inc
mov
push
or
cmpsb
cli
sub
shll
mov
cmpsl
mov
xlat
jns
and
lcall
pop
lcall
movsb
mov
or
inc
test
in
pop
cmp
in
subl
push
sti
push
pop
insb
das
ss
xlat
ds
out
jp
push
mov
and
add
sub
dec
pop
outsb
jnp
es
insb
dec
sub
inc
sti
orb
jns
add
in
outsl
fistpl
nop
scas
imull
mov
sbb
jae
push
jecxz
cld
mov
fistl
xor
sbb
fwait
fs
lret
sub
sbbl
xor
jle
or
inc
mov
cltd
mov
in
mov
sub
es
out
movsl
sbb
cltd
or
xor
sbb
adc
xchg
popa
or
cmpsb
cs
inc
push
inc
ss
push
cmp
jnp
addl
mov
in
iret
mov
and
movl
dec
fsubr
stc
sbbb
push
out
sbb
jb
cmp
dec
outsl
adc
sub
add
inc
fimuls
lods
push
add
call
stc
outsl
mov
js
es
add
movsb
leave
popf
mov
pop
adc
fsubs
cmp
nop
sub
add
inc
rorl
bound
nop
lahf
popf
inc
cmc
jae
xchg
in
hlt
or
and
adc
inc
xchg
enter
mov
hlt
bound
call
adc
orl
mov
das
ds
mov
in
add
jb
dec
jle
mov
cmp
js
or
sub
stos
mov
jmp
xlat
enter
and
adc
dec
or
ja
pop
xor
xchg
inc
sahf
dec
mov
aam
cmpsb
loop
je
sbbb
fwait
mov
jecxz
imul
jl
icebp
sbb
iret
insb
jmp
stos
js
mov
or
pop
pop
mov
andl
bound
imul
mov
aas
push
jecxz
mov
ret
jecxz
enter
cmp
jp
ss
testl
xlat
enter
aas
jns
mov
out
lahf
add
icebp
xchg
shlb
pop
loope
mov
das
add
and
inc
mov
inc
pusha
xor
int
mov
jbe
cld
cmp
loop
lahf
pop
inc
jno
fwait
add
arpl
in
and
insl
test
and
jo
mov
lock
pop
jge
lret
mov
push
popa
mov
cwtl
mov
lods
fnsetpm(287
mov
mov
or
cmp
push
jp
inc
pushf
ja
jle
xchg
jns
push
call
cli
adc
in
movsl
daa
xor
std
bound
js
adc
int3
pop
mov
mov
fiaddl
cmpsb
xchg
es
stos
pusha
addb
or
sub
les
or
mov
cmc
sub
js,pn
ret
shlb
fcos
enter
cmp
push
pushf
cli
adc
jle
adc
inc
nop
xchg
and
jns
xor
mov
dec
insl
es
ss
test
fcomps
mov
or
push
and
xchg
inc
xchg
in
cwtl
imul
fistpl
in
jne
sahf
and
xor
mov
dec
jge
mov
add
btrl
out
sbb
out
in
mov
loopne
dec
hlt
push
xor
jmp
xchg
inc
and
dec
or
daa
jns
lret
xchg
pop
cmp
mov
push
mov
insl
jnp
and
xor
adc
lea
repnz
push
xor
sub
in
dec
mov
outsl
dec
ja
xchg
out
sbb
pop
sub
std
imul
adc
mov
pop
and
sti
xchg
sbb
adc
inc
adcl
jl
sahf
sahf
clc
decl
nop
and
xchg
push
ret
arpl
out
mov
pop
mov
std
jne
mov
lock
pop
add
xor
mov
and
inc
adc
out
push
dec
add
lds
pop
cmp
cmp
cmc
sbb
dec
nop
lds
xchg
scas
adcb
incb
jecxz
lcall
scas
aaa
aaa
fs
sti
fcompl
and
outsb
add
ret
sub
cli
or
adc
gs
data16
insl
ss
mov
add
aas
lahf
add
adc
notb
clc
scas
sbb
sti
in
cltd
sbb
ljmp
inc
imul
xchg
pop
ljmp
xor
or
fs
mov
pop
sub
stos
sub
xorb
mov
aad
movsb
negl
mov
mov
in
stc
stos
mov
mov
aas
ja
or
fldl
xchg
cmp
xchg
data16
hlt
and
addr16
and
jp
fwait
xchg
pop
inc
mov
pop
hlt
lcall
cmp
pop
arpl
addr16
pop
sbb
bound
mov
sub
push
push
pop
push
push
pop
call
xchg
cs
loope
out
sub
fcompl
sub
pop
cmp
inc
daa
out
aaa
xor
rcrb
fisttpll
fmulp
jbe
sub
xchg
fldt
pop
lods
int
enter
xchg
mov
lcall
push
insl
add
xor
andb
dec
xchg
fstpl
push
aaa
aad
test
dec
pop
mov
fildl
shrl
add
and
movsl
jge
xchg
cs
and
jmp
pop
xor
sbb
dec
loop
nop
lods
push
cwtl
adc
xorb
fidivrl
jg
out
aad
cmp
int
sub
into
adc
jl
mov
movsb
and
jmp
pop
inc
adc
xor
ret
aaa
stos
dec
addr16
aam
in
pusha
mov
int
je
jge
mov
xchg
inc
fidivs
and
int3
mov
adc
sbb
cli
test
popf
sbb
mov
mov
pop
fwait
out
imul
xchg
lret
clc
xchg
inc
adc
aad
jno
jecxz
xchg
cmp
in
out
adc
jp
push
pop
scas
mov
or
rolb
notl
sbb
lds
jno
and
in
outsb
fst
jge
pop
cwtl
ficompl
gs
pop
sbb
test
les
in
xchg
aad
je
adc
mov
pop
sbb
inc
add
orb
mov
inc
cmp
inc
jb
sbb
mov
fstps
add
pop
out
xchg
test
andb
fimull
aam
aam
cwtl
repz
mov
pusha
in
stos
shlb
mov
iret
jmp
lcall
mov
xorb
or
mov
out
and
mov
fisubrl
xchg
stos
test
daa
mov
popa
mov
or
mov
push
in
xor
jg
cmp
imul
fldl
test
dec
aas
arpl
ja
add
shll
push
jb
cltd
pushf
mov
pop
bound
fwait
or
dec
lods
call
bound
sti
inc
sub
sbb
imul
xor
shll
push
outsl
cmp
inc
mov
in
jne
lret
push
jne
jnp
nop
push
jb
mov
cmp
je
push
and
lock
push
adc
mov
subb
pop
mov
jno
mov
ds
mov
mov
icebp
push
sbb
stc
enter
sbb
jmp
ret
lds
rclb
idivl
cmp
xor
inc
push
pushf
mov
pop
vpextrw
mov
jb
inc
out
mov
gs
and
push
or
cltd
rcr
add
popl
into
add
xchg
addr16
aaa
pop
xor
adc
mov
pop
cmp
jmp
cli
movsl
out
xchg
subl
dec
test
leave
out
aas
insl
daa
leave
mov
dec
adc
rcll
sbb
or
lahf
insb
inc
imul
movsb
shrb
dec
out
fwait
subb
sbb
dec
and
fisttpl
inc
mov
pop
shl
push
imul
mov
pop
lcall
in
stos
xor
add
in
outsb
rcl
ret
outsb
daa
mov
mov
fbld
push
push
jb
imulb
in
mov
cmp
scas
adc
mov
js
pop
and
cmpsb
mov
faddl
out
push
mov
push
jne
cmc
add
test
cmp
icebp
dec
je
or
cmc
inc
in
popf
adc
adc
arpl
sar
cmp
mov
vmovdqu
push
xchg
les
fsts
ret
fsubs
sub
enter
add
jo
fnstcw
int3
imul
mov
mov
jbe
or
lret
cli
xor
adc
mov
lret
and
popa
push
shll
xchg
cmpsl
jae
mov
clc
in
es
xor
adc
inc
shlb
sub
add
sub
gs
int
das
mov
xchg
and
fstpt
jb
push
add
fmul
orb
sbb
cmc
lea
mov
jae
push
loopne
push
shlb
xchg
int3
push
int
stos
in
dec
jbe
sub
inc
pop
jge
es
rcrb
out
mov
xchg
in
cmp
jg
ret
and
jmp
call
in
mov
jnp
movsl
fisubl
stc
xchg
sub
loop
rcrl
int3
rcrb
mov
adc
outsb
pop
pop
flds
adc
pop
inc
adc
ret
mov
stc
js
push
push
into
nop
push
pop
fldenv
repz
cmc
sahf
cmpsl
outsl
dec
mov
jecxz
out
xchg
fs
cmp
cli
xor
pusha
cmc
add
jae
jl
mov
sbbb
inc
inc
movb
mov
das
fistps
push
pop
ffreep
push
movsb
xchg
xlat
pop
add
jae
fwait
cmpsb
inc
rcrb
mov
xchg
jmp
int3
cltd
inc
sub
adc
outsl
ret
fdiv
pop
outsl
out
inc
notl
jl
imul
jp
pop
shl
int
popa
sub
mov
pusha
or
add
sub
sbb
jnp
pop
push
mov
addr16
lods
mov
pop
movsb
xchg
xor
insl
in
mov
inc
mov
sti
sbb
mov
add
leave
jecxz
adc
jae
xchg
fcoms
inc
popf
gs
insb
cmp
xchg
fdivs
or
xlat
dec
jge
test
jge
push
dec
mov
mov
pushf
aas
dec
add
jge
enter
hlt
jnp
jae
mov
push
dec
fstpt
xlat
repz
aad
pop
mov
jecxz
test
push
imul
pop
in
sbb
gs
mov
inc
fsubrs
mov
lds
mov
adc
xchg
fdivrl
fisttpll
in
out
in
les
outsb
shrb
add
fisttpl
fldt
add
std
insl
inc
cmp
inc
sahf
arpl
leave
mov
xorb
jmp
xor
in
mov
push
sbb
enter
nop
jno
sub
mov
jecxz
shlb
xchg
out
fstl
in
sbb
rcrl
cmp
adc
and
mov
lea
div
push
mov
dec
dec
cmp
sbbl
fs
mov
fdivp
jno
sbb
mov
es
dec
lods
jecxz
sbb
lock
adc
jg
cmp
dec
mov
shll
inc
repnz
data16
cld
mov
sbb
add
int3
sub
xchg
ret
dec
aam
dec
into
jnp
pusha
adc
push
inc
cld
dec
notl
add
and
addr16
dec
push
push
xchg
jae
dec
ret
fldl
vmovq
push
mov
bound
jl
cmpl
lods
add
push
cld
out
test
jg
mov
scas
ja
pop
aad
push
repz
scas
inc
shll
int
fimuls
push
adc
cmc
test
jp
imul
jl
or
in
cmp
adc
jns
adcb
lret
xor
push
cwtl
fldcw
push
sbb
dec
xchg
xor
fistl
or
cld
addl
imulb
imul
sub
mov
dec
sti
sub
repnz
aam
imul
cli
mov
adc
nop
mov
adc
mov
inc
push
mov
push
cmpsl
mov
lea
xorb
push
movsb
int
xchg
add
subb
lret
lcall
in
cmc
add
ss
sbb
mov
mov
fistpll
jle
inc
jbe
fwait
mov
push
jae
ja
out
sahf
mov
adc
xor
cmp
scas
cmp
mov
js
addr16
adc
and
fmul
mov
in
ret
push
xchg
sbb
sub
js
daa
inc
inc
imul
pop
stos
push
out
pop
addr16
xchg
inc
mov
imul
popa
test
add
es
or
shll
loopne
mov
xlat
mov
movsl
jnp
inc
out
fs
add
jae
filds
sbbl
ss
mov
or
dec
js
js
int3
pop
mov
pop
sub
mov
mov
sub
movsl
je
stc
test
clc
pop
mov
add
dec
push
dec
ljmp
push
in
cmp
js
mov
push
pushf
and
orl
mov
inc
add
jne
push
jecxz
jns
aas
xlat
je
jg
jmp
repnz
and
jge
lock
xchg
sbb
sub
or
inc
int3
and
lds
std
cli
adc
int
lock
addr16
xchg
ret
fisttps
sub
jne
ret
and
cmp
xor
pop
dec
in
popf
mov
push
lahf
add
mov
aad
lods
mov
in
adc
push
lds
xchg
cmp
jns
push
clc
dec
pop
or
push
or
or
das
jae
repz
pop
loop
jp
mov
or
sbb
mov
in
cmpsl
xor
sub
cmp
pop
int3
pop
cmp
xchg
lods
sbb
or
jmp
fnstcw
imul
sahf
cmpsb
fst
xor
xor
pop
daa
mov
out
push
mov
xor
xor
xor
pop
push
and
add
shlb
pop
xor
inc
sub
pushf
mov
sarl
and
inc
xchg
in
call
inc
out
add
ss
stos
test
andb
int3
inc
mov
call
in
xor
add
addr16
jns
cmpsb
dec
je
nop
add
or
sub
sbb
ret
mov
mov
lret
add
lods
sbb
sbb
in
popa
adc
mov
lds
mov
ss
lds
dec
mov
mov
cmpsb
mov
mov
outsl
aam
iret
sub
ficomps
or
cmpsb
je
repnz
sti
insb
rolb
fidivrl
rcrl
cmpsl
imul
push
push
add
sub
mov
ret
jb
push
add
aad
xchg
loop
fs
pop
and
ljmp
shl
inc
dec
mov
push
lahf
adc
adcb
cmpsb
stc
push
repnz
mov
jno
outsb
and
jns
push
aas
mov
js
sbb
pop
mov
xchg
dec
stos
mov
xchg
scas
lds
or
fwait
roll
outsl
ret
add
in
mov
or
or
mov
lods
leave
xchg
pop
jb
in
inc
add
aad
xor
or
push
in
adc
add
inc
sbb
int
dec
sti
stos
out
jg
dec
sysenter
jp
sti
xorb
cmp
dec
in
fnsave
insl
fbld
or
or
popa
ds
ds
push
stos
and
addr16
test
add
int
cmpsw
xchg
adc
add
sbb
mov
push
scas
pop
scas
ficoms
add
mov
test
mov
addr16
cmp
xor
push
push
add
push
inc
xlat
negl
mov
inc
sub
add
and
lahf
cmp
pop
cltd
mov
pop
imul
test
sub
addb
jp
cltd
in
mov
dec
mov
lock
pop
in
call
xchg
rclb
ficomps
negb
cltd
nop
pop
loopne
inc
rcrl
iret
cmp
popf
jb
movsb
jns
cs
sbb
enter
xchg
inc
mov
andb
hlt
jecxz
outsb
adc
aas
add
adc
push
bound
mov
and
cmp
scas
das
loope
push
mov
aaa
jbe
mov
popf
loope
aam
popa
cmp
lods
xchg
mov
pusha
icebp
mov
outsb
es
adc
mov
jns
das
mov
adc
push
mov
loope
mov
jns
add
call
rorl
xchg
rol
shrl
inc
mov
mov
xor
push
add
cmpsl
lods
adc
pop
mov
sar
mov
inc
hlt
inc
mov
cs
loop
sarl
fnstcw
inc
std
sti
add
push
loope
pop
stc
aas
mov
jp
adc
or
mov
nop
ljmp
mov
cs
adc
leave
push
or
loope
push
lret
adc
jmp
subb
sub
push
sti
cld
shrl
inc
jae
out
int
pop
mov
sub
std
call
popf
repz
leave
rcrl
in
test
dec
push
rcrl
mov
jle
ret
pushf
adc
stos
sbb
repnz
mov
movsw
js
les
pop
mov
subl
dec
test
mov
xor
stos
mov
test
lret
dec
jmp
inc
fdivr
in
cmp
jae
cli
aad
cli
sarb
dec
into
pusha
mov
xor
ds
and
popa
aaa
cmpb
mov
xchg
jns
sub
cmpb
jle
jecxz
cld
or
lods
leave
and
mov
and
push
shrl
push
mov
mov
mov
in
xor
mov
sahf
mov
mov
mov
jl
pushf
jecxz
inc
add
scas
pop
sbb
out
das
cld
aam
inc
movb
inc
jg
sbb
mov
add
dec
inc
xchg
in
and
sbb
scas
loopne
pusha
int3
mov
les
jne
jp
in
je
ja
cmp
add
mov
rcl
mov
or
adc
loope
jno
cmp
addr16
divb
nop
or
push
inc
fsubrl
scas
pop
out
adc
addb
cli
icebp
jge
inc
std
cmp
nop
jp
mov
test
or
inc
push
mov
jmp
sbb
insb
mov
icebp
testb
test
data16
sbb
lock
sub
inc
add
mov
sub
pop
mov
out
push
loope
cmp
pop
cmp
dec
cmpsl
js
sub
nop
adc
adc
lods
movsb
stc
test
mov
or
xchg
pop
mov
nop
test
dec
movsb
daa
mov
pop
mov
stos
add
pop
push
sub
dec
inc
jo
jo
je
and
fcoms
scas
mov
inc
lods
fwait
and
pop
jecxz
rorl
pushw
aad
add
sbb
hlt
jle
jnp
mov
sbb
js
mov
push
mov
pop
xchg
cmpl
push
xchg
push
daa
and
jb
xchg
mov
mov
sahf
aas
out
hlt
sub
sbb
push
push
leave
fbld
add
mov
aam
mov
and
jno
in
inc
aas
dec
sahf
adc
rcll
dec
andb
stos
scas
mov
xchg
shlb
ret
mov
jmp
cmpsl
popf
or
jmp
xor
xor
andl
push
les
int3
xchg
push
pop
jecxz
inc
push
mov
cmp
loopne
loop
mov
add
add
push
ret
xchg
mov
add
aad
xchg
cmpsb
insl
jl
iret
mov
int3
sub
cs
xchg
out
loope
cmp
scas
in
in
in
jecxz
call
adc
stc
mov
mov
mov
outsl
xor
xor
insb
xchg
sti
popa
pop
fs
ljmp
loope
push
dec
int3
in
mov
fidivs
sti
push
in
jnp
mov
test
xchg
cmp
dec
xchg
es
or
push
sub
or
pop
xchg
fistpll
test
sub
loope
in
and
lods
mov
inc
mov
outsb
sti
pop
mov
nop
cmp
mov
sbb
add
adc
hlt
or
jbe
test
and
ror
inc
out
not
pop
or
pop
pop
bound
push
pop
add
inc
inc
sub
inc
hlt
negl
in
mov
jo
std
pusha
pop
sbb
mov
out
iret
pop
cld
push
fucomip
pop
push
mov
jnp
lods
xchg
lret
mov
xchg
scas
mov
imul
adc
das
dec
pop
and
xchg
mov
decb
movsb
cmpsl
out
mov
jg
inc
fidivs
and
daa
outsb
mov
aad
mov
or
push
push
imull
jb
lahf
faddl
data16
sub
lret
outsb
arpl
add
xchg
xchg
mov
sub
js
in
roll
inc
xchg
pop
mov
addr16
dec
xor
ror
sub
mov
sbb
inc
sub
mov
js
push
inc
aas
pushf
into
mov
sub
mov
dec
xor
div
adc
pop
ljmp
add
push
sbb
xchg
stc
pop
cmc
mov
xor
add
jne
popa
sbb
jae
and
jo
or
pop
int3
xchg
mov
sub
lret
aaa
pop
mov
outsb
sub
arpl
push
add
pusha
mov
sub
dec
ss
inc
push
lcall
roll
push
rclb
fmull
pop
lock
jno
sarl
insl
enter
mov
sbb
xchg
dec
shlb
mov
cmp
xchg
sub
sbb
fildl
push
das
lgs
daa
popf
stos
movsl
mov
fidivrs
mov
repnz
adc
xchg
sbb
sub
popf
sub
mov
out
mov
xor
cmc
mov
hlt
pop
sbb
dec
lods
sti
mov
daa
inc
jns
xorb
clc
or
dec
adc
sub
mov
call
xor
cmp
sbb
or
inc
xor
dec
das
frstor
mov
aaa
int
out
cli
stos
mov
jae
or
mov
cmp
in
and
cmp
cs
mull
movsl
hlt
sbb
mov
xchg
je
cld
testl
push
xchg
push
mov
test
mov
xchg
and
jecxz
add
or
cli
les
push
bound
dec
rcr
or
add
cmpsl
add
icebp
sub
in
mov
lea
icebp
daa
leave
add
hlt
test
jo
push
fsubl
cltd
adc
leave
inc
fldenv
jo
mov
adc
shl
addr16
cli
lret
or
sub
fwait
out
inc
adc
dec
cltd
xchg
lcall
jp
xchg
xor
xchg
push
mov
push
inc
push
dec
jle
dec
sarl
jp
mov
mov
cmpsb
imul
es
int
imul
bound
ljmp
fdivl
orb
xor
sahf
xlat
mov
dec
cwtl
cmpsb
mov
lods
aas
push
push
push
lods
ret
mov
mov
mov
in
push
jle
cli
imull
pusha
movsl
lcall
mov
xor
popf
cwtl
mov
add
cmp
ljmp
and
cmpsl
daa
and
push
scas
out
or
inc
mov
mov
pop
movsb
dec
insl
fmul
push
jp
sbb
lahf
pushf
and
scas
jae
inc
enter
xlat
inc
add
in
sbb
sbb
jp
mov
lahf
shl
or
xchg
xchg
into
jmp
scas
es
in
mov
scas
orb
push
out
hlt
mov
mov
cwtl
ds
and
or
cmpl
xchg
rorb
cmp
mov
rorb
cmp
dec
sub
dec
in
or
pop
xchg
insb
inc
sbb
sbb
pop
dec
or
gs
hlt
xchg
sbb
jge
xor
subb
inc
cmp
pop
xchg
fstpt
test
pusha
andb
fdivrs
add
shl
cld
mov
mov
pop
pop
dec
xorl
mov
stos
pop
stos
mov
in
rcr
inc
pop
dec
and
pop
lods
mov
jp
xor
inc
inc
mov
mov
pushf
or
sbb
mov
xchg
inc
test
loope
aad
out
mov
jae
or
adc
inc
xorb
sbb
shrb
push
sub
mov
aad
jmp
mov
xchg
lcall
cmpsl
or
mov
push
sbb
jbe
push
imulb
sub
add
lcall
nop
pop
adc
and
push
pop
sub
add
mov
inc
and
or
stc
sub
rclb
js
cmpsl
cmp
clc
sub
sbb
mov
aas
xor
incb
xchg
and
pushf
cltd
sub
out
sbb
mov
xchg
or
push
pop
aas
sbb
jle
dec
pop
lock
cmp
jae
jge
les
dec
in
adc
pop
fidivrl
mov
popf
dec
ds
fiadds
mov
cmp
inc
cli
adc
push
jge
jecxz
dec
or
push
rcrb
out
mov
cmc
pop
iret
xchg
xchg
enter
jno
mov
inc
aas
or
dec
cli
mov
je
jae
cmpsb
jge
scas
aaa
lret
insl
mov
test
pop
cmp
scas
and
pop
xor
aad
and
sbb
insb
cld
test
not
leave
or
xchg
dec
or
loope
call
dec
mov
push
push
cmp
cmp
xchg
sub
pop
inc
push
mov
imul
push
jp
lock
add
push
jp
repz
jbe
std
mov
sub
sti
dec
movsb
test
test
mul
addr16
mov
pushf
sub
popa
xchg
movl
negl
cld
or
sub
ja
daa
and
out
outsb
pop
shlb
xchg
js
and
sbb
sbb
test
dec
lods
lods
mov
cwtl
mov
inc
je
pop
add
or
xchg
lock
popf
mov
iret
mov
jle
test
mov
ja
outsb
push
push
push
mov
insb
mov
dec
gs
dec
popf
jmp
xchg
fcoms
mov
xchg
or
dec
mov
or
loope
push
xlat
sub
popf
jle
mov
and
insl
sub
pop
xor
xchg
adc
lods
lcall
jmp
fldt
push
and
pushf
movsl
mov
test
mov
or
push
adc
adc
mov
mov
das
mov
icebp
cmp
sbb
add
aas
dec
test
pop
ret
rol
in
pop
ffree
sub
aaa
mov
xchg
out
imul
inc
fwait
lods
jge
add
sub
sbb
dec
mov
test
mov
adc
jl
orl
in
lahf
pop
shll
ret
adc
xor
jge
sub
dec
xor
or
lock
and
jbe
lods
and
or
sub
stos
call
test
jns
iret
xor
xchg
mov
mov
shrl
bound
pop
xchg
jbe
in
dec
and
cmp
jmp
adc
sar
jo
adc
pop
daa
fstpt
push
rolb
adc
sub
push
or
rorl
pop
pop
int
lods
push
jnp
popa
jo
mov
lret
scas
aas
arpl
lods
and
sub
aaa
rorb
je
addr16
sub
cli
sub
jecxz
and
out
xchg
jo
xchg
shlb
dec
jno
push
sbb
test
pusha
xor
pop
jp
xchg
jp
hlt
sbbl
popa
test
add
fadds
pop
jg
aaa
xchg
adc
sub
xchg
xchg
jne
and
adc
loopne
in
add
mov
loopne
mov
repnz
enter
push
out
cmp
pop
xor
iret
cltd
pop
rcll
mov
fcmove
mov
mov
fs
mov
or
out
or
in
jle
ljmp
insb
mov
in
leave
sub
push
push
xorb
or
push
cmp
leave
ret
mov
addr16
scas
dec
rcll
push
mov
push
outsb
xor
add
push
daa
mov
gs
hlt
icebp
in
xchg
sbb
insl
and
pop
bound
in
int3
and
loope
fisttps
ret
faddl
rclb
and
jmp
or
ror
xchg
movl
fwait
mov
out
push
outsb
sbb
xlat
sub
xor
enter
shrb
or
scas
gs
fcmove
sahf
adc
ljmp
dec
in
lcall
xor
outsl
jo
xchg
nop
lret
aas
jns
es
push
aas
out
hlt
mov
jecxz
sub
rolb
test
mov
out
jae
cmpsl
adc
xchg
aaa
enter
pop
arpl
mov
add
stc
ljmp
pop
in
sub
scas
stos
movsl
mov
movsb
cli
jnp
hlt
out
jmp
fdivrl
push
sti
fisubs
pop
hlt
push
icebp
inc
mov
push
xor
pop
push
mov
repnz
or
lcall
push
scas
in
das
clc
lahf
test
sub
aas
pop
inc
xor
cwtl
aad
stos
ja
inc
mov
jno
pop
cmp
cmp
add
aad
int
sti
cli
rcr
cmc
out
ret
jo
push
xchg
in
adc
aaa
xchg
daa
mulb
imul
mov
or
mov
jle
icebp
inc
scas
sbb
pop
or
sub
loope
fldl
sbb
mov
lret
push
and
orb
xor
adc
sbb
dec
movsl
pop
adc
mov
mov
jecxz
inc
pop
jecxz
shrl
mov
loop
xor
jg
cmp
shrl
add
jb
push
popa
mov
inc
iret
mov
jae
es
pop
pop
inc
jne
subl
and
shl
andb
arpl
dec
dec
mov
and
test
cmpsl
push
sar
sub
push
adc
pop
das
adc
push
mov
mov
push
xchg
fidivrl
in
das
pop
mov
xchg
fcoml
sti
mull
xchg
sbb
je
shl
fmul
sub
loopne
mov
popf
push
mov
jl
sub
pop
insl
fnsave
mov
aam
out
lret
mov
and
scas
orl
mov
faddl
mov
add
inc
or
adc
mov
push
lret
loopne
push
add
push
movsl
jns
or
imul
loopne
add
mov
cmp
pop
imul
mov
popf
lret
fsubs
and
and
adc
pop
scas
ret
cmc
subl
cmp
jb
fs
mov
jl
push
xor
or
mov
push
jno
sub
pop
test
sbb
in
aaa
dec
in
movsl
dec
out
es
das
jae
xchg
add
es
sub
jb
repnz
adc
sbb
fbld
sbb
aaa
and
push
jno
mov
fidivl
mov
outsl
out
mov
fs
xchg
jno
gs
jns
ret
push
fcmovnu
sbb
test
and
lret
push
sbb
in
and
pop
or
cmp
mov
mov
cmp
gs
mov
popa
cwtl
sbb
ljmp
in
xor
ret
call
fwait
pop
jge
insl
in
adc
or
pop
push
jg
sub
lret
jns
jo
push
sub
lret
test
cmpsb
sti
test
dec
in
xor
cmp
fnstsw
jo
cs
mov
pushf
sub
rorb
sbb
pushf
ror
fildll
icebp
loope
inc
xchg
xchg
nop
pop
mov
pop
lock
dec
rorb
pushl
dec
sarl
jmp
mov
lods
out
sbb
push
push
cltd
mov
jo
in
pop
jns
jmp
js
cmp
push
lret
out
pusha
or
mov
fsubr
xchg
dec
loop
mov
push
pop
cld
fwait
or
out
add
cmpsb
rorb
inc
xchg
sti
inc
and
sub
sub
icebp
lahf
ss
push
and
loop
cmp
jne
enter
adc
mov
popf
enter
or
xor
and
jg
sbb
cld
jbe
xchg
icebp
movsb
dec
out
or
dec
lret
mov
xchg
inc
rcll
divl
or
push
xlat
aas
outsb
lret
sub
imul
or
pushf
cmpsb
popf
xchg
xchg
cmp
dec
outsl
shlb
or
or
rclb
test
mov
mov
dec
arpl
and
mov
mov
push
and
pop
jae
daa
or
ror
xor
mov
xchg
adc
or
mov
pop
out
aam
add
add
or
lret
mov
test
fnstcw
stos
fiaddl
sti
sbb
arpl
pushf
dec
aaa
into
push
pop
les
push
aaa
adc
cmp
sub
ret
outsl
pop
xor
pop
mov
inc
iret
mov
mov
aad
in
sti
stos
mov
jp
es
pop
pop
cmp
das
je
aam
shr
xchg
mov
cmp
mov
dec
test
mov
aad
cmpsb
js
dec
imul
jge
icebp
sub
and
cwtl
insl
rclb
xchg
daa
add
pusha
enter
mov
dec
je
jo
pop
pop
adc
in
or
sbb
loope
sub
cmpsb
or
imul
mov
in
adcl
dec
lock
lods
fdiv
push
jp
movsl
jecxz
stc
clc
adc
jne
popf
je
nop
mov
loope
popf
and
xchg
dec
lcall
aam
cwtl
lods
or
mov
je
adc
push
repnz
cmc
aad
sti
and
xchg
add
adc
pop
add
pop
ja
cmp
xor
cmc
mov
xchg
cmp
int3
pop
loope
out
stos
add
sub
cmp
jns
sbb
cmp
jg
inc
sbb
jno
xchg
lcall
fidivl
popf
and
leave
hlt
scas
jle
ss
fcom
mov
jle
adc
inc
call
add
push
ret
adc
cmpsl
in
test
push
cld
xchg
jno
bts
enter
add
repz
lret
sbb
and
popf
xchg
or
shll
xchg
dec
addr16
xor
stc
int3
repnz
adc
and
inc
jmp
pop
mov
jle
gs
push
cmp
test
and
push
sub
fcomip
andb
out
repnz
and
das
in
ror
test
or
inc
aad
xchg
daa
inc
sub
ja
test
jne
jmp
cmp
test
gs
xor
sti
aad
jmp
out
mov
ficoms
jno
pop
inc
inc
sbb
or
movsb
xchg
test
adc
and
or
outsb
jb
push
in
and
testb
bound
in
cmp
icebp
jg
rcrb
jmp
cwtl
mov
pop
add
in
sub
mov
shlb
movsb
push
mov
mov
ja
xchg
mov
aas
xor
or
ja
jp
mov
push
adc
cld
push
fistpl
mov
and
sbbl
cmp
push
push
mov
mov
xor
cltd
add
xor
dec
andb
jg
add
rclb
scas
cmp
pop
mov
cmp
xchg
mov
adc
inc
add
mov
mov
jbe
mov
push
lret
jae
dec
repnz
jae
mov
scas
adc
xchg
mov
enter
mov
popa
lea
and
scas
aas
cld
or
icebp
mov
mov
mov
cmpsl
fcompl
into
rcr
mov
leave
clc
add
inc
fdivs
adc
shl
orl
stc
inc
nop
mov
sahf
popf
je
orb
in
sbb
psubb
imul
dec
js
push
imul
dec
pushf
push
in
xchg
mov
add
pop
fstps
mov
test
scas
push
out
lea
mov
mov
ds
fistpl
outsl
add
int
xchg
xchg
mov
xchg
pusha
mov
jmp
adcb
popa
and
add
or
jl
push
in
icebp
jg
mov
adc
iret
cwtl
rolb
pop
lret
pop
cmp
in
lea
cmpsb
xchg
lods
xchg
popa
sbb
mov
jnp
push
xchg
shll
push
testl
rclb
in
insl
gs
les
jo
faddp
dec
mov
xor
mov
mov
pop
orl
js
adc
rclb
lret
insb
jl
dec
jae
lahf
dec
orl
xchg
xchg
inc
or
mulb
mov
pop
push
ds
add
js
sub
call
dec
and
jo
sub
jmp
rorb
pop
stos
test
sub
fidivs
adc
test
rcrl
adc
loop
mov
xor
xor
inc
divb
fmulp
jo
test
lods
xchg
roll
jmp
movsb
aad
ss
jecxz
fmull
iret
jno
repnz
push
test
nop
sysenter
iret
imul
cmp
jo
es
rorb
xchg
in
out
jmp
call
and
repnz
into
inc
movsb
cmp
add
and
daa
fwait
clc
aaa
mov
and
mov
pop
mov
daa
dec
dec
dec
mov
adcb
shlb
inc
adc
sub
fnstenv
fists
div
daa
push
xchg
test
int3
dec
inc
mov
or
in
mov
adc
and
or
xor
repz
lods
dec
aad
jbe
and
sub
aad
mov
scas
push
xchg
push
sti
out
mov
sbb
fdivrl
push
fwait
dec
pop
mov
jne
add
push
test
adc
add
in
push
xor
popa
in
sub
push
cs
cmc
push
ja
mov
popa
mov
lock
inc
jbe
jge
pop
and
jno
pop
shlb
bound
push
loope
nop
adc
cltd
xchg
lods
addl
loopne
sbb
iret
pop
add
imul
lods
or
icebp
sub
or
sti
xorb
fs
xchg
and
jge
mov
fsubr
cmp
inc
iret
adc
pop
and
dec
loop
subb
lret
out
sar
cmp
fldenv
mov
sub
or
aas
jge
push
hlt
cmp
and
test
fildll
sub
or
jle
add
mov
add
sti
leave
fsubs
ss
jle
leave
aam
xchg
out
fistps
xchg
repz
add
loope
ret
mov
hlt
data16
fdivrl
lods
jae
sbb
sbb
jb
test
movsl
xlat
ret
mov
pusha
repnz
mov
cmpsl
sbb
push
test
xor
xchg
out
stc
stos
push
sahf
and
or
add
and
mov
out
sbb
dec
mull
cmp
mov
and
push
xchg
loop
mov
cs
adc
push
mov
mov
add
adc
enter
xchg
add
inc
mov
fwait
xor
cs
lret
mov
es
jo
mov
cmc
and
popa
lods
ljmp
outsl
mov
and
dec
push
js
mov
fs
popf
movsb
or
std
lcall
add
sbb
xchg
dec
mov
cmpsb
cld
sub
faddl
mov
mov
pop
hlt
jmp
aaa
sarb
ret
sub
xchg
jo
cmp
sahf
mov
popa
cld
push
adc
inc
mov
inc
test
fstpl
sub
jne
dec
sub
sbb
ja
sarb
xor
cmp
push
stos
insb
push
xchg
std
rcrb
sub
jl
movsl
das
lret
pop
pop
push
jns
mov
and
jnp
sub
or
ficoms
and
xchg
jle
fwait
test
mov
fcmove
pop
loopne
sbb
mov
mov
push
mov
sbbl
aas
lock
popf
jae
mov
or
out
scas
in
mov
sti
fs
scas
fdivs
out
or
jno
push
and
xchg
cmp
xchg
into
or
push
add
fstpt
mov
loopne
bound
xchg
mov
inc
dec
push
mov
jno
xchg
dec
dec
inc
sbb
adc
inc
stos
inc
sub
popa
pop
mov
insl
rcl
jecxz
ret
inc
popa
dec
loope
test
out
pop
jne
je
and
cmpsl
scas
out
arpl
bound
test
or
mov
imul
movsl
out
ret
pop
mov
lock
sbb
mov
sbb
les
pusha
mov
xor
xchg
and
adc
insb
push
xor
pop
lock
jns
daa
jge
mov
inc
inc
in
cli
inc
rcrb
jle
data16
or
bnd
or
mov
mov
or
ja
lcall
and
fnstcw
test
and
mov
arpl
push
inc
or
jne
and
or
cmp
pop
f2xm1
dec
movsl
ret
fcomps
push
push
push
sbb
mov
rcl
or
push
loopne
push
pop
rcrl
xor
roll
imul
mov
in
jmp
nop
mov
pushf
movsb
jecxz
mov
sbb
jle
cltd
pusha
adc
loope
leave
push
push
cmpsl
test
adcl
cwtl
mov
into
push
adc
lods
mov
lahf
mov
mov
inc
daa
lret
fldl
or
ficoms
nop
mov
ret
xor
jbe
add
jmp
mov
call
push
mov
sub
jmp
pushf
mov
enter
jnp
and
adc
mov
and
xor
push
lock
repz
sub
loopne
jle
mov
add
out
mov
xor
ljmp
jne
push
lret
push
mov
out
dec
dec
sub
cmp
sti
test
sub
loope
jb
mov
jo
sub
mov
shld
cld
pop
mov
rclb
mov
push
aas
xchg
movq
aas
xor
jg
inc
push
mov
jmp
hlt
mov
in
lock
pop
popf
les
xchg
xor
push
mov
scas
xor
das
out
jmp
sub
adc
xor
jecxz
getsec
das
daa
in
mov
and
cltd
and
or
pop
subb
mov
cmp
sbb
mov
loopne
ja
hlt
push
leave
lea
xchg
int3
and
popa
jns
cmpsb
and
add
cmp
sbb
inc
push
int3
mov
mov
ror
lods
lahf
jae
nop
push
mov
sbb
mov
push
loopne
mov
push
scas
lods
xchg
dec
ret
sbb
int
xchg
outsl
fwait
into
inc
in
push
inc
mov
jbe
repnz
inc
mov
leave
xchg
inc
fiadds
and
push
cmp
fldcw
pop
push
mov
arpl
xchg
xor
rorl
pop
dec
push
int3
test
test
cmp
repnz
repz
into
lock
aad
popa
popa
add
fmull
push
or
sub
or
sbb
jp
aas
push
cmp
imul
mov
mov
test
push
inc
jg
cli
adc
or
aas
cmp
test
jp
sub
movsl
popf
dec
lods
mov
pop
in
lret
mov
mov
cmp
repz
repnz
xchg
lcall
dec
pop
sahf
push
bound
icebp
mov
pop
push
push
test
sbb
out
push
mov
mov
mov
imul
or
addr16
subb
test
xor
imul
jns
mov
or
lds
dec
enter
mov
bound
inc
add
cmp
push
dec
es
mov
bswap
cmp
in
imul
test
mov
test
dec
movsb
fdivrs
repz
addb
loope
sub
fiadds
adc
outsl
lods
and
cltd
shll
into
and
mov
inc
add
rorb
push
aas
mov
mov
loopne
pop
sub
add
mov
cli
and
fistps
inc
pusha
lret
mov
xchg
lea
jmp
xor
mov
out
lret
inc
inc
nop
out
mov
je
fistpl
dec
aas
push
xchg
dec
arpl
jno
pop
scas
stc
fcomip
push
std
lock
aaa
dec
and
popl
sub
jge
xchg
pusha
jmp
jo
dec
test
inc
mov
jecxz
stc
xchg
je
int3
test
mov
jne
imul
jmp
add
sbb
lods
sbb
icebp
dec
out
push
fsubs
test
loop
iret
clc
and
pop
mov
push
dec
or
in
test
dec
mov
shl
ss
mov
add
dec
xlat
add
loope
inc
dec
jg
out
pop
xchg
insb
and
ret
lahf
dec
jle
cld
cld
inc
mov
push
mov
fldcw
xchg
mov
inc
cs
data16
and
cmpsb
jb
adc
sbb
pop
mov
in
xor
xchg
dec
jg
repz
daa
xchg
sub
jo
inc
add
cltd
add
mov
pop
ret
pop
adc
imul
sub
jg
jmp
mov
es
je
pop
xor
cmp
pushf
mov
add
jecxz
daa
es
pop
fsts
mov
mov
lea
test
pusha
push
stc
sub
lock
or
xor
inc
repnz
adc
in
inc
fwait
or
xchg
xchg
pop
aad
roll
mov
cmc
test
div
sub
adc
add
jmp
add
adcl
mov
das
lahf
outsb
lock
cs
or
int3
inc
sub
cmp
test
pop
or
daa
mov
addb
addb
push
cs
mov
addr16
les
pop
jnp
sahf
mov
sti
push
jnp
fisubs
pop
call
mov
or
mov
sbbb
dec
sbb
inc
mov
mov
inc
mov
shlb
add
fsubs
test
mov
dec
pushf
push
movsl
mov
fbstp
cmp
or
push
jl
cmp
movsb
imul
xchg
cmp
clc
outsl
jp
sub
or
jmp
in
dec
aam
push
movsl
mov
pop
test
mov
cld
mov
mov
push
cmc
repnz
hlt
loope
xchg
js
adc
inc
out
cmpsl
push
push
mov
mov
add
mov
daa
sbb
cwtl
lods
mov
std
pushf
enter
sbb
dec
int3
faddl
jne
fnstenv
lea
dec
shlb
dec
cmpsb
adc
inc
std
scas
mov
icebp
dec
test
clc
jbe
in
push
mov
faddl
pop
mov
sbb
dec
enter
dec
or
and
cmp
stos
ljmp
cmp
pop
icebp
inc
fildll
push
aas
fdivrl
inc
sahf
pop
pusha
add
sbb
loopne
icebp
inc
inc
and
cmp
movb
lock
jmp
movsl
repz
lahf
add
stc
mov
aas
xor
sub
aas
dec
adc
lahf
ds
adc
bound
mov
dec
xor
mov
test
xor
stos
pop
pop
cmc
sbbb
or
jno
rclb
cmp
stos
fistps
insl
sub
push
in
mov
test
inc
dec
movnti
aad
or
mov
pop
push
dec
popf
push
div
mov
xor
ljmp
sub
mov
mov
dec
push
mov
push
shrb
cmp
push
and
and
popf
in
mov
mov
pop
push
xlat
adc
sbb
pop
jae
mov
lock
push
fisttpll
pop
or
sbb
ljmp
jmp
pop
test
mov
push
imul
sti
addr16
push
add
arpl
and
jo
les
xchg
mov
mov
icebp
push
mov
sub
or
rol
out
dec
push
push
imul
xor
addr16
stos
pop
sbb
mov
xor
push
push
pop
pop
dec
leave
mov
rclb
mov
jl
or
and
cmp
call
xchg
ret
stos
sub
inc
sarl
xchg
clc
mov
jae
lahf
mov
scas
dec
mov
mov
popa
fdivl
mov
in
inc
or
cwtl
jo
repz
and
daa
or
stos
and
stc
popf
test
push
setno
jnp
movsl
adc
xchg
add
mov
dec
adc
dec
pushf
lds
inc
push
inc
in
imul
jo
inc
xor
adc
cmp
das
aam
test
mov
add
out
pop
lods
xchg
lfs
ss
xchg
rorl
dec
pop
js
pusha
or
ljmp
daa
divl
or
sbb
addl
lret
js
notb
stos
out
inc
sahf
jmp
lret
mov
jle
jae
push
xor
mov
dec
shll
xlat
xor
pop
les
testl
adc
sti
scas
inc
rolb
dec
je
negl
lods
sbb
sub
and
out
mov
push
imul
ret
cli
cld
bound
adc
cmpsb
mov
gs
cmp
outsl
push
imulb
mov
mov
es
add
lea
stc
and
fwait
out
jnp
in
push
ret
jno
sub
out
mov
fdivrs
in
mov
clc
jnp
fidivrs
adc
dec
ss
or
repz
jo
dec
adc
inc
cld
mov
psllq
fs
setge
cmpsb
repz
mov
add
out
mov
aad
mov
pop
or
fnstsw
sbb
xor
testl
rol
cli
es
xchg
mov
gs
in
jl
movsb
push
jl
out
mov
in
js
cmpsb
inc
jle
addb
jno
fcompl
loopne
repnz
movsb
sarl
xchg
cmp
out
add
xchg
push
dec
push
xor
add
cmp
pop
sbb
popa
sub
dec
out
lods
pop
or
adc
divl
lock
js
sub
ret
xchg
aas
ja
xor
mov
repz
mov
incl
xchg
ljmp
std
cmp
shl
dec
inc
pop
push
fdiv
lock
cld
push
adc
push
push
pop
adc
dec
mov
xchg
cs
test
push
pop
insb
push
sbb
inc
call
jmp
and
mov
nop
jns
xor
dec
pop
dec
scas
dec
dec
aas
aas
cmp
adc
mov
ret
fldenv
fmulp
mov
inc
jp
pop
cmpsb
je
push
mov
fcomps
sarb
loopne
jne
mull
push
frstor
fsts
ret
test
nop
imull
pop
and
cmp
sub
rorl
js
pop
xchg
jne
ljmp
in
mov
loope
test
imul
push
adc
je
popf
pusha
imul
mov
xchg
cmp
pusha
mov
jg
outsb
add
stos
fs
test
pushf
iret
jo
repz
or
ficomps
adc
cmp
nop
loope
and
mov
mov
push
lret
mov
in
or
adc
ss
jmp
pop
mov
jno
xor
cwtl
bound
cmp
or
cmp
inc
jb
iret
or
cmp
sub
mov
es
xor
sbb
inc
mov
ficomps
call
cs
sub
sbbb
divl
test
pop
nop
dec
lods
and
shll
loopne
scas
pop
clc
add
push
sub
or
xorb
mov
mov
xchg
push
out
xor
and
or
cmpsl
test
dec
dec
add
ret
cmp
ret
pop
sahf
lock
xchg
popf
ds
mov
dec
jl
repz
inc
bound
and
mov
int
cld
and
add
pop
popa
cmp
push
cmp
pop
jo
pop
lea
sbb
xor
xlat
cmpsl
lods
sbb
mov
mov
fisubl
add
imul
scas
mov
pop
xor
sbb
dec
bound
pop
in
nop
sub
mov
mov
mov
flds
adc
and
dec
pop
jns
clc
push
mov
jnp
sbb
ficoms
int
lea
xor
cmpsl
sarl
mov
add
arpl
mov
aaa
pop
incl
jle
sahf
and
rcrl
out
dec
xchg
xor
ds
cwtl
les
mov
xor
push
addr16
out
mov
in
lahf
cmpsb
sbb
sbb
leave
out
test
push
cmp
pop
push
cli
stos
addl
in
cmp
adc
js
xor
aas
xchg
fwait
cltd
popa
mov
sub
xor
inc
gs
add
adc
inc
leave
dec
cld
xchg
pop
add
mov
loopne
or
mov
add
xchg
or
sbb
hlt
fdivrl
fdiv
imul
pop
cmpsl
jle
inc
jae
scas
das
push
movsb
mov
push
push
test
dec
xchg
outsb
cs
jg
pop
cld
and
das
adc
push
loopne
lcall
or
mov
fadds
mov
pop
pusha
pop
test
clc
into
insb
fidivs
leave
inc
cli
mov
icebp
arpl
cmp
push
pop
sub
stos
xchg
mov
adc
xchg
jg
loop
cmpsl
inc
pop
inc
inc
mulb
stos
jnp
jg
mov
arpl
mov
xchg
bound
or
inc
cs
jo
lock
push
mov
pop
rcr
sbb
loop
mov
fldcw
cmpb
mov
popf
pusha
insb
mov
cmp
clc
adc
in
in
jb
fwait
jne
lea
stos
cmp
outsl
xlat
loopne
pop
or
popa
orb
cmc
inc
out
xor
push
push
mov
stos
shlb
fcoms
dec
sub
mov
fwait
mov
int
and
xchg
outsl
dec
cmpsb
pusha
cmp
loop
cmp
aam
sbb
paddusb
cmp
push
inc
add
or
pop
jae
jbe
add
test
lods
cmp
repnz
pop
ja
stos
sbb
add
cmp
xchg
fiadds
mov
icebp
loopne
mov
adc
push
jmp
out
out
aas
xchg
xchg
inc
mov
lods
xchg
loope
fcoms
mov
imul
out
jnp
mov
push
inc
je
xchg
mov
out
mov
pop
pop
shrb
shrb
sbb
insb
aas
xlat
imul
testb
inc
dec
cwtl
insb
push
push
dec
and
cmp
iret
insb
imulb
mov
enter
in
jmp
stos
lcall
pop
push
in
repnz
cmpl
add
stos
and
mov
popa
inc
scas
jp
push
movsb
fdivl
testb
pushf
pop
subb
push
hlt
ds
ret
stc
pop
loope
inc
pop
loopne
mov
push
jae
jp
mov
adcb
adc
loop
dec
out
loop
lret
jae
mov
mov
dec
jle
leave
mov
jmp
imul
fdivs
pop
mov
nop
inc
mov
loopne
inc
push
push
jbe
push
mov
int
push
out
repz
js
imul
cwtl
ja
in
iret
push
add
and
rolb
out
loop
mov
das
sbb
dec
in
mov
inc
lret
mov
out
dec
mov
jge
push
mov
and
cmp
add
lods
inc
lods
out
sar
js
aad
sub
loope
jae,pt
test
sub
out
bound
mov
test
mov
aaa
sbb
hlt
outsb
enter
int
call
test
push
cmp
bound
jo
loop
aaa
xor
jmp
aaa
cwtl
cld
loopne
fwait
push
les
decb
int3
mov
int
dec
push
xchg
cmp
lret
call
xchg
xor
fdivrp
arpl
push
js
inc
imul
pusha
or
enter
sbb
in
sbb
mov
iret
pop
or
adc
push
mov
jne
or
stc
cmp
mov
pop
ret
inc
sbb
or
jmp
lea
pop
inc
outsw
xor
mov
out
fstp
sbb
fisttpll
les
lcall
in
xchg
pop
xor
addl
enter
je
fimuls
call
aaa
mov
cmpsb
popf
mov
mov
loop
andl
ret
aad
jmp
pop
mov
jg
mov
pushf
imul
dec
mov
xchg
cld
adc
jns
pavgb
xlat
movsl
and
cwtl
arpl
sahf
out
decl
ja
icebp
xchg
cwtl
es
add
jne
mov
dec
test
xchg
lret
dec
bound
imul
call
fisubs
out
jle
cmpl
adc
test
add
ret
xchg
enter
xor
and
and
sbb
test
insb
fs
mov
hlt
test
repz
mov
insl
stc
dec
cmp
imull
sub
xchg
stos
in
dec
jns
fisubl
xor
mov
push
cmp
and
dec
xor
repz
lods
int3
fs
mov
outsl
sahf
popa
xchg
dec
jns
loop
loopne
mov
mov
scas
cmc
xor
mov
sub
fstl
mov
mov
outsb
cmpsb
cmp
xchg
mov
mov
sti
sub
and
in
sbb
pusha
fnstenv
in
sub
mov
lods
cmc
jmp
gs
sbb
ja
xchg
cwtl
adc
or
into
xor
mov
adc
mov
jo
push
xchg
xchg
lock
sbb
and
sub
push
fldenv
jg
lods
into
cmp
or
push
call
filds
lds
sub
xchg
in
loop
daa
dec
cmpsb
mov
out
dec
cmpsl
fildll
fwait
fs
pop
outsb
add
das
cmp
add
incb
cmpsl
xchg
sub
sbbl
and
xlat
dec
mov
jge
rorb
pop
dec
shlb
inc
or
clc
stos
push
jns
mov
sub
inc
inc
aad
adc
and
jbe
sub
jb
adc
ja
xor
rep
outsl
add
lds
cmc
jb
cmp
xor
or
dec
xchg
xlat
and
cmp
dec
lcall
sbb
cmp
mov
pushf
jmp
inc
jp
mov
pop
addr16
xchg
jecxz
stc
bound
lock
scas
add
cld
mov
dec
or
cmc
jnp
push
mov
jge
adc
jo
ja
cmp
roll
es
std
rolb
sbb
xor
inc
pop
mov
dec
ret
fstl
std
dec
xchg
insb
jl
add
xchg
pmulhw
in
test
cmp
mov
pop
mov
mov
sbb
mov
pop
jo
push
loop
in
add
iret
mov
aaa
imul
jp
jns
and
icebp
pop
sbb
sbb
xor
lahf
test
pop
fnsave
scas
mov
sbb
sarb
les
cmc
jl
movb
daa
mov
cmp
xchg
adc
inc
jb
mov
addr16
lahf
lea
movsl
das
test
lods
and
push
push
dec
sahf
mov
aad
cmp
inc
inc
stos
jle
sti
daa
in
pusha
or
jno
add
or
mov
fwait
cs
sub
imul
push
jo
dec
xlat
cmp
or
mov
dec
and
lret
xlat
xor
jmp
push
sbb
xor
out
outsl
lret
add
dec
in
push
cmp
jg
loop
cmp
fnstcw
jle
xor
sub
adc
sub
mov
adc
xchg
mov
lea
cmc
loopne
sti
aas
mov
pop
test
xor
adc
mov
pop
bound
cmp
and
cwtl
mov
sbb
inc
rcrb
xchg
sbb
and
or
and
daa
into
notb
xchg
jl
dec
fimuls
fmull
or
pop
mov
push
add
aad
lret
insl
jnp
test
shll
test
repz
shll
jne
ffreep
int3
jl
mov
gs
shlb
mov
cmc
int
scas
sbb
out
xchg
pop
sub
imul
repz
cs
flds
stos
inc
ret
xchg
rcll
cli
mov
jp
clc
popa
push
outsl
hlt
mov
jecxz
inc
out
push
mov
adc
andl
mov
test
es
dec
or
mov
je
sti
mov
leave
push
nop
cli
cmp
or
icebp
push
add
pop
mov
fcomp
sub
cs
adc
ror
jnp
lahf
loope
sbb
out
js
push
outsl
and
les
add
mov
lret
dec
and
adc
fcomps
clc
pop
sub
movsl
shll
mov
in
filds
cmp
repnz
ret
lahf
lcall
xchg
fbld
icebp
ds
popa
xor
ret
outsb
push
mov
jl
into
jno
xchg
mov
inc
adc
imul
pushf
xchg
xchg
jae
jp
test
cmp
lock
xor
and
jp
cmp
mov
or
cmpsb
jnp
scas
lods
test
in
jmp
ret
out
aas
mov
or
test
jnp
push
pop
mov
push
fstpl
divb
xor
and
fiadds
jmp
fisttpl
xchg
dec
insl
jbe
mov
imul
inc
shl
pushf
dec
adc
mov
movsl
out
aam
xlat
push
jmp
movsb
cmpsl
mov
cwtl
test
jl
pop
int3
push
push
dec
jb
add
or
or
int
and
loopne
ljmp
mov
sti
adcb
fidivrs
out
jmp
repnz
adc
outsb
pop
lods
addr16
mov
push
cmp
test
dec
pop
xchg
shll
mov
pop
stos
cltd
addb
ret
and
es
cmpsb
and
lods
sub
es
pop
adc
inc
movsl
xchg
bound
inc
sti
ss
inc
cmp
fs
jmp
pop
cmp
sbb
fsts
jg
gs
or
loopne
mov
xchg
mov
aam
scas
pushf
jno
jne
fistps
mov
int3
ficoml
stc
push
inc
lea
and
mov
xchg
repnz
daa
mov
inc
les
add
push
lret
lea
pop
mov
pop
add
sub
mov
cmp
inc
mov
jb
imul
and
std
jb
lret
dec
orl
pop
jecxz
push
jl
xor
jnp
aad
das
roll
pop
pop
mov
push
into
leave
push
and
inc
xor
icebp
out
in
sbb
pop
loopne
xchg
push
jg
pop
jb
jge
and
dec
mov
cmp
xor
push
or
jno
inc
sub
xor
inc
mov
data16
mov
shll
lcall
push
data16
arpl
jp
shl
lahf
mov
adc
push
push
jae
xchg
sub
jo
lea
jno
mov
lret
roll
xchg
scas
cmc
iret
fbld
mov
jnp
lret
and
push
push
jne
and
mov
notb
stos
adc
rol
adc
loop
ljmp
add
fisubs
jns
outsb
mov
jle
movsb
dec
ss
bound
mov
mov
push
mov
jne
les
aas
cmp
aaa
test
xor
mov
in
cli
lea
cmc
out
sbb
jecxz
outsl
pop
mov
loopne
addr16
inc
and
sbb
dec
loope
inc
or
sbb
gs
mov
sti
adc
lahf
push
push
pop
loope
sub
lret
orl
push
dec
mov
and
daa
cmp
mov
pop
and
pop
add
repz
pop
andl
xchg
add
push
out
and
sbb
rcr
adc
iret
fwait
mulb
or
fldl
repz
or
push
imul
daa
cmp
scas
lods
fxch
icebp
xor
aas
outsl
or
daa
push
into
mov
mov
pop
orb
test
stos
jae
and
push
inc
stc
ret
xor
aam
pmaddwd
lds
mov
dec
sub
xchg
loop
inc
pop
xor
loopne
pop
lods
jge
aaa
inc
outsl
sub
cmp
lods
aad
sti
outsl
push
int
gs
lods
xor
in
addb
adc
cmpsb
fcoms
das
and
mov
imul
pop
mov
pop
mov
or
mov
outsb
mov
push
cmpsb
adc
mov
movsb
or
xchg
movsl
iret
jp
sbb
push
adc
xchg
jne
dec
push
loopne
shrb
jnp
xor
jp
jg
pop
div
mov
rcrl
xchg
pop
aam
dec
rorb
fs
push
add
jmp
and
outsb
in
int
dec
adc
bound
xor
insl
push
out
dec
jno
das
js
push
fisttpll
mov
pop
jns
mov
imul
cmpsb
pop
lods
sub
dec
mov
aaa
dec
push
lods
adc
in
xchg
nop
decl
mov
mov
loopne
int3
add
xchg
fsubs
or
je
out
out
push
cmpsl
cld
mov
shlb
push
mov
mov
inc
int3
or
pop
jns
mov
outsb
xor
jecxz
rcll
adc
or
jle
stos
or
ret
bound
dec
add
lea
in
sti
mov
mov
push
in
add
aas
int
add
in
adc
mov
adc
out
loop
push
dec
aas
imul
sub
sbb
js
adc
xor
divb
ljmp
pushl
aad
pushf
in
call
cmp
mov
lcall
fs
data16
call
mov
jmp
cmp
cltd
xor
xchg
add
nop
inc
repz
sub
pop
mov
cmp
outsb
add
pop
pop
adc
imul
arpl
ficomps
cmc
lods
mov
stos
and
push
ret
scas
mov
mov
sbb
ja
add
test
push
lcall
imul
out
or
or
mov
imul
dec
sub
sub
push
cmp
cmp
rolb
push
mov
adc
inc
movsl
insl
inc
clc
cs
mov
add
jp
test
mov
or
cmpsb
cmpsb
repz
repnz
inc
cmp
inc
stc
stc
aas
imul
scas
dec
add
sub
mov
outsl
push
mov
icebp
mov
xchg
in
sbb
sub
std
neg
inc
out
and
dec
inc
popf
xchg
mov
stos
or
sbb
pushf
pop
js
dec
push
sub
push
popa
in
sti
or
and
push
pop
insb
sub
cmc
xchg
scas
push
hlt
cmp
and
ss
xor
jmp
push
pop
inc
out
stos
jecxz
int3
xor
fisubrs
jno
lods
mov
movsl
int3
stc
out
dec
lods
pop
loopne
notl
push
in
repnz
out
imul
les
pop
pop
mov
and
push
mov
shll
sub
mov
mov
sti
and
ret
lret
mov
cltd
icebp
insl
push
push
dec
pop
xor
movsb
lock
or
pop
pop
aam
adc
adc
push
ficoms
xchg
push
cmp
fsts
dec
cmpsl
addl
lcall
stos
push
stos
insb
popa
sub
and
mov
faddl
push
in
adc
loope
addr16
into
das
and
ds
mov
xor
lret
jns
mov
jmpw
sub
out
mov
xor
adc
cmp
mov
test
cmp
dec
movsb
test
in
push
movsl
mov
scas
cld
mov
inc
jle
cmp
lahf
testl
adc
test
bound
or
or
fidivs
jb
fsubrl
push
or
sub
dec
sub
and
jnp
aaa
push
xor
push
fcomp
mov
outsb
dec
mov
icebp
aad
into
jno
cmp
pop
aas
cmpsl
shlb
xlat
jg
testb
aam
jl
jnp
and
mov
inc
mov
clc
adc
push
popf
dec
pop
inc
ds
test
push
sbb
xor
repz
js
and
lret
adc
scas
pushf
idiv
pop
mov
in
cmp
pop
pop
xchg
mov
popf
add
mov
inc
faddl
xchg
dec
mov
lcall
adc
test
cmp
pop
fidivrl
sub
leave
sahf
lods
xor
and
sar
sub
and
xchg
cmp
mov
pop
ret
ss
add
or
ja
lcall
cmp
jmp
mov
cs
mov
stos
xchg
fs
pop
push
out
pshufw
int
sub
push
xchg
in
les
test
sub
pop
call
jnp
lock
jo
cmp
repz
cmp
out
and
faddl
nop
xlat
push
shrb
ror
and
test
mov
pop
sahf
stos
jp
ficompl
mov
nop
and
jne
mov
xchg
jbe
gs
mov
sarl
mov
test
sub
fiadds
dec
sub
pop
jbe
dec
adc
jecxz
xchg
sub
rcrb
bound
xchg
xchg
mov
aas
imul
push
pop
cld
clc
or
ret
and
cli
or
int
jle
jmp
lods
sahf
mov
adc
ja
sub
scas
repz
inc
iret
imul
inc
xor
sbb
add
ds
inc
push
out
aam
xchg
gs
pop
mov
gs
sub
xchg
push
push
inc
push
js
mov
insb
pop
add
ljmp
push
xor
jbe
testl
xor
xchg
cs
mov
or
push
invd
lods
ja
stos
xchg
inc
mov
mov
dec
xchg
shll
lds
jno
sti
in
in
out
or
and
mov
fistpl
scas
out
sub
int
mov
cli
sbb
out
imul
pop
mov
lret
lock
sahf
gs
cltd
outsb
push
fdivrs
push
cltd
repz
jge
ja
sbb
addr16
cmp
stc
fnop
mov
lock
lret
xchg
xchg
cld
push
jl
loopne
cltd
repnz
shl
mov
imul
and
mov
push
pop
in
sub
jmp
lret
jecxz
sahf
inc
jbe
lods
stos
add
mov
pop
xchg
xor
add
roll
or
sub
arpl
cmp
add
lcall
lahf
call
pop
jle
movsb
in
negl
jno
icebp
dec
aaa
sbb
sub
ljmp
dec
out
or
pop
loope
inc
mov
stc
in
cltd
sbb
cmp
mov
sub
aas
push
mov
aas
jl
insb
in
mov
outsb
fnstenv
sbbl
jne
sub
popf
xor
fiaddl
popa
cmp
loopne
lea
fmull
jnp
fimull
into
lds
mov
xor
fadds
ret
shlb
mov
scas
push
jmp
mov
sbb
xor
andl
sbb
test
jne
cli
dec
das
lcall
lret
lea
repz
popa
call
xchg
adc
hlt
pusha
cmp
outsl
and
repnz
gs
adc
inc
mov
loopne
jnp
mov
pop
mov
out
cltd
bound
sbb
shl
lods
push
fwait
testb
or
lret
xlat
cmp
xchg
cwtl
imul
lds
mov
mov
inc
jne
les
ret
int3
and
dec
insb
scas
or
sbb
jmp
hlt
and
loop
dec
jns
adcl
push
and
add
imul
add
mov
in
pushf
xchg
mov
sbbl
andl
xchg
pop
adc
xor
popa
jae
loop
mov
and
je
inc
idiv
push
jl
push
push
mov
enter
cmp
cli
aad
push
inc
rcrl
mov
repz
pop
je
enter
sahf
push
lret
out
sbb
cmpsl
fcomps
lret
in
lahf
xchg
pop
inc
sub
or
push
out
rorl
or
gs
cs
push
xchg
lods
shll
js
sub
popa
push
cli
add
das
add
insb
stos
mov
in
pop
and
sbb
dec
cmp
popa
sahf
aad
clc
stos
mov
mov
push
cmp
int3
lea
in
inc
xlat
mov
xorl
insl
lea
cld
cld
mov
fadd
jl
push
mov
cmp
mov
ljmp
pop
mov
cmpsb
sarl
dec
sub
cmp
loope
xchg
sti
fildll
dec
push
add
jo
stos
cmc
pop
mov
xchg
pop
fisttps
mov
mov
icebp
faddl
inc
dec
negb
inc
fisttpl
dec
stos
mov
jno
sarl
adc
sbb
adc
pop
sbb
sti
push
ret
out
sub
loope
dec
cmp
jno
sbb
xchg
jb
push
cltd
mul
pop
cli
andl
repz
lods
sahf
lret
insl
sbb
ljmp
js
or
lods
sti
dec
adc
sbb
mov
pop
inc
mov
mov
dec
cld
inc
sub
lret
or
mov
push
mov
je
fs
imul
xor
mov
or
xor
iret
dec
sbb
push
in
mov
lahf
xchg
outsb
sub
jno
ficoml
js
pop
and
icebp
enter
mov
loop
mov
dec
adc
push
mov
hlt
pop
cli
push
ds
sbb
iretw
stc
sub
scas
outsb
lret
call
outsl
lcall
dec
mov
cmp
addl
sbb
pop
insl
loop
adc
fnstenv
jne
mov
cmp
xchg
fmull
out
add
push
xchg
push
xchg
push
iret
sub
mov
and
push
pop
sub
jno
and
inc
les
inc
dec
xor
pusha
inc
movsb
xor
mov
outsl
dec
jmp
or
test
in
xor
arpl
bound
mov
xor
sbb
sub
popf
imul
mov
mov
adc
lea
orl
pusha
sbb
mov
adc
aas
mov
mov
xor
iret
jo
lods
imul
xor
mov
lods
pop
mov
test
mov
mov
jbe
and
or
pushw
adc
ja
stc
inc
fs
nop
lret
push
sbb
nop
sbb
xor
xorl
outsl
rorl
test
pop
pop
cld
pop
movsl
insb
std
jo
and
xchg
sbb
push
jmp
popa
cmp
scas
jg
add
adc
sub
lahf
mov
jns
addr16
rcl
nop
daa
cmp
loop
ss
popa
mov
dec
leave
lods
imul
push
outsb
call
dec
and
pop
xor
nop
ja
cli
and
clc
test
aam
cmp
inc
rcl
or
mov
call
jmp
shll
shlb
push
inc
push
imul
scas
push
push
roll
test
lcall
jb
inc
cwtl
hlt
add
sub
pop
pop
dec
fimuls
in
out
xlat
push
sub
xchg
push
push
loopne
push
rcll
fcmove
cmp
pushf
clc
jl
adc
jb
cmc
stos
sbb
ds
ret
xchg
xchg
sti
ljmp
sub
sbb
das
xlat
pop
mov
cmpsl
int3
cs
pop
loopne
arpl
leave
imull
fidivl
je
subb
mov
iret
add
add
and
push
enter
outsl
lods
xchg
ja
pop
mov
or
daa
adc
jl
std
xchg
mov
testb
xor
iret
push
daa
pop
jno
pop
jp
call
stc
fs
int
dec
xchg
jl
xchg
mov
aaa
mov
jb
adc
cmp
lock
clc
sbb
mov
aaa
xchg
rolb
hlt
ja
fstps
adc
test
and
stos
shlb
pop
add
xor
sbb
cltd
movsb
cmpl
mov
mov
stos
rcll
andb
mov
cld
in
mov
pop
ja
popa
push
lods
shl
and
lock
imul
out
sahf
mov
xor
jo
js
clc
adc
pop
hlt
inc
xor
lds
jne
test
adc
sub
adc
push
xchg
pusha
and
jmp
add
fidivl
pop
es
fnstcw
dec
data16
rcll
lret
inc
or
or
scas
mov
outsl
scas
push
push
cmp
cwtl
push
test
mov
sub
mov
sti
in
pusha
jbe
dec
les
mov
xchg
and
mov
bound
xchg
dec
dec
xchg
mov
adc
ds
in
jo
xchg
out
push
out
jmp
or
or
push
mov
ret
cwtl
dec
arpl
mov
les
lret
add
mov
outsb
imul
mov
mov
rorb
cmp
sub
add
popa
add
xchg
mov
jae
or
adc
and
pop
and
lahf
les
adc
scas
mov
aad
adc
aaa
sbb
xchg
cmpsb
in
scas
sub
pop
je
adc
iret
mov
xchg
sahf
in
push
arpl
pusha
int3
jnp
insb
ret
je
and
pop
cmp
pusha
pushf
xlat
mov
lcall
in
inc
cmp
fsubl
cmp
jl
lds
push
mov
rclb
sahf
push
pop
jbe
out
push
push
in
pop
and
xchg
xlat
jnp
sub
mov
scas
popf
imul
mov
test
xor
and
testb
sbb
cmp
popf
sarl
jecxz
fcom
in
test
mov
sbb
ret
ljmp
inc
mov
scas
les
aaa
xor
adc
cli
lret
in
popf
cwtl
sub
sub
dec
int3
lock
lcall
test
repnz
mov
inc
das
int
xor
std
cmp
sub
enter
pop
aad
mov
aad
loopne
push
pop
faddl
push
adc
push
jno
fldt
mov
pusha
dec
out
adc
adc
xor
add
mov
enter
push
sub
lds
daa
or
inc
mov
push
repnz
out
or
movsb
mov
or
cmpsl
cmc
js
shll
daa
stos
sbb
pop
lock
addl
in
mov
inc
xor
icebp
add
sbb
mov
push
mov
pop
out
sbbb
add
dec
push
mov
cmp
pop
stos
cmp
mov
mov
cmp
outsb
or
arpl
inc
inc
mov
int3
jp
mov
push
inc
push
hlt
jmpw
xchg
push
inc
jl
push
adc
xchg
xchg
or
rol
fiaddl
fs
mov
enter
cmp
je
into
fists
sub
or
movsl
arpl
out
mov
lret
lahf
adc
jns
adcb
mov
pop
lret
idivb
in
add
dec
jecxz
inc
ret
cwtl
sahf
mov
mov
aad
mov
sbb
mull
mov
and
aaa
out
lods
ret
push
and
scas
mov
iret
int3
stos
mov
jmp
fsubl
and
inc
push
stos
flds
sbb
mov
push
in
lret
lods
jmp
imul
adc
push
inc
sahf
imul
mov
mov
add
push
jmp
test
mov
adc
jns
mov
add
ret
and
imul
xchg
lds
mov
filds
aaa
xchg
mov
test
add
dec
pop
movsl
testl
movsl
fstpl
int
dec
jge
clc
mov
sbb
xchg
and
lcall
xorl
push
xor
jbe
ds
mov
in
cmp
mov
jae
les
je
inc
pop
xchg
fcomi
mov
repnz
or
push
sbb
fcomi
or
rorl
pop
les
jae
mov
aas
or
jb
cmp
js
cmp
pmaxsw
cmp
fstps
cld
subl
nop
mov
hlt
shll
or
insb
addr16
dec
cld
daa
xchg
jg
fcomp
jl
out
xchg
in
or
adc
into
push
lock
or
jmp
adc
cwtl
mov
jb
test
leave
push
addr16
sub
dec
pop
scas
add
inc
stc
xchg
flds
jmp
push
mov
repz
mov
popf
arpl
enter
stos
ret
mov
push
cmp
decl
cld
pop
movsl
and
scas
out
push
loop
aam
inc
jge
pop
iret
loop
and
inc
shrl
cmpsb
test
rorl
and
jle
sarl
lock
test
lock
xor
aad
repnz
pop
and
mov
movsl
jmp
insl
push
in
stos
cltd
outsb
in
sahf
mov
jbe
xchg
add
insb
notl
push
mov
scas
aam
adc
div
aas
xor
adc
fldcw
out
xchg
icebp
mov
or
scas
popa
leave
jae
sbb
repz
mov
mov
sub
mov
xor
jb
ret
add
testb
mov
jl
addl
jle
mov
sub
cmp
add
mov
lret
jmp
lret
and
or
xchg
jns
lods
push
adc
mov
mov
jnp
mov
subl
int3
out
clc
cmc
nop
add
xchg
mov
dec
in
inc
out
je
jb
psubusw
cmp
jle
shlb
push
mov
mov
stos
or
push
addr16
mov
shlb
jne
fiadds
pop
jp
jb
xor
jmp
mov
push
push
push
jecxz
mov
push
stos
mov
sub
and
outsb
xor
or
mov
gs
add
out
sahf
or
push
rcl
bound
mov
lret
mov
nop
cwtl
das
cmp
in
adc
xor
pop
sub
jecxz
inc
stos
push
inc
ret
fs
daa
in
jns
mov
ljmp
mov
fists
lods
push
sub
imul
scas
xchg
inc
dec
push
das
rorb
loopne
out
pop
pop
and
push
iret
out
ljmp
add
into
jbe
out
push
sbb
loope
dec
cs
dec
je
pop
lret
push
fmuls
adc
ret
fstpt
push
lahf
jmp
xchg
fxch
pusha
lds
adc
mov
imul
enter
mov
cltd
inc
jbe
jecxz
add
inc
ja
push
dec
xchg
insb
sbb
clc
push
pop
jmp
sub
rclb
push
notl
lods
sub
jns
outsb
imul
imul
or
ja
add
cmpsb
mov
dec
fisubrs
mov
cmp
mov
adc
in
arpl
adc
test
or
jb
push
push
or
scas
add
and
push
lea
cld
sti
cmp
mov
add
fbstp
outsb
sti
inc
scas
and
movsl
xor
and
insl
js
dec
xchg
int
cmp
scas
sbb
pop
xor
lock
push
xor
add
mov
mov
push
inc
dec
adc
inc
mov
push
arpl
cmp
pop
fld1
xchg
ficoms
mov
push
jbe
lods
xchg
mov
mov
daa
in
mov
sbb
adc
mov
shll
mov
jg
loop
mov
sahf
lahf
stc
and
pop
xor
push
test
dec
and
dec
cmp
push
test
xchg
test
cmp
cmp
sub
nop
mov
or
das
pop
addr16
xchg
xchg
pop
fdivrs
add
push
adc
push
inc
imul
inc
arpl
insb
std
mov
sub
movl
cltd
ret
rcrb
inc
pop
adc
mov
sub
mov
jmp
icebp
cwtl
or
je
data16
ffreep
push
add
mov
test
adc
add
inc
mov
cld
cli
pusha
sub
dec
clc
push
pop
fucomi
sub
push
or
push
push
ljmp
scas
xchg
sbb
jge
add
jg
xchg
sbb
mov
fistps
push
popa
cmp
outsl
cmpsb
sub
jbe
jae
mov
shl
cld
lods
push
ds
mov
movsl
push
dec
insb
push
aas
repz
mov
in
push
dec
mov
push
stos
sub
divb
adc
data16
sbb
push
push
movsl
or
popa
fistps
cmp
mov
in
or
pop
lcall
adc
ffreep
rorl
cltd
sub
sbb
icebp
sti
xor
jne
gs
or
fisubrs
popa
adc
xor
mov
cwtl
jns
mov
inc
scas
push
scas
ljmp
adc
aam
inc
insb
pop
sti
cmc
pop
out
xor
xchg
in
sbb
xor
ds
or
mov
nop
bound
outsb
pop
stos
into
mov
out
xor
mov
dec
enter
aam
cltd
mov
push
call
pop
mov
lods
mov
mov
sbb
sbb
jecxz
fdiv
in
cmpsl
dec
sbb
ja
ret
daa
call
test
insl
sub
jb
or
dec
icebp
imul
push
jno
xor
inc
lret
jmp
and
sbb
insb
jnp
or
jl
push
cltd
inc
divl
sbb
add
xchg
rorl
arpl
or
mov
sbb
push
repnz
std
loop
cmp
mov
into
mov
sub
fnstcw
lcall
insb
gs
and
xchg
mov
lock
test
test
subl
xor
pop
cmc
test
pop
push
cmp
aas
xlat
mov
xchg
rcrl
jle
xchg
pop
cmp
push
fcos
xor
sbb
and
jno
xchg
add
cwtl
push
lret
fldt
dec
inc
movsl
sub
stos
fdivp
ret
sbb
adc
xor
pop
pop
add
bound
cmc
mov
mov
mov
adc
push
jmp
xor
das
mov
xor
and
iret
push
fwait
xor
xor
js
mov
or
inc
inc
sbb
mov
ret
scas
pop
dec
mov
rol
and
and
and
mov
push
mov
rcrl
inc
cmpb
add
stc
out
jbe
inc
and
jbe
pushl
jecxz
inc
aaa
cmp
jne
jb
or
stc
push
lods
jne
inc
cmp
dec
jg
mov
xchg
sbb
loope
in
sub
mov
inc
lret
rclb
sbb
jno
jns
fldl
aad
rcll
xchg
adc
push
sbb
mov
fbstp
jno
fldl
add
in
popf
sarl
push
xchg
movsb
add
lret
sub
cmp
xor
cmp
sub
hlt
jmp
pop
pop
sub
sbb
adcb
popa
dec
lcall
and
add
add
pusha
lret
mov
mov
into
lcall
and
shll
cmp
lea
sbbb
jge
pop
cmc
fwait
divps
inc
test
pop
mov
xchg
jb
test
push
mov
pop
pop
lods
mov
in
lods
shlb
addr16
mov
arpl
aaa
jg
jae
xchg
ret
ror
cmc
mov
rolb
xchg
out
jg
inc
jge
sar
sti
imul
xchg
lds
sub
or
lea
dec
stos
in
cli
push
mov
mov
test
mov
push
sub
add
cmpsl
inc
stos
ret
subl
mov
aas
pop
fnsave
mov
arpl
pop
lcall
imul
aas
jns
lret
inc
aaa
cwtl
test
or
cmp
mov
push
test
inc
ss
xchg
inc
mov
insl
fadds
cmp
lods
mov
mov
jl
push
stc
xlat
mov
inc
cmp
shrb
fs
cmpsb
inc
push
cmp
sbb
int
cmpsl
mov
dec
test
xchg
cmp
daa
ret
std
and
movsl
loope
mov
cmp
or
inc
loope
and
data16
clc
test
fadds
std
push
lock
cmp
adc
sarl
gs
mov
ret
pushf
outsb
sbbb
outsb
xor
aas
push
and
dec
popf
scas
xor
xlat
iret
pop
cmp
or
mov
add
mov
mov
fcoms
idivl
stos
out
imul
mov
or
or
mov
sub
js
mov
test
pop
xchg
fistpll
aas
lahf
adc
lea
sub
andl
in
push
pop
inc
inc
mov
push
icebp
dec
insl
mov
mov
push
sub
and
lret
adc
cld
push
cwtl
daa
and
mov
sahf
inc
inc
loopne
fisubrs
mov
xchg
pushf
sub
pop
call
or
mov
xor
push
test
je
imul
jecxz
push
dec
sbb
les
or
lret
xchg
xlat
in
push
loope
mov
add
shl
jo
mov
mov
lds
jno
pop
rcrb
mov
or
xor
xor
scas
cmp
cmp
jmp
jecxz
scas
pop
xchg
mov
jnp
jle
pop
ror
add
pop
jnp
xor
pop
call
loopne
cmp
adc
int
push
int
ret
sbb
pop
js
call
dec
and
ljmp
push
jnp
xchg
jmp
mov
or
jns
bswap
mov
and
gs
dec
pop
test
inc
iret
xchg
arpl
por
rolb
ret
add
mov
inc
jne
test
pop
add
imul
fcoms
aaa
aam
mov
and
sub
stc
xchg
test
push
pop
or
lds
out
out
sbb
sti
or
and
lahf
call
mov
cmp
jl
hlt
rep
dec
adc
push
sbb
xchg
sbb
dec
adc
xchg
lods
movsl
rclb
clc
jns
push
test
sti
popf
xchg
mul
out
pop
sbb
adc
lret
inc
cmpsl
push
pop
add
rol
insl
add
fcoml
sub
jne
mov
jecxz
icebp
das
insl
lret
lods
mov
rcrb
scas
in
xlat
daa
inc
in
out
lods
xor
in
push
cli
decb
push
pop
mov
mov
and
out
pusha
or
lahf
mov
aam
data16
mov
out
mov
ret
sub
jb
clc
nop
imul
or
data16
dec
cmp
mov
mov
pop
cli
icebp
pop
xchg
cltd
push
cmp
mov
out
adc
inc
icebp
fldl
mov
mov
mov
inc
xchg
fimull
out
xchg
lock
mov
mov
mov
stos
pop
call
popf
sub
fildll
mov
and
push
mov
out
inc
sarl
call
shr
xchg
in
sarl
add
cmp
outsb
out
fdivrl
xor
movsl
es
out
mov
adc
jae
adc
jb
sub
jg
test
call
sbb
push
test
daa
arpl
mov
xor
clc
dec
dec
jae
ja
xchg
mov
mov
mov
or
es
ljmp
divl
cmp
push
insb
add
rolb
mov
sbb
loop
push
jne
cmp
adc
dec
push
arpl
push
push
mov
push
add
jg
mov
push
stc
sub
cmc
dec
mov
cmp
fsubrl
mov
sbb
loope
js
sub
mov
push
std
inc
or
mov
fs
sub
orb
je
rolb
or
mull
lds
test
js
ljmp
ret
ret
mov
outsb
iret
cmp
test
scas
push
add
sub
jmp
fidivl
icebp
fmul
inc
mov
movsb
fwait
mov
rclb
xchg
nop
jo
jnp
cmpw
or
mov
add
add
pop
inc
es
cmp
js
call
mov
dec
sub
inc
add
iret
aas
mov
pop
in
inc
adc
lahf
and
in
outsb
outsl
xchg
imul
jno
xchg
or
rcll
fcompl
enter
push
xchg
lods
mov
jne
mov
icebp
pop
jno
or
jno
cmp
ret
cwtl
jp
rcll
push
and
movsb
dec
or
incb
fnstcw
xchg
cmp
xchg
adc
aam
jl
icebp
loop
popa
std
movsl
push
mov
push
ficoms
fldenv
jbe
jg
lret
sbb
scas
mov
adc
or
aaa
loopne
pop
and
jmp
push
call
addr16
add
xlat
adc
pop
jmp
pop
mov
imulb
xor
test
pushf
mov
dec
dec
adc
sbb
shlb
sub
pop
xor
and
jl
mov
in
dec
bound
rcr
mov
push
jnp
xor
inc
cmpsb
ret
push
ficompl
test
mov
stos
add
and
sbb
mov
dec
out
mov
mov
dec
push
mov
xor
xchg
adc
and
leave
add
aas
jo
fbld
insb
loop
xchg
or
adc
insb
add
jo
cmp
mov
inc
push
cs
xlat
inc
mov
shl
dec
in
sub
mov
push
jmp
dec
andl
jmp
push
cmp
dec
mov
fcmovnbe
cld
mov
mov
pop
mov
dec
imul
sbb
push
xor
push
addr16
hlt
clc
or
in
aad
jo
pop
lret
in
push
int3
lea
lods
xorl
fdivs
sti
mov
out
inc
mov
adc
push
fists
loope
out
fs
and
add
xor
dec
data16
stos
cmp
inc
xor
and
fidivs
sub
xor
and
sub
jl
dec
jns
dec
pop
jne
xchg
sahf
adc
jno
push
adc
addl
lods
les
mov
pop
push
add
dec
in
enter
daa
call
test
jmp
pop
stos
mov
test
mov
inc
sbb
mov
fs
sbb
sub
xor
adc
mov
xchg
pop
mov
rcll
sbb
pop
jne
fldcw
mov
dec
xchg
add
pop
bound
xchg
mov
push
subb
xchg
sbb
jnp
lea
cmp
jg
xor
xor
loop
repnz
add
ljmp
std
mov
in
in
pop
jg
cltd
push
xor
push
loop
sub
sbb
out
lods
add
or
stc
popf
int3
xchg
inc
dec
jne
call
popa
das
shlb
dec
pop
cmp
cmpsb
sbb
cmp
lret
cmpsl
out
push
rorl
mov
cmp
aam
pop
mov
fs
sbb
insb
addl
imul
jnp
fwait
loope
test
add
sahf
sti
rcl
addr16
repz
adc
push
fiaddl
cs
push
in
mov
bound
cld
test
lock
push
popa
xchg
mov
mov
jb
lods
xlat
push
mov
incl
add
test
test
xor
push
push
or
inc
adc
mov
sbb
push
dec
mov
mov
ror
push
addb
fwait
mov
rolb
cmp
inc
movsl
sbb
cwtl
jbe,pt
or
jb
sub
sbb
je
je
in
xor
push
fcoms
std
imul
mov
inc
jle
add
call
daa
aad
js
push
stc
mov
mov
das
pop
mov
inc
sarl
stos
mov
mov
jbe
in
in
xchg
cmpsb
mov
cmpsb
gs
sti
inc
cmp
mov
jbe,pn
add
cmp
mull
gs
outsb
xchg
pop
sbb
sub
mov
mov
outsl
xor
pop
pushf
sahf
dec
in
mov
inc
sbb
sbb
xorb
cs
daa
cld
push
or
jnp
push
ret
in
add
and
xchg
sub
jne
scas
ficoms
lret
or
rolb
cwtl
aas
cltd
xor
subl
pop
stos
dec
cmp
pop
cmpb
or
and
repz
sub
stos
testb
ffree
arpl
outsl
fisttps
mov
cmp
out
push
sub
dec
sub
ret
sti
jp
push
gs
sbb
testb
xor
pop
push
xchg
pop
jmp
scas
movsl
test
sbb
xor
negb
mov
sub
jne
sbb
daa
loope
jl
cs
inc
or
push
inc
mov
ds
popf
xchg
in
cmp
and
push
add
sti
ljmp
sahf
mov
loopne
repz
insl
add
push
jno
or
jge
or
orl
sub
stos
dec
jmp
inc
lock
jp
push
dec
loope
ret
aaa
sbb
mov
pop
adc
xchg
arpl
xchg
cli
out
in
sti
sti
push
out
mov
sub
mov
jnp
push
mov
rorl
push
mov
into
mov
xchg
jmp
movsb
pop
cmp
in
ret
xor
pop
and
mov
push
or
xchg
adc
jp
mov
in
pop
enter
sahf
sub
pop
jno
cmpsb
iret
push
movsb
pop
js
pop
aam
mov
inc
xchg
sahf
rcr
stc
jne
orb
imul
xchg
icebp
mov
test
in
vmptrld
ret
scas
test
fwait
jo
mov
mov
xlat
iret
mov
lret
dec
adc
dec
xchg
inc
mov
movsb
fstpt
xlat
jno
fisubs
jmp
jnp
xchg
adc
jo
pop
cmp
xor
int
aad
fimuls
pop
test
inc
pop
call
mov
push
cmpl
sti
mov
int3
popf
and
insl
fsubs
test
outsb
cmp
lds
imul
jnp
mov
add
call
add
loopne
int3
pop
mov
cltd
push
subb
push
adc
mov
mov
cmp
pop
das
mov
stc
inc
add
dec
mulb
gs
scas
jns
sub
push
addr16
mov
cmp
cltd
or
jo
fisubrl
lds
jge
sahf
in
dec
mov
mov
fisttpl
pop
jmp
outsb
movsl
lds
movntps
mov
das
push
jns
aaa
jo
inc
rolb
inc
lea
mov
in
mov
fwait
push
add
jg
out
xor
cmpsb
xor
jnp
sub
lahf
mov
inc
cmpb
inc
mov
test
arpl
xchg
pop
xchg
xchg
inc
mov
inc
mulb
cmovl
test
jmp
add
xor
jnp
sbb
mov
gs
mov
sbb
fisttpll
cmp
dec
out
hlt
pop
and
fidivrl
and
js
out
pop
mov
sbb
xchg
cmpsb
outsb
mov
fisttps
stos
leave
jbe
jecxz
je
add
mov
dec
xchg
cs
jb
scas
add
jle
mov
cld
xchg
clc
cmp
adc
insl
data16
adcl
lret
popa
jno
cmpb
xor
inc
pop
mov
push
sbb
xchg
mov
push
xor
xchg
mov
sub
push
ja
iret
dec
or
nop
sbb
ret
pop
jl
jmp
leave
xchg
sti
std
fwait
iret
push
xchg
xchg
enter
and
jmp
push
adc
popa
pop
outsl
jbe
loope
pop
leave
add
lods
mov
cmpsb
or
pop
addr16
push
jp
inc
cmc
sub
insb
in
or
push
std
repz
test
aad
mov
outsb
mov
addr16
jb
sub
cmc
leave
stos
imul
les
bound
lods
push
inc
fcmove
pop
repnz
in
inc
and
ficoms
sbbb
pop
in
mov
push
aam
or
stos
iret
sbb
mov
mov
popa
pop
sbb
sub
push
xchg
sub
jns
dec
in
push
iret
sub
int3
int3
mov
dec
arpl
aam
jo
into
enter
subb
xchg
lret
xchg
into
adc
mov
loop
add
das
jle
pop
loopne
cmp
fnstenv
aam
in
or
cmp
mov
mov
and
jg
mov
rcrl
xchg
imul
ret
fldl
inc
movzbl
jb
inc
mov
clc
popf
xchg
insb
or
push
sbb
fdivrl
pop
test
into
fsubrl
jmp
push
sub
pop
adc
outsb
inc
or
jle
pop
push
dec
loop
stos
hlt
lahf
je
xorl
rcll
jge
movsb
and
mov
bound
push
outsb
add
jb
int3
sarl
in
movsl
push
hlt
cmp
mov
pop
out
pop
test
jmp
sub
popf
out
mov
sahf
lcall
popf
scas
xor
inc
or
fisttpll
and
add
cmp
lcall
les
inc
test
sbb
mov
pop
dec
shl
bound
add
fwait
out
outsl
cmc
pop
or
scas
outsl
xchg
adc
xor
pop
adc
mov
loopne
testb
jno
outsb
xchg
pop
sahf
ljmp
in
lret
out
js
ss
xlat
pop
jb
scas
sbb
dec
les
and
fidivrs
dec
push
cmpsl
sub
mov
test
lahf
inc
sub
lahf
jne
outsl
mov
adcl
mov
inc
lahf
ds
fsub
cmp
nop
daa
push
repnz
adc
mov
test
pop
pop
ror
pushf
movsb
pusha
sti
jp
pop
ret
subb
stos
popa
test
add
or
push
test
xchg
xchg
inc
pusha
test
daa
iret
jp
sub
arpl
cmp
mov
add
inc
cmp
shlb
push
rorb
mov
test
push
inc
push
jl
imul
scas
lea
jbe
aaa
pop
push
jbe
sbb
mov
inc
dec
sub
jne
xchg
add
cmp
rcll
rcl
fwait
xor
dec
or
scas
push
xor
dec
jp
inc
fidivrl
lahf
lds
rorb
popa
xor
jb
cld
jecxz
adc
pushf
aaa
or
push
dec
mov
cld
and
sbb
sub
outsb
sbb
adc
dec
push
fnstsw
scas
sub
fimull
fsts
sbb
cmp
mov
xchg
sub
xchg
fs
cwtl
sqrtps
cld
sub
dec
jecxz
ret
rorb
xchg
adc
shr
cltd
test
test
pop
fyl2x
mov
push
mov
inc
push
nop
and
push
inc
test
sbb
enter
sub
sarl
add
jle
ret
dec
leave
fbld
into
popa
lret
test
inc
push
or
addr16
adc
rorl
mov
jb
inc
xor
adc
pop
xor
cmp
test
insl
inc
cmp
push
push
fstps
shrl
push
jo
cld
sbb
mov
mov
test
ret
adc
pushf
add
cwtl
cmpsb
stos
add
pusha
jnp
push
cmpl
fimuls
pop
scas
jg
rcrb
cld
sahf
out
and
xor
push
push
push
push
mov
cmp
xor
fnsave
shlb
inc
iret
popf
mov
dec
jae
push
cmp
iret
inc
testl
orl
loop
les
pop
dec
jae
fstpl
xor
out
test
movsl
icebp
jmp
and
int
xor
out
push
push
jp
rcrl
xor
xor
lcall
push
inc
cmp
inc
outsb
out
decb
xchg
test
xchg
mov
iret
leavew
mov
inc
mov
xchg
pop
sub
ja
outsb
pmaxsw
cmp
inc
test
stc
adc
es
data16
jnp
cld
mov
mov
inc
inc
fs
inc
xlat
popa
das
mov
adc
movsl
mov
nop
dec
push
xchg
xchg
call
adc
xchg
dec
push
and
iret
fs
int3
int3
jno
sub
pop
outsb
clc
shrl
jb
pop
out
mov
mov
orl
jno
sub
lcall
adc
or
cmpsl
lret
add
rcll
loope
sbb
dec
mov
mov
jb
stc
repnz
jb
jb
out
mov
pushf
jae
fidivl
mov
xor
push
mov
addl
mov
fisttpl
mov
mov
jmp
mov
int3
cmp
cli
xlat
xor
jno
repnz
inc
xor
mov
stos
aam
call
push
xorb
push
movsl
pop
das
jg
daa
dec
out
movsl
xchg
mov
repz
mov
dec
fsubrp
push
shrb
jl
and
cmp
jg
ljmp
lea
jnp
pop
or
cmc
cmpsl
sub
xor
inc
xchg
mov
jge
repz
icebp
lahf
sbb
mov
xor
std
aas
mov
imul
xchg
loopne
or
dec
scas
repz
hlt
mov
cld
nop
adc
or
xchg
or
into
xchg
gs
sbb
arpl
xchg
and
test
and
pop
lods
sub
push
lcall
mov
lds
jns
fldt
mov
xor
rcrb
push
arpl
jnp
sub
jbe
dec
aas
mov
loope
inc
lea
and
adc
ds
or
mov
push
repnz
lret
sbb
stos
pop
mov
shll
mov
mov
clc
aas
sbb
imul
imul
sub
leave
sub
into
adc
xchg
sub
jecxz
mov
mov
pushf
jge
icebp
sbb
dec
clc
and
bound
push
cmp
insb
dec
jns
dec
iret
lods
sub
into
fsubl
test
and
sbb
and
mov
mov
out
in
sti
adc
mov
jp
and
jbe
xchg
xchg
fwait
mov
stos
data16
jl
popf
imul
jne
cmp
cmp
mov
outsb
or
lret
inc
sub
mov
and
xchg
push
sbb
inc
dec
rorb
insl
push
mov
lods
clc
xchg
testb
repz
in
mov
xor
push
push
ja
jmp
sbb
addr16
lea
jno
inc
mov
repnz
push
cmp
or
push
mov
ljmp
push
dec
fsubrl
cmpsl
cli
xchg
lock
push
add
add
xchg
adc
lret
mov
dec
xlat
cmc
mov
stos
aam
enter
in
dec
and
and
pop
mov
mov
mov
ficoms
idivb
adc
jl
rcrl
test
and
sbb
mov
mov
xor
xor
cmp
fwait
jno
adc
in
jp
inc
out
and
aas
fidivrs
in
mov
push
mov
jp
push
leave
jg
imul
mov
mov
jge
pop
pop
adc
push
jae
jle
sub
into
lret
cmp
xchg
cmp
imul
fucomp
xorl
mov
inc
fistps
faddp
mov
xchg
loopne
dec
stos
sahf
jl
dec
xor
je
and
cmp
pop
rorl
pushf
sbb
js
or
imul
jb
sbb
clc
ljmp
mov
sti
rcrl
ret
or
jl
in
cld
mov
pop
sub
dec
xor
mov
or
push
mov
je
push
inc
jns
ds
xchg
mov
mov
pushl
cmp
stos
mov
inc
push
xchg
ret
daa
lret
rcll
addl
mov
pusha
in
ret
adc
cltd
icebp
gs
lahf
imul
insl
aad
enter
mov
les
lret
adc
xchg
push
fwait
ret
stos
je
dec
loope
mov
mov
dec
test
subl
int
insb
pusha
aam
out
mov
or
pusha
sbbb
mov
rclb
adc
outsl
ficomps
cmp
fxch
pop
outsb
js
cs
std
mov
cmc
filds
push
and
ret
scas
ror
push
mov
fstl
jg
add
push
jnp
fisttpl
push
ljmp
xchg
cwtl
int3
inc
popf
xchg
inc
inc
inc
pop
imul
outsl
jo
pop
jmp
cltd
jecxz
js
dec
cmpb
adc
mov
push
in
ss
or
and
mov
inc
fimull
mov
add
cmp
out
sub
aam
cltd
mov
fsts
ffreep
sub
mov
out
xor
xorl
dec
addr16
addr16
xor
enter
jo
push
mov
xchg
push
lea
sub
cmp
pop
mov
mov
push
out
pop
and
mov
ja
vphadduwq
divb
mov
xor
pop
pop
pop
pop
lods
subb
and
mov
inc
xchg
movsl
lods
xchg
adc
out
inc
shll
inc
jne
pusha
xchg
in
and
je
movsb
mov
jae
xor
lret
inc
ljmp
adc
mov
mov
jge
push
jp
scas
jb
cmp
push
xorl
xchg
xchg
cwtl
testl
filds
sub
cmpsl
stos
imul
aad
sbb
sbb
and
fsubrl
add
lret
push
aam
adc
clc
js
icebp
adc
add
inc
ss
test
push
insl
lcall
negb
aas
inc
xor
xchg
imul
xor
mov
clc
push
sbb
movsb
cmp
je
sub
cmpsl
gs
cmpsl
sub
xor
aam
dec
push
js
and
mov
push
adc
cli
pop
pop
mov
or
or
xor
imul
sbb
fldl
fdivr
inc
test
xor
dec
aaa
add
adc
clc
sbb
push
scas
fidivl
sub
push
add
mov
fstpl
xor
dec
rcl
lcall
pushf
sbb
cmpl
add
xchg
loop
fsubrs
add
in
mov
mov
sbb
out
popf
insb
dec
add
push
adc
pop
cmp
sub
cli
fldt
test
loopne
xchg
xchg
pusha
sbb
lret
cld
mov
add
adc
in
adc
jle
hlt
movsl
imul
push
iret
sti
inc
repz
mov
jno
pop
inc
xchg
in
mov
out
test
cmpl
rcr
adc
lcall
xchg
aad
cltd
js
out
std
add
mov
push
loopne
cmc
mov
or
aaa
or
xchg
jle
push
cmp
into
fdiv
retw
pop
cmp
sahf
push
pop
test
jle
mov
or
jmp
jl
or
xchg
pusha
add
pop
or
adc
fisubs
pop
popa
fs
mov
xor
aam
test
mov
sbbb
xor
dec
pop
sbb
cmp
or
and
inc
ret
xor
xchg
dec
jno
iret
ret
push
jle
and
xor
push
adc
call
icebp
pop
rolb
inc
lcall
adc
shrb
imul
mov
add
sub
adc
andb
sub
mov
repnz
scas
rolb
stos
adc
sbb
ljmp
push
shrb
xchg
in
mov
jo
aad
stos
or
and
push
outsl
mov
ficoml
movsb
cmp
sub
les
jb
rcrb
xor
into
je
xchg
inc
cmp
adc
dec
sbb
push
pop
repnz
mov
mov
cmpsb
mov
and
jg
mov
pop
mov
adc
pop
pusha
bound
xlat
jae
xchg
imul
daa
sub
iret
add
movsl
cltd
imul
jecxz
je
std
ja
mov
inc
cmp
popa
ljmp
xchg
cmp
lods
loopne
sahf
loope
jmp
je
nop
dec
inc
xchg
popa
fsubrl
push
out
aas
dec
insb
adcb
push
iret
dec
mov
sbb
inc
mov
mov
stos
shl
sub
mov
and
insl
sub
add
dec
adc
or
jnp
stc
mov
push
pop
or
lret
inc
movsb
pop
cmp
outsl
inc
xchg
mov
sub
mov
sbb
mov
les
into
xchg
pop
dec
sub
mov
pop
push
insb
stos
mov
sbb
add
cmp
push
jle
push
enter
and
push
mov
add
mov
stos
adc
lds
aam
inc
inc
xchg
aas
lret
je
cmp
inc
add
into
imul
push
mulb
mov
fmuls
mov
hlt
shll
std
sub
arpl
scas
movsl
ljmp
xchg
loope
jae
cmpsb
cmp
jo
mov
and
lret
stos
mov
xchg
inc
out
adc
aad
mov
out
or
mov
add
int3
test
dec
pop
xor
cmp
fistl
mov
rcrl
sahf
sub
movl
sbb
inc
xor
or
imul
jge
in
inc
cmp
in
lods
add
inc
in
std
pop
mov
rol
xor
es
pop
xorb
xor
dec
push
in
in
push
scas
mov
leave
jg
inc
jno
push
or
lods
iret
rep
stos
mov
sbb
rep
jno
jns
or
push
push
cmpsb
nop
es
shlb
aad
mov
icebp
pop
out
jb
aaa
sarl
sti
mov
add
mov
data16
cmp
shlb
push
adc
jecxz
inc
sub
mov
mov
add
push
mov
adc
cmc
and
insl
movsl
lods
xor
insb
adc
mov
cmp
sbb
leave
mov
cmp
pop
sti
xchg
jne
and
dec
adc
test
xor
icebp
jecxz
or
jecxz
adc
shll
sarb
in
dec
adc
inc
sub
mov
xchg
sahf
sbb
mov
cmp
negl
mov
es
addr16
icebp
in
adc
mov
incl
ds
loopne
js
mov
xchg
daa
sbb
std
lds
sbb
and
std
popf
ret
add
mov
hlt
notl
jo
adc
add
lcall
jge
xor
mov
mov
lcall
dec
dec
lock
jnp
iret
mov
sbb
adc
movsb
xor
stos
sbb
adc
fwait
sbbb
and
lcall
adc
or
sti
jecxz
fcmovne
js
jl
pop
lahf
xchg
pop
xlat
lock
inc
mov
loope
imul
dec
loopne
negl
push
or
aaa
cwtl
mov
aad
or
mov
std
pop
jecxz
sbb
loope
out
mov
shl
lahf
scas
pusha
gs
popf
and
lret
and
clc
and
jge
inc
arpl
jno
mov
dec
jns
add
test
xor
add
pop
negl
mov
adc
inc
jno
push
mov
loop
mov
inc
dec
sub
inc
adc
jbe
add
or
xchg
inc
shl
mov
mov
pop
mov
add
cmpsl
or
pop
push
lds
lcall
push
dec
jp
daa
cmp
cli
mov
jns
into
and
andb
int3
xorb
push
xchg
pop
mov
adc
rclb
sti
call
scas
movsb
xor
dec
dec
xor
stos
dec
repz
add
add
fnstcw
sub
add
sub
jecxz
stc
inc
loopne
cmp
pop
dec
inc
or
mov
shrb
rorl
lea
rclb
mov
sbb
jo
mov
cmpsl
push
push
push
mov
pop
and
inc
pop
mov
repnz
dec
jmp
bound
bound
out
ret
fcmove
mov
xchg
stos
call
sahf
jecxz
mov
cmp
mov
push
add
movlps
in
inc
xchg
jg
out
in
cmpsb
xor
jne
xor
pop
or
out
or
mov
mov
aad
mov
mov
cld
jb
inc
or
push
jo
fmuls
fstpt
lret
data16
xchg
fidivrl
inc
jo
out
imul
jb
adc
popf
or
gs
ja
cmp
jecxz
inc
nop
cmp
les
push
lea
xor
jns
fincstp
inc
lcall
jne
push
dec
nop
gs
clc
ss
mov
loop
sti
daa
movsl
std
popa
cld
or
shll
adc
dec
orl
cmp
or
xchg
inc
push
inc
and
and
std
aaa
scas
mov
call
in
in
lahf
ljmp
xor
xor
loopne
ss
add
sti
xor
xor
imul
push
pop
sbb
out
in
mov
orl
lret
push
dec
call
pusha
mov
mov
shl
pusha
gs
mov
mov
push
mov
pusha
mov
jge
mov
add
adc
test
push
dec
shlb
adc
push
sbb
lret
xor
xchg
inc
lds
pop
ficompl
js
ss
adc
lods
mov
adc
mov
push
mov
dec
jae
in
xchg
lods
push
fstpl
pusha
jge
fsubs
cli
adc
jns
mov
pop
pusha
dec
adc
lret
jae
mov
pop
or
and
mov
daa
cmpsl
mov
fidivrl
mov
mov
imulb
mov
mov
sti
pop
mov
jns
ljmp
sbb
pushf
ja,pn
jg
or
imul
loope
cwtl
adc
pop
test
ret
mov
jl
xchg
mov
vpunpckhdq
insl
xchg
jae
jmp
push
xlat
jb
jl
mov
xchg
jae
mov
xchg
cld
stos
sbb
leave
mov
mov
fmull
shl
adc
push
or
add
xor
fcmovb
jno
das
lds
roll
jp
test
sub
test
cmp
pop
xchg
push
xor
mov
ds
push
sbb
ror
pop
inc
cmp
cmp
fs
xchg
ljmp
or
addr16
and
dec
xlat
sbb
push
jp
cmp
xchg
mov
nop
cltd
push
shlb
sbb
mov
or
cmp
cmp
dec
jne
cmp
mov
stos
pop
sarb
sbb
stos
mov
inc
test
notb
ljmp
pusha
xchg
adc
fldl
shll
xchg
testb
push
dec
and
rcrl
and
imul
pusha
cmp
jl
or
rolb
incl
mov
adcl
insb
push
inc
inc
adc
mov
insl
lret
fnsave
inc
rolb
notb
cs
lods
fldt
or
mov
nop
or
hlt
and
lahf
int3
or
scas
mov
frstor
fwait
aas
push
lock
ds
dec
movsl
test
push
rcrb
xor
lea
cmp
iret
je
cmpsb
aas
mov
or
daa
pop
xchg
push
xchg
int
scas
cmp
adc
sti
fisubrl
mov
pusha
call
mov
sub
inc
sbb
inc
adc
outsb
xchg
aam
inc
push
nop
fisubrs
push
mov
xor
in
paddusw
jecxz
inc
pop
inc
pop
aas
scas
scas
push
or
and
cmpsl
xchg
xchg
add
cli
jb
mov
cld
xchg
gs
test
lret
jl
not
addr16
or
daa
push
loop
sbb
mov
xor
push
or
inc
cmc
add
push
mov
fnstsw
cmp
test
add
shlb
xchg
sahf
in
sbb
inc
mov
scas
scas
mov
rolb
fists
mov
jl
aad
daa
stc
pushf
or
jle,pt
jmp
xlat
lret
cmp
push
lret
call
xchg
xor
pop
repnz
push
rol
inc
nop
pop
test
sahf
jns
or
cmpsb
add
stc
stc
ds
mov
push
pop
sbb
test
lds
add
and
mov
cmp
cvtps2pd
and
out
scas
inc
mov
es
data16
dec
lret
jnp
out
fcmovnbe
insb
adc
jle
and
das
adc
add
popa
sbb
into
subl
dec
inc
mov
cmp
insb
rcrb
lods
lock
xor
nop
sbb
in
mov
cmp
mov
push
rorl
sbb
imull
pop
movsb
push
or
pop
jp
mov
mov
fisubrl
sbb
repz
fdivs
pop
test
adc
mov
aas
cmp
pop
push
arpl
xchg
adc
mov
push
andl
aas
lock
cmp
nop
cmc
mov
adc
ret
std
xchg
push
loope
lds
xchg
sbb
cmp
or
fiaddl
aad
xor
push
das
ss
repz
in
das
pushf
sarl
jns
xchg
sub
cmpsl
in
icebp
repz
adc
mov
jl
push
jb
push
popa
fwait
rorb
insl
adc
cmp
in
enter
mov
lock
xchg
jecxz
mov
stc
out
adc
inc
mov
fwait
mov
nop
push
sub
popf
push
lret
add
jae
dec
lock
mov
ljmp
mov
xor
enter
xor
mov
add
popf
mov
gs
cmp
push
fistpll
push
sub
cltd
cwtl
and
int3
repz
shrb
xchg
roll
add
pop
mov
addb
mov
push
je
imul
jns
pushl
and
test
or
icebp
inc
int
aas
movsb
insb
jl
std
mov
repz
dec
dec
inc
jle
lret
xchg
cmp
jae
xor
dec
inc
and
cmp
jbe
cmp
xchg
fldenv
xchg
in
and
rcrb
mov
push
movsl
xor
leave
pop
into
sbb
add
fcomp
mov
cwtl
mov
mov
enter
xor
insb
push
sub
push
clc
fcmovnu
jge
test
orl
xor
icebp
pushl
push
or
inc
push
fiaddl
call
xor
jno
cmp
cmp
fwait
add
and
incb
push
fbstp
pusha
pop
inc
inc
emms
and
loopne
lret
cwtl
cmp
sub
and
mov
in
push
out
xor
int
add
in
jge
mull
lcall
scas
je
xor
pusha
shlb
fists
jbe
mov
fnstenv
pop
mov
hlt
ret
mov
xor
sub
jecxz
sub
jb
sbb
sub
mov
mov
cmpsl
pusha
mov
iret
dec
inc
shrl
push
shrl
addr16
and
movl
push
jge
enter
in
xor
xor
lods
in
push
test
shl
subb
mov
testb
fs
aas
xchg
xor
pop
aas
int
inc
in
testb
mov
sub
daa
shl
stos
xor
or
xchg
dec
inc
xchg
std
sub
mov
inc
push
stc
loop
xchg
fildl
scas
orb
mov
sbb
add
sbb
mov
in
sub
pop
push
ret
pop
fldenv
pusha
xchg
xchg
xor
stc
jge
enter
addl
test
call
dec
pop
sbb
nop
repnz
dec
data16
mov
ds
jno
insb
lods
aas
enter
data16
bound
pop
adc
xlat
shrb
incb
int
sbb
jns
fistps
xlat
aaa
dec
aam
ljmp
adc
cli
dec
push
add
sub
mov
and
or
inc
jmp
icebp
loop
sub
sub
jmp
adc
bound
xchg
inc
xlat
lock
andl
push
or
aad
popf
inc
mov
add
std
fisubl
inc
cmpsb
pop
imul
mov
int3
ret
int
jge
fsub
push
int3
cli
mov
adc
fisubs
or
push
xchg
add
xchg
faddp
add
mov
xor
jno
inc
inc
into
mov
insl
rcrb
pop
adc
std
cmpsb
outsb
cmpsb
mov
or
fwait
cld
xor
mov
vshufps
das
movsb
in
outsl
ja
enter
adc
sbbl
ss
mov
mov
jbe
repz
fiadds
sbbl
hlt
inc
loop
add
mov
add
loope
jl
test
mov
and
int
push
xchg
jns
jo
xchg
xchg
sbb
stos
inc
or
xlat
dec
inc
dec
outsb
mov
jbe
inc
ret
pop
jle
adc
adc
fidivrs
cli
and
xchg
jnp
fstps
jge
jnp
loop
in
fstpt
in
inc
cmpsb
sub
jl
sar
xlat
mov
lahf
lretw
pusha
lret
mov
scas
shl
test
push
xchg
pop
movsb
cltd
daa
sbbb
inc
cltd
mov
push
push
sahf
sub
xorl
inc
xchg
fisubrs
push
test
lods
enter
add
mov
push
xchg
mov
inc
mov
outsb
add
push
std
jge
jmp
push
popf
mov
sub
cmp
ret
add
xchg
es
push
cmp
xorb
insl
lcall
in
push
xor
xor
hlt
mul
jmp
sub
inc
and
and
fisttpll
mov
xchg
or
mov
mov
inc
lret
adc
push
adc
fadd
mov
and
push
mov
int3
js
push
adc
inc
imul
stos
int3
xchg
cs
xchg
xchg
cld
jo
fwait
idivl
in
addr16
fcmovnbe
xor
sub
inc
shr
pushf
mov
arpl
std
xor
in
sbb
push
insl
mov
hlt
sub
and
daa
pusha
push
std
or
loop
push
rclb
add
push
shll
cmpsb
sbb
jmp
pop
bound
jmp
sub
push
in
popf
frstor
xor
out
xor
loopne
stc
add
rcrb
ljmp
outsl
lods
or
pop
jmp
or
aam
mov
scas
jb
rcll
mov
jbe
aam
out
or
aam
xchg
subl
jae
sbb
mov
in
imul
sbb
lods
lret
push
inc
inc
mov
adc
cli
idivl
xor
add
sub
pop
pop
inc
mov
jmp
xchg
bswap
inc
xchg
les
jecxz
push
test
jae
lds
pop
stc
sbb
jne
and
mov
inc
mov
sti
xor
vrndscaleps
or
and
loop
popf
ffreep
adc
icebp
or
mov
hlt
adc
sbb
inc
data16
jne
sbb
push
and
cmp
prefetcht2
pop
push
mov
inc
dec
popf
cmp
sti
scas
cmp
std
insl
sbb
addr16
cmp
push
sarl
mov
scas
adc
repz
mov
mov
inc
cmp
pop
sub
rolb
jge
xor
nop
bound
jb
addr16
cmpsl
in
insl
mov
sti
dec
in
xchg
or
rcrb
xchg
fisubrs
mov
pop
sbb
sbb
add
jae
mov
inc
mov
and
sbb
mov
leave
adc
and
push
dec
out
aad
fs
std
fwait
loopne
jbe
mov
or
pop
pop
pop
adc
mov
jbe
repz
testb
insb
dec
mov
mov
push
or
rolb
js
or
aas
pop
out
mov
inc
out
mov
dec
sbb
mov
dec
aaa
mov
adc
enter
in
sqrtps
pop
add
out
test
ficomps
lods
sub
mov
or
adc
xor
mov
int3
test
lret
stos
mov
fildll
sbb
gs
stos
movsl
inc
test
aaa
jo
add
push
jbe
arpl
xchg
dec
in
roll
xchg
jle
pop
push
push
jmp
xchg
cmc
inc
ja
subl
ss
mov
leave
sub
scas
sarb
adc
ljmp
pusha
push
adc
sbb
jnp
sbb
je
loope
dec
cmp
sbb
ja
lret
mov
jmp
jno
outsb
xchg
xchg
iret
insb
xor
nop
fisubs
std
call
ljmp
cmpsl
push
jmp
in
in
adc
fs
int3
out
cltd
movsb
dec
iret
jo
dec
cmp
stos
fcomps
rcll
mov
popf
rorb
int3
fstpt
and
mov
dec
aas
xor
xor
das
fs
fnstenv
add
out
pop
in
jge
cmp
push
test
push
pushf
sbb
sub
mov
xchg
andl
loop
xchg
stos
mov
mov
gs
mov
sbb
push
daa
test
mov
lret
std
aam
pop
mov
push
add
movsl
imul
jnp
mov
icebp
loop
pusha
mov
mov
ss
and
sbb
test
push
push
jp
xorb
int
dec
popf
daa
scas
pop
ss
sbb
xor
hlt
fstps
dec
jp
test
mov
leave
and
mov
inc
mov
dec
shll
std
and
ljmp
inc
push
scas
divl
jp
jp
pop
cmc
xlat
cmpsl
cmp
xor
add
jne
and
or
xor
cmp
sbb
fisttps
loop
jne
jmp
jg
shrl
subb
cmp
andl
out
push
inc
add
inc
scas
shlb
pop
jg
fcmove
ret
test
repnz
bound
dec
cmp
inc
inc
popa
sub
or
pop
mov
or
shld
add
data16
inc
push
imul
and
push
cmp
aad
mov
or
ss
mov
xchg
fnsave
add
mov
or
outsl
cmp
push
cltd
inc
fisubrl
sbb
or
cmp
nop
xchg
sbb
push
inc
inc
mov
in
inc
push
mov
push
cmc
shl
push
leave
or
stos
sbb
pop
popa
sub
inc
in
and
mov
pop
mov
lods
or
add
jns
adc
sub
lret
cmpb
testl
aam
pop
sub
fs
loopne
and
sarl
gs
mov
and
andb
push
daa
jno
push
test
leave
xchg
rcl
mov
cld
mov
loope
in
push
jae
lcall
je
stos
inc
adc
push
cmc
inc
inc
push
lret
add
mov
push
add
call
out
inc
testl
je
pop
les
rolb
test
xor
out
mov
pop
or
push
dec
and
sarl
xor
pop
cld
in
cmp
xchg
pushf
cmp
sbb
xor
xchg
ljmp
add
js
popa
jbe
lret
push
cmp
adc
adc
and
lret
inc
ficomps
addr16
enter
pop
jno
mov
sub
lret
inc
fdivl
adc
data16
imul
add
sbb
add
sub
xor
jno
fldln2
jl
push
sbb
push
out
xchg
mov
dec
into
push
insl
lea
shrb
pop
sti
pop
fsubr
jnp
sbbb
pop
and
mov
and
add
xchg
dec
jl
jp
mov
mov
call
push
mov
adc
mov
xchg
jno
inc
mov
lods
pop
mov
fildl
adc
sbb
mov
das
scas
mov
fadds
nop
pop
push
iret
or
inc
in
outsl
cwtl
lock
cmp
lods
or
enter
imul
filds
les
test
popf
adcl
movsb
xor
shll
push
add
std
leave
xchg
aas
adc
testb
jmp
insb
lret
inc
push
repnz
or
cmc
mov
aaa
mov
leave
adc
fisubl
cli
inc
cmpsb
into
sub
inc
push
imul
push
pop
jb
testl
test
jle
sub
std
arpl
stc
test
mov
orb
pop
loopne
addr16
cmp
jmp
cmpsl
sbb
fildl
inc
add
cltd
push
lods
jbe
adc
mov
mov
inc
popf
adc
xchg
sbb
jle
lret
out
pop
data16
push
mov
movsl
inc
add
sub
jns
and
test
in
fsubs
push
xchg
push
daa
cwtl
inc
es
jns
mov
popa
cltd
jp
dec
xchg
jns
ljmp
and
mov
ds
xchg
lods
sti
jecxz
mov
iret
or
data16
enter
jno
into
ss
loopne
push
stc
dec
mov
dec
inc
push
es
shl
xchg
vmread
call
ds
xchg
push
mov
or
mov
jmp
insb
rcr
sbb
in
push
adc
scas
cwtl
mov
xchg
mov
test
mov
jae
push
mov
cmp
pop
xchg
adc
das
outsl
insl
add
mov
cmpsb
aas
pop
inc
jecxz
outsl
insl
daa
dec
jnp
or
push
adc
push
jne
jp
sbb
mov
insb
es
sub
das
xlat
push
outsl
fisttpl
stos
lods
inc
rolb
push
sbb
fstpl
push
inc
and
in
movsb
xor
mov
movsl
mov
andb
adc
dec
sub
or
sbb
add
xchg
jl
dec
aad
pop
jnp
out
adcb
dec
pop
ss
cwtl
das
shll
adc
or
inc
rorl
sbb
jnp
dec
or
stos
and
jae
push
cmp
push
push
inc
mov
inc
popa
fisttpll
xchg
pop
pop
in
and
xor
lret
popf
jle
rcr
sbb
jae
dec
xorb
rcrb
sub
jmp
pop
sub
xor
bt
into
sar
sahf
push
xchg
sbb
fisubrs
pop
das
mov
int3
mov
xchg
xchg
inc
fmull
pop
pop
inc
test
mov
sub
mov
stos
pop
inc
aam
xchg
mov
xchg
xchg
xor
lcall
stos
pop
mov
mov
lcall
and
sub
sbb
adc
jno
mov
lret
add
repz
xchg
lret
push
pop
cwtl
out
jae
daa
jnp
mov
insl
mov
pop
pop
mov
out
je
sbbl
test
push
xchg
pop
cmpsb
sub
inc
shrb
and
sarb
ja
lret
gs
xchg
pusha
scas
lret
out
fs
iret
or
popa
cmp
cli
mov
jno
pop
ljmp
mov
jnp
sub
pop
fcoms
call
fbstp
adc
leave
pop
jl
mov
iret
lods
lahf
enter
lods
cmp
nop
xor
sbb
loope
mov
jbe
push
add
mov
mov
add
cmpsb
cmp
mov
stc
inc
pop
dec
xchg
lahf
ret
mov
cmp
and
rsqrtps
outsl
lods
jo
mov
xchg
cmp
cmp
adc
pop
lods
cmp
test
inc
jns
je
inc
int
mov
fnstsw
add
pusha
leave
insb
and
sbb
mov
inc
sbb
fdivrp
shlb
mov
out
enter
cmp
mov
cli
push
adc
jo
enter
int3
enter
stos
jns
ja
mov
repz
mov
hlt
test
adc
popf
in
dec
push
pop
mov
add
sbb
movsl
enter
fisttps
cli
popf
enter
out
cmp
jne
scas
scas
mov
xor
cmp
mov
ljmp
pusha
inc
add
cs
mov
add
popa
sahf
mov
orb
and
dec
inc
insl
cwtl
ljmp
dec
ljmp
mov
cmp
adc
mov
cmp
xor
test
shll
stos
enter
pusha
cwtl
icebp
pop
sbb
jmp
sbb
call
or
cmp
lds
repnz
push
pop
xor
imul
les
xchg
mov
fbstp
sub
insl
jo
mov
inc
inc
enter
push
xlat
subb
cmp
mov
sub
xchg
cmp
xlat
or
add
jmp
outsl
adcl
stos
imul
xor
add
mov
shrl
leave
rol
cmpsb
inc
daa
cmp
mov
mov
repz
jnp
fsincos
push
in
add
xchg
adc
je
cmp
pop
dec
inc
inc
add
sti
fsubs
xchg
jo
cmp
adcb
xchg
pop
aas
sarb
xchg
xor
sbb
cmc
jne
lock
lahf
lods
loope
sbb
stos
stos
dec
das
rcrb
sahf
sub
push
mov
sbb
push
xor
in
push
nop
push
xor
das
ja
sahf
out
xchg
sbb
mov
test
push
stos
fs
sbb
daa
xchg
cltd
mov
ljmp
mov
movsl
out
add
dec
push
pop
mov
cli
cwtl
in
sarl
insb
xchg
and
mov
push
in
mov
cmc
mov
test
mov
mov
xor
dec
inc
filds
sub
push
xor
scas
andb
pop
pop
ljmp
popf
repnz
or
in
aaa
into
in
mov
add
lcall
or
push
mov
pop
das
push
ficomps
push
out
cmp
mov
addr16
ja
jb
clc
stc
mov
pop
jne
loopne
clc
test
cmc
shr
and
pop
fsubr
das
ja
pop
adc
lods
in
dec
cmp
sbb
adc
pusha
inc
dec
add
xlat
jle
jae
cli
insl
cmpsb
out
aaa
cltd
push
push
jmp
fcmovbe
data16
js
sub
test
mov
adc
fdivrl
or
js
fisttpl
fdivrl
lock
ss
add
mov
pop
sbb
xchg
aaa
jp
adc
jg
fstpl
lcall
jno
ss
jmp
add
enter
pop
mov
aas
iret
dec
pop
pop
into
bound
pop
inc
mov
pushf
rclb
or
mov
jge
imul
mov
add
fwait
pop
in
icebp
adc
xchg
mov
repnz
xor
fwait
jae
rcrl
cld
jae
push
push
gs
rol
rorl
int
cmp
int
dec
hlt
mov
adc
dec
lea
xor
fstpl
lods
pop
push
jae
adc
scas
push
lds
sahf
inc
lcall
inc
sub
jo
das
mov
mov
adc
mov
push
out
mov
dec
ljmp
lods
in
cld
cwtl
aas
popf
jne
mov
push
cmp
call
xchg
popf
das
dec
xchg
push
repnz
rcl
leave
iret
fstps
and
rcll
xchg
ret
add
and
cmp
push
movsb
xlat
cmp
gs
ret
cmp
leave
loope
dec
hlt
jl
mov
xchg
loopne
inc
pop
xchg
nop
jg
xchg
iret
or
aaa
outsl
out
scas
lods
cmp
sarb
into
test
xor
lock
shl
aad
inc
xchg
xchg
insl
pop
add
fcoms
decb
inc
rclb
sti
cmp
mov
fstl
adc
jp
dec
adc
mov
push
dec
out
sbb
dec
mov
iret
adc
pushf
mov
mov
ds
out
iret
sbb
jbe
xchg
jge
ja
loop
frstor
xchg
mov
fisubs
push
mov
add
adc
outsb
or
inc
cmp
mov
or
loope
shll
pop
test
mov
cmc
js
shll
ds
popf
sub
sub
sub
jno
outsb
ficompl
jne
cmp
mov
jg
in
ret
add
fadds
or
jae
or
add
jno
and
jb
test
xor
into
push
neg
adcb
add
xor
scas
xor
mov
and
cmp
jl
pop
outsb
nop
mov
push
mov
sub
xchg
sti
jmp
sti
mov
xor
lock
ljmp
mov
xor
xor
addr16
frstor
int
pop
push
inc
fucomip
fnstenv
sub
mov
lcall
jbe
xchg
inc
inc
xor
and
pop
in
push
pop
cmc
imul
imul
xor
sbb
mov
inc
mov
xchg
jbe
push
jnp
push
fstpl
jo
call
lret
jno
sbb
dec
cmp
mov
movsl
stc
push
cli
or
fbld
incb
dec
dec
shlb
sub
outsl
in
mov
and
adc
xchg
addr16
pop
xorb
adc
cltd
lret
sub
addb
jmp
dec
xor
adc
sbb
mov
scas
sub
jns
leave
repz
inc
and
cltd
xor
xchg
enter
xchg
mov
or
push
in
push
std
jae
popa
cmp
out
add
repnz
add
or
mov
cmp
inc
push
inc
push
aam
inc
loop
xor
jb
loopne
or
xlat
pop
xchg
jo
loope
jo
push
pop
mov
js
loope
sub
cmp
scas
xchg
ljmp
mov
pop
and
add
cmc
in
repnz
ljmp
mov
add
mov
adc
push
xor
xchg
scas
push
aas
repz
testb
jge
xchg
jns
xor
test
in
stos
aam
dec
pop
sbb
out
aam
push
cltd
push
push
jge
std
lret
int
xor
dec
je
xchg
add
adc
and
arpl
xchg
in
fs
mov
pop
cs
push
mov
pop
mull
lods
test
stos
icebp
xchg
enter
fidivrs
sti
jl
xor
faddl
inc
out
push
shlb
cmp
lds
jb
test
in
cltd
xchg
jne
pop
es
orb
bound
pop
stos
inc
cmp
aam
and
push
xorl
xchg
imul
insb
sbb
mov
call
push
bound
pop
pop
jnp
pop
jge
testb
jg
arpl
sbb
fnstsw
imul
pop
add
lea
inc
es
jae
inc
data16
push
addr16
inc
pusha
fmuls
mov
inc
or
lock
xchg
stc
dec
and
cld
or
mov
inc
adc
or
mov
imul
sub
fmull
pop
mov
je
or
in
dec
iret
in
cwtl
dec
pop
or
loopne
jne
outsl
cmp
sbb
xchg
mov
mov
int3
lods
push
das
xor
inc
inc
imul
mov
mov
push
imul
ja
cli
mov
mov
push
xchg
push
xchg
or
dec
sub
test
bound
les
repz
mov
push
rcll
xchg
inc
jnp
pop
lea
inc
jecxz
adc
aad
cmp
pop
adc
fistl
andb
cmp
and
pushf
dec
out
js
sbb
xchg
inc
dec
mov
xor
jmp
mov
dec
je
in
mov
fwait
setl
pop
push
sbb
fidivrl
leave
in
cmpl
imul
adc
gs
push
push
popa
insb
sbb
sbb
push
pop
repz
out
jecxz
into
inc
pop
pop
jo
ja
cmp
fs
xlat
add
add
lds
fbstp
or
das
add
jbe
cmp
ret
aad
fs
jp
add
cmpsl
sti
int
sbb
stos
and
clc
mov
out
push
rorb
fists
or
sbb
mov
fdivl
addl
jmp
cltd
cli
mov
jmp
push
add
push
popl
in
pushf
and
mov
sub
jmp
xchg
clc
dec
cmc
add
cmp
lods
testb
mov
cmp
ds
fbld
js
pusha
mov
cmpsb
xor
push
adc
push
pop
lds
ds
dec
test
xchg
cmpsl
mov
inc
jg
fistpll
lods
jl
movl
outsb
jne
sbb
sbb
add
in
fsubl
push
and
ja
sbb
dec
nop
jbe
test
dec
lret
mull
sbbl
rorb
mov
pop
mov
arpl
insl
lahf
jns
rcrl
ret
pop
pop
or
push
cmp
lock
pop
int3
addr16
mov
jb
add
cmpsb
fidivrs
mov
mov
mull
mov
jp
ja
andb
sbb
inc
jns,pt
rcrb
cld
jl
xor
jnp
jns
sbb
sbb
lcall
mov
je
outsb
in
loop
repnz
xor
cmpsb
loop
dec
fs
rcrl
popf
mov
add
inc
testb
lods
mov
addl
push
aam
and
ret
shrb
pushf
out
stos
xor
les
jne
cmpsb
jecxz
push
dec
add
push
stos
push
sbb
scas
int
andb
xor
fimuls
push
xchg
xor
or
or
mov
cs
mov
jbe
lcall
dec
dec
int3
push
mov
pop
xchg
jno
add
jle
adc
adc
lds
rolb
in
test
add
lret
mov
xor
in
subb
pop
mov
test
inc
call
insl
sbb
mov
xchg
popa
mov
jge
push
xchg
dec
fsts
in
int
inc
rcl
cld
add
fdivrp
or
sbbl
jecxz
sub
mov
nop
addr16
mov
ror
aas
call
cmp
and
aad
cmp
sub
cmc
daa
lahf
into
pop
out
mov
lock
jl
dec
out
leave
into
clc
sbb
testb
pop
push
or
inc
adc
xchg
sbb
in
test
xchg
sti
mov
test
jo
xor
xchg
xorl
sub
out
jnp
pop
xchg
adc
imul
sbb
lcall
nop
test
mov
adc
loop
movsl
and
mov
notrack
ds
gs
and
mov
push
dec
adc
sub
sbb
mov
inc
sub
lret
js
stos
or
cltd
push
jl
aam
jp,pt
jle
and
jo
cli
inc
push
mov
in
push
push
in
rorl
add
out
xchg
dec
fildl
sub
stos
out
ss
xor
pop
pop
pop
add
leave
xchg
or
bsf
mov
shrl
mov
mov
sar
jge
out
dec
add
mov
mov
mov
mov
xchg
sub
aaa
mov
and
lret
dec
mov
jne
ljmp
adc
xor
scas
mov
loope
adc
jno
fdivrs
wbinvd
cmpsb
push
push
push
and
sbb
out
aas
pop
stos
sub
xchg
daa
mov
mov
mov
sub
int3
sarl
arpl
fisubl
leave
xchg
cmc
call
pop
adc
pop
mov
mov
pop
aas
in
ljmp
cs
or
mov
decl
sub
push
aaa
loope
lahf
fidivs
rcr
dec
sbbb
push
aas
enter
insl
push
inc
pop
adc
sub
sub
pushf
mov
cmp
call
push
push
xchg
add
sbb
mov
mov
popf
cmpsl
loop
nop
xor
mov
push
pushf
fsubs
sahf
jae
adc
sbb
loopne
add
push
push
mulb
mov
mov
shlb
roll
adc
icebp
adc
subb
mov
scas
add
sub
aas
push
mov
or
push
aam
jl
shrl
mov
int3
aad
leave
push
icebp
test
jle
sbb
mov
xchg
std
cwtl
cmc
in
push
push
int
aas
fcmovnbe
and
out
dec
jns
mov
int
jecxz
pop
pop
push
add
jp
sti
jae
lods
bound
dec
and
mov
repnz
fsubrl
arpl
push
or
adc
fcoml
or
push
or
stos
lods
mov
xor
dec
test
cmpsb
lods
or
addr16
jb
mov
fwait
ja
or
mov
scas
push
jno
aaa
jl
mov
cmp
mov
addb
sarb
inc
test
adc
cmc
inc
add
dec
ds
jne
sbb
iret
mov
adc
es
push
sub
or
jo
sub
in
outsb
and
dec
jge
scas
mov
jbe
inc
call
lcall
enter
jle,pt
jg
pop
mov
mov
sub
sbb
cmp
lret
cmp
in
sub
cwtl
fdiv
gs
jmp
mov
inc
or
scas
or
mov
jg
dec
mov
add
or
popa
bnd
insl
mov
and
into
ds
push
rol
push
inc
xor
fildll
dec
lahf
push
imul
xor
cltd
fiadds
mov
arpl
push
pop
movsb
pop
fcomp
add
sub
mov
pusha
iret
cmp
xchg
out
outsl
lock
test
xchg
mov
xor
int
mov
loope
add
lods
cltd
mov
sbb
insl
les
xor
sub
fisubrs
cmc
adc
lea
cmp
lahf
outsl
mov
adc
mov
xchg
adc
dec
cs
pop
mov
mov
jl
add
insl
mov
push
xor
fmulp
xlat
or
xchg
das
cmp
movsb
gs
mov
enter
xchg
add
cwtl
loop
popa
mov
push
sub
fs
fdiv
adc
push
push
sti
pop
inc
xor
jnp
mov
jecxz
add
std
fwait
repnz
mov
and
or
stc
mov
cmovb
sub
xlat
imul
call
sub
mov
insb
outsl
lcall
mov
ret
jp
jmp
cmp
lock
in
leave
dec
mov
xchg
xor
sub
es
subl
clc
adc
inc
sbb
sub
shrb
call
or
movsb
int3
or
sub
int
aas
daa
addb
cwtl
jns
push
lret
mov
sub
push
incb
dec
popa
shr
icebp
sub
inc
andl
das
enter
jmp
insb
jge
dec
hlt
adc
lcall
sub
push
add
jl
test
sbb
cmp
xchg
mov
cmp
cmp
push
mov
add
repnz
shlb
fisubl
add
xchg
fdivs
and
dec
or
pop
bnd
mov
pop
bound
push
cmp
mov
subl
cmp
cli
cmp
or
insb
mov
sub
xchg
imul
test
jnp
andl
inc
mov
gs
or
sub
push
js
icebp
xchg
xchg
movsb
pop
call
cli
jb
bound
mov
sbb
rcrl
jb
pop
mov
js
mov
xor
and
inc
pop
shl
popa
dec
mov
pop
add
mov
inc
out
xchg
cmp
test
rorb
inc
cmpsl
cmpsb
jno
mov
and
incb
iret
push
outsl
lds
jmp
fnstenv
out
je
sbb
lret
push
add
rorl
push
jg
mul
xchg
push
dec
cli
out
aaa
or
shrb
mov
push
je
not
push
cltd
repnz
inc
mov
sub
lcall
jg
ljmp
in
and
mov
scas
mov
mov
in
lds
pop
insb
inc
push
insl
adc
repz
repz
mov
mov
mov
mov
out
imul
jo
je
cmp
les
mov
loop
cmpsb
cld
pop
or
jp
mov
ss
xor
pushf
int3
xor
adc
xchg
mov
insb
js
inc
stos
mov
aam
loope
jl
cli
mov
or
xchg
jle
addr16
test
sbb
iret
incb
jmp
and
iret
inc
push
inc
pop
gs
jnp
push
stos
inc
loope
xor
dec
out
lahf
jo
xchg
mov
inc
fimuls
xchg
push
mov
sahf
lods
push
fistl
scas
mov
mov
or
mov
or
insb
aas
add
mov
fcoms
dec
ret
cmpsl
ret
and
iret
fisubs
jne
mov
fwait
stos
lcall
in
or
mov
push
mov
mov
mul
fildl
aaa
shl
inc
repz
filds
test
movsb
dec
in
iret
shlb
pop
sahf
xor
je
mov
fidivl
movsl
shll
xor
cli
movsl
dec
out
bound
sbb
add
pusha
fstpl
inc
cld
in
movsb
adc
jo
sub
mov
fcomps
or
sub
mov
sbb
cmp
add
jo
jae
jg
push
cmp
sub
nop/reserved
into
popf
push
sub
xor
cmp
test
sti
pop
loopne
aaa
dec
stc
aad
and
inc
popf
aam
xor
cli
mov
xor
pop
lock
ss
xor
imul
ret
aaa
mov
ljmp
popa
test
lret
push
sti
movsl
sbb
daa
outsb
mov
out
repnz
sub
test
pop
stos
loopne
sbb
xchg
fs
cmpb
andb
imul
in
cld
mov
push
hlt
fbld
cmpsl
stos
sbb
int
nop
xchg
or
inc
mov
push
cli
sarl
push
or
inc
xchg
xchg
lods
xchg
sbb
mov
mov
ja
xor
cli
leave
rcr
or
adc
shrl
leave
in
jne
data16
cli
xchg
call
xor
push
add
mov
add
cmp
daa
and
test
adc
xchg
jg
pop
mov
pop
jmp
add
push
pop
push
lods
pushf
pushw
shr
cmpsl
scas
cmp
faddl
popa
insb
push
mov
out
adc
cld
icebp
sub
pop
jle
jnp
bound
insl
sub
jne
jo
mov
and
pop
or
adc
or
mov
cwtl
push
push
sbb
sbb
inc
lcall
mov
flds
pop
sti
cmc
mov
push
xlat
insb
sbb
scas
imul
pop
sbb
cltd
mov
sub
js
fcoml
call
scas
xor
stos
pop
loopne,pn
or
xor
xchg
into
push
cltd
test
pushf
jecxz
fbld
xor
sub
cltd
ret
std
xchg
adc
jo
mov
shrb
cmp
jnp
push
inc
cltd
inc
jge
imul
jae
mov
movsb
std
icebp
sub
stos
js
inc
aas
stos
aam
xor
push
xchg
mov
fyl2xp1
inc
add
scas
incl
inc
rcll
in
xlat
mov
xlat
push
push
mov
jne
add
adc
out
test
nop
mov
stc
push
dec
stc
fdivs
pop
jnp
push
adc
mov
adc
jp
fsubs
fwait
je
push
ret
add
insl
mov
or
iret
sbb
enter
mov
arpl
xchg
rcll
sub
adc
jo
in
call
fstps
dec
jge
fistpl
inc
add
jns
xchg
jne
jns
or
mov
add
dec
fidivrs
movsl
int3
xchg
or
enter
and
rcrl
data16
cmp
sub
in
lock
pop
add
pop
cld
jo
inc
stos
test
mov
xchg
xchg
dec
mov
adc
inc
cmpsb
mov
dec
pop
leave
es
fwait
sbb
fisubs
mov
inc
dec
push
outsl
cmpsb
fcomp
cs
cmp
sub
xchg
xchg
jle
adc
subl
in
add
and
rorl
jl
stos
xor
es
lcall
and
ss
xchg
dec
or
clc
push
and
sbb
lcall
vrcpps
pushl
cmpsb
add
mov
in
add
sbb
pop
enter
cmp
wbinvd
mov
roll
push
cmp
xchg
dec
mov
adc
sub
pop
xor
push
decb
or
xchg
cmpsl
cmp
icebp
inc
jge
repz
outsl
dec
mov
mov
int
mov
stc
push
sbb
ss
div
cmp
ficoml
insb
mov
inc
pushl
sub
lcall
lea
call
outsb
cmp
add
iret
movsb
and
dec
jge
xor
adc
dec
xlat
push
es
pop
cmp
mov
pop
daa
ljmp
jp
push
or
in
push
leave
popa
xor
push
jns
push
xchg
rol
fildl
shlb
xchg
rclb
popa
xlat
mov
mov
movsb
in
or
sub
mov
xchg
fisubl
std
pop
cmp
rcrl
push
mov
test
xchg
push
jnp
pop
jnp
dec
lret
adc
into
test
jg
jge
pop
ret
sub
scas
adc
pop
sbb
roll
shl
xorb
xor
add
mov
subl
pop
jmp
xchg
xchg
inc
ss
pop
push
fldt
dec
cmp
in
jnp
xor
loope
lods
xor
shr
fwait
mov
addb
jae
es
jl
test
dec
mov
jp
push
shrb
push
rclb
mov
jg
jmp
std
adc
add
or
outsb
push
outsb
pushf
cmp
daa
inc
cmpsl
fucomp
jb
dec
xchg
mov
lcall
mov
mulb
inc
movsb
mov
sahf
xor
mov
repnz
inc
outsl
sbb
daa
fsubs
push
das
mov
iret
lods
rclb
pop
rolb
movsb
push
loope
pop
repnz
jns
int3
nop
fisttpl
push
sub
add
out
jb
pop
sub
mov
rcl
lods
iret
mov
jae
pop
xor
jno
adcb
dec
repnz
lock
jle
jmp
ss
es
xchg
loope
movsb
mov
mov
dec
or
popf
std
push
pushl
jb
test
mov
push
stos
sbb
xor
lea
push
in
in
outsb
movsl
in
cmp
int
test
xlat
pop
stos
daa
stos
out
cltd
add
insb
enter
push
mov
ret
jae
in
lcall
gs
push
pop
push
out
stos
fstpl
jne
sbb
dec
testb
clc
jp
je
fidivs
and
test
mov
les
xor
push
in
mov
pop
testl
pop
sub
rcrl
roll
es
inc
pop
pusha
ret
cmp
cmp
test
dec
out
cmp
popa
push
cwtl
in
aad
movl
or
and
push
jns
jmp
pop
jp
mov
inc
clc
and
mov
dec
mov
ds
jbe
xchg
dec
jnp
imul
into
add
xchg
rorl
sub
sbb
jmp
test
adc
or
mov
or
out
dec
test
sbb
cmpsl
jnp
push
adc
fidivrs
or
xchg
enter
scas
xchg
ret
mov
pop
inc
add
inc
or
out
cmp
insb
jle
fdivr
pop
or
cltd
fwait
add
pop
lret
lods
into
inc
jp
push
inc
or
loopne
adc
loop
fs
adc
sahf
je
adc
mov
lret
mov
out
or
mov
inc
cmp
cmpsb
sbb
lock
arpl
dec
scas
mov
mov
rorb
mov
xchg
jp
rorl
sub
sub
inc
in
scas
nop
cmp
mov
neg
sbb
rorb
in
test
mov
sbb
mov
jl
jecxz
loopne
rcll
icebp
mov
mov
mov
insl
xor
push
add
fists
in
shr
addl
adc
ficoml
lcall
jle
cmpsl
nop
sbb
sub
ds
add
aas
push
lods
in
xchg
dec
jns
mov
adc
dec
sub
jno
rol
push
enter
out
rcr
jno
adc
cmp
and
fmul
pop
and
mov
stc
xchg
dec
loopne
sbb
pop
lret
ficompl
ds
jno
int
or
data16
sbb
pop
fisubl
xor
stos
cld
lods
push
jnp
push
cmpsl
repz
inc
dec
test
push
stc
test
adc
sub
loop
sub
loop
scas
lret
leave
dec
push
dec
mov
nop
mov
nop
ljmp
jmp
icebp
or
divl
aad
mov
mov
cs
jle
fnstenv
std
fistpll
scas
push
insb
insl
aas
adc
lods
jns
push
or
and
stos
cld
dec
fbstp
ret
jmp
test
lret
ja
pushl
adc
pop
mov
aas
test
pop
movl
testb
hlt
cmp
sub
nop
bound
in
cmp
pop
mov
add
mov
xchg
pusha
fwait
rep
xor
sti
leave
and
push
dec
push
inc
int
mov
pop
out
dec
jl
ljmp
mov
push
or
adc
test
cmp
nop
push
invd
out
lret
mov
pushf
sub
inc
jmp
lds
adc
fistps
icebp
and
ret
loopne
xchg
ret
xchg
mov
out
jno
jecxz
and
fists
jecxz
pusha
inc
test
enter
mov
shll
test
sbb
pop
lea
std
or
add
cmp
xchg
aad
lea
cli
outsl
cwtl
dec
sub
sub
test
push
std
nop
cmpsb
leave
iret
test
adc
push
dec
ds
sub
pop
mov
pop
add
std
jns
rorb
or
xchg
aad
add
add
pop
inc
repnz
xchg
adc
sub
gs
fs
stos
push
push
repnz
shrl
cmp
cltd
sub
xchg
push
pop
inc
dec
popl
test
lods
mov
xor
dec
sbbb
xchg
inc
cld
pop
jb
hlt
push
sbb
jge
ret
es
jmp
test
or
push
loopne
push
xchg
jne
ja
fdivp
pop
daa
or
insb
pusha
popa
popa
inc
or
repz
jg
aam
fiaddl
andl
dec
loop
push
in
cltd
cmp
les
shl
shll
sub
pop
push
sbb
push
xlat
pop
mov
cmp
repz
lahf
jne
mov
jecxz
scas
dec
cs
and
xor
aam
pop
pop
pop
jle
das
dec
iret
jno
mov
cwtl
sbb
js
inc
insl
sbb
inc
flds
pop
push
push
xlat
imul
pop
ds
add
sbb
xor
lods
xchg
fs
push
inc
andb
hlt
jge
popf
aaa
pop
jne
pop
jl
mov
incl
and
fistl
xor
addl
push
push
ror
jl
adc
rcl
sarb
shl
stos
mov
gs
test
out
inc
push
cmp
and
mov
mov
cmp
sub
sbb
scas
out
repz
mov
or
data16
cmpsl
inc
mov
in
xchg
pop
sub
test
xchg
mov
pop
mov
add
xchg
pop
xchg
sbb
mov
push
pop
xchg
jno
imulb
fsubr
sbb
or
or
fcmovb
outsl
fwait
jp
cs
mov
ss
cwtl
dec
jp,pn
cmp
fsub
and
cmp
cltd
pushf
out
dec
cltd
sbb
mov
inc
xchg
sub
pop
sub
nop
negl
adc
outsl
mov
mov
test
inc
jmp
ss
dec
or
push
mov
into
jle
push
mov
xor
mov
and
xchg
mov
stos
icebp
mov
mov
jmp
and
ret
dec
push
jnp
and
inc
adc
add
and
sbb
add
push
xchg
mov
and
xchg
inc
bound
bound
mov
sbb
ret
jle
adc
jno
subb
cmovno
sahf
push
into
xchg
movsl
push
or
shll
jne
test
jl
mov
mov
movsb
xchg
push
mov
jo
shll
sub
adc
mov
sbb
addr16
mov
inc
test
add
mov
cmp
lds
add
and
sbb
mov
push
notl
mov
pop
sti
rcll
ret
xchg
push
sbb
push
ljmp
mov
in
jne
scas
pop
rorb
adc
jl
xchg
les
cli
push
mov
cmpsb
imul
int3
std
add
push
in
fbstp
add
inc
add
jge
dec
outsb
ret
pop
ds
inc
clc
xlat
das
xor
ds
repz
icebp
aaa
jne
pop
pop
ret
sarl
add
mov
cli
scas
icebp
loopne
in
hlt
stc
in
pop
rolb
fmuls
cmp
cwtl
test
xchg
cmp
mov
lret
sar
ret
shlb
push
mov
pop
nop
jb
and
jecxz
lods
sbb
lods
shl
adc
rol
imul
lea
push
outsl
xor
push
xchg
scas
pop
inc
in
pusha
xchg
add
in
mov
xchg
mov
push
dec
push
jo
sti
jecxz
lcall
call
lcall
clc
and
mov
fs
imul
repnz
add
add
popf
mov
jb
push
cmp
rcl
xlat
pop
sahf
jnp
jl
cmp
cmp
lahf
out
adc
insb
jno
xor
xchg
test
leave
pop
test
shl
popf
dec
out
cmp
jb
mov
inc
mov
pushf
fisubs
mov
shl
test
and
and
cmpsl
adc
jo
test
fnstcw
mov
inc
fstl
xchg
dec
sbb
xchg
pop
int3
mov
inc
lock
sahf
lods
je
xchg
test
or
cld
adc
ljmp
in
int3
fistpll
ljmp
cli
roll
sbb
push
sbb
sub
cmpsl
arpl
loopne
aaa
xor
adc
xor
sbb
popf
inc
lock
testb
iret
aas
lock
or
add
aas
outsb
lock
sahf
push
insl
and
hlt
add
push
mov
fidivl
jae
jo
and
xorl
out
int3
jmp
out
loope
mov
and
add
sub
pop
int3
push
jns
lahf
gs
enter
lret
xor
cmp
out
pop
xchg
in
outsb
add
jl
push
sbbb
xlat
dec
imul
es
rorl
scas
imulb
ret
dec
je
loop
jne
enter
scas
icebp
icebp
jb
loopne
xlat
mov
mov
daa
adc
dec
push
es
xchg
stos
cld
fxch
nop
nop
jnp
lods
xchg
sub
fwait
add
ret
push
push
iret
push
stos
jae
popf
sbb
xor
stos
loope
jge
mov
push
cmp
fisubs
mov
adc
push
adc
cmp
sbb
aas
xor
mov
lock
gs
inc
and
sub
or
cli
mov
inc
xor
sub
jno
mov
mov
xor
push
mov
sub
mov
popf
push
movsl
test
push
outsb
dec
lods
push
in
mov
dec
js
and
xchg
mov
sub
shr
sub
sbb
push
clc
inc
mov
jmp
cmpl
adc
mov
in
flds
jp
or
push
pop
lods
inc
mov
subb
xor
adc
imul
enter
add
xor
mov
mov
inc
sbb
jne
dec
addb
add
pop
daa
or
dec
lcall
subb
lds
sub
adc
cmpb
cli
mov
lods
imul
in
loope,pn
cmp
lods
ret
and
negb
and
push
imul
push
in
dec
rolb
fnstenv
enter
repnz
push
mov
or
ja
cmp
jp
lahf
lret
xor
add
jmp
adc
popa
pusha
xor
push
cld
fwait
mov
jle
sub
or
inc
hlt
mov
icebp
fists
mov
out
call
xor
jecxz
cmp
sbb
mov
add
mov
sub
mov
or
pop
or
pop
xchg
popf
fimuls
cs
pop
xchg
loope
cmp
or
test
dec
mov
ljmp
bound
push
popf
and
cmp
xor
lcall
outsl
cmp
shrb
xchg
fcoml
adc
sbb
dec
lcall
sub
imul
dec
xor
jecxz
sub
jns
addr16
jbe
jecxz
cs
or
shll
sub
inc
jge
cmpsb
aas
sbb
or
pop
nop
test
xchg
cmpsl
inc
out
aaa
mov
dec
add
cmp
scas
test
scas
test
jno
cmpsl
sub
mov
sarb
aas
mov
cltd
gs
lea
mov
push
push
xor
push
add
out
daa
mov
fs
or
dec
incb
adc
movsl
pop
jnp
sub
ja
es
lock
lds
sbb
jnp
movsl
in
out
stos
cmp
stos
cmpsl
clc
pop
fucom
scas
adc
rcrl
stc
out
es
aaa
push
and
aaa
sti
dec
add
std
test
push
bound
out
mov
push
rorl
xor
mov
scas
pop
mov
inc
and
mov
adc
shll
inc
cmpsl
mov
add
push
jecxz
add
jb
inc
adc
mov
add
pop
mov
sbb
lahf
sti
imul
lahf
adc
out
fisubl
mov
jb
pop
addl
test
mov
jne
jle
push
inc
sub
xor
in
mov
stos
adc
push
icebp
dec
dec
data16
fcoml
call
cmp
push
rcrb
scas
call
sub
xor
xor
mov
jo
pop
aad
mov
inc
sub
loop
ja
aaa
inc
sbb
inc
sbb
scas
lret
jmp
subl
lds
xor
push
nop
mov
cmp
dec
stos
mov
and
addr16
jmp
lret
mov
sbb
in
pushf
or
cld
ficomps
rolb
aad
lret
xchg
and
push
rcr
inc
jg
int3
add
sbb
and
test
addr16
pop
mov
and
aas
cmp
lds
dec
out
andl
adc
movsb
mov
sub
dec
jo
adc
pop
jecxz
in
push
mov
dec
aam
into
push
and
sbb
pop
adcl
mov
adc
es
add
mov
inc
movsb
cld
xchg
xchg
push
out
mov
mov
fildl
jne
and
and
sbb
and
push
js
scas
sbb
mov
fwait
ja
dec
cld
stc
enter
jg
loopne
test
lcall
call
pop
jmp
bound
or
sub
sarb
fwait
aam
inc
lods
jnp
imul
and
sti
push
push
push
adc
cmp
repnz
cmpsl
js
aad
push
rcll
adc
xchg
sub
repnz
data16
mov
or
xchg
and
xor
or
daa
insb
shll
sahf
lods
mov
adc
push
lahf
dec
pop
sub
in
push
sub
jns
aad
pop
les
xchg
add
mov
nop
inc
jle
sbb
xor
sub
adc
jge
or
cmp
outsb
fcoms
xchg
adcb
loop
pop
sub
clc
test
gs
sbbb
stc
cmp
mov
jno
and
cmc
daa
adc
push
inc
inc
push
dec
cmp
enter
cs
test
out
popa
cmp
push
stos
dec
lret
enter
mov
test
stos
std
mov
push
out
shr
sub
outsl
fwait
leave
or
xchg
iret
inc
outsb
shll
out
sbb
jnp
pop
inc
jns
sbb
and
pop
popa
aam
call
into
testb
mov
and
push
mov
leave
shll
adc
xor
in
add
jl
xor
adc
push
cmp
jne
mov
jecxz
push
inc
dec
test
fiadds
sahf
push
in
iret
jo
xchg
rcrb
and
fmull
sbb
ja
mov
cmp
aaa
add
movb
sub
xor
adc
les
sahf
or
pop
sti
js
aaa
sbbb
mov
js
or
mov
or
faddl
adc
mov
mul
mov
xor
add
cmc
cmpsl
cmp
mov
icebp
ret
ljmp
enter
bound
out
mov
loopne
xor
fnsave
cwtl
fsubrl
xchg
mov
dec
cltd
sbb
sbb
fidivs
add
pop
scas
in
sub
ret
jecxz
cwtl
iret
shlb
lock
lret
in
in
das
ja
in
push
in
mov
outsl
rcrb
loope
cld
shlb
and
ror
cmp
repnz
xor
out
cmpsb
je
push
std
sahf
enter
sar
pop
std
negl
sbb
pop
pushf
adc
lds
sub
imul
cmp
or
xchg
aaa
fwait
jp
and
int3
in
sbb
dec
and
or
mov
aad
out
test
mov
stos
sub
ja
lret
push
call
int
push
fstpt
rcrl
enter
jl
loope
ret
fmul
imul
inc
in
add
mov
pop
add
scas
and
inc
ja
xor
jno
jg
sti
pop
sub
inc
clc
pop
pop
popa
stos
popf
xor
and
in
into
sbb
jo
aad
lret
div
test
jg
pop
lret
pop
loope
pop
test
inc
je
into
arpl
xchg
sahf
xlat
fdivr
jne
pop
jnp
in
mov
cmc
movsl
dec
jg
movsb
xchg
outsb
jmp
xchg
push
jp
push
das
addb
mov
std
mov
mov
or
fwait
rcrb
insb
mov
int
adc
jne
xor
pop
fstl
push
ret
fimuls
shl
pop
inc
stc
aaa
push
adc
fstpt
fnstenv
sub
shlb
rolb
mov
int
es
int3
repnz
das
cmc
lods
inc
pop
cmpsb
mov
jg
lret
push
lds
cmpl
in
aad
fnstenv
mov
rcrb
mov
push
fs
jne
mov
xchg
mov
nop
sub
jge
cmp
sub
mov
mov
cmp
ficompl
xchg
inc
test
cmc
data16
add
sbb
test
adc
cli
out
xchg
and
jecxz
mov
ja
pop
dec
ret
test
pop
mov
pop
mov
dec
inc
fwait
push
int
out
pop
cli
out
cmp
sbb
xor
or
push
ss
popa
mov
stc
cwtl
mov
mov
mov
add
xchg
mov
scas
daa
pop
push
dec
sbbb
fcomps
dec
cmp
add
imul
and
and
popl
rolb
cmpsl
jnp
mov
xchg
cwtl
in
inc
fwait
mov
or
and
dec
pop
lcall
test
cld
cld
and
mov
cmpl
sar
dec
es
imull
pop
xor
int3
push
andb
jg
lea
cli
loopne
adc
pop
popl
add
fidivl
mov
out
mov
mov
xor
xor
cmpb
and
mov
aaa
mov
lret
bnd
mov
icebp
or
sub
sti
js
shrl
test
inc
test
mov
mov
cmc
test
in
jno
dec
mov
cmp
cmp
mov
fsub
aaa
js
insb
pop
sbb
jl
cld
add
daa
mov
mov
lcall
repnz
ljmp
in
cmpsb
sahf
mov
push
dec
mov
dec
pop
jle
ss
mov
add
mov
out
jne
adc
loopne
aad
and
adc
cli
mov
jecxz
lods
push
inc
out
cli
ds
adc
cmp
inc
ss
mov
stc
xchg
xchg
daa
adc
jg
mov
dec
xchg
dec
clc
mov
pop
adc
sub
rcrb
out
ds
ja
jb
push
jmp
cmpb
mov
and
push
push
jbe
mov
adc
push
sbb
leave
dec
lock
ja
dec
xchg
popf
cmp
and
leave
xchg
mov
and
add
fcomip
fimuls
pop
add
cmp
fwait
andb
ljmp
ds
and
push
cmp
sbb
and
lds
xchg
jge
xchg
sub
inc
or
nop
push
jecxz
xchg
enter
aas
mov
je
pop
pusha
arpl
ret
daa
push
out
xor
and
mov
mov
test
shlb
psraw
mov
pop
mov
inc
mov
cmp
roll
scas
std
xchg
and
fdivs
imul
int3
push
inc
jge
pop
pop
lret
dec
fcomip
cmp
js
sub
cmp
cmc
jbe
push
dec
pop
cmpsb
lahf
fdivs
aam
data16
cwtl
shr
test
mov
dec
inc
cmp
shll
adc
mov
and
fildl
ds
or
enter
lods
imul
shl
es
adc
sub
adc
iret
cmpsb
pop
data16
jl
sub
adc
dec
mov
sub
mov
xchg
pop
cmp
repnz
icebp
mov
bound
adcb
les
or
inc
sub
ret
lea
or
loopne
orl
lahf
pushf
sbb
jae
out
icebp
leave
jae
test
hlt
shll
mov
jae
xor
leave
enter
jge
mov
mulb
lea
arpl
daa
loopne
sbb
je
hlt
add
scas
push
flds
cmpsl
sbb
divb
insl
aad
imul
mov
notb
movsb
mov
mov
push
xor
mov
jb
std
or
lock
or
jno
lods
xlat
push
fcomps
pop
pop
fcomi
pop
dec
sbb
cmpsb
fimuls
mov
inc
xchg
scas
mov
fscale
or
add
push
outsb
pusha
hlt
mov
sub
pop
or
and
daa
mov
jns
xchg
test
xchg
xchg
push
repz
xchg
rorb
sbbl
jns
cwtl
push
xchg
xchg
popa
fbld
mov
nop
orl
out
jg
jp
sahf
mov
int
mov
enter
push
xor
jmp
fildll
roll
push
inc
inc
iret
repz
aaa
fdivr
adc
mov
and
into
outsl
sbb
bound
icebp
mov
ljmp
xor
bound
cli
cmp
cmpsl
mov
mov
or
in
lahf
data16
test
dec
jp
sbb
jbe
lock
mov
mov
repz
imull
out
outsb
sub
cmpl
into
dec
mov
mov
add
stos
out
cld
cmp
lea
xor
stc
dec
ljmp
jle
mov
sub
shl
pop
es
xor
or
push
mov
jl
outsl
fldt
daa
imul
push
sarb
jg
fmull
and
gs
mov
push
enter
mov
or
ja
jne
or
fists
int3
inc
aam
adc
mov
lahf
add
mov
clc
pop
mov
mov
movsl
aad
sbb
sub
pop
xorb
es
push
cmp
inc
fcompl
cltd
mov
inc
out
pop
jbe
daa
loope
stos
fsubrl
add
pop
sbb
xor
mov
jmp
cmp
mov
xor
in
inc
jno
aas
pop
push
jnp
pop
sbb
push
fsub
shll
cmp
out
jnp
mov
push
outsb
inc
lret
dec
sarb
movsl
mov
dec
cs
aaa
dec
xchg
add
mov
std
adc
or
insl
ljmp
or
xlat
xchg
lods
pop
pop
cmp
pop
push
enter
lds
mov
mov
jbe
in
mov
dec
shll
nop
fcoml
and
xacquire
ret
adc
cmp
dec
addl
scas
je
xor
push
pop
repz
shrb
movsb
test
in
xlat
xor
repz
sbb
mov
icebp
xor
movsl
mov
xchg
mov
out
repnz
leave
shrl
cmp
sti
mov
inc
add
ljmp
cmp
and
clc
sbb
imul
int
clc
mov
pop
cltd
jecxz
dec
push
sarl
push
sbb
mov
negb
cmp
in
pop
sbb
push
cmpsl
out
dec
push
fldt
mov
dec
push
sti
mov
cmp
and
xchg
jl
inc
sub
push
cmc
in
mov
lret
sti
mov
addr16
jp
pop
scas
jge
cmp
repnz
pop
mov
enter
cmpsb
mov
cld
mov
mov
test
sbb
popf
cmp
jecxz
xchg
sub
loopne
lret
mov
sub
or
or
into
loopne
add
mov
mov
into
xor
lds
jb
xor
pop
or
push
add
mov
xor
fidivs
sub
mov
enter
xor
or
sub
loope
movsb
fdiv
iret
pop
pop
pop
inc
xchg
sti
jmp
push
dec
ror
or
pop
fxch
push
adc
imul
adcl
gs
aaa
es
dec
xor
js
inc
push
pushf
out
nop
or
in
sbb
daa
or
mov
jecxz
add
push
or
and
cmpsb
out
pop
jae
into
mov
pop
imul
inc
push
mov
rorb
add
adc
sbb
popa
and
cmp
shrb
cmc
sbb
pushl
mov
arpl
sub
mov
mov
add
hlt
mov
adc
dec
test
scas
das
pop
cmp
xchg
push
mov
mov
xor
jmp
sub
ljmp
adc
hlt
cmp
mov
fcmovbe
mov
push
dec
bound
cmp
enter
shrb
insl
pop
test
dec
mov
push
icebp
pop
lcall
pop
add
sbb
aad
scas
push
out
jns
and
shlb
addb
xlat
shll
shll
in
mov
pop
add
sbb
aaa
mov
lret
rcll
dec
xor
xor
dec
popa
mov
push
jo
add
jle
orl
out
inc
fstps
aas
subb
pushf
mov
xchg
jmp
sbb
int
movsb
push
cmp
imul
mov
cmpsl
out
rcrb
aad
mov
add
push
subb
test
sbb
cld
lea
push
mov
aad
popf
jo
fdivrl
lret
push
daa
rolb
xor
shlb
test
push
lods
inc
popf
andl
jae
addr16
or
pop
and
test
mov
add
hlt
pushf
and
push
and
mov
xor
lock
sbb
jne
in
push
adc
fidivl
dec
and
adc
pop
xor
jno
ret
adc
adc
sub
jg
cmp
dec
mov
push
stos
mov
pop
scas
push
inc
in
xor
jge
cltd
xlat
rcll
cli
lret
sub
jae
pop
mov
xchg
inc
pop
add
mov
and
lods
jmp
pop
or
cmp
addl
test
push
and
jp
vandnps
ret
xchg
inc
fucom
shll
cmpl
jl
jbe
jmp
test
cmc
dec
pop
inc
test
pop
lods
inc
lds
adc
in
pop
adc
pusha
pop
sbb
int
fs
daa
mov
popa
push
dec
mov
ss
test
push
sbb
jae
xchg
js
test
cld
in
std
dec
mov
jae
sbb
xor
xorb
stos
inc
sarl
jbe
sbb
test
ja
sbb
lcall
fnsave
inc
xor
mov
movsl
push
out
jmp
pop
xor
movsb
mov
inc
orl
xchg
inc
repnz
cmp
cltd
flds
cmp
jecxz
repnz
inc
pop
mov
aam
mov
stc
jge
or
push
scas
mov
adc
nop
adc
pushf
cmp
mov
dec
push
clc
lcall
or
addr16
test
movsl
xchg
mov
xchg
inc
mov
and
pop
add
jne
jmp
sahf
es
ja
lret
icebp
ficoml
movsb
cltd
mov
cmp
push
xor
leave
sub
sbb
push
add
or
mov
fs
cs
imul
jge
ljmp
out
dec
dec
cmp
mov
pop
pop
jnp
out
lahf
xchg
add
sbb
pushf
stos
xor
push
xchg
cs
les
pusha
cmp
or
sbb
cmp
daa
inc
or
icebp
cmp
cmp
loope
outsb
cmp
mov
hlt
adc
and
and
sub
inc
rep
out
adc
xor
out
mov
and
sbb
cmpsb
or
mov
mov
mov
lcall
mov
bound
mov
cwtl
arpl
sti
cmp
fidivrs
insb
out
dec
outsb
fs
lock
hlt
nop
pop
test
int3
mov
and
dec
or
cs
je
lret
int
sahf
pop
mov
mov
cmpsb
inc
add
xchg
inc
test
fcomp
jecxz
push
push
mov
sub
test
jb
int
jg
pop
imul
push
insb
sarl
mov
mov
mov
xor
test
sbb
addr16
adc
dec
orb
mov
xor
pop
lock
stos
ss
outsl
adc
adcb
cmp
cmp
inc
mov
outsl
cmpsb
mov
pop
loope
and
mov
mov
sbb
inc
call
sbb
decl
mov
jbe
sbbl
and
divb
pop
and
lods
inc
sub
pop
cmp
insl
ffree
adc
imul
pop
xor
movsb
or
and
jne
dec
stos
outsl
imulb
leave
loope
mull
sub
js
shll
xchg
shlb
bnd
add
cwtl
pop
xchg
fidivl
subl
mov
add
arpl
xchg
cli
data16
stos
and
fcomi
cmp
aad
sbb
lcall
or
sti
movsb
lods
inc
pop
pop
inc
ss
push
loop
cmp
add
jne
test
movsb
icebp
xor
aam
outsl
adc
mov
mov
jb
aam
filds
cmp
icebp
add
sti
aaa
stc
xor
je
sti
push
xchg
sbb
cmpsl
dec
xor
fimuls
jbe
push
or
pop
iret
aas
jp
add
rcr
imul
cmp
insl
and
xchg
push
mov
roll
je
pop
imul
js
cmp
sbb
and
aad
sub
rorl
call
aaa
jno
rclb
test
outsb
arpl
and
fnsave
dec
popa
dec
mov
adc
add
gs
jbe
data16
cwtl
add
lret
add
xchg
sub
popa
sub
std
mov
imulb
jns
jne
rolb
push
cltd
jbe
and
pop
inc
bound
inc
mov
adc
fidivl
jecxz
std
lods
sahf
shll
jecxz
mov
or
clc
cmp
repnz
lahf
pop
stos
ss
fmuls
arpl
into
std
sarb
in
sbb
insb
jg
test
test
jl
ficompl
xor
mov
jmp
mov
xchg
lods
outsb
xchg
rol
sub
imull
xchg
dec
int
mov
insl
test
or
aam
mov
test
pop
js
mov
mov
push
aam
repz
daa
pushf
sbb
pmaxsw
or
sub
xchg
pop
sub
mov
rcrb
xchg
lock
and
orl
test
mov
int
xor
push
sbb
push
sub
push
dec
arpl
sbb
pop
sbb
lds
xchg
adc
add
fstps
mov
sub
arpl
sub
das
mov
mov
pop
mov
mov
mov
outsw
stc
push
rolb
inc
cmpsb
imul
sub
daa
cld
or
iret
dec
cmc
or
xchg
mov
enter
mov
repz
test
scas
pop
adc
pusha
inc
stos
jbe
aad
fnstcw
xlat
mov
sub
pop
mov
mov
add
adc
mov
loope
ss
lea
fcmovnb
testw
fistpl
cmp
dec
or
or
shlb
lret
jle
cmp
jmp
jl
orb
scas
dec
shl
jb
out
mov
add
dec
repnz
add
xor
add
add
in
dec
mov
jb
orb
mov
testb
mov
jo
les
aas
mov
out
repz
and
push
insb
je
jg
pop
loope
jecxz
mov
mov
mov
push
or
xchg
push
push
dec
adcl
shrl
inc
cmp
mov
scas
and
dec
ficompl
gs
icebp
shrl
addb
adcl
and
pusha
sub
sti
fwait
scas
jns
call
fdivrl
js
sbb
pop
cmp
pop
loope
mov
xchg
mov
divl
push
sbb
stos
shll
movsl
or
sbb
insl
mov
fcmovbe
ss
push
jns
xchg
sbb
xor
cltd
dec
and
mov
xchg
jb
mov
mov
insl
mov
js
jle
dec
jb
pop
loope
add
pop
fisubs
in
xchg
jp,pt
and
push
js
mov
arpl
cmc
movsl
dec
jp
nop
hlt
and
lods
test
push
ja
xor
pop
pushf
push
jle
cmc
lret
stos
lds
mov
cltd
mov
sbb
sahf
nop
xchg
lahf
mov
imul
sbb
mov
sub
sahf
loop
inc
sub
hlt
dec
adc
sbb
adcl
movsb
pop
ja
subl
out
icebp
xor
in
adc
jno
sahf
inc
cmp
ljmp
call
roll
adc
push
sbb
lods
js
lret
test
mulb
dec
dec
imul
pop
pusha
addb
fwait
jmp
xchg
sahf
scas
jnp
mov
lods
cmp
or
popa
sbb
push
xor
jle,pt
pop
xchg
sub
fsubrs
and
das
xor
mov
adcl
js
sub
mov
mov
orl
inc
nop
test
cwtl
jno
test
jae
stos
inc
stos
jg
lret
push
mov
cwtl
push
rcl
add
add
xchg
loopne
add
push
or
inc
into
fisubl
pop
push
jno
sub
pop
mov
out
add
dec
or
mov
cmc
fldl
addl
decb
cs
dec
testb
push
mov
shrb
lods
add
sbb
add
leave
shrb
or
dec
clc
adc
xchg
dec
jbe
mov
cmp
icebp
fisttps
pop
bound
mov
push
dec
jb
bound
in
jle
mov
mov
or
sbb
rcll
mov
adc
jecxz
daa
cwtl
fiaddl
ss
xchg
test
movsb
mov
icebp
lahf
ja
push
sub
mov
or
repz
push
ficoms
sub
sarb
fsubrl
dec
pop
adc
adc
xchg
pop
jbe
ss
pop
adc
mov
in
jo
cmpsl
cltd
fwait
idivl
iret
subb
dec
push
stos
push
lods
and
arpl
push
test
mov
xor
sahf
push
int3
add
insb
xor
jp
push
sbb
and
jmp
cmp
pop
stc
aaa
push
mov
ret
push
aas
push
sbb
pop
adcb
add
pop
adc
cltd
movd
or
push
or
repnz
int
arpl
push
imul
insb
rcll
dec
jns
mov
push
or
fwait
repnz
sub
xor
push
sbbb
sbb
icebp
test
dec
sti
repnz
sub
jmp
mov
and
lret
jl
loopne
bswap
movsb
lret
xor
mov
sub
mov
cmp
lcall
test
pop
mul
jle
std
push
jbe
xchg
jb
cmp
stc
stc
adcl
sti
jmp
ja
pop
lret
pmaxub
jmp
xchg
lock
xor
cld
mov
cld
call
les
sti
aaa
out
nop/reserved
mov
dec
shrb
out
je
jl
loope
inc
in
or
aam
ja
push
shl
cmc
jae
cmc
bound
lahf
add
mov
jne
lods
jge
outsb
fdivrs
fstps
xor
jmp
mov
mov
in
int
hlt
add
in
mov
xor
and
fadd
sub
or
leave
pop
mov
roll
or
cmpsl
jb
xchg
mov
mov
andb
mov
gs
and
jns
in
add
int3
push
lds
dec
idivl
dec
jecxz
pop
jnp
stos
test
ljmp
fsubrl
andl
adc
outsl
movsb
mov
sbb
ljmp
sahf
jb
fistpl
loopne
and
leave
iret
mov
enter
xor
daa
jbe
adc
imull
das
and
leave
sahf
cmc
cmc
shl
xor
addr16
popf
loope
ja
clc
fiaddl
in
fdivrl
pop
push
push
pop
mov
inc
aad
cmp
fwait
test
cmpsl
fucomi
stos
xchg
shl
insb
pop
mov
lahf
icebp
xchg
mov
ret
std
mull
adc
xor
jmp
pop
cltd
xor
pop
add
rorb
rcll
xor
cmp
fcomi
xor
stc
stos
or
cmp
fs
sub
add
mov
jno
sub
out
outsb
or
stos
movsb
xlat
sub
jno
outsl
dec
test
xchg
aas
loope
and
enter
cmpsl
pop
pop
aaa
mov
out
sub
add
pushl
icebp
jg
xor
mov
stos
inc
enter
imul
push
push
sub
outsl
aaa
lret
test
add
xor
repnz
fs
imul
and
pop
js
add
in
jnp
xor
jne
repnz
mov
imul
out
dec
push
sbb
mov
mov
pop
sti
imulb
cmp
mov
cmp
mov
ret
adc
pop
xor
ljmp
or
outsl
xor
lds
rcl
mov
mov
cli
js
iret
popa
addr16
xchg
repz
hlt
jno
out
ss
dec
xchg
test
ds
push
rcrl
negb
xor
sbb
mov
mov
insb
ss
ficompl
icebp
push
push
mov
out
inc
fwait
jno
jl
stos
dec
out
mov
pop
mov
sub
cmpsl
add
icebp
lods
push
pop
lahf
dec
xchg
mov
ljmp
inc
dec
jb
mov
mov
mov
aaa
lahf
push
mov
sub
push
daa
mov
xchg
jmp
jbe
mov
in
or
mov
ret
and
push
jg
mov
sahf
in
incb
xor
adc
sbb
jmp
xchg
fwait
mov
xchg
mov
addl
push
push
repz
fs
add
fucomi
test
lret
orl
dec
ds
ljmp
outsl
loop
or
movl
fs
es
mov
xor
xlat
pop
mov
iret
sub
fcomi
divl
sub
add
push
leave
fisttps
divb
out
in
imul
test
out
mov
jnp
mov
cmp
pop
cltd
loope
push
xor
stc
pop
in
lods
mov
ja
sti
subb
mov
mov
jmp
mov
adc
lret
xor
movsb
test
add
mov
data16
inc
pop
pop
aas
jbe
mov
ljmp
std
push
and
adc
cltd
cmp
jns
fcomip
pop
daa
push
es
jbe
aam
xor
nop
and
push
loope
bnd
cld
mov
and
jge
aas
jecxz
mov
sbb
bound
cwtl
push
jmp
push
call
pop
les
dec
dec
sub
test
pop
rcrb
orl
jecxz
pop
cmp
dec
dec
clc
out
mov
and
imul
dec
jbe
add
mov
jle
add
adc
push
push
insl
pop
push
sbb
ret
push
std
adc
fs
rclb
lret
push
adc
add
lret
cmp
sahf
repnz
into
and
in
xor
mov
or
sub
mov
xchg
mov
gs
dec
daa
pusha
jmp
sbbb
icebp
add
sbbl
mov
mov
and
push
or
mov
mov
adc
xchg
and
sbbb
sub
test
cltd
lods
dec
xchg
loop
pop
in
xchg
xor
bound
jbe
shrl
xor
call
lds
icebp
cwtl
mov
lea
enter
movsb
xchg
or
inc
fcmovnb
cmp
test
mov
push
test
dec
push
jl
fs
push
xlat
in
or
in
lret
cmpsl
sub
dec
stc
push
pop
int
inc
ret
imul
pop
ficompl
loope
jnp
xchg
icebp
pop
leave
mov
jnp
jne
nop
out
arpl
loop
add
shrb
aad
and
flds
push
imul
fstl
data16
sub
xor
ja
mov
dec
adc
xchg
and
cs
adc
inc
xor
je
pop
jne
fsubr
cmp
add
xor
jns
int
mov
adc
dec
mov
inc
add
cwtl
sbb
shlb
les
movsb
dec
fmull
dec
add
mov
mov
or
sub
inc
movsl
push
ja
movl
adc
or
and
mov
cltd
mov
sub
cmp
inc
out
mov
scas
xchg
cmp
pusha
stos
sahf
pushf
call
mov
jb
ret
pop
or
push
xchg
imul
cwtl
mov
dec
xorl
setb
xchg
ljmp
mov
jle
subb
stos
sub
mov
xchg
fidivl
cmp
add
push
into
mov
mov
xor
movsb
iret
mov
add
mov
or
imul
dec
mov
ror
xchg
inc
jp
cmp
add
stc
dec
inc
popa
lcall
mov
jnp
scas
push
dec
inc
pop
adc
mov
push
ds
popa
dec
mov
sbbb
mov
clc
dec
test
rol
mov
or
dec
aam
pop
or
hlt
dec
xlat
inc
jae
sahf
rcrb
out
adc
ljmp
lret
push
popa
jmp
mov
imul
scas
inc
cs
pop
pop
sbb
int
insl
adc
lret
jecxz
mov
fistl
mov
xchg
loope
add
jg
jmp
mov
mov
lock
mov
mov
pop
jecxz
or
scas
dec
aad
fadd
cmp
aaa
out
inc
sub
out
jae
sub
test
popa
dec
ds
imul
ljmp
es
mov
in
push
pop
mov
lcall
stos
push
jp
xchg
dec
arpl
inc
stos
fisttps
iret
jg
ror
pop
dec
xor
push
std
rcr
xor
cmp
cwtl
scas
loope,pn
inc
sti
xchg
mov
cmp
repnz
orl
fcomp
or
sub
test
test
jle
jecxz
sarb
imul
or
or
dec
xor
int3
out
aaa
mov
lods
call
dec
stc
scas
into
fsubl
int3
xchg
daa
cmp
rcrl
inc
dec
mov
push
cwtl
adc
sub
cmp
cwtd
xchg
das
mov
xchg
ret
inc
out
jae
lock
xchg
and
push
or
mov
lret
mov
sbb
call
jb
ret
inc
or
out
nop
shlb
dec
lahf
in
pop
rcr
inc
jb
and
out
inc
clc
sub
adc
rcrl
jb
fs
out
pop
pop
vhaddps
and
dec
insl
cs
lea
fnstenv
pushf
and
nop
test
pop
repz
mov
mov
dec
fbld
ds
xchg
lods
jno
pop
in
and
roll
cmp
xor
adc
lods
pop
pop
xchg
ja
flds
jp
mov
mov
sub
pop
dec
fisttpl
in
adc
and
jmp
push
or
xchg
in
push
sahf
cwtl
and
shlb
adcb
dec
inc
subb
fistps
leave
xchg
loop,pn
xchg
pop
je
mov
inc
xchg
lds
fiaddl
mov
loop
int3
push
sub
xor
into
sub
stos
ds
push
into
sub
mov
pop
cmp
in
lret
ja
repnz
in
xor
or
in
imul
sbb
gs
ds
cmp
mov
xchg
mov
test
dec
and
cwtl
cmp
xchg
cmpsl
inc
dec
stc
jae
lret
data16
lods
mov
push
pop
sahf
jb
jne
stc
in
push
mov
cs
aaa
and
test
adc
xchg
inc
data16
adc
insl
ja
mov
movsb
or
nop
adc
push
popf
sub
adc
mov
andb
pop
jno
fmul
adc
enter
push
jp
enter
dec
in
jnp
mov
push
xchg
rolb
cmp
pushf
imul
xchg
ret
cmp
jg
inc
adc
lcall
shlb
and
clc
push
jecxz
jae
aad
dec
inc
mov
js
sbb
ret
mov
loop
lock
test
mov
dec
dec
daa
scas
add
push
lock
inc
ss
sbb
mov
movsb
clc
pop
dec
mov
or
mov
movsl
jl
pop
push
hlt
loopne
push
sbb
repz
cli
loope
mov
jb
mov
lods
xchg
jno
xchg
mov
pop
stc
cli
insb
outsb
sti
inc
dec
sbb
stos
mov
cmpb
inc
pop
shld
push
jecxz
or
cld
cmp
push
mov
push
or
pop
mov
int
add
jae
push
loop
cmp
sbb
jecxz
arpl
adc
add
dec
insl
dec
enter
cmp
xchg
or
ja
roll
fstps
pop
mov
cmc
std
add
mov
jae
sbb
pop
sub
pop
gs
push
bound
pop
je
xor
add
sbb
rolb
leave
test
out
mov
movsl
aam
cmp
movlps
pop
xchg
dec
cwtl
push
pop
sbb
pop
lahf
pop
fbstp
pop
push
mov
or
dec
imul
dec
xlat
clc
add
imul
les
pop
pop
mov
sti
addr16
sub
and
sub
sarl
addr16
scas
stos
nop
pop
xor
inc
push
cltd
aam
xor
mov
shrb
add
mov
dec
xor
push
jg
xor
pop
leave
cmp
mov
dec
push
fsubr
aam
inc
fnstenv
or
mov
jb
fs
or
cmpsl
je
ret
add
mov
das
pop
nop
hlt
fprem
lods
push
adc
test
lret
insb
pop
clc
sbb
mov
cmp
xlat
shrb
inc
add
or
out
loope
repz
fistpll
test
xchg
pop
jp
outsl
loopne
cmp
mov
mov
adc
in
push
in
dec
shlb
arpl
mov
mov
rcrb
adc
push
dec
pop
jge
push
out
mov
test
xor
inc
fldcw
sub
mov
adcb
decl
inc
mov
jbe
out
les
xor
repnz
push
aaa
xchg
cwtl
xchg
mov
dec
out
aas
jno
and
addr16
fcoms
push
lret
inc
xchg
fisttpll
cli
xchg
stc
ret
lcall
dec
cmpsb
aam
daa
mov
inc
dec
dec
leave
jmp
jl
cwtl
mov
push
push
dec
mov
rorl
mov
in
imul
scas
mov
cmp
add
testb
subl
sub
incl
sbb
dec
jp
enter
sbb
pop
hlt
cmp
ljmp
movsl
pushf
add
and
stos
add
jle
push
pusha
xor
add
adc
mov
push
xchg
aad
ficoml
cwtl
cld
xchg
rcl
popa
sbbl
dec
sub
adc
out
push
adc
pop
test
and
push
dec
xchg
dec
add
sar
add
sbb
sub
mov
aam
test
dec
mov
xchg
mov
stc
sub
int
std
mov
push
dec
arpl
divl
fwait
shl
ficoms
icebp
and
aas
xchg
mov
inc
adc
jmp
fisttps
sub
outsl
lret
cmpsl
adc
push
inc
mov
scas
mov
cmpsl
mov
pop
sbb
test
push
inc
push
and
push
dec
xchg
sub
addl
push
shrb
sub
mov
mov
xor
pop
enter
in
rolb
mov
mov
pop
gs
in
xorb
mov
inc
jbe
sbbl
scas
cmpsb
pop
add
xor
jbe
add
mov
mulb
xchg
pop
aam
dec
and
bound
movsl
cmc
push
loopne
xor
lods
outsl
pop
cld
into
daa
test
rcrb
imul
pop
ret
cltd
xor
imul
pop
inc
decb
xchg
cmpsl
je
test
movsl
add
xchg
pop
test
bound
push
aad
jbe
add
mov
ja
inc
jb
shr
jnp
jl
xor
push
jmp
mov
jns
add
lods
addr16
push
xor
ss
test
xchg
cmpb
adc
dec
cmp
xchg
mov
cmp
test
in
jmp
lcall
add
cmp
push
into
sub
cmpsb
repnz
bound
mov
jle
scas
cmc
dec
cmpsl
mov
les
mov
gs
and
dec
cs
jecxz
outsb
mov
mov
sbb
cmp
leave
and
mov
cmp
pop
ret
push
xor
lods
jl
xchg
mov
lret
lret
jae
mov
hlt
or
scas
pop
aas
stc
pop
into
mov
cmc
push
xor
or
inc
dec
add
movsl
jnp
mov
data16
push
sub
mov
orl
add
pop
and
mov
xchg
and
popf
add
cmc
jmp
insl
pop
cmp
sbb
dec
cmp
cmp
cmp
jae
aam
push
cmp
cltd
dec
movb
ljmp
stc
cmpsb
data16
loopne
mov
dec
cmp
das
gs
mov
inc
push
xor
jle
lahf
fimull
orb
lahf
js
insl
dec
push
arpl
inc
jbe
iret
xorps
xor
je
xor
xchg
push
xor
orl
mov
dec
inc
iret
mov
aad
loopne
inc
data16
fwait
or
test
outsl
adc
mov
mov
push
lock
and
jmp
and
enter
hlt
rclb
or
push
les
xchg
cmpsl
mov
jmp
inc
xorl
cmc
outsb
loopne
add
xor
cmp
jecxz
jecxz
push
int
pop
mov
ja
dec
cld
and
outsl
aaa
ret
setbe
jecxz
enter
hlt
dec
into
or
bnd
rcrl
jb
push
iret
aaa
xor
sti
fdivrs
pop
sub
test
cld
mov
cmpsl
mov
inc
sub
fdivl
in
push
xor
jnp
cmp
dec
addr16
xorl
test
mov
cltd
dec
subl
out
mov
pop
pop
dec
inc
scas
jl
repz
pusha
jae
vpunpcklqdq
cli
sub
inc
push
mov
ffree
sbb
stos
sub
insl
mov
out
fnstcw
aas
movsl
mov
ret
jbe
jmp
pusha
nop
shrb
out
cltd
mov
in
dec
shlb
cmpsb
pop
mov
pop
stos
pushf
cmpsb
aaa
out
test
lods
and
pushf
jae
xorl
aaa
int
lods
es
inc
mov
jge
add
ja
pop
push
addr16
sahf
pop
xor
imul
mov
and
fsubrl
jge
call
mov
and
pushf
ja
test
sbb
mov
jmp
test
movsl
sub
insl
xchg
in
lods
push
insb
loope
mov
in
add
inc
hlt
xor
mov
je
pop
pop
adc
dec
lret
icebp
int
mov
push
dec
test
mov
popa
inc
mov
mov
mov
xlat
loopew
xchg
xor
dec
inc
sti
sti
fiaddl
rclb
and
jp
cs
dec
daa
xor
jg
fisubrl
jg
mov
adc
add
cmp
imul
mov
or
pusha
mov
or
orb
in
cmpsl
xor
sbb
mov
mov
nop
sub
hlt
fcompl
leave
mov
jo
cmp
inc
shll
aam
mov
pushf
inc
aas
mov
xor
in
clc
push
dec
arpl
pop
mulb
jge
out
push
or
jmp
iret
stos
lcall
lods
inc
cltd
fldcw
call
jecxz
sub
sub
mov
in
push
pop
xor
out
dec
sub
in
popf
aaa
stos
popa
mov
sbb
push
fldz
gs
sub
jb
and
push
test
fisubrs
fs
in
fildll
idiv
fisubs
mov
mov
out
stos
jo
dec
sti
jns
inc
mov
mov
imul
push
dec
or
out
loope
inc
sub
mov
inc
subl
pushf
call
add
sub
daa
push
rcll
jae
add
mov
lods
icebp
mov
push
sbb
stc
int3
dec
mov
loop
xchg
jb
lea
rcl
divb
sub
aas
ja,pt
push
shrl
lcall
push
imul
mov
ret
push
push
adc
sbb
insl
stc
mov
call
xor
mov
mov
insl
lcall
inc
mov
xchg
es
movsb
pop
inc
shll
loop
ja
mov
lods
lods
cmp
and
aaa
and
push
and
mov
out
dec
dec
sub
les
outsb
mov
xchg
and
jmp
pusha
shld
xchg
mov
jge
add
jnp
lds
stos
inc
mov
inc
ja
faddl
xor
adc
movsl
xor
adc
arpl
push
add
in
jecxz
jecxz
repnz
or
test
sub
es
mov
mov
push
mov
cmp
sbb
xor
in
lret
adc
out
push
add
push
outsb
add
lret
fwait
aaa
mov
out
ret
aas
out
pop
lahf
enter
inc
js
sbb
xchg
out
mov
jne
js
or
jmp
sbb
imul
sbb
jae
pusha
je
inc
call
push
pop
xchg
shr
push
fisubl
dec
iret
push
outsl
cltd
inc
jle
out
jmp
cs
test
addr16
std
imul
add
dec
test
pop
arpl
fadds
mov
shl
repnz
call
nop
jnp
rorb
ficoml
dec
jns
ds
dec
aad
cmc
fdivl
imul
xor
push
fists
iret
andl
and
pop
sbb
sbb
mov
fisubs
adc
mov
lret
jmp
pop
rcll
pop
jg
bswap
sarl
and
int
pop
cmp
mov
andl
pop
icebp
dec
loope
push
popa
jbe
inc
popf
std
movsb
inc
mov
jmp
jecxz
mov
insl
popf
movsl
inc
push
jno
loopne
mov
dec
pop
fdivl
xchg
xor
icebp
negb
call
lods
push
repnz
test
negl
pop
adc
das
sbb
das
dec
pusha
or
bnd
out
lds
cmp
ja
test
mov
lea
sub
or
mov
clc
cltd
mov
std
lods
scas
pop
pop
lahf
mov
add
and
loope
jmp
mov
mov
int3
in
inc
push
dec
outsl
out
cmp
or
cmp
xor
pop
pop
inc
sub
cmc
push
stc
add
xor
icebp
cmp
sbb
mov
add
xchg
cmpl
in
jp
rcll
in
adc
cmp
pop
je
xchg
jno
jne
clc
and
or
or
mov
fdivl
pop
push
or
fsts
testl
out
push
mov
mov
sub
daa
arpl
scas
dec
jno
mov
pop
cmp
xchg
lret
xchg
dec
out
pop
bswap
fistpl
fdiv
incl
out
xchg
pusha
into
loop
sahf
cmpsb
sti
mov
stos
stos
xlat
inc
cmp
pop
pop
jecxz
popa
cwtl
lods
sub
fs
fisubl
leave
and
inc
cmp
cmp
adc
mov
jge
pop
pop
rorl
fildll
pop
cmp
leave
pop
lods
outsl
jp
lret
jp
mov
add
mov
add
rorl
jo
jge
lods
ss
pusha
notb
sbb
jbe
movsb
rolb
sbb
or
fs
sti
imul
push
or
es
dec
mov
cmp
inc
mov
arpl
stos
ret
test
popa
mov
out
jo
daa
sub
lods
out
orl
std
mov
sbb
and
xchg
movsb
mov
push
pushf
cli
jl
mov
pusha
insb
movsb
int3
nop
mov
bnd
jns
push
mov
daa
mov
or
je
inc
mov
pop
jp
sub
cmp
addr16
std
out
daa
das
jl
push
cmp
ret
dec
lret
fisubl
or
test
jg
ret
sbb
push
pop
pop
inc
sub
adc
ja
pop
movsl
pop
inc
pop
xorb
sarl
insl
popa
sub
sbb
popa
sub
stos
dec
mov
leave
outsb
out
sub
jns
mov
sbb
mov
outsb
mov
inc
movsb
push
mov
mov
stc
mov
or
mov
inc
ja
cltd
lds
xor
sub
stc
xchg
pop
sti
lahf
test
mov
sti
or
push
push
sbb
sub
jnp
movsb
cmc
push
xchg
add
jae
inc
xchg
cli
loope
in
xchg
pop
jle
addr16
jnp
xor
test
pusha
pop
mov
xchg
ud1
push
dec
add
dec
mov
pop
pusha
stos
sbb
push
xlat
fsubrp
dec
dec
inc
jle
fs
in
pop
mov
mov
movb
and
adc
pop
dec
mov
ja
lret
sub
movsl
pop
popa
pushf
fistpl
popa
repnz
pusha
cs
stos
cmp
aas
dec
stc
jmp
xchg
test
lods
cmpl
test
mov
imulb
insl
aas
aaa
dec
mov
push
pop
mov
xchg
pop
cmc
add
cmp
jno
mov
ret
push
pop
pushf
mov
hlt
xchg
push
push
and
fwait
push
test
sub
leave
sbb
pop
sub
loope
ret
cmp
and
jb
mov
jmp
lds
push
call
scas
test
inc
fs
stos
cmp
cmp
dec
or
xchg
adc
sbb
aas
cmp
sub
scas
add
mov
xchg
loope
mov
stos
int3
pop
cmp
or
loopne
arpl
fwait
xor
push
pop
and
enter
out
or
or
xor
ret
cwtl
aas
data16
addr16
xor
xchg
ljmp
cltd
add
lock
test
out
mov
push
cwtl
data16
and
roll
ds
rcrl
lods
xchg
je
mov
mov
sbb
sub
lret
call
bound
mov
movsl
and
imul
sbb
out
or
stos
and
mov
loop
jg
in
fadds
dec
sbb
xor
sub
push
scas
or
bound
lods
fcoms
push
and
mov
pop
out
mov
add
mov
add
xor
dec
mov
add
bound
mov
lods
jg
jns
mov
test
or
xchg
scas
push
pusha
cli
ret
icebp
out
subb
lds
or
lcall
sbb
jge
push
or
pop
inc
addr16
sub
cmpsb
test
mov
cmp
jle
bound
adc
cmpb
cwtl
loop
sbb
outsb
sub
fistps
sub
jno
fstpl
mov
xor
nop
stc
add
aam
mov
ret
and
cmpsl
xchg
and
dec
sub
xadd
mov
cld
sub
add
sub
dec
pop
jg
and
xor
lcall
out
xchg
ss
dec
mov
sub
jns
lods
jnp
insb
enter
rclb
jb
xchg
lcall
call
or
push
inc
pop
mov
mov
push
js
cmp
test
mov
js
dec
sbb
pop
sarl
mov
mov
insl
add
int
or
popf
mov
nop
push
inc
std
bound
lret
cmpsb
cmp
add
movsl
add
mov
add
mov
and
addr16
xor
jecxz
sbb
roll
or
test
add
mov
out
lods
jge
push
push
push
addr16
cmp
lcall
adc
stos
mov
jb
lock
neg
test
pop
mov
cmp
inc
dec
leave
mov
sub
mov
cmp
sti
sti
push
sub
xchg
push
fsub
pop
xchg
repz
lea
in
iret
jno
filds
mov
stc
jecxz
adc
pop
inc
repnz
or
dec
lods
js
or
in
push
popa
dec
ret
mov
pop
pop
pop
cli
divl
inc
imul
cmpb
sti
dec
sbb
hlt
push
and
shl
or
scas
cli
lahf
inc
in
xlat
cmp
pop
adc
lods
aad
jge
jbe
push
mov
jl
xchg
add
jmp
dec
test
mov
cmpsb
jne
add
jns
mov
mov
adc
pop
daa
inc
xchg
inc
inc
je
repz
add
push
shlb
pusha
xor
gs
psrld
push
or
pop
shll
nop
enter
je
ljmp
bound
pop
sub
xor
aam
enter
scas
sahf
loop
sub
push
mov
in
mov
adc
decl
stos
ss
sahf
imul
mov
adc
mov
test
fsubs
xor
pop
dec
pop
xorl
daa
popa
aam
or
es
imul
adc
sub
adc
pop
push
outsl
movsl
dec
jne
inc
sbb
add
nop
jecxz
jp
adc
xlat
sub
hlt
hlt
clc
jl
mov
jl
insl
stos
or
stos
or
jo
xchg
mov
pop
arpl
ror
jns
pop
or
jmp
sahf
in
aaa
into
mov
jmp
inc
xchg
jno
outsl
and
mov
xchg
hlt
scas
xlat
push
xchg
cmpsl
icebp
cld
repnz
cmp
cld
jnp
mov
jne
xchg
out
push
movsb
out
nop
out
hlt
popa
push
pop
jbe
pop
in
jb
mov
push
adc
sahf
enter
popa
mov
xorb
arpl
add
test
popa
scas
cwtl
jmp
in
jne
add
jbe
mov
cli
adc
daa
in
mov
je
cld
imul
or
dec
aas
cmp
mov
test
std
les
xor
push
pusha
xchg
xlat
icebp
or
ja
rcll
insb
mov
add
shlb
push
adc
movsl
sbb
arpl
fs
stos
aas
stc
push
xchg
mov
adc
xchg
testb
loope
out
push
data16
jmp
mov
into
xchg
inc
pushf
dec
sti
out
adc
dec
lret
dec
in
dec
aaa
cmc
ljmp
push
ds
dec
jge
out
push
and
dec
fs
les
add
push
leave
mov
lahf
test
xchg
jns
stc
in
movsb
jle
or
cli
pop
mov
push
fwait
stc
loopne
sti
mov
out
mov
xchg
testb
mov
fwait
mov
mov
push
es
dec
enter
in
sub
mov
push
fstp
jle
ret
cli
je
gs
push
rorb
ja
test
mov
inc
ljmp
xor
out
shlb
insb
push
imull
fdivrp
jp
xlat
add
or
sbb
jmp
scas
xchg
or
push
dec
pop
call
repnz
mov
add
nop
push
fistl
cmp
movsb
mov
mov
es
into
mov
mov
pop
dec
push
stos
sub
jg
mov
imul
divb
imul
jmp
sub
scas
dec
add
rolb
pusha
stos
lds
sub
add
mov
xchg
cmp
xchg
adc
push
pop
xchg
jo
or
jne
fisubrs
ljmp
loopne
les
mov
pop
inc
fcmovnu
jmp
shll
mov
sbb
push
mov
movsb
xchg
adc
ret
inc
or
mov
out
movsb
mov
push
lods
daa
xchg
scas
sbb
pop
fs
popf
pushf
mov
ret
dec
adc
clc
xor
mov
dec
aaa
imul
stos
xchg
xchg
mov
xchg
int3
ret
jb
fnsave
outsb
mov
cmp
dec
mov
sbb
imul
lods
andl
mov
leave
jl
jno
mov
punpckhwd
out
sar
lcall
mov
mov
jno
mov
decl
dec
jecxz
jle
orb
pop
addl
or
mov
add
add
call
cmpsb
in
sbb
sbb
pop
lods
push
int
mov
jle
mov
dec
jo
testl
cld
adc
cmpb
mov
cmp
push
ds
mov
add
int
arpl
test
mov
jmp
cmp
xchg
lea
pop
sti
jp
jle
loope
adc
jl
nop
jge
mov
jns
mov
inc
xchg
push
popa
inc
imul
mov
pop
mov
jle
sbb
int
mov
push
inc
inc
jp
mov
popf
int3
xor
xchg
bound
mov
lret
lea
arpl
add
inc
lret
mov
cmp
mov
sbb
or
sub
cmp
mov
flds
test
mov
ja
cmp
stos
sarl
pop
hlt
adc
xchg
dec
xchg
dec
pop
call
jns
imul
xchg
pusha
jle
das
mov
ret
push
clc
sub
stos
jge
repnz
outsl
mov
sub
sub
inc
aaa
xchg
js
or
rol
xchg
mov
xchg
popf
mov
dec
in
or
lock
cmc
not
pop
sbb
out
cmc
push
or
push
mov
cmp
call
add
icebp
stc
sbb
mov
decl
mov
xchg
jbe
iret
jb
aam
adc
pop
push
ret
shlb
jne
and
jo
jne
lea
sbb
sbb
and
lds
mov
push
sub
ja
loope
mov
mov
ret
or
clc
mov
int
in
mov
lods
add
and
cmpsb
cmpsb
fwait
pop
sarl
jecxz
pop
dec
mov
outsb
aam
fnstenv
in
adc
jae
insl
jno
scas
xor
out
in
jg
mov
mov
inc
mov
fcom
popf
xchg
lea
loope
jbe
sbb
lcall
sub
lds
mov
rorb
dec
inc
xchg
adc
hlt
mov
xor
lahf
xchg
push
roll
mov
int
movsb
pusha
les
add
cmp
orps
pop
or
enter
push
sub
repnz
mov
push
rcr
xor
cmpsb
sub
lret
jge
fldenv
sbb
mov
xor
iret
packuswb
mull
add
or
mov
bnd
cmp
add
insl
and
gs
lods
das
bound
jecxz
in
in
ret
jno
pushf
fstpl
mov
loop
xchg
jne
mov
mov
xchg
pop
mov
xor
jo
sub
lods
cs
scas
shrl
sbb
mull
imul
dec
aam
adc
adc
dec
gs
lret
cli
jecxz
jle
adc
dec
lods
sbb
push
inc
ret
mov
lcall
cmpsl
push
mov
repz
push
mov
aaa
and
mov
hlt
dec
lcall
push
pop
pop
arpl
mov
divb
ja
dec
xor
pop
bts
pop
stos
fcmovb
adc
push
lods
enter
sub
add
inc
inc
xor
cmp
pop
mov
adc
mov
sbb
test
shl
xchg
out
lret
fldpi
into
sub
je
jno
in
mov
dec
push
sar
out
jbe
sub
xchg
ret
rcl
xor
xchg
xor
cli
add
jnp
inc
rcrl
mov
insl
shl
repnz
push
adc
mov
fcomps
mov
sub
in
fs
pop
test
mov
sub
sub
jg
nop
decb
cmp
xor
mov
mov
subb
mov
adc
push
js
lea
pop
shr
push
loop
cmp
xor
jge
cmpsl
ss
loop
xor
pop
lods
and
dec
pop
xchg
sbb
add
pop
mov
push
mov
fucompp
mov
loopne
adc
adc
inc
adc
dec
loopne
cld
xchg
push
pop
mov
mov
ret
clc
jne
mov
mov
andl
dec
mov
adc
mov
xchg
or
popf
cmp
outsl
mov
or
ficompl
add
jne
fwait
or
pusha
jbe
dec
test
jmp
sub
test
in
pushf
and
fildll
mov
xor
adc
push
mov
mov
pop
movsl
es
xchg
adc
cmp
repnz
cmpsl
ss
pop
outsl
jnp
adc
or
bound
lcall
xchg
cmp
sahf
js
adc
popl
sub
ja
mov
pop
add
ljmp
pusha
adc
pop
inc
adc
in
lea
cwtl
lret
lods
or
or
dec
push
fnstsw
sub
scas
lods
jmp
lods
mov
sahf
mov
mov
xchg
shll
and
pop
int
sbb
insb
xchg
out
imul
adc
jg
xor
test
xchg
and
mov
rorl
sub
xor
cmp
adc
jecxz
jne
jns
js
lods
mov
fdivr
insb
gs
inc
fcomps
mov
imul
xor
xor
fisubl
fistl
mov
ret
shl
dec
js
inc
ret
stos
add
and
cmpsb
pop
imul
sub
cmp
cmp
test
mov
mov
jbe
xchg
mov
mov
notb
jge
and
dec
fildll
addl
add
cld
jl
arpl
in
xor
and
sbb
filds
or
jnp
addb
insl
ror
ja
leave
or
jp
aam
in
pushf
pop
mov
jmp
sbb
ljmp
push
inc
jl
nop
std
test
stc
push
push
adc
std
pop
mov
add
lahf
pop
adc
mov
sbb
push
fildl
aas
lds
jmp
movsl
or
cmpsl
inc
mov
cmp
inc
xor
popa
out
sub
push
mov
fidivs
cmp
cmc
sbb
cmp
aaa
outsb
rclb
mov
adc
mov
aaa
rcrb
push
and
pop
mov
lahf
pop
pop
xchg
enter
jne
rorb
movb
adc
loope
lret
mov
sub
xor
lock
pop
imul
push
and
cmp
adc
cmpsb
fsubs
lods
outsl
ss
arpl
mov
xor
fsts
mov
sub
inc
or
push
sbb
pop
aaa
pop
les
nop
mov
pop
sub
sbb
mov
mov
dec
loop
lret
daa
cmp
mov
sub
inc
mov
inc
mul
and
and
push
sbb
int
xchg
pop
dec
sub
pop
dec
xor
mov
push
dec
ja
mov
data16
aam
fdivrp
sub
lods
add
hlt
jge
pop
jecxz
jecxz
fnsave
pop
test
insl
sub
movsl
mov
shll
adc
push
jbe
in
inc
dec
xchg
add
dec
faddl
xchg
and
push
int3
ss
cli
scas
nop
fs
pop
rorb
int3
loope
mov
sbb
sub
mov
scas
pop
add
sbb
xor
vcvttsd2si
inc
test
push
dec
inc
dec
fldl
pop
pop
sub
ljmp
test
jmp
mov
adc
push
fimull
jo
xchg
sub
xlat
orl
movsb
push
sub
mull
bound
add
mov
mov
icebp
push
cmp
pushf
outsl
lret
adc
aaa
insb
sarl
add
jae
jge
sub
in
cltd
test
push
cmp
clc
mov
stc
pop
sub
or
ja
pusha
mov
imul
lcall
sarb
pop
pop
lods
inc
xor
fsubp
pushl
xchg
aaa
cmp
ljmp
clc
clc
in
jg
push
jbe
bound
fcompl
jbe
mov
add
dec
ret
shlb
js
popa
adc
aaa
lcall
fdivrs
and
cmp
jb
sub
mov
aam
xorl
lret
add
pop
lock
loop
fstps
enter
xor
cmp
hlt
add
mov
cwtl
xlat
jae
mov
inc
mov
sbb
jecxz
movsb
or
lods
icebp
pop
xor
adc
aam
add
or
inc
in
pop
fsubrl
negb
add
ss
das
mov
js
aad
bound
mov
jae
repz
pop
mov
xor
pop
sbb
add
mov
mov
leave
inc
addr16
jg
pop
movsl
shll
fld
xor
sti
add
stc
pop
fwait
bound
stc
or
rolb
and
mov
stc
cmp
inc
xor
xor
push
scas
mov
stos
sbb
psadbw
rcrl
lea
sbb
mov
push
sub
push
push
and
lret
jb
insl
lods
jne
mov
das
add
mov
outsl
xchg
xor
xchg
add
into
addr16
or
addr16
xchg
dec
push
in
push
inc
jns
and
sbb
notb
mov
lcall
into
xchg
test
mov
jne
push
notb
test
lret
mov
aam
es
mul
repnz
dec
add
and
lret
test
incl
out
cmpsl
xor
hlt
lcall
mov
pcmpgtb
mov
dec
or
adc
pop
lahf
scas
mov
test
cmp
jae
jg
stc
add
test
ds
leave
bound
insl
ret
xor
inc
push
sub
aam
push
int
xor
das
clc
cmp
add
clc
sbb
sbb
and
enter
mov
ud1
cld
dec
pop
xchg
jl
sbb
jle
fwait
xor
aas
cmp
sahf
ljmp
and
mov
mov
ds
shll
gs
or
xchg
not
mov
ret
insl
pop
mov
mov
ret
cmp
mov
add
in
iret
lcall
aad
push
lret
mov
sub
lods
out
or
push
ljmp
push
cwtl
lcall
pop
xchg
mov
sbb
jae
sub
insl
testb
sti
push
and
dec
jg
push
cmpsb
lea
inc
ja
push
mov
add
andb
imul
sarb
outsl
iret
inc
push
cmc
pop
pop
sub
cmp
push
inc
cld
loop
dec
xor
pop
icebp
out
inc
and
frstpm(287
ss
mov
dec
into
fcomip
cmp
into
addl
stc
pop
movsl
lahf
adc
lods
ds
repz
adc
jmp
pop
pop
mov
mov
aas
jmp
jns
cld
mulb
inc
mov
add
push
sbbl
roll
jmp
xchg
rolb
rol
jb
add
ds
xor
fdivrs
mov
push
pop
and
sub
lds
push
loop
icebp
xlat
mov
imul
mov
xchg
repz
inc
mov
addb
dec
jbe
and
mov
xor
pop
push
sub
insb
add
cmp
std
add
jp
pop
jecxz
mov
jle
stos
insb
push
cmp
xorb
pop
pop
push
xchg
jecxz
popa
ds
nop
movsb
sbb
jle
sbb
mov
in
sar
test
ret
adc
in
fistpl
sbb
mov
mov
incl
push
mov
push
mov
add
mov
mov
fld
jecxz
fdivl
dec
fidivrs
mov
mov
jp
lcall
shl
test
xor
adc
dec
pop
cmp
push
sbb
add
shll
push
lcall
test
fisttpll
sbb
pop
pop
roll
dec
jb
dec
cmp
cmpsb
add
bound
int3
or
clc
push
inc
pop
mov
lret
scas
sbb
cwtl
rolb
add
or
cmp
es
adcb
lret
mov
adc
or
inc
sti
loope
rorl
ds
out
std
sahf
xor
xlat
aad
stos
xor
jge
dec
int3
ror
adc
gs
cmp
push
mov
rorl
int
pop
inc
enter
adc
movsl
sti
fisttpll
xor
sti
cmp
mov
pop
mov
xor
mov
into
out
shll
adc
adc
fucomp
and
sub
scas
inc
jne
xchg
or
pushf
xchg
lock
cmpsb
and
mov
orl
mov
daa
pop
outsl
push
add
or
or
in
fistpll
dec
xor
mov
or
mov
inc
dec
loopne
adc
popa
or
outsl
xor
xor
out
loopne
sahf
outsl
mov
push
fadds
sbb
outsb
test
mov
cmp
or
and
and
faddp
dec
lret
arpl
scas
mov
jp
rorl
test
mov
push
fistpll
cmc
lods
stos
and
jb
popf
sbb
add
sti
fnsave
dec
popf
mov
push
icebp
sbb
je
cmp
int3
jecxz
mov
int3
mov
jno
roll
jecxz
stos
pop
je
add
pop
push
pop
mov
cmp
jle
adc
sbb
dec
ret
jp
outsb
in
jecxz
sub
mov
adc
enter
cmp
mov
test
dec
jno
adc
adc
stos
push
jae
push
in
fisttpll
in
aas
sub
es
push
fwait
cmpsb
inc
adc
test
lahf
jne
pop
pop
add
clc
xlat
movsb
loopne
and
filds
ds
add
ljmp
cmp
iret
imul
int3
lret
cmp
movsb
stos
mov
xchg
push
jns
cmp
mov
sub
fdivrs
jl
and
mov
push
xchg
loopne
aas
outsb
popw
add
mov
ror
insl
test
sub
cmp
scas
cmp
cmpb
jge
out
sti
stos
fucomip
cmpsb
jmp
adc
ret
pop
xchg
stos
sub
or
mov
sbb
pop
in
lahf
fdivrl
dec
lahf
sub
imul
and
pop
out
cmp
jg
sahf
cmp
and
push
or
pop
ds
push
sti
push
decb
mov
aam
jae
stc
ret
mov
cmp
inc
dec
test
add
repz
into
adc
ja
cli
fidivs
mov
inc
push
addb
jmp
sbb
bnd
xchg
xchg
les
push
scas
inc
rcrb
sbb
aad
enter
cmp
lahf
lods
adc
sarb
aas
icebp
mov
dec
push
pop
jmp
cmp
mov
jbe
sbb
mov
stc
ret
xlat
fistps
jae
mov
out
adc
xchg
dec
and
ss
imul
mov
inc
test
lods
lods
mov
dec
das
ja
icebp
scas
test
dec
sub
dec
jle
jno
icebp
mov
bound
insl
ds
push
inc
adc
mov
pop
scas
test
push
sub
mov
mov
sbb
or
test
lahf
jno
xchg
or
cmp
and
pushf
or
incl
loopne
lods
pop
pop
test
lret
jo
sahf
fistpll
das
out
sbb
mov
mov
mov
hlt
je
xchg
xchg
jne
add
mov
in
popf
cmp
and
in
jmp
arpl
jbe
repnz
arpl
jns
mov
iret
adc
mov
int3
add
pop
mov
lds
pop
bound
lods
es
ret
and
ss
fdivr
arpl
testl
add
sbb
inc
stos
stos
mov
aam
incl
inc
pop
cld
push
mov
pop
xchg
pop
or
shlb
pop
ret
ljmp
insl
fs
insl
inc
popf
and
loop
stos
add
movsl
leave
fwait
pop
jo
mov
push
add
rorl
push
std
popa
adc
mov
jmp
cmp
fdivs
xchg
es
sbb
sub
dec
or
fdivrs
imul
in
fwait
xor
daa
add
mov
pop
lods
pusha
lds
jns
pop
jae
push
sbb
jge
jnp
mov
sbb
and
loope
mov
daa
xor
or
cld
daa
rolb
xchg
mov
enter
xchg
mov
xor
stos
or
nop
jl
fisubrs
inc
ss
gs
loopne
sub
imul
sbb
stos
push
inc
adc
xor
sbb
into
iret
jecxz
fstpt
mov
loope
sbb
std
nop
and
jne
fisttpl
sbb
ds
pop
dec
les
mov
movsb
inc
push
mov
and
push
mov
lahf
imul
lahf
lret
pop
and
mov
xchg
xor
clc
push
adc
xchg
push
sbb
or
add
pop
or
adc
mov
fisubrs
inc
js
pop
cmp
cmp
adc
push
mov
cmp
cltd
iret
xlat
xorl
je
xor
filds
das
add
movsl
das
js
gs
test
xchg
xor
popa
mov
push
inc
insl
xorb
lds
dec
std
cmp
pop
pop
sbb
shll
in
loope
fildll
pop
lret
lahf
popa
or
sub
mov
push
and
xor
inc
inc
addr16
pop
data16
xor
add
lods
cs
fdivl
xchg
pcmpgtb
jle
stc
dec
mov
jmp
sbb
adc
cltd
adc
iret
jecxz
cs
sub
mov
dec
mov
sub
int
shrl
pusha
and
and
or
push
rcll
sub
fcmovnb
cmp
pop
and
inc
arpl
arpl
mov
ljmp
sbb
or
pop
sbb
jbe
inc
out
xor
sbb
rorl
mov
fsin
xchg
mov
nop
mov
mov
leave
rolb
loope
clc
adc
js
inc
addr16
out
mov
movsl
jne
insb
hlt
mov
notl
arpl
cmp
shr
adc
into
push
adc
pusha
in
or
mov
mov
and
mov
and
loope
fsubr
push
stos
gs
mov
sahf
scas
fidivrl
sub
das
in
je
cwtl
sahf
bsr
add
shrb
fbld
aam
scas
and
fimuls
test
ret
mov
test
dec
mov
jb
and
sub
dec
cmpb
inc
rcl
lss
mov
cmp
mov
or
xor
sti
stc
aas
out
xchg
bound
push
dec
push
dec
scas
or
int
and
xor
mov
pop
dec
mov
insb
cmp
sbb
scas
shr
xchg
imul
pop
ret
cli
mov
inc
cltd
pop
mov
cmp
jbe
mov
sub
cmpsb
std
inc
out
into
sub
push
and
fldenv
out
dec
loope
push
lcall
sbb
out
das
jb
bound
dec
xlat
jb
push
jg
outsb
das
pop
xor
adc
ret
das
in
mov
pop
mov
sbb
sbb
aad
xor
add
jbe
sub
sbb
stc
jo
sar
push
gs
cmp
addb
cld
dec
inc
test
stos
mov
out
in
mov
cmp
lret
imul
push
xor
stc
repz
mov
inc
pop
mov
stos
mov
cmpsb
int
sub
jnp
imul
mov
test
mov
mov
pop
mull
test
push
stos
sub
or
mov
push
mov
stos
xor
stc
push
xor
sarb
je
xchg
cltd
lahf
ret
cmp
push
fstpt
pop
mov
outsb
aaa
ds
sub
clc
fisttpl
xor
fs
jo
mov
mov
sub
jno
inc
push
inc
inc
sbb
dec
out
and
jne
dec
xchg
movsl
mov
orb
pop
sahf
pusha
jge
lods
int3
dec
ret
insl
pop
mov
cmpsl
bound
into
pop
inc
les
adc
scas
push
inc
inc
mov
loope
push
pop
enterw
repnz
jmp
and
rorl
xchg
popa
mov
lea
mov
dec
inc
inc
jp
lret
test
and
add
push
in
dec
shll
adc
push
pop
mov
adc
mov
cltd
ficompl
mov
scas
mov
mov
mov
lret
in
inc
xor
test
dec
xor
negb
mov
pop
testb
mov
cmpsl
push
negl
aad
inc
push
jp
subb
insb
dec
or
jno
insb
dec
sbb
jns
in
adc
ror
rcrb
jbe
sahf
repz
fstl
or
stos
out
mov
mov
js
pop
movsb
sbb
insb
adc
call
xor
xchg
push
mov
mov
dec
mov
ljmp
add
pmullw
enter
lock
jae
dec
lods
sbbb
and
movsb
mov
mov
or
popa
outsl
shrb
cmp
scas
bound
add
xor
fcomi
jno
mov
xchg
mov
repz
sbb
pop
cli
and
dec
xchg
mov
loop
addr16
jl
sub
sub
push
push
scas
sahf
xchg
push
mov
cs
push
mov
ss
cmpsl
int3
sub
sub
movsb
mov
cs
adc
mov
mov
fstps
vpacksswb
imul
fists
test
daa
jb
out
dec
dec
xchg
sub
sub
add
imul
fldcw
lods
in
cmpb
pop
in
dec
pop
test
out
mov
leave
push
jmp
mov
sub
jmp
inc
inc
or
jmp
push
imul
lods
jmp
lret
lret
sarb
aam
stos
lcall
sub
jne
es
mov
jp
sbb
nop
rolb
jg
add
jnp
lahf
push
or
out
ret
scas
and
dec
mov
cli
dec
inc
pop
fcomps
add
xorb
data16
xchg
adc
mov
mov
push
in
push
int3
mov
sub
test
inc
xchg
jecxz
pop
imul
add
in
mov
enter
pop
dec
xor
out
das
shl
or
inc
cmp
or
in
inc
sub
scas
xlat
inc
or
call
bound
in
loop
sub
sbb
jne
enter
pop
push
add
xchg
pop
lret
and
int3
daa
jne
push
fdivrs
lods
push
xor
inc
xchg
movsb
jne
jbe
popf
cmp
mov
int
jae
push
cli
jae
push
sbb
adc
xor
daa
sub
pop
mov
sarb
into
and
add
push
aaa
cmp
sub
loope
jb
mov
pop
pushf
int
loope
mov
adc
sub
dec
xchg
icebp
movsl
or
and
jmp
pop
gs
dec
xor
addr16
add
ret
pop
icebp
hlt
inc
notl
adc
in
pop
mov
js
mov
mov
test
insl
jp
in
outsl
pop
loop
lods
cmp
cmp
mov
outsb
mov
scas
push
and
ret
mov
dec
sub
pop
or
js
insl
mov
stos
dec
pop
push
scas
xchg
mov
int3
insb
dec
lds
and
mov
dec
pop
outsl
fnstenv
dec
xchg
inc
push
fimuls
icebp
pop
mov
fistps
mov
ljmp
subb
fistpl
and
mov
out
decb
frstor
andl
or
pop
xchg
pop
or
push
lahf
push
inc
cmpsb
cmpsb
sbb
nop
mov
dec
dec
xchg
or
and
popa
test
add
xor
dec
ds
xchg
mov
push
xlat
mov
cs
mov
loope
mov
sahf
mov
adc
mov
jnp
push
stos
and
ss
lret
lahf
mov
faddl
or
xlat
int
loop
add
lods
repz
dec
lcall
shlb
dec
xchg
adc
ljmpw
lods
les
divl
jg
add
cmpsl
push
aas
je
inc
push
inc
ss
popf
rorl
repz
lcall
cmp
xchg
and
add
negl
mov
cli
xchg
es
pop
xor
jae
ds
jno
js
nop
bound
adc
mov
jp
scas
or
int
sbb
mov
dec
rolb
pop
xor
mov
and
push
test
dec
mov
sbb
ss
push
fldenv
negb
repz
movsl
fidivs
nop
dec
adc
in
movsl
cmp
cwtl
filds
lock
insb
fs
jo
mov
aas
dec
push
dec
pop
jbe
jecxz
cmp
jo
clc
mov
jns
push
xchg
push
stos
mov
fdivs
mov
and
sub
dec
imul
mov
mov
repz
jnp
int3
dec
icebp
in
fcmovb
adc
and
fwait
add
in
xchg
cmp
lea
mov
mov
movsb
dec
lahf
test
ret
inc
fsubrl
mov
scas
xchg
jl
xchg
call
sub
inc
xchg
inc
xor
loopne
xor
arpl
dec
fstpt
jb
push
pop
call
xchg
ficomps
inc
shrl
mov
lods
dec
inc
xchg
frstor
fisttps
test
push
xlat
arpl
push
mov
stc
xor
in
mov
push
sub
ficoml
lods
sub
lock
push
dec
or
clc
dec
jge
aaa
cmp
filds
jecxz
jecxz
sub
mov
rcrl
mov
mov
push
pop
push
add
imul
sub
and
cs
pop
iret
test
jno
sub
mov
int
daa
xchg
enter
push
jne
ds
pop
mov
and
sahf
sub
dec
out
sbb
insl
insb
push
je
outsb
cmp
push
popa
repnz
lock
sub
sbb
enter
popa
sbb
adc
mov
dec
dec
jmp
loopne
pop
in
jl
jne
mov
notb
jp
rcl
gs
cmp
cwtl
lret
sub
pop
lret
f2xm1
push
ds
sbb
mov
xchg
mov
out
enter
in
jne
xor
xor
mov
sub
push
movsb
sarb
lods
or
mov
cmp
add
fisttpl
stos
mov
jo
sub
test
rolb
xor
or
pop
mov
push
loope
dec
fs
daa
fnsave
mov
dec
int
std
pop
sahf
into
clc
fistps
clc
out
jge
arpl
popa
out
xchg
lods
sti
popa
imull
mov
push
add
add
add
out
lea
movsl
xchg
inc
cmp
fsubl
dec
int
out
movsl
roll
std
jae
fwait
lcall
or
cmpsb
dec
pop
clc
sub
or
lods
push
and
jae
mov
cmc
add
in
push
or
mov
rorb
adc
aad
push
mov
jecxz
je
movsl
mov
test
and
bound
xor
mov
inc
push
xor
mov
jne
negl
xchg
test
sarb
or
lock
and
iret
dec
mov
stos
cmp
jne
or
lret
testb
push
mov
add
ljmp
shrl
add
or
call
lcall
idivl
jp
data16
mov
shrl
clc
inc
dec
movsl
test
mov
lock
scas
inc
xor
data16
lock
aam
xlat
pop
or
flds
jmp
and
push
out
into
ja
mov
jle
lret
pop
adc
xor
jge
std
jg
or
faddl
pop
adc
pushf
jns
imul
lea
ret
pusha
pop
push
mov
mov
repnz
cmp
imul
mov
cmpsb
cmc
pop
and
fldl
mov
xlat
xchg
rorl
rorb
gs
inc
inc
fwait
xor
pop
rcll
dec
push
mov
and
mov
inc
fs
rcrb
out
mov
or
jmp
fmull
or
cs
inc
mov
sbb
inc
xor
das
cmpsl
dec
mov
xchg
les
pop
sub
cmpl
loopne
outsl
pusha
ljmp
mov
imul
shl
inc
jbe
shll
mov
jle
in
lahf
int3
mov
sub
lahf
outsl
addr16
jae
adc
lcall
mov
add
jg
push
dec
lods
aas
int3
ljmp
ror
icebp
xlat
xchg
movsb
lret
mov
xchg
jle
jle
sub
push
push
xor
and
pop
mov
subb
xor
ret
sbb
and
ljmp
cmp
jne
and
lahf
cltd
xchg
mov
push
inc
push
mov
ja
lock
and
out
xchg
idivl
in
cld
pop
jb
out
inc
aas
fistpl
popa
loop
scas
call
ss
xchg
fbld
stos
mov
push
pop
and
cmpb
stos
shll
pop
adcl
xchg
pop
lods
mov
cmpsb
ljmp
test
jl
fiaddl
in
jecxz
jl
sub
rorl
loope
sbb
clc
pusha
fs
cmp
mov
sti
adc
movsb
mov
ret
xor
fs
jnp
jge
pop
or
pop
insb
add
add
jo
cmp
add
push
pusha
cmpsl
inc
inc
loopne
test
mov
and
bound
lock
push
mov
add
mov
sti
mov
dec
pop
sub
gs
aas
roll
jge
or
inc
cmpb
and
ret
jmp
iret
pusha
push
insl
inc
push
pop
in
xchg
pusha
add
scas
lea
test
pop
sahf
fdivs
sbb
lock
mov
mov
shl
in
mov
stc
dec
sbb
loopne
jo
xchg
dec
mov
imul
jg
aas
loope
push
outsb
sahf
loopne
xchg
call
int3
loopne
sub
and
cmp
cmpsb
scas
addr16
xchg
or
pusha
xorl
gs
dec
push
setle
icebp
jne
out
add
xchg
and
hlt
rorb
mov
adc
out
call
fs
mov
lea
inc
stos
dec
cmc
or
jbe
into
xchg
adc
enter
push
popa
add
leave
roll
jp
jecxz
jmp
jle
xlat
leave
stos
cmp
insb
mov
lcall
lcall
push
ss
fildll
int3
out
or
mov
mov
fistps
inc
int
enter
repz
sub
shrl
enter
in
add
es
fs
or
adc
xchg
aad
cmpl
in
mov
sub
rol
out
add
add
shlb
ret
test
and
int
pop
incl
sbb
shl
xchg
testl
les
addr16
sub
aaa
lods
div
ss
fs
in
mov
movsb
cmpb
adc
cltd
fs
push
xchg
rcl
cmp
stc
fdiv
clc
leave
lahf
or
cmp
fs
mov
test
out
jmp
cltd
sbb
rcrl
push
scas
mov
iret
and
ljmp
sbbb
popf
inc
bound
and
out
les
cmp
and
roll
xor
test
inc
inc
jne
mov
fimuls
xor
test
mov
xchg
outsl
mov
repnz
test
cmp
decb
scas
stos
xchg
das
jmp
in
jge
mov
mov
out
nop
mov
adc
sti
xchg
xor
cld
stc
pop
xor
nop
xchg
out
in
push
lret
push
fs
or
inc
jg
ss
std
out
xor
pop
sub
dec
negb
lcall
inc
out
iret
leave
xor
jle
pushl
into
pop
ret
mov
pop
ret
dec
add
add
loopne
push
mov
lods
push
inc
pop
or
inc
mov
pop
mov
outsl
cmp
test
addl
push
sbb
push
mov
push
dec
fldcw
lds
inc
push
adc
lret
mov
pop
divb
lret
stc
test
xorb
jmp
jnp
dec
das
insl
imul
xorl
and
shll
xor
pop
mov
xor
icebp
insb
lods
into
mov
and
dec
enter
mov
pop
inc
into
rcll
daa
loope
adc
mov
lret
sub
sbb
fstpt
loop
in
pop
hlt
out
repz
mov
shlb
repz
outsl
sub
adc
cmc
testl
test
mov
cmc
xor
cwtl
rolb
test
icebp
push
outsl
mov
mov
adcb
mov
xchg
fdivs
sub
mov
inc
and
xor
lret
sti
add
mov
out
lds
loopne
cld
adc
cli
movsb
mov
jp
call
faddp
and
out
add
xchg
dec
int3
xchg
mov
rcll
fldl
popa
enter
cs
jle
push
cmp
loop
sub
mov
xor
shll
or
cwtl
xlat
sub
hlt
add
ss
movsl
and
sbb
adc
fstp
mov
xchg
mov
shr
add
pop
cli
cltd
fs
outsl
mov
mov
xor
mov
fnstenv
xchg
iret
add
sbb
push
mov
push
and
and
mov
fucomi
xor
roll
fsubrl
out
and
sbb
scas
gs
sbb
lcall
cmpsb
data16
xor
mov
dec
out
push
orb
lods
out
adc
cmpsl
imul
scas
xor
mov
or
mov
shll
dec
jo
pop
ja
outsl
in
push
inc
inc
xorb
in
pop
cmp
push
mov
fisttps
jae
adc
add
into
enter
lods
rolb
fbstp
mov
rcrb
inc
leave
and
push
dec
aaa
sub
loope
push
test
push
fmuls
and
mov
dec
mov
adc
push
mov
pushf
shll
pop
clc
test
scas
jno
jns
pop
ror
sub
cmp
cli
xchg
in
mov
shll
sbb
jmp
orl
es
fcomip
push
adc
lea
movsl
sub
popf
mov
dec
negl
fcomp
jae
pop
popa
pushf
mov
add
ds
dec
xchg
mov
push
fldl
in
cwtl
mov
cmpsl
mov
adc
mov
sti
icebp
cltd
fdivs
sub
out
in
dec
scas
sub
dec
cmp
test
push
test
or
mov
test
xchg
imul
or
xchg
pop
add
push
ret
clc
pop
fs
aad
jns
js
test
cmpsb
pop
lahf
out
sub
mov
movsl
dec
xor
addr16
fdivp
sahf
cwtl
test
add
pop
push
insb
js
scas
mov
lcall
sarb
sbb
xchg
inc
sbb
int
sub
std
sti
test
outsl
ljmp
out
mov
xchg
ret
test
jo
rol
and
adc
sbb
insb
sbb
and
aas
adc
test
out
mov
xchg
adc
sbb
add
stos
test
cld
insb
aas
scas
adc
scas
nop
hlt
adc
mov
jo
sub
in
dec
iret
aad
inc
addr16
mov
push
xchg
pop
addl
sbb
fcompl
or
inc
fnstsw
test
jmp
xchg
dec
xchg
inc
fimull
jmp
mov
loope
fcoms
jge
xchg
and
cmc
das
inc
xchg
cmpsl
xchg
and
dec
mov
lcall
mov
push
sub
out
xchg
mov
filds
jno
mov
or
add
mov
push
pop
enter
rolb
xchg
icebp
mov
pop
mov
pop
jb
mov
cmp
lock
scas
dec
dec
clc
cmp
mov
jmp
int
iret
je
dec
jns
jge
adcb
pop
dec
pop
aad
jb
sbb
aam
cwtl
int3
mov
fcmovu
xchg
lock
rclb
adc
pop
popf
pop
pop
sbb
mov
mov
pop
inc
in
in
sarl
jg
fisttps
push
jge
jnp
adc
xor
ljmp
cmp
jmp
xor
fsubp
test
and
add
mov
cmpsb
dec
in
add
pop
mov
mov
ret
sbbb
pusha
lret
jge
xor
sbb
shrb
mov
jle
shlb
test
rcrb
popa
repz
in
push
xlat
cmp
pop
xchg
xchg
mov
xor
dec
mov
mov
push
data16
fwait
xchg
pop
sub
xor
lods
mov
mov
dec
mov
cmpsl
dec
dec
repz
jne
outsb
jg
mov
test
cld
ljmp
ja
rcll
ret
cltd
adc
js
into
faddl
popa
push
jne
pusha
jmp
cld
sub
insb
nop
xchg
adcb
push
out
dec
xor
into
stos
pop
jecxz
fucomip
in
xchg
add
dec
cmp
insb
inc
pop
lock
sbb
mov
inc
mov
xchg
mov
or
inc
cld
mov
inc
lea
ja
or
xchg
loope
push
inc
insl
mov
mov
cmp
add
mov
sbb
sbbl
jge
lods
jecxz
stos
push
icebp
outsl
in
leave
push
mov
bound
scas
pop
arpl
sbb
sub
jle
in
jbe
and
or
pop
inc
dec
pop
push
sub
ljmp
std
movsl
inc
mov
xchg
cwtl
das
js
fsubrl
adc
les
mov
cmp
hlt
xor
hlt
push
and
test
jne
jbe
or
fwait
repz
cmc
sub
mov
fwait
jg
fwait
lea
mov
push
or
cmc
sub
mov
push
dec
cwtl
mov
xor
and
lock
loope
inc
add
cmpb
stos
jg
xlat
xor
ret
push
jnp
adc
int3
cmpsb
pushf
cmp
stos
inc
js
or
cs
enter
xchg
inc
int3
imulb
xchg
mov
inc
in
add
jae
popa
negb
rclb
push
sub
cmp
arpl
push
dec
int3
pushf
mov
xchg
call
push
cmp
test
sbb
push
jecxz
sub
mov
inc
xor
jnp
jb
cld
cmp
out
pusha
sbbb
cli
add
push
pop
mov
out
sub
xor
pop
std
fs
outsl
out
hlt
push
xchg
pop
cs
stos
sub
scas
das
add
shrl
or
mov
mov
mov
pop
sub
mov
xlat
adc
mulb
test
out
loop
cmpl
test
pushl
les
push
lcall
in
rcrl
popa
daa
add
add
sbb
hlt
aas
jo
jnp
fistl
lret
out
hlt
test
pop
push
xor
push
jp
je
clc
push
mov
push
pop
push
inc
rcll
jmp
and
popf
mov
int3
jmp
adc
dec
roll
adc
sbbb
pop
sub
lods
ss
popf
inc
mov
aas
hlt
arpl
out
rcll
call
mov
jl
sbb
sbb
add
aam
jecxz
lret
mov
lock
in
cmp
movsb
jmp
ret
dec
daa
loope
scas
dec
jns
stc
ret
test
pushf
outsb
jmp
mov
xchg
cld
sarl
xchg
jle
stc
loope
jo
inc
or
push
lret
xchg
xor
faddp
push
mov
aaa
add
out
mov
and
movsl
lock
add
dec
ds
cli
xchg
cmp
ss
fwait
add
dec
iret
mov
inc
enter
repz
je
pop
fdivs
pop
inc
mov
out
hlt
jno
aad
call
jo
push
mov
dec
ficoms
in
xchg
inc
xor
ror
fmull
imul
mov
mov
mov
jecxz
pop
push
mov
push
iret
movsb
mov
popa
sub
cs
imul
btc
inc
jcxz
xchg
jo
std
push
fwait
inc
imul
adc
repnz
push
cld
aad
add
test
dec
frstor
push
int
call
add
dec
inc
int3
out
sub
or
pop
pop
das
and
inc
outsl
out
cmp
jns
sahf
je
iret
push
insl
in
cld
xchg
cld
insb
cli
popf
or
dec
jae
jecxz
sahf
adc
mov
push
imul
pop
mov
xor
sub
xchg
lcall
jg
repnz
jo
or
mov
test
fistpll
cltd
xchg
mov
mov
xchg
xlat
mov
roll
push
mov
movq
jae
add
mov
xchg
ja
aaa
lds
mov
das
or
shl
xorl
enter
pop
clc
fisubl
lea
mul
inc
out
sti
xor
inc
lock
sti
nop
popf
mov
dec
adc
movsb
fistl
push
cmpsb
arpl
aas
jno
jns
mov
adc
sbb
jg
xchg
cmp
cmp
sub
xchg
aas
aam
daa
jb
push
push
sub
loope
pop
push
arpl
and
dec
mov
inc
arpl
addl
rclb
dec
jl
push
push
lods
mov
adc
pop
ss
mov
repz
or
pop
cmp
clc
pcmpeqb
ja
into
xchg
outsl
mov
mov
adc
cmpsl
fstpt
jle
sahf
mov
rcr
lahf
jo
mov
pusha
repz
fbstp
push
push
dec
pop
std
cmp
inc
lret
sub
pop
mov
and
add
jnp
and
out
int
or
push
pop
fidivl
cmc
add
scas
adc
adc
add
in
pop
lods
aad
hlt
in
or
xchg
mov
lods
in
sbb
out
test
addr16
shl
pop
adc
add
mov
mov
inc
add
push
lret
clc
push
and
jns
mov
lret
mov
mov
mov
fisttps
mov
jl
fmul
xor
sbb
rol
xchg
jge
shll
jmp
adc
dec
cmp
pop
fsts
sbb
jae
mov
push
cmp
sbb
es
int
jne
call
fs
insb
cmp
aas
push
jmp
jecxz
jle
pop
shll
daa
sub
inc
inc
dec
nop
sub
fadds
cltd
or
push
mov
sub
mov
nop
mov
xor
push
ljmp
fucomp
sbb
jne
xchg
loop
shl
rorl
cmp
sti
and
popf
jg
jl
sarl
pop
xor
outsb
and
add
pop
sbb
or
adc
and
leave
xor
xor
aas
inc
icebp
add
or
add
push
fldenv
push
and
adc
fisttpll
imul
adc
clc
out
or
out
fisubl
mov
lret
inc
xlat
cmpsb
cli
ret
rcll
aas
adc
mov
fisttpl
fwait
sbb
aad
scas
bound
push
push
mov
dec
repz
jl
imull
push
and
jg
in
into
or
out
rorb
mov
add
pop
pop
hlt
pop
inc
sbb
mov
ficomps
mov
add
das
jge
lret
sub
mov
pop
orl
inc
std
sbb
movsl
or
mov
jbe
pop
daa
aas
mov
dec
jp
or
sti
cmp
in
cs
or
or
cmp
pop
or
adc
xor
data16
push
or
xchg
dec
in
in
cmp
loope
fldcw
pop
mov
xlat
push
iret
rol
pop
jp
fcoms
or
lds
data16
sti
shrl
clc
pop
and
add
aad
rorb
and
xor
pop
js
cmp
mov
in
jg
xor
push
xor
push
pop
push
cld
mov
outsb
lret
int3
lret
add
xor
push
fs
aas
mov
pusha
loop
out
nop
fbld
inc
inc
test
pop
jnp
sbb
int3
add
inc
lahf
mov
jns
js
mov
inc
jno
enter
das
inc
in
int3
aaa
stos
or
sahf
jle
mov
cwtl
cli
mov
mov
mov
dec
std
pushf
and
sbb
das
xchg
sub
outsl
jmp
pop
mov
xor
loope
adc
push
lods
outsl
jb
jne
orb
rorb
sbb
call
cmp
xchg
cli
dec
stos
shr
or
mov
or
push
sbb
jle
outsb
stos
js
nop
mov
fs
xchg
orb
mov
into
xchg
fwait
nop
xchg
lods
das
js
cmc
hlt
inc
dec
cld
dec
xchg
pop
jmp
sbbb
mov
inc
jae
inc
rcrb
rorb
push
mov
pushf
adc
movsl
arpl
cmp
inc
cltd
push
int3
xchg
add
jnp
fdivs
adc
andl
or
icebp
and
mov
mov
icebp
sub
xchg
addb
mov
sub
sub
inc
stc
push
jg
dec
in
push
ds
xchg
mov
sub
fwait
pop
jb
push
shrb
adc
fucom
dec
outsl
jnp
cmp
jnp
test
dec
mov
pushf
insb
imul
adc
lods
outsl
mov
cmp
aad
mov
bound
pusha
mov
pop
jnp
inc
pop
sbb
xchg
sub
ret
cmpsb
adc
and
fldcw
out
mov
mov
or
jle
mov
fnstsw
sub
adc
sarb
xchg
lahf
sub
push
mov
dec
gs
pop
je
addr16
sbbb
ja
sub
in
jnp
mov
cmp
jne
add
popf
push
mov
push
pusha
pop
or
aas
or
push
push
loope
push
cmp
pop
xchg
test
in
js
push
das
pop
in
jg
fisubs
popf
insl
in
jb
pusha
mov
xchg
push
jl
mov
shll
dec
sti
adc
fcoml
testl
cs
fisttps
xor
xlat
lcall
jge
outsl
clc
sbb
dec
add
hlt
je
push
and
cld
cmp
loop
adc
andl
mov
lods
aaa
or
cmc
jno
movsl
gs
test
cmp
cwtl
cwtl
xchg
adc
push
pop
cmp
and
cmp
jae
jnp
gs
jecxz
and
adc
add
sub
push
arpl
adc
xchg
mov
sub
imul
cmp
imul
xchg
lods
jecxz
int3
inc
fdivrp
inc
imul
mov
jbe,pn
cmc
mov
mov
test
jecxz
add
sub
popa
xor
sahf
mov
stos
or
nop
aad
xlat
xchg
lea
add
adc
sarl
dec
xchg
sbb
cmpsb
mov
ljmp
jp
xchg
mov
pop
imul
in
push
out
cmpsb
push
cmpl
xchg
push
lods
in
dec
outsl
push
lods
dec
or
cltd
test
xchg
fisttpl
adc
or
lds
jns
sahf
add
push
lret
test
repnz
aas
outsb
jne
add
ljmp
fsubr
dec
gs
sbb
rcrl
adc
outsb
push
xchg
ret
mov
pop
in
aam
and
mov
dec
and
ds
sub
jns
cmp
add
cmp
shll
cmpl
loope
lock
ret
mov
pop
insb
cmp
xchg
add
scas
sbb
lahf
sub
cmc
jb
cmc
cmp
push
sub
je
cmp
adc
cmpsb
sahf
xor
xor
or
out
push
xor
or
out
fimuls
lock
mov
mov
mov
and
sub
std
rcl
and
sbb
test
adc
faddl
and
cwtl
or
or
mov
cmc
int3
xchg
arpl
xchg
pusha
push
sahf
jbe
movsb
push
xlat
sti
mov
int
mov
aad
pop
dec
data16
bound
int
in
pop
xor
jl
or
shll
xlat
xchg
cld
cmpsb
inc
shrb
sub
mov
mov
xor
sahf
push
sbb
lret
add
leave
movsl
lahf
xchg
mov
loope
and
sbb
xchg
jb
mov
xchg
cmpsb
pushf
ret
ret
jae
cld
rcr
push
pop
orl
cmp
ljmp
inc
dec
push
fnstenv
add
cmpsb
std
mov
stc
and
xor
dec
inc
shll
xchg
and
or
out
jbe
out
movsl
repz
mov
cmp
adc
mov
push
xlat
xchg
aaa
pop
shrb
std
pop
and
dec
xlat
in
insl
lods
insl
shrb
fisttpll
sahf
xchg
mov
aam
pop
pop
dec
adc
rorb
sbb
inc
outsb
dec
test
sbb
mov
mov
mov
out
inc
and
cmc
push
sar
test
ja
or
push
out
cwtl
pop
pushw
and
pop
xchg
inc
pushf
mov
test
in
imul
ficoms
adc
or
je
loopne
mov
xchg
imulb
or
fldt
pushl
enter
adc
push
stos
bound
shlb
out
cmp
das
xchg
fadds
dec
outsb
arpl
fsubrs
cld
lret
and
fisubrs
inc
ficomps
fstpt
lcall
pop
cli
icebp
inc
jmp
out
or
pop
lret
pop
stos
outsb
jecxz
shl
dec
xchg
sbb
imul
loop
das
in
cmpl
mov
arpl
pushf
shlb
pop
fidivrs
mov
xor
gs
cld
movsb
xchg
das
inc
sbb
jl
push
jle
jae
lea
testl
jle
push
mov
cmpsb
lahf
iret
int3
daa
inc
andb
enter
fstpl
cmp
addr16
aaa
aad
xor
push
lds
jg
mov
clc
pusha
adc
jne
fidivrs
loopne
mov
hlt
jg
pop
mov
sbb
fnsave
icebp
push
movsl
push
push
lret
rorl
cmp
ss
cmpb
stos
or
das
pusha
aaa
int
scas
xor
push
mov
sarl
jmp
and
xor
mov
inc
mov
lock
das
mov
xor
xor
mov
pop
jbe
mov
lea
cmp
dec
mov
inc
jb
loop
fs
inc
sub
sbbl
cmpb
xor
sti
lods
sub
cvtps2pi
scas
lahf
push
movb
lea
mov
sahf
ja
out
adc
aas
xchg
inc
lret
imul
mov
je
out
call
lret
mov
mov
adc
icebp
jl
or
or
xchg
push
cmp
frstor
jne
rolb
add
loope
cmp
xchg
fs
mov
pushf
lcall
cmpsb
push
mov
jg
add
mov
jb
cld
stos
sbb
stos
pop
ss
lods
stos
stos
cmp
or
push
aas
imul
lea
movb
xlat
push
dec
or
lds
inc
into
pop
les
fs
fcmovne
mov
xor
mov
aas
adc
pop
arpl
aaa
fildl
dec
and
jae
sub
ss
mov
sub
add
pop
testb
xchg
andl
push
clc
dec
push
lock
ss
inc
or
and
fbld
loope
js
xchg
insl
or
dec
sbb
sbb
lods
adc
mov
int
mov
jge
jge
das
repz
jecxz
and
mov
push
mov
movl
adc
cmpsl
aam
sub
cltd
mov
cs
jle
jp
mov
negl
int3
icebp
and
pusha
mov
ficompl
inc
test
cwtl
cmp
mov
js
push
out
inc
hlt
dec
jg
adc
es
mov
pop
aam
cmpb
cmp
pop
movsb
jle
mov
add
mov
pop
sub
enter
mov
xchg
and
add
ret
inc
sbb
or
dec
jmp
pop
popl
sub
lcall
or
addr16
andl
ficomps
outsb
es
mov
mov
mov
push
mov
sub
jb
jmp
push
ss
pop
push
aad
pop
je
push
enter
jb
loop
or
sti
sub
xchg
sub
insl
add
lea
cmp
lea
xchg
xchg
and
fbstp
inc
je
cmp
xchg
mov
push
xor
aaa
mov
pop
mov
sti
adc
xchg
mov
and
xor
das
mov
shlb
sub
scas
lahf
mov
mov
out
inc
in
cmp
fnstcw
mov
jb
pop
and
imul
sbbl
out
dec
sahf
scas
fsub
enter
mov
xor
and
cmp
shr
test
stos
add
outsl
sub
nop
or
std
add
imul
dec
mov
clc
and
out
xor
gs
sbb
out
mov
push
lods
sbb
adc
push
popf
das
jp
aaa
jmp
mov
cld
dec
add
ja
pop
fsubp
jge
jnp
jns
pop
jb
mov
mov
mov
sub
cmp
jge
mov
mov
cmp
add
insb
ud1
cmc
bound
xor
pusha
cmp
orb
push
fldenv
test
nop
mov
negl
aad
loope
cli
cmpsb
jmp
nop
rorb
dec
mov
scas
cld
pop
test
loop
std
mov
add
add
lods
inc
clc
add
imul
out
aad
xor
int
cmp
mov
cmpl
shl
sub
insl
add
lahf
jb
adc
fsubrl
adc
or
rclb
cltd
mov
ret
outsb
out
and
add
out
cwtl
xchg
and
inc
jo
cs
mov
test
adc
out
mov
or
jno
or
divb
push
fcomp
push
inc
jmp
add
movsl
adc
rol
sbb
push
in
pop
cli
fistpll
int3
and
fwait
dec
scas
adc
imul
mov
movsb
inc
mov
inc
xchg
cmpsb
lods
dec
enter
outsl
and
fcoms
add
push
fmulp
pop
inc
mov
and
cmp
push
in
js
adc
and
repz
or
mov
dec
and
or
push
and
push
push
cltd
cwtl
mov
int3
push
lods
xchg
mov
ljmp
mov
fimull
lret
test
test
lahf
or
jmp
test
adc
inc
mov
cwtl
loop
mov
std
aas
cs
testl
lea
arpl
sbb
mov
mov
and
dec
ret
sub
loope
sub
idiv
cmpsl
repz
andb
stos
xchg
push
jno
jnp
fistpll
out
fsubp
mov
outsl
cmp
adc
xor
fildl
je
dec
lods
push
inc
int
inc
int
aas
jo
testb
xor
add
xor
push
dec
sub
xchg
iret
jp
or
mov
fwait
xchg
lret
sbb
pop
pusha
repz
scas
mov
and
and
rolb
out
subl
pushf
push
push
jl
push
adc
add
stos
push
adc
add
insb
mov
mov
pop
fwait
mov
xor
imul
lcall
repz
push
mov
push
movsb
xchg
dec
daa
cmp
test
int3
sub
es
xchg
lods
jnp
pop
test
or
cwtl
jecxz
xor
jbe
mov
stos
pop
add
sbb
incb
add
jnp
leave
xlat
xor
mov
std
inc
int
adc
mov
in
jbe
movsl
bound
inc
push
call
add
rorb
icebp
xor
ret
adc
es
add
mov
shr
gs
jne
inc
mov
iret
loope
imul
movsb
fcmovb
mov
rcrb
dec
jno
mov
sbb
mov
aaa
mov
inc
adcb
push
adc
stos
or
loope
or
outsb
stos
fcomps
xchg
fstps
or
or
push
pop
jecxz
xor
mov
adc
popa
into
insb
adc
dec
push
lret
cld
dec
push
pop
fistl
add
outsl
push
inc
jecxz
lods
and
inc
insl
jmp
lcall
lods
imul
and
loop
fisttpl
mov
mov
js
xchg
jb
dec
dec
mov
pop
lahf
in
mov
and
test
xor
daa
xorb
hlt
jb
cmpsl
addl
mov
xor
add
dec
into
lea
xor
sub
xor
jp
in
add
ds
xor
or
int3
fs
mov
aad
popf
cli
pop
test
mov
cli
mov
ficomps
rorl
mov
sub
add
js
mov
sbb
sub
ficoms
shlb
push
mov
fmul
imul
xchg
sub
and
xor
test
jecxz
or
add
cwtl
inc
fidivs
mov
jno
sub
and
test
jns
jbe
scas
addr16
mov
movsl
mov
ss
mov
lret
mov
int3
mov
pop
push
add
push
repnz
add
je
mov
outsl
dec
ror
scas
lods
cld
push
jmp
je
jo
jbe
fldt
aas
mov
inc
push
xor
aaa
pushf
mov
aas
mov
leave
fwait
mov
mov
test
push
mov
test
int
es
dec
cmp
sub
inc
sub
loop
lods
dec
andb
sub
add
sbb
idiv
loope
test
adc
pmuludq
mov
outsb
sbbb
push
dec
xchg
mov
fimuls
push
sti
mov
pop
ret
dec
rol
notl
imul
subb
pop
cmc
arpl
dec
jae
sti
hlt
lea
arpl
popa
repnz
or
mov
mov
mov
call
and
movsb
sahf
sarl
sarb
insb
sbb
jge
loopne
dec
adc
iret
mov
pop
and
movsb
ficoms
push
add
xchg
dec
cmp
xchg
pop
mov
adc
push
mov
ficoms
bsf
mov
mov
mov
mov
xor
cld
adcb
add
lret
push
and
das
clc
pop
mov
movsb
lret
push
fucomi
mov
pop
push
xor
sahf
insb
imul
out
pop
dec
mov
dec
shlb
jno
dec
inc
iret
add
and
sbbb
inc
outsb
test
sub
test
jnp
push
pop
in
pop
cmp
xor
subb
xor
paddq
push
out
movsl
jbe
incb
and
mov
push
dec
jne
jb
jl
pop
add
push
cmp
fnstcw
cmp
cld
push
iret
push
lcall
mov
or
sbb
dec
das
mov
adc
outsb
or
cmc
add
hlt
xor
bound
mov
push
add
push
push
ljmp
inc
fisubrl
movsb
decl
jl
sbb
lret
xchg
mov
in
sub
out
pop
and
xor
or
sahf
mov
mov
push
icebp
out
fildl
fstpt
mov
cmp
pushl
sarb
mov
sub
mov
inc
js
mov
call
mov
dec
sub
mov
int
mov
rcr
and
xchg
xchg
jb
sub
mov
pop
xchg
js
add
inc
in
mov
inc
scas
sbb
loopne
pop
imul
cmp
sbb
es
into
add
mov
loopne
or
adc
in
xchg
popa
or
xor
mov
into
outsb
aas
andl
out
movsb
inc
loop
xchg
cld
mov
movsl
push
scas
push
nop
fidivl
mov
loop
sub
ss
cmp
mov
sbbb
adc
fcoms
jecxz
rcrb
push
dec
ljmp
ss
ret
pusha
test
shl
dec
jae
scas
inc
fstps
and
in
mov
cltd
or
push
or
sbb
inc
xchg
and
addl
nop
jne
aad
inc
jge
imulb
xchg
into
lods
in
cli
loopne
mov
add
repz
fistpl
and
cmp
sub
movsb
in
sub
jno
lods
jge
leave
mov
sbb
xor
mov
pushf
or
add
pop
pop
cmp
mov
cwtl
jmp
adc
dec
inc
int3
arpl
mov
call
pop
sahf
sub
push
clc
and
iret
mov
pop
xor
shl
mov
mov
push
or
mov
jns
sub
jl
cltd
mov
neg
rolb
insb
mov
das
call
jae
adc
movsb
push
shrb
js,pt
pop
add
xor
sti
dec
jle
movsl
ljmp
mov
mov
in
cmp
jne
clc
fs
lea
dec
push
cli
in
mov
pop
shlb
jmp
mov
aam
adc
lds
inc
je
movntq
add
aam
xorb
into
inc
pop
cmp
stc
sbbl
xor
ficomps
mov
jo
xchg
xor
test
xor
dec
popa
jbe
or
cmp
lods
ud0
enter
jbe
les
mov
lret
mov
adc
inc
jbe
xor
xor
stc
dec
repz
clc
xchg
lea
jne
jge
add
mov
dec
and
ljmp
leave
mov
mov
or
add
jbe
and
hlt
mov
cmp
cmp
pop
loop
repz
pop
xchg
push
gs
adc
data16
xchg
ljmp
rorb
pop
hlt
mov
sub
adc
sbb
stc
bound
jmp
inc
sbb
sub
adc
add
mov
dec
sarb
push
shl
fwait
mov
dec
test
and
jge
add
jmp
sub
bswap
mov
jb
xor
xchg
and
sub
test
or
sub
adc
or
push
jg,pt
jne
std
ja
ss
call
in
and
xchg
ret
pop
inc
pop
and
adc
sbb
pop
sbb
out
dec
insl
scas
scas
mov
pusha
loopne
mov
sub
js
inc
and
inc
dec
mov
add
push
mov
mov
cmp
mov
jno
lahf
repz
xor
daa
test
mov
rcrb
lea
mov
sti
mov
mov
dec
sub
mov
xchg
fcomps
dec
outsb
icebp
xor
inc
in
out
pop
test
sbb
adcb
mov
ret
sbb
mov
mov
mov
or
in
stos
mov
dec
jb
daa
fmuls
jmp
push
inc
lcall
popa
dec
sub
add
in
ss
push
test
add
or
loope
scas
mov
sahf
xlat
fs
jp
xchg
mov
ds
pusha
sub
dec
cmp
mov
push
shll
icebp
pop
sub
mov
lret
les
jg
lods
mov
jle
cltd
test
or
adc
or
in
xor
mov
ss
pop
pop
and
imul
call
adc
dec
and
sub
movsb
and
dec
xchg
sbb
mov
sub
out
jo
dec
sub
pop
je
push
sub
insb
add
push
lahf
movb
xor
outsb
xor
pop
lret
or
mov
lock
lret
mov
pop
mov
ret
out
jo
jae
cmp
jae
mov
pop
mov
mov
and
clc
xlat
and
mov
mov
sbb
addr16
and
jg
mov
rolb
xchg
inc
xor
fidivs
push
inc
and
lods
jno
stos
pop
or
sbb
push
out
lods
cmp
xchg
lret
gs
inc
cmp
jo
lret
push
fsubl
cli
test
sub
add
mov
pop
inc
mov
stos
sbb
xchg
in
jp
xchg
jle
jg
mov
jns
push
sbb
hlt
clc
inc
jg
adcl
sbb
cmpsb
popf
cwtl
test
jp
outsl
mov
fcoml
push
sbb
or
push
xacquire
stos
cmc
sub
mov
add
popa
loopne
loopne
mov
cmp
jmp
cmp
jge
ja
pop
lcall
inc
or
imul
lahf
test
int3
jg
sub
dec
inc
pop
je
lea
test
adc
add
xor
xchg
inc
fstl
repz
mov
adc
jp
fimuls
jno
and
je
cmpsl
push
test
xchg
cmp
shl
aad
pop
mov
cmpb
push
cmp
mov
test
cmpsb
arpl
cli
out
test
iret
mov
int
xor
sub
cli
sbb
xorl
call
xor
cmp
addr16
pop
push
pop
lods
ss
pop
movsl
out
test
in
nop
pusha
data16
rolb
inc
mov
cmp
mov
add
mov
xchg
push
shrl
stos
push
rolb
or
sub
mov
jo
cli
mov
inc
dec
cltd
dec
push
shll
sbb
roll
jno
lea
pop
cmp
pop
roll
fwait
inc
insl
out
mov
or
mov
pop
cli
jb
cmp
clc
xchg
jge
lahf
test
xor
gs
inc
dec
mov
jg
push
fcoms
rcrb
mov
popf
pusha
imul
push
xchg
xor
fwait
and
xor
add
insb
std
test
fwait
xchg
icebp
hlt
out
xchg
sub
out
push
das
inc
in
in
inc
popa
jl
out
jp
lret
insb
sbbl
in
mov
jnp
kunpckbw
nop
cmpsb
xor
ss
jmp
testb
cmpsl
pop
adc
imul
jmp
inc
or
mov
push
nop
test
jnp
sti
filds
push
inc
mov
xchg
jo
xchg
sub
and
mov
push
inc
gs
mov
fs
mov
cld
sbb
mov
leave
push
jns
mov
shl
inc
scas
aaa
repz
lods
movsb
and
int3
sub
mov
mov
lcall
xchg
add
out
pusha
das
jns
mov
aam
jl
arpl
lret
push
test
sub
jno
mov
testb
sub
sahf
lods
xor
sbbl
push
rorl
xchg
pop
sbb
stos
cmpsb
sub
sub
stos
shl
ret
aad
xor
les
mov
dec
sbb
outsb
fdivl
ss
bound
mov
add
loopne,pt
push
adc
add
inc
iret
std
sti
lea
out
add
mov
push
repz
ss
cltd
add
cmp
stos
inc
jge
xchg
lods
cmp
pop
test
adc
fdivs
icebp
int
int
testl
pop
xor
push
fwait
jo
cld
into
adc
stc
inc
cmp
mov
int
jb
dec
out
sbb
xor
gs
mov
sub
lret
add
mov
aas
jle
mov
dec
and
out
orb
cmp
inc
outsl
and
iret
cmpsb
mov
ja
fwait
push
push
stc
lock
and
pop
mov
jle
cmp
inc
dec
jp
add
sub
sub
pop
mov
js
push
std
call
sbbb
cmp
in
cld
imul
inc
adc
mov
add
mov
lea
cmp
out
mov
ret
pop
nop
aaa
shll
pop
push
sti
scas
icebp
movsl
ficompl
repnz
mov
dec
daa
dec
pop
lahf
cmp
ljmp
mov
pop
scas
fidivs
ljmp
popa
cmp
and
xchg
repz
arpl
mov
pusha
ds
xchg
pop
add
push
test
fcompl
push
mov
pop
sbb
test
mov
aam
sub
pop
push
xor
inc
movsb
push
vpmaxub
mov
stos
dec
lcall
jbe
loop
cmp
xchg
push
adc
lret
in
or
std
outsb
sub
mov
dec
adc
push
mov
push
push
lcall
mov
push
jl
add
cmp
add
dec
push
icebp
bound
xor
gs
movsb
cmp
mov
dec
mov
jne
sahf
or
add
cmp
jmp
mov
mov
pop
sub
inc
loopne
fsts
and
add
or
push
mov
push
xor
loop
mov
int
add
jg
repz
add
notb
cmp
sub
xchg
cmp
inc
movsl
sqrtps
shll
shlb
sub
xor
dec
loopne
inc
incb
stos
std
leave
mov
cld
in
nop
cmpsb
out
mov
daa
loop
pop
or
lds
sub
xchg
ds
and
cmpsb
pop
jno
cmpsl
iret
cmpsl
jl
dec
add
lods
cmpsl
les
adc
loope
add
cli
ljmp
cs
and
sub
mov
jbe
movsb
xlat
jmp
nop
fisubrs
lods
pusha
adc
aaa
sub
jae
fisubs
jge
sub
mov
js
enter
mov
or
mov
movb
arpl
cmp
dec
lret
jg
fsubr
jo
mov
rcrb
out
mov
mov
stos
fidivrs
les
xchg
lahf
arpl
cmpsl
aam
shrl
cwtl
mov
mov
cmp
imul
sub
imul
leave
out
mov
mov
icebp
mov
fnstsw
into
scas
paddw
dec
iret
test
jb
jle
sub
or
jmp
push
out
add
cmp
xchg
loopne
aaa
xorb
pop
pop
outsl
jp
ljmp
adc
mov
cmp
or
lsl
es
ret
push
xor
movsl
jno
loope
and
push
shll
sti
test
movsb
test
outsb
sbb
fbstp
jb
or
inc
aad
add
hlt
pop
testb
jge
mov
add
pop
pop
loope
pop
sub
push
sbb
cmpb
sub
pop
out
mov
push
stos
stos
xchg
mov
dec
push
fwait
je
xchg
popa
cmp
pop
ja
mov
sbb
int
xchg
jg
cmp
clc
aas
push
jecxz
jae
repnz
dec
cmpsl
xor
imul
mov
jp
inc
or
and
stos
sbb
or
push
nop
popa
es
mov
mov
dec
inc
rcrl
pop
adc
testb
jne
and
inc
adc
inc
sbb
loope
out
je
shll
add
pusha
shll
cmp
pop
test
mov
movsl
jge
dec
mov
iret
sbb
mov
xor
imul
repz
and
test
cmc
lods
xchg
mov
pop
xor
lcall
mov
rorb
adc
sbb
add
xchg
xchg
fldt
orb
cmp
inc
mov
aas
test
dec
adc
mov
mov
xor
andl
jle
orb
adcl
popl
mov
xor
je
push
mov
jmp
lods
sbb
inc
lret
leave
fcoml
addr16
aam
inc
push
cwtl
out
fistps
inc
mov
fsubrp
cli
cmp
addb
loop
inc
xchg
mov
xchg
fsubrl
test
mov
stos
add
jne,pn
and
arpl
lcall
push
popf
push
sbb
inc
sbb
sahf
insl
dec
jg
push
xchg
xchg
fstl
cmc
pushf
pop
test
xchg
inc
sub
imul
mov
nop
jp
push
dec
jecxz
cmpsb
mov
adc
sti
and
add
inc
insl
cmp
daa
xchg
sub
mov
aad
bound
insl
aas
repnz
adc
jns
nopl
mov
push
jge
mov
xchg
sahf
daa
mov
pop
daa
fwait
mov
rcr
into
lock
sub
or
fcomps
dec
cwtl
aad
shlb
mov
imull
std
into
fidivrs
std
jns
enter
mov
test
jae
inc
popf
and
scas
fcompl
addr16
jbe
ror
xchg
xchg
sbb
ss
and
cmp
sbb
or
idivb
pop
rclb
sbb
sti
idiv
mov
jns
mov
nop
std
pushf
pop
adc
push
adc
mov
repz
dec
aaa
mov
xor
lods
push
ljmp
popa
push
sbb
add
movsl
jbe
sbb
jo
cmova
adc
adc
aam
lds
mov
fisubrs
call
jecxz
add
cmp
jecxz
fyl2xp1
cmpb
mov
fsubrl
mov
das
sub
icebp
out
inc
das
pop
outsb
pop
xor
dec
pop
lret
mov
add
arpl
imul
cmp
mov
sbb
cld
repnz
outsl
lods
stc
mov
orb
xor
ds
push
or
sti
xchg
xchg
add
sahf
jns
or
mov
pop
mov
es
xor
in
xchg
push
xchg
push
loope
out
scas
repnz
jmp
sbb
mov
adc
sub
dec
mov
sub
dec
mov
jno
shlb
clc
pushf
mov
icebp
dec
sbb
cmp
jae
out
jp
xchg
cmp
ret
lods
sub
mov
ljmp
adc
xchg
fiaddl
xchg
mov
pop
xchg
dec
mov
xchg
push
rcrl
mov
in
es
scas
leave
lods
adc
ja
push
mov
xchg
mov
mov
movsb
dec
dec
imul
sub
outsl
inc
shr
xchg
xchg
sbb
test
pop
pop
call
js
loop
ret
orl
lock
sbb
sub
ss
inc
push
jg
decl
imul
loop
push
ljmp
mov
loop
inc
cmpsb
lret
xor
aad
mov
dec
data16
cwtl
das
sbb
fnstcw
daa
inc
xchg
es
add
aaa
popf
dec
mov
pop
cmpsl
fmuls
adc
pop
ficompl
push
ret
jp
push
mov
jl
jecxz
jbe
sub
jne
ret
mov
jb
inc
pop
sub
pop
xchg
mov
push
in
mov
cmp
push
inc
out
cli
in
pop
ja
lcall
in
pop
int
test
adc
mov
sarl
or
sbb
push
xchg
insb
repz
hlt
mov
sub
xor
or
lea
sub
fidivl
cmp
sub
push
add
inc
stc
dec
cmp
addr16
dec
xchg
sub
mov
inc
cli
jno
inc
in
mov
loop
test
nop
pop
add
call
dec
pusha
lahf
xorl
pushw
sub
mov
testl
cmc
dec
xor
jmp
shl
test
movsb
aaa
dec
jmp
testl
ret
out
lahf
pop
adc
mov
pop
lods
movsb
and
lahf
inc
fldcw
add
imul
inc
or
pop
movsb
dec
mov
inc
mov
dec
repnz
mov
fstl
int
cmc
push
bswap
nop
mov
stc
hlt
sub
out
mov
lret
and
jecxz
cmp
pop
cmp
inc
std
push
dec
jo
ss
mov
das
dec
std
ja
sub
adc
aas
sbb
cmp
pop
das
jno
dec
push
jl
or
mov
mov
mov
out
pop
ljmp
push
or
jns
adc
jl
dec
call
imul
sbb
imulb
mov
push
imul
mov
inc
call
dec
mov
daa
lods
xor
mov
insl
mov
xchg
push
pop
addb
mov
adcl
cli
push
add
sub
sub
and
and
pop
jecxz
push
aad
xchg
dec
adc
scas
pop
fildll
push
scas
dec
jne
or
xor
mov
adc
jg
cltd
push
popf
jmp
and
push
jge
outsl
push
mov
mov
xchg
xchg
mov
mov
or
push
xor
and
mov
cmp
fabs
pop
scas
test
shl
xchg
lahf
pop
mov
ja
insb
mov
xor
pop
xchg
xchg
adc
cmpsb
cmpxchg
stc
and
outsb
out
mov
jecxz
insl
repnz
inc
cmc
inc
aam
push
jp
adc
mov
lret
or
stos
jae
idivl
je
lods
mov
jbe
mov
mov
cmpb
sti
sub
test
inc
les
inc
adc
jp
xchg
cli
aas
movsb
stos
out
pop
mov
sbb
adc
sub
sbb
je
push
push
movsl
jge
insb
clc
sub
shrl
sarl
lds
aam
aad
mov
mov
dec
leave
mov
out
sbb
pop
rolb
xchg
fwait
lahf
mov
mov
insl
inc
pop
adcb
dec
add
outsl
sbb
cmp
nop
xchg
sbb
fdivs
int3
lret
lock
and
movsl
pop
icebp
scas
popf
mov
push
cmpsl
aad
push
imul
jae
insb
sub
cmp
lods
inc
cwtl
xorb
les
lods
test
pop
ja
ret
int
or
jns
jae
jno
das
and
cwtl
jns
mov
scas
push
jecxz
mov
call
test
mov
dec
movsb
and
cmpsl
adc
dec
jae
mov
and
mov
in
xchg
leave
push
in
inc
and
movsl
fcmovnu
sbb
jg
sbb
aas
loopne
or
imul
ret
loop
hlt
and
mov
jg
lret
and
test
mov
pop
mov
int
daa
je
xchg
sub
push
in
mov
fwait
cbtw
jae
fdivrs
mov
or
fimuls
scas
pushf
das
lret
adc
loopne
xorl
inc
test
aad
in
shll
cmp
push
in
cmp
sbb
mov
iret
pop
sbbb
es
xchg
gs
dec
xor
insw
loope
cmpl
xchg
jno
dec
jmp
add
pop
bound
jnp
inc
std
lea
sub
sbb
jns
test
push
call
xlat
js
arpl
setae
aas
repz
jmp
out
add
movsb
mov
test
adcb
mov
call
iret
scas
add
push
or
js
imul
sub
sbbl
pop
out
jle
inc
outsl
pop
test
xor
fdivs
and
mov
xchg
mov
and
iret
mov
enter
inc
stos
sti
xchg
fldenv
lret
out
pop
shrb
rcl
xor
in
cs
cmp
jmp
addr16
xchg
jle
je
push
xor
adc
sub
popa
aam
push
dec
xchg
insl
or
add
out
mov
sub
cmpsl
cli
out
andb
mov
pop
mov
pop
aaa
in
pop
xor
jle
cmpl
mov
and
pmaxub
das
xchg
sar
stos
test
inc
test
scas
outsl
dec
or
rcr
dec
dec
sbb
jge,pt
jle
push
pop
dec
popl
ficomps
and
push
cmp
dec
imul
lcall
push
mov
loopne
adcb
fdivl
or
iret
push
dec
call
xchg
mov
addr16
pop
std
dec
sahf
out
popa
sbb
sbb
or
mov
and
leave
test
pop
cmpsl
lods
mov
dec
sbb
sub
sbb
out
sbb
sti
je
sbbl
ljmp
pusha
push
popf
inc
das
inc
xchg
push
call
idiv
gs
imul
outsb
mov
subl
fsubl
sub
sbb
jmp
fsubl
shrb
mov
adc
xchg
pusha
aas
and
rorl
fildll
mov
mov
jb
lahf
or
data16
fnstenv
lahf
pop
js
lea
and
sbb
je
mov
sub
cli
int3
orl
and
inc
pushf
fsub
sahf
push
shll
lock
pop
push
inc
push
mov
jp
movb
xchg
xor
sbb
fdivrs
imul
test
popa
sti
test
add
xchg
cmpsb
iret
fmull
and
push
mov
fs
call
sub
aam
out
xchg
jl
xchg
in
mov
mov
das
jno
pcmpgtb
ret
addr16
pop
sub
adc
in
ja
sbb
dec
dec
xor
dec
push
cwtl
js
aam
test
mov
divl
popf
shrb
ss
sahf
dec
cmpsl
je
mov
push
stos
test
xor
lret
subb
dec
push
fildll
and
mov
daa
cmp
xchg
lar
jmp
repz
jg
cs
inc
cmp
sbb
push
sub
filds
sub
push
dec
xlat
xchg
mov
inc
stc
fcomip
and
les
mov
orb
int3
lea
push
leave
add
pop
push
or
cmp
enter
imul
lret
mov
idivl
or
jb
andnps
lret
mov
ljmp
push
iret
or
adc
or
sti
ljmp
jnp
pop
movsl
rcll
cmpb
leave
pop
cmp
push
pop
testb
xchg
jmp
rcr
or
movsl
std
ja
lcall
shll
sbb
cmpsb
subb
outsl
inc
sub
inc
icebp
ret
ja
dec
adc
add
idivb
inc
icebp
out
dec
push
in
cmpsl
les
inc
push
sub
sub
ret
inc
sbb
jbe
mov
sbb
sub
cltd
loope
sar
cmpsl
addb
xor
lret
mov
jmp
pop
pop
sub
mov
push
and
inc
subb
mov
and
and
outsb
jno
ss
mov
push
cmpl
mov
es
mov
and
cli
sub
cli
mov
inc
xor
fdivl
sub
aad
add
lock
mov
mov
dec
mov
lret
xor
imul
dec
cmpsl
pop
movsb
ja
mov
and
icebp
adc
sub
imul
mov
mov
pop
pop
dec
push
fmuls
jge
in
jnp
sub
xor
mov
mov
or
xchg
or
and
cmp
ret
lcall
jecxz
sub
pop
cmp
jno
andl
fmuls
xor
repnz
sbb
mov
out
pop
cli
push
movsl
addr16
in
cmpsl
jae
add
adc
js
xchg
lods
bound
aam
sub
pop
jbe
arpl
cmpsl
sbb
jne
movsb
insl
push
bound
cwtl
aaa
sbb
or
xchg
cmpsl
daa
mov
xchg
and
jae
xchg
xor
jne
add
and
dec
sarb
insl
push
xlat
fcmovnu
fcomps
xor
test
fimull
xor
sbb
mov
mov
int3
repz
push
lea
sarb
int
cmp
push
gs
shlb
lea
mov
jg
rcrb
or
xlat
insb
loope
adc
dec
cmpsl
lahf
adc
popa
jne
lea
lret
lods
sbb
add
jg
mov
mov
pop
pushf
int3
cld
call
je
push
mov
stc
hlt
jno
adc
mov
mov
and
imul
add
xchg
push
fcmovb
push
xchg
movlps
fstp
insb
jle
cmpsb
int
fsubs
repz
xchg
push
ja
pop
adc
sub
xchg
fwait
subb
mov
push
sub
push
jl
sub
mov
mov
or
or
ret
and
pop
dec
inc
mov
mov
enter
outsb
cmpsl
push
pop
movsb
mov
jnp
lods
jmp
aas
out
cmp
sub
add
sub
xor
mov
aaa
xchg
jg
mov
mov
or
push
sbb
bound
push
inc
xor
jge
lock
mov
jmp
cltd
outsb
jbe
nop
sub
out
fsub
out
xor
mov
sahf
xchg
dec
aaa
call
repnz
dec
push
testb
int3
inc
rclb
inc
out
mov
jle
mov
shll
into
in
pop
cmpsb
aad
inc
out
and
test
andl
pop
bound
mov
aad
mov
push
push
imul
add
insl
push
idivl
push
add
mov
sbb
mov
mov
test
lods
push
stos
xchg
push
add
lock
jl
jo
or
test
in
fbld
fistpll
dec
es
dec
cmpsl
mov
icebp
jo
adcb
int
jno
push
stos
pop
mov
xchg
cltd
aad
mov
cmp
scas
scas
adc
cltd
jle
aad
fwait
push
and
jl
ret
aam
or
jecxz
cmp
push
dec
mov
lods
mov
lahf
pop
ret
jg
in
and
add
jne
mov
cmp
in
jb
outsb
cmpsl
mov
rcr
movsl
jb
sub
cmp
loop
mov
mov
push
insb
and
lahf
mov
push
mov
sahf
insl
push
loope
bound
jg
xchg
repz
adc
pop
pop
cmp
xor
pop
call
adc
mov
dec
fs
or
call
lds
popl
aaa
mov
cmp
ret
mov
sub
pushf
jns
fwait
or
test
sbb
dec
cld
sbb
and
int
push
leave
rolb
les
cmp
pop
cmpl
add
xor
pop
add
rclb
in
mov
cs
mov
ja
adc
xchg
dec
xor
cmp
mov
dec
das
push
xor
jo
or
and
and
sub
outsl
pop
dec
icebp
cmpsl
gs
repz
pushl
ss
lret
stos
mov
xchg
in
dec
out
or
sbb
imul
and
pusha
imul
std
adc
clc
lock
rorl
xchg
jg
fs
jge
call
push
cmc
jae
pop
insb
les
sbb
lea
cmp
jno
jns
test
loop
iret
outsl
or
xchg
sbb
fs
pop
pop
lock
push
popa
mov
add
push
sbb
sub
out
mov
mov
ret
ret
mov
mov
sahf
sbb
cmp
mov
mov
mov
test
loope
aad
cmc
lcall
fcompp
xchg
or
enter
mov
jno
leave
cld
shll
xor
dec
xor
fstpt
je
test
mov
dec
psrlw
or
data16
xor
mov
cmp
mov
sub
std
call
int
dec
sub
push
lods
xchg
push
xchg
or
and
adc
sub
and
xor
fstps
xor
jp
push
movsb
in
icebp
mov
fnstenv
imul
xchg
xlat
cld
or
fwait
out
and
stos
outsl
int
nop
add
mov
loope
sub
ss
mov
pop
stos
xchg
mov
xchg
cwtl
loop
shl
data16
lods
iret
call
or
lods
lods
fisubrl
out
std
mov
xor
repnz
xor
mov
pop
add
jge
call
cltd
cmp
pop
mov
jmp
mov
js
adc
and
shll
mov
in
add
addl
xchg
psrlw
fmull
loop
lock
das
out
adc
pop
mov
repnz
mov
xchg
iret
and
or
mov
popf
loopne
push
mov
test
or
outsb
and
movsb
adc
popf
xchg
jmp
inc
popa
sbb
cmp
xor
imul
push
mov
mov
faddl
ret
subl
mov
xchg
jmp
or
sub
pop
add
lret
dec
scas
jl
pop
pop
cmp
fsubrs
sahf
jge
clc
mov
js
xchg
test
jb
and
imul
test
jno
mov
mov
or
push
mov
xchg
sbb
daa
in
mov
subb
pop
test
push
iret
dec
xchg
int3
sti
pop
in
cmpsl
jl
mov
ffreep
aad
pop
jno
cld
xchg
xor
push
mov
stc
scas
repz
push
xchg
mov
mov
xor
cmpsl
mov
inc
dec
lea
push
or
fimuls
scas
jecxz
jo
bound
cmc
dec
out
fldt
or
mov
imul
imul
mov
pop
pop
dec
ret
xor
rcll
jae
fidivl
xorb
xor
add
mov
pop
shll
pop
clc
rcrb
or
scas
inc
test
out
js
add
out
xchg
loop
xchg
push
xchg
sub
dec
pop
jne
add
imul
test
in
jl
pop
xor
mov
iret
adc
pop
rorb
mov
lcall
scas
sub
add
push
inc
xor
push
ljmp
adc
xchg
pop
addb
aam
xchg
cwtl
mov
fbld
sahf
push
cmp
pop
fnsave
lds
int
in
sub
fstpl
or
push
into
dec
popf
inc
sbb
mov
gs
mov
fidivs
arpl
jp
stos
test
cmpsl
mov
stos
mov
adc
dec
xor
icebp
sbb
jmp
cmp
test
lods
pop
add
mov
stos
sub
popa
add
or
ds
cmc
inc
frstor
mov
mov
pop
push
gs
or
fsubp
aaa
subl
lods
mov
jne
outsb
fucomip
xchg
test
lea
dec
jb
adc
jmp
test
out
inc
dec
push
test
dec
mov
movsb
xchg
aam
pusha
push
hlt
nop
shll
jae
or
enter
pusha
add
pop
or
pop
pop
xor
vaddps
sub
push
inc
jne
and
call
inc
mov
ss
or
pop
int3
jle
rcrb
fwait
jae
pop
mov
in
sbb
and
outsb
lcall
frstor
jns
xchg
sub
or
das
cmp
test
inc
mov
out
lock
loope
inc
sbb
cmpb
push
dec
lret
mulb
das
or
paddsb
mov
jbe
out
div
xor
lret
push
inc
int3
mulb
mov
popf
bound
das
jl
push
sub
and
jno
pushf
xchg
dec
movsb
mov
mov
jp
adc
fimuls
xor
and
leave
repnz
inc
and
icebp
push
mov
sub
aam
fwait
and
popa
popf
xor
mov
addr16
enter
jo
push
push
mov
push
iret
filds
mov
mov
push
pop
adc
push
clc
testl
in
in
gs
mov
xor
sbb
cmp
arpl
test
insl
ret
stc
jae
sub
jne
icebp
stc
ljmp
push
in
cli
les
sub
ss
jge
inc
sub
mov
xchg
pop
xor
and
ljmp
stos
cmp
repz
dec
inc
imul
add
mov
adcb
ss
inc
in
into
in
loopne
cli
orl
hlt
loope
mov
imul
sbb
inc
lock
in
jmp
jp
loop
and
outsl
sahf
or
test
stc
cmp
movsl
or
mov
dec
push
jmp
push
lds
nop
or
pop
outsl
xor
cmp
xor
ucomiss
lock
jl
test
lds
xchg
test
shr
insb
jae
pusha
xor
ljmp
rolb
mov
in
lods
adc
testb
push
jmp
in
inc
mov
mov
cwtl
pop
push
or
pushf
movsb
xlat
mov
lret
dec
cwtl
cmp
or
add
idivl
xor
mov
adc
arpl
xchg
insl
sbb
or
xor
repnz
rcrb
dec
adc
imul
xor
inc
sbb
and
int
add
ds
loope
imull
sbb
cmpl
in
pusha
dec
fs
aaa
loop
sbb
dec
cmp
aad
sarl
leave
sbb
pop
popl
push
clc
rcl
dec
cmpsl
inc
lods
xchg
stc
int
and
popa
xchg
cmc
dec
jno
mov
mull
shlb
mov
subl
scas
repnz
stos
sbb
testb
dec
int
lds
add
test
leave
das
cli
aam
ja
xchg
push
cmp
add
xchg
or
or
iret
out
xchg
jo
push
and
aad
fwait
test
lea
lods
arpl
sahf
pop
adc
test
sti
imul
rol
jp
jnp
ret
rcll
addr16
adcl
add
int
mov
lds
push
call
lock
sti
sti
arpl
pop
adc
inc
fistpl
popa
mov
subl
xchg
js
mov
xlat
scas
dec
xorl
enter
sub
xor
lcall
push
xchg
stos
sub
es
cmp
sti
xor
mov
rcrb
jnp
jle
std
loopne
sarl
jl
sbbb
mov
fdivrs
pop
mov
hlt
mov
arpl
sahf
mov
daa
outsl
push
xor
and
pop
fmull
and
push
int3
mov
jp
and
ret
xor
or
hlt
mull
push
xchg
add
cmp
inc
scas
dec
loope
stc
lcall
in
cmp
daa
xchg
out
jno
inc
or
ss
iret
std
jns
icebp
stc
jnp
pop
pusha
and
and
in
leave
push
mov
js
pusha
ja
cmp
cmp
aam
out
xchg
xchg
popa
es
imul
adc
fists
popa
je
sbb
dec
fwait
mov
and
ret
fbstp
enter
out
jmp
nop
iret
lahf
xchg
hlt
sti
add
insl
inc
rorb
sti
in
cli
pop
jno
jmp
pop
testl
cmpl
mov
faddl
inc
adc
popf
les
pop
cmpsl
pop
test
aaa
push
add
es
test
push
push
hlt
dec
fs
mov
adc
lds
sub
jae
lock
cmpsl
daa
cwtl
mov
out
scas
pop
sbbb
sub
mov
iret
mov
xorb
fisubs
clc
scas
add
push
fsts
fisttpl
pop
test
push
inc
les
adcb
addr16
push
push
addr16
ja
jl
mov
inc
icebp
jp
repnz
sarl
ja
pop
xchg
cmp
xchg
push
mov
aad
aam
mov
mov
sbb
mov
inc
fisttpl
xor
shlb
cltd
frstor
bound
jno
out
push
xchg
adc
jae
jmp
inc
lret
mov
xchg
mov
lock
mov
push
icebp
dec
pop
leave
cli
pop
adc
lea
adc
lods
bound
lcall
mov
test
gs
sub
inc
xchg
and
dec
sub
fdivrs
pop
inc
pop
imul
mov
mov
mov
out
adc
sub
movsl
and
in
inc
mov
pop
pop
js
add
rcll
push
outsl
jecxz
dec
in
jle
add
repz
sub
mov
repz
mov
xchg
or
jns
js
xor
mov
je
js
ret
lahf
mov
ds
xchg
ja
pop
push
mov
mov
pop
pushl
push
nop
or
push
adc
mov
cld
imul
jge
sub
sub
mov
adc
cs
sti
sub
dec
leave
imul
arpl
and
pop
cmp
cmp
cmpsb
loopne
sbb
mov
das
jle
xchg
lds
int
daa
cltd
shlb
add
inc
add
jle
jge
push
arpl
pop
inc
sbb
adc
pop
mov
stc
or
aaa
test
aas
cmp
xchg
orl
sahf
lods
mov
inc
fcomps
bound
fwait
pushf
mov
addr16
ret
outsb
lret
jp
daa
outsb
rclb
xchg
mov
push
mov
jl
ds
imul
push
cli
push
test
pop
pop
push
add
or
mov
ja
icebp
xchg
cmpl
popa
cmpsb
ror
dec
jae
add
in
dec
stc
dec
sub
push
test
ja
mov
mov
mov
push
xchg
mov
daa
xchg
cld
loop
and
mov
mov
xlat
jbe
in
cmp
mov
je
rcll
xlat
sub
stc
mov
stos
cmp
leave
shrb
sub
adc
int
pop
lahf
mov
jl
cmp
popa
xchg
lret
push
jg
add
sub
stos
push
sbb
loopne
int3
les
jno
jb
shl
icebp
aam
xchg
pop
loope
jne
sahf
into
int
out
add
mov
insl
xchg
pop
inc
mov
pop
lret
pop
jae
cltd
cmp
jp
jb
popa
sub
fmul
mov
xor
push
cltd
mov
jecxz
pop
push
lds
jmp
pop
pushf
pop
xor
mov
cmp
fmulp
clc
add
dec
lcall
jmp
out
inc
mov
inc
jle
fildll
lds
push
icebp
lods
shlb
out
pop
dec
es
sub
cmc
jb
int
or
add
and
mov
inc
loopne
mov
sbb
cmp
or
enter
jnp
dec
sub
fimuls
stc
pop
add
cmp
add
arpl
mov
push
adc
push
inc
fisttpl
xchg
addl
js
lods
push
sub
out
xor
imul
sub
lock
shl
cld
mov
cld
lods
in
aas
mov
and
and
jl
add
dec
iret
push
xorl
jnp
or
sbbb
adc
mov
pop
ret
loop
mov
ret
adc
lret
stos
repnz
cmpsb
pop
push
pushf
js
jp
cmc
dec
push
call
fmuls
or
mov
sbb
movsb
dec
adc
pop
test
outsl
pop
fidivrs
or
dec
jmp
jmp
arpl
int
cmc
cmpsb
jbe
sbb
mov
movl
mov
les
scas
pop
mov
fisttps
cmpsb
aaa
mov
mov
stc
fcomps
push
arpl
lock
push
subb
popa
pop
aaa
and
and
push
push
scas
cmp
jno
out
add
inc
cld
fwait
mov
insl
divl
popf
push
fstl
push
sub
sbb
xor
popf
push
icebp
imul
jae
roll
push
cli
test
cltd
stc
jle
jb
add
inc
pop
pop
inc
shrb
js
lahf
sbb
push
fsubrl
and
add
xchg
leave
xchg
mov
les
lcall
jmp
add
lahf
mov
lods
hlt
jo
jg
enter
pop
inc
push
pop
or
sub
mov
push
inc
out
nop
fisttps
sub
inc
test
movsl
in
push
lretw
rorb
sbb
scas
adc
bound
dec
dec
jo
mov
xor
fnstsw
xchg
xor
std
lock
xchg
int3
movsb
xchg
leave
ret
or
cmp
sub
fcomp
movhps
clc
push
push
jle
push
xchg
adc
ljmp
imul
and
or
daa
outsb
adc
je
outsl
push
cs
push
inc
push
repz
clc
js
movsl
loope
imul
cld
in
out
sub
sar
pop
loop
jo
and
push
mov
out
jbe
sbb
xchg
cli
mov
sbbl
pop
add
sar
dec
or
push
imul
jmp
jle
fs
std
iret
xchg
cltd
mov
cmpsl
fwait
out
je
imul
mov
xchg
out
push
jmp
call
mov
mov
dec
inc
loop
xchg
sbb
das
push
les
jne
pusha
iret
sub
mov
aad
incl
jns
lea
mov
punpckldq
pop
lods
add
out
dec
lock
mov
in
das
xor
imul
inc
in
mov
mov
ret
mov
push
mov
adc
cmp
mov
shll
add
sbb
stos
ret
fstl
mov
fisubrl
into
leave
rcl
inc
xchg
insl
mov
xor
ja
mov
aad
jl
push
push
fxch
call
mov
jmp
mov
mov
shlb
jge
mov
fldenv
shll
in
cmp
jmp
push
sub
mov
stos
sarb
out
in
jns
and
add
nop
fsubrl
push
pop
stos
jnp
inc
cwtl
call
inc
mov
ss
mov
xor
and
fstl
das
jbe
dec
int3
cld
sub
in
movsl
adc
mov
mov
sbb
ficoml
mov
push
push
add
out
lret
cmpsl
sbb
mov
cld
xchg
mov
mov
pop
mov
mov
stos
mov
xchg
mov
mov
mov
dec
mov
and
sub
stc
mov
inc
add
scas
xor
fimull
mov
push
pop
in
and
rcrl
xor
scas
push
add
inc
js
cmp
and
loopne
icebp
ds
and
lcall
or
mov
dec
inc
mov
arpl
jae
cwtl
das
pushf
insb
sti
jg
in
aaa
mov
divb
mov
inc
push
add
dec
sbb
mov
or
mov
inc
sub
xchg
les
lock
hlt
cwtl
push
and
xlat
inc
push
sub
and
stos
jno
pop
cwtl
cmpsl
xchg
jge
sub
mov
inc
out
mov
mov
pushf
pop
sti
jo
adc
push
or
cmp
inc
iret
je
fucom
into
sub
xchg
pop
mov
mov
pop
int3
loopne
dec
inc
shrb
movsl
stos
cmp
mov
pop
sub
xor
xchg
lcall
data16
jne
jge
mov
scas
pusha
shrb
je
repz
pop
ja
imul
sbbl
mov
jmp
dec
fucomp
in
mov
sti
mov
ljmp
or
push
pop
sti
stc
pusha
xchg
sbb
jbe
fdiv
jno
movsb
test
xchg
je
dec
fnstsw
les
jne
push
shlb
xchg
and
pop
call
xor
mov
fidivrl
popa
fwait
les
dec
addr16
sub
adc
ds
lcall
out
xlat
arpl
mov
cmpb
fadd
mov
xor
movsb
sbb
adc
in
pop
bound
push
test
add
cmp
add
int3
call
jl
or
loope
mov
lea
mov
imul
insb
das
jl
or
push
sub
xor
pop
inc
mov
fistl
lock
xchg
das
xchg
mov
xchg
out
adc
pop
out
dec
sbb
mov
and
adc
ficompl
and
add
iret
sahf
movsb
outsb
loope
xlat
inc
and
cmp
ret
nop
jl
enter
rorl
lahf
mov
pop
movsb
cmp
jl
xchg
mov
cmp
stc
or
je
aas
inc
and
js
test
outsb
and
shrb
jbe
int3
dec
lret
push
rcl
xchg
xor
xchg
or
lods
sbb
fidivrl
and
xchg
mov
mov
mov
mov
mov
fisubs
scas
bound
mov
cli
div
mov
xor
xor
mov
enter
aam
test
add
adcl
ret
addr16
enter
and
xor
add
mov
xor
xorl
leave
mov
fnsave
xchg
xor
jecxz
cmp
nop
jno
sub
lcall
or
fistl
pop
xor
mov
and
sbb
negb
mov
or
dec
mov
out
adc
sbb
sub
lahf
dec
jnp
mov
sbb
rclb
test
sub
shl
sbb
sub
push
fisttpl
sub
xchg
stos
mov
mov
push
lods
pop
in
sbb
testb
jmp
movsb
outsl
cmpsl
push
cli
or
push
or
shrl
xor
inc
out
fsubs
mov
jbe
jb
rclb
adc
and
jne
test
mov
jbe
cmp
bound
pop
popa
ja
pop
sub
mov
jae
or
mov
test
pop
test
sbb
cmc
jmp
lods
or
add
imull
mov
lock
test
dec
sahf
cmp
popa
push
jmp
aam
sahf
loopne
ret
jmp
ret
push
mov
dec
mov
aam
adc
jb
and
mov
jae
xchg
test
lret
arpl
dec
clc
dec
cli
add
imulb
cltd
jae
sbb
or
dec
add
dec
cmc
jbe
jnp
leave
xchg
push
xchg
and
adc
daa
xlat
push
push
daa
lret
sbb
xchg
sub
adc
cmp
repnz
xor
mov
pop
loope
lods
subl
xchg
ss
dec
popa
clc
sub
xchg
enter
push
mov
imul
or
add
std
pop
dec
int
loop
or
mov
lret
gs
cmc
js
jmp
shl
cld
hlt
mov
jnp
in
xchg
loope
lods
add
or
add
lea
adc
lods
addb
mov
enter
xchg
sub
add
insb
inc
cs
jge
pop
fwait
mov
pop
xor
or
dec
mov
inc
xchg
fsubrs
insl
mulb
mov
mov
pop
int
fdivrs
add
adc
xorl
mov
dec
jnp
mov
inc
dec
pushf
jle
inc
fdivrl
fsubs
in
inc
dec
mov
insl
xor
jge
jmp
push
jle
nop
fmuls
cld
mov
inc
dec
mov
lds
xchg
pop
and
dec
sbb
dec
mov
push
aaa
inc
or
add
push
sub
sbb
fwait
mov
ja
mov
das
mov
loopne
pop
je
jbe
enter
fidivrs
add
dec
loopne
adc
push
xor
mov
fucomip
in
mov
rcrb
jle
xorl
jmp
fcomps
leave
mov
aas
sbb
dec
pop
dec
mov
xchg
and
mov
loop
pop
jl
shl
cmp
add
frstor
sub
divb
jg
or
iret
rcrl
add
cmc
mov
pop
inc
cmp
mov
jb
insb
imulb
sub
fisubrl
mov
push
pushf
sahf
lret
or
cli
pop
xchg
out
mov
mov
je
loope
push
lods
push
leave
loop
pop
jl
test
cmpsl
adc
inc
bound
inc
mov
insb
jmp
loopne
leave
mov
push
push
cmp
cmp
fistl
ja
sarl
sub
pop
adc
rcl
cmp
jl
mov
mov
filds
mov
or
cmp
test
aas
repz
lds
daa
add
pop
mov
xchg
xor
inc
mov
xchg
inc
cmc
adc
inc
jmp
ret
jp,pn
push
jg
mov
insl
adc
xor
ficompl
and
xchg
sbb
notb
push
jns
jg
mov
in
mov
add
cmpsl
jns
adc
dec
push
inc
mov
fcomi
jp
fsubl
faddl
adc
mov
movl
rolb
pop
mov
push
notb
hlt
mov
hlt
pop
xchg
jle
clc
jmp
enter
mov
out
or
pop
test
addr16
cwtl
push
imull
test
stos
jmp
add
xchg
sbb
and
sub
lret
mov
cmpsl
and
inc
stc
dec
mov
ret
push
jbe
inc
mov
das
add
cltd
add
pop
cmp
testb
or
pop
add
movsb
pop
xchg
jp
cmp
xor
cli
repz
xchg
js
imul
push
leave
add
js
push
xlat
out
mov
jle
outsw
out
test
arpl
xchg
jmp
push
in
lahf
mov
in
roll
sub
das
adc
inc
inc
test
fistpll
mov
cmc
or
imul
adc
xchg
aad
int3
scas
int3
cmp
mov
add
lock
rcrl
pop
push
xor
mov
ljmp
icebp
or
cmp
aam
xor
inc
jmp
jae
pop
jecxz
or
adc
mov
ficoml
pop
add
jbe
ja
mov
sti
mov
xor
or
dec
bnd
add
inc
lods
adc
jmp
jecxz
add
jbe
jns
adc
add
adc
pop
mov
xchg
xchg
lcall
shrb
shrb
ljmp
push
add
in
jb
scas
out
insb
out
test
nop
jo
scas
test
pop
adc
push
push
mov
in
sub
pop
adc
mov
js
hlt
data16
std
mov
adc
cmc
sbb
sbb
ret
mov
movsb
pop
test
xchg
xor
fwait
jecxz
ljmp
scas
sbb
xor
sub
sahf
pop
inc
es
stos
pop
inc
mov
sbb
imul
push
jle
xor
int
ds
dec
push
rolb
push
xchg
mov
mov
push
xchg
leave
mov
push
inc
push
shrl
testb
movsl
rcrb
jg
lods
cs
jl
pop
test
je
jecxz
hlt
sbb
rolb
mov
enter
xchg
insb
loope
add
clc
or
call
imul
push
imul
add
jmp
fnstsw
sarb
xor
jg
sbb
cwtl
cs
repz
mov
lock
call
ds
mov
dec
jnp
xchg
sahf
mov
or
es
sub
stos
pop
inc
inc
pop
fisubs
into
push
test
dec
lahf
dec
inc
call
push
loopne
sbb
call
push
mov
pushf
out
lods
adc
iret
data16
jae
and
cmp
pop
push
aas
and
mov
in
stos
jb
sub
sub
mov
in
mov
test
movsl
mov
sub
sub
lret
xor
jmp
cmc
cmp
and
xchg
aas
pop
xchg
jns
xchg
xor
int
sbb
pop
dec
or
addr16
outsl
add
shr
call
pop
dec
out
dec
jmp
jnp
dec
in
or
movsl
pusha
pop
lret
xchg
stc
sub
cmp
enter
adc
fcmovnu
jo
xor
mov
ds
xor
inc
sub
arpl
push
cmp
ja
scas
jnp
xor
ljmp
and
mov
cmp
cmpsb
sbb
sbb
insb
jmp
xor
pop
sbbb
xlat
mov
cltd
adc
sarb
jno
or
xchg
or
cwtl
mov
xor
cld
mov
repnz
in
xchg
shrl
sahf
roll
fisubrs
and
add
push
outsb
mov
out
int
ficoml
nop
or
mov
insl
fisttps
jle
jo
jle
jne
push
pop
out
sub
or
mov
push
xchg
jg
out
pusha
pop
aad
or
or
out
ret
jmp
out
cli
dec
sbb
sbb
and
lea
pop
add
std
popa
movsb
inc
dec
cs
call
clc
and
push
or
mov
and
xchg
dec
int
test
mov
jns
loopne
mov
mov
into
into
imul
xor
adc
and
cmp
pop
in
pop
sub
mov
sbb
lock
push
mov
insl
xchg
or
pop
sbb
imul
loop
fsubl
in
xchg
push
add
call
sub
pop
das
pop
push
cmc
lock
mov
xchg
or
cltd
add
stos
insl
sbb
lods
sti
cltd
xchg
mov
mov
mov
bound
cs
dec
dec
or
xor
fisubrs
repz
lds
sbb
jne
fistl
test
mov
push
dec
js
pop
jo
cmpsl
mov
or
push
bound
fcmovbe
mov
adc
pop
sbb
sahf
rcll
loope
dec
mov
sbb
xchg
jb
sti
adc
cmp
sbb
cld
out
mov
adc
loopne
xor
cmp
scas
loope
call
mov
inc
hlt
es
lea
nop
lret
mov
mov
lea
xchg
std
or
lea
xchg
les
js
icebp
sahf
std
roll
xchg
sbb
pop
pop
and
and
lret
aaa
push
test
adc
or
fld
mov
push
jne
dec
out
jnp
and
adc
mov
sbb
imul
inc
lods
xchg
ret
arpl
push
in
sbbl
addr16
mov
xor
mov
loope
repz
pop
and
adc
xlat
mov
sub
nop
push
scas
faddl
stc
push
jge
addb
jp
fildll
mov
jbe
adc
push
mov
mov
push
sar
push
sti
fwait
and
pop
into
pop
push
les
lahf
cmp
incb
sbb
pushf
out
mov
push
xor
lcall
cld
lods
push
adc
daa
jp
outsb
jb
add
dec
dec
and
pop
mov
sbb
aad
mov
inc
std
rcll
jge
cmp
ficoml
imulb
xor
jns
mov
stos
or
stos
negl
jno
int
hlt
sub
out
fdiv
pop
cmpl
je
repnz
sub
mov
dec
mov
roll
xchg
aam
test
fmull
into
shll
popf
xor
fisttpl
jo
cs
xchg
adcb
cli
test
roll
pop
aaa
test
in
or
or
add
mov
jnp
mov
and
push
cli
stos
mov
popa
aaa
pop
insl
inc
out
jge
jbe,pt
sub
jmp
mov
jl
shl
xchg
roll
or
xor
dec
inc
bound
mov
mov
dec
sarl
int3
ljmp
mov
imul
mov
xchg
sbb
out
call
push
mov
mov
cmp
pushf
lods
fs
xchg
jns
pop
xor
lahf
mov
push
dec
xchg
jbe
xchg
xor
out
loope
fwait
mov
rolb
pop
jne
push
stos
sub
inc
out
lock
push
push
adcl
movsl
sbb
or
mov
xlat
lods
inc
pop
ja
aas
dec
mov
outsl
sub
adc
sbb
sbb
push
sub
imul
push
pusha
dec
movsl
bnd
cmpsl
ss
jb
test
jns
or
pop
inc
sarb
pop
xor
subl
xor
rorl
fcoml
sub
push
popa
cwtl
mov
sbb
ljmp
std
movb
jbe
lods
pop
sbbb
or
rep
mov
lret
je
jp
inc
lcall
xor
pop
loop
inc
sub
mov
inc
pop
pop
dec
ret
or
shll
out
cmpsl
xor
cmp
pop
or
fs
xor
popa
mov
iret
mov
adc
adc
adc
daa
ret
icebp
jmp
fsubrp
xchg
popl
inc
aas
adc
xchg
fidivrs
les
lea
xchg
les
mov
dec
movsl
fldl2e
sbb
push
adc
or
cmp
adc
pop
test
push
pop
add
fsubs
pop
aaa
int3
push
push
pop
clc
movsl
dec
and
push
test
outsl
mov
dec
pop
xor
pmuludq
iret
mov
hlt
and
inc
into
mov
loopne
js
je
adc
push
adc
popa
mov
mov
fcoml
pop
fldcw
sub
push
xchg
add
adc
dec
sub
dec
cmc
test
imul
call
rcr
jl
mov
imul
dec
lahf
mov
xor
lret
mov
push
inc
fistpll
mov
push
mov
mull
cmp
idivb
pop
pop
add
dec
xchg
in
addr16
fstpl
push
xchg
adc
dec
test
pusha
lods
pop
dec
dec
push
mov
jae
mov
add
out
xchg
outsl
dec
pop
outsl
pop
inc
test
aaa
addb
ret
lcall
or
xor
or
mov
in
or
dec
jl
xchg
addr16
push
pop
adc
push
push
subl
mov
add
aaa
lock
movsl
ljmp
jbe
push
or
jne
sbb
imulb
fwait
xchg
fs
dec
xlat
inc
add
imul
mov
sub
jle
or
push
jne
dec
xor
ficompl
es
ret
lcall
cmpsl
inc
sbb
in
mov
jl
arpl
jb
lret
pop
cmp
push
dec
fbld
lock
xor
leave
mov
pop
mov
scas
lock
outsb
xor
xchg
test
inc
and
ret
pop
or
inc
adc
pop
pusha
shl
popf
stc
mov
push
pop
xorb
fdivl
clc
push
iret
adc
testb
inc
aaa
shlb
inc
das
push
push
mov
mov
gs
and
or
xchg
push
dec
lahf
incl
rcl
xor
sti
inc
xor
jle
in
xchg
je
cmp
adc
inc
andl
mov
fists
cltd
shrl
movsl
jno
mov
adc
add
out
shl
test
fwait
inc
or
cmp
pop
jnp
stos
divl
in
aam
inc
dec
enter
lret
sbb
sub
std
xor
mov
into
ret
pop
xlat
jl
fwait
scas
adcb
negb
cmp
jg
scas
mov
mov
testl
testb
pusha
xor
and
addr16
mov
jns
jnp
xchg
pop
add
fnstcw
xor
jle
xchg
xor
sub
fwait
mov
and
xor
fcomps
rorb
sub
lock
outsl
adc
mov
lea
and
fbld
cli
pop
inc
adc
pop
xor
mov
mov
jge
cmp
mulb
jns
std
shrb
dec
fcomps
inc
out
xor
lods
imul
pop
std
dec
push
in
daa
push
sbb
mov
push
or
cmpb
mov
je
lcall
out
jg
add
lret
dec
and
js
pop
and
mov
movsl
mov
enter
test
xlat
jmp
ss
test
jecxz
xchg
pop
sub
mov
or
adc
cmp
cmpl
ret
cmp
mov
and
cmp
andl
outsl
lods
out
scas
mov
xor
jg
adc
mov
mov
xchg
inc
nopl
lods
adc
data16
sbb
orl
cmp
imul
mov
jmp
push
pop
inc
pop
test
jmp
xchg
sbb
xchg
test
push
call
loopne
daa
cmc
and
and
out
sub
orl
in
test
mov
clc
iret
dec
ja
int3
and
sub
jmp
cwtl
and
push
mov
xor
out
adc
inc
mov
xchg
in
test
pop
daa
shl
mov
pop
icebp
arpl
xchg
std
out
mov
subl
or
mov
aad
aas
pop
inc
jb
mov
mov
jb
das
out
push
cltd
sbb
lods
and
je
sbb
mov
gs
lret
outsb
leave
pop
add
sbbl
sbb
pop
gs
icebp
mov
je
inc
jp
xchg
mov
subb
mov
jp
inc
jb
out
dec
sub
pushf
imul
sbb
pusha
pop
popf
in
push
pop
mov
popf
jle
inc
push
sbb
nop
mov
fwait
cs
andb
shlb
out
sub
pop
rcl
xchg
lcall
adcb
and
jne
sbb
setns
aas
fldt
dec
loop
inc
jbe
sub
xor
in
add
inc
xchg
or
push
in
cmp
jmp
in
test
and
leave
add
xor
std
and
enter
mov
xchg
and
push
test
das
or
inc
fwait
psubsw
jp
cli
lcall
mov
push
sub
push
daa
push
in
lahf
test
jl
gs
adc
arpl
jmp
popf
dec
xchg
test
mov
dec
lds
nop
dec
push
xchg
adcb
mov
shrl
lods
mov
pop
pop
xor
fs
mov
cmp
scas
push
je
push
xchg
bnd
lret
add
cs
push
and
hlt
jle
inc
dec
xchg
repz
pop
sub
mov
push
cmp
test
xchg
adc
les
sub
xorb
pop
fs
pop
scas
nop
roll
push
cmp
shl
inc
push
jns
fstps
cs
hlt
inc
nop
xchg
mov
nop
jno
and
lcall
in
icebp
mov
clc
ret
adc
push
sbb
mov
jnp
jae
push
lcall
fistpll
inc
dec
imul
flds
dec
cmc
lcall
imul
imul
sbbb
inc
pop
pop
add
lock
clts
push
stos
cmp
push
dec
fmul
test
cmpsb
adc
mov
js
jnp
test
ja
out
in
sub
jl
arpl
and
hlt
je
mov
cltd
mov
sarl
cmpsl
inc
xor
dec
xchg
push
cli
xor
mov
inc
dec
jl
sbb
decb
and
or
daa
movsb
inc
int
sti
stc
insb
inc
lea
sbb
fbstp
or
test
cmpsl
movsl
and
fisubs
dec
push
cmp
jge
inc
cltd
rorb
scas
mov
mov
clc
fs
mov
adc
hlt
mov
jg
pop
ffreep
push
arpl
sahf
mov
loop
push
add
adc
in
push
rorl
rcrl
loope
xor
fdivr
mov
or
mov
push
imul
add
lcall
xor
jmp
fisttpl
icebp
push
cld
mov
jl
cwtl
push
mov
shl
xor
repz
pop
add
fisttpll
cmpsl
std
mov
jl
inc
mov
fimuls
inc
sbb
sbb
dec
push
std
fcmovne
jecxz
xchg
cmc
cmpsl
add
dec
cwtl
or
pop
in
fwait
push
xchg
loop
repz
aam
fnstcw
add
flds
mov
or
les
int3
pop
mov
jae
pop
pop
aad
and
mov
sti
inc
jecxz
inc
sarl
aas
pop
jge
mov
lret
ret
daa
xchg
std
stc
sub
mov
jecxz
adc
push
ret
iret
das
fisttps
inc
sahf
dec
xchg
popa
sub
lods
push
lea
lret
ja
inc
xchg
mov
mov
popa
pop
leave
stos
xor
and
test
test
adc
aam
jecxz
xor
sbb
cltd
bnd
shrb
mov
mov
dec
inc
mov
sarb
insb
xor
mov
cmpsb
lcall
mov
dec
lods
in
andb
popf
xchg
loope
or
lret
clc
dec
jb
sbb
and
and
or
out
lods
lods
sub
in
in
pusha
das
add
stos
and
cli
inc
and
or
aad
frstor
sbb
aas
sub
jb
or
rcrl
sub
scas
mov
inc
xchg
or
shll
jo
sarl
jp
cmp
and
into
pop
lret
lea
jo
mov
test
fisttps
adc
dec
in
pushf
dec
xchg
leave
ja
mov
movsb
lds
lret
lcall
test
into
sbb
repz
dec
outsb
add
dec
loopne
scas
outsb
enter
fstpt
push
sarl
mov
pop
fstpl
sbb
je
aas
push
jl
cmp
mov
mov
cs
adc
cmpsl
push
movsl
fwait
jle
dec
lahf
loope
lds
cmpsl
sbb
pop
daa
mov
adc
jnp
lods
add
mov
push
xchg
mov
mov
xor
push
inc
and
jne
xor
adc
fwait
arpl
mov
xchg
stc
dec
faddp
insl
das
mov
les
and
jmp
cmpsb
mov
add
xchg
jne
inc
js
cmpl
mov
push
shrb
daa
lea
stos
mov
xor
sub
mov
inc
mov
fisttpl
cmc
cs
mov
lcall
cmp
sbb
jge
mov
fst
jp
adc
and
jne
test
daa
cmp
shr
enter
lods
mov
push
mov
mov
jge
ja
jp
rol
cmc
and
outsb
icebp
push
jp
daa
xchg
scas
dec
sbb
sub
jecxz
cmp
add
lods
jne
ss
mov
lods
lret
sub
in
xchg
hlt
repz
dec
add
loopne
jle
dec
jno
jae
push
fstl
mov
addl
cmc
lahf
hlt
mov
xchg
pop
xchg
pushf
cmp
mov
cmpsb
mov
gs
push
sti
push
ret
jge
sub
push
ljmp
fwait
inc
dec
mov
nop
xchg
push
jle
inc
test
test
hlt
push
push
scas
dec
pop
sahf
sbb
sub
loope
repnz
icebp
push
or
sbb
xchg
push
clc
jecxz
call
outsb
xor
or
incl
gs
mov
scas
add
faddp
cmp
in
lods
lahf
jp
inc
dec
and
mov
cwtl
fidivs
pop
and
pushf
ret
imul
aad
jle
enter
add
pop
test
das
movsb
sbbb
mov
mov
stos
sbb
and
cli
leave
xchg
loopne
ucomiss
jnp
or
dec
sub
xor
pop
repnz
fwait
mov
roll
ja
les
cmp
xchg
pop
icebp
fistps
fs
aas
inc
in
push
cmp
xchg
push
and
addl
xor
js
daa
rolb
shrl
jbe
pop
mov
shll
or
pop
into
icebp
jmp
orl
mul
inc
mov
insb
rcrw
inc
ljmp
push
mov
movsl
jg
add
mov
clc
orb
cli
sarb
mov
aad
ss
loopne
repnz
cmpsl
lock
in
pop
gs
cmpsl
pop
jnp
aam
pop
subl
test
or
sbb
ud1
push
sti
mov
test
sbb
pop
jne
mov
sub
stc
mov
sub
ljmp
dec
pop
lcall
shrb
andl
lret
push
and
xlat
aam
icebp
xchg
or
rcl
adc
aam
in
pushf
shlb
loope
add
lea
inc
push
rcl
push
shlb
add
stos
adc
lahf
ficompl
cmp
jmp
arpl
sbb
cltd
in
lahf
dec
mov
dec
imulb
sbb
icebp
popa
mov
sbb
inc
jp
add
enter
and
mov
fwait
stos
test
or
sti
das
shll
xor
out
pop
xlat
lods
lcall
and
and
es
or
lods
mov
cmp
int
ret
xor
mov
add
inc
push
xchg
mov
arpl
es
pop
and
pop
or
or
mov
mov
mov
lret
mov
adc
emms
out
rcr
arpl
rorb
pusha
imul
add
xorb
mov
mov
popf
mov
xor
push
or
mov
mov
push
sbb
sti
jmp
int
dec
and
push
decb
loopne
sub
push
inc
and
imulb
sbb
mov
fs
push
add
mov
cwtl
lcall
sbbb
fdivl
mov
negb
rcll
sbb
push
out
popf
roll
xchg
clc
cld
mov
rclb
jnp
in
xor
jl
adc
clc
sbb
lret
leave
or
xor
dec
fcoms
cmp
mov
sbb
mull
das
int3
fs
cmpsb
test
imul
adc
outsl
repz
adc
xchg
adc
cs
sbb
imull
xchg
out
out
add
sub
movq
shrl
sbb
push
push
hlt
inc
mov
scas
in
aad
push
or
pop
ficoms
lret
lcall
outsb
repz
imul
bound
push
sbb
les
fsubs
repz
or
loop
out
xchg
jae
xchg
pushf
add
cmp
lret
cmp
psubusb
pop
ficoms
mov
into
imul
mov
loopne
bswap
pusha
stos
fbld
iret
cmpsl
xor
mov
andl
sarl
shl
dec
adc
cmp
vpmovb2m
mov
push
lods
lcall
cs
xor
sub
pop
ljmp
bound
xchg
nop
pushf
push
dec
jge
jns
cltd
mov
mov
push
push
or
stos
call
lret
pushf
push
fimuls
pop
arpl
ret
ja
fxch
sbb
leave
js
or
push
xor
arpl
mov
mov
push
cwtl
pop
test
inc
cmp
add
sub
hlt
loopne
adc
sub
sbb
cmp
xor
pop
cmc
push
or
and
cs
xchg
loop
lds
cmp
push
xchg
sbb
ljmp
sbb
adc
mov
mov
pop
push
inc
and
das
std
imul
sub
xchg
int
aam
mov
push
pusha
mov
jnp
ja
stos
jb
sarl
arpl
inc
aad
sub
adc
pop
push
xor
insl
adc
cmpsb
add
or
scas
dec
and
push
call
bound
adc
iret
xchg
iret
clc
test
pop
addb
add
outsb
add
add
push
shrb
mov
repz
mov
nop
enter
ljmp
ret
loopne
divl
int3
mov
and
inc
popf
popa
into
das
jge
lds
hlt
sbb
mov
adc
xchg
sub
lcall
pop
xchg
mov
xchg
mov
push
pop
or
inc
sti
dec
and
mov
lcall
call
pop
lahf
xor
xlat
pop
scas
enter
ja
jo
jnp
lock
sbb
adc
lds
or
out
push
test
or
mov
in
inc
fsubrl
das
data16
jmp
lret
xchg
xchg
mov
xchg
jno
lcall
jbe,pn
cmp
subl
xor
cs
mov
divb
int3
and
sub
out
pop
jbe
sub
sub
es
dec
dec
inc
cmpsb
sbb
outsl
mov
das
jp
or
pop
push
push
mov
mov
lock
lcall
inc
xchg
pop
jns
dec
lcall
push
aam
and
inc
jg
rcrl
or
or
jae
out
inc
call
js
jl
mov
scas
inc
stos
popf
out
cmp
xor
push
out
sbb
mov
mov
mov
or
inc
and
and
mov
dec
ret
mov
insl
xorb
test
mov
je
sbb
jo
inc
imul
arpl
sub
push
imul
js
pop
pushl
lcall
dec
popa
addr16
push
sub
push
ss
sub
cmpsb
push
add
jo
out
cld
adc
pushf
dec
and
cmpsl
dec
dec
jecxz
xchg
fmull
shll
pop
xor
shlb
cmp
lahf
cmp
jne
add
ds
mov
pop
test
mov
aas
in
shr
jne
dec
sti
rcr
push
test
lcall
dec
arpl
sahf
xchg
jmp
dec
ss
inc
jnp
sbb
or
bound
mov
lods
cmc
in
pop
mov
jae
adc
test
mov
xchg
imul
sti
mov
sahf
cwtl
adc
xchg
push
jns
test
cs
fwait
xor
scas
or
add
dec
jecxz
add
cmpsb
xor
fcoml
xlat
test
jp
adc
inc
dec
sub
mov
mov
or
and
xor
shrb
jg
lcall
scas
pop
jg
inc
psubsb
nop
xchg
int3
shrl
das
inc
sub
data16
fcoms
cmc
sbb
shrb
pop
mulb
lret
ljmp
pop
in
xchg
jg
sbb
pop
dec
fmul
sub
xchg
dec
or
fisubl
push
arpl
gs
add
nop
fcmovnb
or
or
lods
mov
mov
dec
adc
stos
je
jp
push
sub
outsb
push
addr16
pushf
jae
mov
mov
and
mov
push
inc
movsl
lds
andb
adc
sbb
dec
xor
or
jnp
jne
sub
aad
or
in
lea
rcrb
jecxz
fists
push
mov
sbb
mov
xchg
sub
or
add
cmp
or
jl
jns
daa
pushl
inc
jmp
test
int
es
iret
push
mov
fdivs
jb
das
ret
shlb
inc
clc
flds
lcall
jg
or
es
mov
mov
imul
jge
push
mov
mov
in
cltd
shr
loope
and
enter
mov
in
pushf
mov
push
jmp
rol
adc
and
cmpl
add
mov
push
sub
fisubrl
or
int
xchg
jnp
das
pop
mov
loope
lret
mov
mov
adc
inc
sbb
arpl
add
push
inc
sub
loope
xchg
and
popf
outsl
loope
lds
jbe
std
jmp
add
xor
mov
out
mov
push
and
adc
lods
mov
je
xchg
or
mov
adc
arpl
scas
and
adc
in
test
fistl
cmpsb
mov
lahf
jmp
push
pop
lds
or
xor
nop
and
jns
out
in
mov
div
sahf
mov
adc
inc
lea
mov
jecxz
pop
cld
mov
adc
jecxz
cmp
adc
es
leave
and
cmc
xor
lret
outsb
mov
inc
aas
xchg
in
pop
sbb
shlb
adc
dec
sub
imul
jp
inc
testl
add
lcall
push
sahf
lock
iret
shld
push
test
pop
jo
cmpsb
out
lret
cmp
dec
jmp
sbb
loope
imul
pusha
ficompl
inc
movsl
stc
dec
cmp
pushf
pop
addr16
sbb
loopne
pop
pop
popf
push
xor
xor
pop
cmpsl
fsubs
pop
rcll
out
dec
xor
lret
add
out
in
jp
aas
in
inc
lahf
scas
add
or
shlb
lret
pop
push
push
add
insl
pop
xor
psrlq
in
stc
addr16
pop
roll
leave
mov
fwait
or
andb
inc
push
movsb
mov
jne
fwait
push
mov
imul
std
mov
inc
stos
fisttps
fcomps
mov
lret
popl
sub
dec
push
push
rorl
iret
xchg
out
or
loope
sarl
std
iret
sub
jb
xchg
pop
xor
out
jge
ficoms
jne
lret
je
lret
ljmp
push
call
mov
out
add
fistpll
out
mov
lret
mov
gs
push
or
addb
test
jecxz
hlt
xor
adc
sbb
call
arpl
lahf
inc
sti
mov
and
dec
dec
xor
ja
dec
cmp
ds
jns
mov
sti
bound
gs
jns
and
xchg
push
jnp
mov
mov
rcl
movsb
in
stos
jle
xchg
popf
lods
inc
je
in
ja
push
pusha
push
rclb
enter
insl
loop
or
loop
sub
cmpl
gs
dec
loop
sti
js
mov
mov
nop
dec
sub
cld
mov
xchg
sbb
imul
lods
imul
or
test
popa
fldenv
pusha
ds
inc
mov
mov
xchg
scas
sahf
mov
test
lods
and
fisubrs
mov
leave
je
mov
mov
lret
adc
rcl
pop
sbb
sbb
mov
jmp
call
outsl
idiv
test
mov
pop
jge
xchg
cmpsl
call
xor
add
push
mov
push
dec
into
les
imull
add
cmp
lds
sub
add
jb
hlt
push
out
addl
js
fcompl
xchg
sbb
dec
lds
xor
pop
xor
mov
mov
mov
lcall
fstl
and
sbb
jge
pop
nop
insl
push
je
cli
cmpl
addb
sahf
lea
aad
mov
stc
push
push
dec
cmp
testb
sub
test
int3
clc
iret
inc
jp
dec
dec
mov
mov
loopne
enter
out
sub
push
lods
mov
sub
xchg
ds
jle
in
cmp
sbbl
lret
push
ret
xor
and
sbbb
es
test
or
pop
in
ss
push
out
mov
lret
pushf
fst
in
out
or
mov
or
movsb
xor
inc
pop
rolb
std
xchg
xor
test
dec
pop
imul
pop
inc
shl
std
mov
or
sub
shll
mov
mov
das
xor
pop
dec
jnp
ljmp
data16
sub
xchg
cmp
test
adc
inc
test
cli
movsl
lret
inc
adc
test
outsb
jo
push
in
fldcw
out
xlat
test
sbb
rcr
lea
cmp
cmp
jp
inc
sub
std
inc
xlat
aaa
int
jl
or
jl
cltd
mov
jle
adc
adc
jae
mov
outsl
jecxz
cmp
xchg
insb
sti
sub
xor
xor
or
test
xchg
das
adc
jbe
sbb
xor
push
sbb
movsl
push
jb
ds
pusha
sbb
rorb
sub
arpl
dec
mov
dec
xor
test
mov
or
and
adc
cmp
lock
adc
cmpl
stos
xchg
fcmovb
es
sarl
adc
sub
mov
xor
mov
mov
fisttps
jne
ret
fwait
mov
roll
loope
cld
mov
cmp
sub
stc
mov
push
mov
mov
mov
lea
mov
push
lea
add
lahf
jne
mov
push
cmpsl
leave
jnp
mov
xchg
nop
cli
push
mov
hlt
and
mov
rclb
test
lret
mov
mov
sbb
cld
lods
adcl
or
stc
mov
js
lret
or
jnp
aam
bound
pop
jae
test
call
ret
pop
mov
sbb
rol
sti
fwait
jmp
adc
push
xchg
pusha
jns
aas
jo
pop
mov
fldl
mov
sbb
push
enter
jno
lret
fildll
cmp
push
fcompl
dec
cwtl
lock
loopne
cld
adc
mov
loope
lahf
cmp
and
push
out
xchg
orl
dec
dec
aam
cmp
lea
jne
add
loop
xor
int3
out
fwait
add
lods
inc
push
mov
fcmovu
mov
sub
xor
push
xchg
popa
mov
cmp
mov
pop
fwait
jbe
rcll
jecxz
mov
mov
jo
adcb
and
add
loope
lods
jmp
push
push
mov
jl
ja
test
and
loope
and
cmp
sub
test
and
insb
shrb
xor
sub
or
xor
adc
inc
cmp
xchg
out
sbb
xorl
xor
cltd
jl
ds
loope
push
addb
pushl
test
clc
pusha
mov
sub
ret
mov
movl
mov
fsubl
or
das
and
and
ror
cmp
push
in
fxch
or
pop
xchg
sahf
scas
fcoms
pop
or
mov
mov
insl
dec
jmp
mov
sub
xor
dec
outsl
rcr
xor
pop
cmp
scas
repnz
lahf
pmovmskb
add
loop
repnz
cwtl
jg
jl
dec
push
ljmp
pop
xchg
sbb
decl
xlat
xchg
cmc
js
pusha
mov
lods
xlat
jno
das
jecxz
dec
loopne
mov
adc
or
sub
ret
or
lock
mov
mov
xchg
and
dec
cmp
lds
mov
mov
jge
mov
in
add
lea
stc
test
pop
aad
and
stos
ret
or
inc
rcrb
jnp
mov
roll
in
outsb
inc
sbb
jg
loopne
mov
fidivs
pushf
mov
mov
lods
or
push
sbb
or
jg
xor
cmpsl
mov
xchg
mov
notl
fcoms
in
sub
not
xchg
mov
ret
ljmp
rcr
notb
jns
ret
int
xor
mov
dec
or
xlat
pop
aaa
lcall
mov
mov
push
and
dec
fbstp
fdivl
dec
mov
les
inc
mov
negb
pop
movsb
repnz
enter
xor
je
pop
hlt
shlb
ss
inc
ds
xor
jnp,pt
pop
add
enter
push
sbb
cld
call
jb
jnp
js
xchg
adc
addr16
pusha
lds
mov
sub
loopne
sub
push
repnz
or
adc
outsb
data16
mov
push
jbe
lret
outsl
clc
push
mov
enter
cmp
stos
imul
mov
test
sti
movsb
dec
jno
cmp
mov
xchg
lret
sub
sbb
xor
mov
loop
mov
mov
int
sub
stc
scas
cltd
filds
push
in
les
sbb
pop
mov
repz
mov
shll
arpl
into
lds
or
scas
mov
rorl
cwtl
sbb
push
ret
cld
mov
decb
or
inc
ret
jg
lret
mov
sub
xchg
popf
idivb
xchg
scas
jle
fadds
andb
mov
imul
repz
push
pushf
push
sbb
jb
jle
fdivs
fcompl
clc
sub
aas
ds
add
gs
incl
dec
cmp
pop
js
and
idivb
pop
je
fnstcw
inc
mov
and
in
popf
or
mov
fnsave
pop
and
push
or
dec
adc
mov
imul
add
test
or
jb
pushf
in
aas
adc
scas
lds
sub
lcall
jae
test
xchg
pop
aas
inc
pop
xor
stos
xchg
out
adc
push
and
mov
loope
stos
sti
mov
movl
mov
mov
pop
sar
inc
mov
push
push
mov
mov
xchg
mov
push
enter
mov
cmp
stos
pop
subl
adc
aas
push
pop
xchg
sub
mov
out
aaa
cmp
pusha
cld
adc
or
and
iret
lcall
xchg
jne
push
push
xchg
ror
lock
or
jl
ds
movsb
pop
fs
out
xor
movsb
ss
mov
jecxz
sbb
lret
hlt
dec
shrl
jo
mov
sub
push
xor
gs
shrl
pop
dec
adc
popf
and
or
mov
es
jl
arpl
mov
aas
fidivl
out
and
in
rclb
sub
xchg
test
pop
xor
icebp
inc
mov
cmpsb
insb
rcr
sar
xchg
adc
scas
mov
xchg
mov
push
jmp
push
in
mov
jle
and
cmp
popf
loopne
add
xchg
add
ljmp
and
das
movl
in
mov
gs
imul
sbb
loope
out
or
divl
lds
inc
rcl
pusha
add
sbb
cwtl
and
clc
and
mov
mov
nop
mov
xchg
fidivrs
jae
cmp
or
les
stc
test
dec
mov
leave
in
lcall
sahf
inc
fsub
push
mov
jle
sarl
and
sub
ds
jmp
jnp
adc
int3
sbb
xor
adc
test
xchg
ja
aad
insl
fstpt
mov
jle
xrelease
mov
push
mov
xor
movsb
out
sbbb
mov
or
xor
sub
cmp
push
sti
ja
inc
insb
xor
xor
sub
scas
jge
mov
xchg
mov
insl
in
in
pusha
cmp
or
subl
sbb
daa
push
repz
and
out
sbb
push
sbb
fdivrl
mov
jno
jg
js
sub
dec
cmp
das
std
enter
jno
sub
ds
test
jno
xchg
xchg
xor
out
mov
jno
into
mov
pusha
movsl
adc
mov
or
dec
push
jbe
add
nop
movsl
sub
cmp
shl
mov
inc
lock
pop
sahf
cmp
mov
cld
or
sbb
pop
imul
jb
shlb
jecxz
out
ret
add
pushf
jle
xlat
sbb
and
mov
test
dec
call
mov
jl
lahf
sbb
fistps
lahf
divl
add
iret
in
pop
fwait
mov
cmpsb
push
cmpsb
je
flds
in
xor
mov
divl
push
mov
and
mov
inc
xchg
sbb
lock
adc
jb
add
stc
loope
sub
mov
xchg
in
mov
scas
mov
fistpl
out
mov
add
iret
pop
jmp
and
les
mull
cmp
test
hlt
lret
xchg
stos
sti
fbld
jecxz
call
push
lods
jo
push
mov
hlt
adc
mov
test
ret
jns
pop
pop
adc
sbb
add
ja
ds
clc
mov
outsb
out
setns
mov
xor
sub
add
jae
fwait
xor
push
sub
in
or
pushl
insb
mov
outsl
jne
mov
add
int3
adc
lahf
sahf
pop
jno
and
xor
and
das
lret
mov
fstps
mov
ficomps
push
xchg
xor
dec
add
push
out
lret
lods
push
fnstcw
cmpb
mov
pusha
and
fs
enterw
mov
dec
inc
imul
sbb
xchg
pop
cmp
and
out
lret
and
xchg
out
sarl
add
sbb
cmp
das
loopne
jge
jecxz
cli
cmpsb
adc
and
push
pushf
push
in
insb
adc
xchg
clc
xchg
push
xchg
cmp
subl
push
xlat
das
push
clc
jg
cmpsl
ss
insl
stc
shll
ficoms
and
jl
jno
push
movsl
fidivrl
sub
jnp
mov
or
in
aad
xchg
es
loope
add
pushf
jbe
cmpsl
repnz
rorb
pop
idiv
dec
iret
push
insb
cmpsl
adc
mov
jmp
dec
and
push
mov
fs
sub
mov
aad
jp
cmc
mov
push
or
rorl
push
int
pushf
jge
xor
pop
dec
stos
enter
pcmpeqb
inc
aaa
jge
dec
mov
lret
repnz
adc
mov
stos
popf
dec
jle
clc
sub
lahf
and
mov
sub
hlt
add
enter
mov
adc
test
sbb
int
cwtl
mov
mov
mov
into
pusha
xchg
mov
mov
xorl
in
orl
jle
cmp
fwait
cld
mov
jecxz
and
out
scas
sbb
js
lods
mov
rcll
xchg
inc
and
xchg
shlb
lahf
cld
stos
or
mov
jbe
sub
cmc
aaa
jecxz
jnp
xchg
jp
loope
and
add
sub
adc
out
add
fistps
lock
lahf
and
jmp
and
ja
ret
imul
jae
jbe
mov
inc
out
push
mov
scas
mov
dec
inc
fcompl
mov
sbb
les
ja
dec
fwait
mov
jecxz
add
lcall
xor
mov
aaa
mov
pop
fs
jmp
mov
push
int3
js
adc
adc
dec
pushf
jno
into
xor
mov
pop
add
fildl
push
sahf
inc
mov
bound
xor
aad
daa
mov
sub
sub
xor
xor
gs
push
outsb
adc
xchg
addr16
mov
mov
pop
add
jb
insl
clc
add
sbb
dec
jle
scas
or
repz
push
dec
cltd
cltd
pop
icebp
out
les
fbld
outsb
jne
pop
insl
idivl
pop
xchg
fld
add
mov
imul
mov
add
popa
iret
rolb
and
lret
mov
cltd
outsb
mov
cwtl
inc
xchg
push
mov
lret
pop
les
mov
mov
mov
fsubp
in
xchg
imul
roll
rorl
adc
test
push
mov
fnstcw
add
les
out
pop
add
xchg
mov
frstor
cmpl
and
xlat
xchg
inc
int3
lds
dec
push
testb
pop
dec
insl
mov
idivb
dec
fisubl
sub
mov
ret
stc
dec
jge
cmovno
and
xchg
scas
paddsb
adc
jae
cmc
jae
std
pop
pop
or
in
dec
cld
cmp
icebp
add
xchg
push
xor
push
in
in
xor
filds
pop
add
and
out
movsb
inc
sbb
in
fs
inc
test
outsl
sub
stos
mov
test
loope
push
xor
push
pop
rorl
fsubrs
push
hlt
push
adc
inc
cli
cmp
sbb
push
call
xor
inc
push
add
and
mov
bound
sub
lret
jge
adc
adc
lea
jbe
jb
mov
test
mov
mov
inc
adc
std
lret
test
mov
jne
sub
push
jge
pusha
test
loop
adc
jbe
ds
adc
mov
loop
or
sbb
jae
not
inc
imul
push
push
add
dec
push
shr
dec
shll
push
test
pop
jbe
enter
movsl
sbb
pop
shlb
lods
or
xchg
popf
cwtl
xchg
jmp
push
fidivl
xchg
push
ss
cltd
shrl
imul
pusha
add
and
mov
inc
loope
shlb
scas
mov
cld
cmp
in
xchg
repz
mov
lret
test
shl
call
dec
out
xor
scas
andnps
repnz
sqrtps
popf
movsl
pop
mov
cmp
lret
mov
jg
xor
lahf
pusha
jne
cwtl
push
xchg
pop
mov
lret
std
mov
or
adc
in
arpl
xor
push
adc
bound
mov
insb
aad
mov
ret
mov
pop
or
loope
rol
mov
outsl
int3
rcrb
dec
mov
jb
les
push
movsl
je
add
nop
fildll
push
lock
push
push
call
push
jg
fcmovnbe
dec
dec
out
lds
icebp
pop
out
ret
in
mov
adc
cmpsb
inc
out
sub
enter
mov
sbb
push
ret
rclb
mov
adc
fbld
sbb
ds
sbb
jae
std
enter
sbb
in
in
popf
pop
xchg
lahf
fs
mov
inc
aam
aaa
cmpl
xor
jg
jno
lret
add
cmp
repnz
xchg
hlt
outsb
out
sti
pop
mov
add
push
add
imul
inc
sub
dec
pop
add
pop
push
sbb
add
push
lock
lcall
xchg
lea
push
sub
jae
lods
rcrl
lahf
ja
add
xchg
lods
mov
mov
mov
mov
jg
inc
iret
sbb
imull
and
jl
xor
gs
mov
mov
inc
mov
loop
cmpsb
fldt
sub
mov
add
stc
mov
push
nop
call
jecxz
ror
fisubrl
lds
loop
stos
daa
test
mov
loope
sub
push
dec
outsl
sbb
mov
cmp
xor
mov
xchg
ffree
aad
cli
pop
sub
adc
sbb
loop
icebp
fwait
mov
xlat
or
insb
sbb
ds
lcall
xchg
cmp
adc
inc
pop
iret
aad
inc
stc
gs
lret
jns
stos
pop
js
sti
fildll
cmpsl
dec
xchg
scas
adc
aad
xchg
inc
out
lret
in
insb
out
sub
cmp
add
xchg
outsl
push
hlt
xchg
cwtl
stc
adc
add
arpl
push
jp
xchg
cmp
imul
sarl
cli
xor
in
mov
fs
mov
leave
lret
pop
jmp
xchg
in
xchg
lahf
inc
cltd
sub
sub
out
ret
fadd
inc
shlb
je
mov
mov
push
adc
mov
popf
or
clc
cmp
push
outsb
push
loope
push
cmp
cmpsb
push
es
in
and
js
cmc
in
lret
test
les
fldl
mov
test
push
mov
rcll
sub
hlt
rorb
lds
inc
mov
test
cmovge
lds
dec
rcr
test
stc
sbb
mov
fldcw
call
fwait
jb
adcb
lcall
push
cmp
mov
or
jne
or
daa
sbb
ret
je
enter
je
and
mov
cmp
ljmp
inc
mov
daa
jl
repz
xchg
pop
xlat
xor
aaa
pop
ja
stos
push
repz
add
stos
imul
inc
jb
jmp
xor
and
xor
xchg
push
jmp
sub
sub
in
sbb
jmp
inc
sbb
jno
dec
out
fwait
push
pop
and
push
test
pop
mov
orl
aas
pop
or
popf
sbb
fisttpl
movsb
std
popf
mov
add
insl
cmp
stos
jo
add
stc
popf
mov
jb
enter
dec
gs
sti
and
into
xchg
pop
fists
fsubs
jbe
out
or
xor
into
int3
incl
dec
lret
out
aad
pop
stc
into
addr16
push
das
cltd
lcall
lret
mov
xchg
ds
cmp
fsqrt
mov
and
xchg
pop
dec
jno
adc
mov
or
out
cmp
ret
rcrb
inc
pop
pop
scas
les
mov
ja
in
popf
mov
shr
mov
push
push
aas
ret
rcr
pop
mov
dec
call
data16
mov
cmp
cltd
mov
xor
xor
lock
ss
ljmp
mov
scas
cmpsb
adc
imull
ret
nop
mov
loop
adc
push
xchg
lds
xchg
and
xor
sarb
ss
lods
aaa
ret
sbb
push
xchg
add
fadd
std
les
and
inc
adc
test
enter
sti
repnz
push
mov
mov
inc
orb
dec
mov
dec
jge
jne
lahf
lret
mov
loop
and
dec
pop
bound
shlb
mov
sub
cs
add
lods
add
call
outsb
pop
or
rclb
popa
dec
or
push
inc
fldz
adc
push
dec
xor
xchg
add
pop
or
lret
xor
jnp
inc
lret
mov
mov
push
cmpsl
push
mov
fildl
xor
mov
mov
mov
jle
sti
jmp
cld
mov
jle
js
lret
loope
pop
in
fsubs
gs
adc
orb
sarl
pop
jb
ret
or
repz
pop
and
and
pop
sub
inc
cmp
mov
mov
xchg
adc
fcmovb
aad
fidivl
call
lock
stos
not
mov
aad
rorb
cld
push
mov
push
sub
cmpsb
cmp
mov
cmp
mov
rcrb
jge
fldenv
sahf
inc
mov
adc
rorb
fdivrl
fmul
out
sub
repnz
pop
dec
add
pop
cmp
test
sub
adc
gs
mull
sti
fwait
mov
out
imulb
inc
lea
mov
lcall
stos
test
pusha
sbb
movsb
lcall
adc
fldcw
fidivrl
imul
adc
push
sub
sub
lahf
sub
ret
jae
sub
lret
lods
gs
xchg
push
xchg
xor
je
and
push
lods
xchg
and
outsl
xor
shll
stos
or
adc
adc
lea
jmp
xor
xor
into
or
jmp
jnp
into
xor
stc
xor
fcmovne
adc
gs
cwtl
mov
sub
jne
xchg
jecxz
aaa
inc
and
dec
sbb
int
nop
aas
lcall
fistl
pop
pop
or
push
inc
ds
lods
idivb
lahf
cmp
xchg
xlat
mov
pop
pop
ds
testl
imul
icebp
add
cli
sbb
mov
gs
jecxz
mov
xchg
hlt
mov
xor
mov
mull
js
add
jb
pop
mov
pop
lret
cmpsl
push
leave
mov
cld
mov
xchg
into
xchg
sbb
xor
mov
pop
aas
mov
cmp
out
push
jle
imul
dec
mov
cmpsb
fldt
fmuls
iret
cmp
pop
adc
cmovne
and
test
adc
cmp
push
lock
leave
pop
lods
stos
cli
enterw
xchg
sbb
xchg
push
popl
mov
adc
cli
stos
lock
mov
ds
sbb
std
jbe
out
ss
add
pop
dec
lds
icebp
cmp
call
in
testl
mov
xchg
xchg
gs
mov
lock
in
fmulp
in
jge
fadds
repz
inc
gs
sbb
pop
cmpsb
cmp
inc
pop
dec
enter
mov
lods
and
stos
sub
push
ficompl
roll
fmull
add
mov
sbbb
call
outsl
sar
xchg
dec
pop
cwtl
and
push
fwait
ret
push
inc
popa
xorl
sub
or
inc
test
lret
pushw
xchg
sbbl
dec
pusha
or
rclb
xchg
push
popf
repz
mov
pop
lcall
das
ja
sub
insb
insl
pop
ds
insb
sbb
test
mov
mov
mov
cli
mov
cmp
adc
mov
int3
std
std
mov
mov
jge
dec
xor
mov
push
jne
pop
mov
inc
xor
mov
jbe
test
cmc
cmp
sub
jg,pn
leave
cmc
push
dec
sub
and
pop
nop
rorb
outsl
mov
jno
jg
icebp
push
popf
test
bound
loopne
push
xchg
mov
ljmp
pop
iret
jns
lea
jle
ss
hlt
lahf
cmp
cmp
inc
pop
daa
sbb
lret
aas
repz
in
sahf
popf
cmp
call
mulb
cmp
or
lahf
cld
int3
cmp
imull
bound
sub
xor
imul
sub
mov
sub
pusha
inc
xchg
mov
xor
or
inc
shrb
sbb
addr16
cmp
inc
rclb
out
mov
movsb
dec
scas
sahf
cmc
sbb
call
cld
push
xchg
fidivs
in
pushf
fistpl
mov
rclb
or
nop
js
dec
ja
sub
popa
dec
mov
pusha
xor
sbb
jp
cs
lret
aad
fsubs
xor
ss
jmp
jl
lods
outsb
push
cmp
jne
ds
pop
jno
adcb
shll
push
jns
sarb
in
imul
in
lds
adc
mov
push
jae
stos
cmp
jae
jb
imul
jle
lcall
imul
bound
and
add
scas
mov
test
push
xchg
loope
insl
imul
clc
add
xchg
inc
loop
in
orb
popf
pop
sbb
xlat
cmpsb
adc
bound
in
cmp
push
aad
mov
jb
mov
push
jbe
push
fidivrl
jecxz
es
jle
mov
cmp
insb
lret
pop
out
dec
adc
push
mov
inc
jo
cmp
pop
xchg
imulb
scas
mov
mov
or
mov
dec
or
cmpsb
pop
jns
jge
sahf
add
or
cmpsb
push
lret
cmpsl
cmp
mov
out
leave
push
pop
pop
xchg
sbb
fs
sti
insb
ret
push
mov
pop
sbb
int
clc
push
cli
cmp
adc
adc
jg
test
sub
popa
jmp
sub
in
imul
sub
loope
inc
and
bswap
mov
xchg
and
out
xchg
inc
pushf
cpuid
int3
push
popf
xchg
sub
cmp
jecxz
lods
xor
sub
loopne
movsb
push
add
adc
add
push
mov
jecxz
push
dec
sti
sar
push
in
mov
nop
jg
int
or
push
lods
hlt
fisubrs
je
mov
xchg
aad
push
ficoms
and
adc
adc
add
push
push
shrb
orb
mov
imul
in
mov
sbb
jge
mov
pop
lahf
ja
and
test
pop
xchg
dec
repnz
sub
in
pop
jecxz
lock
loop
pop
in
jbe
bound
cmp
pushf
outsl
push
loope
inc
mov
jbe
lret
xor
mov
rol
or
sub
jnp
sub
jno
incb
dec
cmp
repnz
gs
shlb
addl
push
inc
sar
repz
icebp
bound
xor
call
fwait
enter
pop
in
notl
mov
ljmp
cmpb
das
test
xchg
sbb
mov
cmpsl
idivb
cltd
sub
mov
test
or
or
aam
add
push
popa
cmp
or
and
xchg
adc
lods
cmp
in
jmp
push
and
loopne
fs
mov
fs
push
jg
dec
enter
jno
stos
test
pop
nop
insl
shl
in
adc
js
ret
inc
xor
xor
mov
cltd
lret
repz
mov
jle
dec
mov
push
inc
lret
dec
adc
fidivrl
and
push
xchg
lcall
mov
arpl
xchg
les
rcrb
dec
pop
cmpsl
cmpsb
inc
jecxz
or
roll
pop
fcom
cmpsl
cmp
je
loope
inc
fidivrs
mov
outsl
inc
pusha
in
push
add
aas
xchg
sub
aam
push
aam
mov
leave
dec
aaa
jl
out
sti
mov
adc
xor
sti
mov
ret
sub
fwait
popw
fisubs
push
clc
leave
ja
sub
pop
in
cli
or
mov
test
movsl
and
sti
rolb
pmuludq
stos
iret
pop
xchg
lret
xor
ficomps
pop
xchg
clc
inc
push
bound
stos
jge
es
adc
inc
pop
repnz
ljmp
jns
xor
mov
xor
jp
jmp
into
push
outsb
mov
push
mov
lods
sbb
nop
inc
cmp
testb
inc
out
dec
dec
mov
mov
fiaddl
sbb
mov
lahf
pop
leave
js
ljmp
shl
scas
aam
repz
gs
lcall
inc
sub
lret
imul
jmp
mov
pop
ljmp
ret
ss
add
pop
or
decl
mov
adc
adc
mov
mov
popa
mov
fisttpl
shr
leave
mov
xor
add
mov
mov
lahf
mov
sbb
lahf
les
pop
repz
aam
filds
mov
repz
push
jnp
aaa
fstps
sub
repz
jg
out
push
push
negl
and
pusha
jl
inc
mov
jns
jge
mov
leave
mov
or
mov
mov
loopne
sbb
loope
test
adc
add
push
mov
in
mov
loop
sar
xchg
mov
xor
inc
out
in
xor
jnp
popa
add
test
mov
adc
inc
loope
mov
cmp
sub
sub
pushf
ror
out
jge
mov
xchg
dec
pusha
sub
jbe
movsl
xor
clc
fistpl
idivl
mov
out
dec
add
mov
xor
aad
pop
mov
aas
sti
movb
xchg
inc
inc
int3
gs
dec
jno
divl
mov
dec
adc
shlb
xchg
cs
jo
cmp
push
push
movsl
add
loope
bound
leave
js
push
cltd
xor
xchg
jmp
addr16
cmpb
dec
push
fstl
push
idivb
out
enter
adc
adc
call
and
sub
jne
fcom
cld
xchg
mov
fdivs
ret
ss
sub
fdivrs
rcrl
jmp
pushl
cmc
rcl
xchg
adc
xor
inc
xchg
es
push
inc
sbb
mov
testl
jo
cli
ljmp
adc
pusha
cld
outsb
lret
stc
dec
cmpsb
lods
and
cmpl
mov
adc
subb
lret
inc
dec
mov
mov
sbb
and
cmpsl
dec
fildll
or
xor
adc
idivl
nop
hlt
push
aas
outsl
sub
sbb
fwait
mov
pop
push
cli
fcompl
and
dec
sub
add
test
rorb
mov
cld
scas
ja
mov
add
aas
xor
sbb
sbb
test
mov
scas
cmp
mov
mov
aaa
inc
cmp
push
push
imul
lahf
pop
and
mov
dec
arpl
ds
cltd
ss
mov
es
leave
pop
call
pop
fsubrs
enter
jg
cld
mov
push
jle
add
add
inc
movsb
pop
add
jmp
push
jnp
mov
in
lds
orl
cmpsl
inc
lcall
inc
push
in
dec
fildl
adc
push
sbb
sti
or
cli
xor
sub
jnp
imul
mov
add
pop
mov
mov
mov
inc
or
icebp
push
adc
push
dec
lret
sub
icebp
mov
sti
add
xchg
fmull
ret
cmp
mov
mov
and
mov
je
jmp
movsb
cmpsl
mov
mov
jl
and
jae
cmp
sub
pop
scas
std
popf
mov
enter
pop
test
jns
lods
out
int3
mov
cmp
xchg
pop
sub
or
xchg
imul
jmp
loope
outsl
movsb
mov
ja
and
stos
loop
jae
mov
gs
imul
jb
xor
dec
jp
lcall
cmp
out
mov
ljmp
inc
inc
cmc
mov
add
scas
stos
inc
mov
fsubrs
and
rcr
inc
lods
imul
jmp
xchg
movsl
loope
xchg
mov
and
jl
cwtl
out
sbb
sarl
inc
and
jbe
xor
pop
add
mov
sub
or
lods
xor
imul
cmpsb
xlat
int3
ja
adc
sbbb
iret
pop
inc
adc
adc
scas
pop
pop
scas
cmp
and
daa
in
inc
and
mov
arpl
mov
leave
xchg
sub
out
in
xor
push
test
into
pop
in
js
push
fnstsw
subl
push
xchg
or
pop
mov
sbb
jnp
sub
cmp
enter
dec
lods
and
push
lcall
cmpsl
bound
cs
mov
aad
loopne
dec
cli
ja
push
leave
mov
jbe
insl
fisttpll
movsl
pop
hlt
out
mov
test
pop
push
out
out
add
mov
loopne
pusha
aas
nop
scas
out
lcall
mov
xchg
arpl
dec
gs
mov
in
int3
pop
mov
push
push
lock
pushf
std
jg
sub
cmp
in
push
fs
lds
cmpsl
fcoml
scas
cld
dec
dec
int
pop
lock
test
lds
dec
push
inc
pop
cmp
pop
jno
aad
inc
cltd
push
xor
add
xor
pusha
jne
jmp
inc
sti
sbb
pop
stc
push
cmpsb
mov
sarl
repnz
scas
repnz
pop
loop
dec
or
or
push
pop
aaa
insl
inc
imul
push
sbb
call
loope
test
xchg
xorps
pop
jmp
daa
sub
enter
mov
ret
ljmp
push
pop
aas
icebp
jbe
outsb
rcrl
mov
ss
repz
mov
push
stos
push
mov
jae
sbb
addr16
push
gs
nop
out
push
sti
data16
nop
and
lods
aaa
mov
hlt
shl
and
daa
int3
aas
pushf
adc
and
mov
push
inc
cmc
sbb
decl
jle
jae
and
daa
mov
fadds
mov
mov
bound
pushf
iret
push
dec
shll
mov
cli
push
pop
jno
cmpsl
xor
cli
inc
dec
mov
shrl
push
cmp
lods
fmuls
imul
xor
mov
push
dec
fists
push
pop
and
cmpl
add
out
out
cmp
add
out
hlt
sbb
xor
icebp
mov
scas
pop
ja
loope
xchg
mov
test
pop
xchg
movsl
sub
xor
mov
add
xchg
leave
jns
gs
add
in
test
pushf
stos
test
sahf
inc
xor
out
cltd
mov
sbb
arpl
subl
pop
aas
aaa
cmpsb
jecxz
in
xor
mov
or
fcoms
jnp
sub
mov
pop
lock
inc
out
dec
xor
sti
ret
data16
loope
push
rcr
jge
pop
cmp
pop
xchg
js
xchg
shlb
jge
sahf
add
mov
lcall
mull
iret
jo
pusha
shll
mov
stc
test
and
adc
pop
adc
mov
js
pop
aad
push
mov
pop
sub
adcb
imul
pop
outsl
sbb
push
movsl
mov
popf
fs
lret
mov
or
cmp
mov
loope
popf
out
cmc
out
sub
adcb
fs
out
shlb
aad
test
and
jbe
add
insl
out
das
arpl
ds
add
sbb
repz
lea
into
jg
lock
orb
or
add
arpl
lds
push
ficoml
xor
pop
dec
add
data16
pushaw
movsl
or
mov
jns
adc
inc
or
mov
faddp
arpl
push
loop
inc
rolb
xor
pusha
sbb
int3
push
lea
mov
and
mov
jmp
or
pop
in
jmp
xchg
sub
mull
in
stos
ret
test
loopne
and
cmp
inc
or
call
mov
pop
pop
push
test
sbb
pop
fbld
lea
sahf
stc
int
shrb
in
pop
add
dec
jns
jg
add
rcrl
in
mov
sbb
hlt
cltd
mov
jns
pop
outsb
mov
mov
xchg
fbstp
and
xor
add
add
inc
lea
push
andl
fbstp
scas
mov
mov
fs
jle
inc
adc
xchg
lea
arpl
in
pop
mov
ja
sub
xor
adc
or
dec
adc
dec
inc
jg
cmp
hlt
pop
lcall
mov
pop
cli
cmp
cvttps2pi
mov
jbe
xlat
scas
inc
pop
stos
sahf
sub
fstl
aam
idivl
or
rorl
jo
xchg
dec
sahf
pop
test
clc
nop
cmpsl
mov
push
clc
insl
cmc
cli
cmp
gs
addr16
ret
xor
push
mov
push
imul
jmp
dec
iret
inc
ds
stos
in
xor
loop
out
mov
je
push
adc
adc
ss
or
popa
sbb
fcmovnbe
jns
movsb
add
adc
cs
mov
cltd
xor
jecxz
btr
fsubs
cwtl
cmc
mov
imul
cli
dec
or
sub
push
ret
jp
xor
lods
mov
push
sbb
mov
es
clc
mov
pusha
dec
sbb
push
fs
das
popl
jae
pusha
pop
in
clc
ja
jae
in
adc
clc
adc
and
roll
mov
jecxz
sbb
mov
cmp
push
out
or
aad
sub
por
data16
mov
cmp
jns
and
test
xor
dec
jne
mov
arpl
add
loope
mov
cmp
mov
clc
ret
ja
stos
outsb
inc
or
movsb
and
aad
ret
scas
or
psubsb
in
xor
fs
sbb
xlat
mov
push
mov
into
xor
repz
fsts
sub
loope
jmp
xor
hlt
out
pushl
mov
adc
inc
mov
and
or
aaa
xor
sub
xor
cmpsl
aad
inc
mov
jns
add
and
shlb
mov
shll
jbe
adc
repz
and
xchg
xor
or
mov
inc
out
add
lods
cmp
cmp
cld
and
push
jle
fadds
dec
clc
jb
ret
xor
mov
gs
sbb
pop
out
sti
push
mov
xchg
mov
mov
arpl
std
testb
xchg
out
ret
loop
loop
dec
mov
testl
iret
mov
repz
clc
movsb
sbb
pop
mov
push
and
aaa
bnd
jl
js
sbb
xchg
das
mov
add
stc
mull
mov
andb
fucomip
and
sbb
andb
ja
pushf
sbb
popf
pop
sbb
clc
add
cmp
into
call
cmp
in
dec
fsubl
ds
gs
push
ret
sub
add
sub
enter
add
mov
jbe
sbb
sbb
pop
out
jae
test
out
xor
lods
xor
ficompl
inc
mov
pushl
and
mov
jne
push
scas
lea
inc
mov
mov
add
mov
xchg
dec
and
cmp
divb
dec
aas
jle
arpl
xchg
push
ljmp
sbb
add
inc
dec
in
in
push
push
lea
fbld
mov
mov
pop
jnp
dec
adc
lret
incl
fistpl
lods
pop
sub
cltd
imul
lea
mov
cmp
mov
sub
in
mov
lods
sub
jecxz
in
xchg
dec
sahf
out
push
out
les
pushf
mov
ja
pusha
add
neg
mov
jp
jno
xorl
in
xchg
xchg
mov
fsubrl
push
xor
icebp
in
xor
shll
sti
mov
addr16
stos
sub
dec
bound
out
ja
cmpsb
mov
mov
mov
sahf
je
add
std
out
push
fbstp
pushf
jle
pushf
cmp
xchg
test
int
lods
mov
xchg
pop
dec
lds
cmova
js
add
mov
repz
inc
sbb
lcall
fstpl
push
xchg
inc
mov
js
xchg
ret
test
addr16
subl
or
mov
pop
outsl
push
and
out
jge
pop
sub
out
xchg
movsl
mov
push
dec
inc
inc
add
andl
nop
dec
cmp
int3
testb
in
ret
jbe
in
jmp
inc
and
lret
inc
adc
scas
jmp
jmp
pop
sub
push
mov
stos
lcall
or
jbe
fldcw
mov
xchg
inc
in
or
xchg
jbe
js
leave
jae
testb
repnz
in
xor
orb
or
movsb
sbb
or
aad
pop
inc
mov
inc
in
mov
cwtl
and
and
inc
dec
fdivs
cs
mov
pop
in
adc
shl
cmp
dec
inc
mov
into
pop
repnz
sub
or
clc
and
push
mov
cmp
shlb
inc
adc
or
pop
sub
out
lret
fsubl
cli
jp
test
sub
inc
jo
sub
inc
cwtl
aam
scas
cmp
pop
fcomip
pop
xchg
orl
je
bound
test
jno
adc
add
add
add
mov
roll
inc
movsl
movsl
clc
lea
lret
sub
mov
vandnps
loopne
push
stc
sbb
shlb
push
movsl
daa
ja
into
and
xchg
cmp
dec
xor
dec
into
ficoml
mov
add
pop
sub
inc
xchg
pop
jae
push
sub
sti
sarb
lahf
mov
xlat
push
inc
lea
int
test
cmp
addl
jg
jno
inc
ret
rcl
xchg
mov
dec
xchg
std
mov
jo
push
or
movups
in
mov
add
and
addr16
mov
stc
add
leave
sbb
jno
sub
xchg
out
mov
xlat
sub
rolb
or
jg
add
gs
int
xchg
lods
sti
fs
fucomi
mov
pop
loopne
pop
push
adc
add
shlb
push
test
and
mov
jo
push
or
sbb
jns
mov
fadd
inc
mov
cwtl
test
push
pop
adc
inc
or
push
xor
lret
adc
and
cs
lea
mov
fcomps
push
or
into
and
inc
inc
out
adc
or
mov
pop
shlb
ljmp
aaa
mov
and
jb
out
sbb
jp
jl
dec
loopne
iret
sarl
das
inc
and
xchg
jb
stos
jno
in
mov
iret
insb
psrlq
out
mov
inc
dec
add
push
sbb
out
dec
fnsave
fmuls
mov
test
cmp
push
add
std
dec
and
dec
fwait
push
lahf
xor
ds
pop
cmp
jno
test
das
clc
add
lcall
les
imul
mov
dec
inc
aam
push
pop
jne
and
or
sbb
push
sub
jb
jne
nop
repz
add
fcmove
pop
pop
push
mov
or
stc
dec
cmp
lds
mov
mov
shrb
pop
push
movb
and
leave
and
das
stos
sub
mov
mov
loope
insb
insl
nop
add
sub
fildll
addb
dec
js
jecxz
push
xor
mov
cli
xchg
mov
pop
loope
adc
popf
and
leave
xchg
xchg
jg
mov
repz
xchg
jle
jnp
lahf
sbb
bound
sbb
jns
sbb
and
sbb
arpl
lods
roll
xlat
mov
call
popa
loop
and
int3
dec
test
xchg
pop
pop
fimuls
aad
push
and
loope
or
push
pop
les
push
dec
xchg
jg
xor
add
adc
paddusw
lcall
movsb
inc
jae
dec
and
sahf
stos
cmp
stc
add
jnp
jmp
mov
fld
test
data16
jbe
jecxz
mov
popf
pop
shl
aaa
sub
push
xchg
stos
out
mov
in
push
faddp
jge
push
push
lods
pop
lods
push
scas
mov
jp
sar
fistpl
mov
push
push
fimull
adc
inc
jae
cld
push
lahf
cmp
jne
ret
lock
xchg
cli
xchg
jle
pop
call
cwtl
fdivr
outsl
das
in
icebp
mov
sub
push
xor
pcmpeqd
sub
xor
dec
pop
jge
int
jne
or
repnz
jno
imul
pop
mov
loopne
popa
repz
jno
sub
gs
movsb
fldpi
bound
push
mov
sub
test
add
js
in
sub
int3
movsb
js
dec
nop
push
enter
mov
enter
lock
in
sbb
sub
repz
adc
dec
xchg
mov
dec
loopne
mov
mov
sbb
enter
outsb
jb
rcl
outsb
xor
mov
cmp
pop
stc
dec
push
stc
mov
xchg
push
mov
push
stos
out
jg
adc
in
lods
dec
es
dec
sub
repnz
jmp
pop
cmp
in
data16
push
jp
jp
push
add
fucomi
lahf
fsub
in
cltd
lret
test
jge
cmp
in
ror
pop
stos
pop
mov
stos
adc
out
pop
push
xchg
xchg
nop
push
aas
test
or
cld
leave
pushf
repz
repnz
shll
loop
data16
xor
in
push
pushf
lods
frstors
sbb
add
mov
xor
addr16
sahf
pop
mov
lret
shlb
sbb
mov
cmp
push
rolb
dec
sub
pop
mov
gs
nop
add
mov
pop
mov
add
mov
pop
mov
dec
aad
adc
xlat
adc
adc
mov
push
out
mov
and
lret
sbb
fstps
jnp
mov
jae
scas
pop
fs
or
orb
mov
jge
xchg
shll
xor
mov
inc
ficoml
js
and
fidivs
ret
sbb
add
pop
movsl
pop
sarb
sti
ljmp
mov
fstpl
xor
lahf
adc
stos
insb
cs
push
hlt
lds
cmp
imul
push
out
jecxz
andb
lcall
out
ds
ror
jl
pop
inc
cmp
jbe
pop
jno
loope
lds
push
aas
movsb
enter
fs
mov
ret
and
sub
add
fildll
add
loope
fwait
cs
inc
repz
clc
enter
dec
nop
sub
sarl
push
mov
xor
mov
dec
mov
sahf
lea
inc
inc
and
pop
dec
dec
aad
and
cmp
mov
mov
dec
or
cmp
mov
cmp
inc
aas
inc
cld
mov
push
out
dec
and
mov
jb
ds
push
lcall
or
hlt
rorb
cmc
jo
mov
jp
mov
test
mov
nop
xor
mov
repz
cmpsl
rcl
mov
xchg
add
and
cs
mov
pop
or
xchg
sub
pop
dec
in
insb
iret
rorb
dec
adc
adc
xchg
or
jo
movsb
xchg
mov
xchg
fidivl
faddl
mov
insl
insb
sub
add
loope
jno
lods
imul
bound
dec
jb
aas
inc
outsb
jp
dec
shl
mov
mov
mov
pop
frstor
movsb
popf
add
mov
jl
xor
loopne
xchg
ret
push
mov
or
in
sub
repnz
lods
js
cmp
movsb
enter
mov
mov
js
aaa
dec
in
inc
inc
dec
cmpsl
cld
mov
dec
and
mov
loop
imul
iret
je
aad
cs
test
iret
or
hlt
mov
into
daa
mov
and
push
pop
popf
les
rcrl
or
faddl
jge
jae
in
pop
mov
les
mov
pop
loop
adc
jl
mov
pop
cli
jo
sbb
loopne
adc
mov
scas
xchg
pop
xchg
jp
push
aaa
std
test
add
into
xchg
mov
mov
mov
loop
cwtl
mov
outsl
test
jns
jbe
cmp
xchg
lea
fwait
pop
mov
ljmp
testb
or
xor
addr16
adc
cmp
xchg
roll
test
mov
rcrb
sbb
insb
mov
stc
jne
lahf
imul
es
xor
fcompl
or
dec
ljmp
imul
jne
cmp
popf
dec
loopne
mov
outsb
movsl
xchg
xor
shll
cmc
das
outsb
add
pop
sbb
sub
test
into
dec
mov
lods
and
jae
xchg
jnp
jns
sarb
outsl
adc
adc
mov
push
adc
mov
push
pop
pusha
inc
stc
scas
push
fcmovnb
ljmp
imul
xchg
push
lea
xlat
fcomp
test
mull
sub
and
add
mov
add
rol
ljmp
and
inc
mov
movsb
push
cltd
inc
adc
xchg
push
jnp
push
adc
ss
mov
aam
and
dec
jno
jnp
mov
add
lea
ljmp
mov
dec
cmp
mov
add
sub
push
add
popf
inc
popf
mov
int3
cmpsb
add
enter
dec
stc
push
mov
nop
repnz
or
xchg
mov
push
ja
push
jno
inc
push
iret
xor
rcrl
sub
movsl
dec
aaa
cmp
push
adc
cmpsb
adc
inc
jne
xor
jne
inc
out
out
fs
aaa
fimuls
and
jne
mov
pop
push
loopne
push
xchg
xchg
mov
pop
repnz
lock
xlat
fs
lcall
mov
jmp
mov
and
xor
cltd
rol
xchg
push
mov
fwait
and
cmpsb
pop
mov
lcall
repz
popf
lret
addr16
cmp
hlt
or
les
mov
sbb
fs
cmp
dec
sti
jmp
jge
sub
xchg
dec
lds
jp
push
or
mov
jae
cs
ret
pushf
daa
mov
and
sub
adc
lcall
mov
jmp
das
out
adc
adcb
xchg
mov
add
sbbb
jae
rorb
pop
in
mov
mov
cmc
dec
jno
or
adc
fldcw
push
and
inc
mov
pop
lcall
pop
mov
pushl
outsl
adc
rorl
ffree
je
aad
into
dec
cmp
sbb
dec
pop
insb
fwait
push
xchg
les
jg
test
es
aas
das
repnz
sub
mov
mov
lret
add
xor
addr16
fcompl
icebp
sub
add
pop
xchg
sahf
into
sbb
repz
inc
test
in
or
pop
insl
lahf
call
dec
jp
inc
jnp
rcrl
mov
leave
hlt
mov
mov
add
add
adc
push
jp
mov
mov
movsb
out
inc
aas
inc
add
in
lods
hlt
add
inc
scas
xchg
int
or
jl
fmuls
inc
sahf
mov
mov
lea
outsl
xor
cmp
insl
add
jnp
cwtl
add
inc
jo
bound
fwait
jnp
gs
fldcw
pop
test
xchg
jnp
out
jecxz
xor
cs
sub
mov
test
cmp
shll
xor
push
mov
add
jp
movl
adc
in
fistpll
gs
jp
lock
or
xlat
and
or
jl
movsb
lcall
lahf
jmp
jle
sbb
or
cmp
push
dec
and
or
addr16
loope
xchg
and
sahf
pop
fsubs
sarl
popf
stos
daa
in
call
daa
xchg
xchg
mov
adcb
bound
mov
dec
jae
enter
cmp
movsl
sub
inc
in
enter
or
mov
adc
lds
inc
out
jno
les
inc
sub
lret
pop
inc
insb
shl
push
cmpsl
cwtl
nop
pop
imul
outsl
pop
call
cmp
or
cmp
push
outsb
adcb
lock
cmp
leave
pusha
and
sahf
daa
inc
dec
adcl
shl
jl
out
jae
or
mov
aad
sbb
cmp
jp
add
stos
gs
add
push
out
sti
mov
jb
pop
call
sarb
loopne
popf
add
ret
jne
je
or
mov
incb
orb
popa
xchg
xchg
push
andb
mov
adc
pop
sub
sbbl
mov
into
xchg
sarl
sbb
loopne
shll
leave
scas
lret
ss
or
cmp
or
xor
rolb
add
cwtl
push
shrl
xchg
jg
lock
pop
lea
inc
adc
orb
fildl
in
dec
push
jle
pusha
int
and
cmp
push
sarb
out
std
idiv
inc
fildll
inc
dec
js
mov
mov
inc
out
lods
xor
sub
pusha
imul
adc
insl
push
decb
das
push
xor
les
and
out
aas
data16
shlb
ret
into
cmp
rorl
dec
mov
loopne
scas
mov
es
cmpb
adc
xchg
push
ja
cltd
dec
enter
xchg
mov
imul
aaa
mov
xchg
push
mov
push
push
sub
xchg
das
lea
cwtl
push
xlat
subl
push
add
aas
ja
pop
loope
hlt
xchg
jl
mov
sub
les
cmpsb
es
outsb
sub
push
stc
fs
push
push
cmc
lahf
jns
push
mov
jae
jge
cmp
push
xchg
stc
pusha
xor
mov
movsl
xor
incl
mov
inc
test
test
scas
inc
es
xchg
jns
jg
jns
inc
es
mov
cs
ret
inc
iret
sub
jne
insb
inc
aaa
mov
pop
sbb
cmp
sbb
sarl
lea
pop
int3
je
fidivrs
jo
lock
pop
mov
mov
jbe
aad
cs
inc
jno
mov
rclb
mov
cltd
aad
pop
pop
sahf
pushf
clc
imul
xchg
cmpsl
mov
cmp
mov
sub
push
push
shll
scas
jecxz
mov
fdivrp
stos
popf
fwait
mov
pop
in
cli
ds
cmp
or
and
inc
and
enter
loop
out
inc
aam
ja
lods
fldl
sub
cmp
lret
aam
idiv
addr16
in
enter
insb
sub
inc
lock
jle
daa
pusha
imul
dec
imul
push
adc
mov
mov
ret
lods
testb
mov
mov
int
adc
test
push
push
out
mov
shl
scas
mov
dec
or
mov
mov
imull
cltd
cwtl
xlat
jge
cmp
xlat
lock
pop
jns
lret
fisubrs
jnp
std
sub
and
into
dec
cmpsb
ds
movsb
xchg
test
push
repnz
dec
mov
xchg
jo
jb
loop
std
mov
ss
and
push
daa
and
mov
fdivrs
mov
cli
push
pop
xor
mov
loope
lods
insl
xor
push
add
fcompl
mov
pop
das
lods
add
jg
sub
mov
fiaddl
mov
cltd
bnd
ret
fimull
or
mov
and
cmp
push
adc
xchg
mov
cltd
inc
lods
ja
enter
jmp
add
push
pop
pusha
daa
cmp
mov
push
lcall
mov
out
push
test
in
and
aas
cmpsb
movsb
lret
mov
lock
pushfw
mov
inc
and
out
addl
ja
mov
div
sbb
bound
push
inc
into
shrb
xchg
dec
push
mov
inc
ficoms
cli
push
jecxz
ficompl
add
ret
std
xchg
xchg
sbb
cld
cld
cli
add
dec
push
push
out
cltd
lcall
xchg
sbb
dec
pop
rclb
popa
pop
out
add
cmp
mov
call
lods
in
mov
sbbb
lods
roll
mov
add
xchg
jmp
sbb
push
inc
sbb
shrl
mov
pop
das
pop
xor
jl
call
lahf
aad
je
inc
mov
mov
xchg
js
out
divl
push
ffree
in
pop
add
adc
jns
andb
loopne
add
pusha
push
add
pop
hlt
in
aaa
jns
test
jmp
adc
xor
xor
dec
stos
mov
sbb
aad
inc
push
and
sub
int3
ja
inc
lods
push
loop
scas
loopne
mov
loop
sarl
mov
shrl
mov
mov
lods
sbb
nop
hlt
jge
mov
sbbb
inc
sub
pop
js
push
ss
out
cmp
lret
mov
sbb
xchg
daa
jmp
xchg
pop
ret
pop
wrmsr
sbb
xlat
notl
xor
jbe
out
lods
adc
pop
leave
sub
cwtl
mov
arpl
or
pop
lret
cmp
pop
xchg
adcl
pop
addr16
pusha
xor
jge
cmp
xchg
pop
push
scas
pop
jge
lock
inc
es
jae
xchg
jp
mov
lods
shll
test
ficomps
mov
cltd
ljmp
or
cmpb
bound
stos
xor
jns
subb
xchg
xchg
sahf
add
lret
lea
xchg
xchg
cwtl
mov
and
pop
mov
sbb
dec
stos
mov
loopne
insb
aam
or
push
jne
aaa
cmp
adc
jl
in
ds
in
pop
int3
or
xchg
inc
stos
lods
xor
out
fstl
fs
cltd
add
xchg
xchg
mov
xchg
cmpsb
shlb
cmp
jne
gs
or
incl
and
mov
cli
and
sbb
aas
gs
lret
sbb
fs
xchg
daa
out
inc
pop
stc
and
sbb
call
stos
pop
jp
jb
push
cmp
and
ficoms
push
jnp
sbb
dec
or
inc
repz
nop
sub
rdmsr
std
bound
inc
xor
or
inc
int3
icebp
popa
sub
sbb
mov
inc
pop
les
cmpsl
push
or
aad
xor
cli
hlt
inc
sarl
xor
xlat
je
add
add
gs
sub
movsb
push
sti
mov
push
cwtl
imul
dec
xchg
cmp
mov
sub
push
stos
ss
jns
js
sub
divb
or
iret
lea
push
pop
xchg
jg
sub
cmp
jns
icebp
mov
shrb
and
wbinvd
scas
pusha
cld
xor
hlt
dec
cmc
es
ret
sbb
adc
mov
fisttpll
and
fadd
cmpsb
gs
movsl
jns
das
mov
xchg
pop
or
inc
in
xchg
fs
jp
jno
mov
jo
inc
ret
inc
sti
pop
adc
rcr
push
ja
push
mov
sub
lock
nop
popa
pop
mov
and
mov
xor
and
xchg
mov
sub
cmp
scas
xorb
ret
leave
mov
pop
movsl
out
or
mov
and
adc
fnstenv
and
outsl
ljmp
mov
and
sub
sbb
mov
shlb
scas
nop
mov
adc
push
sub
insb
and
cltd
xchg
xchg
push
add
mov
rcrb
xor
mov
and
out
aas
ret
adc
scas
push
fidivs
sub
movlps
mov
sahf
out
or
jne
jnp
div
cmpsl
cld
inc
test
stos
lea
stc
cwtl
mov
xlat
jecxz
add
les
lock
mov
rcrb
inc
push
popf
cmp
push
ss
xchg
in
jns
jnp
lret
out
nop
and
fisttpll
jecxz
pop
pop
loope
xor
lret
push
lret
inc
cltd
sub
mov
rcrb
push
out
bswap
mov
pop
push
loop
xor
mov
mov
cmp
fdivp
mov
pop
xlat
rorl
fcoms
or
and
mov
cwtl
inc
dec
and
sub
mov
jbe
cltd
dec
ds
lods
movsl
decl
xor
pop
xchg
xchg
idivl
adc
lods
sub
and
cli
fprem1
bound
jle
jge
leave
stos
mov
cmp
xchg
mov
ficompl
loop
shrl
dec
jecxz
test
cmpsl
inc
fimull
sbb
add
sbb
das
lods
sbb
push
mov
daa
and
sbb
test
lds
and
fnstsw
push
xchg
xchg
sub
mov
cltd
and
inc
outsb
imul
outsl
notb
inc
jle
cs
mov
add
mov
inc
and
popf
mov
xchg
adc
pop
sub
mov
negb
loopne
xor
dec
jecxz
xlat
push
icebp
or
enter
test
outsb
stos
xchg
outsl
jb
pop
shlb
inc
pop
push
lods
stos
dec
rorl
fsubl
xor
gs
xchg
xchg
stos
push
addr16
pop
inc
dec
loop
and
xlat
loopne
daa
xor
sbb
xor
pusha
int
int
adc
cmovge
rolb
push
pop
cltd
mov
fs
pop
dec
pop
push
add
and
pop
fisubrl
sbb
stos
jmp
dec
inc
jecxz
test
cmp
or
inc
rcrl
sbb
mov
cltd
xchg
sbb
aam
call
gs
mov
mul
pop
stc
fs
add
pop
mov
jmp
jp
sub
push
mov
adcl
mov
sub
mov
xor
sub
push
xorl
pop
shlb
sub
push
jmp
dec
into
imul
icebp
or
or
push
test
mov
pop
hlt
jle
pop
dec
test
mov
mov
scas
addr16
clc
bound
cmp
xchg
adc
sub
ljmp
or
adc
sbb
stos
out
in
sbb
cmp
pop
mov
test
pop
shlb
fists
cmp
int3
stc
idiv
loope
subl
test
imulb
jle
sahf
outsl
cmc
mov
mov
popa
mov
push
or
pop
cmp
jno
xor
jmp
cmp
decb
adc
jecxz
inc
xor
mov
jge
push
and
jbe
pop
mov
in
repnz
roll
aam
int
in
cmpsl
ljmp
out
fxch
dec
rolb
push
add
pop
sbb
jmp
out
test
scas
icebp
scas
push
test
enter
arpl
sarl
lock
or
xor
or
mov
mov
das
std
xchg
mov
push
movsb
out
jg
xorb
bound
mov
cmp
lods
mov
mov
mov
rcl
sbb
push
and
pop
ja
dec
push
mov
insb
int
clc
jge
ficoms
xchg
push
cltd
add
aaa
push
enter
dec
inc
jl
test
mov
popf
pop
mov
jge
adc
pop
xchg
adc
push
jo
shlb
mov
push
cmpb
fst
pop
icebp
pushf
cld
roll
push
mov
cs
jb
int
aaa
sbb
js
add
or
and
mov
notl
fstpt
jle
adc
mov
xchg
push
pusha
push
cli
adc
jae
inc
mov
mov
stos
pop
dec
add
adc
je
cmp
fildll
lds
jbe
cld
inc
jecxz
cmp
add
fsub
insl
mov
pop
inc
lcall
dec
pusha
stos
sub
dec
std
sahf
sar
sub
dec
push
mov
dec
mov
sub
subb
and
out
xor
mov
lret
aam
movb
lcall
inc
std
mov
jnp
xor
in
mov
mov
or
xor
jp
mov
inc
aam
out
jge
mov
int3
outsb
pop
sbb
xor
test
cmp
push
mov
sbb
sbb
out
scas
inc
xor
cmp
mov
mov
loopne
ljmp
jae
mov
orb
inc
mov
flds
mov
xor
or
inc
ret
popf
loope
pop
mov
mov
repz
xor
adc
leave
adc
jecxz
xchg
mov
and
lret
sub
rcrl
adc
scas
mov
sbb
shrb
stos
push
mov
cmp
sbb
xor
pop
jge
jmp
jle
insb
mov
aad
pop
fstpl
outsb
mov
push
pop
inc
xchg
push
push
les
mov
pop
xchg
mov
xchg
loope
movb
les
inc
sub
repz
flds
or
xchg
js
push
or
jl
mov
and
sbbl
pop
insb
bound
scas
push
mov
aaa
nop
push
int
push
lcall
loope
cmc
mov
test
ficomps
testl
jl
mov
out
js
ficoms
pushf
out
pop
fwait
pop
jbe
sar
inc
xchg
dec
add
sbb
sub
test
roll
imul
cs
push
cmp
sbb
xchg
cmp
das
xchg
into
dec
sarb
rolb
dec
scas
out
pop
adc
fucom
enter
sti
test
sahf
and
shll
mov
jl
lock
pushf
xchg
xchg
xorb
mov
faddl
mov
mov
out
jne
lds
aaa
insb
mov
in
pop
mov
jp
ret
dec
inc
lahf
inc
sub
jmp
movsb
aas
push
sub
int
add
dec
dec
xor
mov
addr16
jnp
mov
cmp
lret
inc
fdivp
push
sub
clc
or
push
push
and
or
mov
outsl
cli
loope
or
pop
inc
pop
cld
ret
int3
out
icebp
mov
cli
outsl
xor
pop
je
xchg
repz
sub
jae
xor
mov
mov
jmp
mov
jle
cmp
mov
jno
scas
mov
cmp
fcompl
addr16
lcall
in
add
pop
call
rolb
mov
inc
mov
rcll
sub
pop
movsl
sahf
jge
jle
das
cwtl
jns
mov
pusha
sub
es
cwtl
iret
mov
adc
stc
mov
scas
shlb
push
aam
cld
data16
mov
xlat
adc
js
and
xchg
xor
fstl
in
rcll
add
xchg
aas
push
mov
loop
loop
mov
mov
rol
push
pop
pop
sbb
rcl
pop
jno
pop
add
pop
xchg
jb
dec
push
cmpsl
push
cmpl
dec
clc
push
mov
in
cmpb
sub
test
hlt
ret
pop
cld
sub
mov
lock
mov
loope
loop
xor
and
mov
mov
subb
xor
sub
aas
xchg
ljmp
inc
in
push
rcll
ljmp
icebp
pop
jns
imul
jnp
pop
ficoms
dec
xor
std
xlat
shlb
adc
push
mov
stc
in
rcrl
jle
dec
ror
flds
aad
pusha
xor
inc
test
ret
add
inc
add
js
push
int3
fwait
mov
and
int
icebp
mov
mov
negb
icebp
stos
jns
sbb
xchg
inc
xor
mov
mov
addl
aaa
loope
xchg
cmp
repz
mov
loop
sub
cmpsb
pushf
and
pop
data16
imul
mov
mov
pusha
jb
outsl
push
aas
cltd
add
push
mulb
jo
les
nop
rorb
push
lahf
lods
xchg
aaa
aas
push
mov
lahf
xor
scas
in
pop
pop
out
xchg
shrl
loopne
jne
into
xor
push
shr
lret
inc
cmp
jo
and
pop
rol
rcll
sbb
pop
daa
shlb
cmpsl
pusha
outsb
daa
jo
das
ret
lahf
sub
mov
pop
mov
fwait
jo
icebp
pop
lods
lahf
sbb
mov
adc
mov
enter
rorb
add
cli
sbb
xchg
sarb
cltd
dec
add
jle
jmp
cmp
mov
and
adc
fistpl
imul
push
daa
jns
pusha
push
sbb
rcrb
stc
es
icebp
mov
loopne
rorb
xchg
test
adc
push
xor
dec
sbb
andl
xor
add
ret
loopne
lds
call
jp
cmp
int
or
mov
cld
shll
int3
dec
xchg
xor
cmp
aam
pop
fiaddl
cs
repnz
mov
enter
cmp
dec
dec
sbb
ficoml
cmc
fidivrl
jne
mov
mov
repz
pop
mov
pop
loope
and
xchg
pop
movb
xchg
bnd
sub
or
mov
dec
add
xchg
mov
cmp
divb
push
std
jae
dec
jne
add
inc
out
push
adc
pop
xchg
arpl
fnsave
adc
mov
aad
add
outsl
cmp
xor
mulb
outsl
test
sub
lret
xor
adc
push
or
enter
aad
adc
dec
jno
pop
jle
lods
pop
push
popf
and
pop
push
shr
dec
push
pop
rorl
xchg
xor
push
lods
and
enter
sbbl
xorb
pop
jno
das
int3
add
and
cmp
in
jl
movsb
push
mov
lds
push
mov
push
dec
or
inc
push
pop
insb
push
push
sub
dec
sarb
js
jl
inc
in
addr16
flds
imul
cmc
jp
add
hlt
sti
mov
scas
into
sub
dec
mov
sbb
xor
pusha
dec
pop
sub
aaa
jmp
lea
scas
dec
test
pop
out
out
sbb
xchg
daa
push
lret
dec
sub
fs
xchg
or
stos
scas
pop
fdivr
cmp
mov
adcb
ss
ret
loopne
lahf
ja
ret
xor
shlb
jl
test
mov
jmp
add
sti
hlt
jno
sahf
jae
adc
jo
sarl
or
xor
ss
xor
and
in
sbb
inc
lock
movsb
jl
push
or
or
add
aaa
icebp
adc
in
and
pop
adc
ret
call
popf
xor
dec
das
clc
out
orl
scas
dec
pop
xlat
lea
mov
jg
jno
mov
lds
and
je
and
push
or
mov
pusha
add
cmp
jo
inc
pushf
push
out
dec
xchg
movsl
stos
popa
std
dec
movsl
mov
mov
repnz
lret
or
mov
xchg
push
cli
enter
cld
xchg
push
or
sbb
or
cmpsl
mov
mov
mov
lret
dec
jne
cmp
pop
lret
mov
repnz
call
inc
jecxz
loopne
inc
sbb
stos
testb
repnz
mov
mov
sarl
repnz
out
adc
add
pop
xchg
mov
imulb
and
sbb
push
pop
push
sbb
lods
orb
repnz
mov
inc
mov
inc
or
iret
sbb
mov
das
icebp
push
cltd
sub
loop
jo
es
adc
pop
sbb
sbb
jnp
insb
aas
call
mov
or
xor
xchg
lret
mov
movsb
outsb
jnp
pop
or
sbb
mov
adc
inc
or
or
mov
push
fwait
and
or
popa
pusha
stc
js
and
aaa
sar
xorl
mov
jns
fdivrl
xchg
jmp
jl
mov
mov
pushf
stos
popf
xchg
ret
fcoml
jns
jno
leave
push
popa
ja
dec
fwait
add
add
add
imul
test
fsubr
mov
rcl
stos
sbb
push
sbb
inc
sub
push
add
mov
outsb
push
lcall
outsl
adc
sbb
mov
mov
xchg
mov
sbb
fsts
push
out
aas
jp
and
adcl
pushf
int
mov
mov
fisttpl
add
inc
pop
or
mov
and
ja
cs
das
in
jb
into
jl
jae
popf
fwait
jns
adc
mov
sbb
push
rolb
jae
sbb
xchg
cltd
mov
and
aas
mov
cwtl
mov
arpl
negb
into
fdivl
lods
shrl
pop
cmpsb
mov
add
jbe
cmc
dec
push
dec
mov
arpl
sbb
bound
dec
sub
popa
cli
cmc
hlt
dec
sbb
inc
mov
jmp
cmp
and
out
pop
pop
inc
movsb
ret
cmp
jge
add
cld
jnp
js
add
insb
jo
scas
ss
mov
lret
call
ds
cltd
dec
lods
js
pop
mov
xchg
sbb
lea
mov
test
insb
and
iret
fsts
and
sub
int
xlat
sub
iret
push
stc
or
rclb
push
mov
sub
cmp
adc
cmp
add
loop
mov
add
mov
icebp
into
xchg
leave
or
nop
xchg
stos
cmpsl
loope
sbb
push
xor
and
adc
mov
fldcw
add
push
inc
jmp
iret
ljmp
jmp
jmp
mov
cld
fnstsw
xchg
push
push
mov
sbb
sahf
enter
mov
pushf
rcl
data16
insb
adc
pop
ja
fistps
push
xchg
fbld
movsb
loop
push
push
xor
stos
cmp
ljmp
test
mov
sub
xlat
lcall
rcrl
pop
mov
push
cmp
pushf
nop
jl
push
mov
dec
sub
mov
pop
pop
push
or
pop
and
push
int
xor
dec
push
les
std
dec
xor
jb
xchg
testl
outsb
ljmp
adc
lret
inc
or
pushf
out
pushf
mov
cmpsl
cmp
mov
mov
data16
adc
mov
sub
lret
insb
sahf
cmpsb
in
inc
inc
fmull
mov
pop
int
mov
cmp
into
in
int3
ds
adc
hlt
pop
clc
mov
lret
mov
or
outsl
mov
test
push
mov
insb
outsb
mov
and
mov
and
aas
daa
mov
and
jo
lods
cmp
out
xor
and
imul
loop
inc
push
mov
mov
test
mov
xor
add
adcl
xchg
and
ljmp
jnp
inc
or
aas
pusha
iret
mov
pusha
jmp
andb
repnz
fs
and
xchg
dec
dec
lcall
mov
add
loop
xor
loope
lods
cmpsb
cmpb
adc
xorb
inc
shll
push
imul
ss
insb
jo
dec
fldl
lcall
icebp
sub
das
push
mov
ja
mov
dec
or
inc
and
aad
fildl
push
idiv
sub
jp
mov
call
mov
mov
lods
pusha
ja
daa
push
push
adc
in
call
lock
mov
lcall
iret
mov
cmp
dec
mov
mov
sbb
ljmp
mov
loopne
popa
inc
es
das
ja
aad
pushf
icebp
inc
pop
loope
mov
dec
xchg
push
sbbb
add
add
mov
and
sub
push
inc
mov
sbb
and
xchg
pop
ljmp
stos
or
lahf
lods
in
mov
gs
mov
repz
sbb
inc
mov
test
shll
mov
push
aad
add
mov
pop
repz
mov
enter
shlb
and
cs
bound
mov
and
loop
adc
mov
pop
sub
xchg
das
mov
mov
and
or
test
test
mov
pop
xor
mov
jmp
int3
or
je
dec
xor
xchg
mov
movsb
or
loope
test
aas
cltd
cs
out
mov
inc
xor
je
cmp
std
push
imul
test
test
data16
int3
les
push
and
or
popf
icebp
mov
lds
jnp
int
xor
adc
add
mov
test
ss
lea
sbb
test
and
bound
jne
shll
xor
cmp
or
lahf
mov
pop
popf
pop
cmpsb
in
push
jg
dec
and
scas
imulb
les
mov
cmp
pop
xchg
cltd
shll
rcll
and
xchg
pop
inc
iret
jns
insl
xchg
rcrl
push
dec
addr16
sub
xchg
out
jmp
pop
dec
dec
push
dec
loop
xchg
xchg
mov
aaa
push
popa
cmc
push
jnp
in
gs
and
sbb
bound
out
outsl
or
adc
shlb
insl
fldt
scas
mov
inc
mov
inc
ja
pop
ds
jo
pop
loop
mov
movsb
push
mov
outsb
mov
push
adc
dec
dec
addl
dec
je
jecxz
mov
cmp
mull
cmpsb
xchg
mov
cmp
iret
xchg
inc
pop
out
stc
jns
mov
cmp
movsb
test
inc
xchg
and
outsb
popl
and
xchg
mov
dec
iret
mov
and
mull
jne
xor
int3
test
dec
and
imul
mov
xlat
das
orb
loope
rcr
jp
mov
arpl
fwait
sub
fldt
pop
xchg
loop
sahf
out
cmp
and
jle
xor
daa
and
jb
pushf
adc
jnp
sbbb
sbb
int
pop
mov
out
jae
xor
pop
stc
pop
jmp
test
xor
adc
sbb
jns
das
dec
inc
popf
addr16
nop
popa
pop
pop
movsb
cmp
jmp
js
push
and
hlt
or
pop
jns
stos
lods
push
add
dec
loope
add
bound
das
sarb
mov
dec
test
ljmp
lahf
push
push
cwtl
repz
leave
dec
out
arpl
dec
je
clc
popf
lcall
add
enter
xchg
push
sarb
sbb
push
aam
mov
stos
fcomip
xchg
pop
cld
jne
and
lcall
clc
xchg
pop
scas
lds
jge
stos
lret
mov
pop
pusha
mov
mov
dec
xchg
fs
inc
repnz
mov
or
outsl
out
mov
inc
mov
sub
xchg
fbld
add
sahf
xchg
add
add
test
cmp
enter
push
inc
push
fmuls
in
jecxz
mov
mov
inc
push
loop
in
lcall
jmp
ds
xor
xor
and
inc
or
mov
negl
cs
jl
dec
das
lahf
inc
dec
mov
push
mov
mov
in
mov
mov
push
and
sbb
mov
inc
or
sub
push
ret
push
lahf
pop
cmp
neg
loope
icebp
and
or
inc
xchg
test
mov
dec
sbb
inc
ljmp
imul
imul
and
xor
mov
lret
add
pop
adc
push
push
repz
lea
lods
arpl
adc
outsl
mov
jnp
aas
stc
jmp
les
xchg
addr16
movsb
fimuls
mov
sbb
in
aad
clc
or
pop
cmp
sahf
cmp
push
in
jno
test
jb
int
xorl
movsl
jl
sbb
jo
js
sub
pop
sahf
xchg
aas
sbb
mov
divb
or
jp
add
cld
test
ret
mov
pop
inc
adc
push
es
ds
aaa
ja
fdivl
add
push
and
sti
adcl
push
pop
out
in
jns
arpl
imul
fldl
dec
cmp
rclb
push
shrl
inc
mov
inc
lret
stos
xchg
ss
jge
mov
xor
sbb
push
add
jnp
sbb
in
mov
addb
lret
popa
fwait
das
out
and
jle
and
std
aas
push
fadd
mov
fdiv
sahf
aam
mov
pushl
into
inc
clc
cwtl
jp
or
es
out
inc
mov
inc
and
sbbl
xor
mov
jbe
cmc
repz
jmp
pusha
push
jecxz
insl
xchg
lock
nop
addb
pop
nop
test
jle
adc
fdiv
pop
int
ja
aaa
ror
pop
mov
inc
cmp
cwtl
imul
hlt
testb
pslld
mov
pop
or
push
lea
dec
ss
andl
flds
ret
xor
inc
pushfw
sub
repz
adc
call
aam
pushf
push
ss
pop
aad
xchg
inc
daa
ss
sahf
cmp
cmpl
fidivs
aad
mov
into
jns
push
cmc
shr
jle
pop
sub
popf
bound
sarb
or
repz
mov
fucom
mov
mov
jecxz
adc
test
jno
mov
pusha
adcb
xchg
pop
imull
bound
pusha
xor
cmpsb
mov
push
aad
or
sub
in
out
add
push
outsb
aad
jmp
or
fnstsw
adc
jmp
lcall
xchg
push
cmc
inc
js
ret
mov
inc
push
loopne
lds
in
pop
sti
jge
jns
or
inc
push
insl
data16
cli
mov
es
in
or
dec
lahf
pop
adc
loope
in
cwtl
fnstenv
addl
iret
loopne
rorb
cs
call
dec
nop
stos
das
jg
test
inc
movsl
int
cmp
cld
pop
sbb
mov
pop
mov
cmp
out
pop
loope
xchg
fldcw
in
lret
push
icebp
mov
and
lret
lret
xchg
cmp
lret
xlat
sub
sbb
sub
mov
ficoms
shrb
fadds
adc
clc
cmp
loop
arpl
loop
out
ret
or
push
adc
inc
and
insl
mov
in
inc
mov
cld
sbb
cld
ficomps
add
pushf
hlt
outsl
loop
mov
lods
or
outsb
movq
lea
mov
icebp
xlat
movsb
xchg
and
idivl
or
jge
dec
ja
inc
cmp
sbb
les
aas
aas
ja
stos
sarb
incb
mov
lds
fwait
lret
xor
mov
or
fstps
add
cmp
xchg
mov
loopne
in
cmp
lret
in
gs
bound
mov
int3
cmp
jl
or
sbb
icebp
sub
filds
mov
inc
push
cld
jmp
inc
jmp
xchg
mov
aam
jecxz
xchg
ja
push
lea
mov
loopne
lcall
in
sbb
jnp
in
or
mov
add
fsubrp
push
loopne
arpl
adc
add
jns
je
aad
shr
push
bound
cli
ror
mov
xor
sbb
in
jl
pop
push
stos
jnp
inc
adc
aaa
xor
setg
out
dec
shlb
out
inc
adc
add
mov
xor
mov
mov
mov
lods
scas
sti
cmp
out
xchg
sub
ret
or
xor
pop
pop
in
jecxz
out
orb
in
into
stos
xchg
mov
inc
dec
push
jmp
aam
inc
jae
mov
push
push
icebp
jno
outsl
mov
rcrl
sahf
test
xchg
inc
mov
lret
andb
leave
add
sub
daa
outsl
xor
and
fsubrs
addr16
movsb
outsl
aas
dec
add
clc
push
push
inc
mov
xchg
cs
dec
scas
outsl
push
in
or
inc
mov
cwtl
xchg
in
pop
sub
push
sbb
aad
mov
inc
cmpsb
loop
mov
add
mov
mov
outsl
cmp
inc
sbb
push
sub
in
rcrb
xchg
inc
data16
ds
fstps
popl
push
and
sub
pop
cmp
ss
pop
lds
sbbb
ret
shrb
or
pop
mov
pop
dec
sahf
fbstp
rorb
mov
ljmpw
stos
or
popa
xchg
popa
jg
mov
xchg
pop
fadds
add
gs
sbb
das
cmc
pop
jne
pop
sub
adc
mov
pop
jg
and
and
pop
repz
cmc
lods
push
xor
inc
pop
pop
jmp
iret
call
imul
xor
pop
int
dec
fsts
xchg
pop
pushf
xor
iret
lock
dec
dec
push
cwtl
mov
push
mov
dec
int3
ljmp
inc
int
mov
xor
mov
pop
stos
jge
fiaddl
cs
cli
repz
jle
loopne
xor
jmp
jecxz
sahf
mov
pop
pop
pop
mov
jns
cmp
or
lock
ret
imul
repz
inc
or
lods
fldenv
cs
mov
repnz
out
flds
sbb
pop
xlat
xor
jl
out
pop
cmp
in
ds
sbb
cmpsl
out
fwait
or
fwait
push
xor
fcoml
pop
mov
lock
sbb
jmp
dec
mov
ss
mov
imul
inc
or
and
out
push
movsb
add
popa
and
add
jmp
stos
xor
or
mov
pop
ljmp
adc
mov
test
in
cld
hlt
fs
out
add
xor
cmpsb
loopne
jae
stos
leave
incb
ds
xchg
aad
and
lock
lods
rcrb
push
aam
in
mov
inc
into
adc
lret
and
mov
push
xchg
icebp
int3
sub
les
fnstenv
dec
pop
push
sysexit
ret
insb
dec
imul
lcall
subb
jne
inc
push
jge
mov
mov
ret
sbb
sbb
push
stos
xchg
dec
std
and
les
cmp
or
or
fcomps
adc
lcall
mov
xor
xor
cs
xor
nop
shrl
adc
mov
or
sbb
cmp
fistpll
sbb
iret
mov
shlb
enter
scas
call
or
cmp
icebp
lea
sbb
rorl
cmc
lea
xlat
inc
sti
xor
rcrb
pop
lea
sbb
je
cltd
out
mov
in
cwtl
xor
cs
mov
repnz
imul
jae
inc
loope
js
lret
jnp
stos
test
adc
int
mov
std
fsubl
xchg
jecxz
shrb
enter
aaa
xchg
sbb
aam
jge
or
leave
adc
add
scas
or
mov
les
mull
push
aaa
cmc
xor
in
fidivrs
fwait
out
jmp
int3
mov
add
test
ljmp
cld
insl
add
adc
imul
sub
mov
dec
inc
push
lret
sbb
adc
add
sub
mov
imull
sub
push
in
mov
jge
movsl
push
jge
sub
inc
sbb
jge
mov
iret
and
xchg
jl
in
fstpt
imul
std
iret
xchg
jle
cmp
inc
lods
add
push
jecxz
mov
or
add
shlb
mov
inc
je
push
xchg
sub
jne
add
outsb
inc
inc
jecxz
out
sub
call
xchg
js
jmp
inc
pshufw
dec
hlt
mov
mov
pop
stos
push
xchg
daa
xor
sub
iret
fsts
imul
inc
mov
clc
imul
loop
and
in
es
xor
js
outsl
adc
loop
mov
ljmp
cli
jne
js
push
push
js
aas
cli
xchg
inc
ret
adc
dec
fistps
setle
sub
inc
xor
mov
or
pop
out
mov
cmpsb
and
mov
lahf
lock
sbb
in
fsubrs
xchg
add
push
test
xchg
mov
or
jecxz
daa
push
imul
or
mov
shlb
xchg
push
aad
pop
insl
pop
adc
lods
mov
mov
push
xchg
or
xchg
in
push
mov
in
mov
mov
adc
fldt
fiaddl
popf
xchg
mov
mov
enter
jge
inc
mov
pop
cmp
sbb
movsl
jle
rcll
out
pushf
sbb
aas
popf
push
sub
push
into
js
scas
adc
sub
mov
mov
lea
and
adc
mov
movsb
shlb
xor
sub
cmpsb
xor
xchg
xchg
cmp
loop
push
sub
cmc
les
orl
push
lock
and
mov
pop
jg
addr16
dec
lock
jg
xchg
lds
xchg
loope
mov
mov
ds
imulb
push
jecxz
cmp
andb
out
out
lret
dec
dec
fwait
shll
aaa
in
or
mov
dec
hlt
mov
adc
daa
fcmove
pop
xor
push
add
out
push
movsb
mov
insb
jo
dec
inc
or
push
popa
xchg
test
mov
dec
cmp
fsts
call
jns
push
aaa
mov
sub
mov
cmp
mov
jb
fisttpl
iret
xor
sbb
test
mov
fwait
dec
fsubrs
jnp
sbb
imul
add
inc
inc
sbb
mov
or
insb
mov
movsl
or
cltd
and
inc
cli
jmp
fwait
and
test
lea
aaa
lods
mov
ret
adc
xlat
out
jae
push
mov
rcll
xchg
aam
push
ret
mov
or
je
and
pusha
call
mov
cmp
push
cltd
fbld
jle
das
xor
jmp
icebp
jo
xor
inc
pop
adc
bound
push
test
pop
adc
mov
pop
in
add
mov
mov
ret
pop
cmp
xchg
mov
daa
int
push
xorl
adc
pusha
add
out
lock
ljmp
push
ljmp
adc
cmpsb
mov
inc
or
enter
inc
sub
and
loope
idiv
xchg
shr
jns
xor
xchg
cmpsb
xor
js
es
adc
mov
pop
add
adc
shll
mov
cmpsb
iret
add
or
loop
cmpsl
pop
xchg
or
dec
xor
xchg
and
mov
fs
adc
idivb
and
cwtl
add
arpl
add
dec
rcl
push
inc
sub
nop
out
fisubrl
and
movsb
sahf
or
push
or
lods
loop
jae
lods
je
gs
mov
sarl
dec
adc
xchg
adc
pop
pop
mov
add
addr16
data16
or
out
fidivrs
push
dec
sub
popa
pop
jmp
icebp
into
je
loop
ss
ret
es
fucom
sarb
xor
in
out
popf
push
or
aas
add
jge
or
jae
or
idivl
mov
lea
int
fldl2e
insb
lcall
or
sbb
shll
and
in
pop
out
insl
push
and
adc
gs
into
xchg
adc
sub
pusha
sarb
cli
xor
xchg
jnp
adc
xchg
xchg
mov
pop
jmp
mov
adc
movsl
push
mov
mov
enter
dec
into
sub
test
popf
sub
int
sbb
daa
testl
scas
push
cmc
inc
iret
and
mov
mov
sbb
mov
push
pop
sub
test
add
mov
lea
lods
insb
divl
pop
andl
jmp
mov
sbb
jbe
bound
sub
jmp
mov
adc
hlt
fsts
xorb
dec
push
lea
dec
push
lret
xchg
or
mov
ret
sub
xor
dec
gs
mov
push
cs
hlt
add
adc
fs
adc
lret
sbb
inc
loopne
rclb
pop
data16
enter
call
mov
test
repz
jb
fldcw
adc
or
out
insb
jle
and
scas
into
push
das
loopne
lret
fucompp
pop
push
xchg
iret
add
adc
iret
imul
cltd
leave
mov
pop
popf
jns
movsl
add
dec
daa
ror
sahf
sbb
xchg
cmp
decl
xchg
mov
test
adc
lods
mov
por
rcll
mov
and
sub
in
xor
add
stos
xchg
dec
push
jecxz
mov
xor
pop
dec
lods
mov
pop
sbb
stc
push
imul
testl
pop
mov
cmp
cld
pop
pop
jb
out
or
ds
dec
jecxz
mov
lea
repnz
outsl
cmc
pushf
xor
mov
js
pop
or
sti
mov
jmp
enter
mov
dec
pop
in
test
out
cmpsb
push
dec
cwtl
out
jo
repnz
sar
leave
nop
or
sub
xchg
shl
pop
mov
add
jp
jbe
popf
sub
add
xchg
and
xor
xchg
jb
lods
repz
xor
in
movsb
mov
les
mov
sahf
push
into
aaa
cs
xor
mov
push
bound
sub
push
out
popa
pop
jle
sub
mov
nop
cmp
push
xchg
ja
js
pop
xchg
cwtl
jmp
xorl
fwait
lcall
push
mov
xor
aaa
jnp
loope
jno
repz
lock
jno
cmp
fisttpll
mov
add
cmp
and
in
fisttpl
pop
inc
stos
in
inc
push
xorb
lods
xchg
sub
mov
inc
fadds
mov
fwait
int
fsts
push
mov
popa
push
jns
je
in
andb
cmp
fidivs
adc
add
sub
aas
out
mov
mov
filds
bound
fcoms
imul
pop
jns
cmp
fimull
push
nop
stos
lret
sub
and
pop
icebp
mov
test
and
in
dec
stos
and
push
popf
shr
push
int
sbb
fwait
cmp
xchg
cld
cs
push
aaa
ret
inc
or
iret
hlt
iret
jecxz
jmp
rcll
mov
ljmp
fsub
xor
jg
loopne
sbb
mov
sub
cmpsb
cmpb
daa
push
test
jno
xor
jae
jg
jne
sub
and
push
leave
insb
and
mov
test
mov
shl
pusha
mov
or
adc
lcall
test
sub
hlt
sub
jg
jecxz
mov
pop
shll
mov
movsb
push
pop
jnp
cwtl
dec
sti
repz
or
mov
jnp
add
imul
bound
mov
arpl
bswap
add
outsl
jbe
fcmove
inc
ljmp
jl
mov
adc
ljmp
add
sub
fwait
lcall
inc
adc
scas
cmp
cwtl
add
mov
adc
shl
out
dec
aaa
mov
imul
jp
sub
xorl
xchg
xchg
fiadds
lcall
fdivs
sub
pop
sub
mov
clc
mul
int
cld
aas
xchg
and
icebp
sub
jno
inc
loop
sub
rorl
jb
xchg
sbb
pop
loope
icebp
test
in
imul
int
jno
xor
dec
sbb
out
shll
mov
mov
bound
insb
jge
mov
xchg
mov
or
dec
push
xchg
cmpsl
fs
mov
xor
dec
loop
loopne
sbb
frndint
call
add
jl
pop
xchg
int3
lret
shlb
inc
cmpsb
inc
rclb
pop
pop
adc
lret
push
or
fsubr
and
and
and
xchg
rcrl
stos
jae
pusha
enter
cli
mov
hlt
outsb
ret
fbstp
mov
add
push
push
mov
jle
push
jge
loope
adc
add
jns
mov
sub
push
jbe
xor
cmc
pop
push
pusha
fistpll
and
xor
in
sbb
and
mov
test
ss
inc
xchg
sbb
push
lods
enter
mov
fwait
out
mov
adc
add
or
int3
mov
enter
out
push
outsl
xor
dec
push
mov
mov
sahf
sahf
ljmp
outsb
xchg
stc
sbb
cs
call
test
pop
scas
js
push
fistps
scas
xchg
xor
aam
pop
mov
neg
test
arpl
insl
cltd
aam
cmp
popf
jle
lret
mov
push
mov
es
cwtl
push
mov
enter
cmp
pop
jns
subb
pushf
sbb
inc
sub
lods
jg
cmpsb
or
adc
cmpsb
jnp
shrw
mov
pushf
aas
push
mov
ss
push
fiadds
es
mov
xchg
lods
loopne
cwtl
or
push
test
and
mov
dec
or
out
in
lret
adc
int3
out
flds
mov
loope
adc
jecxz
sbb
outsb
xor
out
cmp
test
stc
pop
adc
popa
movsb
mov
inc
es
sub
sbb
addl
inc
xchg
aas
scas
mov
pop
pusha
mov
push
in
jns
jnp
lock
loope
xchg
lret
adc
mov
dec
mov
test
fstps
dec
xchg
adc
jge
jmp
sahf
shlb
test
lods
ret
jl
or
rorb
and
mov
sub
dec
mov
push
add
lret
test
js
xor
int
into
fmulp
sub
xor
mov
push
xchg
push
pop
mov
std
push
mov
mov
sbb
add
addr16
xchg
jge
and
xor
movsb
lods
insl
inc
shl
jnp
mov
pop
pop
dec
sub
mulb
inc
xchg
pushf
sbb
pop
mov
jno
inc
fisubs
sub
xor
pop
mov
mov
hlt
or
push
rcr
hlt
in
push
or
xchg
pop
jp
mov
inc
lds
rorb
fldcw
cmc
add
int3
scas
popf
and
xchg
setp
jge
aam
pop
push
inc
xchg
mov
bound
addl
or
adc
test
push
cmc
xchg
daa
cld
pop
xchg
or
scas
xor
lcall
gs
pop
mov
int3
jns
adc
jmp
dec
dec
pop
or
mov
jno
in
add
das
rolb
mov
icebp
inc
insl
jp
jmp
cmp
dec
or
jg
sub
not
scas
lock
and
in
and
icebp
adc
jo
adc
cmpsb
ret
and
and
xor
int
call
push
icebp
jb
bnd
sub
sbb
push
mov
jns
aas
add
pop
icebp
repz
lea
mov
insl
fstpl
sub
mov
fidivl
inc
pushf
mov
outsb
cwtl
xchg
in
xchg
pop
test
nop
jge
xchg
xor
daa
loopne
jecxz
stos
inc
loope
mov
fldl
xchg
pop
roll
mov
xchg
xchg
cmp
mov
adc
outsl
xor
movl
test
pop
cmp
or
lcall
cmpsb
ficomps
pop
std
pushf
arpl
ret
out
cld
push
dec
nop
das
jae
cs
insb
push
pop
daa
out
jp
into
add
out
jl
xchg
out
or
inc
aas
jmp
iret
mov
fnstenv
rclb
push
mov
addb
fcmove
std
sub
hlt
lods
push
arpl
or
add
adc
es
imul
sub
and
mov
scas
pop
sbb
or
and
pop
in
sbb
adc
data16
ret
and
or
test
sti
adc
ss
push
mov
sti
mov
std
inc
mov
xchg
decl
xor
adc
scas
adc
addr16
or
inc
insl
cli
push
popa
xor
inc
jno
subb
push
cmp
adc
jnp
in
icebp
aad
xchg
lahf
test
scas
cmp
xchg
push
lods
icebp
and
lods
or
jl
je
mov
outsl
lods
insl
sub
cli
jmp
ret
cmp
xchg
and
test
fiadds
ja
mov
mov
mov
xor
jno
and
dec
lock
mov
xchg
adc
in
lock
and
pop
mov
mov
mov
ss
mov
cmp
mov
sahf
fidivl
or
lods
loopne
ljmp
and
cs
icebp
nop
cmpb
pop
push
orl
push
movntq
push
arpl
cmpsl
pop
mov
xchg
shl
add
mov
sbb
sbb
aad
mov
xchg
jg
sbb
fldenv
and
mov
lds
push
xor
add
or
cld
ja
mov
xchg
outsb
inc
mov
push
mov
adc
stos
add
std
mov
mov
pop
mov
cmc
push
dec
mov
pop
ja
movsb
in
in
xor
xor
daa
mov
pop
mov
clc
imul
subb
xorl
xlat
and
xor
mov
cld
push
jne
push
xor
pop
and
push
pop
push
push
in
inc
xorb
rolb
xor
xchg
flds
add
mov
ffree
push
and
mov
pop
sbb
xchg
movsl
fisttpll
xor
mov
les
jns
sub
fimull
divl
fs
std
inc
call
fwait
dec
push
movsb
dec
push
cltd
lds
imul
mov
test
cmp
in
and
leave
ss
in
jge
sarl
mov
movsl
std
dec
pop
push
cmp
lods
jns
pop
idivb
shlb
fmuls
add
or
push
call
mov
sbb
into
cli
test
inc
aas
xchg
push
xchg
js
rol
jecxz
push
sahf
cld
repz
in
and
push
sbb
sahf
xor
xchg
cmpsb
xor
push
mov
pop
mov
sub
inc
dec
xchg
int3
es
mov
push
mov
sbb
cmp
xchg
jbe
ljmpw
cwtl
mov
orl
adc
cli
movsl
add
ja
repz
and
iret
loop
xchg
out
hlt
das
imul
repz
not
mov
push
xor
imul
jmp
shlb
xor
sub
mov
add
dec
in
or
in
andl
dec
jb
inc
xchg
sbb
cmp
add
jno
mov
sub
je
cmpsb
push
lahf
jbe
dec
cmp
push
fsub
mov
jge
jo
stc
pop
sub
mov
mov
push
daa
js
and
out
sahf
add
movsb
rorb
sbb
pop
add
pop
mov
dec
adc
push
mov
call
fmull
mov
jb
filds
mov
pop
lock
scas
cwtl
sti
add
lret
popf
sub
shll
lds
jb
push
sub
jo
cmp
test
jp
mov
jl
data16
aas
movsl
push
cmpsl
sbb
jnp
mov
dec
shrl
cmp
mov
roll
xor
sti
fnstsw
fnstsw
nop
push
aam
cmp
scas
sti
es
mov
add
sbb
fneni(8087
inc
mov
adc
adc
loope
cmpsb
data16
inc
jmp
aam
mov
xor
lds
je
sbb
push
popf
cmp
jae
sub
insb
fistpll
ja
mov
push
pop
inc
js
loopne
insb
pop
push
outsb
mov
jmp
es
and
or
cmp
push
pop
pusha
test
into
jmp
xor
mov
fiadds
or
push
rcll
inc
inc
lret
sbbb
or
xor
mov
insl
lret
insb
and
or
push
fdivrp
pop
cmp
lea
push
sub
pop
outsl
and
push
std
mov
into
inc
push
dec
inc
out
inc
rolb
lcall
stos
jno
fiaddl
ljmp
das
sbb
mov
mov
mov
ja
ljmp
sub
scas
test
das
andps
cmp
sbb
mov
sub
in
bound
sti
imul
outsb
cmp
mov
push
outsl
xchg
sbbb
cmpsl
lret
mov
lcall
push
sub
xchg
or
mov
jb
xchg
jl
adc
mov
les
shlb
sub
adc
jae
cltd
and
dec
cmp
es
xchg
pusha
mov
sub
sbb
loope
mov
jmp
push
jae
mov
ss
mov
sbb
in
jno
mov
xchg
popa
sub
outsb
xchg
insl
int
loopne
mov
push
pop
hlt
mov
mov
inc
lret
cmc
or
ja
dec
inc
aas
mov
cmp
addb
lds
cmp
stc
sub
faddl
or
mov
je
loope
shlb
cltd
sub
pop
dec
aam
mov
stos
push
fistpl
lods
cwtl
and
add
jbe
adc
push
mov
repz
test
mov
sahf
fnstcw
insb
jae
jecxz
adc
hlt
ret
rorl
xchg
mov
jae
loopne
scas
sub
scas
mov
mov
insb
sarl
add
rcl
mov
aam
xchg
aad
fwait
push
and
mov
xchg
into
loop
pop
and
xchg
pop
in
subl
jno
test
movsb
movsl
lea
inc
cmp
pop
jae
dec
cltd
arpl
leave
pop
jge
shlb
xchg
mov
outsl
xor
sbb
mov
sbb
cmp
pop
aad
out
cltd
in
roll
and
lahf
cmp
nop
arpl
push
mov
lret
mov
pavgw
fwait
shll
inc
ds
dec
jne
push
int3
pop
hlt
pop
fwait
das
mov
shll
mov
push
arpl
mov
mov
lcall
inc
jle
test
enter
pusha
xchg
sbb
inc
push
scas
mov
cmp
jmp
cld
inc
mov
jg
ret
shlb
das
ja
stos
outsb
loopne
push
rclb
jo
mov
dec
mov
dec
in
bound
add
sbbb
rorb
mov
into
les
mov
mov
ss
je
xor
imul
sbb
sbb
das
mov
adc
loope
push
lret
mov
xchg
xchg
sbb
mov
aad
sbb
sahf
aam
jp
in
ja
lods
cmp
push
js
std
push
sub
xchg
je
mov
movsb
lcall
inc
mov
mov
fucom
fistps
jb
fsubp
dec
sbb
xchg
mov
gs
jbe
lods
lahf
ret
cmc
rcll
adc
jns
enter
rclb
outsb
out
hlt
lods
test
loope
pop
sbb
fmuls
sahf
mov
mov
lcall
repz
fs
adc
push
fcomi
fldenv
fiaddl
pop
ret
jecxz
or
adc
lds
ss
xchg
inc
pop
nop
jb
dec
pop
lret
push
repnz
mov
popf
std
roll
into
pop
cs
push
mov
pop
shrb
cmp
clc
xchg
sub
cmp
sub
mov
les
inc
inc
xchg
shl
pop
insb
inc
xchg
mov
into
fs
sbb
pop
mov
sahf
adc
inc
dec
add
sar
cmpl
cld
mov
inc
adc
jecxz
xchg
inc
pop
pop
add
daa
cmp
fimuls
ret
int
add
es
lret
sbb
and
xor
movsb
mov
lds
sbbl
xlat
sti
mov
pushf
shlb
repnz
pop
mov
cmpl
inc
in
xchg
cmp
pop
inc
and
jecxz
xor
aaa
sbb
xchg
in
xor
add
ljmp
shl
rol
popf
cs
cmp
cmp
nop
lods
cmpsl
xchg
mov
insb
daa
push
icebp
imul
and
and
jbe
repz
mov
stos
mov
out
shll
push
or
add
lds
dec
push
mov
xor
add
cmp
mov
pop
inc
sbb
cwtl
push
adc
xchg
jge
push
test
imul
out
adcb
add
outsl
repz
jne
cltd
push
mov
jge
cmpsl
jecxz
leave
pushl
iret
mov
cmpsl
lret
mov
sbb
popa
cs
add
in
lock
in
fmull
icebp
mov
adc
xor
movsb
cmp
pop
pop
adc
aam
rcr
sti
jge
xlat
cmp
mov
aad
xor
jbe
cld
cmp
sbb
push
sbb
inc
mov
sub
mov
mov
mov
insb
cs
jae
jp
out
mov
cld
loopne
xor
ret
fnsave
inc
pop
xchg
or
xchg
sbb
jo
push
add
jns
fwait
stos
sarb
outsb
adcl
lods
jnp
inc
jp
mov
leave
filds
pushl
push
ror
xchg
xor
mov
stos
lds
or
fmuls
push
jo
rclb
mov
push
js
icebp
cmpsl
and
or
gs
popf
divb
jp
push
imul
push
sar
pop
lea
ret
sub
pusha
ficompl
aaa
bound
shrl
in
mov
jo
mov
pop
lds
jmp
sahf
cmc
insb
jl
or
jmp
lock
movsb
add
sbb
mov
addr16
dec
pop
subb
insb
nop
dec
aas
sbb
pop
xchg
rorb
test
imul
test
insl
mov
cmpsb
ss
and
mov
mov
gs
jg
iret
adc
insb
sub
lahf
jl
cmpsb
rolb
std
jae
mov
xchg
pop
dec
jmp
or
int3
sub
fstps
and
cli
imul
and
and
stos
xchg
mov
sahf
jbe
cmp
add
inc
push
inc
test
dec
mov
mov
mov
dec
in
mov
es
aad
xlat
data16
test
mov
imul
jl
mov
xor
pop
lahf
iret
mov
adc
add
sarl
scas
jns
and
int3
and
mov
mov
cmp
push
mov
mov
pushf
and
mov
cli
out
lock
or
mov
push
lock
push
jl
dec
fcom
stos
mov
dec
les
sub
ds
xchg
data16
mov
out
movsb
mov
push
jbe
sub
out
sbbb
xchg
xchg
add
jo
pop
xlat
sbb
inc
fwait
cmp
inc
repz
call
cmpsb
stc
mov
pop
or
aam
pop
add
repnz
test
outsl
mul
xor
mov
lahf
jo
and
sbb
inc
cmp
fdivl
mov
mov
xor
mov
shlb
pop
or
xor
scas
pop
fcoml
xor
cmpb
lods
adc
xchg
mov
loopne
iret
xchg
loope
arpl
loop
pop
push
mov
popl
rcll
and
imul
cmp
addr16
ret
aaa
xchg
adc
mov
dec
nop
adc
xchg
stos
inc
mov
sbb
sub
loop
test
mov
mov
popf
in
sahf
mov
cmp
mov
popf
sub
sbb
adc
add
imull
ret
int3
std
repnz
push
cmp
sti
je
mov
fbstp
test
cmpsl
aam
mov
popa
fsincos
push
sbb
addl
push
sub
nop
sbb
pushl
xor
icebp
push
ja
popa
aad
adc
pushf
jno
movsb
jge
add
inc
jo
sbb
pop
and
insl
ljmp
sbb
andl
adc
mov
pop
jl
dec
add
test
faddp
inc
aas
fcmovnbe
je
sub
jl
std
xlat
imul
mov
xor
ret
cmpsb
cs
fistpl
jle
xchg
testb
or
and
push
xchg
lock
xlat
bound
aam
mov
aaa
cmp
sub
dec
xor
std
clc
mov
in
lret
ds
icebp
sub
inc
cmp
in
test
cmpl
mov
fcom
push
stos
add
cmp
mov
mov
cmp
es
aam
xchg
push
stc
jp
pop
lahf
std
adc
es
lock
sti
inc
jo
push
lds
add
mov
dec
lahf
dec
jle
subl
push
and
jmp
mov
popa
mov
hlt
mov
push
cmp
mov
jb
add
sbb
cmp
push
pusha
sub
fbstp
idivb
ds
dec
xor
or
sub
mov
cltd
pop
inc
jnp
fld
ret
andb
mov
imul
mov
push
sub
mov
or
push
cmp
lahf
xchg
and
into
push
stos
push
lahf
jp
cmp
add
push
lods
or
xchg
mov
fwait
cld
rcrl
cmp
xchg
inc
mov
cmp
popl
sbb
pusha
stc
inc
cmc
pop
int3
xlat
adc
jb
adc
loopne
and
adc
les
sbb
jecxz
sub
push
pop
das
add
out
adc
push
add
inc
hlt
icebp
jmp
xchg
push
xor
and
cmpsl
divl
lea
mov
test
and
and
mov
push
out
into
xor
lret
sub
mov
movsl
repz
mov
jae
push
mov
pop
loope
or
inc
add
xor
sbbb
cmpb
add
outsb
push
xchg
xchg
outsb
aam
fs
lahf
jo
arpl
data16
lcall
fsubs
mov
jbe
pushf
rorb
mov
pop
cld
adc
jo
aas
inc
jmp
aaa
leave
mov
test
lea
push
test
cli
mov
int
sbb
xor
sbb
repnz
fdivs
xor
push
in
inc
cli
cmpb
icebp
cmp
or
xor
repz
push
pop
mov
push
outsb
inc
rdtsc
scas
push
push
sbb
dec
loop
setb
sbb
mov
js
or
adc
xchg
jb
inc
adc
pop
sub
mov
ss
movsb
out
jns
push
adc
push
mov
cmpsl
aam
dec
add
hlt
add
dec
dec
rcrb
scas
int
jecxz
pop
xchg
mov
andl
dec
pop
mov
mov
fsubrs
mov
repnz
jle
push
cld
iret
outsb
stos
jo
bswap
and
or
arpl
and
mov
adc
jnp
pop
stc
and
jmp
or
test
mov
xorl
sbb
mov
fisubs
inc
int
push
lret
push
adc
pop
dec
push
std
xchg
inc
dec
or
int3
mov
std
push
inc
sbb
cli
sbb
mov
pop
and
popa
and
outsl
push
mov
mov
mov
inc
add
jp
adc
mov
sbb
stos
int
cld
xor
jae
mov
fstl
test
push
popf
rcl
push
mov
lret
add
sbb
pop
mov
outsl
mov
subb
je
mov
inc
xchg
xor
sahf
outsb
mov
add
pop
aas
mov
popf
xchg
cltd
pop
push
mov
pop
mov
jp
je
sbb
sub
out
sbb
daa
aas
rcr
int3
fs
arpl
push
xchg
cmp
addr16
jg
mov
sub
nop
movsb
data16
sub
fstl
jns
inc
mov
jp
stos
xchg
and
lcall
rorl
testb
ret
shl
push
fcomi
mul
mov
test
adc
jb
jns
push
cmp
push
xor
ljmp
fsubrs
clc
jne
clc
mov
mov
push
daa
or
loope
jg
stos
sbb
je
lret
jl
dec
xor
lea
or
outsb
in
or
fnstcw
and
dec
xchg
jno
lds
outsb
xor
mov
jne
movsb
mov
pop
push
rcl
dec
ja
jp
and
push
xchg
and
and
inc
adc
add
movsb
jb
mov
sub
or
out
into
aas
aad
pop
call
aaa
cli
adc
lds
fdivr
push
shrl
movb
int3
inc
das
mov
push
adcl
mov
icebp
and
movl
clc
outsl
xchg
rolb
xlat
jle
push
mov
fistpll
mov
fs
std
xor
loope
lret
xchg
movsl
imul
add
sub
push
jne
lds
and
xor
mov
xchg
mov
stos
push
dec
addb
mov
aas
bound
cmp
insb
adc
cmpsb
cmp
frstor
mov
mov
mov
push
cltd
cmp
mov
loopne
ss
out
icebp
popa
mov
test
js
loopne
xor
cmpsl
mov
add
or
out
sbb
xchg
roll
push
jnp
bound
lods
cltd
scas
insl
mov
push
enter
jae
or
and
lods
mov
pop
cmp
ficoms
test
xchg
xchg
jl
cmp
pmulhuw
xor
add
mov
jl
adc
xchg
add
mov
clc
pusha
arpl
cmp
jmp
xchg
xchg
out
inc
push
into
add
xchg
jl
sbb
addr16
int
into
dec
pop
pop
gs
mov
aam
int3
out
xchg
mov
xchg
inc
adc
mov
outsb
iret
js
test
inc
pop
dec
dec
nop
adc
fnsave
sub
pusha
lods
je
add
rolb
cwtl
into
shl
mov
and
daa
push
add
inc
xlat
cmp
sub
mov
ss
add
add
push
fwait
adc
mov
out
out
cmp
sub
dec
imul
lahf
jl
iret
int3
lahf
addr16
mov
xchg
sub
ds
xchg
inc
xor
jo
loop
mov
ja
movsl
pop
add
movsl
sub
orl
call
push
sub
outsb
dec
push
mov
out
mov
divb
divb
lahf
sbb
xlat
mov
addb
insl
stc
mov
bound
xchg
addr16
ds
lret
dec
pusha
int
xlat
je
adc
test
and
orb
pop
or
jbe
cmpb
js
leave
jl
and
add
mov
lret
fcoms
push
lahf
fisttpll
pop
js
test
or
and
xchg
sub
push
shrb
repnz
xchg
movsb
cs
out
add
mov
call
mov
aaa
mov
std
sbb
test
mov
lret
pop
adc
in
outsb
add
dec
dec
roll
mov
cmc
mov
mov
fmul
test
lret
xlat
jg
xchg
jo
gs
sub
sub
lret
aas
stos
or
lcall
punpckhwd
filds
stc
jle
mov
jbe
mov
dec
mov
inc
xor
push
popa
xor
sbb
inc
jecxz
rorl
mulb
mov
pop
push
pop
mov
pop
sub
push
notb
or
jnp
jecxz
and
xchg
inc
add
fincstp
mov
mov
add
int
and
lea
call
popf
xor
mov
stc
dec
test
xor
icebp
lds
ret
jb
stc
lret
mov
int3
fmuls
xchg
xor
push
fnstcw
mov
mov
mov
enter
iret
icebp
lcall
repnz
shll
mov
xor
mov
movsb
sbbl
inc
dec
lods
xor
push
insb
mov
pop
repz
dec
daa
sub
daa
aam
shll
stos
dec
cmp
arpl
fwait
or
xchg
cmpsl
xor
push
dec
out
jg
dec
push
orb
adc
pop
jae
fcomip
cmp
je
aam
mov
pop
loopne
cmp
ljmp
addl
mov
dec
xchg
xor
mov
inc
out
sbb
es
xor
xorb
inc
push
popa
fs
repnz
arpl
int
and
leave
jecxz
jmp
jp
fdivrs
jmp
mov
aad
fcmovu
sbb
fs
jmp
inc
dec
jb
jge
xor
jge
mov
out
add
orl
xacquire
mov
jnp
xchg
inc
xor
add
fwait
nop
xchg
push
fdivrl
sti
adc
bound
loopne
mov
sbb
outsb
aas
ds
dec
inc
push
or
xchg
jg
lds
cmp
nop
out
pop
push
dec
fisubrl
dec
sarb
dec
pop
fcoml
testb
je
jle
popf
sbb
fxch
xchg
mov
xchg
lcall
pushf
cld
icebp
js
push
mov
or
or
cwtl
pop
lret
jg
ja
ljmp
shr
in
sbb
rolb
rclb
add
pop
bound
insb
xlat
jb
es
pop
pop
adc
or
iret
movsb
in
or
clc
sbb
nop
cmp
shll
cmpsb
fists
jp
sarb
dec
loopne
mov
jno
xorb
jo
adc
das
pop
cmp
in
aaa
add
xchg
pop
subl
pop
loopne
pusha
mov
sbb
jp
mov
sub
pushf
dec
jno
enter
xor
jl
inc
push
push
mov
dec
push
fisttps
imul
out
lret
push
pop
leave
repnz
test
inc
pushf
icebp
fwait
sbb
mov
mov
dec
or
call
ret
sahf
xchg
movups
push
and
jo
push
mov
dec
arpl
xchg
into
repz
push
imul
or
pusha
cld
dec
mov
fsubrs
test
jmp
ret
jae
cli
pop
fsubl
imul
fldt
pop
mov
gs
pop
arpl
popa
icebp
cmp
xor
push
push
int
aad
pop
pop
jno
lds
pusha
test
xor
ret
out
dec
or
daa
mov
out
enter
add
outsb
push
dec
out
repnz
pop
fsubrl
rclb
sbb
das
in
and
dec
shlb
dec
jge
scas
sbb
pop
leave
repnz
xchg
out
sbb
xchg
loope
popf
movsb
int
sbbb
jo
xorl
adc
pop
sbb
popa
sub
jl
imull
add
mov
mov
pop
iret
fdivl
jo
pop
testb
pop
sbb
jle
jmp
gs
cltd
sub
std
subl
sbb
sbb
pop
test
std
fidivrl
xchg
in
xor
sub
fwait
popa
movsb
xor
jbe
and
xchg
in
dec
cmp
mov
mov
add
pushf
xchg
mov
loop
adc
mov
insl
movsl
jmp
enter
mov
ds
mov
clc
lea
repnz
cld
cmp
jl
push
sbb
jge
mov
mov
scas
cmp
ret
aaa
test
lds
add
out
sbb
fsubrs
daa
inc
jae
jnp
inc
sbb
addr16
inc
std
cmp
mov
addr16
mov
jo
popf
jb
or
jbe
shl
lea
cltd
fists
fnstsw
jl
xchg
lret
xlat
mov
hlt
cmpsl
jp
push
jmp
ljmp
xlat
clc
push
stos
jl
add
fiaddl
rclb
cs
repnz
xchg
dec
jae
orl
sub
test
movsl
xor
push
add
es
icebp
hlt
inc
popl
lock
imul
adcb
icebp
test
mov
in
add
sub
mov
and
add
add
jbe
jns
inc
pop
call
add
repz
fisttpl
orb
iret
stos
sahf
lods
lods
fbld
jnp
mov
jg
jbe
stos
mov
hlt
mov
stos
and
in
xchg
inc
cmp
xchg
mov
icebp
mov
cmp
lock
and
sub
or
sub
inc
call
mov
data16
jmp
xor
ljmp
sub
iret
push
js
cmp
cmpl
sub
mov
xor
sub
add
pop
push
sbb
aad
aas
mov
lock
lods
xor
xchg
stos
adc
push
lret
ljmp
adc
andl
aas
out
push
mov
push
frstor
sub
xchg
cwtl
push
sub
in
cmp
push
jmp
jb
lock
jb
fidivs
dec
mov
dec
arpl
add
xchg
push
xor
lods
ljmp
aaa
dec
into
mov
push
add
cltd
stc
mov
xchg
mov
lret
lahf
scas
adc
fists
sub
pop
cmp
add
mov
mov
mov
and
hlt
out
and
sub
loop
mov
sub
aaa
mov
out
mov
ret
mov
loope
xor
xchg
es
pop
push
sbb
sbbb
ja
cmpsl
inc
and
in
push
pop
xchg
push
dec
dec
sub
in
stc
jnp
movsb
push
hlt
mov
mov
mov
push
jo
imul
inc
pop
aaa
mov
cld
mov
xchg
les
enter
nop
cmpsl
dec
add
mov
mov
cmp
lea
pop
ret
or
add
jle
inc
inc
les
mov
add
push
cli
add
sti
jp
sbb
xchg
add
sbb
push
int3
arpl
xlat
adc
push
aas
dec
mov
pop
inc
into
xchg
lea
test
cltd
movsl
lods
add
lcall
outsl
sti
mov
mov
bound
scas
pop
sub
fwait
sbb
inc
mov
mov
fs
arpl
pop
repz
ja
sub
add
pop
and
das
out
mov
loope
push
push
dec
xorb
lods
push
mov
stos
lds
aad
mov
push
subl
jbe
orb
inc
inc
mov
cltd
imul
sbb
or
rcr
test
popf
popa
loope
cmp
push
and
test
stos
push
cwtl
cld
ljmp
cmp
lock
dec
sbb
add
push
sbb
cmp
dec
mov
test
sahf
leave
pop
dec
imul
jmp
adc
push
movsb
outsl
inc
mov
and
and
insb
mov
mov
aaa
xor
loop
adc
bound
loope
mov
xor
sar
icebp
jecxz
push
push
arpl
lods
ret
pusha
sahf
in
adc
jbe
dec
hlt
scas
or
sbb
cmpsb
ficomps
popf
aam
add
cwtl
repz
out
loop
fidivs
in
xchg
xor
js
rolb
fmull
jmp
xchg
es
mov
outsl
jnp
inc
mov
push
cmp
mov
mov
pop
mov
jmp
xchg
sbb
jp
jge
mov
insb
in
pop
adc
sub
std
mov
add
dec
cmp
jb
in
dec
clc
jbe
jge
sub
mov
dec
and
insl
in
dec
mov
xchg
cmp
movl
cmc
push
inc
add
or
mov
xor
popf
cld
or
scas
aaa
or
pop
push
mov
jns
xchg
push
clc
dec
add
sbb
pop
inc
push
movsb
sarl
push
pushf
mov
jl,pn
ret
mov
push
rclb
or
cmp
aad
cltd
mov
pop
call
pop
dec
lcall
jnp
xchg
mov
ds
pop
mov
popf
and
sub
inc
cmp
cli
and
mov
js
xor
cmp
lods
lods
jge
icebp
outsl
inc
xchg
inc
fs
into
sarb
pushf
cmc
mov
cmp
pop
pop
lretw
adc
scas
jae
in
lods
or
out
scas
fcomps
imul
cmp
dec
pop
inc
in
inc
adc
push
pop
mov
sub
sbb
or
cmpsl
xor
dec
imul
ret
mov
sub
sbbl
and
into
sub
xchg
in
xlat
int3
aas
imul
sbb
or
xor
add
ds
sub
imul
or
sbb
rcl
out
mov
fisubs
scas
lock
sahf
int
xor
rorl
inc
faddl
cmp
out
shll
cltd
out
stc
add
jp
mov
ds
sahf
push
lcall
int3
lret
sahf
repz
push
cmc
pop
int
push
fists
mov
cmc
mov
and
movsb
mov
inc
and
or
jg
xor
fistpll
push
jge
xor
dec
jb
ss
fneni(8087
dec
mov
adc
jbe
mov
cwtl
fdivs
adc
jne
lret
aaa
aad
push
ljmp
cs
outsb
jnp
outsl
ds
push
repz
adcb
push
adc
mov
icebp
das
dec
scas
dec
cmp
cmp
in
jb
scas
imul
ja
idiv
mov
sbb
mov
jae
add
and
loopne
mov
out
lret
je
das
test
fists
imul
sbb
addr16
jl
cmp
in
mov
mov
gs
add
mov
inc
jnp
addr16
sbbl
fiaddl
ds
push
call
js
sti
and
mov
std
arpl
push
pop
push
push
div
fadd
push
lods
aas
lock
test
adc
decl
and
sub
jne
sbb
lcall
sub
test
jge
adc
xor
lahf
pusha
and
shlb
scas
xor
roll
jle
xchg
dec
stos
in
dec
orl
rorl
gs
push
cwtl
pop
jge
jne
dec
mov
cltd
sbb
loope
imul
pop
pop
adc
hlt
stos
pop
fwait
cs
lcall
jnp
lret
adc
push
cmp
out
push
insl
pop
shl
lcall
xchg
ret
daa
cmp
cmp
shrl
test
mov
and
ret
xlat
repz
xchg
add
nop
push
insl
or
imul
iret
and
out
sub
push
enter
test
sbb
out
mov
jo
mov
mov
xchg
in
out
pop
or
inc
dec
cmp
lock
xchg
xchg
out
pop
xchg
aas
addr16
xchg
fsubrs
iret
mov
addr16
inc
xlat
insb
repnz
addr16
aad
aas
pop
pop
inc
shr
or
xchg
mov
and
repnz
jno
or
mov
jg
cs
pop
js
add
push
pop
mov
shll
fcoml
cmpsb
ds
int
dec
push
sub
inc
xor
mov
xor
lods
scas
jb
inc
cmpb
test
loope
mov
xchg
les
les
in
inc
pop
adc
sbb
int
lea
adc
push
add
push
ficoms
add
mov
and
call
dec
es
in
std
xchg
mov
lock
sub
jae
pop
ret
mov
enter
push
iret
and
jp
sbb
getsec
clc
jle
sub
jl
add
nop
loopne
mov
xchg
sbb
adc
xchg
pop
xchg
pushf
imul
test
push
inc
lcall
lock
gs
cmpsb
mov
idivb
push
hlt
mov
cltd
xchg
mov
in
adc
sahf
int3
addr16
fsts
jmp
mov
ficompl
scas
clc
dec
and
data16
std
xchg
roll
xchg
lea
ljmp
mov
hlt
test
int3
push
add
icebp
inc
aaa
nop
xor
punpckhdq
xchg
cmp
inc
jno
dec
mov
movsl
push
popa
popf
xlat
stc
imul
cltd
cld
test
lahf
mov
push
pop
xor
pop
int3
rolb
cltd
mov
xchg
jg
push
test
mov
pusha
pop
leave
roll
inc
in
jle
popa
or
roll
pusha
sbb
fcomps
scas
mov
out
repnz
sti
scas
loop
mov
imul
push
mov
iret
cmpsl
mov
mov
xchg
mov
insl
shrb
int3
sub
in
sbb
jb
mov
outsb
in
cmc
or
inc
mov
jns
in
sbb
xchg
mov
outsb
add
jnp
and
hlt
push
fsub
mov
jge
mov
sub
xchg
mov
and
in
adc
fs
aaa
add
push
scas
out
cmp
in
jecxz
nop
dec
adc
pop
push
outsl
icebp
je
adc
mov
ljmp
aas
stos
test
sub
mov
xchg
pushf
xor
mov
lret
dec
out
sbb
fs
icebp
pop
leave
and
cmp
cmp
xor
or
test
outsl
or
stos
out
mov
dec
shlb
mov
mov
daa
clc
mov
std
pop
out
pop
ja
mov
fistl
pop
fmuls
cmp
mov
sbb
jne,pt
cmc
mov
out
jl
inc
in
shlb
adc
jno
jp
hlt
push
jmp
lahf
in
pushf
xor
jns
fldl
idivl
dec
sub
imulb
fsubl
insl
dec
push
iret
cmp
jle
test
je
loopne
pop
jle
dec
and
popf
xchg
int3
ret
aaa
mov
fcompl
cwtl
rorb
movsl
out
sub
incl
or
in
lock
sub
jno
and
cmp
loopne
pop
lcall
int
mov
inc
cs
fimuls
mov
sub
outsb
push
push
rcl
add
jno
mov
mov
popa
std
sbb
mov
mov
in
inc
nop
je
or
add
mov
fcoms
aam
in
je
hlt
call
adc
xor
xchg
sbb
cltd
test
lods
ja
insb
jo
sbb
jnp
jp
cwtl
mov
mov
push
inc
xor
rcll
add
dec
pop
push
push
and
out
pushf
inc
outsb
xor
repz
or
cmpsb
cwtl
fsts
xchg
ja
shlb
push
xor
pop
and
push
test
enter
sbb
push
or
leave
and
pop
pop
ds
and
jae
stc
xchg
jbe
add
push
mov
sub
loope
dec
ja
jnp
add
jnp
dec
jne
jne
adc
add
adc
int3
push
cltd
pusha
sbb
add
in
addr16
loop
mov
and
arpl
ret
cmpl
in
je
mov
testb
mov
int
call
sub
ret
or
sub
cmc
cmc
subb
sub
stc
xchg
jle
notl
cmp
adc
pop
cs
std
xor
mov
push
inc
cmpb
lahf
push
frstor
and
ret
pop
mov
test
jb
repnz
fidivs
repnz
and
out
add
negl
out
ss
mov
xchg
test
in
push
loopne
mov
mov
outsb
jns
shll
addl
addl
or
lret
popa
sahf
fidivrl
add
test
and
adc
int
and
stc
fldl
inc
xor
inc
fadds
sahf
sahf
xor
repz
inc
rcrl
xorl
fsubrs
push
or
arpl
cltd
adc
or
jp
ret
add
test
mov
and
insb
jb
ss
adc
stos
sub
pusha
push
jg
decb
dec
mov
out
int3
fcom
pusha
jb
stc
std
fcomip
mov
iret
call
xchg
jp
xchg
movsl
lahf
ja
popf
pop
xchg
out
push
decb
jns
addr16
lods
xor
jp
push
hlt
cli
push
hlt
cli
sub
test
mov
popa
insl
xor
insl
mov
pop
sub
bound
xor
andl
fsubrp
into
es
cmc
xlat
mov
jns
loop
xor
into
push
lret
insl
add
add
jmp
in
jne
jns
xchg
stos
mov
mov
popa
mov
out
push
nop
cmp
mov
push
push
rcrb
cmp
loope
mov
and
jecxz
into
ret
mov
jae
cs
pushf
movsb
jmp
movhps
xor
ljmp
dec
mov
mov
fs
push
daa
mov
adcb
mov
and
fstpl
imul
repnz
in
pop
xor
pop
add
cli
hlt
or
pusha
adc
adc
pop
popa
mov
pushf
jo
xchg
out
jl
out
lods
push
xchg
pop
cmp
sti
notb
dec
xor
add
sub
daa
xchg
repnz
jecxz
push
ja
xchg
addl
dec
sbb
orl
inc
ret
nop
and
mov
push
je
sbb
lcall
scas
sarb
jns
xor
test
inc
mov
in
jg
testl
pop
push
xchg
ss
fs
xchg
scas
std
mov
jb
sbb
jns
and
cs
test
fidivrs
leave
jae
int
aad
dec
cld
ror
ljmp
jp
adc
dec
pushw
and
cwtl
adc
mov
jns
clc
test
pop
sbb
xor
scas
scas
jmp
pop
shlb
or
adc
insl
sub
push
or
cmp
lcall
mov
das
aaa
cmp
push
cmp
jbe
mov
gs
xchg
sub
in
fmulp
jae
cmp
pushf
inc
int
popa
jo
jnp
popf
fimuls
lods
adcb
mov
xchg
push
adcb
xchg
push
jne
arpl
mov
pop
adc
test
hlt
mov
test
push
scas
mov
xor
jne
gs
popf
sbb
test
mov
bound
push
loope
sbb
mov
mov
cmp
jge
add
sub
mov
xor
inc
and
movsb
fsubrp
jge
and
fstl
filds
pop
ficoml
jnp
mov
xlat
sbb
pop
cmpsl
cli
outsl
nop
or
movsb
jmp
dec
cmp
cmp
dec
mov
pop
add
xor
mov
out
jnp
pop
stos
incl
into
lea
jp
out
imul
mov
in
cmp
das
jecxz
sub
cld
mov
call
push
sbb
push
sbb
push
xchg
adc
jno
cltd
jnp
loop
orl
int
lahf
lods
inc
mov
and
sbb
pop
neg
inc
cmp
pop
insl
shll
sub
dec
sub
mov
lea
into
lret
adc
add
mov
jmp
aam
popa
movsb
mov
test
aam
push
aam
ror
sbb
fstpt
mov
test
push
and
push
shll
es
and
pop
pop
mov
es
ret
js
inc
dec
out
testl
push
nop
xchg
out
nop
repnz
stc
lret
or
mov
push
outsb
bound
mov
cmp
adcb
test
push
aaa
cmp
cmp
adc
push
jns
mov
dec
pop
cmp
scas
sbb
fsubs
jge
sub
inc
mov
es
test
cli
mull
sub
jbe
mov
hlt
insl
fs
mov
mov
das
mov
sbb
lcall
cmp
jne
pop
add
int3
inc
and
cmp
mov
and
mov
pop
mov
jmp
xchg
es
daa
out
sub
pop
jo
pop
repz
fwait
out
sub
lret
rcl
sub
mov
fmuls
xor
mov
rcrl
cmp
out
push
pop
dec
cli
repz
xor
adc
push
add
dec
jle
lret
sub
pop
cmc
add
pushf
mov
outsb
add
cli
test
pop
dec
fists
cltd
pop
inc
sub
lea
sbb
pop
push
jns
fnstsw
lret
es
loop
adc
out
addr16
lods
jg
sub
addr16
inc
dec
mov
arpl
jns
mov
out
push
mov
int
jbe
dec
cmc
pop
jecxz
xor
repnz
lea
repz
arpl
imul
insb
imull
jo
pop
xor
xor
add
push
push
pop
push
test
xchg
lods
int
sub
or
cwtl
les
js
pusha
mov
mov
add
inc
test
push
aas
leave
mov
dec
mov
inc
mov
push
cltd
pusha
out
cwtl
pop
pop
add
imul
mov
pop
push
mov
mov
push
jmp
jno
into
mov
pop
jnp
nop
push
push
out
sub
outsl
cmp
sub
sbb
inc
xor
inc
jge
insl
leave
das
xor
call
int
das
or
aaa
or
sub
xor
movsb
or
mov
movsl
mov
jmp
fcompl
inc
cmp
test
xchg
mov
dec
insb
and
cmp
jno
or
mov
jb
in
cltd
cmc
cs
mov
xchg
in
std
mov
jge
sti
mov
jne
test
cmp
shl
mov
cmpsb
jno
sar
cltd
jnp
icebp
xchg
cmpsb
nop
mov
cltd
jae
ficoms
push
out
add
fldenv
imul
mov
shrl
push
call
sub
addr16
xchg
inc
sbb
imul
pop
les
xchg
sbb
dec
add
jl
rclb
push
sbb
out
push
test
cmp
dec
jnp
xchg
jecxz
xchg
cmpsl
mov
aam
rcrb
push
xchg
mov
iret
add
fs
cmp
or
mov
shrb
sti
sub
fstpl
pushf
pop
lret
loope
movl
lret
int
jae
loope
dec
movsb
sbb
mov
cld
repnz
pop
out
in
pop
mov
pop
lea
fisubrl
insl
and
cmp
jecxz
push
je
test
cld
shll
mov
jns
outsl
test
fimuls
or
pop
in
cmc
fcomps
mov
ja
aas
roll
repnz
mov
or
xor
jl
repz
in
xchg
cld
jp
enter
fstpl
outsl
or
adc
loop,pn
sub
std
inc
outsb
sub
ljmp
cmp
pop
sbb
pop
jl
call
das
xorl
mov
pop
jns
mov
aad
jle
lods
out
or
sub
and
mov
ds
sub
insl
mov
cld
mov
imul
sbb
push
out
testb
mov
pop
rclb
pop
sub
les
cwtl
ds
data16
mov
inc
add
pop
push
bound
stos
or
stos
or
imul
pop
adc
das
jle
cmc
popa
sbb
sbb
mov
jns
xchg
out
mov
shl
rclb
xchg
pop
push
pop
hlt
dec
mov
mov
mov
stos
pop
mov
pop
fsubl
loopne
jmp
cmp
jg
cmpsl
dec
setnp
inc
mov
jp
push
out
int
mov
fimuls
mov
xchg
fisttps
fsubrp
lods
int3
mov
adc
adc
cltd
mov
sbb
and
mov
lock
incl
and
addl
mov
movsb
out
test
lds
enter
pop
push
lods
xchg
lods
mov
cmp
jbe
iret
xor
mov
push
dec
add
sub
dec
push
insl
sahf
ds
cltd
dec
mov
ljmp
xor
mov
xchg
out
inc
clc
jae
repnz
and
sti
mov
jbe
fildll
aad
mov
and
movsl
fucomip
xor
dec
jo
into
insb
and
dec
jns
xchg
xchg
mov
ficoms
test
mov
pop
cli
mov
push
int3
and
fimull
imul
mov
sbb
loop
fsts
popa
js
nop
mov
js
stc
hlt
lock
testb
and
mov
push
adc
les
jne
mov
into
add
pop
subl
or
mov
rclb
mov
cs
mov
cmp
xlat
mov
das
loope
push
out
mov
add
xor
mov
mov
cmpsb
mov
mov
jnp
adc
cmpsb
out
ds
mov
sbb
roll
fistl
out
ja
jnp
or
jmp
jb
push
loope
jp
stos
movsl
lea
imul
push
clc
subb
fildl
xor
js
pop
cltd
int
cmp
dec
pop
into
pop
clc
sbb
rolb
adcl
push
fwait
push
dec
jo
adc
xchg
icebp
loopne
push
dec
cli
xor
lds
adc
dec
sbb
cmp
aas
stos
cs
cmp
mov
xchg
mov
add
sub
cld
inc
pusha
push
xchg
dec
shl
mov
jbe
push
icebp
xor
aad
ffreep
inc
lahf
and
jb
insb
mov
sub
and
jo
pop
add
nop
stos
test
icebp
clc
popa
xor
cmpsb
adc
daa
imul
jne
popf
sub
jno
cmp
lds
jg
movsl
hlt
push
fstps
jo
pop
cmp
xor
sub
movlps
dec
sub
dec
pushw
xchg
clc
cmpsl
loop
cmpsl
mov
mov
call
ret
inc
cltd
mov
mov
cs
mov
dec
in
adc
mov
inc
mov
adc
mov
enter
mov
mov
icebp
mov
mov
xlat
lret
nop
mov
lds
jecxz
sub
or
push
jp
jb
push
imul
mov
inc
sbb
xchg
addb
cmc
inc
leave
xchg
loop
xor
dec
jp
inc
dec
jnp
adc
cmp
add
mov
dec
or
push
ficomps
mov
dec
lds
and
and
aas
inc
jg
pop
inc
popa
pop
movsb
mov
sti
lds
jl
push
shlb
loop
loopne
lcall
add
lds
dec
std
imul
cmpsb
add
shrb
ja
bound
jns
sbb
push
xchg
shlb
lea
aam
adc
sub
sahf
mov
pop
mov
sub
call
xchg
inc
mov
mov
out
std
in
add
inc
xor
jbe
inc
mov
xlat
pop
xchg
dec
outsl
fisttpl
xor
xor
jl
repnz
rolb
mov
jge
sub
movl
cmp
clc
push
fsubrs
ds
ss
aaa
cmp
arpl
sbbb
test
scas
ss
repz
out
push
popa
add
jge
add
ss
and
mov
iret
sub
stos
jl
and
popf
jle
mov
push
add
outsb
push
lcall
mov
ret
jmp
push
xchg
push
insb
inc
pop
mov
mov
stos
mov
xor
cli
cmpsl
pop
dec
jne
rorl
sbb
adc
iret
repnz
sub
xor
dec
fsubrs
movsl
add
push
mov
into
rcrb
pop
cmpsb
incl
leave
pop
hlt
sti
push
in
xor
adcb
pop
in
outsl
mov
and
ret
jno
sub
repnz
lcall
js
adc
add
inc
mov
add
loope
test
pushf
mov
jbe
fcompl
out
cmpsb
stos
mov
cmpsb
gs
imul
pop
repz
push
add
clc
xchg
gs
jmp
mov
out
dec
iret
fbstp
pop
aas
xchg
out
cmp
xchg
int
lea
daa
sub
test
loopne
push
mov
push
lret
jmp
xor
push
jnp
ret
lcall
cltd
pop
in
push
adc
repz
pop
popa
js
ficoms
cmp
sub
cmp
mov
stc
fisubrl
pop
in
ret
scas
sbb
aam
js
imul
add
xor
into
dec
push
or
scas
mov
arpl
lahf
ret
pop
and
jmp
fmull
add
push
in
ja
xchg
pop
je
popa
je
fs
jecxz
fisttpll
adcl
xchg
sbbl
sub
push
orl
cmpsb
xor
add
add
out
xchg
scas
dec
add
push
adc
xor
xchg
jp
mov
push
mov
pop
dec
faddl
inc
pusha
jae
sbbb
xchg
sbb
rorb
push
test
sub
pop
jae
and
xchg
xchg
jo
ljmp
lret
in
sbb
mov
pop
les
jl
in
lods
shll
or
pop
lcall
sub
orb
out
arpl
in
fcomps
push
xor
sub
cwtl
icebp
dec
mov
cmp
xchg
fnstenv
fisubs
subl
add
in
sbb
out
mov
cmpsl
add
popf
jle
xchg
divb
pusha
or
xchg
jbe
and
inc
lahf
jbe
mov
pop
push
sbb
adc
add
dec
or
mov
out
arpl
or
dec
dec
cmp
xchg
fs
jae
incl
adc
push
cmp
jmp
leave
adc
loope
jl
ja
mov
push
sub
xchg
test
cmc
inc
xchg
inc
mov
mov
lcall
dec
or
mov
push
ret
test
jge
or
cmpsl
subl
in
push
pusha
add
sbb
mov
xor
jp
stos
lcall
pushl
xchg
xlat
dec
je
cmp
and
pop
xchg
jb
adc
stos
xchg
rcll
cmp
imul
inc
subl
std
mov
mov
std
add
int3
loop
inc
xor
mov
stos
sar
jmp
sub
inc
into
popa
mov
loop
mov
inc
xchg
mov
jbe
insl
or
sbb
popa
data16
and
pop
jne
mov
into
lret
rorb
icebp
cmp
js
inc
aaa
push
sub
out
sbb
mov
mov
in
int3
das
dec
mov
mov
call
sbb
sub
lea
loopne
movsb
loop
xor
inc
pusha
fs
jle
sub
push
and
lods
xor
out
test
mov
aas
gs
ja
in
sahf
call
imul
imul
leave
int3
adc
orb
pushf
test
or
sub
cmp
hlt
and
call
ja
push
sbb
cmp
mov
fwait
std
dec
dec
lahf
and
pop
insl
stc
aas
mov
in
mov
lds
sbb
cli
loop
cld
lcall
add
adc
mov
rolb
dec
jmp
mov
hlt
or
pop
dec
shrl
adcl
mov
aad
in
mov
mov
ljmp
inc
dec
sbb
jg
cmp
pop
xchg
stc
outsb
xchg
out
mov
sub
fcoml
cmpsb
aas
mov
mov
hlt
add
sub
mov
bound
lcall
mov
pop
xchg
and
loopne
adc
nop
mov
test
test
gs
lret
sub
push
imul
xor
fnsave
loop
or
loope
loop
push
add
les
xor
data16
jge
scas
fstpt
cmpsl
mov
add
lret
lods
sbb
mov
aaa
xchg
std
out
xchg
push
pop
loop
fisubl
mov
mov
xor
xchg
xor
int
push
add
push
cmp
adc
sub
in
cmp
aaa
scas
adc
fs
add
push
test
sbb
lock
mov
pop
sbb
adc
sub
cmpsb
pushf
jnp
shlb
push
loope
mov
cmp
data16
popa
mov
dec
xchg
mov
cltd
repnz
test
or
pop
daa
sarb
dec
jl
mov
dec
add
mov
cmp
rolb
add
push
loope
in
xchg
mov
rorb
inc
aad
inc
leave
gs
hlt
xor
bound
xor
inc
add
inc
out
push
sub
je
jno
xchg
dec
cmpsb
jl
loop
inc
mov
cld
xor
inc
arpl
jne
fimuls
mov
sbb
ret
out
push
and
cltd
das
push
aad
aad
sub
cmpsb
and
sbb
push
mov
fldenv
ds
jne
nop
enter
outsl
aad
pop
xor
out
xor
inc
jmp
or
mov
sub
aaa
mov
sub
or
jmp
insb
add
inc
sbb
jl
fists
dec
dec
ret
xlat
dec
jge
sar
mov
out
pop
adc
shl
cmpsl
in
pop
cltd
xchg
ljmp
dec
jmp
pop
out
sub
lcall
inc
repnz
pop
inc
pop
push
cmp
jge
add
test
addr16
mov
ret
hlt
sub
xchg
test
or
xor
int
mov
adc
es
enter
xchg
loope
mov
cwtl
jg
insl
ds
xchg
mov
repnz
pop
stos
incb
add
stc
jg,pn
getsec
push
ds
dec
mov
or
fistps
pop
cmp
in
aas
leave
out
adc
and
add
mov
mov
mov
imul
add
into
test
and
outsb
outsl
frstor
pause
stos
call
cli
sti
fwait
mov
cmc
cmp
lcall
ror
hlt
dec
orl
les
int
cld
sub
xchg
pop
test
cmp
push
push
push
adc
jnp
hlt
cmp
cltd
clc
in
push
dec
xchg
push
bound
adc
jne
sahf
orl
pushf
cmp
sbb
push
in
cmp
jecxz
fucomp
fs
out
inc
pop
clc
fildl
lods
pop
hlt
adc
cmc
or
sub
mov
roll
cmpsb
sub
pop
adc
mov
xchg
or
cmp
add
hlt
pop
jl
push
adc
inc
dec
xchg
sub
fsubr
inc
repnz
les
jno
add
push
pop
pop
pop
popa
jne
mov
fmull
push
push
mov
pop
subb
jne
js
les
stos
incb
pop
out
adc
adc
lods
sbb
cmp
rolb
jmp
xchg
jecxz
or
push
aas
push
jnp
adc
cmc
je
inc
mov
shl
mov
pusha
dec
jns
adcb
lret
shl
sahf
xor
push
mov
add
cld
inc
push
xor
popf
jo,pt
js
mov
push
adc
lock
fcoml
xor
test
pop
addr16
jnp
xor
loop
and
cs
xchg
addr16
push
sub
jnp
cmpsb
inc
lods
cmp
mov
cmovno
mov
adc
subps
mul
push
mov
cmpsb
test
lods
sahf
popf
es
hlt
movw
mov
mov
push
pop
mov
pop
xlat
clc
icebp
mov
sbb
ljmp
pushf
inc
outsl
xchg
das
into
ret
mov
into
push
out
inc
add
out
mov
push
push
or
and
mov
iret
sahf
stos
mov
push
mov
cmpsl
lods
sbb
dec
cli
push
fpatan
ja
out
test
cld
insb
mov
insb
add
sbb
fs
aam
inc
stc
dec
stos
roll
adc
sbb
pop
clc
outsl
out
pushf
sub
add
mov
push
xlat
xchg
test
out
add
inc
imul
cmp
inc
scas
jno
sub
std
stos
and
cmp
or
jecxz
add
rcrl
xor
jle
xchg
or
and
into
shll
cltd
insl
or
test
xchg
enter
xlat
xlat
ss
sub
mov
test
ret
pushf
jb
arpl
push
sub
lea
pop
inc
ja
xchg
icebp
mov
out
les
and
and
clc
mov
hlt
or
outsl
sub
gs
push
jmp
mov
jg
sar
out
inc
dec
jo
xchg
mov
mov
loope
pop
jmp
cmp
loop
imul
jbe
inc
sbb
and
pop
ja
shlb
lahf
out
jle
xchg
test
outsb
jecxz
pop
xchg
clc
inc
xlat
out
in
pop
mov
mov
mov
xchg
pop
xor
dec
popa
fmuls
and
mov
mov
fsubrl
into
cmp
es
ficoms
mov
jb
idivl
inc
xor
in
push
push
push
fdivs
dec
jnp
fimuls
lods
mov
dec
push
in
lds
add
lods
mov
push
add
dec
inc
mov
mov
push
or
push
mov
xor
rcr
or
cs
or
add
sbb
dec
mov
nop
sbb
pop
mov
sub
pop
fld
jle
inc
orb
arpl
xor
out
outsl
adc
pusha
cmp
in
jo
hlt
outsl
mov
pushf
mov
scas
dec
adc
ss
lds
call
xor
jns
cmp
scas
out
adc
add
test
dec
jne
dec
pop
mov
jnp
scas
jae
mov
lea
addr16
fstps
lcall
roll
stos
mov
sbb
push
cmp
mov
lcall
into
pop
push
push
push
fwait
insb
cmp
in
lock
mov
dec
sbb
clc
dec
in
lods
fidivrl
inc
sub
pop
mov
sbb
jle
in
insb
rcrb
jnp
inc
and
lret
and
cld
mov
subl
push
into
cmp
mov
ftst
add
data16
inc
and
fwait
jnp
sub
ss
xor
cwtl
ds
cmpsb
fldcw
inc
sbb
fisubs
sarb
cltd
mov
pushf
cli
or
add
cmp
test
jp
fidivrl
or
sub
or
scas
dec
dec
scas
dec
movsl
inc
push
mov
pop
pop
outsl
push
repnz
jp
pushf
cli
flds
movsb
mov
push
push
pop
sub
and
insl
cmp
mov
fbstp
cmp
mov
pop
fisttpll
test
addr16
loope
ljmp
xchg
scas
push
push
mov
ljmp
mov
xor
in
ficoms
mov
aas
mov
mov
cmp
add
in
sub
xchg
into
leave
lods
je
mov
mov
jbe
aad
test
iret
dec
cli
mov
xor
mov
add
inc
pushf
testl
insl
sub
jmp
sahf
xor
dec
repnz
cmp
xchg
pop
stos
cmp
jae
mov
mov
leave
ficoml
stos
add
jb
sub
insl
jl
movsl
jl
push
jg
sarb
subb
ffree
dec
fwait
mov
mov
mov
das
fwait
lods
cwtl
and
lret
rcrl
movsb
and
xchg
fsubl
jae
cmp
and
pop
xlat
int
rcl
inc
gs
sti
jle
cmc
push
sub
mov
hlt
and
dec
mov
lcall
cmovl
int3
rorb
and
xchg
lahf
bound
popa
push
add
lahf
add
pop
xchg
push
repz
and
cmp
dec
mov
mov
pop
sbbl
mov
or
jle
mov
sub
mov
mov
hlt
addr16
js
mov
push
xchg
dec
xchg
cwtl
loop
push
xor
scas
andb
add
mov
scas
mov
imul
xchg
or
push
lahf
or
pextrw
jle
repnz
xor
insl
push
jmp
adc
ljmp
sub
bswap
add
sub
jbe
and
jl
test
pop
push
int3
inc
dec
pop
jmp
loopne
jmp
xchg
push
aad
popa
sbb
push
dec
insl
inc
pop
std
lret
sahf
or
sub
sub
call
clc
inc
xor
ret
sub
stos
shrb
bound
jnp
ds
inc
xor
cmp
add
cmp
loop
push
dec
push
out
cmpl
sub
ficomps
clc
pop
ljmp
cmp
andb
sub
inc
fbstp
test
mov
or
lcall
out
nop
or
push
push
xor
mov
int
repnz
xchg
stos
fldenv
shl
sub
aaa
pop
sub
cmp
stos
mov
dec
jno
das
mov
inc
push
test
hlt
inc
dec
sbb
jnp
aad
adc
cmpsl
mov
push
pop
outsb
sahf
jg
lret
mov
out
mov
daa
scas
sbb
push
jl
pop
pop
or
popf
xchg
icebp
mov
adc
xor
out
sub
push
ret
mov
nop
mov
int
xor
stos
bound
cmpl
insb
cmpsl
cmp
xor
pop
and
mov
add
fsubrs
loop
mov
popf
inc
rcr
and
and
pushf
in
xchg
mov
and
lcall
sub
test
fcompl
xchg
mov
adc
sbb
std
mov
inc
push
push
scas
xchg
icebp
jle
dec
pop
adc
imul
xor
std
cmpsb
lcall
in
push
jo
or
movsl
ds
inc
xor
xchg
or
and
inc
dec
test
mov
pop
mov
pop
gs
ret
out
js
jbe
adc
push
push
arpl
mov
cmp
adc
sbb
fsubrl
sub
cmc
out
push
xchg
sbbb
mov
and
push
cmpsl
and
push
and
orb
cmp
fdivl
arpl
sarb
dec
icebp
inc
pusha
jg
push
dec
movsb
jmp
ds
sbb
mov
mov
insl
aaa
divl
xor
outsb
mov
mov
sarl
stos
insl
adc
or
repz
xor
jno
stos
outsl
data16
pop
sbb
xchg
ret
cmp
xor
jecxz
cmpl
or
fdivrp
dec
cmp
and
xor
mov
into
adc
lcall
in
or
xchg
push
popa
call
and
int
xchg
sbb
in
mov
lret
push
xchg
or
and
test
cld
cmp
ja
rcr
fadds
jp
test
dec
nop
cmpsl
sub
sbb
mov
dec
cmp
enter
push
sarb
rol
imul
es
hlt
fdivrl
xchg
pop
push
dec
mov
mov
and
push
insl
mull
mov
fisttpll
xor
pushf
mov
cs
sbb
rcr
pop
add
insb
sub
push
mov
jecxz
pushf
add
mov
mov
data16
cmp
and
ret
push
shrl
inc
inc
pushf
jns
lea
push
adc
jecxz
in
leave
jge
insb
iret
push
mov
xchg
fs
mov
xor
jle,pn
cmpsl
adc
lock
clc
sub
std
shrl
xlat
pushf
xor
xchg
sub
jne
inc
or
mov
xor
or
xchg
add
sbb
ja
jno
outsl
cli
sbb
movsb
fs
pushf
negb
aam
mov
repz
cld
xor
mov
shll
xor
into
stc
lock
out
ds
sub
push
in
cmp
jle
out
outsl
xchg
out
clc
sub
sbb
add
mov
lea
dec
mov
push
test
add
cs
sti
and
ficoml
inc
xor
or
mov
into
outsl
fldln2
jp
sahf
lret
mov
orl
jae
outsl
outsb
jg
stos
xchg
aaa
cmp
rcr
lds
lods
cld
dec
or
movsl
lods
movlps
mov
push
jne
and
lock
mov
mov
xlat
lds
insl
inc
scas
js
inc
inc
push
dec
gs
jnp
lret
xor
scas
jmp
icebp
jmp
gs
pop
call
mov
pop
mov
test
or
sar
lock
or
ret
in
dec
push
repz
cmp
sbbb
cld
popaw
aas
and
fistpll
js
mov
mov
adc
int
fldcw
into
out
mov
and
xchg
iret
mov
sbb
sbb
inc
test
in
pop
adc
inc
push
adcl
movsb
das
hlt
push
mov
insb
leave
scas
enter
dec
pusha
pop
test
mov
inc
xchg
or
outsb
mov
cmp
mov
push
add
in
mov
add
push
mov
sbb
jo
mov
icebp
jnp
movsb
jae
inc
in
add
sarl
cmp
jl
mov
movsl
push
xlat
add
mov
in
andl
or
mov
add
jecxz
dec
xlat
sbb
aas
js
arpl
mov
dec
xchg
aas
lods
and
xchg
out
pop
test
outsl
and
mov
ds
lahf
jne
add
lea
aad
bound
mov
es
push
jecxz
dec
icebp
mov
in
mov
fs
pop
insl
hlt
inc
jb
dec
lahf
or
dec
push
orb
outsl
mov
bound
ljmp
lret
jns
push
stos
jmp
add
cmpsb
cli
iret
iret
aas
repz
ja
imul
dec
movsl
pop
scas
repz
mov
jbe
das
xchg
jmp
mov
sti
bound
xor
ss
fisttps
pop
push
aas
roll
loope
jge
loopne
loopne
and
ss
and
push
push
push
or
jecxz
add
fdivrl
cltd
xor
loope
pop
fwait
inc
add
xlat
mov
dec
mov
sub
inc
pop
sub
vpmuludq
lods
xchg
cmpsb
add
mov
pushf
std
mov
dec
adc
jo
or
scas
cmp
ror
jmp
aaa
sub
stos
sbb
and
sbb
jmp
imull
aas
mov
sbb
lods
dec
jmp
pop
hlt
or
xlat
jg
mov
vpsllq
cld
sbb
push
or
or
dec
push
lea
in
cwtl
sti
cs
test
in
push
jg
sahf
data16
mov
adc
xchg
std
and
test
ss
icebp
cmp
pop
scas
idivl
jmp
bound
gs
dec
adc
fcmovu
inc
pop
out
popa
nop
or
pop
dec
and
out
cmp
and
adc
cmpsl
jl
dec
das
fstl
or
xor
mov
xor
inc
xchg
enter
add
negl
ja
and
lcall
ja
js
cmp
adc
mov
inc
std
jmp
out
dec
fcmovnbe
scas
nop
mov
mov
clc
stos
xor
aad
jb
or
js
data16
lods
sbbb
sub
add
adc
pop
adc
shlb
xchg
sbb
enter
insl
repnz
add
repnz
dec
mov
cmp
inc
lcall
gs
and
std
pop
ljmp
les
dec
mov
jmp
inc
in
enter
in
stc
pushf
int
imul
insl
mov
and
loop
xchg
xor
sbb
add
daa
dec
xchg
pop
fsubs
imul
mov
mov
mov
cld
inc
stc
inc
out
clc
loop
mov
js
jno
jnp
repnz
jns
scas
cld
scas
les
ret
mov
popf
add
xchg
ret
cli
shl
mov
lock
adcb
xor
data16
sbb
inc
xor
fildl
push
aad
out
push
aas
sub
cli
addr16
dec
and
in
jnp
and
jb
mov
js
fcmovu
int
popa
cmpsb
imul
or
jno
adc
adc
andl
push
mov
mov
std
xor
loope
xchg
mov
fsubs
lret
push
jg
test
das
jge
lods
test
pop
cmp
mov
imul
mov
xchg
xchg
test
dec
jbe
cld
out
aas
jae
and
inc
lock
stos
jbe
lock
cli
adc
jnp
les
push
test
mov
pop
jle
cmp
mov
repnz
dec
gs
jle
mov
push
sbb
adc
int
or
shll
sbb
mov
mov
iret
xor
cltd
jnp
pop
mov
popf
mov
seto
fidivrs
push
hlt
bound
mov
int3
fisttpll
push
notb
leave
lock
add
enter
shll
pop
and
inc
aad
clc
sub
push
notb
mov
or
lcall
inc
push
push
push
fimuls
test
xor
sub
xchg
pop
lods
punpckhbw
out
hlt
adcl
lea
or
lock
cmp
pop
fildll
cmpsl
movsl
add
adc
loop
push
mov
fpatan
adc
ret
jle
mov
and
sub
mov
js
inc
out
shr
call
ret
repnz
dec
adc
popa
test
scas
xor
mov
sbb
test
and
mov
das
xlat
mov
jle
dec
enter
iret
fucomi
cmp
jle
sbb
inc
xchg
mov
popa
incl
or
in
sub
stos
add
mov
cmp
xchg
lock
cmc
mov
push
mov
addr16
ja
jl
insl
cld
mov
sub
movsl
jecxz
xor
adc
xchg
movsb
in
aaa
mov
icebp
jp
adc
mov
mov
stc
insw
mov
jbe
mov
add
out
js
or
ljmp
nop
jne
nop
arpl
xchg
add
sbbb
stos
testl
cli
rorl
mov
std
mov
and
jmp
jo
pop
nop
add
imul
negb
and
sub
jnp
icebp
fidivs
loopne
and
cltd
repz
addb
fstps
jne
clc
add
sbb
mov
ret
xchg
enter
js
mov
xchg
fdivl
jle
sbb
mov
je
addl
lret
dec
stos
inc
mov
icebp
cli
or
fnstsw
or
nop
in
xchg
fistps
mov
sahf
repnz
mov
push
orb
sti
addb
imul
mov
xchg
ret
sbb
sbb
dec
lea
sub
mov
sti
inc
test
loope
clc
lret
jl
js
cmp
pop
fadd
adc
lds
jecxz
xchg
testb
sub
rol
js
inc
sub
fnsave
outsb
cmp
cmp
dec
test
mov
mov
jno
imul
jmp
je
imul
adc
xchg
movsl
movsl
inc
hlt
mov
out
xchg
mov
lea
mov
mov
sbb
mov
in
jl
arpl
ljmp
adc
xor
mov
fbld
and
xchg
out
addr16
call
outsb
push
ja
arpl
neg
adc
pushf
clc
push
sbb
enter
fsubrs
popa
xchg
test
adc
sbb
and
push
jns
sbb
hlt
cmp
in
or
push
mov
push
ret
divl
int
mov
mov
jne
mov
fcomps
cmp
fadd
jmp
dec
mov
mulb
and
inc
cmc
mov
and
adc
test
inc
lods
or
push
movl
jg
sub
in
and
cmp
pop
adc
sti
cwtl
data16
sbb
in
or
into
dec
jmp
scas
cmp
pop
outsl
jp
repnz
inc
add
and
xchg
dec
das
iret
lret
cmp
idivl
shl
xchg
mov
mov
pop
xchg
adc
filds
sbb
pop
xchg
and
ret
mov
cmp
jge
sbb
mov
push
push
dec
loop
inc
pop
dec
sub
pop
cs
inc
cmp
addr16
add
stos
xchg
or
fidivl
lret
push
mov
mov
dec
mov
mov
push
mov
js
xchg
mov
subl
roll
movsl
arpl
sti
loop
cli
push
cmpsb
fidivrl
pop
mov
mov
dec
dec
xchg
xchg
xor
ret
cmpsl
test
and
imul
cli
lock
jbe
in
outsb
loope
popf
mov
out
lods
stos
aad
xor
jmp
or
test
push
jno
int3
inc
daa
mov
inc
jl
adc
pop
aad
cmp
shrb
push
xchg
nop
mov
das
popa
scas
cmp
add
lahf
lods
or
stos
notl
gs
js
and
dec
xor
shll
cli
inc
push
lcall
loope
dec
add
movsb
lods
sub
xor
sbbl
stos
xchg
cli
cld
cmp
test
outsl
pop
mov
mov
mov
push
sub
or
push
outsb
call
dec
cmp
mov
fsubr
lret
mov
fstpt
stc
in
mov
add
pop
adc
adc
cmp
cltd
sub
fisubs
nop
out
mov
lgs
cli
testl
aam
cmp
repnz
or
mov
mov
mov
xchg
aaa
mov
inc
cmpsb
adc
setno
sub
mov
xor
adc
outsb
xor
sahf
ret
fsubrl
jl
push
cltd
fisubrs
or
xchg
leave
jns
pushw
sahf
mov
dec
pop
loop,pt
test
xor
add
call
sar
xor
xor
mov
movsb
iret
ja
lea
xchg
add
mov
pop
gs
xor
ret
mov
ficoms
nop
lock
ss
or
fistpl
jbe
push
call
clc
push
sbb
mov
and
mov
jecxz
or
hlt
lea
mov
mov
fstpt
repz
push
ljmp
adc
cmp
mov
and
les
pop
sub
sbb
cld
push
inc
mov
jb
or
add
xchg
xchg
adc
cmpsb
inc
fldenv
dec
pop
jne
jl
stos
pop
add
adc
mov
mov
in
movsb
pop
fidivs
lcall
in
rolb
push
out
in
cmpsb
mov
xchg
sahf
dec
push
jno
mov
pop
pop
rorb
or
cmp
xchg
mov
dec
imul
or
xor
or
addr16
out
clc
push
es
shr
and
mov
test
push
mov
ret
dec
popa
sbb
or
pop
hlt
popf
jecxz
push
rolb
bound
pop
dec
sbb
outsl
in
cmp
call
ljmp
je
mov
arpl
or
int
mov
push
pop
mov
in
pop
bound
sub
rolb
adc
inc
js
jae
and
mov
andl
pop
std
call
inc
ror
mov
mov
out
pop
adc
adc
jno
inc
mov
aas
shrl
sbb
xchg
pop
push
sbb
jo
aas
dec
xor
je
push
mov
sub
xchg
push
clc
cmp
adc
xchg
mov
adc
lret
ja
push
add
imul
cmp
out
iret
mov
test
gs
add
iret
aad
jbe
loope
stos
xchg
or
arpl
lcall
sbb
mov
dec
fimull
push
imulb
and
xor
lods
and
jge
push
sbb
lods
sbb
push
les
cltd
push
fs
xor
sbb
sub
aam
xchg
jecxz
test
and
insb
rcl
out
pusha
push
mov
pop
aas
push
xchg
mov
sub
js
aaa
pop
outsl
add
icebp
jmp
rolb
out
mov
or
ja
jo
and
mov
es
or
jl
cmp
dec
push
jle
les
cmpsb
jo
les
and
insl
lea
shlb
adc
inc
nop
daa
ret
clc
xlat
or
sub
dec
add
or
sbb
push
pusha
imul
jo
shl
popa
sarl
xchg
loope
ds
push
das
das
cmp
lahf
cmpsb
jne
mov
cmpb
ret
popa
mov
in
xchg
in
xor
addr16
test
inc
sub
popa
xor
and
jne
test
pop
jb
adc
push
mov
push
inc
sbb
call
dec
das
outsb
leave
cmp
add
and
mov
imul
insl
and
jae
dec
arpl
lcall
push
nop
dec
test
test
adc
sub
icebp
dec
nop
mov
jbe
push
fwait
imul
pop
sub
sbb
es
jg
sahf
add
adcl
mov
sub
iret
insl
mov
fwait
jp
mov
aaa
pop
outsl
int
adc
stc
mov
mov
dec
stos
lret
push
push
jle
sbb
sbb
inc
dec
mov
mull
repz
pop
insb
jns
mov
push
jae
xchg
push
pop
add
xor
test
dec
cmp
fistpl
dec
decl
adc
xor
jp
mov
or
mov
pop
stc
ds
mov
xchg
pop
not
mov
into
fiaddl
cmp
test
mov
jge
mov
mov
movsb
rclb
out
adc
popa
repnz
enter
cmc
cmp
mov
inc
jae
pop
xor
cmp
lea
sar
js
out
movhps
psrld
mov
into
cmp
jl
sbb
fstpt
inc
pop
mov
out
lods
je
cmp
fisttpl
inc
jecxz
sub
cmpsl
mov
xchg
mov
fimuls
es
dec
xchg
arpl
cmp
sub
out
mov
push
insl
adc
dec
pop
adc
pop
push
std
cmpsl
test
and
int
cmp
xchg
sbb
cmp
mov
mov
pusha
cmp
pop
push
add
mov
lret
mov
cwtl
mov
xor
rcrl
in
push
pop
sahf
bnd
cmpsl
in
repz
mov
div
pop
mov
pop
xchg
jg
data16
push
aas
adc
icebp
mov
xchg
int3
mov
aaa
aad
jg
scas
add
jge
push
or
adc
mov
shll
xchg
dec
fidivl
xor
mov
loop
cmp
cld
test
cltd
xchg
int
insb
xor
or
lret
xchg
xlat
add
cmp
lds
shll
fmul
jb
aaa
testl
lcall
or
xor
pop
hlt
cld
cltd
push
inc
sub
stc
mov
cmp
jmp
add
jmp
in
mov
jle
push
and
sahf
lds
sbb
lds
dec
push
adc
mov
mov
jge
sub
les
jp
cltd
mov
fsubrs
jmp
pop
mov
jno
not
addr16
dec
popa
add
jnp
movsb
pop
lret
idivb
mov
cmpsb
das
cltd
insl
fisubrl
shl
xor
lret
inc
icebp
fidivrl
fwait
lds
pop
push
add
pop
lcall
loope
pop
jno
popf
cwtl
lock
pop
cltd
dec
push
inc
cwtl
sbb
or
push
jecxz
add
xchg
mov
ss
je
rorb
add
in
leave
fs
loope
std
mov
push
push
outsb
inc
cmp
dec
pop
cmpsb
fadds
std
mov
outsb
pop
mov
dec
push
insb
and
mov
sub
rcll
mov
inc
xor
fidivrs
sti
mov
cmpsw
push
xchg
sbb
xchg
into
inc
jae
mov
nop
shrd
pop
lds
mov
mov
fidivrs
pop
mov
pop
mov
cwtl
and
cmp
fcomip
mull
mov
shll
insb
leave
pusha
jb
add
jae
std
push
enter
pop
dec
fistpll
lea
mov
jns
into
jae
xor
cmp
push
gs
jecxz
push
or
cli
lahf
mov
pop
inc
inc
std
or
pop
inc
js
xchg
jl
sbb
push
xchg
imul
aam
pop
mov
inc
into
jo
cli
add
sbb
mov
mov
test
mov
adc
sbb
outsl
jmp
xchg
cmc
inc
xchg
cmp
pushf
xchg
lock
addr16
cmpsl
fwait
data16
mov
or
cmpsl
cmc
sbb
rol
roll
loope
addr16
out
inc
push
push
mov
xor
fcomi
inc
mov
add
mov
outsb
sub
mov
mull
test
mov
add
mov
cmp
aas
mov
out
mov
push
adc
mov
lock
shlb
movsl
xor
scas
pop
sub
xor
ret
loopne
adc
out
je
add
and
into
sub
sbb
xchg
dec
sub
sysret
pushf
jle
je
push
sbbl
insl
mov
cmp
sub
les
mov
lahf
adc
push
mov
mov
adcb
call
loop
add
dec
add
sbb
jne
dec
dec
test
mov
test
inc
and
out
and
cmp
sbb
push
sbb
xchg
lret
jne
or
add
dec
dec
cltd
mov
les
int
sahf
jae
rclb
mov
sub
jne
and
push
out
mov
sysret
insl
jp
cwtl
cmc
jmp
sbb
sahf
push
mov
imul
repnz
mov
inc
ljmp
mov
mov
push
or
aam
scas
fdivl
jno
incb
outsb
aad
repnz
idiv
add
scas
dec
xor
jg
rcr
pop
mov
adc
hlt
test
xchg
and
inc
push
or
inc
and
fisubrs
xchg
adc
mov
push
jns
lcall
add
push
pop
pop
mov
jb
aaa
push
xchg
cwtl
dec
into
jg
fcompl
cmp
push
inc
mov
dec
push
arpl
xchg
loopne
cli
push
cmc
jle
aas
jecxz
aad
cmp
std
sub
jp
stos
nop
xchg
arpl
mov
push
lods
inc
push
add
daa
or
enter
fwait
mov
rclb
cmp
out
nop
jp
insl
xchg
lds
xchg
ss
rol
adc
inc
push
nop
repnz
xchg
or
rclb
jne
sub
popf
js
push
push
adc
jmp
addr16
insl
data16
mov
lods
shlb
inc
sbb
jbe
in
les
sbb
nop
sbbl
sti
fstps
pop
insb
push
cs
ret
lds
inc
mov
pop
lods
jno
lret
push
fcmovb
aam
aaa
xchg
sar
fstl
aaa
scas
int3
cs
push
insb
adc
movl
inc
xchg
ret
loop
shrl
dec
mov
mov
mov
mov
mov
push
ja
inc
out
push
add
je
jo
nop
pop
push
ljmp
orl
push
mov
hlt
jp
mov
xlat
push
mov
cmp
dec
inc
pop
add
push
bswap
movsl
fsubrs
inc
and
cmpsl
jnp
xor
jge
insb
adc
adcb
lock
sub
jge
pusha
or
sub
jnp
in
jecxz
jp
push
mov
sti
push
cld
mov
subl
push
ret
or
lahf
inc
sub
sbb
mov
out
and
nop
dec
adc
stos
cwtl
mov
aam
ret
mov
ret
ja
lret
dec
hlt
sbb
js
arpl
movsl
andb
mov
sub
xor
mov
out
push
dec
test
movsb
mov
addr16
jmp
sub
pop
imulb
jg
out
repz
in
inc
sub
aas
inc
pop
xlat
stos
mov
test
jno
push
or
add
jno
push
pop
insl
daa
sbb
cmp
insl
adc
cmp
adc
in
std
outsb
mov
scas
push
mov
call
mov
repnz
pop
xchg
ds
or
adc
jne
mov
cli
mov
insl
pop
pop
dec
xchg
fadds
insb
adc
xchg
or
xor
dec
das
test
mov
das
jecxz
xchg
mov
sbb
mov
mov
push
dec
cld
testb
gs
sub
inc
push
pop
repnz
inc
cmp
jecxz
sarb
int3
sbb
in
mov
je
and
jg
xor
mov
jmp
jmp
mov
leave
ljmp
shll
mov
cmp
iret
mov
imul
cmp
sub
sub
mov
mov
xor
aad
xor
mov
test
ljmp
outsb
sub
cld
mov
test
notl
push
cmp
cltd
ror
lods
push
mov
sbb
mov
mov
pop
mov
inc
push
les
scas
add
aas
xorb
insb
out
adc
push
pop
or
leave
ss
jne
push
or
and
hlt
ja
stc
iret
or
dec
cmpsl
push
pop
imul
aam
dec
call
or
ret
cmpsl
xchg
and
aaa
add
jne
xchg
sbb
jo
sub
lods
jl
lds
adc
push
xor
push
inc
adc
je
subl
xor
add
inc
push
or
movsb
cld
imul
clc
mov
cli
and
adc
pop
sarb
xchg
xchg
pusha
je
add
sbbl
std
lods
in
cmc
push
push
mov
fistpll
mov
dec
sub
out
cmp
mov
les
lahf
jmp
lcall
xor
mov
push
loopne
and
jae
subb
mov
ljmp
ja
inc
adc
movsl
or
fbstp
ss
push
xchg
mov
daa
data16
mov
dec
jo
push
lock
lret
jb
out
pop
jae
mov
dec
aam
pop
in
and
aam
sub
out
outsb
shrl
sti
push
jmp
adc
loope
adc
pop
jecxz
pusha
mov
or
xchg
add
movsl
sub
push
out
xchg
mov
sub
sahf
bnd
or
stos
xchg
inc
sbb
cwtl
outsl
lahf
mov
jle
inc
cmc
and
adc
addr16
shld
lret
div
icebp
lahf
outsb
pop
inc
pop
or
jnp
imul
xor
mov
scas
or
stos
push
and
or
leave
andl
mov
std
das
jbe
and
std
sub
pop
or
mov
push
lds
in
in
cmp
call
and
mov
aaa
pop
xchg
mov
pop
mov
iret
mov
outsl
sub
cmp
fwait
ss
xchg
aaa
xchg
rolb
div
cmp
dec
shl
push
xor
sbb
sbb
dec
aas
std
into
test
dec
push
sub
cmp
les
push
in
out
sub
pop
cmp
xor
xchg
mov
xchg
fpatan
out
mov
je
cltd
fmulp
inc
sbb
xor
stos
mov
js
mov
sub
out
movsl
pop
sub
sbb
jmp
mov
jle
or
mov
jbe
dec
faddl
cmp
clc
idiv
or
xor
movsb
mov
ret
or
cmpsb
pop
push
insb
or
push
xorb
lahf
pop
mov
lret
inc
dec
iret
rol
lahf
nop
jne
mov
mov
dec
and
scas
pop
push
or
dec
imul
inc
xchg
push
and
ja
fs
int
jnp
cltd
cltd
mov
stos
and
jo
in
adc
sbb
sbb
test
imul
lods
inc
inc
lock
xor
sub
or
in
rclb
nop
dec
call
xchg
fsubp
lods
or
mov
mov
xchg
pop
sub
push
xor
je
xor
or
movsb
mov
imul
pusha
pop
mov
adc
ret
mov
andl
xor
sub
je
into
xchg
sarb
out
popf
pop
mov
jecxz
scas
and
icebp
adc
js
rcl
mov
jne
scas
ljmp
cli
dec
jmp
cmp
push
sbb
add
jle
sbb
fidivl
popf
enter
add
pop
pusha
repnz
jge
xchg
movsl
rolb
pop
fwait
inc
jg
push
enter
in
out
sub
dec
in
pop
stc
call
out
pop
adc
lods
std
ret
roll
mov
mov
dec
jecxz
mov
adc
aad
jecxz
and
or
or
mov
mov
push
inc
or
jmp
mov
mov
sbb
cmp
icebp
stos
ja
movsl
test
mov
sbb
in
mov
lea
dec
sbb
loop
cs
cmpsl
sbb
and
movsl
in
adc
shl
lret
and
adc
pop
out
xchg
in
push
jbe
cmp
pop
xchg
add
adc
cmpsl
call
and
sbb
fidivl
push
inc
push
add
ret
pop
std
sub
push
lods
mov
leave
dec
pop
push
notl
mov
inc
std
xlat
lret
negb
cmpsl
ljmp
testl
pop
jnp
out
push
push
shl
test
pop
loope
mov
mov
rcrb
sub
pop
sbb
in
aas
lcall
imul
mov
jge
xorb
dec
push
movsl
in
mov
sbb
inc
lds
cltd
std
mov
dec
xchg
sub
scas
lret
sub
mov
loopne
icebp
pop
cmp
dec
enter
js
add
addl
mov
outsl
ds
das
shll
jl
mov
cmp
roll
call
sub
call
add
rorl
cmp
hlt
or
pop
lcall
and
andb
pop
scas
or
orb
aas
push
sbb
mov
shrl
sbbb
ds
and
push
into
aam
rcrb
xor
cmc
clc
ret
jb
gs
ja
push
pusha
fdivrs
incb
in
push
mov
jo
xor
sub
push
or
ret
inc
jmp
mov
subl
fcomps
ror
push
mov
push
arpl
adc
mov
xchg
leavew
in
sub
int
xchg
movsl
insl
es
ror
shr
add
dec
push
lds
pop
scas
add
jns
sub
jmp
pop
jb
imul
xchg
xor
orb
sahf
insl
lea
fdivr
aam
sbbb
aad
xchg
insl
insb
pop
push
loopne
inc
dec
rcrl
je
push
mov
cmpb
adc
xchg
or
sub
cwtl
xchg
pop
cmp
int3
shr
vpsadbw
sahf
jmp
pop
andb
push
cmp
leave
jg,pn
arpl
movsl
pop
fsubl
push
mov
xchg
jle
push
mov
pop
mov
outsl
jge
test
jae
std
loop
push
stos
lahf
popa
cld
mov
loop
incb
mov
jle
adcb
xchg
js
fisubrs
cmp
imul
push
cmp
sbb
shr
ret
in
jae
js
mov
pop
sub
out
pop
rcrl
into
in
push
lret
push
or
add
sbb
out
fisubrl
es
inc
adc
aaa
repnz
mov
xchg
aaa
fsubl
mov
jl
in
xchg
repnz
jae
dec
addb
sahf
hlt
and
mov
testl
gs
roll
cmpsl
xlat
pusha
cs
out
adc
fists
dec
mov
or
shrl
sub
jnp
stc
dec
adc
adc
add
loopne
outsb
xor
aaa
movsl
mov
xchg
jae
cmp
xor
movb
jo
imul
xchg
sub
push
xlat
add
pop
dec
rolb
and
sub
insl
into
jne
push
jo
mov
mov
jns
jae
inc
cmp
mov
pusha
out
lahf
rorb
call
loope
mov
or
call
jae
sub
fcmovnbe
out
cmpsb
out
mov
mov
jle
fisttpl
std
out
es
sahf
pusha
call
xchg
sarl
inc
lea
repnz
imull
sahf
jbe
je
fimuls
and
push
xchg
shll
inc
aad
lds
cmpsl
xlat
inc
mov
xchg
rcrl
icebp
jp
pop
jns
ss
je
sub
aaa
ja
daa
sti
jecxz
adc
jnp
push
jae
and
fstps
sbbb
inc
fnstsw
or
xchg
jnp
sub
jmp
pop
mov
push
outsl
adc
pop
ds
imul
xchg
jbe
cmpl
subb
pushf
leave
imul
mov
cld
mov
repnz
xchg
push
xchg
loopne
aaa
and
pop
pop
aad
mov
std
ljmp
inc
inc
pop
push
add
stos
sbb
or
push
jecxz
push
add
insb
sbb
mov
dec
into
ljmp
mov
mov
inc
jb
add
fdivs
rolb
jmp
pop
pop
out
xchg
sahf
sbb
aaa
xor
jle
mov
in
jns
pop
mov
sar
dec
mov
fs
jmp
mov
sbb
pusha
ret
dec
cmp
adc
xlat
pop
push
sti
negl
sub
jns
mov
xor
mov
fsubrl
outsb
mov
dec
test
outsb
popa
lods
gs
jne
outsl
mov
lret
dec
stos
lret
imul
loopne
sbb
mov
cltd
cmpsb
mov
in
pop
pop
cld
mov
mov
inc
dec
std
std
movsl
fsubl
push
push
pop
push
jle
arpl
shrl
lods
adc
scas
pop
sahf
les
popf
inc
daa
or
pop
add
aaa
mov
insb
cmpsb
inc
jmp
hlt
pop
popa
rcr
jle
je
xchg
lods
lock
mov
in
push
mov
test
adc
mov
sbb
lret
adc
stos
xor
lds
cli
jmp
push
xor
and
repz
popa
push
aam
nop
sub
enter
sahf
jecxz
jne
push
push
jne
dec
add
int3
sub
mov
jne
mov
fnstsw
jg
inc
shlb
scas
iret
xor
xor
fwait
adc
lret
lret
push
mov
jo
mov
push
or
mov
dec
or
aad
xchg
sti
dec
cmp
inc
sbb
fisubrl
aas
pop
lahf
push
rcll
arpl
push
or
push
sarb
js
mov
sbbb
or
sbb
xor
inc
or
insb
and
addr16
repnz
or
push
push
add
pop
fstpt
loop
je
insb
xchg
cwtl
pop
por
xor
scas
daa
jmp
adc
stos
adc
jp
pop
jo
xchg
adc
sbb
or
test
cmpsb
pop
es
in
insb
aas
lahf
xchg
mov
inc
aaa
sbb
fldenv
ljmp
fldcw
cmpl
push
cmp
nop
sub
inc
pop
ret
cmp
cmpsl
xchg
pop
shlb
fcomps
fstpl
loop
and
fdivl
jnp
loopne
movsl
push
mull
sub
iret
and
pusha
iret
dec
mov
pop
or
sbb
mov
fdivp
ficompl
adc
sarb
pushf
rcll
add
std
into
jb
pop
aam
fucomip
push
xor
pop
add
fistps
add
cltd
outsb
fnstenv
push
shl
pop
xchg
cltd
pop
aaa
pop
lods
cmpsb
pop
cmp
into
aam
jl
loope
jnp
dec
push
mov
ljmp
fwait
adc
mov
and
lret
ficoms
std
lock
adc
add
jbe
xor
int
xchg
cmpsl
mov
into
dec
loope
imul
mov
or
stc
fld
sbb
mov
xor
gs
or
into
xchg
push
xchg
cmp
je
dec
ret
xlat
sbb
cltd
enter
aad
addb
aas
and
pop
sahf
aaa
test
pop
mov
aas
xor
int3
in
adc
push
lods
add
mov
loopne
in
in
jl,pn
pop
pop
pusha
popa
jecxz
inc
sub
cmp
nop
inc
repnz
pusha
adc
or
jns
sub
jg
call
mov
nop
inc
lret
sub
adcb
into
jmp
jecxz
push
dec
sub
inc
mov
mov
cmp
push
push
dec
mov
into
ret
mov
dec
mov
hlt
jl
sub
lahf
pop
xor
or
jne
adc
repz
pop
sub
ds
xchg
aaa
popa
call
sahf
jne
xchg
mov
ss
mov
jp
cmp
adc
xlat
cmp
call
loope
sub
cmp
lahf
es
cmpsb
mov
pop
push
faddl
mov
add
icebp
mov
jae
inc
push
mov
sti
insb
mov
cmp
mov
test
pop
xchg
inc
or
sub
test
ret
loope
dec
push
mov
les
ficoms
push
sub
int3
mov
jle
pop
repz
fidivl
popf
aad
icebp
mov
cld
lret
sbb
aam
outsl
scas
mov
out
dec
cmp
idivl
pop
call
js
icebp
aaa
inc
sbb
filds
test
xchg
pop
sub
mov
sub
test
jge
inc
cmp
in
mov
arpl
out
call
loop
fmull
std
test
inc
test
jbe
or
ret
mov
fimull
push
fcomps
aam
mov
and
jb
ficoml
jo
icebp
jg
jno
lods
and
shll
push
jl
jns
push
loopne
stc
dec
mov
sub
add
enter
and
inc
xor
mov
gs
int
jnp
add
sbb
push
rorb
or
dec
pop
dec
push
sub
mov
xor
dec
push
lea
and
icebp
xchg
mov
lods
add
stc
adc
jmp
cs
ret
cmp
inc
jg
movl
scas
shl
xchg
push
repnz
inc
xor
dec
jb
mov
popa
mov
insb
mov
xor
or
enter
jae
mov
mov
lret
xchg
std
mov
push
fistpl
int3
aas
test
jg
add
and
jmp
jne
mov
xor
rcll
inc
data16
subb
loopne
and
in
popa
or
cmp
popf
jge,pn
rcll
push
adc
push
enter
dec
sbb
xchg
lahf
shlb
lea
sbb
shlb
sti
mov
add
add
jne
lret
mov
rcl
xor
or
pop
jae
pop
es
repnz
popf
pop
aad
mov
out
fldenv
stos
sbb
imull
in
gs
mov
mov
popw
xlat
ja
dec
xchg
outsl
and
xor
xchg
mov
xchg
jnp
call
mov
cmp
and
jge
inc
int
test
jo
mov
scas
adc
xchg
rolb
or
cmpsb
stos
gs
mov
adc
lret
xor
add
push
popa
repz
loopne
cmpsl
add
fistpll
ja
adc
pop
in
gs
jne
adc
outsb
sbb
pusha
pop
ljmp
daa
mov
mov
mov
add
jp
or
aam
xchg
pop
pop
das
fisttpll
int3
fidivl
test
clc
or
add
sub
fbstp
push
jge
lret
iret
shlb
sbb
pop
adc
sbb
mov
mov
jp
inc
es
and
cs
sbb
adc
aaa
popf
sub
xchg
lret
mov
adc
int
adc
jbe
xor
mov
add
inc
pop
or
sub
mov
xchg
mov
xchg
xchg
dec
clc
lret
aad
fwait
cmp
icebp
sbb
addr16
cld
fsubrl
sarl
sbb
or
lock
scas
insb
insb
sarl
cwtl
inc
inc
sub
rolb
add
add
sbb
in
filds
fisubrl
mov
xchg
movsb
mov
sbb
cmp
es
test
pop
sbb
push
xor
xor
pop
jg
ret
pop
mov
in
mov
and
in
ljmp
cld
or
rol
mov
mov
sub
ljmp
fnstenv
pop
adcb
out
xorl
sbb
cli
mov
int
into
xor
jae
push
shl
or
mov
sub
stos
std
repnz
iret
fnstsw
cmp
lret
stc
add
subb
sub
push
mov
pop
pop
xchg
test
in
sub
int
loope
push
fiaddl
repnz
shrb
sbb
pop
cmp
fistps
push
dec
lds
cltd
loope
mov
call
mov
inc
sbb
inc
mov
ja
cwtl
jg
sub
fwait
cs
xor
dec
jmp
dec
lret
mov
sti
mov
push
mov
aam
imul
xchg
xchg
adc
dec
xor
cld
sub
push
inc
testl
sub
push
scas
xchg
xchg
mov
sub
aad
out
dec
shr
pushf
ljmp
pop
lods
pop
insb
add
out
leave
add
fwait
mov
pop
xor
stos
pushf
dec
cmp
stos
and
add
cmp
stc
sahf
cmp
nop
in
jo
enter
ror
push
sbb
out
jo
lea
push
not
sti
jno
ds
cmp
loope
xchg
mov
push
mov
mov
scas
adc
movsb
push
xchg
rol
cmp
push
popa
mov
dec
roll
jb
pop
testl
xchg
dec
jmp
mov
add
push
fnstenv
sub
out
jmp
dec
sahf
out
movsb
outsb
stos
incl
mov
xchg
int3
in
nop
out
icebp
xlat
out
cmp
xlat
sarb
mov
push
dec
lods
jno
repnz
lds
jecxz
jle
mov
rorl
ljmp
adc
mov
je
out
mov
xor
adc
cmpsl
sbb
ret
fimull
ljmp
xor
addb
and
loopne
xchg
lret
xchg
cmp
sbb
dec
pushf
mov
fcompl
inc
inc
pop
shll
and
stos
xlat
call
sub
adc
sub
xchg
pop
mov
and
mov
int
sar
sbb
adc
mov
mov
add
test
inc
cmp
ror
mov
and
in
pop
outsb
push
sbb
add
hlt
push
mov
adc
xchg
int
call
test
xor
flds
mov
push
jo
out
outsb
lods
jg
out
movsb
xchg
popa
and
sti
mov
push
dec
push
pop
test
or
out
inc
mov
cmpsl
or
outsb
hlt
and
sub
into
cmc
sbb
lahf
mov
xchg
dec
add
fsts
lock
cmp
or
sbb
leave
mov
jno
xchg
bound
pop
fs
sub
dec
std
shl
dec
pop
adc
rcrl
add
arpl
pop
fs
sbb
xchg
push
sbb
setg
fimuls
sub
lods
jg
fcoml
lret
clc
aas
popf
dec
iret
lahf
jp
pop
sbb
imul
lods
std
adcb
pop
test
push
mov
cmpsb
cmp
daa
or
movsl
xchg
or
adc
mov
test
add
pop
inc
xchg
xchg
cli
aam
fistl
jne
sub
jp
aad
jb
push
dec
je
and
dec
negl
mull
xchg
movb
lock
xchg
stc
popa
push
cmp
fstl
inc
adc
push
addr16
jg
pop
jle
dec
mov
xor
mov
sub
pop
push
into
nop
test
les
inc
mov
nop
in
ljmp
or
push
and
fcoms
loopne
mov
xchg
icebp
xchg
adc
cmpsl
sub
dec
mov
jb
fdivrp
sbb
dec
in
icebp
hlt
in
pop
cld
les
mov
cmp
xchg
cmpsl
in
pop
adc
in
dec
mov
cmp
jb
xor
arpl
subb
aaa
sarl
sbb
icebp
out
pop
adc
sub
mov
fldt
mov
pusha
push
cmp
mov
fcmovne
aad
and
jb
es
mov
dec
repz
add
mov
cs
dec
mov
jecxz
ds
and
mov
pop
mov
mov
fbstp
push
mov
and
pop
mov
and
int3
inc
push
cmp
adc
push
ss
hlt
popf
loope
jb
ja
sbb
mov
dec
cmp
xchg
inc
sbb
push
shl
pop
xor
lods
add
pop
sub
adc
fisubrl
jb
into
mov
rolb
inc
fldl
push
cmpsl
sbb
jl
pop
cmp
loopne
xor
mov
in
push
sub
je
addl
push
arpl
lods
add
sub
sbb
jmp
in
rorb
xchg
xchg
pop
lcall
xchg
pop
or
mov
es
cs
mov
pop
rolb
or
mov
rorb
cltd
sbb
loop
aad
dec
cmp
movsb
adc
pop
cwtl
sub
insl
lea
dec
mov
mov
or
xchg
inc
sbbb
in
mov
fimull
sti
scas
sahf
xor
hlt
call
pusha
inc
rcrb
mov
xchg
fnstcw
es
rorl
xchg
jbe
inc
push
pop
and
ss
add
xlat
in
sbb
rcrb
inc
cmpsl
lret
mov
shlb
mov
imulb
xor
xchg
or
push
aaa
notb
scas
aad
xor
ds
adc
scas
jae
repz
push
pop
in
xor
inc
nop
inc
or
lcall
mov
xor
cltd
mov
testb
outsb
mov
add
or
push
push
push
xchg
pop
sub
push
pop
push
insb
das
mov
pusha
pop
arpl
pop
mov
or
das
test
and
outsb
or
lcall
sub
lahf
xor
cmp
pop
push
jns
mull
push
ja
stos
and
or
mov
add
jg
push
scas
inc
xor
mov
and
mov
ds
cmp
mov
or
adc
mov
pusha
xchg
inc
stos
and
xor
nop
test
xor
lods
jne
sub
rclb
jge
cmpsb
test
test
or
sahf
inc
cmpsl
mov
adc
movsb
std
cmpsb
gs
lret
adc
mov
cld
loop
xchg
insl
int3
pop
mov
scas
sbb
lcall
push
jmp
scas
cli
pop
pop
and
andb
inc
inc
lock
lret
add
shll
ja
repnz
cld
outsl
loop
mov
cltd
push
xlat
loop
add
cmpsb
push
sbb
jo
jns
adc
push
cli
fistpl
mov
fcmovne
invd
inc
movsl
arpl
adc
dec
rcrb
cmc
sbb
or
jbe
js
push
and
popa
or
pop
jg
pusha
mov
jmp
jne
push
xchg
lcall
inc
popf
mov
xor
cmp
ds
fwait
xor
xor
fmull
xchg
test
push
or
add
pop
cmp
notb
icebp
pop
mov
sub
into
mov
mov
sahf
sbb
lods
mov
in
push
inc
mov
mov
fwait
and
mov
sub
sub
les
xchg
cltd
add
inc
dec
sahf
xchg
lods
or
lcall
hlt
fcoms
in
xor
jnp
rcl
mov
cmp
lods
xor
lds
ret
loop
pop
arpl
cmc
ficoml
adc
out
aam
xor
push
pop
mov
std
out
lock
sti
xchg
daa
addb
enter
jns
sbb
mov
pop
mov
mov
psubusb
iret
ss
loope
adc
xor
ljmp
sbb
ss
pop
xor
add
jbe
jecxz
adc
jbe
add
or
mov
xor
nop
movsl
mov
stc
adc
aas
aad
sbb
mov
int3
arpl
int3
cmpsl
add
mov
xchg
cmp
ror
out
xchg
pop
cmp
mov
xchg
push
rcll
push
mov
jae
pop
sbb
cmp
adc
loopne
inc
push
xchg
in
rcll
icebp
inc
sbb
aaa
cs
push
or
mov
and
cmc
or
adc
mov
xchg
std
pop
nop
dec
int
cmpsb
shll
fcoms
lret
lahf
or
pop
loope
sub
fs
inc
mov
push
adc
lea
stos
sub
inc
lods
dec
add
orl
push
int3
mov
mov
dec
nop
pop
clc
xor
fildl
xchg
loop
cltd
cld
xchg
inc
js
mov
mov
or
cmpsl
lret
mov
out
push
cmpsb
in
ret
inc
nop
dec
jg
fstps
dec
aad
movsb
loope
in
xor
lock
add
pop
cmp
mov
add
jae
and
icebp
clc
outsb
jno
dec
sub
adc
dec
insb
in
and
mov
add
mov
cmp
pop
jge
mov
fadd
mov
shrb
fidivrl
cwtl
andl
mov
lret
mov
lds
push
xlat
cmp
aas
mov
mov
out
sub
pop
aaa
jbe
enter
lret
xchg
int
ss
cltd
repnz
or
push
mov
mov
cmp
jne
movd
push
or
mov
sub
and
data16
push
into
jnp
loope
repz
pop
imul
aas
xchg
or
adc
mov
mov
sbb
xor
sbb
les
cs
outsl
adc
inc
mov
std
fs
repnz
add
aas
lock
cmp
jo
add
push
xor
inc
push
into
xor
out
gs
jecxz
aaa
push
cmp
fs
cmp
dec
call
xor
adcl
push
xchg
inc
push
xchg
push
sub
lea
pop
sub
and
dec
push
jl
pop
repz
fstpl
int
or
sub
sbb
imulb
mov
lahf
cmp
mov
gs
icebp
mov
xchg
push
cmpsl
mov
inc
push
mov
repnz
cmc
aam
jno
test
cli
xor
or
xchg
adc
and
loopne
sahf
pop
test
cld
shll
push
js
adc
adc
add
xchg
fst
les
mov
add
sti
jns
xor
aas
pop
aam
imul
ret
into
into
dec
xchg
rcll
rclb
mov
xor
cmc
es
aaa
lods
add
arpl
cmpsl
push
hlt
mov
sub
in
inc
xchg
and
sahf
outsl
inc
mov
mov
loop
repnz
dec
addr16
imul
negb
clc
aaa
sbb
xor
js
imul
pop
sub
dec
enter
cld
xor
int3
inc
mov
jns
xlat
jecxz
push
fsts
inc
cmpsb
inc
sbb
xchg
out
lds
sbb
cmp
in
mov
dec
fsubr
dec
mov
in
roll
faddl
enter
das
lcall
aam
out
aam
xor
insb
imul
ss
xor
leave
out
ds
push
test
sub
movsb
xchg
mov
mov
inc
dec
shl
pop
in
push
jae
leave
je
lods
adc
add
inc
lcall
clc
pop
gs
sub
out
cmp
pop
or
ljmp
mov
imul
subb
xor
fldl
mov
dec
insl
xor
or
inc
hlt
loopne
addr16
sarl
push
xchg
push
cmc
mov
pop
pop
xor
enter
jg
movsb
lahf
cltd
push
mull
pop
popf
pop
hlt
cs
clc
sti
jmp
xor
enter
dec
int
loop
cmpsl
sub
dec
and
xchg
xchg
int
ss
pop
scas
in
xor
push
and
repz
cmp
hlt
sbb
and
sahf
adc
mov
imul
stc
cmpsb
mov
dec
add
or
jns
jno
dec
cmpsb
pop
outsl
push
cmp
jg
jecxz
xchg
dec
int3
sub
add
fsubr
enter
fists
lods
ljmp
int3
add
pop
mov
idiv
pusha
sbb
pop
leave
les
jg
das
lds
xchg
pop
and
cmp
and
je
call
daa
testl
add
mov
sbb
ret
dec
push
pop
inc
aaa
outsl
push
aam
xchg
cmp
xor
rol
mov
and
or
loop
push
cmp
in
cmp
fldenv
pop
mov
mov
ret
addb
ja
push
inc
adc
jno
sbb
sbb
sub
adc
sbb
xlat
adc
sub
aaa
repnz
pusha
out
pop
sbb
add
fucomp
mov
xor
mov
lds
cltd
ds
cmp
sub
push
es
lds
fdiv
mov
pop
push
aam
andb
pop
mov
cmpsb
loope
lock
and
xchg
rcrb
cmp
orb
jae
in
or
aam
pop
cmpsl
sbb
pushf
popf
pop
or
or
lods
faddp
xor
pusha
repnz
or
mov
jns
dec
popa
and
mov
dec
and
mov
sbb
repz
addb
fwait
cltd
test
in
outsl
xchg
ljmp
stos
test
jnp
push
iret
and
push
fbld
sub
loope
jl
iret
lock
cltd
addr16
add
insb
addr16
jecxz
gs
push
fldenv
xlat
jg
movhps
push
call
jg
mov
inc
mov
and
into
daa
icebp
push
pop
addr16
sub
mov
mov
faddp
lret
jae
xchg
pop
cli
pop
in
add
loope
inc
sub
test
das
in
in
movb
sub
repnz
cmp
scas
jbe
loope
sub
add
ret
test
mov
jg
ss
cld
dec
cli
mov
cli
dec
cltd
ss
les
dec
test
add
xchg
pop
sbb
sbb
sub
cmpsb
jo
xlat
cmp
cli
jl
lea
out
push
add
fsubr
push
push
scas
lds
or
in
or
lds
subb
ds
mov
jecxz
int
push
mov
adc
jb
insl
fists
icebp
pop
test
lods
mov
fdiv
dec
test
ds
repz
ffree
clc
pop
mov
int3
lret
pop
cli
sbb
in
mov
xchg
xchg
cmc
mov
pop
fs
imul
xor
add
cmp
jl
mov
cmc
adc
shrb
xorl
pop
leave
out
dec
aam
jae
stos
lret
les
add
jg
xchg
test
subl
add
icebp
mov
ss
dec
shr
insb
cltd
jno
loopne
or
bound
jb
bound
addr16
fstps
adc
jbe
add
pusha
mov
ss
dec
sbb
cltd
mov
cmp
push
mov
fistps
xchg
arpl
pop
xchg
adc
repnz
cmp
or
fmull
xchg
xchg
xchg
cmp
jge
mov
ret
or
scas
js
cltd
cmpsl
imul
jge
inc
aam
ret
mov
pop
call
push
stos
xchg
aaa
cld
adc
jg
iret
shll
lods
sub
fmull
push
xor
xor
ss
cmp
inc
cltd
push
xchg
or
sub
in
push
in
dec
xlat
sub
je
dec
jecxz
push
movsl
hlt
in
ficompl
jmp
ss
lods
pcmpgtd
mov
cli
add
sub
push
inc
lahf
cmp
out
js
in
mov
dec
dec
lcall
mov
xor
aaa
and
fnsave
aad
loope
insl
push
jg
jge
aad
xor
vphaddbd
ret
movsb
fcompl
sbb
xlat
and
dec
mov
ljmp
inc
mov
mov
ljmp
cmpsb
dec
sub
jl
pop
lods
xchg
add
add
lret
stos
ret
ljmp
xor
xchg
aam
fxam
or
repz
mov
mov
push
loop
jnp
push
xchg
pop
es
stc
mov
adc
cmp
test
sub
mov
fsubrs
data16
cld
mov
lret
negl
sbb
mov
test
jne
gs
inc
xor
push
adc
aam
insl
test
scas
fildll
dec
mov
pop
popa
mov
aaa
push
js
sub
js
and
nop
jnp
jge
out
sub
es
mov
sbb
push
test
xchg
xor
cltd
mov
xchg
xor
test
mov
scas
xchg
outsl
adc
ret
cmp
stos
shlb
mov
add
test
loopne
loopne
mov
aaa
xchg
cs
add
ljmp
cli
xchg
xor
xchg
dec
jg
cwtl
and
into
fucom
testl
push
pop
cmp
and
dec
ret
outsb
arpl
push
mov
sub
mov
pmuludq
mov
mov
cmp
outsb
xchg
leave
ror
fs
faddp
pop
shrb
js
mov
ror
jae
mov
into
pushfw
mov
lahf
sbb
scas
sbb
test
xchg
mov
jne
orl
cwtl
or
jns
mov
pop
xchg
xchg
inc
push
mov
inc
lret
xor
iret
or
decl
imul
xchg
sbb
mov
arpl
gs
sti
popf
inc
sarl
enter
mov
cltd
mov
push
je
jo
xchg
cmp
sti
adc
repnz
xchg
adc
mov
push
mov
mov
mov
cmp
cmpl
clc
out
pop
inc
loop
dec
cmp
je
push
or
fmull
jg
push
cs
and
cltd
add
cmp
or
sbb
jb
dec
push
fmulp
sbb
dec
pop
inc
xchg
sbb
ds
lahf
ss
in
xchg
test
lea
call
out
gs
push
inc
lahf
push
sbb
push
dec
xlat
push
pop
push
adcl
sbb
add
xchg
sar
mov
adc
jmp
pop
dec
test
cltd
sub
popf
xchg
loopne
dec
imul
add
gs
mov
sarl
mov
sub
ss
data16
push
cs
push
fwait
push
jbe
out
rolb
sbb
fs
cli
clc
sub
imul
int3
mov
ret
cmpsl
sbb
outsb
mov
jae
xchg
push
jmp
mov
pop
imul
aas
mov
cmp
pop
ficoms
sub
jno
push
cmpsb
xchg
js
jle
mov
orb
ljmp
inc
shrl
mov
cld
jns
pop
inc
mov
sub
inc
fwait
dec
sbb
jg
movsl
hlt
sbb
test
xchg
loope
fildl
test
mov
imul
out
movsb
stc
call
jge
mov
cld
shlb
jno
addb
inc
jecxz
sahf
xor
loop
jmpw
add
idivb
jle
mov
mov
or
cmp
mov
adc
xor
outsl
mov
pop
stos
mov
inc
add
pusha
repnz
jle
xchg
push
lea
adc
sarl
pop
or
not
mov
sub
fistps
push
xlat
scas
ds
inc
push
hlt
movsb
in
mov
popa
sbb
push
ret
jns
xchg
fistl
sbb
push
dec
clc
test
jg
dec
add
jns
cmp
sbb
into
movsl
xchg
xor
lods
sbb
lods
push
push
dec
cmc
bnd
adc
jmp
and
xchg
dec
and
js
add
negb
stc
incb
out
data16
jp
in
sub
sbb
pop
cld
sub
adc
push
fsubs
and
in
leave
ljmp
jo
sbb
aam
addr16
push
mov
fdivrs
inc
lea
push
add
rcll
jp
mov
mov
lds
jl
sar
dec
push
add
sub
je
ja
lds
pop
cwtl
xor
mov
sub
sbb
jo
add
cmpsb
int
daa
pop
jmp
and
add
imul
dec
jmp
outsl
lcall
ret
push
repz
fisttpl
fwait
pusha
mov
push
mov
pop
dec
insb
enter
xchg
mov
dec
jb
lea
push
mov
hlt
insb
faddp
pop
xchg
mov
sbb
mov
daa
fistl
fbld
dec
loop
sub
xor
push
js
xchg
lds
jmp
jg
out
int
push
es
adc
dec
fwait
test
jb
mov
out
fbld
cli
mov
aas
or
cmp
sbb
cmp
cmpb
jecxz
mov
pop
mov
outsl
outsl
add
mov
mov
ljmp
loope
sbb
test
fcoml
mov
lahf
dec
hlt
out
add
mov
aas
inc
pop
aaa
inc
fnstsw
lea
pop
mov
cwtl
mov
lds
ja
les
pop
sarb
or
subb
rorl
movups
loope
xchg
mov
les
into
arpl
mov
xor
inc
enter
mov
movsb
roll
jo
xchg
shlb
xor
pop
xor
ljmp
or
lods
push
testl
pop
jmp
pop
mov
shr
lea
sbb
movsb
mov
cmp
cwtl
pop
add
mov
and
adc
mov
addps
movsl
jne
jns
filds
aaa
and
lock
ljmp
fs
or
dec
mov
popf
or
sti
push
popf
subb
stos
xchg
xchg
fistpl
addl
jg
movsl
adc
fsts
pusha
push
xchg
lea
cli
outsb
ss
mov
cmp
call
std
adc
sub
mov
cmpsl
adc
sub
sbb
stc
popa
daa
adc
leave
sub
int3
test
stos
mov
jno
lea
insl
mov
sbb
or
jmp
jge
lock
shr
pushf
dec
int
sbb
popa
mov
jbe
and
push
sbb
jb
sarl
out
add
rorl
adc
sbb
adc
dec
add
push
pushf
add
popf
mov
je
outsb
jne
push
notb
mov
cmc
xchg
cmp
add
xor
or
loopne
shrl
bound
aam
jecxz
imul
enter
xchg
push
lock
sar
je
sub
pop
inc
fldt
lds
movsl
jecxz
mov
jg
cmp
jecxz
fidivrs
cmc
lods
sub
repnz
mov
shlb
mov
adcb
rcrl
lahf
and
or
dec
or
inc
mov
and
mov
loope
xchg
cmp
inc
lods
sbb
mov
dec
sub
xor
dec
inc
cmp
aad
mov
clc
movsl
or
inc
cmp
push
pusha
ljmp
ret
jno
fildll
xchg
xor
out
dec
pop
shrl
jmp
stos
sub
and
add
imul
push
push
dec
in
xchg
adc
outsb
xchg
xchg
and
nop
adc
ds
mov
mov
xchg
stc
outsb
cmp
cmp
cmp
js
xchg
incl
insl
and
lahf
sub
sub
xlat
insl
repz
test
add
xor
fisttpl
scas
lahf
popf
sub
rorl
daa
xchg
jmp
cltd
xchg
daa
fs
xchg
stos
xchg
mov
subb
push
adc
jecxz
cmpb
leave
stc
xor
lods
push
arpl
mov
dec
or
xlat
jo
popa
fists
subb
push
in
sub
ljmp
ss
ja
sahf
xchg
int
aad
inc
movsb
cs
repz
pop
outsl
aad
loopne
ja
dec
mulb
or
add
es
scas
pop
pop
xchg
sbb
xchg
scas
push
daa
adc
mov
cwtl
or
outsb
lock
mov
pusha
imul
aaa
insl
pop
and
sbb
les
xor
mov
add
lock
xchg
enter
lods
imul
jmp
fcmovnbe
ds
adc
mov
adc
mov
nop
dec
movsb
std
xor
cld
in
xor
decl
add
fnstsw
push
dec
lcall
cld
pop
or
adc
pop
mov
add
aaa
sahf
dec
mov
sbb
lea
push
add
or
mov
and
push
adc
movsb
push
pop
test
insb
lret
call
cmp
mov
sub
movsl
pop
cmp
lods
movsb
adc
mov
jg
int
jno
pop
cmpsb
mov
popa
xor
jno
jmp
xchg
sub
insb
enter
xchg
jns
dec
xchg
popf
fiaddl
insb
inc
repnz
or
pop
mov
cmp
cltd
cmp
icebp
mov
xor
shll
jno
dec
inc
mov
dec
in
sbb
sbb
adc
je
loopne
jo
push
repnz
sbb
test
aas
jl
push
loope
in
mov
inc
orl
shrb
sbb
or
mov
jno
fdivl
add
imul
in
mov
xchg
dec
sub
popa
ljmp
in
xchg
adc
xchg
push
and
jne
subb
cmp
or
lock
sub
mull
sbb
rorl
incl
jns
imul
xor
xchg
loop
adc
or
dec
push
icebp
jle
sub
dec
dec
adc
jno
pop
shlb
mov
ljmp
or
loop,pt
cli
inc
lea
iret
push
push
fs
lds
in
pop
movsl
hlt
jmp
subb
adc
insb
std
ss
ret
mov
sbb
and
hlt
ficoms
bnd
loop
jecxz
xlat
mov
into
add
xchg
push
gs
jge
outsl
popa
cmp
or
push
push
fbld
je
or
dec
push
mov
loope
pop
jmp
div
xor
pop
jecxz,pn
iret
dec
ffreep
aas
pop
add
or
pusha
pop
je
js
and
mov
inc
and
add
pop
leave
lahf
icebp
xor
pop
rcr
cmp
test
inc
sbb
mov
bound
std
pop
xchg
push
hlt
hlt
and
and
fistl
sub
inc
icebp
xchg
into
dec
dec
sbb
sbb
out
and
mov
nop
push
sub
inc
in
xchg
repnz
bound
orb
mov
lods
add
test
xchg
in
lds
push
mov
fcmovne
xchg
arpl
lcall
rclb
push
imulb
in
push
mov
shrl
ret
fimull
cmc
rorl
fmull
sbb
pop
dec
xorb
mov
jecxz
lret
call
inc
mov
cmc
iret
jge
dec
lods
lahf
sbb
push
pop
leave
int
push
lcall
test
sbb
adc
inc
sbb
aam
fldcw
pop
sbb
int3
mov
fisubrs
in
sbb
je
or
mov
ficomps
mov
cmp
cltd
lds
cmp
repnz
mov
lret
lahf
cmp
xchg
xchg
inc
in
mov
xchg
test
jle
mov
adc
push
shlb
lret
fdivrl
mov
mov
inc
xlat
imul
and
push
int
scas
adc
sbb
jnp
popl
lret
jns
dec
shll
mov
ds
gs
loopne
stos
xor
ja
sbb
dec
sbb
add
push
dec
popa
lea
mov
scas
pop
int
mov
lahf
movsl
loop
adc
or
sub
mov
push
or
cltd
loop
out
rorl
js
mov
dec
ret
sub
mov
pop
or
jl
call
dec
stos
fs
push
jle
jns
sub
jmp
inc
inc
xor
push
leave
adc
jne
repz
add
mov
aad
fidivs
test
mov
adc
incl
int3
mov
xor
test
jg
loopne
inc
scas
cmc
cwtl
push
sub
lret
lods
loop
scas
mov
cld
arpl
inc
xchg
fildll
outsb
mov
pop
cmp
outsb
jae
add
adc
ja
dec
cld
ret
pop
mov
mov
incl
cmp
jle
movsb
cwtl
xor
mov
mov
arpl
pop
cmp
mov
jns
fstpl
xchg
xchg
lea
pop
xor
xor
push
clc
rcrl
or
cmp
rcl
mov
mov
mov
sub
pop
notl
cmp
or
loop
or
and
int
adc
stos
imul
sahf
adc
push
sti
push
push
xchg
mov
lods
xchg
jnp
jl
mov
arpl
test
inc
call
inc
loopne
insl
popa
rolb
jo
loope
jno
test
jno
push
stos
cmp
inc
jne
pop
mov
pop
cmpsb
pop
es
outsl
push
sti
adc
jo
push
mov
frstor
cs
mov
sbb
jp
aaa
mov
aaa
xchg
jae
test
inc
rcrb
mov
sbb
decl
jle
jge
sarl
sbb
lods
xchg
into
push
adc
push
jae
gs
sub
mov
or
fwait
mov
add
fucomip
mov
aad
or
leave
or
jbe
pop
mov
lret
enter
jbe
pop
sub
loop
sbb
jb
ret
ja
fadd
outsl
xor
sbb
dec
jecxz
rcll
xlat
or
adcb
mov
mov
cmpsb
sbb
xor
scas
mov
or
test
jecxz
arpl
push
mov
lcall
pop
sub
push
or
out
pop
repz
dec
popf
test
xor
das
int
das
push
rorb
xchg
mov
cmp
mov
std
into
cmp
mov
in
gs
jge
clc
dec
mov
loopne
pop
xchg
pop
xor
fmuls
fisubrl
and
dec
stos
daa
loop
mov
pop
push
add
sub
lods
das
movsb
in
push
mov
insb
mov
shll
mov
cmp
iret
into
cmpsb
add
jns
push
ret
insl
add
and
scas
bound
xchg
popf
push
add
andl
je
aad
movsb
push
add
ficompl
out
loope
xorb
sarb
mov
or
hlt
dec
dec
fnsave
jg
jne
pop
dec
test
sti
push
mov
shrb
mov
lea
add
mov
fadds
iret
mov
roll
xchg
push
icebp
ss
cli
and
push
jbe
imul
insb
jo
lcall
pop
inc
out
adc
scas
ss
mov
pop
aad
lock
mov
dec
loop
mov
dec
xchg
adc
adc
je
ja
sbb
sti
rcll
std
pop
fisubrs
jp
ja
popf
fldenv
mov
outsb
stos
das
jne
lss
jecxz
mov
fs
xor
rcrl
xchg
lods
add
leave
aas
adc
cmpsb
adc
sbb
fsub
shll
sub
cmpsl
sbb
dec
shll
loope
push
jae
inc
loope
lahf
push
cmp
jnp
shr
add
dec
pop
adc
jb
nop
outsb
mov
int
arpl
pop
add
cli
pop
popa
fstpt
sbb
pusha
dec
lods
aam
xor
shll
rcrb
lock
inc
push
cmpsb
push
shl
pop
mov
pop
mov
xchg
sbb
dec
mov
cmp
test
fadds
jmp
cmpsl
leave
sbb
cli
sbb
hlt
and
repnz
loopne
jo
mov
cltd
lea
push
popa
scas
inc
jmp
cmp
sub
mov
ja
in
adc
pop
ffreep
sbb
in
and
push
pop
lret
shll
mov
sub
xchg
insb
mov
add
dec
fs
mov
outsl
add
push
std
icebp
xor
jo
adc
sbb
lods
icebp
out
mov
xchg
mov
cmp
sti
xlat
xchg
cmp
inc
jg
pop
repz
jle
ljmp
insb
mov
bound
sub
frstor
pop
mov
sti
cmovs
or
rclb
xor
and
ror
and
leave
int3
adcb
sbb
add
add
dec
mov
cmpsb
ss
cwtl
mov
in
scas
nop
push
mov
push
sub
push
pop
xchg
cmp
lds
pop
add
cld
popa
imul
xor
movl
mov
mov
and
das
packuswb
pop
mov
mov
or
lds
fs
xchg
sub
jns
aad
mov
int
fwait
lret
shlb
inc
imul
dec
fimuls
dec
or
mov
mov
stos
sbb
xchg
daa
sub
adc
cmp
mov
jbe
les
xor
in
or
repz
ja
lcall
jg
fs
pusha
lea
jp
rcl
pop
imul
mov
push
cmc
int
adc
inc
sbb
rorb
ds
xlat
cmp
repnz
or
lds
inc
jge
cmpsb
jg
lds
sub
shrb
sbb
pop
pop
mov
sbb
into
addr16
mov
iret
mov
insb
enter
in
cltd
xchg
mov
sbb
or
and
std
xchg
push
add
pop
mov
arpl
bound
aas
rcrl
jecxz
movsb
sbb
das
imul
imull
mov
inc
xchg
xor
ret
pop
lcall
loopne
dec
mov
shlb
les
push
lcall
dec
cmp
mov
and
popf
push
insl
adc
adc
cmp
xchg
movsb
andl
xchg
out
xchg
mov
add
push
mov
popa
rcr
add
mov
fistpll
test
nop
in
ljmp
mov
clc
xor
inc
add
addr16
mov
jle
test
push
call
pop
jb
jae
mov
or
stc
mull
scas
sub
add
xor
fdivp
pusha
push
mov
mov
call
ds
das
lahf
es
cmp
mov
subb
iret
enter
xor
test
dec
cmc
int3
add
ror
jecxz
sub
jns
in
sbb
xchg
sub
insb
arpl
or
lock
sub
and
xor
mov
xchg
jl
cmpsb
jp
dec
das
push
loopne
stos
stos
loope
imul
or
mov
lods
xor
fsubrs
sub
pop
movsl
sub
jae
outsb
sub
es
test
loop
dec
cmp
sbb
popf
xor
jbe
mov
scas
fsts
lock
ljmp
push
mov
add
dec
call
mov
call
popf
hlt
cmpsb
lods
lcall
mov
mov
xor
pop
mov
sub
sar
cmp
ficoml
xchg
in
out
lcall
dec
fisttpl
scas
pop
lea
cmp
lea
test
jnp
lds
addl
sbb
lea
sahf
fwait
mov
jmp
sub
cld
addl
add
pop
push
adc
in
pop
pop
fistpl
cmc
jns
dec
push
outsl
adc
mov
inc
pop
mov
push
dec
test
mov
inc
inc
mov
daa
jnp
mov
inc
into
jle
int
mov
adc
xor
pop
stos
sti
out
or
mov
inc
xchg
push
and
mov
jle
arpl
mov
push
in
scas
and
clc
ret
arpl
mov
dec
ficomps
cltd
rcll
pop
inc
fdivrl
andb
mov
popf
lods
jnp
lds
jae
xchg
aad
hlt
mov
pop
inc
mov
add
sbb
jbe
jg
shl
dec
sub
lods
jmp
jle
fwait
xchg
xorl
jnp
sub
adc
inc
std
iret
arpl
dec
or
push
sub
fadd
lods
sub
pop
inc
cmp
movsb
push
mov
int3
mov
mov
xlat
xchg
mov
mov
fstpl
mov
or
adc
aam
inc
inc
mov
xor
cmp
xor
jbe
popa
push
lds
mov
popa
add
cltd
scas
xchg
pop
test
ss
lods
je
pop
outsl
cld
pop
ss
and
out
and
inc
sahf
gs
lods
xchg
push
cmpsl
pop
adc
into
dec
xchg
pop
jl
stc
dec
jge
ljmp
push
ret
rcr
inc
sbb
xor
mov
add
add
add
loop
lds
xor
mov
aad
adc
mov
mov
mov
cwtl
sub
or
inc
pop
fdivl
notb
mov
jmp
jmp
mov
daa
and
dec
and
pop
dec
addr16
test
mov
xchg
aaa
rcrl
and
loope
cltd
fsubrp
mov
mov
add
cwtl
loop
lret
imul
jmp
cmp
outsl
cmp
jl
shll
cmp
test
dec
loop
fsubp
pop
jno
icebp
lods
cmpsb
mov
jge
flds
loopne
les
arpl
xor
out
jle
test
je
push
call
leave
scas
mov
fdivl
orb
push
push
xchg
jle
pop
mov
fistpl
xchg
ja
shrl
fiadds
mov
adc
mov
inc
les
pushf
xchg
mov
cmp
mov
and
push
mov
mov
pushf
lods
in
mov
xchg
inc
popf
je
pusha
mov
dec
push
fdivl
push
aaa
mov
xchg
xchg
fildl
lcall
sbb
cmp
je
mov
cmp
push
fildl
push
leave
cmpsl
push
xchg
fldcw
or
lret
popf
dec
add
in
fdivr
nop
dec
cwtl
add
push
pushf
outsb
mov
rorb
push
scas
sbb
lock
jge
push
in
shlb
cmp
xchg
dec
xchg
dec
faddl
pop
pop
cmc
add
xchg
jo
dec
adc
shrb
mov
out
mov
fldt
cmpsb
test
sti
cmpb
jbe
cmp
pushf
stos
fcmovb
fstl
enter
xor
sbb
pushf
push
jnp
xor
test
lods
ret
and
mov
or
sbb
mov
mov
inc
scas
out
xor
shlb
sub
pop
inc
pop
sub
test
fmulp
dec
lods
cmp
inc
outsl
fcoml
or
test
pop
into
imul
inc
cmp
std
testb
lcall
push
daa
or
push
outsb
xchg
cmp
icebp
lods
imul
inc
xchg
hlt
fdivr
sub
sbb
sub
test
les
xchg
jb
mov
and
push
mov
nop
sbbl
insl
movsl
or
cmp
cmp
decl
sti
mov
push
mov
popa
call
adc
mov
dec
jl
pop
pop
fs
fsubrs
inc
out
mov
dec
sub
ficompl
ret
imul
add
inc
push
gs
js
lods
xchg
sbb
jl
inc
divl
mov
inc
cmp
orl
add
sub
into
setl
arpl
jmp
mov
enter
dec
adc
out
inc
std
mov
jle
loopne
fidivs
add
add
rolb
mov
push
lahf
jno
push
push
inc
das
int3
arpl
mov
jo
mov
and
gs
mov
sub
mov
pop
jmp
pushf
mov
movl
imul
aam
add
mov
rolb
mov
in
lret
dec
loop
mov
adc
inc
cwtl
lret
mov
fsts
xchg
shrb
test
xor
jbe
scas
lock
adc
add
adc
cmp
fcomi
pop
mov
insl
adc
and
outsl
lods
gs
jle
aas
jle
outsl
mov
jp
cmp
dec
xchg
pop
push
mov
lret
jl
xchg
leave
ficoms
mov
insb
sub
mov
test
ret
daa
mov
mov
clc
jg
xchg
jp
fistps
sbb
mov
and
in
push
icebp
jne
aad
stc
xchg
xlat
loopnew
inc
inc
clc
cltd
adc
cld
sahf
sub
jae
cli
adc
insb
rclb
scas
dec
nop
add
push
arpl
xchg
sbb
mov
sahf
adc
mov
scas
or
fst
jecxz
push
cs
loop
sub
mov
push
sbb
fistps
push
fiadds
xchg
hlt
inc
repnz
pop
rorl
loop
into
aad
push
mov
add
xchg
mov
fisttpl
cmp
xor
push
aad
sbb
adc
sbb
jge
sahf
mov
xor
mov
inc
js
pop
rol
xor
inc
ss
outsl
mov
xchg
subl
sbb
mov
in
gs
out
out
ljmp
add
nop
scas
push
popf
aad
gs
push
in
jne
fwait
iret
dec
hlt
mov
sbb
fldcw
inc
int
or
mov
mov
popa
xor
dec
xor
dec
rclb
push
pop
add
xchg
add
cmp
js
orb
pop
sti
popf
cli
cwtl
shl
inc
out
push
in
xor
arpl
or
aad
mov
movsb
push
cs
into
or
pop
aaa
fsubrs
fdivl
jp
jmp
add
jbe
pop
in
mov
std
cmp
add
push
mull
loope
cs
loopne
inc
xchg
paddw
pop
in
and
lret
std
mov
aas
and
adc
and
mov
jns
jae
dec
negl
mov
mov
add
mov
pop
or
push
insb
hlt
push
jecxz
cmp
or
fisubs
fsubs
mov
mov
mov
enter
cli
xlat
das
fs
mov
xor
mov
push
mull
out
or
sub
mov
adc
adc
add
cmpsb
sti
dec
lock
ret
in
push
inc
mov
in
jns
addr16
ja
popa
or
in
xchg
insl
lds
push
push
cld
in
mov
stos
push
mov
adc
sarb
lret
jle
repz
out
mov
or
aaa
pslld
mov
rclb
add
jp
in
cli
adc
les
mov
loopne
sbb
scas
push
mov
loopne
stos
or
sbb
js
pop
dec
push
pop
icebp
mov
push
ljmp
lret
arpl
scas
je
add
addr16
gs
push
jne
rcr
insb
xor
xchg
pushf
add
xchg
mov
push
int3
mov
and
dec
xchg
daa
mov
int
adc
push
jae
push
or
dec
cmpsb
adc
sbb
in
iret
imul
jle
pop
es
cmpsl
push
push
gs
push
sbb
dec
sub
mov
mov
outsb
pop
mov
sbb
pop
pop
ljmp
and
das
test
pop
lahf
jno
pushf
cmp
lock
inc
pushf
xchg
sbb
xchg
out
jle
movsl
jecxz
sub
js
test
ss
sub
repz
movaps
mov
mov
jg
cltd
pop
push
sbb
jp
cmp
sub
lahf
sbbb
lcall
adc
pop
mov
nop
aaa
jo
sbb
adc
mov
arpl
jmp
sbb
cmp
pop
cltd
loop
or
dec
push
sub
push
pop
pop
add
sarb
out
and
stc
push
mov
pop
pop
loop
cmpsl
xchg
popa
mov
mov
xchg
ficompl
mov
xchg
in
add
fnstenv
xchg
pusha
ljmp
xchg
xlat
sbb
mov
loopne
dec
sub
inc
jbe
outsl
dec
insl
test
imul
jo
sbb
sub
lret
xor
fistl
jg
andl
sbb
push
mov
mov
xchg
jnp
in
or
mov
xor
movsb
mov
adc
mov
fsubr
fisttps
loopne
fidivl
mov
dec
mov
fisubs
sbb
popa
addl
cmpb
push
jbe
or
add
sbb
aaa
pop
pop
mov
or
and
jb
pop
cmpsl
inc
pop
jno
lret
icebp
pop
mov
cmp
cs
mov
xchg
loope
ss
adc
cwtl
scas
inc
sbb
out
enter
mov
mov
xchg
iret
ljmp
push
jno
or
jg
bnd
scas
sti
movsb
lcall
push
int3
xchg
je
sub
rcr
mov
movups
icebp
lods
sbb
aas
enter
cmpsb
jns
aam
add
lods
jo
add
pushf
inc
adc
pop
ja
push
push
sti
lcall
push
pushf
repnz
aam
cs
push
js
stc
mov
jmp
outsb
and
loope
lods
or
xchg
pop
or
stos
add
mov
and
pop
mov
inc
in
test
pop
lahf
xchg
out
test
mov
xchg
nop
and
xor
dec
pop
pushf
lret
or
mov
mov
mov
sub
and
mov
mov
jl
lods
xor
rcl
into
popa
imul
movsb
mov
call
test
jbe
mov
cmpsl
in
sub
test
inc
adc
mov
into
pop
xchg
xchg
inc
cmp
sbb
cs
enter
jns
ss
arpl
lods
inc
or
popa
sub
das
popa
push
sbb
repz
pop
jle
sbb
cmp
icebp
inc
enter
test
add
in
test
or
jecxz
or
add
jbe
aaa
push
inc
lcall
or
sbb
rcll
inc
jno
mov
xchg
addr16
mov
push
mov
jp
sub
sbb
jl
adc
lret
mov
mov
cld
and
rorl
bound
add
pop
je
xlat
cli
cltd
add
shrb
fs
xor
mov
xchg
adc
cmp
call
inc
inc
lock
pop
pop
das
ret
ss
adc
jl
jns,pt
mov
pop
test
push
inc
inc
sahf
out
outsb
fwait
jno
test
adcl
mov
mov
arpl
inc
pop
xlat
mov
mov
mov
jge
mov
jo
nop
xchg
test
sbb
aaa
adc
cli
cmp
js
or
mov
xor
mov
call
adc
sub
popa
jge
ret
xchg
adc
jno
push
call
jns
push
shrb
dec
imul
xchg
xchg
xlat
loopne
adc
repz
cmpb
mov
out
push
mov
xchg
xor
xchg
pop
sbb
loop
aas
movsl
into
imul
pop
int
das
out
fs
dec
dec
rolb
and
outsl
jae
rorb
notb
repz
push
psraw
popf
or
stos
shr
test
or
xor
jmp
jno
or
data16
daa
int
jno
ss
movsl
ljmp
xor
rcll
xchg
dec
pop
mov
mov
xchg
mov
popa
das
jbe
add
sbb
push
lods
psubq
das
in
cltd
push
cmp
add
and
cmc
data16
out
fmul
sbb
and
fmul
cmc
pop
pop
loop
mov
and
sub
aas
inc
jnp
stos
xchg
mov
loope
or
adc
shrl
sbb
std
iret
add
push
jns
divb
xchg
movb
pop
xchg
movlhps
push
shrl
leave
push
fbld
ror
and
add
and
test
movsb
push
pushf
xor
lcall
pop
sbb
andb
jecxz
cmpsl
sahf
pop
loope
arpl
mov
loopne
scas
in
stos
xchg
adc
cmp
jo
or
lea
es
popf
dec
negl
sub
fmul
lret
mov
dec
scas
cmp
popf
sub
xor
sub
sti
mov
subb
mov
mov
pop
cmpsb
cli
xor
hlt
mov
enter
add
jbe
cmc
popa
mov
cltd
loopne
orl
fs
sub
aam
into
cmpsl
add
gs
adcl
shlb
ds
sub
adc
scas
mov
inc
or
rorb
int3
pcmpeqb
stos
push
or
pushf
sarl
aas
mov
or
xor
inc
ret
sub
adc
xor
cmp
push
cmp
mov
cmpsl
push
cmp
int3
and
jo
out
mov
cmpsl
imul
shll
jg
mov
fidivrl
rcll
ljmp
insl
ret
mov
inc
lret
or
jno
js
xor
sub
lods
lahf
xchg
dec
pop
aaa
pushl
push
sbb
mov
hlt
adc
repnz
pusha
or
push
push
mov
xor
test
mov
xor
movsl
cmc
test
cmc
mov
push
sti
cmpsb
ljmp
lock
nop
pop
cmpsb
aas
mov
sub
stos
pandn
fsubr
lahf
enter
jae
jo
cmp
mov
call
push
in
xor
xchg
icebp
pop
ret
decl
jb
cli
stos
cli
sbb
mov
mov
das
cwtl
dec
loop
lea
call
loopne
xchg
sub
xchg
adc
mov
or
es
push
dec
mov
insb
call
imul
out
es
jno
cmp
rcrl
test
cli
fwait
sbb
mov
add
sbbb
cmc
fistpl
mov
out
aam
inc
arpl
mov
xor
push
xor
repnz
cmc
fcmovnbe
stos
mov
xor
jne
xchg
sbb
popf
sbb
dec
xchg
int
or
ret
les
sbb
pop
int
adc
mov
ficompl
stos
cs
or
mov
cld
cwtl
lcall
cmpsb
es
sub
pop
push
cmpsl
or
shrl
imul
insl
mov
sub
adc
call
adc
out
pop
sti
xor
lods
test
jbe
pop
fs
push
mov
xchg
inc
lock
iret
mov
pop
or
dec
mov
mov
repnz
sahf
fbld
mov
call
inc
lds
ret
dec
insb
xchg
or
adc
or
movsl
mov
push
adc
xor
outsb
inc
outsl
outsl
push
add
xor
lcall
je
pop
aaa
cmp
push
xchg
sub
mov
lahf
scas
pop
or
xchg
cltd
push
push
mov
adc
sub
sub
jnp
fsubs
mov
jns
dec
lret
repz
in
lahf
cld
and
or
les
or
xchg
xor
hlt
xor
or
sbb
add
jae
stos
inc
xchg
jecxz
sbb
out
sarl
loope
dec
mov
xchg
mov
in
add
shll
xchg
mov
mov
subl
out
xlat
and
out
cwtl
neg
jg
cli
mov
gs
sbb
imul
mov
sbb
aam
outsl
xchg
inc
test
cmp
mov
incl
mov
dec
enter
xor
jne
je
clc
popa
pop
xor
rcrl
shl
lds
jge
je
pop
xor
fwait
add
push
pushf
cmc
shr
fnsave
sbb
jns
repz
push
fcomi
int3
out
mov
sub
xchg
dec
cltd
int3
out
lock
jns
test
pop
les
repnz
add
adc
add
mov
fwait
xlat
xor
and
stos
mov
pop
inc
xchg
mov
xor
push
jns
sbb
sti
pop
xor
push
repz
inc
out
sahf
ss
in
enter
xlat
aas
in
inc
push
outsb
out
cmpsb
push
fcoms
lods
mov
jo
rorl
or
push
aam
hlt
sub
sbb
inc
std
xchg
sarb
ret
push
cli
adc
mov
addr16
mov
movsl
stos
add
sbb
lds
movsl
repnz
aam
outsl
and
mov
stos
ret
in
repz
and
or
lock
orb
dec
jl
xchg
ljmp
mov
add
ret
sub
or
outsb
mov
push
sub
movsb
jmp
or
das
add
scas
pop
fcmove
jno
xchg
and
jle
iret
cld
popf
stos
push
bound
shrb
notl
shll
dec
rcr
sbb
icebp
mov
movsl
pop
enter
fidivs
nop
js
je
inc
data16
outsb
loop
stos
pop
jo
mov
fstpt
repz
or
xchg
sub
cwtl
pop
ss
je
jno
pop
pop
cmp
jecxz
in
lret
out
sbb
cmp
pop
lcall
outsl
mov
in
imulb
test
cmp
rclb
mov
cmpsb
xor
test
pushf
loop
decb
or
rcr
adc
ljmp
data16
cmp
lret
popf
mov
mov
ret
pop
in
int
outsb
outsb
pop
or
add
cmpsl
xlat
dec
cmpsb
out
sbb
mov
fwait
add
sub
mov
addr16
sbb
pop
orb
cmp
sbb
in
pop
jg
cltd
xchg
pop
enter
pop
jp
popa
lahf
mov
sbb
je
xchg
xchg
movl
or
cltd
test
leave
aam
pop
mov
shrb
jo
insb
jg
or
inc
ljmp
imul
xchg
mov
pusha
and
cmp
jns
sti
test
jmp
ret
pop
cld
inc
sub
mov
out
mov
jge
mov
or
xor
cwtl
or
out
pop
sbb
fcomps
pop
in
std
dec
xchg
sub
cli
in
test
xchg
add
mov
popa
int3
jae
lret
pop
mov
pop
pop
pop
adc
int3
mov
inc
dec
xor
mov
xchg
lea
jmp
ss
xchg
and
adc
out
shll
dec
mov
or
push
xchg
pop
mov
or
cld
cli
or
pop
cltd
es
ds
mov
popf
add
scas
cmp
std
out
sbbb
cs
sti
or
or
ret
popa
inc
mov
sbb
addr16
inc
lret
xchg
cwtl
out
or
jmp
test
push
out
cmpsb
popa
sarb
dec
sbb
dec
into
and
sbb
cmc
mov
push
insl
xchg
addr16
ret
inc
iret
repnz
adc
adc
cmp
xor
cmc
or
sbb
lcall
add
push
mov
out
mov
add
adc
pop
and
mov
dec
cli
aaa
testb
lods
inc
mov
movb
jns
arpl
mov
roll
call
xchg
fs
adc
push
mov
cmp
dec
mov
mov
call
cmp
adc
jp
and
pop
out
xor
jmp
mov
popa
testb
in
hlt
dec
cmpsl
clc
out
fidivs
adc
push
dec
sti
in
iret
sbbb
sub
push
inc
xor
sbb
xchg
js
scas
ret
and
arpl
push
dec
pop
rorl
push
cmp
dec
insb
mov
repz
cmc
dec
fimull
leave
rcll
push
push
mov
xor
sbb
das
dec
sbb
outsl
loop
dec
sub
adc
mov
mov
mov
in
mov
fld1
sbb
leave
cmpsb
fsts
out
in
call
inc
hlt
sbb
mov
mov
or
inc
je
mov
lcall
jb
sub
sub
pusha
jle
je
lret
cmp
in
adc
pop
and
mov
ret
insb
pop
subb
in
pop
fistpl
sbb
repz
pop
cmp
cmpsb
sarl
daa
lret
mov
aam
sahf
test
pop
pop
fadds
adc
repz
mov
push
cmpsb
aam
push
shrl
data16
rep
dec
lds
adc
pop
shl
sub
dec
sub
popf
loop
add
ret
outsb
mov
xchg
sti
xor
sbb
jnp
cmp
stos
mov
adc
push
push
sub
adc
nop
push
and
dec
inc
out
in
push
xchg
adc
arpl
jp
imul
cmp
cmc
pop
hlt
push
test
adc
out
push
bound
sti
shrb
imulb
aas
push
into
push
lods
cmp
sub
lret
loopne
icebp
cli
mov
mov
icebp
pop
lds
jnp
sub
fnstcw
push
movsl
ficompl
aad
xchg
pop
es
adcl
mov
mov
movsb
roll
pop
jno
inc
and
and
push
in
je
push
int
jnp
push
outsl
ret
loope
cmp
cmp
push
cmp
mov
orb
mov
sub
jo
fiadds
add
hlt
adc
mov
push
inc
negl
xor
mov
ret
sbb
push
mov
sahf
es
sub
adc
and
ss
or
xlat
jne
testb
cmp
pop
fnstenv
jmp
jg
mov
es
jno
sub
cld
jmp
mov
outsl
pop
fidivl
aam
subb
int
mov
insb
xor
bound
mov
ds
mov
cmp
add
cmp
sbb
les
imul
loope
into
out
rol
xor
and
mov
xchg
jo
dec
pop
cmpsl
mov
das
adc
cli
mov
out
dec
fstpt
pop
ret
movsl
into
mov
test
jne
push
icebp
sub
jns
cmp
rolb
and
out
push
sbb
nop
sub
jp
into
popf
jns
add
in
cmp
ficompl
cmp
subl
or
sbb
les
mov
push
or
and
add
pop
xchg
xor
out
sbb
je
mov
shr
ret
mov
inc
push
push
mov
popl
push
push
jne
int
ret
mov
jl
lret
push
mov
adc
loope
fcoms
imul
cmp
push
or
mov
inc
repnz
cmp
adc
sub
pop
cmp
dec
out
icebp
scas
insb
xchg
lds
pusha
xor
push
mov
xor
in
cli
inc
outsl
push
fcomi
jno
pop
ret
sbb
jp
sbbl
in
fnstcw
out
mov
xchg
lods
sub
jns
std
fcomps
lret
daa
pop
ret
add
and
dec
pop
or
dec
aad
xchg
jne
xacquire
inc
adc
and
jle
int
add
inc
jle
aas
fisubl
fimuls
push
fildl
cli
jbe
sbb
inc
rorb
jae
sbb
insl
lcall
nop
mov
xor
shrl
xchg
jbe
or
rorl
scas
xor
popa
cmp
pop
sub
call
xchg
or
add
sbb
fsts
lods
mov
fimuls
cmp
ljmp
sbb
movsb
dec
leave
adc
push
clc
mov
out
stc
xchg
call
cltd
jg
sub
jno
sbb
lods
cli
pop
jmp
ds
dec
push
mov
cli
sub
push
add
jbe
jmp
xor
mov
sbb
add
sub
mov
sahf
jbe
push
or
push
pop
or
jle
sbb
xchg
adc
mov
inc
sbb
dec
lcall
or
gs
add
adc
xor
pop
and
popa
nop
mov
push
clc
lods
cmp
les
bound
mov
shrb
dec
jp
fs
sub
arpl
cmp
cmp
repz
and
sub
mov
in
push
push
xor
leave
adc
or
aam
cltd
repnz
stos
mov
cmpsb
sbb
fnstcw
sti
inc
sbb
adc
lcall
jmp
inc
mov
or
inc
push
mov
cli
in
pop
mov
out
xlat
cmc
out
dec
mov
push
ds
adc
jb
mov
adc
imul
xor
outsb
in
movsl
out
out
or
sti
pop
repz
scas
out
leave
lods
repnz
push
pop
ljmp
pop
dec
xchg
data16
gs
mov
in
fsub
adc
push
mov
jne
pop
xchg
movsl
cmp
jp
sbb
mov
aam
pop
adc
push
filds
out
test
pop
inc
jle
out
push
push
iret
lds
shll
mov
out
jno
jg
jno
jo
mov
jl
mov
xchg
adc
cmovae
dec
insb
sub
sub
push
mov
mov
scas
or
mov
jbe
les
xor
rcrb
jle
adc
push
or
sub
iret
xchg
jbe
jge
fdivp
sbb
pop
push
xchg
stos
or
sti
arpl
mov
inc
lea
repz
adc
pop
icebp
add
sar
gs
jle
dec
mov
pop
int
adc
or
mov
inc
test
cmp
jle
cmpsb
daa
shld
shll
jno
repz
fwait
jle
mov
leave
cs
and
mov
jbe
fs
clc
rcrl
sub
dec
roll
jl
icebp
add
aaa
dec
cmp
rclb
mov
int3
lods
insl
add
and
test
push
mov
out
sbb
jo
mov
dec
popf
or
inc
inc
notl
mov
and
imul
sub
iret
outsl
jge
sub
mov
int
adc
inc
inc
inc
enter
dec
xlat
dec
mov
pop
cmp
pushf
jge
cld
jno
mov
sahf
jnp
shll
and
push
and
notb
xor
push
lahf
xchg
test
imul
std
clc
and
lods
jecxz
inc
sti
fbstp
sub
std
pop
inc
cmp
into
in
decb
addb
mov
push
cmp
test
movsb
and
mov
sub
int
and
xchg
jne
or
mov
jbe
pop
adc
pop
sar
aaa
cmpsb
push
mov
lahf
bnd
lcall
and
sti
das
adc
out
sbb
sarl
jle
lock
js
sarb
push
xor
fisubl
hlt
aam
sub
in
clc
fwait
pop
and
btr
push
das
cmp
jle
mov
jge
add
shl
jo
addr16
add
movsb
cmp
ret
pop
inc
roll
mov
xor
mov
mov
repz
iret
loopne
mov
lods
pop
push
in
ljmp
int
cmpb
test
add
mov
mov
jae
push
cmp
jne
add
popf
shl
test
insl
fbstp
adc
mov
outsb
incl
mov
ds
mov
lret
fnsave
pop
or
cmp
in
inc
jns
push
fisubs
testb
xchg
out
cmp
pop
fadds
ja
mov
dec
xor
je
cmp
in
clc
in
mov
stos
call
inc
mov
je
jle
inc
push
jl
stos
mov
cmp
leave
pop
sarb
stos
mov
popf
icebp
push
data16
mov
jo
jl
and
lret
adc
jge
loope
mov
ds
stos
stos
add
mov
imul
inc
fwait
jg
rol
pop
gs
bound
jg
repz
cvtps2pi
mov
cmp
adc
das
stos
sahf
loope
and
lret
xor
aaa
popa
add
inc
je
aam
imul
xlat
xor
aaa
ret
push
sub
addr16
fildl
cmpsl
sti
cmpb
xor
test
sub
in
inc
sbb
adc
rolb
adc
cmc
sub
push
mov
mov
sub
add
dec
loop
mov
lret
aaa
insw
mov
cmpsl
cmp
lret
sahf
out
push
mov
mov
lds
jge
or
mov
pop
mov
mov
js
cld
mov
dec
or
enter
sub
dec
loop
sbb
aad
and
or
js
mov
repnz
mov
push
jb
leave
aaa
push
cmc
mov
or
mov
jle
in
xor
lods
push
mov
insb
dec
push
cli
faddl
mov
xor
fcompl
mov
jg
mov
fwait
mov
imul
mov
out
push
sbb
xchg
push
loop
jbe
cmp
shlb
leave
subl
movsl
dec
xchg
pop
or
lods
dec
push
pop
pop
rcll
jbe
sbb
dec
or
sub
adc
loopne
orb
dec
jmp
ret
ret
mov
inc
and
jp
xchg
and
es
mov
fldenv
pusha
fwait
das
pop
dec
loope
jg
inc
inc
cld
mov
out
jl
push
fbld
popa
or
inc
adc
pop
or
sub
jo
aad
sbb
pop
subl
das
cmp
or
mov
cld
idivb
push
ljmp
aam
cmp
not
jge
sub
sbb
inc
adc
pop
das
inc
push
cmp
fwait
hlt
loopne
cld
add
cmc
data16
mov
pop
loopne
inc
cli
es
enter
add
sbb
pop
enter
jae
shlb
and
or
out
mov
push
notl
jg
clc
mov
cmc
push
or
adcl
jge
orl
stos
icebp
sahf
mov
xchg
mov
push
fcmovnb
clc
jae
aam
sub
test
mov
ret
hlt
cwtl
mov
out
ret
and
or
pop
clc
scas
and
mov
into
rol
adc
clc
cmp
and
jbe
xchg
pop
bound
into
jl
out
pop
imul
pop
xor
mov
mov
add
ss
xor
dec
sbb
bound
jecxz
pop
xor
mov
jo
fst
adc
and
loopne
dec
add
mov
shrl
pop
sbb
jecxz
cmp
idivl
stos
lret
jns
or
push
movsb
incb
cld
sub
in
xchg
lods
add
call
push
in
bound
mov
push
push
out
mov
ds
push
icebp
add
mulb
push
aad
test
push
adc
mov
xchg
mov
in
flds
loope
sbb
in
sub
data16
mov
das
in
xor
pop
jecxz
inc
push
mov
cmpsl
mov
insb
push
cmp
jbe
xor
sbb
xor
int
cmp
cmpb
mov
jg
loope
mov
pop
jmp
mov
fwait
scas
or
push
sahf
lcall
cmpsl
jg
mov
mov
stos
push
aas
lds
testl
pop
push
mov
sub
jp
icebp
pop
arpl
gs
mov
orb
insb
sub
sahf
fdivrl
or
cli
arpl
imul
or
or
dec
xchg
subb
jg
stos
mov
inc
dec
mov
xor
mov
nop
jmp
les
jne
pusha
xchg
test
jle
fwait
xor
jns
push
repnz
scas
jge
jns
pop
adc
lea
pop
scas
or
call
lahf
lods
nop
nop
adc
and
mov
into
add
loop
dec
adc
arpl
xchg
sub
cmp
push
out
dec
shrb
lds
add
lret
cmp
scas
cmpsl
test
data16
repz
push
pushf
mov
les
mov
jne
dec
loopne
jne
mov
out
pop
out
mov
xchg
out
lods
push
jmp
cld
add
jecxz
ss
gs
dec
xor
sub
sbb
or
mov
aam
adc
or
fisubrs
das
outsl
cli
mov
cmp
inc
stc
mov
jecxz
and
cwtl
jmp
lahf
push
push
xchg
rcrl
inc
xchg
jp
imul
out
push
loopne
pop
xchg
aaa
shl
sub
mov
movsb
dec
fnsave
test
sub
movsb
call
cmpsl
inc
ds
cld
fincstp
cltd
lcall
jnp
sub
inc
jo
shrl
pop
stos
cld
adc
push
sub
and
dec
pop
jle
mov
sub
stos
pop
add
movb
push
push
add
pop
and
fidivs
call
pop
jmp
sbb
movl
add
xor
movsl
mov
pusha
icebp
add
lods
aas
or
sbb
mov
mov
pop
push
int
std
ljmp
jecxz
push
repz
sbb
or
add
mov
int
pop
adc
pushf
dec
cmc
dec
test
mov
sbb
enter
filds
pop
and
xor
dec
out
or
push
and
jl
jo
mov
dec
shlb
push
and
fiaddl
sbb
adcl
xor
pop
cmpb
out
dec
mov
in
imul
mov
loope
or
stos
pusha
cld
outsb
ja
data16
xchg
push
push
cmp
mov
dec
sti
rcll
cld
iret
jb
loope
outsb
cmp
xor
das
leave
sbb
sti
lods
lods
or
push
fistpll
arpl
or
cmpsl
jne
aaa
dec
xchg
loop
jecxz
jae
xchg
cmpsb
or
arpl
icebp
or
and
xor
pop
lcall
sub
insl
lcall
mov
mov
sbb
cmp
xchg
dec
mov
push
add
out
es
stc
out
shr
and
xchg
mov
pop
adc
mov
sub
rolb
or
loop
dec
cmpsl
out
jo
mov
lahf
cli
repnz
jl
sti
daa
adc
jb
and
cs
pop
andl
popw
cmp
and
popa
jmp
mov
loopne
iret
xchg
add
push
pop
stos
pushf
stos
arpl
sub
fwait
mov
lods
imul
add
cld
fildll
ret
add
test
fistpl
lret
mov
add
fiaddl
faddl
mov
int
add
repnz
mov
pushf
sub
adc
stos
sbb
ja
movsl
repnz
das
dec
inc
ja
lret
sub
fdivrl
loope
popf
ret
pop
push
fwait
jle
xor
pop
mov
jae
shrb
mov
mov
add
lods
pop
xchg
jp
add
es
gs
pusha
push
loopne
out
lods
jbe
and
xchg
iret
cwtl
in
inc
push
rorb
movsb
repnz
nop
push
cmp
push
inc
out
inc
cmp
xor
lret
test
xor
outsl
cltd
pop
mov
cmp
and
sbb
mov
sbb
repnz
sbb
push
fbld
ret
cmpsb
jmp
mov
movsb
sub
out
popa
sbb
jl
fwait
adc
aaa
mov
cmp
cmpsb
mov
mov
add
fistl
int3
inc
fisttpll
sbb
mov
into
xor
adc
jmp
pop
cmp
jnp
mov
adc
xlat
cmpsl
mov
and
cmp
dec
xchg
ret
push
push
lret
xor
test
and
clc
sub
jle
xlat
mov
daa
dec
cwtl
inc
std
xchg
mov
xor
pop
push
push
jb
gs
stos
push
arpl
or
jae
add
cmpsb
or
dec
int3
pop
int3
arpl
or
das
lods
dec
or
and
mov
jl
lea
scas
out
subb
inc
popa
jmp
ds
push
mov
cmp
clc
stos
add
popf
cmpsl
push
divl
or
cmp
test
sarb
adc
inc
mov
pop
xchg
out
test
mov
aas
xchg
shll
js
dec
inc
addr16
adc
fisubrl
mov
jno
cli
rclb
jge
jle
and
imul
dec
mov
xchg
sarl
jbe
adc
adc
add
mul
incb
decl
test
jmp
cld
iret
fst
in
pop
add
cmp
sbb
imul
movsb
fdivrs
mov
fildl
stc
push
clc
lds
dec
push
xor
sti
pop
fiaddl
fwait
pop
dec
jmp
int
jo
dec
mov
idivl
add
loop
shl
sarl
das
push
into
jmp
ret
lret
fstpl
ja
push
arpl
xchg
fs
aas
push
jl
pop
rcll
ds
test
in
lret
cmpsb
lods
adc
pop
and
jo
mov
or
cmpxchg
sub
call
and
pop
xchg
icebp
sbb
rorb
pop
arpl
std
sub
pop
pop
shrb
xlat
jg
mov
xchg
movsb
fiaddl
imul
adc
mov
out
clc
or
jne
loope
jae
aad
add
test
test
jle
sbb
mov
xor
call
or
dec
cmp
repnz
mov
inc
gs
adc
ss
dec
sub
sbb
or
lahf
push
mov
mov
test
lock
xchg
cmp
insl
sarb
stc
ficoms
scas
loope
leave
inc
shlb
adc
ret
push
call
cmp
mov
push
aas
jne
popf
and
test
sub
pusha
push
lret
mov
bnd
aaa
ret
mov
sbb
mov
and
out
lock
mov
jle
mov
or
dec
mov
mov
arpl
add
cmp
scas
inc
jbe
push
enter
push
sbb
jne
dec
push
rcrl
lods
jns
inc
jbe
hlt
cmp
dec
push
cmc
xchg
or
out
fmuls
fstpt
lcall
push
and
pop
in
jno
mov
sub
or
loop
push
mov
cmpsl
and
out
in
push
movsl
mov
testl
ret
mov
sbb
adc
clc
movsl
jp
or
lret
adc
insb
xchg
jne
mov
ret
repz
inc
pop
sbb
pop
sbb
bound
repz
fnsave
push
popf
xchg
mov
stc
loop
cli
mov
dec
fmuls
pop
push
leave
pop
test
xor
cli
ret
xor
push
push
adc
sub
out
and
mov
lds
push
aam
shl
mov
ds
sub
pop
insl
jge
and
decl
xchg
imul
pop
sbb
repz
jne
inc
pop
icebp
sbb
or
popa
cs
inc
popl
pusha
mov
in
aaa
hlt
mov
or
int3
mov
sub
ljmp
pop
jnp
popf
xchg
inc
xchg
mov
fiadds
out
cmp
or
mov
xor
test
jno
pop
outsb
mov
push
pusha
add
in
pop
fmuls
pop
mov
loop
stos
mov
insb
gs
fwait
pop
pop
or
or
shll
bound
mov
or
js
push
cli
inc
int
rclb
xchg
fs
cmp
mov
insb
ret
jo
mov
sahf
lahf
lahf
mov
or
mov
dec
ret
enter
mov
pop
adc
pop
xchg
jge
mov
jnp
cmp
iret
shll
push
imul
adc
clc
lea
jbe
inc
dec
sbb
adc
ljmp
jo
push
add
pop
xchg
and
xor
dec
rcrb
mov
repz
jb
dec
cmp
xchg
pop
jmp
std
xchg
out
pop
push
leave
xchg
mov
ljmp
cli
sbb
xchg
xchg
negl
push
mov
out
xchg
movb
fildll
xchg
dec
out
out
imul
inc
inc
and
rcrl
pusha
shrl
lds
dec
scas
enter
stos
call
fimuls
jo
testb
inc
jg
mov
stos
xchg
mov
arpl
jns
push
cmp
loopne
jl
and
cli
scas
or
adcl
mov
std
inc
dec
xor
pop
mov
mov
cmpb
mov
mov
inc
xchg
sub
xchg
int3
jb
inc
adc
pop
sub
fdivs
call
repnz
outsb
mov
in
popf
or
cld
cmp
arpl
mov
mov
movb
mov
mov
mov
outsb
and
sbb
sbb
mov
cmp
sub
aaa
pop
push
movsl
jmp
nop
data16
jmp
mov
jb
inc
cmpl
movsl
mov
aas
in
stos
inc
sbb
pop
testl
pop
lahf
rcrb
push
adc
cmp
pop
mov
cltd
mov
outsb
int
enter
je
sub
push
lret
je
mov
sub
out
mov
jle
leave
int
push
push
filds
or
dec
inc
dec
fnstenv
out
xlat
add
lahf
adc
shr
push
add
cmpsl
push
push
bswap
sahf
mov
or
sti
leave
scas
loopne
adc
and
pop
sub
cmp
pop
sbb
rolb
cmp
mov
ficoml
lret
xor
iret
cmp
xchg
jge
push
jne
lds
and
jmp
dec
sbb
lods
es
sahf
push
cs
mov
movl
outsl
mov
int
pop
mov
pushl
jmp
jg
mov
push
sahf
test
xchg
fwait
cltd
pop
loope
hlt
inc
aad
add
dec
mov
and
daa
mov
xlat
leave
pop
pop
and
divl
test
mov
xchg
cmp
int3
cmpsb
mov
sub
jns
add
test
sub
repz
cld
mov
stc
in
out
or
dec
mov
push
mov
or
divl
inc
cmp
cli
pop
test
scas
sahf
out
jo
jo
fscale
fsubrs
jbe
mov
xchg
or
cwtl
xchg
xor
push
fcom
fsubrl
aam
sbb
mov
add
push
xchg
pop
jb
push
int3
jp
jne
adc
sub
aaa
call
in
or
out
jge
push
xchg
adc
xchg
push
pop
mov
and
daa
ds
neg
mov
call
cmp
sti
outsl
or
add
pop
daa
sub
cmp
push
and
mov
push
shrb
and
push
sbbb
mov
dec
faddl
jbe
jp
int3
jl
pop
addl
aaa
ds
cs
add
in
aas
loopne
sbb
test
mov
add
mov
mov
movsb
cmp
mov
sub
inc
bound
fsubrs
test
popa
enter
sbb
shlb
test
mov
lea
dec
movl
rorl
ret
dec
adc
sahf
add
hlt
or
fwait
jg
mov
iret
div
mov
sarl
das
ffree
push
out
cld
test
cld
mov
mov
cwtl
mov
cmp
rcll
mov
push
sbb
cmp
fcmovbe
icebp
xchg
push
outsl
mov
mov
jle
push
bound
sbb
mov
jmp
and
jecxz
lock
mov
sub
add
sbbb
add
jl
jns
daa
outsl
push
dec
sub
icebp
cmp
fcompl
data16
mov
std
std
xchg
dec
cltd
enter
test
xchg
hlt
lahf
dec
out
jns
adc
adc
cmp
xchg
sub
xor
cli
xor
out
stos
mov
sbb
imul
pop
or
adc
jae
sbb
adc
push
fs
nop
cmp
pop
adc
sbb
adc
add
lcall
popf
repz
adc
jmp
pop
leave
stos
divl
cltd
gs
enter
in
pop
jae
sub
or
xchg
addr16
cli
fidivl
or
cld
arpl
push
fisttpl
shlb
adc
test
movsl
pop
pop
jmp
jmp
jecxz
popf
sbb
xor
mov
test
out
loop
daa
aam
dec
insl
aaa
sub
cmpsb
bound
stos
mov
mov
add
rorl
sub
mov
loop
dec
out
and
cmp
mov
adcl
mov
scas
cmp
mov
movsb
xchg
jae
inc
movl
outsl
and
bound
mov
jb
inc
sti
inc
jle
sub
pop
mov
push
ficoms
pop
xorl
cwtl
xchg
sub
or
test
sbb
leave
sub
mov
rorl
divps
adc
inc
cmp
inc
and
jne
out
imul
xlat
mov
pop
cmpb
add
push
or
pop
dec
repnz
loopne
addr16
fmuls
sub
jmp
push
testl
adc
lock
xchg
push
xchg
dec
mov
cltd
sbb
push
daa
js
pop
in
jle
lock
inc
cmp
loope
inc
into
sbb
lcall
lock
scas
fsubrs
dec
in
repnz
gs
shll
frstor
into
movsb
or
fcomip
orb
in
cmpsb
jle
fs
push
pop
sub
pop
add
jge
in
push
jne
sub
jns
and
sahf
lds
ret
xor
icebp
mov
push
ret
push
cmovae
push
es
cmpsl
popf
adc
push
aaa
shll
mov
dec
pop
push
rorl
insl
int3
cmp
out
xor
stos
loop
or
pop
jo
inc
iret
cmc
cmp
jmp
out
insb
imul
ljmp
sub
dec
push
push
fimull
faddl
cwtl
in
and
push
in
adc
aaa
sub
mov
jo
push
imul
push
mov
outsb
bound
stc
push
jge
mov
jmp
gs
lds
or
sarb
loope
fsubr
test
scas
jb
incb
mov
push
jecxz
push
mov
pop
xchg
lea
and
lcall
xor
mov
mov
jno
fdivl
or
rorl
in
xor
mov
and
loopew
jo
gs
cs
icebp
stos
lods
ficoml
pop
jns
cmp
lret
ss
cli
push
mov
negl
clc
es
inc
cmpsb
leave
push
or
movsb
and
cmp
xchg
push
mov
sti
adc
es
out
ja
or
sahf
cmp
jbe
mov
xchg
mov
fadds
dec
cmc
mov
xchg
add
pop
xchg
movhps
insb
push
adc
ret
and
xlat
push
mov
dec
das
xchg
sub
xchg
xor
lcall
jmp
xchg
fiadds
push
int
add
jmp
imul
repz
push
push
leave
mov
imul
inc
xlat
ljmp
cwtl
lret
test
dec
lds
sub
in
sub
sbb
ret
test
pop
fnsave
das
bound
inc
cld
in
aad
pusha
aad
xchg
push
mov
std
in
pushf
stos
add
mov
xor
adc
push
mov
pop
je
fcomps
cmp
aas
cmp
adc
ja
mov
icebp
pop
push
mov
cmpsb
test
popa
lidtl
sub
sub
pop
xchg
push
dec
xor
test
insb
into
xlat
mov
lea
sahf
and
add
addr16
into
bound
cmp
mov
insb
push
loop
or
cli
or
mov
mov
je
mulb
call
pop
jns
pop
mov
push
ss
push
jb
lods
iret
imul
and
cmpsl
pushf
xor
test
add
add
push
scas
je
sbbb
dec
push
cmp
hlt
sub
xlat
jecxz
xchg
jp
mov
addr16
cwtl
mov
xor
dec
scas
pop
dec
xor
dec
xor
mov
pop
sbb
pop
lock
addb
imul
lahf
outsb
add
repnz
add
fstpt
xor
repnz
lock
enter
and
sub
xor
xor
sbbb
sub
push
addr16
test
popa
or
addr16
and
push
ret
dec
js
and
cmp
jge
sbb
and
sub
adc
jmp
fcomp
test
lcall
xchg
add
movsl
push
xchg
inc
or
stos
push
mov
hlt
jge
and
shl
roll
enter
cli
cmpl
outsl
aad
push
orl
shr
cmp
push
pop
add
fcomps
aaa
mov
stos
scas
orl
negb
jne
mov
imul
push
mov
mov
cmpsl
mov
movsb
dec
les
out
push
dec
daa
cmp
and
call
and
sbb
jo
cmp
mov
mov
or
sub
clc
data16
jb
or
jbe
cmpsb
cmpsl
je
dec
dec
daa
xorl
shlb
jnp
mov
clc
mov
jl
xchg
add
sti
mov
adc
cmp
xor
sub
hlt
pop
stos
aas
shr
mov
lea
dec
cwtl
mov
aad
or
adc
push
or
in
std
mov
xor
add
js
adc
shl
dec
movsl
mov
xor
cs
jno
sbb
in
dec
std
mov
add
call
sub
mov
mov
mov
and
ds
xchg
jno
adc
shl
sub
lods
sub
ret
scas
and
push
mov
inc
shrb
mov
mov
xorl
movsl
arpl
adc
add
scas
sub
out
call
das
jno
lods
xchg
das
fcomps
lahf
push
fimull
mov
lods
outsl
ss
xor
jns
or
ja
pop
cs
inc
add
pop
cmp
push
pop
adc
repz
jno
lock
xchg
addr16
xchg
inc
push
push
cmp
ffreep
aam
fldt
sbb
aad
sti
cmpsb
je
mov
sub
mov
loopne
pop
sarb
scas
mov
stc
pop
jb
pop
iret
dec
push
cwtl
adc
iret
jl
data16
xchg
push
call
sbb
lods
and
xchg
cmp
lahf
adc
push
mov
and
xorb
pop
lret
int
sub
jecxz
inc
cs
clc
adc
cmp
xchg
xchg
xlat
ret
mov
stos
jecxz
aad
and
rol
test
adc
je
aas
sar
lea
out
repz
mov
pusha
aaa
adc
jecxz
mov
call
test
in
sbb
ja
stos
xchg
mov
outsl
inc
xor
loop
sub
inc
repz
lret
xchg
mov
jbe
aas
mov
dec
cltd
and
xchg
test
enter
mull
mov
mov
imul
lock
inc
jbe
cwtl
leave
cmp
mov
xor
enter
sub
inc
mov
jmp
scas
inc
add
dec
push
mov
push
repz
mov
push
mov
arpl
sub
mov
mov
push
outsl
aam
fldln2
repz
jne
cmp
popa
push
fists
xlat
jecxz
pop
cmp
sti
adc
xchg
insl
jmp
aas
test
and
in
mov
mov
lret
std
shrb
icebp
xchg
sbb
jg
xchg
lds
pop
mov
out
loopne
ja
pusha
jg
mov
sub
fmull
in
xor
push
pop
sub
xchg
add
xor
xorb
lods
and
dec
lock
test
mov
leave
jle
movsb
nop
outsl
add
out
jb
sahf
mov
jg
push
jns
in
jae
int3
xchg
dec
mov
sbb
adc
addr16
movsb
inc
jbe
cs
cmp
dec
js
mov
cmp
jg
push
inc
repnz
in
and
dec
lock
adc
sbb
add
imulb
ja
or
shlb
inc
inc
push
mov
add
iret
out
xchg
insl
adc
and
adc
cmc
add
push
aas
push
cltd
test
add
lods
pushf
mov
add
inc
jp
xchg
cltd
add
jo
iret
adc
aaa
add
imul
mov
pop
cmp
nop
mov
cmpsl
lret
je
lret
mov
je
movsl
mov
mov
aaa
lcall
xchg
inc
mov
shrl
fsubrs
add
inc
pop
xchg
push
push
adc
pop
xchg
in
loop
mov
jnp
inc
inc
sub
push
pushf
pop
sahf
test
iret
and
jne
mov
fs
adc
push
decl
push
add
fsubrs
repnz
pop
or
clc
xchg
or
aaa
jno
je
dec
dec
in
inc
push
icebp
insb
and
cmp
jnp
or
loope
loop
add
push
fisubs
push
fidivl
sub
stos
sub
cmp
loopne
xchg
scas
loope
xor
sub
fmulp
dec
cwtl
gs
inc
lahf
push
sbb
dec
scas
jg
lock
xchg
mov
jl
sbb
sbb
dec
nop
sbb
je
push
inc
pop
mov
or
sbbl
push
jmp
aam
mov
add
add
das
sub
or
test
out
shrb
lea
and
shlb
mov
sbb
int
std
ljmp
insb
cmp
or
inc
das
sub
lcall
ss
push
and
lods
pop
sub
mov
lock
pop
out
imul
gs
pusha
xor
jge
mov
cmc
push
adc
sbb
ret
xchg
xchg
pop
shrb
jae
cs
pop
mov
test
lds
or
dec
add
jecxz
sbb
sbb
sti
and
lods
outsl
jo
jge
sar
xor
es
cs
fcoml
stos
repz
or
ss
mov
cmp
push
mov
rol
xchg
xchg
xlat
scas
jg
sbb
xchg
pop
or
je
sahf
and
or
lret
lds
call
push
in
movsb
out
mov
popf
fcompl
mov
push
cltd
push
leave
js
imul
arpl
rorl
out
rclb
loop
dec
add
xchg
add
add
mov
mov
sub
push
ds
rcrl
pop
jno
lea
loop
imul
add
jo
push
scas
push
mov
jns
jns
push
addr16
gs
in
stos
jmp
repz
push
stos
and
cltd
ss
leave
call
mov
sarb
push
pop
jne
in
stos
inc
outsb
jmp
decb
pushl
je
sbb
popf
add
js
out
inc
insl
xchg
cmp
add
pop
cmpl
in
jl
xchg
je
mov
adc
popf
mov
pop
or
dec
outsl
stos
lock
sbb
pop
xchg
dec
insb
ret
jb
cmp
cltd
mov
push
stos
mov
jge
call
sarl
scas
adc
test
cli
sbb
mov
ret
xor
add
movsl
adc
insl
leave
and
sub
jbe
inc
push
inc
jno
aaa
lds
dec
sub
mov
push
not
mov
scas
push
repz
lret
jae
data16
mov
jecxz
xchg
dec
ds
je
mov
adc
stos
mov
fxch
add
notl
cmpsb
pop
ja
xchg
inc
pop
xor
loop
sbb
mov
ss
and
jae
pop
cmp
sarl
dec
imul
outsb
xchg
pusha
jg
and
ds
or
daa
movsl
jo
pop
push
fs
rcll
scas
pop
xchg
addr16
xor
ss
adc
movsl
mov
aad
leave
jle
cmp
and
cmp
lea
push
sub
shrb
in
lret
sbb
sbb
lret
mov
ja
fwait
fs
pop
mov
int3
xchg
fcoms
add
std
cld
mov
test
dec
or
movsb
lods
dec
test
sub
jmp
xchg
dec
and
leave
inc
xor
mov
rclb
into
ds
add
sbb
inc
add
test
jae
lods
bound
ret
repnz
enter
enter
push
ret
lea
bound
mov
insb
mov
pop
push
fimull
test
lods
sti
xor
xor
movsl
sbb
xchg
test
test
in
mov
dec
mov
sarb
ret
mov
mov
or
scas
fcmovu
push
pop
dec
daa
jns
jnp
sbb
sti
or
mov
cli
test
adcb
fiaddl
xchg
jl
in
pop
and
ljmp
inc
dec
popa
ss
and
sti
test
lods
and
lods
xor
adc
fs
mov
ja
jg
jae
xor
aad
shll
cwtl
scas
sub
push
push
lret
pusha
cmp
mov
lahf
dec
popa
and
les
mov
subb
dec
shr
addl
mov
adc
cs
jecxz
cmc
xor
xchg
in
test
insb
dec
mov
push
jge
push
xchg
in
popa
and
out
mov
xor
sbb
fstps
iret
dec
mov
lds
movsl
mov
or
arpl
inc
rcrb
mov
cwtl
mov
stc
andb
imulb
xchg
xlat
cmp
jns
out
scas
and
xchg
sti
mov
add
pop
pusha
das
and
mov
mov
fnsave
lea
jg
mov
sub
imul
dec
xor
sub
sbb
cmp
xor
pop
mov
ss
rcl
iret
loope
add
rcll
mov
jmp
mov
xchg
ret
lds
inc
pop
popa
lea
mov
dec
loopne
sub
add
push
inc
cmp
jne
sub
insl
xchg
in
xchg
jnp
mov
rorb
xor
jmp
mov
jmp
nop
mov
jne,pn
scas
pop
mov
int3
sbb
adc
inc
inc
sti
fdivrs
and
sbb
jno
inc
dec
jge
mov
in
push
pop
aad
or
outsb
sub
xchg
push
xchg
nop
pop
addr16
imul
daa
ja
pop
jae
ficompl
faddp
dec
inc
das
fwait
fs
jo
cmp
test
fidivs
inc
jnp
in
in
pusha
stos
imul
or
pushf
mov
adc
inc
lcall
or
dec
push
sub
fidivs
rorb
push
push
call
loopne
pop
mov
mov
pop
jbe
mov
fsubl
pop
ret
dec
rorb
inc
fcompl
adc
lcall
fdiv
outsb
rorl
imul
sbb
sti
or
das
jo
push
call
out
mov
hlt
jge
loop
pushl
xlat
cmp
test
jb
ret
push
fcomp
xchg
push
das
xorl
insl
dec
daa
xchg
pop
ja
orl
cmp
dec
add
rorl
les
pop
imul
xorb
add
cli
push
adc
clc
xchg
jmp
push
push
in
ret
loopne
sub
mov
loope
insb
pop
dec
jnp
mov
push
push
push
mov
dec
pop
stos
test
imul
data16
cli
in
pop
cmp
repz
lods
xchg
cmp
mov
out
or
sti
aad
mov
mov
xor
in
ffree
fistl
cmp
mov
sahf
ja
lcall
lcall
cmp
in
jg
xor
cmp
loope
jns
out
ficoml
rcr
nop
jnp,pt
icebp
sub
jb
mov
pop
or
xchg
dec
mov
xchg
stos
inc
aaa
mov
pop
shrl
pop
shll
jns
xchg
js
sub
dec
push
pop
push
leave
dec
rep
in
and
popa
enter
in
addr16
je
xchg
addr16
xchg
jns
data16
in
fmul
ficoml
cmp
sbb
and
xchg
in
adc
push
mov
test
jns
mov
or
inc
gs
push
pop
in
addl
js
and
mov
xchg
ds
push
xchg
sbb
scas
addr16
mov
test
sub
movsb
pop
pop
mulb
mov
pop
insl
or
sbb
push
filds
dec
mov
jns
out
pop
nop
push
add
out
adc
cli
in
rcl
fisubrs
ret
mov
xor
icebp
mov
cmp
add
js
aad
inc
ficoml
movsl
ficomps
outsl
pop
int
jns
aas
in
sub
pop
push
push
insl
add
adc
sbb
cwtd
data16
xchg
xchg
jp
fldcw
int3
cltd
cmc
cs
xor
sbb
aad
fs
pop
add
cltd
cmp
sbb
nop
mov
lret
lahf
vmread
or
cmp
ret
fcompl
pop
lea
push
pop
aam
adc
adc
loopne
jle
sbb
mov
ficompl
pop
pushfw
dec
iret
ja
in
sbb
xchg
pushf
xchg
or
in
cs
xor
mov
mov
adc
test
xchg
dec
cmc
outsb
in
cltd
loop
dec
lret
lcall
mov
cmpsl
pop
xor
jnp
mov
mov
ficoms
clc
xor
adc
mov
sbb
jne
pop
iret
cwtl
mov
and
mov
push
adc
mov
pminsw
or
adc
or
pop
xchg
cmc
shll
stos
out
pop
sbb
cld
sbb
aas
lock
daa
shrl
push
je
mov
add
pop
mov
notb
fisttps
pop
fdivrs
or
mov
aaa
repz
jmp
outsl
xchg
mov
xchg
mov
add
add
sub
out
in
mov
fst
push
jp
popa
mov
dec
pop
cmp
pop
outsl
sbb
and
sub
or
push
mov
inc
add
adc
pop
mov
cmpb
pop
jg
cmp
and
or
arpl
cmp
mov
sub
xor
ret
jmp
scas
sahf
icebp
das
scas
cs
mov
add
bound
lods
icebp
shlb
stos
ja
jb
push
ficoml
jmp
test
mov
mov
das
lcall
push
cmp
xor
ficoml
cli
push
and
into
pop
testb
in
jge
psrld
movsl
loop
inc
inc
mov
mov
fistps
push
push
mov
xor
in
in
mov
andb
inc
mov
or
lret
push
pusha
es
cmp
cmp
push
jle,pn
jl
roll
and
inc
inc
mov
sub
loope
pop
les
pop
and
jo
sahf
and
push
jae
pop
add
imul
push
out
mov
dec
dec
shlb
xlat
mov
fwait
inc
xlat
xchg
xor
mov
mov
inc
leave
add
out
nop
sbb
gs
in
lcall
mov
icebp
rdmsr
pop
push
popa
out
ljmp
loopne
and
lods
xchg
fsubrl
ret
xchg
stc
sbb
ret
inc
sub
pop
xor
xchg
dec
and
out
add
push
lret
jb
ficompl
push
cmp
nop
push
inc
loopne
cmpl
dec
fnsave
add
inc
push
inc
roll
dec
loop
xchg
jbe
leave
lds
ficompl
fnsave
mov
sarb
and
hlt
nop
cld
adc
xor
aas
repz
sub
pushl
lret
adc
daa
add
mov
arpl
pop
push
in
icebp
dec
xchg
rcrl
push
mov
pop
adc
jecxz
adc
shrl
or
dec
mov
shl
and
insb
adc
jo
jb
in
ja
cmc
fdivrl
stos
jle
cmp
in
int3
adc
movsl
iret
popa
xor
subl
fwait
jge
mov
loop
jns
pop
pop
jo
mov
add
daa
jecxz
jmp
sbb
push
fisubrl
addb
xchg
jne
or
xchg
xor
fdivrs
dec
or
dec
sti
cmp
clc
faddl
mov
pop
aas
mov
movsb
int3
jg
pop
je
arpl
int3
pop
add
cmp
mov
daa
pop
dec
xchg
cmp
jae
jecxz
inc
adc
lds
lods
pop
adc
call
mov
jecxz
cmp
dec
adc
cmpl
adc
jb
xor
test
xor
sbb
outsl
adc
js
sbb
mov
push
jae
je
sti
hlt
addr16
sbb
cmc
push
dec
dec
fisttpll
xor
dec
pop
xchg
and
xor
outsl
pop
rcll
shlb
pop
pop
inc
aas
xchg
incb
ret
idiv
jbe
movsl
push
lret
inc
and
rcrl
or
sub
cltd
mov
sub
pushf
test
fs
lods
cs
or
icebp
ret
dec
scas
mov
dec
mov
jo
in
xor
lcall
add
adcl
je
xchg
mov
pop
xlat
mov
pop
xor
scas
push
fisubs
in
decl
stos
insl
or
xorb
addl
push
les
or
and
pop
adc
int
xchg
jmp
sahf
cmp
adc
lret
jecxz
jmp
mulb
pop
imul
fisubrs
loopne
mov
test
push
sbbl
out
mov
inc
lock
jbe
add
add
add
push
inc
xor
xor
rclb
daa
adc
dec
and
pop
xor
sbb
mov
shrb
cld
mov
mov
imul
shlb
decb
inc
movntq
xor
sbb
add
lds
sbb
push
mov
in
xchg
and
notb
bound
or
mov
adc
jecxz
xchg
add
and
mov
dec
and
mov
mov
rcl
xor
jns
fiadds
add
cs
movsb
xchg
call
loopne
mov
cmp
xchg
pop
mov
mov
dec
arpl
adc
xlat
leave
push
mov
out
xchg
jecxz
pop
cmpsl
lret
xor
sub
sbb
xchg
aam
pop
xor
or
cmp
test
test
scas
push
adc
shll
cld
cmp
push
inc
dec
jecxz
cmp
mov
mov
xchg
test
push
adc
inc
bound
push
pop
movsb
mov
cli
push
xchg
dec
lcall
mov
dec
mov
xchg
hlt
xchg
arpl
mov
dec
sbb
dec
pop
popa
xchg
sbb
inc
ret
sbb
sbb
fiaddl
xchg
out
and
iret
test
dec
sub
sbb
jge
repnz
inc
test
pop
stos
xor
push
push
fldl
cmp
jbe
outsb
jp
int3
and
pushf
xchg
inc
sub
mov
into
sti
out
repnz
jno
xchg
lcall
push
dec
adc
faddl
mov
cmc
icebp
rcrl
dec
jae
or
pop
sarb
inc
stos
rorb
mov
lods
movsb
aaa
imul
insl
mov
das
inc
lret
or
pop
xor
push
imul
sub
sbb
insl
testl
lea
sahf
insl
mov
add
cmc
flds
dec
cmp
sarb
out
or
push
les
test
xor
je
aam
lods
mov
lock
addr16
and
rolb
mov
call
push
jns
jnp
xor
stos
xor
into
lods
loopne
or
std
jmp
mov
cmp
xor
addb
and
imul
mov
adc
and
sbb
sarl
in
and
fwait
shll
imul
sub
jnp
jge
sbb
adc
in
cmpsl
cmp
adc
outsb
cld
sub
cmpsl
xchg
sbb
jmp
cmp
push
sarb
or
out
sub
or
or
fcmovbe
test
xchg
stc
mov
in
jmp
dec
or
add
pop
sti
add
add
leave
xchg
imul
repz
pop
call
sub
sub
xlat
add
mov
lods
mov
scas
xchg
add
iret
pop
pop
ljmp
ds
lcall
xchg
inc
stos
cmp
lock
cmp
fxch
jns
push
pmaxsw
xor
adc
mov
sbb
jns
dec
fdivrl
sti
cmc
sbb
and
sub
cmp
sbb
rorl
cmp
pop
xchg
into
or
repz
push
into
and
icebp
mov
shll
sub
jg
cmc
fadds
mov
cmp
inc
pusha
jb
outsb
xor
mov
inc
mov
pop
mov
mov
jmp
into
dec
xchg
mov
pop
sub
scas
in
enter
fcoms
or
dec
cld
push
or
js
enter
cmpsl
dec
add
aad
in
jo
cwtl
adc
push
jg
push
xchg
pop
orl
addr16
mull
dec
mov
mov
sub
adc
pop
push
adc
adc
popa
js
mov
pop
sbb
mov
adc
in
mov
jbe,pt
xchg
and
and
or
jg
adc
push
sub
xchg
daa
add
xchg
rcrl
in
sbb
sti
push
push
mov
mov
fstpl
aam
dec
leave
repz
push
nop
dec
repz
mov
sahf
jae
rcl
ss
xchg
pop
out
inc
scas
adc
push
outsb
lret
adc
sub
mov
push
push
fwait
aam
ss
pop
mov
clc
inc
jo
test
ret
pop
xchg
js
jne
addr16
jecxz
xor
cltd
mov
stos
lret
mov
add
xchg
and
loopne
not
jb
add
rorl
pushf
sub
scas
dec
inc
push
iret
inc
jae
and
mov
fidivrl
ss
cmp
lret
lea
add
jl
xchg
mov
loope
test
sub
add
int3
jmp
pushf
das
iret
sub
dec
cmp
mov
adc
rcrl
mov
insb
jno
xor
movsl
xchg
ss
xchg
push
enter
inc
sbb
fcoms
fs
fidivrl
in
aad
lcall
clc
xchg
int3
mov
aas
cld
andb
lods
adc
inc
and
dec
adc
jg
adc
and
dec
das
cs
jae
insb
add
add
mov
daa
jl
xor
adc
fcomps
pop
js
int3
repz
cmpsl
js
ja
in
mov
aad
cltd
data16
mov
xor
pop
stos
fisttpl
cmp
fisubs
xchg
push
inc
pop
stc
shl
pop
sub
stc
sbb
and
stc
lret
inc
jg
jl
loopne
mov
sub
dec
xchg
fs
inc
sarl
decb
pop
fsub
fnsave
xlat
out
fimuls
fcoms
add
cmp
fcmovne
popa
mov
cmp
jo
or
test
into
xchg
and
arpl
fdivr
inc
icebp
iret
inc
inc
rorl
scas
or
icebp
out
int3
add
cmp
pop
imul
pop
fdivrl
das
sbb
js
dec
xchg
adc
and
mov
cli
push
in
sub
stos
mov
fwait
popf
fsubs
xor
sbb
test
ret
sti
and
fsubrs
stc
mov
mov
loopne
pop
or
push
cmp
rclb
cmpsb
jo
lret
push
mov
dec
mov
xor
inc
pop
xchg
jle
aam
stos
popl
enter
test
call
pandn
mov
cmp
mov
or
int3
imul
mov
mov
mov
out
dec
sub
decl
rorl
sbb
ja
cld
pop
sbb
cmp
mov
jg
mov
rorb
pop
aaa
jo
push
dec
stc
inc
les
xor
mov
mov
sub
into
lds
pop
and
adc
mov
repz
sbb
enter
into
loopne
add
push
push
sbb
mov
out
push
out
mov
addl
fs
inc
ret
cmpsl
lock
add
mov
ret
add
iret
pop
xor
cmp
pop
lods
sub
and
pop
xor
cli
cmpsl
pop
aas
push
xlat
sbb
inc
jae
cmp
push
fcomip
ds
flds
repz
pushf
mov
dec
push
adc
jnp
enter
dec
jl
sub
ss
sbb
adc
andl
mull
xor
pushf
aas
rcr
clc
clc
cmc
xorl
cmpsb
cmpb
movsl
bound
jl
adc
test
jne
xor
sub
dec
jl
mov
push
or
and
mov
mov
fdivrl
xchg
add
mov
dec
jecxz
add
addr16
ret
lock
pop
rorl
push
int3
dec
jmp
fldt
xor
js
mov
push
xchg
pop
test
mov
iret
bound
or
dec
mov
add
xlat
addl
out
stos
cmp
in
icebp
sub
leave
push
cmc
cwtl
fwait
inc
sbbb
fisubl
jge
push
ds
pop
lcall
sub
inc
jge
xchg
jb
sub
adc
imull
jg
ss
push
xchg
dec
xlat
jg
imul
mov
inc
sbb
rcrl
push
sbb
adc
pop
rclb
mov
add
outsl
xchg
mov
mull
sub
mov
int
aad
mov
mov
adc
stos
mov
daa
sub
mov
fwait
nop
lcall
subl
inc
mov
pop
xchg
pop
xor
xlat
xor
pop
cmp
shl
jb
fisubs
dec
push
lahf
imul
cmpsb
loopne
jbe
movsl
xorl
adc
cmp
push
lds
dec
fistl
mov
or
jno
gs
jno
mov
jne
push
cmp
cltd
cmpsb
mov
and
inc
fistl
fadd
in
mov
rolb
xor
push
inc
pushf
and
xorl
test
push
cld
in
push
outsl
pop
pop
not
xchg
inc
rcrl
int
dec
hlt
mov
inc
push
or
cmp
mov
add
dec
or
inc
pop
mov
sub
mov
push
mov
cs
pop
sub
mov
call
or
lods
imul
test
xchg
mov
lahf
push
or
fiaddl
ret
jo
stc
outsb
lahf
sub
orl
aad
inc
mov
mov
cmp
fistpl
ljmp
cwtl
inc
and
ds
ss
push
fidivl
add
sti
lods
adc
ret
or
outsb
mov
mov
adc
lret
mov
out
arpl
outsb
mulb
xor
fstl
popf
inc
decl
icebp
popf
sub
xor
je
mov
js
ds
repz
loopne
jmp
sbb
mov
inc
sub
push
int3
xor
hlt
pop
sti
negb
mov
andb
mov
and
es
mov
xor
lock
inc
adc
mov
sbb
mov
pop
pop
xchg
dec
loop
xor
xor
mov
subb
cltd
inc
xchg
sub
xor
sbb
mov
push
adc
lret
std
jl
lahf
loopne
xorl
notl
lret
cltd
mov
xchg
jmp
mov
add
dec
ljmp
cmp
push
jmp
xor
and
dec
add
sbb
sub
jno
and
movsl
xchg
cwtl
push
sub
scas
cmpsb
add
inc
jecxz
test
movsl
ljmp
pop
cld
loopne
test
lret
sub
push
ja
jns
mov
inc
nop
scas
pop
or
imul
lock
pop
xor
test
mov
pop
push
fadds
xchg
mov
sub
jl
adc
mov
idivl
ja
cmpl
je
dec
mov
loope
into
jp
sti
xchg
movsl
aaa
dec
dec
and
inc
aaa
push
push
in
sub
jnp
clc
cmc
lret
or
js
push
xor
add
ret
mov
xchg
test
jno
int3
lea
push
inc
jmp
insl
mov
outsl
cmpsl
and
nop
mov
jge
add
stc
inc
imul
dec
lea
into
xlat
mov
iret
push
jecxz
sub
push
cli
xor
inc
mov
push
xchg
cmp
pop
jmp
popl
push
sub
sahf
js
mov
popf
cmpsl
popf
sub
mov
lret
add
dec
rcrl
sbb
pushf
add
ss
cltd
cli
xlat
movsl
push
gs
nop
mov
and
test
ljmp
jns
fistps
jnp
dec
fstl
sbb
cld
jnp
in
inc
xchg
imul
aad
int3
mov
cs
add
jb
mov
std
mov
push
jns
aam
rorb
push
inc
lods
cmc
xor
js
sub
repz
mov
stc
and
sub
les
mov
adc
inc
cmp
cmp
cli
pop
or
pop
inc
cmpsb
nop/reserved
cmp
mov
jmp
cmc
mov
cltd
mov
lds
lahf
outsl
leave
js
repnz
lcall
fbstp
pop
in
dec
call
out
fstpt
sbb
mov
jae
iret
mov
cwtl
jnp
push
adc
rcll
xor
sub
xor
inc
inc
jno
mov
push
sub
sbb
mov
rclb
xlat
mov
pop
shrl
xor
movsl
xchg
xor
leave
leave
mov
andb
pusha
fistpll
psubb
cltd
and
cltd
add
mov
lock
movsl
jecxz
inc
inc
shlb
out
sbb
xchg
jmp
xchg
andb
aad
mov
push
mov
lock
out
inc
sub
mov
clc
fistl
push
ret
enter
pop
int3
mov
mov
xlat
jmp
cwtl
xchg
mov
jno
scas
mov
inc
xor
xchg
xchg
mov
xchg
mov
sub
cld
mov
mov
popa
bound
shlb
popl
daa
pop
orl
mov
lea
cli
adc
pop
jg
mulb
mov
sub
lahf
fs
cmpb
sub
loop
push
scas
scas
mov
mov
dec
push
call
das
or
xorb
aas
mov
into
jb
and
mov
ret
sbb
jno
push
stc
hlt
mov
enter
movsl
adc
jnp
push
dec
arpl
push
test
fcomps
rcrl
lock
pop
icebp
leave
movsb
mov
hlt
out
imul
loope
idiv
dec
stc
int3
mov
push
dec
and
jle
pop
sub
ss
add
mov
push
adc
lock
jnp
ljmp
loope
mov
in
mov
jbe
push
lds
subl
ja
movsb
add
xchg
test
cmp
movl
push
and
jge
inc
neg
lret
or
jb
push
sar
push
mov
sbb
pop
loop
idivb
mov
enter
je
outsb
out
mov
add
stos
pusha
or
sub
je
xchg
jecxz
sbb
decl
test
leave
nop
jnp
adc
push
pop
push
xor
jg
jbe
and
lock
fs
fadds
cwtl
jno
mov
adc
imul
xchg
push
jnp
sub
cs
mov
pop
dec
sbb
mov
cmc
jae
lret
lods
loopne
pop
adc
bound
aas
mov
mov
aam
push
xchg
push
jge
sbb
and
dec
stc
jecxz
sbb
and
add
cmpsb
jg
add
jl
test
fstp
ficoml
lahf
cs
mov
rcr
fwait
push
push
pop
pop
mov
fldt
add
test
add
mov
nop
push
insl
hlt
sbb
mov
sbbb
dec
inc
mov
in
fstp
clc
and
dec
movsb
rcrl
inc
pop
xchg
inc
leave
push
pop
mov
jb
cmp
xchg
jle
scas
andl
xlat
sbb
popf
mov
mov
jg
push
nop
xor
inc
inc
sti
std
push
jp
xchg
xchg
dec
out
out
lds
xchg
adc
adc
shlb
mov
sti
fsts
mov
shrl
inc
pop
fisttpl
inc
push
and
sar
and
pop
sbb
jmp
push
fsubl
mov
inc
lds
popa
ljmp
jle
mov
push
pop
stc
lods
loop
push
int3
mov
mov
xor
es
je
sbbb
mov
and
sbb
fcmovb
push
hlt
shl
mov
pusha
imul
pop
adc
aad
mov
ds
scas
ret
std
fiadds
cmp
pushl
jp
sahf
enter
dec
sub
jmp
xchg
mov
int3
or
mov
mov
and
or
pop
or
jmp
inc
add
jno
into
inc
shr
push
cmc
cmp
popf
scas
rclb
and
mov
cmp
stos
mov
shl
test
repz
pop
je
addr16
dec
out
mov
cmp
pusha
add
cwtl
or
stc
and
fcompl
xor
and
mov
dec
in
xchg
sub
hlt
fiadds
inc
or
sbb
lds
ret
jno
lock
xchg
stos
push
mov
inc
or
mov
loope
lahf
std
sub
adc
sbb
add
xor
out
jns
shrb
xor
fcmovnbe
nop
das
fsts
rorb
inc
aas
pop
sub
jmp
cmp
mov
jge
iret
push
addr16
inc
ret
or
bound
pop
fdivp
in
dec
sub
inc
dec
pop
jmp
jmp
xchg
fwait
cmp
pop
stos
cs
lock
sbb
lcall
aad
shlb
mov
imul
das
loop
fists
xchg
hlt
sti
push
jl
xor
add
fstpl
loop
sbb
cmp
dec
cmp
test
fwait
pop
dec
add
mov
addl
lods
cmp
pop
mov
inc
mov
xchg
sbb
test
push
clc
mov
xchg
adc
lds
sbb
loope
cwtl
mov
cmp
lret
pop
sbb
and
lock
sbb
inc
sbb
pop
ds
in
cwtl
sbb
and
jno
dec
or
pop
or
jmp
sub
mov
mov
mov
clc
jno
lods
dec
pop
pop
pop
sub
stos
xor
std
adc
aas
xchg
push
mov
repz
fisubl
mov
lcall
fbld
mov
sar
pop
lahf
fnsave
dec
jp
cmpb
mov
rcrb
lea
mov
lret
add
jb
push
pop
jae
push
int3
xor
xchg
cmp
stos
cmc
sbb
pop
ljmp
popf
mov
pop
cmp
mov
pop
in
mov
jae
push
xor
xor
pop
lock
aaa
sbb
aaa
push
mov
mov
and
push
test
adc
lret
int3
push
pop
add
int
push
ss
popf
sti
push
ficoml
xor
or
add
fmuls
jo
cltd
mov
lret
test
mov
movsl
cmc
mov
jnp
fdivl
xchg
loopne
sbb
xchg
sbb
add
sti
js
out
loope
ljmp
cli
cmc
and
ds
sbb
or
pusha
cmpsl
xchg
hlt
pushf
insb
test
iret
in
and
dec
movsl
sub
imul
cmp
xchg
sti
sub
jo
fdivp
out
and
int3
jg
or
xchg
mov
mov
mov
mov
fnstcw
paddw
loopne
cmp
aam
pop
xchg
insl
daa
bnd
add
mov
cmp
jae
dec
pop
xchg
movsb
inc
dec
mov
and
xor
sub
mov
push
and
mov
add
adc
shl
jg
addr16
int3
sbb
xchg
stc
mov
mov
xchg
jae
inc
adc
lds
or
lahf
testl
xchg
cmpsl
sarb
cmp
xor
in
mov
inc
icebp
gs
repz
xor
push
jmp
mov
sbb
fdiv
std
and
sub
xchg
cmp
mov
enter
xorb
adc
push
jnp
scas
sub
lds
lds
rcll
xchg
lahf
pop
fwait
dec
jle
outsb
xor
xchg
pop
bound
xor
ret
ss
aaa
popa
cmpsb
jbe
fs
daa
lea
lcall
jb
or
cli
stos
jns
mov
dec
mov
cmc
cmp
fistpl
in
xlat
mov
mov
scas
mov
xchg
std
or
mov
xchg
mov
in
push
jo
lcall
sub
repz
cmp
test
dec
inc
cltd
outsl
mov
push
sti
aas
orb
inc
out
subb
or
sbb
sub
cmp
mov
and
jns
add
dec
inc
repnz
shr
push
movsb
mov
mov
stos
hlt
cmpsb
lods
pop
fstps
movsb
test
int3
loop
leave
mov
mov
aam
sti
adc
sub
inc
mov
int
and
xchg
movsb
call
push
inc
push
jg
sahf
notl
rorl
andl
jbe
lea
push
roll
sub
clc
into
rcrl
shlb
fcmovu
sbb
jle
sarl
pop
mov
dec
fsubl
sbb
push
push
scas
mov
push
xchg
xchg
pop
cmpsl
cmpsb
jnp
mulb
sbb
lock
and
nop
arpl
add
xchg
jo
cs
push
dec
adc
fistl
or
jge
xor
incb
pop
out
and
adc
stos
dec
daa
ret
and
lret
sbb
add
add
in
fwait
push
xchg
mov
out
sbb
jmp
sub
dec
icebp
iret
rcll
cmpsl
pop
lahf
movsl
xchg
add
sub
repz
pushf
and
leave
shrb
cmc
div
sbb
arpl
jo
add
or
inc
xor
mov
adc
inc
mov
div
and
sub
leave
je
sahf
xchg
mov
cwtl
cmpsl
and
cmp
test
and
mov
ret
pop
out
fistpl
adc
mov
mov
mov
es
sbb
cmovb
out
stc
outsb
mov
inc
xchg
stos
xchg
shlb
iret
or
mov
je
stos
inc
fwait
sahf
mov
or
pop
push
inc
lds
cs
test
xor
xchg
ljmp
add
dec
adc
popa
jl
loope
or
or
sbb
lcall
sbb
pop
mov
sbb
xchg
in
add
jb
lods
mov
cmpsb
sbb
pop
adc
jmp
daa
inc
aas
mov
cmc
das
xor
call
mov
pusha
fwait
push
stc
ljmp
jmp
outsb
lds
pop
ret
jo
aaa
fstpl
scas
std
mov
or
fs
pop
push
ret
test
pop
cmp
and
nop
cld
stc
sti
pusha
push
xor
add
add
popf
cmp
fcompl
sub
jo
push
pop
or
pop
fcoml
mov
sbb
lret
ds
or
scas
xchg
jno
or
rolb
mov
daa
mov
cld
movsb
and
pushf
out
xor
int
fwait
or
and
pop
fucomip
std
lahf
xchg
aam
dec
js
ds
movsl
and
push
add
call
adc
xlat
dec
push
lea
xor
andl
mov
loop
fidivrs
dec
inc
inc
hlt
or
aaa
ds
pop
mov
sahf
mov
inc
mov
jp
sub
adc
mov
mov
jne
mov
pop
jl
sbb
jecxz
adc
movsb
loop
pop
mov
xbegin
push
cli
loope
pop
dec
lea
les
shl
repnz
and
das
cmpsb
mov
addb
es
inc
dec
aam
pop
mov
jmp
andl
ja
dec
movsl
pop
out
jg
js
push
mov
cmp
fisttpl
mov
shrw
insb
mov
mov
das
faddp
sub
aas
sarl
sbb
xor
mov
mov
xor
mov
inc
loope
lret
sub
rclb
jo
test
mov
in
rclb
gs
lods
addr16
adc
sbb
xor
repz
jae
es
cmp
mov
out
mov
push
js
jg
iret
leave
jp
add
jo
pop
fadds
adc
stos
movsb
or
stos
xchg
or
dec
imul
inc
loopne
test
sti
xor
shr
and
lret
cmp
pop
sub
cs
jmp
adc
add
enter
mov
daa
adcl
dec
pop
data16
jns
lcall
mull
testb
or
sbb
sbbb
mov
sar
mov
std
movsb
fcoms
add
mov
daa
dec
inc
jle
fdivrl
fsubrl
mov
hlt
mov
in
and
sub
lods
sbb
add
and
jmp
daa
mov
adc
bound
arpl
fists
dec
pop
mov
lea
gs
jl
sahf
sbb
ljmp
inc
mov
xchg
adc
sbb
adc
xlat
pop
pop
dec
sub
adc
sbb
adc
pop
mov
lods
in
imul
fildl
and
xchg
xchg
in
daa
inc
std
iret
push
adc
or
vpmulhw
xor
shll
or
loope
lods
arpl
push
push
in
mov
dec
fnop
add
push
popf
scas
lret
sub
rclb
adc
xchg
mov
sbb
sbb
inc
jl
xchg
push
outsb
xchg
mov
sub
cmpsl
es
mov
dec
fs
pop
xchg
out
out
dec
mov
push
pushf
gs
stos
imulb
inc
pop
pop
fsubs
inc
repz
jecxz
data16
mov
mov
daa
mov
mov
lret
jne
clc
pop
mov
cs
in
push
lods
lds
push
imul
bound
cmp
cmpsl
icebp
jnp
cs
scas
mov
stos
cltd
int3
mov
ja
mov
add
add
push
scas
je
filds
mov
nop
xchg
mov
dec
mov
mov
add
or
cld
jmp
scas
cmp
dec
mov
push
popa
and
push
inc
mov
lret
fidivrs
arpl
andb
xchg
movsl
mov
jp
adc
and
jne
imulb
jmp
adc
stos
mov
scas
cmp
popf
cmp
lcall
push
fisubrl
add
test
adc
mov
scas
movsl
xchg
jg
xchg
or
add
in
push
mov
fisubl
outsl
sbb
int
inc
lods
inc
inc
add
jnp
mov
bound
cmpsl
int
xor
loopne
mov
scas
cmp
aas
inc
push
mov
mov
xlat
popa
cmp
or
jnp
xorb
cld
shl
pop
add
rcl
inc
push
sub
icebp
lds
or
subl
pop
adcl
stc
add
inc
mov
fdiv
dec
pushf
shl
adc
jb
mov
inc
in
or
inc
and
adc
into
mov
bound
add
mov
mov
xor
or
mov
daa
xor
mov
std
mov
mov
pop
stc
lahf
push
push
xor
std
std
or
bound
xchg
fdivrl
movsb
pop
sbb
dec
rorb
das
jg
daa
inc
sti
mov
xchg
push
xchg
loopne
test
mov
xor
das
pusha
cmc
cmpsl
mov
and
fldenv
inc
popa
cwtl
jo
or
in
xor
dec
imul
dec
push
jl
test
test
dec
fwait
and
add
sti
push
mov
or
sti
jb
lea
bound
lret
add
outsb
add
inc
sbb
subb
push
pop
jg
xor
in
fisttpl
mov
and
subl
inc
incl
or
int3
shrb
pop
orl
or
push
or
or
aas
inc
ficomps
cltd
aad
test
mov
mov
das
in
push
sarb
and
mov
rclb
lock
sarb
int3
aas
lds
mov
xchg
and
jne
lock
mov
cmpsb
jle
das
fwait
add
test
dec
mov
sbb
fldenv
and
fs
xchg
xlat
popf
ss
shl
fcoml
adc
aad
dec
push
xchg
pop
ds
ds
int
rcl
aad
push
xchg
push
sar
mov
lret
in
jb
addw
fcompl
adc
jmp
jp
dec
fcoml
jnp
pop
mov
rcr
pop
and
sbb
mov
enter
ljmp
and
std
jns
mov
add
scas
out
adc
cld
in
loopne
leave
shlb
adc
repz
dec
out
pushl
insb
fwait
clts
leave
aaa
cli
dec
out
lgs
mov
lods
mov
stc
inc
es
cmpsb
testb
nop
push
inc
adc
mulb
mov
or
and
int
jne
pop
push
sbb
jecxz
inc
mov
dec
dec
or
pop
ret
mov
sbb
mov
add
test
pop
lret
hlt
fisttpl
cltd
aaa
leave
push
inc
sti
fistl
mov
xor
out
mov
add
mov
fldenv
mov
and
adc
jp
mov
fldenv
push
xor
aas
das
or
jo
cmp
fsub
fucomi
jge
cmpsl
addb
notrack
fistpl
int
and
sub
lret
into
mov
pop
lods
sbb
pushf
cld
pushf
insb
jecxz
shrl
frstor
movsb
rcrl
lret
lods
leave
pushf
test
pop
shrl
add
mov
stos
daa
push
lret
and
inc
and
out
push
icebp
fsubl
pop
and
sbb
mov
in
cmp
pusha
lods
mov
ds
jle
mov
cmc
jg
mov
cli
gs
lea
cmp
fstl
xchg
jecxz
js
iret
mov
std
cmovae
jns
sbb
sub
int3
in
in
fnstenv
out
sub
fldcw
enter
push
jmp
inc
in
insb
xor
and
test
lea
cmp
cwtl
popf
jl
cmp
mov
mov
xor
outsb
les
out
movsb
sub
xor
mov
sbb
shrl
stos
mov
jl
jns
sub
test
test
in
and
adc
enter
adc
outsl
into
stc
aad
shlb
mov
mov
addl
insl
popa
mov
mov
nop
adc
call
pop
xchg
xchg
mov
popa
insl
push
mov
pop
sahf
fisubl
call
mov
sahf
xchg
mov
rolb
adc
cmp
fnstsw
cmpsb
mov
mulb
sub
pop
cmp
adc
rclb
xchg
mov
push
mull
sahf
push
jae
aas
push
cmp
hlt
sti
mov
sub
call
mov
fidivrl
jp
insb
inc
clc
xor
jg
xor
adc
cmp
or
psubsb
mov
mov
add
je
dec
pop
cmp
arpl
test
js
dec
outsl
add
imulb
int
mov
nop
repnz
xchg
scas
cli
mov
pop
sub
mov
fimuls
adc
outsl
mov
sarl
test
shll
inc
mov
cli
in
fcom
dec
shrl
xchg
movsb
sarl
sub
movsb
ret
repz
cmp
into
jp
mov
icebp
push
cltd
rorl
dec
push
jmp
sub
loop
ret
int3
dec
pop
fisubl
incb
mov
or
testb
adc
jo
jne
mov
sbb
sub
bound
mov
mov
out
xchg
mov
xor
mov
lret
dec
pop
daa
stos
into
mov
sbb
lds
or
mov
imul
xchg
sbb
je
sbb
popa
mov
cmpsb
cmp
or
movsb
mov
insb
pop
push
out
push
das
lods
ja
lea
push
shrl
cmpsl
inc
inc
pop
sar
adc
sbb
push
pop
popf
loopne
adc
xchg
decb
js
in
fidivrl
stos
pop
push
mov
mov
idivl
les
in
xlat
mov
cmp
test
push
loope
pop
shll
pop
mov
mov
push
push
addr16
fwait
repnz
push
cld
mov
lea
xor
dec
aam
lods
mov
add
push
jg
push
xorl
call
xor
add
and
jae
xor
mul
or
adc
inc
cld
jg
fwait
sbb
push
ficomps
in
in
jle
out
xchg
lahf
mov
shll
push
mov
add
into
adc
xor
ret
xchg
stos
call
fisubs
rcll
mov
into
aaa
repz
jno
mov
imul
scas
loop
jmp
lret
ds
xor
adc
icebp
xor
rol
dec
lock
das
sarb
jnp
fwait
add
mov
out
adc
jnp
arpl
aam
jae
inc
pop
scas
out
int
pop
pusha
inc
jb
lret
sub
push
nop
xchg
push
mov
jo
icebp
repz
int
adc
jo
cmp
xchg
or
stos
ret
mov
mov
ljmp
inc
push
testl
popa
leave
repz
xor
in
inc
adc
adc
jmp
ja
mov
outsl
js
add
mov
jbe
mov
jl
xor
jne
leave
pop
xor
daa
hlt
enter
or
sbb
push
aaa
cmp
cld
xchg
test
sarl
ret
and
inc
xchg
cld
jnp
repnz
pop
jmp
cmp
mov
mov
out
lods
outsb
pop
cltd
aaa
pushf
and
or
cwtl
test
push
jmp
cmp
enter
stc
mov
sbb
paddusw
inc
ret
dec
insl
call
cltd
lcall
lahf
dec
jnp
dec
into
ret
leave
int
push
jmp
add
or
dec
xchg
daa
or
jl
add
push
mov
sub
subl
jl
xor
fldcw
lahf
lods
cmp
cmp
rcll
test
push
insl
lods
adc
push
push
xchg
pxor
inc
pop
icebp
js
mov
enter
cmp
addr16
dec
sub
into
movsb
pop
dec
xchg
push
jecxz
sub
push
lods
nop
mov
push
movsb
sub
mov
sbb
dec
jecxz
sub
cwtl
or
movsb
sbb
push
fnstcw
cmp
cs
cmp
sub
pop
xchg
push
mov
mov
lods
sub
cld
xchg
ljmp
mov
fsts
test
jge
bound
push
mov
inc
inc
dec
popa
ljmp
xchg
mov
and
insb
cmpb
dec
rcl
jmp
push
andl
imul
lret
mov
push
arpl
or
jp
ss
cld
push
mov
xchg
add
imul
movsb
aas
jge
dec
cmp
xor
mov
push
repz
inc
mov
sub
jg
jbe
pop
test
and
test
aas
xorb
ret
lcall
mov
pop
push
movsbl
test
mov
inc
dec
jmp
cmp
push
sbb
cmc
cmp
adc
mov
lcall
mov
in
dec
adc
test
jo
mov
pop
shrb
push
cmp
sbb
cmpsl
les
lods
xor
cmp
cmp
out
or
pop
jo
outsl
push
jo
std
ret
or
andb
adc
lods
lds
fmull
pop
pop
leave
fdivs
or
mov
xor
fstps
inc
stos
push
call
addr16
rcr
stos
fsubrs
and
adc
and
sub
cmp
xor
mov
xchg
or
jl
sbb
mov
push
sub
mov
jmp
pusha
cmpsb
mov
scas
fists
scas
nop
ja
sahf
jecxz
dec
push
pop
push
jne
sbb
push
or
ljmp
xor
xchg
mov
sub
loop
xchg
and
push
lods
movsl
cmp
adc
test
push
in
out
ds
push
xor
pop
dec
xor
xchg
in
adc
add
arpl
addr16
sti
fcmovnbe
popf
in
xchg
mov
add
xor
jbe
xchg
cmp
adc
jp
cwtl
out
mov
cmpsb
test
xchg
add
pop
cmp
lock
or
mov
iret
cmp
movsb
jg
faddl
lret
mov
cmp
mov
push
mov
insl
test
mov
jne
mov
ret
mov
icebp
icebp
cmp
ss
or
push
divb
mov
cs
cmp
mov
jmp
push
inc
test
iret
out
in
push
hlt
sbb
ret
mov
fistps
insl
sbb
mov
cltd
dec
in
shlb
push
or
cmp
shrb
aas
lods
out
nop
mov
shl
addr16
push
lods
cli
mov
mov
fs
fbld
icebp
inc
jo
jbe
sbb
pop
jbe
int3
xor
int
inc
imul
out
sbbb
mov
push
push
jmp
cli
xchg
push
sub
mov
aas
sub
imul
cmpsl
sub
lock
push
sbb
out
inc
inc
cmpsb
jb
jns
and
sbb
hlt
push
insb
add
jge
stos
sbb
sub
jle
push
push
adc
mov
add
pop
adc
ret
pop
out
cld
mov
adc
dec
push
and
pusha
sub
lods
jae
jno
stos
fimuls
dec
sbb
in
outsb
mov
test
sbb
fs
cld
scas
es
cmp
push
mov
inc
sbb
cmp
movsb
sbb
jno
adc
mov
cli
and
call
cmp
jle
fcoml
cmpsb
repz
mov
xchg
in
fbld
pop
div
ret
mov
loope
sbb
lock
push
into
push
add
clc
or
and
sarl
out
jl
jne
mov
clc
fdivl
sbb
xchg
jecxz
mov
cwtl
xor
and
add
dec
pop
or
xor
rclb
popa
ret
cwtl
outsl
loop
or
lock
mov
xor
leave
in
sbb
mov
into
in
aam
xor
fiaddl
inc
bound
jp
dec
adc
rolb
mov
cli
jecxz
xor
mov
cmp
adc
in
in
mov
mov
mov
sub
inc
subb
xchg
test
andl
adc
stos
test
loopne
bound
push
pop
or
jl
inc
pop
adc
in
inc
mov
dec
push
dec
add
aad
mov
pop
mov
dec
adc
addr16
adc
dec
sub
pop
jp
out
sub
adc
jge
adc
cltd
repnz
int3
push
xchg
hlt
jg
shr
dec
cltd
movsl
popf
insb
push
jge
jmp
jne
push
xor
stos
or
pushf
bnd
cmp
sbb
frstor
cltd
mov
pusha
scas
xchg
or
push
add
lock
out
cmp
pop
mov
jbe
aad
mov
dec
movsb
insb
and
faddl
decl
and
mov
and
cmp
lcall
cmp
push
cmc
xor
mov
fdivl
das
ret
or
xor
fsubs
std
insb
or
and
dec
mov
cmp
insb
push
mov
mov
push
mov
test
or
imul
and
rol
test
outsl
mov
or
sbb
sbb
adc
test
mov
mov
int3
bound
sub
add
nop
ds
je
mov
aas
insl
imul
push
mov
das
adc
fdivrs
cmc
push
out
lret
jl
cld
pusha
hlt
pop
mov
xor
cmc
pop
pop
ljmp
lds
fcomip
out
mov
jae
gs
cli
sti
mov
push
iret
fsubs
fimuls
sub
dec
fcompl
sub
jno
lock
lods
gs
sub
mov
sar
sub
add
daa
adc
mov
add
add
sbb
cmp
cmp
jno
pop
sbb
cmpsb
mov
inc
out
fildl
cld
cmc
aad
aaa
cwtl
sub
pop
shrl
or
inc
xor
aaa
mov
xor
fidivs
sbbl
cmp
fisttps
sahf
pop
idivl
xor
sub
lahf
ss
adc
adc
cltd
sarl
xchg
or
cmp
mov
mov
aad
addr16
lcall
dec
pop
lea
cld
jnp
mov
enter
mov
fs
ret
jne
push
mov
fwait
into
lcall
jae
popa
outsb
outsb
xor
and
loope
ja
add
popf
jae
push
xchg
sbb
popa
adc
cmp
cmp
nop
cld
pop
rcl
and
mov
scas
sbb
das
shll
test
mov
repnz
hlt
push
leave
popa
std
or
dec
push
aaa
ss
dec
cli
inc
pop
and
pop
dec
ret
mov
push
cmc
pushf
aas
jne
test
sub
mov
ljmp
mov
xor
shlb
pop
lret
into
shrl
int
fs
add
or
mov
add
dec
pop
adc
je
call
mov
mov
dec
lods
xchg
fidivrs
addr16
xchg
incl
dec
nop
xor
stc
aad
pop
getsec
aas
aam
scas
cmc
jmp
loopne
push
inc
or
jmp
cmpb
pop
mov
fisttpll
xor
jle
mov
or
data16
mov
mov
sbb
lcall
pusha
aaa
out
sub
xchg
hlt
sti
cmp
nop
subl
mov
test
xchg
mov
rcll
dec
pop
push
rcr
lret
arpl
mov
jle
lock
movsb
dec
sbb
cmpsl
cmc
loop
xchg
movsl
jo
pop
out
rcl
mov
mov
add
cmp
add
xchg
jo
dec
movsb
std
lea
sbb
push
jl
stc
dec
xchg
out
rclb
and
sahf
cmp
lock
shll
xor
fdivrs
xor
mov
clc
jecxz
into
test
fisttps
and
test
clc
into
es
fwait
bound
or
test
aam
imul
adc
imul
hlt
pusha
add
inc
lods
icebp
xor
sbb
push
je
shrl
jno
call
mov
push
adc
push
cmp
nop
imul
mov
jo
jmp
or
outsb
mov
jg
jmp
loopne
jns
mov
xchg
push
inc
addr16
mov
loop
popf
adc
mov
lock
cli
addr16
mov
cmp
mov
mov
lds
push
movsl
insl
cmp
xchg
jl
outsb
pop
iret
lret
mov
cmpsl
add
repnz
cmp
add
gs
dec
js
mov
das
mov
xchg
cmpsb
jb
xor
inc
mov
clc
mov
or
xchg
and
jmp
outsb
sti
dec
and
add
sbbb
sub
clc
test
push
mov
adc
jmp
adc
mov
sbb
mov
push
insl
repz
xchg
push
push
ss
loopne
popa
inc
and
scas
dec
lret
xchg
or
mov
in
aas
add
sbb
pop
inc
ss
pop
sub
ficomps
add
jmp
std
lds
mov
mov
sbbb
jecxz
das
push
rcll
mov
cmp
push
lcall
xor
test
push
pop
add
int3
inc
aas
add
out
sub
xor
movsl
into
test
faddl
ret
insl
sub
in
pop
xchg
fmulp
test
imul
jge
lods
jge
xchg
inc
mov
sbbb
lea
ret
mov
sbb
mov
stos
stc
mov
or
pusha
stos
movsl
into
xchg
cmp
and
sbb
into
sbb
test
jecxz
leave
mov
enter
mov
sahf
and
push
and
push
sub
aam
pop
pop
pop
lret
xor
sub
add
adc
jo
or
mov
add
dec
sbb
cmp
test
push
push
popa
sub
jecxz
lret
and
imul
cmp
dec
loope
lock
fistps
std
xor
sti
inc
dec
sub
mov
mov
sub
stos
aad
in
in
cs
std
mov
data16
into
cmp
shrl
mov
mov
jmp
dec
inc
mov
fildll
pushf
cmp
inc
gs
push
test
les
in
fsubrs
adc
test
ficoml
and
js
leave
sbb
je
push
sub
sub
pop
or
jecxz
fs
cmpsl
sbb
aad
iret
jne
inc
dec
dec
loopne
nop
imul
jns
mov
dec
movsb
push
dec
loop
pop
loope
push
pop
push
lea
mov
dec
inc
sbb
fcomi
stos
push
fmulp
call
stos
out
rep
fisubs
push
leave
jns
jp
push
xor
popf
mov
add
hlt
xor
jmp
mov
mov
sub
jmp
daa
scas
xor
and
mov
std
xor
jge
xchg
inc
testl
mov
mov
cmpsl
push
push
leave
ret
jbe
and
adc
or
cwtl
mov
dec
pop
aas
fwait
inc
fisttps
and
iret
out
mov
mov
push
xor
cli
mov
or
mov
xchg
lods
push
lock
and
or
hlt
jnp
cwtl
inc
cld
sbb
js
je
pop
mov
adc
adc
fisttpl
jg
inc
mov
loopne
iret
inc
cmp
cli
enter
pop
mov
mov
xor
sahf
cmp
andb
loopne
push
sahf
sub
jbe
pop
out
push
repz
sarb
test
mov
or
mov
cmp
xchg
addb
pop
push
dec
add
popf
sub
cld
arpl
or
cmp
add
jo
out
daa
js
inc
pop
dec
mov
cmp
lcall
push
enter
fisttpl
lds
arpl
lods
into
dec
push
fwait
jp
mov
das
lods
loop
mov
orl
jo
out
cmp
and
jg
ss
xchg
mov
xchg
cvtdq2ps
insb
aad
scas
out
cmp
xor
pop
mov
repz
sub
sub
roll
mov
les
sub
lea
insl
scas
nop
push
jo
mov
and
or
decb
cmp
push
repz
mov
std
addr16
ljmp
mov
xor
inc
stos
lret
mov
sbb
mov
hlt
js
jns
mov
sbb
mov
and
mov
or
sahf
jnp,pn
pop
mov
insl
xor
mov
bound
xchg
imul
loopne
arpl
mov
lods
mov
mov
mov
cmpsb
fwait
jbe
notb
loopne
sub
mov
lahf
or
inc
mov
mov
movsl
or
and
mov
dec
lcall
icebp
into
std
jg
mov
dec
rorl
loope
int3
push
mov
fiaddl
mov
jb
test
fisttpl
popa
jg
scas
inc
fnstcw
push
fdivp
and
in
fs
xor
in
mov
loop
or
jl
repz
loop
xor
leave
insb
sbb
outsl
xchg
cmp
subb
dec
add
loope
cmpsb
loope
addr16
fiaddl
mov
mov
xchg
xchg
subl
xor
push
stos
repnz
xlat
jge,pn
pop
bound
imul
mov
popa
pop
push
mov
daa
pop
inc
ret
hlt
aam
sbb
stc
scas
xchg
sbb
sub
inc
cmpsl
lahf
push
dec
pushf
push
mov
mov
cwtl
outsl
jno
adc
iret
cmp
jae
sbb
sub
icebp
lods
test
jo
mov
jae
ss
or
ds
add
or
mov
adc
push
xchg
pop
aaa
ja
mov
dec
adc
subb
xor
cmpsb
jne
mov
shr
loop
lods
jge
mov
out
fwait
inc
mov
push
mov
and
xchg
cmp
loope
or
push
cld
stos
insb
aam
mov
mov
jle
sub
xchg
inc
das
aad
xlat
stc
or
leave
and
inc
push
jnp
roll
add
stc
sbb
sbb
dec
or
cmp
dec
movsb
jno
cltd
lret
xor
mov
cmc
test
lahf
testb
sub
xchg
sbb
out
fnstenv
cld
inc
push
dec
pushf
and
loop
push
xchg
std
call
or
repz
lock
pop
shr
push
mov
pop
cmp
pop
or
mov
adc
jmp
push
sbb
aam
jecxz
and
incb
push
fldcw
cmp
loopne
inc
ljmp
xor
jno
popa
addr16
or
dec
lret
scas
cs
mov
lea
ja
and
cmp
cwtl
in
adc
in
repz
xchg
mov
lret
sub
xorb
jnp
sub
sbb
push
mov
xor
sahf
popf
lcall
xor
pop
xlat
clc
fs
xchg
lret
jl
rcr
fmull
mov
jb
sub
test
mov
lret
test
mov
pop
mov
push
imul
sbb
or
dec
pop
movsb
add
xlat
push
daa
insb
test
pop
mov
out
add
fstps
imul
xchg
pop
sub
and
sbb
sbb
sbb
daa
fdivrp
hlt
fcomps
dec
mov
js
bound
xchg
inc
mov
sarl
out
sbb
enter
test
icebp
mov
imul
add
lds
jne
pop
xchg
sbb
mov
loopne
push
pop
dec
pop
jge
loop
subb
repnz
hlt
pushf
lret
mov
lea
add
xrelease
mov
mov
stc
jbe
lahf
addr16
sub
sub
jmp
mov
xlat
xor
mov
jge
es
and
leave
or
leave
jl
jne
es
mov
mov
xchg
daa
or
add
adc
xor
mov
ja
imul
test
pop
add
cmp
push
sub
mov
int
loopne
push
sbb
repnz
addr16
dec
mov
in
and
adc
cmpsl
cmp
sbb
movsb
fwait
xchg
not
pop
inc
cmc
dec
pop
incb
xor
jmp
insl
mov
mov
test
sub
mov
test
inc
mov
cs
daa
and
inc
test
pop
pushf
inc
ret
cmp
test
or
insb
popa
mov
push
jmp
sbb
popa
test
hlt
js
mov
lret
pop
add
cwtl
imull
dec
adc
and
adc
lods
and
std
sub
pop
sbb
and
add
jg
mov
push
mov
loopne
orl
sbb
rorb
fcomps
lods
fidivs
aam
jge
xchg
ficompl
clc
xchg
push
and
ret
lods
out
sub
mov
pop
out
lret
mov
into
ds
cmp
out
lock
mov
lret
jnp
jmp
xchg
sar
xchg
fmul
in
push
pop
sub
dec
sub
fwait
or
xchg
call
cmp
outsb
sub
hlt
mov
pop
pop
stos
dec
or
or
mov
in
jecxz
adc
cmpsl
adc
fwait
mov
lcall
loopne
imul
dec
xchg
mov
pop
clc
or
xor
pusha
addb
leave
mov
lret
jp
push
and
push
add
imul
adc
cmp
loop
shrl
stos
lds
push
aad
xor
es
aad
cmp
jo
imul
adc
int3
push
fists
xor
xchg
lea
dec
sub
out
mov
out
pop
mov
sbb
or
lods
jbe
mov
out
sub
lea
inc
data16
pushf
test
mov
cli
mov
addr16
xchg
daa
or
and
incl
jo
adc
in
out
lret
movsb
dec
add
subb
xchg
inc
inc
jg
call
repz
les
jns
fsubrp
push
and
popa
lods
jb
mov
scas
inc
xor
mov
or
test
xor
idivb
sbb
sub
out
jnp
in
sti
ljmp
or
xchg
arpl
inc
pop
lods
icebp
fimull
mov
adc
insb
or
push
fimull
mov
inc
mov
cmp
jns
jno
sbb
xor
pop
lds
jo
or
enter
int
dec
adc
daa
and
loopne
scas
xor
mov
push
jecxz
mov
mov
out
shll
pushf
fwait
lods
mov
loopne,pn
cwtl
sub
jg
insb
sbb
inc
nop
movsb
outsl
out
cwtl
mov
js
jo
ljmp
adc
xor
stos
aaa
dec
xchg
mov
mov
inc
mov
dec
fdivrl
jo
add
xchg
orb
enter
jmp
sbb
repnz
or
orl
inc
lcall
ja
iret
test
inc
leave
loope
sbb
insl
mov
add
aam
xor
cmpsl
push
ja
idivb
fnsetpm(287
jle
je
leave
int3
jno
adc
sbb
shlb
xor
loop
mov
fstpl
nop
sub
sbb
shlb
or
rolb
jnp
outsl
mov
lret
dec
inc
out
fcmovne
adc
add
fildl
xchg
cmp
movaps
outsl
push
push
scas
pop
ret
adc
pusha
dec
int3
xchg
add
sbb
sbb
fcoml
or
mov
neg
cmc
xchg
xor
cmp
movl
stc
sarl
or
arpl
pop
adcl
rcrb
test
scas
xor
hlt
and
inc
mov
lret
arpl
dec
inc
mov
inc
xchg
icebp
mov
lahf
jae
js
cmpsb
nop
jno
mov
push
clc
mov
lcall
lock
push
out
ds
stos
repz
dec
mov
ds
in
je
xor
xchg
clc
lods
mov
popa
das
mov
jo,pt
push
call
push
and
cs
imul
clc
pop
sahf
cmp
pop
push
jp
jmp
loopne
jb
fmul
shll
sub
sbbb
shll
pop
lcall
cmp
dec
call
sbb
pop
inc
es
xchg
push
adc
daa
mov
loopne
shll
mov
pushf
dec
int
sub
jbe
iret
mov
cmp
aaa
push
and
cmp
in
js
xor
fldl
ja
xchg
pop
push
fnstsw
and
arpl
xchg
pop
fcmove
adc
or
in
aaa
mov
clc
in
push
and
cmc
arpl
or
jae
scas
mov
insb
loopne
sub
sub
repnz
outsb
int
mov
and
mov
int3
xchg
jae
inc
xor
sarl
dec
sti
in
jns
xchg
fs
int3
aaa
push
xchg
je
mov
inc
jecxz
mov
shl
test
push
sbb
mov
inc
lret
sub
les
mov
mov
xor
cmp
cmpsb
xchg
andl
xor
insb
mov
sbbl
in
adc
and
mov
ljmp
push
inc
enter
imul
mov
xchg
inc
out
into
and
xchg
lds
imul
das
cmp
dec
mov
shrb
adc
pushf
js
sub
xor
and
clc
pop
cmp
pushl
pop
cltd
pop
movsl
sahf
jb
lods
push
loopne
push
sub
push
push
jne
pop
pop
lock
divb
inc
xchg
mov
popl
test
and
or
leave
xchg
fbstp
scas
ds
sbb
add
lahf
pop
push
push
test
inc
pusha
shr
in
and
mov
pop
mov
cwtl
adc
in
dec
jae
cmp
and
aad
test
out
cmp
sbb
std
and
pop
adc
das
add
mov
jne
insb
jbe
test
sbb
mov
mov
nop
movsl
sbb
cmp
and
xchg
sbb
mov
arpl
xchg
sarb
fdivr
sub
pushf
je
adc
shll
sub
jge
adc
cltd
or
pusha
xor
mulb
cmp
fdivr
fdivrs
std
mov
mov
roll
negl
push
out
cltd
sbb
or
cmpsb
pop
test
push
push
rclb
das
inc
insb
xchg
shlb
ret
inc
pop
and
jnp
enter
sbb
sub
pop
jmp
sbb
mov
popa
mov
xor
cltd
mov
push
adc
xor
push
sbb
enter
sub
int3
add
movsb
cli
lods
stc
adc
sbb
or
cmpsl
jno
jo
insb
fwait
cmpl
ds
rcrl
inc
rorl
push
xchg
xor
movups
in
movsl
or
fstpt
popf
test
stos
and
sub
fs
testb
push
mov
cld
out
xor
push
fs
adc
push
pusha
cli
lret
or
cmp
sub
or
in
jle
xchg
push
idivb
lds
cli
xor
stos
xor
pop
add
cmc
dec
lock
xor
fildll
inc
repz
xchg
jecxz
dec
iret
fstpt
incb
mov
nop
sbb
cmp
gs
push
sbb
mov
insl
mov
xor
outsl
xchg
jmp
sub
lret
add
jl
mov
pop
adc
into
dec
jb
in
pop
aas
adc
popa
pushl
cmp
push
test
cmp
sbb
clc
mov
pop
scas
xchg
jecxz
sbb
imul
or
stos
lret
or
rcr
mov
push
jno
fwait
loope
adc
or
xlat
add
pop
lret
fsubrs
dec
mov
les
movsb
sub
mov
pop
lods
xor
mov
test
mov
mov
mov
cmpsb
adc
xchg
addps
mov
push
fnstsw
cmpsb
clc
dec
mov
sbb
jns
jmp
in
mov
lods
call
jne
fdivrl
jp
xor
push
xchg
xor
ret
mov
test
ror
mov
and
icebp
xor
jp
arpl
mov
mov
ret
repnz
and
popf
int3
sub
vpaddd
mov
xor
sahf
mov
push
and
dec
repnz
mov
jbe
pop
dec
adc
lea
mov
xor
fnsave
adc
repz
adc
push
push
xchg
out
sub
aad
xor
sbb
popf
inc
fstl
jns
fdivl
push
lock
xor
sbb
ss
mov
ret
int3
stos
insl
fists
arpl
xlat
push
xlat
fsubrs
sbb
mov
cli
fcoms
andb
xchg
xlat
mov
add
inc
and
test
lds
into
push
jne
iret
sub
dec
sahf
inc
ljmp
out
sbb
scas
filds
pop
mov
adc
lret
dec
add
lahf
push
sub
sub
mov
mov
dec
xchg
jo
sbb
loopne
or
dec
cwtl
lret
xor
pop
xchg
scas
sbb
ret
push
xor
repz
lret
add
jmp
ds
mov
push
lds
sbb
arpl
xlat
xchg
nop
fmuls
out
inc
dec
popa
fs
cmp
add
cli
and
stos
add
xor
mov
imul
hlt
dec
int3
idiv
mov
mov
sub
js
shl
mov
adc
and
scas
iret
loope
and
mov
mov
bnd
fimull
dec
idivb
xor
push
jno
fidivrs
icebp
xchg
push
sbb
orb
aad
aad
cmp
mov
push
inc
adc
xchg
add
ficompl
adc
and
sbb
arpl
dec
test
fstpt
fisubrs
decb
ss
out
outsl
jle
sti
ds
pop
cmc
mov
mov
jo
test
mov
pop
jb
jns
lret
jmp
sbb
push
push
mov
xchg
cmp
scas
mov
sub
dec
cmpsb
jno
mov
or
rorb
movsb
push
sbb
fsubrs
or
repnz
sbb
add
sbb
or
xchg
lret
pop
cs
lods
lods
in
pop
cmp
jne
inc
aaa
inc
xchg
insb
and
arpl
push
add
cmpsl
mov
adc
pop
push
mov
imul
in
sbb
cmp
movsb
push
out
out
or
push
sarl
arpl
mov
xor
leave
or
xlat
and
rol
dec
pop
push
stos
ret
push
adc
mov
sub
and
les
dec
loopne
rcll
shr
mov
mov
jnp
sub
je
sub
decb
into
xchg
adc
xor
cmpsl
es
pop
in
or
enter
andb
int
negb
rcrl
repz
and
loope
add
idiv
push
stos
adc
sbb
pop
jmp
imul
lret
fwait
out
divb
xchg
xchg
mov
ljmp
jno
and
dec
dec
decb
cld
push
insb
mov
pop
out
sub
dec
int
lea
mov
pop
mov
mov
sarb
jno
pop
xchg
fcompl
mov
pop
mov
or
add
adc
or
sub
xchg
sub
push
pop
cmp
fists
add
out
mov
loop
into
test
or
mov
and
stc
std
pop
test
sarb
and
nop
adc
jp
mov
sub
mov
into
imul
xor
sub
push
pop
rolb
push
test
aam
arpl
icebp
loop
add
sbb
popf
mov
cmp
bound
lret
sbb
ret
push
aam
lods
mov
jo
or
and
jne
xchg
cmp
sarb
ljmp
xlat
lret
jp
imulb
push
lods
fsubl
dec
out
adc
pop
mov
dec
ja
insb
loope
dec
int
sub
pop
dec
sub
mov
cmp
adc
cmp
call
cmp
sub
mov
or
or
xchg
or
sbb
cli
shr
xchg
jb
xor
mov
repz
aaa
lods
add
lods
stos
pop
les
arpl
sbb
or
pop
ja
scas
lret
pop
push
lock
mov
aaa
hlt
loope
sbb
lret
mov
lcall
push
cmpb
mov
mov
popl
mov
cmp
out
cmp
push
sub
inc
cli
or
pop
jns
sbb
cmp
or
pop
mov
mov
xchg
fmulp
ss
pop
mov
adc
push
aam
add
aam
or
inc
and
ja
ljmp
cmp
mov
div
push
or
mov
xor
std
push
shll
xlat
imul
scas
insb
cli
loopne
outsb
das
jmp
inc
testb
cmp
movsb
cli
jae
fidivrl
add
jg
push
jmp
push
mov
and
jle
sbb
mov
leave
or
int
push
das
pop
sub
nop
pop
aaa
sbb
lea
dec
and
into
aad
jo
xor
adc
mov
xchg
cmp
fmuls
xchg
cmp
sbb
lcall
das
xchg
adcl
cmp
inc
mov
mov
mov
adcl
pop
push
stos
hlt
ja
mov
rolb
add
lock
xor
xchg
fdivr
enter
jnp
jb
loope
dec
lcall
mov
mov
or
or
fiaddl
loope,pt
or
loopne
pop
imul
or
movsl
shlb
push
ss
cld
scas
mov
xchg
mov
pop
cmp
fnstenv
add
or
jl
xor
jae
testb
insb
int
sbb
adc
mov
movsb
xor
inc
les
and
or
sbb
nop
mov
mov
repnz
xchg
enter
ficomps
or
insb
movsl
push
pop
push
sub
adc
jge
cmp
or
sub
cmc
cltd
stos
and
mov
dec
pushf
mov
adc
ljmp
add
sbb
mov
pop
push
xchg
imul
clc
dec
je
loopne
and
pandn
sbb
jmp
mov
xorb
sbb
jle
push
test
repnz
mov
jecxz
movsl
pop
fcompl
insb
or
jo
jo
cmp
mov
lret
xor
repz
xor
sub
xchg
pop
movsb
cwtl
scas
ret
popf
cmp
mov
repnz
addl
outsb
in
movsl
xor
xlat
cmp
jmp
dec
imull
mov
add
out
pop
icebp
nop
popa
inc
or
mov
shrl
mov
add
inc
mov
popa
lahf
ljmp
outsb
fs
xorb
aas
ret
sbb
jg
sbb
inc
mov
jns
inc
jae
pushf
xor
sbb
push
leave
add
mov
mov
adc
mov
daa
test
out
nop
xchg
mov
inc
adc
iret
inc
jle
iret
ljmp
mov
ds
push
jnp
pop
cwtl
out
push
fstpt
jmp
iret
xor
and
scas
daa
shlb
iret
dec
cmp
mov
lcall
mov
rclb
or
sub
push
xchg
sbb
int3
lods
mov
push
jg
and
jmp
mov
pop
shl
push
sbb
adc
xchg
add
sti
add
sbb
pop
or
mov
movl
pusha
sarb
cmp
subb
or
adc
jmp
les
stos
lods
inc
test
jmp
inc
jmp
into
test
pop
sbb
les
mov
xchg
xchg
mov
push
sti
lods
popf
push
mov
adc
lock
or
mov
or
int3
mov
push
adc
movsb
aam
outsb
and
cmpsb
movsb
outsl
ret
and
xchg
stc
ret
push
cltd
inc
jmp
cmp
rcrb
dec
or
xchg
stc
jae
pop
enter
das
dec
or
movsl
cmp
das
push
inc
outsl
loopne
sub
enter
subb
sub
jae
repz
fistl
add
lret
movsb
push
lock
enter
lods
movsb
mov
insb
lret
inc
repz
cmp
fsubs
cmp
add
sbb
push
shl
push
inc
nop
or
dec
add
cltd
daa
stos
ljmp
xchg
mov
sbb
scas
and
sar
mov
je
imul
sbb
jp
pop
fsubrs
test
jns
inc
cmp
sub
pop
xor
shrl
rol
popa
add
cmp
js
stos
cmpsl
leave
xchg
pop
dec
in
pop
je
int3
stos
fcmovbe
pop
lods
or
mov
xor
aad
insb
rcll
mov
xchg
xchg
fsubr
and
mov
fstpl
sbb
or
and
cmpsb
das
lahf
push
inc
jge
fwait
cmpsb
mov
lcall
pop
sbb
push
cwtl
fimull
lcall
lods
and
cmc
sub
inc
dec
stos
inc
xor
shr
push
les
andl
inc
pop
fprem
daa
jb
mov
in
inc
dec
xchg
dec
and
cmp
cmp
fdivrs
or
add
sbb
inc
scas
cli
aaa
sar
ds
or
add
mov
mov
pop
std
addr16
clc
bnd
and
in
aam
inc
or
int3
popl
test
rcr
and
cli
movsb
sub
push
cmp
mov
mov
imul
mov
cli
addb
add
loope
ja
in
shrl
or
dec
dec
adc
xlat
fistpll
cli
in
push
daa
inc
iret
ret
icebp
mov
dec
cmp
sbb
inc
jnp
loop
testb
leave
pop
in
adc
scas
sbb
notb
xor
dec
inc
cwtl
hlt
inc
xor
sub
and
xchg
fbld
sub
xor
mov
data16
jp
mov
push
cs
sub
nop
int3
aam
mov
pop
cmp
mov
in
in
pop
add
aas
adc
mov
jl
jo
mov
sub
push
and
lret
pop
xchg
push
adc
fnstcw
push
movsb
push
nop
sub
pop
add
cltd
lahf
cmc
addb
jmp
xlat
mov
lea
push
or
fcompl
mov
enter
aad
mov
xchg
fisttps
mov
mov
ljmp
and
stos
sarb
cltd
push
loopne
ficoml
roll
jmp
test
arpl
test
out
jp
subl
divb
inc
mulb
push
mov
arpl
cmp
jecxz
or
dec
pop
ljmp
mov
push
mov
sub
push
mov
dec
das
sbb
jmp
add
enter
mov
jl
sub
rolb
shll
cmp
add
sbb
aas
int3
mov
lods
mov
xchg
in
xor
out
sbb
push
inc
xchg
jge
jecxz
in
repz
lret
xor
ljmp
lret
subb
lods
pop
das
xchg
testb
mov
lcall
dec
mov
add
cmpsl
sub
shrl
jmp
push
dec
jns
jae
jecxz
mov
scas
cmp
xor
pushf
push
push
and
mov
inc
add
jmp
add
xor
add
sbb
xchg
push
sbb
ret
nop
std
adc
sarb
scas
shl
jnp
and
lret
arpl
mov
mov
les
lock
les
jo
loop
push
push
sbb
imul
push
mov
mov
repnz
insb
mov
adc
and
pusha
pop
mov
mov
add
shlb
stos
mov
jb
xorb
inc
scas
popa
mov
mov
push
data16
push
push
pop
cwtl
push
jae
dec
sbb
fmul
fadd
add
enter
repz
sub
daa
pop
sub
jnp
or
mov
xchg
iret
push
cmp
jmp
outsb
add
mov
mov
std
pop
je
out
hlt
pop
and
dec
pop
mov
aam
rcll
xor
mov
add
xchg
iret
dec
mov
test
rclb
sub
es
jnp
inc
into
addl
rorl
cmpsb
mov
pop
dec
mov
xor
add
addr16
divl
dec
inc
xchg
lods
adc
test
or
js
pop
mov
ret
notb
mov
pop
es
inc
xchg
fimull
push
dec
sub
and
out
inc
imul
push
mov
jmp
xor
inc
fxch
mov
xlat
sub
xlat
xchg
push
addr16
xorb
shlb
lods
pop
int3
push
imul
iret
pop
adc
punpckldq
xor
jne
lahf
cld
add
and
sbb
xchg
push
xchg
mov
sub
sti
fs
and
ret
cmpsb
and
push
cmp
mov
mov
aam
les
ja
lods
icebp
xlat
scas
imul
ffree
jl
xor
cld
les
pushl
jge
mov
mov
xchg
fistpll
and
je
cmp
pop
add
add
cli
loopne
or
sub
insb
pop
aaa
sbb
es
xchg
sub
repz
shlb
mov
aas
jmp
xor
add
in
int3
add
pop
or
fcomip
call
dec
xchg
popa
in
scas
cvtpi2ps
ss
xor
cmpsb
ss
cmp
pushf
dec
aam
mov
in
dec
loope
add
popf
sbbl
ret
popf
inc
addr16
push
mov
inc
mov
insb
call
fs
cmpsl
jmp
push
fnstsw
imul
loop
leave
roll
add
add
pop
sbb
es
push
or
rorl
cltd
daa
jg
movsl
aam
inc
sarl
inc
mov
dec
lcall
into
ficompl
ja
push
mov
mov
push
mov
push
jle
nop
or
cli
nop
mov
pop
lea
xchg
and
sti
into
es
pop
mov
fdiv
or
lfs
sti
mov
dec
movsl
insb
lahf
sbb
repnz
push
imul
dec
push
ret
fistl
dec
cld
or
and
lret
add
xor
cmpsb
aam
cmp
lock
xchg
pop
inc
pop
cmpsb
andps
push
mov
mov
adc
xchg
xchg
xchg
adc
cwtl
mov
push
repz
jle
mov
enter
test
shlb
xchg
sbb
dec
sub
loopne
jl
xchg
adc
fcoms
outsl
xor
sub
hlt
rclb
and
xchg
test
sub
stos
sub
div
dec
test
cwtl
enter
cmp
out
mov
push
adc
vpmaddwd
sub
pop
xchg
add
mov
fisubs
xchg
ret
dec
push
cmp
and
sub
mov
mov
lods
and
test
mov
stc
fisubs
adc
adc
push
sbbl
popl
testb
mov
popf
adc
repnz
gs
jne
jmp
es
jg
roll
or
iret
mov
adc
xchg
lods
enter
stos
add
rcl
mov
add
out
sbb
push
push
mov
int3
sbb
mov
mov
adc
mov
sub
xor
push
hlt
jae
cltd
loop
aaa
in
outsl
mov
xchg
and
mov
sti
mov
imul
outsb
mov
scas
mov
arpl
roll
adc
inc
lret
inc
inc
pop
mov
std
in
jle
pop
out
insb
sub
retw
cli
inc
or
shll
xchg
xorl
inc
adc
sbb
lret
or
inc
js
jmp
pushf
cmp
xchg
aam
testb
fcoms
jno
lds
xor
inc
stos
cmp
fstl
rclb
push
movsl
das
or
inc
push
pop
xor
call
xlat
or
dec
xor
jns
pop
mov
pop
stos
cmp
jle
movsl
jle
dec
jge
push
je
sub
add
jbe
divl
popf
push
lcall
in
push
lods
cmpb
sub
push
or
rcl
and
pushf
dec
cmp
sbb
mov
pop
mov
mov
sbb
xchg
jecxz
cwtl
pushf
sbbl
shl
push
cmp
clc
xor
test
or
push
movsl
inc
cltd
test
cmp
nop
scas
shrl
adc
mov
sub
push
dec
nop
push
sti
pushf
loope
cmp
dec
inc
add
out
sub
cltd
pop
outsb
adc
xor
or
mov
int
dec
mov
sub
jno
sbb
lods
mov
popa
int
or
bound
lock
jle
push
pusha
std
cmp
lahf
test
sti
imul
dec
scas
aam
adc
lea
mov
insb
loopne
dec
test
pop
cwtl
mov
pushf
xchg
daa
adc
jge
xchg
stos
sbb
mov
mov
add
jmp
andb
pop
xor
jg
dec
dec
push
int
lea
faddp
cli
xchg
pop
push
leave
ret
int
insl
xlat
and
out
loopne
mov
rcrb
adc
or
or
jl
sarl
xchg
sub
push
jmp
lods
clc
mov
sub
sub
xchg
jne
pop
mov
icebp
ds
rorl
repz
in
sbb
jl
jns
xor
dec
inc
filds
xlat
add
outsl
jns
adcl
cmp
and
dec
fidivrl
jle
inc
cli
push
sti
sub
mov
and
mov
je
and
inc
test
rcrb
lahf
insl
mov
jecxz
push
xchg
sti
fisubl
xor
jo
xorb
pop
ljmp
jmp
cli
roll
sbb
sbb
inc
imul
xchg
movsl
add
cmp
loopne
adc
push
out
and
sbb
xor
iret
imul
arpl
sub
stc
cli
add
xor
fadds
repnz
je
icebp
andl
push
fld
pop
mov
dec
add
testl
ret
mov
cmp
xchg
sub
push
dec
or
pop
jno
or
mov
add
mov
mov
jbe
mov
fadds
xchg
lods
vpsllq
inc
int3
js
mov
int3
xor
movsb
neg
add
jmp
sbb
cltd
xchg
jmp
jo
mov
add
cld
xor
and
mov
and
pop
stos
lea
out
aas
int3
divl
clc
test
insl
xor
inc
cmp
into
dec
or
pop
xor
addl
arpl
mov
pop
mov
fcomps
xor
and
lods
loope
push
adc
stos
mov
pop
mov
insl
shrb
and
push
mov
mov
sub
cmp
inc
and
push
out
js
inc
pop
std
negb
pusha
lret
icebp
mov
cmpsb
push
decb
std
pusha
cmp
jle
ja
push
mov
and
cmp
outsb
icebp
mov
jo
lret
lods
or
mov
out
aas
cmp
in
and
rol
scas
rcll
jo
xchg
inc
addr16
pusha
popl
ss
and
addl
out
xor
mov
andb
gs
sahf
inc
jbe
mov
mov
xor
nop
mov
pop
mov
sti
psrad
sarb
and
popl
mov
mov
jne
xor
idivb
xor
roll
dec
cltd
xchg
fdiv
dec
dec
push
push
mov
call
stos
mov
mov
cmpsl
cmp
xor
pop
jg
adc
inc
sti
dec
ficompl
out
adc
cltd
insb
sub
leave
lock
mov
jg
adc
pop
add
fwait
call
jmp
adcl
icebp
mov
xor
adc
aam
fdivs
les
mov
and
jmp
stc
dec
inc
call
hlt
dec
cli
jg
sbb
or
clc
pop
das
insl
lods
pop
inc
cmp
clc
lods
add
mov
loopne
jle
jl
aad
adc
jne
push
loopne
mov
nop
inc
pop
lock
cmpsl
inc
sub
cli
es
ja
shlb
xchg
xor
aaa
mov
sbb
repz
add
sbb
fmuls
lret
mov
sbb
xor
mov
mov
mov
aas
mov
shlb
sbb
insb
inc
cmp
cmpb
dec
or
dec
clc
inc
pop
mov
mov
arpl
and
in
loopne
add
rcll
lret
lret
outsl
dec
pop
push
fnsave
dec
int
cmp
dec
orb
popf
sub
sbb
push
mov
or
popf
js
std
fldenv
xchg
mov
add
xor
jecxz
in
pop
dec
std
xor
shlb
dec
das
cmp
fdivrl
pop
dec
ds
xchg
lock
loopne
cltd
cmpsb
push
sbb
sbb
mov
inc
sub
lods
cmp
les
mov
mov
iret
adc
jle
mov
out
cmp
ja
out
jns
scas
pop
lods
cmp
cmc
mov
mov
aas
mov
loope
xchg
mov
orl
jae
and
mov
mov
push
stos
push
hlt
addb
add
pop
xchg
test
subb
xor
outsb
cmp
ret
push
je
cltd
push
loopne
pop
or
adc
mov
jb
lret
pusha
add
cmp
scas
add
xor
lahf
ret
lds
cmp
jl
pop
test
nop
outsb
lahf
dec
pop
adc
xor
js
lahf
pause
mov
and
movsb
xor
icebp
cwtl
movsl
inc
fisubl
orb
mov
in
lret
orl
dec
sti
fists
pop
jnp
dec
pop
das
xor
sti
stc
or
sar
push
or
xlat
jecxz
sti
xchg
sti
lahf
imul
adc
push
and
push
imul
jbe
fldcw
add
or
js
sbb
xchg
pop
cmp
dec
adc
lret
ds
sti
call
push
mov
cli
out
xchg
sti
std
jge
mov
js
xor
out
out
and
and
div
mov
cli
pop
sbb
push
sti
cmc
cmpl
mov
pop
xor
bound
mov
inc
cmc
add
add
add
pop
jbe
mov
mov
cltd
add
push
loope
jns
rorl
sbb
dec
imul
jp
cli
notb
dec
adc
hlt
pop
decb
lret
add
rorb
lcall
shrb
xor
test
fstpl
adc
in
cmp
lds
pop
or
cmp
jecxz
ja
mov
ror
in
mov
sub
es
enter
add
pop
inc
cmc
jb
sti
cmpsl
mov
push
jne
pop
movsb
add
ret
aas
xor
inc
or
int
xchg
ret
adc
sub
xor
fwait
in
xchg
leave
frstpm(287
aam
js
inc
loope
daa
cs
cmpsl
push
lret
adc
inc
mov
and
cmpsl
cmp
or
or
mov
mov
pop
movsb
xchg
aam
es
cmp
cmp
inc
adc
or
or
arpl
popf
dec
repnz
and
push
aam
popf
out
out
sbb
xor
aam
mov
cmpsl
mov
cmp
add
fwait
mov
dec
sub
in
arpl
sbb
cltd
mov
mov
loop
xchg
aam
cmp
lahf
out
test
fstps
nop
fcomps
out
imul
lret
movsb
test
fcom
push
xchg
fsubr
inc
add
lret
jge
shlb
ja
cmp
ret
iret
mov
inc
mov
mov
aaa
xor
int
aaa
add
and
or
or
cmpb
and
aas
mov
pop
push
sub
pop
xor
insb
aaa
stc
jg
push
sbb
loop
lret
or
sbb
jmp
insl
and
mov
das
fstpt
ficompl
mov
sbb
loopne
loope
push
xor
ljmp
cmp
mov
loope
mov
push
xlat
je
dec
pop
and
jge
sub
add
into
pop
pop
movsl
pop
imul
scas
dec
sbb
popa
fcoml
stos
mov
fbstp
lock
mov
outsl
mov
testb
arpl
addb
cltd
fucom
mov
scas
add
jnp
int
aam
adc
lds
push
adc
outsb
and
cmc
and
fistl
nop
mov
popf
mov
lahf
push
aam
inc
paddusw
out
nop
sbb
pop
aas
mov
arpl
into
mov
push
test
repz
mov
jne
xor
push
jecxz
dec
outsb
inc
mov
outsb
movsb
xor
mov
push
push
lcall
sti
imul
sahf
jge
mov
es
orl
outsl
dec
int3
pop
iret
fsts
or
cltd
sbb
fcoml
push
and
faddl
mov
add
mov
lods
outsb
in
sarb
add
mov
mov
mov
sub
test
or
imul
jb
test
aad
adc
pop
sub
shrd
pop
pop
xchg
pop
xchg
lds
push
bound
jmp
adc
inc
inc
mov
cli
push
cmp
mov
push
lret
sahf
gs
dec
or
ret
scas
out
outsb
imulb
xchg
push
test
mov
ret
mov
fcos
stos
xor
xchg
cmp
mov
xor
out
xchg
jbe
mov
adc
bnd
testl
sahf
push
stos
sub
inc
test
scas
mov
mov
repz
in
and
xchg
or
sbb
jbe
stos
push
xchg
imul
or
lret
cmp
ljmp
xchg
in
fwait
jb
dec
shll
int
decb
mov
dec
out
and
fsubrp
mov
scas
add
movsb
xchg
jae
push
pop
cmp
loopne
stos
test
fs
lods
imul
dec
adc
jge
sub
js
push
fisubs
test
push
mov
or
in
test
pop
test
inc
sbb
daa
xchg
repz
xchg
mov
dec
fsubrs
pop
aad
pop
pop
fisubl
pop
add
add
insl
mov
imul
sub
pop
jno
clc
mov
xor
xor
xchg
xor
cmp
cmpb
iret
dec
bound
xor
mov
pushf
or
mov
push
xor
ljmp
mov
add
mov
daa
or
movsb
add
daa
cmp
sti
loop
in
cld
idivl
mov
in
mov
fiaddl
orb
in
clts
push
jl
jecxz
leave
test
and
clc
or
mov
gs
xlat
mov
jne
cmc
fdivr
mov
sahf
push
jecxz
push
lret
outsb
lods
pop
xchg
and
rcrl
push
add
inc
or
rcll
divl
movsb
movsb
iret
sub
mov
aad
jns
movsl
lock
xchg
push
sub
jg
push
jne,pt
je
mov
xchg
sub
push
xchg
call
inc
cltd
jb
std
loopne
xlat
out
pop
outsb
and
push
imul
aad
mov
cmp
xor
lds
movsl
je
fwait
mov
imul
sbb
cmp
jbe
data16
add
xchg
add
fcmovnb
and
pop
sahf
and
repnz
lcall
cmc
mov
push
adc
dec
mov
dec
or
cwtl
inc
movsb
sub
fucomi
and
rorb
sbb
xor
mov
push
shr
add
cld
adc
std
rcrl
test
sbb
insl
cmp
dec
int3
mov
lock
dec
bound
pop
jbe
push
cmp
movsb
pop
xchg
pushf
pop
or
push
sti
mov
aad
jge
fldl
in
inc
mov
fnstenv
daa
push
in
dec
rclb
sbb
rcll
push
mov
push
or
out
je
mov
sbbb
mov
pop
mov
js
stos
jno
ljmp
push
in
aas
mov
and
repnz
or
adc
ret
sarl
movsl
push
mov
sti
sbb
mov
and
push
popa
iret
fisubs
popa
pop
dec
cmp
loop
cltd
push
inc
dec
imul
mov
stos
mov
mov
mov
push
sub
lea
mov
push
adc
jmp
test
sbbb
fmuls
leave
cmpl
jmp
lcall
mov
dec
jnp
lods
in
pop
lret
ret
decl
test
add
cmp
mov
pop
ja
imul
sbbl
je
mov
mov
mov
stos
mov
movsl
pop
sbb
jle
scas
inc
ds
cmp
add
jmp
jecxz
sub
mov
mov
fldenv
jge
int
rorl
lea
xlat
orl
das
lret
aam
std
fstpl
jae
hlt
or
xor
mov
sub
call
stc
sbb
cmp
mov
movsl
lods
icebp
call
sbb
or
into
jg
xchg
dec
das
stos
ret
and
aas
dec
pop
lret
popa
mov
cmp
icebp
pop
fists
out
and
and
test
loop
shrb
adc
ja
adc
popf
mov
inc
enter
sub
in
push
push
jns
pop
test
mov
stc
adc
mov
or
xor
les
xor
or
mov
lods
enter
lods
jmp
in
imulb
ret
gs
les
cmpsb
mov
add
popl
pop
sub
ljmp
adc
inc
pushf
gs
inc
inc
pop
es
das
mov
cmp
lcall
xorl
mov
add
or
int3
dec
xor
add
cmp
loop
dec
push
dec
add
loop
out
fs
mov
sub
xor
jbe
dec
leave
stos
inc
sti
insl
mov
inc
push
xor
cmp
mov
xor
mov
push
pop
dec
mov
jl
xorl
jg
scas
xchg
or
dec
iret
jb
lret
outsb
ljmp
push
movsb
cltd
insb
movsb
push
mov
mov
gs
and
push
cs
jns
xor
jne
movsb
push
lods
jmp
pusha
xchg
xchg
in
cmp
repnz
pop
mov
pop
dec
fmull
pop
lret
push
lods
inc
and
and
sarb
mov
pop
dec
push
in
or
dec
cmc
xchg
inc
fadd
jmp
mov
lods
pop
aad
out
jge
adc
je
xor
or
lahf
xchg
dec
test
adc
jmp
shrl
nop
dec
ret
outsb
jge
out
push
inc
jae
orl
mov
pop
ds
es
adc
sub
mov
pop
mov
fmul
xor
mov
addl
fldenv
into
xchg
pop
daa
add
in
mov
add
in
jo
jo
insb
stc
push
xlat
sbb
cmp
in
rclb
push
fbstp
jo
out
inc
or
or
sub
xchg
xor
cmpl
mov
jmp
xor
jae
js
aad
cmpsb
shl
sub
inc
mov
pop
sahf
mov
push
sub
pop
mov
inc
fimull
cli
sbb
sbb
inc
xchg
jmp
jnp
push
push
sbb
ja
rcll
sbbb
mov
ljmp
mov
cmp
push
dec
mov
sbb
nop
aas
mov
sbb
adc
mov
pop
movsb
xor
add
inc
dec
in
bound
into
mov
pop
fdivs
mov
sbb
daa
scas
jle
sbb
aam
mov
pmaxub
lds
daa
or
push
jns
fmul
insb
adc
jnp
js
pop
adc
insl
add
call
in
test
loop
test
fsin
loopne
stc
jnp
arpl
jmp
ret
enter
xchg
lods
pop
pop
jle
pop
xor
or
sbb
xlat
testb
lcall
imul
stc
movsb
hlt
dec
dec
push
mov
fldcw
inc
lcall
nop
or
ds
test
das
pop
mov
ds
lods
lcall
daa
or
in
add
inc
inc
add
fs
push
aas
dec
push
and
mov
adc
in
lahf
cli
add
sub
popf
inc
out
jecxz
mov
inc
push
loopne
insl
fdivrl
repnz
dec
data16
jae
aam
repnz
repnz
mov
out
xchg
jns
pop
movsb
clc
inc
test
test
aas
xor
mov
addr16
push
in
dec
les
ja
andl
mov
ljmp
outsl
mov
in
imulb
ja
xchg
sbb
dec
insb
cmpl
or
aaa
mov
sbb
xchg
decb
xor
mov
mov
sarb
scas
cld
dec
gs
dec
mov
icebp
insb
mov
in
fimuls
xor
push
jg
aam
mov
pushf
cwtl
out
push
mov
sar
xchg
add
mov
jno
jp
pop
xor
mov
hlt
push
xchg
icebp
roll
sbb
adc
ss
sub
in
lret
mov
jle
addl
fs
addr16
push
in
pop
rcr
and
push
sbb
ret
stos
lock
sub
in
mov
inc
int3
jecxz
cmp
gs
iret
test
and
int
xor
inc
cmpsb
ljmp
mov
clc
add
pusha
lahf
and
pop
jns
enter
mov
in
add
fs
out
pusha
mov
fs
imul
aaa
mov
push
push
add
loop
xchg
sti
xor
adc
add
or
test
pop
sbb
inc
fmul
out
and
mov
sbb
hlt
and
inc
call
out
ficompl
rclb
pop
int3
movsb
xor
mov
inc
ret
add
out
adc
adc
and
ja
ss
mov
arpl
int
mov
ret
push
and
cmc
icebp
out
pop
fcomps
fs
fsqrt
and
pusha
fcompl
xchg
push
add
sbbb
clc
popf
fmull
dec
in
sahf
lods
lcall
fildll
outsl
mov
jnp
jno
jbe
leave
test
dec
shrl
pop
mov
sub
sub
cltd
sbb
mulb
xor
fs
mov
dec
call
inc
jnp
sbb
cmp
push
fdivl
jmp
in
add
jecxz
mov
pop
and
xchg
fwait
pop
mov
loope
repnz
lds
sub
rolb
mov
xor
xchg
aam
jne
jnp
adc
inc
pop
and
xchg
xchg
jb
je
jge
imul
mov
sbb
xor
rorl
xchg
mov
scas
ljmp
in
ret
cmp
xchg
insl
sbb
mov
pushf
aam
and
sbb
aas
stos
scas
cli
sbb
sbb
mov
jbe
cmp
cmpsl
dec
incb
adc
faddl
ljmp
mov
xchg
lret
cmp
mov
enter
and
movups
loop
push
sub
dec
jg
dec
and
xchg
adc
enter
cmpb
ret
and
loopne
nop
push
out
push
scas
mov
pop
clc
in
dec
cwtl
add
jecxz
test
fidivrl
lea
fbstp
cmp
xchg
test
adc
repnz
insb
out
cmc
orl
mov
aaa
fcom
imull
mov
push
outsl
fstl
cwtl
dec
jle
or
mov
xchg
cmp
mov
dec
enterw
testl
adc
sub
testl
lahf
xchg
hlt
int3
aad
inc
mov
mov
int3
push
jp
push
cmpsb
outsl
pop
sbb
mov
test
int3
dec
ja
xchg
fs
inc
inc
int3
arpl
jb
aam
push
push
rcrl
and
and
negb
cmp
stos
sbb
lahf
int3
pop
inc
push
hlt
cltd
push
inc
jnp
ret
jle
fcmovbe
repnz
addl
inc
das
stos
jmp
xchg
test
lock
xchg
mov
insl
imul
xchg
rclb
mov
mov
add
pop
inc
cmpsl
leave
stos
les
mov
xor
mov
dec
lock
mov
and
repnz
sahf
push
lods
add
adc
mov
into
jno
mov
mov
add
sbb
mov
xchg
les
bound
jg
rorl
test
mov
pusha
rclb
outsb
or
loope
pop
out
insl
insl
mov
cltd
mov
add
incb
insb
imul
jae
lock
jecxz
leave
pusha
shll
mov
jge
arpl
movsl
fsubs
mov
lahf
test
and
pop
rcrb
sub
push
repnz
and
lahf
jg
mov
call
out
cmp
jne
in
sahf
push
cmp
cmc
adc
sub
mov
jecxz
clc
push
sbb
call
rolw
adc
pop
movsl
mov
dec
stc
out
add
icebp
sarl
mov
mov
mov
call
jno
mov
jo
loop
leave
leave
mov
adc
dec
or
mov
mov
pop
mov
adc
mov
xchg
adc
xor
mov
mov
in
rcr
add
scas
mov
pop
ja
pop
pop
mov
mov
int
and
repz
add
bound
push
out
cmc
shll
add
jge
sbb
testl
fnsave
and
cltd
inc
adc
mov
mov
call
ds
mov
sarb
push
and
sar
sub
mov
and
add
or
xchg
jo
lock
dec
mov
dec
adc
sbb
mov
sub
mov
jle
xor
pop
inc
jecxz
or
push
cld
dec
xchg
push
or
cmp
sub
pop
cmp
shlb
inc
mov
sub
hlt
ret
adc
rcrb
lock
loop
out
pusha
mov
mov
ss
arpl
and
mov
fildll
rorb
cmpsl
jle
xor
xor
or
inc
pushf
js
pop
xchg
push
sub
ds
push
call
les
mov
pop
adc
loopne
xchg
adc
jno
pop
jmp
fisubl
out
or
or
cs
jle
or
pop
fbstp
sub
mov
cmc
in
mov
jl
push
jnp
pusha
test
cmpsl
or
fsubrp
pushf
je
mov
jno
call
xchg
dec
pop
lcall
adc
cmp
sub
push
fisubrs
dec
ret
inc
and
pop
mov
cs
insl
sbb
or
stos
lock
loop
cmp
dec
jno
enter
pop
cltd
fstpl
popf
jecxz
fwait
mov
sbb
mov
cs
dec
cmp
push
inc
inc
adc
test
fidivs
jl
negb
pusha
adc
adc
add
dec
ret
adc
cmp
call
in
insb
inc
lret
xchg
or
imul
nop
inc
fwait
cmp
test
jp
jmp
sar
mov
imul
push
rclb
insb
out
sub
subl
lret
insl
jecxz
inc
aaa
orl
sbb
sub
mov
and
push
loop
lcall
iret
jb
push
in
aad
das
xchg
clc
int3
dec
mov
push
inc
test
lmsw
in
insb
add
mov
daa
stc
dec
lret
int3
pop
or
lcall
icebp
pop
jge
lcall
dec
int3
inc
sahf
adc
iret
fwait
mov
icebp
jb
call
sub
test
sub
lock
lock
adc
or
push
pop
cmpsb
mov
fildll
lea
mov
adc
fdivrs
add
rclb
sbb
cmp
cmp
mov
clc
jbe
jnp
ljmp
subl
out
and
xor
aad
out
mov
in
sub
ja
in
sbb
mov
ret
stos
test
dec
xchg
adc
lock
icebp
and
jbe
in
fldt
daa
outsb
test
scas
xchg
sbb
mov
das
xchg
push
pop
hlt
cld
xor
cld
pop
cmp
xor
push
sbb
add
cmc
sub
push
xchg
push
push
lahf
and
push
pop
mov
xor
adc
pop
outsb
jp,pn
adcb
adc
pop
in
add
or
outsb
lds
xchg
popf
jns
fcompl
sub
mov
fsubrs
adc
jmp
inc
icebp
scas
add
mov
cmp
inc
inc
flds
cwtl
sub
in
rcll
pop
and
push
arpl
ret
movl
shl
sub
icebp
int
das
icebp
adc
je
cmp
and
push
ret
fisttpl
cmpl
cmp
pop
xchg
push
add
and
or
and
xchg
xchg
push
iret
cmp
test
insb
movsb
loopne
and
adc
mov
aaa
sbb
and
ss
pushf
and
dec
ss
lea
iret
sahf
mov
test
lret
jp
xchg
or
sub
jmp
mov
and
pop
in
and
mov
out
daa
push
repnz
adc
mov
or
xchg
cmp
push
dec
std
dec
sub
jnp
inc
test
pop
bound
fidivrl
cwtl
add
add
outsl
jge
adc
jmp
jb
and
adcl
mov
test
clc
mov
arpl
push
cld
xchg
inc
pop
out
mov
sbb
push
out
movsl
clc
das
xchg
pop
jno,pn
mov
dec
lds
inc
xor
or
xchg
inc
mov
fisubl
or
ficoms
push
aad
sarb
jle
or
mov
cmp
sub
xor
aas
pushl
cld
push
xor
mov
pop
xchg
fwait
int
fsubrl
pop
ds
push
pop
loopne
iret
jle
push
mov
jne
lock
push
cwtl
cld
cmp
fldl
mov
mov
clc
das
mov
cld
insb
xchg
xor
adc
enter
dec
add
mov
and
and
jge
inc
outsl
stos
test
clc
dec
into
ficomps
adc
jl
xor
movsb
xor
xor
inc
sub
xchg
das
mov
nop
sbb
lret
imul
lods
xor
mov
loope
dec
or
push
sbb
lock
fnsave
xchg
cs
or
enter
add
sub
sbb
or
arpl
mov
mov
push
jne
fldl
inc
xchg
cmp
sub
adc
dec
inc
fdivs
sub
mov
xor
ja
cmc
jns
daa
mov
push
lods
call
lahf
mov
cmpsb
cmp
pusha
cltd
sbb
cmp
push
push
xor
and
mov
fwait
adc
mov
sub
orb
ret
xchg
int
push
xor
cmp
pop
and
fucomip
pop
mov
fldenv
test
pop
lods
or
xor
jae
fcmovnu
mov
sbb
push
imul
dec
and
mov
sub
jo
neg
push
or
loop
in
xor
add
xlat
popf
xor
outsb
dec
add
xchg
xchg
fiaddl
mov
je
cmp
test
mov
inc
lahf
test
pop
inc
or
inc
jecxz
sbb
and
sbbb
jno
lds
aaa
aam
ss
cmp
and
xchg
xor
pop
mov
stc
pop
mov
inc
pop
fcmovnu
jmp
lret
dec
in
mov
mov
rcrb
out
shlb
pop
mov
inc
test
fisttpl
mov
xchg
push
or
and
push
leave
push
jne
loopne
mov
pop
pop
pop
pushf
icebp
jnp
test
adcl
xor
push
sub
testl
sub
std
xchg
nop
push
dec
sub
push
fsubs
scas
sub
and
xor
cmp
cmc
mov
jge
repz
mov
push
dec
enter
and
je
mov
jnp
jae
or
sbb
orl
add
enter
fnstenv
scas
repz
push
cli
jnp
mov
movsl
xchg
jge
fmull
ss
fstpl
mov
scas
jp
mov
mov
icebp
jp
movsl
sub
and
bound
adc
jo
out
push
lea
repz
push
inc
xchg
xor
or
leave
mov
and
lock
outsb
lret
xor
lods
mov
xchg
pop
adc
dec
mov
or
lds
or
push
shll
popa
pop
ja
sub
jecxz
xchg
in
pop
movsl
sbb
inc
adc
ficoms
pushf
je
andb
int
jge
test
adc
loopne
lds
in
mov
xchg
and
enter
sbb
pop
push
mov
dec
fbld
cmp
sub
jg
mov
sti
imul
sbb
inc
xchg
xor
std
rcl
sbbb
into
nop
rcr
xchg
add
push
cwtl
sahf
mov
lods
jp
call
xchg
mov
es
fs
leave
shlb
sbb
subb
dec
bound
mov
cmp
xchg
dec
xor
xchg
xor
xor
mov
sub
push
dec
add
add
imul
arpl
sarl
in
sub
dec
inc
lods
sub
mov
sbb
pop
rolb
xchg
adc
pop
rol
jns
in
stc
gs
jne
loopne
dec
imul
andb
fsubs
xor
aam
loop
push
outsb
cmp
lahf
call
ret
mov
mov
inc
mov
ljmp
out
pop
incb
dec
xchg
dec
insb
outsl
in
adc
and
xchg
out
fadds
arpl
pop
xchg
sub
movsb
cltd
mov
push
adc
dec
ret
xchg
cmp
nop
adc
sub
stos
imulb
popa
mov
aaa
mov
push
bound
xchg
test
jge
sub
mov
pushf
out
mov
mov
xchg
movsb
xchg
jb
pop
ret
mov
xor
jne
test
dec
cltd
ja
shlb
sbb
inc
xor
movsl
mov
mov
mov
push
in
fimuls
fdiv
mov
lret
pop
lds
orb
mov
js
add
mov
insb
mov
rcll
sub
in
adc
sbb
rcll
sub
push
mov
loop
enter
pop
push
push
aaa
xlat
pop
arpl
fwait
out
insb
pop
notl
push
xchg
jg
sub
xor
mov
int
mov
imul
ret
xchg
hlt
dec
jl
pop
roll
js
xchg
push
pop
xchg
lea
outsb
out
cmp
push
aad
cmp
mov
mov
push
outsl
sbb
lahf
out
xchg
enter
rcll
dec
adc
lcall
ret
cmc
iret
out
jge
mov
outsl
fists
push
mov
mov
jge
jmp
push
cmc
xchg
jae
and
push
or
repnz
repnz
mov
push
mov
xlat
cs
mov
xor
jo
sub
aas
adc
nop
jl
pop
adc
ficomps
add
mov
push
outsb
push
mov
add
cli
add
mov
xchg
inc
xlat
dec
sbb
sub
jl
push
jl
fcmovne
cmpsl
fiaddl
add
test
int3
pop
fcoml
jecxz
mov
scas
or
fwait
jns
jno
lret
inc
pop
mov
adc
dec
and
jbe
cmpsl
xchg
fwait
popf
sbbl
xchg
sti
scas
stos
or
mov
mull
jl
aas
jecxz
std
push
fwait
pop
sbb
adc
mov
jnp
icebp
dec
arpl
test
ret
es
mov
jae
xchg
mov
ss
roll
pop
pop
xchg
aas
mov
mov
push
fxch
xchg
mov
fimuls
ds
movsb
lds
js
xor
add
mov
adc
cmc
jecxz
inc
adc
jp,pn
out
jo
sbb
mov
hlt
rcrl
push
mov
repz
loop
hlt
pop
jne
pop
cmpsb
and
iret
in
xor
lcall
test
sbb
pop
ljmp
aaa
push
and
sbb
mov
push
and
mov
or
stc
or
mov
test
push
cmp
xchg
aas
data16
nop
push
adc
xchg
inc
jmp
test
int
std
xchg
mov
ja
add
inc
push
xchg
cmp
jbe
in
xchg
cmp
ret
aaa
pop
xchg
xlat
sbb
mov
cwtl
mov
ss
aaa
leave
test
pop
pop
sbb
jns,pn
dec
or
pop
push
rcll
push
lret
dec
dec
inc
adcb
inc
dec
fcomps
roll
inc
lret
mov
dec
ja
sub
orb
shrl
int3
aaa
bsr
cmpsl
jno
outsb
sbb
loopne
cmpsb
adc
aam
mov
test
lea
rcrb
inc
pop
sbb
and
push
negl
sub
out
mov
mov
add
mov
aam
fwait
les
cmp
sub
push
jae
sub
lahf
jo
mov
in
cmp
mov
adc
js
insl
add
popa
lcall
adc
and
ret
stos
or
fstpl
faddl
dec
out
sub
sbb
data16
outsl
xor
push
adc
xchg
lea
in
jl
jae
ret
ljmp
xchg
cld
icebp
inc
sub
mov
fsubs
jg
jp,pt
mov
loopne
sub
sub
scas
int
ret
mov
fsub
popa
inc
lea
es
pop
xor
add
mov
jae
dec
into
popa
push
xchg
pop
push
mov
xchg
sub
jmp
inc
pop
sub
xchg
and
jg
add
sbb
cmc
out
push
and
and
sbbb
add
mov
arpl
icebp
jg
arpl
scas
jg
pop
sti
xor
mul
mov
mov
or
cmp
adc
lahf
stos
shl
aas
sub
xor
dec
xor
sbbl
cltd
fiaddl
add
bts
push
sub
pop
dec
cmpsb
dec
sbb
inc
sub
cmc
insl
pop
imul
and
js
insl
push
push
std
pop
shrl
lcall
pusha
dec
and
idivb
adc
inc
cwtl
lods
cmp
xchg
ficomps
aaa
ss
out
mov
data16
xchg
icebp
not
in
mov
out
xchg
push
adc
cmp
mov
movsb
xor
mov
dec
mov
push
shl
dec
loope
sbb
push
push
mov
xor
decb
cmp
cmc
aam
jo
lret
and
movntq
cmp
shll
pop
sub
int
and
jbe
pop
mov
int
jb
pusha
aam
pop
jns
dec
enter
dec
lods
mov
sub
loope
jbe
jnp
pushf
fcmovne
xchg
call
iret
push
jnp
cmpsl
rorb
push
cwtl
xor
cmp
loope
sub
cmc
push
pop
cmp
sub
sahf
jge
add
and
jns
data16
jl
xchg
dec
and
fiadds
add
mov
leave
test
and
sub
or
hlt
nop
xlat
stos
outsl
scas
setp
test
xor
mov
xchg
outsl
outsb
mov
and
cmp
fdivl
iret
xor
and
loopne
cmp
push
lret
adc
out
push
xchg
aad
pop
dec
scas
push
push
mov
adc
adc
push
sub
cmp
scas
jnp
and
outsb
push
cld
adc
sbb
mov
cmpsb
pop
push
div
pop
ljmp
xchg
xor
inc
or
inc
mov
scas
fbstp
push
add
jae
cld
ds
and
fdivr
in
add
xor
dec
fisubl
sub
xchg
xchg
inc
jne
mov
mov
dec
sbb
xchg
andl
shll
addr16
lret
ror
or
sahf
cmpsb
scas
outsb
sbb
dec
je
push
or
cmc
pop
inc
xchg
popf
inc
pushf
test
push
lret
shl
mov
sub
pop
mov
sbb
addb
sbb
push
mov
mov
rcrb
dec
sbb
inc
dec
pop
in
cmp
movsb
movsl
mov
fcmovnb
cwtl
mov
ret
dec
lock
test
call
mov
hlt
fsts
mov
push
aam
mov
cmp
lret
add
xor
in
push
dec
aas
cmp
inc
lea
dec
sub
mov
pop
or
popa
fmul
xor
fistpl
iret
lods
or
mov
das
ja
int
sub
aas
mov
xchg
les
and
ljmp
mov
insb
sbb
push
and
mov
jecxz
icebp
shr
pop
pop
mov
push
lods
mov
call
inc
push
inc
dec
adc
xor
push
js
push
sbb
pop
jmpw
sub
xchg
shrb
dec
int3
xor
push
jno
js
cwtl
clc
movsb
xor
push
movsb
add
mov
dec
rol
stos
cmpsb
mov
sbb
int3
push
mov
mov
adc
es
mov
mov
loope
hlt
imulb
mov
pop
sbb
in
pusha
nop
cmp
inc
subb
mov
mov
andb
leave
mov
add
jne
jb
int
push
iret
mov
pop
jecxz
sbb
dec
mov
sahf
push
xchg
sub
testb
sub
mov
call
std
mov
xchg
not
repz
jno
pop
lret
add
leave
cmp
sahf
cmp
fcoms
mov
sbb
or
or
rcr
adc
push
xor
adc
movsb
push
rol
in
cwtl
repz
mov
sbb
xchg
push
lods
cmp
addr16
pop
negl
js
push
xchg
dec
and
cmp
scas
adc
imul
rorl
mov
insb
rcrl
sub
jo
lods
xor
int3
cltd
gs
ds
out
push
pop
movsb
xor
ds
inc
mov
leave
iret
sbb
cmp
ret
xchg
daa
es
ret
cmp
pop
call
adc
jbe
sbb
pop
add
push
imul
out
inc
xor
popa
mov
jle
arpl
ja
push
inc
sub
pop
scas
ss
xor
adc
es
leave
idiv
aas
cmp
clc
adc
aaa
inc
ret
jge
andl
jb
btc
test
lea
rol
js
std
mov
dec
jae
or
dec
test
repnz
and
adc
daa
sub
movsl
cwtl
std
jne
outsb
pop
mov
ljmp
pop
lock
dec
jno
ss
jne
movsb
jge
push
pop
pop
test
jae
jg
test
mov
jp
rclb
icebp
out
sub
int3
push
dec
fs
mov
xchg
sbb
push
popa
bound
outsb
xorl
push
push
mov
repz
pop
das
xor
and
mov
cmc
xchg
mov
push
cmp
out
imul
and
lret
pusha
pop
jl
cmp
xchg
fcmovnb
sub
fsubr
adc
leave
mov
cltd
cmc
dec
mov
or
addb
jmp
jge
hlt
pop
add
daa
daa
std
cli
imulb
sbb
popa
ss
dec
ljmp
mov
push
test
push
mov
movsb
sbb
mov
sbb
mov
sahf
ljmp
mov
and
xchg
fs
jns
mulb
ljmp
jne
dec
and
lods
fcmovu
fstpt
mov
int
mov
sbb
or
push
pushl
add
jle
cmp
dec
add
or
loop
add
pop
and
mov
push
xchg
test
dec
loope
shlb
sahf
push
inc
rol
movsl
jne
or
adc
ret
std
jl
jmp
imul
add
outsb
ret
imul
fwait
mov
fwait
lds
fldcw
insl
adc
pushf
sub
push
dec
adc
bound
jmp
mov
jle
push
jns
mov
lods
mov
mov
cmp
push
leave
imul
pop
push
pop
adc
test
add
push
xchg
push
subl
jo
idivb
and
cmp
icebp
ljmp
inc
shl
mov
ret
test
adc
dec
arpl
and
sbb
js
mov
mov
in
push
movsl
aaa
addr16
push
int
inc
add
aaa
shrb
fiaddl
je
pop
fsubs
dec
adc
inc
popf
out
mov
aam
aad
push
mov
les
and
inc
sbb
lods
xchg
pop
jns
cmc
leave
mov
mov
pop
cmp
mov
ret
or
pop
fidivl
leave
and
sub
pop
scas
js
xchg
fistl
adc
sub
sub
lock
xor
inc
push
jne
in
inc
xchg
inc
lret
fstpt
or
adc
rorb
fdivrl
xlat
cmp
jecxz
into
imul
imul
xchg
les
jp
add
add
mov
pop
lods
jo
jl
lea
jg
or
adc
mov
xor
mov
cmp
int
pop
int3
js
mov
lret
sub
ds
jmp
xchg
sbb
mov
xchg
insl
stc
xchg
jne
xchg
xchg
enter
dec
nop
adc
dec
dec
adc
pop
jb
pop
shrb
xor
push
adc
test
mov
xchg
push
dec
push
cmp
adcb
jmp
jmp
mov
in
sbb
ret
stc
inc
inc
lds
or
pop
jb
dec
mov
xchg
or
or
incl
mov
loopne
sub
lret
adc
popf
dec
mov
mov
xchg
imul
xor
xor
test
pop
aaa
pop
fcomi
cwtl
cli
aad
add
imul
or
dec
sahf
dec
enter
pop
mov
lods
test
lret
mov
pop
mov
dec
sub
cmp
xchg
xchg
sub
sub
lret
push
push
bound
jecxz
or
fcoms
mov
loopne
addr16
mov
cli
push
roll
and
adcb
test
repz
call
inc
xchg
dec
mov
push
arpl
sbb
lock
mov
cmp
stos
or
push
xchg
pop
jl
incb
xchg
or
sub
sbb
lahf
testl
out
mov
mov
out
loopne
movsb
test
jns
dec
pop
leave
in
inc
push
sbb
push
xlat
pop
sarl
or
stos
pop
inc
dec
fcomps
loopew
jbe
cmp
daa
test
push
xor
xor
pop
inc
stc
xchg
inc
sub
movsl
inc
mov
in
stc
clc
mov
sub
and
cmp
mov
cltd
sub
aas
push
mov
sbb
or
stos
es
incb
and
mov
fidivl
orb
mov
pop
leave
imulb
lret
xlat
stc
scas
mov
xor
xlat
scas
leave
pop
out
pop
mov
ficomps
xchg
cmpsl
add
mov
test
and
out
repz
shrl
lods
popa
sub
dec
xchg
push
xchg
inc
mov
xor
cwtl
xchg
adc
push
movsl
sbb
mov
ss
stc
dec
dec
jp
xchg
mov
pop
pop
popf
pop
adc
jne
pop
ret
aam
and
add
cwtl
fnsave
dec
mov
sbb
mov
mov
dec
adc
jmp
fimull
icebp
out
cmp
add
cld
subb
mov
mov
mov
sub
shr
pop
sbbl
pop
stos
fdivs
shlb
sub
jb
rorl
pop
sbb
cmpsb
lds
idivb
lods
fsqrt
repz
push
sar
mov
lods
xor
mov
xchg
push
mov
mov
cld
imul
imul
jl
cld
mov
xchg
and
iret
fadds
outsb
sbb
pushf
into
and
ret
lret
cmp
cmp
fmull
adc
ja
in
stos
pop
sub
cmp
sub
loop
lcall
loope
cs
mov
and
aaa
xor
inc
dec
arpl
jne
inc
pop
push
xchg
scas
nop
or
loope
mov
xchg
js
mov
test
mov
lods
and
stc
pop
test
shlb
or
jecxz
pop
adc
adc
in
jno
mov
lds
or
in
or
int3
pusha
cmpsl
dec
in
std
xor
jbe
cmpsb
outsl
push
pop
dec
inc
pushf
cmp
mov
loopne
in
popa
and
sbb
and
dec
mov
push
mov
adc
sbb
inc
push
xorb
mov
jae
mov
roll
jge
orl
pop
call
xchg
rcl
adc
push
adc
and
add
ret
xchg
add
sub
cmpsb
push
dec
dec
and
rclb
test
lahf
mov
insb
mov
notl
mov
xchg
dec
pop
xchg
xchg
mov
cmp
pop
mov
pusha
and
out
or
mov
rorl
cmp
dec
movsl
inc
sub
repz
mov
adc
sub
test
cld
cmp
cli
in
cmp
lods
adc
std
int
cmpsb
xor
lods
testb
mov
pop
daa
jbe
imul
and
jmp
daa
test
jo
xchg
gs
inc
and
popa
push
mov
xchg
dec
push
add
add
out
xchg
lret
push
pop
mov
jae
out
shrb
and
inc
cmpsb
xchg
xchg
sbb
xchg
xchg
or
inc
cwtl
jb
sti
xor
repz
cmpsl
psubusb
jp
and
jae
aas
test
test
mov
lds
jno
dec
adc
lods
pop
or
stos
and
add
xor
sub
dec
clc
dec
mov
ret
shl
cmpsb
hlt
cmp
aaa
xchg
mov
out
idivb
ds
dec
lret
ficompl
pop
add
call
notl
push
add
push
xchg
insb
sub
jnp
into
shlb
mov
and
iret
xchg
adc
xorl
sbb
add
ror
xchg
xchg
mov
addl
mov
mov
push
jns
nop
sbb
xchg
pop
pop
sbb
shl
xor
or
movsb
or
add
lret
je
dec
xchg
push
ret
enter
pop
fstps
lods
sbb
cld
aam
iret
pop
mov
push
sahf
push
pushf
jecxz
int
enter
cmp
repnz
jge
inc
pop
cmpsl
fsubrs
int
push
mov
divl
out
dec
in
cmp
std
test
adcb
inc
xchg
mov
add
addr16
push
dec
sbb
push
or
mov
jmp
sbb
mov
or
es
outsb
push
inc
pop
dec
jnp
fsubl
lahf
sub
pop
mov
in
cmc
mov
aas
into
leave
sub
push
mov
adc
pop
add
add
pop
mov
push
sarl
sub
testl
push
cwtl
ret
scas
jmp
cmp
stos
xchg
xchg
jno
les
and
xchg
cltd
gs
cwtl
xor
scas
adc
pushf
mov
cwtl
jns
ss
out
xor
add
or
mov
ljmp
fcomps
mov
pusha
push
mov
in
js
cli
shl
aas
xor
push
imul
sbb
mov
xchg
pop
in
iret
mov
cmovs
push
insb
mov
aad
xchg
lods
mov
jbe
cmpsb
inc
add
imul
hlt
clc
sbb
dec
hlt
pushf
mov
pusha
out
test
jbe
jbe
dec
subb
adc
bound
test
out
cmc
fiaddl
test
in
mov
rcrb
out
lret
adc
subb
out
push
daa
dec
cmp
imul
shrl
adc
pushf
pop
inc
cmp
mov
rcl
dec
dec
into
aam
cmc
scas
cmp
bound
add
cmp
jb
dec
call
movsb
je
add
push
mov
inc
shlb
push
inc
mov
cld
scas
push
cmp
aaa
pop
xchg
loop
cmpsl
fsubr
mov
dec
mov
stos
std
push
xor
jp
sub
adcb
mov
jp
lahf
mov
sub
leave
add
cmp
mov
inc
add
jp
fnsave
fisttps
xor
mov
xor
and
or
roll
mov
sahf
sbb
push
and
or
fidivl
jae
cmp
inc
mov
cmp
popa
jge
mov
inc
mov
or
inc
rcl
sbb
mov
push
cld
ljmp
jae
push
pushf
repnz
in
rorb
push
and
sti
mov
and
cmpsb
mov
jle
fidivrl
insl
sarb
ret
sbb
mov
into
sbb
add
push
jbe
jne
add
mov
or
addr16
cld
push
sahf
dec
stos
dec
leave
outsb
push
bnd
repz
pop
jmp
dec
js
shrl
adc
gs
repnz
or
inc
lea
mov
sub
push
mov
imul
lods
inc
mov
stc
sbb
push
sbb
movsl
roll
mov
js
inc
xor
fistpll
popf
pop
test
xchg
dec
pop
fisubl
adc
mov
pop
arpl
cmp
sub
mov
pop
lret
hlt
stos
fdivrs
shl
ja
les
clc
jno
mov
lock
mov
xchg
mov
ret
ficoms
lds
ret
xor
fdivrl
mov
jo
pop
lock
in
int
or
imul
pushf
clc
or
inc
xor
orl
push
test
cli
popa
loop
adc
lcall
cmc
mov
es
jmp
sub
loopne
push
cmpb
mov
or
test
and
nop
movsl
rcrb
or
pop
fimuls
in
push
inc
das
push
push
cmpsb
sbb
xor
and
jns
xchg
adc
scas
sub
jl
push
dec
jno
mov
leave
jns
adc
mov
lret
dec
sbb
mov
fstl
adcl
sbb
movsl
adc
mov
mov
les
push
sub
sbb
and
addr16
clc
adc
add
push
cwtl
mov
jns
sbb
and
xlat
stc
sahf
mov
xor
inc
loope
sbb
movsl
outsl
sub
testl
mov
in
cld
mov
dec
out
nop
cmp
imul
fwait
push
loope
mov
pop
dec
cmp
mov
sarb
push
test
xor
xlat
and
dec
stos
enter
inc
inc
es
jo
xchg
cli
ljmp
dec
iret
xor
clc
leave
movsl
mov
inc
add
and
sti
in
daa
scas
mov
in
mov
sub
je
push
sub
jl
cmp
mov
pop
dec
imul
xorb
lcall
addl
scas
inc
mov
mov
xchg
add
mov
pop
or
lahf
stos
xchg
pop
cmp
fwait
shl
icebp
iret
rcrb
push
xor
and
pop
cwtl
push
sbbl
mov
and
push
fimuls
jmp
insb
cmp
pusha
mov
and
fcoms
jg
push
mov
inc
arpl
je
ud2
push
xor
das
mov
cltd
sbb
pop
outsl
or
mov
popl
cmc
mov
and
dec
out
push
cmp
cmp
push
lea
xchg
jge
lods
and
cwtl
bound
fwait
inc
xchg
data16
mov
mov
jp
imul
or
mov
xchg
iret
into
mov
sbb
mov
lea
push
pop
lods
call
iret
push
adc
jp
clc
shll
mov
push
outsb
sub
out
cli
mov
call
and
stc
lcall
and
push
repz
add
xor
cmp
push
daa
jb
mov
adc
xor
rcr
cmp
sub
cmp
into
inc
ss
inc
push
add
sub
out
push
jo
dec
ret
jle
test
xor
faddp
xchg
mov
mov
insl
xor
js
loop
sbb
test
xchg
xchg
imul
addb
mov
jg
pop
cld
lahf
mov
cmpsl
push
mov
xchg
mov
add
aas
sub
dec
imulb
dec
sub
sbb
ja
mulps
sarl
mov
pop
sub
dec
loopne
xor
jne
fbld
lea
jle
lcall
rcrl
cwtl
jl
xor
sahf
rcl
lea
dec
fs
push
sub
xchg
jne
loopne
js
dec
push
cmp
insl
and
jne
outsb
mov
mov
jnp
test
fildll
sub
shrb
push
out
iret
movl
js
jbe
ret
lret
lock
nop
or
in
movsb
push
fdivp
imul
cmp
adc
shl
dec
notb
out
div
jae
inc
inc
mov
push
call
daa
ret
and
and
fidivl
rcll
out
push
adc
and
push
int3
cmp
stos
jmp
mov
mov
push
lods
out
mov
fiadds
cli
inc
jbe
or
push
pop
mov
es
push
sbb
pop
cmpsl
les
mov
lret
aas
jp
mov
sahf
xor
aad
jo
jle
sti
add
loopne
xchg
dec
pop
outsb
outsl
leave
ja
pushf
xchg
popa
sbb
sub
cwtl
xchg
test
push
insb
sub
push
mov
inc
and
imul
sub
imul
cmp
push
or
addb
or
outsb
mov
cld
repz
xor
push
fucom
jecxz
xchg
rcr
testl
sbb
sub
sbb
dec
xchg
aam
or
lock
cmp
shl
cwtl
fisubrl
mov
dec
jmp
add
ret
sbb
shll
dec
rcrb
jne
pop
sub
or
bswap
imul
int3
sub
jl
adc
adc
sbb
push
and
adc
xchg
jp
sub
les
dec
leave
enter
jns
pop
insb
scas
shlb
cmp
scas
mov
mov
stos
ja
jp
mov
icebp
xchg
adc
xchg
fbstp
std
lret
jbe
stc
and
push
fs
cld
sub
js
xor
mov
nop
cmp
xchg
ljmp
call
lds
xorl
cld
jge
sti
out
fstpl
jns
mov
push
xchg
lret
es
mov
cs
or
push
pop
push
bound
add
mov
inc
loop
sub
imul
push
pop
pop
icebp
dec
adcb
das
adc
or
sbb
insl
aas
aaa
imul
cmpsb
imul
inc
test
sbb
cmpsl
jge
lahf
mov
insb
mov
rcr
pushf
arpl
xor
jno
sub
jo
jecxz
mov
xchg
movsb
aaa
push
xchg
adc
xchg
lods
rolb
mov
push
adc
jmp
adc
jp
xor
addr16
int
xor
pop
inc
sbb
cmp
jmp
and
xchg
sar
and
dec
cld
mov
adc
fwait
inc
and
fdivrp
cmc
and
push
dec
bswap
sti
outsl
loope
push
movsl
out
sub
sbb
insl
xor
and
inc
push
mov
rcll
xlat
ds
push
outsl
pushf
pop
mov
sbb
loopne
leave
je
add
and
push
mov
hlt
jl
data16
fs
or
sub
fsubl
pop
pop
cld
pop
addr16
and
mov
sbb
loop
lock
push
pusha
cmp
cmpl
popf
inc
jmp
mov
lds
push
lds
repnz
push
ret
jns
cmc
sub
mov
sub
xchg
and
sbb
gs
lock
pusha
ds
xchg
pusha
in
nop
out
ja
xchg
add
cwtl
jbe
movsl
sub
andl
in
dec
out
in
xchg
xchg
push
adc
movsb
push
test
fs
sub
in
iret
enter
jno
push
inc
and
rcll
xchg
xor
repnz
mov
sbb
sahf
jle
mov
jmp
popf
and
imul
sbb
leave
adc
pop
jge
adc
ss
jl
mov
shrb
roll
cs
popa
mov
enter
mov
dec
jnp
cmpsb
push
aas
clc
pop
mov
cli
and
int
pop
outsb
jp
fs
xor
add
out
dec
xor
out
add
aas
insb
lds
data16
push
scas
xchg
sahf
xchg
shl
and
push
or
out
popa
push
inc
sarl
xor
cmp
in
jmp
jae
mov
xchg
pop
mov
aas
xor
xor
push
mov
sbb
push
jecxz
lods
jbe
loop
and
pop
jle
add
popf
xchg
sbb
dec
into
dec
in
stos
lods
loopne
fs
ret
adc
dec
fldcw
or
mov
lret
fadds
dec
ds
mov
and
ss
inc
push
cmpb
dec
bound
mov
loope
pop
cmc
push
ss
push
std
les
data16
call
mov
jmp
les
push
mov
jb
mov
add
xor
fiaddl
cmp
push
cmc
aad
xchg
ficoms
test
fldcw
outsl
mov
insb
fiaddl
ret
stos
mov
dec
push
testb
adcb
mov
in
push
mov
outsb
imul
sbb
je
jne
xchg
dec
fidivrs
stos
mov
jge
inc
xlat
add
mov
inc
shld
sbb
sub
pop
imul
xor
xchg
pushf
bound
xchg
xor
xlat
mov
mov
movsl
shlb
rclb
aas
daa
lret
pop
sub
loop
dec
imul
mov
dec
add
mov
add
sbb
dec
push
iret
insb
sarl
push
add
pop
or
lock
hlt
mov
cmc
add
dec
clc
push
std
shl
cmpsb
imul
aaa
push
xor
js
sbb
lahf
int
fbstp
inc
repnz
jl
xchg
adc
daa
jge
es
imul
mov
mov
cmp
mov
bound
aaa
and
stc
inc
or
lods
insb
push
test
push
test
mov
adc
sbb
mov
sarl
cwtl
lods
xor
adc
shll
int3
inc
sbb
test
fidivs
mov
fiaddl
lds
cmp
les
rorb
jno
bound
jmp
addw
mov
cmp
fnstsw
addr16
rorl
call
gs
ss
jg
cmc
sub
inc
loope
orl
fucom
dec
adc
outsb
stos
inc
jbe
lret
loop
mov
cli
fmuls
sbb
mov
aad
pop
or
mov
adc
xchg
fs
rclb
pop
dec
gs
xorb
mov
jno
add
test
pop
mov
sahf
aad
stc
adc
mov
xchg
leave
lea
inc
push
mov
in
jecxz
shll
pop
lea
sub
dec
sub
lret
jp
sbb
movsb
sub
xchg
mov
mov
divb
int3
lea
inc
jne
mov
hlt
mov
xchg
ja
cltd
stc
lock
cld
and
out
jno
pop
popa
cmpsb
mov
xor
scas
mov
out
sahf
scas
jns
xor
data16
jle
mov
rep
cld
push
fwait
iret
arpl
xchg
ficoml
pop
cli
outsl
push
xchg
lret
xlat
inc
pop
adc
sub
out
cmp
push
mov
mov
mov
xor
shrb
push
pop
sti
notb
lahf
and
xor
adc
fildll
cmc
das
loope
push
mov
je
shrl
mov
and
mov
stc
movsb
add
sub
rorb
adc
lods
imul
test
in
fisubrs
dec
dec
arpl
sub
idivl
xchg
int3
mov
cmp
sub
fnstsw
dec
mov
mov
loop
in
jge
leave
and
dec
push
fldcw
ss
out
arpl
cltd
sub
jge
pop
inc
cwtl
dec
cld
jmp
shrl
les
and
mov
mov
in
sbb
jp
dec
jbe
cs
sub
xchg
or
aaa
xlat
cmp
or
pop
pop
pop
mov
adc
dec
push
fidivs
xchg
jge
aad
lcall
jbe
out
aam
jae
pop
or
repnz
popa
sbb
xchg
xchg
push
sbb
enter
cmp
outsl
jp
add
js
mov
scas
insb
fbld
mov
mov
jne
imul
je
repz
or
cmp
xchg
insl
dec
mov
mov
leave
shl
mov
or
stos
dec
mov
xor
jmp
cmp
js
cmp
mov
add
pop
out
test
call
call
cmp
pop
adc
xchg
push
push
and
mov
repz
cmp
inc
repz
xchg
out
je
mov
inc
ljmp
loope
push
fsubrp
mov
or
xchg
sbb
shlb
add
jmp
fildll
lahf
stos
mov
dec
movsl
popa
loope
in
xchg
push
cmp
dec
xchg
push
cmpl
jmp
jne
in
rclb
jle
xor
dec
pop
or
roll
dec
pop
testb
mov
out
fsubl
mov
xchg
movsb
pop
es
and
aas
pop
mov
out
jg
enter
out
mov
scas
sub
sbb
imul
movsl
ret
push
pop
loop
sub
imul
pop
push
sub
or
dec
fidivrl
and
cmp
mov
test
lret
push
jb
addl
mov
imul
ret
out
inc
or
and
cmpsb
mov
dec
add
xor
xor
testb
pop
mov
push
sbb
loopne
sub
inc
es
cmpsl
inc
add
cmc
adc
test
arpl
xchg
sahf
jmp
xor
xchg
cltd
icebp
bound
sahf
out
adc
add
sarl
ret
adc
shr
sbbb
in
adc
push
mov
pop
inc
ljmp
test
and
in
inc
cmp
or
in
push
and
orl
mov
imul
aas
xchg
leave
mov
mov
pop
mov
in
andl
or
xor
sbb
cmp
lcall
mov
loope
mov
flds
sbb
pop
and
cmpsl
inc
xor
addr16
jmp
inc
and
cltd
subl
xchg
push
lahf
ljmp
jbe
enter
push
sbb
movsb
lods
mov
mov
mov
inc
ret
sbb
jge
imul
jnp
je
or
jl
xchg
in
sbb
and
inc
or
sbb
sbb
mov
test
sahf
movsb
sub
xchg
shrb
or
scas
popf
fisttpll
and
js
ja
mov
call
fsubp
xor
insb
test
mov
cltd
xor
sub
and
xchg
arpl
adc
outsb
pop
loop
push
test
call
test
sbb
fidivrs
jmp
push
fsts
or
leave
nop
adc
mov
cmp
mov
insb
dec
ret
mov
mov
push
push
push
sbb
into
lods
jmp
xchg
cli
mov
repnz
add
and
xlat
jl
jp
add
and
insl
test
int3
jecxz
ficoms
pop
das
mov
jnp
sub
pop
sti
fxch
xor
ficompl
mov
xor
loope
mov
mov
movsb
and
xchg
mov
mov
int3
shl
adc
mov
rorb
loope
movsl
scas
imul
adc
sub
stos
push
adc
jne
inc
push
sti
pop
out
out
push
outsl
sbb
jecxz
mov
sub
push
and
rcrl
int3
test
push
jbe
call
icebp
jl
scas
data16
repz
out
lds
lret
and
pop
and
jecxz
pop
mov
pop
adc
stc
xor
cmp
sub
mov
mov
stos
shlb
cmp
inc
outsl
in
int
mov
movsb
fistpl
imul
cmp
iret
mov
dec
push
sbb
push
lds
cmp
shl
in
lahf
div
pop
mov
add
imul
popf
daa
rclb
mov
dec
add
in
scas
fdivp
adc
jno
stc
mov
push
incb
mov
xor
lds
sbb
pop
xchg
popf
and
pushf
cmc
or
stos
mov
lahf
mov
pop
mov
and
xchg
xor
fs
push
out
cmpsb
cld
int3
roll
insb
stc
or
repz
popa
out
jge
xchg
dec
push
fildll
ficoml
jae
dec
loop
sbb
push
test
inc
adc
dec
and
loope
dec
lret
mov
pop
or
push
in
popf
dec
movsl
ret
ljmp
fldt
push
pop
outsb
pop
sub
je
adc
cmpsb
inc
shrl
or
mov
testb
movsl
push
ret
pop
xor
lods
jmp
outsb
pop
cs
jae
das
in
int
fisubs
shlb
adc
sub
push
scas
jo
xor
pop
push
sbb
push
scas
fisubrs
inc
lea
xlat
add
pop
push
test
movsb
icebp
push
lahf
loop
push
fs
inc
fildl
nop
push
cltd
push
xchg
movsl
cmp
insb
shlb
out
cmp
inc
mov
sbb
and
bound
mov
dec
in
and
ljmp
std
pop
sbb
test
add
sub
cmpsl
insb
out
adc
out
push
dec
imul
push
mov
dec
sbb
cmpsb
cmp
cmp
adc
lahf
and
push
mov
loope
enter
push
cmp
mov
inc
cmp
cmp
sti
mov
movsb
add
shl
inc
inc
push
mov
inc
roll
pop
pop
js
push
jp
jecxz
xor
pop
mov
fidivrs
push
xchg
and
inc
idivb
mov
mov
sbb
test
add
push
jo
in
dec
sahf
adc
or
inc
push
aaa
and
mov
mov
dec
push
cmpsl
lods
mov
xor
xchg
push
loopne
insb
push
inc
dec
test
adc
jge
fists
and
or
jecxz
push
cmpsb
sub
aad
jb
cmp
push
dec
xor
rcr
push
add
cmp
dec
jl
scas
clc
js
dec
push
or
cld
xchg
loopne
cld
xchg
cmpsl
ret
mov
jecxz
rcr
gs
mov
jno
lahf
xchg
lret
push
repnz
cmp
imul
int
push
jg
xor
pop
mov
aaa
inc
pop
mov
inc
xor
movb
in
sub
movsl
dec
js
inc
aaa
dec
mov
push
idivl
sbb
pop
adc
jmp
fwait
sub
push
cmp
push
cld
lret
pusha
mov
jle
idivl
ret
jnp
push
test
mov
sahf
out
fstps
fisubs
adc
lea
and
inc
xor
icebp
je
pop
pop
ficomps
scas
iret
mov
aad
pusha
outsl
out
pop
lds
jg
std
jo
push
shl
aas
mov
in
loop
adc
and
and
inc
mov
enter
sub
aam
dec
push
mov
xor
xor
mov
jnp
xchg
cmpsl
mov
and
outsb
ja
mov
sbbl
and
cwtl
adc
mov
mov
out
or
shlb
mov
movsb
subl
xor
xchg
adc
fwait
mov
dec
push
movsl
or
jp
leave
inc
out
xor
cli
cwtl
sub
jne
xchg
mov
out
xor
pushf
jmp
fsubs
sub
or
xchg
out
mov
add
adc
xchg
or
adc
mov
mov
adc
or
daa
out
test
mov
int3
add
fisubrl
fmul
mov
push
stc
cmpsl
repnz
pop
insb
xlat
das
out
test
sub
pop
jns
jge
dec
popf
enterw
sbb
mov
pusha
aas
adc
mov
repz
pushl
adc
fucomip
xchg
jecxz
stc
pop
rcrl
mov
dec
sbb
lret
mov
lahf
std
out
mov
popa
adc
jns
jmp
cltd
test
scas
push
mov
pusha
out
ljmp
fs
arpl
hlt
dec
pop
mov
xchg
mov
sub
sarb
mulb
adc
mov
or
push
adc
jo
pop
loope
in
mov
add
repz
jae
sub
push
mov
pop
mov
inc
fwait
cmpsb
negl
loop
lea
jnp
mov
negb
cmp
test
roll
cmpsl
push
jg
xor
mov
mov
aas
pop
sub
ja
repz
mov
cmp
jbe
shr
xchg
subb
sti
mov
jne
mov
adc
add
push
fistps
insl
dec
adc
and
push
push
adc
out
sahf
les
inc
xchg
les
out
rolb
cwtl
stos
dec
jge
std
lret
pop
mov
popa
jno
enter
loop
fwait
pop
jno
iret
aaa
add
xor
out
outsb
add
xchg
mov
cwtl
cltd
push
cmp
movsl
inc
insl
fs
mov
scas
shrl
dec
out
push
mov
test
test
sbb
aam
sbb
mov
rorl
pop
or
pop
cmc
in
cmp
loopne
lods
pop
mov
loop
xor
and
mov
adc
jo
mov
mov
fiaddl
sub
jle
movsb
pusha
outsl
jmp
or
sub
fwait
jge
xchg
sbb
mov
and
and
mov
nop
or
sub
repnz
xchg
xor
sub
mov
fistps
pop
hlt
daa
jmp
cwtl
in
adc
outsb
pop
ret
addb
stos
jp
jle
fsubl
loope
call
cmp
leave
and
pop
aad
lock
and
mov
sbb
cmp
lret
mov
xor
mov
arpl
sub
push
xor
stos
cmc
lcall
pop
sbb
cmp
movsb
add
ljmp
jb
mov
dec
jmp
xchg
jle
xlat
leave
loop
inc
js
push
sub
pop
rcll
jle
in
mov
loope
jns
aam
push
push
das
adc
xor
push
sti
aad
mov
jmp
xor
jg
xchg
sbb
ret
jb
xor
ret
cli
pop
dec
sarb
xor
ja
xor
add
add
dec
fistpll
dec
sub
mov
pmuludq
xor
shrl
in
xchg
dec
xchg
loopne
imul
xchg
inc
push
lret
xchg
mov
loope
cmp
rclb
in
in
mov
lods
mov
fcoms
ficoms
jecxz
cmc
add
lds
js
rorb
hlt
cmp
cmp
inc
sub
xor
imul
push
adc
cmp
jne
shll
push
cmp
xchg
mov
mov
rcrb
or
clc
xchg
sbb
sub
and
out
dec
decb
or
push
repnz
adc
fisubrs
shr
icebp
fcoml
push
pop
adc
xor
jno
sahf
ds
jmp
adc
pop
jb
ret
icebp
sarl
cmpsl
shrl
mov
sahf
int
fwait
push
sbb
cld
mov
test
arpl
int
cltd
les
cmpl
push
adc
aaa
mov
in
add
jns
and
jae
push
mov
stc
ljmp
dec
sub
inc
xor
adc
xor
divl
sbb
and
shlb
lret
ljmp
add
push
mov
jecxz
jns
loope
test
xchg
or
aaa
mov
inc
cmpsb
scas
insl
ret
popl
pop
into
sahf
or
push
sbb
push
in
out
fs
lahf
stc
cmc
push
jmp
and
ss
cmp
dec
push
jecxz
les
rcrl
mov
movsb
repz
sub
jnp
das
popa
mov
adc
ljmp
push
je
sbb
xor
jne
add
xchg
andl
inc
ror
mov
adc
sbb
xchg
adc
addr16
add
mov
popf
mov
fimuls
repz
adc
mov
fsubr
sbb
adc
stos
mov
or
cwtl
cmp
jl
xchg
scas
adc
arpl
int
cmp
clc
fs
les
add
jg
adc
inc
loop
out
push
loope
in
test
adc
and
mov
mov
add
imul
add
adc
xchg
xor
sar
mov
dec
and
lods
dec
das
popf
in
and
add
movsl
push
xchg
stos
jl
adc
scas
and
inc
rorl
pop
adc
jb
or
adc
ds
push
cmp
call
or
pop
pop
jg
cld
jle
call
sbb
iret
push
and
mov
mov
add
lcall
ljmp
mov
movb
jns
pop
out
leave
mov
inc
jge
and
fstpt
push
mov
pop
pop
jae
sub
add
imul
ret
adc
outsb
mull
mov
js
mov
rcr
jmp
pop
pop
inc
pusha
mov
dec
sub
sub
neg
scas
pushf
mov
ss
insb
loop
sub
insb
push
out
jno
iret
xor
xorb
bound
adc
xor
adc
mov
movsl
xchg
add
imul
or
or
sbb
pop
jmp
adc
repnz
adc
add
pushl
int
sub
mov
mov
lods
and
je
and
das
mov
jp
lods
cmp
jo
lret
xchg
popf
mov
xchg
in
addr16
cmp
sbb
bnd
dec
addl
pop
mov
fwait
mov
inc
add
pop
jne
cld
push
mov
lods
flds
data16
xchg
pushf
sbb
in
jge
hlt
lods
xor
sbb
push
fsubl
push
push
and
out
pop
xchg
aad
mov
movsb
pop
fiaddl
cmp
call
add
lahf
cld
xchg
movsb
adc
or
mov
dec
push
into
loop
nop
inc
cmc
int3
outsl
lcall
inc
js
cmp
dec
scas
lods
mov
adc
push
mov
mov
lret
xor
jae
mov
dec
and
push
jno
add
ret
inc
inc
add
dec
lock
out
jmp
inc
rorb
filds
sbb
cld
mov
xor
lock
pop
inc
popf
addb
and
lods
or
fdivl
push
gs
daa
addr16
adcb
pop
xor
adc
enter
cli
xchg
jmp
jle
adc
cwtl
sti
cmp
sbb
test
sahf
xor
sahf
sbb
stos
and
inc
testl
mov
jl
popf
xchg
xchg
js
cmp
dec
jecxz
mov
popf
or
shll
in
ja
mov
jle
ja
cmp
test
lds
lds
stos
loope
bound
fdivrl
sbb
int3
shll
aam
mov
divl
push
call
cwtl
test
jmp
rcll
xor
sub
fs
ljmp
lods
mov
push
loop
sbb
or
addr16
mov
pop
xchg
jnp
sbbl
cmp
sub
jmp
into
jbe
in
lahf
add
xchg
mov
pop
sub
data16
push
and
rorb
andl
stos
sbb
shlb
ret
pop
fidivl
mov
jae
add
sbb
adc
add
dec
dec
mov
push
insb
mov
and
arpl
xlat
sbb
lods
lods
hlt
inc
pop
adc
jnp
mov
test
fst
stc
fdivl
adc
sbb
cmc
xchg
int3
pushf
es
iret
sub
jo
popf
lods
push
inc
add
outsb
nop
imul
out
or
pop
fdivs
mov
sahf
outsl
mov
xchg
aas
push
xchg
jno
jo
xchg
std
lret
mov
jl
add
dec
cmp
icebp
and
dec
push
jle
clc
dec
fbstp
lds
rorl
vpsadbw
jecxz
rcrb
push
lods
mov
cmpsl
dec
insb
addr16
js
mov
es
in
jb
enter
push
push
cld
ljmp
jnp
mov
ja
in
dec
xchg
dec
arpl
mov
aad
sub
fsts
xor
pop
xchg
dec
xchg
and
adc
inc
jne
subb
js
inc
ret
pop
dec
test
sbb
adc
mov
and
mov
in
lcall
into
stos
fwait
pop
sti
fucomi
aas
cmc
out
pop
movsl
cmp
adc
xchg
fdivrs
sbb
mov
lcall
andb
cmp
cmp
lahf
mov
inc
test
cmp
xor
push
notb
je
pop
jb
jle,pt
push
jecxz
rcll
add
jne
cli
insb
cmp
cld
and
lods
imul
mov
fimuls
and
push
subl
shll
xor
or
xor
sahf
mov
inc
aam
jmp
or
insb
cmpsl
pop
sbb
std
fsubs
pop
mov
in
rcrb
incl
leave
mov
data16
test
mov
adc
les
xchg
fsubp
and
loope
mov
add
inc
sbbl
or
movsb
mov
push
lock
stos
push
pop
push
aam
mov
mov
popf
jp
gs
sbb
xor
pop
cmp
aas
or
cmp
nop
jp
jle
push
mov
mov
mov
push
es
mov
and
cmp
xchg
and
sub
mov
cli
adc
aad
insb
and
shrb
in
cmpsb
insb
insl
test
push
xchg
clc
scas
popa
sbb
push
or
sbb
in
push
call
and
mov
pop
mov
sub
bound
les
lret
or
xor
mov
sbb
sub
lock
scas
dec
pop
cmp
insl
popl
push
ja
icebp
cli
mov
or
mov
ljmp
mov
rolb
es
xchg
daa
jmp
outsb
mov
pop
dec
addr16
pop
sbb
movsb
rcrb
fsubs
push
dec
data16
in
das
mov
jnp
scas
out
lret
cmc
dec
ja
pop
cld
in
pop
fadds
mov
test
inc
pop
xchg
pop
cld
pop
add
lods
inc
mov
push
rorl
sbb
nop
out
insl
arpl
pusha
jns
pop
push
dec
xchg
inc
in
mov
jb
jo
imul
leave
loop
xchg
aad
loopne
push
cmp
call
xchg
jns
push
scas
push
lods
js
hlt
adc
sub
push
xchg
clc
dec
cmp
out
movsb
stc
adc
popa
ror
mov
nop
sub
mov
ljmp
lret
mov
fwait
mov
sub
jl
xlat
jbe
and
jl
stos
mov
mov
imul
lods
xchg
shll
in
and
and
push
rorl
add
add
push
lret
or
inc
and
sbb
int3
pop
outsb
int
inc
pushf
xor
pop
push
push
cli
insb
sub
inc
sbb
sub
xchg
outsl
lds
repz
mov
insl
sub
jl
mov
xor
cmc
add
xchg
push
outsl
popa
movl
lds
hlt
add
test
add
sub
lahf
je
inc
test
aam
fildll
imul
push
outsb
sbb
rclb
cli
xor
jle
bound
adc
insb
outsl
loop
int
out
xor
jo
inc
add
pusha
mov
vpsubd
mov
jl
cs
fdivl
push
adc
fwait
es
sbb
inc
and
jb
stos
in
inc
mov
stos
das
cmpsl
xchg
jg
adc
inc
clc
and
xlat
inc
push
add
aas
xchg
test
push
lret
daa
pop
in
data16
sbb
pushf
insl
jge
movsl
dec
cltd
xor
push
ss
pop
fsubrs
aad
jo
sarl
idiv
adc
mov
push
inc
xchg
mov
js
pusha
dec
mov
adc
jl
cltd
lds
rcll
xchg
xchg
nop
fldenv
filds
and
lahf
decb
push
icebp
int
dec
push
xchg
push
popl
cld
loope
ret
or
imul
shll
add
mov
aam
fcompl
pushf
xor
push
gs
sbb
sub
push
cmove
data16
fistpll
jo
outsl
out
lods
pop
push
pusha
aam
push
ret
or
cmp
adc
ror
arpl
int3
or
push
push
add
inc
movsl
mov
fstpl
mov
cmp
dec
sbb
repnz
lcall
ret
pop
push
mov
stc
enter
mov
xchg
adc
das
dec
pop
push
das
sub
jle
pushf
fwait
shrl
and
or
mov
adc
nop
cmp
scas
lods
inc
ficoml
fimuls
and
iret
xor
jl
movsb
rol
mov
dec
xor
ljmp
sbb
xchg
fisttpll
dec
out
rcll
ret
enter
and
es
jp
imul
xchg
dec
fldenv
mov
mov
mov
add
or
dec
adc
cmp
inc
or
shl
enter
pop
mov
test
insl
pop
add
sub
movsl
and
inc
pop
xchg
push
pop
les
adcl
fsubl
push
loop
pusha
xor
orl
push
add
ret
cmp
loope
sti
jecxz
mov
xor
xchg
adc
jno
aam
or
sbb
dec
ficomps
outsb
mov
je
mov
mov
xchg
mov
fsts
gs
push
cmp
or
std
cmp
jg
jmp
pop
or
push
xchg
fstpl
stos
inc
pusha
out
pop
sarb
scas
repnz
and
dec
jl
loop
test
insl
sarl
dec
ss
test
cs
imul
xor
or
pop
sbb
push
sub
inc
cmp
loop
aam
mov
pushf
cmp
test
hlt
and
push
ss
int3
lock
inc
sbb
sbb
pop
cld
xor
negl
adc
xchg
shll
shlb
push
sarb
lods
outsb
dec
mov
sti
adc
lret
or
adc
arpl
clc
xchg
fistl
loope
lcall
test
dec
cmp
cs
clc
in
add
sub
nop
sbb
lret
mov
rorl
jp
inc
jae
movsl
fisubrl
cmp
xchg
adc
push
insb
dec
inc
out
jge
xchg
xor
shrb
ret
ja
adc
xchg
adc
and
mov
rcll
sub
jno
popa
inc
add
sbb
push
mov
sbb
sub
arpl
lret
pop
test
cli
fsubr
mov
cmp
insl
enter
data16
insl
icebp
lret
cmp
push
and
nop
andl
mov
lods
cltd
xor
add
rolb
stc
pop
mov
jb
jbe
jecxz
arpl
fistl
clc
int
xchg
jl
shll
or
fwait
and
fxch
mov
push
add
pop
push
sub
sbb
fucomip
sbb
jo
pushf
int
jmp
outsb
popl
scas
in
outsb
inc
mov
stos
pop
mov
popf
sub
adc
pop
push
mov
jl
jge
les
mov
stc
icebp
cmc
outsb
in
xorl
dec
shr
ja
das
push
or
out
pop
mov
jbe
bound
leave
ds
xchg
sub
out
xor
sub
in
rorl
loop
adc
add
gs
mov
loope
pop
mov
sub
xor
and
fs
and
mov
icebp
jb
pop
cmp
lret
mov
xlat
push
es
cwtl
lods
xacquire
and
lret
fists
mov
fs
push
xor
inc
mov
fdivr
dec
in
jl
sub
add
pop
xor
dec
in
imul
xor
in
push
outsb
dec
jge
scas
push
pop
inc
les
ret
sub
mov
fcompl
mov
jb
pop
lahf
shll
inc
cmp
movsl
jns
push
cmp
add
adc
lahf
mov
in
ss
mov
rcll
lret
adcl
notl
adc
test
fldt
dec
fsubrs
bound
push
push
ret
mov
fwait
mov
sub
xor
in
nop
repnz
jne
cltd
mov
repz
mov
mov
cmp
jo
jecxz
pop
les
mov
js
idivl
inc
clc
mov
xor
jno
out
sbb
std
adc
cmp
jo
xor
sarb
jecxz,pt
cli
pop
stos
mov
les
test
add
jae
push
xor
sub
mov
into
in
psubw
scas
js
aam
sub
pushf
movb
scas
xchg
push
sbb
cwtl
or
movsl
ret
xor
aam
or
fsubs
mov
aam
cmp
loopne
xchg
mull
mov
mov
fsts
mov
lea
xor
pop
outsb
cmp
jecxz
inc
and
sahf
mov
xchg
aad
aas
jb
das
push
or
xor
cmpsb
adc
or
adc
push
shl
outsl
jmp
or
pop
push
and
push
lock
fistpl
enter
fsubl
inc
shlb
divl
mov
pop
movsb
adc
push
and
ret
subl
ljmp
nop
loope
jge
pop
out
mov
mov
jmp
call
adc
imul
jecxz
inc
loop
lret
push
mov
mov
dec
outsl
xchg
push
dec
jmp
push
jl
daa
push
push
arpl
cltd
xchg
out
scas
into
fs
cmpsl
icebp
inc
shll
push
das
sbb
fldt
cmp
jmp
and
loopne
leave
xchg
insl
push
push
mov
fildl
and
push
jmp
push
fnsave
and
inc
push
divb
mov
jl
je
lods
in
mov
pop
cmp
repz
in
jbe
sti
jl
xchg
xchg
in
das
pop
in
sub
adc
mov
inc
pop
xchg
adc
leave
filds
adc
cmp
movsb
sbb
add
adc
cmp
daa
xchg
out
inc
test
enter
imul
inc
push
inc
jmp
mov
mov
pop
call
je
cmp
mov
and
cld
mov
sub
popa
jle
clc
imul
clc
fldenv
fsubrs
or
js
imulb
pop
sub
dec
cli
jne
cli
jnp
ds
dec
add
adc
fstp
cmp
xchg
cs
adc
push
aaa
out
dec
cld
adcb
xchg
push
in
cmp
enter
jecxz
xor
fdiv
into
test
test
pop
pop
int3
jmp
loopne
fmull
cmp
and
hlt
or
dec
mov
xor
in
add
adc
dec
mov
js
mov
pusha
pop
mov
jmp
jle
std
mov
jbe
mov
scas
cli
cwtl
int3
adc
rorl
lcall
push
xchg
push
leave
adc
jne
imulb
cld
push
inc
imul
mov
test
push
in
xor
in
jno
cmc
test
fistpll
jl
jecxz
sahf
mov
mov
jno
and
addr16
stc
stos
les
loope
int3
fsub
mov
cs
cmp
and
add
pop
rcr
sahf
int
shlb
jg
shl
dec
loop
daa
out
xor
xor
jp
dec
aad
negb
insl
xchg
jbe
jne
push
sbb
test
sbb
lock
mov
mov
fists
jnp
sub
xor
movb
clc
dec
mov
push
dec
xchg
or
les
jecxz
mov
mov
jmp
push
mov
or
aam
inc
loop
xchg
pop
scas
and
cmc
add
dec
nop
xor
pop
add
push
shrb
mov
mov
mov
mov
push
stc
pop
inc
aas
out
test
sub
out
outsl
or
test
pop
jne
cmpl
add
outsl
dec
and
cmp
rcll
enter
xchg
dec
mov
mov
fdivs
popa
mov
mov
stos
into
js
push
incb
fildl
insb
push
ss
mov
and
fst
loope
push
imul
jnp
imul
inc
test
mov
sbb
mov
outsb
push
imul
test
xchg
xchg
or
adc
test
aam
mov
shlb
mov
les
dec
add
pop
jne
push
xor
clc
mov
iret
and
push
xchg
lds
pop
lods
or
dec
and
dec
clc
imul
sub
stos
scas
cwtl
imul
and
leave
inc
aam
es
cld
aaa
jle
or
ds
and
xchg
adc
mov
inc
cltd
loope
bound
aam
xor
popa
pop
icebp
jle
mov
sbb
and
xor
mov
adc
jbe
add
scas
cmpsb
inc
dec
movsb
stc
xlat
xor
xlat
hlt
movsl
test
fstpl
test
mov
add
movsl
cs
movsl
mov
xchg
pop
fidivl
lcall
mov
stc
xor
pusha
jo
ret
lods
shrb
idivb
es
mov
and
dec
aaa
jo
pop
pop
push
jb
mov
cltd
cltd
jb
stos
sahf
lods
xor
test
xor
sub
mov
lods
out
insb
sahf
fucomi
pop
xchg
cmp
idivb
mov
inc
adc
sbb
fdiv
xor
imul
mov
mov
fidivrl
clc
add
pop
test
mov
mov
rcr
push
add
iret
push
push
xor
mov
dec
xor
cmpb
dec
mov
pop
add
hlt
scas
mov
adc
repz
fcmovnu
and
shrb
aam
xor
sbb
mov
xorl
sub
jbe
jl
fstpl
cmp
adc
aaa
push
adcl
shlb
stc
xchg
ljmp
cli
insb
notl
mov
insb
fstpt
icebp
rol
cli
sub
xchg
cmc
or
dec
in
imull
xchg
sbbl
jge
ss
clc
loopne
pop
cmp
test
and
test
and
mov
hlt
jp
adcb
mov
je
jae
aam
sbb
and
mov
push
fs
pop
jne
les
ljmp
cmp
ss
loopne
iret
js
mov
ss
sbb
dec
push
insb
scas
xlat
ja
xor
push
sub
and
or
in
fwait
dec
aad
lods
xchg
mov
pop
and
insl
hlt
rorb
xchg
inc
dec
ss
mov
push
mov
cwtl
inc
out
or
mov
sub
and
aas
xor
adc
push
loopne
xchg
lods
and
push
lahf
icebp
in
lods
jns
outsl
sub
lock
sbb
sub
xchg
mov
shrb
or
popf
pop
jge
daa
gs
in
out
gs
ljmp
shr
jp
pusha
ss
jae
ds
loope
pop
sahf
cmp
pop
pop
jecxz
jae
sbb
hlt
push
lods
scas
ss
and
std
or
dec
hlt
repz
xchg
js
lret
pop
jo
push
in
xorl
or
push
imul
adc
decb
dec
icebp
mov
mov
add
dec
xchg
mov
and
push
hlt
mov
mov
sahf
xchg
addb
divb
mov
xorl
mov
stos
mov
xchg
ja
sbb
cmp
rorl
and
jbe
mov
jo
xor
fwait
arpl
xchg
dec
jecxz
adc
push
push
cmp
daa
mov
repnz
add
imul
cmp
mov
push
jmp
dec
or
mov
add
dec
imul
fs
push
insb
xchg
ja
push
js
aas
and
xchg
shrb
dec
dec
and
movsl
push
lods
or
cld
xor
lret
int
sub
push
popf
push
mov
pop
lock
in
aam
jl
xchg
mov
pop
xchg
stos
dec
push
cwtl
sahf
push
cs
mov
popa
cmp
test
cmc
sub
xchg
sahf
pop
pop
test
cs
mov
xchg
push
pop
pop
cli
insl
xchg
stc
sbbb
fisttps
jle
sub
pop
jae
fcmove
daa
ljmp
outsb
xchg
orl
add
inc
xor
insl
pop
mov
push
jle
add
pop
cmp
cmp
mov
cmpl
adc
movb
repz
sub
mov
or
cmp
sub
rclb
fsub
ljmp
push
ds
pop
data16
fwait
pop
cmp
jae
push
jmp
hlt
push
mov
push
sub
xor
add
jl
ret
inc
repz
sub
sbb
inc
jle
xor
add
push
in
sub
mov
sub
dec
pop
sbb
inc
adc
mov
out
and
out
mov
in
test
cmpsb
xlat
fisubrl
das
adc
in
and
sbb
or
or
repnz
mov
pop
scas
cmp
ret
push
dec
push
mov
lahf
aaa
push
int3
jge
add
jle
imul
addr16
inc
ret
mov
mov
dec
aaa
and
out
push
xor
jecxz
pop
out
mov
dec
cltd
push
cmp
mov
push
inc
repz
out
test
rcr
lcall
prefetch
push
jecxz
pop
xor
jmp
cmp
rorl
out
cmp
es
and
jb
loopne
adc
repz
and
dec
adc
pop
sub
js
test
jns
pop
sbb
loope
into
and
pop
cmp
stos
xor
cmpsb
push
mov
xchg
sub
jle
push
push
fistpl
sahf
mov
cmp
cmp
pop
xchg
mov
outsb
fistps
xor
in
xchg
enter
sub
add
ret
das
jo
pop
adc
not
add
jae
mov
add
inc
pop
mov
mov
out
into
test
lret
rep
push
loopne
stos
fstl
push
sahf
cmp
lods
lds
je
inc
sub
jge
imul
test
repz
mov
ss
add
adcl
aam
daa
loopne
mov
and
xchg
add
rcll
mov
xchg
jmp
clc
mov
xor
jge
out
mov
jnp
adc
cmpsb
mov
leave
fsubr
pusha
in
cltd
jns
pop
pop
push
fistl
insl
jbe
stos
pop
negb
push
std
arpl
cwtl
mov
mov
push
mov
mov
push
mov
sub
ret
mov
or
rep
xor
xchg
xor
mov
mov
mov
shr
in
xchg
fmulp
push
xlat
adc
out
sub
fnstcw
adc
and
int
and
push
add
pop
xlat
xchg
xchg
test
rcll
lcall
cmpsb
jmp
movsb
dec
rclb
lea
push
dec
jae
sub
jg
mov
mov
push
pop
push
mov
adc
pop
pop
ret
int3
xor
xchg
inc
out
mov
xor
dec
xor
and
popa
mov
testb
pop
out
add
inc
and
fists
or
mov
insb
outsl
imul
mov
test
aad
cmpsb
mov
aas
jge
frstor
test
xor
add
xchg
jne
sbb
call
pop
cs
and
fwait
add
pop
dec
stos
pop
sbb
mov
dec
dec
movsl
ss
ja
mov
mov
inc
dec
lock
cmp
sti
int
clc
xor
das
dec
add
push
xchg
in
popf
fcoms
call
or
push
or
xlat
movsl
in
mov
mov
dec
push
jl
cmpsb
fistl
jo
pop
cmc
mov
imul
js
fidivrl
adcb
add
test
stc
cmp
ret
out
stc
xor
add
xor
mov
ljmp
sub
cwtl
lret
inc
sub
add
je
push
sub
mov
popa
mov
je
mov
cmpsl
mov
mov
dec
movsl
or
lret
scas
xchg
push
jge
jle
mov
sub
test
add
dec
jge
inc
cmp
imul
inc
jno
stos
jno
cmpsl
je
lret
sub
out
jnp
scas
jo
lcall
xor
xor
xchg
cmp
sub
dec
sbb
mov
sbb
mov
pop
cltd
inc
pusha
out
and
frstor
sbb
inc
adc
dec
cmp
pop
and
out
xchg
test
xchg
stc
push
xchg
not
adc
ret
pop
push
push
lret
xlat
lcall
icebp
jns
adc
mov
loopne
inc
es
ficomps
pop
pop
sbb
push
pop
push
sbb
iret
dec
mov
add
test
ja
or
dec
mov
pop
cld
js
fs
cli
cwtl
in
jnp
outsb
insb
inc
lcall
mov
inc
pop
jl
int
xchg
cmpsl
fadd
xor
out
scas
mov
sub
sbb
loope
cmp
call
imul
dec
enter
xor
or
xor
and
imul
aas
dec
arpl
push
loop
cwtl
jg
push
lods
jnp
dec
inc
mov
stc
jb
int
jo
jo
mov
lods
out
mov
sarb
sub
cmp
xor
fwait
inc
imul
push
jp
adc
mov
mov
add
dec
mov
mov
cmp
xor
cmp
mov
and
test
xlat
fdiv
and
insb
pop
push
cltd
imulb
imul
dec
sti
inc
aad
fisubrl
push
shll
pop
rcrl
jae
in
test
test
lahf
cli
les
xchg
add
inc
out
inc
sub
ror
arpl
inc
push
int
xchg
mov
pop
pop
or
sbb
mov
xor
adc
jns
leave
add
faddl
scas
fisttps
push
and
outsl
stos
stos
call
lea
out
adc
pop
pop
jns
shlb
or
push
mov
pop
inc
test
dec
imul
stc
xchg
pop
nop
mov
or
inc
push
dec
mov
repz
push
idivl
icebp
and
cmp
sbb
fnstcw
cmp
xchg
xchg
mov
hlt
jmp
adc
xor
cli
test
sub
sbb
call
cltd
xor
cltd
lea
jl
comiss
fmulp
or
out
mov
dec
int
xchg
mov
lock
mov
js
fcomi
clc
push
neg
fcmovb
mov
fcomip
shrb
cmp
push
push
or
orb
pop
jno
push
scas
push
dec
push
jbe
push
shlb
sbb
sbbl
pusha
cld
lahf
push
hlt
ret
xchg
xchg
lock
push
jp
insl
int
mov
insb
mov
cmp
xlat
adc
pusha
shl
add
adc
popa
pushf
fwait
in
jo
mov
insl
je
mov
scas
and
mov
shrb
and
push
leave
decb
sti
mov
cmp
hlt
add
shrb
aas
jb
mov
mov
cmpsl
dec
sub
pop
xchg
je
stos
out
inc
imul
lcall
or
fldl
je
idivl
gs
scas
fadds
jo
mov
out
jb
dec
sub
loop
ret
sub
and
cmp
mov
sbb
into
push
sub
push
add
dec
add
lods
add
jae
sahf
or
adc
mov
and
cld
xchg
test
int
sbb
std
pop
ret
push
dec
xchg
shl
pop
sbb
stos
push
sbb
into
and
mov
sub
pop
stos
leave
mov
outsl
pusha
jecxz
inc
addr16
push
faddl
xchg
cltd
dec
push
sahf
xchg
stos
mov
xlat
mov
loope
lret
fs
xlat
into
insb
sub
jle
pop
out
iret
stc
outsb
jbe
or
out
rclb
ja
lcall
jecxz
int3
hlt
jbe
lret
and
cs
dec
cmp
xchg
mov
or
mov
jbe
xor
sub
es
adc
add
negl
fnstsw
fisttpll
lahf
sbb
aaa
lret
dec
test
movsl
fisttpl
fwait
sbb
push
leave
cmp
int
mov
adc
cli
sbb
outsl
loop
repnz
xor
xchg
loopne
mov
and
push
lds
loopne
push
stos
shll
add
sbb
jp
or
shll
and
test
insl
push
pop
add
adc
pop
decb
std
adc
mov
jp
inc
js
mov
test
es
pushf
das
movsl
je
push
lock
sbb
inc
or
in
pop
xchg
aam
out
repz
inc
or
cmpsl
insb
test
pop
lods
jmp
fucomi
es
adc
push
out
ret
mov
sbb
repnz
ret
rorl
sub
stos
out
pop
or
clc
sub
xchg
jno
dec
push
sbb
in
mov
jecxz
ss
xor
jg
mov
adc
add
and
insl
cmc
mov
sub
ljmp
loop
cmp
dec
imul
xor
push
pop
and
add
aas
das
es
fistpll
sbb
mov
or
mov
ja
cmp
jle
mov
push
or
jl
roll
or
inc
cmp
jmp
add
js
sub
or
or
push
cmp
adc
mov
and
pop
aad
sub
sbb
hlt
and
out
mov
mov
mov
pop
in
loope
mov
pop
mov
cmp
sub
or
dec
jge
adc
sbb
scas
mov
sarl
mov
and
sbb
jae
into
sarb
sbb
and
mov
dec
sub
fucomp
outsl
inc
xchg
mov
cwtl
sti
mov
cmp
bound
cmpsl
adc
xor
fisubs
roll
call
add
repz
lahf
xchg
fimuls
cmove
ja
mov
cmp
push
fs
js
lock
xlat
jb
inc
lock
inc
jno
fwait
and
ljmp
or
jo
mov
ds
lahf
aad
cmpsb
adcl
fmull
jno
pop
test
dec
bound
hlt
insb
mov
fcomps
dec
xchg
sarl
adc
mov
mov
aaa
repz
call
fisttps
pop
xor
mov
push
push
daa
dec
aas
cs
add
sbb
xorb
jae
sub
imul
push
lret
jne
into
dec
pop
je
bound
jbe
pop
outsb
mov
xchg
push
mov
add
or
outsl
cmp
sub
adc
push
cmpsb
repnz
dec
lret
sti
cli
cmp
fdivrs
in
xchg
xor
shl
sub
loop
xor
cli
cs
ret
xor
or
push
adcl
mov
sbb
push
sbb
pushf
sbb
fs
push
sub
sbb
mov
xlat
sub
xchg
xchg
jge
inc
imul
and
sub
inc
cmpsl
inc
call
jne
xchg
inc
push
push
lods
add
cs
pop
jl
subb
roll
sahf
pop
cmpsb
adc
cld
scas
in
mov
lods
in
mov
imul
pop
shlb
test
mov
inc
fdivl
outsl
jp
pop
mov
pcmpeqd
sbb
jmp
mov
and
xchg
ret
push
and
mov
and
pop
or
push
out
mov
pop
inc
out
push
movsb
jnp
dec
dec
outsl
and
ret
daa
icebp
mov
lods
pop
rorb
fbld
sti
stos
mov
adc
add
adc
fisubrl
mov
lea
adc
adc
cmp
sub
stos
push
dec
insb
nop
sub
xchg
aaa
gs
jl
sbb
xchg
cmp
mov
subb
dec
enter
ds
repz
sbb
icebp
mov
or
xor
in
lods
mov
and
and
xchg
test
xchg
cwtl
enter
push
imul
popf
das
mov
push
test
outsl
lea
push
add
subb
je
push
rolb
jne
mov
cmpsb
mov
clc
ret
iret
add
xchg
mov
mov
movsl
fidivl
ror
sbbb
sbb
jmp
sub
int3
ffreep
fistps
dec
test
cmc
mov
xchg
sub
jo
fsts
lret
adcl
pop
mov
jmp
jecxz
push
scas
fimull
adc
cli
pop
pop
xor
push
int3
jne
cli
push
inc
sub
xchg
mov
pop
pop
push
and
imul
and
cmp
pop
push
xor
xor
sarb
pop
add
cmp
ss
pop
stos
clc
ret
dec
sub
push
sub
jmp
les
or
and
pop
mov
xlat
mov
xchg
dec
add
jae
xchg
push
dec
repz
mov
fcom
push
pop
sbb
cmp
call
or
in
outsl
sbb
lods
int3
push
mov
mov
dec
stc
and
adc
stc
xor
xlat
push
add
fsubl
repz
fmuls
adc
mov
call
sub
stc
out
mov
sbb
enter
dec
xchg
sbbl
mov
adc
sbb
sbb
repnz
loope
test
outsl
in
sub
pushf
cmp
fistpll
dec
sti
cmpsb
movsb
aam
jns
jg
in
dec
adc
xor
mov
fwait
xor
jae
push
cwtl
lock
or
cmp
push
sbb
movsb
daa
or
push
jne
sbb
cli
adc
xchg
push
sub
jl
pop
push
jno
vpunpckhwd
popf
add
mov
lds
iret
add
and
testl
and
wrmsr
and
outsl
lret
jmp
and
cmp
pushf
xor
movsl
push
fwait
cmp
inc
mov
mov
cs
mov
push
mov
mov
insb
lods
push
nop
ss
notb
sbb
mov
add
loope
lea
xchg
mov
imul
int
mov
sbb
sahf
ljmp
jle
movsl
out
cmp
xchg
cmpl
test
and
in
jp
push
adc
dec
and
or
lcall
sbb
popa
mov
loopne
add
pop
xor
xor
stc
sahf
test
in
lahf
outsb
or
addl
daa
ljmp
shl
jg
fistpl
jge
xor
push
push
rcl
stos
adc
mov
stc
or
shll
xchg
repz
pop
cld
call
cs
jno
jmp
es
pushf
call
aaa
mov
les
adc
out
lahf
insl
decl
push
stos
mov
data16
adc
in
fcmovu
cmpsb
jp
cmp
rclb
pop
pop
sbb
mov
cmp
ret
push
xchg
xchg
add
test
pop
or
xor
das
pop
sbbl
jb
int3
aam
ljmp
push
pop
jmp
add
int
pop
and
clc
scas
imul
lods
jle
idivb
faddl
bound
lahf
sti
rcr
jg
out
cmp
add
loop
sub
mov
xchg
mov
lock
xchg
cmp
push
ljmp
cmpsb
jo
imul
insl
orb
xor
xchg
fimull
mov
in
jnp
pop
bnd
mul
pop
sub
mov
fwait
push
insb
jecxz
xor
push
test
hlt
movsl
xorl
inc
loope
jbe
out
repnz
and
roll
cmp
and
add
pop
cwtl
fcoml
cs
sbb
int
dec
xor
mov
mov
daa
aad
sub
stos
sub
lods
mov
mov
out
push
inc
leave
add
es
or
adc
sbb
popf
inc
mov
ljmp
idivb
mov
gs
pause
xor
and
in
or
int3
sarb
sub
mov
jno,pn
mov
out
test
bound
adc
dec
mov
sbb
dec
dec
inc
cmc
add
mov
push
or
enter
or
cwtl
mov
cmp
mov
xchg
hlt
sub
mov
ficompl
cmc
ljmp
or
jo
inc
inc
pop
setnp
iret
notl
icebp
loope
in
mov
fldcw
and
or
adc
cs
inc
push
inc
mov
inc
inc
mov
dec
push
or
imul
adc
sahf
dec
sbb
fsubrl
add
fldl
mov
xor
fsts
adc
mov
cwtl
xchg
lods
int3
aas
mov
dec
cld
data16
sbb
sub
insb
xor
xor
fucomi
icebp
icebp
icebp
jae
jb
das
fldenv
mov
mov
inc
sub
add
ja
jge
daa
inc
aad
pop
dec
xor
xor
aam
rorl
jl
mov
sub
mov
notb
gs
pop
ss
or
xor
pop
sub
pushw
loope,pt
cmc
ja
xlat
movsl
ret
or
in
dec
jb
les
mov
pop
add
aam
jno
mov
in
adc
cmp
mov
out
sub
int
sbb
clc
popl
push
test
xor
mov
cwtl
xchg
shrl
push
bound
cmp
xchg
sahf
or
lods
aas
idivb
out
sti
mov
push
iret
into
push
push
repnz
nop
sbb
outsb
lcall
sbb
pop
mov
xchg
icebp
mov
mov
xor
out
fldt
call
sub
je
pop
add
repz
ss
rclb
jg
sbbl
cmc
cmp
pop
adc
cmpsb
mov
xchg
mull
push
stc
xchg
or
nop
pop
push
or
jns
add
pushl
inc
fnstcw
jns
or
or
ja
jbe
xchg
and
lahf
icebp
cmpsb
pop
inc
jbe
xchg
pop
lods
inc
xor
sbb
pusha
sub
pop
adc
fistl
movsl
nop
sub
or
test
sub
push
xchg
int3
inc
repnz
cld
sbb
jne
cmp
xor
xchg
int
aas
and
popf
mov
popa
fldenv
sbb
aam
int3
mov
cmp
dec
sub
leave
pop
lds
mov
pop
pop
add
or
inc
push
push
ficoml
insb
mov
mov
push
add
lcall
sbb
mov
loope
icebp
mov
addr16
lcall
mov
je
loopne
jg
and
adc
fstpl
jbe
cmp
dec
sahf
mov
mov
aas
jno
xor
aad
adc
lahf
and
sti
ret
popa
inc
pop
pushf
jno
jnp
popa
out
fidivs
mov
inc
ss
mov
jp
jno
fildl
pop
fincstp
lods
pushw
push
mov
shlb
xor
sub
sti
xor
dec
add
xchg
fdiv
into
sub
es
loope
or
in
popf
mov
cltd
lds
cs
mov
and
in
lret
out
xchg
imul
xor
ret
pushf
jge
call
repz
or
xchg
sti
cmpsb
add
sub
xor
mov
push
add
mov
imul
stc
jge
fistps
in
rcrb
in
jno
cmp
dec
mov
dec
pop
mov
jge
adc
les
jb
xor
jns
adc
insb
aam
outsb
jge
pushf
jo
adc
cmp
xlat
dec
idivl
jg
mov
jae
mov
clc
test
pop
cltd
add
push
addr16
push
nop
adc
dec
and
movb
aad
xchg
adc
and
dec
push
dec
xchg
outsb
xchg
cmpsb
das
in
mov
aad
mov
pop
enter
sub
bound
adc
mov
sub
cs
push
flds
adc
jne
adc
adc
sbb
ret
loopne
int3
ljmp
div
lods
jb
pop
fadds
mov
mov
orb
mov
mov
jb
test
es
xor
mov
outsl
lret
mov
cmp
stos
test
pop
out
adc
push
xor
xchg
and
sub
lcall
mov
iret
xor
and
lds
movsb
lea
sarb
fdivl
sbb
xchg
or
aaa
test
xor
ja
shlb
adc
lahf
punpckhdq
testb
pop
mov
add
ljmp
lock
cmp
scas
sub
cltd
pushf
xchg
inc
add
xor
aam
inc
sbb
loope
es
jmp
jmp
push
push
das
add
mov
mov
outsl
and
dec
in
add
sbb
mov
xor
pushf
shlb
addl
js
andb
mov
imul
sbb
insb
getsec
push
mov
stc
clc
ja
jl
xor
xchg
test
mov
fs
jnp
or
in
push
sbb
cmp
pop
jb
ret
push
es
sub
inc
js
iret
adc
adc
cmp
sbb
stos
iret
sbb
ss
pop
push
rcrl
sub
out
push
cwtl
call
rorl
ljmp
ret
and
icebp
lret
and
cs
adc
scas
push
mov
sahf
push
sub
stos
inc
out
sub
insb
adcb
dec
mov
mov
pop
mov
dec
add
jp
lock
loopne
int
int3
add
push
scas
aaa
mov
je
nop
icebp
xchg
push
insl
lcall
fstpt
push
and
cmp
test
xor
mov
cmp
mov
jmp
push
loop
loop
lock
jnp
sub
dec
mov
loopne
shrb
pop
cmp
test
xor
data16
inc
rol
mov
loope
fstpl
or
pushf
xchg
data16
xchg
cltd
mov
in
xchg
lea
cmpsb
push
cmc
xchg
sti
js
rcrb
xchg
das
fbld
add
loopne
outsl
test
cs
push
and
mov
in
dec
adc
mov
xor
inc
out
test
fstps
add
daa
addb
in
dec
sub
es
push
pop
wbinvd
lds
mov
or
iret
rcrl
insl
fwait
inc
jbe
xlat
mov
and
jns
loop
les
pop
lds
rorl
sub
hlt
push
mov
scas
fwait
loop
fdivrl
lret
imul
insl
pop
clc
int3
std
mov
inc
nop
mov
or
rcrb
xchg
stc
lret
mov
mov
aas
sbb
pop
dec
xor
dec
ja
add
sbb
or
test
and
repz
outsl
cmp
inc
dec
andb
dec
ljmp
repnz
in
fstpt
pop
out
fwait
mov
popa
mov
stos
sahf
add
or
pop
mov
inc
test
fists
mov
mov
pop
pop
int
jbe
aaa
subl
leave
add
stc
push
jl
cmpsl
mov
cmp
lds
aaa
inc
push
adc
add
out
fucomp
add
jge
mov
jae
js
pusha
out
mov
pop
pop
lret
int
xor
fcomps
and
push
xchg
enter
push
push
pop
push
frstor
out
or
jmp
push
mov
data16
xchg
mov
and
dec
xor
test
push
stc
fcoml
leave
xor
es
adc
sub
mov
into
mov
jns
and
sbb
in
push
sbb
fdivl
popa
int3
in
push
in
jb
jne
xchg
movsl
imul
jnp
adc
aad
dec
cmpsb
in
in
cmp
pop
fidivrs
sbb
mov
jecxz
js
xor
dec
cmp
jbe
sahf
push
or
test
inc
adc
std
adc
call
hlt
cmpsl
dec
adc
xchg
or
jbe
dec
adcb
in
push
insl
fldl
fdivs
stos
orb
jno
mov
repz
xlat
add
ret
cmpb
loop
stos
cmp
xlat
bound
push
movsl
sub
hlt
ja
jns
xchg
jmp
sbbl
ljmp
int
mov
cmp
dec
and
clc
gs
mov
lea
jg
or
imul
fcmovu
lret
add
cmp
loop
ss
cmp
cmpsb
mov
insl
or
rcrb
add
movsb
and
jmp
out
and
pop
shrl
test
pop
or
pop
lahf
lds
jmp
and
ret
loop
ret
cs
jae
ret
mov
cwtl
lret
aaa
sbb
jmp
mov
insl
or
jp
jecxz
adc
xlat
dec
mov
fldcw
movsl
test
mov
pop
jmp
or
mov
out
adc
fs
xor
mov
imul
stc
loope
xor
jmp
insb
mov
call
rclb
sarb
pop
xchg
mov
std
out
mov
cmpsl
cld
or
xchg
nop
movl
fmull
jbe
outsl
push
icebp
push
mov
in
sub
fwait
lea
aas
push
scas
scas
adc
or
or
loopne
push
icebp
lods
sub
mov
xchg
addr16
and
scas
mov
imul
rolb
dec
nop
fnstcw
cmpsl
sbb
inc
mov
or
inc
xorl
fidivrl
cmc
cltd
push
push
mov
adc
idivl
and
mov
add
jle
out
or
inc
outsl
out
pop
lea
and
lret
mov
dec
js
cmpsb
fiadds
and
int
loopne
push
inc
ss
jmp
lea
xlat
and
in
das
add
js
add
adc
mov
stc
inc
mov
stc
in
pop
push
inc
shlb
inc
or
cltd
jge
loop
in
mov
lock
add
mov
add
mov
jmp
push
stos
lret
cmp
ret
out
aaa
fadd
jb
xor
pop
ficompl
into
and
jns
cmpsb
das
sub
mov
scas
cltd
pop
lcall
xchg
out
in
adc
gs
cmp
andb
mov
mov
popa
mull
in
mov
or
push
cmpsb
std
jnp
stos
push
or
pop
pop
outsb
nop
fdivr
rcpps
inc
in
mov
inc
mov
shll
cwtl
sbb
out
mov
js
ret
enter
mov
mov
inc
and
hlt
mov
xchg
cltd
jne
lods
fnstcw
mov
rcrb
or
inc
cld
sub
jae
jge
addb
sub
addb
xchg
jl
ds
add
jns
dec
mov
push
adc
cmp
addl
repz
scas
repnz
call
outsl
cmp
insl
int3
fs
push
in
push
xchg
aam
jae
mov
lods
mov
lcall
rcrb
mov
xchg
cmp
shrb
xor
mov
gs
pop
xor
xor
ss
push
lret
lods
push
in
stos
insl
iret
ljmp
test
or
das
inc
xorb
jno
xor
mov
mov
mov
xor
shlb
std
jbe
mov
xchg
sarb
jns
in
incl
mov
imul
push
je
in
xchg
pusha
je
inc
stc
pop
fwait
out
or
cs
mov
int3
mov
leave
adc
mov
scas
sub
mov
into
leave
ja
mov
popf
mov
mov
mov
and
addr16
pop
ljmp
xor
rcr
cs
call
push
add
inc
mov
dec
stos
dec
cwtl
jp
daa
xchg
ds
scas
xchg
or
roll
jno
enter
push
xchg
inc
mov
cmpl
bound
cmp
insb
push
pusha
lock
scas
cmp
movsl
daa
cld
mov
mov
cli
hlt
rcl
mov
fcoms
cmp
dec
sbb
repnz
sbb
jge
jle
sbb
mov
xchg
jg
add
mov
popf
lods
insb
cmp
pushl
iret
rcll
xchg
sbb
movl
mov
mov
orl
xlat
js
lahf
ljmp
mov
ret
cmp
or
or
call
addb
fadds
cmpsb
std
push
std
iret
cmpsl
scas
dec
sbb
lea
call
or
and
pop
dec
hlt
in
bound
adc
jl
mov
and
dec
inc
jne
int3
mov
ss
negl
dec
mov
lret
nop
push
jno
jno
enter
pusha
inc
mov
fwait
aam
pop
stc
into
mov
or
pop
or
push
pushf
pop
sub
push
cmc
xchg
push
out
or
jecxz
test
push
pop
popf
jmp
add
pop
mov
mov
subl
xchg
sbb
mov
and
mov
sbb
ror
adcb
adc
push
sub
and
lret
sti
lds
es
test
mov
push
imul
mov
js
shll
push
lods
lret
add
int3
aaa
dec
inc
clc
pushf
adc
pop
bound
push
pop
lahf
mov
sub
rorl
xor
jmp
xor
xchg
fwait
and
push
int3
jbe
fstp
jo
cmp
dec
push
gs
mov
adc
cwtl
mov
stos
jg
outsb
push
jl
adc
minps
cld
loope
bt
pop
pop
sbb
xor
mov
aaa
add
fidivrs
xchg
mov
cmpsl
lcall
ss
in
ljmp
inc
sbb
outsb
push
or
xchg
stc
jnp
dec
dec
in
cmp
fldenv
out
stc
mov
mov
int3
lahf
cmp
cmp
xor
or
add
inc
outsl
push
push
mov
jg
aas
dec
jnp
mov
fwait
sub
das
mov
movb
push
test
and
mov
adcl
mov
js
pop
mov
pop
pop
pop
loop
fidivrl
aam
scas
jge
add
je
insl
mov
and
es
inc
pushf
push
es
cmpsl
xor
in
adc
and
in
xchg
jp
xor
into
enter
ret
sbb
insl
es
pop
sub
push
loopne
pop
mov
pop
imul
adc
jbe
mov
push
inc
mov
daa
lods
push
and
add
js
pop
sbb
lret
adc
xlat
adc
lds
divl
decb
pop
mov
addr16
sub
test
mov
movsb
repz
sub
in
cmpsl
movsb
sti
fimuls
pop
dec
push
fdivrs
insb
subb
push
js
mov
fwait
and
verw
cmpl
out
js
push
out
data16
out
xor
mov
outsb
test
aam
dec
push
lret
mov
in
jae
or
mov
mov
daa
pushl
movsb
mov
fwait
lcall
xchg
sti
push
dec
adc
rcrl
mov
imul
fstpl
dec
jnp
loop
and
pop
loope
mov
call
or
test
sbb
jne
jmp
and
add
pop
popf
sahf
or
lea
int3
jae
cmp
xor
ffreep
cli
test
popf
stos
xchg
ret
sahf
and
xchg
faddl
pop
add
pop
mov
call
in
into
out
test
cmp
subl
lret
cmp
and
fs
or
lahf
cwtl
sbb
and
enter
lret
push
dec
arpl
std
adc
pop
sub
stos
pop
mov
xchg
xchg
jle
ljmp
mov
shrb
sbb
lock
mov
scas
push
fidivrl
sub
loope
test
inc
sub
push
jnp
push
test
add
sbb
int
rcrl
add
bound
inc
adc
pop
or
add
cmp
in
dec
mov
fldt
icebp
fsubrl
inc
call
ret
xor
out
adc
xor
and
sub
mul
adc
cmpsl
xor
pop
stc
das
push
xchg
scas
in
imull
push
scas
xchg
add
std
into
ds
push
pop
ja
jl
and
ret
icebp
out
ljmp
in
addr16
loop
inc
cmp
push
cwtl
popa
icebp
jecxz
fs
scas
outsl
push
cmp
cltd
mov
int
mov
sub
aam
jecxz
popa
ret
mov
stos
outsl
xor
and
cs
xor
cmc
jge
test
pop
inc
test
rclb
popf
mov
jecxz
sbb
daa
xor
call
andb
cmp
cmpsl
and
dec
lods
or
addr16
stos
sub
dec
push
lock
test
fucomp
xchg
pop
add
and
stos
fildl
lahf
pop
xchg
out
repnz
adc
cmp
addr16
push
imul
or
or
mov
mov
lcall
xor
jmp
aaa
clc
push
push
add
push
int3
push
xchg
mov
out
daa
lret
sbb
inc
xchg
ret
jbe
mov
loopne
enter
and
adc
rolb
push
jae
fwait
mov
jmp
mulb
dec
adc
sub
aaa
adc
fs
call
push
sbbl
cmp
movsb
bound
inc
lret
gs
push
out
push
fdivrl
pop
aaa
adc
int
lret
xor
lock
xchg
cmp
mov
in
test
fwait
add
sahf
cwtl
and
dec
inc
mov
scas
nop
jb
lahf
sbb
inc
cmp
mov
mov
or
shlb
les
inc
xor
out
push
imul
jb
adc
int3
jns
lock
pop
fisubl
jp
or
push
inc
test
xchg
push
jno
dec
outsb
data16
push
movsb
dec
mov
xor
inc
jl
shl
cld
cmp
sti
out
xorl
into
enter
ja
cltd
bound
stc
sbb
fadd
xchg
pushf
xchg
dec
mov
movsb
shlb
data16
sub
push
and
rcrb
jo
xor
pop
and
inc
mov
adc
sub
sub
loope
xor
dec
fdivr
pop
jecxz
pop
scas
daa
or
adc
mov
mov
inc
sti
jg
cld
cmp
jl
and
fwait
sti
cmc
adcb
test
fucomip
sub
add
in
xchg
stos
xchg
sbb
push
push
jbe
mov
push
fcomi
and
xor
std
push
and
shl
push
mov
add
add
lock
xor
outsl
cmp
push
xchg
data16
mov
xchg
mov
xor
lret
xchg
push
or
xchg
leave
hlt
push
dec
add
inc
rclb
cld
add
xor
frstor
xor
mov
cmpb
scas
inc
aas
ret
out
dec
push
lahf
jp
popa
pop
loope
jmp
out
push
and
pop
out
mov
mov
orl
sub
jnp
xor
xchg
gs
inc
cmpsl
push
pop
mov
test
add
lods
bound
cmp
push
adc
loope
cwtl
xchg
movsb
pop
stos
aam
xor
or
lods
sbb
and
cmc
imul
ss
push
std
outsl
shrl
mov
jne
mov
xchg
loop
xchg
xchg
xchg
lods
pop
jg
daa
out
mov
rol
mov
lcall
xchg
dec
adc
add
or
jne
mov
je
adc
mov
cld
ret
cmpsb
dec
mov
fwait
adcb
shr
fwait
mov
mov
xchg
mov
cmp
adc
adc
inc
or
leave
jo
push
movsl
test
and
into
mov
std
aam
leave
xchg
fcomi
movsl
xchg
test
cli
jo
xor
cmp
jae
xchg
mov
loope
jo
sti
inc
out
or
mov
mov
jno
daa
jnp
pop
loop
mov
cmpsl
es
push
movsl
mov
mov
aas
cs
pushf
sbb
mov
adc
sub
cld
push
icebp
jb
sub
xchg
stos
jns
jg
lods
loop
shl
inc
movsl
sub
enter
insl
sahf
dec
dec
decb
outsb
sbb
pop
xor
fcmovb
mov
mov
das
movhps
fcmovb
rcr
out
jne
xor
into
sbb
arpl
jl
xchg
insb
adcb
lret
mov
daa
mov
je
stc
sub
in
shll
sub
dec
mov
push
cmp
inc
xor
out
addr16
movsl
jmp
insb
cmpsb
mov
mov
inc
mov
lahf
fucom
push
int3
pop
fisubrs
and
test
mov
mov
sahf
xor
ljmp
cltd
adc
adc
out
dec
sbb
dec
test
mov
adcb
out
outsl
jl
xchg
leave
rsqrtps
push
cmpl
jecxz
jg
lahf
push
fs
sbbb
push
xor
lock
cmp
lock
mov
adc
fs
test
insl
sub
mov
and
fsub
dec
add
rcll
ret
pusha
sti
inc
inc
lahf
jnp
scas
pop
push
stos
subl
fs
sbb
mov
mov
pop
mov
insl
and
sarl
outsb
out
shlb
shrb
ret
pop
jge
pop
call
fdivr
add
dec
mov
add
imul
push
testb
sti
adc
aam
iret
mov
jl
push
sub
jo
xor
aaa
fimull
nop
lods
push
hlt
jne
shll
pop
or
mov
les
xchg
and
inc
int
pop
ja
cmp
fildll
add
in
call
jno
icebp
sub
inc
loop
jge
adc
mov
push
dec
lea
ss
cmc
iret
or
pop
push
insb
imul
sub
sbb
mov
mov
imul
inc
mov
jno
test
aaa
jae
jne
jle
outsb
adc
jle
gs
jbe
mov
cmc
out
pop
inc
and
movsl
sub
xchg
jno
lds
and
pop
ja
adc
cmp
pop
rcl
call
xchg
out
call
in
ss
rcll
stos
push
imul
jnp
xor
rorl
jle
mov
enter
sbb
xor
shlb
and
push
ja
and
or
sub
mov
notl
inc
dec
adc
sub
into
aam
mov
add
into
adc
or
jo
pop
fisubs
jp
add
dec
push
and
call
mov
sarl
sbb
movb
cmp
cmp
xor
repz
nop
and
lods
cwtl
sbb
jle
pop
call
fs
out
push
push
xchg
and
in
cmp
sbb
push
int3
shlb
rcll
or
push
sub
push
sub
sub
gs
mov
test
xchg
mov
sub
repnz
sarb
aam
adc
cmp
xchg
aas
fidivrl
loope
pop
mov
lcall
cs
mov
ss
mov
popf
mov
jb
jg
add
call
adc
and
push
or
cmp
loopne
lcall
jmp
mov
or
xchg
rorl
mov
sub
aaa
jnp
push
in
xor
clc
mov
inc
xor
jmp
aad
mov
fdivrs
xor
push
shl
pop
imul
stos
cwtl
fs
inc
pop
rorl
loopne
imul
scas
xchg
and
enter
sub
xlat
shll
push
xchg
add
dec
xchg
xchg
mov
and
adc
push
aas
call
aas
adc
and
pop
mov
leave
jb
xor
or
mov
cli
imul
xchg
jb
and
orl
or
jg
call
mov
insl
leave
aad
nop
dec
xchg
sbb
dec
push
in
into
push
mov
xchg
lahf
loopne
dec
or
les
bnd
test
mov
and
or
lahf
push
sbb
outsb
repnz
aaa
push
mov
loope
pushl
xchg
cmp
aas
iret
adc
push
insb
addr16
fwait
adc
cmp
push
jl
outsb
dec
pop
push
push
mov
jno
idiv
je
push
xlat
and
push
pusha
cwtl
and
pushf
icebp
and
lea
push
inc
add
hlt
dec
fistps
lcall
inc
cltd
sub
test
inc
in
cmp
ja
repnz
imul
add
std
jmp
sti
mov
mov
cmpsb
lcall
mov
movsb
mov
mov
fdivrl
jl
mov
stc
subl
pop
or
push
inc
loop
or
jno
shrb
sahf
rorb
and
pop
in
cli
jno
scas
je
nop
mov
inc
das
mov
mov
mov
js
int
mov
cs
jns
pop
xlat
dec
sbb
push
aam
sub
jns
or
inc
xlat
pop
inc
or
nop
sbb
negl
orl
xor
fdivs
add
test
xchg
mov
inc
mov
add
in
repz
nop
push
insl
fldenv
rcr
sub
fwait
dec
inc
inc
and
aaa
xchg
loope
lock
icebp
pop
rcll
cli
nop
orb
push
ret
stc
ds
fsubl
loopne
fnstcw
xchg
push
dec
fdivrl
push
and
lds
test
and
popa
imul
lahf
jae
dec
bound
inc
mov
xchg
inc
mov
scas
bound
jnp
pop
sub
mov
pop
fs
test
fcmovnu
jns
fwait
or
icebp
xchg
mov
lods
xchg
add
pop
sbb
and
or
jmp
dec
sub
fsubl
into
imul
cmp
shl
mov
out
fidivs
das
mov
adc
in
mov
and
xchg
mov
ds
sub
std
pushf
mov
stos
mov
imul
push
imul
sub
out
lret
lods
add
mov
xorb
push
mov
dec
icebp
inc
mov
mov
cmc
dec
adc
cld
scas
or
hlt
inc
mov
jo
aas
adc
pop
adc
and
mov
push
lods
pop
xorl
cmp
xchg
imul
push
jns
pop
sub
and
fwait
mov
std
es
push
sub
cmpsl
xorb
mov
sbb
sarb
mov
or
scas
lods
and
xchg
in
scas
sbb
in
in
adc
scas
xorl
cmp
hlt
cld
jecxz
mov
mov
addr16
pop
fsubrp
ds
xchg
inc
add
add
lret
adc
push
test
push
ljmp
cld
inc
in
and
pop
jbe
stos
pop
jns
xor
and
into
sbbb
out
dec
mov
jns
aad
test
xlat
pushf
mov
inc
xchg
mov
test
repnz
mov
xlat
fldl
or
inc
xchg
sbb
push
in
outsb
lret
jl
test
jo
add
jge
fcomip
adc
adc
cmp
fwait
shrl
xor
call
pop
mov
mov
pop
or
int
mov
inc
ja
nop
sbb
in
lock
fidivrl
sub
jp
ficompl
cmpb
rcr
les
pop
xor
aaa
jecxz
lock
mov
fcoms
and
aaa
add
or
into
fsubrp
cmpsl
push
push
sbb
cs
jmp
test
jne
or
fwait
cmp
jmp
sbb
xchg
data16
xor
xchg
xchg
add
mov
push
fldcw
cltd
xchg
jg
push
imull
pop
insl
and
cld
dec
stc
je
xchg
cmc
ret
adc
lret
jp
test
pushf
xchg
stos
xlat
xor
movsb
imulb
lcall
in
mov
pop
adc
test
shl
lea
jmp
push
xchg
lcall
dec
stc
jecxz
pop
jnp
dec
sub
dec
jg
pop
clc
es
enter
iret
cmp
mov
add
sbb
xchg
sbb
adcb
inc
mov
push
push
or
sbb
and
daa
scas
pop
dec
push
das
inc
inc
icebp
push
jae
and
cmp
pop
cmpb
sahf
xor
mov
jb
decb
pop
sub
int
into
cmc
sub
mov
in
rcl
hlt
imul
subl
mov
mov
iret
int
inc
sar
sub
sub
aas
nop
inc
mov
repnz
arpl
outsb
push
popf
sbb
into
sub
and
xchg
mov
inc
xor
negl
mov
repnz
mov
fistpll
or
add
sub
adc
daa
jbe
cmp
cmp
iret
movsl
dec
repz
jo
and
add
repnz
sbb
lret
dec
sbb
jg
push
test
fwait
cmpsb
fldl
inc
shlb
lret
js
cmp
cltd
insb
xor
nop
sub
les
scas
scas
xor
mov
flds
lea
shrb
scas
sbb
mov
pop
xchg
test
aas
ffree
mov
leave
mov
mov
jl
sarl
mov
ret
sbb
xor
inc
cs
fimull
jns
push
andb
lret
pcmpeqw
jno
adc
test
xor
mov
push
pusha
in
filds
int3
rcll
sbb
inc
mov
xor
xchg
dec
pop
es
repnz
sub
add
adc
repz
sbb
mov
lods
xor
cmp
jbe
and
loope
test
xchg
stos
imul
enter
ficompl
outsl
jg
lock
loopne
aad
cmpsl
jle
mov
dec
lret
push
pop
scas
sti
xor
fcomp
clc
sub
movsb
icebp
or
je
scas
out
clc
sahf
aam
nop
pop
les
dec
or
adc
push
ljmp
repz
mov
cmp
hlt
ret
ja
mov
test
fimuls
repnz
fstl
loopne
icebp
ret
in
jmp
mov
test
adc
push
cld
cld
mov
jae
ja
lahf
pop
insb
mov
gs
jnp
inc
sub
in
in
je
or
insb
and
ret
jp
cmc
fiadds
xchg
call
jle
push
xchg
dec
aas
sbb
fdivs
arpl
or
testb
daa
cmc
and
xchg
sarb
fnstcw
jo
inc
inc
adc
pusha
dec
aad
sub
out
dec
pop
xchg
sub
mov
nop
pop
sbb
pop
jge
and
das
jmp
push
iret
inc
mov
pop
or
sub
ffreep
add
pop
mov
or
and
mov
fs
dec
pop
bnd
xor
jnp
mov
imul
and
in
dec
xchg
add
outsl
test
shr
movsb
jmp
pop
jp
in
daa
mov
mov
sbb
push
dec
mov
xchg
pushf
jnp
aam
xor
xor
lahf
sub
sbb
cmpsb
subb
pop
xchg
sahf
xor
push
lret
enter
lret
mov
xor
ss
les
dec
lods
pop
fwait
stos
xor
dec
outsb
xlat
outsb
jnp
in
sub
in
arpl
push
outsb
push
jge
popa
ja
ret
dec
sub
mov
movsl
aam
loopne
push
test
fwait
ja
push
pop
inc
fisubl
sbb
adc
or
adc
dec
mov
ss
jp
jecxz
lods
pop
push
fmul
iret
aas
in
lock
call
push
cmc
shl
test
inc
xor
xchg
idivb
aas
out
adc
pop
push
mov
mov
push
imul
pop
insb
push
sub
xlat
jnp
or
pusha
jno
pop
inc
xor
out
test
mov
pop
cmp
js
fwait
lods
and
and
setno
push
aam
sub
les
pop
pop
add
icebp
dec
cltd
cmp
jne
imul
ja
push
sahf
ss
jl
idivb
jnp
mov
aam
in
scas
push
lock
imulb
cmc
xchg
cmp
rcrl
xorl
inc
or
outsl
pop
fnstcw
push
mov
out
mov
adc
outsl
xchg
stos
fstl
lret
inc
ret
test
loope
cmp
sub
inc
ljmp
sbb
xor
in
xchg
xchg
sbb
fsubs
pop
sbb
add
andb
lcall
adc
in
inc
das
mov
inc
out
or
scas
sbb
sbb
subb
out
inc
test
cmp
inc
adc
pop
into
cltd
cwtl
out
ficompl
rolb
cli
in
jb
xlat
or
mov
push
into
mov
adc
jle
pop
ljmp
adc
aad
inc
pop
ljmp
mov
pop
mov
incb
and
jmp
add
fs
adc
in
sbb
pushf
iret
stos
outsl
xchg
push
push
popf
mov
jg
insl
repnz
pop
andl
clc
inc
fisttpll
insb
mov
pop
or
jns
mov
pop
lret
hlt
mov
fnstsw
iret
fsubrp
leave
aad
aas
stos
xchg
cltd
xlat
andnps
sub
sbb
push
insl
in
push
mov
mov
ja
stos
nop
pop
or
sbb
xor
mov
add
dec
hlt
stos
inc
out
dec
in
add
leave
sub
mov
jg
scas
cli
popa
hlt
sub
sbb
cmp
mov
dec
imul
in
xchg
bt
cltd
test
mov
faddl
je
xor
out
aas
movsl
and
xor
sbb
ret
enter
pop
std
sub
inc
jns
cmp
pop
pop
test
and
lods
in
fbld
cmp
dec
mov
sbb
cmp
sar
fmull
mov
mov
ret
cli
push
rorb
inc
push
xor
mov
arpl
mov
sub
and
mov
pop
ja
dec
das
jl
enter
sbb
or
push
cmp
xchg
andb
sbb
lods
stc
in
inc
lret
es
in
outsb
sub
sub
pop
cltd
outsl
mov
pop
jae
movsb
mov
scas
stos
das
daa
cmp
mov
cmp
rclb
adc
jne
mov
cmp
inc
pusha
loopne
jmp
insl
xor
pop
inc
add
mov
lcall
cmpsl
jg
mov
ret
cmpsl
in
shl
mov
or
lahf
fs
or
out
push
fsubr
sbbl
idivl
mov
mov
movsb
pop
add
inc
sbb
xorb
mov
push
mov
pop
ficoms
sub
mov
jp
jecxz
xchg
xchg
or
cmp
jno
or
jle
roll
xchg
xchg
insl
lods
cmp
js
cld
mov
pop
pushf
cmpb
xchg
mov
push
jge
imul
in
dec
fucomi
and
pusha
sub
mov
xchg
or
imul
test
test
push
pop
aaa
add
mov
jno
sub
xchg
ror
fs
or
xchg
stos
popa
out
mov
das
jns
dec
jo
dec
int
pop
cmp
pop
mov
testb
daa
xchg
inc
enter
push
imul
imull
and
mov
adc
test
push
jmp
fwait
jl
pop
gs
lea
mov
or
sahf
sahf
push
sbb
lods
inc
in
cmp
xchg
fadd
adc
inc
in
mov
and
xor
xchg
fmull
in
add
sub
jb
pushl
call
sub
fistps
sbb
sub
fcomps
ja
xor
out
or
popf
sarl
push
jnp
jmp
gs
jle
rolb
mov
nop
fsubrs
in
subl
scas
lcall
lret
jg
inc
mov
addr16
clc
lock
data16
pop
sbb
mov
sbb
int
mov
test
push
ljmp
jae
push
es
sti
jae
sbb
loop
es
or
fstpt
jle
pusha
sbb
mov
ljmp
mov
mov
daa
in
adc
mov
inc
adc
outsl
and
pop
in
adc
pop
cltd
outsb
xor
mov
out
fwait
add
mov
mov
inc
data16
hlt
sbb
sub
xor
out
or
aaa
jae
sbb
fsub
mov
pop
cltd
sbb
cmp
aam
cs
xor
pop
roll
pop
int
aad
ljmp
push
xor
jmp
push
sti
jl
nop
mov
int
loope
mov
mov
ljmp
ja
push
or
aaa
fcmovb
cmp
mov
outsb
std
hlt
punpckhwd
js
inc
clc
iret
add
cmc
pushf
shr
nop
jp
repnz
icebp
stos
sbb
mov
cmpsl
inc
repnz
popa
iret
adc
mov
cmc
xor
add
adc
adc
sbb
mov
xchg
loop
hlt
das
mov
arpl
sbb
and
cwtl
rcr
ss
arpl
xchg
pop
mov
mov
and
jl
call
inc
loopne
and
fisttpl
fdivrp
xchg
hlt
fsts
sarb
arpl
jns
adc
xchg
repz
loope
mov
mov
cs
add
sub
roll
call
popa
xor
cmp
cmc
outsl
jo
mov
mov
jbe
imul
jno
test
mov
popa
or
aas
cmp
xchg
fwait
rorb
icebp
popa
adc
mov
mov
mov
cmpsl
fiaddl
push
mov
shrb
fnsave
jns
and
lret
dec
rcrl
sbb
mov
pop
inc
mov
mov
cmp
daa
lret
mov
mov
iret
mov
test
pop
and
sbb
mov
lahf
lods
xchg
mov
cmpb
sub
xchg
popa
daa
push
jbe
call
enter
xor
movsb
dec
mov
scas
xchg
sub
aas
je
adc
inc
popa
pop
mov
insb
mov
sbb
ljmp
xchg
ljmp
adc
jae
pop
sti
xchg
push
out
cld
cmp
imul
icebp
xchg
mov
xchg
in
mov
adcl
aam
js
pop
mov
nop
hlt
sub
mov
jb
mov
jecxz
jns
ret
test
fmul
jp
xchg
fsts
aas
xchg
jp
pop
push
lcall
notl
xchg
xchg
es
mov
lods
inc
pop
push
mov
jbe
andb
je
xor
dec
shl
adc
stos
xor
into
or
fwait
and
mov
or
jp
fst
leave
push
pop
xor
fsubs
in
addb
js
iret
rcrb
add
movsb
dec
nop
or
mov
dec
insb
in
sub
fsts
add
push
push
loope
cmpsb
xchg
mov
je
push
add
test
popf
outsl
std
mov
mov
dec
daa
push
xchg
inc
jge
mov
addr16
dec
push
sub
jge,pt
push
adc
scas
das
adc
cs
xor
testl
ljmp
sbb
mov
pushf
or
aas
mov
jbe
adc
dec
mov
cmp
dec
mov
loopne
push
dec
mov
lods
outsl
pushf
add
sub
pop
loopne
into
or
xchg
mov
fwait
popa
jne
push
pop
adc
push
mov
push
sub
inc
cmp
jae
testl
fcoml
xchg
lret
movl
ret
jecxz
pop
gs
lods
js
lds
inc
mov
jge
shrl
dec
mov
mov
push
add
fstps
sub
sub
sbb
dec
fidivrl
dec
aam
int
mov
fisubl
mov
adc
mov
pop
jmp
icebp
pop
outsb
mov
aaa
push
je
pusha
ficompl
rcrb
sahf
dec
sbb
or
sti
mov
pop
pop
mov
ss
fmuls
dec
and
rcr
mov
mov
or
and
dec
test
sysenter
cmp
mov
testl
xchg
dec
in
scas
and
in
cli
sbb
and
in
pop
je
js
mov
and
add
mov
js
mov
lock
das
dec
and
dec
sbb
push
inc
jg
sbb
sub
add
addl
mov
or
lock
and
out
incb
stos
sub
leave
or
or
insl
xor
cwtl
lret
incb
sbb
or
push
cmp
mov
inc
add
sarb
stos
sub
popa
aaa
movl
into
lret
add
or
cmp
rolb
mov
insl
mov
daa
mov
mov
pushf
ljmp
test
lret
insb
mov
popf
dec
insb
out
fsts
mov
lods
mov
movsl
ja
push
je
lods
lret
adc
fwait
push
jl
jo
add
clc
dec
jmp
sbb
and
imul
xchg
pop
shrl
out
movsl
sbb
mov
pop
lods
out
jns
fadd
iret
and
mov
out
aad
sti
nop
cltd
daa
lods
sbb
sbb
in
pop
ds
setge
jp
in
fdivs
mov
cmc
jp
es
adcb
outsb
cld
mov
cmp
pop
jmp
popa
xor
xchg
mov
rorb
inc
xor
call
or
adc
iret
out
mov
aaa
and
scas
stos
add
test
or
jge
inc
hlt
mov
or
lea
cs
pushf
test
and
test
clc
sbb
fstps
inc
mov
xor
cmpsb
inc
int3
aaa
cs
jp
push
jo
jle
movsb
or
inc
ds
jne
arpl
sub
xchg
sbb
jne
jo
addb
loope
pop
mov
ja
lcall
shlb
movsl
rcrl
shll
push
push
jl
fimull
mov
gs
aaa
dec
pop
rcll
in
inc
inc
sbb
and
sbb
and
mov
xor
cmc
ret
and
jno
xchg
xchg
xor
js
fldcw
test
pop
add
movsb
inc
mov
and
mul
int3
cmp
call
xchg
xor
out
pushl
fwait
outsb
pop
pop
mov
into
dec
rclb
cmp
ja
push
dec
mov
pusha
stos
mov
jge
pop
lahf
jbe
push
std
cmp
inc
jno
and
xchg
xchg
mov
jp
inc
cmp
aam
inc
adc
nop
add
cmp
push
pushf
dec
ficomps
popf
mov
xor
cmp
repz
insl
loope
lods
cmpb
xchg
inc
inc
sbb
mov
gs
cmp
sarl
xchg
jnp
jg
lret
inc
icebp
pusha
xor
pop
std
into
cmp
inc
and
jmp
xor
sub
lods
mov
mov
add
pop
add
push
xchg
negb
cmp
cmp
aas
mov
mov
les
push
out
push
aam
sub
sbb
les
xor
mov
jns
xor
call
jno
mov
sub
mov
or
sti
cmpl
mov
or
loope
int
mov
movsl
cmp
in
or
jle
sbb
loope
push
mov
jp
insb
jge
jge
fbstp
insl
inc
xor
mov
pop
sbb
repnz
popa
mov
in
dec
repnz
mov
inc
and
call
xor
stc
xchg
in
clc
pop
add
shlb
jecxz
mov
mov
push
arpl
inc
cs
stc
push
inc
sbb
into
sub
add
mov
inc
test
push
into
fstps
adc
fidivrs
cmp
inc
xchg
test
mov
sbb
push
or
ljmp
add
ss
lret
sbb
mov
lods
repnz
mov
pop
add
mov
mov
loop
lock
pop
int
in
add
arpl
pop
pushf
hlt
ja
rcrb
sti
loopne
movsb
or
pop
orl
cs
ds
loopne
aad
xchg
lret
push
inc
jle
inc
push
dec
aaa
sbb
out
cmp
outsl
lds
pop
push
push
jne
gs
mov
sbb
divb
sub
mov
scas
insb
addb
movsb
add
out
adc
mov
arpl
test
sarl
stc
insb
xor
cs
sarl
in
sbb
dec
xchg
cmp
mov
pop
jg
mov
cmp
in
dec
add
enter
pop
ds
mov
xchg
pushf
in
int3
loope
ds
out
clc
dec
shlb
inc
sarb
js
gs
dec
jno
mov
flds
add
js
fidivl
enter
stc
or
clc
xchg
loop
push
pusha
mov
dec
cld
xchg
inc
inc
push
lret
das
scas
cmpsb
sti
fs
loop
push
cld
jne
inc
clc
xchg
inc
push
lea
jp
inc
pop
loope
jb
add
or
inc
call
and
xlat
fmull
or
and
je
jle
adc
cmc
fcomps
dec
cmp
mov
repz
insl
movl
cmp
sbb
add
in
mov
scas
ret
push
jmp
and
jns
sarb
lods
lahf
dec
xchg
jmp
dec
repnz
inc
pop
ds
int3
add
test
push
xchg
or
adc
cltd
cmp
sub
sbb
cmp
cmp
sbb
jae
mov
loopne
inc
inc
daa
mov
aas
add
ficompl
test
jb
pop
jne
push
mov
jle
mov
sbb
std
data16
mov
push
xchg
stos
pop
inc
fidivrl
lock
iret
gs
jp
les
mov
test
cmp
sub
inc
xchg
fwait
and
mov
sub
jmp
les
scas
add
cmp
imul
int3
mov
gs
int3
inc
stos
mov
test
fcomp
imul
cmp
nop
movsl
mov
cs
pop
loop
mov
sti
jle
test
adc
popf
pop
cmp
push
fisubs
mov
ljmp
mov
dec
stos
xlat
push
mov
icebp
test
adc
mov
test
loope
ret
fcomp
inc
mov
lret
or
stos
test
sbb
add
push
testl
outsl
sbb
ja
es
and
scas
and
jb
dec
mov
xor
movsl
dec
pop
arpl
sahf
lock
xor
xor
adc
movntps
pop
cltd
push
xor
or
xor
sub
aam
push
mov
fs
or
in
push
xchg
movb
repz
stos
xlat
jae
or
and
pop
adc
sbb
push
aaa
js
mov
in
cmp
cmpl
push
lret
imulb
sbb
aaa
jmp
movsb
dec
lcall
and
dec
mov
js
out
lock
das
pop
loope
mov
inc
sbb
and
ret
mov
lea
shlb
in
mov
sahf
cmp
xor
sti
dec
stos
pop
lahf
gs
mov
sub
and
ret
mov
jecxz
out
lea
fnsave
push
sbb
cmp
negb
fsubrp
stc
sbbl
insb
out
push
xchg
mov
add
and
add
fcoms
jae
loop
and
xchg
inc
or
rcrb
lea
fstpt
xchg
adc
jp
in
mov
mov
push
in
hlt
sbb
mov
ds
hlt
xchg
mov
jae
mov
adc
je
clc
mov
and
dec
jbe
adc
adc
enter
fldcw
repz
sub
add
jns
jno
mov
int3
xchg
out
dec
clc
cmp
mov
dec
rorl
cs
xchg
ds
adc
dec
icebp
push
lock
in
sbb
loope
stc
jae
outsl
scas
mov
pushf
loopne
push
push
mov
mov
mov
xor
push
loope
or
pop
mov
stc
fsubl
inc
movsb
add
lock
movsl
sub
insl
adc
or
insl
cld
out
ja
push
sub
sub
ljmp
and
shlb
outsb
jg
mov
adc
cli
push
adc
repz
xacquire
imul
fcomps
movb
xchg
push
jecxz
push
mov
mov
movsb
sarl
pushf
fisttps
push
ret
xlat
insl
add
adc
out
xchg
xor
repz
pop
jno
cmpsl
repz
cmp
xor
cs
bound
lods
int3
mov
xchg
nop
or
jno
sub
fisttps
stos
pop
mov
push
arpl
inc
loope
jb
nop
cmp
push
dec
xchg
and
data16
aaa
pop
and
int3
movsb
mov
cmp
mov
je
xor
addl
cmp
filds
adcl
lds
lods
xor
sti
jmp
pop
jmp
pop
mov
dec
inc
sbb
cmp
stc
dec
mov
cmpsl
cmp
notl
into
mov
call
not
push
divl
cwtl
mov
sti
xchg
outsl
lock
mov
test
and
pusha
xor
xchg
js
fdivl
mov
xlat
xor
cwtl
mov
stos
icebp
in
int
into
int
mov
adc
fidivrs
xchg
cmp
pop
and
test
push
fstps
imul
mov
jnp
pop
clc
int
call
xchg
mov
and
cltd
popa
aad
cmpsb
adc
test
push
sahf
jmp
mov
icebp
push
std
mov
test
xchg
xlat
adc
cmp
inc
ret
fldenv
mov
jbe
nop
not
or
xor
mov
shlb
cmp
ja
or
mov
cld
mov
mov
iret
aas
fadd
aas
jecxz
int3
es
mov
mov
movsl
arpl
sbb
add
in
test
gs
jae
sar
push
push
jmp
xor
xor
insb
xchg
scas
mov
pop
adc
icebp
xchg
popa
and
dec
in
pusha
push
fimuls
sbb
repz
xchg
int3
push
ucomiss
leave
das
imul
aad
rcr
out
mov
jns
iret
sub
movsb
xor
ret
jae
xorb
aad
jge
insl
mov
fs
adc
cmp
adc
out
mov
or
mov
mov
outsb
or
cmc
inc
scas
mov
insb
or
cmpsb
ljmp
and
rorb
cmovns
mov
or
sbb
mov
into
out
pcmpeqb
scas
fs
jp
jmp
out
cltd
pop
jmp
lock
add
pop
cmp
hlt
mov
pop
mov
sbb
xor
lea
shl
mov
add
xor
adc
add
jmp
cmp
gs
adc
sbb
and
fwait
xchg
fisttps
mov
push
fs
add
adc
pushf
xchg
push
push
adc
in
pop
imul
cmp
test
cmp
xor
pop
mov
mov
cmp
movsl
or
insb
and
in
std
add
dec
jbe
mov
jae
xchg
sahf
in
push
addr16
add
mov
jbe
rcl
loope
cmp
ja
sbb
repz
das
mov
dec
jno
mov
push
sbbb
mov
test
rorb
xor
mov
add
cli
test
push
mov
lods
jae
dec
out
out
sbb
gs
pop
adc
js
inc
cwtl
std
stc
and
pop
xchg
mov
arpl
rolb
ret
sbb
dec
mov
and
loope
add
stos
sub
sbb
pop
jb
sub
divb
imul
lcall
xchg
ffreep
mov
push
das
push
add
pop
push
mov
xor
call
xor
bnd
or
cmp
mov
xchg
int
add
filds
add
mov
mov
jp
fstpl
cmp
lods
jnp
or
and
push
inc
jp
lods
dec
mov
roll
mov
push
test
xchg
fdivr
outsl
mov
xor
out
mov
jp
push
fdiv
daa
push
pop
fs
es
std
testb
pop
data16
pop
xchg
mov
aaa
lds
mov
mov
add
sub
adc
push
xchg
xchg
fldenv
insl
push
js
mov
pop
xchg
sub
rcr
xchg
into
icebp
mov
leave
and
xchg
cmpsb
adc
push
push
xlat
fcoml
lea
xchg
in
mov
jle
stos
lods
loop
aaa
and
repnz
and
shlb
mov
mulb
xor
movsl
sahf
sbb
stos
fistpll
mov
and
ret
or
mov
mov
test
inc
mov
nop
jae
push
xor
pop
dec
je
push
xor
xor
mov
and
bound
cmp
or
lret
adc
idivl
sti
shll
mov
ficoms
pop
or
rclb
fsts
xchg
loop
xlat
in
cmp
mov
fbld
test
clc
aaa
sbb
pop
pop
pop
ret
adc
jmp
dec
sub
int
push
in
push
cmpsl
mov
sbb
lcall
mov
mov
jecxz
inc
fdivs
dec
mov
jo
insl
mov
push
mov
add
xchg
ret
xchg
sub
lahf
jge
js
insl
jge
stos
into
mov
or
into
inc
inc
shld
adc
mov
jae
xchg
cmpsl
inc
dec
push
out
pop
shrl
test
cmp
xchg
add
ja
adc
jo
adcl
mov
filds
or
xchg
xor
sub
in
inc
xor
je
lods
pop
popf
lods
in
gs
jl
mov
imul
scas
push
lock
add
lock
mov
ror
addr16
sub
jg
mov
push
add
outsb
adc
int
out
pusha
enter
testb
add
xlat
sarl
mov
jg
jl
lret
out
jbe
dec
sub
movsl
enter
fwait
pushf
stos
jg
mov
add
icebp
mov
sbb
jmp
cmpsl
fsub
xor
out
scas
imul
out
pop
into
iret
shll
fadds
pop
mov
imul
add
cmp
dec
cmp
das
pop
cmpsl
in
jp
jbe
nop
dec
add
pop
sub
and
cmpsb
jo
shll
ljmp
les
jo
sbb
adc
pushf
xchg
jg
push
and
js
arpl
dec
inc
das
jge
fcmove
aas
dec
subb
pop
adc
scas
aad
mov
push
out
arpl
pop
fidivs
xchg
xchg
dec
mov
xchg
int3
and
cs
mov
aad
insb
test
repz
pop
jnp
mov
xor
sti
adc
mov
push
or
mov
lret
inc
sbb
movsl
mov
cmp
nop
jnp
mov
loop
push
lret
es
popa
adc
and
mov
stos
mov
xor
mov
shlb
clc
mov
push
mov
adcl
sub
cmc
jg
pushf
adc
mov
addr16
and
push
fstps
dec
add
test
hlt
push
bound
int
jno
sub
les
shl
jne
lods
fdiv
sub
test
imul
shll
dec
std
adc
or
mov
cltd
js
pop
cmpsl
ja
or
add
push
dec
lret
fwait
shrb
shll
fisubs
xor
adc
mov
jle
dec
mov
mov
jns
dec
outsl
inc
idivb
xchg
hlt
cwtl
xchg
stos
jmp
fsts
mov
stos
movsl
push
es
xlat
shrl
sub
and
ret
push
xlat
fwait
mov
add
adc
das
dec
jl
sub
insl
dec
inc
add
pop
pop
rcr
rcl
ds
ret
fdivrs
cmp
xchg
dec
in
inc
pop
pushf
int
lock
xchg
in
test
int
fsubl
rcll
mov
popa
repnz
pop
mov
pop
mov
mov
fistpl
sbb
pop
adc
sbb
les
xchg
addr16
or
out
scas
ret
in
loop
int3
push
push
push
fdivp
xor
jns
cmpsl
je
mov
test
dec
fidivl
lcall
cmp
nop
negb
sub
insb
pop
test
inc
fmulp
pop
sub
or
adc
jle
fcompl
add
ficoml
cltd
leave
jmp
inc
pop
imul
jno
xor
iret
mov
sbb
sbb
clc
repnz
adc
daa
or
scas
movb
test
daa
sti
xor
into
jno
push
out
loopne
push
xchg
imul
jno
dec
sub
pop
jno
jp
xor
mov
fs
imul
push
test
inc
sbb
xchg
push
sub
ja
push
out
push
xor
pusha
rolb
cmp
xchg
xor
mov
adc
ret
adc
cmp
push
repz
fwait
pop
in
sbb
add
mov
xor
jns
leave
mov
xchg
jp
inc
mov
subb
sbb
icebp
test
mov
inc
mov
dec
mov
and
out
mov
jbe
and
clc
sub
jge
mov
or
mov
and
ds
add
xchg
test
outsl
xor
sbb
and
popa
test
das
jl
bound
mov
in
js
imulb
negl
ret
test
mov
mov
cmpsl
cmp
imul
xchg
cwtl
lret
fdivl
pop
mov
pusha
fstpl
jle
ja
dec
hlt
add
je,pt
push
lcall
test
and
leave
inc
pop
outsl
loope
shll
addb
in
lret
lds
add
jmp
aad
pop
push
pop
push
adc
mov
fists
test
jo
adc
cmp
mov
outsl
fnsave
lret
xor
jbe
jle
push
aaa
pop
push
scas
lds
jp
fldcw
sub
push
xchg
sub
cli
dec
sub
or
jmp
mov
dec
and
push
jg
pop
sahf
jns
jmp
lret
inc
mov
lods
sbb
in
or
jg
push
and
adc
add
sbb
push
push
xor
sahf
or
mov
or
rorb
jmp
add
jo
adc
jo
xchg
push
jae
cmp
fisttpll
ljmp
test
pusha
mov
dec
das
hlt
mov
andl
decl
and
sbb
int
xor
mov
inc
mov
mov
sub
jp
insb
adc
std
int3
aaa
xor
or
je
ljmp
test
push
out
push
push
hlt
xchg
cmp
push
das
pop
push
repz
jge
ljmp
adcb
xlat
adc
je
mov
fstps
int3
mov
jb
add
in
das
std
add
xor
test
sub
push
loopne
adc
mov
insb
mov
sub
and
jae
mov
out
int3
sub
sbb
lcall
mov
cld
cld
sub
jmp
sbbb
xchg
data16
xchg
add
push
sbb
push
mov
std
cs
dec
xor
jle
adc
pop
cld
or
popa
pop
cmpsl
loope
fdivrs
aas
test
mov
xchg
mov
dec
mov
inc
mov
or
negb
fcomp
arpl
es
repnz
negl
loope
cwtl
lock
dec
push
mov
pop
add
pop
enter
adc
sub
pop
pop
popa
sbb
imul
xor
ds
xchg
into
rolb
push
flds
pop
sbb
pop
jl
add
and
int3
mov
jg
xor
popa
repnz
test
stos
xor
in
fsubrs
nop
lcall
sbb
rcrb
add
rcll
aad
popf
popl
and
jb
and
push
add
pop
in
punpcklbw
or
movsl
lds
icebp
push
push
mov
out
jmp
mov
add
add
lds
test
pop
int
mov
xlat
fisubl
fcompl
dec
ja
jmp
sahf
fwait
iret
sbb
nop
jp
xor
out
call
insb
mov
popf
push
gs
arpl
call
adc
mov
roll
sti
mov
cld
mov
mov
lret
cltd
sub
sub
in
les
jne
movsl
dec
sahf
das
push
sti
jno
bound
jle
insb
pop
jb
into
pop
fcompl
pop
fnstsw
hlt
lret
test
sub
mov
push
loope
push
lahf
mov
fdivl
das
stos
rorl
popf
xor
sbb
pop
popa
cmp
test
in
insb
inc
pop
fwait
shlb
leave
outsl
xchg
lcall
jmp
inc
jae
sub
bound
xor
ljmp
in
test
push
mov
sbb
repz
addr16
sbb
sahf
arpl
mov
test
scas
jo
scas
dec
inc
fldcw
and
mov
test
repnz
in
cmpsb
clc
fcmovnu
add
shl
jne
fdivs
cmp
sbb
jecxz
sub
test
outsl
lahf
cmpsb
mov
ret
add
sbb
mov
repnz
xchg
lret
insb
ss
stos
lock
insl
pop
mov
mov
sbb
cmpb
xchg
out
out
jbe
dec
sbb
lock
jl
dec
push
adc
push
pavgb
mov
adcb
int
pop
or
test
cmpsl
test
sahf
test
or
mov
aaa
inc
into
cmp
punpckhdq
mov
or
jl
push
cmp
mov
test
xor
out
sbb
inc
outsl
adcb
in
aaa
push
ret
or
imul
sbb
xchg
adc
jnp
popa
out
movl
inc
out
mov
shl
xor
mov
repz
pushf
inc
sbb
mov
inc
scas
call
stos
cltd
loop
test
push
and
hlt
inc
mov
movaps
jge
dec
lds
pop
mov
lea
nop
pushf
aas
mov
mov
sub
rorl
pop
dec
add
sar
dec
pop
add
rorb
jo
mov
fidivrs
loopne
out
inc
fdivs
and
xor
pop
addr16
add
push
call
pushf
push
lods
aaa
and
stc
mov
shl
cmp
imul
adc
xchg
outsl
sbb
cmc
mov
je
adc
into
repz
mov
or
sbb
jae
fcmovnbe
test
fwait
ret
xor
mov
sub
and
leave
rorb
cld
sub
imul
int
xchg
and
mov
xlat
xchg
jp
jbe
out
or
add
adc
mov
mov
push
inc
fnstenv
adc
adc
fdivrs
xchg
cmp
mov
jge
bound
or
arpl
push
repz
pop
mov
push
fstl
enter
test
lret
insl
paddb
daa
xchg
mov
out
or
shl
push
ret
xchg
sbb
and
add
sbb
frstor
dec
push
and
jg
push
xor
mov
xor
xlat
sti
aam
jle
bound
dec
mov
hlt
pop
arpl
push
sarl
fwait
mov
jge
outsb
xchg
sub
inc
mov
mov
xlat
pop
sbb
and
rcl
mov
das
add
jp
je
mov
inc
cmc
data16
pop
cmp
push
cs
ret
pop
dec
pop
std
in
push
sbb
lret
sbb
mov
das
jnp
adc
loopne
add
inc
out
add
pop
pop
mov
or
scas
mov
mov
xchg
cmp
aaa
jmp
inc
or
ljmp
mov
jge
or
cmp
cmc
outsb
cmp
mov
lret
fadds
xchg
add
mov
xor
xchg
mov
mov
mov
sar
mov
out
xor
sti
lods
fnstsw
loopne
sub
mov
dec
and
loopne
mov
dec
dec
ja
pop
stc
add
roll
push
pop
test
xchg
sub
sub
loopne
cmp
xor
imul
sbbl
pusha
push
cmpsb
cli
rorb
fs
push
loopne
frstor
subb
sbbb
sub
mov
sbb
mov
push
pop
sti
jno
fisubs
or
cmp
imul
sbb
and
pop
cwtl
roll
cwtl
stos
xor
pushf
add
lock
fs
inc
cmp
mov
push
inc
push
jg
fstpl
sahf
ret
jp
jnp
rcl
adc
pop
or
inc
or
rorl
clc
and
movsb
cltd
sbb
lock
outsb
xchg
mov
mov
adc
push
add
pop
loop
sub
xchg
stos
je
divl
or
sbb
cmp
inc
and
push
imul
adc
mov
cld
cmp
repnz
data16
jmp
rcrb
adc
add
std
insb
movsb
dec
xchg
jae
cmc
cld
outsl
mov
popa
and
cmp
imulb
cli
adc
in
mov
les
cmpsl
pop
adc
fnstsw
rorb
push
test
cmp
inc
repnz
add
insb
addr16
lret
sarl
adc
inc
in
sbb
imul
pop
push
bt
lods
cli
stos
add
movsl
not
repz
in
push
xchg
and
add
insl
sbb
sbb
aaa
push
scas
or
pop
push
lea
add
sub
cmp
lods
jno
inc
fldl
je
jp
jmp
mov
fistpll
shll
imul
adc
pop
push
xchg
xor
mov
lahf
mov
adc
jbe
jns
and
fdivp
jecxz
cmp
inc
push
and
sub
enter
iret
jns
xchg
sbb
sbb
and
or
pop
fwait
lds
fisttpl
push
fisttps
jbe
dec
jns
into
daa
dec
movsl
subb
sbb
pushl
out
in
xor
mov
dec
xlat
std
add
mov
and
cmpsl
pmaddwd
xchg
and
push
push
stc
jae
sbb
mov
subl
sub
inc
jne
jns
stos
ljmp
popa
cmp
in
lea
bound
out
adc
push
or
fstpl
fbld
mov
pop
push
and
hlt
add
or
xchg
mov
cmp
mov
addl
xchg
sub
cmp
out
push
sub
int3
int
in
mov
xor
jmp
mov
lods
aad
sub
xchg
loopne
mov
lea
rcr
aam
stos
jge
in
daa
cld
test
cmpsl
adc
pop
in
xor
outsb
xor
mov
inc
and
sbb
xchg
int3
pop
aas
and
xor
dec
gs
mov
mov
les
fidivrs
fildll
pop
dec
push
bound
addr16
jecxz
inc
cmp
jno
mov
add
add
dec
push
mov
pop
pop
aad
cmc
sbb
pop
mov
jno
mov
cltd
ret
addr16
daa
cltd
out
xchg
outsb
push
push
and
pop
outsl
or
daa
xor
mov
andb
int3
mov
orl
neg
imul
mov
ss
loope
test
dec
lahf
or
mov
jle
dec
dec
test
push
pop
xchg
ret
fdiv
idivl
pop
mov
mov
fs
fnstenv
cmc
lock
mov
imul
stos
incl
inc
clc
movsb
push
push
sbb
or
jge
and
je
subl
sahf
inc
add
xchg
adc
dec
cmc
call
addr16
or
sub
xor
xor
out
cmp
xor
and
adcl
cmp
rclb
fs
sub
xchg
pop
sub
or
mov
xchg
mov
lret
jno
xchg
incb
outsl
jl
adc
stos
and
jno
insb
jmp
sysenter
fidivrs
cmp
sbb
mov
push
sahf
je
in
hlt
mov
push
dec
push
ja
fisttps
dec
addr16
imul
pop
pop
lcall
data16
mov
jae
or
adc
lods
sbb
icebp
lods
bound
mov
cli
cmp
pop
xchg
mov
faddl
sbb
sti
test
gs
mov
mov
setg
jge
push
ja
push
mov
inc
or
mov
imul
pop
push
andb
shlb
mov
mov
sub
or
xor
push
iret
js
out
in
jb
sub
xchg
add
scas
adc
xor
mov
popl
xor
push
cmpsb
push
cmp
or
adc
std
outsl
cs
cmpsb
pop
aam
lds
mov
mov
lret
popf
scas
cmp
jmp
pop
popa
lock
lods
jp
outsl
pop
popf
inc
stc
stc
mov
lock
inc
jecxz
cmpsb
repnz
shl
insb
sbb
fisubs
movsb
adc
or
mov
stos
cmp
lods
scas
subb
and
idivl
add
and
icebp
dec
inc
xchg
push
push
jge
push
or
lcall
xchg
inc
mov
pop
inc
or
or
or
inc
cmp
daa
les
push
mov
insb
dec
adc
add
pusha
mov
int3
jecxz
jns
lcall
inc
or
lods
mov
lods
mov
jb
mov
pop
sub
inc
add
mov
dec
mov
rcl
in
push
lcall
dec
gs
xchg
jge
scas
popa
lret
repz
or
adc
mov
jo
std
fisttpll
and
loope
sahf
cmpsb
roll
aad
pcmpeqw
testb
pop
lahf
xor
sub
jae
sti
mov
faddp
cmp
dec
shlb
hlt
cltd
fsubrl
sbb
mov
dec
data16
jp
mov
jbe
cltd
pusha
dec
or
nop
pop
pop
movsl
sahf
into
lahf
pop
jo
mov
jle
mov
in
pop
lods
pop
mov
inc
and
mov
sub
and
ret
aaa
adc
sub
in
cmp
jle
leave
insl
ror
xchg
or
or
popa
mov
cmc
ljmp
dec
roll
fs
pop
in
stos
popa
inc
push
in
pushf
adcl
iret
push
in
pop
inc
test
movsl
rcl
pop
xchg
sub
ss
fists
mov
cld
jecxz
pop
shl
call
fstps
aam
fsubrl
sub
fdivrl
cmpsb
mov
add
or
mov
push
and
divl
xchg
lcall
aaa
mov
jge
in
and
mov
cwtl
and
add
or
push
jp
jb
inc
jne
test
mov
and
inc
frstor
cmpb
or
sbb
mov
in
cmp
mov
ret
insb
xor
repnz
pop
clc
or
aad
imul
sarl
add
adcl
cs
dec
scas
push
nop
inc
std
in
aas
xchg
ljmp
add
push
pushf
enter
push
adc
mov
jae
inc
xchg
jnp
mov
pop
adcl
sub
push
add
and
pop
aaa
and
aas
mov
adc
jecxz
push
js
xchg
xchg
daa
pop
into
outsb
sub
mov
sbb
push
loope
into
mov
xchg
sbb
sbb
or
dec
mov
rorl
dec
mov
into
fwait
into
pop
in
dec
xor
sbb
cltd
mov
xchg
js
fstpl
add
ficoml
or
sbb
mov
push
push
fistpll
lret
pop
adc
pop
ljmp
fcoms
pop
push
insb
ja
adcb
push
mov
jmp
arpl
inc
mov
sub
je
gs
mov
dec
out
jecxz
sahf
xor
fcoml
mov
jno
je
pop
dec
add
insl
test
loopne
andl
rcll
push
andl
icebp
push
clc
test
inc
pop
ss
nop
out
popa
stos
rcl
push
mov
mov
lret
add
jbe
mov
stos
js
cmp
push
pop
mov
cmpsb
in
mov
cmp
sarl
xchg
mov
nop
ljmp
sub
lea
std
mov
fnsave
push
add
xchg
or
jnp
shll
fimuls
or
sar
lods
jae
int3
and
hlt
dec
sti
pop
add
jne
mov
xchg
jns
dec
add
pop
out
imul
mov
pop
jle
bound
mov
adc
popf
mov
adc
movsl
icebp
cmpsl
aad
push
in
inc
rcrb
push
xchg
xchg
xchg
push
popa
cmp
ss
insl
or
push
mov
adc
loopne
mov
popa
jo
sbb
adc
ftst
and
push
pop
gs
adc
adc
in
lods
pop
dec
sbb
fsubs
in
pushf
inc
inc
lret
sub
int
sub
fs
andb
push
ficoml
out
mov
stc
out
xchg
xchg
sbb
mov
test
inc
sub
cmp
scas
mov
ja
scas
sbb
dec
mov
mov
adc
into
sbb
mov
je
push
pop
pusha
add
aam
lret
and
mov
dec
add
pop
and
or
pop
jbe
mov
test
out
xchg
dec
ss
sub
push
sub
subl
push
sub
mov
movsb
stos
xchg
loopne
mov
ret
add
cli
mov
mov
fwait
rol
push
mov
inc
inc
rcll
dec
shrb
dec
pusha
sbb
pusha
enter
lods
push
daa
adc
sarb
dec
test
xor
push
xchg
test
inc
cmp
stos
cmp
and
mov
mov
and
shrb
inc
mull
fbstp
ss
jmp
ret
push
push
dec
clc
stos
dec
flds
xor
jne
dec
mov
ret
xor
cmpsb
sub
sub
js
cld
dec
jns
or
xlat
pushf
dec
push
or
xchg
pop
xadd
int
push
clc
dec
jmp
test
or
jmp
mov
mov
andl
outsl
sbb
pop
mov
repz
iret
mov
xchg
movsb
ret
scas
into
or
lret
popl
xchg
fiaddl
lahf
shrl
jae
sbb
bound
fst
test
pop
lock
mov
inc
rcll
sub
testb
or
pop
mov
sub
mov
imull
and
inc
inc
mov
in
mov
bound
adc
aas
out
daa
push
in
lret
aas
mov
push
testl
ds
sbb
fdivrs
jge
sti
lock
and
sub
in
xor
stc
mov
lahf
xor
bound
inc
xchg
xchg
or
scas
int3
cmp
pushf
mov
clc
andb
out
mov
out
ja
scas
jmp
mov
add
daa
pop
shll
add
ss
fnstsw
jp
push
sub
cmpsl
leave
fstpl
lock
cwtl
cltd
imull
scas
shr
sbb
hlt
ficomps
jl
cmpsb
and
lret
mov
cmp
mov
fcom
movsb
out
test
push
es
mov
mov
and
cltd
cmp
rolb
adc
cmc
pop
push
xchg
roll
mov
clc
lock
outsb
mov
dec
outsb
pushf
stc
sbb
idivb
aad
out
pop
push
sbb
repnz
imul
sbb
adc
sub
mull
jo
pop
subb
aad
repz
mov
cli
adc
and
movsl
fwait
cmp
mov
and
or
and
or
movsl
fisubs
mov
fisttpll
xor
test
ja
push
rorl
dec
mov
loop
out
or
jecxz
stos
pop
or
mov
lret
aad
jnp
inc
loopne
int
in
test
fimull
movsl
inc
inc
xchg
cmp
jb
in
loopne
movsl
mov
and
cmpb
xor
or
lock
cmp
dec
cmp
or
mov
cli
fwait
rorl
push
cmp
lds
mov
mov
dec
inc
movsl
inc
add
xor
adc
dec
iret
js
xchg
loope
add
aad
or
cmpsl
rcrb
inc
cmp
imul
inc
push
mov
inc
inc
adc
std
dec
adc
es
mov
lock
mov
fwait
jle
cmp
jge
xor
pop
push
lods
fldenv
mov
ss
sbb
push
xchg
mov
loopne
test
sub
popa
push
inc
mov
sub
mov
les
jl
hlt
xchg
adc
sub
xchg
cwtl
mov
int3
pop
and
cmp
fadds
xlat
iret
mov
lret
mov
out
cld
int3
rorl
shrb
div
inc
test
fistpll
in
and
pop
add
xor
in
outsl
test
ljmp
lcall
and
sarl
imul
ja
mov
sub
stos
cld
iret
outsl
add
dec
mov
add
xor
adc
jp
ret
lods
popf
or
mov
cmp
in
dec
pop
adc
popa
lret
clc
les
les
cmpl
mov
mov
into
popa
hlt
pop
mov
lods
and
clc
iret
xchg
das
stos
pop
sbb
ljmp
xchg
fstpl
repnz
out
jmp
xchg
cmp
jne
sarb
outsb
mov
lods
add
add
adc
jl
test
mov
xchg
fcmovu
add
in
mov
mov
lcall
test
push
xor
ss
sahf
push
ja
push
sbb
js
daa
dec
push
je
push
in
add
lret
adc
inc
das
aad
outsl
sbb
xor
das
jae
mov
rcl
adc
loope
leave
mov
mov
ret
in
lcall
lret
aaa
fists
pusha
add
cld
cltd
pop
jnp
mov
pop
pop
add
lods
push
lret
and
and
dec
fidivrs
stc
mov
sbb
into
inc
lock
lret
push
xor
xorb
push
push
lret
mov
lahf
cwtl
jge
rorb
mov
sbb
arpl
push
outsb
adc
in
shr
leave
xor
pop
add
add
pop
lods
iret
out
pop
inc
jmp
ja
adc
sbb
mov
jmp
inc
decb
xchg
out
out
and
cmc
je
or
and
and
dec
cmp
inc
sbbl
mov
movsb
dec
movsl
out
mov
stc
cmpl
xchg
lcall
mov
mov
adc
stos
fcom
scas
fwait
insl
gs
cwtl
loop
or
fldt
movsl
das
iret
dec
jbe
pop
notl
and
das
gs
xchg
pop
add
fildll
mov
xchg
imul
mov
iret
mov
idiv
jge
xchg
out
xchg
adc
xchg
out
std
sarl
pushw
and
ss
add
leave
and
fdivrs
outsl
leave
cmp
and
mov
xchg
adc
ss
test
sub
push
xor
cs
movsb
fbld
xor
and
out
xor
jb
pushf
adc
pusha
inc
push
pop
lock
xor
cmp
inc
imul
sarb
push
cmp
decl
insl
adc
lock
xlat
mov
xchg
mov
f2xm1
and
cmp
xor
jno
jae
sti
imul
mov
rcrl
jns
rcl
pusha
push
add
ret
jl
xchg
lods
jb
jp
fmull
adc
stos
cltd
push
xor
jae
lahf
data16
pop
dec
pop
cmp
sub
lock
enter
adc
ss
lret
inc
inc
fs
mov
dec
push
out
ja
pop
cmc
jnp
jl
and
sbb
sub
clc
ja
inc
add
jnp
mov
pop
lds
jbe
inc
mov
jno
pop
sbb
imul
xor
iret
andb
aam
ss
aas
mov
stc
inc
idivl
mov
mul
mov
mov
sbb
jg
xorl
lods
xor
xchg
ret
loop
dec
jle
stos
add
stos
xchg
and
movsb
fnclex
repz
les
xor
rolb
inc
inc
test
out
and
sti
cmp
xchg
sub
aas
ret
push
xchg
rolb
sbb
cmp
xchg
ret
and
aam
rorb
fidivrl
movsl
jmp
add
ret
jp
pop
out
xchg
aas
iret
inc
fsubrl
adc
insb
repnz
loope
sbb
or
xchg
jecxz
out
xor
jecxz
adc
loopne
loop
sub
in
mov
and
add
rcr
scas
test
mov
mov
cmp
xchg
lea
inc
fwait
ds
das
cmp
lcall
xor
js
stos
jb
cmp
mov
dec
adc
inc
mov
dec
out
inc
ret
and
mov
loop
popa
push
mov
ds
pop
mov
fcomps
psrld
rcrb
push
pop
xchg
xor
faddl
push
add
xchg
std
mov
dec
sub
data16
insb
ja
call
std
nop
and
lret
and
loop
leave
pop
mov
xchg
and
sbb
pop
andl
inc
rolb
sbbb
rorl
in
mov
mov
sub
jns
or
pop
jno
daa
cwtl
aas
fsubl
mov
mov
scas
jp
or
int3
imulb
mov
sub
imul
pop
or
add
loop
xor
leave
out
cmp
inc
mov
jo
mov
mov
pusha
mov
arpl
rclb
or
cmp
pushl
je
iret
dec
xchg
ss
mov
adc
loope
inc
hlt
cmp
pop
jo
in
push
jp
adc
push
and
call
ja
insl
sub
mov
movsl
push
sbb
jg
int3
es
sahf
test
int3
ror
rcrb
pop
stos
jns
adc
fdivr
mov
sarl
pushf
mov
test
sar
icebp
inc
add
pop
jne
leave
mov
inc
sub
fwait
sub
sti
xor
shlb
inc
and
pusha
negl
and
call
xor
and
loope
notl
add
sub
insb
adc
pop
xchg
mov
xchg
sbb
repz
cmp
loope
mov
enter
fwait
jno
push
lock
daa
xor
jp
shlb
jb
cmp
es
inc
mov
lret
mov
ds
and
adc
push
shll
mov
out
pop
dec
add
movsb
inc
addl
jno
insl
mov
in
jnp
xchg
xchg
mov
push
aad
cmp
enter
inc
leave
fsubr
fdiv
jb
xchg
aad
add
dec
cmp
or
mov
aad
mov
int3
cld
ss
inc
loope
inc
mov
dec
ror
mov
sbb
movsb
jp
dec
push
icebp
jecxz
dec
lds
dec
sub
das
add
push
mov
scas
mov
lods
jns
daa
adc
int
lock
stos
sar
mov
loop
adc
pop
xchg
cmpb
cli
xlat
jnp
adc
pushf
jno
insb
add
pusha
pop
and
dec
mov
jno
jbe
arpl
addr16
xchg
xchg
je
cmp
psubw
sahf
popa
sbb
mul
cmc
daa
push
es
in
pop
insb
xlat
lret
notb
sub
pop
mov
aaa
push
fs
push
loope
or
sub
mov
jnp
aas
pusha
sub
es
xor
dec
jae
and
fxch
int
ret
mov
fisubrl
lcall
sbb
jnp
cmp
lcall
dec
cmp
xor
jge
daa
rcrl
popf
xchg
icebp
lahf
fildll
xlat
jne
cs
frstor
sub
adc
rclb
ret
and
dec
add
cli
sub
jl
jo
pop
bound
scas
sbb
cmp
out
and
and
clc
bound
adc
fistpll
stc
out
sbb
mov
shll
dec
mov
mov
and
mov
cmp
sbb
and
movsb
loope
mov
sbb
cli
cmp
popa
mov
stos
adc
xchg
sub
aas
pop
mov
ret
or
mov
add
xchg
push
mov
test
xchg
sub
jno
enter
ficoml
jp
lret
fsubs
pop
xchg
ss
fmull
sub
sub
into
jp
out
and
xchg
lods
dec
jmp
divb
ret
jmp
insl
imul
cwtl
or
lock
push
movsl
stos
cmpsb
mull
rorb
lds
dec
sbb
pushf
dec
je
sbb
xchg
mov
cmp
inc
cwtl
icebp
mov
aaa
mov
xchg
mov
into
loope
xor
cmp
inc
mov
xor
mov
std
add
or
xchg
add
test
mov
jbe
clc
mov
into
pop
cmc
roll
mov
divl
adc
mov
mov
clc
sub
push
pop
scas
jns
aad
dec
mov
fsubrp
and
test
pop
xchg
int
xorl
fildll
cmp
dec
dec
addr16
inc
adc
mov
das
xchg
lods
mov
and
sbb
lahf
mov
push
lods
insl
inc
cli
fstp
cmp
pop
ret
adc
or
fwait
jns
js
bound
sbb
pop
and
pop
bound
ret
call
lahf
jne
dec
push
lds
cmpsb
fidivrl
push
fdivs
pop
adc
js
imul
pusha
ret
daa
clc
imul
out
mov
movsb
push
xor
fstpt
pop
adc
aaa
cmp
cltd
mov
and
mov
or
int3
jge
gs
jno
jo
pop
adc
sbb
enter
mov
ljmp
pushf
faddp
jl
lods
mov
or
jp
or
mov
add
ss
faddl
adc
inc
pop
incb
pusha
or
jp
nop
daa
pop
inc
pop
cmp
es
pop
movsb
ss
stos
adc
push
js
cmp
pop
outsb
test
cmp
lea
imul
cmp
dec
lret
pop
lret
sub
and
lret
test
in
out
cmc
and
jmp
int3
xchg
push
gs
test
cmp
lret
pop
repz
add
in
pop
inc
jae
bswap
das
mov
or
xchg
int3
mov
in
xchg
dec
mov
dec
mov
rcl
insl
sbb
pop
loopne
addr16
or
bound
xlat
xor
cwtl
mov
sbbb
or
aad
mov
mov
scas
pop
outsl
jmp
cmp
mov
jg
rolb
movsl
fwait
cmp
inc
out
dec
cmc
insb
xchg
or
push
sbb
pop
mov
popa
inc
add
int
sub
cmp
rcrb
cltd
mov
popa
cmp
sub
mov
ds
in
add
jle
pop
mov
ret
icebp
fldl
sbb
jnp
movsb
dec
mov
das
repnz
scas
sbb
xchg
jmp
jno
bound
jg
sahf
das
sti
mov
cmc
adc
enter
int3
pop
sahf
sbb
cli
xchg
int
bnd
mov
xor
lods
cmp
or
xchg
insl
and
fisttpl
dec
cmp
test
movsl
clc
xlat
test
cmp
pop
ret
add
cli
ds
mov
inc
rolb
or
out
xor
pop
sub
xor
or
mov
aam
mov
iret
pop
and
int3
or
stc
jg
testb
cmpsb
mov
lret
mov
mov
xchg
iret
scas
and
mov
pop
mov
sbbl
xchg
in
pop
xchg
xor
dec
mov
leave
dec
adc
gs
mov
and
sbb
cltd
std
test
in
sbb
mov
dec
sub
stc
outsl
adc
arpl
mov
in
sbb
outsb
pop
das
or
xor
dec
fidivrl
mov
orl
and
arpl
xchg
test
rolb
adc
je
xchg
test
lahf
sbb
or
cltd
in
pushf
mov
adc
sub
or
insl
scas
popf
les
mov
mov
add
insb
mov
fwait
sbb
insl
rcll
int
rclb
inc
mov
cmpsb
sbb
sbb
xchg
xchg
sbb
sahf
pop
adcb
repz
clc
sbb
fistl
jb
in
dec
aaa
xchg
mov
sti
push
cli
xchg
jg
mov
add
lock
sub
test
mov
insl
movsb
lods
inc
inc
imul
rorl
fidivrl
and
adc
fisubl
cmp
sub
hlt
mov
ret
fnstsw
pop
lods
fdivrl
or
call
push
jl
xor
mov
sbb
cs
mov
fsubl
gs
scas
mov
push
mov
mov
daa
pop
adc
and
pop
sub
into
rsqrtps
or
mov
inc
fwait
lret
fstpl
fmuls
fninit
inc
xchg
adc
out
cs
lahf
sbb
iret
aam
and
mov
cld
test
mov
inc
lcall
negb
shll
jmp
inc
sub
xor
sub
sbb
in
dec
insl
cltd
clc
repnz
sbb
stos
inc
jg
mov
das
int3
rol
jge
std
mov
cmpsl
mov
dec
orb
xor
xchg
out
aad
sti
xor
in
test
mov
ja
xchg
popf
push
push
jo
ret
inc
sti
inc
fsubrp
fdivs
cmp
sbb
jno
ret
jo
dec
pop
xor
mov
cmp
das
mov
mov
sub
jmp
into
inc
mov
cmp
add
pop
cld
and
jmp
adc
sbb
stc
ja
adc
int
inc
cmpb
lods
mov
sbb
icebp
shl
mov
lock
loopne
sub
jecxz
sti
rorl
jns
icebp
inc
lods
pop
push
inc
xchg
test
push
jno
add
mov
xchg
jb
ficoml
push
and
sub
loope
aaa
lds
sbb
jae
rorb
push
inc
ljmp
bound
or
xchg
inc
das
add
pushf
fildll
jmp
mov
cmpsb
fwait
jns
push
in
lret
push
data16
pop
push
lds
sbb
fimuls
sarl
std
cmp
dec
mov
into
movsb
vpmacsdqh
add
sub
xor
push
pop
jae
ljmp
sbb
inc
xchg
adc
push
nop
iret
rcrl
jae,pt
add
adc
ja
cmp
xchg
sti
loop,pn
push
mov
in
dec
lods
sub
in
jl
pop
inc
ficompl
push
mov
ror
inc
dec
fwait
outsb
test
sbb
ss
mov
jmp
mov
call
inc
and
xchg
jo
xor
jp
dec
jns
xorb
icebp
xchg
mov
xor
mov
fidivl
repnz
cmpsb
call
pop
dec
ds
ret
inc
xor
iretw
les
into
call
and
je
fmulp
xchg
test
and
inc
shl
movsl
jle
scas
or
ds
clc
aad
inc
ja
jns
push
sub
es
ss
es
cmp
aam
pop
or
inc
mov
mov
xchg
mov
bound
nop
inc
pop
fdivrl
outsl
pusha
mov
out
fimuls
cmp
cmc
cli
addl
daa
inc
sub
push
sub
or
movsl
cs
js
outsb
sub
fwait
adc
ret
stos
shlb
sbb
andb
pop
sub
mov
adc
leave
sti
ds
imul
pop
and
fwait
dec
gs
hlt
test
daa
sarb
loop,pn
lret
push
jae
fwait
inc
imul
dec
fldt
stc
repnz
jecxz
mov
out
addr16
pusha
int3
push
mov
or
in
sahf
xchg
loop
fidivl
pop
pop
stos
and
push
push
mov
imull
xor
mov
jnp
mov
mov
pushf
mov
cmp
push
stos
add
pop
jne
cwtl
adcl
cmp
xor
inc
mov
repnz
sub
sub
std
cmp
pop
dec
push
js
add
inc
cmpsb
fsubrs
and
in
fstp
and
lock
dec
mov
fnstsw
add
nop
dec
jbe
jae
pop
mov
ss
xor
sub
dec
jo
mov
cli
in
nop
hlt
ret
sbb
pop
xlat
fsubs
jecxz
lret
aas
mov
into
addr16
into
aaa
cmp
sub
xchg
jg
clc
and
lds
pop
inc
divl
and
cs
stos
fs
cmc
or
leave
pop
or
mov
pop
and
mov
inc
test
cmpsl
jmp
imul
xchg
div
dec
push
add
xor
dec
addr16
add
faddp
ret
xchg
cld
cltd
aas
rcrl
xor
push
insb
inc
sbbl
cli
push
cmp
into
xor
hlt
push
sub
aam
mov
sbb
addr16
jp
xor
cmp
mov
aad
cmpsb
cmp
ja
pop
sub
adc
jg
sub
xchg
cli
mov
sbb
mov
xor
out
jo
sbb
dec
cmp
hlt
pushf
jle
and
fs
outsb
fwait
into
pop
xchg
aaa
pushf
shrl
out
pop
test
inc
dec
adc
mov
inc
jg
repz
shrl
popf
lock
ficompl
inc
sub
mov
clc
dec
mov
inc
ret
ficomps
mov
cmp
cmp
addr16
fstpl
ds
mov
mov
rclb
divb
jg
ficompl
inc
arpl
movsl
fcmovne
incl
xor
mov
icebp
push
repnz
or
inc
inc
fcoms
mov
jp
lods
xor
loop
inc
pop
daa
inc
scas
adc
cli
enter
dec
and
xchg
push
cli
enter
stos
cmp
repnz
fsubl
cmc
add
imul
int
shrb
jb
lret
xor
arpl
jl
xchg
jmp
add
int
inc
cmp
or
and
in
pop
fdivl
cli
fsubrs
or
adc
cld
nop
insl
ljmp
mov
pop
out
xor
out
or
mov
sbb
jae
mov
leave
pushf
or
or
and
push
imul
mov
pusha
loope
xchg
mov
int3
ret
pop
jne
mov
in
xchg
mov
jmp
out
dec
inc
fisttpll
call
mov
lret
int
into
cltd
shll
mov
sarl
out
add
sub
aaa
insl
or
neg
push
pop
sti
or
loop
push
mov
rcrl
mov
xchg
stc
add
in
and
push
decl
enter
test
mov
lods
pop
inc
inc
adc
imul
int3
int3
jl
fs
cmc
sbb
nop
mov
mov
and
and
bound
adc
mov
xchg
pushf
sbb
push
cmp
push
cmp
inc
push
movsb
insb
rclb
xor
mov
fsubrs
pusha
mov
mov
sarb
in
xchg
jecxz
sbb
inc
xchg
xchg
gs
jmp
aad
mov
ficompl
shrl
in
adc
push
outsl
imul
cmp
rcll
adc
pop
sbb
mov
flds
repnz
mulb
mov
gs
inc
cmp
jmp
arpl
mov
loopne
shlb
or
and
arpl
push
cmc
xchg
pop
cmp
cld
stc
sub
pop
push
nop
mov
in
xchg
es
or
mov
push
scas
insl
xchg
jns
sub
and
dec
sbbl
pop
push
aad
sbb
imul
mov
push
adc
mov
sbbb
repnz
stos
or
clts
mov
jle
adc
imul
add
ficompl
shlb
xchg
sbb
gs
cmp
icebp
int
fnstsw
cli
cwtl
pop
mov
add
push
fnstcw
in
aam
sub
es
das
in
rcll
mov
lcall
test
cmp
and
add
mov
xor
clc
xor
outsb
mov
push
movsl
sub
inc
mov
add
sub
fwait
cmc
push
or
fcomps
pop
pusha
scas
cmp
fdivrl
repnz
fldt
rolb
mov
xchg
mov
jns
mov
in
das
jnp
sbb
ret
xchg
fmul
dec
mov
arpl
lret
cmp
dec
fstps
fdivrs
mov
bound
aam
test
or
cmp
aam
fnstcw
out
cltd
sarl
pop
mov
out
jo
mov
or
pop
or
cli
add
fwait
push
mov
pop
lret
and
mov
aas
sbb
mov
add
clc
push
cmp
lret
add
shl
popw
jge
and
sub
data16
and
mov
sub
or
loope
cmp
xor
pop
movsl
mov
cmp
push
mov
cmpsb
pop
fwait
adcb
xchg
movsb
std
xor
mov
dec
push
dec
lods
mov
test
mov
lock
ror
daa
pop
sarb
dec
push
imul
mov
or
cwtl
mov
hlt
or
outsl
lea
test
sub
scas
ret
int3
push
fdivs
sbb
add
in
int3
cmp
push
push
out
fs
sub
cltd
bnd
aaa
inc
sbb
repnz
sti
das
int
mov
xchg
testl
mov
pop
nop
mov
neg
cmp
and
mov
cltd
icebp
xchg
jns
jo
cmp
outsb
mov
ljmp
mov
xor
sbb
adc
mov
sbb
dec
and
inc
imul
in
loope
sti
out
dec
jae
mov
enter
mov
insb
push
push
dec
leave
aam
outsl
xlat
stc
out
push
xchg
mov
cmp
sti
lahf
mov
rcrl
jbe
test
sbb
mov
jmp
xor
jle
rcrl
mov
movsb
mov
cmp
add
out
aas
rcr
shll
sbb
inc
nop
cmp
dec
or
pop
es
aam
push
icebp
lret
cmp
mov
sbbb
stos
ljmp
pop
xor
repnz
repz
mov
fstpl
stos
cmpsl
pop
hlt
sbb
es
aad
nop
jb
imul
sarl
out
cmp
lret
scas
push
xchg
push
std
dec
hlt
pop
mov
jg
aas
shrl
enter
xchg
or
mov
adc
notb
jge
jecxz
mov
pop
mov
loopne
adcl
mov
xchg
imul
push
mov
fadd
icebp
dec
cmp
dec
xorb
stos
pcmpeqd
iret
pop
pushf
int3
fcoms
xlat
dec
pop
orl
in
pop
jecxz
or
jle
inc
push
imul
xlat
enter
daa
test
int3
fwait
cmp
cli
mov
xor
rcrl
ljmp
iret
push
mov
add
test
outsl
popf
dec
iret
mov
movsl
xorb
ds
push
add
sub
dec
adc
inc
pop
sti
dec
lcall
inc
jb
movsl
rol
int3
jnp
ja
xchg
or
loop
lds
cwtl
pop
fstpl
adc
lret
push
cmp
loope
mov
addr16
cmp
mov
cmp
gs
push
xor
lahf
or
sarb
sub
lods
test
imul
fcoms
loop
and
std
inc
in
fs
call
icebp
repnz
dec
xorb
mov
jle
xorb
outsl
add
pop
mov
out
cmp
sti
clc
mov
add
push
xor
and
pop
pop
lret
sbb
pop
cmp
mov
mov
xchg
jecxz
jo
stc
sub
jge
xor
xor
fstpt
loopne
repz
rorb
mov
push
pop
sub
aad
push
shrl
jns
inc
leave
jmp
push
add
pop
ja
mov
sahf
or
pop
ret
pop
or
std
inc
insb
movsb
push
push
out
imul
push
shll
jne
xchg
sbb
jg
andl
and
inc
xor
das
mov
mov
notb
mov
stos
sub
loop
inc
jae
jo
mov
xor
loop
push
or
mov
lret
mov
jae
cwtl
or
mov
mov
lret
mov
push
call
scas
mov
pusha
xor
gs
ja
sub
add
mov
sub
pop
adc
pop
and
and
outsl
cli
lea
data16
int3
aaa
test
and
xor
jb
mov
push
fs
push
fdivrl
and
pop
dec
adc
or
inc
xlat
sub
inc
sti
push
xchg
sbb
and
das
pusha
cmpsl
cmp
jae
mov
pop
flds
xor
inc
pop
js
xchg
call
ja
idivb
ja
clc
and
jg
lock
test
and
mov
pop
jmp
xor
pop
dec
test
lret
xchg
and
stos
add
and
adc
ret
inc
xlat
orl
leave
test
std
mov
mov
out
xor
mov
xlat
fwait
and
mov
jmp
imul
lods
aad
mov
jecxz
mov
or
mov
jno
pop
dec
in
mov
pop
dec
add
lcall
inc
cmc
push
cli
mov
push
push
xchg
jge
and
add
adc
cmp
stos
loop
ds
test
jmp
mov
cmp
sub
in
test
addr16
lds
addl
cmp
pop
popa
push
mov
adc
pusha
ficoml
scas
jecxz
sbbb
mov
cltd
cmp
cmpsl
xor
rcll
pop
cwtl
jo
movsb
lods
out
sbb
pusha
jo
push
icebp
cmpsl
cmp
pop
icebp
jge
in
rclb
repz
in
mov
mov
cmp
lods
cmp
cmpsl
js
and
test
sbb
adc
addb
call
pop
adc
add
xchg
mov
out
jns
push
lahf
lret
clc
lahf
cli
cmpsl
push
shr
outsb
and
jecxz
sub
and
adc
test
jb
sbb
dec
mov
das
inc
jge
and
jnp
push
ss
rcrl
xor
imul
cwtl
jp
inc
jl
pop
repz
scas
lcall
mov
jge
cld
es
sbbl
inc
in
cmp
repz
xchg
test
orps
add
inc
fcmovbe
lods
das
sbb
push
pop
leave
or
cmpsb
aas
hlt
ljmp
xchg
xchg
xlat
ret
imul
xchg
loop
cmpsl
xchg
xlat
pop
sbb
inc
sbb
xchg
jecxz
adc
sbb
mov
cmp
lods
lret
sbb
xorb
ret
mov
int3
mov
mov
pop
and
add
and
pop
mov
xchg
adc
fildl
in
addr16
mov
mov
not
aaa
cmp
sbb
jecxz
in
mov
out
je
lea
fsub
sub
and
fidivs
mov
xchg
or
test
call
mov
mov
rclb
or
push
sahf
dec
push
cmp
insb
sbb
mov
pop
inc
push
push
push
out
loop
sbb
sub
sub
test
pushf
call
dec
adc
adc
jle
dec
inc
imul
mov
xor
xchg
lahf
adc
sub
test
xchg
xor
nopl
mov
fisttpll
pop
and
pop
addl
dec
out
in
and
dec
fcmovb
sbb
test
pushf
js
and
icebp
jecxz
xchg
mov
scas
mov
or
lods
pusha
adc
lahf
test
imull
repnz
push
in
int3
adc
std
mov
xchg
inc
mov
push
mov
or
sbb
mov
enter
and
arpl
adc
adc
inc
jl
add
or
mov
into
push
jno
inc
bound
push
jmp
ja
lods
xchg
jno
xor
add
xchg
pop
outsb
push
cli
hlt
addr16
movsl
mov
mov
movsb
cmp
movsl
cmc
jg
fmuls
enter
cmp
adc
lock
lret
mov
cmpsl
mov
addb
dec
mov
test
loop
out
push
lret
xchg
call
dec
push
adc
adc
ds
int
mov
testb
gs
mov
dec
jge
pop
je
sbb
pop
mov
sbb
ret
lret
sahf
pop
test
aaa
pop
adc
mov
lods
or
sbb
add
je
lock
mov
insl
lret
leave
push
in
lahf
ljmp
mov
jb
inc
pop
test
pop
jb
cltd
test
adc
fldcw
jno
mov
sbb
aad
jno
jns
pop
mov
rclb
ljmp
rcr
popf
adc
mov
inc
jbe
pop
in
iret
dec
dec
sub
xchg
add
xor
cmp
mov
je
repnz
mov
rep
lret
rcll
and
jmp
cld
push
add
ja
adc
mov
nop
add
xor
jb
jmp
or
cmp
jne
movsl
mov
pop
out
fisttpl
fcom
std
xchg
imul
cmp
pop
bound
imul
arpl
mov
aam
xor
pop
cwtl
and
movsl
push
daa
cwtl
sbb
mov
push
ds
test
pop
mov
sub
mov
jb
lds
popa
jnp
pop
ficoml
sub
adc
add
rcrb
pop
mov
in
push
adc
insl
add
push
aad
lods
xlat
fcmovbe
pop
nop
sbb
inc
push
cmp
jge
pop
sti
jno
shlb
sahf
mov
cld
adc
xor
rorl
mov
cs
mov
mov
filds
rcll
nop
push
test
std
jne
stos
xor
jne
dec
sbb
cmp
mov
mov
jge
stos
dec
dec
pop
pop
xchg
fxch
push
push
push
daa
xor
cmp
cltd
xchg
jmp
xchg
mov
add
jns
or
inc
lret
pushf
andb
fiaddl
push
mov
cmp
jl
pop
test
rcl
push
mov
test
add
push
jo
pusha
data16
mov
repz
aaa
pop
or
lret
popw
mov
out
sti
xchg
test
lret
push
pusha
in
lret
jbe
cmpsb
xorb
jbe
js
dec
gs
das
push
addr16
dec
int
fdivs
push
popf
xor
cmpsl
loope
fstps
cmp
inc
adc
mov
loop
adc
xchg
sub
inc
mov
lods
push
mov
insl
cmp
mov
insl
dec
pushf
iret
jb
pop
or
test
clc
stos
in
repz
xchg
into
addr16
cwtl
aaa
pusha
fwait
aam
dec
push
sub
cmp
pop
push
loop
xor
add
loope
sbb
jns
decb
xor
push
jns
mov
ss
mov
arpl
icebp
stc
out
mov
or
pop
mov
fsubrs
pop
cmp
jl
test
aas
stc
idivl
push
outsl
jne
pop
pusha
les
test
mov
xchg
rolb
dec
lret
imul
testl
adc
shlb
ret
cmpsl
loopne
iret
jmp
data16
push
xchg
jb
out
out
mov
inc
mov
adcl
and
push
insb
orb
add
adc
das
outsb
mov
push
mov
js
in
xlat
gs
sbbl
mov
push
jno
push
lods
mov
cmp
mov
outsl
pop
add
cmp
fdivp
dec
imul
je
dec
ljmp
fcmovne
xchg
stc
sub
mov
repz
lahf
nop
dec
ret
push
fmuls
push
les
ja
and
mov
pop
mov
xor
out
mov
mov
cmp
dec
dec
cmpsl
and
and
pop
popf
enter
and
adcl
adc
jae
icebp
push
push
sbb
imul
adc
sub
imul
pop
or
mov
loopne
sub
jp
sub
adc
outsb
popf
and
mov
decb
jecxz
insb
or
ret
push
sbb
push
fs
and
cmpsb
aam
cmp
test
lret
repnz
mov
xor
aam
in
mov
adc
nop
sbb
mov
sub
add
adc
mov
push
jg
fldenv
push
iret
int3
push
mov
popf
loope
xchg
cli
adc
dec
les
das
lret
mov
arpl
fcom
jmp
outsl
inc
dec
push
in
add
inc
in
in
popf
mov
popf
ret
mov
dec
orb
aaa
inc
repz
insb
inc
fiadds
test
xchg
jmp
and
xchg
movl
ds
cmp
popa
fsubp
fcomip
inc
sub
mov
daa
inc
dec
inc
pop
xchg
push
sbb
cli
mov
cmp
outsl
icebp
insb
stc
fcoml
test
xchg
sub
fsubrs
inc
cmp
aaa
aas
dec
pop
adc
sarb
testb
ljmp
lods
sbb
sbb
out
xor
push
lret
movsb
fildl
sbb
xchg
mov
ss
or
cmp
pop
xor
cmc
shr
insl
popf
push
mov
imul
leave
xchg
scas
push
or
and
addr16
jae
es
cld
int3
mov
jne
nop
movsl
fs
xchg
mov
mov
std
loop
mov
fidivrl
rolb
sti
jl
int
ret
jb
clc
jo
inc
lret
test
or
mov
jne
push
in
dec
je
fs
cmc
ret
stc
mov
mov
mov
scas
gs
sbb
or
or
mov
cmp
stc
xchg
cld
push
add
pop
shrl
mov
sbb
pop
cmpsl
and
mov
pop
lods
rolb
clc
divb
or
call
cmp
pop
dec
jle
mov
stos
pop
out
insb
adc
sti
pop
cli
in
push
test
inc
mov
and
out
or
clc
jae
imul
adc
andb
push
rcrl
xchg
adc
add
dec
jno
scas
adc
cmpsl
mov
pusha
xchg
js
cmp
fistps
ffree
ja
pop
mov
mov
mov
xchg
enter
xor
xchg
ror
dec
insl
push
scas
fisttps
or
mov
mov
jl
mov
adc
cmp
imul
js
dec
cmp
dec
das
sbb
sbb
sbb
imul
lahf
cmp
int
mov
jp
icebp
stos
push
fcoml
pop
fwait
jno
test
adc
aas
adc
cmp
add
cmpsl
inc
movsl
ja
arpl
inc
pop
stos
adc
fcomps
jbe
or
mov
mov
stos
lret
lods
pop
pop
mov
jmp
sahf
mov
mov
incl
inc
mov
mov
mov
test
rol
outsl
nop
jb
mov
jno
scas
pop
sti
dec
xor
xor
push
mov
cmp
sbb
or
cmpsb
jp
in
push
mov
pop
stos
rolb
mov
sahf
cmpsb
sub
pop
pop
ficomps
jle
js
cwtl
pop
imul
push
mov
pop
aas
sub
jp
cwtl
repnz
mov
mov
rcll
lcall
add
adc
bound
arpl
mov
mov
mov
mov
sub
jae
mov
push
cwtl
mov
inc
lds
addb
fs
add
addr16
sbb
or
xrelease
push
jp
cmpsl
in
jae
in
lods
ss
xor
pop
sbb
inc
ja
inc
adc
pop
fists
push
shl
imul
aaa
sbb
movsl
jle
pop
xchg
pop
xor
movsb
lret
inc
add
xor
outsb
aam
stc
mov
pop
lret
xchg
push
pop
pop
mov
dec
movsb
mov
dec
cmpsl
and
pop
or
push
aad
test
sub
iret
jle
std
popf
movsl
sub
dec
sahf
movsb
inc
pop
and
xchg
pushf
es
repnz
and
mul
mov
add
jmp
sub
xor
mov
mov
sbb
pop
loop
adc
sub
jne
push
repz
xchg
jl
and
push
mov
and
arpl
pop
icebp
jb
lahf
int3
aas
and
lahf
iret
sbb
repz
cmp
sub
xchg
xor
fisubs
xchg
xor
cmp
fcomps
aad
xchg
outsb
mov
or
jecxz
cwtl
inc
mov
pop
jnp
mov
dec
mov
lods
bound
into
push
pop
fcomps
in
xchg
ret
and
scas
std
inc
lret
fcoms
stos
sub
leave
outsb
imul
cmp
cwtl
hlt
mov
ret
test
cwtl
mov
mov
or
mov
and
test
mov
les
jmp
cld
pusha
jp
ljmp
jns
add
sbb
add
cmpsl
dec
test
dec
mov
push
mov
dec
loope
or
pusha
cs
mov
das
out
jae
lret
jecxz
cmp
scas
xchg
lcall
adcb
mov
cmp
mov
fsubs
iret
pop
jg
adc
or
lds
std
inc
and
popf
in
mov
fimull
repz
mov
xlat
out
in
in
mov
push
fmuls
test
inc
jg
xchg
jg
lcall
repnz
xor
sbb
add
push
and
add
addl
mov
test
pop
xor
push
add
cmp
mov
scas
mov
pop
pop
scas
repz
lcall
leave
mov
push
loope
cmp
adc
int3
mov
lea
stos
xor
rcr
cmc
in
pop
lods
add
xchg
loopne
xchg
inc
mov
fmull
lret
mov
sbb
ret
and
cmp
jo
sbb
xor
stc
movsb
lea
daa
xor
mov
dec
mov
cltd
jns
mov
adc
fidivrl
cmp
mov
imulb
fwait
rol
xlat
add
icebp
repnz
sarb
inc
aam
pop
insb
out
cmp
imul
sub
loop
push
dec
mov
clc
sub
mov
pop
xchg
out
jmp
lret
lods
add
xchg
mov
divb
int3
push
dec
ret
jo
fs
push
movsl
mov
out
inc
pop
sbb
jnp
jg
inc
mov
pop
xchg
mov
sub
inc
insl
mov
stos
push
out
fucomi
ja
pop
jne
je
mov
cmp
shl
jns
das
mov
pop
jp
gs
push
mov
das
xchg
and
mov
adc
cli
sbb
sti
xchg
sbb
fs
add
xlat
clc
push
repnz
arpl
mov
inc
mov
addr16
sti
shl
in
pop
xlat
daa
addl
and
sbb
mov
pop
bound
push
jns
outsl
jle
sbb
pop
cltd
push
add
mov
sub
or
hlt
pop
les
push
jle
es
xor
int
hlt
aad
outsb
test
add
or
jb
in
loope
in
and
jg
adc
xor
jae
mov
mov
mov
es
shrl
out
stos
icebp
xor
xorb
cmp
and
enter
pop
mov
mov
dec
scas
xor
xchg
fists
push
or
pop
dec
mov
int3
jno
shrb
push
data16
lock
lock
inc
scas
add
push
pop
adc
ret
jl
xchg
xchg
icebp
mov
dec
push
int
jo
clc
jmp
and
pushf
adc
pop
lahf
cmp
pop
lods
sbb
dec
mov
inc
icebp
push
sub
sub
mov
xor
in
outsb
push
sarl
in
roll
mov
data16
or
outsb
or
fs
popf
fisubrs
rcrb
adc
lret
push
jae
push
mov
mov
xor
sbb
ds
or
decl
cmp
test
das
add
jmp
xor
test
stos
add
rorb
aas
in
stc
pushf
push
nop
je
es
add
movsl
mov
dec
and
xchg
pop
mov
or
ja
inc
dec
shll
popf
lea
sub
out
jg
push
fisubrs
std
xchg
stos
lock
inc
lcall
dec
xchg
fstpt
xor
push
push
inc
push
push
mov
js
jne
rorb
repnz
push
sbb
sbb
sbb
xor
cltd
cmp
mov
sbb
cmc
call
dec
xor
sbb
push
popl
iret
iret
and
inc
sbbl
mov
subb
enter
ljmp
jge
push
mov
pusha
mov
ret
int3
or
sub
in
test
les
mov
and
pop
hlt
push
inc
pop
cld
aas
pop
outsl
cmp
xor
mov
ljmp
xor
sbb
lea
fidivrl
xchg
pop
hlt
mov
mov
sub
notl
sahf
jns
jp
clc
and
mov
stos
push
pop
sbb
rorb
jae
mov
lcall
xor
xor
lret
inc
and
std
xlat
shlb
and
cli
push
lods
jecxz
push
push
aaa
pop
push
xchg
dec
lds
sbb
mov
inc
cmovg
mov
addr16
idivl
jmp
ret
mov
xor
sbb
fs
rcrb
adc
jbe
inc
movsl
div
in
jne
ret
push
mov
pop
popf
pop
xchg
jo
jae
inc
add
adc
pop
lahf
xchg
sbb
clc
and
out
sub
push
pop
in
inc
mov
mov
idivb
aaa
jae
ret
push
push
and
mov
lret
lahf
cmp
push
xchg
jecxz
cmp
mov
dec
mov
xor
adc
and
aas
push
push
jnp
mov
mov
adc
push
ficoml
xchg
loopnew
pop
int3
pop
imul
cmp
jne
mov
or
jnp
outsb
mov
test
fisubs
add
fldl
fwait
dec
mov
pushf
imul
lret
mov
sbb
scas
jbe
cmp
xchg
cld
icebp
scas
dec
sub
in
pop
nop
sbb
xor
loopne
mov
jg
jp
xadd
xor
inc
lret
xorb
dec
cmp
mov
or
scas
cmp
sahf
mov
scas
lods
cld
inc
xchg
divl
sbb
xor
pop
inc
mov
adc
xchg
lcall
cmpl
sbb
mov
lret
test
dec
sub
xchg
mov
mov
cmp
fcmovnbe
push
in
inc
dec
lret
or
dec
or
mov
arpl
mov
pop
popf
and
xchg
aam
pop
inc
xor
scas
outsb
mov
sub
mov
xor
fidivrl
mov
mov
hlt
inc
ss
sub
sbb
imull
insb
cmp
cmp
mov
loope
add
scas
xor
aas
add
add
push
ret
aas
jns
sbb
inc
cli
lods
adc
add
mov
mov
pop
popf
aam
in
dec
xor
sub
and
pusha
and
lcall
sub
test
leave
dec
loope
movsb
xchg
sub
imul
mov
sarl
inc
and
push
push
jge
repz
sub
mov
xor
sub
xchg
xlat
andl
and
daa
ljmp
adc
pop
imul
cmp
pop
loop
add
in
xchg
movsl
in
lods
aaa
out
pop
mov
mov
scas
outsl
add
std
js
lret
dec
pusha
or
test
imul
inc
rol
in
jle
insl
das
fcoml
and
mov
jl
xor
shr
imul
cli
mov
jl
cmp
cs
in
pop
movsw
outsb
push
bound
icebp
cmovbe
aad
adc
popa
shrl
and
push
test
add
xor
adc
call
jp
jo
aad
leave
mov
lods
insl
cmp
xchg
mov
sub
push
sub
je
pop
push
jo
ljmp
pop
or
movb
loop
sbb
insl
sub
xor
sbb
stc
push
divl
stos
lcall
pusha
mov
lods
push
xchg
ljmp
add
ret
dec
pop
cli
rol
sub
cmp
cs
popa
cmc
inc
sub
cmpb
push
sahf
cmp
fistl
push
int3
decb
cmp
add
jns
inc
movsl
sarb
inc
mov
dec
shlb
cmc
pop
xor
imul
push
mov
xor
test
jle
pusha
inc
sub
adc
imul
lret
and
repz
or
push
es
cmpsb
adc
and
dec
and
subb
mov
add
jne
fsubp
je
in
push
xchg
sbb
cmp
adcb
or
ret
dec
dec
leave
xchg
jle
push
xchg
sub
iret
cltd
arpl
mov
sbb
jge
and
sub
int3
and
and
sarl
sbb
fidivs
or
xchg
sbb
fwait
push
cmp
mov
or
jns
lcall
enter
fmul
cwtl
mov
sub
mov
faddp
pop
xchg
mov
ret
insb
jo
mov
inc
adc
lods
popa
ret
push
xchg
loope
xchg
dec
or
dec
sbb
aas
pop
imul
cmpsl
and
xchg
push
lret
jmp
push
push
in
mov
shl
fs
mov
dec
dec
sbb
jle
repnz
fcmovnu
xor
sbb
pop
push
jp
adc
push
cltd
jecxz
dec
addr16
sub
xchg
pop
imul
adc
cmp
test
inc
jo
icebp
inc
pusha
mov
and
push
ljmp
or
mov
jbe
mov
incl
aaa
dec
xor
sub
loope
mov
roll
xchg
dec
lods
aad
in
ffreep
sbb
jge
arpl
xor
cwtl
imul
sbb
mov
inc
out
aam
pop
or
mov
nop
imul
dec
jb
out
fmuls
mov
bound
adc
aam
aam
cmp
xor
push
cltd
fnsave
rcrb
cmpsb
xor
mov
out
ljmp
adc
ljmp
mov
fisubl
cmpsb
ficomps
pop
mov
mov
fsubrs
cmc
jae
xchg
and
sbb
dec
push
pop
imul
jns
addr16
mov
fmuls
ss
and
cmp
jae
mov
xor
xchg
or
pop
test
and
mov
mov
out
mov
aam
adc
dec
mov
pop
wbinvd
xor
sbb
mov
out
adc
mov
das
add
mov
push
jnp
mov
mov
call
push
dec
dec
cmp
int3
fidivl
push
loopne
fdiv
int3
xor
jnp
leave
lds
mov
dec
jb
mov
push
mov
dec
mov
inc
add
adc
aam
enter
fisttpll
dec
xor
xchg
push
or
xor
cmpsl
mov
add
fs
popa
sub
aam
push
add
pop
std
push
push
test
jnp
ficoms
dec
xchg
movsb
movsl
lret
push
cli
les
repnz
push
mov
or
jmp
pop
lea
ret
loope
push
pop
fiadds
or
fldenv
sbb
cmpsl
xchg
mov
pop
lcall
dec
int
insl
jmp
insl
adc
cmp
repz
loope
jp
pop
xchg
pop
pop
jae
orl
les
dec
push
mov
jno
dec
gs
rcll
pushl
fcmovne
mov
lods
stos
stos
xorl
imul
rcl
jno
lcall
mov
popa
add
xchg
adc
hlt
cs
out
daa
mov
pushf
xlat
aas
pop
movl
fwait
mov
imul
jae
jns
lds
hlt
fisttps
ja
je
loope
jp
insl
jns
add
clc
out
pop
jmp
sbb
dec
hlt
fistps
add
in
pusha
mov
cli
sbb
sub
mov
add
push
xchg
inc
movsb
sub
jo
idivb
or
test
leave
dec
jo,pn
cmp
cmpsl
into
shl
inc
ds
mov
cld
rclb
in
lea
mov
nop
inc
dec
jle
fisttpll
int3
fisubrl
fstl
pop
fidivl
enter
xlat
insl
sbbl
fs
push
pop
push
je
jg
pop
pop
sub
pop
xlat
aad
inc
and
or
ja
jns
lahf
cmpsl
aas
pushf
imul
mov
stos
pushf
dec
ret
jmp
arpl
cmpsl
xor
pop
add
mov
cmc
mov
mov
push
add
jb
loopne
jno
ljmp
pandn
mov
fldcw
jl
cmp
jp
mov
jns
adc
xchg
and
inc
insb
adc
mov
sub
mov
mov
popa
call
cmp
std
jge
add
or
lds
pop
pop
inc
cmp
adcb
mov
stos
fldl
pop
iret
or
mov
push
adc
add
aam
inc
ljmp
fstpt
cltd
clc
sbb
and
dec
sbb
in
or
divl
sbb
or
add
pop
stos
sub
dec
int
popf
pmaxub
mov
jne
pop
mov
pop
fcmovu
push
dec
dec
and
push
dec
cwtl
test
push
or
add
das
sbb
adc
jo
hlt
push
in
loopne
push
dec
jle
js
lods
push
mov
aas
outsb
sub
popf
and
pop
pop
js
xchg
inc
sbb
jecxz
loope
mov
push
jmp
dec
mov
lea
out
sbb
sub
pop
lret
cmp
adc
call
xor
jl
push
ret
movsl
and
stc
loope
rorb
enter
frstor
sbb
shlb
mov
sub
or
push
jns
call
jge
sbb
es
cld
xchg
imul
lods
jbe
ljmp
fstps
pop
sbb
pop
mov
adc
or
mov
mov
xor
add
jl
lea
insb
addr16
nop
push
xchg
gs
out
pop
sub
cmp
push
sbb
adc
mov
pop
notb
jns
jo
xlat
mov
xchg
cmp
lods
imul
xchg
mov
and
lahf
ficoms
ret
xchg
dec
aam
add
lods
sbb
test
adcb
xor
adc
daa
fsub
out
mov
js
pop
jne
je
lods
jmp
shll
pop
and
divb
jmp
pop
jno
adc
call
mov
sbb
add
imul
aas
icebp
in
and
or
dec
pop
push
mov
push
pop
loopne
xor
pop
sti
loope
adc
das
add
mov
mov
xchg
out
filds
out
push
inc
or
loop
xor
lods
adc
loopne
stc
lds
cwtl
ficoms
loop
fadd
or
pop
push
pop
push
loopne
movsb
xor
aas
cmp
inc
add
mov
cmp
int3
jg
sbb
in
push
mov
lcall
call
orb
push
xchg
cmp
ljmp
scas
popf
mov
push
call
mov
adc
aad
ss
sub
imul
xchg
insb
scas
aas
dec
pusha
arpl
mov
and
ret
scas
xchg
in
mov
sbb
push
repnz
stos
pusha
test
push
push
or
orb
jne
dec
mov
mov
xor
and
and
cmp
xchg
and
sahf
cmp
fsts
hlt
cs
or
in
add
fdiv
lds
xor
idivb
pushl
movsb
addr16
xchg
scas
jnp
iret
call
fstpt
es
arpl
mov
cmp
ret
mov
subl
xor
loop
ds
repnz
xor
insl
lret
out
cltd
inc
shrb
mov
loope
inc
loope
movsb
or
sbb
fs
hlt
mov
cmpsb
in
sbb
or
push
mov
push
sbb
sub
pop
int3
loop
jge
inc
sarb
mov
pop
xchg
inc
mov
out
outsb
sub
mov
cmp
xor
jge
leave
inc
add
mov
and
pushf
pushl
pushf
push
loopne
adcl
insl
sbb
test
mov
dec
mov
pop
adc
arpl
rol
push
jnp
push
mov
imul
or
shl
loope
sub
pop
mov
push
inc
push
add
xchg
test
xor
into
lods
lods
dec
and
fdivrl
xchg
sub
mov
out
dec
arpl
mov
std
and
cli
stc
xorl
push
repnz
mov
test
sbb
jecxz
popf
jo
fs
dec
mov
pop
sbb
and
inc
dec
movsb
jne
xchg
pop
sub
into
rorb
rorb
subb
mov
jg
or
inc
test
pop
xchg
lock
add
lcall
cmp
mov
sub
sbb
cltd
mov
in
adc
xor
fstpt
mov
sbb
xchg
mov
fs
mov
cmpsb
add
and
pop
sbb
imul
loopne
mov
mov
addr16
sub
lea
ds
shlb
in
cmpsl
and
fiadds
ds
arpl
out
push
das
roll
sti
cmpsb
lcall
cmp
pop
add
xchg
push
popa
xor
test
out
fistl
dec
aam
bound
jmp
jno
scas
push
dec
cmp
jo
push
mov
and
lahf
add
or
cmp
cmp
sti
cmp
mov
mov
aad
xor
inc
jo
daa
in
js
or
clc
mov
jecxz
or
cmp
jb
jp
sub
push
or
das
xchg
mov
lea
push
adc
mov
jle
sbb
out
test
cltd
mov
adc
mov
pusha
push
inc
neg
inc
daa
repz
inc
cwtl
in
mov
push
lret
pop
aas
xlat
and
cmc
push
mov
fistps
dec
repnz
in
adc
push
test
pop
cmp
sarl
lock
movsl
aam
push
or
cmp
push
lds
lock
outsb
mov
pop
jg
lret
dec
addr16
dec
jns
fnstsw
imul
test
mov
pop
push
sbb
lds
lods
jl
movsl
daa
test
fdivrs
ds
in
scas
fcmove
xor
sub
ffreep
dec
cmp
in
or
push
loop
and
mov
cmc
lret
dec
out
repz
in
cltd
pop
xchg
fwait
mov
je
shlb
jo
or
mov
dec
jge
sbbb
test
rcrl
jmp
jb
fwait
inc
loopne
sahf
lahf
or
mov
jb
mov
fists
pop
rcll
push
mov
sub
inc
xor
imul
mov
lahf
es
stos
insl
pop
scas
mov
push
pop
pop
xchg
outsb
lea
sbbl
orl
mov
pusha
xor
xchg
lods
out
testl
inc
in
push
imul
or
cmpsb
fiaddl
pop
sub
adc
in
jl
inc
test
hlt
adc
cmp
fidivl
inc
scas
hlt
xchg
push
ljmp
push
add
sahf
cmp
ljmp
lcall
movb
int
xchg
xor
jmp
xchg
xchg
das
mov
mov
jl
repz
mov
jns
das
sbb
mov
es
nop
xor
mov
mov
pop
mov
out
cmp
shrb
pop
add
cwtl
sub
pop
and
sub
or
insb
cwtl
es
and
sbb
jmp
subl
test
dec
aad
es
into
stos
lds
int
dec
or
aas
insb
jne
shrl
cmp
nop
aas
push
es
imul
cmp
inc
out
insb
fwait
inc
cmp
xchg
inc
fdivr
cmpsl
cmpsl
mov
loopne
repnz
adc
je
dec
stos
xor
mov
das
jns
fisttpl
pop
push
into
loopne
lods
or
push
xchg
fcmovnu
andb
cli
add
xchg
mov
push
repz
jge
or
cli
add
imul
push
aas
xor
xchg
pop
push
mov
adc
mov
xor
push
cmp
cs
jb
cmp
addr16
pop
fimull
inc
jge
idivl
adc
sub
or
je
cmpsb
repnz
jg
push
clc
arpl
das
ss
cltd
out
aam
pop
pop
int
sahf
repnz
lret
rcrl
gs
inc
push
sub
fsts
pusha
in
dec
or
push
loop
popa
add
xchg
lea
out
and
pop
cwtl
mov
out
mov
test
imul
push
jns
addr16
add
and
fsubrl
jnp
stos
dec
dec
inc
test
dec
push
and
lcall
mov
ds
push
sbb
loopne
mov
sbb
inc
push
out
xchg
in
iret
inc
aas
cmpsb
push
dec
inc
stos
and
sub
push
jae
fcoms
mov
icebp
nop
push
cltd
xor
or
xor
add
aam
test
movsb
mov
and
pop
lds
pusha
dec
repz
dec
in
mov
and
mov
sub
les
imul
jp
jb
add
mov
scas
stc
or
jae
decb
pusha
faddp
mov
cmp
xlat
mov
push
inc
xor
adc
dec
fbld
or
and
cwtl
push
sbb
pushf
insl
and
sbb
lods
sub
fdivrs
pop
mov
pop
clc
xchg
xor
addr16
dec
or
jg
int
push
mov
mov
and
subb
pop
mov
movsb
or
stc
test
icebp
push
mov
sti
ja
fisubl
jl
adc
cmp
pop
ja
loop
jmp
cmp
xchg
out
jmp
outsb
stos
jbe
out
sub
xor
cli
inc
pop
dec
or
outsb
mov
xor
das
xor
les
or
out
in
adc
xchg
mov
push
push
fldt
inc
mov
out
jle
cmp
ret
les
or
orl
loop
rcl
test
enter
repnz
movb
inc
xor
fs
add
es
mov
push
or
notb
push
mov
xor
pop
shlb
push
lds
pop
sbb
repz
dec
icebp
in
js
pop
dec
dec
test
cmovbe
xor
mov
out
pop
outsb
xor
push
mov
xor
stos
test
fbstp
js
and
cmp
clc
cmp
outsb
aas
xor
jle,pt
fsubr
icebp
sub
xor
or
rcrl
stos
mov
push
ds
test
dec
and
lret
fldcw
jbe
ret
rolb
test
imulb
leave
stos
call
xlat
lahf
outsl
rcll
loopne
negl
adcl
xchg
rolb
cmp
sbb
jnp
test
jp
mov
xchg
pop
fidivrl
adcl
sbb
jp
popf
jl
sub
xchg
jae
jbe
or
jmp
and
pop
lret
mov
jbe
or
and
push
jbe
shll
jns
aad
call
mov
rolb
mov
movsb
or
in
lods
mov
lea
pusha
loopne
cmp
loope
sbb
push
mov
push
push
add
aas
mov
repz
push
sub
out
mov
jns
into
add
inc
movsl
xorb
lea
mov
aaa
push
dec
dec
lea
lock
cmc
dec
pop
sub
sbb
jns
inc
rorl
sbb
xor
mov
or
push
insl
xchg
rcrb
loope
pop
fwait
cmp
and
dec
jno
xor
stc
jae
push
xor
pop
mov
jne
movl
popa
adc
push
adc
dec
mov
jg
jge
mov
cmp
add
mov
imul
sub
mov
das
sbb
loopne
jae
ss
cmp
dec
push
lahf
int3
xor
lock
mov
sbb
push
mov
adc
xor
das
rol
loope
pushf
inc
aad
out
das
mov
fstpt
inc
call
cmc
test
fsubs
mov
outsl
in
adc
add
rorl
xchg
xchg
lcall
scas
mov
ror
iret
mov
arpl
pop
orl
pop
sti
push
xchg
add
xor
push
imul
test
pop
stos
mov
inc
fsub
inc
push
sbb
push
pushf
into
push
mov
das
lret
xchg
int3
and
sbb
mov
or
cmpsl
lock
mov
adc
or
xchg
xlat
imul
dec
test
mov
negb
scas
test
add
outsl
push
jg
les
add
dec
fsubr
dec
cld
cmp
or
mov
dec
jne
cmp
dec
outsb
rol
or
cmp
out
mov
or
xchg
ss
loope
aam
ja
shlb
mov
adc
mov
push
pop
push
jnp
fucomi
call
cmc
rcl
in
jle
sub
mov
into
pop
loopne
sarl
xor
iret
repnz
outsl
sub
shll
mov
mov
inc
xchg
test
movsb
mov
es
cmp
xchg
mov
cmc
mov
nop
cli
xor
add
sbb
mov
mov
loopne
adc
mov
sub
je
mov
outsb
divb
cld
loope
mov
in
jl
in
cs
fsub
or
rcrl
out
mov
mov
sub
add
call
fdivrs
outsl
clc
in
ss
daa
dec
jo
clc
mov
sub
xchg
adc
andl
cmp
addr16
insl
add
dec
loopne
cld
fstps
cmc
cmc
pop
push
or
dec
xchg
add
cmc
jne
jl
adc
mov
ss
mov
repnz
hlt
inc
popa
rorb
mov
mov
adc
pop
jnp
out
popa
bound
mov
sub
jne
add
push
or
ficoml
mov
imul
inc
xchg
int
or
mov
je
sbb
jmp
push
hlt
cmp
int3
cmp
xlat
mov
pop
jb
das
inc
enter
cltd
popa
adc
idiv
or
push
in
adc
repnz
cwtl
xor
enter
nop
stc
lret
inc
jge
test
cwtl
int
insb
push
xchg
incb
dec
jge
jp
inc
testl
mov
xchg
ljmp
and
aad
push
icebp
inc
push
add
jae
jnp
ret
cmpsb
xchg
pop
mov
negb
mov
call
push
fwait
sti
xor
add
enter
inc
sbb
adc
sub
nop
bound
test
pop
lock
jmp
jp
rcl
test
cltd
dec
cmp
mov
or
mov
pushf
pop
cmpb
cmp
sub
mov
sbb
imul
sbb
in
push
test
test
out
cmp
cmp
and
pop
cmp
cwtl
out
jmp
xor
pushf
insb
xchg
push
movsb
lsl
lea
fisttpll
or
lods
dec
xor
add
and
shll
jnp
mov
int
or
mov
add
aam
dec
xor
lea
xor
sbb
out
add
int
subl
pop
push
ljmp
mov
sbb
pushf
and
mov
dec
adc
pop
push
int
test
and
in
insb
mov
imul
jno
popa
fld
outsl
mov
or
aam
lahf
mov
jle
inc
inc
outsb
adc
stos
daa
or
in
adc
mov
and
push
int3
sbb
movsb
divb
mov
or
adc
cmpsl
cmp
jno
xchg
int
cwtl
push
mov
dec
jb
pop
stc
cwtl
cmpsb
ljmp
cmp
or
or
insl
or
sub
int3
pop
sbb
mov
ljmp
or
dec
inc
out
jmp
sub
aad
add
inc
cmp
lret
jmp
xor
xor
cli
sbb
bound
sub
sbb
ret
mov
movsl
dec
imul
lea
xor
adc
dec
les
mov
dec
insl
rorl
aas
cmpsb
rclb
dec
adc
xchg
add
cltd
adc
shrl
cltd
pop
in
mov
add
or
push
mov
xor
js
jg
test
push
addr16
mov
nop
insl
rol
fimull
outsb
xor
and
fdivr
das
jp
movsl
sub
mov
ret
loopne
lcall
add
mov
les
mov
jbe
and
dec
xchg
xor
insb
mov
jle
add
xor
inc
jg
mov
outsl
push
outsl
loop
cmpsl
cmpsb
mov
mov
shll
xor
xorb
jp
pushf
fisubrs
mov
movsb
mov
lods
add
sbb
mov
and
or
leave
lret
es
dec
sbb
mov
daa
sub
or
test
rclb
dec
mov
std
mov
pop
cmp
adc
nop
btc
jge
mov
sbb
fadd
das
mov
icebp
adc
leave
fucomip
in
imul
cmp
mov
cmpsb
sbb
pop
inc
fisttpl
in
xchg
out
mov
stc
xor
aas
lret
ret
int
xchg
sbb
in
pop
movsb
pusha
repnz
or
cmp
icebp
add
mov
sub
xor
int
and
fs
test
idiv
or
mov
jo
jp
sbbb
xchg
push
adc
jb
cmp
and
stos
adc
pop
rcrb
test
rcll
mov
xchg
mov
stos
int3
adc
fnstsw
out
mov
inc
cmp
mov
jp
or
decl
sahf
mov
pop
mov
cmp
xchg
int
lcall
jb
stos
mov
movsl
lods
mov
les
sbb
int3
repz
sarb
pop
inc
mov
sbb
shll
inc
push
push
push
xchg
dec
nop
lock
data16
enter
mov
mov
sbb
ss
icebp
shll
andb
jmp
imul
ss
xor
pop
mov
repnz
dec
adc
cmp
in
ss
mov
movsl
or
jno
cmp
mov
cli
push
push
xor
mov
dec
stos
scas
mov
fisubrl
push
insl
mov
xchg
lret
dec
mov
das
xchg
in
jns
add
mov
jns
cmp
dec
aaa
js
mov
into
cwtl
in
jge
dec
jle
lods
dec
pop
mov
mov
inc
ret
daa
adc
xor
add
ret
cmc
add
mov
fidivl
mov
jmp
pop
push
dec
out
adc
imul
das
or
xchg
mov
nop
mov
sbb
pop
adc
mov
cmp
pop
cmp
jg
cmp
aam
cmp
jmp
cmp
sub
sbb
pop
and
pop
rcll
cmp
lret
xchg
sbb
imul
pop
in
lock
test
xchg
cs
push
aad
jle
fwait
sub
cs
and
out
mov
sbb
fstps
iret
cltd
xor
and
pop
xlat
jno
dec
sub
test
jbe
jp
inc
jle
pop
add
adc
xor
inc
push
mov
rclb
out
xchg
push
int3
movsl
ficompl
shrl
testl
mov
adcb
xor
push
rolb
movsb
mov
lcall
cmpsl
or
push
repnz
scas
mov
insb
sub
test
push
pusha
xchg
movsl
out
cmp
in
pop
cltd
ss
and
ret
fistpl
xchg
add
mov
outsb
pop
adc
xlat
scas
jae
push
pop
push
test
jo
push
adc
mov
aad
enter
shlb
pop
xchg
cmpsl
lret
scas
cwtl
mov
sub
push
cli
out
xor
aad
test
iret
fcmovb
jno
sub
mull
jnp
add
xchg
je
push
hlt
inc
fwait
scas
mov
imul
mov
push
jnp
loopne
pusha
lea
xchg
push
or
cmpsl
sbb
or
cmp
or
push
iret
lds
sbb
pop
jg
sub
cwtl
addl
jne
sbb
cmpsl
ja
or
sub
fstp
stos
sbb
dec
xchg
xchg
rcrl
mov
push
push
push
movzwl
cwtl
leave
jecxz
filds
mov
dec
jge
mov
push
daa
jae
fisubs
lea
arpl
sub
ret
outsl
icebp
in
mov
push
inc
xor
pop
ret
mov
sub
jmp
scas
imul
dec
mov
call
mov
ds
je
xor
ret
sbb
jne
push
scas
in
dec
mov
jbe
cmc
mov
subl
aam
jo,pt
jae
mov
das
pop
icebp
push
imul
adc
jg
push
pop
fs
xchg
jl
call
mull
aad
push
jl
stos
xchg
pop
adc
xlat
std
loope
dec
int
ret
test
cmpsb
and
icebp
xchg
in
lret
xor
jle
mov
fistpl
and
xchg
inc
dec
call
push
mov
mov
push
insl
loope
push
adc
dec
in
mov
push
sti
mov
dec
mov
insl
lea
push
pop
xor
adc
in
add
arpl
sbb
mov
shl
cld
ret
push
inc
xchg
jb
jb
idivl
push
nop
lods
mov
nop
push
jmp
sub
loopne
clc
adc
imul
enter
dec
sub
dec
jne
in
lea
imul
icebp
filds
jmp
addl
ljmp
push
sub
movsb
fwait
push
mov
and
std
mov
push
mov
mov
and
aas
shll
cmpsl
add
iret
rorl
loop
xchg
jbe
lahf
les
dec
mov
xchg
sbb
push
ret
shrl
pop
mov
push
adc
cmp
in
cmp
push
jns
fistps
roll
loope
leave
repz
inc
or
push
insb
hlt
rep
lret
dec
mov
test
xor
clc
xor
jns
aam
lcall
inc
xchg
test
lret
pushf
sbb
movsb
add
sahf
lods
rcr
into
addr16
testl
and
pop
push
in
xor
es
ficoms
inc
lock
fstpl
pop
mov
ret
shrl
xlat
jp
jbe
lcall
or
add
xchg
sub
clc
mov
cmp
stos
arpl
jae
push
movsb
roll
out
adc
mov
or
les
pop
push
js
lahf
jmp
adc
and
rolb
jg
xchg
pusha
cld
cmp
jnp
notl
ja
sbb
aad
push
or
lods
xchg
fstl
xchg
repnz
mov
divb
movsb
and
insb
mov
push
mov
ret
or
jecxz
jne
push
pop
xchg
pop
stos
js
rorb
xchg
ss
enter
xchg
or
adc
add
mov
outsl
push
mov
xor
xchg
in
add
in
xchg
popa
and
test
sub
pop
push
jmp
outsl
inc
in
aaa
mov
and
data16
mov
loope
fbld
cmc
repz
xchg
jl
jecxz
jne
push
lcall
xor
imul
sub
testl
les
xor
icebp
pop
outsl
dec
lock
fwait
xor
in
mov
out
jno
adcl
popf
out
daa
fisttps
push
ds
xchg
xor
insb
mov
or
xchg
adc
add
les
movsb
mov
sub
adc
mov
mov
xchg
adc
cwtl
je
xchg
ret
mov
or
lods
fs
adc
bound
ret
dec
cmp
das
les
mov
sub
lods
lret
fistl
jbe
pop
out
lcall
in
jge
mov
sub
jmp
inc
xchg
fnstcw
and
fdivrl
sub
stc
xor
aaa
mov
pusha
test
mov
jle
loopne
idivb
mov
adc
and
pop
pushf
xchg
sbb
mov
sbb
dec
shrl
pop
dec
adc
dec
add
xor
mov
mov
loope
pop
sub
cld
imul
or
pop
fiaddl
mov
lds
adc
mov
add
negb
inc
pop
shll
push
xlat
push
sub
dec
arpl
sbb
cwtl
fidivrl
aaa
dec
aad
cwtl
cwtl
cvtpi2ps
adc
push
adc
out
cs
jge
mov
dec
pop
mov
mov
and
and
or
fsubl
cmp
cmp
ljmp
out
out
test
sbbl
mov
xchg
sub
dec
and
movsb
and
cld
int3
cltd
xchg
mov
movsb
xor
arpl
xor
pushf
stos
xor
xchg
aad
test
sarb
jbe
pusha
aam
jp
xor
mov
add
fisttps
subl
push
sbb
sbb
xchg
add
fsts
mov
mov
sub
xchg
adc
ret
in
or
fbld
enter
jno
cmp
popf
call
push
and
jno
daa
xor
aam
push
insb
ret
jns
inc
aas
js
dec
scas
and
aad
ds
ss
pop
in
dec
fldl
dec
inc
mov
or
and
ret
mov
rolb
pop
inc
add
stc
dec
stos
jae
test
and
and
loope
mov
cmp
icebp
sbb
mov
inc
cmp
rol
clc
sub
xchg
dec
loop
fimuls
dec
xchg
nop
pop
xor
in
or
cmpsb
mov
xchg
aad
mov
outsb
pop
mov
int3
mov
jg
cltd
stc
mov
mov
mov
or
icebp
or
cmpsl
xor
push
inc
enter
pusha
pusha
push
cwtl
inc
add
pusha
pop
je
pop
and
mov
adc
addr16
fbstp
mov
orl
in
in
enter
inc
mov
xchg
xlat
cld
push
out
lahf
pushf
fnstcw
and
in
addr16
stos
push
xor
xchg
pop
sub
cmp
inc
mov
ljmp
adc
popf
xor
or
aam
into
xchg
mov
push
sbb
mov
push
sub
lret
outsl
xor
fcomps
outsl
stc
cltd
fadds
pop
and
xor
cmp
xchg
pop
out
pushf
stos
into
imul
adc
imul
outsl
mov
jns
mov
push
popf
in
leave
outsl
pop
and
test
cmpsl
fwait
out
fwait
and
jbe
mov
cmpsl
push
add
add
imul
xor
mul
sub
adc
cltd
xchg
xor
mov
std
jb
or
pop
xchg
mov
fucom
xor
jg
arpl
out
mov
sub
nop
mov
push
xchg
ss
jo
xor
or
mov
inc
pop
mov
mov
add
enter
pop
outsb
popf
mov
cld
jp
into
imul
in
daa
jns
aaa
stos
aam
mov
and
xor
imull
scas
mov
test
xor
setnp
sub
dec
shrb
or
clc
or
addr16
in
pop
jbe
stos
dec
in
cmp
test
cld
ss
fneni(8087
push
nop
sarl
arpl
cmp
lret
pop
add
xchg
bound
sub
and
mov
repz
add
jb
lret
mov
imul
es
mov
clc
mov
jb
add
pop
xor
adc
mov
inc
lahf
or
mov
mov
cmp
mov
xor
adc
pop
mov
sti
mov
int3
data16
sbb
out
in
aam
ja
mov
divl
xchg
loop
adc
pop
data16
lahf
sti
push
xchg
ret
mov
add
pop
and
cmc
sarb
xchg
push
nop
push
add
lds
pop
int3
mov
subb
clc
hlt
add
mov
lods
mov
dec
rcr
jg
loope
ss
hlt
repnz
outsb
pushf
ret
xor
push
fisubrs
jge
fs
fiadds
dec
lret
addr16
xchg
outsl
pop
stc
pop
xor
into
fmull
sti
sub
lods
jg
xor
cwtl
push
cmp
fnstenv
mov
jle
stos
leave
lahf
push
or
sub
imul
add
icebp
out
lar
mov
sub
adc
pop
mov
stos
test
mov
add
ss
xchg
sbb
sbb
lods
int
and
xchg
scas
pop
mov
ret
jp
outsl
aaa
add
pop
out
cld
paddusw
lds
leave
lahf
mov
ds
mov
mov
outsl
mov
xchg
xor
rcll
dec
mov
mov
jb
ljmp
sahf
xor
shlb
rcll
out
push
adcb
sub
mov
out
imull
mov
xchg
sbb
popf
and
mov
popa
fcmovnbe
scas
outsb
add
sub
mov
sbb
pop
cmpb
push
jp
mov
dec
and
adc
cltd
loopne
out
mov
mov
add
data16
in
adc
ret
sbb
and
iret
nop
lcall
imull
lods
ljmp
sub
mov
out
jle
sarl
inc
and
dec
sub
and
ficomps
test
push
cmp
outsb
lahf
sbb
aad
fstl
lcall
sub
jge
mov
add
dec
sub
sub
mov
fisubl
in
and
add
jge
outsb
iret
fwait
setno
or
int3
cmpsb
xchg
scas
and
arpl
punpcklbw
and
sti
push
jb
adc
dec
lods
aas
stc
inc
xor
lods
xchg
and
es
sub
sbb
mov
scas
push
fsubs
lea
cwtl
int
xchg
mov
call
mov
aaa
test
push
cwtl
inc
jp
lock
mov
jnp
inc
lahf
cmp
and
cmc
push
data16
xor
movsb
xchg
pushf
insl
jg
ficoms
add
mov
movsb
test
push
lods
pop
popf
jnp
fsub
test
sub
iret
in
mov
push
sbb
repz
dec
adc
push
outsl
fcompl
adc
jne,pt
and
adc
pop
jo
mov
sub
cltd
repnz
loopne
jecxz
mov
mov
push
js
jge
jl
scas
cld
adc
lock
inc
xor
dec
fdivrs
add
adcl
xchg
repz
xchg
mov
pushf
notl
mov
pusha
dec
daa
cmp
xchg
fisubrl
fnstsw
mov
cmpsl
ja
mov
in
scas
int3
mov
fnstsw
andb
mov
pusha
jns
pop
sbb
mov
adc
mov
jge
dec
aaa
mov
scas
fwait
mov
test
mov
mov
cmpb
xor
aad
jp
push
sub
fsubl
mov
dec
inc
push
inc
addb
inc
push
aaa
pushf
cmp
push
sbb
fistpl
mov
jmp
jmp
mov
cvtsd2si
in
fninit
in
mov
mov
dec
adc
shll
pop
pop
sub
ds
mov
or
cli
lahf
int3
dec
sti
fstpl
out
repz
in
shrl
adc
cmp
add
loope
xchg
imul
mov
jo
add
frstor
cmpsb
xlat
mov
mov
xlat
dec
jp
sub
mov
push
mov
cmc
jbe
imul
cmp
push
push
jbe
scas
cmc
lahf
add
sub
dec
push
mov
fwait
js
enter
or
jae
push
xchg
lret
icebp
lods
divl
mov
rep
mov
sbb
test
movsb
aad
pop
aam
and
div
xlat
sub
jnp
movsb
dec
mov
mov
loope
jns
lret
mov
push
repnz
push
loope
fisubrs
cmp
xor
add
loope
pop
add
or
popf
push
test
test
sbb
adc
loopne
lret
mov
pop
inc
in
xchg
or
xchg
jle,pt
sbb
out
aad
xchg
gs
fs
mov
push
sarl
and
scas
cwtl
dec
sub
sbb
mov
dec
rep
iret
mov
jmp
notl
in
sub
add
out
fsubrp
scas
or
sbb
aas
pop
das
xchg
or
xor
sbb
and
shlb
sub
jp
mov
and
js
pushf
shlb
cli
rcl
test
push
xchg
mov
and
subb
idivb
sbb
iret
jp
mov
clc
adc
out
sub
stos
sbb
sub
mov
inc
dec
jae
cmp
popa
push
cltd
lret
outsl
fcompl
jnp
js
and
out
lret
outsl
xor
in
cmc
mov
int
dec
jg
mov
nop
in
inc
inc
mov
add
std
arpl
enter
mov
lea
sahf
mov
pop
in
mov
imul
out
test
andl
or
adc
push
or
jne
mov
dec
arpl
mov
lods
leave
ja
add
push
mov
mov
aam
or
pusha
icebp
fmull
inc
test
push
dec
das
jb
dec
and
xchg
cmp
adc
push
shlb
adc
hlt
push
add
add
outsl
test
inc
push
push
rcrl
jb
adc
sub
andb
or
test
out
ret
div
mov
inc
mov
imul
lret
mov
xchg
and
fbstp
cmp
orb
int
idivl
lcall
test
hlt
clc
inc
and
int3
pop
xchg
aad
sub
sub
aam
out
add
mov
dec
xchg
sbb
jecxz
xor
out
lret
inc
aaa
sub
add
movsl
and
in
mov
xchg
push
pop
cs
jb
pop
sub
stc
jmp
jge
scas
repnz
jne
xorl
ljmp
jnp
xor
leave
es
ds
mov
lcall
mov
adc
fldl
adc
mov
xchg
jecxz
ret
sbb
dec
or
test
pop
mull
xlat
test
cmpsl
mov
jnp
xchg
clc
arpl
push
in
fisubl
call
fwait
lret
sub
xorb
mov
lods
sub
xchg
out
adc
or
inc
mov
lods
leave
lock
push
movsb
add
sbb
lock
pop
sub
cmpsl
loop
jmp
scas
lods
mov
inc
or
xchg
pop
cs
jnp
push
lds
xchg
rol
lret
jmp
push
data16
popa
shlb
jbe
inc
jp
ror
scas
push
call
negb
cs
fstps
and
sbb
push
fwait
lock
add
daa
mov
inc
and
sub
hlt
adcl
adc
in
cmp
or
sub
or
pusha
inc
fs
cs
fcoml
lods
jae,pt
push
ds
movsb
stos
sti
dec
jno
xchg
dec
add
xor
jle
ljmp
mov
std
push
cmp
and
mov
xchg
gs
sub
pop
jp
push
test
push
dec
inc
mov
mov
adc
sub
popa
in
cli
dec
bound
cs
rorl
pop
dec
mov
add
mov
xchg
push
cmpb
xchg
popl
stos
imul
mov
push
in
adc
push
jb
jmp
out
inc
les
add
imul
fstp
push
ret
in
les
inc
rcrl
fldt
jle
rcr
pop
mov
in
and
pop
mov
mov
sub
andl
jae
xor
mov
cmc
orl
rolb
daa
dec
or
jb
lods
sbb
fldenv
test
cmpsl
es
test
sub
out
cmpl
arpl
mov
repz
sub
and
subl
cltd
push
mov
out
out
mov
xchg
mov
mov
cltd
popf
push
cld
arpl
and
ret
pop
sbbb
sub
sbb
cwtl
les
outsb
and
push
mov
mov
sti
insl
dec
popf
enter
shr
pop
sbb
xchg
pop
push
push
pusha
aas
out
je
xor
sbb
xchg
fisubl
dec
js
lods
sub
daa
decb
je
adc
pop
and
mov
xlat
repz
xchg
jae
jae
sbb
dec
testb
mov
shll
dec
and
push
push
jle,pn
sbb
dec
lds
mov
mov
push
add
test
cmp
sub
pop
popa
inc
cmc
sbb
sub
in
mov
jmp
push
mov
sahf
fistpl
ds
lahf
xchg
lods
push
arpl
mov
leave
leave
adc
pop
inc
jns
cmpsl
mov
pop
fs
xchg
in
cmp
mov
outsl
xor
sub
push
push
mov
fwait
jge
or
sub
jmp
lock
pop
js
xchg
sbb
jp
nop
testb
in
xor
dec
add
in
sub
aam
inc
dec
jns
dec
fcmovb
push
jnp
push
out
call
mov
or
push
xchg
xchg
cmp
jg
in
jo
sub
xchg
int
test
out
sub
jb
inc
sub
ret
leave
es
cld
sbb
push
xchg
mov
cld
xchg
pop
adc
scas
mov
lahf
stc
or
int3
mov
sub
mov
add
xchg
pop
mov
dec
pop
fs
fidivs
fimuls
jo
add
leave
hlt
cld
jmp
out
mov
sub
pop
aas
lock
dec
sti
pop
push
push
mov
cld
xor
xchg
ss
popa
and
xchg
repnz
push
test
sbb
xor
lods
jmp
and
push
xchg
lds
inc
jmp
mov
jl
mov
inc
add
ljmp
movsb
pop
push
in
add
sbb
jp
add
arpl
dec
repz
jmp
jl
je
sbb
mov
mov
or
sub
jbe
xor
in
sub
sub
mov
inc
stc
push
loopne
sbb
les
sbbb
ja
fs
xchg
or
cmp
pop
cwtl
xchg
ss
cmpl
mov
call
jne
push
leave
mov
lds
shll
pop
popf
sbbl
mov
adc
jne
imul
in
pop
inc
rclb
ja
into
mov
fimuls
mov
js
ds
sarl
or
leave
movsb
pop
mov
adc
inc
jo
jno
hlt
clc
movsb
and
mov
xchg
les
lret
cli
flds
outsl
add
cmp
pop
push
pusha
test
mov
cmc
or
pop
cld
and
adc
add
nop
lret
hlt
fstpl
jbe
sbb
pop
cwtl
mov
nop
push
dec
xchg
xchg
push
lcall
or
and
adcl
push
jmp
dec
leave
dec
cs
fcompl
and
push
dec
ret
xchg
iret
or
cmpsb
lcall
mov
and
mov
or
insl
mov
inc
fisubs
movb
inc
adc
xor
mov
mov
xchg
sub
sbb
push
scas
je
pop
or
adc
lea
das
aaa
pop
stos
fld
cmp
ret
repnz
ja
adc
sahf
xchg
mov
xchg
mov
ss
inc
push
sub
push
mov
or
sbb
into
andb
movsb
loopne
enter
add
lock
mov
adc
push
sub
cld
xor
scas
mov
mov
loope
loope
sahf
sub
int3
cmp
dec
testl
xor
add
shll
pop
or
dec
jbe
in
cmpb
dec
xor
cli
mov
adc
call
xlat
repz
shrb
xchg
push
dec
xchg
or
jo
nop
andl
subl
adc
sarb
xchg
test
pop
shll
sti
in
sub
insl
aam
scas
rcll
xor
and
lods
jae
aam
and
clc
pop
pop
popa
push
lods
das
xchg
xor
pop
repz
mov
and
sbb
add
push
stc
mov
jp
add
add
sbb
nop
adc
clc
mov
xchg
add
lcall
inc
aaa
push
aam
mov
sub
inc
mov
mov
icebp
mov
sub
cmp
sahf
xchg
push
sub
or
sbb
mov
dec
iret
outsl
mov
pushf
dec
sub
dec
xchg
dec
subb
aad
fldl
adc
adc
mov
or
call
fcmovbe
jecxz
stos
hlt
shrb
push
mov
scas
inc
inc
ljmp
pop
adc
imul
xor
jmp
inc
sub
xchg
mov
xchg
jecxz
inc
xor
loopne
jge
push
arpl
in
push
gs
stos
ss
aaa
push
sahf
rep
xchg
or
and
jmp
mov
xchg
fmul
jle
ja
mov
add
push
adc
push
in
sbb
jnp
adc
divl
stc
nop
nop
xor
daa
movsl
dec
dec
sub
sub
cmpsb
lret
dec
mov
push
test
jo
cwtl
test
adc
fwait
ljmp
jb
popa
lods
push
repnz
cld
mov
push
push
int
inc
mov
aad
lret
pop
dec
jae
loopne
icebp
mov
jmp
popf
mov
lcall
push
cmp
pusha
jmp
lret
mov
push
repnz
iret
dec
pop
cmpsb
testl
mov
jg
xchg
pop
or
imul
jle
cmp
inc
dec
xor
pop
out
mov
je
xchg
jle
movsb
add
push
in
inc
std
pop
mov
mov
and
stc
adc
jge
or
lret
xchg
pop
cmc
sbb
adc
mov
fwait
cmpsl
push
fildll
jbe
push
and
aam
es
popf
pushf
fcom
ds
inc
lods
or
adc
add
cli
subb
cmpsl
xor
pop
fs
ficomps
xchg
dec
ja
mov
test
or
jnp
jno
push
pop
in
pop
mov
or
push
jae
xchg
cmp
popa
mov
test
adc
mov
stc
jns
arpl
test
shlb
mov
clc
mov
into
xchg
jnp
cmpsb
fdiv
inc
cmp
lods
les
dec
mov
xchg
mov
stos
aas
fucom
push
lds
pop
shlb
fwait
dec
or
cmpsl
stos
sub
or
jbe
cmovle
fdivl
addb
adc
stc
jl
sbb
or
jle
cmp
push
and
rorb
add
dec
rcr
xchg
mov
addb
cmpsb
sbb
mov
les
mov
pop
in
rorl
push
adc
push
fs
dec
sub
lahf
stc
loop
cmp
pop
fstpl
ret
and
ss
nop
lods
loope
push
pop
and
cmpsb
bound
test
insl
stos
iret
rcl
mov
mov
push
jne
clc
cmovno
mov
adc
jnp
or
cmpsb
dec
aam
int3
shlb
out
and
jmp
inc
mov
test
lods
jl
icebp
adc
xchg
push
test
sub
shlb
sahf
jge
jbe
inc
call
xor
into
fisttpll
jmp
xor
jo
mov
inc
into
ds
cmpsl
jb
lods
mov
or
adc
jno
mov
jnp
push
inc
fcoms
jae
push
or
jecxz
mov
js
out
xchg
out
mov
stos
xor
xchg
or
push
in
addr16
loopne
addr16
xor
stos
xchg
or
mov
xor
dec
sbb
outsb
add
pop
pop
ficomps
mov
sub
fdivrl
ficoml
jno
jl
mov
out
mov
and
mov
mov
aas
inc
subl
xchg
mov
adc
jo
das
xchg
bound
aam
sbb
cmpsb
fs
cld
pop
lods
xchg
loope,pn
dec
mov
mov
in
mov
cwtl
jne
lret
std
mov
mov
sbb
insl
in
adc
jns
aas
sub
xchg
dec
stos
jge
sub
xchg
cli
dec
add
bound
lods
or
adc
add
lahf
cmc
inc
pop
aam
mov
pop
outsb
cmc
mov
xchg
mov
pop
repz
call
in
dec
jnp
sub
loope
dec
pop
inc
lahf
cmp
cmpsl
fsincos
add
lods
dec
jbe
sub
fdivrs
lods
jae
lcall
dec
imul
shr
jl
sbb
call
pop
pop
cmp
sub
cmc
jl
ja
sbb
mov
mov
sbb
fsubr
push
lcall
push
xor
out
aaa
test
ss
inc
popf
mov
pushf
out
xor
cmpsb
xchg
popa
test
ljmp
cmpsl
data16
jp
daa
das
xor
sbb
in
pop
shrb
jo
ret
mov
rcrb
pushf
mov
jp
mov
xor
fcomip
movsb
push
inc
in
outsb
dec
mov
xchg
popa
pop
cwtl
and
jns
push
repnz
lock
ret
cmpsb
dec
add
and
xor
inc
pop
pop
clc
scas
sti
add
mov
pop
jl
je
sbb
jecxz
adcb
sbb
repnz
fldl2t
jns
mov
lds
jne
and
sarb
in
mov
pop
hlt
inc
push
ficomps
add
int
sub
pop
aaa
xchg
xchg
test
mov
pop
hlt
jbe
fdivr
shll
push
loopne
in
push
push
cs
shlb
stos
fs
fstps
dec
test
stc
pop
ret
dec
insb
mov
int
imul
lret
pusha
cli
jge
ss
rcr
addl
mov
cmpsb
adc
push
dec
out
lea
dec
xor
pop
mov
fidivrs
mov
cmp
cmp
and
idivl
xchg
in
addr16
jae
loope
jbe
mov
hlt
std
mov
cwtl
add
int3
jbe
xchg
into
add
sbb
xchg
fistl
jns
sub
popw
xor
movb
inc
inc
adc
mov
or
and
aad
adc
xor
jecxz
enter
cmp
inc
and
outsb
push
ja
push
or
je
mov
jl,pn
sbb
flds
sbbb
outsl
cmp
xchg
js
push
imul
arpl
dec
jge
mov
mov
dec
rclb
inc
call
leave
pop
aaa
adc
popa
fmull
jle
mov
shl
push
mov
lret
push
xchg
cld
lock
inc
dec
lods
clc
cmc
mov
loop
sub
aas
lea
mov
shr
xchg
mov
lods
test
sub
dec
pop
sbb
xor
fstpl
mov
scas
in
xchg
fwait
stos
pop
jb,pn
jnp
stc
lretw
cmp
incl
sbb
addb
jo
inc
mov
pop
scas
insb
sub
dec
jmp
push
lock
inc
fs
inc
lret
xchg
cmp
mov
int3
jne
sbb
loope
pushf
cmp
out
cmp
sub
inc
push
in
inc
inc
fwait
aad
and
or
mov
in
pushf
loop
and
mov
sbb
stos
outsb
es
xchg
xor
push
push
sub
insl
into
or
addb
movsl
sbb
xchg
xor
lret
cmp
call
mov
and
push
add
negl
xcrypt-ecb
cmpsl
int
jns
sbb
mulb
mov
popf
pop
pop
sbb
jge
sbb
rcl
sub
mov
push
pusha
add
movsw
ljmp
xchg
mov
pop
or
fisttpl
das
jg
repnz
lcall
rcrb
mov
add
jg
jge
jge
sbb
test
sub
shrb
mov
mov
inc
popl
test
test
data16
ljmp
pop
dec
mov
cwtl
push
mov
out
xchg
test
sub
inc
nop
add
mov
inc
fsubl
xchg
jns
push
sbb
stos
sbb
fisttpl
leave
fwait
mov
push
addr16
fisubrs
pop
pop
cwtl
dec
pop
cld
sbb
push
pop
fsubrl
lock
dec
sbb
fcoml
pop
mov
inc
jns
mov
pushl
jno
cmp
aam
mov
pop
and
std
icebp
xor
int3
loop
lcall
movsb
mov
leave
push
pop
xor
jl
subb
lret
inc
in
inc
popf
pop
mov
mov
jl
cmpsl
out
push
rorb
out
lret
or
inc
stc
inc
mulb
repnz
fisubl
outsb
mov
jle
fsubrl
and
xor
pop
add
mov
dec
sub
lcall
pop
xchg
cmp
frstor
and
cmpsl
push
add
push
mov
add
push
lds
cmpsb
push
popf
jmp
fisubs
mov
mov
pop
lds
push
lret
repz
enter
inc
and
pop
int
cwtl
negl
rep
fdivr
xchg
adc
xorl
in
add
int
lcall
add
jg
add
ljmp
or
or
addl
addr16
mov
aad
ja
dec
dec
and
and
dec
mov
repnz
mov
std
push
jg
jge
stos
add
mov
sbb
dec
pop
mov
std
mov
sahf
pop
call
lahf
adc
mov
or
bound
cmp
and
fistpll
sbb
and
popf
jmp
test
aam
cmp
push
pop
and
insb
arpl
mov
cmp
in
fisubl
shrb
in
mov
shrb
or
mov
pushf
mov
xchg
movsl
sub
and
jp
movsl
sarb
sbb
mov
xor
call
mov
icebp
and
jb
xor
pop
nop
adc
repz
cmp
fistpll
rcrb
scas
lods
jle
xchg
sbb
lret
fldl
lea
insl
xor
lcall
jmp
xchg
out
push
or
jnp
dec
arpl
call
mov
stos
mov
xor
rolb
and
popf
jg
in
dec
mov
jnp
aam
xchg
xchg
ss
int
jp
hlt
mov
test
pusha
stos
cmp
or
xchg
outsb
sbb
cmpsb
cwtl
push
pushf
xchg
arpl
out
mov
ret
dec
inc
xchg
mov
into
add
cmpsl
repz
fsub
xchg
adc
into
sbb
js
xchg
aam
dec
loop
in
pop
add
push
cli
addl
pop
fisubl
movsl
or
pop
xchg
mov
fadd
das
in
sub
cmc
dec
sub
mov
insb
cmpl
adc
push
jmp
xchg
in
add
push
pop
sti
dec
xchg
repz
add
imul
sub
fs
and
sarb
push
sahf
mov
add
das
add
orl
loopne
out
jno
dec
xor
mov
sbb
data16
sbb
lods
xchg
or
mov
jmp
pop
mov
dec
test
pop
add
cmp
pushf
in
std
push
arpl
xchg
add
jnp
sub
sub
mov
fsubs
adc
clc
adc
out
pop
repz
ss
movsb
pop
daa
jl
jg
adc
test
loop
sahf
mov
insb
fsubs
sub
fldpi
mov
or
lock
cmpsl
sarb
imul
jle
mov
test
outsl
jge
sub
ret
push
xor
enter
into
sbb
adc
jp
cli
pop
sbb
aam
movsb
mov
imull
pop
stc
and
es
dec
add
fiadds
stos
xchg
or
fcompl
das
cmpsl
push
adc
xorb
clc
xchg
test
inc
push
push
int
ret
and
stc
push
das
decl
cmp
bnd
out
addl
lret
sarl
ficomps
aaa
and
aam
sbb
mov
xor
mov
aaa
jb
dec
fistl
es
pop
jnp
sub
aaa
gs
lock
add
xchg
rcrl
mov
mov
jmp
adc
testb
xchg
cmp
ja
arpl
fnstsw
xchg
cmp
xchg
ret
loop
adc
add
shlb
jge
mov
stc
xor
sub
cmpsb
shl
aam
ror
pop
cmpl
jge
ljmp
orl
dec
sarb
loopne
ret
cltd
fsubs
ja
xlat
cs
xor
inc
int3
fisubrl
adc
cmp
jb
lcall
and
mov
xchg
mov
and
das
sti
inc
xchg
inc
lret
pop
movlps
xor
popa
xor
adc
jp
shrl
push
mov
xchg
cld
fadd
out
mov
mov
insb
push
cli
mov
lds
jno
dec
test
cmpsl
sbb
lds
adc
xor
mov
adc
ss
or
mov
push
adc
mov
test
in
inc
pushf
mov
leave
inc
shl
pop
dec
jle
je
jae
inc
inc
add
in
in
and
lahf
pop
mov
out
cmpsb
out
mov
out
out
xor
lea
jl
push
cmpsl
outsb
pop
mov
mov
mov
pop
lret
clc
sarb
inc
sub
into
ret
dec
repnz
mov
pop
fs
mov
test
lods
movl
lret
dec
jmp
and
push
jns
jge
fbld
or
xchg
dec
jns
pop
inc
and
mov
in
addr16
mov
mov
jl
and
dec
cld
out
mov
xchg
outsl
adc
sti
imulb
sbb
cmc
enter
outsb
movsb
jno
in
push
jmp
sub
ljmp
pushf
mov
call
cmp
jl
mull
in
fisttpll
outsb
adc
jnp
addl
ja
sbb
pop
jb
clc
push
mov
inc
imul
cs
xchg
or
or
and
xor
cmpsb
cmpb
subb
jcxz
push
roll
int3
pusha
cwtl
mov
push
out
jmp
pop
js
std
jmp
or
test
pop
ja
int
loope
push
xchg
cltd
std
pop
xchg
clc
js
mov
andb
lcall
sti
cs
inc
sub
xor
test
pop
pusha
sti
mov
in
push
test
xchg
push
sub
xor
push
daa
aam
jns
push
mov
dec
lret
popf
mov
push
add
inc
mov
add
xor
and
movsb
cmp
cld
inc
jno
dec
mov
in
xchg
inc
jno
add
jp
inc
cmpsl
sahf
cltd
dec
cmp
mov
xchg
sbb
sub
sbb
xchg
pop
insl
dec
jbe
rclb
je
mov
add
jno
adc
ret
jo
cltd
add
lods
ljmp
fwait
lret
xchg
fwait
push
jl
cmp
mov
push
pop
call
insl
mov
js
push
in
dec
mov
nop
movsl
jmp
jmp
dec
xor
dec
xorb
xchg
mov
sbb
push
pop
sti
es
mov
test
cmp
insl
cs
inc
push
sahf
jno
jl
arpl
adc
flds
jp
and
aam
sbbl
sbb
das
or
lock
nop
push
mov
sub
push
push
sub
in
out
std
scas
jne
xchg
mov
jle
push
push
mov
lcall
mov
cld
sub
out
mov
mov
data16
popa
pushf
jnp,pn
mov
pop
or
sub
adc
iret
fnstsw
arpl
jl
addl
xchg
or
mov
fistpl
test
jp
sub
cmp
fimuls
sbb
dec
xor
dec
cmp
rcrl
aas
or
or
inc
jge
gs
dec
and
popa
test
sarb
xchg
in
int3
xchg
mov
cmpsl
rep
and
push
daa
dec
cmp
loopne
pop
mov
pop
es
inc
or
add
mov
icebp
xchg
push
out
add
pop
cmp
add
xchg
dec
stos
int
stos
inc
lods
pop
or
js
xchg
jno
lahf
lret
cltd
adc
imul
push
sub
dec
add
test
pop
or
inc
mov
jno
jno
cmp
and
arpl
cmp
push
jo
fisubs
jno
jle
adc
pop
inc
push
sbb
repnz
sahf
fisubl
jns
mov
out
or
push
or
repz
rclb
push
outsb
cltd
aam
lods
in
push
jb
cwtl
cmp
xlat
mov
xor
xchg
ljmp
lcall
dec
inc
push
jnp
pop
jg
jge
mov
cmpsb
jbe
or
ret
aam
push
imul
mov
inc
add
xor
sti
clc
mov
push
sub
pop
xchg
xor
mov
sbb
dec
adc
jmp
jle
movsl
mov
or
mov
jno
aad
adc
pop
ljmp
loope
insl
inc
sbb
cs
out
nop
lods
mov
orl
xchg
push
sub
pop
fimull
pop
mov
mov
push
or
inc
hlt
scas
jne
xchg
pop
and
mov
cmp
add
outsb
nop
enter
xor
lods
les
aaa
push
stos
add
and
stos
shlb
and
push
mov
roll
cmp
inc
xchg
sti
xchg
bnd
sbb
and
xchg
push
divb
es
movsb
rcl
sarb
sbb
les
mov
pusha
push
xchg
cli
es
mov
das
cs
faddl
data16
cmp
or
out
and
push
rorb
test
add
vpaddw
ss
ljmp
ds
pop
imul
sbb
scas
xchg
mov
push
push
lahf
cmp
add
xchg
cltd
test
mov
sub
loopne
movsl
out
mov
imul
ret
rclb
add
les
cmp
cmp
push
sub
xchg
and
popf
push
pop
ret
repz
sub
int3
sub
les
cld
jl
inc
movsb
in
and
adc
sub
sahf
mov
xor
dec
repnz
xchg
sub
jg
test
and
test
das
cmp
outsl
loopne
cmp
dec
ljmp
jmp
cmpsb
xchg
pop
loopne
cmp
test
add
out
fisttpl
dec
in
in
jg
cmp
pushf
clc
ret
jle
xchg
add
jle,pn
adc
push
rcr
icebp
rorb
jno
cmp
ss
test
and
add
movsb
dec
cwtl
sbb
imul
pop
xor
mov
out
js
and
lods
adc
rcrb
popf
sbb
dec
idivl
outsb
and
pop
adc
js
jp
bound
adc
stos
cli
pusha
imul
fildll
push
mov
imul
add
pop
jns
insl
dec
shlb
gs
addr16
bound
or
fidivl
movsb
push
cmpsb
gs
std
lret
scas
push
js
push
dec
pop
lods
inc
shlb
pop
push
xchg
adcl
clc
in
mov
insb
fildll
jg
leave
scas
add
inc
xorb
or
inc
mov
lahf
ret
popa
jge
xor
cld
lds
or
test
test
popf
or
dec
mov
mov
pusha
dec
sbb
iret
scas
lods
adc
testb
mov
mov
dec
out
sbb
jl
rcrb
jns
decb
repz
sbb
adc
add
adc
push
popa
clc
jle
enter
rcr
insl
xor
cmp
popf
xlat
outsl
xchg
daa
sbb
fsts
jns
adc
and
aas
in
xor
fsubl
pop
cltd
push
pop
ljmp
dec
mov
testl
pop
sbbb
xor
sub
ret
pop
fisttps
divl
daa
jno
lock
loope
pandn
sarl
or
sub
xor
push
iret
mov
mov
pop
jo
sbb
mov
or
lock
xor
int
inc
mov
or
xlat
sub
in
sub
pop
ss
ret
lret
cmp
inc
adc
ret
sbb
dec
pop
jl
orb
mov
adc
xchg
pop
push
dec
orl
scas
cmp
inc
adc
jmp
mov
mov
jbe
mov
rcll
in
xlat
jl
mov
sbb
pop
jmp
in
push
aaa
stos
js
in
and
lret
pop
hlt
xchg
mov
lsl
iret
mulb
outsb
les
add
push
pop
or
aas
scas
pop
in
mov
int3
lods
jns
xchg
lahf
aam
mov
aaa
xchg
icebp
cwtl
push
push
pushf
add
cmp
mov
adc
push
aas
inc
lods
fcomip
sarb
cmp
and
popf
daa
fcmovu
cmp
std
inc
mov
push
negb
dec
xchg
shr
mov
in
icebp
cli
fyl2xp1
inc
jns
jle
pop
mov
dec
cld
mov
dec
inc
movsb
pop
add
pushf
push
fs
hlt
cld
xchg
inc
adcb
sti
testl
lcall
repz
pop
jg
xor
push
dec
push
push
sbb
sbb
sti
add
ret
adc
inc
lcall
bound
pop
shll
repnz
mov
mov
stos
test
shrl
int
scas
mov
psllw
sbb
or
loopne
add
repnz
jl
stos
mov
mov
inc
push
pop
jmp
lret
push
enter
shl
jecxz
sub
mov
repnz
jb
inc
sub
lahf
stc
adc
jns
push
in
inc
cld
js
mov
pop
jns
mov
inc
shrl
mov
push
xchg
sub
sti
push
outsb
mov
ret
lods
jnp
cltd
and
gs
std
out
jbe
pop
mov
mov
fs
push
sbb
pop
pushf
mov
adc
jl
inc
or
shrl
dec
adc
psllw
out
push
or
into
and
mov
mov
imulb
mov
and
xor
mov
xchg
xchg
data16
hlt
add
add
testl
push
mov
arpl
insb
xchg
or
push
inc
loope
sti
mov
fucomip
aad
xchg
xor
pop
insb
pop
mov
xor
sbb
sub
xor
inc
xchg
loope
cmp
pushf
mov
movsl
and
mov
test
popf
jns
add
push
lods
test
dec
jae
stc
xchg
xor
data16
mov
gs
mov
mov
push
xor
pop
sub
shrb
and
imulb
xor
adc
pop
cmpsb
sbb
lahf
add
lcall
xchg
add
mov
lea
adc
adc
adcb
sbb
sub
mov
cmp
sub
jo
aaa
adc
jle
push
mov
mov
mov
enter
notl
daa
cmp
inc
fsubl
daa
fisubrs
inc
jge
outsl
jecxz
mov
push
orb
mov
fildll
push
scas
mov
fwait
pop
pop
sub
mov
lret
pop
mov
add
pop
dec
ficoml
test
sbb
push
leave
inc
jecxz
sti
rorl
lods
pop
sbb
ret
outsb
iret
psadbw
dec
nop
xchg
aas
inc
add
push
lahf
cmp
adc
dec
lods
inc
sbbl
pop
push
das
leave
cli
cmp
jns
andb
popa
mov
cmp
ror
fldl
push
popa
repz
push
sbb
sub
and
cmp
out
dec
jle
add
dec
adc
adc
in
out
js
or
mov
mov
xchg
push
cwtl
pusha
ds
dec
test
test
and
rorl
stc
xor
imulb
lds
adc
rolb
jge
pop
jmp
cmpsl
dec
xchg
pop
addr16
or
pushl
sub
ss
insl
inc
mov
decl
and
lret
data16
xchg
mov
lock
jl
lcall
pop
iret
or
xchg
sti
fsubr
push
lcall
sub
jge
jb
lcall
dec
or
pop
inc
cmp
incl
cltd
jnp
in
pop
pop
and
loope
call
xchg
add
dec
movsb
push
ljmp
jb
mov
sub
ror
addr16
mov
xlat
jne
clc
insb
or
push
pop
and
rcrb
sti
cmpsl
fldenv
lods
mov
mov
rorb
jae
jnp
adc
add
sub
ja
inc
xor
mov
and
push
add
jle
jnp
adc
pop
mov
bound
or
sbb
in
dec
test
xchg
pop
cmpsl
push
inc
xchg
mov
xchg
xlat
or
ljmp
mov
hlt
sbb
sub
or
and
and
stos
fs
out
call
inc
push
sub
adc
in
pop
loop,pt
inc
pop
pop
ret
sbb
xchg
mov
out
push
leave
jg
xchg
cltd
dec
incb
inc
fwait
lcall
ret
dec
fadd
lret
lds
add
int3
add
sbb
imul
xchg
mov
mov
xor
stos
call
ret
stc
mov
loop
adc
movsb
inc
xor
mov
repz
incl
inc
out
loop
data16
mov
mov
push
xchg
inc
dec
xlat
lret
cmc
popf
hlt
call
dec
insb
popf
test
outsb
out
iret
sbb
iret
dec
push
and
popa
test
shll
pop
in
sub
pop
mov
in
jae
test
mov
repnz
push
std
and
rclb
jl
rorl
out
pop
xor
xchg
mov
gs
leave
mov
aad
imulb
adcl
sbb
lea
push
iret
lret
jecxz
cwtl
push
fmulp
push
xor
xor
andb
insb
mov
psrad
push
jmp
orl
aam
mov
test
or
xchg
outsb
sahf
rclb
mov
jb
push
push
testl
iret
jb
stc
mov
inc
mov
add
stos
int3
pcmpeqw
icebp
daa
jo
adc
or
setns
jecxz
clc
insb
fcmove
or
imul
dec
sub
inc
xor
mov
outsb
pop
mov
mov
push
js
inc
iret
mov
aad
jp
stc
out
ja
dec
mov
and
sbb
hlt
add
popa
outsb
int
stos
lret
insl
sti
das
push
sub
aam
sbb
pop
push
push
xchg
lahf
inc
mov
call
sub
scas
inc
shl
mov
jne
push
call
sahf
sbb
scas
test
fwait
leave
jnp
les
xchg
int3
adc
clc
ret
mov
data16
ret
mov
gs
pushf
fs
into
sub
cwtl
mov
dec
sti
mov
cmpsl
or
aam
shll
in
sub
sbb
add
sbb
lret
push
pop
jb
jmp
mov
and
xor
pop
aad
out
mov
cltd
push
ljmp
rolb
imul
adc
cmp
jp
dec
cmp
inc
scas
addb
sar
mov
add
or
dec
iret
aam
inc
lcall
push
mov
into
scas
jp
ds
fs
push
xor
mov
adc
popa
data16
aad
push
test
leave
fiadds
dec
sbb
inc
mov
dec
mov
cli
sub
add
mov
jae
dec
sub
fxch
xchg
insb
ja
sbb
movsb
sub
fcomps
stc
sbb
mov
and
push
pop
jnp
jle
call
push
add
push
sti
pop
cli
aad
pop
add
or
shll
xor
sub
and
add
push
inc
cmp
je
lret
lods
lock
add
mov
jbe
inc
jl
in
in
lea
sub
mov
lahf
fwait
rcrl
cmpsl
es
std
sbb
mov
insl
cli
ss
xchg
cmp
sbb
jecxz
repnz
cmc
push
mov
ss
pop
xchg
cmp
mov
fcomip
into
call
jnp
popf
sub
dec
and
push
sbb
mov
push
pop
in
negb
fldcw
clc
vandnps
cwtl
mov
cltd
mov
cmpsl
in
repz
scas
hlt
jge
ja
sbb
cld
cmp
or
in
pop
push
inc
insb
dec
movsl
jle
mov
or
cld
bound
push
jle
imul
cld
subl
stos
mov
or
jp
mov
dec
pop
sub
pop
jge
mov
gs
sub
adc
inc
shr
sbb
xor
cld
mov
arpl
add
ja
add
push
push
pop
mov
movsl
pop
gs
dec
sbb
cs
arpl
nop
and
mov
imul
sahf
icebp
or
outsb
mov
enter
sub
add
or
ljmp
mov
scas
inc
cs
lds
imul
xor
stc
adc
mov
xchg
jge
sar
mov
jbe
dec
xor
ds
inc
ret
xor
jmp
addr16
jle
leave
repnz
mov
jge
cmp
daa
pop
push
call
test
push
out
lea
and
mov
iret
aad
jne
scas
fdivrl
push
ljmp
fidivl
sbb
dec
cmp
mov
pusha
cmc
aad
xchg
js
pop
pop
pop
sahf
jmp
mov
sbb
cs
adc
lods
jbe
mov
fldcw
aad
pop
clc
push
lock
and
cld
fimuls
sub
push
adc
push
inc
les
movsl
fsubl
adc
add
movsl
push
in
in
push
mov
xchg
sub
pop
stc
outsb
data16
scas
pop
mov
imul
cltd
sbb
pop
aam
mov
imul
push
push
sahf
jb
test
push
xchg
clc
xor
scas
push
int3
pusha
inc
stos
xchg
mov
mov
testl
clc
xor
movsl
stc
aad
pop
pop
xor
cwtl
and
push
push
repnz
sti
mov
push
jno
aad
xchg
roll
cmp
and
es
xchg
jnp
outsb
fwait
test
stos
mov
pop
popf
movsl
imul
sub
sub
scas
pop
xchg
test
jns
int
insb
jmp
xorb
sbb
add
popf
pop
inc
pushf
push
outsl
jae
xchg
cmp
or
mov
shll
loope
jb
call
mov
cltd
insl
jg
mov
not
mull
sahf
fisttps
sbb
inc
inc
out
or
popa
jne
shlb
jnp
cmp
inc
jb
add
push
loop
int
ss
sahf
mov
xor
sub
pop
lret
bound
dec
adc
rcl
in
inc
xor
pop
scas
sbb
mov
push
or
mov
mov
das
xchg
lcall
or
fistpll
loope
add
aam
ficompl
xchg
das
mov
mov
lret
lock
push
daa
aam
faddp
mov
inc
push
push
jl
jmp
inc
das
inc
sub
icebp
jecxz
outsb
jb
lods
inc
pop
subb
in
inc
mov
jnp
je
sub
ds
jo
xor
add
add
fisttpll
push
jmp
jne
mov
cmp
inc
fucomp
ss
pop
xor
dec
cmp
and
mov
fimuls
xor
xlat
sbb
hlt
push
scas
stc
xor
dec
roll
cld
ljmp
nop
inc
mov
outsb
mov
fcompl
enter
repnz
mov
jl
shl
xor
mov
into
dec
sbb
adc
lock
jecxz
xchg
dec
repnz
aam
sti
dec
pop
fwait
je
out
pop
xchg
jae
adc
push
repz
pop
sub
pop
adc
push
sub
inc
lea
push
pop
dec
jmp
je
leave
idivb
add
icebp
subb
push
xchg
fs
jge
add
jb
cmc
inc
nop
add
cltd
outsl
cmpsb
mov
push
sub
xor
or
int3
mov
mov
in
roll
add
paddw
paddsb
loop
lcall
pop
jmp
mov
inc
inc
pop
call
and
aas
out
movsb
mov
fsubp
je
add
fsubrs
outsb
jne
rclb
inc
add
mov
das
sbb
mov
stos
or
adc
es
add
je
pusha
ds
jbe
jg
cmp
xor
dec
cld
bnd
inc
mov
insl
in
fdivrs
sti
loop
xchg
in
adc
lea
dec
fmull
add
and
xchg
sub
add
pop
sti
sub
repz
cmpsb
jle
cld
push
js
hlt
repz
lret
sbbb
or
call
add
push
and
add
shrl
fs
jl
sahf
scas
dec
cmp
mov
mov
xor
xor
and
mov
and
mov
inc
pop
or
stc
mov
fisubl
je
mov
ror
hlt
inc
cmc
pushf
pop
add
sub
lret
jnp
fildl
hlt
and
ja
pop
mov
push
iret
sbb
adc
sahf
idivl
cmovb
cmp
add
xor
popf
sbb
push
sbb
mov
or
adc
fs
mov
sbb
dec
pushf
mov
xor
mov
and
mov
push
mov
jmp
pop
mov
cmp
inc
inc
arpl
rorb
test
xchg
jne
loopne
scas
jb
mov
insl
adc
test
cli
xchg
loopne
add
xor
cmp
push
inc
fdivrs
cmpsb
jmp
add
push
fnstsw
pusha
adc
loope
sbb
xchg
dec
mov
pop
stos
mov
xor
out
adc
sub
loopne
and
imul
stos
mov
mov
daa
push
stos
xor
pop
pop
jb
cmp
jmp
add
mov
jb
imul
stos
cmp
out
sbb
mov
ljmp
mov
stos
cwtl
sub
push
out
loopne
jg
movsl
or
lds
add
in
adc
xlat
icebp
dec
sti
test
rcrl
and
pushf
jmp
dec
mov
jnp
dec
das
outsb
mov
insb
in
jmp
scas
rorl
rorl
ss
inc
dec
jb
insl
cltd
push
inc
ljmp
sti
adc
in
movsb
sbb
in
in
inc
lret
inc
sbb
xor
pushf
sti
mov
pop
mov
pop
insb
fildll
adc
pop
in
jg
mov
ror
arpl
sbb
or
xlat
scas
outsl
bound
xlat
cmp
push
push
addr16
xchg
repz
loope
mov
jle
cs
hlt
mov
push
jo
pop
pop
push
shl
aaa
rcrb
dec
push
sbbb
push
in
jle
scas
mov
call
loop
sbb
pop
rcll
jo
test
ret
popa
jnp
cmp
xor
negb
adc
cwtl
stos
fucomip
sahf
inc
pop
lret
cli
or
fldt
test
lock
dec
mov
les
inc
cmp
enter
stc
push
inc
cmc
pop
sub
push
push
daa
fsubrl
xor
or
repz
push
rcrb
ss
stc
inc
dec
out
pop
test
test
sbbl
mov
lcall
cmp
xor
rorb
es
rol
add
fs
je
rcrl
push
loopne
fwait
jns
or
push
movsl
pop
or
xchg
jge
or
or
les
idivb
jbe
stos
mov
cmpsb
fsubrs
cmp
test
add
inc
icebp
lret
arpl
in
cltd
and
cwtl
push
mov
mov
or
iret
jae
into
inc
xchg
sahf
outsb
subb
push
push
push
dec
nop
ret
dec
and
sub
sub
jno
jns
sbb
loopne
mov
stos
das
shll
xchg
test
mov
pop
cmp
and
sub
xor
movsl
mov
pop
xor
mov
leave
orl
inc
rol
dec
xchg
into
mov
mov
mov
popa
push
movsb
fstl
arpl
movsb
adc
in
jl
shlb
lock
cmp
aad
fdivrp
push
stc
add
cltd
mov
xor
jg
push
adc
fwait
lret
mov
in
pop
out
es
sbb
mov
outsl
lods
mov
pop
jl
ljmp
cmpsl
xor
and
pop
and
loope
mov
cmp
test
cmp
into
xlat
push
fidivs
push
or
lret
lret
mov
shlb
mov
add
int
movsb
and
pop
pop
sub
mov
lock
cmp
add
pop
sub
popa
inc
loope
pop
cwtl
incl
cmova
lcall
mov
idivb
clc
ret
stc
incl
mov
pop
mov
cld
iret
push
ret
ret
cwtl
test
pop
xor
ljmp
icebp
xchg
orw
out
mov
adc
fs
mov
or
leave
sbb
outsb
clc
mov
xor
adc
ret
vpsrld
mov
fcompl
cmp
add
and
pop
and
xor
dec
inc
int3
pop
repz
and
mov
mov
jmp
dec
push
ljmp
test
push
jle
mov
xor
add
push
dec
test
mov
xor
cmp
andl
inc
jne
push
int
or
popa
cwtl
icebp
sub
pop
jae
in
adc
pop
movsb
mov
dec
mov
push
or
cld
mov
jle
aas
ds
push
repz
lods
dec
push
insl
icebp
xchg
add
push
xor
add
fsubrl
outsb
sub
mov
arpl
out
sbb
iret
or
movsb
enter
dec
and
rorl
insl
aas
xchg
pop
mov
out
inc
das
jae
fs
cmpsb
in
xchg
inc
adc
enter
xor
lds
fs
xlat
pop
mov
xor
mov
jne
mov
sahf
cmp
mov
sub
cmp
push
xor
mov
or
xor
cwtl
push
inc
jns
adc
in
cmp
or
sbb
fs
insb
bswap
insl
ljmp
pop
ror
mov
mov
add
push
dec
dec
ficoms
fs
stos
mov
aad
outsb
ret
dec
stos
adc
imul
mov
mov
test
jp
daa
outsl
ss
das
bound
leave
xor
sub
aas
adc
or
fdivrl
movsl
aaa
jo
inc
mov
scas
cld
dec
enter
pop
mov
mov
lret
cmp
lea
ret
adc
adc
fldenv
push
pop
mov
movsb
and
shlb
push
push
mov
cltd
dec
fmuls
scas
jg
adc
dec
sarl
and
in
xlat
enter
xor
push
daa
sbb
or
es
push
add
pop
pop
jg
jne
mov
int
enter
cmp
mov
inc
jle
in
cmpb
lea
repz
fidivrs
std
push
sbb
hlt
mov
sub
fsubrl
cmp
mov
pop
dec
ret
sbbb
int3
lahf
dec
push
ljmp
test
arpl
inc
lret
jae
pop
in
lock
shlb
ljmp
jbe
imul
fwait
push
pop
cmpsb
mov
sbb
mov
xlat
aas
push
dec
aad
jecxz
push
pusha
shl
adc
mov
cmpb
cmp
pop
or
ret
daa
inc
cmp
mov
sbb
test
and
fabs
cmp
iret
out
lea
xor
dec
jg
or
lock
pop
outsl
mov
out
loopne
cmp
xor
out
std
cmpsl
dec
leave
mov
imul
jge
xchg
xor
xor
mov
dec
mov
sub
stos
jne
icebp
dec
icebp
inc
add
ss
adc
pop
xor
push
in
pop
call
sbb
xor
add
inc
in
cwtl
or
sbb
inc
pop
mov
in
data16
mov
and
fsubl
test
push
push
mov
lea
sbb
js
jl
fcomi
sub
jp
sub
or
ds
loopne
xchg
jl
xor
and
js
int
pop
aam
push
add
lcall
ret
xor
sbb
fs
cs
mov
push
sti
mov
mov
popa
mov
push
decb
mov
xchg
gs
fstpl
jae
dec
mov
mov
leave
in
pop
inc
add
mov
push
test
hlt
add
pop
and
push
mov
push
add
das
jmp
mov
ret
in
enter
xchg
xchg
push
fucomip
mov
in
lds
ret
sub
sbb
push
xchg
and
lds
cmpsb
xor
fists
push
das
enter
pop
xlat
push
push
cli
jmp
sbb
sub
mov
sub
arpl
lahf
dec
fs
sbb
mov
in
add
subb
jle
out
mov
stc
iret
fldl
add
aaa
inc
sub
cli
xchg
mov
mov
cmp
filds
fstps
inc
test
addr16
call
call
test
jl
aam
push
aaa
inc
shrb
scas
out
in
and
mov
stc
dec
push
sbb
lea
out
pop
adc
flds
sub
push
icebp
or
sub
outsl
cmc
iret
or
call
jp
mov
leave
sar
xchg
fdivr
out
cmp
setns
jg
pop
dec
inc
out
lret
or
lea
fbstp
dec
out
mov
adc
je
push
mov
in
push
out
dec
gs
outsb
mov
pop
push
lcall
push
push
stc
inc
mov
lock
lds
sti
lods
cmp
sbb
mov
repz
pop
mov
cmp
mov
sbb
pushf
mov
jnp
jmp
cltd
stos
sbb
mov
out
add
fsubrs
mov
stos
push
push
jl
aam
sbb
jb
cmc
add
movsl
or
xchg
je
hlt
xchg
sub
xor
pop
jne
mov
cmp
push
xchg
mov
sub
xchg
jmp
adc
jb
cs
call
jl
push
shll
cmc
roll
jmp
int3
adcl
dec
inc
movsl
add
or
popf
mov
jne
jmp
adc
pop
mov
aam
sub
and
adc
das
push
or
mov
mov
movsl
or
mov
push
in
lcall
jo
orb
xor
leave
xchg
and
mov
addr16
and
out
pop
sub
test
test
aaa
sbb
in
sbb
ret
jl
xor
scas
ja
aam
pop
daa
mov
xor
stos
outsb
add
cwtl
in
or
or
dec
sahf
lds
outsl
jg
cli
js
push
cwtl
cmp
testb
arpl
fsubrl
and
into
loope
pop
mov
mov
push
sub
lock
pusha
sti
ret
dec
aaa
sbb
nop
out
decl
fisttpl
pop
mov
hlt
js
jbe
test
pusha
stos
arpl
sbb
pop
nop
pop
dec
lods
outsb
mov
leave
mov
aam
mov
dec
or
sti
and
and
rep
mov
jbe
daa
daa
pop
jp
pop
dec
lods
cmpl
hlt
fwait
mov
aas
incb
inc
leave
pop
sub
cs
ljmp
adc
mov
ds
popf
mov
movsl
add
daa
adc
jae
jle
outsl
pop
mov
jge
faddl
xchg
arpl
jbe
cmp
jns
or
jp
xchg
and
dec
lcall
pop
xor
xor
xlat
pusha
sbb
flds
das
mov
add
mov
adc
roll
aam
add
lea
outsl
out
test
xchg
xchg
ljmp
xchg
mov
adc
insl
mov
dec
mov
mov
mov
lcall
cmc
inc
sbb
and
mov
sbb
or
pop
cltd
push
and
test
push
jmp
popa
and
es
mov
lods
jns
lcall
add
push
push
mov
ss
and
in
sar
test
and
mov
mov
inc
and
sti
in
mov
scas
std
pop
icebp
or
lcall
add
push
push
mov
xor
js
fidivl
bound
push
leave
jae
xor
mov
mov
pop
jns
push
xchg
hlt
xchg
orl
or
sub
mov
lcall
jmp
jb
and
cmp
adc
lea
lods
and
jg
fwait
rcrb
sahf
fnstsw
call
mov
addb
test
in
dec
cmc
rorb
fs
jne
xor
jle
add
fiadds
aas
movsl
lock
xchg
cmp
jo
pop
mov
das
imul
mov
push
push
jp
data16
imul
icebp
das
add
adc
or
sbb
jne
cmp
fisttps
dec
test
push
gs
lahf
sub
mov
fmull
movsl
xor
popa
sbb
pop
push
mov
lock
mov
jg
in
push
add
test
in
fwait
push
inc
and
dec
mov
mov
or
lret
pushl
jl
dec
int
sub
xchg
or
or
test
push
lahf
dec
or
out
sub
mov
std
sbb
loopne
into
mov
jbe
mov
icebp
dec
mov
push
cmpsl
repnz
adc
and
in
jmp
sbb
push
push
sub
cmp
lar
jl,pt
in
xlat
or
test
fmull
fistpl
mov
pop
dec
out
scas
insb
mov
out
jp
ret
fxtract
mov
xchg
push
popf
mov
cmp
fcoml
cli
rcrb
mov
mov
sub
sub
pusha
test
int
and
jbe
sar
and
cmpsl
pusha
lods
mov
sbb
cmpsl
movsl
push
and
cld
es
xchg
xchg
shrl
xchg
mov
movsl
xlat
cmp
sub
or
inc
imul
cmpsb
dec
shrb
outsl
dec
test
sub
xor
xchg
int3
lock
notb
sbb
cmp
push
jo
pushf
fcompl
inc
jmp
xorb
mov
ficomps
add
xchg
sbb
lret
fwait
incl
hlt
jae
sbb
or
lds
fdivs
dec
sbb
clc
adc
ror
ror
fnstsw
push
pop
std
jae
cs
dec
ret
cmp
unpckhps
lods
into
hlt
pop
arpl
xchg
and
cmp
rcr
jns
addr16
jle
inc
push
and
jl
xor
popl
mov
test
and
sub
enter
add
mov
xchg
xor
js
inc
aas
jne
shlb
jg
adc
xor
out
mov
and
mov
add
xchg
mov
in
imul
mov
loop
insl
repz
mov
movsb
in
sahf
push
mov
xchg
pop
pop
adc
sbb
ret
imul
mov
jo
mov
stos
add
pop
je
aaa
pop
shlb
sub
outsl
je
sbb
xor
je
mov
push
mov
ret
dec
pop
fadd
je
cmp
and
xchg
inc
rclb
jmp
mov
into
jmp
fistl
stos
mov
xor
ljmp
and
shrl
pop
std
clc
arpl
xlat
jecxz
mov
and
inc
inc
outsl
in
sub
sbb
sub
into
in
int3
mov
xchg
flds
cmp
inc
das
pop
inc
fs
sbb
mov
fisubrl
in
test
pop
enter
shrl
jle
jp
jb
fwait
pop
pop
shlb
jo
in
and
fdiv
adc
loop
aad
call
push
inc
neg
or
pop
fmuls
jmp
mov
call
sti
mov
and
cli
mov
push
mov
inc
pop
wbinvd
adc
sbb
inc
cmp
popa
lods
fsts
mov
aam
cmc
jmp
mov
adc
mov
fwait
leave
movsb
fcmovu
inc
mov
pop
rcrb
jle
lods
mov
ret
fsts
addl
mov
cmp
sti
jle
ja
inc
ret
clc
ficoml
inc
aad
mov
push
dec
mov
aas
inc
test
hlt
sti
fs
xor
push
nop
push
cmp
daa
add
cmpsl
shll
push
add
pop
jne
hlt
inc
lds
ss
incb
inc
lods
daa
inc
lret
cmpsb
push
push
add
adc
insl
lea
jno
sbb
jne
jae
fsubs
sub
push
pop
mov
rorb
dec
ja
lret
mov
and
push
aad
lahf
mov
rolb
cmpsb
fsubrs
xchg
fdivl
push
pop
and
sub
adcb
fwait
pop
jle
lcall
xchg
mov
stos
inc
jp
add
dec
shr
nop
fmull
jno
jmp
int3
adc
aad
mov
mov
push
dec
sub
into
mov
aaa
mov
scas
inc
loop
cmc
cmpsl
das
loope
add
jbe
jmp
int3
lods
rol
rcr
jns
xchg
vpshlq
dec
and
popa
in
scas
adc
adc
mov
dec
lds
outsb
jl
or
lret
push
mov
dec
jg
adc
ljmp
out
insl
add
outsb
or
leave
test
popf
outsb
gs
std
lea
lcall
or
les
cmpsl
mov
fldcw
daa
stos
dec
add
mov
mov
mov
outsl
sub
sarb
popf
mov
lret
xor
fsts
fisubrl
lods
movsb
int3
imul
movsb
test
andl
and
pop
call
inc
xchg
test
cmpsb
ret
pop
mov
mov
scas
xchg
inc
mov
divb
push
lcall
or
xchg
fidivl
sub
insl
push
and
mov
jl
mov
jle
cmpsb
jne
bound
add
or
jl
cmp
shrb
fcom
xor
gs
hlt
imul
mov
js
sbb
xchg
rcl
mov
in
cmpl
std
mov
mov
stos
test
xchg
cs
mov
imul
or
outsl
cli
push
cmp
mov
iret
jne
enter
cmpsb
sub
movsl
jno
xchg
or
inc
adc
enter
dec
pop
xlat
mov
mov
or
add
push
sub
jo
mov
jne
mov
rcll
adcl
pcmpeqw
adc
xchg
pop
sub
ficoms
xor
inc
pop
fwait
shlb
mov
das
or
dec
or
sahf
loope
insl
jno
idivb
push
movsb
decb
inc
lret
loope
sbb
xchg
cmc
add
loop
mov
cmpsl
jb
ficoml
jge
push
lds
push
jmp
jp
sub
jae
mov
mov
enterw
mov
add
jge
lds
and
loop
adc
test
pop
or
in
xchg
dec
test
inc
xor
stos
out
inc
mov
fs
mov
adc
aaa
and
popa
or
shlb
addr16
sarl
add
push
cmpsb
adcb
daa
xchg
dec
pop
fcomps
movsl
enter
cmp
jns
mov
daa
popa
test
cmp
jmp
xor
scas
sub
int3
in
jno
js
pop
or
mov
into
or
cmp
mov
pop
icebp
pushf
cmc
je
stos
rolb
jo
sbb
es
push
pop
sbb
add
lods
idiv
sti
adc
add
je
pop
mov
pop
mov
add
inc
mov
push
dec
je
repz
fwait
data16
and
rcrl
mov
jecxz
iret
push
sbb
cmp
or
push
inc
xor
mov
mov
nop
or
mov
nop
je
xorl
sarl
xchg
pop
testl
jmp
and
mov
cmc
aas
sar
in
or
pop
xor
fists
pop
inc
lods
addl
movsb
sub
xchg
cmp
xor
jno
sub
shrb
fdivr
sarl
adc
adc
push
pop
mov
sahf
test
pop
inc
dec
inc
cmp
ds
or
in
and
ds
outsb
xchg
sub
fidivrs
sbb
icebp
shlb
jns
jp
lret
popa
fists
or
pop
cmpl
and
jbe
push
inc
fwait
shr
jo
sbb
outsl
jp
xchg
movsb
mov
fs
fstpt
out
ret
cmp
leave
js
nop
stc
cmp
jg
cmp
mov
jb
dec
xchg
aaa
jmp
mov
je
mov
arpl
in
dec
ret
iret
rcrl
rcll
cmpsb
xchg
mov
mov
add
bound
cli
cld
mov
push
bound
in
imul
adc
dec
xchg
nop
rcrb
loop
mov
pushl
out
outsl
or
lahf
roll
adc
mov
lahf
outsb
sarb
and
push
adc
push
xchg
loope
rcrl
mov
push
jae
lret
rcll
xchg
aam
push
movsb
arpl
mov
sub
pop
cmpsb
and
cmc
lret
mov
ss
dec
jo
pop
stos
ret
push
jecxz
cmp
mov
mov
and
add
dec
xchg
pop
pop
call
jl
and
push
dec
adc
lcall
cmp
add
punpckhdq
cli
fs
mov
sbb
pop
mov
pop
lock
and
xchg
fisttpl
and
pop
insb
jmp
push
jb
sub
dec
lds
dec
test
mov
addr16
push
xor
pop
imul
xchg
pop
out
inc
mov
mov
inc
ror
or
xchg
cmp
mov
add
ds
cmp
rorl
out
jge
sbb
aas
xchg
shrb
in
mov
xor
mov
adc
pop
rol
lcall
jno
mov
ss
mov
sbb
fs
fldenv
mov
cmc
jns
lods
jns
fmuls
sbb
ret
add
cmp
sbb
les
movsl
cs
outsb
call
insl
xchg
inc
movl
mov
popa
insb
and
gs
xor
lea
imul
rorl
stos
adc
aas
add
cmp
push
jne
push
jp
jl
xchg
stos
jl
fimull
hlt
shrb
cmc
jae
lods
je
ds
sub
lock
scas
push
mov
jnp
pop
jb
inc
adc
and
sbb
aaa
js
call
pop
or
rcl
popf
in
cmp
std
cmp
rorb
mov
mov
dec
imull
imul
test
xchg
cmp
xchg
vmaxpd
inc
jge
jns
push
ljmp
xchg
test
lods
mov
das
int3
cmc
movsb
out
push
sbb
or
pushw
fldl
sub
push
punpcklwd
jns
les
inc
mov
movsl
mov
lahf
push
cmpsb
mov
and
adc
xor
ljmp
xlat
js
sub
adc
loop
movsb
adc
xchg
mov
sbb
jp
pop
mov
cmp
shlb
mov
sub
jno
cmpsl
mov
mov
lret
pop
inc
popa
cli
aaa
daa
rcl
and
lahf
fsubrl
fdivs
stc
lods
jmp
add
dec
fwait
cld
nop
daa
lahf
jg
sbb
xchg
pop
pop
mov
insl
add
nopl
sti
adc
jae
cmp
dec
add
enter
adc
aad
cltd
out
xor
add
xchg
outsb
in
xorl
les
ja
bound
fstpt
ds
push
das
in
and
jbe
or
jg
js
mov
mov
fsincos
mov
idivl
das
scas
hlt
or
pop
inc
sub
cmp
pop
std
divb
add
shlb
movsb
aaa
pop
sbb
lret
add
dec
inc
xor
cwtl
fnstsw
bound
xor
xchg
stos
dec
jno
cmp
jb
jb
or
in
lods
mov
mov
loop
loopne
es
out
push
test
movsb
dec
xchg
sbb
jge
adc
jge
adc
mov
loopne
adc
rcr
adc
scas
inc
inc
lret
or
xchg
sub
mov
cmp
adc
push
add
and
jo
dec
mov
stos
test
shll
stc
and
mov
sahf
andb
push
outsl
xor
inc
je
faddl
pop
mov
cmp
jo
enter
lds
xchg
lods
ljmp
jp
das
mov
js
push
clc
mov
push
sarl
cli
mov
or
cwtl
pop
dec
push
aad
outsl
xlat
aam
loope
lcall
leave
cmpsl
xchg
stos
inc
and
test
cmc
fdivs
or
or
mov
popf
imull
mov
arpl
lds
out
repz
movsb
pop
xor
insb
inc
cmp
mov
dec
dec
mov
jae
jnp
cwtl
jo
xor
mov
jecxz
dec
shll
xor
lea
adc
xchg
fcompl
std
jnp
loopne
mov
movsb
jae
mov
imul
xchg
push
cmp
cld
lahf
mov
ja
sub
sub
daa
dec
mov
jns
idivl
dec
xorl
out
fs
xchg
jns
dec
cmpsl
xchg
cmpsb
sub
es
cmpsb
or
clc
cmc
pop
rcl
test
mov
mov
push
cmc
mov
ds
fadds
add
mov
inc
rcl
adcl
mov
movsb
mov
add
jecxz
insb
sub
cltd
sti
mov
mov
push
sub
add
or
movsb
popf
in
push
jno
ja
lret
loopne
xlat
outsl
inc
je
mov
cmp
or
mov
push
mov
xorb
cmp
adc
sub
cli
push
push
ds
jns
push
add
inc
add
jle
jl
clc
sbb
inc
jp
inc
jnp
je
pusha
adc
mov
fmuls
xor
stc
aad
out
ret
dec
fcomp
cwtl
loop
aad
cmp
mov
lea
repnz
add
ds
popa
push
dec
shll
add
dec
push
xchg
jns
jae
movl
rcll
adc
mov
push
jbe
addr16
nop
xchg
into
add
lods
pop
icebp
movsb
daa
rorl
loop
sbb
add
pop
push
mov
mov
mov
dec
sbb
mov
mov
fldcw
int
mov
in
xchg
in
cmp
repnz
loop
add
cmp
mov
add
lcall
inc
ljmp
xor
ja
pop
adcl
addl
rol
cmp
dec
rcrl
call
aam
adc
mov
push
daa
push
push
dec
or
pop
in
adcb
js
jo
test
mov
icebp
pop
add
cwtl
cli
cmpps
jecxz
jle
xlat
adc
in
mov
popa
pop
ret
test
rcrb
ss
xchg
fwait
rorb
fisubrl
lea
mov
out
cli
loope
pop
aas
cmp
lock
loop
clc
stos
mov
in
mov
pop
xor
inc
xchg
scas
push
jns
mov
push
mov
shll
scas
push
loop
pop
dec
in
dec
inc
gs
mov
dec
mov
xchg
xchg
andb
xor
add
inc
rcl
inc
dec
lret
mov
dec
mov
cltd
rorl
arpl
jg
outsb
aad
repz
ret
int3
sbb
ds
jne
fidivrs
scas
ds
xor
or
pushf
jo
arpl
lods
js
fistps
sbb
mov
pop
pop
pop
mov
insl
push
and
sbb
fnstcw
in
push
sbb
call
pop
sarl
jns
adc
je
fisttpll
rcll
js
mov
inc
in
test
mov
mov
dec
jns
push
mov
xorb
cmc
inc
jecxz
fsubrs
cmp
inc
outsb
orb
jbe
loope
mov
dec
gs
lock
nop
jbe
mov
xchg
mov
loop
ffreep
pop
icebp
adc
iret
loopne
fldcw
or
cwtl
push
cmpb
and
jno
push
fnstsw
or
fwait
fs
mov
sbb
mov
xor
inc
je
adc
lds
ss
cltd
mov
dec
clc
inc
mov
jmp
sbb
xor
push
and
fcmove
in
mov
aad
pmuludq
lahf
loope
xchg
lods
inc
adc
jo
lret
jp
pop
or
lods
adc
push
lods
nop
cbtw
insl
popf
adc
shrl
imul
sbb
stos
out
rolb
out
pop
notl
les
pop
mov
inc
fadd
mov
dec
push
jne
ficoml
shrb
imul
ds
lods
repz
movsb
push
lcall
mov
jle
push
insl
mov
clc
or
subl
insb
cmpl
and
xchg
push
cmc
adc
mov
loop
push
sbb
mov
js
xchg
and
lods
and
nop
cli
dec
jge
sbb
push
aam
pop
cld
stos
cmp
lret
leave
inc
mov
nop
add
loopne
dec
repnz
es
and
cmp
push
mov
cltd
stos
mov
data16
cmpsb
push
std
mov
and
in
out
mov
mov
mov
cmc
neg
pop
mov
adc
cmp
clc
jg
cmp
adc
roll
jne
scas
mov
cmp
jb
aam
cmpsb
movb
fimull
out
sbb
rcrl
dec
daa
pop
and
pop
fucomi
cmp
or
shl
dec
sbb
outsb
xchg
push
dec
and
add
jmp
fdivrs
pop
clc
sbb
pop
repnz
js
push
cmp
ret
jns
rol
leave
sub
dec
adc
movsb
mov
lods
jle
lock
xchg
mov
xchg
sbb
leave
pop
enter
int3
mov
daa
xorl
arpl
add
mov
cli
sbb
es
xor
jb
mov
mov
pop
mov
pop
jl
call
cmp
ljmp
sub
shr
icebp
add
push
int3
or
xchg
rol
pop
jl
add
inc
add
aad
cmpsl
sub
leave
fstp
mov
lea
dec
mov
inc
shr
lret
or
lret
push
sbb
movsl
cmp
cmp
dec
mov
adc
push
js
cwtl
cmp
aam
test
hlt
pusha
cmpsw
cltd
cwtl
repz
ret
xchg
add
mov
add
jne
lahf
pop
add
pop
push
je
sarl
gs
aas
push
lds
aaa
or
popf
mov
jp
pop
cld
incb
inc
fsubrp
jge
fldt
std
lcall
mov
fwait
dec
pop
das
adc
js
clc
cltd
in
movsl
rcrl
lods
fstpt
inc
push
jp
hlt
mov
ljmp
out
sbbb
leave
and
scas
mov
jmp
or
xchg
jl
fwait
mov
test
sahf
lcall
ljmp
jle
aad
push
adc
mov
movsb
jl
cmc
ja
cmp
ss
clc
add
xchg
mov
lock
icebp
fstl
inc
mov
lods
in
sahf
pop
pop
xchg
je
jmp
pop
orb
and
push
xlat
aas
fwait
into
and
pop
call
mov
xchg
mov
xchg
cmp
inc
out
mov
pop
adc
stc
or
push
fistpl
xchg
out
mov
ret
push
or
pop
jnp
xchg
xchg
push
inc
xchg
out
dec
mov
or
xchg
pop
popa
adc
ret
ficomps
dec
lods
mov
fmuls
sarl
fistps
data16
push
dec
int3
dec
push
xchg
mov
rdtsc
fistps
jp
push
push
add
cmpsl
call
call
jno
jecxz
lcall
mov
fs
and
dec
iret
push
cmp
in
mov
cmc
and
incb
and
xor
jo
cmp
mov
jp
mov
sub
mov
jle
rclb
adc
xor
sarb
out
mov
ret
outsb
mov
push
push
movsb
fwait
ds
addr16
jbe
hlt
xor
es
insl
fldt
insl
push
jb
arpl
xchg
iret
dec
sti
pop
into
adc
lcall
push
repz
pop
or
jp
xchg
mov
aaa
leave
push
dec
lods
jl
sub
call
rcr
arpl
mov
xor
sahf
cmp
std
test
loop
mov
adc
shll
jns
push
and
mov
xchg
pop
arpl
aad
ds
mov
push
loope
das
dec
push
in
leave
aas
fisubrs
cmp
or
in
addl
xor
and
pop
and
adc
ss
negb
jae
inc
sar
in
outsb
iret
sbb
jl
sbb
in
insl
dec
fsubp
int3
push
mov
test
lds
xor
mov
add
inc
sub
cmpsb
ljmp
adc
int3
cmp
push
pop
enter
mov
pop
test
fnsave
xchg
push
outsl
pushf
pop
jne
mov
mov
cld
int
pop
add
mov
adc
in
fwait
mov
xor
push
outsl
mov
push
xchg
jbe
gs
dec
sbb
das
xchg
xchg
mov
or
mov
jns
xchg
outsb
cld
ja
jl
into
lret
popa
lret
sbb
ret
fmull
pop
add
pop
sbb
sbb
aad
mov
stos
pop
mov
inc
mov
cmp
push
ret
inc
sub
xchg
mov
xor
pushf
sbb
add
adc
or
popf
dec
aam
stc
jg
add
arpl
pop
ret
adcl
jg
shlb
popf
xor
sbb
aaa
shll
loope
inc
or
testb
dec
loopne
mov
mov
pop
jo
dec
inc
dec
sub
or
mov
outsl
test
and
je
stos
gs
outsb
jmp
mov
pop
add
or
cli
and
sahf
dec
lcall
out
push
ficoms
mov
cmpsb
popa
jge
or
and
jb
cmpsb
cmp
mov
xchg
loopne
add
sarl
loop
lcall
adc
lea
jnp
mov
mov
aad
int3
mov
imul
pop
pop
pop
pop
inc
outsb
nop
icebp
into
xor
cmpsb
stos
sub
xor
inc
add
sahf
leave
push
fists
int3
shrl
ror
int
insl
int
push
dec
mov
out
cmp
adc
mov
push
lcall
cmp
pop
inc
sahf
stc
cmp
jl
out
xchg
adc
xchg
fisubl
xchg
out
xor
jl
pop
fistpl
pop
adc
repz
inc
int3
shrl
xor
xor
js
bound
sahf
loope
dec
xor
xchg
xchg
and
subl
icebp
cmc
jl
xchg
shl
stos
push
jp,pn
sbb
push
inc
aaa
xor
popl
mov
ficoml
in
xor
nopl
push
cmp
or
shll
mov
in
data16
push
and
dec
cmp
sahf
stos
push
xchg
lahf
adc
outsb
lcall
mov
mov
insb
pop
mov
leave
xchg
shll
ficoml
mov
rcl
mov
jno
sbb
js
lods
push
and
sub
or
mov
addr16
mov
jb
fs
mov
mov
xor
sahf
mov
sbb
sub
or
pop
jo
fcmovne
movsb
iret
adc
push
imul
repz
out
dec
cmp
xchg
pusha
push
ds
fadds
cmp
or
jae
pop
jae
gs
pop
insl
sbb
fisubrs
addr16
fisttps
mov
jge
dec
jg
cmp
rclb
mov
test
and
inc
dec
add
test
lret
sub
xchg
or
xor
ljmp
jmp
dec
mov
jg
cmpsb
int
stc
outsb
adc
loopne
jns
jae
sbb
pop
out
mov
ljmp
mov
jg
mov
xor
outsl
std
imul
arpl
loop
out
stos
dec
cmp
push
in
je
mov
sbb
into
pop
roll
xchg
mulb
jae
fstl
push
adc
ret
das
je
and
cmpl
mov
sub
adc
inc
xchg
xor
dec
jecxz
push
jmp
popf
in
or
dec
xlat
cmpsl
movd
aad
cmp
xchg
sub
ret
xor
adc
add
jg
lods
cld
repnz
and
mov
insl
pop
mov
sub
fstpt
clc
dec
out
lahf
xchg
cld
mov
test
dec
ss
push
mov
cmp
push
dec
jmp
pop
mov
sub
jmp
sbb
std
daa
jns
out
jns
flds
mov
in
adc
xlat
mov
fsubr
jmp
mov
or
pop
cmc
add
icebp
inc
xchg
ror
in
aad
inc
add
or
loopne
sbb
imul
bnd
cmc
leave
mov
enter
sti
add
roll
sbb
mov
sbb
jp
pop
inc
cmp
int
pop
std
cwtl
ds
icebp
or
xor
bound
or
jge
pop
nop
stos
mov
sbb
cld
or
xchg
xchg
sbb
sub
scas
sub
jmp
mov
js
rcll
sub
insl
sub
lea
dec
fwait
pop
lret
movsbl
push
nop
ret
aas
jmp
or
and
outsl
aad
lock
sahf
sbb
push
sbb
inc
ljmp
adc
scas
out
sub
hlt
xchg
dec
stc
lahf
add
inc
xchg
cltd
hlt
jae
push
jp
cmp
stos
or
pop
pop
mov
into
mov
arpl
or
jb
pop
add
sbb
mov
testb
aad
ret
andb
rclb
xor
sub
adc
notl
pop
mov
xlat
pusha
leave
push
faddl
and
mov
pop
scas
ret
jb
in
inc
cld
jmp
cmc
lods
or
jl
scas
mov
lods
and
mov
dec
es
repz
dec
jmp
lds
lahf
repz
cmpsl
lods
sub
loop
fistpl
sarl
dec
or
jb
xchg
jbe
aad
xor
jl
insb
out
adc
dec
movsl
sbb
mov
xor
jae
pop
sbb
dec
outsb
jae
sbb
std
lret
outsw
lea
fiadds
dec
jg
lea
cli
popa
icebp
mov
cmp
jge
mov
aaa
jnp
insl
int
test
pop
adc
sub
mov
sub
cmp
push
test
push
xchg
rorb
pushf
and
or
fcoms
cmc
scas
push
mov
pop
push
jb
xchg
mov
out
jmp
call
sahf
push
and
in
mov
adc
mov
dec
call
push
lret
mov
dec
pop
inc
sti
mov
pop
jg
and
dec
xchg
xchg
cli
mov
mov
xchg
stos
sbb
sahf
xchg
xchg
ret
inc
xor
mov
rorl
and
sbb
and
cmp
loop
in
pop
rcr
imul
jbe
add
cmc
test
mov
outsb
rorl
outsb
adc
test
mov
in
loopne
xor
adc
ret
aas
inc
aaa
imul
xchg
aaa
gs
test
xor
xor
xor
fsubr
jnp
ss
xor
dec
pop
pop
out
sbb
test
scas
ja
flds
sbb
or
fsqrt
pop
add
outsb
ret
adc
ret
add
cmp
mov
fnstcw
sbb
cmc
scas
lds
insb
jae
iret
add
insb
jns
repz
mov
sbb
push
in
jbe
mov
xchg
repz
inc
rcll
cmp
mov
cmp
pusha
ss
int3
and
jne
ljmp
repnz
sbb
and
stos
pop
add
data16
fwait
adc
jecxz
cmpsb
and
jp
stos
sarl
lret
mov
out
lret
mov
test
add
lcall
or
cmp
cs
movsb
push
xchg
xchg
ds
add
pop
popa
bound
jge
imull
and
adc
rolb
pop
sbbb
jo
daa
mov
pop
repnz
clc
jno
lods
or
enter
sbb
cmp
sbb
push
shlb
ja
jmp
iret
dec
addr16
pop
orb
sub
sbb
movsb
jmp
lcall
mov
arpl
push
in
ds
dec
loop
aad
scas
sub
inc
je
add
lret
imul
out
mov
jg
pop
arpl
lret
fists
mov
popaw
push
repz
lea
imul
gs
jnp
out
mov
mov
cmpb
jg
pop
test
in
mov
cmp
lods
bound
lcall
mov
lahf
loopne
adc
lock
xchg
pop
push
insl
call
notl
jecxz
sahf
addr16
iret
sbb
fidivl
mov
adc
stc
scas
push
enter
leave
popa
inc
mov
add
xchg
sti
mov
bound
xor
pop
fs
mov
jo
xchg
inc
test
aad
loop
stos
pop
mov
mov
xor
push
jg
sbb
xchg
stos
inc
dec
fsubl
push
ds
pop
inc
xchg
xor
fisubrs
test
lock
jno
pop
hlt
sub
or
lds
jmp
daa
ret
rcrb
mov
cwtl
and
fs
push
add
iret
and
popf
int
in
adc
mov
arpl
sbb
push
push
movsl
ret
jae
cwtl
rorl
or
or
in
lods
dec
pop
scas
mov
inc
cld
test
divl
jns
dec
lahf
fwait
inc
cmc
xor
arpl
int
xor
rorl
aad
popa
hlt
xor
xchg
sbb
int
mov
adc
jbe
in
ljmp
ss
lods
jge
lods
inc
fcomi
repnz
cmp
mov
and
jae
jnp
cmp
or
dec
pop
or
push
mov
fs
mov
stc
nop
sbb
out
mov
mov
repz
mov
int
pop
addr16
jb
jns
call
adc
inc
adc
xchg
xchg
and
cmp
xchg
fistl
jge
dec
xchg
mov
dec
xchg
fwait
out
lds
adc
das
outsl
leave
aad
push
adc
and
ja
test
jo
sarb
sbb
add
dec
ret
cmp
std
inc
in
or
and
enter
sbb
fdivrs
pop
faddl
xor
pop
test
lds
out
sarl
loopne
repz
insb
aam
clc
xor
xor
pop
leave
mov
popw
inc
sub
xor
int
and
mov
cmp
mov
repnz
cwtl
ficoml
xlat
jl
mov
xor
and
xlat
cli
scas
cwtl
jae
insb
adc
neg
sbb
sti
mov
push
jl
cmpsl
sub
mov
loop
jle
jp
mov
ret
push
iret
call
testl
repz
ds
clc
dec
into
sarb
insb
sbb
pop
jge
cmp
xorb
vaddss
rep
stos
mov
xor
mov
dec
cwtl
movsl
xor
jp
sub
dec
cmpsb
push
cmp
pop
cmp
shl
test
sbb
in
and
xchg
call
outsl
addps
mov
jmp
pop
inc
loope
ljmp
push
and
push
push
adc
mov
imul
sbb
xor
jle
inc
lods
testb
popf
inc
dec
repz
fstpl
mov
sarb
pop
call
push
sbb
in
dec
pop
jno
subb
ret
and
fidivl
sbbl
xor
aam
adc
adc
lahf
xchg
int3
je
dec
jg
sbb
addr16
mov
inc
mov
push
sarl
fpatan
mov
ljmp
pop
arpl
sub
pop
mov
or
xlat
or
sub
dec
push
jmp
jb
sbb
loopne
test
push
sbb
pop
mov
push
dec
aaa
not
xchg
aam
and
ret
add
mov
test
test
jbe
pop
data16
ja
in
xor
adc
dec
jne
ret
push
mov
arpl
mov
movsb
or
inc
pop
mov
addr16
leave
enter
xor
icebp
and
mov
or
adc
rsqrtps
iret
jbe
mov
add
and
sbb
and
scas
and
jbe
push
inc
cmpl
jns
dec
das
mov
dec
add
insb
sahf
out
pop
loope
fdivl
add
sbb
mov
sbb
sti
mov
insb
out
lret
pop
push
lret
lret
xor
sub
ret
int
adc
hlt
loop
ds
rorb
mov
test
jl
jb
mov
xor
das
cmp
dec
xchg
xchg
test
sbb
lock
repnz
loope
enter
xchg
push
mov
sub
add
mov
scas
movsb
pop
dec
jle
dec
popa
subb
cmpxchg
out
jne
mov
lea
clc
xor
addb
fwait
mov
sbb
cli
and
pop
sti
cmp
or
rol
cmp
push
lea
jecxz
fwait
inc
mov
clc
cli
dec
cmc
imull
mov
jbe
mov
xchg
or
dec
popf
movl
popa
insl
xor
mov
mov
xor
shll
sub
imul
jo
loopne
mov
mov
lods
mov
and
cmp
roll
shll
jnp
push
ret
mov
sti
popf
jnp
dec
add
lds
jbe
add
jmp
frstor
orb
pop
push
outsl
jns
out
add
test
lods
mov
pop
xchg
cs
mov
cmp
add
xchg
add
pop
mov
in
imul
insb
in
jne
xor
jnp
mov
xor
das
lods
stos
sub
add
adc
ficoml
mov
loope
push
sbb
in
xchg
je
stc
add
fnstcw
xor
push
clc
xchg
push
add
jno
leave
add
mov
inc
dec
es
push
pop
pop
mov
fists
push
pop
lea
cmp
stos
hlt
scas
jns
xor
ss
clc
pop
inc
inc
xor
sbb
iret
aam
mov
jne
fnstcw
test
jno
fucomip
mov
sti
jno
out
aam
inc
repnz
pushf
pop
sti
xchg
aam
jg
fidivs
push
loopne
sbb
stos
adc
sti
mov
jecxz
add
cmp
sub
push
add
pop
js
insl
jnp
in
sbb
inc
mov
mov
xchg
mov
xchg
daa
movsl
xlat
mov
inc
btc
add
push
lea
testl
scas
out
sbb
jmp
repnz
scas
inc
mov
mov
ljmp
outsb
pusha
shll
pop
xor
mov
and
xchg
and
les
adcb
push
test
cmpb
clc
xchg
call
fmulp
mov
mov
xor
xchg
inc
mov
push
movsl
lret
mov
enter
test
cmp
mov
add
mov
ss
add
movsb
loopne
inc
xor
out
sbb
push
cli
sub
sbb
shr
jno
popf
loopne
xor
xor
push
jmp
mov
pusha
dec
jno
sub
mov
mov
inc
mov
dec
fwait
setle
aas
pop
into
stc
fsubr
mov
xor
inc
push
cld
and
ss
faddp
call
daa
pop
dec
rcrl
cld
popa
jae
test
sub
les
ds
and
les
mov
mov
clc
mov
xlat
fcoml
test
xchg
and
js
adc
adc
ror
repnz
lds
xchg
sbb
mov
fistpl
push
out
lahf
jle
mov
jns,pn
rol
ljmp
xchg
mov
das
add
movsb
fnstsw
in
sbb
sub
dec
mov
mov
push
sbb
jp
mov
adc
clc
and
ljmp
mov
out
push
add
insb
jg
xchg
xor
jnp
xor
enter
add
jno
cmpsb
cmp
xor
in
xlat
add
hlt
cmp
shl
mov
xor
pop
adc
or
sub
inc
add
pop
xchg
inc
icebp
adc
out
addb
sbb
lea
and
inc
pop
call
lret
sbb
loop
adc
xor
pop
mov
icebp
adc
pop
mov
mov
enter
aad
xor
arpl
mov
and
sub
xor
push
adc
dec
sbb
push
pop
push
iret
cmc
test
push
mov
leave
test
outsb
sbb
test
cmp
mov
sbb
call
jle
rcl
call
dec
mov
mov
mov
test
leave
sub
in
xor
out
mov
xchg
inc
push
leave
ja
clc
rcr
int3
inc
scas
pop
mov
fwait
push
mov
aad
ret
mov
inc
cmp
int
dec
les
jne
mov
or
mov
add
data16
push
les
inc
push
fldln2
data16
mov
lahf
push
fcoms
out
sahf
xor
fnstsw
mov
addr16
popf
lods
loope
int3
or
divl
and
sub
daa
push
lahf
mov
or
mov
mull
mov
mov
mov
dec
mov
insb
repnz
jae
pusha
or
ficomps
popa
es
jge
scas
andb
popf
inc
jle
jns
and
mov
push
aas
lret
jp
mov
xchg
pop
loope
xchg
inc
out
ds
out
dec
dec
fisubs
pop
je
mov
pop
vpmullw
xchg
incb
or
imul
dec
scas
pop
sbb
mulb
lcall
vmwrite
fwait
inc
pop
dec
call
out
xchg
mov
scas
xor
lea
loop
dec
stos
push
movsl
pop
loope
mov
rcrb
loopne
repnz
adc
cld
push
pushf
test
ss
lcall
insb
in
adc
fwait
enter
push
xchg
outsl
andb
out
jle
decb
xor
fsts
sub
inc
dec
add
mov
nop
push
push
mov
adc
push
dec
jbe
iret
sbb
lock
les
jne
test
inc
fistps
and
or
push
js
add
shlb
mov
ret
adc
sub
sub
aad
cmpsl
jmp
mov
mov
stc
cmpsb
dec
shll
jbe
cmp
outsb
aad
dec
adc
mov
and
mov
and
jnp
cmpb
push
mov
stos
sti
lret
xchg
jne
and
mulb
jg
scas
sub
cmp
loop
xchg
ret
adc
pop
mov
xchg
les
pop
push
ret
adc
lea
test
lret
mov
sub
dec
out
rolb
pushf
les
in
call
jp
or
push
xor
push
and
ljmp
mov
push
shlb
xchg
cltd
mov
std
mov
imul
mov
adc
or
outsl
dec
int3
adc
mov
popf
imul
loope
je
jmp
xor
std
mov
test
push
adc
jecxz
xor
push
pop
dec
lahf
jnp
sbb
or
lret
jb
mov
inc
jl
jno
dec
test
sub
xor
jne
push
ds
sbb
insb
leave
outsl
sbb
cwtl
pop
mov
cwtl
cmc
push
mov
push
xchg
jecxz
pop
jb
adc
jp
shr
test
dec
xchg
pop
push
test
adc
adc
fsts
fisubs
xlat
mov
sbb
ret
lahf
movsl
icebp
xchg
fisubrl
ss
test
insl
loopne
jo
inc
insb
jo
xor
mov
pop
mov
jo
mov
call
mov
mov
js
push
out
clc
shll
outsl
jle
add
cmpsb
xchg
mov
arpl
adc
fstps
lods
pop
test
popa
sbb
nop
scas
xor
and
adcl
adc
ja
pusha
add
ret
cmc
add
testb
jmp
adc
dec
jmp
dec
cmp
and
dec
mov
fildll
dec
repnz
push
lret
hlt
call
mov
mov
dec
adc
jp
mov
je
mov
mov
repz
pop
jno
daa
cmc
sbb
call
std
xlat
mov
insb
mov
mov
lods
lahf
test
sub
mov
data16
lret
dec
mov
jle
outsb
mov
push
ret
sub
mov
jp
pop
inc
int3
int
sti
cmp
push
negb
push
push
je
repz
lcall
push
ficomps
jle
test
stc
pop
jmp
mov
add
mov
dec
xchg
pop
adc
jns
mov
mov
or
les
mov
lds
add
inc
out
je
adc
cs
popa
mov
mov
movsl
ret
sub
mov
mov
fucomi
or
je
mov
rolb
push
ret
call
add
lods
push
add
dec
enter
adc
inc
adc
fistpl
mov
mov
das
ret
movsl
out
and
xchg
adc
das
push
mov
fildl
mov
sarb
popa
arpl
jl
cli
adc
adc
sti
rcrb
sahf
mov
aam
dec
mov
and
inc
push
add
pop
lret
cmp
sbb
stc
sbb
add
jg
inc
cmp
fisttps
out
in
mov
enter
cld
stos
daa
das
mov
and
mov
jno
push
dec
imul
dec
mov
or
sbb
cmc
fldl
sbb
in
pop
jp
leave
test
fs
sti
dec
add
sbb
lods
mov
popf
sub
enter
or
inc
pusha
sub
mov
mov
fnstcw
insb
cmc
fcoms
lods
mov
shlb
or
lcall
int
test
mov
cli
jp
std
xor
xor
fsubs
cs
pusha
stos
ror
out
daa
mov
ret
push
hlt
jmp
xchg
test
cmpsb
or
sbb
pushf
pop
aad
stos
das
lods
lock
insb
pop
test
clflush
jle
fwait
mov
xlat
xchg
in
packsswb
mov
jp
fstl
pop
pop
inc
stos
and
orl
xchg
push
test
xor
imulb
cltd
sub
push
and
das
cs
mov
mov
mov
repnz
popa
fwait
adc
out
loope
test
les
nop
cltd
jne
stc
add
adc
lcall
add
fdivrs
xchg
testl
pop
inc
cmp
adc
push
lds
std
mov
pushf
mov
je
mov
enter
insl
mov
push
lahf
lods
sub
daa
push
mov
clc
faddl
jmp
lock
add
cmpsb
or
ret
dec
sub
jge
insb
xchg
add
sub
jns
sbb
push
ja
cld
andb
movsb
or
outsb
jecxz
add
jno
push
inc
push
gs
push
sahf
fisttpl
push
jecxz
into
hlt
stos
aam
aam
push
aam
lock
dec
cltd
cs
add
lret
and
lret
xor
loope
mov
sbb
les
insl
push
out
sbbb
nop
cmp
adc
arpl
in
aad
xchg
jge
movsb
or
fildll
aas
xchg
mov
push
ret
push
jnp
adc
fdivs
mov
in
and
mov
es
jmp
mov
xor
notb
cmp
test
push
and
jnp
push
cld
movsb
mov
dec
inc
sbb
lret
sbb
mov
cwtl
xchg
lods
stc
sub
sub
push
mov
pop
xor
xchg
jnp
scas
outsl
xchg
enter
addl
jns
adc
or
mov
mov
sub
push
mov
ret
out
cmpsb
mov
sbb
test
xor
push
sti
fcmovu
mov
adc
xchg
jecxz
push
loop
mov
repz
cld
jo
scas
add
mov
test
mov
adc
dec
dec
pop
ret
fdivs
int3
jo
dec
mov
into
xlat
clc
pop
lock
cwtl
cmpsl
add
xor
adc
push
sub
sbb
fcmovnb
inc
push
dec
aas
jno
out
and
clc
inc
add
pop
fsubl
pop
lods
lret
push
imul
test
out
rcrl
add
lcall
stc
les
jp
sti
inc
gs
sub
sbbl
leave
and
dec
add
cmp
mov
pop
pop
jb
loop
les
fstpl
sbb
mov
mov
add
stc
lret
mov
fcoms
sbb
add
cli
lahf
mov
test
pop
push
int
jge
je
loop
ljmp
mov
xchg
xchg
lock
nop
xor
aam
rorb
dec
movsl
jl
bound
push
mov
mov
cmp
scas
pop
movsb
dec
orb
mov
push
add
insb
or
lds
lock
dec
pop
xchg
pop
repz
outsl
aaa
push
stos
nop
insl
and
fidivrs
ja
es
xchg
push
add
pop
outsb
icebp
insl
and
jns
and
mov
imul
push
jne
cmpsb
mov
jl
xchg
xor
mov
and
push
outsl
jns
mov
das
mov
cmp
mov
xor
cmp
jnp
mov
test
cltd
push
roll
xchg
mov
test
loope
lods
mov
addl
mov
or
std
ret
in
outsl
in
popa
or
cmp
inc
movsl
jl
push
mov
jbe
into
pop
sub
mov
divl
jns
movsl
mov
shlb
shrl
iret
je
shl
jmp
xor
xchg
pop
icebp
adc
mov
lds
or
and
repnz
xchg
pop
mov
test
mov
cmp
xor
repz
pop
cmpsl
ds
mov
aad
insb
add
data16
push
mov
adc
sbb
sti
dec
test
pop
scas
and
cwtl
rcrl
and
pop
sahf
xchg
inc
cs
aaa
mov
outsl
mov
or
gs
dec
aas
pop
aas
in
ss
sub
mov
ljmp
xchg
mov
push
pop
and
faddl
pop
push
jae
jns
adc
test
xor
mov
pop
sti
lret
adc
xor
pop
adc
daa
cli
xchg
sub
ja
inc
out
mov
sub
xor
or
mov
xor
sbbl
pop
sbb
push
pop
mov
lea
sbb
pop
sbbl
testl
push
cs
push
aas
or
push
imul
xchg
push
mov
pop
iret
ja
jns
push
dec
inc
leave
outsl
daa
pop
lock
pop
stos
jle,pt
test
push
imul
ret
test
fsubs
mov
clc
lcall
or
xlat
je
inc
xor
rorl
sbb
add
pushf
pushl
les
and
pop
mov
insl
jae
dec
pop
ds
cwtl
jp
mov
pop
adc
int
pop
jmp
movsb
push
mov
dec
fbld
test
int
int3
rcll
scas
ret
popf
clc
std
es
mov
add
leave
scas
sub
jae
gs
cwtl
xlat
push
adc
mov
roll
sub
cmpsl
rorb
pop
sbb
shr
inc
lret
pop
push
pop
pop
adc
pop
mov
jmp
sar
inc
xor
dec
aaa
mov
add
bound
xor
dec
enter
shlb
jns
scas
das
in
jae
imull
jge
pop
mov
repz
mov
and
inc
push
popf
mov
dec
add
test
push
inc
movsbl
xor
mov
fstl
push
rcrb
adc
inc
push
and
mov
pushf
aam
pop
mov
mov
mov
out
sbb
jle
sub
lcall
imul
clc
mov
stos
fidivrs
pusha
mov
dec
mov
fldt
add
mov
or
push
mov
ds
movsl
test
pusha
push
mov
js
mov
dec
cmpsl
jmp
shlb
or
add
inc
shrl
mov
jo
xor
lret
adc
arpl
inc
add
jnp
notl
xor
xchg
test
and
in
xchg
arpl
nop
cmpsb
inc
mov
or
sbb
lret
add
roll
pushf
sub
mov
ds
outsl
sub
pop
sbb
js
sti
sbb
mov
aam
pop
leave
push
inc
mov
pop
flds
jl
insl
in
sbb
cs
xor
xchg
push
push
roll
cwtl
jecxz
inc
or
in
fadd
cmpsl
mov
adc
repz
loop
ret
and
mov
pop
or
insl
push
popf
dec
insb
add
pop
cwtl
pop
js
insb
aam
push
fcoms
out
mov
shlb
imul
lods
lods
leave
xor
enter
test
or
adc
mov
insb
pushf
loop
sub
aam
out
lock
lcall
loopne
sbb
sub
cs
fwait
dec
ror
mov
in
mov
sub
push
arpl
fldenv
inc
pop
adc
filds
push
push
in
outsl
arpl
scas
fsubp
xorl
nop
push
lahf
cli
les
and
cmp
add
je
pop
xchg
movsb
adc
adc
adc
fwait
push
mov
paddusb
xor
push
sti
lock
out
popa
mov
and
mov
add
cld
ret
mov
xor
fnstcw
into
xor
adc
mov
les
shr
sahf
pop
push
sub
arpl
test
adc
xchg
pop
xchg
js
mov
mov
push
daa
xchg
mov
xorb
test
hlt
sub
sbb
xchg
dec
push
pop
and
xchg
mov
xchg
mov
call
imul
xchg
into
enter
xor
sbb
xor
and
fldt
jbe
int3
mov
andb
cltd
push
adc
rcl
das
adc
push
fstpl
sub
mov
dec
push
sahf
add
sbb
xor
cmp
lcall
leave
pop
loope
push
or
dec
shll
sti
and
pushf
es
xchg
in
repz
mov
mov
mov
out
clc
inc
jns
and
adc
nop
cmp
push
pop
mov
outsb
out
fwait
pop
icebp
in
imul
mov
cmp
popl
andb
divl
xchg
in
testb
movsl
push
xor
fwait
aam
add
loopne
mov
lods
arpl
in
fistpll
loop
mov
daa
sub
adc
andb
inc
pop
sub
jae
jl
arpl
push
movsl
xor
lea
xor
push
mov
clc
push
or
pop
insl
push
cmp
inc
cwtl
add
and
pushf
sub
jns
push
ret
or
out
enter
mov
push
stos
enter
mov
int
rol
adcb
push
int3
test
cli
cmp
and
and
cltd
js
rcrl
jo
ss
mov
sti
adc
call
adc
sti
shl
dec
mov
jge
fistpll
cmpsb
mov
pop
imul
loop
in
testb
sarl
imul
xlat
xchg
lahf
data16
inc
sahf
add
jne
cmc
icebp
and
dec
xchg
xchg
push
aam
adc
addr16
icebp
jp
inc
and
push
cwtl
je
inc
mov
jne
inc
xchg
mov
in
fsubr
inc
xchg
sub
negl
add
mov
test
mov
add
test
div
sbb
call
mov
bnd
out
jg,pt
jae
lock
inc
pushl
in
gs
hlt
pop
movsb
sbb
dec
shlb
shlb
das
xor
or
mov
add
dec
adc
sbb
xlat
sbb
and
mov
xchg
xchg
push
cmp
icebp
aas
popa
add
mov
mov
ret
insb
pop
fdivr
jge
xchg
rolb
lahf
iret
les
lret
jl
jecxz
jg
les
ja
mov
insl
pop
hlt
xchg
jo
push
pop
into
xor
cmpl
jmp
sbbb
fdivrl
cmpsl
cltd
mov
in
sub
hlt
aam
adc
rcrl
push
sbb
xchg
dec
cmp
sub
push
jo
lds
mov
sbb
add
mov
scas
adc
enter
jns
cmp
or
dec
mov
jg
xchg
pop
dec
dec
jp
cwtl
jae
mov
sub
sbb
mov
popa
mov
jnp
arpl
cmc
add
out
repnz
and
pop
push
scas
sub
mov
sub
sub
fiadds
out
in
push
xchg
mov
insb
stos
mov
and
push
test
iret
inc
and
fs
jnp
jecxz
in
test
and
pop
pop
cvtps2pd
dec
shll
cmpsl
cmp
pop
sar
push
sbb
jns
jb
daa
pop
adc
pop
sbb
std
rcrb
pop
jmp
lahf
push
shrb
mov
neg
fisubs
stos
lods
add
inc
sbb
lahf
push
mov
lea
popf
push
ret
outsw
mov
frstor
mov
push
jg
mov
bsr
mov
cwtl
mov
dec
in
aas
daa
lcall
push
into
sbb
inc
mov
ljmp
jecxz
xchg
in
mov
xor
cmpsl
lods
adc
xchg
out
daa
fsubrp
sub
inc
sbb
pop
pushf
pusha
clc
and
mov
push
clc
outsl
mov
push
cmp
bound
iret
aam
sub
fcomi
push
lods
push
daa
adc
xchg
stc
in
fdivl
inc
test
mov
inc
lods
out
pop
and
push
push
lcall
mov
fbstp
add
push
shlb
inc
inc
fdivrp
movsb
xchg
or
dec
adc
stc
jmp
xchg
mov
cmp
or
js
shlb
mov
mov
lret
mov
xchg
pop
push
aam
clc
stos
dec
mov
sahf
outsb
ljmp
call
push
sub
and
mov
call
mov
jb
dec
mov
sahf
jb
inc
test
into
jmp
xor
mov
aaa
movsb
dec
xorl
sbb
loop
mov
scas
je
mov
push
out
adc
mov
stos
push
adc
push
insb
int
dec
bound
add
ja
cli
ja
icebp
push
add
mov
push
inc
loop
inc
push
xor
arpl
sub
lahf
test
lock
push
daa
pop
test
cmp
cmc
loope
js
xchg
jno
lret
ja
mov
xlat
xlat
ds
movsb
mov
dec
popf
pop
mov
adc
xor
dec
inc
rcrl
and
mov
xchg
nop
cmpsb
maxps
sub
stos
popf
stos
dec
sar
iret
push
and
movsb
test
arpl
aaa
pop
cmp
push
ret
test
mov
ret
mov
inc
lods
ud2
aad
ja
cli
cmc
lds
mov
aam
or
xchg
pop
mov
push
xor
jbe
es
push
out
adc
inc
imul
bound
mov
jnp
mov
addb
loop
lahf
lds
and
shll
dec
push
mov
stos
and
stos
adc
pop
mov
adc
inc
sub
cltd
cmp
mov
jl
aas
push
pushf
lcall
adc
mov
mov
xchg
ret
cmp
cltd
xchg
and
xor
in
aaa
dec
aam
dec
mov
enter
dec
xchg
stc
mov
pop
and
cwtl
js
jnp
rcrb
fiadds
cmp
mov
cmc
pop
add
stc
cmp
ret
mov
mov
add
cmp
decb
loop
cltd
loope
push
ffreep
in
add
daa
frstor
mov
cmp
call
ret
fcoms
cmc
xchg
inc
cmp
pop
mov
jno
mov
jne
and
lret
and
mov
jb
mov
cmpsb
test
out
pop
negl
daa
inc
and
mov
adc
sbb
and
jnp
lcall
insl
sub
sarb
pop
jne
sub
aas
push
hlt
mov
mov
mov
mov
inc
lss
push
jp
jae
mov
les
bound
sbb
mov
ja
xor
xor
adc
xchg
xchg
imul
add
dec
cltd
icebp
and
adc
jecxz
push
mov
lea
add
add
shrl
fisttps
aas
and
cmpsl
arpl
bound
lods
aad
mov
sub
sti
out
pop
and
test
stos
ds
mov
clc
daa
pop
pop
cmp
or
jae
in
stos
lea
xor
cmpsl
out
dec
aad
iret
aas
ss
lret
ds
add
sti
sub
jo
xchg
mov
xor
dec
push
mov
je
int
das
push
lods
add
imul
rcr
fsubl
movsl
push
mov
orl
into
insb
xor
push
mov
push
enter
lods
fs
push
jns
fs
mov
fcoml
or
ds
sub
inc
pushf
punpcklwd
lock
loop
psubsb
xlat
fisubrs
jae
push
mull
stos
jo
movsl
or
orb
jecxz
cmp
popa
fcompl
orl
lret
xchg
mov
das
bound
out
and
sbb
mov
push
sbb
loope
mov
rcll
divl
cs
dec
inc
into
lock
xchg
fs
mov
jno
icebp
jp
dec
repnz
inc
andb
cmp
mov
hlt
fwait
ljmp
pop
pop
or
cmp
sub
cld
daa
fld
sahf
or
orl
pop
pop
mov
mov
fcoml
das
xlat
push
nop
adc
sbb
dec
cmp
inc
mov
rcll
push
add
jmp
ret
addr16
not
mov
or
mov
cmp
add
xor
mov
int3
adc
ret
inc
fcoms
push
loop
scas
leave
pop
mov
fldt
std
mov
push
push
in
js
dec
ljmp
adc
dec
in
jmp
std
jl
out
push
imul
mov
rol
xlat
xchg
or
clc
enter
movsb
and
cs
sbb
mov
icebp
jecxz
mov
or
inc
and
and
add
ds
mov
mov
jge
cmp
jg
xchg
aad
shlb
out
mov
cmp
xchg
adc
sub
test
jb
and
lret
pop
mov
sub
sbb
mov
jnp
gs
xor
or
add
clc
mov
mov
int3
push
jg
lods
icebp
jbe
ss
add
popa
jge
mov
push
cwtl
test
dec
popf
xor
mov
xor
popa
scas
scas
pop
popf
insl
cmp
mov
lods
cmp
push
lea
mov
or
in
pop
out
ss
adc
daa
and
inc
pop
mov
cwtl
jne
mov
js
pop
xchg
xor
fsin
and
out
rcr
dec
mov
scas
xchg
adc
pop
cmpsb
out
in
bound
sahf
in
pushf
push
aaa
jnp
shrl
insl
ja
cmp
xchg
push
adc
icebp
fwait
je
ljmp
mov
push
sti
inc
pop
cld
xchg
xorb
pop
sbb
dec
sar
in
dec
pop
mov
inc
bound
fs
movsb
xchg
icebp
and
and
out
ret
push
stc
mov
rcr
ljmp
cmp
shlb
xchg
fwait
aad
popf
stc
loopne
fpatan
testl
int
out
xchg
scas
mov
jmp
das
movsl
cli
leave
mov
iret
pop
popa
inc
fwait
fs
loope
repz
mov
ljmp
cmc
xchg
scas
lahf
pop
test
movsl
xchg
leave
icebp
and
cmp
push
fsubp
dec
add
into
sar
leave
xchg
ljmp
jae
stc
jp
sbbb
xor
and
xchg
shrl
rcrl
mov
icebp
shrb
push
imulb
jl
mulb
jne
add
adc
dec
jp
push
cmpsb
mov
cmpsb
ret
in
enter
fstpt
ljmp
push
rcll
xchg
sub
pop
shlb
lahf
mull
xlat
adc
push
push
xor
stos
cltd
cmp
loope
cmp
cwtl
shrl
notl
push
xchg
xor
jp
das
or
out
ss
add
or
inc
pushl
orb
mov
out
es
inc
mov
pop
pop
out
or
in
pop
sub
andl
shr
jbe
and
sbb
mov
mov
jecxz
mov
pop
mov
lds
les
xlat
mov
mov
pop
mov
in
xchg
cmpsl
test
sub
aas
lret
mov
mov
es
fidivrl
add
jge,pt
mov
mov
insb
adc
or
insb
dec
cmc
jge
add
gs
fwait
sbb
sbb
mov
inc
pop
pop
pop
stos
cld
push
add
jecxz
adc
and
inc
shll
lods
mov
nop
stos
mov
out
pop
lahf
jmp
jmp
andb
arpl
stos
mov
and
addr16
inc
push
jns
inc
jo
insl
movsl
and
sbb
imulb
in
mov
jo
mov
cmp
mov
sbb
lods
jae
loopne
inc
cmpl
stos
iret
push
sahf
iret
adc
ja
cmpsb
fcmovne
into
das
mov
xor
out
outsl
int
stc
xchg
arpl
or
xchg
xchg
insb
and
movsl
dec
out
and
push
inc
adc
sbb
mov
sub
xchg
sbb
imul
test
shrl
push
stos
movsl
adc
imul
dec
mov
mov
test
or
sub
cmp
cmp
fs
push
out
dec
or
jle
push
fstps
mov
and
pop
jge
xchg
inc
in
adc
pop
data16
mov
pop
lea
inc
jmp
sub
out
mov
jnp
or
pop
data16
inc
daa
xchg
pop
arpl
cmp
icebp
add
in
clc
in
les
sub
or
sbb
or
mov
fucomip
or
inc
add
std
push
loopne
pop
out
xchg
mov
jns
add
push
push
insl
jae
cld
ljmp
jg
push
xor
mov
fdivl
andb
cmpsl
ret
dec
or
popf
xor
xchg
mov
inc
pop
pop
movsl
mov
push
movsl
mov
fcomi
stos
dec
xlat
xorb
js
iret
aas
shl
jmp
outsl
or
mov
stos
sahf
imul
pushf
mov
pop
cmc
and
iret
fisubl
aam
cmp
stos
mov
mov
lret
jo
out
mov
cmp
jge
adc
mov
mov
xor
mov
mov
or
and
mov
cwtl
push
jb
mov
insb
pop
es
lods
sti
or
pop
out
ss
and
inc
sarl
out
cmp
mov
jo
hlt
mov
mov
jnp
cmc
and
data16
lods
sbb
mov
mov
dec
or
cmpsb
sbbb
mov
int3
mov
incb
cltd
mov
jae
fsubs
jbe
inc
out
mov
sbb
inc
js
pop
xchg
cltd
pop
lret
or
add
nop
into
out
push
insl
sahf
pop
loopne
cs
cmp
lock
mov
sub
or
fisubs
cmp
jne
test
inc
loopne
test
pop
cmp
xchg
stos
fcmovbe
adc
inc
jno
add
dec
je
dec
pop
mov
inc
push
pushf
jo
adc
dec
mov
aas
mov
xor
add
sti
xor
xchg
out
negl
icebp
jg
xchg
pop
stos
aaa
jle
jae
push
insl
push
out
adcl
cmp
mov
out
mov
stc
mov
fistl
fistpl
mov
iret
dec
out
sarb
fcomi
inc
sahf
adcb
dec
test
cmc
mov
mov
cs
jno
xor
adc
repz
lcall
inc
lret
test
hlt
popf
xor
icebp
repnz
jl
roll
push
sub
scas
adc
arpl
lahf
cmp
sbb
xor
lahf
dec
push
mov
xor
pop
xchg
pusha
and
addr16
push
in
push
dec
roll
add
jle
in
inc
into
pop
xor
aam
xlat
mov
out
xor
dec
or
fildl
jno
or
add
pop
xchg
pop
mov
shlb
mov
mov
pusha
icebp
std
rcrb
mov
fwait
scas
mov
int3
jmp
mov
aam
mov
cs
aaa
in
imul
xor
inc
sbb
idivl
xor
rclb
jns
loop
cs
adc
add
and
mov
pop
sbb
add
jle
fsubl
jns
shl
dec
sub
xlat
ret
pop
cld
sub
sarl
xlat
scas
adc
cmp
out
dec
mov
out
xor
adc
dec
mov
mov
jecxz
or
and
cmp
jle
outsb
adc
add
push
and
mov
shll
lods
inc
scas
mov
mov
lock
mov
xor
ja
push
mov
test
jmp
push
lret
push
rcl
or
pop
cld
in
test
lods
ss
cli
bound
dec
xor
xor
ficompl
mov
push
cmc
or
pop
or
stc
loope
mov
xchg
lea
into
fstpt
mov
sub
enter
mov
sub
sub
jo
nop
jo
push
jo
das
mov
add
mov
jbe
outsb
and
add
jecxz
dec
jecxz
pop
dec
outsb
fdivp
xchg
ret
xlat
sub
loopne
movsl
push
cli
inc
shl
xor
shrb
mov
cmpsb
mov
inc
inc
jbe
sub
fmulp
add
mov
outsl
es
fs
inc
sbb
adc
xchg
jg
out
pop
mov
sahf
xchg
iret
pop
adcb
push
shrb
xchg
and
fadds
adc
mov
xchg
bound
pop
jmp
dec
mov
sub
movsl
fwait
xor
imul
push
ret
outsb
ret
dec
andl
dec
adc
xlat
add
and
dec
jge
or
repz
insb
xchg
sti
popf
sbb
test
mov
push
xor
outsl
push
lock
mov
add
xor
add
inc
and
int3
pop
rcll
xor
mov
push
popa
scas
dec
in
jno
cmp
jp
ja
rol
xchg
lds
jl
ret
and
icebp
mov
popa
adc
sarb
loope
leave
cmp
push
jne
mov
pushf
or
mov
repnz
ds
bound
shl
les
jbe
and
xchg
rcll
pop
shlb
aas
ljmp
ljmp
xor
lea
xchg
fcomi
sbb
pop
adc
cmp
rclb
out
out
call
pop
lea
outsb
xchg
out
xor
mov
dec
xchg
dec
cmpsl
fwait
ja
mov
and
push
sub
cltd
insl
xchg
or
and
arpl
filds
pop
pushf
mov
into
test
out
or
add
mov
fistpll
adcb
inc
pusha
xor
int
in
mov
not
push
sub
imul
lock
cmpb
pop
outsl
xchg
loopne
mov
cli
mov
cltd
lods
jge
cmpsl
in
dec
add
mov
xlat
or
xlat
xchg
and
movsl
or
mov
inc
jmp
adc
adc
push
repz
addr16
cmp
jecxz
jb
inc
clc
mov
in
pop
lahf
pop
imul
xchg
jg
fs
push
rcl
or
loopne
jg
adc
sub
daa
mov
jl
enter
aad
sbb
mov
adc
cmp
mov
xlat
ret
and
fldenv
lret
cwtl
sbb
push
sbb
les
or
outsl
push
mov
inc
mov
ret
clc
test
mov
adc
outsb
out
xlat
ret
data16
add
test
roll
jp
imul
fwait
sahf
shll
jp
in
push
sub
shll
pop
out
xchg
je
sbb
call
mov
push
cmp
push
or
ljmp
and
scas
lcall
insl
imul
addr16
mov
dec
int3
sti
dec
jecxz
jns
shll
adc
aam
imul
or
xchg
mov
sbb
clc
mov
xlat
test
sbb
into
push
mov
xor
dec
sbb
cmp
add
mov
lea
push
xchg
inc
or
mov
imul
mov
leave
fnstcw
push
inc
pusha
jg
cmp
mul
mov
pop
fdiv
sbb
and
jmp
nop
sbb
popf
mov
or
fwait
and
push
add
out
sbb
or
jno
mov
jo
fnsave
decb
jo
inc
mov
dec
pop
fwait
cmp
pushf
std
std
stc
dec
push
ja
pop
pop
gs
push
dec
push
ljmp
test
add
ljmp
xor
popa
add
push
fidivl
imul
in
test
fistpl
mov
jmp
mov
jg
pop
popf
inc
dec
loope
pop
in
push
jbe
xchg
out
dec
int
lahf
pop
mov
cmp
mov
pop
testl
push
push
or
sbb
jae
out
pop
add
loope
mov
mov
xchg
pavgw
mov
fcomp
imul
sbb
call
jge
jp
push
mov
cmpsl
sub
mov
mov
pop
cmp
xor
icebp
repz
leave
addr16
fs
orb
ret
or
pop
sbb
ficomps
mov
or
sbb
mov
adc
fsubrl
int3
cmp
cmpb
jle
in
mov
and
adc
xor
mov
fbstp
jecxz
jge
stos
sbb
dec
clc
pop
xchg
enter
jg
and
imul
cmp
call
shrb
cs
and
pop
lea
jl
ret
lret
sti
mov
std
adc
add
repz
das
fdiv
into
fsubrl
cwtl
fcomps
andl
movsb
inc
adc
int3
leave
sahf
outsl
fucom
addr16
inc
fldenv
mov
hlt
icebp
aaa
cmpsl
cltd
push
push
movsb
popa
arpl
test
cmp
xlat
or
xor
cmp
fidivrl
movsb
or
inc
les
jg
push
hlt
arpl
mov
xor
nop
bound
sahf
cmp
cwtl
dec
mov
cmp
jmp
popa
sbb
push
lock
sbb
xor
push
mov
mov
std
adc
lods
or
xor
lcall
pop
push
xor
mov
sbb
dec
push
ret
lahf
or
mov
sub
arpl
inc
loopne
pushf
dec
ret
sahf
out
add
scas
movsl
popf
sub
fwait
out
mov
jb
sahf
fucomp
inc
bound
adc
jmp
xor
and
out
out
pop
insl
iret
xlat
jo
stos
pop
mov
add
mov
jnp
lahf
or
popa
rorl
scas
inc
dec
and
lds
fdivrl
mov
add
mov
ja
pop
sahf
pusha
xor
mov
inc
aaa
lret
sbb
add
mov
push
sub
sbb
es
cmpb
push
enter
jns
js
cmp
push
add
stos
jno
cmc
mov
cmp
pushf
loop
data16
and
imul
andb
cmp
jnp
dec
sbbl
mov
sub
dec
pop
arpl
sbb
mov
xor
add
lock
push
jne
and
fisttps
fsubl
cmp
fildll
je
sbb
outsl
cwtl
cmp
inc
out
inc
test
or
pop
dec
push
js
adc
mov
mov
jmp
mov
mov
lcall
dec
inc
xlat
sbb
sub
jo
cmp
dec
aam
jmp
mov
inc
pop
fdivl
std
cmp
inc
stos
lahf
push
pusha
push
imul
mov
and
push
je
and
cmc
sbb
cld
cli
xchg
sti
sbb
sbb
mov
sbb
xchg
std
xlat
xor
imul
add
inc
push
inc
mov
or
pop
inc
fistl
clc
addr16
outsb
or
push
decl
es
ss
enter
jnp
inc
and
je
pop
incb
test
mov
insl
sbb
ret
adc
lock
into
sbb
fmul
mov
push
nop
mov
jo
aaa
lock
into
stos
xor
push
push
sbb
hlt
fnstcw
pop
insl
jo
jb
mov
add
inc
imul
addr16
lret
insl
and
fwait
pop
punpckhwd
rolb
icebp
mov
mov
cmpsl
pop
sub
sti
mov
loope
cld
dec
adcl
aad
mov
dec
sub
jge
cld
ror
jnp
push
loop
ret
cmp
xor
and
in
movsb
jne
jl
daa
cli
mov
xchg
ss
mov
fwait
xor
cmp
xor
or
xchg
lds
pushf
mov
adc
in
mov
idivl
or
in
xchg
ja
inc
in
loopne
mov
jnp
mov
mov
mov
out
stos
lds
aam
inc
adc
test
push
dec
adc
testl
mov
jb
or
push
dec
test
subl
inc
cmp
andl
push
into
popf
js
insb
mov
jecxz
lahf
aas
push
fs
int3
enter
shll
cmp
mov
lret
repnz
lea
hlt
in
sbb
sub
pop
inc
push
dec
sbb
sbb
in
adc
ret
iret
pop
jne
out
shlb
aam
stos
repz
mov
shl
call
mov
sahf
pop
cwtl
inc
faddl
add
lret
xchg
xor
scas
cmpsl
cmpsl
mov
jge
fs
ret
aam
clc
mov
mov
xor
repnz
xchg
dec
or
icebp
inc
sbb
xor
aas
jecxz
and
outsb
push
lret
jae
jnp
mov
test
pop
lds
adc
sbb
repnz
xchg
mov
stc
push
bound
push
mov
xor
data16
adcl
scas
xlat
loop
xor
mov
jae
sbb
cmp
pop
mov
dec
sbb
inc
fmul
stos
stc
popf
pop
aad
into
sub
sti
pop
cmpsl
andl
adc
movsb
xor
push
in
add
adc
fs
xchg
xchg
adcl
ja
sub
dec
push
insl
in
setl
lcall
test
jg
rcrb
cmp
add
xchg
push
pop
inc
nop
sbb
push
decl
enter
add
push
dec
mov
sbb
ficoml
inc
aad
xor
clc
jmp
aaa
ret
xchg
in
and
mov
adc
loope
xor
xor
mov
sbb
push
in
das
scas
popa
out
adc
nop
cmp
push
aam
ss
not
and
stos
sbb
pop
ljmp
outsb
fidivrl
pop
dec
out
mov
lcall
pop
lods
leave
out
scas
in
test
mov
xchg
sub
and
loop
inc
leave
pop
push
cs
loop
inc
ljmp
and
pop
jb
xor
push
inc
push
and
push
lcall
mov
ds
pushf
and
add
xchg
xchg
es
adc
sahf
xchg
cmc
pop
push
xchg
test
out
icebp
xor
fistps
jbe
cmp
cwtl
ret
popf
test
jp
inc
inc
fildl
add
inc
add
dec
rclb
enter
sarb
push
popa
addl
mov
leave
sub
cld
pop
sub
loopne
push
adc
sbb
out
push
dec
sub
clc
outsl
mov
jns
dec
sbb
jge
lods
inc
mov
mov
pop
dec
mov
push
cltd
xchg
andl
jns
arpl
adcb
pop
into
sti
sub
ja
push
add
mov
sbb
pop
sbb
xchg
repnz
stos
jae
je
mov
pop
pop
sti
push
dec
into
xor
call
push
lea
mov
xchg
cmpsb
push
es
xor
mov
mov
inc
jg
pop
xor
shl
data16
inc
xlat
testl
add
mov
mov
xor
bound
xor
jecxz
lock
dec
pop
sbb
dec
inc
fldcw
mov
sarl
dec
pop
jbe
jmp
pop
push
push
mov
mov
adc
adc
and
lcall
pushf
jbe
and
cmpb
sbb
and
imul
cmc
and
and
cmp
pop
fadd
lahf
int
sub
sbb
mov
xor
sub
pop
jno
call
pop
cli
test
jo
xor
mull
fcoms
imul
loope
and
lret
dec
mov
jge
pop
mov
lcall
xlat
std
jnp
push
subl
mov
js
into
push
addr16
inc
cmp
mov
push
jl
stc
testb
sbb
cld
divl
xchg
movhps
outsl
sbb
test
cmpsb
cmpsl
push
cmp
int3
pop
out
mov
jae
bound
cmp
jno,pt
decb
sbb
sbb
int
dec
adc
mov
jmp
mov
fstpl
inc
or
or
hlt
sbb
lret
push
adc
aad
add
mov
xchg
mov
addr16
jmp
test
out
sti
adc
mov
stos
cmp
adc
cmpsb
or
xchg
int3
shrb
mov
xchg
mulb
or
push
imul
sub
test
je
lods
rclb
mov
arpl
jl
cli
mov
nop/reserved
or
and
xchg
mov
inc
daa
out
cmp
mov
ljmp
jae
pop
dec
sub
mov
cld
das
neg
sti
or
cmpb
sbb
add
jnp
jecxz
xchg
insl
dec
fmull
aaa
cmp
mov
sub
pop
add
and
fbstp
loop
adc
or
push
js
push
xor
ret
sahf
sub
jmp
jle
fwait
stc
je
fiadds
inc
inc
mov
dec
jb
dec
mov
fistpl
cmpsl
mov
mov
push
cs
clc
out
mov
dec
inc
rorb
int3
jge
pop
mov
inc
mov
jecxz
or
cmp
sahf
sub
pop
hlt
mov
outsl
and
cmc
inc
mov
or
mov
scas
cmp
push
into
xor
js
mov
sar
xchg
bound
imul
mov
sar
imul
pop
pop
pop
ljmp
sub
sbb
js
ljmp
jnp
test
dec
sub
add
leave
push
sub
test
cmpsl
mov
mov
mov
sbb
inc
and
and
cmp
stos
cmp
mov
xor
loopne
ljmp
mov
fisttpl
sub
imul
mov
mov
and
cmp
ljmp
mov
mov
arpl
shl
hlt
ret
setge
add
ljmp
jae
push
dec
cmp
mov
adc
jge
stos
push
pop
pushf
lds
loope
or
lds
dec
lds
or
jge
inc
les
lahf
cmp
cmp
mov
sbb
xchg
ror
dec
shlb
out
arpl
fnsave
scas
pusha
adc
mov
sbb
xor
gs
push
outsl
not
mov
pop
pop
push
movsl
mov
loopne
push
je
inc
pushf
dec
and
sbb
aam
dec
arpl
sub
sar
fadds
bound
push
lcall
rcll
adc
inc
je
test
dec
test
jnp
call
enter
arpl
shrb
xor
inc
xor
xor
mov
sbb
or
pop
dec
or
dec
sub
jg
add
jmp
pop
shr
lret
push
add
sub
shr
xor
mov
mov
lahf
pop
int
jecxz
aas
pop
mov
aad
mov
gs
add
push
mov
fucom
push
jb
in
sbb
pop
fists
fistl
mov
subb
inc
and
nop
xchg
aad
jl
testl
push
cli
loop
pusha
test
mov
adc
jecxz
ja
cmp
inc
xor
inc
or
shl
subb
and
decl
adc
fcoml
arpl
add
cld
data16
popa
loop
insl
sub
sub
and
mov
imul
insb
jb
pop
popa
mov
adc
push
aas
jo
mov
sbb
rcll
or
mov
outsl
jp
sbbb
daa
xchg
jne
pushf
mov
mov
mov
sub
and
inc
sbb
dec
rol
outsl
imul
ljmp
push
ljmp
dec
dec
leave
icebp
xor
cmpsl
ret
out
mov
int3
jp
xor
mov
pop
mov
test
test
sub
push
adc
sti
xchg
imul
aaa
mov
int
fldcw
mov
aaa
fisubrs
scas
inc
pop
jns
int3
adc
or
out
dec
pop
ret
ss
and
sbb
stos
jecxz
pop
mov
add
fldt
iret
inc
cmp
xor
and
mov
movsl
test
and
adc
mov
out
dec
test
push
pop
insl
ja
jnp
dec
mov
aad
addr16
cld
scas
jg
cwtl
mov
mov
pop
loopne
in
jno
or
nop
ss
test
nop
mov
test
clc
cmp
xor
pushf
xchg
adc
add
xor
ljmp
mov
cmpsb
add
pop
leave
xchg
scas
mov
push
scas
rol
jmp
fbld
popa
push
xchg
gs
cmp
push
cvtps2dq
pop
xor
mov
mov
in
cmc
aaa
movsb
mov
out
insb
mov
cli
xor
test
bound
movsl
inc
mov
in
jns
dec
aas
lcall
int
xchg
test
pushf
cmpsb
clc
aaa
pusha
push
inc
add
sub
cmp
push
and
notb
add
hlt
push
inc
mov
repnz
daa
lcall
sti
mov
mov
das
jge
inc
xchg
mov
push
les
loope
cmpb
and
mov
inc
pop
jns
iret
stos
jmp
sbb
xor
call
sbb
shll
nop
arpl
stc
sbb
bound
mov
adc
lret
jne
mov
stos
rclb
pop
lahf
dec
add
or
and
iret
cwtl
movsl
sbb
test
mov
and
lcall
pop
mov
xchg
orb
mov
jne
leave
stos
fnstsw
mov
xchg
add
add
fs
insb
lret
stos
pop
mov
add
pop
sub
aam
push
loop
adc
sbb
lds
es
lds
sbb
fwait
xor
sbb
mov
stos
loope
mov
cmc
int3
inc
xchg
pop
xchg
fistl
imul
lea
outsl
inc
cmp
test
nop
lods
cmp
icebp
inc
aad
ret
dec
ret
pop
or
push
mov
sbb
mov
xor
sbb
xchg
sbb
jnp
push
cmp
adc
ret
loope
jo
out
lcall
xor
ss
mov
loop
pop
xchg
movsl
mov
aad
fnsave
jnp
mov
test
scas
clc
test
fidivrs
enter
into
dec
pop
dec
mov
filds
adc
sarl
das
xor
adcb
push
iret
mov
sbb
pop
fisubs
push
lea
sub
mov
push
fwait
inc
ds
data16
jae
pop
fistpll
pop
sub
into
cmp
scas
aaa
sahf
mov
mov
bound
cmpsb
andnps
addl
and
push
push
jmp
and
mov
push
cmp
jmp
jae
ret
jg
out
je
push
push
xor
repz
mov
push
je
push
test
mov
sbb
xchg
test
xchg
imul
jo
inc
pushf
shlb
test
es
pop
dec
ucomiss
outsb
push
or
aaa
and
pushf
cli
data16
mov
int3
and
incb
jg
and
dec
cwtl
vpackuswb
fbstp
sahf
inc
inc
inc
insb
lods
sub
xor
dec
ret
test
adcl
orl
scas
cli
jle
sub
mov
xchg
adc
lods
push
addr16
mov
iret
jmp
jne
lcall
rcrb
imul
push
fcmovbe
fs
subl
push
mov
icebp
inc
or
jae
mov
mov
popa
imul
dec
out
fsubr
mov
test
mov
stos
mov
mov
sti
mov
add
int
ss
jge
mov
jae
mov
cmp
push
mov
or
daa
sbb
les
push
loope
mov
cmp
fcmovb
fs
xor
push
ljmp
dec
jbe
aaa
sub
mov
jbe
aaa
pop
cmpsl
fldenv
mov
ds
mov
adc
imul
push
icebp
xchg
loope
xchg
fistl
lcall
dec
fwait
lcall
imul
add
inc
lods
idivl
push
inc
mov
sub
xchg
and
insl
inc
stc
testb
sub
mov
hlt
ljmp
or
dec
dec
int
imul
mov
ljmp
ds
adc
xor
jb
cmp
pop
subb
mov
gs
js
and
dec
enter
clc
cmp
lret
sub
sub
mov
lret
jl
int
lret
add
lret
scas
popf
mov
mov
mov
lods
mov
cmp
push
cltd
cmc
rorl
aaa
add
sub
inc
push
xlat
and
inc
std
bound
jmp
ret
add
pop
xchg
mov
fs
or
lret
sarb
add
scas
xor
ljmp
fadd
and
cmp
test
sbb
ss
xor
flds
cmc
jb
xchg
ja
jo
or
frstor
repnz
xor
mov
cmp
int
orb
push
rorl
rcl
push
adc
cmp
pop
cld
leave
inc
adc
mov
repz
xchg
mov
clc
daa
cli
cmp
sbbb
xor
sbb
hlt
mov
ss
les
sbb
ja
sbb
test
sarl
jl
fdivrl
push
aam
in
orl
lea
nop
xor
inc
mov
lea
loope
test
jno
adc
nop
xor
repnz
push
loop
scas
pop
fisubl
push
jo
loopne
jbe
int3
xchg
pop
push
jl
daa
adc
ret
stc
pusha
add
std
or
xor
jg
jp
lcall
mov
sbb
sbb
pop
movsb
dec
cmpl
pop
les
xchg
pop
xor
mov
jge
mov
sti
mov
inc
pusha
jb
dec
xchg
movsb
sbb
fimuls
bound
bound
das
xor
cli
fisubrl
aam
cli
and
xor
mov
nop
inc
call
cmpsb
outsb
leave
popf
push
outsb
pop
dec
push
das
jno
in
mov
in
push
dec
mov
subl
mov
add
xor
enter
jg
push
loop
jb
jno
std
jae
pusha
stos
adc
js
xor
sbb
push
pusha
mov
imul
dec
xor
in
cmp
mov
pushl
stc
out
je
out
or
and
insl
xchg
arpl
negb
rorl
jae
jns
mov
jbe
cwtl
xchg
idivb
push
inc
iret
or
mov
lret
enter
inc
pop
push
pop
cli
jmp
test
jbe
or
lds
cli
xor
icebp
mov
jo
xchg
mov
scas
movsl
cmp
mov
leave
pop
stc
or
cmp
xchg
call
sbb
scas
xchg
sub
popf
sub
adc
dec
dec
xor
int3
xchg
clc
nop
lods
bound
push
pusha
mov
out
sbb
cmp
cmp
mov
sbb
mull
cmp
addb
loopne
xchg
cli
or
jmp
mov
dec
inc
ss
inc
jno
mov
mov
dec
cli
jne
lret
fucomip
loope
popa
pop
insl
push
dec
inc
pop
xor
or
or
insl
fs
icebp
jns
push
or
mov
add
mulb
pop
ret
cmp
xor
sub
clc
ret
add
add
xor
mov
fs
push
mov
adc
jne
fisttpl
or
cmp
jp
push
sbb
or
icebp
xchg
fsubl
add
loop
ret
mov
adc
or
outsb
call
icebp
pop
inc
sub
lahf
push
ret
test
cld
lods
lcall
lcall
int3
xchg
push
push
xor
mov
repnz
xchg
and
xchg
fistps
sub
out
lahf
dec
pop
xchg
repnz
not
loop
testb
shlb
aam
daa
push
nop
dec
in
push
pusha
jbe
jecxz
outsl
aas
hlt
test
repz
dec
leave
mov
push
mov
xor
fnstcw
lret
stos
sbb
arpl
jmp
cs
cmpsl
mov
test
cmp
cmp
daa
sbbl
or
in
stos
inc
push
into
iret
add
mov
pop
ds
outsb
sbb
mov
aam
outsb
in
fcomip
imul
xlat
mov
leave
insb
xchg
js
repnz
popa
popa
pop
xchg
jge
arpl
cmp
or
or
iret
test
sbbb
dec
mov
je
mov
fwait
out
dec
push
ljmp
lods
adc
mov
mov
jae
jg
or
cmp
scas
call
cmc
cmpsl
das
jo
movsl
ret
xor
push
sbb
jb
pop
mov
mov
rorl
in
fcomps
mov
adc
inc
inc
cmp
std
xchg
gs
bound
subb
pop
jnp
scas
bound
add
mov
mov
xor
test
fidivl
adc
fwait
jno
mov
clc
popf
pop
sbb
xor
in
aad
stc
xchg
std
inc
popf
icebp
sbb
repnz
mov
clc
repz
xchg
cli
push
inc
es
mov
loopne
push
fcmovnu
mov
int
aas
add
cmp
cmp
sbb
sub
adc
add
cmp
mov
std
pop
lret
inc
sub
iret
pop
pop
mov
push
ds
or
sbb
xor
xor
addr16
scas
filds
es
daa
inc
cmp
jle
fucomp
pop
pop
gs
xchg
pmaxsw
xor
aam
scas
fs
fcoml
xor
mov
call
lock
loop
addr16
into
or
clc
lret
in
gs
int3
int3
jns
push
xorb
out
mov
shlb
add
adc
push
push
cmp
test
fdivrl
mov
push
movsl
or
jecxz
mov
movsl
shlb
jne
fwait
out
popf
pop
ret
inc
hlt
cmp
xor
xchg
dec
repnz
insl
push
outsl
idiv
ds
adc
lret
pop
dec
int3
dec
movsl
pop
inc
popf
sub
out
xchg
pop
ret
adc
sub
xor
mov
fldl2t
sub
insl
dec
pusha
leave
xchg
sbb
mov
mov
sbb
jae
xchg
test
cmp
push
mov
xchg
mov
fildll
sub
fwait
jl
or
inc
stos
popaw
mov
rcr
adc
lret
notl
sub
jae
idiv
push
aas
mov
push
sub
dec
rorb
adc
ja
stos
mov
or
outsb
roll
dec
jbe
xor
push
xchg
popa
clc
push
das
xchg
or
or
int3
cmpl
cltd
cmc
inc
test
lods
or
lods
imul
and
push
gs
ja
dec
push
stc
fbstp
pop
dec
jns
test
xchg
daa
xchg
xor
mov
not
loopne
push
daa
push
sub
lea
push
inc
stos
cmpsl
call
mov
dec
mov
inc
jp
into
lret
mov
sbb
repnz
jge
jecxz
aas
jp
xchg
out
jae
loop
ss
dec
test
clc
jg
loop
aas
ret
into
insb
add
cmp
stos
sbb
shrb
hlt
add
xor
shlb
fnstcw
mov
xchg
pusha
push
push
les
push
test
std
jecxz
int
inc
push
xchg
mov
pop
push
cmp
ljmp
xor
dec
mov
out
leave
sub
jecxz
pop
push
and
jecxz
xchg
loope
mov
cmp
or
fdivs
pop
xor
inc
or
mov
lahf
pop
popf
mov
cmpb
adc
adc
out
push
dec
incl
arpl
mov
cmp
lods
int
pop
pop
sbb
data16
jp
lds
mov
mov
adc
popa
sub
or
imul
test
mov
call
test
sbb
gs
inc
pop
pop
loope
xchg
dec
xchg
out
repnz
sbb
in
daa
mov
pop
mov
pop
cmp
pushf
shrl
xchg
cmpsb
xor
cmpl
aam
mov
adc
aaa
cmovnp
int3
pushl
imul
lds
js
sub
daa
pop
push
test
push
jmp
cwtl
and
mov
push
pusha
lret
dec
addl
mov
mov
test
aad
push
enter
es
adc
or
add
push
xlat
and
lods
insl
pusha
ret
pop
cltd
cmp
fists
dec
jg
push
pusha
in
out
inc
add
lcall
insb
mov
jns
es
push
xchg
enter
outsb
xor
xlat
outsb
pusha
insl
shlb
lcall
call
xor
cli
fs
adc
cs
out
add
push
aaa
popa
mov
subl
push
inc
pop
pop
in
mov
push
movsb
imul
scas
stc
arpl
pusha
xor
mov
cwtd
adc
adc
sbb
and
ja
scas
stc
mov
jmp
fstpl
add
scas
mov
test
cmp
xchg
inc
push
sub
ror
push
cmp
out
cmpsl
sub
adc
sbb
mov
push
xor
cmp
sub
das
dec
sub
mov
pop
mov
sbb
mov
out
std
int3
rcll
sbb
adc
cmp
mov
enter
hlt
adc
xchg
shlb
in
pushf
pusha
insb
pop
push
sti
or
stc
push
mov
xor
cli
adc
out
xchg
xor
scas
jns
pop
add
xlat
and
loopew
mov
mov
pop
pop
std
inc
dec
jbe
inc
in
fldcw
sbb
mov
sub
popf
aaa
xorl
ss
push
and
pop
popf
or
mov
pop
push
int
xchg
jp
push
nop
cmp
ret
cld
dec
cmpsb
rcrb
push
ja
stos
sub
mov
cmp
pop
mov
xor
hlt
add
stos
fs
lret
ja
xchg
lret
enter
jecxz
mov
ss
aas
lds
int
cmp
scas
push
andb
out
jl
mov
mov
jnp
xor
push
pop
jmp
mov
mov
push
cltd
andl
daa
lcall
pop
xchg
pop
loope
push
xlat
ror
push
movsl
data16
pop
ljmp
xor
mov
mov
sub
inc
pop
inc
lret
shr
mov
pop
add
das
icebp
mov
xor
cs
and
pop
mov
pop
sbb
add
imul
outsl
movsb
adcb
xor
jae
inc
fisttpl
sub
out
or
loop
and
sar
dec
arpl
call
das
pushaw
andb
outsb
and
jmp
adc
inc
out
push
xor
cltd
dec
cmp
jo
int3
and
mov
aad
xchg
push
push
jecxz
xchg
or
mov
dec
test
stc
and
repnz
iret
dec
pop
dec
aaa
call
inc
mov
xorl
jg
dec
loop
and
jns
lret
xor
push
idivl
outsb
sub
test
mov
pop
es
adcl
movsb
aaa
add
out
pop
fadds
pop
test
lret
aas
enter
out
push
movsl
ljmp
shll
jbe
std
in
idivl
cmp
cmp
jnp
push
stos
cmp
lock
push
inc
mov
push
dec
mov
rcll
jnp
repz
mov
pop
in
in
mov
mov
mov
int3
test
or
mov
xchg
push
mov
dec
dec
hlt
ss
pop
jnp
mov
xor
fs
push
push
adc
out
pop
inc
es
jne
or
mov
in
cs
dec
insl
inc
int3
negl
xor
and
inc
pop
in
stc
jmp
dec
adc
jecxz
sbb
pop
pop
xchg
lods
mov
push
lds
mov
hlt
adcl
xchg
sbb
or
xlat
lahf
jno
test
lcall
es
negl
and
icebp
cmc
imul
dec
cmpb
test
or
daa
xchg
inc
std
pop
aam
call
test
and
xchg
cmp
push
hlt
mov
jp
in
mov
stos
sbb
nop
adc
xor
outsb
aam
insb
sub
loope
jge
int3
ds
in
insl
dec
adc
pop
ror
xchg
dec
shrl
mov
in
mov
fbstp
gs
test
xchg
sub
cli
mov
lahf
push
push
je
pop
sarl
cmp
adc
sub
and
dec
cmc
int
cmp
xchg
outsb
mov
cmp
inc
jno
inc
sbb
std
pop
lock
fsubl
fidivs
fdivrl
inc
push
xchg
sub
pop
cmp
fistl
sub
push
cmp
xchg
xchg
adc
or
repnz
push
das
adc
jl
call
adc
adc
adc
dec
movsl
daa
addr16
daa
mov
xorb
fldl
ja
shll
mov
add
out
inc
sbb
insb
mov
xchg
iret
fcomps
cmp
adc
dec
xchg
fucomi
xchg
into
mov
sub
add
pop
out
and
gs
daa
sub
xchg
push
jno
subl
sub
sub
adc
mov
mov
push
rcl
adc
call
and
dec
push
fxam
inc
ljmp
insl
nop
xor
pop
dec
ja
test
cld
pop
jno
pushf
sbb
je
xorb
jle
in
and
subb
std
pop
mov
das
loopne
mov
jle
out
xchg
cli
cli
test
fmuls
sub
xchg
pop
call
ror
or
cmp
and
inc
popa
lds
mov
clc
ret
inc
fsubrs
imul
adc
hlt
lcall
push
lods
lods
sub
xchg
xchg
pop
cmp
mov
in
aaa
jmp
pop
inc
test
sahf
adc
xor
jecxz
insl
cmp
icebp
xchg
push
adc
add
xchg
push
adc
std
add
adc
inc
sub
test
mov
add
pop
push
xchg
lock
xor
sti
jno
rorb
xor
stos
test
lcall
push
out
call
xchg
incl
pop
enter
outsb
stos
fucomi
int
shr
add
repnz
mov
aam
ljmp
sub
into
or
push
sbb
mov
cmc
xchg
mov
rorl
cwtl
dec
shl
sbb
jecxz
les
loop
mov
inc
fisttpll
xor
lahf
mov
and
xor
aas
sbb
cmp
jae
cmp
and
mov
in
pop
add
jle
mov
xor
fimuls
dec
cmp
ret
movsb
lock
gs
cltd
nop
int3
mov
mov
fidivrs
jecxz
mov
dec
sub
jecxz
dec
or
cltd
xlat
adc
and
mov
sub
jo
sub
adc
dec
sti
out
or
xchg
fadds
fisttpll
movsl
shrl
inc
ss
add
aad
out
out
push
inc
mov
and
incl
ljmp
adc
dec
int
frstor
fldl
mov
jbe
push
and
cli
xchg
ds
test
cmc
mov
dec
adc
dec
outsb
jp
push
xor
xchg
dec
jmp
movsb
push
dec
shrl
inc
jecxz
jg
or
stc
inc
leave
aas
je
lcall
adc
es
test
dec
inc
and
sbb
mov
mov
mov
mov
fiaddl
push
outsl
add
mov
xorb
pop
inc
push
jle
aas
jmp
pop
filds
mov
cmpsl
adc
xorb
mov
shrl
push
sub
andl
sub
adc
mov
popf
sbb
fldcw
hlt
out
mov
repz
daa
dec
inc
xor
sub
add
cmpsl
popf
bound
ljmp
into
xor
shll
insl
mov
cmp
clc
movsl
out
fidivs
xchg
imul
mov
inc
hlt
sti
ljmp
mov
in
in
xor
rcr
ljmp
sti
mov
popf
in
lret
aad
cmp
and
sbb
jp
outsl
and
ret
je
or
mov
adc
jns
mov
add
addr16
movsl
rclb
pop
jmp
dec
mov
sub
call
inc
fucomip
jmp
adc
mov
and
dec
lret
daa
es
pop
sub
mov
cmc
mov
mov
lret
mov
push
shlb
outsb
add
inc
xor
mov
es
cmp
bound
mov
mov
xor
jmp
inc
jo
icebp
or
leave
inc
pop
lods
cmp
or
into
jno
imul
repnz
lahf
out
inc
jbe
or
outsl
pop
clc
dec
pusha
mov
mov
adcl
push
add
adc
and
std
adc
sahf
mov
cld
adc
and
fs
sub
in
add
mov
add
cmp
add
mov
inc
or
lods
xor
add
xlat
ja
cmpsb
mov
jns
add
xchg
inc
jecxz
test
ja
outsl
sbb
inc
inc
aad
adc
fwait
xchg
test
int
pop
loop
rolb
inc
jecxz
popf
pusha
mov
sbb
dec
add
ljmp
jo
dec
loopne
mov
movsb
dec
add
xchg
das
neg
lret
outsl
push
lods
jns
or
xor
and
lahf
dec
pop
push
sbb
imul
test
loop
sub
sub
ds
xchg
or
push
add
rol
mov
adc
outsb
dec
and
movsl
popa
sub
sub
push
neg
cmp
fidivrs
jp
sbb
mov
pop
dec
xor
mov
jge
adc
fwait
xchg
leave
xchg
jae
sub
push
sti
pop
add
jp
cmp
aaa
je
xor
xor
cli
pop
cmp
pushf
push
imul
cmpsb
pop
ds
push
xchg
in
fstp
movsl
pop
xchg
xchg
push
cmp
pop
test
or
fisubl
pop
sbb
pop
cmp
test
mov
aas
xchg
test
mov
pusha
mov
pop
test
sub
mov
and
rorl
testl
adc
divl
jmp
loope
out
push
outsb
mov
adc
mov
dec
sub
outsl
jo
repz
outsl
pop
insl
insb
insl
mov
pop
xor
orb
xlat
sub
testl
dec
pop
jmp
lods
add
mov
jge
aaa
cltd
push
jae
aam
nop
fnsave
xchg
cwtl
xchg
addr16
ret
push
push
mov
pop
sub
bound
cltd
jle
imull
rorl
xlat
jno
mov
mov
insb
loop
cmc
das
pop
fdivrl
popl
sub
int
adc
subl
mov
scas
test
xchg
pop
gs
cmp
div
in
push
lock
adc
ja
js
jle
push
jmp
rorl
arpl
cwtl
lock
dec
out
test
inc
jmp
cmp
or
hlt
mov
lcall
mov
cmpsl
arpl
sbb
pop
leave
pop
insl
fldenv
sbb
mov
fcmovbe
sbb
or
inc
decb
rcl
jmp
inc
movsb
or
in
loopne
push
insb
push
rorb
out
mov
dec
adc
fst
jbe
out
cld
mov
push
pop
cld
cltd
and
add
pushf
ljmp
enter
loope
xchg
xchg
cs
in
mov
jmp
dec
aaa
mov
aad
ljmp
in
dec
das
adc
pusha
rol
pop
jmp
jl
cmp
pop
ret
cli
mov
jns
mov
push
adc
stos
gs
xchg
imul
sti
or
ja
ja
divb
mov
adc
adc
cmp
lock
jmp
sub
sub
mov
aad
inc
idivb
inc
jno
sub
cmp
push
pop
test
xor
or
and
push
lods
mov
jbe
negb
test
mov
jb
push
mov
xor
mov
jl
jno
cmc
jno
les
jp
sti
push
dec
fistps
cmp
mov
fwait
mov
cmp
jge
push
jge
insl
inc
jae
lret
jg
adc
fwait
sbb
push
lret
mov
popl
mov
stos
test
adc
and
push
loope
loop
sbb
fwait
rclb
dec
in
leave
and
mov
inc
mov
mov
ret
xchg
sbb
scas
loop
dec
xchg
lock
divl
lods
xor
xchg
cmp
cmp
outsb
adc
lock
pop
imul
maskmovq
jle
jno
mov
pop
out
adc
jle
roll
sub
cli
lock
jecxz
sbb
jp
push
outsl
sub
cmpsb
push
xor
imul
add
push
fldpi
add
out
mov
clc
adc
mov
out
dec
add
and
or
nop
pop
stc
cmp
add
push
xor
jo
jp
pop
idivb
mov
insb
loop
out
in
xchg
pop
sbb
pop
dec
mov
adc
jl
mov
subl
adc
das
inc
sarl
or
fcoms
sub
mov
pop
jmp
aaa
sarl
out
lahf
lods
mov
jns
jmp
xor
and
mov
dec
dec
cmp
lcall
mov
cmpsb
and
cmpsl
pop
mov
ret
pop
pop
xor
ret
and
inc
arpl
and
dec
sub
add
push
add
push
xchg
push
int3
daa
int3
call
loop
mov
fstl
repz
lods
dec
pop
adc
dec
outsl
pop
loopne
jb
jbe
jno
clc
test
nop
subl
sub
repnz
popf
lods
sub
rcrl
jmp
gs
add
push
in
mov
js
pop
aas
into
push
push
xchg
repz
aas
mov
aas
ss
xorl
stos
sub
mov
push
and
sbb
inc
mov
mov
mov
insl
mov
out
repz
jp
push
or
jg
pop
adc
clc
pop
xor
xor
in
popa
cmc
sbb
mov
pop
repz
add
mov
mov
sub
xor
jnp
adc
mov
addr16
jne
idivb
test
loop
outsl
nop
nop
pop
ret
gs
push
mov
jge
adc
ds
mov
push
stos
in
mov
push
mov
sub
push
mov
dec
xor
loop
jge
lods
scas
mov
in
fiaddl
jge
push
jl
xchg
loope
popf
lcall
call
adc
sub
rcrb
ja
push
mov
sbb
cwtl
xchg
or
in
mov
add
lock
or
cld
mov
cwtl
lcall
repz
jns
gs
dec
push
clc
cmp
cmp
or
lret
pop
lea
jo
icebp
rolb
jns
repnz
push
xchg
shrb
pop
stos
jecxz
sub
xchg
or
cmc
int
daa
movsb
pop
leave
mov
aam
iret
stc
pop
lea
pop
aas
stos
cmp
cmpl
lret
cmp
outsl
lods
xchg
adc
scas
mov
xchg
rcll
jge
inc
int3
sbb
mov
in
fmull
mov
jl
lds
insb
loope
clc
add
add
stos
pop
mov
enter
sarb
fsubl
jmp
and
stc
mov
sub
inc
lods
xchg
inc
neg
adc
and
push
lods
and
sub
jmp
pop
inc
mov
cltd
push
clc
pop
mov
add
dec
in
push
clc
inc
xchg
mov
inc
das
sub
mov
mov
push
lock
mov
ljmp
xchg
add
pop
int
in
repz
cmp
lea
cmp
jno
rcrl
out
fnstsw
mov
fldl
aas
stos
mov
inc
cltd
test
adc
cmovo
mov
out
dec
aaa
cmpsl
mov
inc
mov
mov
sub
cmpl
arpl
rcl
xchg
shrl
mov
push
lret
negl
into
fs
xor
mov
mov
enter
cmp
push
sbb
inc
fsub
xorb
shlb
ss
mov
cmp
xchg
mov
cltd
xchg
aaa
outsb
add
cld
mov
out
ljmp
inc
pop
out
cld
dec
pop
pop
pop
cmpsl
ds
jns
adc
push
add
mov
out
sub
sarl
leave
outsb
pop
cmp
test
stc
and
cmp
or
dec
jbe
shrl
xchg
xlat
mov
xor
mov
inc
mov
adc
mov
sbb
push
ret
sub
or
pop
jl
add
inc
sahf
jp
jbe
adc
and
add
leave
aaa
dec
jns
sbb
fxch
std
movsb
orl
pop
mov
pusha
into
repnz
or
pop
pop
pushf
call
sub
cs
push
movsb
cmp
loopne
out
pop
xchg
sub
test
pop
push
inc
push
pop
lock
faddp
adc
movsl
push
cmp
call
shll
test
fcmovnb
mov
sub
sub
ds
xchg
stos
lcall
stos
lock
inc
mov
push
mov
imul
push
add
movsl
mov
mov
push
and
rolb
sub
and
dec
mov
sub
cld
xor
lods
push
clc
lea
sahf
cmp
cld
cmpsb
xchg
bound
rorl
std
push
pop
cmp
fisttps
lcall
push
aam
add
push
jl
adc
seto
jne
sub
movb
adc
push
jmp
fdecstp
jp
enter
iret
sbb
std
mov
das
xchg
outsb
shlb
jbe
pop
insb
fisttpll
dec
lcall
pop
mov
mov
jnp
mov
je
mov
pop
pop
mov
stos
mov
ljmp
outsb
mov
nop
outsb
or
sub
xchg
push
int3
and
dec
mov
xchg
int
pop
pop
jge
in
jg
inc
mov
ss
mov
pushf
pop
push
in
stos
and
fdivp
cmpsl
fwait
add
cmpl
push
pop
pop
mov
ja
fsubrs
mov
imul
nop
jnp
xchg
or
lds
inc
xor
or
ja
mov
adc
xorl
lea
test
or
lds
add
fdivrp
in
jae
fldenv
in
jbe
shlb
cld
call
xor
in
push
push
pop
xchg
popa
mov
add
pop
jle,pn
mov
push
jno
inc
imul
xor
push
cmp
jg
sbb
lods
cld
mov
sbb
or
movsb
loopne
insb
cmp
cwtl
fs
inc
dec
jmp
mov
pop
xor
movsl
push
cli
pop
mov
pop
test
push
add
push
test
cmpsb
xchg
jae
fstpl
das
pop
push
cmc
pop
mov
jae
stos
mov
icebp
fidivl
popf
xchg
dec
inc
mov
mov
or
loop
add
xor
loop
js
mov
out
outsl
pop
pop
jmp
inc
enter
sub
aam
xchg
push
mov
xchg
jle
shlb
aam
or
enter
jns
cld
cmp
fwait
xchg
mov
addr16
jns
mov
adc
mov
push
andb
adc
jns
push
push
loope
xor
inc
cmpsl
sbb
into
leave
movsb
xchg
pop
sub
cmpsb
aaa
outsl
subb
sub
sbb
cmp
pop
jns
jnp
pop
rorb
xlat
rolb
fwait
test
sub
out
dec
fmuls
sbb
push
addr16
stos
mov
jp
test
xor
test
fstps
xchg
popf
push
je
pop
dec
fistps
popa
cmc
aam
mov
rcl
or
push
loopne
sti
or
lahf
arpl
adc
inc
into
sbb
xlat
loopne
in
fisubrs
inc
mov
inc
and
sarl
cwtl
lea
add
pop
jbe
add
mov
es
rol
in
mov
das
mov
sub
addb
sar
inc
push
jne
mov
call
outsb
loop
ror
std
daa
push
mov
call
frstor
pop
ret
or
lahf
insb
cmp
mov
inc
sahf
xchg
adc
and
mov
pop
push
pop
icebp
xor
push
scas
repz
cwtl
and
jno
pop
add
leave
sub
inc
mov
pop
xor
leave
jns
pop
jg
repz
pop
mov
stos
mov
and
out
clc
jns
arpl
movsl
rolb
mov
or
or
sbb
outsb
cmp
cmp
adc
data16
xlat
or
popf
lea
stc
mov
in
and
mov
into
lcall
pusha
adc
xchg
adc
jno
ja
loopne
xchg
push
nop
jae
and
sbb
cmp
push
imul
aam
dec
lea
jb
pop
inc
mov
pop
icebp
jbe
mov
lock
popa
stos
test
add
sbb
and
fnstsw
popf
shll
test
iret
xchg
mov
mov
aad
or
arpl
leave
sbb
mov
dec
addl
mov
pop
push
insb
xchg
repnz
shl
flds
loopne
int3
add
cmpsl
movsb
jp
sbb
pop
mov
stos
cltd
daa
das
sbb
enter
insl
mov
pop
xor
hlt
icebp
cmpsb
add
xor
scas
mov
pop
imul
incl
jg
loope
cmp
ret
std
add
fmuls
pop
inc
mov
lret
lods
jae
pop
stos
add
flds
xor
push
xchg
mov
test
insb
cmpsl
movsb
xchg
push
aam
mov
pop
pop
ljmp
adc
xor
lods
mov
test
sbb
aaa
inc
push
pop
mov
mov
sbbb
data16
push
arpl
jecxz
and
pop
push
enter
push
pushf
nop
lods
sub
cli
dec
pop
mov
jnp
push
mov
or
iret
test
out
jns
adc
push
insl
cwtl
lds
mov
iret
fwait
vpaddsw
out
jecxz
popf
shrb
fdivrs
loop
xor
out
cltd
mov
call
cmp
mov
arpl
fisubrs
mov
in
aad
jl
cmp
adc
subl
cmpl
pop
xchg
push
jb
rcll
jecxz
test
push
stc
imul
rorb
sub
sbb
cmpsb
ss
mov
jmp
pop
xor
icebp
jae
jb
dec
jbe
fiaddl
lds
repz
psllw
lea
mov
add
repnz
mov
and
dec
push
in
jnp
and
ret
fs
jl
mov
mov
pop
xchg
mov
in
call
mov
clc
sahf
faddl
dec
and
adc
ljmp
fcmovnbe
ffree
push
inc
pop
mov
jne
rol
andb
shrb
jecxz
inc
aad
rorb
aaa
int3
pushf
pushf
popl
imull
jae
or
jno
movsb
mov
iret
insl
insb
test
pop
scas
cmpb
aas
sbb
fimull
push
outsl
dec
push
mov
or
popa
pop
scas
or
loop
and
cmpsb
lret
enter
jg
pop
add
pushf
xchg
int
in
bnd
push
outsl
jl
xchg
insl
shll
lahf
jmp
push
cmp
les
orl
rcr
add
jae
dec
and
dec
push
sbb
out
push
xchg
push
dec
push
sub
dec
pop
add
push
xchg
imul
mov
ret
pop
pushf
movsb
xchg
jmp
push
nop
or
xchg
fisttpll
sarl
push
mov
jg
or
and
pop
push
sub
pop
jb
in
jne
add
bswap
adc
lret
and
fstl
sahf
les
test
and
into
or
add
cmp
test
clc
mov
dec
pop
shl
jo
and
divb
out
jl
mov
sub
or
push
stos
mov
iret
cmp
repz
or
mov
aaa
lock
jecxz
cltd
mov
mov
repz
repnz
inc
jbe
rclb
adc
ljmp
pop
decb
add
test
data16
aas
imul
inc
stc
lea
fs
push
xchg
scas
mov
xchg
aas
mov
test
cmpsl
dec
sub
ss
mov
mov
cmpb
inc
push
imul
cld
xor
fisttps
cltd
add
dec
add
pop
js
test
push
jns
inc
enter
or
adc
jnp
es
jne
cmp
icebp
mov
cli
dec
sub
stos
mov
std
cmpsb
mov
inc
pushf
das
aas
sub
or
repnz
mov
dec
fnstenv
sbb
xor
add
xlat
imul
cmpsl
sbb
insl
push
mov
jne
xlat
scas
pop
and
stc
imul
mov
cmpl
jmp
imulb
mov
aam
loope
mull
clc
push
adc
xor
jo
mov
cld
or
xchg
push
ret
jno
push
std
gs
roll
out
test
pop
mov
xor
int
mov
orb
in
or
repnz
jno
jb
cmpl
pop
movsb
f2xm1
icebp
jmp
nop
pushf
cmp
mov
sahf
jle
aaa
push
and
xchg
adc
push
aad
and
cmp
ds
shlb
ljmp
xor
pop
lahf
insb
cmp
cltd
fimull
mov
jns
jmp
out
mov
les
xchg
lds
and
xchg
aam
out
mov
cmp
jp
ret
xor
xchg
mov
fwait
sbb
jno
xchg
dec
sti
loopne
dec
cmp
lea
aas
mov
ret
adc
loopne
jp
pop
sahf
sbb
mov
stc
loopne
mov
dec
sub
push
arpl
mov
ret
fmulp
push
xor
pop
add
pop
cmp
pop
cli
xlat
aaa
pop
lret
loopne
cmc
aas
or
xchg
mov
jg
movsb
fsub
loope
mov
je
fisttpll
js
sbb
aaa
xor
mov
divl
sub
sbb
pop
sub
and
lock
sub
jne
mov
dec
sub
mov
inc
faddp
dec
and
cmp
rorb
sub
js
jbe
mov
push
or
adc
call
sahf
call
adc
push
pop
shl
xlat
dec
sub
pop
movzwl
cmp
push
fcmove
mov
enter
pop
int
jo
cmp
add
push
ja
sub
mov
inc
cld
mov
jg
mov
fisttps
mov
ss
outsb
inc
jb
andb
and
xchg
pop
popa
test
jo
xchg
dec
popf
aaa
out
mov
push
rcl
fcompl
sub
cmp
ret
mov
xor
mov
imul
outsb
ljmp
lahf
dec
cmpl
sub
mov
cmp
or
xchg
inc
aam
pop
sti
jae
jnp
and
sbb
out
adc
ja
mov
ror
xor
dec
and
inc
mov
lret
adc
mov
mov
aaa
mov
adc
inc
aaa
movb
insb
inc
aad
nop
in
aad
push
adc
push
cmc
lods
inc
or
lds
and
mov
dec
test
in
lret
push
bound
pop
or
addb
sbb
gs
sbb
repz
roll
rcll
test
fbstp
fmull
lds
inc
test
mov
fnsave
sub
xchg
movsb
int
xor
xlat
in
or
mov
stos
inc
cld
fcomps
xchg
es
imul
sub
or
or
cmp
shr
fst
stc
jecxz
outsb
hlt
push
jp
xor
push
cmp
cmp
cmc
cld
add
rcl
mov
sahf
test
jp
jle
pop
or
inc
decb
push
mov
int
add
imull
sbb
mov
mov
cld
mov
mov
out
mov
cmp
sbb
push
mov
push
rcll
xchg
jge
push
mov
lds
xchg
cmp
xchg
fstpt
call
push
push
loopne
push
inc
mov
mov
cmpsl
jle
pop
inc
push
mov
fmull
movl
sbb
hlt
nop
jmp
add
jno
ficoml
push
jmp
push
in
pop
fld
add
pop
push
mov
push
in
pop
rcr
xchg
shll
xor
push
and
jno
es
pushf
inc
mov
lcall
ja
mov
out
pop
inc
pop
pop
xchg
mov
movsb
fstpt
adcl
sub
mov
cmp
fwait
repnz
scas
inc
push
insl
add
cmp
imulb
rcr
sub
fwait
inc
je
dec
cmpsb
bound
push
xor
mov
sub
mov
mov
lret
stos
or
lock
mov
jg
xor
fdivrl
cs
ret
out
mov
fwait
jno
adc
addr16
add
aas
add
push
mov
mov
stos
dec
add
or
mov
mov
jl
mov
mov
sbb
mov
test
sbb
pop
and
dec
out
or
cltd
mov
addr16
cmp
dec
mov
sti
xchg
sti
insl
pop
int
repnz
pusha
jecxz
cmp
subl
and
cmc
outsb
or
cmpl
out
adc
data16
mov
cmp
sbbl
sbb
popf
mov
inc
jl
into
cltd
push
xchg
sub
xor
mov
in
and
push
xor
adc
lea
and
or
and
push
in
fcoml
out
inc
lcall
fstps
std
in
loope
adc
adc
stos
jmp
mov
aam
xor
movsl
ja
jmp
sbb
hlt
imul
in
movzbl
push
adc
dec
xchg
test
mov
into
push
test
xchg
adc
repz
fwait
mov
mov
push
gs
inc
ja
pop
fidivrl
test
or
fs
clc
insb
adc
stc
pusha
sbb
adc
push
mov
in
or
ffree
hlt
lods
mov
xchg
enter
xor
repz
nop
lret
and
jg
stc
sub
and
sti
jo
rclb
inc
mov
popf
or
sbb
test
push
add
cmpb
ret
pop
mov
int
inc
xlat
out
scas
ret
push
idivb
loopne
add
cmp
inc
repnz
cmp
popf
inc
pushf
xchg
mov
sar
push
jno
pusha
js
scas
fcmovbe
testl
call
or
or
mov
fistps
sbb
gs
pop
xchg
or
stos
mov
jno
aad
add
dec
mov
in
mov
rcrb
push
stos
dec
pop
in
in
pop
je
hlt
fisubrs
fwait
ljmp
imul
lret
lds
scas
ljmp
test
push
lock
je
jp
sbb
xchg
pop
scas
mov
int
lock
pop
inc
adc
inc
xlat
jl
mov
xor
nop
je
nop
or
mov
jge
or
test
clc
mov
test
mov
mov
and
cli
cmp
mov
js
in
or
mov
lret
xor
pop
and
outsb
shll
or
ja
inc
sub
dec
das
jg
movsl
or
mov
inc
icebp
mov
sub
ss
xchg
lods
pop
dec
stc
and
shl
movsl
xor
or
pop
xchg
inc
outsb
fucomp
popa
stos
add
out
subb
jno
in
xchg
test
mov
stos
add
inc
adc
push
fsubr
sbb
mov
scas
mov
mov
xchg
mov
jle
nop
pop
and
and
push
mov
inc
or
or
mov
fs
dec
hlt
fnstsw
ja
mov
adc
and
pop
mov
mov
xchg
pand
jmp
ljmp
cmc
mov
and
adc
push
mov
xlat
nop
jns
in
push
popl
imul
pusha
inc
jno
sub
pop
iret
mov
sbb
mov
dec
jge
in
push
cmpsb
in
dec
cmp
mov
lock
pop
bound
push
sub
repnz
ret
pop
pop
jo
add
lods
adc
dec
in
mov
xchg
lods
addl
pop
jp
mov
cld
xchg
dec
push
iret
aaa
jb
and
dec
ror
sbbb
push
lret
scas
test
or
inc
ja
pop
popf
and
jne
push
fwait
stos
out
pop
nop
repnz
mov
dec
cmpsb
fs
lcall
inc
mov
in
stc
or
mov
mov
hlt
cmp
mov
nop
cmp
jecxz
xor
jae
sub
inc
jmp
repz
aam
mov
cs
mov
pop
lahf
add
mov
jne
es
push
movsb
inc
sbb
je
sub
cmc
icebp
cmpb
divl
sarl
mov
adc
nop
aam
call
xor
xchg
cmp
xor
leave
fistpll
xchg
mov
sarl
popa
sbb
xor
fistpll
loop
inc
cld
mov
ret
sbb
pop
aas
or
lock
push
repz
mov
mov
pop
jno
cld
iret
lds
outsl
sub
lods
adc
mov
testl
sub
imul
add
cltd
add
pop
sbb
mov
outsb
icebp
aam
cmp
sbb
or
jle
outsb
adc
movsl
je
jg
sub
or
or
sbb
outsb
pop
jae
popa
sub
aas
add
xor
pop
cltd
and
pushf
lcall
adc
into
fisubrl
ja
das
sarl
jns
jns
pop
out
insb
mov
inc
jne
xchg
jo
lods
mov
push
xchg
mov
test
cwtl
mov
mov
dec
adc
add
test
rol
mov
cmpsb
jge
bnd
dec
push
xor
ret
sub
cmp
repnz
out
sbb
lock
xlat
popl
jns
cltd
mov
cmp
aaa
scas
movl
push
xchg
movsb
ret
testb
idivb
aam
mov
popf
rclb
dec
cmpl
push
clc
mov
jecxz
das
loopne
rorb
aad
push
cltd
dec
repnz
lock
sahf
jecxz
mov
jno
movsl
mov
xor
sub
xchg
call
mov
and
and
cmp
push
mov
dec
add
sbb
addr16
out
pop
sbb
xchg
pop
push
pop
neg
mov
cmc
xchg
insl
cmc
sub
pushf
stc
xchg
sub
loope
pop
popf
loop
adc
jae
dec
mov
arpl
mov
sub
icebp
insl
push
cs
sbb
clc
int
dec
or
or
cwtl
fimull
inc
js
dec
xchg
pop
int
mov
add
ficoml
leave
mov
aaa
out
rcl
sub
mov
lcall
inc
cld
call
jae
shlb
inc
fsubr
out
clc
es
aad
inc
xchg
iret
rolb
mov
inc
push
test
in
and
xor
add
in
fildl
xor
mov
mov
pushf
pop
loop
js
mov
dec
mov
popa
mov
xchg
xchg
xchg
lahf
test
jle
icebp
inc
addr16
jae
mov
mov
out
les
mov
xor
xchg
fidivs
mov
in
jo
adc
mov
movsl
dec
pop
jl
sub
out
stc
pop
int
mov
scas
adc
push
stc
mov
dec
pop
push
outsl
imul
and
gs
pop
out
push
or
addr16
dec
int3
add
outsb
daa
jae
rorl
jno
xchg
dec
es
pop
add
lea
cld
in
xchg
dec
fdivl
stos
sbb
sub
cmp
jo
and
stc
iret
or
mov
dec
adc
pop
dec
imul
add
jmp
jl
mov
mov
xor
inc
bound
pusha
fs
rorl
fdivl
andl
add
xchg
orb
jnp
insb
rolb
fwait
inc
mov
xchg
dec
icebp
test
mov
push
mov
neg
push
mov
mov
je
clc
inc
push
sahf
sub
push
lahf
cmpsl
push
push
fdivl
fdivs
mov
mov
push
xchg
test
inc
jge
jo
fstpt
sti
mov
adc
insb
pop
insl
test
xlat
mov
push
sbb
xor
push
dec
push
push
lret
scas
sbb
aam
and
mov
jae
fstpt
inc
loope
inc
pop
push
inc
jmp
mov
hlt
mov
test
aad
cmc
lods
xchg
sub
test
inc
nop
cli
les
stc
inc
sub
inc
sub
push
or
mov
adc
dec
and
lds
sub
movsb
adc
rorb
inc
pop
pop
xor
inc
jmp
movsb
push
mov
dec
xor
in
cltd
scas
test
cmpsb
repz
or
xor
or
arpl
pop
rorb
pop
enter
popa
lret
xchg
fstl
ds
xchg
rclb
add
idivl
fadds
cs
xchg
push
aam
lcall
jo
pop
sbb
int3
and
mov
mov
movsl
or
push
and
jno
cmp
dec
nop
lds
sar
cld
sbb
aaa
mov
iret
imul
jmp
movswl
subb
or
nop
jg
out
or
call
cs
mov
pop
mov
das
jle
loope
inc
xlat
rcrl
jne
sub
aaa
or
xor
xchg
fwait
dec
jge
lods
jns
push
add
jmp
jle
add
xor
adc
pushf
dec
jl
xchg
cmp
subl
nop
jb
xchg
push
pop
or
mov
inc
call
call
sub
inc
stos
xor
adc
popa
jge
xchg
cltd
dec
add
and
nop
sti
in
leave
rcl
ds
bound
idivb
mov
out
cli
aad
fwait
mov
and
inc
cli
sbb
jbe
pop
jecxz
xchg
loop
mov
ror
stc
arpl
dec
loopne
loop
xor
je
xchg
pop
push
pop
insl
pop
flds
xchg
loopne
mov
mov
scas
and
arpl
mov
lcall
xor
repnz
into
sub
xlat
aas
sbb
push
and
int3
adc
fdivrs
aaa
sarb
xor
pop
cmp
ljmp
xchg
sub
adc
aad
ljmp
mov
imul
xchg
pop
mov
imul
mov
jmp
sub
ret
aas
ja
mov
decb
sbb
xor
sub
mov
cli
ss
sub
add
xchg
fdivl
inc
inc
push
mov
xchg
or
or
add
stos
xor
jle
cwtl
xchg
jmp
sbb
aam
and
test
test
mov
and
push
arpl
sarb
add
mov
and
scas
pop
xchg
cmp
std
arpl
loop
test
xchg
loopne
and
push
fwait
xor
pop
xor
negl
add
bound
sub
cmp
add
ss
mov
es
push
dec
ret
push
sarb
lret
rcrb
inc
push
and
xlat
add
std
adc
jb
cmp
shlb
xlat
nop
shl
jl
dec
out
mov
jns
aas
adc
or
xlat
dec
pop
imul
add
aas
sbb
sbb
cltd
sar
mov
jae
insl
bound
jnp
or
addl
push
or
cmpsl
pop
sarb
push
jl
inc
out
jecxz
addr16
jnp
in
pop
mov
rorl
inc
ds
into
shll
sbb
cld
ret
xchg
xor
mov
popa
pop
out
fists
push
push
mov
mov
mov
jo
sub
dec
out
sbb
and
aaa
jmp
mov
jg
add
cli
ljmpw
add
pop
ljmp
sbb
add
lea
loope
addr16
jbe
jmp
adc
movsb
lcall
arpl
cmp
xchg
test
lods
mov
and
add
repnz
in
js
xor
jp
in
not
lods
fistl
pop
mov
cmp
stos
sbb
push
add
hlt
sub
hlt
shll
rolb
cmp
xchg
js
in
fildl
fs
add
int
xchg
xchg
and
insl
and
cwtl
js
cs
in
push
jno
sbb
jmp
sub
or
pushf
scas
inc
pop
faddl
lock
and
sbb
lcall
ds
cmp
inc
int
jmp
mov
enter
outsl
outsb
iret
mov
pop
daa
dec
jle
subl
insl
jbe
mov
and
out
mov
dec
sbb
lea
bound
cs
enter
jg
jae
lea
stos
push
repz
adc
lret
pop
inc
insb
stc
scas
or
mov
mov
cmc
shlb
fwait
jp
adc
sub
data16
jb
lret
mov
ret
xchg
xchg
mov
dec
fidivrs
lods
popa
das
and
mov
adc
and
push
outsl
sbb
adc
mov
ret
sahf
hlt
pop
inc
loopne
sti
mov
ror
fdivrs
add
xchg
xchg
jp
out
mov
fmull
hlt
fstpl
sti
xor
xor
dec
and
sbb
cmp
xchg
pop
inc
rcrb
lds
lock
call
dec
adcb
idivl
test
cmp
pushf
xor
jo
cltd
inc
pop
pushf
inc
mov
xchg
ja
in
shlb
cltd
and
mov
sbb
mov
sahf
jp
rol
mov
mov
imul
lret
sti
aad
arpl
inc
cmp
scas
or
mov
push
enter
cmp
sbb
add
mov
mov
mov
jae
mov
mov
lret
xlat
xor
into
jnp
lock
mov
loop
dec
pop
ret
icebp
or
ds
pusha
es
jge
or
push
cwtl
inc
sub
pop
xchg
popf
hlt
sbb
ret
scas
subb
cwtl
mov
in
mov
adc
ds
dec
in
jae
into
lahf
sbb
add
mov
es
adc
pusha
in
mov
dec
cltd
int
xchg
jne
repz
inc
sbb
mov
xchg
xchg
mov
pop
push
aas
bound
mov
fnstenv
call
cltd
inc
dec
mov
test
int
mov
sbb
hlt
mov
cmp
pop
scas
jnp
filds
je
cmp
aaa
mov
movb
lcall
jbe
mov
mov
inc
xchg
mov
mov
rclb
jl
aaa
dec
sbb
mov
mov
rorl
aas
sahf
mov
jns
in
movsb
dec
rcl
add
xchg
sbb
push
pushf
inc
jl
call
mov
cmp
fnstcw
aaa
inc
aad
orb
and
xor
test
dec
fwait
mov
push
adc
add
icebp
das
inc
sahf
rcrl
jmp
mov
and
inc
les
loope
shll
bound
clc
shll
pushf
pop
sub
cmp
add
repnz
sub
dec
push
jne
lea
cwtl
mov
cli
ret
lret
push
into
inc
jne
xchg
mov
daa
mov
rclb
fisttpll
ds
adc
int3
xchg
xchg
xchg
sub
mov
popa
movsb
and
mov
cmp
adc
and
xor
in
push
push
movsb
cmc
lret
inc
les
fwait
jle
mov
cmp
cmp
stc
pop
mov
and
jae
pop
xor
cmp
aad
jecxz
cmc
adc
xlat
fs
cmp
addr16
xor
daa
pop
xorb
and
or
xchg
jle
sbb
sub
cli
pusha
inc
push
fidivrs
leave
loope
dec
push
cwtl
and
xorl
iret
test
stos
adc
pusha
inc
xchg
ret
add
ret
fistpl
mov
mov
xlat
xlat
aas
xor
inc
cmc
inc
sbb
pop
mov
pusha
mov
das
mov
jecxz
stos
cmp
push
fcompl
fildl
test
dec
cmpl
fidivs
cmp
aam
sub
mov
leave
ds
mov
xor
cmc
fwait
mov
outsl
cmc
int3
dec
insb
imul
sar
mov
and
push
mov
mov
jp
xor
cld
dec
mov
lcall
push
inc
cs
test
mov
mov
inc
sub
out
pop
je
and
mov
and
mov
dec
pop
movsb
jns
mov
xchg
jb
stos
or
pop
and
int
loopne
push
out
std
aas
xor
pop
pop
or
jns
ja
in
stos
cmc
and
lock
ret
adc
mov
xchg
lcall
fs
or
idivl
dec
into
pusha
or
push
pop
xchg
mov
adc
xchg
adcl
add
popa
sahf
bound
mov
movsb
jle
xchg
int3
sti
push
notl
sti
ds
hlt
xor
scas
aam
add
jmp
adc
pushf
stos
xchg
pop
repnz
push
sbb
fsubr
jg
or
sbb
mov
mov
sbb
jne
jno
mov
int
push
xchg
push
sti
sub
ljmp
in
mov
stos
arpl
xor
jae
inc
add
setno
pop
adcl
mov
idivl
jno
call
insl
adc
sbb
sub
dec
sbb
divl
mov
mov
rcll
je
popf
mov
adc
add
push
std
add
popa
aam
cmp
xchg
loopne
cwtl
cmpl
les
sti
inc
inc
repnz
out
xchg
jmp
nop
out
xorl
int
fxch
stos
mov
addr16
cld
aaa
mov
and
movsl
pop
cmp
hlt
mov
je
jp
fadds
dec
xor
sub
frstor
push
inc
lock
paddq
adc
mov
mov
mov
pop
les
mov
mov
xor
int3
add
cld
push
jmp
inc
inc
cld
jno
or
pop
xchg
out
fsubrp
fistpll
outsl
ss
mov
es
push
verw
mov
hlt
fistl
cmp
mov
xor
push
test
ds
bnd
stc
or
jne
inc
mov
pop
sub
pop
aad
adc
in
test
pusha
into
jbe
mov
pusha
pop
shlb
cmpsl
btr
push
stos
or
pextrw
xor
test
pop
fldenv
or
in
pusha
dec
cmp
mov
stos
sbb
push
cmp
pushf
dec
stc
dec
ss
sub
scas
loopne
xchg
bound
fcompl
push
pop
jl
adc
loopne
aas
js
out
add
xlat
and
and
xchg
dec
sarb
push
inc
jp
aad
xchg
inc
ja,pt
and
out
scas
movsl
lret
aas
insl
mov
ss
pop
fwait
imul
jo
lds
fcompl
sbb
xchg
lds
rcl
fsubrl
adc
jl
cmp
clc
scas
enter
sbb
arpl
stc
cmp
adc
pop
fldcw
add
clc
movsb
jmp
and
movsl
mov
push
sub
movsl
cli
and
xchg
out
adc
insl
sub
rcrl
repnz
mov
xor
jmp
enter
xor
cmp
mov
les
push
clc
adc
lds
dec
mov
cs
sbb
outsb
inc
push
rolb
pop
jp
cmpsb
dec
mov
lods
in
adc
mov
mov
adc
int
adc
dec
imul
inc
jmp
jbe
pop
jb
push
lcall
and
in
fbld
inc
gs
call
int
clc
add
adc
sbb
aas
dec
aad
add
fisttpl
pop
xor
out
test
nop
aas
test
sub
jno
cmp
fmuls
dec
sbb
ljmp
shlb
rol
out
mov
clc
cld
jnp
add
adc
add
or
je
mov
mov
push
stos
outsb
push
icebp
mov
es
rcrl
stos
popa
fldenv
testl
int
out
mov
xor
mov
repz
xchg
icebp
frstor
cmc
popa
push
xor
mov
das
jno
out
push
sbb
push
dec
in
cltd
dec
push
pusha
jl
and
pop
xor
test
int
dec
fiadds
xchg
xchg
jl
add
call
in
shlb
fsubl
adc
daa
jae
mov
lock
cmpsl
mov
jo
hlt
es
mov
xchg
je
data16
mov
imul
dec
fidivs
push
mov
sbb
test
mov
add
aam
dec
xchg
test
mov
push
jle
push
push
insl
fimuls
sub
js
in
leave
adc
and
sbb
shr
mov
insb
cltd
mov
loope
xchg
jb
cmp
cltd
xor
repnz
movsl
dec
pop
cmp
dec
adc
adc
repz
inc
xchg
inc
stos
push
iret
sub
mov
mov
xlat
add
rclb
mov
mov
add
jp
ficoml
arpl
mov
adc
lods
mov
dec
mov
mov
testl
popf
jge
fsubl
cli
sti
jb
and
push
mov
sbb
sbb
cmc
xor
xor
inc
dec
and
jae
add
mov
mov
jno
inc
inc
cli
add
push
mov
stos
icebp
and
stos
cmp
dec
sub
lock
adc
or
jg
pusha
js
mov
lds
lahf
xchg
fcmove
pusha
scas
dec
test
sti
testl
test
or
xchg
or
es
mov
out
outsb
cwtl
scas
out
push
stc
jp
push
insb
repnz
lods
or
pusha
cmpsl
repz
clc
stos
test
fistpll
mov
mov
scas
lret
adc
jb
mov
mov
sub
ja
cs
sub
adc
dec
int3
jg
fldt
sub
inc
mov
test
mov
into
sub
icebp
loop
sar
lcall
clc
add
push
pop
nop
fcoms
sti
mov
xchg
fld
addl
cmp
call
cmc
and
lcall
imul
clc
adc
and
adc
sub
mov
pushf
cltd
xchg
xchg
or
adc
test
jne
insb
stos
xchg
cmp
stos
jp
iret
mov
ss
pop
fildll
pop
jo
into
lods
pop
cmc
jns
and
test
xlat
out
mov
lcall
sti
mov
mov
in
in
inc
int3
imul
jno
das
dec
sahf
and
in
test
imull
and
popf
aam
inc
je
not
jb
dec
sti
pop
mov
fsubrs
rcrb
sbb
lret
test
jl
mov
loopne
cmpl
mov
popf
shr
adc
dec
out
in
ss
or
cltd
jge
mov
inc
leave
mov
sti
cld
call
sbb
or
aad
mov
scas
iret
lret
fistps
mov
rolb
sub
mov
inc
dec
movsb
jge
int3
call
cltd
mov
lcall
inc
and
push
arpl
scas
add
pop
les
imull
sub
cmp
out
jmp
pop
xchg
xor
test
sub
daa
xchg
push
cs
fsubl
iret
dec
cmc
xchg
in
sbb
stos
adc
lcall
gs
push
adc
and
js
nop
or
pusha
pop
adc
push
incl
mov
or
out
pop
cwtl
fs
movsb
and
iret
inc
inc
jns
inc
inc
fsubl
insl
fsubr
das
jge
or
push
jne
mov
xchg
mov
adc
icebp
sbbl
lcall
pop
iret
adc
and
mov
dec
out
icebp
movb
mov
push
out
pop
ja
dec
fbld
jae
and
test
xor
ljmp
mov
sbb
test
inc
dec
sub
adc
and
pop
fiaddl
fmul
jae
or
femms
and
loop
push
cld
jmp
push
cld
pop
mov
and
ss
cmp
pop
cmpb
sbb
test
cs
clc
add
inc
pushf
xchg
loop
xchg
stos
mov
into
out
mov
or
inc
or
cmpb
cmp
dec
inc
leave
mov
and
insl
mov
fmuls
add
mov
scas
cmpsb
aaa
add
xchg
ljmp
jbe
rcrb
inc
mov
sub
rorl
xlat
adc
and
jg
xchg
sub
push
jecxz
iret
pop
rorb
test
aam
push
ljmp
movsl
lret
dec
in
adc
movsl
test
mov
jae
rcr
aam
subb
or
dec
push
inc
pop
adc
dec
lret
outsb
mov
pop
dec
adc
pop
push
inc
and
adc
cld
in
add
jae
outsl
das
dec
mov
or
repnz
jecxz
lahf
movsl
in
insl
sti
movsl
mov
insl
pop
cld
cld
add
xchg
mov
mov
aam
stc
sub
inc
pop
cmp
push
shl
or
cmp
fdivrl
mov
adc
popa
aas
pop
push
js
xor
aas
mov
mov
or
out
lretw
cmp
nopl
push
sub
sbb
sbbb
stos
jnp
pop
outsb
add
and
lock
imul
mov
aam
pop
inc
mov
push
fsubs
xchg
inc
cmp
jae
dec
or
popa
adc
push
sbb
in
int
fimull
ds
out
mov
xchg
lcall
pop
hlt
sarl
mov
dec
scas
icebp
mov
sub
lods
jb
push
jno
sbb
adc
iret
aaa
mov
push
scas
push
sbb
jns
xor
cwtl
push
cmp
enter
and
push
sub
push
pop
fldl
ret
xchg
inc
mov
in
int
outsb
stc
jns
int3
inc
test
lds
xor
jge
or
std
mov
push
mov
jmp
cwtl
in
sbb
shrb
ds
mov
mov
jmp
inc
xor
mov
mov
or
lahf
orl
pop
in
push
out
je
sbb
pop
jns
xchg
ja
stos
and
mov
cmp
xchg
lock
data16
imulb
xchg
dec
pop
mov
pop
cmpsl
ret
out
jae
les
aas
and
lds
mov
mov
dec
lea
stos
push
aam
mov
push
shll
in
ret
jecxz
cltd
push
xchg
adc
xor
or
push
je
ret
aas
and
mov
inc
mov
out
pop
lcall
xlat
iret
push
xor
out
xchg
cmpsb
pop
daa
iret
pop
popf
push
idiv
fimuls
cmc
hlt
push
mov
mov
push
pop
cmpsb
int3
ljmp
mov
or
fpatan
cmc
repz
add
cwtl
add
lret
xor
andl
push
andb
mov
pop
std
dec
and
les
xchg
inc
jae
repz
push
inc
xchg
sbb
or
movsl
cmc
hlt
out
cmpsl
or
push
rolb
insl
xchg
push
mov
add
mov
mov
mov
mov
xor
test
jp
int3
test
lahf
ret
ror
or
mov
xor
mov
ljmp
fscale
inc
out
adc
fsubl
pop
dec
lcall
push
sbbb
int
pmaddwd
xchg
pop
mov
jne
mov
fcmovbe
mov
loope
nop
adc
add
inc
xor
mov
shr
xchg
pop
sahf
or
sbb
cmpsl
sarb
xor
jns
test
insl
sbb
outsb
mov
popa
fcoms
icebp
pusha
lcall
ljmp
movsl
test
or
aam
in
je
stos
and
aad
lahf
cmp
inc
shll
adc
adc
xorl
and
cld
mov
dec
xchg
js
scas
fldl
fst
clc
rorl
aam
mov
out
xchg
pop
cmp
enter
mov
movsl
add
inc
push
test
clc
mov
daa
pop
cmp
push
push
popa
dec
shl
fists
fimull
insb
popa
xchg
xlat
mov
xchg
push
inc
inc
mov
mov
in
out
and
pusha
addr16
xor
fstl
fldcw
push
outsb
mov
add
pop
fbstp
inc
and
cmpsl
div
jge
pop
mov
ret
sbb
sti
inc
xorb
and
dec
add
sbb
lahf
mov
xchg
push
cmp
or
add
xchg
push
jbe
xor
dec
outsb
inc
arpl
add
out
cmc
ja
adcl
clc
outsb
mov
jl
gs
add
rorl
sbb
hlt
dec
adc
dec
or
ret
loopne
and
clc
add
scas
and
arpl
pop
mov
in
add
mov
adc
and
mov
mov
mov
mov
repz
lret
mov
push
jp
insl
xor
sbb
cmp
inc
inc
mov
xor
idiv
inc
mov
insl
bound
mov
lret
cld
cmc
in
loop
jns
addr16
int3
dec
stc
mov
pop
js
or
jno
out
aad
mov
int3
icebp
insb
xchg
xor
insb
cmc
aas
inc
int
push
push
cli
nop
push
pop
insb
xchg
mov
inc
xchg
movsb
sbbl
mov
sbb
aam
jle
push
cmp
sub
xchg
and
ret
pop
adc
xor
aaa
aad
es
push
pop
in
lret
js
outsl
xrelease
je
sbb
xor
mov
xor
push
mov
jmp
mov
ret
nop
jl
pop
xchg
sbb
lds
fistpll
xchg
sbb
add
mov
insb
stos
mov
adc
subb
sub
leave
call
dec
pop
rclb
xor
scas
mov
vmovsd
aam
jmp
cmc
cltd
test
int
sahf
inc
testb
pop
outsl
js
mov
xchg
push
and
mov
jl
inc
in
or
dec
pand
and
push
cld
movsl
lret
jmp
inc
test
jno
movsb
scas
imul
mov
xchg
in
xchg
mov
jge
cwtl
pop
dec
sbb
push
movsl
testl
sub
mov
in
jmp
jnp
push
pop
pop
lods
iret
pop
rcrb
adc
loop
pop
jae
adc
cmc
ret
mov
aas
int3
inc
sbb
repnz
jno
xchg
nop
in
xchg
push
cmc
mov
pop
jmp
mov
adc
xchg
fs
lock
or
adc
mov
std
call
cmp
pop
mov
int
mov
mov
lea
pop
pop
or
nop
or
sbb
pop
jmp
sar
shl
iret
xchg
arpl
clc
cmp
mov
mov
sbb
lahf
and
aad
test
add
cmp
xor
pop
xchg
xor
test
jg
cmp
or
insb
daa
addr16
cmpsl
jns
xchg
rcrl
je
add
mov
clc
iret
mov
test
in
jecxz
cmpsl
and
pop
outsb
mov
cmp
jae
lea
xchg
cmp
xchg
jecxz
loope
mov
dec
add
mov
mov
jb
es
das
mov
dec
fs
mov
bound
jb
frstor
cltd
sbb
cmpsb
jo
in
ds
cmp
cmp
xor
or
xchg
popa
pop
inc
das
or
je
adc
jg
sbb
gs
fs
mov
dec
inc
popf
jmp
fcompl
idivl
xchg
jne
cli
pop
enter
push
mov
cmc
dec
inc
cmpsl
cs
inc
idivb
pop
test
fyl2xp1
sub
mov
shl
in
mov
pop
test
adc
sbb
pop
sbb
mov
jne
nop
pushf
inc
mov
pop
stc
test
ja
loopne
stc
addb
pop
push
push
ret
cmp
push
movl
xchg
stc
sahf
stos
sbb
in
jcxz
inc
xor
in
sbbb
loope
test
outsb
hlt
int
mov
and
jmp
adc
leave
hlt
xchg
nop
jecxz
int
push
test
outsb
mov
sub
sbb
push
sub
icebp
insb
out
push
ror
dec
mov
loopne
jno
mov
xor
push
mov
rol
stos
dec
fisttps
test
add
ret
hlt
or
movb
push
xadd
arpl
out
push
xor
and
push
adcb
out
cli
daa
rclb
das
popa
shrl
mov
loop
pusha
mov
mov
filds
push
adc
test
out
or
das
adc
mov
lea
movsb
jo
and
inc
cmp
addb
pusha
rcrl
ret
pop
bound
mov
in
pop
xchg
pop
xchg
loopne
sbb
leave
sub
out
dec
aaa
bound
and
xor
fwait
shr
sbb
sbb
packsswb
xchg
xor
loop
pop
popa
test
jecxz
inc
sbb
mov
push
stos
or
imul
jge
push
add
and
push
cmp
inc
aam
xchg
pop
or
int
ja
mov
pop
add
push
int3
sub
xlat
in
mov
sub
lods
iret
and
mov
push
jns
daa
out
or
scas
fisubs
lock
out
jb
inc
imul
sbb
add
jle
in
jae
stos
add
jnp
mov
inc
pop
sbb
sub
repnz
out
daa
cld
pop
inc
hlt
add
jg
fs
scas
mov
xorl
push
mov
fnstcw
jecxz
push
jno
adc
lods
and
dec
lock
pop
aad
dec
add
repz
mov
sub
mov
rorl
sbb
push
sbb
inc
jo
lret
jmp
lret
cli
lcall
scas
or
or
std
xor
and
popf
cmpsl
push
pop
push
or
dec
ja
enter
int3
sbb
mov
in
fidivrs
aam
jb
outsl
sbbb
es
mov
mov
out
int
dec
mov
and
sub
imul
mov
ret
sbb
jecxz
pop
inc
cmp
orl
mov
push
into
stos
lcall
das
xlat
aad
movsb
cmpsl
inc
out
adc
pushf
sbb
cmp
int
fcmovb
mov
or
mov
repz
push
adc
sub
sti
cmp
push
mov
ret
cmc
pop
cld
out
insb
cmc
ja
jnp
cmpsl
ljmp
or
xor
fsub
movsb
test
mov
adc
test
stos
es
je
adc
or
rorb
cli
outsl
or
push
es
shrl
sub
xchg
jg
stos
jnp
ja
xlat
mov
out
fwait
or
push
repnz
divl
sub
insb
stc
inc
mov
in
xchg
lahf
aad
stc
add
inc
pop
xor
popa
scas
add
pop
sbb
sub
rep
sub
dec
aas
out
inc
out
out
xchg
fsubs
jg
sub
mov
pop
xor
inc
pop
je
jle
pop
fs
jns
push
cmp
pop
frstor
div
stos
dec
ja
lock
fidivs
mov
stc
imul
imul
fiaddl
push
dec
dec
lods
data16
inc
mov
popa
jnp
pop
xchg
jbe
mov
jl
imull
ds
xor
mov
movb
popf
xor
ret
or
ljmp
in
dec
popa
mov
push
test
ss
mov
xchg
adc
lods
ljmp
andb
pop
imul
lods
mov
cltd
ret
xchg
inc
xorw
xchg
mov
enter
aad
and
push
jo
mov
iret
sub
pushf
shll
popa
mov
rcll
lock
push
int3
into
mov
jns
mov
sbb
lods
iret
inc
out
jo
mov
loop
fwait
pop
pinsrw
je
or
jb
in
shll
repz
jno
addr16
jl
jo
xchg
push
push
ret
movsb
into
dec
or
sub
inc
mov
fnsave
lods
push
add
dec
cmc
aad
cmc
in
jmp
arpl
mov
push
test
pop
and
adc
ljmp
jmp
inc
ja
pop
fmull
mov
mov
lock
sbb
movsl
mov
add
inc
stc
mov
xor
in
cmp
add
push
out
mov
lods
ret
xor
and
out
mov
test
push
outsl
daa
and
mov
and
jns
cmc
or
push
inc
int3
mov
fcmovne
xor
adcb
jo
inc
mov
outsb
lock
mov
sub
jno
jg
push
loopne
les
xor
adc
add
in
aam
ss
aaa
add
jge
sbb
xchg
fs
sbb
push
je
jecxz
clc
fcomps
mov
roll
addr16
popf
and
sub
sahf
add
mov
xlat
loopne
ret
ret
sbb
inc
inc
lret
hlt
sbb
push
mov
mov
cmc
mov
push
inc
add
jno
insb
in
mov
pop
cmp
xchg
sub
imul
stos
fmuls
popf
loop
sbb
xchg
cli
push
push
nop
inc
out
mov
sbb
xchg
test
insb
jg
mov
out
je
fdivs
call
pop
mov
add
lock
inc
mov
mov
add
mov
roll
lret
ret
mov
movsl
fcmovnu
mov
ja
mov
dec
or
cwtl
sub
mov
ljmp
cltd
pop
mov
mov
adc
sub
and
mov
lcall
icebp
xchg
arpl
push
xor
idivl
rorl
adc
jl
insb
popa
addb
aad
push
rorb
mov
dec
mov
mov
fwait
adc
push
int3
lds
cmc
sbb
sub
mov
xchg
or
iret
sub
push
pop
inc
bound
jp
imul
rolb
jbe
pop
imul
subl
into
out
jle
bnd
add
inc
push
outsb
out
leave
mov
push
fmul
push
ja
std
inc
into
xchg
jge
movsb
dec
inc
mov
sarl
pop
js
add
mov
sub
scas
push
dec
push
mov
cld
xor
mov
mov
loop
inc
mov
stc
cmpsl
aad
and
mov
negb
imul
xchg
sub
fdivrl
push
dec
mov
div
cmpsl
in
inc
xlat
sbb
cwtl
imul
xlat
mov
das
push
or
jcxz
push
or
xchg
mov
insb
vmovsd
and
decl
dec
and
aaa
mov
pop
xor
aas
dec
cmp
pushl
push
sbb
jl
cmpsl
out
inc
mov
xchg
xchg
fildll
and
sub
sub
fmul
mov
fiaddl
jecxz
sub
sub
jg
fwait
sti
cmp
ds
mov
jmp
cmp
mov
push
and
pushf
imulb
sbb
lcall
cs
xor
pop
jmp
rorl
pop
xor
int3
divb
cmpsb
lock
movl
adc
xor
pop
adc
dec
cmp
push
jbe
dec
and
cli
adc
xchg
test
pop
add
mov
aam
mov
frstor
push
sub
jge
in
add
in
add
fisubrl
imul
xchg
jno
push
arpl
and
pop
jbe
or
int3
sbb
mov
dec
hlt
cmp
lods
inc
call
decl
adc
sub
lods
sub
fsub
jle
fildl
mov
loopne
sub
push
lcall
out
lcall
imul
rep
inc
movsb
sbb
filds
push
movb
mov
adc
and
call
in
add
push
movl
inc
out
cli
xchg
cmp
mov
call
enter
push
aaa
and
sbb
pop
fsubrp
lods
jne
or
test
adc
ljmp
jne
add
imul
sub
stos
mov
mov
pop
push
inc
aam
xor
sub
or
xchg
enter
dec
pushf
je
test
popa
mov
jp
ljmp
popf
cmc
jb
pop
sbb
mov
je
sub
and
scas
pop
sub
cmp
adc
pop
sbb
aas
xchg
and
int3
aam
mov
mov
lret
pop
mov
inc
adcb
add
jmp
jle
mov
mov
out
not
sub
adc
sub
rorl
and
push
aaa
out
lcall
daa
aam
aam
cmpsl
out
jae
ret
xchg
xchg
add
fwait
outsl
aas
mov
and
xchg
adc
inc
mov
loopne
mov
pop
adc
das
cli
mov
jl
mov
push
xlat
test
cmpsl
cwtl
xlat
in
sub
ja
jns
insb
mov
cs
mov
sub
push
fistl
push
stos
push
mov
nop
cmp
mov
into
mov
push
or
mov
dec
or
rorb
scas
inc
enter
rcll
insl
jns
sub
shll
add
rol
push
ret
jbe
push
mov
cwtl
pusha
jo
and
cli
mov
pop
sar
inc
pop
inc
inc
jecxz
mov
movsl
cmp
xchg
cmp
sub
add
bound
insl
ljmp
rdrand
pop
push
in
sub
jle
int
test
vorps
xor
fcompl
cwtl
push
xor
inc
movsl
cmp
xor
sbb
ds
ret
pop
mov
and
push
scas
pop
jp
test
inc
inc
pop
sbb
mov
into
or
clc
jl
xor
or
iret
inc
daa
sahf
fistl
ja
sub
iret
push
or
sub
loop
mov
xchg
std
cmpsb
dec
mov
cmp
rorb
test
addb
push
sar
stos
fimull
shlw
shrb
sbb
jl
add
int3
xor
clc
cmp
cmp
cmp
add
clc
fdivrl
jno
addr16
or
shrb
add
inc
jle
nop
mov
xchg
inc
jl
adc
mov
je
push
repz
dec
lods
dec
lods
jnp
inc
push
in
xor
xchg
dec
pop
xlat
into
out
out
mov
and
add
xchg
mov
pop
shlb
jb
mov
mov
mov
shl
dec
add
sub
nop
sub
fwait
xchg
pop
push
cltd
popa
xor
test
cmpsb
cmp
push
or
mov
scas
xchg
in
mov
push
xor
xchg
loopne
rcr
xor
addr16
cmp
pop
push
test
adc
stos
add
rolb
dec
cmp
dec
sahf
mov
es
dec
lods
mov
cli
cmc
inc
cmpsb
jmp
xor
mov
mov
pop
rcrb
mov
jp
faddl
xlat
mov
jp
adc
sbb
push
insl
lea
jge
push
faddl
xchg
dec
jmp
sbb
je
sbb
lods
fildll
jge
dec
fs
shl
cmp
pop
dec
inc
mov
rorb
cmp
mov
cmpb
sbb
lods
mov
push
push
into
imul
rcll
xor
inc
call
inc
js
aam
xor
sub
aaa
mov
out
test
xlat
daa
subl
fcompl
xor
inc
std
cmc
insl
int3
lcall
dec
and
cmpsl
int3
mov
dec
pop
inc
clc
mov
in
jb
js
xchg
pop
fimuls
pop
mov
movsb
imul
inc
sub
repz
push
jmp
push
fstps
mov
dec
test
bound
or
ficomps
inc
sub
push
add
jns
cs
out
add
xor
cmp
lods
aad
dec
add
jno
adc
es
adc
repz
and
jb
adc
mov
in
sbb
lret
ja
push
xchg
xchg
mov
xchg
sbb
mov
dec
repz
sub
jle
pop
cmc
faddl
scas
andb
rcrb
rorb
mov
sub
shl
cmc
xchg
xorl
nop
rolb
call
cmpsl
mov
scas
cmp
sbb
mov
ja
jge
add
cs
inc
or
xchg
jb
mov
sti
lods
push
das
pop
mov
sbb
add
cld
inc
add
pushf
and
in
push
js
pop
fbstp
in
mov
xchg
mov
add
outsb
push
mov
mov
mov
scas
imul
mov
test
loopne
popf
enter
push
les
push
xchg
fnstenv
cmp
data16
pop
mov
push
movsb
xchg
pop
xchg
frndint
pop
ds
fucomi
inc
add
dec
add
nopl
mov
push
lods
xchg
fists
test
sub
xchg
scas
loop
cmp
daa
sbb
push
rorl
sbb
mov
imul
iret
push
push
pop
cltd
xchg
adc
pop
lret
dec
sub
xor
inc
or
and
mov
scas
jl
aaa
mov
fstl
stos
test
jnp
cmc
insl
out
in
lcall
pop
aad
or
rclb
call
arpl
sbb
add
jg
push
xchg
jb
jnp
xor
and
sti
mov
aad
mov
jno
ss
push
xchg
mov
into
bound
jae
or
imul
repz
movsl
popa
and
jp
movsb
addr16
movsb
decb
decb
int3
ljmp
push
inc
pop
xor
adc
mov
push
inc
aad
and
cmp
fldt
out
aam
add
fdivrl
aad
div
push
jo
mov
insl
sbb
in
pop
popa
outsl
inc
sub
inc
adc
sbb
or
int3
or
loopne
jae
mov
in
push
ret
lahf
iret
xchg
xor
mov
push
xchg
mov
insl
aad
cli
xorl
movsl
aas
lods
sbb
jne
add
je
add
dec
imul
xchg
push
test
cld
aas
ret
cmpsl
icebp
push
jecxz
pop
scas
fldcw
sub
xor
cmc
in
imul
dec
pop
ljmp
mov
mov
fcomi
stos
jae
cld
stos
mov
adc
insb
cmpsl
inc
mov
int3
sub
cmp
cmp
lods
pop
xchg
mov
inc
inc
pop
sti
mov
std
js
jp
lods
mov
fcmove
iret
repz
sbb
in
sbb
repnz
stc
out
cmp
mov
lahf
lock
in
fldl
jb
imull
mov
int
inc
pushf
int
jle
mov
fmul
aad
xor
xlat
xor
and
fmuls
dec
inc
fdivs
andb
rcll
int3
pop
icebp
icebp
fiaddl
in
insl
fisubl
fstps
rcll
inc
aam
add
pop
sub
and
repz
inc
shll
cld
ja
pop
xor
fidivl
or
test
or
leave
push
xor
jnp
adc
pop
fiaddl
dec
adc
pop
int3
into
imul
push
push
pop
jbe
dec
push
aad
int
push
aas
sbb
jmp
jb
ret
sub
xchg
in
sbb
jnp
aas
inc
sub
add
mov
rcrl
cmp
xchg
testl
sub
dec
cmpsb
xchg
call
push
add
icebp
inc
test
bswap
enter
jns
inc
mov
clc
out
in
push
xchg
inc
cmpsb
lret
mov
xchg
add
arpl
insb
aas
out
xchg
lcall
mov
mov
xor
mul
arpl
push
andb
add
mov
push
pop
mov
out
lret
scas
add
mov
js
int
sti
fptan
je
in
push
jp
sahf
xor
sub
enter
cli
in
nop
add
xchg
cmp
xchg
das
lock
insl
ficomps
xor
fiaddl
popf
popf
mov
scas
lea
test
push
mov
push
cmpsl
faddl
data16
push
sub
stos
and
scas
mov
or
test
inc
adc
inc
repz
es
inc
push
jnp
std
jno
add
and
movsl
push
mov
lods
add
insb
sub
in
jmp
enter
imul
push
gs
dec
inc
test
mov
cmp
mov
mov
cmpb
xchg
stos
std
jno
push
out
movsb
cmp
into
lods
sub
add
daa
mov
xor
outsb
in
xor
or
push
cs
cmc
add
lcall
cmp
leave
or
add
inc
test
pop
adc
movsl
sbb
daa
mov
sahf
das
jb
jmp
out
out
mov
fisttpl
jne
fidivs
mov
out
dec
cli
mov
lcall
xchg
cmpsb
lahf
sti
les
xor
jmp
xchg
fistps
sub
cmpsl
lret
mov
lcall
jmp
or
shlb
mov
sbb
lret
mov
inc
cmp
push
push
jb
aaa
xorl
daa
or
addr16
sub
jo
loopne
imul
dec
sub
adc
insl
test
test
or
imul
jne
xlat
adc
ficomps
in
movsb
sbb
add
orb
in
mov
data16
repz
ret
xor
or
movsb
in
ja
pop
add
jmp
sbb
fnstenv
test
lods
mov
push
xchg
push
mov
test
jg
out
pop
sub
or
mov
push
in
aas
mov
lea
jge
out
stc
sarb
adcl
shrl
inc
scas
inc
sub
mov
dec
sub
jmp
pop
cli
fcomps
aas
xor
xchg
sahf
cmp
in
test
jmp
cmp
or
mov
divl
pop
adc
adc
jo
jne
faddl
stos
out
pushf
mov
imul
int
bnd
jl
adc
jno
aas
loopne
incl
int3
pop
xchg
fiaddl
in
mov
es
mov
sbb
dec
inc
int
ret
mov
addr16
mov
pop
mov
les
aaa
adc
js
push
and
cmp
xchg
lock
push
gs
add
dec
add
jno
cmpsl
das
adc
shll
std
mov
fisubs
push
aad
sbb
sub
stc
in
in
push
imul
repz
or
inc
das
cs
js
cmpsl
jge
daa
movups
pop
pop
cli
sbb
or
out
cmp
lods
scas
stos
dec
outsl
xchg
in
pusha
jbe
add
aad
cmp
mov
xchg
into
stos
dec
cld
push
or
popf
inc
outsl
add
cmp
add
jb
push
dec
push
xchg
mov
data16
xor
pop
ror
insl
dec
popf
mov
out
push
sti
inc
jmp
xchg
dec
mov
pop
adc
pusha
int3
repnz
stc
cmp
push
push
out
sub
cmpb
andl
adcl
test
movb
insb
xor
mov
cs
sbb
adc
fiaddl
mov
mov
loopne
dec
sbb
outsb
jge
xor
cld
adc
movsl
xchg
stos
pusha
mov
movl
mov
mov
jmp
mov
pop
pop
dec
cmp
sbb
aas
mov
xor
idiv
test
int
test
inc
repz
into
sub
loopne
fdivl
and
xor
push
aaa
lock
xchg
xlat
jmp
sbb
mov
mov
sbb
shrb
xor
dec
add
popl
in
and
add
mov
shrl
das
sarl
test
xchg
call
mov
data16
shr
out
pop
inc
dec
addr16
addb
sub
dec
cwtl
fcmovnu
or
xchg
in
jns
fildll
mov
shrl
cs
call
ret
cmp
addr16
ljmp
sti
push
xchg
loop
hlt
adc
mov
dec
jmp
pop
cmp
jns
cmc
xchg
pushf
popf
dec
test
or
mov
stos
adc
test
pushf
or
add
ljmp
fmull
jb
popf
lods
add
stc
dec
mov
enter
cltd
imul
sti
and
and
pop
fsubr
pop
mov
push
push
loop
cmp
leave
scas
inc
cmp
das
icebp
push
jle
mov
inc
mov
shll
mov
inc
jmp
int3
stos
sub
enter
or
sbb
call
cmpsl
mov
inc
cmp
jnp
sub
fwait
cmpsb
stos
jbe
in
xchg
push
xor
mov
sub
mov
push
outsb
fnstenv
sbb
mov
pop
mov
test
lods
addr16
mov
jmp
fsubp
mov
mov
add
nop
decb
int
cltd
adc
pop
cld
addb
push
ljmp
cwtl
sub
mov
push
fnstsw
mov
loop
dec
mov
push
dec
ss
add
jne
fcomp
ja
xor
mov
in
mov
ret
cmpsl
adc
sub
dec
adc
and
xor
scas
repz
cmp
cmp
cltd
ficoms
jbe
mov
insl
xchg
out
nop
ret
adc
fimuls
add
push
jbe
dec
pop
daa
jmp
loopne
repnz
imul
xchg
add
dec
adc
xchg
stc
push
lcall
mov
mov
add
aad
pop
push
fdivrs
int
fstl
out
and
mov
jo
or
or
jne
cmp
jae
jmp
orl
in
mov
xchg
xchg
pop
xchg
mov
test
mov
icebp
cmpsl
out
sub
jg
lods
mov
push
push
int3
inc
dec
aas
enter
pop
data16
add
mov
jb
shrb
hlt
mov
mov
jne
fsubr
jb
xchg
inc
mov
popa
push
push
dec
js
mov
sbb
fs
dec
mov
imul
lret
enter
xchg
in
and
data16
mov
xor
nop
add
and
add
jns
jecxz
into
dec
lret
add
sub
movsb
dec
adc
jmp
idiv
jmp
pop
js
testb
gs
in
test
jno
mov
sbb
leave
les
add
les
inc
cmpsb
pop
mov
hlt
adc
cmp
dec
test
lods
lea
hlt
bnd
cmpsb
lds
fcmovbe
mov
mov
cmp
aad
das
cmp
and
and
fbstp
xor
stos
pop
xchg
lods
xorl
in
xor
stc
jo
es
imulb
and
ret
bound
sub
pop
sbb
and
mov
repnz
jg
jge
sahf
cld
mov
mov
sbb
sub
jno
addr16
cmc
inc
mov
lret
mov
and
lret
clc
and
cmc
mov
pop
cmp
adc
jmp
push
push
xchg
and
std
push
mov
mov
push
cmpxchg
pop
and
outsb
out
and
jnp
xor
inc
shll
mov
in
test
incl
popa
daa
push
mov
std
shr
mov
xchg
dec
sub
sbb
cli
add
lret
sub
mov
push
mov
or
dec
push
mov
cwtl
popa
mov
outsl
or
push
pop
popa
mov
iret
arpl
cwtl
sti
sub
rcrw
add
addb
je
bound
sbb
out
call
jno
pop
dec
push
mov
lahf
jle
push
rol
dec
xchg
add
popf
int3
mov
sbb
sub
rol
xlat
add
ljmp
jmp
jno
inc
jmp
out
leave
not
loop
xchg
mov
add
pop
adc
lods
pop
jle
push
push
xchg
out
outsb
out
ror
sub
inc
sub
addl
mov
adc
movsb
pop
sahf
dec
jge
sbb
lea
dec
sub
shll
shlb
jg
les
scas
or
fists
cld
sbb
insb
sub
outsl
or
mov
pop
sub
xchg
popf
xchg
dec
lahf
leave
jmp
and
adc
leave
add
inc
in
outsl
mov
mov
xchg
imul
sahf
sub
xchg
rorb
add
mov
jl
ljmp
leave
jnp
xchg
jo
test
into
adcl
inc
imull
and
xorl
and
sub
cmp
insl
jne
push
mov
loopne
or
sub
fiaddl
inc
xchg
sub
mov
ret
std
adcl
les
fnstcw
rclb
es
inc
push
insl
and
xchg
pop
jmp
mov
stc
out
in
lahf
bound
and
pushf
sub
sbb
push
je
inc
cmp
or
movaps
push
mov
mov
push
dec
je
jecxz
pmaxsw
sub
xorl
imul
push
push
sub
out
or
xor
pop
test
inc
pop
sbb
xor
popf
cmp
test
in
dec
dec
rclb
pop
stos
dec
and
cmp
loopne
int3
cwtl
inc
jb
dec
mov
rolb
push
sbb
insb
push
xchg
stos
xchg
jne
fmull
test
lret
push
pop
out
leave
movb
pop
sbb
sub
inc
adc
lods
in
loop
icebp
sub
jno
dec
ja
push
mov
xlat
and
xchg
testb
mov
cmp
add
enter
adc
ret
mov
add
dec
in
addps
in
cmpsl
ret
test
pop
fcomps
and
mov
daa
jne
adc
fnstcw
icebp
add
add
iret
sti
pop
or
xchg
sti
adc
addr16
test
outsb
sti
sub
adc
dec
cmp
jmp
add
lods
dec
push
int
sub
sbb
sub
mov
mov
aad
hlt
xchg
push
addr16
mov
or
subl
push
out
mulb
mov
ss
xor
xchg
inc
stos
or
or
clc
fstpt
jae
pop
sub
lds
inc
cwtl
adc
xor
cmp
and
imulb
jnp
or
loope
inc
xchg
or
cmc
ds
loopne
scas
mov
psrld
ljmp
jp
inc
pop
insl
mov
out
mov
or
cltd
sub
add
mov
stos
mov
xor
std
xchg
pop
ret
mov
cmp
mov
pop
jbe
adcb
leave
cs
arpl
sti
fstps
jnp
fs
jle
testl
xchg
pusha
push
pinsrw
int3
cmpl
push
in
test
or
test
cmp
aad
inc
adc
jp
cmovb
mov
jp
jns
cli
aam
push
sbb
add
fisubrl
loope
cwtl
pusha
jo
xor
sbb
mov
cltd
xchg
lds
inc
pushf
mov
movsl
pop
inc
xchg
test
jge
jp
fbld
cmpb
cmpsl
mov
jle
adc
push
add
imul
sbb
sti
sub
pop
sub
aam
dec
mov
je
mov
sub
sub
add
gs
arpl
pop
cmp
imull
jge
add
int3
mov
aad
lock
add
sti
hlt
dec
push
inc
mov
adc
jo
jg
pop
fisubrl
iret
adc
or
ds
mov
bound
fiadds
xchg
repnz
enter
test
and
mov
imull
or
sbb
arpl
add
call
push
inc
xchg
pop
lea
out
pop
ljmp
packsswb
push
je
iret
jb
mov
sbb
mov
leave
btr
mov
stos
or
adc
cmp
data16
xor
arpl
mov
mov
dec
jo
jmp
sbb
push
jmp
and
jp
ficoms
movl
lahf
cmp
insb
out
cli
and
inc
lret
cmpl
inc
lahf
adc
jne
sar
outsl
ficoms
pop
lret
inc
movsl
xchg
or
call
lcall
fdivl
xchg
dec
and
fsts
fcmovbe
mov
outsb
add
out
jp
dec
ret
mov
adc
dec
push
xchg
xor
xchg
cltd
push
xor
adc
pop
xor
sbbl
mov
cmp
sbb
adc
into
jle
lods
adc
cli
dec
push
xor
dec
fisubrs
or
dec
sti
ret
incl
push
push
roll
xor
xor
icebp
stc
bound
pop
into
ja
mov
xor
ljmp
adc
pushf
loope
adcb
dec
pop
rcr
es
repz
and
imul
fiaddl
mov
mov
or
jp
ret
aaa
xor
movsb
mov
dec
or
int3
jle
sub
xor
xchg
jge
movsl
lods
icebp
out
adc
or
mov
xor
es
jnp
lret
lret
jae
outsl
pushf
loopne
and
hlt
push
js
lods
add
mov
xchg
aas
int
mov
fwait
mov
test
push
cmp
daa
arpl
jbe
adc
popf
and
mov
mov
mov
inc
inc
cmp
insl
mov
es
or
mov
pop
popl
imul
mov
fwait
movsb
push
push
adc
ficoms
mov
cli
sbb
lcall
push
ret
hlt
and
stc
je
popa
rorl
push
es
sub
in
jl
add
pop
mov
jnp
and
icebp
push
jmp
enter
push
stos
arpl
nop
pushf
in
test
test
push
jge
shrl
std
inc
push
jnp
dec
loope
cmp
outsb
push
rclb
pop
jg
inc
enter
test
sarb
loopne
mov
and
push
and
decb
cmc
inc
adc
push
jnp
out
add
fisubs
sbb
in
xchg
nop
mov
cmp
xor
mov
int
mov
xchg
mov
pop
lods
sub
int3
je
push
arpl
mov
sub
in
pop
imul
repz
dec
sbb
inc
add
test
fisttps
fs
repnz
jmp
inc
stos
fidivs
adc
into
cmpsb
inc
lret
mov
sub
push
inc
and
lock
jg
in
mov
lcall
mov
test
add
and
mov
fisubrs
aaa
mov
jae
cs
pusha
mov
mov
divl
inc
dec
jmp
push
jp
lahf
subb
out
test
loop
push
adc
sbb
sahf
mov
jecxz
add
test
in
ret
loope
jge
xor
mov
push
and
xchg
mov
pop
push
rorb
insl
pusha
push
out
mov
jl
test
inc
out
lret
adc
xor
pop
cs
and
xor
push
bswap
gs
addr16
jl
jnp
pop
mov
push
lods
icebp
aad
push
sbbl
lods
sbb
push
mov
xor
xchg
out
loop
push
and
testl
xchg
fidivrl
push
push
ja
jp
sbbb
jecxz
lock
sub
cs
mov
rcll
insl
iret
dec
cmp
push
fisttpll
loop
pop
jb,pt
pusha
popf
ja
popa
pop
sbb
cltd
aam
lea
cmp
sub
daa
jge
xchg
lea
loope
jg
jl
in
fimuls
adc
xchg
sbb
pop
push
inc
adc
xchg
mov
loopne
cmp
lds
rcrb
dec
js
stos
arpl
flds
inc
xchg
jmp
sub
jge
lcall
mov
imul
insl
push
sahf
or
push
sub
leave
mov
or
and
and
je
push
scas
icebp
push
cld
movsb
pop
std
pusha
iret
add
or
orb
shrl
and
xor
mov
cmc
out
fiaddl
scas
movsl
xorb
pushf
scas
add
add
push
sub
lret
fists
ffreep
stc
ja
xor
and
call
dec
lahf
or
fstpt
fidivrl
cld
cmp
popa
pop
js
pop
adc
fs
xchg
xor
xor
mov
das
mov
call
fisttpl
inc
cmp
mov
lods
inc
add
inc
push
in
loop
out
fistps
inc
mov
repz
mov
not
xlat
pop
and
jle
push
adc
jne
or
into
cmc
icebp
psrlw
pusha
jo
sub
push
sub
xchg
clc
enter
jge
mov
js
push
cwtl
clc
sbbb
and
jb
pop
lahf
testl
cmp
mov
call
bound
jmp
xchg
pop
lcall
repnz
mov
std
jmp
into
shlb
sbb
int3
jg
sub
sub
mov
adcb
dec
xchg
daa
shl
divb
inc
out
adc
cmp
jne
xchg
int
mov
push
xchg
mov
or
js
decb
addr16
jg
mov
movsl
in
fistl
stos
test
test
rcrl
cwtl
xor
arpl
mov
xchg
adcb
mov
dec
aaa
dec
lea
pop
cwtl
push
and
lcall
xchg
or
test
fdivrs
adc
and
xchg
xor
mov
push
lret
pop
or
dec
sub
adc
jo
add
adc
push
fstps
jne
cmp
sbb
xchg
cs
push
out
fcmovbe
lea
push
mov
fwait
mov
lds
clc
jnp
jecxz
cmpsb
cmpsb
in
das
imul
je
adc
rorl
sbb
daa
adc
add
push
leave
orb
adc
adc
arpl
mov
push
xor
lds
shrb
into
sbb
sahf
ja
loopnew
push
mov
add
out
idivl
mov
mov
adc
adcb
nop
out
inc
xchg
test
movsl
xor
incb
xor
jnp
imul
dec
pop
lret
insl
nop
mov
push
add
and
popa
rcrl
cmpsl
addr16
pop
lcall
rol
scas
push
popa
into
cwtl
outsl
xchg
shrb
adc
sub
sub
xor
mov
sub
jb
sbb
add
movsl
cmc
push
adc
cmp
lock
les
inc
lock
test
inc
sub
repnz
ret
add
test
lcall
ss
ss
scas
fdivrs
mov
mov
cli
dec
push
inc
add
cs
imul
movsb
ljmp
cmpsl
testl
sub
fisubl
nop
test
pop
and
mov
adc
into
fisubrs
decb
adc
sub
mov
filds
test
jge,pt
lcall
inc
add
inc
sub
movsb
pop
scas
push
mov
enter
movups
test
ss
or
iret
adc
xchg
push
fisubl
push
push
push
insl
pop
and
out
lret
dec
jl
hlt
xchg
add
scas
or
notb
iret
jae
xchg
ljmp
loopne
rorb
or
popa
mov
pop
rcl
insl
mov
test
iret
cmpsl
mov
call
pop
daa
movsl
cmpsl
cmpsb
fbstp
push
rcrb
mov
decb
movb
pushf
cli
test
xchg
fwait
cmpb
adc
je
pop
dec
pop
daa
test
outsb
dec
or
mov
movsl
std
jmp
xchg
inc
push
xor
xchg
subl
in
testl
sahf
pop
loope
xor
lcall
cmovle
loopne
rcl
mull
das
out
outsl
xor
iret
sub
out
sti
mov
mov
sub
adc
icebp
out
iret
mov
in
pop
lods
mov
cmp
loop
cmp
into
mov
mov
mov
push
xchg
jmp
rorb
jg
arpl
imul
add
dec
data16
test
mull
stc
cld
hlt
sbb
testb
lret
test
stc
loopw
sub
mov
mov
mov
out
ljmp
fnstenv
loope
mov
icebp
popa
sahf
hlt
xchg
add
jb
mov
jnp
add
sbb
mov
stc
call
jmp
das
das
jnp
xor
jl
mov
dec
jo
sbb
jbe
roll
and
and
pop
fbld
repz
mov
add
clc
lahf
clc
dec
xor
inc
cmp
adc
loope
ja
stos
jmp
cmp
mov
fsubs
adc
inc
mov
and
push
daa
int
sub
aaa
xchg
in
mov
pop
addb
ret
lret
dec
xor
or
pushf
sub
cmp
pusha
lahf
xlat
add
movsb
mov
fidivs
mov
inc
sub
popf
xor
sbb
jne
fistl
adc
iret
inc
xor
out
aaa
aad
jb
fiaddl
into
fwait
jl
sarb
lcall
sahf
pop
out
push
and
jge
xlat
inc
fimuls
idivl
das
or
mov
sti
gs
mov
jge
mov
cmp
push
pop
dec
lods
xchg
out
and
pusha
sbb
mov
xchg
mov
dec
jne
loopne
cs
bound
shlb
cmpsb
jno
jg
repz
mov
mov
test
xchg
jb
inc
dec
movsl
mov
or
sub
dec
mov
mov
inc
inc
outsl
cmp
stc
bound
push
ljmp
movsb
push
mov
xchg
sub
addr16
test
dec
push
mov
mov
leave
jo
or
or
push
sahf
enter
test
mov
rorb
lret
insb
daa
pushl
jo
js
inc
out
add
addr16
mov
cli
aas
scas
xchg
in
movsb
stc
jo
les
fs
sub
inc
mov
inc
shll
call
test
xorl
outsb
int3
cmp
inc
rcrb
cmc
leave
or
pop
jecxz
aad
inc
pusha
cmpsb
xor
mov
pop
mov
nop
cwtl
dec
ret
inc
inc
sarl
movsl
dec
mov
jo
pop
push
push
xor
ds
and
jo
add
jne
mov
aam
xchg
lds
sti
pop
adc
xchg
xchg
enter
rorb
mov
mov
xchg
movsb
stos
add
js
pop
mov
bound
insb
pop
sbb
pop
cmpsb
mov
xor
lret
icebp
lahf
or
stc
and
test
hlt
inc
fildll
xor
cli
jge
pushf
stc
push
or
cli
adc
mov
push
cmp
sub
aas
scas
ds
or
bound
xchg
imul
or
test
stos
pop
ds
add
call
xchg
out
jecxz
or
pop
mov
repz
adc
jecxz
fwait
cs
nop
loope
test
push
int3
cmp
ljmp
out
repz
xchg
pop
pushf
scas
cmc
orb
loopne
adc
xchg
or
ss
xor
icebp
xlat
out
add
pop
ja
iret
add
scas
push
jnp
pop
inc
dec
cmp
ret
popa
repnz
addb
jae
ficompl
shll
jnp
mov
fcomp
xchg
jle
push
repnz
pop
push
call
adcb
aam
push
pop
test
cwtl
in
xorb
dec
mov
or
jbe
outsb
pop
aas
nop
idivb
jl
xchg
popf
jne
inc
popf
push
jne
cli
xor
add
inc
subl
jge
xor
outsl
cmpsb
icebp
lcall
lret
bound
and
jg
mov
shll
jle
das
pop
notl
jae
cmp
inc
sti
nop
sub
ljmp
ljmp
repnz
or
stos
or
mov
sbb
aad
jge
faddl
repz
fs
test
push
je
test
outsb
fdiv
test
into
imul
imulb
daa
std
imul
xchg
cmc
pop
and
mov
mov
add
adc
push
jae
shlb
and
arpl
es
jle
loopne
aad
push
mov
shr
neg
filds
xchg
call
mov
test
leave
push
and
loop
andb
hlt
push
sbb
sahf
ja
in
cmp
pop
das
scas
xor
pop
repz
insb
inc
loopne
xchg
xor
mov
inc
not
pop
in
dec
pop
into
test
cs
cld
sub
in
data16
inc
gs
gs
jge
int
out
pushf
adc
adc
aaa
dec
add
int3
pusha
xchg
aaa
pop
cmp
dec
lods
ret
pop
push
sbb
shlb
push
jl
pop
mov
ljmp
lcall
negb
jp
mov
mov
hlt
xor
scas
dec
jg
cmpsl
mov
jbe
imul
lods
test
jno
xorl
cli
and
fcomps
cld
les
dec
xor
call
sbb
scas
fidivs
int
push
xchg
andl
ret
mov
add
int
push
notb
xor
lods
sub
and
repnz
push
sub
pop
clc
push
add
sbb
xchg
std
push
aad
out
and
sub
jb
cmp
decb
cli
add
in
fs
dec
or
push
repz
cmp
inc
dec
pushl
pushf
cmpsb
scas
pop
test
xor
cmp
ss
sub
cwtl
mov
stos
sarl
fnstenv
in
pushf
xor
mov
mov
add
sbb
sub
fisubrl
mov
fadd
repz
negl
and
or
sub
notl
in
and
lahf
subl
dec
fstps
jmp
cmp
sub
dec
dec
pop
es
pop
icebp
repnz
pop
mov
jecxz
dec
ss
std
mov
cmp
push
cmp
cld
outsb
sub
jbe
pop
xchg
push
mov
sub
mov
push
mov
sub
cmpsb
movsb
mov
mov
pop
lret
lret
pop
fnclex
cwtl
sub
nop
adc
pop
movsb
push
cwtl
shl
rol
dec
popa
dec
test
movsb
adc
xor
push
cwtl
mov
ljmp
jae
out
out
aaa
jge
xlat
add
and
loope
cmp
pop
dec
sbb
popf
out
pop
sub
ret
push
xlat
add
aas
sub
test
dec
mov
push
pusha
xchg
inc
lds
rcll
andl
aad
sbbl
sbb
leave
mov
sbb
cmp
adc
mov
inc
sbb
fbstp
push
mov
push
cmp
pop
btc
xor
fstps
and
jg
sub
or
scas
cmpsb
push
jno
mov
lock
mov
loop
mov
aaa
imul
jmp
push
mov
sbb
inc
fwait
push
push
push
mov
mov
xchg
sbb
je
je
or
test
sub
adc
xor
es
mov
pop
xchg
cmp
bound
test
mov
push
jns
add
repnz
add
lods
ret
popa
scas
cwtl
imul
test
ss
notl
jno
mov
clc
sbb
push
mov
call
or
in
sub
jmp
cs
jp
inc
xor
mov
mov
mov
in
xchg
and
xchg
mov
mov
in
daa
repnz
mov
dec
in
push
sbb
jb
jmp
out
test
or
subb
push
andl
nop
push
adc
dec
jb
dec
adc
xchg
fdivrs
mov
mulb
scas
sbb
cmp
stos
jl
popa
stc
imul
rorl
cwtl
fmull
push
test
es
repz
fs
popa
mov
iret
mov
insb
and
inc
mov
cmp
loop
bound
in
dec
test
add
jno
adcl
bound
mov
inc
sbb
sti
fdivrs
adc
mov
out
add
leave
pop
dec
sub
into
fdivl
jmp
adc
dec
popf
cmp
adc
ljmp
adc
stos
in
int
loopne
rorl
jno
cmp
push
orb
push
sub
out
arpl
neg
sub
sub
shl
mov
nop
and
mov
pop
pusha
aaa
out
ret
lahf
stos
lret
cs
std
sub
loopne
and
inc
push
cmc
push
sbb
pop
add
test
hlt
push
popa
mov
jb
repnz
inc
pop
cmp
and
mov
mov
add
sbb
or
lahf
lret
dec
movsl
mov
test
and
dec
jo
mov
lock
dec
rol
in
xchg
sub
aaa
lret
push
fwait
dec
cmp
jno
aam
inc
pop
sbb
je
dec
pop
cmp
testl
into
mov
adc
loopne
sbb
add
lds
add
sahf
push
and
mov
cmp
les
mov
enter
in
enter
pop
lcall
xor
in
jns
pop
inc
bound
push
jmp
decb
sti
bound
sbb
fdivr
fimull
inc
outsb
sarb
popf
sub
xor
inc
mov
jne
aam
pushf
jnp
test
and
pushf
fisttpl
inc
iret
jmp
ss
test
xorb
add
xor
jle
sub
fs
inc
push
add
sub
stos
lahf
shr
stos
or
push
jle
lcall
cmp
cmpsb
mov
andl
adc
mov
fsubl
mov
rdtsc
les
insb
pop
xchg
or
into
adcl
jo
or
sbb
cltd
lahf
xor
ds
jmp
ljmp
pop
insb
push
rorb
adc
outsb
jbe
mov
setae
pop
mov
jge
xchg
sbb
pop
mov
pop
shr
jp
bound
dec
mov
mov
sbbb
test
cmpl
xor
test
pushf
sub
loope
or
add
stos
cmc
imul
inc
push
pop
cmpsl
sub
adc
loope
or
ss
sbb
sub
dec
pop
test
call
out
arpl
cmp
scas
nop
mov
sar
sarl
aas
fs
pop
lea
outsl
xorl
ret
repz
ljmp
cs
outsl
jg
dec
scas
mov
hlt
add
imul
push
jno
push
gs
add
lret
movsb
cmp
jge
jbe
lcall
std
mov
mov
sub
add
into
xchg
jae
or
jns
imull
rolb
outsb
mov
loope
xorl
in
iret
adc
sahf
les
mov
cmp
mov
lahf
mov
stos
sbbl
sub
push
rcrl
adc
pop
out
mov
mov
sub
in
repnz
xor
cs
xor
enter
bound
inc
xchg
into
add
sub
inc
xlat
xor
es
sub
mov
leave
jmp
imul
fsubl
leave
ja
inc
cmp
inc
cld
scas
sub
push
int3
xchg
inc
pop
stos
vcvtss2si
mov
sbb
inc
xchg
outsb
sub
test
cmc
ja
xor
pop
or
mov
push
ljmp
fsubs
dec
notl
push
xor
pusha
int3
aam
jmp
call
cs
stos
push
mov
xchg
je
shl
or
movb
cltd
dec
movsb
and
test
adc
out
std
test
jle
dec
scas
xor
popf
or
movsl
cmp
add
lcall
loopne
xchg
popf
mov
or
mov
jg
cmp
xchg
or
cmp
xor
pop
call
push
fs
adc
xor
or
aad
mov
lea
mov
rol
inc
mov
adc
adc
mov
repz
ljmp
adc
dec
ljmp
test
push
ret
ljmp
jnp
ja
jle
sbb
jle
mov
outsb
fadds
movb
inc
and
push
push
cmp
sub
dec
mov
sub
or
shlb
xchg
sbb
sbb
loope
mov
imul
xor
scas
nop
test
ljmp
cmc
lods
pusha
pop
xchg
push
xor
adc
mov
xchg
mov
out
adc
add
stc
ret
fnstcw
imul
xlat
inc
ljmp
loopne
inc
jne
adc
lret
inc
bound
cmp
adc
or
mov
mov
cmpsb
push
test
add
cmp
cmp
push
cmp
std
fst
hlt
fiadds
icebp
sub
mov
inc
pop
jecxz
movsl
mov
jg
push
mov
fwait
fwait
pusha
adc
aam
and
in
dec
in
dec
arpl
loopne
mov
int3
xchg
addl
push
lock
scas
mov
ss
daa
inc
mov
fldenv
xchg
xor
dec
ljmp
test
in
repnz
jl
inc
jo
inc
pop
test
leave
xchg
mov
cwtl
dec
jne
cld
or
outsb
xchg
jmp
cmpsl
xchg
ljmp
leave
mov
fiaddl
fcmovb
rcrb
int3
pusha
inc
lds
dec
mov
mov
inc
bound
dec
leave
mov
pop
ljmp
dec
push
and
xorb
fwait
fistl
pop
in
outsl
xchg
loopne
inc
js
push
data16
add
scas
jno
stos
add
jne
sub
lret
inc
dec
ret
outsl
ror
or
push
pop
and
clc
fisubs
jmp
nop
dec
loop
inc
test
xor
and
add
inc
xchg
icebp
call
divb
add
je
mov
inc
pushl
xor
movsl
addb
sub
ds
popa
xchg
push
sub
inc
cli
es
cmpsl
pushf
int3
inc
sub
leave
and
shll
cmc
mov
movsl
out
data16
scas
jp
push
push
bound
fwait
imul
cltd
dec
sbb
xlat
mov
push
decl
fstl
in
repnz
hlt
es
inc
les
jne
jecxz
dec
fcmove
jg,pt
cwtl
and
push
icebp
je
shrb
std
push
mov
ljmp
add
fisubrs
imul
cmpb
dec
cs
and
jp
shl
test
scas
sbb
cmp
test
adc
cmpsl
adc
flds
sbb
xchg
cmp
roll
cmp
inc
jmp
push
adc
int
lret
aas
scas
xor
test
adc
push
das
cmp
aas
outsl
lods
jne
getsec
insb
push
and
and
push
outsb
loope
lods
fimuls
mov
cmp
imul
repz
pusha
and
mov
cli
jo
push
fwait
xor
je
or
mov
movsb
adc
in
mov
xlat
mov
notb
add
jmp
lods
add
mov
pop
dec
fistpl
adc
cmp
and
insb
jl
xchg
cmc
mov
fsubrl
lods
int
lcall
ljmp
ret
mov
js
or
push
dec
aas
movsl
push
sbb
mov
mov
dec
nop
imul
or
dec
cwtl
lret
nop
pushf
pop
fistpl
aas
in
fstpl
pop
pusha
sub
iret
aad
rorb
nop
mov
nop
adc
push
out
stos
inc
lcall
loope
in
iret
shrl
pop
addr16
pusha
dec
es
scas
pop
jbe
pop
xchg
mov
xchg
mov
fidivs
mov
stos
lea
push
xchg
push
dec
and
lods
pop
pusha
mov
adc
outsl
aas
dec
or
mov
cmp
push
mov
sbb
push
cwtl
mov
ffreep
fs
push
or
xchg
popa
sub
or
pop
mov
push
imul
insb
mov
mov
adc
or
movsb
or
int3
bnd
mov
mov
and
nop
jne
xchg
pop
adc
fisubrs
or
jl
cmp
lods
jg
test
mov
jle
add
sub
xchg
cmpb
or
add
push
adc
roll
inc
sbb
gs
mov
push
cmc
into
cwtl
dec
shll
mov
or
mov
jl
aad
and
inc
pop
das
and
pop
inc
call
dec
jmp
or
ret
imul
repz
cli
xor
loop
lret
orb
jnp
mov
test
mov
mov
inc
xchg
cmp
push
add
stc
mov
adc
jle
fimull
loope
jbe
es
inc
or
pop
ds
pop
xor
cmc
and
cmc
mov
dec
mov
in
or
orb
xlat
inc
fwait
or
iret
ror
mull
add
mov
or
mov
adc
lahf
sbb
outsl
aaa
mov
shrb
sarl
daa
xor
push
out
xor
ja
icebp
jns
xchg
or
lock
adc
out
mov
add
xchg
in
pop
add
dec
std
cwtl
pop
mov
out
repnz
xchg
nop
in
pop
add
daa
cmp
fxch
lahf
arpl
pop
pop
jmp
rcrb
adc
shlb
sub
dec
fstl
ret
es
mov
pop
add
rcll
std
test
nop
cmc
add
and
js
std
and
and
ja
xchg
push
mov
pop
aam
or
pop
clc
cmpsl
ficomps
push
out
cmp
out
cmp
push
jg
lock
push
add
lcall
xchg
fnstcw
arpl
jg
cmp
out
add
mov
push
cmp
mov
pop
cltd
nop
mov
out
sub
xor
out
push
sbb
insl
stos
insl
sbb
xor
jb
pop
add
dec
out
pop
movsb
divl
cmova
insb
dec
xchg
aaa
daa
cwtl
lcall
push
mov
loope
mov
jno
sahf
sub
movl
rcrl
data16
cmpsl
mov
mov
call
jnp
pop
sbb
cmp
sub
sbb
sbb
pop
mov
mov
jbe
rcrl
data16
add
iret
mov
xor
call
or
mov
pop
int3
mov
cmp
lret
out
jmp
xchg
fs
imulb
sub
adc
mov
dec
pop
adc
push
out
and
loop
ret
data16
sahf
pop
decb
mov
cmp
ja
and
push
add
pusha
outsb
sub
cs
cmp
nop
negl
mov
mov
lods
or
xchg
pushf
call
in
sahf
cmpsl
ret
cmc
je
popa
leave
pop
js
dec
mov
aad
into
and
imul
add
test
dec
cld
test
or
repnz
dec
ljmp
add
push
mov
fisubrl
sub
pop
and
js
push
idivl
sbb
outsl
cmp
in
add
or
mov
call
fistpll
adc
stc
sbb
mulb
mov
sarb
and
push
inc
jne
xor
shl
cli
sbb
add
lret
jmp
jne
orb
sbb
push
mov
popa
jle
mov
mov
xor
into
push
int3
test
stos
aas
je
mov
mov
push
outsb
mov
jle
mov
es
in
add
mov
jb
mov
lods
loopne
decb
mov
les
pop
mov
pop
adc
mov
js
add
lahf
dec
jno
scas
int3
shll
ret
mov
inc
loope
add
mov
sbb
adc
in
mov
cmc
jecxz
push
cmp
jbe
sub
add
cmp
jne
js
arpl
adc
dec
stos
jg
or
mov
add
das
xor
pop
lcall
cld
in
inc
jno
clc
fisubs
push
sbb
mov
in
or
or
sub
jecxz,pt
pop
aam
test
int3
add
jne
push
adc
fidivrs
popa
enter
sub
lods
subl
cmpl
cmpsb
fnstcw
lahf
sbbl
in
xlat
outsl
in
push
mov
fdivl
push
js
popa
push
xlat
fs
jno
fcoml
shr
adc
push
call
rorl
push
scas
lahf
fcoml
add
jnp
cmovae
out
adc
inc
xchg
icebp
jb
push
addr16
xchg
dec
mov
mov
and
ret
inc
mov
inc
aaa
lret
and
lret
lods
ljmp
mov
icebp
cmp
fwait
scas
sbb
ljmp
jne
add
adc
repnz
inc
jb
dec
ret
sbb
popf
test
or
aas
cmp
psllq
jnp
ret
dec
jg
clc
dec
cmp
repz
ficompl
jbe
iret
sub
iret
mov
dec
inc
loopne
xchg
pop
ja
out
cmc
xorb
stc
pop
jns
fsubs
leave
inc
and
xchg
dec
aas
pop
clc
movsbl
push
cmc
pop
movsl
fpatan
test
sbb
cmpsb
xchg
loope
sub
mov
enter
lcall
fdivrs
mov
xor
test
jmp
std
das
loop
add
mov
cld
xchg
or
popa
xor
add
adc
into
jno
sub
cmp
jmp
and
je
xchg
pop
test
orl
push
pushf
insl
jnp
sbb
inc
cmc
dec
ret
rclb
mov
and
inc
or
insl
push
test
imul
out
adcb
sti
mov
call
test
cli
jns
sub
data16
les
in
sbb
negb
add
aaa
cli
sbb
inc
sbbl
mov
cmp
inc
mov
lcall
or
inc
clc
fdivrs
jmp
rorl
dec
pop
hlt
xchg
lock
gs
addr16
in
mov
pusha
aaa
or
loope
mov
mov
fs
mov
lret
jl
repz
xlat
cmp
pop
sub
sub
mov
push
fwait
jae
jecxz
fnsave
into
mov
xor
or
push
add
inc
in
test
ljmp
pmovmskb
and
sub
into
outsb
push
inc
imul
sahf
jns
sbb
xchg
or
xchg
stos
mov
xor
pop
pop
pop
mov
loop
mov
pop
xlat
loop
das
std
xor
aam
movsb
cmpb
fcmovbe
cwtl
pop
ljmp
push
idivl
mov
subb
mov
cmp
mov
sti
pop
sbb
adc
mov
and
cmpsl
inc
ja
fsubr
adc
dec
cs
add
push
sub
inc
ret
add
adc
cmp
faddp
loope
loopne
mov
mov
test
mov
mov
cmc
sub
adc
sub
mov
dec
mov
pop
mov
pop
ss
push
shr
or
inc
pop
jg
into
xrelease
xor
je
push
jb
scas
sti
adc
aad
fidivrl
clc
inc
xchg
insl
add
jge
cmpb
mov
pop
daa
popa
stos
cmpsl
repnz
add
outsl
in
or
notb
je
insl
adc
pop
inc
push
mov
aad
lret
insl
inc
repnz
int
cmp
push
js
sub
and
xchg
xchg
in
call
mov
fmuls
mov
cli
sub
cmp
pushf
cld
sub
fistpll
dec
clc
sub
sub
sbb
ss
pushf
inc
andb
test
inc
mov
rcr
sub
mov
fcompl
jl
jae
jl
mov
mov
enter
jp
pusha
je
lahf
repnz
out
jecxz
imul
sahf
in
mov
scas
and
adc
xchg
add
xor
sub
xchg
sahf
int3
divl
mov
popa
jns
push
adc
push
lret
mov
mov
inc
mov
insl
imul
in
dec
xor
arpl
adc
xchg
andl
cmp
add
lods
jp
dec
pop
sub
jecxz
push
inc
or
or
push
into
jbe
jl
les
adc
scas
imul
aam
mov
fnstsw
and
aaa
mov
movsb
pop
dec
add
push
jb
mov
jne
popf
xchg
aam
add
mov
push
lcall
xor
inc
mov
mov
xchg
adc
cmp
push
fldenv
jecxz
lahf
aam
jl
cmp
movl
cmpsl
dec
gs
push
jecxz
cmp
jle
repz
fs
pop
out
inc
jae
sti
cmp
in
call
pushf
mov
and
adc
dec
cmp
inc
sub
cmpsl
loopne
sbb
add
mov
push
xchg
insl
lds
xor
xor
sub
or
std
or
and
inc
pop
adc
test
push
jmp
stos
push
inc
push
mov
out
xor
mov
icebp
sar
adc
sbb
xchg
je
adc
or
data16
jno
jle
jns
ss
xchg
ficomps
stos
cmp
cmp
nop
mov
xchg
clc
or
xchg
pop
cwtl
and
shll
mov
cli
aas
dec
mov
lret
jb
test
push
push
scas
gs
mov
sbb
iret
push
divl
lock
jne
mov
dec
jg
loope
test
cld
mov
cmp
jl
aas
ss
aaa
movsb
push
sbb
xor
adc
jb
and
or
sub
xor
stos
push
cmp
and
aaa
add
and
repz
das
mov
and
leave
rcl
test
and
mov
sbb
sbb
mov
mov
arpl
inc
mov
or
fstp
pop
out
fidivs
mov
fcom
mov
imul
or
mov
push
jle
or
fmull
mov
sbb
xor
add
jnp
pop
daa
dec
sub
out
sbb
sub
pop
pusha
mov
xchg
test
ficoms
fs
out
aas
or
cmp
mov
push
and
push
sub
jb
pop
mov
mov
ficoms
mov
adc
push
push
pop
cli
imul
rorl
or
sarb
and
test
jmp
testl
mov
push
dec
pop
xchg
out
out
ljmp
jge
pop
out
imull
mov
fidivrl
mov
push
pop
cld
jne
pop
aaa
fisubl
cmp
fs
fwait
xchg
outsl
xor
popa
or
mov
test
stos
decl
pop
outsl
adcb
jne
not
movsb
inc
adc
xchg
or
outsl
cmp
arpl
enterw
sbb
ljmp
mov
sbb
cltd
lods
adc
push
push
outsb
jo
iret
out
loope
enter
pop
lret
lods
test
mov
push
add
lock
and
es
push
mov
in
int3
mov
mov
test
or
push
mov
fbstp
add
pusha
fwait
loopne
push
ret
xor
cmc
movsl
adc
sbb
and
jp
stc
pop
scas
int
mov
sub
scas
sub
lods
mov
mov
cwtl
repz
pop
xchg
js
push
adc
pop
ret
mov
clc
mov
cmp
xchg
stos
data16
jns
mov
cmp
lcall
adc
lds
movsb
cmp
dec
adc
int
dec
cmpsl
pusha
xor
ds
jns
dec
mov
add
lea
daa
adc
lock
leave
loopne
dec
out
mov
pusha
js
xlat
sub
leave
mov
inc
mov
push
xchg
or
adc
imul
std
inc
mov
xchg
jb
andb
mov
sbb
jmp
sbb
insb
push
popf
ljmp
mov
fsubrp
negl
cmc
shll
in
jns
jp
push
jb
adc
pop
fcomi
pop
push
push
cmp
sbb
sarl
dec
cli
mov
dec
hlt
sub
test
fnstenv
adc
cwtl
mov
rcll
clc
lods
cmp
adc
jne
and
push
xor
jl
sbb
push
sbb
mov
mov
shrl
pusha
inc
nop
je
pop
sub
mov
push
push
loop
jmp
push
imulb
fisttps
sub
pop
jno
leave
cmpsl
and
popa
adc
fsubl
stc
mov
jmp
sub
pop
sub
or
mov
fldt
jmp
pop
push
jo
push
pop
les
fidivl
xor
inc
loope
inc
inc
mov
push
jecxz
sub
inc
out
pop
sbbl
xor
aad
das
testb
dec
inc
hlt
ja
fisttpl
xchg
inc
xor
pop
rorb
out
in
sbb
pop
mov
fwait
sub
push
xchg
shlb
mov
jg
hlt
sbb
lret
pop
pop
or
push
xchg
adc
in
lahf
ljmp
stc
xchg
ret
mov
out
fcoml
push
mov
fcomps
daa
mov
lock
lock
mull
xchg
fldt
push
mov
pop
jmp
jmp
sub
push
lret
out
addl
sbb
inc
push
int
ds
mov
std
test
or
push
or
scas
jns
mov
push
mov
push
mov
jge
push
mov
ds
lret
jmp
or
mov
test
dec
rcr
jg
out
add
mov
stc
inc
scas
aam
orb
fists
popf
jbe
dec
sbb
mov
iret
test
fcoms
roll
sbb
aaa
imulb
sahf
and
movsb
xlat
or
cmc
je
pushf
inc
je
testl
xor
mov
xor
mov
fidivs
adc
add
mov
out
dec
clc
mov
mov
fldl
xor
and
xchg
and
sbb
and
outsl
add
fldcw
mov
add
int
fildl
dec
aam
or
or
test
lcall
lods
mov
add
push
mov
clc
mov
sbb
push
cltd
cli
mov
mov
inc
cmc
repnz
and
pop
pop
out
pop
and
mov
pop
push
cmc
leave
sahf
mov
pop
xor
cmp
add
push
push
adcb
rol
push
movsl
add
mov
loope
xor
movsb
stos
out
arpl
imul
push
mov
fnstsw
adc
inc
add
push
cmc
mov
stos
enter
lea
push
cmp
psubsb
ret
inc
inc
test
int
call
fcoms
xchg
mov
mov
jg
popa
addr16
jmp
std
rolb
sti
sub
cmp
add
sub
nop
cmp
sbb
setno
pusha
mov
jecxz
ds
push
jge
clc
xchg
jns
and
push
add
sti
cmpb
addr16
mov
fsubrp
movb
lahf
loope
adc
jbe
mov
or
mov
iret
and
mov
xchg
cmp
add
in
or
mov
pop
xor
mov
in
lret
sub
push
cmp
loop
in
mov
cltd
mov
sbb
push
cmp
mov
push
jecxz
cmp
ja
inc
sti
jbe
sahf
lret
dec
inc
fs
xchg
aam
es
or
pop
in
adc
je
out
mov
jmp
add
sbb
sub
test
ja
jp
call
cld
pusha
outsb
xor
aas
mov
jae
add
sbb
psraw
mov
fwait
aad
xor
mov
xchg
enter
mov
push
xor
lock
aas
cmpsb
push
dec
xor
mov
jl
orb
cmc
push
shll
push
test
add
push
jecxz
hlt
stc
pushf
outsb
inc
mov
add
cmp
test
sbb
and
test
inc
mov
xlat
int
fucomip
sub
sti
xchg
mov
pop
xor
mulb
xlat
in
mov
mov
daa
mov
out
xchg
pop
insl
ret
test
imul
xlat
push
and
data16
fs
ljmp
pop
cmp
dec
cltd
in
xchg
mov
ret
add
sbb
jmp
jns
shrd
xor
mov
pop
rcrb
lock
test
jnp
je
stos
out
push
std
mov
notl
fdivr
in
jp
mov
or
nop
into
push
pop
push
insl
jl
jmp
int
aaa
sub
or
jae
and
cmp
jo
stos
dec
jb
inc
xor
lahf
xor
pushf
push
adc
and
insl
add
movsb
repz
divl
xor
inc
scas
cmp
mov
jae
sub
xchg
cli
fmuls
mov
fimuls
int3
ret
lds
cmc
mov
sbbb
mov
popf
fcmove
movsb
out
addr16
or
pop
jno
inc
in
fildl
loope
xchg
fisubrs
push
fnstcw
sub
sub
fisubs
mov
cmpsb
push
push
mov
repz
sbb
sub
mov
mov
jmp
mov
mov
pop
sub
sbb
ds
pop
mov
pop
test
pop
loop
push
cld
orl
nop
ja
imull
adc
je
sub
ljmp
inc
stos
cwtl
inc
push
mov
sub
incl
pusha
ficoml
lods
aas
xor
jmp
int3
cmp
add
mov
inc
fbld
mov
test
and
lods
inc
add
negl
jo
inc
sbb
push
inc
xchg
cmc
lods
jbe
pop
jno
mov
lahf
dec
pop
aas
or
shl
xor
movsb
call
jp
jmp
sub
xorb
aad
movsb
dec
je
push
pop
xchg
push
cmpsb
sahf
leave
enter
popa
icebp
sub
daa
stc
pop
add
add
pop
mulb
loopne
sti
mov
cld
adc
shrl
dec
jns
mov
iret
pop
shll
dec
mov
dec
add
popf
adc
xor
dec
sub
rcrb
xor
imul
push
ss
inc
mov
ja
test
shrl
ja
cmp
fisubrs
adc
sbb
sub
bound
scas
jno
xor
adc
cmpsl
xlat
lea
mov
mov
mov
sbb
push
xor
mov
popf
push
pop
mov
inc
cmc
xchg
rorb
lds
cmp
nop
push
inc
mov
popf
mov
pushf
jae
and
out
mov
incb
outsb
mov
in
xchg
add
adc
inc
fldcw
mov
or
fsubs
aam
iret
daa
sti
inc
das
sahf
mov
xchg
mov
push
xor
stos
pop
imul
sbb
or
enter
sub
push
cmp
jmp
sbb
divb
and
pop
xor
mov
iret
mov
decb
mov
and
and
push
push
xor
cmpsb
stos
movsl
xor
test
pusha
mov
dec
lods
xchg
popf
sub
xchg
dec
or
aaa
les
inc
lods
lods
ds
aad
fistpl
xchg
icebp
jbe
and
vphsubwd
adc
stos
jl
lods
pop
stc
test
test
sub
cltd
sub
and
jno
and
jnp
imul
xor
ret
mov
pop
fdivrl
popf
scas
sbb
add
jmp
add
test
mov
jo
mov
cwtl
add
mov
jae
leave
add
lahf
bnd
or
pop
insl
stos
push
xchg
add
sbb
mov
mov
mov
sbb
orl
dec
mov
sbb
aas
lock
cld
hlt
mov
out
in
iret
test
cwtl
pavgb
xorb
imul
movsl
mov
movsb
imul
test
push
xchg
and
and
add
dec
jno
sub
rcr
jae
inc
les
neg
femms
pop
pop
lods
mov
add
loop
repnz
dec
pop
xor
shr
add
loop
mov
ljmp
cmpsl
lock
jnp
inc
ds
nop
je
lods
mov
pop
lods
sti
pop
jbe
xor
aam
xchg
cmp
cmp
out
lods
incb
and
add
cmp
cs
lret
shlb
in
push
aam
imul
mov
data16
jecxz
lcall
into
sub
pushf
push
pop
hlt
xlat
fsubrs
fwait
in
sub
sbb
call
sub
xor
out
jno
push
mov
or
pop
jg
movsl
mov
fbld
inc
cli
cli
pop
jmp
add
repz
mov
gs
mov
sbb
gs
xlat
sti
test
xlat
jb
xchg
arpl
sub
xchg
in
jae
in
mov
adc
and
or
loopne
mov
lahf
in
aad
mov
mov
imull
daa
adc
test
shrb
and
mov
push
add
mov
push
std
rcll
and
xchg
cmp
movsl
sarb
xor
and
movsb
push
lea
sahf
aam
mov
lret
cmpsl
mov
hlt
cli
adc
mov
sub
cmp
sbb
push
mov
sbb
dec
mov
or
rorl
mov
test
cmp
mov
rcr
jp
repnz
das
in
les
in
es
jg
lcall
imul
in
and
add
shr
out
movsl
xchg
bound
mov
cmp
cli
les
nop
fxtract
cmp
cmp
pop
ljmp
popf
inc
ret
mov
or
jl
push
fmuls
push
xorb
or
ret
jg
jns
hlt
xchg
fnstenv
imul
bound
ds
orb
adc
mov
test
repnz
and
dec
fs
adc
add
mov
mov
stc
mov
push
xor
fwait
movsb
stc
cltd
xor
mov
ja
lock
std
xor
xor
and
and
popf
mov
sbb
jge
adc
xor
lret
daa
sbb
ljmp
mov
xor
int
mov
sbb
mov
les
cltd
and
inc
cmp
push
mov
pusha
lock
push
fistps
outsb
inc
add
adc
rcl
shlb
or
jmp
xchg
out
cmp
lahf
and
push
cmc
femms
lods
sub
mov
imul
imul
or
hlt
loope
jmp
test
sub
repnz
js
push
inc
cmp
out
lea
dec
repnz
insb
mov
xchg
mov
shll
sahf
pop
or
shr
pop
cmc
outsb
mov
imul
xchg
mov
dec
stos
mov
js
push
es
xor
popf
mov
mov
mov
xchg
das
jge
call
and
std
add
int3
pop
in
mov
mov
test
mov
xchg
in
nop
sbb
jmp
xchg
inc
adc
cmp
sbb
addr16
gs
mov
jns
insb
cmpsb
into
mov
ret
xchg
pop
add
xchg
cmpsl
jp
or
jns
mov
pop
bound
pop
push
xor
mov
mov
js
addr16
ja
xchg
je
cmc
xchg
pop
xor
lret
out
push
add
iret
faddp
int3
sbb
cmp
out
ret
fcmovbe
popa
jne
mov
int3
cmp
mov
movsb
push
jge
mov
aaa
pop
dec
push
adc
rcrl
inc
jle
push
in
mov
xchg
outsb
inc
jne
int
sbb
gs
jecxz
add
dec
inc
in
add
mov
or
sbb
ja
clc
fcompl
pop
pop
cli
mov
cmp
adc
out
sub
xchg
and
aaa
xchg
rcr
push
inc
push
jl
sub
pop
cltd
or
shll
lods
mov
inc
xor
sub
movsl
ja,pn
out
ss
sar
aam
dec
mov
sub
dec
mov
aad
and
jno
lea
jno
pop
rcrl
lea
xlat
pop
out
stos
dec
aad
jns
rcrl
jbe
jmp
add
ret
js
mov
adcl
cltd
shlb
test
loope
inc
sti
nop
aam
sbb
sahf
mov
inc
dec
mov
mov
mov
repnz
xor
gs
push
xchg
es
je
aas
sbbl
mov
pop
inc
xlat
rclb
mov
pop
jge
lahf
sbb
sti
xor
or
mov
call
adc
mov
mov
in
in
call
cmp
mov
mov
mov
inc
in
fbstp
jno
add
leave
in
xchg
stc
cmp
jmp
pop
dec
xchg
or
mov
mov
std
mov
dec
or
imul
xor
mov
push
add
jno
or
sbb
sahf
jns
enter
sahf
andl
jnp
dec
push
insb
mov
sub
mov
repz
mov
mov
or
or
outsb
pop
addr16
fimuls
add
pop
in
rolb
stos
icebp
xor
cs
scas
pop
adc
enter
adc
ret
loopne
daa
jle
lods
sub
mov
mov
iret
xchg
mov
pop
repnz
in
sbb
xor
sbb
rorl
mov
mov
and
fildll
or
push
mov
xchg
inc
sbb
xchg
mov
sub
fcoms
dec
rolb
jno
outsl
xchg
lcall
dec
cmc
fcoml
test
inc
lahf
repz
pushl
mov
mov
pop
ret
push
repnz
out
push
pop
out
sbb
lods
jl
and
scas
test
inc
push
mov
sub
push
out
jge
inc
mov
int3
dec
sub
and
popa
dec
xorl
or
gs
push
hlt
sbb
and
arpl
ss
fucomip
scas
cmc
aaa
sbb
int
xor
outsb
pop
les
lret
addl
jnp
jne
xchg
imul
fs
or
cmp
xchg
int
and
cli
ficompl
jmp
sbb
cmp
popa
popa
or
test
cmp
sub
ja
scas
adc
fwait
stc
dec
jno
pop
cmpsb
cmp
int
fdivs
and
ja
mov
cmp
das
xlat
xorb
lock
mov
out
ficoms
test
and
mov
das
fwait
mov
das
push
xor
lods
mov
fisubrl
mov
loope
mov
mov
dec
push
out
mov
call
sbb
cld
cld
push
mov
add
mov
cmpsb
xor
adc
notl
xor
mov
cltd
cmp
out
add
xchg
imulb
jbe
shll
push
sbb
insl
mov
repz
cmovb
jno
outsl
idiv
mov
pop
jl
scas
int
push
jb
xorl
adc
lods
call
mov
cmp
xor
or
xchg
lret
aas
push
dec
cmp
stc
xchg
sbb
and
aaa
pop
jge
rcrb
push
push
xchg
dec
lcall
adc
add
out
pop
mov
in
and
out
xchg
stos
push
and
cli
lea
int3
cmp
mov
bnd
pusha
push
insl
cmp
clc
scas
imul
in
mull
jp
call
xor
sub
aad
mov
or
fwait
jo
dec
xor
xchg
addb
and
or
fisttps
xchg
and
xchg
adc
lret
xchg
shr
lret
lret
push
mov
mov
insl
push
xor
mov
fildl
lret
out
jmp
out
mov
xor
fucomi
lea
jge
imul
adc
cmp
pop
in
xchg
dec
hlt
sbb
out
or
faddl
lds
push
stos
shll
xlat
adc
push
pop
jb
gs
gs
ljmp
pop
andl
out
movsb
pusha
out
and
pop
loope
jno
test
pop
add
adc
aam
addr16
jns
fwait
xchg
pop
push
mov
rolb
jmp
pop
std
clc
sbb
aad
int
mov
cld
mov
inc
cmpsb
and
push
andl
sbb
ljmp
hlt
xor
push
pop
jle
lods
inc
cmp
adc
inc
adc
je
int3
addb
testl
fsubr
dec
movsl
dec
push
sbb
pop
sbb
pop
add
or
adc
add
out
push
test
push
xchg
cmpsl
mov
addr16
push
xor
shr
cltd
push
out
jbe
xchg
je
cli
cmpsl
inc
leave
or
jg
xor
mov
push
pop
push
and
push
rcl
add
dec
es
loopne
fidivrl
jno
pop
clc
aas
adc
push
inc
sub
xchg
scas
mov
andl
jb
pop
negl
jp
or
add
jno
mov
mov
cmpsb
bnd
or
test
ljmp
push
xchg
fisttpll
lds
jl
sbb
sub
imul
loop
mov
lods
fcmovnu
and
mov
fcoms
pop
push
scas
jnp
inc
mov
stos
sahf
push
jo
or
mov
enter
mov
inc
xor
xchg
pushf
or
push
jno
add
xor
adc
jne
out
loopw
leave
sub
jmp
ret
or
sub
add
mov
rcll
xchg
or
push
inc
bound
das
jo
popf
or
cli
push
jmp
lret
add
ljmp
sbb
mov
add
popa
sbb
dec
movsl
xchg
or
pusha
jmp
fmul
or
enter
add
gs
rcrl
push
insl
popf
test
push
and
mov
mov
notl
or
xor
push
popf
loopne
imul
lock
paddusb
xchg
mov
imul
aad
push
mov
pop
andb
ret
repz
jge
xor
call
loop
mov
dec
fs
ficomps
and
dec
pushf
aam
and
jmp
incb
icebp
adc
add
je
add
mov
add
dec
push
mov
lea
fwait
or
mov
mov
daa
ret
outsl
adc
dec
sub
mov
xchg
mov
fdecstp
out
aas
test
div
cmc
pop
inc
cld
js
mov
cmp
pusha
inc
cmpl
mov
jae
call
lret
cli
lahf
jl
pop
loope
inc
popa
jmp
adc
int3
outsb
push
xorl
sbbl
daa
dec
test
insl
push
divl
push
in
mov
loop
imul
mov
stos
pushl
push
xlat
mov
mov
add
les
push
xchg
or
addr16
xor
out
push
mov
adc
test
gs
sarb
pushf
dec
in
test
and
or
subb
cwtl
sub
clc
pusha
mov
xchg
inc
iret
movsl
hlt
aam
mov
sub
jle
sbb
mov
push
and
daa
xchg
jge
or
arpl
aad
popa
push
inc
andb
leave
dec
scas
sbb
mov
nop
inc
ds
pop
enter
pop
mov
and
testl
hlt
adc
xchg
fistps
faddl
daa
mov
xor
movsl
xchg
mov
btc
lret
data16
sbb
lcall
lods
test
sbb
mov
or
subl
loopne
jge
out
iret
mov
mov
sbb
xchg
add
adc
adc
xchg
outsl
in
gs
daa
clc
rolb
je
scas
mov
dec
cbtw
lock
lds
pusha
and
pop
sbb
adc
hlt
jg
into
das
add
jns
repz
je
xchg
add
aaa
push
mov
rcr
es
cli
cmp
clc
fucomip
out
pop
in
push
sub
sub
int3
xchg
push
mov
or
les
mov
jl
xchg
jmp
push
xchg
xchg
mov
ljmp
dec
add
cmpl
test
mov
mov
mov
lret
lret
lret
jno
fnstsw
ljmp
dec
inc
inc
mov
cmp
enter
dec
push
shll
or
push
sbb
into
out
bound
popa
stos
aaa
mov
jge
xchg
xor
or
mov
cld
xchg
pop
cld
xchg
stos
and
jae
test
cmpsb
orb
push
mov
xor
adc
adc
hlt
xchg
pop
adc
out
mov
js
and
pop
stos
test
int3
inc
aas
leave
fdivs
push
fistps
call
int3
pop
fists
and
sti
and
subl
shlb
jmp
cmp
push
in
popa
add
pop
loop
push
and
push
jbe
pop
jns
push
imul
mov
jns
sarb
fcoml
movsl
jp
inc
mov
jle
add
dec
push
sbb
cmpsb
mov
aaa
or
es
lahf
stc
lgs
icebp
mov
pop
lret
or
sub
psubsw
loopne
daa
das
mov
das
subl
xor
popl
push
add
cmp
in
and
lea
jmp
jp
cld
push
dec
scas
inc
xchg
jg
sbb
adc
call
jno
pop
repnz
imul
js
imul
jb
ret
lcall
pop
sub
or
ds
xchg
mov
std
int3
and
push
sub
mov
mov
mov
mov
loop
jmp
mov
push
stos
dec
jns
in
jge
jmp
cwtl
out
jg
jo
shlb
fistpl
cmpsl
aaa
lcall
sbb
lret
mov
or
lret
test
loop
cmp
mov
in
xchg
addr16
addr16
xchg
mov
out
inc
icebp
push
loope
mov
in
in
xchg
in
stos
xor
mov
jecxz
or
fcomps
inc
mov
pop
xchg
daa
mov
sub
std
lcall
sarb
jg
das
add
mov
inc
add
int3
mov
fwait
shlb
sub
mov
or
xchg
aam
sbb
xlat
ret
aam
mov
add
mov
jecxz
sub
adc
xchg
lods
cld
mov
and
imul
in
push
cmp
mov
inc
imul
addr16
jbe
sbb
pop
test
inc
out
movsb
cmp
inc
imul
or
mov
jne
jl
movsl
fdiv
leave
pop
notl
mov
repnz
loopne
and
sbb
and
pushf
or
dec
cltd
stos
vandnps
movsl
push
out
scas
xchg
mov
dec
fisubrl
rcrb
mov
mov
mov
jecxz
mov
xlat
js
push
pop
push
jns
imulb
fdivp
adc
inc
inc
ret
iret
inc
xor
xchg
cld
cli
sub
inc
jbe
lret
inc
pop
mov
fdivs
andl
dec
aaa
shrl
int
gs
outsb
pop
mov
fcompl
pop
bound
mov
iret
push
xor
icebp
insl
sub
lea
or
in
pop
js
daa
mov
inc
sbb
stos
fcmovne
sub
pop
in
adc
mov
nop
cmp
lret
xchg
int3
das
jbe
lret
jo
mov
int3
jp
dec
gs
mov
stc
mov
sbb
mov
pop
popa
inc
loopne
fiadds
xor
data16
je
jbe
mov
std
add
xchg
shlb
mov
sub
mov
sbb
test
push
in
cmp
push
pusha
mov
fcomps
mov
and
jmp
addl
mov
mov
fldt
loope
lods
xor
sbb
inc
dec
leave
mov
add
cmc
cmpsl
xchg
adc
jle
pop
add
inc
ja
jns
insl
sbb
rclb
in
mov
rorl
aaa
js
aaa
sbb
mov
push
sbb
sub
outsl
sub
in
xor
jne
jmp
adc
loop
inc
inc
and
xchg
fwait
test
hlt
pop
int
lds
and
adc
repz
jne
jb
jle
adc
push
lcall
xchg
popa
mov
les
out
movl
sub
ds
into
fwait
sub
jecxz
xchg
addr16
push
std
and
mov
movsb
and
in
jae
xchg
mov
je
push
int
xor
or
outsl
dec
pop
xor
js
pop
cs
shl
and
out
push
push
jbe
and
decl
mov
push
test
xchg
sbb
push
jne
mov
and
cli
shlb
sbb
cld
adc
mov
icebp
sub
jmp
xor
bound
jbe
jo
adc
popa
push
mov
sbb
inc
inc
xchg
mov
push
jle
mov
mov
jno
fldenv
aaa
and
inc
lods
or
pop
cmp
mov
sub
movsb
cmpsl
pop
jbe
clc
jns
pop
out
push
mov
mov
cmpsl
dec
inc
pop
adc
ja
outsl
dec
mov
nop
rorb
cli
push
loope
fldenv
jnp
pop
adc
sbb
adcl
mov
cs
stos
movl
add
sub
mov
int
jb
clc
push
pop
call
push
lahf
and
xlat
push
pop
mov
mov
das
xchg
cmp
and
es
jg
ret
orl
pop
push
aad
call
iret
inc
cmp
lret
adc
aas
inc
div
and
cmpsl
push
push
and
xlat
stc
adc
fmul
inc
mov
testb
shl
push
jge
enter
jne
xor
test
push
jmp
out
arpl
adc
mov
call
push
jp
std
lret
ret
and
sub
sbb
imul
lahf
jns
shlb
scas
fistpl
xor
sarb
loop
inc
jg
inc
mov
jno
inc
mov
sbb
add
aam
mov
sahf
cmp
sbb
mov
or
xor
xor
lds
addb
outsl
push
fst
subb
rcrb
ss
sub
fildll
adc
mov
xor
lcall
push
in
popf
or
loope
movsl
mov
sbb
fdiv
jns
jecxz
ja
pop
mov
pop
cmpl
mov
jge
mov
xor
call
xor
inc
ret
bound
bswap
xor
dec
cmp
lods
sbb
aad
cmpsb
int3
mov
or
add
leave
cmp
sbb
or
xor
mov
adc
mov
and
sti
inc
gs
scas
jecxz
dec
cmp
mov
pop
dec
pop
daa
or
call
subl
mov
in
loop
das
xchg
jno
cwtl
popf
jnp
jb
cmpsb
aas
stos
inc
pop
test
fsubrl
cmp
xchg
xor
cld
dec
rorb
or
jb
stos
or
popf
fdivl
ret
shr
out
pushf
add
add
mov
imul
inc
movsl
mov
movsb
mov
es
rolb
inc
mov
mov
xchg
repz
out
xchg
sub
lret
test
fwait
lcall
push
dec
xor
popa
jno
mov
pop
aaa
pop
lds
aas
push
sbb
sbb
lods
pop
lods
push
je
push
sbb
xchg
sub
push
imul
mov
mov
dec
insl
icebp
sbb
cs
sbb
ja
sub
insl
or
rcll
mov
mov
jecxz
jle
pop
dec
arpl
mov
sbb
sti
leave
jecxz,pn
mulb
ds
or
push
in
mov
adc
pop
insl
shlb
cpuid
pop
add
out
mov
fcomps
dec
lds
mov
aad
sbbl
in
icebp
ja
pop
subl
jae
int3
aad
mov
or
loopne
movsb
aam
dec
cld
push
aaa
inc
pop
rcrb
mov
lds
dec
adc
dec
dec
fisubs
les
and
and
mov
push
dec
ret
mov
aas
hlt
paddsw
std
out
std
push
inc
dec
add
ljmp
cmc
xchg
cmpl
jne
xor
push
add
imul
lock
out
lret
mov
inc
movsl
xchg
sub
outsl
loopne
inc
jns
cli
jbe
fnstenv
shll
inc
les
lods
outsl
insl
push
sbb
shr
sub
cwtl
push
insl
inc
sbb
sub
fdivp
jp
test
jg
cmp
decl
ja
outsl
adc
cli
dec
add
outsw
insb
push
xor
adc
push
ret
imul
fcmovnbe
or
or
push
or
mov
sub
pop
pop
push
nop
mov
xbegin
repnz
pop
ds
and
bound
pop
rol
fldcw
xor
xchg
dec
sbbb
adc
jae
push
fistpll
fidivrs
jo
insb
or
xchg
mov
xor
arpl
or
pop
or
and
adc
sbb
jo
jp
jg
pop
hlt
pop
cmp
sbb
les
scas
inc
cmp
xchg
mov
mov
lock
dec
mov
nop
mov
inc
add
or
fldt
orl
and
sub
enter
pusha
sahf
scas
sub
xchg
push
stc
mov
popa
dec
mov
mov
adc
frstor
adc
or
cwtl
pop
cmpsl
inc
ljmp
mov
lods
aas
mov
cld
icebp
iret
mov
inc
and
in
adc
addr16
cld
pop
jo
fldenv
lret
xlat
insb
orl
xchg
cmp
cld
out
loop
push
sahf
ds
sub
mov
scas
cwtl
push
test
imul
pop
adcl
pop
mov
std
xchg
mov
cmp
clc
sahf
shll
xor
mov
inc
push
shrb
sub
push
test
jg
push
dec
pushw
fbstp
add
adc
push
xchg
stc
sub
mov
pop
inc
inc
out
out
cmp
popf
cs
stos
pop
inc
mov
mov
insb
movsb
ret
mov
mov
jne
adc
lods
lock
pop
stos
fmull
xor
mov
xchg
test
mov
lcall
mov
mov
shll
loopne
cmp
dec
inc
out
push
mov
and
sahf
in
add
dec
dec
decl
cmpsb
pop
fidivrs
xchg
mov
push
push
mov
xchg
adc
into
dec
add
sbb
lcall
enter
jbe
arpl
sub
aaa
jg
and
mov
subl
add
adc
inc
out
cmpsl
dec
mov
xchg
push
push
scas
jge
rolb
std
cmp
mov
fstpt
inc
lock
in
js
daa
sub
or
dec
lock
loope
movsb
sub
mov
cli
fcmovnbe
xor
cmp
cmp
mov
test
clc
aam
pop
sub
hlt
jge
cmp
push
imull
and
mov
push
add
gs
add
setne
fidivl
push
add
lret
adc
es
sbb
aas
gs
cmp
dec
dec
scas
roll
mov
aam
pop
pusha
sub
jb
and
or
lret
setnp
mov
dec
shll
cmova
jle
mov
pop
push
xor
aas
into
cmp
jno
int3
cmp
movsl
sub
loop
fbstp
in
inc
insb
inc
and
add
mov
cltd
cld
xor
shll
shl
out
fmull
arpl
ljmp
inc
jb
lahf
pop
es
lods
mov
adcl
daa
mov
ljmp
or
mov
cmp
gs
mov
adc
jle
arpl
icebp
and
add
out
cmp
lcall
sbb
jnp
popa
adc
ror
call
dec
popa
and
sbb
loope
sbb
call
lods
call
mov
push
cltd
and
cmp
popf
mov
xchg
mull
xchg
fwait
pop
pushf
pusha
pop
and
push
repz
push
xor
ja
lds
shrb
nop
cmp
mov
jo
xchg
jg
xlat
in
sub
pop
cmp
cli
dec
sbb
cltd
pop
movsl
mov
xchg
in
lds
xor
mov
cltd
icebp
and
movl
sub
sbb
mov
inc
jbe
mov
push
repnz
std
mov
sti
dec
loope
test
cmc
jae
shll
push
cmpsb
test
and
xor
sub
shll
dec
mov
mov
cmc
xor
mov
mov
ljmp
pushl
sbb
arpl
push
push
jmp
lods
mov
jle
loopne
cltd
js
dec
fucomi
fisttps
or
pop
andl
mov
jae
push
lods
fsubrl
sub
inc
arpl
or
mov
inc
aas
add
push
or
daa
xchg
imull
mov
gs
dec
cmp
sub
inc
fidivs
fistps
push
shl
push
inc
call
in
jo
or
addl
fs
scas
sub
std
ss
lea
push
out
je
hlt
cmp
mov
mov
pop
stos
enter
loope
filds
in
in
or
xchg
inc
in
test
sub
fimull
rclb
xchg
sub
add
test
jp
xlat
jge
pop
xchg
cwtl
stos
mov
or
mov
xchg
subps
sub
loopne
dec
adc
stc
adc
mov
ljmp
in
dec
pop
adc
pop
and
cmp
lret
push
sub
inc
mov
adc
dec
scas
sbb
jp
insl
xchg
jmp
dec
shlb
xor
ret
or
andb
mov
sbb
jnp
cli
into
and
xchg
dec
mov
mov
push
roll
jno
mov
mov
rcrl
sbb
scas
and
pop
and
dec
add
xchg
leave
pop
push
in
sbb
movsb
je
mov
lret
mov
xchg
mov
push
pop
out
test
push
add
push
out
out
xchg
xchg
jbe
push
or
insl
test
mov
mov
cmpsl
hlt
or
jns
test
icebp
sbb
out
enter
jp
and
or
outsl
pop
das
lea
push
push
fdivs
cmp
adc
int3
mull
mov
mov
dec
repz
lahf
jbe
mov
sub
orl
mov
jns
scas
jle
not
in
sub
push
ljmp
xchg
pop
call
out
adc
loope
ljmp
loope
adcb
int3
jl
push
mov
mov
aaa
imul
sahf
dec
xchg
nop
xchg
test
ficompl
cmp
jbe
mov
dec
pop
push
pop
lahf
popa
fildl
mov
push
pop
lock
bound
loop
jecxz
mov
or
or
adc
int
shlb
das
stos
add
out
pop
sbb
xlat
fwait
pop
shr
ret
cwtl
insb
mov
push
or
sahf
or
jle
lcall
insl
push
arpl
xchg
jmp
in
in
lods
xchg
pop
add
lret
prefetch
mov
test
or
out
rorl
jo
les
outsl
adc
mov
bound
fwait
ljmp
les
mov
ja
or
aas
mov
insl
xor
ds
xor
cld
sub
shl
pop
call
lahf
mov
ja
hlt
test
aas
sub
das
sti
insl
sbb
hlt
mov
mov
xchg
pushf
pop
and
mov
std
cmp
add
shl
sahf
jbe
int
shrl
shr
mov
add
adc
negb
movsl
ret
mov
sub
and
cld
xchg
adc
loope
jecxz
imul
push
cwtl
arpl
dec
xor
or
shrb
push
insl
sub
mov
sbb
icebp
mov
jecxz
mov
push
int3
cmp
mov
mov
aad
cwtl
mov
xabort
mov
xor
fsubl
cli
pop
mov
dec
cmpsb
clc
std
jl
pusha
cmp
lea
push
sub
and
adc
aad
shrb
xchg
xchg
je
out
insl
les
sub
xor
fs
in
add
dec
xor
aas
fsubrs
out
adc
xchg
pop
and
ja
adc
inc
scas
mov
xor
or
dec
jge
inc
aad
les
mov
pop
in
pop
fwait
out
std
sub
mov
cmp
shlb
lea
sub
mov
mov
mov
sub
mov
loope
and
xor
icebp
dec
mov
aaa
stc
divb
adc
les
mov
xchg
and
addr16
cmpsl
popa
sub
test
mov
mov
lods
xorl
mov
cli
fildll
lcall
andb
jae
popf
cwtl
push
cmc
repz
jle
lret
and
push
cmp
cltd
dec
xchg
push
cmp
lods
js
out
mulb
clc
pop
jp
gs
dec
jge
pop
pop
lock
pop
pop
push
popa
test
in
dec
fwait
out
mov
int3
inc
or
mov
dec
push
mov
nop
and
int3
dec
mov
out
lds
mov
add
or
jo
lcall
pop
and
mov
fistpl
repz
aaa
mov
stc
lret
and
cli
pop
mov
inc
cmovle
fs
xchg
or
cltd
lcall
mov
dec
or
mov
cltd
dec
mov
mov
mov
add
into
or
std
mov
adc
test
mov
add
adc
lahf
lret
les
shrb
push
sti
dec
lds
pop
mov
dec
ja
mov
or
push
mov
and
fisubrs
mov
out
lods
mov
mov
and
lret
aam
and
push
jle
cmp
and
rol
lods
rclb
sahf
mov
push
pop
mov
pop
pop
and
aaa
push
adc
jp
mov
sub
pop
sub
xchg
shrl
das
cli
cmp
add
loopne
add
and
push
jge
call
jmp
push
stc
stc
fs
pop
pop
inc
inc
into
ret
xchg
sub
dec
sbb
cltd
testl
push
cmp
and
lods
sub
sti
nop
push
add
mov
push
inc
push
jmp
out
jle
subb
adc
out
push
mov
jge
sbbl
mov
or
dec
ja
shl
push
test
data16
xchg
sahf
add
dec
pop
xchg
mov
add
or
cs
pop
icebp
cld
adc
adc
neg
or
leave
sarb
jecxz
jb
mov
mov
mov
addr16
scas
mov
or
cwtl
or
aaa
rcrb
pop
add
push
pop
xchg
call
insl
sub
mov
repz
push
dec
jne
dec
ret
sarl
mov
incl
imul
mov
xor
lret
mov
popf
in
mov
in
test
fnstenv
inc
jns
inc
pushf
mov
jb
mov
data16
out
test
in
insl
mov
jl
popa
lock
std
out
mov
scas
cmpsl
xchg
les
mov
sub
in
loope
std
out
mov
mov
addb
jle
push
std
pop
insl
cwtl
shrl
sub
test
xor
push
sbb
jo
push
pop
loope
jo
fisubrs
ja
pop
leave
pop
fimull
push
shr
cwtl
pop
pusha
or
push
out
in
out
leave
mov
dec
push
mov
mov
aas
js
add
sbb
repnz
fnstcw
les
jns
adc
idiv
xor
inc
push
movsl
dec
test
pop
in
inc
cmp
je
xchg
in
cmc
mov
add
js
push
sub
dec
dec
push
sub
test
xor
and
lds
xor
pop
adc
or
inc
inc
push
out
ss
loop
inc
xchg
pusha
xchg
adcb
xchg
xor
push
arpl
mov
mov
ljmp
sub
cmp
mov
cmp
cmc
shr
jge
out
stos
outsb
std
mov
movsl
aaa
fldcw
ja
in
push
popf
push
popa
fsubrl
mov
shl
ficoms
xor
pop
dec
sbb
or
mov
mov
stos
repnz
pusha
cmc
faddl
cmp
mov
xchg
or
pop
ljmp
mulb
enter
jl
push
aam
daa
es
jne
negl
fs
jne
popf
movsl
jno
push
add
leave
repnz
or
add
dec
mov
mov
adc
punpcklbw
mov
lock
nop
mov
xchg
sarb
orl
lret
shrb
push
lea
enter
lahf
add
popf
cmp
out
pop
xchg
push
dec
xor
lret
icebp
push
in
jmp
push
leave
push
mov
mov
mov
mov
movsl
imul
repnz
cmp
cli
nop
je
shlb
icebp
rol
pop
xchg
ret
jp
push
push
jns
adc
mov
push
mov
jp
sbb
out
int
cmc
mov
iret
out
mov
dec
clc
hlt
testl
fxch
cmpsl
or
or
mov
jae
out
jb
andl
dec
test
jmp
in
add
cmpsb
xchg
mov
or
mov
repz
daa
sbb
jae
xchg
sub
sbb
sbb
cltd
daa
xor
sarb
pop
xchg
mov
add
push
and
jno
fwait
in
add
mov
add
into
shll
shll
pop
stc
pop
test
jno
sahf
sub
adc
in
sub
mov
jmp
mov
jl
push
push
mov
xchg
imul
fdivrl
jg
mov
mov
xchg
mov
jne
stos
adc
sbb
aaa
stc
sbb
inc
testl
jmp
mov
add
xor
fidivl
adc
or
lcall
or
sbbb
sti
jns
xor
imul
cmpl
jp
bound
xor
push
arpl
mov
fcomip
push
pop
add
lods
dec
daa
and
pop
aas
aas
jge
and
mov
daa
cltd
pusha
cmp
inc
stc
outsb
or
movb
pop
fst
inc
arpl
icebp
js
inc
xchg
pcmpeqd
dec
push
je
fsub
mov
cwtl
or
lods
aad
jb
dec
xchg
int3
add
repnz
jbe
jl
das
int
or
pop
std
or
xor
sub
rorb
mov
sub
and
add
ds
sbb
stos
mov
xchg
fildll
scas
repz
das
pop
pop
jb
lods
inc
mov
sub
add
int3
std
pop
cmc
pop
pop
mov
push
push
jne
test
mov
gs
adc
xor
push
in
loop
cmc
mov
pop
cli
lret
xchg
dec
jae
addr16
icebp
fdivp
sub
fidivrl
and
add
hlt
cmc
mov
cmp
shr
popa
sti
loop
mov
adc
leave
outsb
out
in
imul
inc
imul
test
xor
jle
pop
push
popa
fcoms
outsb
xchg
mov
inc
mov
in
cmp
jbe
cltd
xchg
imul
scas
daa
popf
in
out
xchg
add
loope
push
in
inc
cmpsb
loop
insb
rcl
in
or
dec
jge
cli
loopne
stc
ret
xchg
jae
sbbb
adc
dec
std
push
lret
stos
gs
fwait
outsl
repnz
dec
cwtl
cltd
js
add
and
and
out
roll
xchg
inc
adcl
subl
orl
lock
sub
jns
outsb
icebp
cmpsl
in
dec
mov
data16
ljmp
cmp
aas
or
push
hlt
lcall
sahf
pop
xchg
mov
pop
xor
fisttpll
xor
cs
or
les
insb
adc
sub
mov
lcall
adcl
inc
push
sbb
xchg
push
pop
testb
cwtl
pop
dec
insl
push
jb
inc
inc
pop
ja
dec
jo
out
and
leave
in
imul
es
nop
xor
mov
pushf
mov
add
mov
ss
xor
arpl
sbb
loope
dec
in
and
adc
fildl
sub
push
xchg
push
testl
hlt
mov
inc
cmp
shlb
jl
stos
rolb
cltd
pop
scas
ljmp
pop
insb
ljmp
pop
loopne
inc
les
sub
stc
fiadds
sbb
in
inc
and
aam
fcompl
in
pop
sbb
js
aam
push
leave
je
jno
cli
or
imul
mov
cs
stos
mov
dec
js
mov
xchg
cs
pop
test
xor
sbb
inc
push
jns
jne
adc
pop
mov
xchg
xchg
loop
mov
add
adc
push
mov
mov
sub
incl
cltd
sub
pop
pop
mov
les
adcb
push
enter
mov
push
pop
in
cmp
nop
xor
add
xlat
mov
movsb
push
mov
enter
out
ss
pextrw
lods
js
gs
testb
sbb
jns
rorl
cmp
rcr
sub
sbb
arpl
dec
cmp
adc
std
call
je
call
adcl
push
outsl
sbb
adc
mov
push
nop
hlt
jae
inc
ss
sbb
les
cli
mov
xlat
pop
lret
hlt
jae
pushf
mov
jae
stos
ret
or
jo
ret
pop
jb
jno
sbb
in
xor
cmpsb
hlt
out
aad
mov
movsb
test
subl
rorl
push
xlat
call
ljmp
int
movsl
mov
lret
xchg
jb
cwtl
dec
cmpsl
aas
sbb
lock
lods
cli
mov
mov
sahf
clc
mov
mov
push
xchg
sub
add
dec
es
xor
scas
pop
or
das
clc
push
inc
enter
popa
dec
std
mov
mov
je
daa
xor
pushf
sub
int
xor
movsb
sbbl
mov
arpl
hlt
imul
push
jle
fimuls
mov
or
iret
adc
shlb
notl
push
test
sub
push
or
mov
mov
pop
jnp
fbld
mov
or
mov
adc
jecxz
rcrb
aam
les
in
sub
cmp
xor
fstps
neg
fsubrl
mov
ss
pop
xchg
scas
scas
in
push
jne
leave
lds
adc
pushl
sbb
shlb
cmp
mov
stos
mov
aam
xor
mov
mov
dec
xchg
movsb
mov
xor
sbb
pop
sub
loope
xlat
cmp
in
sub
inc
xchg
push
shll
into
push
push
jge
push
sub
sar
rorl
pop
fistpll
pop
and
in
mov
lods
xchg
loope
out
movsb
push
movsl
sub
add
xor
adc
sub
insl
lea
mov
insl
mov
outsl
pop
dec
adc
outsb
add
jo
in
pop
jle
nop
dec
cli
push
loope
jle
pushf
outsl
xchg
inc
jbe
jp
inc
pop
iret
xchg
popf
dec
inc
push
out
xchg
cmpl
mov
xchg
int3
sbb
outsb
dec
jne
fwait
pop
xchg
insl
in
cmpsl
and
pop
enter
sub
xor
push
mov
sub
jb
fidivl
repnz
mov
insb
out
or
xchg
out
outsb
rorl
fwait
mull
mov
add
stc
fcmovnb
and
pop
fdivrp
inc
xor
mov
jge
dec
push
inc
fwait
push
insl
pushf
stc
pop
roll
inc
or
mov
pusha
push
sbb
outsb
and
mov
orb
fsubs
aaa
loopne
adcl
imul
inc
dec
xchg
and
scas
jns
dec
dec
cmpb
cmc
or
cmp
test
fsub
sub
xchg
aas
push
sub
cmp
xchg
dec
pop
mov
push
mov
xchg
jo
clc
repnz
or
sub
movsl
stos
sbb
inc
ret
imul
test
mov
mov
fcmove
adc
and
repz
mov
xor
xchg
sbb
call
add
mov
dec
lahf
inc
imull
xchg
xchg
data16
in
jecxz
lock
mov
dec
and
pop
cli
out
cltd
notl
mov
insl
xchg
sbb
sbb
lea
push
adcb
add
dec
xchg
sarl
test
jmp
pushf
in
sub
add
test
mov
mov
ret
pop
push
mov
mov
rcll
sbb
lds
or
mov
jl
frstor
adc
jno
loope
out
lock
fsts
pop
sbb
push
inc
popa
in
push
sbb
test
jns
fidivrs
jae
rolb
inc
mov
fwait
std
hlt
mov
cs
arpl
mov
or
push
pop
mov
pop
bnd
mov
faddl
pop
shl
add
xchg
add
leave
outsl
repz
xchg
mov
fcoms
fcoms
sub
nop
insl
into
hlt
xor
popf
in
sahf
fisubrs
mov
ljmp
inc
adc
addr16
repz
icebp
repz
xor
sbb
sub
and
mov
mov
sbb
mov
xchg
or
cmpsl
lods
lret
or
sub
sub
adc
cmc
mov
aas
push
cli
dec
icebp
mov
arpl
fldenv
loopne
jb
adc
loop
stos
outsl
add
aam
adc
jno
mov
in
xchg
cmp
or
daa
adc
mov
je
mov
aas
jp
movsb
mov
pusha
subb
cmpsl
arpl
ret
xchg
dec
popl
inc
leave
sahf
addb
scas
pop
decb
mov
push
stc
fwait
lds
adc
pop
xlat
pop
sub
lock
push
pop
pop
ja
stc
pop
cmp
jmp
sub
sahf
lds
pop
scas
imul
add
out
add
pop
scas
jg
addr16
xchg
cvtps2pd
cwtl
inc
mov
in
xchg
in
push
lods
sahf
dec
xchg
lods
adc
jmp
popl
mov
pop
cmp
xchg
mov
inc
xor
in
cmp
and
stc
push
add
jp
jge
repz
sbb
push
jle
jb
jl
je
sbb
les
rcll
cwtl
and
pushf
sahf
pop
xor
xor
xchg
jl
pop
adc
pop
sub
pop
cmp
mov
shlb
add
cmp
ja
sarl
fucomip
imul
inc
jae
xor
inc
adc
movsb
push
jmp
imul
mov
cli
out
mov
add
xchg
inc
icebp
and
int3
enter
xor
xor
mov
and
repz
ljmp
pop
fld1
popf
xor
aaa
xor
pop
push
inc
lret
shlb
or
pusha
sarb
ret
cwtl
insl
mov
cmp
testb
and
cmpsb
jecxz
das
mov
jne
enter
std
push
dec
daa
sbb
cmp
dec
xchg
pop
adc
dec
xchg
mov
popa
mov
mov
sbb
insb
jge
ds
data16
xchg
dec
pop
shl
sub
repz
scas
jmp
fdivr
gs
mov
pop
lds
push
pop
lock
fistps
test
and
imul
enter
out
fs
imul
repz
pop
imul
test
xor
shl
jmp
arpl
fcmovne
xchg
gs
xchg
push
outsb
sbb
repnz
into
out
mov
rcll
push
cmp
push
test
aam
dec
cli
das
shr
jno
push
pop
sub
lods
lea
or
out
jno
cmp
jnp
jecxz
add
int3
dec
inc
xor
ljmp
es
add
je
rcr
out
gs
inc
pusha
xor
mov
xor
mov
negl
and
sub
lret
shl
push
pop
xchg
xchg
divb
imull
mov
enter
ljmp
inc
pusha
mov
adc
rol
movsl
inc
mov
mov
xor
data16
orl
idiv
push
sbb
push
xlat
xchg
outsl
test
mov
shlb
movsb
gs
ss
push
test
xor
mov
call
icebp
insl
clc
push
shl
arpl
jb
test
or
cs
std
xor
mov
jl
lods
mov
lock
lods
fs
cltd
outsb
mov
ds
xor
ret
sbb
icebp
add
es
inc
mov
mov
lea
test
aam
push
aaa
dec
push
icebp
ret
cmpsl
add
das
imul
aaa
push
cli
dec
std
inc
mov
push
insb
cmpsb
lahf
and
lahf
dec
dec
xchg
in
jmp
dec
neg
mov
lcall
sbb
aad
test
adcl
push
add
cs
add
xor
and
adc
mov
ret
mov
lds
bound
in
mov
cmpsl
adc
scas
jno
insl
and
fstpl
add
xor
rorb
in
pop
mov
mov
dec
leave
xchg
adc
xchg
jb
bnd
dec
mov
adc
mov
push
xor
dec
ja
or
inc
testb
ror
insb
fistps
add
addr16
push
fs
mov
pusha
test
movsl
xor
mov
frstor
out
cld
add
cmp
push
push
mov
stc
xchg
mov
cmpl
bound
mov
lret
push
mov
shlb
test
addb
addr16
out
xchg
add
mov
cmp
leave
orb
stos
ret
fdivs
mov
adc
in
and
inc
jo
addr16
cmp
das
cld
sahf
dec
sbb
mov
xchg
cwtl
das
pop
pop
xor
sbb
push
movsb
adc
inc
into
je
adc
mov
in
fstps
test
mov
es
add
das
mov
mov
mov
xchg
or
fstps
shrb
jns
sbb
popa
imul
xchg
sti
or
mov
mov
jno
ds
outsl
dec
test
ja
int
mov
ret
ret
std
cmc
push
stos
in
stc
adc
stos
xchg
mov
push
bound
test
push
pop
out
jnp
sub
cmp
add
dec
pop
aam
xchg
pop
inc
dec
mov
icebp
and
or
mov
popf
vmaxps
das
pop
stos
jg
or
adc
arpl
sbb
push
mov
xor
cmp
and
outsb
mov
mov
jle
add
mov
push
jmp
xchg
cmp
int
add
test
fnstenv
inc
cmpsl
or
jbe
sub
in
xor
push
pop
xor
mov
sahf
dec
cs
jbe
cmpsb
mov
push
into
fistpll
xchg
std
out
fbstp
add
inc
lea
testl
mov
lcall
lahf
sub
jno
jbe
int
les
mov
repz
pop
ret
sbb
addr16
in
and
dec
dec
sub
jae
insl
lods
scas
jmp
xor
cmp
pop
in
inc
dec
mov
pop
stc
xorb
addr16
scas
xor
ds
mov
int
fsubs
mov
sbb
cld
push
fwait
cmp
pop
and
xlat
add
sbb
hlt
data16
loop
sti
arpl
dec
xlat
std
lea
lods
mov
dec
fs
and
xchg
dec
das
dec
sahf
sbb
add
sbbl
mov
aad
cmp
push
jo
or
shr
ficoms
test
cmc
test
sbbl
mov
inc
xlat
lods
cmc
adc
xchg
push
mov
mov
xor
test
incl
in
mov
mov
movb
sbb
cmp
xor
mov
mov
mov
in
xor
pusha
sub
mov
mov
jl
dec
int
sub
cmp
test
mov
insb
in
addb
nop
jmp
and
shll
repz
mull
call
outsl
sub
jecxz
jno
lods
jmp
test
aam
xchg
cld
dec
movl
aas
arpl
adc
push
xchg
aas
add
dec
cltd
int3
aaa
idivb
xchg
js
test
jne
ds
push
push
popa
mov
jns
fwait
hlt
mov
icebp
jne
push
mov
xlat
adcl
movb
js
insl
addr16
push
out
mov
add
daa
jbe
mov
fbld
sti
dec
subb
push
ror
test
lea
xchg
xchg
jg
mov
sbb
pop
ja
xor
dec
mov
xor
roll
adc
lahf
je
sub
lock
test
hlt
jo
inc
mov
cmp
mov
jae
sbb
lret
jg
cmc
movb
imul
mov
cmp
out
add
jns
xor
push
xor
pop
cmp
and
cmp
cmpsb
js
stos
imul
mov
rorl
cmp
test
inc
stos
push
mov
testl
stos
push
push
std
adc
cwtl
in
cmp
outsl
imul
or
add
mov
inc
mov
adc
sbb
jb
push
test
inc
cmc
jo
pop
mov
adc
adc
rcl
fsts
std
sub
das
daa
ficompl
std
jb
or
outsl
dec
adc
mov
push
jne
cmp
subb
iret
cmpsl
mov
hlt
aad
les
xchg
mov
inc
xchg
into
adcl
add
ret
mov
push
jno
adc
sub
lds
mov
jb
dec
or
or
sarl
addb
pop
orl
mov
nop
xchg
test
sbb
mov
jle
aas
mov
ljmp
inc
mov
mov
mov
xor
sbb
test
xlat
dec
aaa
sub
stos
adc
jg
cmp
lds
les
out
pop
mov
test
leave
in
mov
int
sub
lods
inc
out
mov
cmp
push
in
rorl
sbb
xchg
addr16
call
xor
test
xchg
inc
mov
scas
mov
jg
xor
dec
lahf
dec
out
addb
leave
test
xor
pop
ja
dec
repz
lret
add
in
mov
sub
addr16
outsb
rcll
mov
popa
and
dec
xchg
es
call
adc
or
inc
sub
int3
push
adc
xchg
add
lods
mov
stos
adc
ljmp
inc
xor
stc
inc
jne
enter
popa
inc
outsb
or
jle
fldenv
xor
addr16
jnp
sub
add
pop
js
pushf
in
mov
lds
adc
out
push
push
mov
das
mov
push
jp
push
sahf
jb
sub
inc
inc
xlat
loope
inc
mov
jge
mov
out
fcomps
mov
xchg
jg
in
repz
dec
dec
sub
in
imul
aad
pop
and
cmp
insl
aaa
loop
sbb
jns
pop
dec
mov
imul
jo
mov
or
jae
adc
andl
push
packssdw
push
mov
cltd
jecxz
inc
aam
jg
rorb
in
sub
pop
mov
enter
cmp
jmp
cmp
add
or
ror
adc
and
imul
push
ja
push
pop
scas
cmp
stos
mov
adc
out
daa
push
mov
rcl
insl
sti
sbb
movsb
pop
repnz
rcl
fscale
in
lods
mov
int3
jnp
jg
adc
daa
divl
push
mov
hlt
add
dec
aam
lret
pop
popa
cmc
xor
mov
adc
lahf
gs
or
sbb
inc
xchg
pop
push
sbb
or
mov
je
pop
icebp
xchg
mov
adc
or
inc
int3
popa
mov
inc
incb
ss
jb
push
call
dec
cmp
push
rcll
ljmp
mov
sub
mov
fbstp
orl
shl
pop
dec
shll
mov
cmc
add
xchg
mov
test
test
jno
fisubs
xor
test
stc
mov
push
inc
clc
ss
dec
xchg
inc
sahf
outsb
cmp
mov
in
out
fsubl
cmpsl
lds
fbstp
xlat
mov
or
add
xor
les
stos
xor
mov
adc
xor
daa
int
jbe
xchg
inc
mov
push
jns
sbb
fisttpl
jge
fisubl
test
mov
cli
mov
mov
subl
test
pop
push
and
inc
in
mov
xor
popa
imul
pusha
fsubrs
mov
inc
xor
ss
arpl
repz
test
xorb
mov
lock
aam
int3
dec
and
xchg
scas
insb
inc
sbb
repz
xor
test
push
jmp
testb
outsb
lds
dec
mov
dec
ficoml
scas
jle
push
ret
dec
inc
xchg
add
mov
adc
jl
xor
and
push
lahf
sbb
cmp
dec
jb
rcrb
int
jns
push
sub
scas
pushf
ja
lods
addr16
dec
pop
gs
xchg
cmp
pop
mov
ss
insl
adc
mov
in
cld
jecxz
push
and
sub
popa
mov
push
ficoml
out
shrb
xchg
jecxz
or
bnd
push
and
sub
lds
push
mov
imul
dec
call
inc
mov
fnsave
insl
adc
rcr
out
mov
out
aaa
arpl
nop
int3
loopne
push
push
mov
loope
shl
inc
test
or
fisubrl
cmp
inc
push
imul
pop
movb
out
fldenv
pop
loop
fsub
sahf
xchg
imul
pop
rolb
pushf
daa
inc
sbbl
and
mov
lahf
das
repz
test
lock
add
xor
cmpsl
add
jno
pop
daa
test
mov
inc
ret
mov
cmp
add
dec
push
insl
jmp
push
or
mov
xchg
dec
sbb
cld
test
stc
lods
xchg
jb
xchg
add
pop
xor
push
pop
inc
xchg
leave
adc
dec
dec
dec
and
ret
rorb
lret
lcall
icebp
pusha
ret
fucom
dec
dec
sub
mov
fcoml
popf
cmp
xchg
adc
adc
insl
stc
xor
cmp
jo
pop
hlt
mov
movsb
push
imull
cmp
add
add
or
fsubrs
in
xlat
lahf
jae
mov
pop
shll
loop
mov
stos
fldenv
cmp
cmp
cmpl
popf
add
inc
pushl
jmp
mov
in
faddp
addr16
mov
adc
mov
adc
ss
jnp
iret
fdivl
rclb
add
push
adc
mov
mov
mov
cmp
outsb
mov
mov
sub
aam
xchg
jecxz
loop
test
mov
stos
fmul
aad
repnz
pop
pop
lds
das
or
lock
xchg
push
fiadds
pop
xchg
arpl
jecxz
dec
dec
or
ja
lds
leave
cmc
adc
cmpsl
sub
js
fsubr
cmpsb
and
mov
push
in
adc
mov
add
repnz
stos
imul
jnp
sbb
js
mov
mov
jo
outsb
imulb
inc
mov
jb
lret
jge
dec
aam
push
cmp
pop
push
movsl
xchg
cmpl
std
jmp
adc
sahf
pusha
xor
mov
ss
add
shl
shrb
lea
sbb
test
lea
rcr
cmp
test
insb
call
scas
inc
jns
test
loop
ja
jbe
mov
mov
cs
dec
fwait
movl
lcall
sbb
mov
mov
and
cmp
mov
dec
jb
fs
es
mov
fstps
sbb
les
jmp
data16
push
je
mov
mov
pop
add
stos
ret
sti
mov
sbb
mov
push
ss
push
cli
insb
mov
push
out
mov
jbe
in
mov
xor
add
stc
sub
cmp
enter
mov
lds
js
pushf
jle
cli
std
stc
xor
and
js
daa
inc
cmp
lret
test
popa
sbb
dec
call
dec
div
xchg
mov
arpl
pop
arpl
roll
xor
aas
xchg
negb
lock
jno
subb
mov
xchg
inc
jnp
lods
ss
mov
sti
xor
sub
sahf
xor
imul
rclb
xor
and
pop
mov
xchg
sub
and
repz
push
out
scas
sarb
sbb
popf
cld
xlat
pusha
push
and
addb
add
lods
rclb
mov
call
sbb
mov
jge
rcr
cli
fwait
addr16
dec
fwait
and
add
int3
jp
xchg
imul
sbb
and
or
xor
mov
xor
in
dec
xor
mov
push
ss
mov
and
fisubrs
push
pop
push
lea
mov
daa
fwait
mov
daa
fcoml
sub
mov
sti
xchg
or
xor
mov
mov
mov
notl
push
xlat
and
sbb
gs
pop
and
adc
mov
sti
out
or
js
cwtl
addb
mov
cmpb
push
lea
jae
sbb
cmp
or
sub
xlat
int3
clc
inc
repnz
mov
cmpl
or
adc
shl
mov
rcll
pop
imul
ss
movsb
add
pushf
push
dec
gs
pop
std
jno
int3
push
dec
xor
dec
adc
test
ret
xchg
jns
mov
jb
inc
and
mull
xchg
in
jns
push
jmp
bsf
push
adc
aad
outsl
pop
xchg
cmp
push
insl
sbb
or
fldenv
gs
jge
call
test
sbb
xchg
imul
cmp
scas
mov
es
adc
in
xchg
jae
pop
filds
and
repnz
jnp
mov
dec
or
xchg
mov
outsb
sbb
sbb
popa
dec
or
pop
aas
test
js
jnp
out
mov
sub
sub
jg
jg
mov
sti
loopne
inc
outsb
ss
push
shr
jne
mov
or
imul
dec
ja
test
data16
add
push
arpl
cli
lea
lret
and
sbb
add
jne
and
lahf
mov
and
push
mov
test
popa
mov
ds
hlt
sbb
imul
cmc
nop
add
gs
addr16
flds
lds
ja
adc
mov
xchg
xchg
call
push
xchg
js
or
out
mov
shrl
xor
push
inc
stos
lahf
add
clc
xchg
rcr
in
sub
jnp
jmp
and
pop
je
pop
jne
push
sub
ret
mov
insb
addb
leave
iret
movsl
fwait
addl
xor
push
pop
mov
out
pushw
jle
orb
pop
adc
cmp
xor
adc
inc
push
or
add
outsb
cmp
dec
cltd
pop
dec
pop
shl
cmpsb
ds
addr16
es
mov
sbb
clc
sub
pushf
jmp
push
cmp
mov
imul
addr16
jg
mov
sbb
pop
pop
repz
shlb
mov
mov
jmp
and
mov
sub
mov
lock
mov
int3
je
mov
test
int3
ret
push
jp
jmp
dec
call
in
int3
pop
jg
sbb
or
cld
std
in
ja
or
cmp
enter
ror
mulb
or
movsb
xor
es
cmpsl
loop
out
leave
dec
ds
fs
adc
aad
inc
sbbb
mov
mov
cmc
jne
and
xor
rcrl
mov
mov
sub
xor
mov
pop
call
out
pop
fdiv
arpl
cmpsb
or
lods
dec
stos
sub
inc
push
addr16
popa
cmp
aad
and
jno
sti
mov
dec
imul
inc
push
push
mov
xchg
sub
not
int3
in
xor
dec
int3
fwait
and
mov
lret
pop
mov
lcall
inc
push
inc
cmp
push
adc
jne
lock
mov
scas
pop
sub
out
std
hlt
cmp
mov
adc
adc
jae
out
push
jb
fcomip
ss
adc
sub
mov
sub
insl
jns
jp
lahf
or
sub
in
jo
jb
call
out
jecxz
scas
das
jns
test
test
sti
stc
or
or
sub
dec
stos
outsb
dec
xchg
adc
add
fistps
out
mov
jmp
push
imul
xchg
outsb
popa
pushf
mov
cmp
jae
jae
add
inc
sarb
cmp
push
arpl
or
mov
rclb
add
ja
imul
cmp
xchg
add
ds
mov
jge
arpl
ret
std
inc
je
invd
scas
inc
fmull
imul
mov
popw
and
out
jecxz
xchg
jno
rclb
outsl
fwait
loop
adc
push
sbb
xor
call
inc
push
jge
and
mov
inc
int
insl
push
dec
repnz
cwtl
les
and
cmp
xchg
and
sbb
cmp
fnstsw
jnp
les
aaa
lock
xor
lods
push
lahf
mov
jb
rolb
incl
mov
jmp
int3
jb
arpl
push
sbb
push
jnp
popa
push
dec
or
inc
idivl
ds
pop
mov
out
dec
jecxz
dec
mov
sti
movsb
loopne
daa
cmp
xchg
das
sbb
adc
inc
aad
adc
inc
aad
mov
int3
repz
fsubr
jo
dec
dec
pop
push
rclb
pop
aas
cmp
notl
rcr
rcl
pop
dec
sub
cmc
add
les
xchg
loope
idivl
mov
call
or
js
inc
pushf
outsb
ficoms
sbb
adc
call
ljmp
and
lahf
pop
test
inc
insb
nop
ret
xchg
mov
cmc
pop
int
loopne
pop
fs
push
push
sub
inc
in
dec
popa
out
test
adc
daa
jle
mov
leave
jg
sbb
push
cmp
pop
fidivl
aad
jmp
adc
sub
into
xchg
mov
and
dec
pusha
les
xor
push
mov
cmp
sub
inc
adc
and
int
ja
sbb
test
fs
pop
push
xor
jecxz
mov
adc
pop
rcll
push
inc
or
push
mov
sar
or
ret
mov
inc
jge
test
je
mov
or
rclb
ja
repz
sub
addl
jecxz
movsl
scas
daa
out
cmp
imul
loop
imul
push
adc
mov
dec
idivl
mov
mov
cmpsl
sahf
pushf
mov
sub
or
jecxz
repz
jnp
adc
lret
sbb
arpl
daa
xchg
adc
test
dec
lahf
mov
in
mov
dec
lahf
or
lahf
pop
adc
mov
sub
out
gs
pmullw
and
inc
mov
xchg
mov
sbb
bound
divb
scas
adc
addr16
sub
jbe
push
mov
icebp
jns
sub
pop
pop
jne
pop
imul
xor
sahf
pusha
push
push
hlt
xchg
xchg
fadd
stc
movsl
loope
pop
dec
fwait
cmp
inc
sahf
adc
mov
test
movsl
frstor
xor
stos
pop
push
push
cmp
mov
dec
les
dec
sarl
test
adc
mov
jg
xchg
mov
pop
fmull
sub
nop
fists
mov
mov
or
lret
aaa
pushf
sbb
sti
mov
cmp
adc
sbb
and
out
stos
mov
push
ds
sbb
sbbl
sti
das
outsl
xchg
and
or
sbb
out
scas
mov
mov
lods
int3
cwtl
xchg
sub
dec
inc
sbb
shll
push
dec
or
push
imul
rcrb
jbe
sarb
add
and
ja
cs
jg
inc
and
rorb
mov
push
int3
sti
inc
mov
das
leave
addr16
add
sbbb
imul
gs
jg
mov
push
add
jo
mov
scas
outsb
sub
mov
mov
in
dec
fsub
push
pop
inc
insb
adc
mov
cmc
loop
lds
in
mov
xchg
inc
sbbb
es
or
notl
or
inc
rcrb
les
push
fs
fsts
sbb
popa
xchg
fmulp
jno
xchg
dec
std
dec
push
mov
jle
jmp
pop
outsb
and
dec
mov
sub
fcom
nop
or
xor
mov
or
jne
divl
lret
into
out
adc
idivb
adc
mov
mov
aad
pop
ss
movl
sbb
push
iret
or
in
mov
cmpsl
adc
pop
mov
pop
push
jno
cmp
loopne
pop
ftst
cmp
mov
in
mov
pusha
aas
mov
in
cmp
and
lods
cmc
pusha
ljmp
xchg
gs
pop
push
mov
mov
cmpb
pop
push
and
fiadds
jns
sub
or
arpl
jp
mov
push
sub
mov
push
jg
incl
sub
sbb
mov
jnp
outsb
scas
jmp
popa
and
subb
xlat
lcall
data16
popa
inc
out
mov
enter
mov
lcall
sbb
and
jnp,pn
aas
lret
js
dec
stos
xorb
leave
push
cwtl
cltd
dec
push
jmp
jmp
shrl
ret
mov
jmp
pushf
push
xor
and
lods
push
mov
clc
mov
and
add
or
and
cmp
inc
cld
nop
and
in
jno
ds
dec
add
cwtl
repz
cli
loope
sbb
lds
xor
outsb
stc
jb
leave
loope
mov
ds
dec
xor
test
or
movb
je
std
leave
push
push
add
jl
dec
xchg
sub
and
push
xchg
jns
or
std
mov
clc
mov
mov
repz
gs
push
push
aam
dec
add
shll
or
pop
push
push
or
test
add
shrl
xchg
jb
lea
enter
sub
xor
adc
cld
insl
push
sbb
out
icebp
xor
add
push
mov
and
xorb
push
inc
into
movsl
xor
icebp
xchg
imul
push
dec
pop
int3
or
and
or
ror
cltd
in
xor
fimuls
frstor
jge
and
dec
or
pop
push
lcall
cli
jne
pop
mov
push
or
shr
ret
lock
xor
jmp
ja
mov
mov
repnz
jo
fisttpll
cltd
iret
aad
jae
pop
mov
inc
pop
push
dec
es
cltd
add
jl
add
xchg
inc
push
xchg
pusha
imul
sbb
stos
sbb
sahf
jno
out
pop
fcoms
in
sahf
jmp
mov
mov
xor
call
cli
ret
outsl
sub
fucom
xor
mov
cmp
in
lock
and
dec
jne
pop
add
ss
nop
fdivs
clc
ss
adc
or
cwtl
mov
push
pop
cs
hlt
adc
shrb
add
pop
jle
adc
xor
xchg
mov
outsl
lea
pop
pop
ja
pop
adc
push
stc
xchg
in
fmull
into
int
fimuls
xlat
dec
je
jge
out
aaa
ret
and
lret
outsb
cmpsb
sahf
sbb
sub
loope
test
dec
daa
lahf
push
jbe
sbb
mov
das
je
shrl
pop
mov
out
inc
fwait
pop
adc
lods
jns
int
adc
push
sub
mov
dec
xlat
adc
xor
fdivrl
inc
lahf
out
xchg
jo
mov
sbb
jo
mov
sbb
adc
das
adc
mov
push
pop
pop
dec
or
mov
add
lds
lods
mov
ja
arpl
mov
sub
je
push
mov
push
push
cmp
mov
repz
lahf
dec
cmc
scas
pop
push
mov
cmp
push
and
shl
xorl
dec
and
xor
jmp
aaa
out
jg
shrl
aas
xor
jnp
movsl
sbb
fs
fs
cltd
xchg
jg
ror
insb
cmp
inc
rcrb
outsl
jb
mov
sbb
cmp
into
insl
push
sbb
and
and
add
inc
mov
dec
nop
mov
dec
mov
repz
scas
int3
out
xor
js
mov
mov
rorb
movsb
xchg
mov
in
ljmp
push
in
or
xchg
jbe
pop
sbb
inc
enter
int3
dec
fcomps
jge
jg
stos
pop
lods
add
cli
xchg
sbb
sbb
cmp
add
pop
and
imul
xchg
xchg
jns
mov
and
punpckhwd
insb
shrl
insb
dec
jne
sub
cmpsl
fisttpl
sbb
inc
addb
pusha
loope
out
nop
loopne
imul
iret
ja
jbe
mov
repz
push
sbb
and
subb
rorb
cli
cs
test
ret
cltd
lret
dec
add
or
popa
lcall
into
xor
xor
jmp
out
jmp
mov
fisubrs
cmp
ret
add
js
dec
fstp
fdiv
std
xchg
jne
sub
lea
push
sub
mov
cmp
cmp
add
adc
test
sub
clc
push
and
lahf
cmp
mov
fbstp
loope
pop
scas
dec
cmp
jge
sub
adc
mov
add
push
test
movsb
mov
gs
push
aam
add
bound
arpl
pop
icebp
pop
add
in
adc
cli
sbb
push
or
subl
sbb
mov
jp
arpl
dec
and
stos
add
shlb
enter
insl
and
add
mov
test
sub
dec
mov
ret
xchg
xor
push
mov
pop
das
or
mov
add
pop
sbb
aam
cmp
sbb
sahf
out
add
arpl
inc
in
mov
inc
lods
sub
jmp
popa
xchg
push
sbb
jns
aaa
push
adc
lock
cmp
roll
inc
cmc
sbb
sub
jge
popf
jne
mov
push
test
imul
and
in
inc
mov
add
sbb
rcll
fs
loopne
jecxz
xchg
rclb
pop
inc
xor
xor
popa
dec
lods
adc
and
icebp
jp
and
loopne
ret
insl
mov
fisubrs
adc
mov
jne
or
sub
add
repz
rclb
outsl
stc
fcmovnb
aam
sbb
sbb
inc
aas
jae
cmp
jne
xor
lret
sarb
loope
and
dec
push
popf
pop
fcmovnbe
push
aad
shrb
fstpt
lock
push
xor
sti
rolb
push
in
shlb
cmp
inc
or
cld
scas
push
call
xchg
fsubl
add
lret
adc
lock
or
mov
insl
addl
or
mov
or
ret
sub
and
mov
inc
stos
jne
hlt
pop
bound
push
push
fldt
push
mov
mov
push
pop
pop
push
enter
cmp
adc
repnz
adc
mov
inc
repnz
mov
mov
dec
jae
mov
adc
inc
test
jecxz
pop
mov
addl
orb
inc
aaa
dec
add
stos
loope
in
push
lock
pushl
aas
call
movsb
sub
and
cmp
push
mov
push
ret
daa
into
clc
mov
or
or
nop
sbb
jne
jmp
mov
scas
movsl
mov
pop
or
sub
mov
push
pop
mov
pop
mov
inc
xorb
orl
pop
jl
pop
in
not
lds
xchg
fldl
adc
daa
dec
dec
jmp
fdivrs
and
clc
or
call
lods
pop
inc
add
mov
jb
andl
mov
jo
mov
ljmp
dec
push
lcall
data16
clc
mov
aad
jns
mov
loopne
mov
mov
dec
dec
pop
mov
sbbb
xchg
lar
fists
add
stos
sahf
dec
mov
inc
arpl
cmp
data16
test
dec
cltd
xor
pop
add
sbb
call
cmpsb
ficomps
jb
fnsave
add
pop
xchg
cs
push
insl
pop
add
push
loopne
out
jge
ss
mov
insb
xlat
and
jnp
dec
push
cmc
scas
movsb
enter
in
cmpsl
xchg
push
cld
stos
push
out
cmc
push
add
jae
sbb
fs
mov
gs
mov
aaa
mov
and
cmp
inc
xor
loope
inc
stos
ja
xchg
jae
loop
mov
shll
lds
xlat
arpl
jl
sbb
xor
xor
mov
icebp
xchg
fisttpl
jge
xor
in
loop
push
nop
sbb
sbb
clc
cwtl
int
cwtl
iret
xorb
cmp
jb
cwtl
sti
loope
push
in
push
mov
dec
dec
ret
enter
fdivrs
fldt
popa
loope
pop
dec
adcb
repz
inc
ds
das
cmp
lds
mov
pop
outsl
out
push
jecxz
mov
xchg
aaa
sub
cld
push
mov
andb
in
xor
sahf
fsubrs
add
test
in
push
ret
cmp
dec
es
sub
jl
add
add
dec
shlb
clc
cltd
popl
andb
push
adc
in
sahf
lods
in
aaa
cmpsb
ret
mov
cmp
lock
aad
fcomi
jmp
cwtl
mov
rorb
and
fwait
dec
cld
xchg
mov
call
in
xchg
dec
insb
rclw
sub
sub
cmc
xor
bound
loopne
insl
imul
lock
sbb
bnd
sahf
xchg
pushf
dec
cmp
sti
cwtl
pop
scas
outsl
sub
loopne
call
lret
out
jl
dec
mov
fsubr
cmp
push
pop
out
jbe
repnz
sbb
das
cli
lret
call
leave
clc
sbb
xor
cmp
mov
cmpsb
pop
cli
or
push
loop
lods
orl
bound
sub
cmp
pop
inc
fldl
adc
xor
fidivs
int3
pop
or
roll
xchg
inc
cmp
fs
in
pop
or
stc
loope
pop
repnz
fs
mov
rolb
aas
cmp
popl
jbe
and
push
sub
push
into
inc
in
push
cmpl
jg
nop
sub
adc
jne
or
adc
adc
fstps
js
int
mov
movsb
dec
push
jmp
dec
cs
xor
std
add
mov
mov
push
jmp
or
into
dec
adc
adc
push
loopne
xor
lds
cwtl
jns
inc
mov
dec
xor
imul
sbb
pop
jne
push
testb
out
adcb
push
in
mov
xlat
lock
out
push
aam
outsb
xchg
push
in
add
out
int
mov
insb
dec
mov
mov
push
cmpsb
lods
mov
rcl
sub
ud2
je
and
adc
xor
pusha
mov
jno
outsb
in
movsb
xor
sbb
dec
aaa
fbld
iret
push
icebp
fidivs
in
add
sbb
subb
cmp
gs
xor
sub
int3
sbb
jne
push
sub
mov
cmpsl
imul
fcmovnu
add
sub
xor
jnp
sbb
adc
push
cmp
inc
adc
fists
and
pop
inc
icebp
mov
shlb
dec
mov
rcl
pop
shl
sub
add
out
fldenv
test
mov
add
movsl
cltd
pop
add
arpl
jg
jbe
adc
and
cmp
fs
mov
imul
lods
fnstsw
stos
push
insb
insb
pop
push
pushf
mov
enter
add
inc
jg
xchg
aam
mov
stos
das
or
clc
in
stos
mov
xor
inc
shrl
push
push
les
aaa
cli
dec
insl
add
pop
add
jmp
inc
imul
sbb
andb
ret
aas
inc
mov
in
cmp
ss
lods
scas
pop
xchg
push
and
mov
adc
jge
jnp
mov
mov
mov
enter
cmp
in
fiaddl
fwait
rorl
xchg
js
add
imul
movsl
in
xlat
sbb
pop
imul
jmp
dec
lea
movsl
or
and
xchg
in
sbb
arpl
bound
cmp
and
addb
stos
pop
cwtl
insb
dec
push
ljmp
sbbb
cmpl
in
or
xlat
xorl
sub
mov
mov
in
iret
in
scas
iret
daa
ret
push
pop
mov
sbb
mov
add
repnz
mov
jmp
push
sub
pop
dec
rcl
cli
inc
mov
inc
jmp
sahf
mov
fs
sub
sbb
in
adc
and
mov
sub
lods
out
outsb
stos
out
jno
mov
aas
inc
sub
into
dec
sahf
cld
xchg
ja
push
push
repnz
sub
xchg
sub
pop
push
test
in
mov
mov
jp
jb
fdiv
or
push
mov
sahf
cltd
push
cmp
in
out
inc
std
cwtl
enter
mov
sub
cmpsl
xor
imul
test
dec
cs
mov
jnp
out
mov
mov
popw
out
dec
mov
movsl
jle
sub
mov
xchg
add
lahf
jnp
adc
jmp
sbb
daa
stc
add
sbb
enter
clc
aam
testb
or
mov
repz
push
add
shufps
dec
adc
test
cmpb
stos
shlb
lret
jo
jmp
rcl
cmpsl
xor
push
lods
arpl
dec
jmp
mov
mov
xor
sahf
mov
fsubrs
or
stc
mov
insl
xorl
dec
and
mov
jno
test
mov
pop
loope
inc
sahf
mov
int3
pop
mov
scas
dec
sbb
and
int
pop
mov
sub
push
lods
cli
pop
adc
and
lret
adc
pusha
mov
xor
mov
lods
add
cmp
sbb
insb
imull
fs
cmpsl
sub
jl
mov
pop
cli
dec
and
pop
or
outsb
lret
and
push
ljmp
fistpl
jg
incl
in
test
pop
cltd
and
incb
xchg
mov
in
cld
pop
push
xchg
jne
or
and
aaa
mov
cld
inc
mov
jp
dec
adc
je
repz
pop
mov
leave
inc
jmp
aam
adc
or
in
add
xchg
pop
push
in
sahf
in
imul
cmp
pop
jecxz
mov
adc
in
jl
je
and
movlps
adc
pop
icebp
stc
cmp
je
popf
fwait
popa
jle
lret
mov
popf
ja
mov
jl
mov
pop
sbb
mov
pop
dec
mov
cmp
push
nop
jno
out
mov
mov
cs
cmpsb
adc
xor
sub
aas
sub
xchg
out
adc
pop
sub
arpl
push
je
or
mov
in
vpsubq
pop
sbb
inc
cmp
xchg
fisttps
daa
xchg
xchg
mov
mov
sti
daa
pop
ss
outsb
je
add
in
call
mov
aad
dec
loopne
popa
xor
xor
inc
pop
mov
push
jne
in
mov
movsb
mov
push
sbb
lcall
xor
dec
inc
ljmp
push
call
xlat
ja
or
mov
jno
push
je
or
data16
adc
add
lods
adc
fidivl
mov
adcl
pop
subb
push
hlt
xchg
ret
jg
pop
add
pop
cmp
cmp
dec
xchg
inc
mov
in
xchg
enter
pop
push
mov
mov
dec
sti
pop
scas
mov
fsubs
mov
sub
sbb
cmp
lds
xchg
aaa
arpl
cmp
cmp
adc
flds
or
push
adc
mov
fdivs
adc
xor
les
or
out
pop
and
push
add
js
or
movsb
push
shl
mov
scas
scas
mov
pop
mov
movsl
dec
mov
scas
push
inc
jb
add
sbb
dec
push
inc
dec
aas
sbb
mov
out
adc
out
jmp
in
mov
loopne
push
cltd
jg
in
xchg
adc
or
fsubrl
gs
insl
popa
test
xchg
popa
jg
nop
fninit
ret
lea
add
or
adc
xchg
out
mov
jg
mov
xchg
inc
sub
fstps
sub
sub
mov
xchg
jb
push
xor
je
add
cmp
repz
js
cmp
mov
es
pusha
sub
enter
fldcw
and
jle
daa
mov
push
nop
inc
repnz
dec
test
sti
outsl
mov
test
orb
lret
cmp
imul
cmp
add
stos
iret
in
mov
mov
stc
pop
sti
popf
in
mov
popl
sti
fnsave
daa
lea
divl
mov
loopne
and
pusha
divb
adc
sbb
jo
loop
jns
or
xchg
pusha
inc
mov
jne
push
repnz
addr16
jne
dec
shlb
xchg
adc
call
dec
into
or
hlt
out
adc
cli
mov
sbb
adc
movsb
scas
outsb
cmp
dec
inc
clc
fninit
and
std
xchg
adc
in
mov
ljmp
mov
xchg
dec
outsl
sub
loopne
into
addr16
aas
and
fldcw
std
mov
fs
inc
cli
xchg
cmp
rolb
push
add
mov
popa
stc
std
popa
and
jae
add
cmp
mov
mov
sbb
xor
daa
movsb
lcall
stc
dec
and
cmp
int3
fwait
cld
push
arpl
cmp
xor
scas
fmul
fisttps
les
push
sub
leave
inc
cmp
pop
push
iret
mov
aas
call
sahf
inc
rcll
cmc
ds
in
fcoml
pop
cmpsl
pop
or
pusha
fildl
bound
mov
and
ja
mov
sti
jae
inc
pop
arpl
test
repnz
sbb
push
cs
jae
incb
out
sub
divb
inc
outsl
dec
je
mov
mov
cmp
jle
popf
mov
and
loop
cmp
imul
sbb
cli
mov
push
leave
cmpl
pop
pop
xchg
xchg
or
mov
jl
fbstp
mov
jnp
add
sub
and
bnd
loopne
xchg
adc
aaa
cmpsb
jg
sbb
jb
and
lods
cmp
mov
std
int3
pop
nop
out
jnp
sub
stos
test
lcall
cmp
pusha
push
xchg
inc
pop
jp
addb
js
jg
xchg
dec
stc
jecxz
loopne
jo
jle
mov
and
mov
pop
xchg
dec
jb
in
cmp
xor
mov
call
pop
stc
shlb
aaa
sbb
dec
pop
dec
pop
test
dec
xorb
adc
lahf
push
aas
mov
mov
add
xor
shrb
ret
shlb
or
enter
jmp
jb
mov
jecxz
xor
test
hlt
push
dec
test
fisubrl
scas
ja
daa
add
imulb
add
andl
mov
and
push
mov
mov
pop
xchg
xor
xor
sbb
out
insb
mov
orb
repz
stos
stc
lret
sbb
das
out
mov
xchg
hlt
or
mov
push
adc
pop
loope
daa
loop
pop
inc
mov
mov
divl
cmc
es
mov
inc
dec
add
pushf
sbb
mov
push
mov
xchg
jno
in
test
mov
cwtl
ret
sbb
mov
push
sarb
cli
and
cwtl
cmp
test
mov
mov
out
insb
daa
mov
push
sbb
or
dec
sub
cmp
dec
push
or
loop
clc
icebp
xchg
pop
leave
pop
mov
mov
pusha
inc
or
fs
dec
push
pop
enter
dec
lret
sahf
out
stos
adc
sub
push
fcomps
nop
xchg
cmp
mov
jp
push
sub
inc
sbb
lods
enter
popa
xor
cmpsb
test
ss
enter
das
sahf
fidivrl
outsb
add
rcrb
test
fwait
cs
jle
insb
mov
pop
in
cmp
and
mov
or
pop
sbb
inc
pop
insb
ss
aam
mov
xchg
mov
mov
push
add
outsl
mov
xchg
insl
xlat
jg
out
xor
je
sti
mov
loope
scas
jbe
int3
mov
xchg
loopne
push
and
add
sbb
sti
repnz
loope
xchg
mov
loop
popa
inc
fcompl
jg
or
mov
and
sub
jg
pop
icebp
imul
mov
mov
cmpb
ljmp
push
and
mov
jo
lock
add
movsl
movsb
fmull
vcvtps2pd
lods
iret
in
cmp
mov
imul
cmp
push
add
shlb
out
push
xchg
fs
mov
mov
mov
imul
add
imul
stos
ja
dec
movsl
inc
je
xchg
cmc
lods
mov
push
dec
jae
call
hlt
pop
das
mov
fbld
jns
lahf
jl
mov
pop
fstl
push
jne
jle
mov
cs
in
and
imul
arpl
jbe
imull
sub
jnp
std
push
dec
cltd
nop
idivl
aas
dec
or
mov
inc
js
daa
psignb
jecxz
jmp
jae
mov
xchg
sbb
xlat
and
mov
cltd
xor
out
ss
arpl
mov
mov
loopne
or
mov
pop
cmc
std
test
xchg
inc
sbb
loopne
inc
dec
jns
inc
and
add
lods
inc
cmp
test
shll
in
xor
inc
xor
in
clc
mov
jo
jg
jmp
lret
cmc
mov
or
ret
xchg
lret
or
inc
repz
mov
sbbl
sbb
cmp
pop
fistpl
push
mov
mov
and
arpl
cmp
in
jge
idiv
leave
and
ss
add
aas
mov
xor
lret
adc
inc
lea
mov
fwait
or
jb
lcall
sbb
mov
ds
jmp
into
aad
fst
mov
xlat
cmpsl
repz
jmp
inc
leave
pop
popa
or
cmp
jge
fdivrs
xchg
jecxz
sbb
sub
test
sbb
aas
or
add
mov
xchg
dec
dec
or
stos
mov
loopne
xlat
es
cmpsl
cld
imul
outsl
pop
cmc
lret
jno
sar
add
gs
sti
sbb
fcoms
jle
or
mov
popa
int
and
push
jge
incb
std
out
ljmp
cli
pop
lcall
int
pop
in
mov
aas
inc
xor
inc
mov
ret
sub
pop
and
xchg
push
jne
jae
mov
mov
mov
int3
push
fildl
shr
jnp
loop
loopne
sti
push
out
mov
sub
mov
push
std
add
das
dec
add
push
xchg
pop
stos
mov
pusha
dec
inc
adc
push
mov
outsl
loop
jae
repnz
dec
inc
iret
inc
arpl
mov
pop
es
xor
pusha
dec
int
mov
mov
mov
test
jns
push
in
movl
outsb
cmp
outsl
adc
loope
lret
add
dec
mov
aad
push
out
dec
adc
xchg
dec
and
push
ficomps
pushf
jb
es
xchg
xor
in
movsl
je
add
je
sbb
lods
push
aaa
movsb
or
lahf
and
nop
jp
xor
push
and
in
jno
and
lahf
roll
pop
push
cmp
sub
jo
in
jae
push
and
pop
cli
ret
ret
fldt
mov
je
and
adc
cmp
insl
adc
push
or
add
mov
dec
enter
xor
imul
bound
in
repz
or
adc
jne
sti
mov
mov
test
fdivp
sbb
test
call
std
sub
in
in
daa
shrb
xor
dec
cmp
dec
inc
bound
nop
les
stc
loope
mov
imul
xchg
cmp
inc
jbe
or
mov
movsl
ror
in
mov
jg
jge
ds
add
int3
sbb
rcl
test
mov
aas
aaa
loop
pop
insb
inc
loop
pushf
lods
inc
and
scas
xchg
aad
xor
xchg
gs
cmp
adc
mov
fcom
das
push
mov
lods
and
jnp
vsqrtsd
es
and
lahf
loopne
pop
dec
mov
cli
lret
push
mov
lea
fists
pop
fbld
and
jge
jnp
jle
lea
or
roll
shl
in
mov
negb
loop
stc
loope
cmpsb
fdivs
inc
mov
loope
arpl
nop
jno
mov
dec
adc
das
mov
ss
or
mov
xchg
loope
test
mov
leave
xchg
inc
sbb
adc
ljmp
popa
pop
sbb
pop
dec
fcompl
dec
pushf
cmpsb
notl
hlt
je
out
in
lret
cmp
iret
push
inc
add
imul
movsb
jae
xchg
sbb
loopne
or
ljmp
pop
lret
lods
push
fdivs
mov
mov
push
and
pop
jp
das
test
or
push
fidivrl
cli
rcr
push
mov
xchg
dec
lahf
and
inc
xor
jecxz
pushf
ds
push
je
jbe
lahf
lret
sbb
dec
sbb
push
sbb
rclb
sarl
dec
mov
cmp
out
mov
inc
pop
pop
pop
cmp
and
call
jno
mov
xor
out
insb
mov
mov
aam
pop
mov
insl
jle
out
aas
decl
addl
xchg
xchg
mov
in
push
xor
sub
ja
inc
lret
dec
dec
stos
xchg
sub
movsb
icebp
mov
lods
fucomi
jb
je
cmp
push
mov
mov
arpl
insl
inc
les
jg
fistpll
pusha
fstpl
jmp
sub
movsl
push
mov
lock
pop
rcr
shrl
xchg
leave
pop
push
xor
mov
fcomps
std
lods
xor
sahf
xchg
data16
jb
stc
mov
jmp
xor
lock
lcall
jmp
cs
inc
mov
in
dec
inc
xorb
jecxz
jl
mov
inc
test
xchg
sarb
gs
mov
inc
fimull
jecxz
sahf
test
popa
jne
sub
mov
pop
cs
popf
repz
shl
xlat
mov
je
data16
imul
cwtl
and
inc
pop
lcall
xor
push
and
inc
cld
lahf
cs
sbbl
mov
xchg
push
clc
je
and
xchg
xor
cmp
fsubs
cltd
inc
loope
adc
mov
fisubrl
outsb
cmpsl
outsb
fsubrs
add
xchg
adc
inc
mov
xchg
enter
push
jmp
inc
negl
imul
sub
es
daa
das
push
subb
stc
sbb
cmp
add
xchg
sub
pop
jb
push
mov
lret
adc
imul
adc
xchg
daa
std
cmp
mov
out
mov
cmp
adc
jbe
mov
xchg
rcll
mov
popa
pop
and
jnp
fcmovnb
xchg
dec
lods
aas
imul
std
mov
ja
aad
or
popf
push
mov
fbstp
in
into
jb
adc
add
fildl
ret
in
sbb
cmp
mull
mov
mov
and
outsb
std
xchg
bound
and
cmpsb
fwait
xlat
aas
out
sahf
dec
mov
test
xchg
js
lods
ljmp
cld
cmp
test
mov
mov
and
cmp
imul
test
test
ficomps
xchg
dec
adc
lods
fyl2x
testl
out
imulb
jb
cmc
push
aas
mov
mov
push
scas
jg
decb
out
jge
dec
scas
jg
fisttpll
add
fucomp
popf
hlt
and
mov
pop
js
mov
test
or
les
sub
xor
mov
leave
loope
sub
loop
xor
shl
jnp
fldcw
xor
repnz
sub
jp
pop
adc
cmpsb
mov
inc
mov
int3
sbb
mov
push
and
xor
mov
orb
pop
jmp
cli
dec
mov
es
jecxz
test
sbb
fdivrs
cmp
outsb
data16
adc
insb
cmc
dec
inc
sahf
adc
cmpb
loopne
adc
inc
adc
repz
addr16
imul
push
sbb
sub
jnp
ljmp
dec
jo
push
sub
push
movsb
mov
jbe
push
and
xor
in
mov
bound
cmc
aad
out
cmp
and
cmp
je
gs
or
push
add
mov
mov
std
ret
clc
push
inc
pop
aam
dec
dec
cmp
adc
orl
or
mov
mov
xchg
daa
xor
xchg
in
cwtl
ljmp
jnp
ljmp
test
cmp
xchg
or
jle
mov
ljmp
push
adc
sbb
rcr
in
and
inc
clc
adc
gs
sub
xor
jo
mov
inc
leave
cmp
loope,pt
mov
shll
inc
int3
inc
int
in
push
xchg
insb
pusha
xor
or
cmp
rolb
mov
cmpsb
push
pop
mov
rorl
out
sub
scas
mov
push
scas
je
jle
sub
mov
mov
dec
mov
shll
xor
sub
sarl
hlt
pop
in
ud0
mov
test
pop
push
xor
push
shlb
fimull
loopne
dec
jmp
data16
sbb
xorl
cmp
out
sahf
xchg
mov
add
push
lock
cld
mov
mov
jae
jae
lret
in
pop
pop
lods
mov
fcomip
bound
add
imul
into
sbb
jae
sti
pop
mov
out
pusha
movsb
sahf
pusha
jbe
and
jp
jmp
xor
test
lea
loope
xor
xchg
jmp
fdivs
rcll
dec
popa
xor
pushf
mov
jno
inc
mov
nop
dec
stos
fadds
mov
aad
sti
loop
aam
mov
cmpsl
shlb
inc
jmp
add
lods
jge
out
in
or
or
packsswb
or
inc
cmp
fistl
js
mov
orl
lcall
insb
movsl
fists
mov
pop
pop
jo
mov
or
sbb
and
loopne
jno
lret
leave
push
mov
adcb
dec
push
sbb
sub
mov
iret
and
call
or
pop
mov
pcmpeqb
xchg
mov
inc
arpl
in
mov
sbb
jecxz
sbb
jno
sarb
pop
add
push
into
lods
jne
cltd
dec
sbb
pop
mov
adc
out
jne
shll
daa
dec
pop
sub
jg
push
outsb
or
push
mov
push
cmpl
cld
and
int3
in
jne
into
imul
stos
js
and
pushf
xchg
test
mov
cmpsb
into
push
push
adc
int
dec
xchg
inc
sarb
popa
popa
pop
icebp
cmp
cmp
pop
scas
lds
jne
pop
fstpl
int
jg
mov
jecxz
bt
mov
les
mov
mov
jno
mov
push
add
jae
aas
mov
push
adc
sub
hlt
imul
push
lods
adc
xorb
inc
xor
sub
fimuls
ret
fstpt
idiv
push
cmp
xor
into
ss
lcall
push
loop
lret
cltd
fnstcw
stos
push
in
jg
and
dec
jo
mov
cmp
mov
add
xor
mov
inc
test
repnz
mov
imul
add
xchg
mov
sub
xchg
jg
adc
imull
dec
inc
loop
aaa
xchg
and
add
out
rdpmc
lcall
push
and
inc
mov
lret
adc
lret
or
add
jnp
gs
and
outsl
scas
aad
xor
dec
sbb
int
mov
and
push
push
mov
and
and
fistpl
xlat
dec
add
jne
jge
cld
jb
xor
or
xchg
xor
sarl
dec
pop
jno
test
repnz
mov
repz
push
mov
mov
inc
dec
outsl
mov
mov
clc
cli
xor
shrl
push
and
out
pop
or
push
sbbl
xchg
pop
insb
xchg
mov
sub
mov
and
rorl
jg
mov
in
jae
add
repz
sub
cmp
es
dec
cwtl
scas
lock
mov
pop
in
ja
add
mov
in
fbstp
lahf
mov
pop
loop
and
or
dec
mov
aaa
or
xchg
dec
rcr
call
loope
xor
xor
inc
cmp
subb
out
orl
pop
jb
pop
jno
add
add
leave
stos
pop
in
outsb
incl
push
push
and
mov
ss
dec
mov
and
xchg
call
or
and
mov
and
mov
add
sbbb
xchg
loope
jmp
iret
mov
out
fcompl
es
es
jae
cmp
push
push
lds
mov
std
push
mov
or
mov
pop
into
sub
push
outsl
loope
in
jl
in
mov
mov
pop
or
pop
xchg
les
xor
lret
push
inc
add
lret
aam
fsub
inc
test
add
call
jne
enter
repnz
cmp
js
aaa
mov
leave
inc
push
sbbl
jle
dec
hlt
push
aam
int3
dec
movb
daa
movsb
jmp
add
push
xchg
sbb
adc
push
adc
xchg
push
and
jle
lahf
add
cmc
sti
insb
sub
stos
push
shll
dec
test
pushf
push
in
jns
dec
cmc
lret
mov
mov
je
sbb
mov
xchg
test
add
out
jno
mov
sub
adc
mov
mov
icebp
dec
dec
imul
lods
lret
jp
xchg
jnp
xor
js
and
loop
push
insb
mov
test
rcrl
or
jl
jp
cmp
lods
mov
jae
clc
sbb
pop
xchg
jmp
or
push
push
inc
mov
push
lahf
mov
sahf
dec
adc
mov
pop
loope
xor
sbb
sbb
cld
cmpsl
scas
inc
cmp
movsb
test
jo
popa
push
int3
sub
jo
or
pop
stc
inc
ret
inc
sub
xchg
das
inc
imul
je
and
daa
leave
in
subb
xchg
int3
sbb
mov
jns
notb
cwtl
jmp
xor
outsb
sahf
fldenv
nop
enter
gs
add
sbb
jp
repnz
jo
aad
adc
mov
mov
adc
pop
lds
push
xlat
addr16
into
or
add
inc
in
dec
cmp
mov
movsl
cmp
xchg
jmp
es
out
mov
shlb
aas
push
cmp
jl
paddusb
mov
ret
fisttpll
ficoml
ds
out
lds
cmpsb
mov
pop
dec
adc
jl
stc
test
movsb
adc
lds
jmp
orb
pop
push
pop
push
xchg
mov
das
negb
mov
pop
mov
fsubl
push
add
xchg
xchg
lcall
add
stc
push
mov
pop
addb
mov
push
mov
arpl
mov
ja
mov
jle
mov
fs
arpl
xchg
mov
aad
nop
add
sarl
jge
sahf
mov
mov
aam
pop
cli
in
mov
jno
sti
lret
repnz
pop
add
mov
adc
sbb
icebp
xchg
inc
adc
fcoms
xor
popl
dec
mov
jo
andl
cmpsl
mov
xchg
aad
pop
daa
repnz
mov
loop
jnp
sbb
js
jno
sub
push
movl
mov
and
pushf
in
mov
jae
insl
sub
rcll
dec
mov
in
sub
lock
test
pusha
orl
cmp
adc
mov
inc
pushf
cmpsb
lock
adc
or
adc
imul
sbb
setae
ss
iret
inc
out
cmpsb
push
mov
mov
iret
orl
stc
mov
dec
nop
sbb
xlat
popf
mov
dec
push
adc
jle
or
fbstp
stos
jbe
sahf
dec
adc
mov
xchg
pusha
lcall
aaa
xchg
rcll
lock
les
hlt
xor
sahf
mov
mov
in
mov
ret
xchg
call
sbb
aaa
icebp
sbb
jb
cmc
dec
arpl
add
mov
stc
push
xchg
jnp
jnp
popf
bound
pop
xchg
lds
fwait
in
rolb
sbb
sub
jne
fs
mov
sub
ja
gs
mov
fildl
mov
imul
cmpsl
mulb
mov
mov
add
dec
mov
or
sub
xchg
push
pop
outsb
push
adc
mov
sbb
jl
pop
out
cmp
cli
in
mov
and
jle
fisttpl
insl
jmp
jae
sub
push
stos
cmp
jmp
and
fildl
int3
pop
mov
and
sub
pop
xor
orb
xlat
push
dec
cmp
fstl
cmp
jno
stos
push
adc
pop
js
addl
ja,pt
pop
outsl
data16
sub
stos
ds
test
mov
adc
mov
nop
dec
cli
fs
icebp
loope
mov
sbb
xor
push
cmc
dec
aad
outsb
call
mov
hlt
add
mov
repz
xlat
lret
add
adc
shlb
pop
cmpsb
or
sub
jle
fistpll
cmpsl
push
sahf
mov
or
ljmp
mov
dec
mov
push
out
stc
xchg
mov
test
add
gs
push
inc
xor
adc
data16
int
mov
cli
jne
mov
shr
jge
sub
dec
clc
shl
jmp
jle
mov
orl
stos
sbb
fsts
jb
cwtl
sbb
push
inc
mov
icebp
pop
jae
push
addr16
dec
arpl
lods
jp
adc
sub
add
xor
push
cmp
arpl
stos
in
loopne
xchg
mov
cwtl
xchg
test
icebp
xchg
pop
xlat
fiaddl
pop
stos
push
iret
adc
fxam
push
add
push
sub
jp
je
xchg
testl
mov
mov
xchg
mov
or
pushf
pop
and
fidivrl
psubb
or
push
dec
dec
dec
mov
out
add
lahf
icebp
add
mov
ret
cmp
cwtl
or
jb
inc
xor
imul
outsb
movsb
mov
insl
jge
xor
int
xchg
sub
jns
mov
or
pop
xchg
mov
jmp
insb
pusha
cmp
fwait
add
cli
mov
outsb
jno
pushf
sub
stos
xchg
or
mov
xchg
sbb
pop
shl
pop
mov
addb
rolb
mov
sbb
push
stos
popf
gs
fdivrs
jns
inc
js
mov
dec
push
inc
mov
test
psubusw
mov
mov
mov
gs
mov
in
add
fidivs
pop
mov
cmp
and
mov
lds
je
shlb
mov
inc
mov
xchg
outsl
mov
mov
lahf
inc
mov
pop
ret
jns
add
flds
cli
aaa
lret
popf
mov
dec
cmpsb
aad
aaa
outsb
cmp
jne
repz
orl
lcall
pop
dec
iret
test
push
xchg
mov
mov
icebp
jmpw
mulb
jnp
push
rorb
push
mov
sub
data16
push
xor
data16
lret
shlb
add
cmc
jns
mov
fs
lret
cli
xchg
jne
jmp
dec
ja
sbb
std
dec
les
lret
popa
or
aas
and
fmuls
xor
pop
mov
mov
xchg
mov
dec
dec
mov
repz
ss
hlt
inc
or
xchg
pop
or
dec
jge
adc
adc
dec
inc
nop
xchg
push
mov
xchg
mov
jbe
cmpsl
jle
std
mov
shl
sti
inc
lcall
shr
ffreep
lcall
testb
shlb
and
jnp
add
sahf
sbb
pop
clc
movb
inc
lds
mov
adc
int3
pop
popl
sbb
mov
dec
int
mov
aaa
mov
in
pop
mov
jecxz
xchg
test
mov
dec
stc
sub
outsb
lret
lods
adc
cmpsb
jg
addr16
popf
popa
mov
or
cmp
mov
mov
repnz
cmc
jno
jp
and
sbb
repz
xchg
dec
sub
mov
stos
lea
int3
sbb
or
inc
ss
lock
mov
pop
ss
sub
les
cmp
mov
xchg
cmc
das
and
xor
adc
fs
cmpsl
push
push
mov
repnz
dec
sub
push
fs
sub
je
xchg
adc
sub
enter
idivl
mov
cltd
adc
mov
xchg
mov
jecxz
ds
jns
inc
or
mov
lock
adc
sub
and
faddl
jb
arpl
pop
loop
cld
xor
in
and
std
daa
icebp
jmp
or
in
pop
repz
fs
insb
test
cltd
int
lock
xor
data16
inc
scas
or
leave
xor
ret
lods
pushf
aam
cld
adc
enter
cmpsl
bound
rorb
mov
cmp
mov
jns
addr16
pop
push
pop
mov
mov
mov
mov
out
jmp
lret
insb
test
icebp
mov
dec
sub
mov
loopne
mov
imul
and
mov
outsb
jnp
adc
pop
xchg
and
inc
mov
in
lret
repnz
or
mov
mov
cmp
aam
dec
jecxz
out
mov
lret
mov
das
negl
rclb
and
xorb
add
add
ds
lret
jp
inc
fnstcw
jmp
and
orps
dec
pop
xchg
pop
mov
testb
rcrl
into
push
into
ficoms
fstpt
repnz
cmpsl
pop
test
jb
je
pop
jns
and
jmp
iret
mov
push
test
jg
cmpsb
jle
scas
mov
loop
sbb
fsubl
sub
fistpl
or
sti
int3
mov
loope
icebp
cwtl
pop
enter
adc
and
pop
mov
inc
jnp
pop
stos
fwait
pop
or
mov
jecxz
mov
and
inc
sbb
or
test
or
popa
push
frstor
sub
lret
sub
mov
inc
in
aaa
xor
dec
sbb
cmp
in
adc
xor
outsl
xchg
imul
or
push
ljmp
jae
jnp
stos
nop
or
int3
ret
mov
mov
sti
push
ficompl
aaa
sahf
pop
je
into
pxor
lea
pop
dec
icebp
sahf
push
push
rolb
adc
test
sbb
pushf
repz
jne
jb
hlt
das
xchg
out
mov
push
jo
push
stos
mov
sbb
jmp
inc
sub
popf
jae
roll
fcomp
dec
popa
aaa
mov
xor
fstpl
adc
add
popa
test
add
popa
pop
mov
icebp
outsl
aas
popf
lcall
add
test
pop
leave
movsb
or
enter
loopne
cli
pop
cmpsb
pop
pop
sbb
aas
cmc
sub
ds
push
dec
movsb
cmp
pop
push
int3
lds
shl
nop
push
ds
dec
and
or
push
add
xlat
jae
cmpsl
xchg
hlt
or
inc
pop
pop
inc
scas
cmp
cmp
test
push
and
pop
popa
pop
push
xchg
jp
imul
pop
jge
stc
jp
or
adc
inc
repnz
cmp
sub
pop
adc
push
jge
xchg
jno
int
cmpsb
mov
cld
andb
sahf
popf
xchg
xchg
lret
jl
cmp
loope
and
or
cs
data16
les
out
mov
add
cwtl
paddsb
fcmovbe
sbb
adc
pop
cmpsb
push
mov
dec
jae,pn
jbe
faddl
xchg
out
adc
daa
xor
push
pop
daa
outsl
cmp
div
mov
test
sbbb
test
cmp
stc
imul
xor
xor
ret
pusha
test
mov
and
mov
add
es
mov
insl
mov
mov
or
add
and
mov
ret
mov
repnz
add
aas
cmpsl
lea
orb
ror
lock
adcl
push
lret
cld
mov
add
cmp
into
mov
call
fdivrp
daa
xchg
data16
clc
lahf
mov
jp
subb
lock
mov
or
dec
xorl
gs
push
lahf
jmp
jnp
mov
aam
jnp
and
insl
ss
loop
mov
xchg
sub
loop
popl
addr16
adc
adc
lret
inc
pop
lods
pop
cmc
call
xchg
jns
adc
outsb
xchg
addb
or
adc
mov
cmpsl
mov
adc
test
jo
inc
out
pop
lret
mov
add
sti
xchg
push
je
jp
in
xor
add
sbb
mov
clc
pop
cltd
sub
gs
inc
dec
sbb
sti
outsb
testl
pop
ret
mov
jp
sub
aam
pop
sub
xchg
fsub
jbe
mov
or
test
cmp
cmovl
adc
les
orb
push
jne
adc
test
inc
jmp
xchg
mov
leave
sub
test
cmp
lods
or
add
and
jmp
sar
push
lret
pop
ds
nop
sub
push
cmp
inc
sahf
and
insl
push
test
scas
andb
sub
cmp
jno
stos
out
icebp
int
jge
daa
mov
pop
es
xchg
push
xor
mov
push
pop
dec
add
insb
nop
add
dec
jns
cwtl
mov
in
push
sub
scas
outsb
xchg
adc
rolb
mov
scas
dec
cvtps2pi
mov
dec
fsubl
aaa
lods
adc
jns
in
add
bound
clc
push
inc
clc
hlt
stc
jecxz
and
add
movsl
das
jg
xor
insl
inc
and
jo
out
or
rcrl
dec
pop
or
nop
jg
and
xchg
popf
leave
outsl
in
jo
xor
test
inc
test
inc
sub
mov
repz
or
ljmp
mov
push
cwtl
dec
shlb
xlat
push
adc
dec
or
sub
sub
or
addl
xor
pushf
lods
out
cmp
mov
and
scas
mov
push
ret
or
mov
lock
mov
jbe
fs
popf
push
push
lock
outsl
inc
inc
push
je
out
mov
mov
jg
out
and
scas
int3
clc
ret
mov
pop
dec
pushf
sub
pop
stos
mov
fisttpll
into
popf
add
das
pop
stos
mov
icebp
mov
mov
cmp
xchg
icebp
and
sbb
cld
pop
inc
lods
out
call
ja
call
mov
and
mov
inc
inc
movsl
xor
cmp
out
iret
push
add
loopne
dec
imul
inc
inc
or
setg
sbb
mov
insl
insl
mov
adc
xor
mov
mov
mov
inc
push
ja
hlt
adc
mov
test
ret
test
mov
mov
out
or
inc
loop
test
jb
stos
add
push
pop
adc
shl
cwtl
or
std
daa
xor
subl
and
jmp
jmp
pop
adc
lods
test
mov
push
adc
into
push
out
dec
movsl
pop
stc
adc
inc
imulb
dec
stos
test
jg
mov
shll
inc
js
out
and
xchg
incb
ja
sbb
sbb
jnp
pop
int
int3
test
ja
cmp
clc
push
cmc
int3
mov
mov
subb
adc
sbb
sbb
inc
jg
pop
push
insl
cmpsl
aas
mov
push
ljmp
fsts
dec
jecxz
pop
add
loopne
aam
in
or
mov
mov
cwtl
adc
push
cwtl
add
cmc
sti
and
cli
dec
jnp
or
dec
mov
xchg
dec
sbb
mov
pop
cmp
push
lahf
and
jg
movl
data16
mov
ja
inc
adc
sub
out
dec
and
jb
dec
adc
jle
inc
cmp
shlb
stos
jmp
or
cmp
outsb
leave
lret
das
mov
imul
pop
std
inc
or
movsl
daa
xchg
add
icebp
leave
sahf
jo
and
push
bound
mov
xchg
push
pop
mov
jnp
pop
subb
pop
fstl
sub
xchg
imul
adc
and
or
mov
mov
stos
cmpsb
xor
mov
mov
sbb
ret
sbb
into
cmp
and
mov
movsl
daa
push
lods
cmp
jne
das
push
cmpsb
mov
cld
ljmp
lret
jle
cld
push
dec
loope
mov
or
pop
lcall
add
into
or
shr
dec
and
and
rol
push
or
pop
inc
xchg
fdivl
dec
lahf
out
fs
xchg
pusha
lahf
mov
add
xchg
mov
mov
jb
subb
xchg
jl
xor
into
cmp
dec
shlb
inc
test
call
push
imul
imul
loop
sub
add
push
adc
jbe
test
rolb
outsb
sbb
or
push
dec
xor
leave
inc
jae
in
sarb
mov
arpl
add
xchg
jae
inc
xor
xchg
jge
stos
xchg
mov
add
and
push
mov
xlat
and
out
cmp
adc
sbb
push
mov
xor
pop
inc
jbe
sahf
mov
insb
sub
sbb
adc
cmp
aaa
jne
and
cli
jecxz
mov
or
arpl
jg
aam
jmp
and
push
test
mov
pop
fildl
testl
cmc
in
rcll
aam
movsb
pop
adc
mov
pop
nop
dec
xchg
imul
jmp
mov
cld
sbb
fnstsw
outsb
cmp
mov
sti
sbbl
cld
mov
divb
sbb
cltd
std
jle
add
dec
loopne
imul
add
xor
dec
sbb
mov
ss
cmp
mov
jg
sbbb
dec
pop
mov
jb
dec
pop
fdivl
sahf
mov
fwait
jmp
jne
int
jne
or
push
das
mov
stc
ss
sub
dec
fists
jp
data16
hlt
fwait
mov
jnp
dec
push
cmpsb
icebp
lea
add
jno
pop
pop
or
sbb
add
cmpsl
sarl
pop
dec
cmp
inc
mov
mov
pusha
inc
lahf
loope
inc
cmp
mov
xor
xchg
xchg
inc
dec
nop
test
fucomp
xchg
sbb
fdivrs
das
sar
out
lock
pop
stos
sbb
sub
call
in
nop
adc
push
loopne
scas
inc
mov
stos
fistl
lods
loope
je
in
fcomps
pop
cmp
jb
pop
push
loop
and
arpl
mov
push
subl
dec
cmp
push
sti
sti
mov
int3
ljmp
xchg
rcll
sbb
mov
dec
outsl
push
outsl
inc
mov
rcll
mov
into
stos
leave
hlt
xchg
je
mov
in
out
jmp
setnp
bound
xchg
lds
inc
insb
mov
shr
cmp
call
repz
sbb
in
pop
lds
int3
insb
add
pusha
sbb
sub
repnz
push
mov
jp
inc
jle
movl
xor
sbb
mov
add
adc
jo
call
mov
loope
inc
dec
mov
inc
jp
dec
push
pop
mov
lcall
adc
aas
in
in
rcr
lds
sbbl
shlb
int
sar
cmp
imul
jns
jae
pushf
cmc
add
mov
xlat
in
push
or
push
fcomps
lods
push
ja
fwait
inc
mov
mov
mov
lahf
pop
mov
pop
xor
test
dec
jmp
nop
dec
imul
arpl
lods
push
cmp
ret
insb
stos
push
int3
sbb
jl
mov
ret
ljmp
xor
dec
mov
std
xor
sbb
inc
xor
cltd
sub
xor
push
xlat
xchg
out
xchg
pop
bound
jae
jmp
icebp
std
cmpsb
xor
arpl
sbb
test
jno
pop
arpl
jg
sbb
adc
or
stos
sbb
adc
das
cmp
test
lahf
movsl
lods
xor
fnsave
data16
or
inc
adc
push
ret
fimull
sub
rclb
mov
ss
adc
dec
in
add
and
inc
loop
xor
and
arpl
lock
fsubl
mov
cltd
movsb
or
insb
ds
mov
cmp
mov
pop
cmc
sbb
push
dec
mov
outsb
lds
add
mov
imul
jmp
xor
jns
aas
loop
repz
je
mov
fmuls
out
mov
adc
push
data16
sbb
gs
test
sub
cmp
shrb
cmp
aas
jge
push
ss
lods
and
repnz
jbe
mov
out
andl
push
data16
sub
sahf
push
ss
or
mov
mov
inc
jno
xchg
in
js
std
push
push
aad
push
movsl
sbb
sub
test
stos
lret
xchg
cmp
clc
les
stos
mov
ljmp
add
xchg
xchg
xchg
sbbl
add
test
loopne
loop
scas
xchg
xchg
rol
out
inc
into
sub
ficoml
push
xchg
shl
jp
dec
adc
cwtl
outsb
mov
frstor
dec
sti
mov
sub
dec
and
xor
adc
movsb
ds
adc
sub
cwtl
insb
pop
mov
ret
test
sub
outsb
test
sub
mov
xor
jne
jb
cmp
pop
addl
mov
clc
movsl
pop
pop
xchg
popf
scas
mov
data16
test
and
jo
arpl
or
fldcw
mov
dec
xchg
jb
or
fcmovnu
add
xlat
adc
push
daa
xchg
repnz
jbe
int3
adc
cmp
ds
faddp
cmp
cmp
es
jns
aad
add
icebp
out
fcoml
test
sub
fs
stc
icebp
sbbl
fcmovu
cmp
pusha
add
sub
and
push
pushf
in
ret
ds
sahf
add
mov
hlt
sbb
ds
in
mov
or
in
loopne
xorb
mov
xchg
cmp
jp
jne
sub
scas
adc
gs
cmp
push
aad
jne
and
push
xorb
jns
fcomip
outsl
pop
add
data16
mov
into
inc
in
mov
push
iret
dec
filds
push
shl
push
enter
dec
lret
cltd
jnp
fwait
in
sbbb
in
mov
stos
xor
pop
jno
mov
adc
mov
es
cs
mov
imul
inc
push
dec
adc
das
ror
repnz
mov
mov
or
pusha
and
xorl
cmp
stos
pusha
pop
xor
loopne
cmc
enter
cmc
pop
mov
test
push
je
push
add
shl
fld
addr16
jle
jmp
ret
sub
imul
jg
mov
jbe
dec
add
xchg
ret
lret
pushf
hlt
subb
fistl
iret
jge
adc
cmp
inc
or
mov
out
jl
jno
mov
cmp
xorl
xchg
pushf
mov
adc
jbe
stc
movsb
jno
push
pop
mov
and
insl
mov
jb
and
inc
mov
sbb
shrb
mov
sti
call
mov
pop
fucompp
cmpsl
in
xor
push
mov
daa
in
nop
sbb
std
bound
lret
push
xor
xchg
pop
pop
lea
popa
aaa
sahf
xchg
push
lahf
or
sub
add
test
dec
icebp
loop
and
popf
scas
lds
les
push
sub
js
push
and
out
and
xchg
mov
fdivs
ds
mov
int
xor
pop
lahf
inc
je
jg
add
mov
and
jo
mov
mov
or
das
or
or
lock
pop
lahf
scas
in
push
inc
stc
dec
push
and
fbld
shrb
cwtl
inc
fidivrs
pop
xchg
cmc
lods
sbb
jnp
jg
movsl
jle
dec
mov
jg
test
mov
shlb
add
stos
fimuls
add
loop
addr16
jmp
lods
out
pop
adc
sbb
mov
cmpsl
lock
xchg
cmp
jp
lret
cmp
sahf
cwtl
mov
sbb
outsb
mov
insl
int
dec
jmp
lods
add
jge
stos
mov
int
sbbb
movsl
fisubs
div
ljmp
xchg
sbbl
ja
lret
loope
mov
push
jae
imul
sub
test
inc
or
add
and
fistps
fdivrl
dec
mov
cmp
jecxz
lods
sbb
push
ret
pop
rorl
jne
jo
dec
aas
mov
or
cmp
pusha
dec
int
popa
je
push
fcompl
cmp
fdivr
in
mov
icebp
cmp
cwtl
xchg
push
arpl
sbb
jp
jle
inc
xor
in
jns
imul
sbb
imul
jecxz
cld
hlt
das
push
fstpl
in
xchg
jmp
xchg
sub
mov
push
stc
sbb
mov
adc
push
xchg
xchg
dec
mov
adc
call
out
jne
mul
inc
test
mov
lods
insb
or
mov
ret
xor
test
rcll
adc
cmpsl
push
jle
mov
int
in
orl
int3
mov
or
push
repz
lret
add
mov
test
sti
test
ja
adc
into
enter
mov
jle
and
sbb
orb
test
xchg
jne
dec
arpl
in
in
cmp
fadds
jae
orb
lods
xchg
mov
xor
pushf
inc
pop
push
lods
push
xor
test
mov
inc
push
mov
and
cs
xor
sub
mov
rorb
xlat
sbb
lods
rcrl
in
out
loope
pushf
pop
fcmovnu
fistpll
fiadds
fwait
lret
flds
and
and
mov
js
pop
bound
or
add
xchg
mov
insb
adcb
push
mov
mov
fistl
xor
jp
and
es
in
push
inc
imul
in
mov
mov
test
in
lret
dec
fldl
push
mov
cmpsl
ljmp
pop
jp
xchg
movsl
xchg
into
push
inc
mull
dec
pop
adc
add
loope
push
int3
xchg
jbe
test
inc
cmp
inc
xchg
int
mov
into
cmpsb
shlb
sahf
or
dec
imul
lea
pop
push
adc
lahf
notb
nop
sti
dec
fcoml
jg
sbb
popl
dec
out
add
addr16
mov
pop
dec
xchg
loopne
inc
xlat
jmp
loop
inc
imul
or
mov
call
push
ljmp
add
adc
pop
mov
scas
lods
aam
xchg
dec
shll
mov
push
shll
les
fwait
xchg
insb
lods
cmpsb
sub
sub
jnp
push
jmp
xor
mov
add
decl
movsb
stos
sbb
mov
cmp
lcall
fsubr
mov
pushl
adc
aad
lods
pushf
sbb
pop
xchg
sti
sub
aam
mov
repnz
pop
lret
add
pop
sbb
dec
cld
aaa
or
scas
xor
sub
jo
nop
mov
push
int3
or
jl
mov
push
push
and
mov
xchg
add
lahf
test
xchg
rcrl
andl
rclb
pop
push
add
les
inc
and
fildl
dec
enter
mov
test
jo
dec
cwtl
popf
cltd
mov
stos
in
mov
jne
jecxz
int3
repz
mov
pop
movsb
inc
pop
push
and
inc
mov
push
fnstcw
les
in
lock
adc
mov
jns
xchg
enter
testl
das
sub
sarb
mov
cmp
mov
add
xchg
or
xchg
out
or
lods
les
cmp
jns
int
int3
call
test
add
pop
pusha
cmp
xor
fadd
pop
mov
jmp
or
cld
dec
mov
cmp
jae
xor
das
mov
jbe
into
js
inc
xchg
subb
xor
push
push
test
aam
add
xchg
adcb
mov
test
out
adc
mov
enter
add
imul
push
shrl
mov
and
push
loope
fcomps
mov
aad
out
sub
out
and
rorl
pop
jne
out
call
lret
or
orb
mov
rol
jl
xor
flds
pop
mov
sbb
jge
and
cmp
push
xor
int3
sub
xchg
push
mov
cmc
inc
shlb
inc
out
xlat
insl
mov
cmp
fs
test
lcall
and
xor
jnp
fisubl
push
daa
mov
cwtl
push
pop
xchg
inc
xor
in
imul
xchg
sti
mov
push
out
popf
iret
and
cmp
sbb
adc
sub
jg
je
jne
inc
sub
pop
sbb
mov
jl
aaa
mov
std
popf
pop
insl
lcall
arpl
jmp
jns
add
in
sub
enter
shrb
lea
jnp
jp
outsb
cmc
or
call
les
std
adc
xor
pop
scas
dec
pop
pop
iret
icebp
bound
push
cmc
mov
xchg
out
aad
call
jge
popa
div
loope
add
stc
dec
addr16
repnz
stc
xor
add
cs
jmp
inc
push
in
push
scas
mov
cmpsl
sbb
inc
cltd
mov
add
pusha
mov
mov
aas
xlat
adc
cltd
push
dec
test
andps
sub
jno
jae
sub
push
add
push
mov
mov
mov
les
ret
lea
push
sbb
or
push
push
add
dec
leave
mov
icebp
js
js
nop
ss
pop
repz
test
pusha
nop
fwait
mov
mov
data16
aas
insb
and
out
lock
aad
fldenv
push
cmp
gs
sti
in
je
inc
and
test
rorb
pop
jp
dec
sbb
cmp
add
mov
pop
repnz
sbb
sbb
loopne
aam
dec
xchg
in
push
push
ret
dec
out
xchg
push
xchg
cmp
inc
stos
dec
push
jo
mov
mov
add
pop
imul
lods
xchg
rcrl
jne
in
jp
fildll
push
cmp
clc
fldenv
mov
jmp
lods
cmc
jg
cmpsb
push
inc
lret
xchg
xchg
push
lahf
fiaddl
into
rcl
ret
sub
fsubrl
sub
pop
popl
mov
jge
ja
dec
mov
pop
mov
mov
jecxz
aad
rcrb
rorl
jno
dec
mov
cmp
hlt
jle
add
loop
addr16
push
or
sub
outsl
out
inc
inc
pop
sub
jbe
bound
sbbl
push
in
ja
in
ds
xor
loopne
sahf
jae
fcoml
orb
fiadds
cld
xor
in
mov
xor
fwait
std
pop
mov
cmp
jp
and
int
dec
pop
imul
cmp
mov
push
movsl
sub
pop
mov
ret
inc
cwtl
mov
ja
mov
pop
pop
decb
clc
mov
push
loopne
ss
jecxz
shlb
and
push
inc
js
adc
movsb
in
inc
inc
xor
push
adc
adc
les
mov
cli
inc
loopne
dec
scas
add
sbb
into
jae
scas
orl
ret
or
mov
mov
fnstenv
outsl
add
pop
pop
ss
fisubs
jmp
aad
xchg
icebp
sbb
add
test
add
icebp
mov
or
jo
cmp
xchg
sub
fdivrs
in
xchg
lcall
xchg
add
loopne
and
pop
fldl
test
int3
shl
aas
sti
sahf
test
test
jecxz
fstl
and
sbb
sbb
jp
mov
mov
push
movsb
add
xor
sarl
add
jecxz
sbb
insl
loope
jl
testl
cmp
in
nop
xor
jecxz
mov
stos
out
stc
pop
shll
sbb
jp
xchg
pmaddwd
aaa
imul
dec
push
xchg
lds
call
movsb
push
jb
repz
lods
or
pop
pop
xor
sub
clc
test
cmp
js
dec
push
aaa
push
aam
outsl
inc
call
mov
pushf
add
repz
in
pop
mov
sti
sbb
mov
mov
popf
vfmadd231pd
and
inc
cmp
popf
jnp
inc
mov
bound
in
call
push
push
jns
test
mov
mov
sub
idivl
cmp
iret
cld
and
sbb
sub
push
inc
mov
pop
stos
cmc
aas
dec
lods
dec
lahf
gs
sub
icebp
adc
lods
imul
mov
lret
daa
leave
addr16
in
test
outsb
ds
mov
adc
mov
push
push
mov
addr16
push
in
adc
jbe
add
loope
mov
cltd
jge
movsb
mov
int
xchg
mov
push
xchg
in
in
xchg
or
xor
jb
jle
xor
mulb
outsb
xchg
push
mov
dec
cmpl
je
mov
xor
cltd
jns
repz
and
xchg
and
cmp
gs
sbb
inc
dec
inc
sub
dec
sub
fsubp
pop
adc
and
ja
xlat
xchg
push
shr
sbb
movl
or
cmp
inc
mov
lcall
or
decl
movsl
sbb
mov
and
rcl
scas
je
or
scas
sub
lret
xchg
adc
xchg
fnsave
les
fldl
hlt
mov
in
int
pop
scas
jge
imul
jp
ja
call
add
loop
int
mov
pop
mov
or
mov
jae
or
call
push
mov
sbb
shll
pusha
enter
cli
int
lret
lods
jnp
stos
sub
andb
jns
mov
gs
call
flds
and
cmp
leave
mov
repz
addl
fwait
and
mov
outsl
daa
ljmp
leave
pop
mov
add
xor
cmp
cmpsb
decb
cmp
ljmp
daa
enter
outsl
aaa
sbb
pop
mov
test
loope
mov
mov
xchg
jge
lods
mov
and
inc
leave
xlat
adc
dec
incb
cmp
sahf
jmp
out
push
pop
fsubp
xchg
pop
jmp
icebp
xchg
rclb
shrl
dec
xchg
cmp
push
pop
js
test
pop
daa
fbstp
popf
es
and
fbstp
mov
fsub
mov
dec
cmp
scas
ret
and
push
mov
xor
sbb
cmp
cmpsb
or
in
cld
iret
arpl
cmp
rorb
ret
xchg
incl
lods
xchg
loope
mov
mov
sbb
inc
icebp
int3
adc
and
incl
sub
pop
andl
add
outsb
loope
shll
fs
leave
cmp
fisubs
jle
sarl
outsb
jl
xor
xorl
mov
arpl
ficompl
jp
fists
mov
xchg
outsl
popa
pop
sti
lret
adc
sbb
mov
mov
notb
mov
sub
push
xchg
adc
jae
cmp
test
in
pop
xchg
incb
sub
jb
cmpl
and
stc
out
push
into
jne
xchg
aaa
repnz
xor
pop
dec
test
jecxz
je
sub
pushf
sbb
inc
cmp
imul
cmp
push
lret
cmp
pushf
cmp
mov
inc
jbe
add
popf
insb
push
fdivp
or
add
ror
mov
add
pop
test
addl
push
rcrl
mov
ja
jle
sbb
dec
and
jl
or
add
dec
xchg
std
or
sub
sbbl
mov
repz
ror
sbb
jne
or
jns
mov
nop
jae
int
out
xlat
adc
sti
jnp
xchg
lcall
jno
add
fstps
pop
ja
jp
inc
insb
loope
sbb
mov
push
inc
test
fsubrs
daa
adc
sub
movsb
mov
mov
jae
int3
pop
push
test
bound
push
mov
sbb
add
mov
cltd
scas
mov
sbb
pop
xchg
dec
jge
xlat
inc
inc
fidivrs
lea
cmc
mov
xor
dec
fnsave
or
xchg
push
adc
jmp
push
and
push
sub
jle
sub
dec
jb
repnz
in
lahf
cmp
leave
inc
inc
cmpsl
enter
fs
cld
cmp
inc
fcoml
popa
in
mov
pop
movsl
pushf
inc
xchg
sub
outsl
lods
dec
push
cmp
mov
inc
popa
stos
or
dec
mov
dec
test
pop
cs
stc
shrl
mov
fistl
push
jmp
pop
pop
cmp
hlt
int
push
xor
icebp
xlat
stos
stos
pop
vpdpbusds
cs
jns
das
pop
fidivrl
xor
stos
jl
sub
mov
roll
test
jne
ljmp
push
inc
jnp
cmp
hlt
pushf
jnp
aaa
push
data16
pushf
sub
fadd
dec
in
mov
adc
cmp
faddp
cmp
cltd
popa
pop
sub
mov
adc
stc
jo
lea
aam
fiaddl
cmp
inc
jne
rcll
repnz
pushf
gs
add
push
push
rep
xlat
cmpsb
aaa
orb
dec
in
adc
add
mov
mov
mov
push
fwait
inc
mov
ljmp
leave
pop
jae
or
mov
cwtl
cmp
adc
fisubl
lods
cmp
mov
int
mov
out
push
cltd
outsl
sub
mov
in
xor
cwtl
adc
aas
push
shll
push
fbld
and
inc
pop
push
mov
sbb
pop
inc
inc
cmp
jp
pop
sbb
cmpl
pop
lods
iret
enter
imul
sbb
inc
jne
mov
das
or
xchg
or
mov
test
and
mov
fsubr
ret
iret
sti
and
adc
clc
mov
mov
mov
xchg
fs
cmp
loope
mov
inc
loope
jno
cwtl
sub
inc
push
jbe
bound
pop
and
xchg
xchg
hlt
jnp
push
xchg
cs
test
cli
xor
imul
jb
fistps
sub
adc
out
mov
insb
pop
or
popf
fmuls
outsl
inc
sub
call
push
out
xor
sub
lds
xchg
test
fcmovnbe
sbb
and
cmpsb
ljmp
lock
daa
leave
mov
add
icebp
fstps
sbb
pop
arpl
lock
and
push
push
sti
test
ljmp
push
sbb
xor
and
jae
imul
test
jb
mov
cmc
fyl2x
sub
pop
pop
lock
sbb
jmp
xchg
and
rolb
xor
mov
mov
pop
ficoml
in
and
mov
dec
dec
cmpsb
hlt
mov
xor
clc
and
adc
cmp
add
stos
sbb
push
inc
pop
dec
in
insl
gs
cmp
mov
cmpb
push
orl
xor
cmp
mov
jns
xchg
outsb
xchg
sbb
notl
jle
mov
push
mov
lret
pop
outsl
add
insb
mov
mov
mov
mov
sbb
adc
movsl
repnz
cmp
repnz
mov
push
iret
and
mov
insb
jb
mov
stos
push
inc
sti
into
push
das
daa
push
int3
push
loope
jg
sub
ljmp
lds
arpl
loopne
inc
push
movsl
bound
mov
xchg
sub
out
push
cltd
pusha
cmp
adc
lods
add
dec
pop
jmp
in
mov
rcll
fildll
aas
push
cmp
mov
in
cmc
outsb
push
aad
sub
outsl
or
adc
or
xchg
enter
xor
jg
and
adc
test
outsb
push
mov
mov
sbb
mov
mov
xor
jp
add
cmp
mov
jns
jno
cmp
fsubp
out
fabs
fdivrp
jb
js
in
inc
insl
iret
or
stos
and
ror
daa
outsl
mov
sub
and
stos
les
cmp
loop
and
xor
in
aas
jecxz
into
dec
shrl
mov
movsl
out
sbbl
mov
xor
mov
enter
js
ds
push
adc
addb
out
imul
mov
rcl
rorl
les
or
data16
dec
inc
lcall
shrb
mov
enter
ret
dec
push
sbb
mov
mov
add
sub
scas
loope
loope
dec
cs
xchg
in
push
xchg
lea
sti
adc
clc
ljmp
imul
fcoms
dec
test
iret
and
imul
cltd
pusha
mov
add
sbb
arpl
jle
or
test
pop
sub
gs
sbb
les
mov
testb
inc
stos
out
cltd
jle
mov
lahf
xor
dec
pop
andb
and
or
out
xor
outsl
jg
lock
dec
in
mov
push
mov
pop
cmp
in
popa
pop
mov
sbb
das
test
inc
xor
leave
call
adcl
enter
mov
mov
je
nop
call
mov
lods
jecxz
cmp
jb
push
push
sbb
sbb
ss
mov
fdivs
cld
mov
and
cmp
cli
bswap
add
inc
lds
jnp
lcall
push
gs
cmpsl
mov
sub
xor
xchg
iret
sub
cwtl
notb
in
or
hlt
dec
out
jp
dec
jo
or
les
test
out
sub
mov
fiaddl
aaa
scas
adc
aaa
adc
cmp
adc
mov
dec
test
cmpsl
mov
pop
xchg
mov
jmp
loop
sbb
int3
mov
pop
lds
cmp
xlat
ret
imul
lea
push
jo
or
and
or
ret
lahf
pop
ja
mov
test
je
jae
lea
outsl
sbb
sub
imul
push
sarl
or
pusha
ret
aas
es
cmpb
leave
push
jp
cmpsb
push
int3
into
fldl
pop
jmp
fwait
lret
push
xchg
jmp
xchg
mov
icebp
mov
pushf
decl
imulb
pop
pushf
sbb
adc
mul
clc
jnp
adc
xchg
in
sub
sbbb
or
addr16
stos
loope
test
iret
sbb
fsubrp
dec
push
fmuls
mov
jno
mov
adcb
xor
inc
hlt
cmp
int
sbb
jne
rcll
out
stos
outsl
pop
int
in
int3
int
mov
adc
frstor
inc
push
enter
adc
add
push
enter
jg
daa
lods
pop
lea
sub
rcll
push
icebp
or
inc
add
xlat
aas
lods
mov
pop
out
push
sbb
sahf
aam
dec
and
jp
and
sbb
or
sarb
out
inc
jne
sbb
lret
imul
cmp
jl
out
testl
add
cltd
sbb
jge
insb
sub
call
mov
add
rolb
push
ljmp
xchg
insb
lret
jg
loop
xor
sbb
push
mov
orb
aad
cwtl
call
dec
push
pop
addr16
mov
call
mov
mov
jg
or
add
fildl
lret
pop
cmc
xor
loop
pop
aas
jecxz
pop
aas
and
xor
xchg
or
sub
xor
mov
lds
imul
nop
lea
test
adc
sub
fistl
aam
fiadds
xchg
push
mov
negb
lods
insl
ror
xor
in
je
mov
in
add
adc
adc
mov
decb
mov
ss
dec
xchg
call
arpl
cmc
imul
sbb
jg
push
jmp
ja
mov
push
jne
dec
push
jp
dec
lock
jle
cwtl
inc
vmread
rcrl
inc
adc
xchg
jge
std
mov
aas
sbb
sbb
icebp
imulb
stos
push
mov
fimull
jnp
dec
and
pop
mov
mul
xlat
into
mov
cmp
pop
lods
ret
add
dec
inc
rcrl
int3
fdivrs
mov
mov
mov
push
mov
jge
push
pop
loop
dec
andb
xor
mov
xchg
fldenv
mov
xor
mov
cmpsb
pop
sbb
stos
test
pop
pop
roll
or
addr16
lods
ffreep
fnstenv
or
les
and
pop
and
jae
jbe
push
lret
add
and
sahf
cwtl
outsb
out
fnstcw
ret
or
icebp
ds
inc
insb
jg
movsl
mull
xchg
mov
mov
andb
neg
repz
push
fsubrl
out
cwtl
mov
in
lahf
daa
push
lods
cmp
insl
js
add
sbb
test
test
jecxz
imul
int
push
and
dec
insb
push
sbb
insb
sbb
adc
xor
test
clc
sbb
adc
pop
mov
mov
movl
fldt
out
mov
and
adc
insl
arpl
fcmovu
xor
push
pusha
dec
jnp
cmp
and
pop
lods
xchg
pop
cmp
ret
pop
and
or
fwait
pop
inc
sub
dec
sub
xchg
lret
or
out
push
cmpsb
loopne
cmpsb
inc
push
adc
jp
lock
imul
pop
dec
xchg
mov
jmp
add
add
idivl
into
push
hlt
jbe
xchg
xchg
inc
lods
pop
sbb
fcmovne
outsl
lock
push
sbbb
add
xor
data16
mov
jno
xor
mov
insl
in
mov
movsl
inc
or
jb
mov
mov
mov
mov
pushf
dec
mov
mov
or
rolb
fstpl
int
and
push
cmpsl
jp,pt
inc
in
adc
dec
mov
mov
jb
seto
jg
pop
int3
enter
jmp
sbb
and
adc
pop
add
add
add
std
insb
js
push
ror
cld
popa
pop
jbe
ds
in
adc
cli
repnz
int
scas
cwtl
adc
pushl
adc
fs
adc
punpckhbw
pop
mov
repnz
andl
stos
sbb
pop
and
cmpsb
inc
dec
jmp
pop
xchg
outsl
bnd
ljmp
sub
jnp
mov
pop
jae
sbb
xchg
daa
jmp
arpl
scas
pushf
imul
adcb
pop
lret
xchg
dec
and
leave
out
lock
test
test
popa
jb
xor
nop
mov
aas
es
aaa
daa
jle
pushf
cmp
xchg
and
push
leave
push
aaa
inc
and
push
xorl
dec
dec
je
adc
pop
push
lahf
push
pop
adc
movsl
popf
or
mov
jno
push
sbb
sbb
and
pop
push
or
pop
mov
ja
rolb
testb
lahf
popf
mov
imul
dec
dec
xor
push
loope
push
pop
and
sar
lret
push
and
push
movsb
xor
adc
push
xor
das
or
mov
leave
add
addr16
enter
cmp
push
aad
mov
subb
xrelease
dec
mov
xchg
jp
fsubs
in
sbb
fists
lret
jle
or
rorl
ss
mov
push
jne
cltd
lret
sti
lret
push
stos
pop
int3
mov
lret
mov
jns
lock
iret
out
mov
cmp
mov
sub
lahf
inc
jno
mov
lea
add
or
ret
mov
xchg
jnp
jge
scas
cmp
push
stos
push
jg
rolb
rcrl
pop
mov
jl
sbb
sub
pop
enter
xchg
movsb
jno
jecxz
stos
into
or
mov
insl
mov
and
stc
nop
inc
cltd
mov
mov
pop
pop
fisubrs
sbb
daa
outsb
adc
in
pmaddwd
fsub
xchg
hlt
add
popf
out
call
sbb
clc
lcall
rcll
inc
stos
dec
jae
cld
push
mov
in
mull
push
jbe
pop
sub
dec
mov
in
push
sbb
shrb
jbe
mov
adc
push
repz
loopne
stos
xchg
into
pop
fdiv
clc
jl
xor
xchg
insb
pop
mov
dec
rclb
and
lret
push
outsl
out
outsb
xchg
int3
clc
das
test
pop
rolb
aaa
popa
mov
or
push
pop
mov
lret
lcall
gs
pop
inc
stc
add
xchg
rclb
in
fdiv
repnz
mov
mov
push
cmpsb
inc
jns
xor
push
cmp
cmp
mov
cli
out
test
lcall
mov
ror
fiadds
mov
lcall
mov
cmp
iret
mov
cld
insb
mov
cmc
jbe
mov
sbb
adc
in
sbb
pop
test
inc
cmp
in
lds
inc
and
imul
ss
or
sbb
xchg
gs
xor
add
jne
inc
push
xor
imul
ss
or
inc
outsl
jg
xor
cmpb
scas
and
imulb
cmpsl
sbb
adc
xchg
add
pusha
jno
hlt
xchg
adc
push
mov
inc
test
jne
lret
test
in
mov
orl
sbb
test
sbb
test
js
ret
pop
cmpsb
es
cmpsb
loopne
mov
xchg
fistl
mov
xor
xchg
push
push
inc
cmpsb
mov
aam
mov
jmp
mov
jns
xor
jno
mov
lods
ljmp
ret
movsl
pop
outsl
jge
popa
lock
lea
and
xor
mov
insl
xor
cmpsl
dec
jne
int
jmp
xchg
pushf
sbb
or
push
and
nop
outsb
mov
lahf
insb
notb
jns
nop
xor
pop
push
xchg
push
or
push
aaa
jg
sbb
lret
xchg
pop
std
ljmp
fidivrl
push
std
mov
jmp
mov
mov
mov
or
dec
roll
mov
mov
or
push
xor
adc
push
inc
jmp
pushf
je
pop
jo
andb
pop
das
push
sti
xlat
setno
cmp
popf
dec
sbb
jge
leave
jno
pop
and
or
fadd
cmc
pop
sti
pop
sub
add
pop
adc
xchg
xchg
ljmp
ja
or
pop
jns
xchg
cld
cli
push
push
inc
repnz
int
and
mov
notb
mov
repnz
out
ljmp
pop
leave
dec
xchg
loope
cld
les
adc
mov
and
cmp
xchg
psrld
mov
mov
stos
mov
test
pushf
fcomi
mov
mov
mov
mov
jl
test
or
and
ret
mov
xchg
add
adc
xchg
push
pushf
iret
xchg
pop
mov
xchg
popw
add
ret
push
or
jb
add
xor
mov
sahf
inc
insl
std
xor
scas
or
push
push
ret
xor
mov
adc
stos
inc
inc
insl
sbb
rcrl
rorb
insl
lcall
sbb
sbb
shrb
inc
adc
jecxz
cltd
fidivl
mov
das
or
arpl
outsl
adc
sahf
jp
mov
sub
jge
lods
ret
xor
jge
jne
adc
test
bound
insl
push
scas
cs
movsl
arpl
or
xor
mov
dec
mov
je
ljmp
xor
in
push
cli
stc
xchg
mov
dec
jne
in
in
xchg
sub
ss
or
and
inc
adc
in
fisubrl
and
adc
cmp
lcall
sub
pop
or
cmp
xor
jecxz
or
sub
lods
pushf
mov
add
lcall
movsb
mov
inc
mov
mov
push
xor
insl
jo
xor
cmpsb
lahf
std
add
fwait
cmp
cli
and
cmp
hlt
mov
ljmp
xor
or
aas
cmc
mov
sbb
scas
fs
jle
mov
or
lods
push
or
ja
dec
jmp
xchg
mov
insb
xchg
test
dec
inc
push
mov
fs
xchg
fwait
sbb
addr16
lret
adc
lahf
pop
push
and
push
push
or
test
push
fistpl
sarb
outsb
add
int
inc
mov
clc
inc
movsb
loopne
dec
cmpsb
lcall
imul
aam
jne
leave
aaa
in
insl
mov
ds
push
xor
or
cwtl
pop
test
out
outsb
int
sub
lea
fdivs
icebp
xchg
mov
mov
imul
sbb
push
push
test
pop
jp
sub
mov
roll
jge
jb
scas
cmp
xchg
mov
mov
push
or
rcll
fwait
cmp
mov
inc
jp
add
adc
jmp
aam
sub
sub
xchg
out
mov
push
scas
fs
cld
jb
int3
out
dec
push
nop
or
sub
push
xchg
or
mov
pop
pop
dec
in
mov
adc
in
dec
je
pop
lock
lods
mov
or
dec
sub
xchg
scas
inc
rcll
push
add
sub
mov
fwait
ret
testb
adc
pop
fwait
jae
jo
or
daa
inc
dec
stos
in
mov
popa
mov
xchg
push
hlt
jnp
jp
adc
xchg
push
jo
inc
inc
popf
out
enter
jae
leave
or
mov
adc
jno
nop
adc
sub
popa
push
inc
lods
cmp
inc
pop
out
xchg
movsb
jno
sub
dec
scas
mov
ret
pop
call
mov
mov
jnp
scas
mov
repz
loop
lds
inc
push
sub
les
or
pop
adc
rclb
mov
cmpsb
xor
aas
incb
lahf
mov
sub
pop
add
inc
jg
xchg
movsb
icebp
push
addr16
jecxz
jae
mov
sub
pop
inc
xor
sub
stos
outsb
dec
fistl
mov
sti
insb
pop
adcl
or
dec
fisubs
mov
ss
xor
fsts
insl
push
lods
ljmp
add
mov
cmpsl
mov
push
jo
xorb
cs
data16
inc
int3
out
stos
xor
fisubrl
sbb
sti
mov
cmpsb
adc
sbb
cmp
out
adc
jecxz
pop
inc
or
fcompl
xchg
cltd
int3
jae
lods
shll
in
cld
lods
notl
aas
and
repz
sub
int3
hlt
push
xchg
fsubrp
or
lcall
xchg
pusha
mov
inc
stc
or
frstor
sbb
inc
adc
lcall
scas
mov
push
dec
repz
std
rcrb
push
dec
fadds
adc
cmc
insl
loopne
sbb
out
cld
lahf
lahf
mov
add
dec
mov
xchg
or
cwtl
test
negb
orl
push
push
mov
sub
inc
mov
daa
test
adc
loopne
pop
insb
adcl
shlb
mov
jb
clc
or
aad
out
mov
mov
xchg
add
outsb
enter
int
sarb
cwtl
push
and
sbb
mov
pop
repz
adc
dec
cmp
loopne
cltd
push
add
movsl
inc
push
in
xchg
imul
push
add
lcall
jge
pop
push
adc
cmp
push
lea
jg
dec
xchg
std
dec
std
pop
scas
and
mov
adc
repnz
jle
pop
xchg
mov
sub
bound
lcall
add
cmpsl
cli
and
xchg
add
sub
and
push
negb
out
pop
insl
jo
or
push
das
clc
dec
dec
and
and
bound
pop
dec
push
xchg
xor
sti
in
cwtl
fisubs
mov
loope
or
mov
mov
gs
loope
push
scas
cltd
jge
out
leave
push
outsb
cmp
cli
sub
push
in
clc
mov
dec
pinsrw
ds
loopne
adc
sbb
repz
push
out
adc
pop
push
xor
pop
insb
pop
or
jo
pop
nop
push
call
insb
dec
jbe
pop
lea
inc
inc
inc
mov
cmp
ret
out
subl
les
xlat
lods
and
and
add
or
int3
daa
ret
repz
sbb
lods
bound
out
and
add
jae
mov
das
push
xchg
mov
sub
aam
in
inc
add
add
dec
cwtl
xlat
test
fstl
pop
fdivr
stc
ror
push
js
push
and
sbb
insb
inc
gs
inc
jno
ljmp
inc
sbb
mov
push
movsl
cmpsb
pop
mull
jno
test
fisubl
pop
inc
pextrw
movsl
sub
into
and
xchg
jno
fldl
je
in
lcall
inc
test
lds
test
subb
inc
cmp
jp
mov
dec
mov
dec
jo
aaa
scas
out
cmp
add
cmpsb
pop
arpl
scas
sbb
dec
enter
repz
push
repnz
pop
loop
pop
enter
paddusw
xchg
arpl
mov
loopne
jge
enter
test
pop
mov
cli
mov
imul
cli
mov
inc
stos
insb
jecxz
shrl
push
add
pop
int3
xor
mov
jg
fidivl
rclb
mov
in
mov
xchg
cld
xchg
cmp
mov
in
dec
cmp
adc
adc
or
pop
jns
in
ss
cmpsb
in
mov
int3
incl
add
sti
pop
stc
cmpsb
aam
ljmp
out
xor
xchg
out
pop
mov
push
add
std
or
fcmovnbe
xor
xchg
repz
cmpsl
pusha
pusha
and
jbe,pn
adc
nop
out
cmp
call
inc
jno
push
ljmp
xchg
leave
mov
fs
mov
and
push
ljmp
lret
cltd
mov
bound
cmp
and
mov
cmp
jae
sub
shll
sub
inc
ret
loopne
inc
jecxz
cmp
push
cmp
dec
sbb
and
jmp
aam
adc
add
testl
ljmp
jne
xchg
lahf
data16
fs
sbb
mov
cwtl
xchg
je
or
fcom
cld
dec
and
and
jbe
push
ss
and
add
push
and
or
fdivl
sub
fs
mov
xor
int3
add
daa
jns
mov
je
jno
and
ret
shll
cmc
outsl
iret
xchg
sbb
cmp
outsb
push
jge
daa
dec
lods
lods
stc
pop
je
test
or
lds
or
pop
mov
andb
xlat
lret
outsb
std
hlt
pop
in
movsl
or
cmp
pop
pop
in
or
jle
fsubs
das
jmp
js
adc
add
ss
and
push
ss
adc
add
push
lods
xchg
pop
push
inc
mov
adc
in
mov
rorl
fcomps
inc
xor
ret
imul
dec
mov
mov
inc
aaa
add
gs
int
lods
mov
inc
inc
test
mov
aaa
lock
dec
test
test
es
cmpb
push
and
es
insb
mov
mov
ret
test
jp
adcb
outsl
adc
rolb
sbb
iret
jne
aas
insl
pop
jno
test
add
ljmp
ss
popf
dec
repnz
outsb
jae
pop
ds
and
imul
popa
pop
push
and
jb
xchg
dec
add
dec
out
pop
jecxz
rolb
int3
pop
push
jmp
data16
movsb
insl
sub
insl
test
xorb
jns
adc
call
dec
push
hlt
add
inc
xor
add
call
push
aad
ret
popa
sub
push
mov
shll
push
sub
inc
mov
inc
out
sar
idiv
movsb
jge
cmp
mov
xor
fidivrl
test
sub
push
cmpl
lds
push
push
das
sub
xchg
add
sarb
mov
adc
testb
lds
nop
add
dec
mov
popl
hlt
mov
jbe
jnp
fbstp
xchg
aad
mov
dec
ja
push
dec
adc
sbb
mov
mov
mov
inc
sub
push
loopne
xchg
mov
dec
enter
dec
stos
sub
sar
inc
test
pushf
pop
jp
xchg
sbb
mov
mov
std
idivb
mov
clc
cld
adc
clc
addr16
test
mov
adc
ja
shl
push
inc
outsb
xor
inc
xor
xchg
fimull
fadd
lock
push
mov
sbb
xor
adc
in
pop
loope
xchg
xorl
jae
sub
cmp
cmp
pop
mov
inc
imul
push
mov
mov
and
or
fists
inc
popf
inc
sbb
jnp
add
sbbb
sbb
aad
scas
mov
and
pop
fsubl
push
aaa
mov
adc
mov
xadd
cwtl
or
push
sbb
xchg
mov
pop
mov
jmp
out
and
dec
inc
cmp
pushf
jno
and
sub
das
add
xor
lods
lods
mov
cwtl
int
scas
out
sarb
addr16
negb
mov
sbb
dec
aam
inc
xchg
lahf
xchg
mov
adc
adc
sub
jno
in
loope
sub
inc
jbe
push
test
xchg
push
sahf
repz
aaa
imul
out
mov
sbb
test
mov
leave
pusha
jg
scas
in
or
cmp
in
orl
push
out
dec
call
outsb
xchg
hlt
mov
sbb
je
add
mov
jo
lds
mov
sarl
iret
sbb
test
mov
loopne
jnp
jnp
nop
push
mov
push
adc
fstpl
hlt
int3
daa
or
cli
dec
add
iret
push
lahf
dec
popa
push
insb
cmp
push
insl
adc
out
insb
or
int3
pop
fwait
cmc
js
in
add
dec
and
cli
jge
cmp
xchg
stc
cwtl
fidivrl
in
fdivs
mov
cli
lret
sub
push
sti
mov
cmp
das
jnp
pop
lods
inc
outsl
pop
les
popf
in
shrb
jae
jmp
pop
lret
out
sub
jg
and
mov
add
mov
mov
xor
push
shlb
fs
icebp
pop
lock
ret
xchg
scas
xchg
cs
inc
push
nop
daa
mov
xchg
adc
push
fldenv
and
flds
jbe
clc
dec
cmc
stos
nop
ss
jmp
add
sbbb
bound
mov
sbb
cmp
int
xor
mov
mov
dec
out
jae
popf
mov
enter
sub
cs
enter
shlb
sbb
pop
xchg
pushf
sahf
cltd
in
les
call
cmp
movsl
cltd
jmp
cmp
data16
push
inc
ret
or
jecxz
push
inc
dec
popa
xor
mov
mov
xor
dec
sbb
inc
movsb
stos
xchg
mov
out
sub
xchg
rcrb
push
cld
cmpsb
cmpsb
push
mov
into
pop
scas
xchg
push
xor
dec
pop
inc
jno
pop
or
xor
push
aad
insb
sub
push
into
rcl
test
ss
aad
test
outsb
dec
fwait
mov
sub
jp
hlt
test
jbe
pop
std
mov
add
scas
push
repz
mov
cmp
adc
int3
out
adc
mov
lret
and
sbb
mov
mov
leave
push
icebp
cmp
lea
xchg
mov
or
test
test
les
fnsave
subb
inc
inc
inc
and
shl
js
sub
mov
pushf
lods
stc
jnp
scas
pusha
jne
xchg
mov
sarb
inc
xor
and
dec
and
jae
insl
popf
jae
dec
fisttpl
adc
mov
xor
xchg
and
negl
dec
dec
sbb
fildll
cli
stos
aaa
xor
push
add
clc
push
sbb
cmp
les
loop
mov
push
lds
push
dec
scas
pop
data16
dec
jo
cmpsl
mov
std
lock
mov
cmpsl
jmp
and
xchg
les
gs
inc
lock
out
push
lods
lock
mov
lret
and
iret
sub
in
fsubrl
mov
jnp
sbb
loope
cmp
inc
xchg
rcrl
or
sti
cmc
das
jle
bound
sub
push
out
mov
push
push
jbe
xchg
jno
adc
loop
arpl
mov
inc
cwtl
lcall
xor
sub
data16
lret
rcrl
mov
jbe
xchg
sahf
or
and
lret
mov
in
push
or
cld
test
or
fld1
lahf
jb
xchg
xchg
sub
xor
lods
xchg
das
std
lock
add
or
cli
popa
add
lock
dec
fstpl
and
mov
pop
imul
mov
cmp
pop
mov
push
or
xor
scas
sbb
push
aam
dec
inc
or
iret
or
decb
adc
aaa
std
je
movsb
xor
mov
aad
iret
cld
jecxz
inc
test
mov
push
dec
daa
jg
fs
outsb
xchg
ja
jo
testb
pop
xor
or
shrb
xor
jbe
jnp
outsb
test
pop
push
xchg
xor
ljmp
in
push
repnz
and
clc
lcall
incl
sbb
and
inc
fildll
sti
jmp
mov
mov
jg
mov
lcall
adc
inc
subl
mov
mov
pop
dec
adc
xchg
jo
das
adc
imul
dec
add
xchg
mov
es
mov
pop
sahf
and
mov
bound
jnp
xor
imul
and
fwait
add
test
pop
les
xor
adc
jnp
or
mov
test
cmpsl
shlb
stos
pop
xor
pop
lds
push
shrb
fldcw
fdivrs
add
xchg
push
and
lret
and
push
movsl
loop
or
rorl
scas
fildll
sub
mov
fninit
mov
daa
out
xchg
mov
dec
movsb
sbb
shrb
clc
dec
test
or
pop
int
add
addr16
ret
sub
cmp
aad
aas
jmp
jl
xor
lret
xchg
mov
aam
mov
sub
jbe
inc
pop
outsb
ja
mov
cmpsl
xor
andb
or
sub
add
fsubs
ror
add
dec
add
mov
enter
int
daa
pushfw
cmp
mov
je
and
cld
dec
push
mov
mov
roll
aas
fwait
sbbl
movsb
mov
lea
into
push
das
iret
xchg
sub
sub
into
xor
aas
imul
scas
cmp
mov
enter
mov
dec
mov
movsb
out
add
js
xchg
mov
je
dec
jmp
and
in
popa
sub
cltd
xchg
xchg
or
push
mov
mov
mov
cmc
sbb
insl
jl
push
xor
pop
xchg
insb
mov
dec
add
arpl
sub
inc
nop
and
push
sub
lahf
mov
push
rcl
enter
neg
lds
adc
repnz
push
iret
ja
xor
xchg
pop
popf
div
pop
pop
mov
cltd
dec
movsb
sbb
pop
jp
sti
push
mov
jae
lret
das
mov
push
mov
xchg
cmp
test
xchg
out
sub
xor
mov
jmp
andb
xor
sub
sbb
xlat
add
fldl
aad
mov
mov
test
aaa
mov
shll
sbb
imul
dec
into
enter
pop
aam
ja
cli
aad
push
sub
scas
scas
pop
jbe
mov
stc
or
loop
stos
or
pop
movsl
int3
imul
sbb
enter
cmpsb
jp
or
sbb
inc
fs
or
lcall
pop
aad
dec
mov
imul
or
into
cmc
lret
push
mov
les
notl
dec
adc
jo
or
pop
mov
mov
scas
jmp
shlb
jno
ss
inc
sbb
jmp
lret
les
lock
sub
mov
xchg
test
xchg
adc
inc
pushf
arpl
pusha
push
fnstcw
jmp
mov
xchg
inc
fstpl
dec
jl
cmpsb
in
jmp
out
cmp
lock
les
insb
add
sub
fmuls
xchg
notb
jb
xor
xchg
mov
mov
js
dec
out
or
push
outsb
in
pop
sarl
sbb
and
lret
call
les
push
hlt
imul
inc
lea
mov
in
mov
add
pop
fdivrp
notrack
jnp
sbb
std
loope
lret
xchg
aad
mov
out
inc
test
mov
cs
dec
sbb
xor
das
mov
call
inc
outsb
sbb
pusha
xlat
popa
movsb
jo
inc
pusha
scas
imul
shrl
in
or
xor
cmp
mov
nop
mov
in
pop
stc
cld
leave
arpl
mov
cmc
adc
popa
mov
pop
xlat
and
xor
adc
mov
in
enter
insl
outsl
adc
mov
xchg
add
int3
xchg
cmp
outsb
mov
push
sbbl
or
ficoms
pop
xchg
xor
icebp
imul
xor
cmp
sbb
xchg
sbb
inc
aas
push
fs
adc
mov
data16
lock
mov
add
orl
lods
das
out
dec
and
pop
out
mov
pop
sahf
sub
bound
cltd
shll
mov
inc
fstpt
pop
loop,pt
scas
ror
sbb
pop
pop
lret
daa
mov
sbb
xchg
insb
xlat
jns
lods
or
mov
xor
sub
mov
lods
push
jo
push
inc
mov
sub
arpl
cmpsl
dec
xchg
lds
mov
fs
test
testb
ds
out
addl
imul
std
call
cs
out
push
enter
jle
xchg
repz
frstor
fsubrl
scas
mov
sub
daa
leave
mov
lods
dec
test
jge
sbb
pop
sbb
aaa
xchg
imul
pop
xchg
movsl
or
nop
pop
xor
pop
jno
xchg
mov
jge
jge
adc
pop
sbb
mov
int
addl
xor
adc
xorl
mov
sbb
xchg
add
sub
and
jns
addr16
pop
mov
pusha
or
cltd
adc
or
inc
sbb
xlat
lds
ret
jge
pop
sbb
shll
cmc
pop
jmp
icebp
mov
adc
inc
subl
dec
divb
mov
fbld
shll
ljmp
cmp
shrl
orb
cmp
sub
sbb
xchg
bound
fstl
jle
pusha
movl
pop
mov
xchg
adc
add
fimull
lahf
dec
dec
cli
jbe
jle
xor
enter
sub
jmp
cmp
cwtl
popa
push
rcrl
sarl
jb
mov
and
xchg
pop
aam
fcomps
pop
stos
test
cli
std
jae
push
push
add
aad
mov
test
or
hlt
fnclex
cmp
pushf
jne
nop
scas
jbe
hlt
ficompl
lods
mov
push
mov
jp
inc
or
jne
push
sbb
xor
add
mov
hlt
fs
inc
sub
ret
cld
xchg
sub
add
cmpsb
pop
mov
mov
xchg
jmp
sbb
mov
jmp
insl
stos
or
lea
push
mov
mov
xor
add
inc
imul
mov
fwait
xor
push
sub
cmp
cmpsb
sub
stc
sbb
fs
lret
xchg
movsb
cmpsl
or
data16
sbb
xchg
dec
in
subl
add
test
cwtl
lcall
test
xchg
dec
sbbl
outsb
orb
add
fiaddl
xchg
xchg
cltd
push
sbb
adc
pop
fists
mov
in
ficompl
loop,pn
test
cltd
cmp
adcb
pop
xchg
psllq
int
ljmpw
addr16
push
lds
adc
test
mov
popa
push
or
pop
jle
pop
jne
mov
jmp
inc
aam
stos
mov
ret
mov
notl
mov
hlt
xchg
out
loop
or
xor
push
sub
dec
mov
pop
inc
push
add
xchg
adc
mov
stos
std
lret
add
out
jne
xchg
jge
dec
adc
jl
fisttps
nop
cmp
mov
imul
xchg
adc
push
sub
push
xor
pop
cmc
dec
and
data16
and
shl
int3
push
insl
xor
adc
xchg
inc
inc
pop
pop
xchg
cmpsl
cmp
cmp
cmp
push
aas
ss
mov
mov
and
sbb
xor
push
mov
enter
stos
lahf
adc
sbb
loope
loope
mov
push
push
inc
data16
shlb
push
lea
push
inc
inc
and
sarl
les
je
push
pop
pop
hlt
stc
test
andl
xchg
out
inc
mov
add
xor
repz
es
es
jle
ficoml
ja
mov
ret
subb
into
sub
adc
test
add
fldcw
push
ds
aam
and
mov
and
out
add
popa
pop
mov
mov
push
popf
enter
cmp
out
stos
sub
mov
adc
pop
stc
mov
je
nop
jmp
jnp
loope
loopne
xor
add
mov
dec
sub
pushl
add
fs
sahf
xlat
cli
jb
je
arpl
rolb
xchg
das
lahf
mov
es
push
ret
sbb
mov
cld
xor
int3
inc
fistl
in
mov
fmuls
dec
and
push
mov
inc
sarl
jbe
pop
cmc
mov
jl
idiv
test
lahf
shl
faddp
sub
call
and
pop
rcrl
cmc
pop
sarb
mov
and
dec
pushf
rcll
jo
mov
jle
cmp
inc
jae
lock
clc
test
xchg
xchg
in
fidivrs
jl
loope
loope
movsb
xchg
lahf
into
or
push
ja
jbe
sub
fdivrs
pop
inc
testl
test
scas
push
loop
andl
out
xchg
jb
pop
jno
shll
xlat
or
add
inc
sbb
add
rcl
jns
mov
js
jo
jle
das
in
push
lock
inc
add
movsb
insb
lea
adc
cld
roll
enter
jo
lret
inc
dec
shrl
jg
xor
jl
and
cld
loope
ror
push
inc
push
mov
js
adc
gs
fsts
dec
jmp
push
andl
loop
mov
out
es
inc
out
lods
mov
leave
bt
ss
sahf
xor
jp
inc
fiadds
lods
sub
sar
enter
pop
in
ja
hlt
add
imul
mov
test
or
adc
out
mov
mov
jb
push
adc
outsb
pop
mov
mov
out
leave
enter
sahf
js
mov
mov
jne
test
mov
adc
mov
imul
movsl
aaa
lds
sahf
fdivl
pop
sub
cmp
sbb
dec
and
test
mov
mov
leave
xchg
dec
xchg
aam
push
mov
xchg
cltd
daa
bound
inc
push
jge
sbb
mov
jge
popa
mov
sbb
push
pop
push
xchg
pop
push
mov
mov
push
addr16
push
jp
jns
inc
gs
sub
push
push
in
imull
sbb
jae
mov
push
adc
les
mov
or
stos
dec
sbb
push
lret
xlat
push
cmpsl
pop
add
add
sarl
fbld
dec
sub
insb
and
repnz
jno
aaa
mov
gs
popa
es
inc
pop
ret
jae
imul
in
and
fisubrl
sbb
and
ds
dec
aam
ljmp
or
ret
mov
or
mov
sti
lahf
cmp
data16
and
xchg
outsl
jmp
loope
movsb
iret
mov
push
mov
imull
in
jmp
mov
aaa
jns
mov
test
mov
notb
pop
faddl
out
call
arpl
lahf
imul
ret
test
adc
push
int
ljmp
hlt
mov
popa
ljmp
jno
pop
insb
pavgw
mov
adc
cld
les
movsbl
sub
push
jle
test
fstpt
outsl
xchg
lcall
repnz
shll
lods
or
pusha
push
push
je
aad
mov
sbb
ja
cmpsl
mov
out
mov
jo
and
mov
jle
jge
lahf
aad
bound
call
xchg
dec
xchg
jge
push
std
pop
sub
lods
and
je
xor
sub
jns
push
add
lea
sahf
and
and
inc
mov
dec
sub
mov
jecxz,pt
out
sbb
mov
push
or
or
lods
mov
or
rorl
lret
insl
pop
push
or
push
ljmp
cltd
jb
scas
ret
nop
int
imul
jno
push
inc
lock
lock
push
inc
enter
inc
jbe
adcb
cmp
ljmp
sub
jecxz
dec
imul
inc
aam
ja
stos
sbb
push
sbbl
mov
mov
ficomps
sub
mov
ljmp
inc
psllq
or
test
xor
clc
sahf
adc
dec
fsubp
mov
xchg
pop
mov
xchg
gs
bound
cs
ret
inc
cmp
dec
jl
push
pop
data16
add
mov
inc
xchg
inc
pop
addr16
push
push
cli
push
and
pop
shld
push
mov
sbb
lock
or
fmul
test
push
jp
pop
pop
mov
mov
jnp
push
and
sti
jne
orl
in
pop
jo
ficoms
lods
fstp
xchg
dec
push
sbb
test
fistps
sbb
mov
mov
sbb
pop
das
push
shlb
clc
arpl
scas
sub
lds
cmp
inc
sbb
pop
cmp
mov
add
mov
adc
adc
pop
jmp
test
cmc
or
movsl
sub
testb
add
pop
push
int3
fs
sub
icebp
pop
inc
int3
pop
dec
jg
ja
xorb
loop
test
mov
adc
cmp
and
flds
insl
in
or
decl
hlt
jno
rolb
push
rcr
sbb
insb
cmp
jle
jno
pusha
sbbl
inc
mov
out
out
mov
jl
mov
jl
lcall
xchg
addr16
or
aad
test
into
pop
ficomps
dec
jl
pop
adc
mov
into
pusha
insl
hlt
lret
or
js
fists
and
or
xchg
pop
mov
mov
rcl
adc
xor
lods
xchg
mov
data16
jns
xchg
addr16
mov
add
aas
fnstsw
insl
sbb
jae
popa
lcall
inc
rcr
bound
test
lcall
rcrb
hlt
lock
or
add
aad
fdiv
push
lods
xor
pop
jo
sub
dec
scas
push
clc
dec
mov
jno
jge
mov
dec
xchg
cld
sbb
psllq
daa
pop
iret
pop
mov
mov
cs
outsl
mov
fs
inc
push
nop
jp
jmp
sahf
je
push
mov
mov
push
sbb
outsl
rol
inc
xchg
adc
insl
call
mov
jp
mov
sub
stos
enter
cmpsb
out
cmp
mov
lcall
fld
jae
testb
pop
cmpsl
cs
xchg
subps
or
push
inc
cmp
sub
iret
hlt
in
rolb
rcl
push
int
stos
movsl
inc
outsl
int
das
and
in
adc
pop
mov
out
cwtl
cmc
xchg
mov
xchg
xchg
rorb
stc
adc
xchg
mov
push
stos
ret
xor
jbe
inc
jbe
fstps
mov
loop
fildl
pop
or
and
inc
in
adc
dec
in
pop
pop
xchg
or
xchg
sbb
sbb
adc
xor
add
inc
sbbl
and
add
and
pop
dec
mov
ret
xor
ss
mov
jno
sub
cmc
push
js
data16
cmpsl
xchg
cmpsl
xchg
jnp
nop
fisubs
mov
mov
cld
sub
mov
push
into
scas
inc
mov
jle
add
lret
iret
test
cmpsl
cltd
jne
adc
cmp
imul
stos
mov
xchg
call
xchg
and
out
and
dec
mov
mov
mov
sar
mov
jo
and
push
divl
sub
jp
mov
dec
xor
cmp
ret
mov
dec
imul
arpl
loop
push
outsl
and
adc
sbb
mov
jbe
mov
sbb
mov
mov
push
or
push
push
mov
xor
lea
aam
mov
pop
aas
pop
daa
mov
mov
mov
and
sub
jge
mov
ss
add
adc
dec
sbb
loopne
inc
pop
add
or
jne
pop
add
jno
insb
je
mov
ss
inc
mov
out
sub
push
repnz
aad
cmp
or
test
outsl
mov
jae
sbb
add
mov
jne
mov
ret
pushf
mov
fbstp
cmc
jae
popa
mov
and
and
mov
into
mov
fwait
cmpsb
iret
cmp
sub
jns
jecxz
sbb
jb
cmp
sub
mov
jg
es
xchg
dec
jecxz
adcl
xor
mov
adc
inc
xor
testb
cmp
sbb
cmp
fdivrl
std
testb
loope
xchg
icebp
stos
inc
ja
xchg
mov
test
loopne
or
in
incl
add
cs
inc
push
push
lret
mov
xchg
stc
or
ja
hlt
filds
mov
lock
xchg
sub
jne
and
xor
movb
xchg
or
lods
mov
mov
add
cld
in
mov
nop
pop
inc
mov
push
cmp
mov
or
aaa
ja
pop
add
loopne
rclb
or
inc
inc
loopne
dec
and
mov
or
inc
and
xor
jb
cmp
inc
ds
adc
mov
jl
movsb
xlat
push
xor
pop
add
add
add
pop
fnsave
ret
add
push
fmull
mov
cmc
data16
fwait
adc
data16
sub
sbb
mov
dec
jl
mov
mov
and
push
gs
dec
loop
lret
bound
orb
cmp
xchg
mov
or
out
stos
jae
movsb
add
mov
les
sbb
xchg
std
mov
adc
ret
lock
stos
out
stos
call
fdivrp
sbb
xchg
mov
hlt
in
sbb
and
mov
ret
lods
add
fldl
cmovno
test
aad
pop
in
insl
pushf
push
jnp
ret
inc
xchg
xchg
or
aam
pop
dec
mov
scas
cwtl
fbld
fistpl
cwtl
xor
fxch
and
pop
clc
ljmp
shlb
iret
mov
xor
outsl
add
imul
inc
stc
push
scas
mov
int3
dec
fistps
lods
andl
mov
fs
lods
add
rorl
jg
mov
rcl
mov
sahf
sbb
inc
push
fidivs
pop
into
ljmp
lret
and
sahf
pushf
pop
fldl
nop
lahf
push
jle
push
lods
movsl
mov
in
sub
andb
clc
or
push
and
push
repnz
out
jle
or
cs
insl
mov
mov
fistl
test
cwtl
pop
lcall
xor
adc
adc
inc
inc
pop
movsl
stc
dec
out
push
enter
xchg
or
mov
adc
xchg
xorl
orb
xor
insb
aas
pop
scas
cli
cmp
pop
xor
pop
adc
dec
push
pusha
loop
or
xchg
jmp
out
push
pop
out
mov
aaa
pop
sub
jbe
outsb
jb
dec
cmp
les
out
sbb
leave
pop
pop
imul
xchg
sub
or
imul
lret
test
aam
mov
or
and
mov
jo
in
and
idivl
jno
or
lea
test
popa
sbb
ret
gs
or
jecxz
in
sahf
inc
sti
fcomp
inc
mov
xlat
mov
add
sbb
call
fdivl
lods
insb
mov
dec
add
inc
idiv
repz
rorb
fisttpl
or
cmp
dec
in
mov
mov
pop
aad
mov
sub
mov
xor
or
fisttpl
cmpsl
xor
jnp
mov
cltd
and
sub
movl
call
mov
in
inc
push
fwait
icebp
dec
jle
mov
cmp
jnp
repz
sub
sahf
ljmp
jb
cmpl
shl
xor
arpl
inc
fstpl
mov
aam
decb
fdivl
xchg
jbe
jle
loope
jo
clc
push
jge
xchg
ss
mov
dec
and
xchg
aam
mov
xor
decl
cmp
fldl2t
add
rorl
sbb
add
dec
shll
int
mov
push
out
inc
mov
mov
mov
ret
lock
inc
fisttpl
cli
mull
jge
push
mov
add
add
add
data16
xchg
popf
in
hlt
je
mov
clc
dec
stc
int
das
mov
push
lcall
mov
or
ljmp
out
aas
pushf
sbb
inc
fdivrp
jne
push
inc
aad
pop
test
adc
les
pop
push
jg
fidivs
pop
push
pop
arpl
cmp
xor
in
cmpsl
push
addb
shrl
fcmovnu
mov
lahf
sbb
jmp
test
mov
js
push
push
jl
push
xchg
cs
cli
or
stos
in
xor
mov
cs
add
popf
and
dec
outsl
cmc
cmp
test
mov
pop
mov
push
popa
cmp
pop
orb
insb
lods
cmpsb
addr16
arpl
add
add
test
insb
leave
push
mov
int3
mov
shll
subl
ss
pop
xor
pop
addr16
fnstenv
xor
test
inc
xchg
adc
movl
xchg
call
sbb
mov
test
add
test
int3
mulb
push
roll
std
dec
pop
mov
repz
xchg
lret
inc
lds
xor
jae
mov
xchg
xchg
dec
iret
xor
cmp
jle
cmpsb
lock
inc
lahf
sub
xor
inc
inc
xchg
mov
ficoml
ja
mov
shll
xchg
adc
cmp
gs
repnz
xchg
cmpsb
daa
out
inc
fisttpl
dec
mov
std
jg
xlat
or
in
out
pushf
sbb
arpl
jb
cmp
stc
adc
ja
cmp
xchg
je
std
mov
bound
or
dec
push
insb
nop
jns
dec
out
not
hlt
cmp
aad
pop
and
cli
and
add
inc
imul
setge
out
cmc
cmp
ljmp
add
cltd
mov
xchg
or
sahf
sbb
or
fcmovnb
in
das
fimuls
sbbl
movsl
sarb
rcll
mov
fwait
mov
and
sub
push
and
ret
cmp
mov
repz
aas
es
sarl
les
mov
stc
adc
mov
push
popf
mov
ja
arpl
and
push
scas
pop
jle
out
and
adc
mov
test
repz
jne
jnp
pop
adc
test
lahf
decl
or
xchg
mov
jb
lea
insl
aad
ja
push
push
clc
mov
lock
jbe
mov
mov
ljmp
stos
repnz
sarl
rcr
xor
ss
stos
xchg
fsubs
cli
sub
inc
mov
sti
les
sub
xchg
jbe
mov
push
mov
push
and
out
lahf
xor
nop
packssdw
adc
icebp
cmp
sbb
inc
add
inc
in
bound
pop
or
scas
mov
mov
pusha
xchg
decl
xor
mov
pop
and
push
push
ret
insl
jb
xor
shlb
in
mov
mov
aam
or
mov
incl
xchg
mov
inc
add
sbb
clc
sub
xchg
loopne
lcall
inc
inc
xor
insb
add
cmpsl
std
push
cli
in
xlat
fwait
sbb
lods
mov
nop
lret
sub
and
mov
and
jns
mov
xor
cld
push
lcall
fcmovb
rcl
inc
mov
jns
popf
mov
jne
mov
ljmp
jl
stos
and
cltd
mov
iret
mov
push
insb
shll
stc
icebp
mov
or
push
or
xchg
into
pusha
dec
sub
cld
push
test
push
addr16
adc
pusha
fwait
or
loope
aad
jnp
jecxz
adc
lret
sbb
iret
movsb
cmp
lock
push
clc
hlt
and
push
mov
jae
addl
rcl
xchg
sbb
fimull
and
inc
jno
rcll
pop
outsl
pop
pop
sbb
dec
out
jbe
dec
jle
and
jns
mov
fcmovb
enter
stos
enter
test
add
push
out
mov
inc
scas
sbbl
push
adc
lret
push
call
adc
test
mov
push
pop
fs
cmp
jbe
cmpsb
cltd
sbb
in
and
repnz
xlat
jo
push
mov
jl
repnz
decb
mov
add
aaa
pop
lds
and
adc
mov
shlb
cmp
das
and
movsl
jae
popf
hlt
pop
cltd
sub
mov
test
into
push
roll
in
jmp
mov
pop
pop
push
sbb
push
daa
push
lock
ret
cmp
sbb
mov
lret
push
jno
cmpsb
ss
shlb
add
mov
jb,pn
mov
or
jg
xchg
and
pop
or
pop
inc
sub
mov
test
xchg
and
add
xor
pop
adc
hlt
in
mov
jns
gs
push
push
push
cmp
mov
loopne
or
and
lret
pop
jns
mov
adcb
xor
mov
popf
in
insb
xchg
jnp
push
and
sbb
stos
and
popl
pop
add
pop
shl
mov
es
cmc
addr16
out
push
cmp
add
scas
pop
mov
out
lahf
push
fwait
mov
andb
in
or
mov
xchg
push
push
and
mov
jae
sub
ss
push
loopne,pt
rcr
in
add
pop
into
sarb
fisubrs
xchg
mov
jmp
mov
mov
jge
jl
scas
sbb
popa
popa
or
pop
push
outsb
fwait
loop
add
mov
inc
pop
das
daa
les
dec
sbb
stos
jno
push
hlt
push
mov
std
ljmp
jnp
push
add
xchg
jl
bound
inc
ror
dec
add
popa
jmp
mov
mov
xchg
jmp
dec
aas
mov
add
xor
push
xor
sti
ret
inc
lds
repz
or
xor
or
jns
cmp
adc
and
aad
adc
jae
mov
mov
dec
repz
xlat
filds
push
mov
jne
pop
ljmp
pop
cli
cmp
fildl
or
fdivr
push
mov
cs
enter
pop
jb
aas
mov
pop
aam
xchg
push
sub
in
stos
lret
mov
mov
sbb
movsb
rorl
outsl
mov
repz
ret
test
jo
lods
pop
dec
cmp
push
xor
ss
sub
dec
pushf
jmp
adc
arpl
int3
xor
das
adc
js
sbbb
enter
sti
gs
mov
lods
pop
push
jl
mov
mov
push
aaa
or
out
dec
inc
in
lret
in
popf
add
pop
enter
stos
jb
push
clc
imul
pop
xchg
cmc
sub
ja
adcw
xchg
jmp
xlat
adc
arpl
mov
in
adc
push
and
stos
xchg
repz
inc
push
sbb
lahf
dec
inc
push
test
or
cmp
mov
push
test
iret
inc
and
stos
add
push
xchg
imul
mov
mov
scas
mov
mov
scas
sti
jno
shrb
xor
xlat
into
xchg
shrl
inc
and
cs
inc
lea
push
add
repnz
fs
mulps
xchg
cmc
or
mov
daa
into
jae
cmp
lcall
xchg
inc
ss
jo
pop
arpl
xor
js
leave
fsubrl
sub
sbb
mov
mov
mov
imul
loope
add
push
in
adc
movsl
mov
pushf
in
cmp
add
not
push
cld
sbb
push
cli
xor
js
out
aad
fldenv
inc
cmp
lcall
gs
in
mov
adc
push
pop
or
mov
ret
pop
dec
shll
out
xor
or
sub
mov
jmp
jb
add
push
adc
scas
add
mov
roll
push
lea
fs
mov
je
jecxz
mov
rcrl
sahf
and
icebp
jl
mov
jmp
pop
ljmp
cld
push
fs
hlt
movsl
sbb
xchg
adc
loop
sub
add
push
pop
sbb
cmp
pop
xchg
jecxz
daa
cmpl
stos
in
int
pop
or
pop
das
mov
fwait
and
cs
pop
jo
dec
add
mov
aas
mov
nop
shrl
add
add
repnz
pushf
pop
push
lock
push
popf
imul
les
xchg
ret
push
movsb
in
cmpsl
pop
mov
ds
lret
lahf
mov
loopne
insl
inc
popf
mov
repz
push
push
addr16
in
mov
pop
xor
mov
jge
xchg
out
dec
pop
lods
sbb
or
jb
jg
pop
fldt
push
fistps
dec
mov
test
xor
fistl
xchg
data16
lods
sub
lea
cmpsl
jge
add
test
mov
jmp
stos
js
mov
or
and
fsubl
dec
push
iret
sbb
add
imul
mov
popf
rorl
xor
pop
lds
cmpsb
push
sub
pop
pusha
xchg
jmp
imul
jmp
data16
out
push
addr16
in
cmpsb
faddl
sahf
pushf
icebp
mov
jl
mov
adc
push
test
mov
adc
push
ficoms
or
lret
sahf
cmc
sbb
jg
dec
mov
sub
pop
sbb
or
aam
adc
adc
cmc
push
loopne
ret
lods
das
push
aad
jmp
loop
insl
xchg
pop
fisttpl
inc
adc
dec
movl
dec
xchg
adc
adc
add
gs
lcall
adc
cs
fisttpll
mov
ds
cld
push
int3
out
sbb
mov
ss
shrb
pop
xor
and
mov
imul
ds
lea
adc
or
and
int
adc
lea
dec
inc
push
dec
jg
pop
cmp
jnp
lods
in
test
out
mov
pop
pushf
data16
in
xor
jge
xorb
cmp
arpl
sub
lret
or
iret
mov
fists
fs
test
andl
pop
pop
jge
pop
test
adc
ljmp
xchg
popa
sbb
sbb
sub
fidivs
dec
xchg
ds
andl
mov
iret
stc
sub
andl
mov
or
xchg
ficompl
mov
push
int3
fwait
movsb
addb
aam
cmp
mov
dec
lock
jo
fldl
orl
xchg
jbe
jg
jnp
test
pop
popl
mov
push
xchg
cmp
testl
mov
jb
cwtl
fs
xchg
inc
push
push
bound
rol
lea
shrl
addr16
test
xlat
das
ret
test
shr
ret
dec
xchg
cmpsb
mov
ja
into
sub
daa
mov
loope
pop
push
adcl
testl
movsl
clc
mov
and
adc
inc
push
dec
outsl
dec
sahf
insb
or
out
imul
mov
mov
cli
inc
cmp
std
dec
mov
lret
adc
stos
mov
jne
jmp
nop
dec
inc
push
push
cld
pop
shll
ret
push
or
insl
jno
sbb
dec
pop
enter
mov
jecxz
scas
sti
mov
int3
push
push
insb
inc
leave
sub
in
iret
pop
lcall
lods
btr
ret
pop
or
loop
fldl
in
jl
dec
inc
gs
dec
test
movsl
rol
mov
sbb
aam
fists
or
jmp
in
xor
ret
mov
add
pop
loopne
stos
rcll
xchg
jmp
dec
jnp
rol
vaddpd
gs
mov
repz
loopne
push
xchg
loop
movsl
lods
and
das
mov
jge
jecxz
lds
ljmp
sbb
aas
sbb
ret
push
mov
and
adc
pop
push
inc
loop
cmp
cmp
out
iret
cs
lret
repnz
cwtl
add
fwait
aad
pop
cmpsb
xchg
lea
scas
dec
in
jno
aaa
mov
xchg
sbb
loop
cmp
and
dec
rol
inc
jl
sub
cli
loop
add
add
inc
fs
mov
jo
in
outsb
mov
fs
mov
push
mov
inc
jle
scas
insb
and
test
mov
roll
lret
sub
cld
sbb
in
xchg
push
dec
dec
mov
and
xchg
movsb
and
add
mov
in
test
lods
mov
test
icebp
scas
mov
sbb
dec
out
push
jecxz
imul
cmpsl
mov
sub
fcmovu
cld
in
lods
xchg
push
pop
jle
rcrl
mov
xchg
xchg
mov
rol
mov
jg
xor
fcmovnbe
mov
mov
ljmp
mov
sub
outsb
mov
pop
lock
jl
loop
pop
repz
fildl
dec
stos
hlt
nop
sbb
sub
pop
aas
adc
dec
inc
and
pop
mov
sbb
dec
leave
dec
loopne
aam
dec
inc
mov
dec
rcrb
xor
enter
jge
ret
adc
stc
push
pop
outsb
fs
dec
push
aaa
fdivrl
push
daa
adc
mov
pop
popf
repnz
dec
jecxz
lods
xchg
test
cld
pop
out
inc
insb
int3
mov
inc
pop
imul
or
nop
dec
mov
or
inc
out
pop
mov
cmc
adc
jl
or
mov
push
mul
jp
aaa
les
mov
add
nop
out
inc
mov
subb
adc
cmp
adc
jmp
pop
test
test
add
loop
inc
loopne
cmp
jne
pushf
fs
movl
cmp
test
xlat
out
int3
cmp
cmpsb
xchg
dec
addr16
and
ss
adc
outsb
stos
jmp
out
icebp
cld
push
cmpl
jg
int3
push
adc
nop
ror
mov
pushf
ret
je
lcall
jo
sbb
pop
sbb
stc
cmp
lret
jne
pusha
test
sub
jne
dec
rorb
and
xor
pop
jle
sbb
leave
aaa
cli
shrl
xchg
rcrl
orb
cmp
std
loop
mov
test
or
iret
fiadds
mov
imul
mov
lods
and
in
fnstenv
or
mov
out
xchg
loopne
or
jecxz
sbb
pushf
popf
sub
mov
push
das
outsb
divl
daa
int
mov
pushf
insl
ss
mov
push
and
dec
gs
fldcw
mov
loop
arpl
mov
nop
push
dec
sub
and
cmp
and
testb
xchg
jl
movsb
mov
shlb
push
loopne
push
shlb
loope
pop
bound
data16
add
lahf
ss
fsubs
rorb
jmp
movsb
shlb
jl
jg
add
sbb
or
push
adc
sub
adc
inc
sbb
into
and
pushl
adc
add
pop
jbe
mov
or
or
stos
lret
push
sub
outsb
icebp
clc
jno
nop
adc
mov
sbb
inc
mov
nop
idiv
add
mov
mov
mov
cwtl
mov
pop
dec
fnstenv
jmp
xchg
inc
jl
leave
cmp
dec
add
mov
hlt
mov
cmpsl
jle
adc
fwait
cmp
pushl
fisttps
dec
add
cwtl
int
push
mull
jmp
clc
scas
adcl
push
scas
fcoms
pusha
mov
push
cmp
push
in
je
or
pop
sbb
bound
into
dec
add
inc
mov
jae
adc
call
int
pop
ret
and
xchg
dec
cmp
jo
jae
mov
jge
push
jmp
add
pop
sub
sahf
mov
dec
je
add
adc
lcall
sbb
arpl
xchg
out
popa
je
les
jge
xchg
mov
jb
jmp
test
push
inc
dec
push
cld
xorb
dec
rol
xor
mov
pop
pop
ljmp
scas
imul
and
pusha
dec
lret
shrl
incb
bound
imul
jno
scas
js
jbe
push
xchg
pop
cmp
call
aas
mov
repz
jae
xor
mov
push
jne
jo
push
inc
xchg
cmp
cld
add
lods
jg
in
pop
xchg
mov
sbb
test
in
sar
scas
mull
add
mov
cltd
pop
fwait
mov
clc
sti
jne
jbe
mov
and
push
xchg
adc
inc
icebp
stos
es
xchg
cs
xchg
in
cwtl
sub
xor
add
fmuls
nop
into
out
hlt
cmp
xchg
jo
push
scas
pop
nop
or
dec
push
mov
call
je
aad
sbb
pop
mov
cld
mov
push
fwait
lds
add
xor
lock
lret
daa
cmc
rcrb
cwtl
sbb
cmp
fdiv
lea
cs
jl
imul
or
mov
fisubrl
push
stc
lods
or
jle
or
mov
adc
dec
add
push
mov
xchg
lret
in
jb
out
mov
stos
mov
dec
clc
mov
mov
scas
pop
out
fwait
lea
cltd
fisubl
das
call
fisttps
xor
clc
or
sub
fbld
in
in
lock
mov
arpl
sbb
lcall
jle
mov
pop
jno
and
push
scas
pop
sub
inc
jo
ret
jmp
insl
hlt
push
cmp
fildl
inc
jno
pop
mov
into
rorl
sarb
cli
sub
in
ret
adc
popf
lods
out
sbb
test
cmc
and
cmpsb
rcrb
shrb
xchg
into
sub
in
sbbb
sub
cs
dec
gs
jno
mov
lock
add
ds
mov
aad
inc
fstpl
rorl
xor
mov
xchg
push
daa
xchg
mov
mov
mov
push
pusha
icebp
mov
lods
aas
mov
scas
and
jp
movsl
jb
outsb
add
sbb
imul
loope
xor
and
xchg
mov
int
cmp
jle
push
lcall
cmp
icebp
lcall
push
js
push
in
ss
fbstp
jg
mull
sub
test
std
jnp
push
inc
fildl
pusha
inc
dec
in
pop
call
int
cmp
lahf
dec
rcll
xchg
cmpsb
test
mov
fwait
into
outsl
lock
call
xchg
and
movsl
fbld
lcall
mov
push
ret
out
bound
hlt
jl
add
sub
repnz
out
sbb
or
je
dec
jbe
cmp
out
dec
inc
jne
out
or
pusha
ret
adc
aad
punpckhbw
imul
cs
mov
mov
cli
push
pop
xchg
das
mov
mov
mov
sbb
push
mov
test
xrelease
push
mov
jae
jne
and
imul
cmpsl
sbb
popf
ja
push
sub
push
andl
jbe
and
dec
inc
xchg
ss
fsts
out
xor
faddl
ret
shl
cmp
mov
in
inc
jecxz
movsb
mov
mov
fwait
push
pusha
shrl
xor
cmpsb
imul
inc
jle
arpl
mov
mov
mov
stos
push
js
jl
addr16
sub
rolb
xchg
push
push
inc
stc
dec
sbb
pop
fistl
js
pop
pop
jmp
scas
sub
inc
dec
and
shl
test
or
mov
jcxz
loope
cmp
inc
jae
pop
jno
js
flds
cld
mov
lret
into
scas
enter
imul
and
repz
cmp
and
inc
jmp
mov
fdivr
repnz
repz
jae
stos
in
xor
dec
pop
mov
jl
in
push
jle
test
cmpl
push
mov
or
cmp
xor
es
xchg
fbld
xor
arpl
xchg
mov
jg
and
xchg
or
mov
and
lcall
mov
fcmovb
insl
sbb
jo
addr16
mov
cmp
iret
fwait
outsb
inc
das
mov
sahf
xchg
fildl
imul
push
mov
xchg
push
icebp
aaa
shlb
les
insl
subl
mov
jge
push
mov
mov
jne
fbstp
pop
or
inc
mov
cmp
cld
or
je
push
mov
jne
iret
ret
out
leave
daa
pop
mov
jns
mov
arpl
sub
sub
pop
lret
dec
and
xorl
mov
in
mov
xlat
mov
cmc
jbe
lret
fmuls
aam
or
or
mov
das
dec
outsl
cltd
jae
outsl
push
call
push
mov
mov
scas
push
test
fldcw
push
lea
jp
cmp
mov
aaa
sub
test
mov
sub
test
ja
mov
stc
sub
loopne
int3
jno
jns
cmp
mov
imul
mov
mov
pusha
ljmp
or
mov
and
imul
int
ret
push
sbb
lods
jae
and
data16
adc
cmpsl
add
mov
xor
std
dec
aaa
ljmp
inc
or
mov
addb
outsl
lcall
mov
subb
ja
scas
icebp
fistl
jne
stos
sub
lcall
lahf
xchg
cwtl
push
push
mov
cld
cmpsl
pop
lds
stc
mov
mov
inc
shrb
jae
fsubr
adc
xchg
inc
lret
inc
imul
les
dec
nop
vmovaps
enter
pop
xchg
sub
fdivl
test
ss
roll
pop
lods
or
aas
cltd
mov
push
mov
sub
jl
mov
js
mov
fimuls
push
test
mov
pop
or
roll
lods
insb
sub
mov
inc
lock
aam
xlat
jmp
inc
adc
and
fstpl
hlt
sahf
pusha
clc
sbb
sub
mov
incb
aam
sti
cmp
imul
sbb
jno
push
cmpsb
cmp
ret
xchg
add
es
add
iret
dec
fisubrl
gs
mov
adc
loope
adc
pop
ja
mov
sbb
jg
stos
mov
jg
push
int3
dec
xor
xchg
lret
jg
call
cbtw
test
cmp
movsb
xor
push
xchg
ficomps
fs
xor
loope
pop
adcl
pushf
idiv
mov
or
fwait
and
enter
lea
cmp
mov
loop
imul
xchg
lret
pop
jne
and
jmp
jle
lods
fdiv
cmp
cmp
mov
lcall
bound
fidivl
in
mov
jge
inc
mov
in
push
repz
test
mov
fs
mov
xchg
mov
mov
xor
adc
ds
mov
cmpsb
mov
mov
push
add
test
sub
aad
cmp
jo
in
sub
sub
adc
jns
pushf
repz
out
test
das
ds
xchg
in
ja
mov
gs
cltd
out
stc
mov
rcl
jo
nop
push
pop
js
or
push
xor
push
fidivl
mov
push
and
inc
push
fidivrs
daa
mov
mov
sub
sub
rolb
dec
jb
cli
sub
fistl
loope
gs
jae
in
aaa
sarb
sbb
cltd
ljmp
pushf
cmpb
ljmp
popf
pop
jbe
ror
ficoml
jnp
ss
lods
cs
or
fmull
push
pop
cld
ret
push
rcrb
jo
mov
fs
insb
sbb
bound
add
je
xchg
cwtl
cld
scas
in
pop
mov
mov
pop
outsb
fiaddl
jae
cmp
out
sub
outsl
inc
fs
cs
or
cltd
mov
aaa
cmp
mov
push
movsb
sub
add
lret
pop
cmpl
out
dec
mov
aaa
xor
outsb
jecxz
stos
scas
xchg
nop
adc
cmp
xor
xlat
aaa
clc
loopne
ror
daa
push
xchg
push
out
cmpsb
lcall
pusha
add
in
xchg
inc
cmp
leave
aaa
mov
jmp
push
pusha
mov
popa
jo
ss
dec
lcall
nop
imul
push
js
sub
xor
pop
dec
cmpsl
cmp
jmp
fisttpll
pop
in
jno
or
cs
test
ja
ljmp
test
imul
pusha
mov
sub
cmpsb
jns
xlat
cmpsl
xchg
xchg
mov
xor
lret
push
mov
icebp
leave
jne
or
lods
subb
ret
add
imul
xchg
jne
cmpsl
and
cwtl
jecxz
dec
sub
inc
and
push
stos
rol
ljmp
js
das
cmp
jl
adc
mov
insb
in
repnz
mov
push
xchg
cld
rorb
outsl
jb
sbb
and
mov
xlat
cmp
in
je
popf
fcomps
cmp
jecxz
jno
sti
mov
cmpsl
mov
dec
xlat
mov
loopne
aaa
fistpl
jmp
sub
cli
inc
cmpsl
push
es
cld
rcl
lret
xchg
adc
dec
ret
out
inc
jb
push
loop
mov
fistl
jb
leave
clc
pop
sbb
sub
outsb
push
cs
cs
push
test
into
inc
and
cmpsl
mov
mov
push
hlt
xchg
stos
call
cmp
and
loopne
sub
mov
loope
jmp
push
mov
push
pop
sbb
jg
insb
mov
int
sbb
pop
cmp
add
xchg
fwait
stc
inc
test
inc
cli
insl
and
clc
shl
cmp
and
and
jle
pop
loopne
mov
jno
xor
xor
dec
loope
ret
aam
jle
les
xorl
scas
imul
xchg
pop
pop
and
add
pop
je
bound
pop
popf
call
cmp
mov
jbe
lret
shlb
jl
leave
adc
movsb
arpl
clc
cmp
lret
aas
adc
or
jg
enter
inc
dec
pop
movsb
ljmp
out
or
fidivrs
mov
push
aam
pushfw
and
mov
icebp
mov
lock
fcmovbe
jns
mov
push
mov
mov
movsb
xor
repnz
cld
or
arpl
sub
inc
loopne
scas
loope
lcall
setno
mov
dec
push
add
cmpsb
pop
mov
mov
repnz
imul
dec
shlb
sbb
movsb
loop
push
or
jno
dec
fldcw
pop
push
aas
ret
lds
data16
push
hlt
xor
test
movsb
scas
dec
adc
fcompl
or
stc
out
das
mov
push
pushf
in
xor
pop
insl
mov
cwtl
dec
lds
test
sub
pop
push
dec
mul
cmp
daa
xchg
fwait
or
out
out
jmp
or
insb
ss
imulb
decl
stos
jne
cli
push
insb
push
mov
out
stc
and
sub
pop
dec
jmp
jecxz
in
dec
or
pop
and
xor
inc
mov
dec
push
mov
mov
ljmp
pop
sub
adc
ret
test
mov
iret
frstor
in
cmpb
mov
push
in
sbb
add
mov
rorb
pushf
add
pop
pop
pop
out
pshufw
pop
cmp
lds
mov
adc
or
cmc
and
in
pop
adc
lret
arpl
xchg
mov
jnp
lock
xchg
push
js
jnp
xor
testl
fld
ss
push
pushf
icebp
js
push
xchg
sub
pop
sbb
arpl
aad
jae
pop
mov
jl
rorb
jo
xor
xor
in
mov
adc
cwtl
dec
jns
cmpsl
sbbb
movsb
mov
sub
dec
cs
dec
xchg
add
cmp
repnz
push
int3
xchg
pushf
lock
mov
inc
test
xor
test
pop
cmp
pop
dec
xor
shrl
pop
lock
ror
mov
jno
hlt
and
int
jge
into
das
pushl
fstpl
mov
loope
sub
mov
fwait
dec
push
jns
addl
pop
mov
aas
pop
sbb
lock
int3
xchg
xchg
xchg
movl
push
fiadds
xchg
fs
push
inc
inc
push
push
and
adc
and
xchg
fsts
cwtl
push
jae
jmp
lock
xchg
sbb
dec
repnz
loopne
ret
jecxz
je
test
and
cmpsb
or
dec
adc
stos
sub
dec
mov
mov
dec
xchg
add
cmpxchg
add
ret
fsubl
in
popl
adc
push
std
inc
cwtl
in
cmp
xor
test
mov
outsb
push
inc
pusha
jns
unpcklps
inc
push
push
lcall
xchg
daa
lea
gs
stc
stc
mov
leavew
inc
xchg
sahf
push
es
loope
imul
jge
cmpsl
push
cmpsb
mov
fimuls
sbb
orb
in
or
pop
test
pop
in
dec
insb
scas
and
int3
movsl
and
inc
jg
pop
insl
jne
repz
mov
hlt
xchg
sub
sbb
popf
data16
dec
cli
pop
mov
jp
sbb
cmp
mov
pop
mov
outsl
or
sbb
add
jg
arpl
push
jae
or
insb
add
sbb
or
outsl
int
cli
jl
push
adc
loope
std
int
insl
inc
shrd
add
cwtl
es
push
mov
or
call
cmp
mov
sbbl
mov
ljmp
or
scas
or
lock
hlt
loopne
inc
mov
push
int3
std
cmc
icebp
mov
sti
xchg
pop
cmp
clc
loope
and
stc
pop
outsb
out
inc
mov
call
xchg
fsubrl
or
sub
adc
loope
add
jge
clc
sbb
jno
ud1
fsts
popf
cli
sbb
and
popa
xchg
xchg
jl
test
add
mov
or
xchg
test
and
mov
idivl
jecxz
popf
xchg
and
pop
sbb
push
int3
dec
es
xor
sub
pop
ret
rcrl
ss
test
arpl
and
mov
mov
outsb
into
out
iret
jl
stc
lea
cmp
cmc
dec
lahf
clc
lods
pop
fsubl
mov
push
rolb
mov
xor
jno
and
movsb
data16
aad
push
jge
xchg
clc
mov
pop
sbb
out
js
aas
fdecstp
xor
sbb
scas
out
mov
lock
mov
jnp
mov
loope
fimull
lahf
mov
inc
sti
ljmp
ret
push
cmpb
jno
repz
int3
ret
pop
pop
mov
aam
insb
mov
scas
outsl
stos
pop
cmp
mov
adc
lcall
mov
pop
fsubrl
pop
lcall
jge
aad
pop
cmpsb
pop
jae
cld
dec
pop
sbb
mov
leave
dec
repz
jle
mov
repnz
sub
jecxz
popf
jp
outsl
hlt
popa
icebp
push
cmp
cmp
dec
cwtl
jno
repnz
push
jmp
mov
outsb
out
dec
pusha
ret
wbinvd
mov
mov
pop
movsl
adc
dec
mov
popf
dec
pop
cld
jb
cmpsl
stos
int
cmp
enter
push
jg
fsubs
jl
imul
cwtl
sbb
arpl
fidivrs
scas
sbb
cmp
scas
loopne
lahf
je
int3
enter
mov
and
cmpsb
jge
lods
fisubs
jle
mov
adc
pop
push
mov
cmp
pop
dec
mov
mov
movsb
lret
test
dec
out
incb
mov
mov
aad
fdivrl
mov
add
lods
jle
pushf
jge
std
sbb
xor
loope
stos
nop
adc
shl
sbb
xchg
dec
push
cmpb
cmp
push
lock
in
ja
movb
movsl
xor
pop
aam
lock
in
rcrb
into
xchg
jg
mov
pop
test
sub
popa
add
arpl
lcall
pop
push
xchg
aam
and
leave
stc
sbb
scas
jbe
adc
push
jae
xchg
jns
fisubl
jo
mov
xor
pusha
cld
inc
loopne
mov
inc
pusha
add
inc
out
fnstsw
lock
or
repz
jl
movsl
mov
inc
jle
xchg
push
push
fnstcw
iret
repz
or
lret
cwtl
popf
xchg
or
out
adc
mov
icebp
mov
call
push
pusha
jns
push
jb
cmc
jmp
cld
inc
sbb
push
mov
out
cmp
sub
sbb
imul
cld
push
test
cmp
cmc
or
push
xor
je
clc
xchg
push
xor
cs
cli
add
dec
clc
xchg
mov
xchg
pop
xchg
xor
mov
adc
dec
loop
push
jg
cmpsb
and
push
inc
dec
jmp
mov
xlat
bound
lcall
in
cmc
sub
pop
adcl
cwtl
push
push
cmp
ss
jg
addl
dec
fwait
lock
jecxz
fsubs
push
rcrb
addr16
or
push
mov
add
mov
out
in
sub
cmc
inc
adc
std
sahf
mov
sbb
dec
shrl
jne
pop
movsb
fwait
lret
add
push
pop
push
lods
out
out
lods
cltd
add
or
xchg
xchg
addr16
dec
jbe
pop
int3
pop
jne
and
mov
ss
and
xchg
mov
sub
sub
dec
push
sub
ret
leave
iret
in
pop
in
cmp
add
mov
mov
sbb
cmp
mov
dec
lret
shll
xor
in
xchg
or
dec
stos
popf
or
loope
shll
mov
test
hlt
dec
enter
repnz
adc
xor
sub
mov
test
in
outsb
shrl
xchg
push
mov
ja
mov
scas
xchg
dec
fdivs
sbb
ja
cmpsb
mov
outsb
inc
cmp
ss
pop
loopne
lea
mov
dec
xor
fwait
lock
lods
aad
mov
add
mov
mov
cld
adc
xchg
addl
packssdw
pmullw
mov
cmp
adc
aam
jmp
mov
rcr
pop
outsb
dec
mov
shll
iret
ficomps
mov
sub
pop
fnstenv
test
mov
enter
mov
cwtl
add
cwtl
pop
mov
fildl
adc
and
outsb
mov
mov
pop
inc
jbe
dec
or
jmp
ret
push
xor
test
xor
add
or
insl
loope
and
shl
cltd
jp
mov
inc
jecxz
cmpsl
jae
test
mov
sbb
jp
mov
ljmp
stos
inc
push
mov
les
dec
adc
nop
push
mov
imul
lret
mov
inc
in
mov
mov
js
mov
mov
jmp
cwtl
aad
pop
push
push
inc
orl
mov
push
imul
daa
sti
loope
or
pop
gs
out
sbb
cmp
sbb
mov
rcr
adc
rclb
push
mov
add
and
into
xor
mov
pop
inc
pop
pop
inc
push
push
inc
mov
fldt
sub
stos
push
dec
and
gs
fmul
push
jo
mov
fistpll
scas
xchg
lcall
dec
adc
fwait
push
fs
arpl
xchg
mov
stos
pusha
dec
ja
stos
mov
shlb
add
stc
iret
out
imul
sub
and
cmpsb
out
dec
mov
pop
dec
arpl
sbb
movsb
push
subb
sbb
dec
inc
mov
push
cmpsl
out
imul
and
ss
jbe
lahf
lcall
mov
movsb
inc
dec
fwait
pop
lds
in
dec
stc
mov
or
sbb
fwait
in
adc
pushl
add
xchg
stos
mov
cmp
ja
mov
ss
cmp
lret
inc
aaa
add
je
xor
loop
movsl
loope
adc
dec
cmp
cmp
xchg
inc
xchg
rcll
call
cmp
xchg
lds
insl
inc
pop
sub
and
mov
adc
popf
loope
iret
cwtl
cltd
mov
int
xchg
cmp
push
mov
push
out
xor
gs
or
pusha
mov
in
mov
sbb
pusha
lahf
mov
in
aaa
adc
rclb
loop
add
sub
scas
and
adc
inc
mov
daa
jno
inc
pop
cmpsb
push
lret
cli
out
fistl
dec
jg
nop
and
lcall
call
movsl
fwait
pop
outsb
cmp
fwait
sarb
jecxz
or
lds
ss
mov
dec
add
sbb
mov
xchg
xor
cmc
mov
xchg
jge
jae
jecxz
push
sbbl
aam
mov
fsubrp
xchg
jecxz
mov
cmp
inc
data16
xchg
repz
daa
pusha
pop
and
out
decb
add
sar
dec
addr16
mov
add
insb
adc
mov
and
sbb
add
int
adc
xor
and
mov
sub
push
clc
int
nop
dec
out
iret
fsts
mov
ret
aam
ljmp
jmp
mov
jle
pop
adc
stc
dec
xor
push
adc
and
add
lea
aaa
dec
xchg
mov
push
mov
push
push
mov
sub
xchg
jno
or
cmp
and
and
mov
jae
jg
mov
popf
and
push
sahf
mov
lahf
xchg
mov
mov
cmpsl
mov
add
stos
add
mov
xchg
arpl
faddp
outsb
xchg
or
and
test
pop
hlt
test
fst
push
sbb
mov
ja
mov
and
loop
cmp
pop
inc
mov
cwtl
sub
mov
mov
not
cs
les
clc
in
stos
fisttpl
iret
cli
mov
test
cmpsl
idivb
and
lea
mov
mov
or
push
push
leave
in
cmpsl
adc
push
inc
mov
xchg
cmp
int3
cmp
push
mov
nop
std
sub
imul
inc
leave
ret
jle
adc
adc
xorb
mov
or
loope
dec
loope
xor
stos
or
pop
pushf
dec
xchg
push
lahf
adc
aad
mov
insb
lret
ljmp
dec
sbb
nop
or
mov
movsl
push
pop
adc
or
je
xlat
adc
insb
mov
jne
popf
mov
jmp
hlt
pop
push
mov
out
jp
leave
inc
xor
bound
sahf
dec
and
or
dec
mov
lcall
cmp
push
push
cmp
cmp
inc
pushf
mov
dec
add
fs
incl
in
adc
xchg
es
xchg
and
test
pop
push
loopne
stos
insl
sti
daa
mov
fwait
dec
enter
and
ficomps
adc
sti
cmp
push
imul
cs
fimull
lods
mov
or
push
leave
push
arpl
cmp
adc
mov
cmp
adc
ss
dec
sti
out
mov
pop
mov
add
insb
and
cmpsl
pusha
pop
shrl
movsl
cltd
nop
loop
faddl
xchg
jno
stc
xchg
in
sahf
mov
xor
fimuls
adc
mov
dec
inc
adc
test
cs
or
mov
pop
test
xchg
and
and
clc
icebp
cli
sbb
cmp
inc
sahf
or
inc
outsl
jl
lods
or
aad
fisubrs
mul
and
imul
adc
push
jp
pushf
lcall
mov
mov
add
loop
inc
ljmp
fwait
pop
pop
iret
pop
aas
outsb
mov
lret
rcrl
cli
loop
ljmp
in
in
jmp
jnp
dec
pop
cmp
mov
fdivrl
je
sarl
xchg
bound
or
bound
stc
jle
ret
dec
push
push
shl
dec
inc
xor
outsl
cmp
mov
testb
mov
mov
fmull
add
pop
mov
dec
cmp
push
add
fs
mov
in
xchg
call
pop
lcall
notb
fbld
dec
inc
pushf
imul
adc
divb
pop
fwait
lahf
fldl
test
push
sub
mov
cltd
movsb
pop
rcll
bound
adc
lods
mov
shll
arpl
mov
adc
aas
imul
mov
loop
add
and
sub
jp
shll
mov
adc
sub
dec
dec
call
pop
in
adc
pop
lret
push
xlat
rolb
outsl
add
xchg
xchg
aas
fcompl
lods
adc
push
push
or
push
pop
or
sbb
add
lock
movsl
sbb
mov
sahf
sbb
mov
add
push
loop
xchg
ljmp
cmc
popf
test
jge
xchg
iret
push
and
mov
add
jmp
adcl
xchg
mov
mov
mov
or
xchg
cmp
adc
xchg
xlat
out
call
dec
xor
sub
insb
and
sub
pop
js
popf
adcl
jl
push
js
icebp
scas
push
ljmp
mov
inc
push
je
inc
pushf
les
int3
ljmp
cli
shlb
mov
pop
shrl
dec
mov
push
ret
xchg
jb
lock
sbb
loop
fwait
sub
cmp
mov
or
sub
js
lret
xchg
ret
mov
xlat
mov
bound
dec
add
repz
mov
jmp
mov
mov
dec
sarb
add
aad
push
sbb
sti
mov
aad
mov
shll
pop
dec
sbb
cmc
ficoms
stc
xchg
rcrl
mov
adc
push
ret
rolb
stos
stos
xchg
or
sub
andl
sahf
in
xchg
repnz
hlt
popa
aad
fimull
fwait
sbb
xchg
cmpsl
sbb
enter
and
lock
dec
iret
imul
or
icebp
scas
adc
mov
jbe
sbb
aad
or
xchg
xlat
pusha
cmpsl
outsb
shll
push
xlat
mov
push
andl
dec
mov
push
stc
push
aas
scas
repnz
in
insb
jmp
jg
mov
dec
es
xchg
xchg
mov
fs
in
or
in
mov
cmp
and
fisubl
adc
daa
icebp
cmc
cmp
rcll
jp
mov
mov
adc
mov
mov
outsb
enter
aad
lret
jle
jne
popa
inc
orb
or
jnp
xchg
xor
hlt
mov
or
xor
xchg
mov
pop
sbb
sbb
mov
mov
addr16
adc
in
mov
lock
sbb
dec
inc
nop
adc
xchg
sbb
ss
and
fstpt
shrl
inc
in
clc
adc
jg
mov
jnp
shlb
adc
dec
mov
jae
sti
add
fidivrl
push
les
mov
lret
mov
movnti
aaa
adc
xchg
xor
ffree
fmuls
imul
jbe
xor
in
and
inc
repnz
adc
pushf
hlt
hlt
xchg
pushf
xchg
jecxz
push
mov
std
xchg
pop
sbb
into
pop
push
insb
jp
into
dec
pop
and
arpl
jmp
fldz
out
shrb
dec
shll
adc
hlt
jp
cmp
shll
mov
nop
aad
scas
dec
int3
pop
jb
test
cmpsb
add
insl
mov
ljmp
out
xor
out
sbb
cltd
mov
jge
ljmp
das
dec
add
cmpsb
data16
or
inc
pop
lcall
xchg
pop
in
aam
fcompl
ret
inc
adc
scas
icebp
add
arpl
dec
loop
xor
test
into
fcom
mov
mov
aad
mov
xchg
cmp
pop
es
fbld
mov
jg
xor
repz
sub
push
push
and
popa
ds
popa
pop
xor
and
push
ds
fcmovnbe
push
fistl
enter
sbb
test
adc
imul
and
push
mov
dec
add
cmpsb
sub
dec
and
fwait
iret
in
mov
xor
enter
and
dec
dec
pop
xlat
mov
movsl
add
out
rorb
jno
pop
stos
ret
cmp
or
fildl
les
jecxz
pusha
push
repz
sarb
mov
jno
sbb
adc
bound
mov
lahf
ret
insb
int
test
leave
dec
xchg
movsl
ret
pop
xchg
sub
outsl
into
ret
mov
stos
lcall
rorl
out
mov
imul
mov
push
lahf
test
jb
das
inc
adc
loop
cmp
cs
mov
shlb
mov
mov
mov
pop
and
lea
push
add
jnp
jp
jp
lock
test
js
ror
aad
jae
es
outsl
lea
movd
insl
dec
adc
fildll
call
lcall
imul
xchg
pop
push
gs
daa
lock
cmc
out
sbb
loope
inc
ret
insb
fbstp
cmpsb
std
or
insl
sbb
out
push
or
loope
lock
inc
int3
and
insb
inc
mov
fiaddl
shll
rcrl
cs
adc
xchg
add
inc
mov
jl
cmc
arpl
mov
mov
flds
cli
cmp
dec
sti
sub
pop
movsb
test
mov
mov
sub
idivl
clc
and
inc
push
faddl
xor
pop
out
filds
scas
insb
outsb
cmp
popa
and
cmp
inc
movsl
rorl
int
sbbb
gs
inc
add
jns
push
pop
notl
repz
or
dec
dec
in
xchg
aas
and
lods
call
adc
push
ret
cmp
call
xlat
stos
push
mov
jmpw
out
push
inc
xchg
mov
imul
and
or
xchg
ds
cmpsl
push
push
sbb
push
hlt
in
pop
cld
mov
xor
add
fsubrs
fimull
aam
enter
test
lds
jmp
jns
lods
add
mov
sub
lahf
subb
enter
scas
cmp
and
into
cltd
out
or
fnstenv
js
das
pop
push
pop
jbe
jno
arpl
enter
out
sti
xchg
sarb
jne
lods
add
mov
and
add
fidivrs
pop
daa
pop
jns
idivl
dec
stos
sti
xlat
jl
push
int3
xor
mov
mov
inc
subb
jg
inc
sbb
dec
xchg
test
push
add
sbb
xor
les
push
cltd
cmovnp
or
rorl
clc
dec
in
out
lock
movsl
loopne
adc
mov
loopne
pusha
cmpsb
icebp
mov
xchg
pop
iret
rcll
popa
jecxz
inc
or
cmp
in
pop
lds
dec
inc
inc
insl
mov
movsl
jle
jo
je
mov
fmull
popa
pop
int
aad
mov
ja
adc
push
fisttpll
pop
jns
cld
arpl
dec
adc
sbb
lcall
xchg
cmp
out
std
xor
fsts
mov
xchg
jae
jp
icebp
mov
adc
inc
mov
sbb
mov
sahf
or
movsl
into
add
jmp
add
roll
pop
clc
jne
cmc
xchg
adc
incb
pusha
fstps
adc
cmp
cmpsb
xor
hlt
fwait
movl
imul
add
inc
push
jae
sbb
int
leave
xchg
and
mov
push
lretw
into
in
into
xor
cmp
mov
push
push
fmulp
mov
call
fnstenvs
cmp
xchg
or
sub
inc
popa
xor
shll
mov
sub
jo
enter
in
jl
popa
fisttpll
mov
cmpsl
lret
add
int3
stc
je
mov
aaa
idivl
cmp
popf
shrb
xor
jno
adc
or
cmp
xor
cmp
inc
sub
jp
jb,pn
inc
stos
ja
aam
mov
and
sahf
lds
cmp
push
add
jb
mov
shr
jae
sub
fcompl
test
int3
scas
pop
jno
xor
xor
sub
xchg
add
movsl
das
sub
inc
dec
pop
out
mov
stc
fwait
sub
out
pop
add
add
and
and
mov
xor
lods
add
push
fadds
cmp
and
sbb
sbb
jg
mov
cmp
xlat
pop
push
negb
out
adc
gs
test
aam
cwtl
fiaddl
push
in
insl
xorb
es
add
inc
push
jecxz
or
repnz
arpl
imul
mov
aaa
push
pop
xchg
push
mov
stc
xor
loop
pushf
in
out
mov
cmc
sbb
or
lret
sub
shlb
sub
mov
mov
inc
pop
pop
and
rcr
inc
cli
imul
xchg
daa
jae
inc
jb
xor
mov
sub
mov
filds
fwait
testb
push
int3
cmpl
in
inc
inc
mov
jne
aad
and
push
mov
cmc
fimull
inc
loopne
push
or
call
test
xchg
and
sub
inc
push
lods
fmuls
les
adc
shrb
lahf
mov
ds
add
and
or
mov
mov
push
lret
xor
add
mov
cwtl
dec
aad
mov
jo
inc
and
jno
push
mov
fcmovnbe
add
loop
lret
clc
in
movsl
imulb
pop
lahf
lods
cli
mov
ffree
cltd
sub
stos
fstpl
lods
shlb
in
outsb
cs
inc
fdiv
mov
stc
shrl
mov
je
int
clc
sahf
sbb
clc
push
cld
lods
mov
mov
lret
fadd
fsubrs
jl
add
add
push
mov
sahf
push
rorb
xchg
xchg
repz
ljmp
inc
sbb
adcl
cmpsb
cmc
nop
mov
pop
jns
add
dec
fcoms
test
loope
sub
sbb
jge
mov
orl
loope
jo
xor
in
xor
dec
dec
fiaddl
push
fisttps
and
or
icebp
sahf
test
test
inc
into
hlt
in
out
jle
xor
pop
ret
sar
jne
enter
cmpsl
push
pop
test
pop
cs
repz
pushf
push
cltd
pusha
lret
dec
lret
int
pushf
bound
jmp
aam
sbb
cmc
mov
movsl
jb
ret
sub
and
ds
cmp
fsub
cli
shl
jo
sbb
push
jge
mov
rcll
lock
fnstsw
mov
xchg
xchg
push
push
aad
inc
pop
mov
icebp
xchg
mov
bound
jmp
xor
jmp
test
and
ja
mov
mov
mov
push
aam
inc
sub
lods
lret
or
and
lock
xor
jecxz
aas
push
cmp
test
out
inc
je
int
mov
adc
fldt
inc
dec
mov
cmp
sbb
in
mov
lcall
lret
xchg
mov
push
hlt
mov
fs
xchg
mov
xor
lea
into
push
lret
das
push
jae
aam
adc
pusha
inc
push
pop
sbb
inc
test
js
mov
lock
sub
out
mulb
arpl
call
xchg
pop
imul
aad
and
fwait
js
rcrb
mov
outsl
and
lds
sti
iret
xchg
jg
jge
pop
pop
sahf
fadds
roll
es
sub
mov
sub
adc
or
pop
and
and
add
test
push
push
test
fsubl
inc
fwait
cmpsl
hlt
and
sub
mov
pop
mov
into
enter
mov
orb
jae
mov
mov
inc
jg
pop
scas
fistl
aas
popf
scas
adc
sub
pop
aas
sahf
and
add
mov
dec
push
pop
mov
mov
fwait
add
out
int3
pop
ja
lahf
push
cmpsl
jbe
xchg
jl
in
in
in
xchg
xor
push
xor
int3
icebp
lds
testl
orb
pop
out
mov
sub
scas
test
xchg
dec
test
test
ja
pop
lock
fcoms
and
aaa
xor
push
mov
cmc
jae
pop
leave
adc
push
hlt
lods
test
or
aad
sbb
inc
arpl
lock
and
cmovge
mov
or
in
pop
outsb
movsb
sub
aaa
jg
push
jns
mov
test
incl
mov
lret
mov
xchg
hlt
add
mov
or
outsb
adc
push
mov
xchg
push
sti
adc
cmp
jnp
pop
stos
cmp
add
mov
call
cltd
or
jmp
push
testb
icebp
xchg
fsub
outsl
jnp
je
dec
or
les
cwtl
mov
dec
stos
xchg
pop
dec
cmp
jb
in
adc
std
or
stc
pop
test
push
int
repz
rcrl
nop
push
hlt
das
lock
in
sub
push
adc
mov
push
fdivs
loope
mov
or
lret
imul
repnz
pusha
lret
sub
mov
inc
mov
pop
pusha
stos
jmp
les
out
mov
test
fdivrs
mov
cmp
sub
fsub
hlt
ret
adc
mov
sub
jb
int
pop
add
xor
out
hlt
pop
loopne
push
push
push
mov
fwait
gs
push
cld
push
icebp
sti
or
cmp
xor
push
movsb
pop
insb
adc
lods
sbb
mov
cld
and
adc
lods
dec
inc
or
mov
mov
dec
xchg
xor
gs
mull
mov
repz
sarb
mov
popf
sbb
iret
sub
or
jo
pop
sbb
clc
mov
cmpsb
sub
lcall
stc
stc
pop
jne
scas
dec
clc
xchg
mov
sbb
mov
inc
mov
ficomps
xchg
mov
aam
mov
adc
or
add
mov
ror
ret
push
adc
iret
add
sub
or
lret
test
xchg
jne
js
lods
add
ss
push
fmull
push
jne
or
xor
icebp
add
imull
inc
stos
sahf
lea
inc
jnp
xor
push
cmpb
push
add
lcall
lcall
jl
jp
repz
pusha
sarl
sub
not
pushl
sub
push
fnstcw
cmp
xchg
mov
ss
xor
cmp
add
mov
fldenv
cli
test
imul
mov
sub
into
inc
sar
nop
pop
sub
xchg
jne
jp
jbe
sbb
es
lret
cmc
cmpsb
imul
mov
addb
jmp
mov
and
xchg
sbb
mov
sarb
push
das
stc
test
aaa
andl
lea
xchg
mov
mov
in
lods
add
int
cmpsl
jb
xchg
cmp
fs
pop
sub
imul
fsubrs
aas
push
or
cmp
fisttpl
je
pop
mov
mov
mov
inc
addr16
or
add
out
dec
dec
sahf
or
mov
jge
stc
ret
sub
aam
mov
or
pop
xor
and
in
push
loop
fistps
sbb
out
pop
das
test
push
aas
or
roll
sub
push
daa
test
rorl
or
lods
cmp
mov
xchg
and
jns
push
std
mov
or
push
xor
int
hlt
xchg
addb
dec
es
mov
xchg
test
dec
fbld
adc
xrelease
inc
mov
inc
subb
test
pop
mov
dec
les
jecxz
mov
dec
cmp
sbb
loop
jp
push
jle
push
scas
or
daa
and
and
sub
movsb
iret
rep
and
inc
call
lret
aad
clc
mov
ja
add
aas
sbb
pop
push
sbb
cmpsb
mov
jp
add
sti
jno
idivl
add
pop
push
push
mov
sahf
push
lods
adc
repnz
push
insl
mov
push
mov
sub
pop
andps
xchg
jmp
mov
or
inc
pop
push
inc
push
sbb
sbb
cwtl
aaa
push
pushw
xor
dec
push
fwait
pop
cmpsb
mov
adc
mov
lcall
rolb
rep
sti
mov
jmp
or
mov
dec
push
jle
xchg
gs
test
push
jmp
aad
or
jecxz
mov
cmpl
inc
push
aam
stos
daa
testb
mov
loop
xor
and
mov
push
dec
lret
push
inc
enter
push
adc
or
pop
sahf
sbb
cmc
mov
jmp
dec
mov
jmp
lret
jmp
push
mov
test
sbb
inc
inc
pop
adc
test
scas
pop
hlt
jge
inc
sbb
pop
ljmp
mov
pushf
jae
or
push
xor
dec
sbbl
push
cli
test
out
inc
pop
fmuls
arpl
jmp
xor
movsl
mov
daa
cmc
inc
mov
repnz
es
aaa
mov
mov
repnz
mov
test
pop
test
jg
inc
push
and
test
or
xchg
das
and
mov
mov
sbb
loop
pop
js
mov
cmp
outsb
repz
or
jp
into
gs
idivb
test
xchg
in
jge
mov
in
jae
sub
inc
fstpl
in
xchg
xor
mov
fcomi
iret
aad
rorb
ficoms
inc
mov
dec
push
sub
movl
sub
fmull
jae
jb
mov
xchg
mov
fcoms
fistps
or
sub
pop
dec
jl
fdivrl
outsl
movsl
mov
cmp
mov
inc
out
push
push
dec
dec
sbb
push
ljmp
sub
ja
scas
push
adc
cmp
sbb
xchg
mov
call
dec
push
sbb
arpl
pop
or
push
ja
lds
fisttpll
sub
popf
push
and
cmpsl
sub
outsl
add
xlat
cmp
js
cmp
push
sub
mov
cmp
pusha
pop
into
aaa
cmc
adc
in
push
mov
xor
or
out
cmc
adc
mov
outsl
xchg
xor
orb
fsubr
dec
xchg
dec
fs
aaa
mov
sbb
cmp
pop
sbb
mov
shl
and
lret
sbb
movsb
scas
sub
es
loope
ds
hlt
cmpsb
lock
lea
int3
xchg
xchg
roll
dec
or
aas
jmp
mov
insl
mov
mov
add
lods
dec
lcall
imul
lods
dec
push
sub
sub
push
jle
jmp
push
out
or
cwtl
ja
out
mov
roll
shll
push
scas
inc
mov
pop
js
test
dec
push
pop
leave
orl
xchg
mov
mov
fbstp
shll
stc
mov
inc
dec
and
and
xchg
imul
and
scas
or
dec
es
sub
jo
mov
xor
iret
gs
cmp
addr16
dec
inc
xchg
orb
scas
adc
nop
cmp
ret
repnz
adc
mov
inc
bound
stos
and
xlat
icebp
les
jne
pop
mov
cmpxchg
sbbl
push
push
jge
cltd
cmp
adc
ljmp
xchg
adc
mov
jae
push
mov
mov
pop
nop
movsb
clc
cld
call
xchg
insb
sub
push
fistps
rolb
xor
insl
rcr
mov
out
push
mov
cmp
sbb
lds
push
faddl
mov
add
pop
jle
test
dec
xchg
out
int3
sahf
jecxz
lods
jg
pusha
lahf
or
mov
push
testb
push
ds
nop
jne
dec
lret
push
fcom
mov
cmp
push
ficoml
mov
or
imul
mov
into
adc
bound
cmp
jae
xor
xchg
and
mov
repz
mov
cmp
xorl
push
andb
pushf
insb
push
clc
int3
sub
dec
mov
es
jmp
jmp
push
mov
mov
clc
add
ss
fwait
mov
or
in
xor
xchg
push
inc
stos
xor
lods
cmp
test
into
jle
sbb
movsl
nop
sub
xor
xchg
jg
ficoms
aaa
xor
pop
sbb
aad
lea
insl
ljmp
jo
sbb
cmp
sub
andb
mov
mov
xchg
mul
lret
clc
push
xchg
rcrl
test
gs
push
pop
int3
mov
shll
call
cmpsl
test
mov
fists
mov
sub
dec
out
in
sub
pop
in
scas
repz
scas
out
inc
scas
les
sbb
mov
sarb
iret
arpl
inc
lods
fwait
jg
sub
stos
pop
push
and
cmp
rcll
inc
or
sbb
or
pop
lods
incl
data16
pop
std
cmp
inc
add
mov
addr16
xchg
mov
add
enter
push
lret
pop
or
sar
push
xlat
mov
mov
fsubp
out
push
ja
arpl
ficoml
sarb
dec
adc
jno
xchg
popa
cmp
push
xchg
xchg
sarl
pop
mov
aas
lds
cli
xchg
xchg
mov
ds
pop
xchg
pushf
mov
les
or
adc
push
xchg
cld
inc
jb
push
xor
or
push
jno
mov
ret
mov
adc
imul
xchg
mov
push
lea
imul
insb
jo
xor
adc
scas
or
fnsave
and
stos
sub
imul
cmp
test
mov
sub
cli
insb
push
cmpsb
fcomp
test
jno
mov
sarl
shl
inc
movsb
fnstenv
imul
fwait
test
jle
loope
pop
mov
xor
xor
outsb
int
in
in
repnz
or
jns
mov
cmp
jg
divb
xchg
dec
out
xchg
xchg
mov
mov
ljmp
outsb
out
or
inc
scas
jns
and
sbb
sahf
pop
push
add
stos
mov
and
pushl
push
mov
xor
cld
in
jns
mov
loopne
ror
inc
icebp
cld
shl
stc
ja
mov
cli
add
cmpsb
jg
mov
mov
jmp
cmp
sbb
mov
and
lods
movsb
jns
call
shlb
sbb
sahf
repnz
xchg
push
fidivrs
addr16
test
repz
xchg
add
sti
dec
data16
sbb
fwait
enter
test
sbb
hlt
fstl
scas
imul
mov
pop
pop
fwait
rcl
adc
lods
pop
in
lods
jle
arpl
pop
addl
push
xor
pop
xchg
mov
ret
cmp
loopne
test
in
cmp
popa
rclb
imul
mov
xlat
int3
hlt
ljmp
in
push
inc
or
inc
xchg
imul
aad
or
sar
shlb
lods
cmp
cli
fldt
sub
cld
das
test
or
cmpsl
stc
or
jns
out
mov
nop
xor
inc
mov
and
dec
or
push
mov
push
xchg
pusha
jle
inc
mov
frstor
pop
out
popf
sbb
mov
inc
outsl
hlt
cltd
lea
mov
xchg
lahf
insl
inc
ret
jl,pt
mov
in
add
xor
jne
jl
ss
add
dec
inc
cmp
enter
movsb
sbb
cltd
inc
ret
aas
jle
adc
mov
addl
incl
jmp
jnp
sbb
incl
push
sub
adc
inc
and
push
hlt
nop
jne
jl
xchg
iret
push
repnz
ret
and
packsswb
push
adc
ret
or
jle
cwtl
or
mov
or
sarb
iret
nop
cmp
lahf
jmp
cwtl
add
and
sub
pop
jo
and
mov
popf
cmpsb
call
fwait
shll
push
adc
test
xlat
pop
pop
cmp
insl
int3
lods
lret
pop
imul
fstpt
pop
sbb
dec
nop
add
idivl
sub
jecxz
test
sub
mov
push
shl
sub
imul
jns
xor
pusha
dec
dec
das
les
hlt
xor
or
test
xchg
add
ja
mov
xor
loop
fs
clc
mov
into
mov
jae
pop
xor
and
xor
sbb
jl
repnz
sub
xchg
es
jl
test
sub
fcmovnu
xor
and
iret
outsl
lock
mov
sbb
jnp
adc
and
push
pop
and
xor
bound
sbb
into
repnz
cli
es
xorl
adc
dec
ret
stos
dec
xor
mov
movsb
call
sub
andl
mov
addb
sahf
jno
and
js
dec
xor
fdivs
fwait
js
jecxz
std
outsb
adc
add
mov
sbb
push
pop
aam
in
inc
andb
pop
or
add
xor
mov
sbb
xlat
or
fsubr
jnp
sub
in
push
loope
or
xchg
xor
xchg
ds
pusha
lahf
cwtl
js
orl
push
jnp
lock
sbb
repnz
loope
stc
mov
out
fs
icebp
insl
dec
add
add
fsubr
js
lods
pop
lret
inc
mov
dec
xorb
fisubrs
push
cmp
in
ret
clc
xor
xchg
divb
push
mov
xchg
push
test
jae
mov
ja
sbb
push
push
dec
sbb
test
dec
out
pop
in
add
fcmovnb
aam
js
scas
adc
cmp
ret
lret
or
jne
push
pop
jo
addl
mov
add
insb
enter
cmpl
jno
inc
mov
or
mov
xchg
dec
jmp
jne
bound
cmp
bound
dec
push
jo
arpl
sub
dec
cltd
leave
int3
inc
and
dec
xor
scas
ljmp
mov
mov
push
mov
pop
shr
leave
mov
fwait
enter
cmp
fstpl
cmpsb
ror
movsb
jns
adc
cmp
and
fiaddl
dec
pop
lods
cmpsb
xor
mov
inc
out
sbb
lea
stos
dec
jae
mov
push
sahf
xor
sub
or
jg
outsl
cmp
jp
push
outsb
pop
enter
sub
adc
inc
xchg
addr16
pop
js
dec
in
xor
popa
push
jno
jl
bnd
cmpsb
arpl
pusha
sub
outsb
outsb
daa
fbld
mov
mov
fdivr
inc
xchg
fnstcw
inc
sub
ds
aad
mov
mov
pop
and
pop
dec
negl
fistl
and
cmp
scas
jecxz
rcl
pop
cmp
pusha
push
mov
das
pop
adc
les
arpl
jne
xchg
or
das
neg
fmul
std
je,pt
lock
jo
jne
jg
jmp
mov
hlt
inc
adc
ret
jnp
or
dec
mov
dec
es
and
cs
push
scas
outsl
out
jmp
xor
rcl
insl
jle
nop
das
rcrl
mov
push
add
mov
and
popf
lds
sbb
pop
jecxz
add
es
mov
cpuid
adc
imul
dec
mov
sub
sub
mov
shll
push
push
rorl
pusha
fdivrl
sub
jns
inc
mov
inc
int
add
ja
enter
push
mov
sub
and
out
xor
loopne
jns
xor
fisubrs
test
pop
cltd
mov
inc
mov
inc
push
ret
sub
outsl
fisubrl
add
into
add
ret
ss
add
imul
iret
jmp
scas
mov
lea
jno
push
sahf
jo
pop
push
dec
add
lcall
jnp
mov
sbb
mov
jmp
in
xchg
sub
xchg
push
dec
inc
popa
das
adcb
cmp
lret
sbb
xchg
stc
lds
jnp
outsb
inc
pop
pop
lea
in
test
in
mov
cmp
ret
js
dec
fdivr
and
or
jle
or
loope
cmc
add
or
xchg
outsb
sbb
sub
lret
out
adc
xlat
mov
push
push
cmp
add
and
pop
iret
sub
jns
pop
mov
fiadds
rorb
push
push
adc
dec
mov
mov
in
das
sub
push
out
adc
cs
mov
cwtl
pushl
push
cld
fstp
repz
pusha
pop
mov
cmpsb
inc
inc
scas
xor
mov
jle
inc
mov
aas
jecxz
popf
fldl2t
es
jle
jl
outsl
xchg
jo
lcall
sbb
fiadds
dec
aam
inc
loopne
lods
push
add
loop
lret
mov
repz
ja
push
dec
cwtl
filds
push
cli
cld
adc
inc
out
pop
adc
lcall
fwait
jecxz
leave
fimuls
icebp
mov
pop
ret
push
sarb
add
lahf
test
jbe
lret
and
lret
dec
fcomps
inc
popf
hlt
adc
jbe
xchg
mov
cli
mov
test
mov
out
jae
xchg
repnz
popf
mov
cmpsb
aaa
pop
inc
adc
or
in
hlt
cmova
lods
pop
push
adc
cmp
movsl
add
rclb
sub
adc
js
imul
addr16
inc
mov
testl
xchg
out
pop
jl
mov
cmp
dec
scas
cli
xchg
and
out
xor
xchg
loopne
cltd
push
xchg
mull
fstps
dec
addl
sbb
jecxz
aaa
jg
and
popa
sarb
cmpb
orb
fsubrl
das
jns
mul
xchg
outsb
lods
pop
mov
add
int
jle
dec
push
cmp
inc
xor
xlat
scas
cmpl
push
adc
push
stos
es
cmp
outsb
cmp
and
mov
fdivl
and
lret
psllq
mov
inc
dec
lahf
inc
stos
jno
pushf
aas
mov
cwtl
loopne
mov
inc
pop
lcall
inc
outsl
sbb
push
hlt
stos
xchg
push
mov
outsb
or
addr16
dec
in
sti
pop
mov
lods
sbb
shrb
sub
mov
mov
pop
rcrl
lret
cli
pusha
push
adc
daa
cmp
mov
mov
loop
out
sar
jb
popa
jecxz
pop
sti
inc
fsubs
jae
cmpsb
and
ds
test
and
aas
fdivrp
scas
inc
xor
fst
cmpsb
add
add
jne
xchg
addr16
push
and
pusha
jge
or
ss
pop
jns
test
flds
leave
cmpb
xchg
popf
loope
scas
and
test
pushl
dec
cwtl
xchg
out
xchg
dec
sbb
nop
aaa
inc
xchg
mov
dec
sbbb
or
inc
sbb
dec
xchg
mov
les
lcall
push
popf
push
sbb
jp
add
jl
addb
scas
dec
cs
gs
test
pop
push
mov
fcompl
ror
add
mov
xchg
sarb
ljmp
pop
or
pop
or
xor
jmp
dec
xor
xchg
sub
movsb
mov
and
pop
filds
or
or
inc
out
lret
test
jle
mov
neg
sub
jp
aas
jne
xchg
mov
push
adc
sbb
ja
icebp
fs
cmp
out
aas
pop
inc
adc
jp
mul
pop
call
or
dec
shll
aad
mov
cmp
aas
addr16
pushf
rcll
js
lods
out
or
lods
push
test
stos
orb
cltd
outsl
jecxz
and
int
fisubs
and
aas
hlt
pop
push
bound
dec
popf
pop
sub
popf
lods
jmp
or
je
mov
jae
push
out
icebp
xor
andl
clc
push
int3
sbb
call
dec
add
and
add
test
les
sbb
adc
inc
sbb
dec
stc
mov
pop
push
call
adc
lret
adc
sbb
mov
pop
mov
jne
cmc
out
lock
leave
inc
ljmp
jnp
jne
in
sub
repnz
add
sub
aad
sbb
out
inc
xlat
iret
aam
jnp
ja
xchg
xor
adc
cli
jne
sub
xchg
icebp
das
int3
arpl
test
cmp
fisttps
or
add
inc
sub
outsb
orl
pop
mov
push
cmp
adc
push
mov
pop
es
stos
cmp
xlat
testb
mov
pop
add
out
fsubs
bound
push
push
xchg
jne
sbb
mov
es
cmc
in
adc
sub
aam
insl
mov
push
and
testl
xchg
mov
jp
xor
mov
cmp
mov
dec
inc
ret
cmpsl
repz
movsl
or
ja
fistl
repnz
ljmp
dec
cmpb
jne
add
xor
add
shlb
movsl
xchg
cmp
push
outsl
rcrl
or
test
in
adc
dec
lret
stos
or
jecxz
stc
push
jnp
leave
out
cmpsl
adc
inc
mov
in
mov
mov
or
loop,pt
mov
sbb
movsb
jl
mov
push
jae
xor
adc
lds
xchg
stos
push
imulb
cmpb
cli
clc
mov
adc
add
add
aaa
aas
dec
in
lods
cmovae
inc
sti
fistps
and
mov
add
inc
ss
sub
shll
xor
mov
sbb
xor
out
rcll
xlat
jle
push
pop
mov
jno
sub
mov
call
stos
fstl
dec
pop
push
fcoml
jg
iret
lock
xchg
and
inc
ja
paddsb
sbb
mov
loopne
xchg
out
push
lods
stc
loope
inc
test
flds
sbb
inc
addr16
js
sbb
loop
xlat
sbb
pop
sub
mov
adc
jne
dec
or
jle
fstpl
clc
sub
ret
or
dec
ljmp
push
lods
xor
sbb
outsb
daa
sbb
jno
aam
stos
aad
mov
fs
push
xchg
sbb
fldenv
cltd
push
fmuls
xor
xor
and
mov
adc
int
out
out
bound
jp
ljmp
mov
inc
xor
popa
popf
loop
int
scas
add
adc
sub
mov
xchg
and
stc
shld
mov
push
cwtl
fimull
orl
add
std
cmp
cmp
test
cmp
out
xor
xor
and
or
aad
imul
insb
pop
or
cwtl
rcl
rorb
popf
push
lds
decb
add
cmp
xor
sbb
ja
push
lds
outsl
jcxz
sar
xchg
loop
lods
jmp
imul
bound
or
ret
leave
notb
cmp
loopne
rcl
outsb
xor
mov
xchg
fbld
jbe
dec
sbb
es
cwtl
jmp
lods
fmuls
out
mov
inc
jle
out
mov
rolb
push
pop
lea
push
stc
shlb
pop
xchg
lcall
jbe
cld
mov
inc
pop
inc
pop
jnp
pushf
xor
sbb
cmc
and
in
xchg
cmp
lcall
xchg
orb
aad
adc
adc
rolb
xchg
repz
test
in
data16
clc
and
repnz
push
sub
fwait
jl
pop
int3
jp
shl
popf
pop
jmp
adc
js
xor
pop
pop
xor
and
sub
out
fidivrs
pop
xchg
lret
mov
adcb
in
insb
mov
xor
mov
mov
push
and
inc
inc
rol
mov
scas
popf
xchg
push
movsb
pop
adc
andl
inc
cmp
aad
xlat
pop
add
cmpsl
insl
cld
outsb
mov
add
outsb
cltd
pop
mov
je
dec
shl
sbb
mov
sub
adc
inc
lock
push
shrb
aam
jb
jns
insl
cmpsb
mov
enter
js
pop
fs
sub
shlb
inc
loopne
mov
push
sti
push
mov
jecxz
lret
cmpsb
invd
inc
cmp
xor
jp
push
push
jmp
add
lea
scas
cmp
or
mov
dec
daa
popf
mov
in
adc
xchg
push
sbb
mov
stos
xor
xchg
lcall
insb
out
xchg
out
fcmovbe
aas
push
loop
je
pop
ret
inc
nop
cmp
xchg
and
cmp
or
cmpsb
jbe
add
xor
add
movzbl
cmp
add
mov
or
leave
push
xor
xchg
test
rcrl
xchg
sbb
push
js
call
adc
jl
and
pop
fbstp
push
call
mov
imul
cmp
cmp
jbe
mov
cltd
int
and
mov
jae
sub
add
pop
imul
push
dec
pop
test
iret
cmpsb
cs
dec
lahf
pop
in
sbb
out
mov
test
sti
sub
pop
enter
scas
cmc
xchg
fbld
enter
xlat
and
mov
push
nop
mov
out
xchg
pop
dec
loop
loop
daa
pop
ja
jge
cltd
js
lret
std
jne
jmp
cltd
mov
and
mov
fidivrs
ret
xor
mov
inc
jmp
mov
push
xor
xchg
orb
rcrb
cmp
stos
or
ss
nop
sbb
and
fdiv
mov
mov
push
xor
fimuls
shlb
mov
int3
out
pop
out
daa
insl
das
iret
and
cmc
in
pop
pop
push
fdivr
pop
mov
pop
out
int3
in
cmp
aas
pop
or
pop
cld
jl
mov
jns
ret
cwtl
jbe
pop
lahf
decl
or
mov
or
sbb
fsincos
lods
je
push
adc
mov
sub
inc
ljmp
lock
sbb
inc
xchg
pushf
mov
adc
outsb
xchg
test
xchg
fadd
call
push
push
cltd
sub
rcr
lds
fsubrs
aas
aad
push
insl
mov
xor
sbb
shrl
je
jecxz
ret
rclb
mov
test
pop
loopne
cmp
push
das
sbb
lret
or
scas
pop
mov
frstor
decl
or
cmp
cmpsl
out
aam
ror
cmpsl
mov
test
dec
cwtl
out
adc
je
ja
cli
sub
mov
mov
push
cmc
mov
loopne
test
addr16
fildll
scas
xchg
mov
jge
and
xlat
jg
addl
mov
sbb
test
sbb
xlat
call
push
aam
scas
mov
add
mov
sbb
sbb
mov
mov
aaa
mov
inc
sbb
add
test
sbb
cltd
push
sub
arpl
lds
push
ss
subb
inc
pop
jns
cmp
ret
adc
dec
xchg
pop
cmpsb
fstpt
sub
in
xchg
jne
std
mov
stos
dec
int
gs
mov
clc
je
mov
stos
and
movsb
out
sub
imul
mov
or
sub
insb
movsl
jecxz
je
jmp
xchg
loop
adc
push
sbb
xorb
repz
scas
mov
pop
mov
adc
out
and
lret
fstl
inc
mov
adc
ret
xchg
inc
mov
jp
mov
lcall
add
aam
or
int3
mov
push
inc
cmp
xor
and
add
fdiv
cli
rorl
mov
fnsave
sbb
push
mov
cmp
pop
shll
and
push
lret
vmovdqa
cld
push
dec
pop
add
mov
aas
xor
fwait
enter
int3
push
sub
rcrb
sbb
cli
xchg
inc
xor
ret
std
into
sarb
arpl
cmp
andb
push
movl
stc
xor
ljmp
fidivrs
sub
aad
cli
pop
jle
mov
mov
mov
xor
mov
aam
loope
xchg
xchg
mov
push
ja
mov
lods
inc
fldl
test
sbb
or
jecxz
adc
scas
jg
into
cmp
ret
xchg
mov
rcl
aad
or
push
popa
cmp
pusha
int
daa
popa
dec
xor
mov
sbbl
mov
sbb
jmp
sub
outsb
out
mov
fs
mov
mov
or
xor
and
mov
fwait
leave
pop
sub
pop
scas
gs
shrd
in
xchg
push
cmp
cmp
aaa
jne
jg
pop
cmp
xchg
adc
dec
inc
xor
repnz
dec
lret
subl
sub
inc
or
andb
incb
stc
out
js
insl
push
addb
mov
pop
pop
repz
and
clc
mov
fdivrl
into
pushf
or
mov
outsl
sub
xchg
add
lret
jnp
or
jmp
jg
lods
mov
or
out
loope
pop
jecxz
inc
aaa
cwtl
fisubrs
mov
pop
lret
mov
daa
mov
fwait
out
sbb
out
xchg
fcomps
fs
push
sbb
dec
out
sbb
pop
mov
push
lret
cltd
cmpsl
nop
clc
push
xor
cwtl
movsb
mov
loope
lcall
in
fimull
dec
out
cmpl
jne
sub
pushf
cmpsl
lea
xlat
cld
xor
xor
sbb
cmp
inc
adc
sti
popa
imul
inc
jle
cmp
insb
in
cmpsl
imul
sub
out
arpl
push
out
push
fisubrl
lahf
and
lods
movb
jb
fdivs
inc
mov
cmp
loop
call
xchg
jnp
filds
sbb
jp
mov
arpl
iret
and
cmp
push
es
push
xor
repnz
xlat
xchg
clc
pop
lods
dec
nop
and
call
test
lret
insl
adc
or
dec
gs
lock
mov
mov
lods
jnp
jno
xchg
out
mov
notb
das
jno
mov
test
mov
insb
mov
fcmovnbe
insl
xor
pushf
xchg
in
or
mov
rolb
jne
push
xor
subl
ja
cmpsb
ja
arpl
inc
insb
mov
mov
push
push
cmp
sbb
dec
sahf
andb
xchg
popf
mov
inc
rcl
cmp
xor
fisttps
repz
call
mov
xor
cmc
in
aad
mov
mov
loope
cmp
add
push
adc
mov
fs
push
icebp
daa
adc
cmp
out
inc
addb
or
lds
mov
dec
xchg
lds
mov
repnz
cmp
mov
ljmp
cwtl
add
push
inc
fisttpl
mov
sub
aas
xchg
rol
lret
push
jmp
mov
xor
jp
leave
cli
enter
xchg
add
in
jne
lahf
pop
mov
fldl
push
xor
pop
jmp
add
dec
sti
std
or
or
das
mov
out
js
xchg
cmp
dec
sbb
pop
mov
cwtl
stc
inc
adc
xchg
mov
insl
pop
and
jge
rolb
les
inc
cmp
test
leave
push
test
out
mov
ja
gs
loop
test
mov
push
ja
ret
mov
xchg
dec
sbb
int3
test
cmpsb
or
shrd
sbb
pop
movsb
lahf
push
cs
mov
cmp
and
cmp
or
out
xchg
push
lret
mov
push
pop
xchg
inc
push
dec
xor
shrl
movb
sub
mov
repnz
xor
and
jmp
inc
mov
xchg
push
jo
in
dec
xchg
adc
sbb
inc
and
mov
mov
dec
insb
jno
fwait
sub
xor
cmc
push
pusha
pop
sbb
cmp
dec
mov
push
dec
test
fcmovu
mov
shlb
push
push
imul
mov
outsb
ds
mov
or
mov
xlat
aas
and
jg
sti
mov
mov
sbb
std
mov
shll
mov
out
mov
jp
jns
pop
pop
jge
adc
dec
lret
inc
push
dec
outsb
pushl
jne
jmp
mov
push
mov
and
inc
or
in
in
mov
lds
std
sarb
popa
jbe
imul
out
pop
dec
ss
stos
sarb
sub
xchg
xlat
pop
iret
cmp
sahf
adc
dec
add
and
and
and
das
lock
js
add
or
rcrl
cmp
mov
dec
push
dec
das
pop
mov
xlat
mov
mov
xchg
addr16
xchg
mov
xchg
lret
cltd
mov
sub
mov
push
and
mov
dec
cmp
outsl
lea
jl
mov
data16
xor
out
out
in
lea
push
loope
pop
adc
mov
push
daa
lcall
pop
pop
xchg
and
lret
mov
fldl
or
mov
enter
into
repnz
in
arpl
out
in
xchg
clc
nop
data16
sub
in
push
dec
mov
mov
ds
and
add
push
imul
dec
mov
fisubl
movsl
jge
cmc
imull
in
roll
inc
frstor
pusha
adc
xchg
insb
inc
shlb
jb
and
cwtl
xchg
add
cltd
rclb
cmp
xor
filds
fsubl
mov
xchg
test
jne
pop
cmp
fists
dec
arpl
hlt
push
das
repnz
cmp
xchg
jnp
andl
pop
mov
je
lods
adc
outsb
inc
ret
inc
pop
cltd
push
fimull
push
pop
fimuls
rolb
cmp
mov
jnp
mov
cmp
testl
and
cltd
fmuls
addl
pop
imul
xchg
cmp
cmp
pop
lods
pop
cmc
call
outsb
lock
adc
inc
pop
cmc
into
rorl
outsl
cli
add
aas
fwait
test
add
pop
dec
popl
mov
cmp
lret
js
std
leave
mov
subb
icebp
adc
ljmp
sub
and
mov
add
mov
mov
js
sub
mov
or
out
repnz
test
fsubp
mov
mov
cmpsb
cltd
shll
enter
add
pop
je
jns
out
test
in
in
mov
cs
int3
ljmp
repz
lods
pop
sbbb
inc
jle
push
test
pusha
adc
xor
das
mov
sbb
mov
pop
sub
jb
or
ds
xchg
data16
inc
mov
cld
stc
push
and
enter
std
push
and
cmp
das
mov
out
jo
es
xorl
and
inc
jo
dec
lcall
dec
fisubs
es
sahf
and
sbb
push
adc
jecxz
jo
xlat
cmpsb
inc
add
subb
and
xchg
pop
les
rcll
fcompl
inc
mov
out
in
cmpl
mov
js
dec
pop
nop
scas
loop
add
decb
in
cmp
sub
sub
loop
pop
in
and
mov
jl
leave
out
insl
call
pop
or
push
lea
mov
xchg
in
mov
xchg
fidivl
mov
mov
mov
inc
scas
movsl
leave
arpl
aas
pushf
popa
xor
sub
fcomps
int3
ja
mov
xchg
pop
xor
push
sbbb
jns
arpl
inc
in
aas
lea
add
rclb
push
in
ja
push
mov
test
out
mov
and
push
jge
lret
insl
or
fs
into
mov
in
fsts
imul
mov
pusha
cmp
aad
daa
test
test
xchg
mov
add
test
mov
mov
andb
int
ret
clc
push
or
daa
orl
mov
inc
jg
xlat
iret
push
mov
inc
adc
fs
xor
push
in
std
pusha
sahf
mov
pop
inc
dec
popf
out
jmp
dec
aam
out
adc
scas
lahf
cmc
jb
mov
aad
or
cli
subb
in
push
lock
jae
out
orb
daa
adcl
jnp
shll
dec
jns
cli
in
cmp
ljmp
pop
or
bound
icebp
inc
cmpsl
mov
mov
cmpsl
jae
sub
mov
ss
loopne
fldt
fwait
out
push
mov
pop
jo
enter
cmc
sub
mov
and
testb
or
pop
mov
pushf
cmc
xor
xor
mov
test
mov
sub
and
xchg
imul
outsl
arpl
jb
or
lret
xchg
jecxz
and
xchg
jns
out
lahf
mov
inc
xor
xchg
insl
imul
mov
mov
ljmp
xchg
cli
leave
fidivrs
pushf
mov
repnz
mov
cmc
xlat
enter
cmp
pop
add
shl
jae
addl
in
dec
insb
add
xchg
xchg
ret
mov
fucomp
dec
testb
pop
jnp
sbb
fsubp
addr16
lcall
and
add
jecxz
xchg
xchg
xor
sub
jns
fimuls
notb
jae
mov
sbb
fdivr
inc
ret
lret
add
es
loope
mov
push
cwtl
or
rorl
imul
mov
stc
cmp
aam
fwait
inc
add
xchg
xchg
mov
or
outsl
test
hlt
dec
rol
test
cld
mov
add
subl
jo
jbe
int
xchg
or
push
mov
inc
xor
notb
ficompl
lock
dec
int
dec
sbb
testb
ret
dec
inc
clc
sub
inc
mov
sbb
and
xchg
jle
mov
call
vaddsd
xor
rclb
ret
jmp
popf
movsb
ret
mov
movsb
into
mov
pop
int3
add
mov
lcall
fldenv
adc
xorb
insb
aam
dec
adc
push
mov
gs
pop
fnstcw
fcomp
cmc
sbb
xchg
sbb
psrlq
mov
daa
jg
aas
mov
lock
dec
cmpl
pop
sub
xchg
ja
divl
les
lahf
dec
mov
addl
push
cmpsl
mov
sti
and
xchg
icebp
aam
mov
cmp
push
out
adc
cmp
incl
push
sar
push
mov
jbe
mulb
and
enter
filds
mov
add
mov
pop
scas
or
and
dec
repz
cltd
scas
sub
ljmp
adc
cltd
lods
das
lahf
sub
jo
inc
insl
call
pop
xchg
adc
test
or
ret
dec
jge
out
add
xchg
push
mov
xor
popa
jnp
adc
cmp
adc
jge
cmpsl
xor
dec
mov
cmp
je
test
add
sarl
in
cmp
push
pusha
sub
mov
jns
enter
stc
aaa
xchg
mov
rcll
mov
mov
shrl
mov
int
jle
pop
mov
popl
daa
testb
fstl
push
fistpll
mov
push
les
in
mov
addr16
xchg
dec
sti
sub
mov
sti
hlt
pop
addr16
daa
icebp
mov
int
sbb
es
fildll
out
push
jp
pop
sahf
imul
push
sbb
dec
pop
adc
inc
sbb
push
fistps
mov
cli
arpl
and
movsl
add
loop
icebp
mov
dec
push
pop
dec
xor
inc
pop
add
jae
jb
popf
fcompl
push
cmp
push
imul
loop
cwtl
cmp
sarb
test
ja
cmc
xor
dec
add
cmp
lock
mov
mov
lock
sbb
negb
dec
out
lea
bound
fldcw
pop
aas
push
adcl
insl
inc
insl
cmpsl
xchg
loop
and
and
insb
or
push
test
icebp
call
pop
loopne
sub
or
sbb
stc
les
cmc
pand
ljmp
mov
fidivs
sub
sub
je
div
leave
push
adc
aas
sub
add
xchg
outsb
xlat
popa
jg
xlat
mov
cwtl
cmp
xor
fnstenv
pop
jp
aaa
inc
ljmp
cmp
jecxz
dec
push
mov
dec
js
mov
pop
mov
mov
imul
cmp
and
cmpsb
jecxz
mov
mov
cwtl
das
sbb
lcall
pop
sbb
jb
imul
cmp
rolb
mov
pushf
test
mov
push
push
push
cmp
pop
inc
mov
aad
pop
xor
mov
pop
jge
out
jmp
cmp
repz
mov
fs
shlb
fldenv
repz
addr16
pop
jmp
mov
mov
sbb
mov
aam
out
test
cmp
outsl
lea
mov
into
mov
cmc
xchg
jl
fists
pop
jg
lret
jl
jnp
outsb
or
jmp
jge
je
shrl
std
imul
inc
insl
shll
dec
fdivs
lret
or
repz
fimull
test
lds
cmpsb
adc
pop
pop
xchg
loope
mov
mov
loopne
lods
lahf
push
xchg
sub
stos
or
push
rcrl
add
or
inc
xchg
mov
cmpsb
fisubs
negb
dec
ret
pop
addb
inc
daa
aas
sub
dec
mov
adc
or
add
sub
push
aam
aaa
lahf
ss
orb
xor
test
jns
jno
add
in
xchg
movsl
jmp
mov
xchg
aam
jno
and
rcr
pop
sbb
into
roll
pop
pop
jns
push
adc
jbe
sub
mov
xchg
mov
insb
insb
dec
mov
mov
ds
filds
lock
hlt
or
pop
clc
pop
cmp
sbb
push
mov
popa
fiaddl
mov
xor
pop
push
push
shlb
sbb
xor
je
loope
push
rcrl
pop
push
or
add
dec
stc
fldt
stos
jno
mov
mov
insb
cs
ds
and
mov
mov
popf
ja
movsb
les
mov
arpl
adc
pusha
bound
dec
std
cmp
cmp
cmpsl
mov
dec
inc
int
fidivl
or
movsl
int3
hlt
movsb
sub
xchg
psubsw
mov
lock
std
iret
push
mov
loop
lds
insb
testl
inc
jnp
fisttpll
jne
leave
loopne
mov
sub
xchg
adc
and
mov
ljmp
dec
mov
data16
mov
lds
xor
mov
cmc
adc
add
scas
lock
cmc
add
inc
pop
dec
push
pop
cmp
jmp
lcall
insb
mov
sbb
jbe
adc
dec
rorb
add
add
jno
enter
inc
sahf
mov
pop
rclb
inc
jne
cmp
push
popf
rorl
xchg
jno
vpunpcklbw
push
sbb
mov
iret
addr16
jg
outsb
rolb
and
jnp
test
mov
popf
mov
data16
or
sti
xchg
and
xchg
loop
mov
call
cwtl
xchg
enter
jns
iret
xor
xor
out
pop
and
shlb
jmp
lock
adc
mov
cli
xchg
push
inc
mov
pop
and
ret
gs
imul
std
xorb
pop
movsb
inc
xchg
dec
fcom
notb
in
inc
ret
push
jl
and
pop
or
js
jo
insb
mov
fsubl
mov
mov
ljmp
sbb
xchg
pop
enter
inc
jbe
sub
xor
pop
add
mov
cmp
sub
fildll
cld
and
pop
inc
add
jns
mov
inc
lods
jp
sub
mov
js
call
push
gs
lds
arpl
cli
rcl
pop
enter
pop
test
xchg
stos
subl
jne
ss
popa
cmp
sub
les
jle
sub
sbb
fptan
and
add
scas
aaa
push
arpl
lods
xchg
dec
and
pcmpgtw
sbb
xor
das
lcall
dec
cmc
mov
leave
cmpsl
mov
jo
jg
mov
mov
sub
jbe
cmpl
cmp
dec
xchg
into
pop
pop
bound
pop
outsl
sub
sub
jns
cmc
mov
inc
jns
addr16
xchg
pop
jp
mov
sahf
scas
cmp
adc
or
cwtl
ret
movb
pop
mov
lret
aas
and
out
dec
mov
enter
inc
xchg
pop
pop
and
in
pop
xor
pop
cmc
outsb
clc
mov
ljmp
inc
xor
shll
in
sarl
jb
jnp
addr16
jbe
inc
hlt
push
jl
mov
aam
ret
xchg
out
jp
fistpl
fistpll
addr16
out
dec
cmp
sbb
aam
lds
adc
fisttpl
sbb
std
lods
les
push
out
repz
mov
dec
adc
sahf
lods
jge
cltd
in
insl
sub
ret
xchg
pop
je
adc
ds
dec
jns
push
das
dec
in
sub
dec
pop
clc
rcr
stos
and
mov
sarl
push
fwait
loop
cmpsl
push
int
jne
aas
sbb
or
dec
and
nop
idivb
lock
les
push
rorl
movntps
inc
fstpt
aam
movsb
mov
je
lret
cli
ret
aas
cwtl
or
and
enter
pop
ja
cmp
cmc
adc
std
insl
adc
and
cmp
in
data16
sub
sbb
pop
xor
test
mov
aas
adc
enter
hlt
rolb
lret
movsb
neg
bound
push
mov
pop
sub
fiadds
rcr
mov
out
jg
pop
add
stos
ret
adc
xchg
movsl
xchg
incb
pop
in
aas
inc
mov
shlb
arpl
sbb
jmp
or
es
push
dec
imul
cmp
test
push
cmpsb
es
test
dec
test
dec
xchg
sbb
mov
into
leave
jbe
int3
jge
inc
daa
push
and
aad
sbb
out
cmp
jo
pop
sbb
xchg
jge
add
push
push
lcall
mov
stc
push
scas
xchg
mov
leave
xchg
in
jbe
jo
scas
dec
cld
push
inc
xchg
popa
cmp
pop
test
les
testl
mov
jns
pop
inc
cmp
lret
pusha
mov
out
into
test
cmpb
cltd
test
or
push
mov
or
adc
adc
shll
inc
dec
or
mov
sub
shll
sbb
sub
fdivrs
mov
xchg
xchg
xchg
dec
repnz
sbb
int3
leave
fsubr
stos
stc
stos
imul
cmp
std
mov
call
sub
or
into
fisttpll
jge
jb
leave
sub
push
mov
add
mov
push
sbb
out
lahf
xchg
jecxz
jbe
stos
push
xchg
es
hlt
xchg
push
insb
and
sub
xlat
pop
jle
notl
mov
mov
mov
inc
push
fsubr
aam
imul
pop
dec
cmp
loope
xchg
test
xor
test
mov
aas
sub
add
inc
mov
cmp
bound
mov
testb
outsl
dec
add
out
aam
dec
xchg
adc
sti
nop
push
xor
pop
movsb
push
xor
sbb
call
movsl
jle
mov
lahf
sbb
push
dec
clc
movsl
aam
or
repz
aas
in
pop
and
pandn
or
xchg
je
loop
divb
aas
lock
mov
cmp
push
mov
je
lods
ret
xor
jmp
repz
or
outsb
sbb
lret
test
loopne
push
cmp
in
cmp
sub
pop
sbb
fidivrs
in
mov
icebp
mov
arpl
loope
dec
repz
dec
cltd
sbb
xor
or
dec
stc
inc
sbb
outsl
mov
sbb
sub
lea
ja
or
xor
outsl
dec
or
xchg
fwait
jl
ret
mov
jae
cmp
mov
mov
sub
loopne
ljmp
in
xor
stos
xor
pop
adc
sbb
outsb
mov
mov
stos
or
adcl
sbb
cld
dec
mov
and
cmpb
lea
test
mov
scas
addb
dec
add
push
mov
pop
int3
dec
sarl
dec
jb
mov
les
xor
mov
mov
push
nop
fwait
jae
enter
add
sub
sbb
hlt
jne
or
lahf
mov
jae
push
and
inc
mov
mov
pop
and
xlat
and
addr16
rcl
sub
sbb
jns
push
add
dec
and
dec
inc
pop
push
and
lahf
popa
mov
rol
lea
lea
test
lret
rolb
stos
daa
inc
out
xor
pop
ja
inc
push
jnp
pop
mov
pop
test
mov
insl
fcmovne
into
insl
push
cmp
mov
push
inc
pushf
adc
push
hlt
mov
dec
mov
cmc
jmp
and
mov
cmp
ror
bnd
sbbl
pop
popf
scas
in
iret
jmp
xlat
popa
or
test
data16
jmp
xchg
movsl
mov
push
cli
lods
mov
push
aaa
mov
lock
jno
test
and
test
arpl
or
data16
roll
and
or
xchg
mov
dec
mov
fstps
test
iret
pusha
push
lahf
push
mov
dec
cmp
jp
cmp
pop
iret
sbb
decl
lcall
cmp
sub
dec
jo
cmp
xchg
mov
or
adc
je
ja
inc
inc
scas
vmwrite
sub
pop
test
pop
pop
jne
ret
lock
scas
fisttpll
sub
push
push
popa
xor
and
and
insl
repz
lret
das
clc
lret
xor
fwait
xchg
cmp
bndldx
or
arpl
cs
xchg
fdivr
jne
sbb
add
pop
in
mov
mov
add
stos
ret
lret
call
int
mov
mov
jl
scas
sub
fisubrs
mov
daa
test
shr
ret
rcr
sub
inc
jo
pop
out
jb
push
lds
push
mov
mov
push
xchg
mov
in
and
lret
dec
das
push
mov
push
dec
in
out
movsl
xchg
mov
scas
lock
xchg
testl
stos
or
shrb
inc
test
int3
fwait
jp
push
mov
out
enter
mov
scas
add
ljmp
push
pop
fiadds
nop
iret
cmpsl
and
ss
lcall
jo
sbb
std
mov
loopne
sub
and
add
cmp
inc
dec
icebp
imul
addr16
xchg
loopne
lcall
leave
xchg
jge
or
cwtl
mov
lods
mov
addl
jmp
aam
stos
into
and
pop
adc
lret
dec
adc
call
pop
leave
pop
in
pop
aam
shl
sub
gs
out
cld
jle
xor
out
sbb
ret
xlat
xchg
cmpsl
or
push
sub
aas
mov
imul
sar
test
adc
mov
jp
ljmp
xchg
or
xor
sub
inc
mov
and
or
dec
xor
pop
in
jg
lret
arpl
pop
int
cld
cmpl
stc
add
stos
stc
push
popa
addl
les
dec
je
es
and
pop
mov
and
adc
mov
jge
ret
inc
mov
std
lods
jns
imul
fcoml
addr16
call
popa
dec
xchg
add
test
xor
repz
aas
pop
or
hlt
pop
mov
loop
pop
imul
push
mov
std
sbb
pop
push
add
inc
adc
mov
or
xchg
jo
lahf
cmc
xor
mov
pop
jecxz
xor
adc
adc
clc
xchg
mov
push
repnz
jp
mov
xchg
int
mov
mov
xor
cmp
cmp
sbb
arpl
dec
push
push
and
fidivl
call
hlt
xchg
sub
pop
jbe
cwtl
fdivr
test
inc
sbb
or
pusha
js
les
gs
inc
mov
popa
jge
nop
fildl
mov
or
aas
mov
insb
jnp
scas
fiaddl
sahf
mov
enter
pop
lock
icebp
dec
mov
inc
mov
inc
jne
loopne
sbb
mov
lods
cmpsb
orb
fiadds
sub
cli
iret
push
push
mov
hlt
sub
mov
jmp
xor
insl
dec
xor
inc
xor
mov
popa
sbb
xchg
and
mov
enter
jns
clc
mov
decl
xchg
mov
fsubl
jae
pop
dec
nop
jnp
mull
shlb
sbbl
jb
icebp
xor
fmuls
loopne
aam
aad
aas
loope
push
push
xchg
jp
cmp
aas
jmp
or
jmp
adc
out
dec
push
adc
mov
in
shrb
dec
stc
cmpsb
xor
mov
test
sbb
frstor
cltd
mov
stos
dec
ret
loop
xchg
sbb
jp
jbe
and
xchg
aad
lret
xor
mov
dec
lahf
js
mov
mov
jmp
adc
push
in
imul
inc
mov
addr16
shlb
out
xchg
xor
mov
aaa
sub
iret
add
insb
jge
fstl
jae
jns
pop
xlat
test
dec
xchg
pushf
jns
pop
xchg
lods
cmp
mov
mov
or
dec
mov
mov
notb
xlat
xchg
mov
xor
jmp
jo
adc
stos
ljmp
dec
or
loop
mov
fld
insb
sbb
sbb
sbb
push
or
in
cmp
mov
loope
rorl
mov
xchg
jle
pop
outsl
popf
lods
rcll
inc
mov
dec
pop
pop
jo
jmp
add
je
xor
jnp
clc
mov
sbb
mov
loop
or
mov
repz
sub
jo
dec
mov
pop
sub
ss
lahf
loop
or
sub
xor
insb
mov
fists
dec
lret
xchg
pushf
adc
mov
mov
push
mov
flds
inc
into
add
cmp
jmp
mov
sti
xchg
jo
push
dec
or
xchg
mov
xlat
or
stc
pop
mov
fdivs
sbb
inc
aas
fstl
addr16
subl
aas
push
dec
loop
xor
and
sti
rorl
into
out
mov
ret
jne
jb
fwait
lods
push
pop
les
in
xor
pop
arpl
shlb
inc
xchg
out
lcall
mov
imulb
mov
xchg
jno
scas
pop
es
push
loopne
js
mov
mov
iret
mov
push
insl
mov
ljmp
inc
push
negb
aad
es
cmpsb
pop
and
subb
ficoms
and
outsl
pop
popa
test
icebp
cmpsl
xor
loop
dec
repnz
daa
loope
or
push
arpl
adc
mov
out
ss
mov
mov
cmpsl
sahf
jge
incl
or
popa
xchg
sbb
xor
out
out
mov
leave
mov
and
fiaddl
cltd
ja
jg
lea
leave
mov
popf
iret
mov
push
xor
leave
int
std
adc
lahf
xor
sub
scas
or
loopne
xchg
inc
es
adc
pop
imul
out
and
rcrl
stos
xchg
push
shlb
js
arpl
xor
pop
cmc
pop
or
movsl
cmp
fwait
shrb
test
push
add
cmc
insb
jne
popa
pop
lds
xchg
mov
mov
inc
sub
jg
jl
shr
sti
mov
or
sbb
bound
into
sub
xchg
lret
int3
and
out
mov
inc
mov
adc
mov
std
pop
push
into
mov
ret
push
jp
sbb
call
jg
sbb
mov
or
outsb
sbb
cmp
jp
in
or
sti
pop
aaa
jbe
lods
sub
adc
pop
inc
jecxz
dec
popa
dec
clc
add
dec
mov
imull
scas
cmp
mov
mov
scas
mov
pop
ret
jb
jbe
mov
xlat
push
mov
popf
inc
mov
iret
pop
rclb
gs
inc
fwait
push
adc
and
xchg
push
aas
addb
jle
mov
cmpsl
bound
test
sub
bnd
out
jae
lea
fistpl
cmpsb
mov
test
in
lods
repz
mov
inc
fidivrl
icebp
stos
adc
jle
pop
cmp
mov
cmpsb
je
std
mov
mov
outsl
jo
gs
jo
int
nop
loopne
or
mov
sbb
jbe
in
lahf
xor
sahf
ja
mov
cmp
call
cwtl
ja
lds
frstor
mov
xor
or
test
in
mov
imul
popf
rorb
clc
scas
cmpsb
xor
xor
jns
sub
add
mov
cmpsl
cwtl
and
aas
sbb
jbe
lds
xchg
mov
add
pop
arpl
xchg
ficompl
mov
cmp
mov
pop
pop
mov
out
out
js
sbb
mov
repnz
xlat
stos
stos
sbb
pushf
push
xor
add
repz
push
test
sub
ret
adc
xchg
dec
push
arpl
mov
adc
mov
gs
jnp
sbb
mov
popf
inc
add
pushf
inc
mov
dec
sub
icebp
lea
and
xchg
arpl
xor
xor
push
pusha
cli
mov
enter
sbb
subl
sbb
push
mov
inc
int
hlt
sbb
xchg
leave
push
inc
xchg
jno
fildll
xchg
testl
loop
fbstp
inc
mov
adcl
or
cmp
lock
mov
jb
xchg
jnp
adc
push
cmpsl
push
ja
dec
addr16
inc
mov
int3
cmp
lods
cmp
stos
lock
mov
mov
jnp
lods
shrl
in
imul
xchg
mov
adc
mov
mov
pusha
dec
pop
movw
add
test
mov
sub
jg
sbb
ja
outsl
dec
push
xor
ret
mov
push
and
xlat
fisubl
sbb
push
or
mov
pop
les
sahf
gs
xor
mov
xor
shrl
out
fstpt
push
mov
lret
pop
std
lcall
clc
dec
frstor
push
inc
ss
jg
ja
out
xor
add
lea
sub
insl
xor
pop
int
push
outsb
push
iret
or
cmp
inc
out
pop
imulb
rcll
pop
stc
mov
cmp
ljmp
pop
fcompl
lock
movsb
pop
push
and
or
outsb
out
fidivs
data16
jl
inc
and
cld
std
ds
mov
xchg
add
inc
jmp
pop
mov
lcall
imul
pop
mov
sub
add
sub
aam
xchg
pop
orl
ror
int3
repnz
push
call
xchg
push
fsubl
cmp
cmpsb
dec
mov
pusha
adc
cltd
inc
cltd
adc
inc
in
in
nop
pop
sbb
in
lods
sbb
in
or
push
mov
push
enter
sub
add
mov
or
push
xchg
test
push
jnp
add
out
xor
add
aas
jp
dec
pop
hlt
adc
loopne
icebp
xchg
arpl
sub
aam
cmpsb
loop
daa
cmp
cmp
push
jae
repnz
cmp
shlb
xchg
dec
add
sub
xor
insb
cmp
jl
xchg
ja
ret
mov
xchg
jl
insb
mov
mov
jbe
and
aaa
es
mov
sarl
push
in
ret
cmp
sbb
bound
scas
xchg
and
pop
sub
push
mov
stos
cmp
movsl
pop
scas
inc
mov
push
or
push
rorb
inc
and
icebp
sub
push
mov
adc
mov
fbld
scas
push
fistpl
addr16
in
das
or
mov
push
stc
push
mov
adc
pop
pop
in
inc
dec
test
xchg
pop
out
movsb
lock
cmp
idivl
or
jae
push
sahf
aaa
lret
stos
int
or
jge
aaa
sub
push
test
stos
stos
sub
xchg
lret
pop
push
push
inc
dec
dec
mov
mov
cmp
pop
imul
jae
cmpsb
add
push
push
inc
xchg
insb
sub
cld
or
mov
dec
push
pop
pop
xchg
add
test
mov
push
xorb
gs
js
in
addl
or
xchg
push
inc
les
jge
push
ror
mov
mov
push
adc
iret
cmp
sar
adc
test
mov
daa
cmc
inc
or
lds
adc
mov
add
repnz
ret
mov
rcll
sbb
cs
clc
cli
incl
cmp
stos
loope
popf
jo
push
xor
ss
dec
in
adc
mov
xchg
and
inc
add
hlt
popa
insb
jp
jp
mov
bnd
lret
shrb
jecxz
imul
in
test
cmp
mov
mov
and
sub
xchg
ljmp
add
insb
insl
xchg
jae
dec
jb
jge
inc
fadds
lret
out
add
fmuls
cmpsb
shll
dec
call
push
ja
repz
mov
xchg
jnp
push
test
sbb
icebp
mov
push
insb
jnp
add
in
dec
cld
or
jbe
cmp
dec
pop
mov
push
and
int
arpl
add
inc
pop
or
pop
xor
dec
push
xlat
cltd
sbb
call
inc
jns
push
arpl
inc
cmp
int
push
idiv
add
or
ljmp
inc
xchg
out
mov
jae
sub
jbe
daa
vpsadbw
popa
in
nop
mov
mov
mov
cmp
xchg
movsl
inc
sbb
jno
call
out
pushf
sub
inc
ja
sbb
cli
mul
stc
push
enter
inc
sbb
fwait
pop
jbe
xchg
sbb
aam
bound
hlt
ljmp
shl
int3
pop
sub
mov
movl
pop
mov
lea
push
mov
pop
fidivs
test
pusha
sarl
jecxz
cmp
movsl
inc
push
or
pop
div
mov
mov
sti
cltd
jmp
cmp
push
out
std
inc
cmp
cmp
mov
fisubs
jp
push
mov
dec
ret
dec
ficomps
and
inc
or
addl
adc
jmp
fnstenv
movsb
sti
popa
xor
je
sub
dec
aaa
cmp
aaa
mov
xchg
notl
cmp
sbb
jo
jno
inc
mov
aam
xchg
push
sarb
push
jae
push
jno
fwait
movsb
dec
into
mov
repz
fstpl
adc
test
or
insb
xor
pop
mov
and
sub
aas
jl
iret
xchg
mov
lahf
xchg
jns
jge
test
xor
aaa
pop
in
in
outsb
pop
cmp
sub
mov
push
pop
cmp
aaa
ret
dec
fiaddl
sahf
popf
xchg
loopne
xchg
ret
out
dec
cmp
push
cmpsb
pop
gs
cli
aaa
lock
daa
jnp
bound
dec
sub
mov
in
mov
inc
out
jo
or
dec
inc
mov
daa
push
dec
ds
in
insl
cmc
dec
mov
pop
mov
iret
pop
int3
push
pop
mov
jno
cwtl
sbb
leave
hlt
cs
lock
mov
movsb
jns
pop
jmp
inc
hlt
sbb
sub
in
and
cltd
out
rclb
icebp
push
push
jae
add
popf
scas
adc
stos
push
jle
cs
mov
cmpsb
negb
test
cmpsb
hlt
aad
sub
mov
out
sub
int3
sub
mov
xor
xor
das
rclb
mov
pushf
sahf
push
jb
xor
icebp
push
push
xchg
lock
icebp
pop
xchg
cmpsl
cmp
aaa
fsubs
insl
loopne
jae
inc
cs
inc
xlat
dec
stos
ljmp
mov
fucom
add
sub
pop
xlat
ljmp
sub
imul
out
pop
and
ja
jmp
or
mov
adc
mov
insb
and
sub
xchg
in
mov
loopne
pop
enter
jb
mov
mov
loope
imul
scas
and
sbb
int3
and
jb
insl
and
dec
mov
dec
xchg
ds
jno
jne
mov
in
insb
jmp
sbb
outsb
rcrl
jnp
dec
jae
out
mov
mov
nop
mov
jns
lahf
mov
pop
cmpsb
jmp
rcll
mov
dec
out
cli
lret
mov
xchg
mov
cmpsb
jge
fisttpl
or
mov
xchg
pop
push
sbb
sub
lock
das
jg
cltd
outsl
jno
scas
outsl
mov
cmp
stos
mov
jbe
call
fisubs
jns
push
adc
adc
xor
pop
bnd
mov
stos
in
cmp
stc
fnstenv
in
xchg
inc
shlb
add
stos
mov
mov
fnstsw
lods
shll
fdivp
adc
bound
pusha
jbe
shrb
loopne
cmp
inc
shll
push
rclb
inc
out
leave
dec
push
jns
xorl
test
xor
sbb
xchg
movsl
and
adcb
or
pushf
mov
stos
ds
ret
out
sbb
xor
mov
lahf
shrl
aas
pop
adc
stos
addr16
mov
ljmp
lahf
loope
xor
js
ret
movsl
vaddsubps
cmp
inc
lods
push
lea
in
nop
xchg
shll
jae
aam
clc
mov
push
loope
mov
inc
sbb
negl
jne
dec
jb
lods
cld
inc
cmp
inc
fcoml
js
mov
sarb
cmp
push
sbb
push
adc
and
add
inc
rolb
and
fldcw
les
imul
rclb
pop
cmp
adc
dec
rol
mov
adc
out
sub
cld
add
pop
pop
call
mov
or
jbe
out
cmp
push
je
xor
scas
jmp
jl
cmpsb
mov
and
adc
pop
stos
popa
imul
out
mov
mov
out
in
mov
ljmp
mulb
je
int3
push
mov
imulb
cld
add
ret
push
and
xor
iret
mov
push
xor
outsl
mov
dec
test
je
xor
int
jge
push
stc
mov
out
add
aas
je
lret
gs
xchg
push
pop
rcr
jg
stos
or
scas
int
mov
sub
pushf
fidivrs
daa
shl
ret
sbb
xchg
mov
mov
and
jne
push
bound
or
test
lds
mov
xor
ljmp
xor
xor
push
inc
out
ret
cs
sahf
scas
or
repz
ror
loop
sub
mov
loop
ret
inc
sarb
cltd
push
ret
push
push
or
cmp
fistps
cmc
aam
inc
movsl
sub
scas
mov
cmp
nop
mov
pop
hlt
add
scas
movsl
xchg
nop
sahf
mov
dec
and
mov
lahf
fwait
jno
pop
push
xor
mov
push
cmp
sbb
and
mov
dec
movsl
jmp
imul
mov
sbb
dec
mov
idivb
jae
sbb
into
lods
into
mov
lea
inc
jge
sti
frstor
push
rorb
mov
adc
jg
roll
jo
cld
adc
pop
das
imull
leave
icebp
inc
mov
orb
mov
lods
xchg
or
xor
mov
imul
outsb
sub
popl
inc
push
add
push
ror
xor
dec
negb
lods
cs
mov
je
mov
jmp
into
add
test
pop
es
rorl
ljmp
sbb
or
ja
test
faddl
popf
cmpsb
adc
mov
mov
jle
cmp
sahf
idiv
xchg
icebp
shl
retw
cmpsb
jmp
mov
out
test
push
mov
dec
ds
repz
xor
in
lahf
jle
mov
jp
fs
fsubrs
loopne
iret
lcall
cmp
jge
mov
xor
pop
dec
pop
pop
mov
xchg
rcr
inc
inc
lahf
cmp
sbb
xor
dec
int3
leave
cmp
cmp
subb
enter
dec
pop
inc
aam
mov
xchg
fs
jmp
inc
fisubl
aaa
sbb
lods
test
pop
cmpb
lea
pop
daa
pop
inc
insb
jbe
fsubp
add
dec
fcoms
jl
inc
sar
xor
mov
scas
lods
clc
mov
insl
addr16
jl
mov
aaa
sub
out
frstor
outsb
adc
jle
jns
fcmovnb
stc
mov
mov
loop
cld
stos
adc
fstpl
mov
cmp
scas
mov
sar
mov
push
cmpsl
enter
cmp
insl
push
rolb
xor
mov
xlat
or
add
subb
jo
rcrl
pop
xchg
pop
push
cmp
push
js
cwtl
jg
and
push
je
cmpsl
mov
push
mov
xchg
sbb
shl
jo
bound
jbe
repnz
jb
jmp
xor
xor
pop
enter
xor
mov
stos
jnp
adc
and
dec
stc
pop
xchg
mov
jge
mov
mov
ljmp
pushf
xchg
inc
enter
push
hlt
cmp
enter
jne
negb
in
ss
cwtl
jmp
lahf
mov
jg
sbb
adc
mov
xchg
icebp
dec
cmpb
sbb
sahf
and
aas
pop
xchg
pop
xor
sub
mov
lret
xor
push
shll
sbb
or
jnp
aaa
push
enter
insl
add
ret
sbb
jae
jno
je
xor
dec
inc
sub
sub
decb
and
neg
in
xchg
xor
lret
xchg
pop
aam
in
jecxz
daa
or
mov
xchg
pop
and
dec
aam
pop
testb
cmp
lret
test
in
lock
cmp
cmp
in
sbbb
inc
int
repz
movb
push
aaa
adc
sti
push
icebp
loopne,pt
and
js
mov
add
js
push
mov
xor
shrb
xchg
shl
aas
mov
in
loope
aaa
sbb
imul
push
clc
add
cmp
xlat
notb
rorl
shrb
repnz
jae
add
lret
push
scas
lahf
and
das
arpl
addr16
sbb
ds
test
out
mov
push
daa
push
cwtl
hlt
or
ret
adc
inc
pop
inc
inc
push
sbb
popf
and
pop
jno
mov
into
aam
scas
sub
shlb
xor
daa
pop
and
dec
jne
cmp
or
sbb
hlt
mov
sub
flds
mov
sbb
fs
dec
xor
mov
push
xor
in
mov
and
add
xor
and
repz
sub
cs
dec
shll
ss
sbb
adc
fsubs
scas
mov
stos
es
dec
sbb
xor
je
add
sub
int
mov
jecxz
repnz
pop
inc
lock
cs
out
dec
idivb
stc
aas
popf
dec
insl
inc
fistps
rolb
push
pop
or
sub
cld
xor
sti
jl
or
std
dec
pop
add
rcrb
mov
andb
nop
popf
jns
pushf
inc
ret
bnd
xchg
push
fldcw
pop
rdmsr
and
sub
lcall
adcb
pop
sub
leave
jge
push
repz
aad
ret
add
imul
in
imul
inc
push
jp
iret
fcomps
mov
decl
sub
or
xlat
out
inc
mov
outsb
leave
push
cs
sbb
cmpsl
push
sub
xchg
mov
insl
loopne
movsb
dec
and
roll
xchg
mov
cmp
movsl
sbb
fstpl
dec
in
mov
inc
ljmp
or
jo
mov
popf
mov
jns
data16
cs
outsb
cmpsl
push
cmp
jnp
repz
xchg
push
cld
cmc
les
xor
dec
adc
fstpl
dec
scas
es
xchg
test
mov
js
data16
xchg
hlt
jbe
xor
sbb
xchg
fstpl
arpl
popf
ljmp
mov
and
pushf
loop
scas
jo
in
xchg
arpl
xchg
enter
jae
lods
aaa
pusha
jo
loop
inc
ret
cs
xor
mov
ljmp
clc
scas
pop
insb
je
jl
dec
sub
pop
pop
push
inc
sub
addr16
xchg
fcoms
dec
push
inc
call
pop
sbb
lds
adc
insb
push
scas
in
fimull
mov
jge
mov
hlt
xor
xor
insl
mov
cmp
jp
adc
fmulp
cmp
xor
fistps
aas
jnp
mov
notl
mov
jmp
shr
mov
ss
or
xorb
mov
sub
pop
loop
test
rclb
stos
aaa
mov
out
xor
fidivs
pop
jg
jle
cmp
andl
sti
mov
pop
sbb
mov
cmp
or
nop
dec
and
cmp
mov
data16
insl
in
aaa
fiaddl
int3
enter
sbb
inc
mov
xchg
cmp
dec
imul
call
imul
lock
cld
or
loop
adc
adc
hlt
sub
jns
sbb
sbb
rclb
aam
jne
fdivrs
dec
cmp
and
jb
push
xor
mov
adc
lock
addr16
cli
ficomps
mov
fstpl
add
movsb
in
inc
fnstcw
inc
out
inc
notl
pop
arpl
push
ud0
rolb
shll
ljmp
cmpsl
popa
push
rcrb
mov
pop
int
mov
mov
jmp
xchg
sub
lods
adc
jmp
pop
lds
add
or
in
sub
aas
outsl
sbb
mov
shr
pop
lret
ljmp
mov
pop
inc
jp
mov
sub
and
pushaw
sbb
inc
enter
mov
and
mov
mov
pop
jmp
cmp
xchg
and
ja
dec
push
pusha
and
mov
es
inc
call
faddp
inc
pop
into
fs
mov
or
loopne
vphaddubw
cli
cmp
sbb
mov
push
into
inc
pop
inc
test
xor
std
ret
mov
std
pushf
add
ret
jne
jge
movsb
xchg
mov
in
loop
jno
lods
pop
icebp
rorl
repnz
inc
movsb
jmp
outsl
pushf
inc
fs
and
andb
inc
inc
std
aaa
fistpl
jnp
in
or
icebp
pop
ja
jp
push
lods
aaa
jnp
test
subl
push
sbb
imulb
mov
jmp
shrb
mov
sub
ret
dec
jg
aas
dec
jns
in
int3
add
outsb
xchg
push
jl
adc
push
adc
pop
sub
xchg
push
aaa
sahf
idivl
out
leave
and
cltd
adcb
xchg
dec
add
in
ror
in
cmpb
dec
mov
fstpt
xchg
dec
cmpl
jp
sbb
push
enter
fnstcw
or
lret
lods
test
jnp
js
leave
jecxz
mov
push
mulb
pop
test
outsl
or
cmp
lret
mov
push
mov
jb
xchg
mulb
push
sub
mov
push
jmp
insl
xor
in
addl
ret
adc
stos
repz
aad
into
pop
adc
cmp
bts
ja
xor
or
rclb
sbb
scas
mov
cmc
pop
scas
clc
push
cwtl
dec
adcb
pop
jae
pop
xor
fs
andl
aas
insl
cmp
sub
cli
xchg
sub
rolb
cmpsb
roll
repnz
or
dec
or
push
out
scas
jae
test
out
mov
test
insb
mov
xor
fists
push
mov
push
ret
mov
or
cmpsb
aam
jo
lahf
dec
and
fwait
and
dec
and
enter
pop
and
dec
imul
push
or
xchg
loopne
mov
or
mov
repnz
push
or
test
cld
out
xor
lcall
inc
pop
mov
lds
lret
push
or
in
jae
push
push
add
mov
or
rolb
xchg
cmp
pushf
test
dec
push
lcall
repz
pop
xor
daa
or
mov
repnz
xchg
xchg
fcoml
mov
in
inc
mov
fstl
lret
repnz
xchg
dec
dec
mov
dec
mov
filds
xchg
dec
inc
test
push
xor
and
mov
out
jo
mov
mov
lret
or
repnz
jns
xorb
cltd
dec
pop
cltd
push
and
mov
movsl
popf
mov
outsl
in
add
arpl
cmp
jp
cmp
mov
xchg
aaa
in
sbb
pop
dec
jbe
jne
lret
mov
mov
sbb
jns
test
rolb
cmp
shll
jbe
sub
mov
outsl
pop
jno
daa
test
leave
dec
ret
lods
lods
inc
cli
pop
cwtl
mov
inc
xchg
cltd
mov
sarb
xchg
push
idivl
arpl
scas
call
popf
test
inc
push
loop
xor
or
mov
out
mov
mov
movsl
into
pop
dec
ss
or
fidivrs
adc
imul
jg
cmpsl
rcr
es
xchg
outsb
daa
pop
lods
insl
jmp
popf
inc
ljmp
jmp
leave
mov
push
lret
les
inc
xchg
loop
ljmp
mov
adc
mov
cmp
lahf
lods
lcall
add
hlt
xorb
out
cmpsb
or
loop
mov
dec
addb
sub
popa
or
in
xor
dec
push
lcall
mov
bound
mov
incb
je
mov
inc
push
or
lock
test
filds
lret
clc
andl
popa
test
fildll
stos
std
cld
div
fwait
insl
xchg
addr16
stos
cmpsl
js
fisubrl
lret
insl
loopne
push
inc
dec
lcall
cmp
add
mov
leave
clc
mov
jmp
add
add
in
dec
xlat
and
jge
cmp
test
jnp
mov
fisttpll
fistps
mov
mov
lds
ret
sahf
or
scas
and
pop
sbb
mov
push
mov
stos
js
insl
pop
or
or
sub
jnp
pop
lds
leave
sti
call
loopne
jmp
inc
mov
push
cmp
jo
out
addl
inc
cltd
loopne
adc
scas
add
mov
xchg
adc
repz
and
ret
push
jae
sbb
adc
dec
pop
or
sbb
je
popa
pop
sbb
cmp
ds
imul
xchg
sub
out
mov
lcall
rcrb
pop
fnsave
adc
push
loop
inc
xor
jl
repnz
jp
sub
mov
mov
xor
leave
sub
movsb
push
bound
xchg
or
cmp
shr
push
insl
mov
adcb
hlt
pusha
or
ror
xchg
popa
xor
xchg
out
sub
inc
iret
mov
jnp
sub
mov
pusha
into
adc
pop
push
test
mov
inc
aaa
enter
dec
cmp
and
inc
in
scas
push
les
push
mov
add
sbb
inc
jne
out
aam
fnsave
fidivrs
fidivrl
inc
aad
push
adc
es
cmp
pop
adc
icebp
jae
in
jl
aaa
lock
push
adc
cmc
push
mov
jg
inc
loope
test
addr16
mov
dec
data16
cmpb
mov
adc
incl
xor
das
mov
or
outsb
and
hlt
inc
push
mov
mov
xor
inc
outsl
and
sub
xchg
mov
dec
out
cmp
imul
jmp
sbb
dec
rolb
jne
inc
sarl
mov
add
lock
enter
stc
mov
sbb
add
jp
es
ja
xchg
jmp
or
fisttpll
sbb
xchg
in
xor
inc
push
inc
nop
test
pop
inc
push
xchg
add
ljmp
ret
xchg
inc
xchg
popl
xchg
aam
js
add
es
lock
ss
mov
push
pop
sub
adc
test
dec
mov
jmp
iret
outsb
or
pop
mov
sub
or
push
sub
xchg
pop
ret
xor
or
imul
pop
or
scas
call
out
sarb
and
sbbl
nop
pop
adc
push
in
fwait
inc
sbb
stos
movsl
loop
and
mov
lock
lahf
in
sti
push
adc
ret
mov
xchg
mov
mov
pusha
or
bound
mov
jne
in
xchg
rorl
rolb
stos
mov
or
push
mov
dec
stc
sti
arpl
add
lds
adc
add
add
out
repz
add
mov
jno
xchg
cltd
fmuls
add
out
sub
aas
and
hlt
inc
push
xor
sbb
test
sbb
cmp
pop
popa
iret
iret
inc
xor
jb
cmc
pop
fdivrp
inc
pop
rol
adc
sub
mov
mov
insb
adc
stos
push
pop
rolb
addb
je
fiadds
int
sahf
mov
test
out
xchg
add
sub
or
lock
xchg
pop
sub
movl
daa
int3
push
cmp
mov
das
sahf
sub
inc
and
lock
inc
sub
iret
ret
push
adc
sbb
mov
sbb
in
xchg
or
mov
ret
into
jo
or
std
js
clc
ljmp
mov
aas
mov
xchg
pop
arpl
addl
pop
ljmp
mov
push
ljmp
loope
stos
into
cmp
sub
leave
inc
and
or
dec
cmp
pop
ret
les
add
mov
pop
addb
adc
xchg
aam
out
iret
push
sti
sub
pop
jmp
inc
lock
jbe
jno
xchg
pop
lcall
mov
mov
call
xor
rcr
cwtl
cmc
xchg
inc
jo
daa
in
adc
jae
pusha
sbb
jae
popf
mov
in
xchg
mov
in
es
xor
sub
inc
inc
jne
es
and
addl
pop
xor
and
int
imul
mov
mov
pop
dec
ds
and
pop
aad
xor
pop
sbb
mov
mov
test
pop
pop
inc
lret
xor
das
jae
jg
inc
jno
xchg
out
mov
push
cmp
xor
or
pop
stc
arpl
mov
rcrb
jge
dec
imul
stos
push
test
insl
cmp
gs
cmc
idivb
into
fldl
sbb
xlat
xchg
dec
decl
xorl
lret
test
pop
inc
and
test
inc
push
push
ds
paddsw
lcall
sub
movsb
inc
cltd
mov
cld
into
nop
mov
jge
addr16
fmuls
mov
sbb
outsb
cmp
fldt
cmp
loop
mov
xchg
pushw
cmc
scas
push
and
push
dec
hlt
inc
jg
int3
orb
imul
iret
and
xchg
mov
out
rcrl
ss
fnstsw
push
mov
cmc
imul
das
mov
jecxz
stos
pop
mov
js
dec
popf
mov
xchg
jle
xchg
popf
or
xchg
clc
pop
mov
scas
lahf
mov
andb
enter
mov
hlt
divl
pop
lds
cmp
mov
xchg
or
dec
or
inc
fildl
inc
repnz
call
jmp
xor
dec
std
add
dec
mov
dec
repnz
adc
add
jns
lcall
mov
add
pop
addr16
pop
pop
mov
jg
pop
ret
js
push
sub
xchg
je
shlb
xchg
pushf
popf
ljmp
in
mov
je
imul
cmp
call
ja
cltd
add
add
pop
es
sbb
push
outsl
mov
leave
sbb
mov
fnstenv
insb
add
enter
and
out
testl
mov
cmp
insb
frstor
mov
test
fildll
adc
adc
gs
dec
aaa
in
outsl
dec
xchg
rorl
cmp
clc
push
mov
fidivrs
adc
lret
mov
movsl
lahf
ljmp
dec
sbb
mov
xchg
fsubl
mov
dec
arpl
out
jge
sti
je
dec
test
jle
dec
rolb
out
xor
call
popf
testb
ds
sbb
es
ret
cmp
decb
sti
pusha
push
dec
and
lods
xor
mov
int3
lret
jnp
and
stos
mov
mov
cmp
shll
mov
jmp
mov
push
and
jns
dec
cmpsl
mov
jmp
je,pt
mov
and
sbb
inc
mov
adc
adc
mov
mov
leave
fwait
xchg
cli
int3
sahf
mov
popa
imul
std
inc
or
ds
xchg
sbb
dec
insb
jp
repz
add
ret
pusha
mov
ficompl
gs
pusha
xor
aad
xor
jno
pop
lds
jbe
cmp
test
ds
iret
cmp
sub
jnp
push
fs
jmp
and
xor
daa
pop
lods
push
mov
aas
xchg
mov
insb
jle
xchg
mov
rol
imul
aam
cmp
add
xor
jns
data16
inc
ljmp
xchg
xor
subl
cmp
ret
push
dec
sbb
pop
ret
into
stos
cltd
cli
fidivrl
shll
cmp
icebp
pop
loopne
or
stos
add
cmp
or
jmp
xorl
enter
inc
jo
cmp
div
mov
fwait
sti
sysexit
dec
mov
ss
test
int3
roll
dec
scas
xorl
pop
adc
pop
cmp
xchg
int
loope
and
cmp
adc
mov
ja
sbb
and
fidivrs
mov
jg
adc
ljmp
fs
iret
mov
pop
pop
push
ss
inc
lods
cs
in
add
push
xchg
dec
shlb
or
das
mov
push
out
sqrtps
add
add
js
leave
mov
pushf
sub
cwtl
popa
xchg
mov
xor
mov
jae
xchg
add
subb
in
pop
adc
stc
shufps
jg
nop
imul
jne
fisubs
popf
int
mov
out
pop
and
xchg
fnstsw
inc
cwtl
lods
bound
and
ret
cmpsl
shrl
movsl
js
jns
adc
psubq
lahf
mov
aaa
leave
inc
pop
insb
fmuls
xchg
rcpps
cmc
adc
bound
xchg
repz
insl
in
in
js
inc
daa
cmpsw
int3
mov
jmp
pop
pop
vmwrite
and
cltd
imul
in
jbe
aas
test
push
sub
jmp
add
pop
pusha
repz
xchg
jnp
mov
push
lret
dec
cmpsb
in
lods
adc
in
mov
and
ret
dec
decl
sbb
jbe
pop
fsubrs
test
cmp
insb
mov
cmp
sub
nop
psubsb
cwtd
xlat
dec
add
lds
test
jecxz
test
outsl
fidivrs
out
enter
push
test
cs
or
sbb
push
das
or
jp
push
arpl
add
enter
mov
imul
cmp
pop
and
adc
push
rcrb
out
lahf
dec
stos
add
inc
xchg
sti
es
cli
into
add
sti
or
shlb
mov
filds
or
imul
daa
dec
movsb
test
pavgb
or
sbb
push
cmp
cld
mov
xlat
fcmove
mov
cmp
out
sub
ss
xchg
call
mov
sbb
and
xor
sub
dec
aad
or
int
push
cld
shll
scas
pop
lahf
jne
dec
or
dec
fnstsw
idiv
and
pop
xchg
mov
ss
xor
ss
or
or
mov
mov
mov
dec
cmp
movsl
daa
ljmp
scas
fdivrs
outsb
ret
stos
push
adc
mov
mov
xor
mov
pop
xor
pop
push
outsl
jne
adc
cmpsl
mov
out
fistpl
loop
frstor
addb
movsl
mov
mov
push
sub
xchg
ficomps
cmpsb
aaa
call
push
xchg
out
mov
repnz
cmp
adc
sbb
out
push
mov
aaa
and
jb
cmp
or
int3
mov
and
sbb
cmpsl
push
pop
inc
icebp
stos
push
fiaddl
fdivl
pop
int3
and
xchg
testb
add
adc
pop
hlt
insl
jmp
sub
mov
and
pop
add
push
jbe
adc
repnz
or
fildll
flds
call
lea
fimull
jnp
out
sub
imul
pop
lahf
mov
shrb
cmp
adc
jp
and
arpl
mov
loop
out
cli
and
repz
jl
mov
fs
xchg
adc
jne
sbb
orl
insl
cmp
ficomps
jge
xor
mov
in
jg
pop
mov
inc
repz
mov
mov
stos
pop
into
push
mov
out
imul
sub
mov
out
mov
push
sub
sbb
fcomi
lods
xchg
mov
add
shr
cmp
fistl
or
test
stos
adc
sbbb
mov
hlt
push
pop
fmuls
loopne
andl
add
push
das
dec
sarb
test
add
in
nop
add
xchg
mov
mov
sbb
daa
mov
inc
jne
cmp
lea
add
mov
inc
jbe
mov
cmp
pop
int3
js
push
lods
es
dec
jle
ss
fldl
adc
jno
mov
lock
rcll
mov
bound
fldt
test
jae
fcmovb
push
into
repnz
ret
adc
mov
add
into
cld
aaa
xchg
cmp
mov
adc
jle
jne
cmpb
ret
mov
cmpsb
jns
push
mov
repz
shlb
stos
push
dec
adc
lds
repnz
push
cmp
pop
mov
xlat
outsb
and
and
imul
jmp
cs
pop
arpl
xchg
test
addr16
adc
or
mov
repz
lcall
adc
aam
addr16
lahf
cli
dec
in
jp
jmp
std
int3
daa
mov
mov
inc
data16
mov
xchg
fwait
aam
mov
inc
daa
inc
push
lcall
jb
push
mov
scas
repnz
shlb
lret
fsubs
and
sbb
jp
mov
pop
ret
lcall
fs
inc
mov
in
add
cmp
out
and
adc
cmp
push
jle
mov
push
ds
out
lods
in
pop
insl
cmp
cmp
popf
xchg
das
test
dec
or
jmp
sbb
shrb
push
out
mov
sub
mov
push
or
in
cld
push
int
sub
sbb
sbb
sbb
mov
js
xor
pop
jl
jns
sti
imul
pushl
and
dec
push
movsb
mov
add
int
lock
jbe
pop
pop
jl
jb
push
out
jno
les
and
test
xchg
arpl
sub
adc
add
call
out
add
pop
xchg
lods
fdivr
pop
iret
mov
mov
dec
inc
out
jp
sarb
mov
ljmpw
cwtl
sbb
es
mov
loop
addr16
and
inc
fs
enter
insl
gs
push
lds
xorl
mov
fsubs
or
sbb
fisubrs
jmp
ja
fwait
addb
daa
xchg
jmp
push
je
mov
and
rolb
pop
xlat
sub
adcb
push
cld
pop
daa
push
into
ficoml
fmuls
and
stos
xchg
lods
das
jns
loopne
jno
push
stos
cmp
cmp
gs
mov
and
test
mov
cs
push
push
adc
mov
cmova
std
cli
fs
push
into
fs
xchg
lods
lods
xchg
and
adc
cmpsl
pusha
xor
mov
mov
imul
dec
or
imul
shll
into
dec
sti
add
pop
push
sbb
aaa
inc
insl
repnz
mov
xchg
push
sarb
test
adc
inc
in
mov
mov
mov
repz
ror
mov
push
out
xchg
rcl
fisttpl
sbb
or
push
fisttps
cmpsl
js
fimull
inc
fisubrs
ror
pop
and
mov
jns
add
call
gs
shlb
cli
loopne
xor
push
push
jb
fists
sbb
and
xchg
adc
jne
xor
pop
rcrb
and
xchg
data16
mov
push
aam
stc
shrl
add
sbb
cmpsl
pop
xchg
cmp
movsb
data16
mov
sti
or
lea
data16
or
inc
mov
out
arpl
push
and
adc
jne
add
nop
mov
fsubrp
dec
lods
dec
imul
in
jae
mov
xchg
repnz
sbb
repz
pop
jg
cli
mov
jnp
lcall
insb
aad
xor
mov
sub
icebp
jno
or
pop
arpl
dec
test
cli
mov
dec
xor
orl
int
and
repnz
or
int3
inc
std
mov
dec
int3
dec
and
repnz
xchg
cli
jnp
push
mov
mov
xchg
or
ja
cmp
cmp
repnz
xchg
notl
es
movsb
sub
sbb
mov
aas
inc
mov
sub
add
and
pushf
xchg
adc
or
inc
xchg
push
aam
rorl
mov
loope
lea
fwait
sar
test
mov
scas
mov
lret
ja
ret
imul
cmc
mull
stc
sbb
sbb
in
adc
gs
adc
ja
cli
xor
inc
adc
pop
mull
xchg
adc
and
push
pop
xlat
ficoml
nop
rorb
or
xor
cmp
ret
sti
jl
stos
test
xchg
sub
cmpsl
add
rcl
into
jge
stos
sbb
push
lods
gs
or
inc
pop
daa
jnp
inc
out
sti
xchg
hlt
sub
scas
enter
loopne
dec
xchg
aaa
adc
or
fimuls
xor
ljmp
inc
cs
xchg
call
sarl
sbb
cmp
cli
stos
xchg
scas
add
mov
fisttps
cmp
add
sbb
std
lret
sarl
adc
pusha
or
or
daa
call
mov
adc
jecxz
or
mov
loopne
out
mov
fs
cltd
popf
sub
outsl
movsb
lea
mov
xchg
mov
test
int
stos
stos
push
into
inc
fistps
jle
jns
jnp
xor
cmp
outsb
stos
aam
loope
das
and
std
popa
mov
in
lahf
out
out
aam
mov
push
mov
icebp
test
sbb
sbb
xor
repz
orl
and
dec
jmp
sahf
push
adc
call
push
ss
dec
pop
sbb
nop
fldenv
sub
xchg
test
cwtl
sahf
adc
call
fmul
js
lret
mov
out
push
mov
popa
jp
inc
clc
rep
mov
sbb
jb
in
pop
inc
jae
jne
jb
sub
xchg
jmp
jo
sahf
fwait
mov
and
push
addr16
or
cmp
sbb
mov
imul
add
lock
cmpsb
jl
mov
pop
and
mov
mov
xchg
popa
adc
inc
sbb
sub
push
int3
popf
in
ljmp
pushf
sub
cmp
mov
xor
mov
jmp
jbe
sub
lods
pop
int3
shrl
mov
cmc
mov
or
jb
add
xchg
inc
mov
mov
fucomi
sahf
icebp
mov
mov
scas
push
shlb
push
sub
jp
les
mov
jno
cmp
pushf
shll
mov
aad
stc
je
pop
sub
and
mov
and
lods
jecxz
and
mov
stc
jg
fstps
call
lods
pop
jne
sub
out
mov
ljmp
jnp
imul
in
add
cmc
pop
in
xor
xchg
jae
icebp
fdivrs
pop
and
out
xlat
pop
pop
mov
push
mov
ret
or
fcompl
cmp
stos
lahf
pop
add
adc
andb
push
arpl
fdivrl
dec
sbb
jg
cmp
jmp
add
pusha
mov
inc
sahf
mov
and
gs
ret
mov
and
and
shrb
push
xchg
jns
jbe
dec
xlat
cmp
push
jmp
xor
xchg
jp
mov
and
popf
fs
cltd
andl
mov
scas
push
daa
mov
ficoms
shll
and
and
and
js
dec
mov
faddl
inc
dec
hlt
jp
pop
cmp
jp
mov
adc
sub
in
adc
stc
pop
bound
popf
cwtl
adc
imul
push
sbb
jmp
gs
scas
stc
ljmp
jne
loope
pop
push
lcall
jae
adc
incb
add
fisubrl
movsl
xlat
jg
pop
aas
ss
cmp
mov
jne
adc
movntq
jb
fs
adc
adcb
and
inc
lods
loop
pop
inc
stc
fstps
movsb
testb
mov
push
inc
dec
pop
fldenv
scas
mov
je
mov
or
ret
fstpl
mov
xor
repz
mov
dec
nop
or
test
push
enter
and
mov
subb
inc
mov
and
addr16
sub
outsl
mov
into
test
in
loope
mov
out
xchg
add
call
cs
dec
dec
xabort
fisubrs
and
push
cmpsl
push
sarb
mov
test
int3
add
push
insb
in
jno
repnz
aam
inc
xchg
pop
adc
mov
loopne
insl
push
mov
push
les
mov
test
pop
mov
clc
aaa
pusha
movsl
jmp
stos
xchg
push
mov
jae
mov
adc
cmp
std
cmpsb
jno
and
ret
iret
cmp
add
mov
pop
enter
lcall
roll
test
add
mov
mov
adc
mov
mov
andl
xchg
inc
fwait
popf
sbb
inc
sbb
add
sub
cmp
xchg
inc
into
mov
lock
add
push
push
push
jg
xchg
push
lret
test
pop
mov
test
or
push
lcall
bound
mov
nop
pop
out
jae
addb
sbb
popf
sbb
mov
call
les
in
jae
pop
ret
pop
movsb
insb
pop
adc
enter
rorl
cmp
pop
pop
fisubl
mov
mov
dec
xor
fucomi
jns
mov
and
jge
mov
cmp
push
jle
push
and
mov
push
inc
adc
icebp
loopne
mov
imul
jge
loop
in
xor
add
outsl
push
aaa
test
aas
mov
incl
and
fstl
inc
inc
aas
incb
or
les
pushf
daa
dec
dec
jns
iret
jnp
in
mov
push
mov
cltd
in
adc
ljmp
push
sbb
push
sub
jno
add
icebp
jb
sarb
mov
ljmp
dec
pop
flds
and
xchg
sbb
test
and
jecxz
dec
arpl
imull
sub
sbb
andb
push
adcl
inc
mov
pop
dec
push
out
rcl
or
xchg
sbb
mov
jmp
cwtl
in
adc
add
addb
repnz
cmp
sbb
inc
add
cmp
aaa
lret
xchg
mov
cmp
xchg
stc
push
pop
xchg
fdivl
adc
cmp
mov
xor
pushf
mov
gs
das
sbb
ljmp
jge
or
daa
jo
in
fists
xor
mov
mov
repz
loope
mov
movsl
repz
sti
cmp
nop
mov
jbe
cmp
ss
mov
lock
lahf
add
in
mov
sub
pop
push
push
ret
jle
push
loop
call
push
andb
stos
xchg
jp
mov
dec
repnz
cwtl
enter
mov
ja
imul
adc
bnd
mov
aas
lcall
mov
dec
mov
sub
rcrb
fstl
sub
hlt
and
pop
out
insb
inc
jp
cli
adc
sahf
xor
inc
scas
push
setae
mov
aad
in
xchg
jno
dec
jnp
xlat
addl
cmpsl
mov
inc
pop
sarl
mov
ja
pop
or
mov
popa
jle
pop
daa
mov
ret
shrl
sub
cs
pop
adcb
test
dec
cmp
push
movsl
xchg
dec
dec
popa
pop
mov
lcall
push
inc
xchg
lret
or
ja
push
push
mov
xor
fs
stc
adc
jno
or
mov
push
xorb
pop
dec
cmpsb
lods
test
mov
mov
outsl
jb
fwait
cwtl
iret
adc
cmc
fdivl
lea
jns
jb
ret
stos
pop
les
dec
dec
aaa
rol
into
push
pop
rorl
orb
xorb
sahf
cmpsl
lret
and
jb
sub
sbb
iret
bound
xchg
out
and
inc
mov
out
pusha
je
in
hlt
pop
xor
insb
mov
mov
mov
and
pop
je
je
negl
xchg
pop
xchg
push
insb
ss
std
imul
pop
into
add
jo
clc
mov
lods
jns
scas
int3
dec
shl
cs
cs
xor
aad
out
lock
test
jp
ss
in
sub
mov
jno
rcr
or
sbb
out
pop
sub
pop
push
arpl
stos
rolb
outsl
repz
stos
icebp
and
add
jo
gs
fiadds
adc
mov
ljmp
lret
adcb
and
mov
rcl
xor
dec
mov
add
ret
push
and
push
add
xchg
and
nop
enter
lahf
lahf
les
gs
cmp
xor
lock
cltd
or
or
xchg
and
pop
movsb
sbb
rolb
lods
xor
cmp
test
sbb
stos
clc
sub
dec
daa
das
mov
imul
and
movsl
push
mov
test
fildll
xor
xchg
bound
dec
aas
fisttps
cmp
lret
inc
sub
jno
insb
fdivs
aad
mov
push
stos
dec
push
adc
xchg
mov
in
mov
jecxz
add
pop
sbb
xchg
into
test
jmp
mov
rorb
inc
in
jle
mov
cmp
xor
xchg
push
int3
fstpt
mov
mov
fists
sbb
test
leave
mov
jb
out
iret
or
not
pop
insb
in
adc
imul
ficoml
aaa
call
mov
sbb
pop
imul
xchg
cmpb
push
mov
inc
push
xor
mov
dec
fcmovnb
mov
loope
loop
cmc
xchg
sbb
loopne
dec
add
es
add
lea
push
and
rorb
cmpsl
and
adc
mov
lret
push
andl
nop
repz
sub
sub
adc
jg
lcall
aas
scas
xchg
lds
adc
nop
aas
ja
inc
add
xor
mov
test
test
xchg
fiadds
jg
sarl
cs
inc
pop
sbb
mov
or
jbe
mov
sub
mov
dec
mov
xchg
sbb
data16
push
jmp
lea
add
pushf
pop
push
xchg
dec
in
nop
in
test
jp
in
or
dec
mov
jnp
mov
pop
into
sbbl
enter
mov
mov
insb
sbb
ja
shl
push
fwait
in
sbb
hlt
pop
ficompl
shlb
push
or
dec
cmp
adc
cli
vmovsldup
inc
lcall
call
fstp
mov
out
jnp
sub
mov
nop
into
cwtl
adc
scas
mov
jbe
cmp
jae
sub
or
add
jns
jo
iret
gs
push
inc
sbb
jge
push
loope
add
or
push
out
push
dec
shl
mov
mov
sbb
dec
xor
mov
bound
mov
mov
xor
add
push
mov
mov
jmp
out
sbb
insb
movsl
push
ljmp
subl
inc
mov
lock
jo
or
xchg
xlat
adc
pusha
jns
adc
pop
ret
push
mov
pop
addb
sbb
je
jo
cmp
pop
daa
cmpsl
fwait
lcall
mov
pop
popa
jmp
out
mov
addr16
mov
sbb
loopne
push
or
in
in
stos
in
popf
xchg
mov
sub
stos
leave
push
inc
and
shr
push
dec
pop
xchg
cmp
add
jns
ficoms
pop
lahf
je
test
lods
sbb
fisubs
mov
mov
ret
fdecstp
mov
stos
orl
aad
aaa
cmp
xchg
lcall
into
push
inc
inc
mov
mov
jmp
inc
mov
pminub
loop
mov
jno
xor
fsubs
int3
das
mov
fdivr
cli
cmpsb
inc
jmp
les
xor
mov
test
adc
push
shl
mov
outsb
xor
das
js
sbb
outsb
sub
rorb
mov
jb
jp
lock
loop
clc
jo
mov
xor
adcl
clc
mov
mov
xchg
mov
and
lods
sbb
mov
jle
xchg
test
int
mov
sbb
adc
ljmp
aaa
shrb
pusha
subl
cmpb
rcrl
push
gs
jg
cmpsl
mov
cmp
adcl
lcall
ficoml
mov
movsb
ds
std
push
in
dec
repnz
dec
lahf
xchg
mov
and
cmpsl
sbb
mov
mov
ficoml
add
cmp
sub
ficoml
cmpsl
mov
popa
roll
mov
pop
dec
shlb
xor
mov
hlt
pop
add
icebp
cli
lock
pop
mov
mov
jns
iret
cmpsb
dec
or
out
cmp
inc
scas
pushf
fsubrl
popa
out
or
dec
add
sbb
fucom
xchg
dec
aas
test
frstor
jg
pop
adc
pop
test
test
rcr
inc
pop
pop
iret
mov
decb
pusha
jl
fsubr
mov
test
xchg
adc
xchg
sbb
je
add
dec
insl
sub
nop
sbb
push
sub
loop
adc
mov
adc
inc
sbb
dec
push
mov
lods
cmc
xchg
fwait
mov
test
push
push
xchg
mov
cmp
aad
inc
push
imul
xor
mov
std
add
outsb
stos
clc
cltd
cmp
jge
mov
push
cmpsb
int3
pop
test
cmpsl
xor
int3
add
cmpsl
push
imul
loope
scas
jmp
cmpsl
lcall
lea
bound
es
insl
adc
cmp
xlat
loope
popa
sub
mov
or
sbb
push
cmpl
jnp
lret
jl
pop
out
leave
ljmp
andb
dec
mov
and
and
psrld
cwtl
decl
xchg
cmp
ja
movsb
mov
sub
push
cmpsl
das
pop
fcompl
mov
clc
push
inc
push
mov
jno
lcall
lock
inc
scas
cltd
gs
xchg
jne
mov
cmc
cmpsb
scas
inc
adc
sub
cmpsb
jge
int
cmp
out
mov
xchg
fimull
jae
sbb
inc
cmp
pop
push
jne
in
mov
jnp
inc
cmpsl
leave
xor
push
sub
jle
loope
or
mov
icebp
push
pusha
lret
cmc
mov
popa
lea
rclb
jne
insl
cmp
in
sti
insb
adc
daa
int
add
push
repz
mov
cmp
out
aaa
cli
jp
fs
jle
inc
mov
cs
ret
or
cmp
aaa
test
fistpll
outsb
mov
lahf
pop
mov
sbb
cmp
add
or
cmpsb
mov
fsubrl
ret
xchg
mov
mov
sub
dec
sbb
fs
jmp
xor
cmp
fdivs
mov
pop
jae
push
and
jno
cmp
mov
or
subb
test
sub
mov
inc
cmpsb
rolb
mov
add
mov
sub
out
or
aam
sub
mov
test
push
xor
pushf
pop
pop
stos
cmp
out
ret
and
addr16
lock
cmp
jns
pop
ja
sbb
pushf
lret
mov
sbb
mov
pop
pop
xorb
jg
into
lods
fwait
lcall
add
or
sbb
mov
jmp
mov
jmp
and
jl
push
jl
loope
leave
fsubrs
lock
lret
push
loop
movb
sbb
lods
add
mov
movsl
xlat
mov
stos
addr16
clc
and
inc
dec
nop
dec
mov
stos
ljmp
dec
scas
push
or
lods
and
aaa
jge
in
push
out
negb
ja
stc
mov
jnp
lock
or
mov
popf
and
loope
add
jle
adc
mov
lcall
std
add
ja
mov
xchg
push
aas
mov
pop
es
cmpsl
mov
xchg
or
mov
jae
adc
loope
jecxz
sbb
mov
lcall
mov
loope
cmp
sti
xor
popa
repz
sbb
rorb
ljmp
arpl
lods
adc
inc
mov
jp
outsb
daa
push
jle
data16
ss
mov
mov
bound
jge
or
lods
fbstp
adc
sbbl
leave
sub
cs
cmp
outsl
xchg
imul
mov
push
pushf
out
mov
movsl
rolb
push
lcall
outsb
lahf
inc
icebp
pop
lea
jmp
mov
lock
push
roll
cld
add
add
add
jae
mov
mov
shll
cwtl
jl
lret
and
call
aaa
lcall
aad
sub
pop
cld
or
pop
mov
ret
xchg
dec
xchg
mov
add
sbb
push
adc
mov
fisubl
mov
cmp
push
jb
inc
andl
mov
mov
aaa
not
xchg
in
sub
cltd
les
add
jae
sbbl
push
and
jle
or
call
jecxz
clc
fs
jg
cld
sub
push
in
mov
push
rorl
mov
dec
xlat
cmpsb
mov
pop
mov
adc
rsqrtps
pusha
pushf
stc
and
gs
or
mov
xor
mov
cs
mov
sub
inc
mov
incb
sbb
inc
push
pushf
or
shll
cs
mov
movlhps
aad
stc
xlat
imul
pop
cmp
sbb
rolb
jmp
push
out
shlb
mov
pop
int3
testb
std
inc
les
inc
pop
fsubl
imul
out
movsl
movsl
data16
fs
push
mov
shl
adc
out
fcmovbe
pop
es
adc
mov
pop
icebp
inc
fsubrl
or
lcall
cmp
pushf
or
pop
xor
fwait
es
shll
and
mov
jg
cs
mov
or
fistl
cmp
imul
test
aaa
pop
cmp
sarb
push
pop
test
aam
xchg
sub
faddl
dec
or
add
mov
js
cmp
mov
paddusw
scas
ss
mov
lea
pusha
out
and
xlat
pop
and
out
and
movsl
popa
sahf
aad
js
push
fcmovne
pop
test
cmp
cmp
jo
jb
dec
mov
jecxz
hlt
jno
adc
push
and
sub
mov
mov
jo
jnp
pop
cmp
test
lret
jmp
or
sahf
push
jns
repz
push
push
sbb
push
test
rorb
test
filds
sub
or
jo
int
stc
jecxz
movsb
addb
jb
icebp
adc
arpl
mov
inc
sahf
fidivrs
insb
or
mov
push
add
ror
xor
adc
jl
sub
fistps
pop
enter
cmp
in
pop
add
in
das
std
callw
nop
cld
sub
int3
inc
outsl
xor
fisttps
xchg
xchg
dec
add
lret
inc
punpckhdq
mov
idiv
addl
ja
sub
hlt
add
out
adc
fidivrs
jo
mov
jecxz
iret
test
cmp
ret
jge
sbb
sub
pop
rorb
ja
loope
aas
dec
lods
xchg
addr16
jb
cmp
in
mov
sarb
mov
xchg
ret
test
cmpsl
pushf
out
popa
idivb
push
ret
aas
dec
pushf
jl
or
insl
lcall
xchg
stos
jp
int3
adc
adcb
mov
hlt
dec
xchg
fsubp
lock
mov
mov
hlt
addr16
sarl
xchg
dec
inc
loope
stos
adc
in
loopne
push
js
imul
or
mov
cmpsb
fwait
imul
sbb
out
stos
cs
nop
out
cvtpi2ps
ljmp
cwtl
les
cmp
add
movsl
sbb
cmp
in
daa
sub
xchg
xchg
dec
dec
sar
mov
mov
pusha
into
loopne
lret
shlb
icebp
mov
iret
adc
popf
jb
stos
fisttpll
mov
test
mov
mov
push
out
jne
fwait
push
jge
int3
fildll
mov
lock
pushf
loop
adc
cmc
sub
ficomps
and
adc
xchg
push
js
push
xorb
xor
pusha
cmpsl
scas
pop
adc
inc
movsl
sub
mov
mov
cmp
cmp
mov
push
mov
loope
out
notl
lahf
std
push
and
push
stc
adc
push
dec
shll
mov
jbe
cwtl
cmc
shrl
pop
insb
aad
add
inc
jle
ficoml
cmpsb
pop
cmc
push
xchg
orl
daa
fistps
mov
pop
jnp
call
mov
adc
push
sbb
aas
shlb
mov
lahf
and
sbb
fnstsw
add
addr16
icebp
popa
sbb
sar
dec
push
xlat
adc
cs
negl
adc
in
push
je
repnz
xchg
adc
aam
xor
xor
xor
aas
jl
outsb
cmp
cmc
out
lods
test
mov
sbb
stos
inc
cli
jnp
cmpsb
xor
fcmovb
add
cs
jo
sub
je
dec
outsl
jle
sub
jo
shrl
inc
pop
addb
xchg
gs
push
popa
mov
movsb
insl
mov
les
inc
mov
sbb
jne
cmpsl
les
jne
jge
add
xor
shl
pusha
sub
mov
mov
data16
mov
pop
mov
dec
or
out
movsl
insb
jae
and
and
dec
jle
add
aam
out
cmp
jg
data16
lret
dec
shr
xchg
rcr
mov
aas
jns,pn
cmc
ss
dec
outsl
sbb
sbb
mov
jmp
pop
loopne
std
xchg
cmpsl
dec
les
and
cli
repnz
adcl
icebp
adc
jnp
loope
cwtl
je
out
lret
mov
sub
mov
les
dec
lods
add
jae
sub
lret
sub
pop
ss
cmpb
sti
add
and
mov
cmpsl
push
xchg
aam
loopne
push
mov
test
dec
test
mov
dec
push
inc
ror
sub
xor
jbe
insb
pop
pop
addr16
push
sub
lcall
sbb
aad
add
data16
jecxz
mov
pop
push
mov
lock
enter
aam
push
push
jecxz
lea
stc
fbstp
push
jae
xchg
mov
mov
hlt
xchg
outsl
fdiv
out
cld
add
jns
jl
adc
scas
push
fwait
ds
out
fwait
rcll
mov
add
repz
into
pop
dec
fadds
addr16
pop
dec
sbb
jge
ja
iret
and
movsl
mov
mov
jmp
pop
insb
lret
lds
adc
inc
mov
in
and
call
xchg
mov
ds
mov
pop
ret
xor
mov
es
mov
sbb
lret
sub
scas
sub
push
subb
sbb
xchg
pushf
sub
jge
jp
stos
jb
bound
mov
in
jb
pop
gs
cli
jg
jo
push
test
mov
push
leave
pop
xlat
or
and
and
xchg
pop
add
add
jno
adc
outsl
push
dec
jbe
out
int
test
pop
inc
mov
out
jae
adc
mov
and
cld
ret
inc
jp
aam
jae
imul
inc
fisttpll
push
fdivrl
fcoms
clc
mov
neg
mov
das
mov
sub
inc
jl
inc
ljmp
test
mov
in
dec
sahf
xor
cltd
loopne
mov
xor
lods
cmpsl
adc
das
aam
mov
fisubrs
adc
dec
cli
fnsave
sbb
xor
popa
cmp
jmp
daa
movsl
les
sub
loop
repz
pop
arpl
rcl
mov
call
pop
sahf
imul
pop
fsubrl
pop
das
std
mov
pop
outsb
jl
cmp
mov
je
push
bound
ret
pop
jne
outsl
nop
inc
dec
scas
ret
mov
jle
aam
push
jb
ljmp
gs
add
xchg
lock
rcrl
push
xor
lret
in
cwtl
and
into
xchg
inc
lods
mov
cmp
bound
shr
out
hlt
sbb
popf
icebp
lret
fs
pop
sub
out
or
xchg
in
jnp
enter
inc
ss
ljmp
loopne
xor
imul
dec
and
pop
adc
leave
pop
fldpi
push
cmp
cmpsb
xchg
mov
cmp
stc
fildl
sub
andb
inc
testl
mov
pop
in
nop
sub
inc
jne
inc
aas
nop
mov
sbb
dec
dec
sbb
pop
mov
push
or
cmpsl
shl
lods
in
stos
or
jmp
push
xchg
xor
roll
sbb
gs
ja
cwtl
xor
clc
pop
cltd
dec
nop
adc
jbe
fsub
cltd
stos
jge
and
or
lahf
pop
and
test
bound
or
ret
pop
mov
lcall
out
mov
jp
mov
mov
negb
push
jno
mov
jnp
mov
sbb
outsl
icebp
mov
scas
ret
pop
fwait
cmpsl
xchg
sub
sbb
fs
out
dec
cmp
stc
adc
cmp
std
cltd
push
inc
test
cmp
mov
rcrl
or
pop
leave
fnstsw
jno
xchg
lret
negb
or
push
lret
lock
cltd
add
push
lock
mov
mov
mov
enter
rorl
xor
fcomi
jo
addb
fwait
push
or
inc
xchg
data16
and
mov
outsl
inc
aas
int
nop
mov
into
jg
mov
gs
insb
fnstcw
movsl
test
das
mov
inc
sub
and
lret
popf
sbb
fisttpl
adc
lcall
lahf
push
push
pusha
pop
pop
stos
push
sub
fcmovnbe
shlb
adc
jnp
notb
or
js
cwtl
clc
dec
nop
sbb
push
sbb
pushf
dec
arpl
nop
xor
and
sti
or
xor
leave
add
out
pop
and
mov
dec
cmpsb
movsl
loope
push
mov
repz
faddl
stos
cmp
add
daa
clc
shr
push
mov
mov
lret
push
push
or
push
aas
xchg
and
cmp
es
seto
lret
and
fimull
shlb
movl
push
out
push
mov
mov
xor
jne
jl
incb
sub
into
pop
mov
mov
divb
int
inc
sbb
xchg
repz
subb
dec
push
sbb
xchg
adc
jle
and
jae
jae
xchg
pop
aad
loop
and
icebp
push
or
test
gs
aaa
pop
fsubl
cmp
movsl
in
add
outsl
les
lcall
scas
adc
lock
xchg
sarl
scas
les
sbb
pusha
sub
jb
mov
out
cmpsl
xor
push
adc
jno
std
pop
sbb
jbe
and
rcll
in
sbb
pushf
mov
sarb
pop
cmp
jb
pop
cld
es
out
aam
or
push
outsb
es
int3
mov
inc
sbb
outsl
push
sbb
das
repz
loope
jno
popa
int3
xchg
lahf
pop
shrl
push
adc
xor
das
xchg
xor
xor
xchg
mov
ss
push
pop
sbb
lea
xchg
jecxz
jnp
inc
insl
pushf
pop
pop
outsl
adc
add
loop
and
sbb
stc
sub
std
movsl
dec
pusha
test
push
insl
push
hlt
ffreep
lods
or
mov
bound
aam
jle
sub
test
pop
scas
mov
mov
inc
lock
mov
shrl
test
xchg
push
mov
xchg
and
mov
adc
mov
xor
int
iret
jnp
dec
jecxz
sub
cs
lret
jo
jp
and
dec
ss
daa
sub
mov
shl
push
repnz
cmp
dec
cmpl
enter
pop
mov
mov
cltd
xor
and
loopne
dec
and
pop
fistpl
mov
inc
push
bound
cmp
mov
pushf
aam
jmp
scas
outsl
pop
fdivrl
call
lods
bound
inc
mov
imul
jo
xor
xor
mov
test
call
cmp
daa
lret
mov
or
les
mov
mov
in
outsb
pusha
fcmovu
mov
jae
insb
add
jp
hlt
repnz
and
xchg
mov
inc
arpl
xchg
sub
mov
outsl
fnsave
fimull
dec
into
push
jb
out
sub
lret
mov
xor
jns
xor
dec
jno
pop
push
adc
insb
in
dec
or
and
clc
xor
cmc
psrlq
jle
dec
sbb
and
mov
sub
mov
adc
cmpsl
test
jmp
mov
divl
mov
lods
mov
push
inc
dec
dec
jnp,pn
mov
sub
je
in
aas
jge
cmpsb
mov
inc
inc
pop
les
push
or
mov
xchg
sub
jge
outsb
ljmp
repnz
inc
mov
jg
xchg
loop
stc
lret
cmp
jecxz
xchg
inc
iret
push
mov
aam
imul
mov
and
mov
imul
mov
inc
fnstenv
aam
out
jno
out
dec
stos
int
call
and
fs
cs
jmp
or
jg
repnz
outsb
xchg
cmp
lods
cld
xchg
or
mov
push
jbe
push
xchg
xchg
mov
je
adc
mov
popf
imul
lahf
xlat
or
dec
jp
xor
or
xchg
insb
cld
xor
arpl
add
and
jecxz
or
xchg
dec
cld
adc
or
shl
lods
sbb
adcl
in
nop
xor
dec
sub
into
test
mov
stos
push
dec
pop
repnz
jbe
push
sbb
lret
pop
mov
dec
push
in
notl
in
lcall
sbb
sub
adc
mov
mov
les
mov
pop
mov
or
les
mov
hlt
jb
mov
fsubrl
icebp
es
jl
in
sub
lods
sbb
call
aad
mov
pop
xor
shlb
cwtl
ja
cmp
or
lds
xchg
out
adc
stc
shrl
adc
adc
es
jo
dec
insl
cmp
and
jle
imul
and
lret
insb
dec
dec
cmp
push
fucomi
aas
scas
repnz
mov
into
ret
mov
sbb
test
mov
push
popf
test
in
inc
loopne
or
int3
or
repz
insl
mov
shlb
mov
mov
or
cmp
push
negb
sub
mov
jbe
or
pop
mov
dec
jnp
inc
cmp
mov
lock
vrcpss
inc
bound
jp
or
mov
sub
sbb
inc
push
and
repnz
and
lods
and
out
mov
inc
cmp
mov
aaa
in
fcoms
xchg
push
xchg
lahf
in
cld
ret
movsl
das
sahf
mov
in
dec
fdivs
push
repz
xor
push
cmp
or
adc
iret
push
sbb
dec
xor
mov
out
dec
sub
mov
out
mov
jecxz
cmp
or
xor
iret
lahf
or
sub
pop
pop
aam
std
xchg
adc
mov
lods
mov
add
decl
clc
cmpsb
iretw
mov
sahf
mov
mov
aad
jmp
aad
test
push
dec
loopne
add
aam
push
sarb
lock
sbb
adcl
mov
nop
leave
dec
movsl
scas
pop
inc
adc
pop
dec
mov
dec
out
mov
cld
inc
shrb
dec
xor
es
loop
inc
imulb
fistpl
xchg
add
jmp
jmp
and
cmp
int3
ds
popf
cmpsb
pop
imul
sbb
and
in
flds
inc
sahf
icebp
pusha
lods
sub
push
lea
std
cmp
push
inc
mov
sbb
decl
mov
xor
pusha
jecxz
fstpl
ja
imul
jns
pop
and
lods
xor
xor
rolb
jae
inc
adc
addr16
jl
fldcw
jo
push
add
shrl
shrl
in
cmp
inc
jno
sbb
call
cmp
addr16
mov
push
xor
add
jp
sub
repz
stos
pop
imul
jle
les
ss
loope
mov
mov
xchg
or
repnz
pop
and
mov
pop
es
jnp
cmpsl
scas
lods
movsl
inc
xchg
cli
in
mov
adc
mov
lock
pop
sub
out
mov
cmp
mov
mov
cmp
fsubrl
adc
inc
sbb
adc
mov
mov
fldt
and
pop
fsubrl
rolb
or
cld
or
arpl
xchg
jno
sbb
aad
xchg
sti
stos
jl
mov
fsubs
mov
imul
mov
pusha
gs
cmpsb
jnp
cmp
or
int3
in
cmp
sbb
adcl
in
or
pushf
fs
adc
scas
int
nop
lret
ss
pop
and
lock
call
push
leave
stc
sahf
and
xchg
lds
inc
inc
jg
xchg
pop
lods
push
cld
cmp
jbe
loopne
lahf
loope
xchg
andl
int3
arpl
lds
adc
or
cmc
nop
les
or
mov
aam
daa
sub
sbb
pop
push
bound
lahf
popf
and
bound
sub
xchg
mov
popl
mov
loop
lock
out
push
cmpsb
sbbl
cmp
adc
push
cmp
cmp
shlb
aam
movsl
mov
popa
sahf
dec
in
daa
pop
push
fs
push
das
add
aaa
cltd
lret
inc
lea
lahf
sbb
gs
mov
fxch
leave
add
mov
std
stc
mov
into
mov
mov
and
shlb
fadd
dec
jecxz
fnsave
sbb
or
inc
cmpsl
mov
jl
lret
stos
or
imul
sbb
dec
and
lock
adc
xchg
mov
nop
scas
out
movsl
daa
mov
and
in
fstl
add
jmp
mov
out
pop
mov
mov
cwtl
cltd
jge
and
shll
mov
dec
add
xchg
mov
arpl
cmc
popa
push
xor
daa
cmp
xor
int
ret
hlt
out
fistpll
es
and
outsl
sbb
jns
push
jbe
mov
mov
fadds
stc
andb
mov
xor
add
dec
sub
pop
add
inc
xchg
xchg
out
stc
pop
dec
popa
xor
mov
outsl
fwait
xor
shr
jae
outsb
push
jecxz
mov
out
andl
out
divl
jecxz
addr16
jns
stos
in
je
mov
insb
jnp
jp
pop
call
dec
push
add
xor
or
test
pop
push
out
data16
cmp
icebp
sar
loopne
lock
jmp
xchg
in
cs
outsb
gs
pop
out
pusha
sarb
adc
xchg
into
iret
stos
xchg
ret
sbb
inc
jno
xor
xchg
pop
xchg
sub
test
sahf
lahf
jp
mov
mov
jo
xor
dec
sbb
cmp
gs
mov
fwait
ret
xor
jecxz
aaa
icebp
pop
push
and
dec
jmp
cmpsb
jns
push
lods
inc
stos
mov
adc
sub
xor
dec
adc
ljmp
mov
lahf
out
or
and
pop
and
out
dec
or
pop
ja
push
and
push
fmulp
mov
inc
incb
js
xchg
ja
xchg
push
mov
mov
inc
popf
xor
lods
sti
ret
imul
jb
jnp,pt
in
xchg
pop
cmp
push
cmc
cmp
mov
ja
mov
jge
cmp
imul
lods
xchg
mov
push
mov
and
sub
decb
pop
scas
adc
cmp
stos
scas
xchg
test
int
xchg
jno
xor
mov
test
pop
inc
inc
xor
pop
clc
xor
std
cmpsb
mov
mov
pop
sub
inc
int3
cwtl
mov
aam
cmp
gs
mov
mov
inc
fisttpl
lods
into
mov
sub
sti
inc
add
in
cmp
mov
fnstcw
dec
xor
pop
in
stos
testb
call
inc
negb
pusha
xchg
mov
xchg
mov
out
add
into
cmp
cmp
out
addl
dec
aam
movsb
rolb
cmp
repz
in
xor
arpl
data16
push
mov
cmp
mov
push
push
and
scas
adc
jb
leave
mov
out
rcrl
xorb
mov
add
cli
repnz
std
mov
repz
fstps
mov
jnp
inc
inc
xchg
insb
sub
push
xlat
pop
enter
repnz
fisttpll
xlat
loop
scas
xchg
mov
cli
pop
sbb
rcrl
push
popa
mov
cli
or
jmp
xchg
mov
jbe
fidivs
js
sbb
inc
push
ret
icebp
jmp
repz
ja
jnp
sti
push
shrb
lahf
out
repnz
sbb
or
push
mov
fwait
in
xor
jp
cmp
push
pushw
insb
mulb
inc
add
stos
push
clc
dec
sbb
and
mov
cs
in
mov
lahf
dec
repz
xchg
sub
mov
mov
cmp
out
mov
in
popa
mov
lahf
dec
fstpl
push
cmc
sbbb
mov
inc
and
lock
subl
in
js
aam
mov
popf
sbb
mov
fwait
add
or
and
and
stos
cmpsl
jp
lock
push
fsubrs
pop
mov
inc
scas
mov
push
sbb
sbb
dec
lods
rclb
jne
cmp
data16
or
add
nop
loope
loopne
enter
pop
adc
pop
mov
cmp
scas
jmp
lcall
xor
inc
jl
inc
xor
jb
dec
mov
addb
and
sahf
mov
sbb
push
hlt
rcrl
sbb
in
xor
inc
lods
push
shl
and
push
cmp
insb
pop
mov
stc
fwait
hlt
outsl
jne
mov
pop
stos
xchg
add
adc
cmp
icebp
sti
fidivl
jns
mov
ja
jg
pop
push
sbb
in
mov
fdivs
cmp
xchg
jae
shl
xor
les
push
push
or
dec
inc
pop
test
rcpps
stos
add
push
outsl
cli
xchg
popa
movsb
cs
inc
clc
pop
mov
mov
push
movsb
popf
and
fwait
add
icebp
mov
popf
or
push
aas
mov
mov
out
jae
push
push
mov
fs
test
aaa
lcall
sub
mov
ror
cli
lock
jle
xchg
adcl
movsb
shlb
les
lock
inc
dec
jle
aas
adc
sub
pop
in
aam
sub
fs
mov
cltd
xchg
mov
jp
push
jb
div
in
jl
inc
hlt
sub
adc
leave
sbb
ds
cmp
int3
movsb
push
jno
test
outsl
sub
ss
push
sub
test
lea
pop
cli
push
popa
out
xchg
repz
ja
leave
sbb
int3
cmp
push
sbb
js
pop
or
ficoms
jle
mov
pop
mov
inc
jns
out
in
pop
mov
cmp
xchg
sbb
mov
call
mov
push
mov
push
cmpsl
mov
push
cmpl
add
and
movsl
jg
leave
xchg
clc
aam
and
rclb
mov
aaa
inc
cld
imul
lret
cmp
dec
out
cltd
mov
jne
aad
lret
stc
cld
daa
lds
cld
dec
iret
popf
adc
adc
jecxz
aad
rcrb
call
jbe
adc
lahf
lret
bound
call
push
ret
cmp
mov
scas
imull
insl
push
arpl
pop
popa
mov
jo
loopne
fnstcw
or
aad
push
in
xor
mov
or
adc
jnp
mov
dec
scas
xchg
mov
jne
andl
or
cltd
jmp
mov
mov
sub
test
and
and
out
roll
cmpsl
adc
jb
push
popa
in
add
jne
outsb
push
out
pop
mov
dec
dec
xor
push
mov
jb
es
roll
push
std
pop
dec
sahf
test
cmpb
push
in
ja
mov
js
call
jo
xor
in
dec
test
lret
or
cmp
jmp
dec
pop
ret
inc
sahf
cs
sub
int3
mov
push
lcall
mov
aaa
jb
test
push
fisttpll
pusha
cmpsb
inc
insl
shl
xorl
rcrb
std
cmp
sahf
sub
jno
and
or
dec
mov
fistpll
push
repnz
mov
mov
or
test
out
xor
cmpsl
inc
out
dec
mov
xchg
jo
sub
sbb
ret
mov
push
lea
add
sub
xchg
xor
scas
fwait
inc
outsb
mov
mov
push
popf
sub
pop
and
dec
push
mov
nop
dec
mov
adc
jg
sub
push
orb
in
hlt
jp
pop
xor
xlat
loopne
and
mov
jae
stc
icebp
imull
cmpsl
out
jnp
into
dec
jbe
pcmpeqb
subb
sub
xchg
test
xor
or
ds
xchg
mov
gs
fwait
loope
nop
fnsave
clc
cmp
inc
test
jae
mov
daa
cmp
movsb
mov
movsl
sbb
mov
push
push
xchg
and
jg
insl
adc
or
adc
imul
sub
jb
pop
pop
nop
int
mov
xchg
js
mov
cmpb
cmp
pop
xchg
sar
sub
push
das
imul
xchg
cmp
push
xchg
lea
js
sub
push
xchg
jae
cmp
dec
sbb
adc
inc
add
sbb
pop
dec
inc
rcrl
ret
mov
test
mov
xchg
std
add
and
mov
rcr
fistpll
inc
jge
outsl
adc
arpl
dec
test
jge
pushf
pop
jns
lock
cmp
push
add
sbb
dec
mov
shlb
sub
sbb
and
cmc
movsb
pop
loope
pop
or
lods
out
lahf
scas
push
dec
dec
lcall
mov
cmp
dec
push
push
cmpsb
xchg
or
adc
aaa
sbb
clc
cmp
mov
adc
sub
js
sbb
mov
nop
jns
pop
cmp
xchg
movsb
xchg
push
gs
xchg
ljmp
nop
repz
mov
sbb
dec
out
sub
inc
sub
int
push
ljmp
lret
or
fldl
dec
xor
ds
gs
adc
testl
out
push
pop
leave
xchg
or
daa
mov
lcall
mov
mov
sbb
sub
cmpb
outsl
mov
jecxz
jg
bound
rolb
je
pop
shll
push
add
scas
dec
lock
test
adc
push
fucomp
fistpl
test
jo
and
int
cwtl
sub
lds
inc
shl
push
rclb
push
popf
lret
xor
aad
mov
movsl
mov
xchg
xor
movsb
add
sti
fwait
inc
dec
cmp
and
pop
negb
or
sub
nop
icebp
lcall
ss
xchg
push
fisubrs
mov
xlat
cmc
dec
pop
mov
or
sub
cltd
mov
cmpsl
test
jge
popa
adc
cltd
test
pop
jnp
shll
mov
hlt
jno
lcall
mov
cmp
xchg
pop
lret
daa
adc
lcall
and
xchg
mov
sub
ficompl
inc
add
call
nop
push
xchg
dec
pop
test
mov
inc
dec
or
rcrb
adc
test
incl
dec
jb
and
test
sub
pusha
ror
add
test
fistps
lds
jmp
in
add
cmp
dec
cmpsb
mov
in
add
jmp
lret
cmpsb
shl
je
inc
mov
jge
xchg
jmp
cltd
test
jg
push
imul
popf
ds
repnz
dec
daa
adc
push
and
dec
mul
pushf
push
int
xor
mov
mov
sbbb
sar
std
or
int3
xlat
negl
out
sub
push
fs
sub
fidivrs
push
add
adc
je
xor
mov
and
cmpsb
movsl
gs
and
add
les
sub
sbb
cmc
pop
mov
sub
and
mov
xor
add
notb
stos
js
sti
aas
sbb
mov
cltd
jns
pop
add
pusha
mov
push
cmpsl
lock
mov
in
push
ss
mov
lds
xchg
lahf
mov
mov
loop
std
ret
pop
faddl
push
stc
cs
fstpt
jbe
add
sub
and
pop
jmp
aas
xchg
adc
or
dec
inc
mov
pop
les
popf
rcrl
repnz
push
adc
add
shr
mov
adc
adc
add
and
ret
xchg
testb
and
dec
imul
repz
pusha
cwtl
jns
mov
sub
mov
fcomi
int3
sub
mov
in
in
popf
push
sbb
pop
stc
icebp
ret
dec
push
push
sbb
aam
aaa
dec
xchg
sbb
lcall
mov
shr
cmpsl
dec
jo
jmp
je
sti
mov
mov
adc
lods
push
ljmp
mov
cmpb
data16
jbe
notb
cmp
mov
sub
gs
fistpll
lret
jg
mov
movsl
sbb
pop
pop
dec
movsb
sub
lock
cwtl
mov
mov
or
fistpl
or
sbb
bound
cld
insb
popl
cmp
xor
dec
push
in
mov
popa
pop
into
rsqrtps
movsl
das
std
repnz
jl
popa
jle
pop
fwait
cmp
shrb
fwait
mov
int
mov
imul
lahf
ljmp
shrb
fwait
xchg
pushf
and
sub
or
mov
jae
cmp
fmull
int
and
mov
stos
xchg
xchg
les
std
leave
xchg
imul
sub
sbb
insl
jp
je
add
dec
cmpsb
aas
xchg
cli
cs
jns
jne
and
dec
inc
ljmp
inc
fbld
xchg
sub
push
push
testb
cmp
movsb
jno
stc
lods
cmpsl
lret
pop
hlt
jp
gs
movsb
cmp
pop
ja
or
jle
testl
notb
sbbl
imul
xor
inc
jmp
push
cmpsb
push
loope
js
mov
xchg
addr16
pop
insb
pop
xor
inc
rclb
iret
adc
fs
cmp
jnp
xor
mov
mov
xorps
cmpsl
mov
dec
jp
in
int3
xor
or
imul
andl
mov
imul
into
xchg
push
sub
insb
cs
lock
mov
dec
add
pop
scas
ds
test
sbb
xchg
xor
outsb
push
push
movsl
inc
xchg
outsb
rcrl
clc
mov
add
mov
mov
out
cld
mov
addl
push
negl
lock
xchg
fadd
and
jne
popa
icebp
jbe
dec
inc
les
je
lock
add
inc
sbb
add
adc
jmp
cmpsb
lock
int
pop
in
or
insl
pop
or
test
push
inc
mov
nop
repnz
lea
lahf
dec
lret
orl
inc
cmp
lret
or
push
jns
loopne
sti
test
inc
add
or
pop
and
inc
nop
jne
push
ds
out
sbb
lds
out
push
jp
or
cmpsl
sarb
cli
pusha
divb
xchg
pop
test
pop
mov
jge
sbb
or
pop
mov
or
mov
out
in
or
xor
iret
xchg
inc
push
ret
xchg
scas
mov
lods
je
in
ljmp
jp
xor
insb
cltd
mov
in
daa
aaa
dec
and
add
mov
cltd
movsl
ja
add
cltd
lahf
mov
xor
cmc
js
jge
sbb
mov
cmp
mov
xor
ljmp
sub
cli
fisubrl
pop
ljmp
or
mov
lods
push
lods
clc
enter
adc
out
std
xlat
mov
and
int3
fisubrs
xchg
sbb
ja
bnd
fcoml
insl
cli
pop
mulb
sti
jne
sbb
xchg
je
arpl
jno
or
dec
iret
hlt
test
iret
sub
or
push
popf
inc
and
fisttps
dec
mov
mov
pop
cmp
inc
dec
dec
fwait
mov
jmp
js
dec
cmp
add
xchg
scas
call
aas
faddp
js
ja
or
mov
pop
shlb
mov
cwtl
mov
es
es
add
sbb
jbe
inc
add
andb
xchg
mov
jg
xchg
pop
mov
pop
xor
xchg
out
mov
push
shl
push
cmpl
mov
sarl
movsl
mov
pop
mov
ja
jp
jne
xchg
fdivl
loope
loope
and
or
ret
leave
sti
mov
pop
es
sbb
dec
outsb
jg
sbb
out
cmp
adcb
in
lods
jl
mov
inc
push
call
dec
leave
pop
mov
nop
add
mov
cmp
movsb
or
test
sub
mov
loop
xor
dec
xor
adc
imul
movsb
mov
dec
test
loopne
cli
add
mov
xor
pop
jae
xor
scas
cmp
call
in
popl
fisttpll
lret
and
mov
pop
add
or
dec
push
test
leave
jns
xchg
ja
mov
xor
push
and
and
push
xor
ret
mov
xchg
decb
daa
add
cmp
int3
roll
fs
jae
mov
add
add
pop
inc
in
ret
inc
cmpsl
mov
movsb
test
inc
in
je
cmp
mov
sbb
inc
fildl
popf
push
popf
repnz
ljmp
jno
aam
cmp
fsub
bound
ds
clc
in
pop
int3
cld
aas
popa
xlat
mov
insl
mov
mov
shll
or
lods
or
in
mul
fwait
inc
les
jle
cmpsl
je
cltd
xor
pop
jb
ret
shll
jl
add
cmpsb
dec
dec
mov
clc
repz
inc
ja
sbb
icebp
aaa
pop
outsb
mov
iret
xor
pushf
hlt
into
xchg
or
cmpsb
sub
mov
sub
rorl
cmp
popf
cmp
divb
scas
cmp
cmpsb
adc
icebp
dec
jp
and
cmpxchg
push
mov
fsubrs
push
xor
xchg
cmp
push
sub
sub
jecxz
test
out
std
jnp
inc
xchg
xchg
inc
int
jg
lahf
push
pop
pop
cmp
sub
rcrl
adc
jne
add
xchg
sub
imul
mov
test
fstpl
sbb
ja
test
pop
or
sbb
aam
aaa
in
mov
adc
ret
inc
outsl
and
xlat
mov
lret
jmp
addr16
in
xchg
sti
jnp
fadd
jae
into
enter
fimull
es
bound
call
adc
das
into
dec
push
stos
test
jne
dec
and
mov
dec
into
loop
enter
xchg
push
inc
ret
js
xor
lods
out
test
cmp
push
jmp
fsin
jle
inc
sarb
in
xchg
hlt
push
ja
fdivs
sahf
mov
and
arpl
std
divb
jno
lea
and
orb
out
sti
jb
mov
jns
sahf
iret
andb
call
mov
add
sbb
mov
outsl
dec
inc
fbld
adc
mov
jl
xor
mov
sbb
xor
jnp
test
adc
cli
jl
inc
and
xchg
adc
push
cmp
mov
iret
les
aaa
mov
scas
sbb
or
pop
pushf
pop
pop
or
cmpsl
pop
pop
movsl
jae
and
outsl
jge
out
pop
jmp
leave
ds
jge
xor
pop
xchg
shlb
xchg
adc
mov
out
jne
sbb
in
mov
in
out
jo
movsl
sub
sahf
outsb
or
cs
jo
xchg
xor
jbe
push
idivb
lods
inc
sbb
mov
leave
in
int
dec
push
enter
and
mov
movsb
mov
popa
xchg
scas
cmc
add
movsl
xchg
fildll
mov
sub
lock
xchg
imul
or
cli
dec
inc
scas
pop
jge
sbb
adc
adc
add
stos
pushf
adc
nop
bswap
test
adc
icebp
sbb
sbb
inc
sub
iret
sbb
jb
cmpsl
adc
sub
loop
les
iret
aad
add
hlt
add
push
aaa
movsl
add
xor
repz
out
repnz
adc
ds
loop
adc
lcall
cmp
ja
jcxz
sbb
jle
and
addr16
xchg
dec
rolb
movsl
in
sub
inc
or
push
jmp
jecxz
ret
into
sub
cmpsl
inc
and
xlat
mov
mov
sahf
dec
dec
sbb
dec
mov
xor
cmp
jno
sbb
or
shrl
loope
mov
and
sub
std
ja
xchg
pop
insl
lds
add
add
cmc
mov
push
push
and
xchg
iret
scas
or
pop
ror
bnd
pop
call
loop
mov
mov
xchg
mov
int3
orl
mov
xor
bound
mov
dec
mov
gs
adc
int3
jg
inc
push
stos
movsb
sub
cmp
pop
xchg
shrl
out
xchg
pop
leave
push
fsts
cli
dec
xor
add
push
fstl
sbb
and
xchg
fdivs
inc
fldt
mov
jl
xor
dec
jecxz
mov
pop
sbb
jnp
adc
jo
movsb
dec
inc
xchg
adc
lret
lret
imul
cmpsb
dec
fistl
scas
xor
ss
imul
xchg
out
push
xchg
pop
pop
daa
or
mov
xchg
jno
xchg
xchg
popa
dec
mov
fdivrl
js
adc
je
mov
jg
fwait
addr16
mov
into
mov
enter
popa
insl
lret
loope
xlat
stos
mov
xchg
xchg
call
lods
jl
enter
cs
fildll
das
pusha
inc
rcrb
out
lds
xchg
iret
mov
jnp
divps
mov
inc
stos
mov
fists
lods
bound
aas
mov
and
dec
sub
rcll
jb
nop
push
shl
inc
dec
test
sub
pop
push
or
and
pop
jecxz
add
xor
inc
stc
push
inc
xchg
add
mov
test
pop
gs
jb
or
cwtl
ljmp
in
test
cmp
or
inc
out
sbb
inc
in
movl
mov
xchg
xor
imul
loop
adc
movsl
dec
add
push
test
cmpsb
inc
sbbl
daa
and
jnp
sub
fsubl
and
outsb
and
mov
shl
or
cmp
mov
and
mov
mov
into
popf
lahf
add
jno
stos
mov
sbb
mov
mov
fcompl
test
imul
and
and
xchg
and
cmp
sbb
and
or
sbb
dec
and
jmp
lcall
or
js
fcomps
push
pop
shll
jbe
pop
sub
jg
or
dec
or
fimull
push
inc
cld
data16
pop
shlb
mov
int3
neg
pushf
je
addr16
or
data16
aas
or
scas
dec
scas
ss
repz
push
jp
sub
fsubrp
lea
mov
cmp
icebp
sbb
into
ja
movsl
test
sub
adc
pop
fs
pop
adcb
xchg
jns
push
or
lahf
call
outsb
imul
out
shl
hlt
aam
pop
in
mov
xchg
insl
inc
cwtl
pushf
push
sub
aad
mov
movb
lcall
mov
xchg
mov
xchg
mov
jo
or
or
pop
fidivrl
jbe
cmp
lcall
jb
push
add
push
or
mov
popf
cmp
cmp
add
test
movsb
movsl
subb
sub
and
popa
cmp
dec
popa
aam
ljmp
loopne
jns
outsb
xchg
jno
ds
cli
lock
idivl
insb
les
bound
out
xchg
sbb
xchg
stc
mov
sbb
sbb
mov
js
jmp
mov
je
into
clc
mov
fistps
pop
sub
mov
das
inc
in
ja
push
mov
std
icebp
mov
cmp
mov
adc
mov
mov
and
test
aas
rol
mov
lcall
inc
add
or
mov
out
inc
lods
stc
sub
lcall
popa
sbb
imul
andb
push
or
iret
addr16
and
ret
jp
ret
lock
aas
mov
pop
cmpsl
sbb
popa
push
lea
icebp
mov
fcoms
lret
dec
sti
push
lds
or
movsl
fsub
inc
roll
xor
xorl
js
xorb
inc
lret
arpl
jne
sbb
mov
pop
adc
sub
cmp
aaa
jmp
mov
mov
mov
lcall
mov
xor
push
sub
sub
out
repnz
sti
cmc
loopne
mov
lret
cmpsl
xchg
or
fidivrl
out
jecxz
outsl
lret
or
test
xor
xchg
pop
xchg
enter
xor
lret
popf
mov
std
xchg
jge
sahf
mov
outsb
outsb
fildll
mov
int
xor
xor
pop
jl
clc
mov
jns
fldenv
jno
mov
mov
popf
arpl
cli
dec
dec
loopne
dec
mov
ret
iret
push
push
mov
or
rcr
push
xchg
lahf
mov
adcl
push
push
and
or
int3
dec
ss
sti
jge
arpl
cmpsb
movzwl
xchg
cwtl
fsubs
cli
mov
scas
arpl
out
mov
repnz
cmpsb
or
in
fldcw
push
insb
inc
ret
jo
decl
xchg
int
sahf
push
lcall
lcall
lcall
jns
pop
repnz
out
imul
pop
fxch
in
test
xor
jae
stc
add
fbld
mulb
or
push
stc
inc
cmp
xchg
xchg
mov
outsb
lcall
push
xor
push
fwait
ss
lret
jne
push
out
repz
cmp
cwtl
es
dec
popf
lods
or
loopne
xchg
push
push
je
rclb
mov
out
adc
adc
pushf
cmpb
scas
dec
insb
movsl
and
ss
repz
mov
idiv
mov
mov
push
sbb
inc
sub
pop
stc
push
fwait
and
dec
or
or
imul
add
pop
lret
in
cmp
mull
inc
sub
out
in
mov
push
cmp
xchg
shl
hlt
inc
xor
xor
dec
shl
jge
popw
mov
std
pop
inc
xlat
es
ja
pop
cmp
mov
jge
mov
jae
in
pusha
mov
loopne
fs
push
enter
insl
addr16
out
xchg
sub
jno
call
sub
scas
xor
mov
add
lret
in
fisttps
push
cmp
lods
add
jnp
jge
movsb
mov
in
lods
dec
sbb
add
xlat
shlb
jp
sub
out
mov
insl
jge
pop
mov
inc
scas
mov
xchg
pop
xchg
or
pop
dec
mov
daa
xchg
in
out
xchg
addl
cmp
adc
imul
pop
int3
add
ja
jecxz
cmc
out
jecxz
and
cli
daa
mov
shlb
es
scas
inc
inc
mov
ret
imull
adc
mov
stos
fldl
jo
cmp
int3
cmp
push
jg
xchg
push
or
push
xchg
push
push
js
out
fst
out
jb
inc
and
int
mov
xchg
inc
xchg
sub
ljmp
xchg
shlb
rolb
scas
in
add
push
pop
sub
enter
repz
and
outsb
push
outsb
cwtl
push
xor
and
mov
push
jb
loop
cmp
out
add
repz
stc
scas
sarl
std
lods
inc
ret
pop
pop
jecxz
jp
jl
ljmp
repnz
xor
leave
cmc
lock
jp
ja
fwait
in
lret
jmp
pop
xor
pop
stc
pop
mov
sub
dec
cmp
push
sbb
xchg
xchg
dec
stos
ficomps
idivl
or
in
fwait
jl
add
decl
into
dec
jns
mov
push
loop
inc
jno
pop
sbb
movsl
pop
sarb
sahf
rorb
add
lds
outsl
lcall
mov
in
ja
test
jnp
sub
mov
jns
ljmp
cld
sub
adc
push
or
pop
data16
xor
mov
sti
and
and
push
cmp
in
enter
push
cwtl
andl
fdivrs
sar
or
or
jb
xchg
xchg
mov
mov
push
cmp
movsl
jmp
xchg
push
scas
cs
cmp
mov
inc
dec
push
add
jle
fdivrp
loop
jns
mov
loop
popf
pop
arpl
cmp
mov
in
push
cmc
mov
jnp
iret
test
mov
mov
sbb
push
shrb
cmpsl
and
mov
pop
popf
push
lods
adc
movb
fmul
gs
inc
cmpl
ja
fwait
mov
stc
add
and
loopne
adc
xor
test
pusha
jne
and
data16
sub
ljmp
push
icebp
jecxz
jne
sbb
mov
pop
test
fisubrl
push
movsb
movsl
mov
adc
or
jge
cmp
jb
test
dec
xor
xchg
and
ret
call
dec
movsl
sbb
in
mov
adc
push
repz
std
sub
aaa
dec
xor
mov
mov
pop
push
mov
rcl
pop
sbb
cmp
inc
mov
into
insl
lahf
jmp
mov
adc
stc
call
je
mov
aas
mov
loopew
jecxz
mov
fsub
sbb
les
mov
mov
out
dec
xchg
cmpsl
mov
movsl
add
leave
mov
outsl
push
dec
notb
call
imul
dec
mov
in
aad
adc
roll
into
mov
jno
cmpsb
cmp
cld
movsb
sub
movsb
insb
popa
sub
sub
cmpsl
insb
sub
dec
loop
add
and
pop
pop
cmp
xchg
addr16
negb
ja
int3
sahf
xor
dec
xchg
out
insl
ret
and
sub
xor
clc
into
inc
jae
dec
add
popa
cs
adc
into
imul
sbb
jbe
das
xor
loope
push
inc
push
int
out
lea
roll
fistps
inc
gs
mov
js
mov
pop
sahf
add
icebp
aaa
xor
outsl
mov
aad
or
repz
push
inc
sbb
inc
cs
andb
call
adc
movsl
push
lcall
data16
mov
shr
pop
test
nop
js
xchg
cmc
xchg
fistl
push
sbbb
movsl
popf
ret
pop
xchg
mov
icebp
shl
mov
and
dec
ja
ds
sbb
iret
je
mov
pmovmskb
insb
xor
cmpsb
clc
push
movsb
cmp
lods
cmp
cs
sub
jl
lock
dec
inc
adc
sub
push
mov
mov
push
iret
popa
popl
dec
je
and
adc
scas
test
leave
add
push
nop
mov
jp
loope
loope
pop
mov
and
mov
lret
clc
lds
mov
cmp
and
xchg
repz
mov
int
mov
lret
pop
dec
in
xchg
add
xchg
push
movsl
jmp
or
pop
jle
sahf
inc
push
arpl
xchg
stc
mov
xor
xor
mulb
mov
mov
in
jp
sbb
cmp
fldenv
jmp
stos
into
jne
lcall
cmp
jne
or
adc
test
inc
and
add
aaa
mov
pop
cld
lcall
scas
jns
cmp
push
fwait
or
fildl
imul
mov
lea
fsub
rcrl
cli
and
bound
pop
ficomps
lret
es
mov
or
insb
pop
mov
mov
lahf
in
out
sbb
cwtl
loope
enter
rcrl
sbb
sbb
jo
push
mov
mov
jno
xor
push
loope
adc
pop
out
dec
jg
cmovns
ss
sub
and
cmpsl
cmp
dec
in
dec
dec
imul
dec
das
jne
rorl
mov
cmpsl
add
imul
rolb
rol
pop
adc
test
xchg
ss
dec
ja
scas
das
mov
lds
repnz
push
jnp
pop
loope
insw
insl
pushf
add
dec
lods
out
xchg
int
xor
in
xchg
sbb
rolb
sahf
xlat
jmp
ret
lret
cmc
mov
jbe
jmp
jnp
or
add
fbld
jmp
inc
or
mov
cmpsb
push
test
cltd
mov
mov
xchg
and
mov
out
and
mov
inc
jnp
sbb
pop
sbb
add
mov
in
jnp
cwtl
dec
xlat
or
adc
je
pop
cmpsb
push
aas
shrl
das
push
jmp
insb
ds
adc
xor
pop
repz
adc
or
mov
and
jns
inc
fwait
js
add
push
fisubs
pop
push
daa
fwait
and
mov
add
leave
aam
mov
cmpxchg
push
enter
xor
sahf
movl
aaa
std
add
jb
xlat
add
push
out
fs
pop
mov
lods
push
xlat
cltd
push
scas
loop
lret
push
sbb
stc
mov
xchg
shll
lds
ret
pop
enter
ss
fisubl
xlat
fsubr
in
add
in
mov
lahf
lds
cld
push
decb
fildll
in
dec
rolb
cwtl
jo
or
addb
or
mov
out
add
mov
leave
push
aam
jbe
inc
cmpb
xor
xchg
lahf
je
sbb
icebp
lock
sub
pop
repz
sbb
mov
popa
sbbb
in
and
fcoms
sub
mov
leave
out
fchs
or
mov
out
test
ret
mov
nop
xchg
rclb
inc
pop
sbb
pushf
pushf
pushf
imul
scas
loopne
loop
iret
mov
movsl
in
push
pop
xchg
and
shrb
sub
fistl
ss
cltd
push
lods
mov
cwtl
cmp
and
pop
loop
out
ss
push
fsub
lret
les
shlb
jl
adc
gs
stos
sbb
bound
mov
cmp
stos
icebp
sub
dec
jmp
es
push
cli
cld
mov
and
sbb
push
testb
stos
fstp
push
jb
fs
fxch
sub
inc
imul
sti
pop
popa
jmp
in
push
pop
fbstp
pop
cwtl
loop
dec
test
inc
icebp
sub
cwtl
addr16
sub
cld
cmpsl
std
insb
pop
and
int
adc
jle
mov
ss
and
mov
repnz
sbb
lcall
or
sbb
daa
lds
and
push
mov
rolb
rcr
loopne
imul
jnp
stos
lret
xor
xchg
dec
adc
mov
sahf
les
add
dec
mov
cmpsb
dec
jbe
xchg
lds
sbb
dec
daa
cmp
scas
dec
sub
pop
in
inc
pop
test
push
pop
and
stos
xchg
in
sbbb
sub
lcall
rcr
lret
js
sar
aad
loope
add
icebp
inc
dec
mov
rol
in
xor
jmp
call
fidivl
push
mov
stos
dec
sub
pusha
jbe
jns
jae
sbb
les
repnz
ds
sbb
aaa
lods
out
push
clc
mov
sub
pop
push
cmpsl
cli
jo
xchg
push
adcl
in
icebp
add
mov
clc
fildll
add
adc
push
inc
push
int3
fisttpl
mov
mov
dec
push
xor
cmp
stos
cmpsl
pop
arpl
xor
dec
cmpsb
dec
xchg
cmp
cmp
inc
mov
shr
ljmp
pop
fimull
sbb
lods
cmpsb
xor
dec
mov
les
mov
les
xor
sub
ss
mov
ret
roll
shll
xor
stc
fisubl
xchg
mov
xor
xchg
cmpsl
andb
cmp
pop
xchg
lcall
icebp
mov
stos
out
mov
and
adc
repz
test
dec
xchg
test
lock
mov
int
loopew
ret
push
iret
inc
push
in
das
or
out
test
jae
cld
mov
testl
je,pt
xchg
xchg
jge
ljmp
xor
sbb
shll
and
lock
icebp
push
adc
out
stos
pop
or
dec
adc
sbb
mov
loope
popa
aam
imul
mov
in
sub
adc
xchg
ret
dec
pop
out
orb
adc
movsb
call
bound
push
ret
out
jge
rolb
cmp
scas
jge
or
push
cmp
adc
xchg
push
orl
lahf
sub
lods
lcall
xor
jb
es
js
push
in
mov
add
cmpsb
adc
sub
xor
inc
mov
and
fxam
cmpsb
scas
ja
pop
adc
pusha
dec
sub
xchg
test
xchg
ret
aad
idivb
roll
add
pop
lret
ret
push
dec
and
inc
push
mov
lret
scas
movsl
scas
xor
mov
in
stc
outsl
mov
jo
and
push
cli
mov
pop
jecxz
repz
xor
cmp
loop
xor
out
das
dec
jp
ja
inc
leave
and
sahf
push
fdivrs
mov
adc
insb
popa
xorb
and
stos
push
xor
push
push
inc
test
push
jns
adc
mov
inc
lods
mov
mov
mov
inc
mov
pop
inc
mov
mov
cld
mov
outsb
inc
lahf
jp
dec
cmpsb
xchg
movsb
ret
movsl
cmpb
movsb
cmpsb
daa
mov
js
das
push
leave
in
mov
addr16
mov
popf
loop
arpl
add
add
mov
pushf
testb
push
pop
sahf
cmp
xchg
push
push
sub
lret
mov
jno
repnz
mov
lods
push
inc
cmp
clc
les
dec
incl
ja
lock
mov
and
js
push
add
repnz
mov
jp
pop
push
push
mov
sbb
dec
fs
in
mov
xor
pop
push
cmc
mov
mov
adc
pop
mov
mov
aad
enter
out
adc
cmp
lods
dec
cwtl
mov
cs
dec
sub
test
mov
clc
iret
mov
mov
subb
jb
rorb
inc
loopne
xchg
pop
pop
sbb
stc
jmp
movsb
dec
pop
mov
repnz
pop
push
insb
fldcw
ds
push
imul
xchg
xchg
outsb
ds
mov
int
loope
cwtl
leave
insl
mov
pop
rorl
rorb
xlat
lock
adc
in
mov
and
sbb
mov
pop
sub
inc
test
leave
mov
jecxz
xchg
imul
insb
mov
push
inc
sbb
fs
push
test
testb
in
cli
lock
iret
adc
push
fucomp
sahf
aad
dec
cwtl
push
or
loop
repz
jne
pop
jne
jae
adc
push
sbb
jne
jo
adc
call
xchg
stos
js
pop
inc
adc
fimuls
lods
hlt
push
in
cmp
mov
add
adc
in
pop
sbb
inc
hlt
loop
loopne
pop
dec
in
das
insb
sbb
or
sub
xor
inc
rorl
jp
sarb
jmp
fisubs
rorl
jg
pop
es
movsb
cmp
mov
mov
daa
pop
mov
subl
push
daa
xchg
ret
lret
ljmp
jp
repz
xor
inc
xchg
clc
orb
xchg
in
aad
push
cmp
ljmp
in
push
in
aaa
cwtl
leave
push
cmpsb
pop
outsb
sbb
sbb
out
outsl
add
jmp
loop
and
ss
mov
inc
ficoms
dec
inc
mov
and
les
push
arpl
xor
or
mov
lahf
jnp
mov
cmp
sbb
push
stos
rcrl
fldl2e
dec
dec
push
test
jne
mov
adc
adc
and
jecxz
push
fsubl
jecxz
mov
sub
jae
test
fsubrs
lcall
push
xchg
adc
adc
icebp
xor
push
sbb
test
pop
ljmp
lods
insb
cmpsl
mov
sbb
xchg
ret
rolb
pop
dec
sub
push
in
xchg
in
lcall
clc
and
outsl
jmp
loop
jnp
mov
add
xor
lahf
jns
mov
insb
roll
inc
sbb
cli
cwtl
or
sti
cmpsl
cli
xchg
cmpb
push
mov
sahf
xor
mov
leave
inc
cmp
ret
in
push
xchg
lret
popf
mov
adc
adc
movsb
push
add
andb
push
jbe
adc
jg
icebp
arpl
lret
xchg
push
outsb
aad
xchg
jecxz
aas
and
xchg
xor
cli
mov
xchg
jb
cwtl
inc
stc
adc
jle,pt
aaa
or
fldcw
xchg
sbb
cmp
je
imull
das
call
aaa
xor
or
std
dec
mov
mov
mov
addb
mov
bswap
dec
and
cmpsl
or
jmp
adc
testb
ret
pop
push
leave
mov
cmc
jno
mov
shll
mov
rclb
scas
sbb
and
and
push
sub
fistps
adc
inc
mov
lcall
sbb
mov
mov
or
mov
js
jg
inc
shll
cltd
cmp
mov
jns
es
mov
sub
out
je
mov
fcoml
jne
or
js
dec
or
xor
dec
lods
sahf
mov
add
xor
add
cs
test
xlat
cwtl
pop
loop
shll
lea
add
aam
push
je
outsl
movsb
or
movsb
xchg
jl
xchg
out
dec
jle
ja
sub
adc
sub
out
icebp
jl
mov
mov
adc
lods
data16
pop
xchg
std
push
mov
pop
enter
repnz
xlat
and
xor
pop
imull
sbb
push
cmp
fucomp
push
sbb
fistl
xlat
mov
in
sbb
sub
add
ror
xor
out
aad
push
cmp
pop
arpl
fisttpl
cld
jb
fisttpl
adc
cmc
in
sub
cmp
iret
lret
icebp
nop
push
test
push
adc
adc
or
imul
mov
xchg
loop
test
rorb
pop
sbb
mov
mov
push
adc
addl
hlt
cli
and
rcrb
cmc
mov
push
lods
testl
insb
mov
inc
fisttpl
iret
imull
add
cmpsl
xchg
es
shll
stos
dec
push
mov
int3
dec
mov
pop
cmp
pop
test
push
adc
inc
adc
js
movsl
xchg
sbb
mov
inc
push
sub
dec
int3
imull
mov
jp
ljmp
fisttpll
insb
push
insb
mov
mov
lret
arpl
mov
inc
lods
ds
loopne
movsb
mov
mov
adc
dec
dec
pop
nop
hlt
out
sub
or
xchg
js
out
and
inc
and
inc
sub
mov
xchg
jne
lahf
aas
insl
push
push
push
push
cmp
movsb
fists
jp
xchg
jns
jle
cmpsb
pop
dec
jg
xor
data16
xchg
pop
mov
adc
cmp
cmp
cmp
cltd
or
into
cmc
fstpl
jmp
out
fwait
jae
out
sub
xchg
pop
push
lock
insb
mov
mov
pop
iret
xor
fwait
lea
sub
adc
ljmp
xor
jo
loopne
jo
jno
stos
push
push
cwtl
bound
jle
andb
mov
add
mov
push
dec
fsts
movsb
aam
pop
repz
xor
aam
rorb
xor
cmp
ds
icebp
sbb
cmp
mov
lret
pop
jecxz
and
inc
je
es
xchg
push
ret
cwtl
sbb
lock
cmp
inc
sbb
and
insb
mov
jg
lret
sti
sub
or
sub
cmp
jge
mov
pop
mov
gs
jnp
rorl
into
lahf
shll
cli
xor
subb
leavew
cltd
push
mov
testb
rorl
inc
aad
outsl
imul
mov
and
inc
jle
out
ret
pop
push
out
fbld
cmp
out
icebp
inc
dec
cmc
cwtl
js
adc
movsb
mov
popa
xor
xor
sbb
pop
stc
aad
fbstp
cmp
and
cmpsl
add
jg
punpckhwd
sbb
movsb
and
clc
icebp
or
push
mov
test
repnz
add
mov
push
mov
insl
les
jb
mov
dec
xchg
ja
push
lret
or
xchg
pushf
and
sbb
pusha
add
std
fstl
movsl
into
dec
andl
sub
dec
mov
repz
inc
out
push
and
aaa
test
jae
sub
push
shrl
cmpsb
add
pop
pop
lods
push
fcoms
es
stc
jge
sbb
mov
or
xor
jle
jl
lea
jg
daa
js
or
pusha
sahf
iret
xor
lret
push
sub
push
pop
sub
xchg
insb
push
jnp
and
gs
fnstsw
mov
push
lods
subb
mov
jne
xchg
movsl
sar
sub
outsl
cmp
jns
sbb
push
lret
mov
loop
inc
insb
add
mov
enter
lea
dec
pop
mov
cs
je
mov
pop
mov
dec
inc
jnp
outsb
jb
test
ja
scas
mov
xchg
cld
std
cwtl
jo
jne
clc
and
pop
hlt
push
dec
dec
aam
mov
adc
jecxz
stos
xchg
dec
jecxz
movsl
and
pop
mov
out
in
mov
js
insb
xchg
repnz
cli
roll
mov
stos
lock
lds
ds
insl
jbe
ret
cwtl
mov
test
sahf
sub
lea
ss
mov
push
jmp
pop
push
cltd
cmc
dec
ss
xchg
mov
test
adc
popf
into
jbe
testb
in
out
rcl
inc
pusha
or
out
aas
jl
cmp
sub
dec
adc
add
xchg
icebp
fwait
jle
cwtl
loopne
jmp
imul
adc
xbegin
xchg
adc
add
popf
outsl
in
lds
repz
scas
popf
push
mov
mov
popa
push
out
add
and
push
in
es
jmp
pop
mov
lock
popa
sbb
nop
xor
mov
pop
aam
push
daa
movsl
jg
xlat
cld
jmpw
sub
pop
std
out
jl
sub
inc
dec
push
testb
xchg
jnp
out
jmp
test
mov
bound
pop
popaw
sbb
icebp
sub
loope
lds
xchg
mov
sub
mov
cmp
mov
loopne
test
xor
inc
add
int3
add
mov
int3
add
outsb
sub
fwait
repz
xchg
ljmp
test
test
rcrl
cmp
xchg
mov
addl
aaa
pop
nop
or
mov
push
xchg
pop
insb
mov
mov
jns
lahf
xchg
or
pop
stc
fisubrl
push
mov
sub
ljmp
inc
xor
add
xchg
xchg
repz
nop
mov
rclb
jle
pop
repnz
in
jne
rcll
push
add
lret
ja
sbb
mov
mov
xlat
hlt
aam
dec
mov
inc
int3
mov
or
lahf
pop
inc
scas
jne
pop
negl
cmp
out
movsl
outsb
scas
pop
jl
and
push
sub
aam
les
cmp
jp
daa
mov
mov
sbb
add
std
pop
lds
ficomps
mov
mov
js
xchg
imul
push
mov
repnz
lahf
xchg
xor
mov
inc
aas
addr16
jb
and
adc
or
push
xlat
fbld
bnd
jge
mov
pushf
sub
pop
xchg
sub
jnp
stc
icebp
cltd
cmp
rolb
pop
bound
push
lret
mov
or
and
mov
cli
mov
or
roll
adc
adcl
nop
pop
push
mov
out
and
lock
testb
mov
xor
outsl
sbb
jo
push
xchg
cs
mov
lock
enter
mov
in
ficomps
sbb
xchg
sub
sub
aam
fists
imul
and
dec
clc
pop
pop
pop
sarb
sbb
pop
cmp
out
add
sub
xor
neg
push
lahf
rolb
and
idivl
aam
jge
adc
push
or
and
scas
sbb
xor
pop
aaa
lahf
inc
pusha
mov
xchg
xchg
das
inc
aaa
pop
rcr
fidivl
and
inc
pop
push
nop
int3
test
xchg
sahf
lods
sbb
push
mov
bound
cwtl
mov
mov
arpl
out
in
in
mov
outsl
jl
add
inc
cmp
inc
and
push
jl
pop
pushf
jecxz
adcb
adc
mov
adc
jp
imul
or
and
mov
dec
orb
xchg
enter
jge
pop
test
je
ljmp
imul
cli
fidivrl
and
mov
sbb
push
inc
addr16
test
nop
mov
cli
ljmp
pop
lods
nop
into
jp
xor
push
xor
and
jns
and
pop
mov
loopne
add
sub
popf
andb
cmp
inc
das
loopne
out
mov
add
mov
jns
pop
inc
inc
or
mov
sbbl
int
xchg
pop
mov
jnp
push
xchg
dec
add
mov
into
mov
push
sub
ja
pop
adc
ja
aad
adc
inc
fmull
cmp
adcb
repnz
dec
loopne
cmp
jo
sbbb
notb
mov
jno
xchg
ljmp
clc
inc
out
stos
jb
test
lods
popf
sahf
test
and
mov
shrl
sub
xchg
sbb
inc
mov
rorl
loopne
in
mov
sub
lcall
into
push
push
fadd
push
lret
and
jne
pop
fmulp
int
aas
lret
dec
mov
icebp
mov
jno
popa
loop
aaa
in
fldcw
stos
mov
lock
add
xlat
in
mov
xor
inc
jecxz
mov
add
and
aam
dec
es
sbb
fwait
and
mov
push
adcl
fmuls
movsb
nop
mov
cmp
fidivrs
cmp
movsb
add
loop
pop
jge
aam
pop
jg
pop
mov
adc
jnp
orl
stos
xor
jo
jnp
test
xchg
rcll
ret
xchg
outsl
inc
ljmp
ret
mov
push
push
jns
sub
pop
stos
mov
std
dec
sbb
stos
cli
mov
fimuls
pop
inc
push
out
sbb
stos
jp
jo
fdivrs
xor
and
push
cmc
pop
ds
aad
push
xlat
fistpl
cmp
fdivs
mov
ret
imul
adc
pop
mov
pushf
stc
in
rorl
movsl
aas
and
mov
fldcw
push
scas
pop
push
sub
call
ret
xlat
xchg
xchg
ds
out
sahf
jbe
sbb
movsb
pop
xor
cmpsl
les
fcmovne
xor
cmp
out
sbb
jl
stc
nop
jecxz
cmpsw
idiv
cmp
aad
jle
test
inc
or
mov
fisubl
incl
cmp
xor
pushf
xlat
ljmp
adc
fistps
xchg
or
ret
popa
or
fsubrl
xor
sbb
in
cwtl
insl
rol
lock
inc
fstl
dec
stc
mov
in
add
sub
ret
add
loopne
and
in
jbe
pop
aad
cld
push
data16
or
out
jle
sub
push
shlb
sbb
insb
test
movsb
hlt
cmp
or
mov
jl
and
out
stos
add
aaa
jecxz
jno,pt
dec
ds
jl
fdivp
divl
in
fsubrl
jl,pt
and
stc
mov
std
sbb
dec
ret
inc
mov
push
and
and
sub
inc
les
jle
mov
mov
sbb
popa
xorl
add
out
loop
movsb
lds
and
lods
clc
mov
movsl
jp
les
jne
int
push
mov
popf
mov
jns
lods
sub
or
sub
aaa
jo
or
mov
sbb
test
pop
xor
in
push
aam
js
inc
shl
fwait
sbb
mulb
xchg
out
xor
nop
xchg
mov
sub
popa
in
cmpl
mov
jo
fs
xchg
mov
mov
mov
nop
jl
pop
lahf
mov
pusha
sbb
cmc
std
pop
test
adc
pop
repz
xor
xor
rorb
pop
aad
jle
push
pop
push
movsl
adc
test
cld
push
inc
mov
out
mov
cmp
jbe
add
sbb
test
popf
inc
popa
call
lea
push
test
jnp
inc
pop
dec
insb
xchg
cmc
stos
into
popf
pop
fsubl
fiadds
lret
outsl
imul
jl
and
and
push
push
or
sbb
inc
aad
mov
in
mov
lods
cmp
and
xchg
lahf
je
jecxz
mov
setle
fisubrs
push
mov
aam
aas
lea
fwait
jnp
sbbb
fdivrs
jecxz
sub
jecxz
or
dec
stc
hlt
pop
push
xchg
movsb
lods
scas
imul
bound
aaa
inc
adc
mov
lea
enter
sub
out
inc
shrl
push
out
jae
push
or
fisubrs
loop
sbb
mov
cmpsb
sbb
loope
and
add
xchg
mov
lea
mov
ss
nop
fidivl
push
mov
bts
cmp
sbb
call
pop
ret
push
shl
std
data16
div
data16
inc
jmp
dec
jnp
sub
loopne
push
lret
mov
push
cmp
add
sbb
outsl
shrb
ds
or
xor
pop
xlat
addr16
bound
ja
push
shll
and
mov
cli
test
mov
sub
pop
jmp
or
mov
inc
jl
lcall
hlt
sbb
jmp
adc
les
push
movzbl
dec
fcomps
xchg
test
in
xor
jno
cmp
sbb
rol
and
mov
xchg
mov
insl
loopne
insb
push
repnz
add
mov
push
pop
loope
add
mov
movlps
pop
pop
push
mov
push
push
adc
je
inc
push
in
mov
cld
mov
mov
dec
repnz
aad
push
ljmp
fwait
xor
mov
push
fucomip
sbb
hlt
mov
add
sbb
push
mov
add
xchg
cli
shrl
dec
test
dec
int3
bound
je
jl
inc
loope
stc
push
movsl
push
lret
test
dec
popf
xor
mov
mov
in
test
mov
stos
push
int
mov
mov
in
xchg
int
repz
pop
push
xor
inc
mov
les
xchg
out
pop
sub
pushf
arpl
cmp
imulb
aad
xor
js
sbb
jne
repz
push
pop
xchg
cmp
cmp
pop
pop
cli
jle
dec
sbb
or
cmp
pop
fwait
movsb
mov
dec
shlb
les
lods
sbb
in
adc
adc
movsl
jl
sub
or
mov
and
je
es
cmp
pop
fldt
pop
adc
movsl
pop
pop
jle
add
sbb
int3
notb
shr
xor
inc
aas
mov
inc
stc
pop
lcall
mov
fbstp
je
mov
and
xor
movsl
arpl
jge
in
loop
adc
xchg
or
test
mov
xchg
je
adc
les
jp
fcoms
dec
mov
jb
lahf
enter
fwait
xor
das
sub
pop
call
and
inc
mov
jno
pop
loope
sub
in
mov
or
adc
inc
stc
pop
lret
xlat
ja
ret
cmp
xor
mov
das
mov
jno
cmpsb
jnp
cmp
xor
xchg
scas
cmp
in
lds
enter
adc
adc
iret
lcall
out
and
cwtl
jmp
pusha
data16
enter
adc
out
mov
pop
inc
and
out
stos
xchg
inc
inc
scas
adc
mov
mov
adc
cmc
inc
push
shr
out
out
test
shlb
cmp
in
data16
xchg
mov
mov
pusha
xchg
and
shll
mov
clc
cmp
and
je
xor
xor
cwtl
jo
scas
fdivr
out
test
sbb
fwait
lds
pop
mov
test
inc
int
scas
ja
mov
loopne
ret
cmpsl
fwait
in
ss
insl
out
out
out
and
sbb
fldl
push
mov
popf
dec
das
std
push
lock
shll
ret
outsl
cwtl
movsl
xchg
pop
faddl
sahf
xchg
ror
addb
jmp
push
xchg
inc
test
enter
or
dec
or
rcl
adc
les
fnstenv
jecxz
jecxz
mov
xor
fs
cmc
insl
dec
jnp
pushf
subb
pop
shl
push
or
sti
jb
push
inc
or
xor
mov
stc
xchg
push
notl
stc
push
sbb
push
js
or
cmc
in
jecxz
iret
hlt
daa
jne
std
stc
icebp
push
dec
mov
pop
push
cld
out
psubsb
dec
mov
repnz
mov
adc
into
xchg
xor
cmpsb
mov
fwait
nop
push
pop
stos
push
mull
ss
mov
mov
push
pop
movsl
ret
fwait
adc
into
cmpsb
out
add
jge
rol
mov
fstps
adc
mov
ljmp
negb
jns
decb
insl
imul
es
push
ljmp
add
jns
mov
jnp
dec
push
mov
loope
ds
insb
or
mov
stos
aas
mov
daa
and
lods
clc
fmuls
ss
fildll
and
push
rcl
scas
ja
pop
cmpsb
pop
sub
adc
lods
xor
into
xchg
xchg
add
movsb
mov
pop
xor
in
ret
lret
inc
pop
es
xorb
pop
dec
and
sbb
cwtl
leave
je
test
sbb
push
mov
imul
lret
enter
and
mov
roll
cmpsl
mov
mov
sub
sbb
adc
gs
xor
sub
insl
outsl
push
jno
mov
pop
outsb
pop
inc
sarb
cmp
mov
mov
push
cwtl
mov
pop
outsl
sbb
add
loop
jg
add
fwait
pop
dec
test
add
sbb
sub
test
lcall
stos
xchg
xor
cmp
push
stos
pusha
gs
sbb
push
shlb
jbe
xchg
add
cwtl
or
or
cltd
cmpsb
rcl
out
into
xor
pop
loope
leave
cs
cmp
inc
ljmp
lods
jb
repz
insl
xor
imul
pop
and
or
xorl
mov
push
cmp
fnsave
ds
mov
stos
pop
cltd
ja
mov
pushf
icebp
mov
add
push
movsb
xchg
push
test
movsl
push
repnz
pop
jns
mov
popl
xor
xchg
movsb
out
add
xchg
out
shrb
aaa
fisubl
mov
xor
nop
lods
sarb
es
xor
out
popa
ds
sbb
int3
lret
mov
xchg
popa
add
mov
in
mov
xor
enter
sahf
xchg
mov
mov
rcrl
jl
stos
sub
out
aam
enter
shrl
roll
sti
inc
sub
adc
push
nop
mov
cmp
add
pop
ja
sbb
je
arpl
test
jecxz
mov
xchg
lods
adc
mov
pop
sti
ret
pop
inc
or
xchg
jl
in
push
dec
enter
testb
pushf
clc
cld
push
cmp
in
nop
dec
pop
sub
push
repz
mov
pushf
inc
or
adc
scas
or
cmp
cmp
popf
cmc
rcll
sub
sub
test
pusha
sub
mov
lea
pop
daa
test
mov
or
outsl
adc
ret
mov
mov
xchg
test
rcrb
ds
repnz
iret
jne
mov
inc
iret
xorb
lea
inc
stos
xchg
and
push
dec
jg
pop
mov
nop
jp
inc
xor
sbb
push
push
mov
rorb
sub
hlt
popl
sub
es
aaa
arpl
push
cmpsl
test
aaa
sub
lock
mov
movb
mov
f2xm1
mov
orl
loopne
mov
mov
adc
les
testb
shll
repz
lods
push
aas
pop
jnp
mov
jg
adc
aad
out
mov
stc
daa
inc
lds
loope
adc
in
fwait
stos
ljmp
icebp
cmp
mov
mov
fnstenv
dec
popa
popa
mov
pop
fnsave
pop
movsb
jae
dec
clc
pusha
sbb
add
inc
mov
inc
pop
fmul
push
add
pushf
aaa
stos
jg
fcmovnbe
outsb
out
imul
fsubs
xchg
lahf
scas
sub
mov
loopne
scas
aam
andb
mov
pop
jl
mov
hlt
je
xchg
sub
push
aaa
nop
and
pop
ret
sbb
ret
cmpsb
xor
pusha
jg
or
or
jmp
std
or
hlt
mov
lods
lea
cwtl
cmc
mov
inc
cltd
xchg
mov
push
jae
cs
sub
loope
out
test
leave
inc
mov
shl
add
xchg
jecxz
push
xorb
xchg
pop
inc
xchg
gs
adc
cmp
xchg
test
jmp
cmp
jae
daa
mov
jne
rol
and
pop
pop
lret
nop
xchg
imul
repz
adc
bound
jecxz
sub
icebp
push
dec
xlat
xchg
xchg
xchg
dec
sbbb
or
cltd
pop
push
cmc
push
adc
scas
loop
jmp
pop
mov
fs
inc
xchg
shrb
lea
cld
add
pushf
mov
xchg
sub
mov
loope
push
call
adc
loope
fnstcw
repz
lret
ja
jecxz
mull
inc
xchg
in
jb
hlt
push
cmpl
iret
cmp
lods
lret
sar
inc
call
or
push
and
fwait
push
popa
nop
enter
mov
add
pusha
outsb
mov
pop
popa
fisubl
mov
cs
test
std
pop
fiaddl
ss
out
sbb
inc
push
bound
jb
shll
xchg
xor
cmp
dec
adc
sub
aam
push
int
roll
xchg
sbb
insb
dec
scas
sbb
ficompl
fdiv
ss
mov
inc
mov
cmpsl
inc
mov
inc
inc
pop
jl
adc
xor
pop
jnp
popf
pushf
adc
sbb
dec
sub
imul
mov
or
ficoml
push
in
pop
clc
aas
aaa
fisubl
mov
stc
aam
xchg
jns
sbb
fdivrl
mov
add
fstpl
jb
adc
movsb
xor
int3
sahf
and
add
aad
ss
outsb
sub
in
stc
mov
dec
lea
les
jmp
adc
jl
subb
and
stc
sbb
pop
mov
mov
enter
add
jg
test
iret
cltd
dec
clc
push
pop
mov
sahf
lahf
inc
loope
gs
ficoml
cli
iret
nop
int3
mov
push
addr16
daa
mov
ljmp
mov
inc
mov
xor
dec
sbb
aas
push
push
fisttpl
aaa
into
cmp
int3
out
dec
pushf
pop
dec
loopne
mov
xor
mov
popf
inc
mov
or
pop
inc
jo
fistpll
pop
jae
dec
mov
es
jg
scas
mov
pop
pop
sub
dec
xchg
xchg
test
mov
pusha
ret
mov
add
jge
push
mov
jg
adc
mov
mov
daa
or
add
aas
jbe
xor
or
and
mov
int
fisubrl
lea
fisttps
bound
data16
jmp
add
fldt
cmc
mov
jns
xchg
ljmp
mov
fsubrl
pop
xor
loop
sub
lds
sbb
pop
xchg
cltd
xchg
movsl
leave
lret
xchg
aaa
or
or
inc
mov
mov
call
fnstenv
and
call
int3
sub
dec
lahf
call
dec
cld
sub
pop
or
and
rcrl
cld
fwait
mov
int
icebp
call
pusha
mov
sbb
repz
jp
movsl
loop
and
dec
pop
mov
xchg
xchg
lods
adc
dec
lret
mov
mov
loop
xchg
imul
sub
aam
je
pop
mov
loopne
add
push
mov
or
loop
cmp
rcr
sbb
int
jae
mov
clc
mov
scas
cs
xchg
push
push
pop
pop
inc
insb
cmp
mov
sub
pop
xorl
push
pop
adc
ljmp
test
ss
das
cld
jge
sub
pusha
jge
push
mov
sti
addr16
jno
cwtl
xor
loopne
xchg
out
push
adc
sub
imull
pop
test
cli
aas
pop
add
jae
pop
push
add
sbb
les
aaa
jl
das
adc
ror
mov
pushf
mov
lcall
xor
inc
mov
mov
stos
lea
push
and
mov
inc
scas
xchg
inc
and
scas
dec
stc
cmpsl
xor
rcrb
loope
pop
or
sub
movsb
cmp
add
push
pop
pop
pushf
nop
lods
push
adc
pusha
jbe
sub
add
cwtl
cmp
mov
jno
aad
jecxz
cmp
insl
aaa
sub
push
sahf
scas
jge
cmp
mov
mov
ja
orl
adc
rcl
jb
loope
dec
mov
lods
xchg
and
mov
ret
add
aas
fisttpll
int
mov
getsec
add
and
stos
mov
inc
adc
jae
enter
inc
cmp
pinsrw
mov
push
fwait
jns
push
mov
sahf
mov
ret
fucomip
cmpl
push
es
inc
ror
or
loope
idivb
push
fs
addr16
add
repz
dec
xor
or
mov
and
push
popl
bound
mov
jb
push
sbbb
shlb
stc
cmpsb
ljmp
mov
or
xchg
shlb
and
scas
dec
mov
leave
test
sbb
outsl
movsl
mov
pop
es
bound
outsl
xor
inc
cmp
outsb
pop
sub
fmuls
test
sbb
and
push
dec
cmc
inc
pushf
andl
jns
shlb
std
mov
xlat
sbb
xor
xor
dec
dec
daa
inc
mov
jne
out
movsb
jno
add
adc
dec
js
sub
out
push
mov
sub
fcompl
dec
adc
adc
sbbb
mov
ds
icebp
push
or
mov
mov
dec
icebp
jb
stc
xlat
mul
mov
sbb
adc
pop
out
mov
jnp
sub
add
insb
je
xor
shlb
xor
roll
add
adc
adc
mov
popa
pop
popf
in
adc
push
inc
ja
sub
pop
clc
cmpl
je
inc
xchg
fidivrl
daa
inc
jns
iret
arpl
mov
cmp
aad
jno
mov
mov
xchg
xchg
ficomps
jecxz
in
xchg
pop
sahf
roll
add
jnp
popf
sbb
xchg
xchg
adc
mov
fcmovne
add
add
mov
mov
ss
push
bswap
shll
jb
sti
jecxz
loop
cmp
mul
dec
fcmovnb
test
push
push
adc
xchg
mov
mov
mov
mov
cld
xchg
cmp
cld
push
sub
jge
pop
and
mov
pop
xchg
ja
inc
xadd
int
mov
jns
mov
in
movsl
mov
add
push
jns
and
and
push
mov
fsubr
sbb
sahf
inc
ffree
stos
bound
out
jmp
sub
ljmp
mov
jmp
cmovne
cwtl
or
out
sbb
ret
cmp
inc
jno
mov
clc
ljmp
enter
ret
xchg
arpl
xor
ds
add
push
ds
and
out
sbb
popa
scas
add
scas
dec
aaa
shrb
fnstenv
lret
lds
pop
icebp
dec
and
in
xchg
xchg
mov
aas
push
pop
pop
lret
mov
pop
mov
mov
xor
fimuls
ss
cltd
lea
dec
lret
or
shl
xor
imul
push
fnsave
sub
andb
cmp
add
mov
adc
pause
fldcw
dec
xchg
arpl
rcr
mov
lods
je
in
imull
sahf
lcall
add
outsb
repz
cmp
sbb
xor
sub
inc
xor
add
cwtl
fistps
sahf
or
push
xchg
mov
in
push
add
jecxz
inc
int3
in
mov
test
stos
xchg
jae
out
fistpl
loope
loope
push
lds
dec
or
call
loopne
mov
aad
scas
push
push
adc
mov
stc
aaa
jl
cmpsb
jle
push
call
das
mov
into
mov
xchg
int3
pushf
mov
add
loopne
jp
add
or
stc
lds
and
jb
sarl
dec
xor
aas
cmp
test
not
imul
pop
repnz
inc
pop
lds
mov
or
xor
hlt
adcl
repz
shll
push
loop
inc
jnp
adc
enter
pop
dec
sub
sub
mov
sti
out
and
arpl
nop
daa
and
dec
in
jnp
jecxz
cmp
into
dec
mov
cs
mov
push
popf
stos
push
push
mov
pop
mov
sub
nop
cmp
jnp
lock
insl
sti
popf
jl
xchg
mov
xor
inc
pusha
test
sub
sub
adc
jo
int3
xchg
cld
xchg
sahf
fdivrl
nop
sub
inc
fiaddl
adc
je
test
sbb
dec
in
divl
fisttpll
or
fdiv
and
adc
xor
dec
inc
inc
inc
sub
daa
cmc
into
sbb
or
sbb
fstpt
jge
inc
mov
jmp
aad
cmp
clc
mov
fisttps
sub
or
out
filds
add
dec
insl
adc
mov
xchg
push
mov
sub
fcomps
fldl
cmp
jo
lea
pushf
in
test
mov
dec
sbb
add
fwait
mov
scas
popl
add
cmp
not
or
push
scas
pop
push
loop
sub
je
pop
insl
pop
lods
push
jne
add
test
sub
cwtl
sbb
dec
push
out
or
push
lcall
sbbl
pop
mov
out
dec
shll
negb
sbb
push
mov
insb
scas
xor
popf
mov
rorl
outsb
mov
jns
pop
imul
xchg
lods
pop
loopne
fldcw
sub
repnz
or
push
in
aam
adc
icebp
aaa
rcrl
test
sar
and
enter
and
call
call
test
stos
cmpsb
imul
inc
pusha
mov
fisubs
lahf
aad
inc
mov
lret
cmc
mov
sahf
and
adc
push
mov
pop
imul
sub
sbb
mov
rcrl
mov
push
das
in
push
sub
lcall
enter
cmpsl
sbb
and
fsubrs
jl
and
sbb
cmpsb
adc
shrb
push
fnstsw
popa
imul
push
cmpsl
mov
std
cld
xor
dec
das
jmp
pop
xor
push
mov
nop
int3
lds
xchg
jno
mov
inc
jno
aam
leave
clc
xchg
sbb
aas
xor
mov
mov
cwtl
pop
cs
adc
lcall
cmp
jp
stos
scas
scas
xchg
daa
dec
mov
push
jg
ret
lea
fwait
sbb
inc
lea
out
pushf
sbb
mov
jmp
jns
in
popa
push
cmp
les
xor
xor
adc
jns
pop
mov
xor
outsl
ror
xor
call
pop
mov
xchg
mov
mov
stos
lret
push
shll
adc
push
or
scas
sub
fcompl
rolb
mov
mov
imul
pop
add
rcll
adc
stos
add
push
arpl
sti
mov
push
sahf
in
adc
xchg
jmp
adc
sub
adc
std
xor
mov
inc
cmpsb
js
arpl
xchg
shll
aas
pop
decb
and
dec
lret
sub
adc
outsb
mov
xor
add
lret
fldt
push
jae
or
mov
or
repnz
jp
fld
push
fwait
adc
je
push
int
enter
lcall
fwait
and
pop
sbb
and
xlat
out
dec
sbb
cli
or
push
stc
into
out
fstps
rorl
sbb
stos
ja
jae
adc
hlt
cs
xchg
dec
mov
pop
jo
ds
inc
cltd
cli
lret
addr16
or
les
lea
inc
mov
stc
fsts
inc
inc
mov
sarb
push
xlat
lock
popa
push
and
sub
sarb
cmp
jp
mov
xchg
xor
outsl
mov
fs
add
xor
mov
ljmp
dec
mov
push
xchg
mov
push
adc
fisubrl
sbbl
out
xorl
mov
xchg
aas
push
xchg
jmp
jne
lods
into
fistpll
div
push
lret
ret
in
mov
addr16
pusha
cli
nop
push
sub
mov
mov
mov
pop
jecxz
cmpsb
lds
mov
sbb
aam
in
xchg
dec
loopne
push
adc
push
mov
iret
stos
jecxz
fisttpl
adc
in
fs
in
xchg
aas
mov
in
lods
mov
mov
xchg
sub
aam
mov
mov
adc
xor
sbb
pop
push
cltd
mov
mulb
push
sbb
xor
ficomps
lods
jmp
movsl
sub
adc
mov
sub
pop
sbb
popa
loop
scas
jno
fstps
dec
addb
fs
lods
mov
nop
mov
dec
testl
andb
gs
mov
add
outsl
ljmp
int
jnp
and
cmp
dec
adc
popl
sbb
inc
mov
aas
xchg
xchg
dec
push
sarb
mov
jne
notb
xchg
dec
mov
out
pop
jge
cmpsb
pop
fwait
xor
sbb
mov
mov
lret
or
xor
cmp
push
push
sbb
xchg
jo
mov
mov
repnz
xchg
jne
xor
call
in
lods
xchg
inc
jp
push
sti
and
pusha
push
push
and
cmpsl
jmp
push
jecxz
shrb
lods
xor
mov
add
mov
and
xor
test
or
out
add
inc
les
mov
pop
out
daa
cmp
xor
shl
mov
addr16
or
lea
adc
mov
xchg
stos
loope
cld
insb
xchg
div
jo
xchg
insb
das
pop
jmp
das
jl
lcall
lcall
pop
fstl
pop
add
ss
mov
out
sub
sub
lret
pop
xchg
adcb
lds
das
fdivl
rcrb
lret
cld
adc
pop
xchg
sub
push
jp
and
aam
hlt
jmp
jge
mov
cmp
mov
add
lret
jle
jp
push
mov
pop
or
dec
sbb
mov
pop
xchg
adc
dec
fmull
inc
adc
mov
arpl
icebp
sti
inc
cmc
sub
lea
mov
sub
mov
jecxz
dec
adc
cltd
aam
pop
or
and
mov
cltd
inc
loope
push
mov
ljmp
lods
cmc
outsb
push
shlb
cld
push
cmpsb
push
xor
pop
xor
rcl
and
fistps
jns
cmp
mov
pop
fldl
cltd
notb
sbbl
cwtl
repnz
or
xor
lahf
sub
insl
out
mov
out
or
es
int3
outsb
shrl
int
loopne
mov
shl
daa
push
fidivrs
cmpsl
add
add
pop
adc
lods
xor
mov
cwtl
adc
and
dec
mov
push
push
inc
cmc
cli
in
shl
cmp
or
cmpsl
and
jmp
pop
sbb
push
das
cmpsl
shll
dec
push
or
notb
lret
cmpsb
fidivl
test
not
cmp
xor
mov
int
std
or
pushf
repz
fistl
adc
sti
mov
jp
clc
push
push
sahf
jecxz
cmp
insb
out
xor
jle
arpl
test
lock
dec
mov
and
cmpsb
xchg
leave
and
mov
icebp
cwtl
push
push
mov
push
and
add
addb
xor
adc
sbb
loopne
mov
lea
fstpt
sub
pop
xor
xor
mov
add
loope
mov
mov
mov
negb
pop
popa
cmp
enter
mov
popf
ret
test
push
sti
lahf
and
jmp
xor
xchg
out
cmpsl
push
std
test
lret
mov
mov
lods
dec
push
aaa
int
lcall
cmp
aas
push
cli
repnz
fstpl
jne
sbb
in
mov
sbbl
shll
xchg
fisubrl
lcall
es
sub
fwait
push
adc
sub
sbb
sub
rep
inc
rol
aam
sti
dec
leave
ja
mov
repz
enter
mov
popf
or
scas
cmp
fstpt
and
into
ret
jecxz
cwtl
cmpsb
lret
xchg
sbb
push
in
jp
sarl
pushf
adc
mov
or
mov
xor
in
dec
cwtl
adc
popa
cmp
sbb
mov
push
ret
bound
pop
xchg
sub
jge
jmp
inc
arpl
and
mov
lods
push
adc
mov
out
movsb
dec
imul
repz
dec
or
cmc
xlat
and
loop
mov
adc
cmpsb
mov
or
mov
in
push
xchg
mov
data16
dec
rorb
int3
jle
mov
call
fwait
data16
testb
ret
aam
daa
stos
jns
xchg
notb
mov
fldenv
je
xchg
pop
mov
pop
lcall
leave
lahf
and
cmp
addr16
lock
scas
or
insl
pop
xchg
out
fistpl
bound
and
insl
sahf
stos
xchg
loop
sub
mov
mov
in
mov
dec
sub
inc
mov
insb
add
jae
mov
pop
push
lahf
aam
dec
sub
xor
sti
dec
or
sbb
fiaddl
adc
hlt
and
cmp
sub
in
jecxz
jo
jle
lcall
sub
stos
push
adcb
xor
dec
jp
out
loopne
xor
push
pop
or
das
cmpsl
mov
loop
int
sarl
pop
arpl
icebp
xor
dec
mov
ljmp
jl
pop
lock
sub
mov
popf
js
inc
leave
in
pop
loope
lcall
repnz
inc
in
inc
rcll
mov
xor
mov
inc
lret
gs
xorb
clc
shl
xchg
and
lods
jne
addr16
xor
loope
sbb
les
adc
movsl
xor
mov
dec
aam
ja
sbb
xor
bound
outsl
jl
ret
ja
or
ret
xor
inc
loop
jns
popa
neg
xchg
mov
outsb
push
cmp
iret
stos
mov
mov
cmpsl
push
xor
lods
scas
mov
out
mov
enter
pushf
push
mov
sub
sbb
pop
inc
frstor
push
xchg
incl
cmp
mov
xor
jbe
loop
xchg
sbb
push
je
pop
dec
out
fistpl
add
mov
or
inc
aaa
mov
jp
inc
cmp
ds
fadds
pushf
subl
xchg
out
ss
xchg
jecxz
and
jne
lcall
in
movsl
fimuls
lds
data16
xchg
outsb
fbld
lock
movsl
or
sub
pop
lret
fs
dec
int3
in
outsl
test
jle
mov
jle
lea
mov
jl
pop
xlat
repz
add
test
inc
mov
shl
jp
sbb
jmp
cmp
aas
enter
lock
inc
push
jne
pop
jb
add
fucomi
ret
outsl
lds
fldenv
xchg
test
repnz
mov
ss
mov
cmp
loopne
enter
and
pop
mov
outsl
scas
out
adc
xlat
rcrb
outsb
test
mov
lret
adc
pop
mov
in
mov
add
jb
inc
in
jns
insl
cmp
xor
jb
roll
lock
std
ds
jns
les
daa
xorb
sbbl
orl
push
lret
cmp
sub
jnp
mov
add
popf
cmp
xor
xchg
inc
xor
mov
pop
mov
or
dec
in
notl
xchg
mul
test
sub
nop
mov
cmp
adc
push
push
iret
mov
fnstsw
add
push
or
ret
mov
add
mov
je
xor
push
mov
imul
imul
in
pop
ret
xchg
adc
jecxz
loope
mov
sbb
lods
int
mov
ss
xor
data16
mov
mov
fwait
lds
xor
dec
mov
int3
xchg
push
loope
push
sti
pop
dec
subb
mov
add
outsb
out
dec
repnz
push
jbe
out
lcall
cmp
xchg
movsb
mov
jmp
loope
push
sbb
mov
outsb
cwtl
shll
aam
jno
ljmp
sbb
fcompl
aam
add
mov
pop
cmpsl
push
int3
dec
sub
mov
pop
cltd
dec
insb
jp
fstpt
inc
add
call
aaa
aam
test
je
aad
xchg
in
push
sarb
pop
test
sbb
rcl
mov
aad
xchg
sar
cmp
rclb
xor
push
push
jns
sub
add
push
mov
mov
push
lea
mov
repz
mov
dec
pop
arpl
pop
sbb
push
movsl
out
adc
push
frstor
mov
adc
testb
dec
dec
popa
jae
stos
arpl
sub
dec
inc
sbb
shrb
or
js
fstl
sbb
lods
stc
cmp
mov
gs
xor
dec
sahf
inc
or
inc
sahf
lcall
xor
cld
lods
inc
dec
loope
jae
test
lds
outsl
sub
repnz
cmpsb
dec
fwait
scas
repnz
arpl
add
inc
je
movb
pop
or
int3
shl
ffreep
push
iret
into
xchg
test
frstor
popf
fsts
push
pushf
out
cmpsb
inc
pop
adc
and
add
aaa
mov
iret
mov
gs
scas
mov
fsubs
xor
cmpsb
sub
mov
test
in
jno
push
std
pop
dec
sti
js
mov
xchg
xchg
push
jl
les
and
hlt
xchg
jmp
jg
bnd
adc
lods
fisttpl
or
mov
mov
aam
out
fnstsw
into
ljmp
int
into
outsl
and
sbb
push
fildll
nop
mov
xchg
sub
movl
cltd
and
loope
inc
repnz
aas
rolb
popf
jo
mov
mov
sub
sbb
and
cmpsl
pop
out
sbb
push
ja
lods
jp
out
negl
xchg
inc
es
jo
data16
je
or
call
into
aad
bound
adc
fadd
xorb
shrl
ljmp
xchg
lahf
jns
and
mov
sbb
je
inc
aaa
add
xchg
inc
xchg
jge
mov
and
jp
jg
sub
cmp
mov
lret
ret
cmp
sahf
loopne
popa
orb
mov
inc
daa
and
cmp
roll
popa
xor
lret
test
decb
inc
push
xchg
dec
ds
mov
push
pushf
shlb
cmp
cmp
mov
mov
add
xchg
push
mov
mov
std
shr
push
mov
sub
mov
xchg
iret
adc
mov
mov
lds
int
push
adc
fimuls
lea
popf
cmc
jo
pop
dec
sbb
clc
sbb
jle
or
aas
iret
rorl
jmp
dec
add
mov
dec
loopne
mov
xchg
pop
xor
icebp
mov
lret
dec
lock
imul
mov
lahf
xchg
hlt
push
add
into
cs
lahf
insb
mov
mov
fs
jb
jge
loope
shll
stos
adc
test
dec
ljmp
lods
jg
inc
add
xchg
mov
push
lret
lahf
xlat
pop
sbb
fisubs
adc
pop
scas
push
outsl
push
mov
dec
sbb
inc
ret
outsl
lcall
mov
cmpsl
inc
sbb
mov
adc
pop
stos
adc
add
dec
enter
es
xor
jmp
mov
lods
push
cwtd
sub
scas
ds
mov
or
sahf
or
and
mov
xchg
mov
test
xchg
les
mov
inc
push
fadd
stc
xor
push
dec
xor
mov
cmp
add
jge
loop
sbb
stos
pop
xor
mov
mov
push
and
push
cs
cld
test
push
xor
lea
push
outsl
ds
mov
daa
inc
lods
adc
and
insb
inc
dec
jnp
into
clc
mov
add
mov
outsl
imull
xor
jns
out
ret
aas
dec
mov
fdiv
jmp
daa
push
ret
imul
sub
xchg
adc
push
inc
stos
shrb
jb
lds
clc
dec
jge
test
sub
jge
jl
enter
cmpsl
adc
mov
cmp
es
xchg
aas
add
push
lcall
cmpsl
sbb
shll
movsl
inc
jmp
inc
xor
jb
xchg
cmp
xor
aam
jl
pusha
inc
adc
mov
inc
pop
jno
sti
or
testb
call
xlat
inc
ficoms
std
add
pop
add
test
push
pop
enter
addb
xor
push
pop
xor
jg
pop
aas
les
iret
push
or
cmpsb
ret
mov
imul
pop
es
jno
mov
leave
pop
push
jg
push
and
dec
aas
add
cmp
les
jecxz
mov
inc
push
negl
push
cmp
stc
mov
scas
or
mov
lea
mov
push
push
push
xchg
enter
idivl
daa
mov
jp
and
cmp
push
jmp
sub
imul
iret
adc
iret
std
pop
or
mov
cmpsb
jg
mov
push
inc
sub
insb
rclb
rolb
fldenv
sbb
in
mov
cmp
sbb
xchg
out
xorb
adc
add
sbb
push
xchg
xor
inc
and
jb
ja
push
sub
jne
mov
out
adc
das
dec
adc
decl
loop
jecxz
es
aam
dec
repnz
out
pop
sbb
or
inc
xchg
stos
sbb
andb
xor
sbb
bound
stos
mov
xchg
jae
xchg
movsb
fidivs
push
imul
ljmp
clc
push
iret
jecxz
adc
dec
mov
add
mov
repz
outsb
mov
jno
inc
sbb
dec
mov
pop
push
inc
mov
gs
push
cmpsl
dec
cli
subb
cltd
out
sbb
int3
cs
mov
cmpsl
jl
push
cmpxchg
loopne
insb
or
std
mov
adc
filds
push
xor
test
jo
lds
ficompl
jg
xchg
movsb
imul
sahf
lret
sbb
in
lret
pop
rcrl
jae
repnz
lahf
mov
dec
sbb
push
loop
mull
int
lret
lret
std
adc
addl
push
push
int3
mov
or
sahf
out
fists
xor
jo
fcmovnu
and
sbb
and
rorb
in
sbb
test
sub
push
data16
inc
inc
mov
stos
pop
daa
mov
ret
inc
push
pop
stos
pop
fwait
movsb
or
cmp
pop
inc
sti
repz
xchg
aaa
xchg
cmpsb
scas
add
fstps
jno
in
push
lods
loop
sbb
adcl
push
gs
fstp
dec
iret
or
xor
nop
nop
out
mov
enter
in
imul
sbb
mov
loopne
cmp
and
lcall
or
pop
inc
sbb
mull
ljmp
fsubl
test
sbbb
dec
addr16
mov
stos
mov
xlat
lahf
sub
cmp
lcall
mov
nop
fsubrs
cmp
inc
add
inc
inc
jne
scas
insl
dec
cmp
cmp
push
inc
es
sub
add
or
mov
jg
movsl
and
jle
das
sub
mov
test
sbbb
pop
xchg
mov
dec
cmovp
push
fnstenv
dec
test
dec
out
cmp
lret
and
xchg
ss
and
inc
in
mov
xor
mov
jne
fisubrs
in
fdivs
insl
in
adc
mov
or
mov
ss
out
fdivr
jmp
cmpsl
pusha
vmwrite
data16
push
pop
dec
push
aad
mov
and
sbb
and
mov
sub
xor
loop
sub
ds
hlt
dec
pop
sub
mov
adc
cmp
ljmp
pop
ja
sbb
inc
xchg
sarl
loopne
inc
and
or
and
adc
adc
fwait
in
mov
jmp
into
outsb
dec
xor
jp
xor
lret
sbb
adc
dec
aaa
popa
mov
inc
sbb
add
and
xor
out
into
popa
popf
add
lahf
popa
incl
mov
add
lds
add
or
inc
xor
test
mov
and
leave
cmp
popf
and
push
ds
mov
loop
cli
pop
fcomps
or
push
push
cmp
push
jns
jo
xchg
leave
pushf
cmp
inc
and
inc
enter
lahf
ret
push
xor
mov
fists
xor
lcall
and
push
mov
sub
cmpb
inc
adc
push
stos
call
dec
mov
push
inc
rcr
push
xchg
es
in
aas
ss
inc
xor
aas
mov
call
imul
test
inc
call
dec
cmpsl
xchg
pop
mov
sbb
sbb
xor
cwtl
fnsave
call
xor
mov
lods
dec
push
ljmp
and
push
aaa
jp
rcrb
xchg
cwtl
iret
mov
sti
repz
pop
add
mov
loopne
dec
push
cs
fisttps
jge
push
out
xor
test
mov
imul
mov
dec
adc
mov
lcall
lea
xor
pop
xor
sub
dec
outsb
into
fwait
sahf
and
mov
adc
rolb
xor
pop
sub
gs
pop
shlb
in
in
ficompl
out
fcomps
sbb
inc
and
sbb
in
jle
push
das
data16
mov
pop
sub
xor
add
rorb
lods
outsl
inc
stos
pop
ret
jbe
cmpsb
pusha
sbb
push
int3
push
mov
rcrl
mov
mov
pop
iret
in
aas
mov
mov
lret
adc
pop
std
ljmp
lcall
movsb
movsb
pop
repnz
es
inc
sbb
or
adc
sub
xchg
loope
mov
mov
in
jmp
shlb
fcmovnbe
xchg
ljmp
xchg
popf
push
jnp
mov
jnp
push
mov
jno
data16
mov
inc
mov
cmp
mov
cwtl
xor
lea
push
addb
js
and
je
jl
xor
out
std
mov
xchg
push
xchg
fucomip
xor
xor
pop
sub
inc
inc
in
in
fcomi
mov
stos
dec
test
pop
cmp
or
aad
sarl
xchg
imul
push
pop
jno
in
xchg
dec
ret
addr16
adc
out
ja
stc
xor
pusha
fnstsw
sub
int3
in
rol
loop
mov
scas
gs
cwtl
mov
enter
pop
test
push
in
insl
and
test
mov
mov
xchg
dec
js
xchg
test
jno
sbb
lea
push
sarb
cmp
movsl
mov
cs
mov
inc
mov
enter
test
stos
shlb
out
dec
add
push
ss
mov
repnz
or
lds
cli
jg
pop
jb,pt
add
dec
aad
sbbl
frstor
das
cli
popa
cltd
inc
or
out
jg
cmp
aaa
xchg
xchg
jbe
adc
xchg
inc
mov
jmp
sbb
aaa
sub
xchg
outsl
sbb
or
test
getsec
xchg
int
push
add
out
lcall
sub
iret
mov
xchg
sbb
fisubrl
scas
fiadds
call
sub
ret
cli
cwtl
fsubs
cwtl
xchg
adc
push
outsb
xor
das
mov
and
inc
shrb
xor
clc
stc
and
insl
pop
popa
jae
or
mov
loop
inc
ret
imul
lahf
sar
cmp
cmp
orb
dec
pushf
aaa
addr16
lea
jecxz
out
into
mov
mov
scas
sub
mov
stos
mov
mov
pop
shlb
repnz
push
jne
cld
ds
mov
std
or
outsl
lods
or
lcall
jp
mov
call
adc
mov
mov
cs
jecxz
jecxz
jp
out
xchg
pop
push
popa
and
insl
dec
and
push
xor
lock
jno
mov
cltd
ficomps
lret
jmp
push
pop
xchg
iret
jge
mov
sbb
xor
imul
mov
dec
les
les
lret
stos
ljmp
dec
inc
pop
int
jbe
es
xor
out
lods
jnp
mov
mov
and
fisubrs
cmp
jg
jbe
std
lods
dec
mov
lret
dec
dec
aad
stos
xor
add
out
pop
fcmovnu
xor
add
imul
insb
inc
jmp
rcr
movsb
cpuid
xlat
lods
fstpl
incb
xor
sub
jo
mov
push
jnp
and
jbe
mov
pop
inc
sub
loopne
xor
and
sbb
jl
mov
dec
and
xor
fstps
sub
fnsave
xchg
sbb
xor
xchg
aam
int3
cmp
xchg
cmp
mov
mov
out
cmc
arpl
out
test
imul
push
sub
mov
sahf
pusha
pop
or
jg
mov
popa
es
sbb
mov
repz
lds
xorb
adc
int
rol
sarl
es
mov
or
pop
in
lahf
jns
mov
clc
jl
lret
cltd
dec
push
xchg
ret
insl
pop
insb
dec
out
outsb
xchg
dec
jne
imulb
mov
dec
das
jb
gs
inc
cs
outsb
sub
mov
jns
add
sbb
out
xchg
add
pop
jl
push
or
lret
dec
lret
cmp
shll
mov
imul
dec
xchg
mov
rolb
into
push
mov
sub
xchg
xchg
fiaddl
movsb
mov
mov
mov
adc
mov
dec
sti
lods
iret
sbbb
push
fistps
arpl
inc
clc
add
in
outsb
or
lds
sbb
adc
ds
jl
out
ficompl
iret
mov
aam
xor
push
test
adc
xor
aam
notl
inc
pop
xor
sub
inc
xor
dec
lods
rol
icebp
or
add
outsb
adc
cmp
arpl
rclb
faddl
pusha
imul
xchg
sub
arpl
sub
inc
mov
or
jns
leave
jns
lock
arpl
loopne
xlat
pop
push
jb
jg
lret
test
scas
sub
es
mov
sub
adc
mov
xor
ja
mov
daa
push
and
push
mov
jno
lahf
and
lods
js
dec
in
jmp
mov
lods
cmp
push
xchg
and
fistpll
or
out
outsl
pop
and
mov
xor
adc
cmp
sub
adc
jne
mov
xchg
loope
xchg
xlat
lods
das
cltd
loop
and
dec
rcl
adc
jnp
sbb
ljmp
pop
mov
mov
cli
dec
in
pop
mov
mov
dec
lahf
mov
pop
add
fwait
adc
in
mov
inc
fs
lea
insl
mov
mov
xor
jbe
in
lock
or
adc
jns
clc
fimuls
lock
popf
or
test
add
xchg
mov
pushf
outsl
jg
jge
xor
mov
out
subl
mov
fistps
cmc
fbstp
call
jbe
mov
pop
push
or
sbb
les
sub
mov
inc
pop
aaa
sbb
stc
mov
pop
cmp
and
mov
jmp
xor
out
mov
addr16
pop
sarb
pusha
shlb
pop
shrl
lods
or
jmp
cs
fcoms
fsub
cmp
shl
xchg
sbb
or
cmp
jmp
cltd
pushf
test
pop
jmp
jge
add
out
cmp
mov
or
mov
mov
in
sub
adc
pushf
addr16
das
push
mov
mov
xor
andl
push
out
push
push
incb
movsb
jb
adc
hlt
cmp
lahf
and
mov
rcrl
movsb
stos
adc
stc
xchg
fdiv
sub
lret
orb
sub
dec
cwtl
xchg
mov
adc
sbb
sub
movsl
mov
mov
mov
mov
pushf
inc
sbb
cmp
daa
xchg
cmpb
test
xchg
nop
lahf
daa
pop
mov
push
dec
loopne
loop
ret
mov
insb
mov
push
dec
inc
ja
xor
mov
imul
dec
js
ss
outsb
pop
mov
out
int3
cmc
bound
mov
pop
mov
ljmp
dec
inc
dec
cs
mov
movsl
pop
mov
jnp
scas
jbe
or
lods
mov
xchg
int
sbb
mov
int3
fnsave
xor
or
cs
xchg
pop
sbb
ret
in
mov
add
mov
out
mov
pop
or
xor
pop
sahf
mov
mov
ret
mov
or
insl
sbb
pop
or
fmuls
lods
cli
frstor
mov
jmp
jbe
push
or
jns
nop
dec
jnp
cmp
adc
sub
mov
mov
push
cli
pop
repz
pop
mov
in
jmp
mov
mov
mov
dec
xor
adcb
pop
push
pop
xchg
mov
sub
ror
lock
and
add
aaa
mov
or
sti
aad
or
and
add
xor
dec
jno
mov
fsubp
sub
mov
mov
fwait
or
rcl
loopne
orb
les
push
sub
and
int
add
sbb
pop
sub
xchg
mov
xchg
sti
xchg
js
dec
adc
inc
lock
hlt
pop
and
in
addr16
xchg
sti
cmpsb
xchg
lret
ds
sahf
out
inc
mov
mov
out
inc
out
sbb
jno
jle
xchg
fistps
xor
hlt
mov
inc
repz
mov
mov
mov
push
cmp
mov
ret
xchg
hlt
and
hlt
out
ss
jbe
sti
push
lcall
fstp
stos
inc
jo
repz
into
add
push
stos
out
sbb
dec
pop
fisubrs
lods
fbld
add
jecxz
mov
cltd
hlt
sbb
mov
jnp
push
push
adc
mov
inc
mov
pop
scas
inc
dec
imul
mov
lock
push
push
jnp
xchg
aas
ljmp
ds
mov
mov
jns
lcall
xchg
rolb
scas
in
in
sbb
xor
push
shll
and
mov
or
dec
nop
movsb
mov
jbe
repnz
push
jmp
mov
xor
and
sahf
addr16
cmpsl
lds
inc
js
repz
dec
lret
movsb
and
outsl
dec
push
or
mov
test
jns
fimuls
stos
ss
in
dec
lock
mov
jns
into
add
push
sarl
pop
dec
push
scas
pop
pushf
fidivrs
sub
inc
cmp
stos
push
push
call
dec
mov
outsl
or
movb
jnp
fcoms
inc
push
inc
push
lcall
mull
lock
jmp
jne
repnz
jns
dec
mov
sub
or
sbb
incb
push
scas
sahf
mov
gs
cmp
std
rol
mov
imull
sbb
ret
imul
subl
or
and
or
adc
add
inc
cmp
xor
add
scas
add
sub
add
hlt
addr16
mov
popf
xchg
xchg
xchg
sti
push
adc
mov
lds
or
inc
adc
pushw
test
push
push
hlt
add
jne
ret
mov
bound
or
mov
mov
sti
cmp
inc
push
or
movsb
cs
call
mov
test
mov
jo
mov
stos
movsb
test
sub
sahf
inc
adc
jmp
cmp
sub
sub
scas
mov
push
xchg
addl
in
imul
cmp
sti
in
and
pop
scas
push
add
fnstcw
in
arpl
fisttpll
xor
jb
lods
xchg
xchg
sbb
lds
xchg
in
dec
xor
sub
lret
and
lods
idiv
xchg
pop
pop
iret
xor
pop
sub
mov
shr
mov
xchg
jo
mov
mov
in
mov
shr
test
cwtl
int3
repnz
pop
jbe
pop
xchg
lds
fldcw
loop
inc
lsl
fmuls
out
out
and
sti
pop
mov
rorb
stc
into
push
addb
push
or
lret
push
dec
hlt
addr16
push
cmovns
in
jo
xor
xchg
fistl
test
fldcw
test
xchg
cmp
adc
sahf
insl
xlat
inc
xchg
pop
in
aaa
sub
mov
pslld
push
stc
xchg
aam
sub
arpl
dec
xchg
loop
rol
dec
test
mov
jne
sarb
imul
mov
pop
pop
jecxz
mov
fistps
stc
inc
xchg
mov
sub
lods
jle
sbb
xchg
loopne
rcrb
sbb
and
lret
sub
push
push
inc
icebp
mov
mov
sub
cmp
test
sbb
imul
mov
jmp
repnz
lods
test
sub
stos
ljmp
push
xchg
std
fnsave
push
adc
mov
js
mov
mov
push
mov
lock
fbstp
mov
push
adc
pushf
push
cmp
rol
mov
push
leave
xchg
inc
mov
loopne
mov
out
push
cmpl
cli
ret
adc
aam
pop
stos
imul
jg
filds
sub
dec
adc
sbb
stc
gs
das
int
xchg
cmpsl
push
mov
sbb
sbb
add
xchg
loopne
bswap
test
and
cmpsb
insb
lret
sbbl
pushf
jge
xchg
push
daa
mov
shl
mov
lock
jg
mov
mov
mov
dec
mov
imul
stos
jp
inc
mov
flds
pusha
or
adc
mov
sti
adc
dec
pop
inc
rcrb
movsb
ljmp
mov
xchg
inc
insl
repz
in
adc
imul
out
popf
in
mov
or
mov
int3
out
mov
aas
mov
cld
fiadds
add
iret
popa
adc
dec
sbbb
out
add
mov
cs
movsl
inc
insb
cmp
push
inc
xchg
pop
mov
aas
or
test
ficoms
mov
xor
mov
test
loope
clc
mov
out
mov
call
mov
pushf
int
xchg
dec
or
daa
aas
lock
mov
pop
sahf
out
shll
std
xchg
into
test
sub
sub
add
sbb
push
cli
xlat
out
out
in
push
in
add
mov
and
add
xchg
ret
imul
ret
aaa
sub
out
das
adc
test
sbb
jmp
cmpsl
xchg
sub
add
pop
stos
xlat
or
in
xorl
lahf
hlt
int3
mov
xchg
or
cmp
popf
cs
sti
adc
jle
push
adc
add
xor
fstps
jno
mov
dec
and
std
inc
mov
in
mov
mov
ljmp
mov
scas
mov
adc
mov
mov
jl
xor
xchg
jne
mov
lahf
hlt
jno
es
dec
test
sbbl
dec
sub
les
ljmp
push
rolb
or
stos
orl
dec
filds
aas
xorb
mov
pop
adc
outsb
gs
xchg
push
mov
inc
push
inc
mov
arpl
stos
aaa
in
cmp
mov
push
fisubrs
sbb
inc
push
add
imul
pop
adc
push
sbb
mov
mov
jp
xchg
sbb
dec
iret
inc
addr16
jns
fxtract
lods
jns
lahf
scas
cmp
test
or
fbstp
out
cmp
sti
bound
sub
leave
sub
call
jecxz
add
fidivs
mov
ret
add
nop
cmpsl
into
lcall
push
jns
lods
fistpll
dec
orb
jge
push
sbb
outsb
cmpb
dec
mov
aaa
out
in
adc
mov
test
fsubs
push
mov
xor
syscall
repz
adc
dec
mov
add
and
in
adc
sub
loopne
stos
lcall
ja
xor
fs
mov
orl
imul
xor
lods
xor
cltd
dec
insl
loopne
test
and
mov
or
mov
repnz
xchg
and
daa
cli
jp
fistl
daa
sbb
cmp
sahf
ret
fldl
jno
insl
add
xchg
mov
movsl
or
mov
sbb
cmp
insb
xchg
pop
sub
sub
ljmp
push
fcmovu
mov
xorl
cmpb
ficoml
and
or
inc
test
iret
xchg
outsb
in
cmp
mov
in
arpl
pop
scas
adc
movsl
mov
pop
or
jo
dec
mov
shrb
arpl
loope
inc
jg
insl
rolb
mov
dec
movsl
pop
mov
pop
ljmp
add
ret
mov
lret
sbb
add
popa
outsb
daa
cmp
daa
into
fists
jns
stc
and
xlat
ret
mov
jo
sbb
loope
adc
mov
arpl
movsl
popf
or
inc
lahf
push
in
xchg
or
dec
cli
icebp
clc
cltd
shlb
dec
popf
into
jb
cwtl
xchg
inc
sbb
fistpll
test
xchg
jbe
xor
mov
repnz
dec
jo
out
and
out
les
mov
aad
cltd
jbe
cwtl
mov
repnz
xor
sahf
or
jo
add
jmp
sbb
push
jo
lods
fnsave
outsl
or
xchg
mov
insb
cmp
inc
cld
fmull
cld
xchg
add
lods
inc
push
cmp
pop
cli
hlt
jl
jae
xchg
out
arpl
jbe
cmc
pop
out
xchg
jne
inc
fstps
cmp
mov
adc
notl
inc
and
bound
mov
cmp
sub
rolb
xor
shrl
sbb
stos
loopne
or
mov
movsl
test
shrl
es
cmpsb
xchg
out
inc
adc
sub
adc
insb
cmpsl
dec
daa
inc
mov
adc
stc
pop
fnstsw
or
push
inc
es
jp
inc
adc
in
icebp
jns
insl
xchg
or
pop
cltd
lcall
inc
and
add
insl
jb
fdivs
push
jns
jae
scas
mov
cmp
leave
mov
cmpsb
in
mov
xchg
lret
dec
mov
repnz
jbe
pop
add
jb
cs
push
pop
shrl
adc
mov
inc
adc
leave
lods
in
adc
test
inc
mov
dec
gs
sti
adc
aas
daa
movsb
inc
push
aaa
inc
xchg
mov
xor
jne
imul
xor
inc
outsl
jmp
mov
or
int
leave
xchg
and
mov
pop
dec
lock
dec
push
and
outsb
int
leave
ret
or
bound
jno
out
mov
aas
jmp
cmpb
and
cld
dec
lret
xor
stos
fidivs
push
jnp
ret
mov
pop
mov
cmp
cld
sub
push
bsf
and
pop
insb
lcall
cli
or
std
push
push
ficomps
out
push
dec
pop
or
inc
hlt
testl
mov
rorl
sbbl
mov
mov
xchg
out
in
mov
xor
mov
sbb
jle
mov
loopne
pushf
jmp
lods
adc
mov
and
push
ljmp
stos
loop
daa
adc
xor
je
xchg
cmp
rcr
rorl
or
push
cmp
push
sub
aad
test
dec
popa
rcrl
out
mov
popf
outsb
popl
sbb
mov
dec
orb
pusha
or
aam
sub
jle
sbb
clc
push
aaa
gs
inc
ljmp
test
mov
push
nop
rclb
call
dec
mov
je
pushf
repnz
sub
shlb
std
lret
mov
mov
out
cmp
jg
roll
sbb
leave
xorb
adc
mov
xchg
cmp
dec
xor
pop
push
mov
xchg
imul
mov
mov
xor
jecxz
lret
nop
cmp
loopne
cld
stos
push
js
fwait
stc
adc
cmp
mov
loope
inc
mov
mov
mov
xchg
pop
int3
call
inc
xchg
scas
mov
cld
shrb
jo
aaa
out
dec
outsb
jl
rcll
fcoms
fisttpll
ret
jg
add
subb
icebp
and
ret
fldcw
mov
leave
into
repnz
pop
adc
mov
cli
pop
pushf
mov
sub
xor
outsb
add
jno
in
aas
and
sbb
adc
and
fs
cmp
jp
lods
cmpsl
sub
push
in
xchg
mov
push
push
jnp
es
mov
jmp
cmp
loop
imul
daa
outsl
mov
lret
loop
pop
jb
xchg
icebp
int3
cmp
dec
addr16
pop
decb
add
add
es
xor
nop
subb
icebp
jo
outsb
mov
mov
or
popf
sar
ret
mov
cmc
aaa
cld
push
adc
xor
ds
cwtl
cltd
lods
enter
hlt
pop
lea
inc
cmc
mov
loop
cmpsb
xor
scas
adc
into
or
lret
imul
or
sbb
mov
test
cmpl
das
adc
mov
cltd
aas
mov
negl
inc
loopne
sbb
test
add
cmp
mov
inc
mov
pop
punpckhdq
ret
shll
std
jl
xchg
adc
mov
insb
cmp
aad
scas
je
cmp
in
jmp
mov
push
inc
emms
and
rol
xor
loopne
xchg
outsb
xchg
adc
ret
push
jmp
stc
aad
in
pop
xchg
mov
cwtl
les
ficompl
xor
adc
push
dec
xlat
xchg
xlat
cmpb
leave
shrb
sbb
xor
inc
and
mov
fcomps
fistl
pop
jmp
adc
nop
cmpsl
jle
ds
jle
iret
inc
jl
rorb
ret
pop
imul
lods
mov
loop
fildl
mov
stc
fiaddl
and
nop
dec
pop
popa
imul
ficomps
pushf
mov
mov
cmp
cmpsb
mov
movsb
mov
movsl
mov
xor
jp
xchg
inc
jle
xchg
lret
sarl
and
and
inc
sbb
sbb
xor
cmp
or
fisubrl
leave
sub
into
jle
add
mov
lret
fistps
add
cmp
mov
shlb
ljmp
pop
sbb
je
mov
sub
leave
pop
cmpsl
adc
test
sbbl
pop
out
xchg
lahf
or
push
xor
pushf
and
xchg
ja
pop
aaa
repz
stc
inc
scas
mov
into
push
dec
push
push
les
mov
lds
nop
ds
or
push
dec
in
xlat
lret
pushf
xchg
mov
mov
das
data16
in
and
or
outsb
cmp
fisttpll
stos
push
bound
enter
insb
jae
es
testb
push
div
mov
pop
or
ret
and
imul
inc
adc
sahf
and
xor
adc
dec
fisubrs
push
iret
int
icebp
inc
mov
pop
dec
hlt
adc
jne
mov
das
movsl
arpl
fcmovu
push
popf
push
movsb
test
xor
mov
pop
pop
pop
ja
loopne
outsl
push
pop
dec
or
ret
inc
testb
xchg
icebp
add
std
xchg
rcl
mov
push
xor
adc
xchg
lds
mov
stos
inc
push
mov
cmpl
sub
pushf
xor
jmp
xor
mov
mov
insb
imul
sbb
dec
jne
das
adc
push
cmpsl
cltd
sub
outsl
pop
jle,pn
pop
sub
cmp
push
lea
add
aas
cltd
pop
jbe
mov
addl
icebp
fwait
mov
xchg
mov
mov
imul
fwait
jno
xchg
cwtl
into
jb
pop
out
imulb
div
mov
sub
mov
imulb
mov
ret
or
mov
add
mov
insb
in
add
test
xor
pop
add
sub
mov
addr16
rcrb
mov
push
and
fstl
in
xlat
sub
push
ret
ja
fcompl
mov
pop
rol
dec
xlat
push
or
ss
inc
fst
movsl
ret
roll
dec
jmp
jbe
push
sti
addr16
cmp
push
cmp
mov
mov
mov
inc
and
and
push
lcall
cli
in
insb
jns
sub
jb
cli
popf
sbb
shrb
iret
push
loopne
xchg
popl
insb
cmpsl
imul
add
ja
cmpsl
inc
mov
sarl
movsb
push
shrl
adc
cmp
dec
pushf
addr16
popa
xor
pop
inc
mov
pop
icebp
aas
cli
repnz
hlt
add
ret
lahf
pop
mov
rolb
xchg
xchg
loope
sub
sbb
out
inc
sbb
popf
sar
pop
or
outsl
dec
jnp
push
mov
ljmp
fcmovu
cld
andb
mov
daa
add
out
hlt
stos
xchg
int3
aaa
mov
sbb
mov
sarl
xor
and
xchg
jge
xchg
inc
int
mov
mov
ret
cltd
data16
mov
mov
jmp
push
call
jl
mov
add
mov
test
outsb
sub
imul
mov
lahf
inc
imul
jnp
mov
int3
hlt
push
push
mov
scas
inc
pop
repz
cs
jecxz
push
das
lods
push
sbb
cmp
push
mov
icebp
jmp
iret
cmp
sbb
fistps
lds
dec
adc
sbb
add
sub
mov
test
cmp
pop
test
pop
jmp
or
mov
push
pop
lret
jl
xchg
mov
int
ds
lret
call
je
imul
xor
int3
ljmp
adcl
stos
pop
sbb
mov
adc
lods
mov
test
add
enter
cli
mov
leave
addr16
mov
jnp
sarl
iret
dec
mov
in
cwtl
movsb
sbb
xchg
cmc
push
repz
sbb
push
stc
dec
bound
and
data16
in
sub
jle
jno
push
xor
mov
ss
cwtl
add
push
push
ss
js
xchg
adc
jmp
push
in
mov
jmp
and
cmp
popf
idivb
jnp
mov
mov
sub
and
add
data16
mov
xor
shl
inc
inc
ds
dec
pop
lret
out
xlat
cli
test
stc
addr16
dec
mov
cmp
flds
fbstp
punpcklwd
jo
pop
push
loope
pop
mov
dec
in
pusha
dec
and
xchg
stos
pop
mov
lods
fwait
clc
cltd
and
dec
jle
sti
std
xchg
mov
sbb
ret
cmp
mov
shrb
ret
jmp
mov
mov
sbb
inc
arpl
inc
fdiv
outsb
mov
stc
sub
hlt
fdiv
neg
xchg
lahf
push
test
jnp
dec
or
adc
fdivr
lcall
ljmp
pop
mov
adc
sbb
out
movsb
cs
xor
imul
stos
xchg
test
xchg
addr16
pop
jno
jo
dec
popa
push
mov
push
dec
cmc
stos
inc
inc
leave
dec
incl
add
xchg
insb
adc
testb
rorl
lea
rolb
es
xchg
xchg
push
inc
mov
dec
test
call
cli
mov
jl
jmp
shlb
push
inc
dec
adcl
and
mov
xor
aad
aam
hlt
cltd
sub
aad
mov
push
and
pushf
andb
or
ret
out
mov
push
jbe
jl
jnp
adcb
fmuls
icebp
roll
repz
mov
out
jbe
cmp
jnp
nop
pop
xor
les
cmpsb
mov
daa
add
into
xlat
xchg
out
pop
sub
cmp
daa
in
sub
icebp
mov
mov
jno
les
adc
call
mov
and
popa
enter
stc
jg
int
subl
sbb
aas
push
cli
out
and
sub
ds
cmp
jo
inc
adc
in
pop
sarl
or
dec
movsb
sub
arpl
je
rcr
lods
insb
movsl
dec
inc
fcoml
ret
mov
jmp
out
out
mov
testb
int
add
pop
gs
xor
xchg
or
idivb
fdivrl
dec
jbe
xor
mov
push
ss
adc
and
jmp
adc
out
mov
cs
push
aad
jecxz
mov
out
jne
enter
out
in
push
jmp
daa
lea
xor
and
xor
cmp
pop
pop
add
fldenv
and
pop
stc
out
mov
cmpsb
daa
aad
lock
add
cmpsl
jg
int3
push
int3
cmp
aas
int
movsl
repz
lds
and
xchg
lods
xchg
sbb
pop
or
movsb
cmpsl
or
dec
lea
cmp
stos
pop
dec
pop
in
wrmsr
ret
movsb
popa
push
mov
jl
in
ds
call
sbb
xor
pop
add
fcoml
mov
and
push
test
push
xor
out
pop
insl
shll
out
jnp
and
je
xchg
sahf
stc
sarl
mov
fstpl
cmp
movsl
nop
mov
ret
xlat
pop
insl
or
pop
adcl
jae
push
push
enter
das
sbb
mov
jecxz
lods
outsb
test
cmpsb
adc
jb
ret
filds
xlat
push
dec
test
sbb
in
roll
fmull
roll
or
mov
jl
xor
mov
pop
xchg
xchg
mov
mov
pop
sub
addb
das
mov
xchg
jb
sbb
fmul
sbb
add
xor
inc
or
mov
es
mov
pop
adc
gs
inc
lcall
out
inc
bound
push
popf
psubusw
pop
pop
sbb
or
ljmp
imul
push
sbb
test
test
and
add
int3
imul
lods
cmp
out
test
push
stc
inc
lods
mov
mov
stos
mov
push
stos
lret
mov
fiadds
addb
sub
cwtl
mov
pop
xor
inc
roll
out
jge
add
cmpsl
and
nopl
aam
lret
mov
inc
mov
nop
push
fst
jmp
movsb
cmpl
dec
arpl
outsb
lods
in
cs
jge
adc
pop
negb
push
movsl
pop
xchg
xchg
les
xchg
add
jg
dec
insl
ds
mov
mov
dec
add
mov
pop
adc
imull
and
jp
mov
jne
mov
jne
cli
stos
movsb
sub
cmp
icebp
inc
push
das
loopne
adc
lods
out
jae
sub
in
dec
or
sub
inc
mov
inc
adc
sub
fmull
push
and
xlat
push
in
fcmovnb
add
ret
push
sub
out
pop
stos
sbb
push
mov
or
or
int3
xchg
rcr
inc
mov
out
fistpll
cmc
xor
mov
mov
sub
xor
je
lods
je
mov
sbb
cmp
push
pushf
mov
mov
and
addr16
push
cmp
rcrl
mov
sbb
sarb
ss
or
popa
leave
rorb
and
pop
push
imul
cmc
xor
sbb
sbb
mov
nop
jnp
enter
xor
jmp
lret
in
jg
add
mov
leave
sub
aas
mov
sbb
inc
fdivs
add
xor
jno
jo
sbb
std
push
mov
loop
adc
stos
das
mov
and
iret
or
xchg
pop
push
es
jnp
cmc
ds
and
mov
iret
adc
jg
lods
aad
sub
lahf
xchg
xchg
dec
pop
jmp
sti
sbbl
lahf
sub
repnz
bound
out
testl
sub
out
jns
jns
adc
ret
mov
ficomps
mov
dec
pop
adc
cmp
dec
lods
xchg
sbb
cmp
icebp
push
sbb
ficoms
shll
cmp
or
aas
sbb
mov
mov
sahf
mov
mov
add
stc
sbb
adc
montmul
cmpsb
subb
add
xchg
in
bound
inc
mov
rorl
movsb
outsb
fs
cmc
repz
inc
and
fdivs
xor
mov
push
add
std
inc
cmpsb
fucomp
shlb
ret
mov
xchg
xor
push
gs
and
xor
jl
popf
add
stos
jo
aaa
mov
or
loop
xor
fcoml
cmp
lret
sbb
cmc
enter
push
xchg
imul
sbb
out
cmp
push
call
cmp
insl
mov
pop
jmp
fdivrs
test
add
outsl
test
enter
pop
add
bswap
dec
je
adc
jbe
adc
add
imul
cld
adc
inc
sti
icebp
ret
in
cmp
sti
adc
dec
cmpsl
push
sub
lds
dec
dec
xchg
cmp
sbb
inc
or
icebp
test
adc
mov
dec
cmp
sti
sub
push
int3
inc
lret
ret
les
mov
stos
clc
fstpt
inc
mov
aaa
pop
push
or
hlt
adc
and
xchg
ret
cmp
pop
mov
mull
jo
xchg
pop
imul
lods
loop
pop
mov
pop
enter
push
mov
jae
jle
xor
sub
clc
lcall
ds
cld
mov
sarb
je
cmp
jns
and
roll
add
hlt
std
call
push
mov
sbb
adc
jnp
mov
jp
loope
cmp
jmp
sbb
push
xchg
mov
dec
cmp
mov
andb
movsb
push
mov
push
push
or
push
xor
inc
push
pop
pop
xor
test
loop
add
rol
jge
in
jbe
xchg
mov
jns
or
mov
test
lods
jbe
pusha
add
lods
imul
push
adc
pop
fmuls
adc
lods
das
dec
jmp
popf
pop
pop
dec
pop
mov
jge
pop
cli
int3
adc
cli
es
clc
lock
pop
movsl
push
dec
sti
fidivrs
mov
int
xor
out
xchg
rep
mov
test
lds
aas
mov
jno
lock
push
xchg
outsb
packsswb
fnstcw
push
ds
cmc
push
popa
push
repnz
cmp
test
out
push
sub
dec
and
cwtl
stos
push
nop
cmp
cmp
cmp
shrl
inc
call
nop
sahf
data16
mov
lea
lods
fistpll
xor
pop
xchg
jle
sub
dec
xor
pop
repnz
loopne
add
ss
xchg
inc
stc
fnstenv
js
add
xor
loope
scas
sbbb
or
mov
xchg
rolb
mov
stc
dec
arpl
icebp
mov
shrb
je
add
dec
add
mov
sbb
jecxz
fs
ss
test
mov
sbb
xor
pop
imulb
cltd
call
cmp
xchg
cmp
push
pop
lret
sub
pop
out
or
push
add
loopne
pop
xchg
lds
ja
and
push
inc
xchg
mov
rcll
mov
mov
shll
mov
mov
or
inc
mov
mov
test
mov
psadbw
dec
jbe
mov
mov
aam
cld
xchg
stos
xchg
test
inc
pushf
lea
pop
and
fcoms
aas
clc
outsb
or
pop
push
rcrb
dec
sahf
and
ret
or
decb
cmp
sbb
cmp
push
popf
sub
inc
lcall
frstor
lahf
xor
push
movsl
inc
xchg
adc
cmp
mov
aas
mov
dec
xlat
cmp
jae
lea
mov
adc
inc
inc
dec
loop
mov
mov
sbb
jg
dec
pusha
dec
lea
xchg
mulb
call
faddl
outsb
jmp
movsb
mov
mov
movsl
mov
mov
or
mov
les
push
inc
jp
xor
or
into
pop
out
pop
movsl
sbb
fistpl
or
cmc
lea
mov
sub
aaa
inc
cmp
daa
lret
lods
xchg
loopne
xchg
mov
imul
mov
arpl
mov
xor
outsb
mov
cmp
movsl
pop
jb
pop
mov
shr
sbb
popl
cs
push
mov
scas
cld
xchg
jns
mov
stos
add
or
cld
fcmovbe
inc
mov
sbbl
cld
mov
push
lahf
xchg
outsb
xchg
or
movb
sbb
stos
mov
lds
inc
rorb
adc
hlt
loope
fidivs
jno
mov
xor
insl
fnstenv
xchg
arpl
xchg
insl
pop
rcll
rorb
cmp
and
push
xchg
mov
enter
subl
inc
cmpsb
stos
xchg
scas
iret
inc
inc
lret
lea
fsubs
xor
and
push
cltd
push
lgs
cmpsl
dec
push
lcall
cld
cltd
or
hlt
repnz
mov
mov
adc
jl
cwtl
ljmp
pop
sub
inc
adc
hlt
fwait
loope
add
sub
xor
mov
inc
push
orb
mov
je
inc
dec
inc
mov
int
or
loop
or
fisttpll
or
xchg
gs
fildll
mov
aad
popf
inc
insl
out
fldcw
jle
rorb
into
mov
notl
not
mov
and
rolb
mov
push
sbb
cmp
xchg
mov
imul
cmp
pusha
rcll
or
loop
repnz
test
mov
bound
in
ficompl
and
je
jns
xchg
dec
lods
xor
push
xor
fldl
pop
std
mov
pop
fwait
push
or
inc
push
push
mov
or
push
or
notb
cwtl
adc
negl
shr
aas
xor
mov
rsm
adc
enter
jae
adc
fwait
lret
sub
arpl
cmpsb
sbb
or
sbb
adc
and
lock
mov
cmp
scas
outsb
push
fstl
jmp
jne
das
lret
movsb
mul
add
xor
push
or
push
xchg
movhps
mov
pop
fs
and
and
xchg
mov
xchg
mov
add
icebp
insl
js
jg
xor
pop
cltd
cmp
or
das
movsb
lds
dec
add
xchg
js
add
or
orl
pop
jne
je
pop
pop
call
jns
dec
bound
sar
inc
dec
mov
jecxz
inc
jge
sbb
fsubrl
sbb
lock
fiaddl
xor
cs
jge
push
lahf
mov
mov
xchg
lods
in
adc
cmpl
gs
push
and
mov
shll
mov
xor
in
mov
outsb
and
es
int3
stos
jmp
mov
mov
jne
cwtl
sti
adc
fisubl
push
loopne
jecxz
aam
aaa
in
imul
rorl
adc
clc
add
jb
mov
addl
int3
jle
pop
sbb
mov
fsubr
mov
mov
dec
xorl
icebp
pop
fildl
inc
xor
int
jp
mov
mov
push
mov
idiv
mov
test
js
push
ficoml
or
mov
xchg
xor
sub
and
sbb
mov
test
pushf
movsl
jno
aaa
push
daa
enter
addl
mov
and
out
add
mov
and
rcr
lock
jnp
jns
outsb
xchg
add
sub
inc
test
pop
adc
jns
stos
shrb
cmc
fisubrl
or
imul
add
sti
sub
and
mov
or
xor
jle
mov
push
outsl
xlat
scas
xchg
pop
inc
idivl
jnp
dec
jmp
hlt
sub
sub
ja
leave
out
scas
in
cmp
mull
insl
or
mov
jno
testl
sahf
pop
fisttps
adc
cmp
out
sbb
fldl
push
push
jge
mov
call
mov
push
inc
xchg
gs
add
movnti
add
subb
pop
ret
cmc
jae
adc
mov
and
fwait
pop
mov
mov
repz
mov
inc
cmp
out
xor
aam
dec
mov
rorb
lods
mov
sti
mov
stos
adc
jle
sub
xchg
mov
repz
std
fcompl
xchg
cmp
adcb
push
pop
cmpsb
test
pop
loope
jne
xchg
lock
movsl
hlt
adc
lret
hlt
hlt
mov
push
fbstp
xor
arpl
pop
mov
fisubs
pop
jne
or
pop
mov
sbb
clc
sbb
cmpb
mov
mov
data16
adc
xchg
rcll
and
jp
or
loope
scas
and
dec
std
cmp
sahf
leave
xor
popa
sbb
aam
add
jns
sub
cmp
mov
mov
push
fcomps
ds
or
call
push
das
inc
sub
push
pop
sti
lods
pushf
and
dec
xor
jl
insb
repnz
xorb
jp
fcompl
out
into
jbe
xor
and
add
mov
sub
xor
push
cmp
push
dec
mov
out
lret
dec
xor
lret
sti
xchg
and
lock
xor
mov
fstpl
xlat
jp
leave
out
dec
imul
fcoms
je
fbld
js
xor
imul
incb
pop
or
xor
clc
push
pop
out
sbb
and
lahf
push
pop
sbb
xchg
mov
jb
sbb
shll
ficompl
imul
cmp
loop
cmp
mov
test
inc
repnz
cld
adc
into
pop
in
dec
shrb
cmp
pop
sbb
das
xchg
inc
pushf
dec
int3
into
fisttpll
mov
lods
pop
push
mov
sbb
mov
aaa
inc
dec
lock
push
jns
ss
jne
ja
cmp
jl
inc
mov
add
imul
dec
jo
enter
inc
jmp
int3
fwait
xor
inc
push
imul
insb
sbb
sbb
and
add
sbb
jo
jg
nop
ret
sub
or
sub
repnz
and
jnp
popf
xchg
call
jbe
or
jle
jle
mov
in
je
loope
cs
test
or
adc
and
addb
fwait
sbb
mov
dec
and
and
and
inc
mov
adc
mov
loop
shlb
pop
repnz
add
cmp
pop
push
lret
jae
rorl
rcrl
pop
cmpsb
add
lret
and
repnz
sti
notl
inc
fistl
and
push
jae
cmp
or
xor
out
mov
scas
rorb
repz
push
mov
and
jp
lea
jb
fadds
ficompl
push
cmc
cmpsl
fdivrp
xor
push
push
ret
daa
js
dec
add
mov
rcrb
lods
dec
xchg
dec
fsub
pop
pop
inc
pusha
aas
testl
loop
sbb
movsb
stos
ja
mov
out
inc
imul
pop
inc
gs
adc
out
xchg
pusha
adc
call
dec
pop
in
push
or
mov
mov
add
nop
xchg
aam
mov
adc
leave
std
push
add
mov
pushw
sti
addr16
bound
iret
test
jge
jno
xchg
mov
cmc
cltd
pop
mov
into
and
pop
pop
dec
mov
inc
mov
lea
mov
adc
movsl
cmpsl
int
mov
mov
add
dec
inc
add
fidivrl
fwait
xchg
and
cmp
nop
mov
and
inc
into
mov
mov
and
loope
dec
sub
loopne
adc
mov
sub
in
push
in
inc
mov
or
push
mov
jle
or
sti
out
sbb
cmp
fimuls
daa
pop
mov
cmp
fnstsw
mov
xor
pop
jb
pop
out
xor
sahf
sbb
push
insb
mov
adcl
add
jle
int3
stos
fcmovnu
sbb
cmp
pop
popa
stos
lret
cmp
or
outsb
int3
pop
mov
cmp
cmp
out
pop
test
pop
inc
lods
popa
cmp
popf
mov
into
scas
repnz
out
jmp
sub
pushf
and
cli
and
jg
jnp
sub
test
jge
pushf
lcall
test
aas
mov
in
and
push
das
push
fstpl
stos
mov
mov
adc
push
jle
inc
sbb
mov
push
jo
scas
push
mov
and
lds
mov
fildll
sbb
push
rcl
mov
jno
lret
cmp
jecxz
dec
inc
lcall
add
out
add
lahf
sub
inc
pushl
out
mov
xchg
pop
daa
outsb
push
mov
pop
xor
fldcw
xor
inc
sbbl
std
jp
adc
ja
mov
push
divl
rcrl
xor
aam
adc
subl
aad
mov
push
loopne
sarb
out
test
popf
notl
xlat
in
ds
stc
add
add
fdivs
mov
mov
ja
arpl
ljmp
and
clc
pop
push
cmc
cwtl
mov
add
js
pop
lock
adc
movsl
push
add
stos
mov
popf
or
xor
sbb
sahf
in
lods
mov
aad
cmc
adc
fbld
sub
adc
js
cld
sbb
mov
mov
mov
popa
mov
movsl
push
arpl
into
rcll
out
ss
addr16
inc
cmp
adc
mov
xor
xor
ret
and
and
jmp
fldcw
vpmulhw
loope
repnz
roll
xor
test
in
ret
adc
pop
call
inc
std
outsb
js
dec
mov
sub
sbb
out
or
xchg
cmp
adc
shll
xor
push
and
mov
cmpsb
nop
adcb
mov
in
inc
ljmp
les
sbb
dec
es
jo
mov
nop
addr16
push
cmc
jno
in
jl
imul
inc
dec
lods
pop
pusha
push
mov
sahf
push
or
jg
jno
pushf
or
inc
lea
cli
lret
add
test
push
cmc
inc
cli
cltd
add
mov
cmp
aas
mov
lods
adc
mov
shlb
scas
lahf
pop
and
mov
jp
data16
push
dec
jno
dec
ss
in
sub
fistps
xchg
mov
imulb
movsb
dec
mov
mov
xchg
aaa
scas
push
data16
hlt
les
pop
pop
jmp
mov
sahf
dec
rcrl
or
sub
data16
repnz
repz
mov
ss
in
arpl
mov
mov
mov
sbbl
jo
mov
dec
popa
add
add
xor
arpl
and
bnd
cltd
cmpsl
mov
adc
jge
and
sbb
jp
inc
pop
ss
into
sbb
test
shlb
pop
ds
mov
or
leave
xchg
xor
cmpsb
insl
pop
out
addr16
mov
cmp
inc
addr16
cmpsl
and
rcl
push
or
pop
mov
dec
test
movsb
pop
addb
cs
mov
cld
push
test
or
sbb
loope
push
movsl
adc
xor
dec
push
jg
gs
int
addb
leave
pop
movsb
aaa
pusha
das
pop
rorl
cmp
dec
insl
jle
mov
jnp
pop
loopne
cltd
or
jae
lock
cli
cmp
nop
pushf
dec
stos
mov
mov
cltd
or
xor
ja
enter
adcb
and
pmulhw
scas
push
add
add
testl
mov
sub
daa
push
test
sbbb
mov
sbb
mov
lods
dec
insb
pop
cwtl
xor
ret
mov
mov
xchg
jge
test
pusha
aad
call
cmpsb
sahf
hlt
imul
cwtl
in
shrb
mov
pop
nop
test
jne
loopne
push
or
adc
mov
scas
loope
mov
sbb
jno
jnp
xchg
cmp
fucom
cmp
cmpl
adc
or
xchg
je
mov
popfw
and
or
and
inc
mov
sbb
jp
and
popa
mov
into
dec
jbe
sbb
xchg
mov
sub
sub
addr16
add
ret
popf
je
rorb
push
testl
cmp
push
fstl
adc
cmpl
imul
popa
repnz
mov
mov
dec
scas
arpl
lock
icebp
inc
mov
xor
fwait
inc
xor
pop
out
sti
or
mov
mov
mov
and
mov
adc
mov
mov
mov
stc
adc
shlb
outsb
loope
xchg
int3
sub
pop
add
pop
aam
add
fwait
sti
repz
rep
xchg
cmpsb
adc
and
and
jge
dec
dec
add
cmp
sbb
jl
inc
pusha
sub
mov
js,pt
adc
xor
xchg
sub
mov
out
aam
mov
ja
mov
lahf
and
adc
push
ss
loop
enter
xchg
stos
out
in
pushf
inc
cmp
ret
xor
or
hlt
add
xor
sbb
into
into
cmp
sbb
pop
dec
ds
sarl
cwtl
mov
lcall
int3
pop
lods
std
inc
repnz
push
jno
and
xchg
adc
cli
cmpb
lret
xor
hlt
jne
aam
adcb
and
push
scas
and
add
out
dec
mov
mov
and
inc
and
in
stc
add
push
divb
and
jg
fbstp
push
popa
mov
jnp
out
aam
push
push
ja
mov
loopne
es
add
fcmovu
inc
js
cltd
dec
daa
aas
jmp
mov
mov
sub
push
push
loopne
test
or
pop
lock
cltd
jle
hlt
adc
cld
and
jmp
call
jae
cmp
pusha
dec
js
outsl
in
jmp
push
imul
and
movsb
mov
sub
cmp
xchg
dec
sub
xchg
sub
imul
subb
jp
or
loopne
roll
cmp
and
push
adc
cmpsb
dec
ficoml
dec
lcall
pop
lods
dec
inc
lods
stc
popa
dec
call
xor
jmp
mov
sbb
leave
cltd
or
adc
imul
cs
xchg
mov
out
jnp
stos
ret
popa
hlt
fwait
mov
add
ja
lea
cmc
dec
push
mov
in
loope
fsubrp
push
sub
mov
and
xor
cs
and
pop
cmpsl
fbstp
ss
sub
and
xor
lds
lock
xor
rolb
mov
ret
movsb
or
lds
bound
repz
pop
lret
xchg
lock
jmp
shrl
popa
ror
dec
xchg
out
sahf
sub
dec
lods
cli
and
insb
scas
sbb
aad
xlat
jmp
jl
aam
inc
cli
jle
xchg
inc
mov
adc
mov
pop
ffree
outsl
fistpl
mov
inc
in
popf
mov
mov
out
cli
sahf
in
lods
adc
decb
daa
arpl
stos
daa
xchg
std
mov
or
pop
jge
jp
jge
divb
adcb
popa
add
aas
xchg
dec
ds
xor
aad
arpl
xchg
je
jae
cld
pop
out
in
xchg
sti
imul
adc
inc
xor
or
dec
outsl
gs
push
inc
and
jo
xor
jp
inc
test
insl
cmp
sub
cmp
sarb
mov
sbb
push
or
fptan
fildl
fs
es
addb
push
dec
out
stc
mov
jb
pop
or
ds
test
cmp
xor
mov
dec
jg
mov
mov
dec
jae
mov
xchg
fwait
mov
pop
pushf
pop
or
jmp
inc
fidivs
into
test
or
iret
stc
sbb
push
pop
jmp
pushf
shl
mov
idivl
xor
jp
mov
outsl
imul
fwait
lods
mov
imul
cli
xor
rcrb
js
daa
push
and
imul
mov
icebp
cs
call
and
fisttpll
cltd
das
insl
mov
xchg
mov
xchg
imul
int3
repz
ljmp
inc
sahf
cmpsb
add
sti
in
out
adcl
pop
push
daa
jae
dec
dec
enter
mul
nop
cmp
push
cmp
mov
push
add
inc
lcall
mov
xor
test
scas
les
sbb
mov
push
and
jnp
mov
std
lahf
shrb
dec
es
jnp
adc
mov
sub
or
and
sub
push
in
mov
push
rolb
dec
adcl
loope
mov
mov
mov
sbb
jp
dec
ss
iret
notb
push
or
adc
loopne
adc
test
xchg
dec
out
leave
adc
or
push
cmp
lret
adc
cltd
dec
add
mov
fisttpl
icebp
and
movsl
jmp
shlb
and
mov
xor
adc
and
jle
movsl
inc
incb
int
inc
js
pop
test
stc
cwtl
pop
loope
lods
in
sbb
add
scas
bnd
movsb
pushf
adc
sub
hlt
mov
cmp
dec
jl
adc
xlat
jge
pop
icebp
fmuls
xor
mov
das
icebp
imul
add
xchg
push
rcll
outsl
popa
pop
xchg
jmp
mov
sub
lods
imul
daa
ds
inc
xchg
push
jmp
js
sbb
fidivl
cmp
cld
nop
jmp
out
insl
xchg
jmp
push
and
push
xchg
mov
or
xor
es
sbb
adc
les
add
popa
fnstenv
jmp
notb
or
addr16
insb
pop
pop
cmp
add
cmp
mov
stos
insb
std
lahf
lds
or
dec
cwtl
mov
push
cmp
xchg
imul
push
ds
sbbl
pop
cmpsb
popa
push
add
outsl
add
mov
in
sarb
data16
sub
pop
xor
xor
cld
inc
mov
fildll
rcrb
popa
clc
and
cmp
jns
mov
pop
jmp
or
and
pusha
ret
or
imul
fistl
pop
das
fwait
mov
outsb
lahf
ljmp
ret
in
mov
idivl
sahf
sbb
rclb
push
pop
cld
loopne
sbb
js
setp
adc
das
mov
repnz
subb
cmpsl
and
test
jl
rol
mov
mov
loopne
ja
add
rcrb
cmp
pushf
sub
fstl
jmp
sbb
jns
adc
xor
or
cli
mov
fs
adc
mov
stos
lods
inc
mov
test
add
bound
push
fcmovnb
inc
dec
jno
push
insl
sub
iret
cmp
stos
mov
dec
and
sbbl
jb
testb
mov
jl
jnp
dec
push
inc
or
fidivrs
or
ja
insb
mov
push
les
mov
pushf
shlb
push
ds
or
adc
add
add
insb
in
in
push
fcomi
add
add
icebp
cmp
and
fisubrs
push
or
cwtl
and
jne
cs
rcrb
or
orb
xchg
pop
dec
adc
sub
cwtl
adc
and
jbe
repz
testb
sub
sub
cmp
pop
xor
cs
outsb
ss
insb
scas
push
fisubrl
filds
push
rorl
pop
dec
in
out
mov
stc
xor
scas
or
pop
xor
cld
imul
stos
daa
mov
lret
stc
aas
mov
dec
jne
jg
adc
fs
mov
cmp
insl
cltd
ljmp
aam
out
and
sub
inc
ja
fildl
adc
cmp
push
xor
inc
push
addr16
xchg
scas
xchg
out
cltd
fxtract
das
std
pop
shl
sub
and
adc
inc
sbb
xor
loope
aas
pop
cmp
or
pushf
dec
out
je
sbb
mov
sub
clc
jnp
inc
aaa
jbe
pushl
je
aad
sbb
push
fisubrs
jmp
mov
xor
or
pop
lods
push
dec
pop
xchg
push
jns
test
into
orl
inc
daa
adc
dec
filds
inc
pop
mov
and
pshufw
lea
movsb
cmp
aam
jo
icebp
dec
sub
and
push
xor
mov
ss
pop
mov
out
dec
movsb
jns
mov
in
push
xchg
push
call
lock
xchg
dec
popa
xorb
cwtl
push
pusha
mov
push
add
cltd
xor
push
cmpsb
imul
push
xor
shrl
jb
into
xchg
fcomps
or
push
cwtl
add
xchg
fisttps
pop
mov
and
bound
insl
stos
push
push
pop
inc
jne
shlb
fbstp
repnz
andb
sar
xchg
mov
cmp
shlb
fwait
mov
mov
pop
sub
shl
outsl
popl
cmp
cmpsl
push
pusha
arpl
data16
mov
enter
je
sti
jno
out
sbb
pop
or
jae
add
test
cmp
add
imul
iret
and
jp
mov
scas
rorl
xchg
mov
or
jmp
xor
aaa
pop
cwtl
push
pop
popf
clc
fcmovnb
xchg
inc
push
add
sub
mov
hlt
mov
insl
loope
lahf
jb
push
add
test
adc
icebp
jle
fisubrs
or
cltd
cmp
daa
xchg
mov
xchg
popf
out
fistpll
repnz
sahf
xor
or
xor
nop
repnz
xor
jno
stc
inc
or
jg
arpl
dec
lock
insb
test
fucomi
mov
xchg
in
arpl
pop
into
dec
std
lret
sbb
sbb
loopne
je
loop
sub
sub
arpl
inc
testb
lret
sbb
es
inc
xchg
sub
addl
jecxz
ljmp
adc
movsl
fsubp
ret
cwtl
dec
outsb
bound
lret
loope
jae
dec
movsb
mov
xchg
pavgb
cmp
inc
adc
pop
repz
daa
cld
std
adc
xor
andb
xchg
dec
iret
fnstcw
loopne
push
add
js
mov
lahf
scas
dec
es
push
in
test
scas
scas
add
jnp
pop
mov
fdivrl
pushf
das
push
orps
roll
int
or
fnstenv
lret
outsb
jecxz
mov
ret
sbbb
mov
cmp
jnp
sarb
nop
xor
aad
enter
pushl
arpl
xchg
xchg
out
inc
les
ljmp
pop
aas
sub
andl
popa
test
xchg
insl
loopne
xchg
jno
dec
cld
jns
enter
aam
sbb
lcall
test
cld
iret
mov
mov
mov
into
xchg
jmp
ja
mov
dec
pop
call
sub
fldl
jge
outsb
outsl
and
adc
xchg
fistpl
rep
test
push
adc
fdivrs
mov
push
idiv
inc
lea
rcl
sbb
lcall
sbb
xor
pop
rcl
jo
outsb
mov
push
sub
mov
imul
cs
std
dec
xor
fwait
jecxz
jns
lcall
mov
add
xchg
and
xlat
cmp
inc
mov
xor
xchg
xor
sbb
dec
mov
dec
adc
push
xor
lret
dec
pop
mov
mov
adc
pop
or
es
in
sbb
test
daa
mov
xchg
scas
fwait
addb
adc
arpl
in
pushf
inc
cli
es
xor
push
adc
add
in
inc
das
out
mov
dec
jne
pushf
dec
lret
out
adc
gs
xchg
mov
fnsave
repnz
pop
cmc
outsl
jb
aas
outsl
and
mov
pop
cmp
add
fwait
dec
jo
cmp
or
lods
mov
dec
jne
int3
and
mov
push
xchg
mov
rclb
pop
shr
and
xchg
push
data16
adcb
stc
movl
bound
push
popa
ror
xor
inc
daa
outsl
cltd
xor
mov
loope
stc
sahf
push
ljmp
or
rcrl
sar
xor
dec
int
or
cs
pop
mov
mov
cmpsl
jns
xor
bound
inc
pusha
shrl
jmp
dec
adc
insl
jecxz
mov
enter
add
pop
cmpsl
xchg
icebp
mov
lock
mov
lods
pushf
aam
inc
push
push
cmp
rclb
mov
movsl
imul
and
mov
mov
nop
and
mov
lea
popa
dec
fs
pusha
pop
sahf
sbb
or
jnp
mov
cmpsb
adc
mov
testl
nop
push
dec
fistps
mov
rolb
push
test
lds
xchg
rcl
mov
fwait
shll
fwait
cs
dec
dec
or
loopne
fstps
mov
int3
ljmp
stc
pop
fnstsw
jnp
cmp
mov
test
iret
xchg
es
cmpsl
data16
call
clc
aad
popa
lret
stos
dec
test
xor
push
out
clc
aam
nop
push
ret
mov
stc
push
xor
cmc
mov
or
roll
xchg
add
mov
clc
rcl
lcall
mov
in
notl
imul
and
sbb
rolb
lods
popa
cli
push
ja
rolb
adc
aaa
cmp
sub
cmp
jge
orl
xchg
cmpsb
jecxz
sbb
scas
or
movsl
add
dec
out
leave
and
loop
adc
sbb
stos
nop
fbstp
test
push
push
lods
xchg
int3
mov
fisubrl
outsl
ljmp
jns
shl
fwait
pop
inc
sti
shrl
or
and
fmul
std
int
xchg
jle
test
aas
dec
arpl
push
push
outsl
jmp
mov
icebp
mov
ret
lcall
ljmp
outsl
push
cmp
das
mov
ljmp
fcmovbe
inc
std
mov
sysexit
int
stos
scas
movq
lods
in
cmp
sbb
cmp
xchg
ss
mov
mov
dec
xor
inc
jl
and
xor
cltd
push
xor
jg
pop
adcb
jne
sub
cwtl
push
mov
jecxz
les
lds
cmp
mov
sub
lods
js
ss
popf
in
dec
dec
pop
push
dec
inc
cmpsb
mov
mov
in
es
dec
movsl
dec
outsl
xor
inc
jb
loopne
push
test
xchg
das
inc
fildll
xchg
movsb
cwtl
shlb
and
pop
pop
stc
jge
and
std
inc
stos
xor
jmp
int3
sbb
stos
mov
sub
pop
dec
lods
int
iret
hlt
outsb
std
push
mov
dec
pop
dec
jp
lahf
pop
ja
jnp
adc
inc
sbbl
mov
test
in
into
and
and
sub
int3
aad
pop
call
xchg
ljmp
lcall
sti
sub
lret
mov
mov
jo
test
sti
fisttpll
sub
and
loop
dec
sbb
subl
lock
sbb
adc
aaa
and
cmp
mov
fsubl
pop
les
lods
inc
mov
dec
movsl
cmpsb
cmp
push
sub
inc
mov
arpl
ljmp
jo
pop
std
xchg
and
movsb
ljmp
mov
sahf
mov
stos
and
repnz
xchg
out
jns
jne
psrlw
xchg
jae
dec
shlb
dec
scas
test
iret
cli
jb
outsb
xlat
ret
mov
aad
movsb
outsl
sub
hlt
xor
dec
push
fimull
fsubrs
or
nop
outsb
cmpsl
and
mov
cltd
frstor
jbe
cmc
iret
jmp
mov
lret
aas
pop
add
adc
scas
mov
aad
scas
popa
cmp
loopne
xchg
add
cwtl
cld
mov
lcall
aam
or
add
fidivl
fildll
jp
or
sub
push
sub
lret
or
imul
setnp
mov
int3
testb
push
insb
pop
inc
leave
lret
stc
or
in
jo
cli
rcrb
outsb
notb
dec
mov
outsl
jle
cmp
cmc
idivl
xchg
mov
sarb
in
in
orl
pop
jp
enter
sub
pop
pop
je
outsl
push
lea
es
dec
test
dec
insl
pop
or
and
pop
dec
rcr
xor
xchg
adc
mov
iret
sbb
in
hlt
push
xchg
in
add
jmp
mov
sbb
test
icebp
mov
cmc
inc
pop
nop
fisubs
repz
fisubrs
inc
stos
stc
jl
xchg
test
add
push
push
mov
mov
add
jecxz
loop
cmp
xorb
mov
cmc
jmp
push
push
scas
shrl
push
mov
and
xor
sti
leave
mov
into
aas
pop
mov
inc
shl
dec
das
mov
outsl
cmp
sbb
mov
mov
cmp
adc
rolb
dec
ret
mov
inc
sub
and
aaa
fmul
aad
sbb
es
lds
incb
push
int
mov
cmp
in
int3
mov
cmp
pop
push
lea
and
pushf
sbb
sub
add
push
int3
in
sarb
out
and
cmpsl
out
shrb
arpl
out
cmpb
cmpsl
push
mov
aaa
fnstsw
call
mov
xlat
subl
jne
sub
scas
faddl
fdivrs
je
mov
jmp
cmp
cmp
dec
push
push
push
jns
pushf
sahf
fbld
movsl
adc
movsb
mov
inc
dec
inc
inc
sbb
sub
pushf
les
imul
pop
fldl
or
pop
xor
cmc
and
cld
xor
adc
stc
dec
je
ss
fcmove
dec
and
xor
stos
xor
or
lret
lahf
out
or
mov
das
dec
mov
aaa
mov
in
jge
or
stos
add
js
cmp
pop
clc
add
fcmovb
jle
pushf
mov
ljmp
xchg
mov
ljmp
into
faddl
and
or
pop
iret
sarb
and
sub
iret
push
bound
push
out
out
dec
out
stos
xor
popa
xor
adcb
inc
cmp
push
imul
jnp
loop
stc
sarb
int3
mov
cmpsb
jne
and
add
push
and
ds
mov
test
test
and
rorl
jo
je
mov
sahf
rcll
push
mov
jnp
mov
loopne
and
jnp
inc
jmp
sti
lods
scas
rorl
rorl
lcall
lret
loope
xchg
ret
aaa
xchg
xlat
and
sub
pop
ret
pop
sub
pop
cmp
xor
mov
lods
lea
fnsave
mov
mov
mov
leave
adc
lret
mulb
cmp
jmp
jae
stc
adc
sub
shlb
test
repnz
inc
fucomip
out
sbb
test
test
adc
inc
shlb
fs
fwait
sbb
mov
aas
xchg
test
jno
and
into
mov
ja
rcrl
xor
or
mov
mov
shl
leave
add
sbb
imul
pop
movsb
push
aam
xchg
add
je
xor
not
adc
sbb
cmc
lret
movsl
lret
jbe
lcall
cmp
sbb
pushf
mov
fcomps
mov
andl
cltd
jbe
nop
out
enter
add
push
in
stc
cmp
in
lcall
mov
das
xchg
inc
js
fstpt
add
daa
and
or
push
xchg
xchg
jns
out
in
cwtl
jbe
sbb
push
jae
out
mov
js
hlt
mov
dec
jl
sti
test
fcompl
cmp
clc
sbb
hlt
aam
rclb
loopne
lret
leave
jb
popf
fsts
mov
xlat
test
push
push
push
lcall
mov
xor
test
cwtl
sahf
xchg
add
mov
pusha
add
mov
push
jo
adc
mov
pop
sbb
jno
incl
add
repnz
mov
sub
sbb
jnp
test
sbbb
sub
data16
or
and
or
jle
test
shll
insb
inc
dec
lds
fistpll
stc
test
or
popf
cltd
or
inc
mov
xchg
push
call
jmp
test
idivb
and
repnz
clc
cmp
mov
outsb
mov
sub
push
pushf
test
cmp
mov
mov
popa
js
fidivs
push
lcall
div
dec
sbb
mov
xchg
sbb
inc
xor
dec
fs
repnz
loope
sub
aaa
test
jbe
popf
sti
push
dec
cmp
jecxz
int
mov
pop
in
push
add
mov
pop
loopne
or
je
add
dec
out
cmp
dec
and
add
out
cmp
les
xchg
mov
adc
out
mov
fsubs
aaa
push
add
jg
and
adc
insl
jmp
adc
fnstsw
jecxz
aas
push
clc
push
jo
inc
jp
mov
jb
xorl
fst
and
sbb
push
das
xor
cmpl
dec
jbe
xor
cmp
push
mov
xchg
test
xchg
xor
enter
insl
fnstsw
push
sub
jg
xchg
cli
jne
pop
and
push
lods
jno
imull
popa
movsb
xlat
fldt
dec
rcrb
adc
mov
xchg
pop
sub
mov
sbb
sarl
jge
pop
mov
mov
pop
or
icebp
mov
add
repnz
imul
call
inc
sub
lret
xchg
sbb
cwtl
mov
jg
addr16
cmp
sbb
out
pop
mov
pop
rcrl
leave
sbb
fstpl
push
int3
sbb
mov
aaa
orl
cmp
dec
lock
jmp
mov
in
xor
xor
sahf
notl
cmp
add
xlat
daa
or
dec
insl
dec
jle
scas
adc
std
scas
hlt
out
pop
sub
lock
pop
divl
lds
in
sub
pop
pop
adc
fildll
ret
xor
fnstcw
frstor
das
mov
int3
sub
mov
mov
call
fsts
inc
or
push
rolb
shll
lahf
es
add
out
fiaddl
stos
pop
and
sub
xchg
out
lods
cmpsl
push
add
push
push
push
adc
std
out
push
or
jp
inc
fcos
sbb
pop
sub
lea
adc
inc
call
sahf
imul
mov
xor
pop
add
mov
pop
dec
shlb
mov
or
jo
mov
movsb
cmpsb
xor
add
mov
cmp
cmp
fwait
mov
jg
aaa
fimuls
jb
idivb
jp
mov
push
adc
adc
add
sub
fistpl
or
xor
mov
xor
cs
es
cli
mov
jecxz
xchg
xchg
mov
dec
pusha
mov
xor
imul
mov
pop
mov
jmp
data16
inc
inc
repnz
jno
popa
dec
lods
in
xchg
test
cmpsb
ret
adc
xor
push
xlat
lret
jo
mov
mov
fcoms
pop
cltd
inc
std
dec
lods
out
adc
or
mov
mov
jae
sub
mov
mov
add
adc
sti
sub
add
mov
shlb
lods
xor
adc
bound
push
lock
cmpsb
lds
xchg
iret
sar
fcmovb
ret
nop
iret
fsubs
ret
mov
repnz
in
mov
pop
loopne
insl
and
sahf
mov
lea
cmpl
xchg
fists
fistpll
xchg
and
addl
jae
jnp
into
test
stos
pop
or
jp
jbe
adc
rorb
cmc
and
bound
jl
lea
mov
xlat
lock
xor
out
xor
xor
aas
push
rcl
repz
movb
mov
adc
mov
add
push
fcos
icebp
adc
rcrl
mov
notb
repnz
sub
jg
imul
in
xchg
cmc
jb
sbb
test
pop
fadd
mov
stos
sbb
in
cmp
xchg
sahf
fisttps
test
arpl
inc
inc
jle
jb
fcmovb
push
inc
lahf
cmp
dec
mov
mov
pushf
cmpsb
andb
lret
or
push
mov
push
mov
xchg
mov
push
insb
cmp
jmp
bound
pop
mov
add
fidivrl
inc
in
das
sbb
xorb
xchg
cmpsw
cltd
mov
xor
stos
push
popf
out
loope
mov
sahf
test
shlb
xchg
mov
daa
xchg
xor
inc
dec
out
inc
fisubrs
jb
mov
bound
jnp
push
das
movntq
dec
dec
lods
test
cmc
sbb
jg
iret
xchg
subl
leave
movsb
int
push
xchg
adc
inc
mov
imul
push
pop
pop
push
subb
inc
pop
sbb
js
cld
mov
aad
or
push
jge
popa
and
lret
mov
sub
push
shrl
nop
dec
inc
pop
pop
mov
dec
inc
insb
aad
lahf
mov
and
xchg
dec
lds
and
mov
lret
fsubrl
sbb
pop
adc
mov
xor
push
pusha
mull
push
inc
cmp
lock
xor
test
cli
testb
mov
sbb
adc
push
add
pop
dec
cmc
loopne
or
fcompl
jae
sub
sub
pop
sahf
loope
push
lcall
out
les
inc
lods
lods
dec
pop
mov
mov
aam
popf
mov
les
jg
push
sbb
cmp
mov
imul
into
push
out
daa
imul
sub
dec
daa
mov
sbb
cmp
dec
mov
push
mov
fs
sarb
xchg
push
mov
adc
adc
cmc
jo
repz
mov
dec
xchg
sbb
insl
xor
cmp
mov
add
jb
sub
or
test
pop
shlb
mov
mov
add
data16
lods
out
jle
movb
mov
add
lods
mov
sbb
imul
sbb
repnz
imul
shrl
and
insl
sub
sbb
pop
pop
jae
test
cmp
add
ds
jle
cmp
adc
push
fnstcw
stos
mov
sub
pop
jo
cmp
push
mov
inc
mov
popa
movsb
cmp
popf
dec
xchg
pop
pop
lods
sub
ds
mov
jae
sbb
pop
aam
inc
mov
or
lea
sbb
scas
cmpsl
sbb
stos
push
xchg
inc
outsl
stos
xor
scas
add
lods
popa
mov
pop
std
repz
jg
paddd
je
lods
ljmp
pop
cld
push
xor
add
inc
std
or
insb
insb
mov
jb
fistpll
mov
sahf
and
pop
add
cmp
push
iret
or
lds
mov
stos
fwait
push
mov
push
dec
cmp
out
and
mov
sbb
sti
fistl
rorb
fsubs
fcomps
jb
repz
popf
addl
jnp
lahf
cmpsb
xchg
xchg
jae
add
and
xchg
cmpsl
mov
dec
je
and
fcomi
and
push
push
sbb
enter
cmpsl
cmp
mov
jne
jb
inc
out
subb
pop
cmp
outsl
cmp
aas
in
mov
aas
sub
push
lahf
push
xor
mov
sbb
sub
pop
push
mov
stos
add
xor
sbb
nop
xchg
popa
movsl
stc
mov
pop
jne,pn
jge
nop
in
ficomps
dec
pop
sub
dec
sub
mov
push
andb
jo
mov
add
repz
jecxz
push
push
lcall
push
pop
mov
cld
mov
and
sbb
xchg
rcrb
add
xor
out
or
popf
jae
mov
adc
stos
dec
mov
mov
add
imul
xor
sub
insb
jb
jo
bound
adc
sbb
mov
jo
mov
jle
int3
mov
add
add
cs
dec
dec
lods
and
xlat
mov
mov
sahf
test
xor
movsl
rcrl
cmp
push
ds
test
es
ja
cmpsl
js
mov
inc
lret
dec
and
sbb
dec
cmp
cltd
into
in
mov
mov
inc
pop
or
insl
push
push
rclb
or
pop
push
aam
mov
push
imul
clc
cltd
push
and
jle
cmp
in
stc
or
cs
dec
addr16
jge
aam
leave
fidivl
and
xchg
faddp
icebp
enter
pop
jbe
enter
lcall
adc
sub
jmp
sbb
pusha
mov
outsl
call
adc
cmp
mov
pop
outsl
lahf
sub
sti
jno
mov
ja
cmpsb
int3
fnsave
lea
inc
dec
sysret
sub
in
mov
sbb
cli
pop
or
add
je
or
popw
sub
sub
pop
addr16
mov
xor
jle
and
shl
ja
mov
jg
out
repnz
repz
or
mov
push
stos
aas
dec
jmp
mov
fcompl
test
xor
push
xlat
xchg
ljmp
fs
sub
wrmsr
jmp
xor
push
out
xor
pop
sahf
jbe
test
mov
jmp
cmc
or
add
cmp
push
jp
xchg
out
hlt
sti
test
adc
decl
pushf
cmc
lock
sub
push
mov
ret
add
sbb
outsl
lret
jo
test
nop
mov
push
inc
in
or
add
adc
js
sbb
inc
cmp
or
ljmp
mov
sahf
ds
cmp
insb
jno
push
flds
jo
adc
sub
cmpsl
popf
and
cmpsl
shl
imull
xorl
push
out
addl
inc
pop
sub
in
xchg
adc
rorb
int
jg
mov
orl
adc
cmp
scas
push
sub
inc
loope
or
mov
and
xor
mov
pop
jmp
xlat
mov
das
jge
addb
jge
mov
imul
mov
imul
cmp
arpl
xchg
sub
les
push
aad
sbb
add
divb
out
push
pop
shll
mov
repz
idivl
mov
test
jbe
inc
out
rclb
push
pushf
sbb
sub
pop
pop
cmp
mov
test
xchg
add
cmp
cmpl
hlt
gs
mov
jo
bound
or
sbb
push
push
out
inc
stos
and
mov
ljmp
test
mov
sub
mov
xor
cs
sub
bswap
xor
insl
in
sbb
ljmp
fs
or
mov
dec
xor
sub
or
dec
out
or
sbb
mov
dec
orb
add
mov
or
scas
test
sub
iret
push
rcr
addb
inc
icebp
inc
movsb
fs
mov
mov
xchg
enter
mov
jb
scas
fcompl
xor
mov
add
mov
and
pop
flds
cmp
inc
notl
nop
add
cmpsl
mov
icebp
sbb
xlat
add
js
pop
das
loopne
mulb
adc
roll
mov
frstor
jmp
and
mov
add
xor
cs
faddl
repnz
pop
fisubs
aas
mov
push
ja
outsl
negl
push
xchg
or
or
mov
jb
and
rcrb
push
leave
ja
jne
xchg
pop
push
push
cwtl
xchg
nop
mov
ja
jbe
daa
sub
enter
push
cmp
adc
cltd
arpl
or
rorl
mov
loop
ds
mov
in
mov
cs
xor
mov
jnp
iret
jb
mov
je
jns
jecxz
aas
pop
lock
add
sub
pop
fisttpll
ret
cli
inc
jnp
add
push
repz
cmp
out
nop
dec
sub
subl
cmc
fsubrp
das
sbb
shlb
jecxz
lods
scas
out
gs
popf
mov
mov
add
xchg
in
or
out
ds
inc
fldcw
sahf
sbb
frstor
or
inc
fnstcw
loope
stos
pusha
out
lret
bound
sbb
mov
sbb
cmp
xor
dec
ret
sbb
jnp
test
cmp
pop
mov
shrl
int3
add
mov
sub
jecxz
mov
in
add
repnz
xor
pushf
xor
jno
in
xchg
add
dec
or
cli
incb
jae
jns
call
xchg
inc
jmp
xlat
dec
xor
rcll
popf
fimuls
out
lods
je
mov
cmp
enter
mov
rorb
mov
outsb
mov
sub
popf
cmp
mov
shr
test
leave
aad
pop
negl
sbb
mov
adc
loope
cmp
dec
inc
idivl
jmp
in
xchg
js
adc
out
jns
inc
sbb
dec
jle
bound
arpl
mov
xchg
push
into
std
test
pop
xor
xchg
les
jne
mov
mov
sbb
mov
aad
mov
scas
sbb
jns
or
pop
or
sbbl
out
scas
stos
add
test
ja
jg
loop
sub
pop
dec
popa
mov
movb
and
je
inc
loopne
cmc
int3
xor
mov
sbb
mov
mov
jg
nop
test
or
pop
pop
mov
aaa
in
out
ds
stos
rcll
in
xor
lds
sub
adc
sarl
in
jno
scas
es
inc
add
and
jge
ss
lock
ss
outsb
lods
test
mov
jle
cmpsl
js,pn
in
outsb
push
and
int
mov
mov
lcall
stos
subb
and
xor
sbb
and
incb
inc
out
mov
adc
pop
xchg
je
and
cmp
push
and
outsl
lds
cli
xchg
repnz
dec
push
rcll
in
mov
inc
lock
sub
or
ja
fildll
sub
fmul
mov
lods
mov
leave
lds
nop
xor
es
sub
push
jno
or
mov
out
std
outsb
xchg
ds
xchg
mov
loopne
dec
ret
loop
cmpsl
ljmp
lret
mov
add
jmp
cmpl
cld
and
shrl
push
sahf
mov
xchg
or
out
hlt
sbb
jle
or
xchg
mov
sub
and
push
pop
in
out
imul
test
sarb
inc
fucomi
leave
xchg
jmp
and
lods
push
pop
jne
cmp
dec
xor
popa
sarb
pop
sbb
dec
popf
addr16
stos
dec
mov
mov
pushf
pop
pop
les
and
jnp
cld
insl
hlt
fwait
in
pop
sub
addb
add
add
jl
std
clc
orl
add
mov
out
sub
jge
jle
rep
pop
popa
rcrb
pusha
out
dec
push
in
pop
xchg
fisubrs
and
insl
xchg
daa
mov
push
test
cmc
xchg
add
pop
mov
popaw
xchg
nop
xor
pop
insl
pop
insl
xchg
mov
notw
out
aaa
or
or
test
imul
das
addl
int3
les
xchg
fistps
and
rolb
cmpsb
in
rclb
insl
imul
sbb
push
mov
xor
mull
test
and
dec
xchg
jg
or
pop
imul
xor
pop
test
stos
lea
mov
add
xchg
lds
pusha
inc
loop
out
and
nop
imulb
mul
insb
lcall
dec
jns
dec
or
mov
lcall
clc
sub
ljmp
add
mov
push
xchg
cmp
das
out
pop
repz
sets
cmp
add
pop
shrb
inc
dec
xor
loop
add
std
mov
mov
jle
ljmp
popa
lods
push
adc
nop
or
jp
in
xor
jl
mov
xlat
inc
fisttpl
fldl
int
dec
xor
popa
test
cmp
sti
hlt
cs
jbe
and
stc
and
iret
test
mov
je
ds
leave
jnp
insb
dec
mov
mov
hlt
xchg
in
dec
jg
cmp
pushf
out
popf
addl
adc
jnp
mov
mov
je
icebp
pop
stos
movsb
jb
and
add
orl
xchg
sub
dec
sbb
gs
sbb
dec
lds
mov
push
lods
push
mov
out
lret
negl
test
dec
add
out
mov
jmp
inc
inc
lea
pop
adc
push
jns
insb
jle
pop
jns
sbb
inc
xchg
mov
cmpsb
xor
jg
mov
out
dec
push
or
xchg
or
cmpsb
push
negb
dec
movsb
jecxz
jmp
dec
movl
lret
mov
fcomip
xchg
dec
mov
and
outsl
push
push
add
cmpsb
jmp
scas
fsubs
xchg
cmpsl
into
dec
mov
aad
repnz
pop
sub
mov
mov
lret
pop
or
nop
popa
cmp
inc
dec
push
cmp
test
sahf
dec
sub
shrb
push
nop
xchg
pop
mov
sbb
adc
repz
fistl
inc
insb
repz
pop
repnz
lods
push
je
stos
mov
xlat
daa
jbe
push
mov
or
scas
ret
mov
sbb
rorl
bnd
lods
xor
xchg
jp
or
shl
inc
in
pushf
mov
jbe
bound
jno
imul
push
adc
call
scas
cltd
sub
pushf
repnz
cs
and
or
xchg
test
jg
mov
mov
mov
pop
mov
movsl
in
popl
mov
ja
mov
outsl
enter
sub
adc
inc
insb
push
aas
push
cs
jmp
sub
cmp
int
cmp
pop
mov
outsl
addr16
clc
xchg
cmpsb
into
push
inc
popa
ja
or
mov
jl
mov
push
sbb
pop
or
and
inc
inc
jbe
push
push
leave
cmp
inc
xlat
sahf
pop
pop
aad
push
imul
sbb
sub
iret
dec
sarl
enter
sbbl
fldenv
sbb
lock
jns
mov
sti
xchg
shlb
cmp
push
pop
pop
les
nop
cwtl
lods
pushf
jnp
lret
je
mov
addr16
jg
adc
int
ret
push
pop
cmc
fidivs
fwait
jb
addr16
cmp
mov
jbe
xor
lahf
mov
jb
adc
std
mov
arpl
pop
outsl
xchg
cmpsb
dec
cld
lods
mov
mov
clc
jecxz
mov
icebp
dec
cs
or
pop
jl
or
add
test
in
mov
ret
push
or
add
inc
mov
cmp
lret
inc
cmovg
cmp
pop
sarl
xchg
push
mov
pushf
out
push
loope
out
arpl
mov
fwait
mov
push
mov
add
ffreep
mov
fcoml
mov
add
mov
inc
jmp
insl
arpl
pmullw
mov
mov
popa
icebp
gs
xlat
pop
fcos
decl
adc
faddl
add
shrb
mov
fnstenv
cld
or
test
fistpll
data16
imul
scas
outsl
mov
xchg
push
leave
cs
int
das
mov
fdivrl
mov
insl
sbb
ja
pop
pop
xchg
jl
jg
dec
pop
pushf
movsb
add
or
mov
stos
push
aad
xor
push
cli
fdiv
push
gs
and
iret
outsl
int3
jmp
pop
gs
into
int
pop
icebp
mov
inc
cld
mov
ljmp
cmp
sub
pushf
push
outsb
mov
push
test
repz
jo
fwait
mov
or
arpl
dec
idivl
dec
sti
fmull
cmp
mov
mov
adc
in
rorl
xor
bound
out
out
lock
shrl
ljmp
mov
loope
cmp
enter
pop
sbb
sbb
fdivr
jae
adc
test
int
insb
add
add
out
adcb
cmp
and
mov
lods
xchg
xchg
and
pop
push
push
push
icebp
dec
test
loop
int
or
enter
and
inc
sub
es
push
and
add
in
xor
push
mov
sub
sub
lahf
dec
aad
add
ds
mov
repz
xchg
adc
xor
mov
and
sbb
push
cld
inc
dec
rclb
mov
cmpsl
lcall
xor
sub
add
jp
insl
mov
sti
fldl
fnstsw
sahf
rcrb
and
repnz
mov
fildll
mov
repnz
repz
insb
pusha
shl
adc
popf
out
dec
cltd
fnstsw
dec
stos
mov
pop
adc
mov
sub
xor
xor
xor
cmpsb
cmc
mov
sub
inc
bnd
and
subb
jg
lret
mov
movzwl
bound
sub
add
sub
shl
enter
adc
mov
dec
aam
pop
pop
cmp
aad
sub
pop
movsl
or
ds
jecxz
scas
mov
sbb
sub
cmp
xor
cmp
aam
imul
sbb
xchg
add
add
cwtl
aam
scas
add
or
adc
dec
lods
cmp
out
xor
xchg
cmp
pop
je
test
mov
out
loop
fdivl
pop
or
aam
push
adc
mov
cmc
xchg
fstpt
mov
xchg
xchg
ret
push
mov
dec
pop
pop
sbb
push
adc
adc
mov
mov
imul
push
arpl
hlt
push
ror
pop
adc
outsl
and
ret
cwtl
sub
jns
push
mov
pop
pop
mov
dec
push
xor
popa
xor
and
jbe
subb
jno
mov
loope
sub
das
outsl
add
lcall
xchg
sub
jb
push
repnz
ror
je
mov
cmp
xchg
daa
data16
xchg
xor
or
daa
xor
add
stos
jno
cmc
sub
in
cmp
fsts
mov
pop
adc
mov
cld
iret
sub
mov
loope
jb
push
pop
js
inc
jo
test
and
popf
and
loopne
mov
mov
mov
jnp
test
les
and
inc
fnstenv
xchg
xchg
cmp
and
sub
mov
loopne
ljmp
scas
jle
pop
and
dec
fimull
daa
cmp
inc
bound
push
movsl
shlb
fwait
out
xchg
push
push
pushf
test
test
leave
scas
ficoml
cmp
imul
popf
mov
mov
testl
or
adc
dec
test
sti
mov
fistpl
je
lret
push
movsb
pop
lahf
iret
mov
pop
movsl
dec
jg
pop
push
stc
clc
cmp
sbb
mov
inc
enter
xor
mov
xchg
adc
test
lret
dec
sbbb
inc
sbb
adc
mov
xchg
cmp
push
jecxz
insl
leave
imul
lods
xchg
arpl
repnz
jns
test
int3
neg
imul
mov
in
push
pop
test
mov
and
dec
sahf
mov
xor
in
in
or
adc
cmp
loop
loope
clc
outsb
mov
leave
int3
jne
add
sbb
push
imull
sub
inc
cs
adc
rolb
xchg
in
add
mov
decl
xlat
test
push
pop
sbb
fwait
push
xchg
sbb
lods
pushf
pop
fdivrs
mov
dec
scas
mov
imul
mov
inc
sub
pusha
lcall
pop
pushf
outsb
popf
adcb
push
cld
adc
xchg
adc
in
rcr
iret
in
push
jg
in
rolb
imul
pop
mov
pop
jbe
push
pop
fisubl
daa
push
fisttpll
decb
stos
cmc
int3
xchg
outsl
out
hlt
test
rorb
movsb
shlb
out
xchg
iret
mov
int
ret
jb
fwait
hlt
jns
addr16
in
pop
and
mov
or
into
lcall
adc
clc
mov
scas
in
and
shrb
repnz
push
out
sub
cmpsl
mov
pop
imul
scas
rcr
dec
int
push
cmpb
stos
push
call
push
push
sbb
fwait
lret
mov
jp
pushf
sub
pop
es
xchg
add
inc
mov
aam
xor
out
lods
inc
push
sahf
push
mov
mov
in
xor
jl
out
pop
mov
xor
cmp
dec
dec
jmp
pushf
cs
loopne
mov
xchg
into
sbb
pop
sti
inc
arpl
fistpll
jae
dec
stos
jle
nop
mov
mov
add
rcll
loope
int
les
insl
xchg
lock
subl
jne
sbb
push
addl
dec
pop
inc
sti
lahf
or
sub
mov
xchg
dec
dec
aam
pusha
stc
jg
or
mov
jne
loopne
adc
stos
jmp
mov
sub
popa
lcall
pop
out
mov
orl
ljmp
unpcklps
cs
jmp
cmp
pusha
adc
and
or
jae
je
test
pop
pop
mov
movsl
sbb
fistpll
xor
aad
cmc
xor
lcall
adc
push
xchg
shll
mov
push
sahf
out
mov
or
mov
fdivrl
push
rcr
out
insb
sahf
add
mov
addr16
mov
aas
fs
andl
arpl
or
adc
pop
jns
cmp
std
fistps
insb
ret
and
jp
sti
push
pop
lret
daa
pop
stos
insb
push
jmp
jnp
push
gs
in
push
jnp
inc
imull
bound
lahf
adc
mov
movsb
xor
test
jl
xchg
clc
jecxz
lods
ret
aaa
nop
xor
rorb
fistpll
mov
and
lret
xchg
jbe
shrb
cltd
xchg
lea
das
pop
es
hlt
int
mov
mov
sub
sub
out
sub
aad
cli
stc
cmc
test
xor
mov
js
subl
int3
daa
inc
ja
dec
pop
nop
xorl
into
in
out
sbb
mov
movsb
xor
loopne
cld
jne
bound
sti
push
ljmp
pop
inc
lret
mov
add
out
lahf
cmc
mov
and
inc
add
imulb
leave
int3
in
hlt
aaa
fwait
push
jmp
sbb
adc
pop
mov
out
or
sub
xlat
sub
test
fcoms
cmpb
mov
push
xchg
sub
out
adc
cmp
imul
jl
mov
push
xorb
pop
es
and
dec
adc
lret
and
fwait
dec
nop
sbb
enter
adc
push
shll
xchg
out
jp
sbb
rcl
xchg
out
and
mov
xchg
lock
add
decb
add
xchg
das
mov
int3
jb
inc
or
mov
in
jecxz
aaa
ret
lcall
lds
add
pop
sbb
inc
into
cmpsl
mov
sbb
sub
xor
aas
ss
sub
and
push
cld
addr16
mov
int
ljmp
insb
add
sbb
jo
push
cwtl
jmp
orl
cld
inc
mov
sbb
cmpsl
jl
clc
fldenv
add
test
push
sbb
icebp
sub
pop
pop
stc
dec
out
mov
xor
cmpsb
jne
imul
iret
xor
xor
lock
fneni(8087
mov
data16
sbbb
sub
or
push
adc
out
fimuls
inc
add
xchg
push
mov
mov
adc
inc
push
ficoms
pop
leave
pop
enter
fistps
mov
push
cli
fcoms
addl
in
test
sub
push
ja
add
pop
xchg
mov
test
out
xchg
notl
ret
sbb
jno
imul
aam
or
test
push
cmc
flds
inc
sbb
fcom
scas
dec
adc
cwtl
add
in
rorl
jne
das
aam
jns
fst
push
cmp
cwtl
daa
pop
sub
xchg
popl
pop
subw
in
out
orb
mov
test
or
pop
xchg
dec
jb
jge
out
dec
in
mov
subl
into
push
mov
xchg
gs
loop
cmpsb
ret
sub
mov
dec
enter
out
xchg
push
aaa
scas
push
jne
in
in
decl
les
clc
jne
push
mov
stc
jp
jnp
mul
rcll
mov
push
pusha
ja
sarb
xchg
or
shrl
xchg
jg
stos
les
or
push
jnp
cld
daa
gs
mov
out
jg
pop
pusha
popf
dec
mov
stos
dec
mov
pop
dec
ficompl
cmpsl
adc
mov
mov
dec
popf
into
push
push
mov
lret
mov
cmp
xor
out
mov
negb
scas
adc
xor
xchg
jnp
push
push
das
mov
mov
jmp
mov
sub
jb
mov
xor
ss
push
cmp
lods
pop
xchg
push
mov
dec
jge
jb
lods
call
pop
mov
sbb
dec
jno
shll
stc
lods
mov
mov
mov
adc
jmp
sbb
jp
inc
shrb
scas
std
imul
cmpsb
test
xchg
std
and
daa
inc
mull
xlat
insb
lret
jle
inc
xlat
mov
sub
sbb
sti
push
push
mov
mov
add
pop
daa
out
stos
mov
jae
ds
ss
inc
and
pop
je
mov
dec
stc
xchg
adc
mov
movb
ds
xlat
sbb
push
jno
push
or
jno
addb
push
dec
je
xchg
and
sahf
adc
popf
xor
dec
imul
xor
dec
xor
std
enter
bound
adc
xlat
call
xchg
push
movl
js
or
push
aad
adc
stos
jo
or
xchg
push
int3
imul
cmp
add
sbb
mov
mov
loope,pn
aaa
fs
pusha
mov
pop
sub
mov
dec
sbb
pop
insl
nop
lret
lcall
adc
pop
stos
sub
out
cmpsl
daa
push
cltd
pusha
addr16
outsl
cmpsb
mov
sbb
xchg
xor
cwtl
or
mov
xchg
call
leave
sub
stc
push
cmpsb
inc
pushf
cwtl
lds
int3
add
sub
adc
jae
jle
mov
in
lock
xchg
add
mov
les
ja
jg
mov
mov
mov
push
ljmp
and
aam
int
lods
jo
imul
out
mov
es
push
inc
cli
push
test
arpl
test
jbe
mov
jns
push
adc
xchg
out
shlb
pop
test
dec
loopne
decl
jmp
push
and
cmc
sarl
xchg
test
and
cld
int
cmp
loopne
outsb
ja
mov
test
cltd
daa
mov
int
pop
arpl
shll
dec
in
push
int3
lret
xchg
clc
pop
xor
inc
les
les
cs
mov
jb
or
and
ret
ja
push
xor
loop
add
addr16
in
loope
add
out
rcr
sahf
je
addb
dec
cmpb
repnz
pop
stos
mov
xchg
adc
mov
adcb
outsl
outsb
je
pop
xor
and
push
dec
aas
mov
rolb
adc
sbb
ja
jle
sbb
mov
mov
jo
imul
dec
in
cmp
pop
adc
jo
xchg
push
pop
ja
in
inc
push
scas
addb
icebp
shll
in
lret
sbb
push
mov
add
mov
sub
jne
inc
fimuls
fsubs
push
fsubrl
dec
mov
in
mov
fisubrl
dec
mov
mov
aaa
dec
stos
stc
fcmovne
inc
adc
add
lods
pusha
fsubr
stc
ja
push
xchg
pop
dec
pusha
fisubl
aam
mov
or
ret
and
push
in
jno
xlat
or
push
pop
mov
lods
push
dec
fsubr
and
popa
je
add
push
aad
fstpl
popa
sub
repz
add
fwait
in
xchg
cmp
and
or
js
imul
jne
dec
fistpll
fistl
ss
mov
out
loop
or
psllw
adc
sbb
mov
fwait
ds
pop
scas
in
mov
jl
push
and
pop
fsubrs
or
sbbb
test
mov
inc
outsb
cmpsb
xchg
addr16
stos
inc
and
dec
scas
adc
push
hlt
pop
xor
jl
xchg
subl
int3
jle
stos
test
fadds
mov
xchg
inc
test
cmp
inc
add
aad
fnstcw
ret
and
ret
xchg
and
push
xchg
pop
jnp
shrb
sub
bound
xchg
sub
call
sti
subb
and
or
call
in
sbb
xchg
cs
sbb
jo
sub
adcl
in
int3
sub
add
mov
sbb
or
xchg
push
cmp
jecxz
out
push
xchg
lret
dec
repz
cmpsl
xor
adc
insl
outsl
mov
mov
mov
cmp
jb
stc
out
stc
addb
sub
in
sub
push
mov
scas
negl
int3
pop
int3
rcll
stos
pop
cmp
or
xor
sahf
mov
ljmp
flds
cli
pop
stc
cmp
call
adc
fsubs
aam
and
xor
inc
cli
xchg
fs
out
push
mov
xor
adc
shlb
insl
scas
and
mov
mov
dec
pop
xor
aaa
cmp
int
jbe
clc
out
mov
inc
adc
mov
rcrl
test
cmp
inc
jmp
inc
dec
add
mov
ja
jecxz
inc
cltd
mov
movsb
popl
pop
mov
loope
fldcw
pop
out
inc
mov
xchg
gs
imul
ja
jo
and
repnz
call
and
fcomip
mov
sarb
fistpll
and
jp
mov
xchg
push
ret
in
mov
nop
fiadds
rclb
hlt
jle
sbb
aad
pushf
jns
loope
xchg
adc
cmp
pushw
pop
jle
add
or
push
cmp
push
fisubl
ljmp
shlb
les
xchg
or
js
fs
stos
mov
into
inc
jl
jl
mov
je
mov
sub
inc
sahf
rcrl
test
in
iret
ret
push
addb
pop
gs
xchg
int
jnp
popa
test
jnp
lea
gs
cmp
cmp
out
clc
std
sub
jp
lods
lret
out
int3
popf
int
aad
adc
insl
sbb
push
pop
test
mov
shlb
pushf
sub
mov
je
mov
adc
inc
mov
dec
xlat
xchg
pushl
xor
ja
test
add
jb
jecxz
hlt
and
add
shrb
xchg
jb
roll
insb
push
mov
test
pop
dec
lret
iret
aam
mov
and
cltd
aad
cld
add
push
icebp
lret
or
pop
push
js
jecxz
mov
sbb
push
stos
out
cmpl
das
push
adc
aas
cld
or
lods
in
clc
popf
daa
inc
xchg
fldcw
sti
mov
pop
xor
sbbl
ret
adcl
fwait
sub
cld
adc
jo
cli
jg
movsl
fsubl
push
inc
int3
xchg
xor
aaa
dec
das
adc
push
lret
mov
ret
loopne
xlat
fcoml
xor
lock
hlt
repnz
test
xor
push
xor
loopne
lret
gs
incb
cmp
fs
sub
xchg
aad
adc
pop
jge
gs
out
xor
jb
xor
and
sub
les
xor
int3
dec
rclb
jle
dec
jmp
and
sbb
mov
mov
movsb
pusha
mov
jge
loop
loop
pop
adc
mov
test
in
lods
int
into
jne
in
leave
inc
icebp
in
push
push
jl
les
xor
add
call
decb
je
add
jmp
mov
cwtl
and
cmc
movsl
jbe
xor
das
pushf
int
scas
or
test
in
lds
sub
out
std
test
scas
pop
fstpl
imul
cmpsb
pop
and
lret
and
outsl
pop
std
cmp
xor
les
fs
out
shlb
decl
movsb
mov
pop
das
jne
stos
in
ja
mov
pushf
mov
dec
pop
popa
mov
imul
cs
mov
jno
das
pusha
enter
loopne
adc
je
xor
jecxz
adc
in
dec
cmpsl
stos
push
add
sbb
push
insl
hlt
cmp
sbb
or
push
mov
xchg
adc
test
xor
push
out
insb
add
scas
mov
cmp
sti
jp
push
in
jp
sbb
jmp
mov
or
sub
mov
mull
lock
jecxz
scas
ret
mov
fcoms
inc
pop
sbb
daa
pop
pop
roll
mov
subl
xchg
cli
push
imul
jb
rcl
loope
ret
xor
sub
test
jp
xlat
sbb
aaa
imulb
pop
out
mov
inc
push
sub
fwait
test
arpl
push
fisttps
jo
adc
jecxz
push
divb
rep
flds
pop
stc
js
and
dec
push
add
andb
push
jp
pop
cmovb
xor
ja
cmp
pop
and
das
adc
std
cli
xchg
mov
pusha
loop
ja
icebp
xchg
sub
xor
cmp
dec
ret
into
pop
dec
arpl
xchg
inc
into
into
xchg
enter
cmp
fadd
mov
fistpl
xchg
push
lahf
mov
xor
lea
scas
or
and
ret
xchg
movsl
jmp
jg
inc
jecxz
gs
and
inc
or
add
fnsave
xchg
adc
idivl
jns
int3
push
jecxz
push
in
cmpsb
fwait
adcb
xchg
insb
cmp
int
sub
sbbl
add
insl
rorl
fiaddl
lds
sbb
push
into
add
xorb
mov
push
arpl
hlt
iret
inc
xlat
xor
das
enter
fs
cmp
in
into
jb
dec
add
add
adc
and
jl
out
inc
jne
aas
add
mov
inc
pop
iret
iret
jl
cmp
mov
pop
push
mov
lock
pop
dec
out
arpl
pop
std
mov
jmp
int
pop
aaa
lcall
lea
jle
jmp
scas
xor
jb
cmp
fwait
pop
sbb
rorl
add
mov
int
pop
test
mov
jp
repnz
sti
jns
push
or
pop
lahf
insl
testl
xlat
sarb
sbb
and
andb
dec
or
sub
push
js
cmp
dec
pop
sub
movsl
ficomps
stc
movntps
gs
xor
inc
and
and
ret
jb
add
dec
cmp
mov
sbb
sbb
xchg
or
insl
jb
loope
mov
adc
cmpsl
mov
lret
stc
and
jmp
lret
aad
or
ret
xor
movsb
jae
repnz
ja
shll
sub
pushf
xchg
test
enter
inc
xchg
lea
and
lods
push
cltd
enter
arpl
pop
fbstp
xor
in
mov
cltd
mov
cli
mov
or
adcb
int
adc
out
js
sub
fisttps
addl
cli
int
ja
and
fildll
or
lds
andl
je
xor
and
or
cmpsb
popf
xlat
push
and
notb
mov
sbb
add
pop
or
push
out
mov
lock
adc
jge
cmp
cmp
push
faddl
repz
add
push
stc
mov
lds
or
mov
in
pop
inc
dec
arpl
pop
lret
aad
repnz
repz
insl
dec
xchg
and
sbb
mov
xchg
mov
xchg
sub
ja
gs
mov
inc
jne
jl
cmp
addr16
push
fimull
sbb
dec
push
cmp
adc
es
and
pop
mov
inc
orb
mov
sbb
clc
and
sub
or
rolb
adc
pushf
lret
lcall
test
lret
ffree
aaa
xor
sbb
mov
jo
pop
test
xchg
add
inc
shl
popl
roll
dec
out
mov
jp
jno
fsub
xlat
mov
dec
out
sub
imul
rcrb
test
out
jp
push
fbld
mov
jns
fcompl
lock
mov
xor
stc
inc
das
ds
aaa
cld
ror
scas
cmp
jl
adc
ds
in
pop
cmpsl
pop
xchg
mov
push
shrb
add
add
les
push
or
mov
pop
adc
jns
fldl
mov
aad
jge
mov
inc
je
cwtl
or
movsl
int3
mov
xchg
adc
orl
jns
and
ljmp
inc
fwait
mov
popf
push
dec
push
clc
maxps
xchg
movsl
pop
iret
aam
pop
mov
fstps
push
dec
xorl
inc
movsb
popa
push
cmp
in
sub
loop
and
pop
mov
mov
test
sbb
add
dec
ret
mov
dec
xchg
decb
pushf
push
cmpsl
adc
leave
or
ficoml
movsl
xchg
mov
das
mov
shrb
aaa
fisttps
sub
sub
icebp
dec
call
into
xchg
lock
outsb
or
adc
mov
lret
jmp
adc
ret
push
and
jne
cmp
push
xchg
in
or
out
nop
icebp
mov
arpl
push
cltd
xor
inc
ret
movsb
dec
push
outsl
add
jo
call
lahf
xchg
leave
mov
adc
xor
pop
aam
sbb
jae
and
dec
pop
inc
out
lods
lea
dec
es
jae
cmpsb
and
les
pop
hlt
fildl
jae
fsubrs
arpl
cs
and
xchg
inc
xor
movl
roll
and
testl
sub
mov
mov
push
mov
inc
fs
outsl
or
dec
mov
xlat
movsb
cld
cmp
or
pusha
cmp
cmp
xor
cwtl
jecxz
pop
cmp
push
pop
idivl
subl
inc
movsb
adc
fcomp
mov
xchg
or
inc
mov
pop
and
jle
mov
jns
or
fdivl
mov
inc
popa
xor
fiaddl
jno
dec
out
popf
add
xchg
jg
inc
hlt
xor
sbb
xor
out
push
cs
daa
repz
push
sub
in
test
and
inc
jp
repnz
push
mov
dec
mov
push
push
mov
movsl
loopne
mov
fst
adc
fstps
mov
sbb
stos
xor
clc
xor
stos
or
fs
xlat
adc
mov
jecxz
imul
fsts
js
adc
iret
sbbb
cmpsb
rcll
mov
hlt
jmp
fldcw
push
popa
test
dec
xchg
js
push
pop
push
int3
popf
jle
cmp
pop
jno
jp
mov
push
pusha
sbb
das
or
mov
sbbb
loopew
cli
pop
test
nop
xchg
add
imul
fcmovnu
mov
fdivrs
dec
dec
adc
xchg
test
mov
inc
inc
les
lcall
popa
mov
xlat
hlt
push
sub
pushf
push
ljmp
add
jne
jb
add
jg
inc
mov
repnz
stos
add
popl
push
add
mov
mov
push
jge
xchg
jb
adcl
and
pusha
test
or
sub
pushf
and
add
adc
insb
mov
rorl
out
out
xchg
into
shl
add
mov
and
scas
pop
inc
vpmullw
outsb
sar
sbbb
popl
fisubrs
sub
push
or
xor
je
test
into
adc
add
adc
aaa
add
pop
push
subl
ret
shll
jecxz
dec
dec
cmp
mov
fwait
test
loopne
aam
push
adc
jnp
imul
test
jle
and
sub
jbe
bound
cwtl
lret
call
pop
mov
xchg
fs
stos
daa
out
jne
enter
mov
rolb
cwtl
mov
dec
inc
xorb
aaa
mov
add
lret
mov
pop
adc
ljmp
test
lds
mov
imul
mov
fsubs
xchg
jp
in
aas
shr
and
lea
or
dec
inc
dec
xor
shlb
je
dec
pop
int
mov
sarb
cli
in
dec
bound
fsubrl
lret
sti
hlt
loopne
aaa
addb
mov
cmpsb
cli
fdivrl
xor
mov
pushf
outsb
or
or
sbb
pop
shlb
outsb
or
push
popf
loope,pn
mov
gs
je
sub
cmp
push
mov
or
jno
pop
push
cs
inc
pop
sets
push
pusha
adc
mov
and
pop
int3
dec
mov
imul
and
repnz
pop
cli
sub
bound
pop
mov
in
add
xor
imul
jnp
fs
pop
data16
scas
jecxz
lods
imul
shr
and
push
shll
shlb
lea
das
lock
lea
sbb
xor
pop
inc
jge
data16
shufps
jmp
aaa
mov
push
jge
lods
mov
add
adc
dec
mov
cs
pop
insl
scas
cmp
out
cmp
std
pop
or
stos
or
push
sahf
sbb
adc
jge
fcompl
test
xchg
aaa
les
cltd
out
sbb
cmp
and
mov
jb
jecxz
jb
ret
push
xor
and
and
inc
imul
dec
in
sbb
cmp
inc
xchg
fimull
fists
in
and
out
fimull
jmp
in
mov
add
push
sbb
lret
sbb
and
fstpt
pop
mov
sbb
ret
dec
lods
insl
rcrl
pop
popa
mov
xlat
or
ds
cmpb
sub
push
cmp
sbb
adcb
out
fincstp
and
call
jge
jb
shrl
jmp
add
mov
mov
sbbb
jecxz
ficomps
push
cmc
fisttpll
ret
xchg
jmp
fwait
aam
inc
stos
out
std
ret
push
dec
sbb
rorb
ds
push
movsl
pushf
out
std
icebp
sub
and
xchg
inc
xor
bound
pop
xor
rcr
or
pop
lret
fiaddl
mov
jg
scas
pop
jb
lods
or
sub
fcomps
lahf
push
in
pop
shr
ds
decb
es
test
jb
cmpsb
jp
out
or
seto
sub
cmp
push
mov
or
pop
fcmovu
mov
inc
mov
imul
xchg
imul
insb
mov
inc
jmp
test
mov
xchg
sub
mov
popa
inc
outsb
out
pop
aaa
or
mov
mov
ss
shr
addr16
leave
jge
popa
dec
add
std
cmpsb
pushf
pop
xor
jae
dec
mov
ror
incb
or
dec
rorl
sub
pop
jnp
lds
jbe
inc
sbb
out
shlb
aad
call
dec
push
test
out
cmp
enter
cmp
adc
out
pop
jle
pop
cmpsw
inc
and
inc
popa
xchg
sub
ficoml
repnz
cmc
fisttpll
in
mov
out
leave
inc
jmp
mov
outsb
mov
mov
pop
insl
inc
xlat
push
in
cmp
xor
fidivl
or
mov
fimull
cwtl
pop
mov
int
mov
int
leave
sub
pusha
mov
enter
jne
stc
mov
insl
fs
pop
jb
ret
add
rcll
mov
ljmp
pop
icebp
xchg
adc
outsb
inc
lock
cmp
les
jb
rcrb
shll
stc
adc
aad
xchg
cmp
pop
cmpsb
test
shr
stos
and
std
sarl
xor
enter
inc
fimuls
push
mov
push
aaa
rorl
push
fs
add
push
cmpl
ljmp
decl
dec
xor
pop
test
jle
mov
nop
dec
shrb
sub
flds
scas
mov
cmpsl
unpcklps
popa
jg
sahf
push
neg
clc
xor
adc
aaa
sbb
or
adc
daa
cmpsb
sbb
jne
push
sbb
jle
cmc
mov
cmp
jbe
mov
push
fdivs
loopne
scas
iret
loopne
and
and
adcb
mov
in
adc
mov
clc
add
sahf
or
push
or
mov
cmp
es
add
adc
mov
push
jo
nop
xchg
mov
shl
or
and
cmc
clc
mov
fsubs
dec
cmp
and
mov
jo
faddl
shl
fs
jg
ret
ret
or
testb
loope
adc
pop
fimuls
sar
and
mov
outsb
inc
or
xorb
fildl
sbb
mov
cltd
out
push
and
ret
mov
and
add
mov
in
test
jecxz
mov
insl
sbb
fsub
aam
pushl
sti
hlt
jl
pusha
out
fs
mov
mov
jae
mov
push
popa
outsb
push
mov
xchg
push
inc
fnsave
mov
hlt
jne
js
push
push
xchg
lret
or
inc
cmp
push
xor
ljmp
out
test
sbbl
arpl
or
fwait
loopne
jnp
sti
dec
cld
pop
push
bound
adc
pop
jge
mov
ret
sbb
or
sbb
shrb
fldcw
mov
shll
push
outsl
hlt
push
mov
bound
jg
cmpsl
dec
dec
adc
fldenv
pop
sub
add
sbb
and
out
pop
pop
rcrl
push
arpl
add
imul
jnp
ja
mov
mov
daa
pmaxsw
or
mov
aam
lods
mov
cmp
dec
pushf
je
xor
xor
movsb
pop
roll
mov
add
shrb
push
and
sub
fdivrs
push
je
stc
lds
xchg
jge
in
stos
mov
out
push
icebp
dec
cmc
mov
xchg
jl
outsl
fmuls
push
aaa
xor
inc
divb
hlt
insl
fs
add
repnz
in
mov
fistpll
je
cmc
adc
lods
cmp
sbb
sbb
add
mov
fs
cmp
enter
or
xchg
int3
mov
push
movsb
mov
mov
bound
and
xchg
sbb
lret
jl
aam
mov
test
xchg
sub
and
ret
shll
mov
mov
mov
inc
or
dec
sub
inc
xchg
lock
cmp
adc
and
cwtl
movsb
call
hlt
cltd
jae
jecxz
ret
push
jecxz
sub
jle
int
mov
arpl
addr16
sub
inc
xor
cmpsl
and
fisubs
fdivs
mov
subb
or
push
add
pushf
stos
scas
inc
jnp
pusha
mov
sbb
jmp
aad
pop
xchg
dec
mov
adc
aas
sahf
push
mov
mov
stos
cs
pop
iret
les
xor
ja
push
je
loope
adc
aaa
les
sub
lea
mov
ja
mov
mov
adc
dec
mov
mov
in
ret
ds
call
clc
and
dec
cs
dec
fidivl
push
dec
add
jne
imul
and
mov
xchg
leave
mov
mov
aad
les
jne
subb
push
cmp
jb
loope
repnz
repnz
adc
mov
lds
scas
and
out
scas
aad
and
or
sub
dec
xchg
ret
data16
repz
fwait
push
outsb
mov
and
inc
fisubl
xchg
out
xor
xor
push
popf
jp
hlt
and
inc
fistps
pop
lock
outsl
stos
or
movsl
jp
sti
js
scas
xchg
sbb
aam
aaa
sub
inc
leave
outsl
shll
cli
jmp
jg
mov
jae
cs
add
loop
aas
mov
mov
stos
xchg
jae
jo
xchg
loopne
daa
ja
xor
jb
dec
mov
mov
jg
cmpsb
or
fnstenv
mov
bound
dec
xchg
inc
pushf
in
mov
shl
in
jne
xchg
stc
icebp
in
rclb
divb
mov
mov
js
ret
jle
mov
mov
fsubrs
jg
jnp
aas
adc
xlat
pop
push
idivl
lret
mov
mov
sub
cwtl
jecxz
les
inc
lret
out
add
neg
xchg
packssdw
fistl
pop
rorb
lret
scas
test
pop
in
outsl
and
adc
pop
jl
sbb
fsubl
insb
xlat
scas
and
movsl
out
xor
pop
pop
pop
clc
sbb
arpl
scas
out
iret
jecxz
mov
mov
data16
out
cmp
inc
pop
dec
popa
push
sub
jo
pusha
mov
repz
xor
inc
daa
mov
xchg
clc
rorb
mov
inc
xlat
lods
xlat
int
bound
pop
ds
rclb
idivb
cltd
cmp
shlb
lea
pusha
mov
mov
or
inc
out
imul
ss
jne
imul
lea
insb
outsl
stos
pop
in
mov
mov
in
gs
in
lcall
fwait
xchg
lcall
orl
jne
imul
shll
pushw
andw
roll
xchg
xor
push
rolb
in
mov
sub
mov
push
aad
int3
mov
add
stos
lcallw
sbb
shrl
mov
call
dec
mov
and
loop
jmp
jae
mov
movsl
jne
nop
cmc
cmp
les
pop
test
aad
stc
in
inc
adc
mov
jg
mov
out
push
pop
adc
loope
pushf
jmp
pusha
in
pop
mov
pop
mulb
aas
loopne
mov
and
je
out
mov
movsb
sti
idivb
xchg
sub
xchg
sbb
mov
push
add
lahf
negb
cmpsb
mov
movsb
cmpsb
push
repnz
lock
sub
jecxz
test
in
andl
mov
outsb
lock
test
repz
jno
sub
mov
cmp
xor
mov
mov
loope
outsb
mov
push
out
pop
xor
aas
or
fwait
dec
adc
xor
mov
aam
fcoml
mov
enter
adc
mov
testl
pop
xlat
dec
insl
cli
jle
test
push
cltd
dec
mov
mov
in
push
sub
xchg
arpl
jge
push
cltd
dec
xorl
adcb
pushf
stc
shlb
or
adc
pop
jbe
lock
sub
or
aas
mov
xor
sub
inc
sti
xor
push
out
jecxz
clc
ss
jo
pop
dec
add
mov
and
clc
int
imul
push
repnz
inc
inc
or
sbbl
xor
mov
loope
jg
std
mov
cmp
pushf
xchg
xchg
mov
divl
xchg
adc
jl
aam
push
inc
dec
nop
mov
and
mov
call
fists
fwait
push
xor
cld
sbbl
ret
cmp
and
arpl
jo
out
xchg
ret
iret
pop
sub
cmp
add
pop
leave
fs
fmul
xor
xor
shrb
xchg
sbb
xor
cmpsb
cld
jmp
jb
mov
fisubrs
pop
insl
lret
cld
push
int3
pop
cwtl
or
int
rolb
xor
aad
mov
movsl
and
fstpl
imul
lods
add
test
test
stos
scas
negl
or
das
xlat
dec
push
fmuls
icebp
xchg
popf
ja
jns
enter
inc
outsl
inc
or
test
xor
stos
popa
mov
pop
cmp
insl
mov
movsb
mov
hlt
fs
push
iret
sub
push
push
pop
movsl
test
push
insb
insl
nop
dec
pushf
add
cs
call
test
lret
andb
out
sbb
rorb
and
and
adcb
and
and
sbb
mov
ljmp
push
imull
jb
mov
stc
or
sbb
mov
test
lea
mov
ljmp
std
pop
jnp
fdivr
lods
jnp
aam
pop
pop
pop
insl
es
dec
pushf
mov
pop
pop
sbb
cld
push
xchg
add
mov
sub
jl
inc
lret
cli
in
mov
add
push
and
cmp
cmp
jbe
pop
jns
ret
and
mov
shrl
sahf
cwtl
xor
loopne
das
fdivrl
inc
adc
stos
mov
outsb
jle
imul
int
in
imul
into
std
mov
dec
cmpsb
pop
sbb
jno
mov
or
cmp
je
sbb
adc
lock
pop
cli
stc
fdivrl
mov
int
mov
jl
sahf
mov
in
xor
cmp
sub
inc
add
or
leave
cmc
cltd
lcall
aaa
xchg
jne
scas
jg
xchg
scas
xchg
and
push
mov
and
mov
or
mov
pushf
pop
push
sbb
aam
push
iret
push
stos
outsl
jo
sti
and
adc
and
cli
out
gs
into
push
push
xor
xchg
push
mov
xchg
sub
imul
jl
lods
mov
add
mov
cmpsl
and
xchg
fcmove
in
into
cmpsb
sbb
sbb
mov
loope
pop
cmp
ficompl
lods
jae
cmp
hlt
ret
mov
pop
or
subl
xchg
cli
pop
pushf
fcmove
xor
inc
pop
jbe
movsl
mul
jmp
outsl
lea
or
loop
das
fwait
add
daa
jns
je
xor
popf
mov
cmp
add
sbb
cmp
bound
mov
push
jno
mov
adc
addr16
mov
scas
mov
inc
jno
roll
jecxz
xchg
add
add
jne
sbb
lret
jnp
out
jp
divl
movsb
cmc
xor
cmpsl
enter
inc
mov
inc
scas
xor
mov
or
push
mov
mov
test
imul
and
xor
adc
mov
lcall
pop
pop
jmp
mov
push
enter
sahf
mov
mov
push
mov
out
pop
push
jae
mov
movsl
subb
arpl
mov
div
xor
fs
xor
loopne
das
push
adcl
lea
cmp
pop
insl
xor
test
sub
cmp
roll
out
orl
mov
out
xchg
jno
stos
loopne
mov
mov
neg
xor
out
imul
and
cmp
movsl
rcl
fs
inc
out
jb
jne
leave
filds
xchg
aas
and
xor
or
test
pop
pop
jbe
ljmp
lret
negl
pop
repz
ja
cli
cmpsb
mov
rclb
pop
mov
pop
cmpsl
add
push
jp
or
call
sub
movsb
or
ret
fcomps
dec
lock
mov
bound
mov
pop
bound
orb
add
ret
jp
sub
inc
cmpsb
or
dec
cmp
ret
mov
and
out
pushl
mov
mov
mov
lds
arpl
pop
push
into
je
jmp
mov
out
xchg
inc
mov
jo
sbb
cmp
lock
push
lds
imul
stos
ficompl
jb
mov
adc
das
dec
sbb
mov
push
sub
aas
xchg
jae
pop
cld
lock
mov
jb
cmp
cs
cli
jmp
test
insb
jo
cmpsb
pop
push
jae
outsb
sbb
scas
dec
add
int3
pop
push
daa
into
dec
cli
xor
es
fnstsw
test
rclb
mov
mov
in
mov
mov
sbbl
icebp
es
mov
addr16
test
insb
dec
std
xchg
pop
xchg
mov
test
clc
insb
jae
cmp
popf
inc
int3
sbb
mov
test
lock
cmp
sbb
jmp
icebp
jp
loop
lock
xchg
int3
jo
and
xchg
in
mov
movsb
je
inc
cmp
add
lock
pop
loopne
nop
mov
xlat
testl
mov
push
mov
and
icebp
inc
adc
out
pop
add
fdivrl
mov
movb
fs
sub
shr
cltd
icebp
jnp
and
fwait
xchg
and
js
push
arpl
fisubl
add
sbb
push
sbb
pushf
dec
pop
movsl
shrl
xchg
popa
pop
push
fisttpl
jecxz
outsl
stos
sbb
pop
push
popa
jmp
das
lahf
jmp
aas
test
or
inc
test
cmp
mov
dec
popa
mov
daa
insl
mov
xchg
push
shrb
in
pop
lock
adc
addl
shlb
jge
mov
pushf
addr16
scas
lods
ret
roll
in
xor
sub
adc
push
cmpsl
push
out
xlat
jb
xor
sbbl
scas
mov
in
mov
cmpsb
lret
inc
sbb
ret
add
das
aad
ja
xchg
lret
aam
and
mov
jns
push
inc
pop
inc
inc
xor
ss
sub
sbb
xchg
scas
cmp
jl
lods
sub
popf
mov
mov
lock
xor
push
cmpl
and
arpl
cmp
pop
sbb
icebp
lret
fistpl
loope
inc
inc
enter
mov
rcll
cmp
jg
inc
sub
cmp
pop
decb
xchg
cmp
out
xchg
cs
sarl
int
adc
add
into
fstl
fstpt
adc
pop
pop
es
mov
dec
push
mov
or
push
out
push
xor
adc
jmp
mov
mov
mov
imul
test
ja
mov
js
test
and
pusha
xchg
mov
xchg
and
stc
dec
test
clc
jecxz
jp
or
popf
xchg
popf
scas
stos
test
fidivrl
movsb
jge
adc
sahf
push
lods
cmp
xchg
gs
cmp
adc
dec
inc
shlb
xor
push
ja
pop
aas
inc
iret
cmpb
dec
mov
and
stc
lods
outsl
mov
arpl
pop
ds
stos
xchg
cmc
mov
out
fidivs
bound
je
lcall
and
pop
jne
mov
lret
jecxz
jae
sti
push
out
mov
dec
or
sub
sub
jae
in
sbb
xchg
or
std
xor
clc
je
mov
add
push
out
inc
mov
loope
cmp
sub
add
fwait
lea
push
mov
imul
jae
test
add
loope
lds
jg
push
push
push
movsb
mov
pop
loope
scas
enter
push
out
pop
jb
nop
in
sahf
xor
repz
lods
outsb
xchg
call
jb
ds
sub
lahf
mov
outsl
in
sbb
insb
pop
pop
push
push
dec
or
gs
mov
repnz
ja
xor
aaa
iret
shlb
pop
mulb
add
loopne
add
mov
jl
mov
inc
fisubrl
test
iret
ds
div
mov
sbb
mov
and
js
cmp
xlat
jecxz
mov
inc
ret
mov
mov
fnsaves
pop
jne
jne
push
inc
in
addl
xor
jge
xchg
and
arpl
loop
insb
cmp
imul
lahf
push
sbb
in
pop
sub
or
or
dec
sbbb
push
js
jae
jne
bound
fsubrp
push
inc
mov
pop
lock
mov
cmp
icebp
pop
push
xchg
dec
jg
mov
push
fisttps
dec
mov
out
mov
sub
vpcmpeqb
inc
push
add
test
shr
aas
lahf
movsb
cmc
out
mov
js
lds
rcrb
or
outsb
data16
lret
int3
fcompl
lahf
mov
cld
fnsave
and
iret
xchg
xchg
mov
test
mov
mov
jecxz
lret
inc
out
fcomip
test
test
ja
adc
pop
repnz
sbb
mov
jae
cmc
jp
sti
int
jmp
and
int3
lret
cltd
xor
and
rorl
mov
adc
sub
xchg
bswap
lods
int
addr16
xchg
mov
push
mov
and
in
popf
cmp
jecxz
les
or
push
mov
jae
clc
jl
dec
test
mov
pop
scas
lcall
lret
jg
int3
imul
mov
xchg
je
jb
test
cltd
out
jp
outsb
dec
in
cs
enter
inc
lahf
xchg
xor
push
lahf
or
push
xor
pop
test
jns
sub
sbb
subb
inc
outsl
clc
fiaddl
jle
xlat
je
ret
es
repz
sti
rol
scas
inc
push
push
jl
clc
pop
test
shrb
out
andl
bound
out
inc
sbb
cli
mov
iret
ss
cld
sbbl
fs
adc
and
sbb
mov
cmp
mov
push
ljmp
pop
dec
fs
cs
xor
movsb
jne
sub
pop
movl
lea
adc
cmpsb
inc
xor
in
repz
push
es
dec
lahf
cwtl
xor
xor
dec
ja
pop
pop
iret
cwtl
test
adcb
dec
push
mov
and
pop
int3
xor
jp
orl
and
mov
das
repnz
jnp
cmp
jo
icebp
lret
mov
push
lret
clc
stc
int3
sbb
jl
sub
cmp
lods
inc
aas
mov
popf
xchg
repz
mov
imul
icebp
aas
add
jb
sub
jb
and
jmp
add
pop
popa
cmpb
js
inc
repz
mov
and
sar
sub
xor
pop
adc
mov
cmp
cltd
aaa
mov
xchg
xor
push
push
jle
mov
jl
decb
pop
jg
lods
mov
aaa
push
sub
js
je
xchg
lcall
mov
mull
xchg
xor
mov
int3
and
or
sub
popa
add
push
cwtl
pop
lcall
jae
mov
mov
dec
dec
mov
jmp
inc
mov
xchg
icebp
clc
sahf
xlat
mov
cmp
mov
es
lds
or
sub
out
sbb
insb
addr16
mov
mov
inc
test
fs
hlt
jnp
imull
mov
js
sub
mov
adc
mov
jb
sub
jmp
loopne
cmp
push
mov
sub
xlat
cli
sbb
aas
insb
pop
test
bound
mov
or
jl
and
in
imul
es
or
inc
jne
add
call
sub
jle
lret
xchg
mov
push
in
mov
icebp
inc
in
push
pop
mov
xchg
pop
push
cmp
pop
ja
repz
mov
inc
insb
mov
out
ja
enter
stos
add
dec
adc
push
bound
and
jecxz
and
xchg
stos
mov
mov
cmp
or
into
aaa
dec
pop
es
push
cmc
ss
into
cmp
or
jecxz
jae
fwait
testl
cpuid
xchg
pop
test
dec
pop
pop
aas
jbe
xchg
xor
shl
mov
pop
sbb
bound
popa
mov
or
mov
push
add
ffreep
cmp
das
jne
mov
lds
in
scas
jle
or
in
cmpsb
dec
push
jbe
dec
movsb
jnp
jmp
stos
sti
rolb
jmp
dec
jg
inc
out
lret
dec
xor
pop
std
ds
xchg
and
mov
add
outsb
xchg
insl
bound
popa
mov
std
loope
filds
jmp
and
xor
in
int
cli
cmp
jecxz
inc
in
push
sub
pusha
int3
pop
lds
mov
ret
inc
jmp
mov
rolb
cwtl
loop
adc
cli
xchg
mov
pop
mov
insb
pusha
and
or
rcr
stos
lock
arpl
outsb
mov
xchg
divl
mov
mov
xor
and
sahf
jecxz
mov
mov
xchg
inc
and
ror
lret
ret
pusha
or
pop
or
sub
cmp
bound
loop
lods
fstps
int
cltd
and
lret
mov
mov
mov
js
dec
mov
into
sbbl
je
push
adc
cs
sub
push
addr16
ds
add
adc
aam
cmp
inc
sub
xor
lds
sub
sbb
cmpsb
pop
mov
imul
xor
sub
in
pop
les
scas
sub
add
jns
xor
leave
push
es
bound
inc
sahf
xchg
pop
cmpsl
mov
jmp
daa
psubd
mov
dec
xor
mov
insb
cmp
clc
stos
and
leave
lret
popf
mov
xlat
push
adc
mov
rcll
inc
sar
sub
fistpll
mov
imul
test
pop
jae
ss
pop
jge
test
xor
xorl
fisubl
nop
add
imul
cmpsb
stc
lahf
in
mov
das
cmp
mov
shll
jl
mov
pop
xchg
jns
data16
xor
push
out
ja
jne
pop
arpl
call
clc
jp
push
loope
xchg
lods
xor
adc
incb
mov
inc
add
xchg
popa
scas
pop
pop
ja
lcall
push
movsb
gs
sarb
cmp
ficompl
int
push
xchg
js
daa
and
stc
mov
ficoml
ds
pop
cld
mov
xchg
xchg
adcl
sub
push
test
iret
xor
adc
ss
arpl
xchg
xor
ret
xchg
push
pop
mov
sub
sbb
hlt
fidivl
call
ds
int
rcr
xor
dec
sti
add
imul
sbb
inc
fldcw
ja
xchg
std
popa
pop
call
xchg
enter
repnz
sub
negb
arpl
mov
unpcklps
pusha
dec
aad
jno
lods
pop
mov
test
jb
cmpps
jecxz
out
sar
fwait
pop
lret
dec
and
stc
push
pusha
ljmp
idivl
in
push
push
xchg
jns
das
xor
popl
mov
insl
call
cmp
mov
int3
mov
and
in
ds
inc
push
mov
pop
lret
push
popf
pop
push
insl
dec
sub
test
jns
out
jns
inc
outsb
xor
gs
scas
sub
das
dec
pop
dec
sbb
add
out
movsl
sub
push
pop
in
int3
mov
cmpsl
xchg
int
data16
or
adc
lret
out
fmuls
movsl
push
fcomp
fistpll
mov
ljmp
mov
jo
je
mov
lret
ret
adc
adc
stos
push
sub
out
push
or
pop
lahf
cmpsl
mov
cmp
add
dec
popf
std
cmp
mov
movsb
sbb
inc
mov
movsl
mov
sbb
mov
jmp
adc
ret
in
jo
cmp
rorb
dec
xchg
mov
lahf
xorl
std
mov
in
or
jne
lods
popf
mov
in
int
adc
sbb
lods
or
js
popf
mov
out
out
mov
mov
add
cmp
js
adc
inc
and
iret
pusha
jge
leave
clc
ljmp
loopnew
icebp
cwtl
divb
cmpsb
insl
fisubs
pop
clc
cmp
je
arpl
btr
jae
outsb
cmpsb
xorb
or
clc
loope
inc
xchg
movsb
or
mov
xchg
andl
repnz
scas
mov
pop
mov
and
sbb
lods
shll
pop
push
fbstp
mov
push
push
xor
mov
lds
sbb
outsl
addb
jne
mov
or
idivb
sbbl
mov
mov
mov
push
pop
ret
jg
aam
xor
movsl
dec
or
js
lret
jno
dec
sbb
cmpsl
dec
cmp
inc
fptan
push
xor
out
sbb
jno
add
jg
outsl
test
in
loopne
mov
sub
or
mov
xchg
push
add
idiv
xor
shll
add
mov
push
jne
adc
in
dec
int
jmp
roll
xchg
jae
cmp
push
nop
jle
js
xlat
gs
rcrb
sbb
xor
pop
cld
orl
adcb
pop
aaa
movsb
dec
mov
not
fcmove
push
jo
xchg
pop
jmp
jl
sub
push
test
sbbl
pop
int
out
pop
aaa
jmp
pusha
je
rorl
sbb
add
cmpsl
mov
xchg
fstl
arpl
loopne
sahf
inc
roll
outsl
imul
fs
lods
push
int3
xchg
ret
dec
mov
out
mov
cld
sbb
xchg
cmpsl
xchg
test
dec
mov
push
inc
iret
out
lret
in
jmp
dec
mov
adc
addl
pop
in
pop
stos
dec
jle
mov
dec
or
hlt
xchg
sub
es
repnz
push
sbb
and
orb
mov
pop
and
rolb
adc
push
or
js
loopne
shrl
mov
push
inc
test
or
les
rcrb
mov
test
lret
jle
cmp
and
bound
push
cmp
push
push
pop
xchg
test
dec
jge
cmp
inc
lcall
call
loope
sbb
push
or
inc
and
imul
andb
pop
or
ss
pop
pop
sbb
lea
jo
sbbl
mov
stos
test
jp
dec
cli
cmpsl
pop
test
movsb
adc
repz
cmp
sub
mov
jno
jne
mov
dec
sbb
xor
adc
es
cli
dec
push
dec
shl
push
dec
scas
ret
adcl
sti
or
xor
mov
mov
adcb
imul
inc
mov
test
std
xchg
dec
or
pusha
test
or
adc
mul
punpcklwd
mov
in
out
ss
add
mov
push
dec
cmp
add
aam
fcomip
pop
inc
add
xor
push
loope
lret
mov
adc
mov
pop
pushf
inc
aam
mov
movsb
mov
pop
sub
sbb
inc
in
fmulp
orb
mov
mov
and
rcrb
dec
jp
push
push
mov
jmp
fsubs
pop
adc
imul
dec
mov
pusha
mov
or
enter
mov
xchg
out
out
sub
dec
test
test
push
insb
in
mov
push
or
push
stos
movsl
inc
xor
js
pcmpgtw
pop
lcall
xchg
add
mov
pop
xor
xor
lds
faddp
adc
and
fsubl
dec
pop
mov
mov
and
mov
mov
push
jne
es
sbb
rcl
leave
xor
xor
lcall
jb
jge
sub
std
xor
rcrl
or
outsl
into
out
cmp
js
push
ret
and
xor
test
mov
es
pop
int
mov
mov
push
pop
hlt
clc
sub
mov
sahf
sub
fwait
push
js
pop
arpl
push
cmp
mov
push
pop
imul
lock
aad
push
push
dec
sbb
rol
lock
xchg
jne
fdivp
push
jnp
pusha
jmp
jecxz
jmp
mov
xor
andb
std
pop
dec
sbb
and
sbb
inc
pop
jns
xchg
dec
les
gs
sub
in
dec
movsbl
adc
mov
cmp
jp
pop
sbb
sbb
divl
xchg
push
mov
popa
sbb
movsb
pop
lcall
cltd
cmp
add
imul
xchg
lcall
es
add
sahf
sbb
lds
daa
pop
jle
dec
rol
in
test
imul
into
jae
fists
imulb
inc
adc
mov
cli
mov
adc
mov
or
dec
xchg
aad
pop
lret
pop
andb
cld
cmp
sar
mov
ja
outsl
lds
loop
data16
push
addr16
jl
repz
and
loop
addr16
inc
push
aaa
testb
dec
aam
into
or
rcrl
pop
sbb
dec
mov
mov
cli
and
insl
mov
ss
xchg
mov
inc
sti
repz
fwait
call
scas
pop
out
decl
es
test
fwait
mov
popa
cmp
sti
pop
jle
shlb
stos
fidivrs
sub
xchg
mov
test
xor
loopne
ftst
lret
lds
out
or
in
mov
adc
xlat
ret
xchg
leave
dec
jmp
fstpt
jnp
xor
jecxz
inc
mov
pop
lret
add
lea
ret
clc
and
xlat
fwait
xchg
ljmp
imul
testb
pop
ss
jp
jb
pushf
pop
repz
and
push
mov
ret
fadd
insb
addr16
adc
cltd
mov
or
jbe
push
loopne
xchg
mov
addr16
inc
mov
cmpsb
add
mov
xlat
push
iret
add
jmp
lods
imul
pop
cmp
xor
les
pop
dec
shlb
cmp
loop
pushf
add
adc
mov
xor
test
arpl
in
dec
push
repz
ds
dec
xchg
mov
fs
push
and
inc
adc
or
sub
jnp
pop
dec
sub
lds
or
pop
mov
int3
inc
and
mov
shll
test
and
dec
std
in
rcll
das
and
int
jnp
push
testb
xor
in
cmp
sub
cmpsb
push
cmp
dec
sub
fdivr
hlt
imulb
cltd
fwait
lcall
in
xchg
pop
cli
inc
mov
enter
lea
xor
push
aas
jecxz
xlat
add
out
test
mov
cmp
fistl
add
jno
cmpsb
mov
push
iret
scas
jae
sub
scas
add
and
xchg
push
sti
inc
push
lret
jo
mov
pushf
xlat
push
xchg
mov
xchg
pop
xor
pusha
pusha
movsl
push
call
mov
add
inc
sbb
into
lret
adc
sub
into
sbb
shl
cmp
or
jo
jp
mov
pop
ljmp
iret
jle
nop
and
mov
cmp
icebp
data16
inc
jns
mov
outsb
out
in
mov
scas
insl
lods
ficoms
gs
fs
movsl
lods
fs
jae
mov
cmpsl
mov
mov
lahf
sti
push
es
lcall
push
test
cmp
daa
mov
movsb
movsl
dec
xchg
jp
scas
in
adc
fists
adc
jno
das
dec
pop
cmp
jecxz
in
pop
sbb
or
lods
js
push
adc
pop
aaa
pop
stos
push
cli
adc
add
std
fcmove
mov
pop
int
lock
push
stos
jecxz
call
cwtl
xchg
and
ficomps
cmc
hlt
cld
add
rcrb
and
pop
push
stos
es
nop
data16
insl
mov
dec
test
mov
test
shrb
xor
sub
xchg
ds
sbb
add
jbe
push
cltd
jg
fsubl
test
push
scas
pop
mov
add
enter
jle
call
iret
fadds
sahf
repnz
or
xor
push
loopne
ret
push
or
and
lods
repnz
fdivrs
or
pop
jae
lcall
jg
rcll
jb
adc
imul
testb
ror
inc
dec
movsb
repz
iret
adc
dec
repz
mov
rcr
fdivp
and
pop
adc
mov
push
sbb
xchg
fmul
enter
pop
testb
int
orl
jae
and
ss
xlat
lret
adc
pop
sub
sbb
sbb
mov
cli
inc
push
lds
pusha
in
repnz
sbb
stos
sbb
cmc
push
lea
inc
cmp
sub
sti
gs
rorb
mov
scas
and
sbb
mov
insb
sub
adc
and
test
andb
inc
orl
mov
cld
mov
or
jo
lock
ja
addr16
lea
jns
push
mov
xchg
ja
jbe
mov
mov
mov
sbb
fisubs
sbb
das
cmp
push
lock
fwait
cld
mov
imul
cmc
stc
jbe
cmpsl
ds
sahf
mull
jbe
je
xor
imul
add
and
test
aaa
flds
es
mov
out
or
fwait
outsb
out
addr16
jp
mov
lock
inc
or
xor
out
jo
sub
sbb
pop
add
cltd
xchg
rorl
cli
lretw
lods
aam
pushf
sbb
cmp
sbb
jl
jle
fwait
out
rol
jns
mov
lret
pop
movsl
push
push
aas
shrb
push
jbe
incb
mov
ficompl
loop
or
shlb
ljmp
adc
mov
adc
roll
rorl
fdivrp
adc
push
adc
and
xchg
mov
add
adc
cmp
pop
inc
fildll
mov
or
or
sbb
or
testb
xchg
int
pop
mov
inc
out
pop
cmpsl
pop
jns
jae
xor
fwait
into
mov
out
mov
test
and
int
das
jle
subb
jg
inc
sub
mov
mov
daa
push
insl
add
ret
negb
outsb
push
mov
addr16
imul
jge
mov
lods
dec
lret
push
sahf
fisttpl
shll
add
or
enter
jbe
nop
cltd
mov
lods
and
mov
inc
xchg
adc
cmpsb
lods
sub
xor
lcall
lret
imul
les
add
mov
add
jp
flds
jmp
unpcklps
leave
push
cmpsb
out
and
mov
rorl
push
push
jns
subl
adcl
cmc
jp
je
inc
lahf
loop
push
aaa
jb
loop
push
pop
xor
inc
mov
cmpsb
mov
jo
add
jae
cmp
mov
pop
popa
add
mov
add
push
pop
cmp
sbb
and
sbb
cmp
sbb
loop
jle
add
add
dec
mov
mov
xchg
cmpsb
ss
add
mov
out
fidivrl
dec
or
lock
in
xor
xor
repnz
scas
cmp
inc
in
or
shlb
push
iret
xlat
xlat
cmp
cltd
movsb
inc
jae
dec
loop
popf
shrb
add
in
call
pop
or
mov
xor
faddl
leave
adc
add
xchg
dec
push
adcl
sub
push
inc
call
xchg
call
in
out
jbe
sbb
sub
cmp
gs
popa
daa
pop
movsl
cld
jae
and
test
jmp
bound
std
mov
daa
in
popf
cmpsl
adc
fidivl
cmp
pop
push
lock
loop
dec
cmp
cmp
cmpsb
outsb
cmpsl
aas
repz
in
mov
pop
mov
mov
dec
pop
arpl
jecxz
jnp
roll
mov
lock
pushf
insl
jb
lods
cmc
cld
push
lods
or
repz
push
sbb
pop
out
jle
dec
mov
mov
mov
xchg
sbb
jge
xor
inc
jne
xor
xchg
add
xchg
dec
xorb
test
in
xor
lock
sub
shlb
xchg
add
cmpsb
pop
insl
cmpsb
outsb
aas
and
push
in
repz
in
testl
xchg
bound
fdivs
pop
jmp
loope
mov
rcll
das
xor
xlat
xchg
shrb
or
in
repnz
xchg
imul
push
dec
stos
aam
or
insb
aas
ss
cwtl
fs
pop
cmpb
sbb
dec
or
or
jecxz
fs
enter
fdivs
sbb
or
lods
xchg
push
sub
rorb
int3
cwtl
cmp
sub
jp
xor
pop
out
mov
mov
lock
xchg
xchg
pop
dec
mov
repnz
gs
scas
inc
adc
cmp
xchg
adc
inc
xchg
mov
es
insb
mov
xchg
add
xchg
loope
arpl
push
fwait
data16
sub
add
bound
les
fisttpll
jecxz
popa
fbstp
add
adc
sbb
lret
sbb
or
mov
adcl
pop
popa
rol
ret
cltd
bound
movsb
xor
jle
pop
inc
mov
jno
inc
dec
mov
cmp
mov
and
in
mov
xor
jmp
fisttpll
in
jge
jge
mov
inc
ja
sub
push
push
imul
xchg
sub
cltd
inc
es
xor
jl
subl
mov
sti
xchg
mov
popa
ljmp
cmp
add
xchg
jae
imul
cmc
lret
xor
jne
arpl
or
dec
mov
inc
loop
daa
fwait
ret
or
sahf
addr16
add
movlps
xor
gs
sarl
adc
movb
sbb
incl
roll
mov
jmp
in
and
lock
xchg
jno
rcrl
cmc
pop
xchg
test
dec
mov
pop
adc
jg
in
pop
mov
xchg
mov
jb
ret
sbb
stos
push
xor
rcll
xchg
add
push
adc
adc
jmp
ret
sub
mov
pop
lock
sbb
mov
xor
push
lods
jl
cs
push
pushf
into
cmp
jbe
lret
test
mov
mov
xchg
mov
sub
mov
xchg
call
popa
mov
out
imul
mov
adc
lcall
cmpsb
ljmp
cli
test
sti
jnp
inc
add
imul
lods
int
sub
and
or
inc
xchg
mov
cmp
sahf
add
into
outsl
sbb
pop
dec
mov
jmp
hlt
out
lock
jae,pt
fiadds
cmpsl
xor
adc
ret
adcb
cld
sbb
lods
in
or
mov
pop
xlat
lea
nop
movsl
adc
and
push
lahf
dec
xor
or
add
adc
je
mov
adc
fbstp
icebp
loop
notl
lods
jmp
add
push
out
ret
push
sub
mov
shlb
adc
ds
sbb
cld
pop
mov
stc
in
pop
sub
in
mov
scas
outsl
popf
or
xchg
pushf
loope
cmp
nop
pop
cli
shlb
xor
shrl
popf
adc
inc
mov
push
mov
pop
push
pop
xchg
and
or
dec
arpl
outsb
inc
outsl
add
das
pop
adc
insb
hlt
into
int
test
into
aad
iret
pop
outsb
adc
lcall
imul
enter
jmp
cltd
sub
insb
cmpsb
jp
sahf
cmpsb
sub
cltd
lods
mov
dec
addw
xchg
loop
sbb
stc
dec
das
sub
adc
nop
push
push
dec
ja
or
out
mov
jg
mov
pop
or
out
decl
cmp
mov
stos
repnz
jl
mov
xor
in
push
jl
outsb
adc
dec
fsubs
in
nop
jle
and
popf
jle
inc
lea
dec
adc
mov
xorl
sbb
mov
add
jle
mov
jns
fstps
xor
imul
inc
jg
sub
push
or
xchg
lds
jmp
xor
xchg
inc
lock
add
inc
sbb
mov
ret
jnp
rorb
mov
dec
cmp
adc
jle
mov
ret
fnstsw
rcrl
cmp
loop
cmc
inc
dec
mov
out
mov
jg
lcall
jbe
pushf
out
cmpb
cmp
jbe
adc
pushf
jne
jl
in
pop
sti
mov
cltd
mov
dec
push
sbb
bound
jae
push
xchg
icebp
pop
dec
leave
clc
mov
int
mov
stos
sbb
or
call
and
mov
jl
push
pop
das
and
out
subb
pop
ret
in
shrl
add
shrl
out
test
orl
push
xchg
push
adc
jp
xor
mov
sti
mov
rolb
dec
jmp
gs
sahf
sbb
and
out
sub
aas
es
mov
repz
push
cmp
mov
xor
lock
fidivrs
mov
xchg
pop
ja
inc
cmp
decl
sub
lds
sti
add
xchg
inc
and
inc
fldcw
int3
fisubrs
je
insb
daa
push
insb
sub
mov
bound
and
mov
jbe
rolb
fbld
lcall
idivb
inc
mov
aam
repz
stos
jmp
aad
xor
mov
push
mov
shlb
rcrl
mov
mov
or
mov
sub
push
jo
arpl
sub
jl
lods
sbbl
xor
inc
mov
adc
loop
jb
test
inc
mov
mov
xor
adc
and
xlat
fisttps
cmp
mov
pop
push
lods
stos
test
inc
repnz
push
iret
sbb
rcr
fcmovb
ret
aas
xor
leave
ret
push
push
lret
push
add
jbe
adc
xchg
push
imul
and
mov
test
mov
leave
ret
call
rolb
mov
int3
ss
imul
cmpsl
mov
daa
mov
clc
jmp
cmp
mov
cmp
mov
mov
outsb
xchg
jae
jmp
outsb
sbb
scas
cmp
dec
lods
jno
movsl
sarl
xor
call
rclb
insb
stos
insb
sub
imul
fiadds
inc
add
mov
and
hlt
mov
dec
aas
adc
or
dec
add
mov
fstl
push
fadd
and
or
dec
cmp
repz
xchg
fcompl
addr16
mov
push
dec
pop
jbe
jns
or
fidivl
cmpsl
add
mov
aam
fidivs
dec
stc
inc
sbb
mov
and
popa
mov
ds
psrad
jp
pop
mov
jge
repz
add
jno
and
jg
ret
mov
shl
push
sbb
sarb
or
bndstx
outsl
inc
nop
mov
imul
mov
xchg
sub
adc
out
xchg
inc
xor
lds
push
jl
jl
ret
sub
jne
out
inc
mov
sahf
mov
stos
flds
mov
int
jle
lods
pushf
mov
int
mov
repnz
mov
fucomi
push
test
rolb
icebp
xchg
xchg
adc
scas
popa
lea
or
inc
xchg
sarb
lds
call
mulb
out
mov
mov
or
movsb
add
sub
fistpl
dec
stc
fwait
scas
mov
cmpsb
pop
pushf
movsb
pop
mov
mov
daa
dec
inc
mov
in
mov
push
incb
cmp
call
shrb
jns
aad
insl
xor
xor
lock
enter
mov
xchg
mov
xchg
sbb
jo
and
lods
stos
mov
outsb
mov
push
cltd
adc
test
push
mov
or
popf
mov
push
cwtl
shlb
sar
dec
mov
ret
jmp
lock
inc
sbb
add
je
pop
sbb
pop
add
pop
mov
push
lods
addl
sbb
xchg
aaa
aaa
pop
in
mov
xor
outsb
dec
jg
mov
pop
dec
shrl
or
lock
shrb
dec
stc
in
sub
xchg
enter
pop
sub
pop
mov
mov
clc
fisubl
pusha
filds
dec
sbb
int
xchg
push
popf
fucomip
cmpsb
stos
add
leavew
imul
lds
jno
mov
arpl
xchg
fiadds
out
insb
cwtl
adc
adc
repnz
inc
rorb
inc
imul
add
clc
insl
pop
ljmp
lds
fcoml
bswap
out
outsl
jg
ret
push
mov
lods
lret
loopne
mov
scas
xchg
push
loopne
adc
cltd
adc
xchg
pop
inc
adc
cs
out
rorl
inc
pop
arpl
rcl
xchg
jb
adcb
lret
jl
stos
arpl
mov
jns
mov
cs
icebp
push
std
xchg
fwait
sub
testb
push
fldt
xchg
pop
shl
pop
push
nop
xchg
xor
push
adc
mov
jb
push
aas
and
test
in
cmpsl
repz
xchg
add
add
nop
adcb
sahf
xchg
push
int
popf
jmp
cmp
cmp
and
test
pushf
sub
dec
in
inc
lods
xor
icebp
pop
fistl
adc
pop
andb
pop
frstor
pop
pop
mov
cvtps2pd
jne
cltd
push
xchg
cmp
stos
push
rorl
mov
out
outsb
mov
inc
pop
call
add
inc
sahf
sub
jmp
cmp
jg
outsb
mov
js
insl
push
andb
push
arpl
scas
pop
adc
in
movsb
imul
cwtl
stos
inc
dec
sbb
int
in
into
movsb
dec
jg
jae
sti
lock
gs
stos
xchg
mov
and
fidivrl
sbb
jmp
xor
jae,pt
jge
mov
cmp
in
pop
sbb
xor
fmul
bound
loop
or
jecxz
sahf
aad
dec
push
pusha
xor
loopne
aad
mov
shrl
into
hlt
inc
push
mov
mov
mov
cmc
add
xchg
cmp
dec
imul
mov
fstl
sahf
mov
int
subb
ss
aas
scas
mov
pop
dec
movsb
loop
or
icebp
mov
gs
dec
sbb
and
mov
out
pop
shl
and
mov
inc
push
inc
insl
bound
sub
pop
insl
or
and
adc
pop
xchg
aaa
push
mov
pop
push
arpl
cmp
fwait
mov
and
sbb
out
cmc
outsl
das
rcl
mov
fstl
sub
sti
or
ret
repnz
xor
nop
mov
mov
std
or
mov
imul
xchg
outsl
sbb
xchg
push
and
sbb
xchg
push
sbb
ret
and
xchg
jp
sti
push
jecxz
jle
mov
aaa
rcrb
cmp
cmc
in
push
xchg
ret
add
cltd
lcall
mov
add
jns
add
and
cld
ficoml
and
sub
add
in
test
mov
push
sbb
test
pushf
pop
test
sbb
test
movsl
pop
out
inc
cmpsb
add
aas
fmul
icebp
stos
xchg
inc
pop
xchg
sub
sahf
jb
fsub
mov
icebp
loopne
jae
rolb
xor
loope
adc
xor
fcmovu
mov
mov
xchg
and
cmp
out
inc
mov
jmp
dec
add
call
movsb
jno
xchg
jecxz
cli
int
mov
dec
xchg
fwait
in
pop
imul
rolb
lods
pop
adc
and
xchg
cmp
daa
stos
ret
or
insl
adc
ljmp
sub
cmp
sar
and
mov
or
add
out
push
dec
cmp
push
add
rolb
sbb
sbb
or
out
pop
mov
mov
adc
xchg
jb
sbb
mov
stos
push
in
mov
mov
out
pop
jmp
adc
pop
ja
data16
outsb
test
cld
xchg
add
gs
fwait
sti
and
cwtl
push
mov
mov
out
push
jbe
ret
mov
or
inc
ficoml
xor
add
out
sub
rolb
cmp
daa
clc
cmp
stos
sbb
flds
mov
sbb
ds
xor
pop
out
sbb
dec
inc
and
scas
leave
cmp
or
mov
lahf
cmp
psubsb
mov
cmc
xchg
mov
mov
shll
leave
mov
sub
ds
iret
mov
sub
mov
dec
push
sbb
inc
mov
push
dec
data16
jle
xchg
or
mov
lock
fs
adc
decb
dec
loope
or
and
ficoml
add
pop
repz
cmp
outsb
mov
out
test
std
ret
mov
pushf
pop
adc
mov
stos
xchg
call
push
lcall
pop
pop
mov
shrl
pop
test
sti
loope
jno
dec
xchg
je
aam
ret
mov
push
fmulp
scas
mov
xchg
jmp
test
data16
cmpsl
jecxz
sub
bound
test
ds
cmp
fistpl
xor
popl
jge
inc
test
cmpsl
jno
and
into
rcrl
lds
adc
pop
cmc
pop
mov
or
add
and
mov
xchg
push
or
jg
jnp
faddl
lret
xchg
sbb
out
xor
dec
dec
sbb
mov
shlb
out
pop
js
sub
pop
xchg
adc
rcrb
jnp
in
movsl
in
dec
jp
adc
testb
mov
loope
push
sahf
test
lea
fimull
int
xor
xchg
inc
test
nop
mov
pop
cmp
pop
push
sbb
adc
bound
roll
sbb
call
mov
push
mov
push
stos
pop
sti
push
leave
adc
or
xor
sbb
cli
mov
fisubrs
mov
ret
sub
sbb
add
mov
and
push
jge
adc
push
push
sarb
lods
mov
pushf
push
dec
lods
or
in
push
lea
pop
lsl
mov
mov
mov
insb
cmp
sbb
scas
mov
aad
aaa
inc
rcl
out
lods
xorb
push
sub
scas
pop
jb
sbb
mov
adc
mov
xor
lock
sbb
jecxz
push
andl
lcall
int
pop
cmp
pop
daa
jbe
mov
inc
popf
ret
std
shll
jns
daa
mov
mov
in
in
xlat
push
icebp
pop
out
fisubs
out
stc
inc
add
inc
mov
mov
push
mov
gs
jecxz
or
imul
jp,pt
pop
in
or
stos
xchg
mov
sbb
inc
stos
inc
pop
outsl
xor
jns
jle
add
js
jge
cltd
dec
inc
sub
cltd
adc
sbb
fnop
jbe
lahf
iret
pop
popa
push
inc
xchg
insb
enter
push
pop
cmp
jbe
xor
pop
adc
jg
cs
jbe
mov
pop
pop
repz
addl
sub
sub
mov
push
mov
add
jge
repz
into
add
loop
in
pop
add
pop
xor
out
cmp
or
push
sbb
dec
sub
ret
ss
jo
xor
orb
pop
jo
jg
sbb
insb
js
cmp
adcb
bound
lds
in
xchg
shlb
pop
xchg
adc
subb
jp
ss
aaa
mov
rcrl
stos
sub
aad
cltd
jge
bound
arpl
jne
loopne
or
ds
mov
add
push
aad
or
xchg
inc
cltd
push
out
je
sbb
and
insb
scas
stc
int3
jb
sbb
or
dec
and
in
mov
std
int3
sub
push
shr
or
jno
test
sub
or
cld
mov
sub
ret
mov
pop
ljmp
pop
es
mov
lods
inc
sbb
inc
rolb
lods
jg
sub
aam
sti
lock
mov
nop
mov
inc
add
jbe
data16
ret
xchg
ss
lea
mov
mov
cwtl
int
sahf
sbb
movsl
loope
insb
mov
cmp
add
aam
rcr
out
aam
lea
insl
bound
jo
fimull
add
lahf
push
jle
xchg
xchg
pop
sbb
mov
jecxz
fst
adc
jecxz
scas
jmp
cmp
xor
add
pusha
pushf
leave
or
test
and
scas
adc
mov
out
adc
in
test
jne
pop
ja
add
dec
jae
mov
cmc
xlat
roll
xor
and
data16
xor
test
stos
loop
mov
daa
js
adc
mov
call
inc
dec
popa
pop
mov
push
lret
xchg
enter
sub
test
inc
daa
jmp
movsb
popf
push
sub
movsl
pusha
mov
mov
insl
out
nop
into
mov
cwtl
mov
mov
repnz
xor
dec
imul
fidivs
add
xchg
gs
jae
das
inc
and
add
jb
xor
or
addr16
das
imul
mov
and
mov
push
add
xlat
mov
negl
mov
push
fnstenv
xor
scas
xchg
std
in
dec
inc
xorl
add
sbb
iret
dec
cmc
ficompl
jecxz
cltd
fdivl
lds
pushf
sbb
jns
jae
mov
shlb
add
je
loope
jmp
mov
bound
pop
inc
stos
push
lret
mov
testl
shrb
cmp
stos
ret
mov
jns
xor
jno
push
mov
push
sbb
mov
mov
mov
adc
and
scas
sbb
test
dec
push
xor
mov
pop
mov
nop
mov
mov
adc
std
jle
stc
inc
in
lods
mov
inc
mov
fldenv
jge
bound
jp
dec
rcll
mov
out
add
cld
cmp
cld
inc
cmpl
bswap
ficoml
mov
in
xor
jbe
sub
insb
arpl
aad
test
mov
xlat
cltd
div
mov
inc
mov
lret
out
push
shll
cmp
lret
into
cmp
scas
dec
sub
xchg
add
pop
add
mov
repnz
hlt
xor
repnz
or
fiadds
mov
insl
shl
data16
mov
xchg
fmuls
mov
dec
add
jecxz
sbb
insl
mov
pop
sbb
mov
push
cmp
xor
push
sbb
mov
inc
out
or
add
xchg
sbb
pop
aad
xor
aad
xlat
and
cmp
rolb
jno
aam
mov
push
jo
add
and
dec
push
or
ret
and
es
xor
cmc
xchg
pop
out
and
jl
daa
mov
push
arpl
ja
lods
ds
loope
call
sub
es
cmp
jge
stos
jo
jbe
xchg
mov
ret
jge
insb
mov
inc
dec
shl
jae
test
xchg
or
push
xchg
in
mov
inc
inc
xor
sub
xchg
push
xor
pop
testl
push
jmp
lea
jo
daa
fs
dec
es
imul
cmc
mov
test
fidivs
xchg
cwtl
sbb
test
shlb
adc
mov
mov
scas
cmp
pop
adc
jae
std
lock
xchg
mov
sahf
mov
cli
mov
jnp
adc
pop
aas
std
jecxz
pop
aaa
test
or
mov
jg
fbstp
cmp
mov
subl
push
imul
fstpl
lahf
stos
lahf
cmp
xlat
pop
mov
adc
sbb
call
push
popa
sub
dec
cmp
scas
lods
rclb
ljmp
ja
lahf
dec
inc
faddp
and
clc
dec
mov
sub
andl
pusha
pop
cld
fstl
loop
lods
sbb
fucomi
hlt
cmp
sti
in
jl
or
cmp
xchg
xor
cltd
inc
shll
mov
mov
push
or
pop
or
jmp
incl
dec
cs
sub
das
push
mov
add
or
fstpl
lock
daa
jno
jg
call
adc
gs
lret
int3
add
mov
jge
mov
jo
mov
and
pop
dec
shl
imul
lret
mov
xchg
enter
into
add
test
daa
mov
cmp
sbb
out
stc
mov
push
xor
pop
test
sbb
outsl
pusha
pop
sub
fnsave
mov
jmpw
jne
movsl
nop
jge
outsb
ret
and
sub
adcl
and
dec
sbb
out
dec
adc
jecxz
mov
dec
xchg
cmpsl
and
inc
into
hlt
dec
cmp
xor
or
out
lods
out
cmc
mov
js
sbb
fcoms
inc
out
mov
imul
pop
enter
movsl
fadds
add
iret
and
mov
add
sahf
xorb
inc
xor
int
mov
stos
sbb
mov
ret
scas
mov
cmp
add
dec
sbb
jecxz
divl
pusha
cmpsb
mov
sub
push
or
pop
insb
mov
xor
jb
insb
adc
push
loop
insb
dec
call
inc
mov
test
push
data16
arpl
jb
push
ljmp
adc
aaa
mov
shrl
cmp
sbb
loopne
jmp
pextrw
or
mov
cmp
push
mov
push
adc
cs
xor
daa
enter
dec
rclb
fwait
push
jmp
push
push
add
andl
jbe
dec
push
loop
mov
push
aaa
divl
jp
js
jb
sbb
mov
inc
xchg
in
or
lock
jne
in
jp
lock
stos
adc
shll
loope
mov
shl
aad
jge
sbb
xor
int
cmp
and
pop
push
ret
sbb
fimuls
dec
adcl
inc
push
cmpsb
push
dec
dec
repz
ret
sbb
mov
lds
fisttpl
shlb
test
fdivl
inc
or
sbb
push
andl
shll
push
or
fs
push
jo
xor
jo
fcmovne
add
repz
push
es
pop
ja
push
xchg
jp
inc
gs
jmp
dec
mov
cmpsb
jge
xchg
pop
mov
adc
or
pop
lock
cmp
daa
cs
cmpsb
cmpsl
fstp
inc
jg
enter
push
jge
sub
bound
lret
dec
dec
adc
mov
or
gs
aad
mov
mov
mulb
hlt
sub
gs
cltd
outsb
fwait
fs
push
je
push
adc
pop
je
jbe
mov
mov
xor
in
mov
inc
add
and
das
jno
cmc
inc
inc
out
nop
outsb
lret
rol
sbb
cmpl
jl
fwait
scas
cli
test
imul
jns
adc
or
jmp
xor
mov
inc
ss
lcall
aas
in
aad
lock
add
lahf
inc
cmp
mov
or
mov
aas
dec
cli
adc
sub
xlat
pop
pop
outsl
fdiv
sub
xchg
mov
and
sub
xor
sub
cmpsb
and
leave
dec
xor
cmc
lcall
jnp
add
adc
xchg
add
push
xchg
fcmovnb
test
lock
repnz
arpl
call
stos
in
fstl
dec
add
fnsave
xchg
fiaddl
inc
or
sbbl
push
fstl
dec
push
mov
icebp
xchg
mov
inc
fs
sub
insb
insb
jnp
xchg
xor
mov
mov
mov
rclb
outsl
es
js
add
mov
imulb
and
les
or
into
in
out
sbb
inc
or
lock
enter
fdivrs
stos
mov
xor
push
fildl
ret
cmp
lcall
dec
xchg
test
adc
dec
hlt
repz
inc
dec
mov
fincstp
jecxz
push
je
lahf
out
mov
test
add
out
ja
loop
pop
outsl
enter
aas
popf
ljmp
and
cmp
lret
dec
pop
inc
sub
mov
insb
pop
push
lcall
in
repz
mov
jns
cld
call
in
push
aam
jl
push
mov
call
mov
dec
sbb
or
and
in
pop
mov
ss
test
xor
xchg
repnz
stos
repz
add
sbb
leave
stos
jg
and
push
sbb
dec
aaa
sti
jb
out
insl
jge
dec
in
cmp
or
imul
sahf
cmpsb
inc
stos
jl
inc
adc
mov
ret
dec
loope
mov
jmp
dec
nop
jecxz
cs
dec
test
mov
inc
dec
add
outsl
and
dec
pop
lret
clc
fsubrs
jecxz
dec
and
pop
push
mov
push
fnstcw
or
int3
call
push
clc
jb
pushf
das
gs
outsb
fwait
aam
les
scas
mov
idivb
xchg
imul
scas
test
dec
cmp
adc
add
xor
lcall
add
popf
daa
enter
mov
sub
gs
add
jnp
aam
subl
imul
nop
xchg
arpl
sbb
clc
stc
mov
sbb
adc
adc
test
mov
sbb
lods
cltd
insb
mov
mov
in
sbb
sbb
cmpsl
jno
mov
icebp
mov
jmp
mov
lcall
push
aaa
ret
shll
inc
out
push
or
inc
mov
in
sbb
inc
add
mov
xchg
pushf
clc
loope
stos
fisubrs
dec
lods
int
lds
test
mov
orb
outsb
lds
and
stos
insb
dec
ret
mov
lcall
push
pop
sub
mov
adc
outsl
shlb
iret
icebp
stos
pop
popa
repz
add
pop
pop
mov
and
cwtl
popa
rcll
jb
mov
adc
mov
scas
ljmp
jge
push
cmp
dec
mov
push
or
scas
rolb
stos
xchg
jg
dec
notb
loop
mov
lods
push
arpl
mov
pushf
mov
xchg
and
das
rcrb
cli
rorl
sub
shr
stos
shrb
dec
dec
scas
inc
enter
movsb
mov
adc
jle
push
mov
mov
adc
cmp
jnp
jb
adc
xor
js
pop
xchg
inc
std
leave
lret
jno
dec
pop
mov
mov
lock
pop
inc
pop
jo
mov
push
cli
mov
push
je
xchg
insl
sub
xchg
push
add
js
lods
pop
testl
xchg
lret
add
fsubp
mov
inc
jl
xlat
std
repz
xchg
adc
dec
out
xchg
adc
cld
mov
outsb
xor
cmpsb
xchg
pop
in
xchg
repz
into
lods
fisttpl
add
xchg
rcll
mov
stc
mov
mov
xchg
mov
test
shrl
sahf
mov
mov
xlat
lea
or
jle
or
vmovntps
push
and
in
adc
pushf
add
pop
add
add
fucom
int
jecxz
stos
sbb
dec
ret
jg
inc
sub
dec
pop
cmp
and
mov
into
ss
int3
and
imul
push
push
push
mov
dec
jne
lock
jo
mov
mov
jb
inc
xchg
sbb
fwait
mov
punpckhbw
jmp
leave
sub
pop
in
stos
mov
mov
or
in
sbb
or
add
ljmp
or
fildl
sti
in
cmpb
mov
outsb
add
je
movsb
push
jge
ficoms
xorb
mov
das
cmpsb
je
sahf
pop
push
adc
les
cmp
icebp
sub
push
sub
mov
jl
xchg
jmp
cld
sbb
mov
addr16
cmc
xchg
imul
mov
mov
ljmp
lock
sarl
pop
and
sbb
xlat
or
lods
lea
cmp
je
add
movb
mov
add
in
xlat
icebp
jns
mov
test
loopne
jl
jno
mov
inc
cmp
and
push
outsl
pop
push
fistpl
arpl
mov
test
repz
hlt
xor
and
cmpsb
adc
nop
or
daa
jle
cmovp
lea
stos
rcr
push
lcall
mov
add
leave
cltd
cwtl
dec
push
xor
flds
cmp
insb
cmp
push
out
jge
cmpsl
aad
push
pop
fldl
dec
push
ljmp
mov
in
rcr
movsl
xorb
cmpl
cwtl
stc
cmp
aas
add
rorl
roll
adc
cs
in
xchg
push
jns
jae
push
xlat
pusha
lds
add
pop
daa
and
out
dec
negb
repnz
xchg
dec
mov
popf
xor
mov
sub
out
sbb
sahf
and
lods
sbb
lods
in
xchg
enter
xchg
fstpt
and
cmp
mov
lcall
mov
mov
dec
loope
fildl
jbe
stc
adc
add
mov
mulb
repz
adc
xor
adc
mov
mov
cli
and
in
scas
mov
xchg
faddp
ja
mov
inc
cmp
pop
pop
dec
rclb
add
loope
ds
aad
insl
or
icebp
lods
inc
leavew
cmp
dec
hlt
fcoml
in
movsl
push
inc
sahf
pop
out
or
sub
or
testb
test
fndisi(8087
inc
lcall
sub
jg
mov
punpcklwd
jo
dec
les
sbbb
ficoms
sbb
repnz
push
in
aaa
or
call
bound
cmp
mov
mov
pop
sti
scas
xchg
stc
cmpsl
inc
rorl
mov
push
int3
cmp
lret
ljmp
cld
jne
sbb
ret
push
addr16
add
sbb
cltd
jnp
xorb
cmp
mov
sub
roll
arpl
cli
xchg
cmpsl
stos
out
imul
mov
and
jl
std
stos
push
popf
adc
mov
cmp
add
dec
cwtl
push
test
mov
stc
inc
jp
pop
jp
aad
movsb
add
mov
dec
xchg
mov
and
fnstsw
out
mov
xlat
xlat
loop
jmp
lods
scas
inc
leave
adc
xor
imul
cltd
fdivp
sub
and
invd
mov
ja
fstl
mov
shll
vpcmpeqd
pop
test
outsb
inc
push
pop
test
mov
dec
xor
adc
mov
andb
xchg
adc
call
lahf
enter
jo
stc
inc
and
push
js
idivb
insb
sub
cmpsl
sbb
sbb
xor
fsubs
lds
fldcw
subb
je
adcb
ficomps
bound
std
pop
mov
dec
lods
rclb
pop
lock
sbb
cwtl
cmp
test
aam
push
push
orl
mov
jl
mov
mov
mov
inc
mov
fidivrs
popa
xor
rcl
fs
lcall
sbb
push
inc
lock
test
adc
mov
adc
pop
bound
mov
jmp
sahf
jne
and
cmpsb
fidivl
fsubl
dec
lods
fcoms
dec
jg
inc
in
push
and
data16
cmp
sbb
aaa
cmc
rorb
jp
or
sbb
stos
insl
push
cs
mull
outsb
cmpsb
cli
inc
test
int3
enter
or
out
icebp
nop
shl
in
xorl
xchg
orl
jl
repnz
xor
inc
inc
lret
fwait
adc
or
leave
insl
xor
mov
lahf
mov
stc
dec
xchg
push
cs
sub
bound
or
adc
and
lea
ret
or
addr16
repz
pop
xchg
sub
rorb
fstpl
inc
xchg
fs
aad
dec
fcoms
inc
iret
add
cmp
dec
xchg
xor
mov
in
loop
outsl
sbb
scas
in
insl
fwait
rolb
loopne
xchg
lcall
into
nop
push
pushf
orb
mov
repz
mov
aas
mov
mov
lcall
cli
cld
scas
lds
pop
cli
cmp
jle
into
push
lret
stos
cmp
popa
mov
stc
pushf
incl
sbb
out
fcoml
pop
mov
cs
jne
hlt
hlt
fs
xchg
daa
xchg
repnz
les
test
cmp
fdiv
sarb
dec
inc
leave
xchg
push
ret
or
test
adc
xor
int3
xchg
push
lret
lods
mov
push
lock
inc
in
mov
shr
fnsave
in
iret
pop
inc
data16
rorb
dec
pop
dec
xor
test
std
inc
les
bnd
xchg
lret
push
xchg
dec
jl
dec
sbb
icebp
scas
es
aad
lock
scas
mov
lret
jecxz
ljmp
or
and
add
or
and
adc
push
loope
les
xrelease
sub
lcall
mov
loope
imul
xlat
popf
out
inc
cltd
sub
cmp
sub
cmp
incb
lods
cmp
icebp
gs
fistps
loopne
xchg
movsb
mov
test
pop
dec
scas
les
cmpsl
push
mov
push
jnp
fisubl
and
inc
cmpsb
scas
and
jns
std
push
xchg
lcall
mov
or
xchg
fldcw
int3
aaa
adc
inc
cs
cmp
fstpt
cmpsb
shl
lock
lods
in
in
dec
out
pushw
fs
fs
shl
add
pop
cld
insl
loopne
sarl
aad
shl
out
or
insb
push
xchg
fwait
cmp
push
mov
je
iret
leave
mov
adc
pop
loope
mov
xchg
popf
xchg
icebp
xchg
push
in
push
dec
sbbl
inc
cmpl
cmpsb
add
sub
jae
sbb
mov
xchg
xor
out
popf
jecxz
imul
adc
sti
call
and
add
cmp
push
cmp
insl
push
lock
cmp
push
sahf
cltd
cmp
dec
pop
push
aas
inc
and
cs
or
stos
fcmove
adc
leave
jne
mov
movsl
sbb
ret
cmp
out
stos
mov
or
adc
mov
lods
das
dec
outsl
sbb
adc
rclb
add
into
pushf
jns
xor
inc
jb
lds
lock
cmp
sbb
dec
rcll
lods
imul
lahf
push
out
aam
mov
ds
xor
cmp
push
sarl
fs
js
push
fwait
jno
mov
leave
jmp
daa
mov
xor
fucom
in
fs
js
xor
popf
fadds
addr16
popa
fs
inc
mov
negb
add
add
test
imull
xor
sbb
dec
sbb
add
sub
push
or
leave
pop
arpl
mov
xchg
movsl
xchg
xor
lret
add
int3
jo
psubw
inc
xchg
jne
pop
cwtl
fimuls
mov
sbb
test
cmp
lcall
in
sub
scas
mov
mov
pushf
push
aam
test
in
or
fsubs
nop
insb
jo
loope
add
xchg
roll
loop
pop
insl
inc
daa
negb
fmul
push
jmp
jb
mov
sbb
mov
les
mov
scas
jae
pop
inc
lret
movsl
adc
cmc
pop
cwtl
inc
adc
pop
das
cwtl
stos
cmpsb
clc
xchg
xor
sub
pop
ds
cmc
adc
inc
scas
insl
std
fwait
lods
sahf
pushf
inc
xchg
cmp
dec
or
inc
daa
sbb
xchg
pop
icebp
push
or
out
inc
popa
inc
or
std
mov
or
dec
mov
cmpsl
aas
leave
in
add
push
addb
xor
dec
mov
xor
cmc
sub
cmpsb
xchg
push
repnz
js
sbbb
inc
cmp
lock
icebp
pop
dec
push
xor
sub
js
mov
jo
and
or
add
add
cmc
or
xchg
push
mov
and
das
or
sbb
movsb
cmp
ss
lds
lock
call
cli
mov
add
call
add
jmp
mov
inc
pushf
dec
es
xor
sbb
adc
dec
pop
xor
ljmp
pop
and
fbstp
xchg
nop
gs
imul
scas
and
adcl
in
cwtl
sub
jl
pop
pop
sar
sub
mov
inc
push
or
faddp
pop
insl
xchg
cmpsl
ficoms
add
test
aad
les
add
mov
push
jb
push
jbe
clc
pop
mov
pop
icebp
popf
push
repz
add
ja
mov
imul
ret
push
inc
lods
pop
inc
xchg
shrb
sub
aaa
xor
mov
push
dec
mov
sbb
popf
call
mov
jle
sahf
clc
xor
in
dec
testb
mov
cli
pop
sarb
outsl
mov
jl
movsb
cmp
imul
repz
test
adc
jmp
in
and
add
jecxz
pop
rorb
pop
sub
inc
pop
push
aaa
jne
jae
mov
fnstsw
and
into
jo
movsb
js
push
push
cmp
dec
aaa
fcmove
add
adc
into
adc
sbb
lea
mov
arpl
dec
lret
cld
cmp
inc
enter
jecxz
sbb
dec
imul
popf
add
ret
sub
add
add
lods
or
mov
test
ljmp
mov
pusha
rclb
scas
data16
cmp
movsl
cmc
mov
js
add
movsl
inc
push
arpl
add
mov
sub
mov
push
xor
mov
xchg
in
xchg
and
lea
jns
inc
iret
shrl
sbb
push
sub
inc
xchg
into
sub
push
push
and
and
mov
dec
daa
negb
pop
aad
xchg
rorl
mov
mov
mov
gs
mov
loop
add
xchg
movsb
jge
rcll
push
pusha
mov
movsb
pop
shr
mov
lock
test
int3
or
inc
daa
in
cmp
jae
or
jle
arpl
das
hlt
and
or
test
aam
mov
nop
pop
sbb
cmp
mov
sbb
push
std
xlat
outsl
hlt
push
cwtl
addr16
mov
pop
scas
lcall
mov
lret
push
push
aad
inc
sbb
jbe
push
cli
movsb
and
mov
pop
int
xor
out
jle
lea
and
dec
outsb
pop
rcll
ljmp
mull
mov
popa
sbb
sti
ret
fistpll
cld
pop
mov
jl
pop
push
jns
fidivrl
insb
dec
push
jno
push
pop
pusha
repz
jnp
mov
inc
jns
cmc
movsl
sbbb
cmp
rcll
mov
fistpl
push
fwait
loope
jmp
popf
popa
stc
inc
jno
cmp
es
scas
ja
hlt
mov
mov
aam
and
out
mov
pusha
ret
stos
mov
inc
dec
jmp
out
pop
jmp
sbb
inc
jno
cmpsb
mov
sbb
fcomps
mull
aad
sub
je
pop
push
mov
cmp
mov
jmp
cltd
test
enter
adc
js
jb
std
test
inc
mov
pop
cmp
xor
cmp
pop
out
mov
test
jno
cs
lods
jns
add
repnz
dec
push
aaa
fs
mov
inc
iret
lods
jmp
mov
iret
push
mov
mov
jo
dec
and
pop
call
cltd
mov
jne
push
test
dec
bound
add
outsb
hlt
outsb
sahf
cwtl
cmpxchg
icebp
sub
sbbl
xlat
pop
nop
decl
or
dec
mov
push
mov
repz
out
mov
popa
dec
mov
arpl
stc
scas
mov
xor
push
add
cmpsb
clc
lret
jns
xor
cmc
imul
adcb
divl
xor
inc
xchg
adc
icebp
sbb
adc
dec
ror
lcall
jo
ds
clc
add
les
mov
ret
add
fidivrl
cmp
pop
xor
xchg
add
cmp
lret
lods
or
enter
xor
inc
and
mov
iret
xchg
pushf
js
mov
insl
daa
incb
hlt
roll
lea
jno
push
in
mov
xor
data16
jns
and
test
insl
cltd
fistl
mov
xchg
aam
test
cli
orl
adc
cld
test
sahf
cmp
clc
mov
lret
test
in
or
or
mov
dec
ss
popa
mov
push
sbb
xchg
das
push
sahf
cld
dec
pusha
ss
stos
add
push
pop
lock
test
jb
sub
and
inc
sbb
loop
xchg
pop
rcrl
clc
popf
pusha
mov
xchg
arpl
and
xor
or
dec
cltd
xor
xor
jne
add
sahf
push
mov
sub
fisttpl
lret
xchg
jo,pn
jp
mov
jmp
mov
addr16
clc
imul
movl
or
stos
stos
repnz
sbb
add
jl
data16
cs
adc
dec
mov
daa
in
pop
mov
sbb
mov
or
jl
mov
cmpsl
mov
and
dec
xor
jb
cwtl
call
popa
pop
repz
cli
inc
bound
pop
xchg
xchg
es
pop
popf
mov
je
fsts
mov
lcall
cs
dec
push
push
movsb
repnz
pop
mov
jecxz
out
pop
jge
cwtl
enter
test
lret
sbb
cmp
add
jecxz
fdivr
addr16
push
dec
xchg
sysenter
mov
in
and
pop
sub
push
cmc
pusha
mov
adcb
icebp
out
pop
scas
iret
push
mov
cmp
testb
addr16
xchg
dec
daa
adc
add
add
repnz
cmp
rorl
mov
sbb
cmp
xchg
inc
pop
xor
sarb
jne
subl
js
aad
jle
cli
add
je
push
xchg
mov
dec
stc
mov
addl
inc
jmp
mov
inc
push
inc
pop
sub
adc
out
pop
aad
mov
movsl
inc
out
xchg
movsb
repnz
sbb
inc
inc
nop
pushf
cmp
cmp
mov
mov
inc
std
xchg
movsb
lahf
sbb
adc
push
and
dec
stos
jbe
push
enter
jo
sub
idivl
out
inc
mov
fimull
mov
fistl
xor
pop
jecxz
aam
int3
int3
lds
arpl
and
xchg
lcall
sub
fidivrs
pop
repnz
dec
fstpt
mov
jb
imull
inc
stos
sti
and
clc
rcrb
aaa
pushf
add
adc
push
xchg
aad
imul
jns
popa
jle
hlt
pop
je
aad
push
mov
pop
clc
insb
or
movsb
scas
imul
push
and
out
or
call
adc
sub
insb
jecxz
mov
sub
out
int3
aam
pop
in
pop
xchg
mov
std
pop
or
mov
inc
xchg
ss
add
sbb
sbb
ja
es
pop
lods
add
ret
dec
push
add
add
sbb
inc
and
cmp
add
and
out
jbe
movb
mov
out
push
imul
mov
clc
mov
pop
inc
testl
inc
xorl
and
int3
iret
and
cmpsb
stos
xchg
pop
cmpb
xchg
test
push
addr16
sti
lret
stos
idiv
jne
xor
and
js
pushf
pop
negb
jmp
fxch
xchg
sub
sbb
into
cli
inc
ss
sub
jno
cmpsb
movsl
ficoml
addr16
aas
faddp
pop
mov
mov
push
cmpsl
icebp
xchg
stos
clc
sbb
add
sbb
and
inc
push
sbb
jmp
mov
cmp
mov
es
lret
sahf
add
stc
out
add
hlt
stc
out
outsb
loope
add
call
sub
jmp
dec
aad
xchg
cmpsb
pop
cmpsb
adc
xor
into
adc
push
lock
test
cld
imul
jb
mov
mov
mov
cs
mov
push
push
aad
ja
mov
xchg
andb
mov
inc
addr16
lock
es
int
pop
lods
jl
jmp
bound
ret
mov
scas
add
mov
jecxz
xchg
fnstenv
xchg
sub
sbb
dec
push
xor
xor
test
popa
jnp
rol
pop
clc
inc
divb
aas
jg
jne
loopne
popf
dec
iret
mov
test
sub
icebp
inc
xchg
sbb
shl
or
ljmp
rclb
push
add
loopne
in
sbb
gs
cmpsl
in
jge
les
sbb
jnp
into
lret
mov
inc
jge
jecxz
int
pop
xor
imul
mov
cmp
inc
mov
and
scas
mov
adc
in
mov
sti
xor
push
inc
jge
fnstcw
outsb
xchg
or
idiv
jmp
add
icebp
inc
cmovle
ficoml
adc
orl
xor
pop
sub
push
fisttpll
fimull
test
cmp
sub
xor
and
out
add
sub
fldln2
test
cmp
adc
pop
push
or
inc
and
sub
dec
sbb
sbb
pop
mov
scas
inc
lahf
dec
dec
insb
push
ja
fnstenv
ret
dec
and
les
or
mov
hlt
js
sub
xor
sub
stos
pusha
pop
ds
sbb
imul
push
xlat
test
int3
lcall
jne
pushf
in
out
xchg
pop
push
or
stc
adc
jge
push
enter
mull
push
mov
xchg
mov
std
mov
cli
sub
sbbl
mov
xor
jno
cltd
icebp
xor
mov
xchg
repnz
pushf
ss
mov
orb
movsb
mov
jmp
aam
dec
cmp
js
fldenv
xchg
mov
mov
aaa
sub
jl
sahf
arpl
aaa
adc
and
add
andl
dec
sbb
dec
push
push
adc
add
push
clc
dec
mov
fldl
lcall
adc
pop
cmp
lds
sbb
fwait
xchg
lock
cmp
sbb
imul
inc
push
xchg
pop
cmpsb
mov
xor
arpl
or
test
fs
into
inc
ja
fmull
subl
mov
add
out
xchg
fcomps
and
jnp
push
sahf
pop
xchg
sbb
ljmp
cltd
xor
cmc
clc
repnz
cs
test
jbe
jb
mov
mov
js
sub
pop
movsl
out
mov
mov
scas
repnz
into
out
int
mov
push
je
fwait
jns
mov
mov
xor
fs
fisttpl
lret
cmp
push
fsubl
pop
inc
movsl
inc
or
inc
subb
outsb
adc
or
ret
out
push
ret
jne
adc
sahf
sbb
pop
scas
mov
lods
inc
adc
rcll
push
test
fstpl
mov
mov
xchg
ret
dec
jge
add
mov
mov
xor
roll
add
pop
test
in
lcall
sub
xor
pop
pop
push
sbb
out
pop
pusha
test
jge
test
inc
pop
add
mov
pop
repnz
stos
cmp
xchg
test
jns
popf
jge
mov
outsl
jecxz
lods
ret
lock
roll
cmp
push
fsub
pop
adc
ficomps
lahf
push
push
mov
cmp
add
sub
mov
push
lods
sub
dec
sbb
aas
add
mov
jb
jg
js
or
push
loop
outsb
movsb
push
mov
adc
cmp
int3
inc
xchg
dec
subb
sahf
mov
popf
and
dec
xchg
mov
pop
or
jb
loopne
push
das
jno
cmpsb
xchg
inc
movb
les
add
mov
mov
xor
imul
pusha
xchg
dec
xor
lret
lds
push
dec
aam
popa
in
add
pop
pushf
das
pop
test
pop
int
js
push
sub
push
jo
adc
iret
outsl
mov
mov
and
out
andb
test
stos
pop
add
sub
imul
mov
test
scas
sahf
fwait
out
imul
jg
push
in
sub
xor
or
jmp
xchg
cltd
scas
out
rorl
sbb
ja
mov
inc
out
mov
loop
and
sub
iret
cltd
cmpsl
es
or
lcall
dec
mov
adc
sahf
mov
incb
xchg
sbb
jecxz
fdivrp
mov
out
bound
dec
add
jmp
lods
push
mov
mov
ret
mov
and
xor
xor
or
sbb
pop
ja
cmp
leave
repnz
leave
mov
pop
filds
mov
stc
andl
pop
mov
mov
repz
je
sbb
rclb
mov
jno
mov
pop
mov
test
lcall
mov
lea
andb
gs
cmp
out
jae
imul
pop
in
leave
ja
repnz
jne
sbb
cmp
sbb
jmp
adc
mov
push
fadd
push
imul
xchg
cltd
loope
in
mov
mov
bound
lds
arpl
push
cmc
pop
sbb
lods
ja
xchg
loope
mov
mov
jbe
add
dec
daa
xlat
dec
out
and
lea
cltd
cmpsb
adc
insl
lock
mov
mov
pop
dec
dec
cld
xor
jne
fisttps
in
cmpsl
out
sub
sub
pop
xorl
pop
push
cmpsb
jno
outsb
out
popa
xor
xor
mov
cmpsl
and
push
fidivs
pop
lock
jge
enter
inc
dec
jo
std
in
sbb
daa
mov
dec
mov
sbb
add
sbbl
stos
jo
cli
hlt
sub
sbb
adc
sbb
test
xchg
pusha
dec
push
fsubl
jle
repnz
push
bound
dec
dec
fxtract
mov
cs
jb
aam
mov
add
dec
mov
mov
pop
jge
je
cmpsl
xchg
push
pop
sar
imul
popf
sti
jg
outsl
add
lods
outsb
dec
mov
nop
leave
sub
popf
xchg
xchg
mov
in
and
xchg
adc
lea
imul
inc
adc
sbb
outsl
jle
shll
mov
pop
mov
mov
fbstp
push
or
mov
mov
sbbl
call
loopne
scas
pop
jge
out
fcomps
mov
mov
xchg
and
add
mov
clc
cs
insl
fdivl
xchg
mov
or
out
sub
lods
ja
data16
icebp
dec
rcrl
scas
xchg
or
jo
push
cmp
into
sub
inc
cmp
or
repz
andb
rcrb
cmp
mov
addl
ret
fimull
in
call
push
jmp
and
lea
adc
dec
mov
aas
and
add
mov
sbb
xchg
roll
pop
mov
cmpsl
push
sti
dec
mov
dec
xlat
inc
mov
inc
push
add
add
fsub
xchg
and
mov
cmpl
and
cmp
jno
xlat
pop
dec
add
jp
or
dec
inc
scas
aad
lea
int
pop
inc
xchg
sub
fcoml
shrb
sub
mov
mov
jbe
push
outsb
je
mov
jp
inc
loope
out
push
fs
int3
pop
mov
les
leave
loopne
jbe
push
ret
sti
jle
insb
and
jo
mov
in
push
jo
mov
inc
cld
dec
in
lods
or
loopne
cmp
or
mov
outsl
ret
and
or
stc
jne
inc
clc
mov
pop
xchg
inc
sub
fwait
js
push
xor
lods
mov
test
and
xchg
mov
hlt
sbbl
xchg
aam
rcrl
jbe
outsl
cmp
jg
fsub
jns,pn
in
sar
push
fs
sub
jp
mov
and
fcomps
cmpsb
jne
inc
mov
sti
in
inc
cmp
mov
inc
inc
les
outsl
inc
mov
out
rcr
xor
push
mov
pop
sbb
push
mov
mov
int3
insb
dec
sbb
cmpsl
jge
xchg
sub
aad
shrb
fsubrl
or
loop
fldl
movsb
fisubrs
lods
xchg
les
inc
adc
test
insb
fcmove
nop
out
scas
cmpsl
adc
adc
jno
add
jp
push
fwait
mov
andl
xchg
stc
in
stos
and
add
call
mov
add
sbb
into
or
push
mov
xor
jb
jmp
mov
cwtl
inc
js
imul
imul
icebp
test
ret
icebp
pop
mov
outsl
mull
sub
lret
movsb
roll
push
sub
push
push
xor
push
in
in
mov
sub
add
inc
shrb
xchg
lock
sub
jmp
xor
aam
ldmxcsr
fnstsw
stos
int
lock
or
and
rcrl
ret
mov
in
cmp
rorb
xchg
jbe
jo
daa
aam
jmp
jne,pt
loopne
mov
jne
imul
cmp
mov
xor
adc
into
sub
rcll
in
mov
repnz
sarb
scas
inc
mov
cmp
call
dec
aad
es
sub
mov
loop
jecxz
mov
inc
lds
sub
ss
xchg
mov
xchg
push
leave
sbb
ret
nop
popa
notl
aad
push
cmp
enter
test
xchg
xor
push
pop
loop
jo
and
sbb
sub
dec
jbe
and
sub
daa
xor
jo
sub
test
xchg
flds
movsl
rclb
dec
mov
es
sbb
test
mov
mov
push
cmpsb
push
sub
mov
xchg
xchg
inc
add
pop
outsb
adc
jb
movsl
stos
cmp
roll
mov
pop
pop
xchg
rcrl
pop
pop
cmp
popf
lcall
mov
mov
cmpl
mov
test
les
mul
fdivr
push
loopne
xchg
lods
fistpl
sbb
push
lret
sub
lahf
xchg
push
add
sbb
sbbb
loope
sbb
adc
push
in
mov
into
jo
lods
fcmovu
mov
fwait
pop
mov
jmp
movsl
bound
xor
add
push
pop
sti
adc
sahf
sahf
mov
aad
mov
xor
mov
dec
push
fimull
adc
jecxz
enter
lods
mov
add
lds
iret
js
andb
out
es
nop
sub
mov
pop
xor
fimuls
les
sub
push
adcb
inc
mov
pop
cmp
les
loope
and
mov
stos
mov
push
fisubrl
sti
dec
push
stos
jbe
loop
dec
and
incb
mov
sub
add
push
ja
and
stos
in
cwtl
fs
mov
add
leave
cs
dec
push
int3
lods
push
and
dec
inc
cmpb
or
rcrb
rol
lds
jp
mov
ja
dec
pop
jo
jle
push
push
pop
test
jnp
jmp
mov
cmp
dec
aas
mov
fstl
into
nop
adc
pop
or
rcrb
push
push
test
or
push
mov
xlat
out
int3
out
and
frstor
pop
push
sub
in
lea
jecxz
std
out
popf
scas
push
mov
add
push
fnstsw
cltd
push
neg
add
mov
addr16
cmpsl
inc
sub
daa
je
stos
adc
ret
sbb
jns
cmp
mov
fwait
into
lret
jo
push
test
add
mov
push
jg
fs
jae
movsb
or
movsl
hlt
jns
jecxz
mov
inc
sub
out
push
add
pop
into
mov
pop
mov
dec
insb
out
cmp
adc
lock
inc
mov
mov
fmull
xlat
xchg
xchg
cmp
scas
leave
and
stc
mov
test
mov
mov
mov
and
ds
sbbb
mov
fldt
lahf
pop
push
mov
pushf
jg
cltd
out
pop
mov
adc
cmp
addr16
push
adc
fwait
lock
mov
stos
addl
insb
and
jno
inc
or
int3
popa
lret
addb
pushf
mov
xchg
mov
sbb
loopne
xor
gs
or
pop
mov
or
sbb
or
inc
jp
call
int3
adc
insl
and
cmp
sahf
mov
pop
sarl
out
pandn
jno
sbbb
jno
jns
fs
mov
iret
arpl
ficoml
jle
cmp
jge
push
iret
mov
sub
pop
fwait
stos
aaa
add
sbb
sbb
inc
or
push
lea
icebp
mov
sub
sti
or
mov
pop
addb
xchg
in
add
jns
cltd
or
pop
lret
and
and
sub
pop
mov
jnp
xor
adc
cwtl
mov
es
xchg
push
repz
adc
sbbb
scas
add
lea
inc
xchg
pop
in
enter
pusha
inc
or
jb
gs
scas
sbb
call
lahf
mov
call
adc
sbb
jne
cmp
sbb
xchg
dec
cmpsl
or
xchg
dec
test
fwait
and
insl
int3
repz
mov
lods
xchg
jbe
sub
popa
xchg
fs
xchg
loopne
cmp
add
sub
adc
aaa
push
push
xorb
in
outsb
jnp
jnp
enter
xchg
jo
movsb
pushf
adc
clc
jne
or
push
xor
dec
lcall
xor
ret
add
ja
inc
cmpsb
int3
hlt
jae
sub
xchg
xor
scas
cmp
mov
pop
movsl
push
pop
or
mov
dec
mov
fldt
dec
shrl
imul
pop
lods
push
ss
ds
rclb
inc
jecxz
pusha
mov
push
lds
xor
push
insb
jge
jo
add
outsl
cwtl
sti
or
mov
cmpsl
dec
pop
clc
push
out
pop
sti
inc
dec
outsb
daa
rcrl
sbb
pop
adcl
pop
dec
lea
dec
pop
arpl
je
add
xchg
icebp
lods
cmp
adc
daa
push
rcll
scas
pop
mov
ret
adcb
frstor
insb
cmp
call
xor
ja
and
add
and
aas
xor
push
lock
iret
pushf
out
pop
bound
adc
add
sbb
loop
test
out
pop
jae
sbb
add
fbld
dec
mov
js
lods
push
push
in
mov
mov
xchg
ss
pop
fimuls
mov
addl
sarb
xor
nop
push
and
and
sub
sbb
repz
jg
lea
in
cmpsl
int
mov
iret
jo
std
fsubrl
pop
aaa
add
daa
fmulp
fsts
daa
incl
push
jmp
xchg
mov
inc
xchg
clc
and
push
loop
imul
xchg
lea
and
xor
inc
pop
push
xlat
hlt
repnz
stos
and
adc
jbe
sbb
sbb
mov
jmp
dec
int
movsl
cmp
clc
clc
les
dec
or
cmp
push
push
mov
repz
cmp
mov
stos
pushf
ficoms
or
xchg
arpl
fbld
stos
adc
in
insl
xor
imul
andl
cmp
pop
inc
call
std
push
or
sbb
sahf
test
add
imul
scas
js
shl
xchg
add
mov
or
arpl
andl
xchg
jg
fisttpl
addr16
or
sbb
xchg
or
je
push
push
mov
xor
out
rolb
mov
popf
or
sti
cmp
xor
add
fidivrs
jecxz
inc
clc
push
xchg
xchg
sbb
outsl
xchg
fstpl
xchg
mov
mov
setb
jmp
movsl
lods
push
sub
dec
xchg
lods
dec
ret
sbb
push
mov
in
or
loopne
sbb
sbb
cmpsb
dec
rcll
pop
rol
pop
js
arpl
push
pop
and
stos
mov
js
cs
jnp
fstl
or
lret
int3
push
faddp
mov
cltd
mov
pop
lds
test
xchg
mov
popa
xor
std
in
or
adcb
les
push
cld
daa
xor
das
jmp
and
mov
xchg
enter
mov
fimull
jno
fistl
xchg
aam
bound
leave
loop
push
lahf
pop
push
inc
scas
xor
cmp
into
xlat
xchg
xor
adcb
jmp
shl
jle
push
lcall
aad
jp
mov
movsl
cmp
adc
in
jge
jl
dec
insb
xor
cmp
dec
add
mov
inc
nop
fists
mov
mov
dec
test
fbld
mov
enter
xchg
or
mov
idivb
push
add
xchg
jge
popa
repz
mov
push
mov
mov
fxch
and
les
popa
out
iret
aad
inc
xor
push
movsl
sbb
inc
imul
mov
mov
add
jae
inc
cmpsb
push
xchg
pushf
cmp
cmc
add
call
js
mov
pop
fldl
outsl
loopne
repz
or
pop
loopne
test
inc
in
mov
addr16
call
cltd
push
push
pop
inc
jp
mov
cs
sub
loopne
fs
or
mov
sub
nop
fisttpll
mov
inc
xchg
cwtl
je
mov
mov
jno
or
mov
mov
int
xchg
cli
cld
xchg
mov
and
inc
jne
xlat
push
inc
pop
pop
dec
push
and
xor
push
es
jle
pushf
cmp
pop
stos
mov
andnps
adc
mov
or
dec
and
in
popa
in
movsl
test
mov
sub
dec
jo
rolb
stos
push
and
sub
les
ja
jg
outsl
cmpsb
jle
imul
adc
idivb
insl
es
mov
sub
jmp
clc
call
inc
cmp
sub
xchg
stos
jo
movsl
stos
icebp
movsl
dec
fcoml
ds
in
mov
imul
adc
sbb
or
mov
mov
mov
lea
jb
sub
stos
jno
mov
inc
push
leave
mov
cli
xor
mov
jge
adc
enter
fs
xchg
sbb
call
cs
adcb
fsub
sub
lods
push
fistpl
inc
mov
lret
aas
push
pop
popa
jmp
imul
stc
dec
into
daa
popa
inc
pop
xor
jl
adc
cld
or
lock
clc
push
mov
push
mov
add
cmp
sbb
sub
mov
loop
mov
cmp
aam
fs
lock
lods
jbe
jnp
jo
mov
sub
addr16
jmp
pop
into
not
movsb
movb
mov
jmp
mov
mov
cmp
cs
mov
int
or
cmp
cmp
out
and
fimull
hlt
mov
les
stc
arpl
out
xlat
mov
outsb
and
jae
fmull
ja
mov
inc
mov
add
sbb
xor
enter
adc
nop
sbb
mov
cmp
icebp
out
aam
popf
inc
mov
inc
jb
sbbb
jl
mov
push
cmp
adc
xchg
pop
or
sub
in
inc
xchg
in
aas
ffree
cmpsl
popa
pop
pop
adcl
mov
push
mov
lret
xchg
mov
daa
rorl
cs
inc
in
xchg
xor
pusha
dec
fldcw
adc
aad
repnz
pop
cli
lret
lods
cmp
dec
dec
jmp
pop
push
xchg
jmp
add
or
hlt
inc
xchg
mov
in
es
imul
add
stos
scas
sbb
addb
icebp
enter
mov
test
dec
imul
jae
dec
fidivl
repnz
and
pop
jmp
adc
push
add
shl
xor
lds
adc
inc
testb
xchg
test
mov
stos
pop
dec
mov
sbb
rcrl
adc
leave
or
adc
sarl
aam
mov
lret
jo
test
fnsave
sbb
jns
or
fs
es
jne
pusha
and
xchg
fisubrl
mov
stos
sub
inc
jp
xor
sub
insb
lahf
jne
xchg
fs
dec
jno
pop
jecxz
xor
pop
xchg
push
mov
inc
fcmovbe
dec
mov
xor
cmp
popa
dec
push
inc
mov
mov
pusha
shll
test
repnz
lret
test
sbb
lret
sti
cmp
cmpsb
jl
sbb
sbb
cmpsb
mov
lds
insl
or
in
icebp
cmpsl
pop
in
pop
aad
cmp
in
sarl
das
add
pop
pop
idiv
lret
and
jno
insb
icebp
mov
inc
jge
adc
test
ss
mov
insb
data16
add
aad
loope
int
ss
inc
cmp
mov
out
push
pop
pusha
test
xor
nop
dec
ret
jl
gs
test
sbb
imul
mov
adc
jne
push
arpl
xor
in
xchg
push
or
mov
adc
jno
push
dec
inc
jb
mov
mov
rorb
enter
mov
inc
aad
cltd
insl
sub
test
pusha
sti
jmp
xchg
push
mov
inc
ds
cld
roll
iret
jnp
xchg
in
in
arpl
sbb
icebp
pop
daa
and
or
push
mov
int3
push
pop
mov
fsub
or
rcrb
out
and
js
mov
inc
xchg
rcrl
mov
popl
xchg
pushf
fcoms
enter
mov
add
fwait
lret
leave
inc
lret
sbb
fistpl
add
fsubr
or
xor
push
pop
adc
rcl
movsl
sub
xor
andl
daa
fstpl
outsl
xlat
and
pushf
jmp
xchg
nop
mov
cmpsl
std
add
and
mov
aaa
rol
ds
fisubrs
xor
cmp
in
iret
mov
jg
loope
push
mov
cmp
mov
mov
repz
outsb
divb
xor
sbb
mov
lahf
movsl
sbb
sub
mull
imul
xchg
repnz
scas
pop
jmp
mov
and
push
push
push
adc
out
int
adc
idivl
mov
cmpsl
and
arpl
xchg
mull
jb
aad
push
out
out
and
mov
je
mov
jmp
mov
or
jl
sbb
dec
push
push
movsb
out
add
sub
insb
cmc
jecxz
and
jl
sbb
loope
idivb
push
mov
ficoml
mov
loop
jae
outsl
and
mov
inc
mov
aaa
and
popf
mov
gs
hlt
sti
cmp
and
pusha
inc
addr16
nop
repnz
mov
ja
fsubr
es
int
pop
insl
pop
inc
cmp
pushf
or
pop
leave
adc
mov
sbb
add
sahf
xor
loopne
arpl
orb
mov
jne
test
fstp
mov
dec
loop
xor
and
stc
or
test
push
fs
mov
xchg
pop
aad
scas
or
push
enter
sbb
icebp
jb
xchg
in
xor
and
std
pop
add
paddb
lods
mov
popa
stos
std
fdivrl
cltd
fistpl
and
testb
inc
rcrb
inc
mov
int3
bound
push
adc
adc
mov
fs
sub
xchg
or
in
popf
dec
stc
aam
aaa
mov
cmp
jge
popf
popf
jno
out
nop
dec
cmp
pop
xchg
pushw
aas
xchg
orb
fnstsw
loop
pop
ret
add
sbb
add
or
inc
stc
cmp
hlt
dec
lods
mov
xor
cwtl
jae
cmp
mov
adc
sub
adc
out
xchg
rcl
rcr
into
arpl
es
cmpsl
push
xchg
repnz
js
lret
mov
repz
push
xchg
mov
insb
mov
bound
sbb
mov
sti
xchg
xchg
mov
rorb
outsl
fsubrs
fnstsw
jb
fwait
push
add
movsl
cmp
adc
in
aaa
mov
sbb
adc
roll
test
scas
mov
cmpsb
in
inc
sub
std
xor
adc
cmpsb
inc
inc
xlat
aad
ss
repz
jnp,pn
jmp
fstpt
movsl
cmp
adc
fucomip
pop
int
imul
mov
jns
xchg
arpl
sub
faddl
clc
sbb
xchg
enter
adc
jle
pop
loope
xchg
ret
cld
cmp
push
or
push
out
cltd
sub
jns
jg
mov
pop
jge
mov
repz
daa
pop
test
inc
mov
fnstenv
fiaddl
sahf
or
divl
les
mov
ficomps
dec
adc
jecxz
addb
lret
ja
xor
inc
xor
popa
fs
repnz
mov
notl
inc
sub
jns
or
int
scas
fs
ja
insl
rclb
dec
cmc
fcoms
out
mov
pop
mov
shlb
push
mov
dec
mov
bound
mov
into
loope
or
dec
das
push
fs
lahf
addr16
shrl
inc
add
cmp
hlt
mov
lahf
inc
sub
outsb
push
leave
lods
mov
pop
repnz
mov
mov
and
out
mov
xchg
cmp
insb
in
adc
xor
es
cmp
test
das
fbld
shrl
popf
leave
and
mov
cmp
adc
mov
aad
lret
jne
scas
sbb
popa
pushf
sarb
sar
sbb
fstps
pop
aam
mov
int
mov
jno
adc
xchg
jbe
lcall
inc
mov
je
mov
orl
sbb
in
mov
fidivs
cmp
add
fnstsw
push
dec
pop
leave
and
and
xchg
stc
mov
jb
mov
fisubs
out
add
lea
dec
dec
mov
push
adc
ror
jae
sbb
add
test
pusha
les
fsubs
lods
imul
cltd
ffreep
mov
shrd
xchg
mov
push
adc
cs
push
fdivrp
cld
sub
subb
icebp
mov
push
sbb
jl
pop
pop
jle
push
sub
sbb
mov
sub
adc
fildl
sub
add
repz
lds
imul
lret
jo
sbb
mov
scas
rep
and
lret
adc
std
pop
mov
out
inc
int
xchg
dec
xor
jb
lea
mov
mov
jbe
jge
sbb
sbb
hlt
aad
iret
push
and
shll
push
cld
mov
xor
mov
aas
sahf
adc
pop
sti
movsb
jnp
stos
jmp
pause
or
out
mov
ret
les
pop
inc
daa
arpl
les
xor
inc
lret
adc
xor
movsl
xorl
jno
mov
insl
jg
stc
cltd
jbe
sahf
fistps
rolb
scas
arpl
dec
out
xchg
dec
jno
orb
mov
into
mov
popa
aaa
cmpsl
and
addr16
xor
pop
jne
cmp
lock
inc
mov
shll
les
and
loop
sar
mov
add
push
mov
mov
cs
into
inc
stc
inc
sub
or
jg
imul
xchg
das
sbb
push
enter
mov
push
leave
pop
inc
push
cmp
and
dec
sbbb
loope
mov
les
lret
dec
lahf
xor
ret
and
push
fmuls
sub
inc
mov
cld
and
xor
ret
aaa
loop
test
outsl
add
push
outsl
pop
add
and
xor
mov
loope
push
loop
loop
roll
adc
stc
pop
xchg
pusha
mov
mov
outsl
ljmp
popa
clc
cmpsl
mov
mov
xlat
jecxz
mov
pop
mov
xor
data16
mov
mov
test
imul
xchg
out
cmp
aaa
sub
arpl
mov
rclb
or
ja
jns
xchg
out
pop
push
aad
das
bound
cmp
and
bound
dec
jecxz
cmpsl
cltd
add
enter
inc
test
stos
mov
or
xor
xchg
inc
xchg
rorl
lret
sbb
jns
cmp
pop
pop
pop
adc
dec
es
daa
popf
push
xchg
popa
dec
aaa
lahf
out
sbb
cmp
fimull
ret
out
lcall
mov
mov
push
mov
pop
pop
lret
xor
sti
outsl
mulb
pop
shlb
cwtl
into
add
mov
mov
mov
mov
fsubrs
sti
gs
lcall
mov
push
lods
sbb
xor
arpl
push
int3
mov
out
subb
movntq
push
icebp
dec
aaa
idiv
sbb
mov
or
icebp
jae
dec
xor
and
push
enter
jmp
push
pop
es
test
shrb
gs
pop
adc
and
call
aas
es
sub
and
out
out
out
mov
inc
add
push
cmpsl
jae
mov
test
mov
xchg
mov
test
pop
jne
jns
mov
mov
inc
sbb
pop
lahf
mov
sbb
cmc
xor
in
js
and
xchg
lret
pop
js
fisubs
mov
aad
sub
scas
mov
mov
sub
into
testb
adc
jecxz,pn
mov
pusha
stc
sub
mov
outsb
push
pop
lahf
jns
mov
jne
adcl
xor
xchg
dec
push
add
aad
je
mov
pop
xchg
xlat
cmpsl
mov
sub
call
inc
enter
dec
cmp
ds
xchg
push
test
mov
hlt
hlt
loopne
in
mov
pop
mov
dec
cmp
inc
aam
or
mov
add
scas
jmp
in
mov
inc
jl
arpl
fdivs
dec
push
fists
push
mov
fstpl
rcr
sub
add
nop
pop
jae
sbbl
push
pop
mov
jbe
mov
jnp
jbe
push
in
in
push
lock
xor
iret
int
repnz
cmp
cwtl
stos
ja
pushl
gs
sub
and
mov
xor
xchg
cmpsb
sub
add
xor
in
cwtl
pop
mov
mov
xchg
ds
lock
pop
lea
rcl
sub
enter
or
insl
cmpsl
dec
ljmp
popa
insb
dec
pop
fldt
lock
push
cltd
xchg
pop
inc
mov
or
xchg
sar
popl
jns
inc
popa
and
mov
pop
aad
cltd
out
mov
add
pop
sahf
pop
push
mov
dec
jno
aad
sbb
mov
out
mov
iret
rcpps
add
mov
dec
sti
sub
mov
movsb
xor
andl
mov
lsl
push
mov
push
jne
lret
pop
call
adc
popf
out
or
aaa
popf
pop
pop
adc
cmp
mov
xor
mov
dec
fwait
push
jne
mov
sub
aam
mov
insl
pop
jo
xor
and
out
jecxz
and
pop
aad
imul
sbb
test
add
jnp
pop
push
lcall
or
fsubs
fwait
in
mov
fdivr
sub
sarb
test
cmp
cltd
inc
ss
jp
outsb
jmp
je
iret
aam
cltd
insb
mov
push
push
inc
jo
mov
or
sahf
mov
cmpsb
gs
lea
cld
movsb
mov
js
repz
pop
into
dec
dec
and
cli
jnp
mov
hlt
js
push
pushf
pop
sarl
pop
mov
mov
pusha
lret
pop
movsl
mov
cmp
ss
dec
hlt
jo
add
call
stc
je
ljmp
push
rcr
pushf
loopne
add
test
or
je,pn
testb
inc
add
scas
push
push
xorb
or
imul
adc
mov
addr16
mov
out
sbb
dec
ror
pusha
add
iret
das
call
mov
int
lcall
popf
adc
lock
xchg
mov
rorl
movsb
rcrl
sbb
testl
mov
mov
add
in
push
sub
imul
cmp
xor
not
push
in
and
push
leave
stos
cmpsl
iret
cmpsl
adc
or
mov
negb
sahf
adc
loop
adc
out
imul
in
xchg
and
xchg
xor
lods
mov
bound
dec
out
xor
cmp
cmc
jle
stos
insl
xor
mov
scas
aaa
mov
pop
inc
dec
fmull
adc
imul
dec
leave
inc
enter
scas
rorl
mov
xorb
inc
xor
fisubrl
jl
outsb
fldl
insl
popa
sbb
or
inc
iret
push
xchg
mov
push
rol
mov
adc
icebp
test
loop
adc
pop
outsl
movsb
sbbb
rorl
outsb
ficoms
cmpsl
mov
imul
push
jmp
pop
or
sub
xor
cmpl
and
rcrl
or
loop
test
int3
or
stc
pop
sbb
push
jle
cmp
sbb
les
inc
push
popf
cmpb
pop
lods
dec
pop
xor
pop
mov
aam
sub
or
xchg
ret
sub
bound
mov
in
arpl
push
daa
cmpsb
mov
push
jle
lret
cmp
and
aaa
fs
pusha
sti
adc
push
or
adc
outsl
je
dec
rorb
lcall
inc
push
push
cmp
push
and
and
int3
out
cmp
fwait
sub
adc
xchg
hlt
xor
push
scas
push
cli
mov
mov
mov
pop
and
mov
mov
or
fs
xchg
in
sub
mov
sarb
vorps
enter
nop
aas
or
inc
insb
bound
repz
or
xchg
jle
mov
adc
push
mov
mov
cwtl
mov
mov
mov
pushf
dec
xor
mov
xlat
ljmp
add
sarb
jb
xchg
mov
add
pop
rcll
data16
popf
loopne
push
mov
lods
pop
pusha
outsl
lock
imul
out
xor
fiadds
and
or
orl
xchg
js
and
jne
stos
sbb
pop
aas
push
jl
loope
int3
dec
xor
pop
fistl
push
in
dec
and
test
fisubrs
and
sbb
sahf
lret
fisttps
dec
repnz
outsb
ss
sbb
cltd
enter
mov
push
int3
and
fcompl
outsb
cmpsb
je
popf
int
shrb
pop
clc
cmp
and
jno
test
ret
ror
sub
cmp
loopne
ss
imul
push
sbb
jno
pushf
pop
je
dec
lret
jp
popf
out
fnstcw
mov
push
jns
sbb
fisttps
mov
mov
add
mov
jno
sbb
add
cmp
dec
sbb
rcr
xor
or
jp
aaa
cltd
xor
xchg
mov
aad
pop
gs
xor
fstps
push
pusha
pusha
shrb
das
scas
cmp
xor
inc
ds
mov
das
iret
pop
fsubrs
stos
or
outsb
dec
rcll
dec
jl
sahf
les
push
or
sub
xchg
repnz
dec
int
repnz
ja
mov
sub
or
incl
xchg
jge
add
nop
outsl
mov
cwtl
fimuls
xor
repnz
sub
and
push
cld
je
mov
cmpsl
or
insb
or
xor
push
int
roll
mov
fdivl
stc
mov
mov
rcll
mov
ret
inc
jl
shlb
orl
pushf
sub
push
aas
les
push
faddp
lret
or
xchg
mov
mov
or
sbb
leave
leave
mov
movsl
insl
mulb
mov
jmp
xor
adc
pop
stos
sbb
inc
xchg
mov
scas
mov
cmp
jmp
pop
imul
mov
sub
sub
cmp
fnsave
bound
push
or
mov
sahf
jecxz
sub
pop
lds
leave
add
leave
out
stc
out
insl
into
stos
pop
inc
pop
lret
divb
xlat
shll
and
or
cmpsb
loopne
mov
push
dec
mov
add
movsl
addb
test
add
les
arpl
lds
repnz
ucomiss
pushf
std
scas
xchg
mov
inc
outsb
or
das
ret
out
jb
jne
pop
insb
ret
xor
outsl
dec
cli
ja
dec
stc
mov
pop
imul
or
xchg
imull
push
mov
sub
jle
mov
dec
lahf
or
lcall
lods
push
out
mov
sub
jmp
pop
into
cltd
dec
jo
xchg
mov
imul
andb
sbb
xchg
jbe
mov
lea
sbb
pop
and
mov
inc
es
ss
pop
sarl
mov
lods
lcall
jns
lret
pop
or
mov
mov
out
stos
loopne
push
fdivs
mov
cmp
pop
mov
jne
scas
iret
lcall
cmp
push
dec
pusha
fcomps
xor
mov
mov
mov
sub
lods
fisubrl
dec
mov
mov
push
dec
xchg
movsb
push
add
mov
fsub
fwait
push
dec
mov
enter
and
sub
mov
lods
jle
nop
data16
xchg
aam
cmp
loope
fmuls
push
add
mov
sbb
mov
pusha
inc
repnz
inc
dec
add
mov
insl
icebp
jbe
bound
int
leave
cltd
je
or
sub
cli
dec
ljmp
adc
adc
cmp
add
insb
mov
fsubrp
lods
cmp
jae
jb
scas
divb
jp
sahf
adc
xchg
cltd
mov
insl
in
mov
gs
sarl
outsb
jle
push
mov
scas
andl
int
fcompl
orl
jge
push
push
sub
outsl
stc
push
xchg
jp
inc
xchg
and
or
sub
scas
add
xchg
sbb
iret
in
mov
out
imul
mov
lret
into
add
mov
aaa
in
mov
mov
lret
xor
call
lret
out
and
ficoms
mov
test
push
xchg
or
je
outsl
and
leave
fldt
adcw
and
lret
inc
insl
cmc
ljmp
idivl
mov
add
sti
push
adc
out
into
or
fimull
jmp
jnp
jb
push
daa
cli
jp
test
scas
rcr
xchg
or
aas
mov
pop
test
sub
outsb
repnz
push
lahf
jbe
popf
pop
mov
xor
or
add
xlat
mov
gs
inc
rorb
xchg
mov
mov
lret
jbe
cmpsl
pop
adc
and
repnz
or
and
nop
ror
pop
lcall
sbb
jb
mov
inc
mov
or
into
fwait
or
mov
in
rol
jmp
mov
xchg
repnz
cmp
mov
iret
hlt
pop
fisttpll
mov
jno
sub
lods
sahf
lret
pop
adc
lret
outsb
jecxz
aaa
std
push
shlb
mov
xlat
mov
push
stos
and
add
sbb
leave
arpl
push
ss
js
push
daa
leave
repnz
int3
or
negb
and
orl
pusha
cmp
scas
fstpt
mov
sbb
addl
jne
int
nop
pop
pop
and
jecxz
cmp
imul
add
ret
mov
jns
xchg
out
std
popf
sbb
aas
inc
mov
mov
dec
xchg
cmpsb
pop
push
loope
sbb
pop
inc
mov
xor
movsl
push
sub
add
push
insb
sub
daa
add
xor
xchg
xor
out
int3
dec
daa
das
bswap
and
mov
jo
adc
cmp
ficoml
enter
data16
shrb
mov
add
fidivrl
jb
adc
mov
cmp
shlb
adc
movsb
repz
push
int3
mov
aas
fiaddl
push
clc
xor
sbb
mov
push
mov
mov
add
xchg
jnp
arpl
fs
push
leave
cmpsl
fdivrl
inc
ret
psrad
mov
add
iret
insb
fadds
call
das
pop
mov
dec
pop
xchg
fwait
sbb
or
adc
push
mov
push
and
xorl
loope
lcall
lcall
test
std
pop
aaa
dec
mov
imul
pop
xor
fsubr
sahf
push
popa
bound
mov
jmp
adc
das
clc
jns
sti
shrl
inc
cmp
sub
pop
lods
cmp
ja
imul
or
inc
movsl
in
adc
adc
cmp
xchg
inc
movsb
fistl
or
popa
jmp
stos
mov
fstpt
xlat
mov
stos
scas
add
mov
sub
jbe
sub
pop
fstpl
aam
push
aas
pushf
and
mov
sbb
add
cmpl
sbbl
inc
xor
mov
lods
mov
jmp
test
jp
or
div
stos
mov
jo
and
mov
orb
push
scas
test
sub
movsb
arpl
or
stc
mov
lods
jge
loop
lahf
dec
jecxz
ljmp
mov
pop
dec
pop
adc
lock
in
and
or
jbe
in
sarl
lods
xchg
mov
jns
mov
jmp
mov
push
mov
stos
cld
fdivl
mov
xor
call
xlat
dec
in
mov
xorb
clc
or
sarl
add
cwtl
or
adc
stos
adcb
pop
mulb
and
fucomp
xor
ds
or
mov
and
fdivrs
data16
mov
out
repz
insb
push
pushf
fistpl
rcrb
dec
pop
lret
imul
and
sbb
dec
lods
cmp
xor
pop
scas
xor
push
jbe
call
in
inc
fdivr
adc
bound
lock
mov
sub
out
sbb
shll
and
or
hlt
mov
sbb
push
repnz
jmp
push
push
mov
pushf
enter
mov
xor
push
fdivl
stos
jb
cmpsl
inc
sub
fisttps
aam
xchg
xlat
ds
jns
out
or
push
or
decb
jae
push
sbb
lahf
scas
add
pop
sbb
adc
xor
push
jo
outsb
pop
inc
adc
inc
jecxz
mov
mov
xchg
out
mov
or
cli
add
lahf
mov
out
dec
mov
int3
push
ss
bound
loop
loopne
dec
mov
fwait
adc
scas
stos
inc
pop
sub
mov
sbb
push
jb
mov
xchg
mov
jo
pop
mov
mov
movsb
iret
pushl
rcll
hlt
insb
in
enter
loopne
cmp
dec
sub
push
insb
ret
dec
pushl
stos
mov
mov
rorb
adc
outsl
in
stc
int
lock
xor
mov
test
cld
insl
out
nop
adc
sub
inc
outsl
repnz
adc
xor
rcll
jecxz
gs
push
mov
mov
or
pop
mov
ja
dec
pop
jg
loope
sbb
adcl
cwtl
jnp
jp
fdivl
gs
fsubr
decl
or
mov
mov
aaa
dec
push
mov
inc
sbb
inc
rcr
add
scas
sahf
mov
cwtl
cmp
pop
nop
mov
cltd
and
dec
shl
push
cltd
add
add
subb
mov
add
or
roll
sub
cmp
xchg
inc
and
xor
out
sub
or
aad
xor
arpl
cs
adcl
or
rcll
ljmp
xor
jno
movsl
add
push
cmpsb
es
outsl
cmpl
lods
jne
or
jge
movntps
dec
frstor
xchg
and
mov
or
dec
pop
pop
nop
and
mov
mov
scas
icebp
test
inc
xor
mov
cltd
out
fucomp
cli
sbb
shr
inc
or
and
in
adc
aas
nop
aas
je
lock
sahf
cmp
mov
pcmpgtb
fdivl
adc
call
and
mov
in
into
test
ss
xor
and
sbb
jl
or
imul
fisubl
call
lods
adc
out
and
pop
inc
cmp
dec
mov
fnstcw
mov
xchg
movsb
jecxz
cmp
mov
inc
pop
xor
push
stos
inc
fldenv
xchg
sbb
sahf
jl
lock
aam
repz
xor
pop
sub
imul
icebp
add
cmpsl
cmp
mov
iret
popa
mov
sbbb
test
shr
ror
or
mov
xchg
sub
pop
out
dec
sahf
adc
arpl
mov
test
test
sub
dec
movsl
imul
sub
push
movsb
push
mov
jns
and
leave
dec
paddsw
jge
loop,pn
bound
lcall
mov
mov
sub
aaa
xchg
lods
ja
cmpsb
xchg
aad
loope
dec
or
pop
in
add
sbb
sahf
lds
cmp
adc
addr16
add
dec
fwait
adc
movsb
mov
lcall
aad
add
pop
sbbb
mov
dec
shrb
lods
int
fs
loop
pop
pushf
and
shll
or
xor
jne
cs
mov
mov
dec
adc
out
scas
lea
das
clc
push
xchg
in
cmp
inc
sub
repz
bound
mov
enter
stos
leave
fcoml
or
adc
or
add
or
dec
outsb
pop
jae
inc
lret
notb
inc
pop
add
sbb
test
js
inc
shrl
fst
lret
lret
out
or
lea
sub
dec
in
test
test
mov
add
and
imul
push
aaa
push
cmpsb
jge
jae
xlat
xchg
fldl2t
outsb
mov
ja
sbbb
dec
pusha
push
mov
xchg
scas
push
mov
jbe
fsub
out
stos
adc
pusha
dec
aaa
test
pushw
push
mov
sahf
mov
popf
jmp
out
imul
push
inc
cltd
pusha
lea
xchg
test
bound
mov
jno
push
cmp
adc
scas
lahf
mov
and
repz
jmp
shlb
mov
cwtl
je
cltd
mov
lahf
mov
mov
adc
insl
lahf
daa
addr16
loopne
xchg
dec
mov
jbe
daa
xor
xor
addb
pop
mov
lahf
push
pop
lret
inc
pop
xor
sub
shrl
push
cld
vpsubusb
out
pushf
cmpl
mov
mov
cmpsb
mov
js
addl
mov
cli
cmpsb
xchg
sarl
aad
sub
mov
xchg
sub
xor
cmp
pop
dec
test
mov
mov
mov
lods
fs
push
stc
mov
sahf
push
fnsetpm(287
add
ret
test
jle
push
ss
pop
ds
sbb
push
test
cmp
lea
aas
mov
mov
jecxz
inc
xorb
mov
add
std
sbb
in
dec
cld
cmp
push
addr16
out
loopne
jge
sub
fcomps
repnz
stos
mov
lcall
or
fiadds
sub
sbb
and
stos
sub
sub
sub
mov
push
ja
test
icebp
stos
lahf
add
push
cs
xor
dec
pop
xor
ds
das
mov
adc
ret
cli
mov
and
mov
jl
xor
mov
sbb
push
xor
int3
out
mov
sub
cmp
inc
dec
sti
mov
inc
inc
inc
test
call
mov
leave
pop
imul
rorb
test
mov
and
xchg
mov
inc
jb
push
imul
pop
scas
popf
into
out
jbe
insl
out
push
push
in
test
jg
shrb
dec
aam
ds
clc
mov
insl
scas
fldcw
loopne
lods
mov
cmp
push
cmp
movsb
scas
cld
jb
scas
xchg
lret
popf
mov
icebp
ret
push
jmp
dec
iret
pop
pop
dec
inc
test
xor
idivl
mov
test
orl
out
push
cmp
rcl
scas
pop
filds
lds
mov
jnp
cmp
scas
add
stc
dec
xor
jns
cltd
ljmp
jbe
xchg
pushf
sbb
imul
imul
call
outsb
mov
xchg
jmp
sbb
sbb
sub
in
jg
push
icebp
xchg
lahf
ljmp
xchg
and
sahf
add
addr16
mov
in
add
jge
lods
jg
dec
cmp
push
add
lahf
imul
xorb
xchg
dec
mov
lock
inc
jo
add
push
sbb
add
or
sub
push
xchg
cmp
aaa
out
sub
pop
push
gs
mov
jle
inc
mov
ficompl
outsl
push
ja
mov
imul
nop
mov
dec
mov
sub
cmpsl
xchg
fbld
jge
rcll
das
sahf
jbe
repz
lds
sbb
jle
sub
push
inc
push
sbb
pop
js
jp
cmpsl
sbb
or
cmpsl
cmp
gs
push
cs
mov
push
or
testl
add
push
insb
js
jg
dec
hlt
adc
cmp
xchg
out
pop
sti
push
mov
or
sub
stc
stos
xchg
fsubr
push
push
frstor
scas
mov
jmp
stc
orl
hlt
sub
xor
xor
int3
mov
push
cmpsl
mov
std
out
inc
xorl
push
repz
sbb
rorl
xor
nop
inc
orb
rorl
cmp
inc
mov
cld
loop
sbb
adc
push
mov
subl
std
cmp
mov
ljmp
push
sbbb
repnz
inc
mov
xchg
test
ds
add
and
cld
test
jecxz
stc
push
push
jae
mov
loopne
inc
outsb
and
adc
pop
aas
xor
in
add
add
cmp
xchg
outsl
bound
pop
and
dec
movsl
jno
or
pop
fldl
fildl
cmc
je
sub
addb
cmpsl
mov
pop
mulb
mov
repz
loopne
sbb
cli
sub
lds
rcll
pop
repz
fisubrl
dec
pop
and
mov
pusha
cmp
aad
shrb
lock
push
dec
jmp
repnz
mov
cmc
in
inc
js
inc
cmp
dec
sahf
pop
pop
data16
int3
stc
xchg
les
push
and
fldcw
xchg
pop
push
xchg
loopne
push
dec
push
repz
inc
add
loope
jmp
loope
mov
pop
into
int
mov
push
lods
mov
mov
jae
movsb
mov
mov
dec
insb
fsubr
loopne
in
mov
mov
hlt
cwtl
movsl
xchg
mov
cmp
push
stos
pop
ljmp
out
mov
and
xlat
clc
cmc
cmpsl
rcrl
xor
and
out
aas
fisttps
mulb
popa
dec
in
dec
lahf
sub
jge
mov
jo
orb
or
es
test
cmpb
enter
pop
sbb
or
fisttps
imul
out
dec
push
imul
sahf
lods
inc
cwtl
pop
sub
add
jge
xchg
mov
adc
loop
outsb
sbb
jge
loopne
mov
loop
cmp
mov
push
push
pop
mov
mov
push
pop
sub
ds
into
je
flds
inc
lret
sub
aad
jbe
add
outsl
std
mov
mov
fcomi
add
dec
scas
xchg
test
shlb
jne
push
xor
mov
jbe
inc
cwtl
jge
lcall
pop
pop
repnz
pop
mov
ja
and
or
cmp
push
lret
push
cmpb
jo
cmp
cmp
lahf
mov
lock
insb
xor
sbb
add
add
mov
mov
and
push
inc
popf
xchg
pop
xchg
es
popa
scas
insb
loopne
stos
mov
dec
loopne
dec
cmp
and
dec
addr16
xor
fstl
out
jmp
or
and
push
cwtl
push
pushf
dec
ja
sbb
mov
out
adc
xchg
mov
imul
pushf
xchg
jb
pop
iret
adc
stc
test
add
mov
shl
sarb
sti
cmpsl
mull
mov
and
das
push
fdivrs
orb
stos
adc
aaa
sub
mov
test
imul
adc
test
mov
xor
jmp
cmpsb
adc
call
scas
mov
stos
add
adc
push
inc
negb
ret
inc
pushf
insl
data16
faddl
out
repnz
int3
dec
iret
jb
stc
inc
push
leave
lea
and
lods
rclb
or
sarb
mov
mov
push
int3
mov
dec
es
clc
mov
mov
jle
idivl
dec
add
aad
repnz
movsb
add
pop
push
sub
push
adc
dec
repnz
add
scas
push
enter
les
sti
xor
out
sub
or
mov
and
push
test
addr16
adc
lret
push
aaa
add
adc
xor
add
sbbb
dec
loop
and
lea
pop
mov
stos
add
in
lcall
and
jmp
out
lret
mov
divb
sub
dec
fdivrs
xlat
mov
mov
cwtl
sbb
cld
lods
adc
inc
cmp
xchg
icebp
jge
in
movsl
jo
test
adc
mov
dec
cmp
gs
lods
xchg
xchg
sti
xchg
pop
inc
insb
cmc
inc
jo
ss
int
scas
lahf
add
push
nop
js
push
pop
out
sbb
mov
loop
lods
push
xor
adc
mov
out
xchg
scas
push
sub
sub
mov
cmp
mov
xor
punpcklwd
add
icebp
inc
sbb
je
fstpl
adc
hlt
jge
lahf
and
lds
movsl
ljmp
sbb
push
jnp,pn
lock
and
rcrb
ret
add
push
xchg
mov
stos
mov
pop
imull
sbb
rorb
ret
lret
shlb
cwtl
mov
add
sub
lods
iret
test
ja
mov
mov
dec
aam
ret
popa
or
dec
daa
cli
ret
push
jl
mov
enter
adc
js
mov
mov
call
or
cmp
sub
add
push
int3
mov
mov
into
mov
fs
leave
push
fisttps
xor
mov
mov
divb
mov
sbb
les
cmp
xchg
jmp
dec
cmp
adc
adc
mov
shrl
stos
mov
fwait
sub
add
sub
sub
adc
jnp
data16
lahf
pop
fildl
ljmp
sub
sbb
jg
sbb
xchg
jg
scas
bound
xor
mov
or
dec
lret
xchg
ficoms
dec
mov
insb
cmp
test
out
jbe
jmp
sbb
or
pop
or
push
add
jle
lds
sub
cmpsl
loop
int
jg
push
xchg
push
shl
adc
cli
pop
push
adc
loopne
sub
push
popa
mov
push
shll
mov
xor
jecxz
sub
mov
sbb
add
inc
push
jns
enter
sbb
add
xchg
cwtl
lret
jns
ds
push
stos
xchg
dec
imul
ljmp
pop
xchg
dec
push
gs
cmp
pop
testl
cmp
out
cmp
mov
add
push
inc
or
xor
adc
jle
insl
push
mov
cmp
out
mov
adc
pop
gs
or
out
and
dec
lock
std
adcl
xlat
mov
iret
jp
xorb
hlt
insb
push
add
jbe
mov
out
cmpsl
dec
mov
imul
mov
mov
fldt
test
loopne
or
popf
mov
loope
sbb
cli
inc
xchg
divl
hlt
int3
in
shll
sysret
pop
pop
mov
int
or
mov
push
and
scas
loopne
push
mov
cmc
es
and
arpl
movsb
iret
add
insl
test
push
loop
and
mov
and
gs
in
ds
push
jmp
jnp
std
jns
ds
pusha
call
push
lock
sbb
sub
ja
pop
xchg
push
mov
and
dec
push
inc
mov
pop
inc
inc
xchg
sub
sub
incl
jo
loop
jo
mov
cmpsl
std
mov
cmpsb
sbb
mov
push
loope
sbbb
gs
aad
mov
dec
mov
ss
pop
adc
stos
jl
fldenv
aaa
daa
mov
push
outsl
aas
jp
cmp
mov
pop
push
out
add
aas
gs
fnstsw
adc
pusha
cltd
or
out
test
das
loop
dec
lods
bound
jmp
fwait
movsl
mov
ficompl
lea
int3
mov
sbb
sub
shl
fldenv
je
cli
sub
rcll
inc
pop
xor
mov
and
bound
imul
pop
and
mov
call
or
shrl
loope
cmp
sti
jno
and
pop
subb
insb
mov
cwtl
addb
push
add
pushf
roll
push
jmp
xor
sub
jns
cmp
jle
jg
xchg
mov
ss
xchg
jo
mov
lret
mov
xchg
mov
ret
das
jp
ret
xchg
insb
test
adc
mov
pop
or
inc
les
cwtl
inc
fistps
shll
cmc
mov
adc
mov
xor
adc
dec
clc
lock
dec
je
sbb
pop
or
or
push
pop
arpl
mov
mov
mov
aad
inc
cli
cs
xchg
mov
pop
jg
pushl
int3
mov
jne
in
movsl
data16
ds
adc
lret
mov
adcb
pop
mov
test
jnp
xchg
outsb
mov
fnstenv
lea
sub
push
out
mov
sub
xchg
sbb
pop
cwtl
cmp
push
stos
sub
mov
push
adc
or
inc
imul
jo
xchg
or
mov
dec
push
lds
jb
jae
xchg
fwait
std
sbb
fmull
test
ljmp
mov
dec
je
jae
daa
xchg
push
adc
in
into
loopne
xor
xchg
pop
and
pop
stos
aam
sbb
xchg
lahf
test
ret
popf
popa
js
icebp
fstpl
cld
fsubr
xchg
ja
jmp
ss
fildl
fnsave
lahf
aad
pavgw
mov
sahf
and
in
mov
dec
mov
mov
loope
mov
and
xchg
repnz
xchg
lods
test
mov
mov
data16
mov
inc
loop
das
fldenv
std
mov
js
push
pop
mov
sbb
cmpsb
xchg
mov
xchg
insl
sbb
test
daa
cmp
sbb
inc
stos
cmp
mov
inc
pop
repz
xor
pop
test
sbb
ficompl
adc
arpl
pop
in
mov
stc
les
mov
cli
cld
pop
es
xchg
ret
xchg
pop
cmp
ljmp
pop
ror
jns
arpl
pop
insb
arpl
or
mov
into
add
jns
jnp
lea
xchg
mov
das
mov
pop
daa
inc
hlt
mov
adc
or
add
loopne
jb
jns
xor
arpl
cltd
int3
inc
mov
cld
shlb
aaa
add
or
gs
int
push
movsb
test
hlt
lcall
push
scas
add
inc
insb
pop
mov
pop
mov
pop
cmp
sub
notb
push
cmp
push
stc
fldln2
push
movsb
ss
xchg
push
in
cmpsb
push
cmp
insb
fcmovu
in
repnz
or
shlb
loopne
xchg
push
add
lret
fs
roll
adc
repnz
imul
cld
outsb
fildll
jns
mov
push
sti
dec
es
cltd
idivb
jae
mov
pop
imul
inc
mov
adcl
aam
fistps
rorb
xchg
add
cmp
sahf
and
cmp
outsl
and
inc
jnp
jbe
inc
cmp
repz
cmp
pop
xor
adc
and
sub
add
jmp
arpl
jb
dec
incb
cmp
push
mov
mov
arpl
aaa
je
outsb
sbb
fmuls
outsb
aam
fcmovnbe
inc
fdivrs
xor
cmpsl
mov
sahf
popf
leave
lock
adc
ds
jae
sub
inc
out
stos
rcll
dec
xchg
ljmp
shrl
mov
call
lret
imul
cmp
or
dec
cmp
mov
in
dec
int3
ror
pop
pop
arpl
insl
and
shl
and
cmp
pop
sbb
cmpsb
fildll
idiv
into
nop
mov
fistps
adc
jo
imul
mov
xor
sbb
sub
pop
popf
bound
push
mov
loope
stc
daa
xchg
scas
adc
pushf
or
dec
loope
and
mov
push
fnsave
dec
lds
inc
nop
std
mov
sbb
test
dec
popf
cwtl
lahf
roll
push
mov
or
and
lret
loop
negl
leave
test
int3
loope
sub
cld
adcl
ja
and
or
out
pop
cs
scas
mov
ss
js
shl
xchg
je
cmpsb
or
insb
sub
jns
lret
out
popa
mov
dec
xchg
aad
jge
ljmp
ktestb
adc
out
lods
xor
mov
sbb
jge
push
mov
repnz
clc
mov
and
sbb
ss
pop
add
addb
imul
push
jp
pop
imul
and
adc
mov
cmp
adc
inc
addr16
ja
cltd
sbbb
pop
mov
into
scas
rcrl
sti
adc
hlt
adc
dec
lods
mov
ss
fcoms
pusha
adc
xchg
stos
pop
pop
repz
fdivrs
xor
cmpb
xlat
dec
imul
in
mov
enter
inc
jg
push
mov
jecxz
addb
out
xchg
xchg
lea
mull
fnstsw
imul
fmull
cmp
inc
inc
cmp
or
pushf
mov
idivl
push
sub
fs
sbb
test
cmc
or
ret
cmp
jge
mov
mov
push
imul
add
andb
mov
jle
xchg
incb
shrl
jge
imul
ljmp
sub
sbbb
xchg
movsb
scas
mov
test
frstor
jmp
xchg
call
sub
push
pop
jp
cmp
push
jb
mov
movsl
sub
cmc
sbb
dec
fldenv
mov
dec
add
and
imul
add
xor
nop
les
or
jo
mov
loop
insb
adc
fmull
out
mov
loopne
and
and
add
dec
xchg
xor
xor
call
fnstenv
add
movsl
ror
jle
ret
jmp
aaa
cmp
dec
pop
stos
lret
mov
push
or
rolb
lcall
inc
sub
cmp
pushf
stc
mov
mov
cmpsb
push
cmp
jecxz
leave
out
mov
rcll
cli
bound
cld
insl
clc
sub
lret
or
mov
andb
lods
ds
je
xchg
call
gs
lds
rolb
cmp
or
mov
push
mov
cmpsl
lret
mov
fadds
shlb
ljmp
cmp
push
inc
aad
xor
cmp
inc
mov
xchg
pop
sbb
cwtl
cs
ficomps
dec
add
jge
ja
mov
stos
lods
xlat
fsubrs
mov
stos
lea
xlat
push
sbb
mov
rorb
push
push
stos
fisubl
mov
repnz
arpl
cmc
ret
rorb
and
sbb
push
adc
je
or
test
lock
mov
bound
xchg
pop
aam
rorb
movsl
add
push
fnsave
into
pop
pusha
xor
jl
pop
lret
aad
push
inc
inc
xor
mov
and
jmp
cmp
sbb
out
xlat
pop
fwait
daa
mov
adc
fwait
pushf
add
lcall
leave
imul
adc
pop
arpl
test
cld
pop
loop
push
bound
adcl
outsb
insb
cltd
adc
repnz
repnz
cmp
jno
xchg
in
sbb
mov
mov
pop
jo
pop
outsb
adc
mov
stos
outsb
add
je
lcall
insb
jno
jns
test
icebp
int
cmp
rcrl
shll
fcoml
stc
mov
adcb
or
jl
push
shrb
mov
mov
xor
sub
sbb
pop
pop
mov
adc
adc
adc
or
jns
incb
xchg
insb
sub
notl
addl
cmp
movl
xchg
mov
jg
sub
push
sbb
dec
mov
mov
loope
es
shll
cmpsl
push
xchg
xor
hlt
push
or
shll
pushf
cmp
stos
lods
movsb
sahf
cwtl
mov
mov
loop
mov
in
cmpb
or
sarb
mov
pop
pop
mov
or
lret
adc
xor
dec
xchg
jne
jp
dec
enter
push
inc
icebp
jg
imul
fmuls
push
push
test
sbb
dec
xchg
adc
fbstp
jl
jnp
aam
ljmp
ljmp
fxch
scas
dec
aam
adc
inc
and
jmp
xchg
jp
pop
sti
cmc
push
loope
cmpb
aam
cmpb
cmpsb
out
jae
leave
loopne
dec
lea
adc
bound
in
and
iret
fcmovne
mov
int3
xor
mov
cmp
pusha
and
jae
sub
shll
insl
test
cmpsl
mov
out
push
and
sahf
pop
mov
xor
push
les
pushf
mov
fldl
scas
incl
xor
mov
mov
insl
mov
cmp
sub
pop
popf
jns
repnz
push
ljmp
add
mov
sub
into
cmp
cmp
rorl
xcrypt-ctr
cmpsl
sbb
test
sbb
lret
adc
jnp
add
cltd
sarb
and
adc
sti
insb
mov
test
das
ret
adc
cmc
mov
xor
xchg
xchg
adc
clc
push
jmp
cmpsb
xlat
aas
movsl
push
pop
ret
dec
xor
out
and
xchg
pop
add
mov
pop
xor
test
pop
sbbb
clc
pop
mov
repz
push
cmpsl
test
mov
aad
std
pop
xchg
sbb
les
cmc
lret
imul
montmul
cmpsb
mov
mov
lahf
fimull
sbb
push
push
inc
mov
xor
shll
lret
jb
pop
jae
xor
ds
aaa
je
dec
lcall
mov
add
inc
or
int
fadd
inc
mov
insl
pop
mov
jbe
pushf
push
xchg
stc
push
iret
inc
mov
cs
pop
adc
push
fimull
lods
lret
sbb
int3
mov
imul
hlt
mov
dec
pop
les
inc
je
or
imul
push
pop
mov
js
lret
dec
data16
fcoml
je
push
push
fisubrl
out
jle
xor
add
pop
dec
sbb
pop
fiaddl
lods
add
aad
mov
and
imul
lods
mov
fmull
enter
aad
mov
mov
and
fsubrs
cmp
push
rcrl
push
and
loop
inc
push
jno
push
lret
mov
jge
fists
in
pop
sub
ficompl
ss
inc
jmp
add
in
in
push
mov
xor
mov
call
push
movsb
loopne
imul
out
pop
jecxz
mov
jmp
into
jmp
add
pusha
inc
xchg
stos
xchg
ljmp
cmp
rolb
xchg
jns
and
xchg
mov
dec
pusha
jnp
je
jbe
test
ljmp
lahf
imul
jae
cmc
lock
inc
jns
inc
xchg
fstpl
sub
adc
sub
sub
inc
rcr
pop
pop
jg
push
mov
call
in
mov
inc
ljmp
and
and
dec
and
push
mov
adc
pusha
shrb
pusha
fstps
sbb
dec
lahf
push
das
add
ss
stos
xchg
iret
jae
or
cli
lods
aam
movsb
inc
shr
xchg
push
daa
inc
jbe
pop
dec
cmp
insl
lret
sahf
clc
pop
ljmp
or
cmp
shl
in
and
fwait
cltd
loop
fnstsw
sbb
in
inc
sbb
inc
push
inc
adc
enter
rcll
cltd
pop
pop
cmp
popw
xor
sub
xchg
mov
mul
out
and
movsl
lret
or
add
push
add
in
cwtl
std
test
loope
aas
popf
push
pop
sub
aas
clc
mov
and
add
orl
test
fistpll
gs
sar
lcall
subb
cmp
add
stos
aam
cli
jb
add
dec
sbb
lret
dec
fs
push
mov
pushf
push
sbb
xchg
repnz
fmuls
inc
movsb
sarb
add
adc
add
loop
test
adc
cwtl
lock
mov
jo
sahf
mov
or
push
lds
mov
cmpsl
and
xchg
pop
jns
in
mov
add
in
movsl
ret
popa
xchg
adc
xchg
jecxz
div
sub
shll
test
pop
cmpsl
cwtl
xor
imul
adc
imul
mov
xchg
cmp
inc
mov
dec
add
lcall
fdivrs
repz
dec
pop
flds
jne
call
xchg
xor
stos
cmp
sub
out
ss
add
add
sub
add
sti
icebp
dec
inc
pop
xchg
mov
mov
or
orb
push
aas
add
mov
iret
push
fsubl
adc
or
xor
pop
xchg
das
mov
scas
test
hlt
inc
push
pop
and
dec
filds
mov
enter
test
or
inc
sub
xchg
int3
rol
out
jmp
sub
leave
lods
aad
jae
jne
sub
add
mov
sbb
pop
pop
add
rclb
dec
hlt
test
push
pop
and
leave
xor
dec
xor
or
or
loop
aas
mov
ss
rcrb
inc
sete
jnp
jecxz
scas
cli
and
push
test
inc
shr
xchg
in
and
sbb
mov
sbb
frstor
icebp
movsl
and
cmp
sub
xchg
xor
dec
push
add
fnstcw
sbb
push
or
cwtl
mov
popa
scas
popa
les
inc
test
push
flds
lahf
push
scas
push
mov
adc
sbbl
push
cltd
lods
incl
cmc
mov
incl
dec
jae
je
pop
inc
fcoml
jg
fcmovne
dec
stc
jns
cli
rcr
ja
xor
lods
xor
cmp
leave
jne
adc
pop
das
data16
cmc
ljmp
fsubl
leave
iret
je,pt
fistpl
in
push
jo
pop
movsb
lock
xchg
inc
cmpsl
loopew
scas
sub
sbb
dec
mov
stos
pusha
push
jl
adc
movsl
push
cmp
add
pusha
mov
xor
in
dec
je
shrl
cmp
ja
cmc
loop
lcall
pop
test
xchg
out
mov
std
mov
nop
mov
shr
stos
push
push
cmp
push
add
cwtl
test
push
in
into
and
pop
xchg
sbb
rcrb
sti
xchg
cltd
pop
fwait
dec
adc
or
or
cmp
pop
ret
les
mov
cmp
xor
scas
pop
push
mov
pop
mov
mov
lods
or
sbb
jecxz
xor
gs
fs
dec
jl
sub
outsb
jl
xlat
jbe
sbb
rcr
rcl
dec
jae
inc
adcb
and
sahf
lods
in
scas
and
or
adc
daa
adc
push
mov
pop
lret
pusha
into
xor
lahf
xchg
dec
mov
iret
xorl
pushf
nop
cld
and
sbb
fcmove
ljmp
xor
inc
sbb
incl
test
fstps
mov
push
adc
and
pop
and
jge
mov
add
push
clc
jp
in
repnz
cs
popa
mov
sub
add
add
push
notl
movsl
aad
pusha
jne
mov
das
pop
insb
in
leave
shrb
cmp
fisubs
aam
scas
mov
xor
mov
xchg
or
movsl
outsl
addr16
addb
stos
fists
jns
ljmp
jnp
mov
mov
aad
ds
stos
sub
test
push
stc
push
xchg
mov
xor
xchg
je
mov
mov
movsb
das
and
je
and
pop
int
and
jl
dec
stos
icebp
fcoms
movsb
test
xchg
into
adc
stos
inc
jno
inc
in
jp
xor
cld
data16
push
sub
xchg
es
int3
sub
jne
aaa
lds
test
ljmp
movsl
lret
xchg
clc
xor
int
fimuls
pop
cmp
stos
sub
bound
cmp
sub
iret
and
mov
pop
xchg
jle
jbe
or
lret
enter
lahf
and
mov
fnstsw
mov
inc
icebp
and
push
jl
mov
lock
xchg
mov
out
in
push
mov
cmp
lahf
or
out
outsl
les
cmc
gs
repz
addb
pop
mul
popa
les
and
mov
jne
mov
dec
mov
out
imul
jmp
lret
jmp
push
fists
inc
ljmp
sbb
mov
fs
xrelease
inc
pop
xor
jmp
call
lods
gs
add
push
test
adc
jp
cmc
cwtl
movsb
sbb
pop
sub
jge
lahf
cmp
adcl
sbb
in
dec
or
dec
aaa
mov
call
and
lret
outsl
mov
in
push
ja
adc
push
subl
adc
fbld
cwtl
in
test
jae
out
cmpb
add
pusha
stos
push
xchg
dec
sub
movsl
mov
or
sbb
fists
cltd
dec
mov
ss
xor
jne,pt
test
adc
lcall
loopne
jmp
xor
push
outsl
cld
in
and
shll
inc
xchg
xchg
int
and
shr
popa
add
cmp
dec
inc
outsb
fistpll
mov
mov
nop
popf
push
jge
mov
cmpb
in
adc
sarl
clc
or
rcrb
cwtl
adc
enter
mov
scas
rorb
xchg
int
mov
ret
mov
inc
dec
dec
adc
stos
dec
pushf
inc
mov
call
lahf
ror
and
dec
into
sahf
jp
int3
mov
fdivs
aad
dec
jmp
dec
adc
out
dec
fs
paddsw
dec
loope
and
cmp
and
adc
and
cs
and
ds
lcall
and
repnz
pop
adc
push
call
and
mov
add
push
test
mov
fbld
movsl
fisubs
add
mov
mov
push
jmp
push
aas
lods
out
fwait
inc
les
outsl
andl
inc
or
cs
xor
add
mov
out
enter
lret
leave
inc
push
addps
and
push
adc
adc
daa
aam
ds
mov
jns
fisubrl
stos
jae
xor
test
icebp
outsb
loop
cs
add
push
dec
outsl
push
mov
jno
aaa
js
xchg
cli
je
ss
pop
loope
jl
lret
cmc
sbb
mov
mov
jle
enter
test
rorl
pop
xor
mov
mov
pop
add
stc
mov
inc
and
pop
mov
add
adc
xor
les
ja
sub
cmp
and
daa
or
or
je
repz
cmp
aam
jo
lods
cmp
cmpsl
sub
add
shl
mov
dec
call
mov
int
stos
rolb
hlt
stos
sbb
pop
icebp
ficoms
sub
ljmp
es
shlb
and
or
adc
hlt
into
dec
cmp
xchg
bound
clc
inc
jecxz
push
lret
test
in
fsubr
fimuls
mov
jbe
fadds
test
loopne
cltd
pop
mov
pop
xor
sub
pop
mov
aaa
jge
aaa
fisttpll
add
lock
repz
jecxz
sbbb
cmp
cmp
cmp
out
cli
ss
sub
std
addr16
scas
test
add
jecxz
test
jecxz
inc
mov
mov
xor
add
or
pop
call
dec
lret
mov
xchg
inc
es
imul
cmp
cmp
mov
dec
and
jb
std
lcall
mov
push
insl
incl
icebp
xor
cmp
push
fmull
or
bound
aas
popf
push
sti
dec
and
add
jmp
in
push
and
dec
mov
dec
and
test
pop
pusha
in
aad
les
rcrl
jecxz
dec
mov
pop
fs
mov
jle
aaa
mov
je
or
stc
aas
stos
jne
inc
and
leave
icebp
dec
test
inc
in
mov
call
sub
aad
test
mov
xor
mov
pop
movsb
mov
fnsave
mov
adcb
cmpsb
mov
cmpsb
xlat
inc
aaa
adc
rcr
dec
mov
push
jecxz
fldl
inc
dec
iret
mov
nop
ss
pop
inc
jo
out
xor
mov
push
jle
out
out
js
push
jecxz
adc
loope
add
ror
in
leave
mov
xor
ret
jno
jbe
sbb
push
or
or
dec
mov
sbb
clc
addr16
popf
inc
pop
int3
stos
fs
pop
call
inc
cmp
imul
lahf
pop
adc
scas
int
mov
pusha
in
rcr
cmp
and
out
dec
dec
mov
ret
fisubl
sub
mov
mov
jns
push
add
cmpxchg
xchg
loopne
fdiv
mov
xchg
or
repnz
ds
jns
aas
nop
push
jo
shrb
mov
and
xchg
pop
data16
adc
dec
outsb
push
jb
es
adc
cmp
mov
dec
cld
pusha
fidivs
cmp
mov
pop
mov
test
ror
ficoml
movsb
hlt
icebp
frstor
mov
pop
rclb
out
inc
or
push
jg
mov
mov
jp
out
inc
es
cmp
mov
insl
inc
mov
push
and
adcl
jb
mov
out
mov
push
ljmp
push
or
cmp
add
addr16
jns
mov
mov
bnd
cmpsb
aas
push
push
lcall
sub
out
insb
loopne
mov
in
mov
push
mov
in
lds
pop
fwait
addr16
add
jmp
in
out
push
adc
in
test
or
mov
insb
pusha
xchg
ret
xchg
insb
or
sub
mov
lea
in
fwait
repz
xor
stos
comiss
sbb
rcll
xchg
movsb
call
pop
jmp
xchg
insb
mov
lret
les
cmp
cli
mov
inc
jo
scas
test
rolb
add
pop
adc
cld
jae
push
dec
mov
les
xor
jp
dec
mov
out
sbbb
push
jg
fstps
lahf
sub
rcr
add
stos
out
lods
and
push
mov
xchg
divb
mov
mov
std
data16
cs
adc
sbb
jl
sub
or
mov
hlt
inc
shlb
imul
jecxz
mov
pop
into
lods
decl
aaa
mov
sbb
push
pop
and
daa
and
xor
arpl
repz
jbe
ja
add
lcall
aad
cld
sahf
int
les
test
xchg
cmp
or
test
cmpsl
cwtl
mov
push
jecxz
mov
mov
mov
or
jg
push
xchg
push
mov
pushf
dec
push
aam
cs
repz
fisttpl
mov
or
mov
jle
lock
cmp
in
shlb
ret
adc
jg
or
sbb
enter
cmp
add
mov
scas
xor
xor
push
dec
ljmp
icebp
cltd
jnp
mov
stc
shlb
je
rcll
add
push
negb
iret
adc
push
sub
sbb
inc
ds
pop
shl
dec
xor
out
stos
ss
icebp
and
sub
mov
mov
clc
add
xor
pop
addr16
and
mov
add
out
call
cmp
gs
and
rorb
ret
sti
inc
push
add
sti
movsl
out
std
jb
push
xor
repz
push
sub
sub
in
push
xor
bound
dec
push
int3
das
push
loope
bound
cmc
test
nop
fs
or
jmp
dec
xor
inc
mov
mov
pop
mov
popf
repz
jecxz
fstpt
cltd
fldpi
ror
mov
or
pushl
jecxz
mov
gs
mov
icebp
out
test
mov
arpl
cmp
loope
repz
sbb
lods
das
ds
add
dec
jne
mov
test
sbb
pop
cmp
jmp
andb
xor
pop
and
and
push
shlb
fildll
adc
add
out
sbb
mov
test
popa
jb
jle
mov
xchg
jecxz
bsf
sbb
or
mov
adc
and
mov
scas
mov
adc
pop
xor
mov
pop
mov
push
cltd
out
jbe
and
mov
stos
jg
scas
mov
mov
xor
xchg
dec
into
mov
push
addr16
ds
jne
jbe
xchg
mov
in
test
mov
sub
icebp
mov
ljmp
mov
test
cs
ds
mov
xor
xor
test
pop
xor
clc
dec
loopne
cmp
imul
cmp
mov
pop
inc
mov
sub
adc
jo
xchg
pop
mov
call
stos
popa
adc
repnz
daa
ljmp
repnz
xor
and
pop
mov
pop
sbb
xorb
iret
lret
stos
and
push
jge
and
jnp
mov
pushf
xor
dec
psubb
daa
push
sub
cltd
pop
lret
jns,pn
ja
jl
mov
cmp
aaa
adc
xor
push
xor
inc
je
and
jge
sbb
jno
or
sub
subl
insb
dec
and
sti
pop
cmpsl
cmp
test
aam
in
xchg
xchg
in
ds
sbb
xchg
mov
mov
xchg
popf
xor
sbb
jbe
push
lods
sti
mov
push
fcompl
test
mov
mov
pminsw
dec
lahf
rorl
xlat
jg
ret
outsl
push
push
or
dec
dec
and
cli
cld
dec
rorb
add
or
mov
mov
sbb
pushf
je
enter
insl
nop
fcoml
cld
mov
nop
mov
pop
dec
push
gs
das
adc
xchg
push
mov
pop
push
jae
call
in
js
sbb
add
and
jecxz
xor
cmp
mov
stc
or
fildl
xor
jle
sbb
ret
inc
xor
mov
inc
mov
push
lret
inc
inc
push
xor
icebp
mov
hlt
inc
xchg
jmp
gs
adc
or
movsl
pop
sub
sbb
in
aad
or
sub
pop
lret
xchg
dec
ficompl
pop
sbb
scas
push
les
jp
inc
and
push
push
mov
clc
xor
in
sub
add
outsl
mov
test
dec
mov
imul
dec
add
mov
pop
jo
lods
ficoml
mov
lcall
pop
ja
add
icebp
cmp
dec
lahf
pop
push
insb
mov
pushf
mov
insl
mov
movsl
cmpsb
test
outsb
lret
insb
dec
and
pop
xor
fsts
cmpsb
xor
and
or
mov
fidivrs
mov
sbb
cltd
enter
mov
push
mov
loopne
xlat
dec
cmpsb
adc
inc
cmc
jecxz
xor
scas
push
mov
xchg
mov
in
push
mov
inc
mov
mov
mov
sub
cmc
rcl
cmp
sbb
movsl
daa
push
adc
inc
sub
pop
js
pop
xchg
dec
jge
test
pop
cmp
cmc
mov
xor
repnz
mov
fwait
inc
stos
inc
and
mov
lea
sti
mov
popf
cmp
and
mov
mov
outsb
mov
mov
xor
lds
add
sub
lds
sbb
sahf
dec
imul
subl
mov
test
adcb
into
add
push
adc
daa
pop
idivb
cmc
mov
mov
dec
sbb
sub
and
loope
pop
fldt
or
cmp
cmpl
cli
jo
dec
ficoml
adc
pop
int
mov
cmp
mov
lea
push
xchg
scas
push
fxch
mov
or
movsb
sub
xor
aam
int3
and
dec
sub
aam
push
add
inc
jmp
jmp
dec
mov
insb
mov
pop
xlat
sbb
aam
mov
lea
xchg
fnstsw
push
cs
scas
pop
out
mov
and
push
fisttpll
jae
xor
fisttps
out
or
pusha
mulb
dec
mov
and
add
mov
mov
add
das
push
mov
scas
loop
dec
sti
sub
inc
mov
and
loop
xchg
xchg
sub
cmp
adc
dec
cltd
cmp
inc
mov
sub
push
in
add
mov
xchg
shl
push
imul
cli
xchg
int3
mov
and
out
ss
outsl
lret
and
test
fwait
sbb
push
sar
in
xlat
push
sbb
divb
out
dec
jb
mov
push
daa
test
sub
shl
xchg
push
cmovle
rcrl
rolb
faddl
push
test
mov
jg
adc
xor
dec
daa
pop
fchs
aam
sar
mov
test
mov
das
testl
jmp
mov
pop
stc
xchg
mov
test
sbb
les
orl
mov
xchg
rclb
jns
je
add
xchg
mov
icebp
out
outsb
stos
cwtl
pushf
xchg
js
adc
aas
push
fcomps
and
cmp
test
sub
adc
push
add
int
sub
inc
jge
mov
outsl
and
fbstp
inc
in
mov
mov
ljmp
je
fsubs
ret
outsl
pop
rclb
push
daa
lgdtl
adc
int3
sbb
rcrb
mull
lods
jb
mov
rcr
pop
lret
stos
cmpsb
jmp
stos
mov
sbb
movsl
lahf
inc
cmp
sahf
mov
in
testb
mov
inc
int3
out
push
sarb
or
pop
loopne
pop
movsl
mov
inc
sub
int3
nop
mov
xlat
fcomps
adc
pop
fcompl
cltd
fldt
dec
sti
lock
repnz
pop
sub
loopne
inc
in
pop
sarb
add
adc
cltd
or
pop
fldenv
aad
test
inc
mov
pop
adc
hlt
add
je
cmp
xor
loope
sbb
mov
cmpl
aad
lret
dec
loope
sbb
stos
adc
leave
stc
imul
mov
sarb
sub
imul
aas
pop
xor
xorb
in
lods
jnp
jge
out
loope
pop
call
cmpsl
pop
jecxz
scas
jo
cmp
push
dec
shl
or
pop
and
mov
push
ljmp
push
out
repz
mull
add
in
mov
ret
dec
pop
lret
jno
sbb
mov
repnz
inc
shl
push
pop
insb
insl
shll
pusha
cld
push
jnp,pt
ds
sbb
and
hlt
leave
nop
mov
cmp
js
mov
push
loop
adc
out
or
adc
das
shrl
push
dec
mov
addr16
xchg
pop
aaa
dec
loope
xlat
les
xchg
out
data16
stos
inc
adc
clc
xor
data16
push
cmp
and
xor
test
adc
xchg
lcall
add
xchg
adc
and
sub
dec
fistpll
bound
xor
pop
mov
into
mov
pop
lahf
xchg
leave
inc
enter
sti
sbb
mov
add
sbb
mov
push
inc
fadds
cmpsl
mov
loope
inc
xchg
rorl
lods
lcall
jae
xchg
mov
and
stos
jae
pop
sbb
xor
rcrl
adc
fs
int3
enter
push
xchg
sub
adc
cs
jo
xchg
cmp
les
imul
or
pop
jmp
in
add
imul
xlat
lock
mov
xchg
add
inc
push
cmc
mov
jo
add
out
mov
pop
fs
push
adc
repz
iret
cli
je
shr
mov
inc
push
xor
inc
fbstp
into
add
out
add
notb
or
rclb
mov
adc
ja
xchg
outsb
push
push
inc
or
out
gs
sbb
sti
dec
leave
mov
cmpsb
insl
pop
xor
std
add
dec
call
cmpsl
xchg
clc
hlt
dec
jo
out
data16
pop
aam
inc
pop
mov
aaa
shlb
insl
loope
mov
xchg
xlat
test
daa
data16
loope
xchg
cmp
xor
mov
jns
jecxz
sbb
rcrl
xchg
lcall
sub
cmp
mov
out
adcb
mov
inc
pop
push
ret
mov
repnz
addr16
stos
dec
pop
jne
jno
pop
adc
test
pop
and
fcmovu
mov
imull
xchg
adc
jmp
dec
cmc
or
or
or
fmul
xor
mov
arpl
les
pop
pop
inc
out
out
bound
je
out
sub
xchg
or
fildll
imul
and
sub
shufps
inc
scas
das
pmaxsw
inc
add
dec
sub
push
inc
popf
outsl
push
cmp
jle
aas
sbb
mov
mov
imul
mov
dec
cmp
nop
lret
and
out
testl
cwtl
sbb
testl
data16
jnp
rcrl
jg
cmc
scas
pop
insb
andb
in
add
adc
lds
fcmovb
mov
lods
xor
out
mov
scas
jae
pop
push
push
movb
scas
adc
ss
in
das
loop
int
or
mov
push
stos
cmp
inc
push
sub
loopne
mov
ja
in
lret
insw
push
xchg
mov
cmp
xorb
mov
xchg
xchg
sub
mov
lds
xor
adc
das
imul
add
cmc
and
nop
jno
stc
xor
mov
dec
iret
mov
std
repz
and
pushf
push
xchg
loop
dec
mov
push
push
cld
sub
fxam
or
test
mov
in
push
cmpsl
mov
lock
mov
fst
adc
ret
int3
mov
aam
mov
mov
pusha
dec
movsl
pop
inc
movsl
push
jecxz
pop
or
sub
cld
mov
xchg
lods
addb
push
cmpsb
in
cmp
inc
pop
mov
mov
or
mov
mov
xorl
sub
adc
rorb
cmp
jo
lret
shlb
icebp
xor
adc
cld
inc
scas
jo
mov
xor
push
ret
sbb
not
lods
pusha
dec
mov
pop
xchg
je
ret
xor
daa
out
xor
push
pusha
sbb
gs
push
stos
inc
push
jae
and
push
inc
push
inc
mov
xchg
or
xor
in
or
insb
and
mov
inc
stos
fwait
in
xor
aaa
push
xchg
cmp
mov
pop
xor
in
cmp
pop
dec
fcmovu
jp
lcall
adc
pop
xor
jne
mov
mov
jns
jp
and
popf
xorb
mov
std
xchg
mov
pop
popf
jle
dec
fisttpl
sbb
jne
test
repz
sbb
push
daa
sub
sub
xor
test
jecxz
add
cmp
mov
cmp
fdivrl
leave
loopne
aad
push
es
std
jnp
cmp
div
mov
or
xorl
fldl
jno
push
sub
ffree
fstp
int
pop
jb
mov
jo
pop
sbb
xor
cwtl
mov
mov
cmc
test
cmp
das
xor
cmp
bound
incb
mov
push
std
aas
cmp
roll
sbb
andl
sahf
xor
fistps
repnz
mov
outsl
stos
dec
std
inc
cmp
or
rcll
arpl
pop
sahf
jno
cmp
xchg
je
in
and
sbb
outsl
mov
adc
out
fs
xor
fadds
push
shrl
cmp
int3
jecxz
loop
inc
adc
mov
stc
loopne
adc
out
loopne
mov
sbb
mov
xchg
sub
or
fidivrs
call
repz
mov
and
idivb
pop
insl
sub
pop
aad
hlt
xchg
mov
mov
jle
and
fs
jmp
xchg
jmp
iret
cmovge
xchg
and
mov
adc
xlat
dec
jecxz
enter
cmp
out
hlt
stos
arpl
jg
mov
cmp
mov
movsb
repnz
sarl
push
movsb
pop
inc
mov
mov
ds
repz
hlt
mov
cwtl
jbe
xchg
pusha
xchg
sti
sbb
sbb
ret
cmpsb
mov
loopne
lds
repz
push
cmpsb
aaa
mov
testb
in
sbb
add
ss
leave
push
inc
loopne
sub
les
std
jae
fcmovnu
mov
cld
sbb
jns
xor
dec
mov
insb
int3
outsl
jo
mov
das
sbbl
pop
inc
rcl
bnd
cmp
xchg
dec
in
sbb
push
jmp
dec
add
sub
adc
aaa
dec
jnp
dec
nop
mov
add
adc
repnz
aaa
sub
and
jo
out
gs
xor
mov
stc
mov
leave
push
imul
clc
lds
scas
daa
loopne
xchg
push
mov
inc
outsl
orl
push
xchg
jbe
or
sti
or
jo
mov
xchg
xchg
or
pop
inc
xchg
jb
leave
sub
mov
sub
xor
fdiv
cmp
in
pop
insl
or
or
or
adc
test
insb
cmp
cmp
lcall
int3
xor
dec
inc
int
subl
daa
daa
cmp
and
add
aaa
js
xor
mov
repz
sti
mov
je
dec
out
fstpt
dec
cmpsl
add
xor
inc
or
sbb
call
mov
fcomp
in
sbb
adcl
mov
pushf
rorb
xorb
mov
add
outsb
dec
aas
add
stos
pop
cmp
xchg
sbb
test
mov
sahf
pop
push
inc
imul
fxch
xor
pop
mov
lods
ss
cmp
mov
jbe
sub
loop
imul
pushf
and
pop
push
mov
add
sub
mov
lods
sub
popa
rorb
mov
xchg
cmpsl
pop
mov
pop
dec
xchg
sbb
cmc
add
stc
and
pop
in
or
xchg
mulb
enter
popa
je,pt
shrb
inc
sub
sti
sub
mov
and
pushf
sbb
or
push
fisubl
ss
psllw
or
mov
out
pop
repz
sbb
xchg
jecxz
add
movsl
pop
rcl
push
je
loope
lods
sub
stos
lods
adc
inc
ds
mov
sub
daa
sbb
sub
xchg
roll
dec
fnsave
leave
xchg
xchg
jg
sbb
mov
in
or
or
add
add
lea
dec
mov
stos
sbb
jbe
mov
push
ret
divl
and
dec
fadds
sbb
jbe
fucomi
pop
rclb
jne
push
cmc
movsl
jno
xchg
fstps
call
mov
push
adc
jmp
mov
mov
and
add
push
xor
or
ds
cmp
push
fnstcw
testb
xchg
xchg
xchg
lds
xor
sti
xchg
mov
push
mov
js
mov
push
xor
jo
xchg
fisubrs
jno
mov
mov
inc
push
sbb
mov
jg
jge
sti
scas
lret
jnp
fldt
cmpsb
popa
imull
cmp
dec
iret
stc
cmp
sahf
je
iret
cwtl
or
fcomps
ja
mov
and
xor
jb
dec
sbb
mov
cmp
popa
mov
dec
out
ret
adc
cli
ret
js
push
pushf
and
imul
push
idivb
adc
xlat
push
ret
and
add
pop
es
add
ss
xchg
or
cld
movsl
les
mov
and
jmp
add
xor
or
jecxz
fsubl
xchg
movsbl
add
les
dec
das
jle
sub
jp
lret
out
pop
mov
into
adc
or
es
pop
mov
pop
repz
mov
pop
mov
cs
cli
pusha
or
xchg
xor
insl
movsb
mov
or
jo
xchg
jmp
leave
xlat
scas
ljmp
push
movb
jmp
mov
mov
loope
mov
dec
inc
arpl
mov
cs
shll
outsl
cmp
or
xchg
jo
adcb
xchg
cmpsb
or
pop
pusha
in
xor
dec
shlb
bound
cmpsl
cld
ret
in
mov
xchg
rcl
sbb
cmp
sete
xorl
push
mov
sub
mov
xlat
sub
clc
pop
rcrl
scas
dec
inc
cwtl
sbb
or
lret
adc
jge
lret
ljmp
sub
mov
mov
xor
xchg
cmp
sbb
aaa
add
adcl
mov
jns
push
inc
pop
jno
sbb
lea
insl
dec
mov
popa
mov
aaa
cltd
sub
sti
ja
iret
pop
bound
xchg
out
sarb
jmp
pop
inc
pop
cmp
ret
fcomip
xorl
stos
xchg
mov
lahf
ret
cmp
jmp
stos
outsb
scas
jmp
jno
dec
ds
ja
les
sub
jmp
lret
jb
mov
jp
nop
mov
repz
test
bound
dec
dec
rorl
or
sbb
rcll
scas
sbb
dec
rcll
jge,pt
sti
cmp
push
adc
mov
aam
jp
jge
sbb
mov
sub
push
cs
outsb
popf
cmp
icebp
popf
and
pop
call
lcall
mov
mov
or
popf
stos
inc
sbb
jle
xor
ja
dec
ds
jmp
sbb
shll
repz
xor
stos
xchg
cmp
js
mov
push
xchg
adc
mov
sbb
and
mov
sub
fcoms
loope
xchg
adc
ss
or
mov
xlat
andb
jmp
lock
push
movsl
stos
cmp
jae
mov
adc
std
cltd
and
mov
sbb
icebp
lcall
sub
repz
loop
popf
and
clc
popa
dec
pmaddwd
and
mov
and
add
lods
popf
fstp
mov
push
or
repnz
push
loopne
or
dec
arpl
outsb
rol
bndldx
jnp
dec
jne
pop
mov
repz
in
xor
pop
sub
in
shrl
cmp
ds
xorb
scas
shrb
pop
cmpsl
pop
mov
pop
int3
sub
lds
icebp
aas
das
mov
inc
mov
ds
dec
movsl
cmp
addb
sbbl
inc
mov
loope
inc
pusha
mov
add
sub
jae
fdivr
dec
aam
aas
mov
xchg
clc
mov
mov
mov
sbb
incb
enter
xlat
jmp
xor
xchg
mov
outsl
sbb
loopne
push
outsb
jp
out
and
sbb
cwtl
or
mov
mov
add
lock
negl
push
pushf
jbe
cltd
stos
out
dec
lret
pop
pop
push
inc
mov
incl
mov
inc
xor
inc
cmp
shr
cmp
inc
push
into
lea
imul
cmp
hlt
add
enter
inc
jbe
sahf
cmpsl
inc
mov
push
ja
cmp
sub
fbstp
jno
lea
hlt
call
outsl
and
out
jo
test
cmp
insb
lods
dec
xchg
jmp
sub
js
cltd
cmpsb
inc
ljmp
adc
cli
or
pop
mov
repnz
aam
sub
pushf
jle
xchg
pushf
loopne
mov
ss
int
push
inc
and
or
inc
xor
jbe
js
cwtl
add
pop
sbb
add
xor
jge
or
pop
sub
out
push
outsl
daa
pop
cmp
jae
mov
xor
movsb
cmp
mov
pop
insl
cltd
rolb
mov
das
aad
mov
lea
out
push
dec
iret
sbb
lods
pop
adc
or
bound
pop
mov
into
xchg
push
mov
dec
add
mov
int
jo
iret
sub
cmp
xchg
add
mov
inc
push
xor
xor
push
sbb
mov
xchg
ret
clc
or
cmpsl
xchg
xor
ret
mov
dec
inc
repnz
loop
mov
xor
or
fidivs
subb
outsb
xchg
mov
dec
mov
aam
xor
out
subb
cmp
inc
push
sub
out
test
gs
stos
ror
adc
inc
sarl
popa
dec
pop
mov
add
jecxz
xchg
insl
inc
dec
outsl
sub
ror
clc
mov
sbb
jecxz
cmpsl
sahf
ja
jns
mov
cmp
dec
xchg
mov
xchg
enter
adc
stos
jmp
or
mov
push
lret
jmp
push
xchg
jmp
and
lcall
adc
cmp
inc
cmp
rolb
sbb
shll
mov
pop
std
iret
mov
shll
sbb
clc
mov
stc
xor
add
fsubrp
mov
std
push
popf
movsl
add
mov
xchg
lods
in
xchg
ss
cmpsb
lea
or
or
out
bound
mov
stos
push
jmp
and
cld
dec
ljmp
mov
xor
jg
lds
and
adc
in
into
sti
pop
xlat
lcall
out
adcl
cmpsb
addr16
adc
mov
adc
and
mov
outsb
imul
insl
mov
push
mov
pop
jle
lods
lret
jns
dec
mov
hlt
or
movsb
mov
call
xchg
pop
jp
xor
cmpsl
lock
jbe
pop
into
clc
inc
and
push
insb
adc
mov
jecxz
fidivs
repz
xor
adcl
sahf
sub
adc
test
test
sub
mov
mov
dec
idiv
js
testl
xchg
sbb
add
enter
mov
pop
jmp
pushf
push
and
sub
and
sub
rcrl
shlb
sub
lret
int
leave
adc
xchg
cmp
mov
sbb
sub
add
push
xlat
hlt
mov
test
fiaddl
lea
scas
roll
popf
in
sbbl
fimull
loopne
movsb
adc
mov
fldcw
xor
dec
into
fiaddl
push
mov
pop
stc
xchg
push
xchg
lret
push
loope
jb
call
rorl
pop
jns
pop
cmp
out
push
fadds
aaa
lods
loopne,pn
ss
pop
cmp
enter
sub
es
dec
or
pushf
shl
in
pop
mov
sbb
cmpl
lcall
cmp
call
es
mov
or
imul
fistpll
cmp
pop
lock
xor
fs
xor
or
jg
or
add
xor
xor
lods
pop
mov
addr16
sti
pusha
sti
in
movsb
mov
pushf
push
loope
insl
ljmp
mov
xor
out
mov
cwtl
out
cmc
xor
jmp
inc
push
adc
cmp
add
xor
and
ds
mov
xor
pop
dec
into
cmc
lea
test
fsubp
sbbb
xor
jle
add
xor
pop
mov
adc
jge
push
shlb
adc
out
mov
aas
mov
loope
add
cli
rclb
xor
sub
push
mov
dec
add
pushf
mov
lods
mov
divl
push
mov
adc
aam
adc
sub
add
mov
out
dec
or
frstor
test
aaa
adc
rorl
sbb
js
jge
xor
pop
mov
mov
fdiv
addl
jae
cmp
sub
mov
push
in
adc
sub
sbb
mov
pop
aad
add
jmp
iret
or
jnp
xor
sub
shrl
jbe
or
jp
shlb
or
cmp
imul
insb
jnp
mov
xor
or
das
insl
mov
jge
fs
pop
push
push
sub
js
xor
xlat
and
aam
adc
sub
pop
in
mov
sub
fs
add
lret
add
xchg
es
cli
lret
dec
push
mov
test
arpl
pushf
sahf
jno
lods
dec
sbb
sub
imul
nop
aam
jb
bound
lea
movsb
push
pop
iret
pop
and
jo
pushf
call
cld
or
ds
mov
jne
or
fucomp
push
scas
popa
hlt
arpl
rcl
push
cmpl
bound
imul
call
clc
ja
scas
pmulhuw
mov
xchg
aam
sub
cmove
xchg
jg
sbb
lds
dec
adc
aad
add
popa
jp
decl
or
cs
jnp
sub
repnz
fstpl
push
jle
mov
aam
mov
addr16
ljmp
pop
imulb
dec
sub
ds
or
and
and
pop
pop
out
xlat
enter
sbb
jns
fsub
imul
lret
xor
and
push
cs
xchg
lret
xor
adc
cmp
clc
add
cmpsl
adc
cmp
push
test
xor
jp
je
mov
into
add
push
cmp
sub
icebp
loop
mov
mov
pop
pop
pminub
insl
add
leave
popa
push
inc
push
ret
daa
mov
cmpsl
push
and
out
repz
inc
mov
xor
jecxz
test
push
or
inc
inc
loope
idiv
cmpsb
mov
xchg
hlt
in
popf
call
and
nop
in
loop
lods
mov
call
jb
or
pop
jg
xchg
cmp
mov
sub
dec
jno
aas
lcallw
std
in
jp
lahf
mov
pop
adc
pop
and
or
pop
jae
or
shl
pop
loop
iret
jo
push
in
pop
or
mov
mov
push
mov
andl
cwtl
add
std
mov
mov
xor
jp
sbb
mov
popa
popa
mov
sarb
mov
int
jae
nop
mov
cmp
add
cmp
pop
pushf
fildl
in
mov
xor
dec
fs
cltd
enter
xchg
xchg
adc
popf
cmp
addb
les
cmp
imul
out
adc
mov
aad
xchg
andl
xorb
les
pushf
daa
cmp
sbb
out
in
aaa
add
mov
mov
out
ss
xchg
or
add
into
cs
add
stc
fwait
adc
sub
rclb
dec
sub
mov
into
xor
jnp
ds
insb
mov
xlat
in
cmp
add
pushf
imul
and
sbb
mov
rorl
add
cmp
fisttps
lods
xchg
sub
push
jg
xchg
pop
mov
mov
mov
inc
lea
repz
mov
xlat
and
ljmp
mov
jne
or
shll
add
mov
xor
cmpsl
xchg
fdivrp
int3
rcl
mov
arpl
and
int3
fsub
test
xchg
push
insb
inc
imul
loop
mov
cld
pop
push
cmp
pop
mov
mov
pop
adc
adc
sub
dec
dec
push
dec
and
pop
orl
sub
push
cmp
nop
mov
cld
lock
out
enter
imul
jne
sub
cmp
movsl
or
push
loopne
push
push
stos
add
pop
out
cwtl
mov
adc
inc
add
mov
lods
jmp
mov
mov
loope
leave
sbb
dec
cmp
adc
sbbl
and
into
repnz
mov
mov
push
adc
test
mov
pushf
mov
out
pop
mul
or
adc
mov
scas
dec
sarl
loope
popf
mov
mov
jae
popf
and
xchg
daa
pop
js
and
jg
je
rcr
mov
orb
sbb
mov
fmuls
pop
or
outsb
out
cmp
pop
mov
not
aas
sbb
sti
lock
iret
sub
imul
test
pop
push
dec
addr16
jmp
xchg
inc
test
mov
mov
test
hlt
mov
push
xchg
push
out
add
int
jno
icebp
adc
data16
pop
ljmp
jle
inc
pop
xor
cli
fwait
cltd
jp
call
dec
pop
and
jno
jnp
jmp
shlb
pop
cmp
subb
xchg
push
pushf
mov
inc
or
inc
xchg
push
sub
aam
fadds
leave
sub
xchg
push
sub
jecxz
cmp
and
push
ljmp
leave
xor
std
movsl
shl
in
movl
add
insb
cmp
hlt
fdivs
data16
fidivrl
mov
mov
mov
in
jns
cs
ss
sbb
jmp
jno
pop
js
out
mov
and
inc
push
stc
movsb
jns
jg
scas
xchg
xor
pop
xchg
mov
pushf
ds
adc
test
loop
out
jle
ret
push
insl
and
jbe
bound
lret
jnp
inc
dec
test
dec
gs
rcrb
lcall
mov
sbb
xchg
sub
and
pop
mov
loopne
dec
les
icebp
pop
outsl
inc
sub
push
clc
ss
stos
push
test
xlat
jbe
push
mov
or
push
mov
add
mov
andb
mov
inc
sarl
clc
mov
mov
inc
hlt
ss
xchg
pop
pop
imul
incb
fistpll
xchg
cld
and
jo
sbb
add
cmp
pop
clc
aam
cmpsb
movsl
cmp
push
cmc
pop
hlt
cmp
imul
push
lahf
xor
fs
sub
pusha
dec
int
and
sub
mov
shll
push
xchg
jno
dec
sub
dec
jbe
fcomps
les
adc
shld
xchg
inc
xor
test
nop
mov
mov
sub
cmp
mov
xor
in
ficompl
daa
push
sbb
sbb
push
call
and
xchg
pusha
pop
roll
and
mov
pop
push
sub
adc
jb
adc
scas
and
mov
aam
mov
mov
ret
aas
out
jmp
scas
aaa
sbbl
cwtl
icebp
mov
cli
imul
inc
mov
add
out
inc
dec
jne
lods
lods
push
pop
mov
sub
dec
xor
cmp
cmp
pop
mov
mov
add
int
xlat
lret
push
addl
out
pop
popf
popa
pushf
inc
or
sub
xchg
jle
movsb
mov
and
lcall
aas
das
jnp
jl
xchg
out
mov
cmp
out
test
stos
mov
or
fists
xor
mov
arpl
xor
mov
push
mov
add
insl
mov
ss
and
repz
loop
imul
fwait
cmc
fiadds
cmp
fistpl
jo
test
push
aas
shl
jbe
adc
pop
lods
dec
mov
add
push
test
jle
adc
and
lods
and
xor
ljmp
pop
mov
xor
movsl
push
pop
mov
ret
jae
pusha
stos
shl
xchg
lret
stos
add
aad
mov
push
shrl
call
pop
pop
stos
mov
rcl
mov
inc
lods
and
and
mov
mov
sahf
jecxz
insl
push
fidivrs
pop
fsubrl
lods
push
lahf
fcomps
lea
test
in
adc
or
addr16
out
int3
fs
mov
xor
in
add
aaa
aas
sahf
lea
xor
jnp
jb
lret
push
pop
jo
jno
scas
sub
pop
stos
jmp
dec
and
dec
popa
pop
scas
mov
in
icebp
das
xchg
fadds
jns
jge
pop
adc
push
dec
das
repnz
jb
movsl
std
mov
fsubrs
add
int
jbe
repnz
mov
jge
insl
stc
mov
mov
lcall
inc
cmp
mov
add
dec
mov
jb
popa
movsb
xor
pop
sub
sarb
sbb
in
xchg
lock
cmp
addr16
cmc
dec
xor
in
push
stc
sbb
mov
fsubrp
mov
pop
clc
cmp
cmp
xlat
jle
test
xor
or
and
or
leave
xor
adc
popf
shll
pop
lock
fdivrs
addr16
jo
cli
push
pusha
out
push
rolb
jmp
fisubl
xchg
mov
jns
sarb
pop
inc
adc
xchg
add
outsb
xor
jns
mov
pop
das
jecxz
adc
mov
jnp
add
mov
push
cltd
mov
outsb
lret
ljmp
data16
inc
push
inc
jge
data16
inc
lods
gs
in
xor
push
sub
mov
jno
push
push
mov
add
in
popa
cld
int
dec
std
rcrl
xor
call
dec
mov
inc
jo
gs
repnz
popf
push
pop
pusha
add
loope
addr16
imul
enter
xchg
push
xchg
add
pop
mov
sahf
push
ret
inc
cmp
inc
sbb
fwait
in
les
sub
ret
xor
mov
adc
and
mov
incl
jno
fnstsw
aas
or
std
mov
mov
cmc
hlt
xor
lret
cmp
or
mov
mov
sub
rol
out
out
stc
or
daa
loopne
shll
jecxz
lock
dec
mov
scas
mov
rol
adc
dec
xchg
aas
sub
push
fsubs
cli
xchg
dec
push
lods
add
push
les
pop
ret
test
aas
sub
fnsave
push
sbb
pushf
flds
dec
aad
lock
mov
inc
pushf
xchg
fildl
push
push
lods
add
outsb
les
js
xor
lcall
mov
je
xor
int
sarl
sub
mov
ja
incl
pop
sbb
mov
pop
mov
push
test
dec
in
pop
movsl
inc
es
push
or
aaa
and
add
add
dec
nop
pop
inc
movsb
adc
dec
jne
jnp
hlt
cmp
mov
mull
pop
jno
mov
adc
lods
and
jns
cmp
outsl
je
mov
mov
scas
or
popa
jge
daa
jns
pop
sub
das
push
cmc
adc
xchg
adc
out
andb
push
sub
push
push
sahf
mov
outsl
jp
addr16
sub
outsb
arpl
xor
mov
pusha
shlb
and
mov
leave
data16
or
xchg
and
jb
xchg
xchg
jmp
xor
jnp
cs
cmpl
bound
imul
rolb
jp
add
mov
xchg
out
push
aam
xor
stos
cmc
fs
and
rolb
xor
pop
add
shr
rcl
mov
flds
jg
pop
shrb
test
fs
scas
out
xor
pop
dec
xor
dec
mov
xor
out
inc
cmpsl
sub
mov
mov
outsl
out
inc
in
jg
loopne
and
pop
adc
mov
pushf
dec
dec
arpl
js
int3
cmp
xor
cli
data16
pop
add
pop
push
ss
push
sub
dec
imul
nop
dec
cwtl
paddw
leave
daa
in
jne
or
hlt
fbstp
fnsave
pcmpgtw
push
jg
xchg
lock
imul
into
inc
lea
ja
cmpsl
imul
iret
rcrb
fiadds
rorb
xchg
pop
xchg
incb
add
outsl
mov
test
lds
mov
push
lods
dec
movsl
mov
xchg
fcmovu
pop
xor
mov
jae
jecxz
push
mov
jne
fmull
ljmp
jmp
ljmp
movsbl
sahf
mov
or
enter
daa
mov
popf
rcll
test
dec
dec
aam
and
fisubs
test
dec
or
test
mov
dec
out
loop
outsb
sti
pop
clc
sbbb
mov
pop
mov
call
not
pop
test
jno
mov
mov
sbb
jne
test
xor
or
push
ds
ffreep
xchg
add
add
lds
push
call
dec
mov
xchg
fnsave
femms
xchg
in
mov
mov
stc
les
lcall
or
shlb
fwait
std
and
mov
mov
lret
push
and
hlt
mov
fldcw
js
jb
mov
jmp
repz
pop
leave
lahf
call
jno
adc
sub
lock
jp
movl
clc
xor
gs
sbb
movsb
dec
push
cli
pop
push
push
mov
test
hlt
test
xchg
dec
fldl
je
arpl
xchg
mov
sub
fnstenv
sub
xor
cmp
xchg
mov
in
in
sbbb
lcall
and
sti
pop
xchg
push
jp
mov
sbb
scas
dec
mov
push
jle
adc
imul
adc
xchg
mov
adc
xor
fsts
in
enter
insb
pop
sub
add
inc
imul
pop
std
call
mov
test
dec
cmc
fcoml
xchg
aam
fcomi
add
lods
jb
enter
pop
push
mov
addr16
gs
testl
pushf
mov
dec
sub
mull
pop
mov
inc
ss
add
sbb
or
dec
jg
mov
push
inc
inc
aad
mov
insb
mov
push
inc
mov
scas
outsb
inc
cmp
cmp
xchg
pop
xor
aad
xchg
adc
cmp
and
jb
loope
jbe
cmp
xor
shl
cs
add
in
mov
sar
ss
mov
js
push
push
cld
sbb
test
xchg
stc
cwtl
in
mov
mov
sbb
xor
arpl
popa
insb
orb
icebp
sarb
dec
addr16
rcr
pop
push
jle
stos
add
lea
mov
mov
xor
dec
mov
adc
loop
pushf
add
lret
mov
mov
cmp
mov
and
dec
sub
mov
fisubrs
push
aam
lret
negl
daa
aaa
mov
push
push
and
pushf
xor
pusha
jbe
cmpsb
mov
add
lods
or
mov
js
mov
and
push
sar
nop
fwait
arpl
adc
inc
aas
mov
scas
scas
xor
lods
cmp
pop
inc
loopne
adc
adc
push
xor
iret
sbb
jb
fwait
jmp
iret
xchg
xchg
ucomiss
mov
jo
pop
pop
shll
xchg
jp
and
cs
cmp
andb
cmp
ret
pop
outsb
cmp
in
add
dec
jnp
aaa
insl
jg
jae
mulb
mov
out
xchg
test
cmp
andb
jno
or
cmp
jne
stos
jge
stos
ljmp
sbb
out
cli
push
test
test
pushf
jae
pop
lock
sub
xchg
lods
sub
les
rcrl
daa
inc
add
test
scas
mov
sub
pop
pop
adc
jle
inc
dec
jl
xor
inc
fdivl
and
push
je
ss
jo
fsubs
sbb
sub
mov
xor
jg
xor
mov
scas
mov
mov
add
out
leave
xchg
lret
lods
inc
ret
jle
je
cmpsl
or
aam
cmp
sahf
sarl
daa
in
in
arpl
mul
mov
lods
je
and
das
in
movsl
jg
inc
and
adc
movsl
mov
jne
mov
fwait
mov
pop
jg
dec
push
fs
or
flds
jecxz
cmpsb
xchg
jno
mov
shrb
and
daa
into
ret
stos
pop
sub
adc
aad
cwtl
push
sub
mov
jp
addl
mov
inc
bound
bound
subb
jp
mov
add
lret
cli
jns
push
stos
sbb
pop
sbb
iret
or
stos
mov
jns
dec
jg
xchg
pop
push
jecxz
pop
add
popf
loope
flds
out
das
int
jns
or
lds
fbstp
jmp
shll
mov
loop
and
push
ljmp
inc
scas
add
loope
jbe
call
jno
fadds
movsl
js
js
inc
adc
pop
jmp
jp
xor
fsubs
cmp
iret
jg
insl
clc
out
sahf
lahf
fisttps
jae
les
pop
mov
das
xor
fs
andl
sub
cmp
lret
std
cmp
cwtl
xor
inc
push
mov
stos
aam
in
sbb
mov
mov
lret
std
xor
xchg
or
clc
sbb
je
xchg
mov
push
sbb
or
xchg
das
xchg
inc
ds
add
jmp
xchg
jecxz
and
xchg
gs
not
cmpsl
pop
fnsave
arpl
je
or
jl
xor
cmpsl
in
sub
in
add
adc
dec
gs
mov
les
xchg
sub
ss
in
add
mov
inc
fstpl
dec
jne
adc
lds
mov
dec
mov
mov
and
xchg
jbe
nop
or
lods
fldt
roll
add
inc
fsubl
daa
mov
repnz
inc
xor
mov
mov
mov
stc
dec
mulb
sbb
mov
idiv
mov
testb
sahf
xchg
xchg
jbe
hlt
outsl
dec
mov
int3
ror
jmp
idivb
stos
das
lret
or
fdivrp
inc
cwtl
shlb
cmpsb
insb
xrelease
xchg
or
sbb
xor
sub
fisubl
pop
scas
xchg
loope
mov
cmc
mov
repz
pop
and
and
test
outsl
xor
add
push
dec
pop
lret
jp
dec
pop
mov
pop
mov
and
jns
or
push
jl
sarb
popa
xchg
and
imul
fiadds
fsubrs
add
roll
daa
test
jae
sahf
mov
xchg
test
ds
fcmovne
mov
cwtl
nop
in
xor
std
xchg
jmp
mov
lret
jns
jns
or
push
pop
jne
sarl
xor
add
inc
xlat
inc
xor
push
shl
xor
pop
xchg
sub
add
adc
stos
xor
outsb
push
or
mov
das
cld
repz
fisttpll
push
mov
push
push
push
or
mov
add
aas
iret
lret
iret
or
jl
mov
inc
mov
ljmp
inc
andb
sub
repnz
lret
or
ja
ljmp
test
gs
mov
daa
popf
jno
inc
mov
push
pop
out
sbb
cmpb
ss
sbb
dec
jno
in
lret
fcomps
and
pop
cmp
fsubl
xchg
and
rorb
add
loopne
xor
jae
les
jo
pop
inc
fcoms
and
hlt
es
pop
filds
inc
jb
jl
std
jmp
les
shll
lds
aaa
orl
vmptrst
mov
cmp
jecxz
setno
bound
lret
mov
pop
sahf
test
mov
pusha
fs
mov
sub
add
xchg
inc
rcr
pop
scas
fs
aas
sbb
je
push
imul
fldt
mov
mov
insl
sbb
incl
sub
xchg
mov
xchg
fcomi
js
push
clc
jg
xchg
hlt
insl
mov
mov
add
jp
pop
lds
adc
ljmp
inc
icebp
adcl
test
push
dec
ffree
mov
add
push
out
js
push
shr
aaa
add
popa
mov
nopl
stos
outsb
adc
push
in
testb
mov
rcrl
jge
mov
popf
std
push
jmp
or
int
adc
in
pusha
pushf
call
add
xor
and
or
out
dec
xchg
mov
mov
mov
daa
ss
dec
push
movsl
push
cmp
rorl
popf
insl
aam
inc
or
xchg
sub
jb
out
sbb
push
sbb
bound
xor
sbb
addb
cmp
mov
stos
xchg
mov
cmpl
pop
push
std
and
shr
or
shrl
xchg
or
xor
sbb
jecxz
cmc
movsl
cli
pop
xchg
cmpl
shl
cmc
dec
repz
xor
xchg
inc
jg
in
xor
decb
xchg
pop
jmp
fwait
mov
les
sbb
jle
cmp
pop
sub
xor
fsubrs
in
fisttpl
or
pop
push
or
xlat
cmp
mov
out
dec
ret
shr
mov
or
and
pop
rep
xor
or
dec
ds
std
in
mov
xor
pop
in
inc
outsb
pop
das
jns
lock
movzwl
daa
call
mov
inc
call
std
and
ret
cmp
int3
jecxz,pt
and
sbbb
cli
or
mov
stos
cmp
dec
sbb
push
fdivrl
jge
mov
ja
repz
cmp
cmp
sub
in
mov
add
mov
mov
pop
js
stos
cld
rclb
loope
in
sbb
outsl
movsl
mov
stc
sbb
mov
out
xchg
mov
add
incl
jb
mov
xchg
subl
test
add
pop
sbb
mov
insb
push
xchg
push
pusha
xchg
xchg
js
lret
mov
sub
out
xchg
add
addr16
aad
nop
cli
mov
xorb
outsb
ja
subb
test
in
mov
sbb
xor
or
and
jo
mov
rclb
or
int
dec
push
call
clc
outsl
aaa
arpl
loopne
insl
flds
movsb
cmp
xchg
cmpsb
add
ljmp
cwtl
sbb
insl
xchg
inc
in
sbb
jne
lods
loopne
jg
mov
outsw
sbb
ljmp
xchg
push
pusha
adc
lcall
shrb
test
and
pop
addr16
mov
fildl
push
and
jae
stc
or
sbb
xchg
stc
int
stos
nop
xchg
lods
pop
adc
pop
clc
pop
sti
fidivrs
inc
adc
cld
test
aaa
cwtl
mov
jae
repz
ss
jo
bswap
push
mov
pop
mov
fcoml
cmp
out
movb
out
in
cmp
mov
or
mov
pop
subb
dec
jbe
push
fstl
adc
cli
adc
cmpsl
lahf
scas
mov
fistl
stos
adc
add
stos
loope
inc
inc
sbb
insl
pop
ja
mov
sbb
jb
cmp
push
in
pop
test
inc
in
xor
xor
lcall
cmp
out
lret
sbb
rcrb
insl
cmp
icebp
cld
mov
cmp
test
cmp
ljmp
mov
or
mov
cmpsb
inc
cli
ja,pt
mov
cmp
call
jnp
lods
inc
mov
jne
lret
cs
push
inc
bound
lea
ja
adc
adc
cmp
sub
adc
lcall
aam
and
or
cs
or
sbb
jo
xchg
cwtl
xchg
sub
jecxz
repz
xor
pop
jnp
sbb
mov
and
popf
ss
pushf
or
cmpsl
add
mov
xlat
push
imul
andl
cmpsb
adc
lcall
push
adc
mov
popf
mov
iret
out
scas
idivl
clc
mov
lcall
jnp
xchg
inc
int
xchg
and
adc
jl
xchg
add
outsb
push
test
rolb
add
push
hlt
enter
or
and
fnstenv
mov
sub
cld
or
add
clc
sbb
xor
sub
mov
adc
clc
adc
loop
inc
cs
jno
dec
pop
jno
arpl
and
mov
dec
push
adc
ficompl
inc
mov
or
pop
lcall
ljmp
xchg
faddl
jno
mov
js
pop
loop
cmp
das
lahf
cmp
out
lods
int3
in
xchg
test
es
test
add
mov
insl
testl
stos
loopne
fstps
xor
repz
les
ds
out
jp
push
pop
scas
jns
push
add
jecxz
jmp
adc
into
xchg
stos
xchg
mov
cli
xchg
and
fadds
pop
out
inc
xor
fisubrl
jecxz
orb
inc
xchg
sub
dec
mov
xor
adc
test
cmp
fwait
cmc
sub
test
sub
lret
mov
fdivl
movsl
int3
movsl
call
push
roll
sbbl
jb
sub
lret
arpl
inc
xchg
mov
stos
fmull
je
insb
gs
add
mov
sbb
dec
lock
pop
das
xchg
pop
lahf
jmp
stos
sbb
sub
jp
pushf
inc
jno
sub
or
stos
dec
divl
pop
and
into
in
in
loop
inc
pmaxsw
repnz
jecxz
out
aam
das
sub
jmp
arpl
adc
xchg
add
stos
aaa
aad
or
dec
subl
lahf
dec
push
rcrl
xchg
pop
fisubs
mov
mov
stos
push
adc
cltd
movsl
gs
xor
xchg
leave
sub
pop
pop
cmp
sbb
push
dec
mov
stos
ret
add
xor
xor
xchg
xchg
fsubrs
push
fldt
cmc
sbb
xorl
test
cmc
cmp
fwait
pusha
stos
prefetch
int3
out
mov
inc
popf
sbb
dec
aam
or
mov
fst
xchg
movsl
pop
data16
ror
or
call
sahf
inc
or
sbb
bound
clc
mov
jae
loopne
sbb
and
xchg
stc
clc
popf
outsb
jno
fnstcw
sbb
inc
and
pop
cs
lods
outsb
add
mov
mov
or
pop
push
lds
mov
xchg
cmp
ljmp
popa
mov
inc
lahf
dec
sahf
fldt
and
outsb
std
in
cmp
lret
pop
stos
xor
xor
iret
cld
mov
lods
push
arpl
push
mov
lcall
cmpsb
fidivs
loop
cwtl
sbb
pusha
sub
es
or
jecxz
or
shl
sub
cmp
add
mov
enter
orb
sti
lcall
dec
pop
mov
insl
aas
xchg
dec
jbe
les
mov
cmc
shll
mov
pop
pop
stc
fbld
or
sbb
cltd
xchg
nop
mov
icebp
shrl
loope
rorb
jb
int
xlat
hlt
xchg
pushf
sbb
nop
shrl
dec
ljmp
clc
rolb
sub
sti
imulb
pop
fs
aam
mov
es
sbb
cs
push
fs
cld
push
dec
iret
push
jl
rol
inc
aam
push
clc
mov
repz
xchg
xchg
mov
push
and
icebp
and
rcr
out
xor
lock
add
mov
fldenv
cmpsb
fstl
lret
lahf
xchg
xor
in
fcoml
out
jp
pop
cmp
and
int3
mov
fwait
cmp
and
dec
lods
repz
into
out
pop
scas
movsb
jge
fdivp
jmp
pop
std
fsts
faddl
sahf
dec
jne
in
fistpll
pop
pop
sbb
bound
outsb
and
add
xchg
sub
notl
movsb
sbb
push
fs
mov
jmp
push
push
and
fnstsw
xchg
sahf
ja
vsqrtps
jmp
hlt
bound
mov
scas
and
popf
dec
lock
mov
lods
push
inc
pop
bound
jecxz
xor
and
negb
data16
mov
dec
fwait
xor
xor
mov
push
cmp
adc
scas
nop
mov
cli
cli
dec
mov
jle
repnz
fldcw
imul
pushf
cmpsb
mov
adc
lea
scas
xor
mov
idivl
inc
xlat
cmp
sbb
xor
jmp
or
xorb
loope
xchg
fcmove
into
adc
sbb
lcall
cwtl
ret
xchg
mov
fldt
and
inc
lods
dec
sbb
pop
mulb
aam
pop
mov
add
mov
nop
int
push
loope
adcl
out
and
popa
push
inc
orb
xchg
stc
std
push
pop
gs
jg
fwait
pop
cltd
bound
add
arpl
mov
fcomps
xchg
xor
insb
repnz
pop
jns
aam
rcrl
mov
cs
xchg
adc
ljmp
test
cmpsb
pop
fbld
pop
jecxz
jmp
pop
jl
and
jmp
call
nop
repnz
inc
mov
sbb
fdivs
adc
sbb
insl
les
sbb
sub
pop
mov
daa
pop
xchg
icebp
push
pop
stc
pop
mov
dec
inc
xlat
rcr
movsb
outsl
shl
into
pushf
out
and
clc
ror
and
inc
and
push
daa
repz
lock
push
std
and
dec
adc
in
call
fldl2e
cmpsl
mov
jge
mov
std
xor
and
call
jle
enter
xchg
loop
rcr
mov
pop
pop
in
xlat
mov
mov
fisttpl
xor
mov
aas
into
jl
inc
xor
in
or
jecxz
push
gs
jbe
testl
xor
test
inc
cltd
sub
inc
adc
lods
frstor
sub
cmc
fwait
int
outsb
or
sub
lahf
mov
stc
jb,pn
imul
in
icebp
es
and
jns
rcrb
call
loop
push
ficoms
cld
ja
mov
lods
mov
sbb
pop
inc
inc
je,pt
ss
fst
dec
je
pop
aaa
pop
ss
addr16
xlat
repz
cltd
cwtl
jg
pop
jle
adc
rorb
push
hlt
fsubrp
lods
dec
or
cltd
stos
sub
out
mov
arpl
lret
mov
add
push
jecxz
shrl
cmpsl
fsts
daa
fsubs
dec
xchg
mov
mov
mov
add
jno
int3
mov
outsl
mov
add
jp
int
dec
lahf
xor
inc
mov
mov
add
xchg
lods
mov
repnz
mov
scas
or
test
bound
ja
in
jnp
sub
dec
add
int3
jle
mov
ret
data16
lods
incl
pop
fdivrs
test
dec
mov
dec
jnp
outsl
push
fs
adcb
sahf
fnstenv
mov
lods
clc
data16
cwtl
pop
or
sub
jns
adc
push
incb
lret
shll
push
pop
lods
add
jb
and
sbb
test
mov
push
inc
xchg
add
in
or
nop
cmp
or
ljmp
sbb
xor
sub
cmpsb
and
adc
sbb
dec
fdivl
inc
das
ljmp
pop
dec
pop
xor
cmpl
ret
push
adc
lds
insl
add
push
cwtl
xor
mov
xchg
adc
ret
addr16
in
push
sbb
fiaddl
cmpsb
or
lcall
xor
test
aam
daa
in
mov
fs
mov
enter
popa
pop
jecxz
jnp
pop
das
mov
push
ds
adcl
ja
imul
push
movsl
pop
or
stc
jg
pusha
sbb
loope
push
addb
movsl
inc
jno
pop
mov
outsb
or
fcoms
out
out
jp
dec
jne
dec
das
push
outsb
pop
mov
enter
decl
stos
outsw
popa
xlat
cmpsb
sarl
loopne
inc
mov
push
sahf
and
out
add
je
xchg
pop
push
jl
xor
or
insb
ja
std
sbb
je
pop
pop
das
aad
or
ds
ljmp
adc
stc
int
data16
xchg
das
aad
xchg
adc
mov
les
mov
adc
xchg
sarb
nop
std
rol
cmp
cmp
ret
in
popf
inc
lcallw
iret
mov
jmp
push
xchg
mov
insb
in
jmp
outsb
add
outsb
push
pusha
dec
in
mov
stc
push
adc
jl
xor
add
cmpsl
xchg
mov
mov
pushf
jmp
jne
jmp
outsb
ja
lods
push
icebp
cmp
iret
into
iret
dec
adc
mov
xchg
loopne
movsl
mov
xchg
into
inc
gs
nop
rol
jle
sahf
in
inc
mov
sbb
pusha
xchg
xor
cwtl
aaa
jmp
in
mov
pop
cmp
or
or
adc
outsb
jae
pushf
div
fucomi
mov
or
clc
pusha
mov
je
je
lds
fs
mov
adc
sbb
mov
cli
lock
lods
loopne
inc
jmp
fsubl
sub
and
push
add
lret
addb
or
out
les
enter
mov
mov
jbe
dec
movsl
sub
gs
sub
xchg
sahf
mov
in
je
out
or
nop
cmp
divl
push
add
mov
jmp
mov
cmpsb
sarl
or
sub
dec
mov
xchg
jmp
subb
lea
mov
mov
cmp
mov
pusha
add
push
xchg
rcr
push
xchg
push
addb
and
mov
sahf
add
inc
adc
push
js
mov
sbb
sub
sbb
stos
sarb
fadd
rcl
and
push
jbe
sub
xchg
rorb
sti
test
int3
push
adc
mov
jo
scas
scas
pop
cmp
addr16
inc
js
stos
xchg
pushf
cmc
andb
int
in
dec
fwait
sbb
cmpsl
mov
jl
pop
aaa
cmp
sbb
js
mov
adc
and
mov
push
rcrb
in
arpl
push
xlat
cmc
cmc
sub
sbb
cwtl
mov
ret
arpl
fcmovbe
aaa
and
or
sub
leave
xchg
movsl
adc
add
data16
dec
jns
add
pop
sub
mov
xchg
and
dec
int3
test
xor
outsb
movsb
jp
int3
insl
loop
shrb
pop
fcoml
or
std
nop
std
mov
xchg
pushf
hlt
xchg
mov
fisttpll
mov
hlt
fiadds
push
je
sti
cmp
loop
mov
icebp
cmp
sarb
rolb
inc
add
pop
fs
xlat
push
ljmp
dec
jle
sub
or
fwait
andb
sti
sbb
adc
sub
sbb
jmp
lea
cli
arpl
in
pop
rcr
shr
and
fwait
data16
fistps
xchg
jmp
sbb
fs
outsb
shr
pop
movsl
mov
or
loopne
std
lods
jne
gs
cmp
and
jmp
cmp
sbb
cmp
pop
mov
pop
lods
sti
mov
sbb
fisttpll
push
stc
or
out
fnstenv
xchg
out
push
sub
mov
lret
mov
dec
pushf
out
mov
adc
mov
sub
push
mov
leave
xchg
xchg
and
xchg
fucomi
inc
dec
push
arpl
adc
aad
mov
mov
jae
mov
aas
sub
push
or
dec
ret
cmpsl
xchg
mov
inc
repnz
loop
je,pn
ja
push
cmp
or
lods
add
imul
inc
enter
sub
sbb
adc
mov
nop
sub
out
rcr
jge
movsl
std
lods
clc
xchg
daa
push
mov
sbb
sbbl
sbb
fidivrl
sbb
pop
rcrb
add
mov
sarl
sbb
inc
mov
fdivr
jnp
ret
inc
fs
inc
outsl
imul
repnz
lds
push
fcompl
sbb
jb
out
mov
push
int
add
es
mov
jb
sbb
mov
jo
xorb
aam
dec
cmp
les
popf
inc
shl
xor
popl
add
pushf
div
outsb
out
adc
pop
sbb
shll
mov
mov
idivl
into
mov
jle
incb
pop
test
bound
mov
nop
push
dec
ds
jnp
loop
and
or
push
test
shrb
test
inc
xor
cmp
test
fneni(8087
subb
jne
and
sbb
scas
sbb
dec
sti
ss
inc
push
pusha
dec
les
xchg
xchg
scas
pushf
gs
cmpsb
cltd
xchg
pushf
mov
shlb
loope
jns
fsts
in
ret
shlb
push
ret
sbb
in
xchg
loop,pn
lahf
xchg
mov
mov
sbb
pop
push
mov
sahf
pushf
sub
and
fs
cwtl
fwait
cmp
stos
push
bnd
push
into
call
das
and
jg
sbb
int3
push
adc
adc
inc
fwait
sbb
test
sbb
nop
lods
test
inc
adcl
mov
fsubr
stos
imul
inc
and
inc
xor
lret
fs
dec
push
ja
or
jbe
ret
outsl
xchg
cltd
ds
loop
rorl
cld
pop
cmpsb
rcrl
es
mov
jl
addl
xlat
fstpt
pop
and
push
ffree
fsubs
cmpsb
aam
insl
inc
lcall
sahf
lods
push
int3
adc
jo
cwtl
mov
or
jbe
cmp
push
testb
dec
mov
repnz
je
out
inc
sti
mov
xorl
mov
repz
or
test
movsl
lahf
and
or
pusha
pop
leave
pop
clc
dec
in
inc
push
inc
xor
fcmovu
jge
push
inc
rolb
sbb
dec
pop
rorb
jl
mov
adc
cmp
fcom
loop
je
xor
leave
das
rorl
stos
inc
fldt
cwtl
fldcw
mov
sub
xchg
fnsave
in
sub
idiv
jno
enter
js
aaa
pop
icebp
dec
cwtl
outsb
adc
pusha
xorl
leave
idivb
mov
jno
outsb
sbb
ss
inc
outsl
jge
mov
pop
lahf
xor
int3
hlt
or
loope
cmc
pop
popf
mov
jbe
lcall
push
mov
cmp
fsubp
mov
outsb
out
outsl
hlt
aas
cmp
rolb
push
inc
pop
ds
mov
mov
rorl
push
or
jecxz
dec
sbb
mov
xlat
push
psrad
mov
jmp
mov
arpl
movsb
push
arpl
mov
or
jb
and
xchg
adc
mov
fdivl
cli
test
sub
push
dec
faddp
es
fildl
test
syscall
pop
sub
cltd
xor
pop
lds
lods
loopne
stc
mov
adc
mov
popf
xor
adc
addr16
inc
pop
aas
cli
ret
adc
xchg
call
rorb
and
adc
dec
std
stc
xchg
int
lea
sbb
mov
mov
mov
sub
mov
or
ret
xchg
movsb
lds
mov
test
mov
push
out
cmp
ja
cmpsb
xorl
arpl
xor
std
sbb
pop
lret
pop
pushf
lahf
fwait
hlt
ficoms
lods
push
ja
ja
push
and
js
mov
out
mov
in
dec
add
dec
jne
popa
xchg
mov
lcall
jb
xor
xor
mov
push
cli
sbb
jle
mov
pop
pop
inc
in
cwtl
cwtl
rorb
arpl
ss
push
add
sbb
filds
movsb
outsb
ss
jnp
cmpsl
adc
cmp
mov
adc
rclb
pop
mov
jnp
les
adc
push
jnp
mov
sub
sub
lds
and
sbb
push
adcb
jmp
lret
arpl
out
ficompl
or
xchg
mov
mov
adc
sysret
mov
add
push
jnp
mov
nop
push
in
mov
adc
push
in
jp
movups
dec
cmpsl
mov
sti
mov
xor
xchg
pop
jo
mov
daa
mov
pop
xor
and
repnz
sbb
sbb
jle,pn
mov
and
out
adc
rclb
adc
data16
enter
je
jnp
mov
jl
sbb
popf
or
adc
lcall
sub
pop
fwait
mov
aas
cmpl
push
filds
rcl
pop
sub
pop
fistl
int3
and
inc
dec
cmp
and
jae
loopne
inc
fdivrp
jp
loopne
xchg
adc
test
ret
jg
xor
xchg
mov
in
mov
pop
sbb
jp
stc
adcb
mov
je
push
xchg
inc
adc
or
cmpb
jb
test
inc
mov
add
adc
leavew
sub
ljmp
inc
xor
xlat
and
pop
mov
xchg
inc
ret
fimull
and
call
sub
int3
sbb
shll
mov
jecxz
call
mov
ljmp
add
in
and
shr
mov
sub
stc
mov
sub
push
jg
into
loope
adc
dec
xchg
test
inc
pop
mov
add
xchg
dec
adc
cmpsb
aaa
pushf
rol
lret
sahf
mov
int3
jne
mov
inc
out
dec
outsb
pop
outsl
vmovq
rcrl
loope
jecxz
jmp
mov
clc
add
and
and
mov
push
aaa
inc
in
jns
fiaddl
mov
xlat
dec
jne
xlat
loop
sub
jl
fistl
xchg
adc
movsl
icebp
sahf
mov
test
aad
movsl
sub
mov
jae
xor
dec
sub
push
icebp
sahf
xchg
andb
push
mov
jl
inc
arpl
jae
jb
jmp
and
or
arpl
stos
xor
incb
fcompl
sbb
push
fsin
jns
push
repz
xchg
mov
push
cmp
lock
int
jle
fwait
scas
into
xchg
cmpsb
sbb
xchg
dec
xor
rcrl
scas
sub
push
jbe
xchg
xor
fwait
cwtl
inc
jbe
pop
nop
sbb
cmp
xchg
mov
out
sub
mov
jg
movsb
push
shll
adc
sub
xchg
add
xor
jae
movsl
xchg
and
out
cli
test
adc
xchg
popa
mov
movsl
push
xor
dec
sub
sahf
push
fiaddl
add
push
mov
ds
enter
imul
cmp
mov
mov
xor
aas
leave
lcall
test
xchg
pop
stc
subl
mov
sbb
add
xor
dec
dec
xchg
xor
xchg
mov
mov
cmpb
je
ss
pop
inc
jmp
jg
repnz
stos
roll
xchg
outsb
testb
repnz
mov
inc
in
jne
or
nop
jl
jns
sbb
fwait
xchg
sbb
add
lock
cwtl
mov
inc
mov
outsb
fs
fnstenv
filds
push
push
xor
lock
call
pop
mov
mov
arpl
xchg
repz
imul
add
arpl
sub
push
sub
mov
fdivl
push
cmc
stc
sub
xor
adc
mov
inc
pop
mov
jmp
xchg
scas
ss
add
nop
inc
sub
or
push
add
adc
and
xchg
jae
scas
fildl
add
or
mov
dec
lods
jbe
aaa
and
lea
cmc
aas
push
mov
dec
jp
int
pushf
dec
ficompl
jl
mov
jae
sub
enter
aam
and
arpl
lret
adc
xor
pushf
cmpl
imul
pop
xor
sbb
push
xchg
in
pop
outsb
or
or
cmp
or
jp
push
and
jno
adc
or
or
loope
push
or
fcmovu
fists
test
push
xchg
aaa
jbe
outsl
push
jnp
mov
cmp
xchg
mov
ljmp
shl
cwtl
mov
mov
add
push
jmp
ja
mov
fistpl
aam
das
lret
aad
dec
and
lea
cwtl
das
test
ret
pop
and
shrl
pop
and
sti
and
push
cmp
mov
pop
das
cmp
gs
js
rcrb
inc
jmp
adc
shr
inc
inc
mov
sti
aam
xchg
jg
and
adc
mov
pop
adc
cmpsb
pop
popf
pop
dec
negl
out
repz
andb
jle
jg
out
imul
mov
lods
mov
out
dec
std
sbb
ret
inc
jge
mov
jecxz
sub
inc
test
hlt
ss
cli
adc
inc
out
jns
dec
or
imul
inc
mov
add
aad
fbld
cmp
sarb
lret
scas
or
scas
push
jg
xor
xchg
xor
gs
xor
pusha
and
push
mov
xlat
insl
jo
mov
add
lock
int
add
scas
cwtl
mov
inc
sub
daa
cmp
adc
mov
mov
push
lahf
cmp
xchg
test
std
push
push
cmp
int3
repz
mov
repz
inc
mov
jno
pop
lods
into
xchg
jmp
cwtl
cld
jb
fwait
xchg
lds
iret
dec
cmpsb
out
pop
test
lds
ja
jge
cmp
mov
insl
mov
inc
dec
cmp
out
lods
cli
dec
sahf
std
add
ret
push
mov
sbb
mov
mov
stos
lods
out
add
lds
jbe
xchg
jge
fnstcw
jg
mov
addb
in
xor
push
pop
je
sub
loopne
clc
adc
xchg
shll
push
cmp
jbe
bound
jae
sub
inc
cmp
cmp
rorb
jbe
pop
loope
push
pop
sub
into
fistps
iret
mov
cwtl
aaa
std
inc
xor
subb
out
sbb
nop
pop
mov
fs
fdivrl
outsb
mov
inc
insl
push
sub
add
jmp
lahf
and
or
mov
push
add
inc
pop
add
nop
call
lret
jns
add
movsl
sub
fcoml
loope
out
dec
fistps
and
mov
insl
push
push
mov
ds
cmp
adc
aad
fisubrs
out
incl
pusha
lock
stc
cltd
and
bound
or
rclb
rorl
dec
cmpsl
pop
mov
adc
int
fnstsw
inc
dec
or
test
mov
mov
mov
inc
sbb
cmpsb
lods
xchg
pop
insb
sahf
sbb
std
outsb
sbb
popa
xchg
cmp
enter
scas
out
insb
sti
or
mov
iret
inc
dec
popf
daa
movsb
or
clc
fs
sbb
mov
xchg
mulb
fs
outsl
adcl
and
mov
jnp
sub
mov
jle
pop
fcomps
into
mov
lahf
jle
pop
and
cmp
mov
push
mov
cmc
dec
lret
pop
jnp
inc
pmaxub
jle
push
jbe
sub
xor
jns
lret
inc
push
inc
xor
sub
mov
or
dec
fmul
daa
and
pushf
dec
insb
fdivr
andl
or
dec
jmp
les
jnp
lea
jmp
aaa
jmp
ret
add
jnp
movsb
push
pop
mov
or
inc
xor
mov
popf
je
mov
das
push
ss
js
jae
ljmp
fst
and
jg,pn
bound
lods
cmp
pop
and
insl
je
inc
fcoms
loopne
jbe
pop
mov
xchg
add
mov
out
in
enter
jnp
add
jae
add
pusha
mov
rol
loopne
or
cld
out
sbb
roll
imul
xor
imul
mov
cwtl
out
dec
aas
out
mov
and
mov
faddl
movsb
nop
fsts
in
mov
insl
mulb
enter
dec
pop
scas
int
jb
or
bound
push
push
sbb
xchg
cmp
lret
mov
hlt
rcrb
lea
cmp
dec
mov
mov
xchg
fmul
cmp
add
xchg
push
cmc
mov
fnstsw
push
repnz
out
test
or
sbb
sub
mov
xchg
cld
les
pop
cmp
leave
ds
loop
mov
stos
lahf
andl
insl
push
mov
inc
mov
daa
ror
jb
shll
jns
xor
sbb
aas
mov
gs
in
shlb
add
xchg
lcall
pop
addr16
sbb
xchg
mov
pop
cmp
stos
push
stc
cmp
adc
xor
inc
les
sub
scas
iret
dec
jle
or
out
cmpsb
das
dec
or
push
in
stc
movhps
xor
pop
pop
xor
pop
and
fnsave
test
dec
adc
mov
outsb
sar
fsts
pop
outsb
test
xlat
insl
push
es
add
arpl
add
flds
cmp
ss
and
mov
fs
int3
stos
inc
and
jbe
xchg
mov
addr16
mov
xchg
cmp
js
out
jg
sbb
push
out
neg
imul
mov
dec
or
dec
or
jno
mov
cmp
pop
cmpsl
leave
dec
mov
decl
arpl
xor
mov
cmp
jge
adc
les
adc
sbb
or
push
orb
daa
inc
mov
call
rclb
jmp
gs
xchg
or
xchg
lret
dec
leave
xchg
sub
jmp
push
int3
mov
rolb
pop
int
push
scas
leave
sub
shrb
push
lret
mov
mov
cmp
loope
std
rcrb
mov
pop
adcl
les
mov
call
or
stc
cmp
push
scas
mov
inc
adc
xchg
call
jmp
out
pop
or
sbb
xchg
add
inc
rcll
cs
cld
add
leave
sub
push
mov
insb
or
sbb
hlt
fs
inc
cmp
imul
out
pop
ret
fstpl
mov
pop
lea
mov
es
inc
sbb
inc
pop
aaa
jp
add
cmpsl
pop
pop
push
fxch
xor
mov
mov
mov
cmp
and
push
aam
mov
jmp
xchg
cmp
mov
add
mov
stos
popf
xchg
in
xchg
push
sarb
outsb
dec
ret
pop
jo
es
pop
jmp
fdivl
aas
jo
orl
push
cwtl
out
adc
xor
mov
mov
mov
loope
or
clc
lds
or
jmp
arpl
ljmp
adc
cs
dec
fwait
dec
in
mov
jecxz
int
jmp
sub
mov
cmp
fidivl
push
pop
pop
jns
push
les
pop
insb
mov
and
xor
js
xor
pop
xchg
rorl
and
add
out
pop
add
iret
lcall
stc
adc
mov
lds
adc
mov
jae
inc
hlt
clc
inc
adc
shrl
jmp
push
inc
inc
mov
jle
cwtl
outsl
sub
mov
mov
popa
or
jle
sbb
loop
mov
cmp
xchg
scas
jmp
pop
ficompl
int3
das
insl
xor
push
pop
out
push
jecxz
dec
add
dec
add
pop
jle
rcr
dec
fists
je
cmp
push
lahf
lret
ljmp
insl
dec
xor
pop
push
mov
mov
add
cli
push
xchg
xor
gs
ret
arpl
and
flds
lret
xor
add
repz
cmp
adc
xor
ret
push
test
cmp
ret
inc
fmull
cmc
or
das
aam
and
in
add
in
and
inc
icebp
pop
in
pop
fcmovu
xchg
push
and
loop
cmp
sbb
push
cmp
and
jmp
out
sub
shlb
push
or
mov
dec
xchg
sub
lods
mov
mov
aas
fdivrs
xchg
jmp
lods
ljmp
gs
mov
jno
jecxz
aaa
xchg
xchg
dec
or
sub
pop
ja
comiss
mov
cmc
jg
movsl
or
mov
push
and
adc
adc
lahf
adc
inc
dec
add
mov
and
iret
and
in
cltd
int
movsb
sbb
insb
dec
adcl
into
xchg
jno
shrb
jbe
frstor
inc
adc
dec
out
xor
xor
mov
popf
or
lds
inc
stc
std
test
cmp
jne
cmpsb
cwtl
loopne
test
mov
sbb
dec
addr16
add
inc
pop
movsl
jns
dec
add
inc
adcb
loop
or
or
sub
hlt
enter
mov
shr
mov
call
xchg
hlt
or
xlat
and
dec
xchg
xchg
loopne
mov
push
loopne
sub
jbe
mov
jmp
cmp
adc
es
push
cltd
imul
orb
lock
mov
push
lods
lds
cmc
add
sbb
sub
mov
mov
inc
je
out
xor
sub
jecxz
adc
pop
outsb
jb
and
inc
imul
inc
imul
push
sbb
mov
aaa
adc
flds
js
repz
cmp
or
add
dec
adc
dec
aas
aas
cs
cmp
or
shrb
icebp
mov
lods
popa
push
rcrl
bound
popa
jle
hlt
aad
popf
fdivrs
pushf
rolb
mov
daa
mov
dec
mov
out
dec
cs
adc
cvtps2pi
add
xchg
push
les
adc
stos
rol
out
insb
ljmp
out
jnp
mov
mov
xchg
sub
sbb
mov
xchg
mov
jb
inc
mov
loope
xchg
sahf
std
push
lret
es
jecxz
adc
stos
or
out
gs
test
lods
fistpl
mov
insl
fists
shufps
aad
pop
fnstcw
xor
loop,pt
and
cmp
adc
xlat
punpcklbw
mov
ds
ja
mov
popa
and
push
mov
jecxz
cmp
cmpsl
mov
fwait
pop
mov
aaa
jmp
jbe
and
push
call
test
and
lahf
lret
cltd
ss
test
iret
mov
jge
push
sahf
mov
jae
std
pushf
mov
fadd
cmp
es
and
adc
mov
sub
jbe
xchg
loop
andb
lret
lahf
push
sub
test
inc
inc
dec
lea
cwtl
lods
loope
push
mov
pushf
xor
sub
loope
les
mov
dec
js
outsb
out
mov
xor
cmp
test
pop
icebp
mov
adc
das
fdiv
pushf
aaa
fcoms
jecxz
outsb
pushf
sbb
add
inc
out
stos
lcall
pushf
lea
mov
iret
mov
inc
sub
jle
pusha
leave
and
enter
adcl
insb
jmp
xchg
xor
bound
enter
add
fstl
pop
mov
addr16
stos
fwait
mov
sti
mov
lods
dec
push
mov
leave
xchg
pop
loopne
sbb
cltd
scas
inc
pop
xchg
jecxz
out
mov
out
xor
jmp
cli
decb
dec
lods
std
scas
sub
inc
cmp
lock
imul
cmp
and
mov
xchg
push
mov
gs
test
dec
int
inc
hlt
arpl
jne
in
push
pop
pop
push
sub
mov
aaa
insl
inc
scas
jp
lret
mov
fists
xchg
cmpsb
mov
pop
cmpsl
cmpsl
xchg
push
push
int
mov
or
out
sbb
ret
cmp
imulb
cmp
fiaddl
loop
xlat
mov
and
mov
cli
or
and
push
and
and
iret
cltd
or
mov
lods
and
add
push
jo
jns
mov
fwait
dec
add
push
add
roll
xlat
xor
sysexit
mov
xchg
iret
push
adc
add
xor
nop
pop
sarb
dec
sub
add
or
push
repnz
mov
sub
fistpl
dec
test
pop
push
ss
mull
push
lret
cs
mov
add
inc
out
xchg
das
mov
adc
push
int
fxch
or
adc
add
lea
jmp
insb
xlat
icebp
jb
xor
jae
into
movsb
stc
push
xor
sbb
mov
test
mov
add
or
pop
jge
push
dec
xchg
sub
shrl
pop
inc
loopne
js
xlat
mov
rorl
mov
mov
cli
or
cld
icebp
lods
mov
xlat
and
xor
xlat
int3
arpl
cmp
js
andl
add
lea
test
mov
sbb
cmc
xor
and
sahf
inc
mov
rcr
adc
cmp
mov
test
lock
jge
jb
push
dec
adc
fstl
dec
leave
rcrb
sbb
or
pop
lahf
add
inc
pusha
inc
popa
dec
adc
es
gs
imul
adc
not
sub
ljmp
dec
negl
add
dec
es
pop
out
stos
mov
cmp
mov
test
pop
cs
push
mov
std
lahf
push
push
jp
push
hlt
iret
call
gs
mov
and
cmp
dec
adc
and
push
arpl
add
testb
adc
js
test
lea
mov
loope
inc
test
fisubl
ss
adc
sbbl
xor
bnd
jb
push
inc
add
cmp
lret
pushl
fcompl
sbb
or
jb
and
das
fnstenv
and
push
dec
jmp
loopne
and
xor
mov
sbb
mov
cmc
add
jns
imul
jl
mov
sub
xchg
jo
dec
xchg
popa
jbe
mov
sbb
mov
call
out
das
jp
push
test
lods
aam
mov
jl
mov
jg
jbe
push
add
call
push
mov
imul
sbb
jmp
sti
cli
jne
mov
add
add
sbb
jl
arpl
mov
lea
pop
imul
dec
pop
fbld
lret
add
loop
shll
adc
push
or
cmp
clc
cli
addr16
add
rorl
notl
aaa
ret
mov
or
aam
nop
les
inc
fcoms
push
sub
mov
dec
or
lods
rclb
xchg
mov
into
aaa
test
inc
je
rcl
jno
xlat
pop
js,pt
xchg
pop
out
rcpps
int3
push
int3
in
movsl
loope
and
inc
xchg
or
out
imulb
and
cmp
jge
pop
mov
sbb
xor
rcrb
pop
sarl
push
pusha
fidivrs
rcll
or
lea
lods
cmpsb
es
movsb
scas
dec
lret
jno
fistl
out
addr16
loope
xor
jge
cmpsl
cmp
lea
inc
xor
add
pmaxsw
sub
ret
xchg
cmc
das
or
or
ds
jne
fcmove
stos
mov
xchg
add
pop
fldcw
pop
insb
gs
enter
or
pop
xor
jp
adc
push
data16
rsm
pop
mov
jp
jb
jo
mov
and
pop
aam
into
jp
dec
cmp
fnsave
incb
xchg
gs
mov
mov
and
jmp
adc
dec
jp
xchg
lret
cmpsl
insb
int3
call
hlt
out
push
mov
jmp
adc
mov
in
repnz
xor
mov
loop
shrb
ficoms
nop
fiadds
imul
ja
ljmp
push
aaa
inc
hlt
adc
dec
xchg
push
pop
dec
in
dec
dec
mov
or
push
push
xchg
or
lods
insb
sbb
testl
pusha
fsubrs
pushf
add
sbb
out
jmp
pop
fdivrs
inc
jge
pop
and
ss
xchg
daa
js
mov
xchg
js
adc
cmp
inc
or
dec
xor
movsb
jge
outsb
ljmp
jle
xchg
lcall
or
loope
dec
or
cmc
cmp
xchg
push
rolb
bound
out
cld
add
fdivrl
clc
divb
js
cmpsb
xor
fcoml
repz
out
mov
pop
fimull
inc
es
mov
not
fldl
and
pop
popf
cltd
mov
test
inc
cmp
and
jb
or
cmp
pop
pop
inc
adc
aam
jle
and
dec
fcmovne
mov
mov
push
jnp
inc
cli
cmp
shll
pop
mov
dec
enter
hlt
call
push
jae
scas
mov
xchg
dec
sub
lods
xchg
push
or
out
movsl
or
dec
add
pop
jb
js
push
notl
sub
sub
adc
mov
pop
dec
lock
and
xchg
jge
lret
pushf
fisubl
and
adc
pop
pop
xor
mov
loop
and
adc
jge
js
mov
xchg
pusha
or
pop
mov
cli
push
xor
add
sub
push
stos
sub
lret
or
push
jo
in
adc
push
jmp
jne
jbe
ret
xchg
ja
in
rolb
aam
pop
sub
lret
nop
lock
jg
shr
mov
popa
test
mov
roll
cmp
loope
sti
sbb
mov
mov
push
mov
mov
and
clc
and
and
lock
popa
sti
sub
dec
mov
nop
add
xor
clc
notl
add
push
outsb
xchg
notb
or
push
mov
adc
repz
sub
fcmovnb
mov
addl
lds
push
outsb
push
jg
mov
lahf
sub
or
dec
stc
and
cmp
jl
xchg
xor
cmp
js
push
cmpsl
and
out
xchg
mov
in
hlt
leave
aaa
push
bound
aad
jb
lods
fnstcw
loopne
cmp
outsb
pop
pop
pop
jmp
in
rclb
push
mov
cld
sub
inc
mov
iret
shll
data16
push
xorb
das
test
cmpsl
jl
mov
lods
and
shlb
mov
loope
test
dec
pop
ficoms
fbld
xchg
std
and
loop
bound
scas
inc
fwait
imul
fistps
or
daa
sti
mov
scas
test
cmp
dec
add
sbb
xchg
xchg
xor
mov
repz
xchg
fists
sbb
stos
cmp
push
mov
movsl
repz
cld
sub
mov
sbb
sbb
or
cwtl
test
test
inc
mov
bound
dec
add
push
fldt
sbb
shlb
dec
xchg
lret
aad
adc
shll
adc
out
pushf
in
or
roll
mov
mov
scas
xor
push
hlt
push
xchg
imul
icebp
in
xor
arpl
pop
jle
cltd
repz
aas
xchg
jecxz
inc
mov
addl
cmpsl
sub
lahf
es
pop
mov
fs
xor
dec
les
enter
dec
shl
call
or
movsb
icebp
jge
xlat
jnp
ret
cmp
mov
push
sbb
test
iret
mov
fdivrl
loopne
push
jne
js
decb
push
daa
push
test
xchg
sbb
dec
pop
cvtpi2ps
push
mov
fistl
addr16
scas
push
jo
mov
sub
push
fsubrs
adc
pop
push
icebp
or
mov
out
cmp
adc
xchg
call
xchg
int3
pop
mov
gs
stc
push
add
cwtl
roll
mov
dec
pop
into
cmpsl
mov
dec
pop
roll
dec
addl
loop
jge
lods
out
call
pop
xor
pop
idivb
mov
testb
sub
add
xchg
jge
mov
pop
inc
dec
lods
nop
imul
out
stos
bound
sub
insl
in
push
lcall
mov
adc
stos
cltd
mov
popf
outsb
ss
mov
sbb
xchg
fstp
sbb
xlat
repz
sahf
jnp
pop
dec
sub
lret
add
popa
inc
and
pop
pop
clc
js
jge
push
jns
sub
nop
jo
lds
sub
pushf
cmp
rcll
cli
cmp
in
aaa
scas
popf
mov
out
mov
shld
sbb
in
negb
shld
push
rcr
dec
jge
inc
push
adc
pop
aad
cmp
leave
mov
push
mul
mov
in
inc
shl
enter
pop
adc
adc
sub
pop
push
cmp
jae
popf
aam
adc
repnz
iret
cmc
fcmovnu
mov
cld
int3
fildl
int3
mov
cmpsb
mov
jo
fidivs
out
es
xor
loop
mov
push
lcall
jno
pop
test
scas
and
dec
dec
in
cmp
movsl
pusha
pop
rcll
jb
mov
gs
sub
cmp
inc
and
cmp
mov
add
int
fs
xchg
js
ljmp
sub
fldl
adc
pop
cmp
stc
fbstp
call
mov
cli
dec
mov
push
sbb
lods
popf
inc
jne
mov
sub
jne
imul
inc
iret
sbb
movsb
push
push
xlat
pop
popf
lods
aad
cwtl
fbstp
push
popf
xor
mov
int3
dec
sub
sahf
xchg
nop
shlb
leave
subb
out
out
jl
mov
mov
lods
sbb
lds
pop
loopne
pcmpgtb
sti
imul
cmpsl
icebp
in
cmp
add
aas
and
cmp
enter
aad
aaa
mov
cmp
xor
aam
ja
test
fisubs
bound
xchg
loopne
jb
sub
add
stc
xchg
inc
xor
or
add
jle
jbe
mov
movsb
ja
fidivrs
shl
add
pop
jno
aas
sub
mov
ret
cmpl
ja
mov
cltd
or
xchg
cld
jge
push
leave
add
pop
mov
add
sbb
mov
dec
or
je
cmpl
mov
loope
nop
push
popf
cmc
pop
dec
lret
rcr
sub
ljmp
testl
add
xrelease
fldcw
dec
fs
jle
mov
outsb
cmp
push
out
inc
or
push
arpl
sbb
iret
mov
cmp
lret
leave
ljmp
addr16
js
mov
aad
cmp
jle
or
push
mov
scas
push
add
addb
mov
and
add
jg
insl
inc
mov
int3
xchg
push
incl
sub
sahf
cld
pop
xor
pusha
shrb
jge
and
cmp
setge
add
test
push
ds
out
or
or
mov
push
lock
dec
test
inc
loop
pop
jle
aaa
dec
push
xor
push
mov
setg
cmovl
push
scas
mov
or
push
es
adc
fisubrs
push
inc
push
and
andb
in
xor
push
cmp
dec
add
mov
icebp
and
inc
dec
repz
inc
inc
xor
jmp
pop
and
inc
repnz
insl
insb
adc
mov
iret
icebp
or
xchg
push
mov
subb
mov
aad
popa
outsb
out
ror
rcrl
pop
test
std
outsl
add
iret
cmp
xor
jbe
lea
fstps
push
mov
push
xor
in
daa
and
repz
das
or
shrl
aad
jle
xchg
outsb
pushf
pop
sahf
sub
xchg
inc
test
push
xchg
sub
sar
add
ds
cli
pop
sbb
out
out
leave
push
mov
movsl
pop
outsw
cli
fcompl
cmp
aas
testl
dec
daa
or
lcall
cmp
bound
rcll
in
or
xlat
or
scas
mov
ljmp
bound
hlt
mov
popf
sbb
in
push
mov
inc
push
jg
jge
mov
push
mov
mov
cli
or
adc
mov
outsl
mov
insb
out
lds
negb
or
icebp
insl
xchg
roll
sbb
dec
int3
lret
out
aas
xor
xor
std
into
mov
popf
xchg
pop
add
xor
loope
inc
push
sub
data16
add
lea
lock
imul
xchg
inc
push
outsl
cs
mov
lods
push
mov
fisubs
out
xor
adcb
mov
mov
mov
stc
out
mov
pushf
sub
xchg
outsb
hlt
loope
cld
mov
fldcw
hlt
sub
dec
scas
pop
xchg
cmp
pop
cmp
push
mov
inc
inc
mov
add
inc
lods
mov
cmp
pusha
mov
push
mov
cmp
addl
adc
lock
sub
mov
mov
jp
stc
call
add
push
aaa
xor
shr
push
sbb
cmp
pop
adc
sub
movsl
loope
pop
and
cwtl
cmpsl
mov
arpl
clc
adc
xchg
sbb
push
fldl
lret
jae
add
inc
push
repnz
mov
aas
sub
pop
sbb
imull
and
push
or
jno
das
fmuls
jle
push
inc
mov
mov
sub
xchg
insl
stc
pop
imul
dec
or
push
and
mov
loop
mov
push
cwtl
cli
sub
xchg
sbb
mov
adc
or
dec
push
fs
mov
and
xchg
jecxz
cltd
out
push
test
push
setbe
adc
mov
add
or
pop
fwait
js
or
cmp
jo
and
push
cmp
aas
sub
pop
sbb
jno
jbe
cmp
es
int
pop
jno
pop
push
clc
into
inc
pop
sbb
cmp
pushf
push
and
lds
fdivl
push
xorb
pop
pop
scas
mov
je
inc
inc
mov
test
sub
jns
fisubl
shlb
cmp
jmp
mov
ds
aam
stc
add
push
mov
jbe
out
jmp
and
mov
adc
shll
popf
test
add
js
xchg
in
shrb
xor
jp
push
cmpsl
rcl
and
or
sahf
jnp
ror
repz
aaa
fadds
lret
aaa
push
lock
pop
cmc
mov
lea
loopne
and
cli
sbb
inc
push
add
jge
add
sub
sahf
out
sub
mov
lret
and
sub
pop
fcmovu
add
add
cmp
adc
adc
roll
lods
and
push
int
in
pop
ljmp
cmp
repz
int
pop
outsl
mov
int3
mov
and
fucomi
mov
subb
ja
mov
jbe
mov
inc
adc
mov
inc
and
cli
xchg
ds
dec
lcall
jo
xchg
push
jae
xor
jo
and
loope
mov
jae
xor
sub
xor
lea
xor
xchg
mov
jge
pop
pop
sbb
dec
mov
lods
mov
pop
add
pop
rol
and
cld
scas
test
pop
pop
ss
fwait
push
lcall
lock
rcll
sub
jne
leave
test
push
jne
cmp
push
test
aaa
aaa
push
mov
loop
cltd
dec
stc
inc
mov
or
rorb
ja
push
sti
inc
sub
push
add
pop
pop
jmp
popa
enter
jl
mov
repnz
in
mov
sub
cmpsb
sub
in
jno
rcrl
in
push
jns
scas
pop
iret
sbb
sbb
inc
or
pop
pop
sbb
push
je
loopne
inc
jns
mov
and
xor
dec
rorl
mov
mov
push
les
pop
jmp
fisubs
cli
and
shld
adc
xor
sub
call
mov
sti
and
jecxz
sub
in
rorb
jno
enter
add
jle
or
shl
cmp
int3
fildl
movsl
ret
mov
adc
enter
pop
das
repnz
clc
subl
push
pop
push
test
stc
cmpsb
sub
sub
mov
sub
es
pslld
add
lds
js
mov
fsubp
repnz
xchg
xchg
dec
lea
jns
loopne
dec
sbb
arpl
and
stos
frstor
in
lcall
mov
repnz
sub
loop
push
ss
dec
inc
lret
adc
mov
mov
pop
adc
cmp
mov
movsl
fwait
loope
out
sub
mov
daa
hlt
or
push
scas
xor
cmpxchg
xchg
sub
jge
subl
adc
add
mov
cltd
sub
cld
jp
fcmove
sbb
push
stos
jle
sarb
pop
push
pushf
scas
push
fidivrs
adc
outsb
push
push
stc
int3
sahf
add
nop
xchg
negl
xor
adc
lahf
imul
inc
push
adc
int3
cmpl
push
lds
sub
clc
dec
xor
mov
sub
cld
cmp
sahf
cmp
in
test
out
clc
fwait
outsl
mov
in
and
repz
push
imul
pop
out
insl
and
adc
pushf
xor
mov
pop
lret
or
inc
and
mov
fs
movsb
add
movsl
xchg
outsb
jo
jecxz
fiadds
mov
jmp
cli
adc
xor
jnp
mov
add
cmpsb
int3
fcompl
jbe
into
inc
jle
adc
aas
mov
ljmp
inc
mov
jecxz
ss
xlat
sbbb
jae
add
insl
fadds
xchg
je
stos
inc
je
lcall
fcomi
lods
xlat
dec
xchg
insb
dec
inc
scas
or
jne
mov
pop
dec
xchg
bound
push
mov
sbb
aas
cmp
cmc
mov
test
cmpsl
pushf
dec
jns
push
inc
sahf
mov
movsb
clc
sbb
mov
mov
int
shll
jl
mov
out
cld
cmp
outsb
cmp
es
cli
insb
xor
xchg
mov
fistpll
js
clc
cmp
gs
adc
xor
leave
mov
mov
shll
sbb
sub
lea
imul
outsl
les
shl
jne
sbb
aam
xchg
jbe
sahf
mov
or
pop
mov
cltd
sarb
push
push
loopne
mov
subl
adc
popf
repnz
xchg
divb
outsl
cmpsl
add
cmp
jnp
out
stc
adc
jbe
out
pop
push
outsb
in
aas
xchg
cwtl
mov
push
sbb
or
mov
dec
jl
push
leave
dec
mov
loopne
cmp
xor
out
flds
shl
minps
xor
dec
cmp
aaa
and
jp
xor
fbstp
cwtl
test
out
int
mov
pop
dec
ds
fisttpll
mov
xchg
nop
push
jnp
je
mov
ret
pushf
insb
dec
add
mov
dec
push
pop
daa
fistpl
mov
ret
mov
scas
cltd
leave
jmp
add
mov
data16
cmp
addr16
and
ja
out
les
sahf
out
pusha
dec
mov
adc
adc
sahf
inc
pop
and
cmp
sub
repnz
mov
cmpsl
iret
jmp
andl
jmp
add
and
jo
imul
or
fiadds
sub
sbb
mov
jae
aad
push
jno
xchg
mov
daa
sub
outsb
rcr
into
jl
adc
add
test
xchg
or
xchg
out
shll
sahf
adc
xchg
loope
xor
loopne
jnp
inc
mov
stos
mov
pop
push
arpl
dec
jge
lret
and
outsb
and
dec
mov
push
sbb
jg
cmp
dec
push
pop
jns
subb
cmp
mov
sub
xchg
pop
adc
shll
push
sub
mov
push
and
fwait
iret
or
stos
andb
inc
imul
and
or
mov
cmp
outsl
fstps
dec
mov
jle
push
andb
fadd
nop
mov
fldcw
jns
push
xor
inc
or
scas
sub
sub
scas
dec
loope
inc
inc
test
rcrb
daa
insb
and
and
jnp
movsl
int
jle
add
insl
dec
sbb
les
sbb
pop
dec
push
idivl
push
push
insl
dec
push
fisttpll
pusha
xor
arpl
pop
popf
sbb
out
mov
cltd
and
jle
in
push
mov
pusha
jecxz
js
mov
lcall
lods
xor
int3
leave
popa
hlt
pop
inc
outsb
icebp
push
lock
test
pop
insb
cltd
aaa
shl
enter
mov
ret
mov
inc
enter
jnp
mov
iret
add
push
and
xor
rolb
pusha
lods
mov
jb
mov
movsl
and
loopne
add
xchg
cmp
jno
push
and
add
jp
or
inc
mov
xor
scas
inc
scas
inc
jg
ret
test
aas
jmp
cli
pop
cltd
nop
adcl
adc
ss
cmp
xchg
daa
rorb
out
enter
cltd
sub
push
dec
in
xor
jp
adc
mov
nop
adc
lds
lods
inc
mov
sub
out
negb
ss
call
into
mov
movsb
add
xchg
ret
inc
outsl
mov
das
or
fnsave
in
dec
xor
in
add
push
cwtl
aad
dec
aam
mov
sbb
lret
ss
mov
adc
pop
add
sbbb
dec
mov
clc
ds
cwtl
xchg
adc
cmp
roll
mov
shlb
inc
jo
insb
push
add
inc
mov
mov
or
or
dec
add
sti
dec
rol
subl
and
jne
pop
or
out
and
push
notb
subb
cld
jecxz
lods
mov
aas
rorl
rclb
sbb
sarb
pop
lds
inc
adc
cli
jmp
das
or
xor
mov
adc
inc
test
or
in
add
and
cmpsb
pop
jo
popf
out
lea
ds
dec
in
punpckhdq
jb
or
cmpsl
xchg
jmp
cs
jecxz
test
jecxz
es
push
das
xchg
pop
mov
call
mov
mov
movsb
fcomp
jae
mov
out
mov
add
mov
lock
fsub
add
cmp
dec
or
push
lea
mov
aam
mov
or
test
push
ss
dec
lret
imul
fwait
jno
mov
aas
testb
inc
popa
stos
mov
das
mov
rep
cmp
mov
sbb
ss
int
add
rorb
pop
inc
dec
fcoml
cmpsl
out
movsl
adcl
insl
jnp
jno
loope
pop
pop
mov
daa
jmp
cmc
cld
ds
pop
imul
stc
dec
mov
cmp
sub
imul
or
pop
mov
lcall
in
jnp
lret
test
sbb
jns
arpl
cwtl
push
cmpsb
fldt
push
das
jl
mov
inc
popl
inc
bnd
xchg
push
add
cmp
mov
je
in
lret
stos
push
cmp
push
sbb
pop
jle
sarb
repnz
insb
test
dec
sbb
cmpsb
ds
jecxz
jp
or
pop
in
and
stos
push
mov
int3
enter
bound
das
movsl
pop
std
fadd
popf
push
mov
mov
add
jmp
sbb
sub
incl
fwait
mov
xor
scas
repz
sbb
add
xchg
mov
xchg
test
mov
mov
jnp
jae
enter
jp
clc
leave
jns
sbb
les
inc
mov
frstor
mov
je
lods
je
mov
inc
push
mov
int3
pop
popf
mov
xor
mov
mov
lahf
movsb
rorl
dec
jnp
and
cwtl
insl
ss
stos
xchg
gs
cvtps2pd
sbb
cmp
adc
mov
mov
scas
jnp
cltd
ja
jmp
mov
xchg
jno
xchg
inc
mov
xorl
and
mov
divl
mov
mov
sbb
jp
lods
mov
je
cltd
mov
out
addr16
por
flds
jae
stos
in
dec
add
jecxz
inc
push
and
jg
ljmp
out
jl
or
or
xchg
sti
fsubrl
mov
ljmp
dec
out
adc
pop
pop
outsb
testl
mov
pop
cmp
adcl
fnsave
xchg
loopne
or
sub
dec
mov
out
mov
mov
xchg
popf
pop
mov
mov
xchg
add
mov
mov
adc
iret
cmp
or
cmp
xor
push
test
bound
test
cld
shr
add
and
push
and
fildl
int3
scas
lret
fsubs
lret
loop
out
lock
scas
xor
call
insl
movsl
mov
mov
test
mov
pop
mov
pushf
lret
gs
lds
lahf
sub
mov
jge
dec
rolb
sub
std
inc
push
daa
repnz
out
and
push
sub
repz
loop
ficoml
pop
clc
mov
jns
mov
sbb
adc
pushf
xor
and
pop
inc
rcrl
xor
adc
sub
add
pop
push
out
xor
dec
negl
xorb
fs
push
popa
inc
divl
hlt
xchg
add
and
ds
mov
xor
jnp
jns
jo
loope
jbe
mov
out
insb
ret
bnd
test
push
xchg
sub
push
out
rep
add
push
fcoml
jle
fisttpl
dec
push
clc
xchg
add
jbe
lea
lds
mov
mov
xor
sbb
or
sub
sahf
mov
inc
or
sbb
push
hlt
xor
dec
lfs
pusha
or
jl
mov
mov
mov
and
cltd
in
cs
lods
mov
ljmp
insl
inc
mov
jl
mov
pop
adc
test
jl
int3
arpl
icebp
xlat
jge
lahf
cmp
pop
push
push
ds
roll
fdivrs
cli
xchg
inc
jp
sub
je
sbb
mov
and
fs
popa
xchg
push
xchg
outsl
cmp
or
push
fistpl
fwait
les
mov
in
push
cmp
sbbl
outsl
in
xor
mov
arpl
adc
insb
dec
or
xor
sub
inc
jecxz
mov
inc
xor
mov
push
out
push
mov
fadds
dec
popa
aad
outsl
ds
inc
gs
sbb
out
cmp
fstl
movsl
enter
out
call
mov
push
mov
mov
cmp
mov
stc
xchg
shrl
cmp
out
ds
cmp
mov
pop
pop
lds
or
jnp
aaa
or
dec
cmp
mov
fistps
xchg
jnp
push
jecxz
cmp
aaa
pop
mov
sub
cmpsb
xchg
icebp
or
dec
mov
test
stos
jnp
test
fsubs
sbb
addr16
in
sbb
mov
sbb
mov
test
ljmp
cmp
adc
inc
jg
loopne
and
nop
lret
pop
cli
fidivrs
xor
pop
lcall
add
popa
jl
jp
mov
mov
mov
test
insb
cmp
idiv
dec
pop
sub
xchg
add
xor
mov
sahf
mov
push
adc
xchg
stos
jns
ret
ficoms
enter
sbb
push
sub
pop
adc
sbb
lcall
in
shr
in
scas
mov
and
shll
sbbb
pop
dec
nop
xchg
inc
daa
je
xor
dec
aas
inc
lea
andb
pop
mov
cwtl
mov
or
xor
inc
jb
pop
lods
xchg
mov
jge
and
std
and
iret
shrb
loopne
push
xor
sbb
mov
fdivr
fsubl
mov
ret
aad
cwtl
pop
cmp
mov
pop
js
test
popf
sahf
pop
pop
dec
daa
sbb
jno
in
ds
mov
mov
xchg
add
jle
out
enter
cmpsl
repz
pusha
cmc
in
incb
cwtl
je
insl
stc
xor
jg
int3
imul
jl
pusha
lret
xchg
out
inc
arpl
test
cmp
mov
push
jecxz
mov
les
jne
test
mov
cmpb
cmpsb
movsb
lcall
pushf
in
in
mov
xchg
mov
aad
daa
in
test
ret
mov
push
push
test
xchg
imul
imul
mov
aad
jle
push
push
cwtl
stos
sahf
enter
ja
xchg
push
push
or
sub
mov
push
and
into
lret
xor
mov
sub
pop
sub
add
cmp
stc
lods
inc
xchg
xchg
xor
adc
test
lret
add
sbb
add
adc
das
idivl
ds
and
dec
add
out
and
dec
lds
lcall
mov
rcr
and
sbb
not
out
ficompl
insl
popa
aam
xor
cmp
inc
ljmp
jecxz
mov
mov
pop
cmp
cmp
ja
vmread
lret
out
push
mov
push
push
pop
sbb
dec
dec
roll
imul
sbb
cld
add
leave
pop
dec
push
jp
add
sti
fcoms
popa
cwtl
jb
jb
add
mov
push
jecxz
mov
xor
jae
mov
xor
iret
and
rclb
les
pop
lcall
inc
jns
dec
aas
push
shr
les
cmp
jmp
stos
stos
ljmp
lods
xchg
push
inc
inc
sahf
in
adc
mov
cmp
fst
add
jne
adc
subl
xor
sarb
push
mov
mov
xor
fdivrp
adc
xlat
adc
or
sarb
mov
in
sahf
adc
das
iret
dec
xor
push
mov
int3
stc
sbb
in
out
popf
add
or
ss
lds
sub
xchg
adcb
out
lcall
push
cmp
mov
mov
pop
mov
mov
pusha
and
sti
xchg
push
xchg
sub
fldcw
push
insb
filds
xchg
lret
inc
ficompl
je
mov
stos
std
adc
nop
push
fwait
mov
push
pop
aam
out
jne
mov
sub
xor
xorb
pop
sbb
xchg
imul
fnstsw
fcoml
in
jno
cmp
xchg
jb
jno
jne
std
inc
icebp
shl
push
arpl
les
add
mov
sub
imul
cmp
outsb
jns
sbb
aam
add
cmp
mov
mov
pop
cmp
cwtl
xor
vmread
xchg
cwtl
mov
call
fisubl
incl
in
out
hlt
scas
mov
clc
mov
pushf
dec
adc
push
mov
insb
pop
xor
add
insl
pop
cmpsb
dec
in
addr16
int
or
leave
imul
mov
cmp
popa
outsl
mov
inc
pop
cli
jb
lea
mov
dec
pop
repnz
aas
jle
scas
sub
decl
cmpsb
rep
jo
lret
insb
ds
pop
pop
xor
mov
dec
sbb
outsl
mov
clc
outsl
les
cmc
lods
fstpt
or
idivb
pop
out
cmpsb
ds
or
pop
jbe
imul
shr
jmp
pop
xchg
mov
adc
pop
or
pop
movl
sbb
sbb
jge
cmp
xchg
imul
lock
inc
push
dec
dec
nop
xchg
nop
fisttpl
sub
jle
xchg
clc
push
leave
ss
sub
xor
cs
cltd
lret
push
aaa
cmp
fucomi
aad
jecxz
lods
or
cmp
notl
fwait
rcrb
out
push
mov
sbbl
std
jp
xor
mov
test
dec
int
loopne
insb
mov
subb
sarl
mov
out
sub
mov
jp
es
cmp
sbb
jb
dec
push
mov
mov
mov
rclb
out
adc
sub
mov
sub
dec
add
lret
in
push
cmpb
or
in
add
in
bound
mov
scas
ret
mov
outsb
mov
xchg
addl
mov
xchg
inc
pop
push
out
mov
loope
js
xchg
dec
fidivl
inc
jg
sahf
mov
fdivr
test
sbb
xor
fstps
jno
and
leave
push
test
and
add
in
loopne
or
lods
dec
and
sahf
sub
jno
ljmp
xorl
cmp
lret
sbb
idivb
xchg
fs
lcall
movsl
jns
insb
mov
jno
lea
loope
mov
ror
mov
jecxz
test
cmc
and
cli
fadds
mov
jbe
movsb
jnp
mov
push
cmp
dec
dec
pop
mov
cld
adc
std
mov
adc
jne
in
xchg
add
push
bts
xchg
push
ds
cs
pusha
movsb
in
push
or
cli
add
ljmp
cmp
mov
in
cwtl
inc
cwtl
cwtl
cli
lret
sub
jne
xchg
outsl
roll
inc
adc
jbe
mov
mov
or
sub
cmc
fdivrs
or
aas
movsl
and
lods
and
push
andl
aas
std
dec
sbb
jno
pop
adc
ljmp
mov
or
cmp
pusha
push
xor
push
insb
push
and
or
fisubs
pop
test
and
loop
cmp
cmpsb
push
ret
mov
cltd
pop
mov
sub
add
fwait
xchg
jbe
mov
data16
xchg
icebp
sub
fwait
push
test
cmp
mov
xchg
xchg
dec
popa
mov
push
dec
or
rclb
test
cmpl
out
dec
gs
or
jne
sbbl
sub
sub
lock
jbe
fwait
pop
in
popa
stos
test
int
lds
cltd
dec
sub
rcl
dec
aaa
inc
jns
and
or
adc
enter
push
hlt
sbb
add
leave
test
mov
out
push
test
adc
add
leave
push
ret
inc
or
fwait
in
push
andl
sbbb
cld
sarb
sti
xchg
rsm
sbb
lea
push
and
mov
add
std
neg
fists
cmpsl
les
int
incl
ret
cmp
pop
add
xor
pusha
sub
inc
add
sub
cltd
jae
push
ret
adc
jl
adc
inc
ss
shlb
adc
jp
jg
cmp
adc
aam
add
jns
xchg
sti
dec
mov
outsl
push
dec
adc
aas
pop
pushf
jmp
mov
push
ret
shrl
pop
test
or
setp
imul
mov
jns
outsl
or
sub
out
jnp
cwtl
lea
xor
sub
push
pop
inc
ret
xlat
mov
lret
cmc
mov
push
add
push
adc
inc
fildl
pop
cmc
loop
or
das
fcomp
xchg
aam
cs
outsb
shll
sub
movsl
test
cmp
fldcw
xor
lcall
mov
roll
sti
mov
mov
dec
int
inc
gs
add
add
jne
mov
outsl
mov
jno
jmp
popfw
mov
fisubs
mov
cmp
pusha
add
aas
arpl
fs
or
xor
jge
push
mov
or
mov
ret
shlb
push
jp
bswap
cmp
stos
cli
jo
cmp
mov
aas
inc
popa
mov
jno
popf
dec
ret
test
imul
js
jb
mov
popa
sbb
movsl
int3
cltd
cmp
call
cmp
rolb
pop
int3
shr
stos
mov
adc
sbb
inc
fmull
sbb
jns
popfw
iret
faddl
data16
rcll
in
cmp
test
xor
dec
pop
mov
cmc
in
out
and
mov
pop
pop
jmp
ds
in
cld
icebp
xchg
lret
scas
adc
sbb
sbb
lds
push
xchg
mov
lds
icebp
incl
das
cs
scas
xchg
rep
mov
fcmovnb
ficompl
xchg
dec
cmp
sbb
inc
iret
mov
sbb
mov
int
mov
xchg
shlb
repz
arpl
mov
mov
xor
cmp
xchg
lcall
sbb
mov
sbb
int
and
mov
or
loopne
cmp
jmp
or
dec
push
bound
or
push
dec
orb
dec
sbb
stos
out
mov
dec
add
xchg
dec
pop
lret
mov
stos
cltd
jmp
xchg
stos
or
dec
loope
dec
pop
add
popf
mov
test
ja
mov
adc
mov
lods
pop
gs
ret
insl
sub
fs
movsb
push
pop
pop
shll
lahf
pusha
inc
fisttps
xor
cmp
dec
cmp
rcr
xchg
push
hlt
sbb
xor
jne
loope
ss
xchg
fcoml
push
mov
jecxz
bound
ficoms
lds
scas
push
call
add
mov
mov
sub
mov
scas
mov
pushf
outsb
out
iret
cmp
pop
sti
pop
dec
fcoml
bound
pop
dec
insl
std
fwait
push
add
fld
adc
cmp
das
cmp
dec
aad
sub
test
mov
and
fsts
xor
mov
sub
push
and
insb
mov
sbb
cmp
data16
sub
xor
add
in
sbb
jne
jns
pushf
ret
fwait
jge
sub
adc
sub
movsb
testl
mull
into
test
add
cmp
and
into
push
movsb
mov
xchg
push
repnz
inc
and
xor
pop
xchg
aam
dec
loopne
cmp
cmc
cmp
jae
sbb
ret
cwtl
shrl
test
dec
cmp
mov
and
in
push
mov
cltd
mov
dec
enter
out
stos
nop
repz
rcll
addr16
mov
mov
loopne,pt
adc
or
dec
paddusw
int3
pop
mov
ja
jnp
stos
loopne
dec
mov
std
in
mov
sub
lea
mov
dec
out
ljmp
mov
mov
imul
push
in
and
phaddsw
lea
jecxz
fstpl
adcl
mov
ret
mov
call
aam
or
adc
rclb
and
faddl
mov
push
add
pop
dec
pop
sub
jmp
out
aam
pop
mov
stos
jle
add
aam
loope,pt
dec
inc
mov
into
push
scas
fildll
test
repnz
jnp
out
inc
loopne
filds
xchg
int3
stos
loope
jo
outsl
sbb
dec
jg
test
call
inc
fsubrs
cmpsl
add
insb
inc
lret
push
les
lret
pop
icebp
mov
adc
jns
fbstp
adc
and
mov
pusha
mov
repnz
int3
push
sub
ret
scas
scas
push
std
mov
test
rorb
inc
jmp
mov
ret
adc
push
test
cmc
lds
jae
pop
xor
cmp
push
add
gs
fisubrl
ret
inc
mov
sbb
push
andb
xchg
mov
ds
cmpb
jno
rcr
inc
xchg
das
or
js
aad
cmp
inc
cmp
sub
js
mov
dec
push
dec
aaa
xor
lahf
std
bnd
push
shlb
in
pop
push
call
std
mov
into
inc
sbb
mov
dec
add
dec
fistpll
popa
mov
dec
add
xlat
insl
jbe
cwtl
cmpsl
dec
rcrl
mov
int3
sahf
je
inc
test
inc
cli
inc
cmp
mov
cwtl
mov
push
loope
mov
dec
fwait
xor
imul
fisttpl
lock
or
dec
mov
add
or
pop
jmp
and
cltd
pop
hlt
and
xchg
jne
jns
or
mov
cmp
fsubs
out
add
sbbl
xor
in
inc
pop
inc
dec
arpl
mov
dec
adc
jp
sarl
lock
or
int3
jbe
lods
in
add
lcall
or
cltd
inc
xchg
cli
add
insl
sar
ljmp
push
sbb
dec
cmp
push
jecxz
lock
or
mov
adc
lea
out
popw
aam
inc
mov
fimuls
xchg
adcb
xchg
cmc
rorb
test
add
ljmp
aas
pop
jp
mov
mov
add
repz
inc
xchg
test
push
icebp
add
mov
and
sub
lret
or
sarb
inc
mov
mov
jno
xchg
adc
mov
test
out
push
aas
xchg
dec
lcall
mov
cmp
add
push
scas
mov
pop
outsb
mov
sub
icebp
inc
xchg
mov
jmp
movups
push
scas
jg
cld
rcl
sbb
int3
std
cmp
cwtl
sub
out
pop
xor
aaa
pop
mov
fidivrl
mov
xor
dec
lret
add
sar
pop
fisttpll
insl
in
mov
xchg
rcrb
call
cmp
dec
lock
jge
xlat
sbb
subl
mov
out
fcmovnbe
mov
sbb
adc
inc
xor
fidivs
mov
fists
ret
pop
add
push
lcall
int
cwtl
sub
and
into
lock
test
cmp
ss
mov
das
daa
pop
cmp
dec
xchg
call
cmp
adc
outsl
mov
arpl
les
xchg
jle
movl
mov
dec
ret
ss
or
push
ljmp
out
and
xchg
mov
adc
outsl
mov
das
sbb
jecxz
mov
pop
movsb
cmpsb
pop
adc
mov
jb
int
push
inc
leave
inc
scas
cmc
ror
add
cs
scas
mov
daa
js
mov
and
inc
jecxz
data16
cmp
inc
mov
add
addb
mov
dec
cs
je
shr
stos
andb
popf
pop
subl
fwait
add
icebp
add
jl
iret
add
js
xor
sbb
lahf
lahf
fs
dec
sbb
fcmovne
and
sahf
sub
and
dec
shlb
or
sbb
push
out
mov
andl
push
add
push
pop
cmpsl
mov
xor
pop
cmpsl
jns
js
sub
jo
lods
loope
cmp
mov
jnp
mov
adc
cmp
hlt
inc
scas
lret
xchg
stos
lea
pop
inc
cmpsl
movl
pop
cmp
lods
push
mov
sub
add
xorl
and
pop
mov
sbbb
in
add
mov
test
out
daa
out
test
and
test
pop
adcb
imul
mov
mov
pop
fsubrs
xlat
loopne
xlat
jo
mov
cwtl
test
pop
cs
xor
sub
arpl
sub
sbbl
dec
mov
leave
lods
pushf
out
cmp
int
inc
sub
out
and
mov
push
shrb
jl
shl
shrl
pop
inc
push
mov
inc
sbb
or
push
mov
add
clc
mov
adc
mov
jle
and
dec
jle
and
mov
mov
sbb
or
and
mov
xchg
jnp
inc
push
clc
mov
into
mov
mov
pop
cs
fucomi
jne
mov
cli
incb
fnstenv
sti
and
ljmp
xlat
adc
mov
je
xchg
adc
jecxz
cld
into
and
xchg
mov
lahf
scas
scas
dec
sub
jb
jecxz
shr
mov
mov
xor
rolb
in
inc
loopne
stos
test
fst
xchg
lock
jmp
pop
sarl
js
sbb
andb
push
ss
dec
pushf
adc
push
outsb
mov
out
nop
enter
push
movl
sarb
jne,pt
test
xchg
in
or
xchg
push
int3
cmp
cltd
cmp
imul
data16
sti
push
negl
inc
push
mov
aad
adc
jno
outsl
daa
jnp
and
test
xchg
and
cltd
pop
sarl
jae
aad
dec
std
mov
adc
sub
mov
mov
std
lds
mov
or
and
or
xchg
nop
test
xor
xchg
test
xchg
pop
shll
ss
cmp
mov
into
shrl
nop
cld
pop
je
mov
sbb
dec
add
xlat
lods
jae
rol
push
xchg
testb
pop
xchg
fwait
jmp
push
push
jb
jmp
cmp
inc
sbb
fsubl
iret
movsb
add
mov
jecxz
or
fcom
or
test
test
jnp
sti
notl
nop
stos
loopne
and
dec
xchg
fadds
out
pop
mov
les
mov
mov
call
neg
ja
out
cltd
mov
mov
xor
int
out
fidivrs
inc
mov
imulb
es
int3
shrl
int3
push
pusha
lgs
enter
sbb
xor
fbld
jg
das
jns
pop
lret
fs
mov
jnp
daa
dec
mov
and
inc
mov
jns
in
test
test
xchg
popa
jne
mov
leave
rolb
adc
icebp
jp
test
dec
aad
icebp
and
out
cmpsl
mov
mov
sarb
enter
push
mov
xor
jecxz
push
orl
xor
jp
in
bound
mov
mov
inc
aas
pop
ud1
push
fistpll
adc
ret
sub
mov
and
xchg
rorb
xchg
popf
and
xchg
jae
sub
or
icebp
dec
iret
inc
cmpsl
hlt
push
jle
dec
cmp
adc
aaa
rcrb
fists
mov
cmp
sub
das
lret
ss
in
cmp
stos
cmpsl
lds
jne
push
mov
call
mov
fdecstp
sbb
push
bound
lcall
fmuls
jmp
std
dec
cltd
mov
mull
pop
sbbb
test
mov
insl
imul
push
es
in
mov
push
mov
jmp
pop
or
ret
xor
es
inc
and
xchg
pop
jb
lods
mov
fisubl
and
imul
aad
jecxz
insl
aam
js
jge
mov
stos
fwait
inc
hlt
cmp
aad
lahf
mov
dec
add
add
jb
in
js
jge
add
adc
sub
mov
mov
fstpl
xor
scas
jp
push
xlat
cld
aam
cmpsb
push
addr16
nop
insl
loop
imul
xor
data16
adc
xchg
ja
jecxz
cmp
push
mov
lods
xchg
stc
loop
dec
loope
jg
test
xchg
scas
bound
inc
dec
cmp
aas
and
pop
mov
adc
adc
sbb
clc
or
out
xchg
or
insb
mov
xchg
xchg
pop
in
pop
aaa
in
jae
mov
shll
mov
mov
arpl
psubd
bound
xchg
orl
xlat
in
fstpt
pop
jnp
nop
and
mov
in
iret
cs
mov
int3
pop
cmp
mov
jnp
jb
inc
cmp
fldcw
les
jecxz
fs
iret
mov
mov
add
xchg
mov
push
jp
push
std
push
push
subb
mov
cmpsl
inc
repnz
jnp
lods
out
inc
imul
arpl
sub
push
je
leave
cmp
ljmp
into
ret
pop
add
inc
popf
sbb
out
lds
xchg
xchg
in
adc
sub
in
out
into
mov
jo
mov
bswap
push
ffree
lods
mov
sub
jne
dec
cltd
in
sub
int
jb
mov
dec
xor
jne
mov
mov
scas
shrb
mov
inc
adc
inc
shlb
jns
push
dec
std
bound
rcrl
leave
cmpsl
pushf
xchg
sahf
mov
xor
mov
cmp
test
xchg
rol
cld
xchg
mov
xchg
cld
push
in
push
gs
xor
fisttpl
mov
mov
fwait
push
jl
xchg
mov
push
mov
je
sbb
add
std
adc
mov
pop
ja
ss
cmp
adc
into
insb
repz
pop
outsl
repz
jno
jp
imul
out
xchg
and
pop
pop
and
ss
jne
dec
in
jge
push
mov
inc
push
stos
jne
repz
lods
pop
ds
inc
ds
jne
es
stc
js
sti
mov
mov
rcll
out
mov
jmp
xor
push
mov
dec
xchg
xor
push
adc
jnp
mov
pop
imull
xor
push
rorl
fdivr
fwait
popf
jne
xchg
mov
popf
test
jg
adc
cmp
or
mov
ds
in
cmc
std
out
addr16
push
mov
pop
jo
test
shll
push
and
push
xorb
popf
fmul
aad
in
push
andl
adc
cmp
and
inc
inc
loop,pt
in
test
pop
mov
add
pop
test
lods
leave
jo
jae
xor
add
xchg
cmp
and
dec
fldcw
sub
out
mov
xor
roll
sbb
and
shr
hlt
test
mov
fisttpl
dec
adc
cmpl
inc
mov
testl
jmp
jns
add
and
jecxz
sbb
push
add
xchg
jae
jnp
scas
xor
scas
stc
je
jbe
xchg
sbb
dec
or
jmp
cli
dec
les
push
push
mov
pushf
add
jmp
xchg
lahf
in
mov
fldl
into
stos
ljmp
pop
dec
pop
enter
jno
sub
rolb
scas
popa
inc
xorl
out
inc
popa
xor
and
sbb
inc
ja
push
inc
inc
enter
repnz
enter
cli
adc
mov
jge
mov
jmp
sub
je
pop
mov
or
mov
lea
stc
adc
stos
fs
adc
pop
rcrl
rcl
out
sub
mov
dec
and
mov
xchg
sub
cmp
orl
les
outsb
gs
xchg
rolb
aas
push
add
cs
rcrl
in
addps
out
add
aam
test
movsb
sub
or
adc
xor
add
ljmp
cmp
cli
sub
adc
mov
fdivrl
inc
popf
mov
xchg
fcmovne
jecxz
sti
mov
aas
sub
lret
mov
and
cmp
out
mov
dec
out
and
pop
addr16
sbb
inc
adcb
xchg
stc
mov
mov
lahf
ds
imul
push
or
ret
hlt
test
fstpt
inc
or
adc
cmp
ficoml
vmovsldup
xor
or
cmpsb
inc
repnz
push
aas
mov
sbbb
rcl
pop
iret
jnp
mov
sub
sub
test
dec
sub
adc
push
lock
mov
cmpsb
adc
mov
sar
div
sti
jnp
xlat
mov
enter
int3
xchg
add
scas
inc
mov
jbe
mov
ret
imul
cmp
push
jp
mov
loop
adc
js
nop
outsb
fisubrs
es
push
sub
out
mov
sbb
cmp
sti
test
jecxz
lods
mov
test
adc
pop
mov
out
and
rorl
push
int
cwtl
shlb
mov
aam
int
loopne
mov
cltd
push
cmp
bound
cmp
fmull
mov
and
cmp
loop
movsb
cmpsb
sbb
push
xchg
mov
xor
ds
pop
ljmp
icebp
sbb
cltd
mov
into
mov
vunpckhps
cwtl
fists
sub
jp
in
dec
jge
jp
popa
jno
ljmp
pop
in
inc
cmp
add
lds
ss
pop
insl
jae
popa
jno
int
pop
nop
pop
out
ficompl
jge
push
or
push
pop
inc
cltd
in
sbb
mov
xchg
lock
mov
xchg
sbb
imul
clc
mov
lret
mov
out
std
loope
jle
insb
mov
mov
jle
cmc
xchg
adc
adc
subl
out
leave
scas
cmp
mov
leave
daa
jb
mov
dec
dec
adc
fidivrs
popf
dec
mov
movsb
mov
test
inc
movsb
push
nop
add
xor
mov
lods
sbb
sub
sbb
iret
push
xchg
out
push
push
dec
push
sub
mov
sbb
rcll
add
add
mov
cmp
cmpb
xchg
dec
clc
pop
push
out
push
mov
imul
push
shlb
add
xor
outsb
addr16
stc
sub
mov
adc
dec
push
cmpsb
ljmp
jp
inc
xchg
rorl
outsl
test
shlb
sub
push
sbb
xlat
mov
ss
push
push
mov
push
xor
pop
sbb
loopne
push
lcall
sahf
jae
out
sub
aad
cs
imul
and
movb
pop
lret
outsb
and
sub
pop
testb
pop
push
sub
fstpt
in
push
lahf
pop
mov
sar
cmp
push
bound
lods
int
stc
or
sub
daa
jl
in
push
sbb
jmp
out
xchg
das
dec
mov
mov
inc
adc
loop
lock
mov
imul
push
icebp
mov
jnp
cmp
xchg
push
addb
jnp
xor
jp
lods
movsl
sbb
nop
jl
sub
out
sbb
xchg
frstpm(287
xchg
leave
aaa
loopne
inc
adc
jl
inc
jle
adc
or
xchg
sbb
jno
sbb
mov
pop
xchg
repnz
and
xor
mov
loope
test
add
pop
mov
dec
and
js
or
sahf
or
push
jns
mov
xor
and
sub
jno
inc
sti
and
outsl
bnd
jb
cli
push
icebp
push
sbb
lret
dec
xchg
insb
daa
jmp
jnp
inc
call
pusha
xchg
test
adc
mov
mov
cs
mov
aaa
xor
stos
mov
sahf
mov
jge
sbb
mov
xchg
push
pop
cmpsb
mov
test
adc
shll
adc
adc
sub
or
js
incl
lret
insb
lock
inc
enter
sub
into
xchg
inc
shrl
mov
pop
test
mov
mov
subb
push
imul
in
imul
dec
inc
or
jne
mov
stc
cmp
pop
shl
sbb
je
push
les
subb
hlt
fldt
imul
nop
gs
and
mov
sub
andl
icebp
ret
sub
std
xor
and
ret
jp
lds
adc
int3
pop
mov
mov
daa
jo,pn
inc
sahf
sub
dec
push
xchg
xchg
and
and
mov
and
out
imul
test
sbb
jo
inc
fucom
icebp
das
mov
pop
dec
push
cmpsb
sub
add
aas
or
aas
mov
or
nop
add
jecxz
sbb
mov
and
pop
pop
cmp
cmc
pop
add
cwtl
pushf
in
adc
lods
mov
int3
sbb
pop
mov
pop
scas
jo
pop
mov
ja
mov
sub
out
test
dec
cmp
mov
pushl
mov
aaa
ret
pop
pop
movsl
mov
mov
mov
xor
push
xor
dec
push
pop
mov
out
lds
xlat
xchg
fisttpl
mov
and
mov
jno
jbe
mov
sbb
fsts
daa
aam
cwtl
arpl
push
cmp
leave
mov
not
mov
loop
inc
in
mov
add
jg
jnp
jb
test
jmp
fwait
mov
and
or
mov
jle
sub
nop
aaa
out
movsl
push
adc
clc
push
stos
cmpsl
test
scas
aaa
xchg
pop
mov
icebp
stos
push
xchg
mov
mov
mov
mov
xor
push
dec
adc
pop
test
add
adc
xchg
mov
lahf
rorb
mov
cmp
push
lret
xorb
popf
push
sbb
roll
push
addr16
daa
ret
jl
cmp
xor
push
mov
popf
push
add
cld
aam
xor
push
popl
fcomip
aad
mov
lods
or
jbe
adc
imul
mov
leavew
aam
xor
sbb
ret
push
in
xlat
int
jne
aad
aad
mov
int3
cmp
sbb
scas
pop
fistpl
and
rcl
mov
test
mov
jns
lret
stos
fistpll
sub
sti
roll
addr16
int3
in
dec
popf
lahf
jmp
jno
arpl
fistps
pop
test
insb
mov
mov
lahf
out
iret
imul
adcl
xor
mov
add
mov
bound
cs
loope
mov
sbb
sub
xchg
xchg
dec
inc
enter
clc
shrl
dec
fwait
lea
movsb
cltd
add
leave
jbe
nop
gs
xchg
loop
xor
pushf
or
xor
loope
fimull
push
in
mov
sub
push
iret
cmc
icebp
sub
cmp
icebp
sub
lods
push
add
call
shrl
push
or
ret
mov
jo
mov
push
push
nop
test
lret
loop
inc
cmpb
mov
addb
rorb
int3
fdivr
push
sub
pop
adc
outsb
mov
sarb
adc
mov
inc
mov
shl
inc
push
repz
sbb
ret
movsb
aam
insl
into
inc
inc
or
push
lcall
aas
add
fistl
pop
add
sti
idivl
fsubl
xor
xor
jge
mov
or
icebp
inc
cltd
inc
adc
pop
sub
xchg
test
jmp
sub
mov
sub
add
inc
ljmp
hlt
inc
adc
rcrb
jg
mov
sbb
fsub
mov
xor
inc
in
int3
fstl
fadd
mov
dec
cmp
fs
jno
fisubrl
pop
into
adc
mov
outsl
inc
bound
cmp
dec
pushf
in
aam
push
adc
sub
negb
loope
movsb
push
dec
mov
ret
jmp
and
xor
mov
test
leave
imul
imul
push
push
arpl
aaa
fldcw
push
pushf
sub
mov
cmp
add
add
pop
pusha
pop
xchg
xchg
cmp
decb
movsl
lds
fs
inc
push
mov
or
push
mov
lret
sarl
mov
sub
loope
outsl
nop
mov
popa
jge
insl
sbb
mov
mov
pop
pop
ss
push
inc
jecxz
cmc
push
mov
rcrl
mov
mov
mov
dec
or
test
mov
nop
pop
dec
leave
cs
repz
mov
adc
insl
xor
adc
xor
mov
inc
xchg
rcll
xchg
cmp
lock
dec
jno
or
cs
pop
mov
xor
or
push
and
dec
shll
enter
mov
loop
mov
aaa
je
loopne
ss
sub
repnz
cmp
xrelease
loop
dec
sub
clc
popf
xchg
int3
jge
and
outsb
pop
dec
pop
ja
pop
scas
sub
dec
and
int
push
and
ja
or
inc
lahf
js
mov
test
jl
in
adc
push
cmp
push
in
fldt
sub
push
inc
sbb
fbld
ja
cmp
mov
dec
dec
mov
pop
pushf
pop
sbbb
sti
xor
frstor
cs
in
in
scas
cmp
mov
lret
add
cmpl
enter
ss
xchg
and
jg
sub
or
adc
sbb
into
out
xor
jnp
popa
mov
or
mov
xlat
xor
lcall
xchg
pop
push
frstor
mov
mov
ss
clc
inc
add
mov
xchg
cs
in
shr
cmp
nop
dec
pop
repnz
aam
pop
and
or
mov
mov
cmp
and
mov
rclb
ret
jp
fs
lret
js
cltd
inc
xchg
mov
ds
pop
cmp
test
negl
inc
jp
fcomp
call
fisttpll
mov
mov
add
add
cs
out
lea
js
sbb
fwait
jl
mov
xor
aas
sub
call
ret
mov
gs
push
jne
inc
scas
es
out
and
fstps
loope
pop
dec
xchg
enter
mov
mov
jns
scas
pop
js
test
push
imul
jae
ret
sbb
pop
aas
cltd
incl
data16
add
mov
call
cmp
lahf
jle
xlat
imul
mov
jg
stc
mov
adc
pop
in
icebp
aaa
pusha
mov
arpl
push
push
pop
adc
stc
testl
dec
movsb
daa
sti
mov
jmp
dec
jecxz
or
jmp
push
fiaddl
jge
imul
add
call
add
xor
xor
cli
stc
ret
mov
push
sub
insl
int
insl
inc
jge
mov
pop
xorl
dec
mov
lret
push
shrb
sub
xchg
mov
scas
xchg
cltd
push
xor
mov
ds
sub
test
pop
dec
pop
dec
in
push
repz
or
in
movsb
icebp
or
lock
ds
nop
mov
lcall
xchg
clc
xchg
test
in
adc
fsubs
jle
loop
mov
pop
lret
les
dec
cmc
dec
push
mov
out
cwtl
popf
out
pop
call
or
or
or
popf
mov
pop
mov
leave
mov
push
lods
add
cmp
cmpsl
loop
rcrb
mov
jp
push
nop
movsl
dec
cmc
lds
cmc
sub
xor
fdivrs
inc
outsl
out
lds
aad
sub
inc
and
shll
cs
mov
js
mov
push
dec
push
int3
rcrl
sbb
cwtl
dec
cmp
gs
out
das
test
in
jae
inc
pop
rorl
or
leave
dec
in
adc
jmp
dec
sub
push
cmp
xchg
stos
mov
xor
mov
test
inc
jb
sti
lods
int
pop
pop
test
outsl
jp
add
fsubrp
adc
sub
nop
fnstenv
test
jb
mov
mov
sub
and
shrb
push
out
rorl
lret
mov
xchg
idiv
nop
mov
in
repnz
out
clc
mov
inc
dec
mov
gs
int3
clc
dec
test
jno
sbbl
es
add
out
adc
loope
adc
mov
jo
xor
lret
cltd
rcrb
cs
jnp
iret
pushf
mov
dec
mov
push
add
mov
mov
arpl
xchg
dec
fdivl
adc
stos
xchg
cmpsl
dec
cmpsl
push
cmp
xor
push
shl
icebp
stc
pushf
add
out
lahf
sbb
xor
cwtl
mov
movsl
jle
lock
test
mov
mov
dec
into
push
add
movsl
insl
pop
mov
xchg
pusha
push
pop
and
pop
or
adc
jmp
and
pop
aas
les
sub
cltd
add
aad
imul
push
jo
ror
std
inc
mov
push
ret
sbbb
jg
lods
jg
push
std
fcoml
sbb
jp
out
xor
dec
push
mov
in
mov
fistpl
pushf
loopne
and
dec
push
out
rcl
push
hlt
sbb
xchg
adcb
push
mov
pushf
popa
push
jno
and
call
insl
lea
jns
fstps
xchg
dec
movsb
xor
cmp
fidivrs
addl
push
xchg
mov
xor
cmp
mov
and
in
ds
jecxz
mov
xchg
lods
int3
or
cwtl
int
adc
pushf
test
mov
daa
xor
xchg
scas
out
push
cmp
mov
fsubrp
push
call
cmp
movsb
xchg
cmp
imul
jl
mull
mov
idivb
call
ds
popa
outsl
or
lret
xor
push
pop
test
adc
repz
mov
sbb
push
scas
jge
test
inc
fidivrl
fnstcw
sbbl
pop
inc
test
lret
sahf
dec
dec
cmc
push
or
inc
out
pop
psrad
dec
jmp
xchg
imul
adc
push
lahf
sub
sbb
add
pop
loopne
mov
cmp
sub
rcr
fbstp
xor
hlt
ss
push
xchg
xlat
adc
adc
jns
sub
insb
sarl
sbb
jle
pop
mov
inc
mov
sbb
push
out
sub
ret
cmp
adc
inc
movsb
sbb
js
pushf
pop
jmp
jb
ss
xchg
es
loopne
add
ja
incb
test
add
jmp
jne
fsubs
pusha
add
inc
xchg
add
pop
dec
repnz
test
cmp
outsb
enter
addb
filds
es
xlat
pop
or
dec
cli
add
adc
mov
jmp
ljmp
mov
lds
hlt
ljmp
lods
inc
jno
pop
mov
movsb
lods
aad
rorb
inc
xor
xchg
and
sub
add
cmpb
cmp
dec
rclb
mov
popa
call
adc
mov
xchg
in
mov
inc
push
pop
lret
push
sbb
ljmp
and
mov
xchg
lock
rcll
and
and
push
xchg
dec
aam
mov
cli
fcompl
xchg
push
inc
mov
test
test
inc
xchg
filds
mov
aas
sbb
test
and
cwtl
imul
pop
sti
adc
dec
and
orb
mov
test
mov
inc
mov
call
xchg
movsl
or
mov
lahf
push
cmpsl
adc
sub
imul
xchg
inc
ret
sub
iret
dec
add
jmp
dec
xor
nop
in
in
or
loopne
aam
sbb
pop
mov
sub
insb
jae
test
out
xorl
call
sub
fistps
pop
or
pop
xor
test
sbb
je
negb
ja
clc
and
jno
in
sub
in
jmp
mov
mov
imul
outsl
je
sub
sbb
iret
loop
and
cmp
or
popf
in
sbbl
inc
shlb
std
mov
pushf
sub
sbb
push
test
cmp
add
xchg
xchg
pop
adc
mov
xchg
or
test
movsl
lods
pop
mov
sbb
cmc
fdivrs
mov
js
adc
cltd
mov
push
in
and
iret
jo
loopne
jb
push
out
sub
or
nop
into
ret
insl
push
sbb
mov
icebp
int3
je
mull
adcl
clc
pusha
push
xchg
dec
shl
xor
xchg
jecxz
cmp
push
inc
pop
sbb
out
loopne
adc
push
movsl
dec
pop
mov
aam
dec
xor
dec
adcl
xchg
in
xchg
sahf
pop
outsb
lock
leave
add
xchg
es
enter
stos
sub
add
dec
mov
mov
xchg
sbbl
sub
jge
popa
mov
pop
mov
or
dec
rcrb
inc
cld
rol
dec
push
jns
mov
sub
pop
lea
xchg
jae
push
pop
lahf
imull
cli
leave
mov
mov
jns
lret
mov
push
mov
jle
dec
add
rorl
jg
jmp
int3
sub
sbb
mov
repz
mov
ret
jg
frstor
call
cmc
paddsw
cmp
add
lods
push
notl
in
addr16
push
js
aas
out
test
jo
outsl
out
inc
loopne
add
mov
rcl
dec
addr16
pop
jbe
pop
mov
and
pop
mov
jb
dec
jno
cmp
push
jb
iret
add
and
sbb
sub
fcompl
mov
insb
arpl
imul
jmp
push
jg
cmc
mov
push
pop
mov
fidivrs
out
push
pushf
imul
mov
cli
movsb
stos
ror
push
test
lret
ficompl
jl
jae
decl
and
or
jge
insl
jae
fimull
dec
pop
mov
jg
sahf
adc
pop
ret
add
roll
cmpb
pop
dec
scas
imul
cmp
lods
cmc
data16
imul
out
test
std
mov
and
movsl
adc
andl
fistl
adc
das
cmc
daa
cmpsl
decb
jge
call
add
pusha
out
cld
mov
outsl
scas
imul
ja
sub
in
dec
lret
cmp
in
in
fimull
test
enter
push
shll
push
sbb
movsb
and
test
jp
nop
pop
rcrl
mov
filds
cli
mov
leave
in
cmpsl
cli
jnp
jecxz
push
push
out
lahf
mov
mov
sbb
int
mov
scas
pusha
addb
les
add
jmp
decl
fwait
adc
cli
or
adc
add
dec
mov
arpl
cmp
fwait
and
out
jle
jp
xchg
and
mov
dec
stos
in
mov
cmp
cli
hlt
jo
add
lods
sub
add
ljmp
scas
jge
jle
cmp
or
fs
imul
shlb
xor
adc
pop
cltd
jl
sti
inc
cld
xchg
data16
cmpsl
mov
mov
inc
cmc
xchg
repz
cld
xor
sub
das
cmp
syscall
cmp
xor
or
cli
shlb
jb
push
cmp
addr16
or
test
and
xchg
popa
scas
sbb
xchg
sub
sbb
mov
mov
push
bound
sbb
imul
and
fdivrp
xor
cmp
cs
test
sub
out
mov
dec
aam
pop
jae
pop
shlb
cmc
movsl
push
xor
pop
push
adc
mov
insb
adc
xlat
loope
cmpsl
jle
int
jle
cwtl
sub
mov
xor
xchg
fsubl
xor
out
jecxz
sub
xor
pushf
inc
and
mov
jo
and
arpl
and
inc
and
jno
stos
jmp
sbb
pop
inc
jmp
js
pushf
jae
mov
mov
dec
mov
clc
sbb
gs
divb
loopne,pt
out
fisubrs
cld
jmp
mov
pop
das
dec
cli
pop
shrl
js
iret
push
mov
mov
adc
jbe
movsb
iret
push
jmp
pop
fcoms
ret
jno
adc
ja
inc
loop
mov
mov
jb
xlat
repz
repnz
push
push
or
scas
fcomps
push
and
out
push
pop
add
test
push
nop
outsb
stc
push
out
lret
add
jnp
mov
sbb
and
jbe
sub
jle
mov
pop
sub
scas
xor
in
sub
sti
xchg
add
bound
push
pop
inc
add
mov
mov
daa
mov
push
dec
xchg
cmc
faddl
or
mov
jbe
das
pop
sti
lock
mov
pop
scas
push
test
mov
fildll
pushf
imul
ljmp
cwtl
out
ret
icebp
and
cmp
push
fstl
mov
sbb
arpl
xchg
pop
pop
cmp
jmp
pop
pop
ds
daa
lods
leave
jp
repnz
pop
lret
add
cmp
mov
sarl
mov
cmp
scas
cmp
jno
loopne
ss
xchg
mov
push
ds
or
daa
setae
dec
fnstenv
cmp
pop
jl
in
mov
int3
into
xchg
popa
insl
lfs
xchg
jle
pusha
out
ror
sub
jbe
jnp
xchg
xchg
ret
dec
inc
and
cmp
or
xchg
sbb
dec
pop
dec
push
xor
ret
test
add
into
jmp
dec
xchg
or
push
inc
mov
dec
imul
int3
and
dec
or
adc
cmp
loop
inc
jecxz
lcall
imul
fldt
sub
shrl
lret
mov
jmp
andl
jno
sub
jle
push
insl
fstps
xchg
ret
jns
pop
jbe
push
pop
pop
jnp
or
aam
sti
jmp
ja
movsl
bound
or
jge
dec
stos
repz
push
push
jl
dec
mov
and
xchg
xchg
lea
out
push
xorb
ja
popa
pop
mulb
data16
loop
loopne
out
hlt
into
add
ret
ss
jae
nop
cmpb
cmp
fnstenv
repnz
or
mov
clc
push
in
sbb
into
sub
pop
push
sub
leave
mov
sub
jns
pop
fsubrp
lds
scas
hlt
jne
cmp
iret
pop
pop
lods
xchg
mov
mov
mov
arpl
mov
hlt
adc
inc
push
mov
pop
jnp
jge
cli
add
jb
and
out
loopne
leave
push
in
divb
leave
add
hlt
add
add
jne
int3
xchg
cs
repz
out
mov
mov
mov
push
mov
push
sub
pop
inc
lea
hlt
and
sbb
jnp
aas
icebp
pop
movsb
add
pop
aas
repz
insb
test
enter
cld
xchg
iret
xchg
push
in
ds
shrl
cli
scas
arpl
xor
mov
into
mov
xor
inc
cmpsb
fbld
mov
ds
ret
js
mov
mov
sub
out
jne
xchg
jae
ficompl
ret
add
call
jmp
inc
mov
lods
mov
mov
rorl
mov
bound
mov
jg
and
ljmp
je
add
cmp
sub
cmp
add
add
jno
pop
ljmp
xchg
int
divl
les
pop
cmp
jb
cltd
sub
aas
mov
and
mov
stc
sub
push
push
fcoml
test
enter
dec
adc
sahf
loopne
mov
ss
push
mov
leave
xlat
pop
add
pop
mov
loope
fsubs
andl
adc
hlt
lahf
stos
add
ret
test
sub
dec
inc
iret
sbb
scas
popf
sub
pop
mov
fists
cmc
xor
xor
xor
xor
fwait
cmpl
and
sub
lods
subb
mov
inc
sahf
pop
test
lea
pop
jecxz
cmp
outsl
pop
lea
jecxz
lock
loopne
jae
fcoml
mov
jmp
aas
sbb
lods
imul
mov
jae
cli
outsl
add
inc
call
pop
or
dec
and
sbb
insl
push
mov
inc
lds
out
lock
jb
test
andb
xlat
ret
xchg
add
jo
adc
cmp
cmp
into
dec
jg
pop
movb
cli
dec
stos
mov
outsl
mov
out
popa
pusha
cmp
test
shl
loop
push
push
mov
bound
and
std
gs
fsubrs
aad
lods
cmp
je
das
stos
popa
out
mov
int3
mov
je
mov
mov
out
enter
jne
push
ljmp
cmpl
adc
jg
cmc
xchg
xrelease
push
xchg
sub
iret
int3
mov
sub
add
jmp
outsl
out
daa
and
cltd
xor
orl
and
out
mov
out
xor
adc
aam
mov
daa
lcall
push
rorb
int3
or
fsts
push
lret
xlat
pop
js
cltd
lahf
cltd
mov
and
jg
insl
mov
and
pop
cmp
cmp
dec
fisttpl
dec
loopne
movsb
out
ret
add
jb
repz
test
cmpsl
adc
mov
outsb
neg
inc
mov
nop
push
mov
lret
dec
fildll
aam
xchg
adc
ljmpw
pop
and
lcallw
pop
push
jmp
jo
mov
pushf
or
add
loope
adc
iret
repnz
nop
mov
cmp
jl
pop
fistpll
inc
pop
scas
daa
dec
dec
sub
mov
mov
or
mov
mov
je
mov
loopne
xlat
cmpsl
bound
add
in
mov
push
push
sub
insb
ss
xchg
repnz
and
sbb
xchg
imul
jbe
xchg
or
add
scas
mov
lret
sahf
outsb
cmc
cmpsb
adc
es
mov
lahf
enter
inc
mov
and
dec
push
mov
mov
push
imul
cli
jo
in
enter
and
adc
test
mov
rorl
lret
cli
ljmp
xchg
xchg
rcl
jmp
jp
cmp
sbb
popf
sub
or
mov
add
sub
pop
imul
shll
fldenv
or
dec
xchg
push
pop
call
jbe
jge
jbe
push
and
loope
xchg
add
mov
std
push
enter
test
dec
and
pop
bound
and
xchg
in
push
fdivp
cmp
imul
scas
daa
lds
repz
adc
sub
or
idivb
mov
cs
cmc
adc
leave
inc
aaa
pop
mov
test
outsb
data16
inc
int
sysret
sub
cmc
xor
pop
xlat
subl
or
aam
xchg
inc
ds
pop
mov
pop
outsl
test
xchg
mov
dec
adc
lods
lret
adc
push
jle
and
clc
cld
aam
or
xor
sti
je
testl
icebp
fwait
cld
cmpsb
in
je
rolb
bnd
mov
cmp
pop
loope
jmp
and
dec
or
inc
cmp
pop
scas
push
imul
cs
dec
sub
xor
icebp
inc
arpl
adc
xor
sub
mov
xchg
pop
insl
pop
pop
sbb
cmp
adc
cmp
jl
lea
pusha
xor
xchg
lret
cltd
jno
shlb
in
mov
fnstcw
aad
loopne
sbb
int3
lret
std
imul
sbb
sub
iret
xchg
ja
addb
add
mov
pop
mov
mov
push
cltd
fiadds
pop
iret
adcb
and
lock
in
cmp
je
fldt
dec
imul
insl
xor
std
addr16
xor
xchg
fadd
scas
mov
dec
test
rcll
inc
mov
outsl
and
ret
add
cmpsb
test
jp
loope
lahf
out
xlat
pusha
and
scas
int3
lret
fmul
daa
hlt
cmp
add
jge
lret
jbe
xor
and
push
sti
dec
push
fadds
xlat
push
out
cs
sti
add
push
dec
inc
cli
push
js
sbb
outsb
loope
sub
imul
js
xchg
jmp
test
icebp
xchg
loop
jecxz
mov
test
xchg
cs
adcb
out
jb
je
adc
cwtl
mov
mov
pop
dec
test
aad
addb
lahf
inc
pop
add
dec
push
xchg
movl
sahf
push
push
mov
push
sbb
and
loopne
mov
cwtl
sti
and
insl
mov
lock
and
xor
pop
cmp
insb
and
jnp
jmp
lret
sbb
incl
mov
xchg
fisubrl
popf
mov
add
leave
lds
mov
dec
xchg
and
sbb
addb
imul
mov
jne
fisttpll
dec
aaa
ljmp
hlt
loopne
jl
jnp
mov
add
addr16
jne
cmpsl
and
push
outsl
in
jmp
lret
outsb
push
mov
rorl
push
dec
jmp
mov
pop
sbb
mov
movsb
cmp
sti
pop
xchg
adc
and
outsl
xchg
jne
insb
xchg
cli
and
xor
adc
and
out
jle
call
jge
adc
test
pop
inc
jmp
dec
jge
pop
sbb
pop
popf
subl
lds
pop
imulb
or
xchg
cmpsb
xor
or
leave
scas
rcll
push
pop
add
mov
adc
push
push
dec
adc
add
inc
clc
repz
int3
dec
fisubl
xor
pop
stc
roll
ret
aas
pop
jecxz
xor
imul
pop
je
adc
cmp
cmpsb
xor
pop
leave
pushf
dec
ja
fimuls
out
jg
inc
pop
xor
scas
pop
js
push
and
push
inc
mov
cmc
xor
lcall
mov
lods
inc
dec
push
mov
dec
and
xchg
insl
xorl
test
imul
jns
gs
jae
inc
pop
loope
ret
dec
inc
adc
pusha
push
pop
or
and
inc
sub
dec
ljmp
push
push
lods
into
pop
xchg
xchg
push
mov
and
testb
pop
mov
loopne
fs
cmp
or
xchg
or
mov
push
orl
or
sub
adc
xchg
pop
in
orb
adc
test
adcb
stos
cmpsl
lea
mov
pop
outsb
mov
in
insb
adc
je
push
or
push
das
cmc
jnp
idivl
insb
jmp
mov
pop
gs
fcoms
adc
xchg
cmp
adc
bound
lea
ljmp
aad
xchg
fwait
setbe
cli
cs
xor
sub
jge
out
and
pop
push
mov
dec
mov
lret
sbb
scas
push
test
es
cmp
shlb
cmp
movl
ss
addr16
mov
sbb
xor
mov
push
xchg
mov
les
add
out
adc
and
inc
sahf
ret
sarl
pushf
xor
mov
pop
in
xchg
cmp
ljmp
and
stos
divl
inc
in
fstpt
pop
jg
outsb
testl
xor
cld
insb
push
pop
pop
mov
outsl
dec
inc
pop
mov
ret
xor
aaa
lahf
ret
pushl
jae
and
and
lods
jp
push
bound
mov
cmp
pop
mov
xlat
jb
xchg
dec
xchg
int
fildll
push
test
add
push
adc
cmp
mov
arpl
pop
add
clc
jno
test
xchg
mov
je
and
inc
mov
or
or
in
xchg
and
lret
jp
push
lahf
push
mov
sbb
out
out
jle
rcrl
in
in
or
jg
fcmovne
push
inc
aad
mov
sbb
mov
jge
sarb
xor
ret
dec
adc
pop
test
pop
or
mov
imul
pop
or
xchg
ret
pop
ret
dec
loopne
or
lds
adc
pushf
xchg
dec
notl
jg
xchg
lds
insb
jae
addr16
mov
repz
and
pop
stos
lret
push
push
ljmp
inc
cmp
popf
lea
bound
xchg
mov
daa
in
in
mov
or
leave
inc
cmp
fdivs
fisttps
mov
mov
jns
and
sub
test
jl
mov
adc
inc
adc
repz
test
add
lret
sahf
nop
cmp
stc
mov
cld
andl
imul
cli
pop
adc
sarb
xor
cmp
push
out
and
or
lds
jo
rol
mov
sbb
aad
jbe
jo
leave
xchg
inc
sub
fadd
xchg
xchg
fstps
rolb
mov
sbbl
or
das
inc
dec
or
fwait
sub
test
jl
jae
hlt
scas
je
mov
sti
cmp
ja
je
pop
ljmp
pop
mov
mov
mov
roll
out
mov
scas
stos
push
sahf
outsb
pop
mov
xchg
leave
popw
addl
sbb
nopl
push
adc
shlb
sbb
test
inc
or
mov
outsb
icebp
cmp
xchg
xchg
adc
cmp
adc
jp
push
dec
jg
mov
cmp
jge
je
ds
pop
sbb
fcmovnu
jl
sbb
sahf
fs
xor
dec
xor
scas
jle
add
push
cltd
in
lahf
aaa
cmpb
fsubp
adc
mov
xor
es
clc
push
push
and
push
add
fisttpll
or
jmp
test
sahf
fs
adc
js
mov
in
repnz
cltd
test
insb
out
pop
in
add
daa
test
pop
jmp
es
in
pop
adc
cs
add
pop
das
fidivrs
dec
pop
pop
mov
ja
dec
jno
enter
sbb
xor
xor
xor
pusha
mov
and
push
cmpb
test
jbe
cli
push
fucom
pop
scas
add
cmp
out
dec
imul
mov
lret
and
mov
and
pop
jne
jmp
outsb
aad
shlb
call
xor
push
mov
insl
mov
je
xchg
pop
out
dec
loop
lock
push
icebp
dec
cmp
mov
mov
or
clc
ret
or
in
push
imul
inc
daa
jp
out
inc
sub
js
cld
out
cmp
stos
pop
push
daa
jae
cwtl
dec
or
pop
or
lods
mov
lahf
jns
xor
fs
dec
pop
jl
in
in
or
insb
xor
pop
push
or
ljmp
adc
cmp
add
mov
ja
push
fsubrp
cmpsb
sbb
mov
movlps
lods
xchg
mov
mov
push
aam
jae
adc
mov
or
or
sbb
in
jge
mov
mov
sbb
insb
shll
loope
mov
inc
jnp
or
add
or
cmc
mov
jl
bound
push
cmpsl
mov
mov
pop
adc
push
or
popa
sub
cli
mov
fidivrl
fstl
mov
insb
mov
mov
arpl
or
xchg
jecxz
cmp
je
inc
mov
mov
mov
in
push
ror
lock
jle
or
aad
aas
jge
out
and
sbb
xlat
cmp
filds
sbb
pushf
jecxz
addb
jle
sub
stc
outsl
push
push
jle
test
movsl
cmp
mov
lahf
ds
shrl
xchg
div
xchg
mov
push
or
dec
pop
mov
mov
mov
push
or
cld
push
add
push
mov
loope
adc
ljmp
fisubs
leave
movsb
jle
mov
loopne
push
data16
call
sar
stc
lahf
daa
and
icebp
incb
jno
mov
mov
jmp
repz
loope
movb
mov
shll
test
loop
pop
outsl
pop
push
dec
sub
testl
rcr
mov
mov
fstpl
pop
call
push
mov
scas
in
sahf
insb
xor
cmpsb
mov
cmp
add
sbb
lds
fwait
hlt
push
mov
decl
arpl
std
add
xor
flds
mov
jne
loopne
sbb
inc
pop
sbb
das
sub
inc
int3
sub
mov
lcall
mov
test
fsub
sar
cld
ja
mov
hlt
iret
cmp
outsb
xor
jg
ret
ja
pop
xchg
outsb
sbb
addb
les
notl
aam
mov
mov
cmpsb
dec
jae
pop
inc
int3
lret
vpsraw
inc
insb
popa
push
pop
ror
jp
jmp
aas
lret
inc
stc
cmc
push
jmp
dec
jae
cltd
movsb
dec
lret
aam
add
movsb
jbe
cs
out
jmp
outsb
push
push
add
mov
jns
pop
jae
daa
sbb
pop
sbb
inc
push
mov
out
fmuls
bnd
pop
scas
out
inc
push
fmull
pop
mov
mov
repnz
push
mov
xor
push
int
adc
int3
les
imul
lcall
mov
mov
in
inc
add
fidivrs
sahf
ja
sub
into
scas
adc
insb
insl
xchg
fsubrs
xor
test
jg
imul
inc
or
fdivrl
or
andb
aam
xchg
sbb
jo
add
ss
pop
pop
xor
enter
in
mov
adcl
sub
xor
cltd
dec
jp
push
fisubrs
dec
ret
bsr
cmp
rcrb
xorl
cmp
js
cwtl
cmp
cmp
test
mov
lods
ror
push
into
jp
dec
into
mov
pop
add
inc
outsb
out
mov
dec
mov
std
mov
daa
out
xchg
sbb
enter
sub
pushf
cmc
es
enter
cmp
sarb
add
scas
stos
xchg
fisubs
in
call
scas
and
dec
and
pop
pop
lahf
in
push
iret
call
inc
imul
hlt
insl
insl
mov
enter
or
test
fisttps
add
jno
cmp
jae
int3
mov
notl
cltd
push
clc
cmpps
test
adc
scas
jne
jmp
pop
mov
testl
call
jb
adc
pusha
scas
scas
jge
cmp
int3
inc
mov
xorb
mov
cmpsl
cmp
out
arpl
sti
sbb
inc
fwait
pusha
lret
into
sti
fldl
pop
popf
cmpl
pop
ss
movsb
pushl
js
loop
sbb
hlt
pushf
insb
xchg
inc
jl
out
push
jnp
mov
test
add
stc
sbb
xchg
imul
push
into
sub
sub
pusha
scas
mov
cmp
dec
push
js
ja
repz
outsl
cmp
test
inc
sarb
pop
xchg
or
mov
pop
test
ja
push
sub
int3
repz
lds
inc
xor
cmp
dec
fwait
shll
sub
sbb
and
stos
out
in
push
int
bt
aaa
sahf
and
add
sbb
lods
pop
out
inc
or
shl
push
xchg
ud1
xchg
jge
adc
in
mov
or
xor
add
js
divb
xchg
cmp
pop
in
jno
scas
jne
fldt
xor
mov
and
inc
and
stos
pushf
or
in
xor
adc
inc
lea
pop
cmp
mov
movsb
imul
pop
xor
in
inc
xchg
aaa
pop
imull
pop
pushf
outsb
and
or
mov
fwait
addl
sahf
test
cmpsb
sbb
gs
sub
jb
out
adc
outsb
bound
aas
sub
sbbl
or
xchg
xor
inc
push
jae
mov
testl
mov
xor
inc
out
mov
into
movswl
ret
or
mov
divb
or
dec
inc
cmp
clc
insb
mov
mov
cltd
ds
dec
test
ret
dec
hlt
push
or
scas
sbb
test
xchg
push
cmp
push
int3
inc
lods
ja
nop
dec
and
daa
pop
adc
dec
imul
mov
jnp
cmp
and
and
add
lcall
mov
cs
jge
and
scas
fwait
adc
data16
test
push
jb
adc
xchg
enter
loope
dec
movsl
pop
clc
mov
cmp
lock
and
jmp
ljmp
cmpsl
vfrczsd
mov
test
xchg
push
shlb
ret
pop
adc
jns
repz
jge
jg
lock
cmp
rolb
je
and
jecxz
adc
arpl
inc
repnz
rorb
lret
dec
jg
dec
iret
loope
insb
je
out
call
mov
mov
iret
add
push
mov
mov
pusha
xor
push
out
sarl
pusha
pop
cmp
jg
mov
in
gs
enter
fildll
fdivrl
or
sbb
xor
push
dec
adc
in
xchg
mov
je
push
leave
pushf
stos
fcmovnbe
jmp
dec
mov
pop
fsts
push
insl
adc
sbb
into
inc
adc
push
in
pop
jo
ss
cltd
xchg
movsl
sub
inc
xor
ret
je
cmp
xchg
insb
mov
push
dec
adc
pop
adc
xchg
fwait
push
mov
pop
xchg
push
xchg
cmp
sub
test
int
repnz
mov
cltd
inc
pop
mov
call
mov
pop
shlb
cltd
push
mov
fs
pop
cmp
inc
mov
data16
icebp
jb
ret
add
xor
cmpsb
jbe
outsl
cmp
adc
or
dec
repnz
or
cmp
nop
xor
or
rclb
add
push
popf
fdiv
mov
jp
dec
shlb
pop
mov
adc
int3
popf
adcb
mov
lods
mov
xor
push
pusha
out
or
rcl
mov
aad
rcrl
ret
mov
es
mov
adc
and
insb
inc
ret
data16
test
pmuludq
or
cmp
aas
lods
ret
lods
icebp
into
lret
testl
cmpsb
scas
xor
or
iret
mov
adc
or
adc
push
sbb
mov
and
xchg
icebp
cs
mov
lahf
testl
cwtl
push
and
dec
testl
fwait
adc
sub
notb
les
jle
paddsb
movsb
or
movsw
das
into
cmp
cltd
out
cmp
outsl
loope
dec
add
cli
xor
pusha
daa
aaa
mov
inc
sahf
rcr
cmp
jecxz
jmp
mov
cwtl
test
adc
repz
adc
aam
push
inc
inc
lret
idivl
ffree
scas
mov
out
mov
cld
fisubl
dec
mov
xchg
jl
or
fmuls
mov
jo
arpl
movsl
mov
pop
adc
lcall
or
enter
iret
hlt
scas
push
inc
aas
mov
mov
add
lods
jmp
xor
xchg
push
js
xlat
sbb
fldcw
cmp
adc
repnz
pop
repnz
jae
outsb
fnstenv
add
repz
push
and
call
xor
sbb
fcmovnb
mov
mov
xchg
mov
and
or
addr16
xchg
and
insl
jae
loop
test
shlb
dec
jne
dec
add
sahf
jge
cmpsl
rorl
lcall
xchg
or
imul
cld
int
jmp
lods
dec
and
jge
fildll
mov
xor
adc
mov
adc
leave
movsb
push
test
jae
jne
adc
aam
out
js
dec
cmc
xor
sahf
loope
dec
xor
cmpb
sbb
push
or
inc
out
inc
lock
in
stc
adc
push
mov
je
or
mov
stos
orl
fstpl
bound
pop
in
out
daa
mov
mov
xchg
mov
jns
pop
call
or
cmp
cmp
mov
sub
xchg
pop
lock
push
movsb
xchg
ret
nop
or
mov
mov
cmpsl
mov
push
out
pop
mov
mov
xchg
mov
cmp
lret
add
and
inc
adc
mov
pop
stos
fstpt
fnstsw
fisubl
imul
push
sub
jo
xorb
xor
out
jne
jbe
repnz
loop
rorb
inc
jnp
test
pop
lock
xchg
int3
push
scas
imul
rcrb
mov
inc
jl
pusha
lods
jae
adc
inc
add
mov
in
push
lds
scas
cmp
push
mov
mov
xchg
insb
jmp
ss
jge
js
mov
xor
inc
or
add
icebp
push
fnsetpm(287
daa
pop
inc
inc
es
into
sti
loop
leave
inc
pop
add
mov
add
jae
hlt
mov
in
or
or
pop
jmp
mov
and
in
and
dec
push
push
push
add
adc
mov
mov
push
stc
leave
pop
or
adc
xchg
xchg
xor
cmp
movl
arpl
aam
fs
out
inc
fildl
xchg
mov
xor
addr16
int3
fwait
ljmp
mov
xor
iret
and
dec
xchg
dec
outsl
xchg
or
movsb
bound
ss
enter
int3
bound
aad
add
pushf
jge
sbb
dec
mov
loope
pop
mov
int3
les
sti
cwtl
fistpl
out
addr16
out
cs
inc
cmp
push
popa
call
imul
lahf
add
int3
addr16
clc
add
test
repz
ficoms
imul
shlb
shll
imul
mov
ss
cmp
mov
jmp
cmp
sub
mov
hlt
pop
sub
xchg
in
sbbb
fnsave
push
cmp
fbstp
push
in
pop
sti
xor
mov
fisttpll
pop
mov
pop
pop
fidivrs
jg
inc
mov
pusha
bound
cmpsb
jb
mov
jno
scas
bound
ret
out
call
push
addr16
inc
cmpl
lea
jno
pop
pop
scas
rol
int
scas
pop
js
pcmpgtw
insl
dec
rorl
jae
mov
fnstenv
jg
ret
fstp
cmpsl
xor
jbe
stc
out
adc
lea
mov
push
inc
test
dec
call
ret
push
ret
cmp
jne
es
sub
adcl
xchg
mov
xchg
sarl
psubusw
icebp
and
sbb
ss
ljmp
or
pop
rcrl
or
stos
push
pushf
dec
stc
notl
xor
cmp
negl
call
sub
pop
filds
xor
loopne
xor
jno
xchg
mov
cmp
jp
lock
int
jne
mov
imul
cmp
call
cltd
data16
test
adc
inc
pop
or
data16
xchg
xchg
sub
dec
push
or
hlt
mov
in
in
cmpsb
xlat
inc
fstl
test
les
xchg
jl
jns
xchg
adc
outsb
xchg
jo
sbb
mov
test
mov
inc
inc
inc
in
mov
sub
push
pushf
stc
idivl
nop
xchg
imul
xchg
inc
and
ss
cli
add
std
dec
sub
inc
jmp
jge
fs
sti
adc
sahf
xor
push
mov
mov
testl
fdivr
mov
filds
pop
cmpb
dec
mov
jne
cmp
inc
push
into
cmp
popa
add
arpl
hlt
rclb
jns
std
rorl
dec
pop
mov
ja
xchg
cwtl
inc
jb
adc
ss
aas
push
xor
ror
mov
int
out
adc
stos
imul
mov
jecxz
lcall
xor
mov
test
scas
add
cmp
jno
cltd
ret
push
ret
dec
mov
call
ficompl
fmuls
loope
scas
arpl
frstor
repz
inc
mov
addr16
scas
sahf
mov
cmpb
stc
lcall
push
clc
xchg
adcb
mov
adc
mov
mov
aam
imull
rcrb
push
inc
push
testb
je
aam
sbb
in
outsb
fistl
dec
popa
xchg
xchg
sub
mov
insb
jno
cmp
roll
andl
daa
sbb
xor
mov
adc
or
call
xchg
loopne
add
xor
mov
ja
cmp
push
or
pop
mov
jne
sub
xchg
push
sahf
repz
notl
std
cmp
jmp
cwtl
es
pop
mull
in
dec
lods
fs
xchg
sbb
mov
inc
pop
sti
lret
leave
cli
dec
jne
jne
movsb
xchg
push
xchg
jb
movb
mov
xor
lock
mov
xchg
iret
gs
cld
mov
mov
xlat
cmpsb
mov
shrb
mov
mov
cmc
xchg
int3
fsubrl
enter
and
arpl
mov
fisttpll
stos
cmp
and
rolb
xchg
fidivrs
add
movsb
or
ds
fxch
inc
cli
fisttpll
rol
mov
insl
decb
lods
fnstenv
cmpsb
inc
jo
or
dec
inc
aas
pop
xor
pop
fsubrl
inc
mov
cmpsl
mov
mov
fsubrp
lods
mov
sbb
sbb
mov
fadd
and
or
clc
pop
ret
fst
xor
inc
push
jb
ss
and
and
mov
mov
sbb
rcl
inc
mov
push
test
subb
rclb
push
jbe
inc
mov
lret
mov
insl
fsubr
int
out
inc
lods
lret
dec
push
negb
inc
mov
or
daa
cmpsb
dec
stc
push
adc
test
insl
test
ret
pop
into
mov
xor
out
mov
push
push
lods
adc
lcall
mov
mov
scas
sti
mov
iret
sbb
addps
int3
repnz
and
daa
aas
stc
and
stos
push
cld
cltd
rorl
mov
sub
mov
cmp
dec
push
es
xlat
ja
cli
xchg
jge
mov
test
pusha
lods
jecxz
out
insl
add
xchg
push
add
daa
mov
or
stc
daa
das
jmp
fcoms
and
pusha
mov
xchg
mov
push
mov
stos
fwait
and
xor
add
cli
jne
dec
adc
cmp
and
mov
mov
ret
into
jecxz
inc
cmp
mov
and
mov
add
mov
sbb
gs
cmp
out
dec
ret
jo
or
out
cmp
mov
jp
mov
mov
jne
mov
sub
jle
stos
mov
sbb
push
jl
pop
dec
movb
call
sub
jle
mov
sub
mov
push
mov
and
xor
xchg
add
xchg
enter
jmp
adc
sahf
jbe
and
out
out
cmp
jecxz
mov
cmp
xor
pop
mov
rcll
mov
and
add
test
pushf
sub
add
or
iret
sbb
cmp
fstp
xor
lcall
dec
cmpsb
xor
test
cmp
loope
ds
mov
adc
pop
and
sbb
mov
cmp
dec
mov
jne
cld
lahf
or
add
test
insl
or
pop
sti
fidivrl
repnz
pop
inc
pop
enter
ret
mov
add
xor
dec
push
sub
stos
mov
std
or
or
lcall
test
cmpsb
or
mov
ja
ljmp
mov
leave
inc
mov
leave
popf
fdivr
xchg
or
and
jnp
aam
add
add
xchg
adcl
adc
bound
js
mov
xchg
clc
add
daa
rolb
mov
adc
cmp
pop
mov
add
movl
je
push
jmp
dec
xchg
pushf
xlat
sbb
jle
lds
add
sbb
mov
loop
in
int3
out
pop
add
pop
mov
mov
push
movsl
mov
jne
cmp
aad
or
lret
mov
filds
push
push
pop
cmp
add
stc
fldcw
sub
or
in
push
out
xchg
xchg
fwait
push
pop
or
dec
pop
jo
add
aaa
test
xlat
lret
stc
loopne
pop
lea
out
dec
mov
xlat
add
insb
xchg
sbb
imul
je
pop
cmp
jne
cwtl
daa
xlat
mov
mov
inc
xor
pop
mov
loopne
add
enter
icebp
ja
ja
inc
pop
push
add
inc
cmpsl
stos
in
scas
je
cld
ret
inc
mov
lds
cltd
mov
mov
outsl
push
in
daa
jp
je
inc
sub
mov
hlt
xorl
add
mov
aam
ljmp
fcom
shll
lds
add
push
xchg
or
push
outsl
arpl
fdivrl
in
inc
push
pop
sub
es
fnstcw
js
xor
pop
rolb
and
mov
dec
out
sbb
jno
es
mov
dec
cmp
lods
testl
ftst
mov
into
mov
xchg
or
loop
dec
mov
rcll
inc
scas
outsb
sti
and
int3
mov
in
jmp
fldenv
mov
scas
push
lock
dec
xchg
icebp
cmpsb
loop
arpl
mov
inc
fnsetpm(287
adc
jbe
stc
pop
gs
in
dec
mov
add
shld
lret
mov
sbb
mov
jmp
add
push
cmp
andb
stos
cli
outsl
mov
pop
ret
cltd
xchg
mov
sti
inc
testb
imul
mov
ret
les
movl
xchg
sbb
fwait
dec
bound
outsb
subb
push
pusha
or
aad
cmp
mov
mov
fildll
inc
daa
ss
sahf
lock
adc
sub
adc
pop
pop
and
sar
aas
nop
jns
cwtl
sub
or
or
stos
mov
sub
inc
scas
pop
in
mov
hlt
iret
fstps
dec
dec
pop
rcrl
push
out
in
adc
iret
mov
mov
pop
pop
dec
loope
add
fisttps
repz
insl
push
add
cmp
scas
add
dec
scas
iret
mov
pop
push
mov
arpl
in
jne
xchg
dec
es
push
sbb
daa
jb
mov
add
and
in
insb
push
sbb
lods
out
movsl
or
cli
in
imul
movsl
aaa
outsb
mov
stc
mov
icebp
daa
es
rcll
or
mov
and
jge
mov
divb
xchg
or
fmull
test
and
jnp
xchg
add
pop
cmp
push
rorb
aaa
xchg
pop
dec
sub
and
adc
icebp
sub
leave
pop
dec
cmp
push
cld
mov
fdivrs
adc
test
ljmp
fildll
mov
or
and
pusha
push
les
enter
xchg
lds
fwait
dec
icebp
jne
int
mull
cli
adc
les
inc
lock
mov
sub
incl
mov
inc
xchg
sbb
es
arpl
xchg
xchg
repnz
pop
sbb
std
mov
frstor
je
pop
dec
sub
sbb
push
sub
sub
add
mov
xchg
ret
mov
xchg
mov
fcomi
pop
xor
rcr
mov
sbb
fstpl
and
bound
xor
in
mov
bound
in
adc
sub
push
addr16
aaa
ljmp
sbb
arpl
mov
movsl
push
adc
test
pop
xor
arpl
fiadds
ljmp
cmc
mov
sub
ljmp
push
or
scas
and
inc
add
fs
jo
popf
cmp
fiaddl
pop
sti
push
cli
lods
dec
in
push
pop
sbb
xchg
fstl
jb
test
xor
mov
xlat
xchg
jb
jmp
fldenv
lahf
test
rclb
cltd
arpl
ret
cmpsl
imul
push
sarl
jge
sub
sarb
pop
out
push
inc
ds
mov
int3
aam
adc
in
scas
xlat
push
cli
jae
mov
fcmovnu
fmuls
cli
mov
jge
dec
or
pop
cmpb
cltd
scas
ret
popa
mov
inc
sub
cmp
repz
test
lods
out
sbb
mov
sub
fildll
ret
xchg
inc
mov
sbb
adc
xchg
divb
clc
aam
data16
sbb
mov
ficoms
xorb
lret
icebp
insl
adc
addl
mov
fldl2t
dec
clc
out
test
lods
cmp
cs
aaa
jle
rolb
sub
scas
sbb
xchg
mov
repz
leave
mov
push
aaa
ds
cmp
and
ss
lcall
mov
aam
jnp
movsl
les
jns
cmp
imul
jo
or
icebp
pop
inc
push
inc
into
pop
jns
dec
in
shl
sarb
out
push
shl
cmp
pop
imul
pop
loope
imul
inc
hlt
pop
fidivrl
imul
shrl
jle
out
add
adc
jle
and
cmpsb
addl
push
js
ror
test
in
cmp
into
push
jnp
dec
xchg
adc
cltd
add
call
mov
jecxz
cmp
and
or
into
adc
in
fistps
xor
sub
ds
mov
hlt
adc
fcoms
or
aam
insb
insl
test
icebp
pop
sub
push
jbe
jp
scas
jno
or
stc
dec
lret
cmp
add
into
loop
sar
ret
into
insb
sbb
adc
adc
mov
aas
or
movsl
or
adc
adc
ret
jae
lahf
insl
xor
push
or
arpl
sub
sub
add
dec
jae
jns
out
jp
mov
in
in
pop
enter
xorb
push
sbb
xlat
and
jno
out
and
pop
mov
push
jl
dec
and
iret
jns
int3
shr
jl
imul
cmp
xchg
repnz
lcall
xchg
lock
loope
sbb
cmp
pusha
adc
push
inc
sub
leave
push
lds
sti
adc
pop
xchg
jle
outsb
gs
das
add
adc
imul
cltd
je
ss
test
pop
jne
lods
rcl
pop
or
cmp
xor
mov
xchg
rorb
pop
in
cmp
imul
callw
mov
mov
xor
ror
xchg
or
loop
adc
mov
pop
leave
cmp
in
nop
ror
push
aas
mov
inc
push
inc
and
dec
iret
push
adc
lock
lret
ftst
aam
mov
daa
bnd
test
mov
mov
rclb
dec
cmp
jecxz
sbb
jmp
aaa
hlt
push
and
adc
in
mov
int
sbb
aas
xchg
enter
loope
or
fistpl
sub
xchg
and
aaa
sbb
repz
jb
mov
je
sbb
insl
pop
mov
cmp
or
and
fwait
arpl
test
hlt
or
loopne
orl
mov
sbb
jne
test
popa
inc
mov
mov
js
pop
inc
pop
pop
or
pop
push
shr
xor
cmp
dec
mov
xor
xchg
inc
jbe
sahf
lods
arpl
pop
loope
and
lea
mov
sub
in
mov
fcomps
adc
or
push
xchg
mov
inc
int
sahf
add
lds
add
and
int3
cltd
xchg
jmp
mov
and
inc
or
movsb
in
loop
xchg
or
daa
pop
and
xchg
dec
aam
xor
pop
daa
xchg
cmpsb
sub
inc
or
jmp
mov
sub
mov
mov
pop
ss
fs
test
int3
movsb
or
or
cmpsb
cmc
mov
xchg
shrb
or
mov
dec
xchg
jl
jge
jne
outsb
cmc
mov
pop
out
stc
mov
xchg
pop
dec
inc
aas
or
lods
mov
mov
fcmovbe
xchg
test
adc
imul
xor
jbe
push
lds
push
jg
mov
adc
call
testl
ret
xchg
sub
ss
scas
sub
and
outsb
stos
and
enter
jo
sbb
out
loopne
push
scas
sbb
add
sbb
and
andl
sbb
imul
and
or
mov
and
insl
test
push
or
ss
or
movsl
xor
test
out
divb
gs
inc
in
inc
ljmp
stos
faddl
int
mov
cli
movsb
incb
lods
pop
cwtl
push
scas
mov
push
out
mov
lds
pop
aaa
push
addr16
sub
push
mov
adc
cmp
lcall
jb
xlat
out
mov
or
mov
adcb
fidivrl
and
and
inc
lea
xor
push
mov
fidivs
into
mov
shrl
jge
inc
push
or
and
jnp
xor
push
xor
lret
xor
out
inc
xor
arpl
mov
pop
pcmpgtd
jmp
xor
cmpsl
dec
mov
jle
xchg
fildll
pop
or
adc
mov
shlb
pop
fwait
in
mov
ja
mov
fadd
mov
xchg
mov
out
fbld
and
imul
pop
pop
aad
popa
mov
mov
push
fs
dec
mov
dec
pushf
mov
mov
call
subb
sub
ret
scas
jbe
int
push
xchg
xchg
pop
popf
push
adc
dec
adc
jae
in
enter
popf
cli
aad
mov
mov
ljmp
shll
aas
loopne
in
test
xchg
mov
ret
sarl
fmulp
xor
mov
pushf
pop
cwtl
js
jg
mov
jbe
adc
test
mov
pop
jmp
push
iret
outsl
fbld
xchg
jbe
jno
lahf
adc
movsb
inc
lds
fwait
lock
popf
stos
or
lcall
jge
mov
dec
in
cmc
loop
adc
adc
mov
push
iret
loope
add
cld
pop
jbe
add
xor
pop
jg
cli
sbb
push
rol
pop
xor
xorl
and
cmp
inc
cs
sbb
dec
fwait
xchg
mov
arpl
inc
imul
sub
sub
sahf
cmp
iret
and
rol
mov
inc
xchg
jmp
fdivrs
fisubrs
mov
subl
jge
push
mov
dec
loop
lahf
and
daa
test
stc
ja
fmull
jp
xor
pop
pop
scas
repz
xlat
or
addl
nop
cmp
mov
sbb
stos
push
ja
push
shll
mov
xchg
dec
sub
adc
popf
push
cmp
xchg
mov
mov
cmpsb
das
sub
xchg
repz
sahf
inc
imul
cmp
xchg
and
cli
rcl
ss
cmp
jl
xchg
mov
mov
subl
xchg
out
subl
mov
jmp
movsb
push
cmpsl
das
movsb
imul
and
mov
jecxz
dec
and
aaa
add
inc
sub
pop
lock
and
lds
sub
cmp
mov
je
push
scas
je
imull
jae
mov
stos
mov
mov
jg
in
dec
fsts
mov
xchg
xor
mov
orb
imul
sub
adcb
test
sti
sbb
mov
adc
in
andl
shl
ja
in
pop
movsb
xor
jg
dec
imul
stc
fdivrl
ret
fisttpl
stos
es
mov
xchg
jbe
loopne
or
ret
jb
imul
sub
or
ljmp
inc
cmc
pop
pop
popf
add
int
pop
sbb
mov
scas
add
les
mov
xchg
cli
sub
sbb
fwait
and
add
cmpsb
mov
xor
bound
scas
and
mov
push
mov
push
je
fwait
stos
iret
jo
outsl
sub
lea
insl
mov
or
imul
jb
sbb
sbb
and
das
mov
push
lods
mov
ror
push
mov
lods
jle
jns
xchg
jnp
xor
xchg
fiadds
pop
add
add
addr16
jae
xlat
std
mov
xchg
orb
dec
fs
in
xlat
leave
adc
outsl
das
jb
sbbb
xlat
ret
test
lods
pop
mov
and
in
pop
ror
jg
dec
inc
pop
push
aas
sub
loop
adc
outsb
mov
fcomps
arpl
mov
adc
push
cmp
pop
dec
imul
mov
mov
sub
jmp
jge
nop
popa
push
addb
mov
out
mull
int3
add
push
mov
push
rcrb
out
mov
movsl
mov
xlat
push
aad
xor
mov
fwait
push
jno
notb
fisubrs
cmp
imull
out
xchg
inc
mov
lcall
and
jnp
sub
push
mov
ret
sub
shl
push
pop
fld
xchg
mov
scas
mov
and
jl
rolb
adcl
xchg
or
pop
add
adc
xor
cwtl
xor
push
or
aad
in
fldenv
pop
xor
xor
aas
and
push
xlat
sub
imul
cmp
jg
mov
incb
scas
mov
movl
jmp
cltd
mov
sbb
movsb
scas
mov
push
inc
gs
jae
pop
lods
or
fucomi
mov
pop
and
bound
fmull
dec
aas
popa
add
ds
cld
jnp
xchg
inc
out
pop
nopl
cld
jno
push
test
in
pushf
shl
adc
enter
lret
and
loop
cld
adc
rolb
xor
arpl
push
xabort
sbb
into
mov
mov
outsb
adc
das
inc
and
sete
imul
add
js
popa
ret
and
add
add
xor
lahf
sbb
jecxz
in
dec
fstl
pop
sub
adc
and
in
testb
clc
test
xor
and
jno
push
adcl
das
repnz
sub
mov
lahf
pop
test
es
mov
push
sub
or
test
mov
push
adc
repz
xchg
sub
loopne
mov
mov
push
movsb
scas
in
mov
out
stc
or
rclb
lea
ss
out
cld
mov
dec
lret
or
lret
leave
add
data16
movsb
stos
jp
ficoms
xchg
and
cld
dec
sub
rcrb
ljmp
adc
rorb
xchg
and
ret
jecxz,pt
out
dec
imul
jne
test
je
jo
lods
jnp
aad
loope
and
aad
ja
add
lret
cs
stc
and
mov
loopne
aas
pop
ret
inc
mov
stos
test
iret
je
bound
imul
fildll
ja
or
add
shrl
fisubs
mov
imul
xchg
cmp
negb
add
sahf
daa
sbb
or
mov
mov
xor
les
mov
imul
in
test
repnz
push
ds
xor
xlat
sub
ret
jg
enter
mov
jmp
arpl
pushf
ret
jb
dec
roll
mov
push
iret
pop
pop
jae
call
js
cmp
pusha
mov
cmc
fwait
cmp
outsb
shrl
inc
loope
cs
fistl
ja
cmp
xor
lock
sbb
std
jno
pusha
cmpb
jno
xchg
add
popa
outsb
inc
clc
repnz
mov
es
fcomp
jae
and
mov
push
scas
hlt
pop
inc
jno
jae
or
jbe
push
or
call
and
pop
fsubs
fidivrl
repnz
pusha
in
sbb
push
jno
imul
fadds
inc
imul
pop
cltd
neg
pusha
push
imulb
mov
push
xor
sbbl
mov
cli
dec
test
sub
icebp
lea
adc
imul
jmp
sub
data16
ficompl
adc
inc
or
push
push
sub
cs
rcrl
cmp
scas
pop
out
fdivp
jl
pusha
aad
push
adc
das
leave
inc
negl
add
xchg
dec
leave
jle
cli
btc
jp
pusha
sbb
mov
sub
adc
push
int3
enter
in
xchg
into
xchg
adc
sbb
and
cmp
or
push
lret
lods
push
mov
mov
mov
push
arpl
out
push
mov
das
pushf
loop
cmpsl
fdivrl
outsb
cltd
repz
fwait
inc
dec
sbb
cltd
adc
sub
ljmp
jae
mov
mov
jl
jbe
xlat
gs
ljmp
aad
loope
aas
or
mov
jecxz
pushf
fs
inc
jne
mov
inc
ja
push
or
xor
test
inc
add
jg
repnz
cmpsl
pop
mov
sbb
and
dec
jb
enter
stos
out
dec
fwait
popa
ss
icebp
push
cmp
push
jo
into
xchg
sub
addr16
pusha
xor
pop
out
xchg
ja
inc
ds
sahf
and
add
xor
imul
or
mov
sarb
clc
jbe
icebp
mov
jae
dec
ss
into
and
mov
adc
fdivr
jno
add
cwtd
dec
ret
push
jno
mov
sub
xchg
and
mov
lods
div
cmpsb
fldt
sbb
cli
sarb
jae
or
andb
cmc
mov
push
data16
cmpsl
pushf
push
int
add
mov
mov
repnz
xchg
cmpsb
sub
in
inc
popf
xor
fsubrl
jno
jbe
dec
clc
dec
mov
sub
fdivrp
pop
xor
roll
lret
xor
outsb
xchg
push
dec
pop
push
into
rcrl
push
loope
pop
push
xlat
jl
insb
test
cmp
sbb
pop
mov
cmp
push
div
mov
aad
stc
icebp
mov
mulb
loope
in
or
sti
into
xor
inc
lock
lods
mov
std
mov
add
ret
jnp
fisttps
test
std
fs
mov
sub
or
lret
insb
pushf
mov
out
imul
test
ss
dec
mov
sub
sub
ljmp
ret
jne
hlt
in
lahf
fsubr
mov
jg
loop
and
fstpl
subb
sahf
dec
lcall
ret
or
adc
lods
rcrb
jo
xor
jle
jns
in
mov
mov
pusha
sub
jne
dec
jae
sbb
push
mov
jb
xor
or
insl
fisttpll
dec
fistpll
pop
jg
mov
test
push
mov
add
pop
shrb
and
cwtl
cmp
inc
addr16
push
jo
mov
pop
testl
fcmovnb
dec
xchg
insb
sbbl
enter
mov
movsb
int
adc
xchg
cmp
dec
ljmp
sbb
cli
pop
mov
movsb
mov
cmpsb
sbb
rolb
sub
add
pop
daa
cmpsb
pop
stc
scas
jno
sbb
mov
xor
dec
mov
jno
add
or
dec
out
pusha
mov
aas
ja
aad
mov
shr
mov
push
push
roll
sahf
in
push
shrb
in
in
dec
and
or
sub
mov
pusha
add
or
popa
mov
dec
sub
push
bound
in
sub
pop
xchg
push
mov
inc
sbbb
pusha
mov
jne
fldcw
shrl
mov
lret
insl
push
movsb
add
adc
inc
jo
mov
clc
and
divb
movsl
sbb
jae
adcb
mov
leave
mov
ja
push
cmp
cmp
inc
aas
push
fsubs
cmp
ljmp
testb
loop
andl
iret
loope
xchg
adc
mov
and
mov
out
jp
data16
out
insb
loopne
jge
and
out
fsubr
icebp
push
add
btc
rcrl
and
scas
lret
cwtl
loop
dec
in
cmpl
inc
fisttpl
insl
mov
cmp
mov
bound
dec
scas
xchg
ja
push
push
mov
in
dec
lods
cmp
popaw
rorb
icebp
data16
rorl
adc
push
enter
cmc
lods
in
cmpl
adc
inc
test
addr16
and
lods
mov
sbb
mov
push
and
pop
incb
inc
xor
xor
jp
popa
jne
out
cmp
push
mov
daa
xchg
mov
inc
clc
fildl
repnz
inc
xor
arpl
lea
lcall
movq
adc
ficomps
pop
scas
jnp
jp
ret
jbe
jae
or
push
and
inc
mov
insl
sbb
sahf
stos
clc
jg
jecxz
stos
sbb
push
call
or
lcall
repnz
xor
cwtl
mov
add
pushf
and
ss
xor
in
out
add
scas
push
jae
fdivrs
xor
fs
push
sarl
pop
push
std
in
les
push
pop
insb
push
int3
das
mov
mov
in
mulb
int3
inc
xlat
int
sub
lahf
push
adcb
jge
movsl
ficoml
sahf
mov
daa
out
jnp
push
shrb
adc
idivb
stos
int
mov
push
sti
adc
fwait
test
iret
shr
js
insb
fcomp
test
mov
hlt
shll
imul
mov
xlat
push
mov
fwait
inc
pop
popl
test
test
push
cmp
arpl
lret
insl
sbb
adc
fsubrl
push
push
inc
fs
pop
repnz
push
mov
insl
xchg
cmp
cmpl
shll
cltd
ljmp
mov
ficoms
loope
in
addr16
leave
xor
outsl
cmc
push
jecxz
inc
xor
mov
dec
or
push
popa
mov
in
cld
mov
fistpl
push
mov
sub
les
loop
adc
adc
pop
push
mov
or
xchg
les
inc
cmp
mov
scas
xlat
nop
mov
bound
andl
lock
jno
leave
lret
cmp
xor
int
inc
into
xchg
lods
ljmp
cmpsl
cmp
adc
out
mov
out
sbb
mov
cwtl
inc
dec
sahf
mov
mov
outsl
jne
cmp
inc
dec
inc
xor
in
xchg
pop
jecxz
adc
sti
iret
std
mov
cmp
jne
popa
adc
mov
mov
mov
adc
cmpl
nop
xor
bswap
dec
aas
lret
or
scas
in
or
adc
dec
movsl
fidivrs
enter
stos
xor
and
xlat
daa
cmp
fistpll
mov
jne
adc
rcrb
loope
add
sub
dec
mov
push
shll
push
push
mov
shr
adc
dec
enter
dec
xchg
mul
mov
mov
jo
or
cwtl
sbb
sbb
stc
mov
add
inc
scas
fwait
daa
push
pusha
and
or
sub
push
pop
aaa
es
xchg
push
scas
cwtl
cmpsb
jl
xlat
inc
inc
shll
dec
enter
xchg
icebp
xor
xor
adc
mov
data16
push
inc
sbb
les
cmp
and
inc
pop
adc
arpl
test
pop
mov
and
mov
add
adc
xlat
and
sub
add
int3
fildll
xchg
sub
push
loope
mov
push
sbb
jge
xchg
jge
inc
fistpl
imul
push
dec
int3
icebp
cmpsl
insl
nop
mov
aad
dec
or
bswap
cmp
aam
cmpsb
fwait
jb
fcmovnbe
popf
xchg
pop
jbe
test
push
aas
add
push
or
cmpsl
inc
out
mov
sahf
or
add
movsb
std
push
cmp
enter
or
cltd
je
test
adc
jp
leave
out
subb
push
inc
nop
or
xchg
mov
mov
test
adc
pusha
pop
push
pop
cmp
popf
pop
xlat
imul
shrl
xor
lods
jl
pushf
cltd
add
pop
fdivrl
mov
xchg
das
adc
and
xor
ja
jg
push
pop
mov
fwait
dec
dec
dec
test
rcl
mov
out
cld
xor
mov
or
insl
test
mov
aad
mov
fimuls
xor
sar
out
stc
and
mov
enter
ret
adc
fbld
repz
sub
lcall
lahf
test
in
pop
sub
push
jecxz
movlhps
mov
fsubrl
pop
pushf
aad
imul
jne
ljmp
pop
test
adc
add
push
ja
jmp
fwait
xor
push
out
aam
lcall
sbb
cld
and
xorl
js
push
pop
jp
xor
in
pop
cmp
adc
mov
movsl
mov
pop
mov
pop
call
pop
cmp
mov
jge
jle
leave
dec
sti
pushf
mov
inc
je
fstpt
bound
subl
adcl
enter
push
decl
outsb
mov
loope
sub
adc
sbb
dec
pop
out
mov
mov
push
push
stos
pop
pop
insb
mov
adc
pop
cli
call
push
push
inc
cli
mov
pop
dec
xchg
js
insb
or
adc
mov
shrb
mov
mov
xor
mov
and
cmp
mov
das
enter
gs
pop
pop
cwtl
js
and
incb
push
cmpsl
mov
aas
push
and
dec
cmp
jmp
js
fs
outsl
out
lods
sbb
xchg
aam
ja
sti
and
lods
sbb
ret
push
pop
add
add
bound
ret
xchg
shll
lcall
mov
dec
inc
xor
pop
xchg
cmp
popf
xlat
ret
xor
int
std
pop
jb
mov
mov
jno
inc
mov
fdivs
xlat
xor
mov
sbb
cmpsl
mov
inc
cld
and
adc
pop
or
pop
outsl
inc
dec
cmp
dec
mov
mov
jmp
out
jmp
fistpll
filds
mov
jge
pop
cli
inc
shrl
add
or
iret
aam
dec
and
dec
test
cmpl
xor
in
push
sbbl
outsl
adc
andb
fmuls
inc
push
push
leave
mov
ror
adc
gs
mov
add
repnz
cli
or
je
sbb
mov
dec
cmp
and
cltd
mov
push
in
inc
jno
movl
mov
or
lods
fsubrs
mov
jmp
and
dec
mov
setbe
hlt
and
jnp
dec
inc
jns
xor
lahf
out
jecxz
mov
rcl
orb
out
and
es
cmpb
mov
mov
and
xor
pop
les
ret
push
andl
aad
loop
mov
aam
and
popf
fisubrs
xchg
out
popa
mov
fnsave
xor
aad
pop
sti
outsl
inc
xor
mov
stos
stc
push
sbb
pop
mov
sbb
mov
cmp
dec
aad
shll
dec
ss
mov
je
jmp
mov
js
lods
fistl
loopne
pop
loope
lea
int3
lret
fs
cmp
inc
dec
test
mov
inc
pop
repz
push
sbb
lret
sbb
xchg
scas
test
cltd
shrl
pop
push
inc
lods
popa
mov
or
test
jle
add
fabs
scas
int
and
xchg
fs
push
mov
jbe
dec
loope
out
insl
jo
xchg
je
xchg
aas
testl
or
scas
mov
scas
movsb
pop
fs
mov
inc
mov
enter
mov
pop
dec
fwait
pop
imul
rcl
pop
dec
rcll
mov
dec
cld
out
sahf
and
addl
add
jns
xor
mov
dec
lea
cltd
jecxz
icebp
call
enter
int3
mov
out
inc
daa
push
cmp
jg
inc
lret
cmp
mov
xchg
dec
nop
or
cwtl
int3
fsubl
lds
movsb
outsl
mov
jnp
pavgb
adc
dec
sbb
add
push
mov
divl
mov
fsts
mov
ffree
inc
adc
adc
aad
mov
ror
mov
xchg
cmpsb
pop
mov
imul
xchg
push
fldt
mov
push
ds
xchg
out
xchg
subb
jg
clc
cmp
and
push
cmp
rolb
or
faddl
jb
xchg
incl
cli
in
dec
adc
movsl
mov
xchg
and
insb
in
iret
pop
mov
orl
inc
jp
mov
xchg
add
pushf
jno
fbstp
stos
add
ret
sbb
inc
push
rcll
and
mov
cmp
fxch
jmp
or
rcr
lods
pop
bound
fsubp
mov
into
dec
mov
mov
fsubl
dec
sub
pop
mov
adc
popf
push
sub
in
jge
out
and
mov
cwtl
rclb
mov
cmc
loope
inc
cmp
sbb
cmpsl
fucom
push
sub
enter
scas
cmpsb
scas
lds
into
into
prefetch
int
xor
push
rcll
jg
js
mov
mov
mov
fldenv
repz
pop
inc
call
loop
jge
pop
xchg
out
jl
inc
loopne
pop
xchg
or
and
cmpsb
push
sbb
in
cli
mov
pushf
jbe
sub
fildll
add
pop
out
add
pop
aam
repnz
ret
and
xor
iret
clc
icebp
iret
inc
jnp
aas
leave
pop
add
add
push
dec
pushf
fists
adc
dec
sbb
rolb
scas
repz
add
sub
mov
cmpsb
sbb
push
notb
call
cli
lods
push
sub
adc
dec
scas
xchg
jae
fs
fwait
add
jp
pop
rcr
sub
push
sub
add
sbb
xlat
mov
out
ja
rclb
mov
ljmp
xchg
mov
mov
orl
jno
movsb
inc
addb
mov
sub
jmp
mov
les
push
lcall
fldt
les
xchg
aam
push
cwtl
xchg
inc
pop
sub
mov
loop
clc
sbb
mov
imul
or
dec
iret
loop
xchg
pushf
mov
insb
daa
jae
rcl
mov
push
scas
add
lods
jecxz
sbb
and
pusha
pushf
mov
pop
mov
sbb
ret
test
and
cmp
rcrb
lcall
jno
jge
jp
mov
ret
push
inc
or
xchg
or
in
jmp
ds
mov
fiadds
adc
push
mov
call
xlat
add
pop
add
notb
loop
sbb
push
hlt
xchg
cmp
adc
jl
leave
mov
daa
mov
pop
pop
jbe
xlat
jmp
pushf
int3
inc
push
lret
and
loopne
pushf
mov
test
scas
scas
jns
dec
pop
cmp
faddl
lahf
adc
push
sub
pop
das
iret
push
fldcw
in
inc
push
adc
add
mov
dec
cmc
or
cmp
xchg
or
jg
or
scas
sar
mov
push
cmp
ja
adc
aas
ja
xor
pop
sbb
inc
cltd
and
add
movsl
pop
icebp
popf
or
mov
jne
shlb
xor
or
inc
aad
xchg
test
jge
std
shr
fwait
ds
mov
push
or
pop
jmp
fisttpll
iret
js
push
movsl
shll
or
ret
rorl
dec
int3
ret
or
rclb
mov
divl
pop
dec
mov
mov
and
adc
mov
loope
or
std
divb
popa
outsb
bound
xchg
mov
cmp
jno
mov
cs
xor
inc
loope
sbb
scas
lods
mov
mov
and
sti
fwait
icebp
loopne
cld
xor
push
test
pop
xchg
mov
leave
mov
sbbl
pop
sbb
ret
loopne
inc
fistl
cld
cs
popl
xchg
pop
lds
testb
ljmp
andl
out
push
in
jle
and
cwtl
sti
add
gs
and
cmc
dec
xchg
loopne
sahf
adc
pop
cli
pop
ljmp
mov
dec
pop
mov
mov
adc
mov
ret
lahf
fisubs
cmp
or
jl
inc
jmp
pop
outsl
test
adc
adcb
xor
sub
les
and
mov
cli
add
mov
push
icebp
insb
pushf
ljmp
js
pop
sbb
shlb
fsubl
addb
loop
mov
sbb
ret
outsb
movl
insl
ja
rclb
push
out
std
sub
xor
mov
stos
mov
int
neg
xor
mov
and
dec
sub
mov
aam
inc
out
inc
sub
mov
lcall
lahf
pop
jae
hlt
rolb
mov
cmpsb
xor
out
push
data16
iret
mov
pop
or
fldcw
out
jp
cmp
das
fisttpl
cmp
add
imulb
add
adc
mov
lock
and
out
adc
pusha
dec
bound
sub
scas
mov
pop
ret
adc
mov
ds
andl
and
ret
xchg
clc
js
inc
sbb
sbb
inc
jg
cltd
mov
decb
pop
test
push
sub
pop
lret
pop
and
aad
call
andb
es
icebp
out
addr16
jl
into
sti
push
xchg
lds
out
test
lcall
sub
jle
dec
sbbl
inc
xor
inc
cltd
repz
sub
sub
or
xchg
and
sti
fndisi(8087
sti
adc
and
aaa
sub
inc
xchg
loop
dec
adc
adc
hlt
pop
or
cmp
push
cmp
js
into
xor
pop
add
xchg
push
pop
cmp
jne
fsubrs
xchg
push
pop
das
pushf
mov
pop
ret
stos
mov
out
inc
add
xchg
hlt
jbe
and
mov
xchg
lret
push
pop
lret
sti
bound
push
fs
inc
cmp
rorb
test
sbb
sti
adc
push
sub
push
jmp
fldt
stc
mov
lods
pop
push
enter
popa
pop
jp
add
fwait
or
in
push
sub
sub
lea
jns
lahf
lahf
push
mov
int
lea
fwait
jne
gs
es
jmp
inc
and
outsb
xorl
stos
push
cmp
mov
pop
aaa
scas
mov
lcall
or
mov
mov
insl
cmp
sbb
dec
xlat
scas
lods
movsb
pop
sbb
mov
cs
aad
sub
je
cmp
mov
mov
push
cmp
dec
xchg
loopne
int
pop
cmpsb
mov
cmp
mov
or
adcl
aam
lds
iret
aam
cmp
dec
adc
mov
sub
inc
sbb
mov
mov
mov
fldcw
mov
popf
loopne
mov
mov
int3
insb
add
in
loopne
add
mov
mov
dec
inc
aad
sub
outsl
dec
inc
add
and
dec
icebp
outsb
lock
loope
and
cmp
add
fdivrl
xlat
add
xchg
popf
imul
hlt
sub
xchg
xchg
mov
inc
add
push
pop
imul
or
mov
out
outsb
mov
scas
jp
xchg
pop
out
mov
jg
dec
pop
lods
nop
stc
ret
sbb
xor
pop
sub
adc
inc
mov
outsb
mov
ret
aam
mov
loope
ljmp
mov
sub
xor
adc
lret
mov
mov
push
and
repz
pop
lods
sub
push
fiadds
cli
mov
mov
cmpsl
mov
xchg
mov
push
push
lea
jno
pop
faddl
sbb
jne
mov
sbb
adc
lock
rcrb
rcrb
inc
sub
ds
loope
push
push
inc
push
rcll
jns
mov
mov
sbbb
dec
xor
aaa
push
jno
sub
pop
push
loop
test
nop
and
stos
jmp
adc
add
cmp
fs
movhlps
sbb
xor
jl
sbb
dec
outsb
out
insl
sahf
daa
xor
mulb
decl
mov
jne
pop
std
jp
insb
xchg
test
jbe
into
data16
push
push
movsb
lahf
popf
out
or
push
fimuls
lcall
push
enter
mov
pusha
xchg
test
add
cmp
scas
inc
push
sub
add
xchg
sbb
adc
xchg
mov
ret
ds
inc
add
and
mov
push
pop
cmp
push
shr
inc
out
in
dec
mov
popa
ret
sub
or
mov
dec
into
dec
repnz
mov
push
fs
mov
add
jle
xor
xchg
ss
loop
add
fs
fldt
es
inc
lock
pop
cmp
lret
xorl
sub
push
mov
or
fwait
push
xor
sbb
pop
lcall
xor
hlt
lahf
xor
push
xor
push
int3
fcomip
mov
stc
enter
jle
aad
sub
addr16
lea
ss
sub
addr16
add
aas
aam
push
std
hlt
rcrb
insl
lods
dec
xlat
aaa
and
pop
je
add
push
add
pop
movsl
mov
dec
or
xchg
fstpl
mov
pop
or
inc
and
or
mov
push
mov
repz
pop
fwait
out
push
rcll
or
or
into
or
outsl
repnz
jecxz
inc
mov
out
adcb
inc
stc
arpl
adc
lcall
int
sub
leave
in
cmc
test
mov
and
imull
add
adc
sub
jo
out
test
mov
or
lds
gs
movb
repnz
pop
and
xchg
imul
mov
lock
gs
mov
int
inc
add
addr16
test
loop
sub
gs
dec
hlt
or
scas
sti
jp
mov
bswap
pop
mov
mov
dec
cmp
sbb
sub
sub
inc
mov
fldenv
popa
daa
pop
fbstp
and
dec
aad
jne
fistpll
and
xchg
jge
push
jg
loope
jns
or
in
nop
scas
jp
daa
dec
mov
sbb
repnz
inc
or
or
sbb
loopne,pn
in
push
cmp
inc
pop
mov
sub
call
les
dec
mov
dec
in
ret
xchg
mov
or
test
lds
jbe
xor
cmpsb
fcomp
jb
cwtl
addr16
sbb
jge
js
mov
pop
clc
push
add
xor
add
push
sbb
mov
stc
inc
cmp
outsb
and
push
mov
pusha
std
inc
loop
push
sbb
mov
mov
mov
dec
dec
divl
das
aam
loop
stos
repz
imul
outsb
inc
insb
int3
les
or
lcall
int
mov
mov
xor
jns
jg
xchg
dec
adc
mov
mov
ss
flds
cmp
test
push
mov
out
je
ljmp
push
out
mov
js
andb
push
test
push
inc
xorl
mov
mov
mov
adc
rcr
fistl
mov
mov
sub
add
dec
add
fadds
aam
mov
clc
cs
or
xorps
xchg
repnz
dec
lods
dec
inc
cmp
sbb
imul
in
insb
aaa
hlt
push
les
inc
xor
or
test
push
cmp
nop
adc
clc
lret
dec
xchg
out
and
out
outsl
into
arpl
push
sahf
shl
jno
sub
mov
je
dec
mov
mov
rcr
and
cmpsb
pop
adc
lahf
insb
loop
fs
pop
repz
loopne
test
mov
rorb
inc
das
lcall
push
and
cmp
pop
mov
jg
cmp
lods
nop
add
cmp
xchg
int3
cwtl
insb
add
mov
xchg
roll
inc
aam
xor
jg
mov
inc
rolb
inc
loop
and
insl
mov
xor
dec
in
dec
cmpb
xor
sar
mov
bound
daa
xchg
jnp
jb
pop
push
insl
cmpsl
jbe
mov
je
lds
push
in
lret
push
aam
loop
jns
jmp
movsb
popa
lret
or
jg
push
repz
stc
icebp
mov
mov
scas
adc
mov
dec
in
les
inc
push
sbb
pop
aad
inc
les
cmc
in
push
sbb
fsubrs
mov
inc
adc
hlt
and
outsb
pop
adc
jp
ljmp
leavew
scas
ljmp
addr16
scas
inc
lods
int
mov
xchg
ljmp
rolb
aad
xor
or
jbe
lods
and
xchg
or
sbb
ret
lock
jmp
push
fldcw
push
sti
bound
sbb
add
in
push
sti
loope
sbb
pusha
xor
cs
and
pop
fsts
arpl
or
enter
xchg
mov
inc
jmp
lret
fsts
mov
xchg
mov
xor
in
dec
jae
lret
test
fistpl
sahf
enter
fnsave
cmp
imul
pop
fists
in
lcall
stos
repz
movsb
dec
cwtl
lret
adc
and
es
jae
or
pop
fs
or
adc
xchg
push
divl
inc
xchg
arpl
jmp
das
mov
mov
sbb
mov
popf
pop
mov
out
mov
cmpsb
subb
dec
jge
inc
lock
cmpsb
shlb
test
push
outsl
sbb
and
pop
or
mov
xchg
pop
xor
pop
jnp
test
sti
push
xchg
xchg
sub
pop
xchg
cmp
sbb
cmp
in
pop
sbbb
js
mov
rclb
dec
dec
sub
out
ljmp
mov
mov
pushf
popf
aam
sbb
cmp
popa
and
test
movsb
push
mov
ret
cmc
adc
push
xchg
dec
cs
jg
jo
sub
es
mov
in
mov
bound
mov
addr16
test
lods
xchg
hlt
jns
jmp
jg
add
popa
cmp
leave
sbb
mov
mov
loope
mov
aas
mov
call
lcall
sub
stos
dec
adc
mov
push
or
sbb
dec
adc
in
xchg
jne
cltd
rorb
popa
or
add
nop
dec
and
cwtl
out
xchg
cmp
call
flds
inc
jno
notl
mov
adc
sbb
mov
inc
jbe
mov
stos
loope
fcoml
xor
adc
sub
movsb
mov
mov
outsb
sti
daa
mov
mov
outsb
inc
adc
or
jecxz
jmp
sbb
inc
push
jg
iret
imul
mov
cs
jno
in
xchg
mov
sub
sub
aam
iret
je
aaa
loope
inc
mull
ja
shrl
or
lea
sbb
xor
or
andb
scas
mov
es
lock
adc
jne
mov
lret
cmp
push
add
out
fisttps
call
adc
test
xor
dec
ds
fwait
xchg
mov
add
mov
pop
shlb
or
les
xor
jns
sti
dec
mov
inc
and
xor
cwtl
shlb
cmp
movsl
ds
test
jbe
and
mov
movsb
mov
test
push
xor
or
mov
out
scas
fcompl
outsb
test
je
adc
sbb
repz
jp
pop
bound
jl
movsl
clc
pop
dec
inc
hlt
lea
es
add
and
cmpsl
mov
inc
jo
arpl
xchg
imull
push
cmp
rcrb
insb
ret
push
xor
sub
cwtl
jno
lea
hlt
rep
adc
aam
mov
sbb
scas
mov
fs
loop
and
aad
inc
int3
adc
xor
or
push
add
in
jl
aam
mov
mov
xor
insl
mov
in
rcrl
das
add
popa
dec
xor
xchg
in
cmpsb
nop
xor
or
mov
pop
jmp
scas
xchg
daa
cmc
mov
insl
pop
sub
and
mov
mov
and
aam
int3
jo
inc
mov
js
orb
and
or
fs
jns
inc
bound
ret
and
ficoms
lock
mov
ss
sub
fucomi
add
aam
push
pop
mov
add
pop
jo
cmp
clc
js
sub
enter
fstp
gs
push
shll
in
push
jo
push
cwtl
loop
outsb
aam
and
pushf
jne
adc
jmp
jae
xor
pop
test
fs
es
cmp
jl
pop
nop
aad
adc
push
jmp
adc
adc
sahf
shrl
inc
adc
adc
push
push
jns
jae
frstor
mov
mov
jb
pop
cwtl
pop
or
test
negb
xchg
lcall
mov
add
cmp
xorb
test
mov
xchg
xchg
jae
gs
movsl
mov
cli
pop
les
inc
sahf
pop
mov
push
stos
push
mov
repz
pushf
or
ljmp
xor
sub
cmpsl
add
dec
cmpsb
test
add
xchg
iret
js
pop
mov
cltd
outsl
ret
popa
movsl
fisubs
out
mov
stos
jae
jns
push
push
add
test
cltd
xor
lods
xchg
xor
clc
xor
adc
cmp
iret
es
call
cld
loope
inc
inc
scas
setge
push
shl
insb
inc
lahf
pop
ret
stc
push
shll
mov
mov
subl
fsubr
repz
popa
mov
inc
lcall
or
in
int3
add
pop
aam
cmc
icebp
push
out
push
insb
test
pushf
dec
dec
clc
add
and
out
or
fwait
sbb
push
repz
shlb
xchg
mov
mov
aas
sbb
add
sub
movsb
lahf
fildl
jns
inc
sbb
lea
pop
push
out
adc
ds
xor
pop
idivb
mov
mov
insb
xchg
push
das
inc
outsb
int
mov
out
movsb
pop
xor
pop
xlat
cmp
sub
inc
mov
cmpsb
es
and
sbb
xor
mov
xchg
fidivl
cmpsb
cmpsl
cs
pop
and
icebp
in
pop
or
aam
sub
out
push
pop
cmp
and
mov
push
inc
dec
dec
mov
push
dec
xchg
cmp
loop
addb
dec
lds
cltd
cltd
mov
jg
lahf
and
mov
ss
repz
cli
stos
dec
adc
outsb
push
jo
dec
cmp
pusha
sahf
lds
enter
add
xchg
cmp
xor
imul
ss
ret
push
leave
cmpsb
jge
loope
and
mov
scas
cwtl
out
xor
sub
mov
sbb
pop
adc
adc
push
and
jecxz
mov
mov
test
in
xchg
mov
or
jbe
insl
or
out
push
and
dec
or
push
jbe
fstpt
fbstp
int
pop
sub
pop
mov
pop
ljmp
fstp
icebp
xchg
fs
jl
sbb
or
je
add
xlat
cwtl
inc
dec
push
xchg
xchg
fisubrs
out
inc
dec
jp,pn
mov
push
leave
xchg
out
pop
jle
out
add
and
rolb
je
hlt
dec
push
ror
push
mov
cmp
jle
loopne
gs
iret
and
pushf
mov
adc
roll
jecxz
pop
cs
fistps
mov
and
jecxz
push
cwtl
jb
subl
inc
push
repz
movsl
pop
mov
and
or
sbb
mov
mul
pop
imul
jmp
or
or
in
jb
dec
cltd
or
scas
push
mov
aad
mov
mov
mov
or
pop
mov
and
rorl
xchg
fstps
jg
mov
cmp
fbstp
or
jae
add
lahf
xor
nop
repnz
sbb
xchg
mov
push
icebp
add
dec
or
jns
jbe
jb
fdivs
loope
xchg
inc
outsb
out
lea
dec
in
dec
xor
insb
pop
push
add
mov
mov
adc
ficomps
in
sbb
jmp
jne
sahf
add
mov
inc
test
sarl
jb
cmc
fucomi
fnstenv
dec
pop
inc
dec
mov
cwtl
loope
fmul
mov
adc
jmp
or
pop
stc
fstpl
jp
push
inc
outsb
inc
cmp
cs
lcall
cs
ret
sbb
adc
inc
sbb
mov
push
hlt
notl
mov
cmc
ds
orb
mov
nop
jnp
addb
cltd
sbb
or
xor
pop
cmp
aad
jno
or
out
adc
push
xchg
mov
mov
movsb
xchg
adc
int
inc
mov
repnz
and
pushf
enter
inc
jbe
push
test
mov
pop
mov
cmp
out
adc
mul
and
repnz
adc
push
ss
push
inc
test
lret
cmp
xchg
xchg
outsb
jno
and
pop
pop
adc
les
adc
jns
out
roll
sbb
shrl
aaa
fwait
or
cmp
fimuls
xchg
into
inc
test
call
cs
jecxz
or
inc
mov
and
in
insb
stos
and
fnstcw
add
dec
cmp
mov
mov
xchg
xor
rol
adc
jns
cmp
mov
mov
xchg
mov
dec
stos
loopne
jne
cmc
inc
xchg
and
cmp
mov
pop
iret
or
pop
fwait
incl
sbb
nop
push
subl
inc
mov
pop
jge
xchg
jo
sub
adc
sub
add
xchg
lret
loope
js
fnstcw
test
sbb
jb
fistps
sub
lods
sub
jnp
ja
test
cmp
movsb
scas
adc
iret
mov
jae
lods
add
faddl
push
cli
mov
divl
dec
cmp
mov
cmp
add
lret
test
mov
icebp
mov
or
inc
adc
jmp
jecxz
test
test
sar
cmpsl
into
dec
cli
or
mov
jnp
push
movsb
int
shr
out
xchg
sbbl
push
or
jge
cmp
sbb
and
sti
and
movsl
jmp
lret
mov
dec
lret
sub
jno
sbb
rcl
fisubrl
sbb
dec
or
in
mov
mov
idivl
shrb
sahf
sub
test
sbb
xor
sbb
test
inc
and
and
scas
mov
insb
jle
mov
mov
and
sahf
push
jno
ja
lods
movsl
xor
add
xchg
pop
icebp
mov
rol
xor
lds
and
test
jge
mov
push
push
pop
xor
push
sahf
cmpsl
fildl
xor
mov
imul
xchg
movsb
cld
outsl
out
test
stc
lods
mov
daa
mov
loopne
or
aas
lods
cmc
popf
loopne
dec
imul
xchg
jo
or
ficomps
and
sub
cmpsb
out
xor
jno
insl
fwait
dec
cmp
xchg
inc
pop
mov
outsb
sbb
pop
stos
mov
scas
xor
xchg
xor
lods
outsl
adc
out
fstps
jne
or
xchg
out
mov
not
sbbl
cmp
lahf
push
cli
outsb
sbb
mov
ds
add
mov
subb
mov
jns
jo
cltd
loop
leave
xchg
ret
scas
mov
inc
nop
jp
shrb
rcrl
add
daa
adc
jge
push
loope
mov
fisubs
daa
xchg
mov
aaa
add
std
push
rolb
and
movsl
rorb
jo
outsl
into
adc
pusha
cmp
aad
leave
je
movsb
push
sub
mov
test
ja
test
outsl
add
inc
sbb
xchg
and
or
or
jl
cmp
pop
int
cmp
xlat
outsl
arpl
xchg
lret
mov
cmp
jae
cmp
xchg
and
mov
add
cltd
xchg
mov
dec
cli
dec
cmp
add
dec
sbb
cmp
xor
hlt
jbe
sbb
sbb
xchg
pop
fldcw
pop
sbb
dec
push
leave
fnstsw
mov
adc
scas
mov
mov
mov
test
insb
out
fbld
sbb
hlt
cltd
cmc
push
nop
add
lods
and
push
xor
stc
pop
pop
push
loopne
fistpl
jnp
aaa
daa
xchg
sub
mov
mov
in
cwtl
cmp
add
mov
xor
sbb
test
bound
in
jnp
lahf
addr16
sub
mov
fildll
icebp
cmp
inc
addr16
fnstsw
push
bound
mov
cli
or
cmpsb
out
or
nop
testb
fstl
aam
pop
shll
adc
and
jg
xchg
std
lods
adc
std
dec
mov
or
dec
out
push
fistpll
dec
push
jb
lahf
push
mov
mov
test
mov
mov
out
pop
arpl
xor
std
xor
jo
xor
ja
inc
aas
ljmp
scas
sub
outsb
adc
fwait
mov
ljmp
cmc
xor
and
mov
in
lahf
add
sbb
add
dec
or
sbb
jo
xor
push
testl
lods
std
or
pop
dec
fidivs
push
insb
ljmp
pop
jae
enter
jmp
lods
xchg
push
xlat
xlat
testb
movsb
mov
sahf
mov
ret
pop
push
dec
sar
call
sub
popa
jbe,pn
arpl
xchg
fdivrs
mov
add
mov
add
push
into
pusha
xor
test
into
addr16
push
les
jnp
sbb
in
and
outsl
push
adc
cmp
addr16
mov
fcoms
cwtl
jle
pop
mov
jb
repnz
add
push
pop
xor
or
xlat
aad
dec
adc
cmp
lods
xchg
and
arpl
jae
cmp
mov
adc
cmpb
sbb
leave
jne
and
mov
inc
call
push
push
or
cmp
xor
add
mov
mov
arpl
xorb
outsl
movsl
mov
add
dec
insl
movsl
roll
mov
adc
push
repz
xchg
and
addb
sbb
dec
mov
jg
push
mov
ret
jns
out
push
fisttpl
daa
mov
lcall
mov
mov
mov
ljmp
loope
dec
pop
and
hlt
cmp
jnp
mov
out
aaa
mov
jns
and
adc
and
gs
lods
daa
lods
jbe
cltd
add
divl
dec
lret
mov
dec
jmp
ror
push
sub
mov
jno
imul
mov
hlt
pop
cmpsb
mov
loop
push
jmp
scas
add
fldl
mov
test
mov
push
inc
inc
out
xchg
daa
or
add
pop
add
sbb
pop
loope
or
pop
fnsave
jl
adc
mov
repnz
cmp
fcomip
lahf
inc
xchg
pop
mov
dec
sti
das
adc
aas
fimuls
nop
xchg
xor
scas
es
mov
xchg
stc
dec
push
cmp
nop
cmp
cmpps
movsl
or
mov
cmp
push
pop
out
sub
mov
xchg
lret
push
ds
aam
sbb
cmpsl
adc
repnz
jbe
mov
cmp
mov
inc
push
xchg
imul
jge
aad
dec
push
adc
out
inc
dec
pop
or
xchg
sbb
mov
jg
mov
xor
test
mov
das
addr16
rdtsc
dec
cwtl
popf
leave
jne
push
jl
std
push
cmp
xor
dec
add
into
fwait
cmp
out
sub
das
and
pop
clc
xchg
push
enter
push
rorl
mov
inc
ds
or
cltd
dec
sub
and
cmp
loope
jnp
je
mov
and
mov
sbb
stos
mov
push
fistps
jmp
cmc
mov
mov
cmp
insl
movsb
mov
pop
jg
into
xchg
scas
mov
outsl
pop
dec
pop
sub
push
test
ficomps
stc
fcom
lods
jl
xchg
push
cld
dec
pop
xchg
stc
push
ror
test
adc
xchg
mov
mov
push
outsb
in
mov
jmp
jmp
push
jl
inc
fidivs
pop
cmp
cmp
xchg
pop
test
pop
cld
cmp
test
stc
and
xchg
sbb
out
in
pop
or
pop
pop
pop
adc
ds
jmp
xor
arpl
lods
and
out
or
or
out
mov
jmp
mov
cltd
es
test
repz
sub
xchg
jmp
loop
adc
dec
xor
adc
mulb
inc
cmp
add
test
push
add
fbld
cltd
out
sub
movb
cli
ja
or
aaa
and
cwtl
aam
dec
push
addl
pop
popa
xchg
das
loop
jg
ljmp
ja
xchg
jl
psrlw
pop
stc
push
leave
insl
mov
dec
pop
imul
and
add
xorl
mov
leave
aaa
push
xchg
mov
mov
andl
popf
in
ss
sbb
in
testl
pop
sahf
mov
fsubl
pop
jmp
mov
jnp
dec
pop
and
test
pop
cmpb
cwtl
mov
in
insb
sti
mov
inc
addr16
je
sbb
bound
xlat
sbb
xchg
cwtl
lret
lret
push
or
das
and
sti
push
cmp
add
movsb
lea
out
out
xor
cmp
out
ret
insl
jmp
cmpsb
pushf
cmpl
push
mov
fucomi
adc
rclb
inc
push
jno
shlb
adc
in
fiaddl
iret
or
and
cmp
out
push
mov
icebp
orb
ja
push
imul
xor
pop
push
adc
icebp
or
mov
test
psubsb
ja
test
cld
sbb
adc
mov
iret
lret
push
je
in
adcl
sbb
in
jle
testb
fisubl
jb
adc
iret
fwait
adc
inc
imul
sahf
cmpsb
sbb
lcall
push
xor
and
mov
lea
hlt
push
fsubs
arpl
pop
iret
xorb
adc
clc
dec
ja
mov
es
sbb
or
addr16
sbb
cmp
jne
sub
mov
or
inc
imul
xchg
into
icebp
add
in
pop
pop
jle
test
mov
sub
loope
xchg
jno
push
jno
mov
stc
lods
mov
mov
wrmsr
push
xchg
and
push
fs
mov
sub
cmp
xor
mov
repz
xor
sub
mov
mov
je
repz
adc
mov
orl
lock
sahf
aaa
lock
ret
inc
mov
jo
push
loop
loopne
push
mov
mov
mov
xchg
mov
sub
mov
jmp
loopne
cmp
shl
sbb
mov
or
adc
xchg
or
es
jmp
fisubrl
dec
dec
sub
fcomp
test
inc
test
push
jmp
inc
dec
sbb
xorb
in
mov
incl
je
gs
pop
mov
dec
rorb
lret
movsl
mov
xchg
inc
pushf
inc
add
cmpsl
andl
movsl
sub
popa
repnz
dec
and
jo
jb
push
xchg
push
arpl
lret
arpl
sub
pop
movsb
adc
stos
mov
pcmpeqd
repnz
enter
repz
sbb
mov
add
cmp
cmp
jnp
mov
mov
sub
fadd
adc
jne
test
cmp
lahf
repz
icebp
xchg
and
sahf
dec
dec
mov
add
les
jnp
pop
mov
in
mov
and
jbe
jno
negb
inc
pop
or
pop
xorb
mov
aam
adc
mov
pop
mov
gs
xor
xchg
sub
sbb
xor
inc
dec
mov
imul
xacquire
xchg
cmpsl
fiadds
std
es
add
and
or
ret
mov
mov
cld
push
cwtl
lcall
test
scas
call
fists
xorl
sbb
dec
adc
xchg
mov
push
cmp
cmp
leave
lock
nop
dec
sahf
mov
rcll
adc
sbb
pop
insb
out
out
or
lea
or
mov
or
ret
mov
mov
inc
jge
movsl
adc
ret
add
mov
dec
out
xor
mov
mulb
aaa
test
insl
adc
stc
pop
sbb
xor
or
imul
imul
lret
inc
movsl
cmp
movsl
xor
add
lods
adc
or
lods
out
jp
leave
cmp
aad
and
mov
rep
mov
out
int
xor
js
arpl
xchg
movsb
stos
mov
sbb
pop
test
stos
xchg
popa
adc
jne
lea
adc
icebp
into
jnp
fldl
cltd
mov
mov
mov
jmp
shrl
in
addr16
nop
ss
outsl
loopne
sbb
sub
push
push
pushf
adc
adc
mov
xor
ss
out
and
in
jle
int3
stc
inc
es
movsl
vmovlpd
jge
loope
xchg
fcomp
xor
jg
subps
adc
dec
inc
in
push
mov
push
aad
in
popa
jle
sbbl
and
push
sti
bnd
inc
incb
bound
mov
pop
iret
in
pop
push
scas
clc
mov
xchg
mov
or
in
or
xchg
int
add
aaa
add
cmp
sbb
or
mov
rcll
ror
jp
sub
inc
mov
jmp
std
add
mov
outsb
cwtl
icebp
lahf
cmp
dec
popa
fiadds
les
inc
sub
cld
mov
nop
xchg
jge
cltd
cmc
sbb
push
mov
inc
push
or
loop
sahf
inc
aam
cmp
push
jns
xchg
pop
mov
bnd
add
rolb
xchg
mov
cmp
lods
push
das
les
xlat
push
or
jno
lock
sub
lret
lds
jnp
jge
mov
mov
add
shll
cmp
dec
and
icebp
loopne
pusha
ss
loop
addr16
stos
dec
dec
mov
out
sbb
movsb
divl
sub
and
xlat
and
adc
ror
push
pushf
jl
mov
imul
adc
sbb
aam
test
ljmp
push
nop
test
xor
rcrl
dec
pop
je
ret
lret
cwtl
cmpsl
imul
jb
jo
xor
sub
cli
add
es
push
and
fidivl
iret
mov
sarb
mov
mov
daa
jbe
adcl
xchg
mov
jge
xor
outsb
and
bswap
mov
inc
cmpl
stos
mov
jl
jns
fldcw
add
call
add
in
fadd
pusha
in
or
leave
jnp
push
dec
int
popf
ljmp
adc
outsb
xor
popa
repnz
stos
ds
pop
sbb
push
push
lahf
shll
jae
fidivrl
mov
jmp
loopne
pop
jmp
mov
scas
outsb
sub
dec
incl
mov
inc
sub
std
dec
sti
loopne
shlb
loopne
mov
cmp
sub
sbbl
inc
aas
out
ret
aas
ror
lds
ret
addr16
std
xorl
scas
out
fstl
mov
je
jae
lahf
push
sbb
cmp
add
andb
cli
frstor
mov
push
movsb
ljmp
std
xchg
pop
sbb
shlb
cli
repnz
outsl
cmp
inc
ljmp
loop
insl
sti
pop
mov
push
in
cltd
sbb
pop
cmp
cld
pop
cld
pop
mov
sahf
mov
arpl
sahf
push
ret
mov
jg
std
clc
sahf
je
mov
das
daa
jo
pop
aas
fists
aas
mov
sub
sbbl
or
pushf
into
dec
fs
ss
push
sub
imul
push
mov
cmp
mov
cmp
js
pop
lahf
xchg
mov
rol
xor
or
sahf
xchg
shld
stc
or
les
lds
cmc
sub
enter
lock
xor
aas
inc
cmp
pop
dec
or
imul
xor
dec
xor
adc
movsl
fildll
xor
pop
pusha
lret
push
stc
jecxz
stos
or
cmp
sub
xchg
add
sti
fdivrs
jge
push
arpl
rcr
push
pop
pop
insl
push
mov
adc
pop
loop
ja
int
jg
xchg
sbb
cmp
xchg
xchg
xchg
adc
sbb
fcompl
in
cmp
jno
sub
addr16
int
int
cltd
ja
cmp
fisubrl
and
push
icebp
mov
ljmp
ror
xchg
je
mov
sbbl
fcoml
pop
xor
cmp
repnz
mov
shrl
mov
mov
ja
and
mov
xchg
pop
pop
mov
xchg
mov
add
sbb
mov
and
outsb
testl
pop
cmp
out
inc
jb
popf
je
xchg
pop
mov
push
mov
sbb
pop
out
ss
outsb
push
sub
xchg
mov
pop
push
into
scas
jmp
add
cli
js
and
pop
mov
cmp
hlt
jnp
jne
push
testb
xchg
sbb
pushf
push
mov
enter
mov
stos
addb
or
dec
repnz
xor
nop
and
sub
ja
mov
sub
cmpsb
movl
and
cmp
push
mov
in
jp
out
movsl
adc
out
xchg
pop
push
pop
fistpll
add
mov
aaa
shlb
testl
into
ret
scas
inc
fcmovnb
in
sbb
lsl
test
xchg
and
mov
pop
mov
mov
mov
jo
or
cmp
mov
mov
adc
mov
fistpll
loopne
sbb
or
ret
stc
mov
lods
cwtl
rcr
imul
push
jne
adc
lds
cmpsb
popa
jae
out
mov
cmpsl
xor
leave
in
inc
pop
push
movsl
xchg
dec
ret
add
push
ljmp
outsl
xchg
scas
sahf
cmpb
mov
mov
or
and
jne
pop
addl
xchg
inc
icebp
or
orl
call
jecxz
in
or
xor
push
std
sbbl
ffreep
mov
stos
test
inc
sub
xor
mov
pushf
rcrl
out
fidivl
repnz
and
dec
shl
jnp
jecxz
mov
scas
inc
in
mov
and
mov
repnz
or
pop
lods
ss
sbb
repnz
rcll
insb
sub
sbb
fucomp
jbe
test
or
adc
in
dec
and
jns
popf
cs
aad
je
push
pushw
frstor
in
push
and
mov
into
call
popa
sbb
xchg
push
jnp
int3
das
cltd
inc
in
dec
cmp
add
sbbb
lods
mov
push
les
loopne
cmp
cld
mov
jo
aas
call
loope
in
stos
and
push
lods
std
mov
or
jno
or
jle
inc
and
dec
pop
mov
out
aad
dec
xchg
add
mov
cmpsl
jmp
sub
sub
addl
aam
mov
inc
in
test
or
loopne
push
ss
insb
or
mov
popa
dec
xchg
mov
pop
leave
push
or
dec
hlt
cwtl
mov
jecxz
outsl
dec
mov
leave
xchg
xchg
test
out
loope
pop
push
cmpsl
mov
add
fidivs
pop
pop
inc
lahf
out
add
dec
sarl
testb
xor
aaa
fs
cmp
fucomi
les
dec
cmpsb
xor
nop
adc
pop
nop
xchg
nop
fs
pop
push
xor
fldl
ja
pop
lahf
cwtl
mov
push
pop
loop
pop
nop
stos
popa
dec
add
pop
dec
in
fmulp
xchg
mov
adc
pop
jae
mov
pushf
fildll
fsub
xchg
add
adc
xor
test
fisttpl
lret
or
insl
xchg
sysenter
ja
jae
int3
or
rorb
jae
das
add
out
repnz
xor
inc
jo
adc
lods
cmp
mov
or
xchg
cltd
test
fistl
push
loop
in
lds
pushf
dec
pop
cmpsb
test
pop
xor
jp
push
mov
push
dec
repz
lock
out
mov
aad
sub
push
mov
mov
and
movsb
jne
pop
fcmovu
pop
add
in
cltd
repnz
test
sub
cmpsl
fwait
movsb
aas
add
test
add
pusha
mov
push
inc
cmp
call
fdiv
cmp
cmc
shlb
dec
rorl
dec
ss
aaa
xor
sbb
adc
test
add
stos
jbe
add
rcll
jle
and
jne
arpl
loopne
andb
inc
imul
add
int
lods
roll
in
mov
or
mov
ficompl
or
stc
push
vpsrlw
lods
push
sbb
pop
inc
stos
cmp
fsubl
lret
xor
outsb
hlt
inc
std
push
pop
enter
and
movlhps
clc
cld
popa
fisubrs
jle
call
imul
sub
testb
lret
cld
lret
inc
outsb
icebp
push
xlat
ret
jae
popa
sbb
testl
ret
fstl
jno
xlat
mov
sub
mov
pushf
jp
jmp
push
andps
bound
test
aaa
dec
fimuls
push
inc
loope
nop
call
pop
test
dec
arpl
jns
or
mov
aad
daa
dec
xor
cltd
in
or
pop
add
and
stc
fistps
arpl
les
mov
mov
shrl
lcall
or
imul
lcall
adc
pop
rsm
jo
dec
and
xlat
pop
xchg
aad
out
pusha
adc
push
push
pop
adcl
push
xor
pop
jbe
aad
mov
dec
add
cltd
cwtl
fsubr
mov
scas
push
aam
scas
popf
or
dec
sahf
dec
pop
push
and
data16
push
push
stos
xor
push
repnz
adcb
nop
and
int
adcb
int
nop
inc
loop
mov
xchg
sti
das
cltd
add
jecxz
cld
outsl
pop
mov
mov
je
push
adc
popa
mov
pop
sarl
ret
push
adc
mov
movsl
clc
push
mov
push
jp
dec
add
cltd
pmaxub
add
pop
js
in
mov
pop
pop
call
insb
adc
sbb
jns
subl
mov
mov
js
fnstenv
cmp
sub
out
xor
cmp
daa
cmp
inc
adc
adc
adc
fldt
out
jns
aam
out
test
outsb
jbe
jns
jbe
filds
lcall
lods
inc
xchg
lcall
iret
dec
faddl
cmp
mov
test
arpl
xchg
dec
and
inc
adc
repz
or
shlb
ss
sbb
mov
iret
add
xchg
xor
lods
in
add
pop
ss
dec
cmpsb
sub
jns
fs
sbb
sbb
and
je
out
mov
sbb
xchg
imul
pop
or
sarb
xchg
push
add
xor
popa
mov
jnp
push
mov
orl
hlt
lds
pop
cld
cmc
in
add
dec
push
lcall
sbb
int3
sarl
jnp
lods
inc
shr
cmp
mov
negb
sbb
dec
mov
add
sub
loop
sarl
inc
mov
inc
movl
dec
dec
test
clc
cld
dec
les
lcall
or
cmp
ds
mov
iret
mov
push
mov
dec
je
push
movb
fisttpll
inc
filds
insl
orb
jle
mov
push
das
and
jbe
pop
push
cltd
lret
jge
lcall
popf
divl
add
call
lahf
cmpsb
lea
mov
loope
fs
je
jl
hlt
xchg
scas
lea
inc
lahf
in
add
sub
push
fwait
insb
repnz
xor
mov
in
xchg
out
sbb
pop
push
cs
in
lods
pop
cmpsl
pop
xor
movsb
jecxz
outsl
ds
add
stc
cmp
push
iret
insb
lahf
inc
and
mov
sbb
arpl
bound
outsl
sbb
stos
ja
jmp
jl
hlt
daa
mov
mov
insl
add
pop
xor
push
sub
xor
pop
loop
iret
dec
mov
jns
inc
mov
pop
ljmp
imul
into
mov
mov
pop
insl
call
movsbl
aam
js
pop
xchg
outsb
pop
mov
sti
daa
in
fs
mov
xlat
and
push
mov
xchg
movsb
push
jno
inc
ret
cmp
sbb
test
push
call
cli
xor
add
jno
adcb
cmpsb
xor
std
and
popf
mov
xchg
pop
and
clc
aaa
sahf
cmp
movsl
cmp
jmpw
adc
cmp
mov
jle
insb
push
les
inc
adc
in
push
enter
fldl
jo
lahf
mov
push
insb
stc
mov
xchg
mov
cwtl
cmp
popf
es
mov
jmp
lahf
cs
xor
movsl
outsl
out
mov
out
enter
in
inc
in
jo
sub
into
shr
push
bound
add
in
jecxz
out
mov
xchg
in
jp
test
inc
mov
pop
inc
pop
inc
mov
test
sbb
xchg
imul
dec
call
outsl
hlt
mov
mov
xor
fcom
int3
jg
jge
fstl
push
rorl
ret
sub
jle
sub
setae
aaa
into
dec
sbb
inc
lods
mov
mov
sbb
loope
pop
xor
lcall
arpl
pop
mov
rcl
inc
add
and
test
mov
adc
add
lret
insl
stos
es
loop
fstps
movsb
pop
paddsb
rorl
fs
lret
push
xor
mov
mov
jge
into
and
xchg
movl
out
bound
bound
in
pop
aam
jo
scas
subl
addr16
sbb
outsb
sub
leave
ljmpw
pop
add
faddp
cmp
xchg
mov
push
cmp
jns
push
ret
imull
test
or
inc
out
into
pop
stos
cmp
pop
sarb
and
or
jecxz
cmp
sub
mov
xchg
jno
xchg
ljmp
out
shl
dec
icebp
sbb
test
out
ficoms
pop
aad
cs
orb
rolb
jo
aaa
mov
xchg
cld
loopne
xor
sarl
mov
jmp
xchg
jbe
fmul
outsb
std
ret
xor
pmaxsw
aad
pop
adc
xor
fnsave
ret
xor
rcl
and
inc
scas
mov
cmp
inc
lds
push
and
jns
mulb
pavgw
cltd
xchg
pop
mov
or
into
hlt
xchg
jl
jns
dec
dec
jp
sbb
test
add
pop
je
nop
fisttps
inc
cmp
dec
das
sub
sti
push
test
popa
ja
imul
jg
xchg
les
mov
outsb
fwait
js
add
and
cmp
push
jp
test
sub
and
mov
jne
loopne
loope
xor
js
mov
mov
ss
xor
add
and
sahf
dec
and
cmp
adc
sbb
jle
pop
mov
imul
xor
mov
sbb
popf
nop
insl
jg
repz
das
dec
or
cmpsb
lahf
sti
js
cs
xchg
xchg
aad
adc
pusha
out
movsl
shll
test
add
push
mov
hlt
sub
xorb
adc
push
outsl
addl
into
push
das
lret
mov
int3
sbb
scas
pusha
rorl
enter
add
shll
iret
int3
into
jp
inc
jb
jo
call
add
cmp
sbb
jecxz
arpl
mov
out
fucom
lret
adc
test
inc
fistpl
and
push
cld
pop
test
push
or
cltd
call
pop
dec
int
mov
lock
dec
mov
jbe
jp
je
push
mov
in
sti
outsb
repz
lahf
outsb
lds
enter
jmp
andl
xor
cltd
das
jnp
in
or
andb
pop
int
movsl
add
xor
jbe
mov
xchg
call
sti
loopne
dec
pop
pop
or
test
pushf
push
out
jno
xchg
lcall
jae
mov
mov
dec
lahf
adc
pop
xlat
push
lahf
jnp
pop
hlt
jns
idiv
jb
aam
subl
dec
scas
mov
fcompl
lret
sar
sbbl
pop
add
pop
cmpsb
or
push
sti
sbb
stc
fmulp
mov
xor
add
push
incl
mov
inc
sub
or
sbb
or
pop
inc
inc
mov
fldenv
mov
das
cmpsb
nop
cmp
leave
nop
scas
xchg
jno
jns
negb
loopne
int
xchg
inc
lods
lcall
mov
scas
jp
push
sbb
scas
ljmp
arpl
xchg
adc
xor
fldenv
lret
xor
dec
inc
data16
int
repnz
jg
cwtl
stc
sbb
call
jp
adc
icebp
xchg
jae
stos
sub
pop
ss
cmp
jne
xchg
xor
dec
fcoms
les
jb
mov
cmp
pand
subl
sub
push
jl
test
sbb
repnz
jne
into
cwtl
leave
add
push
dec
push
push
push
mov
mov
pop
stos
mov
pop
jmp
jmp
cmpsb
lret
xchg
fwait
push
dec
shrb
test
jg
inc
push
inc
popf
mov
not
pop
cld
xor
pop
sarb
adcb
push
ljmp
or
leave
or
xchg
pop
jno
sub
shll
ja
jnp
xchg
sbb
sbb
cmc
sub
filds
out
sbb
mov
sti
pop
push
xchg
clc
out
xor
push
xchg
jge
rcrb
and
push
jp
sti
and
roll
and
mov
cld
es
icebp
mov
xor
mov
sub
mov
sbb
pop
aas
cwtl
add
jg
jmp
popf
mov
cmp
in
sbb
das
pop
push
cmp
scas
sub
loope
aas
xchg
cmp
xor
inc
testl
jno
pop
sbb
inc
add
nop
out
lods
jb
jl
jmp
mov
std
push
mov
jge
loop
push
cmp
or
xor
fucomi
push
xchg
rcll
mov
pop
stos
xor
xchg
lcall
fnstsw
mov
inc
mov
cltd
push
movsl
stos
pop
sbbb
call
fisttps
jo
jbe
jle
stos
dec
lea
inc
sbb
add
adc
push
push
dec
testb
pop
sbb
aam
mov
inc
loope
jle
popa
add
std
hlt
mov
push
pop
ss
xchg
aas
xchg
push
cmpsl
mov
inc
or
rcll
sbb
inc
inc
jle
fsubrl
jmp
add
enter
mov
push
loope
jle
cli
fmull
mov
divb
and
lcall
loopne
insb
and
jecxz
jg
in
filds
test
push
mulb
lods
cs
out
add
inc
and
fldcw
xchg
roll
push
push
ljmp
pop
lods
dec
xlat
pushf
mov
les
mov
fwait
pop
add
dec
add
fs
mov
xchg
iret
sub
xlat
test
sbb
lock
adc
push
mov
push
mov
push
pop
bound
mov
out
cmp
mov
sbb
sti
add
jecxz
sbb
push
and
cmp
cltd
repz
push
jecxz
std
iret
fnstcw
hlt
sbb
inc
xchg
jge
sahf
insl
gs
mov
cltd
bound
daa
inc
xor
inc
inc
lahf
push
jmp
insb
pusha
mov
and
fbstp
lcall
clc
mov
ss
hlt
sbb
cmovg
aas
jnp
push
dec
mov
sbb
mov
ror
inc
and
aas
jae
jbe
ja
rcrl
or
test
mov
push
push
push
cmp
scas
in
mov
inc
jae
loope
cmp
lea
xchg
lods
xor
rcll
insb
xchg
aas
lahf
jb
or
out
out
outsb
hlt
and
dec
adc
jb
mov
mov
ljmp
lret
pop
mov
aaa
xorl
jmp
xchg
or
sub
scas
adc
insl
cld
ret
sub
bswap
add
int
sbb
xchg
inc
das
andb
and
mov
loope
jo
shlb
jne
or
shl
cmp
repz
test
mov
lods
sub
jp
xlat
arpl
cld
add
aad
sub
inc
cmp
push
cmc
inc
adc
pushf
cmp
xor
adc
ret
jmp
lods
cmp
or
xchg
scas
cmp
pop
or
stos
cmp
and
sbb
sahf
clc
add
and
sub
aaa
mov
sbb
insl
jbe
xchg
sub
pop
mov
xchg
adc
mov
inc
shrb
jne
cmp
mov
nop
adc
loop
nop
xchg
and
mov
jae
inc
scas
out
jnp
data16
or
iret
sub
xor
or
enter
xchg
push
push
xchg
xor
out
sub
xor
inc
ficoms
xor
mov
and
mov
ret
jbe
adc
jbe
or
jmp
pop
mov
sub
repz
nop
fcmovnbe
cmp
mov
lea
sarb
mov
cmpsb
fistps
mov
cmc
jae
loopne
es
scas
mov
rorb
mov
mov
ss
jns
shr
jne
adc
dec
jle
push
arpl
mov
cld
sub
aaa
loopne
inc
pusha
aas
mov
and
push
stc
xor
add
ret
jle
inc
outsb
popf
scas
adc
dec
inc
mov
dec
pop
pop
push
fnstsw
mov
mov
push
jecxz
out
push
lret
pop
or
xor
jb
cmpsb
add
cwtl
mov
mov
and
and
and
dec
lea
inc
shll
std
xlat
stc
push
push
pop
aam
add
mov
imull
jnp
loopne
adc
shl
scas
cltd
scas
faddl
mov
xor
jnp
cs
adc
repnz
xchg
int3
mov
pushf
or
inc
mov
cmp
inc
test
sahf
cmp
mov
xor
clc
lret
xchg
push
cmp
stos
xchg
xchg
mov
sti
mov
add
inc
cli
xchg
int3
lea
lea
daa
push
inc
leave
aad
jl
sub
js
popf
dec
mov
std
fidivrs
mov
dec
js
add
mov
loop
cmpsl
loopne
cmc
out
mov
cmp
repz
movsb
ret
mov
inc
add
pop
sahf
jle
mov
and
repnz
mov
popf
adc
insl
pushf
push
imul
xor
outsb
jnp
cli
insb
inc
mov
inc
shrd
mov
cmc
push
rcll
es
test
cmp
jno
xchg
cli
outsb
sti
outsb
negb
push
inc
lea
jmp
and
fcmovne
jmp
orl
ret
pop
mov
dec
jbe
pop
cwtl
add
test
mov
jo
mov
xor
cmp
xchg
gs
inc
mov
mov
sti
push
inc
adc
pop
xor
xchg
xchg
adc
pop
int
sbb
add
push
mov
ret
inc
int
pop
dec
daa
jge
int3
and
repz
nop
cwtl
mov
dec
out
sbbl
cmp
adc
mov
pop
push
repz
dec
cmpsl
outsb
add
mov
popf
enter
xchg
and
and
cmp
lds
adc
jge
clc
jbe
jle
mov
enter
cmp
mov
inc
cs
cmpl
inc
ret
std
sub
scas
push
cmp
pushl
aas
mov
ret
cltd
leave
fnsave
fdivr
ljmp
jns
sub
mov
xor
inc
push
mov
ss
test
dec
mov
mov
mov
xchg
xchg
rolb
xchg
into
push
ja
sbbl
sbb
andb
jns
jp
in
adc
xor
je
adc
sbbb
mov
mov
in
xchg
fmull
push
movsl
pushf
in
pop
cmp
xor
sbb
mov
mov
data16
or
mov
mov
mov
xor
inc
cmp
sub
adc
cmp
js
into
push
rcl
dec
sti
mov
xchg
dec
dec
dec
cmp
pop
mov
test
iret
inc
pop
mov
dec
fisubrl
or
add
aaa
inc
push
sbb
and
inc
sub
dec
pop
aas
das
test
les
in
int
add
sbb
mov
lret
cltd
das
fwait
mov
frstor
mov
sbb
xchg
cmc
dec
add
and
movsl
fistpll
shr
hlt
inc
xchg
mov
mov
das
mov
aam
lds
dec
push
or
push
pop
fdivrl
imul
mov
or
or
lods
int
cli
dec
dec
enter
and
cli
into
push
xchg
mov
sahf
mov
addr16
mov
xchg
test
movsb
test
dec
mov
jns
inc
clc
pop
sub
cwtl
imul
or
mov
in
test
mov
movsl
mov
lds
add
sub
jnp
iret
rcll
xchg
sbb
test
sub
dec
js
inc
xor
test
movsb
dec
cltd
mov
mov
sbb
popf
mov
lock
ljmp
push
adc
adc
daa
fnop
jns
cmp
pop
or
push
mov
mov
adc
daa
pop
lahf
sbb
bound
xor
arpl
mov
cmpsl
ret
and
js
mov
ljmp
mov
imul
enter
and
ret
dec
fcompl
out
and
cmc
repz
int3
add
adc
dec
shlb
out
cmp
hlt
jmp
lods
lock
mov
cmpsl
mov
inc
icebp
fadd
pop
sahf
pop
xchg
lret
xorb
sub
adc
es
loope
lds
insl
mov
inc
dec
roll
sbb
lock
xor
and
fdivs
sbb
adc
bnd
mov
popa
je
imul
out
jl
mov
shrb
cmp
cld
bound
cmp
fucom
sbb
jno
loope
fwait
pushf
xor
sbb
jmp
loop
decb
jecxz
int3
add
lods
mov
shl
ret
adc
jecxz
fwait
inc
pop
sbb
call
popf
push
inc
inc
or
aam
dec
subb
ss
jae
jno
in
adc
mov
lods
fistpl
stos
xchg
inc
xchg
fxch
jae
orl
push
js
sub
xchg
jecxz
ret
mov
nop
out
stc
mov
push
jle
xor
lret
lret
add
imul
and
and
pop
testl
cmp
enter
les
test
es
fwait
push
lea
arpl
aas
call
scas
mov
sbb
mov
sbb
push
in
push
inc
orb
insl
fldl
and
cmpxchg
mov
cmp
popf
outsb
jbe
sbb
ljmp
jnp
fdivr
xchg
push
push
repnz
adcb
pop
cmc
push
popf
les
in
out
dec
das
stos
add
pop
sbb
sahf
push
sbbb
push
mov
add
dec
outsb
fs
testl
lret
scas
push
ret
orb
shl
aaa
sub
lahf
mov
stos
push
xor
fs
pop
and
inc
pop
mov
push
adcl
sbb
jmp
addr16
test
pop
nop
sub
fiaddl
xor
xchg
xor
in
lods
js
inc
xlat
mov
cmp
mov
es
xchg
test
or
aas
mul
dec
ret
enter
pop
inc
cmp
rcl
pop
lret
xchg
hlt
push
cmp
xchg
push
shrl
adc
push
cmp
add
mov
icebp
add
dec
jg
adc
jmp
pop
dec
push
ret
cli
jecxz
lahf
cmp
push
xchg
jne
shlb
je
pusha
popa
add
xor
xchg
xchg
pop
adc
inc
jmp
in
push
test
sti
es
sub
rcrl
loop
dec
push
in
xchg
lock
push
and
mov
cmpsb
test
push
insb
pop
rcrl
addr16
jo
xchg
shrb
or
jmp
clc
in
repz
inc
inc
pop
dec
clc
push
js
or
orl
test
xchg
idivl
dec
push
push
addr16
repnz
jns
stos
popf
cmovle
mov
xor
mov
incl
add
pusha
cmp
pop
xchg
out
pop
push
mov
jno
or
call
jnp
inc
aaa
enter
insl
scas
cmp
dec
imul
js
push
inc
inc
out
rorb
pop
or
xlat
movsb
sahf
out
mov
sti
das
mov
and
andb
icebp
rcrb
push
pop
pop
add
mov
pop
pmuludq
push
and
mov
mov
aas
mov
aas
xor
add
int3
mov
jbe
inc
cmp
or
or
jne
imul
in
xlat
lret
add
or
test
das
lea
fs
sbb
daa
movsb
out
xchg
test
stos
pop
mov
cmp
notb
cmp
popa
xchg
mov
int
sub
cmp
lahf
push
pop
add
sub
fists
sub
dec
lcall
add
aad
lret
imul
neg
lcall
dec
aam
cmp
lods
in
cmp
xor
test
mov
xchg
ret
mov
in
xchg
fisubrl
pop
add
sbb
mov
mov
cmpsl
adc
pop
js
loope
popa
ret
dec
out
and
dec
xchg
in
push
mov
xor
sbb
mov
mov
lcall
call
mov
dec
sub
and
push
fimull
xor
mov
out
xchg
sarb
pop
sub
movsl
sahf
vpcmpgtw
lods
shlb
push
dec
jle
xchg
cmp
mov
insb
mov
popf
pcmpeqw
xor
mov
enter
lock
fnsave
mov
sub
lahf
test
cmpsb
stc
ret
pop
mov
cs
push
xor
push
sub
add
push
imul
loop
fstpt
cld
push
decb
imul
fcomi
mov
fisubrs
adc
mov
ja
test
push
push
mov
ja
scas
test
mov
adc
adc
inc
mov
dec
cmp
popf
lds
stos
fdivl
push
ljmp
popf
push
dec
cmpsl
insl
jl
std
jno
inc
cs
lret
dec
jge
inc
add
andl
add
push
es
cwtl
movsl
ret
mov
sub
sahf
in
rcrl
cltd
mov
aas
sub
xchg
test
xchg
inc
pushf
popa
loope
in
push
das
mov
or
jnp
cmpsl
sub
push
outsl
dec
movsb
out
inc
orb
mov
mov
in
imul
inc
xor
stos
jns
dec
xor
enter
and
pop
jmp
push
pop
pusha
sar
repz
jbe
pop
pop
mov
and
andb
xor
lcall
or
popf
mov
enter
inc
mov
aaa
or
or
sti
icebp
scas
repz
mov
sti
cmp
les
call
cmp
scas
nop
ret
mov
mov
sub
adc
stc
sub
bound
fisubs
inc
jecxz
ss
inc
imul
cs
jmp
movsb
add
les
ja
les
int
inc
test
or
loope
jb
adc
cmp
cmp
gs
les
and
test
cmp
cmp
cmp
in
les
sti
mov
popa
cmp
aam
pop
mov
jecxz,pn
jb
scas
push
mov
ret
out
add
pop
jle
bound
jns
leave
hlt
jne
int
movsb
xor
and
lods
aam
js
or
inc
mov
add
outsb
mov
adc
imul
rcll
jae
fsubr
xchg
pop
jp
push
push
hlt
add
ss
imul
out
mov
xchg
dec
sub
or
push
cmp
or
xor
push
pushf
pop
sbb
xchg
ljmp
jns
gs
test
scas
fmul
mov
xchg
cmp
andb
cmpsb
push
sbb
movsb
les
xor
cs
jbe
dec
stc
jmp
mov
cmc
or
jl
sub
imul
xorl
mov
and
push
ror
jo
orl
inc
out
xchg
inc
aaa
rorb
jbe
decl
pushl
xchg
lret
jecxz
subb
popa
sbb
or
add
adc
adc
mov
sti
mov
jmp
xor
je
mov
out
pop
or
imul
or
inc
lret
mov
js
xchg
push
adc
xlat
inc
mov
out
jne
int
fnstenv
arpl
stc
rcll
repnz
loop
mov
mov
push
mov
mov
lret
imul
mov
lods
cmc
adc
push
lea
or
je
lret
mov
jle
rcr
mov
daa
mov
lcall
movsb
or
lods
sbb
cld
incl
insb
jnp
loopne
loop
xchg
and
bound
or
mov
js
or
imul
notl
mov
push
test
dec
fs
in
fisubrl
sets
lret
and
fsubrp
jp
or
or
xor
push
mov
in
dec
cmp
js
pop
nop
scas
xor
add
jb
inc
inc
mov
ljmp
inc
dec
in
jp
into
mov
push
stos
and
ds
fwait
xor
mov
das
push
addb
mov
mov
mov
adc
fisubrs
jp
insl
push
andb
or
mov
dec
rcr
outsb
movsb
lea
pop
push
aam
xchg
sub
and
push
mov
fwait
mov
add
or
sarl
jb
repz
mov
mov
sub
mov
js
insb
ret
push
mov
mov
inc
std
dec
loop
xor
ljmp
lea
push
lds
mov
lcall
test
push
sub
mov
xchg
mov
cmp
xor
dec
mov
orl
xchg
fldcw
xchg
and
and
f2xm1
dec
insb
xor
pop
mov
pop
mov
mov
fldenv
cld
xchg
lahf
cmp
cmp
dec
sub
mov
push
andl
cmp
xchg
mov
inc
or
in
aad
mov
mov
add
adc
mov
jecxz
lcall
jae
mov
mov
jmp
jle
into
rcll
das
pop
clc
cmp
jmp
in
add
sub
mov
lods
jl
imul
jae
test
xchg
cmc
insb
push
int3
pop
inc
xchg
hlt
mov
cmpsb
andb
mov
mov
xor
ja
es
xchg
push
pop
test
in
dec
adc
in
mov
sbb
adc
push
fbstp
cltd
nop
out
jp
imul
test
in
add
inc
out
add
pop
das
jg
jb
sub
lea
scas
push
adc
pop
les
add
adc
mov
lahf
pop
and
adc
mov
cmp
ds
aaa
jmp
popf
mov
mov
in
jo
mov
scas
jnp
test
iret
inc
push
hlt
xadd
sbb
inc
sbb
stos
gs
push
into
aam
jae
mov
dec
dec
movsb
cmp
adc
sub
mov
jp
enter
sub
call
cmp
cmc
nop
push
dec
repnz
mov
mov
add
xor
pusha
jb
stos
mov
and
mov
pop
roll
adc
xlat
add
xchg
and
test
pushf
cmp
pop
inc
jle
sub
cmpsl
mov
psrld
or
mov
ds
push
out
ljmp
insl
cli
sbb
jp
add
imul
pop
sahf
mov
pop
jo
jo
adc
shl
shlb
mov
and
mov
icebp
mov
sbbb
gs
shll
test
xchg
inc
dec
jg
clc
jbe
dec
repnz
sbb
repz
lcall
rcrl
sarl
sbb
int
push
mov
mov
mov
sarl
hlt
loop
cmp
fdivrp
mov
push
syscall
xor
int3
add
movsb
stc
jae
out
ljmp
mov
add
pop
cmp
mov
adc
lods
xchg
mov
out
enter
ljmp
bound
leave
mov
pop
pop
cld
xchg
out
mov
mov
enter
mov
xlat
repz
sub
es
xchg
push
insl
frstor
push
or
ficoml
mov
daa
mov
add
call
push
sub
cs
into
push
into
movsb
rcll
fs
xchg
leave
mov
or
out
mov
insb
subb
adcl
fcoml
lcall
int3
mov
faddl
hlt
jns
aaa
sub
fdivs
jmp
fs
xor
xor
jg
adc
jl
push
inc
into
add
push
jl
outsl
or
jb
lock
dec
cli
mov
add
xchg
rcrl
mov
cmp
mov
sbb
lds
sarb
cmp
xchg
fildl
mov
dec
push
es
aad
notl
outsl
adc
cld
xchg
dec
sbb
xchg
ficoms
xor
out
push
int
push
loopne
mov
add
nop
push
dec
push
bound
add
insl
shlb
int
pop
and
lret
sub
sbb
shll
aam
int3
mov
shlb
xor
or
mov
fyl2xp1
fcompl
frstor
adc
fistpll
lds
lahf
mov
inc
cmp
and
xchg
mov
ja
stos
mov
inc
add
push
addr16
fiaddl
fwait
dec
adc
dec
add
sub
cwtl
adc
call
hlt
sbb
xchg
xchg
testb
push
xchg
fisubl
popl
mov
iret
xchg
mov
sub
mov
imul
mov
xlat
les
stc
icebp
mull
pusha
mov
mov
jne
scas
cmpsb
stos
sub
ret
shlb
outsb
ljmp
xor
inc
iret
ss
leave
fbstp
les
pop
add
and
sti
adc
pop
ljmp
ret
mov
xchg
mov
loop
outsl
test
fs
lods
push
repz
out
lret
rcl
lahf
scas
jne
pop
add
jle
div
sbb
sti
divl
lods
push
mov
or
adc
jb
lea
in
or
or
and
or
and
imul
pop
dec
pop
ret
add
jne
inc
in
ljmp
mov
test
or
std
negl
cmp
adc
daa
cmp
pop
call
add
sub
cwtl
jns
ljmp
fadds
outsl
pop
pop
mov
push
jge
out
sub
fdiv
aad
push
out
faddl
xchg
int
dec
idivl
loopne
insl
out
daa
icebp
dec
fists
adc
sub
test
mov
test
jne,pt
mov
mov
in
scas
mov
cmc
clc
loop
add
and
pushw
fsubs
sub
mov
sbb
ljmp
sub
pop
mov
push
xchg
or
dec
mov
inc
push
cmpl
mov
adc
fmul
sub
movsb
lahf
dec
decl
mov
or
out
cmpsl
das
out
and
jle
andl
inc
or
es
dec
mov
pop
pop
xchg
dec
push
addr16
lea
sbb
in
jmp
pop
inc
add
aaa
adc
bound
out
xor
inc
add
xor
gs
dec
jp
pop
mov
imul
mov
fistps
add
push
or
cli
icebp
aam
bound
movsl
dec
scas
jecxz
pop
jae
imul
and
pusha
mov
sbb
daa
mov
fdivl
push
xchg
dec
sub
push
call
je
je
pop
pop
mov
mov
mov
int3
or
enter
xlat
jg
popl
push
adc
jnp
mov
jne
mov
jbe
sub
mov
test
lret
outsb
mov
or
jnp
movsl
mov
mov
and
jo
jg
aad
stos
popa
xchg
inc
xor
xchg
sahf
push
jne
popa
mov
test
cmp
jnp
fisttpl
std
jns
xor
pop
pop
fsubrs
mov
insb
dec
sub
loop
xor
xchg
aaa
lock
loope
stc
sub
fsts
pop
xchg
sbb
int3
or
mov
lahf
shl
push
in
jbe
inc
push
mov
aaa
lds
xor
cmpsb
imul
cmp
in
cld
adcb
inc
inc
out
int
sbb
sbb
scas
dec
adc
push
mov
int
push
fnstcw
push
cld
rcll
aaa
and
stos
imul
test
out
xor
nop
dec
lock
push
xor
mov
mov
sub
sbb
aas
push
adc
lahf
sub
int
pop
dec
ds
cmc
xchg
outsl
jp
insl
sahf
xor
daa
pop
mov
mov
jns
mov
lea
sbb
xchg
fsubr
rcrb
cmpsb
loopne
jl
xor
jno
ret
ds
push
xlat
or
push
mov
mov
jne
ret
call
inc
push
add
cmp
add
mov
mov
xchg
or
adc
enter
inc
push
xchg
fucomip
outsl
sar
xor
aas
mov
fistpll
sbb
or
ljmp
call
pop
xchg
fadds
lds
icebp
adc
pop
mov
sahf
cmp
outsl
decb
jecxz
push
bound
adc
movsb
xchg
in
addr16
mov
inc
es
dec
int3
sbb
ret
inc
add
push
dec
cmpsb
xchg
cmp
inc
cmp
sbb
and
push
cmp
fisubs
add
push
adcl
xchg
jbe
pop
sti
push
and
data16
roll
sbb
ljmp
cmpsl
mov
stos
sbb
cs
test
mov
add
movsl
lock
orb
in
rcrb
push
arpl
out
xor
fildl
loopne,pt
test
sti
popa
jno
push
xor
lea
out
sbb
data16
addb
mov
jecxz
pop
fstp
and
jge
roll
dec
loopne
sbb
insl
cmpsb
lods
push
xor
outsl
cld
jg
icebp
repz
jl
jbe
pop
sub
sub
add
and
sub
push
fnstsw
add
stos
cmp
mov
adc
fnstenv
mov
rcrb
outsb
movsb
inc
cmp
ret
dec
lds
je
jno
inc
inc
sbb
mov
js
cmp
dec
lret
ret
mov
insb
fs
out
dec
pushf
sub
push
sti
jne
pop
push
adc
enter
cltd
push
cmp
daa
aam
xchg
stos
in
mov
loope
ljmp
mov
sub
fisttpll
aad
cmp
mov
fisttps
jne
loopne
cwtl
pushaw
sarb
mov
rcrb
cmpsb
xchg
pop
jmp
and
mov
sbb
xor
insb
imul
mov
cmp
sbb
sub
and
fucomip
add
mov
pop
inc
sarb
push
call
addr16
xchg
stos
jae
inc
sti
lods
hlt
ja
lock
push
inc
insb
cmp
xor
fptan
xor
inc
mov
shrl
lds
pop
xor
aam
pop
mov
stos
shlb
rclb
jg
pusha
stc
les
mov
cli
pop
cli
loope
mov
mov
neg
push
hlt
inc
push
fistl
mov
dec
push
je
xchg
xor
paddsw
in
xchg
mov
xor
push
cmp
add
sbb
adc
out
pop
ret
test
dec
lods
andb
xor
mov
jnp
fnstsw
mov
dec
clc
and
cmp
or
mov
mov
or
cmp
sahf
cs
push
enter
lods
std
inc
mov
aaa
mov
sbb
shr
sub
aaa
push
sti
rcll
aas
mov
mov
cwtl
push
fucomi
cmp
xlat
mov
insb
pop
loop
testl
test
xchg
lcall
in
add
xor
push
add
mov
rorl
push
inc
adc
mov
data16
nop
out
xor
fwait
shll
mov
or
mov
add
jae
push
roll
cli
sub
pop
mov
jmp
dec
ret
adc
inc
mov
jo
pop
and
enter
push
push
std
fwait
pusha
cwtl
mov
dec
mov
imul
add
adcb
xchg
lcall
dec
rcrl
shrl
lret
lahf
ss
cmp
jl
mov
ficomps
rcl
add
imul
sub
iret
sbb
dec
rol
push
or
dec
mov
mov
pop
mov
dec
adc
push
insb
adc
insb
pop
mov
add
pop
data16
push
test
dec
sub
test
dec
and
or
cmpsl
das
movsb
xchg
adc
push
mov
lods
cmp
xor
cmpb
mov
lods
cmpsb
mov
mov
cli
stc
push
adc
pop
and
das
xchg
xor
xchg
sbb
dec
cmp
push
xchg
inc
lret
jae
es
jbe
pushl
pop
stos
mov
pop
pop
cmp
test
add
rolb
push
mov
add
ds
icebp
icebp
test
mov
adc
jp
repz
sarl
mov
mov
cmpsl
push
subl
dec
pop
xchg
insb
or
mov
add
xor
in
popl
pushf
mov
add
or
inc
shlb
popf
testb
sti
dec
sbb
enter
xchg
icebp
in
lahf
pop
aas
mov
push
mov
push
mov
inc
in
jl
mov
fbld
inc
push
cmpb
ja
inc
pop
jmp
mov
in
jno
mov
ljmp
orb
lds
mov
and
xchg
sbb
jp
pop
add
arpl
adc
mov
out
xchg
jl
fisttpl
repnz
mov
cmpsb
incl
mov
and
inc
pop
popa
inc
xchg
outsl
mov
inc
jle
mov
test
xor
ret
scas
add
sbb
cmpsl
push
or
lret
or
sar
rorb
sub
adc
outsl
pop
pop
cltd
push
int
sub
jg
inc
test
addr16
loopne
add
lds
cwtl
push
daa
leave
rcl
or
or
push
xor
dec
loope
push
stos
stc
loopne
cmpsb
pop
clc
mov
jl
pop
fsub
sub
sub
imul
sbb
pop
popa
data16
call
dec
pop
mov
mov
ret
bound
hlt
cmpsb
es
lods
and
ficomps
and
cmp
pop
test
lret
push
push
push
mov
sbb
hlt
adc
cmpsb
ret
iret
cmp
clc
sub
sarl
pop
lods
jbe
pop
cmp
nop
push
fsubp
lock
mov
adc
mov
sub
sub
cmp
dec
fsub
pushf
lcall
dec
xchg
cld
arpl
out
lret
test
popf
rorl
lds
xchg
clc
shr
sub
or
or
push
inc
shr
mov
ja
and
pop
adc
sub
add
imul
sahf
scas
cmc
inc
jnp
shrb
fwait
loop
pop
lea
movsb
in
jl
test
lea
cmp
inc
cld
xor
fwait
mov
push
pop
inc
test
mov
lret
push
push
js
lods
fwait
negl
loope
mov
inc
and
dec
flds
fwait
sbbb
dec
xor
mov
mov
inc
insb
mov
mov
xor
loopne
mov
movsl
je
int3
mov
or
pop
xchg
cs
add
cmpsl
sub
xorb
jl
pause
cmp
bound
std
aad
lret
ds
cmp
dec
mov
aas
aas
cmc
pop
lock
push
cs
xchg
das
xchg
dec
add
pop
aas
and
mov
jne
push
push
push
nop
sbb
fiaddl
pushf
push
pop
pop
int
pushf
stc
addl
das
jbe
cmc
or
out
stc
sbb
gs
jp
mov
mov
xor
mov
addr16
imul
cld
mov
jge
xchg
mov
dec
mov
das
adc
std
mov
pop
and
adc
test
jg
mov
sbb
cmpsb
mov
push
pop
mov
cmc
push
inc
daa
sbb
jle
jns
xchg
das
mov
jg
sub
mov
jae
cli
mov
jle
or
sbb
cli
cmp
jae
sub
pop
leave
dec
shrl
divb
out
mov
mov
inc
pop
out
pop
inc
cmpl
pop
or
test
mov
loop
lret
push
cmp
and
push
push
iret
cmp
mulb
or
fistps
pop
add
mov
ljmp
dec
jns
into
incl
pop
addps
cwtl
mov
mov
ret
and
andl
mov
movsl
cmpsl
fdivrl
scas
push
ror
adc
cmp
dec
cmp
ficompl
mov
inc
aad
cld
ja
and
sbb
aaa
les
subb
adc
sub
mov
mov
sub
jge
orb
jnp
bnd
cmp
popf
dec
mov
jne
aaa
pop
mov
pop
sub
mov
bound
test
push
jge
push
mov
icebp
js
popa
mov
ljmp
push
int3
sbb
xor
adc
pop
adc
ret
enter
push
js
rorb
pop
sbb
loop
cltd
pop
test
punpcklbw
and
out
cli
mov
inc
imul
fcoml
xchg
xor
icebp
add
fsts
jae
shr
add
mov
jae
jno
clc
push
mov
loop
push
add
fwait
add
adc
push
sub
pushf
popa
lock
cmp
mov
pop
imul
xchg
jmp
fcmovne
cltd
and
std
out
cwtl
rol
fmuls
mov
xorb
lea
popf
jge
out
movsl
leave
sti
popa
push
repnz
or
cmp
daa
outsl
rclb
addr16
pop
dec
lods
into
lds
test
icebp
loopne
mov
pushf
mov
fstp
lock
repnz
jns
int
push
ret
ds
test
in
andb
outsb
dec
dec
dec
mov
mov
mov
mov
pop
cmp
sbbb
pop
push
mov
iret
adc
xchg
jmp
adc
sub
xchg
pop
lods
push
imul
sar
jle
dec
dec
jl
push
mov
imul
ret
mov
out
shr
inc
sbb
loopne
or
out
mov
repnz
mov
inc
mov
int3
dec
mov
mov
pusha
bound
mov
jo
sti
rcrb
xchg
sbb
lea
jge
xor
xchg
mov
loopne
rcll
jns
fildl
std
sar
jns
and
pop
push
pop
and
jg
adc
pop
scas
fs
mov
cmpsb
sbb
mov
ljmp
add
dec
mov
outsb
push
xchg
notl
dec
aam
fwait
in
mov
cmp
sbb
into
fnstcw
cmp
mov
sub
cmp
ret
fmul
aam
push
inc
sub
or
repz
lcall
filds
mov
add
xlat
and
int
sub
scas
mov
mov
pop
das
ficomps
test
or
lock
pop
out
fildll
or
pop
dec
jmp
stos
push
or
fs
fisubrl
mov
cmp
cmp
test
out
psubw
fcoms
xchg
outsl
or
jb
pushf
dec
fsubrs
ljmp
fs
jae
add
in
scas
push
dec
add
xor
fstps
mov
rol
and
data16
shll
mov
pushw
and
mov
lret
popa
fsts
cmovg
mov
dec
imul
jge
inc
and
ret
repz
fwait
aam
inc
add
jne
cmp
pop
cmpl
xor
in
mov
dec
mov
cmc
call
clc
push
fwait
in
or
pop
push
jns
lds
mov
dec
data16
push
push
mov
mov
mov
popa
adc
sub
mov
push
loop
out
dec
add
sub
es
add
inc
jl
mov
sub
mov
jo
arpl
aas
pop
lock
aaa
push
arpl
mov
mov
dec
add
lock
jbe
stc
pop
pop
loope
in
jl
push
sub
dec
das
adc
push
cld
cmp
jmp
jbe
xchg
fwait
mov
mov
mov
jae
push
push
pushf
nop
aaa
pop
cmp
inc
or
popa
push
add
cmp
inc
xor
out
loop
ret
or
fcmovnb
xchg
jno
or
addr16
add
or
orb
pop
dec
subps
rolb
pop
add
js
inc
mov
pushf
fcmovb
fimull
call
scas
jmp
scas
pop
cs
imull
mov
pop
mov
addr16
cmc
push
cmp
stos
inc
push
dec
inc
add
mov
mov
mov
cwtl
jmp
stc
mov
lods
mov
ss
mov
add
test
push
in
hlt
push
and
push
cmc
std
dec
mov
ret
xor
popf
test
cwtl
fdivs
pop
in
pushf
cli
xor
cwtl
add
fld
out
out
jo
andl
push
les
nop
fdivrs
mov
loop
ficoms
and
and
add
loop
aad
mov
adc
das
shl
loope
mov
cli
inc
and
mov
push
xor
dec
mov
cmp
mov
xorb
jl
push
adc
cmpb
fwait
int
ret
out
xor
int
je
popa
mov
pop
inc
cmc
aaa
test
mov
adc
stc
mov
or
jae
mov
fcoms
xchg
pop
and
mov
cmp
add
pop
scas
xchg
add
xchg
sbb
xor
push
mov
cmp
sub
das
mov
sub
ja
leave
push
cwtl
lock
lea
jo
in
out
jne
sub
jb
sbb
push
cmp
xor
xchg
push
mov
sti
icebp
add
push
out
dec
xor
int3
gs
sbb
cmp
xchg
mov
xor
sbb
and
mov
pop
out
dec
arpl
pop
cmp
xchg
pop
scas
imul
mov
sti
pop
sub
icebp
pop
cli
mov
sti
and
mov
pop
and
pop
iret
setge
jle,pt
fstp
fcomps
nop
scas
xchg
fildll
lret
sub
fiaddl
xchg
xor
xlat
call
addb
int3
mov
jg
inc
inc
movsb
sub
mov
sbb
inc
mov
xchg
sahf
mov
stos
sar
inc
incl
hlt
xor
and
add
or
sbb
push
nop
inc
jns
sub
push
or
cmpl
pop
out
push
inc
cmpsb
mov
mov
fdivrl
and
dec
push
push
movsl
enter
clc
cltd
inc
mov
and
dec
jb
movsb
dec
fwait
enter
or
shll
xchg
adc
jno
mov
in
and
test
cmp
dec
mov
test
stos
data16
mov
imul
aas
int
outsl
and
aad
jbe
fiadds
inc
add
repz
jns
daa
cltd
insb
mov
je
ret
test
and
lock
aam
add
cmc
fisubs
mov
arpl
icebp
jp
jns
jbe
inc
flds
and
dec
xor
jle
fisubs
jne
test
xlat
std
xchg
pusha
lretw
cmc
dec
push
jl
mov
repz
mov
push
xchg
adc
fwait
cmc
ret
and
popf
lret
daa
faddp
mov
repz
sbb
push
shlb
xchg
sti
push
sbb
lods
lea
push
and
cmp
clc
enter
pop
mov
jne
into
shrl
aas
jl
pushw
pop
xchg
or
and
aam
or
xor
cmp
jg
mov
adcl
or
or
push
sahf
xchg
inc
adc
jns
pop
loopne
std
stos
sbb
lods
inc
out
movsl
sahf
outsl
out
int
aad
pushf
cltd
adc
pop
xchg
daa
dec
mov
adc
out
mov
sub
xchg
jnp
pusha
rorb
add
or
mov
lret
adc
mov
lods
mov
inc
mov
jbe
inc
sub
pop
and
shlb
imul
dec
mov
arpl
jae
incb
mov
repnz
add
cmpl
scas
arpl
pop
pusha
leave
jne
test
sbb
pusha
mov
jbe
fs
iret
sbbl
in
mov
das
stos
pop
dec
mov
out
nop
jmp
mov
fsubs
popa
or
adc
das
movsb
dec
ret
orl
mov
push
or
addr16
insb
inc
dec
sbb
dec
rolb
sub
xor
push
jecxz
shl
loop
xor
mov
cld
xor
cmp
xor
xchg
shlb
shl
and
mov
inc
imul
fdivr
out
ret
jnp
pop
inc
or
fsubrs
mov
ja
add
inc
pop
lahf
cmp
or
sbb
hlt
insl
sbb
stos
mov
mov
mov
xchg
sub
lret
mov
loop
jae
inc
pop
cmp
cmpb
mov
lahf
scas
xchg
ljmp
lret
std
sahf
sti
shl
hlt
xor
inc
data16
or
adc
popf
mov
out
mov
adc
push
xor
incb
add
out
mov
test
outsb
cltd
sbb
xchg
or
test
mov
push
cmp
fisttpll
and
push
add
rorl
dec
adc
lahf
ss
dec
mov
dec
rcl
xchg
cltd
das
dec
push
add
dec
xchg
add
adc
sbb
fstps
inc
inc
xchg
inc
out
sbb
push
pop
pop
cli
mov
pusha
mov
sub
sarb
push
jnp
pop
jecxz
cltd
scas
lcall
imul
jmp
cld
les
and
add
lcall
imul
inc
insl
mov
mov
xor
and
mov
push
fildl
fldenv
adc
and
lret
pop
dec
in
xor
xchg
ljmp
repz
mov
push
aad
lahf
push
daa
pusha
lcall
add
and
mov
in
pop
es
add
fisttpl
shrl
mov
ds
pop
inc
fcmove
ud1
push
rcrl
jge
and
xor
lcall
repnz
sbb
lret
xlat
or
insl
sbb
loop
lea
mov
pop
and
cmpl
xchg
push
dec
mov
mov
inc
dec
imul
sub
mov
mov
loop
repz
iret
popf
out
push
pop
sub
rol
xor
loopne
scas
xchg
icebp
subb
adc
dec
and
inc
jb
shll
mov
jbe
xor
mov
test
jne
lret
xchg
popf
js
lock
xor
push
std
out
stos
sub
scas
mov
iret
inc
xor
clc
mov
pop
pop
or
mov
inc
loope
jae
and
ret
imull
in
mov
shr
and
mov
insb
pop
inc
fnstsw
fidivrs
xor
xchg
or
add
add
mov
aas
add
jmp
add
clc
clc
mov
or
adc
dec
pop
sub
pop
loop
and
sbb
mov
lods
add
pop
int3
subb
sbb
pop
push
xchg
movsl
adc
lods
lahf
jnp
shrl
popa
dec
xor
mov
mov
sti
insb
mov
jns
fcomp
pop
sbb
faddl
xchg
lods
sti
jne
int
ret
jmp
jo
push
mov
lahf
ljmp
mov
hlt
mov
js
pushf
or
inc
ljmp
insl
lods
mov
sub
ss
and
lds
jp
lret
pushl
mov
aaa
xor
outsl
mov
jl
stos
in
loopne
xor
xsha1
cmpsb
paddusw
cmp
ljmp
xchg
movsl
shl
adc
call
test
or
gs
repnz
lret
adcb
outsb
jge
insl
mov
in
rcrb
dec
xchg
in
xchg
shl
or
add
test
addr16
sub
imul
in
or
xchg
jg
cli
mov
fstl
scas
sbb
movsb
cld
lahf
iret
adc
or
rcr
test
push
pop
int
dec
xor
fisttps
test
xchg
mov
dec
test
lret
inc
das
mov
xorb
movsl
sub
pusha
and
adcl
or
aad
leave
in
mov
add
out
out
adc
fbstp
mulb
and
add
test
mov
jmp
faddl
or
sub
xor
mov
xchg
mov
xchg
jne
fistpll
adc
mov
mov
mov
inc
xchg
jno
mov
mov
testb
insb
shrl
enter
sbb
and
mov
jo
sbb
lahf
lcall
sbb
push
adc
lods
pusha
cmp
negb
push
push
ficompl
inc
imul
cmpl
loopne
cmp
inc
jnp
sbb
mov
data16
adc
es
loope
lcall
xor
sub
rcr
dec
jnp
adc
jle
push
xor
add
ret
push
lahf
cmc
mov
pop
add
cs
lds
adc
pop
clc
jnp
xlat
fwait
call
adc
jle
push
jge
pop
adc
stos
ljmp
ss
pop
dec
stos
add
xrelease
nop
xlat
jo
scas
push
fwait
sbb
cwtl
sbb
cltd
push
inc
sub
es
lcall
mov
xlat
stos
inc
adc
cmpl
nop
pop
adc
and
incl
jge
test
repz
jo
lahf
sub
xorb
js
out
pop
xor
imul
add
pop
lods
sti
mov
ret
fmul
cmp
mov
fnstenv
jg
sub
sbb
cmp
in
loop
sub
adcl
push
dec
xchg
in
arpl
clc
cli
mov
outsl
pop
dec
popf
shlb
and
loop
xchg
test
out
lea
icebp
mov
jge
mov
mov
cmp
dec
lret
pop
add
test
and
mov
push
cmp
loope
and
and
push
arpl
inc
imul
jmp
mov
mov
xor
hlt
fwait
cltd
and
jmp
push
mov
dec
push
dec
add
fwait
mov
arpl
mov
into
clc
pop
clc
mov
sub
jmp
jecxz
scas
testb
mov
popf
mov
shrb
fistl
ds
outsb
inc
in
out
jmp
push
inc
mov
test
sbb
push
sbb
dec
enter
sub
push
pop
test
fsts
data16
jo
cmpsl
bnd
push
out
imul
roll
imul
add
pop
pop
ror
incb
in
hlt
sbb
popf
push
in
int3
aaa
fildll
xchg
jge
mov
pop
xor
lds
imul
popa
js
add
hlt
loop
dec
xor
mov
mov
popf
xor
mov
dec
lahf
icebp
add
rcr
dec
xor
pop
and
xor
sahf
add
xor
lds
ret
aad
fildl
xchg
sub
adc
icebp
and
mov
xchg
pavgb
sub
std
ss
and
cld
in
jp
nop
sub
inc
push
push
bswap
cmp
mov
inc
jne
lea
and
arpl
ret
add
cmpsl
sbbl
hlt
push
mov
nop
inc
in
lcall
je
dec
negb
ret
daa
jle
mov
xchg
in
fidivl
cs
fnstcw
add
jno
test
pop
sub
inc
fcompl
inc
call
mov
gs
jne
bound
pop
int3
sub
lret
jmp
xor
cmp
xchg
cmpsb
movsl
cmp
sub
aas
repz
jbe
shll
or
mov
movsb
add
push
aam
test
mov
sbb
jns
js
jo
lods
cwtl
sahf
cmp
repnz
in
jnp
lahf
push
out
jecxz
daa
adc
stos
mov
cmpsb
stc
sub
mov
xchg
inc
sarl
and
movsb
xor
or
push
xor
lds
sub
into
jno
jge
add
adc
jp
xchg
lret
negl
jmp
js
push
jo
jle
in
xchg
loopne
fnstcw
mov
cltd
aam
in
js
pusha
test
jp
loop
sbb
lock
mov
mov
mov
imul
sub
dec
jno
dec
mov
call
pop
outsb
jp
sub
mov
jle
pop
pushf
int
cmp
cmp
dec
leave
insb
stos
and
fdivrp
mov
int
and
xor
fidivl
aad
ret
in
loop
mov
sbb
adc
adc
mov
jae
xchg
popa
pop
sub
push
mov
rcl
adc
or
sbb
sub
xchg
xchg
jno
pop
stos
cwtl
cmpsb
ja
rorb
movsb
pop
pop
mov
lods
adcb
int
dec
jne
rolb
ret
movb
mov
sub
push
fcoms
in
in
sahf
xchg
arpl
and
test
sbb
clc
clc
stos
imul
inc
clc
cmp
jbe
insl
mov
ret
xchg
mov
outsb
int
pop
fiaddl
das
in
cmpsb
push
js
jbe
aam
xor
out
cmpsl
cmp
repnz
in
rorb
mov
lea
cs
inc
cmp
idiv
cli
int3
xchg
call
imul
xchg
lahf
dec
mov
mov
xchg
jecxz
push
or
adc
mov
add
mov
mov
add
mov
addr16
pop
mov
xchg
stos
sbb
popf
mov
cmpsb
xchg
addl
pop
sub
in
cmc
mov
sub
dec
mov
aaa
sarl
xor
jge
adc
pop
clc
sbb
loopne
sbb
sbb
jg
or
sub
lcall
aaa
cmpsl
jo
ret
lods
ds
mov
sbbl
iret
xor
mov
into
adc
movsb
mov
xor
fimull
push
jo
push
scas
mov
repz
jb
out
add
xchg
popf
and
into
lret
pop
sbb
imul
fstpl
fs
dec
sbb
mov
into
fidivl
fcompl
mov
lcall
xor
out
sbb
cmp
jns
jb
lds
mov
fbld
mov
dec
in
or
jp
fnsave
sbb
or
mov
cwtl
jb
mov
fidivs
push
gs
aaa
cmp
jp
dec
in
fsubl
js
scas
lods
into
jmp
sub
out
adc
push
sub
idivb
pop
in
in
in
dec
dec
inc
arpl
out
jo
nop
in
call
or
cmp
mov
add
sahf
orl
xchg
data16
clc
jecxz
andl
lea
mov
sbb
loop
add
loopne
sub
push
cmp
cltd
add
add
int
xor
jg
add
loopne
jne
xchg
push
rcrl
fsts
icebp
arpl
aam
rclb
cmp
mov
imul
pop
fs
outsb
mov
cwtl
mov
test
out
dec
repnz
mov
inc
popa
cltd
jno,pt
test
addr16
mov
jbe
inc
lret
flds
test
in
jle
ss
mov
lcall
push
sub
push
cmp
lahf
mov
jb
add
rcll
lcall
hlt
jns
ret
in
mov
push
mov
repz
fcompl
popa
mov
lss
or
imul
js
sar
mov
test
mov
dec
icebp
push
addl
lret
mov
aaa
idiv
adc
adc
imul
in
js
cmp
in
mov
xchg
shrb
dec
jge
lret
stc
mov
and
repnz
dec
ret
leave
imul
mov
adc
cs
jp
ret
stc
dec
out
mov
push
jge
lods
rorl
push
int
fidivrs
mov
bound
dec
or
ja
push
mov
sub
aas
xchg
in
inc
negl
mov
cmpsb
jnp
lret
in
clc
sbb
scas
jnp
mov
cmp
and
das
mov
mov
pushf
ja
sub
inc
test
xchg
ret
notl
hlt
sub
out
call
mov
popa
mov
nop
mov
enter
dec
std
xchg
fsts
pop
imul
jnp
mov
fidivl
pop
push
xchg
stos
sub
mov
dec
cmc
xor
mov
fistps
and
mov
mov
push
pop
dec
sub
shl
pop
adc
popf
xor
cli
add
cmpsl
mov
andl
test
xor
aas
sbb
xchg
orl
addr16
pop
cld
mov
mov
mov
xlat
cmp
into
pop
test
bound
and
das
iret
push
push
inc
mov
mov
jmp
dec
ret
mov
push
negl
jge
cltd
decl
cli
xorb
fmuls
inc
jnp
sysexit
or
neg
inc
ds
sbb
add
test
cmp
fiaddl
push
jb
xor
xlat
ljmp
push
mov
popa
jg
mov
fmuls
xchg
iret
xchg
fisttpll
ficoml
xlat
mov
sub
mov
xchg
ss
nopl
push
cmpsb
cwtl
divl
sbb
lods
xor
aam
lods
inc
es
sub
xchg
out
in
pop
gs
adc
xor
fadds
push
fsubrl
push
adcl
stc
mov
cmp
cmpsb
sbb
ret
push
xchg
xchg
sbb
loop
cwtl
arpl
dec
fnstenv
mov
inc
xchg
jle
sbb
insb
sbb
lret
jl
fiaddl
xchg
ret
push
test
cmp
sbb
aas
jae
inc
test
mov
jmp
iret
pop
sbb
je
xor
std
xchg
int
addr16
or
jne
ss
call
push
adc
fdecstp
mov
lret
fildl
nop
clc
cmpsl
add
nop
int
cmp
or
arpl
push
add
mov
xchg
inc
jmp
pop
pop
call
inc
xchg
jp
mov
inc
jne
call
repz
int
mov
cmp
mov
pop
lods
lea
mov
int3
mov
fdivr
lcall
ja
outsb
push
push
jns
cwtl
xchg
ja
pop
out
push
and
fmulp
ret
sbb
and
data16
rclb
xor
sub
dec
shlb
jbe
add
shll
fs
stos
orb
pop
mov
cmp
mov
or
xor
das
pushaw
addr16
sub
mov
or
mov
lea
mov
push
dec
or
ja
pop
mov
sbb
cld
shlb
mov
push
fistpl
sbbl
inc
cmp
push
sahf
and
ficoml
and
pop
xor
pop
sub
loop
mov
sub
push
adc
lcall
sarl
pop
movsb
pop
out
push
insb
mov
stos
inc
lahf
stos
fs
cmpsb
ds
mov
lcall
sub
faddl
imul
mov
pop
xchg
mov
adc
and
in
int3
push
add
xchg
inc
sti
xor
into
int
inc
out
ljmp
scas
or
inc
adc
xor
pop
int
pop
sbb
add
adc
dec
inc
xchg
lret
adc
lret
jbe
insl
sahf
stos
xchg
inc
cld
jp
cld
scas
sub
jg
aaa
and
stos
adc
xchg
jg
ja
sub
movups
xor
stc
add
add
shl
rorl
add
inc
loope
mov
repz
dec
sbb
xor
add
outsl
aam
xlat
sbb
fstps
insl
fcomp
or
inc
push
xchg
jae
pop
push
ja
pop
adc
addl
in
sub
xor
call
stc
xchg
xchg
retw
pop
dec
xor
ror
jecxz
lret
clc
lods
cltd
push
movsb
xor
sbb
mov
pushl
inc
xor
and
and
data16
das
repnz
ret
ret
mov
sbb
inc
cltd
sub
add
jp
adc
xchg
leave
cs
sarb
test
cmp
xchg
subb
inc
mov
js
iret
mov
dec
jns
aam
add
and
dec
lahf
mov
mov
sub
mov
sbb
jg
repnz
in
mov
pushf
sbb
inc
cmp
js
repnz
dec
into
repnz
xor
lret
or
fisubs
test
in
xchg
cmp
loope
pop
xchg
push
inc
cs
dec
xchg
in
adc
inc
in
xchg
rclb
adc
jle
lahf
fstpt
sub
fpatan
rcl
scas
dec
mov
sbb
mov
jmp
pop
and
add
hlt
js
pop
mov
jecxz
ja
push
cmpsb
mov
or
jp
lock
fwait
pop
enter
push
adc
leave
adc
aam
add
jns
test
lcall
cmp
mov
stos
and
xchg
push
xchg
push
push
push
or
mov
fildll
test
cli
jo
xor
lahf
push
jne
orl
sbb
lret
jns
adc
rep
dec
inc
inc
imul
sub
nop
mov
stc
subl
scas
sbb
shrl
xchg
ret
mov
mov
incb
loopne
push
mov
fwait
test
xor
test
inc
lds
stc
rorl
insb
inc
add
ficoml
mov
sub
xchg
sarl
jmp
mov
pop
aaa
notl
ja
icebp
mov
es
shrb
mov
mov
fxch
mov
xor
pop
pop
cmp
jno
sbb
ret
icebp
stc
and
add
mov
pop
mov
pop
nop
cs
jecxz
call
jae
lods
mov
or
dec
outsl
or
inc
pop
sbb
jmp
aam
sti
ljmp
pop
jae
int3
fdivr
jns
add
lcall
fsubrl
xor
lods
loop
cmp
movsb
xor
hlt
mov
pop
xlat
mov
ja
cmp
imul
jbe
jb
mov
cmp
xchg
andb
or
mov
mov
or
mov
pop
and
jg
push
std
mov
scas
pop
call
xchg
inc
shrl
shll
int
sub
out
repnz
pushf
es
ja
outsl
jmp
push
sub
inc
mov
mov
cwtl
testl
out
mov
jp
mov
mov
icebp
cmp
daa
aas
mov
push
outsl
xchg
sbb
faddp
mov
adc
push
sbbl
and
sub
gs
mov
mov
scas
pop
add
xor
cmc
or
jb
mov
pop
mov
pop
es
push
mov
in
popf
pop
mov
push
pusha
rolb
loopne
jl
xor
mov
or
add
xchg
in
sbb
cmc
fisttpll
mov
movsl
dec
insb
pusha
push
dec
outsb
cltd
push
clc
aam
mov
adc
cmp
inc
out
daa
mov
pop
lods
push
push
fisubs
mov
addl
out
or
sbb
test
ds
or
scas
cmp
lea
and
cmp
cmp
cmp
pusha
jne
mov
mov
scas
sbb
mov
jae
and
cmp
cwtl
mov
xlat
push
jmp
mov
xchg
cmp
adc
arpl
data16
in
pop
lds
mov
cmp
cmpb
cmp
mov
stos
pop
lret
add
sbb
pop
cld
sbb
add
inc
push
cmpsb
lods
cwtl
mov
dec
aad
int
daa
cmp
je
mov
and
pop
pop
mov
sub
push
mov
cs
std
fsubs
cmp
sbb
sarb
lea
push
aam
sti
jle
and
loopne
inc
aaa
cs
les
pop
js
or
sbb
dec
sbb
cmp
mov
imul
add
shlb
jg
js
lcall
push
jp
or
fisttpll
les
push
sarl
js
and
pop
arpl
lahf
mov
add
movsb
clc
lea
loopne
jbe
pop
sub
pop
fcomi
adc
pop
in
iret
xor
pop
and
add
add
call
pushf
and
xor
xchg
lods
jp
xor
in
aad
add
add
cmp
cmp
fmul
mov
ds
daa
or
inc
iret
jbe
inc
jnp
lods
jb
mov
sbb
adc
lret
mov
push
mov
adc
ret
popf
cmovo
mov
in
fmulp
xchg
or
roll
das
in
sbb
pop
sub
std
push
inc
in
repz
insl
dec
jno
lods
divb
push
icebp
notb
enter
lds
push
enter
xor
jo
out
cltd
dec
or
xorb
add
lcall
ja
or
movsl
xor
add
xor
fsubs
xchg
or
cmp
rcrl
adc
stos
or
mov
mov
sub
leave
fsubr
das
cmp
ret
leave
xchg
fwait
cmp
push
jmp
adc
mov
or
xor
adc
xchg
and
cli
gs
dec
into
or
lods
lods
jnp
rclb
ds
les
dec
movsb
cltd
jge
or
aam
mov
rcrl
jns
out
or
jns
fiaddl
cmp
popa
movups
push
pop
negl
scas
jmp
mov
mov
xchg
inc
pushf
test
xchg
fstl
add
bnd
scas
out
mov
mov
push
push
xor
sahf
insb
mov
sbb
out
adcb
pop
ljmp
andb
xchg
sub
sub
mov
es
pop
out
cmp
xor
test
mov
mov
push
outsl
push
mov
jge
mov
add
gs
mov
cwtl
mov
add
lcall
cmpsl
add
push
leave
and
or
cmpsb
mov
pop
aaa
mov
scas
or
out
push
add
fimull
mov
push
test
mov
sarl
sbb
adc
push
lahf
outsl
es
xor
sbb
in
mov
push
xor
mov
mov
lods
xlat
mov
mov
cs
jns
ljmp
pop
mov
pusha
or
decl
adc
dec
sti
jbe
insb
mov
mov
jg
add
sub
int3
shl
dec
cmp
mov
mov
cmp
or
push
push
push
mov
imul
shr
inc
sbb
sbb
xor
pop
es
xor
dec
mov
insb
pop
or
movsb
xchg
pop
xor
xor
enter
pop
cmpsl
push
or
push
stos
push
cmp
dec
dec
pusha
and
mov
push
sbb
leave
pop
push
sub
jae
outsl
xchg
fbstp
jecxz
test
in
mov
inc
daa
bound
push
gs
pushf
cs
push
dec
sub
jae
push
xor
aad
jb
mov
jns
scas
jp
fwait
testl
xchg
sub
cmp
pop
adc
outsb
mov
mov
and
inc
les
lds
jl
aas
pop
int3
out
in
stos
sub
loop
jbe
cld
sbb
mov
sahf
addr16
scas
rcrl
movsb
dec
cmp
cld
fnsave
mov
movsb
in
xlat
out
cli
pop
dec
les
pop
jecxz
mov
adc
push
je
push
jmp
xor
mov
testl
inc
inc
sbb
or
out
cmpsl
jmp
sbb
mov
push
pop
jp
sub
push
or
iret
ret
popa
psubw
test
or
out
push
xchg
mov
cmpsl
test
or
mov
pop
push
shlb
jmp
inc
shll
and
dec
lds
cmp
arpl
xchg
push
mov
mov
adc
inc
adc
add
cmp
mov
jecxz
int3
jle
dec
jecxz
out
subb
xor
dec
cmp
sbb
test
jle
loope
jae
les
icebp
jle
mov
mov
mov
mov
xlat
dec
sarl
jbe
xadd
fadds
lods
sub
xchg
mov
imul
movb
sbb
inc
jmp
cmp
out
adc
aaa
and
dec
push
inc
jp
jbe
lret
das
inc
arpl
rorl
call
jle
cmp
sbb
imul
in
dec
sub
cmc
jae
repnz
jmp
dec
outsl
clc
pop
insb
jl
out
pushf
pop
outsb
dec
sub
lea
pop
cmp
adc
pop
dec
inc
pop
test
cmp
sar
pop
lret
pop
mull
shl
mov
mov
out
adc
inc
jne
popf
in
mov
inc
and
repz
cmpsl
adc
adc
shrl
inc
cmp
adc
pop
xchg
pop
aad
mov
loope
jae
pop
dec
pop
gs
popa
xlat
and
pop
and
popa
lret
xchg
test
mov
pop
insb
adc
lods
xchg
push
movsb
aam
jp
clc
mov
lret
lret
xchg
daa
dec
dec
cmp
jns
sbb
sub
inc
in
mov
lods
lret
add
xchg
add
xor
adc
in
movsl
negl
test
or
or
inc
dec
xor
sub
lods
mov
out
inc
popa
jb
sub
in
jb
push
mov
pop
outsb
test
iret
xchg
push
or
call
rolb
or
jae
sbb
sarb
sbb
inc
loope
xchg
leave
nop
push
add
lahf
xchg
fsubl
cmp
xlat
outsl
test
js
fcomi
lea
adc
mov
das
rolb
dec
ja
or
movsb
arpl
cltd
sub
push
xchg
push
push
xchg
cmp
push
adc
add
sbb
jne
je
adc
sub
cmp
inc
testb
pop
jno
outsb
push
arpl
test
push
push
or
popa
es
add
sub
aad
mov
sbb
cmp
aas
pop
arpl
iret
aad
les
stos
mov
pop
add
lds
aas
xchg
jnp
insb
adc
sbb
xorb
cmp
push
jae
scas
xor
daa
xchg
jnp
fisubrs
jbe
ror
push
or
leave
jle
into
push
pop
inc
jg
push
movsb
pop
jo
adc
jae
dec
xor
dec
adc
xlat
mov
loope
fwait
and
cmp
xchg
outsb
sbb
imul
in
adc
jl
xchg
fbld
pop
int3
testb
adc
jp
pop
dec
push
inc
gs
mov
jb
scas
dec
lret
sarb
cmp
sbb
xlat
out
fldt
push
rol
leave
sub
add
pop
jmp
subl
insl
outsl
push
popf
js
into
mov
pop
mov
and
jae
push
sbb
rcrl
les
or
lds
mov
ffreep
pop
jo
mov
xchg
lret
sbb
arpl
mul
cltd
sub
lahf
out
cmpsl
ljmp
sub
insb
cmova
lods
adc
xlat
push
outsb
stos
addr16
sbb
addr16
add
push
frstpm(287
inc
xchg
daa
into
subb
inc
lret
fwait
pop
push
add
mov
push
sbb
gs
mov
or
mov
jnp
adc
xor
js
add
stos
insl
cmp
lret
popa
mov
imul
mov
mov
or
std
rcrl
push
jne
cmc
inc
hlt
xor
mov
leave
jbe
or
dec
idiv
xlat
pop
or
mov
popa
fstps
adc
mov
imul
or
cmp
jnp
and
sub
lea
jno
mov
ret
pop
hlt
mov
rorb
and
ficoml
stos
je
je
test
dec
mov
mov
sar
sub
cmp
xchg
ret
test
dec
lcall
lea
cmp
das
xchg
loopne
lods
mov
xor
jmp
fcomps
or
jb
out
dec
ds
outsl
dec
insb
xchg
inc
push
mov
push
pop
out
cmc
inc
je
adc
adc
and
repnz
ficoms
add
sbbl
out
test
cmp
push
jmp
pop
repz
jp
pop
in
rorl
lock
dec
push
je
adc
dec
xor
nopl
lods
imul
jge
lods
ss
lret
test
lods
js
add
scas
shll
loopne
test
or
cmc
sbb
sub
outsb
xchg
push
lret
inc
cld
fs
ljmp
jne
leave
mov
loop
or
lods
leave
stc
mov
push
ds
mov
ret
aam
ror
roll
repnz
pop
cmpb
cmp
xchg
push
andb
ficoms
fwait
sbb
jmp
mov
mov
jnp
cmp
cld
in
jnp
gs
dec
fidivrl
lret
push
adc
dec
std
jbe
mov
insl
and
jo
ja
mov
jl
mov
adc
negb
in
and
sbb
lahf
push
fnsave
inc
or
push
cmp
pop
pop
xor
cmp
icebp
dec
mov
xchg
shlb
lahf
xchg
adc
das
es
adc
andl
in
jl
mov
add
out
dec
pop
sub
call
shrl
popl
cmp
add
push
icebp
pop
addb
push
std
mov
mov
push
repnz
jo
lret
xor
aas
mov
adc
mov
test
cmp
or
loopne
adc
movsl
sahf
out
repnz
fbld
adc
xlat
stos
fimull
xor
and
insb
fwait
mov
xor
adc
lds
cmp
dec
fdivr
mov
add
adc
outsl
push
pusha
cltd
jae
cmp
shll
mov
repnz
jns
cmc
and
mov
pop
xor
push
sbb
mov
xchg
fcoms
in
push
sbb
sbbb
push
pop
pop
nop
hlt
lods
jo
push
test
push
or
xchg
bound
adc
lahf
xchg
loope
arpl
in
das
adc
fcompl
cli
out
push
pushf
jg
aam
ror
pop
ret
repz
cmpsb
shll
add
lock
lea
movsb
mov
inc
add
popf
xor
loop
adc
fsts
popf
stos
nop
lds
popf
mov
xlat
roll
and
adc
xor
xlat
in
das
mov
or
aad
and
push
or
jle
ja
outsb
adc
std
mov
xchg
popf
repnz
mov
xchg
sbb
enter
mov
int
xor
shll
out
jne
cmp
vunpckhpd
mov
aaa
addr16
xchg
add
mov
imul
jp
stos
outsl
test
ret
pop
cmc
stos
mov
cs
inc
bound
orb
dec
js
shl
jge
cmp
pop
push
lock
shll
aam
dec
xchg
sbb
push
mov
cltd
dec
adc
pop
icebp
and
push
xchg
mov
fcoml
out
sub
pop
shrl
stc
cmp
mov
cmp
test
sbb
arpl
and
mov
int3
fld
shlb
mov
cmp
push
scas
fs
pop
in
loop
shl
xchg
andnps
pop
sbb
inc
out
fbld
ret
out
cmp
clc
hlt
cld
jl
gs
sarl
push
xchg
mov
lods
dec
dec
pop
dec
ja
stos
xor
leave
add
pusha
daa
cmp
loopne
or
insl
xchg
scas
xchg
shlb
cmpsb
fnsave
popf
push
mov
clc
pop
in
cmp
add
shll
push
adc
sbb
sar
jmp
pxor
sahf
mov
sarl
sub
mov
mov
loop
inc
cwtl
loopne
fnstsw
insb
pop
vmwrite
mov
jge
enter
inc
mov
jl
pusha
fisttps
inc
enter
sub
push
sub
lret
pop
stos
ja
dec
addb
xorb
sbb
inc
pop
sbb
jno
cld
inc
cmp
cmp
xchg
inc
fs
mov
lds
fisttpl
test
xchg
lret
out
lods
insl
enter
dec
ss
xchg
daa
push
out
xor
js
popl
inc
push
nop
popf
push
mov
mov
jnp
adc
jecxz
cmp
push
jg
jb
int3
std
inc
shll
aam
pusha
int
sbb
rcr
rcrb
loopne
das
or
mov
pop
xchg
imul
mov
lea
pop
adc
shl
loopne
adcl
add
and
sub
cmpsb
and
xchg
out
and
inc
inc
outsl
loop
adcb
test
notl
adc
adc
imul
add
xor
push
push
cmp
out
mov
mov
pop
ds
xor
ja
adc
push
sahf
pop
cmp
push
fs
sub
enter
das
sub
mov
out
xor
popf
mov
mov
adc
push
gs
cld
mov
orb
rcrl
mov
adc
xchg
test
mov
lock
sbb
mov
mov
sub
rcll
mov
add
imul
fldenv
cmp
push
jle
cli
dec
dec
jae
clc
call
out
lods
sub
sbb
sbb
sahf
das
or
jb
rorb
mov
leave
lcall
repz
rcrl
and
ja
lret
outsl
and
mov
mov
sub
and
cmp
loop
adc
xor
out
dec
clc
xor
pop
jp
mov
in
jne
inc
cmp
or
cmp
enter
fmul
mov
sub
rcrl
fnstsw
sbb
pop
pop
flds
add
lret
jbe
mov
aad
lea
sbb
jo
mov
mov
loopne
adc
push
add
arpl
es
sti
push
call
xor
xchg
gs
aas
pop
cmp
dec
inc
orl
das
fsts
sbb
mov
rclb
or
insl
add
sub
aam
inc
push
sti
aad
jecxz
cmpsl
xchg
push
sub
push
ret
mov
pushf
ret
fcoml
loopne
hlt
dec
sarl
sub
aam
mov
cmc
mov
pop
fs
cwtl
test
scas
leave
cmc
jp
sbb
test
mov
xchg
aad
jae
loop
pop
aaa
es
mov
pop
or
lods
std
lock
fs
or
push
loope
xor
or
push
add
xlat
imul
sub
push
xchg
sbb
out
mov
or
lock
es
push
imul
sbb
cmp
clc
out
rcll
rcr
hlt
insb
fistpll
fisubl
push
mov
into
mov
adc
jecxz
sarb
xor
popf
in
xchg
push
jle
push
jns
cmc
push
and
mov
mov
test
or
mov
into
pop
add
mov
mov
xchg
sub
sbb
lahf
xchg
push
test
dec
or
scas
fwait
loope
fstpt
dec
lods
data16
in
pushf
jecxz
mov
inc
jg
adc
in
js
mov
lock
fldcw
xchg
adc
cwtl
mov
lahf
loop
scas
fnstcw
xchg
cmp
in
pop
push
cmp
data16
dec
xchg
adc
ds
int3
lret
xor
add
aas
sub
test
and
or
mov
pop
filds
jg
xor
jle
inc
mov
or
xor
addl
in
fs
sar
add
mov
xor
fs
or
ja
clc
test
mov
out
in
repnz
dec
mov
lret
xchg
popa
pop
or
cltd
xchg
imul
scas
insl
inc
pop
pop
in
pop
int3
pop
xchg
pop
sub
call
mov
xor
ja
scas
lret
lcall
adc
xor
pop
dec
pop
xor
pop
enter
aad
mov
sbb
lcall
stos
sub
fidivl
test
jmp
cwtl
xor
dec
in
xor
mov
adc
cmpsb
push
mov
mov
pushf
cs
inc
jecxz
or
jecxz
popl
mov
pop
push
dec
add
push
hlt
loop
inc
inc
jno
cmp
mov
in
movsl
andb
mov
jo
push
out
sub
cs
dec
aam
push
push
sub
les
and
cli
cwtl
pop
int3
dec
dec
jl
jne
sbb
stos
pusha
push
sub
outsb
in
dec
jo
mov
cmp
mov
cmp
out
scas
mov
loopne
sbb
jmp
fidivs
adc
sbb
mov
out
cmc
mov
testb
je
andl
push
fiaddl
sub
out
lret
es
adc
and
mov
pusha
cmp
sbb
fiadds
pop
outsl
xor
jmp
jmp
sub
hlt
xor
sbb
push
sbb
pushf
ljmp
mov
xchg
frstor
je
mov
dec
mov
enter
in
sub
xor
add
cmpl
sub
push
fwait
icebp
dec
mov
push
in
or
lods
mov
cmp
push
pop
add
inc
and
xchg
iret
imul
dec
loopne
sub
pop
imull
out
xor
jecxz
and
mov
ds
sti
fmuls
pop
dec
ret
sbb
adc
imul
test
ljmp
sbbb
mov
andps
push
popa
jp
adcb
cmp
jns
jb
fneni(8087
mov
roll
pop
push
out
inc
xor
and
xchg
sub
mov
pop
sti
dec
in
lret
loope
sbb
arpl
shlb
cmp
add
sarl
push
rcl
loope
outsl
out
les
mov
inc
jge
mov
iret
cmp
fdivrl
sahf
sub
push
sbb
push
mov
xor
scas
and
or
cli
mov
mov
lret
lcall
outsl
adc
out
jl
mov
pop
out
bound
bnd
ss
adcl
cmp
in
mov
call
aad
bound
popf
outsl
mov
mov
lea
push
insl
cmp
cmpsb
cmp
pop
pop
sbb
mov
fisubs
sarl
and
sbb
outsl
sub
pop
cmpb
shll
shr
shrb
inc
mov
jae
and
push
mov
pop
enter
movsl
dec
test
push
aas
pop
cmp
pop
out
cltd
out
adc
cmpsb
dec
jmp
and
shl
and
out
loop
idiv
nop
fldl
ret
out
nop
cld
es
data16
js
add
pop
jg
imul
clc
test
sub
cltd
mov
jnp
decb
mov
mov
sub
cmpsb
cmp
adc
insb
test
outsl
outsb
jnp
es
mov
jnp
imul
ret
adc
mov
je
ljmp
adc
cltd
mov
out
mov
mov
jle
mov
cli
movsl
mov
cmp
cli
sbb
je
mov
dec
cwtl
divb
dec
pop
xchg
pop
icebp
inc
andb
mov
int3
notb
loope
test
loope
popl
xchg
dec
sub
fidivs
xchg
mov
sub
negb
icebp
sbb
mov
test
test
xor
dec
mov
xor
or
gs
mov
fldt
sub
xchg
mov
jne
int
jbe
mov
push
xchg
sti
mov
jno
stos
push
xor
cmp
inc
or
xchg
std
xchg
mov
daa
loope
jecxz
mov
aas
hlt
shl
into
adc
nop
test
leave
daa
add
iret
in
push
lods
and
cmp
icebp
jmp
ret
or
mov
pop
in
cld
cltd
mov
arpl
fistpll
pop
sub
push
mov
xor
pop
sbb
aam
std
loop
lods
and
lret
iret
mov
jbe
dec
lret
add
cs
aas
sbb
std
fnstcw
adc
pop
pop
jmp
mov
push
mov
pusha
sbb
insl
pop
sbb
dec
inc
inc
sbb
pop
xor
pusha
addr16
or
aaa
scas
lea
sbb
xor
ret
push
xchg
std
xchg
mov
mov
cli
jb
fwait
or
in
or
mov
sub
cli
xor
push
push
mov
push
xchg
push
cmp
in
xor
cmp
not
add
movswl
fcmovnb
sbb
movsl
outsb
and
lret
lret
test
stc
xchg
pop
jl
xor
mov
and
mov
pop
jo
icebp
into
in
out
mov
or
inc
inc
out
cmpsb
into
xlat
or
repnz
push
test
jge
jnp
cli
in
pop
and
movsb
lds
xor
mov
out
movsl
push
sub
hlt
sub
movsb
pushf
fcomps
or
xor
push
daa
test
cli
inc
sub
mov
retw
mov
out
add
cmpsl
inc
mov
push
push
or
pushf
rcll
loope
xlat
fstl
cmp
add
xorl
inc
daa
sbb
adc
add
fsubs
cmpsb
add
ss
mov
and
adc
or
das
scas
dec
movsl
inc
js
and
cmp
clc
inc
movsl
pop
jle
sarb
cmp
mov
pop
lcall
xchg
cmp
mov
jbe
mov
jge
mov
fildl
daa
jno
xchg
pushf
jl
iret
lods
sub
das
icebp
es
jns
dec
into
clc
push
sbbl
inc
fs
in
loopne
sbb
dec
je
int3
js
jo
push
cmp
fcos
aad
bound
inc
add
cmp
xor
cmp
scas
icebp
mov
imul
pop
rorl
pop
inc
inc
movl
cmpsl
int
pop
fdivp
test
cwtl
mov
mov
pop
add
add
jl
sbb
mov
je
mov
push
test
mov
mov
adc
test
fdivs
jecxz
es
or
data16
ror
sbb
xchg
jg
popa
fisubl
adc
sub
outsb
iret
aad
dec
movsb
roll
push
inc
addr16
push
aaa
shrb
add
push
mov
push
sub
das
cmpsl
pushf
inc
arpl
adc
fcmovnb
arpl
cmpsb
or
cmp
negb
ret
mov
jb
and
cmp
scas
inc
scas
addb
jg
out
jecxz
loop
adc
enter
es
ds
sarb
or
cmp
cltd
xchg
bound
aad
int
and
pop
daa
xor
movsb
gs
push
fcmovbe
or
inc
add
lahf
lea
or
inc
cmc
jns
mov
mov
push
addr16
push
inc
call
sbb
je
mov
mov
jmp
ficoms
pop
aam
ja
sarl
sarl
hlt
bound
mov
lock
mov
in
dec
pop
push
sub
addr16
sbb
ret
stos
bound
push
hlt
sbb
outsl
mov
rorb
jle
shl
push
inc
add
pop
jbe
cld
and
push
xor
push
sbb
push
mov
rcrb
ja
daa
mov
mov
jp
imul
inc
bound
and
xchg
clc
call
pushf
mov
frstor
add
add
cmpsl
in
mov
jo
clc
test
jns
mov
outsb
mov
xorl
subb
mov
insl
and
push
or
scas
lcall
lcall
xor
insl
xor
out
mov
nop
arpl
dec
push
fldcw
sti
inc
test
inc
inc
jae
mov
adc
pop
lcall
rcr
pop
sbb
inc
sub
rorl
enter
popa
push
mov
inc
fnsave
xor
sti
icebp
jne
cmp
in
repnz
leave
or
cmpsb
mov
popf
mov
mov
dec
xlat
push
mov
test
or
dec
sbb
pop
xor
je
leave
and
mov
inc
inc
sub
mov
cmp
aam
in
test
icebp
sub
fdivs
fnstenv
mov
je
mov
cltd
adc
cmpsl
scas
or
andl
pop
pop
jecxz
out
mov
mov
movsb
and
into
jle
fs
roll
scas
pop
pusha
daa
addl
shll
popa
inc
pop
mov
clc
inc
jno
out
pop
data16
cmc
loop
test
enter
mov
xor
xchg
xchg
mov
sub
rorl
rcrb
scas
cmp
lcall
ljmp
cmp
je
adc
or
mov
scas
sbb
lods
outsb
pop
lcall
pusha
popa
fwait
cmp
push
pop
xor
test
dec
pop
lea
das
push
add
cmp
rclb
and
aad
out
push
cmp
scas
call
js
mov
ljmp
fildll
inc
out
hlt
jle
fsubrs
lahf
xchg
js
jo
mov
dec
lods
dec
pushf
inc
cmpb
pop
sub
cwtl
fisubrl
pop
add
or
aas
mov
dec
jne
xor
dec
pusha
pop
push
pop
aad
xor
pop
cltd
rorl
pop
lods
adc
pop
mov
mov
sbb
ds
mov
mov
daa
fiaddl
pop
repz
lds
lahf
push
lds
test
cmp
xchg
std
sub
mov
xchg
or
jno
out
push
mov
sbb
int3
mov
inc
or
les
sub
jmp
dec
jo
xchg
outsb
jle
inc
ds
scas
xlat
mov
test
test
filds
fstpt
dec
lods
push
jl
out
dec
imul
adc
clc
aaa
aad
dec
xchg
ror
repz
and
sub
add
sbb
nop
sarb
add
inc
inc
lock
jge
icebp
lods
and
insl
xchg
xor
jmp
or
mov
adc
mov
fs
mov
adc
lds
movsb
push
push
orb
xchg
sar
adc
adc
movsb
cmp
push
sub
aad
push
inc
dec
pop
sub
mov
pop
mov
inc
es
cld
cmp
and
inc
and
adc
shlb
stos
sub
push
push
je
ficompl
xchg
and
lock
pop
jno
test
adc
popa
jp
js
loopne
stc
mov
sarb
xchg
mov
ret
mov
in
test
stos
push
mov
hlt
call
xor
mov
mov
xlat
pop
dec
popf
mov
mov
sub
cltd
jne
dec
fwait
xor
push
pop
inc
inc
enter
rcll
add
test
sbb
sbb
stos
xchg
out
xor
inc
fdivr
pop
in
es
pop
lret
out
mov
mov
popa
in
insb
mov
in
iret
sub
pop
jge
and
ret
xrelease
lcall
mov
pushf
pop
imul
into
mov
shll
add
xor
dec
cltd
mov
sub
mov
mov
add
or
cmp
ror
ss
mov
addr16
jns
mov
jne
push
inc
ds
push
dec
pop
cmpb
mov
xchg
cmp
push
dec
out
ficomps
fstpt
popf
mov
ficomps
repz
nop
jecxz
sub
cwtl
cmpsb
loope
stos
js
daa
mov
mov
add
adc
ljmp
out
jae
cmp
lods
or
imull
jl
mov
call
mov
mov
cmp
add
and
push
dec
pop
sub
rol
pop
and
inc
jnp
ljmp
add
mov
mov
call
xor
push
sub
push
jo
jp
fbld
fdiv
mov
push
testb
jle
lods
jg
ret
add
cltd
sbb
in
mov
fldl
sar
mov
iret
dec
test
and
aad
sub
pop
mov
les
inc
and
or
xchg
data16
decl
push
mov
or
lods
cmpsb
jecxz
cmp
inc
mov
sub
lods
adc
loopne
xchg
cmp
clc
xor
out
in
cmc
xorl
dec
cmp
inc
mov
ja
in
inc
ja
fdivrp
jo
pop
ror
sbb
insl
add
mov
push
mov
les
mov
xchg
loop
mov
shlb
pop
adc
sti
adc
test
arpl
jnp
pop
lret
loopne
into
stos
push
loope
xor
jb
fwait
mov
mov
adc
aas
test
sub
and
sub
std
fcmovbe
jns
xchg
or
xor
pop
pop
clc
ret
sarb
pop
pop
dec
mov
ficompl
add
sbb
push
pop
adc
pop
adc
adc
jle
outsb
int3
ja
xchg
loopne
mov
pop
loopne
pop
inc
push
js
mov
mov
daa
pop
adc
addl
mov
stos
adc
add
add
insl
and
or
fldt
sahf
mov
sub
movsb
icebp
das
ret
jmp
ds
inc
mov
xor
xchg
movsl
jne
jecxz
sub
enter
stc
xchg
movb
addr16
or
inc
lahf
out
scas
mov
daa
push
xchg
jb
xchg
mov
cmpsb
imul
insb
add
fiadds
push
xchg
stos
and
fdivrs
dec
movd
sub
outsl
or
fcmovb
daa
imul
lds
test
dec
xorl
push
dec
mov
cltd
mov
aam
dec
lahf
push
adc
push
aas
enter
pop
in
pop
in
ret
mov
xchg
xchg
das
jbe
pop
mov
pop
inc
add
xor
jbe
and
sub
arpl
cmp
lcall
repnz
lret
pop
js
cmpsl
cmovae
mov
push
paddusb
jns
add
xor
cmp
jnp
fistpl
mov
jo
test
mov
cld
adc
cmpsl
push
adc
xchg
test
hlt
or
sbb
mov
lods
mov
dec
outsl
cmc
sub
mov
cwtl
mov
movsl
sarb
mov
sbb
jecxz
jp
push
mov
cld
mov
pop
roll
aas
inc
sahf
jnp
outsb
lock
mov
dec
orb
sbb
ljmp
roll
mov
mov
sbb
add
jns
mov
je
cltd
cld
pop
nop
mov
les
add
imul
mov
sahf
dec
call
push
dec
pop
adc
jmp
pop
dec
fld
sbb
push
pushf
pop
cmp
add
dec
push
inc
jns
and
mov
cmpsl
es
inc
mov
dec
mov
out
pop
cld
sbb
xchg
loope
jb
lret
mov
adc
mov
cmc
xchg
movsb
leave
and
pop
stc
ds
sub
and
xchg
arpl
jns
add
and
mov
shll
loope
pop
jge
stc
mov
dec
scas
sub
mov
in
mov
mov
out
rcrl
out
dec
mulb
push
adc
mov
add
xchg
or
pop
je
in
cltd
outsb
int
ds
mov
bound
xor
scas
cwtl
popa
cs
dec
cmpsl
xor
fidivl
ret
jb
rcll
push
or
fistps
repz
jg
xchg
and
mov
daa
jne
jnp
jnp
dec
arpl
mov
out
sahf
jbe
inc
inc
xchg
xchg
xchg
or
pop
mov
daa
xchg
fdivrl
mov
pop
inc
fdivrl
add
repnz
ss
dec
or
xchg
out
das
adc
xor
ret
jecxz
xor
ss
inc
imul
stc
cmpl
inc
adc
mov
aam
frstor
imul
sbb
ds
es
mov
cmpsl
push
add
aas
and
pop
xor
push
aaa
ja
ds
incb
pop
ss
and
xor
aas
mov
mov
fs
ds
test
xchg
movsb
leave
sbb
push
ljmp
push
xchg
add
stos
adc
mov
jb
cltd
repz
mov
adc
push
and
or
rcr
cmp
dec
std
push
inc
cmpsb
repnz
mov
idivb
jbe
xor
jmp
inc
aas
sub
push
pusha
bound
jle
or
and
les
mov
jle,pt
icebp
movsl
andb
int3
adc
in
ja
push
dec
jno
jnp
mov
pushf
pop
push
movsb
inc
aam
xor
pop
aam
add
dec
xor
dec
icebp
mov
inc
je
xchg
mov
add
mov
cli
cld
sub
sub
shrb
xchg
mov
adc
loop
xchg
jb
pop
sub
jp
jb
call
test
mov
fsubrl
push
jno
mov
xor
and
push
sbbl
ja
inc
or
jne
dec
cli
pop
and
imul
jne
sbb
decb
dec
push
add
hlt
cli
dec
frstor
sbb
add
xlat
cmp
xorl
jmp
jno
movsb
fwait
repz
aad
add
ljmp
out
orb
adc
cld
lock
mov
es
test
pop
sbb
jne
fcomps
loop
cmp
out
incb
divl
xor
mov
es
inc
scas
xchg
push
cmp
movl
lret
add
cli
imul
rcl
mov
idivl
cmpsl
jbe
pusha
jmp
xorb
scas
ret
rcrl
pop
sbb
xchg
sbb
test
sar
sub
pop
adc
sub
jp
jno
aaa
or
and
fcomi
jno
inc
add
push
int
inc
test
xor
ret
out
in
cltd
outsb
mov
aad
push
fs
fildll
jns
dec
mov
pusha
shlb
int3
sbb
test
fwait
dec
sub
push
daa
repnz
insb
mov
pop
sub
pusha
je
cs
sub
jnp
sub
pop
insl
repz
inc
in
stc
sbb
outsl
push
les
fldenv
lds
jnp
adc
stc
xchg
in
leave
cmp
add
loope
std
pop
xlat
xchg
xchg
cmc
fsubrs
faddl
pusha
loope
insb
call
inc
sub
xor
xchg
dec
imul
or
int
sub
sahf
add
dec
pop
sub
cmp
dec
lea
inc
jmp
inc
fisubrs
xchg
xor
mov
dec
sub
imul
or
cltd
outsl
xchg
imul
inc
shl
xchg
xorb
hlt
and
mov
aas
dec
pop
stos
jecxz
scas
dec
je
inc
in
arpl
insb
sahf
sbbl
jb,pn
xor
sbb
push
call
jns
sbb
hlt
jmp
inc
insl
pop
arpl
xchg
into
aad
icebp
lret
in
lahf
mov
ss
in
dec
xchg
and
ja
add
std
test
cmpsl
clc
xchg
std
pop
pop
push
loopne
and
xchg
dec
push
pushl
into
dec
xor
scas
in
mov
fadd
sahf
mov
scas
ud1
mov
xor
rcl
in
adc
cs
or
inc
adc
mov
push
lds
mov
and
addl
jmp
in
fcmovnu
loop
rdtsc
sbb
sub
dec
pop
js
adc
jbe
adc
addr16
lcall
jno
stc
gs
loop
add
cmpsb
shlb
pop
stc
sti
outsl
insl
mov
mov
cmpsl
and
jbe
test
and
pop
jae
mov
cmp
or
jnp
imul
in
test
mov
ljmp
mov
cltd
push
cmpsl
out
lret
or
into
cli
mov
mov
test
cmp
dec
repz
mov
mov
sub
xchg
mov
call
push
add
jmp
mov
jmp
clc
xchg
cltd
or
mov
pop
adc
or
adc
mov
xor
xor
xlat
out
push
loop
dec
mov
and
std
mov
jg
out
mov
popa
xor
arpl
jmp
mov
roll
xchg
das
adc
les
je
into
or
xchg
xchg
daa
jl
sbb
adc
pop
movntq
ficoml
mov
jb
es
lcall
sti
push
ret
dec
loopne
loop
cmc
mulb
jmp
out
leave
pop
fiaddl
fists
stc
and
lret
cltd
add
pop
popa
outsl
mov
cmc
cmp
pop
enter
mov
sarb
call
or
adcb
mov
jno
pop
add
mov
xchg
sub
loopne
arpl
jg
ljmp
movsl
xchg
cli
cmp
mov
xor
jl
movsb
fidivs
xor
hlt
jne
push
or
mov
sbb
lds
and
xlat
pop
cmp
rcr
cli
daa
push
mov
ljmp
inc
hlt
and
jo
aaa
insb
inc
fsubl
mov
loopne
jp
push
mov
cmp
xor
mov
adc
xchg
loopne
pop
lcall
cmp
flds
out
jbe
push
ljmp
jmp
fnsave
test
adc
popa
repz
outsl
sarl
lods
pop
push
push
inc
cld
push
mov
pop
clc
aad
or
pop
add
ss
stc
mov
push
inc
jg
ret
add
dec
inc
aad
pop
scas
out
inc
xor
insl
inc
pop
xchg
pop
xorl
or
sub
jae
rclb
ret
stos
or
negl
adc
xchg
xchg
les
mov
out
lret
or
cmp
sarl
fnstcw
push
jle
js
push
dec
imul
pop
jno
dec
int
mov
js
outsb
insb
fbstp
inc
in
or
popf
les
cmp
xchg
loop
jecxz
outsb
xor
adc
cs
rorb
test
jae
pop
mov
and
or
enter
pop
insb
add
mov
add
movsb
sbb
movups
pop
mov
dec
sub
jge
loop
mov
cs
scas
sub
mov
rolb
pop
inc
jg
mov
push
pop
mov
lcall
ja
stc
xor
loop
lahf
sbb
rcrb
popf
push
adc
mov
dec
cmp
fstpl
imul
enter
arpl
sub
into
xor
cmp
repnz
jmp
loope
fucomi
pop
inc
lock
loope
repnz
jp
sahf
pushf
aaa
mov
loopne
fs
inc
fidivrs
add
mov
inc
test
adc
cmp
mov
aam
push
movsb
pop
in
inc
push
idiv
sbbb
je
mov
or
shl
lret
push
cmp
shrb
repnz
adcb
sarl
rcrb
aad
lods
pushf
sbb
mov
ror
jno
dec
aaa
xchg
hlt
ja
cwtl
pop
mov
sub
sub
incb
loopne
lret
ret
rcrb
xor
push
ss
fucom
jl
add
inc
and
sbb
in
call
push
mov
and
sarl
cmp
nop
into
std
jmp
mov
cmpsl
pop
cmp
push
mov
mov
mov
cwtl
adc
hlt
or
mov
cmc
adc
fcompl
mov
mov
imul
imul
cld
stos
lret
xor
lahf
out
push
call
repz
sub
loopne
add
sahf
out
xor
and
inc
lret
dec
movsl
dec
into
mov
fwait
out
jle
push
movsb
enter
pop
outsl
mov
testl
cmp
mov
and
add
outsb
pop
lds
dec
push
and
idivl
cld
pushf
fcmovbe
xor
sahf
push
sbb
sbb
lret
mov
add
mov
sub
add
dec
mov
sub
out
lret
sbb
mov
mov
push
push
dec
or
push
stc
ds
or
shlb
cld
inc
stc
push
adc
xchg
pushf
mov
inc
or
push
push
xchg
dec
sbb
test
inc
mov
js
or
ljmp
fbld
sub
xlat
xor
or
imul
cmp
or
pop
ljmp
jl
fs
lods
sub
lods
mov
movsl
sub
and
lds
add
and
mov
enter
fiadds
in
int3
mov
fbstp
mov
xchg
cld
sub
into
pop
lcall
dec
xor
jg
dec
leave
imul
outsb
mov
inc
outsb
jnp
mov
in
push
add
xor
test
pushf
aas
push
inc
call
pop
pop
lret
test
push
out
pop
fldt
dec
sbb
lahf
push
sub
or
insl
shl
mov
mov
lea
inc
negb
and
pop
adc
push
icebp
fbstp
mov
jb
sbb
bound
sti
mov
and
sub
sbb
cmp
pop
add
and
and
pop
and
jnp
pop
cld
lret
aaa
xchg
adc
push
and
adc
mov
or
xchg
movl
sahf
test
push
in
push
mov
fcmovb
shrb
and
sub
lcall
dec
cs
mov
test
cld
stc
outsl
cmp
movsl
jns
scas
xor
and
inc
sub
lock
mov
add
cmp
out
fdivs
out
call
test
mov
pop
xchg
test
mov
outsb
mov
xchg
pop
xchg
repnz
repnz
shll
inc
push
loopne
xchg
lea
rcll
adc
cmpsl
dec
cmpsl
cmp
and
out
daa
adc
jge
xor
sbb
rcrb
int3
loop
and
xlat
leave
sub
js
push
or
arpl
inc
test
popf
mov
xchg
mov
rcll
adcl
sarl
mov
or
test
or
repz
aad
jnp
adc
push
lods
lret
test
call
cwtl
sub
addr16
jno
lock
movsb
mov
lret
mov
xorb
lods
mov
dec
jecxz
out
cmp
mov
setle
add
mov
pop
int
pop
push
or
gs
xchg
cmp
mov
sarl
cmpsl
lcall
sub
inc
stos
push
dec
shrl
pushf
mov
mov
data16
test
xor
and
inc
iret
mov
dec
movsb
pop
pop
push
dec
lcall
cmp
inc
dec
jae
xor
out
arpl
lock
popa
push
cs
hlt
call
add
xor
out
lods
push
in
adc
jmp
or
mov
jae
inc
out
imul
xchg
cmp
in
mov
sbb
test
mov
mov
cmp
xor
xlat
cmp
pop
aam
imul
shl
jae
daa
shrb
rclb
push
xchg
clc
stos
cwtl
movsl
test
jg
add
push
or
fwait
ds
mov
shl
fnsave
xchg
mov
movsl
mov
adc
xchg
int3
cmc
cli
dec
mov
idivl
mov
inc
movsb
lret
insb
dec
mov
fneni(8087
pop
inc
adc
js
pusha
ss
test
leave
cld
test
imul
mov
push
faddp
push
fstpt
xchg
nop
test
jp
imul
out
into
add
xchg
iret
pop
sbb
scas
ret
in
sti
daa
push
add
lcall
shlb
movsb
pop
jle
in
repz
xor
sbb
loope
pop
imul
xorb
add
cmp
xchg
insl
fbstp
cmc
mov
mov
iret
push
sti
cwtl
adc
sbbb
inc
xchg
not
sbb
jbe
xchg
inc
mov
jmp
mov
lea
jnp
cmovnp
add
es
or
mov
lock
rorl
mov
and
inc
fldln2
inc
mov
push
inc
mov
xchg
cmp
outsb
sub
scas
and
push
std
xchg
in
lret
mov
dec
mov
push
jns
pop
jne
add
push
fxch
push
sub
lods
mov
xchg
std
sbb
rorl
mov
adc
mov
mov
inc
mov
popf
xchg
sub
xor
bnd
cmp
in
movsl
fwait
test
push
sbb
ret
test
clc
mov
repnz
imul
imul
mov
pop
imul
sub
stos
mov
pop
aam
ds
fldt
mov
and
das
mov
mov
cltd
pop
nop
icebp
scas
sbbl
ja
and
mov
shll
mov
fwait
jne
lret
mov
push
stc
mov
cltd
add
push
adc
in
adc
and
sbb
in
xor
cmp
or
cmpsl
xlat
js
push
xchg
xchg
inc
aam
leave
test
jno
out
pop
stc
push
insl
xchg
sarb
shl
les
and
push
cmp
inc
jns
arpl
sub
aas
outsl
add
jecxz
out
xor
and
outsb
stos
and
sbb
jbe
out
xchg
mov
loopne
idivl
in
mov
imul
cmpsb
fld
pushf
mov
push
in
cld
enter
xor
or
pop
out
add
or
mov
jge
or
adc
or
repnz
jl
icebp
iret
jb
stos
into
pop
stos
aad
pop
cmc
jl
fcompl
jo,pn
mov
popf
and
popf
daa
stos
fsubrl
mov
sub
pop
ret
pop
sbb
arpl
mov
cmp
mov
lods
dec
or
push
insl
popf
sbb
dec
mov
ret
mov
dec
jo
insb
jp
sbbl
xor
cs
clc
pop
pop
loopne
jbe
mov
jg
fistpl
xlat
mov
mov
lock
imul
addr16
fwait
pop
pop
outsb
jmp
aaa
xchg
add
mov
pinsrw
or
outsb
push
mov
lock
dec
sub
push
or
les
dec
adc
xchg
sbb
sbb
cmp
dec
mov
hlt
loopne
in
mov
ljmp
sub
mov
xchg
push
mov
xchg
enter
lock
repnz
pop
imul
mov
add
cwtl
dec
clc
sub
mov
xchg
cmpsl
xlat
repz
sub
inc
sbb
pop
or
xchg
mov
add
add
ret
push
jg
jmp
scas
lds
fidivl
cwtl
lock
add
add
mov
xchg
jg
outsb
sub
stos
fildl
ss
outsl
fwait
lds
push
loopne
mov
jo
flds
fimuls
shlb
xor
and
xchg
jbe
xor
idivb
push
mov
adc
mov
sub
lahf
adc
std
dec
push
add
mov
ret
mov
or
xchg
scas
lahf
lcall
into
lret
sarb
mov
daa
dec
pusha
dec
test
idiv
and
jecxz
imul
lgs
mov
js
je
int
aam
fwait
pop
inc
jmp
pop
inc
lcall
push
rorl
bnd
pop
mov
xor
jns
cmpsb
push
or
mov
sbb
or
inc
jmp
pop
sbb
mov
test
mov
fldcw
xchg
ss
xchg
loop
cld
jmp
push
and
xchg
jp
in
nop
cltd
in
jmp
shll
data16
stc
aam
sarb
push
xor
testl
mov
aad
out
jp
pop
xor
dec
loope
mov
sbb
hlt
mov
rcrb
daa
pop
mov
mov
xchg
sbb
sbb
jne
mov
imul
dec
mov
mov
add
mov
aas
shrl
leave
inc
sbb
xchg
scas
scas
and
shrl
jp
aaa
hlt
cmpw
push
add
add
dec
push
push
notl
inc
push
jb
adc
sbb
dec
loop
jmp
js
push
mov
push
addr16
push
jo
and
xchg
jge
int
rorl
cltd
mov
mov
ret
std
cmp
push
test
pushf
lret
int
mov
jmp
lods
jle
push
jmp
stc
in
test
cltd
cmp
jg
aaa
sbb
or
or
out
stos
test
jle
outsb
int
adc
pop
lds
je
repnz
ret
clc
jg
jns
inc
xchg
mov
inc
ret
into
dec
mov
gs
mov
out
or
je
pushf
aaa
lods
push
add
popf
ret
fnsave
jo
push
sub
sbb
jecxz
int
movsb
pop
jbe
js
adc
or
fisttpl
lahf
loop
inc
aas
fs
and
cmp
mov
lods
cmc
adc
lahf
out
pop
mov
repz
fimuls
mov
stc
sub
mov
hlt
fildll
sbb
push
sbb
push
lea
mov
mov
jbe
pop
mov
push
cwtl
jae
xor
js
cs
sbb
aad
vmovupd
dec
xchg
lret
lahf
mov
imul
loope
rcrl
or
push
push
lods
mov
or
add
test
pop
pop
jle
iret
dec
subb
daa
sub
push
aaa
mov
pop
xor
les
lahf
fsubrp
or
push
das
and
xchg
repnz
add
mov
mov
push
call
push
mov
dec
push
lea
or
in
or
or
xchg
add
clc
push
push
jno
pop
jmp
loopne
fidivrl
and
pop
lods
add
icebp
adc
jno
mov
sbb
loope
fnsave
add
iret
jnp
xchg
test
xchg
adc
jno
add
sub
dec
jl
push
mov
cltd
mov
stos
out
lea
mov
pop
mov
dec
out
pop
sub
inc
push
mov
mov
inc
xor
mov
add
inc
xchg
xor
shll
jno
movsb
lcall
cli
add
mov
negb
sub
and
mov
mov
pushf
scas
sahf
jmp
rorl
sbb
mov
movsl
xor
in
in
pushf
sbb
inc
lret
and
movl
lahf
mov
jmp
lret
mov
jg
xchg
ds
xor
sbb
insl
insl
xorb
xchg
add
cmp
jnp
lea
ret
inc
xchg
push
out
xchg
jne
jnp
pop
inc
push
mov
push
loope
stos
clc
mov
pop
lcall
out
sti
popf
add
or
xchg
or
ficomps
fs
scas
nop
lret
shll
addb
jns
jecxz
cld
arpl
adc
or
mov
xor
jmp
or
fcmovbe
lods
mov
stos
gs
adc
cmp
cmc
int
and
cmp
cmp
pusha
adc
outsl
pop
push
cltd
add
adc
dec
in
leave
dec
scas
cwtl
jmp
aaa
inc
pop
dec
cmpsb
inc
js
stos
xor
adcb
mov
cld
dec
lock
adc
xchg
cmc
cmp
inc
out
cmp
sbb
push
dec
cmp
mov
cmp
sub
xchg
fwait
jmp
push
out
sbb
cmpsl
sub
cmp
jg
mov
jmp
mov
mov
sub
push
adc
push
add
lret
sti
fmuls
jnp
fsubr
pop
lds
arpl
push
push
sub
mull
push
jo
mov
jge
ds
jae
in
into
and
adcb
and
adc
out
add
pop
sub
rorb
in
adc
cmp
push
dec
fwait
sahf
mov
mov
out
jg
in
push
adc
xchg
xlat
push
cmpsl
and
cli
push
xchg
mov
pop
xorl
popf
xchg
ret
pop
cltd
pusha
mov
adc
pop
fwait
icebp
adc
xor
mov
ret
jg
mov
pop
dec
or
mov
push
pop
mov
inc
or
xchg
fwait
jae
cmc
or
adc
out
push
in
mov
mov
xor
test
mov
jnp
or
ret
and
test
jno
lock
cmp
dec
orb
adc
mov
sbb
jl
push
pop
sbb
into
imul
jecxz
adc
cwtl
mov
loopne
mov
sub
les
cmp
in
fistps
inc
push
dec
jp
mov
xor
mov
movsl
lock
xor
mov
test
mov
dec
push
enter
sbb
xchg
push
add
mov
mov
call
lock
add
push
loope
or
mov
or
push
push
or
enter
fwait
sbb
pop
mov
inc
movsl
ficompl
or
jnp
or
adc
pop
push
xchg
in
cmpsl
cmp
cmp
pop
aas
inc
inc
movsl
inc
out
sub
sbb
movlps
jae
inc
xorb
subl
insl
repz
gs
mov
cmp
mov
push
aaa
imul
inc
stos
push
imul
movsb
push
xor
mov
push
or
or
pop
jle
sti
frstor
mov
fidivrl
stc
add
ret
inc
into
xor
dec
addr16
dec
or
in
and
cs
inc
xchg
enter
jl
push
nop
movsb
jo
fs
iret
gs
out
shrb
rorl
andb
mov
andl
jge
xor
sti
push
inc
sahf
add
jno
jge
mov
adcb
push
dec
dec
mov
lret
les
daa
ror
adcb
inc
sub
sbb
jg
lret
sbb
ja
jmp
stos
push
xor
push
inc
inc
xor
mov
dec
cmc
loop
insb
es
call
out
push
out
or
inc
xchg
aad
les
pop
movsb
mov
mov
adc
or
bound
je
imul
push
lahf
mov
faddl
sub
or
test
mov
fsubrl
xchg
fdivs
mov
cltd
jb
ljmp
in
out
and
imul
cmp
ja
xchg
xlat
loope
mov
inc
sbb
pop
stos
call
mov
jge
xorl
xor
pop
jp
mov
enter
mov
out
inc
pop
mov
cmpsb
pop
push
dec
push
adc
push
pop
jno
shll
std
add
jbe
and
int3
rcll
mov
xchg
pop
lock
fstpt
xchg
sub
mov
out
sbb
xchg
and
dec
icebp
and
push
pop
sub
and
fs
and
inc
in
mov
mov
mov
sahf
cmpsl
cmp
pop
movsl
data16
in
hlt
mov
test
push
or
dec
fisubrl
xchg
push
sbb
adc
mov
cwtl
add
sbb
push
test
mov
sti
dec
in
arpl
mov
cmc
pop
sub
adc
sbb
gs
call
sti
mov
mulb
lret
imulb
outsl
dec
mov
push
sbb
nop
shr
or
sbb
jns
in
outsb
push
mov
or
test
xlat
loopne
out
cmp
repnz
das
pop
jo
call
nop
or
pushf
jae
mov
lcall
xor
cwtl
mov
jbe
inc
rcrl
cwtl
xor
push
sbb
xor
sub
push
fisttpll
cmp
sub
gs
popf
jg
push
fadds
sub
nop
adc
inc
adc
pop
push
add
je
fadds
pop
inc
mov
jecxz
push
repnz
fsubrl
xorb
daa
sbb
jmp
int3
push
dec
sbb
push
cld
ds
arpl
or
cmp
jle
lret
js
inc
push
dec
int
push
rcll
notb
xchg
mov
push
movsb
pusha
mov
popa
movsl
add
mov
xor
mov
xor
fidivl
or
imul
lret
mov
jb
stos
fimull
out
push
inc
inc
lcall
xchg
or
cltd
xor
fsubrp
bound
mov
ja
xchg
aad
mov
das
arpl
jbe
mov
xor
lret
cmp
xchg
xor
cmpsb
std
inc
xchg
dec
cmp
repz
push
sub
dec
mov
bound
pop
xchg
inc
decl
inc
cmp
cmp
in
out
pop
mov
mov
push
push
jp
push
mov
xor
cmp
add
adc
xor
pop
jl
rolb
push
xchg
mov
xor
or
stc
cmp
fs
sbb
call
mov
pop
dec
inc
inc
addr16
lahf
jae
out
inc
in
mov
insl
lds
mov
jmp
shlb
enter
sarb
loopne
mov
pop
jns
cmpl
scas
and
adcb
xor
dec
or
and
mov
or
jns
mov
adc
mov
std
es
add
mov
movsl
ret
aam
out
add
or
jb
pop
mov
mov
sbb
fisubrl
sbb
movsb
sub
fadd
sbb
cltd
lds
cmp
push
cmp
cmp
mov
jbe
rcll
cmp
lds
outsb
jae
mov
xor
and
or
mov
mov
lods
push
cmpsl
in
jle
dec
loope
xchg
addr16
pushf
mov
cmp
shll
jo
mov
fstpt
jnp
movsb
hlt
hlt
xchg
jb
push
pop
dec
jle
cld
int
lods
xorb
mov
ljmp
lret
pusha
js
push
mov
aas
sbb
jmp
aaa
iret
rcl
mov
enter
sub
add
xchg
pop
add
subl
push
imul
and
sub
dec
mov
icebp
add
hlt
xchg
pop
push
inc
outsl
adc
jno
add
pop
xchg
clc
add
roll
pop
stos
or
push
jl
cwtl
not
idivl
mov
orb
xor
mov
inc
in
shll
adc
add
insb
push
jb
push
and
movsb
pop
jp
add
fsin
imul
xchg
pop
sub
jb
icebp
cmp
or
or
dec
dec
call
xor
inc
nopl
xor
int3
inc
mov
pop
js
jg
xor
mov
les
ja
push
push
pusha
out
das
mov
inc
dec
jo
push
aad
mov
jb
lcall
lea
es
ret
test
leave
out
jle
pop
mov
adc
pop
loopne
fucomp
mov
push
mov
mov
ds
inc
adc
mov
js
sub
mov
stos
mov
test
pop
out
sarl
pop
loopne
mov
addr16
std
mov
xor
or
fistpll
jo
mov
pop
or
imul
push
lea
imul
cmpsb
cmp
adcl
gs
repnz
jns
repz
or
cmp
mov
and
loopne
je
and
jo
fsubs
adc
call
fs
das
xchg
mov
push
jle
inc
adc
and
and
adc
or
add
dec
push
pop
adc
mov
fsubr
jp
dec
or
pop
jo
mov
jne
sub
add
push
cmp
clc
bound
push
in
test
jne
xor
inc
mov
in
xchg
mov
jae
movb
sub
lahf
adc
push
rcrb
test
sub
and
ja
cwtl
in
pop
mov
dec
jle
loope
rolb
lock
das
fwait
out
lahf
push
dec
shlb
jae
rclb
add
jo
sbb
dec
or
loop
sbb
jne
int
push
jno
xor
pop
or
aas
jno
scas
adc
call
ljmp
addb
enter
mov
popf
dec
daa
push
imul
sbb
push
movsb
adcl
test
scas
lea
or
and
xor
add
inc
xor
jp
push
fists
sahf
inc
dec
cmp
sahf
push
jbe
add
or
in
jns
push
cld
pop
mov
adc
jp
jg
mov
iret
pop
insl
inc
imul
xor
lods
mov
notb
jle
loopne
inc
std
test
shlb
xor
mov
adc
loope
shll
adc
mov
mov
jb
mov
push
cmp
in
je
cli
jle
gs
push
int3
dec
jmp
leave
pop
sub
or
test
jne
push
or
mov
xlat
and
push
sti
adc
loopne
xchg
push
xor
mov
xorb
lahf
shll
or
dec
jge
dec
and
shr
mov
mov
arpl
mov
and
mov
pop
idivb
test
sub
lds
and
lods
sub
cmc
mov
push
sti
mov
in
mov
push
test
sti
cmpb
inc
mov
sbb
push
imul
inc
lock
jle
jae
das
cmp
push
inc
adc
test
mov
add
stc
xor
cld
push
dec
adc
je
pushf
xchg
int3
in
and
cmc
popa
mov
pushf
js
mov
std
mov
dec
mov
mov
repz
and
sbb
mov
xor
jmp
ja
push
fadds
cmp
incb
sbb
add
mov
and
jno
push
shr
jmp
cld
mov
jp
add
add
push
fcmovne
xchg
and
jg
pop
inc
inc
dec
pop
pop
add
sub
sub
test
push
insl
ss
insb
cmp
ja
dec
stos
mov
mov
es
or
cmpl
mov
xor
leave
mov
sub
bound
sub
iret
push
mov
sub
aad
movsb
dec
jne
mov
cwtl
dec
leave
push
xchg
sti
xlat
cmp
mov
inc
mull
xchg
mov
mov
popl
pop
pushf
inc
xor
adc
dec
dec
jb
push
dec
inc
or
movb
jge
sarb
nop
xor
mov
mov
cmp
insb
ja
fcomps
loope
and
out
mov
repz
sahf
mov
sahf
sbb
out
adc
or
mov
popf
or
in
test
rol
addr16
movsl
out
push
push
or
insl
and
mov
repz
jns
iret
cmpsb
insl
or
or
add
lock
jns
icebp
das
mov
les
lcall
arpl
fs
mov
sbb
getsec
stos
subb
adc
and
mov
xchg
out
scas
inc
jae
pushf
and
iret
and
inc
out
push
mov
xchg
push
cmp
mov
cmp
dec
sub
or
and
cltd
sub
cmp
lret
cmp
out
pop
ljmp
call
scas
insl
push
jmp
out
repz
in
add
pusha
in
rorl
pop
fptan
or
mov
pop
ljmp
and
add
or
xchg
out
mov
cmp
xchg
das
adc
push
xchg
out
pop
lods
fs
sbbb
mov
push
fcoms
out
movsb
adc
test
dec
aam
lret
in
mov
mov
cli
aad
movsb
push
and
mov
aam
mov
fadd
cli
jl
xchg
pushf
cs
loope
adc
inc
sbb
ja
ret
xchg
or
mov
adc
push
inc
cmp
data16
and
pop
addl
push
or
cmp
sub
inc
jno
cmp
jge
pop
mov
incl
in
ret
stc
std
mov
dec
lods
hlt
mov
in
add
addr16
xchg
pop
pushf
inc
fsubrp
xor
ret
out
loop
adc
test
pop
dec
int3
ds
leave
add
in
mov
lret
sub
mov
dec
push
sub
inc
xchg
push
ljmp
jl
es
or
adc
sbb
inc
sbb
cld
out
inc
inc
lock
add
sub
loop
leave
jbe
push
gs
inc
mov
aaa
sub
mov
mov
mov
out
into
imul
xchg
push
sbb
cmpsl
mov
cwtl
mov
addr16
pop
aad
pop
cltd
sbb
aas
call
clc
leave
lods
pop
stos
cwtl
popa
paddsw
mov
xor
pop
iret
and
insb
pop
fidivl
sbb
jno
dec
les
add
adc
and
sbb
int
dec
outsl
dec
lds
int3
sarb
hlt
sub
or
push
in
testb
sub
out
dec
pushf
jne
test
into
scas
pushf
lds
jle
in
sbb
cli
pushf
or
dec
sbb
inc
dec
dec
jecxz
imul
or
push
add
cwtl
push
cmp
cmp
dec
mov
cmp
out
inc
sbb
andl
les
adc
add
or
mov
xor
stc
inc
xor
int
sarl
push
or
cmpsb
mov
pop
les
ret
out
cld
sub
push
nop
ret
xchg
dec
and
push
aas
adc
rolb
popf
mov
mov
loopne
push
loop
or
add
xor
std
bound
add
fld
ret
xchg
xor
mov
jne
pop
push
mov
dec
pusha
add
jl
fs
cmp
adc
cwtl
and
cs
shl
repnz
cmpsb
ds
mov
xchg
loope
inc
popf
lea
sub
addb
mov
add
pusha
inc
mov
sahf
add
mov
jg
adc
ds
test
cmp
dec
int
sbb
xchg
into
adc
mov
xchg
test
sbb
dec
out
into
in
pop
pop
jecxz
lcall
jnp
xchg
adc
in
adc
pop
pop
push
inc
or
movsb
add
iret
aad
push
jno
loopne
mov
push
insl
or
adc
xor
lods
pop
push
shl
xchg
cmp
aam
cs
lods
outsl
pusha
lcall
dec
push
fnsave
jno
and
stc
repnz
push
lds
les
adc
dec
test
xchg
mov
test
or
xor
iret
push
pop
cmpsl
lds
shrb
and
out
insl
ret
cmp
ljmp
sahf
cwtl
call
and
push
push
mov
mov
push
fcmovnbe
out
aam
add
or
sub
and
lods
imul
mov
xchg
cwtl
jle
aam
cltd
or
lods
xor
and
pop
inc
inc
and
in
cltd
enter
sbb
mov
sbb
mov
popa
shlb
mov
dec
mov
je
arpl
lods
jns
cmpsb
or
or
shrb
movsb
xchg
fiaddl
mov
inc
jmp
mov
sbb
push
mov
jg
fs
xor
shlb
mov
jnp
outsl
add
ror
inc
mov
pop
xor
mov
sahf
mull
or
xchg
and
shlb
pop
cmpl
fcmovnb
mov
rcll
stos
and
mov
lods
std
jmp
jmp
inc
xchg
dec
mov
jge
cltd
lret
and
nop
or
ret
stos
jmp
push
fcompp
jo
cmp
inc
push
mov
sub
pop
andb
or
xlat
fdivp
bnd
mov
lods
and
pop
inc
repnz
icebp
mov
or
cltd
loopne
mov
mov
pop
add
kmovw
roll
push
xchg
stos
jge
ficomps
fcomps
ljmp
mov
mov
in
data16
mov
adc
into
je
mov
xchg
inc
ss
add
jp
sbb
das
mov
ss
loop
dec
loop
imul
sbb
push
jmp
mov
jmp
movsl
scas
loopne
cltd
fwait
mov
inc
pop
lcall
sbb
sbb
jl
mov
pop
movsl
xchg
testb
arpl
push
jle
out
mov
mov
mov
mov
and
mov
push
mov
movsl
jo
into
push
xor
aad
pop
sub
pop
and
mov
scas
push
dec
fnsave
shrb
pop
leave
add
dec
cmpsb
and
movsl
jbe
cmp
mov
adcb
mov
cmpsl
sbbl
mov
ja
xchg
pop
std
and
in
mov
inc
scas
xchg
mov
mov
pusha
jae
dec
lods
dec
pop
pop
xchg
out
mov
inc
int3
push
sbb
pop
add
pop
imull
test
mov
pop
xchg
aas
cmp
cmc
add
adc
and
fs
push
loop
out
sbb
sbb
insb
stos
or
dec
je
adc
inc
pop
cmp
or
pop
loopne
xchg
dec
in
cmp
push
popa
std
call
cwtl
imul
in
shrb
mov
cmp
cmpsb
icebp
js
shll
dec
cmc
das
ljmp
pop
into
and
movd
pop
mov
insl
jbe
pop
add
inc
icebp
fistps
clc
and
dec
inc
rorl
push
jno
sbb
mov
imul
scas
push
fwait
push
xor
jmp
and
aam
jmp
xor
pop
push
neg
cltd
xchg
or
mov
inc
sub
loopne
jae
pop
out
push
cli
pop
out
inc
mov
pop
dec
mov
push
ja
jo
jge
ds
popa
fs
bound
mov
sub
sahf
mov
mov
std
repz
ss
imul
sub
pushf
sub
enter
adc
sarb
and
inc
pop
call
mov
fsub
mov
xchg
stc
mov
cmp
jno
pop
and
mov
in
mov
das
testb
mov
sbb
add
inc
xlat
mov
sbb
xchg
add
cmpsl
jb
fadd
pop
jae
and
xor
lret
push
adc
add
dec
cmc
in
ret
jge
sahf
jnp
js
add
push
inc
push
negb
cmpsl
push
cmp
leave
lea
mov
fimull
lahf
insb
jo
push
bound
fsubrs
and
sbb
shlb
adc
add
jecxz
sub
lods
sbb
movl
les
sbb
lret
pop
or
repnz
mov
sahf
fdivs
orl
repz
sub
xor
jle
test
repnz
imul
pop
or
or
enter
loope
scas
sbb
imul
js
movsb
out
je
xor
sub
les
stc
fs
xchg
ja
cwtl
cmp
ss
data16
jmp
scas
lea
push
pop
icebp
push
jb
xchg
in
mov
rclb
add
les
mov
dec
adc
fsubr
push
decl
rcrb
ror
xchg
adc
test
pop
pusha
js
jbe
lcall
dec
movsl
rorb
xor
push
or
insb
pop
int
jnp
and
inc
outsl
fldl
pop
cmp
ja
xlat
and
jne
and
mov
cmp
je
inc
mov
jns
nop
sub
nop
in
jns
pop
cld
cwtl
inc
les
roll
pop
mov
fdivs
data16
outsl
lds
outsb
inc
push
adc
mov
jae
fildl
push
mov
jns
int3
xor
inc
lods
xor
sbb
fwait
jecxz
pop
lcall
sub
loopne
out
gs
cmc
cmpsl
mov
xor
pop
arpl
sbb
es
sbb
and
dec
gs
loopne
inc
cwtl
add
hlt
sub
dec
jb
scas
cmpsb
add
sbbl
and
push
cmpsb
pushf
cmp
fs
dec
mov
jp
loopne
xchg
adc
and
adc
pop
clc
mov
stos
iret
arpl
adc
sbb
inc
insl
sbb
int3
shl
dec
int3
test
orl
enter
lcall
shlb
mov
sub
sub
mov
and
sub
stc
adc
dec
rdtsc
int3
xlat
sahf
repnz
insl
loop
loopne
ds
mov
into
loop
sbb
jns
push
cs
mov
out
sub
and
sahf
adc
xchg
dec
pop
inc
jns
cmc
adc
xor
loope
mov
xlat
stos
repz
dec
cmp
add
call
hlt
daa
sub
lock
mov
nop
fiaddl
push
repnz
pop
add
fs
jno
add
dec
es
xor
add
icebp
sti
push
mov
popf
jecxz
ret
lahf
jle
in
pop
adc
cld
mov
xchg
iret
dec
sub
into
and
cmp
add
xor
pusha
add
sub
ret
mov
inc
andl
xor
mov
jo
cmp
aas
or
push
mov
mov
sbb
lcall
or
or
pushf
mov
into
scas
mov
stos
push
pop
adc
inc
pop
or
adc
lcall
outsb
mov
jp
sub
xorb
loope
cltd
sbb
cmp
outsl
push
mov
or
mov
xor
pop
mov
aas
mov
and
jbe
sub
and
jmp
sub
std
loop
nop
cwtl
sbb
sar
push
fwait
xor
inc
mov
mov
out
cs
xchg
incl
iret
orb
push
mov
add
fidivs
movsb
sbb
and
lea
or
mov
enter
pop
jns
js
repz
inc
dec
inc
pop
xlat
scas
ja
rclb
cmc
gs
testb
cs
iret
nop
add
inc
push
bswap
jge
scas
stos
ss
dec
test
leave
out
mov
jecxz
sar
std
aad
push
int3
and
pop
push
test
aas
cmp
sub
nop
jnp
push
inc
mov
and
cmpsb
sbb
iret
imul
fnop
test
lock
xor
lahf
and
sbb
out
int3
je
jmp
testl
mov
dec
lahf
dec
mov
xor
stos
or
rolb
out
dec
adc
lea
mov
aam
adc
and
adc
mov
mov
adc
sbb
out
xchg
xor
mov
ja
int3
decb
xchg
pop
mov
sub
xlat
xchg
pop
lret
xor
inc
cwtl
fnsave
inc
loop
in
shll
icebp
and
out
sub
push
mov
sub
ja
dec
in
xor
mov
pop
sub
aaa
jbe
cmp
je
xor
push
push
daa
or
fisubs
xor
and
inc
psrld
inc
adc
add
test
xchg
fldenv
mov
mov
cmp
js
dec
shll
inc
outsl
push
pop
push
cmp
mov
and
add
or
es
popa
insb
lock
rcrl
jge
jge
mov
cwtl
pop
cltd
int
sub
dec
add
jmp
dec
andl
ds
jmp
xor
ficomps
mov
mov
ds
xlat
xchg
mov
cltd
negl
jnp
mov
push
je
push
xchg
sub
iret
or
mov
popa
mov
sbb
xchg
and
push
mov
push
sbb
jb
jne
pop
inc
adc
inc
sbb
inc
out
or
pushf
icebp
mov
pop
jae
loope
in
push
fdivrs
inc
mov
mov
push
lock
hlt
xlat
inc
xchg
or
push
imul
fists
int3
dec
jno
add
ret
movsl
aam
mov
cmp
clc
sbb
jecxz
pop
ds
idivl
fwait
jo
ficompl
ret
xchg
sbb
jg
jno
push
push
xchg
or
sub
lods
pop
jb
in
sub
push
pusha
sub
mov
fnstcw
in
ja
xchg
data16
jnp
outsb
daa
inc
enter
sbb
or
cmp
lahf
mov
cmp
loope
mov
hlt
cmp
mov
cmpl
repnz
dec
jae
js
mov
and
jo
or
or
ret
sbb
pop
xchg
pop
jmp
push
inc
add
cmp
inc
mov
bts
stos
cmp
fidivl
jmp
rorb
dec
icebp
call
rorb
mov
mov
aaa
ficomps
dec
movsl
cmp
les
mov
sahf
mov
movsb
or
test
test
arpl
stos
inc
jmp
daa
movsl
xchg
xchg
or
test
inc
int
in
cld
cltd
sarb
fldcw
je
popl
movsl
and
fmull
xchg
test
filds
dec
and
mov
push
push
sub
mov
mov
test
testb
pop
cltd
and
mov
xchg
pusha
in
inc
lds
in
push
in
mov
iret
call
pop
lcall
xor
push
jo
mov
aaa
ja
repz
ds
test
adc
sbb
addl
xchg
cmp
xor
sub
mov
pop
add
sbb
pop
mov
sbb
xor
imul
mov
mov
lods
pop
js
pusha
add
mov
dec
aam
fcmovbe
sub
xor
bnd
loop
push
bound
stos
xorl
sbb
pop
cld
adc
stos
inc
ret
rcr
inc
xor
adc
mov
int
cmp
or
gs
pop
jbe
mov
fwait
pop
inc
lods
adc
cmp
stc
jmp
mov
adcl
sbb
inc
sti
cs
insb
rcll
dec
sub
ds
cmp
sub
push
sub
xor
pop
push
outsb
jecxz
push
into
rcll
es
popa
inc
rcrb
icebp
mov
sub
push
fists
clc
dec
cs
mov
loopne
pop
cld
pusha
out
or
cmp
hlt
sbb
stos
jae
pop
jle
stos
shl
in
mov
xchg
xchg
cmp
pop
dec
dec
movsl
in
dec
xor
loopne
sarl
dec
sub
jnp
sar
push
and
loop
rorl
add
sarb
mov
fsubrp
jns
mov
push
xchg
mov
or
add
lds
lahf
dec
fsubrs
sarb
cmp
dec
jp
xchg
gs
shrl
inc
int3
pusha
sbb
stc
in
pop
mov
mov
repnz
ja
inc
and
cmp
add
push
dec
loope
insl
call
sub
add
lcall
pushf
pop
push
fnstenv
icebp
sub
jne
ds
lds
mov
fldcw
push
adc
mov
outsb
mov
fwait
lods
jb
mov
fnstcw
xor
cltd
jnp
cmp
pop
mov
jns
xchg
xor
int3
je
fisubrs
pusha
jbe
jae
sub
add
push
or
outsl
sbb
test
shlb
lock
cmc
push
mov
pop
and
adc
pushf
enter
sbb
and
int3
ljmp
xchg
mov
popf
jle
mov
dec
mov
lods
repz
jg
dec
mov
inc
lcall
loope
mov
shl
mov
add
divl
pop
loopne
int3
fldcw
sub
add
cmp
outsl
and
jge
lock
das
pop
out
mov
jg
pop
stc
xor
pushf
inc
push
mov
test
sbb
pop
inc
sub
push
mov
les
shl
sub
push
jb
sub
lret
lds
xchg
push
stc
jne
testl
sbb
leave
xchg
mov
loop
ror
mov
nop
xchg
es
add
jg
cmp
mov
xor
xchg
mov
clc
scas
rclb
repnz
testb
sbb
in
inc
scas
sbb
clc
add
pop
jg
adc
xchg
sbb
cmp
mov
insl
ja
movsl
sbb
add
in
fildll
iret
push
xor
sub
sbb
int
out
jmp
out
jbe
subl
mov
cmp
inc
stos
push
dec
push
gs
sbb
imull
xchg
inc
aam
fldl
ret
xchg
sbb
call
ficompl
jecxz
fcomps
sbb
cmp
fs
cmp
and
xor
test
nop
mov
and
and
jno
xchg
xchg
dec
pop
movsb
xchg
loop
jp
andl
aas
and
dec
push
test
in
cmp
pop
sahf
inc
adc
iret
adc
movl
fs
sbb
inc
dec
jmp
adc
lret
ljmp
or
push
xchg
roll
testl
nop
loopne
or
popa
std
sub
mov
pop
test
int
cmp
jecxz
cli
push
fwait
hlt
sbbb
sbb
aam
sub
push
dec
dec
out
or
sahf
in
sbb
cmp
jmp
xchg
outsb
dec
lock
pushf
or
lods
jb
cmpsl
or
sbb
push
nop
mov
and
ljmp
cli
or
sub
mov
sbb
and
cmp
inc
push
jae
call
das
movsl
add
inc
xchg
mov
add
push
popa
sub
mov
mov
dec
sub
int3
mov
fs
in
out
cmp
or
iret
jg
cld
pusha
push
cs
arpl
sar
std
sbb
aaa
push
loope
xchg
nop
jnp
loope
loopne
lcall
jl
push
mov
hlt
sahf
inc
leave
clc
add
out
mov
jo
lret
std
fisubrs
jecxz
and
push
scas
sub
ss
iret
cmp
ss
stos
cs
lret
xchg
cmpsl
ljmp
rol
shll
test
xlat
jge
dec
loop
jle
xchg
adc
inc
push
stos
shll
popf
adc
shrb
in
jno
out
mov
pop
mov
ret
mov
adc
push
jp
roll
push
lret
loop
jb
dec
push
adc
test
push
mov
ljmp
jns
jecxz
mov
adc
lahf
cmpb
add
sti
in
xchg
push
add
test
in
adc
in
stc
sahf
sbb
xchg
or
icebp
adc
and
in
fbstp
push
aam
mov
cmpsb
sub
ljmp
popf
cmp
fsubr
push
and
jnp
pop
ljmp
out
or
subl
pusha
add
xchg
out
adc
xor
jmp
out
test
xchg
xchg
jg
pop
subb
dec
cwtl
jl
cli
sbb
inc
sbb
add
adc
sarb
mov
jp
clc
inc
xchg
jmp
pop
dec
ficoml
xchg
aad
xor
mov
adc
mov
call
lret
or
xchg
in
cmpb
fucomip
mov
jl
mov
ror
inc
xchg
push
xchg
mov
xchg
inc
or
ja
into
pop
leave
xchg
fisttps
aad
cmp
dec
xor
or
mov
in
push
or
lds
jns
pop
into
in
lods
cmp
push
call
dec
jb
and
out
mov
test
sbb
mov
mov
and
rclb
cmp
pop
in
adc
adc
popf
jmp
aas
imul
cmc
cltd
loopne
sub
and
fdivl
lcall
sub
ljmp
jbe
mov
adc
adc
inc
and
add
aaa
fmul
xchg
sbb
pop
es
ja
cmp
push
jae
daa
shlb
cli
outsl
jmp
or
scas
std
sbb
mov
scas
mov
mov
sbbb
adc
stos
lahf
fidivs
mov
cmp
xchg
push
pop
cmp
dec
jmp
xchg
sub
fidivs
pop
mov
inc
mov
mov
into
xor
sbb
jge
aas
pop
movsl
popa
movsl
mov
stos
jns
movsl
fldt
popa
es
lods
jge
pop
add
shll
out
leave
jge
inc
inc
call
ds
cmp
pop
mov
push
iret
mov
push
das
xchg
adcb
xchg
sbb
jne
dec
xorl
mov
cld
aam
jmp
mov
mov
shl
pop
push
mov
sub
and
pop
push
test
loope
int3
ficomps
push
jecxz
out
sbb
ljmp
sti
jnp
loope
xchg
mov
push
jne
cmp
fisubl
xor
loopne
jne
fcmovnu
jecxz
xor
outsl
pop
jecxz
outsb
or
sbb
pop
rcl
mov
inc
fisubrs
scas
add
xchg
mov
adc
jb
push
call
cmp
negb
std
mov
nop
push
aad
incl
cmp
push
sub
scas
xchg
jl
cld
dec
xchg
sbb
xlat
arpl
aad
ret
mov
lock
jno
jle
repnz
lret
sti
cmpsl
data16
mov
pop
rcrl
cmpb
shrl
lea
xor
fstps
xor
shlb
lahf
vhsubpd
dec
mov
mov
out
mov
cwtl
clc
ljmp
movntq
fstl
adc
sarl
push
sbb
stos
sub
ret
out
mov
cmp
inc
jns
mov
jl
in
faddp
and
lret
pushf
mov
ja
ljmp
out
enter
iret
or
push
loop
jle
js
or
std
gs
clc
mov
test
dec
sahf
movsl
xor
in
push
pop
pop
in
xchg
cmpsl
aad
and
xorb
dec
call
add
aas
dec
jg
xchg
or
lcall
loope
mov
sar
push
insl
push
sbb
xor
ds
push
js
imul
pop
mov
imul
cmpl
fcoms
push
inc
shrb
pop
or
fs
cld
xor
pop
inc
faddl
sbb
stc
xchg
insb
add
sahf
push
add
ja
iret
push
mov
inc
sbb
shrl
stos
in
mov
mov
sbb
aad
dec
push
xlat
imul
pop
mov
nop
test
icebp
mov
dec
dec
dec
pop
cmp
aad
lods
fstl
ljmp
mov
push
jmp
fisubrl
mov
int
push
xor
dec
pop
fwait
push
addr16
js
ss
test
jle
ds
pop
sbb
xor
je
xchg
shrb
lret
or
rcl
adc
arpl
fdivr
imul
jo
in
rclb
mov
mov
and
jge
lock
fistps
jnp
in
bound
xchg
sub
fdivrp
cli
ficoms
pop
jno
je
or
push
pop
adc
nop
mov
sbb
gs
in
ja
hlt
xchg
fdivrl
je
sbb
and
xchg
pop
mov
hlt
push
lds
outsb
sahf
jbe
inc
push
iret
mov
cmpsb
add
sub
incb
jnp
fnstenv
ljmp
mov
and
popl
push
aad
daa
and
xor
jp
adc
mov
repz
shrl
pusha
jp
jmp
xchg
jl
lahf
mov
lods
or
add
and
xchg
inc
cli
or
test
dec
out
subb
mov
arpl
je
jbe
jmp
jbe
out
pop
sarb
cmpsl
jo
add
add
mov
dec
sti
mov
push
add
mov
aas
je
xchg
inc
sub
lods
pop
in
push
or
pusha
pop
jg
shlb
loop
adc
ss
jnp
insb
sahf
push
or
mov
inc
stos
mov
cli
mov
cld
addb
or
push
and
push
testb
cmp
jle
lods
cwtl
lock
cwtl
jp
sbb
popf
mov
dec
nop
data16
clc
pop
pushf
and
pushf
scas
jmp
push
or
test
outsl
mov
in
pop
xlat
fsubs
shr
scas
push
jnp
js
mov
mov
test
xor
sbb
sbb
xchg
fistpll
test
enter
cmpb
iret
add
mov
mov
ret
fs
adc
mov
and
mov
xchg
loope
ljmp
das
pop
stos
cli
gs
insb
sub
in
xor
push
or
test
inc
sbb
imul
xchg
push
into
push
sub
dec
insb
mov
mov
mov
adc
sbb
setnp
out
xor
pop
cmc
dec
mov
xor
popa
lret
pop
out
dec
adc
rol
xchg
mov
adc
jle
and
mov
inc
pop
aas
push
cmp
jecxz
lret
mov
sbb
or
movsb
dec
jnp
imul
shlb
cmpsb
mov
sub
jecxz
cld
in
mov
mov
cli
mov
pop
movsb
arpl
stc
ret
cmp
mov
pop
sbb
mov
aam
fildll
sub
push
pop
push
nop
add
dec
mov
mov
mov
inc
popa
js
adc
push
mov
test
mov
push
in
lcall
adc
lea
lret
adc
xchg
lods
push
pop
cmp
mov
mov
and
sbb
jmp
roll
div
cmp
arpl
add
inc
subl
das
jne
sub
inc
loopne
mov
dec
xor
jbe
std
jbe
inc
movsb
data16
fwait
daa
sahf
push
ja
dec
or
das
mov
mov
mov
dec
mov
jne
mov
aaa
and
cmp
sbb
inc
add
sub
shll
xor
out
push
add
pop
mov
xchg
add
lahf
mov
dec
xchg
lock
sub
data16
and
inc
cltd
jae
inc
lahf
repz
and
ficompl
xchg
test
in
push
mov
cld
shr
inc
dec
cmp
fiaddl
dec
fidivrl
push
mov
sub
ficoml
fnstenv
sbb
xchg
orb
mov
push
sbb
jmp
xor
fwait
mov
jns
mov
pop
adc
popf
mov
mov
movsb
xlat
stos
pop
dec
mov
bound
jbe
jno
loop
adc
pop
dec
popf
lret
add
lods
and
push
jmp
rcrl
jmp
cli
cs
nop
push
loop
fisubl
sub
sub
mov
aad
mov
outsl
jbe
arpl
inc
push
ret
insb
adc
mov
cmpsl
mov
out
xchg
pop
inc
push
push
fcompl
add
ss
adc
push
stc
dec
ret
ljmp
add
adc
cwtl
imul
cmp
lret
cmpsb
or
loopne
mov
xor
cmpsb
inc
cmpsb
loop
lret
movsl
addr16
je
push
call
sti
movsl
outsl
jmp
data16
mov
pop
inc
xchg
jg
das
fisubrl
sub
icebp
nop
pop
fwait
cmp
push
cmpl
mov
xlat
jge
stos
ljmp
shll
pop
jns
mov
fistpl
and
pop
adc
and
sti
aad
clc
cmp
lea
repnz
mov
pop
fcmovne
scas
and
mov
outsl
in
mov
seto
mov
cmpsl
loopne
adc
xchg
pop
mov
bnd
cmp
divl
mov
jae
shl
hlt
dec
iret
out
pop
das
gs
enter
and
mov
pop
inc
in
movsl
and
jmp
push
or
pop
in
fs
and
mov
int3
mov
jp
or
fiadds
rcll
dec
sbb
insb
pop
adc
hlt
mov
imul
mov
rolb
sbb
push
dec
pop
lahf
sbb
lock
stos
out
jle
insb
or
shlb
aad
and
movsl
sub
push
and
adc
adc
sahf
aad
or
sub
add
mov
jg
pop
orb
jmp
in
sbb
inc
pop
imul
sbbl
pop
add
pushf
int
adc
cmp
pop
xchg
out
inc
in
dec
adc
sbb
inc
daa
loope
dec
and
and
push
xor
popa
lds
push
jns
xchg
ja,pn
sub
iret
rorl
out
cmpsb
icebp
push
in
jae
call
mov
aas
int3
dec
pop
andb
dec
lahf
cltd
mov
adc
vbroadcastf32x4
fcomps
cmc
cmpsl
xchg
cmp
mov
loop
sub
pop
mov
sti
pop
mov
sub
popf
arpl
add
xchg
inc
mov
jp
inc
imul
xor
or
lret
mov
test
sbb
rcrb
popa
push
int
jbe
mov
or
inc
ds
cmpsl
jae
xor
or
push
shrb
and
fisubrs
mov
mov
inc
in
bound
push
dec
adc
repz
int3
fimuls
dec
sub
jle
dec
cmp
push
orb
flds
scas
pop
cmp
aas
jo
test
mov
shl
fs
push
jo
jae
xchg
sub
and
xchg
roll
and
and
jp
aas
lods
outsb
dec
or
loop
dec
out
imul
filds
decl
mov
jmp
mov
mov
loopne
loopne
add
cmp
or
call
scas
cmc
sti
mov
pop
and
ss
daa
test
xchg
test
push
adc
dec
cmc
push
ss
std
xor
out
xor
xchg
lretw
mov
mov
inc
dec
push
adc
pop
mov
inc
add
test
scas
or
and
cmp
and
clc
outsb
loope
sub
cmp
in
inc
aad
out
push
lret
dec
add
or
adc
sbb
test
sbb
es
imul
jnp
cli
mov
dec
sbb
movsl
mov
cmpsb
jbe
pop
aad
or
pop
push
cwtl
pop
nop
sahf
cmpb
push
push
ja
imul
int3
pop
jp
int
sbb
es
and
push
jge
aam
pop
xor
cmp
mov
or
es
sub
arpl
mov
testl
mov
and
bound
jne
and
jmp
dec
aas
ja
push
rorl
mov
int3
icebp
decb
lods
adc
das
sub
and
pop
rcl
sbb
jmp
lods
jle
push
subb
add
xor
repnz
addb
jb
call
mov
inc
xor
testl
fcoms
scas
mov
pusha
pop
lahf
bound
lods
insb
or
xor
pop
ret
jnp
aad
roll
mov
mov
mov
jne
stos
sbb
jmp
cld
inc
pop
inc
and
pop
jg
mov
test
pop
lcall
jae
inc
push
loope
ret
dec
mov
enter
cmp
or
jge
stc
mov
jns
out
xchg
inc
test
cld
push
sbb
or
movsl
pop
popa
negb
std
shll
dec
cld
clc
lea
into
adc
xor
jge
int
stos
adc
cwtl
insl
sbb
add
rcrl
cld
sub
pushf
lods
jmp
or
sub
arpl
lcall
jmp
add
xchg
pop
add
or
mov
dec
push
dec
scas
mov
or
jle
mov
cltd
pop
pop
inc
iret
sub
mov
adc
cltd
popa
addr16
mov
add
adc
mov
sub
jge
dec
out
mov
mov
jae
sub
das
push
mov
in
jne
into
adc
mov
dec
jbe
repz
xchg
aaa
aad
dec
and
lock
dec
dec
cmpsl
mov
inc
movsb
leave
mov
mov
jge
pusha
lcall
mov
in
ret
sub
xlat
in
push
movb
push
mov
push
ja
je
mov
inc
inc
dec
loopne
decb
sahf
mov
or
clc
cmp
rorl
lea
pushf
push
pop
arpl
in
push
insb
leave
cmpsl
fmull
scas
pop
pusha
fldcw
or
jp
mov
stc
inc
mov
add
or
pop
gs
and
sub
insl
clc
mov
bound
out
mov
push
shlb
leave
out
cli
orb
shl
cli
dec
adc
jns
cs
push
push
mov
cmp
in
mov
scas
sub
pop
in
rolb
pop
adc
out
in
into
sbb
jnp
in
repnz
test
inc
enter
das
cmp
popf
flds
mov
mov
test
cltd
push
add
fcompl
xor
mov
out
sub
pop
pushf
and
xchg
xchg
les
adc
push
xchg
jle
jl
imul
scas
jle
cmpsb
adc
mov
stc
mov
in
xor
rolb
push
rcll
sub
cmp
outsb
in
out
and
dec
dec
sbb
ljmp
pop
orb
or
std
fildll
push
and
enter
pop
sti
fisttpl
push
lods
xchg
call
ljmp
push
lcall
aam
cltd
mov
sub
and
push
mov
nop
jge
and
ljmp
push
cmp
scas
mov
lock
sub
push
jnp
daa
neg
inc
xor
iret
mov
mov
sub
fisubs
sub
icebp
inc
cwtl
xor
movsl
call
flds
inc
push
jge
mov
jge
mov
stos
sbb
xor
pop
addr16
orl
cmovs
mov
rcll
daa
xchg
jmp
sbb
ret
mov
imul
and
xchg
stos
inc
push
or
psubd
loop
mov
lods
mov
outsl
sub
popf
rol
addr16
adc
ja
daa
movsl
inc
pop
add
rolb
ficomps
pop
sar
sub
push
in
push
out
mov
lods
mov
jns
ret
cmp
or
mov
das
imul
cmp
gs
sarl
push
mov
into
std
sub
sar
iret
pop
or
addb
pop
in
aaa
aam
mov
sbb
dec
mov
inc
mov
repz
sbb
xor
xchg
mov
jl
pop
add
les
pop
lret
push
mov
adc
dec
xor
cmp
xor
inc
jb
mov
hlt
aas
cmp
fstpl
adc
or
jbe
mov
dec
dec
movsl
repz
jmp
jb
adc
aas
movb
mov
or
xor
add
xorl
in
mov
and
adc
lret
scas
jbe
mov
ret
jle
cltd
sahf
jecxz,pn
cs
lret
pushl
ljmp
inc
shr
mov
or
mov
xcrypt-ofb
cmpsl
sub
xchg
mov
push
add
and
or
fldt
mov
xchg
dec
ror
out
into
and
mov
sub
or
adc
xchg
aam
mov
into
les
jecxz
cld
add
or
sahf
test
push
mov
mov
or
mov
movsb
fldt
push
pop
hlt
fiadds
ret
cmp
or
mov
aaa
mov
das
or
sahf
jle
xor
lods
dec
xchg
repnz
aas
sbb
mov
aas
cli
push
test
sbb
fsubrl
mov
mov
ret
aam
dec
pushf
xlat
pop
push
push
ret
xchg
cwtl
fwait
lds
std
fistpll
add
scas
fnstcw
mov
xor
fwait
fs
xor
repnz
mov
jnp
pop
sub
add
mov
in
sbb
mov
popa
dec
add
cwtl
xchg
or
inc
push
push
add
lods
ljmp
and
cwtl
jns
rolb
testl
add
loop
hlt
or
xor
xchg
in
ljmp
popl
mov
test
aad
les
scas
adc
loopne
dec
in
inc
jbe
lret
jo
out
xchg
inc
cltd
inc
pop
xchg
push
push
push
and
std
add
mov
push
mul
aad
jl
xchg
sbb
push
and
pop
xor
pop
ret
popa
lahf
test
mov
push
popw
lods
fstpl
pop
int3
inc
bound
xor
xor
pop
repnz
dec
aam
xorb
and
in
mov
and
sub
adc
mov
sbb
and
in
pop
movsl
pop
frstor
jge
mov
es
std
bnd
dec
int3
movsl
dec
test
jle
mov
dec
sbb
pop
sbb
push
sub
nop
sbb
adcb
mov
sbb
xchg
call
mov
xchg
stos
dec
cli
lret
ljmp
add
sti
dec
bnd
xor
leave
cwtl
fsubl
pop
mov
mov
cmp
hlt
cmpsb
roll
das
outsl
fmull
xchg
les
stc
nop
aaa
clc
xor
ljmp
dec
shll
das
push
mov
pop
jmp
push
cmp
mov
sarb
jge
and
fwait
test
xor
rolb
stos
shll
push
scas
aam
cwtl
stos
add
fiadds
inc
rolb
cltd
lret
int
xor
mov
dec
orb
stc
js
insb
mov
mov
adc
shll
lcall
inc
aaa
mov
lock
insb
adc
shr
push
ret
push
in
shlb
ret
jae
out
adc
repz
mov
mov
in
xor
dec
xlat
dec
pop
arpl
fimull
sub
fnstcw
mov
mov
mov
cmpsb
test
leave
add
mov
lret
mov
fwait
aas
mov
push
pop
test
adc
orl
fdivr
adc
xor
mov
lret
mov
outsb
fistpll
aaa
out
sbb
jge
imul
xor
push
test
pop
out
lahf
xor
cli
outsl
inc
lea
notb
or
dec
mov
sbb
ret
shrl
sbb
ss
leave
pop
xor
pop
negb
bound
movsl
sbb
rorl
std
pop
stos
sbb
leave
sub
mov
jmp
xchg
addr16
dec
xchg
jl
xor
add
push
shll
sub
rorl
lcall
inc
jp
pusha
sub
xor
and
sub
cld
cmpsb
push
adc
cmp
jl
cmpb
jno
xchg
mov
inc
xchg
ljmp
out
and
lods
lds
rcr
rclb
daa
jb
repz
call
enter
add
mov
jl
cmpsl
das
jp
and
psubw
pop
cli
popf
xor
cmpsl
add
das
mov
adc
pop
jl
sub
xor
loopne
push
popf
mov
push
xlat
or
outsl
lods
ja
adc
fsubrl
mov
sbb
enter
icebp
pushf
mov
pop
jecxz
lea
aas
idiv
add
jno
repz
sbb
xchg
icebp
adc
sub
lods
stos
or
xchg
arpl
inc
sbb
mov
sub
push
adc
add
and
cs
jp
in
mov
push
cmp
mov
inc
addl
jecxz
arpl
les
jmp
sbb
push
push
fs
mov
pop
shlb
or
loope
add
das
outsb
xlat
mov
icebp
movsl
jne
notb
in
or
inc
push
test
mov
sahf
add
aaa
les
jb
mov
enter
stos
jg
arpl
jne
or
and
nop
outsl
int3
or
add
test
cmp
imul
sub
scas
pop
sbb
cmp
imul
push
test
mov
mov
bound
lahf
mov
mov
mov
inc
adc
sub
add
ja
add
jge
scas
cmc
cmp
ds
sti
dec
shlb
lahf
cmp
gs
testb
fnstsw
shlb
or
inc
cli
jae
js
xor
fcompl
xchg
mov
inc
inc
jbe
loopne
rcr
or
outsb
stos
add
push
push
hlt
enter
into
dec
iret
push
mov
and
test
stos
adcl
out
insl
pop
pop
shrb
enter
mov
push
aaa
std
and
stc
xchg
scas
add
cmp
lret
and
pop
hlt
fadds
das
mov
push
mov
mov
aad
pop
push
jo
inc
jbe
push
aam
mov
mov
jns
add
imul
inc
mov
daa
and
cwtl
jo
out
sub
cmp
xchg
icebp
mov
daa
push
in
or
mov
adc
inc
out
cmpsl
popa
call
pop
ds
or
jb
add
xchg
mov
or
mov
hlt
cmp
addr16
pusha
inc
dec
xor
jecxz
fists
std
out
stos
pushf
fistps
test
popf
hlt
mov
inc
cmp
pop
sub
cs
into
mov
dec
frstor
mov
pop
inc
inc
jmp
mov
xor
sbb
mov
or
in
add
push
ja
loopne
out
stos
shlb
lds
mov
fldt
jp
pop
mov
or
jg
and
hlt
fcomip
adc
test
scas
shlb
mov
int
or
add
xor
sub
add
mov
and
std
daa
lret
jecxz
shll
lret
fcompl
mov
mov
pmuludq
inc
jns
insb
imul
in
loope
bound
jecxz
sbb
jmp
pop
xchg
test
xor
push
push
inc
icebp
pusha
outsb
xor
repnz
adc
jg
cwtl
repnz
jae
daa
sbb
loop
jnp
sarl
mov
cmpl
aaa
xlat
xchg
in
or
sahf
jbe
and
out
xchg
imul
mov
cmpl
fwait
enter
ljmp
shl
fnstcw
addr16
shll
daa
mov
push
pop
add
cli
sarb
xchg
popf
imulb
out
mov
ret
lea
lock
or
subl
or
xlat
cld
push
adc
dec
jp
out
sbb
push
fidivrs
aam
add
jg
push
adc
xor
or
or
adcb
inc
add
adc
cwtl
mov
sub
cmpsb
loopne
in
push
inc
repnz
pop
or
cmpsb
pop
test
lret
in
ljmp
and
cmp
sub
lahf
mov
lods
inc
jg
jp
orl
jmp
push
lock
lods
lret
push
cmp
and
test
jne
mov
inc
cld
pusha
test
jmp
fsts
pushf
movsw
mov
test
mov
sbb
mov
cmp
mov
pop
xor
jne
stos
or
push
into
aaa
xchg
sbb
aam
jne
inc
xlat
or
int3
sbb
int3
shll
dec
sub
xchg
adc
shlb
movsl
jecxz
cmc
shrl
repz
ljmp
or
orl
cmpsb
mov
or
push
dec
std
fcompl
subb
gs
iret
dec
xor
push
lcall
cld
mov
imul
aaa
xchg
inc
gs
or
fs
and
ficoms
test
xchg
and
testb
lret
ret
adc
pop
bound
and
adc
shr
roll
inc
pop
cld
xlat
mov
sbb
xchg
inc
sub
cmp
fstl
jle
stc
cmp
inc
out
frstor
mov
pop
jecxz
and
lods
dec
pop
xchg
adcl
push
cmp
js
rcrl
lcall
test
mov
ss
das
mov
stos
sbb
fildl
xor
imul
aam
sub
push
lods
scas
daa
sti
decl
mov
mov
adc
and
lahf
jmp
outsb
pop
mov
mov
adc
gs
xor
fs
push
pop
mov
sbb
pop
jbe
test
je
shlb
dec
add
pop
push
mov
add
xchg
fisubl
stc
fisttps
jae
out
sub
cli
pmaxub
insb
or
out
mov
inc
mov
mov
or
or
mov
adc
aam
fcoms
pop
mov
jmp
push
loop
dec
xor
daa
sarl
adc
scas
xlat
mov
xchg
adc
jmp
and
ds
je
dec
mov
incb
rcr
daa
das
cmp
cmp
push
xor
insl
stc
push
out
jecxz
lret
data16
push
adc
lock
mov
and
pop
adc
cmpsl
shrb
les
push
and
cmpsb
imull
ret
fucomi
inc
fadds
and
lcall
shrd
sub
aas
popa
mov
inc
daa
add
test
and
jo
ds
fstpl
xchg
xorb
loopne
aad
repnz
mov
xchg
ret
xor
mov
mov
jl
scas
pop
es
sbb
fistl
sub
sbb
xchg
orb
rcll
xor
jp
and
inc
add
and
lea
jmp
xor
mov
mov
jp
sbb
mov
mov
or
jmp
xor
mov
lods
addr16
and
fwait
hlt
xor
aas
stos
push
scas
movsb
or
push
cli
jge
xchg
imul
and
jl
outsb
dec
xchg
repnz
sbb
pop
sahf
pusha
imul
pop
cmp
out
ret
pop
xor
mov
std
add
or
add
lret
pop
pop
jbe
xchg
test
pop
xor
dec
scas
out
mov
mov
adc
imul
icebp
std
cld
dec
dec
lcall
movsb
popf
dec
add
stc
in
and
jb
cwtl
pushf
movsl
lret
out
mov
jecxz
inc
aam
and
xchg
ss
int
out
call
cmpsl
mov
lcall
fdivrs
sbb
insb
xchg
dec
or
xor
dec
sub
rolb
adc
jle
adc
mov
pop
cmp
arpl
outsb
or
jae
mov
test
enter
andw
xor
cwtl
sub
mov
push
or
daa
xor
mov
movsl
inc
push
pop
adcb
and
int
negb
lahf
pop
aaa
add
lods
pop
mov
in
cli
dec
sahf
add
xor
cli
sub
add
sub
stos
das
push
cmp
les
rol
das
and
sahf
js
xchg
xchg
push
jle
outsl
mov
pop
fbstp
movsl
push
repz
scas
out
lret
test
repz
aad
lock
xchg
add
mov
dec
fsubs
lods
insb
or
jecxz
xorl
mov
cmpsb
or
outsl
or
movsb
aam
jnp
mov
mov
push
and
rep
and
add
jno
shl
xchg
fisttps
jmp
dec
add
scas
outsb
mov
js
inc
sub
mov
pushl
sub
adc
test
jo
cmp
jecxz
inc
add
icebp
cmp
adc
daa
sarl
jno
xor
or
leave
cmpsl
data16
mov
in
adc
push
pop
stos
pop
in
loopne
push
xor
sub
pop
lcall
adc
lock
pushf
ja
in
mov
andb
jmp
decb
call
jg
push
jnp
adc
jnp
or
xlat
push
sbb
scas
pop
lock
imulb
pop
add
xchg
shl
repnz
pop
stc
push
adc
aaa
adc
lret
into
loopne
sub
repnz
daa
data16
leave
gs
sub
inc
xor
stos
mov
xchg
and
les
jle
loop
sub
xor
adc
add
fisubrl
idivl
in
mov
or
sahf
sub
xchg
and
cmc
push
dec
test
jmp
cli
sbb
fsub
add
dec
ret
push
mov
mov
xchg
xor
inc
inc
daa
pop
jg
movsl
xor
popa
xchg
dec
popa
cltd
mov
movb
adc
dec
cwtl
cli
fwait
mov
outsb
std
fwait
pop
lock
int3
jl
push
mov
lahf
and
sub
loop
cmp
outsb
aaa
mov
cmp
into
lea
lds
push
stc
dec
sbb
or
cli
icebp
subb
test
mov
sahf
jns
cmp
test
out
push
sub
shrl
in
pushf
out
lahf
mov
pusha
js
add
rorb
mov
xlat
cmp
out
jb
mov
mov
cld
xchg
push
rclb
stos
outsb
push
cmp
push
and
cmpb
mov
lods
inc
inc
mov
fbld
jns
popa
imul
push
test
cmc
mov
and
mov
arpl
fs
pop
jbe
fildll
push
jne
mov
loopne
xor
pop
icebp
sub
sarb
lods
fsubs
jmp
ret
mov
loop
std
xor
mov
loopne
int3
inc
add
xchg
adc
pusha
sub
xchg
push
leave
and
fiadds
cmp
imul
or
cmpsl
jecxz
daa
jns
xchg
mov
mov
xor
mov
dec
mov
dec
pop
sarl
jnp
outsb
jae
nop
sti
decb
adc
fstps
add
pop
adc
inc
cmp
scas
adc
cmpsl
sub
mov
jge
sahf
inc
je
sub
imul
pop
jle
mov
jl
icebp
pop
nop
rcll
mov
aaa
fwait
and
mov
jne
movsb
push
or
adc
bound
push
je
shr
movsb
xor
aaa
and
arpl
jb
mov
bound
push
loopne
in
push
mov
in
subl
sub
add
and
scas
fistpl
pop
imul
push
ljmp
daa
push
jae
xchg
xor
lcall
sbb
fbstp
add
repz
test
mov
pop
push
popf
lcall
push
push
mov
subl
mov
lret
movsb
int
out
in
addl
adc
mov
pop
jb
test
add
es
adc
push
scas
dec
cmp
sub
add
cmpsl
or
outsl
cmp
fistl
adc
call
sub
sbb
ss
loope
dec
hlt
out
les
and
and
mov
stc
mov
inc
xor
sbbb
xchg
loopne
lock
loope
pop
cmp
mov
lahf
ret
adc
mov
pop
sub
dec
ss
ss
sub
sbb
xchg
jno
jns
das
arpl
insl
idiv
and
xor
pop
ljmp
pushf
cmp
cmp
inc
fwait
or
fld
adc
sti
pop
xor
orb
inc
pop
cmpsb
mov
jns
das
sahf
mov
xchg
je
and
and
in
shl
add
mov
or
xchg
cmp
cmpsl
push
and
ret
aaa
fmull
push
jp
cltd
dec
cld
xlat
shll
aad
scas
sbb
out
sub
lcall
fcom
sub
adc
cltd
in
clc
xlat
insb
stc
clc
mov
or
mov
xor
out
mov
scas
dec
fwait
into
test
fmul
pop
jmp
inc
movl
cmp
xchg
loopne
mov
imul
inc
jp
and
subb
ja
pusha
addl
cmpb
push
xor
dec
jmp
cmpl
push
xor
add
xchg
and
pop
in
sub
sub
inc
orb
dec
negl
or
cmc
loopnew
or
aam
add
or
scas
adc
into
cmpsb
adc
pop
xchg
test
dec
out
mov
int3
push
mov
mov
movsb
mov
mov
xor
sbb
or
in
rcrl
and
popa
inc
pop
push
adc
lret
insl
xlat
add
mov
mov
or
and
ja
cmp
sub
cmpb
rcrl
in
call
or
mov
daa
sahf
sub
leave
push
mov
dec
into
shll
mov
add
mov
repnz
add
sti
gs
dec
daa
movsb
inc
out
mov
ret
insl
fimull
dec
and
ret
in
addb
aam
ja
lods
pop
dec
push
jno
lret
sub
cmpl
pop
lcall
mov
cltd
jmp
je
add
das
xchg
fs
sbb
jp
sbb
aas
mov
pop
fs
inc
jb
sbb
repz
jmp
jo
push
sbb
lods
lods
pop
addr16
es
dec
jb
cmp
pop
ret
sbb
imul
mulb
pop
shrl
fisubrs
add
sbb
js
rcl
shll
insl
loop
push
mov
es
imulb
mov
lea
cmp
addr16
mov
fsubr
jl
sbb
enter
jns
into
add
pop
dec
xchg
xchg
loope
sbb
inc
mov
mov
mov
pop
push
mov
mov
stos
or
ljmp
xor
test
scas
pop
leave
cmpsl
out
test
and
jp
pop
int
lea
xchg
mov
cmp
call
push
insb
ret
imul
aad
iret
cmp
push
sbbb
dec
call
aad
push
lahf
test
fmull
mov
mov
js
jo
and
inc
sub
bound
enter
loope
mov
arpl
xor
repnz
inc
cmp
dec
js
int
push
cmpsl
scas
flds
mov
leave
in
pop
out
loop
fstpl
out
mov
test
ret
cmp
mov
push
ja
xor
jb
lods
jl
arpl
imul
lahf
mov
data16
mov
rorb
outsb
lcall
test
orl
shrb
movsl
push
test
mov
in
sub
call
mov
mov
pop
dec
aam
push
pop
adc
test
outsb
push
add
mov
cmp
cltd
xor
fwait
lods
push
addl
mov
and
mov
insb
or
add
jl
add
mov
mov
xchg
cmp
sti
xor
lret
pop
cmpsl
mov
add
ret
inc
mov
pop
scas
test
sub
add
shrl
jbe
stc
jb
cli
fdivr
jg
in
mov
arpl
dec
subb
mov
dec
popf
mov
mov
pop
mov
mov
sub
cmc
sub
mov
mov
mov
ljmp
xor
sub
jl
inc
loope
pop
push
mov
push
sarl
int
out
mov
fnsave
sub
cmp
adc
mov
mov
inc
fstps
jp
cmpsl
xorb
clc
lahf
enter
mov
mov
hlt
fwait
lret
adc
int3
xlat
cwtl
sub
mov
movsl
or
mov
adc
adc
sub
xchg
test
add
mov
mov
sub
lods
jg
xor
sbb
and
icebp
aaa
loope
enter
lahf
int
in
and
std
incb
cmp
cmp
insb
or
add
mov
sahf
gs
shlb
mov
inc
int3
inc
mov
aad
or
orl
sub
pop
mov
mov
sti
jmp
jns
subb
add
and
inc
jne
fidivs
ja
out
sub
data16
sbb
add
inc
jnp
pusha
fs
aaa
inc
out
scas
xchg
popf
sti
jnp
mov
sub
outsb
dec
add
inc
lea
and
ss
mov
mov
inc
xchg
lahf
in
fisubs
cmp
ret
in
pushl
adc
lret
cli
mov
test
repz
inc
cmp
imul
or
and
sub
xchg
push
dec
sbb
adc
shrb
int3
sub
out
pop
insl
aas
or
popa
jl
call
mov
ljmp
jmp
adc
xor
add
add
fisttpll
mov
sub
or
into
popw
imul
or
insb
cmp
insl
inc
mov
cmp
add
xchg
fcmovnu
xchg
xchg
xchg
pop
pop
pop
inc
and
out
mov
dec
fidivrl
jg
sarl
in
lret
hlt
fwait
sarb
test
cmpsb
sub
pop
and
mov
push
clc
add
movsb
pop
imul
jb
lea
aad
test
sbb
fstp
or
stc
push
test
pop
xchg
test
xor
dec
test
aam
rcrb
daa
jbe
jg
js
in
lock
cmp
stos
test
bound
testl
mov
nop
into
pop
xchg
xchg
fadds
xorb
loope
cmpsl
adc
lds
cmc
push
jb
fadds
lds
imul
jecxz
daa
daa
js
and
and
cmp
jno
dec
data16
push
sbb
imul
cmpsl
dec
push
add
sarl
pop
lcall
mov
repnz
ret
pop
inc
out
mov
lahf
fidivrl
mov
andl
cmpb
cmpsl
into
jle
inc
in
out
hlt
mov
cmp
idivb
jnp
push
ljmp
ret
mov
xlat
cmc
mov
enter
gs
cmp
push
in
push
adc
cltd
ret
dec
cmp
mov
lds
mov
mov
add
pop
or
insl
fstps
xor
sub
push
dec
jge
lock
or
inc
cmp
push
xchg
jge
insb
cmp
xchg
ljmp
dec
dec
hlt
fdivr
loop
aaa
imull
sub
pop
push
test
mov
jmp
clc
inc
stc
jb
dec
pop
pop
scas
cmp
jg
inc
scas
stos
and
das
insb
adc
adc
ja
out
rolb
stos
ja
pop
jb
loope
cmc
test
sub
in
lret
das
sbb
pop
loopne
adc
inc
fbld
xchg
inc
sbb
pop
jg
adc
enter
adc
aas
xchg
add
sub
dec
xchg
cmpsl
mov
out
cmc
mov
add
pop
push
xchg
fxch
outsl
cli
add
sbb
movsl
cltd
mov
sbbl
xchg
and
das
subb
xor
lods
leave
lea
aas
je
imul
jo
cltd
dec
test
nop
sbb
jle
ret
mov
lods
ror
mov
movl
shrl
stos
dec
jnp
leave
or
adc
mov
jl
inc
aas
xchg
ret
dec
or
push
mov
pop
mov
nop
jae
clc
insl
in
xchg
pushf
aaa
mov
pusha
bound
push
and
pop
bound
aam
dec
int3
cmp
cmp
and
jns
js
xchg
and
les
pop
adc
xor
lret
sub
movsb
mov
mov
sub
stos
pop
mov
jo
and
inc
gs
add
jno
sbb
mov
outsb
mov
add
movsl
icebp
xor
out
movsb
jp
push
mov
and
and
mov
popa
adc
jbe
enter
out
jne
test
xchg
cmpsl
dec
lea
std
push
cmc
lret
xor
push
jnp
roll
outsb
lea
aam
les
adc
testb
mov
mov
mov
sahf
rcrl
adc
fimuls
mov
aaa
test
popa
pusha
in
push
hlt
push
sbb
xchg
in
adc
insb
cmp
mov
xchg
push
outsl
xchg
cmp
out
push
divb
jge
out
sbb
out
outsb
push
decl
lret
push
jle
pop
pop
adc
mov
push
adc
loop
lcall
mov
mov
lar
sbbb
sbb
mov
loopne
jecxz
add
leave
mov
pop
out
push
mov
inc
enter
cmp
jbe
ljmp
jno
lods
ret
mov
movswl
push
pop
xor
jecxz
test
pop
int3
js
fidivs
std
fxch
mov
ficompl
inc
test
nop
adc
inc
cwtl
test
rcrl
clc
fdivs
mov
jecxz
clc
add
adc
lods
int
movsl
push
je
xchg
enter
xchg
mov
dec
cmp
mov
add
pop
xchg
in
shll
mov
sbb
sarb
mov
pop
pusha
int3
lods
mov
add
jle
jmp
frstor
idivb
and
int
in
xchg
jbe
jne
pop
orb
ss
mov
out
pop
xor
or
imul
sbb
js
in
mov
pop
js
xchg
mov
adc
mov
in
movsb
mov
and
jp
in
dec
jecxz
cs
cmp
adc
mov
js
adc
xchg
dec
inc
xor
loope
mov
or
loope
and
paddsw
mov
sbb
pmaxsw
jns
rcll
xchg
iret
aam
lock
mov
shll
cmp
xchg
jmp
pusha
xchg
cmpsl
aas
xchg
push
les
xor
mov
rcr
dec
imul
mov
push
push
out
adc
push
icebp
ja
xor
or
dec
mull
mov
test
ss
cwtl
add
mov
data16
imul
enter
mov
and
xorb
sub
test
push
fbld
popa
pop
outsb
jmp
pop
adc
leave
xor
and
jmp
add
loopne
add
sbbl
loop
jb
mov
jnp
add
repnz
movsl
lods
jnp
cmpsb
lret
dec
xor
push
and
mov
loope
fcoms
mov
les
add
fnsave
push
loop
add
pop
shl
bound
sbb
cmc
mov
sub
sub
push
lock
adc
in
adc
sbb
test
aaa
or
stos
sub
clc
ja
jecxz
xor
mov
pop
cmc
sahf
xor
imul
stc
lret
aaa
ror
or
jp
and
js
stc
notl
push
cmp
enter
inc
lret
int
inc
jg
and
sub
stc
fsub
push
dec
addb
add
sbb
cmp
mov
sti
xchg
addr16
movsb
sub
js
xchg
jg
das
pop
mov
pop
sbb
push
fmull
dec
nop
xlat
cmp
push
adc
push
cmp
clc
or
ret
jmp
arpl
popa
in
pusha
mov
mov
dec
jb
mov
cmpsb
shlb
or
sbbb
lds
jl
mov
mov
push
in
push
in
pop
pop
aaa
jge
je
jb
sbb
cs
xchg
in
add
push
mov
fisubrl
jo
mov
nop
shrb
mov
outsb
cmp
pusha
shrl
fldl
push
sbb
push
repz
mov
jb
add
mov
mov
pop
leave
sub
sub
ret
ret
pop
std
scas
sub
shrl
and
data16
sub
and
cmc
mov
dec
adc
adc
int
adc
test
adc
xchg
pusha
stos
enter
push
pop
pop
or
orl
sub
jl
sbb
dec
dec
fstl
mov
out
inc
jbe
out
mov
adc
inc
xor
sbb
sbb
stos
mov
data16
bound
pop
ficompl
ljmp
pop
or
sub
add
jp
in
mov
sbb
fs
popa
shrb
sbbb
xor
jmp
scas
repz
inc
fistpl
arpl
int3
insb
jno
popa
mov
imul
sbb
jo
bnd
roll
dec
lds
repnz
pop
or
sbb
mov
mov
jb
call
int3
sub
mov
ss
ret
adc
push
fld
xchg
aam
dec
sbb
or
std
jle
or
sub
push
aas
and
cld
adc
jb
cmp
divl
jns
fdivrl
inc
lret
test
add
mov
push
lcall
mov
pop
fiaddl
mov
ds
and
xchg
les
out
cmp
sbb
js
and
ljmp
xor
aas
clc
or
lahf
add
loope
dec
sbb
lret
cmp
add
jge
aas
adc
inc
push
fadds
cmp
imul
xlat
lcall
fbld
dec
sbb
fcomps
insb
test
jl
repz
stos
stc
mov
lretw
cmp
repz
pop
mov
mov
sub
lcall
addr16
loop
sahf
push
int
adc
mov
add
mov
inc
lret
lea
mov
mov
jb
xor
fisubrl
daa
mov
addb
jns
push
mov
pop
dec
mov
out
push
enter
sahf
cld
dec
pop
dec
mov
jg
dec
fdiv
cmp
mov
cli
ret
mov
lret
ljmp
mov
sti
dec
icebp
mov
sub
ljmp
pop
xor
scas
mov
scas
scas
jl
js
icebp
jne
inc
or
clc
jle
mov
lret
enter
ret
xlat
cmpsl
int
mov
mov
sub
scas
mov
mov
mov
pop
iret
lea
jecxz
or
add
mov
cmp
or
daa
lcall
jns
lahf
pop
neg
aad
leave
ret
lcall
lea
ffree
mov
fisubrl
out
and
icebp
subl
stc
int
jecxz
clc
repz
xchg
and
sahf
lods
inc
iret
loop
arpl
jnp
push
cmpsb
pop
push
xchg
pminsw
mov
and
jb
loop
add
test
aaa
jp
and
adcb
xor
cmpsb
pop
je
and
aas
dec
xchg
mov
adc
popf
adc
lcall
bound
pop
add
movsl
imul
dec
inc
shll
or
mov
stos
outsl
dec
xchg
pop
addr16
insl
rcll
dec
add
subl
je
xor
jnp
in
mov
mov
push
out
and
push
mov
rolb
ljmp
xchg
imul
stc
inc
inc
mov
dec
mov
loope
adc
in
jmp
cmp
out
sbb
jp
xchg
jle
push
mov
loopne
push
shll
mov
lcall
adc
lods
xor
imul
mov
mov
and
lds
stos
dec
and
or
push
aad
or
add
mov
mov
jbe
rcr
inc
xor
xchg
dec
adc
outsl
cmp
pop
cmpsl
xor
in
mov
mov
pop
mov
xlat
ljmp
mov
daa
pop
mov
in
and
push
jno
in
xor
jg
mov
imul
or
push
ffreep
movsl
sub
mov
popa
pop
mov
pop
pop
mov
inc
jg
cs
in
es
movsb
leave
mov
dec
mov
imul
push
imul
fnstsw
ss
test
jno
cmp
movsl
lods
sete
xor
push
lcall
mov
inc
mov
sub
fmul
dec
push
xchg
div
into
fstpt
scas
jmp
fstl
xchg
cld
xchg
mov
xor
fwait
xchg
cltd
arpl
pop
jnp
add
loopne
mov
fs
lahf
jecxz
repnz
adc
aam
sbb
inc
or
mov
add
pop
inc
or
lea
jg
mov
pop
fwait
lcall
test
pop
mov
mov
push
shll
mov
xchg
call
div
test
sar
cltd
push
lock
daa
add
fisubs
inc
iret
lods
xchg
les
xor
pushf
iret
fs
jp
lea
fcompl
and
add
push
mov
inc
jnp
cmpl
stc
inc
pop
pop
out
notl
rclb
jmp
xchg
mov
jg
xchg
out
mov
test
dec
fldenv
in
push
inc
mov
lods
mov
lods
inc
ja
iret
data16
fdivrl
cltd
add
adc
loope
data16
jnp
jp
loopne
lcall
scas
sarb
dec
mov
jl
rcrl
inc
mov
repnz
mov
xchg
loopne
push
fadds
int
test
jns
mov
loop
fdiv
mov
xchg
mov
pop
pop
push
mov
push
iret
mov
sarl
add
push
mov
and
jbe
pop
pop
loope
test
cmovs
pop
cmpsl
xchg
icebp
xchg
stos
outsl
jmp
pop
dec
sbb
dec
cmpsl
inc
gs
rorl
nop
aaa
arpl
sbb
popf
imul
popf
pop
cmc
mov
cmp
in
xor
mov
adc
sub
xor
sbb
in
lea
and
or
test
or
orl
jecxz
and
movsl
xchg
cld
mov
stc
pusha
xchg
jle
loop
xor
cltd
cli
add
pop
icebp
xor
icebp
inc
cmp
push
inc
out
ljmp
ja
push
dec
popf
hlt
mov
add
jno
or
cmp
push
jnp
sbb
mov
add
adc
push
roll
fbstp
cmpsb
aam
lahf
ret
aam
es
dec
sub
imul
pop
xor
call
dec
roll
addr16
add
or
xchg
dec
inc
push
mov
lret
std
int
xchg
mov
ret
push
in
pop
ljmp
es
repnz
or
xorl
shll
cmp
jge
sbb
sbb
lods
mov
ret
test
sub
leave
xchg
outsl
mov
out
mov
gs
pop
ficoml
xor
int3
lret
test
inc
dec
das
inc
pop
add
cmp
scas
js
clc
mov
lcall
rcrb
mov
cld
sub
test
enter
lods
push
andl
mov
jmp
or
mov
pop
cmpsl
mov
hlt
pop
cmp
pop
cmovge
fldcw
jno
cmpsb
cmp
mov
lds
cmpsl
cmp
mov
sbb
fidivl
cmp
push
pop
cltd
loopne
das
inc
inc
sub
jp
gs
test
jnp
sub
lock
enter
out
mov
into
dec
mov
jae
push
dec
jno
cmp
cmp
sbb
add
pop
nop
das
and
sbb
iret
pop
push
jnp
cltd
sub
pop
jp
sub
cld
fstpt
cs
add
add
xor
sbb
xchg
pop
inc
ds
add
popf
xor
gs
jmp
xchg
fnstenv
sbb
loopne
xchg
mov
jg
outsl
and
leave
imul
add
fmuls
inc
xchg
enter
sbb
fistps
subl
imul
ds
mov
fiadds
out
jae
push
push
xor
pop
sub
mov
popf
sbbb
xchg
ljmp
cmpsb
add
pop
lahf
aaa
sub
xchg
stos
or
popa
outsl
pop
add
mov
adcb
add
jmp
sub
cmp
jno
shlb
mov
xor
bound
jmp
ljmp
pop
mov
imul
mov
rcrb
or
jmp
jmp
lea
test
aam
cwtl
xor
js
pusha
xor
nop
jl
xchg
cli
test
cli
out
repnz
movsl
sbb
mov
xchg
mov
sub
xchg
push
add
int
popf
or
js
les
fs
cmpsl
xchg
push
into
or
outsl
testb
mov
or
test
rorb
xor
daa
enter
or
mov
insl
add
gs
addr16
shll
dec
push
aaa
into
imul
pop
xchg
cmp
daa
sbb
addr16
daa
aad
jae
mul
movsl
lea
ljmp
mov
mulb
in
push
dec
sbb
ficoms
mov
lock
xlat
cmp
gs
jno
stos
push
push
push
pushf
cmpsb
xchg
push
sbb
sbb
jns
dec
ja
xchg
rcll
in
lret
add
out
inc
sbb
jmp
movl
jb
std
test
pop
inc
fsubs
mul
out
cmp
adc
fsts
adcb
inc
pop
cmp
and
fcomp
nop
mov
push
test
lds
hlt
into
lret
xor
adc
mov
mov
test
fwait
cs
xor
sbb
adc
xor
ds
imul
xchg
xchg
fcmovu
xchg
inc
push
mov
add
enter
lcall
imull
mov
or
xchg
repz
loopne
jmp
xor
lret
push
lock
test
jno
les
les
xlat
mov
cmp
loop
push
xchg
fcoml
mov
adc
pop
push
push
cwtl
aad
lock
fldt
sti
sub
aaa
sbb
das
add
lods
xchg
jb
aad
cmpsb
push
inc
push
or
test
data16
or
inc
popa
cmp
repz
push
cld
inc
sti
aam
dec
mov
out
jmp
add
mov
addb
repnz
cmp
mov
fldcw
sub
mov
adc
push
cmpsl
addr16
push
movsb
mov
clc
adc
inc
sub
clc
cmp
push
cmp
xor
sti
sbb
mov
sbb
enter
xchg
jnp
push
pop
xchg
cmpsb
repz
jecxz
in
cs
arpl
lcall
fistl
mov
lea
addl
mov
test
aaa
lds
xcrypt-cfb
cmpsl
in
dec
scas
xchg
pushf
enter
mov
push
lods
out
mov
rcll
rorb
inc
dec
jmp
popa
cmc
adc
jne
jbe
into
push
out
or
inc
mov
cli
jge
mov
shll
popf
push
dec
sbb
scas
and
sbb
mov
into
jle
aad
mov
neg
mov
push
xchg
cmpb
ja
dec
mov
nop
or
xor
ljmp
push
xchg
les
sub
cmp
cmpsl
lods
adc
mov
test
mov
push
cmp
sbb
sbb
and
xor
jle
out
mov
xchg
ret
xchg
pop
cmc
and
add
pop
mov
push
add
enter
cwtl
push
mov
in
mov
mov
pop
pop
cmp
xchg
pushf
jmp
daa
and
scas
push
popa
xor
or
icebp
pop
mov
pandn
loop
jbe
outsl
shlb
adc
jae
test
movsl
push
aaa
inc
ljmp
pop
or
pusha
lret
sahf
mov
fdivs
fidivs
std
sahf
mov
gs
inc
insb
push
insl
cmpsb
pop
sub
test
ds
mov
sub
mov
mov
and
mov
jmp
fdiv
add
jbe
fdivrs
ret
outsl
xchg
push
sbb
cmc
mov
dec
enter
repz
lcall
jge
push
test
orb
out
fwait
dec
in
ds
or
loop
mov
push
add
push
xor
mov
ret
lock
cmp
movsl
pop
arpl
xchg
jecxz
xor
and
mov
pop
mov
std
test
pop
or
hlt
fidivrs
jae
add
in
mov
faddl
outsb
push
and
js
dec
ficoml
les
enter
fstpl
mov
mov
dec
sub
test
xlat
into
mov
aad
jle
stos
outsb
outsl
sub
mov
lods
jnp
cmp
cmp
lret
add
psraw
mov
inc
dec
cmp
sub
loopne
nop
mov
in
dec
or
mov
mov
adc
adc
fcmovne
cmp
dec
pop
shl
xchg
repnz
outsb
fidivrs
jle
pop
cs
mov
push
test
std
add
xchg
testl
rcl
inc
shr
cmp
out
cmp
jecxz
cmp
xchg
arpl
cmp
dec
insl
push
outsb
stc
add
sbb
sahf
xchg
call
and
int
pushf
jno
adc
mov
xchg
adc
sbb
ss
adc
mov
je
xchg
rolb
or
fcoml
mov
ficompl
rolb
mov
sub
fwait
inc
pop
iret
addr16
push
lcall
lahf
lret
in
ss
fucomp
iret
pushf
ja
clc
cmp
push
pop
int3
sar
pop
push
aam
pop
ss
mov
sub
inc
enter
cmp
and
lcall
out
xor
pop
jmp
jb
mov
mov
pop
scas
cs
fucomp
cmp
mov
and
or
push
mov
out
lock
imul
cmc
jbe
ret
int
pushf
sub
bound
divl
imul
pop
or
jb
mov
jbe
add
fadds
sub
leave
mov
push
shrb
push
out
ret
cmpsl
push
inc
xchg
inc
fwait
cld
insl
sbb
mov
add
fwait
scas
mov
call
jb
orb
aad
negb
scas
ret
iret
test
mov
push
pop
out
mov
push
xchg
push
push
dec
and
cmp
in
outsb
xchg
pop
sarb
pop
ljmp
xor
sub
and
jb
shll
mov
addr16
add
mov
jae
adcl
rorl
stos
mov
adc
cwtl
stc
dec
and
pop
bnd
ja
das
push
cmp
testl
push
push
loop
jp
mov
mov
xor
mov
nop
negl
pop
xchg
aaa
inc
or
mov
cld
je
test
add
enter
dec
data16
shll
cli
mov
insl
lock
scas
xchg
sbb
cmp
push
jl
jmp
jo
xor
xchg
dec
push
add
mov
push
mov
add
xchg
into
push
or
sub
insl
jo
test
dec
inc
ficompl
les
aaa
jmp
test
in
adc
sub
push
aam
push
mov
les
mov
sub
sbb
out
cmpb
adc
dec
out
ja
and
in
loopne
cld
jp
cltd
sub
and
inc
pop
push
mov
xchg
mov
subl
mov
jp
sahf
jns
pop
movl
pop
and
scas
insl
outsl
nop
pop
jmp
ror
js
cltd
mov
sbb
jmp
mov
or
xlat
fisubs
loopne
dec
pop
cmc
xor
std
jmp
push
cmp
mov
and
xchg
or
add
test
test
idivb
push
sub
dec
dec
mov
push
push
dec
mov
mov
scas
test
imul
and
into
sti
in
mov
jne
bound
or
add
or
sbb
out
out
test
imul
cltd
mov
sti
mov
cs
or
sub
out
jge
jmp
cs
jmp
and
xor
stc
mov
pop
in
inc
mov
mov
mov
sub
jbe
test
insl
push
sbb
add
lcall
cld
xchg
adc
ret
dec
out
inc
movsb
mov
push
inc
sub
fcoms
cwtl
int3
ljmp
cs
test
imul
test
xchg
lock
popa
aas
add
push
sub
es
jbe
dec
out
and
dec
pop
fwait
pop
inc
fwait
in
in
xchg
sbb
or
jno
pop
rol
outsb
push
scas
cmp
xchg
dec
fsubrl
push
sub
pop
sub
sbb
mov
mov
sarb
outsl
repz
lcall
movsb
ds
xor
jg
enter
cmp
jb
push
sbb
inc
das
pop
fdivs
fisttpl
pushf
incb
and
mov
popf
fs
fnstenv
push
nop
adc
roll
in
in
gs
push
scas
mov
subb
inc
mov
popa
xor
fisttps
stos
jl
icebp
and
and
lds
xor
pop
sub
stc
adc
sub
dec
pushf
mov
pop
dec
cmpsl
sub
cmpsl
jg
sar
dec
mov
les
cmpsl
xchg
sbb
cmpsb
mov
xor
adc
ja
adc
ss
filds
idivl
mov
stc
pop
mov
jb
lock
mov
arpl
aad
pop
jne
outsl
in
mov
enter
mov
xchg
push
jns
sbb
outsl
add
sub
dec
push
xor
ret
sti
ds
inc
adc
leave
cltd
push
adcl
cmpb
mov
dec
xor
pop
inc
lods
adc
cmp
dec
mov
std
aaa
or
xchg
ficompl
mov
fadd
in
fmull
mov
pushf
imulb
jae
inc
notl
mov
lcall
mov
pmullw
ljmp
jg
fimuls
push
mov
bound
xchg
into
addl
out
xor
inc
dec
pop
add
xorb
push
sarl
mov
popa
mov
fldt
push
xchg
outsl
mov
mov
pop
jmp
jnp
addr16
test
sub
lcall
fcmovu
mov
xlat
jg
and
and
cmp
out
xchg
das
xchg
or
lds
ljmp
push
roll
test
jnp
dec
rorb
xchg
pop
dec
jle
sarb
ret
scas
enter
in
jmp
test
test
cltd
adc
clc
inc
andl
loop
dec
add
xor
xchg
out
ljmp
jo
mov
jg
sar
mov
add
pop
sub
inc
in
mov
addr16
mov
add
mov
push
mov
setle
jne
out
xchg
scas
sub
inc
sbb
adc
jmp
addr16
jb
stos
cmp
cmpsl
in
sbb
jmp
xor
xchg
aas
mov
enter
inc
fldcw
movsb
inc
add
mov
mov
xchg
add
sbb
mov
outsl
ret
sub
in
jg
xchg
lock
lods
jecxz
div
cwtl
repz
xchg
add
loope
ja
rorl
xor
lret
rorl
pop
inc
xor
inc
dec
stos
fnsave
dec
enter
dec
adc
xchg
scas
pop
data16
jnp
jnp
int3
jb
pop
int
inc
test
sbb
cmp
xor
int3
dec
popf
leave
and
outsl
aas
fisttpl
dec
sahf
fdivrs
sbb
mov
and
jo
add
clc
mov
movsb
into
and
pusha
pop
adc
add
mov
outsb
mov
movsl
mov
or
mov
inc
jo
shlb
sbb
and
xor
nop
or
lret
cs
sti
bound
idivl
sbb
xor
push
pop
movsl
pop
xor
sti
repnz
pandn
bound
push
orb
mov
fisubl
push
adc
fldt
dec
enter
in
addr16
adc
aas
cmpsb
push
mov
push
mov
stos
outsl
adcl
cltd
or
iret
xchg
sbb
adc
dec
sub
lret
xor
lret
into
shrb
int3
decl
rcrl
adc
into
popf
jns
test
std
adc
data16
lahf
fdiv
addr16
cmp
jb
es
xor
cmpsb
mov
adc
dec
adc
sub
push
cmp
inc
and
test
lock
mov
mov
imul
test
sbb
inc
inc
ljmp
inc
insl
shll
pop
sub
push
loopne
loope
push
mov
loopne
pop
or
xor
add
and
scas
jmp
iret
and
xchg
fdivp
pop
dec
fsubrl
lret
pop
enter
outsl
ja
push
sahf
mov
or
cmp
test
xor
cmp
pop
or
in
or
xor
insl
pop
push
mov
push
jecxz
dec
push
loopne
push
sub
push
inc
bound
pop
jno
push
cmp
repz
jge
je
lods
add
jg
add
in
push
adc
fists
sub
mov
sbb
mov
jae
insb
sub
sbb
lods
lock
jl
cmp
rorl
xchg
ja
sub
xchg
dec
inc
sbb
jo
sub
shll
xor
xor
dec
pop
loopne
lds
jg
imul
and
push
popa
xchg
ret
bnd
aam
repz
ret
mov
mov
dec
popa
mov
lods
addr16
push
notl
sub
shll
xor
mov
mov
pop
xlat
jns
outsb
inc
int3
adc
je
pop
xorb
es
mov
jmp
lret
outsl
sbb
jp
mov
cmpsb
insl
cld
adc
fwait
dec
mov
cmp
les
mull
fsubs
pop
pusha
aad
add
js
add
pop
lods
mov
into
jnp
cmp
scas
or
inc
dec
cmpsl
mov
push
aaa
push
repz
push
xlat
pop
nop
pushl
out
cmp
xchg
pop
xchg
scas
jae
or
push
sub
in
inc
push
stos
xchg
ret
or
dec
arpl
sbb
clc
imul
adc
mov
pop
cmp
aaa
jns
sahf
cmp
cli
push
faddl
loopne
pop
sbb
mov
xchg
add
repz
add
fdivl
sub
jns
pop
sbb
ds
mov
xchg
jle
nop
leave
call
stc
stc
xchg
mov
xlat
iret
mov
jmp
mov
sbb
push
jg
add
frstor
inc
xor
fstpt
mov
movsl
sub
cwtl
lea
rcrb
clc
in
daa
xor
or
pop
add
mov
add
clts
fisttpll
fdivrp
les
dec
lahf
mov
jg
cmp
sti
and
adc
setne
push
inc
out
rolb
out
fldenv
dec
xor
int
fildl
jmpw
and
iret
jo
push
into
mov
dec
mov
aam
jp
xchg
mov
sub
js
aam
jp
stos
dec
repnz
pop
repz
mov
lret
lock
aaa
leave
lahf
adc
inc
adc
jmp
jnp
fdivrl
add
add
leave
out
fists
lock
mov
sub
cli
add
test
lahf
add
lret
aaa
rorb
xor
inc
imul
jb
xor
cmp
sbb
or
cs
cwtl
xchg
outsl
sub
or
jbe
mov
add
faddl
mov
lods
cltd
inc
daa
dec
aas
lcall
mov
arpl
cmp
cmpsl
dec
test
sub
mov
out
mov
rclb
cltd
add
shl
js
sti
or
jo
jnp
and
std
leave
jle
push
add
icebp
subb
add
push
and
roll
jb
int3
icebp
push
stc
stos
shll
out
mov
xchg
cmpsb
imul
or
adc
out
fucom
jb
push
addl
mov
inc
test
mov
dec
inc
jne
cmp
jecxz
jmp
imul
sti
push
xor
jne
xlat
dec
dec
sti
aaa
sub
shr
push
mov
imul
js
add
push
inc
sbb
aam
mov
and
inc
fildll
mov
insb
loope
mov
mov
pop
cltd
xor
or
push
and
stc
cwtl
mov
pop
adc
jae
aam
xchg
add
lods
mov
jge
mov
or
stc
jns
xchg
aaa
mov
pop
sbb
in
js
cmc
pop
xor
int3
mov
inc
bound
incb
xor
jmp
neg
lcall
mov
test
cmpb
sti
into
mov
out
mov
in
push
movsl
xchg
cmp
jle
out
push
repnz
xor
test
imul
movsl
sbb
fwait
es
lock
outsb
or
cmp
push
out
shlb
push
lcall
pusha
dec
adc
sub
sbb
mov
push
bound
mov
sub
pop
call
jbe
ret
sbb
inc
repnz
in
push
jne
jmp
add
cmp
pop
pushfw
divb
das
mov
ja
scas
fcomps
adc
pop
mov
fidivs
add
xlat
jg
push
xchg
pusha
icebp
jmp
mov
mov
xor
and
mov
lret
in
or
aaa
cmpl
insl
cmpsl
ficoml
xchg
dec
pop
insl
test
jb
cmp
jl
testb
outsb
lret
ss
test
fisttpll
mov
test
jmp
add
call
or
mov
orl
insl
cli
stos
fcoml
sbb
stc
sub
nop
sbbb
and
sub
jg
dec
adc
cwtl
loopne
xchg
nop
pop
push
sub
es
cmp
sbb
xor
rcrb
mov
sbb
cmpsb
rclb
mov
pusha
push
jne
fidivl
jae
push
add
mov
fimull
mov
inc
lret
stos
negl
xchg
xchg
stos
xchg
andl
mov
xorl
dec
pop
in
mov
aaa
inc
mov
jno
and
ss
pop
repnz
push
loop
fwait
mov
scas
cwtl
repz
lods
adcl
iret
xchg
add
cpuid
inc
pushf
ja
push
adc
shrb
cmp
cmp
ljmp
push
fucomp
aaa
fsubrl
scas
lea
mov
mov
fmuls
mov
xchg
and
frstor
jmp
and
push
inc
out
test
outsb
xchg
xchg
pushf
test
js
ja
ja
fimuls
test
xor
fnstenv
pop
jl
into
clc
lcall
mov
sbb
mov
mov
dec
into
lcall
cmp
push
or
fwait
or
lea
pop
mov
iret
lods
imulb
jg
cmp
mov
add
xchg
fstl
les
movmskps
mov
insl
lods
outsb
xor
xchg
pop
stos
inc
or
xchg
std
xor
paddw
cmp
movsb
cmp
mov
scas
mov
inc
loope
xor
pop
and
lods
mov
mov
insl
shl
xlat
int
fwait
add
inc
fs
lret
in
rclb
in
mov
pop
adc
or
jae
out
xchg
ret
mov
mov
inc
adc
jle
lret
out
mov
popa
test
sub
sarl
lret
loop
sar
roll
mov
out
mov
mov
jne
mov
int3
xor
jne
pop
push
leave
sbb
jnp
test
mov
in
or
xchg
or
add
sub
cmc
lock
es
sti
add
inc
sti
push
push
into
or
dec
jmp
or
lock
adc
clc
mov
mov
daa
lea
adc
out
inc
andb
jmp
test
lock
enter
mov
adc
mov
mov
rcll
imul
jecxz
orb
std
or
dec
mov
xchg
push
add
lahf
lret
into
js
and
lretw
outsb
cltd
sub
mov
or
rcll
pusha
fldt
xor
les
mov
outsl
shlb
jp
iret
mov
test
inc
in
push
in
ficoms
fs
inc
push
adc
imul
jo
lods
lods
and
mov
sub
xor
xor
idivl
sahf
mov
mov
push
imul
sub
sub
rcrb
push
jg
mov
jecxz
mov
jnp
jnp
mov
outsb
jno
not
and
add
and
das
mov
lock
inc
fisubs
mov
or
lcall
cltd
xchg
mov
xchg
nop
clc
shl
xor
rcrb
add
stos
leave
push
mov
in
mov
addb
int
pminub
push
orb
outsb
fucomip
enter
stc
inc
daa
cmpsb
and
aam
sbb
aad
sbb
mov
vfmadd213ps
mov
pop
jmp
sub
inc
lret
push
stc
and
xor
xchg
pusha
or
jl
pushf
movsl
enter
inc
lods
jmp
mov
gs
test
push
and
pop
jnp
call
lcall
nop
hlt
cmpsb
andb
or
aaa
sbbb
jno
in
addb
in
faddl
push
aaa
jmp
leave
dec
stos
mov
cltd
sbb
loop
add
test
cmp
outsl
xchg
test
inc
add
aad
pop
adc
popf
js
cmpsb
hlt
push
or
add
xchg
in
pushf
fbld
loop
sub
aad
adc
arpl
push
iret
lret
cmp
xor
cltd
fstps
insl
data16
mov
push
in
lret
or
aad
fyl2x
ficomps
repz
cmp
push
sub
jnp
bnd
jge
adc
popf
mov
shl
pop
xchg
lahf
lahf
xor
and
dec
dec
mov
mov
sbb
jno
and
sbb
add
movsl
mov
pop
cmp
xor
into
test
or
out
cmc
sub
dec
jg
add
and
cmpsb
jecxz
je
sbb
adc
or
add
push
lock
repz
push
or
test
jb
pop
xor
subl
insl
mov
rol
adc
scas
add
dec
mov
adc
or
add
aad
add
mov
out
or
mov
jmp
adc
mov
dec
mov
jecxz
push
mov
ret
push
push
inc
jl
pushf
mov
sarl
fs
xchg
sbb
pop
mov
mov
cmpsl
jo
cmp
lods
stos
adc
xchg
jae
cli
dec
xchg
in
push
dec
dec
and
sbb
jno
dec
scas
pop
bound
pop
ret
or
stos
or
repz
rcrb
push
sbb
aam
lahf
dec
xor
sbbl
int3
call
and
pusha
mov
sub
fcompl
sbb
inc
xor
jo
fildll
lds
mov
lock
add
mov
stc
pop
jo
pop
dec
or
inc
mov
jle
jmp
mov
lahf
xor
push
scas
dec
sbb
hlt
lock
pop
mov
dec
or
inc
ret
inc
fsts
les
rorb
cmp
lock
mov
fsts
cmp
mov
testl
jg
sbb
mov
insl
xchg
adc
shrl
push
call
daa
cmp
repz
ljmp
pop
fcom
das
mov
or
cwtl
insb
mov
stos
jns
add
sbb
es
arpl
fld
push
add
or
addb
pop
hlt
push
pop
pop
clc
or
sub
add
out
adc
aam
adc
shlb
out
inc
insb
out
adc
roll
out
das
inc
insb
xor
fs
cmp
sbb
xor
mov
cmp
xchg
movsb
rolb
aam
xor
lods
pop
addb
pushf
lds
lds
mull
jle
imull
push
pusha
cmc
adc
call
push
jp
jmp
lcall
push
pop
lcall
dec
leave
and
sahf
lahf
imul
cmpsb
inc
or
add
les
lahf
and
in
into
pop
xchg
mov
loop
xchg
push
pusha
mov
jmp
jge
cltd
xchg
or
int3
lcall
mov
int3
out
scas
xor
or
mov
inc
jbe
clc
mov
les
inc
jg
jle
mov
push
clc
std
loope
add
adcl
inc
push
xchg
lods
pop
loopne
dec
adcl
aad
lahf
shrl
xor
push
mov
out
hlt
push
out
push
cmovbe
or
xor
inc
mov
dec
lahf
call
push
cs
iret
aam
sub
imul
aaa
adcl
cld
out
ret
xor
scas
mov
test
jg
xchg
add
jl
ret
xor
out
lahf
repz
inc
adc
xchg
enter
fisubs
and
outsl
mov
aaa
xchg
push
shll
xor
sub
sub
push
mov
imul
push
bound
xchg
movsl
cltd
and
adc
lahf
arpl
nop
mov
xorb
jnp
cmp
sbb
ret
sbb
xchg
pop
into
mov
ja
ja
push
jp
mul
rorl
into
les
xlat
push
and
in
leave
idivb
andb
sub
les
shll
xchg
incl
jo
pop
insb
jbe
mov
fcmovnbe
movsb
mov
ds
mov
pop
hlt
loopne
inc
sub
sti
rorb
sbb
add
cmpsl
mov
cmp
stos
mov
movsl
dec
loope
hlt
xchg
mov
xchg
dec
and
adc
call
and
and
inc
insb
and
js
clc
push
rcl
loop
pushf
sahf
es
aam
inc
andl
adc
xchg
out
mov
mov
or
rcrl
sub
inc
add
cli
pop
cmp
test
fists
jle
mov
rorl
jge
ret
jmp
sub
push
in
out
bound
fiaddl
hlt
cmp
std
enter
sbb
test
in
inc
roll
mov
mov
sub
inc
popf
outsb
jnp
test
clc
push
xchg
cld
les
jge
adc
lcall
ss
jle
in
mov
movsl
inc
xchg
sub
scas
imul
or
and
ljmp
adc
loope
jg
cmp
iret
and
sub
gs
adc
xor
fsubp
outsl
cwtl
pop
out
jecxz
xor
cmp
pusha
int
out
add
loopne
push
adc
sub
shlb
jl
idivl
sarl
in
push
fcoms
dec
mov
mov
cmp
jns
inc
sbb
add
add
pop
shlb
sbb
shll
jl
jge
test
fmul
pop
mov
sub
jmp
cmp
cmpsb
ret
push
xchg
sti
cs
sub
or
cmp
jle
push
mov
jg
mov
inc
fldenv
in
dec
js
push
inc
push
or
pop
inc
lods
and
sbb
data16
jmp
shlb
iret
ja
shll
cld
xchg
das
cmp
iret
addr16
cld
push
outsb
aad
jo
dec
cmp
xchg
mov
ret
rol
mov
ret
bound
jb
and
or
jl
std
cmp
loope
cli
or
pop
push
sub
movsb
push
jne
loop
pop
inc
ja
sub
movsl
cmpsl
mov
xor
xor
jo
inc
push
aad
test
mov
add
ret
and
fs
nop
sbb
pop
xchg
xchg
nop
int3
cmp
shrl
inc
int
xchg
cmp
xor
jo
test
jne
movsb
imul
stc
mov
jg
fwait
push
mov
fdivrl
test
jns
adc
lods
lods
push
cmp
testl
xchg
xor
push
push
in
adc
leave
mov
and
imul
push
daa
stos
xor
cmp
fidivrl
sbb
outsb
mov
xchg
test
push
lods
lds
dec
enter
push
xchg
cmc
adc
and
pop
dec
inc
push
and
adc
lahf
dec
pop
cmpsb
sti
inc
inc
push
fisubrl
push
mov
sub
jecxz
jg
test
lods
jge
xchg
insl
pusha
jg
testl
movsb
mov
iret
or
scas
mov
push
add
cmp
loope
xor
iret
mov
jg
mov
das
mov
jg
aam
mov
andl
push
cmp
in
xchg
into
xor
xchg
sub
or
out
outsb
arpl
int3
aaa
and
add
sbb
ret
mov
in
cmovl
and
cmpsb
out
cmp
mov
and
adc
pop
push
out
add
adc
sub
sbb
out
push
jge
dec
movsl
mov
sbbl
jle
push
inc
into
pop
mov
fstl
lea
pop
ja
int
push
push
lahf
sbb
arpl
sbb
shlb
pop
int
xchg
je
lock
ret
push
jne
inc
jecxz
or
xchg
nop
fsubl
and
push
push
int
jg
push
in
dec
out
sbb
cmp
daa
push
outsl
ficomps
jae
in
push
int
dec
xchg
push
or
in
fmuls
push
out
stos
ljmp
adc
or
scas
jmp
add
push
cld
into
clc
jae
inc
sbb
das
ret
jmp
pop
mov
push
jp
sbb
fwait
rcrl
pusha
lcall
jb
xchg
or
jns
pop
popf
inc
outsl
int
ljmp
mov
pop
mov
push
sub
je
sub
or
sub
mov
in
clc
or
jo
mov
pop
pop
fcmovnbe
dec
lods
or
rcrl
push
sub
loopne
outsb
arpl
in
mov
nop
outsl
adc
test
rorb
imul
adcb
add
lock
test
add
and
cmpsb
xchg
out
jg
xorb
bound
jo
fsubp
push
pop
ret
and
dec
sub
add
sub
cmpsb
movsb
incb
lcall
xchg
fstl
cmp
sbb
outsb
mov
mov
mov
jmp
mov
inc
mov
test
push
and
mov
adc
dec
dec
das
popa
jmp
ja
sub
jnp
cmp
xor
jmp
ss
pop
mov
cmp
lock
aam
pop
clc
push
mov
test
decb
adc
jecxz
pop
pop
push
mov
out
jae
pop
xchg
addr16
mov
xor
lret
je
xchg
repz
mov
insb
mov
mov
std
inc
inc
je
je
xor
jmp
mov
aas
mov
jecxz
iret
jmp
push
cmp
sbb
mov
ss
inc
cmp
pop
lds
cmp
shll
insl
xchg
cltd
mov
test
sahf
sbb
adc
xchg
mov
in
inc
mov
mov
popa
jmp
mov
pop
repz
adc
pop
shll
push
push
ljmp
mov
mov
xchg
je
push
test
inc
mov
jge
lahf
mov
movsb
outsl
mov
aas
mov
popf
xchg
jmp
aad
push
fwait
sahf
xor
outsl
adc
push
loopne
popf
lock
pop
call
ret
popf
pop
lcall
xlat
ss
or
dec
mov
sbbl
jmp
outsl
fisttpl
into
or
mov
fistl
lods
scas
sub
mov
mov
in
fcomps
sub
cmp
push
outsb
inc
das
test
push
xchg
mov
sbb
jbe
fmul
lret
rolb
push
jns
mov
push
clc
lret
insb
test
pop
lret
inc
stos
pop
pop
xlat
jl
aam
mov
pop
jg
mov
pop
mov
jnp
jge
icebp
xchg
inc
mov
jae
inc
sti
and
lds
xor
loop
cs
sbb
xor
inc
xor
cmpsl
xor
jmp
add
fildll
mov
mov
icebp
sbb
mov
jbe
adc
adc
xlat
mov
iret
cmp
test
stos
roll
in
mov
outsl
inc
out
into
sub
inc
mov
inc
mov
lret
push
sbb
scas
pushf
ret
pop
sahf
dec
ret
je
insb
lret
push
jns,pt
imul
lret
lcallw
sub
pushf
cwtl
scas
dec
std
scas
movl
pop
or
inc
add
mov
in
push
mov
int3
fptan
frndint
mov
inc
imul
imul
sbb
sub
mov
repz
mov
xchg
xor
jp
cmp
mov
popa
je
daa
addr16
dec
pop
mov
mov
or
adc
and
testl
lea
inc
popa
mov
sub
inc
mov
mov
ja
in
mov
or
mov
jge
jecxz
push
pop
inc
les
fidivrl
jnp
sbb
ss
xor
sbb
cmp
adc
sbb
mov
or
or
xor
sub
add
adc
push
xchg
jae
jp
mov
mov
add
sbb
stc
sbb
jle
jnp
mov
iret
bound
dec
out
out
mov
mov
push
xlat
fimull
outsl
push
fs
xor
xchg
inc
aaa
mov
xor
or
lcall
subps
jbe
mov
mov
dec
data16
fists
or
je
out
shlb
mov
push
scas
xlat
cmp
leave
sub
dec
xchg
jecxz
cmp
and
imul
ret
and
sbb
jle
cmp
test
repnz
mov
mov
iret
adc
or
sbb
pushf
lds
clc
adc
or
mov
jg
aad
push
xchg
add
push
cmpsb
stc
popa
push
pop
subb
cmp
xor
push
push
cmp
sbb
in
mov
xchg
stos
rorl
xor
icebp
mov
fcomip
dec
add
mov
xor
insl
mov
popf
or
daa
mov
into
js
mov
mov
xor
not
enter
xchg
dec
pop
push
sbb
xchg
mov
leave
dec
adc
sub
scas
push
xchg
sbb
outsl
into
pop
movsl
inc
jle
sti
or
mov
icebp
and
add
xchg
mov
dec
insl
add
push
fmuls
shlb
in
xchg
ja
orl
or
test
add
jnp
push
cmpsb
scas
jle
popf
push
xor
push
add
ret
iret
jnp
and
ret
pusha
push
adc
out
dec
mov
out
repz
imul
test
lea
hlt
out
lret
xlat
enter
cwtl
in
xor
jne
mov
stos
mov
mov
pop
adc
sar
jb
bound
inc
add
mov
ds
mov
aam
pop
lods
push
xchg
mov
rcll
xchg
jae
jae
push
fcoml
jne
movsl
pusha
stos
int
push
bound
int3
cmpsb
ret
xchg
xlat
pusha
adc
xor
enter
sar
xchg
mov
lcall
arpl
scas
jecxz
addl
cmpsb
movl
rol
or
lahf
and
xchg
mov
mov
mov
xchg
pop
xchg
cmc
std
sbb
pop
out
or
xchg
icebp
popa
out
jmp
adc
in
fstpt
xchg
dec
in
lods
cmp
adc
incb
lret
icebp
dec
jp
and
xchg
cmpsl
shlb
mov
imul
mov
push
mov
mov
and
xlat
cmp
ss
lcall
and
inc
sti
in
jne
jmp
lahf
sub
daa
mov
jno
cmp
sti
xchg
or
pop
stc
out
mov
push
ss
icebp
hlt
lcall
sub
add
sahf
icebp
cwtl
mov
loopne
cmp
cwtl
or
lods
mov
call
cmp
pop
or
sbb
xor
fwait
jno
xor
push
mov
leave
imul
ja
movsl
xchg
shll
imul
out
test
push
cmp
popa
cmp
hlt
mov
xchg
sti
or
movsb
insb
mov
add
jl
mov
shrl
sbb
cltd
jge
or
dec
jp
fadd
xchg
xchg
cmpsl
clc
mov
mov
adc
push
aad
lcall
cmp
inc
and
mov
je
lods
dec
sti
adc
mov
in
dec
loopne
pop
xchg
jmp
stos
cld
pop
xor
pushf
adc
push
xchg
mov
daa
repz
pop
shl
pop
sub
xor
int
pop
mov
push
insb
in
mov
lahf
mov
push
addr16
inc
add
push
mov
dec
cltd
inc
sbbl
inc
movl
push
ret
das
lret
add
jbe
or
mov
dec
test
mov
jl
xchg
stos
fwait
push
clc
cmp
mov
out
out
xchg
inc
ficoml
test
xchg
cli
cmp
pop
cmp
insl
cmp
xchg
and
mov
xchg
add
jb
aam
push
bound
aaa
xor
xor
pop
ficompl
imul
jle
frstor
lcall
sbb
out
mov
adc
dec
dec
or
adc
aam
fstpt
je
ss
inc
jl
lahf
or
or
pushf
add
testb
adc
xorl
popa
jbe
xor
test
test
xor
mov
jmp
sbb
push
int
stc
imul
jbe
or
test
lods
out
daa
aaa
sbb
cmp
xchg
sbb
adc
arpl
lret
cli
addl
lods
sbb
mov
sahf
cmp
in
repz
cmc
outsb
jmp
aas
sbb
inc
mulb
repnz
std
mov
sbb
mov
push
enter
and
ficompl
add
imul
push
test
lds
aas
scas
lret
lret
sub
jne
das
or
cli
and
loopne
aaa
xchg
and
dec
jmp
in
outsb
pusha
adc
int
xor
push
imul
mov
jle
push
inc
adc
xor
fyl2xp1
or
add
adc
daa
pop
stc
jecxz
cmpsb
xchg
mov
das
lahf
pop
pop
jg
add
cwtl
jp
mov
in
bt
or
pop
imul
lock
test
iret
or
fsub
xor
js
ljmp
cmp
adc
add
add
jns
scas
push
scas
inc
mov
xchg
dec
shlb
loop
out
pop
and
dec
lock
pop
clc
push
fisubrl
mov
repz
outsl
pop
mov
stos
inc
fwait
pop
mov
ret
inc
stos
add
sbb
jl
aaa
push
jp
push
xor
dec
or
imul
call
orb
mov
jg
shl
mov
push
out
push
xchg
pop
or
gs
jmp
jmp
out
icebp
adc
movsb
jnp
addl
xchg
jno
xor
loope
rorb
mov
loop
lahf
adc
je
xchg
imul
ja
pop
xor
jne
gs
movsl
stos
repnz
rolb
dec
shl
divl
dec
xor
mov
aam
aas
stos
popa
or
imul
mov
mov
cmp
inc
stos
dec
push
int3
xchg
cmp
je
and
aad
addl
push
xchg
in
leave
ficomps
push
std
xchg
ja
mov
call
or
jnp
xor
outsl
in
incb
aam
mov
xchg
cmp
sub
xor
jnp
movsb
sbb
sbb
int3
jnp
pop
insl
cltd
test
adc
leave
mov
jmp
xchg
jmp
push
pushf
lock
fbstp
xlat
and
cmc
in
cltd
gs
sub
call
pop
movsb
leave
dec
push
imul
js
notb
mov
out
mov
push
xchg
scas
std
push
jge
sbbb
push
test
mov
lods
xor
inc
push
pusha
cs
xor
call
mov
xchg
test
jp
lea
ss
cmp
imulb
fs
lock
push
add
sbb
push
lahf
xor
test
xlat
std
aam
or
nop
push
mov
rcrb
icebp
or
add
sbb
and
mov
mov
cs
fs
mov
sarl
lods
jmp
xor
jecxz
fildl
adc
cmp
popf
xlat
aaa
cmp
daa
push
or
aad
insl
cmp
les
cwtl
stc
ret
sub
jo
jbe
sub
mov
les
stos
mov
insb
scas
push
orl
daa
push
xchg
and
xor
cmp
mov
pop
clc
out
in
popa
repz
rcr
mov
xchg
xchg
mov
and
and
push
xchg
aad
cmpsb
fidivrl
leave
push
mov
stc
add
imul
jle
popa
pop
mov
outsb
mov
sub
xor
cmp
icebp
inc
mov
test
sahf
data16
add
int
leave
out
inc
arpl
lret
cmp
daa
push
sub
inc
pop
inc
movsl
or
dec
inc
lcall
pop
pop
xchg
push
imul
push
sbb
inc
sub
repnz
call
andl
shrb
hlt
and
fcomps
push
cmpsb
or
test
outsb
clc
mov
pop
call
lds
sub
jge
xor
popf
test
dec
cmpsb
cs
andb
lcall
stos
shll
icebp
lock
xlat
push
daa
mov
je
outsb
dec
jmp
movsl
adc
jle
mov
mov
out
repz
repnz
enter
mov
push
and
mov
fnstenv
in
outsb
jb
jno
lcall
xchg
in
sahf
xchg
sbb
and
and
insl
je
pop
fistpl
xchg
fdivrs
ds
pop
xchg
loopne
xor
mov
jg
mov
mov
pop
iret
cli
jno
mov
or
stos
in
loop
and
xchg
cmp
add
push
mov
dec
dec
push
or
das
xchg
ss
insl
shrl
cmp
imul
push
jns
pop
jecxz
adc
lods
adc
in
loope
push
pop
das
xchg
loopne
inc
rcll
dec
daa
or
decl
xor
push
mov
pop
leave
dec
mov
mov
mov
test
jl
and
mov
sbb
jp
xor
sub
decl
inc
mov
inc
std
jge
mov
xor
mov
fnstenv
or
movsb
test
or
imul
sub
mov
loop
mov
jl
dec
testb
jmp
outsb
lcall
add
or
inc
adc
out
pop
sub
inc
mov
xchg
sbb
or
in
jg
xor
lods
les
add
push
roll
push
fiadds
inc
std
imul
icebp
test
lret
inc
cli
jne
push
inc
cld
and
inc
sub
push
add
sbbb
inc
mov
into
mov
cs
cmpsb
aas
fnstenv
mov
jb
xchg
and
test
sub
decb
jns
ds
stos
gs
lret
int3
sahf
xchg
mov
mov
movsb
sbb
sar
lea
arpl
mov
test
sti
icebp
aam
pop
stos
cmp
adc
cmp
inc
nop
outsl
jmp
mov
inc
xchg
jl
lock
xchg
xchg
loopne
jl
dec
loope
je
mov
adc
enter
rolb
test
push
jmp
out
mov
ss
and
inc
mulb
pusha
mov
pushf
imul
jo
iret
sbb
adc
jmp
sbb
push
in
loop
sbb
int
je
popf
mov
jbe
adc
bound
inc
mov
xchg
dec
cs
sub
aas
push
mov
pop
cmpsl
mov
dec
flds
stos
ret
insb
ss
rolb
out
aas
add
cmpsl
out
cvtpi2ps
fdiv
out
testb
sbb
pop
pushf
sbb
dec
jne
sbb
and
pop
out
mov
movsb
mov
pop
jle
xor
sub
and
orl
lahf
fsubrl
jb
sti
cld
test
subb
cs
fistl
outsl
stos
iret
mov
add
pop
fldt
je
xor
inc
sub
jbe
pop
movsl
push
pop
jp
fnstsw
cmp
cmp
sarl
std
mov
pop
scas
mov
popf
mov
pop
rclb
popw
roll
insb
inc
loopne
add
lahf
mov
sub
push
imul
rcl
out
setae
in
jae
mov
or
xlat
push
hlt
sbb
lcall
cmp
cld
push
jmp
popa
push
insl
aas
test
lods
aad
mov
push
adc
movsb
and
pop
push
lods
sbb
push
stos
addr16
rolb
add
pop
and
jno
mov
xor
cmp
cmp
je
daa
inc
fucomip
loope
and
and
cmp
int3
rolb
mov
lds
xchg
jl
sarb
push
icebp
jbe
and
js
stos
and
addr16
ja
sarl
push
scas
test
and
pop
or
arpl
out
lcall
add
cmc
in
insb
cli
mov
lcall
xor
pop
icebp
lahf
rcrl
idiv
add
cmpsl
sub
mov
outsl
adc
mov
jp
jo
pusha
outsb
shl
jae
cmp
loopne
clc
dec
ljmp
sbb
xchg
or
push
aas
fnsave
lret
test
das
mov
cltd
pop
inc
mov
rcrl
or
stos
lds
cli
movsb
in
bound
popf
lret
sub
mov
lea
push
mov
lahf
movsb
bound
sbbl
mov
xor
sub
int
nop
xchg
dec
jg
xor
mov
fbld
sahf
test
mov
ja
repnz
pusha
sub
mov
jbe
inc
push
rcll
add
xchg
pop
insb
jl
cmp
or
fldcw
dec
push
sub
xchg
jb
cmp
aam
shlb
dec
hlt
daa
lahf
jnp
inc
xor
sub
xor
jae
rclb
gs
or
das
pop
nop
xchg
pop
loopne
mov
cmc
inc
pop
lods
loope
mov
nop
js
dec
mov
aas
xchg
and
js
jecxz
jl
mov
jb
pop
jae
je
xrelease
xor
scas
xor
lahf
inc
aaa
xor
mov
into
pop
and
sbbb
jne
out
repnz
mov
loop
int
ret
push
add
pop
sbb
mov
and
clc
xchg
push
enter
xchg
pop
aad
les
and
ret
jg
xorl
stos
pop
or
fwait
test
out
insb
dec
fdivs
fwait
cmp
xor
loopne
clc
clc
pop
add
fucomip
or
gs
insb
je
ret
mov
sub
sti
or
dec
data16
cld
jmp
jle
das
ret
cmp
jp
loope
sub
xor
or
dec
lods
sbb
or
lock
std
stc
gs
call
or
ret
rcrl
pushf
mov
mov
fwait
sti
test
sub
ja
inc
in
pushl
int
mov
lret
adc
push
jmp
test
fstl
scas
adc
xchg
mov
rcrl
inc
stos
xchg
sub
lret
lret
rcr
sarb
jp
scas
jb
sti
mov
std
in
xchg
out
inc
bound
pop
mov
pop
inc
jno
popf
idivb
js
mov
negb
mov
inc
bound
daa
sahf
ror
insl
sub
mov
ljmp
inc
mov
push
sub
leave
pop
leave
ss
add
sar
in
mov
shrb
jl
jle
hlt
push
lret
xchg
jo
ljmp
loope
or
or
add
outsb
movsl
mov
vmwrite
inc
pop
dec
inc
jb
es
daa
and
das
in
outsb
cltd
push
cmp
xchg
sbb
jbe
enter
dec
addr16
decl
insl
mov
xchg
loope
mov
xor
movsl
adc
sub
into
out
push
je
xor
jge
pop
and
adc
fstps
imul
add
mov
jno
mov
ds
add
call
add
sub
xchg
cld
aam
mov
sub
add
push
mov
in
dec
adc
nop
lcall
adc
movsb
xchg
insw
or
xor
push
lock
push
pop
or
scas
les
cmp
sub
ds
or
dec
std
testl
repz
fs
dec
or
sahf
pop
push
mov
pushf
out
test
shlb
ja
or
jbe
cld
fidivrl
sub
push
sti
fldl
shrb
mov
sub
dec
test
sbb
cmp
in
int3
or
aam
jp
popf
cwtl
das
mov
xchg
ljmp
std
push
sub
pop
pop
decl
sbb
jle
jle,pn
mov
xor
inc
popf
lods
cld
je
add
xchg
xchg
je
xchg
add
in
data16
loop
insl
adc
bound
mov
imul
cld
cmp
aad
jge
and
jl
test
arpl
mov
jp
movsb
adc
gs
jl
jp
push
sti
inc
or
cmp
dec
cli
add
mov
scas
or
mov
outsb
fidivrs
cmp
mov
negl
cmp
add
aas
imul
iret
adc
inc
cmp
hlt
loop
iret
int3
xchg
repnz
das
cs
mov
dec
push
adc
xor
fdivl
sub
push
lret
int
push
adc
adc
pop
repz
sub
sbb
push
ljmp
popa
fimull
xchg
push
out
push
test
outsl
jg
xor
xchg
jle
push
ss
out
push
cmp
stos
cltd
jnp
sbb
mov
xor
and
test
dec
dec
dec
jb
cli
in
push
xor
and
mov
mov
int3
mov
je
pop
push
mov
jg
xchg
mov
mov
faddp
test
mov
sub
sbb
repnz
inc
xchg
idivb
dec
cwtl
lahf
cs
sbb
dec
outsl
push
xor
enter
rolb
data16
out
cmp
sbb
cmpsl
pop
popf
nop
push
mov
cmp
dec
in
gs
and
mov
jle
mov
into
jns
pushf
push
sub
into
jnp
call
jae
or
xchg
pusha
out
and
xchg
cltd
sarl
rcll
jno
dec
shll
push
cmp
or
mov
les
cmp
idivb
dec
rcrb
jb
popf
pop
popf
cwtl
andb
scas
jnp
mov
add
jge
push
sub
pop
dec
in
leave
inc
push
inc
and
shll
in
loop
adcb
or
scas
inc
lret
jbe
movsb
test
lock
cltd
popf
jg
add
dec
nop
or
and
lret
sarb
ret
cbtw
cltd
lret
pop
cmp
loope
test
jns
cmp
inc
flds
mov
cmpsl
dec
filds
in
sti
mov
aam
into
leave
ljmp
mov
stos
stos
movntps
in
fiaddl
in
jp
mov
jmp
or
arpl
lea
shlb
mov
cmp
ljmp
int
arpl
lcall
ret
inc
filds
mov
out
je
lret
xchg
imul
or
cltd
sti
loope
push
idivl
xchg
sahf
mov
enter
lods
push
cmpsl
xchg
pop
loopne
addr16
cmp
sub
fdivrs
fndisi(8087
ds
cmp
and
and
mov
jns
lea
jecxz
js
dec
sbb
pop
in
cwtl
roll
imul
sub
xorl
dec
repz
jecxz
xchg
lret
je
dec
insl
call
pusha
jle
push
aas
mov
fs
push
sbb
in
stos
pextrw
mov
inc
jns
sub
xchg
insl
fwait
lods
insl
jg
inc
ja
inc
mov
lret
push
add
imul
adc
xor
sbb
jne
popl
push
dec
cmp
ret
or
xchg
daa
dec
sub
or
jae
shlb
idivl
stos
xor
adc
cmpsl
cld
imul
xlat
inc
cmp
movsl
or
adc
iret
daa
imul
loope
call
es
and
orl
add
xchg
inc
mov
mov
adc
xchg
and
xchg
adc
lahf
pop
adc
rorl
jne
ret
xor
mov
sub
cmpsb
iret
bound
push
mov
js
push
and
jns
pop
rcrb
dec
test
outsb
xor
jp
cs
lcall
cld
mov
xor
xor
testb
sbb
add
or
js
ret
jo
ficoml
mov
fldenv
lret
aam
xor
xchg
dec
nop
pop
lahf
lock
xchg
test
enter
popa
cmp
aad
daa
dec
push
mov
mov
hlt
pop
cmc
push
cli
imul
push
aad
pop
andl
ljmp
data16
mov
sbb
adc
pop
test
sti
jnp
scas
lock
iret
orl
cmpsl
inc
int3
fnsave
jbe
fistpll
loope
inc
add
insb
or
ja
push
test
orb
xchg
scas
repnz
negb
add
lea
cld
jg
cmp
xor
sub
xlat
xor
outsb
and
pushf
sbb
mov
pop
cli
test
enter
mov
ja
arpl
sbb
dec
test
in
push
xchg
sahf
xlat
les
jmp
aad
nop
mov
jmp
jle
cld
cwtl
sub
inc
pop
gs
xchg
cmpsb
or
adc
xchg
inc
push
xlat
mov
ljmp
dec
add
popf
andl
inc
fdivs
jecxz
shl
jno
inc
shr
lret
insb
mov
das
jbe
loopne
sub
push
loop
or
sub
or
lods
adc
mov
adc
cwtl
hlt
out
xchg
xor
xor
mov
aam
je
cmpsl
jp
push
push
movsl
push
out
cli
sub
in
ret
pop
data16
das
fdivr
or
sti
sbb
stos
out
ss
add
scas
mov
xchg
into
ret
push
and
cmp
inc
push
flds
out
xor
jb
sbb
cmp
pushf
pushf
mov
ficoml
popf
mov
mov
push
fwait
fwait
ss
add
sahf
mov
dec
sti
mov
xchg
push
cmpsl
sbb
xchg
sub
jbe
cmp
int3
sbb
test
aas
or
fldt
adc
repz
iret
es
mov
dec
dec
xor
pop
or
in
cmp
les
sahf
ds
cmp
dec
cmpsl
sub
pop
xchg
rorl
push
mov
imul
sarl
xchg
xlat
ljmp
add
mov
pop
mov
jae
xlat
stos
outsb
fistl
pop
inc
iret
fnstsw
mov
rolb
sbb
add
jb
stos
pop
jne
dec
daa
add
fcoms
hlt
cltd
push
xchg
jne
hlt
std
lds
stos
or
rcl
push
fbstp
sbb
jae
xchg
loope
xchg
dec
and
rorl
mov
fnstsw
or
mov
shrl
jnp
enter
aaa
fisttpl
sub
inc
ss
pusha
mov
out
mov
inc
pop
fdivrl
xchg
mov
mov
ds
push
dec
lock
scas
jl
fldt
mov
jb
loopne
lds
mov
les
ljmp
fstp
insb
out
stos
cmp
jnp
and
xchg
cmp
jmp
mov
icebp
mov
add
outsb
adc
lds
fmul
pop
jg
fisttpl
pop
xchg
dec
sub
out
ror
xchg
mov
jb
enter
jb
and
and
mov
sbb
add
test
xchg
int
xlat
ss
enter
testl
test
clc
dec
pop
in
pop
ret
mov
or
sbb
scas
lea
cmpsb
into
push
fs
cmp
movsl
adc
hlt
xor
mov
adc
mov
imul
aas
push
clc
dec
es
ja
mov
cmp
xor
cwtl
popa
cld
push
and
in
popf
rcr
mov
stos
mov
inc
push
inc
sbb
mov
pusha
jae
mov
mov
mov
and
sbb
sub
fbld
out
add
in
xchg
and
dec
loopne
cmp
test
mov
out
es
mov
mov
mov
call
jo
xor
pop
cmp
je
mov
push
sbb
mov
loopne
test
jns
shll
mov
lcall
mov
cld
lcall
cmp
dec
mov
aas
cmpsb
jle
inc
scas
push
fcomp
aaa
imul
notb
sahf
xchg
out
cmp
mov
inc
adc
js
push
push
cmp
out
in
iret
jnp
push
or
test
sbb
push
cmpsb
out
jb
enter
pusha
std
fisubrl
into
mov
jle
sti
sbb
sub
mov
add
ja
sub
mov
imul
mov
dec
lods
mov
mov
les
mov
scas
push
dec
xchg
imul
dec
xchg
into
or
inc
or
inc
aaa
jle
sub
xor
mov
es
and
mov
jecxz
insb
push
add
loope
xchg
add
push
mov
add
pop
dec
push
add
adc
sub
and
jae
pushf
out
aaa
shr
test
pop
aam
pop
testb
sub
inc
mov
dec
shlb
out
or
call
outsl
dec
ficompl
xchg
dec
test
jno
mov
in
pop
jmp
das
mov
pop
in
xchg
cmc
stos
jb
adc
sbb
or
mov
jl
cld
ret
fcomps
sarl
and
jb
xchg
lock
in
push
add
pop
inc
aam
dec
movsl
test
mov
mov
lock
add
add
popa
aas
add
lret
cs
adc
fildl
mov
sahf
inc
and
hlt
adc
add
sarl
sti
jg
je
aam
scas
scas
loope
or
iret
sub
xor
adc
fisttps
in
sahf
cs
rcll
xor
test
aaa
mov
jne
xchg
or
jg
dec
je
ss
or
arpl
arpl
fiadds
push
mov
dec
int3
inc
scas
jae
pop
dec
cltd
sub
std
mov
adc
push
pushf
jecxz
mov
cmp
test
ss
cltd
pop
sub
movsb
imul
pushl
xchg
xor
stc
aam
jge
icebp
lret
sti
mov
and
pop
rcll
in
mov
pop
bound
adc
cmpsb
dec
aad
jno
or
fs
sbb
dec
aam
int
jle
inc
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
fiadds
or
mov
adc
mov
shlb
inc
hlt
xor
xchg
sbb
cmc
jbe
rcr
xchg
or
out
mov
lods
rorb
popf
sub
xchg
in
les
adc
ljmp
ja
mov
data16
xor
fisubrl
arpl
inc
aas
cld
lret
leave
inc
sbb
inc
in
not
sbb
sub
fisubl
mov
pmullw
nop
pop
test
inc
mov
mov
cmpxchg
jno
sbb
pusha
std
ret
invd
push
or
push
popf
cmp
mov
push
iret
mov
lahf
or
sub
lret
pop
sbb
outsb
icebp
adc
fildl
loopne,pn
loope
sahf
mov
jecxz
sub
popf
int3
flds
mov
push
add
jae
call
movsl
faddp
inc
test
in
shl
pop
sbb
mov
sub
pop
jle
ret
jne
xchg
scas
mov
pop
xchg
sub
cmp
sbb
pop
aad
add
subb
out
xorb
cmp
add
repz
filds
frstor
aas
sahf
sub
iret
shlb
xchg
sbb
in
dec
push
add
mov
mov
mov
out
push
cmp
xlat
push
out
shl
xor
mov
or
lds
jns
push
sbb
and
sub
fwait
mov
lods
mov
push
mov
cmpb
or
inc
xchg
ja
lds
pushf
fst
int
fs
cmp
ret
cld
in
add
loop
sub
sub
repnz
fistps
into
mov
pop
jo
cmpsb
pop
mov
push
add
push
pop
idiv
mov
ds
mov
inc
icebp
dec
jge
je
fisubl
xchg
mov
adc
sbb
movsb
xor
pop
loope
out
xchg
and
push
lret
adcl
mov
inc
sbb
mov
ret
cmpsb
ret
test
add
mov
iret
cmc
jne
pop
xchg
inc
rclb
dec
mov
stos
and
mov
or
or
cli
in
xchg
into
inc
shr
movsl
imulb
outsl
cmpsb
leave
pop
sub
aas
rep
lahf
jg
shll
jl
es
ja
xchg
orb
xchg
call
jmp
add
push
adc
cmp
pop
or
mov
arpl
inc
test
imul
jns
fstl
fisubl
lods
mov
sti
fisubrs
pushf
ja
sar
daa
dec
fs
inc
inc
sub
mov
cwtl
dec
and
sbb
aad
lret
sbb
pop
daa
push
xlat
mov
or
pusha
mov
imul
add
jle
push
rclb
mov
daa
and
mov
cmp
sti
addl
push
push
jae
jl
dec
push
lock
int
sbb
sarb
cmc
cltd
sub
jle
add
cmc
addr16
jno
xor
jge
push
clc
ja
sub
lds
add
inc
mov
es
mov
inc
jo
xchg
iret
idivb
cmp
stos
in
cmc
fs
xlat
cwtl
rcrl
mov
lock
and
dec
rclb
jmp
popl
in
ror
rcrb
xchg
jne
pop
movsb
inc
cld
xchg
mov
cli
mov
mov
daa
cwtl
ja
int3
mov
lods
lods
pop
cmpsl
pusha
imul
jge
add
imul
daa
push
incb
repnz
loop
dec
cmp
fiadds
jecxz
adc
mov
test
jo
lret
push
jbe
add
sbb
pop
loope
xchg
sti
xchg
xor
xchg
push
imulb
test
lock
mov
jns
cmp
shlb
dec
cli
inc
jne
ret
dec
fdivrl
testl
adc
jle
add
xor
sbb
addr16
leave
jg
inc
daa
adc
sub
push
xlat
push
xchg
or
sbb
dec
jge
jns
mov
rolb
sbbb
push
inc
int3
aad
daa
add
xor
repz
stc
dec
pushf
cltd
push
leave
push
stc
xchg
js
jmp
addb
jbe
cwtl
xchg
push
int
fcoms
pop
and
sbb
or
in
jp
mov
sbb
fstl
andl
nop
es
dec
mov
insb
fcom
icebp
daa
pop
jae
out
adc
add
jns
sub
jae
repz
popf
out
fadd
rcr
ret
xor
sub
lret
add
xchg
sbb
sbb
push
cmpsb
pop
ret
ljmp
rcrl
push
insb
stos
out
jb
jne
jb
stc
push
jbe
shl
sub
subb
jbe
add
mov
aas
imulb
movsl
xchg
stos
mov
pop
imul
repnz
repnz
loop
push
push
cmpsw
mov
jnp
imul
mov
enter
or
jmp
xchg
xor
rorb
pop
xor
pop
fistpll
jb
push
imul
jle
push
push
or
inc
cmpsb
fildll
movsb
xor
call
inc
push
out
subb
and
sub
dec
pop
js
pop
mov
into
out
stos
insb
lea
add
cmp
ucomiss
mov
cmp
sub
lcall
jno
cld
cmpl
in
enter
mov
decb
push
adc
ret
sbb
mov
mov
loopne
cmc
mov
int3
insl
mov
fs
daa
mov
jae
xchg
mov
notl
pop
insb
movsb
jge
out
xchg
mov
cld
loopne
out
popa
or
das
fs
lret
inc
sti
hlt
repz
xchg
loope
add
inc
repnz
leave
jl
out
dec
js
pop
cmp
aaa
leave
adc
shll
sti
aam
test
sarb
lahf
clc
mov
inc
daa
adc
pusha
and
sub
stos
pushl
mov
mov
xor
or
aaa
bound
mov
adc
mov
scas
xchg
xchg
push
mov
inc
dec
mov
mov
adc
fnstenv
add
jo
jae
or
mov
xchg
xchg
iret
pop
xchg
sbb
loope
mov
das
fimuls
test
loope
je
scas
jp
or
scas
jp
adc
cmp
cmp
push
daa
jae
mov
insb
stos
inc
cli
fs
xor
daa
adc
mov
cld
scas
add
mov
xor
test
pop
xchg
test
out
cmp
mov
jae
jp
dec
mov
ljmp
in
dec
es
aaa
bound
xor
clc
out
add
lds
cld
fcompl
cmpsl
jle
jg
add
popf
xchg
push
mov
add
jge
xchg
rcll
mov
mov
scas
cmp
mov
test
or
int
int3
pop
mov
imulb
add
test
repnz
push
jae
or
adc
cmp
and
sbb
sub
xchg
mov
push
loopne
mov
outsb
dec
lock
or
jae
ljmp
push
inc
pop
xor
loop
pop
inc
shr
mov
in
or
and
mov
cltd
popf
mov
pop
rcl
pmuludq
add
loopne
outsl
enter
iret
out
jnp
and
xchg
push
rcl
cmp
dec
and
dec
in
aas
aas
das
lods
std
stos
inc
jmp
stos
adc
stos
xchg
push
lahf
insb
cld
adc
fldl
jge
sbb
pop
je
fs
jno
rol
sbb
jb
cwtl
ret
mov
mov
cmp
jbe
inc
pop
or
outsb
imul
out
jge
dec
inc
push
push
test
add
or
ljmp
mul
sbb
out
nop
in
fistps
insl
push
icebp
add
pop
lods
xlat
outsb
test
pop
jne
cwtl
adc
test
mov
cmp
aam
adc
shlb
mov
pop
or
repnz
cs
inc
cmpsl
faddp
xchg
inc
mov
test
pop
cs
mov
decb
mov
sub
pop
push
push
pusha
and
mov
insb
push
jmp
pusha
add
scas
ret
stos
add
test
xchg
shll
cmp
push
push
int3
inc
jns
inc
inc
rorl
xchg
mov
xor
or
jno
in
loop
mov
adc
js
mov
pop
jbe
ret
mov
int
aaa
mov
pop
push
in
dec
jge
mov
push
or
dec
sub
addr16
sti
mov
push
ljmp
in
sbb
add
insb
mov
ja
out
add
mov
dec
push
sub
dec
pop
mov
aam
mov
iret
add
scas
jbe
pop
jp
mov
outsb
test
mov
jbe
jnp
and
les
jns
hlt
jae
push
jge
jns
mov
out
pushf
jge
cmp
dec
push
and
sbb
fdivrs
imul
mov
in
push
and
mov
pop
cwtl
lods
push
or
pop
psrad
fistl
inc
xchg
add
xchg
outsl
sbb
cmp
push
out
aam
negl
xchg
data16
jae
sub
inc
cmp
xchg
or
rcl
xchg
xlat
movsl
xor
frstpm(287
or
int
orl
mov
xor
enter
jle
addr16
and
std
pushl
stc
les
loope
lds
mov
adc
lret
cmp
push
enter
cmp
pop
pop
xchg
adc
outsb
dec
mov
andb
cmp
lock
push
scas
nop
inc
or
mov
push
outsb
lods
add
or
push
es
xor
setb
in
repz
fdivs
cld
loope
cmpsl
movsb
scas
inc
jecxz
push
jle
sti
inc
xchg
cmp
leave
out
lret
mov
dec
pusha
roll
out
ss
sub
das
mov
adc
xchg
mov
repz
mov
mov
sbbb
push
xchg
jno
dec
dec
lock
dec
mov
out
mov
test
sbb
push
andb
sbb
clc
cmp
cmpsl
push
cmp
sbb
rorl
loope
pop
mov
out
mov
ror
xchg
mov
cmpsl
push
adc
mov
push
cwtl
out
jle
mov
cmp
scas
out
cmp
cmp
and
ret
lahf
mov
es
mov
psrlw
and
or
mov
adc
outsb
cmp
dec
mov
out
mov
ja
sbb
inc
pusha
leave
xchg
cli
ljmp
dec
lahf
xor
daa
xchg
jl
incl
das
andl
mov
in
gs
mov
xchg
dec
adc
daa
cltd
dec
jge
bswap
repnz
xchg
cwtl
lret
dec
sub
data16
inc
mov
pusha
and
bound
push
mov
aam
and
inc
inc
cmc
imul
cs
xchg
cs
ljmp
js
mov
xchg
dec
mov
lcall
repz
sub
inc
xlat
jmp
int
cmp
adc
ficomps
loope
movsl
scas
xchg
sbb
xor
lret
pop
enter
xchg
push
fwait
iret
pusha
cmp
jmp
push
rcrb
dec
mov
shlb
and
mov
jno
movsb
xchg
mov
add
fs
nop
mov
add
hlt
daa
adc
inc
fabs
push
sbb
loopne
insl
pushf
mov
cmp
add
loope
xchg
pop
aaa
ljmp
scas
jge
push
ljmp
es
add
rorb
add
and
dec
rolb
sub
into
cwtl
out
sbb
les
cmp
or
cwtl
shrb
imul
je
mov
jl
jle
shl
mov
in
scas
fiaddl
push
loope
fistpl
mov
or
push
lods
clc
xchg
out
sti
sub
jmp
or
sbb
addr16
mull
adc
imul
or
mov
push
pop
adc
jg
push
mov
sbb
cmp
xor
push
imul
cmp
iret
cmp
lods
pop
ljmp
xor
xor
sbb
fcoms
inc
pop
sbb
add
mov
dec
lods
mov
jnp
mov
test
xchg
loopne
push
aad
loopne
inc
sti
mov
pop
inc
rcr
cmp
jo
cltd
popf
mov
lret
movsl
stc
xchg
inc
mov
push
sub
mov
iret
pop
pop
in
push
and
cmp
pop
mov
jne
popa
rorb
insb
in
pop
fs
push
push
lock
out
test
or
ss
xchg
sbb
std
ret
pop
dec
mov
jp
jp
mov
es
sti
sbb
out
mov
loop
scas
dec
cmp
and
add
ret
mov
inc
stos
mov
mov
outsb
add
xchg
mov
loopne
inc
fcoml
jecxz
fildl
jge
push
inc
cmp
out
or
and
js
fwait
sahf
jmp
imul
pop
add
int3
lods
jbe
loopne
mov
mov
cs
into
loop
mov
lcall
iret
hlt
inc
jnp
mov
pop
push
sbb
icebp
stc
pop
push
adc
dec
inc
roll
push
popf
stos
mov
adc
mov
mov
pushf
dec
imull
xor
pop
loop
dec
mov
loopne
and
xchg
mov
xor
and
pop
loope
cmpl
imul
movsl
mov
mov
jecxz
or
jp
movb
lret
hlt
push
movsb
dec
inc
sarl
jg
and
imul
add
sub
sbb
fsub
dec
iret
inc
and
dec
xchg
jmp
es
mov
mov
push
cmpl
es
out
inc
jns
outsb
insl
scas
clc
push
dec
icebp
mov
jns
pusha
iret
addr16
mov
add
add
loop
sub
cmp
xchg
jb
popa
pop
and
mov
xor
fdivs
lea
aad
cmp
hlt
out
jae
lcall
inc
and
push
pop
aad
or
aad
outsl
pop
fmulp
ret
pushl
push
xor
lock
test
aam
rcrl
lock
sbb
cmpsb
mov
push
mov
jb
mov
outsl
repz
inc
ror
lds
and
das
lcall
mov
lea
jno
aaa
test
xchg
inc
pop
test
pop
loope
sub
std
lds
and
mov
es
ret
mov
int
es
js
aaa
jo
test
push
dec
adc
cmp
in
push
out
jb
sub
mov
outsb
lea
mov
add
addr16
sbb
mov
xorl
shlb
rcrb
mov
mov
mov
js
xchg
sti
rorl
fistps
in
pop
mov
adc
add
sbb
mov
and
inc
je
addr16
std
popl
mov
jle
adc
into
push
aam
cmpsb
stos
xor
xchg
sub
sub
insl
jnp
aam
ss
add
daa
imull
mov
adc
xchg
daa
push
andl
mov
rcrb
aaa
das
js
mov
test
testl
loop
mov
add
add
jle
daa
push
fdivl
dec
int3
add
je
and
ret
sbb
in
movsb
rolb
sahf
mov
mov
bound
push
iret
aam
fldl
dec
pop
stc
notl
test
fsubs
repnz
xchg
mov
cwtl
js
dec
inc
push
mov
or
inc
or
add
mov
xchg
orb
mov
dec
sub
mov
jnp
es
mov
jae
pushf
add
imul
insb
movsl
xchg
dec
mov
sub
jmp
mov
jl
dec
loopne
mov
sarb
cmc
xchg
sbb
cmp
incl
mov
push
loopne
shlb
aam
gs
cmp
pop
sbb
sarb
fisubrs
mov
jmp
adc
or
fidivl
adc
mov
or
out
gs
lds
cmp
lock
js
sbb
mov
test
mov
sarl
outsb
add
pop
mov
mov
and
les
mov
xchg
testl
test
pop
pusha
shrb
mov
mov
int
or
mov
lea
pop
or
add
and
int3
cltd
jmp
sahf
stc
pop
mov
pop
mov
jge
pop
mov
lahf
push
daa
out
mov
push
add
dec
das
xor
xor
jnp
mov
adc
adc
dec
and
lea
adc
stc
sbb
push
pusha
xor
sbb
aas
mov
mov
push
sbb
add
aas
imulb
pusha
shl
xor
add
push
jmp
pop
dec
push
movsl
mull
inc
loope
test
pop
mov
mov
mov
and
pop
sbb
push
fisttpl
ret
cli
movsb
sahf
pop
jae
sub
icebp
ret
add
inc
add
push
pop
lock
iret
mov
je
jl
push
aam
jo
stc
out
scas
jge
push
aad
imul
clc
aam
push
xorl
orb
aaa
mov
mov
stc
jo
pop
pushf
xchg
addr16
inc
insb
ljmp
adc
pop
sbb
sub
jg
dec
jo
clc
insl
es
mov
and
fsubrs
adc
sbb
mov
sub
sbb
scas
daa
daa
sbb
pusha
sub
cs
mov
jnp
push
fistps
xor
jg
jns
mov
fldl
rol
ret
sbb
pop
stos
cmc
int
testb
sbb
pushf
fdivrl
sub
sub
out
jl
jne
jno
popa
pop
or
fwait
mov
stc
clc
test
les
mov
pop
dec
pushf
mov
push
or
stos
cmp
push
dec
adc
sahf
mov
sbb
xchg
adc
dec
aad
loope
jg
sbb
jo
lods
cmp
out
mov
and
movsl
and
nop
js
sub
adc
adc
cmpsl
pop
inc
adcb
fidivs
imul
test
push
mov
cmp
pushf
stos
jg
mov
fbstp
movzbl
xor
pop
test
aas
push
popa
dec
lods
mov
aaa
jns
fidivrs
and
and
je
clc
enter
push
cmpsb
mov
pop
aaa
popa
outsb
imul
jbe
imul
lods
shlb
andb
arpl
mul
cltd
jg
das
call
cmc
cltd
or
mov
mov
jl
mov
mov
mov
test
sbb
stc
jo
adc
or
sbbb
out
mov
jo
loop
sbb
jecxz
sbb
insl
cmp
xchg
scas
add
add
cmp
loopne
pop
and
xchg
xor
cltd
repz
inc
test
pop
je
icebp
pop
das
les
lcall
mov
jl
mov
xchg
cli
xchg
push
push
aaa
pusha
in
xchg
popa
scas
cmpsb
pop
add
sbb
stos
insb
js
out
push
int
jns
xor
movsl
add
in
sti
xchg
test
pop
aam
mov
cld
dec
sbb
call
or
xchg
xchg
xchg
arpl
cmp
jle
sub
mov
push
stos
mov
rcl
xorb
movsl
jle
lods
pop
and
dec
xor
les
mov
loop
ljmp
jne
lock
cmp
or
and
sbb
add
inc
or
pop
pushf
ja
adcl
push
mov
pop
or
gs
jne
in
sbb
xchg
cmp
dec
jo
je
loopne
mov
pushf
mov
gs
sbb
lods
cmpsl
shrl
xchg
arpl
test
mov
rclb
mov
imul
lods
cmp
inc
cwtl
inc
mov
jmp
xchg
sti
or
mov
dec
loop
loopne
pop
fs
repz
divl
or
inc
push
cwtl
arpl
jne
push
adc
pop
mov
rcrb
adc
mov
fidivl
jno
mov
aam
out
pop
cld
test
push
push
pushf
cmp
push
mov
ret
pop
dec
mov
loopne
dec
pop
pop
sti
aad
lea
jge
mov
pop
ja
push
mov
pop
xchg
adcb
and
mov
push
jmp
push
inc
test
bound
mov
sbb
push
scas
sahf
dec
xor
lahf
xlat
xchg
mov
push
cmp
movsl
outsb
lahf
mov
stc
adc
insl
in
fldcw
out
or
loop
cs
enter
dec
cld
out
shl
xor
pop
fimull
dec
or
xchg
repnz
xchg
jns
fisubrl
int3
clc
movsb
dec
xorl
jge,pn
cmp
or
out
out
cld
insb
in
mov
xchg
add
pusha
add
in
int3
mov
inc
popf
mov
mov
jmp
pop
aas
mov
xlat
jns
pop
ja
ret
testl
jecxz
pop
test
mov
int
add
push
push
popf
nop
notl
jmp
sub
inc
jmp
stc
add
adc
inc
arpl
mov
inc
js
jl
stos
cmp
jo
aaa
cmpsl
push
push
stc
adc
xchg
mov
xor
push
ror
xchg
xchg
mov
fwait
leave
or
pop
pop
add
dec
or
push
push
xchg
xor
mov
notl
dec
cld
aad
test
pop
add
jmp
idiv
cmp
out
loope
rorl
testb
or
js
xchg
mov
sahf
out
mov
mov
lahf
aam
push
push
mov
and
mov
daa
stos
mov
pop
dec
popa
mov
add
add
lock
iret
mov
les
jp
sbb
mov
test
ds
in
jne
in
cmp
mov
inc
addr16
mov
pop
xchg
cmp
ljmp
jnp
jecxz
fcmovb
stos
cmp
loopne
repnz
inc
das
mov
push
push
inc
mov
clc
xchg
jecxz
mov
push
out
iret
das
pop
sub
jp
pop
cmc
aas
test
xchg
mov
mov
or
sub
jno
test
test
push
inc
sbb
imul
cld
les
enter
lcall
aad
mov
lds
mov
sub
cmpsb
mov
int3
inc
sub
data16
mov
dec
or
add
pop
repz
push
dec
xchg
out
push
lret
mov
sbb
dec
cwtl
jnp
lods
scas
in
push
and
faddl
sub
jp
or
ficoms
push
jnp
and
add
out
cli
push
xchg
and
pop
ja
dec
test
ret
fdivl
inc
fmul
mov
push
test
cmc
mov
pop
scas
mov
int3
in
sti
ljmp
enter
xchg
sbb
leave
test
aas
adc
jle
push
pop
sub
mov
push
jmp
push
sbb
fmuls
repz
jmp
jb
enter
movsl
jmp
inc
pop
push
jge
out
in
mov
and
sbb
mov
inc
stos
ficoms
imul
xor
xorl
dec
inc
lret
mov
in
adc
call
push
adc
stos
sbb
sbb
pop
push
outsl
dec
add
fs
jg
mov
push
div
into
sub
adc
mov
jbe
shr
adc
or
fildl
sub
mov
fnsave
stos
aam
jmp
int3
gs
call
push
es
movsb
int3
and
in
xchg
addl
lret
mov
subl
add
shr
cmpsl
xor
icebp
mov
sbb
sahf
mov
imul
shrb
mov
in
and
gs
push
add
test
in
insl
inc
xlat
pushf
sbb
inc
sub
dec
pop
inc
mov
xchg
jne
pushf
or
sub
nop
add
xchg
xor
in
pop
lds
pop
mov
sub
test
cmp
lcall
lret
aaa
stos
int3
mov
stos
leave
sub
jl
jle
mov
cmp
nop
mov
ret
push
mov
cmp
push
dec
xchg
dec
mov
test
xor
mov
call
fsubrl
push
nop
daa
sub
dec
xchg
sub
or
rclb
loop
shrl
mov
adc
adc
gs
push
mov
jmp
or
mov
cli
adc
and
mov
adc
mov
call
mov
int
lds
dec
fisubl
arpl
fistps
dec
mov
int3
ss
sbb
push
fnstenv
cmc
mov
pop
xchg
lods
pop
and
std
cmp
je
mov
nop
pop
sbb
sub
call
mov
pop
stc
ret
pop
sbb
xchg
testl
jns
and
push
mov
ret
aas
fsubs
scas
cld
imul
rcl
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cld
dec
mov
add
mov
