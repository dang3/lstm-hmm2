sbb
add
mov
movsb
outsb
rorl
xor
inc
enter
jb
mov
addr16
dec
sti
test
addr16
pop
pop
negb
inc
add
mov
push
aaa
jae
push
xor
cmp
and
mov
and
jp
mov
push
pop
mov
lock
push
jno
std
jecxz
iret
add
scas
les
adc
icebp
lds
aaa
pop
rorl
dec
stos
xlat
sbb
jge
cmc
ret
cmpsb
sbb
add
dec
sbb
shlb
subb
in
dec
xchg
test
ss
pop
daa
and
dec
lods
int3
and
cld
divb
in
popf
fwait
push
mov
mov
pop
dec
lods
dec
mov
xchg
sbb
outsb
adc
int
enter
in
jnp
sbb
pop
push
xor
aad
loop
or
pop
movsb
popa
xor
pop
pop
mov
xchg
lds
xchg
pop
pop
fsubrp
loopne
ljmp
sub
push
dec
aas
jle
sbb
imul
fmuls
sbb
jb
push
cmpsl
scas
dec
mov
push
jns
clc
cmp
mov
and
push
xchg
ja
cmp
cmp
push
stc
and
cs
adc
test
ljmp
jno
pop
mov
hlt
jg
mov
ret
aam
bound
add
je
xchg
dec
dec
push
enter
add
mov
jmp
negb
mov
movsb
xor
pusha
push
out
test
push
push
sbb
add
in
adc
sbb
inc
inc
div
adc
add
jl
je
push
push
push
int
sbb
dec
jbe
notl
loope
jecxz
icebp
xlat
pop
add
leave
push
out
out
xchg
lds
adc
orb
or
add
inc
pop
lcall
mov
xor
loope
sahf
inc
mov
pop
call
fistl
xor
pop
sbb
fstpt
or
or
ljmp
enter
into
stc
cli
and
out
cs
and
or
dec
jl
fistpl
or
scas
jae
cs
in
repnz
cmp
fsubs
int3
rolb
lods
lds
out
push
js
sbb
enter
test
jg
mov
add
push
aad
pop
push
cmp
je
aas
mov
sub
mov
pop
mov
shll
movsb
aam
scas
rclb
sbb
mov
add
fcmove
test
push
xchg
mov
fnstcw
pop
adc
lock
cmp
pop
cmpsl
out
pop
xchg
cmp
in
and
jb
clc
divb
stos
adc
rcll
stos
dec
cmp
cmp
sahf
jle
in
jns
outsl
xchg
adc
aaa
pop
xor
lahf
outsl
xor
jbe
or
add
idiv
addb
cmc
mov
repnz
popa
or
sub
add
sete
push
not
lods
leave
dec
leave
adc
sbb
out
push
das
pushf
dec
neg
sahf
out
insb
test
or
xchg
sub
sbb
push
sarl
dec
mov
lea
xchg
into
mov
dec
pop
imull
ret
adc
mov
div
cmp
js
in
pop
stos
stos
ds
jg
fcompl
sub
mov
fst
mov
or
test
int
mov
xchg
pushf
inc
fdivrs
movsb
xchg
shrb
jge
test
jle
subb
loopne
jnp
fbld
mov
xchg
inc
pusha
xchg
incb
or
pop
out
mov
lret
fld
pop
mov
mov
and
out
out
leave
xlat
xchg
push
cmpsb
insl
dec
cmp
jb
mov
cmp
sub
aaa
add
mov
in
cmovo
repz
bound
imul
shlb
int
loope
movsw
pushf
inc
aam
inc
dec
enter
insl
mov
jb
pop
adc
testl
jle
repz
ja
push
rclb
pushf
nop
int
loope
sbb
pop
mov
mov
sub
bound
movsb
pop
jnp
lea
jns
enter
dec
clc
repnz
scas
sbb
cmpsl
outsl
or
sub
jne
aam
std
shr
sbb
sub
lahf
and
movsb
pop
push
es
aaa
loope
sbbl
xlat
xor
jae
inc
cs
in
loopne
and
popf
movsl
cli
add
sarl
arpl
adc
inc
adc
in
dec
sbb
cld
ret
xlat
xor
cmpsb
dec
cli
jno
mov
adc
adc
xchg
nop
shl
cwtl
add
inc
enter
dec
xchg
stos
push
push
test
mov
loope
rclb
loop
push
xchg
mov
outsl
lods
mov
movsl
sub
pop
clc
das
xchg
dec
inc
pop
add
push
cmpsb
mov
push
cmp
inc
and
test
loopne
sub
mov
xor
and
mov
fidivrl
jmp
jno
frstor
in
insl
sbb
sub
jae
pop
and
xchg
sbb
mov
test
lods
xor
add
test
jbe
or
dec
in
xchg
in
je
cmp
loop
cs
scas
jne
adc
aad
mov
insl
lods
mov
pop
dec
push
movsb
lcall
loop
jbe
insl
add
out
ret
test
outsl
scas
mov
push
out
je
dec
cmp
mov
push
movsb
ror
lcall
sbb
rclb
movsl
pop
cmpsl
fst
xor
xor
fiaddl
lcall
inc
mov
in
insb
mov
cli
push
sbb
enter
cld
mov
lahf
mov
notb
dec
pop
xchg
inc
cli
incb
add
popa
cmc
pop
aam
mov
inc
dec
insl
pushf
sbb
xorl
add
jb
push
pop
enter
inc
or
incl
jbe
lds
xchg
mov
mov
add
xor
jmp
xchg
sub
mov
push
mov
fsub
jle
sbb
cmovg
ljmp
sbb
xor
das
lret
or
je
test
sbb
out
aam
nop
sbb
test
pusha
rcll
mov
cmpsl
adc
pop
or
in
pop
pop
adc
fdivrs
fstps
out
add
sub
cmp
xchg
mov
mov
jg
insb
xchg
sub
out
mov
dec
mov
cmp
pop
xbegin
push
pop
and
xor
xchg
leave
ds
popf
lret
mov
pop
ret
out
dec
or
mov
cmp
or
mov
sbbl
or
adc
fcoml
ret
sub
out
test
les
pop
sub
or
add
fisubl
xlat
mov
pusha
push
inc
repz
outsb
imul
out
push
pop
sub
dec
out
adc
aas
jo
cmp
jbe
dec
rcr
xor
ss
add
adc
xchg
lods
ss
inc
test
jecxz
xchg
js
adc
fcoml
mov
mov
movsb
jns
fildl
jle
pusha
arpl
jno
into
jns
cmp
or
lret
pop
out
add
add
cmpsb
fiaddl
sub
pop
mov
sub
dec
add
aad
pop
adc
adc
jmp
mov
sub
je
sub
mov
xor
mov
scas
ljmp
lahf
divb
pop
jno
mov
mov
pop
inc
es
cld
das
mov
or
push
movsl
int3
popf
rcrb
aaa
iret
fcompl
inc
or
cmp
cmp
gs
pop
repnz
enter
sub
clc
and
push
les
test
mov
outsl
popf
cmpsb
or
pushf
shl
pop
lahf
inc
lea
sbb
sub
cmp
pop
inc
fsubl
jns
movsb
jb
call
inc
jo
add
ret
lock
xor
rcr
shlb
es
sarb
add
dec
mov
jg
pop
cwtl
adc
xor
xor
cwtl
xor
pop
into
loope
xor
add
mov
pand
fs
idivb
gs
mov
push
adc
ljmp
jge
push
sub
in
jnp
les
dec
ljmp
sbb
outsb
jno
int
pushf
fidivrl
push
ficompl
repnz
imul
ja
jl
iret
add
daa
jge
loope
push
and
xor
xchg
push
getsec
ljmp
xchg
inc
arpl
test
lahf
lods
in
mov
mov
les
mov
scas
out
cwtl
and
shl
cmova
sub
pop
sub
daa
cmp
lret
mov
mov
or
push
popa
or
sub
mov
sbb
push
mov
cmp
icebp
clc
lret
jmp
inc
mov
and
movsb
mov
pop
sub
loop
push
out
xchg
inc
sti
cmp
lods
fnsave
inc
iret
aas
leave
jb
lret
mov
mov
imul
scas
jecxz
jmp
jecxz
add
jmp
addr16
xlat
aad
adc
sbb
xor
cmp
cmpsb
sub
pushf
dec
test
jbe
jno
xchg
sub
call
mov
sub
adc
lret
push
in
xchg
addr16
mov
mov
cmp
lret
dec
add
pop
add
clc
idivb
rcl
lahf
push
inc
and
dec
in
pop
xor
jne
imul
mov
jo
cmp
lds
inc
mov
inc
sub
clc
lods
ljmp
insl
in
or
je
aam
test
mov
and
jecxz
outsl
jae
push
rol
pop
xor
jae
in
xchg
imul
shlb
mov
pop
jbe
push
hlt
mov
out
nop
negl
mov
lea
sub
mov
lea
movsb
insl
scas
push
fmull
mov
add
sub
sbb
stos
jb
cmp
pushf
flds
in
jbe
repz
cwtl
pop
icebp
mov
adc
xchg
mov
jle
push
je
jle
or
popf
add
sub
or
cli
jns
sarb
popa
inc
mov
out
rcr
bound
inc
in
mov
adc
xchg
sbb
pop
cmp
cmp
xchg
loope
jno
stos
sbb
jns
nop
adc
push
dec
mov
fistl
inc
fwait
aam
mov
jmp
or
and
cmp
lods
push
adc
jp
mov
push
or
jb
pushf
and
xor
inc
lea
fidivrl
fcomps
mov
rcl
cmpsl
mov
pop
mov
xor
dec
xchg
jne
fnstenv
testl
mov
xchg
sbb
add
incl
lahf
dec
xor
aad
pop
lods
sub
adc
mov
in
xchg
push
inc
out
dec
out
mov
dec
loope
xchg
cmp
test
and
mov
notb
scas
movsl
pusha
sti
aad
push
arpl
sub
and
mulb
popf
mov
push
push
sub
xchg
mov
lahf
jp
lret
leave
mov
and
fistl
mov
arpl
push
call
loop
mov
bound
imul
stos
and
leave
out
pusha
movsb
sahf
sbb
imul
jb
fwait
mov
cmp
sarl
loop
dec
ret
test
mov
enter
aam
test
push
arpl
xchg
mov
cmp
add
mov
imul
sub
nop
scas
lea
scas
out
insl
add
aam
xchg
push
shlb
stc
in
shlb
xchg
inc
adc
cmove
das
mov
test
outsl
xchg
aad
jl
fstpt
pop
enter
les
mov
inc
mov
adc
sbb
cmp
std
xor
xor
jbe
mov
add
cmc
mov
fld
scas
fldenv
sub
into
adc
dec
adc
jmp
mov
imul
xchg
mov
daa
out
xor
adc
jmp
mov
sbb
add
shrb
xor
adc
adc
jb
cmpb
stos
movsl
dec
sbb
repnz
cli
dec
loope
in
lcall
outsb
push
rorb
in
sahf
dec
pusha
mov
shrl
jmp
sub
cld
mov
jp
fwait
xchg
sub
inc
loopne
adc
rolb
add
pop
xchg
jb
popf
or
std
sub
pop
jno
inc
jp
shl
xor
jle
js
jmp
sti
ficompl
stos
mov
fsubs
cmc
mov
mov
add
insl
xor
xchg
adc
sbb
daa
das
pushf
movsb
add
adc
sti
rolb
loopne
xchg
jmp
inc
xor
add
fwait
adc
test
inc
cs
add
fstpt
aas
lcall
and
pop
pop
and
xor
daa
fmuls
or
jb
lret
mov
loope
hlt
hlt
xorb
sbb
or
and
cmp
lcall
sbb
pop
cmp
mov
inc
cmovg
adc
jecxz
out
movsb
test
inc
fildl
cmp
into
and
and
jecxz
fimull
mov
lods
lock
rorb
mov
fcomi
in
rorl
mov
loopne
mov
adc
inc
sbb
mov
mov
aad
or
or
pusha
mov
mov
lret
xor
adc
sbb
jle
incl
sarl
movsl
popa
notb
mov
ljmp
negl
mov
inc
sbb
lret
xor
sahf
inc
sub
lcall
fildll
xchg
sbb
sbb
jns
inc
mov
imul
push
stos
jecxz
jbe
fcmovu
adc
or
movsb
cmp
cld
inc
and
dec
mov
lahf
hlt
js
fcoms
ret
je
lahf
mov
mov
ret
fiadds
adc
mov
pop
out
jno
pop
lcall
shl
xor
ja
loop
push
mov
ds
lea
call
and
lcall
pop
xchg
sti
stos
test
test
ret
and
cvttps2pi
sbb
mulps
adc
mull
addr16
imul
xchg
lret
pop
insl
pop
dec
jp
std
adc
pop
adcl
cmpsb
mov
cvtpi2ps
ret
not
mov
incb
inc
pushf
and
adc
repz
imul
mov
jg
lahf
ljmp
int3
call
inc
inc
cmp
lea
outsb
cmp
adc
cmp
dec
js
adc
mov
das
dec
xor
div
outsl
add
daa
movsl
clc
in
dec
mov
aaa
popa
rorw
cmp
and
rorl
mov
je
mov
pop
repz
mov
adcl
scas
adcl
pop
in
mov
cltd
xchg
sbb
dec
cmpl
mov
mov
lds
adc
ds
shll
das
jno
aas
and
cmp
mov
push
pop
jae
adc
pop
push
mov
scas
push
push
adc
mov
sbb
les
inc
pop
cli
mov
mov
and
lret
in
jns
sbb
repnz
or
fldt
hlt
das
cmp
outsb
lahf
push
and
inc
test
cltd
pop
mov
xor
or
mov
jo
popa
jp
popf
stos
xchg
fldlg2
into
jle
cs
imul
xchg
jne
and
iret
pop
push
sbb
out
adc
jle
mov
int
push
mov
andl
leave
cltd
pop
stos
aas
jns
ss
lcall
or
cmp
sub
imul
push
nop
cmp
jle
addr16
lods
mov
adc
mov
imul
mov
outsl
int3
pop
out
ja
iret
sub
pop
pop
in
pop
mov
sub
ss
xor
cmc
jne
repz
jge
and
ds
lcall
jae
push
jp
sub
and
sarb
shrb
add
sub
add
xor
sub
in
cmp
rcr
cld
mov
imul
mov
loopne
xor
int
pop
xchg
addr16
imul
stos
ret
mov
stc
out
pop
lds
jae
dec
lds
mov
adc
dec
adc
jbe
jg
imul
inc
and
rol
aas
push
push
push
clc
sti
mov
push
pop
aas
fildl
int
jge
or
jp
ret
push
adc
mov
jge
mov
sbb
enter
sbb
rcl
mov
inc
mov
push
out
xor
sti
jb
nop
pusha
mov
inc
jg
out
dec
xor
out
mov
or
sbb
movsl
cs
movsl
je
mov
sti
add
jecxz
push
test
sub
test
or
cli
int3
test
and
add
pop
jmp
data16
mov
scas
mov
dec
mov
add
inc
jg
in
jle
mov
dec
inc
sbb
dec
roll
inc
and
add
push
inc
jno
leave
les
fimuls
popl
in
movsl
xor
and
fmuls
mov
push
adcl
mov
cmp
sub
xlat
sub
push
mov
aas
stos
lret
repnz
dec
sbb
flds
idivl
mov
push
test
push
repz
cmpps
add
pop
mov
imul
xor
inc
dec
sbb
push
jns
sub
in
out
pop
xchg
fs
sbb
imul
sahf
add
jle
aad
push
enter
mov
pusha
push
inc
nop
jmp
mov
fcomip
rorb
mov
cs
mov
sbb
rep
rcll
and
incl
and
mov
and
inc
xchg
mov
and
cmp
es
test
cmpsb
push
cmp
xor
push
add
and
imull
out
rcrb
or
decl
or
fdivrs
repz
idivl
shl
fadds
cli
jbe
xchg
mov
push
inc
pop
sub
inc
lds
std
in
cmp
mov
xor
in
aaa
lret
pop
add
push
sbb
mov
and
cld
and
sahf
xchg
inc
mov
xor
fmuls
jmp
lds
push
int3
fildll
scas
xchg
ljmp
inc
cmp
sbb
dec
push
fcmovne
repnz
call
sbb
jo
cmpsb
and
jg
test
in
mov
sarl
push
inc
das
aaa
mov
adc
sbb
fistl
mov
filds
movsb
popa
mov
jl
jae
shll
imul
sti
cmpsb
and
repz
push
and
pop
imul
cmp
sbb
inc
lds
inc
mov
cmp
ret
sub
add
jbe
cmp
jbe
push
mov
lock
test
add
push
sub
sar
mov
sub
lods
negl
out
push
xor
push
test
and
fmull
negb
icebp
jae
mov
mov
add
ss
push
jl
fisttpl
rcrl
pop
sbb
mov
or
lock
pop
stos
mov
loopne
push
and
stos
test
insb
inc
mov
repnz
sub
fdivr
ror
notb
subl
inc
cwtl
jns
jae
arpl
push
cmpsl
ss
mov
into
jecxz
mov
mov
shl
adc
fiadds
pushf
ja
test
dec
sbb
ret
xchg
shlb
jle
mov
sub
jo
adc
int
in
or
pop
ss
movsb
adc
sbb
mov
xchg
lret
jno
or
into
inc
cmpsl
fsub
adc
je
shr
xor
ficoml
push
add
mov
mov
mov
pop
fsubl
cmp
andb
cmp
mov
sbb
aaa
rolb
test
sub
into
jne
and
push
ficomps
mov
out
inc
call
fsubrl
sbb
shll
or
sahf
push
mov
scas
jle
call
pushl
test
xor
pop
pop
outsl
sub
inc
stc
xor
jo
mov
bswap
orl
inc
inc
dec
js
enter
jae
fsubrl
push
out
fisttps
frndint
mov
cld
pop
mov
inc
mov
and
xchg
add
js
sbb
push
int
pop
xchg
stc
jo
aad
or
and
xchg
dec
pop
shll
in
js
fwait
pop
xchg
data16
popf
mov
nop
sub
xchg
loopne
sub
sahf
das
dec
mov
sbb
in
in
insl
ffreep
push
sub
jo
int3
test
rcl
adc
jg
or
idivb
jge
jne
mov
outsb
aaa
xlat
sub
das
pop
cltd
je
int
pop
jns
and
pop
or
adc
daa
insl
inc
fnstsw
jecxz
dec
filds
insl
call
dec
int
and
std
fmull
or
shll
push
stos
adc
scas
push
daa
inc
add
jl
sub
xchg
jge
enter
jns
js
inc
add
fstpl
rcll
int3
push
push
cmc
xor
and
jne
sbb
jbe
mov
lcall
push
mov
push
inc
hlt
je
xchg
add
jbe
pop
dec
test
ret
mov
out
xor
enter
bound
mov
pop
sti
popa
enter
adc
arpl
push
fimull
fidivl
mov
push
out
int3
mov
pop
mov
cs
lods
mov
addr16
mov
jmp
lret
je
and
fistl
pop
jg
xchg
call
jmp
xor
movsb
movsb
adc
dec
xor
outsl
fnstsw
popf
hlt
rorl
adc
fnstcw
cltd
cld
jb
nop
clc
and
out
cltd
adc
sub
adc
jp
and
add
add
push
mov
jg
pop
mov
pop
sub
int
dec
jno
mov
repnz
mov
cmp
pop
cmp
roll
mov
pushf
inc
gs
push
pop
gs
out
xchg
decb
aas
adc
and
lea
xchg
jmp
lea
sbb
xchg
insl
cld
lods
int
jno
pop
and
jge
mov
jp
xor
pusha
adc
cli
jo
sbb
dec
jbe
push
mov
fdivs
das
repz
cmp
ljmp
int3
inc
aad
add
mov
mov
xor
pop
xchg
jmp
dec
jne
icebp
push
pop
in
loope
cmpsb
pcmpgtd
pop
adc
add
outsl
xchg
ds
jb
dec
shl
sti
repz
xchg
jns
icebp
jmp
jge
daa
mov
sbb
rcrl
adc
mov
bound
mov
mov
lea
mov
in
pop
ljmp
test
cld
mov
into
sahf
cmp
sarl
mov
pop
cwtl
add
rcll
and
jmp
and
dec
pushf
mov
mov
insl
mov
lds
lahf
rorl
sbb
push
sub
pop
enter
push
push
addr16
lret
xchg
outsb
imul
inc
xor
loopne
mov
stc
cltd
add
popa
mov
push
add
and
inc
dec
popf
stos
add
xchg
gs
push
sarl
sbb
push
mov
push
into
sbb
subl
push
ss
xchg
cltd
mull
sbb
popa
add
scas
mov
cwtl
call
sbb
sub
add
mov
xchg
mov
das
sub
xchg
push
stos
mov
mov
inc
mov
adc
sub
mov
mov
addr16
sub
jmp
xchg
mov
pop
icebp
ds
sbb
add
inc
push
xchg
jl
push
pop
outsb
lea
sbb
inc
jp
lds
cli
or
out
adc
nop
mov
mov
clc
out
addr16
arpl
icebp
ds
push
in
fdivr
jne
mov
mov
popf
mov
xor
xlat
je
addr16
ds
aad
lahf
je
mov
cmpsb
out
pop
aaa
and
mov
jge
std
mov
mov
fs
or
sbbb
test
sub
jecxz
popf
popf
xor
sbb
shl
xchg
sahf
inc
aaa
outsb
mov
xchg
movsb
mov
js
lods
sub
int
daa
cmp
cmc
push
pusha
jp
mov
jbe
mov
dec
inc
inc
jne
cs
cmp
pop
lahf
pop
dec
mov
xchg
pop
xor
pop
rcl
in
dec
rol
pusha
aas
rcll
mov
mov
dec
lea
arpl
push
adc
cmp
xchg
adc
adc
int
fs
adc
outsb
outsb
sub
addr16
push
xchg
rol
fiaddl
jp
cmp
das
fisttpl
push
xor
das
fnstsw
push
insb
ret
cld
adc
daa
jae
push
jle
xchg
repnz
xor
int
or
lret
hlt
dec
sbb
and
jmp
int3
push
jge
pop
flds
xchg
mov
int
gs
cs
add
sbb
shr
push
xor
dec
mov
enter
int3
sbb
fdivl
and
jnp
pop
inc
call
sti
dec
mov
mov
mov
inc
pop
fs
mov
add
xchg
test
sub
rolb
push
xor
in
cld
push
mov
mov
adc
cmp
ja
push
insb
pop
adc
inc
data16
stos
add
pop
popa
popa
idivb
call
jl
lret
stos
mov
push
push
cmp
lock
sub
and
pop
or
sbbb
popf
addr16
and
pop
in
test
lret
iret
lret
shl
ret
jo
cmpsb
or
push
xor
pop
inc
jle
lds
pop
jp
push
test
xchg
out
adc
shl
dec
mov
jecxz
leave
mov
movsl
push
mov
push
mov
inc
jle
int
jbe
inc
cmp
lods
push
addl
push
lock
sti
fistpl
add
fs
lret
mov
cmp
xchg
divl
orl
jnp
pop
push
les
pop
mov
mov
adc
add
scas
je
mov
and
lea
pop
or
sub
insl
loope
and
inc
int
dec
push
add
xor
int
shrb
sahf
lds
arpl
and
das
es
lods
mov
jge
or
and
add
psllw
fdivrl
jge
test
out
mov
daa
pop
ds
sub
cmpsb
movsb
mov
movsl
pop
and
imull
lock
sbb
adc
adc
mov
push
test
sbb
jge
push
rclb
shrb
mov
jb
push
cmp
jnp
xchg
jg
mov
ds
xor
in
mov
push
xchg
hlt
inc
fcmovne
ja
inc
sbb
and
mov
fsubl
mov
pop
int
or
loop
lahf
mov
xor
pop
inc
add
mov
mov
paddb
lret
dec
jnp
sbb
lcall
xor
sarl
sub
cld
push
push
xchg
popf
push
pop
xchg
sbb
sub
pop
ss
in
pusha
insb
mov
imul
rcrl
stos
sbb
mov
es
je
jbe
add
pop
sub
aad
pop
fmul
test
ja
xor
sbb
adc
ret
xor
negl
ljmp
dec
lods
addr16
mov
and
mov
dec
js
mov
push
into
xor
cmpsb
jle
adc
shll
test
sbb
nop
add
out
add
jle
sub
mov
sahf
ret
push
aaa
xchg
mov
mov
stc
iret
outsb
loop
sahf
mov
and
dec
sbb
mov
jnp
lahf
or
push
push
loopne
or
xor
rep
or
test
sub
in
xor
fucom
repz
add
sbb
cmp
lds
mov
movsl
or
jmp
and
inc
test
fs
xlat
daa
setne
add
mov
jle
xchg
dec
push
movsb
adc
stc
and
dec
xor
xchg
lock
xchg
mov
lods
xor
cmc
or
pop
es
jb
mov
mov
jmp
add
shll
add
sub
dec
out
test
mov
push
int
pop
int3
dec
cli
je
pop
movsb
mov
sub
and
and
add
pop
push
ljmp
fldl2e
and
adcb
loope
add
mov
js
push
gs
mov
addr16
int
in
add
out
pop
clc
cmpsl
stos
cmpsl
je
mov
orl
mov
pushf
inc
imul
jmp
push
cli
mul
mov
jne
add
inc
inc
std
or
inc
xor
movsl
jge
aam
jns
push
xor
push
jae
loopne
scas
repnz
bound
cmpb
add
xchg
pop
test
pusha
mov
aaa
mov
xchg
imul
dec
mov
sub
pop
cmp
jge
pop
popa
fsubrs
test
mov
mov
jle
iret
pop
sub
mov
leave
jge
xor
insb
mov
pop
setg
leave
movsl
inc
xor
sub
xor
stos
fwait
adc
sub
xor
out
mov
psllw
lods
std
mov
pop
dec
push
push
cld
outsb
mov
aas
jmp
dec
and
repz
mov
loope
popf
repnz
push
xor
ja
mov
subl
pop
int
dec
jb
outsb
out
scas
jne
pop
das
imul
inc
out
pop
dec
out
popa
je
test
sarl
jp
add
stos
pop
stc
enter
into
jae
xchg
xchg
ret
insl
inc
push
in
xorb
jne
neg
in
in
dec
xchg
jmp
jecxz
and
pop
xchg
xor
cmp
add
mov
sbb
insb
cli
xorl
mov
les
inc
imul
inc
mov
fnstcw
pop
imul
jge
mov
hlt
push
jp
or
mov
ljmp
xchg
fcoml
stos
xchg
out
sahf
rolb
mov
cld
add
adc
cmc
lock
push
stc
test
jp
sbb
mov
push
mov
scas
test
adc
pop
aam
lods
shll
dec
ds
cli
mov
cmp
or
icebp
jle
mov
sub
cltd
das
xchg
rcl
inc
xchg
cs
cmp
mov
inc
sub
sbb
mov
sub
pop
adc
negl
out
shl
xorb
mov
clc
xor
push
jne
dec
test
mov
leave
mov
cmpsb
out
mov
add
mov
mov
movsl
ficoml
dec
cmp
fistpll
push
pop
test
roll
iret
outsb
nop
or
repnz
xchg
jg
movsl
dec
ljmp
icebp
push
scas
in
mov
cwtl
sti
mov
pop
movsb
loop
cmc
out
pop
sub
dec
push
inc
jle
in
cmp
and
xchg
mov
jmp
cltd
popa
and
sbb
sub
dec
pop
lds
rorl
sbb
xchg
adc
and
sub
push
test
iret
jmp
aaa
inc
outsl
cmp
lea
adc
je
arpl
xor
mov
lods
xor
dec
add
cmp
jae
inc
sub
pop
aas
repnz
dec
inc
lea
ret
inc
mov
push
shl
adc
and
lock
push
pushf
pop
out
pop
ret
add
push
rcrw
rolb
add
jmp
sub
mov
sbb
js
ljmp
enter
dec
and
and
sub
xor
std
push
xchg
mov
xchg
repnz
jns
orps
inc
movsl
in
sbbb
push
pop
mov
fbld
stos
cltd
and
and
mov
and
jp
leave
add
sahf
sbb
gs
out
mov
addr16
sbb
cmp
int
fadds
nop
scas
fldl
inc
mov
xor
cltd
clc
mov
and
addb
clc
mov
outsl
xor
negb
pop
pop
xchg
mov
jbe
push
pop
adc
iret
sti
cmp
into
outsl
dec
jp
xchg
push
fs
pop
inc
dec
xor
shll
dec
scas
out
cwtl
jecxz
lods
inc
mov
mov
negl
scas
mov
jo
fcoms
dec
inc
inc
outsl
pop
je
cs
std
xchg
cmp
push
subb
sub
jmp
inc
test
sub
stos
ret
movsb
pop
pop
lock
mov
jb
jmp
add
daa
out
addb
bound
mov
or
loope
cmp
pushf
xchg
outsb
cltd
inc
push
inc
subb
ret
mov
mov
insb
sbb
aad
shll
push
ret
inc
into
cmovno
jge
xchg
lods
adc
cltd
mov
aad
and
lahf
fisubrs
jae
les
jo
or
push
mov
cmp
inc
inc
das
inc
mov
rcr
mov
in
xor
notb
jns
fistps
mov
add
mov
fidivs
xchg
ret
sahf
push
and
into
mov
mull
outsb
pushf
sbb
mov
adc
jge
cwtl
pop
pop
add
sbb
test
jp
std
push
aam
outsb
rcr
ljmp
rcrb
xchg
lahf
popf
and
mov
shll
dec
and
insb
dec
imul
call
add
int3
cli
add
bound
es
add
lock
mov
cmp
loope
mov
xor
dec
sub
das
je
fiaddl
inc
inc
test
movsl
mov
pop
push
clc
movsl
pop
add
mov
or
cmp
jle
test
testl
jne
inc
clc
mov
sbb
insb
mov
clc
cld
cli
adc
xor
ja
pop
pop
nop
js
xor
ljmp
ja
mov
jmp
jns
fstpt
cli
arpl
pop
je
dec
icebp
in
into
adc
mov
mov
push
insl
scas
cmp
les
inc
sahf
outsb
fwait
mov
jp
jae
mov
sbb
push
mov
in
ja
push
dec
in
or
into
pop
and
lods
xchg
pop
out
das
ljmp
inc
femms
loop
cmpsl
ja
movsl
shr
mov
enter
or
xchg
arpl
push
hlt
lods
sub
dec
pop
adc
cmp
mov
outsb
data16
adc
sahf
lcall
jmp
pusha
push
jo
fldcw
add
cmp
pusha
push
jae
and
fsts
mov
jo
or
fcoms
into
cmpsl
pop
jl
and
shl
movb
outsl
sub
mov
out
cwtl
in
and
out
inc
outsb
cmp
cwtl
inc
jbe
movsl
shlb
push
xor
pusha
or
ret
mov
stos
jbe
pop
ret
mov
mov
out
sbb
sub
jae
shll
pop
mov
ds
sub
addr16
mov
and
xor
bound
mov
jg
stos
leave
jg
jne
mov
jbe
pop
add
pop
dec
mov
sbb
push
fisttps
hlt
jno
ret
sbb
pop
je
and
xor
pop
or
jg
shrl
jl
sub
mov
shrl
dec
dec
xlat
push
loopne
leave
mov
push
mov
dec
pop
inc
jmp
and
enter
inc
xchg
sbbl
sbb
pop
out
movsb
decb
xor
and
les
mov
cmp
mov
mov
mov
sub
cmp
xor
repz
mov
jmp
shr
mov
inc
cwtl
out
lea
repnz
mov
xorb
fstpl
jno
test
sub
xchg
or
xchg
sbb
cmp
insb
sub
test
pusha
push
fidivrs
adc
cmp
adc
aaa
adc
aad
xor
jp
ret
js
sub
adc
and
jnp
xchg
inc
xor
adc
sti
outsl
pop
add
aam
sbb
mov
inc
movsl
cmp
xor
insb
rclb
in
out
arpl
push
fsubl
fs
in
mov
mov
into
mov
in
ljmp
idiv
mov
decl
cwtl
test
inc
stc
aas
scas
push
jo
movsb
and
inc
add
xchg
stc
add
or
mov
scas
lds
repnz
sti
sahf
mov
jae
lds
out
and
mov
cmpsl
or
push
mov
mov
cmpsl
adc
dec
stos
enter
cwtl
loopne
xor
pop
aam
mov
cmc
scas
add
jo
test
shrb
outsb
or
sti
insb
gs
push
sbb
fidivs
clc
ljmp
lods
inc
add
mov
sti
fwait
jge
cmpsl
xchg
test
cwtl
out
xor
lcall
mov
mov
mov
xor
mov
lret
jbe
cmp
adc
adc
rol
push
test
into
aas
mov
test
add
subb
sti
pop
pop
cmpl
xchg
nop
mov
pop
mov
mov
inc
cld
inc
roll
fstps
xchg
push
dec
push
mov
jle
xlat
cmc
xor
dec
or
mov
or
lds
add
shlb
rclb
addl
jl
xor
das
fldcw
push
leave
jae
gs
cmpsb
imul
lea
cmc
cli
or
int
ret
adc
rorl
loop
xor
jle
aad
or
sub
std
jae
add
out
pop
pop
or
test
jnp
aaa
sti
adc
lret
xchg
push
mov
mov
movsb
pop
cmp
pop
jns
inc
pop
sub
jns
pusha
cmp
lahf
cmp
ficoml
fs
fwait
movsl
js
xor
nopl
mov
nop
rcll
xchg
jbe
outsl
push
popf
cmp
repnz
pop
xchg
leave
aam
lahf
incl
dec
pop
in
inc
lret
sbb
aam
jle
xor
into
xor
add
pop
loopne
mov
je
or
dec
cmp
aam
das
push
sub
test
mov
andl
inc
xor
push
loop
xor
lret
daa
rcrb
pop
pop
sbb
out
test
fistl
sub
dec
cmp
jns
iret
inc
cmp
lds
or
push
hlt
xor
mov
sbb
sub
out
jg
jg
jp
imul
or
cmp
pop
int
scas
mov
jnp
test
in
sub
push
std
mov
ss
push
ret
rorl
fimull
int
notb
jl
mov
adc
push
add
dec
jp
std
imul
ljmp
ss
mov
enter
mov
enter
xor
lds
aaa
cmp
and
jne
pop
mov
push
aaa
sahf
cmc
cmpsb
jmp
bound
ja
pop
mov
sbb
jnp
mov
mov
jmp
add
icebp
add
shll
push
sarb
mov
push
icebp
mov
pop
pop
cmc
std
mov
mov
dec
cmpsb
inc
out
flds
subl
loopne
xchg
cmp
movsl
xchg
sbb
idivl
cmpsl
addr16
aas
pushf
jne
dec
sub
pop
scas
mov
cli
xchg
mov
out
add
cwtl
cmp
jae
xchg
sahf
xchg
pop
movsb
fs
ds
fwait
cs
sub
test
aaa
sar
fcmovne
inc
lods
subl
inc
inc
jg
xor
pop
je
insl
leave
insb
sar
sbb
in
scas
mov
sub
mov
shlb
mov
aas
pop
cmc
sbb
cltd
sbb
mov
xchg
push
outsw
inc
mov
iret
pop
mov
into
sbb
shl
xchg
movsl
inc
xlat
or
ljmp
sbb
ds
mov
inc
out
and
cli
daa
jle
gs
push
and
add
xchg
push
mov
fidivrs
add
and
cli
popa
lds
movsb
push
into
mov
scas
inc
push
sti
or
dec
scas
mov
xchg
imul
jle
push
pop
cmp
adc
and
stos
pop
rolb
jb
repz
or
cmp
xchg
sbb
sbb
adc
cli
xor
xchg
sbb
in
cmp
mov
jbe
es
out
sahf
add
pop
mov
dec
sub
in
sub
xchg
out
stos
into
ja
aaa
pushf
loop
cmc
sbb
shrl
cmpb
fcmovu
jg
sarl
movsl
pusha
xchg
int
movsl
ret
roll
out
lods
call
jg
inc
in
cwtl
mov
push
popa
insb
les
clc
xlat
or
decl
lods
iret
adc
aaa
aad
mov
dec
cmp
and
popf
jb
pop
adc
ret
inc
mov
and
loopne
pop
pop
cmp
inc
sar
fldcw
movsl
test
add
adc
mov
fstpt
xor
or
mov
or
das
cmp
cwtl
repnz
pushf
push
xchg
popf
xchg
and
mov
jg
push
dec
cmp
cltd
push
mov
out
jbe
fistpl
std
jb
mull
jle
push
and
add
hlt
adc
xchg
xchg
repz
arpl
lods
in
adc
imul
add
pop
inc
sub
push
testl
mov
orl
outsb
outsb
lods
adc
inc
adc
insb
xlat
enter
xor
in
cld
or
ret
enter
cltd
inc
cld
xchg
or
sbb
dec
inc
dec
aas
and
push
out
ret
mov
xor
mov
xor
imul
jmp
test
add
mov
xchg
xor
sbb
inc
rclb
jge
js
xchg
fdivrp
fs
dec
or
sbb
xor
sarl
inc
inc
cmp
cmp
pop
jle
mov
jg
sub
cmpsl
les
cmp
push
and
jle
mov
fs
mov
mov
xchg
xchg
pop
roll
fldt
pop
test
out
push
cld
cli
enter
out
push
scas
xor
xchg
idivb
nop
clc
adcb
dec
xor
lods
pusha
mov
repz
xchg
scas
mov
xor
push
pop
push
enter
pop
lock
je
clc
inc
mov
mov
shll
sub
jo
movsb
xchg
imul
push
pop
out
jns
sub
addb
jo
adc
inc
cmp
ja
clts
jbe
xor
mov
pop
cmpsb
dec
dec
fmulp
mov
scas
xchg
sub
mov
fistpl
xor
lds
daa
cmpsl
repz
aaa
mov
jge
cwtl
out
out
and
pop
stc
je
sub
push
test
and
insb
fcmovnu
dec
mov
cmp
loope
hlt
and
mov
inc
adc
in
jno
cltd
sbb
clc
test
in
inc
in
push
adcb
xchg
cmp
mov
pop
dec
ja
data16
mov
and
xchg
mov
data16
mov
add
push
inc
sbb
xchg
idiv
xor
nop
std
mov
scas
dec
sti
imul
or
lods
stc
shl
lret
add
pusha
ljmp
std
add
loop
arpl
add
repnz
int
pop
call
mov
nop
dec
cmp
push
mov
mov
mov
ljmp
std
out
fwait
pop
sbb
repz
xchg
inc
fs
and
ficomps
and
outsl
je
stc
xor
cld
jo
insl
inc
jmp
add
dec
imul
test
push
push
xchg
stos
in
les
cltd
and
test
lea
in
repz
push
dec
out
aad
or
fisubl
xor
out
insl
sub
or
popa
lock
mov
xor
ret
xor
xor
push
add
or
adc
jno
aaa
rolb
call
sti
lds
sub
mov
daa
sub
insl
dec
cwtl
adcb
arpl
xchg
add
call
fwait
dec
push
ret
out
adc
pop
adc
pop
add
sti
outsb
mov
ret
call
xchg
stos
push
in
push
mov
dec
icebp
ret
pop
mov
sbb
sbb
jbe
mov
xorl
lahf
jae
mov
stc
lods
xlat
push
jo
lea
stc
adc
int
add
scas
or
fisubrs
xchg
sbb
dec
adc
orl
xor
int
pop
fwait
mov
bound
cs
iret
mov
fisttpl
mov
or
into
in
shrb
pop
lock
xchg
pop
mov
xchg
or
repnz
xorb
leave
lds
in
fsin
test
mov
inc
movsb
fstps
cmpsl
arpl
dec
das
les
jae
add
xchg
lea
and
lret
out
decb
rcrl
dec
sub
loopne
dec
fdivl
aaa
inc
mov
pop
repnz
jns
cmp
div
xor
cmp
add
mov
and
mov
je
in
xchg
es
lret
push
xchg
lahf
adcl
pop
xchg
or
or
out
adc
dec
xchg
mov
sub
adc
decb
or
into
daa
cmp
xchg
xchg
xchg
or
cmp
dec
pop
push
and
jl
lcall
mov
xchg
cmp
out
testb
mov
pushf
jl
sti
loopne
xchg
jbe
clc
data16
sub
stos
dec
cmc
icebp
fidivl
rorl
xor
mov
cmc
jns
enter
xor
adc
aas
sub
fcoms
mov
add
out
jp
xchg
aaa
cmp
ret
arpl
sub
ret
mov
sub
push
inc
xorb
test
sbb
jae
sub
leave
int3
pop
inc
int3
jnp
pop
jns
enter
repz
stc
pop
adc
pop
xor
sub
int3
shr
pop
mov
dec
fdecstp
push
xchg
dec
insl
inc
int
in
mov
jmp
and
pushf
rolb
sarl
imul
arpl
lods
shl
mov
cmpsb
mov
les
jle
inc
dec
or
cs
addr16
sbb
mov
inc
hlt
mov
fs
push
cltd
fisubl
ss
rcll
push
push
imul
insl
or
dec
jmp
mov
arpl
lods
fdivs
scas
fcomip
int3
dec
arpl
insb
shl
dec
in
inc
push
mov
dec
inc
lods
popa
call
push
cmpsb
cmp
sub
and
inc
or
sbb
insb
xchg
test
jmp
cli
mov
pop
outsb
mov
test
movl
and
xchg
xor
xor
test
loop
loope
dec
aam
mov
and
stc
rep
sub
ja
jae
adc
mov
push
mov
fcomp
mov
cwtl
je
push
gs
dec
fimull
insl
js
hlt
jo
push
aaa
mov
not
sti
and
xor
popf
add
xchg
mov
and
mov
loopne
pop
stos
add
jns
jmp
sbb
lods
call
ftst
mov
mov
cmp
or
jne
inc
movsb
jg
dec
jl
out
dec
cmp
jl
mov
and
and
lahf
negb
inc
sbb
push
lods
lds
push
leave
xchg
mov
or
or
mov
xor
mov
into
out
fidivs
pop
popf
pusha
popf
push
imul
sbb
mov
push
inc
es
sahf
ja
ds
jno
fdivrl
mov
dec
xchg
jns
mov
push
jo
xchg
jno
jbe
mov
pop
jmp
push
xor
xchg
frstor
jns
mov
clc
fwait
push
mov
mov
xchg
clc
sub
adc
repz
psrld
pop
inc
dec
jnp
rorl
sahf
dec
dec
aam
int
jmp
sbb
loopne
shll
lahf
aaa
enter
orl
stc
adc
xor
mov
and
je
inc
dec
xor
xlat
push
into
mov
xor
insl
dec
jmp
cli
inc
pop
jae
mov
bound
aas
cmp
lret
or
mov
lock
sbb
adcb
fbstp
imul
inc
and
pop
push
out
lahf
imul
add
mov
sbb
aad
pop
iret
mov
push
jge
ja
rcrb
and
and
xchg
js
ja
int
inc
push
sti
ds
in
xor
stc
inc
adc
fisubrs
cmp
jno
mov
cli
mov
dec
xchg
sahf
xchg
scas
lret
sbb
lds
and
sub
ret
jnp
out
mov
dec
lods
cmp
rorl
push
mov
and
sar
movsl
loopne
fldenv
jecxz
add
pop
rcrl
outsb
lock
push
gs
pop
jae
pop
lret
fs
inc
dec
and
xchg
insb
addr16
mov
and
stos
movsl
imul
sub
aas
sub
lret
or
xlat
cmpsb
cmp
mov
mov
call
shl
cmpl
ja
jp
xor
sub
sub
ds
and
imul
xchg
jnp
add
addl
outsl
fwait
ds
xor
inc
cmp
inc
aam
es
jne
out
scas
xchg
xchg
repz
cmc
sub
jg
jb
fs
xchg
imul
cmpsb
add
stos
icebp
mov
ja
into
pop
cltd
mov
int
out
add
int3
push
sahf
dec
adc
adc
push
push
subl
scas
jo
jno
dec
test
mov
adc
cli
stc
xor
scas
cmp
or
cs
sub
out
jns
pushf
mov
nop
scas
arpl
jg
into
loop
mov
ljmp
mov
mov
jne
sub
ljmp
or
popa
dec
nop
cmc
and
jne
lds
add
ljmp
gs
inc
rorl
lret
cmp
push
or
xchg
decl
adc
xor
out
mov
mov
arpl
sub
mov
into
push
and
inc
repz
nop
test
shll
mov
bound
adc
aaa
push
mov
lods
jl
inc
sbb
mov
xor
sbb
rcrb
loopne
xor
clc
mov
jle
mov
xchg
pop
inc
iret
jl
lds
push
ficompl
jmp
jecxz
or
scas
fdivrl
int
mov
sbb
adc
ret
out
repz
mov
das
movsl
sbb
repnz
mov
loope
sbb
add
sahf
and
ficomps
sbb
pop
xchg
mov
out
fisubrl
dec
cmp
or
mov
ljmp
lret
lods
and
movsl
or
fsubs
in
sub
lea
arpl
nop
xchg
mov
push
push
mulb
clc
cmp
mov
push
jnp
lock
fcomps
cmp
mov
and
or
mov
and
xchg
in
js
mov
dec
lock
or
pop
test
mov
aaa
test
jmp
pop
jecxz
push
or
xchg
aaa
test
add
ret
cwtl
gs
mov
fidivrs
or
call
dec
xchg
movsb
in
int3
pop
push
pop
loopne
fldt
sbb
iret
mov
cld
stos
or
lock
xchg
fisubrl
sub
sahf
adc
out
push
fcmove
xor
xor
rcll
add
fnstsw
cmpsl
mov
in
xor
jne
jge
xor
pop
repz
movsb
or
mov
popa
jnp
mov
xchg
cmc
ret
shll
jg
push
int3
faddp
mov
and
fcmovbe
inc
inc
jb
mov
int3
push
mov
das
mov
dec
sub
das
shrl
pop
mov
dec
sub
jnp
xchg
scas
aam
addl
and
sarb
lret
mov
lahf
in
push
lods
jae
sub
pop
xchg
add
or
mov
mov
xchg
mov
js
pop
mov
gs
dec
insl
push
mov
dec
stos
movsb
inc
xchg
out
pop
aad
jo
cmp
rorl
stos
in
push
movb
movb
ret
enter
inc
or
xor
std
jg
cmp
inc
mov
mov
daa
xor
rorb
push
sti
push
ja
mov
lret
call
addr16
pop
mov
out
hlt
mov
lods
mov
cmp
push
int
adc
mov
sti
jno
mov
or
jge
cmp
jle
popf
add
test
push
push
sub
aam
scas
testb
pop
mov
cld
adc
sub
pop
adc
nop
pop
call
testl
dec
out
fnstsw
adc
cmpsl
cld
ficompl
cmp
sub
mov
pop
mov
mov
xor
xlat
mov
mov
inc
inc
push
cmpsb
lahf
and
jmp
pop
jle
loopne
aaa
int
jg
scas
jne
xor
mov
dec
scas
daa
push
ret
clc
lret
jle
in
jmp
mov
xor
jl
pusha
addr16
shlb
imul
fld
call
push
inc
lret
scas
push
sub
pop
and
adc
in
mov
insb
mov
inc
xor
mov
or
mov
lahf
loop
fstpl
and
or
pushf
mov
les
shr
xchg
sbb
les
fsub
imul
mov
shlb
xchg
jae
cmp
xchg
aam
aam
inc
xchg
call
xor
pusha
jmp
xlat
jg
test
pop
xchg
adc
cwtl
sbb
clc
inc
cmp
lret
lret
dec
jecxz
ret
sub
out
pop
lcall
sub
in
in
mov
and
out
adc
nop
dec
jmp
xchg
data16
adc
inc
iret
jp
jns
or
or
subl
sahf
push
jp
add
jmp
lcall
frstor
xor
in
dec
inc
push
dec
mov
jae
pmulhuw
fisubrl
rorl
jnp
in
mov
and
push
mov
loop
loopne
in
xchg
jle
out
and
xlat
cli
js
std
mov
popf
outsb
shlb
std
sub
lahf
bound
icebp
ret
add
imull
dec
and
push
cld
push
jns
inc
int
fwait
ljmp
ds
lahf
mov
scas
sbb
int
pop
sub
out
inc
push
xchg
int3
out
jmp
add
rclb
inc
mov
mov
cmp
jnp
ret
sub
cmp
mov
shlb
call
xchg
or
dec
pop
fsubl
cmp
push
fsubrl
and
neg
imul
div
and
jge
inc
icebp
adc
imul
inc
xor
sarl
add
push
dec
rolb
pop
das
hlt
filds
mov
or
xorb
mov
mov
xlat
int3
jle
test
dec
rcr
push
xchg
mov
xchg
rclb
test
orl
nop
ret
adc
lahf
test
insl
sbbl
sbb
cld
int
fwait
push
ds
mov
and
lcall
xchg
jo
loop
shll
adc
or
repnz
pushf
push
and
cmpsb
fisubs
dec
loopne
mov
cmp
xchg
pop
rol
fcmovbe
sub
mov
lods
orl
and
inc
pop
movsl
mov
mov
and
sub
fcmovu
mov
mov
jno
outsl
mov
sbb
je
or
xchg
lret
mov
push
sub
pusha
xor
lea
ja
movsl
ljmp
fdivrl
xchg
mov
rol
in
xor
mov
aas
jb,pn
and
test
jo
scas
mov
mov
dec
mov
test
lds
adc
movsb
jle
cmp
pop
xor
jns
xchg
jbe
jnp
mov
inc
lret
aam
dec
mov
cmp
cli
cmpsl
inc
test
inc
mov
cmovne
lds
jg
dec
xchg
addr16
das
inc
in
ljmp
and
fdiv
cmp
fwait
cmp
sbb
sbb
mov
hlt
cmpsl
cld
movsb
mov
xchg
sub
cwtl
sub
jle
mov
xor
push
gs
mov
adc
and
pop
cmpsb
pop
repnz
push
sub
sub
repz
adc
mov
fld1
iret
dec
jne
movl
push
mov
fs
mov
scas
sub
jb
xchg
and
stos
sti
aas
mov
clc
add
mov
sub
scas
mov
sbb
fmul
mov
out
pop
adc
scas
enter
jmp
mov
cltd
je
adc
cmc
cmp
addl
xchg
cmp
es
fisttpl
push
lcall
fcomip
mov
sbb
push
cmc
mov
pop
mov
cmp
stc
repz
sub
ret
out
mov
jnp
lods
pop
adc
push
pushf
cmp
pop
loopne
sarb
fsts
outsl
scas
incb
mull
mov
lea
push
jae
xchg
push
lret
mov
outsl
insb
jecxz
push
add
jno
out
xor
mov
scas
and
adc
xor
leave
adc
fwait
xchg
adc
hlt
movsb
into
ds
pop
xor
mov
pop
push
sub
dec
arpl
dec
test
dec
mov
sbb
mov
std
mov
adc
inc
repnz
dec
cld
stos
pop
mov
testl
xor
shrb
inc
xor
and
aas
ja
mov
or
pop
xchg
sub
push
fdivr
int3
xchg
lret
lds
data16
pop
loopne
clc
dec
sahf
fcoml
and
leave
inc
fcoms
out
repnz
mov
nop
mov
xor
adc
xchg
add
or
int
andb
in
mov
lcall
dec
pop
jbe
movsb
push
aas
jle
arpl
fimuls
sbb
sub
push
push
shrb
dec
and
add
inc
out
inc
dec
in
mov
mov
dec
in
adcl
inc
imul
fsubrl
test
mov
adc
pop
push
scas
clc
adc
aam
inc
lea
jns
cmpb
pop
ja
adc
scas
add
mov
dec
fs
jl
pop
or
adc
add
stc
sbb
dec
cmp
sbb
xor
cmp
les
int
stos
adc
testl
cmp
xor
lahf
movsl
inc
push
andl
sahf
pushf
pop
mov
mov
fstl
fildl
jecxz
call
int
sub
jmp
push
inc
jb
or
jecxz
add
out
idivb
fsubr
add
jbe
out
mov
dec
inc
sbb
jb
and
cltd
pushf
jne
sbb
daa
inc
push
inc
dec
cli
test
sbb
add
enter
imul
xchg
inc
xlat
mov
or
mov
or
subb
out
stc
jg
imul
sub
in
add
pop
mov
ficoms
shlb
test
idiv
jb
mov
cmp
mov
sub
or
test
jne
out
imul
add
lock
popf
adc
mov
out
in
mov
sub
sub
lds
fnsave
inc
out
aas
push
mov
dec
clc
out
and
scas
push
jmp
jb
add
int
pop
sub
or
pop
outsl
out
xchg
push
mov
in
cs
adc
hlt
push
add
decb
fbstp
call
xchg
arpl
std
inc
movsl
and
mov
into
lahf
mov
pusha
out
jbe
lock
loop
bound
pop
pop
fdivrs
dec
bound
fsubl
and
repz
ret
xor
mov
and
sub
sub
lds
pop
mov
pop
aaa
ja
adc
orl
imull
push
sahf
ret
movsb
xorl
and
jecxz
outsb
push
pop
loop
mov
nop
dec
xor
sub
inc
sub
push
lcall
pushf
stc
mov
loope
roll
loope
xchg
push
and
or
pop
push
add
cmp
es
jle
leave
dec
aaa
sbb
dec
sbb
and
mov
cwtl
inc
pcmpeqb
repnz
lcall
cmp
mov
cld
filds
inc
and
push
or
or
inc
jns
push
ds
icebp
das
sub
add
in
int3
jae
push
add
in
nopl
add
inc
mov
movsl
setle
mov
pop
add
mov
sbb
cmp
clc
mov
mov
loope
test
out
ljmp
gs
pop
das
lret
les
jae
mov
fcomip
loope
jnp
push
js
loope
cmp
imul
stc
cmp
cmpsb
sub
push
xor
and
rcll
js
inc
out
in
cmp
mov
xchg
xchg
aaa
push
icebp
insb
adc
lcall
adc
clc
leave
jo
outsl
adc
jecxz
fwait
mov
ret
fbld
jbe
ds
iret
fstl
fs
push
cmp
or
loopne
jl
jae
sbb
call
insb
jno
xor
leave
push
pusha
sub
adc
les
mov
pushf
jge
sub
icebp
cld
pop
in
mov
mov
xor
cmp
in
pusha
loop
adc
leave
clc
dec
aaa
mov
mov
data16
cmp
mov
dec
stos
pop
pop
test
std
push
xor
pop
mov
pop
insb
shrl
mov
pop
sub
sahf
imul
add
push
sbb
adc
std
repz
loop
test
pusha
stos
adc
div
rcrb
addb
cmc
push
lds
out
into
pop
push
pop
aam
lods
stos
adc
pop
dec
out
fldcw
inc
xlat
daa
shlb
xchg
xor
clc
pop
cmpsb
adc
push
cmp
icebp
les
sub
push
pop
xchg
mov
lods
in
mov
sti
inc
mov
cld
jg
sbb
xchg
in
into
mov
ficoms
fldl
xchg
loopne
jmp
xchg
inc
bound
mov
lea
add
or
jmp
inc
movsl
cmp
ja
cmp
pop
xchg
and
xlat
lahf
shlb
jle
mov
lock
popa
add
dec
xchg
das
pop
adc
or
pusha
or
stc
or
adc
cmp
mov
arpl
loope
test
sub
inc
cld
jecxz
mov
push
add
sub
mov
sub
nop
aaa
cwtl
in
lds
inc
adc
jmp
cmc
cld
sbb
xchg
mov
or
sub
fcoml
cmove
arpl
or
or
mov
xor
icebp
aas
xchg
jb
push
sub
lods
dec
fdivs
popa
xchg
in
push
adc
push
test
imul
daa
das
lds
xor
mov
push
into
cmp
jle
and
lds
int
cmp
mov
cmpsb
adc
jbe
sub
cld
inc
enter
dec
mov
fdivr
mov
jbe
notb
inc
loopne
or
xchg
cmp
inc
sbb
inc
aad
cmp
sub
mov
mov
and
xchg
data16
vmptrld
shl
out
mov
and
sbb
ret
repz
or
push
or
mov
sub
xlat
sbb
jg
xchg
je
pop
clc
mov
adc
out
pushl
cmpsb
loope
mov
test
add
pushf
adc
iret
int
inc
scas
push
std
test
out
nop
outsl
sbb
stos
sahf
xchg
mov
dec
ret
scas
jl
arpl
dec
and
mov
movsw
inc
inc
sti
imul
sub
push
push
cmpsb
jle
xchg
call
testl
hlt
out
fabs
std
nop
jp
icebp
sti
jecxz
push
jae
mov
xchg
cmpsb
pop
inc
int3
jne
ret
mov
add
daa
sub
stc
pop
std
or
scas
mov
xor
mov
movsb
xor
mov
mov
sahf
out
cmp
ficompl
into
mov
lds
mov
xor
addr16
pop
call
cwtl
lahf
push
sub
rolb
rclb
aam
ss
test
jmp
jg
mov
xchg
fiadds
icebp
add
jno
shrb
cltd
mov
dec
orl
test
ss
ds
imul
cmc
lret
jb
ds
or
xor
imulb
fdivrl
mov
mov
bound
xchg
inc
and
and
adc
cli
lock
jo
test
mov
in
push
mov
inc
insl
std
test
jl
sti
arpl
mov
cmpsb
sbb
rolb
adc
test
leave
mov
int
in
shr
std
xor
push
jno
shrb
lea
test
xchg
xchg
cltd
mov
xchg
daa
fcomps
dec
pop
mov
pusha
fcmovne
ss
fs
nop
ss
or
cmc
cmp
mov
stos
mov
ret
mov
rcr
stc
stos
lds
les
outsl
sub
xor
xchg
or
fcmovb
pop
movsl
int
lahf
outsl
push
fbstp
pop
in
daa
add
push
add
test
popa
hlt
inc
jae
sub
xor
pop
ret
push
adc
xchg
sbb
jo
fcoml
mov
cmp
loop
lret
sahf
xlat
mov
clc
movsl
cmp
sbb
in
adc
clc
xlat
pop
outsb
int3
cld
fadd
xlat
or
ja
test
push
cld
fildll
aad
jl
popf
popf
pop
add
cs
inc
lods
test
fwait
mov
jl
inc
fwait
cld
out
dec
dec
fwait
cmp
stos
or
popf
adc
pop
icebp
sbb
lahf
mov
xor
hlt
mov
sbb
shrl
call
push
rcrb
shrb
pop
dec
sti
cmpsl
leave
mov
jo
sub
xor
inc
mov
filds
fcmove
je
xlat
xor
jb
jecxz
mov
aaa
xor
repz
stos
dec
dec
stos
ja
mov
add
pop
jmp
pop
jle
pop
mov
mov
inc
hlt
inc
call
addl
push
flds
mov
fists
push
popa
or
xor
and
jle
lahf
into
cmpb
mov
fstl
push
push
push
or
in
mov
cmc
out
fdivr
xor
bound
gs
pop
lock
cltd
inc
insb
scas
push
pop
jne
pusha
push
loopne
cmp
push
outsb
mov
and
add
cmp
in
dec
js
cmpsb
ss
push
popf
mov
addl
bound
cmp
insl
out
cltd
push
jne
cmp
outsb
mov
fsubr
int
xchg
and
sub
into
push
add
push
cmp
push
pushfw
into
bound
push
std
lds
push
jno
pop
adc
mov
mov
dec
mov
addr16
or
xchg
mov
lret
jb
into
push
push
test
stc
out
add
shrb
out
mov
bnd
aaa
clc
jne
mov
icebp
repz
outsb
ds
fwait
pop
sti
adc
dec
mov
call
jl
aam
je
add
jno,pt
lods
push
push
repz
daa
icebp
push
sub
imul
pop
sub
xchg
fwait
pop
sub
add
or
jo
and
sub
sbb
fadds
in
iret
and
jp
jmp
push
addr16
jno
xor
push
aas
cmp
pop
cmp
xorl
inc
call
inc
out
xchg
flds
mov
mov
mov
add
jnp
outsl
pop
fsubrl
push
xchg
inc
ret
push
add
pop
add
je
pop
bound
cli
mov
xor
mov
xchg
sub
mov
push
not
ss
fwait
scas
call
stos
aaa
test
loop
call
inc
xor
test
out
aam
fadd
mov
stos
test
pop
mov
arpl
push
shrl
fnstenv
dec
add
das
jbe
jnp
test
adc
dec
and
in
adc
or
jecxz
push
sub
int3
or
inc
push
lret
into
pop
jmp
rorl
jae
sbb
bound
mov
adc
inc
add
cmp
popa
pop
loope
lret
fstpt
nop
add
pop
shl
movsl
fnstenv
fnstcw
and
shll
xchg
jp
sbbb
and
test
mov
out
sarb
xchg
jnp
lock
aaa
fsubr
das
push
fmuls
rolb
cs
fidivrl
add
lcall
mov
ljmp
mov
movsb
lcall
sub
dec
sbb
pop
or
into
pop
cmp
repz
pop
sbb
repnz
sub
mov
pop
add
mov
cld
js
push
mov
sub
es
cmp
add
pop
fwait
or
imul
add
div
popf
ss
add
ficoml
xor
or
int
inc
fisubrl
bound
into
lahf
xchg
mov
mov
cmpsl
add
sarl
push
imul
inc
popf
xor
ljmp
pushl
jno
popa
adc
push
pop
add
xchg
push
lahf
leave
gs
aas
ss
stos
test
popf
pusha
sub
inc
mov
push
test
ret
or
loope
stos
ds
mov
xor
call
sub
je
and
inc
xor
pop
mov
shl
lcall
jo
and
inc
mov
pop
idiv
push
push
pop
int3
es
js
lret
mov
mov
lcall
pop
cmpsb
dec
in
dec
js
loopne
push
repnz
jnp
mov
push
pop
xor
int
lret
adc
sbb
sbbb
fs
icebp
or
jle
mov
jae
or
jno
icebp
inc
mov
sub
stos
push
stos
pop
xchg
xchg
aas
addb
add
mov
mov
mov
push
outsl
pop
nop
gs
inc
mov
jno
push
jg
aas
dec
push
sub
xchg
imul
stos
mov
mov
mov
xchg
mov
sub
xor
pop
orb
test
xchg
sbb
mov
fisubrs
dec
pop
ljmp
das
mov
sbb
sbb
icebp
cs
and
mov
pop
jle
jae
test
mov
mov
leave
mov
or
cmc
ja
pusha
sub
mov
jle
pop
pop
add
and
cmp
lds
mov
jmp
mov
inc
popf
add
cmc
je
and
fidivl
pop
sub
imul
call
push
popf
out
mov
inc
add
imul
sbb
lret
test
pop
sub
es
dec
fisubl
add
pushf
jb
cld
jle
jle
flds
xchg
repnz
lret
mov
sbb
imul
mov
popa
pop
add
movsl
inc
push
mov
arpl
outsb
xlat
xchg
or
and
ds
sbb
adc
and
add
iret
insb
jp
enter
inc
inc
adc
push
push
xor
xacquire
aad
jnp
sbb
cmp
mov
mov
lret
inc
testb
xchg
negb
push
js
add
jbe
cmp
xchg
adc
jo
fdivrs
cs
dec
dec
mov
xor
mov
lcall
jg
daa
sub
sbb
add
in
cmp
pop
out
ficoms
jge
sub
sub
popa
mov
xor
xor
cs
fidivl
and
and
or
fcoml
inc
loope
mov
int3
pop
pop
aaa
sub
pop
out
jmp
pop
pop
add
int3
mov
pop
imul
mov
mov
sbb
push
loop
xchg
fidivrs
pop
test
lds
dec
imul
hlt
std
mov
stos
stos
mov
fcomps
push
cs
cmp
sbb
xchg
bound
outsl
hlt
das
inc
push
clc
lods
push
push
sub
pop
mov
int3
into
add
in
adc
and
aam
lods
pop
inc
xor
fsubrl
mov
lret
data16
push
xorb
cmpl
add
lret
jg
stc
fcomp
xlat
inc
inc
pusha
ljmp
adc
xor
lods
add
lods
lret
push
adc
inc
movsb
xor
jns
movsl
int
or
int3
cmpsb
popf
jecxz
inc
addr16
sub
scas
out
cmpsb
inc
jecxz
xchg
add
jo
clc
roll
jge
sbb
arpl
popl
cld
je
pusha
mov
mov
sahf
icebp
fdivrs
js
ja
stos
test
cmpsb
and
dec
fdivrs
pop
jle
dec
incb
add
jmp
je
test
adc
in
cmp
out
add
mov
es
mov
adc
fiaddl
pop
cmp
jge
lea
fcomps
and
jno
imul
dec
pop
jae
pop
pop
mov
xor
sub
xor
jne
call
dec
gs
ret
dec
insl
jns
faddp
mov
mov
cmpsb
ss
mov
in
loope
insl
mov
sub
clc
mov
xchg
adc
sub
rcll
xor
nop
pusha
pop
arpl
pop
mov
gs
mov
sbb
add
xchg
pop
outsl
shr
jo
subb
cs
add
out
pop
test
add
cwtl
mov
mov
inc
in
gs
jnp
testb
adcb
inc
mov
cld
fisubl
clflush
push
inc
test
jge
aad
stos
gs
mov
mov
sbb
sbb
add
icebp
sbb
into
jnp
xlat
fldt
repnz
lcall
aam
data16
movsb
out
xor
xchg
lret
jne
daa
inc
mov
xor
xchg
pop
fcoms
fmull
pushf
sbb
mov
rcrb
and
xor
into
add
jge
adcl
lock
push
jbe
test
sti
test
int
pop
mov
xor
movsb
xor
jno
xchg
rorb
jo
xor
ret
ret
fcomi
ja
lods
jns
add
dec
push
sbb
lods
es
pcmpeqw
je
popa
dec
bound
push
outsb
dec
arpl
lods
pop
and
sbb
inc
pop
cmp
dec
test
xchg
jo
mov
xor
mov
pop
add
mov
arpl
lock
jns
inc
mov
mov
lods
ror
sub
xchg
cmp
dec
adc
inc
cmp
dec
pop
dec
popa
push
jp
gs
adc
in
jne
adc
lods
pop
pop
test
outsb
jno
cmp
inc
mov
aad
jnp
sbb
mov
mov
jge
mov
int3
fmuls
js
in
sahf
pop
sbb
dec
ja
dec
pusha
in
push
mov
mov
lret
scas
notb
mov
adc
in
imul
xchg
xchg
popf
pop
imul
scas
cld
or
sub
dec
cmp
jecxz
sbb
and
adc
mov
adc
lea
cltd
jle
pushf
cwtl
pop
testb
add
cmpsb
fcom
rolb
nop
leave
jl
inc
shlb
daa
mov
fdiv
pop
mov
mov
xor
add
pop
jnp
mov
mov
cmp
dec
mov
jnp
clc
ret
xchg
xor
mov
cltd
pop
pop
mov
jecxz
mov
test
movsl
dec
ret
outsb
into
es
in
and
adc
jno
jg
jns
scas
or
movsb
pop
sbb
gs
sbb
sbb
add
xor
pop
ja
cs
push
je
lods
add
push
mov
mul
cld
mov
jp
lret
cmpsl
test
dec
push
popa
mov
adc
fsubrl
xor
pop
pushf
jle
rolb
or
in
vpextrw
lds
xor
notb
stos
shlb
mov
and
call
push
mov
rolb
adc
movsl
out
incl
iret
sub
cmp
jne
mov
and
fwait
inc
outsb
or
push
cwtl
aam
mov
std
sub
push
xchg
or
cmpsl
xor
add
pop
cmc
sahf
jmp
and
outsl
or
pop
ficoml
aaa
stc
jnp
dec
adc
fiaddl
pop
pop
xchg
cmp
lods
mov
sti
mov
cmpsb
and
push
rorl
push
jno
call
add
dec
inc
xchg
xor
xor
mov
jae
aas
jo
mov
cmp
xor
imul
test
daa
sbb
add
and
dec
jae
xlat
icebp
sahf
cmp
xor
inc
ret
mov
negb
dec
lret
fwait
pop
add
and
and
mov
sub
les
insb
stos
scas
call
or
cld
cltd
cmc
xor
sub
enter
fstpl
jge
call
xchg
push
aam
stos
sub
lods
leave
xchg
inc
in
mov
fdivl
xchg
ror
cltd
cmp
and
push
cmc
xchg
test
push
sbb
mov
push
test
daa
cmp
push
dec
mov
sbb
pop
leave
adc
jle
mov
fwait
adc
dec
cmp
dec
in
sub
or
push
or
mov
sahf
mov
mov
imul
cld
xchg
call
jl
push
movb
jge
xor
sahf
sub
stc
sarb
sahf
pop
mov
lret
push
lahf
jbe
fcomps
push
or
jg
pop
push
push
addr16
scas
fistl
ret
adc
xor
iret
mov
pop
mov
push
push
inc
into
add
aad
and
or
ret
aaa
into
cmp
jo
mov
and
pop
jb
test
xor
jne
ftst
mov
aaa
repz
notb
popf
bound
stc
jge
ja
mov
mov
or
mov
inc
imul
leave
cmp
lods
test
jmp
ffreep
ret
cmpb
stc
insl
popf
mov
mov
jge
popf
inc
mov
pop
in
cmp
in
stos
or
andl
pop
push
cmp
cmpsb
ret
rolb
pop
push
xchg
dec
xor
or
mov
leave
pusha
insl
add
aad
and
data16
xor
xchg
in
cmp
xchg
test
dec
int
sub
cmp
and
mov
ljmp
mov
jo
inc
shl
movsb
lock
push
or
lahf
jge
pop
subl
jbe
fisubl
mov
push
popa
fisubrs
sub
gs
jae
xor
xchg
dec
adc
rorl
pop
add
cmpsl
jp
xchg
int3
pop
jnp
xchg
arpl
xor
dec
repnz
ds
gs
jge
ds
outsl
insb
je
push
pop
sub
push
out
loope
dec
imul
sbb
or
cmp
repnz
aad
mov
idiv
fbld
lahf
push
ds
xchg
mov
les
imulb
adc
mov
aaa
push
jp
lahf
add
jnp
mov
jb
mov
push
push
bound
jmp
pop
shlb
fxch
dec
and
stos
out
push
jle
sub
test
into
and
shr
dec
mov
iret
int3
das
jp
loope
scas
outsl
shl
sti
sub
cmc
lds
cmp
jle
shl
push
aad
ret
cld
xchg
cld
mov
dec
or
repz
insl
or
mov
stos
and
lock
ja
sbb
sbb
sahf
dec
jg
cmp
jo
test
pop
mov
ror
fcompl
xor
js
je
add
imul
pop
sahf
divb
lods
pop
mov
subl
dec
lret
imul
aad
sbb
pop
test
scas
ret
jl
adc
mov
adc
stc
adc
addr16
out
push
rorl
push
insl
jmp
loope
jbe
sub
or
out
and
add
xchg
aad
fsubl
or
mov
xor
sbb
push
movsb
jns
and
notl
or
sub
leave
dec
sbb
ja
jbe,pt
cwtl
cmpb
mov
stos
jmp
mov
clc
mov
xchg
jns
sahf
jg
ret
xchg
add
cld
mov
pop
inc
testb
or
stos
shl
mov
lods
testl
sub
push
ja
xchg
inc
mov
add
cmpsl
setb
add
sub
jno
gs
cmp
sub
aas
xor
cmpsl
imul
lret
in
inc
pop
add
sbb
inc
cmp
push
sbb
mov
adc
lods
ret
xchg
lret
push
incb
pop
cmp
dec
jle
mov
add
sub
cmc
mov
inc
lods
cmp
lea
std
lods
sbb
arpl
mov
push
fst
mov
add
repz
mov
pop
jmp
test
ljmp
in
mov
imul
sbb
mov
xor
add
push
xchg
and
add
out
push
pop
stos
and
scas
adc
jbe
xor
imull
jae
iret
call
cmp
bound
test
fwait
jmp
sbb
das
xcrypt-cfb
cmpsl
mov
jge
iret
pop
ret
mov
sti
pop
add
test
pop
ret
mov
push
xchg
adc
fists
jae
add
fdivl
movsb
psrlw
and
jle
mov
xchg
and
and
pop
pop
xchg
dec
out
fiaddl
adc
lods
ss
mov
inc
gs
jnp
cmovno
sub
jno
mov
fst
popa
inc
or
jp
ret
pushf
xor
mov
mov
stos
push
jns
push
sub
lcall
int
inc
mov
and
sub
movsl
test
popa
je
hlt
out
mov
mov
inc
adc
mov
int
cwtl
ret
clc
pop
rcrb
inc
decl
hlt
mov
adc
mov
cld
int3
adc
gs
nop
loope
aas
out
iret
sub
adc
push
test
lds
add
jb
pop
orb
push
sti
cmc
dec
cli
push
jmp
call
pop
xor
inc
xchg
fdivr
sbb
call
sub
lock
sti
push
je
adc
les
sti
cmp
push
imul
push
inc
lahf
pop
mov
test
and
xchg
xor
scas
cmp
sbb
xchg
into
add
inc
and
mov
and
or
mov
scas
mov
mov
dec
inc
xchg
std
jle
sbb
xchg
imul
pop
xor
movsl
lea
in
cmp
cmp
pop
imul
dec
sbb
inc
mov
mov
sub
in
lret
mov
loope
pop
inc
leave
jp
cmpsl
fs
inc
and
sub
out
inc
das
add
jge
je
leave
loop
aad
ret
jno
insb
adc
les
cmp
imul
mov
daa
scas
cltd
ljmp
idiv
and
imul
cli
sarb
fs
push
push
aas
in
add
out
aas
fildll
xor
pop
popa
jmp
lods
scas
push
mov
xor
stos
mov
pop
dec
dec
jge
loopne
addr16
adc
mov
push
pop
sahf
imul
repz
out
xor
add
or
push
dec
gs
xchg
mov
xor
push
xor
xchg
xor
lret
cmp
mov
sbb
cld
and
outsl
xchg
dec
clc
inc
int3
test
outsl
sbb
lret
lret
mov
scas
ja
mov
jge
push
mov
data16
js
test
xchg
out
add
pop
xor
xor
mov
jo
mov
int3
sub
sbb
or
pop
nop
mov
aaa
imul
ss
pop
sbb
adc
scas
aad
shr
and
fldcw
xchg
mov
movsl
hlt
jle
xor
sarl
jecxz
sub
repnz
mov
sub
sub
idivl
shlb
dec
or
xchg
pop
insl
movb
mov
outsb
mov
jmp
mov
jne
mov
out
mov
iret
es
imul
lods
es
mov
jnp
jo
rclb
js
stc
and
adc
lods
mov
inc
mov
xor
and
mov
xchg
aam
xor
adc
fists
dec
push
pop
test
sti
jecxz
and
mov
rclb
jp
pop
out
stos
in
test
adcb
jne
les
and
add
scas
mov
mov
jo
insb
fiaddl
xchg
xor
dec
push
mov
rcll
lds
sbb
popa
aas
sbb
inc
out
leave
push
mov
mov
iret
ds
add
xchg
sbb
mov
mov
push
movsl
jp
out
into
xchg
jnp
and
mov
jns
mov
movsb
aad
mov
add
enter
xlat
push
out
loope
and
out
mov
pop
mov
xchg
xchg
jl
movb
and
mov
iret
addr16
xor
and
test
popa
nop
sub
mov
fldcw
lods
lods
and
scas
mov
mov
test
movsl
js
mov
sahf
fs
pusha
data16
dec
adc
cwtl
fnstenv
pop
xorl
sbb
rsqrtps
adc
cmpsb
jno
and
sub
jmp
pop
movzwl
push
repz
pushf
roll
rorl
mov
xor
mov
sub
ret
mulps
leave
add
js
mov
sub
pop
push
daa
loopne
inc
push
call
cmpsb
je
sub
ss
aas
stos
sub
testl
mov
xchg
adc
xchg
es
push
xor
mov
lcall
mov
xor
pop
mov
xlat
sarl
popf
sbb
adc
adc
sub
insl
scas
cld
gs
mov
push
adc
jae
fsubs
fbld
sbb
std
sbb
out
xchg
jge
js
lcall
pop
aam
addr16
repnz
jecxz
xlat
xchg
mov
addr16
or
sub
mov
push
push
das
into
or
xchg
lock
dec
lock
aam
cmc
rcrl
jle
add
arpl
arpl
in
shrb
dec
lods
add
inc
dec
pop
pop
sti
xor
out
fwait
aaa
and
ds
cmpl
add
xchg
push
cmp
stos
jns
xchg
lods
lods
ja
data16
cmp
hlt
in
jno
add
shrb
xchg
or
ds
xchg
shll
pop
mov
sbb
push
das
rcll
dec
stos
xchg
scas
in
inc
xchg
ss
mov
sub
sbb
or
mov
mov
jno
xchg
les
stos
xchg
and
adc
into
ja
add
in
movsl
mov
cltd
popf
xchg
hlt
push
dec
lcall
inc
and
dec
outsl
xchg
pop
add
out
insl
mov
aad
jne
push
mov
daa
std
xlat
dec
mov
sbb
adc
jmp
jb
scas
pop
cs
cld
nop
xor
int3
mov
arpl
mov
and
stc
roll
pop
push
les
pop
xchg
push
pop
mov
and
push
push
ljmp
jmp
push
leave
loope
push
ja
add
in
push
push
in
xor
dec
inc
push
adcl
dec
lcall
adc
sub
push
loop
and
cmpl
cmp
jo
sub
mulb
mov
and
mov
push
push
in
in
jns
js
xchg
sbb
shl
mov
jge
fisubl
push
mov
add
stc
mov
int
test
jl
out
into
push
das
mov
out
ret
jle
sub
mov
lret
adc
aam
xlat
fsqrt
dec
dec
imul
imul
lods
aaa
sub
mov
add
ljmp
pop
lods
sbb
push
clc
inc
arpl
dec
fadd
cltd
pop
or
sub
daa
cld
int3
es
push
sbb
ficoms
std
cli
or
or
nop
adc
lea
pop
jle
xchg
xorl
cld
ljmp
mov
fs
pop
shlb
xor
jae
pop
pop
lcall
or
or
out
int
push
sahf
mov
out
sub
or
sbb
pop
lret
add
mov
scas
mov
fs
inc
and
test
into
or
std
out
add
push
aaa
ds
inc
clc
ja
pushf
lea
pop
mov
or
cmpsb
jecxz
xor
ret
subl
mov
jmp
mov
pusha
xchg
xor
push
jnp,pn
and
mov
mov
ljmp
cmp
jg
dec
insl
add
add
xor
add
add
push
mov
mov
pop
sub
fwait
sarl
and
arpl
das
test
add
daa
add
jg
iret
cs
or
fildl
jnp
mov
je
xlat
insb
and
mov
fwait
cmp
sbb
imul
daa
jecxz
icebp
cmp
push
cmpb
js
push
xor
sar
outsl
lret
ds
mov
test
pop
scas
loope
cmc
mov
pop
scas
outsl
into
xchg
cmc
jnp
gs
fidivrl
and
or
sub
hlt
inc
insb
or
ljmp
pusha
mov
cli
lock
mov
popl
js
mov
aad
adc
dec
stc
inc
hlt
scas
mov
pop
loop
outsl
add
or
push
cmp
jmp
imul
int3
leave
cwtl
insb
push
pop
mov
pop
dec
ja
push
mov
inc
cmp
pop
cmovns
push
shlb
xchg
rcrl
mov
dec
inc
push
add
mov
inc
push
cmp
out
pop
xchg
pop
les
loopne
adc
pop
sbb
das
shl
mov
scas
pop
push
outsb
les
fsub
jle
or
ficompl
pop
frstor
scas
or
push
das
cmp
icebp
mov
xor
leave
lock
cmp
aaa
ja
sbbb
mov
adc
mov
jns
popw
or
dec
inc
icebp
enter
pop
loop
jne
jge
mov
sub
jbe
mov
xchg
sbb
inc
and
adc
push
outsl
mov
sub
inc
gs
test
ds
cwtl
lods
ljmp
pop
cmpsb
jno
xchg
pop
dec
cmp
movsl
leave
cmp
dec
xlat
cmpsl
mov
lods
fldl
inc
ss
cwtl
add
mov
mov
inc
adcl
adc
sbb
stc
mov
enter
jbe
jbe
pop
cmovbe
push
sub
fbld
xchg
add
fs
or
mov
je
aas
mov
in
push
loope
jmp
mov
and
or
pop
xor
out
pop
and
jo
call
pushl
imul
ds
sbb
or
das
sarb
and
mov
xorb
inc
lods
daa
fwait
repnz
pop
movsl
dec
iret
mov
mov
mov
adc
std
add
rolb
sub
daa
push
fadds
inc
pushf
addr16
lret
push
sub
mov
adc
or
fdivl
in
or
jge
daa
clc
sub
aas
xchg
dec
dec
lret
neg
in
pusha
int
aam
or
test
sbb
dec
pop
push
push
test
int
cltd
dec
scas
clc
or
or
repnz
sti
out
mull
fmull
xlat
sub
clc
inc
dec
call
scas
jmp
xchg
hlt
cltd
mov
mov
xor
fnstenv
inc
mov
scas
inc
cmp
imulb
inc
cmc
xor
cmp
cwtl
enter
mov
sbb
stos
add
push
add
add
shr
lcall
or
inc
adc
divl
sbbl
js
gs
data16
or
mov
pop
push
gs
dec
mov
push
mov
jbe
sbb
mov
mov
cmc
dec
sarl
mov
jne
adc
sub
mov
pop
adc
cmpsb
cmp
arpl
fadd
ret
dec
or
int3
inc
adc
cmpsl
outsl
rclb
cmp
push
add
or
cmp
mov
sbb
mov
dec
clc
mull
out
mov
push
jle
add
loopne
cltd
xchg
lods
inc
test
and
inc
cmp
pop
mov
insl
xchg
xlat
dec
cmc
stc
push
sbb
aad
pop
push
pusha
mov
rep
push
aam
loop
in
test
mov
add
jnp
lods
dec
cwtl
out
mov
jmp
mov
pop
mov
es
das
int
shll
out
dec
shrl
jno
mov
sub
dec
adc
out
rcrb
inc
push
ror
and
insb
pushf
inc
add
out
dec
push
cmp
mov
inc
nop
gs
jnp
jp
push
fiaddl
jg
popa
adcl
push
stos
rorb
dec
aad
mov
loope
pop
cmp
adc
mov
sbb
shl
xchg
mov
xor
shll
mov
scas
in
adc
adc
mov
je
inc
in
loop
jmp
xchg
in
lds
cltd
rcrb
fnsave
push
andb
sub
test
pop
icebp
sbb
xor
adc
mov
gs
pusha
ret
inc
cmpsl
in
jne
ljmp
xchg
leave
push
jmp
cmpsl
pop
jo
jne
ljmp
cmp
in
shl
mov
shl
lea
lods
mov
add
sbb
sti
cli
pop
push
mov
push
lret
adc
in
addb
sbb
out
push
xor
call
lods
sub
out
pop
mov
ficompl
data16
rolb
jmp
mov
les
into
cwtl
arpl
sti
lock
movsl
mov
jb
cmp
dec
ret
mov
lcall
lds
aaa
inc
inc
push
inc
out
fidivl
cmp
xchg
test
mov
pop
fs
daa
jl
add
jg
fildll
sbb
and
je
adc
ljmp
jecxz
xlat
xor
push
adc
sub
dec
cmc
jbe
push
push
dec
pop
fsub
pop
mov
popa
sub
fstpl
jle
addr16
mov
pop
sub
movsl
sbb
cmp
arpl
lcall
outsb
push
mov
lret
flds
sub
repz
rcl
xchg
out
cmp
insl
mov
jmp
imul
out
int3
cld
pop
in
lcall
mov
cmc
inc
loop
loope
movsl
or
mov
loope
cs
mov
xor
jb
mov
sbb
repnz
movsl
arpl
movl
ret
or
mov
pop
fiaddl
jbe
jp
call
aad
lret
sahf
je
mov
add
mov
cmc
aaa
xor
push
jg
add
inc
adc
pushf
pop
push
aaa
sbb
xchg
cmp
call
aad
jno
cmp
or
mov
out
jle
arpl
push
mov
sbb
cwtl
sbb
cmc
outsl
sub
cmovbe
lret
mov
call
lret
dec
or
js
xchg
jle
repz
xchg
mov
mov
push
insl
loop
leave
scas
xor
imul
sub
xor
push
lret
rorl
sarl
jo
sarl
into
pop
mov
loop
add
popa
fnsave
ja
add
test
mov
fwait
jecxz
je
dec
das
sbb
push
cwtl
adc
dec
addr16
adc
ret
pop
fisubrl
xchg
es
roll
xchg
jmp
gs
dec
xor
rorl
addr16
xchg
xchg
leave
rol
pop
inc
in
and
leave
in
outsb
push
sahf
cltd
push
fdivrp
fisubrs
jmp
mov
and
bound
push
pop
aaa
push
mov
ficompl
loope
outsl
repnz
loop
pop
fcompl
sub
mov
jg
in
test
dec
xchg
fstpt
and
inc
repz
xchg
out
jnp
jge
fimuls
push
and
mov
pop
push
adc
nop
cmp
addr16
xor
mov
ljmp
add
or
aam
add
add
inc
sti
pop
xchg
out
mov
les
mov
jne
jmp
jecxz
arpl
jns
mov
loopne
dec
jb
lock
add
or
aaa
ret
fdivr
int
les
fwait
dec
mov
into
js
mov
fld
es
pop
mov
addr16
out
out
dec
adc
lcall
jno
jno
repnz
mov
popa
lcall
stc
xchg
loopne
mov
push
iret
jecxz
mov
test
add
cmpsl
mov
jmp
add
jmp
mov
inc
addb
stc
cmp
sahf
mov
sub
push
or
pop
stc
pop
scas
xchg
xchg
lahf
xchg
push
cs
es
addr16
xlat
ss
in
and
add
loopne
xchg
or
add
int3
and
ret
cmp
cwtl
xchg
test
jecxz
clc
mov
scas
mov
adc
imul
push
scas
pop
nop
sub
push
icebp
mov
sub
jecxz
faddl
push
hlt
pop
std
and
mov
stc
test
popa
or
fbstp
cmp
push
icebp
mov
xor
sbb
dec
sti
addr16
les
popa
mov
push
push
imul
push
movsb
add
push
mov
out
enter
daa
pop
mov
sbb
lock
xor
jae
pop
stc
repz
jnp
inc
hlt
mov
mov
jg
ret
jmp
jmp
lods
jbe
repnz
inc
in
pop
adc
xor
jg
data16
movsb
mov
movsb
xchg
sbb
xor
es
icebp
fwait
mov
dec
adc
test
std
iret
xor
add
and
inc
mov
jb
lods
sbb
cmpsb
bound
jge
repnz
mov
mov
sub
dec
cld
jae
mov
sub
iret
add
in
cmp
lret
rol
dec
lcall
sbb
add
fisubs
push
mov
xlat
insb
push
jne
ja
push
mov
scas
testl
icebp
std
shrb
push
cmp
xchg
aam
hlt
inc
jno
add
scas
or
outsb
cli
repz
orl
sub
mov
outsb
testb
push
mov
lret
cmp
icebp
jns
push
dec
cld
mov
inc
sub
push
cs
jmp
pop
popf
cmpsl
jo
loop
loope
mov
sub
sbbb
in
push
in
cmp
mov
adcl
push
sub
add
push
xlat
popa
sub
in
dec
push
mov
test
mov
or
mov
jb
jb
arpl
icebp
or
addr16
pusha
fnsave
iret
out
sbb
jg
jo
sub
cltd
je
fstpl
dec
sbb
repnz
pushf
jmp
lahf
push
lahf
cli
add
hlt
xor
adc
psrlw
and
test
es
mov
popf
pop
push
mov
xor
fdiv
aam
mov
pop
arpl
gs
xchg
leave
iret
cmpsl
inc
mov
rclb
jge
das
push
dec
cmp
daa
sub
mov
cmp
sbb
and
cltd
mov
mov
leave
movsb
adc
push
aaa
pop
movsl
jb
icebp
ret
imul
push
pop
jno
and
fldcw
dec
ret
shl
cmpsb
pop
add
outsb
pop
mov
and
daa
out
jb
sbb
lock
insb
mov
mov
repz
pusha
daa
mov
idivl
inc
in
push
mov
cwtl
iret
jle
xlat
imul
movsl
fdivrs
push
lods
aad
inc
cmpsb
inc
and
sbb
pop
ds
sbb
push
adc
or
adc
jg
mulb
test
loopne
movsl
or
fnstcw
cld
fnstcw
ret
sahf
das
sti
jmp
xchg
imul
or
ficompl
pushf
das
ret
nop
stos
sub
mov
mov
dec
addr16
jecxz
in
fistpll
fwait
add
fwait
not
sbb
mov
pushf
mov
lds
or
mov
pop
icebp
dec
sbb
sbb
ljmp
inc
movsb
jns
and
sahf
mov
mov
pop
lea
adcl
jae
jle
lcall
js
cmp
jb
push
cld
clc
sbb
out
sbb
bound
sbb
lea
mov
jns
es
lea
mov
cs
sti
int
mov
add
stos
inc
xchg
add
pop
sbb
inc
cmp
jns
scas
dec
sbb
jl
ljmp
or
gs
in
pop
and
inc
sub
xor
enter
cmp
mov
push
lahf
dec
xlat
jo
or
xchg
pushf
lods
cwtl
hlt
call
sbb
jne
jle
sti
cmp
fwait
xchg
je
lock
aas
jmp
shr
lahf
add
dec
rcrl
push
ret
stc
inc
fwait
aam
mov
push
xchg
or
insb
mov
push
inc
loop
mov
pop
lahf
cmp
test
push
mov
out
addr16
dec
hlt
or
outsl
or
or
orb
cltd
pop
lret
aam
leave
in
jo
inc
movsl
mov
xor
sbb
sbb
in
mov
fst
mov
sub
aad
cmp
jo
addr16
sbb
test
popf
imul
cmp
dec
mov
iret
aad
xchg
jl
out
xor
pop
cmp
add
jne
insl
loop
je
popf
aaa
pop
std
dec
sub
sbb
outsl
outsb
in
jns
add
pop
dec
cmp
pop
add
in
push
jbe
imul
aas
iret
out
vhaddpd
cmp
sarl
cmp
adc
add
loopne
cmp
mov
pop
mov
shlb
in
and
cmp
xchg
ficoms
subb
jecxz
shlb
pusha
std
or
mov
push
rcl
jbe
add
cmpsl
xor
loope
push
sti
mov
addr16
sub
xor
inc
rorl
pushf
pop
fistpll
lret
mov
out
dec
mov
jg
cmc
or
jmp
int
push
sbb
inc
daa
std
inc
cmp
lret
and
pop
hlt
and
jp
push
pop
add
jns
sub
into
push
gs
pushf
adc
jno
dec
cmp
test
ss
mov
sub
out
add
cmp
pop
xlat
addr16
dec
adc
inc
jl
jge
xchg
jecxz
cmp
lcall
insl
aaa
js
push
push
push
xor
push
xchg
pushf
inc
insl
cld
push
sub
ja
cmc
frstor
stos
xor
push
sarb
mov
dec
outsb
sub
movsl
mov
mov
pusha
into
imul
loopne
xchg
mov
outsl
cld
testl
insb
inc
mov
xchg
pop
mov
ficoms
or
int3
sub
pop
mov
and
lds
std
xchg
pop
cmp
inc
jg
and
cli
adc
inc
jmp
mov
adc
sbb
and
shlb
mov
test
lret
mov
xlat
sbb
fldcw
incb
sbb
or
cmp
insl
mov
xor
mov
or
inc
cmc
xor
ds
mov
mov
adc
in
es
outsb
outsb
ds
push
lds
push
pop
mov
xorb
jnp
popf
cmpsb
inc
jecxz
das
loope
stos
cmpsb
xchg
jbe
jl
xchg
mov
mulb
cmpsb
inc
notl
xchg
xchg
andl
mov
lds
in
cltd
pop
ficoms
rcr
xchg
out
jp
movsl
push
sbb
stos
mov
jg
data16
das
push
leave
dec
sub
or
mov
cmp
movsb
jle
and
cs
sbb
or
sub
adc
push
xchg
mov
mov
pop
insl
jmp
test
sub
aad
add
push
lret
movsb
jp
ja
sbb
and
mov
cmc
or
and
fisubl
jg
jmp
dec
dec
or
movsb
pop
push
mov
add
cmp
sub
push
shlb
rolb
jae
pop
xor
cmpsl
adc
and
push
pop
push
xor
jo
aas
jge
test
xlat
fwait
mov
sbb
or
call
push
out
inc
dec
in
pop
and
shrb
add
movsl
stos
push
rol
xchg
scas
mov
cli
mov
add
add
sub
lret
adcb
iret
mov
test
inc
adc
or
mov
loopne
loopne
int3
adc
iret
pushf
sub
insl
xorb
test
or
mov
mov
mov
and
mov
jmp
das
inc
fdivr
inc
inc
imul
mov
insb
cmp
in
mov
and
pop
mov
xor
jg
scas
xor
das
sbb
mov
aad
stos
pusha
cmp
ret
and
enter
mull
repnz
pop
mov
dec
add
sbb
rcr
sub
mov
jl
nop
push
jae
push
cmp
mov
xchg
or
test
bound
call
enter
xchg
xor
add
mov
inc
out
sbb
and
in
aad
xchg
xchg
clc
sbbl
dec
das
mov
cmp
fbld
push
push
cmp
mov
xchg
out
nop
ret
addr16
add
jecxz
push
int
jne
and
adc
pop
js
ja
xchg
loope
into
dec
inc
lahf
pop
insl
scas
xchg
lcall
rorb
xor
sbb
mov
xchg
push
pop
push
fwait
and
popf
adc
ds
data16
push
notl
cld
fiadds
jle
xchg
xor
mov
and
sbb
mov
sbb
mov
mov
repnz
pusha
fwait
cmp
sub
out
add
mov
std
xor
add
cmp
mov
and
push
loope
dec
fisttpll
cld
cmc
pop
sub
cmp
xor
imul
add
add
in
test
pop
pop
xor
daa
int
cld
mov
das
mov
aas
mov
mov
pusha
mov
roll
adc
and
push
mov
mov
push
fiadds
cld
icebp
cmpsb
and
cs
icebp
int3
xor
jnp
sarb
jne
pop
cwtl
mov
sub
mov
pop
cli
call
and
out
jo
les
int
pop
xor
outsl
push
lock
insl
arpl
fidivrs
fisubl
mov
adc
sbbb
mov
inc
adc
and
push
scas
push
test
mov
pop
pop
out
inc
loope
lock
cmpsl
or
mov
lods
inc
dec
xor
jmp
push
out
out
ljmp
pushf
dec
aam
je
pop
pusha
pusha
sbb
imul
mov
mov
inc
pushf
cmpsl
push
or
out
in
add
jl
lods
sub
dec
mov
dec
call
push
mov
mov
mov
imul
sub
mov
jg
subl
push
lock
rcr
push
lock
fisttpl
sbb
popa
testb
jnp
les
sub
call
aas
or
mov
pop
or
lret
out
std
addr16
inc
aaa
cmp
mov
xor
out
xlat
ljmp
out
sarb
cs
mov
inc
cli
jp
pop
xchg
xchg
iret
addr16
lret
and
sbb
xor
sub
and
test
add
dec
lds
mov
ret
ljmp
dec
xchg
lcall
mov
aas
add
xchg
inc
imul
lock
pop
aad
leave
fmull
xchg
lock
mov
mov
fidivs
mov
dec
jnp
or
mov
mov
ss
push
test
sti
je
enter
mov
jb
outsl
fsubrp
faddp
xchg
test
xchg
xchg
adc
jnp
gs
inc
xor
cmp
pop
mov
push
sub
sub
into
add
mov
dec
and
xor
adc
xlat
dec
pop
mov
nop
mov
push
lret
out
scas
sbb
pop
daa
in
pop
gs
cmp
and
dec
lret
shl
push
xchg
ds
out
repz
in
lock
hlt
shll
roll
push
scas
push
aaa
xchg
or
xor
adc
mov
nop
sub
outsb
cli
sbb
dec
scas
fxam
stos
popf
cmp
push
dec
dec
xchg
jno
icebp
jno
sub
jge
or
out
fnstcw
or
inc
bound
lahf
xchg
mov
lods
push
sub
repnz
pop
push
inc
cld
lock
sbb
cmpsb
pop
mov
sub
pop
les
and
call
xorb
fwait
in
xor
pop
sub
cmp
or
lcall
jp
adc
inc
xchg
pop
out
pop
push
lds
into
adc
sub
sarl
dec
mov
negl
movsl
repz
pop
pop
sbb
pop
popf
std
test
jle
inc
add
mov
std
fcompl
movb
ljmp
dec
ficomps
adc
xchg
jne
add
fistpll
and
std
mov
mov
popa
arpl
sbb
aas
and
jno
and
fst
cwtl
test
dec
sub
ret
xor
xchg
lret
push
imul
xchg
insb
xor
stos
popf
and
cs
divl
jae
nop
inc
or
push
jl
mov
sbb
jle
arpl
pop
ret
add
cmpsl
jle
dec
ret
leave
xor
mov
dec
cmpsb
pushf
xchg
pusha
enter
mov
jmp
jmp
into
rcll
jnp
xorb
adc
in
xor
mov
or
xor
fiadds
fldt
daa
fbstp
xchg
insb
test
jl
in
xchg
xor
arpl
adc
mov
or
out
dec
popa
pop
jno
mov
mov
dec
mov
shrb
pop
inc
popf
in
sbb
xchg
nop
test
mov
scas
ja
incl
jl
mov
mov
aam
clc
insl
pop
sbb
fwait
push
nop
add
sbb
dec
jbe
or
mov
inc
outsl
cmp
std
cmc
jnp
lret
pusha
mov
nop
mov
dec
pop
inc
movsl
and
es
imul
lcall
sbb
dec
jns
jns
sbb
jle
or
xchg
mov
mov
sub
dec
mov
cmp
jns
mov
rcr
adc
mov
in
ss
pop
loopne
and
fistl
cmpsb
imull
enter
call
push
adc
push
pusha
call
cwtl
push
movsb
xchg
add
add
enter
aad
lods
loope
xchg
mov
cmp
mov
stos
test
shl
pop
cmp
out
mov
and
inc
imul
leave
mov
scas
scas
push
mov
pop
sub
jp
and
ds
push
inc
jmp
jnp
cmp
arpl
xchg
cmpsb
add
pushf
outsb
daa
mov
rclb
inc
mov
ljmp
lock
pusha
fsubrp
dec
in
cwtl
mov
test
add
mov
fstl
repz
out
add
shl
xchg
xor
das
jmp
cmpsl
movsb
fs
ret
and
stos
icebp
push
pop
inc
xchg
dec
sbb
rorl
mov
movsl
mov
add
cli
aad
inc
jmp
xchg
inc
adc
xchg
cmpsl
xchg
call
ret
mov
les
mov
xchg
int
hlt
sub
adc
dec
or
imul
sarl
pushaw
pushl
and
push
test
mov
sub
repnz
adc
adc
cmc
mov
repnz
shl
insl
xchg
fucom
daa
cmpsl
enter
cmpsl
sub
cmp
add
test
out
jne
repz
jg
leave
sub
inc
push
std
xchg
mov
mov
xor
pop
or
icebp
insl
xlat
outsb
jbe
mov
or
addr16
enter
and
push
aad
dec
pop
push
cmpsl
xchg
mov
nop
fidivs
sahf
fs
sbb
pushf
loope
pushf
int3
je
mov
or
mov
divl
ss
sti
divl
push
addl
mov
enter
inc
push
cmp
fistps
in
stos
int
inc
add
out
sbbl
jmp
lret
sub
cmp
fwait
test
aas
mov
push
or
cwtl
add
mull
cld
pop
jecxz
movsb
mov
into
shlb
fsts
lahf
fs
test
sbb
shrl
cwtl
ret
pop
test
pop
stos
add
shrb
jb
fwait
hlt
push
jno
aaa
into
or
mov
enter
jmp
aam
aas
cwtl
and
jns
xor
push
mov
mov
test
insb
lcall
inc
cld
mov
inc
lcall
call
xchg
aam
mov
fistps
dec
mov
and
sbb
xlat
aad
sub
inc
xchg
fisttpl
jns
mov
jb
enter
lret
adc
xor
xor
int3
push
jge
into
or
out
mov
sub
das
cli
lea
flds
leave
imul
test
jb
add
dec
ss
jl
ss
hlt
jns
in
imul
jmp
cmp
cmp
jl
scas
dec
mov
adc
mov
in
adc
mov
dec
xchg
loopne
or
mov
movd
das
jne
inc
leave
int
inc
out
mov
fstpl
push
pop
adc
add
or
cltd
idiv
lahf
mov
pop
movsl
ds
mov
cmp
sbb
pop
sub
sub
jo
sub
add
out
in
mov
or
sub
mov
adc
mov
das
mov
fmul
ror
xchg
pause
push
push
lahf
mov
mov
ss
stos
xlat
dec
pop
push
outsl
push
leave
push
mov
add
add
je
pop
add
adc
jge
xchg
cmp
cmp
lcall
prefetch
or
scas
inc
out
mov
pop
test
sbb
inc
fistl
ret
xor
push
int
sub
dec
fistpl
sbb
mov
sbb
add
push
stos
sbb
pop
in
cmp
fldt
dec
dec
cmp
jne
xchg
int3
in
sub
data16
cmp
out
sahf
mov
push
call
mov
dec
popf
jecxz
jns
fstp
fwait
push
lds
popa
ret
xchg
cmpb
lock
mov
in
lret
cmpl
aad
mov
es
sbb
mov
or
aad
add
sub
xor
in
cmc
mov
ljmp
add
cmp
mov
data16
xchg
insb
rorb
inc
inc
in
push
aas
daa
inc
ja
pop
cmp
sbb
push
adc
loopne
ljmp
sbb
shlb
inc
adc
mov
add
lock
mov
dec
jl
subb
inc
cmc
rcrl
sahf
inc
aas
std
jge
inc
xchg
lahf
mov
and
sbb
jp
cmp
jne
cltd
pop
sub
dec
inc
repnz
sub
test
add
dec
xchg
xor
lret
lods
mov
inc
push
imul
movsb
sub
popf
cli
dec
inc
push
ss
daa
fcmovnu
and
out
and
js
inc
lds
xor
out
jnp
loop
stc
faddl
cmp
xchg
pop
lds
mov
cmp
adc
fs
cmc
aam
mov
js
mov
mov
ffreep
xchg
jecxz
out
xor
dec
cmpsb
pop
or
stc
add
dec
xlat
aaa
cmpl
imulb
lds
pop
cmp
loope
mov
pop
push
insb
mov
ljmp
addb
or
push
shl
cmp
jae
adc
mov
int
fadd
addr16
mov
mov
cltd
jbe
xchg
fs
gs
lock
clc
mov
fimuls
and
mov
jo
daa
ss
std
adc
push
outsl
cmp
ja
and
pop
inc
sti
ficoms
in
add
lcall
mov
xchg
pop
cmpsl
xor
xlat
xor
adc
jnp
imul
test
arpl
repnz
sub
xchg
test
mov
addb
gs
sub
fsubr
and
jns
in
subps
in
inc
repnz
cmc
lcall
out
and
in
mov
idiv
mov
pop
nop
cmp
dec
push
in
xchg
testb
adc
mov
sbb
push
mov
addr16
daa
leave
lock
mov
fidivl
es
push
movsl
dec
fimull
jbe
or
es
rcll
jns
mov
sbb
enter
and
mov
sbb
sbb
dec
cmpl
out
cmpsb
fldt
shrl
fimull
and
fldenv
xchg
mov
test
sbb
sub
sbb
push
gs
or
pop
push
pop
das
in
pop
or
test
cld
dec
dec
pop
mov
cmpl
bound
jp
push
cmpsl
hlt
fsubl
add
push
cmc
dec
push
add
imul
jle
push
imul
pop
imul
fwait
mov
mov
push
icebp
ret
loope
mov
rcrb
jle
add
jle
dec
rolb
into
leave
lcall
pop
bound
jp
jmp
fistpl
sti
jmp
mov
or
cmpl
int
sub
jmp
inc
movsb
ja
lahf
mov
or
sub
push
jl
int
pop
cmc
mov
out
push
repnz
or
jno
jbe
push
push
test
push
pop
pusha
or
sub
cli
ret
and
push
xchg
xchg
mov
int
ret
pop
sub
aaa
lods
or
dec
std
mov
jmp
push
out
dec
int
jge
push
jecxz
add
jo,pn
jno
mov
xor
or
push
and
jge
dec
into
in
faddl
inc
or
ja
icebp
aas
or
xchg
add
stos
sbbb
clc
jo
cli
jb
ss
das
sti
adc
js
data16
rcrb
insb
shrb
pop
bound
lret
call
jp
cmp
jno
clc
add
idivb
fcoml
sbb
dec
orb
or
mov
mov
push
and
outsb
inc
lcall
lahf
sub
loopne
mov
testl
rcrl
lods
adc
jmp
fdivs
cmp
push
fdivrl
xchg
aaa
outsb
jne
imul
and
or
sub
pop
jl
push
xchg
movsb
loopne
add
in
add
mov
jge
bound
cmp
xor
dec
lods
ss
in
addl
addr16
inc
push
aad
xorl
repnz
push
push
fldl2e
aam
jl
test
lds
inc
out
mov
adcl
dec
das
in
jne
xchg
scas
neg
jne
adc
xor
bsr
or
xchg
mov
out
icebp
jno
sbb
cltd
negb
push
sti
cmp
aam
fsubl
popa
out
and
and
add
push
dec
movsb
push
ss
mov
mov
fdiv
mov
adc
aas
and
and
cmp
push
push
negl
xor
inc
clc
arpl
mov
add
hlt
mov
mov
scas
mov
sub
mov
sub
es
pop
pop
add
add
adc
mov
add
push
dec
roll
insl
imulb
mov
decb
and
sti
and
daa
sub
inc
inc
lods
pop
xchg
mov
loopne
xchg
mov
fcmovnu
inc
pop
cmp
jp
cmp
jl
sbb
adc
fdivrl
in
test
add
jmp
mov
adc
sar
in
aas
xchg
sbb
xchg
jbe
mov
je
mov
sbb
je
push
inc
insl
hlt
flds
out
push
dec
aas
cs
out
fs
movsl
mov
xor
mov
add
or
mov
inc
loop
jns
aaa
cmpsl
adc
fcmove
adc
int
jno
xchg
aam
dec
test
pop
nop
jmp
jl
test
outsb
cmp
mov
push
out
pop
jne
std
in
loope
hlt
xor
xor
and
mov
popa
xor
shlb
xchg
iret
xor
fadds
cmpsl
frstor
les
sbb
jnp
out
add
popa
mov
add
pop
and
fsubp
sub
data16
push
fimull
test
out
xor
icebp
cmp
repnz
lcall
pand
mov
fsubrs
mov
add
cld
sbb
jp
mov
inc
cmp
mov
loope
ss
add
inc
fimuls
stos
or
jg
mov
outsb
sub
adc
jl
sbb
sbb
aas
arpl
xor
and
fs
sub
inc
stos
jmp
data16
push
in
out
jns
adc
dec
mov
loop
stc
testb
aam
es
pop
pop
stc
std
test
imul
shrl
adc
xor
mov
xor
pop
mov
mov
xchg
dec
sub
stos
push
scas
lods
fdivrp
sub
mov
cli
inc
sub
ss
fs
mov
aad
mov
mov
inc
icebp
mov
sbb
sti
cmpsb
leave
sbb
fisubrl
xchg
insb
es
inc
popa
xor
jae
and
add
add
xor
popa
loop
sub
jp
and
adc
pop
sub
pop
sbb
das
test
jne
lret
push
pop
mov
add
xor
jb
and
pusha
jo
mov
cmp
add
fsubp
sub
xchg
test
cmp
andl
mov
push
ret
dec
lods
jae
divb
xcrypt-ecb
cmpsl
or
rorl
sbb
mov
shlb
cmpsl
ja
int3
das
inc
dec
popf
loopne
rcrb
mov
mov
jg
repz
in
mov
mov
mov
fisubs
hlt
sub
inc
inc
pusha
or
or
mov
mov
add
mov
stos
sub
in
shll
stos
pop
loope
fwait
divl
ss
fs
xchg
stc
enter
xor
out
lea
or
jp
mov
cs
subb
sbb
rcrb
scas
out
ficoml
add
pop
outsb
jno
pop
inc
xor
mov
mov
jmp
xor
test
shlb
inc
sub
mov
xchg
and
les
icebp
fldt
push
mov
stos
push
adc
imul
jns
xor
fidivrs
iret
jmp
cli
jle
rorb
cli
cltd
ror
fldenv
movsl
repz
sub
stc
test
xchg
aaa
inc
add
scas
je
mov
xchg
out
std
scas
lods
cmpsb
and
scas
mov
dec
adc
xor
add
mov
sbb
dec
pop
popf
fldcw
xor
jmp
fistl
pop
sbb
mov
and
inc
sbb
mov
das
inc
jl
inc
mov
cmp
lods
pop
mov
adc
out
je
hlt
cmpsl
push
push
cs
pop
cmp
jae
add
shrl
popf
into
hlt
mov
mov
jle
roll
or
cmc
jmp
imul
add
push
push
pop
dec
iret
dec
or
aam
fcomip
dec
iret
je
mov
sbb
in
arpl
adc
push
loopne
and
cld
or
push
sbb
std
testb
sbb
and
mov
in
mov
pop
lods
mov
es
xchg
mov
pop
sbb
pop
subb
mov
loope
sbb
inc
jnp
jp
testb
addr16
mov
jp
lahf
adc
fistl
jecxz
int
adc
ret
xchg
or
push
push
mov
imulb
mov
cmpsb
cwtl
notb
jnp
xor
nop
mov
mov
mov
jns
mulb
inc
imul
into
mov
mov
test
arpl
mov
inc
cli
mov
push
icebp
xlat
xor
repnz
in
mov
jne
sbb
test
sarl
inc
mov
add
addr16
pop
pop
mov
cmp
int
popa
orb
push
loop
arpl
mov
adc
sbb
jecxz
into
lret
xor
add
fimuls
xchg
dec
push
mov
mov
xor
sbb
punpckhbw
xchg
negl
xchg
outsl
cltd
mov
xlat
inc
xlat
mov
outsl
jo
mov
js
push
sbb
sbb
jl
test
int3
clc
repnz
jmp
filds
lret
divb
loopne
push
fadd
clc
lock
cmpsb
push
jp
and
sub
sbbl
and
mov
pop
mov
repz
fnstcw
jl
push
push
dec
dec
xlat
push
jmp
lea
or
cmp
out
imul
xlat
mov
sti
mov
scas
push
inc
stos
dec
aas
xchg
stos
cltd
mov
xchg
pop
mov
es
push
imul
jle
mov
pop
repnz
cltd
sbb
lock
lock
mov
pusha
mov
xlat
xor
pop
cmpsl
jge
je
and
inc
inc
dec
sbb
adc
inc
sub
test
insl
mov
sub
xchg
arpl
cs
lret
cmpsl
or
lret
je
fcoml
into
clc
fidivrs
out
add
fstps
adc
add
loope
pop
pop
outsl
xlat
aas
jbe
cmp
xchg
stc
dec
shr
mov
add
pop
jns
cmp
and
je
icebp
jl
pop
bound
jae
mov
fldt
fistps
loop
int
mov
sub
arpl
popf
push
push
xor
pop
adc
into
sbb
and
add
fisttps
inc
das
out
inc
lcall
sbb
mov
add
pusha
sub
lods
mov
daa
movsl
test
sbb
pop
aaa
fadds
mov
out
pop
xor
fldenv
adc
in
cmp
mov
scas
clc
and
sbb
or
ret
loope
mov
jns
fsubs
dec
jl
ret
sbb
mov
lods
divb
movsb
mov
adc
popa
cmp
mov
sub
push
pop
push
adc
lcall
push
jae
fwait
data16
icebp
das
push
andl
std
sahf
inc
ja
insl
pop
lcall
iret
xlat
out
rcrl
or
pushl
inc
cmp
stos
sbb
out
scas
addr16
call
sub
rorb
pusha
mov
fmuls
dec
pop
test
push
je
xchg
cwtl
mov
adc
adc
xchg
js
xor
je
les
jp
push
add
jp
rcr
movsl
hlt
rorl
iret
adc
add
ljmp
cltd
mov
xchg
fcmovnbe
js
int3
xor
pop
sub
pop
lcall
and
pushf
sbb
pop
pop
aam
in
es
push
sahf
pop
ja
fs
inc
lods
lock
mov
movsb
lock
fldcw
aad
push
pop
push
sub
and
daa
or
push
pop
xor
rcrl
or
adc
cmp
xor
lods
push
les
int3
leave
stc
ffreep
jns
mov
inc
notb
add
push
xor
dec
mov
ja
daa
pop
or
out
andb
xor
sub
fistpll
jmp
adc
push
int
jo
sbb
mov
dec
sahf
in
inc
outsb
dec
rcrb
lret
push
fnstenv
hlt
push
adc
adc
sbb
inc
cwtl
sub
aaa
pop
lods
add
or
leave
adc
xor
in
xor
xor
jno
mov
jmp
lea
ret
or
arpl
mov
ja
aas
call
pop
mov
andl
inc
sub
outsl
mov
mov
xchg
daa
xor
pop
jbe
shrl
xlat
or
ret
popa
ljmp
popf
popa
sbb
adc
dec
addr16
aas
jno
sbb
push
inc
adc
js
pusha
fs
dec
xor
push
lea
mov
sub
fsubrp
repz
subl
in
xor
xor
jmp
add
push
xchg
push
xchg
xchg
in
push
sbb
pop
mov
ljmp
xorl
dec
push
shl
cmpsb
jnp
adc
push
sbb
add
adc
lods
xor
inc
into
mov
adc
cmp
jmp
xlat
repz
js
lea
push
ja
add
mov
cmp
add
cmp
daa
push
adc
jae
out
push
pop
xor
push
fbstp
rcrb
mov
sti
push
xchg
out
jmp
insb
cmpsl
pop
xor
push
pop
xor
fldt
or
adc
daa
mov
nop
lahf
in
cltd
fcmove
cmpsl
xor
repz
xor
mov
push
test
bound
fcoml
popa
fsubs
out
push
mov
sbb
adc
and
daa
aam
pop
call
push
cltd
pop
cmp
mov
mov
sbb
lods
dec
jmp
std
frstor
jmp
lret
xor
jmp
stc
dec
clc
rcrb
mov
ljmp
enter
mov
lods
adc
adc
aad
and
imul
sbb
push
fldenv
lods
hlt
dec
push
stc
test
pop
stos
das
cmc
jae
xor
enter
add
jb
sbb
jo
popa
sbbl
arpl
into
sarb
ret
fwait
mov
dec
shrl
ss
js
add
cmc
add
sbb
subb
add
je
xor
jl
icebp
xor
sahf
ja
sti
fwait
aad
mov
mov
ss
dec
outsl
in
push
mov
push
outsl
inc
outsb
aad
mov
push
fstpt
jecxz
sbb
shll
dec
popf
out
add
pop
xor
pop
aaa
mov
lea
xor
mov
mov
in
shrd
into
mov
sub
xchg
adc
cli
jbe
in
jecxz
lea
shr
jg
mov
sub
dec
sub
out
mov
adc
mov
mov
jp
pop
in
pop
mov
mov
inc
push
add
add
mov
mov
or
mov
mov
shll
fldcw
ss
cmp
sbb
dec
cltd
xchg
lahf
cmp
pop
mov
pop
xor
lret
xchg
xor
repz
mov
jge
sbb
arpl
mov
orb
insl
movsb
mov
stc
les
or
dec
loope
lock
test
in
xchg
popl
cmovno
xchg
lret
sbb
push
inc
xchg
lcall
movsl
xchg
cltd
sbb
out
arpl
cmc
mov
sub
push
xchg
imul
inc
sub
cmp
into
push
cmpsl
xor
mov
mov
movsl
lods
lods
xchg
jmp
lea
pop
add
jo
push
ljmp
xchg
add
and
xchg
jecxz
dec
cmpsl
hlt
sub
add
ss
cs
or
lret
add
shlb
pusha
cmpsb
call
mov
es
mov
cld
cltd
shlb
aad
test
xchg
dec
pop
sub
cmp
cwtl
sbb
inc
push
push
ds
popf
pushf
mov
mov
mov
popa
fsts
loope
mov
adc
adc
mov
xchg
test
mov
pop
pop
int3
pop
pop
inc
loopne
stos
mov
arpl
and
shlb
rcr
dec
push
xor
bnd
lds
sarl
and
pop
imul
sub
aad
inc
addl
enter
xchg
mov
subl
cmc
icebp
mov
ficoml
arpl
mov
adc
and
ljmp
sbb
dec
jle
subl
sub
cs
pop
sbb
stos
fld1
push
pop
pop
in
jle
fcmove
or
lahf
xor
xor
lds
push
sbb
jg
push
pushf
jp
imul
scas
das
push
sbb
filds
lret
rol
pop
daa
sbb
dec
sbb
xor
rolb
mov
lahf
xchg
and
mov
push
dec
je
sbb
inc
in
mov
fsubrl
jp
pop
push
push
dec
and
lds
hlt
push
add
inc
loopne
nop
mov
inc
and
pop
out
mov
in
mov
cs
popa
dec
and
insl
push
push
push
test
pop
mov
das
xlat
jle
mov
lahf
mov
push
or
das
fwait
out
das
clc
mov
sbb
adc
enter
gs
bound
cmp
push
xor
add
ds
testl
push
daa
mov
sbb
jl
sbb
inc
stos
fs
ficoml
jle
xchg
lods
jno
jg
outsl
or
fs
xor
ljmp
shrl
add
aaa
ficomps
lock
outsb
or
push
cmp
sub
in
cmpsb
mov
adc
and
and
sub
out
cmp
mov
fisubrl
mov
mov
in
fistpl
fidivs
and
xor
dec
lds
stos
clc
dec
popa
stc
mov
cmpsb
lret
in
mov
cld
mov
or
jp
jbe
enter
xchg
mov
in
dec
dec
jp
cmp
outsl
inc
cmp
sti
pop
mov
add
xchg
aas
out
xor
sub
loop
pop
inc
cmp
xor
pop
or
and
push
mov
and
out
nop
push
int
popa
shrb
sti
imul
cwtl
sbb
sahf
sub
call
ficoml
dec
sub
adc
insl
adc
in
test
mov
cmp
out
dec
xchg
sbb
stos
test
sbb
pushf
int3
inc
ret
mov
xor
xor
incb
fldenv
in
inc
rcll
mov
adc
js
jp
data16
mov
mov
cmp
mov
xchg
inc
clc
sub
popa
jle
es
xor
xor
dec
rorb
pop
lods
sbb
stos
std
adc
pop
adc
ss
mov
popa
pop
popf
idivl
mov
shrb
repz
push
cmp
lock
sub
or
sub
push
dec
js
xchg
add
mov
rep
mov
sbb
inc
sbb
xchg
cs
shr
jnp
sahf
add
mov
ja
adc
cmpsb
stos
sarb
add
movsl
lods
stos
daa
xchg
daa
lods
jle
pop
xor
fstl
pop
cmpsl
mov
jae
f2xm1
sbb
push
pop
adc
pop
out
mov
out
jp
mov
icebp
pop
clc
mov
add
cmp
jae
aad
sub
push
mov
cmpsl
out
stos
mov
test
ljmp
int
outsb
xlat
in
mov
int3
mov
repz
es
popa
shrb
aaa
dec
jno
insb
sbb
jae
inc
sbbb
push
gs
jge
xchg
or
or
mov
aam
jae
adc
das
es
shlb
add
aas
pop
enter
inc
in
pop
scas
scas
xlat
dec
lods
sbb
mov
inc
int
xor
dec
fcmovu
mull
loopne
leave
xchg
sub
stc
popf
xchg
cmp
cltd
ret
or
adc
fnstenv
imul
das
jp
cs
ds
inc
sbb
ret
mov
pop
adcl
mov
add
push
in
push
mov
xchg
movsb
pop
pop
xchg
sub
jg
repnz
mov
mov
jg
loope
negb
mov
out
pop
cli
and
jbe
clc
inc
sbbb
push
sbb
int3
test
sub
aaa
mov
jmp
or
clc
adc
test
lods
add
addb
sub
cmp
push
arpl
out
mov
xor
add
mov
pop
std
sbb
leave
pop
xchg
push
stos
mov
inc
mov
addr16
adc
cli
ss
fwait
leave
repnz
pop
or
xor
mov
xor
or
rcll
stc
bound
jp
or
sbb
ret
faddp
insb
loopne,pn
push
sti
cmp
cmpsl
push
add
addr16
push
push
incl
xchg
daa
add
loope
ret
fbstp
movsb
scas
cwtl
addr16
mov
ljmp
adc
adc
fnstsw
jp
inc
lds
pusha
sbb
mov
or
inc
outsl
hlt
inc
in
icebp
es
imul
fimull
mov
mov
sub
ljmp
stos
shll
cmp
fnstsw
mov
dec
or
mov
cmp
in
dec
mov
arpl
ss
jbe
lds
push
jne
fidivrs
sbb
dec
lret
fwait
addr16
ret
add
pop
jb
jmp
rcrb
or
in
cmpb
pop
shr
fwait
les
test
repz
cmp
test
nop
sub
popw
xchg
adc
pop
test
mov
fldenv
aas
mov
mov
imul
and
popa
push
mov
std
pop
int
sub
sbb
sbb
xor
xchg
in
ret
sbb
in
in
cmovnp
jmp
mov
pop
jbe
in
test
xchg
addr16
sbb
in
shrb
xor
push
push
fisubs
xchg
and
rcll
cmp
push
and
mov
pushf
sahf
cmp
ret
inc
dec
fwait
lds
test
push
sbb
jge
arpl
and
mov
sbb
repnz
push
aam
jb
dec
lods
cmp
pop
mov
sbb
push
dec
stos
out
xchg
and
or
stos
hlt
nop
or
ss
movl
jae
clc
in
pop
cwtl
pop
and
decb
mov
sub
mov
pushf
mov
dec
out
lds
cmc
mov
mov
nop
cmpsb
add
lods
sub
dec
inc
cmp
jno
add
xchg
pusha
cmpb
sbb
ljmp
rclb
in
aas
sbb
fisttpll
shl
sub
orb
clc
mov
dec
pop
and
test
or
dec
insb
fidivl
add
arpl
mov
xor
xchg
imul
push
test
aad
repz
mov
pop
in
je
xor
loopne
movsb
mov
into
sbb
addr16
ficompl
aam
xor
jp
jb
in
ret
and
lret
or
sbb
jp
pop
sub
and
sbb
jns
scas
jg
push
leave
cmp
lods
out
outsl
ret
ds
rorl
cs
mov
push
sbb
cltd
and
inc
or
stos
insl
subl
mov
outsb
iret
fwait
xor
adcl
sub
dec
incb
inc
stos
sub
fwait
xchg
push
jbe
push
roll
jle
mov
shrb
test
lea
pop
xchg
sbb
fsub
hlt
stos
and
adc
jae
test
repnz
cmp
iret
and
ja
sub
repnz
pushf
pop
mov
ficoms
and
std
into
xor
aad
or
jecxz
add
cmp
subl
daa
cmp
or
push
and
mov
jge
pop
inc
add
lds
adc
sar
je
mov
mov
cmp
cmc
adc
fucomi
lds
jns
insl
fisubl
add
xchg
xlat
clc
jecxz
vcvtss2si
hlt
es
adc
sub
jb
add
pinsrw
mov
movsb
mov
mov
and
cmpsb
mov
test
rclb
shlb
fmul
push
imul
sbb
mov
cld
push
or
mov
pop
testb
jns
mov
test
insb
xlat
rorb
jecxz
ljmp
inc
xor
fisttpl
xchg
inc
daa
jge
fcomps
fisubrs
andb
negb
mov
and
push
neg
es
out
sti
jge
push
cwtl
fidivs
adc
add
fnstenv
ss
mov
push
sub
add
cmpb
test
in
repnz
and
test
pop
jmp
inc
lcall
ja
enter
push
in
inc
mov
push
mov
and
and
stos
mov
xchg
inc
dec
inc
pop
pop
int3
cmp
or
shll
ret
fldt
sbb
es
shrl
cmp
push
dec
xor
stos
cmp
sbb
cmp
push
dec
dec
mov
inc
sbb
cli
gs
xchg
mov
inc
into
cmp
xchg
daa
cmp
ret
sahf
push
ret
jbe
and
loopne
out
fldcw
data16
xlat
mov
push
or
push
and
push
ficomps
insb
bound
push
lods
ret
in
mov
test
pop
ret
inc
dec
inc
out
cmc
iret
inc
pop
lret
sbb
shll
js
and
and
aaa
jge
pop
lods
je
loopne
mov
mov
dec
outsb
jb
xor
iret
and
sub
fwait
jb
xchg
lea
mov
sti
outsl
adc
rol
cltd
mov
jo
jb
test
and
sub
popl
lcall
add
sub
inc
mov
vmread
imulb
lret
push
xor
fwait
loopne
incb
mov
stc
test
push
xor
fld
test
insl
movsl
jbe
ficomps
jge
int3
insl
sarl
sarl
in
sub
pop
or
ret
jmp
andb
loop
roll
xchg
mov
adc
gs
and
xor
push
and
mov
xchg
cmp
mov
pop
lock
or
dec
movsl
pop
addr16
fwait
mov
clc
dec
cmp
xor
mov
std
lods
dec
mov
enter
push
scas
adc
enter
addr16
jl
and
rcrl
xchg
leave
fcoms
popf
movsl
xchg
push
loopne
aad
mov
les
jmp
sub
fisttps
mov
mov
pop
mov
ret
add
je
mov
adc
or
mov
movl
jne
mov
cmpsl
sub
mov
shrl
cmpb
ret
cmc
jne
mov
arpl
sbb
fdivl
xchg
sbb
xor
mov
xor
imul
dec
bound
mov
rolb
adc
dec
adc
ljmp
rcrb
fwait
sbb
hlt
je
or
roll
adc
pushf
jnp
flds
cld
sti
jno
dec
jb
cmpsb
mov
sub
push
rclb
aaa
rorb
test
or
cmpsb
int
adc
lock
lods
pushf
sub
gs
cwtl
imull
dec
int3
test
mov
sbb
sub
data16
into
sub
aaa
aam
ret
lea
loope
dec
pop
out
mov
popa
push
lret
stos
mov
dec
hlt
ss
xlat
add
xor
cmp
or
inc
pop
pop
lea
movsb
repz
test
test
dec
cmp
push
pop
push
cli
xchg
push
sub
add
push
mov
add
dec
addr16
mov
and
filds
sahf
mov
insl
aas
push
xor
test
mov
ret
test
addr16
scas
in
scas
xchg
sub
sar
pop
aad
pop
push
lret
dec
rorl
xchg
mov
cmp
scas
aad
movsl
push
bound
sbb
pop
insb
jnp
sbb
aad
or
xchg
insb
pop
jle
cmpsb
inc
lret
pop
dec
outsb
sub
out
xor
mov
xor
in
mov
mov
pop
sbb
jl
sahf
sub
inc
dec
cli
jle
rol
or
js
repz
fstpt
adc
jbe
pusha
stos
pusha
inc
cmp
pop
das
jl
sbb
mov
push
iret
push
inc
scas
sub
rcrb
mov
imul
rcll
pushf
xor
std
mov
arpl
xchg
out
adc
repnz
jae
lret
inc
pop
imul
jg
sub
or
xorl
test
scas
jo
jne
frstor
mov
pop
or
insb
sbb
lock
push
lds
sbb
push
imul
jmp
adc
js
mov
into
jge
in
pop
cld
repnz
push
js
sbb
testl
mov
int3
daa
push
pop
fcoml
lea
mov
adc
jno
nop
lcall
notb
xchg
shlb
and
xlat
imul
nop
pop
or
stos
pop
and
xor
push
adc
scas
enter
lds
jb
movsl
adc
movb
popf
fwait
cli
fnstenv
xor
and
mov
jg
adc
ss
adc
pop
popa
rorb
and
pop
or
sub
pop
andl
xor
das
mov
arpl
roll
test
adc
lds
push
sub
push
sub
test
sub
inc
mov
movsb
mov
test
pop
cmc
xchg
cltd
adc
gs
inc
mov
lret
lahf
insb
sub
adc
or
cmpsb
add
in
cmp
adcl
push
sub
sub
and
and
cli
jmp
test
jge
loopne
ret
and
lret
mov
sar
lcall
out
repz
into
sub
jp
push
pop
add
pop
xchg
inc
dec
inc
and
sbb
xchg
shrb
fisubrl
or
out
jae
pop
dec
iret
xor
icebp
ja
push
andl
out
sbb
rol
test
mov
pop
cltd
adc
push
push
lods
into
cmpb
nop
enter
jno
popa
and
shl
cmp
ds
mov
push
roll
fs
out
or
mov
sub
jae
jae
xor
cld
dec
fmulp
mov
jge
sub
nop
cmp
sti
push
jg
int3
cmp
cmpsl
pop
xlat
repz
xchg
mov
dec
jge
sbb
cmp
pop
in
inc
movb
insl
cmpl
jp
mov
inc
jl
push
jo
inc
lret
ljmp
mov
mov
xchg
mulb
inc
roll
lods
push
rorb
loope
js
pop
out
in
in
fcomps
jne
add
dec
inc
push
and
mov
movl
sarl
pop
mov
or
enter
lods
mov
pop
mov
mov
imul
pop
mulb
lds
dec
inc
xchg
and
fistl
ja
ljmp
xor
pop
lods
pop
stos
sbb
sub
mov
negl
and
push
cli
mov
jbe
lods
jb
lcall
push
shl
iret
lcall
dec
pushf
ljmp
sbb
jge
pop
mov
or
fisubl
sub
cltd
iret
jb
sub
jo
sub
mov
cmpsb
sti
pusha
sbb
or
int3
mov
push
adc
adc
adc
add
xor
dec
rolb
test
dec
insl
aad
popf
leave
inc
mov
fidivs
inc
movsb
and
or
xchg
test
js
adc
mov
fsubl
mov
je
insb
and
ret
inc
sub
in
inc
cmp
jecxz
dec
jg
pop
leave
adc
test
add
sub
out
sbb
add
add
jle
xchg
ja
scas
inc
push
repz
daa
clc
inc
jo
lret
xchg
add
ss
and
cmp
and
fistl
out
sbb
insb
mov
movl
push
push
cmp
xchg
rcrl
gs
add
pop
xlat
mov
ret
rorb
movsb
or
fwait
jge
mov
jle
cmp
sbb
lods
xchg
mov
mov
pop
cld
lock
outsb
push
mov
xor
fs
mov
pop
testl
imul
or
push
incl
fdivs
adc
and
inc
inc
arpl
mov
cmp
scas
sub
xchg
xor
stc
repz
arpl
mov
sbb
xor
jl
sub
push
scas
dec
loope
rolb
inc
ss
and
out
push
xchg
pop
push
iret
and
nop
or
rorl
push
jne
imul
imul
xlat
adc
xchg
sub
insb
xor
mov
or
jle
inc
mov
xchg
sub
jecxz
fstps
inc
dec
cwtl
aam
sub
mov
pop
add
ds
inc
push
mov
push
test
orb
inc
mov
or
sub
inc
clc
mov
xchg
out
or
xor
dec
or
sub
sarb
dec
push
adc
shlb
mov
jno
xor
mov
xchg
mov
ret
je
rol
and
cmp
xchg
les
cltd
push
xchg
inc
stos
mov
call
mov
xorb
mov
lods
enter
into
adc
dec
dec
call
addr16
xor
dec
test
push
jno
pop
icebp
fnsave
add
inc
gs
outsl
and
cmp
pop
ss
pop
fwait
aas
fildll
sub
js
cwtl
mov
lahf
dec
sub
or
call
pop
sub
push
insl
out
outsb
jbe
pop
push
daa
arpl
mov
in
jns
sbb
jne
push
jecxz,pn
dec
inc
imul
mov
cmpsl
pop
int3
add
arpl
or
jge
mov
retw
sbb
adc
jne
xchg
aas
movsb
pop
cmc
nop
jmp
daa
mov
shrb
mov
jp
xor
jge
sarl
mov
or
mov
mov
sbb
adc
inc
cmp
or
ljmp
mov
pusha
ja
mov
or
jl
fimuls
leave
and
mov
test
mov
jp,pn
pop
xor
inc
lea
movsb
mov
mov
div
cmp
push
pop
clc
je
imul
loope
xchg
or
addr16
outsl
and
fdivrs
xchg
pop
cmp
imul
cld
std
into
xchg
sbb
push
mov
xchg
or
push
add
jbe
in
ret
iret
dec
xchg
insl
mov
mov
scas
leave
xor
clc
or
outsl
stc
adc
loopne
imul
sbb
repnz
sub
add
inc
mov
imul
or
pop
cmp
mov
lret
dec
mov
inc
das
and
outsl
shlb
das
jo
leave
pop
jne
push
ret
sbb
adc
out
xchg
jecxz
stos
inc
fmulp
mov
mull
ljmp
mov
ret
sbb
push
adc
daa
ss
ret
xchg
mov
test
test
xor
popf
mov
sub
push
xor
fimuls
add
ljmp
mov
xchg
mov
pushf
sub
push
mov
es
scas
mov
mov
nop
xor
pop
jo
jp
mov
lds
mov
cltd
stc
aas
xor
cmp
bnd
adc
clc
nop
div
leave
fisttpll
and
clc
fs
push
pop
and
or
inc
jle
inc
inc
jl
pop
hlt
pop
subl
test
pop
add
dec
xor
xor
add
icebp
jmp
mov
or
test
cltd
in
lret
sbb
dec
dec
xchg
inc
aaa
movb
pop
inc
out
xor
inc
dec
mov
mov
dec
adc
jg
jno
mov
jne
xor
les
cmp
mov
mov
pop
push
je
pop
xchg
nopl
pop
movsb
xor
mov
jnp
out
pop
xchg
aam
inc
or
testb
push
mov
mov
pop
dec
dec
fnstenv
sbb
jge
pushf
mov
lods
dec
sub
jb
adc
push
or
out
adc
loopne
adc
mov
push
mov
ljmp
cmp
mov
into
test
popa
cmp
sub
push
mov
movsb
push
sbb
xor
mov
jecxz
aam
fdivrl
push
je
cmp
sbb
in
arpl
out
or
inc
sub
sbb
push
je
imul
mov
sbb
mov
stos
sub
push
out
xchg
out
sub
or
cmc
cwtl
bound
cmp
mov
out
out
mov
cmp
push
adc
sbb
cmp
xor
cwtl
mov
mov
sbb
scas
inc
and
sbb
or
in
mov
sbb
test
jb
adc
sbb
mov
mov
push
loop
int
mov
or
hlt
fs
xor
loopne
clc
in
or
into
push
inc
jno
lds
ss
dec
divl
outsl
adc
add
movsb
xchg
out
std
shrl
lcall
sar
jecxz
adc
jns
xorb
hlt
std
jno
mov
push
or
add
cmpsl
cwtl
shl
jbe
xor
shr
pop
jno
cli
stc
dec
inc
pop
int3
pop
add
mov
in
fisubrl
into
cmc
imull
js
xchg
dec
and
sbb
shll
cld
lock
xlat
and
sbb
fbld
and
daa
inc
jbe
data16
push
mov
pop
iret
mov
push
mov
or
sub
mov
sarl
add
stos
mov
push
sub
add
shl
loop
ret
mov
out
divb
shl
mov
mov
pcmpgtb
xor
fsincos
in
popa
bnd
dec
fcoms
iret
jno
mov
jb
ror
loopne
mov
das
inc
ljmp
sbb
mov
cmc
ds
mov
or
scas
jae
filds
addr16
mov
les
mov
cmp
pop
sar
nop
clc
jle
stc
cs
pop
ret
in
pop
scas
iret
ret
mulb
push
xchg
cmp
push
mov
xor
jb
shrb
jo
xchg
add
inc
mov
test
out
std
mov
addr16
dec
hlt
and
push
or
insb
add
xchg
cmpsb
pop
sbb
push
pop
inc
mov
dec
cwtl
pop
adc
movsb
insb
mov
in
push
test
xchg
adc
movsl
je
js
push
mov
pusha
lods
jp
jne
add
dec
lods
xchg
inc
inc
iret
add
testb
inc
sbb
push
sub
test
push
dec
cmc
mov
sbb
test
push
leave
fs
sbb
mov
push
mov
xor
stos
jmp
out
out
and
jo
ret
xchg
out
lock
in
rcrb
or
aaa
mov
lahf
xchg
fwait
sbb
xchg
movsb
mov
cmp
mov
repnz
mov
ret
lret
aam
inc
test
and
pop
sub
pop
adc
inc
mov
pop
jmp
cmc
mov
popf
push
mov
popa
pop
xchg
sti
insb
jmp
xchg
jo
and
xchg
mov
pushf
pop
pop
fistl
xor
stc
lods
jg
sub
pop
insl
dec
inc
cmc
lea
sbb
mov
test
out
mov
sbb
call
xlat
xchg
decl
adc
insb
and
xor
sarb
mov
out
mov
add
add
xlat
jbe
or
roll
xchg
lods
cmpl
mov
sbbl
std
inc
adc
xchg
adc
and
cmp
ret
sbb
add
std
mov
nop
jp
and
jns
rcrb
add
ret
inc
test
test
push
xor
idivl
or
sub
out
mov
jg
sbb
jbe
scas
pop
cmp
test
movsb
cli
adc
jne
pop
mov
mov
xor
bound
jns
xor
xchg
add
add
cmpl
sbb
dec
sub
int
jae
gs
ljmp
pop
jmp
sbb
push
popa
imul
sarb
jle
ja
jg
pop
dec
and
mov
je
adc
xchg
gs
shlb
icebp
xchg
inc
and
dec
std
mov
out
xchg
shrb
test
push
dec
and
cmc
mov
lds
lahf
xor
push
je
sbb
mov
popa
enter
push
sub
jg
jecxz
sbb
inc
and
push
push
jp
xchg
mov
cwtl
pop
mov
sub
ud0
add
fisubrs
cmpsl
sub
dec
frstor
loope
movsb
decb
jne
mov
xchg
in
je
loope
jg
test
and
test
je
dec
leave
fwait
sub
jo
inc
notb
mov
repnz
das
mov
pop
xor
mov
xor
outsb
sub
shl
test
inc
rclb
push
push
lahf
mov
sbb
mov
add
mov
ja
ret
inc
sbb
add
mov
cmp
pushf
aas
push
xlat
mov
add
or
subb
lods
cmp
pop
mov
or
lret
pusha
push
push
scas
or
push
mov
mov
inc
movsb
pop
xchg
sub
fucom
xor
inc
enter
or
or
test
addr16
push
jl
cwtl
ja
and
mov
mov
outsb
rol
test
mov
mov
push
and
test
call
loopne
push
icebp
xchg
sbb
mov
xor
cmpl
cmpsb
lock
xlat
in
rorb
cmp
adc
adc
sbb
inc
arpl
sbb
xlat
adc
adc
xlat
inc
mov
dec
cmp
lret
pop
sbb
addl
mull
loopne
push
stos
push
add
cmp
or
inc
pop
xchg
adc
xchg
leave
fwait
stc
mov
aad
fstpl
pop
jg
or
loop
xchg
icebp
and
ja
xchg
sbb
dec
aam
stos
pop
inc
pop
cmp
stos
jb
fs
mov
clc
js
xchg
call
cs
lea
dec
cmpsl
fwait
js
or
pop
xor
ficomps
fwait
testl
push
pushf
push
xlat
pop
xchg
dec
cli
mov
push
into
pop
das
inc
mov
add
aad
sub
sub
lahf
sub
sbb
rcr
popa
aad
lods
push
aas
popfw
in
mov
cltd
imul
or
aas
inc
dec
in
out
mov
xchg
pop
subl
test
xor
repnz
sbb
sub
inc
les
outsb
jl
lret
xor
xor
mov
sbb
adc
push
lret
addb
pop
test
stos
vminps
sub
pop
cltd
lret
mov
mov
mov
and
push
out
cltd
sbb
jg
hlt
pop
mul
jne
and
cld
mov
aam
cld
cltd
add
outsb
mov
das
sti
fildl
in
orb
dec
jb
xor
outsb
pop
xchg
inc
sub
mov
pop
and
xchg
sub
push
pop
mov
ja
xchg
or
pop
lcall
cli
fwait
rcr
xchg
mov
arpl
test
cwtl
mov
test
adc
test
pop
and
mov
sub
sti
jb
cmc
dec
mov
leave
pop
mov
jge
adc
xchg
rcll
in
xor
cld
shlb
mov
inc
sbb
xor
xor
sub
mov
dec
daa
ljmp
sbb
pusha
cld
xor
shlb
addr16
xor
mov
fdivl
fdivl
setbe
pop
cmp
lcall
push
repnz
fnstcw
cmp
out
adc
fldcw
loopne
xor
jge
imul
push
jb
sbb
out
xchg
push
mov
lea
into
mov
jnp
repnz
mov
loop
push
fwait
sbb
cld
loop
sti
cld
mov
and
iret
in
jo
pop
out
shlb
push
mov
push
test
shl
jno
pop
test
sti
push
fbstp
push
call
pushf
pop
stos
adc
mov
ljmp
jae
loopne
push
xor
dec
add
out
scas
scas
insb
roll
xchg
les
sub
mov
lods
fisubs
insb
mov
jge
xor
nop
out
sbb
jecxz
mov
xor
cmpsb
mov
cmpb
and
loopne
xor
jae
lods
adc
sub
dec
cwtl
xchg
enter
out
bound
pop
push
and
push
add
rcrl
stos
xchg
in
mov
stos
sub
dec
add
adc
mov
subb
addb
fmull
pushf
dec
xor
push
out
out
cmp
mov
xchg
push
cltd
std
gs
insl
mov
mov
sahf
popf
pop
loopne
jecxz
push
cmpsb
aaa
mov
xor
mov
dec
out
adc
xlat
lea
mov
sub
ljmp
test
ja
cwtl
jno
inc
jno
mov
icebp
scas
std
loopne
pusha
xchg
lret
sub
incl
outsl
push
inc
pop
movsb
jno
daa
lods
mov
lcall
mov
fisttpl
mov
lret
ret
scas
mov
mov
dec
or
fwait
sbb
andl
shlb
lods
xlat
lods
rorb
add
adc
and
aad
lods
int3
jp
lcall
mov
sub
iret
pop
jae
aaa
adc
movsl
gs
leave
fdivrs
cwtl
push
mov
cs
push
push
sub
scas
and
add
adc
xlat
imul
sti
sub
insb
arpl
outsl
jno
mov
clc
cltd
call
imul
lea
std
sub
xlat
xor
jb
in
mov
mov
pop
das
add
decb
out
push
mov
mov
mov
and
inc
in
cmc
push
xor
ljmp
or
xchg
and
sbb
in
xchg
es
mov
push
xor
or
or
jns
lds
mov
mov
ret
push
hlt
dec
nop
movsb
adc
fwait
mov
fldt
xor
andl
pop
xchg
adcb
push
sbb
sbb
sahf
jnp
testl
clc
pop
ficompl
xor
inc
xor
cli
lahf
push
int3
pop
test
adc
aas
inc
cmp
sub
push
fistl
cmp
mov
cld
dec
mov
lds
mov
repnz
test
mov
stos
jp
leave
pop
inc
xchg
mov
pushf
inc
imulb
pop
mov
xchg
jne
popf
int3
sub
stc
hlt
aas
xchg
inc
outsb
jne
in
or
es
mov
and
xchg
sub
or
dec
jnp
int3
movsb
repz
stos
xchg
out
es
out
xchg
out
gs
jmp
stos
fstpt
push
sub
ss
pop
dec
ret
inc
inc
movmskps
jae
adc
jmp
pop
mov
ret
push
outsl
mov
inc
and
in
jbe
cmpsb
sub
int3
mov
pop
out
mov
ja
pop
dec
cwtl
lods
pop
ret
xchg
daa
xor
sub
sub
dec
push
mov
mov
jno
jle
rorb
cmp
mov
repz
shll
jmp
aam
xchg
add
mov
cld
push
insb
mov
lods
jp
shrb
popa
dec
inc
or
outsb
or
inc
dec
imul
aas
and
je
in
push
mov
jmp
fldcw
cmp
jl
or
ficompl
pop
cmp
loopne
orl
aas
mov
or
mov
or
mov
stos
test
in
pop
outsl
in
sub
sub
dec
inc
xchg
or
sub
insl
leave
sbb
cwtl
fisttps
bound
push
sub
lret
enter
das
inc
mov
cmp
loop
daa
mov
ss
subb
push
jns
fwait
jo
inc
ficompl
add
vpmaddwd
push
pop
iret
inc
xchg
and
cmpsl
rorl
xchg
push
push
push
loopne
jg
mov
hlt
adcb
add
push
sbb
inc
ljmp
orl
push
xor
stc
sbb
hlt
cmc
imul
iret
jne
or
test
add
sub
leave
les
insl
arpl
iret
cltd
lock
pusha
sbb
popf
add
test
inc
stos
bound
rclb
adc
xchg
ret
push
das
rcll
or
fs
sub
cltd
in
rolb
dec
xor
pop
in
xor
or
pusha
jmp
loopne
pop
aas
add
lret
mov
inc
lods
inc
dec
add
xchg
lea
pop
pop
out
pop
cltd
or
scas
sub
pop
mov
mov
add
dec
int3
adc
insb
adc
arpl
mov
xchg
aam
jmp
adc
imul
leave
icebp
stos
add
inc
adc
push
inc
xor
xor
shrb
ret
mov
mov
add
jmp
shlb
data16
cltd
call
int
pop
xchg
add
mov
jle
or
jnp
sub
xor
jnp
movsb
das
loopne
pop
and
sbb
and
and
xchg
mov
test
sbb
leave
adc
add
in
iret
xor
lods
es
inc
hlt
sub
ljmp
pop
cmp
iret
xor
push
inc
pop
imul
movsb
pop
je
outsl
in
cmovno
push
pop
daa
or
pop
dec
ret
dec
idivb
jle
jo
mov
scas
mov
mov
mov
mov
mov
cwtl
push
and
insl
or
aam
pop
jns
xchg
push
pop
hlt
mov
push
add
test
shl
sub
inc
push
fmuls
and
mov
cmp
movl
jbe
cmp
jl
fwait
xor
and
jecxz
mov
sbb
aam
jns
dec
shlb
in
aad
cmp
mov
flds
xor
or
adc
inc
in
clc
int3
in
hlt
ret
incb
sbb
fldl
movsb
loopne
bnd
pop
daa
jo
dec
jp
dec
mov
pop
aam
mov
xchg
test
cmpsl
inc
mov
lret
adcb
push
mov
xchg
dec
add
in
pop
sub
pop
push
xor
push
loopne
pop
lret
movsb
add
or
cmp
dec
neg
push
jne
es
jo
paddusb
mov
pop
fldl
mov
dec
xchg
enter
in
mov
mov
mov
and
dec
sbb
mov
into
mov
in
push
cmpl
xchg
sbb
stos
jle
sbb
add
add
clc
andl
ljmp
add
ljmp
loopne
dec
mov
aas
mov
push
testl
stos
push
test
pop
mov
dec
or
ret
popf
mov
cmpsb
mov
sarb
lds
faddp
cmpsl
mov
push
xchg
jmp
sbb
add
pop
pop
pop
xorl
cwtl
jno
mov
insl
cs
mov
cmp
mov
popf
rcll
clc
xor
es
ret
xor
xor
shr
repnz
sbb
mov
repz
leave
jecxz
pushf
in
cs
scas
dec
sbb
ja
int
push
mov
std
ja
loop
lahf
push
fstl
imul
loopne
test
jmp
ds
fisttpll
imul
out
mov
shll
int3
sahf
dec
in
ret
test
aad
cmc
imul
pop
pop
inc
addr16
into
loopne
add
daa
fmull
arpl
repz
popa
add
out
jns
jl
sarl
mov
xchg
std
enter
lret
xor
pushf
aas
and
adc
test
push
lds
int3
xchg
movb
mov
insb
and
rcr
xor
push
iret
notl
out
sub
out
push
cmp
aam
mov
xchg
movsl
jg
ret
fdivl
sbb
cmp
jne
imul
sbb
imul
jmp
sahf
unpcklps
in
in
add
mov
stc
sbb
shll
dec
add
mov
rol
movsl
dec
repnz
inc
imul
push
cs
dec
loop
imul
dec
ret
or
xchg
das
popf
in
and
aam
cmc
jae
into
in
dec
mov
test
les
pop
pusha
jle
push
pop
push
push
lock
jnp
mov
dec
subl
scas
in
add
cmp
cld
test
xchg
gs
mov
shrb
pop
or
mov
gs
sub
loope
pop
in
es
movsb
mov
pop
push
push
mov
jecxz
xchg
sbb
push
push
cmpb
ds
imul
and
xlat
shrl
jmp
fucomip
inc
data16
cmpsl
rcrb
andl
jl
sti
mov
jl
js
xchg
and
stos
inc
and
iret
jb
lret
call
pop
sbb
push
ds
mov
mov
pop
popf
loopne
mov
outsl
jl
adc
sbb
ret
dec
push
mov
and
add
clc
je
out
loopne
xor
mov
in
gs
loop
test
add
shrl
stc
sbbl
mov
pushf
add
add
js
xor
jo
mov
aas
xor
jle
cld
jo
and
stos
push
leave
xor
scas
std
cs
mov
lea
jl
pop
dec
rorb
mov
dec
arpl
ds
out
cmp
shlb
xor
in
sbb
cs
pusha
pop
outsl
push
rclb
or
sarl
mov
xor
xchg
and
jno
outsl
cmp
insb
jp
aaa
mov
or
fcoml
fcompl
push
inc
jo
andb
mov
pop
add
inc
dec
pop
negl
sub
inc
rcrb
mov
pop
loop
les
call
sarl
push
loopne
int3
cmp
scas
sahf
out
fwait
jne
sbb
xor
rolb
test
xchg
movq
inc
push
jns
add
inc
cld
push
inc
addl
cmp
ds
push
jns
cmp
mov
adc
mov
into
fisttpll
add
in
or
outsl
add
lret
je
mulb
inc
xlat
inc
test
lds
aaa
and
dec
out
stos
call
sbb
push
idivl
or
hlt
lods
test
lods
fstp
fistps
les
jne
aas
cwtl
mov
dec
cltd
icebp
jle
sarl
outsb
mov
pop
in
insb
out
cwtl
xchg
mov
imul
mov
insl
jns
jmp
adc
mov
push
je
mov
rcrb
daa
xchg
add
cmp
pop
and
test
mov
jg
or
inc
sub
into
fwait
dec
loope
and
push
pushf
dec
xchg
push
ja
jb
push
pop
add
dec
mov
aam
xchg
push
jge
cmp
pop
les
fimull
push
aas
jg
data16
test
add
push
mov
lods
push
cmpl
add
loop
dec
ret
insl
movzwl
int
insb
dec
inc
lea
rcrb
dec
out
lods
stc
bound
and
add
push
mov
xchg
xor
mov
test
add
test
jb
jae
hlt
ds
mov
es
dec
imul
adc
cmpsb
pop
rolb
add
test
push
or
xchg
jae
loope
cld
cwtl
adc
sub
gs
pop
sub
sub
lods
push
loope
loope
les
jb
sbb
addr16
nop
sub
jns
push
sub
mov
fwait
mov
and
stos
sahf
cmc
mov
fcomps
int3
scas
addr16
arpl
cmp
test
icebp
cmc
sbbl
call
std
xchg
push
pop
xchg
cmpsb
dec
iret
out
test
cltd
or
push
or
scas
gs
push
sub
xchg
rol
daa
mov
jp
xor
inc
mov
jmp
sub
jne
or
or
ds
mov
mov
xchg
aam
jne
and
outsl
testl
mov
cmp
dec
xlat
pushf
xchg
and
cli
jno
je
imul
orl
sub
push
ds
sub
mov
and
mov
sub
add
aaa
inc
les
push
lret
in
xor
imul
fidivrs
push
add
xlat
test
imull
repnz
bound
inc
sub
ds
ss
jno
mov
dec
xlat
fwait
xor
icebp
loopne
stos
test
shlb
sbb
inc
incl
pop
sub
mov
xchg
ss
divl
in
push
sahf
aaa
out
les
sub
mov
popf
mov
and
sub
icebp
lock
mov
push
icebp
mov
ret
jmp
insb
fsts
mov
aas
out
pop
jle
jg
add
and
dec
or
pop
xor
mov
bound
mov
sahf
scas
mov
jne
add
imul
cmpsb
lret
or
aas
dec
lcall
xchg
sbb
and
int3
adc
or
dec
jne
sbb
call
mov
out
push
xor
ja
int
mov
fldl
in
or
idiv
dec
and
xor
or
dec
orl
ret
negb
mov
bound
or
fidivs
jo
xchg
and
xor
adc
mov
cmp
or
das
adc
ret
cmp
xchg
xchg
push
lods
scas
aas
pushf
mov
scas
sub
mov
adc
je
or
shrl
jecxz
cmp
cs
adc
mov
pop
outsl
mov
lock
in
das
test
shrd
jnp
add
cmp
adc
mov
push
mov
xor
lret
xor
push
adc
lcall
popf
jns
pop
and
mov
mov
mov
fcomi
xor
push
rclb
mov
inc
out
cmpsl
mov
or
adc
push
repz
jmp
test
lods
sbb
aam
fdiv
add
jg
push
push
xor
cmpsl
addr16
mov
lea
addr16
sub
iret
pushf
xor
imulb
lea
mov
add
xchg
add
shrb
xchg
scas
out
test
mov
lcall
loope
xchg
scas
jo
cmp
push
cmp
adc
mov
testb
jmp
push
je
cmpsl
push
jb
out
aam
push
rclb
mov
lret
dec
pushf
mov
mov
push
loope
addr16
add
cmp
pop
jno
dec
insl
fisubs
int3
xchg
movsl
adc
jmp
mov
rcll
fmuls
jg
xor
jbe
loope
cli
loope
aad
xor
dec
mov
pop
cmc
adc
inc
les
xchg
out
mov
les
test
rcrb
sub
inc
mov
mov
xchg
pop
adc
out
jp
into
and
stc
jecxz
cmp
cmp
dec
icebp
ljmp
xlat
push
adc
jne
imul
movsb
pop
ljmp
stc
sbb
or
fisubrs
dec
jmp
push
lahf
rcr
mov
xor
xor
inc
cmc
pop
dec
inc
jl
das
and
mov
xor
pop
shlb
xchg
pop
shrb
scas
std
xor
xchg
lds
test
push
loope
fnstenv
xor
mov
loop
hlt
pusha
adcl
cmp
out
fisubl
shl
enter
or
cmp
rcrl
in
dec
das
push
cltd
and
lahf
pushf
xor
lods
add
idivb
and
cltd
adc
lods
dec
dec
stc
out
xchg
ret
mov
lahf
push
mov
sub
xor
pop
push
faddl
das
xchg
jnp
stos
call
mov
ja
imul
mov
xlat
leave
popf
cmpl
mov
jnp
scas
mov
bound
into
push
mov
dec
ret
test
filds
outsb
jo
add
xchg
sahf
jo
jbe
iret
dec
sti
jmp
inc
dec
clc
mov
sbb
shll
pop
repz
jp
leave
es
dec
mov
movl
ljmp
outsl
pop
mov
and
lret
out
mov
lahf
adc
cmp
rclb
xor
in
and
add
jecxz
pop
mov
pushf
es
mov
call
movsl
cmp
mov
jnp
fnstcw
mov
gs
pop
fidivl
in
push
pop
fbld
mov
mov
mov
ss
out
pop
sar
cmc
jl
enter
mov
std
arpl
cmpsb
lret
xchg
cmc
lock
rorb
arpl
in
or
ret
xor
lcall
jp
dec
ret
xor
orl
out
or
lret
inc
sub
cmp
shll
push
popf
and
out
scas
out
mov
cli
js
mov
insb
xchg
jne
push
xorl
pushf
nop
cmp
push
rolb
aad
jle
jmp
cmp
test
idivb
sar
ret
cmp
cmp
std
sti
inc
sbb
sub
je
inc
dec
popa
mov
fldcw
push
ret
push
scas
adc
lods
adc
jb
xor
lods
dec
call
mov
xor
inc
inc
aas
gs
inc
xor
mov
aas
rcrb
js
push
dec
cwtl
mul
movsl
testb
popa
repz
repz
aad
aad
lods
das
pusha
pushl
mov
rorl
cmp
pop
mov
or
sti
sbb
rorb
or
jmp
sbb
push
adc
shll
ds
mov
jb
movsb
inc
fcmovb
lahf
enter
ljmp
in
dec
xchg
jle
stos
fimull
push
xor
aaa
xchg
or
mov
inc
andb
test
mov
pop
test
jae
fisubrs
cli
cmp
ret
pop
rcr
pop
pushf
ret
jecxz
test
dec
inc
mov
data16
mov
stos
in
fs
and
xchg
fsubl
push
vmwrite
add
mov
sub
int
fildl
dec
test
inc
aad
inc
xchg
fisttps
fs
dec
inc
fs
inc
arpl
shlb
add
movsb
lock
or
neg
imul
fs
xchg
inc
sub
imul
mov
mov
imul
add
insb
lds
jo
cltd
xchg
std
xchg
mov
mov
xchg
out
pusha
add
xor
xchg
leave
hlt
push
sahf
jnp
loop
out
fmull
imul
dec
popa
aad
in
mov
xor
xor
data16
lds
hlt
pushf
int3
ljmp
stos
xlat
adc
movlps
mov
cmc
ljmp
push
lahf
xchg
pushf
out
jp
add
adc
adcl
adc
pusha
aaa
fdivs
and
mov
add
jns
push
sbb
adc
sbb
xor
pop
sub
leavew
outsl
jecxz
outsb
mov
xor
cli
stos
add
or
jns
rolb
out
or
ror
xor
cmp
mov
adcl
cmp
arpl
fsubrs
test
ja
int3
stc
dec
test
orb
bound
add
ds
inc
xor
ret
jle
aaa
iret
imul
mov
mov
or
and
mov
jl
pop
scas
loopne
pop
sbb
inc
add
add
add
jo
lret
rol
int3
outsl
mov
jnp
hlt
in
notl
lahf
jo
push
xor
jecxz
push
mov
jno
jmp
lea
jecxz
popf
sbb
mov
dec
jno
and
dec
cmp
mov
push
lds
orb
jno
or
sub
add
jno
pop
dec
ljmp
sub
ror
inc
iret
lock
push
push
adc
icebp
and
and
add
in
pusha
dec
jnp
jb
ja
imul
pusha
mov
cmp
mov
jno
mov
fdivr
push
add
dec
pop
xor
lret
mov
and
outsb
shr
std
test
dec
jae
je
jbe
testb
add
sub
ror
std
adc
lret
int
xor
sub
loope
adc
jbe
pop
jmp
jno
pop
pop
push
fisubs
push
xor
inc
add
cmp
cmp
add
inc
mov
xchg
mov
loopne
les
mov
test
in
movsl
xor
and
fdivr
cmp
aad
std
pop
jnp
out
add
hlt
inc
xchg
iret
mov
or
pop
sti
sbb
call
sbb
mov
adc
cmp
fdivp
in
adc
sarl
sbb
sbb
jnp
lcall
lock
shlb
push
test
push
into
sahf
int3
mov
loopne
sahf
fmull
and
sbb
mov
mov
sbb
jae
jo
add
sbb
adc
add
lea
xor
js
cmc
leave
testl
clc
mov
fisttps
in
aad
mov
mov
fistpll
xchg
jmp
bound
jns
es
std
jmp
test
pop
fists
cmpsl
inc
sub
jne
mov
mov
into
inc
mov
rclb
adc
jle
mov
sarl
cmpsb
mov
lahf
shrb
and
mov
in
scas
lret
cmpsb
add
jge
sbb
movsb
ds
adc
int
dec
push
movsl
mov
push
ja
repz
dec
push
pop
mov
inc
jp
test
jmp
push
sbb
in
mov
xchg
sahf
cs
jne
push
pop
xor
mov
insl
xchg
das
in
stos
pop
mov
or
push
or
cmp
pop
mov
inc
imul
inc
ljmp
push
sahf
push
shlb
insb
stos
mov
cmp
and
mov
mov
jbe
test
mov
dec
gs
icebp
cmpsb
dec
sub
js
push
and
loope
lock
sub
scas
mov
adc
shrd
inc
addl
adc
mov
fs
out
adc
je
in
ffree
dec
sbb
pop
inc
clc
aam
or
add
mov
rcll
insl
leave
mov
notb
jg
fwait
cwtl
xchg
mov
cmpb
ss
clc
fistl
jne
pop
aad
lret
scas
pop
mov
clc
cs
fwait
cmp
fcomps
and
imul
mov
inc
xchg
sub
dec
aad
sbb
cmp
loope
sahf
leave
sahf
repnz
push
mov
nop
lods
hlt
inc
out
cmpsb
mov
mov
cltd
sub
lods
adc
movl
aam
ss
adc
les
repnz
iret
insl
pop
and
xorb
imul
sbb
xor
xor
clc
into
dec
inc
imul
adc
add
add
dec
cli
sbb
push
jb
rolb
imul
jae
sub
popf
mov
xchg
popa
mov
and
sbb
or
shrb
pusha
fmul
sar
sub
loope
mov
gs
das
xchg
daa
mov
xor
sub
movb
cmpsb
dec
mov
addl
test
sbb
mov
sbb
jb
dec
pop
fwait
loope
jo
xor
das
xchg
loop
lcall
jo
ret
sbb
dec
nop
scas
jno
xchg
mov
enter
mov
clc
inc
lds
pop
push
and
jge
call
jne
fildl
jns
mov
sbbb
dec
jb
inc
and
daa
sbb
sbb
push
mov
aas
adc
jp
push
sbb
in
push
dec
jne
stos
stos
cmp
mov
rcrl
add
xor
test
sbb
rcl
jmp
cmp
dec
addr16
or
pop
push
and
jmp
ret
lahf
repz
dec
icebp
inc
xchg
inc
mov
popf
out
outsb
cld
mov
xchg
mov
es
in
sub
sub
imul
sbb
add
mov
xchg
or
pop
insl
sti
jmp
push
push
pushf
mov
aaa
outsb
movsl
dec
dec
loopne
push
fnstsw
push
call
jl
dec
leave
push
testl
out
sub
jmp
and
aad
pop
fbld
test
hlt
mov
push
ds
movsb
adc
xor
jnp
xchg
pop
insl
gs
out
inc
and
addr16
and
jbe
pop
or
sarl
out
and
imul
in
cs
xchg
cmpb
sbb
cmpsl
jmp
xchg
jecxz
andb
cmp
mov
xor
stos
call
sub
mov
jp
mov
lea
loop
faddl
dec
aad
or
dec
mov
cltd
and
cli
inc
mov
push
mov
call
rcl
in
pop
stc
adc
or
ds
sub
icebp
pop
dec
imul
xor
repz
ja
jg
cmc
es
push
fsubl
ffreep
shrb
mov
loopne
sbb
mov
mov
jne
fistps
and
push
fwait
pop
cmp
test
int3
cmp
sub
pop
add
pop
movaps
cmp
inc
imul
leave
inc
frstor
or
add
inc
aad
pop
insl
push
imul
mov
movsb
dec
xor
mov
cmpsl
icebp
xchg
iret
mov
aas
cltd
call
mov
jle
cmp
inc
push
dec
xor
into
adc
mov
push
xchg
xchg
mov
les
bound
lods
pop
sub
fcoml
pop
js
into
xor
rcl
mov
int3
push
jbe
shl
cmp
and
dec
cmp
push
xchg
aad
push
add
cmp
sub
or
orl
lock
arpl
lahf
xor
repz
addr16
inc
cld
cli
mulb
adc
mov
into
fcompl
mov
jp
jmp
popf
fnstcw
and
dec
lds
mov
push
xor
pusha
pop
sbb
out
aaa
push
xor
cmp
and
mov
and
test
repnz
and
push
ret
ss
int
and
mov
cmp
in
fidivs
adc
maskmovq
imull
mov
test
int3
imull
add
add
sub
inc
sarb
lods
and
shrl
movsb
insl
fistpll
sti
push
cmp
andb
aam
pop
out
jb
add
sub
sub
xchg
mov
int3
xor
std
test
fdivl
adc
jp
ficoml
or
ret
dec
cmp
stc
pop
pop
daa
jbe
negl
xchg
sbb
and
mov
xchg
stc
adc
jns
out
sub
and
cld
adc
mov
out
pusha
in
insb
aam
jo
mov
adc
arpl
rcl
sub
mov
sti
mov
loop
insl
iret
adc
pop
std
gs
xchg
jmp
sbb
add
pop
ds
sbb
lret
dec
mov
mov
and
repnz
mov
ficompl
and
push
movsl
mov
jle
mov
leave
add
add
inc
inc
in
cmpsb
in
xchg
mov
clc
cmp
es
in
adc
jno
and
test
fistpll
xor
scas
nop
sti
xchg
into
jg
lods
iret
adc
sbb
and
lcall
pop
into
sub
lods
jge
jae
cmp
cmp
ret
jle
ficoms
pop
cmc
dec
sbb
mov
es
sbb
ja
push
push
push
scas
dec
movsb
adc
jo
nop
jne
in
cs
out
fnstenv
mov
lcall
test
js
ljmp
mov
add
lock
mov
scas
xchg
cs
cmc
lahf
push
inc
jbe
in
test
sbbl
xchg
sbb
into
dec
mov
push
dec
jle
jbe
or
mov
cs
cmp
cmp
pop
mov
test
mov
xor
aam
sti
mov
pushf
aad
loop
push
push
pop
aaa
cs
out
js
clc
test
push
scas
cmp
jecxz
inc
xchg
dec
out
inc
fsubp
jo
stos
in
sbb
push
lods
and
dec
shll
sbb
lret
push
repnz
pop
jmp
outsb
mov
pop
add
sti
sbb
mov
data16
out
ret
xor
cltd
stos
and
sub
mov
jg
mov
out
insl
sub
out
xchg
loopne
aaa
les
ret
into
jno
sbb
mov
das
jbe
sub
cmpsl
cmp
nop
in
popf
enter
or
mov
out
test
rorb
add
pop
adc
add
fwait
sbb
or
aas
call
inc
sub
dec
mov
rcll
mov
mov
pop
xor
inc
test
faddl
mov
pushf
stc
test
cmp
mov
jp
mov
fistps
in
cwtl
jg
cmpsb
pop
mov
pop
fdivrs
subb
mov
out
jbe
inc
test
mov
mov
negl
clc
adc
shl
mov
cmpw
iret
fsubrs
xchg
in
add
push
mov
mov
pop
xchg
arpl
cmc
sbb
and
push
or
lock
call
sbb
ffreep
cmp
xor
xchg
aaa
add
pop
pusha
mov
test
in
mov
scas
and
jmp
aam
iret
and
cwtl
aas
inc
int3
pop
imull
or
sbb
adc
fsts
xchg
push
aas
rolb
xchg
jecxz
sbb
cmp
xor
pop
pop
leave
lcall
not
jns
jns
popa
cmp
cmp
cmp
aaa
inc
in
mov
in
xchg
sbb
jmp
or
cltd
leave
dec
pop
iret
and
sbb
cmp
inc
stos
mov
ss
cmp
pop
xchg
and
mov
inc
mov
mov
sbb
ret
lds
sub
add
in
add
addl
jo
scas
leave
xor
dec
mov
aad
notb
add
jl
sarl
vorps
jg
out
aas
push
push
pop
ss
pop
leave
jne
testl
filds
adc
lret
mov
mov
push
insl
cmc
pop
dec
jbe
add
stos
xchg
lods
repnz
mov
aam
mov
adc
xor
loop
sbb
xorl
out
push
pushf
xchg
arpl
fucomi
dec
adc
add
out
gs
jp
pop
pop
fs
outsl
sub
xor
aas
in
cmpl
push
inc
mov
xor
adc
lds
mov
jle
icebp
sub
mov
iret
cmp
fldl
sub
xchg
insl
out
test
xchg
loope
repnz
iret
pop
cmp
stc
hlt
ror
movsl
and
mov
sahf
icebp
adc
movsl
int3
cmp
dec
insl
cmp
arpl
xchg
add
fisttpl
jne
or
inc
jp
test
bound
testl
jns
aam
cmpsb
mov
fwait
dec
leave
adc
pop
inc
ss
incb
push
aam
movsl
aad
push
mov
sarl
test
les
mov
jp
hlt
rcrl
sub
push
rcrl
sahf
fildll
mov
fwait
je
fadds
call
je
xchg
lret
nop
je
dec
jno
sbb
fadd
xchg
pop
sbb
or
mov
xchg
leave
xlat
test
jns
add
aaa
cmpsl
jno
cmp
lahf
loope
fbld
rcl
imul
mov
std
inc
outsl
pop
mov
xchg
adc
mov
sbb
xor
int
push
dec
jecxz
loop
fsubs
lret
scas
mov
mov
repz
call
lret
ficompl
cmp
sbb
mov
push
xchg
pushf
add
stc
xor
popl
and
and
fwait
movb
dec
dec
fmuls
dec
sarb
call
pusha
sbb
xchg
imul
xchg
push
repz
sbb
stc
sti
rorb
and
mov
aam
inc
jl
out
mov
fstps
out
xchg
sbbb
mov
xor
fidivl
pop
push
sub
xchg
cltd
cmc
pop
mov
pop
mov
inc
jnp
xlat
sbb
dec
mov
push
lcall
push
cmp
test
push
inc
ljmp
inc
push
sbb
shll
xchg
jle
pop
sbb
leave
subb
cmc
pop
loopne
xabort
call
push
mov
in
imul
mov
push
xchg
adc
fcoms
add
roll
and
stos
inc
rcrl
mov
xor
adc
stc
popf
mov
idivb
mov
mov
faddl
rcl
mov
and
mov
lds
xchg
push
lods
je
imul
es
cmpsb
int
test
jns
add
test
jns
leave
popa
xchg
or
adc
popa
mov
dec
icebp
out
inc
mov
or
or
pop
mov
sarl
inc
push
fs
movsl
mov
fsubrl
pop
add
or
push
pusha
mov
dec
jle
out
pop
pop
mov
rol
int3
push
xchg
fmul
test
push
leave
xor
mov
jne
sbb
mov
pop
and
mov
xbegin
jnp
cmp
ljmp
mov
into
mov
mov
cmp
insb
cmp
rcl
ljmp
out
imul
mov
repz
pop
adc
add
mov
pop
and
mov
fldl
ret
test
shr
dec
jbe
pushf
jp
outsb
mov
stos
jbe
jne
lahf
xor
mov
mov
sarb
xchg
pop
cmp
push
ret
inc
sub
cltd
movsb
aas
adc
jne
adc
aaa
sbb
add
pop
jle
cmp
fdiv
pop
xchg
roll
in
loope
cs
cmp
outsl
push
xor
xor
jns
lea
add
push
cli
fadd
mov
daa
orb
add
jmp
movsb
fisubl
dec
jno
mov
mov
add
pop
add
lret
das
mov
jmp
leave
imul
je
adc
pop
shll
add
lcall
stc
push
popw
or
inc
xchg
cwtl
or
adc
xchg
add
cmpsl
shrl
fists
fisubl
dec
jp
movsb
iret
imul
or
clc
jo
rolb
mov
prefetch
or
test
pop
fsts
aas
out
mov
out
xor
mov
std
je
mov
xor
lock
iret
enter
rolb
imull
jns
and
rorl
ja
js
ljmp
lds
jl
into
fdivl
test
in
dec
jle
inc
lock
roll
inc
xchg
add
daa
js
ret
sbb
sub
mov
cmp
inc
and
xchg
scas
adc
cltd
cmc
cli
pop
dec
xchg
std
mov
cwtl
or
test
aad
insl
sbb
sbb
xchg
cmc
xorl
jecxz
sub
inc
xchg
mov
in
mov
popf
mov
js
shrb
stc
repnz
adcb
rolb
das
and
jne
xchg
pop
mov
inc
outsl
negb
rcrl
aad
addr16
addr16
cld
and
pop
loop
rcl
push
sub
pop
add
fisttpll
and
nop
out
out
push
rorb
sbb
mov
ja
div
mov
sub
loopne
jns
and
cmp
mov
aam
cmp
dec
cltd
xchg
mov
mov
scas
push
inc
test
mov
mov
ds
push
test
add
and
adc
dec
cli
jnp
jno
mov
cwtl
push
adc
mov
fldcw
dec
mov
mov
jae
cs
sub
cltd
aad
imul
jbe
pop
ds
push
push
mov
push
roll
fs
sbb
mov
repnz
rcl
lock
sbb
and
cmp
push
cmp
add
pop
and
pusha
and
xchg
outsb
jmp
adc
out
stos
fsubs
movsl
rcll
sbb
push
cwtl
adc
lcall
lods
shlb
push
out
aam
shrb
hlt
mov
loop
fildll
or
xchg
shll
inc
lahf
cld
fnstsw
xor
dec
push
adc
fsubl
adc
in
jl
sti
xchg
repz
loop
mov
leave
data16
js
mov
loop
std
pop
jmp
adc
jge
mov
jg
in
in
dec
sbb
sbb
out
mov
jnp
pop
cmp
cwtl
lea
pusha
mov
cmpsl
xor
movsl
cmp
stos
pop
mov
jge
gs
int
jge
mov
cld
testl
adc
xchg
flds
pop
inc
jge
cmpsb
push
sbb
inc
cmp
xchg
mov
cmp
xor
aaa
xchg
iret
loope
movsl
in
adc
adc
loope
andl
cmp
mov
outsl
sbb
dec
cli
in
add
bt
nop
jg
mov
test
cwtl
jge
cmp
mov
gs
mov
int
loope
push
jp
lds
lcall
lea
xchg
out
mov
sub
cmp
sub
cmpsl
jne
add
imul
lods
mov
iret
outsl
dec
dec
jne
xchg
cmc
xchg
adc
mov
int3
cmp
sbb
movsl
into
fwait
mov
mov
cmp
call
mov
idivb
in
and
mov
jbe
xchg
xchg
sub
add
push
sbb
jo
jns
push
xchg
xorb
mov
dec
sub
iret
cmp
pop
xor
lcall
jns
sbb
pop
and
pop
cmp
fisubrl
jmp
shll
mov
outsl
mov
mov
pop
xor
fdivs
push
iret
inc
add
nop
sbb
mov
das
ja
movb
mov
repnz
sbb
mov
cmp
movsl
mov
jl
jae
sbb
inc
mov
xchg
xorb
imul
fstps
loope
loopne
sub
or
or
cmp
shlb
jbe
or
pop
arpl
push
and
call
out
mov
pushl
dec
push
inc
inc
inc
stc
aad
pop
ds
movsb
mov
dec
lods
cmpsb
sbb
sahf
pop
movsb
jg
cli
lods
das
imulb
arpl
scas
mov
mov
pushl
pop
mov
cs
sbb
imul
adc
mov
inc
clc
inc
adc
in
in
jo
in
lea
and
insb
jnp
cs
add
push
enter
mov
inc
fcmovbe
aad
in
cmp
imul
pop
fiaddl
icebp
and
xchg
push
jle
fisubrl
out
mov
sbb
lods
iret
repnz
pushf
dec
dec
pop
lcall
push
in
pop
jns
int
cmc
dec
stos
fsubs
jno
xor
mov
add
jl
jp
jne
mov
mov
pop
gs
jno
adc
dec
and
movsl
xor
sbb
iret
out
xchg
or
adcl
jp
stos
dec
dec
jmp
push
and
repnz
into
aad
out
and
mov
xor
inc
xlat
sub
stos
pop
sub
addr16
adc
mov
leave
xor
rcrl
lret
cmp
setb
in
fcoms
add
or
out
mul
jge
cmp
daa
cmc
sub
cmp
in
fcmovu
mov
in
inc
adc
test
pop
insl
pop
pop
in
xor
std
xchg
xchg
jle
cmp
fstl
aam
aas
cs
adc
pop
movsb
lods
pop
mov
sbb
out
lcall
inc
scas
xchg
sub
xor
repnz
mov
fs
mov
jle
push
outsl
in
lret
and
mov
lcall
pop
pop
cli
mov
mov
cld
adc
mov
push
inc
xchg
gs
out
lcall
mov
xor
mov
jns
jns
pop
cmpsl
sub
out
loopne
add
notb
jno,pt
xchg
int
std
ret
xchg
rcrb
push
lret
add
lahf
loopne
fwait
xchg
mov
mov
pop
dec
sub
fwait
pop
jbe
ret
nop
ret
add
dec
mov
xor
mov
shlb
inc
or
sahf
gs
nop
push
inc
xor
das
adc
mov
adc
lahf
hlt
or
inc
mov
xchg
int
ljmp
mov
and
leave
mov
repz
cli
and
in
lods
inc
mov
aam
mov
shrl
bound
mov
cmp
cltd
lcall
enter
in
shr
orl
sbb
int
icebp
inc
in
xchg
push
aam
mov
mov
and
adc
or
call
push
hlt
faddl
jp
movsl
push
cltd
cmp
push
add
popa
add
sub
and
shr
imul
mov
jp
addr16
or
xor
add
push
iret
push
push
jp
mov
mov
sbb
shrl
test
stos
out
shll
out
ds
mov
mov
mov
push
cwtl
test
mov
jns
ret
xchg
dec
xlat
data16
xor
mov
push
xchg
pop
outsb
fdivrs
ret
mov
mov
xchg
add
mov
jp
push
jge
push
dec
dec
adc
arpl
inc
add
mov
outsb
cwtl
fdivrp
xor
push
mov
mov
jbe
dec
sbb
in
mov
mov
out
ret
mov
cmp
hlt
cs
aaa
cmp
jns
jo
jg
aam
jnp
cwtl
outsl
pop
adc
loopne
movsb
xchg
push
shrl
fucomip
xchg
loopne
adc
test
arpl
xchg
xor
mov
shlb
pop
in
pop
jg
sarb
push
and
sbb
les
pop
in
push
sub
xor
jle
push
add
xor
mov
lahf
cmpsl
inc
push
xor
loop
jl
mov
in
mov
cmp
fwait
rolb
push
sub
dec
daa
adc
hlt
pop
mov
outsb
scas
xor
sbb
add
fsubl
loop
add
sahf
xor
dec
xor
lock
adc
ja
add
or
jns
pop
dec
fistps
xchg
sbb
cltd
nop
punpckhdq
or
out
dec
sub
pop
cmc
push
pop
xchg
xchg
dec
xor
mov
mov
mov
mov
and
jb
cmp
mov
inc
cwtl
cwtl
sarl
add
fldcw
gs
fs
cld
ds
sqrtps
sbb
adc
mov
or
push
imul
cwtl
movsbl
test
call
popa
insb
ret
dec
xchg
outsb
or
xor
cs
into
jg
sub
sbb
adc
mov
push
arpl
mov
jl
dec
test
addl
pop
nop
stos
push
out
scas
cmp
push
imul
mov
xor
data16
cwtl
dec
fmuls
sub
mov
sbb
sbb
mov
iret
insb
sub
add
scas
nop
cmp
lcall
rclb
xor
or
lea
push
xchg
xchg
ja
sub
scas
insb
lods
jmp
mov
mov
fmuls
push
out
and
add
cmp
sbb
test
and
aas
xchg
lahf
jae
sbb
lea
push
loope
dec
ret
dec
stc
das
lods
xor
orl
jno
in
adc
test
mov
mov
aad
push
add
repnz
fwait
es
fucom
mov
xchg
xor
or
xchg
out
jno
xchg
and
mov
test
rsqrtps
pop
mov
and
inc
jne
add
mov
mov
dec
shlb
mov
int3
je
mov
fbstp
inc
frstor
stos
ja
inc
jnp
push
mov
push
pop
fs
add
cltd
and
sbb
je
pusha
test
xor
shlb
push
mov
xor
enter
inc
insl
mov
pop
sub
inc
bswap
into
arpl
in
pop
scas
jne
mov
jns
and
addr16
mov
jl
call
pop
fs
clc
xor
xchg
ret
mov
push
inc
mov
mov
xchg
or
out
in
sahf
aam
add
insl
or
mov
scas
push
outsl
dec
cmp
mov
sbb
cmp
adcl
int
dec
mov
xchg
dec
and
xchg
fists
out
sub
sbb
test
cwtl
popf
ret
push
gs
inc
ret
and
pushaw
pop
pop
and
test
ja
loopne
mov
fstps
dec
sbb
jno
push
cmpsl
ja
xor
mov
mov
or
ja
pop
in
movsl
or
je
push
or
sub
jne
shrl
jg
out
xchg
dec
adc
pop
test
incb
in
insl
inc
sahf
cmp
mov
xor
dec
lcall
mov
lods
xlat
push
out
cmc
fildl
cmc
sbb
push
cmp
push
push
cmp
pop
pop
iret
jg
data16
test
push
js
jl
or
mov
icebp
xchg
sub
test
add
sub
or
aaa
enter
pop
repz
jmp
movsl
mov
push
push
fstp
roll
fs
sub
imul
pusha
sub
add
jle
dec
out
xchg
js
aaa
pop
mov
or
lods
mov
out
xchg
aam
dec
or
gs
mov
out
outsl
dec
mov
jbe
jle
lcall
fwait
repz
sbb
sbb
popf
movsb
dec
fisttps
lea
out
push
mov
mov
xor
sahf
js
pushf
add
sbb
loop
inc
add
mov
xor
sbb
jne
testb
stc
es
es
sub
pop
cltd
jl
dec
lods
ljmp
pop
pop
cltd
add
mov
sbb
push
push
xchg
mov
mov
jecxz
or
out
jo
cmp
cmp
ffreep
pop
push
ds
xor
aaa
lcall
divl
mov
int3
mov
test
or
add
push
aam
sarb
jo
jb
sarb
nop
faddl
xchg
pop
pop
inc
stos
mov
js
or
enter
fwait
mov
jb
mov
jns
push
repnz
jmp
pop
sub
dec
fstpl
dec
aad
out
rcll
dec
test
arpl
ds
mov
stos
dec
pushl
sub
push
inc
dec
cwtl
cmpsl
out
jecxz
js
push
movsb
jbe
sub
xor
es
sub
fisttpl
int3
add
es
lret
xchg
pop
jae
ljmp
dec
and
aas
iret
shrb
pop
jle
mull
inc
stos
mov
pushf
mov
adc
dec
stc
cmp
mov
clc
stos
fdivrs
mov
stc
inc
imul
pop
in
popa
xor
xchg
scas
in
and
scas
imul
and
jno
or
xchg
mov
or
rcll
dec
iret
in
cmp
stc
cli
xlat
mov
outsb
push
sbb
mov
mov
fwait
bound
sub
mov
int
scas
ds
mov
adc
in
lret
or
dec
bound
shl
xchg
int
imul
gs
ret
popf
inc
js
popl
add
dec
xor
pushf
hlt
inc
adc
je
jae
pop
pop
mov
mov
stos
movsl
cltd
jns
dec
test
inc
mov
mov
pushf
dec
mov
rol
add
adc
repnz
aaa
out
pusha
pop
fiadds
pop
lahf
ljmp
add
add
inc
out
in
fcom
insb
fsubs
pushl
or
jno
jp
dec
in
sbb
cmpl
adcb
aad
cwtl
inc
clc
xor
add
sbb
ss
js
pop
adc
rolb
and
and
jbe
mov
lea
ret
add
std
into
or
inc
jmp
test
dec
repnz
push
pop
jo
bound
frstor
js
iret
outsl
pop
cmc
daa
lret
pop
daa
jns
lock
hlt
and
cmpsl
inc
add
pop
out
lret
jle
pop
daa
sub
cli
or
pop
and
int
sarl
push
clc
stc
stc
xor
xor
cmp
daa
pop
imul
rol
add
mov
pop
test
movsb
sub
movsl
xor
lcall
or
fcmovnu
and
mov
addr16
cmp
and
jb
push
add
cltd
cmpsb
xchg
push
mov
inc
mov
ret
imul
rorl
shll
push
cmpsl
mov
push
lock
inc
adc
div
dec
sti
mov
sub
add
mul
mov
cmp
xchg
jbe
adc
inc
fidivrl
lahf
jecxz
test
dec
cmp
lock
lahf
push
das
subb
add
or
xchg
stos
cmp
pop
xchg
bound
and
or
mov
pop
daa
cmc
pop
in
dec
stos
test
in
scas
pop
cltd
push
mov
inc
sahf
nop
inc
cmpsb
xchg
inc
in
scas
shl
in
xor
mov
mulb
aam
cmp
cmp
jne
and
lahf
sbbb
mov
leave
push
inc
inc
out
and
mov
sbb
xorl
mov
dec
xlat
mov
sarb
push
and
cmp
dec
fldcw
aas
mov
jmp
ja
loop
or
addr16
into
inc
and
test
mov
cmc
dec
mov
leave
mov
les
add
cmpsb
sub
cmp
sbb
hlt
xor
loope
or
cmc
enter
test
cld
hlt
shl
imul
scas
jge
cmc
inc
or
mov
into
dec
and
pop
xchg
out
pushf
cmp
adc
xchg
push
add
or
pop
fcoms
enter
sahf
push
add
jge
or
into
cltd
cmp
fs
outsb
movsl
jg
popf
pop
rcll
sbb
jae
mov
xor
push
jno
ret
or
mov
outsb
ret
sahf
sub
clc
pop
xor
ja
decl
jl
mov
jns
inc
and
aad
das
and
movsb
in
je
push
std
frstor
xor
xlat
dec
xor
adc
inc
push
insb
xchg
jno
std
jae
sub
subl
sbb
fisttpl
mov
or
imul
sbb
push
jbe
fidivs
sbb
cs
push
ficompl
inc
push
add
cmp
addr16
shlb
fmulp
mov
mov
mov
xchg
or
adc
xchg
pop
ljmp
mov
mov
into
cmc
xor
das
jle
sbb
inc
lahf
arpl
jecxz
aam
push
loope
jb
out
push
or
pop
ret
jno
cmp
push
push
xor
mov
cmp
pop
int3
dec
push
add
push
or
fdivl
incl
lds
mov
push
pop
mov
push
int3
inc
les
test
jge
lock
inc
lea
push
pop
mov
xchg
jle
mov
or
jne
rcl
adcb
aas
pop
or
push
outsb
cmp
mov
pop
das
xchg
jp
out
rclb
sbb
fisttps
xchg
call
out
cmpsl
and
lds
mov
imul
jp
inc
repz
ret
in
mov
cmpsl
mov
inc
hlt
inc
mov
adc
jnp
xor
or
iret
out
push
dec
fidivrs
cld
call
shlb
hlt
push
dec
xor
and
lcall
repz
push
mov
inc
xchg
xor
mov
in
pushf
vandps
or
jae
std
shll
mov
roll
add
jbe
xchg
dec
arpl
add
jp
mov
jo
cltd
in
popa
ret
sub
mov
addl
adc
jp
mov
or
testb
mov
imul
hlt
mov
dec
aam
jne
fwait
add
push
or
daa
or
sbb
sbb
jnp
lods
dec
mov
lcall
ret
cltd
in
or
inc
out
lahf
neg
repnz
clc
sbb
jmp
dec
add
ficoml
sahf
pop
aad
fdivrl
xor
adc
sbb
imul
add
addr16
data16
inc
mov
sahf
adc
js
or
sbb
mov
lds
in
xor
int3
mov
push
mov
in
test
jge
mov
inc
fimull
or
dec
push
cmc
loopne
cwtl
add
rcrl
pop
push
mov
std
mov
call
enter
loopne
mov
jbe
jmp
jne
push
inc
data16
repnz
incl
xchg
sbbb
movq
and
jecxz
sbb
and
push
repz
pusha
sbb
xor
stos
sub
cwtl
pop
add
dec
adc
insl
push
push
jnp
fistps
shrl
adc
shlb
add
aaa
ret
pop
push
jb
and
inc
push
repz
mov
aaa
decb
inc
sbbb
sub
adc
xlat
xchg
fsts
fwait
and
cs
jge
dec
adc
jns
cmpsl
insb
rolb
pusha
icebp
push
push
or
lods
fwait
lahf
adc
imul
or
pop
push
movsl
outsb
jbe
sbb
push
cli
rclb
scas
mov
jp
sbb
fucomip
int3
lods
push
stos
arpl
stc
popf
adc
shl
in
ss
adc
push
movsl
xchg
aam
in
inc
in
mov
mov
xor
mov
int3
pop
add
and
cmpsb
mov
mov
mov
aas
fs
mov
mov
fmul
sbbb
inc
in
cwtl
dec
retw
mov
cmpb
arpl
ret
loopne
lds
push
mov
pop
fdivrs
test
jmp
and
and
rolb
sub
popf
pop
lret
pop
test
imul
mov
jne
inc
xor
mov
xlat
mov
lods
sub
imul
push
sahf
sbb
lret
xchg
ret
cmpsl
mov
adc
les
mov
xorb
mov
xor
inc
movsl
mov
pop
fcompl
mov
mov
stos
gs
lret
mov
push
or
lods
or
sti
inc
and
cmp
fistpl
testb
push
sbb
xor
mov
stos
adc
stos
lcall
incl
push
jb
or
mov
enter
insb
mov
inc
pextrw
inc
sbb
addr16
push
std
notl
mov
icebp
je
lods
test
push
jb
ret
adc
push
adc
sub
mov
xchg
ljmp
pop
sahf
stos
cld
xlat
pushf
repz
out
cltd
addb
std
push
test
aam
mov
ret
insl
shll
sbb
mov
xchg
pop
lcall
test
jge
fwait
push
add
sub
jne
adcl
mov
xchg
mov
mov
mov
test
push
and
jecxz
pop
xor
inc
mov
dec
enter
leave
nop
add
cmp
ss
ret
and
cld
aas
sahf
jnp
add
sbbb
mov
or
xchg
or
call
into
frstor
inc
jb
hlt
repz
cli
sti
out
lods
fldt
cmp
adc
xor
or
mov
mov
sbb
adc
imul
jbe
aaa
adc
adc
jmp
mov
push
loope
in
dec
dec
pushf
bound
fldcw
test
dec
sbb
popf
push
mov
jecxz
xor
cmp
push
add
out
dec
sti
cli
mov
lock
shlb
xchg
in
pop
stos
push
pop
jns
popf
inc
add
cli
mov
fs
arpl
pop
mov
push
pand
shll
insb
pop
aaa
fld
aad
lods
cmpb
stos
testl
imulb
nop
fistpl
xor
inc
testl
nop
sti
add
addl
mov
hlt
addr16
mov
add
insl
jge
jb
inc
add
insl
xor
stc
hlt
gs
pusha
in
fiadds
rcll
add
jne
mov
mov
adc
out
sbb
sahf
jl
sbb
and
jge
and
pop
roll
ss
sti
insl
pushf
lret
jmp
mov
data16
popa
icebp
dec
decb
shrl
inc
pop
dec
mov
mov
mov
cmp
jnp
mov
pop
in
xchg
ret
in
jbe
push
or
ficoms
pop
cmp
xlat
rcrb
jns
and
xorl
mov
mov
daa
in
inc
shr
dec
ret
in
les
jb
and
outsb
sub
cwtl
lcall
mov
or
dec
cmp
out
sbb
fstps
sahf
jl
jnp
cltd
testw
adc
stos
ljmp
out
dec
fdivl
cltd
and
rep
aaa
pop
pop
lock
test
or
cmpsb
mov
repz
mov
rcr
mov
enter
loope
imul
in
xchg
adc
mov
pop
je
hlt
adcb
jmp
and
subb
jns
mov
arpl
mov
js
cltd
jg
cmp
movsl
dec
pop
mov
xchg
dec
jl
and
jge
fcompl
inc
cmpsl
scas
xchg
mov
insl
movsb
pusha
clc
pop
int3
cli
jecxz
in
sarl
xor
hlt
fstpt
aad
jno
fs
into
xor
andb
fimull
dec
xor
outsl
push
sub
push
jmp
inc
ljmp
lahf
or
mov
sbb
mov
sub
add
movsb
cmp
cld
push
pop
mov
mov
cmp
test
out
or
add
mov
add
dec
loope
pop
addl
lods
add
adc
sbb
rcll
inc
adc
je
dec
roll
jp
cwtl
mov
push
cmp
adc
pushf
sub
xchg
pop
ret
jb
push
and
rclb
mov
sti
inc
mov
and
jne
test
in
sub
push
xchg
add
vxorps
inc
loop
shl
xchg
gs
pop
mov
in
dec
mov
lret
or
pop
sub
imul
pop
xor
sbb
mov
aam
push
loope
out
je
rolb
loop,pn
lcall
pop
imul
xor
daa
fdivrp
loopne
mov
push
mov
out
and
or
sub
add
sahf
lcall
jmp
mov
fnsave
enter
mov
jecxz
sbb
inc
jno
js
std
cwtl
mov
iret
out
mov
icebp
lret
fidivrs
hlt
jle
adc
jnp
cmp
loopne
fcompl
scas
mov
mulb
mov
cli
mov
dec
lret
fwait
cmp
lcall
fxch
xchg
enter
adcl
sub
inc
mov
fnstenv
xor
xchg
cltd
lock
sbb
test
xchg
xlat
dec
lods
out
push
pushf
cwtl
fsubs
adc
xchg
lods
inc
add
in
test
push
jmp
les
arpl
cltd
mov
jmp
and
ljmp
lods
shl
sarl
aad
ficoml
in
jl
add
lds
pop
adc
rcrl
dec
repz
jecxz
jno
mov
add
cmp
dec
mov
mov
test
dec
fstpl
xchg
pop
enter
mov
imul
addr16
shll
test
push
js
mov
adc
or
add
int3
mov
mov
mov
jl
outsb
push
or
test
xor
pop
sbb
jmp
testb
sub
jbe
dec
sub
fcom
cmpsl
lods
inc
xlat
sahf
mov
pop
push
inc
xor
mov
xchg
or
jg
sbb
out
add
imul
and
add
cmp
insb
push
or
jp
ss
stos
push
aam
cmp
push
and
add
dec
fiaddl
icebp
enter
test
cmp
bound
test
aas
imul
test
or
sbb
cs
popa
mov
sub
cmp
jge
das
outsl
push
fstpl
cmpsl
pop
sub
out
scas
into
mul
sar
pop
sbbb
negb
ja
rol
addr16
inc
sbb
dec
leave
push
push
loop
mov
leave
xchg
es
add
push
and
cmp
mov
das
mov
pop
xchg
cmc
and
mov
fwait
mov
inc
enter
jbe
dec
and
add
int
and
sub
mov
or
mov
les
sbb
mov
dec
mov
xchg
add
mov
loope
pop
aaa
lock
mov
or
xchg
or
jmp
mov
jp
mov
or
xor
lcall
cmpsl
sub
int
int3
arpl
les
cld
adc
movl
fs
sub
mov
dec
sub
push
movsb
insl
out
lods
out
jecxz
xchg
inc
push
lret
scas
inc
jae
push
dec
ljmp
cmp
add
or
hlt
js
popfw
loopne
mov
rcrl
fwait
pop
push
cmc
ljmp
ret
push
dec
inc
inc
mov
outsl
add
sub
push
mov
pop
dec
stos
adc
mov
ds
jns
cmp
rcll
fsubs
insb
mov
cli
aam
sti
sbb
push
and
mov
loopne
pop
sbbb
cmp
xor
shll
ret
jge
xor
jo,pn
aad
jbe
sub
sub
xchg
andl
rcll
lret
push
int
ret
mov
jle
ja
mov
mov
sti
or
inc
cmc
mov
push
fiaddl
and
jge
rorb
popa
cmp
xor
daa
mov
cs
imul
xchg
pop
into
ret
cmpl
mov
adc
movsl
stc
adc
sub
adc
inc
out
out
adc
mov
ret
pop
mov
and
mov
xchg
enter
orl
sub
test
ja
jp
cmp
mov
mov
mov
add
decl
sbb
enter
mov
fidivrs
sbb
push
add
xor
sub
repz
gs
xchg
mov
push
std
jo
sub
imul
imul
nop
pop
mov
sub
fs
pop
in
inc
mov
pushf
push
rorb
mov
mov
jmp
jg
sarl
add
cmpsb
std
adc
test
gs
mov
dec
and
fsts
mov
clc
or
ret
je
adc
inc
outsl
add
ret
push
cmp
mov
xchg
xor
mov
dec
in
or
pop
jl
fsts
rcl
mov
std
clc
pop
cmp
mov
sbb
mov
pop
xchg
mov
scas
xor
jp
push
mov
fdivrs
movsb
sub
mov
jae
cmp
jmp
mov
push
jmp
or
jp
lods
jl
inc
mov
dec
push
popf
mov
push
fsts
or
cmp
cs
stos
jne
and
add
pop
adc
imul
cltd
xor
out
out
adc
push
xor
ret
lret
push
fstpl
push
test
leave
aam
mov
dec
xchg
jp
daa
adc
sbb
lea
loopne
fldcw
out
outsl
adc
out
bts
xchg
out
inc
ret
mov
or
lock
cmp
loope
mov
adc
add
loop
pop
in
pop
cmpsb
push
sub
test
mov
insb
andl
out
mov
or
mov
lahf
xchg
or
dec
xor
push
cmc
loope
enter
inc
mov
into
aas
jl
jmp
mov
mov
jae
jnp
push
xor
mov
scas
sbb
sub
in
xor
addl
orb
ficomps
xchg
add
fs
loope
inc
inc
into
je
lret
jne
dec
mov
cwtl
sbb
sub
lds
dec
adc
pop
xor
pop
sub
dec
iret
cmp
insl
mov
shr
andb
xor
scas
cmpl
cwtl
scas
aad
in
rorb
jp
and
mov
and
jp
cwtl
mov
out
lcall
push
rolb
les
push
or
stos
xchg
adc
pusha
or
lret
insl
xchg
inc
sti
sbb
bound
mov
xchg
mov
push
mov
in
aam
imul
adcb
aaa
jle
dec
ficompl
cmp
cmp
or
mov
sbb
mov
loope
addr16
xor
cli
xchg
push
mov
ljmp
or
icebp
ljmp
out
fbld
push
mov
sbb
jecxz
sub
fildl
fmuls
dec
das
into
lods
aas
pop
pusha
aam
push
lcall
negl
xor
pop
adc
cmp
xor
fldcw
scas
rcrl
test
test
sarb
lret
mov
arpl
loop
int3
out
and
movsl
mov
cmpl
cmp
test
popf
notb
out
insl
scas
mov
jbe
xor
pop
stc
xchg
push
inc
mov
std
dec
pop
cmp
lret
xor
and
mov
ja
mov
jae
mov
mov
lret
adc
sub
test
jae
jge
divl
cltd
leave
pop
mov
iret
mov
pushf
gs
data16
push
xor
add
xor
xchg
push
mov
into
pop
push
test
adc
push
xlat
xchg
ljmp
sbb
addr16
adc
loopne
js
je
in
int3
and
inc
cmp
or
sbb
loopne
mov
jae
add
cld
jmp
int3
fsubs
jl
pop
mov
dec
imul
mov
repnz
sub
cmp
xchg
in
mov
adc
stc
in
and
mov
aas
pop
sbb
ss
out
mov
jnp
push
pop
inc
jmp
cmp
push
test
loopne
pop
or
push
or
push
stc
jb
nop
sahf
lock
fs
lock
rcr
sbb
push
or
adc
sub
int3
cli
adc
push
aad
cltd
xor
mov
mov
sub
xchg
fcoml
out
ds
or
ja
mov
mulb
xor
mov
jl
iret
movsl
fbstp
push
test
inc
loope
dec
fdivl
add
gs
pop
dec
sub
leave
mov
add
popf
insl
dec
in
and
negl
mov
enter
sbb
iret
or
rcrl
push
sti
cwtl
fbld
jmp
xor
popf
pushl
out
xchg
add
fxch
ret
adc
jno
sahf
mov
push
call
sbbl
pop
or
rolb
adc
mov
lea
sti
lahf
jg
sub
xchg
mov
mov
cmp
repnz
mov
dec
or
outsl
adc
fst
jmp
pop
xchg
andl
cmp
icebp
sbb
mov
out
xchg
xchg
cwtl
adc
sti
adc
test
test
push
adc
mov
pop
push
pop
lock
test
lea
rclb
jne
mov
dec
jbe
mov
and
push
rorl
mov
mov
pop
or
stc
xchg
xor
xchg
sbb
mov
xchg
mov
push
dec
mov
push
sub
movl
fwait
pop
mov
insl
pop
mov
xchg
cmp
push
jne
decb
test
mov
ret
in
adc
stos
or
scas
inc
lahf
and
incb
dec
dec
sbb
rolb
lock
or
sbb
bnd
stos
mov
mov
dec
cmp
testb
fsubl
jae
rcrl
push
mov
addr16
xor
ds
mov
out
dec
fldcw
or
adc
and
ljmp
and
jnp
mov
pop
ret
stos
notl
stos
in
lret
in
jae
into
push
pop
out
sub
jg
push
imul
sti
out
fsubl
movsl
sbb
push
fnstcw
sub
xor
mov
mov
jl
push
shl
popa
dec
sbb
pop
xchg
ljmp
fnstcw
jecxz
cwtl
cmp
sar
addb
movsl
popa
and
mov
mov
inc
and
and
imul
jne
call
jmp
sub
shrl
paddd
or
jo
inc
or
js
mov
out
cmp
and
call
mov
fistpll
jge
ror
sbb
enter
in
and
jbe
jo
pushf
push
idivl
mov
sbb
sarl
adc
adc
dec
mov
cmp
jle
dec
leave
loopne
bound
repz
icebp
mov
mov
xchg
fisubrl
xor
mov
mov
cmp
int3
pop
xchg
mov
in
incb
stc
cmpsl
push
and
rcrl
pop
sahf
xchg
cmp
lret
lea
pop
pop
or
mov
aam
ja
cmpsb
mov
jmp
aad
dec
rcpps
mov
adc
and
insb
jo
or
lods
orb
movsl
sarb
inc
int3
scas
and
insl
add
les
inc
sbb
in
outsl
clc
and
dec
ljmp
xor
lret
sub
inc
sbb
xor
stc
into
into
inc
push
mov
adc
jbe
fcoms
roll
or
mov
fsubp
mov
sbb
shl
mov
and
jo
sub
stc
cli
inc
jp
adc
mov
test
pop
or
pusha
adc
stos
or
incl
rolb
repz
je
shll
jl
xchg
jecxz
mov
push
fnstsw
sub
mov
adc
and
adc
ja
cmp
popf
sub
lds
aad
js
jns
and
xor
dec
rorl
sbb
mov
out
cmpsb
jo
jmp
clc
inc
enter
pop
mov
pop
adc
imul
jmp
mov
outsl
imull
lods
iret
aaa
fidivrs
mov
mov
repz
fyl2x
xchg
mov
sub
mov
in
adc
bnd
cld
dec
lods
mov
stos
cmpsl
push
add
add
mov
cli
idivb
ss
jns
sub
adc
pushf
sbb
ret
pop
test
dec
rol
imul
notb
jb
sbb
out
aas
loop
inc
fwait
sub
sbb
dec
mov
ret
dec
movsl
add
mov
leave
jg
loopne
sub
sahf
sub
sbbb
aaa
lcall
xor
pop
imul
or
dec
mov
add
insl
rolb
jge
push
and
jnp
mov
push
cmp
sub
cmc
cmc
jecxz
xor
addb
out
cmp
sbb
int3
sub
jno
jp
lods
sub
dec
xor
pop
add
push
cltd
mov
lods
ret
dec
xchg
stos
mov
sbb
fisubs
xchg
push
xchg
in
adcl
ret
jmp
das
push
xchg
and
mov
pop
adc
sbb
dec
add
xchg
cmp
pop
cmp
out
lea
stos
push
daa
mov
inc
out
inc
sub
add
and
lret
pop
and
idivb
or
adc
push
mov
and
mov
ret
dec
xchg
addr16
insl
push
mov
lods
imul
lahf
movsb
sub
or
push
js
mov
negb
in
ds
add
xor
xchg
mov
lcall
and
pop
dec
inc
out
insb
test
mov
and
data16
mov
push
cmp
lds
leave
jb
push
scas
xchg
pusha
mov
call
test
mov
xor
xchg
scas
adcl
jae
repnz
popf
cld
popf
or
addr16
pop
sahf
dec
or
addl
sub
lods
sarb
dec
jo
xchg
jmp
push
pop
mov
scas
ja
adc
mov
sti
or
test
or
mov
sub
mov
mov
mov
ja
dec
cmpsl
sti
sahf
js
push
cmp
call
mov
rorl
and
inc
outsl
inc
and
cmp
bound
pop
mov
cs
aad
outsb
movl
iret
inc
mov
sbb
mov
popf
sahf
sub
inc
icebp
lret
repz
sub
xchg
subb
je
mov
add
into
mov
xchg
js
sarb
mov
inc
roll
push
clc
pop
lods
mov
hlt
cmpsb
cltd
sub
sbb
xor
jmp
inc
xchg
mov
imul
jmp
or
jg
adc
and
fldcw
into
mov
arpl
daa
adc
test
push
jb
mov
cld
fcoml
push
mov
pop
lock
in
aas
das
lahf
lret
shl
xlat
adc
adc
push
ret
in
sbbb
cmp
aad
adc
dec
and
adc
cmpsl
scas
stos
mov
inc
mov
sbb
push
add
pop
sub
inc
std
cmpsb
push
addl
add
stos
cmpsb
adcl
call
sub
das
cmpsb
test
add
mov
push
cmp
mov
test
insb
sub
cmp
lds
jo
int
fisttpll
les
xor
cmpsb
insb
rep
and
mov
dec
jno
push
inc
add
adc
mov
aas
xchg
push
ret
xchg
jns
mov
xchg
and
loope
nop
sub
dec
pop
adc
out
jb
jmp
add
pop
jno
xlat
outsb
adc
or
push
jecxz
int
adc
aas
lret
xor
cwtl
and
and
adcb
xor
dec
mov
dec
test
mov
add
push
lcall
vpmacssdqh
loope
sarb
mov
ss
fcmovb
movl
mov
es
test
fwait
push
pop
sbbl
mov
outsl
mov
or
sbb
in
fidivs
in
push
out
adc
aas
movsl
add
push
pop
lcall
in
pop
mov
jge
and
sbb
hlt
mov
jb
pop
negl
sub
aam
inc
lret
repz
dec
jo
mov
int3
xlat
adc
popa
pop
decl
dec
or
rcll
outsl
movsb
push
pop
movsl
xchg
mov
or
adc
out
pop
push
movsl
or
add
outsl
das
pop
sub
push
sbb
out
jns
das
movsb
sbbb
movsl
add
jae
adc
sub
cmpsb
xchg
mov
jl
shll
jae
mov
xchg
es
outsl
or
or
sahf
pusha
adc
popa
jecxz
ret
mov
inc
stc
pop
enter
aas
adc
mov
and
lods
outsb
push
clc
sbb
ret
cli
inc
sbb
js
popa
cltd
push
insl
scas
push
xlat
ficoms
lods
fnstenv
cmp
mov
sub
jl
nop
lods
scas
jno
test
cmpsb
sti
int3
mov
scas
scas
dec
test
mov
mov
clc
mov
aas
xchg
mov
sub
or
arpl
xor
and
mov
ret
cmp
cli
fiaddl
inc
in
ds
imul
push
dec
mov
and
lahf
arpl
subl
pushf
pop
clc
fsubrl
nop
inc
xchg
cld
sub
mov
inc
mov
or
sbb
out
lods
icebp
pop
in
mov
decb
pop
loopne
fstl
negb
mov
xchg
rorb
test
xor
push
ret
lahf
sub
xchg
jo
test
icebp
aam
jecxz
dec
inc
notl
fdivrs
hlt
ljmp
inc
jo
jae
cmp
int3
jmp
pop
jge
faddl
xor
sub
sub
out
xchg
mov
repz
cli
ja,pn
outsl
sbb
out
jnp
add
push
cmp
inc
push
xchg
insb
data16
jl
push
push
std
in
aad
inc
enter
inc
sub
pop
push
mov
pop
dec
out
adc
push
fucom
dec
cmp
mov
add
out
xor
adc
inc
insb
aas
and
or
outsb
jbe
int3
dec
mov
enter
frstor
out
adc
xchg
sbb
call
movsb
adc
mov
adcb
mov
push
loop
mov
leave
cltd
lret
xchg
pop
jbe
shlb
mov
mov
fildl
or
in
cmpsb
fsubrs
push
pusha
aas
fbstp
mov
inc
mov
or
jg
cmpsl
decl
nop
inc
sbb
push
das
mov
inc
int
fsubs
sbbl
lea
and
mulb
in
popa
rolb
bound
popa
sbb
sbb
rorl
test
insl
xor
xor
mov
repz
xchg
push
notl
gs
mov
inc
sub
testl
mov
and
call
jmp
dec
mov
dec
in
bsr
aaa
lock
adc
jmp
jbe
dec
cmpsl
jmp
push
ret
pop
in
push
and
xor
lret
adc
jmpw
jmp
cmp
sub
leave
repz
sbb
and
into
inc
inc
sub
mov
push
cmp
outsb
mov
mov
clc
mov
std
jg
add
inc
and
push
dec
and
mov
xchg
inc
leave
mov
insl
xchg
outsb
mov
and
pop
sbb
subb
das
pushf
mov
add
pop
jle
inc
or
lods
xorl
sub
sbb
mov
cli
inc
lds
stos
mov
insb
mov
subl
lea
and
xchg
paddw
and
rcl
or
mov
or
lods
cmc
xchg
xlat
sbb
dec
pusha
out
rclb
mov
xchg
pop
push
leave
movsb
rorl
mov
aas
pop
mov
es
pusha
mov
sahf
sub
pop
pusha
outsl
roll
lea
clc
lcall
sbb
pop
lods
fistl
movsb
popf
mov
test
std
dec
sahf
outsb
inc
popa
mov
movsl
xchg
mov
ljmp
sbb
cmp
call
test
sti
mov
xlat
cltd
hlt
add
dec
xchg
mov
stos
jle
push
xor
inc
adc
es
shl
loop
popf
xchg
into
add
mov
adc
lret
inc
adc
jns
ja
jge
inc
pusha
movsb
xchg
sub
insb
jne
cmp
push
cli
inc
imul
jb
push
or
outsl
xor
mov
int
cmpsb
add
js,pn
pop
dec
pop
mov
sahf
dec
sbb
in
sub
ss
add
pop
cltd
cmc
cmp
add
and
jge
cmpsl
jns
adc
mov
lcall
pop
and
fs
loope
hlt
iret
clc
mov
in
pop
cmp
pusha
xorb
scas
adc
and
movsb
ds
adc
fistpll
fs
pop
pop
out
xor
pop
std
dec
jae
sub
out
rorb
mov
mov
xor
xchg
incl
imul
repz
xchg
repnz
sub
lret
cwtl
mov
adcl
ret
cmp
mov
adc
dec
ret
mov
adc
lret
mov
jno
lret
subl
rorb
sub
mov
fcomps
cmp
dec
test
cltd
test
mov
leave
jmp
test
jle
adc
jg
scas
add
sub
jns
cmp
flds
ret
dec
sub
pop
lret
sbb
mov
loope
sub
or
loop
leave
xchg
aaa
lret
sbb
mov
pop
jnp
imull
sbb
stos
fsubp
stos
arpl
in
xchg
scas
mov
test
out
and
lret
rorb
or
in
pushf
add
jnp
push
push
xchg
bound
js
adc
push
xor
ret
insb
dec
fnsave
pop
mov
and
sub
xor
mov
lcall
hlt
out
es
push
cmp
shll
rclb
in
inc
sbb
leave
test
and
popa
sbb
rcrl
cmc
dec
xchg
mov
into
cmc
outsl
cs
jb
and
pop
lcall
or
inc
mov
out
xor
push
inc
fmuls
jns
mov
sti
xchg
adc
cmc
jb
sbb
ds
jnp
cs
leave
psrld
mov
rcll
bound
jno
mov
fs
fwait
out
jns
xchg
cmp
std
imulb
lahf
xor
lret
xchg
adc
std
lds
das
push
lods
dec
fs
lock
mov
fwait
sub
sti
test
mov
pcmpeqw
cmp
ds
mov
sbb
inc
mov
stos
sub
je
xchg
scas
out
addl
setno
pop
fstps
es
lcall
sbb
mov
inc
adc
pop
ret
xchg
cmp
jnp
scas
xchg
enter
cwtl
outsb
lcall
and
adc
fisubl
mov
aam
jge
loop
push
push
aam
lods
dec
lcall
mov
repnz
jne
leave
dec
jp
inc
lock
push
enter
mov
adc
add
cmp
lret
arpl
test
push
in
inc
in
sub
mov
cltd
js
enter
cmp
sub
nop
xorb
push
mov
cwtl
push
gs
inc
data16
fs
daa
loope
into
mov
hlt
in
in
lcall
jns
lock
mov
cmp
lret
jae
scas
lods
ret
pusha
js
xchg
sahf
stos
jl
pop
clc
adc
les
dec
pop
das
add
pushl
mov
sub
mov
sub
lods
roll
cmp
imul
out
leave
in
mov
fimull
stos
pop
sbb
jne
adc
lds
mov
cwtl
pop
sbb
mov
jb
shl
test
mov
lods
lret
xor
pop
fwait
and
cwtl
push
divl
push
push
pop
inc
mov
or
cmp
sub
jae
sbbb
cmpsb
enter
popf
ds
insb
ret
and
or
jne
in
lock
je
mov
notb
sbb
sbb
mov
fwait
mov
mov
dec
jns
dec
jecxz
or
lcall
jae
frstor
shll
imul
rcrb
outsl
push
mov
loop
push
lahf
in
cs
xor
mov
xor
int3
cs
xor
xor
dec
das
lods
fsubl
cmc
daa
scas
scas
jle
xlat
lods
gs
imul
insl
ljmp
in
and
xchg
arpl
xor
rol
rorb
lock
pop
divb
adc
adc
mov
mov
loop
gs
sub
xor
mov
clc
dec
mov
cld
imul
dec
scas
fwait
pusha
dec
xchg
hlt
shlb
jbe
int
lods
jns
jns
xchg
out
das
js
enter
pop
push
ret
jno
aas
jo
xor
shlb
xor
jg
add
cmp
outsl
inc
pop
mov
and
dec
test
push
mov
pop
scas
movsl
cmp
rorl
fstpt
int3
pushf
mov
clc
adc
jg
clc
dec
cmp
fildl
and
or
jnp
leave
add
mov
movsb
loop
or
aad
dec
jno
test
outsb
or
test
loope
dec
adc
cmpb
jb
mov
pusha
pop
mov
fmull
lcall
cli
push
cltd
pop
clc
clc
lods
cltd
lods
inc
mov
cmp
adc
pop
push
mov
mov
jae
inc
push
rclb
and
sbb
popa
push
cmc
dec
lods
xchg
addr16
out
data16
rorl
stc
icebp
inc
jno
stos
aaa
add
pop
out
mov
adcl
data16
xchg
mov
out
and
lds
insl
cmp
push
loop
fsts
out
das
jo
sbb
mov
pop
pop
icebp
call
pop
mov
inc
fdivrs
aas
fs
addr16
sbb
push
pop
mov
mov
pop
cmp
repnz
loopne
aas
dec
inc
in
sbb
sahf
adc
iret
inc
sub
mov
xchg
in
jl
cli
test
pop
cmp
stc
mov
das
xor
arpl
push
sbb
dec
das
lea
or
xchg
movsb
cltd
aaa
xor
push
movsb
mov
or
cmc
lahf
cld
push
cld
lods
div
ficomps
inc
mov
outsl
jno
jg
ret
movsl
inc
mov
cmp
in
and
push
ss
inc
sti
int
and
adc
daa
fidivrl
loope
stos
pop
inc
push
push
mov
popf
xchg
lods
and
imul
or
fdivrs
fidivs
push
sahf
dec
shlb
inc
mov
subb
out
jg
push
inc
xchg
ror
movsl
add
cmp
pop
add
scas
add
pop
in
das
or
hlt
pop
data16
mov
sti
push
into
and
push
xor
pop
lods
mov
xor
mov
sub
mov
mov
mov
cmp
mov
pusha
sub
dec
adc
mov
out
xchg
outsl
es
xor
push
andb
sbb
fmuls
lcall
adc
xorl
cltd
and
lahf
fists
movsl
push
test
push
shlb
xchg
push
imul
rcrb
mov
and
or
mov
push
inc
lods
xchg
lods
fmul
insb
movb
loop
in
pusha
mov
loope
cmpsl
lretw
stos
test
movsl
push
jg
xchg
xor
lcall
mov
inc
lcall
pop
repz
dec
lds
push
aad
call
jae
or
and
cmc
idiv
flds
rcr
mov
xlat
xchg
ficomps
loope
mov
or
push
mov
push
mov
and
test
xchg
and
popa
jl
stos
daa
xorb
test
adc
aad
fsubrs
jbe
cmp
jecxz
add
mov
loopne
adc
lds
das
dec
fldpi
xor
mov
leave
pop
mov
mov
dec
dec
mov
adc
sbb
call
jmp
pop
icebp
mov
or
popa
inc
sbb
cmpb
dec
bound
xchg
mov
das
mov
lret
pop
lahf
dec
ret
jns
fwait
push
in
pop
data16
cmp
inc
push
sub
jp
or
push
lret
sub
mov
fxch
jle
pop
insb
cmp
mov
fdiv
jmp
mov
shrb
xchg
adc
repz
clc
fsubs
ficoml
iret
int3
lock
mov
sub
push
mov
pop
xor
aam
cmc
cmp
imull
andl
aam
fs
mov
mov
pop
pop
decb
adc
clc
mov
sub
sub
or
jne
and
imul
stos
in
xor
dec
cmp
mov
and
inc
cmp
and
stos
inc
mov
push
inc
leave
repnz
rcrl
mov
scas
divl
stc
lock
xchg
ja
sbb
sbb
popl
xor
flds
out
clc
fwait
pop
rcr
iret
negl
push
imull
and
imull
dec
popf
xchg
xchg
stc
sub
lea
xchg
dec
mov
mov
mov
jg
test
jl
sbb
mov
mov
cmpsb
push
popa
mov
aad
inc
loopne
jno
xchg
iret
xchg
clc
pop
xchg
and
aad
cmp
xchg
ret
cmpsb
out
xchg
loope
sarl
pop
add
neg
pop
add
and
testl
out
jmp
inc
xor
gs
cmpsb
jno
mov
add
aam
pop
repnz
push
cmp
lcall
cmp
and
mov
loop
inc
mov
sbb
push
inc
mov
fistpll
mov
sub
jns
cwtl
sub
mov
mov
jo
mov
sti
sbb
inc
add
xchg
mov
cltd
cmp
sub
int3
mov
lcall
mov
cwtl
adc
divb
mov
xchg
pop
pop
inc
jle
out
xchg
mov
xlat
js
out
addl
mov
mov
push
xlat
push
mov
xor
je
mov
ret
fisttpl
arpl
dec
into
fstpl
pop
test
frstor
fisttpl
cld
cmc
dec
lret
mov
aaa
inc
decb
sahf
stos
cs
sbb
ljmp
jge
mov
fiadds
repnz
cld
ret
fdivs
fdivrs
mov
xchg
sbb
inc
sub
sti
dec
sbb
push
imul
gs
inc
sbb
adc
xchg
cli
imul
sar
cli
mov
mov
cmpsb
pop
push
cmpsb
out
mov
lds
loop
cmp
cmp
test
sub
aam
and
jmp
sbb
icebp
inc
in
push
mov
es
lahf
cwtl
aas
scas
xchg
push
cli
xchg
lahf
jnp
clc
loop,pt
mov
inc
mov
shll
or
pop
sbb
xchg
shrb
js
sub
adc
clc
mov
loope
or
mov
mov
int
pop
push
jge
arpl
and
in
sub
mov
mov
inc
xchg
mov
rcll
cmc
xchg
xchg
xor
add
jno
sti
enter
imul
push
testl
adc
int
out
sarl
cwtl
std
fistps
xlat
dec
inc
jmp
jle
and
inc
in
ss
scas
mov
xor
data16
repnz
test
jo
imul
mov
push
test
jnp
xchg
aam
dec
in
mov
out
bound
jno
jp
mov
jg
fwait
dec
add
pusha
and
cld
stos
cmc
adc
pop
lock
movsb
jmp
popa
dec
mov
push
fldt
lds
pop
fdivs
jmp
push
mov
enterw
fisubrs
push
aad
pop
pop
fldenv
mov
clc
and
repz
ror
push
dec
sarb
mov
popa
sub
js
shl
push
pop
xchg
cmp
jle
add
xchg
push
insl
lds
scas
bound
mov
in
xlat
mov
lods
std
ljmp
and
sbb
icebp
repz
or
in
cmp
cmp
cmp
insb
add
adc
jbe
jnp
lahf
pushf
les
mov
movsl
pushl
jo
mov
cmpsl
pushl
repz
pusha
mov
in
or
inc
into
jno
fcmovbe
imul
scas
add
sbb
jg
roll
add
push
xchg
mov
rclb
mov
mov
aam
and
lods
cmpsl
popa
jns
xor
aas
mov
push
cmpsb
jg
mov
or
fsubrl
and
mov
mov
add
pop
pop
mov
scas
lock
jns
shrl
jmp
fdecstp
xchg
aas
dec
push
out
fnsave
out
add
jg
int3
dec
and
mov
xchg
scas
xor
xchg
fisttps
jae
or
das
fisttpll
mov
ds
out
cmpsl
dec
push
push
scas
or
mov
and
adc
mov
clc
add
push
jbe
call
enter
push
sarl
push
dec
test
xor
dec
arpl
movsb
adc
dec
cmp
incb
sbbb
mov
andps
cltd
in
ret
popa
mov
mov
cmp
mov
fdivs
sbb
mov
test
dec
jns
sub
fbstp
lods
fstps
enter
sbb
loopne
lods
fs
ret
mov
lret
test
adc
das
sbb
pop
lret
lea
sti
inc
cmpsb
inc
push
jns
push
test
adc
les
ds
inc
sbb
dec
jge
cmp
std
out
cld
xor
xor
mov
mov
addr16
fisubrl
xor
scas
test
ret
aaa
imul
mov
jecxz
fbld
imull
and
inc
fistpl
in
divb
mov
pop
testl
inc
cmp
stos
or
pop
int
negb
clc
rcll
idivl
shrb
enter
add
shl
stos
mov
cli
adc
out
insl
push
jbe
xchg
inc
sub
push
in
adc
push
outsl
jmp
cli
jns
jle
jle
pushf
sub
hlt
imul
dec
stos
scas
rclb
scas
adc
std
imul
cmp
popf
shll
xor
das
sahf
dec
fdivrl
mov
jne
leave
xchg
jecxz
mov
nop
xchg
sub
test
cmp
sarl
push
std
or
je
es
lret
pusha
fisubrl
jg
lods
les
jecxz
cmpsl
jne
dec
int
out
mov
or
dec
dec
add
cmp
jb
cwtl
xorb
inc
pop
push
leave
int3
cmp
pop
cmp
movsb
ret
lods
xchg
sbb
sbb
sti
aad
mov
je
insb
movsl
inc
push
int
xor
sbb
iret
test
insb
loopne
jnp
sub
adc
orb
insb
dec
push
jnp
inc
ret
jmp
testb
mov
mov
xor
dec
xchg
rorl
or
jp
sti
and
call
and
or
jns
hlt
add
stos
fstpt
aas
xor
jmp
lods
int3
nop
xchg
jp
adc
add
jg
inc
out
fwait
add
jmp
jb
dec
mov
out
mov
insb
out
push
out
or
or
cmp
mov
mov
subl
sarl
xor
sbb
fcomi
jno
mov
pusha
pop
adc
or
fs
pop
pavgw
fucomi
out
call
sbb
xchg
inc
push
cmpsl
ret
jg
ja
add
sti
insb
mov
jle
loopne
test
scas
dec
add
mov
jbe
sbb
in
mov
ret
or
adc
sub
nop
pop
loope
sub
mov
inc
sub
pop
dec
lds
mov
sbb
pushf
dec
iret
lahf
xchg
mov
sub
mov
push
call
addl
or
nop
sub
mov
pop
pop
call
jl
ret
fwait
jnp
jle
loopne
sti
adc
dec
jo
and
push
movsl
lock
cmpsb
call
adc
xchg
dec
dec
bound
pop
inc
or
mov
push
into
pop
cmp
push
fwait
add
outsb
arpl
adc
cmc
lods
leave
imul
in
sbb
and
rclb
adc
sub
mov
cmpsl
mov
into
nop
pushf
jmp
mov
sbb
jp
mov
jp
jl
mov
fildl
fnstenv
add
xor
xor
sar
into
test
out
mov
lahf
xchg
lcall
mov
mov
orb
shrb
or
and
dec
call
dec
fsubs
lret
push
pop
mov
cmp
inc
clc
add
sbb
fstpt
in
mov
xchg
sub
cmp
or
loop
dec
in
mov
jno
mov
and
push
lret
int3
dec
mov
mov
cmp
push
jnp
test
idiv
mov
cwtl
push
cmp
dec
dec
fcoml
sub
xchg
hlt
inc
cmp
xchg
rorb
fildl
mov
and
cmp
ds
cmp
add
in
push
pop
loop
add
in
rcl
cmp
adc
and
mov
rcrb
xor
mov
inc
sbb
imul
mov
sub
push
fistl
test
fidivrs
insl
aaa
stos
out
push
xchg
jg
mov
xchg
and
xlat
arpl
mov
je
push
mov
addl
and
xchg
das
fwait
pusha
mov
dec
fmul
sbb
xchg
cmp
adc
das
pop
mov
sub
das
push
push
insb
sbb
gs
pop
push
add
mov
push
rorl
xor
or
push
stos
mov
mov
sub
sbb
jl
sbb
pushl
mov
jne
movsl
sub
add
add
jne
test
cmp
mov
add
pop
mov
jmp
xchg
fistpl
or
fs
sahf
jae
scas
shlb
ret
and
rolb
rcrl
nop
sbb
das
adc
cli
mov
dec
lods
or
sbb
jno
adc
aad
mov
lds
mov
jns
les
decl
mov
into
sub
push
loopne
sbb
pop
sub
ss
inc
pop
loopne
insl
mov
mov
clc
jb
test
movsb
das
mov
js
testl
fidivs
dec
mov
cltd
cmp
cld
dec
aaa
sub
in
sahf
inc
jnp
in
xor
sub
ret
mov
jb
cltd
xchg
icebp
addr16
leave
lret
test
xorb
fwait
lret
dec
ja
xchg
mov
pop
test
add
cli
inc
shlb
pop
mov
xchg
mov
xchg
repnz
push
int
bound
in
lods
mov
cmp
call
pop
lea
mov
jne
in
in
push
inc
add
cld
movsl
pop
aad
xchg
sub
aad
popf
dec
andb
and
mov
fadd
inc
in
fistpl
ljmp
loop
loopne
sarb
shrb
or
orl
testl
jp
ss
mov
push
mov
rolb
xchg
out
add
jmp
cmp
repnz
sbb
jg
mov
lds
aam
inc
jbe
add
mov
cmp
adc
adc
aad
int3
in
xor
mov
lods
jbe
fwait
dec
std
or
jno
push
adc
pop
sub
int
adc
push
or
jge
jne
lods
mov
je
fwait
bound
cwtl
xchg
mov
pop
or
testl
ss
xor
fwait
jb
insl
test
jl
push
sub
jae
sub
ljmp
xchg
mov
out
sub
push
or
out
push
fcomps
mov
insl
push
or
cmp
scas
int
call
popa
sbb
aad
sbb
call
pop
int3
insb
pop
mov
in
inc
and
mov
shrl
in
mov
lods
push
andl
pop
sub
test
cli
inc
js
jne
and
cwtl
and
mov
mov
mov
sub
cmp
scas
xor
in
stos
ds
sub
gs
les
xchg
shll
scas
pop
push
adc
pop
test
or
mov
jle
je
add
je
scas
repnz
jmp
mov
rorl
push
pop
mov
orl
out
push
leave
fwait
xor
scas
pop
dec
xor
jecxz
adc
loopne
lock
xchg
push
dec
mov
push
or
lcall
dec
insb
pop
lretw
hlt
jne
mov
ficoms
mov
jae
arpl
cli
push
imul
lcall
scas
pop
js
push
push
int3
hlt
cmpsb
shrb
xor
fstl
fcomps
pop
dec
jmp
dec
jnp
xchg
ror
xor
and
jmp
cmp
or
or
push
pop
sub
mov
adc
xchg
xchg
lock
jbe
dec
jg
movsb
mov
xchg
enter
or
shlb
push
data16
imul
int
and
xor
xor
inc
rcrl
adc
sub
movl
sbb
cmc
add
xor
cld
fldt
add
or
push
das
std
mov
xchg
lret
and
fnstcw
fdivr
mov
inc
enter
imul
jle
aam
lea
cmpsb
cmpsb
addr16
jp
repnz
and
add
adc
xchg
adc
pop
addr16
rcl
xlat
dec
push
addl
pop
add
or
pop
dec
push
fwait
in
xchg
sub
xchg
mov
push
push
scas
jecxz
sbb
sub
push
sub
js
jb
adc
sbb
mov
inc
pop
test
mov
or
and
mov
daa
sbb
and
lock
cmc
inc
pop
sub
cwtl
rol
out
or
push
imul
lds
ret
roll
adc
or
and
mov
dec
xorl
push
insb
ret
outsl
in
or
mov
push
mov
test
jp
fidivrl
mov
cmp
js
sbb
mov
xor
rol
outsl
inc
fidivrs
pushf
mov
cwtl
daa
mov
xchg
cld
mov
xchg
mov
pop
add
sarb
sub
popa
jmp
daa
add
je
jns
mov
insl
insl
pop
insb
mov
push
jo
popf
and
pop
or
mov
popl
pop
mov
cmpsb
movsb
xor
mov
jecxz
push
movsb
icebp
inc
pop
cmpl
xchg
jae
add
notl
outsb
adc
fstpl
inc
aaa
jle
cmp
push
inc
jmp
or
lret
mov
sbb
jge
lock
repnz
cmp
pop
in
outsb
mov
push
or
push
lea
outsb
in
cmpsl
and
dec
ss
add
dec
xchg
mov
shl
xchg
pop
fwait
lds
in
clc
add
jo
cmp
xchg
xchg
sbb
inc
xorb
lock
and
cmp
sbb
dec
sbb
scas
rorb
daa
push
outsl
inc
cmpl
push
push
pusha
add
clc
cmpsl
jg
add
rcrl
mov
stc
out
movsb
pop
fsts
and
xchg
add
dec
int3
les
fiadds
jl
pop
or
fistl
inc
or
ss
jne
mov
pop
hlt
sti
dec
mov
mov
dec
push
and
jbe
pop
adc
scas
lds
inc
jmp
add
inc
shlb
adc
and
push
jg
test
rolb
lret
mov
cld
mov
addr16
dec
dec
pop
cltd
cs
cmp
xor
lahf
shl
lahf
inc
dec
pop
xchg
idivl
enter
mov
mov
add
mov
adc
pop
cmpsl
mov
fildll
dec
inc
adc
cltd
jg
push
aam
aaa
dec
bound
lret
sub
cs
cmc
sbb
loopne
mov
cmpsl
movsb
cmpsl
sbb
sbb
cmp
fsubrs
and
shrb
push
arpl
gs
push
mov
cmpsb
fwait
lahf
xchg
push
loopne
mov
testl
and
cs
jno
mov
jge
and
stc
int
inc
or
lods
shl
roll
pop
jb
test
mov
inc
out
cmp
mov
push
repnz
out
xchg
stc
xchg
mov
in
jmp
test
testl
roll
push
lods
xchg
mov
jbe
fbld
shlb
sbb
add
mov
mov
inc
ficoml
sbb
stos
mov
xorb
std
movsb
sub
idivl
pop
jno
mov
jecxz
aad
fucomi
sbb
insl
cmp
adc
lcall
jecxz
inc
in
mov
mov
addr16
addr16
fldt
jp
adc
cs
mov
sbb
lcall
jg
dec
leave
inc
test
sbb
sub
int
or
call
scas
push
ds
sub
sbb
lcall
es
cld
jp
xchg
dec
dec
lea
or
loop
adc
pop
ret
jne
pop
call
pop
add
xchg
sbb
lahf
jg
lcall
or
mov
fadds
pushaw
sub
loopne
sbb
mov
push
inc
add
add
sbb
jbe
lret
sti
in
gs
xchg
ja
xchg
push
fiadds
popa
mov
dec
add
dec
push
push
dec
xchg
jo
or
fs
pop
pop
jo
int
insb
and
test
movsb
dec
mov
movsb
ret
inc
ss
scas
pushf
sbb
aam
add
lea
add
inc
mov
fdivl
sahf
aam
icebp
mov
fcoms
lods
add
jae
xchg
sub
pusha
or
push
subb
xor
mov
addr16
pop
scas
mov
push
subb
xor
icebp
jnp
push
fidivl
pop
or
rclb
movsl
addb
and
lret
dec
ret
or
add
mov
pusha
ret
sahf
or
mov
int3
fwait
int3
fisubl
clc
or
jne
lcall
arpl
imul
gs
xchg
add
sbb
dec
jg
js
sbb
or
jmp
movsb
lods
incl
in
loope
jecxz
push
in
movsb
or
mov
add
sub
mov
pop
pop
and
in
xchg
mov
inc
dec
jp
hlt
fwait
sub
add
cs
mov
add
cs
xlat
push
leave
movsl
jo
or
xchg
pop
xchg
push
ret
test
sub
sti
xchg
mov
sti
movsb
mov
inc
sbb
xorb
jl
mov
add
lcall
lock
xor
lea
sbb
jl
jnp
loopne
push
mov
std
fsubrs
hlt
and
imul
sub
push
sbb
dec
mov
xor
dec
adc
xchg
add
ret
jns
fstl
ljmp
jnp
sbb
xchg
push
xchg
sbb
data16
cmp
cmp
fimuls
push
dec
sbb
pop
nop
mov
hlt
cmp
and
mov
ds
stos
out
jle
in
cmp
fidivrl
pop
out
int
and
or
daa
push
fwait
mov
aam
sbb
lds
leave
inc
int
aas
int
add
pop
sub
mov
inc
cld
cli
call
bound
sbb
int3
cmp
pop
cmpsb
pusha
sahf
jo
punpcklbw
pop
call
push
shlb
push
scas
aad
lcall
lcall
pop
mov
addr16
aas
push
adc
pushf
adc
add
or
movsb
into
pop
jge
movsb
xchg
xchg
pusha
mov
in
aaa
mov
loopne
push
addl
paddsw
fstps
jno
mov
mov
xor
jnp
xlat
mov
aad
inc
cltd
push
sbb
cmp
shrb
shlb
push
out
sub
inc
push
pop
test
std
fcompl
ljmp
mov
lods
sahf
sbb
and
repnz
test
and
movb
divb
dec
cmp
mov
aad
jae
fsubl
xchg
push
jns
mov
adcb
fsubrl
imul
add
inc
xchg
jnp
sub
mov
inc
mov
sarb
cmpsb
push
stos
jno
stc
pushf
and
out
mov
cmp
add
int3
inc
popf
das
scas
xchg
icebp
fistl
jo
lds
jno
insl
in
or
adc
aam
sbb
repz
mov
xchg
cmp
loop
into
loopne
or
fildll
cld
push
movups
int
sbb
mov
orb
cmp
das
push
add
add
shrl
ljmp
in
pop
inc
mov
jns
cmpsb
sbb
aam
inc
xor
pop
in
xlat
jae
rcll
dec
adc
rcrl
subb
adc
aam
call
sub
dec
mov
outsl
jle
xor
pop
hlt
cwtl
cs
and
ljmp
or
sbb
int
push
call
lods
sbb
jne
frstor
scas
adcb
cmpb
pop
mov
imul
pop
cli
into
in
mov
xchg
outsb
scas
add
dec
and
and
gs
pop
jae
xchg
ret
xchg
bound
in
cmpl
inc
fwait
sti
cmp
and
in
cmp
jecxz
xor
repz
sbb
push
testl
xchg
cmp
sbb
nop
fldcw
and
ret
cmp
insl
lret
stos
rcrl
mov
lods
loopne
mov
fildl
mov
sub
das
std
cmp
cs
jae
jae
into
dec
lcall
lahf
pop
lret
mov
adcb
push
int
rcl
ret
mov
push
and
pusha
xchg
stos
xor
lahf
les
ds
jae
gs
mov
and
lahf
add
lahf
iret
push
and
xchg
out
int
sahf
or
lahf
lcall
outsl
push
das
jge
pop
cmpsb
push
sbb
push
cmp
sti
cmpb
or
cmpb
adc
int
mov
mov
cmp
clc
test
pop
sti
cmp
xchg
clc
pusha
test
pop
mov
loope
mov
sbb
repz
ret
sbb
jne
or
mov
push
mov
mov
xchg
es
push
push
xor
adc
mov
xor
test
cmp
mov
test
sub
sub
in
aad
jg
mov
inc
add
xor
push
pop
mov
daa
mov
push
inc
sub
push
inc
jns
pop
add
repnz
sbb
jmp
and
addb
dec
sub
jns
jnp
lcall
or
sahf
bound
push
jp
or
rcr
add
jbe
sahf
nop
sbb
lea
cltd
sbb
lock
xchg
lock
cmp
stos
sbb
mov
inc
xor
xchg
lret
cmp
data16
fisubs
jge
jbe
sbb
xlat
les
insl
adc
bound
add
cli
or
lods
lret
push
rcll
cs
jbe
popf
enter
ficompl
sbb
insl
or
sti
sub
push
and
ja
push
mov
pop
fildll
push
ret
sub
xor
cmp
clc
adc
ret
inc
lea
pop
push
clc
cs
fsts
push
pop
repz
out
mov
mov
out
mov
xchg
and
rclb
pop
cmpsl
lods
rcll
and
hlt
mov
imul
lcall
mov
jecxz
cmp
enter
sub
popa
leave
push
std
mov
cmp
jae
add
cmp
add
mov
clc
shl
xlat
in
inc
inc
cli
call
aad
shll
mov
inc
sahf
clc
add
adc
add
pop
push
lds
xchg
inc
jnp
cmpsb
outsl
int
movsl
mov
adc
inc
cmp
out
cltd
mov
popf
dec
cmp
cmp
and
pop
pop
sub
dec
or
pop
jnp
sub
or
in
je
jmp
xchg
or
jecxz
daa
scas
xchg
add
jo
mov
push
out
movsb
pop
rorb
sbb
inc
sub
ss
popa
jecxz
push
cmp
fucom
mov
inc
movsl
cmp
mov
movsb
mov
insl
not
dec
mov
sub
cmpsl
adc
subb
andb
mov
shlb
jmp
lea
add
fistps
bound
xchg
jmp
mov
or
in
adc
shll
dec
push
mov
or
test
fiaddl
pushf
mov
pop
mov
imul
data16
into
push
dec
mov
xchg
xchg
add
or
in
lgs
ds
fsts
leave
add
movsl
out
jmp
mov
push
or
and
mov
mull
mov
pop
flds
push
cli
push
out
push
sub
aad
out
mov
loop
cmc
sbb
jl
sarl
fxtract
dec
aas
rorl
loopne
outsl
pop
push
test
push
cwtl
cmpsb
jnp,pt
hlt
fisttps
xlat
mov
pushl
mov
and
imul
mov
scas
cmp
push
xchg
mov
fnsave
mov
scas
pop
xor
adc
and
cli
xor
sbb
xor
mov
sub
push
repnz
loop
enter
popa
pop
call
or
ss
enter
or
popa
hlt
lret
leave
aas
sbb
push
mov
jle
pop
mov
aas
sub
xor
mov
adc
ficoml
mov
sbb
xor
outsb
mov
fsts
push
pop
leave
arpl
mov
inc
lock
jp
push
cmp
xor
adc
push
aad
imul
hlt
in
addl
cmp
and
jge
inc
push
push
divl
and
mov
test
scas
cwtl
fiadds
sub
in
into
packuswb
js
dec
cwtl
mov
add
sbb
push
inc
xchg
dec
addb
mov
gs
bound
stos
popf
ja
bound
sbb
fs
mov
xchg
movsb
lret
jne
imul
push
sbb
or
js
loopne
fiaddl
cmpl
pop
enter
das
and
neg
out
pop
or
sub
gs
and
xlat
out
insb
imul
fs
xor
sbb
fisttpll
popa
and
pop
lock
xor
lods
adc
daa
into
push
cmpsb
ja
mov
push
test
repz
push
jnp
out
xchg
jbe
dec
imul
jnp
sub
jmp
mov
clc
mov
bound
pop
and
xchg
xchg
mov
pop
imul
mov
push
outsb
mov
dec
mov
sbb
loop
lods
or
fdivl
dec
mov
sarl
sbb
cld
fstpl
lret
mov
lods
in
add
out
jle
ja
int
test
add
scas
cs
negl
inc
push
dec
data16
cmp
lods
test
loop
push
iret
pop
mov
adc
add
inc
loope
daa
jecxz
int
add
iret
scas
int
mov
scas
xchg
sub
daa
adc
shll
mov
xor
cmc
jno
sti
sbb
scas
movsl
rcrb
pop
cmpsb
lds
mov
cli
insl
xchg
push
ret
aam
bound
pop
arpl
inc
mov
mov
mov
xor
and
das
jecxz
cwtl
push
jle
push
dec
dec
or
xlat
in
incb
xchg
inc
xlat
scas
cmc
sub
pop
int
and
aas
cmpsl
and
jne
ja
pop
adc
outsb
movsl
sub
dec
add
int
sahf
stos
mov
ljmp
jp
dec
stos
dec
or
lods
mov
bound
lret
mov
dec
mov
add
ret
push
jns
lahf
dec
mov
leave
in
pop
sub
xchg
sbb
mov
add
ja
add
out
cltd
xorl
test
sbb
fcomps
in
dec
jp
or
dec
adc
xor
inc
cmp
popf
sub
cli
add
and
cmp
inc
test
int
jb
pop
pop
dec
mov
and
or
pop
pop
pop
in
int
pushl
dec
lahf
pushf
sbb
dec
or
mov
loopne
repnz
pop
movsb
mov
adc
push
call
out
mov
push
xchg
jg
push
std
mov
or
fdivrs
push
jmp
push
in
call
pop
lods
cmp
iret
enter
mov
imul
test
cmp
pop
add
jne
cmp
xchg
or
mov
mov
push
ficoml
add
into
pop
fwait
pop
scas
cwtl
xchg
mov
or
rcll
cs
cmp
insl
in
in
aas
addr16
pop
push
negb
mov
mov
pop
add
popa
out
adc
test
pop
in
jae
out
in
mov
or
pop
sbb
test
add
inc
sbb
mov
cmpsb
jno
lea
cli
mov
or
cmp
insl
insl
cs
inc
sub
bound
jno
mov
xchg
lods
xorb
fwait
push
mov
jae
es
rcrb
into
xchg
xor
pop
sbb
sbb
jnp
rcl
xlat
push
das
dec
xchg
cmp
js
call
adc
jne
push
rorl
sarl
aad
sbb
pop
fstl
xor
movsl
mov
pop
mov
shr
fxch
mov
xlat
sub
mov
xor
ljmp
rcrl
lods
jne
pop
cmp
lret
add
or
ss
sbb
mov
cmp
xchg
ret
sbb
insl
outsl
jb
sub
pop
pop
sbb
in
fistpl
xchg
in
sub
fwait
pop
aam
jecxz
jbe
mov
arpl
iret
and
mov
jmp
addr16
lods
push
aas
xchg
loopne
add
sub
mov
add
jle
inc
inc
jns
popf
lods
movsl
jl
int
mov
xor
dec
insb
sub
jecxz
clc
cld
lods
insb
cmp
lcall
iret
pushf
xor
cmp
push
loope
mov
mov
mov
mov
addb
xlat
xchg
add
ja
mov
inc
scas
out
and
cmp
mov
push
sarl
add
mov
ret
jp
jmp
mov
mov
xchg
pop
repnz
sbb
shlb
shlb
fiadds
hlt
loop
lods
test
ja
jns
or
sub
cmpsl
dec
mov
idivb
cmpsb
xor
ja
ret
push
mov
pop
xor
fiaddl
int
stc
inc
and
push
lret
mov
xchg
mov
test
lahf
sub
or
push
test
repz
jno
jno
aas
mov
lcall
enter
dec
lahf
inc
lea
test
pop
js
push
dec
lret
push
xor
push
push
rclb
dec
loop
sbbl
arpl
aas
or
mov
xchg
scas
pop
lahf
or
cmp
in
ds
movsb
test
in
lods
outsl
inc
and
pop
xor
sub
mov
stos
jne
mov
mov
mov
adc
fldenv
lods
xchg
mov
pusha
fwait
jmp
cwtl
mov
dec
xor
mov
aad
push
not
dec
pop
xor
out
add
add
test
test
xor
dec
in
dec
dec
sahf
aam
les
mov
mov
dec
mov
pop
inc
stos
imul
shrb
cmp
in
mov
jmp
inc
out
clc
sbb
mov
mov
ljmp
pop
sub
pop
mov
lahf
mov
imul
jp
inc
jns
cmpsl
arpl
shlb
jmp
jecxz
cli
pushf
frstor
or
stos
jge
mov
xchg
add
jnp
ds
adc
sbb
aad
lahf
test
fidivrl
arpl
xor
test
xlat
mov
jecxz
movsb
js
int
movsb
push
push
mov
enter
in
daa
out
mov
sarl
adc
and
cmp
in
xor
push
mov
pop
test
lea
movsl
mov
rcl
imul
fistpl
adc
imul
cld
sub
push
xchg
mov
mulb
leave
sub
test
add
mov
add
add
je
aad
insl
int3
scas
fnstsw
cmc
das
push
out
pop
lds
aam
insb
xchg
pusha
jge
test
mov
inc
movsb
jge
inc
mov
outsw
push
negb
in
decb
pop
cli
rcll
dec
shll
mov
in
das
stos
std
outsb
sbb
push
rcll
adc
mov
stos
inc
cmp
das
sub
inc
fnstenv
inc
outsb
sbb
fadd
dec
icebp
movsl
sbb
loop
push
push
lock
push
add
jle
outsb
sub
push
or
xchg
jo
jo
mov
sbb
fildl
ss
xor
fldl
lahf
dec
in
or
mov
cmp
cmpsb
sub
pop
dec
mov
or
outsl
bnd
adc
insl
out
mov
jne
int
push
dec
adc
adc
dec
xor
pop
cmpsb
repnz
aad
and
mov
sub
push
sbb
adc
clc
ja
out
jge
clc
mov
and
gs
and
dec
inc
ret
in
or
mov
std
ficoms
sub
push
pop
mov
mov
and
jmp
test
or
mov
dec
xor
outsb
jno
adc
ret
fimuls
enter
jbe
cmp
idivl
mov
popa
mov
or
lock
add
dec
ret
loopne
sbb
dec
xchg
adc
push
adc
mov
shl
cmp
jb
inc
rcr
mov
mov
pusha
adc
sti
cmp
jo
push
fs
movsl
arpl
in
movsb
jge
push
dec
stos
adcb
ret
mov
jmp
sub
daa
shrl
ljmp
jo
mov
dec
dec
aam
les
cmp
repz
or
daa
cld
or
mov
mov
scas
aas
out
and
subl
or
add
rcll
rol
adc
push
adc
xchg
xchg
in
xchg
in
push
dec
xlat
inc
fldenv
xchg
push
inc
mov
hlt
add
cli
es
cmp
and
ret
jl
xchg
cld
mull
js
pop
mov
sahf
and
sub
imul
inc
inc
adc
ss
jg
les
aaa
add
cmpsb
push
arpl
mov
xchg
and
cmp
xor
rcrl
xchg
mov
insb
out
inc
add
push
addl
xchg
das
imul
sbb
mov
adc
sar
in
in
mov
xchg
xor
int
cmp
jae
testl
and
nop
adc
gs
fdivs
js
push
or
mov
or
jle
fdivs
in
rcrb
les
lahf
mov
cmp
adc
jge
sub
pop
mov
das
loopne
sbb
das
jecxz
movsb
xor
test
std
dec
lds
cli
jb
adc
das
jbe
and
mov
dec
mov
cmp
jb
push
mov
mov
pop
aas
lahf
push
dec
fsts
cmpb
pop
mov
sub
pop
into
popa
outsb
pusha
imul
fidivrs
out
decl
xor
push
ret
rorb
mov
add
inc
inc
pusha
scas
inc
jecxz
enter
jne
out
loop
nop
mov
out
mov
ds
push
sub
sahf
mov
cli
and
dec
faddl
aaa
adc
sub
pushf
fists
popf
add
loopne
repz
stc
xchg
push
arpl
mov
add
outsl
xchg
insl
xor
lds
iret
cwtl
sub
xchg
into
test
pop
in
jmp
cmpsb
daa
mov
mov
sbb
mov
addl
push
test
xchg
lock
aad
out
cmpl
or
fwait
lods
call
add
pop
lea
pop
dec
mov
fs
sbb
popf
les
lods
pop
cs
mov
dec
hlt
or
sub
cmp
arpl
and
lock
int3
push
mov
or
mov
jae
cmp
or
dec
out
inc
aam
shll
or
xchg
sarb
push
mov
js
adc
fnstcw
cltd
arpl
or
mov
lret
dec
jo
aaa
push
dec
fimull
mov
int3
aaa
repnz
lcall
popa
fs
mov
push
sbb
cmpsb
movsb
leave
testb
pop
das
test
cmp
inc
xor
inc
jecxz
xor
popf
imul
ret
xor
fsubp
fcomp
movsl
sbb
push
pop
adc
sbb
sbb
push
xchg
outsb
mov
mov
inc
call
xchg
dec
cmp
mov
jmp
sbb
addb
sbb
dec
mov
test
sbb
xor
arpl
dec
je
enterw
movsl
adc
sbb
cmp
or
testl
and
mov
jno
loop
movsb
adc
push
imul
mov
cmp
popa
dec
mov
xor
stc
mov
shlb
xchg
pusha
add
popa
mov
pushf
cmp
mov
add
mov
inc
mov
pandn
pop
or
orl
cmp
jbe
push
or
mov
das
mov
push
jo
divb
sub
mov
dec
or
rolb
push
imul
mov
cmpsl
and
cmp
js
jb
js
mov
fimuls
popf
jmp
sub
lret
mov
mov
xchg
xchg
mov
or
xchg
ret
or
jae
cmpsb
cmp
cld
sbb
or
aad
data16
sbb
lods
or
shlb
std
in
dec
mov
out
add
pop
lods
xlat
adc
dec
push
sub
ja
sbb
jmp
lds
aam
repz
lea
push
and
sub
pop
sbb
insl
jle
pop
nop
add
insl
xchg
lods
mov
and
and
and
pop
shlb
mov
into
xor
jbe
cmp
fldenv
mov
arpl
jl
fidivl
push
mov
xchg
repnz
adc
pop
lret
push
adc
or
push
das
pusha
sti
enter
jmp
mov
hlt
dec
or
lods
daa
icebp
inc
into
inc
push
stos
shll
cmpsb
and
mov
mov
pop
pop
pop
cmp
inc
stc
test
in
dec
push
inc
mov
xchg
clc
test
out
shll
xchg
dec
aas
mov
rcrl
test
mov
inc
stos
cmp
fstpl
sub
mov
push
aas
mov
rcrl
add
sub
xor
fisttpl
mov
fnstcw
mov
push
push
testb
mov
push
hlt
dec
and
add
and
xchg
sub
mov
jmp
repz
insl
popl
outsb
inc
test
and
aas
out
xor
push
jne
int
gs
in
xchg
push
pop
push
stos
mov
mov
mov
add
arpl
sbb
sbb
into
xchg
std
and
lcall
inc
fs
and
out
jae
add
cmp
adc
notl
fwait
and
sbb
xor
push
pop
or
mov
stc
ds
cmp
or
mov
push
leave
jl
xlat
pop
leave
add
test
jg
lea
pusha
out
jns
push
cmp
jl
or
or
inc
shr
xor
and
hlt
sbb
mov
mov
cmp
dec
into
or
xor
inc
and
pusha
jb
jb
inc
xchg
fdivrs
xor
push
fdivrs
fadds
xchg
mov
mov
jp
xchg
push
or
repnz
bound
xor
push
data16
inc
fmul
push
jge
in
test
xchg
cmpl
mov
xor
in
ficomps
cli
push
ret
xor
aaa
ljmp
sub
inc
xor
lds
xchg
aad
aas
or
ja
jle
push
cwtl
cmc
stos
shlb
push
xor
rclb
adc
mov
or
js
pop
out
add
and
jg
pop
insb
push
push
inc
pop
arpl
movsl
ror
mov
cmp
dec
sbb
mov
mov
cmp
addr16
adcb
fs
inc
inc
inc
push
repnz
push
lahf
xlat
dec
add
and
cmc
jmp
sub
pop
mov
mov
xor
movsl
jg
xor
cmp
push
cmp
inc
rorb
in
cltd
cld
roll
sbb
xorl
es
sahf
fcmovu
lods
xor
sub
or
scas
mov
mov
push
mov
ja
cmp
cs
mov
jbe
repz
movsl
repnz
inc
add
mov
cmp
adc
in
scas
xchg
mov
out
lods
adc
or
xor
lcall
sub
fidivrs
jns
lret
repnz
out
lret
pop
iret
out
incl
test
push
pop
xor
inc
xor
or
out
stos
mov
pop
xchg
movsl
jp
bound
out
rorb
mov
sub
xor
int3
frstor
lods
adc
mov
cmp
leave
das
outsl
add
int
mov
inc
jne
jbe
dec
jmp
hlt
mov
and
jbe
outsl
or
mov
mov
in
jmp
dec
inc
enter
add
or
mov
roll
notl
sub
test
hlt
mov
pop
jecxz
mov
mov
hlt
in
mov
enter
xlat
sbb
inc
lods
or
jp
add
cmp
cmp
jno
inc
cmp
dec
sbb
fwait
or
mov
jmp
adc
sbbl
in
xchg
pop
or
cmp
mov
movsb
inc
imul
mov
inc
mov
mov
and
lods
jo
pop
or
adc
notl
push
add
jle
jbe
lret
popf
jmp
adc
jne
sub
xchg
rcr
arpl
push
pop
or
mov
dec
std
movb
das
mov
cld
cmpsl
jno
mov
fbld
mov
stos
cmp
adc
repz
imul
rcll
test
xchg
test
xorl
and
pop
inc
and
jmp
dec
xchg
in
in
clc
xchg
sbb
jl
cltd
movsb
imul
push
push
xor
fisttpl
cmp
adc
push
loope
rorb
pop
test
lods
dec
lock
ret
js
and
inc
xchg
add
mov
or
int
jp
cmp
cmp
sti
imul
adc
sbb
les
repz
cmp
subb
pop
push
xchg
xor
xchg
jp
pushf
pusha
mov
ret
fisubrs
pusha
cmc
cmc
and
int3
sbb
aaa
lds
fdivs
push
mov
repnz
jae
cltd
xchg
push
iret
xchg
fisubs
xchg
mov
sbb
and
jns
cmp
sbbl
sub
cwtl
pop
adc
mov
subb
gs
lretw
inc
loopne
sub
mov
rorb
mov
xor
jnp
sub
mov
mov
test
mov
xchg
dec
mov
cmp
inc
ljmp
jbe
jl
negl
test
pop
sbb
push
adc
fs
insl
sbb
adc
leave
je
call
lods
cmp
push
inc
pop
xor
loope
popf
and
pop
push
cwtl
pop
jecxz
add
mov
loop
jbe
jns
xchg
cmp
xor
mov
pop
xlat
lret
sub
addb
pop
xchg
int3
fwait
mov
push
jle
lret
xchg
je
mov
xor
mov
add
jg
sti
push
clc
sbb
inc
imul
insl
subl
mov
out
dec
movsl
dec
testl
popf
push
dec
arpl
outsb
je
cwtl
push
mov
mov
and
pop
mov
daa
gs
adc
dec
add
jg
mov
jnp
addl
outsb
notb
push
int
add
xor
sahf
sub
popf
or
inc
rol
into
add
push
cltd
add
cli
add
jne
jecxz
sbb
push
mov
jbe
fs
loopne
fidivrs
mov
enter
stos
pop
add
jl
pop
adc
out
incl
xchg
jecxz
jle
stos
or
lret
repz
mov
dec
pop
cmp
test
leave
jns
repnz
imul
add
sahf
mov
pop
data16
mov
adc
data16
dec
imul
mov
lcall
push
aaa
xchg
ss
push
fiadds
in
xlat
jmp
push
jne
daa
lret
aas
rolb
or
or
and
in
dec
lret
mov
rorb
adc
and
xor
fmuls
xor
sub
cmp
xchg
bound
inc
mov
loopne
cmp
call
push
or
cmpsl
sub
shrl
into
dec
xor
iret
fsub
fstpt
and
push
popa
pop
rolb
jle
cmc
clc
pop
xor
icebp
or
data16
sti
or
loop
push
out
imul
xchg
fdivl
inc
int
cmp
add
testb
in
jle
call
jne
int
or
mov
jmp
push
mov
xor
jae
jno
xchg
loopne
arpl
cmp
les
lret
jnp
add
out
repnz
shll
pop
mov
test
jp
and
ret
lods
stos
adc
in
test
mov
pop
pop
mov
add
scas
cmp
aad
rdpmc
je
in
lret
sub
daa
cmpsl
or
mov
imul
mov
and
mov
insl
and
loopne
or
add
cwtl
ja
sbb
repz
lds
sbb
packssdw
mov
pop
icebp
inc
jg
rcll
rolb
xor
es
lods
inc
jae
not
mov
test
and
dec
mov
xchg
popa
lret
xchg
pop
sbb
out
xor
xor
pusha
hlt
pop
hlt
fists
mov
mov
xor
jns
loop
add
cmp
arpl
pop
xchg
push
adc
push
dec
std
pop
and
xchg
lret
sbb
test
and
jg
xor
push
sbb
das
push
xorl
push
jle
std
sbb
jae
mov
pop
push
mov
jb
imul
push
in
mov
pusha
mov
shll
jnp
test
adc
pause
mov
nop
xchg
hlt
mov
out
push
aam
stos
xchg
in
mov
jns
loopne
sub
inc
ds
jecxz
add
xor
mov
sahf
cmp
ja
or
in
dec
add
pop
add
sbb
int
fs
not
push
sbb
call
xor
sbbb
stos
inc
push
and
or
aaa
and
pusha
dec
push
pop
dec
cmc
test
pop
andb
das
xor
shll
out
mov
cli
xchg
xchg
sbb
outsl
xor
pop
fwait
dec
xchg
into
sbb
add
mov
mov
out
stos
ret
or
lds
sub
pop
icebp
dec
mov
in
lret
dec
fmuls
cmp
sahf
addb
mov
out
leave
push
sub
jb
jbe
add
cmp
fistpll
test
ret
sub
orl
or
xorb
out
cmp
popf
xor
dec
bnd
jae
in
and
sbb
int3
ror
jle
sahf
pop
dec
add
cmpl
inc
std
or
lea
mov
cli
push
add
dec
push
movb
ror
ja
stos
jo
mov
mov
aas
stos
add
notb
rorb
xchg
lahf
and
fsubl
add
incl
mov
xchg
xor
cmpsl
es
mov
loop
pop
cld
call
ljmp
and
or
pop
mov
inc
cmc
and
push
mov
loopne
xorl
xorl
mov
lock
out
jae
fldt
fsts
adc
in
test
jmp
test
dec
out
sbb
pop
iret
or
clc
ret
mulb
push
iret
ss
sub
test
outsb
push
xor
or
mov
sub
out
mov
or
jp
incb
mov
push
mov
or
std
stc
mov
mov
push
mov
mov
fucomip
clc
sub
or
fldcw
sub
pop
mov
repz
xchg
cs
lahf
mov
mov
sahf
jns
dec
or
addr16
xlat
sbb
jb
iret
add
pop
xchg
rolb
lds
fidivs
inc
xor
test
adc
cwtl
and
ds
test
stos
push
push
pop
and
lods
in
dec
inc
nop
jp
sbb
ds
jl
loop
push
js
fidivl
hlt
shll
sbb
inc
jge
push
mov
test
jnp
in
dec
scas
pop
std
inc
xor
xchg
mov
and
cmp
cmc
insb
popa
call
lret
mov
mov
cli
lods
testl
sbb
add
hlt
in
sbb
push
insb
pop
call
jnp
and
loop
pop
loopne
inc
add
stc
mov
je
loope
out
ret
pusha
hlt
xor
cmp
mov
dec
sti
arpl
dec
jne
jnp
andb
mov
fcmovb
cs
outsl
je
lcall
push
aam
inc
pop
adc
fmul
insb
push
icebp
into
movsb
int
jmp
cmp
ud2
out
jb
into
jnp
inc
pushf
loopne
in
mov
jb
and
test
mov
sbb
xchg
push
stos
push
fsubl
test
xchg
inc
add
xchg
xchg
xor
mov
lods
mov
leave
mov
xchg
mov
popa
lcall
aaa
int
imul
lret
in
rorl
repnz
in
sbb
hlt
inc
gs
cmp
sha1nexte
cmpsl
mov
les
in
in
movsl
cmp
out
prefetchwt1
iret
sbb
sbb
insb
imul
cmp
ljmp
js
out
std
fbld
dec
mov
mov
cmc
adc
jbe
sub
repnz
push
loope
cld
cmp
or
sar
adc
sbb
mov
push
pop
xchg
pop
mov
insb
mov
mov
ret
in
data16
sbb
out
aam
data16
dec
ficomps
rcrb
in
lret
jbe
jo
fwait
dec
or
xor
sub
repnz
sbb
shl
mov
cs
call
fucomip
stos
fstpl
xor
fucomip
cltd
mov
loope
pop
push
sarb
sarb
ljmp
stos
mov
imul
cwtl
call
pop
jl
xchg
pop
sbb
rclb
aad
xchg
mov
imulb
rcrl
cmpsl
pop
cmpl
xchg
ljmp
shrl
std
lods
loop
out
mov
jno
and
mov
jno
movsl
mov
jmp
jae
ret
or
insb
inc
stc
adc
lds
cmc
fstpl
popa
cmp
xchg
or
sbb
fwait
int
cwtl
imul
and
jmp
lcall
aas
lods
jl
add
fstpl
jle
add
dec
or
fadd
push
pop
sub
mov
mov
ja
ret
loop
mov
mov
ljmp
insb
ret
pop
fistl
icebp
fldenv
xchg
add
pop
jbe
scas
int3
xchg
sbb
pop
icebp
sti
dec
dec
cld
and
addb
cmp
xchg
xor
leave
mov
fdivrl
adc
cmp
cld
cmp
jg
inc
mov
fisubrl
fdivrs
int3
fidivrl
sarb
sub
inc
sbb
andb
xor
bound
mov
and
cmp
addr16
mov
rcrl
push
popa
fisubl
jl
out
or
cmpl
cmp
push
jmp
iret
xor
fistps
pop
xor
mov
in
add
sbb
hlt
sbb
sub
lahf
xchg
xor
fcompl
jmp
dec
pop
mov
lret
gs
cmpsl
arpl
je
ljmp
das
cmp
adc
pop
fwait
cmc
shl
je
pop
xchg
cmp
out
lods
dec
xchg
ss
sub
stos
lods
andb
mov
mov
jno
loope
lret
or
add
and
std
or
pop
or
insb
sbb
stos
and
push
imul
repnz
inc
rcrl
into
mov
pop
jo
push
add
cli
je
ss
or
arpl
dec
icebp
popa
push
dec
or
adcb
pop
pushf
lods
lods
leave
jne
sbb
loope
pop
sub
test
push
jge
out
inc
xor
sarb
inc
insb
in
push
int
jns
xchg
imul
aas
add
ret
lret
js
pop
push
nop
rclb
cmp
movsl
pop
repnz
lea
loopne
xchg
jb
mov
data16
jb
adc
mov
inc
cli
jnp
fildll
cmp
ljmp
sarl
xchg
aaa
lret
fisubl
inc
les
lea
xchg
xchg
add
loopne
repnz
bound
pop
gs
xchg
lock
mov
or
repnz
push
pop
mov
loope
xor
pop
loope
jmp
dec
rclb
dec
sahf
mov
mov
sbb
sub
pop
pop
leave
jmp
cli
into
and
fstps
lds
pop
clc
outsb
adc
jno
clc
repz
pushf
ss
mov
repz
cmpsl
fwait
shll
pop
mov
or
lcall
or
dec
cmp
ds
jmp
mov
inc
jnp
ja
loopne
vmwrite
jbe
push
aas
insb
in
xchg
jne
cmp
addl
jb
dec
loope
inc
mov
jns
sub
divb
loopne
pop
lock
add
hlt
xor
insl
mov
repnz
cli
jmp
pop
cmc
aaa
inc
mov
pop
repz
fcoms
pushf
add
movsl
shll
inc
cmpl
pop
inc
shlb
bound
imul
mov
pop
jae
ret
testl
mov
fstps
jno
leave
push
mov
std
stc
jmp
stc
mov
mov
adc
ds
ljmp
mov
in
push
out
fwait
xor
popa
pop
les
test
imul
mov
bswap
mov
outsb
stc
mov
mov
clc
data16
mov
sahf
imul
stos
xchg
repz
or
push
data16
xchg
dec
js
pop
rcl
cs
jp
sbb
rcll
test
and
dec
push
stc
mov
dec
out
push
add
jmp
mov
cmc
sbb
mov
arpl
pop
aam
mov
inc
inc
inc
or
lock
cmp
sbb
int
mov
fldt
jge
push
nop
fnstenv
xchg
sub
lock
jo
pop
hlt
call
fldt
insb
in
sbb
bound
dec
test
mov
xorb
cmp
and
pushf
mov
push
push
outsb
push
outsb
xchg
jl
cwtl
or
jb
imul
aam
ret
or
das
xchg
lret
stos
les
push
pop
rorb
lcall
sub
cmp
les
sbb
into
xchg
mov
pop
lcall
insl
sarl
adcl
ds
xchg
or
inc
pusha
sbb
cmp
add
adc
push
pop
test
and
pop
imul
push
push
cld
pop
mov
mov
ds
add
dec
ror
lods
imul
aaa
imul
push
mov
fsubp
jle
pop
push
inc
popf
adcb
repnz
jge
pop
insl
pusha
cld
pop
jnp
add
jnp
push
aas
xchg
lock
sbb
in
jne
in
mov
jecxz
sbb
aaa
inc
jb,pn
loopne
and
sbb
push
repz
lods
outsl
pop
iret
pop
xorl
lods
fsubp
jmp
sti
popa
fisttpll
jg
xchg
notl
dec
pushf
xchg
xor
shll
mov
lret
sub
roll
fbld
fimuls
inc
adc
sbb
adc
loope
push
mov
or
je
push
push
std
nop
out
and
and
popa
ja
sbb
pop
imul
movsb
lock
sub
mov
xchg
or
or
aaa
and
inc
push
pop
sub
mov
shlb
pop
lock
fisubl
push
push
adc
hlt
dec
push
push
inc
xchg
sub
inc
dec
xchg
adc
cmp
idivl
out
sahf
adc
mov
sbb
icebp
fwait
and
pusha
out
mov
leave
imul
inc
mov
lret
sahf
jns
js
and
lret
cmpb
lcall
jl
and
aas
sub
sahf
cmp
jnp
xor
leave
setno
int3
pop
mov
movsb
xor
cmp
sub
movsb
fldt
jnp
mov
stos
mov
add
mov
gs
jle
in
pop
cmp
call
rorb
mov
add
or
outsb
or
popl
cli
mov
inc
iret
outsl
jmp
sbb
loopne
pop
lahf
mov
mov
cli
add
addl
clc
in
in
rcrl
xlat
jae
sub
and
arpl
imul
stos
pop
adcl
nop
add
push
pop
ret
dec
inc
jo
dec
cmpsb
adc
sbb
fisttpl
out
cmpsb
mov
inc
sbb
movsl
data16
sub
pop
mov
cmp
mov
xor
sub
stos
xchg
aaa
or
ss
sub
lods
jno
pop
in
xchg
test
fdiv
mov
out
or
pop
arpl
andl
adc
fwait
test
scas
mov
mov
inc
jae
shll
mov
rcl
ret
es
or
subb
test
iret
ret
inc
adc
jmp
xchg
subb
repnz
lods
icebp
mov
in
push
cmpsb
or
jnp
shll
pop
cmp
clc
mov
push
mov
loopne
fmuls
cmc
call
jecxz
xchg
mov
lret
aaa
push
negl
adc
jecxz
cs
xor
outsb
sub
pop
pop
adc
mov
lods
sub
loopne
movsb
xlat
xor
icebp
dec
hlt
lds
dec
das
into
adc
loopne
repz
mov
xlat
lcall
sub
cltd
nop
fwait
or
push
fdivl
jbe
cmp
hlt
ret
fcmovbe
add
sbbl
and
dec
mov
and
pusha
lcall
dec
dec
cmpsb
pop
push
test
and
jns
mov
aad
arpl
mov
fs
cmp
aad
movsl
sub
xchg
pop
pop
cltd
data16
sub
mov
rsqrtps
repnz
sub
std
sub
ret
andl
mov
push
fisttps
pushf
imul
cmpsb
sub
jmp
and
gs
add
jg
pop
mov
or
push
xchg
outsb
xor
jmp
pop
cwtl
xchg
je
mov
imul
cmp
sbb
adc
mov
outsb
mov
bound
or
enter
sti
nop
call
lods
add
movsb
fildll
sbb
or
xlat
hlt
xchg
and
icebp
int
jl
repnz
lods
stc
call
inc
sub
and
mov
lcall
push
pop
mov
movsl
xor
xchg
repz
dec
imul
gs
xchg
addr16
sub
inc
stc
xchg
test
pop
xor
lods
push
and
lea
or
lret
aas
xor
sub
add
mov
sub
or
xor
add
pop
pop
int
outsl
fistpll
pusha
sbb
or
mov
xchg
bound
lret
stos
sub
xchg
adc
ljmp
mov
push
fiadds
push
inc
aas
das
add
cmp
mov
mov
cmc
lret
test
scas
jmp
push
data16
jns
fdivrs
add
in
and
out
stos
mov
and
jae
xor
iret
stos
fstps
addl
mov
mov
popf
dec
out
inc
dec
push
repnz
mov
cltd
sbb
cmp
pop
out
movb
popa
push
pop
fs
les
push
loop
subb
out
mov
ret
push
andl
pop
xlat
cmpsb
nop
in
incl
pop
cmp
out
pop
loopne
mov
in
pop
fidivrs
push
sbb
hlt
xchg
cs
lret
pop
jbe
addb
shlb
jge
xchg
fsubrl
mov
and
xor
jmp
or
out
testl
js
jb
cmpsl
in
mov
ja
mov
bound
sbb
and
xchg
push
mov
adc
hlt
and
adc
mov
dec
xchg
outsl
lock
cmp
lods
cmp
pop
leave
or
cld
sub
sub
jmp
fnsave
cmp
sub
popf
mov
nop
fcom
pop
cmp
xor
les
sub
jbe
lods
xor
bound
jg
das
shl
loope
ja
add
xchg
outsb
sub
push
testb
dec
out
mov
cmp
in
ret
lods
ss
inc
cmc
push
dec
es
lods
das
shlw
xchg
push
les
decb
daa
mov
cmpsb
les
inc
aad
out
lret
stos
push
pop
push
sub
pop
xchg
imul
sbb
stos
ds
jl
clc
ret
jecxz
add
jo
push
stc
jmp
shll
mov
adc
clc
jle
out
lcall
mov
sti
push
fnsave
inc
mov
jb
roll
fimuls
xchg
cltd
into
aas
aaa
stos
xor
inc
xchg
xor
pop
dec
cwtl
pop
add
push
mov
sbb
cmpsl
sbb
cmp
cmp
mov
mov
adc
repnz
xchg
shll
icebp
pop
movb
sti
sbb
and
outsl
repnz
ret
mov
dec
mov
lcall
dec
popf
les
xchg
push
add
clc
cld
sbb
les
out
sub
or
pop
mov
icebp
push
mov
out
int
stc
fsubl
dec
pop
test
shrl
mov
jae
dec
hlt
sti
cmp
lods
and
out
insb
xor
inc
jle
add
cmp
xorl
dec
mov
jp
pusha
loop
insl
cmpsb
add
dec
out
insl
mov
mov
xchg
out
inc
xchg
pusha
in
xor
push
in
popa
daa
cltd
adc
lock
arpl
into
in
xchg
int
stos
out
lods
das
mov
shld
push
lahf
in
cmp
push
mov
xchg
cltd
lea
mov
add
xlat
xorb
mov
sub
addr16
ds
ret
addr16
inc
pop
cld
jns
cmp
dec
mov
xor
mov
jbe
push
jp
sub
mov
push
xlat
mov
ret
mov
loope
loope
stc
push
mov
xchg
roll
mov
inc
adc
aad
xor
inc
jns
xchg
iret
xchg
call
mov
jmp
xchg
out
sahf
clc
or
out
setle
leave
das
cmp
sbb
arpl
enter
shrl
push
mov
daa
xchg
sub
incb
iret
ljmp
mov
movsl
sbb
int
push
or
orb
jb
hlt
imul
or
push
and
or
jne
push
aam
out
mov
sarl
push
popl
aas
xchg
mov
movsl
jnp
sub
mov
adc
mov
jno
adc
jbe
call
push
subb
jb
sub
int
sbb
sub
sti
sbb
out
sub
mov
out
bnd
cmp
push
sub
in
repz
loope
fists
mov
clc
push
add
dec
aaa
jge
test
div
pushf
push
jb
and
mov
dec
sarb
and
fwait
cli
xor
adc
inc
cmpsb
mov
outsb
scas
sbb
pop
and
adc
fistpl
in
ret
jecxz
pusha
mov
mov
and
into
mov
dec
fwait
add
adc
or
push
adc
iret
xor
pop
jnp
pushf
mov
orl
pop
sub
std
or
outsb
in
scas
das
gs
movsl
out
nop
stos
aas
test
adc
or
loope
mov
dec
inc
jle
sub
dec
fisubrl
dec
es
jmp
cmpsl
and
mov
loope
lcall
hlt
aaa
sub
arpl
sbb
es
sahf
xchg
ja
sbbl
xchg
imul
push
aas
mov
mov
and
in
jmp
inc
insl
mov
in
or
out
jge
xchg
xorb
in
jnp
fdivs
movsl
fisttpl
pop
sub
mov
idivl
pushw
xor
aaa
fstl
insl
pop
mov
xor
arpl
dec
cwtl
and
sbb
test
hlt
mov
pop
pop
daa
lods
or
mov
imul
data16
push
xor
sbb
xchg
adc
lret
in
dec
es
cmp
arpl
sub
rol
shrl
xlat
test
mov
xor
add
out
inc
add
mov
rorl
pop
jmp
pop
mov
int3
xchg
mov
dec
inc
test
bound
notl
js,pn
pop
push
inc
sti
pop
xor
push
sbb
push
test
test
xchg
mov
pop
dec
cmp
and
add
aad
push
fs
push
mov
mov
xchg
repnz
sub
add
mov
sbb
sub
scas
jno
mov
push
scas
popa
aas
test
dec
sub
sbb
ss
js
jns
add
xchg
lret
cwtl
mov
loope
xacquire
test
fimull
insb
mov
lds
jecxz
cmp
xchg
out
pusha
shrl
sti
add
pop
jno,pt
sbb
call
stos
into
add
movl
mov
int
hlt
add
popa
push
dec
pop
fstps
loopne
fsubp
cmp
add
int3
jmp
mov
fcomps
popf
push
push
mov
push
add
stos
lcall
add
push
and
add
inc
or
jae
xor
add
scas
ljmp
stc
popf
shrb
xor
div
mov
cmp
aas
dec
mov
insl
mov
push
sbb
push
fnstcw
jle
scas
lea
ds
sub
add
ret
dec
test
push
jne
icebp
mov
outsb
repnz
in
mov
add
cwtl
subb
test
pop
xor
add
push
cmc
sbb
jne
scas
cmp
xchg
insb
imul
jae
shl
sub
stc
rcr
dec
pop
lods
and
inc
into
dec
gs
and
lcall
pop
cmp
aas
addr16
jne
inc
jge
add
loop
lds
movsb
xor
out
pop
adc
imul
inc
xlat
lea
pop
in
push
and
call
inc
or
mov
stos
pop
xchg
add
mov
xor
cmp
xor
rolb
mov
popa
in
stos
fcmovnu
fs
xchg
jno
daa
xor
jecxz
sahf
mov
ret
sbb
lahf
push
imul
lods
and
sbb
movsl
mov
mov
dec
in
or
aam
sbb
mov
nop
dec
sbb
in
sbb
sarl
dec
jnp
pop
hlt
sub
data16
dec
aaa
sti
shlb
iret
add
xor
mov
fistpll
inc
mov
adc
adc
pop
mov
orl
gs
pop
stos
inc
movsb
mov
arpl
mov
sub
mov
push
push
push
cwtl
add
xor
mov
mov
inc
in
adc
stos
cmp
cs
push
inc
jae
mov
add
bound
je
xchg
in
repz
pushf
scas
repz
push
sub
inc
or
sub
in
dec
or
inc
inc
mov
ret
dec
mov
jmp
mov
xor
mov
imul
mov
loop
lock
sbb
test
mov
mov
dec
or
cltd
insl
sub
xchg
dec
or
jmp
xor
fcmovne
cmp
adc
ffreep
lcall
lret
jbe
push
movsb
pop
sub
sbb
out
sbb
jmp
or
in
sbbb
and
cmp
dec
mov
cli
jl
mov
or
jae
in
sub
adc
mov
xchg
sub
mov
mov
dec
mov
mov
jbe
loop
adc
push
out
sbb
xor
push
and
js
adc
push
cmp
lods
dec
jl
cltd
ss
jo
dec
or
movsl
addr16
daa
enter
sub
rorb
out
inc
jle
scas
add
add
dec
add
inc
repz
cmp
nop
xor
jmp
mov
inc
fwait
out
movsb
pop
test
imul
add
and
mov
test
mov
pushl
inc
sbb
movsl
out
cmp
mov
push
inc
jns
xchg
sub
jo
sub
pop
test
test
pushf
jns
mov
add
bound
and
in
cmpsb
cs
xlat
icebp
and
push
lret
push
mov
jne
push
sub
lods
inc
and
nop
cmp
imul
stos
push
push
aaa
add
or
sub
imulb
xlat
fnstsw
lea
adc
jp
inc
ret
out
imul
fstl
ficomps
and
leave
mov
ja
loop
mov
pop
subb
lock
inc
popf
int3
sub
sti
sbb
lds
jle
scas
cli
test
sarl
mov
cli
ja
ret
push
popa
dec
jmp
push
inc
xlat
jg
lret
mov
int
xor
in
pushf
stos
pop
mov
mov
mov
sbb
xchg
or
stc
mov
inc
adc
sub
dec
inc
mov
jmp
jg
dec
loope
scas
cmp
dec
xor
pusha
pop
cs
mov
movsb
jecxz
sbb
decb
cmp
push
cmp
repnz
inc
jnp
ret
mov
dec
fcoml
adc
jbe
mov
das
add
gs
mov
add
fwait
add
and
in
adc
and
aad
sub
stos
ficomps
add
nop
add
add
dec
loopne
mov
pop
lods
aaa
nop
pop
mov
arpl
jl
mov
jne
std
scas
and
lods
inc
xor
clc
pusha
imul
aaa
adc
jl
xchg
lods
and
sbb
repz
in
push
shrl
xchg
mov
fld
ds
sbbb
cmp
icebp
mov
sti
mov
js
xchg
jle
dec
and
add
sub
xor
dec
jecxz
mov
fistl
fcmovne
xor
aam
inc
aam
lahf
and
cmp
lcall
sub
jo
push
push
inc
cmp
inc
jnp
cmpsb
mov
das
aaa
mov
call
add
lea
daa
fdivrp
lea
add
bound
mov
mov
in
call
movsl
or
pop
cmp
movsl
cli
mov
add
sub
cs
movsl
pop
cwtl
xor
pop
jno
or
addl
stos
sbb
testl
div
fidivrl
in
icebp
outsl
add
xor
or
clc
lock
and
inc
cmpb
add
subb
mov
ret
sub
add
jb
xchg
xchg
fisubrs
icebp
push
mov
pop
aaa
adcb
aad
daa
lods
inc
inc
and
mov
ja
pop
cmp
shlb
jnp
es
inc
sub
adc
cmp
out
dec
add
cmp
xlat
insl
outsb
jge
pop
xor
push
jp
test
scas
sub
test
es
inc
sbb
icebp
and
and
divl
and
xorl
and
fs
ds
push
je
lret
sbb
ss
addl
inc
sub
inc
xlat
out
pop
bound
fstl
mov
nop
loope
out
jns
xchg
jo
xchg
jbe
std
and
mov
dec
aad
loope
pop
lods
pop
inc
fildl
loop
ljmp
jo
stc
lahf
add
repnz
fidivrl
ret
sbb
mov
xchg
sbbb
jnp
pop
inc
cltd
nop
push
pop
stos
xchg
aam
scas
cmp
xor
lret
jnp
inc
dec
xchg
pop
fucomp
xor
inc
adc
cmp
push
loope
test
sbb
es
push
jb
clc
xchg
xchg
push
and
lcall
sub
int3
fwait
movsl
movsb
sbb
push
push
shrb
insb
jns
aad
fdiv
xchg
pushf
sub
je
dec
xchg
or
pop
sbb
pusha
push
mov
test
int
decl
pop
sbb
clc
xor
enter
sar
cmc
rolb
mov
push
and
push
bound
jle
push
out
mov
cmp
dec
movsb
cwtl
or
test
cmpsl
mov
add
xchg
pop
fwait
add
sarb
sbb
out
dec
fs
ss
sub
pop
lret
fsubs
shrb
cwtl
aad
mov
cs
je
jbe
xlat
mov
ljmp
or
jns
sbb
mov
sahf
add
lea
sub
pop
jmp
outsl
cmpsb
mov
shll
lcall
dec
or
stc
mov
int3
or
push
mov
rclb
notb
jne
loopne
or
xor
icebp
insb
lcall
mov
dec
jge
add
ja
outsl
mov
gs
or
sub
fs
xchg
dec
in
xchg
pusha
test
cmp
and
lret
in
loop
stos
lret
aaa
in
stos
mov
inc
cli
push
xchg
or
and
add
jb
xchg
ds
mov
dec
nop
cmp
mov
cmp
push
pop
negb
add
lods
shl
bound
lock
mov
imul
push
cmp
mov
push
and
jo
leave
ljmp
xchg
popa
popl
jle
nop
bound
xor
xor
push
lret
out
jp
adc
lea
and
insb
jb
push
adc
std
cmp
push
daa
in
jecxz
insl
je
test
rol
inc
cli
adc
add
out
sbb
jmp
dec
mov
cmp
addl
fsubp
cld
push
sub
stos
pop
push
lods
sbb
in
jo
jns
add
out
sub
fwait
inc
les
or
dec
ficomps
je
popa
pop
lods
into
test
mov
lcall
scas
shrb
int3
sarb
fstps
cmpsl
lret
xor
addr16
xchg
add
dec
stos
push
jg
push
nop
and
xchg
push
jno
fnstenv
add
sub
je
lcall
cmpsl
cld
push
adc
jo
sti
mov
out
pop
call
out
mov
fsubr
dec
xchg
out
in
leave
test
mov
mov
lods
xchg
out
pop
add
mov
sbb
or
ljmp
push
sub
inc
and
in
pop
cltd
hlt
in
or
rcrl
loope
mov
push
xor
cs
nop
or
sbb
les
hlt
inc
push
dec
xor
sub
pop
sbb
mov
dec
cmp
jmp
sub
popf
xchg
jge
push
dec
mov
rcrl
sub
out
adc
cli
cld
adc
ss
jne
leave
add
das
sub
rorb
sbb
cmp
cmp
push
sub
mov
push
movsl
sbb
in
or
pop
add
add
inc
pop
ljmp
dec
cmpsl
je
mov
push
stos
call
and
mov
inc
inc
out
pop
jb
lds
cmp
jle
cltd
adc
jbe
mov
xchg
test
pop
add
cmpsl
mov
stos
insl
jg
add
mov
jnp
sbb
fsubrl
jns
outsl
outsb
pop
inc
fmuls
std
sub
mov
add
xchg
shrb
outsl
imul
mov
stc
inc
mov
addr16
mov
lcall
les
jg
fdivrl
push
mulb
jb
push
fwait
addr16
or
outsb
xor
movsl
adc
and
negb
rcrb
mov
inc
inc
lea
cmp
sbb
fsts
fwait
mov
fistl
or
dec
and
and
lcall
jbe
mov
push
pop
cmp
jp
inc
pop
sbb
xchg
mov
inc
pop
cmp
mov
std
lcall
dec
aam
mov
xor
cli
fadds
mov
cli
push
sub
fidivrl
xchg
mov
dec
icebp
push
and
jl
add
aas
sub
ret
shlb
call
inc
dec
adc
lea
and
mov
daa
in
enter
icebp
xchg
sub
ffree
popa
int
lock
push
das
mov
or
rorb
cltd
mov
mov
cmpl
sub
pop
mov
leave
mov
adc
mov
dec
test
cmp
in
jmp
out
test
push
ret
mov
es
cli
adc
cs
and
imul
add
mov
jno
nop
fs
cmc
pop
das
xor
and
dec
rcr
mov
lods
inc
mov
in
mov
sahf
jp
mov
in
jb
in
pop
mov
and
jge
outsb
ss
inc
jo
jl
ljmp
int
push
repnz
nop
or
xchg
pop
pop
lds
xchg
out
dec
lods
daa
xor
xor
pop
inc
sbb
inc
sbb
cmp
pop
sub
icebp
mov
jb
mov
pop
xchg
fldt
addr16
mov
push
movsl
jge
mov
scas
mov
inc
adc
add
bound
mov
fisubs
aaa
jnp
scas
clc
sti
xor
xor
ret
jno
pop
push
inc
nop
ret
fwait
jge
cli
dec
inc
lahf
aaa
and
mov
jne
mov
mov
int
pushl
mov
pop
loopne
les
dec
pop
add
mov
mov
and
mov
push
sub
add
or
loopne
ljmp
dec
jmp
push
lods
xchg
inc
dec
ljmp
jb
imul
mov
cld
test
ds
mov
jecxz
pop
rcrl
in
adc
inc
pop
daa
loope
aas
jmp
jae
pop
fisttps
cwtl
jns
push
jl
xchg
data16
lds
enter
and
daa
xlat
outsl
les
std
pop
ret
lods
sub
and
pop
push
iret
outsl
sub
pop
jo
pop
pop
daa
aam
rolb
ljmp
jl
imul
outsl
test
cwtl
or
test
xor
icebp
popa
push
sar
loopne
imul
sub
mov
add
and
adc
fs
loop
insb
aad
and
inc
jne
jp
ljmp
xchg
lock
adc
or
mov
add
mov
sub
add
aas
push
test
or
pop
jno
cmova
fsubs
lahf
iret
or
lret
push
shlb
std
mov
outsb
scas
or
mov
in
add
repnz
jo
and
jno
adcb
test
out
fwait
popf
inc
inc
push
dec
adc
scas
and
hlt
inc
aaa
jle
test
nop
xor
leave
mov
jmp
mov
scas
mov
cltd
nop
dec
jp
pop
cmpb
adc
out
sub
adc
ret
push
cld
dec
and
push
aam
push
notb
inc
in
inc
or
jmp
out
sbb
lcall
xor
inc
mov
mov
jns
xchg
sbb
mov
push
xor
push
or
addr16
int
lcall
jne
push
jp
clc
cltd
inc
mov
and
js
mov
xchg
fldl2e
dec
cmp
popf
mov
dec
aad
adc
testl
mov
sub
decb
jl
jae
ret
test
fsubl
mov
fistpl
jno
push
lret
cmp
out
dec
cmc
pop
dec
fldl2t
pushf
mov
imul
insb
push
pop
lcall
in
mov
cmp
pop
jo
orb
out
adc
jg
cvtpi2ps
mov
ljmp
mov
mov
ror
fnsave
push
sub
into
hlt
or
pop
and
push
testl
aad
mov
mov
push
sub
fdiv
or
cltd
aad
icebp
adc
mov
inc
xchg
xchg
aas
iret
mov
jg
xchg
data16
ja
sbb
pop
mov
jno
add
jb
ss
std
jl
pusha
insb
xlat
aas
ljmp
mov
fwait
dec
dec
dec
dec
sbb
mov
xchg
imul
fucomi
mov
roll
into
jbe
pop
inc
ljmp
mov
xor
inc
popa
adc
addr16
jae
and
in
fsubrs
push
dec
lcall
jle
dec
jno
mov
push
mov
push
aad
sbb
std
gs
jg
sbb
insb
leave
add
jecxz
les
mov
mov
loope
jmp
lea
add
in
scas
aaa
add
repnz
jp
jbe
ficomps
inc
pop
sarb
mov
outsb
cli
lea
lret
jne
loope
or
std
rcrb
rcll
aad
stc
mov
jecxz
sbb
cmpb
xor
cmp
dec
jmp
leave
jne
jge
call
inc
jmp
rcll
jp
rcrb
sub
cmp
outsb
ljmp
jb
xor
pop
hlt
mov
mov
into
push
push
or
mov
or
ja
ret
xor
fwait
decl
jge
lret
in
lret
into
cmp
sub
shll
in
xorl
movsb
fwait
hlt
test
stos
jle
icebp
sar
sbb
insl
sbb
or
fistpl
or
mov
daa
sub
pop
dec
sbbb
dec
stos
add
bound
xchg
mov
in
out
jle
mov
sbb
faddp
pop
lds
pushf
mov
outsl
loope
pop
out
outsb
popa
addr16
cmp
cmp
aas
add
and
cmpsl
add
addr16
cmp
xor
xchg
nop
push
cmp
movsb
hlt
lret
mov
shrl
sub
jecxz
mov
mov
lock
inc
outsb
mov
xchg
sbb
stc
xchg
add
lret
jne
lods
test
sbb
ret
xchg
in
mov
enter
call
cmpsb
or
in
sbb
or
test
xor
cmp
ja
call
nop
and
enter
pusha
dec
cmp
subb
fs
inc
xchg
jle
mov
testb
pusha
imul
cld
push
sub
jb
mov
fisubrl
mov
divl
mov
aas
popf
mov
roll
imul
mov
cli
xlat
dec
lcall
in
es
adc
inc
dec
push
jg
popf
loope
insb
or
jle
and
xor
dec
inc
mov
mov
inc
add
shll
adc
adc
in
clc
or
mov
les
nop
cmp
dec
pop
add
and
in
in
insl
popa
push
cmp
cs
push
pop
sbb
pusha
push
sbb
mov
lods
jmp
sbb
push
add
and
and
mov
test
push
je
xor
aaa
fdivp
sbb
inc
push
xchg
lahf
hlt
stos
dec
adc
xor
cmp
adc
push
jp
filds
fimuls
push
test
dec
aas
push
sub
adc
call
js
ret
and
jg
psubusb
movsl
pop
loop
push
js
or
inc
push
imul
jle
xchg
cmp
cli
ja
adc
add
push
cs
push
adc
popf
fidivrs
std
xlat
mov
mov
jne
cmp
dec
cmp
mov
ja
addr16
int3
inc
jge
pop
mov
or
mov
pop
fwait
mov
into
je
xor
movsl
jne
inc
cmpsl
mov
and
mov
lcall
les
not
cmp
lcall
stc
sub
leave
in
xor
decb
mov
jmp
sbb
popa
mov
lahf
mov
outsl
outsb
lahf
loopne
and
xchg
out
cld
dec
aaa
test
clc
pop
aam
pop
pop
mov
cmpb
mov
cltd
std
fiadds
rorb
sbb
clc
pop
dec
xchg
add
out
dec
inc
cmp
aad
sub
cltd
jb
inc
pop
jp
add
imul
ljmp
inc
sub
xlat
pop
pop
mov
cmp
mov
je
jge
sub
pop
xchg
shll
mov
int3
cmp
in
jg
sub
mov
cmovl
testb
inc
clc
cmp
inc
inc
mov
dec
int3
jge
loopne
xchg
loop
and
sbb
pop
mov
jo
push
xor
jp
movsb
mov
in
jp
adc
pop
fcmovne
insl
mov
xchg
jno
xchg
push
cs
mov
enter
or
xorb
push
outsl
pusha
aas
enter
cwtl
push
outsl
lods
enter
push
xor
inc
ljmp
push
sub
in
out
sbb
xor
push
cmp
ljmp
pushf
mov
mov
pop
int3
pop
lods
xchg
jl
loopne
inc
mov
addr16
push
inc
or
push
jae
pusha
or
mov
data16
push
fbstp
in
adc
xor
rcr
cmpsb
jg
mov
call
in
and
xchg
cmp
mov
rep
clc
das
repz
mov
out
and
cmp
mov
push
or
vmaxps
aam
add
in
sub
pop
and
mov
inc
int
sub
popf
sbb
jns
mov
andb
int3
push
arpl
sahf
sbb
jbe
pop
mov
int3
ss
pop
addr16
outsl
and
push
cli
pusha
xchg
test
iret
push
test
add
outsl
int3
cmpsl
mov
dec
push
mov
add
mov
jne
ja
ljmp
call
aas
push
mov
xchg
add
lcall
cmc
and
imul
cmpl
sub
mov
inc
sarb
bts
bound
popa
adc
mov
mov
adc
xchg
rcrb
xchg
dec
xor
inc
mov
outsb
icebp
pop
and
pop
and
ja
jge
jnp
loop
dec
cmp
dec
movsb
aas
std
lea
xorl
jl
bound
push
outsl
fdivrs
jnp
xchg
mov
je
push
imul
frstor
sbb
es
pop
xor
ffree
adcl
ret
imul
pop
adc
mov
xor
or
repnz
lock
mov
pusha
xor
adc
pushf
insb
xlat
jp
and
xor
mov
lods
and
ds
cmp
xor
jl
add
shl
not
addr16
dec
mov
clc
pop
insl
fsubr
addb
push
in
and
xchg
sbb
or
and
fadd
ret
mov
fnstenv
cmp
cmp
jmp
adc
jns
fisubl
pop
call
fldt
pop
aad
inc
ljmp
out
cs
push
insb
pop
test
lret
ljmp
add
sbb
sub
or
shlb
repz
push
sbb
adc
mov
dec
xor
mov
imul
in
es
repz
fs
pop
mov
pop
dec
loop
fwait
jns
ret
imull
mov
in
jg
pop
mov
adc
mov
enter
push
rcl
adc
lahf
lods
mov
sbb
mov
jge
aaa
xchg
mov
pop
inc
mov
stc
sbb
insb
sarl
xor
mov
xor
mov
dec
jmp
pushaw
xor
lds
inc
mov
in
inc
hlt
nop
cmpsl
cmc
mov
adc
pop
sub
loope
pop
aaa
jnp
das
jl
or
aam
clc
push
pop
inc
fwait
es
jecxz
pop
sbb
mov
out
loop
xchg
rclb
insb
push
lret
gs
int
and
insl
test
mov
pop
scas
lret
and
inc
mov
jecxz
xchg
cs
dec
xchg
or
sti
fs
leave
stos
pop
mov
ljmp
in
adc
cmpsb
cmpb
sub
fs
adcb
mov
je
push
loope
pop
cmp
pop
add
es
imul
mov
into
sub
ljmp
jns
inc
pop
jb
xlat
jle
dec
dec
xchg
push
jecxz
cmp
pop
mov
pushf
leave
jbe
dec
fwait
mov
lret
lahf
test
add
loope
jl
pop
sub
ret
fstpt
or
adc
mov
pop
repnz
mov
fstpt
stos
test
add
push
in
pop
xchg
ljmp
bound
dec
xor
inc
js
mov
dec
les
out
ja
pop
lret
mov
rorl
popf
xchg
fmuls
sub
pop
and
rol
fmuls
xchg
lock
mov
sbb
in
imul
jl
mov
mov
xor
inc
sbb
insb
arpl
cmp
mov
sbb
cltd
in
sub
adc
arpl
adc
or
mov
cmp
popf
cwtl
xor
mov
stc
movsb
push
test
xor
jle
aaa
loope
loope
mov
push
push
movsl
pusha
cmp
dec
ret
gs
xchg
clc
fcomps
jns
inc
adc
out
dec
ret
gs
fisubl
dec
jecxz
mov
inc
sub
cmc
mov
popl
decl
jmp
jg
cmp
xchg
cltd
call
out
push
sub
xchg
or
fwait
inc
xchg
cld
push
jns
adc
repnz
pop
fwait
push
or
and
or
inc
mov
sarb
mov
add
adc
jo
fisttpl
bound
aam
lret
or
dec
ds
jmp
movsb
out
xchg
cmp
insl
mov
mov
jmp
sbb
and
jle
push
ja
xchg
dec
push
daa
push
and
jno
movsb
into
test
cmp
sbb
push
mov
jbe
bound
into
pop
insl
mov
insb
mov
jecxz
push
mov
xor
lods
imul
out
or
lods
lods
jl
or
pop
jecxz
adc
cmp
movsb
ja
or
cmp
and
ret
lgdtl
sub
or
and
and
pop
fstp
and
test
xor
push
and
daa
jg
jl
inc
cltd
dec
outsb
les
outsl
mov
das
jp
in
leave
test
sbb
lret
fistl
stos
adc
adc
int
aaa
stos
adc
mov
inc
repnz
jo
aam
sahf
pusha
test
inc
stc
cmc
je
xlat
stos
or
xor
stos
mov
push
into
add
inc
jmp
fwait
mov
add
sbb
sbb
lods
jmp
aaa
js
add
pop
inc
add
leave
jb
enter
sub
jl
faddl
sbb
ficompl
adc
out
cmc
mov
push
mov
mov
dec
push
int3
int
adc
stos
ja
stos
jno
out
push
out
stc
test
sub
cltd
addr16
cli
negb
in
mov
or
mov
aam
loop
fsub
xor
jp
in
int
aam
test
sahf
and
cmpsl
mov
or
lock
std
shr
sub
jp
sub
int
lods
cmp
sub
mov
pop
movsl
pop
sub
gs
test
ret
and
je
insb
dec
bnd
lahf
xor
insb
popa
fsubs
mov
and
mov
jecxz
ja
pop
pop
xor
inc
lret
nop
sub
shll
shlb
repz
sub
sub
sub
dec
push
mov
cmp
in
shr
out
sbb
test
xchg
inc
aam
dec
shrl
leave
jl
xor
push
push
push
xor
mov
jmp
test
daa
ljmp
sahf
dec
outsb
push
repnz
xchg
iret
mov
ljmp
insl
jb
pop
lds
idiv
cs
clc
outsl
pop
cwtl
or
jl
xor
test
pushf
pop
mov
cltd
or
das
push
or
jmp
add
mov
dec
jae
lahf
mov
cmp
pop
cmpsl
cmpsb
dec
imul
pop
imull
loopne
arpl
lock
adc
loopne
dec
out
aas
and
dec
xchg
push
xor
sub
adc
add
popl
lds
or
adc
loope
jge
lahf
cmc
lcall
movsl
pop
cltd
push
scas
lods
adc
add
jle
mov
dec
mov
dec
in
ja
or
scas
jle
push
jb
lods
adc
out
inc
mov
arpl
xchg
enter
mov
lds
dec
jo
les
pop
aaa
cmp
lds
add
loop
cmp
xchg
shll
mov
movsl
sub
aaa
fstl
lcall
xchg
cmp
das
adc
stos
ret
jge
aam
push
shl
mov
pop
sbb
pop
mov
xor
ficomps
shlb
cld
test
add
xchg
sub
dec
dec
cmp
add
popf
int3
mov
jno
sbb
xchg
addl
incl
mov
cmp
inc
sti
decb
and
xchg
rclb
jecxz
and
sbb
jb
xchg
and
aaa
add
inc
sbb
adc
inc
inc
test
inc
xchg
mov
xchg
add
pop
popf
pop
call
mov
into
pushf
sub
mov
jl
sar
lods
and
out
imull
int3
fildl
ret
into
mov
stos
or
mov
push
ret
inc
leave
jbe
mov
and
xor
xchg
add
int3
dec
inc
push
cmpsl
lods
jnp
lret
sarb
pop
lret
mov
test
push
push
call
lods
nop
in
ficomps
jnp
fsubrl
inc
cmp
loope
push
mov
cmp
dec
dec
and
outsb
fisttpll
push
xchg
mov
ret
mov
inc
xor
test
xor
pop
push
pop
lea
cs
lds
dec
mov
aam
imul
add
shll
xchg
cmp
pop
pop
adc
mov
fldt
mov
notl
inc
mov
inc
insb
sbb
pop
push
sub
clc
xchg
sub
pop
push
mov
dec
sbb
mov
cmp
mov
mov
icebp
orl
iret
dec
lret
clc
push
sub
in
inc
mov
cmc
fstp
inc
push
mov
loopne
int3
daa
mov
push
cmp
adc
and
xchg
xchg
inc
mov
jle
fsubl
or
push
test
mov
bound
jge
lcall
adc
lods
rorl
pop
je
fnstcw
jmp
mov
sbb
and
fidivrl
add
mov
sbb
test
adc
dec
and
and
lcall
and
movsl
add
pop
mov
pop
repz
ljmp
jmp
fldt
xchg
fnstenv
mov
hlt
push
stos
test
xor
orb
mov
sbb
push
cmc
inc
sub
ret
add
rcrl
sahf
lret
and
push
or
sbb
sub
lods
std
cmp
divb
adcl
cwtl
mov
shrl
mov
testl
dec
shrl
gs
ja
jp
dec
test
nopl
pop
enter
rolb
xchg
push
fnstsw
jns
sbb
stos
call
aad
cwtl
mov
pop
xchg
clc
cmpsb
and
lahf
sbb
or
xchg
dec
mov
repz
jecxz
and
into
mov
xor
ja
mov
ret
insl
jbe
addl
loopne
push
fwait
subb
aas
insl
repz
cmc
call
adc
jae
push
xor
and
test
movsl
daa
pop
shrl
adc
popa
or
cld
in
cli
enter
imul
lock
scas
mov
and
xor
mov
fisubs
dec
stos
jp
repnz
data16
dec
inc
mov
dec
sub
sahf
or
mov
in
adc
out
imul
dec
jl
cld
jge
mov
lds
adc
mov
jb
xchg
frstor
gs
fwait
dec
sbb
mov
xor
dec
es
adc
sbb
jl
jmp
and
sub
imul
xchg
adc
dec
or
or
and
cmp
lahf
aam
xchg
jb
jmp
pop
add
lcall
pop
add
clc
fstl
mov
rcrl
pop
xor
cmpsl
xor
pop
dec
mov
nop
rol
inc
arpl
mov
xchg
jl
or
faddl
xchg
dec
arpl
movsb
loop
test
ds
test
mov
xor
neg
xchg
sbb
add
xchg
jns
stc
adc
mov
in
jl
xchg
stos
pop
and
out
xor
lcall
or
popf
ret
cwtl
jno
popf
push
cmp
add
push
jg
test
xchg
aam
push
aas
pop
lret
xchg
or
xchg
ret
push
add
div
add
ror
icebp
sarb
pop
outsl
push
call
rolb
mov
mov
jg
push
call
cmp
push
xchg
mov
xlat
in
add
inc
or
xor
leave
mov
cld
clc
fcompl
es
mov
andb
imul
or
jmp
jae
orl
ss
fwait
outsb
mov
mov
sbb
jnp
cmp
jbe
dec
push
xchg
mov
or
inc
mov
cmp
lret
test
mov
fists
fwait
pop
out
loopne
cwtl
lock
es
stos
cli
stc
xchg
sbb
cmp
lock
dec
cvtpi2ps
cmp
add
ss
mov
jns
adc
test
add
add
cmp
dec
sbb
icebp
leave
adcl
cmc
and
mov
dec
ss
pop
xchg
cmp
inc
inc
pop
sbb
dec
jae
adc
push
push
aas
aaa
or
jge
jl
fcmovnbe
syscall
aam
mov
jmp
data16
and
scas
stc
sub
xchg
push
dec
sbb
sub
roll
xchg
cld
int
add
lods
jbe
dec
mov
jne
dec
jo
sub
repnz
inc
out
outsl
lahf
push
aas
jp
mov
bound
loopne
rcrl
mov
lock
std
push
pop
popa
jl
arpl
sub
sti
test
pushf
movsb
adc
shrl
jle
mov
add
sbb
mov
call
sbb
sbb
mov
int3
dec
adc
cld
imul
cmpsb
std
jl
cli
mov
sahf
push
rcrl
and
lea
inc
outsb
mov
lock
mov
push
jp
jno
or
and
iret
jge
mov
or
push
cmp
sbb
lods
out
ret
cwtl
pop
scas
mov
hlt
repz
mov
inc
jbe
pop
stos
jae
outsl
xor
jno
aam
int
fmull
dec
sub
fidivl
jecxz
or
cmc
ror
and
popf
popa
mov
push
mov
in
test
jg
xor
sbb
and
loopne
cli
push
std
std
mov
and
fisttps
out
icebp
pop
push
mov
sub
push
sti
or
ds
pop
push
lock
stc
adc
jmp
lahf
icebp
adc
dec
or
mov
jmp
and
shlb
mov
aam
add
stc
mov
jbe
push
mov
cs
cltd
daa
ret
xlat
addr16
lcall
xor
popa
in
dec
pop
mov
or
lret
sbb
ljmp
icebp
repnz
fisubrs
push
or
test
mov
cmp
mov
sbb
cwtl
xor
jecxz
mov
mov
add
cs
mov
mov
xlat
mov
call
fcompl
cmp
pusha
jae
pop
pusha
jb
outsl
jg
sti
bnd
sbb
mov
cmp
or
fmuls
fisubrl
sbb
leave
xor
in
addl
js
cs
fwait
cld
dec
jmp
out
mov
and
outsb
fistpll
dec
ss
dec
xchg
mov
jp
popf
push
shrb
ret
mov
xor
cmp
cmp
lret
jecxz
cmp
scas
sub
push
dec
inc
and
xor
push
sbb
dec
xchg
mov
push
pop
add
xchg
mov
icebp
xor
push
mov
mov
in
cli
int3
in
fstps
jmp
add
add
es
lret
push
jo
mov
pop
push
pusha
inc
cld
cmp
int3
sbb
cmp
rolb
add
roll
cmpsb
scas
cmpb
sbb
pop
mov
inc
pop
lds
inc
sub
or
outsb
stc
add
sbb
and
out
add
cmc
lea
xor
push
xor
push
jnp
call
xchg
lods
inc
dec
push
jb
out
add
test
and
push
and
mov
and
inc
adc
loop
aam
adc
dec
int
hlt
dec
test
mov
mov
repnz
insl
popf
vminpd
add
mov
out
les
jmp
test
mov
or
out
mov
xchg
jbe
cmp
sti
cmp
and
into
in
xor
pop
add
fistl
int
xchg
int
es
add
test
test
pushf
xchg
fsubl
or
ljmp
xor
add
mul
fnstcw
ja
nop
jmp
cli
jge
push
mov
mov
jae
cmp
dec
mov
pop
sub
and
add
jns
mov
pop
cltd
xchg
fcmove
ret
iret
push
pop
test
xchg
in
mov
pop
jbe
inc
push
or
cmp
push
adc
xlat
push
insl
lret
xchg
push
dec
subb
sub
xor
lret
add
mov
int
lret
xchg
loop
cwtl
jo
add
ret
mov
das
ret
pop
cmp
cmp
push
push
rolb
rorb
fucomp
out
cmp
mov
jne
in
pop
lds
fadd
lret
in
fwait
adc
in
stc
adc
movsl
cs
xor
lahf
repz
pusha
add
cmp
aas
mov
add
push
push
mov
scas
idivl
ja
and
or
out
insl
testb
insb
and
ljmp
stc
aas
pop
and
das
loope
and
push
inc
sub
inc
aam
addr16
xor
mov
sub
mov
imul
in
push
dec
cmc
test
sub
es
ja
jmp
sub
xchg
in
or
gs
scas
scas
rcrb
clc
and
add
cmpsb
push
dec
ret
sub
in
insl
aad
mov
daa
scas
add
shl
pop
lods
mov
test
call
mov
les
pop
lea
dec
fcom
sbb
mov
enter
mov
push
and
dec
aas
or
adcb
scas
pop
mov
sbb
fwait
pop
xor
add
outsb
push
cmp
fcmovu
sbb
aad
adcb
andl
push
push
jmp
sub
loop
xchg
pop
cmp
repz
xchg
shlb
mov
push
adc
scas
or
inc
jae
mov
push
dec
jae
imul
pusha
test
inc
leave
leave
add
push
mov
push
or
in
or
adc
rcrb
push
cmp
xchg
ja
xchg
fcompl
lods
fisttps
outsl
jo
fldenv
push
out
idivb
xor
inc
mov
int
in
jle
imul
popf
xchg
pushf
inc
and
aam
push
sub
pop
sahf
xor
cmp
in
or
sbb
jle
stos
sub
test
dec
push
mov
mov
add
lock
dec
scas
push
jg
push
faddl
sbb
les
pop
adc
add
repz
addps
sbb
fbstp
cmpsb
sub
jnp
aad
gs
fwait
das
sahf
in
xchg
or
loop
xchg
scas
lahf
icebp
push
lahf
sub
cli
in
cmp
loop
sub
data16
sub
repz
pop
loope
dec
dec
cwtl
rorb
sub
enter
repnz
jle
adc
jne
push
jb
jb
loope
adc
pop
pop
cs
push
inc
dec
sub
dec
shlb
mov
cmp
rcrl
inc
inc
pop
mov
xchg
cmpsb
xchg
xor
popf
lods
movsb
lea
test
es
pop
ret
je
pop
jo
cmp
sub
aaa
mov
inc
sbb
js
xlat
nop
outsl
push
bound
mov
loop
sbb
pop
inc
out
lret
ds
push
jecxz
pop
popa
xchg
repz
add
shlb
xchg
mov
xor
dec
inc
inc
pop
jb
cmp
add
adc
mov
outsb
jge
rcrb
cmpsb
mov
inc
push
movsb
xchg
pusha
outsl
cmpsl
and
mov
xchg
out
lds
push
test
movsb
add
sbb
pop
mov
add
in
psubusb
cmp
pop
and
sbb
repz
sarb
or
mov
sti
inc
and
rcll
xchg
mov
sub
adc
pop
cmp
cmp
adc
imul
fldcw
cmp
lahf
movsl
mov
pushl
xor
insb
xchg
xor
addb
xchg
int
mov
sbb
cld
and
adc
repz
add
push
xchg
adc
in
loopne
jb
pop
rclb
sbb
lds
mov
dec
mov
sbb
or
push
xchg
mov
sub
mov
je
sbb
and
into
popf
xorl
jns
cmp
push
lods
addr16
push
and
pop
xchg
leave
jne
adc
inc
test
jge
shlb
push
nop
adc
adc
and
data16
jecxz
lods
sbb
cmpsl
adc
js
mov
popf
mov
dec
or
mov
and
or
aam
dec
pushf
sbb
sub
frstor
jl
jp
adc
cld
icebp
pop
lcall
mov
lods
sbbl
sbb
sub
push
and
lcall
cli
jae
subl
dec
lret
stos
pop
mov
push
push
lcall
pop
aad
lret
pop
push
xchg
shll
icebp
dec
pop
cmpsl
push
pop
lds
or
add
std
xor
roll
das
mov
fildl
ljmp
mov
fldt
xchg
adc
das
ds
dec
sar
pop
mov
xchg
test
aad
popf
mov
stos
jae
test
jecxz
cli
stos
mov
in
add
pusha
aam
jge
xor
adc
jle
les
pop
xchg
xorb
fbstp
xchg
dec
xchg
lret
sbb
jne
xor
inc
inc
dec
sub
mov
xor
add
lahf
mov
inc
inc
cmp
fnstenv
mov
movsb
addl
push
stos
adc
fbld
push
jge
das
shlb
dec
lahf
dec
mov
or
sub
sahf
sbb
les
and
mov
ja
pop
sub
in
js
and
loop
inc
fists
or
pop
jp
nop
mov
fcoml
addb
cmp
mov
sahf
inc
xlat
adc
pop
and
add
adc
dec
ja
int
fwait
pushf
das
daa
pop
cwtl
push
jae
sti
lcall
cmp
ja
fisubl
adc
pop
add
fcompl
lds
into
jge
jb
stc
sub
insb
mov
xor
cmp
ja
in
jns
imul
add
cwtl
sbb
xchg
pop
lods
add
lock
dec
into
bnd
ret
xchg
jne
adc
fwait
push
enter
fildl
aad
mov
mov
je
push
movl
fsubr
enter
jl
in
mov
aaa
in
jmp
aaa
in
xchg
mov
aam
hlt
icebp
cwtl
jp
lret
mov
iret
jge
jmp
inc
scas
adc
mov
rcl
repnz
sub
mov
cmp
in
outsb
mov
ja
mov
jo
jbe
pop
mov
sbb
fldt
lahf
inc
test
test
xor
sub
mov
pusha
dec
mov
loope
in
mov
pop
mov
out
or
sbb
sub
rorb
cmp
or
or
sbb
mov
std
jle
jl
sbb
fists
xchg
cld
pop
mov
shll
and
inc
int
push
mov
mov
sbb
or
sub
or
bound
test
lahf
scas
dec
test
pop
jmp
cmp
lds
icebp
push
loope
mov
inc
and
sbb
std
pop
adc
xchg
je
outsb
cmp
inc
mov
lret
or
push
mov
enter
aaa
outsb
dec
pop
lsl
loope
push
mov
dec
fsubrp
test
mov
jno
data16
out
mov
cwtl
testb
leave
jno
hlt
jp
mov
clc
js
int3
rcr
dec
add
aas
and
add
pusha
outsb
movsb
pop
and
ds
ret
arpl
add
addr16
adc
repz
mov
cld
dec
fimuls
das
jecxz
out
mov
push
test
or
fxch
aaa
xor
insb
mov
pop
push
mov
mov
push
aas
adc
jle
sbb
loope
push
fdivl
in
mov
mov
inc
sti
imul
inc
out
fstpl
mov
divb
mov
inc
mov
cmp
dec
lcall
lock
jmp
xlat
js
jae
mov
adc
sti
iret
cmp
mov
ret
repnz
sbb
std
adc
cmpl
pop
add
jle
addr16
xchg
pop
inc
jne
sbb
or
push
sub
add
jbe
inc
ja
xchg
dec
push
xchg
cli
sbb
cld
in
cs
sbb
js
aad
aam
or
mov
xor
hlt
xchg
pop
sbb
stos
cmpsb
cwtd
push
std
sbb
lcall
or
dec
fistl
aam
mov
cmp
and
mov
lahf
xchg
arpl
sub
outsb
lea
cmp
loopne
dec
hlt
jae
or
idiv
dec
xor
or
fwait
adc
rorb
into
xor
pop
imul
cmp
shll
pop
mov
loope
nop
sbb
mov
test
clc
lahf
jmp
sub
fdivl
test
sbb
in
adc
cmp
leave
adc
dec
scas
stos
hlt
xor
out
adc
fs
or
xchg
pop
ret
popl
ja
and
pop
xor
adc
mulb
xor
mov
xchg
adc
xor
dec
out
push
dec
push
adc
in
add
in
imul
rcr
subl
inc
sahf
add
jmp
adc
sti
test
mov
cmp
and
mov
jae
xchg
out
jnp
pop
mov
test
or
and
in
fstl
mov
pop
insb
movsb
inc
pop
cmpl
and
ficomps
loopne
sub
jmp
ret
ret
out
imulb
cmp
repnz
or
mov
sbb
and
jnp
mov
mov
inc
in
shr
dec
jb
jbe
jo
jne
repnz
mov
mov
aas
push
aam
dec
imul
pushf
jmp
pop
mov
pop
ja
xchg
push
and
xchg
lret
dec
sub
sub
xchg
cs
out
ret
int3
gs
cmpsl
mov
pusha
vpshufd
push
sub
pushf
ret
cmp
dec
add
bound
inc
push
mov
lock
jp
cmpsb
add
fsub
ja
sub
dec
inc
and
test
sbb
test
out
std
xchg
add
xchg
sbb
xchg
sub
or
jge
mov
sbb
lea
push
rolb
cli
mov
dec
jno
cmp
cmp
mov
insb
out
mov
test
push
repnz
sti
pop
es
mov
insl
pop
sub
or
jecxz
cs
cmpsl
xor
ret
sub
js
xchg
gs
push
pusha
notl
push
cmp
iret
cmpb
movsb
hlt
pop
adc
sbbb
sbb
push
sbb
sbb
jge
or
or
repnz
jle
js
dec
test
sbb
cli
sub
jno
jno
cmp
aaa
cmc
fistpll
inc
test
jns
and
jb
sbb
cld
sbb
data16
push
insl
movsl
in
je
iret
aad
dec
adc
cmp
imul
into
les
in
pop
or
push
pop
mov
mov
xchg
inc
icebp
sbb
jae
data16
add
mov
jo
inc
or
push
mov
add
das
mov
jns
int
hlt
hlt
mov
aam
cmp
lea
lahf
daa
mov
add
in
mov
adc
lds
cmp
gs
xchg
mov
call
xchg
mov
dec
push
and
xchg
scas
test
mov
les
sub
adc
psrad
jmp
push
or
clc
inc
or
mov
fstpt
bound
inc
bound
jnp
or
test
enter
add
pop
sub
imul
cmp
dec
cmpsl
ret
pop
or
ljmp
pop
icebp
lods
fidivs
cmp
pop
out
jge
enter
fcomip
fwait
cltd
incl
mov
inc
inc
outsb
cmpsb
cmpsl
and
jmp
faddl
je
pop
jmp
mov
cmpsb
and
cli
adc
xlat
mov
mov
dec
pop
testb
inc
fs
dec
stc
in
repz
or
sub
movsl
shl
ss
pop
xchg
add
lds
sti
push
loope
mov
in
mov
mov
mov
rclb
int3
pop
roll
cmp
mov
idivl
stos
add
icebp
sub
xchg
mov
push
mov
jne
insb
push
dec
or
pop
inc
dec
in
mov
pop
pusha
mov
addr16
dec
outsl
push
lret
lahf
mov
mov
pop
push
xchg
in
bound
scas
mov
sti
jno
gs
push
ret
dec
sub
pop
daa
out
and
mov
add
add
test
cmp
inc
cltd
andb
setno
shlb
in
ret
fnsave
into
and
inc
shrb
dec
jecxz
int
fnstcw
lahf
lret
in
call
pop
add
iret
and
aas
lds
loop
dec
mov
cmpsl
frstor
nop
clc
stos
shl
cld
jae
insb
cmpsl
mov
fucom
out
hlt
adc
push
mov
xchg
xor
sbb
mov
jno
push
sarl
clc
fimull
lock
stc
lea
and
popa
inc
lahf
fmuls
pop
stc
mov
or
in
and
sub
inc
iret
jae
mov
fwait
gs
imul
mov
xor
inc
sub
sbb
jb
dec
sbb
mov
stos
xchg
or
shl
push
adc
push
jge
mov
cmp
daa
into
mov
mov
push
or
xor
arpl
jne
pop
push
mov
popa
lods
mov
in
mov
inc
jae
insl
popf
mov
icebp
jnp
xorb
test
in
aad
mov
inc
sub
icebp
pop
test
sbb
xor
add
pop
enter
sub
xlat
arpl
mov
lahf
cmp
and
fnstcw
jp
cwtl
xor
subb
testb
mov
xchg
scas
leave
pcmpgtw
rcrb
and
mull
jl
cmp
xchg
xchg
mov
push
mov
xor
outsb
and
jmp
ret
mov
jnp
stc
inc
jp
lahf
cmpl
ret
std
adc
lret
pop
adc
hlt
jae
mov
in
sahf
mov
sub
sbb
ret
ds
inc
out
mov
es
xor
js
add
add
shlb
push
push
dec
push
in
out
movsl
or
imul
je
lahf
inc
fnstsw
lds
dec
mov
fcmovu
and
aam
scas
les
lods
out
mov
lret
mov
fsubp
mov
sbb
xchg
dec
ds
lods
test
insl
insl
imul
mov
push
mov
pop
mov
sub
push
xlat
sbb
imul
into
pop
mov
xchg
jle
jb
mov
pop
xor
inc
int3
cmp
mov
push
add
xor
test
mov
mov
inc
add
aaa
in
pop
out
ds
imul
insb
pop
xor
sub
mov
leave
and
into
popl
jo
icebp
scas
adc
mov
movsl
sub
out
movsb
pop
sub
add
push
and
fisubs
js
jns
cmpl
cmp
push
loop
mov
xorl
dec
insl
pop
mov
subb
fsubrl
imul
fnsave
or
or
and
ss
add
int3
mov
scas
mov
fdivrl
add
das
pop
pop
cli
adc
jl
aaa
and
mov
leave
or
dec
add
cmp
inc
push
out
mov
mov
inc
and
mov
mov
pop
push
scas
sbb
test
mov
jge
mov
insl
aam
out
addr16
icebp
mov
adc
push
nop
test
or
leave
add
push
push
inc
mov
mov
neg
fucomip
cmp
in
fldt
lods
adc
pop
adc
imul
cld
mov
test
sub
and
xchg
xchg
cli
inc
dec
in
xchg
cs
cli
or
inc
pushf
xor
jecxz
cmp
popf
pop
adc
xor
pop
fimull
hlt
jb
adc
ficoml
xor
sahf
inc
test
push
cmp
int
int3
or
jge
cmp
scas
lods
sub
scas
hlt
mov
les
sbb
inc
cmpsl
and
repnz
repz
push
xor
mov
jbe
cli
lahf
cmpsb
ss
jmp
sti
and
and
sub
nop
inc
iret
xchg
in
add
adc
mov
int
jbe
fadds
or
addr16
loope
aaa
xchg
push
int
fnsave
rcrb
popa
cmp
mov
mov
call
fiadds
ss
adc
push
sub
pop
inc
enter
push
pop
dec
inc
cltd
fwait
push
mov
xor
mov
sbb
fldcw
mov
push
sub
aam
outsl
jo
jb
jmp
jbe
add
adc
mov
inc
mov
inc
aad
ret
ss
xchg
pusha
jne
xlat
xchg
test
pop
je
int3
inc
arpl
test
mov
xor
fcmovnbe
mov
addb
subb
inc
dec
sbb
out
andb
push
push
aad
lret
loopne
pushf
je
cltd
sub
ret
loope
arpl
dec
cmc
xor
test
and
out
and
jo
int3
in
push
dec
xchg
sub
jp
xlat
pop
push
test
movsb
mov
jl
mov
inc
xor
push
stc
subb
mov
dec
das
adcl
cwtl
stos
and
cld
add
mov
and
sbb
push
dec
rcr
adc
fsubrl
adc
lahf
cmc
jno
dec
add
sbb
sub
cli
pop
push
xor
andl
push
sub
xor
sbb
gs
mov
and
int
adc
inc
mov
mov
enter
ds
popf
xlat
int
inc
sub
push
sub
cmp
and
test
mov
out
jne
orb
mov
rcrl
push
jne
nop
dec
mov
sub
int3
ljmp
mov
ja
popa
std
pop
outsl
pop
movb
call
and
pop
adc
in
les
mov
mov
decl
fisubl
inc
jae
mov
add
in
pushf
sub
test
pop
cmp
movsl
xor
dec
xor
adc
push
xchg
adc
loopne
mov
pop
mov
lret
pop
jno
push
pop
test
jge
push
test
mov
mov
mov
pop
and
sub
xchg
push
jmp
mov
mov
lea
je
jne
jbe
fidivs
cmp
mov
insb
loop
mov
cmpsb
sti
outsb
sbb
sub
loope
stos
test
mov
push
xchg
popa
mov
push
and
rorb
cmp
nop
push
push
mov
aaa
mov
mov
fcomip
mov
or
xorl
cmp
push
call
out
xchg
stc
sbb
xlat
in
sbb
push
sbb
mov
push
inc
rorb
pop
mov
outsl
mov
mov
ja
rorb
cli
ljmp
xchg
je
xchg
cmpsb
adc
push
lea
or
mov
cmpsl
bnd
xor
inc
popa
cwtl
cmp
fwait
scas
mov
mov
aaa
adc
mov
incb
in
pop
imul
sarb
in
jno
vcmpsd
mov
dec
cmpsb
sbb
add
push
fldenv
imul
inc
imull
in
mov
jmp
cmp
shll
or
mov
xchg
dec
mov
cli
push
into
lea
push
icebp
inc
add
inc
lods
stos
mov
jns
xor
fdivl
js
adc
aam
inc
jbe
cld
pop
and
flds
lret
mov
into
aas
cmpsb
out
fstp
mov
outsb
xor
ret
mov
xchg
idivl
cltd
sarl
imul
out
mov
in
out
or
test
mov
insl
nop
fs
scas
jge
mov
mov
sub
lcall
in
cmp
pop
add
rclb
out
pop
stos
outsl
aaa
sahf
jns
or
lcall
fbld
je
pop
xor
push
or
add
push
cmpsb
and
mov
xchg
movsl
les
mov
rcrb
push
sub
fistpl
mov
pushf
mov
rorb
add
dec
test
mov
and
js
jnp
dec
xor
into
popa
outsb
fmul
gs
rolb
sbb
mov
adc
cmp
jg
testb
cmp
pop
test
push
sbb
daa
or
int
fwait
xchg
fistl
cli
pop
call
cmc
lods
outsb
decb
not
mov
rclb
pop
or
mov
xchg
movsb
fistpl
dec
iret
lea
inc
stc
loop
aad
jl
or
mov
or
fwait
into
add
loop
push
and
sbbb
outsb
cmp
cmpsb
leave
xchg
adc
pop
mov
cmpsb
push
popa
lahf
xor
xor
xchg
mov
mov
xchg
sbb
mov
push
test
sti
arpl
aaa
and
lods
sbb
jo
out
push
push
push
or
nop
adc
fstps
and
dec
test
imul
mov
inc
sbb
aam
cmp
push
mov
push
call
rcl
mov
pushf
ja
fldcw
mov
xchg
pop
sbb
fildll
pop
hlt
and
arpl
stos
jne
mov
shlb
cmp
mov
inc
rcrl
cmpsl
in
inc
call
inc
or
dec
lds
out
cmp
stos
or
cmp
leave
jne
out
ja
xchg
push
nop
shlb
into
mov
cwtl
sbb
and
shrl
xchg
stos
lock
in
or
xchg
xchg
dec
mov
int
sarl
sbb
push
aas
inc
cmc
mov
mov
or
aas
fwait
cmp
pop
sbb
add
jo
inc
xchg
pop
mov
mov
dec
ret
sub
ficoms
movsl
jg
iret
add
enter
pop
xor
loop
pushf
pop
mov
or
dec
test
xchg
mov
inc
rclb
sbb
pop
cmp
mov
pop
mov
pop
scas
popf
icebp
divb
std
pop
aam
loope
push
mov
lods
mov
mov
mov
sbb
add
iretw
sub
mov
mov
data16
loop
hlt
outsl
aam
jecxz
test
xchg
shl
lea
lds
mulb
or
jle,pt
aad
imul
cs
xor
insl
divl
adc
mov
and
cmpsl
mov
in
sub
stc
cwtl
ficompl
daa
dec
jb
push
sub
subb
sub
mov
shrb
push
scas
test
rorw
cmp
jnp
mov
dec
dec
movsl
and
push
addr16
or
stos
repz
pop
int3
jg
push
mov
lea
mov
outsl
ljmp
mov
std
fisttpll
add
dec
xor
insl
adc
xor
cld
pop
sbb
lock
mov
jno
and
arpl
lcall
pop
sub
pop
fs
fmull
lret
pushf
divb
inc
cmpsb
push
mov
out
rcrl
bound
xchg
or
mov
ret
daa
ja
in
and
jmp
mov
mov
mov
pop
out
jl
adc
movsl
and
xchg
mov
xchg
out
push
aaa
pop
sub
add
mov
out
movsl
mov
adc
push
push
mov
xchg
mov
pop
hlt
pushf
jl
jo
xor
mov
xchg
bound
scas
sbb
push
mov
mov
out
pop
fcomp
ljmp
pop
out
pop
mov
sti
repnz
add
out
mov
cmp
xchg
sbb
pop
mov
push
pop
push
jo
jno
out
sbb
aam
stos
push
fiadds
arpl
mov
shlb
into
add
mov
stc
les
fsubs
cmp
and
shlb
or
mov
in
scas
mov
mov
lahf
and
test
sub
lret
fsubs
sub
lcall
jns
adc
inc
icebp
scas
add
mov
adc
push
and
outsb
loopne
inc
insl
sub
jmp
push
inc
and
jno
icebp
es
xchg
in
cmp
orb
or
loopne
inc
inc
inc
xlat
test
xlat
push
icebp
imul
push
adcl
and
fstpl
inc
pop
pop
out
pand
sub
ret
outsb
mov
push
jg
out
sub
outsl
outsl
push
testb
or
jmp
lods
pop
testl
sbb
xchg
or
or
fldenv
mov
loope
das
sub
add
ja
push
cmp
mov
mov
pop
mov
es
in
push
adc
ret
pop
jo
xor
push
ds
xchg
cmp
fdiv
scas
mov
mov
add
fwait
push
pusha
jg
xchg
jmp
inc
lret
dec
sub
cmp
cmpl
mov
adc
loopne
xchg
dec
lret
adc
jb
mov
lret
dec
jbe
push
adc
fs
ret
shrb
sbb
hlt
mov
sub
xor
add
js
xor
add
mov
pop
jp
lods
js
outsb
xlat
xchg
aaa
leave
enter
test
fildll
jp
pop
outsb
js
sbb
dec
dec
push
push
test
dec
cwtl
jmp
and
add
sub
mov
std
stos
scas
mov
sub
outsl
mov
mov
ljmp
repnz
mov
stos
mov
sub
sub
mov
add
xorb
mov
jbe
jmp
mov
xor
in
adc
test
push
push
xor
and
add
jae
cltd
lds
shr
sub
fs
stc
mov
adc
and
aas
cld
mov
sbb
sub
orl
push
add
pop
and
jbe
into
std
mov
out
clc
xor
sbb
sub
ret
cmp
popf
adc
mov
test
lods
ret
in
xlat
or
adc
jnp
pop
sub
and
xchg
inc
js
imul
cwtl
jbe
add
add
decl
aaa
xor
push
push
dec
xchg
pop
orb
andb
aad
push
sbb
add
sub
imul
imul
mov
mov
mov
push
inc
mov
repz
add
mov
or
sub
scas
cmp
and
jp
shlb
cli
decl
gs
icebp
ret
mov
fsub
mov
push
mov
cmp
pusha
ret
movsl
dec
jno
es
mov
iret
ljmp
in
outsb
dec
test
xchg
or
stc
push
cmp
pop
into
inc
jns
ficoms
pushf
dec
subb
or
cmp
pop
out
mov
in
jge
pop
addr16
imulb
shl
out
ret
loope
popa
out
pop
or
shlb
sub
and
cltd
repz
loope
push
mov
fldt
xchg
sahf
daa
lods
or
xor
fnsave
mov
ds
outsl
pop
imul
cmp
push
bound
cmp
and
pop
je
cmp
mov
popf
pop
dec
pop
mul
test
push
sub
mov
cmpsl
lret
xor
les
mov
xor
scas
pop
mov
mov
jl
pop
je
rcrb
xor
jne
add
mov
std
mov
mov
test
jecxz
dec
or
icebp
push
push
jns
insb
fwait
xchg
fsubrs
and
pop
sbb
xor
fidivrl
test
push
rep
xchg
pop
push
add
jae
mov
out
mov
rcll
aad
inc
roll
mov
dec
and
push
mov
dec
or
fbld
movsb
xor
mov
loop
push
and
xchg
lock
mov
pusha
pop
pop
das
inc
cmp
push
sub
cmpsl
lcall
sub
add
inc
pop
lcall
sbb
push
mov
inc
js
pop
or
addr16
cs
icebp
addl
test
sbb
pop
pop
jb
xchg
jle
lahf
int3
xchg
fcom
mov
fcoml
sub
cmp
in
in
and
ficompl
xor
movsl
jg
or
repz
jge
repnz
pop
lret
inc
sbb
ficoms
cli
vhsubpd
lods
testb
adc
xchg
inc
outsl
inc
jns
jno
or
sub
sbb
notl
sub
jne
leave
jmp
mov
push
inc
ljmp
xchg
ds
pop
mov
and
fcmovbe
push
add
xchg
push
dec
jle
loopne
adc
and
mov
inc
js
adc
lea
cmp
ss
cli
lret
add
fdivrl
mov
dec
pop
jp
mov
cmp
push
scas
mov
mov
sbb
xchg
or
and
out
and
inc
mov
dec
lret
fiadds
or
pop
out
inc
dec
outsl
inc
sbb
popa
in
into
sti
xchg
inc
or
aas
push
and
push
fnsave
push
loopne
lcall
andl
jmp
or
inc
push
rcr
in
mov
lea
or
pop
jns
addr16
arpl
dec
cmp
sub
xor
mov
cmp
pusha
jno
cmpsl
jns
cmp
out
jbe
aaa
dec
mov
mov
sub
fidivl
jle
adc
cmc
inc
test
out
orb
jae
xor
mov
adc
ja
rorl
leave
mov
mov
mov
cmc
pop
stc
pop
jg
mov
lret
sbb
mov
fisubrl
inc
int
sarl
mov
add
cmpsl
pop
mov
in
lret
divl
xor
outsl
pop
cltd
aas
loope
xchg
cmp
cmpsl
mov
push
pop
xchg
mov
inc
into
jns
movsl
pop
cli
call
out
popf
or
pop
insb
fwait
add
dec
roll
imul
cmpsb
fsub
mov
xchg
test
pextrw
mov
jnp
push
std
ljmp
clc
ficoml
jnp
pop
pop
jbe
orb
pop
adcl
mov
mov
lods
dec
imul
pop
jbe
daa
and
repz
pop
popa
dec
lcall
cmpsl
test
mov
jns
add
fisubl
adcl
lds
jbe
cli
and
pushf
rolb
or
int3
fcomps
sub
int
es
sbb
push
sidtl
lods
adc
dec
sub
bound
lahf
push
clc
push
cmp
imul
xchg
sbb
mov
or
divl
je
arpl
fcmovbe
dec
rorb
jge
mov
pandn
jne
xchg
ljmp
addl
xor
xor
jp
adc
mov
sbb
inc
fcmovu
sbb
mov
cmp
jb
iret
mov
or
xchg
sti
inc
in
push
sub
icebp
cltd
cmp
test
loopne
je
lret
xor
testb
mov
ljmp
dec
xchg
jb
and
xor
int3
mov
pop
cmc
mov
loopne
rorb
out
dec
icebp
inc
into
sub
in
fdiv
pop
pop
adc
loopne
jae
fsubr
or
mov
and
sbb
sbb
dec
rolb
jnp
and
mov
cwtl
and
adc
call
jbe
inc
jecxz
std
pushf
int3
jb
cmp
ret
pop
loope
nop
iret
pop
sbb
nop
sbb
jl
dec
mov
aaa
xor
dec
fs
movsl
fsubrs
push
imul
fwait
mov
stos
sbb
icebp
ja
sub
popl
lahf
push
rolb
adc
push
inc
outsb
popf
push
mov
fiaddl
sub
andl
adc
and
test
push
into
jp
aas
fnsave
lds
push
add
sub
mov
inc
sub
inc
mov
push
iret
scas
flds
popf
cwtl
pop
movsl
nop
or
inc
mov
mov
mov
pop
add
mov
insb
out
lds
push
pop
mov
enter
subb
adc
ret
jo
push
popa
scas
adc
imul
jno
mov
rorl
add
ss
sbbb
push
jle,pn
repnz
inc
jo
jmp
cs
add
inc
jno
lret
in
xor
out
inc
ss
xchg
push
adc
push
cmpsl
push
movsl
xchg
scas
adc
aad
add
mov
dec
jmp
rcl
inc
xchg
gs
pop
xor
lahf
iret
popa
stc
bound
hlt
inc
lds
fadds
mov
mov
cwtl
adcb
add
jl
push
xchg
daa
sbb
stos
cmp
xor
xchg
lock
hlt
xor
lds
lret
xchg
mov
popf
cs
xor
jae
mov
shll
aaa
mov
or
ja
popa
mov
in
dec
stos
sahf
test
jb
mov
in
popf
jle
scas
xor
aam
imul
xchg
mov
dec
push
out
jp
push
lret
xchg
and
sbb
in
jae
loopew
or
adc
inc
lock
xchg
xor
inc
inc
sbb
jo
jl
movsl
pushf
add
push
fnstenv
sbb
mov
cmpsl
xor
scas
shll
or
mov
push
mov
repnz
icebp
add
stos
adc
jl
and
and
scas
addr16
loopne
adc
and
or
jecxz
push
jne
mov
jl
jle
call
call
add
in
adc
mov
in
insb
inc
imul
dec
mov
fbld
js
test
test
jno
ds
mov
insb
lcall
int
push
adc
jp
fsts
mov
repz
or
subl
pop
imul
popa
fstp
insl
mov
pop
sub
xchg
addb
xor
nop
xchg
movsl
mov
clc
inc
cld
and
mov
stos
mov
xchg
mov
iret
sbb
aas
je
leave
mov
mov
dec
lret
es
or
mov
jno
nop
or
lds
ret
stos
repz
mov
push
orl
fstp
les
daa
xchg
jmp
pop
jo
leave
xchg
addl
xor
test
cmp
arpl
jmp
mov
dec
hlt
mov
or
jno
sbb
jno
outsb
jns
inc
sub
inc
sbb
data16
sbb
pop
jns
push
roll
pop
jb
xchg
cli
mov
push
icebp
popf
pushf
aaa
daa
dec
push
pop
std
dec
jl
push
push
ljmp
mov
jl
outsb
test
rcr
insl
fs
and
insl
cmp
sub
adc
push
push
mov
std
jmp
pop
les
cmp
ret
pusha
dec
js
les
xchg
jp
cmpsl
or
stos
sbb
mov
jmp
xchg
push
xor
mov
cmpsl
xchg
lcall
nop
lods
dec
sti
sub
int3
sub
insl
sbbl
bound
sarb
stc
or
sub
into
sbb
pusha
mov
or
mov
pop
incl
or
fstpl
in
invd
add
xor
shll
and
movsb
lods
sbb
mov
push
icebp
push
xor
inc
jne
xchg
push
lahf
sar
faddl
lock
test
dec
add
lahf
push
bound
jg
mov
into
adc
inc
pop
sub
mov
addr16
jl
push
std
in
jbe
mov
int
sbb
int3
jb
sbb
movsl
dec
adc
push
mov
fsubrp
scas
sub
inc
sbbl
leave
fwait
sar
mov
pop
mov
lock
mov
pop
sub
je
sub
dec
and
cmp
int
or
idivb
mov
pop
xchg
push
mov
pop
inc
xor
adc
scas
jns
mov
xor
loop
dec
push
lahf
jo
mov
cmpsl
in
cmpsb
into
sub
lcall
mov
xor
hlt
in
fsubs
pop
enter
cltd
sub
adc
sub
sub
das
push
xchg
push
sarb
fistpl
leave
mov
fs
inc
inc
mov
push
insb
push
aam
push
test
mov
icebp
jmp
aas
push
cltd
sbb
adc
mov
xor
ret
cmp
shlb
dec
inc
cmp
daa
fnstenv
jecxz
push
inc
jg
scas
jbe
push
xor
xor
push
cltd
out
insb
shlb
xchg
pop
jno
imul
lock
in
push
mov
inc
jae
dec
adc
icebp
pop
divb
or
hlt
add
and
xchg
daa
movsl
jns
xchg
add
lret
adc
push
inc
sbb
gs
pop
cmpsb
sbb
or
add
shr
jno
mov
call
ficomps
jo
push
ret
aaa
xor
pop
mov
repz
mov
jnp
mov
out
in
add
mov
outsb
pop
add
push
rcr
jae
incb
ds
fidivl
int3
cwtl
cmpsl
in
lret
cmpsb
dec
push
adc
push
jp
test
mov
lea
dec
loope
xchg
adc
pop
bnd
cmpsl
imul
mov
aaa
dec
dec
cld
stos
and
sub
sub
cmc
ds
rcrb
test
xlat
jp
push
adc
fimuls
addr16
mov
and
inc
test
mov
xchg
jmp
jle
push
inc
mov
cmp
dec
mov
dec
xor
jmp
dec
out
cmpl
insb
stos
and
test
mov
imul
or
scas
loop
mov
cmpsb
imul
pushf
inc
pop
mov
fadd
out
mov
repz
jecxz
pop
in
xchg
jecxz
or
xchg
scas
enter
ror
loop
dec
xchg
jmp
stos
lahf
mov
lahf
outsb
xchg
aas
out
or
lds
inc
scas
data16
sti
mov
shlb
and
xchg
fsubs
loopne
xor
fistps
xchg
or
sub
jb
mov
lret
push
or
xchg
cmpb
sbb
ret
ficompl
xor
and
cmp
test
cs
iret
push
sub
sub
mov
sub
xchg
jecxz
xor
xor
sbb
jo
push
or
pop
inc
lds
add
jnp
cmpsl
push
ret
jmp
inc
xor
push
dec
cmp
das
jnp
bound
and
mov
push
pop
jl
or
stos
into
repz
xor
inc
xchg
js
int3
pop
mov
jge
es
pusha
adc
fs
cs
mov
jns
mov
push
cld
hlt
idivl
in
jecxz
lods
push
ljmp
ret
js
mov
arpl
xchg
mov
jbe
xchg
fwait
ja
scas
fiadds
push
cs
push
xor
or
sbbl
popa
lcall
out
popa
dec
cli
in
enter
dec
cmpsl
mov
loop
or
outsl
cmp
xchg
xor
and
ret
dec
lea
pop
and
sarb
cli
std
xchg
stos
into
and
enter
sub
adc
mov
add
div
xchg
orb
std
sbb
add
std
ja
mov
sbb
out
rcr
pop
pusha
fucomip
fld
mov
dec
shll
int
push
roll
push
test
rorl
faddp
shlb
jge
sub
femms
rcrl
leave
pop
enter
cmp
loope
repnz
mov
cmp
push
dec
add
into
xor
loope
mov
icebp
outsb
adc
sub
ret
xor
fisubrl
xchg
mov
in
stc
in
xchg
je
sbb
cmc
rcl
mov
and
add
mov
rorl
jg
cld
ret
jb
shll
add
daa
addr16
clc
sub
loope
cmpsb
test
inc
xchg
fsts
and
les
cld
add
lds
and
cmc
mov
decb
push
jg
xorb
mov
nop
jmp
movsl
push
gs
movsb
rcl
out
lcall
adc
sbb
ss
or
popf
push
jno
sub
pop
pop
arpl
sbb
xlat
mov
sbb
cmp
mov
popa
pusha
add
push
mov
rorl
ret
inc
mov
ja
sahf
hlt
daa
mov
ja
pop
clc
in
popf
cmp
mull
inc
sub
jge
imul
mov
cmp
ret
sbb
lahf
ljmp
cs
popa
push
clc
mov
sahf
nop
pop
sarb
nop
stos
notl
scas
sbb
lret
mov
push
aas
lods
lea
adc
addr16
js
or
xchg
nop
shll
jo
into
jbe
push
sub
sti
push
cld
popa
dec
xor
cmp
adc
das
push
leave
ljmp
roll
cmpsl
add
mov
pushf
mov
mov
sub
sahf
repz
xor
lcall
xchg
vpcomuw
fdivrl
xchg
js
jmp
leave
cli
jns
div
mov
rol
insb
call
and
leave
dec
cmp
pop
and
jg
lds
jae
pop
or
imulb
js
mov
mov
mov
xchg
in
sbb
xor
xor
mov
jbe
lret
jecxz
adc
pop
scas
xor
mov
sbb
or
pop
inc
cmp
lods
fs
int3
ds
jae
leave
and
bound
cltd
cmp
lds
pop
subb
std
sti
adc
mov
inc
rolb
ret
jmp
dec
int
cwtl
cmp
push
add
adc
jae
mov
mov
fwait
cli
repz
rcrb
inc
xor
cs
adc
scas
sbb
pusha
cmp
inc
cmp
mov
pop
cmp
dec
push
ss
jns
out
xchg
and
addr16
in
inc
test
push
dec
push
jae
inc
stos
stos
mov
fldt
aad
mov
leave
add
data16
jecxz
dec
sub
leave
insl
out
jle
xchg
aad
pop
push
lahf
sbb
sti
int
les
pusha
outsl
add
cmp
std
inc
cld
fadd
jl
and
and
mov
adc
dec
mov
imul
and
xchg
dec
jnp
fwait
cmc
jno
pop
stc
aaa
clc
jl
mov
in
out
cs
dec
mov
insb
mov
je
sbb
push
testl
fidivrs
and
jp
das
shl
int3
sbb
cltd
pop
sbb
add
mov
sub
jbe
ret
in
pslld
mull
not
push
out
popa
sbb
sbb
pop
dec
int3
into
dec
jb
out
push
clc
es
or
aaa
dec
in
pop
pop
addr16
movsl
push
and
push
dec
sahf
push
jns
div
xor
jmp
sti
pusha
enter
push
fildll
xchg
jbe
dec
adc
movsb
gs
insb
or
or
xchg
ret
les
mov
sti
sub
pop
xchg
inc
test
arpl
sub
push
in
insb
sub
pop
pushf
cmp
subps
or
adc
pop
nop
dec
mov
fwait
push
mov
pop
subps
xorb
out
xor
add
add
fs
add
adc
adc
xlat
insb
xor
adc
fildll
pop
pop
pop
pop
decb
xor
daa
fmull
xchg
fmuls
add
jp
sarb
xlat
fsubrp
lret
sub
cmp
cmp
rclb
das
and
mov
adc
fistpl
xor
cwtl
inc
mov
enter
mov
add
popa
ss
int3
dec
jo
lret
dec
outsl
loop
cltd
jecxz
xlat
fists
inc
cmp
xchg
xchg
jns
push
and
std
mov
add
into
cmp
rolb
fcmovbe
mov
imul
out
bound
and
inc
sbb
mov
mov
sbb
cmpb
adc
push
aam
pop
adc
iret
adc
dec
dec
cld
clc
sarb
push
or
mov
push
insl
push
scas
scas
jge
pop
push
xchg
stos
sti
xor
pusha
push
insb
ret
fdivs
pop
push
mov
push
xor
fcmovne
mov
repnz
daa
pop
push
xchg
and
movsl
cs
out
je
pop
into
sub
sahf
popa
xchg
jge
ret
mov
popf
rclb
fwait
pop
and
cs
mov
mov
outsl
jmp
dec
pushf
mov
mov
add
addr16
cmpsb
movl
hlt
adcl
fists
adc
push
xor
push
fisubrl
jle
aad
adc
test
push
ljmp
sbb
jnp
stos
daa
lods
mov
imul
and
cld
xchg
imul
mov
leave
sbb
cmpsl
leave
sti
jge
and
adc
mov
jmp
push
dec
cmc
rcrb
sbb
fsts
fisubrl
jb
or
in
mov
push
pop
jno
cmp
cmp
inc
inc
mov
ja
fucomip
xchg
sub
cmp
lea
push
or
xor
xor
icebp
sbb
test
ja
insb
sub
mov
pop
dec
push
jp
pop
gs
push
or
mov
push
jbe
mov
cmp
and
sbb
jge
xor
scas
mov
add
push
fnstcw
into
gs
or
xchg
or
xchg
loop
adc
mov
repnz
sbb
pop
inc
ljmp
xlat
in
fbld
imul
in
mov
mov
fbstp
or
hlt
mov
xchg
ljmp
in
xor
mov
sti
cs
gs
enter
je
mov
das
xor
fs
and
xor
pop
repz
adc
pop
rcll
jns
ljmp
mov
lcall
mov
sahf
ds
js
xchg
and
ljmp
rorb
and
add
jnp
dec
mov
hlt
and
int
cmp
push
scas
data16
test
dec
mov
daa
into
xor
jl
gs
setns
lods
into
push
mov
leave
or
jp
push
cld
push
mov
lret
push
pop
jb
sbb
test
out
mov
mov
arpl
call
popa
xor
push
lcall
fldcw
lock
mov
shl
js
fwait
mov
dec
push
loop
push
sahf
add
scas
mov
push
mov
scas
sub
arpl
xchg
sub
mov
aad
test
jg
xchg
mov
jecxz
out
call
pusha
push
add
iret
movsl
frstor
push
cmp
pop
cmp
sub
pop
mov
add
mov
mov
out
jb
hlt
add
cmp
lahf
repnz
xchg
and
std
push
xchg
sbb
inc
mov
push
and
cltd
pop
in
mov
mov
mov
inc
and
mov
push
ret
xchg
cmpsb
and
outsb
out
xchg
fcmovbe
mov
pop
dec
xlat
in
jmp
or
jno
inc
and
subl
xor
out
iret
enter
add
leave
or
pop
data16
sub
xor
and
mov
insb
mov
in
ret
mov
je
dec
mov
adc
xchg
mov
push
sbb
jl
insl
and
fwait
test
or
test
js
nop
inc
in
cmc
into
lret
mov
lock
jg
jns
inc
les
sbb
and
pop
loop
es
mov
ds
pop
fisubl
push
add
mov
adc
inc
push
lods
cmp
push
mov
or
mov
pop
add
hlt
xchg
mov
int
test
sub
cltd
cmpsl
stc
icebp
jge
das
push
fxch
or
adc
xchg
fcoml
adc
in
cmp
mov
xor
add
imul
movsb
jae
jbe
div
scas
sti
rol
ljmp
push
push
push
cld
aam
push
adc
mov
fldt
cltd
and
ljmp
xor
inc
jmp
push
pop
lods
xchg
js
sbb
sub
pop
add
out
sub
sbb
mov
jp
repnz
mov
mov
push
jg
jecxz
dec
pop
pop
scas
mov
and
adc
js
sub
jns
push
sub
subb
imul
dec
pop
decl
mov
jmp
stos
push
mov
fs
sti
xor
inc
test
rcr
sbb
rcrb
fs
mov
jp
cmp
jge
inc
shl
fs
aas
es
push
lock
push
mov
jg
movsl
imul
test
jae
sbb
inc
xchg
mov
jb
pop
adc
mov
test
out
push
dec
mov
rorl
jae
sar
sub
jnp
jl
push
xchg
cmp
nop
test
addr16
xchg
sub
insb
aas
add
add
jecxz
test
ret
jg
jmp
sbb
call
dec
aam
mov
inc
xor
shr
repz
test
mov
pop
adc
mov
or
imul
sub
push
mov
mov
invd
aas
xchg
jmp
test
adc
out
out
push
mov
and
enter
lahf
fcmovne
and
mov
cmp
or
lock
fsub
pop
xchg
push
mov
adc
hlt
xor
jge
popa
pop
movsl
fs
addr16
xchg
sarb
cmc
out
jecxz
push
movsb
lods
mov
fmuls
mov
jns
roll
cmp
xor
iret
adc
ficoms
inc
fwait
xchg
sub
daa
notl
dec
clc
shlb
sar
pop
dec
or
es
or
pop
shrl
mov
movsb
xor
aad
into
dec
mov
in
pop
and
pop
in
jp
rcll
mov
loope
xchg
mov
stos
ljmp
test
mov
xchg
sub
mov
lods
shl
mov
add
xlat
or
sub
xchg
mov
push
cmpsl
sbb
in
xchg
lret
sub
pop
jl
mov
test
je
lods
xchg
jge
sbb
scas
test
ret
repnz
mov
movsb
cwtl
push
call
sarb
aaa
or
and
imul
fdivl
sbb
jge
xchg
mov
xor
pop
add
test
xor
and
push
fstps
mov
and
imul
inc
clc
test
mov
shlb
inc
or
adc
cmp
sbb
test
mov
or
mov
pop
je
mov
mov
jge
dec
add
or
rcl
jnp
and
iret
sbb
pop
fdivs
fbld
lds
cmp
add
inc
mov
cmp
xor
adc
adcb
push
adc
xchg
mov
dec
mov
in
cs
sub
repnz
and
cltd
sbb
xchg
mov
xor
xor
lahf
imul
pop
pop
mov
mov
jae
flds
test
and
out
sub
jns
shlb
das
es
cmp
or
adc
out
fisubs
mov
xchg
rcrl
ja
pop
cmp
or
xor
inc
int3
xchg
int
inc
popf
pop
popf
adc
sarb
lret
mov
aam
dec
mov
push
fnstsw
repnz
sub
mov
dec
in
lods
popf
mov
push
sbb
or
cmp
sbb
cmpsl
sbb
push
xlat
xchg
mov
aad
lret
add
pusha
xchg
movsb
lods
or
bound
test
lahf
shlb
je
es
xchg
dec
add
xchg
fdiv
jb
jg
out
fdivrl
ds
xor
decb
rclb
test
scas
scas
xor
in
push
and
or
xchg
mov
lahf
scas
imul
lahf
adc
xchg
out
mov
pushf
fistpll
mov
fmul
ret
pop
xor
enter
sbb
cmp
cmp
lods
fstpl
ljmp
orl
push
clc
mov
mov
mov
cmp
pop
jbe
fwait
sbb
stc
add
cmp
ljmp
jnp
outsb
cli
pop
mov
cld
inc
imul
icebp
pop
negb
xchg
dec
std
sbbb
and
add
dec
inc
cld
insb
mov
and
les
outsl
add
xor
cmp
or
push
ret
add
adc
mov
mov
lock
ret
cltd
pop
fs
enter
xchg
jecxz
mov
mov
dec
mov
inc
fucom
and
adc
push
adc
sbb
xor
rcll
hlt
add
repz
xor
fdivrs
inc
adc
andb
adc
iret
push
enter
fst
aam
ja
xor
clc
mov
dec
or
aam
arpl
jno
icebp
and
mov
loopne
cmp
push
pop
pop
addl
movsb
sub
popa
or
and
cmpsb
jbe
mov
pop
push
jp
mov
push
inc
pop
jecxz
ret
daa
mov
or
pop
pop
or
dec
mov
jns
sbb
pop
jp
idivl
mov
adc
cmpsl
test
mov
push
ds
jl
daa
pop
sub
cmp
xor
out
adc
or
mov
push
in
ret
xor
push
inc
dec
cmp
jl
lret
mov
or
popa
or
dec
cmp
adc
mov
and
jbe
mov
push
rcrl
std
xchg
add
pop
std
andl
andb
lret
jp
cmp
sub
mov
neg
push
out
dec
cli
push
cbtw
mov
mov
fidivl
mov
xor
ffreep
and
dec
mov
jbe
dec
mov
out
in
jl
stos
fcompl
dec
mov
pop
and
lods
jle
pop
call
cmp
stos
dec
out
and
pop
es
pop
data16
rcrl
and
dec
sbb
scas
lock
dec
add
movsl
shr
gs
ljmp
insl
nop
bnd
xor
adc
sbbb
mov
les
xchg
repnz
inc
pop
fmul
jne
das
cmp
call
ljmp
scas
std
out
nop
jl
lret
xchg
test
xchg
mov
shll
out
scas
and
test
or
cs
inc
or
adc
sbb
fnsave
fdivrs
xchg
jle
sub
mov
mov
sarb
mov
dec
mov
pop
or
das
adc
cmc
lods
notb
in
icebp
jns
mov
xchg
js
inc
pop
push
outsb
inc
inc
jp
mov
xor
xor
ja
mov
outsl
jmp
mov
and
sub
add
popf
push
sbb
add
mov
popa
pop
ret
adc
stos
lods
out
sub
xchg
mov
insb
cmp
and
repz
dec
pop
ret
and
movl
arpl
lahf
mov
enter
out
sbb
pop
jno
mov
sahf
xchg
push
imul
jbe
mov
std
out
cli
cmpsl
dec
cltd
cs
jae
jge
repnz
mov
out
dec
inc
in
inc
roll
mov
rolb
jne
mov
mov
inc
mov
adc
inc
mov
inc
int
das
xchg
fiaddl
xor
cmp
pop
aad
mov
movsl
sub
pop
fidivrl
fdivs
or
or
adc
lods
mov
popf
les
cmp
push
cmp
xor
mov
scas
mov
push
subl
xchg
sub
ret
mov
mov
js
out
out
leave
jne
xchg
or
cmpb
je
shr
push
ds
scas
fs
aas
punpckhbw
ss
mov
ds
arpl
lret
jge
ret
out
xchg
sbb
dec
mov
leave
jmp
and
adc
xchg
imul
mov
pop
lock
cmp
ficoms
sub
xchg
sbb
jl
sub
aad
mov
pop
inc
int3
ss
dec
neg
insl
inc
mov
daa
popa
push
xor
scas
mov
dec
push
popa
in
sub
popf
and
xchg
jo
rep
push
pop
jno
adc
inc
mov
lods
ss
shll
mov
jmp
push
adc
and
shlb
ds
fimull
mov
outsl
imul
cmp
xchg
sbb
rol
ja
pushf
adcb
je
stos
aas
push
xor
or
stos
xchg
xchg
stos
shlb
movsl
int3
xchg
sub
and
cmp
pop
jle
pop
int3
sub
jl
xlat
xor
iret
jns
lods
scas
test
lea
rolb
scas
cli
pushf
in
fdecstp
sahf
stos
mov
push
imul
inc
pusha
aas
es
lods
mov
imul
xchg
mov
xchg
push
dec
lret
dec
iret
mov
or
in
inc
mov
sbb
mov
popa
mov
mov
cld
or
sti
xchg
adc
xor
pop
mov
sahf
xor
xchg
cwtl
dec
xchg
mov
mov
faddl
sub
xchg
sti
mov
js
jecxz
fdivl
push
add
and
sbb
mov
loope
xchg
fdivs
outsl
jmp
mov
sub
mov
pop
sub
or
std
mov
inc
shr
pushf
cmc
inc
and
aad
pushf
mov
test
mov
mov
cmpsb
mov
mov
fsubrl
in
cmpl
loop
enter
adc
push
jge
cmp
lret
xchg
cmc
and
or
sub
fwait
xorb
jns
sbb
and
fisubs
add
mov
sbb
xchg
dec
out
aam
loopne
sahf
insb
dec
xor
push
and
faddl
call
sbb
mov
dec
scas
xchg
pop
inc
cmp
xchg
mov
mov
and
in
dec
in
dec
test
inc
pop
popf
xchg
dec
mov
fdivl
xor
paddusb
mov
scas
popa
xchg
and
outsl
add
xchg
iret
mov
jp
and
daa
test
push
jns
fs
push
mov
dec
rclb
sbb
adc
jecxz
inc
lahf
addl
es
test
push
cmpsl
pop
dec
icebp
test
nop
in
dec
pop
ficoml
jl
mov
jle
fildl
shll
dec
xchg
sub
push
or
or
lcall
cltd
jge
inc
lea
stos
add
movsb
adc
test
cmp
cmp
test
inc
inc
imull
push
mov
or
filds
push
add
repnz
add
xor
aas
test
xchg
add
push
insl
jne
sarb
pusha
int3
cmp
shrb
mov
dec
out
xor
cmpsb
aas
mov
ret
test
scas
popf
mov
insl
push
or
cmpb
inc
lea
jo
jb
and
or
push
shl
lcall
jl
mov
mov
add
cmc
test
mov
and
and
add
jae
mov
outsb
enter
shll
jmp
fsubrs
mov
adc
cmpps
adc
into
vmovupd
cmpsb
mov
push
and
fdivrl
cmpb
orl
fistpl
dec
lret
dec
inc
push
push
inc
rcll
out
cld
sub
aas
pop
fimuls
sbb
jnp
mov
xlat
push
call
mov
testl
cmp
inc
int3
mov
call
xorl
mov
scas
loopne
jno
cmp
sbbb
add
test
pushf
mov
adc
and
inc
and
add
and
jmp
mov
push
sbb
inc
sahf
dec
call
adc
ret
mov
jae
loop
arpl
fcmovbe
dec
xchg
leave
rolb
fwait
xchg
or
inc
add
stos
pusha
inc
lcall
vmulpd
loop
cs
mov
add
popa
cmp
adc
lea
jnp
xor
iret
mov
mov
mov
pop
iret
popa
in
mov
in
xchg
inc
xor
rcll
xchg
mov
imul
daa
in
jmp
xor
push
pusha
jae
xor
idivl
mov
loop
lods
aas
daa
cmpl
jno
aaa
mov
push
outsb
hlt
add
mov
sub
js
mov
dec
jnp
test
inc
bound
or
sub
or
es
jmp
pop
add
pop
jmp
xchg
sub
adc
mov
arpl
pop
hlt
cmp
mov
das
dec
and
mov
hlt
ret
cmp
mov
sub
push
mov
jmp
add
inc
cld
ljmp
xor
push
pop
in
mov
pop
hlt
mov
mov
and
cli
mov
clc
cmpsl
loop
sarb
or
cmp
aam
xchg
sub
cmp
or
add
rclb
in
mov
mov
cs
bound
fidivrs
mov
sub
lcall
mov
fistpll
xor
fmuls
lea
orl
lds
fadds
and
jno
mov
fs
cmpsb
popa
adc
mov
jl
add
cmp
dec
mov
xor
repnz
mov
lods
loope
faddl
nop
aad
xor
jbe
add
test
outsl
popf
mov
insl
adc
jns
or
repz
test
ficompl
sbb
pop
test
jge
jecxz
aaa
xor
push
sar
lret
mov
cmp
pop
push
shrb
push
mov
jmp
inc
mov
repnz
iret
dec
testl
movsl
pop
sub
xchg
jge
mov
push
daa
add
jmp
mov
xorb
dec
iret
leave
cs
add
aad
sub
lods
loope
dec
push
lret
add
ds
std
pop
clc
push
sub
aaa
jbe
or
lret
pushf
sarb
mov
aam
xchg
add
pop
adc
imul
xor
icebp
loop
add
sbb
sbb
jmp
enter
arpl
pop
ret
xchg
xchg
jle
enter
lret
xor
rclb
sbbb
cmp
push
mov
mov
pop
xchg
sbb
xor
sub
cltd
jmp
mov
nop
icebp
inc
hlt
data16
sub
xchg
jl
add
mov
mov
pop
inc
cli
jg
push
inc
jecxz
fdivs
js
mov
mov
push
mov
mov
es
stos
sbb
jge
adc
cld
pop
push
cwtl
sbb
push
loope
daa
and
lea
dec
xchg
popa
lcall
fldt
jmp
mov
gs
andb
stc
data16
movsb
fucom
or
mov
roll
lock
clc
push
jle
mov
inc
cmp
aad
fwait
aaa
out
daa
xchg
xor
test
mov
mov
mov
rcrb
mov
cmp
lods
fisttpll
push
lret
jne
in
aam
jnp
push
cli
jmp
and
pop
lea
and
fimuls
cmp
jg
cmp
mov
ret
or
scas
mov
adc
cmp
fmul
popa
xor
lds
insb
xlat
cmp
leave
pop
jmp
push
dec
or
aad
xor
xor
rorl
insb
push
or
outsb
xchg
out
xchg
std
test
add
div
pop
or
ljmp
push
xchg
sbb
inc
pop
jge
jns
xchg
and
pop
sbb
xchg
fs
jne
cli
cmp
mov
push
or
popa
out
stos
idivl
js
cmc
add
xchg
jnp
sub
mov
ret
push
inc
sbb
outsb
bound
push
loope
cmc
adc
add
xchg
mov
out
lea
sbb
test
mov
rorb
xchg
daa
imul
mov
or
jmp
ror
push
leave
xchg
dec
push
jl
inc
ljmp
inc
cwtl
push
test
adc
mov
aad
xchg
into
mov
mov
out
shrl
jle
cld
les
out
repnz
inc
or
add
lcall
sub
jle
out
mov
test
ss
mov
sub
shrb
mov
pop
aas
jl
xor
into
or
push
mov
mov
out
popf
clc
push
outsl
sbb
xorl
pop
add
xchg
out
andb
cld
dec
insl
dec
and
xchg
mov
test
cmp
add
dec
mov
insb
test
jae
movsl
cmp
scas
adc
push
mov
fistps
jge
cmpb
push
out
pop
hlt
mov
out
inc
push
jne
es
retw
dec
lea
cmc
inc
cmp
roll
nop
lret
inc
mov
cmp
adc
outsl
push
cltd
xor
lea
sub
mov
ret
pop
sub
jmp
imul
mov
in
mov
adc
ret
push
imul
leave
sbb
bound
push
jno
icebp
xor
inc
hlt
imul
mov
lea
addr16
mov
cmp
push
or
mov
adc
fcomps
sbb
arpl
leave
or
idivl
cmp
adc
xchg
mov
push
mov
add
cmpl
inc
and
dec
sbb
xchg
daa
fwait
mov
repz
iret
cli
testb
mov
fnstenv
pop
add
repz
pop
gs
xchg
leave
hlt
cmp
dec
lret
jl
and
call
or
jmp
cli
sbb
decb
jp
popf
add
adc
adc
mov
outsl
shrl
ss
leave
adc
fs
pop
cmpb
mov
out
xor
stc
xchg
mov
rcr
xor
inc
mov
in
rclb
and
and
sbb
jl
push
fs
mov
add
xchg
icebp
sti
out
loope
stos
fstps
mov
and
xchg
stc
hlt
mov
in
xchg
mov
pushf
and
push
jmp
cmp
xchg
or
loope
sbb
popf
sbb
into
mov
lret
faddl
dec
cmp
inc
inc
ljmp
xchg
cmpsl
shr
addl
push
fisubrs
lods
popf
push
cmpsl
or
mov
lahf
adc
add
paddw
jecxz
pop
sbb
push
sub
mov
aaa
lds
fbstp
cmc
sub
ficompl
sbb
inc
dec
dec
mov
insl
inc
int3
aaa
enter
out
das
imul
pop
mov
scas
lods
add
jb
and
lods
aad
out
jl
inc
cmpsl
addb
adc
jnp
lahf
pop
mov
inc
ljmp
aam
push
jecxz
pusha
jae
and
inc
xor
sbb
stos
mov
jns
call
push
jp
dec
cmp
lcall
sub
sbb
fiadds
insl
hlt
jbe
mov
mov
arpl
repz
repnz
fwait
jle
mov
ret
pop
scas
jns
pop
push
outsb
xchg
push
adc
insb
xchg
dec
repnz
orb
mov
ja
nop
loopne
cli
xchg
jnp
mov
call
pop
ss
jbe
sbb
and
jge
outsl
mov
sub
ss
lret
pop
dec
push
in
mov
cmp
mov
nop
cmp
scas
jl
cs
cmp
xchg
push
aas
pop
fmul
loop
pop
and
pushf
push
sbb
mov
or
pop
out
xor
mov
dec
push
pop
sub
adc
jp,pt
push
dec
add
enter
xor
mov
cld
sbb
imul
int
push
jb
ja
out
sarl
sahf
mov
or
es
mov
mov
test
test
call
mov
adc
pop
sub
pop
jnp
fldenv
pop
popf
push
cli
jmp
leave
cli
adc
jns
lahf
or
je
mov
mov
subps
cli
cwtl
xchg
fistpll
push
jae
clc
jo
and
push
inc
xchg
mov
mov
rorb
ffree
shl
mov
iret
stos
jmp
mov
fdivs
jbe
xor
repnz
push
mov
jae,pn
cmp
sbb
cmpsb
adc
dec
sarl
int
jae
jo
mov
adc
lock
rolb
lds
or
xor
xchg
cmp
pop
xor
pop
mov
jnp
loopne
nop
jo
xchg
testl
stos
inc
popl
pop
inc
inc
aad
lcall
dec
jne
pop
and
push
test
les
jo
jmp
add
fistps
xor
mov
movsb
in
into
add
xlat
mov
ret
inc
push
xor
rclb
in
sahf
jne
add
shl
pop
out
mov
lret
clc
cltd
imul
adc
aas
push
inc
jnp
adc
mov
xor
leave
ja
inc
outsl
sbbl
adc
clc
xchg
push
sbb
lret
jb
loopne
insl
mov
xchg
leave
adc
push
bswap
push
xor
mov
sub
ds
inc
mov
fld
ret
xchg
ss
sbb
jmp
and
ss
ljmp
lods
js
into
fstpl
or
out
cmpsl
jnp
jle
insb
add
inc
xchg
in
scas
into
jecxz
rclb
cmp
fcomps
cli
mov
inc
cli
inc
cs
sub
adc
dec
inc
or
xor
mov
sbb
mov
push
xor
ret
iret
adc
dec
xor
pop
add
shrb
jp
les
xchg
mov
ret
sti
pop
mov
je
outsb
scas
test
daa
push
push
loope
aam
and
xchg
shll
lea
push
jg
andl
and
xor
in
incl
les
insl
arpl
jmp
jno
repnz
or
mov
adc
pushf
es
imul
es
lock
lahf
adc
inc
dec
mov
imulb
xchg
insb
cmp
xchg
or
xor
mov
aas
sbb
call
imul
mov
push
test
adc
mov
jae
mov
pop
iret
push
dec
xchg
sti
adc
inc
addr16
adc
adc
out
dec
lea
mov
sub
lret
pop
cltd
xor
jb
pop
jne
fxch
js
out
sbb
add
xlat
jno
gs
inc
xchg
fmuls
jb
stc
or
inc
cmp
inc
jne
jle
fs
pop
xchg
fs
sbb
or
fstpl
fisubrs
cmpsb
test
test
mov
insb
xor
fildll
dec
xor
sub
fiaddl
stc
jmp
mov
adc
in
xchg
jo
or
int
rcrl
inc
mov
add
or
test
jl
insb
das
push
pushf
mov
int
aaa
and
ret
addr16
pop
xchg
push
int
in
lret
jo
and
jle
and
sub
ss
cmp
or
into
sub
jb
sbb
in
hlt
mov
inc
cwtl
aas
add
je
inc
sub
push
xchg
mull
lea
pop
shrl
aad
push
jp
sub
mov
scas
and
lea
jne
xlat
insl
cmp
rorl
adc
nop
pop
or
cmp
mov
loop
inc
mov
out
or
in
mov
int3
mov
cmp
cli
mov
addb
testb
test
ficoms
xor
push
mov
and
jno
mov
int3
add
insb
ds
scas
or
adc
aaa
enter
das
dec
popf
inc
dec
inc
mov
sti
popf
fnstcw
pusha
ret
sbb
mull
sub
mov
jmp
mov
add
cmp
std
fidivs
leave
mov
add
popa
adc
xchg
jg
jb
inc
pop
jo
lods
pop
sbb
mov
or
andl
mov
cmp
and
jmp
inc
lahf
outsl
jns
repz
cmp
arpl
mov
fistpll
sbb
or
or
cwtl
lods
jge
lret
or
icebp
dec
mov
mov
icebp
mov
adc
cmc
inc
repnz
stos
mov
xchg
mov
and
imul
adc
jle
jbe
xlat
je
fsubr
cli
xchg
in
add
rclb
mov
test
push
mov
mov
sbb
es
adc
pop
sub
inc
push
xchg
fstpl
popf
mov
xor
addr16
or
sub
mov
pop
push
scas
fucomp
adc
aad
fwait
inc
imul
shll
push
enter
out
xchg
pop
mov
stc
xor
xlat
pop
movsl
mov
lods
mov
xor
and
sbb
lret
mov
cs
inc
add
cmp
je
and
cmp
aas
addl
movsl
jb
rolb
xor
xor
inc
fsubrl
dec
push
jnp
add
sub
js
gs
pusha
cmp
cmp
pusha
mov
or
adc
fcoms
jo
push
aam
cwtl
pop
nop
sarb
out
pop
and
ljmp
test
mov
cmp
mov
adc
scas
filds
test
pop
test
aam
lret
ja
pusha
dec
std
std
lea
cli
out
xchg
pop
xchg
push
mov
bound
ds
and
ljmp
out
lds
push
lahf
ret
pop
or
mov
jmp
stc
add
sti
sbb
sti
push
xlat
cmp
iret
movsb
aaa
cwtl
incb
sub
insl
fisubl
jg
leave
inc
lods
mov
out
push
xchg
fstpl
movsl
lods
rorb
int3
bound
sti
insl
xchg
mov
outsb
and
pop
push
add
nop
fsubr
add
jl
inc
es
xor
and
pop
pop
dec
or
adc
fnsave
push
cmp
mov
sbb
mov
clc
pop
adc
out
fistps
daa
pop
cmp
cmp
sub
movsl
or
adc
push
add
rcrb
nop
cltd
es
test
sub
inc
sbb
movsb
cld
inc
xor
fcmovne
and
dec
in
test
cmp
gs
jo
jg
mov
fldl
xlat
paddsw
adc
mov
adc
xor
pop
cmpxchg
pop
dec
inc
jnp
in
pop
ficoml
adc
out
xlat
xchg
inc
lds
mov
jmp
cltd
loopne
sti
cs
fiaddl
imul
inc
mov
lock
push
or
movsb
repz
push
sbb
popa
cmp
out
jp
mov
inc
mov
sbb
pop
add
mov
jmp
mov
dec
mov
dec
cld
fdivrp
lods
add
movsl
cld
dec
mov
ja
adc
sahf
movsb
or
jg
dec
dec
mov
add
pop
repnz
or
je
adc
add
sti
or
mov
out
xor
rorl
and
inc
adc
cmp
or
and
stos
mov
shl
cmp
pop
movsb
dec
mov
lcall
addr16
mov
inc
loopne
sub
cs
icebp
sub
dec
push
dec
dec
add
adc
cmp
xchg
cmp
push
aaa
xchg
xchg
pop
pop
mov
ret
jne
arpl
push
sbb
hlt
xchg
imul
mov
jbe
jecxz
jo
fs
push
mov
sbb
aam
loope
aas
test
inc
psllw
cltd
xor
popa
lds
lock
int
cld
in
aas
pop
repnz
cmp
adc
jnp
dec
stos
or
inc
int3
fistps
add
data16
imul
out
aas
scas
jne
in
aas
dec
ljmp
stc
mov
sbb
push
mov
nop
xlat
cmc
test
inc
pop
jno
mov
sbb
fcoml
mov
cmp
mov
and
cltd
ja
xor
imul
idiv
mov
icebp
mov
daa
call
sahf
and
ss
fsubl
add
aaa
mov
shl
xchg
and
or
mov
sahf
arpl
arpl
dec
stc
pop
push
icebp
adc
aas
stos
mov
and
shlb
adcb
pusha
call
push
leave
je
push
lods
jno
mov
and
je
insl
dec
movsb
sbb
in
jmp
mov
jl
fdecstp
mov
fldt
scas
lods
int3
xor
sbb
in
loope
push
test
fisubrl
lret
mov
xor
jns
dec
cli
push
pop
movsl
je
nop
mov
fistpl
loop
movsl
add
imul
cmc
in
xor
lret
push
mov
xor
out
jmp
inc
mov
stos
xchg
cmpsb
pushf
lret
xor
jmp
inc
inc
mov
in
dec
sub
mov
test
push
shlb
jl
pushf
pop
inc
imul
dec
mov
inc
arpl
dec
sbb
dec
sbb
jnp
inc
dec
enter
jge
in
xchg
sti
sub
sbb
push
xchg
insl
outsl
dec
dec
js
pop
stc
sarb
jb
jne
xchg
mov
or
aas
sub
fimuls
pop
out
je
and
push
push
imul
vmovdqa32
rorl
add
xor
mov
fdivr
loope
dec
and
dec
push
push
adc
add
out
xor
insb
xchg
fisubrs
arpl
stc
call
mov
lods
push
jno
loop
xor
sbb
loope
inc
pop
and
inc
lock
mov
mov
icebp
out
jno
pop
jmp
jg
dec
adc
aas
adc
ret
in
lods
or
in
nop
jle
mov
out
lret
lock
adc
ret
mov
roll
mov
cli
fistl
nop
pop
fdivrl
insb
mov
or
and
jbe
fstp
js
adc
ja
pop
xchg
roll
jbe
enter
xor
cmovge
lret
push
fs
xchg
sub
xor
out
jg
pop
pushf
mov
rcrb
xchg
cmp
sbb
loop
mov
xor
pop
push
ret
inc
inc
pop
ret
pop
stos
push
pop
or
pop
lcall
inc
dec
or
dec
test
fimull
test
cmpsb
pop
inc
out
bound
aam
ljmp
ds
mov
adcb
sbb
mov
out
ss
fldl
lock
arpl
cli
xchg
lods
cmc
test
rcll
lahf
mov
out
add
bound
push
inc
cmc
jb
fadd
xchg
nop
mov
sahf
out
imul
ja
fsubp
leave
leave
sbb
cmc
sarb
xchg
movsb
mov
es
test
dec
push
mov
insl
jb
cmp
leave
sub
push
dec
mov
xor
mov
pop
subb
push
loop
or
cmpsb
cli
in
lret
lods
push
jb
and
jns
pop
scas
jae
cwtl
xchg
and
insb
push
and
mov
mov
inc
jg
adc
mov
and
mov
sbb
rorb
hlt
vmwrite
test
cmp
jle
push
les
inc
xor
movsl
push
cwtl
cmp
aad
jge
or
cmc
ja
aad
stos
mov
enter
scas
mov
sbb
fstpt
fisttps
xor
mov
shl
sub
push
lahf
js
mov
xchg
xchg
lods
ljmp
scas
and
mov
jae
pop
sub
pop
in
jae
inc
nop
jg
mov
sahf
sub
push
fsubrs
roll
into
stos
and
xchg
push
xor
icebp
jns
inc
mov
push
push
mov
iret
push
daa
mov
shrb
pop
push
xorl
xchg
dec
sbb
pop
and
push
aad
mov
icebp
xchg
aad
jo
mov
cwtl
or
lahf
push
mov
add
popa
mov
outsb
sbb
sub
sbb
ss
lret
mul
or
scas
out
test
push
pop
cli
push
xor
popf
cmp
push
xchg
ja
push
adc
int3
cmp
push
or
mov
inc
dec
leave
call
dec
jnp
push
cmc
xor
xchg
sub
lods
nop
xor
sbb
in
notb
jno
inc
pushf
sub
in
push
je
dec
mov
test
jecxz
mov
mov
ds
sbb
adc
cs
xor
jp
mov
loope
out
push
sbb
mov
mov
push
mov
xchg
rcrl
xor
shrb
push
pusha
mov
adc
sub
mov
adc
test
data16
mov
jmp
inc
int3
test
addl
lret
xlat
mov
scas
adc
inc
lret
cmp
out
xor
lcall
add
push
xor
jge
mov
lea
sti
outsb
gs
aad
jb
push
out
jb
xchg
rclb
int3
xchg
mov
insb
mov
cmp
add
pop
mov
movsb
inc
repz
out
jb
je
xchg
out
std
nop
adc
pop
ret
jp
push
lods
hlt
adc
dec
jno
add
stc
mov
pop
scas
dec
fs
jle
jmp
movsl
insb
out
jge
jae
fstps
add
fidivs
fimull
leave
lock
fistpll
xchg
popf
loopne
fsubl
ljmp
pushf
lcall
cmp
adc
add
pop
xorb
inc
or
iret
xchg
add
bound
rcl
in
inc
outsl
sarb
jo
into
inc
or
lret
nop
push
pop
ficomps
imul
add
pop
lods
cmp
xchg
lahf
and
mov
xchg
es
addb
jne
data16
fists
sbb
sbbb
cmp
mov
lahf
inc
xor
out
sub
lods
push
mov
mov
or
sbb
mov
xchg
inc
imulb
and
test
lds
xor
cmp
cltd
push
cmp
cmp
outsb
lcall
add
ret
inc
jb
or
xor
xchg
cs
rorl
scas
insb
out
lahf
fxch
dec
pop
movsl
xor
popa
sbb
xor
scas
mov
loopne
jae
es
pop
push
cmpsb
push
jb
fisttps
dec
test
push
mov
lahf
sahf
add
jecxz
jne
push
jnp
adc
lret
and
add
int3
dec
incb
jmp
mov
push
iret
jle
call
cltd
sbb
sbb
addb
pop
xchg
or
cmpsb
mov
xchg
mov
sub
ficomps
enter
push
lock
add
dec
in
jg
ret
in
jge
popf
enter
icebp
xor
imul
lods
sub
inc
iret
cmp
push
push
cltd
sbb
sub
push
add
stc
call
sbb
push
mov
sahf
cmp
or
repnz
push
add
xor
cmp
insl
enter
fsts
imull
repz
in
imul
push
insb
xlat
cmp
es
adc
and
xlat
andl
enter
popa
fildl
inc
mov
movsb
or
scas
push
dec
pop
add
cmp
fbld
pop
lds
std
push
iret
mov
outsb
xor
jl
dec
add
xor
inc
outsb
in
push
imul
cmpsl
or
jmp
jle
mov
jecxz
adc
ret
hlt
xchg
or
nopl
mov
jge
push
mov
mov
cwtl
xor
jge
data16
gs
pop
cli
push
movsl
sti
outsb
push
xor
and
inc
test
and
add
xchg
imul
and
movsb
dec
pop
icebp
inc
jno
cmpsl
cmc
dec
cld
mov
xor
test
jne
inc
jno
xchg
into
ljmp
fwait
mov
bnd
lods
loopne
cmp
lds
push
cmp
stc
out
push
outsb
test
pop
jge
enter
xchg
in
add
mov
push
in
cmp
stos
pop
cli
and
mov
mov
lds
and
mov
clts
push
rol
mov
jmp
mov
adc
mov
adc
cmpsb
insl
inc
icebp
and
inc
push
sub
add
mov
pop
lds
cmpsl
add
cwtl
add
inc
xchg
dec
rorb
bswap
in
xchg
in
loop
jg
test
sbb
cltd
pop
jl
push
ret
push
add
jge
fiadds
pop
xor
jno
scas
add
shlb
dec
lods
std
test
adc
push
in
aaa
and
das
mov
xor
fisttpll
ljmp
aaa
ds
xchg
out
jbe
or
add
xchg
sub
insl
add
jbe
adc
mov
out
std
or
mov
cmpsl
and
inc
add
movsl
mov
adc
mov
or
das
adc
gs
loope
flds
fcomps
xchg
dec
pop
jmp
test
sbb
fldl
test
dec
mov
inc
out
insl
test
add
mov
xchg
jecxz
fnsave
arpl
mov
xchg
aam
mov
add
iret
dec
fsubrl
dec
xchg
adc
mov
dec
fwait
lret
pop
or
mov
cmp
mov
repnz
mov
push
pop
push
adc
movsl
or
cwtl
and
dec
inc
push
and
adc
test
imul
xchg
clc
jne
add
fcmovnu
mov
repnz
sahf
adc
jno
dec
add
xlat
out
push
mov
shll
leave
rclb
insl
sub
fdivrs
dec
arpl
popa
sub
or
adc
sbb
jo
jo
xchg
dec
ret
sarl
ftst
les
repnz
cltd
and
dec
jbe
pop
lods
xchg
sbb
xor
test
outsl
test
inc
and
jns
movsl
push
sbb
pop
xchg
xchg
aam
cmc
pop
js
ja
out
xchg
and
pop
in
sub
stc
int
aaa
cmp
mov
dec
in
cmp
dec
xchg
andb
clc
sub
jbe
cld
add
aam
push
mov
inc
xchg
dec
or
rorl
loope
xchg
out
mov
imul
jg
stos
push
enter
vmovlps
sbb
gs
inc
stos
movsl
pop
sbb
std
and
mov
pop
jns
cmc
mov
jg
xchg
sbb
sub
sahf
std
lahf
inc
jg
sub
sahf
mov
jg
and
dec
pop
add
adc
xchg
push
ds
nop
xor
scas
filds
movsl
pop
hlt
push
dec
mov
scas
popf
pop
mov
xchg
mov
xor
fsub
stos
neg
add
outsl
add
sbb
pop
jne
xchg
adc
out
mov
loope
cmpl
xchg
lock
mov
js
push
or
inc
sbb
push
sub
andl
jge
outsb
mov
or
pop
pop
addb
sbb
pop
mov
mov
int
movsl
idivb
out
jge
rcr
subl
outsl
mov
clc
iret
pop
jl
scas
movhps
in
xor
sbb
pop
inc
xor
and
mov
lods
mov
sub
sbb
jg
mov
bound
push
inc
push
and
aas
imul
xor
adc
cwtl
rorb
jmp
mov
and
pop
push
int
mov
popa
pop
adc
inc
loope
mov
sub
cmp
cs
andl
mov
mov
lods
jbe,pn
lret
push
jbe
dec
cmp
xor
test
xchg
jmp
fadds
pop
movsl
sub
mov
andl
and
lds
dec
and
sbb
push
inc
scas
popa
rep
fcoms
push
test
aad
jns
adc
jle
shrl
push
in
out
sarb
mov
loope
ljmp
mov
in
cli
sub
and
dec
mov
stos
add
test
mov
imul
aad
jg
fmuls
movsl
lods
jmp
test
and
push
fwait
in
fiadds
mov
xor
sbbb
cmp
jg
add
xchg
sub
cli
or
cmp
mov
lcall
and
lret
cmc
rcl
fucom
push
lods
cmpsb
sbb
pop
sbb
nop
aam
cli
ds
mov
mov
fisttpll
ljmp
mov
inc
push
pop
dec
ljmp
ss
sub
fwait
popa
or
inc
dec
addl
fs
loopne
fimuls
das
cltd
mov
imul
mov
mov
cltd
das
pop
dec
addb
mov
fmuls
scas
sbb
pop
imulb
mov
or
mov
repz
loope
sbb
fistps
repz
outsb
or
test
outsl
inc
push
aas
out
dec
inc
xchg
bnd
xor
pop
in
or
mov
jp
in
outsl
adc
dec
mov
repnz
dec
shrb
in
std
adc
xchg
adc
aam
jbe
popf
dec
adc
cmpsb
dec
lock
mov
in
mov
mov
mov
jmp
dec
in
ja
add
addl
dec
iret
xchg
imul
mov
sarl
loopne
cmp
xorl
jg
or
pop
sub
pushf
and
pop
or
mov
xor
movsb
sub
movsb
cltd
repnz
cmp
js
daa
cmpsl
es
lods
mov
inc
in
mov
aas
gs
in
lods
int3
jmp
sub
push
dec
cmp
pop
sti
push
sbb
rcrl
lret
xchg
stos
in
addb
add
addr16
push
ds
mov
test
jmp
clc
xchg
xchg
enter
mov
push
shrl
mul
or
movsb
lock
movsb
out
jle
inc
stc
bnd
pushf
pusha
mov
xchg
dec
mov
or
lea
lock
mov
lret
mov
das
loop
mov
mov
push
inc
add
fistps
fs
int3
das
lahf
int3
pop
xor
cmp
add
dec
cs
xor
les
lcall
or
dec
cmp
clc
rcll
int
fsubrl
xor
in
push
popa
aaa
dec
mov
std
shl
and
daa
negl
gs
mov
leave
sti
cmc
out
ret
repnz
aaa
pushf
pop
test
jl
mov
shlb
fisubrl
out
test
in
xchg
xlat
sub
mov
sub
in
xchg
sbb
jge
or
lock
lods
jbe
pusha
dec
push
adc
cmpsl
lahf
xorb
arpl
repz
icebp
xchg
ret
mov
sub
std
jecxz
xchg
leave
aam
xor
insb
sbb
mov
data16
scas
add
and
stos
sub
shrl
std
imul
add
jo
jmp
repz
mov
dec
xlat
sub
inc
cmc
lahf
push
nop
inc
scas
mov
xchg
push
inc
dec
push
hlt
pop
int3
jle
cli
outsb
repz
cltd
sahf
lods
xor
or
test
popa
mov
mov
jmp
ret
xchg
in
cmpsl
mov
push
sub
xor
inc
and
add
invlpg
int
loope
scas
mov
push
repz
fs
jne
xchg
scas
jnp
dec
mull
and
jns
fiaddl
in
aas
mov
jp
aaa
push
dec
aas
push
fistps
xchg
lcall
out
es
lret
sbb
mov
div
sarl
sbb
or
in
lret
fistpl
loopne
mov
sbb
arpl
inc
lods
add
rorl
xchg
adc
lret
loop
mov
xor
mov
dec
adc
mull
and
jno
lcall
inc
inc
dec
ljmp
xor
sbb
scas
xchg
cmp
add
xchg
add
or
pop
les
in
daa
mov
sbb
std
pop
mov
fisubrs
and
testl
inc
add
mov
addr16
ret
ficompl
pushf
arpl
xchg
rcrb
out
cltd
gs
and
cmp
test
add
jp
dec
inc
test
push
sub
scas
rol
inc
std
inc
dec
mov
stc
movsb
mov
inc
jno
lods
sub
xchg
add
or
sub
push
out
mov
pop
jp
xchg
xor
cmpsb
lea
sarl
push
jbe
loopne
sti
push
push
jo
sahf
xorb
pop
cmp
mov
cwtl
inc
mov
js
out
popa
sub
sub
cmp
mov
iret
adc
push
test
insb
das
jbe
lcall
sub
scas
jmp
dec
xchg
and
fisubrs
xchg
sbb
jno
hlt
or
mov
popf
mov
jg
mov
dec
stos
push
mov
insl
cmp
jae
shll
xor
xor
sbb
ljmp
dec
fdivrl
mov
stos
test
movsb
outsb
dec
lea
add
or
and
cld
mov
test
pop
test
lock
sarl
clc
mov
mov
insb
cmc
notb
lahf
xor
lods
in
sub
out
jne
dec
adc
inc
push
and
aam
push
sub
js
es
cmp
outsl
push
je
je,pn
sbb
js
repz
push
xor
mov
pop
jecxz
loopne
mov
dec
rcll
inc
and
and
add
xchg
sbb
daa
inc
push
iret
popa
or
or
loop
sub
adc
in
xchg
or
outsb
in
jns
ljmp
rorb
mov
jb
xchg
mov
fsubs
mov
inc
in
das
cmp
pop
imul
mov
cmpsb
call
sbb
js
imul
or
loope
stc
data16
cmp
subb
mov
cltd
pop
lock
cwtl
push
adc
ss
orl
lds
pushf
push
jne
mov
js
jo
mov
mov
lods
and
fmuls
push
repz
fsubs
pop
repz
mov
xor
into
jg
dec
xor
pop
xorl
into
fcoms
xchg
into
pop
jnp
out
gs
sub
lods
insb
cmp
fstps
jg
repnz
and
decl
divl
jnp
scas
xchg
xchg
mov
mov
addr16
iret
inc
in
bound
or
leave
add
es
out
addr16
xchg
push
push
pop
ret
pop
sbb
mov
int3
sbb
xlat
jge
mov
lods
jae
scas
notb
push
xor
mov
jmp
popf
xchg
mov
jnp
xchg
mov
addr16
addr16
repnz
fs
xchg
jo
cmpsl
push
pusha
jge
pushf
mov
pop
in
scas
mov
jbe
jo
pop
mov
test
add
enter
ficompl
das
into
pop
testl
je
xor
xor
jbe
rcr
rcl
ret
test
inc
popf
xchg
jno
adc
repnz
sbb
pop
sub
gs
das
test
loopne
scas
xorb
inc
xor
stos
jecxz
lock
push
pop
addr16
mov
mov
hlt
mov
aam
cltd
gs
mov
pop
addr16
enter
jo
leave
pop
xor
mov
pushf
xor
dec
and
dec
outsl
das
push
fs
in
inc
or
roll
cld
fadd
jmp
lcall
add
and
fwait
jl
push
pop
push
jo
jl
or
mov
jl
jb
xchg
fwait
loopne
cld
fsubrs
and
test
inc
test
sub
pusha
push
adc
fistl
lods
rorl
and
repz
add
daa
mov
ret
xchg
leave
loope
cmp
cmp
jl
jl
xchg
mov
mov
xchg
xchg
dec
in
fnstenv
mov
hlt
out
cmpsl
fidivl
jnp
lcall
and
cmp
cld
loopne
cmp
scas
aam
or
jmp
push
rclb
dec
test
pop
dec
stos
xor
lahf
xlat
int3
into
fs
lea
mov
outsl
fcoms
bound
xlat
movsb
sbb
scas
pop
mov
aam
fisubs
movsb
sub
clc
mov
fwait
and
adc
cmp
dec
in
mov
loopne
dec
lret
test
lods
shlb
and
test
xchg
loopne
cltd
xchg
jb
mov
rol
insl
ret
jge
pop
dec
arpl
fs
out
lcall
mov
aad
negb
sub
sarb
sub
dec
hlt
popl
sbb
test
push
push
addr16
jecxz
xlat
das
leave
xor
test
mov
push
cmc
adc
mov
push
mov
fimuls
dec
xchg
xorl
xchg
int
subl
cmpsb
dec
pop
pop
cwtl
pop
xlat
sbb
js
icebp
push
pop
fwait
aam
loopne
repz
lret
ja
and
loop
mov
cmpsb
data16
xor
xchg
sti
std
enter
mov
pop
xor
testb
or
cmp
mov
sub
push
int
popa
dec
ficomps
jo
mov
add
rol
iret
ret
iret
sub
stc
repnz
out
inc
sub
into
adc
jns
fcoml
push
pop
cli
aad
xchg
and
pop
xor
data16
pop
jns
test
testb
jno
shl
aaa
fidivrl
mov
sbb
faddl
xor
stos
pop
xor
addr16
scas
out
test
pop
shl
es
fldl
sub
adc
dec
loopne
mov
test
push
inc
xchg
les
fwait
scas
cmp
or
shll
movsl
popa
outsb
xor
movb
dec
xlat
jnp
stc
fistps
inc
jmp
add
sub
scas
adc
das
mov
push
mov
mov
sti
repz
sbb
mov
imul
test
mov
dec
xchg
fldenv
pop
xlat
lods
and
sub
or
nop
cmpb
mov
add
inc
sbb
jno
cmp
fildll
data16
imul
mov
test
lret
int3
pop
sbb
fimuls
bound
sub
or
xchg
mov
xchg
test
pop
mov
test
and
dec
fmull
adc
arpl
push
in
ja
lret
data16
pop
ja
fnsave
out
mulb
cmp
test
subb
push
push
in
jae
lock
insb
sti
in
push
cmp
mov
movsl
jge
inc
mov
pop
sarl
xor
imul
inc
xchg
outsb
and
mov
in
sub
lret
and
jae
mov
mov
movsb
roll
ds
mov
push
add
hlt
xchg
gs
in
cmp
mov
out
mov
in
or
out
imul
push
and
insb
push
neg
in
push
push
jo
aam
lock
movsl
sub
dec
lcall
xchg
xadd
mov
rclb
push
push
pop
sbb
into
repz
mov
sub
cli
sub
lods
arpl
xchg
loopne
xchg
adc
xchg
push
lock
pop
imul
fstl
adc
out
mov
mov
push
fidivl
xor
lods
mov
andl
aam
cmp
inc
cmp
add
fwait
pop
push
mov
lods
jecxz
loope
fwait
push
aam
ret
lcall
test
cmp
dec
cmp
test
cmp
test
mov
adc
jbe
shll
cwtl
ja
dec
pop
imul
test
mov
popa
mov
pop
int3
inc
jno
xchg
jp
and
roll
test
xor
cmc
fnstenv
ss
test
dec
pop
xor
adc
fbld
inc
adc
jnp
popa
and
lret
mov
fcoms
mov
pop
in
sbbl
imul
dec
call
popa
int3
shrl
into
cmpsl
in
jns
xchg
pop
add
cmpsb
mov
xchg
pusha
andb
popa
loopne
jecxz
and
add
xor
aaa
or
and
and
inc
std
mov
ja
adc
push
je
mov
movsb
cltd
mov
stos
cmp
je
je
jg
stos
pop
pop
and
mov
push
xor
mov
imul
inc
cmc
push
mov
repz
popf
lea
pop
xor
pop
xchg
stc
mov
std
mov
mov
or
mov
lods
int
shrl
aad
cltd
sub
dec
test
pop
pop
fists
push
inc
test
aas
cmp
jg
aas
mov
mov
mov
repz
mov
cmp
fcmovb
cmpsl
push
lods
loope
dec
inc
movsb
out
das
mov
pusha
aad
add
sub
lret
push
sbb
clc
or
sahf
mov
or
and
int
jae
jg
pop
pushf
xor
out
add
or
pop
mov
mov
add
popa
jns
in
lods
and
xchg
push
mov
in
fsubrs
int
jge
test
xchg
dec
popf
lret
xor
cmpsl
mov
jmp
mov
push
movsl
jecxz
xor
cmp
leave
adc
mov
fisubrl
dec
addr16
pop
push
mov
out
push
mov
subl
xlat
lcall
out
dec
fldenv
mov
ljmp
cmp
or
push
in
les
les
enter
ficompl
mov
push
inc
push
fiadds
xor
adc
jl
cmp
scas
mov
mov
aas
and
out
shrb
xchg
mov
add
cltd
inc
dec
fistpl
xchg
fs
jl
int
test
sbb
push
sahf
lods
imull
cmpsl
push
movsl
std
mov
add
loopne
insl
mov
fidivrl
ljmp
arpl
xor
sub
das
adc
scas
add
mov
pop
imul
jne
jl
inc
xlat
mov
call
mov
sub
dec
inc
pop
roll
fbld
xchg
imul
push
arpl
addb
scas
in
mov
rorl
les
arpl
push
dec
and
add
in
ja
lcall
fnstsw
xor
mov
pusha
jp
push
pop
iret
adc
lret
pusha
imull
add
mov
mov
mov
and
repz
scas
xor
mov
bound
sbb
mov
push
cmpsl
dec
jge
arpl
lock
mov
mov
cmp
ljmp
into
sub
in
repz
push
cmpsb
je
lea
add
dec
mov
dec
flds
add
out
insl
enter
fwait
jne
jo
mov
mov
popf
mov
sbb
xchg
jbe
movsb
pop
testl
push
lock
insb
pop
adc
enter
repz
imulb
cmp
sti
mov
fisubrl
push
jns
pop
dec
pop
out
ljmp
push
xor
jp
jl
jg
in
cli
imul
je
aam
dec
pop
rolb
lcall
fimuls
out
jnp
aam
jl
popa
dec
jge,pn
pop
lret
push
xor
xchg
push
xchg
pop
lahf
mov
mov
push
mov
mov
in
dec
inc
lahf
fimuls
jae
mov
scas
fdivrs
push
bound
syscall
cmpl
stos
das
stc
mov
add
ss
push
inc
inc
jp
and
mov
popf
dec
cs
mov
mov
push
int3
cmp
popf
rcrb
pop
mov
sbb
add
pop
and
insb
add
js
enter
pop
mov
std
sarb
cld
fs
pop
pop
and
pop
xchg
int3
adc
cmp
mov
sti
insl
jns
imul
and
xorl
ja
mov
ret
dec
mov
push
decl
jbe
ficoml
adc
cmp
mov
cwtl
scas
sahf
imul
mov
and
mov
aam
sub
shll
std
jmp
and
fsubs
or
pop
out
fdivrs
cmp
pop
cmp
aam
inc
xchg
insl
test
mov
jne
pop
frstor
fldt
out
hlt
fisubrl
ret
sub
jno
mov
rol
adc
icebp
sahf
adc
int3
push
loope
imul
sti
std
lcall
dec
outsb
pushf
mov
les
pop
dec
jecxz
stos
dec
cmp
insb
cmp
cmpsl
test
jle
xor
mov
data16
push
shr
jle
insl
push
addr16
int3
push
dec
cmp
dec
xor
stos
scas
jae
in
mov
push
loopne
mov
adc
negl
fcom
push
popf
xor
dec
fwait
jecxz
xor
xchg
pop
daa
andb
imul
bound
addr16
xchg
aas
jno
push
dec
sub
lods
mov
imul
mov
stos
pop
push
push
popa
sub
xor
outsl
dec
loope
mov
inc
out
pop
ret
loopne
icebp
inc
push
aad
dec
sub
aam
lods
rorl
adc
nop
scas
das
mov
les
sahf
inc
push
sub
lock
mov
out
loop
ljmp
call
sub
xchg
in
add
mov
shrl
add
in
sub
mov
sahf
jne
es
lahf
push
das
xchg
test
pop
cmp
cld
xchg
cld
add
xchg
aam
nop
pop
pop
shrl
xchg
fldenv
inc
or
loop
mov
sbb
aaa
mov
jne
aam
mov
xor
popa
pushf
insb
sbb
das
push
sbb
mov
fwait
cmp
rclb
adc
rcrl
mov
out
jge
ja
das
xchg
sbb
movsb
fisubs
lahf
sub
movsb
adc
sbb
mov
das
fnstenv
lret
or
fistps
pop
decb
push
push
inc
push
out
scas
icebp
sbb
lret
test
and
in
sub
mov
xor
adc
in
in
cltd
and
int3
loop
jns
mov
dec
mov
fidivrl
lahf
scas
test
mov
aas
mov
adc
stos
outsb
pop
cmc
push
scas
inc
mov
je
inc
jns
mov
xchg
adc
iret
sub
mov
shll
inc
inc
daa
nop
adc
inc
pop
adc
ror
or
insl
pop
xchg
stos
rcl
cwtl
and
pusha
popf
dec
shlb
sti
es
fisttpll
or
movsb
lock
inc
bnd
cli
movsb
int
jns
pop
cmp
mov
loopne
in
xor
mov
or
xor
jno
and
or
xlat
pop
push
dec
inc
out
imul
cs
sbb
jb
and
gs
jg
loopne
test
addr16
psubusb
push
daa
test
sti
lret
inc
inc
ja
xor
jecxz
jge
dec
pop
mov
testb
mov
push
sar
lock
pushf
addr16
cli
clc
mov
lahf
or
movsb
push
pop
lret
repnz
mov
fsts
sti
cmp
jmp
std
fstpl
out
mov
dec
mov
pop
sub
scas
pop
adc
dec
xor
lods
and
popf
xor
jb
arpl
xchg
out
or
sbb
push
adc
xchg
push
inc
add
ror
lods
sbb
mov
pushf
orb
adc
push
lret
sbb
aaa
nop
cmp
popa
xor
addr16
pop
insl
xchg
arpl
movsb
xchg
lret
adc
insb
adc
sbb
xchg
ljmp
lcall
mov
cmp
into
gs
std
cwtl
js
test
fstps
mov
pop
call
cmp
mov
sti
les
xchg
mov
push
jno
sbb
lea
xchg
mov
sbbl
fwait
or
mov
ja,pn
xchg
mov
les
in
xor
or
or
inc
inc
fstpt
out
xor
mov
leave
add
push
out
clc
add
idivb
cmpsl
fmull
popa
rol
sub
jecxz
mov
add
stos
sub
dec
jle
fimuls
or
mov
cmp
jle
inc
mov
xor
pop
jmp
hlt
stc
lods
and
or
dec
pop
adc
jo
or
sub
loop
bound
cwtl
push
fldenv
fwait
mov
iret
push
xchg
mov
dec
mov
gs
jae
or
mov
mov
dec
dec
pop
jbe
shll
or
stos
pop
cmpsb
mov
or
arpl
sarl
lock
or
inc
pushf
stos
into
cltd
mov
mov
fisttpl
lahf
pop
fdivr
movsl
shufps
jle
pop
fidivl
mov
shrb
adcb
into
xchg
mov
pop
mov
mov
push
out
jl
add
mov
popf
out
push
add
out
sbb
pop
sbb
fsubl
pop
push
out
outsw
adc
pop
or
xchg
test
hlt
sbbb
xchg
pushf
adc
sti
gs
xor
test
ss
stos
fmuls
out
lahf
push
inc
sarl
fwait
fwait
mov
adc
out
cmp
movsb
xchg
push
flds
mov
xchg
inc
dec
sub
movsl
fisttps
mov
out
pop
mov
test
pop
and
mov
das
cmpsb
jnp
mov
shrl
jmp
cmp
xlat
adc
cld
test
mulb
jg
xchg
lods
xlat
sbb
popa
inc
mov
mov
aaa
sub
mov
lret
adcl
xchg
pop
and
and
call
push
int3
popf
add
jno
lcall
jmp
data16
mov
jg
jae
xor
cmp
ja
sub
sbb
in
mov
test
and
and
or
and
xorl
movsl
stos
mov
mov
outsl
out
add
mov
sbb
or
loope
mov
popf
sahf
repnz
clc
iret
jbe
sti
insl
nop
fistl
cli
insl
addr16
xchg
jns
or
sbb
jge
jb
mov
jmp
imul
es
pop
pop
jo
xlat
out
dec
call
xor
pushf
insb
inc
cmp
xorb
or
cld
pushf
hlt
mov
out
push
mov
aad
xchg
sub
dec
imul
adc
push
xor
cltd
loop
push
es
mov
and
daa
adc
shrb
mov
mov
jns
mov
mov
enter
mov
lret
shrl
aas
xor
or
ss
adc
sbb
push
sbb
pop
fbstp
mov
js
adcb
adc
xlat
add
out
fdivl
fcoml
push
movsb
and
imul
dec
mov
cmp
cmp
movsl
outsl
shrb
mov
test
mov
rcrl
mov
sub
and
leave
xchg
gs
mov
cwtl
jmp
cmpsl
cmp
arpl
sbb
test
inc
ja
push
data16
lods
mov
int3
stc
fdivrs
and
scas
cmc
lea
dec
jp
in
ret
icebp
int3
call
cmp
xchg
mov
outsb
andl
jns
cmp
mov
dec
add
add
inc
fmull
in
jl
and
mov
cmp
sar
xchg
xor
repz
or
scas
shrb
stos
mov
push
sti
outsl
xchg
add
cmc
roll
sahf
cmc
cmp
dec
push
inc
cmpsb
enter
fstpl
dec
xchg
fs
paddq
sarl
push
add
out
daa
jp
and
arpl
push
shrb
fdiv
jmp
inc
movsb
mov
mov
mov
pop
ret
dec
outsb
sbb
adc
std
lret
jo
adc
mov
sub
icebp
test
pop
sub
lret
ret
adcb
aas
sarl
lods
jno
xor
xchg
je
fists
test
xchg
and
scas
sub
push
cs
mov
and
inc
and
inc
xor
repz
arpl
and
repz
jae
std
and
imul
iret
ds
out
or
fucom
cli
xchg
pop
mov
or
jns
jns
bound
rcrb
inc
inc
add
aam
push
imul
push
jnp
mov
in
addb
mov
mov
cwtl
aam
push
cli
imul
into
sub
and
mov
aad
ja
xchg
mov
mov
insb
dec
loope
sbb
les
push
test
cmp
sub
add
xchg
in
andl
push
test
rcll
xchg
mov
push
and
and
es
dec
stos
mov
fadds
negb
ret
push
incl
jge
dec
mov
in
cltd
dec
xchg
cmp
adc
sbb
adc
cltd
xor
inc
std
out
pop
dec
xchg
inc
or
test
inc
addr16
add
jmp
test
push
and
mov
inc
lea
dec
int3
inc
mov
sbb
push
cmc
sti
xor
into
jns
mov
out
incb
ret
mov
popf
cmp
fisubrs
fisubrl
mov
bound
shll
cs
mov
add
dec
into
inc
mov
stos
out
inc
xchg
xchg
push
add
push
push
dec
in
mov
xchg
out
push
aad
scas
cltd
inc
repnz
test
adc
iret
adc
in
pop
xchg
add
inc
fs
fisubrs
daa
aas
bound
icebp
xor
cmp
repz
push
iret
insl
imulb
dec
cli
out
sahf
ss
mov
fistpl
inc
xchg
mov
scas
incl
xchg
jmp
jge
insb
test
mov
fcoml
addl
xchg
nop
in
ds
les
mov
pushl
cld
leave
jmp
loope
pop
lea
dec
jge
mov
ror
cmp
and
dec
int
xchg
pop
dec
cmp
rorl
adc
imul
andl
cmp
pop
cmp
sub
xor
fs
insb
jg
addr16
jle
push
cmp
imul
jns
addr16
mov
mov
aad
test
mov
mov
addl
and
xchg
cmp
in
out
cmp
add
out
push
push
sub
std
into
in
loop
mov
pop
out
pop
les
mov
mov
enter
insl
repz
push
loopne
andb
jl
add
stos
jns
mov
or
imulb
push
sarb
aas
dec
mov
jmp
scas
imul
xchg
adc
jg
xchg
mov
dec
mov
sub
pop
mov
and
push
cltd
fxam
cltd
pop
scas
leave
shlb
pop
inc
mov
mov
bound
sub
mov
xchg
lret
pop
pop
call
cli
jb
sub
test
or
mov
mov
sub
cmpsb
pusha
push
std
iret
sub
xor
nop
lret
lods
and
mov
mov
fmuls
or
cmp
jbe
or
mov
add
jnp
mov
sub
mov
and
outsb
push
inc
mov
shl
adc
sti
es
lods
pushf
pop
or
mov
push
fiadds
adc
and
inc
push
cmc
inc
sub
mov
filds
cmp
mov
pop
sub
cs
fbld
xchg
xchg
lods
imul
test
adcl
xchg
cmp
pop
xor
icebp
cmpsb
sti
cmpsl
pop
xlat
subl
jecxz
ds
in
fsubrs
test
insb
mov
adc
mov
pop
fmulp
xchg
add
cmpsb
push
leave
cmp
popf
es
mov
repz
lds
clc
out
pop
outsb
adc
shlb
xor
xor
mov
jg
stc
out
outsb
xor
stc
sub
ret
pop
jae
pop
stos
dec
in
cmpl
fimull
inc
mov
or
mov
xchg
inc
rcl
mov
loopne
inc
or
movsbl
pusha
shl
push
jb
and
sub
fiadds
xor
call
inc
sbbl
xor
mov
push
repz
fisttps
mov
adc
out
or
mov
mov
push
or
or
and
add
sti
pushf
or
pop
lret
mov
push
loopne
xchg
mov
icebp
mov
push
mov
mov
fwait
inc
mov
lods
in
cs
xlat
ss
lds
out
data16
in
mov
arpl
adc
in
stc
popa
and
push
ret
std
cmp
pop
sub
incb
cltd
stos
pop
pop
icebp
das
addb
push
pop
xor
pop
cmp
or
cmpsl
jg
insb
dec
jle
ret
pop
es
sbb
clc
and
shrb
mov
adc
ffree
xchg
xchg
call
push
sub
pop
ljmp
fidivs
mov
filds
xor
pop
lcall
jecxz
dec
pop
in
push
push
xchg
mov
inc
enter
add
cmp
stos
inc
ja
nopl
pop
sub
std
and
xor
mov
ror
xor
push
xchg
mov
add
addr16
inc
lret
loope
dec
test
loopne
or
dec
lock
push
sub
sub
rcrl
ret
or
pop
and
shrb
sub
mov
outsb
lds
push
sbb
test
ljmp
mov
lahf
insb
movsl
cwtl
shl
cmpsl
jmp
mov
and
cwtl
fcompl
in
push
cld
cmpsb
inc
sbb
xor
mov
sbb
int3
orl
jbe
movsb
adc
lret
ljmp
mov
push
scas
mov
loop
and
or
dec
xchg
arpl
outsl
xchg
cld
fdivl
push
shrl
ljmp
and
lods
sbb
lds
popf
adc
arpl
icebp
shlb
push
push
mov
pushf
loopne
mov
lret
imulb
cmp
push
les
xchg
push
int3
andb
rclb
sbb
cs
lods
les
lret
std
and
aad
fcoml
rorb
mov
mov
psubusb
sbb
loopne
and
sti
add
lret
bound
mov
jle
adc
push
movsb
mov
jbe
adc
jne
cmc
ficomps
jecxz
push
popa
sbb
test
push
push
jmp
aas
adc
cmp
cwtl
out
imul
and
inc
rcl
ds
lods
mov
fidivl
imul
xchg
jl
je
mov
bnd
loope
mov
inc
aaa
mov
cli
inc
mov
aad
out
sahf
iret
test
cs
pop
xchg
pop
mov
xchg
adc
fildll
xor
jo
or
xchg
mov
flds
sbb
lret
movsl
data16
in
sbb
cmc
inc
clc
or
sub
jo
icebp
mov
cmp
pop
arpl
mov
insb
sbb
lds
sub
dec
mov
jmp
add
or
es
stos
inc
repz
sub
sub
pcmpeqd
lods
add
orb
fnstsw
jge
leave
xchg
xchg
in
cmp
lods
mov
das
shll
jp
mov
js
lret
mov
das
rorl
xlat
or
pop
int
mov
pop
inc
lea
push
push
aaa
xor
lahf
xor
xchg
enter
nop
xor
xor
xchg
clc
lret
fldl
fdivl
pop
jecxz
mov
pop
mov
sub
mov
repnz
or
fisubs
lods
push
or
adc
or
adc
jb
out
adc
inc
jge
out
inc
pushl
mov
cmp
pop
std
or
cmpsb
mov
out
jne
iret
dec
mov
mov
dec
cmp
mov
cs
loope
sbb
pop
ljmp
xchg
cmp
mov
adc
lods
dec
jg
and
add
int3
cmp
dec
push
mov
push
ret
sub
loopne
out
enter
push
insl
jns
push
add
cmp
sub
xchg
sub
mov
in
aaa
jge
sub
inc
popf
mov
push
jge
rcl
rorb
loop
fidivs
mov
out
imul
popa
out
stos
push
pop
xchg
jmp
pop
fidivrl
arpl
out
ret
mov
lahf
xor
ss
add
cwtl
lret
test
jbe
mov
test
jg
xchg
push
xor
mov
xchg
sbb
sbb
sub
enter
shll
pop
test
outsb
push
in
sbb
push
loop
fistpll
inc
cmp
pop
andb
iret
add
inc
jle
mov
cltd
test
xchg
sbb
pop
add
dec
rolb
jbe
das
cs
int3
psubsb
decl
das
mov
cltd
ja
inc
enter
xchg
mov
sti
xor
xchg
cmp
dec
loopne
pushl
inc
sub
cs
push
repnz
pop
shrl
fcoml
jp
aas
pop
mov
aad
push
jecxz
popa
jb
hlt
mov
out
stos
movsl
mov
adc
adc
clc
mov
xchg
push
imul
push
or
push
bsr
pop
cltd
mov
jecxz
mov
imul
mov
inc
sub
dec
ds
and
pop
mov
int3
imul
popf
lret
arpl
mov
jb
inc
iret
addr16
jle
sar
lcallw
dec
pushf
leave
cmp
jmp
adc
pop
adc
pop
sbb
push
and
xchg
lods
pop
dec
aaa
jl
cmpsl
xchg
add
mulb
adcb
pop
or
iret
daa
outsb
push
dec
daa
xor
pop
pop
shll
pop
loope
xchg
xor
push
bound
mov
dec
aad
stos
shrb
sub
mov
mov
bound
sbb
mov
pop
test
ret
mov
jbe
inc
int3
cmp
jle
outsb
les
jge
sub
and
mov
pop
leave
out
stos
dec
in
inc
or
push
loop
add
mov
adc
adc
jmp
rolb
mov
sub
popf
mov
mov
arpl
pop
mov
lret
dec
pop
xchg
movl
inc
jp
and
cmc
out
mov
hlt
xor
add
sarb
jbe
or
and
sub
cmpsb
push
ds
mov
xor
lret
add
add
sub
ret
fsubrs
pushf
xchg
cwtl
pop
xchg
mov
mov
push
and
repnz
sbb
bound
push
mov
inc
mov
push
imul
mov
mov
add
imul
cmpsb
jne
and
lea
stos
in
out
or
xor
mov
loopne
lods
lods
and
mov
outsl
mov
out
test
jp
lahf
call
inc
cs
stc
dec
xor
mov
mov
cmc
insb
movsb
adc
lcall
or
loop
fiaddl
cld
movsl
lea
shlb
push
mov
adc
xor
sbbb
pushf
fnstcw
loopne
nop
mov
testl
xchg
ljmp
int
jns
dec
test
dec
stos
flds
test
shl
pop
add
cmc
adc
ja
adc
adc
jbe
push
pushf
adc
mov
pop
outsl
cli
mov
mov
dec
fdivs
jl
aad
insb
mov
mov
xchg
mov
adc
jle
adc
jno
mov
sub
mov
cwtl
mov
dec
mov
arpl
fwait
orl
int3
mov
and
xchg
fsubrl
aaa
sbb
adc
xor
popf
sub
or
psubsw
and
lock
push
fstpt
xor
mov
mov
rolb
mov
cmp
mov
xchg
add
les
aaa
sarl
push
nop
addr16
scas
fcompl
adc
out
mov
jo
sub
xor
dec
jb
mov
pop
repz
fistl
xchg
xor
in
xor
and
lret
pop
in
mov
mov
rorl
clc
ds
pop
lret
iret
dec
push
js
out
ljmp
mov
popf
add
das
dec
push
push
jmp
ja
sbb
sbb
jne
das
mov
push
cwtl
jb
dec
test
sbb
xor
addr16
enter
int3
rcrl
and
bound
mov
jle
xor
mov
shrb
adc
dec
imul
sbb
sbb
lahf
sub
sub
xor
jns
mov
insl
cmc
iret
xchg
inc
mov
jns
lods
sub
jae
and
mov
test
dec
inc
enter
mov
nop
or
sub
sub
outsl
inc
out
inc
jo
fildll
push
bsf
cltd
push
mov
in
lea
xchg
fdiv
imul
xchg
inc
push
in
imul
inc
mov
pusha
dec
xchg
mov
jo
push
out
fcoml
loop
arpl
cld
add
dec
hlt
stc
xchg
xchg
in
inc
xor
xor
jp
xchg
lds
or
fsubrp
nop
ja
mov
cmp
inc
popa
dec
dec
fstl
outsb
push
ret
stc
in
mov
pushf
adc
and
mov
fwait
bound
lods
or
xor
xchg
in
push
mov
cmc
dec
push
std
inc
int3
mov
outsl
mov
push
jno
jb
lock
das
cltd
dec
xchg
out
mov
cld
arpl
aas
inc
fistpll
and
lret
cmp
add
cmp
inc
stc
xor
push
sarl
scas
mov
mov
imul
mov
rorb
jo
push
lock
dec
mov
or
outsb
mov
mov
pop
sub
das
fs
mov
mov
add
jl
test
fnstcw
push
les
outsl
bound
and
fwait
rcrl
inc
in
loopne
cs
ja
std
imul
iret
roll
or
sub
outsl
mov
push
xor
popa
jl
bound
mov
fmull
and
sbb
div
push
call
and
mov
mov
cmp
and
jbe
movsb
adc
jle
sub
jo
mov
mov
in
into
in
push
loope
pop
test
sbb
lretw
and
cmc
sti
sbb
aas
dec
dec
cmp
cwtl
ret
inc
xchg
shl
subb
sub
sub
lea
adc
mov
jnp
mov
sub
cmpsl
fisubs
negl
adc
hlt
xor
gs
mov
lods
sbb
inc
sub
xchg
test
push
loope
repz
insl
lock
dec
scas
in
negl
lret
call
aam
lret
adc
cmp
stos
test
jb
xor
mov
insl
js
sbb
jbe
push
xchg
mov
xor
push
push
push
pop
mov
jg
xchg
je
add
and
psubd
sub
fs
rcl
jle
and
sti
fbld
andl
test
iret
popf
or
mulb
aaa
shll
inc
imul
fsubrl
jne
sarb
icebp
pushf
stos
in
iret
push
test
adc
cmpsl
push
arpl
loope
ljmp
pop
stos
scas
dec
inc
push
jge
loopne
xor
ffreep
cmp
test
pop
cmova
push
push
dec
cmp
int3
xchg
movsl
cmp
lds
sbb
xchg
in
xchg
push
mov
pop
lahf
icebp
mov
xchg
mov
cli
pop
lods
arpl
stos
test
push
test
mov
push
jo
enter
fsub
xchg
mov
lea
movl
out
fcomps
lods
pop
and
sub
data16
ss
scas
int
pushf
pop
inc
rolb
test
add
pop
sti
addr16
add
out
jb
lret
bound
sbb
das
add
aas
add
fst
dec
pop
pop
or
mov
pop
add
inc
rorl
in
dec
inc
fstps
push
add
sbb
mov
or
push
lock
cwtl
ss
sahf
scas
pop
mov
cmc
or
xchg
fidivl
jb
aaa
pop
and
lcall
adc
and
mov
push
insl
xchg
sub
ja
in
mov
scas
das
mov
cmp
pop
mov
sbb
dec
shlb
mov
jae
push
or
add
xor
testl
mov
jg
xlat
cld
fldt
pop
inc
loopne
fstp
xor
add
fsin
popa
sbb
cmpsb
xchg
call
sarl
pop
das
fstps
cmp
push
pop
jle
fwait
imul
add
add
sbbb
push
and
xchg
push
dec
andb
insl
pop
jle
xor
or
sub
aam
add
dec
mov
dec
add
pop
xchg
add
lea
inc
imul
and
add
dec
pop
aaa
repz
dec
les
std
int
ret
int
push
fsubs
push
arpl
mov
jg
xor
mov
out
xor
cmp
adc
adc
or
rorb
mov
xchg
dec
aam
mov
xchg
adc
add
or
push
inc
lahf
test
jp
jmp
fwait
mov
pop
hlt
int3
cmp
out
push
in
aam
rol
je,pn
mov
xor
jmp
sub
mov
adc
dec
pop
mov
dec
pushf
or
idivl
outsb
inc
jno
jbe
pop
cwtl
jbe
jae
fxtract
cld
jge
ret
lret
and
push
sbb
es
jbe
inc
scas
mov
jecxz
add
movsb
loop
pop
in
sti
jnp
xchg
inc
xor
fidivs
repnz
push
push
in
fcoms
pop
cmp
xor
out
push
inc
jnp
int
push
aad
je
or
scas
sub
jmp
lret
mov
lret
movsl
push
sub
fstl
lds
fdivl
sbb
cmpl
jmp
dec
xchg
or
mov
pop
and
popa
sub
jae
dec
sub
cmp
sarl
jne
xor
enterw
mov
movsb
dec
sub
add
lods
inc
stos
scas
leave
cmpb
lods
xchg
xchg
inc
pop
lret
cmp
pop
add
dec
push
push
lock
js
dec
lcall
leave
xorb
fld1
mov
jge
leave
jo
adc
ret
repz
xchg
jne
mov
dec
mov
push
cmpsl
dec
push
aaa
adc
adc
mov
pop
dec
mov
icebp
cmc
xor
cwtl
loope
jb
mov
lret
out
idivb
push
push
fcomps
xchg
ret
fsubs
cltd
cwtl
adc
repz
ret
jae
insl
mov
jg
xchg
jle
push
int3
adc
and
scas
pop
stos
mov
push
push
mov
mov
push
push
pop
jae
cmp
sbbl
outsb
push
into
cmpsb
in
je
add
shrl
cmc
cmp
push
or
js
add
jmp
adc
or
bound
sbb
cmp
xchg
pusha
dec
add
iret
into
lds
pop
loopne
fcmovne
ror
mov
cmc
xor
sti
movsb
in
stc
popa
inc
icebp
lea
in
or
add
fadd
push
mov
pop
push
mov
dec
mov
inc
inc
outsl
jecxz
ret
mov
jne
ljmp
mov
out
mov
aaa
cld
mov
pop
js
push
out
and
sarb
sbb
xor
aam
insl
incb
sbb
lods
adc
push
mov
jo
lret
stc
test
add
shl
xor
dec
imul
pop
mov
or
add
xchg
sti
sbb
sub
imul
pushf
lea
and
lds
call
ds
lret
outsb
lea
xchg
pop
pop
cli
sub
call
lock
jb
pop
roll
fwait
icebp
mov
jl
add
dec
es
or
sbb
aam
les
cli
scas
push
xor
adc
inc
pushf
xor
mov
mov
sub
push
dec
jne
icebp
mov
and
and
xchg
jae
sbb
lock
xor
mov
and
push
mov
mov
sbb
lcall
out
jecxz
in
pop
mov
add
adc
ss
xchg
mov
sbb
dec
popf
adc
cld
lret
jae
inc
or
lods
adc
cmp
pop
or
mov
jne
jecxz
cmc
jno
sbb
clc
jnp
mov
jne
jae
mov
clc
fsts
out
jp
es
cli
push
fdivl
dec
jg
mov
sti
pop
fistpl
fcomi
loopne,pt
addr16
mov
testl
mov
or
gs
sbbb
push
mov
mov
sbb
mov
in
in
mov
mov
jmp
cmp
push
or
or
adc
imul
xor
mov
ss
enter
bound
xchg
stos
mov
cmc
movsl
decb
popa
jle
push
pop
inc
outsb
jp
pop
jmp
pop
cmp
jge
push
movsl
push
insb
dec
lods
xor
test
scas
pop
fsub
adc
jno
dec
inc
mov
push
mov
cmp
adc
add
push
adc
mov
mov
testl
dec
imul
jge
xor
jb
push
iret
pop
imul
fs
fsubl
xchg
jbe
add
fnstenv
ds
adc
pushf
mov
into
mov
and
and
push
cmp
sbb
jecxz
imul
andl
sti
inc
shlb
mov
mov
int
lock
xchg
cwtl
xchg
mov
aad
popa
mov
lds
andb
sub
xor
lret
add
xchg
xor
add
enter
jp
jb
int
das
jae
pop
fidivl
xchg
fs
xchg
mov
cld
add
aas
insb
cmp
or
das
fiadds
test
mov
jne
mov
inc
or
xor
ds
cmp
push
ret
cwtl
jbe
adc
xchg
js
fildl
sub
add
bound
ficoml
call
pop
adc
sub
popf
pop
es
pop
push
sti
test
test
aam
dec
jle
sbb
shl
xlat
xchg
dec
imul
dec
mov
add
aad
popf
sahf
cmc
pop
les
jl
out
cmc
push
rolb
roll
add
cmp
scas
int
insl
or
pop
push
rcll
scas
inc
inc
mov
pop
mov
sbb
mov
jmp
sti
and
push
mov
or
pop
jb
fisubl
mov
sbb
int3
mov
pop
aam
outsb
pop
cmp
mov
jae
test
mov
add
pop
ficoms
mov
fdivs
add
push
pop
pushf
loop
pushf
jbe
xchg
lods
dec
data16
inc
imul
xchg
sbbl
or
or
movsl
scas
rcrl
push
ja
mov
dec
mov
xchg
dec
pop
push
mov
fldenv
orl
push
mov
jae
lret
jnp
mov
inc
dec
sahf
cmpsb
aad
sarb
inc
xchg
orb
sub
pop
out
outsb
sti
fldl
push
inc
add
push
adc
leave
lahf
lahf
inc
push
dec
decl
ja
mov
mov
test
loope
add
and
bsf
out
adc
iret
push
pop
and
xor
es
lret
xchg
and
into
test
dec
mov
pop
testl
cmp
mov
mov
addb
filds
pop
push
cmp
adc
out
std
adc
mov
xchg
cmpb
lret
es
sbb
les
out
js
xchg
lahf
xchg
ja
fwait
sbb
pop
xchg
lock
inc
lods
adc
aaa
add
leave
xchg
mov
xchg
mov
jl
divl
add
clc
fstpl
out
fucomi
movsl
aam
mov
test
adc
fsubrl
pop
push
push
add
mov
subb
in
mov
xchg
je
xor
scas
mov
mov
push
pop
aaa
fsts
ret
test
xchg
jns
hlt
jmp
out
inc
xor
icebp
push
mov
je
loopne
les
jmp
push
xor
push
lahf
or
les
scas
jnp
and
mov
aas
or
push
cmc
fcompl
test
jmp
jecxz
out
add
pushf
push
cmp
cmpsb
mov
xor
cmp
cmp
and
xchg
outsl
lret
pusha
shr
and
cmp
add
or
pop
movsl
out
aaa
cmp
mov
arpl
adc
insl
outsl
mov
lods
mov
push
xchg
mov
xor
push
cs
push
pushaw
aam
cwtl
leave
scas
xor
mov
sub
dec
mov
sbb
test
mov
mov
cmp
xchg
xor
xchg
inc
aam
imul
fmull
mov
cmpsl
les
mov
enter
lods
jle
and
jp
nop
dec
and
mov
add
cmc
lea
lds
xor
lahf
inc
mov
popf
enter
adc
test
dec
xchg
mov
test
or
cmpsl
aaa
push
mov
lock
stc
shlb
pop
leave
aas
mov
xchg
sbb
and
int
lahf
leave
cmp
mov
pop
cmpsb
mov
lret
int3
std
push
jno
aad
push
mov
das
dec
xchg
aam
push
xorb
aaa
mov
mov
shrl
fsubr
sbb
sub
aaa
lods
cs
scas
movb
mov
rol
pushf
out
iret
push
es
mov
pop
or
test
jb
xor
xchg
xchg
push
stos
aam
cmc
add
xchg
xor
mov
and
sbb
jg
sbb
mov
sti
out
stos
xor
mov
pop
jecxz
push
jbe
xchg
iret
cmp
mov
inc
cmp
aas
xor
mov
xlat
push
out
sbb
xor
fisubrl
js
jae
mov
cs
dec
negl
ror
mov
xchg
xchg
leave
rcrb
aaa
pop
add
roll
frstor
sti
pop
fs
arpl
and
and
cmp
js
sub
mull
not
add
pop
imul
cmc
aam
shrb
xchg
in
repz
dec
xchg
cmpsb
addr16
cmpsl
fsubrp
orl
add
inc
jp
int3
repnz
cmp
xor
xor
push
pusha
or
das
and
mov
inc
add
pop
mov
dec
loopne
bound
in
push
jnp
loop
push
push
add
dec
shrb
xor
mov
cs
dec
dec
movsb
lahf
sbb
pushl
sarl
add
dec
addb
mov
sub
mov
xor
arpl
pop
and
jp
adc
fisttpll
rclb
and
sub
jne
popa
push
mov
mov
mov
dec
adc
push
popa
pop
or
adc
testb
lret
adc
inc
jno
bound
insb
sbb
sbb
xor
adc
mov
not
shrb
pop
ds
and
stos
jb
push
cli
mov
dec
push
fadds
outsb
mov
test
push
xchg
cmpsl
or
movsl
out
dec
push
jae
xlat
sbb
rcrl
fidivrl
mov
lahf
pop
sahf
pop
mov
movsl
out
cmpsl
pop
jae
xor
cmp
int
mov
inc
fld1
aaa
pop
mov
mov
addr16
loope
push
inc
je
nop
std
xchg
cmc
adc
clc
testb
inc
rcrl
sbb
and
lret
jne
pop
hlt
or
sbb
pusha
lods
in
pop
pop
add
push
shrl
mov
int3
jbe
es
or
pop
mov
loopne
or
insb
cmc
test
push
pusha
inc
data16
sub
adc
lds
mov
push
mov
lahf
aaa
jo
sub
dec
sub
call
shrl
stc
inc
jl
lahf
fucomip
fstpl
lcall
dec
pop
insb
mov
sbb
test
lret
mov
dec
aaa
pop
xchg
loop
xor
inc
add
xor
notl
pop
push
lods
lahf
std
mov
jno
dec
inc
mov
push
add
or
add
outsl
adc
test
lds
insl
pop
adc
mov
mov
push
sub
aad
das
inc
popf
and
fiadds
sbb
mov
testl
std
jl
icebp
lret
rorl
adc
iret
mov
fbstp
sbb
cltd
sbb
pop
in
aam
call
pop
xchg
ds
cmp
popa
inc
pop
cmp
mov
int3
idiv
enter
idivb
fldl
pop
je
fs
xchg
or
xchg
in
add
sbb
scas
push
mov
clc
lret
jnp
cmpsb
je
pop
scas
and
dec
or
mov
int
push
and
xor
mov
scas
xor
aad
scas
mov
mov
jmp
xor
cmp
arpl
xchg
add
pop
roll
test
xchg
in
push
inc
popf
add
mov
leavew
das
mov
sarb
cmp
jo
sti
pusha
pusha
sahf
jae
lods
push
jo
dec
loop
pop
insl
std
divb
cld
pop
mov
mov
jmp
jge
loope
push
test
pop
js
das
dec
mov
cmpsb
insb
jno
add
inc
pop
add
repz
or
jmp
aam
push
mov
xor
xor
add
mov
fmuls
addb
mul
repnz
fstl
mov
push
gs
loope
fcoml
aam
in
inc
and
adc
movb
jmp
fidivs
loopne
or
sbb
xor
scas
add
test
jne
bnd
xchg
test
push
stos
nop
dec
clc
mov
or
insb
in
jbe
and
movlps
sub
loop
addb
jge
inc
dec
adcl
ds
xchg
xor
push
mov
push
mov
repnz
jg
inc
aaa
sahf
lods
inc
loop
mov
xor
jae
cwtl
or
stos
push
ljmp
loop
add
push
aaa
sbb
in
adc
cli
xchg
inc
inc
and
mov
insl
add
addb
fldcw
bound
and
pop
loopne,pt
or
dec
fisubs
pusha
mov
push
pop
add
and
adc
jbe
hlt
and
lcall
jb
and
mov
fwait
out
cmp
pop
test
imul
push
xor
outsb
mov
cmp
mov
int
inc
cmp
rclb
xchg
or
lret
inc
xor
orps
daa
jbe
enter
fisubs
jmp
mov
xor
fwait
les
xor
loopne
scas
xor
pop
lods
xor
movsl
divb
jmp
xchg
loop
add
mov
cmpsb
push
mov
xchg
dec
push
adc
pop
xor
and
xchg
fistpl
or
sbb
sbb
stos
test
pop
mov
ljmp
dec
jb
dec
fsts
inc
mov
scas
scas
adc
imul
mov
adc
or
pop
dec
popa
jge
xchg
push
sub
push
inc
repz
fistl
jecxz
out
imul
cmp
addr16
lret
mov
cmp
inc
jne
dec
data16
add
xchg
mov
inc
dec
or
dec
sub
sub
add
sarl
std
loop
dec
inc
jp
cwtl
out
lcall
cmp
mov
cmp
mov
dec
adc
xor
ljmp
mov
fwait
inc
push
fisubs
xchg
fsubl
adc
mov
mov
xchg
mov
dec
scas
mov
orl
outsb
adc
jecxz
xchg
lock
sub
popf
xchg
data16
filds
mov
cmpsl
mov
mov
divb
outsl
push
add
jae
cli
mov
sahf
cmc
cli
cwtl
add
jecxz
out
imul
ljmp
pop
pusha
cs
aaa
jne
push
push
in
fwait
pop
jnp
inc
jnp
inc
and
testb
aad
mov
push
call
stos
imul
fucomp
push
mov
lret
bound
stos
popa
push
inc
nop
decl
movsb
gs
loopne
sub
jne
ja,pn
jp
push
push
jge
outsl
dec
loope
imul
adc
pop
mov
or
in
push
test
sub
pop
pop
mov
sbb
cmp
loopne
push
sbbb
lods
repnz
enter
jmp
cltd
enter
add
lret
cs
mov
add
add
rorl
and
stc
mov
push
jle
cmp
mov
or
or
je
pushf
fwait
insb
mov
xchg
mov
cmp
dec
test
imulb
mov
ret
mov
sbb
and
fwait
mov
add
out
popf
pop
add
lock
pop
lcall
outsl
mov
addr16
repz
addb
and
jns
out
sahf
movsl
mov
mov
cld
insl
test
xchg
ss
sahf
rcrb
inc
push
nop
inc
or
pop
bound
xchg
jl
push
push
cmp
cltd
fwait
xor
cmp
aad
mov
jl
push
lods
fsubl
pop
xchg
imul
cwtl
and
mov
xor
dec
enter
push
in
sbbb
dec
popa
sbb
clc
cmp
mov
mov
xchg
cmp
in
in
xor
pop
cli
pop
xor
inc
mov
shll
xor
xchg
je
adc
and
mov
in
mov
and
ficomps
push
leave
push
push
fimuls
inc
lahf
inc
fadds
push
arpl
test
jl
negl
inc
sbb
xchg
rcl
pop
mov
or
mov
ret
sbb
dec
fisubs
test
adc
inc
sti
stc
test
out
lea
mov
ds
xlat
in
mov
and
movsl
ss
fcmovne
and
pop
sub
cmpsb
mov
mov
in
lea
push
mov
dec
mov
out
fsubs
fwait
jge
mov
fldenv
out
shrb
scas
or
sbb
push
in
push
mov
into
aam
sarb
jnp
es
in
jge
pop
cmpsb
pop
into
mov
out
add
sub
pushf
hlt
jl
dec
and
mov
jb
inc
stos
jge
pop
xchg
es
scas
jmp
out
push
psrad
push
mov
push
aam
stos
shll
clc
xor
cmpl
push
lods
std
xor
cltd
mov
pop
lods
int
int
jb
jmp
push
aas
and
inc
loope
jo
pop
inc
xchg
jno
adc
mov
jno
sub
lahf
mov
rolb
push
repz
cltd
ret
dec
mov
mov
add
js
dec
lcall
ds
repz
sbb
aad
or
shl
add
xchg
inc
mov
iret
mov
push
neg
dec
pop
mov
lods
sub
or
push
mov
fisttpl
mov
test
nop
lock
add
add
push
enter
inc
jns
inc
xchg
pop
sub
ror
adc
adc
stos
iret
xor
push
dec
stos
sbb
enterw
xchg
mov
mov
adcl
xor
dec
fildll
stos
xchg
aad
mov
add
popfw
test
repz
addr16
xchg
stos
xchg
iret
jp
inc
test
out
ljmp
or
xchg
mov
mov
adc
xchg
cwtl
fucomip
and
pop
and
pop
mov
xor
or
stos
cltd
divb
ljmp
into
cwtl
es
stos
mov
or
stos
sbb
decl
xorb
loop
mov
cmp
fstl
pop
test
cmpl
mov
and
sub
sbb
in
add
mov
push
jg
mov
imul
pop
nop
sbbl
es
cmpsl
sbb
cmpsb
mov
dec
in
mov
adc
call
dec
sub
popa
sbbl
lods
fcomps
bound
test
xor
aaa
pop
cmp
mov
or
mov
bound
pop
call
inc
arpl
pop
push
jb
cld
fisubl
jnp
and
push
inc
int
test
test
in
xchg
fs
aaa
push
and
mov
js
cmp
jbe
aam
mov
sbb
test
outsb
shrl
xchg
and
cmc
leave
mov
mov
pop
mov
and
lods
aaa
inc
out
adc
sub
sbbb
or
dec
mov
cld
aaa
hlt
sarl
pop
in
mov
sarb
lock
xchg
stos
repz
adc
loop
les
xchg
pop
lcall
mov
adc
aaa
xchg
rorl
push
and
loope
std
sub
adc
out
imul
cmp
xor
push
clc
andb
xor
and
fucomp
mov
cmc
xor
fdivr
add
pop
movsl
mov
loopne
mov
fwait
out
mov
mov
ljmp
out
insb
mov
and
icebp
lea
int
dec
mov
popf
ljmp
out
and
jmp
roll
jo
jecxz
xchg
lret
sbb
jbe
in
xchg
lea
ret
add
adc
loope
outsb
push
lods
lahf
xor
sbb
pop
pop
lahf
adc
test
adc
push
bound
mov
mov
mov
aam
lods
adc
cs
push
imul
sub
ret
pop
cmpb
inc
jp
mov
ds
jbe
fdivs
push
jle
subl
lea
mov
mov
fcomps
cmpsb
sbb
sbb
rclb
mov
add
jno
pop
scas
jg
jne
cwtl
sub
jnp
iret
bound
out
sub
pop
je
mov
add
inc
mov
push
addr16
sahf
into
fstpt
xor
insl
arpl
xor
xchg
push
sub
inc
and
cmp
jge
fs
in
mov
jl
xchg
roll
fwait
and
inc
and
popa
cmp
pop
jmp
push
js
popa
enter
out
fsubl
cmp
xchg
into
clc
mov
notl
push
or
lcall
out
and
xchg
and
cmc
sub
cmp
cmp
imul
stos
sbb
mov
push
and
xor
std
sahf
sub
add
incl
cltd
in
pusha
jg,pt
push
dec
jge
xor
dec
mov
pop
adc
pop
sbb
jnp
call
jbe
mov
stos
clc
mov
out
aaa
mov
xchg
cwtl
sbb
jmp
cs
mov
jb
jno
or
adc
movsl
out
mov
jg
lret
mov
mov
scas
jb
cltd
dec
add
imul
out
lret
adc
add
lret
shll
arpl
roll
sub
in
jmp
rorl
mov
jo
out
xchg
pop
call
push
ret
adc
bound
xchg
adc
mov
cmp
cmp
jmp
inc
mov
andb
mov
das
shll
jg
mov
adc
fst
pop
dec
mov
adc
mov
dec
ret
adc
lods
sbbl
cmpl
xchg
lock
addb
out
fisubs
in
inc
rclb
cld
cmp
cmp
and
pop
movq
pop
mov
ja
shrl
inc
cmp
lcall
mov
jmp
cmpl
mov
mov
sub
and
mov
jo
rcr
jmp
jae
std
clc
add
inc
mov
xchg
add
adc
ret
shll
pusha
and
int
and
xlat
dec
pop
xchg
jno
pop
push
ret
add
and
roll
iret
xor
dec
jb
xchg
call
test
jnp
xchg
cmp
fdivrl
mov
and
andl
loop
and
fisubl
sbb
add
push
es
cmp
in
ljmp
dec
aam
cmpsl
repnz
outsl
pop
cmp
fidivrl
inc
fisttps
lea
cmp
mov
mov
sbb
sbb
jnp
cs
popf
pop
rclb
gs
scas
daa
or
and
push
cltd
xchg
outsb
jno
cmc
jae
pop
sbb
cmpsl
adc
fistpl
jecxz
mov
movsl
cmpsl
jle
pop
push
jge
jae
dec
repz
jno
jg
outsl
notl
fbld
nop
cmp
pop
jb
into
jne
ret
sub
sbb
dec
cltd
mov
mov
xchg
data16
cmpsl
aad
test
aam
je
add
jns
test
pop
add
ror
addl
and
push
outsb
movsl
loop
sbb
fdivr
cli
sbb
inc
jnp
pop
lock
fwait
decl
aam
dec
mov
jl
xchg
outsb
cli
insb
out
cld
das
adc
mov
stos
pop
cmp
inc
sub
cltd
mov
push
add
outsb
call
into
adc
cwtl
pop
out
and
and
test
jp
adc
movsl
inc
pop
ret
iret
aas
mov
iret
cmp
int3
mov
push
push
in
bound
ret
inc
xor
imul
iret
pop
les
call
ficoms
test
xchg
mov
mov
cwtl
cmp
jae
pop
jl
mov
push
or
loope
and
mov
rcrb
push
arpl
mov
out
call
test
sahf
stos
ficomps
pop
imul
or
sub
sub
je
mov
xor
mov
or
frstor
out
fists
xchg
inc
push
xlat
xor
jne
loop
fmull
dec
nop
push
in
sbb
sub
push
pushf
ss
and
hlt
push
pop
push
or
ja
and
fadd
push
adc
adc
mov
mov
gs
std
fcoml
jp
lods
mov
dec
nop
shrl
cmpb
lahf
push
jno
hlt
or
xchg
adc
xor
xlat
jne
xchg
mov
pop
ret
xchg
leave
je
outsb
clc
aas
stos
outsb
sbb
jo
call
xchg
push
inc
je
pop
daa
clc
out
mov
mov
sbb
inc
cmp
scas
xor
or
and
sarl
andl
test
subl
push
push
in
sub
repnz
popa
jns
clc
out
lahf
shlb
xor
pushf
cmpsl
nop
insb
xchg
ds
fcoml
mov
sub
adc
add
dec
ror
xchg
adc
and
in
cld
loope
adc
lcall
jne
fs
sahf
iret
and
mull
jno
dec
fldenv
lods
stos
ret
aas
jno
dec
mov
cmpsb
sub
rcll
sbb
or
mov
adc
out
daa
daa
inc
loop
cli
shl
cmc
jnp
ja
push
add
loopne
jge
mov
or
scas
jb
sub
fninit
fnsave
jne
fincstp
stos
outsl
cmp
enter
cmp
mov
xlat
or
roll
scas
scas
mov
push
iret
fwait
cltd
out
in
out
dec
subb
subb
jb
fnstsw
pop
or
ja
js
mov
out
inc
xchg
mov
addr16
mov
roll
arpl
adc
pusha
mov
mov
outsb
sbb
shlb
ror
ret
push
loopne
arpl
add
dec
in
sub
mov
cld
aas
xchg
adc
pop
cmp
xor
dec
pop
xor
mov
es
push
inc
lods
cmp
mov
dec
out
test
push
xchg
inc
mov
in
sbb
push
pop
stos
das
xor
das
lret
xchg
and
out
dec
jo
btr
adc
idivb
mov
ficomps
ss
mov
scas
or
fcomip
out
mov
sbb
stos
add
or
divl
xor
or
pop
inc
cmc
lods
bound
popa
push
inc
arpl
add
dec
inc
mov
cmp
cld
scas
hlt
and
xor
in
test
xchg
mov
inc
adc
adc
or
mov
popf
es
mov
mov
loopne
mov
subl
aaa
sbb
addr16
stc
lock
inc
je
mov
in
adc
sti
xchg
test
sub
into
pop
push
cmp
insb
add
int
pop
xor
lods
mov
or
mov
xor
sub
cld
ret
pop
dec
lods
jb
inc
or
out
lcall
sbb
or
lock
sub
mov
rcll
in
cmpsl
pop
rol
and
arpl
js
sub
and
call
clc
popf
push
out
sub
mov
pop
cltd
jne
cmp
out
movsl
push
leave
pop
mov
imul
jne
add
int
stos
scas
cmp
adc
xchg
fists
in
iret
cmp
xor
sarb
pop
mov
std
add
or
popl
ds
aad
dec
in
inc
sub
mov
arpl
cmp
mov
lret
out
mov
repz
xor
xor
cld
mov
mov
sbb
dec
adc
dec
jg
mov
inc
aam
push
sbb
xchg
add
into
mov
xor
inc
cltd
mov
fistps
mov
dec
scas
pop
cmp
push
and
xchg
fistl
mov
and
mov
lea
adc
push
push
dec
aas
mov
xor
inc
sub
xor
scas
test
repz
int3
or
pop
fwait
add
loop
inc
sahf
faddl
dec
and
jno
out
mov
out
pusha
scas
cmp
pop
adc
and
cs
cmp
nop
inc
jle
or
pop
clc
sti
insl
xor
shl
lahf
test
stos
into
std
pop
cli
xchg
shrl
ret
pop
in
mov
sub
xchg
jb
mov
or
xchg
into
in
in
shr
into
test
test
dec
add
push
in
mov
sbb
shl
or
repnz
xchg
mov
lock
mov
jge
repnz
jmp
scas
cld
mov
sub
sub
outsb
mov
adc
mov
adc
jo
stos
or
jg
gs
je
out
sub
mov
xchg
ret
sbb
pop
addb
push
push
stc
cld
fwait
pop
xor
sbb
inc
data16
and
pop
adc
insb
sub
ja
mov
mov
pop
cmc
sbb
leave
mov
sarb
xchg
mov
or
add
out
mov
sub
jo
sbb
pop
loopne
cmp
mov
add
pop
sub
loope
or
inc
adc
or
push
icebp
cs
adc
repnz
inc
dec
cmp
cwtl
jmp
and
movsl
inc
int
cmp
jne
mov
inc
sarl
xchg
notl
cmc
push
mov
jae
iret
mov
daa
sub
sbb
xor
lods
or
lcall
orb
fsts
push
sbb
std
push
push
dec
mov
inc
lods
pop
into
sub
adc
fs
mov
lea
stos
xchg
pop
push
mov
imul
in
pop
es
inc
aaa
xor
xchg
stos
or
and
sbb
pusha
xor
ret
mov
push
or
pop
sbb
xor
into
nop
pop
inc
pushf
xor
sahf
xchg
mov
mov
mov
pushf
dec
insb
aaa
jbe
dec
xor
movsb
hlt
sbb
add
dec
fdivrl
in
add
aaa
xor
cmpsb
adc
or
lea
sub
pop
in
mov
pop
adc
dec
dec
out
cltd
cmp
mov
ficompl
push
pop
test
cwtl
sarl
or
fdivl
mov
pop
xlat
lds
inc
pop
pop
cmp
in
mov
pop
pusha
sahf
push
loopnew
lret
clc
hlt
movlps
push
or
add
cltd
or
xor
pusha
lock
out
push
leave
mov
dec
aaa
pop
sub
cmp
and
inc
xor
jg
sbb
nop
jg
xchg
enter
aaa
adc
lods
dec
dec
mov
adc
jg
adc
cmpl
in
popf
jmp
jg
push
cmp
pop
test
mov
pusha
gs
sbb
add
xchg
mov
ret
mov
andb
mov
xor
call
mov
les
sbb
rcrb
xchg
sub
out
lock
push
cli
adc
mov
adc
je
leave
scas
add
xorl
jns
nop
mov
cld
mov
lods
jnp
dec
cli
test
sbb
idivl
cmp
outsl
xor
cmc
cs
out
cmp
jo
xchg
cli
mov
inc
sbb
and
jo
jp
fmull
out
arpl
mov
cli
xor
fisttpl
fs
sahf
pop
aam
dec
cmpsb
pop
lods
rcll
mov
cmc
nop
sahf
xchg
icebp
mov
add
mov
xor
rolb
dec
ljmp
icebp
xchg
addr16
cld
rorb
sahf
repnz
imul
or
mov
jne
rcrl
mov
aaa
inc
mov
sahf
mov
loope
sbb
mov
ja
cmp
sub
jbe
ret
scas
or
xchg
or
mov
push
setg
xlat
sarb
sub
shlb
fnstsw
movl
cmpsl
test
xchg
inc
sbb
xorb
sbb
shll
adc
cmp
pushf
filds
lret
sbb
sahf
or
cli
push
orl
aas
xor
xor
inc
ret
sub
pop
stos
jg
rcrl
fxam
fdivl
fdivs
clc
cltd
icebp
cld
push
les
mov
mov
es
lods
xor
jb
stc
mov
aam
cmp
and
and
mov
ljmp
fcomip
test
lods
fildl
xor
jl
test
imul
lock
jnp
test
scas
lret
cmpl
rcl
loopne
ret
inc
hlt
xor
mov
dec
lds
jp
popf
jne
shrb
js
xchg
push
daa
push
sbb
xchg
and
cmp
lcall
sarl
gs
outsb
mov
push
jnp
cmp
mov
ret
mov
or
pop
dec
sub
mov
fsubl
xchg
jns
stc
and
inc
xchg
shrb
pushf
dec
sete
and
xchg
ret
xor
add
pusha
cmc
int3
inc
orl
sbb
fwait
cmpsb
loop
pop
adcl
les
mov
cmc
mov
xchg
fidivrl
movsl
adc
scas
mov
mov
aas
and
data16
fistps
adc
add
shrl
push
scas
movsb
jae
movsb
adc
mov
gs
je
aaa
rcl
and
shll
sub
cmc
popa
lret
xor
adc
add
cli
or
in
popf
inc
mov
ret
add
xchg
call
and
push
mov
push
test
jo
push
jp
nop
inc
out
aad
fdivs
sbb
adc
outsb
ret
stos
test
xor
lods
ficoms
xchg
xchg
xlat
hlt
xchg
ja
fidivrs
lods
inc
and
sbb
or
ret
mov
ret
xchg
dec
daa
imul
mov
xor
add
pop
sub
adc
scas
aaa
pop
sti
data16
idivb
or
je
and
out
inc
inc
lret
push
push
imul
aas
fadd
repz
test
push
adc
jbe
adc
inc
pusha
mov
fwait
jo
xlat
popf
orb
aad
pop
jmp
xchg
cwtl
sbb
in
cmp
clc
pop
fnstcw
scas
sbb
push
das
xchg
setl
jecxz
out
bound
add
mov
sbb
mov
adc
jg
arpl
xchg
xor
aam
adc
add
test
mov
aad
add
sbb
inc
pop
xchg
xor
addb
adc
push
sbbl
push
sahf
jnp
js
or
mov
je
and
jg
cltd
into
sarl
jmp
xchg
cmp
mov
and
cmp
xchg
push
lret
es
fdivrs
and
lahf
popa
and
add
mov
adc
push
adc
lahf
movsl
or
or
pop
jmp
sar
inc
sbb
mov
lahf
mov
mov
pop
iret
or
fcomip
sarb
into
mov
pop
mov
adc
dec
dec
repnz
pusha
orl
fiadds
fs
frstor
adc
ja
xlat
nop
and
xchg
xchg
int
nop
outsb
xchg
sub
movl
add
mov
outsb
hlt
aaa
push
les
ja
pop
mov
dec
es
pop
das
xchg
lret
jg
aad
es
sahf
xor
cmp
stos
clc
mov
push
shlb
aam
or
rorb
das
mov
push
xchg
int3
and
je
jmp
xor
sbb
jb
adc
in
addr16
cmp
shlb
push
icebp
mul
jecxz
dec
fistpl
jae
cli
mov
jne
stos
mov
addb
mov
xchg
xchg
lock
popa
test
pusha
ss
adc
fldenv
adcb
cmp
cmpsb
adc
pop
lods
dec
jle
push
sub
sahf
dec
jl
cmp
pop
pop
insb
data16
rolb
pop
add
lods
or
jnp
cld
mov
pushf
sub
mov
inc
xor
ljmp
xchg
rorl
into
gs
cmp
mov
jp
nop
js
out
jnp
push
sub
outsb
inc
pop
mov
push
es
lea
jnp
pusha
pop
cltd
iret
add
cmpsl
aad
add
add
outsb
fisubrl
cmp
adc
mov
dec
sub
iret
fs
sub
pushf
xchg
mov
push
jo
notl
sbb
testb
ret
and
bound
lds
ret
sahf
nop
mov
pop
push
mov
in
pop
mov
xor
dec
cltd
push
sbb
jl
fldl
les
sbbb
dec
xchg
popa
mov
push
das
push
and
pop
outsl
test
fsubs
pop
dec
mov
jp
adc
xor
mov
outsb
inc
xchg
adc
adc
xor
jne
cmp
pop
push
sbb
push
mov
outsl
mov
mov
mov
mov
fsubrs
mov
insl
insb
fsubs
lahf
mov
mov
pop
aaa
push
mov
pop
test
or
mov
shl
scas
pop
jbe
movsl
int3
dec
test
dec
add
xchg
test
push
pop
clc
xor
pusha
filds
xchg
xor
or
pop
repnz
xor
jp
xor
mov
jae
les
sub
inc
jge
xchg
pop
lahf
sbb
in
xchg
cltd
pushl
cmp
out
mov
ljmp
cwtl
shrl
xlat
fsts
jbe
int3
mov
ss
mov
mov
int3
pop
or
mov
push
hlt
outsl
ja
jmp
das
inc
ss
push
fcoml
dec
repz
jge
jae
mov
push
test
mov
test
fwait
cmpl
lods
dec
inc
imul
dec
cmp
cmc
lret
roll
mov
add
sarb
sti
mov
in
fisubs
ds
mov
das
pop
ljmp
xchg
add
in
jecxz
cld
bound
stos
cli
dec
mov
or
adc
imul
out
ja
push
cmp
aas
stos
fistpll
lock
cli
push
mov
ret
nop
adc
int3
loop
insl
push
cmc
and
dec
and
enter
mov
cltd
mov
xchg
aaa
xlat
mov
mov
lea
mov
in
xor
cmpsb
cmpb
pop
or
in
icebp
push
int
fsubrs
jl
xchg
enter
push
jae
das
cmp
in
adc
or
sahf
scas
pop
pushf
fistpll
cmp
inc
push
inc
mov
and
stos
mov
jle
cmp
lret
lock
adc
ljmp
gs
insl
adc
pushf
inc
out
push
rcrl
sub
cmpl
fs
jmp
xchg
outsl
out
push
fstps
imul
xor
mov
outsl
and
es
imul
lods
je
push
inc
fistl
adc
ss
inc
xchg
xor
fwait
pop
push
rclb
pop
xchg
or
jb
imul
ljmp
div
mov
push
rcrb
sub
jge
lods
leave
cmpsb
xchg
adc
inc
test
mov
or
call
mul
sbb
sub
cli
mov
xlat
adc
push
cwtl
faddl
insl
dec
and
push
rorl
add
mov
lock
mov
pop
jge
repz
pop
jbe
sahf
mov
fidivrl
ret
pop
pop
mov
push
into
popa
fldt
es
lcall
in
jo
jns
pushf
inc
call
cmpsb
pop
jne
or
mov
lahf
jge
pop
insb
int
or
push
push
mov
mov
stc
adc
loopne
jle
push
clc
mov
retw
shl
mov
push
inc
dec
mov
repz
push
jp
push
es
les
pop
xlat
or
sub
cmpsl
adcl
fwait
xor
test
xchg
out
xchg
mov
xor
ficoms
outsl
rcrl
test
ret
jmp
inc
out
in
iret
shl
test
scas
push
jns
mov
outsb
xchg
xor
test
mov
lds
test
push
cmpb
push
imul
pushf
add
fldpi
in
inc
movsb
ja
fisttpll
adc
push
xchg
push
inc
pop
pop
inc
outsb
mov
mov
xchg
fistpl
cmp
cs
cmp
in
leave
sbb
mov
pop
sbb
push
lea
hlt
mov
jo
mov
rolb
sbb
loope
inc
stc
xchg
mov
push
rcrl
rclb
sbb
in
outsb
fstpl
mov
ss
out
xchg
dec
sbb
or
add
shrl
dec
cmpsl
daa
popf
inc
dec
ds
push
inc
cltd
add
xor
jnp
les
cmp
sub
imul
mov
pop
sub
lret
xchg
or
cmpsl
push
clc
fadds
in
enter
cmpsb
out
push
push
mov
xchg
nop
int
rorl
int3
in
cmc
cmp
push
lahf
sub
fs
push
jns
scas
insl
ret
inc
mov
insl
fildl
cmpsb
mov
dec
pop
pop
leave
vpaddsw
xchg
loope
jmp
mov
sahf
int3
int3
xchg
inc
xor
scas
lret
mov
jl
xor
push
xor
jne
or
ret
inc
and
leave
pop
stos
fstl
cmpsl
icebp
mov
out
aaa
pop
fs
cmp
fbstp
inc
fadd
pop
movsl
clc
outsb
or
xor
xor
xchg
call
mov
sub
pop
mov
xor
jp
mov
or
popa
mov
out
push
imul
insb
add
cmpsl
add
out
call
dec
shr
push
sub
cmp
mov
adcb
inc
mov
xchg
push
loop
add
push
das
fst
pop
imul
xor
fwait
sbb
mov
fldl
mov
aaa
scas
xchg
sbb
and
and
scas
popa
sbb
cmpsl
rolb
je
jg
std
jbe
leave
xchg
sahf
movsb
aam
inc
sahf
inc
ljmp
hlt
lcall
mov
push
and
fwait
jmp
inc
pushf
push
xchg
popf
js
inc
enter
dec
cmp
popl
jmp
jg
mov
xchg
sub
xor
daa
jns
push
movsb
enter
sbb
jl
aad
shl
pop
ljmp
int
mov
mov
mov
inc
xchg
push
imul
pmaddwd
pusha
mov
aam
push
vmread
cld
or
mov
jne
inc
into
jp
sbb
pop
inc
pop
imul
sub
push
jl
and
mov
xchg
scas
es
es
lret
dec
or
pop
daa
mov
fs
popf
or
fiadds
dec
cld
in
sub
shll
jmp
repz
stos
fidivrl
scas
mov
dec
mov
cltd
ficoms
ja
mov
stos
xchg
dec
enter
sahf
mov
xor
xor
cmc
xchg
faddl
cmp
push
adc
push
xor
sbb
mov
inc
dec
insb
fadds
lahf
pop
add
adc
add
or
js
cmpsl
jecxz
add
jno
lahf
and
mov
stos
sub
inc
pop
push
mov
dec
in
or
sub
mov
incb
lock
sub
add
dec
dec
push
incl
dec
std
int3
pop
aad
or
div
mov
sbb
ljmp
lret
pop
das
xlat
shll
pop
in
clc
push
or
cli
mov
fstl
popa
push
lock
mov
js
ror
push
iret
xor
sbb
out
leave
aaa
xor
adc
idivb
int3
scas
lret
aaa
inc
aaa
inc
xchg
inc
xor
ficompl
mov
sti
in
push
ret
mov
leave
lea
jae
inc
repz
xchg
and
jne,pn
sbb
jmp
cli
popa
mov
push
xor
mov
xchg
pop
pop
test
mov
ret
cwtl
fs
das
in
xchg
aam
lds
test
jp
out
das
dec
mov
and
ja
pop
aaa
ss
or
stc
adc
add
cs
gs
loop
inc
cmpsb
lods
movaps
dec
icebp
push
xchg
inc
pop
mov
movsb
scas
testl
hlt
lods
adc
xchg
arpl
mov
pushl
add
xchg
test
rol
repnz
pop
fldl
sti
or
pop
fildll
add
aaa
push
cmpsb
ljmp
xchg
in
popf
and
mov
scas
or
mov
sub
mov
xlat
sbb
aad
subb
imul
adc
insl
xchg
sub
sub
xchg
mov
xor
ljmp
int
lret
adc
stos
mulb
fimull
jg
jns
bound
outsb
push
jmp
and
mov
mov
add
jo
pop
cs
lea
popf
lahf
addr16
xchg
repz
test
sbb
neg
icebp
dec
pop
into
fstl
jb
in
pop
std
aas
test
aaa
lret
andb
or
add
jecxz
mov
imul
mov
jnp
cld
xchg
mov
inc
shl
push
add
push
cmpsb
test
sti
push
mov
sarb
cmp
xchg
xchg
repnz
push
icebp
fsubs
xor
fisttpl
add
sub
add
mulb
mov
inc
sub
xor
dec
ret
hlt
popa
push
or
push
dec
or
inc
cmp
adc
jge
stos
jnp
in
cmc
lcall
ds
mov
call
testb
cli
out
loope
addr16
xor
sub
pop
xchg
dec
adc
xchg
add
movsl
jne
push
mov
out
inc
testl
in
imul
int3
xchg
ret
adcl
ds
cmp
stc
adc
xor
and
mov
push
dec
inc
push
mov
scas
xchg
pop
push
push
rcll
rcrb
mov
dec
xchg
cmp
jp
dec
mov
ret
adc
in
repz
dec
in
sub
fwait
adcb
jbe
sbb
aam
xor
aas
imul
push
stos
hlt
repnz
sbb
hlt
pushl
mov
sub
pushf
or
jns
ss
je
mov
cmp
adc
pop
xorl
cmp
cmp
dec
iret
push
jb
std
sahf
and
lea
inc
add
aam
pop
aam
movsl
inc
pop
ljmp
cmpb
add
dec
pop
call
in
testl
fs
pop
xchg
adc
pop
fwait
jae
add
push
fidivs
push
mov
enter
mov
out
iret
add
stos
dec
xchg
ds
fiaddl
lods
shrl
sti
jbe
popf
mov
daa
popa
test
loope
es
and
xlat
mov
fsubr
aaa
jge
cmc
cli
dec
pop
and
push
adc
cmp
inc
sbb
addb
mov
push
js
inc
sarl
pop
xchg
or
mov
aas
popl
jae
sub
cltd
imul
sti
call
push
aas
popf
js
sbb
shrb
pop
cmp
xchg
lret
sti
sub
sarl
dec
adc
movsb
mov
pop
jmp
subl
mov
imul
pop
push
mov
push
xchg
insl
mov
and
sbb
mov
cmc
lds
das
insl
cmp
mov
xor
sub
lcall
icebp
jae
or
rorl
push
cmp
adc
cmp
cmp
fldenv
mov
sti
js
jb
xchg
lret
push
into
aaa
pop
shr
push
ror
cmpsl
div
add
sti
js
out
mov
mov
daa
pop
aas
mov
fnstenv
enter
daa
pushf
mov
add
sbb
cs
scas
fcomi
popf
cmpsb
stc
int3
lods
andl
add
bnd
push
mov
scas
and
daa
pop
dec
loop
std
pop
jmp
or
sub
dec
mov
add
divb
repnz
dec
xchg
xchg
in
and
cltd
adc
dec
outsl
dec
xor
inc
inc
popf
icebp
cmp
stos
mov
mov
cmp
cmp
sbb
mov
fcompl
push
mov
or
or
inc
outsb
xor
xor
cmp
jae
pushf
jno
out
jno
push
enter
int3
ret
outsb
mov
in
push
dec
xlat
and
dec
jecxz
dec
cltd
shrb
xor
call
cmp
xchg
mov
mov
loopne
inc
mov
mov
and
enter
and
mov
fadd
test
popa
mov
cmp
into
xor
aam
scas
jb
pop
repnz
aad
mov
frstor
cmp
jnp
xchg
jb
push
inc
test
adc
xchg
cmp
xor
mov
sbb
insb
push
bswap
xor
mov
mov
jge
xchg
roll
stos
mov
dec
in
testl
and
add
xor
test
sarb
in
ror
fsubl
movsl
add
sbb
cmpsl
push
push
xor
repz
loop
pop
sbb
push
push
push
sbb
aad
test
inc
outsb
ffree
dec
int3
call
fdivrp
ja
jnp
add
sub
jo
je
push
mov
add
jns
cmp
pop
fsubrl
cwtl
outsb
add
sbb
lock
arpl
nop
mov
shlb
push
inc
aas
outsb
lahf
cmc
hlt
arpl
xchg
and
roll
ja
lds
daa
add
pop
out
mov
insb
es
push
jns
movsb
sbb
iret
jecxz
lahf
ret
pop
or
mov
mov
pushf
xchg
mov
add
inc
hlt
xchg
push
hlt
xchg
scas
and
push
mov
mov
sbb
in
mov
stc
out
jg
outsl
cmpl
xor
jmp
stos
add
mov
or
push
fst
out
ret
leave
stos
sahf
orl
lret
cmpb
stos
ljmp
push
gs
aaa
adc
rolb
xchg
lods
ret
xchg
imul
popf
sub
loop
dec
fstps
ret
mov
sbb
or
pop
xchg
pop
dec
flds
jnp
push
cmovo
sahf
dec
adc
push
jo
xchg
mov
xchg
mov
xor
out
adc
inc
movsb
jno
ret
adc
mov
cmpsb
sbb
mov
mov
stos
rorl
mov
lret
add
mov
das
lret
je
mov
test
ss
mov
loop
jl
mov
test
xorb
inc
cmp
push
push
pop
or
pop
push
adc
push
jmp
decb
nop
test
xchg
stos
iret
xchg
imul
insb
sti
jecxz
mov
out
out
xchg
and
or
aas
sbb
dec
xchg
fisubrs
xor
iret
adc
cltd
sbb
dec
icebp
cmp
mov
mov
dec
lods
les
xor
push
push
xor
pop
dec
or
int3
cwtl
xor
push
jb
leave
notl
loope
js
ret
dec
sarb
clc
mov
push
je
add
or
das
fcoms
dec
xlat
out
cmc
vmread
mov
cmp
fnsave
or
mov
scas
jp
pop
adcb
sbb
inc
sbb
roll
insl
cs
je
jmp
push
pop
mov
and
aam
cli
pop
cmpsb
pushf
inc
aam
dec
mov
xchg
call
enter
jae
xchg
sbb
lret
pop
inc
xor
nop
shlb
outsl
push
loop
xchg
adc
fs
rclb
inc
repz
xchg
xchg
xor
daa
rol
push
jns
rcl
fwait
jl
ret
xchg
cmpsb
mov
xor
push
ret
movsb
lret
inc
rcll
sub
adc
lock
jbe
ljmp
arpl
xor
sahf
in
dec
repnz
cli
cmc
add
jmp
mov
jge
sub
repz
pop
cmc
pop
adc
je
cmp
inc
add
mov
int
dec
push
mov
out
mov
xchg
push
dec
movsl
ljmp
fndisi(8087
pop
pop
mov
sbb
repz
add
pcmpeqd
add
push
mov
in
sahf
xchg
mov
push
push
jne
sbb
add
pushf
test
cli
sub
xchg
roll
nop
and
mov
push
ja
mov
cmc
lods
mov
xchg
or
mov
jl
pop
into
push
lock
aad
mov
or
jmp
add
pop
sbb
in
dec
pop
and
sub
mov
mov
dec
mov
jl
ret
mov
inc
adc
push
ret
push
mov
in
cs
adc
jp
in
pop
or
mov
int
insb
fs
xor
aam
xchg
push
div
adc
sub
push
insb
push
push
pop
leave
push
imul
scas
inc
xlat
sbb
dec
push
xor
lock
inc
sarl
push
xor
testl
and
adc
cmp
or
sbb
not
movb
call
testl
lcall
fstpt
sbb
dec
pop
orl
stc
adc
fisubrs
loop
mov
inc
dec
call
pop
pop
outsl
add
hlt
push
jo
in
shll
xor
je
scas
sbb
pop
imul
lahf
movsb
out
ret
fimull
xchg
lahf
int
imul
or
cmp
sub
bound
inc
or
dec
inc
pusha
sub
outsl
pop
adc
sub
inc
lods
sbb
enter
repnz
xor
xor
cmpsl
int
icebp
pop
xchg
mov
test
sbb
outsl
mov
sub
jb
cltd
lock
ljmp
adcl
mov
sar
sbb
subb
sub
mov
imul
setge
test
test
fwait
or
pop
shlb
icebp
push
cmc
dec
daa
adc
dec
xor
pop
jle
or
mov
in
ja
arpl
push
out
jno
cmpsl
and
inc
lahf
mov
mov
int
ret
xor
mov
andnps
imul
scas
xchg
mov
mov
mov
shll
and
pop
pushf
sub
jmp
jg
addr16
dec
inc
mov
inc
cld
sbb
lea
in
int3
xor
mov
ljmp
cmp
sarl
cmpsb
mov
cltd
test
xor
int3
fidivl
and
aam
mov
pop
jbe
mov
sbb
inc
xor
inc
ret
cmp
mov
lret
xchg
in
ret
nop
xor
stos
inc
xchg
insl
push
and
cltd
imul
sub
aas
aam
loopne
aaa
jge
mov
gs
mov
aaa
jg
fistpll
mov
mov
mov
fsts
push
lcall
mov
fcmovnbe
jno
inc
fnstcw
mov
xor
jns
mov
pop
xchg
xchg
sbb
call
es
fstpt
mov
push
stos
jbe
xchg
insl
add
jg
mov
int
nop
in
xchg
stc
pop
loopne
xor
sarl
inc
cltd
cltd
sbb
bound
add
rolb
fisubs
jg
adc
in
imul
imull
and
push
mov
push
push
inc
mov
xorb
enter
int3
mov
xchg
mov
enter
in
loopne
mov
movl
cmp
scas
inc
stc
lcall
ja
lods
clc
add
leave
stc
imul
sub
push
dec
mov
and
xchg
into
and
push
fadds
mov
fcompp
xchg
push
movsb
cmp
stos
add
out
in
lret
dec
sub
mov
xchg
xchg
out
mov
std
lret
dec
mov
mov
shl
repz
cmp
aas
sub
xchg
adc
sub
pop
or
pop
scas
imul
and
popa
insb
nop
cmp
daa
in
cli
and
pxor
into
aaa
movsl
lock
call
loop
fwait
adc
test
jmp
cmp
repz
jnp
aas
in
test
sbb
test
mov
cmp
out
push
fsubrs
xchg
ss
sbb
je
test
mov
lods
xor
adcl
loop
mov
xchg
andl
rcrb
cli
cld
into
mov
pop
test
mov
adc
inc
dec
jne
jge
mov
fists
addr16
inc
dec
lods
sub
dec
xchg
sub
lock
stos
push
scas
mov
cmpsb
xlat
mov
inc
cmpsl
and
push
sub
cs
popa
xchg
js
pop
repnz
fldpi
xchg
xor
cmp
mov
ret
rcl
pop
add
mov
or
cmpsl
imul
shr
inc
out
iret
in
mov
cmc
ret
sub
js
out
imul
enter
in
pop
lds
push
cmpsb
jle
popf
fs
lock
pop
push
cmp
push
outsb
adc
xchg
mov
push
dec
std
outsl
xchg
sti
aaa
fimuls
js
or
mov
cli
pusha
push
leave
scas
xchg
inc
dec
mov
ret
push
ret
aam
pushf
in
test
inc
jl
or
scas
movsl
sbb
mov
inc
pushf
push
mov
xorl
dec
iret
aad
jmp
pmuludq
or
inc
data16
adc
js
lods
fdivr
fdivrs
mov
mov
xchg
cmc
and
adc
cmpsl
push
inc
adc
cwtl
jbe
arpl
and
loope
mov
fwait
mov
pop
dec
ret
sar
andl
and
cmpsl
push
leave
enter
ja
push
popf
pop
scas
inc
aad
rolb
mov
add
push
cmp
xor
sarl
mov
adc
push
xchg
jo
stos
pop
das
lds
push
xor
mov
test
sub
repnz
lcall
or
adc
movsb
or
dec
mov
mov
add
jns
shr
pop
mov
adc
mov
jae
dec
les
cli
or
jb
dec
inc
sti
call
popf
add
xor
mov
stc
fisubl
stc
fidivl
in
mov
adc
sahf
loop
cmp
xor
arpl
inc
sar
or
rolb
dec
cmpsb
lods
cmp
sub
sbb
cli
cmp
sahf
sub
shl
mov
inc
cmc
sarl
clc
sbb
and
xchg
adc
popf
out
call
movsl
cltd
xchg
mov
lds
fcomp
push
stos
cli
sar
mov
jp
jo
adc
xor
cmpsb
cmp
and
rcrl
inc
add
xor
in
decb
add
mov
test
inc
pop
cmp
sbb
cmpsb
inc
aas
ret
and
or
inc
mov
mov
sarb
fidivrs
xor
add
inc
fcompl
sbb
cmpsb
mov
cmp
pop
jns
pop
pop
fisubrl
rcll
xchg
out
gs
mov
lods
pop
js
loop
stos
in
and
mov
out
ljmp
popf
sub
fidivl
xchg
pop
leave
pusha
icebp
ret
adc
in
into
ffree
mov
inc
loope
stc
lahf
fisubrl
inc
sbb
jle
sbb
cwtl
popf
push
ret
stc
sahf
push
movsb
xorb
jmp
outsb
adc
and
outsb
cmp
rorb
adc
addl
inc
clc
insl
es
pop
dec
lret
xor
movl
or
int3
mov
mov
adc
clc
sub
fdiv
les
mov
je
inc
gs
jnp
mov
cmpsl
inc
xlat
add
dec
fcmove
cmp
adcl
lods
or
inc
xchg
stos
out
xchg
inc
sbb
mov
loop
mov
xor
mov
stos
shrb
popf
ds
lahf
movsl
pop
inc
mov
push
pop
flds
hlt
add
cs
jle
es
aad
lret
data16
nop
sub
sub
scas
test
movsb
push
daa
cld
negb
sub
test
lods
shll
xor
dec
xor
in
inc
popf
lods
loope
cs
xchg
mov
mov
repnz
sub
jmp
clc
lds
out
js
sbb
push
xchg
shrl
fcmovb
jo
inc
jg
pop
imul
or
filds
sahf
and
pop
shrl
mov
outsl
filds
pop
sbb
add
jns
std
xor
xor
mov
push
pop
sbb
fprem
mov
ds
sbb
aam
ss
movsb
outsb
mov
in
incl
add
rorl
das
xchg
out
idivl
mov
pop
insb
cmp
sub
stos
sub
rcr
push
jo
jg
jmp
jmp
push
je
scas
xor
out
ljmp
ss
mov
inc
sbb
mov
ss
cmpb
shlb
or
popf
add
push
cltd
adc
dec
test
stos
dec
lcall
adc
mov
les
and
jle
call
leave
jg
add
jg
and
inc
insb
mov
xchg
fs
insb
mov
lahf
add
cmc
clc
cltd
pop
push
cmpsb
sub
jecxz
enter
in
cmp
push
adc
push
xor
mov
mov
jo
sbb
and
mov
pop
mov
gs
push
outsb
shlb
lahf
cli
dec
testb
hlt
movsb
stos
and
fwait
xchg
push
adc
movsb
out
mov
insb
mov
xchg
inc
jp
repnz
mov
cwtl
mov
dec
sahf
mull
pop
js
mov
jecxz,pt
pop
inc
inc
bound
mov
pop
cli
in
test
sub
push
or
pop
scas
pushf
xchg
pushf
mov
notb
mov
out
lods
ja
bound
int3
sbb
shll
xchg
js
in
in
push
decl
fbld
jge
clc
dec
and
aaa
adc
nop
push
push
sbbb
inc
scas
sbb
lahf
gs
cltd
into
ret
cli
dec
xor
or
push
mov
inc
sub
lock
jb
rclb
sarl
bound
clc
add
jg
addr16
push
clc
gs
pop
addl
jle
inc
pop
jns
subb
daa
rcrb
and
fidivrs
mov
cmpsb
mov
xchg
shrb
jecxz
push
push
mov
ret
sub
sbb
ljmp
mov
lea
push
cmc
add
in
ss
and
lahf
xor
jge
ss
jbe
or
fsts
fwait
mov
mov
sti
mov
and
icebp
hlt
adc
xor
sbb
adc
xor
out
daa
ja
les
fdivp
jne
sub
pusha
rcrl
daa
pop
int
jbe
mov
sti
push
jb
push
adc
mov
sahf
xor
rol
sbb
mov
stos
fists
sbb
sub
add
in
push
arpl
xchg
data16
xchg
mull
add
shll
in
add
push
add
push
cwtl
ret
jnp
lock
leave
cmpsl
stc
push
xchg
inc
dec
movsb
iret
shl
inc
fistpll
xchg
cmc
cwtl
mov
xlat
negl
push
fidivs
bound
insl
mov
jb
loopne
and
into
cmc
and
mov
jl
rep
imul
or
jb
jo
mov
push
in
enter
and
aaa
scas
scas
int3
sbb
mulb
mull
or
fldcw
repnz
shrb
mov
incl
mov
jecxz
shll
pusha
sti
cmp
test
inc
dec
pop
fidivl
out
ffree
dec
mov
mov
movb
ret
push
fldlg2
inc
sbb
jge
faddp
mov
sub
pop
and
in
and
sbb
inc
xchg
mov
in
popf
cmp
sub
jmp
dec
or
mov
pop
dec
xor
popa
sbb
inc
push
mov
pusha
mov
pop
pop
mov
cmpsl
pop
cmp
cwtl
push
push
fistps
scas
stos
repz
push
xchg
fisubl
ss
jbe
pop
jle
iret
push
or
jmp
push
shll
sub
pop
loopne
push
js
lods
cltd
dec
icebp
pop
movsl
fbstp
dec
decb
ss
pop
sbb
mov
dec
xor
jmp
rclb
je
test
shll
aad
cltd
inc
fwait
mov
lock
push
pop
mov
xchg
fstl
aaa
push
jae
xchg
push
aam
or
sbb
xor
test
push
test
rorb
pushf
fnsave
std
js
mov
mov
outsb
iret
in
mov
lea
add
dec
xor
mov
negl
test
push
adc
in
and
scas
inc
jmp
mov
lds
add
mov
sub
das
roll
pop
sbb
in
cmp
xchg
fistl
cmp
pop
jae
repz
mov
ret
cmp
xlat
or
or
shrl
fucomp
and
sub
xor
and
pop
sti
pop
cli
test
push
incb
push
xchg
mov
mov
and
mov
daa
ds
jb
sahf
push
mov
mov
sarl
add
test
sahf
mov
or
pop
repz
out
mov
div
clc
mov
imul
jae
adc
cs
scas
or
push
sub
int3
outsl
pop
lret
cmp
sub
pop
ss
scas
lea
int
cld
jge
lcall
jnp
sub
xor
test
adc
lahf
int3
sbb
nop
jp
cmovle
mov
aaa
cmp
inc
lock
mov
dec
dec
or
loopne
mov
jmp
pop
add
cmp
inc
pop
push
jle
ljmp
int
loope
pop
fidivrl
pop
lret
and
xchg
dec
orl
push
adc
scas
mov
loop
in
add
rep
mov
adc
je
xchg
loop
adc
pop
mov
js
mov
cs
insl
rcrl
inc
out
cli
in
jne
adc
xchg
xchg
push
out
ret
and
loopne
ret
add
sbb
je
scas
fwait
cltd
imul
pop
jns
jl
push
pop
push
jnp
jle
lahf
xchg
sbb
movsl
cmp
jbe
dec
xchg
dec
shlb
cmp
bound
or
mov
sbb
xchg
sbb
stos
repnz
mov
aad
insb
add
scas
je
pop
jp
add
and
xchg
shlb
mov
push
ror
or
jecxz
jne
jge
and
mov
aam
mov
out
cwtl
fistps
out
push
or
xorb
out
cltd
push
popf
jge
lcall
and
int
mov
jecxz
mov
lcall
movsl
xlat
jo
movsl
out
mov
or
dec
dec
sub
hlt
pop
das
cwtl
push
andl
fidivrs
sbb
mov
xchg
pop
dec
in
push
sbb
inc
into
jne
xchg
push
push
iret
push
cmp
inc
mov
inc
or
pushf
xorl
loopne
pop
leave
es
lods
and
ja
sub
jg
mov
push
sbb
xchg
aaa
lea
pop
fildl
daa
add
movsb
into
loop
popa
pop
fmulp
test
cmp
fstl
jo
pusha
je
cmc
lods
mov
sub
ret
call
sbb
dec
fstpt
pop
dec
mov
dec
les
jae
in
push
sub
ss
imul
sbbb
mov
mov
push
inc
adc
stos
and
fadd
rclb
inc
fwait
roll
sbb
jno
insl
inc
xchg
pop
pop
jns
pop
nop
or
pop
jns
cmc
out
jmp
and
test
cwtl
xlat
dec
repz
rorb
jne
mov
xchg
or
lock
fs
nop
jb
inc
shlb
sbb
xor
xor
cld
mov
mov
cmp
sub
pushf
hlt
jbe
repnz
outsb
mov
mov
sti
loopne
vucomisd
cmp
xchg
popf
dec
gs
mov
add
inc
rcrl
jb
mov
push
jb
adc
stos
inc
outsl
rol
adc
sbb
data16
adc
fwait
inc
mov
sbbl
dec
scas
pop
dec
cmp
sub
mov
testl
jg
movb
mov
jbe
pop
push
mov
out
cs
xchg
mov
dec
je
xchg
mov
xchg
mov
sub
and
das
add
fadds
cmp
lret
cld
push
cmp
ss
dec
and
cmp
test
insl
aad
add
push
mov
dec
mov
cs
divb
aas
mov
pop
mov
out
loop
push
mov
lods
xchg
stos
mov
or
sbb
jmp
loope
addl
fwait
dec
jns
imul
or
or
push
movsl
add
or
lock
xchg
cmp
popf
xlat
lret
ds
push
add
mov
or
les
push
lret
lods
jno
aad
std
add
addr16
cmp
mov
push
ret
stos
pop
movsl
outsl
data16
aam
test
in
push
mov
in
lock
xchg
jecxz
mov
cs
dec
xor
imulb
jno
adc
xchg
sarl
sti
sbb
xchg
sub
jne
ja
stc
xor
mov
sub
shlb
add
pop
adc
pop
add
xchg
mov
sub
daa
lahf
mov
imul
cmp
inc
inc
imul
sub
daa
mov
jl
jmp
mov
cli
rcrl
subl
int3
gs
or
mov
or
jmp
lret
es
fistl
js
repz
inc
inc
dec
inc
xor
jb
cmp
mov
push
nop
mov
mov
xchg
cmp
sub
lret
outsb
mov
scas
insb
jl
aaa
dec
test
loop
popf
fcoms
arpl
lcall
leave
inc
fistpl
popf
inc
dec
fsubl
std
jo
mov
mov
rorb
add
jnp
adc
movsb
sub
fcmovnbe
je
pop
xor
iret
pop
sub
push
mov
es
fs
mov
mov
dec
rcll
cmp
inc
cmpsl
int3
mov
mov
pslld
cli
sarb
scas
fstps
xchg
xlat
dec
popf
and
into
mov
int3
in
scas
xlat
push
mov
aaa
sub
sbb
dec
cmp
int
pop
fnclex
adc
lods
dec
mov
pusha
sub
or
jbe
jb
push
jp
xchg
cltd
fwait
cmp
cwtl
popf
repz
adc
das
imul
in
mov
or
adc
cmpsl
push
adc
movsb
jg
adc
lods
pop
js
sti
inc
cmpsb
mov
sbb
rol
xchg
into
ret
data16
outsb
in
cltd
and
inc
int3
pusha
sub
xor
xlat
fcomp
adc
push
mov
scas
popf
adc
icebp
testl
pop
stc
cld
sub
xchg
testl
or
daa
insl
or
inc
mov
dec
xlat
test
mov
aad
mov
dec
pop
sub
loope
pop
popf
xor
lods
fsubp
popf
add
inc
aad
sub
and
lods
dec
push
int3
adc
fdivp
mov
jle
sub
and
rcl
mov
cmpsb
mov
dec
popf
mov
or
cmc
pushf
pop
add
lods
fisubrl
jne
pop
imulb
push
pop
adc
xorb
addr16
daa
fisubs
sub
or
xchg
stos
int
ret
mov
std
iret
mov
xchg
xor
outsl
jmp
xchg
imul
jmp
mov
movsb
pop
xlat
pusha
loopne
and
xchg
cmp
test
or
jns
push
pop
push
bound
mov
cmp
mov
dec
sub
pushf
mov
imulb
out
mov
mov
pusha
call
adc
cld
out
insl
shr
mov
mov
lcall
call
fistl
popa
adc
repz
push
in
or
adcb
fwait
xlat
repz
cmpsb
dec
jb
inc
dec
xor
mov
mov
adc
xor
or
mov
jmp
cmp
aad
jae
push
insl
outsl
mov
imul
fisttpl
stos
mov
dec
movsb
jle
in
adc
add
bound
mov
cmpsb
sbb
mov
dec
mov
jb
outsl
test
xchg
sbb
or
popl
pop
xlat
dec
dec
pop
pop
jae
cli
movsb
mov
pop
test
xor
mov
ror
cmpsl
mov
jl
mov
mov
arpl
mov
jnp
mov
or
mov
xor
out
mov
and
push
mov
das
xchg
sbb
popf
pop
movsl
or
dec
jb
mov
mov
mov
or
rol
mov
scas
push
mov
xlat
fldl
mov
aad
add
decb
and
int
loope
cmpsb
mov
push
fldcw
je
add
call
cwtl
jae
push
gs
cmpsb
mov
fiaddl
inc
sbb
mov
mov
adc
xchg
adc
out
xor
mov
ret
enter
or
pop
movsb
ss
loop
fwait
mov
jae
push
push
jmp
lods
jbe
shrb
cs
loopne
sub
iret
sub
out
arpl
fidivl
mov
in
ror
popa
jl
ror
lcall
push
xor
xchg
loope
mov
fistpll
xchg
add
scas
adc
xchg
adc
lds
mov
dec
jnp
js
push
mov
dec
pop
push
or
cmpsb
pop
mov
outsb
inc
push
roll
add
mov
test
jo
aad
add
inc
int3
das
cmpl
dec
jp
movsl
js
xchg
cmpsb
das
popa
cmc
cli
xor
in
stc
mov
shrb
pop
cmp
mov
xor
rorb
outsl
jg
xchg
dec
setne
dec
stos
mov
xchg
lret
orb
push
dec
aam
ret
xor
adc
dec
das
test
popa
or
ss
pop
mov
jbe
mov
mov
and
ret
iret
pusha
data16
sbb
mov
mov
adc
push
test
cld
out
add
loopne
enter
add
lret
cmp
xchg
jns
fisttps
scas
gs
xorb
mov
and
inc
inc
mov
dec
xchg
cwtl
mov
add
pop
cli
ja,pn
mov
out
sbb
roll
std
ret
cmp
pop
or
daa
dec
sub
sub
dec
data16
or
sti
push
arpl
cmp
add
mov
or
mov
cmpsl
push
in
add
loop
lods
in
leave
xor
xor
sub
arpl
lret
inc
sbb
cmp
push
sub
sbb
mov
fisttps
jae
dec
jo
sbb
and
jp
jg
popa
es
or
cmp
and
sub
loop
sub
sbb
cli
addr16
ljmp
jmp
mov
mov
idivl
outsb
xor
jmp
lods
push
fstl
or
jae
inc
out
pop
jae
add
sub
mov
lret
cltd
xor
push
adc
rclb
aad
shl
jle
aad
lods
or
dec
xchg
pop
mov
data16
lcall
lods
fisttpll
cli
sbb
push
fs
jmp
repnz
loope
and
pop
leave
repz
and
inc
aas
enter
movsb
xchg
jb
or
ret
add
test
jae
enter
cmp
adc
sahf
or
jmp
ret
or
rorl
and
and
gs
xchg
xor
cmpl
out
mov
lahf
andb
mov
fidivs
sbb
inc
sar
sub
or
stos
repnz
adc
movsl
mov
sub
enter
adcl
pop
xchg
xor
and
jecxz
push
iret
fiadds
rol
aam
sbb
icebp
loopne
jne
pop
adc
mov
sub
aam
add
loop
inc
jp
in
cmpsl
xchg
pop
cmp
or
repz
xor
mov
int3
and
and
ljmp
sub
fs
pop
popa
iret
out
add
das
mov
xorb
jb
jo
out
sbb
xchg
jno
ret
dec
push
out
push
inc
push
mov
fildll
fnsave
xor
roll
xor
inc
xchg
xchg
sbb
push
arpl
inc
push
gs
loope
js
mov
mov
dec
divl
ret
addl
cmp
mov
jmp
cltd
sub
sub
std
fs
sub
lcall
push
jge
popa
or
je
and
rorl
inc
fsubrl
or
push
or
ss
leave
fwait
shrb
scas
sbb
repnz
test
mov
pop
lods
adc
mov
iret
add
insb
int3
lcall
dec
push
or
cmpsb
jns
repz
xchg
in
test
add
pop
lds
xchg
pop
lods
xchg
stc
add
scas
pop
xchg
scas
sub
fnstenv
mov
fs
adc
xor
adcb
imul
into
into
add
jp
pop
loop
xchg
loopne
call
setb
out
shl
cmpsb
testb
ljmp
mov
es
xor
outsl
lea
dec
lock
jle
cld
hlt
out
mov
inc
aas
test
pop
ss
cwtl
jbe
sti
add
cld
sub
mov
dec
test
mov
add
cmc
pusha
out
pop
xor
mov
mov
dec
inc
in
imul
movsb
mov
jmp
test
repz
cltd
idiv
in
or
arpl
xchg
mov
pushf
pop
imul
sahf
add
aad
xorl
push
insb
add
repz
push
mov
add
fwait
lahf
imul
loope
shrb
xchg
sbb
repnz
leave
loopne
sarl
sbb
mov
outsb
mov
lea
fisubrs
fcoms
shrl
imul
jne
pop
sar
imul
xchg
repz
rolb
daa
inc
xlat
loope
push
testl
or
jns
gs
ds
insb
sub
cmpsb
popf
testb
test
sub
lahf
nop
cltd
xchg
push
mov
xor
jns
dec
js
inc
lods
lods
aam
pop
std
jb
cmc
xor
push
add
lahf
ret
sbb
iret
in
cmp
mov
jecxz
sbb
fstpt
cltd
jbe
js
repz
lret
cltd
inc
das
pop
or
aam
xchg
mov
mov
sub
aad
loopne
dec
arpl
xchg
add
pop
lret
mov
imul
xchg
push
mov
mov
dec
or
rcl
fcomps
push
cmp
jb
fbstp
ja
jecxz
ja
dec
push
das
inc
das
push
ss
jmp
fdivl
popl
xchg
pop
rorl
std
jno
mov
sub
cmp
inc
pushf
pop
sbb
aad
pop
ds
or
mov
xchg
push
ret
xchg
scas
sahf
mov
cmp
adc
dec
addl
cmp
sti
bound
cmp
xchg
pop
cmp
adc
data16
pop
mov
in
pop
dec
arpl
push
out
mov
movsl
sbb
jae
stos
shr
sub
repnz
bound
mov
push
dec
adcl
xchg
mov
shll
fs
in
sti
fiadds
out
and
mov
in
mov
pusha
mov
mov
cmpsl
cmp
ret
adc
aaa
cld
jge,pn
and
sbb
xchg
pop
jns
repnz
sub
push
das
xor
cmp
jmp
or
pop
dec
pushf
sub
and
ret
test
sub
jecxz
sar
imul
mov
push
xor
dec
int
lret
or
xor
repnz
push
cmp
push
lret
out
xchg
std
pop
cmp
in
test
adc
push
je
data16
dec
adc
arpl
adc
add
enter
add
imul
and
and
insb
push
outsl
rcrb
mov
sbb
xchg
fisttpll
insb
inc
rorb
out
jns
dec
push
add
ja
ret
jb
test
aaa
add
mov
mov
push
incb
mov
xchg
rcll
dec
mov
stos
cs
mov
rclb
popa
push
xchg
nop
lcall
loop
lret
lahf
fnstsw
sbb
cmp
out
mov
cs
movb
aad
stos
mov
dec
adc
movl
inc
push
hlt
insl
std
xor
mov
fsubrl
inc
xchg
in
xor
dec
das
add
test
cwtl
stc
cli
in
test
lahf
and
xchg
test
mov
gs
pop
xor
sbb
mov
push
ret
stc
cltd
inc
add
loopne
add
jl
dec
jp
mov
shll
icebp
stos
sarl
jp
arpl
xor
cmp
dec
jmp
mov
fcompl
pop
mov
lds
repnz
inc
por
aaa
mov
mov
fistpl
sub
imul
nop
mov
aam
mov
gs
jno
add
fistpll
and
inc
fstl
pop
jne
jae
dec
mov
dec
std
shll
data16
mov
enter
bound
xchg
add
xchg
or
and
aaa
cmp
addl
pop
rolb
pop
shll
sbb
mov
jge
mov
adc
mov
sub
lock
stc
pop
addl
aas
fstpl
fisttps
xchg
int3
pop
mov
sub
push
je
mov
mov
decl
pop
or
adc
dec
in
popa
lock
fwait
cmpsl
mov
cmpl
fwait
negb
ljmp
dec
dec
adc
mov
inc
cmc
addr16
pop
mov
xchg
shll
aad
adc
push
mov
pop
sub
cltd
xor
pop
imul
nop
lods
imul
mov
cmp
push
shll
lea
orb
mov
mov
fisttpll
inc
imul
pusha
xchg
popa
jg
les
adc
push
mov
push
cmp
pop
xchg
incl
les
fisubrs
cmp
inc
imul
push
inc
adc
mov
scas
cmp
icebp
in
enter
mov
inc
pop
in
adcb
sub
repnz
test
sarb
cwtl
mov
outsl
xchg
mov
push
orl
jbe
test
mov
xorb
stos
clc
out
mov
xor
inc
xor
dec
or
arpl
xchg
mov
aam
pop
sbb
enter
adc
and
dec
lahf
pusha
adc
jo
or
rep
popa
push
xchg
dec
mull
sbb
inc
arpl
inc
cmp
cmp
stos
push
inc
dec
mov
lds
rcll
push
xchg
mov
out
and
fs
loop
shlb
sub
and
cwtl
scas
or
les
rorb
test
insl
xchg
ja
aam
xor
cwtl
dec
jge
cltd
iret
push
loope
xchg
xchg
aad
or
lock
push
test
jae
sub
mov
das
clc
gs
cld
rorb
js
adc
cmp
sub
inc
and
lret
clc
xchg
mov
ret
pop
push
leave
ret
push
hlt
lods
jne
cmc
jg
push
pop
sub
and
and
fidivrl
mov
xchg
fsubs
sub
sahf
ffree
fsubrl
inc
jnp
sahf
add
lret
pusha
jl
xchg
ja
repnz
repz
dec
sub
pushl
xchg
popa
shlb
outsl
or
je
or
inc
les
hlt
addr16
je
cmp
lea
inc
jb
iret
lea
ljmp
mov
xchg
gs
adc
adc
imul
rcrb
or
mov
inc
in
mov
inc
xchg
pop
pop
push
inc
add
es
and
cld
in
ficompl
ljmp
jne
sub
in
inc
mov
sbb
mov
cld
lret
bound
or
xchg
aad
pop
popf
xorl
jp
and
and
inc
shr
gs
push
icebp
int3
lret
dec
dec
adc
mov
inc
xchg
and
push
and
icebp
imul
pop
xchg
sub
inc
arpl
xchg
pop
xlat
int
mov
rolb
dec
repz
movsb
pusha
lahf
add
mov
add
lahf
and
arpl
jnp
aad
sahf
sbb
xchg
mov
adc
add
fidivl
loopne
orl
aam
stc
sarl
inc
sbb
mov
mov
daa
movl
mov
jp
mov
jae,pn
lock
pusha
ss
and
mov
andl
pop
lds
rorl
adc
mov
add
add
cli
add
mov
and
fwait
shll
cli
das
xchg
arpl
dec
mov
repz
imul
xchg
add
dec
push
in
ja
ret
lahf
mov
aas
cmc
fimull
and
shl
shll
jae
dec
jl
shrb
cmpsl
sbb
jb
aaa
aas
sti
sub
pop
aaa
loop
pop
mov
sub
or
aam
inc
xchg
dec
pop
arpl
jo
repnz
in
lods
cld
push
std
sahf
out
push
fwait
aad
repz
sbb
jo
cmpsb
addr16
js
dec
xor
stos
inc
xchg
xor
movups
addb
ret
int3
push
jb
push
jns
stos
jb
loop
sti
mov
movl
jg
xchg
sti
sub
jae
dec
mov
or
call
mov
adc
cs
rclb
mov
popa
sbb
andb
mov
jnp
sub
xchg
pop
sbb
jnp
fdivrl
test
xorl
xorl
pop
scas
pop
mov
or
inc
cmovne
loopne
mov
mov
dec
dec
dec
xorb
test
inc
mov
in
fs
pop
in
cwtl
aad
xor
sarl
in
inc
lcall
or
sbb
sarl
push
mov
push
xlat
inc
xchg
add
and
and
jge
js
push
jno
pusha
or
rcll
inc
xor
divl
dec
fdiv
in
mov
sbb
sub
inc
pop
push
cli
and
leave
lret
jae
in
mov
lock
fbstp
mov
adcb
adcl
mov
mov
push
lcall
sub
push
and
mov
mov
loope
inc
std
mov
outsl
mov
sbb
or
adc
pushl
jae
lcall
push
cwtl
adc
lret
jno
or
mov
jge
scas
and
aas
adc
pop
ret
pop
mov
mov
icebp
and
imul
jno
js
mov
lret
cmp
es
mov
cwtl
and
int3
outsb
dec
dec
stos
fs
xchg
mov
nop
in
pop
mov
jge
pop
sbb
int3
cmp
imul
mov
pop
pop
jo
add
pop
dec
cli
push
pop
cmp
daa
loope
scas
jbe
in
cmpsl
lret
jbe
and
dec
fldt
loopne
xor
adc
or
push
sub
xchg
inc
mov
shl
pop
nopl
rorb
shlb
xor
leave
or
fwait
or
jp
int3
dec
fdivp
mov
ret
add
jae
je
jge
call
mov
xchg
in
pop
sbb
adc
add
pop
mov
xor
movb
push
jmp
lods
xor
jp
pop
sti
cli
sub
dec
mov
adc
fs
mov
inc
and
ret
jecxz
pop
push
out
push
push
int
cmp
cmp
mov
or
and
das
or
repnz
mov
jb
and
lcall
call
movsb
loopne
in
sub
pop
lret
jnp
xchg
dec
test
jmp
rolb
fcompl
inc
mov
rolb
aad
ljmp
sbb
xchg
or
xor
xor
xor
fsubrs
test
mov
das
jge
rep
mov
jle
imul
jne
mov
loopne
or
mov
push
mov
call
std
ss
pop
mov
loopne,pt
xor
int
pop
push
sub
movsl
lods
test
jno
inc
sub
jbe
std
ds
insl
jae
pop
or
dec
sbb
test
fldenv
sub
into
cwtl
push
xor
stos
loope
outsl
sbb
sub
xlat
xchg
mov
andl
movzwl
dec
xor
enter
jle
mov
stc
mov
lds
xor
rcll
mov
insb
add
push
idivb
and
cmp
rcrb
std
out
mov
jecxz
mov
lahf
lret
mov
mov
insl
clc
les
xchg
add
addb
xorb
fmul
repnz
enter
pop
xchg
cmp
out
fiadds
mov
test
inc
push
push
fneni(8087
frstor
sbb
aam
xor
ja
negb
push
sub
inc
ret
loopw
test
mov
and
mov
les
push
jo
jno
enter
stos
test
push
lahf
mulps
int3
out
fistpll
jae
jbe
les
push
lods
dec
or
je
jb
out
or
xlat
mov
inc
mov
sub
cmp
dec
addr16
in
stos
cmp
pop
add
add
inc
xchg
cmp
pop
out
repz
xor
into
shr
or
push
jae
mov
neg
fstps
ficoml
and
pop
fsts
mov
sbb
mov
pop
mov
xchg
push
mov
xorl
subb
adc
mov
loope
fdivr
dec
xor
rclb
test
or
data16
repnz
add
pop
icebp
loopne
mov
mov
loop
xor
fstl
mov
les
pop
adc
jge
inc
js
call
mov
jo
or
gs
add
add
mov
int
loope
dec
push
cmpsl
mov
ret
xor
pop
and
js
xchg
lock
insl
jle
and
clc
inc
in
push
std
jb
jne
mov
pusha
orl
into
adc
xchg
jle
jne
mov
dec
mov
and
add
push
imul
inc
dec
into
or
cs
fildl
je
lret
ret
cmp
sub
pop
inc
in
jbe
decl
int
leave
pop
test
and
sbb
in
arpl
adc
fdiv
push
dec
cwtl
lds
cmp
or
mov
mov
dec
cmp
imul
ret
hlt
subb
enter
pusha
fsubp
sbbl
sahf
jl
inc
cmp
loopne
fucom
dec
in
sub
cmp
loope
or
rol
mov
xor
push
stc
cmovns
clc
or
leave
mov
sbb
into
pop
mov
sbb
scas
pop
cmp
inc
lods
mov
and
add
sarl
mov
loope
inc
test
lock
out
bound
inc
cmp
jo
adc
outsl
call
imul
fdivrs
fbld
fdivp
add
movsl
movsl
xchg
or
outsl
cltd
mov
xor
add
test
sbb
in
xor
dec
sub
lret
scas
imul
es
sub
stos
jns
mov
push
inc
call
push
aaa
mov
push
push
sbb
insl
into
into
lret
pop
scas
call
enter
mov
ret
loope
in
jl
pop
addb
xlat
in
fists
sahf
mov
dec
daa
shrl
pusha
rolb
daa
das
xor
jns
push
shrl
ret
jecxz
or
sti
je
or
pop
cwtl
adc
stos
es
out
mov
dec
das
clc
mov
outsl
dec
je
rcll
or
cmp
cmp
and
scas
xlat
inc
sub
iret
out
andb
mov
loop
cwtl
js
sbb
pop
outsl
xor
push
adc
lods
movsl
popf
mov
lea
inc
jmp
push
scas
xchg
push
xor
outsb
sti
jb
pop
insb
mov
inc
jp
enter
jae
in
jg
scas
adc
imulb
adc
cmp
call
stos
mov
adc
xor
cwtl
cli
imul
lods
sbb
mov
xchg
dec
roll
push
icebp
stos
sub
test
pop
mov
js
cmpsl
jae
in
adc
shl
sub
ds
cmp
dec
and
test
mov
xchg
jmp
scas
ljmp
insl
push
xchg
movsl
cmp
pop
andb
and
mov
add
fists
push
outsl
repz
in
sbb
dec
movsl
jmp
iret
jecxz
sahf
out
xorl
xchg
mov
inc
add
mov
rclb
pusha
jbe
or
cwtl
xor
jmp
divb
subl
ljmp
push
icebp
push
imul
push
mov
adc
mov
push
push
sbb
adcb
adc
and
pop
mov
mov
bound
or
xchg
enter
pop
inc
sub
mov
fldcw
es
cwtl
repnz
jl
jo
js
or
imul
fptan
jne
dec
cmp
mov
xchg
aaa
jbe
push
cli
dec
sub
dec
jno
cmpb
cld
outsl
dec
cmp
daa
xchg
nop
mull
or
jmp
xor
cmp
int
popf
inc
mov
idivl
cmp
push
pop
xchg
jo,pt
adc
xor
lea
cmp
sarb
and
pushl
repz
lret
cmp
adc
scas
subl
fimuls
leave
jae
mov
clc
stc
xor
fs
jb
jmp
icebp
vshufps
xchg
ljmp
data16
fisubrl
out
stc
mov
cmp
xor
out
xchg
outsl
mov
jge
ret
adcb
int
jp
mov
fistps
xchg
xchg
repnz
js
sub
xor
inc
add
sahf
aam
inc
lret
shll
and
push
loope
push
mov
add
inc
imul
rcl
cmp
orl
or
lds
xchg
aas
xor
mov
push
scas
add
shlb
pop
add
cmpsl
movsl
scas
sahf
movsb
sbb
arpl
int
sbb
dec
pop
ss
arpl
or
clc
cmpsl
popf
cltd
add
lret
stos
movsb
xchg
jno
push
mov
inc
test
flds
mov
popl
xchg
mov
push
cmp
push
mov
scas
lcall
lahf
xchg
pop
in
test
pop
test
push
xchg
add
jle
nop
nop
clc
inc
mov
push
hlt
int3
mov
scas
jmp
adc
jno
or
xor
and
cli
jmp
in
pop
cli
sahf
ja
aad
insb
in
push
popf
fcoml
add
bound
aam
cli
push
dec
ja
into
xor
push
xor
xchg
jg
inc
test
cwtl
jmp
mov
sub
test
leave
call
inc
add
out
inc
ret
mov
sub
aam
inc
cmp
out
repz
pop
and
add
subl
lcall
push
xchg
lds
cwtl
das
bswap
gs
cli
xor
push
jle
pop
dec
sub
rorb
ljmp
mov
mov
push
adc
cmp
cmp
in
inc
xor
es
add
add
inc
ret
scas
xor
adc
hlt
jno
sub
std
loope
push
cmp
sarb
and
out
cwtl
lds
aam
pop
loop
repz
push
push
pop
pop
fucom
mov
pop
inc
dec
cmp
adc
pop
and
cmpsl
sub
daa
int
rcll
mov
pop
fcoms
sbb
sbb
inc
stos
jno
and
push
movb
div
xchg
xor
outsl
out
test
jmp
imul
xor
scas
xor
pop
ret
loopne
test
ret
nop
in
inc
inc
add
enter
xor
jecxz
dec
out
cmp
mov
clc
imul
lcall
lock
idivb
xor
addr16
mov
fwait
pop
sbb
rclb
and
ret
add
nop
icebp
cmc
js
mov
adc
rorb
aad
or
push
scas
or
mov
lcall
xor
cli
ds
je
or
cli
or
imul
xor
xchg
sbb
andl
xchg
jmp
clc
mov
or
push
fwait
mov
repnz
push
mov
insb
mov
cmc
dec
pushf
lods
inc
movb
or
lds
lret
mov
adc
aas
pop
mov
mov
ja
or
mov
pusha
inc
lds
cmc
hlt
add
jno
xchg
out
lock
adc
mov
jae
roll
inc
rolb
rclb
cmp
ret
popf
in
or
ret
fistl
push
insl
pushf
punpcklbw
sbb
xor
push
xor
lret
sahf
addr16
adc
mov
int
mov
inc
mov
push
repnz
xor
fwait
sbb
addr16
sub
jae
push
push
inc
popa
andl
push
test
jo
pushf
movl
bound
and
arpl
xor
or
xorl
adc
push
outsl
mov
push
mov
cld
inc
out
lock
jp
push
arpl
js
jae
gs
sub
out
inc
xchg
lods
xor
es
mov
ds
ror
push
notl
dec
test
jnp
sub
push
flds
ja
cld
cmp
mov
scas
std
aad
xchg
xchg
fistl
dec
mov
negb
popf
call
mov
jnp
sbb
aaa
jnp
jmp
and
push
icebp
jmp
in
jge
cmp
mov
test
xor
mov
scas
ficoms
and
and
in
test
stc
lods
movsl
ss
shr
sub
loope
fwait
mov
scas
mov
xor
mov
cmc
mov
and
movsb
cmp
jnp
inc
xchg
into
stos
pop
pop
xchg
or
push
lahf
repnz
pushf
mov
pop
ss
xchg
cwtl
flds
add
lock
push
mov
and
sahf
popa
hlt
cmpsl
dec
push
js
xchg
popa
pop
ret
sti
jle
ds
push
outsb
pop
xchg
and
stos
cmpsb
mov
xor
fldcw
add
inc
push
add
cmpl
cmpsl
or
mov
mov
frstor
in
xchg
mov
sbb
inc
shr
insl
fs
mov
and
mov
sub
ss
pop
jp
les
imul
ss
or
leave
ds
xchg
cmp
mov
sbb
sbb
jle
fidivl
xchg
push
lcall
stos
cmovle
gs
cltd
add
in
negl
sub
xchg
pushf
push
inc
sbb
inc
into
mov
cmc
lea
negl
int3
fs
jns
adc
faddl
xlat
mov
pop
pushf
movsb
or
push
push
insb
fwait
xor
sbb
shlb
mov
aas
xchg
cltd
cli
insl
mov
mov
mov
xchg
mov
int
aam
xchg
loop
ljmp
cmp
push
inc
ljmp
mov
sbb
sub
dec
cwtl
in
fsubrs
dec
push
dec
imul
ffree
adc
sbb
cltd
insl
jmp
jne
fstpt
xchg
xor
aas
jbe
enter
jl
pop
aad
cld
mov
mov
dec
xchg
in
or
je
scas
ss
out
orl
xlat
mov
hlt
add
scas
mov
lds
int
bound
out
fnsave
jl
mov
aaa
xor
pop
inc
rcr
xchg
mov
sub
stc
ja
xor
sbb
mov
repz
push
shlb
and
sbb
pop
aam
cmp
incb
rcrb
mov
mov
std
mov
xor
pop
mov
or
and
xor
mov
push
or
rcl
movsb
push
cltd
xchg
call
xchg
inc
lea
insb
pushf
xchg
dec
iret
push
test
xlat
cmp
xor
movsl
ret
es
lock
loop
push
sahf
xchg
loop
cmc
jecxz
fdivs
xchg
adc
jae
mov
pop
pop
mov
nop
xor
scas
cmp
adc
sti
xchg
add
outsb
push
stos
or
mov
out
in
xchg
adc
or
sbb
xchg
xchg
mov
gs
mov
mov
outsb
cli
mov
and
push
pop
jp
add
push
or
je
mov
mov
ds
stos
incl
or
decb
push
xchg
and
xor
iret
js
xchg
loop
ss
mov
sbb
out
jp
pop
mov
cs
test
adc
and
ljmp
aaa
mov
imul
scas
negb
arpl
add
hlt
or
clc
jl
sub
mov
cmpl
jmp
xchg
cmp
dec
xchg
jmp
gs
test
jb
dec
mov
mov
push
xor
frstor
mov
mov
xor
pop
jbe
cmpsl
fldcw
sub
push
xchg
loope
stos
xor
das
clc
mov
cmc
xchg
adc
insb
into
xor
pop
daa
or
push
es
xorb
sarb
jae
pop
mov
pop
mov
dec
insb
shlb
push
jle
mov
arpl
and
shr
mov
scas
fsts
mov
repz
cmp
jl
dec
inc
and
mov
pop
add
mov
into
mov
ja
adc
popf
movsb
mov
stc
jge
fsubrs
gs
add
cltd
loop
dec
dec
inc
or
add
add
sub
shrb
mov
addr16
inc
or
mov
xor
hlt
push
mov
sub
mov
xchg
pop
insb
mov
call
nop
fcmove
mov
push
pop
push
rcll
popa
xchg
push
jmp
rcrl
cmc
sbb
pop
inc
add
cmp
pushf
ljmp
fnsave
adc
test
hlt
push
jae
cmp
xchg
repnz
in
pop
js
adc
inc
mov
int
cmc
and
inc
or
popa
or
jg
std
in
scas
inc
xchg
cld
lcall
aas
dec
mov
xchg
clc
xchg
sahf
mov
cmpsl
cmpsb
testl
and
lret
outsb
out
imul
out
cli
pop
outsb
sub
xchg
xchg
push
jle
pusha
call
mov
push
lcall
in
popf
mov
sub
xor
sbbl
cmp
adc
jae
and
or
cmp
daa
lock
cmp
pop
mov
push
xchg
popf
dec
sub
fdivl
pop
cmp
test
dec
add
cmpsl
das
dec
inc
add
fdivs
fsub
aad
mov
cmp
enter
stos
int3
test
in
xchg
cltd
ljmp
mull
xor
mov
push
jb
jmp
and
pop
jbe
pop
bound
fimull
dec
test
cs
loope
sbb
cmpsb
mov
add
pushf
dec
add
mov
jno
into
mov
mov
in
add
rcrb
xchg
dec
iret
dec
fistpl
movsl
ret
stos
sub
cwtl
icebp
inc
sub
sub
sbb
cmp
shrl
pop
mov
sub
sbb
inc
xchg
inc
dec
cmp
icebp
rcrl
lock
cwtl
test
fsubrl
mov
notl
and
add
pop
mov
add
adc
fimuls
outsl
mov
mov
adc
data16
inc
out
test
aam
sbb
dec
mov
inc
scas
loope
dec
mov
sbb
mov
jnp
sub
or
int
push
dec
hlt
das
fisubs
sbb
stos
or
dec
lock
ljmp
lods
int3
or
push
pop
cmp
ret
cltd
jl
fdivl
lret
ja
aas
cmp
dec
dec
cmc
cmc
push
sti
movsl
xchg
sahf
adc
iret
sti
push
ljmp
jl
arpl
fistps
out
pushl
fsubs
push
ljmp
rol
int
mov
sbb
jnp
pusha
cmc
divl
xor
shl
mov
lcall
aam
xchg
arpl
jl
loopne
lock
stos
sub
insl
pop
cmp
cmp
pop
pushf
stc
inc
nop
lret
xchg
xor
lea
pushl
mov
cmpsl
xor
gs
mov
xor
pop
std
cmp
jmp
pop
mov
pop
add
shlb
arpl
mov
stos
inc
mov
jg
and
cld
inc
addr16
test
jp
imulb
adc
out
outsb
push
add
dec
scas
ds
push
cli
lret
mov
les
mov
jne
and
sbb
pop
sub
testb
andb
data16
xor
int
mov
mov
test
jmp
lret
lods
inc
xor
test
lods
and
xchg
jp
fdivl
mov
inc
xorb
ss
xor
cmpsl
test
in
test
sbb
push
xor
cmc
sub
dec
arpl
out
adc
es
in
icebp
push
pusha
lret
out
sbb
inc
lahf
mov
sbb
jecxz
shl
add
and
jbe
inc
fwait
sbb
cmp
ss
insl
cmpsb
fs
or
mov
pop
ror
repz
and
cmp
mov
jb
scas
cmp
xlat
repz
cmp
ret
and
pop
mov
ja
sub
cmpsl
mov
or
pop
pop
lret
data16
inc
lret
adc
outsb
cld
sarb
imul
dec
and
dec
sbb
jmp
jle
out
add
scas
push
int
lds
or
push
mov
jg
cld
subb
jecxz
shl
add
call
nop
cwtl
stos
dec
js
sub
and
popa
fsubrs
sbb
pop
adc
or
adc
dec
add
pusha
dec
mov
adc
stos
aas
lods
mov
mov
stos
mov
popl
mov
mov
mov
int3
das
sub
fwait
xchg
loopne
mov
or
out
scas
push
cmp
ffreep
inc
jbe
mov
sub
mov
pushf
ss
jmp
adc
je
stc
push
aad
pop
xchg
cmp
fistl
push
insb
add
push
lcall
mov
mov
or
sub
mov
ds
les
push
jp
sub
mov
add
pop
outsb
cmpl
adcb
or
xorl
mov
cld
jo
pop
push
cld
in
dec
pop
neg
popf
or
dec
mov
popf
addr16
push
mov
xlat
out
repnz
not
inc
nop
dec
add
aas
cmp
push
rolb
std
sbb
push
popa
shlb
push
insb
lds
shlb
adcl
scas
sub
fstl
jmp
adc
mov
out
outsl
xchg
pusha
adc
sub
mov
loope
inc
movsb
and
jmp
mov
jns
or
sbb
mov
shll
jno
outsl
dec
fisubs
or
int
nop
fists
clc
sub
mov
ret
xchg
fidivl
or
pusha
mov
sahf
sub
divb
jbe
out
mov
sar
push
dec
jae
je
mov
add
lds
add
icebp
sub
jl
mov
add
pusha
sub
jno
add
xchg
sub
jns
fwait
push
daa
xor
inc
mov
cli
inc
scas
or
xchg
or
fisttpll
jnp
lods
je
fcmovnbe
je
sahf
sbb
mov
sub
imul
cmp
stc
stc
in
les
icebp
ljmp
arpl
jp
movsl
pushf
iret
insb
jmp
call
sub
jmp
adc
negb
test
les
jg
mov
cld
xor
sbb
lea
fcmovnbe
jae
in
into
xchg
mov
adc
js
mov
out
repz
or
ds
jp
sub
icebp
iret
pop
or
mov
sbb
andb
aaa
and
test
add
int
std
xor
sub
int
push
fmul
jns
and
rcr
or
push
adc
bound
std
loopne
jle
aad
xchg
iret
pop
ret
int3
push
loopne
push
out
ds
push
push
inc
cmp
ljmp
pop
mov
cmc
inc
jmp
mov
sub
cmp
jnp
mov
mov
out
or
loop
dec
xor
movsl
insl
ret
andb
dec
inc
daa
gs
xchg
xchg
adc
ret
ror
push
push
pop
dec
in
jmp
ja
cmp
mov
cs
stc
xchg
stc
mov
xchg
shr
inc
rorb
aaa
into
or
jne
dec
jg
daa
lahf
jl
std
xchg
sbb
sub
dec
stos
orl
je
scas
push
hlt
push
xor
ret
repnz
pop
push
add
into
in
mov
pop
ret
cmp
cmp
mov
xchg
mov
xor
ret
lock
mov
sti
lock
ficompl
and
ja
inc
xlat
mov
cmp
rclb
roll
pop
cmp
dec
inc
jo
cmp
imul
repz
insb
inc
or
enter
enter
add
push
ret
xchg
sub
xor
ljmp
dec
lea
and
or
ds
mov
add
sbb
mov
ds
sub
pop
out
inc
leave
xchg
test
and
shlb
mov
dec
xchg
adc
dec
out
push
outsl
fldcw
fsubr
dec
iret
fs
cmp
imull
add
jmp
cld
xchg
mov
sahf
cwtl
dec
cs
adc
nop
push
jae
je
mov
push
mov
adc
dec
sti
out
rcll
push
repnz
mov
out
inc
mov
push
mov
mov
jb
movsl
sahf
scas
or
jno
pop
sub
mov
lcall
xor
out
shll
and
and
mov
xchg
test
dec
mov
add
scas
add
int3
add
dec
adc
lahf
inc
clc
aad
fwait
nop
rclb
inc
xor
cmpsl
jg
sub
les
nop
leave
sub
dec
cli
loop
sub
sbb
out
sahf
mov
pushf
mov
inc
js
add
mov
pop
lods
and
cltd
cmp
push
xchg
mov
xchg
out
add
inc
pop
mov
iret
adc
or
jae
loope
pop
test
push
mov
outsl
adc
pop
repz
mov
adc
cmc
mov
frstor
jg
mov
cwtl
imull
loop
ja
sti
dec
in
cmp
inc
sbb
mov
jg,pt
popf
pop
fildl
or
mov
adc
loope
jae
xchg
jl
cmpsb
cmc
and
jg
push
fldcw
pop
stos
inc
pop
xchg
dec
fidivrl
fsts
aam
sub
or
sti
mov
xlat
in
rcr
push
lret
sbb
clc
fldt
push
shll
dec
jl
pop
and
sahf
aam
pop
push
sti
jno
iret
jl
adc
jnp
faddp
mov
std
dec
lahf
cltd
scas
icebp
mov
pop
jo
mov
pop
xchg
xchg
cmpsb
lods
push
and
js
arpl
and
or
xchg
sbb
loope
scas
pop
mov
dec
movsb
mov
sub
daa
mov
jp
xchg
ljmp
xor
and
jge
inc
dec
aad
jbe
cltd
stos
into
mov
mov
xchg
mov
imul
sbb
xchg
xchg
cmc
push
movsl
jp
pop
fstpt
insb
leave
test
lods
jne
push
pop
scas
inc
stos
mov
lret
int3
inc
jecxz
push
lods
pop
xchg
mov
pop
dec
pop
out
cmp
push
or
loope
lahf
gs
outsb
lods
and
inc
out
mov
arpl
mov
stos
nop
mov
aad
adc
adc
into
and
xor
in
push
xchg
repz
push
and
aaa
cltd
sti
nop
insb
lods
jl
lahf
cmp
and
ljmp
stc
frstor
mov
inc
popa
imul
push
jle
pop
push
mov
fnstsw
aas
into
imul
push
lock
shll
xchg
push
pop
cmp
stc
sub
idivl
cmc
xchg
mov
add
mov
in
fldt
cmpsb
mov
ret
insb
adc
fcmovne
jp
adc
xchg
adc
mov
and
clc
in
mov
push
rol
adc
mov
mov
int
fnstenv
ljmp
lods
mov
pop
popa
push
fldt
stos
hlt
jmp
mov
or
scas
mov
sub
pop
ja
pushf
mov
lahf
dec
sbb
jnp
mov
cmpb
aaa
fsubr
cmp
out
dec
loopne
mov
cmpl
std
mov
lahf
inc
cli
pop
scas
insb
arpl
mov
inc
adc
and
cli
or
mov
lods
dec
sbb
mov
pop
in
leave
xlat
fidivl
daa
test
rorb
gs
sbb
xlat
mov
dec
call
xchg
jg
out
sub
and
scas
leave
std
xor
dec
pop
loop
call
jecxz
add
sub
pop
dec
xchg
adc
inc
and
jg
mov
adc
or
in
dec
lea
adc
fs
pusha
cli
xor
add
add
imul
out
shll
enter
subl
cmp
in
jne
xchg
imull
jle
dec
lds
mov
lret
bound
sbb
push
ss
in
dec
cld
test
bound
jne
lea
inc
dec
fidivl
arpl
mov
cmc
stc
stc
mov
subl
push
jmp
inc
les
push
aam
cmp
lret
repz
sti
xchg
or
xchg
aas
ret
xchg
and
pop
and
mov
pop
xchg
int
in
cltd
or
insb
in
ss
adc
stos
loop
sub
std
xchg
mov
aas
xor
push
cmp
or
sahf
bnd
stos
xchg
add
xchg
sub
mov
addr16
iret
sbbl
xor
sbb
sahf
dec
fnstenv
in
mov
fidivs
notl
sub
lds
cmp
jg
jp
popf
in
xor
cld
lahf
mov
fcomip
lods
scas
iret
mov
and
loope
in
push
pop
mov
dec
daa
pop
pop
mov
jo
adc
aam
loopne
jbe
in
adc
sti
xlat
lcall
xchg
mov
cs
cmp
fstpl
repz
ljmp
aad
sti
sub
test
int
xor
dec
xor
fwait
lahf
dec
mov
adc
mov
subl
fnsave
aas
adc
cmc
daa
rcll
and
cmpsb
fnstcw
cmp
data16
inc
das
iret
mov
mov
add
cs
mov
or
sub
cli
pop
nop
adc
adc
inc
stos
imul
mov
jle
adc
dec
fwait
inc
ljmp
ja
push
add
enter
sbb
or
mov
push
and
push
sbb
les
push
es
dec
pop
sbb
mov
imul
daa
js
stos
mov
ficoml
and
ret
xchg
mov
mov
xlat
das
ss
test
inc
push
push
push
mov
cmp
pop
dec
jnp
call
imul
dec
xchg
or
xlat
sarl
inc
sub
stc
sbb
adc
aam
setne
fwait
mov
push
je
rcl
dec
lds
add
and
or
sti
add
outsb
es
add
pop
jg
out
dec
clc
cmp
xor
lret
cmp
fisubs
or
mov
ret
or
aas
repnz
sti
and
js
aam
fnstenv
cmpsb
dec
icebp
mov
jno
pop
jno
jne
shrl
jnp
lds
adc
inc
ss
add
mov
lret
stc
xor
xchg
test
xlat
jle
inc
repnz
pop
cmp
inc
jg
mov
jnp
xchg
outsl
sbb
mov
jns
stos
decl
jle
dec
imul
or
mov
pusha
std
dec
jns
mov
sub
outsb
arpl
aaa
inc
es
xchg
inc
roll
add
ret
or
les
xchg
dec
inc
dec
jbe
mov
mov
jle
test
xchg
push
in
jge
add
xchg
push
sub
mov
cli
test
les
push
cmp
nopl
shlb
lret
faddl
outsb
mov
pop
imul
adc
mov
sbb
push
ss
scas
sbb
movsl
mov
inc
jns
mov
fs
push
adc
pop
mov
cmpsb
loop
test
sub
cmpsl
sti
lods
mov
xchg
divb
push
dec
shlb
jae
add
xchg
xchg
adc
inc
jbe
inc
sahf
and
mov
pop
cld
popa
shlb
fwait
sbbb
ss
mov
push
adc
lods
sub
inc
xchg
dec
fsubl
jg
lock
das
jmp
push
mov
adc
mov
lock
jne
xchg
push
movsl
mov
mov
add
jmp
jns
add
cmc
icebp
in
sub
push
sub
cmp
dec
out
aam
in
mov
repnz
push
jmp
lret
cmp
arpl
js
out
stc
out
iret
popf
dec
push
jnp
daa
add
scas
dec
xor
mov
stos
scas
mov
icebp
add
sub
addr16
cli
cmp
enter
shl
enter
or
jle
popf
push
pop
push
and
xchg
jg
cld
out
mulps
mov
mov
lret
push
cmp
imul
xchg
addr16
and
ljmp
push
adc
mov
call
jb
ffree
push
out
ficompl
push
mov
cmpsl
or
and
in
add
fbstp
pop
out
outsl
mov
or
mov
cmp
sub
rol
ret
inc
call
xor
lock
insl
xor
es
jg
ret
pop
movsb
jnp
inc
lret
test
jle
repz
lcall
movsb
mov
testb
sarl
mov
sub
sub
aaa
pop
xchg
cmp
jno
mov
push
je
xorb
xor
flds
mov
or
cltd
inc
pop
imul
ds
fnstsw
or
dec
ret
cmp
mov
repz
or
in
sbb
out
repz
adc
adc
negb
inc
rcl
cmp
outsl
pop
daa
addr16
lods
imul
in
mov
mov
pop
mov
add
jle
pop
andl
sbb
dec
sbb
out
cmp
mov
nopl
aas
ss
in
xchg
xchg
stc
adc
outsl
jmp
enter
xchg
cmc
or
outsb
int
xchg
lds
jns
push
mov
add
fidivrs
leave
push
fwait
pop
mov
pop
cmpl
dec
lret
push
jne
leave
mov
inc
and
idivl
mov
pop
mov
nop
jmp
sub
loopne
dec
sahf
xchg
mov
int
xor
mov
mov
in
cmc
fnsave
lock
fwait
jb
repz
test
inc
mov
mov
aam
fsts
mov
loopne,pt
loopne
lahf
mov
jg
sbb
dec
add
mov
push
push
sbb
loope
dec
xchg
mov
faddl
or
xchg
dec
das
pop
adc
push
dec
data16
cmp
ja
aad
aad
je
sbb
dec
xchg
push
stos
sub
sub
pop
mov
sub
ret
nop
jmp
pop
lcall
adc
aas
push
mov
test
inc
cmp
out
pop
out
xor
sub
sahf
ror
mov
lock
fldenv
sti
add
sahf
inc
insb
sbb
test
jbe
lahf
fs
movsl
clc
stc
dec
or
pushf
ret
call
or
adc
out
sbb
push
mov
sub
xor
sub
test
loopne
movsb
inc
sbb
repnz
je
rcrl
call
lahf
mov
pop
jg,pn
push
xchg
ror
bound
jmp
fisttpll
pop
int3
into
cmp
jl
xchg
pop
cmp
jns
icebp
incb
outsb
jle
imull
pop
js
xchg
outsl
adc
pop
add
cmp
aas
pushf
rol
and
movsb
push
imul
mov
xor
mulb
pop
fdivrl
cmc
pop
xor
xor
mov
lods
negl
inc
in
dec
hlt
inc
jle
push
mov
mov
icebp
mov
in
and
movsl
push
cs
dec
das
cmp
ljmp
add
iret
dec
sbb
ss
xchg
cmpsl
sbbl
xorl
bound
loop
push
push
test
loop
pop
ja
or
xlat
cmp
aam
push
sub
xchg
mov
inc
test
cmpsb
dec
adc
aaa
adc
iret
aam
rorb
movsb
movsl
aam
out
insl
jno
jo
stc
arpl
incb
adcl
out
or
lret
jp
or
jmp
nop
movl
push
mov
das
les
cld
daa
jbe
and
or
and
sbb
and
mov
aad
aam
lods
mov
ret
daa
jnp
sahf
test
in
out
inc
lret
xor
adc
loopne
push
jmp
mov
mov
xchg
shl
xchg
mov
push
cmp
xchg
rcl
push
mov
inc
fmuls
rcl
iret
sahf
mov
into
xchg
and
mov
or
mov
push
mov
cmpsb
and
stos
jae
jmp
and
rol
mov
mov
icebp
mov
jbe
test
sar
jns
cmp
and
xor
nop
sub
pop
xchg
bound
shll
dec
outsl
bound
jne
adc
nop
repz
jg
mov
loop
insb
in
int3
sub
inc
lods
jb
rorl
test
in
bound
xchg
jmp
cmc
cld
push
jne
mov
mov
sub
jb
push
xchg
rol
or
cwtl
les
pop
jnp
adc
xchg
cltd
aad
xorw
and
sub
sti
outsb
in
popf
repnz
rcl
add
repz
fnstsw
xchg
adc
es
clc
dec
in
mov
push
jbe
pop
jo
cmp
add
ficompl
add
mov
cmp
in
dec
pop
mov
pmuludq
xchg
xchg
mulb
push
mov
jle
sub
pushl
jl
jmp
call
xchg
and
in
xchg
mov
mov
or
mov
or
jo
mov
repnz
or
fstpt
jecxz
je
jl
push
pop
aam
sti
divb
in
out
dec
lock
into
insl
cmpsb
jp
cmc
mov
je
insb
cli
mov
popa
ss
unpcklps
enter
sub
cmp
cmp
into
movsb
jl
fnstsw
push
dec
jo
cmp
adc
aaa
mov
stos
arpl
add
int
push
ds
add
sub
aam
loope
aas
repnz
push
mov
in
cwtl
test
adc
adc
lds
sarb
cmp
mov
and
add
adc
lret
adc
dec
cmp
xor
out
xlat
push
mov
outsl
or
mov
in
aas
lret
nop
xchg
add
push
sbb
mov
enter
stos
cmp
test
test
dec
lods
pop
cli
adc
aas
cltd
xchg
les
lea
fdivrl
jecxz
fs
adc
add
push
stos
imul
stc
and
pop
test
inc
mov
dec
mov
stos
push
popf
sub
aad
aam
sbb
repnz
jno
mov
sbb
cmp
insb
inc
int3
arpl
ljmp
xchg
cmp
dec
sbb
mov
jo
addl
mov
jge
les
jl
inc
dec
aad
mov
hlt
pushf
repz
imul
and
dec
mov
jl
cmp
sub
xchg
or
test
push
fistl
je
andb
jno
into
xor
shll
fsubl
imul
cmpsb
dec
and
mov
loope
pop
stc
inc
daa
sub
mov
andl
or
mov
test
pop
jmp
mov
es
aaa
jne
push
sub
sbb
pop
outsb
lret
leave
jo
popf
divl
lods
push
cmp
pop
inc
xchg
push
and
adc
jl
push
loopne
adc
inc
mov
pusha
daa
cld
lret
not
test
xchg
test
push
or
shlb
mov
mov
roll
subb
jl
jecxz
jae
cmp
push
nop
cmp
loope
pusha
jmp
cld
add
out
dec
cmpsb
sub
clc
jae
scas
mov
push
lcall
int3
stos
jno
call
mov
hlt
mov
pusha
or
adc
push
je
or
dec
jl
loopew
push
add
cmc
cmp
xlat
jle
cmc
mov
out
adc
push
jmp
outsl
leave
stos
sbb
xchg
mov
outsl
mov
fcom
mov
jne
adc
in
xchg
jns
pop
xchg
inc
std
jg
push
lahf
xchg
test
stos
scas
mov
adc
movsl
scas
dec
sub
mov
push
test
pusha
mov
data16
cwtl
sbb
dec
xlat
repz
stos
push
movsb
dec
sub
shr
leave
into
add
cmpsl
or
imul
lret
mov
or
cmp
shll
test
nop
mov
daa
add
xchg
sub
lock
cltd
aam
in
rol
mov
xchg
in
adc
and
imul
inc
ljmp
stos
inc
push
jmp
mov
pop
or
mov
movsl
inc
repz
test
sbb
stc
cltd
mov
ficompl
imul
xor
movb
leave
shr
or
or
adc
fldt
scas
pop
daa
pop
shr
sbb
jmp
inc
popf
sub
in
mov
sti
test
push
push
into
out
add
and
loop
jae
add
addr16
shll
je
pop
mov
xchg
mov
push
sbb
test
push
jbe
mov
lea
cmc
xor
cmpsb
sub
sub
cli
mov
orl
mov
push
pop
cmp
xchg
or
cmp
sub
jnp
in
sub
mov
mov
loop
out
lods
cs
fistpl
dec
jns
inc
mov
lock
push
dec
inc
and
xchg
pushf
mov
int3
adc
outsl
cmpsl
jno
pop
mov
cwtl
test
aas
loope
inc
inc
out
or
sbb
cmp
adc
dec
push
in
ds
pop
leave
pop
loope
and
sahf
mov
mov
clc
daa
ficoml
stos
imul
stos
movsl
negb
cmpl
fistps
scas
inc
jg
adc
cmc
xchg
xor
mov
into
add
pop
jmpw
mov
cmp
add
andb
sbb
mov
stos
pop
or
fs
pop
mov
mov
std
or
sub
stos
xlat
cmpl
push
or
insb
std
and
or
pop
mov
js
push
movsl
popa
fadds
or
fsubrs
das
imul
test
cmp
jb
aas
or
xor
aad
stos
add
ret
fbld
push
and
pop
icebp
dec
jmp
mov
rcr
push
lret
adc
out
nop
clc
xchg
push
sbb
sbb
push
repnz
test
pushf
mov
scas
aam
inc
lea
push
aaa
jo
mov
mov
dec
add
lea
cmp
movsl
imul
jmp
mov
ja
fstpl
iret
pop
stos
hlt
jne
push
negb
and
sbb
xor
insb
xchg
outsb
sbb
notb
hlt
aas
mov
jp
adc
jae
cmpsb
push
xchg
ficompl
cmpsl
pop
pop
push
movsb
mov
out
mov
mov
cmp
xlat
test
mov
and
dec
push
cld
pop
mov
dec
jb
fnstsw
mov
scas
mov
jmp
into
rolb
add
cmp
push
mov
fdivrs
icebp
int3
inc
xchg
and
jne
mov
and
adc
shlb
mov
out
xor
mov
dec
aam
sub
xchg
movsl
int3
das
lods
push
sbb
and
leave
test
roll
push
mov
and
stc
nop
fst
jae
ret
or
jecxz
jecxz
loope
dec
jno
pop
xlat
shl
and
hlt
mov
scas
push
push
sbb
cli
stos
push
cs
loope
ds
lcall
jb
sbb
sbb
push
js
xor
dec
sbb
clc
inc
xlat
fldenv
insl
sti
push
xor
pop
jne
outsl
addb
mov
hlt
dec
mov
cmp
jbe
scas
loopne
std
popf
jb
dec
or
push
sbb
push
out
fs
cs
addr16
cmp
lcall
sbb
arpl
loope
pop
insl
mov
push
popa
jp
movsl
jecxz
jnp
dec
ds
call
sbb
push
and
add
mov
ja
rolb
fcomps
out
xchg
pop
lods
ja
into
outsb
in
inc
push
sub
push
xchg
jns
cmpsl
adc
dec
xor
mov
gs
jnp
pusha
push
das
sub
test
xor
movsl
xor
data16
mov
cs
int3
pop
push
push
icebp
xor
insl
dec
stc
lahf
push
pop
push
push
sbb
mov
clc
xchg
cli
dec
dec
inc
insl
data16
lds
cmp
or
adc
mov
addr16
push
orl
cmp
aad
addl
pop
popa
mov
mov
mov
xchg
lcall
fwait
adc
and
dec
lcall
xchg
cmp
stos
icebp
inc
jg
addb
movswl
fs
arpl
pop
lock
hlt
mov
jecxz
sahf
into
and
mov
fs
mov
inc
call
loop
dec
mul
ret
fiaddl
mov
mov
hlt
bound
aam
sahf
fisttps
lea
rcrl
pushfw
addb
scas
iret
inc
dec
xchg
push
pop
dec
jmp
jg
lea
mov
loopne
out
add
or
mov
dec
add
jmp
jecxz
call
and
xchg
mov
and
into
inc
inc
test
cli
getsec
sbb
pushf
mov
sbb
ds
in
push
add
mov
xlat
sub
lds
mov
fldt
jl
pop
cmpsl
in
iret
int
cs
and
insb
aam
fiaddl
cli
lods
pop
out
std
in
xchg
dec
imul
icebp
or
adc
sti
ljmp
scas
es
sbb
addr16
mov
push
sub
mov
shll
jge
je
fisubrs
arpl
js
std
and
xchg
jmp
sbb
shl
enter
xchg
pop
lods
or
or
sub
das
ret
in
dec
int3
cmp
adc
add
lods
mov
cmp
pop
cld
and
and
xor
flds
mov
add
inc
sar
jae
test
hlt
rcr
add
jnp
ret
stos
icebp
inc
mov
rol
arpl
mov
pop
push
pop
inc
shl
cmp
mov
mov
pop
push
pop
sub
inc
imul
lcall
dec
sarb
xchg
aam
pop
cs
push
pop
fisttps
mov
inc
fcmovb
xor
pop
mov
test
movsl
in
add
out
or
aaa
push
sbb
or
fs
scas
sub
push
push
das
enter
pop
xchg
inc
mov
inc
push
outsb
inc
scas
or
hlt
xor
jg
add
jns
mov
pushf
repz
repnz
jle
or
inc
pop
mov
mov
add
cmp
pop
xchg
data16
outsl
or
inc
adc
faddl
inc
push
jle
mov
xor
and
sti
inc
lock
rcll
jne
mul
int3
mov
inc
push
push
fbld
and
clc
dec
cmp
pop
add
leave
lock
addb
aas
addr16
loope
mov
cmpsl
stos
shlb
push
mulb
push
push
and
repnz
mov
shll
and
push
mov
and
adc
popf
and
jl
mov
iret
xchg
lret
lods
scas
fidivl
push
test
test
pop
dec
fwait
push
mov
inc
jb
mov
mov
aaa
jge
rcrb
popa
push
adc
dec
mov
lods
stos
cmc
xor
clc
xchg
out
stos
add
mov
test
das
popf
test
dec
movsb
xchg
cltd
cmp
mov
clc
push
out
mov
dec
subb
cltd
sub
and
push
popa
outsl
xchg
ret
xchg
jge
je
fisttpll
inc
sub
xlat
dec
jbe
cltd
jne
ret
out
out
mov
xor
addr16
icebp
mov
xor
ds
inc
push
mov
in
cmp
sbb
inc
enter
stos
repnz
int
scas
jnp
cs
popf
scas
ljmp
mov
pop
cmp
mov
jbe
add
xchg
sub
push
out
pop
leave
inc
inc
adc
xor
sbb
sub
add
push
and
shl
les
lods
ret
pop
fsubrl
xchg
pushf
inc
movl
push
in
cmp
xchg
mov
mov
inc
bound
inc
daa
std
cli
sbb
decb
jmp
jmp
rcr
ss
add
mov
cmp
cld
push
mov
adc
imul
jle
adc
pusha
cltd
in
add
xchg
and
xchg
repnz
data16
nop
loope
data16
rolb
add
mov
xor
dec
xchg
pop
adc
popa
mov
xchg
pop
sbb
testl
or
xchg
and
and
and
aad
sarb
clc
and
adc
aaa
jnp
hlt
scas
mov
test
outsl
call
cwtl
xor
pushf
cli
movsb
pop
dec
dec
sti
xor
loopne
aad
mov
jecxz
push
or
arpl
fstpt
fwait
fwait
sub
in
mov
aam
xchg
rorl
addr16
cld
add
sar
adc
pop
shrl
mov
add
xchg
icebp
mov
inc
mov
push
jbe
dec
sbb
jb
mov
push
rcr
mov
popa
std
or
in
test
xchg
sub
ja
dec
mov
cmp
cmp
xchg
mov
aad
mov
or
cltd
cwtl
xor
cmp
sub
aaa
repnz
ficoms
fistl
in
xor
sbb
adcl
mov
lret
mov
adc
std
mov
and
testb
outsb
cmp
jmp
popa
loopne
push
icebp
mov
jl
xchg
bswap
mov
xor
cli
cwtl
xor
stos
dec
ds
pop
out
outsb
jnp
or
je
in
notb
gs
mov
push
push
sub
imul
out
sbbl
subl
or
inc
mov
fstpt
add
inc
cmc
ja
in
in
mov
jge
lods
add
push
shrb
pop
xchg
add
lea
fmuls
mov
test
mov
add
je
xor
push
jge
jle
jle
cmp
cmpsl
ret
or
push
cld
xchg
cmp
rcrl
push
scas
push
add
mov
mov
fistps
adc
in
sub
and
inc
lds
enter
daa
sub
mov
dec
mov
or
or
jp
aas
fcmovne
and
and
aaa
sbb
push
popa
cmp
stc
sbb
xorl
pop
in
stos
mov
test
pop
bound
cmpsb
scas
adc
lea
mov
ret
inc
test
int
lods
push
add
std
lahf
jbe
lock
mov
mov
addr16
push
dec
fists
mov
mov
cld
jge
dec
inc
fiaddl
xor
push
jae
nop
lea
testb
and
cmpsb
jnp
movl
mov
xor
ds
cmp
push
aas
leave
xor
xchg
pop
addr16
adc
and
push
mov
adc
mov
push
add
mov
rcrb
bound
es
cmp
push
xchg
or
xor
sarb
pop
xchg
jmp
push
adc
adc
xor
mov
movsb
subb
adc
and
and
mov
out
movsb
mov
repz
push
aad
sub
add
pushf
xchg
or
sub
dec
clc
dec
or
mov
outsb
dec
int
dec
pop
test
outsb
out
clc
cltd
xor
in
aas
push
in
push
nop
pushf
mov
mov
ret
rcll
and
or
pop
test
and
stos
int
sbb
insb
ret
mov
jo
clc
push
ret
in
pop
cmpsb
pop
xor
mov
sahf
and
dec
inc
sti
pushf
dec
lock
sbb
push
ds
das
cmp
xchg
sub
xlat
leave
or
pop
lds
xchg
pushf
xchg
ljmp
gs
data16
add
aad
sti
in
push
push
test
stc
mov
or
addr16
sub
in
mov
push
pop
push
jae
cmpsl
cmp
or
aad
or
fistpll
out
test
xchg
or
cmpsb
ret
std
int
cmpsb
es
lcall
int
das
jnp
lcall
flds
sbb
test
leave
xor
push
push
and
xchg
xlat
push
pop
cs
jecxz
call
imul
jp
xor
or
lods
shrl
bound
push
cltd
arpl
mov
jns
leave
mov
cmpsl
mov
push
mov
inc
xchg
call
fldcw
xor
push
in
cmp
imull
xor
xchg
rorb
pop
stos
fildll
mov
push
and
pop
inc
lock
mov
and
xchg
mov
and
in
cmp
stos
lret
cs
sub
test
mov
loopne
push
jae
mov
adc
jmp
and
dec
xchg
xchg
push
and
ret
decb
lock
cltd
cmp
nop
adc
cmp
imul
scas
iret
dec
cltd
lea
cs
xchg
xorl
insb
sbb
loope
or
rolb
ja
jg
jmp
cmp
push
xor
pop
aaa
cmc
cli
and
inc
enter
hlt
std
dec
rcl
je
xor
cmc
dec
dec
dec
jl
and
outsb
xor
rclb
push
mov
push
fimuls
add
push
roll
cmp
mov
cs
aas
ss
sbb
jl
fs
stos
mov
iret
lcall
adc
arpl
mov
sbb
mov
in
push
sub
inc
mov
pop
cmp
lret
xchg
out
test
cmp
mov
pushf
and
and
ds
xor
mov
mov
xchg
cli
je
lods
mov
inc
subl
std
jmp
push
pop
pop
subl
inc
push
xor
outsl
into
cld
ljmp
jp
add
cltd
popa
das
clc
mov
pushf
fsub
insl
and
and
daa
push
je
addr16
dec
aas
lea
push
adc
bound
test
ficompl
icebp
mov
addl
pop
xor
sbb
mov
add
pop
leave
sbb
fmuls
pop
xchg
sub
jmp
test
mov
dec
jg
or
cmp
das
nop
scas
mov
rcrb
aad
dec
pop
clc
pop
xchg
sub
adc
inc
xor
xchg
aaa
mov
pop
movsb
scas
movsb
ljmp
dec
shrb
test
mov
arpl
push
rcl
mov
cltd
ficoms
dec
or
sbb
imul
repnz
dec
inc
ret
stos
lret
inc
push
ss
test
fcmovne
pushf
loop
int
rcr
fsts
mov
or
std
adc
jmp
mov
xor
cmpl
push
aam
jae
stos
mull
add
xor
jmp
int3
xor
add
mov
mov
and
sub
js
push
cmp
outsb
and
cmpsl
and
jle
adc
vpermi2q
xor
xchg
cmc
sahf
and
mov
mov
mov
test
sbb
int3
popa
push
ljmp
sub
add
inc
jb
cmp
fcoml
cmp
in
mov
in
pushf
test
imul
jg
leave
add
lods
dec
pop
dec
std
imul
lods
aad
pop
shl
ljmp
jmp
mov
fidivs
aas
inc
inc
out
orb
add
pop
testb
ja
xlat
pop
add
movsb
inc
cmp
mov
sahf
fistps
jbe
adcb
xchg
push
out
fbld
rclb
in
mov
inc
aad
adcb
pop
enter
push
mov
sti
mov
popf
push
push
jae
lret
lea
fldcw
dec
mov
sarl
mov
adc
pop
mov
divl
dec
xchg
dec
fisubs
addr16
test
gs
out
pop
mov
sub
leave
inc
popa
mov
icebp
xchg
or
and
pop
mov
sbb
inc
and
jecxz
lea
push
stos
push
adc
cmp
pop
inc
jle
xchg
push
mov
push
add
mov
loop
push
sahf
mov
jne
daa
ja
xor
jns
push
mov
cs
ficompl
xchg
or
popf
xchg
inc
mov
lret
mov
fimuls
int3
imul
into
or
xlat
push
and
int
ljmp
sahf
not
pop
mov
add
inc
xchg
jp
and
inc
and
popf
mov
and
pop
mov
push
in
sti
jge
mov
shll
bound
mov
add
mov
cmp
aas
aas
insb
push
jmp
pop
xor
out
ljmp
cmpsb
mov
repz
add
adc
push
jo
pop
pusha
jecxz
jae
lcall
sbb
in
stc
int3
ja
jle
sbb
sub
das
sbb
test
ljmp
out
xchg
xor
mov
ja
js
imul
rclb
push
pusha
mov
sub
mov
inc
fwait
and
mov
push
stos
dec
cmpsl
xchg
mov
icebp
push
fld
pop
mov
jl
outsl
test
sbb
add
fsubl
test
cwtl
lods
std
imul
push
test
mov
cwtl
push
lods
test
testl
lea
push
pop
ljmp
mov
lock
dec
cmp
gs
dec
mov
jnp
push
mov
and
inc
cmp
subl
js
cmp
pop
xor
or
or
jmp
sarb
lods
lds
push
rorb
push
jge
mov
enter
fildl
repnz
sbb
and
dec
mov
stos
stos
adc
cwtl
gs
add
adc
ret
enter
divb
cmp
iret
pop
xchg
jl
sub
sub
sub
arpl
cwtl
bound
rcrl
leave
fmul
jp
adc
push
repnz
adc
mov
mov
pusha
inc
dec
insl
fiadds
dec
sub
mov
loopne
cmc
sbb
jne
inc
sbb
adcl
or
mov
orb
xchg
movsb
ljmp
or
cmp
mov
jno
dec
pusha
and
mov
incb
in
test
cmp
pusha
ss
xchg
in
and
in
cmp
add
push
cmp
lods
lods
push
int3
scas
or
cwtl
stos
or
cwtl
dec
mov
cmpsl
sub
jae
and
mov
negl
adc
idivb
or
mov
sub
cli
inc
cmp
cs
adc
sbb
sbb
xchg
adc
cmp
lea
jo
jmp
int
mov
es
push
aas
outsb
jmp
push
sbb
scas
lock
mov
mov
adc
test
sub
xlat
stos
xor
add
mov
iret
data16
cwtl
jge
in
cmc
and
cmpsb
mov
jno
xchg
mov
out
and
mov
xor
or
cwtl
lahf
push
xorl
pop
mov
adc
cmpsl
ja
insl
cltd
or
mov
cli
in
mov
insb
lret
push
lods
dec
ljmp
scas
fwait
cmc
add
xorl
imul
pop
dec
pop
sub
bound
cmp
lcall
dec
ds
cmp
push
popa
mov
dec
inc
cmp
adc
push
addr16
mov
xor
push
sub
lret
add
das
jb
inc
imul
cs
push
mov
clc
mulb
lds
ss
xor
or
jae
inc
xlat
and
out
pop
test
jb
mov
insl
ret
int3
add
inc
jp
test
sbb
je
sbb
mulb
cwtl
mov
dec
lret
in
jb
cmc
adc
fisubrl
testl
mov
aad
jecxz
adc
das
int
cmp
stos
lds
insl
bound
push
pop
mov
data16
in
xchg
andb
shrb
xor
mov
sbb
mov
adc
insb
push
shll
dec
in
hlt
test
ret
cwtl
mov
mov
dec
mov
aam
mov
mov
adc
loope
cmpl
xchg
mov
push
insl
xor
scas
xor
test
xchg
insl
bound
sahf
cs
pushf
mov
adc
xor
sub
xchg
and
sbb
cmc
movsl
inc
shr
pop
cwtl
pop
imull
adc
push
lods
pop
jne
ja
xchg
push
das
lcall
xor
aad
add
mov
xchg
dec
lods
pusha
push
sbb
xchg
popf
mov
gs
leave
mov
pop
lds
and
adc
push
loop
add
xchg
dec
fiadds
mov
stos
jle
hlt
fcmovnbe
movsl
xchg
mov
fisubrl
test
enter
or
addr16
insl
stos
xor
aad
movsl
out
xlat
clc
test
test
push
stos
adc
push
mov
sbb
inc
pop
push
rcr
and
xchg
test
add
fsubrl
add
leave
jne
arpl
jb
xchg
cltd
outsl
mov
cltd
shll
pop
mov
pop
ror
lcall
daa
inc
inc
jb
mov
lahf
jecxz
aad
popf
mov
inc
sbb
mov
xlat
add
mov
out
mov
jb
pop
std
jmp
jb
sub
fsubrp
jge
add
lcall
loope
or
ja
cmpsb
decb
or
pop
shrl
push
or
ss
fistps
lcall
call
jns
sub
jg
mov
and
xor
sbb
data16
movsb
nop
iret
ret
cltd
scas
and
jbe
lods
add
mov
jno
xchg
je
dec
inc
fmuls
adc
sub
or
scas
jmp
add
xchg
push
mov
in
js
aaa
cli
xchg
xor
mov
dec
jecxz
mov
es
fucomi
aam
push
mov
add
repz
scas
sbb
adc
adc
jp
sbb
push
adc
xchg
sbb
or
pop
xchg
jnp
cwtl
add
and
popa
test
ss
nop
mov
push
movsl
push
lods
scas
cmp
imulb
bsf
or
aas
addr16
dec
cmp
push
push
jb
cmpsl
push
mov
adc
and
push
dec
outsb
shll
addr16
nop
inc
or
xchg
fwait
and
adc
insl
dec
inc
cwtl
xchg
lret
int
mov
popa
inc
add
in
pop
rclb
sbb
out
repz
outsl
mov
push
in
mov
cmp
clc
lock
mov
dec
leave
mov
cmp
xchg
negb
mov
adc
push
or
inc
hlt
fiaddl
sub
lods
sub
sbb
mov
nop
inc
cmpsl
adc
cmpsb
jb
mov
fdivrl
xor
pushl
arpl
popf
push
cld
xor
pop
scas
pop
or
arpl
es
test
fstpt
cltd
mov
sub
pop
fxch
and
pop
pusha
xchg
scas
rclb
cli
mov
push
insl
cmp
shl
push
ret
shll
cltd
sub
sub
or
mov
daa
sub
movl
push
jo
fs
cmc
push
lcall
sarb
sub
lret
jl
adc
cld
movsl
lds
push
sbb
stos
popa
lret
scas
jle
sbb
repz
xchg
rorl
or
sub
fidivs
lea
mov
sbb
out
adc
rorb
jne
dec
mov
scas
xchg
mov
mov
xchg
das
or
jb
pop
sub
lret
sbb
mov
icebp
dec
pushf
cmpsb
jl
aam
and
jb
cld
and
xor
sahf
js,pn
ret
adc
pop
subl
ds
push
mov
lea
or
fs
sub
or
iret
sub
and
add
inc
and
cmp
ljmp
cs
and
sti
inc
and
push
adc
fcoml
mov
mov
test
cwtl
jo
roll
imull
lahf
cli
mov
or
loopne
push
test
lret
mov
call
inc
lcall
lods
mov
cmpsb
aad
adc
and
xor
xchg
dec
fs
mov
mov
lock
bound
shll
outsb
mov
dec
lds
subl
cmp
adc
imul
jnp
in
jp
jge
aaa
stos
fdivrp
push
pop
push
xor
fwait
adc
mov
and
inc
mov
insb
stos
das
clc
cs
out
sub
mov
adc
in
mov
ljmp
inc
fs
fldenv
pop
mov
mov
sbb
and
pushf
dec
inc
jo
lea
dec
out
rorb
loop
mov
leave
rolb
mov
sbb
scas
orb
sbb
mov
mov
jp
pop
xchg
enter
popf
lods
xor
xor
jae
movsb
arpl
push
dec
xchg
ja
addb
fisubrl
jnp
adc
subl
mov
mov
add
fildll
clc
or
add
push
dec
rcr
cmp
das
mov
mov
pop
cmpsl
imul
cmpb
jl
xor
mov
scas
aad
dec
jp
gs
out
jnp
adcl
xchg
test
sub
pop
dec
lods
adc
jae
cmp
cmp
cltd
dec
jle
pop
mov
out
jbe
adc
test
loop
inc
pop
into
sub
xor
mov
xchg
imul
pop
push
imul
dec
in
add
sahf
dec
nop
gs
ret
fdivrl
mov
fidivrs
inc
mov
mov
and
jecxz
pop
jno
insl
xchg
out
repnz
xor
mov
mov
divb
xchg
mov
pop
jl
mov
sahf
scas
repz
gs
mov
dec
xorl
test
int
insb
push
adc
inc
loopne
adc
cld
or
jg
cmp
xor
hlt
xor
jns
xor
int3
xor
dec
push
bound
xchg
movsl
push
cmp
je
sub
pmulhuw
test
sbb
rcrl
mov
push
jno
in
jns
pushf
sahf
push
je
add
and
push
sbb
aam
lahf
mov
jns
mov
xor
insl
jmp
hlt
push
push
xor
leave
and
inc
mov
inc
inc
imul
add
jl
add
sbb
out
xor
add
loope
pop
dec
xchg
fmuls
and
jbe
mov
insl
mov
pop
push
ds
ja
daa
stc
pop
mov
jmp
hlt
divb
rcr
or
pop
fwait
mov
xor
adc
int3
and
xor
push
lret
popf
mov
sbb
or
add
push
push
fisttpl
mov
inc
jno
mov
mov
leave
push
sahf
push
testb
dec
or
test
inc
out
mov
gs
imulb
inc
mov
xchg
cmp
dec
lcall
aam
std
fstl
jno
cmc
mov
jge
lods
jg,pn
fucom
xor
xor
lret
out
xor
addl
lods
jns
add
lods
sub
push
xchg
stc
push
gs
sahf
cmpb
fs
cwtl
fdiv
and
popf
movsl
sarb
adc
nop
sbb
cmpsl
push
push
xor
sub
cmc
shll
jbe
pavgw
sbb
fwait
jg
js
pop
into
add
pop
lcall
shl
enter
sbb
lcall
jne
mov
pop
fwait
sti
push
sub
mov
adc
jns
dec
mov
lcall
mov
dec
pop
adc
test
xor
inc
ljmp
ds
and
pop
and
loop
jl
notb
insb
loope
bnd
negb
test
clc
sbb
push
cmp
sbb
lods
data16
mov
xor
xorl
adc
fcompl
pop
mov
add
sub
or
cmp
popl
jns
sub
cmpsb
in
adc
minps
xchg
div
aaa
dec
sub
adc
xor
push
into
jg
sbb
mov
stc
imul
cmp
push
inc
xor
add
add
xor
sti
test
mov
aas
rorb
sub
out
xor
or
cld
adc
add
or
add
push
imull
dec
insl
lea
pop
cli
xchg
mov
and
jae
and
pop
psubb
add
lcall
scas
shr
sbb
das
les
stos
add
ljmp
mov
and
jo
jge
cmp
and
xchg
xorl
in
jb
xchg
xchg
push
mov
mov
shl
mov
mov
cmp
mov
or
pop
sti
bound
push
ret
filds
les
test
mov
fidivrs
lods
scas
pop
std
cmc
dec
daa
xor
lret
mov
mov
cs
push
fwait
mov
cmp
mov
lock
mov
xchg
mov
lds
jmp
xchg
or
xchg
cs
ja
push
scas
popa
rclb
mov
sbb
jg
push
lods
adc
js
and
into
mull
int
pop
sub
adc
gs
and
adc
sub
outsb
sub
push
sub
mov
xor
mov
or
enter
xlat
faddl
mov
ds
aaa
insb
out
inc
ljmp
test
ja
and
xor
in
andb
add
loope
test
add
or
add
movsl
pop
divb
fucomip
jae
pop
xchg
or
orl
or
outsb
cli
cmp
add
and
pop
push
andb
ss
or
test
push
add
adc
out
sub
imul
fwait
pop
mov
push
lea
or
sarl
xchg
test
rcl
cmpb
or
dec
je
pop
and
test
inc
test
dec
rclb
pop
into
or
sub
inc
sahf
or
mov
inc
test
lret
or
mov
cmpsb
mov
iret
mov
xchg
nop
roll
outsb
mov
sbb
rcrb
cltd
mov
mov
test
out
pop
and
fmull
sub
dec
pop
rcl
pop
repnz
push
mov
lret
add
arpl
repz
and
pop
bswap
jecxz
jp
mov
nop
lcall
cmp
gs
sub
movsb
jno
cs
sbb
mov
pop
subl
loop
jns
or
out
jnp
dec
dec
mov
mov
movsl
shll
mov
mov
push
inc
fisubrl
popf
jae
shlb
ret
jne
jne
jns
xor
fstps
add
mov
imul
stc
add
movsl
aad
fdivrp
dec
sbb
and
aas
mov
bound
pop
push
inc
adc
scas
mov
enter
jg
xchg
mov
jecxz
ljmp
cmp
jg
sbb
ret
push
xor
dec
test
test
stos
out
outsb
jg
arpl
fimuls
hlt
xchg
scas
cmp
pop
mov
mov
filds
xchg
repz
xorb
test
dec
xchg
mov
dec
scas
sbb
lcall
mov
cmp
and
loopne
ljmp
adc
mov
ficoms
xlat
mov
jmp
dec
jecxz
in
aas
aam
push
or
mov
mov
xchg
loope
adc
rorb
sahf
mov
out
or
rcrl
xchg
sti
push
repnz
loope
clc
arpl
out
xor
sbb
lret
outsb
decb
es
lea
lcall
xchg
sub
imull
sbb
xchg
jns
aam
sti
scas
xchg
movsb
ds
mov
inc
or
mov
mov
insb
cwtl
test
mov
lret
insb
pushf
out
push
leave
sbb
sbb
xchg
push
in
fsubp
cwtl
push
sbb
mov
cmp
test
movsb
push
push
or
sti
fistpll
mov
pop
add
into
test
cli
out
push
cmc
jl
xor
jl
rcrb
or
arpl
js
das
dec
lret
int3
xchg
cmpsl
push
inc
and
rcll
notl
and
call
push
pushf
and
sub
mov
in
sub
inc
mov
sbb
xor
int3
jecxz
and
cs
lds
clc
mov
popf
cmp
ret
out
ss
mov
stos
inc
in
xchg
sbbb
and
pop
mov
leave
mov
lock
fdivs
push
enter
lea
ds
pusha
outsl
in
dec
push
pop
or
insl
insb
lock
mov
push
mov
pop
insl
clc
push
enter
sbb
pop
jne
fisubs
mov
pop
jo
cmp
or
fbstp
mov
fs
mov
mov
addr16
ja
push
loopne
shlb
std
mov
iret
rcrl
es
orl
add
aaa
xchg
cltd
lods
fistpl
and
pop
dec
inc
scas
xlat
in
test
pop
mov
mov
scas
ficoms
leave
out
inc
mov
popa
pop
add
loope
xchg
add
cs
inc
leave
sbb
js
mov
mov
xchg
sbbb
stos
fstp
jae
jp
xchg
imul
loopne
pmuludq
ja
mov
hlt
das
sbb
cwtl
sbb
xor
xchg
fadd
add
movsb
ss
scas
push
xor
adc
gs
add
fwait
dec
leave
sub
addr16
das
dec
out
shrl
mov
jge
cmp
in
cmp
inc
notb
add
mov
dec
sarl
int3
pop
stos
mov
lods
jmp
js
hlt
adc
or
jne
pop
dec
cmp
orl
pop
jle
adc
xor
xchg
das
dec
fdivrp
pop
sti
rclb
icebp
cltd
inc
loopne
aam
jno
mov
divb
outsl
pop
lahf
enter
pushf
jb
addr16
lcall
rorb
sub
add
jl
fsubl
mov
cmp
lret
movsb
push
icebp
mov
aad
lahf
sub
loope
addr16
push
popa
or
jo
dec
dec
jne
pop
gs
shr
loop
pop
pushf
fildll
or
fldt
or
adc
push
es
mov
add
fisubl
mov
call
dec
or
out
and
mov
lahf
adc
test
sbbb
xor
inc
sbb
fbld
cld
out
push
sub
xchg
sbb
lods
cmp
jb
stos
les
xor
sbbb
xor
xchg
int
mov
test
or
fwait
jb
lret
xchg
dec
sub
jnp
movsb
mov
in
sub
mov
mov
shr
jb
and
sahf
pop
out
fidivrl
pop
insl
xchg
adc
pop
int
xchg
mov
push
jbe
data16
cmp
jns
fs
xchg
xchg
jb
add
popf
ja
or
cmp
out
xchg
mov
cmp
cltd
mov
pop
es
bnd
lret
xor
pop
and
pop
flds
aam
mov
jge
xchg
std
sti
add
pushf
loopne
in
sbb
dec
pop
xchg
shll
mov
xor
sub
dec
pop
and
add
in
pusha
pop
out
movsb
dec
mov
imul
in
mov
sbb
in
push
pusha
push
add
xchg
add
and
bound
ret
add
cwtl
xchg
insb
sub
xchg
and
jl
push
or
sub
jge
xor
push
loope
and
roll
shll
mov
lcall
xchg
rorl
adc
push
sbb
int3
in
js
mov
jne
mov
iret
out
xorb
shll
imul
add
out
movsb
pop
mov
xor
inc
mov
dec
inc
pushf
mov
popa
lods
adc
dec
mov
fbstp
iret
test
arpl
or
adc
cmpsw
imul
push
arpl
test
add
inc
push
movsb
pop
out
scas
push
pop
jns
dec
adc
add
insb
pop
adc
js
insb
cmpsl
int3
loope
imul
arpl
or
pop
jbe
xor
jo
mov
incb
sbb
frstor
and
decb
mov
and
xlat
jbe
push
sub
sbb
dec
repnz
jo
mov
push
test
pop
cmpsl
jbe
pop
loopne
cli
adc
rcr
sbb
dec
scas
dec
mov
and
incb
push
daa
fs
fdivrp
xchg
je
mov
and
mov
iret
adc
cmc
xchg
cmp
add
imul
das
stos
shlb
movsl
jno
rclb
mov
loopne
int3
add
push
imul
jecxz
iret
dec
push
push
hlt
or
rcrl
adc
clc
stos
repnz
sub
hlt
pop
inc
add
xchg
cmp
pop
lea
aas
add
cmpsb
arpl
jle
stos
loope
dec
jno
idivl
dec
mov
fwait
je
fs
fldcw
cmp
hlt
push
loopne
gs
dec
mov
adc
rcrb
fwait
push
adc
ljmp
add
call
mov
mov
pop
cmpb
iret
pop
shl
out
cmp
push
mov
adc
ret
add
jg
pop
ljmp
add
cmp
pop
popa
sbb
mov
jae
pshufw
dec
out
inc
mov
sbb
mov
gs
jl
clc
call
cltd
mov
scas
sar
mov
jo
inc
insb
mov
mov
sahf
pop
xor
subb
cmp
and
xchg
repnz
mov
mov
imul
or
pop
dec
fcmovbe
movsl
and
jns
jns
and
in
fdivrs
inc
mov
daa
movsl
cwtl
mov
mov
popa
jecxz
rcll
and
sub
push
mov
jp
xor
gs
mov
mov
hlt
mov
add
cmpsl
daa
and
cwtl
ret
das
aad
cld
adc
iret
sbb
mov
std
pop
cwtl
jo
pop
adc
and
mov
fidivrl
mov
jg
cld
or
addr16
aaa
sbbb
inc
inc
or
pop
mov
jecxz
pop
push
mov
adc
rcrb
shl
jne
mov
jl
pop
mov
fists
popf
sub
cmpsl
mov
and
outsl
scas
arpl
cwtl
dec
and
mov
push
cli
testb
and
mov
mov
data16
xchg
shll
and
imul
mov
sahf
inc
adc
mov
test
dec
xchg
xor
push
sub
and
enter
push
out
shll
mov
mov
push
jmp
pop
repnz
mov
cmp
jo
shlb
adcb
mov
sbb
dec
add
jo
pop
fdivl
sub
aas
mov
pop
push
dec
jmp
pusha
aas
mov
stc
lret
and
fidivs
xor
mov
in
push
loopne
jne
xor
sbb
pop
push
shlb
stos
ds
cld
cmpsb
pop
pop
pop
mov
icebp
scas
mov
push
mov
mov
jbe
xor
cmp
fldcw
out
shrl
jmpw
mov
jne
push
inc
in
popa
cmp
adc
inc
inc
iret
push
clc
cmp
mov
popf
and
lret
cltd
das
outsb
pop
inc
shlb
and
movsl
jno
push
pushf
loop
mov
cmp
mov
add
and
in
mov
mov
pop
dec
int3
xchg
inc
scas
mov
dec
push
repz
mov
pop
fistpll
xor
or
stc
lahf
sbb
loop
mov
mov
adc
lahf
scas
repnz
das
and
dec
inc
jp
jge
lea
in
xchg
add
int3
jmp
aam
sub
sar
cltd
inc
xchg
xor
ja
imul
jne
jp
or
fmull
cli
xor
pop
jbe
shlb
les
lods
test
xchg
pop
popa
nop
mov
dec
xchg
xor
mov
insl
sub
jge
pop
hlt
js
es
push
clc
sub
dec
pop
in
mov
repnz
mov
mov
lock
add
cmpsl
insb
pop
lods
xchg
ss
and
push
push
in
xlat
into
mov
adc
add
cmpsb
test
sub
sub
push
clc
cmpsb
or
insl
xchg
xor
push
lock
push
mov
fnstenv
push
push
pop
xchg
outsl
sbb
or
cmpb
sti
movl
mov
push
jecxz
je
jnp
flds
pop
sbb
mov
leave
push
add
mov
out
jnp
push
push
imulb
loopne
loop
cmc
sti
cmp
push
enter
mov
mov
xchg
mov
int
push
lret
and
or
cltd
outsb
add
sarl
scas
inc
rolb
dec
or
add
add
dec
xchg
push
push
lcall
cld
mov
fbstp
and
push
push
mov
in
pop
adc
push
lahf
push
dec
push
jne
jae
lret
mov
or
imulb
inc
repnz
ret
aaa
andb
sbb
push
cli
and
pop
add
pop
and
andl
pop
ret
fwait
aam
push
imul
xor
stc
cwtl
pop
fdivs
in
push
test
arpl
sbb
in
outsb
inc
cmp
ret
ljmp
call
leave
scas
push
test
mov
inc
shr
mov
jae
shlb
int
push
lea
repnz
cmp
aam
popa
ljmp
sbb
sbb
dec
sarl
mov
lahf
in
scas
push
xor
lret
jmp
in
aad
jmp
and
lea
cmp
adc
popf
rolb
inc
sbb
xchg
cld
mov
add
xor
jne
fistpl
or
lods
in
inc
stc
jp
cmp
add
adc
push
inc
jae
xchg
pushf
inc
iret
movsl
int
xchg
int
je
inc
test
cmp
shl
mov
jp
inc
pop
stos
daa
arpl
fdivrl
inc
pop
mov
mov
or
enter
addr16
mov
loop
inc
rol
sub
adc
js
adc
push
or
mov
lret
mov
loopne
mov
xchg
cli
cs
pop
pop
xor
mov
jne
mov
push
shl
cmpsb
repz
das
cwtl
and
cmp
ja
insb
test
stos
push
loop
aam
xchg
out
inc
into
adc
stos
rcrl
loop
dec
movsb
call
jle
imul
hlt
dec
int3
xor
push
addr16
sbb
scas
jecxz,pn
fcomp
cmp
xchg
mov
int3
pushf
call
nop
sarl
repz
stc
ja
lods
pop
mov
les
jo
jns
addr16
dec
sub
and
mov
add
xchg
inc
leave
or
mov
lret
xor
addr16
insb
shrb
lds
adc
pop
jg
dec
dec
sti
push
sub
sbb
push
outsl
dec
mov
jnp
adc
mov
out
or
push
ror
sbb
fs
std
mov
scas
xchg
and
in
dec
jp
mov
xor
pop
inc
aas
jb
lods
les
bound
fstps
sub
cld
in
sbb
sub
je
inc
sti
adc
mov
mov
and
sbb
cmpsb
add
mov
out
sbb
xchg
xor
hlt
rorl
daa
divl
loope
mov
or
mov
popf
imulb
outsb
int3
sbb
push
fucomi
jle
cwtl
repnz
mov
jae
leave
ljmp
jp
outsb
sbb
add
jne
addl
out
xchg
or
dec
mov
and
pop
mov
xchg
sti
jno
sbb
mov
dec
ss
or
adc
fidivs
outsb
repnz
mov
lods
cmp
push
aaa
scas
jge
lahf
das
mov
call
jb
mov
inc
sub
repnz
add
cmc
mov
or
movsb
jo
push
mov
gs
lahf
test
sbb
cltd
rorb
sub
xor
int
aaa
dec
jecxz
cmpsl
loop
mov
xchg
arpl
filds
xchg
xor
in
sbb
inc
jbe
pop
clc
sub
test
push
pop
cmpb
arpl
sbbb
clc
or
cmp
std
test
xlat
je
roll
xor
push
insb
test
leave
stos
loope
cmp
dec
push
dec
int3
loope
cmc
mov
jg
pop
sbb
aad
popf
test
mov
popf
mov
lock
pop
out
sbb
outsl
lret
jle
mov
cs
mov
fbstp
gs
outsl
aaa
ficomps
mov
jecxz
or
push
cltd
rcl
lcall
sahf
popf
push
jmp
jp
stos
repz
sub
sar
es
mov
lret
add
insb
hlt
data16
pop
pop
inc
aam
out
es
test
out
int
mov
fs
mov
je
push
fnsave
loop
addr16
mov
push
fnstsw
js
cwtl
outsb
push
enter
dec
cmpsb
dec
ret
mov
es
scas
adc
add
ret
ja
out
loop
in
jecxz
lret
lcall
cld
add
imul
repnz
push
fwait
aaa
push
lock
test
xor
dec
jge
loopne
lods
jne
arpl
sub
imul
incb
push
sti
push
repnz
outsb
aas
lret
sahf
loop
push
xor
repz
ficoml
fs
xchg
and
not
out
push
popf
loopne
fnstenv
pop
push
xor
loope
mov
mov
int3
mov
cmpb
outsl
sti
sub
andl
stos
andl
mov
das
sub
push
xchg
jg
mov
mov
fsts
lods
pusha
sbb
das
pop
sbb
into
cltd
in
movl
mov
mov
mov
inc
loopne
add
mov
insl
dec
sarb
add
push
xorb
jns
icebp
push
hlt
inc
dec
mov
repz
hlt
cli
stc
repnz
sbb
inc
fidivrs
jecxz
scas
pop
inc
insb
push
std
push
adc
dec
xchg
jg
out
xchg
in
inc
mov
fcmovbe
jecxz
pop
divb
push
push
mov
arpl
int3
sbb
in
arpl
xchg
mov
lret
das
or
sbb
inc
adc
jno
cmp
filds
and
push
fcomi
dec
or
sub
pop
bound
sbb
fstpl
loopne
mov
fisttpll
cmpsb
lods
cmp
sub
jb
xchg
cmp
dec
add
aam
imul
lcall
fists
gs
sbb
or
inc
pop
arpl
add
adc
rcrb
or
inc
mov
hlt
sbb
xor
stos
mov
and
dec
cmp
sub
jns
add
aad
push
jb
cmp
hlt
pop
pushf
frstor
leave
sbb
je
mov
stos
add
mov
icebp
push
stc
lds
xchg
mov
inc
xor
xchg
push
lds
mov
dec
bound
and
enter
fadds
jbe
lahf
cmpb
insl
imul
dec
sbb
jmp
xor
sub
iret
outsl
in
inc
pop
mov
lods
std
sbb
shrl
xor
ret
add
int
cmc
mov
cmp
fistpl
js
xchg
in
out
fstp
fidivs
cmp
ss
scas
mov
dec
pop
mov
shll
xlat
mov
ret
imul
ja
inc
loop
shlb
push
roll
inc
inc
outsl
outsl
jg
push
test
jnp
inc
dec
mov
dec
rolb
nop
sbb
comiss
push
mov
mov
mov
dec
lcall
xchg
adcb
cmp
fcomps
stos
xchg
cld
test
popf
lret
xor
fadds
imul
push
inc
jge
test
loope
repz
xor
out
es
adc
repz
fdivl
int
jecxz
movsb
adc
jge
sbb
xor
mov
fnstsw
add
repz
mov
adc
lock
sub
add
xchg
adc
fstl
mov
pop
int3
and
sub
or
and
popa
pop
pop
cmp
add
dec
xlat
mov
mov
je
push
cld
mov
stos
movl
sbb
adc
push
sub
mov
andb
into
das
cmpsl
enter
pop
add
ss
xchg
addr16
pop
cmp
cld
xchg
or
inc
insl
ret
xchg
sbbb
bound
cmp
sub
inc
add
pushl
mov
rcr
in
gs
jns
movsl
or
mov
in
adc
pusha
aas
lods
fs
pop
inc
push
jp
push
dec
and
fs
outsl
ficoms
sbb
xor
pop
popf
fnstenv
add
aaa
movsl
and
fnsave
or
jle
js
gs
loope
mov
pop
cs
sub
and
sub
mov
repz
jns
push
xor
sbb
inc
cmc
inc
movsb
popf
mov
pop
gs
mov
aaa
xlat
daa
or
xor
inc
mov
sahf
pop
mov
dec
pop
arpl
int
fs
sub
push
push
in
sti
push
fnstenv
push
aad
sub
out
mov
addb
mov
mov
std
lret
push
dec
shlb
dec
fxtract
nop
xchg
fistl
or
jge
stc
test
or
jo
xorl
clc
arpl
aam
icebp
mov
aam
nop
sti
test
jp
push
scas
add
sbb
daa
fwait
pop
sbb
imul
into
test
test
mov
or
data16
or
xchg
orb
cld
fbld
subl
push
je
das
xor
xchg
mul
mov
adc
aad
dec
and
cmpsb
ret
xchg
ret
add
aaa
or
fbstp
mov
jo
test
adc
stc
push
xchg
hlt
or
sub
scas
sbb
mov
sbb
sarb
lahf
sbb
and
outsl
icebp
fcomps
bound
push
iret
or
or
inc
int3
xchg
iret
inc
pop
jo
sbb
stos
les
sub
call
pop
js
dec
lret
pop
jmp
sub
jmp
sub
sub
push
mov
aad
gs
sub
sbb
stos
inc
les
mov
push
mov
adc
loop
popf
jl
push
bound
cmp
adc
sub
pop
inc
scas
dec
sub
jle
scas
mov
pusha
in
movsb
fdivrl
and
mov
iret
cmp
cltd
test
fistpll
mov
jl
cld
data16
adc
add
pop
int
sub
loopne
mov
shrl
jle
inc
adc
lret
out
adc
or
popa
sahf
xor
or
mov
mov
xchg
push
cmpsl
mov
adc
xchg
iret
aas
sub
and
push
inc
push
movsb
outsl
add
sbb
jno
sub
lods
and
test
cli
xchg
aam
adc
sub
cmc
or
lods
adc
aas
adc
popf
xor
sub
mov
or
push
or
jne
pop
sarl
into
and
push
mov
push
mov
dec
into
mov
sti
hlt
jb
cmp
gs
sar
dec
nop
push
int
ret
or
in
adc
lods
cltd
push
in
xchg
or
lds
loope
mov
stos
gs
sbb
dec
es
mov
stc
lahf
movsb
inc
mov
mov
xor
popa
outsl
sub
add
xor
lcall
cmp
cmpsl
movsb
imul
xchg
cmp
inc
aam
sbb
lahf
pushw
mov
nop
aad
aaa
fwait
lods
cmp
sbb
push
cmp
mov
xchg
dec
and
fsubs
jg
xor
cwtl
push
icebp
int
ror
lock
rcll
pop
scas
fimuls
and
pop
lods
sbb
das
jle
es
enter
jmp
cld
sub
in
repz
sub
and
sub
int3
in
int
mov
cs
add
bswap
pop
jbe
std
lods
push
lcall
mov
mov
jg
mov
ret
cmp
cmpsb
lds
stc
dec
testb
clc
xchg
mov
add
sub
xchg
push
popf
idivb
adc
ds
cmc
mov
dec
std
popl
pusha
and
rcrb
sbb
std
repz
or
and
or
lret
mov
jle
xor
gs
xchg
cmp
jbe
fiaddl
or
imul
push
lods
loopne
lds
xor
pushf
dec
movsl
subb
sbb
pop
outsb
jmp
xorb
pop
add
add
ret
pop
ljmp
jg
pusha
enter
test
xlat
mov
sbb
ss
icebp
fiaddl
jge
aas
cwtl
adcl
insl
jle
imul
xchg
fildll
loop
pop
btr
in
add
cmp
sbb
lcall
imul
imul
testb
mov
pop
mov
mov
je
jae
mov
insb
je
pop
call
in
mov
leave
cmp
decb
lcall
pop
ljmp
jmp
sub
sbb
xchg
jno
ficoml
fisttps
push
cmp
outsb
cmp
test
dec
xor
jl
sub
mov
dec
inc
mov
ljmp
add
mov
fimull
dec
jae
mov
mov
mov
loopne
nop
mov
xchg
icebp
mov
inc
out
push
xor
rorb
imul
mov
cmpsb
popf
mov
int3
push
xor
mov
fistpll
jp
add
sub
fwait
cs
mov
rorb
push
adc
inc
fs
mov
in
mov
mov
mov
xor
aas
fimuls
test
add
mov
xchg
pop
andl
cwtl
fpatan
rorb
and
xor
jbe
xchg
inc
xchg
mov
push
add
push
xchg
cmpsb
repnz
repz
xchg
mov
cld
pcmpgtw
jg
inc
jl
sub
jne
and
fcoms
cmp
ja,pn
insl
js
mov
test
mov
stc
push
cmp
pop
fs
pushl
cmp
mov
cmp
mov
shrb
out
ffree
fstps
jmp
decl
fs
imul
adc
mov
push
sub
jne
cmpsl
fwait
cwtl
cmp
pop
cli
push
iret
xor
adc
test
push
adc
fwait
cmp
fdivrl
xor
lock
xchg
and
pop
jbe
lret
jne
and
data16
dec
mov
cld
pop
xor
mov
stos
arpl
sbb
cmc
and
pop
jo
jmp
inc
lret
or
aam
push
pop
clc
mov
sub
push
cmpsb
cmp
stc
jo
jno
sub
subb
xlat
mov
xchg
mov
add
imul
push
dec
rcll
enter
mov
cli
add
ss
std
cld
sub
sub
pop
rcll
hlt
cli
cmc
jnp
xchg
xchg
xchg
mov
cmc
pop
adc
popf
pop
sub
lods
inc
clc
dec
mov
pop
aaa
js
xchg
or
mov
div
sti
into
mov
pop
cld
outsb
xor
mov
mov
movsb
jecxz
das
adc
movsw
std
dec
mov
dec
sub
mov
mov
imulb
dec
cltd
xor
xchg
sub
sub
filds
pop
lods
push
xchg
movsl
sbb
cmp
fstpl
and
out
mov
pop
xchg
fwait
mov
outsb
cmp
iret
cmpsl
inc
icebp
lea
cmpsb
iret
lds
push
addl
jecxz
sahf
add
lahf
pusha
lret
lea
adc
lretw
push
pop
xchg
aad
sub
scas
pop
jle
mov
inc
ret
ss
pusha
jmp
inc
add
lods
out
insl
insb
xchg
inc
mov
ret
jae
in
outsb
dec
loop
add
das
cmp
add
movsb
stc
lret
and
mov
pop
rcrl
xor
insb
les
xchg
push
cmp
arpl
repz
push
fisubrl
fcomi
mov
ficoms
lcall
cmp
rorl
orb
cli
aad
icebp
sbbb
xor
inc
ja
pusha
pop
hlt
rorb
xor
dec
es
outsl
movsl
fs
cmpsb
rcll
or
movsb
mov
inc
cld
dec
out
fimuls
insl
scas
add
adc
sub
out
les
jo
test
mov
rolb
cmpsb
mov
cmpsb
pop
cmp
add
xor
xor
xorl
pop
notl
cmpb
mov
lods
aad
or
repnz
mov
loope
add
loope
jno
dec
mov
aad
into
sahf
loopne
inc
cmpsb
mov
push
mov
mov
nop
xchg
lret
cmp
and
xchg
push
pop
and
xchg
mov
outsl
rcr
leave
lods
lret
inc
outsl
and
jp
add
les
jb
pop
stc
test
repnz
add
test
mov
or
das
lcall
mov
clc
loope
leave
sbb
jl
fimuls
mov
add
shl
imul
int3
xchg
push
sarb
jno
loopne
jle
push
dec
jno
fdivrl
ds
mov
dec
in
cltd
cmp
cmpsl
inc
clc
push
xchg
sub
ret
xchg
loopne
idivb
cli
stc
sbbl
xchg
push
dec
test
mov
pop
daa
arpl
pop
movsb
add
mov
loopne
push
std
jae
and
scas
mov
xchg
or
jnp
movsl
jbe
xchg
mov
or
test
push
dec
cld
aad
adc
sub
sub
daa
push
std
pop
das
xchg
loope
loop
int3
sbb
add
inc
cmpsl
jmp
fsts
cmp
xor
mov
push
inc
repz
sub
inc
pop
out
jl
dec
push
pop
mov
push
fidivrl
or
jmp
sub
mov
xchg
mov
xchg
iret
mov
aad
cmpsl
push
and
jg
les
pop
mov
pushf
sbb
xor
jb
mov
adc
push
lods
dec
ror
mov
into
fcompl
sbb
or
jp
lock
push
add
sbbl
insl
aas
inc
dec
mov
mov
add
imul
add
pusha
les
jge
xchg
aad
sarb
or
mov
movsl
xchg
sub
in
in
adc
dec
into
xchg
adc
in
mov
push
mov
mov
ja
jecxz
fdivrl
fsubrl
jae
stc
lds
pop
or
lds
xlat
xchg
mov
mov
mov
and
test
add
inc
dec
fs
icebp
bound
mov
and
outsb
or
jo
mov
dec
aad
jb
pop
fnstenv
and
or
adc
dec
mov
pop
into
mov
dec
idivb
xchg
les
mov
idivb
or
shlb
test
push
push
xor
inc
cli
das
aam
sbb
fs
popa
out
mov
sub
loopne
push
leave
loopne
jg
int3
cmp
lea
mov
ret
cltd
pop
push
pop
cmpsl
imul
inc
jbe
cmc
and
loop
xor
xor
cld
jae
xor
fcomi
scas
lcall
jns
arpl
out
pop
fwait
inc
cmpsl
jbe
pop
sahf
int
aaa
mov
sub
xor
xchg
xor
loop
arpl
xor
out
jmp
push
push
cmpsl
xchg
pop
pop
push
adc
mov
cmp
test
push
push
lock
imul
cmpsl
mov
lods
hlt
mov
mov
lods
repnz
mov
daa
push
mov
lahf
mov
loop
scas
jns
jle
sbb
sub
or
jp
stc
stc
sub
dec
pop
jecxz
iret
leave
mov
aad
dec
fimull
jge
lret
xchg
test
rorl
or
imul
ror
push
push
icebp
in
daa
xor
movd
or
sbb
xchg
movsl
mov
xor
mov
mov
or
jbe
push
sbb
aad
cmpsb
xor
dec
or
mov
pusha
dec
mov
and
stos
jb
jae
sbb
pop
adc
ror
pop
mov
adc
pop
pop
sub
mov
jbe
jle
jb
push
sbb
mov
mov
in
cmp
cltd
fxch
and
inc
mov
mov
rcll
imul
out
add
push
enter
scas
mov
negl
mulb
xchg
sbb
rorb
js
lea
jne
popf
aam
sub
mov
mov
jns
ret
test
pushf
xchg
sbb
add
inc
pop
movsl
mov
call
adc
pop
push
mov
ds
jmp
popa
iret
jnp
cmp
or
into
mov
push
movsl
sarl
es
mov
faddl
inc
push
enter
mov
sbb
test
mov
iret
add
stc
or
inc
or
movb
dec
psadbw
mov
mov
outsl
out
hlt
repz
ficoml
pusha
dec
push
in
and
or
cmp
rolb
mov
pop
popa
push
jp
ljmp
call
stc
fwait
mov
cli
xchg
inc
xor
mov
xchg
imul
add
mov
int3
movsb
mov
xor
in
add
cltd
mov
sarb
sbb
pop
mov
push
mov
ret
loop
mov
daa
loope
ds
popf
shlb
xor
fcoms
xchg
cmp
sub
pop
mov
jge
int3
outsl
xchg
add
into
mov
out
sbb
mov
jo
adc
cmp
call
adc
adc
mov
cmp
in
sbb
adc
xchg
jo
mov
mov
push
sbb
add
arpl
pushf
sbb
push
int3
push
pop
es
pusha
push
arpl
mov
and
imul
jg
fsub
xchg
jle
inc
add
ret
cmpsl
lods
dec
dec
out
pusha
clc
or
mov
mov
fistpl
fstps
mov
outsl
bound
and
jb
mov
inc
nop
cmpsb
adc
mov
and
lret
incb
cmp
mov
jg
or
lcall
and
call
rol
jle
movsl
lds
shrb
cwtl
cmpsb
out
notl
fstps
dec
stos
sub
push
pop
xlat
gs
xchg
les
orl
dec
pusha
aad
jno
stc
cmp
outsl
mov
popf
jl
pop
fldenv
cmp
xchg
or
fwait
adcl
shlb
jbe
mov
das
insb
pop
outsl
xor
inc
call
and
insl
push
cs
or
push
clc
ljmp
sub
adc
mov
clc
aam
lods
fadd
sub
push
cmpsl
mov
adc
dec
shll
fimull
cmpsl
sahf
pop
es
ljmp
cmpsl
pop
hlt
mov
xorb
js
jmp
lret
jmp
repnz
icebp
mov
int
test
sub
ret
jp
lcall
lods
gs
inc
jle
push
ja
icebp
mov
fisttpl
adc
loope
xor
push
and
cmp
out
rcrl
sarl
test
aas
or
push
mov
xchg
pop
fdivr
jne
lea
ficoml
mov
lds
enter
cli
rcl
lahf
loopne
dec
loopne
dec
push
sahf
ret
xchg
dec
pusha
xor
jae
pop
adc
inc
add
sar
scas
jbe
mov
cwtl
popa
pop
rcll
pop
pop
insl
adc
pop
push
ficoml
adc
xchg
mov
xor
sbb
mov
add
cmpsb
add
mov
pushf
fisubrl
cld
aad
xchg
pop
push
out
aas
loop
loop
push
int
lret
out
mov
mov
sbb
femms
mov
pop
cmp
or
iretw
sub
ror
push
or
in
sub
jo
jns
inc
mov
fucomp
pop
fcomp
stc
vcvtsi2ss
int
jo
into
mov
mov
cmpsb
and
imul
fsubr
jnp
push
or
sbb
shlb
es
imul
es
lods
insl
jmp
test
adcb
inc
scas
inc
imul
rcrl
lahf
cli
lods
fistl
in
movsl
rclb
mov
sarb
mov
pusha
adc
insl
jle
jecxz
lds
add
ja
cmp
inc
sahf
mov
rol
mov
js
mov
jg
ret
sbb
xor
xor
lret
sar
frstor
fwait
mov
push
inc
mov
sub
hlt
cmp
hlt
dec
ljmp
out
inc
pop
add
or
pop
inc
push
and
xchg
frstor
xlat
aaa
ja
dec
mov
lock
fistl
arpl
cmpsb
imul
jecxz
test
fdivr
sub
mov
mov
shll
lahf
inc
jp
in
cwtl
cltd
push
int
cmp
lret
loop
out
sub
out
insl
ljmp
dec
lcall
ficompl
out
push
scas
cld
aad
xorl
pop
pop
loope
call
js
ret
sbb
pop
mov
scas
aas
xchg
add
shll
adc
dec
xchg
das
lahf
movsl
jb
dec
js
loop
mov
dec
fstp
jmp
mov
xchg
cmp
mov
or
daa
imul
call
ret
gs
arpl
xorl
push
popf
lahf
push
or
cmp
xor
popa
push
loop
dec
mov
mul
loopne
mov
cmp
push
daa
lds
sbb
cmp
popa
stos
xor
fcomi
sbb
fsts
dec
cmc
or
jp
pop
mov
call
adc
loope
icebp
mov
mov
add
roll
sti
mov
mov
mov
sbb
sbb
sub
test
push
or
fidivl
dec
sub
into
xor
jmp
fldcw
aaa
stos
fiaddl
int3
jne
sbb
test
pop
jne
add
les
and
sti
into
and
in
xlat
fxch
dec
xchg
and
adc
cmpsl
pusha
xor
mov
sbb
repz
loopne
pop
cmp
cmp
cmp
les
jns
jb
sub
adc
out
pop
arpl
std
fmuls
push
addb
mov
cmp
xchg
xchg
imul
das
into
stos
or
jecxz
sti
loopne
xchg
stc
outsb
shl
jns
mov
aam
sbb
mov
or
popf
sbb
in
adc
push
pop
in
xchg
in
pop
aam
push
subl
enter
add
mov
dec
mov
ret
pop
cmpsl
je
rorl
pop
loop
jmp
test
fsubrs
pop
sbb
or
fmul
add
nop
sbbl
fsts
lahf
pusha
lret
pop
xchg
mov
cmp
test
mov
aas
lds
ljmp
ds
insl
fsubrs
mov
sbb
dec
add
push
jecxz
sahf
push
into
inc
pop
mov
jmp
imul
js
mov
mov
and
xchg
xchg
inc
call
xchg
sti
adc
sbb
cwtl
ds
push
adc
test
ljmp
push
rorl
les
rorl
add
xchg
xchg
mov
inc
push
adc
lcall
sbb
mov
out
lods
push
adc
adc
scas
mov
and
cmp
pop
inc
pop
test
jecxz
loope
cmp
sahf
mov
xchg
data16
shll
adc
jne
in
cli
lock
jp
or
lds
mov
cmpsl
or
test
add
inc
insl
loope
push
outsl
loope
sub
adc
hlt
inc
add
and
in
add
jno
into
push
or
in
pop
adcl
push
pop
push
push
push
or
adc
and
les
nop
xor
xchg
enter
mov
sbb
sbb
inc
mov
movsl
cmpsb
adc
shlb
pop
fsubrp
push
mov
mulb
mov
rolb
jne
or
mov
lahf
add
loop
mov
out
ja
pop
dec
mov
xchg
aad
dec
jnp
mov
sub
push
mov
out
cmc
insb
imul
mov
inc
mov
in
cmpsl
push
das
or
sbb
lea
mov
cmpl
movsl
push
xchg
int
scas
pop
call
jmp
xchg
xchg
dec
fs
mov
imul
lret
dec
arpl
ret
dec
mov
repz
aas
inc
and
divb
in
xor
dec
inc
or
sub
loopne
enter
push
aam
xor
jmp
xor
jp
sbb
push
sbb
ret
rcrl
iret
dec
aas
add
dec
jo
rolb
aas
mov
mov
enter
das
jno
pop
mov
inc
mov
sub
and
pop
push
adcb
dec
mov
rorl
xchg
push
aad
sub
popf
jmp
ja
fidivl
lods
sarl
dec
inc
out
mov
xchg
mov
jbe
adc
popf
adc
xor
push
sbb
jge
mov
insl
pop
pop
mov
sub
popa
push
in
adc
aam
cmp
daa
out
cmp
cmp
js
flds
pop
sbb
lret
test
lods
mov
sbb
fwait
add
sbb
inc
inc
adc
dec
movb
stc
push
xchg
add
repz
cmp
xor
daa
mov
sbb
dec
mull
stc
cmp
repz
ret
adc
std
movsb
jb
jmp
sub
and
push
xchg
hlt
loopne
lock
inc
leave
rorb
adc
dec
mov
mov
inc
mov
pop
add
lods
cmp
xchg
push
dec
sbb
hlt
dec
mov
and
enter
dec
out
lahf
push
xchg
and
adcl
or
add
pop
cmp
fstpt
fsts
je
inc
mov
or
or
cmc
pop
loope
ret
sub
sbb
stc
lods
xor
pop
and
add
int
push
ffreep
shlb
jl
sbb
push
adc
fldl
sti
in
or
inc
rolb
in
pushf
mov
data16
xor
dec
push
sub
aad
and
arpl
or
push
jp
ja
daa
fdiv
xor
fnsave
rcrl
cmpsb
dec
or
xor
jp
add
fisttps
test
jle
mov
or
mov
fldenv
subl
arpl
std
out
sub
lret
or
daa
inc
fisubrs
jnp
pop
shlb
sub
fisubl
pushf
or
insb
mov
or
int
loopne
ss
push
sbb
fld
jl
stos
pop
mov
push
jl
push
fs
jno
loope
xor
mov
cs
das
fiaddl
shlb
xchg
adc
xor
pop
cwtl
fdivl
xchg
inc
fsts
test
mov
in
xchg
mov
mov
cmpsl
pop
xchg
and
clc
pusha
xor
scas
jp
test
push
push
push
mov
add
leave
sub
gs
inc
or
xchg
xchg
push
incb
add
movsb
fldl
dec
inc
mov
jnp
in
inc
popa
push
into
test
insl
sarl
xchg
or
mov
cltd
stc
sbb
sbb
inc
flds
push
xlat
adc
or
pop
test
push
and
cmp
movb
pusha
pop
sbb
pop
sub
mov
test
push
in
sub
je
cwtl
arpl
jns
add
or
pop
mov
rorl
sahf
repz
jb
xchg
aas
data16
xchg
sbbb
jae
sahf
pop
jmp
jecxz
push
repz
iret
in
adc
sahf
xchg
fsts
test
push
push
stc
dec
push
out
pop
and
cltd
mov
pop
ret
aas
xor
jl
pop
inc
jne
sub
lods
pop
pop
hlt
stos
sub
aam
lahf
add
mov
jecxz
inc
ljmp
inc
out
dec
adc
jp
pop
imul
mov
lea
insb
xor
cmp
gs
int3
jl
push
mov
add
test
test
imul
adc
in
jae
mov
sbb
divl
or
mov
add
sub
loop
pop
fsubr
imul
shl
xchg
sahf
test
stc
lahf
ss
adc
repnz
adc
jnp
js
xchg
and
sarb
out
lock
jp
es
sub
mov
in
test
inc
and
repz
vmwrite
mov
fsincos
in
push
loopne
mov
stos
push
mov
lret
testl
sbb
pushf
cmpsb
push
test
repnz
jnp
popf
xor
scas
inc
les
push
xchg
and
cwtl
lods
in
pop
clc
pop
out
pop
test
mov
loopne
pop
dec
sub
sub
mov
cmp
xchg
add
clc
jb
popa
test
jl
jae
fdiv
popf
push
dec
sbb
dec
fs
xchg
sub
sbb
lds
mov
in
mov
insl
sub
xchg
iret
mov
test
leave
mov
iret
sbb
add
in
aaa
pop
call
pop
sbb
mov
addb
pop
push
adc
jne
sub
ret
or
or
aaa
xor
lahf
sbb
push
add
xlat
inc
cmpsb
add
dec
test
mov
rcr
dec
sub
mov
jmp
icebp
cmc
xlat
mov
je
push
jno
push
cltd
sti
dec
je
push
sbb
test
test
mov
popf
les
mov
xchg
xchg
loop
fidivs
sbb
test
mov
lcall
sub
and
out
add
xchg
or
les
push
imul
call
mov
cli
push
daa
sahf
sub
and
hlt
xor
int3
inc
push
daa
push
and
add
inc
cmpsb
hlt
aad
mov
negl
or
inc
sbb
es
mov
inc
hlt
jae
sub
cmpsb
or
cmp
inc
mov
inc
inc
int
jo
test
dec
mov
and
inc
inc
sbb
mov
mov
fisubrs
divl
repz
frstor
dec
cli
loopne
lcall
mov
es
shll
shll
sbb
pop
xor
jmp
push
adcl
arpl
lock
mov
fsubr
push
sub
pop
push
cmp
or
loop
jbe
pop
xor
stos
jmp
jnp
push
dec
ret
hlt
insl
adc
push
lret
xor
divl
dec
cmpsb
popl
aam
stos
rorl
insl
movl
inc
xor
sbb
mov
cmp
std
in
lretw
cltd
pop
pushf
iret
or
rcl
push
xchg
or
mov
add
cmp
loope
sbb
push
cmpsb
inc
push
std
test
adc
int3
imul
push
push
jo
mov
sbb
xor
popa
jg
lcall
xor
in
inc
push
cmp
adc
xor
cltd
gs
lock
cltd
mov
xchg
js
lock
cmp
dec
or
inc
jmp
in
lea
add
sbb
or
xchg
pop
adc
test
jbe
mov
jbe
jo
frstor
xor
sub
aad
inc
push
lds
into
inc
pop
dec
sti
stos
dec
pop
pop
scas
aam
insb
imul
mov
sbb
push
sub
push
insl
lret
popf
push
inc
dec
pop
xor
push
sbbb
shlb
jno
push
pop
scas
into
cmp
xchg
mov
pop
push
ss
sub
lock
mov
insl
xchg
sarl
mov
mov
lret
lahf
ja
shl
jmp
xchg
loope
or
mov
xor
add
int3
repz
rclb
push
repnz
sbb
and
xor
mov
pushf
arpl
fidivs
loope
les
lea
cmp
ficomps
stos
xchg
fidivl
mov
xchg
adc
stc
push
jo
cld
js
sub
xor
adc
push
lock
in
jg
rcl
sub
sub
rcr
pushf
dec
mov
inc
enter
ljmp
imul
mov
rcrl
hlt
rorl
xlat
sub
mov
ljmp
add
fadd
mov
sbb
sti
xlat
mov
aas
xchg
in
test
bound
push
inc
addr16
mov
xorl
imul
orb
cltd
dec
lret
xchg
out
jnp
fildll
sbbb
adc
in
dec
dec
sbb
imul
es
inc
inc
loope
stos
sbb
scas
repnz
pop
fmuls
rorb
sub
ja
sbb
sbb
add
addr16
adc
mov
loop
xcrypt-ofb
cmpsl
outsb
mov
xor
cmp
lea
jle
bound
jbe
or
das
cmp
adc
jl
aad
inc
int3
xor
push
pushf
sub
imul
notl
daa
test
push
mov
fstps
cmc
rolb
sar
in
xchg
nop
mov
int3
xchg
aaa
js
icebp
dec
in
xchg
adc
in
sti
lea
mov
fwait
js
xor
shrl
std
sbb
inc
rcrl
cmp
cli
subb
inc
lcall
and
xchg
or
ret
mov
mov
push
fimull
stos
mov
ds
rolb
xor
push
test
xlat
pushl
jge
shl
pop
out
inc
repz
mov
cltd
add
push
inc
sahf
mov
test
jecxz
aad
mov
pop
or
sbb
in
sub
cmp
roll
aam
out
xchg
sub
pop
adc
subb
mov
and
cmp
pop
xor
daa
js,pn
imul
outsb
repnz
fstpt
mov
enter
push
and
pop
fcoml
insb
jae
and
xchg
out
das
int3
aad
popf
fwait
ret
dec
pusha
cmp
fmulp
fdivrs
or
sub
mov
adc
sbb
lock
cmc
pusha
movb
add
xchg
mov
xor
in
mov
loope
push
ds
out
mov
inc
mov
sbb
pop
addb
dec
xchg
push
mov
mov
js
insb
cwtl
jo
and
jmp
stc
imul
inc
jno
stos
push
in
mov
inc
ss
xchg
xlat
stos
pop
int3
lods
xchg
movsl
push
outsb
stos
mov
sbb
mov
hlt
fiaddl
int3
out
push
adc
sub
mov
push
icebp
jecxz
xlat
xchg
sahf
jg
jl
imul
sub
jge
adc
jecxz
mov
in
clc
scas
pop
dec
mov
out
jge
imul
sbb
cmp
mov
cmp
mov
jecxz
add
mov
lock
or
mov
dec
jbe
ret
mov
jp
mov
out
idivl
cli
lods
push
ret
enter
in
test
push
mov
jle
outsl
mov
mov
movsl
xchg
sub
cmp
iret
sub
testl
dec
mov
ret
adc
dec
ret
push
mov
add
xchg
ret
ljmp
mov
call
push
dec
mov
mov
add
sub
shll
cmp
ja
outsl
or
stos
rcl
dec
ja
loop
lret
popf
orl
xor
inc
cmp
xchg
mov
jle
lock
dec
cmp
scas
fs
dec
pop
lds
dec
and
pop
movb
ds
sbb
xor
push
stos
aaa
and
pop
les
xchg
sub
mov
pop
iret
lods
jp
mov
aaa
int
subb
hlt
xchg
insl
xchg
or
stos
jne
jo
ss
jae
enter
stc
sti
mov
gs
push
fldenv
mov
mov
sub
lods
testb
pop
cmp
adc
inc
sub
jns
call
stos
call
and
test
andl
loopne
mov
mov
sub
mov
cld
push
out
rol
xchg
movsl
xor
add
or
mov
out
in
and
int
inc
iret
in
inc
rcrl
js
cmpsb
push
fists
push
mov
xchg
push
mov
gs
adc
in
andnps
pop
dec
pop
xchg
repnz
or
xlat
subl
and
sub
adc
mov
cld
push
fcompl
fsubrl
jnp
xor
dec
daa
adc
mov
or
mov
sbb
fstl
and
hlt
fidivrs
pop
cmp
dec
bound
mov
fsts
jmp
faddp
data16
jns
sbb
adc
sbb
ret
cmp
gs
adcl
mov
pusha
pop
vprotb
pop
mov
xchg
sbb
pop
stc
dec
and
add
mov
mov
pop
ret
shll
dec
jmp
jmp
sarb
push
jne
push
in
and
stos
in
mov
or
shrl
sbb
mov
dec
and
and
lods
and
cmp
xlat
imul
sbb
aam
mov
push
ja
aas
dec
imul
scas
divl
lds
xchg
fwait
loop
adc
std
mov
lret
js
mov
cld
sub
pusha
outsb
xor
mov
mov
jnp
ds
jne
fiaddl
xor
jbe
push
lods
fiadds
insb
mov
sbb
xchg
and
mov
cld
mov
sti
xlat
gs
cs
mov
daa
sbbl
push
ja
push
loopne
sub
inc
jp
mov
inc
push
lahf
test
imul
in
lds
push
add
push
fwait
stos
inc
add
pop
mov
iret
insb
push
cmc
out
es
sbb
mov
add
push
insb
jno
push
adc
mov
mov
mov
pop
sub
mov
inc
out
and
dec
and
xchg
orl
fisttpl
insl
cltd
sub
decl
lret
test
xchg
stos
mov
in
jmp
or
dec
xchg
shrl
push
out
adc
cmpl
or
jge
addl
sub
ret
test
xchg
stc
or
fldt
cmp
add
xchg
mov
mov
es
mov
jne
imul
dec
fsubp
push
or
jp
pop
push
cmp
adc
jae
mov
leave
cmc
lahf
mov
jmp
sub
cmp
or
jge
mov
inc
into
std
mov
and
cwtl
ljmp
cmp
pop
xor
popa
xchg
insb
inc
sbb
ffreep
mov
test
mov
dec
jecxz
stos
in
xchg
mov
hlt
push
test
in
xchg
xor
mov
ficoml
inc
test
lcall
lret
sbb
fidivl
call
sub
out
dec
sbb
jge
lret
in
test
loope
or
sti
xor
scas
in
xor
and
jne
pop
lock
icebp
sti
and
lods
icebp
add
cmp
pop
mov
and
cmp
sub
jcxz
cmc
movsl
pop
fstpt
ja
inc
jmp
int3
ss
pop
ljmp
xor
outsb
jle
imul
dec
nop
in
or
mov
inc
dec
jmp
dec
jge
mov
or
pop
repnz
movsl
out
xor
jne
insb
inc
push
pop
loop
mov
sub
and
pop
xchg
sub
and
adc
adc
jb
cltd
jo
mov
out
mov
inc
aaa
fwait
int3
xor
sub
arpl
mov
sarl
test
fadds
push
adc
push
or
sub
cmp
in
xchg
mov
sbb
push
data16
or
cwtl
popf
mov
mov
or
daa
stos
and
fs
sub
add
jg
mov
cli
xchg
fcomp
lods
push
xchg
int
pop
cmp
push
imul
or
shll
repnz
loop
insb
inc
arpl
movsb
jecxz
jae
xchg
outsb
jecxz
inc
pushf
mov
xor
push
cmpsl
mov
ljmp
addr16
push
sbb
push
rorb
pop
roll
call
out
das
fdivrs
iret
mov
out
mov
int3
mov
mov
not
mov
mulb
nop
push
mov
push
insb
cmp
int3
fwait
in
bswap
js
ret
sbb
adc
fcompl
cli
stc
psadbw
mov
movsl
xor
imul
xor
add
notb
pop
movsb
test
popa
xlat
mov
and
adc
lret
popa
into
out
dec
sub
cli
stos
lods
out
sub
mov
scas
jne
xor
rclb
or
sbb
fadd
inc
in
jmp
inc
out
mov
dec
inc
test
mov
js
mov
jbe
sti
push
mov
add
xchg
xchg
icebp
push
hlt
fbld
loop
mov
and
mov
mov
fs
fcoms
or
out
ds
leave
lahf
test
pusha
bound
push
adc
xor
cmp
inc
jp
mov
and
sbb
push
test
or
mov
or
popf
mov
dec
pushf
call
dec
outsl
sbb
faddl
and
rcrb
mov
lock
dec
mov
mov
xor
je
ret
xor
push
inc
mov
cmp
movsb
xor
arpl
movsl
adc
inc
jnp
push
rorb
in
mov
das
jmp
push
pop
sbb
dec
sahf
shrl
xchg
push
xchg
movsl
in
mov
jmp
addr16
jg
inc
out
lcall
and
pop
dec
shll
sarb
mov
je
negb
fdivr
adc
cmp
clc
int
cmp
inc
insb
ja
repz
sbb
ficoms
rolb
pop
jns,pt
mov
push
rcl
mov
or
data16
repnz
sub
aam
cmp
cmc
test
rclb
sbb
jmp
adc
inc
aas
sbb
enter
insb
adcb
sub
into
xchg
xchg
loopne
inc
cmpsl
sbb
jmp
aam
cmp
push
adc
lods
and
sahf
push
imul
sub
test
cmp
mov
cmp
dec
mov
pop
push
inc
lret
sub
mov
testb
ret
push
or
pop
pop
fstl
inc
test
push
into
xor
loopne
sar
jb
pop
push
lahf
je
aad
push
fnstcw
wbinvd
or
hlt
xchg
fucom
icebp
test
pushf
js
xlat
sub
rcrl
addl
iret
xor
mov
jae
cld
mov
xor
xlat
inc
les
lahf
fldenv
dec
mov
cmp
cmp
mov
push
sti
mov
mov
lcall
js
push
pop
into
lret
adc
lret
mov
push
loope
outsl
xchg
ja
and
pop
cmc
sub
js
out
sbb
or
fwait
adc
inc
popa
push
jg
or
pop
sbb
in
cs
test
mov
jg
cmpsl
mov
imul
push
shrb
fistpll
sbb
xchg
cmp
rclb
pop
cltd
sbb
pop
fbstp
addl
xchg
mov
jmp
in
dec
sbb
dec
mov
pop
fcomps
mov
mov
arpl
stos
clc
xchg
mov
and
and
mov
jb
mov
jl
dec
aam
ucomiss
ljmp
add
jle
pop
cli
fwait
pop
adc
push
ds
nop
mov
mov
push
cli
bound
ds
dec
push
fwait
dec
sbbl
adcb
ss
jle
lcall
inc
adc
mov
mov
repnz
pop
lcall
pop
and
mov
mov
lcall
xchg
mov
enter
mov
call
xor
loopne
stos
int
push
call
das
nop
pop
push
mov
sub
dec
es
inc
pop
jno
pop
jns
mov
lret
fwait
jge
inc
in
push
mov
cmpb
lods
add
cmp
adc
and
xor
dec
in
aam
mov
divb
mov
rol
addr16
fwait
pop
sarb
rcrl
loope
imul
fmuls
mov
sbb
negl
mov
insl
inc
mov
gs
dec
push
pop
movsb
into
roll
cmp
addr16
stos
shrl
lock
fdivs
xchg
xor
cmp
iret
pushf
aas
cmp
add
or
insb
icebp
iret
mov
push
aam
and
dec
rcrl
dec
xor
lea
jp
mov
hlt
inc
fsubl
push
dec
test
cmp
aas
enter
fcmovnbe
push
leave
inc
test
dec
xchg
inc
outsb
xor
dec
in
mov
ja
cmp
jmp
ret
jne
jae
nop
xchg
mov
scas
and
addb
ljmp
je
cmpsb
dec
fucomi
icebp
push
pop
or
repnz
addr16
idivl
and
enter
mov
out
dec
sub
data16
xchg
movsb
xchg
pusha
jo
leave
rcrl
add
arpl
mov
lea
adc
xchg
xchg
sub
or
mov
and
jne
and
aas
cmc
jbe
and
mov
xor
add
ljmp
adc
xlat
mov
add
mov
or
cld
sub
push
or
comiss
jns
pop
out
lcall
cmpsb
pop
mov
cli
lods
cltd
in
gs
pusha
dec
mov
inc
mov
fcmovb
lods
and
and
or
push
add
jae
sbb
and
pop
out
je
dec
lds
cmpsb
scas
xorl
jno
pop
add
xchg
inc
iret
xor
mov
or
rorl
push
jmp
push
inc
xor
jbe
xchg
inc
je
lcall
push
outsb
pop
push
lahf
mov
repnz
push
inc
loope
cld
fcoml
je
xchg
mov
loope
imul
or
sub
ja
add
dec
jle
loop
inc
mov
pop
mov
mov
shll
cwtl
push
mov
push
jmp
mov
fdivl
cltd
xlat
xchg
out
into
insb
xor
outsl
sub
xchg
fwait
pop
and
into
xchg
inc
test
push
or
add
cmc
outsb
jle
nop
push
lret
in
mov
and
lods
sbb
inc
leave
aaa
add
mov
jae
cmp
jp
sbb
pop
fisubs
stc
pop
mov
testl
xor
call
xchg
push
inc
scas
test
push
fildll
dec
dec
jecxz
inc
pop
out
or
dec
out
mov
push
or
mov
ret
nop
ja
dec
ret
push
test
inc
jp
xchg
bound
pop
mov
iret
shl
xchg
out
inc
bound
lahf
pop
sbb
sub
inc
dec
outsb
std
cs
lcall
outsb
xor
das
push
sti
or
fdivl
cmp
jmp
pop
in
pop
int3
fiaddl
mov
bound
xor
xor
sahf
enter
xchg
imulb
inc
lea
cmp
mov
xchg
gs
das
imul
pop
mov
mov
fwait
mov
or
sbb
mov
mov
lcall
xor
dec
scas
int
cltd
push
pop
mul
dec
and
lret
push
rolb
mov
xor
js
notl
lahf
sub
dec
andl
outsl
dec
sbb
push
shrl
iret
jg
inc
sbb
insb
lods
fs
out
and
add
lods
sahf
xor
xchg
jg
jg
mov
ljmp
jns
mov
mov
jmp
mov
push
cmpsl
inc
pop
jp
out
cmp
push
sub
pop
in
test
rolb
testl
pop
lret
push
fstpl
pop
add
loopne
cmp
inc
xchg
pop
nop
sahf
dec
mov
int3
test
sbb
pop
jp
jl
sub
cmpsl
loope
sbb
lret
pop
popa
ret
and
enter
imul
mov
cmpsl
repz
outsl
and
xchg
sub
andl
lods
add
test
shrl
push
out
js
imul
dec
adc
mov
pop
leave
roll
pop
dec
jp
outsb
outsl
addr16
sub
sbb
add
inc
xchg
mov
out
cmc
imul
imul
or
adc
add
mull
test
xor
shlb
data16
jl
mov
mov
lds
jb
pop
push
jle
testl
xchg
xchg
arpl
sub
bound
dec
add
imul
pop
xchg
lcall
jmp
sarl
popa
outsb
inc
or
pop
adc
repz
adc
mov
std
pop
ret
scas
mov
mov
shl
fisubrs
test
inc
rolb
cmp
aaa
pop
shl
pushl
orl
mov
mov
aaa
push
fs
jno
int3
xchg
inc
stos
pop
xchg
fsts
jb
xor
das
out
inc
and
jge
adc
pop
pusha
xor
or
pop
dec
shrl
lret
push
js
lea
fsubs
mov
and
subb
pop
out
fisttpl
xor
cmc
lcall
or
and
push
and
test
insl
adc
jb
sub
addr16
lret
mov
dec
xchg
leave
clc
mov
daa
add
mov
jle
mov
sbb
fdivrs
inc
fdivrs
pop
in
movsb
arpl
pushf
mov
fists
pop
sbb
pop
sbb
loope
sub
sbb
std
ds
clc
mov
js
dec
ret
push
fisubs
inc
mov
adc
into
push
sub
lret
dec
or
or
lret
clc
les
js
mov
jmp
jmp
dec
inc
adc
dec
ffreep
xchg
mov
repz
rcrb
cmp
jae
stos
insl
clc
lock
mov
and
ja
arpl
mov
push
mov
jg
scas
cmc
xchg
ret
movsb
lahf
adc
adc
sbb
flds
daa
xor
mull
mov
sub
dec
sub
push
mov
mov
jbe
dec
gs
sbb
cwtl
jmp
int3
pop
dec
push
and
or
push
pop
lds
sbb
mov
sub
push
lds
fisubrs
lret
push
inc
cli
jecxz
jl
std
jmp
lds
adc
push
sahf
int
jge
or
xchg
cmp
push
loopne
add
push
cld
or
xor
or
incl
mov
adc
popa
push
cld
mov
xor
popf
dec
rcrb
pop
inc
push
add
ffree
hlt
adc
push
test
sub
jb
xor
xchg
fcomip
insb
mov
sbbb
scas
mov
std
dec
in
aam
pop
sub
mov
in
movsl
or
push
daa
lret
cmpsl
sbb
ds
lret
sbb
dec
adc
cmc
fs
xorb
cmp
and
ss
add
cmp
nop
push
rorl
scas
mov
jns
test
or
or
cmp
adc
sarl
das
jp
xchg
push
insl
adc
repz
hlt
dec
and
ljmp
inc
and
clc
pusha
addr16
push
leave
popa
sbb
mov
sub
dec
mov
sbb
loopne
and
aad
movsb
div
fisubrs
cmc
arpl
rolb
orb
gs
push
and
lret
sbb
popf
pop
cmp
sbb
popf
adc
mov
ljmp
fsubr
test
outsb
mov
mul
fisubl
mov
xor
pushf
sub
out
xchg
aad
jbe
adc
add
xchg
mov
pop
iret
mov
mov
shll
push
lods
add
mov
movsb
data16
or
popf
mov
es
test
mov
cli
loopne
jns
ljmp
jge
ja
les
xor
nop
sub
pop
push
dec
jge
inc
hlt
inc
pop
clc
jno
aam
lods
cmp
cmp
cmp
repz
jg
mov
mov
jge
cltd
test
into
lea
lds
cmpsb
fwait
sub
pop
lret
xlat
leave
pop
jno
sbb
add
out
or
mov
inc
faddl
mov
int
lret
cmc
xchg
fistl
xor
data16
icebp
add
mov
mov
fld
jae
pop
sub
sti
cmc
stos
jne
pop
xor
inc
cmp
push
icebp
filds
cwtl
mov
and
mov
push
cltd
sbb
mov
or
mov
mov
test
ljmp
nop
fists
mov
sbb
push
gs
test
push
inc
shll
imul
cmpb
rorb
xor
out
out
xchg
fnstsw
xor
aas
or
pop
adc
popf
push
jge
fimuls
pop
out
cmpsb
std
push
insl
mov
out
cmp
popf
out
cld
enter
xchg
clc
mov
arpl
cltd
nop
xchg
out
mov
test
stc
imul
ja
or
and
sub
mov
gs
lds
das
inc
jecxz
adc
pop
sub
shrl
cmpb
pop
ljmp
sahf
xchg
xchg
xor
imul
mov
push
inc
outsb
data16
dec
ds
outsl
xchg
leave
push
jbe
aas
mov
stos
inc
out
jg
jge
and
xor
sahf
hlt
ljmp
clc
xchg
mov
out
mov
and
or
add
ret
cmpsl
mov
fistl
mov
push
rcrl
xor
mov
addr16
fimuls
jns
sbb
subb
lock
gs
lea
xchg
dec
insl
jno
test
cmpsb
and
loop
outsb
xchg
sub
divb
xor
jle
popf
sub
mov
push
enter
add
xchg
out
mov
pop
xchg
shlb
inc
or
sar
es
sbb
les
xor
pop
bswap
das
sbb
lret
lock
xchg
xabort
cwtl
cwtl
push
mov
and
fldl
sbb
ret
dec
push
mov
jle
out
icebp
mov
in
movsl
bound
shrb
adc
lds
lock
push
leave
loop
jnp
mov
lret
or
pop
mov
cli
xchg
imul
stc
sti
and
or
mov
lods
test
sbb
sub
mov
pop
popf
arpl
inc
pop
inc
repnz
xlat
cmp
pop
sbb
xor
jbe
push
shll
daa
adc
add
xchg
inc
push
sbb
dec
lods
stos
pop
xor
cmpsl
scas
aad
sbb
mov
movl
mov
or
sub
loop
cmpb
rorl
mov
addr16
jl
cltd
or
addl
outsl
inc
das
lds
aam
mov
pop
inc
test
testb
jge
test
sub
sub
push
movsb
jno
xchg
lea
int
jle
cmp
decl
push
xchg
lea
or
test
sbb
mov
dec
sbb
sbb
rclb
xor
fadds
sub
mov
leave
in
sbb
loopne
xchg
sub
repnz
xchg
mov
add
sbb
test
jecxz
push
pop
cmpsb
mov
inc
ljmp
repz
sub
mov
push
mov
or
imul
pop
fwait
pmulhw
dec
xchg
test
shrb
fiadds
inc
inc
sar
sub
adc
negl
iret
push
mov
adc
rcll
inc
les
ja
repz
push
adc
jp
sub
ss
lahf
imulb
jnp
sar
repz
je
mov
ja
and
rorl
xchg
dec
sbb
test
xor
sub
sub
sbb
pop
fiadds
inc
icebp
inc
ss
ss
aam
inc
dec
ss
add
xor
pop
mov
xchg
jge
orl
sub
inc
push
rorb
dec
adc
mov
add
rcl
push
jmp
les
inc
pushf
aam
sbb
out
addr16
adc
xchg
cs
xchg
call
gs
pop
test
jle
call
movsl
test
xchg
mov
insl
lret
jmp
fcomip
or
rol
fcompl
jmp
inc
xchg
jae
sub
mov
jge
xchg
push
js
jno
inc
inc
xchg
iret
cmp
jl
jle
aad
dec
fmull
mov
mov
mov
sbb
inc
sbb
sbbl
and
movb
inc
add
dec
test
gs
das
pop
leave
push
lods
jae
jb
sbb
jmp
pop
xchg
cmp
xchg
es
xchg
stc
cmp
mov
int3
addl
aas
mov
sub
xchg
xchg
add
inc
hlt
dec
inc
mov
sbb
into
xchg
jl
jno
cmp
pop
pop
and
loopne
cmp
jbe
mov
cmp
pushf
pop
inc
add
cmc
fwait
leave
adc
sub
mov
add
ret
xchg
inc
cmp
sbb
dec
fwait
dec
cs
push
repnz
jne
pop
mov
out
shll
fiadds
mov
xchg
pop
sub
add
daa
adc
dec
and
cmp
inc
cmp
fsubrs
xor
cmp
aaa
addr16
xor
mov
enter
int
loop
push
imul
stos
pop
je
lock
pushf
je
mov
jg
adc
orl
stc
loop
in
push
jmp
mov
jge
add
cmp
jae
pop
or
xchg
or
jmp
xchg
aaa
call
mov
inc
cs
and
cld
mov
enter
aas
call
sub
mov
xchg
dec
pavgw
mov
add
and
inc
loop
adc
and
nop
adc
inc
bound
test
and
ss
call
mov
fstl
mov
sbb
aas
sbb
sub
jnp
mov
pop
stos
dec
adc
xor
imull
xchg
fidivl
or
imul
push
rcll
imul
fsubr
cltd
fbstp
test
jle
cmp
sub
lret
dec
adc
nop
inc
cmpsb
fnsave
iret
jae
je
int
gs
xchg
add
adc
imul
push
imul
cmp
pop
pop
mov
sub
clc
incb
and
mov
inc
jl
xchg
mov
fsubs
das
xchg
cmp
in
jo
pop
jecxz
js
sbbl
xchg
sub
jb
insl
adc
xchg
cmpb
push
stos
lods
jno
add
mov
sbb
aad
and
faddl
mov
lea
mov
es
jo
mov
mov
sbb
inc
sub
fcmove
mov
xor
sbb
and
fimull
xor
jb
pop
mov
test
testl
insb
dec
jne
test
push
cs
push
xchg
jge
loop
jne
test
lock
lahf
ja
add
or
sub
stc
pop
movsb
cmpsl
mov
lock
fildl
jns
test
stos
adc
rcll
mov
js
and
mov
test
adc
cmpsl
movsb
pushf
aam
test
push
movsb
mulb
loope
cmp
lcall
jno
xorb
mov
sub
push
pushf
add
pop
mov
cld
mov
lret
std
and
push
sbb
jmp
add
dec
push
inc
dec
shrl
xchg
add
xor
pop
insl
bound
xor
outsb
or
xor
imul
dec
pop
pop
and
push
cli
pop
out
idivl
pushf
sub
icebp
inc
mov
in
pop
mov
jae
pusha
xor
and
push
mov
bound
dec
addr16
cmpsl
jnp
mov
test
lea
cmp
sub
mov
rclb
mov
mov
or
out
cli
lret
imul
out
test
das
and
hlt
and
int3
insl
mov
sahf
sbb
sbb
add
mov
sub
mov
add
mov
ljmp
es
orb
ss
push
mov
std
or
and
add
xor
adc
sbb
cmpsb
xorl
aad
mov
mov
sahf
jp
imul
sahf
jo
mov
jo
mov
add
das
stc
les
push
cmp
sbb
int
mov
push
add
xchg
pop
ret
jecxz
mov
cmp
pushf
push
inc
loope
inc
push
stc
fs
test
stc
and
cmp
enter
sbb
jo
fildll
sub
cmp
mov
and
imul
aam
fwait
pop
mov
inc
add
lcall
xor
xlat
add
dec
inc
stc
jmp
stos
jecxz
mov
pushf
add
mov
fnstcw
mov
adc
dec
insb
jae
int
cmp
dec
cld
cmp
cmpsb
lcall
or
sbb
arpl
shll
test
stos
cmp
jmp
lret
out
imul
popl
inc
aad
sub
popf
sub
xlat
pop
fsubrp
pop
and
addr16
or
bound
xchg
aas
and
cli
push
cmp
cmpsl
xchg
push
mov
decb
mov
imul
roll
shl
add
fcomps
push
jl
popa
xchg
dec
popa
sbb
jne
test
push
rcrb
test
xor
jns
fdivrl
test
dec
out
les
test
ljmp
ja
scas
pop
lock
xchg
jbe
xchg
jecxz
popf
and
dec
or
lods
jb
dec
sahf
mov
push
jmp
push
clc
xchg
cmp
mov
cli
cs
enter
sbb
mov
int
rorb
in
sbb
dec
dec
or
std
mov
add
mov
adc
or
mov
pop
ljmp
fstp
andb
mov
xchg
fs
mov
sub
jnp
mov
les
roll
les
add
mov
lods
bound
icebp
push
push
jnp
xor
and
ljmp
and
mov
cmp
pop
out
jg
dec
ds
xor
and
pop
xchg
je
or
rcrb
imul
stc
mov
sbb
clc
iret
and
das
das
leave
cmp
jg
imul
mov
ficoml
fdivr
sub
lret
test
js
xchg
imul
das
push
and
push
push
push
sbb
popa
jmp
cli
stos
pop
adc
inc
cmp
jl
stos
inc
fwait
cmp
xchg
jae
push
aas
pop
inc
scas
sbb
fbld
shlb
int
and
pop
mov
dec
test
push
scas
mov
mov
cmp
pop
mov
aam
icebp
outsl
lcall
aam
mov
hlt
mov
lcall
or
add
aas
add
cmpsb
mov
cmpsb
xor
call
fld
inc
movsb
xlat
repnz
into
xor
insb
lahf
cs
dec
mov
mov
mov
inc
jge
dec
rcll
cmpsb
es
push
mov
add
scas
mov
out
xchg
add
and
push
fstpt
push
sti
iret
and
inc
lret
imul
sbb
jge
aad
jno
loop
pop
ja
sbb
andl
sbb
push
das
jle
or
test
mov
jo
jg
cmp
push
ljmp
jmp
push
cmp
push
lret
imul
inc
cmp
jb
ljmp
mov
jg
insl
lret
out
loope
popa
popf
jge
sbb
xchg
inc
push
lret
mov
push
add
popf
call
inc
xchg
adc
outsl
and
je
mov
or
outsb
inc
inc
lods
aaa
add
idivl
mov
dec
mov
sti
jno
jns
pop
mov
mov
sub
mov
negl
push
inc
cmp
je
les
sbb
hlt
or
cwtl
test
dec
xchg
hlt
cmp
adc
je
pop
adc
add
sub
cmp
imul
lcall
subl
inc
std
stc
hlt
arpl
nop
add
rorl
mov
cmpsb
push
push
jne
icebp
std
aad
cmpsb
add
fldt
add
dec
mov
jge
or
mov
jmp
mov
loop
add
outsb
insl
sub
gs
jp
add
and
cmp
mov
and
jg
xchg
mov
enter
jb
clc
fisttpll
dec
mov
popa
daa
sub
mov
xchg
mov
or
aam
inc
sub
call
call
dec
idivl
pop
sbb
push
aam
scas
js
mov
inc
xchg
sub
loop
mov
aad
jl
push
inc
push
sub
mov
dec
pop
push
les
sub
xchg
push
pop
sbb
std
inc
nop
mov
mov
test
cltd
es
add
xadd
cmp
and
in
lret
out
inc
movsb
lret
jmp
cmp
ss
mov
lods
in
imul
shrl
int
push
pop
push
xor
mov
addb
sbb
movb
out
sub
cmpb
xchg
fldl
aad
pop
xchg
cmpl
dec
push
inc
mov
out
adc
jmp
out
mov
into
je
sbb
lret
lods
mov
repnz
pop
pushf
mov
enter
pop
push
inc
outsl
xchg
mov
leave
gs
mov
inc
dec
jg
add
fstpt
imul
pusha
lahf
leave
xorb
rorb
xchg
test
mov
rol
mov
push
push
and
aam
pop
xchg
les
mov
sbb
dec
cld
sub
pop
mov
or
dec
mov
or
insl
arpl
ja
mov
or
repnz
int3
pop
mov
test
jne
test
inc
cmp
sbb
mov
dec
xor
imul
and
idivl
cld
mov
xor
std
scas
bnd
rcrl
adc
add
insl
out
das
jae
push
push
xor
xchg
inc
xor
sbb
jp
push
xchg
or
int
pop
rcrl
int
lret
js
sbb
call
pop
jb
add
inc
sub
cwtl
lcall
push
mov
call
mov
xchg
xor
mov
aaa
inc
outsl
movsb
nop
mov
loope
sub
shrb
movsb
jmp
push
sub
shl
lods
add
in
stos
mov
push
jnp
mov
test
shlb
popf
jg
sar
hlt
rorb
lods
pop
lahf
and
xorb
test
es
xchg
jbe
pop
mov
shrb
cmp
mov
lret
mov
mov
jb
pop
jmp
jl
and
subl
fnstcw
in
jns
pop
add
or
dec
mov
pop
push
hlt
xchg
incl
inc
mov
sub
sahf
test
cwtl
ss
xchg
sub
dec
sbb
fsubrs
xor
cs
inc
cli
lret
clc
or
aad
cmp
sahf
mov
aas
lods
xchg
lea
ss
cltd
push
lods
pushf
push
arpl
clc
lcall
bound
adc
fmulp
jecxz
pushf
mov
mov
sub
movsb
cli
test
inc
xor
jecxz
aad
xchg
adc
in
outsl
mov
les
sub
mov
sbb
push
bound
inc
mov
lret
sbb
xor
movsl
insb
sub
insl
fs
sbb
jno
mov
in
std
pop
lret
jnp
mov
into
rolb
loopne
xchg
les
sarl
in
jne
das
lahf
stc
aaa
movsl
sub
pusha
xchg
and
sahf
push
lret
jmp
jo
call
add
in
sub
test
shl
inc
sub
fxtract
inc
mov
mov
adc
and
xchg
mov
arpl
or
sub
insl
xchg
movsl
testb
fwait
and
daa
jge
cmp
and
jnp
cltd
pop
or
ss
iret
dec
xor
pop
test
cld
xor
stos
inc
add
iret
shrb
xchg
mov
sbb
xchg
mov
mov
out
mov
push
test
repz
cs
sbb
imul
orb
mull
pop
jns
inc
sbbb
stos
mov
push
out
and
jg
xchg
jno
mov
mov
lods
and
and
sub
sti
ljmp
adc
mov
adcb
ret
ret
test
jp
jb
mov
xchg
inc
jo
xor
outsb
sbb
lea
mov
les
mov
and
inc
xchg
jmp
sbb
cmc
scas
pop
inc
int
cmp
mov
leave
int
xor
dec
jmp
loope
or
rclb
adc
mov
inc
or
pop
insb
jle
test
add
in
daa
xchg
movsl
stos
push
mov
sarb
fistl
push
jno
lods
add
mov
pushf
sbbb
sub
cwtl
inc
mulb
dec
aas
outsb
or
or
dec
jo
leave
push
es
jmp
adc
cmp
popa
and
mov
gs
pushf
mov
xor
or
or
cmp
in
mov
test
cmpsb
sbb
aas
dec
cmpsb
sbb
lret
cmp
rorb
into
cmp
mov
jo
mov
add
add
mov
movsb
lcall
sbb
aaa
shrl
sbb
xor
adc
mov
lahf
mov
lock
lods
jge
mov
cmc
mov
imul
mov
jnp
push
jne
inc
cmpsl
push
sub
ret
cmc
sti
mov
fs
jmp
mov
in
sbb
ret
add
mov
je
dec
jl
jge
or
dec
pop
dec
jg
adc
aad
adc
mov
cwtl
sbb
outsb
jmp
fcompl
out
jp
dec
test
push
push
cmp
or
mov
adc
popf
aad
mov
js
movsb
scas
roll
mov
jne
mov
into
pop
popa
xor
xchg
jb
jle
fmuls
push
shlb
cmp
enter
mov
dec
lret
rcrl
pusha
fisttps
xchg
shll
es
and
lock
dec
mov
pusha
add
jae
xor
ljmp
adc
xchg
cmp
jb
add
ds
sub
adc
or
mov
in
add
push
fdivrs
mov
or
repz
jno
and
bound
pop
and
aaa
xor
fcomps
jmp
sarb
in
fwait
rolb
out
jge
sub
les
test
pop
loope
scas
jno
clc
inc
or
dec
fcoms
xchg
imul
cmp
push
fsubp
inc
je
jo
adc
jbe
in
push
dec
in
sbb
js
ds
popa
inc
lret
lret
jmp
shlb
rorl
push
xchg
dec
push
repz
inc
rolb
aaa
jp
outsb
popa
sub
lock
repnz
loope
mov
jge
mov
xchg
lcall
rcll
ljmp
lods
pop
ja
gs
sti
push
jno
enter
mov
fwait
jne
mov
or
lock
test
loopne
pop
cmp
aaa
jns
jb
popa
jecxz
jl
jb
cmp
sbb
jmp
mov
movzbl
push
popa
stc
aaa
aas
ss
shr
dec
ljmp
repnz
and
push
sbb
ret
or
pop
push
cwtl
mov
add
test
adc
popf
je
ret
int
pop
jbe
gs
jns
ss
xchg
outsl
fnstenv
insb
divl
and
sbb
aas
test
or
pop
popf
cmp
iret
sub
fmull
gs
xchg
mov
mov
cltd
jns
stos
mov
rcrb
pop
sbb
fxch
iret
jbe
gs
cwtl
faddl
sti
lgs
jge
pop
and
inc
sarl
ret
cmp
xchg
mov
fyl2xp1
or
sbb
jbe
mov
add
cmp
inc
sbb
xchg
mov
repz
outsl
xor
ds
mov
xor
mov
xchg
loope
aam
jecxz
fdivs
jmp
data16
lds
push
push
repz
pop
nop
sbb
pushf
bound
pop
movl
popa
xorb
inc
inc
in
add
hlt
push
adc
push
es
xor
int
jg
test
shlb
fs
or
int3
jg
inc
dec
push
sub
adc
cmpsl
mov
cli
jg
dec
lret
repz
cmp
sbb
jae
jp
gs
cwtl
mov
cli
stos
rcl
int
rcll
and
in
push
push
cmp
sbb
jmp
push
lods
sub
dec
in
jne
mov
icebp
jb
xorl
and
adc
dec
or
and
or
arpl
movsb
cmp
xor
mov
jge
movsb
mov
es
ja
jns
repnz
jl
push
or
aas
pop
inc
and
es
jno
push
cmp
repnz
ljmp
movsl
mov
rcrl
adc
outsb
out
cmp
lret
rorb
dec
imul
push
xor
or
adc
mov
in
out
sbb
sbb
pushf
jnp
sub
jmp
dec
mov
aaa
xor
std
adc
outsl
xor
dec
sbb
mov
xchg
lock
jecxz
dec
mov
mov
negl
in
fidivrl
lods
inc
les
pop
stos
adc
or
jle
sbb
mov
pop
pop
xchg
and
add
inc
add
jb
jmp
lcall
sub
jae
out
sti
inc
aas
push
call
jmp
ficompl
jo
jo
xorb
sub
pop
mov
fnstsw
or
std
mov
sbb
xor
ss
inc
mov
repz
mov
cmpsb
and
aas
add
inc
insl
inc
or
sbb
inc
push
repz
imul
ds
cmp
mov
sbb
notl
movsl
out
or
cltd
push
sarb
mov
mov
js
insl
mov
icebp
daa
sbb
add
mov
lea
lret
jns
stos
xchg
sub
jl
arpl
std
popf
adc
loop
rcll
test
pop
js
pusha
fistpl
mov
cld
sbb
mov
mov
push
es
es
sub
pushf
sbb
dec
or
push
jnp
call
jne
popa
and
adc
mov
into
push
scas
div
jp
lock
testl
add
cld
xor
push
push
jb
into
push
push
ljmp
outsb
sub
push
xchg
mov
fs
push
cs
add
push
mov
js
jp
scas
xchg
clc
ret
mov
push
mov
outsb
insb
xor
xchg
dec
inc
pusha
add
test
gs
cmp
mov
rcrl
sar
pop
inc
mov
in
leave
cmp
mov
in
mov
add
jns
pop
dec
fisttpll
push
fs
test
pop
inc
pop
pop
adc
pusha
lods
cltd
push
pop
jg
dec
dec
sahf
in
adc
inc
adc
add
int
pop
cmpsb
adc
jbe
imul
sahf
stos
mov
fimuls
aas
push
push
pusha
mov
loop
xchg
mov
or
aas
sbb
and
cmp
in
add
inc
pusha
mov
add
in
and
pop
xor
daa
notl
testl
jnp
repnz
data16
int3
and
push
inc
cmp
mov
sbb
add
xchg
lods
inc
xor
rol
sub
jmp
lods
rolb
xchg
push
aad
adc
cmp
and
lcall
mov
xchg
push
sbb
mov
cmp
iret
sub
pop
ljmp
into
lods
aas
adc
mov
and
inc
mov
mov
in
pusha
mov
cltd
dec
scas
into
daa
fsubl
xchg
hlt
mov
orb
repnz
inc
jmp
insl
push
pop
out
or
jmp
push
into
repz
lahf
and
sti
jmp
xchg
pop
movsb
in
jne
not
cwtl
imulb
inc
sbb
pop
fdivr
insl
mov
xor
add
scas
push
mov
inc
jno
jo
sub
jne
xor
push
imul
mov
xchg
sbb
aas
aam
lcall
scas
mov
mov
orl
arpl
inc
jbe
mov
mov
add
in
pop
xlat
je
outsb
or
mov
pop
adc
or
test
aad
std
data16
out
aas
add
loope
cmp
mov
pop
cmp
les
out
and
out
stos
dec
dec
inc
sarb
cwtl
adc
push
jo
mov
sub
dec
lods
lods
dec
mov
repnz
scas
mov
adc
fimuls
sbb
imul
movsb
ss
fiadds
push
psubd
test
insb
add
sub
rcr
xor
mov
subl
mov
stos
sbb
inc
mov
in
cld
inc
dec
xchg
xchg
fucomi
data16
jmp
push
fisttps
icebp
cmpsl
imul
daa
dec
jae
push
xor
enter
or
mov
gs
popa
ds
cmc
test
orb
shl
nop
mov
xchg
xchg
dec
xchg
sub
pop
mov
test
or
iret
jge
cmp
popa
mov
cmp
sub
cmp
fstps
xchg
dec
je
aad
mov
sub
or
call
mov
sub
movsl
jbe
and
mov
cmp
outsl
int3
inc
out
push
mov
xchg
bnd
stos
or
addr16
cmpsl
sahf
mov
dec
add
lods
pop
lds
and
clc
bound
cmpsl
inc
sub
movsl
ja
loop
fwait
sub
mov
fcmovnb
mov
or
ss
fdivs
or
add
das
lahf
push
fidivs
movsb
insb
in
adc
fstps
mov
add
int
jb
ret
fwait
jne
sar
pop
fnstenv
jl
fnsave
inc
mov
sub
sub
iret
dec
std
xor
cwtl
mov
and
mov
xchg
lods
int
in
ret
test
xchg
xchg
ds
imul
and
pop
sbb
fs
in
imul
pushl
mov
sbb
pop
xchg
test
and
fcomps
cmpsl
gs
fs
ret
lcall
or
lds
and
mov
lock
or
sbb
inc
sahf
roll
int3
insl
add
adc
jp
add
scas
vmwrite
jns
or
loop
lcall
adc
mov
mov
out
inc
add
lcall
jne
pop
sub
rol
xor
out
aaa
jg
push
cltd
push
ljmp
pop
cmc
in
xor
incl
icebp
adc
jp
ret
inc
mov
cmp
mov
bound
pop
test
pop
pop
sub
enter
andb
aam
push
push
subl
xor
pop
popa
sbb
mov
stos
pushl
xchg
mov
fimull
out
pop
mov
lret
sub
mov
or
sbb
adc
andb
cmpsb
mov
imul
cmp
pop
in
jnp
sub
add
push
stos
ja
aam
std
mov
sbb
adcl
pop
lret
inc
shrl
addb
and
ret
data16
ljmp
shll
xchg
xchg
divl
dec
push
fwait
enter
xor
out
imul
sysret
scas
popa
sub
gs
sbb
cld
int
je
push
cmpsl
mov
sub
mov
sub
loopne
inc
inc
adc
addr16
fwait
int3
mov
sbb
mov
es
and
mov
fcoml
jb
add
sbbb
push
lds
push
pusha
ficomps
mov
dec
sbb
mov
call
push
leave
push
mov
push
call
test
inc
cmp
mov
rolb
in
or
pop
mov
test
mov
adc
aas
jl
cmc
or
mov
rcll
inc
xchg
xchg
sub
aam
jmp
call
movsb
or
xor
xchg
xchg
cmp
js
in
mov
xchg
mov
lret
nop
or
xchg
fwait
or
jne
jg
dec
out
addb
popf
cmp
lret
fs
adc
or
cmpl
scas
mov
add
pop
xchg
inc
jne
adc
decl
cmp
pop
jne
pop
in
pop
push
inc
mov
push
aad
cld
lahf
out
aas
add
test
data16
dec
das
xor
xor
lcall
pop
push
jmp
push
xchg
and
cmp
cmc
mov
movsl
jg
rorl
mov
cmp
push
aad
jecxz
mov
jno
mov
xlat
sti
into
or
adc
dec
and
mov
and
out
mov
and
lahf
sub
pop
fs
incb
in
enter
jle
nop
lcall
imul
shlb
cmc
inc
cltd
out
inc
and
lods
outsl
fnstcw
sbb
lea
pop
dec
sub
jae
mov
jle
push
sub
or
push
mov
mov
mov
dec
sub
sarl
roll
popa
dec
and
scas
in
icebp
pop
xor
adc
add
popa
popl
mov
gs
shrl
outsb
or
in
mov
dec
outsl
loop
mov
fildl
mov
cmpsl
push
xchg
pop
cmc
push
sub
sahf
fsubl
fldenv
call
imul
pushf
repnz
movsl
test
and
pushf
sbb
not
push
mov
dec
std
icebp
outsl
std
popl
cs
pop
ja
mov
les
insb
push
rcl
loopne
and
pushf
ret
stc
rcl
lret
mov
and
pop
and
push
arpl
jecxz
mov
shrb
dec
push
xor
sbb
or
aaa
jo
mov
sub
hlt
push
sub
cmp
mov
mull
xlat
lahf
out
push
leave
mov
mov
xchg
push
popa
push
adc
pushf
pop
ja
subb
sahf
sub
inc
adc
xlat
daa
mov
mov
inc
pop
fxch
mov
jns
popf
ja
hlt
dec
and
cmp
mov
stos
adc
lods
mov
mov
mov
sti
mov
inc
int3
jmp
sub
xchg
xorb
icebp
movsl
mov
mov
mov
push
jnp
mov
inc
dec
fidivrs
popf
in
cmp
arpl
in
out
insl
cs
mov
leave
scas
cmp
outsb
xchg
add
int3
mov
movsb
add
insl
popf
and
push
fistps
pop
xchg
lods
jg
dec
movsl
cltd
andl
imul
aas
outsl
popf
and
jnp
mov
or
inc
stos
fldt
xchg
or
ljmp
sub
test
in
jbe
xor
add
cmp
or
xchg
push
pusha
mov
push
jne
jnp
add
pop
in
loopne
shrb
ret
std
loopne
push
pop
jae
jge
push
jne
into
mov
and
stos
pop
in
mov
and
loopne
iret
cltd
mov
mov
and
jns
xchg
cltd
sti
push
stos
add
mov
test
jb
adc
adc
test
gs
mov
push
pop
pop
into
mov
outsb
xor
add
xor
cwtl
or
imul
icebp
or
xchg
cmp
jns
out
icebp
xchg
sbb
mov
outsl
cltd
out
icebp
pop
cwtl
sbb
jne
mov
sbb
lea
scas
subl
inc
jle
cmp
icebp
sub
push
test
jmp
and
rorl
sbb
lret
fstpl
xor
pop
pushf
shl
sbb
loop
pop
stos
fcmove
or
adc
mov
fistpl
lea
sbb
in
ret
loope
cli
jp
stc
or
sbb
jl
cltd
mov
in
push
xor
cmp
imul
enter
out
sbb
dec
inc
aad
mov
imull
cld
sbb
lcall
sbb
nop
inc
xchg
cs
lods
in
sub
mov
cmpsb
and
addl
aad
sub
xchg
jmp
jge
and
pop
int3
cmp
mov
fcomps
pop
push
ficoml
and
pop
cmpb
lret
xchg
fdivs
jne
dec
xchg
into
sbb
xchg
mov
sub
ja
jae
push
pop
and
cmp
roll
loop
insl
cmp
fbstp
sbb
aam
popf
mov
mov
xchg
jp
call
jle
insl
fwait
mov
add
pop
rorl
lahf
mov
dec
pop
shlb
icebp
mov
adc
test
loopne
fchs
cmpsb
loop
ja
lds
cmpsl
mov
std
xor
add
and
xchg
or
and
mov
jg
arpl
cwtl
mov
mov
dec
mov
push
jb
stc
in
add
call
cmp
cmp
data16
sbb
mov
fsubrp
loopne
test
mov
neg
or
lods
pop
cs
scas
ds
and
adc
push
mov
hlt
cld
pop
xor
es
lcall
lret
mov
insb
leave
rorl
xor
int
mov
add
ds
out
pop
dec
ja
shr
xor
cmpsb
lea
fnsave
add
loop
adc
imul
bound
pop
or
push
mov
das
or
stc
lock
cmc
mov
and
imul
xor
pop
vmovntps
mov
mov
xchg
adc
or
inc
cmp
mov
push
xor
jbe
out
pop
hlt
mov
adc
cmp
outsb
pop
mov
mov
dec
push
pop
xor
fmull
ss
jae
pop
sub
bound
or
scas
lret
popa
mov
enter
repnz
cmp
adc
adc
adc
pop
or
fcomps
pusha
cld
cld
cmp
adc
stos
dec
inc
add
fwait
inc
pop
mov
rcll
aam
pop
inc
icebp
jno
fwait
dec
push
scas
jle
out
sbbl
sbb
imul
cmpsl
push
mov
sub
pop
jnp
jmp
jns
cmpsb
in
icebp
ja
jae
dec
add
add
int3
clc
and
xchg
xor
sbb
cs
xchg
cmp
dec
jns
mov
or
dec
call
cli
push
xlat
mov
adc
rcrb
jbe
pop
jae
fists
ret
cld
ror
std
idivb
imul
je
mov
test
clc
cmpsl
push
or
adc
fs
stos
int3
sub
and
leave
or
dec
scas
mov
jb
jmp
mov
popa
fucomi
dec
cmp
mov
push
mov
xor
mov
inc
std
jnp
jno
and
jbe
and
sbb
lds
pop
std
data16
popf
mov
mov
add
pop
xlat
out
dec
mov
dec
adc
xchg
jecxz
adc
notl
pop
and
insl
mov
out
scas
xchg
or
mov
movsb
sbb
push
test
jne
cmp
or
mov
or
or
add
bound
outsb
mov
pusha
push
arpl
jg
fsincos
cltd
push
inc
jne
testl
xchg
mov
mov
dec
aas
mov
pop
or
mov
movsb
mov
xor
or
fidivrs
rcl
jmp
subb
popf
pop
in
pop
subb
lods
inc
jmp
shlb
xchg
cmpsb
push
mov
mov
and
test
sbb
jl
jl
addr16
mov
lahf
cmp
jle,pt
push
cltd
out
bound
add
popf
dec
in
jecxz
xor
scas
iret
sbb
mov
mov
pop
shrl
jecxz
jg
je,pt
repnz
xor
sbb
fsubp
adc
mov
mov
pop
out
mov
add
bound
push
add
xchg
ret
inc
mov
sub
cltd
clc
dec
cwtl
inc
pop
imul
enter
in
insl
mov
fsubs
and
test
rcrb
mov
jne
adc
or
fsubp
xchg
xor
cwtl
fisttpl
fnstenv
dec
in
mov
cwtl
push
add
or
and
mov
add
scas
insb
push
loop
into
addr16
pop
test
pop
or
sbbl
xor
mov
xor
bound
cmp
mov
push
push
in
sbb
jecxz
mov
movb
fdivrl
stos
out
repz
ret
xor
pop
jbe
pop
inc
xor
add
or
jno
pop
mov
sub
pop
addr16
mov
movsl
loopne
pop
outsb
or
dec
cmp
dec
dec
mov
dec
test
xor
out
pop
push
mov
sub
mov
mov
add
les
ljmp
addr16
inc
daa
push
pop
insb
add
adc
pop
sbb
lods
sbb
sub
out
pop
mov
addr16
jmp
mov
xor
sub
test
mov
mov
sub
rorl
mov
mov
or
mov
and
pop
lret
sub
or
mov
xlat
mov
mov
inc
divl
xchg
mov
xor
mov
fwait
jp
xchg
cs
mul
sbb
sub
push
pop
out
repz
add
aad
repnz
fcomp
lret
pushf
iret
sbbl
or
js
fistpll
insl
dec
pop
mov
lods
loopne
repz
mov
mov
repnz
dec
out
jmp
ja
fucomip
repz
push
jbe
adc
jbe
bswap
stos
loopne
lock
inc
xor
idivl
daa
ss
daa
mov
or
lret
xor
pop
loop
lret
inc
mov
xlat
aad
pop
add
call
mov
pop
dec
cwtl
xlat
mov
pusha
scas
jle
inc
push
mov
popa
fdivrl
pop
inc
scas
dec
dec
pop
cmc
xor
lret
xchg
mov
movsb
movsb
adcb
mov
out
jns
test
cs
ret
in
adc
inc
sub
scas
out
add
or
into
lods
jg
out
jmp
push
test
sub
jbe
scas
fwait
add
cmp
in
mov
push
daa
sar
cmp
aam
sbb
sbb
popf
ret
mov
sub
mov
xchg
adc
sbb
lahf
mov
outsl
pop
jns
aas
push
movsb
dec
pop
pop
xor
fidivs
cmpsb
dec
mov
shrl
aas
dec
cld
pop
xor
cmpsl
ja
jecxz
cs
push
xor
ja
negb
inc
jmp
call
sti
sahf
adc
xchg
xchg
xchg
sub
xorb
pop
pop
out
jns
lock
stos
shr
push
arpl
cmp
mov
adc
push
pop
fs
cmp
sbb
nop
shlb
fldl
inc
fdivrl
pop
sub
mov
jge
xchg
shlb
es
hlt
dec
inc
xchg
or
pop
pop
addb
sarl
mov
xor
and
fs
sub
fdivs
adc
mov
cmp
out
addr16
fnstsw
stos
xchg
mov
xchg
jmp
xor
xchg
scas
ret
inc
mov
ss
lods
push
mov
adcl
pusha
jp
ss
in
jb
lods
or
ja
sub
lods
inc
inc
xlat
adc
ret
clc
arpl
sbb
stos
js
xor
mov
cli
sub
cmp
mov
lret
mov
mov
movsl
xor
add
insl
fcomip
shrb
xorl
pop
loop
or
xor
push
in
out
movhps
push
popf
shl
mov
push
fcmovnbe
cmpsb
outsl
loop
ret
subl
popa
xchg
cmp
push
jbe
movsl
cmpl
or
jle
dec
jb
and
outsl
jmp
and
dec
les
fstpl
lods
jo
jg
mov
mov
lahf
fldl
jle
in
sbb
or
sbb
loopne
and
sti
dec
mov
aaa
sarb
cmp
repnz
daa
adc
push
ja
or
std
jbe
xor
fstpl
cmp
xor
call
push
mov
ja
test
dec
mov
pop
xlat
cmp
mov
fucom
mov
out
xor
repz
in
out
aad
xchg
xor
int
nop
divl
dec
iret
pop
lods
adc
add
jp
imulb
dec
or
das
insb
add
cmp
mov
cmc
pop
ss
sbb
fs
int3
pop
dec
imull
lret
lahf
dec
adc
inc
jle
addl
sbb
sbb
mov
mov
jo
xchg
inc
adc
lahf
or
loope
or
ss
js
sbb
jle
aaa
jg
mov
nop
mov
push
inc
xchg
dec
movsl
in
loope
inc
ss
and
mov
pop
dec
jo
popa
in
push
in
mov
mov
jmp
mov
mov
popa
inc
adc
xor
mov
sti
fldcw
cmp
xchg
adc
and
out
sbb
xor
mov
add
fnsave
push
ficoms
pop
add
push
cmp
gs
mov
mov
mov
es
les
jecxz
inc
in
xchg
je
leave
dec
xchg
movl
mov
cltd
mov
mov
jbe
dec
sub
mov
mov
pop
loope
inc
clc
mov
adc
sbbb
push
cmpsl
jb
roll
lcall
fldt
movsb
mov
arpl
mov
mov
mov
das
xor
rcr
adc
lock
xor
mov
out
mov
outsl
into
scas
mov
xchg
pop
stos
scas
ds
or
lea
xchg
ret
adcl
dec
dec
cli
or
cmp
shll
fisttps
or
xor
pusha
lahf
inc
aas
add
rorl
rcr
adcl
stos
xchg
mov
dec
pushf
aad
ljmp
xchg
push
nop
xchg
popf
std
in
inc
daa
xchg
pushf
pop
mov
adc
stc
addb
ret
jb
lret
xor
xlat
ret
sbb
cmc
ror
ror
idivl
mov
adc
pop
sub
pop
sub
insl
cmp
aad
mov
push
push
divb
aas
jae
movsb
push
mov
mov
movsl
in
das
mov
inc
fstps
mov
adc
pop
and
push
movsl
fistpll
sbb
push
daa
dec
pop
int
xchg
push
mov
inc
sahf
fbstp
jp
dec
popa
stos
lods
jle
sub
push
mov
imul
cli
or
push
jns
pop
pop
pushf
xchg
inc
push
clc
xor
cmp
mov
movsl
mov
sarb
int
enter
xlat
jno
sbb
test
pop
loop
je
loop
lret
int3
test
push
or
nop
nop
or
push
xor
out
add
pushaw
idiv
add
push
and
jne
pop
inc
cwtl
push
nop
xchg
imul
adc
stc
mov
les
sbb
dec
out
iret
negb
pop
leave
cmpsl
jmp
add
jb
fs
lods
push
pop
jp
icebp
fcomps
in
cmp
cltd
enter
sbb
and
xor
mov
mov
push
dec
cmpsb
jg
jp
pop
icebp
pop
pushf
cmp
ficompl
mov
push
mov
clc
lock
test
pop
aaa
pop
push
push
mov
mov
arpl
out
or
xlat
call
mov
cmp
xchg
sub
push
fdivrl
rcll
mov
arpl
stos
xchg
adc
cmpb
mov
push
jns
push
cmpsb
out
fwait
in
std
scas
out
iret
add
loop
inc
xlat
or
pusha
jnp
jnp
cmp
rolb
dec
insb
jg
out
sbb
sub
cmp
std
jg
test
sub
aaa
xchg
mov
aad
pusha
gs
pop
nop
into
push
ror
shll
hlt
sbb
xor
cltd
std
cmp
fwait
sub
or
add
mov
pop
push
pop
push
jecxz
cmp
imul
pop
sti
mov
xor
and
xor
adc
or
or
test
xor
dec
stc
mov
setne
add
cwtl
into
dec
cmpsb
adc
sbb
les
iret
sti
fwait
mov
push
mov
int
sub
jo
cwtl
add
inc
adc
dec
stc
imul
add
data16
sbb
mov
sub
lds
pop
jmp
pop
rorb
out
sub
lods
leave
pop
cmpsb
lea
les
cwtl
pop
mov
or
popa
xchg
push
or
mov
lahf
pop
push
call
in
jmp
add
mov
stc
xor
adc
icebp
xor
cmp
mov
std
out
lcall
pusha
adc
xchg
xor
fldln2
fsts
inc
jle
rorb
es
aaa
sbb
sub
jnp
mov
push
movsl
out
aas
adcb
popa
ret
or
sbb
or
or
pop
mov
sub
rclb
repnz
mov
jmp
jnp
daa
or
xchg
shll
and
es
repnz
jl
test
jl
andb
add
jl
orb
xor
stc
lock
test
add
adc
sub
adc
out
add
xchg
mov
and
xchg
inc
jns
xchg
adc
push
push
dec
pop
inc
add
jne
inc
sub
pop
out
add
jo
adc
inc
int
cmp
out
add
dec
push
push
xor
mov
ret
outsl
push
mov
lds
addr16
xchg
loopne
sub
movsl
int3
cmp
in
ficoml
ret
inc
out
xchg
or
push
stc
push
inc
mov
ficoml
addr16
sub
int3
inc
fistpl
into
push
lcall
mov
daa
xchg
cmpsl
add
repnz
push
push
sbb
pop
adc
push
fistps
jno
sub
mov
jl
fnstenv
mov
sbb
push
lahf
inc
push
push
jae
dec
cwtl
push
sub
jg
stos
rcrb
cwtl
mov
mov
jp
add
sbb
pusha
jne
in
repz
push
add
jmp
aad
adc
in
loop
xchg
inc
mov
call
repnz
cmp
popf
push
and
push
shl
cltd
arpl
xlat
jns
add
stos
xchg
jb
test
dec
pop
inc
inc
xchg
int
ljmp
push
inc
pop
test
push
test
inc
xor
rorb
mov
idiv
fwait
pop
das
add
rcll
insl
inc
fs
add
rorl
ljmp
dec
sbb
pop
sub
lret
cltd
stc
je
fisttps
lods
lret
dec
fdivrl
loop
push
enter
xchg
xchg
mov
and
jle
and
xor
xchg
repz
sub
mov
in
mov
call
push
lea
sub
mov
int3
or
mov
or
and
dec
mov
xchg
jne
mov
dec
xor
adc
jns
jbe
aas
roll
xlat
push
mov
add
jmp
je
push
das
sahf
ja
or
mov
xchg
dec
xchg
pusha
shrb
mov
rorl
add
adc
fistl
sub
sub
jecxz
jne
je
mov
pop
push
pop
push
lods
test
sub
movsl
ja
imul
and
sbb
aas
imul
movsl
mov
ss
lahf
jge
jne
push
mov
and
stos
aad
dec
cs
inc
pop
dec
lcall
adc
loope
mov
test
fwait
adc
dec
sti
mov
jns
dec
pop
in
shl
movsl
mov
das
and
ret
adc
mov
nop
xchg
sbb
push
jle
lods
out
cmp
repz
or
jge
std
add
add
scas
insl
jmp
arpl
in
adc
push
or
dec
repz
lods
shrl
iret
pushf
dec
mov
cmp
jno
sahf
mov
sub
repnz
int3
and
icebp
repnz
pop
mov
push
ja
mov
push
fwait
stos
cwtl
test
imul
xchg
xor
jge
xchg
adc
mov
stos
scas
or
sbb
and
lcall
outsl
cltd
inc
and
add
push
movsl
movsb
dec
fwait
jecxz
cmpsl
mov
imul
nop
call
push
pop
jge
mov
push
lahf
out
ds
je
push
repnz
sub
shr
sub
xchg
shlb
xchg
sbb
cmp
push
pop
ret
mov
dec
sub
sub
imul
xchg
int
sub
jnp
mov
mov
cs
dec
shrl
popa
sub
or
mov
cwtl
into
fsts
dec
scas
mov
pop
add
push
sahf
in
stos
sub
je
fildll
mov
push
jg
inc
xchg
data16
pop
mov
pop
ds
mov
jecxz
imul
fldt
jo
inc
xor
out
outsl
and
inc
xchg
aad
adc
les
testb
dec
or
inc
mov
inc
pop
dec
shrl
pop
outsb
or
orl
xor
out
test
rol
out
jl
inc
je
popl
jnp
pop
mov
mov
mov
ficoml
cmpsl
stos
pop
push
jmp
pop
test
hlt
xor
push
mov
xlat
xchg
jno
push
in
stc
pusha
add
cmpsl
inc
inc
cmp
movsb
mov
sbb
xchg
sbb
inc
xor
jle
sti
inc
mov
mov
out
dec
leave
sahf
mov
mov
pop
xchg
add
pop
dec
mov
push
popa
mov
dec
aas
mov
scas
mov
cmp
push
std
das
dec
mov
pop
jnp
loopne
test
and
dec
mov
jbe
cmp
fsubrs
mov
push
inc
cmp
jge
das
jge
or
pusha
sbb
push
xchg
arpl
sub
sbb
cltd
mov
cmp
mov
push
xlat
int
inc
xor
fsubrs
fxch
insl
lret
mov
fistpl
mov
xchg
sub
pop
out
mov
loopne
icebp
xor
mov
ljmp
bound
pop
nop
jecxz
pop
cmpsb
faddl
adcb
dec
incl
inc
sub
jg
mov
mov
sbb
mov
aad
push
mov
sub
popw
mov
jmp
mov
inc
das
and
pop
out
pop
push
mov
scas
out
mov
xchg
and
dec
push
std
aam
pop
jl
cwtl
popf
add
xchg
and
int3
add
pop
leave
cs
mov
mov
in
cwtl
fsts
es
adc
fnstsw
les
movsb
mov
fisubl
fadds
mov
sub
loope
mov
pop
add
inc
and
xor
push
cli
pusha
shl
push
shlb
mov
test
pop
jb
incl
sahf
pop
adc
push
lea
mov
push
movsb
or
cli
inc
and
notb
fldenv
addr16
mov
aas
test
adc
push
sbb
nop
repz
mov
adc
cmpsl
pop
mov
shll
jecxz
sti
fcmovne
adc
sbb
xchg
fbstp
fidivrl
aas
in
cmp
push
xchg
dec
jge
jno
jge
pushf
js
test
fists
dec
mov
sub
push
inc
mov
mov
divl
push
dec
adc
sub
popf
or
jb
jae
inc
xor
mov
fldcw
mov
rcl
cmc
icebp
outsl
mov
hlt
xchg
xor
adc
inc
dec
pop
xlat
stc
shrb
dec
push
and
pop
mov
or
shll
mov
sub
stc
push
sub
leave
cmp
shrb
inc
psubusb
scas
jb
sbb
cmp
pop
mov
les
insb
lret
bound
sub
push
roll
push
out
sti
mov
and
cmp
lret
dec
pop
cmp
sub
jp
leave
xor
fldenv
outsb
inc
movl
jne
fdivrp
sbb
xchg
loop
mov
add
push
lods
sbb
cmc
sbb
sbb
fsts
or
insb
lcall
test
push
or
push
jle
mov
in
iret
lret
fimull
nop
insl
mov
repnz
mov
orb
imul
cmp
in
fstps
push
fldt
adc
lock
pop
push
fcmovne
jge
nop
arpl
ljmp
inc
jbe
mov
jae
roll
xor
leave
cmp
sub
mov
jo
jae
xchg
movsl
call
fwait
in
ror
mov
mov
mov
xchg
int
jb
pusha
cmp
mov
and
js
mov
inc
sahf
iret
frstor
inc
sbbb
inc
push
jb
int3
jle
sub
stos
and
insl
dec
push
push
in
notb
and
jb
sbb
shl
test
add
aas
jns
mov
sbb
jg
or
jmp
cld
mov
dec
in
das
dec
lret
or
clc
adc
adc
mov
mov
out
shll
fwait
popa
or
loope
ret
and
mov
out
loop
ja
xor
xchg
stos
xor
add
mov
scas
addr16
mov
add
and
and
push
pusha
dec
ficompl
mov
pop
popa
popf
cmp
sub
mov
icebp
cmp
aaa
mov
pop
push
jmp
in
sbb
stc
push
mov
aas
popf
ljmp
xor
add
mov
dec
mov
daa
mov
mov
push
or
jp
addr16
imul
stos
and
xor
cmp
push
nop
mov
cmpsl
jbe
cld
pop
aas
or
fisubrl
and
sbb
mov
push
test
push
xchg
fildll
mov
idivl
das
cltd
inc
nop
mov
leave
aas
mov
std
in
orb
loop
movsl
sbb
mov
push
pop
aam
jno
mov
cld
lret
lea
psubusw
in
push
sbb
outsb
adc
out
arpl
sbb
jge
sahf
xor
test
sub
out
xchg
dec
aad
ficomps
scas
insl
xor
ret
push
cld
lods
rcrl
and
aas
dec
push
roll
and
and
adc
jb,pt
test
mov
mov
data16
mov
and
test
std
and
in
adc
sub
adc
ret
jno
jbe
and
jecxz
mov
mov
inc
aam
mov
ss
out
movsl
xchg
inc
loop
xchg
aam
jae
push
xchg
cli
inc
jg
fcompl
jecxz
loop
xor
inc
idiv
sets
imul
adc
scas
add
dec
daa
xchg
cmp
adc
pop
cmpsl
xchg
out
mov
sub
in
mov
stos
mov
sub
test
lea
enter
push
sub
sbb
scas
jecxz
orl
nopl
ret
fcmovbe
sub
arpl
and
in
insl
aas
xor
mov
arpl
jg
repz
in
mov
sbb
pushf
pop
or
xchg
sbb
out
scas
mov
push
mov
or
cld
inc
scas
repz
ror
pop
jmp
add
int3
arpl
cmp
std
xor
orl
push
cs
push
jl
lock
push
mov
and
lea
xchg
xor
fs
jg
inc
insl
mov
enter
inc
mov
test
iret
aaa
stos
lods
ja
adc
shlb
div
cmpsl
or
jo
pop
mov
hlt
and
pop
sbb
push
adc
push
jo
dec
or
sub
inc
sbb
int
dec
ret
xor
das
adc
or
test
adc
adc
xchg
addb
jnp
push
push
xchg
add
rorl
imul
mov
xchg
add
adc
shrl
and
imul
and
lods
daa
stos
adc
lahf
dec
push
mov
ljmp
clc
mov
cmpsl
fbstp
or
push
xor
in
mov
xchg
in
in
rcll
jp
je
xchg
mov
adc
adc
pop
ds
adc
movsb
or
mov
push
lea
mov
pusha
lret
and
push
mov
mov
mov
int3
mov
xchg
adc
popf
push
jge
mov
lods
dec
fwait
ror
cmp
mov
out
jmp
ja
sbb
inc
clc
je
fadds
in
movsl
aas
mov
ss
shlb
rclb
or
out
arpl
mov
arpl
jge
gs
sub
inc
xor
push
or
jecxz
or
aaa
test
adc
pop
ds
inc
sub
clc
jae
in
cli
push
ror
shlb
loopne
addb
shlb
test
repz
rorb
daa
sbbl
or
imul
imul
test
iret
fwait
inc
inc
adc
sub
out
mov
mov
xchg
inc
mov
insb
rol
insb
hlt
out
mov
out
fs
loope
dec
dec
cmp
pusha
jae
bound
pop
lret
lea
imul
test
mov
and
ret
inc
shlb
add
les
dec
xchg
cmp
insb
decl
ja
stos
cmp
xchg
push
xlat
fidivrs
pop
mov
xchg
ficompl
inc
xchg
push
les
mov
cmp
lea
loope
repnz
push
xor
in
mov
pop
mov
push
or
roll
mov
leave
and
add
cmpb
pop
dec
incb
adc
add
jecxz
or
das
jo
pop
push
mov
xchg
or
popa
add
or
stos
fwait
push
push
cli
xchg
fcmove
dec
cltd
addr16
in
pop
xor
mov
mov
fs
xor
stos
pusha
dec
xor
shr
cmpsb
jge
out
push
int3
daa
add
lret
jo
shll
mov
mov
lcall
adc
adc
cs
or
out
bnd
sub
and
leave
mov
mov
mov
jo
pop
dec
pop
cmp
movsb
mov
xorl
or
shll
cmpsb
or
mov
sbbl
or
lods
push
cwtl
jbe
scas
jge
cmp
fsubrl
insb
cmpsb
mov
sub
sbb
loop
or
iret
xor
inc
dec
mov
bound
lcall
sub
addb
aad
push
aam
xchg
lock
push
je
pop
cld
ret
inc
mov
cmpsb
outsl
leave
inc
fdivl
mov
mov
adc
adc
sbb
xchg
mov
fnstsw
jne
lret
jno
cmp
sahf
rclb
mov
pop
std
cmp
shr
test
mov
push
pushf
xchg
xchg
ja
ja
jns
sub
add
sbb
xchg
sub
and
mov
sarl
inc
push
aaa
push
jb
in
gs
in
sbb
ret
or
ret
sub
sub
aas
mov
inc
insl
sbb
mov
dec
shlb
mov
and
lahf
movsl
mulb
ret
sbb
lds
xchg
mov
fildll
mov
or
stos
xor
add
jl
jl
les
imul
ret
ret
ljmp
xchg
adc
jg
ljmp
sub
mov
cltd
into
sbb
mov
mov
cmp
inc
cs
sub
cmp
test
jmp
clc
mov
mov
lods
in
rorb
mov
nop
leave
or
sbb
out
push
xor
xchg
addl
adc
test
ja
hlt
fiadds
cwtl
push
jb
pop
inc
lcall
dec
push
mov
jae
and
out
xchg
cltd
lds
add
negl
mov
mov
inc
in
out
push
jne
rcr
roll
inc
daa
bound
xchg
mov
xor
xchg
xchg
push
adc
jg
cmp
mov
xlat
jnp
fsubrl
adc
loop
cmpsl
nop
pop
scas
into
mov
adc
insl
dec
push
mov
mov
rcrb
push
aas
test
nop
jp
out
pop
movsl
out
ret
test
cmp
lahf
sub
rorb
mov
mov
movsl
aam
adc
adc
jbe
jnp
fs
push
inc
fsubr
insl
pop
leave
jecxz
xchg
add
jo
das
inc
sbb
pop
lahf
fsubr
cmp
or
xor
ds
data16
loop
shlb
jnp
mov
cwtl
mov
repnz
lret
push
js
sbb
sub
and
out
pop
cli
shrb
iret
cmp
scas
xchg
add
fldenv
adc
das
mov
mov
sub
outsl
xchg
clc
adc
nop
shrb
pop
out
fiadds
shl
or
nop
call
mov
lcall
pop
and
lret
xor
sbb
mov
sahf
adc
and
push
or
push
je
aam
jmp
adc
aas
rolb
outsl
jecxz
and
pop
cmp
xor
xor
push
lods
hlt
das
jl
jbe
adc
data16
xchg
sub
lahf
cmp
mov
shr
mov
cmp
pop
movsl
rorb
int3
push
mov
jecxz
sbb
add
xor
add
adc
fiaddl
sbb
test
sub
imul
sahf
cmpsb
sbb
call
out
movsb
shl
adc
mov
jl
cli
jl
pminub
pop
sbb
stc
das
movsb
xchg
xchg
push
clc
jb
out
cmpsb
push
stc
pop
mov
cld
in
mov
aam
iret
pop
mov
mov
adc
push
imulb
dec
sbb
test
int3
aaa
xchg
aaa
jbe
push
mov
push
lahf
inc
lds
sbb
clc
jl
jnp
in
push
leave
inc
jbe
aaa
andl
or
sub
lock
test
cmpsl
or
or
ljmp
call
fadd
lods
mov
mov
imul
jp
insb
cmpsb
sar
cs
and
inc
sti
idiv
fdivs
ficompl
xchg
push
icebp
gs
sbb
dec
jecxz
add
xchg
dec
xchg
mov
xor
dec
and
outsl
sbb
dec
je
mov
sub
cmpsl
sbb
sub
add
mov
lock
loopne
and
icebp
push
pop
cmpsl
ja
and
jl
outsl
sub
mov
and
jle
mov
mov
push
sahf
mov
sub
and
fidivs
mov
repnz
add
loope
rorl
xchg
xchg
mov
daa
pop
or
vmovaps
pop
mov
xor
lret
inc
xchg
int3
loop
push
jb
das
gs
jnp
dec
icebp
and
pop
xchg
loopne
sub
push
and
cs
mov
repz
in
inc
shlb
movsl
ss
shll
jo
sbb
out
xor
sub
mov
and
dec
cmp
xor
out
nop
xorb
imul
scas
push
faddl
or
out
hlt
iret
xchg
sbb
sub
cli
push
enter
xchg
shl
mov
push
fs
clc
out
push
out
into
in
jp
mov
adc
aam
ds
jno
es
pop
cmp
lahf
and
cmp
and
in
stos
cmpsl
adc
add
in
mov
js
adc
iret
jle
cmp
lock
xchg
lcall
xor
lock
ss
mov
push
pop
fldenv
test
jg
mov
inc
xchg
fistpll
dec
aaa
mov
jb
mov
call
xchg
outsb
sbb
inc
stos
nop
arpl
or
jmp
adc
adc
sbb
mov
mov
sahf
sahf
jp
setp
fistpl
xlat
and
fisubrs
movl
dec
jecxz
cmp
dec
pop
inc
sbb
les
sbb
outsl
lret
xchg
mov
test
pop
xor
icebp
loopne
or
jnp
xchg
push
jbe
hlt
pop
sbb
or
mov
daa
addr16
nop
adc
cmp
pop
mov
scas
mov
jmp
push
mov
repz
pusha
aas
jg
pop
push
mov
lahf
loopne
ja
xor
sub
cmpsl
mov
sub
mov
pushf
dec
cs
mov
out
jmp
ja
aaa
mov
cmp
xor
addb
adc
mov
cmpsb
push
xlat
mov
cltd
popf
jns
out
push
push
ss
aad
inc
aas
or
mov
test
fmull
inc
jne
fiadds
fidivrs
and
js
mov
loopne
sub
shrl
mov
mov
pop
test
inc
add
jno
and
inc
test
jnp
cs
int
rclb
mov
or
pop
jmp
stos
pushf
out
and
not
mov
dec
dec
mov
xor
jl
bound
lfs
sub
clc
jmp
cmp
repnz
sub
pop
push
pop
pop
nop
fildl
sub
int
xchg
daa
sub
pop
xor
jl
lret
in
and
xchg
in
popf
push
aas
jbe
test
inc
xor
push
cmp
or
scas
popf
push
fldt
jbe
pop
clc
test
sahf
adc
loope
les
aad
sub
loop
ret
cmp
sarl
jge
ffreep
fwait
lods
sub
jl
dec
es
ret
pop
mov
or
lods
cmp
cltd
push
je
in
xor
push
lahf
mov
add
inc
jl
jbe
push
bound
mov
pusha
repnz
lods
jne
dec
loopne
out
mov
in
fiadds
pop
js
add
es
stc
xchg
ret
adc
mov
lcall
shl
fisttps
or
mov
pushf
subl
cmp
and
out
adc
dec
gs
dec
or
icebp
sbb
and
gs
pop
mov
push
sarb
andb
adc
loope
push
sarl
jns
mov
pop
push
add
and
mov
or
hlt
xchg
into
or
or
xchg
xchg
xor
sbb
pop
mov
sub
iret
dec
fcomi
or
xchg
das
ss
mov
adcb
cmc
xor
ljmp
fldt
or
xchg
dec
inc
mov
es
les
jns
inc
and
imul
or
and
push
out
mov
cmpsl
add
arpl
jne
jns
lods
push
cli
in
mov
aad
fwait
and
cwtl
lock
adc
sub
rorl
ljmp
ljmp
out
adc
inc
pop
mov
adc
dec
ficoms
je
rclb
push
pop
xchg
daa
xor
rcrb
xorl
mov
ficompl
ljmp
cmp
xchg
adc
int3
loop
pop
int
ror
les
and
jb
sbb
dec
jecxz
sahf
and
pop
adc
lahf
sahf
mov
arpl
add
iret
lea
lea
pop
push
fs
ja
push
xor
out
jl
cmp
int
pop
push
ret
bound
push
ja
iret
aam
fmull
cmpb
into
push
mov
sbb
arpl
and
jge
mov
add
test
or
scas
btr
push
pop
les
in
icebp
mov
mov
sbb
sarb
jb
into
mov
orl
testb
test
orl
jb
popf
or
adc
clc
lea
xor
pusha
inc
fsts
jae
je
mov
add
out
cltd
insb
ja
leave
sub
inc
fiadds
in
sub
cmc
lahf
mov
std
dec
popf
jg
or
cmc
inc
dec
push
adc
xchg
enter
adc
lahf
shl
test
stos
arpl
push
divb
cli
add
loopne
sub
and
pushl
in
shl
inc
or
lods
out
out
fildll
lea
fmulp
mov
mov
mov
cmp
mov
ret
xlat
push
pop
adc
xor
push
das
pushf
cld
movsb
icebp
in
and
fisubrl
sub
adc
pop
shrb
std
shrl
sbb
mov
cmp
and
jno
xchg
push
adc
ljmp
pop
out
ljmp
scas
pop
fwait
ret
rorl
add
jmp
scas
and
movsb
cmpsb
sub
pop
adc
mov
js
popf
cmp
in
inc
gs
fsubs
inc
adc
add
sub
lods
test
sub
hlt
in
sbb
insl
mov
adcl
jae
cld
sbb
mov
mov
mov
sar
ds
jmp
bound
es
sbb
mov
inc
repz
insl
and
adc
dec
sub
cld
inc
dec
hlt
mov
loopne
cld
xchg
ret
negb
cmp
in
ja
js
jns
insl
fstps
jmp
cmp
push
in
dec
pop
add
pop
cmp
addr16
xchg
rorl
mov
pop
cs
adc
je
fildll
pushl
test
push
hlt
jmp
stc
scas
sub
xchg
adc
cmpsb
jne
dec
movsl
gs
xchg
or
pushf
mov
int3
mov
xchg
jge
cmc
mov
jns
mov
lret
push
adc
data16
ret
repnz
call
frstor
shrb
mov
das
cli
negl
pop
mov
xchg
fwait
loope
cmovae
and
jb
enter
sbb
stc
lcall
hlt
repnz
les
scas
jecxz
xchg
int
dec
daa
ret
mov
inc
icebp
push
push
lods
mov
int3
or
dec
push
mov
jae
and
mov
test
push
mov
loope
push
cmpsb
ljmp
in
mov
xchg
xor
cltd
daa
jge
jno
or
movsb
ja
add
popa
or
mov
push
ffree
dec
out
or
fsubr
pushf
in
in
lcall
cmpb
mov
fwait
dec
pop
outsl
icebp
test
addr16
add
jle
sub
insb
sbb
dec
mov
js
stc
inc
mov
iret
sub
mov
xor
test
add
add
mov
jg
cmp
out
mov
adc
imul
movsb
mov
inc
test
and
mov
add
sti
dec
jmp
fstl
dec
lock
in
and
inc
adc
ja
push
sbb
mov
adc
mov
stc
xor
push
aas
enter
mov
dec
jne
or
gs
jnp
ljmp
mul
xchg
rcrb
fdivl
adc
or
hlt
xchg
sub
sahf
add
cmp
push
js
cmp
testb
dec
std
pop
imul
mov
fstl
stos
add
sub
push
pop
mov
jg
add
xor
cmpsl
push
imul
aaa
imul
ja
sarl
js
inc
mov
popa
or
pop
popa
outsl
out
jno
xchg
xor
mov
cmpsl
inc
fwait
pusha
js
mov
mov
fidivrs
or
shll
xchg
lret
cs
cmpsb
imulb
add
dec
jmp
jle
push
push
push
sbb
cmp
cld
mov
cmp
mov
test
lea
mov
outsl
adc
mov
jnp
movsb
pop
jnp
inc
mov
xor
lods
scas
cwtl
call
aaa
sar
ret
and
mov
mov
xchg
jbe
jb
shrb
push
je
divl
sbb
xchg
push
repnz
xchg
xor
mov
je
divl
loopne
ss
cmp
mov
push
cld
cmp
mov
dec
cmp
lcall
xor
pop
mov
mov
aas
xor
xor
sbb
adc
movsb
add
out
movsb
enter
ret
faddl
xor
icebp
icebp
mov
push
das
dec
pop
inc
cmc
loop
sub
fmull
sti
sub
ljmp
xchg
mov
push
clc
fdivs
mov
or
mov
mov
jo
mov
cmp
and
aad
mov
popf
mov
nop
jmp
sbb
lods
sbb
adc
leave
fdiv
sub
sarl
lret
lods
in
push
call
fistps
jbe
lret
and
push
push
pop
sbb
and
sbb
mov
adc
inc
fwait
jecxz
stos
sar
and
mov
mov
popf
mov
gs
pop
outsl
in
lret
pop
int
outsl
scas
add
push
iret
data16
inc
ds
sub
inc
movl
das
push
mov
cmp
stc
jo
mov
enter
cld
cmp
adcb
xor
outsl
fmull
adc
cmpsb
divl
nopl
cwtl
int3
das
outsl
cmp
add
sahf
jns
xor
sub
or
push
mov
daa
mov
mov
stc
aam
psubsw
inc
or
popa
lret
icebp
mov
mov
outsl
push
icebp
xchg
data16
adc
leave
int3
test
in
gs
cmp
fisubs
dec
adc
and
imul
pop
imul
das
sbb
test
cmpsl
ss
inc
jbe
push
lods
scas
fwait
cmpsl
push
adc
dec
jno
cmpb
jno
cld
mov
testb
add
addr16
mov
jno
push
jle
fwait
repz
xchg
lds
pop
mov
out
cmp
xor
jecxz
shrl
inc
inc
movsl
inc
scas
mov
pushf
or
jp
faddl
push
fisubl
out
mov
cmp
iret
cs
lods
shrb
lods
and
xlat
dec
and
jge
add
push
pop
jnp
loopne
mov
notl
xchg
fbstp
cld
hlt
shrb
test
test
inc
push
xchg
sub
pop
lea
fcmovne
cmp
mov
sub
cli
faddl
sub
and
inc
fldl
or
cmp
dec
and
mov
aaa
scas
and
xor
adc
pusha
mov
push
mov
xchg
mov
ficomps
jecxz
inc
add
cmc
mov
adc
push
lcall
dec
and
enter
gs
sti
adc
and
cmp
push
pusha
out
jnp
mov
jo
jecxz
lahf
ja
ret
sbb
dec
adc
pop
lahf
mov
cltd
jae
int3
mov
gs
fcmovnu
ljmp
out
mov
or
stc
out
clc
mov
scas
jle
sbb
cli
sarb
inc
lea
sub
aas
jns
fcmovnbe
out
lods
jle
cmpsl
or
add
and
popf
imul
and
mov
xor
lahf
cmp
or
xor
mov
shl
push
adc
repz
jge
cmp
repz
dec
stc
sub
clc
loop
xchg
or
std
lahf
cmp
jae
jbe
test
inc
lea
outsb
ds
aaa
cmp
lock
mov
mov
je
mov
aas
cmpsb
nop
nop
push
imul
test
or
pop
mov
sahf
into
ljmp
xchg
mov
xchg
mov
imul
jns
jl
cmp
dec
sbb
mov
push
aas
push
and
mov
fimuls
cmp
call
inc
add
inc
fistpl
sub
jge
jge
lret
push
int
jnp
inc
add
push
or
fistpll
push
jp
pushf
and
out
jle
pop
hlt
inc
jge
sbb
sbb
lea
cmp
aaa
gs
cltd
cmpsl
mov
loop
or
popf
outsb
dec
mov
shll
mull
add
mov
cwtl
cld
test
lods
fimuls
iret
xchg
jp
lds
add
and
cmc
mov
xor
es
pop
fs
mov
out
test
fcmovu
bound
inc
enter
cwtl
movsl
jmp
sarl
mov
sub
or
dec
test
fbld
fsubrl
jp
mov
add
stc
jns
rolb
std
sbb
cli
es
mov
inc
test
push
mov
negl
aad
add
mov
xchg
push
mov
jl
lcall
and
mov
pushf
push
jo
push
ror
test
dec
ljmp
xor
aam
rcll
inc
cmp
cli
push
daa
jno
lods
popf
mov
stos
push
stos
arpl
lock
les
les
lahf
or
inc
inc
hlt
push
adc
lret
xchg
push
xchg
out
arpl
inc
xchg
jmp
mov
sbb
push
test
jnp
jg
cwtl
xchg
mov
test
bound
cmp
push
cmp
roll
mov
mov
ljmp
sub
imul
add
pop
loope
ficomps
jp
or
and
jmp
mov
fistpll
sub
pop
inc
in
sub
jo
sub
jne
cmp
addr16
cmp
jnp
cmp
add
xchg
cmp
add
out
push
inc
js
mov
aaa
mov
repnz
add
dec
sbb
adc
test
xchg
aas
test
xchg
mov
add
sbb
or
jl
mov
sub
out
jg
and
ror
adc
and
xchg
adc
jl
aad
in
mov
imul
add
mov
dec
push
or
xor
aam
jne
or
aaa
xchg
pop
adc
sub
mov
pop
stos
aad
fldl
sbb
mov
adc
sub
cmp
inc
leave
xor
aam
jo
nop
imull
rclb
addr16
jge
cwtl
int3
inc
fs
jge
lock
fidivrs
push
je
fs
add
daa
insb
inc
lret
shl
jecxz
lret
jp
cmp
inc
add
fidivrl
jno
loope
scas
loop
in
mov
outsl
stos
lods
xor
stos
dec
aas
ss
out
cwtl
sub
inc
bound
icebp
pop
jecxz
push
push
adc
icebp
pop
jmp
roll
cmpsl
rol
mov
fwait
daa
and
shl
jno
xchg
adc
test
mov
fnstsw
mov
addl
pop
movsl
test
jg
arpl
push
lock
rol
and
les
ljmp
fstl
jbe
loope
out
subl
ds
sub
rol
enter
push
cld
mov
scas
ret
fsubs
mov
out
outsl
mov
dec
out
pusha
sub
push
jge
test
aaa
cwtl
mov
fldl
out
xchg
out
push
inc
popf
sub
nop
or
mov
popa
test
mov
sub
mov
setns
sub
je
jno
push
xor
inc
pusha
or
pop
sub
add
cmp
js
cmp
xor
jmp
dec
and
inc
mov
mov
mov
pushf
xchg
lea
push
ret
pop
mov
fadds
xchg
add
inc
shlb
repnz
rorb
fwait
mov
push
inc
gs
test
pmullw
je
popf
jo
jle
int3
xchg
or
sbb
adc
mov
or
cs
pop
outsl
fstpt
test
sahf
dec
aam
sub
int
movsb
push
fisttpll
ss
in
test
loope
push
cmp
in
nop
push
ds
dec
cwtl
pop
test
mov
aad
js
aad
call
xchg
pop
ja
repz
ss
or
push
adc
sub
fnstsw
pop
mov
adc
adc
push
push
push
sahf
test
jle
fisttpl
jae
cmp
cli
lahf
adc
push
loope
jno
sbb
fcomip
addl
jb
inc
or
add
or
add
in
repz
xchg
jecxz
inc
imul
inc
popf
dec
and
mov
mov
xor
mov
imul
jns
and
stos
repz
mov
mov
pop
add
inc
into
xchg
sub
sub
testl
int3
cld
pop
int3
jno
sub
sbb
es
push
enter
xchg
shll
mov
cmp
dec
test
adc
sbb
in
cmp
outsb
cmp
adc
mov
lret
xchg
mov
xchg
lret
sarl
scas
jno
sbb
cltd
or
data16
dec
aas
stos
mov
and
outsl
sub
mov
int3
cmc
mov
test
lea
cmc
xor
push
sbb
nop
fmulp
mov
sub
mov
out
xchg
shr
test
xor
mov
ficomps
jecxz
xchg
rolb
and
xchg
jecxz
jmp
sub
mov
inc
js
fildll
loope
loope
mull
add
daa
mov
sub
test
pop
pop
push
jne
insl
adc
push
jmp
shrl
repz
js
int
jmp
js
out
rcrl
or
ret
mov
xchg
adc
loop
adc
insl
xchg
push
adc
bound
jb
inc
cmpsb
loop
sti
xchg
jbe
insl
xchg
test
shl
pop
mov
push
in
push
xchg
in
insb
fcoml
stos
inc
jns
mov
flds
int3
aam
adc
mov
bnd
mov
jae
adc
mov
lods
das
cs
xor
inc
mov
shlb
ja
loop
xor
jge
jne
mov
dec
testb
sub
jge
idivl
icebp
xchg
scas
adc
jmp
jp
andb
cmpsb
repnz
xchg
xor
or
pop
cmp
or
test
xor
fwait
mov
push
jbe
sub
lcall
in
lret
call
fidivrl
push
mov
stc
xor
hlt
ret
jl
add
addr16
sub
pushl
xchg
xchg
fsubl
es
xor
push
sbb
jmp
xchg
xor
jl
xor
in
mov
aas
xor
sbb
test
pop
std
inc
popa
out
addr16
xor
out
cmpsb
and
ljmp
xor
adc
pop
cmpsb
xchg
pop
lea
stos
xor
inc
cmp
mov
mov
pop
sbb
rcll
jno
fldenv
mov
inc
cmp
cmp
mov
sahf
push
and
and
scas
adc
jo
pop
scas
sub
addr16
xor
add
adc
and
sub
or
xor
popa
and
scas
sbb
push
cli
mov
orb
jb
mov
xchg
daa
rcr
cld
push
pop
popf
out
lock
loopne
out
sub
popa
push
sti
icebp
mov
pop
rolb
xchg
test
and
xor
clc
dec
enter
das
add
add
mov
jl
pop
jb
or
dec
aas
or
jbe
aad
ret
lret
mov
add
stos
jecxz
jmp
ja
or
aad
jnp
adc
repnz
push
in
test
pop
push
push
mov
in
jl
mov
sahf
and
push
in
pop
gs
add
push
movsb
and
sti
lret
int3
cmp
jb
adc
adc
jns
cwtl
ss
cli
or
cmp
xchg
xchg
lods
repnz
push
fdivr
mov
xchg
or
xlat
xor
arpl
hlt
add
pop
inc
mov
sbb
push
jno
je
mov
arpl
scas
out
outsl
icebp
adc
addr16
adc
nop
xchg
leave
mov
scas
jmp
movsb
mov
pop
or
xchg
mov
fcomi
jne
mov
or
adc
sub
sbb
repnz
mov
add
mov
sub
jge
jb
add
lods
shrb
or
mov
int3
dec
pop
xchg
fildll
sub
inc
or
imul
xorb
les
dec
mov
loope
dec
mov
stos
stos
adcb
xor
jg
mov
xchg
push
dec
or
test
outsl
test
mov
xchg
imul
inc
jge
cmp
pop
decb
xchg
sbbl
cs
xchg
jle
cmp
cmp
pandn
sub
inc
lods
fcompl
sbb
dec
jbe
pop
pop
ljmp
xchg
push
jae
and
sub
ja
sub
dec
nop
in
push
ficomps
push
push
sub
sbb
cli
jnp
call
shll
push
mov
mov
ds
mov
fldt
mov
loop
push
aad
add
xorl
es
jne
and
adc
cltd
loope
xlat
jnp
daa
andl
aas
mov
xor
in
adc
mov
xorb
adc
mov
lods
sahf
in
add
mov
ljmp
ss
jb
add
xor
pop
lcall
imul
leave
ss
mov
inc
dec
lret
fsubrp
lods
xor
fidivl
cltd
scas
add
ss
add
xor
insl
pop
rolb
push
cwtl
mov
add
pop
or
cmp
lea
inc
cmp
mov
pusha
sub
lret
stos
aaa
or
cmc
imul
and
popf
jns
sub
or
imul
pop
mov
push
cs
dec
adc
push
xor
push
or
fwait
imul
flds
xor
sbb
mov
out
push
test
scas
adc
add
ljmp
fstps
in
shlb
push
xchg
mov
pop
push
test
dec
aam
pop
lock
stc
dec
sarl
mov
mov
dec
test
jne
push
or
adc
mov
gs
gs
adc
push
dec
push
cmp
cmpsb
cli
xor
stos
sub
ret
add
push
dec
push
fmull
cmpsl
dec
sub
jbe
adc
inc
add
fistpl
lret
pop
std
push
bound
rclb
add
inc
fs
inc
add
fwait
mov
scas
ljmp
push
sbb
les
dec
cltd
fmuls
mov
enter
andl
xchg
mov
cmpsb
int3
adc
adc
pop
cs
imul
insl
inc
pop
add
jecxz
fadds
and
das
mov
adc
jns
das
jb
mov
adc
jp
stos
mov
test
jae
outsl
iret
push
sub
cli
inc
ds
inc
data16
inc
cmc
jg
push
cmp
adcl
int3
xchg
loope
mov
sbb
adc
dec
cmp
add
es
mov
lods
jno
jnp
bswap
mov
mov
lret
cld
add
in
loop
cwtl
sbb
pop
sbb
xor
cmp
or
daa
mov
inc
fisttpl
pop
fdivl
inc
or
dec
push
adc
sub
ret
add
out
or
mov
dec
nop
mov
xorb
insl
inc
inc
lods
inc
xor
or
mov
in
loopne
shlb
icebp
xlat
push
xlat
mov
stc
xor
out
ss
ljmp
inc
jo
mov
sub
adc
sbb
les
hlt
mov
cld
insl
and
in
lret
xchg
jno
sub
cwtl
fildl
negl
pop
pop
sbb
mov
xor
adcl
fs
adc
pusha
shll
in
jnp
stos
ret
jae
add
insb
jnp
hlt
or
sbb
addr16
inc
dec
inc
int3
stos
or
bound
mov
daa
in
stos
push
dec
pop
mov
sti
mov
dec
mov
lahf
repnz
stc
xlat
push
das
dec
sbb
int3
mov
movsb
jecxz
sub
fisubrs
jae
fidivrl
sbb
daa
out
mov
add
or
xor
sub
jbe
es
cmp
dec
rclb
xor
mov
popf
js
cmp
mov
es
outsl
pop
int
inc
clc
xor
xor
adc
lods
lahf
sbb
push
push
outsb
and
add
sub
jns
dec
mov
clc
push
into
fimuls
arpl
loopne
shlb
pusha
xchg
jo
sti
enter
negb
sbb
dec
mov
xchg
cld
push
jo
pop
xor
inc
pop
adc
cltd
jg
mov
jnp
fdivr
mov
jae
xchg
scas
xor
popa
sbb
dec
fdivl
js
and
lret
cmpsb
pop
dec
mov
gs
jp
cltd
aam
add
sbb
sbbl
lods
imul
add
in
jmp
mov
sbb
jl
imul
stc
in
aam
adc
ret
sbb
push
insl
mov
ss
add
add
fstpt
test
fisttpll
jp
cmp
cltd
dec
dec
gs
adc
push
movsb
imull
cmp
mov
jp
in
jecxz
mov
mov
cmp
mov
xor
idivb
cltd
sub
pop
xor
sti
movsb
inc
nop
inc
pop
mov
sbb
sarb
pop
ss
and
dec
push
cmp
mov
lock
mov
ss
push
jecxz
pop
mov
dec
push
inc
inc
fdivr
stc
and
cmc
sarb
cmpsb
inc
push
ljmp
dec
or
stos
idivl
leave
pop
test
mov
inc
dec
xor
xor
mov
fcom
test
loopne
pushf
pushf
fisttpll
fadds
xchg
test
xor
movsl
ret
pusha
lret
mov
cwtl
out
push
mov
mov
xor
xlat
sbb
mov
aad
addb
clc
repz
or
adc
imul
call
iret
push
pop
xlat
out
adc
pop
sti
push
or
sub
cmpsb
aad
aad
repnz
mov
mov
insl
faddl
jo
cmp
add
xor
inc
int
int3
hlt
cltd
in
ja
push
lret
scas
and
add
add
jo
leave
push
es
push
xor
popf
inc
adc
and
mov
sbb
push
es
pop
aam
shr
lods
ret
cmp
lock
or
clc
cmp
xchg
sahf
add
sub
add
mov
add
ret
push
fildll
addr16
xlat
mov
adc
lods
clc
cmpsb
scas
cmp
imul
icebp
addr16
dec
ret
push
add
cmp
cmp
mov
add
nop
mov
sub
push
aaa
mov
enter
inc
cwtl
popf
sahf
xor
or
imul
inc
adc
sbb
dec
ficomps
xchg
push
enter
mov
das
jp
fnstcw
fnstsw
out
lahf
imul
ss
cmp
mov
int3
jnp
test
leave
enter
adcb
inc
pop
imul
mov
out
push
push
xchg
je
xor
aad
cmp
out
je
xchg
fistps
test
jg
out
leave
jbe
leave
inc
cmpsl
mov
jp
lods
insb
pop
mov
add
mov
add
mov
adc
push
push
sub
insb
mov
aam
std
add
xchg
dec
cmpsb
pop
rol
pop
enter
mov
sbb
rcrl
push
adc
mov
xor
cmp
pop
jecxz
lods
stc
jp
mov
movsl
jno
mov
xchg
sub
clc
cs
pop
fildll
ficoml
ljmp
mov
push
xor
push
pop
dec
push
sub
cmc
and
rcrl
dec
and
push
sub
sub
cmp
lea
pusha
pop
lea
dec
xchg
icebp
movsl
pop
insl
ss
cmpb
sub
imul
sbb
mov
ret
jno
xor
leave
orl
push
mov
inc
sbb
pop
aaa
mov
setno
mov
loope
mov
xchg
push
out
sub
cmp
outsl
xor
pop
inc
cltd
mov
inc
sti
leave
scas
sbb
lea
and
mov
and
dec
lds
dec
les
mov
iret
shl
int3
push
mov
leave
sub
incl
mov
cmp
or
dec
ds
repnz
incl
xor
jmp
mov
movsb
dec
cmp
mulb
and
xchg
in
mov
dec
mov
mov
neg
dec
cmp
cmp
jno
scas
push
ja
push
add
adc
mov
pop
lds
pop
and
jb
mov
xlat
mov
ljmp
push
fstl
fcmovnb
outsl
loopne
ss
stos
push
in
cli
inc
stos
call
mov
xor
jecxz,pn
mov
add
imul
pop
cmp
lock
in
cwtl
add
inc
mov
mov
inc
les
xchg
and
inc
xchg
test
jle
cmp
pusha
xor
xchg
in
add
sbb
xchg
mov
cmpsl
sbb
push
mov
imul
adc
sub
mov
fbstp
popf
test
lcall
popa
sub
aaa
add
xor
out
ds
mov
cmc
xlat
mov
xchg
ds
faddp
jmp
xchg
cmpsb
sub
sub
test
scas
mov
mov
mov
mov
add
cmpl
bound
and
mov
dec
and
sbb
rcrb
rcrl
sbb
in
pop
and
iret
push
add
push
sub
aaa
lret
cwtl
jo
scas
stos
sub
fistpll
or
cmp
dec
js
int
out
pop
sbb
shrl
push
cmp
movsb
cs
mov
lea
scas
pop
std
dec
push
dec
lcall
addb
inc
lds
xor
ret
imul
stos
or
or
or
lea
in
lret
sub
fsubl
lahf
xchg
mov
xor
lods
push
call
dec
or
pop
pop
shlb
sub
pop
fmull
push
sub
inc
and
call
cli
loopne
cmp
nop
adc
in
pop
out
or
push
fistl
cmpsl
add
adc
push
xchg
out
popa
xchg
dec
fcoms
inc
xor
xchg
sbb
mov
adc
inc
inc
sbb
rol
sbb
xor
imul
adc
add
mov
xorb
sub
sti
roll
sbb
jmp
adc
inc
lods
cmp
xlat
push
int3
mov
jecxz
pop
sbb
in
mov
push
jle
aam
jo
cmp
jns
push
negl
scas
shl
xchg
jmp
pop
xor
in
add
or
cs
mov
add
pop
je
push
adc
cmp
test
cmp
inc
add
push
inc
dec
pop
fistl
mov
mov
out
xchg
push
cli
nop
divb
leave
adc
push
jecxz
pop
ret
jl
pushf
cmp
nop
push
or
add
movsl
xlat
stos
adc
cmpsb
and
xchg
cmp
dec
inc
enter
dec
xor
push
aad
dec
hlt
mov
sbbl
sub
cwtl
lcall
jecxz
pop
dec
add
les
mov
mov
and
les
xor
add
cwtl
jg
mov
jb
daa
loopne
adc
loop
in
out
shrl
push
cmpsl
lret
add
pop
push
sub
push
pop
or
loopne
xchg
orb
adc
dec
adc
mov
enter
add
mov
je
fadds
sbb
aaa
mov
sbb
jns
int
sub
mov
addb
inc
cs
xchg
push
adc
and
and
and
dec
jne
int3
out
leave
sbb
or
lock
daa
jle
stos
jmp
push
or
mov
cmpl
push
ret
jno
lea
mov
and
add
daa
sub
iret
or
in
push
xchg
icebp
addr16
pop
arpl
push
daa
repnz
fcmove
and
aas
enter
jno
lods
mov
popf
cmp
cmp
icebp
repnz
or
in
in
push
push
clc
push
push
mov
xchg
xlat
pop
push
in
jbe
mov
push
push
and
iret
or
xor
out
mull
outsl
and
out
arpl
mov
lret
inc
adc
ss
sbb
aaa
mov
dec
lret
xchg
mov
das
mov
roll
jno
cld
das
sub
imul
aam
mov
push
mov
add
leave
fsubrl
mov
aam
pop
mov
rolb
iret
push
xchg
popf
dec
mov
testb
fcomps
mov
std
push
sbb
push
sahf
sbb
dec
jle
dec
xchg
clc
les
test
dec
test
xchg
lret
push
xchg
sub
int3
jmp
dec
push
scas
or
rclb
pop
mov
iret
cld
fidivrs
xchg
or
fistpll
jle
or
es
push
sub
mulb
pop
pop
xchg
stos
les
cmc
and
sti
or
jne
in
adc
scas
leave
dec
jae
scas
cmp
int
add
in
xlat
lret
inc
xchg
adc
out
jge
jo
add
push
pop
lahf
adc
fiadds
lahf
inc
and
pop
push
lret
mov
lods
in
pop
mov
arpl
mov
je
sbb
mov
add
roll
lret
sbb
mov
pop
cld
into
mov
lahf
fstpt
jbe
sahf
stos
xor
leave
loopne
out
dec
ljmp
outsb
xor
cs
mov
test
push
sbb
movsl
dec
scas
outsl
mov
sti
pop
or
sbb
lods
sarl
fcompl
aam
cmp
test
mov
incl
sub
es
cld
fdiv
fbstp
pusha
jge
sahf
pop
cmp
and
lret
pop
jbe
loopne
sub
gs
jno
negl
dec
lcall
jo
xor
xchg
or
loopne
sti
mov
mov
dec
out
imul
jb,pn
mov
sub
dec
out
push
xor
cmp
ss
add
ret
xor
xor
test
pmulhw
cli
pop
lods
movl
jp
test
sub
neg
lods
cmpsl
fildll
push
push
imul
sub
pushf
and
ret
jb
lock
rorb
iret
dec
jae
sub
jl
rcr
jnp
cmp
pop
dec
outsl
sbb
ja
xlat
icebp
icebp
inc
mov
pop
cwtl
mov
out
pushf
and
add
call
pusha
out
orl
in
int
jo
sub
jnp
adc
sti
or
xor
fwait
in
out
ret
add
adc
mov
jns
push
adc
dec
jno
data16
scas
lcall
jno
xor
add
jecxz
clc
pop
jo
sbb
inc
inc
or
dec
jg
fmuls
sti
jne
sub
jmp
daa
mov
push
push
ljmp
lret
sahf
ret
pop
insb
sbb
jb
stc
or
and
mov
inc
orl
pusha
sub
cld
push
jg
pop
add
inc
fisttps
and
fmul
fnstenv
adc
pop
ret
sbb
jmp
and
and
add
shrb
adc
out
mov
cltd
shr
push
lods
adcl
jp
jecxz
or
pusha
push
dec
daa
mov
push
xchg
movsl
sub
add
xchg
fiaddl
jae
push
mov
testb
cmp
xchg
std
test
cmp
fisubl
repnz
sbb
cli
mov
insb
rcll
test
mov
gs
outsb
push
in
dec
cmp
dec
inc
pop
and
sbb
lock
sbb
ret
add
xor
test
lret
xchg
std
shll
xor
out
push
scas
loope
mov
pop
add
mov
daa
push
imul
ds
jle
aaa
test
and
mov
xchg
scas
jge
mov
insl
jne
cmp
aas
and
addr16
das
xor
cmp
je
test
mov
pop
sub
mov
sbbb
fs
xchg
mov
es
fwait
cltd
pop
mov
push
cmpsb
aaa
mov
mov
adc
and
shrb
into
push
push
fcmove
cmp
dec
inc
jp
adc
jp
dec
mov
js
mov
cltd
shlb
xchg
dec
aaa
pop
mov
es
mov
cmp
xchg
add
mov
pusha
js
scas
ds
out
movsb
inc
adc
cmp
bnd
aad
fiadds
jl
ss
addb
insb
jecxz
cwtl
inc
dec
loop
push
into
lret
dec
cs
fistl
movsl
pop
adc
mov
pop
dec
cld
scas
and
pop
push
jg
aad
push
xchg
dec
mov
mov
in
jge
out
sahf
jne
pop
fwait
out
dec
mov
push
and
or
cltd
les
in
dec
cld
int
lcall
inc
enter
cmc
push
add
mov
xor
adc
stos
ret
mov
lods
inc
push
xor
push
and
mov
aas
add
xchg
cltd
and
pushf
cmp
mov
cmc
daa
bound
insl
pop
add
sub
scas
mov
pop
ss
daa
sub
cmp
jns
ret
leave
mov
xor
mov
jecxz
jl
lahf
jge
sbb
sub
push
and
inc
aas
pop
stc
jle
mov
mov
je
push
mov
fisttps
in
call
jnp
xor
sub
cld
lea
or
mov
ljmp
out
fnstsw
mov
mull
mov
sbb
mov
loope
lock
adc
test
and
jae
dec
mov
xor
mov
cmp
inc
daa
add
je
into
sbb
mov
pop
xor
jl
pop
adc
and
dec
lea
push
sarl
mov
jg
mov
xorb
icebp
cli
mov
and
pop
out
or
pushf
outsl
sbb
stos
push
add
and
out
hlt
cs
push
push
pop
xlat
fisubl
out
mov
mov
into
adcl
cmp
ficompl
add
cmp
inc
mov
mov
jp
xor
les
dec
add
insl
xchg
call
lahf
or
xchg
push
loope
addr16
outsb
add
dec
sbb
ss
xchg
into
cli
fdivl
add
xor
push
lods
mov
add
pop
xchg
xchg
push
mov
lret
adc
and
cmp
xchg
shll
xchg
jmp
sti
test
addr16
xorl
xchg
fs
imul
mov
gs
pop
clc
push
pop
sbb
mov
cmpsb
xchg
xor
adc
js
insb
out
xor
add
aad
scas
mov
clc
sbb
lcall
add
cmp
jp
mov
test
jne
insb
pop
ljmp
sub
push
mov
test
ss
enter
pop
sti
add
mov
push
lret
insb
sbb
xor
mov
cmp
lcall
loope
mov
movsl
xchg
insb
push
outsb
incb
inc
xchg
and
das
pop
ret
dec
loop
scas
pushf
jmp
rolb
xor
cmpsb
or
cmc
jp
popf
int3
movsb
je
aaa
enter
or
and
mov
imul
fwait
jmp
jmp
in
cmp
add
mov
repnz
pop
xchg
push
jmp
dec
add
cmp
jl
or
shl
jnp
arpl
aad
jle
jp
je
dec
xchg
icebp
dec
push
jno
nop
or
addl
xchg
mov
sbb
sbb
or
shlb
in
dec
inc
sahf
leave
cmp
jbe
mov
es
mov
push
or
or
or
add
fimuls
inc
or
in
mov
sbb
dec
push
sbb
lahf
test
sbb
mov
and
push
sbb
jmp
sub
stc
and
adc
add
leave
mov
xchg
mov
ret
sub
cwtl
dec
lods
pop
jl
loope
push
int
in
int
mov
cmpsl
shlb
repz
out
sub
jns
and
iret
inc
lahf
sahf
jb
xor
rorl
inc
scas
cmp
jl,pt
out
gs
outsl
jo
jne
sti
xchg
pop
add
scas
cld
iret
mov
mov
push
inc
je
fsubl
xor
in
or
xor
ljmp
pop
sub
push
or
mov
push
sub
dec
mov
mov
scas
arpl
jno
cld
or
mov
enter
sbb
xor
outsb
je
shr
test
push
dec
cmp
mov
and
aaa
pop
dec
xchg
pop
cmp
adc
std
mov
jae
enter
adc
mov
sbb
jno
adc
or
loopne
inc
jne
cltd
cmp
jnp
clc
mov
sbb
ljmp
cld
mov
adcb
pmullw
call
out
sub
push
ret
nop
pusha
dec
or
add
mov
rcrb
pop
insl
xor
inc
and
pop
into
add
into
out
dec
pop
mov
cmp
mov
testl
loop
add
push
dec
nop
pop
mov
test
enter
add
add
dec
or
cmp
jecxz,pt
xor
imul
jno
popa
pop
dec
xor
xchg
lods
stc
mov
fsubl
aam
arpl
jnp
mov
push
mov
shlb
sbb
cmpl
push
mov
int3
cmp
notl
scas
push
mov
jbe
inc
enter
ret
xchg
decb
call
mov
jbe
push
fistps
mov
sahf
aaa
loop
add
mov
adc
bound
mov
inc
pop
mov
mulb
inc
sub
in
clc
push
popa
jb
pop
sbbb
mov
cvtps2pd
mov
xchg
ret
lock
dec
mov
mul
lret
pop
xlat
ret
nop
push
mov
inc
adc
loope
dec
mov
xor
push
ret
mov
movsl
jb
pop
int3
stos
fadds
or
cli
outsb
daa
fistl
jb
cs
hlt
out
bound
push
push
out
lods
imul
iret
xchg
aaa
sbb
inc
lcall
imul
ret
aas
fwait
sbb
sub
sbb
add
ja
repz
je
shll
inc
aad
lods
and
dec
shll
and
je
sbb
xchg
arpl
xor
clc
outsl
insl
add
lock
sub
adc
mov
sub
inc
xor
aaa
imul
sahf
push
or
and
add
sbb
push
jp
negl
cmp
push
lret
and
xchg
mov
mov
xlat
dec
push
iret
inc
xor
mov
sub
cld
fldl
lret
mov
inc
push
out
push
adc
and
jmp
and
btsl
and
pusha
fcomip
enter
or
mov
outsb
add
lock
pop
sbb
mov
in
adc
rorb
inc
stos
cs
mov
pop
dec
stos
shl
and
sbb
adc
stos
cmp
adc
arpl
bound
inc
push
cmpl
sbb
stos
dec
add
or
sub
jge
enter
int3
mov
es
test
cli
push
push
sbb
cmpsb
insb
mov
or
mov
jecxz
mov
sub
sbb
push
icebp
and
in
mov
adc
adc
sub
repz
jle
es
sub
fs
test
out
in
jbe
pushf
inc
sbb
inc
lea
push
in
jo
divb
inc
fldlg2
inc
cs
add
mov
add
test
sbb
push
je
dec
sbbb
add
pop
or
cmpsl
out
js
dec
xor
cld
lds
orl
inc
repnz
imul
fnstsw
xchg
inc
inc
dec
test
cmp
xorb
rolb
sub
scas
mov
int3
mov
dec
fldl
xlat
push
lea
add
mov
lahf
xchg
cltd
jge
fdivrp
nop
sub
inc
and
sub
jl
in
ja
xchg
clc
hlt
cmp
jnp
pushf
mov
jne
clc
cmp
ret
sub
mov
cltd
push
cmp
sti
int
push
inc
pushl
cltd
cs
cmp
dec
mov
sbb
jg
fs
mov
and
mov
or
outsl
cmp
xor
push
std
std
sbb
inc
mov
cmpsb
adc
fnstenv
es
pushf
add
fnstsw
pop
mov
pop
rcrl
mov
cli
or
dec
popf
mov
ljmp
sti
jb
inc
testb
mov
or
push
js
cli
cmpsl
mov
orb
sub
fdivl
mov
push
dec
nop
xlat
and
push
jp
sbb
sarb
and
clc
mov
pop
leave
sti
lods
cmpsb
xchg
push
mov
movb
mov
and
pop
ds
adc
insl
cmp
adc
lret
pop
iret
push
mov
pop
es
inc
into
pop
jecxz
lods
cs
scas
stos
je
ss
ds
in
popf
dec
scas
xchg
inc
lahf
ja
and
je
dec
out
mov
mov
cld
cmpsb
in
aad
pop
daa
sahf
mov
sbb
data16
out
insl
into
xchg
daa
and
adc
lock
inc
out
ds
jge
int3
mov
xor
sbb
mov
aad
sbb
ret
roll
mov
adc
pop
adc
hlt
cmp
adc
or
jl
and
daa
mov
and
nop
mov
and
call
test
dec
ds
ljmp
call
decb
adc
test
add
mov
mov
xor
jp
rolb
xchg
adc
lds
lret
dec
push
sub
mov
pop
mov
lret
insb
adc
xchg
ja
clc
cmp
mov
mov
sub
jmp
js
add
sub
add
sbb
or
mov
clc
rclb
dec
out
xchg
leave
iret
lods
fsub
mov
adc
jge
mov
mov
mov
out
push
and
mov
xor
loopne
pop
pop
pop
lahf
dec
std
out
adc
stos
dec
mov
mov
arpl
mov
stos
jae
cmp
das
adc
test
mov
iret
push
decl
jecxz
fsubl
lahf
addr16
ror
mov
mov
hlt
push
fsts
sub
cli
jne
popf
or
lahf
xchg
mov
push
fsubr
xor
lcall
or
push
cmp
dec
cltd
fidivrl
cmp
test
jle
loop
imul
jo
adc
push
mov
or
icebp
push
mov
popa
mov
jge,pt
jmp
push
hlt
shl
mov
push
popa
es
js
sub
pop
dec
push
add
inc
cmpsl
stc
and
test
imul
jbe
mov
out
pop
push
sub
add
push
push
aad
aam
inc
lahf
and
test
int
cmp
imul
stos
or
cmpsl
or
in
mov
jmp
or
aad
push
sbb
push
in
inc
sub
mov
push
jnp
sbbb
sbb
mov
out
lock
pop
aad
dec
lcall
dec
leave
push
gs
jmp
lock
lea
mov
push
push
repz
iret
mov
xor
cltd
mov
and
sbbb
mov
lcall
out
xchg
mov
xor
rcrb
ficoms
or
mov
sub
fstpl
mov
xchg
mov
or
fidivs
jecxz
xor
pop
rorl
jno
fildll
ds
push
sub
xlat
test
cmpsl
adc
dec
cmp
cwtl
jno
mov
push
stc
cmp
aad
xor
andl
xor
lret
or
scas
dec
or
inc
mov
cmp
jmp
shrl
lods
popf
lods
mov
test
cmp
loope
dec
push
lods
imul
fildll
or
xchg
dec
mov
pop
mov
mov
stc
mov
lds
aas
out
add
fidivrs
dec
push
adc
clc
add
inc
mov
cmc
mov
adc
push
ja
ss
jo
push
cmp
leave
mov
in
mov
push
incl
or
aad
adc
sub
xchg
adcb
sub
rclb
mov
sti
je
fs
shlb
pop
push
sbb
inc
push
inc
push
in
inc
insb
mov
mov
lock
and
and
cmp
test
push
pop
les
mov
xchg
adc
lahf
je
in
mov
imul
sbb
flds
scas
xchg
dec
adc
popf
jmp
cld
push
sahf
bound
cmp
mov
adc
jno
test
sub
dec
leave
or
jecxz
or
fnsave
and
or
push
jp
mov
add
insl
cmp
inc
mov
mov
add
lcall
jo
lret
inc
ret
ret
ss
sub
out
dec
xchg
fisubs
cmpsl
jns
inc
fwait
xor
cmp
mov
iret
add
lock
and
jecxz
addr16
movsl
out
sarb
cmp
jnp
dec
movsb
les
lds
lea
aam
outsl
mov
gs
inc
mov
rcl
bswap
and
and
dec
pop
fs
pop
xchg
divb
leave
test
jle
pusha
fimull
adc
push
cmp
addl
pop
gs
cli
add
jbe
outsl
push
push
add
aam
test
adc
mov
popf
sbb
ret
inc
dec
out
mov
lock
cmc
mov
lods
adc
inc
lods
inc
fistl
jo
daa
loop
fdivs
xchg
adc
negb
outsl
lret
pop
jns
out
packsswb
flds
test
rcll
sub
repnz
sub
cmp
add
sahf
bound
cwtl
andl
xorl
call
fsubrs
push
jmp
fsubrs
jae
sbb
int3
clc
pushf
xchg
xchg
jae
mov
adc
adc
js
es
add
fdivs
or
sub
xor
xchg
jne
test
scas
push
enter
and
and
rclb
mov
repz
sub
xor
inc
push
repz
sbb
sbb
fmul
out
push
sub
sub
mov
xchg
inc
out
push
xchg
pop
jp
mov
sti
iret
stc
xchg
rcll
loop
sub
test
pop
call
jb
cltd
cmp
ret
scas
mov
or
fsubs
dec
sbb
mov
call
subl
in
mov
sbb
sahf
clc
xor
lcall
divl
outsb
xor
das
push
movsb
add
scas
loopne
xchg
jbe
movl
ret
or
into
and
loop
or
fmul
mov
xor
movsl
jge
xchg
dec
xor
dec
mov
jl
jns
or
rcr
fidivs
xchg
stos
lods
inc
les
addr16
call
sti
inc
xor
es
pop
mov
push
dec
jl
or
iret
loopne
add
adc
ljmp
pusha
subb
lock
push
sub
pop
jmp
fnstcw
xor
mov
xchg
movsb
sbb
and
or
push
cmp
pop
xor
adc
cmp
push
add
ret
stc
cmp
sub
sahf
jns
jl
push
adc
repz
bound
xor
xlat
lret
inc
or
gs
js
pop
xlat
pop
or
mov
pop
xchg
jb
addr16
cmp
scas
xchg
shrl
sub
xchg
push
lods
aad
cli
push
dec
lods
or
aaa
mov
movsl
cmp
test
mov
std
sti
call
sbb
test
popa
mov
fistps
out
add
cmp
hlt
xchg
push
mov
in
and
mov
js
add
mov
or
push
xor
xchg
jo
pop
xchg
lea
hlt
ret
mov
pop
push
fiadds
shll
ja
stos
stos
cwtl
imul
adc
mov
xchg
jmp
int3
mov
ret
aaa
pop
xchg
xor
add
addr16
mov
stc
arpl
push
ss
out
in
out
in
mov
sbb
push
arpl
into
jno
push
add
cwtl
js
pop
stos
movsl
fidivrl
sarb
sub
mov
ds
inc
cmp
mov
pop
inc
pop
add
pop
ja
lahf
push
adc
xor
pop
cli
lret
inc
jns
das
mov
je
mov
jecxz
xchg
es
sub
jp
adc
or
aas
insl
lret
repnz
sbb
bound
fisttps
and
dec
pop
dec
mov
rcrb
pop
sub
mov
lret
shl
das
jbe
jle
jo
test
pop
out
test
push
ret
lea
dec
movsb
add
pop
pop
push
pop
or
sbb
call
inc
hlt
aam
dec
es
and
shl
lahf
scas
fisubrs
lcall
setnp
imul
xchg
in
movsl
fmull
sahf
adc
out
cmc
mov
and
add
icebp
bound
cltd
cwtl
mov
mov
fistps
das
rcrb
scas
sub
sbb
in
cwtl
and
dec
arpl
pop
mov
push
jbe
stc
xchg
aam
outsl
mov
push
fdivr
pop
xor
aaa
pop
mov
repz
cmp
jne
push
int
lahf
data16
pop
pushf
adc
push
sarl
sahf
ret
movntq
out
popf
pop
rol
mov
dec
insb
mov
mov
ds
push
mov
outsb
dec
cmc
adcb
btc
pop
fdivrs
adc
sahf
xor
aam
cmp
mov
into
test
mov
repz
jecxz
sub
loop
stc
push
nop
mov
das
scas
pop
popa
mov
mov
and
push
push
pop
imul
fs
hlt
push
push
dec
ja
and
mov
mull
mov
shll
dec
jmp
push
fcoms
sub
jp
call
cwtl
sahf
test
aad
xorl
inc
xchg
je
addl
test
aaa
adc
xor
push
ljmp
jnp
and
les
jbe
mov
rcll
pop
fcoml
and
dec
imul
gs
cmp
arpl
cmp
stc
inc
cmp
mov
xor
inc
mov
movsb
jbe
fmuls
clc
cmpsl
mov
mov
out
lods
test
call
sub
sub
xchg
sub
jae
cwtl
inc
add
pop
mov
in
ja
cmp
rcl
lcall
ja
test
dec
inc
cwtl
sbb
cld
fstps
pop
push
xchg
ror
repz
orl
pop
dec
jns
and
xor
les
push
pop
cmp
or
mov
fistps
xor
add
dec
mulb
jecxz
dec
pop
cmc
push
sub
bound
cld
mul
pop
inc
push
out
jmp
sub
pusha
fldl
mov
inc
mov
jb
push
daa
fcmovbe
push
ret
adc
push
or
inc
adc
shlb
lret
aas
mov
aas
inc
call
les
mov
sub
xor
test
lods
xor
adcb
xchg
ljmp
cs
cmp
movsl
cwtl
mov
sbb
mov
sarl
test
adc
sub
mov
rorb
les
jl
xchg
mov
test
cmp
lret
lds
sbb
or
adc
or
cmp
aaa
shr
lods
lock
xchg
xchg
je
fmull
push
js
or
cltd
ss
mov
popf
mov
mov
cli
fwait
mov
pop
cmpsb
mov
cltd
add
sub
push
cmp
das
test
fists
icebp
jl
je
in
cld
dec
fwait
pop
mov
xlat
jmp
jmp
insb
jb
push
push
dec
add
inc
fmull
dec
int
mov
jp
mov
js
jo
je
pop
pop
ret
pop
adc
out
inc
pop
inc
loope
lret
inc
sbb
add
lock
into
fiaddl
addr16
in
nop
iret
icebp
add
push
rol
lock
arpl
mov
xchg
ss
pop
scas
mov
inc
ljmp
jmp
imul
outsl
in
fstl
loope
test
inc
daa
xchg
dec
fcompl
stc
in
lds
xor
pop
push
call
inc
in
adc
mov
adc
pushf
mov
add
scas
mov
insb
ret
outsb
mov
ss
sbb
icebp
scas
sti
pop
mov
jmp
jmp
xchg
gs
inc
sub
dec
push
movsb
setl
cmc
movsl
sub
pop
outsl
inc
mov
jbe
pop
mov
cmp
mov
jb
je
or
sub
push
add
sub
pop
jne
pop
mulb
push
pop
addr16
daa
push
popf
enter
mov
mov
mov
inc
or
gs
mov
xor
mov
std
xchg
and
loop
lcall
les
and
out
ljmp
push
mov
xchg
fsubrl
adc
lret
fsubs
and
xor
xchg
adc
jbe
dec
loopne
sahf
pop
jg
sbb
fdivs
cmp
inc
mov
in
insl
sub
sbb
imul
push
shrl
jb
mov
jns
mov
jle
rolb
sti
jmp
or
mov
shrl
insb
daa
adcb
push
push
adc
dec
mov
or
movsb
fwait
sub
pusha
fidivrl
xor
int
fs
xor
loopne
sub
sbb
bound
xor
lret
jle
mov
dec
stc
imul
cmpsb
or
adc
pop
aad
mov
sahf
pusha
dec
mov
stos
xchg
fmull
inc
xor
adc
jmp
cli
scas
flds
push
push
push
lods
das
jmp
and
lea
nopl
lods
push
bound
imul
pop
dec
dec
add
loopne
sbb
iret
imul
jmp
out
jo
in
cld
push
or
mov
mov
mov
lahf
out
add
mov
add
xchg
jne
xchg
mov
cs
mov
insb
dec
adc
push
lods
push
mov
iret
sbb
mov
arpl
pop
lds
fsts
mov
fcompl
jmp
sbb
mov
add
popa
dec
fucomip
inc
mov
sbb
cmp
or
imul
adc
ret
inc
test
iret
mov
mov
jl
fwait
aad
ret
pop
test
inc
ret
into
xor
pushf
xor
pop
jb
inc
dec
sub
add
test
mov
ret
stos
cmp
icebp
flds
mov
jle
ds
add
addb
xchg
out
or
outsb
pop
and
out
int3
cltd
or
inc
test
mov
bound
nop
scas
int
mov
inc
cmp
pop
stos
and
push
mov
ljmp
jle
jge
adc
add
push
pusha
dec
pop
scas
push
xor
jns
in
jmp
cmp
pop
mov
push
xchg
inc
or
jb
mov
fcom
xchg
mov
js
sub
mov
loop
aad
and
add
push
insb
pop
dec
push
sbb
outsl
push
xrelease
cltd
adc
or
or
ret
mov
stos
jle
movsb
cmc
insb
out
push
pop
push
sub
iret
cmp
sub
mov
data16
pusha
cwtl
std
sbb
movsl
call
mov
sbb
in
fnstsw
in
pop
fists
dec
and
aaa
mov
mov
pop
push
pop
mov
shll
lahf
push
mov
cmp
dec
push
inc
adc
sbb
or
pusha
out
add
movsl
jp
xchg
sbb
xor
add
out
push
or
and
out
mov
and
sub
jnp
sub
addr16
push
jne
jne
push
push
sbbl
jp
adc
fisubrs
pslld
sbb
pop
test
mov
add
push
call
and
daa
jge
inc
push
pop
push
sbb
xchg
insb
xchg
xchg
inc
xchg
mov
inc
loopne
aam
and
adc
pop
stos
cmp
and
lea
jns
loope
dec
addb
xorb
inc
push
ss
repnz
mov
xchg
add
lret
push
aad
enter
inc
out
pushf
fiadds
adc
pop
aas
outsl
mov
add
stos
aad
inc
mov
jge,pt
pop
enter
mov
std
jb
pop
test
stc
inc
stos
mov
xchg
jmp
push
lret
stos
push
cmc
insl
or
or
js
pop
movsl
es
mov
popa
add
sub
loop
inc
or
dec
mov
add
cmp
lock
xlat
cmp
ja
pop
lcall
push
call
pop
sub
aaa
mov
test
aaa
arpl
pushf
rcl
scas
cltd
mov
xor
stos
adc
loop
jbe
push
sub
pop
ss
xchg
jmp
dec
or
aam
jmp
mov
stos
leave
stos
sbbb
popf
xchg
aad
aad
add
add
sbb
xor
inc
dec
ret
aad
xor
mov
fs
ljmp
pop
pop
jecxz
pop
imul
lods
test
or
xchg
push
bound
sub
insb
jmp
les
rorl
pop
xor
stc
jecxz
dec
negl
rolb
inc
mov
pop
jp
pop
xor
and
mov
push
aad
inc
mov
push
sbbb
pop
cmc
out
cmc
and
xchg
gs
mov
or
daa
inc
std
std
xchg
sbb
fcomp
call
sbb
scas
pop
jle
adc
test
sub
shlb
mov
ror
negb
sbb
mov
cmp
xchg
cmp
stc
fwait
das
mov
pusha
int
pop
mov
arpl
push
out
xor
push
mov
lock
hlt
lea
adc
loopne
aas
adc
mov
leave
xchg
or
sarb
pop
ljmp
sbb
push
push
pushf
in
imul
dec
cmp
fstpl
pop
out
xchg
lret
subl
mov
cmp
lcall
je
fdivl
mov
mov
push
add
mov
adc
std
imul
shlb
out
jns
les
and
jae
jae
pop
push
insb
pop
xchg
push
pusha
into
xchg
data16
sub
cmp
pop
cmp
push
subb
push
mov
pusha
scas
testb
ret
das
nop
push
fisubrl
iret
pop
daa
inc
sbb
and
hlt
fists
or
inc
jecxz
mov
sub
dec
arpl
lds
dec
call
shlb
push
xchg
push
xlat
mov
or
data16
in
push
xchg
jecxz
jmp
inc
std
mov
loopne
and
fldl
lea
adc
jb
mov
int
adc
iret
fstl
out
clc
inc
sub
icebp
loop
mov
loopne
in
addb
mov
inc
pop
and
arpl
jmp
xor
or
mov
and
int
adc
inc
jg
xlat
sub
dec
cmp
and
inc
clc
mov
test
or
les
ret
mov
lock
ret
jno
int
into
add
test
mov
push
and
inc
xor
test
xchg
add
into
sub
pop
jle
dec
lock
addr16
xchg
adc
in
sbb
sbb
mov
ret
cwtl
les
xor
adc
stos
add
lods
fdivrs
sbb
sbb
mov
lock
adc
jge
in
mov
int
push
jb
call
add
xor
add
jmp
mov
arpl
jbe
add
cmpsb
or
sub
fldl
xchg
dec
pop
dec
cld
xacquire
jmp
enter
ret
bound
add
add
stc
sub
popa
ja
jp
mov
lds
lahf
xchg
popa
fdiv
divl
outsl
out
data16
sbb
popl
and
add
inc
std
ja
mov
push
enter
cmc
ss
ret
or
cmc
out
adc
push
adc
mov
add
sti
mov
leave
cmp
mov
insb
or
sbb
mov
or
ds
mov
stos
fs
adc
mov
jno
pop
mov
xchg
cmpsl
jle
in
adc
in
inc
jp
cmp
das
mov
sbb
fwait
out
pop
sub
adc
js
sahf
in
dec
es
ljmp
jae
mov
mov
lret
call
sbb
sub
ror
in
ret
jb
pop
test
lcall
popf
insl
clc
and
pop
cmp
pop
add
je
pop
cmp
lock
inc
aad
push
pop
icebp
addb
xchg
jae
sbb
filds
into
bound
add
call
imul
xor
mov
out
inc
or
jb
jecxz
rclb
dec
mov
aas
mov
inc
sbb
inc
mov
add
lret
push
mov
fdivp
std
mov
and
mov
dec
mov
inc
adc
enter
lret
stos
repnz
sbb
push
mov
popf
nop
sbb
ja
cmp
sbb
mov
fisttpl
imul
lret
cltd
adcb
mov
cmp
imul
xchg
mov
int3
cmp
or
pop
xchg
aam
out
pop
sub
cmp
xchg
mov
lds
mov
push
cltd
xor
jge
cmp
movsl
into
inc
in
inc
jge
jg
lret
fisttps
in
push
outsb
push
daa
sub
mov
dec
xor
jecxz
out
frstor
pop
push
inc
mov
test
pop
jo
ja
inc
xchg
stos
push
in
sub
test
ja
mov
scas
pop
out
dec
fsubr
mov
sbb
mov
dec
cmp
jno
mov
mov
scas
bound
sub
loopne
outsl
jns
xor
je
jle
sub
aas
scas
insb
cwtl
sbb
popa
adc
loopne
jne
loop
cs
or
call
sub
push
xor
lret
cltd
test
xchg
ret
pop
or
out
addb
cmp
and
mov
inc
mov
rcl
loope
and
insb
mov
popf
lret
out
sub
push
sti
push
jne
fsts
xor
jmp
xchg
repz
and
pop
and
cmpsb
push
loope
ljmp
pop
mov
in
jg
xchg
mov
loop
scas
mov
or
mov
imull
xor
cmp
std
push
add
push
sub
js
add
dec
ljmp
pop
aaa
mov
lcall
loop
aaa
aaa
pop
dec
mov
add
mov
sbb
jbe
hlt
and
or
sbb
or
lock
outsl
sbb
sbb
clc
sub
push
clc
pop
jecxz
ret
xchg
mov
mov
sbb
xor
mov
pop
or
mov
subl
xchg
jae
jae
push
clc
pop
adc
leave
and
adc
ja
dec
mov
pop
dec
ss
xchg
lcall
daa
add
xchg
stc
jae
jnp
repnz
cmc
add
mov
sub
mov
in
es
in
mov
pop
nop
xor
daa
ret
and
jge
fldenv
sub
push
inc
mov
shll
sub
in
loopne
pop
call
aam
sbb
imul
lret
mov
pop
jbe
jp
push
daa
lock
jg
jmp
das
adc
daa
pushf
insl
jns
int3
mov
mov
mov
push
dec
daa
js
add
outsl
popa
adc
movsl
frndint
iret
xor
sub
sti
fs
jp
lret
mov
imull
dec
mov
sbb
jmp
jnp
nop
les
dec
xchg
inc
mov
fisubrs
sub
push
cltd
jno
dec
ljmp
pusha
insl
jl
sbb
popa
xchg
xor
dec
repz
subl
dec
xor
pop
cmc
mov
call
andl
outsl
dec
sti
test
fistl
xchg
addr16
jns
fcoml
mov
test
mov
xor
dec
sbb
sub
mov
sub
repz
outsb
sti
jns
stc
inc
jl
loop
repz
repnz
sbb
mov
and
ljmp
mov
inc
push
loope
ret
mov
mov
in
cmp
pop
test
xor
test
push
or
fnstenv
xchg
je
adc
mov
jle
jg
lods
outsl
ljmp
aam
ficompl
in
mov
mov
pop
add
insl
push
arpl
add
mov
add
lret
push
fstpt
in
cli
addr16
pop
cmp
and
fs
adc
in
addb
js
push
add
dec
cwtl
fnstenv
sub
enter
inc
fisttpl
loop
push
pop
fcomps
stos
std
cs
dec
fcoml
enterw
mov
repnz
lods
jno
lret
mov
mov
xor
and
test
lea
and
mov
mov
sbb
fnstsw
stos
push
ret
and
cmc
jnp
out
lea
sahf
js
dec
ja
adc
jbe
shlb
rcl
lret
mov
dec
sarb
test
mov
mov
aas
popf
shrl
iret
mov
cmc
inc
rcrb
sti
add
fdivr
dec
add
aas
and
pop
cmovne
lcall
shr
or
dec
fstpt
icebp
mov
dec
nop
movsl
adc
push
insl
xor
rcll
jb
add
mov
mov
aam
inc
repz
jmp
push
lret
or
push
push
xchg
dec
mov
cwtl
pop
jge
mov
jmp
mov
test
roll
xchg
dec
mul
or
mov
and
jno
shl
test
movsl
inc
and
mov
lds
mov
sbb
repnz
jp
ss
cmp
cltd
adc
movsl
add
frstor
orl
subb
inc
jmp
movsl
sysret
sbb
mov
adc
aaa
lret
cltd
sub
cld
loopne
imul
lods
icebp
mov
loop
cmp
outsb
xchg
fwait
adc
ss
rcl
stos
ja
imul
or
sar
popa
jle
push
aaa
jg
mov
xlat
and
push
mov
inc
sbb
test
rorb
adc
repz
mov
imul
cmc
pop
subb
iret
lcall
ja
inc
aas
mov
lcall
pushf
call
xor
jns
mov
das
pop
xlat
dec
outsb
mov
cltd
loope
pop
sbb
xor
and
add
and
inc
cmp
aad
jo
push
ljmp
jle,pt
fidivl
xorb
loopne
inc
inc
adc
inc
shll
pop
jg
loopne
inc
je
sub
mov
cli
shrl
shlb
cmc
leave
lahf
iret
dec
stos
pushf
nop
ret
cmp
sbb
insb
icebp
lret
cmp
sarb
pop
adc
pop
rorb
mov
jb
loope
stos
sbb
idivb
push
cmpsb
xor
mov
jno
push
mov
mov
movsl
xor
in
sti
mov
xchg
scas
pop
popf
jo
sub
jnp
mov
adc
push
jno
vpsubb
add
sbb
pusha
xor
xor
das
mov
cmc
jno
sti
cld
sub
out
ret
shlb
and
mov
std
and
adcl
add
pop
fdivs
rcrb
pop
outsb
add
lds
sbb
sbb
xorb
xchg
adcb
pop
xchg
xchg
cltd
pusha
or
jo
xchg
push
fisubrs
lods
inc
jl
in
sahf
xchg
push
call
leave
hlt
int3
leave
nop
ret
clc
inc
outsb
test
scas
push
jmp
dec
gs
mov
mov
scas
loop
or
sub
pop
getsec
xlat
out
into
mov
sbb
mov
jecxz
fdivr
inc
js
and
inc
loope
ljmp
aad
outsl
sub
pop
push
icebp
pop
cmp
fnstsw
aam
xor
jb
jb
inc
test
pop
ljmp
in
addr16
repnz
sbb
orb
popf
rcll
mov
pop
pop
loopne
sahf
xchg
cmp
mov
or
add
fstpt
rclb
mov
notl
inc
aad
jnp
mov
addr16
aad
call
mov
jecxz
mov
pop
sub
sahf
jmp
sbb
dec
fisubrs
mov
jmp
cmp
mov
shrb
adc
push
mov
mov
leave
xor
rcl
fisubs
lcall
in
rcll
jo
stc
push
jnp
outsb
inc
cld
pop
jmp
sub
cmp
push
shlb
xchg
jle
data16
in
mov
jmp
inc
lcall
cmp
cwtl
mov
rolb
mov
testl
sub
setnp
sub
push
jg
xor
mov
jmp
jmp
cmpsl
dec
stos
and
dec
movsb
adc
lcall
arpl
and
xchg
fs
cmp
add
jae
xor
leave
jecxz
ret
mov
cmp
hlt
out
movsb
fucom
iret
sbb
add
xor
fstpl
ret
jns
int
pushf
test
mov
loopne
divsd
mov
fs
mov
bound
xor
test
dec
xchg
mov
sub
lcall
sahf
lea
loope
mov
fstl
or
jnp
dec
fistps
mov
jg
pushf
test
fadd
mov
ret
aam
mov
lock
subb
lahf
ret
loope
push
xor
mov
push
mov
mov
mov
aas
aam
inc
insb
adc
outsb
jecxz
adc
pop
dec
sub
js
loope
sub
push
push
cmp
fmull
push
adc
sbb
bound
jp
adc
dec
nop
iret
and
mov
cmp
scas
cmp
aaa
sbb
jg
jl
out
jae
addb
add
fists
mov
dec
loope
stos
outsb
sub
mov
dec
dec
in
std
rcll
mull
xchg
lret
pop
dec
adc
pop
sub
dec
test
jne
das
icebp
fldcw
pop
pop
fxch
add
push
ret
lods
ret
popl
cmp
cwtl
fildll
sti
ffreep
adc
mov
lds
mov
or
popa
nop
mov
push
pop
sbb
sbb
pop
mov
je
in
mov
leave
cmp
cld
xchg
loop
sub
jecxz
sub
or
cmp
push
adc
movsl
jle
pop
push
pop
sbb
or
mov
int
outsb
mov
lods
push
adcl
push
stc
popf
fstps
push
mov
ljmp
cmp
mov
dec
cltd
sub
cmp
jnp
dec
test
sbb
or
push
loopne
jmp
das
inc
int
lds
xchg
dec
cmp
mov
push
add
cmp
or
mov
jp
push
lods
mov
sub
stos
scas
sub
stc
mov
and
or
or
sar
sub
loope
test
or
stos
mov
ret
mov
scas
cmp
pop
sub
and
push
push
mov
adc
enter
sbb
add
mov
adc
mov
imul
pop
popa
jge
lds
push
or
xchg
mov
test
sbb
lds
push
push
dec
shrb
push
mov
push
xchg
cltd
dec
je
test
les
loop
test
jecxz
ljmp
jb
outsl
mov
es
pop
xor
mov
aaa
or
inc
ds
adc
mov
jg
loopne
loope
int
aad
enter
adcl
mov
into
mov
sub
cmpsl
push
in
inc
aad
clc
rorl
adc
stc
popf
jecxz
push
lock
cmp
fs
mov
sub
cmp
push
into
addr16
sub
stos
xor
inc
and
ljmp
lret
lea
addr16
mov
and
dec
mov
jo
es
cmpsl
pop
cli
push
mov
andl
xor
lcall
dec
movsl
sbb
psubw
add
insl
jae
and
out
repz
lret
add
adc
cmpsl
das
xorb
push
sub
jmp
xor
fidivl
cwtl
or
test
jnp
jne
popf
dec
imull
dec
iret
jge
loope
jbe
add
ja
pop
ljmp
pop
in
pusha
push
xor
pop
lcall
sub
sbb
repnz
ficompl
xor
repz
jle
jne
pop
divl
sub
and
shrb
mov
loopne
shrl
int
stos
ds
fwait
mov
push
rorl
cmpsb
insb
insl
sysexit
mov
clc
add
xchg
mov
add
xchg
jmp
pop
call
pop
std
add
testb
fdivr
jp
jne
lds
dec
dec
dec
addr16
jbe
jno
ljmp
xchg
lds
xor
das
inc
out
xor
lock
inc
inc
aam
xlat
mov
mov
fcmovu
outsb
aam
imul
ljmp
mov
xor
cltd
mov
mov
or
sbbb
jbe
pop
scas
outsl
shll
jge
ljmp
mov
adc
jne
addb
outsl
inc
pop
and
mov
or
jo
xchg
and
push
jo
add
mov
jl
push
aas
xor
cmpsl
pushf
mov
je
add
mov
pushf
jmp
mov
cmp
sti
cli
je
ret
sahf
and
dec
inc
push
popa
pop
add
push
rep
sub
cs
mov
inc
pushf
mull
mov
add
lds
aam
je
lds
in
and
adc
int
mov
inc
mov
ret
jp
cltd
hlt
out
ds
and
jne
ds
lods
fstps
dec
inc
jae
xlat
xor
and
sarl
and
cs
cmpl
add
shl
mov
dec
jbe
pop
aaa
mov
mov
mov
mov
cmp
jbe
xor
ss
cli
push
inc
icebp
jbe
testl
jp
dec
sub
xor
ret
or
mov
and
sbb
ret
xor
fisubl
neg
stos
fcoml
xor
xchg
or
push
inc
push
pop
lock
adc
cld
mov
leave
loopne
xor
dec
jle
cld
mov
mov
xlat
dec
das
push
lcall
in
sub
arpl
mov
xchg
ret
ljmp
jnp
lahf
leave
adc
dec
lock
movsb
sarb
sbb
sub
insl
fwait
or
mov
pop
ja
fs
pop
inc
push
int3
mov
mov
in
dec
jg
xor
inc
mov
pop
addr16
outsb
pusha
jp
orb
loop
add
mov
xchg
nop
xor
push
rorl
adc
mov
fisubrl
push
lods
mov
cmp
dec
pop
jg
xor
adc
xchg
es
pop
in
cmpsl
adc
xchg
data16
cli
lret
adc
cli
or
gs
jg
add
mov
pop
inc
aad
insb
ss
jo
outsb
scas
cmp
sbb
insb
outsl
lret
or
test
loope
push
xor
mov
out
xchg
fdivs
pop
fsubr
bound
push
hlt
test
les
arpl
jmp
movl
aaa
lcall
mov
mov
add
roll
fldenv
stos
mov
jo
jmp
or
loope
lret
popf
ja
imull
adc
inc
xchg
adcb
out
pop
mov
ss
cmp
lret
cmp
pop
mov
orb
fstpl
test
adc
jne
sub
jg
pop
dec
std
lock
je
mov
movsl
sub
out
loopne
sbb
dec
sbb
in
xor
push
addr16
sub
cmovl
out
xor
cmc
push
ret
mov
mov
out
xchg
dec
negb
rcr
mov
adc
sub
cmp
insl
addl
ret
lret
push
and
call
lock
repnz
inc
js
mov
xchg
inc
and
xor
jp
push
xlat
pop
lcall
sub
inc
pop
add
sbb
jne
push
adc
add
mov
call
mov
test
jg
cmp
mov
xchg
mov
lock
outsl
sarb
iret
or
cmp
pop
add
psllq
les
cmp
jnp
lcall
cmpsl
xor
pop
push
sbb
adc
jb
je
sub
popf
lods
cmpsl
sbb
mov
xor
int3
fs
out
adc
mov
jae
cmp
or
shl
mov
pop
jae
mov
ret
popf
or
mov
fadds
jae
pop
inc
in
ret
cld
int3
sub
aad
stos
add
push
clc
or
ja
jb
push
inc
into
cmpsb
pop
shr
ja,pn
xor
and
add
xchg
xchg
daa
ja
js
ss
in
rcrl
ret
ret
fdivs
jae
pop
test
psllq
cld
shrb
jecxz
out
flds
jmp
push
xchg
iret
push
lret
ror
ja
mov
pop
fcmovnu
pop
popa
into
movsb
or
dec
fnstsw
mov
lret
xor
adc
fwait
jg
and
xchg
adc
fsts
leave
outsl
ret
cld
sub
mov
sbb
xlat
hlt
cmp
fucomip
scas
sbb
cmp
test
mov
inc
test
ret
ljmp
lods
es
imul
rcr
sahf
mov
sub
or
inc
dec
dec
and
in
nop
outsl
adc
and
push
test
imul
sub
in
and
mov
sarb
add
dec
stc
ret
shlb
repz
daa
push
mov
push
xchg
xor
jns
cmpsl
jo
inc
pop
mov
adc
mov
mov
cmpsl
inc
pushf
fists
add
and
int
xchg
mov
add
loope
jmp
mov
jne
push
dec
fisubs
arpl
jge
andl
movsb
shr
rcpps
cmc
adc
mov
jge
push
sahf
or
shlw
stos
cld
inc
and
mov
sti
js
out
xchg
jo
mov
pop
out
jecxz
mov
mov
pop
hlt
hlt
add
daa
pop
mulb
mov
fsubrs
ret
sbb
imul
jbe
cmpsl
scas
test
pushf
out
push
xchg
stos
fisubs
sbb
push
xchg
dec
pop
scas
adcb
cmp
pop
int
aad
jnp
xchg
test
mov
enter
cmp
push
jae
push
and
loop
lds
mov
push
inc
in
push
dec
and
jle
loop
outsl
sub
dec
sub
dec
ret
push
pop
push
mov
in
add
cmpsb
clc
push
fs
test
iret
cmp
mov
in
leave
pop
mov
pushf
stos
iret
mov
mov
mov
ficoml
and
sbb
ja
xor
mov
add
repz
aas
rclb
cmp
lret
aaa
push
mov
je
adcl
gs
insl
test
xchg
cmp
pop
xchg
mov
cmp
in
mov
lock
cmp
inc
insl
pop
orl
push
test
ja
or
pop
fisttpl
sbb
adc
push
xlat
cli
icebp
ret
jnp
fmuls
jnp
iret
cld
cmp
sub
div
or
je
push
mov
jl
and
pop
mov
inc
loop
push
insb
jae
scas
jecxz
loope
jecxz
and
aaa
add
cld
lds
pop
cmp
and
out
jo
lahf
sbb
decl
or
lret
and
rcl
ljmp
dec
js
repz
stc
lods
mov
push
daa
push
jmp
out
adc
xchg
jmp
pop
cmovne
pop
scas
sub
notb
mov
jno
xchg
dec
dec
and
jl
jmp
mov
dec
dec
hlt
add
notl
js
mov
shll
sub
sahf
adc
mov
add
dec
xchg
enter
xchg
and
fistpll
jns
push
test
ja
dec
int
and
lock
xor
mov
adc
and
fwait
clc
sub
lods
add
jnp
and
dec
mov
or
inc
xor
push
dec
je
xchg
jnp
add
mov
mov
mov
insl
in
popa
in
jae
inc
in
inc
add
inc
popa
mov
pop
jmp
mov
leave
inc
add
dec
cmp
adc
jge
sbb
cmp
jl
daa
cmp
xchg
rorb
pusha
xchg
mov
outsb
and
dec
pop
and
jl
ret
adc
sahf
leave
out
aad
push
mov
dec
inc
xor
pop
mov
cmpb
pop
xchg
in
sub
imul
outsb
fcomps
jbe
push
adc
rol
push
rcrl
rol
roll
daa
sub
dec
insb
mov
sti
and
mov
xchg
mov
aaa
mov
int3
mov
fildl
push
inc
xor
mov
outsl
sub
movsb
xchg
pop
add
pop
int3
inc
out
and
push
cld
insl
inc
xlat
lea
push
ret
shlb
stc
dec
or
xchg
dec
cmp
mov
sti
leave
and
pop
mov
fs
repnz
loopne
push
test
mov
xchg
inc
push
test
and
imul
pusha
orb
push
push
cmp
jb
inc
rcl
mov
in
xchg
xchg
xor
mov
adc
in
sbb
scas
dec
inc
cmp
setnp
inc
mov
push
push
cmp
push
clc
out
lds
out
in
ss
dec
jae
jnp
rorb
mov
stos
sbb
js
ss
scas
push
scas
add
rorb
int3
pop
sbb
icebp
xchg
push
sbb
stos
sbb
xor
imul
scas
sbb
mov
cmpsb
into
stos
or
out
xchg
adc
dec
dec
cmc
insl
iret
daa
cmp
xlat
push
and
outsb
pop
mov
stc
pop
push
inc
leavew
test
mov
mov
mov
ret
or
jle
and
inc
test
pusha
lods
sub
cltd
sbb
loop
xchg
or
hlt
loopne
pop
rorl
iret
test
push
fists
movsb
xchg
sbb
push
loope
jnp
sahf
shlb
rorl
stos
insb
mov
mov
dec
out
idiv
mov
pop
int
mov
cltd
ljmp
dec
stos
in
mul
mov
push
nop
imul
ds
dec
mov
in
lods
xor
repnz
jg
stc
push
int
lock
out
out
int3
dec
and
call
push
or
popf
xor
and
add
ret
inc
sbb
dec
jmp
insl
pop
push
pop
popf
outsl
sub
ret
pop
jecxz
push
inc
mov
or
adc
lret
and
adc
mov
lods
shll
pop
mov
sub
lods
sbb
or
mov
sbb
pop
or
add
dec
fscale
sub
icebp
imul
aad
fsubl
and
jle
push
cld
ret
pop
insb
add
and
icebp
cmc
aam
xchg
jecxz
test
ljmp
out
movsl
mov
into
and
push
jmp
sbb
loope
cld
popa
push
js
push
repz
fwait
jae
fnstenv
push
or
xor
push
mov
push
leave
shll
lock
xor
add
xchg
fisubrs
sbb
inc
lds
out
cmp
inc
pop
ljmp
outsl
pusha
jne
or
ret
js
push
aad
fwait
in
stos
mov
cmp
or
movsl
add
out
add
sbb
scas
sbb
xchg
out
push
mov
and
aad
push
jnp
dec
mov
dec
rcll
out
mov
inc
xor
sbb
scas
xor
xor
hlt
in
pop
xor
jns
stos
adc
pop
jle
xchg
test
inc
add
sub
add
fstpl
idiv
ds
pop
and
pusha
popf
sbb
push
or
pop
mov
int3
jmp
pop
add
arpl
pop
loop
fwait
movsb
cmp
aaa
sub
fisttps
in
notl
mov
int3
dec
push
mov
mov
pop
lahf
xor
cmpsl
std
xorl
ret
test
test
lret
push
inc
insb
movsl
gs
aam
fwait
mov
fidivl
es
je
gs
xor
xchg
gs
or
out
dec
and
cmp
mov
or
mov
cmp
pop
push
out
stos
mov
testl
cltd
es
or
and
mov
xor
dec
in
push
inc
jp
xor
cmp
sar
push
loope,pn
insl
ret
or
das
inc
jmp
hlt
jne
add
jge
xor
push
jl
cwtl
pop
push
add
movsl
mulb
mov
stc
aad
pop
mov
xchg
adc
pop
adc
das
xor
stos
faddl
cmpsb
lock
arpl
mov
shl
add
push
mov
pusha
aaa
insb
leave
xor
cltd
scas
sub
push
sbb
jb
mov
or
aaa
inc
rorl
test
imul
imul
xor
jp
jmp
cmp
repz
jmp
lods
es
or
int
xchg
sub
dec
lahf
inc
notl
sub
inc
ror
icebp
aam
xor
popf
add
test
fs
out
sbb
mov
mov
jo
mov
cmp
jle
xchg
fcoms
xor
mov
outsl
subb
and
lret
xor
arpl
push
dec
ss
loope
leave
mov
mov
ja
cmp
mov
gs
out
pop
mov
in
cmp
jns
int3
dec
imulb
sub
lock
lods
aas
cli
ficomps
inc
pop
mov
sub
xchg
pushl
mov
call
loop
ja
jnp
xchg
mov
and
xor
cmc
pop
push
push
mov
xorl
xchg
cmpsl
adc
cmpsl
lret
enter
call
sbb
aas
pop
shr
cmp
mov
dec
into
add
das
movsb
xor
add
pop
sub
inc
sub
fnstcw
adc
mov
xchg
inc
pushf
sbb
push
add
jl
or
arpl
mov
arpl
xor
out
mov
repnz
rclb
pushf
cwtl
pop
int3
xlat
inc
test
mov
pop
mov
sub
daa
jb
cmp
sarl
shlb
pusha
daa
pop
cmpsl
lcall
xchg
cltd
hlt
sub
pushf
jge
push
add
inc
iret
pop
adc
mov
xor
push
mov
dec
pop
jne
shl
dec
add
xchg
adc
repnz
nop
leave
xor
pop
test
sti
in
jge
mov
fadds
cmp
inc
mov
in
outsl
and
mov
or
mov
sbb
mov
sub
cmp
out
stc
xchg
xchg
xor
mov
push
jb
jle
call
push
dec
sbb
cld
gs
and
test
ljmp
push
popf
and
sub
cmp
nop
mov
add
addl
aad
add
push
shr
hlt
aam
jecxz
nop
xchg
cs
loopne
insl
cs
mov
fldenv
push
inc
add
mov
fbld
movsb
push
cmp
sbb
hlt
cwtl
xchg
ja
ja
or
xchg
nop
int
cmp
fwait
inc
pop
sbb
outsb
addr16
test
or
cmp
add
es
out
andb
cmpsl
pop
cmp
aam
xor
push
xchg
std
mov
cmc
fs
cs
adc
test
pop
or
iret
mov
dec
mov
mov
push
sahf
insb
sti
inc
lahf
fists
push
sub
mov
pop
int3
pop
aaa
xchg
sub
and
clc
push
adcb
cmp
lods
ss
push
push
shrl
fstl
cmp
cmpsb
xchg
imul
data16
ds
dec
loop
and
add
mov
ja
ds
aad
movsl
inc
ljmp
xor
pop
rolb
inc
fcomps
cmp
into
pushf
ja
dec
movsl
int
cmpsl
cmp
jbe
enter
cmp
mov
sbb
adc
mov
sbb
mov
pop
cs
mov
call
jmp
push
mov
inc
outsl
fs
fnstsw
lret
pop
cld
aas
inc
popl
incb
lods
ret
sbb
movsb
pop
sbb
dec
in
test
jp
pop
sub
mov
ret
hlt
push
add
mov
cmpsb
lods
mov
jmp
in
cmp
add
cmpb
xchg
mov
mul
jle
or
scas
mov
sub
jg
aad
add
mov
dec
cmp
mov
and
lret
test
and
in
adc
into
sub
mov
cmp
mov
or
lock
mov
push
dec
add
mov
lods
js
inc
sbb
pop
outsb
and
fcompl
scas
dec
fs
jbe
shr
lret
cmpsl
loope
faddl
inc
push
dec
sbb
aas
mov
fmull
sbb
stc
pop
aad
mov
notb
or
test
rol
cmp
jl
add
adc
push
mov
aam
mov
inc
dec
aas
clc
jb
int3
leave
popa
and
cltd
int
push
jnp
jle
dec
sub
out
push
test
testb
dec
mov
into
cmp
nop
mov
xor
xchg
jnp
mov
pop
dec
xor
std
sub
sbb
xchg
lret
adc
fadds
pop
loopne
push
test
test
inc
or
gs
cwtl
orl
sti
mov
mov
movsl
jo
mov
xor
pop
insl
movsb
jbe
mov
icebp
xchg
daa
movsb
pushf
xchg
mov
sbb
inc
sbb
jg
bound
arpl
and
add
ficoml
cmc
adc
mov
ljmp
outsl
xor
add
or
sbb
cmpsb
pop
sbb
gs
ds
lret
rcll
or
cmp
imul
leave
cmp
mov
outsl
sbb
add
aaa
add
pop
jmp
test
fmul
das
bound
push
sbb
aad
mov
xchg
fistps
mov
mov
mov
adc
std
repnz
lahf
adc
lods
out
or
cli
mov
inc
repnz
dec
ftst
push
in
shll
pop
outsl
dec
xor
mov
daa
clc
xchg
rolb
ret
aad
inc
int
sub
cmp
xchg
adc
dec
sbb
mov
add
andb
pop
push
js
in
fisubrs
pop
stos
std
dec
mov
icebp
fstl
pop
sub
in
pop
sbb
test
jecxz
lcall
add
push
cltd
push
mov
insb
push
xchg
or
loop
jbe
data16
lds
cli
sub
loop
pushl
jge
jbe
push
mov
shlb
mov
popa
rolb
xchg
pop
sbb
es
jg
les
pop
lds
mov
fs
outsl
or
pop
jl
fisubrl
mov
enter
cmp
adc
push
cmc
mov
mov
clc
clc
xor
xchg
inc
xchg
jle
stos
inc
mov
xor
mov
imul
xchg
jo
mov
sub
decl
std
xchg
loop
loope
push
or
xchg
ja
rcl
cmc
lret
add
enter
add
aam
stos
movsb
stos
add
loopne
cmp
cmp
dec
mov
cmp
subl
aas
mov
xlat
fwait
lret
sbb
aas
fisubs
cltd
lods
push
test
sbb
test
data16
popa
lods
dec
mull
push
aad
hlt
iret
rcrl
fucomp
cltd
mov
sbbb
in
jae
inc
arpl
sti
xor
out
xchg
adc
mov
pop
mov
pop
xor
dec
sbb
aaa
pop
scas
cmp
repz
cmpsb
inc
rcll
push
xchg
and
pop
test
pop
insl
scas
popa
jge
mov
lcall
dec
clc
lret
sbb
jle
mov
nop
imul
push
aas
adc
arpl
mov
xor
adc
addr16
jp
popa
test
daa
lods
clc
mov
inc
inc
ljmp
inc
sbb
in
mov
cli
stc
mov
sbb
and
xchg
sbb
sub
sub
outsb
jmp
lods
int3
ss
shrl
jl
stos
pop
je
push
or
push
jle
mov
pop
mov
and
test
and
fcmovbe
pop
xor
push
mov
cmpb
and
fucom
outsl
dec
push
xchg
mov
fmul
mov
icebp
and
mov
xchg
out
in
cmp
adc
das
xor
push
sub
push
outsb
mov
shufps
das
xor
add
gs
dec
mov
mov
mov
push
outsb
xlat
fists
in
sub
jge
push
push
test
xor
inc
adc
cltd
mov
sub
xlat
jo
dec
pop
outsb
mov
xchg
fwait
popf
and
mov
shll
push
mov
pop
jecxz
xchg
mov
sbb
loopne
dec
dec
bound
loope
pop
repnz
pusha
jecxz
or
lret
popf
ficomps
xchg
imul
push
and
pop
lcall
icebp
mov
jns
inc
xchg
or
sbb
lret
mov
mov
je
mov
das
inc
cmp
les
repnz
sbb
xchg
sahf
in
or
xchg
mov
test
xchg
popf
sahf
in
pop
mov
aas
mov
subb
mov
mov
outsb
mov
fdiv
jns
mov
or
sub
addr16
cmpsl
xor
lods
fwait
js
movsl
sahf
addr16
sub
pop
mov
lcall
mov
xchg
enter
sbb
orb
push
fistl
mov
dec
dec
sub
aas
mov
hlt
idivb
jp
push
and
jo
pop
cmp
popf
imul
ljmp
andb
xchg
cs
arpl
xor
or
push
int3
fimull
cs
loop
in
stos
ljmp
ret
cmp
in
sub
aad
push
jl
fistl
call
arpl
addr16
sahf
test
js
jmp
jne
lock
mov
ret
mov
add
addl
shlb
xor
sti
jno
mov
test
cltd
add
cltd
or
pop
popa
insl
mov
popf
mov
mov
mov
xchg
leave
test
mov
das
mov
mov
icebp
pusha
push
add
xchg
mov
repnz
and
push
and
stos
out
fsubp
jbe
cli
jge
xchg
adc
divb
lods
jp
cs
cwtl
out
mov
sarb
add
or
data16
ljmp
cmp
les
xchg
mov
pushf
add
fnstenv
dec
outsb
lret
or
and
clc
sti
call
pop
out
out
out
addr16
sub
in
xchg
mov
ljmp
or
movsb
inc
mov
jl
faddl
xor
jg
xor
aam
out
cmp
sbb
out
dec
pop
stos
inc
les
ret
sbb
into
xchg
movsb
sub
mov
cmp
lahf
outsb
das
movsl
roll
lret
fadds
cli
xor
aam
jo
dec
pushf
movsl
adc
cld
cwtl
xchg
pop
pop
cmpsb
cld
push
icebp
aam
cmp
lret
gs
push
int
stos
pop
cmp
mov
dec
xchg
andb
roll
pop
mov
mov
ds
pop
or
add
mov
sti
les
dec
cli
inc
push
jbe
cmp
lea
pop
jne
jp
adc
mov
pop
clc
mov
out
cmp
out
mov
pushf
sbb
adc
lcall
cmp
pop
hlt
popa
cmp
pop
iret
test
inc
mov
mov
mov
add
dec
mov
xchg
and
mov
hlt
xor
cli
push
gs
mov
sbb
push
jmp
jp
cmp
addb
seto
sbbb
mov
add
push
notb
mov
orb
loopne
inc
stos
aaa
shrl
ret
lret
sbb
sahf
or
mov
sahf
mov
adc
cwtl
dec
mov
ja
sub
or
push
mov
daa
and
stos
sub
out
dec
push
xchg
loopne
mov
inc
inc
inc
shll
test
or
notb
xchg
sub
push
inc
fstpt
stc
sti
pop
push
sbb
jle
arpl
inc
inc
xchg
clc
mov
pusha
jg
gs
add
out
outsb
sub
mov
ret
xchg
nop
popa
clc
shlb
sbbl
and
enter
cli
insb
xchg
mov
push
cmpsl
jbe
pushf
jecxz
je
xor
push
cmp
cmp
push
add
dec
jecxz
das
notb
shr
sbbl
and
pop
es
ss
inc
movsl
push
sbb
sub
inc
jmp
pop
roll
and
adc
sbb
dec
pop
lods
xor
lcall
mov
cmp
and
xchg
lock
xchg
push
repz
add
lahf
stos
dec
sub
ret
xchg
outsl
fucom
or
mov
push
stc
xchg
inc
push
call
fdivs
or
jp
pop
lcall
dec
js
ficompl
incl
dec
nop
mov
mov
push
add
cmc
outsb
popf
inc
jne
popl
fsub
inc
push
test
cmp
loope
repnz
mov
jg
jbe
aas
inc
push
add
ss
daa
loope
dec
xchg
jo
lret
popa
mov
adc
imul
sub
inc
das
mov
in
xor
loop
pushf
daa
fcom
cmp
and
dec
addb
mov
dec
dec
xchg
pop
in
aaa
or
inc
jg
fld
sub
and
sahf
xchg
mov
push
or
jae
inc
push
lret
pop
lahf
test
test
daa
or
mov
out
cmp
cmp
mov
cmp
stos
jg
cli
adc
jnp
popf
sub
test
inc
pop
mov
sbb
and
out
mov
mov
add
xlat
adc
inc
add
cld
mov
dec
jb
je
lods
push
mov
loop
lock
cmpsb
out
inc
sbbl
xchg
pop
out
sub
in
movsb
scas
mov
dec
and
out
push
outsl
stos
cmp
sub
push
pusha
addr16
cld
inc
int3
pop
dec
inc
in
clc
sub
ret
clc
push
sarl
push
fmull
addr16
pop
sbb
jg
fwait
xchg
inc
pop
or
and
adc
ss
jo
lea
cmp
out
cmpsl
test
or
push
xor
inc
decb
pop
dec
add
xlat
mov
insb
push
dec
lahf
jne
mov
out
fcmovnu
jns
aad
inc
rorb
xchg
clc
hlt
fwait
or
mov
pop
aaa
cmp
and
call
pusha
mov
pop
mov
push
cmpb
jb
insl
loop
cmp
in
mov
cli
gs
rcrl
xchg
sub
sbb
sub
sub
mov
in
adc
fisubrs
sub
in
rolb
mov
inc
mov
push
shrb
mov
mov
jge
setle
fsubl
dec
mov
cmpsl
cmc
aam
pop
adc
ljmp
or
pop
mov
mov
jge
shr
pusha
sbb
out
mov
scas
rclb
and
loop
pop
or
dec
and
fdivl
aaa
xchg
mov
or
adcl
mov
scas
jl
cmp
mov
stos
cmpsl
jmp
push
push
mov
add
xchg
inc
leave
jnp
xor
adc
sarb
xchg
inc
out
and
cltd
adc
mov
mov
jnp
jb
lret
aaa
xchg
pop
jbe
js
dec
ret
dec
ret
inc
push
stos
push
pop
ss
xor
pop
insl
push
jo
xor
sub
daa
dec
ret
mov
ret
in
leave
repnz
and
pop
out
gs
cmpsl
jns
shl
js
sbb
xor
cwtl
jp
bound
xor
lods
push
jbe
jno
sub
call
enter
dec
or
dec
push
jecxz
cld
sbb
sub
loop
add
insl
jle
xor
jne
hlt
shrb
jnp
adc
jecxz
mov
sbb
ret
cltd
xchg
mov
stos
cmp
jns
imul
xor
mov
loopne
mov
and
push
das
xlat
jae
dec
adc
les
push
mov
mov
pop
mov
mov
mov
ret
bound
mov
add
add
push
test
push
dec
cwtl
cmc
jne
ja
mov
ja
xchg
lods
add
fwait
cs
cmp
pushf
jb
dec
mov
add
movsl
mov
or
insl
mov
in
cmpsb
sub
cld
sbb
sbb
insb
iret
leave
call
scas
insb
mov
lret
sbb
test
repnz
adc
sbb
test
pop
xchg
cltd
sub
xchg
sbb
outsb
pop
fwait
jp
jge
xchg
repnz
adc
dec
pop
ja
and
mov
hlt
push
jmp
sub
ja
dec
data16
int3
sub
test
inc
test
add
cmp
test
mov
out
xor
adc
xchg
cltd
icebp
stos
push
dec
add
pop
scas
mov
fdivs
adc
xchg
scas
sbb
pop
jecxz
cmp
stos
lods
sbb
push
rorb
pop
nop
sub
mov
sahf
ret
ret
mov
mov
loop
arpl
imul
cltd
fs
mov
mov
sub
daa
cmpsl
fadds
aas
pop
adc
mov
loopne
inc
mov
into
fs
push
flds
fdivrs
mov
mov
sub
push
in
icebp
lcall
stos
lock
repnz
jae
mov
lds
shrl
in
or
popf
inc
push
pop
mov
jbe
sbb
adc
aam
mov
loop
lea
pop
sbb
subb
jp
xchg
popf
in
shlb
sub
cltd
arpl
push
int
data16
aad
pop
mov
out
mov
adc
nop
pop
jnp
pop
xor
aad
dec
addb
push
out
jne
cmp
cmpsb
inc
push
js
cmp
aaa
popa
xor
orl
outsl
xchg
xchg
int
fs
aas
xchg
pop
inc
xor
or
sub
cwtl
stc
and
xchg
mov
arpl
fstpl
jmp
data16
dec
jb
cltd
scas
add
ds
pushl
es
mov
nop
inc
popf
js
rorb
add
adcl
mov
sti
add
popf
jmp
sbb
dec
rcl
or
pop
sub
inc
call
xor
push
data16
pusha
push
push
xor
outsl
popa
js
cltd
xchg
cmp
mov
ret
push
push
xchg
gs
clc
push
cmp
adc
test
int
push
push
stc
jmp
push
fnsave
fbstp
dec
int
int3
addr16
cwtl
xchg
dec
push
jns
jecxz
into
mov
add
mov
stos
inc
cmpl
adc
loope
pop
add
dec
pop
dec
sub
sub
pushf
repz
sub
sbb
cmp
lds
adc
inc
mov
sub
push
shlb
pop
test
daa
sbb
loope
push
in
notl
call
pop
push
push
sarl
ljmp
inc
enter
xor
jae
lahf
and
mov
shlb
outsl
sahf
pop
mov
xor
or
mov
roll
sbb
movups
inc
jno
cwtl
and
lahf
int
lahf
push
popf
insb
mov
in
out
dec
jle
push
jmp
pop
jae
inc
inc
mov
xor
out
jmp
sub
pop
sbb
mov
imul
stos
scas
das
xchg
add
inc
pop
xchg
inc
and
movsb
loopne
in
mov
jg
das
xorb
dec
sti
enter
outsb
push
adc
dec
xor
mov
or
fistl
sbb
cmpsb
pushf
add
mov
repz
subb
out
add
cmpb
ss
inc
push
jmp
pop
incb
rcr
mov
cs
push
and
dec
jecxz
stos
je
jnp
jmp
and
jnp
lock
in
xor
daa
cmp
jle
call
or
test
mov
outsl
mov
cmp
jmp
mov
rcr
jno
or
dec
sbb
cmc
xchg
clc
xchg
movsb
mov
push
sub
add
mov
push
cmp
lcall
and
dec
lods
in
jge
and
shrw
subl
mov
cmpsb
das
test
add
sbb
mov
add
cmpl
push
dec
cmp
pop
fwait
insl
subb
ficoms
mov
jo
pop
call
xlat
inc
pop
push
out
cmp
push
mov
pop
mov
cmp
lds
fdivrs
lcall
stos
sarb
out
data16
or
in
rcll
adc
mov
sub
test
leave
pop
insl
fiadds
mov
jle
cmp
mov
outsl
mov
int3
mov
int3
push
mov
adc
outsl
movsb
pop
pop
pushf
pop
push
pop
in
std
lret
and
adc
cld
out
add
mov
in
mov
sbb
addr16
mov
add
sbb
jbe
cmc
fnstsw
mov
adcl
pop
addr16
mov
mov
or
push
cmp
and
xchg
push
lahf
pop
sbb
inc
push
pop
pop
sbb
sub
jecxz
jae
xor
mov
sbb
bnd
fwait
add
push
leave
faddl
adc
inc
call
out
rolb
mov
push
dec
mov
xchg
aad
cmp
cmp
xor
fidivs
xor
pop
or
pop
mov
mov
push
mov
jnp
loope
je
lods
clc
dec
or
add
inc
out
jmp
mov
jmp
cmp
mov
sub
mov
shll
cli
sti
dec
cld
out
bound
or
out
cmp
callw
mov
mov
mov
testl
mov
or
mov
dec
int
dec
fstps
jmp
fstp
dec
add
jb
notl
xchg
push
jns
aam
mov
inc
clc
out
or
fucomip
mov
dec
xchg
adc
xor
fists
addr16
pushf
pop
or
addr16
je
adc
mov
xchg
mov
and
addr16
mov
push
lahf
outsb
sbb
sub
or
dec
pusha
cmc
push
fiadds
addl
cmp
cmovo
es
rcrl
push
and
mov
push
adc
and
xchg
sub
jns
mov
xchg
mov
sub
int
pop
roll
push
sti
stos
fsubrl
out
inc
pop
dec
pop
mov
sub
cwtl
mov
aaa
xchg
rclb
mov
cmp
or
dec
incl
ja
dec
mov
clc
lret
adc
jae
mov
cmp
int
pop
push
push
lds
outsb
jne
adc
inc
out
adc
insb
push
pop
mov
mov
movsb
lcall
mov
loope
icebp
jb
inc
jl
add
push
cmpsw
dec
lds
stos
fisttps
imull
fcomip
xchg
pop
insb
incb
jo
xchg
jae
aam
mov
and
mov
movsb
in
sub
add
std
mov
aam
adcb
shrb
imull
fimull
inc
xor
xchg
or
cli
or
xor
adc
leave
sub
add
xchg
fstps
enter
in
movl
loope
cmp
inc
fcmovnb
aad
cwtl
push
roll
adc
iret
enter
add
in
or
push
cwtl
dec
lds
inc
fcompl
lock
jge
pushf
fs
push
movsb
leave
add
mov
stos
scas
sbb
lret
cltd
dec
xor
out
add
rcr
arpl
je
pop
enter
cmp
or
pop
lret
scas
out
out
push
popf
xchg
sti
and
jge
dec
inc
jae
scas
mov
cmp
aaa
pop
push
imull
test
push
insl
mov
loope
inc
mov
inc
lahf
arpl
add
pusha
pushf
mov
add
mov
xor
dec
pusha
divl
xchg
js
fidivrl
cmpsb
addr16
ficompl
loopne
xchg
and
cmpsb
test
xchg
negb
xchg
mov
jnp
pop
xlat
pop
dec
in
and
jl
and
fwait
shr
sub
push
adcl
push
and
stc
mov
dec
jo
in
fcmovbe
sub
dec
or
mov
stos
push
add
sub
pop
ret
clts
xchg
leave
jne
decb
rclb
push
pop
imulb
pop
jecxz
xchg
fwait
or
call
mov
loop
cs
inc
cmp
and
xchg
xchg
rcr
enter
lock
inc
xor
sub
imul
in
sarb
mov
and
lcall
inc
xor
pop
dec
jecxz
sbb
int
es
insb
inc
repnz
add
mov
int
push
test
sbb
xchg
jne
cmp
das
aaa
scas
mov
ds
sbbl
add
and
xchg
dec
cmc
insl
in
mov
xchg
ficoms
fildl
cmp
ds
daa
push
pop
insl
out
pop
lret
and
add
push
xchg
cmp
bswap
add
out
pop
adc
mov
jnp
scas
or
lahf
mov
insl
adc
in
lea
cld
push
lret
test
mov
lret
inc
imull
mov
dec
mov
int
sar
movsb
xchg
xor
pop
mov
push
mov
sarl
mov
xor
inc
inc
jnp
add
xlat
dec
and
adc
ljmp
cwtl
mov
add
loopne
or
leave
loope
xor
bound
inc
mov
daa
mov
add
and
fwait
shr
addr16
into
mov
in
xchg
popa
popa
sub
movsl
inc
jno
jb
ja
inc
dec
xor
xor
int
jecxz
pop
sub
icebp
loop
jp
xor
lock
pop
jb
add
out
and
cmp
stos
mov
add
ja
outsb
stos
mov
out
dec
fcompl
sub
fs
or
jmp
sub
inc
stos
cli
cli
arpl
mov
cld
sub
push
adc
lcall
cmp
cltd
or
pop
push
push
inc
js
jne
test
xchg
aam
sub
les
call
enter
and
ret
push
adc
mov
cmp
inc
xchg
pmulhw
loop
mov
mov
inc
xor
add
jb
int
and
push
sbb
dec
test
sbb
adc
mov
jnp
jecxz
jno
cld
stc
sarl
jns
dec
sti
out
outsb
fcomip
pop
mov
mov
lret
enter
nop
inc
or
inc
cltd
jno
push
mov
stos
pop
aad
out
push
mov
dec
push
out
inc
xlat
fstps
xor
test
sbb
popa
leave
add
dec
dec
pop
add
push
cld
insb
arpl
fsubs
testl
jns
cmp
sub
inc
data16
push
jl
leave
cmp
inc
stc
push
in
dec
lods
mov
jg
js
and
fs
out
xchg
pop
mov
mov
add
jae
xchg
ror
stc
push
fnstcw
cld
ds
fsubrp
adc
imul
sarb
push
ds
jae
scas
mov
mov
jp
test
inc
push
mov
fwait
mov
js
rorb
fstl
orl
inc
test
aad
ds
daa
fcmovnbe
int3
xchg
cmp
cmp
lcall
jle
imul
xchg
je
lahf
mov
std
cmpsb
jbe
pop
shll
pop
cwtl
mov
lcall
pop
or
into
push
mov
test
xlat
cmp
cmp
scas
push
cmp
test
xchg
dec
ficoms
xor
mov
fidivrl
cmpb
lcall
mov
mulb
jne
cli
push
mov
or
cmp
push
das
repnz
sbb
push
outsl
jg
jo
std
lret
push
xchg
jno
mov
xlat
adc
and
fwait
call
fisubrs
sbb
imul
xor
dec
cs
mov
mov
push
adc
rorl
lcall
jle
mov
xor
clc
int
out
fdivrs
in
pop
cmp
sbb
mov
fnstsw
push
scas
xor
orb
mov
dec
stc
jl
inc
or
xor
cmc
hlt
sti
imul
cld
aad
mov
repz
jb
and
icebp
imul
xchg
js
mov
mov
mov
pop
sbb
lock
into
and
in
adc
movsb
cmp
test
push
sub
fdivrs
mov
enter
daa
insb
cmp
xchg
cmpsb
mov
pop
adc
mov
daa
mov
mov
mov
rcrb
push
inc
fs
aam
sub
lods
repz
testl
inc
sbb
mov
cmp
cmpsl
lea
cmp
push
jmp
popf
lods
xchg
jns
leave
popf
mov
aam
push
adc
das
dec
les
loop
cmp
push
bound
orl
stc
test
mov
ljmp
stos
sbb
sbb
sub
jp
cmp
orb
xor
les
fildl
jns
inc
pop
imul
stos
hlt
fwait
loope
fs
adc
xor
imul
insl
mov
mov
push
insl
clc
xor
mov
mov
pop
and
hlt
fmuls
jmp
into
test
pop
jno
push
fs
daa
pushf
push
push
dec
shl
hlt
push
push
mov
out
rorb
popf
daa
lods
and
xor
sub
jp
xchg
inc
int3
mov
loope
xlat
mov
sti
inc
ret
push
sub
cmp
arpl
xor
inc
fldt
imul
pushl
aad
sbb
inc
xor
notl
fdivs
mov
fcoml
dec
pop
dec
loope
mov
fildl
sbbl
jno
lds
cmp
sub
mov
mov
pop
xlat
je
add
bound
cwtl
adc
out
mov
je
es
call
loop
sub
mov
loope
int
incl
sbb
aaa
les
popa
test
out
push
int3
in
jge
shll
lods
das
mov
dec
testb
repnz
dec
or
xor
sub
mulb
outsb
lods
movsb
xchg
lahf
pop
inc
sub
push
pushf
fs
push
jne
test
cmp
jns
loop
jle
in
xchg
xchg
lods
sbb
filds
push
sbb
fstpt
mov
testb
pop
cmp
cmp
push
and
fldt
sbb
jmp
je
push
inc
dec
pop
fistpll
sahf
sub
xlat
push
and
dec
in
jmp
incb
mov
jge
cwtl
pop
les
jge
xchg
push
nop
adc
ret
movsl
mov
insl
lret
imul
add
or
enter
neg
jne
and
push
adc
jmp
add
jno
or
jmp
xor
hlt
addr16
rorb
cmpsl
inc
or
addl
subl
adc
int
mov
cmp
push
jo
out
jae
or
mov
and
ss
repz
inc
cs
jmp
pop
daa
sahf
lods
xor
xchg
jns
aam
mov
pop
cmpsl
lea
inc
and
ds
and
sbb
push
addr16
in
xor
negl
pop
mov
and
pop
mov
arpl
sarb
xchg
dec
daa
adc
mov
fidivs
mov
in
fmull
aad
xor
mov
in
mov
push
ret
jno
daa
sub
popf
shrb
mov
data16
push
sub
js
jge
jmp
mov
pop
mov
jns
ljmp
addr16
push
lea
push
mov
lret
test
pop
sub
ss
cmp
pop
aad
imul
xchg
ja
movsl
lock
sub
xlat
incb
imul
push
rcl
insb
stos
pop
sub
push
cmpsb
push
cmp
loope
fidivl
hlt
adc
data16
adc
mov
jl
ljmp
repnz
into
and
clc
movsb
dec
pop
sbb
jge
frstor
int3
xchg
cmp
pop
xlat
pop
cmp
or
mov
inc
aad
test
imul
cmp
add
cmpsb
cmp
xor
mov
stc
leave
jns
dec
ret
mov
movsb
jl
test
inc
test
mov
imul
inc
test
pop
sbb
xlat
sub
jns
mov
ds
and
inc
es
icebp
mov
iret
xchg
sti
insl
movsl
jmp
xor
int3
fcomi
fs
jge
sbb
push
adc
ljmp
inc
or
sarb
cld
push
ret
cmp
adc
test
push
data16
mov
test
mov
lds
les
mov
ret
clc
jg
cltd
dec
push
cmp
sti
jecxz
inc
push
jns
push
cmp
gs
lret
jmp
push
jp
and
aad
push
data16
pop
je
icebp
mov
and
pop
loop
sbb
mov
stos
xor
and
pop
out
push
popa
or
mov
mov
add
out
call
mov
in
dec
stos
insb
dec
in
ret
and
pand
push
pop
or
pop
or
repz
cld
cmpsb
fbstp
mov
or
jb
jle
mov
mov
mov
sbb
xlat
adc
icebp
xor
jo
mov
mov
sbbb
mov
xchg
lea
and
jmp
aad
push
pop
push
dec
adc
push
mov
jmp
lock
cmpsb
test
and
jnp
repnz
bound
outsl
xchg
or
test
pop
sbb
cmp
sub
movsl
jmp
push
shlb
shrl
and
mov
mov
mov
sti
sbb
lahf
loopne
cs
enter
and
or
push
xchg
out
adc
xchg
stc
fmull
jmp
jne
or
push
scas
out
daa
mov
fidivs
push
adc
repz
fnsave
adc
clc
and
fwait
out
out
das
repz
imul
dec
nop
dec
aam
jnp
in
dec
pop
imul
inc
or
lcall
jp
addb
jl
bound
stos
dec
pop
dec
add
mov
mov
cmp
jg
mov
pop
jge
mov
je
cmpb
and
adc
sahf
ret
mov
xchg
das
cmp
ds
iret
mov
rcrl
mov
xchg
out
inc
lods
outsb
test
enter
push
mov
adc
cmpsb
jp
adc
pop
das
sbb
mov
movsl
mov
fcoml
inc
sub
sbb
pop
or
pop
insl
aam
jae
and
cmpsb
ja
icebp
pop
pop
jmp
jnp
xchg
mov
into
gs
xor
dec
les
push
movsb
mov
fdivr
insb
das
jb
pop
fucomp
rolb
and
adc
inc
popa
rorb
in
loope
sbb
xor
inc
adc
ret
add
adc
ficomps
das
adc
fstps
cmp
stos
push
mov
mov
in
movsb
popf
imulb
int3
popa
jbe
adc
ret
ds
outsb
or
xor
push
lcall
cmpsl
add
movsl
popa
lret
les
sub
or
pop
les
sbb
rorb
stos
and
push
loopne
mov
insb
pop
popf
mov
sysenter
sbb
leave
push
sub
roll
sub
push
adc
dec
xchg
aaa
loope
jp
ljmp
or
cs
lods
adc
aam
inc
sbb
or
sbb
js
xchg
jge
inc
stos
sub
pusha
pop
and
outsl
orl
sbb
iret
dec
addr16
inc
xchg
pop
mov
popa
shrb
imul
jge
inc
sbbb
js
stos
cs
jno
test
xchg
sub
shll
mov
jne
sub
imul
add
mull
dec
add
gs
mov
and
test
aad
dec
mov
sbb
or
push
add
pop
jge
mov
cmp
inc
adc
int3
outsb
mov
add
int
stc
mov
aad
daa
pushf
push
pop
pop
cmp
jmp
lahf
dec
inc
jns
jns
fcmovne
push
and
xchg
pop
loop
dec
lea
mov
test
jae
and
inc
sbb
or
mov
insb
in
push
bound
cmpsl
adc
subl
iretw
ret
arpl
xchg
and
mov
pop
mov
mov
push
inc
out
les
mov
fbstp
ljmp
mov
shl
and
sbb
sbb
mov
jmp
nop
jle
shll
es
fildl
and
outsl
adc
call
fdivrs
movl
mov
add
lahf
lods
push
sub
push
cmp
aas
aas
mov
std
repnz
out
adc
sbb
lds
sbb
out
xor
setns
cwtl
fnstsw
popa
jae
add
stos
pop
pop
cs
jno
fsts
sub
test
jo
mov
jecxz
aad
js
mov
out
std
add
outsl
std
inc
aas
es
sub
xchg
push
pop
and
insl
icebp
push
pop
jns
push
push
addr16
pop
cmp
or
and
xor
add
out
xchg
cltd
cld
enter
pop
ja
shl
decl
imull
jle
sti
aad
ret
lods
mov
movsl
jae
fsubr
xor
push
pop
pop
xor
test
cmpsb
jo
lcall
cs
insl
mov
fdivr
iret
jo
mov
shll
xor
push
cli
into
jnp
add
cmp
lock
and
daa
cwtl
cmp
sbb
in
loope
aaa
outsl
gs
out
push
sbb
cmp
std
fsubrl
push
mov
and
mov
sub
int3
ret
dec
inc
xchg
dec
imull
cld
leave
cmp
adc
rcr
add
xchg
mov
and
arpl
hlt
fwait
hlt
imul
pop
pop
pushf
cli
jecxz
add
pop
inc
adc
jne
inc
jle
dec
jo
mov
mov
shrb
xor
xor
movsl
cmc
xchg
int3
inc
stos
mov
adc
imul
sub
leave
sub
mov
int3
cmpsb
mov
xchg
pop
xor
outsl
mov
daa
pusha
sahf
push
hlt
sbb
cmp
mov
mov
jno
cmove
jmp
add
das
mov
adc
xor
in
sahf
jl
cmpsb
pop
cmp
add
orl
and
cs
int3
js
mov
xchg
add
int3
cmp
inc
sti
pop
inc
xchg
lcall
pop
das
xchg
call
popf
std
shl
je
mov
jg
movsb
lret
push
cmpsb
push
add
repz
ja
add
adc
jo
mov
push
mov
stc
dec
ret
mov
leave
or
mov
pop
xchg
stos
sub
or
sub
jecxz
cs
fidivrl
in
xchg
enter
mov
sbb
xchg
push
fs
add
popa
or
pop
pop
fsubrl
mov
adc
scas
aas
push
jb
and
lods
or
jp
sub
adc
lods
inc
mov
xor
in
movsb
les
out
outsl
and
adc
shrb
loop
cmp
or
call
adc
add
mov
dec
aas
pusha
mov
cmpb
mov
rep
fs
out
data16
in
xor
dec
mov
into
dec
dec
mov
pop
pop
push
testb
mov
jle
cmp
sub
pop
adc
das
fmuls
push
mov
jge
mov
xor
mov
mov
imul
imul
sbb
xchg
movntq
out
shl
inc
test
ret
gs
ror
push
lret
pop
gs
pop
mov
inc
aaa
ds
pushl
dec
sti
mov
xchg
xor
mov
jne
outsb
push
lods
dec
mov
iret
test
jnp
shl
stos
sahf
add
sub
and
dec
xchg
cwtl
jbe
sub
scas
jo
cli
and
jo
push
or
and
adc
push
test
ret
cmp
repnz
rclb
jb
adc
bound
pop
gs
and
mov
xchg
pop
cld
or
leave
jle
xchg
fnstenv
or
and
push
push
or
imul
cmpsb
ret
mov
or
out
sarl
cld
inc
push
sub
mov
arpl
dec
ret
cltd
dec
or
ds
mov
dec
lock
and
ljmp
lock
mov
mov
out
cld
push
adc
xor
aad
fisttps
jmp
mov
mov
ret
xchg
lahf
mov
into
addr16
sbb
mov
gs
and
push
dec
xchg
rorl
lret
shr
jmp
pop
mov
push
pop
pop
sbb
rcll
sub
lods
out
sbb
xlat
jmp
xchg
add
int3
mov
add
mov
ljmp
orb
not
enter
mov
insb
lea
mov
hlt
in
jmp
int
sub
mov
stc
xor
les
mov
jae
rorb
sbbl
hlt
fiaddl
adc
or
xchg
jb
add
mov
mov
push
out
and
cwtl
rcr
sub
outsl
dec
sarl
cmpsl
push
sub
dec
add
and
icebp
into
movsb
ret
or
push
pop
mov
cltd
mov
xchg
pcmpeqd
xlat
xchg
dec
inc
imul
ret
cmp
js
sar
add
sub
fisttps
lock
ror
pop
sarb
jbe
mov
movsb
sub
or
in
ret
cmp
enter
add
adc
lahf
add
ret
frstor
into
adc
aad
xchg
dec
xor
pop
and
inc
and
cmpl
cmp
idivl
clc
cs
jnp
sbb
xor
xor
pop
test
ret
subl
lcall
ss
aaa
loope
jb
rcll
rol
or
add
cmpsl
sbbl
jbe
adc
jne
dec
sub
mov
push
ljmp
mov
out
outsb
sub
cwtl
pop
lret
jb
pop
add
jge
loop
loop
adc
push
adc
loop
jne
jns
sub
inc
xor
xchg
xor
and
dec
in
and
mov
pop
adc
ret
ret
fldenv
sub
rolb
nop
or
mov
fdiv
filds
inc
loopne
gs
mov
je
incb
addr16
stos
iret
pop
xchg
jmp
lahf
into
or
xor
mov
daa
add
or
mov
loopne
xchg
outsl
test
lcall
jns
leave
xchg
loop
cmp
mov
dec
insb
daa
cmpsl
mov
or
icebp
mov
inc
xchg
cmp
xlat
cmc
xor
or
adc
mov
testb
pusha
inc
fwait
shl
mov
mov
mov
notb
in
outsb
or
sbb
sub
mov
mov
push
adc
push
mov
cltd
popa
jmp
cmpsb
fildl
out
cmpsb
cmp
int3
lret
insb
lea
pop
sbbb
es
pop
mov
sub
sub
outsl
fs
sub
mov
je
in
aaa
pop
loop
jne
and
fs
pop
pop
xchg
inc
push
dec
dec
mull
pop
cmp
popf
and
fcomps
xchg
fldcw
sbb
inc
adc
pop
and
mov
enter
and
call
test
scas
fs
ds
sub
sub
adc
mov
pop
mov
es
imull
sbb
fistpll
cmp
das
pop
shlb
jbe
dec
rorl
lret
jecxz
andnps
cli
add
adc
stc
inc
clc
add
dec
pop
sbb
stos
push
lahf
scas
jmp
or
push
dec
jae
push
notl
das
pushf
xchg
and
je
mov
adc
test
cld
stos
loopne
cmp
cmpsl
fsubrs
jge
mov
inc
stos
in
fcmove
sub
outsl
jb
xchg
dec
out
imul
jb
fstpl
mov
or
sub
dec
leave
adc
inc
popl
fistps
jno
bnd
sbb
int3
mov
testl
jnp
pusha
pop
ds
jl
sbb
mov
push
mov
and
in
fwait
sub
ss
lahf
daa
mov
push
jecxz
cmpsl
cmpsl
ss
lcall
mov
aaa
fidivs
add
xchg
jecxz
dec
test
outsb
sub
mov
or
sahf
mov
bound
loop
mov
ficoml
mov
int
jb
shrl
in
int
movsb
fucomip
mov
lods
pop
push
in
aad
jb
clc
pop
cwtl
lcall
jl
das
test
nop
or
mov
mov
jmp
std
jns
sub
ljmp
sbb
lahf
mov
push
or
sbb
mov
lock
push
outsb
in
pop
sub
mov
push
mov
and
push
loopne
sub
or
inc
stos
fstp
jno
ja
mov
pushf
adc
iret
and
je
dec
xor
lret
pop
leave
hlt
fildl
and
popa
aas
sub
dec
aaa
gs
pop
xor
sbb
pop
pop
inc
andl
adc
pop
outsb
and
jmp
push
cmp
in
rcrl
xor
sbb
fstenv
das
sbb
cmp
jg
sub
adc
insb
cli
out
pop
ja
movsl
push
sarb
lea
sahf
xchg
fs
push
xor
cmpsb
sub
jo
test
jge
inc
or
js
notb
pop
ds
and
out
push
jno
imul
into
inc
or
ret
and
clc
popf
sub
pop
jae
pop
sbbl
je
jg
mov
nop
xchg
shrl
jmp
js
cmp
lock
xorb
xlat
imul
lret
fstl
dec
loop
in
clc
mov
cld
inc
xor
std
shll
les
imul
test
repnz
shll
xchg
repz
mov
push
mov
nop
out
cmc
icebp
add
xchg
push
decb
cmp
sub
clc
bound
jp
fcomps
xor
jne
jmp
push
pop
ret
pop
cmpsl
inc
add
mov
rorl
mov
jecxz
push
stos
sub
xchg
push
fisubl
das
out
out
js
mov
mov
cmpsl
and
pop
sub
sti
mov
hlt
jae
pop
popf
and
incl
mov
xor
cwtl
int
repnz
fwait
imul
and
sub
data16
outsl
mov
lcall
and
push
mov
negb
inc
inc
jne
xchg
movsb
mov
iret
mov
pop
fnstsw
xchg
jnp
lods
adc
xchg
add
orl
xchg
mov
sarb
mov
rcrb
and
insb
lret
pop
out
popf
mov
jne
add
ss
movsl
shrl
rorl
mov
insb
add
mov
std
in
ror
push
dec
fstpt
push
dec
xchg
scas
cmc
cmpsb
ja
xor
hlt
ljmp
je
repz
jbe
out
dec
mov
xchg
mov
sahf
and
xlat
push
movsl
adcb
push
sbb
scas
cwtl
or
push
notb
dec
mov
test
sarl
int
sub
loope
mov
dec
ja
jecxz
jns
imul
pop
add
inc
push
mov
or
leave
int
dec
or
out
fcoms
imul
gs
push
inc
loope
push
fst
and
and
dec
std
mov
lret
mov
popf
test
jle
jle
pushf
adc
push
or
sub
jbe
mov
push
inc
outsl
test
and
mov
mov
adc
leave
xchg
shl
adc
push
cmc
inc
outsl
js
test
cmp
mov
xor
stc
lret
push
mov
push
mov
andb
cwtl
adc
cmp
pop
xchg
idivb
adc
mov
or
cld
arpl
out
jge
cmp
or
in
mov
shlb
sub
outsw
lret
xchg
adc
sbb
rcrl
inc
push
adc
adc
cltd
in
setns
call
pusha
push
cwtl
push
inc
jo
lds
rcl
and
das
or
test
jb
fistps
mov
sbb
fistpl
inc
mov
cmpl
cmp
jge
sahf
mov
sbb
xchg
imul
pop
sar
or
not
ds
adc
subb
or
fwait
repz
pop
pop
clc
add
pop
cli
xor
add
sar
adc
arpl
mov
jg
movl
repz
mov
push
shlb
dec
sub
fstpt
pop
imul
adc
sbb
notl
lods
or
adc
push
les
or
jno
sbb
pop
imul
in
cld
push
xor
pop
and
dec
movsl
jge
mov
hlt
call
jne
xchg
cmc
imul
jle
or
cmpsl
test
int3
pushf
ds
or
dec
jecxz
popa
xor
iret
inc
sub
or
jle
or
lock
sbbl
cmp
call
or
xchg
add
cmp
mov
push
jl
les
lods
pop
in
dec
inc
cltd
jp
cmp
call
pop
adc
enter
ds
pusha
xchg
sbb
xor
push
or
add
aaa
dec
jge
lret
and
or
test
pusha
jbe
adc
sti
imulb
stos
and
les
xor
mov
lahf
sbb
ds
jno
sar
addb
cmpsb
jge
mov
xor
mov
leave
mov
mov
out
or
cmpsl
rclb
ja
dec
dec
mov
lret
sahf
add
cwtl
out
or
rorl
pop
xor
mov
fadds
out
pop
ljmp
fsts
lock
pop
or
imul
dec
stos
bsf
mov
mov
xor
scas
or
cmpl
jo
repnz
jno
imul
xchg
jae
daa
mov
ds
dec
jg
nop
sub
adc
dec
inc
mov
jmp
fcomi
je
add
and
or
push
std
int3
je
test
ret
jns
xor
iret
das
adc
dec
fwait
add
ljmp
outsb
xchg
add
xor
push
jecxz
nop
leave
leave
loop
and
cwtl
jl
fwait
add
inc
mov
repz
push
fists
xor
or
mov
insl
cmpsb
jge
std
or
mov
push
cli
pop
icebp
sub
dec
test
cs
and
add
sbb
movsl
pushf
aas
xchg
adc
jge
dec
jecxz
jp
mov
mov
jmp
sbb
cmp
es
ficompl
mov
popa
inc
sub
scas
sbb
dec
lahf
cmpl
imul
push
or
out
or
sbb
xchg
sub
inc
sbbl
popa
call
sub
ss
gs
and
mov
ja
neg
xchg
and
std
mov
dec
xor
jbe
pop
inc
popf
inc
divb
jae
repnz
pop
dec
cmp
jle
lea
xor
mov
andb
jno
inc
data16
push
bound
mov
mulb
xchg
rcr
movsl
imul
icebp
mov
and
sbb
fld
loopne
pop
sarl
add
adc
dec
daa
repz
cwtl
insb
inc
add
xchg
ficomps
dec
test
stc
mov
xchg
fwait
xor
mov
adc
mov
push
gs
pop
dec
mov
cmp
pcmpgtb
sarb
ret
repnz
stos
jmp
jge
inc
jno
sub
xorb
ja
jmp
adc
stos
mov
xchg
jp
sahf
pop
push
adc
dec
mov
jbe
mov
mov
call
jae
push
mov
mov
fucom
ljmp
pop
xor
inc
or
enter
dec
add
fdivrl
shrl
stos
inc
cld
insb
adc
mov
loopw
outsb
sub
xchg
mov
xlat
jbe
jnp
adc
cmpsb
xchg
insl
pop
loop
dec
add
push
subl
jmp
in
jg
clc
and
shl
hlt
dec
pop
jecxz
icebp
push
jg
and
push
jae
cmp
ljmp
cmp
push
repz
fdivrs
jge
loop
adc
mov
movsl
add
fnsave
ds
stos
fwait
in
or
stc
fxtract
add
xor
mov
pop
shll
sub
add
push
mov
mov
fucomip
sbb
adc
pop
aad
lcall
pop
xchg
test
aad
lock
mov
shl
jns
movsb
nop
popf
mov
out
in
inc
stc
fsubs
push
popa
data16
sub
adc
jnp
shl
fcoms
int
xor
fstpl
rcrl
push
popa
xor
sti
cmp
pop
mov
loopne
mov
jl
inc
in
andb
movsb
push
add
ds
push
sub
nop
sarb
adc
ja
dec
jle
jge
sbb
mov
cltd
push
movsb
sahf
and
aaa
stos
jns
cmp
pop
pop
fs
mov
imul
out
add
or
sarb
mov
inc
xchg
push
out
lock
pusha
clc
decb
or
cmp
in
insb
pop
xchg
ja
fdivrp
jnp
sbb
inc
push
xchg
sbb
push
sarb
sub
jg
push
leave
clc
mov
enter
std
inc
je
pusha
into
arpl
push
enter
push
or
jne
movsl
push
pop
repnz
cmp
pusha
test
iret
dec
lds
ret
scas
cmpsl
in
push
cltd
jbe
into
ss
pop
cmp
imul
cmp
imul
mov
jg
test
test
andl
cmp
pop
add
inc
sub
fs
mov
sbb
fmuls
movsb
outsb
aad
stos
fadds
and
inc
cmp
mov
ret
incl
outsb
cmp
insl
aas
int
scas
jnp
ret
mov
xchg
mov
mov
inc
sarl
dec
jo
mov
lock
inc
test
rcr
pop
add
dec
scas
ja
pop
fwait
dec
push
or
in
push
push
loope
cs
pop
push
xchg
adc
push
out
fstpt
rclb
icebp
dec
push
inc
nop
inc
or
in
jle
insb
pop
rcll
sub
mov
jo
inc
into
mov
adcb
mov
scas
mov
in
out
pop
dec
mov
or
fwait
and
test
ret
pop
xor
shll
mov
shrl
jle
add
inc
in
test
add
pusha
add
out
adc
clc
jns
shr
adc
pop
pop
adc
std
dec
mov
ret
xchg
cltd
roll
icebp
sbb
or
rcll
or
andb
daa
jae
lods
adc
mov
mov
pop
or
in
push
outsb
jg
or
lods
dec
jbe
add
fidivl
sti
imul
pop
icebp
xchg
jbe
movsl
cmp
pop
stos
add
testl
shlb
leave
aad
mov
xor
xchg
loop
push
andl
mov
pop
pop
xor
cmp
imul
les
scas
sub
xchg
dec
and
hlt
fisttpll
pushf
cmp
insl
dec
push
into
insl
add
mov
inc
cmp
out
dec
shrl
push
sub
sub
and
rorb
lds
data16
in
jbe
jns
push
js
jge
jg
jle
fprem
push
iret
inc
xor
das
hlt
push
xor
push
push
mov
stos
mov
dec
inc
imul
mov
jg
jle
adc
jae
shrl
pop
mov
and
mov
xchg
aam
mov
pushf
dec
aam
adc
sti
xlat
push
test
movsb
mov
pushf
shll
iret
xchg
fdiv
lcall
loopne
and
int
frstor
fildll
loope
cmc
lea
addr16
aam
movsb
mov
push
movsb
loope
into
outsl
in
movsb
lret
aad
lahf
pop
rorl
jmp
push
cmp
push
xorl
scas
icebp
dec
inc
fldcw
es
xchg
add
mov
mov
jnp
mov
mov
test
adc
mov
insl
movsb
outsb
fsubrl
cmc
popf
nop
mov
jmp
mov
add
push
les
lods
nop
inc
stc
fsub
mov
jmp
shll
mov
out
inc
popf
cmp
push
adc
cli
xchg
hlt
push
enter
das
pop
popl
lret
mov
ret
outsb
adc
pop
cmp
push
fnstcw
icebp
ss
mov
push
push
dec
jne
cmp
mov
cmpb
shrb
jge
lret
jmp
adcb
stc
xor
dec
sbb
and
and
push
sti
les
stos
jno
dec
in
add
fdivrl
adc
lds
or
test
cltd
inc
xor
fstpl
pusha
pusha
fadds
ss
sub
inc
sub
xor
arpl
mov
enter
dec
popl
and
jnp
mov
dec
in
dec
clc
clc
test
lock
mov
inc
int3
movsl
jmp
push
lea
loop
loopne
ret
lods
icebp
pusha
out
fstp
mov
roll
lods
sub
inc
lods
push
add
shll
ret
jb
mov
and
loopne
or
cmp
xor
xchg
pusha
test
or
in
rcrl
ret
push
push
movsb
jnp
push
lret
or
dec
sbb
mov
push
sahf
ror
data16
out
xchg
or
add
int3
clc
addr16
and
xchg
in
pop
mov
ds
jcxz
mov
cmp
inc
sub
adc
leave
jl
mov
mulb
shlb
xchg
xlat
pop
fisubrl
sbb
outsl
dec
aam
dec
pop
and
test
add
xorl
xchg
dec
dec
mov
mov
push
fcoms
bound
dec
pop
out
dec
movsb
out
aas
shl
sub
jns
lods
push
fimull
sbb
jbe
in
dec
imul
cmp
mov
insl
ja
pop
mov
iret
jae
jecxz
popf
fsubp
mov
and
in
mov
dec
or
cwtl
xchg
fcoms
adcb
mov
cwtl
sbb
inc
fwait
rdmsr
mov
and
mov
push
push
jmp
inc
inc
jl
imul
std
cltd
pop
in
subb
icebp
mov
xor
adc
push
xchg
scas
and
sti
std
mov
out
popf
leave
inc
mov
xchg
push
fadd
inc
jmp
or
dec
std
sub
lods
fstpl
sub
fadds
push
push
adc
shl
jg
and
ljmp
sahf
test
mov
fildll
scas
test
push
add
sub
xor
add
test
addr16
sub
xchg
faddl
je
adc
test
into
mov
add
pop
mov
push
aas
in
xor
inc
push
pop
and
push
inc
jmp
mov
dec
aad
data16
test
es
push
sub
mov
pusha
dec
mov
or
popl
push
int3
cmc
sbb
ds
xlat
scas
dec
mov
jp
scas
mov
pop
outsb
lcall
je
mov
push
gs
fs
out
xor
xchg
inc
ds
mov
dec
mov
push
test
fs
cwtl
lret
int
leave
add
loope
inc
fdivrs
dec
ja
pop
cmp
xchg
xchg
bound
mov
daa
filds
setp
lahf
pop
fbstp
repnz
inc
mov
test
leave
push
push
stos
mov
dec
add
mov
cmc
into
ljmp
jo
ret
call
dec
push
jmp
pushf
sub
push
aaa
movsl
xor
in
sbb
sub
lret
iret
sub
aad
sub
cli
adc
jno
ja
maskmovq
idivl
inc
stos
mov
rcr
inc
int
lret
sbb
dec
shl
push
lcall
or
push
jb
adc
push
pop
clc
test
rorl
xor
add
hlt
adc
cmp
pop
pop
out
imul
mov
pop
lret
sbbb
push
or
cwtl
cmp
adc
adc
lret
or
fildll
repz
repz
je
leave
pop
ffreep
mov
sub
das
cltd
add
jbe
imul
mov
cmp
mov
push
scas
repnz
mov
popl
or
lock
js
mov
adc
cmp
test
mov
fimuls
gs
jb
stc
lahf
imul
cwtl
fiaddl
sbb
or
mov
jmp
stc
movsl
dec
pop
sub
movsb
lcall
sbbl
xor
mov
mov
inc
jo
scas
rcll
or
insb
adc
ljmp
inc
inc
out
mov
mov
xor
lcall
aad
add
dec
lcall
sahf
sarb
rcrb
mov
add
gs
add
in
mov
and
push
inc
xchg
lds
rolb
sahf
lcall
cmpsb
jge
mov
mov
xchg
testl
pop
pop
sub
push
sbb
gs
rcl
cmp
shll
ja
sub
mov
pop
xor
dec
xor
xchg
cmpsl
aas
cli
pop
xchg
cmp
mov
xchg
inc
add
or
mov
push
hlt
cmpsl
add
std
mov
call
xor
cmp
in
push
mov
clc
mov
pop
jmp
cmp
out
in
out
cmpsb
xchg
orb
dec
xchg
aas
xor
jmp
fwait
sbb
push
inc
and
xchg
push
or
jae
cmpsl
cmpsb
mov
stc
cld
mov
cli
add
imul
lea
or
fdivl
cmpb
cld
mov
mov
adc
fdivr
pop
hlt
pop
push
fidivs
fmull
ljmp
mov
lea
fisttps
sbb
or
adc
nop
mov
dec
test
or
inc
xor
cmpsl
inc
sbb
roll
inc
add
mov
dec
loopne
loop
pop
xlat
sti
jecxz
inc
maskmovq
fbld
in
cmpsl
fcoms
dec
nop
repz
jp
mov
xchg
lea
jnp
fbld
push
push
shrl
daa
and
mov
mov
or
cmp
inc
movsb
inc
hlt
adc
pop
test
pop
rcr
push
xchg
mov
in
std
jl
les
inc
push
push
enter
adc
cmp
inc
or
xor
sub
cltd
push
adc
dec
shl
push
addr16
mov
rorl
popf
daa
shl
aad
int
xchg
sbb
ret
imul
jle
lret
pop
sub
js
xor
hlt
add
out
sub
call
ljmp
pop
icebp
push
cmp
mov
pop
outsl
xor
sub
imul
loop
sbb
dec
mov
xor
jae
mov
sti
adc
lods
mov
sbbb
out
in
or
outsl
std
cwtl
sbb
loope
cld
and
pop
leave
mov
sub
push
xchg
fdivr
or
imul
pop
call
shll
lret
jb
mov
inc
pop
adc
inc
mov
add
insl
jmp
mov
inc
lea
xor
lahf
mov
bound
inc
pushf
lods
ljmp
mov
aas
das
test
mov
mov
das
loope
mov
mov
xchg
cmp
pop
push
outsb
adc
movsl
aas
das
orl
fs
inc
and
repnz
sbb
cmc
sbb
cmp
cmp
movsl
repnz
inc
add
add
lahf
or
js
in
js
dec
fisubrl
out
mov
mov
mov
pop
push
inc
xchg
stos
push
fimuls
jae
in
jecxz
cmc
arpl
std
xchg
sahf
movb
mov
shr
xchg
ljmp
aad
outsl
jbe
jno
mov
jbe
sti
popa
cltd
cmp
mov
aam
dec
inc
pushf
call
lds
mov
pop
mov
sub
shr
std
cli
mov
out
xchg
data16
aam
jb
popa
and
push
inc
sbb
mov
cmc
cmp
sbb
sbb
inc
xchg
pop
mov
sbb
outsl
sub
or
ds
sub
and
mov
mov
push
mull
test
out
push
scas
je
cli
loop
std
inc
mov
fwait
mov
pop
popf
inc
or
fcomps
bound
or
in
fstps
cld
jne
mov
jl
in
lret
and
aas
inc
cmp
lret
outsb
cltd
xchg
xlat
orl
ret
lds
fsubs
imul
or
idivl
insl
xchg
cmp
cltd
push
jge
inc
je
mov
jne
sub
fwait
pusha
int3
or
das
loope
sub
aam
iret
sbb
pop
push
cli
cli
push
sbb
mov
nop
dec
repz
iret
cmp
and
adc
int
out
jecxz
xchg
imul
call
mov
cli
and
cmc
pop
sahf
jns
lods
sbbb
push
xor
mov
clc
or
cmp
sbb
cmp
dec
enter
and
pop
mov
movsl
test
jl
xor
in
mov
mov
sti
and
xchg
lret
ljmp
popa
aad
push
repnz
jne
aam
loop
repnz
mov
adc
test
test
and
sbb
movsb
cmp
stos
cmpsb
fs
aam
add
push
mov
clc
test
out
out
movsb
xor
rorl
aam
xlat
sub
cmp
or
adc
mov
xchg
push
mov
in
push
es
mov
mov
popa
clc
inc
popa
inc
xchg
stc
mov
pop
dec
int3
xchg
ret
or
push
inc
es
movsl
mov
and
adc
rolb
lea
and
call
out
dec
test
inc
call
iret
push
sahf
dec
int
add
dec
call
pop
inc
fcoml
jmp
xor
into
ret
test
xor
and
mov
sbb
push
and
push
cwtl
nop
or
add
cmp
out
pop
addl
sbb
mov
mov
shrl
jnp
xlat
dec
sbb
outsb
in
lret
mov
sbb
cwtl
pop
test
ds
sbb
inc
iret
push
mov
push
shll
scas
call
ds
or
sbb
dec
insl
gs
out
and
cmpsl
fistpl
inc
out
xor
loope
sub
jae
incb
pop
and
test
rolb
sbbb
pop
jo
test
dec
mov
cmp
rolb
and
int
xchg
push
cmp
jno
inc
jp
test
sub
insl
icebp
rcrb
jb
ja
clc
jle
adc
cmp
pop
hlt
repnz
jo
rcl
dec
std
jno
cli
nop
pop
or
and
pop
and
inc
push
insb
je
test
sub
mov
repz
mov
push
pop
jge
push
xor
ljmp
bound
insl
imul
outsb
fadds
pop
push
scas
pop
stos
pop
daa
mov
adc
mov
ds
mov
into
lret
inc
pop
inc
adc
sub
push
nop
or
and
lahf
lahf
imul
cmp
sbb
lahf
pop
in
fisubrs
call
cmp
inc
or
pop
mov
std
push
jp
rcll
xchg
mov
inc
push
loop
or
push
testl
test
inc
lea
pop
pop
push
cltd
cmp
int3
jbe
and
icebp
push
xor
lret
in
jnp
push
pop
xor
jl
xchg
pop
aaa
sub
sub
in
les
inc
xor
outsl
mov
jns
out
xor
inc
sub
mov
or
loope
out
cli
iret
or
enter
xlat
enter
loop
nop
mov
into
mov
push
fisubs
or
adc
inc
cmp
cmpsb
xchg
pushf
xchg
sub
cmp
test
dec
xchg
xchg
xchg
stos
test
sub
sub
push
push
fbld
dec
ret
xchg
mov
addr16
popl
scas
repz
adcl
fsubl
cmpsl
aam
pop
clc
cld
pop
pop
mul
cltd
test
dec
jae
test
jl
popa
stos
xlat
gs
or
popf
xor
or
fsub
mov
fldenv
aam
ja
xor
mov
cld
or
icebp
mov
jg
dec
mov
xchg
adc
add
or
dec
inc
add
rorb
jge
out
sti
enter
cmpsl
cmpb
in
sbb
cltd
fsubs
lcall
push
lock
xchg
xchg
icebp
mov
cmpb
andb
jp
pop
cmpsb
rorl
dec
ret
pop
mov
push
in
jbe
add
mov
scas
int
aad
push
and
inc
aam
inc
fnstsw
xchg
xor
jbe
dec
sub
mov
lds
scas
ret
out
je
je
xchg
pop
lcall
in
push
mov
pop
mov
pop
mov
adc
sub
cmpsb
push
sahf
lods
xchg
rorb
jo
cwtl
icebp
sub
outsl
lods
cltd
sbb
inc
lods
xor
add
jnp
pop
outsl
jge
clc
inc
cli
popa
mov
adc
dec
jbe
cltd
insb
mov
cmp
std
outsl
int
xor
pop
fwait
xor
mov
and
or
inc
ret
dec
stos
sbb
fwait
mov
lcall
sub
dec
je
xor
popf
jg
negb
mov
add
xor
adc
ror
sti
lods
cmp
out
and
mov
jmp
shrb
test
push
repz
or
and
inc
loopne
and
mov
cmpsb
repz
dec
xchg
fmull
jno
fs
inc
lods
cmp
jecxz
push
mov
jne
sbb
ror
xchg
std
cmp
out
and
jl
sahf
sbb
xor
cltd
or
lahf
leave
mov
mov
loope
xchg
lahf
adc
daa
mov
jmp
add
outsl
lahf
adc
mov
test
mov
xor
out
cmp
push
inc
xchg
push
in
jb
scas
inc
cli
stc
testl
int3
jne
xchg
shl
dec
movsl
dec
add
scas
jnp
iret
adc
add
sub
fisubrl
cmp
pop
into
xor
jbe
and
jmp
push
push
pop
in
jle
inc
add
adc
int
cld
add
mov
sub
xor
push
mov
inc
pop
jg
inc
sbb
cmc
push
push
mov
pusha
sbb
sub
loope
not
cmpsb
inc
aas
adc
rcll
xor
daa
insb
aam
popf
test
ja
mov
pop
test
ljmp
dec
rclb
mov
idivl
mov
mov
arpl
pop
jbe
xor
hlt
gs
dec
cmp
xchg
jle
imul
loopne
movsb
push
sbb
inc
ja
jmp
push
pop
sar
mov
push
jl
cld
test
repnz
mov
xchg
loop
mov
mov
int3
pop
sahf
or
mov
or
push
in
in
lret
cwtl
inc
and
fcoml
inc
call
fiaddl
bound
negb
jmp
pop
jno
pop
scas
imul
sub
test
mov
push
aam
lods
and
shrl
daa
and
shlb
lea
and
mov
xor
imul
jbe
test
inc
dec
dec
sub
push
push
jge
xchg
dec
mov
pop
fsubrl
fsubp
xchg
mov
stos
mov
ljmp
pop
lds
in
add
mov
mov
mov
lock
sbb
dec
xor
push
push
dec
cmp
add
pop
push
rolb
push
je
in
xchg
popa
mov
mov
into
cmp
add
aaa
test
mov
loopne
pushf
cld
imull
add
jae
xor
and
push
jle
sub
cwtl
js
outsb
xchg
mov
lods
jbe
xchg
mov
mov
cmc
testb
cmpsl
pop
mov
lods
jno
cwtl
insb
popf
outsl
sti
cmpsb
popa
lds
lret
adc
xchg
pop
int3
mov
pop
xchg
fildl
adc
inc
or
pop
lcall
pop
sbb
xchg
lock
and
pop
and
mov
xor
sub
lret
cmc
inc
jge
or
jle
jmp
or
cltd
imull
loope
pop
ja
mov
popa
jmp
xor
or
iret
dec
cmp
mov
ds
iret
cld
lret
xlat
iret
adc
test
cmpsl
cli
lret
and
aaa
mov
and
leave
xor
ret
xchg
mov
out
mov
in
jo
cltd
dec
icebp
jnp
xlat
movsb
mov
sub
push
cmpb
push
test
in
xor
xor
sbb
outsl
xchg
xchg
adc
sub
jge
or
xchg
inc
dec
add
or
jo
repnz
cwtl
test
push
cmp
mov
inc
nop
inc
mov
xor
sbb
out
jmp
fwait
lahf
mov
mov
adc
jb
clc
fsubl
lret
or
jne
lret
add
clc
mov
outsb
popf
ja
mov
push
xor
cmp
pop
jno
inc
rolb
xor
pop
adc
pop
xor
fucom
mov
cmp
jno
dec
outsl
int
jo
repz
add
shlb
shlb
xchg
mov
push
cli
test
ss
sahf
mov
mov
xchg
inc
mov
jle
js
xchg
or
or
fsts
fdivr
fs
scas
je
cmp
dec
pop
sahf
and
pop
ss
or
fwait
mov
mov
pushf
out
in
ss
pop
xchg
mov
int
xor
push
mov
sbb
mov
sbb
push
mov
addl
insb
fldl
xchg
inc
mov
movsl
sbb
scas
mov
push
lds
mov
movsb
jnp
mov
push
les
cmp
sub
addr16
xchg
arpl
add
push
push
fstpl
ret
and
dec
jb
test
std
stos
mov
bound
push
add
lods
dec
add
imul
pop
ds
repnz
idivl
das
aas
rcr
std
pop
mov
sbb
aaa
stos
add
jl
in
jl
mov
fucomp
data16
and
shl
das
mov
ja
sbb
or
test
dec
inc
or
jo
cmp
fnstcw
cltd
push
cmp
rol
fstpt
push
stos
daa
xor
or
imul
inc
sub
push
stc
jo
out
mov
adc
scas
xchg
push
dec
xchg
dec
push
lcall
rolb
dec
jbe
fwait
dec
fistpll
sub
mov
mov
mov
insl
scas
push
sbbb
dec
mov
filds
ja
mov
rcl
repnz
xchg
cmp
cmpsl
mov
stos
add
lcall
pop
divl
jge
icebp
and
ficoms
stc
gs
outsl
sub
mov
fwait
cmc
jns
xchg
insl
jl
scas
cmp
sbb
clc
popa
nopl
xor
sbb
inc
vpaddusw
push
movsl
cs
cltd
sbb
fcmove
or
cmpsl
jl
jg
pop
push
lds
cmp
sub
push
inc
mov
loop
aaa
sub
push
mov
loop
sti
dec
mov
sbb
std
aaa
push
icebp
adc
push
adc
add
ljmp
sbb
and
xorl
out
shll
jo
jmp
jo
ja
cltd
aam
jne
adc
jno
outsl
lea
sub
mov
lock
mov
adc
cmp
sbb
dec
sbb
outsl
mov
pop
jmp
movsb
mov
lea
jl
add
data16
rorl
repz
push
or
in
inc
jae
ja
add
and
sub
adc
add
fldcw
fadd
jecxz
sub
cmpsb
ljmp
dec
sahf
dec
pop
in
arpl
xchg
add
fneni(8087
sbb
xor
cmpsb
enter
repz
and
xchg
push
jbe
nop
jle
lahf
shlb
mov
sbb
iret
js
out
cli
or
add
enter
sbb
test
pop
ja
push
idivl
mov
popa
gs
push
jns
xchg
xchg
popa
hlt
or
mov
dec
bound
jmpw
add
push
push
mov
add
jnp
xchg
mov
mov
and
add
lret
data16
arpl
inc
sahf
pop
and
int3
push
mov
jnp
push
push
test
add
fistps
sarb
lret
data16
xor
mov
enter
in
fs
bound
mov
adc
fdivrp
popa
mov
out
pop
cmp
mov
xchg
mov
inc
pop
out
cmc
xchg
adc
xchg
mov
shlb
stos
push
fwait
cmp
jbe
jle
push
pop
jp
dec
stos
cltd
incb
daa
add
mov
cmp
mov
or
dec
iret
adc
insl
fldt
out
mov
pop
imul
int
jle
out
dec
lcall
xchg
sbb
mov
adc
ficoms
add
ret
and
dec
adc
sub
cwtl
mov
pusha
popa
xor
scas
xlat
lods
sbb
pop
xchg
sbb
push
shlb
out
xchg
fisubs
pop
cmp
sub
in
dec
pop
or
icebp
scas
push
stc
scas
psllw
inc
arpl
lods
pop
data16
dec
lods
mov
rolb
mov
fwait
in
sbb
adc
fsubr
jg
xor
xchg
push
and
je
and
mov
subl
cmp
pop
sbb
sarl
cld
sub
push
xor
das
orl
aam
cwtl
inc
and
pop
sbb
mov
adc
pusha
lret
push
or
xchg
jle
popf
xchg
fwait
mov
mov
mov
pop
add
cmp
jns
insb
xorb
pushf
inc
mov
adc
xor
call
sbb
fcompl
xor
hlt
sahf
enter
mov
xchg
lret
cmp
notb
imul
popf
loop
dec
pop
push
inc
jbe
and
repz
test
cmpsl
mov
int
pop
pop
sub
dec
stc
outsl
test
jo
and
mov
movl
ljmp
inc
and
inc
sbb
push
xchg
push
adc
icebp
cmp
sbb
pop
daa
sub
jno
xchg
sub
ficomps
add
into
xchg
test
mov
jmp
push
dec
mov
xor
xchg
jne
jne
pushf
add
sahf
ficompl
ss
xchg
cmp
mov
push
cmc
pop
jl
jp
lcall
sbb
lret
repz
aam
dec
jmp
es
cld
data16
js
cmp
cmc
mov
es
adc
aaa
pop
add
mov
cmpl
fistl
inc
cmp
lret
gs
outsb
int
mov
stos
out
mov
jo
xchg
out
clc
movsb
inc
mov
push
out
sub
movsl
cs
inc
dec
mov
dec
dec
mov
lds
mov
and
ss
pop
sbb
inc
sub
mov
andb
notb
mov
cmc
shlb
out
inc
xchg
jg
xchg
push
je
pop
push
push
and
push
cmp
call
adcl
push
sbb
dec
mov
mov
aam
mov
rol
js
shrb
pop
dec
in
sub
iret
pop
enter
push
dec
in
stos
out
fcompl
jo
fwait
out
testl
push
jno
ret
test
loopne
sti
mov
lret
or
mov
cmpsb
push
mov
cwtl
mov
adc
mov
sub
adc
mov
cwtl
cld
lock
and
jbe
addr16
xor
pop
jnp
aas
aaa
lret
int3
gs
arpl
pop
add
push
sbb
sarl
dec
lods
push
inc
add
popf
fsubrl
cmp
add
push
es
idivb
icebp
sbb
cs
push
je
inc
adc
sub
iret
dec
loopne
xor
and
mov
xorl
arpl
les
movsb
lahf
iret
mov
adc
hlt
gs
out
jp
lret
pusha
daa
add
ffree
pop
gs
sbb
roll
xchg
sbb
test
sahf
jecxz
jecxz
je
xchg
dec
int3
jne
and
xlat
popa
test
icebp
scas
hlt
fdivrs
lea
push
shlb
inc
jp
mov
push
cmp
xor
fs
rcll
inc
sbb
dec
mov
stos
jmp
js
push
mov
mov
mov
add
daa
stos
sbb
push
and
addl
and
mov
fstps
gs
mov
add
rcl
jp
xchg
sbb
or
xchg
jle
mov
sbb
fsubs
and
pushw
mov
ss
and
fnsave
pop
out
loopne
mov
sahf
push
sub
or
js
sub
inc
iret
xchg
or
outsb
xchg
fnstenv
rcll
mov
lahf
lea
push
in
cs
mov
popl
pop
lods
out
pop
dec
mov
dec
insl
aas
jp
int
fwait
arpl
ret
mov
mov
inc
repnz
clc
outsb
add
xor
pop
sahf
ds
jle
insb
xchg
xchg
test
push
xchg
aaa
push
xor
pop
out
dec
bound
jne
cs
js
mov
ret
in
pop
mov
and
dec
cmp
push
mov
outsl
adc
xlat
sbb
scas
push
inc
dec
jl
adc
or
mov
clc
jb
pop
cmpsl
jae
xchg
pop
jne
mov
sbb
fs
push
push
xor
fildl
jge
das
scas
and
mov
pusha
sbb
add
push
add
xchg
xorb
cmp
popa
jnp
fmull
jp
or
fldt
fiaddl
aad
mov
xchg
xor
mov
ljmp
fdiv
call
pop
pop
xchg
add
mov
loope
pop
fimuls
sbb
ljmp
ja
and
into
aam
add
cld
cld
cwtl
test
inc
xlat
xor
pop
mov
mov
std
and
out
xor
jmp
orl
pop
std
xchg
mov
cmc
enter
pop
add
cmpsb
jle
jmp
dec
sub
push
mov
adc
data16
push
xlat
and
pusha
ret
das
mov
xor
jecxz
mov
push
insb
ds
jae
adc
in
mov
repz
sti
clc
mov
push
div
data16
fwait
or
adc
das
jno
pop
dec
pop
pmulhw
push
mov
sub
or
test
and
sbb
sub
sub
dec
std
fcompp
inc
and
xchg
fildll
enter
xor
fidivl
incb
xor
sub
scas
shll
xchg
stc
cli
pop
xchg
sub
adc
outsb
cwtl
add
sbb
fsts
sbb
dec
jno
outsl
pop
jg
pop
mov
sub
test
addl
imul
popa
inc
mov
sti
fsubr
mov
jb
in
inc
mov
mov
adc
loope
jae
add
daa
or
ja
data16
in
cmp
mov
mov
pop
mov
xchg
cld
cmp
jecxz
cwtl
sti
pop
outsb
push
lret
test
ja
mov
fwait
scas
dec
adcl
mov
arpl
stos
out
cmpsl
sub
cmc
in
stos
scas
xchg
sbb
mulb
scas
mov
nop
sub
cmp
or
jnp
call
out
add
cmp
loopne
mov
xor
mov
movsb
cmp
dec
sbb
sbb
sbb
cmpsb
adc
inc
mov
enter
push
xlat
pop
test
xchg
fdivrl
popf
fisubl
and
out
stc
mov
and
pop
xchg
jae
outsl
sub
and
jns
lods
fsubrp
fistl
mov
add
insl
or
outsl
aad
dec
into
js
loopne
cmpsl
and
jbe
scas
add
stos
int
jmp
fcoms
pop
mov
cmp
jmp
out
or
pop
add
jge
ret
jo
push
cmc
push
xchg
inc
aaa
mov
sbb
pusha
pop
cmp
push
jb
pop
sbb
nop
fwait
mov
and
bound
push
add
and
push
mov
pop
popf
pop
pop
add
out
in
mov
dec
xor
push
inc
lods
mov
xor
jp
negb
dec
pop
pop
hlt
idivb
cltd
cmc
imul
ret
loop
pop
sbb
scas
mov
movsb
loop
lahf
out
xchg
imul
sub
mov
lahf
mov
imul
roll
inc
mov
lods
std
fnstcw
adc
fucomip
add
enter
repz
cmp
outsl
sbb
ret
push
fcmovnbe
fsubrs
xchg
adc
push
dec
xchg
lret
in
daa
sarb
jge
ss
not
push
testl
aas
aaa
cmp
in
movsb
mov
cmp
mov
stos
cmp
aad
cs
inc
lock
popa
sub
pushw
mov
xor
addl
ds
in
push
pop
mov
lret
ljmp
rcrb
lret
cwtl
mov
jno
add
mov
icebp
dec
pop
cld
div
cmp
xor
cmp
je
add
sub
mov
cwtl
cmpsl
push
int3
push
sarb
shll
aad
stos
dec
fstl
testl
lret
pusha
inc
cmp
imul
outsb
ret
sbb
test
int
inc
adc
pusha
imul
pop
das
mull
movsl
mov
xlat
imul
or
mov
push
fiadds
mov
fstps
scas
push
leave
aas
into
addb
test
fisttpll
pop
push
adc
mov
push
rcrb
imul
jo
fisttpl
lahf
xchg
sbb
add
inc
sbb
inc
rcrb
loop
pusha
push
ret
inc
and
arpl
inc
mov
mov
jbe
pop
jb
out
out
and
imul
and
nop
adc
das
cmc
test
add
sbb
aam
test
hlt
test
dec
ja
mov
xchg
das
mov
movsb
popa
pop
bound
mov
xor
inc
adc
lock
dec
cmp
or
idivl
cli
pop
push
push
pop
fldt
adc
add
gs
movsl
incl
pop
lock
push
decb
stos
sub
sub
cmpsl
std
lret
add
lahf
mov
out
jno
push
sub
and
push
je
ficompl
jle
aam
hlt
pop
jecxz
ret
pop
lcall
and
aam
dec
out
dec
xchg
scas
jae
js
sub
mov
add
adc
mov
hlt
inc
push
testl
bts
inc
outsl
pop
add
or
and
push
out
insl
loope
push
add
scas
or
orb
sub
xor
jne
sbb
sbb
cs
loop
dec
les
les
jns
inc
dec
jo
inc
faddp
adc
sbb
dec
cmp
cmp
aas
lret
fstps
loop
jb
nop
xchg
jbe
cmp
adc
out
xorl
mov
repz
jnp
lods
dec
jbe
inc
testl
and
movsl
dec
in
push
adc
stos
mov
push
ds
std
add
movsb
leave
enter
xchg
pop
dec
jbe
xchg
stc
pop
pop
insl
jp
mov
adc
push
fs
add
mov
insl
clc
std
ds
mov
les
push
xor
cmp
call
mov
push
dec
cmp
sub
jecxz
or
and
popl
lods
pop
lods
pandn
arpl
in
lods
insl
mov
mov
add
mov
pop
cld
fists
mov
dec
stos
xchg
mov
mov
mov
fsubl
das
add
mov
out
lea
adc
jae
xor
aaa
sbb
insb
ret
lahf
fs
shlb
adc
lods
sbb
mov
data16
leave
and
je
and
je
icebp
lods
mov
cmp
loopne
stc
push
cmp
jne
push
and
pop
dec
lret
mov
or
xchg
xlat
daa
jnp
sbb
sbb
push
and
into
cmp
mov
sarb
xor
adc
leave
sbb
push
xchg
loop
mov
sub
stos
cmp
insl
mov
inc
inc
outsb
add
cld
aad
ljmp
test
cltd
ljmp
inc
outsb
xchg
jp
jecxz
pop
repz
or
dec
rorb
rcrb
fwait
jle
inc
dec
xchg
pop
outsl
leave
adc
mov
add
rorb
xor
jns
repnz
and
pop
hlt
mov
adc
lcall
inc
daa
pop
lahf
add
xor
lret
add
imul
jecxz
insl
push
inc
jae
jecxz
or
xchg
xchg
xor
push
push
rcll
cmp
xchg
pop
add
lret
jae
inc
adc
cmp
xor
lcall
adcl
jno
nop
mov
adc
cmpsb
dec
insb
or
test
mov
inc
xor
and
lock
mov
lds
xor
add
js
cmpsl
lret
scas
outsl
ja
mov
inc
xchg
mov
movsb
cltd
cs
je
jg
pusha
fidivrs
out
aam
xchg
cmpsb
cmp
filds
fcomps
lods
add
popf
xor
out
popf
cmp
cmpsb
int
mov
outsl
iret
movsb
lods
dec
in
or
mov
aad
cltd
mov
div
in
or
dec
outsb
adc
xchg
sub
iret
in
cli
adc
jp
mov
sub
fidivrs
sbb
int
mov
push
movsl
insb
js
ficomps
addr16
sub
subl
mov
aad
push
jbe
orb
loop
stos
xchg
mov
xchg
test
ret
iret
fdivr
jp
xchg
stos
cmp
add
je
popa
dec
or
je
das
add
sbb
cmp
das
into
inc
ret
iret
add
mov
xchg
adc
pop
sub
ret
in
mov
jnp
std
ljmp
in
inc
fnstenv
cli
jle
adc
pop
fnstsw
xchg
cli
cmpsl
cmp
scas
shll
push
fs
bound
lock
xchg
jo
imul
repz
adc
fisttpll
push
loop
pop
jecxz
push
jno
push
jnp
adc
adc
aaa
mov
dec
jne
cmp
inc
add
xor
outsb
movsb
cmp
or
imul
mov
test
xor
inc
hlt
and
inc
add
adc
push
rcrl
mov
fstps
inc
mov
mov
cmp
cmp
jo
subl
cmp
mov
shrb
dec
cmp
loop
lock
out
mov
pop
inc
sbbb
adc
lds
mov
arpl
xorl
iret
mov
pop
and
add
pop
sub
mov
insb
les
push
pushf
push
xchg
lods
cli
mov
mov
mov
aam
bound
cli
push
mov
push
jmp
repnz
and
sub
movsb
mov
es
jecxz
sbb
test
jp
imull
test
rorb
xchg
mull
sub
jns
sub
sbb
cmpsl
sub
sub
xor
xor
dec
cmp
mov
push
push
in
mov
mov
push
push
adc
and
inc
into
mov
in
incb
in
nop
sbb
cld
push
shl
push
int3
cmp
inc
inc
sub
sub
adc
cmpsl
aad
pusha
lods
xchg
jg
and
lret
mov
inc
jae
test
push
mov
fadds
fildl
adc
push
fwait
push
mov
xchg
jne
push
push
xchg
pop
and
push
scas
dec
scas
and
daa
sbb
cli
sub
mov
xchg
rcll
pushf
jp
or
pushf
dec
div
hlt
cmp
or
dec
xchg
or
inc
lret
and
mov
orl
xor
nop
push
push
inc
movsl
imul
dec
jno
ljmp
adc
pand
add
stos
outsb
jle
xchg
sbb
into
mov
jo
xchg
mov
xchg
cmp
imull
push
jne
adc
std
cwtl
in
pop
and
in
jnp
mov
jmp
enter
inc
add
mov
adc
fucomp
cmp
pop
aam
and
fwait
test
shll
and
mov
pop
imul
pop
jae
rolb
aam
in
inc
std
jne
pop
jae
rcrb
jns
inc
pop
lahf
outsl
mov
xchg
mov
lock
sub
xchg
mov
pop
xchg
xchg
out
xchg
adc
add
xor
adc
cld
fstpl
cltd
jmp
xor
out
mov
out
cmp
lds
stc
incb
test
add
lds
mov
scas
push
js
outsb
add
push
sbb
xchg
imul
sbb
push
cmp
push
add
test
inc
fwait
cmp
ds
mov
pop
lcall
add
outsl
sbb
stc
sbb
mov
inc
xor
jl
cmp
pusha
jmp
cmp
xchg
pop
inc
and
mov
enter
icebp
mulb
mov
xor
add
jne
or
ss
test
push
adc
push
xor
mov
int
pushl
sbb
inc
out
push
mov
pusha
cld
push
jle
pop
add
popf
int
add
mov
mov
out
aad
jb
mov
inc
xchg
push
push
js
dec
inc
rclb
adc
mov
push
inc
mov
out
fisttpl
cmp
pop
fidivs
pop
push
fadd
jge
push
fidivs
mov
dec
mov
in
xchg
cltd
dec
stos
into
xchg
dec
repz
xchg
xlat
jne
cmp
out
out
jnp
and
add
pop
stos
cmc
mov
int3
jne
lahf
sbb
mul
pop
fildll
inc
jbe
sbb
insb
stos
sbbl
mov
push
repnz
movswl
mov
call
jmp
lds
dec
out
ja
movsb
pusha
loopne
mov
out
push
or
sub
out
adc
cli
mov
add
add
adc
in
sarl
jmp
mov
pop
mov
push
push
push
sub
adc
cmp
and
mov
rorl
jnp
jle
mov
int
int3
jle
pop
mov
ficompl
lcall
xchg
hlt
rolb
jmp
and
cmp
setnp
xchg
movsl
fwait
jne
pusha
cmc
push
test
inc
fistpl
and
aaa
sub
jns
jmp
pop
sbb
pop
fldcw
sbb
sbb
sbbb
push
push
and
inc
adc
sub
pop
inc
and
add
js
data16
xor
addl
lods
ret
rorb
stos
xlat
outsb
les
sbbl
ja
dec
lds
or
dec
sbb
call
pushf
mov
in
jns
loopne
dec
mov
dec
je
mov
xor
xor
leave
dec
fninit
idivl
hlt
xchg
mov
aad
negb
push
gs
fiadds
inc
movsb
arpl
lret
pop
pop
lods
std
dec
scas
or
repnz
rcll
mov
push
fbstp
and
rol
or
fisubrs
inc
cmp
lahf
es
xchg
xchg
lret
test
repz
lcall
fs
jnp
inc
xor
mov
xchg
lahf
and
loope
inc
cs
mov
push
cwtl
add
adc
and
add
movsl
adcb
mov
icebp
shll
push
or
push
sbb
bound
cmp
jo
push
es
jno
fstpt
clc
adc
add
aas
pusha
lods
lea
jmp
xchg
and
mov
decl
and
mov
inc
adc
push
jb
lds
push
nop
out
jb
lcall
test
loopne
je
xor
pop
roll
pusha
add
adc
xchg
scas
xchg
xor
lahf
adc
dec
or
pop
nop
imul
stos
mov
mov
jmp
cmc
mov
out
rcrb
or
into
arpl
xchg
ret
fisubrl
cld
mov
fildl
sub
mov
inc
aad
mov
je
js
xchg
fsubr
and
mov
pusha
dec
push
jg
into
out
push
pop
outsl
outsb
mov
dec
pop
scas
fildll
into
adc
mov
sub
arpl
push
sbb
cmp
cltd
pop
mov
dec
mov
and
cmp
dec
mov
dec
and
dec
and
lcall
icebp
pop
push
mov
jecxz
leave
fs
jmp
xchg
mov
mov
lret
push
ret
pop
outsb
add
xchg
fsincos
adc
rcrb
fistl
inc
push
or
dec
xlat
and
xchg
loopne
mov
cmpsb
pushf
push
cltd
xor
jbe
shll
nop
pop
jecxz
pop
jmp
lcall
sbb
hlt
cmp
mov
fs
sahf
outsb
js
movsl
scas
out
xchg
mov
hlt
cmp
mov
outsl
dec
jmp
sub
out
movb
sub
addr16
push
cmp
test
orps
shl
aaa
dec
cmp
sbb
mov
mov
vmovshdup
xchg
add
cmp
lcall
mov
dec
fistps
mov
cwtl
mov
fistps
ret
loope
cmpsl
aas
cmp
inc
jno
js
dec
cltd
arpl
add
outsb
sub
inc
adc
mov
enter
dec
int3
popa
ror
jns
fimuls
inc
fistpl
loope
mov
adc
inc
out
adc
leave
cmp
insl
pop
adc
xchg
lock
xor
repz
fmul
adc
jp
sub
sub
fs
pushl
jae
mov
sbb
decl
sti
lods
mov
gs
xor
adc
push
xor
push
sub
sbbl
test
jge
lcall
jmp
adc
lods
ja
lcall
in
jl
hlt
xorb
mov
loopne
adc
test
push
xchg
ret
daa
xor
movsl
xchg
ret
aad
popa
sbb
push
sub
and
sahf
mov
push
icebp
xor
mov
fcompl
xor
ljmp
cltd
mov
sub
push
mov
scas
mov
jbe
push
addl
pop
scas
mov
ficoms
mov
mov
pop
clc
xchg
fbstp
lahf
jl
push
pop
dec
adc
in
sub
and
or
or
ja
jl
data16
shll
cmp
adc
ds
adc
out
fs
in
lods
or
lret
data16
jge
insb
ljmp
cli
into
xchg
aaa
mov
xchg
xchg
jnp,pt
mov
stc
fucomip
faddl
ret
rcl
push
cmpsb
sysexit
fiadds
cmp
lret
push
push
cwtl
sub
cs
out
sub
mov
and
mov
and
mov
mov
mov
jbe
inc
push
dec
pop
leave
mov
je
test
jb
or
dec
gs
fldt
outsl
xor
mov
and
mov
loope
inc
dec
or
push
push
push
pop
out
ret
add
push
and
test
daa
push
push
aam
sahf
sbb
mov
push
or
and
push
lea
sbbl
push
dec
fdivrl
sub
add
test
push
fs
push
leave
cmpl
xor
push
pushf
jne
stc
push
or
mov
xchg
mov
xor
sbb
mov
hlt
aam
mov
cwtl
dec
movsl
and
shlb
insl
movaps
pop
jae
test
mov
and
ja
sbb
and
sbb
jno
cmp
mov
xchg
insb
push
decl
push
xchg
mov
es
xlat
jno
fcomi
ljmp
imull
sarl
int
call
lds
mov
inc
popf
sbb
dec
daa
sahf
jne
out
shl
popf
lahf
mov
int3
je
into
std
je
lcall
popa
call
mov
outsl
pusha
xchg
outsl
mov
pop
mov
imul
scas
daa
adc
pop
xchg
and
out
repz
mov
jmp
dec
push
into
adcl
lock
sbb
fsts
pop
insb
push
ffree
mov
fsubrl
pop
adc
sbb
nop
sub
rorb
mov
cmp
outsb
movsb
repz
lahf
inc
mov
jecxz
push
pop
push
movsb
das
cmp
xchg
loopnew
and
shl
repz
sub
sub
mov
int3
ffree
bound
popa
lods
mov
popf
out
js
outsl
ja
mov
jae
shll
repnz
dec
push
test
jp
out
lds
imul
add
lahf
nop
cli
mov
popf
insl
cmp
mov
cmp
mov
out
stos
mov
inc
xchg
mov
sub
xchg
jecxz
or
in
pushf
lea
jno
pop
jle
inc
xor
xorl
std
repz
mull
adc
mov
push
pop
jge
stos
insb
loopne
icebp
mov
inc
push
sub
inc
push
push
sbb
outsb
mov
and
fucom
aad
mov
jecxz
ljmp
sub
add
add
rclb
ret
jge
movsb
aad
push
mov
mov
roll
and
mov
out
mov
out
ret
pop
fs
popa
cmp
mov
pusha
call
adc
or
mov
rcr
call
cwtl
pop
push
dec
sti
sbb
inc
adc
or
jne
testl
pop
pop
popf
adc
mov
test
jp
adc
int
add
mov
cs
jle
pop
xor
lcall
or
mov
push
xchg
mov
aaa
lods
jbe
aam
jg
inc
fucomi
xor
add
xor
sub
out
js
dec
mulb
jno
cwtl
mov
rcrb
or
std
stc
and
mov
mov
jnp
les
ror
daa
pop
fwait
sub
cmp
roll
int3
arpl
inc
xor
mov
adc
mov
sub
ss
testb
hlt
iret
lds
cltd
mov
sarl
pop
in
lds
xor
das
pushf
popf
cwtl
push
sbb
inc
xor
mov
and
std
cld
cli
stc
mov
sahf
sbb
repz
jmp
or
inc
push
outsb
stos
sub
or
mov
repnz
jle
push
inc
aad
ljmp
dec
in
fsts
dec
out
fstl
add
jbe
jae
and
das
cmp
xor
insl
pop
jl
cld
push
xor
int
cwtl
out
pop
jp
dec
add
loop
add
cmp
cmp
xchg
jge
jno
aam
cmp
outsl
ja
and
xor
push
adc
cltd
repnz
pop
call
ljmp
xor
jg
push
iret
aaa
and
xor
and
subb
adc
in
mov
fs
pop
dec
ja
xchg
push
push
inc
movsl
pop
dec
sti
push
mov
inc
xchg
adc
xchg
xor
repnz
cmpb
or
ss
lahf
mov
js
jg
cwtl
lret
outsl
cmp
xchg
lret
nop
xchg
jp
es
pop
ss
cli
cmp
pop
cmpsb
mov
mov
mov
add
mov
imul
lret
sbb
imul
mov
inc
pop
outsb
cmp
imul
sbb
and
xchg
pop
pop
shr
inc
ret
std
jmp
pop
jno
adc
arpl
insl
popf
dec
lret
sub
in
or
cld
test
mov
fcomp
mov
enter
lods
sub
lcall
and
fcomps
int
mov
out
aam
push
repnz
outsl
or
ret
in
aas
loopne
jo
mov
je
lods
lret
jp
test
adc
stc
dec
out
mov
fmul
push
xchg
pop
xchg
ret
mov
mov
add
or
jb
and
in
int
xor
mov
and
outsl
xchg
xlat
adc
fildll
into
sub
pop
pushf
stos
test
int
inc
xchg
cmp
daa
pop
push
push
pop
mov
sub
loop
cmp
repnz
jb
fs
add
jge,pn
inc
imul
jl
push
dec
arpl
and
jno
xor
sub
cmp
mov
mov
stc
sub
jg
scas
mov
or
cmpsb
adc
fldt
call
push
lea
or
icebp
mov
setl
nop
mov
mov
divl
cmp
mov
lret
cmp
dec
fisubrs
bound
rorl
pushf
push
dec
xchg
sbb
push
cmp
pop
add
mov
pop
sbb
xor
sub
test
push
ret
cmp
sub
sbb
pop
ss
push
sub
pop
sbb
push
xor
loop
pop
imul
pop
or
push
xchg
in
jmp
push
jmp
out
mov
cmpb
fidivrl
xchg
push
mov
mov
icebp
in
mov
mov
or
mov
imul
xchg
les
mov
ss
inc
mov
insb
ljmp
sub
lret
lds
sbb
ljmp
push
jle
sbb
jbe
adc
xchg
dec
mov
stos
or
push
loop
frstor
push
mov
scas
fcoml
sbb
lahf
jno
fstl
leave
pop
push
pop
xchg
call
shrl
mov
fnstsw
xlat
add
mov
dec
mov
pop
xchg
dec
jnp
cmpsl
je
push
jo
xchg
cld
mov
daa
xchg
out
mov
xor
jns
inc
pop
dec
cs
loopne
xchg
movsl
inc
dec
cld
jo
mov
arpl
shrl
or
pop
jb
dec
lods
pushf
mov
test
mov
and
jno
sbb
std
std
sub
add
aad
jne
push
inc
test
dec
lahf
jmp
push
push
daa
nop
mov
shrl
andb
dec
add
and
and
adc
pusha
add
mov
lea
push
xor
cmp
push
mov
movsb
pop
xchg
dec
enter
and
mov
sub
mov
sbb
mov
mov
lods
adc
into
push
xor
xchg
daa
cltd
mov
lret
fwait
push
ret
cmp
mov
xor
insb
jno
repz
loope
sub
xor
xor
repz
pop
movsl
cmp
sbb
notb
loop
inc
sbb
out
or
jo
outsl
jg
out
adc
push
mov
lcall
cwtl
or
lea
xlat
fiaddl
loop
jmp
adc
mov
inc
sbb
movsl
sahf
lods
pop
rcrb
hlt
in
andb
mov
shlb
mov
mov
repz
icebp
xchg
xor
mov
sub
dec
mov
cmpsl
cli
int
arpl
push
mov
xor
jb
movsb
sub
ljmp
testl
jo
cld
repz
decl
ss
sub
adc
jne
cmpl
arpl
aad
cli
shll
mov
mov
sahf
mov
test
sbb
xchg
out
jle
xor
stc
mov
shll
mov
push
mov
in
rorl
xor
mov
call
xchg
rol
repnz
ret
loopne
std
pop
pop
lock
jbe
insl
or
inc
ja
adcl
mov
ja
mov
fidivl
fiaddl
fnclex
outsl
cli
mov
dec
cmpsb
adc
xchg
out
mov
loopew
sbb
add
and
cld
sub
mov
je
or
iret
les
scas
rcll
mov
mov
in
dec
sub
mov
jne
jno
andb
jmp
je
lret
pop
outsl
mov
sbb
popa
inc
push
pop
push
rorb
scas
mov
fildl
xor
out
enter
cmpb
lahf
mov
ret
scas
cld
scas
mov
js
fstpl
and
loopne
sub
mov
mov
test
add
pop
pop
mov
jg
imull
mov
mov
clc
jge
test
sub
push
aad
ljmp
mov
ret
in
add
lods
cmp
jns
mov
jmp
mov
outsb
push
pop
add
mov
cmpsl
adc
dec
mov
mov
xchg
xcrypt-cfb
cmpsl
mov
fldenv
jge
mov
adc
cmp
add
test
pop
popa
push
shlb
ds
mov
push
push
and
mov
add
xchg
in
xor
push
inc
notl
imul
and
leave
jmp
call
jge
push
xor
ds
or
adc
int3
hlt
or
clc
sub
icebp
xchg
pop
xor
sub
or
and
lds
xchg
adc
jp
xchg
push
inc
les
dec
or
icebp
sbb
jg
enter
sbb
adc
mov
inc
mov
leave
xor
and
insl
popa
mov
sahf
out
ljmp
lahf
mov
orl
faddl
sbbl
adc
dec
mov
lcall
cwtl
and
jmp
pop
push
in
add
aas
jge
ss
sub
add
gs
ror
dec
sub
arpl
aad
ja
push
nop
call
cmp
xchg
pushf
or
mov
fdivrs
sub
push
scas
or
cmpsb
mov
out
sti
mov
push
mov
xchg
fnsave
in
out
mov
mov
adc
mov
test
mov
inc
adc
or
sbb
scas
mov
mov
add
test
dec
sub
std
or
cwtl
das
pushf
mov
lret
mov
divl
or
xchg
sub
mov
shll
stos
aas
jae
fcoms
push
xor
loope
add
adc
or
jp
cmc
jne
push
push
push
xchg
aam
in
jp
jg
sub
dec
and
jne
and
push
mov
mov
subl
mov
and
mov
add
shl
fwait
add
xor
imul
push
fstpl
inc
jmp
dec
mov
call
test
adc
pop
cmp
sub
jne
or
cmc
shrb
push
jecxz
and
mov
inc
sbb
pop
fistpl
xor
mov
pop
mov
adc
addb
jne
xchg
imul
jp
push
xchg
fmulp
jb
lcall
sub
jno
lret
stos
arpl
fdivrs
add
push
int3
rcll
push
fstpl
mov
cli
shlb
sub
push
imul
je
pop
dec
sbb
push
int
cmpsl
dec
sbb
lea
std
cmpsl
sbb
mov
inc
dec
movsb
sub
test
mov
pop
push
ds
fwait
push
int3
test
jo
inc
mov
mov
lret
je
mov
pushf
clc
xor
adc
pop
test
loop
movsl
add
das
roll
ficompl
rcll
clc
xchg
jp
inc
movl
lret
lock
or
mov
orl
fistl
sub
push
sub
push
pop
mov
jb
sub
in
fs
out
xchg
push
mov
movsb
leave
add
mov
call
mov
leave
outsb
jg
xchg
mov
hlt
ret
lock
add
popf
mov
sub
subl
push
mov
mov
and
divl
fcompl
add
fldenv
je
dec
pop
sahf
add
jg
xchg
sub
sub
mov
xchg
xchg
or
sub
pop
mov
push
dec
and
es
in
lock
je
rcl
lea
dec
sub
cmpsl
cmc
pushf
dec
cmp
fildll
insl
scas
pop
xlat
loop
frstor
sti
sahf
mov
inc
or
insl
leave
sub
and
ret
add
sub
inc
addr16
or
scas
fidivrs
mov
jp
mov
xchg
push
fadd
fsts
jl
and
movsb
jg
in
xor
add
xor
sub
cmp
pushf
inc
mov
repnz
sarb
cs
into
or
adc
xor
icebp
mov
fbld
jecxz
jns
loope
sbb
inc
sbb
jmp
pop
out
je
stos
mov
pop
pusha
mov
cltd
push
jl
imul
mov
cmpsl
into
pop
std
inc
mov
jb
mov
in
lods
es
pushf
enter
push
pop
or
jno
mov
mov
mov
adc
mov
xor
jb
adc
sub
rcrb
jmp
in
ret
mov
and
dec
fs
in
mov
push
paddsw
ss
pop
fdiv
scas
repnz
lock
rcll
jle
out
jp
icebp
adc
and
fistpl
orl
rcll
jmp
or
clc
xchg
and
dec
push
orb
mov
imul
push
or
ds
push
repnz
repnz
dec
mov
mov
mov
mov
into
jb
push
mov
and
sbb
mov
sub
mov
das
jecxz
fwait
dec
jg
pop
sbb
out
mov
add
vdivps
jbe
fidivrl
pop
sbbb
adc
push
sub
or
mov
divb
mov
imul
fidivrs
loop
rorl
push
or
pop
jo
sub
mov
inc
dec
sti
jno
mov
push
in
mov
adc
add
xor
cwtl
enter
or
xchg
cld
pop
stos
std
inc
dec
mov
out
xchg
mov
inc
int3
dec
out
ds
out
add
adc
push
inc
in
dec
pop
or
pop
aam
push
xchg
clc
movsb
xlat
iret
xor
mov
pop
jne
dec
mov
xor
mov
cmpl
and
pop
lret
push
js
out
in
outsl
and
sti
mov
mov
adc
push
sub
mov
fiadds
jl
inc
test
cltd
dec
cmpsl
xor
sub
scas
dec
rcll
in
insl
and
movsl
dec
ljmp
lcall
dec
into
and
loop
ja
or
jmp
push
dec
xchg
outsl
mov
lret
out
js
push
fildll
mov
mov
mov
inc
imul
lods
add
ja
data16
inc
shlb
in
pop
pusha
push
sbb
dec
fimull
or
pop
lea
mov
icebp
faddp
cmp
imul
stc
adc
test
sbb
pop
adc
int
mov
sahf
cmpsl
pushf
adc
cmpsl
rcl
in
mov
lcall
jns
imul
loope
stos
and
pop
aas
movsb
ficoml
cltd
in
xorb
mov
mov
mov
lea
xchg
enter
ja
pop
scas
pop
mov
andl
shlb
jl
dec
idivb
mov
jmp
and
inc
pop
mov
popf
fdivl
dec
loop
pop
xor
sub
nop
mov
lods
pop
sti
stc
and
mov
pop
cmp
lahf
ljmp
mov
push
mov
adc
push
mov
sub
dec
xchg
pushf
pop
fistl
aad
bound
sbb
inc
stos
in
and
das
xchg
xlat
cwtl
jae
inc
fisttpl
inc
xor
push
mov
inc
cltd
add
and
jns
int
shlb
es
push
adc
pop
mov
xchg
icebp
push
pop
mov
sti
lahf
movsl
or
faddp
mov
das
mov
and
sahf
push
fs
aas
shrb
xchg
pop
inc
lahf
push
ret
and
jnp
cmp
aam
cmp
lock
and
and
mov
jmp
add
push
and
mov
and
scas
or
dec
xchg
xor
pop
mov
mov
sti
mov
xor
andb
push
dec
pop
push
inc
stc
jns
push
sub
or
mov
fnstsw
push
mov
xchg
js
aaa
gs
xor
mov
push
data16
mov
cmp
or
xchg
mov
sbb
cmp
in
rcr
mov
mov
cmp
add
sbb
push
push
and
fadd
cld
pop
xor
in
or
mov
cs
rcr
mov
int
xchg
das
repnz
lds
mov
fidivl
pop
cmpsl
pushf
sahf
mov
fnsave
mov
out
cmpps
mov
rolb
pop
test
rclb
or
add
sub
inc
jp
test
out
movhlps
cmp
push
cs
mov
sub
sbb
mov
cmpsb
push
mov
cmp
cld
cmp
or
and
ficoms
in
mov
gs
inc
or
test
mov
fstpl
and
xchg
arpl
jg
jno
cmc
push
rorl
cmp
ds
sub
xchg
outsb
ficoms
dec
orb
jmp
lds
incl
sub
or
push
mov
dec
mov
push
add
std
dec
xchg
cmp
mov
pop
enter
push
or
sbb
push
add
les
popa
jb
xchg
mov
dec
jo
movsl
jl
dec
fsubrl
outsb
or
lock
popa
rclb
into
pop
leave
dec
sbb
adc
mov
dec
mov
fldenv
mov
xchg
movsl
xchg
xor
fstps
jb
cmpsl
mov
adc
bound
stos
divl
in
sub
sub
call
das
cwtl
pop
outsb
mov
jb
pop
imul
fcmovu
jge
in
lods
push
jb
lock
mov
bound
arpl
xchg
push
xchg
shlb
sub
fwait
jb
cmp
hlt
adc
pusha
xor
cwtl
ss
sub
je
or
jge
xchg
movsbl
fmul
or
lods
sub
mov
shlb
mov
ret
or
in
call
test
xchg
mov
xchg
in
mov
jmp
popf
push
daa
dec
icebp
inc
out
imul
push
and
aas
shlb
jg
or
adc
movb
cmp
loop
pop
gs
mov
push
mov
mov
sub
aas
in
arpl
pop
cmpsb
inc
lods
fidivl
lea
fst
mov
aam
scas
mov
adc
out
xor
and
push
popa
adc
stc
pushf
fmull
loope
and
in
mov
mov
es
sti
dec
outsl
mov
add
adc
stc
adc
sahf
mov
pop
icebp
movsb
mov
mov
out
orb
lock
sahf
or
push
ret
cmp
dec
cmp
jg
jmp
sarb
out
pop
ret
xorl
push
jl
xchg
jnp
jae
cs
leave
arpl
pop
mov
pop
sub
mov
sbb
sbb
cmp
test
jno
inc
sub
mov
mov
and
pop
jne
hlt
movsl
push
fisubrs
sahf
dec
loop
xchg
or
ja
scas
shll
add
adc
jae
mov
adc
cltd
add
cmp
sub
push
cmpsb
mov
stc
pop
std
fildll
or
outsb
scas
or
cmc
or
das
add
or
paddsb
loope
add
ficompl
sbb
xor
and
lods
out
jecxz
inc
lods
les
lahf
inc
ret
sub
mov
xor
add
jg
in
idivl
dec
sub
insb
push
lock
sub
add
sarb
fisubl
mov
push
icebp
adc
push
scas
cmpsl
arpl
sub
cmpsl
aam
pop
cwtl
sbb
arpl
jge
test
sbb
or
push
xchg
pop
sbb
lahf
fists
fcoms
in
aas
lahf
add
arpl
jo
add
xchg
inc
dec
std
inc
rclb
outsl
adc
and
imul
scas
jl
xchg
ret
jmp
outsl
mov
rolb
cltd
movsb
mov
lret
data16
loopne
or
and
push
shrb
cmp
and
dec
push
hlt
sbb
pop
enterw
stc
sbb
pop
fcompl
mov
mov
add
js
pop
mov
aaa
test
rclb
mov
add
test
sbb
decl
sub
data16
mov
sbb
xor
cmc
push
xchg
in
inc
shlb
in
loop
cltd
outsl
test
pop
and
push
or
push
lcall
mov
icebp
arpl
repz
test
sarb
or
je
add
xchg
sbb
sbb
imul
mov
mov
jns
inc
mov
ret
leave
mov
repz
sub
leave
stc
loope
inc
dec
stc
lea
dec
out
enter
sub
push
jnp
rorl
add
inc
out
jge
lcall
mov
clc
in
aam
fs
pop
xchg
sbb
pop
insl
aad
and
mov
jle
pop
mov
rcpps
out
shlb
mov
daa
popf
loopne
loopne
and
dec
ss
or
or
adcb
popl
pop
pushf
mov
stos
pop
in
lea
pop
cs
lahf
addl
fisttps
les
xor
sahf
pop
loop
dec
repnz
dec
dec
loope
leave
inc
mov
lods
out
icebp
ds
lea
cmp
sbb
lcall
cmp
cmp
jo
das
cltd
push
and
cli
mov
xchg
loop
or
outsl
sbb
out
lret
push
mov
popf
fistps
cld
add
jns
sub
repz
mov
inc
repz
sbb
xor
dec
loope
sbb
jo
mov
sub
mov
data16
jae
inc
xchg
mov
pop
rcl
fimull
dec
mov
push
aaa
adc
or
pusha
out
lea
mov
mov
inc
leave
mull
inc
mov
jae
outsl
mov
sub
dec
cmc
jbe
fnstcw
cmp
sbb
incb
mov
fwait
pop
pusha
xor
ds
inc
adc
mov
jb
xor
and
sbb
mov
out
popf
into
inc
inc
dec
pop
jge
leave
clc
xor
jge
push
push
shlb
jne
in
out
out
ljmp
add
je
sbb
lods
pop
into
dec
or
lods
push
pushf
xchg
ja
sub
les
adc
scas
sub
cmp
inc
insb
adc
rclb
jl
sub
pop
jmp
sub
mov
lock
jmp
addr16
aad
xchg
pop
adc
xchg
clc
pop
sbb
ljmp
mov
into
fcomi
cmp
mov
pop
inc
jno
or
cli
stos
mov
jl
lods
stc
xchg
les
add
rclb
pusha
pop
and
test
push
mov
mov
or
ds
mov
or
fstpt
out
das
roll
stos
jp
in
ss
and
jnp
xor
insb
fwait
das
popa
movsl
add
mov
enter
xor
aas
xchg
insl
mov
mov
push
pop
out
jl
lea
adc
or
push
inc
jno
cmp
jmp
sbb
stos
out
xor
push
push
adc
in
and
sbb
push
or
dec
and
cs
mov
mov
push
cmpb
inc
adc
mov
fsubr
int3
push
sub
add
mov
adc
scas
add
mov
inc
std
fsts
mov
pushf
xor
dec
mov
cwtl
ret
dec
mov
nop
dec
test
add
test
arpl
pop
into
add
icebp
loope
in
or
pop
cmc
xor
test
mov
sahf
and
shll
imul
rcrl
sub
fsts
in
push
cltd
jmp
xor
movb
inc
mov
jp
push
push
and
outsb
fnstcw
ror
cwtl
push
roll
adc
pop
and
xor
push
dec
and
cltd
mov
dec
push
setne
pop
lock
dec
mov
xor
push
xchg
mov
pop
insl
std
push
stos
test
dec
cmp
xchg
inc
mov
jmp
mov
add
adc
and
jb
pop
ss
lahf
pushf
add
test
not
adcb
ljmp
xor
clc
testb
lock
ss
daa
shrl
fs
mov
outsl
scas
out
rorl
mov
inc
fcmovu
out
xchg
stc
stos
bound
call
mov
sub
cmp
jns
pop
iret
jmp
sbb
mov
stos
mov
push
sbb
sbb
push
mov
je
into
jmp
mov
xor
xchg
pop
dec
adc
sub
sub
xchg
jle
mov
mov
loope
mov
fwait
cmp
push
sbb
cmp
dec
lahf
push
mov
mov
mov
push
adc
fs
sub
imul
fcmovu
iret
cmpl
cmp
push
add
lods
add
push
xor
mov
dec
mov
ret
push
clc
inc
xchg
inc
arpl
xchg
leave
ficoms
pusha
lods
dec
stos
int3
scas
les
and
lret
add
mov
ret
mov
lods
decb
sbb
sti
andb
scas
cli
adc
cmp
push
or
and
pop
adc
testb
orb
flds
out
into
sbb
test
lret
cmp
mov
inc
mov
push
xor
mov
fdivrl
pushf
mov
xchg
nop
mov
sbb
call
mov
cli
cmpsb
sbb
faddl
enter
dec
test
adc
mov
sbb
xor
testl
xor
addr16
xchg
scas
mov
push
push
push
xorb
mov
in
mov
sub
jle
add
iret
rorl
ss
push
sub
popl
popa
push
and
sbb
into
push
xchg
xchg
or
les
fcoml
test
cs
mov
dec
adc
push
sub
xchg
jmp
shll
pop
push
cmp
mov
add
in
xor
popa
les
sbb
rolb
test
jae
mov
aad
sub
dec
dec
data16
xchg
push
insl
xorl
mov
mov
fistpl
clc
inc
ljmp
loopne
inc
adc
adc
jbe
popa
stos
sbb
pushf
insb
xchg
or
bound
cmovne
sub
je
scas
out
sub
loopne
mov
dec
js
mov
fs
fimull
sahf
mov
inc
cmpsl
sbb
mov
jmp
jns
xchg
popf
addb
lock
pusha
jae
mulb
sub
jmp
fdiv
cmpsb
mov
mov
xorl
sahf
icebp
jbe
cmp
ss
jo
lods
popaw
jne
push
pop
sub
mov
xchg
les
adc
pop
lock
mov
push
movaps
movsl
pop
pop
repnz
pop
cmc
aaa
add
rcl
bound
sbb
pushf
js
xchg
mov
or
jge
fdivl
js
ss
push
addr16
jmp
lahf
or
push
pop
push
push
cmp
fcoms
pop
out
inc
pop
inc
aas
ret
movsb
inc
imul
jo
nop
add
fldpi
and
xlat
icebp
shrl
sbb
test
in
sbb
jmp
jo
subl
mov
mov
add
ja
mov
les
fistpl
jo
mov
mov
jae
shll
inc
enter
sub
xchg
xchg
xchg
xchg
push
testl
pop
pop
inc
pushf
jp
sub
jns
inc
add
mov
cld
mov
jb
je
inc
sub
ds
jns
imul
jp
pop
push
mov
push
mov
ds
ret
push
mov
pop
insl
push
adc
mov
adc
dec
cmp
dec
test
loop
mov
jge
add
push
push
pop
dec
cmp
hlt
push
mov
mov
mov
mov
mov
dec
cmp
test
and
jmp
mov
sub
and
xchg
scas
push
sub
pop
loop
push
cmpsl
aam
hlt
in
mov
orl
inc
out
repz
inc
xor
xlat
mov
fstpl
cmpsb
push
sub
arpl
inc
sahf
faddp
stc
push
xchg
insl
sbb
test
sub
inc
scas
stos
sbb
xchg
bound
jle
outsb
jl
icebp
mov
test
dec
and
mov
scas
fcompl
jge
mov
push
cwtl
mov
ffree
sub
test
loopne
mov
xor
je
pop
int3
sarl
test
nop
dec
mov
mov
adc
jge
adc
inc
test
adc
movsb
cwtl
add
cmp
cmc
xor
cmp
sub
xchg
adc
jge
adcl
in
loope
mov
lods
loopne
xchg
nop
xor
push
daa
lock
dec
loopne
or
ss
dec
sahf
fnstenv
inc
sub
stos
mov
je
bnd
nop
adc
xor
adc
ja
scas
mov
sahf
bound
pop
cmp
mov
mov
aas
push
stos
cltd
iret
sub
and
or
outsl
cmp
sti
xor
jg
pop
pop
inc
pop
mov
out
mov
jb
cmp
and
xor
out
push
xlat
pop
and
leave
push
push
xchg
mov
in
xchg
pop
stos
dec
sbb
dec
push
cmp
in
das
scas
outsl
shl
jae
imul
insl
adc
ja
xchg
mov
dec
cmpsb
out
or
mov
ja
aas
mov
lahf
jle
push
cmp
add
sarl
outsb
cmp
int
push
hlt
pop
adc
lcall
sbb
hlt
cwtl
shlb
jg
add
lcall
lret
addr16
mov
xchg
inc
push
sbb
jl
add
mov
dec
xchg
andl
loopne
out
sbb
mov
sub
or
fsts
test
xor
jo
cld
push
loopne
shll
pop
outsl
in
pusha
call
test
insl
lds
or
jne
xor
mov
in
test
rolb
cmp
out
mov
cwtl
inc
fcomp
add
jns
mov
popa
xchg
stos
out
adc
pop
lods
xchg
jl
addr16
push
lcall
cmpsb
lods
mov
cmp
add
insl
cmp
es
ret
rcrb
jnp
jnp
jg
mov
repz
mov
push
cmc
imul
call
mov
andl
cmp
xchg
add
aam
loope
cmp
xchg
enter
filds
adc
ja
fistpl
pop
cwtl
sub
sti
mov
out
testl
scas
iret
xchg
xor
jecxz
out
out
std
push
dec
pop
addb
xlat
cs
out
jb
dec
push
repz
add
mov
or
push
mov
jle
lods
cmp
daa
cmp
insb
mov
pop
xchg
rcrb
loopne
outsb
xlat
es
or
xor
adc
lods
lods
fistpll
xor
int
inc
scas
pop
xor
repnz
call
push
cmpsl
dec
out
mov
clc
call
mov
out
out
fcom
std
repz
fiadds
add
push
mov
push
jo
repz
mov
jbe
iret
push
adc
inc
and
pop
ss
dec
fmull
mov
cmp
cmc
pop
stos
cmpsl
addr16
pop
rol
jge
pop
jmp
js
jle
xorl
dec
adc
mov
mov
ja
jne
fcmovb
hlt
lcall
cmp
xlat
repnz
lret
push
jge
add
pop
cmp
sti
in
cmp
cmp
pop
in
es
negb
jg
orb
jmp
int
mov
push
xor
popa
add
cld
ljmp
push
pop
adc
inc
cld
into
scas
lea
mov
test
mov
subb
mov
out
xchg
ret
mov
jns
subl
jno
mov
into
ficompl
pusha
out
pop
xor
dec
mov
dec
or
jmp
mov
cmpsl
dec
push
sbb
into
jge
stc
pop
outsl
mov
in
or
cmpsb
mov
sahf
pop
ds
mov
cmp
sbb
cmp
xchg
sbbb
faddl
xlat
pop
mov
or
fistps
pop
mov
push
cli
mov
data16
push
sub
rcll
mov
fiaddl
push
lods
lcall
loope
mov
lock
sub
shll
mov
adc
jp
rorl
lods
xchg
ja
xchg
addl
pop
js
add
enter
jle
repnz
mov
outsb
push
xstore-rng
cmpsl
xchg
stc
sbb
mov
xlat
sub
jb
adc
outsb
and
icebp
xlat
adc
add
mov
enter
xor
lcall
fs
stos
pop
aas
add
popa
inc
adc
cmp
subb
push
ficompl
jae
dec
pop
sti
mov
scas
dec
xchg
cmpb
vmwrite
stos
aas
jg
sub
mov
inc
shrl
inc
fs
andb
push
sub
cmp
mov
sbb
fnsave
mov
fcompp
lahf
sub
adc
inc
dec
mov
subb
aam
test
dec
cmp
out
repz
aam
aas
rolb
cwtl
sub
out
mov
dec
mov
fstpt
insb
cli
mov
sub
je
push
lock
mov
jg
xor
mov
mov
sbb
daa
movb
add
fildll
mov
aas
and
loop
mov
cmc
lret
in
shrb
lret
outsb
mov
dec
pop
mov
stos
clc
push
lock
cltd
sahf
aas
jle
rcrl
cltd
aad
shlb
xor
out
dec
and
adc
jno
bound
mov
mov
adc
mov
sbb
es
push
mov
cmp
adc
xchg
add
mov
cmpsb
in
dec
insl
fs
popa
ficoml
mov
movswl
pop
pop
int3
iret
js
jnp
into
out
stos
mov
movsl
dec
scas
bound
sub
and
popf
dec
test
sub
xor
loope
mov
jp
popa
ds
ja
inc
inc
xchg
or
bnd
loope
and
fistl
rclb
mov
jp
jne
xchg
cltd
push
cmpsb
faddl
jno
daa
or
cmc
xor
jae
sub
inc
insl
data16
cli
add
mov
in
xchg
inc
push
sahf
daa
shlb
test
add
push
adc
add
fs
sbb
push
js
xchg
mov
inc
cli
or
dec
je
add
lahf
mov
scas
mov
in
xchg
cmc
and
mov
fs
sbb
and
pop
pop
cmp
notb
loopne
orl
jg
and
mov
out
mov
iret
aam
push
jnp
mov
push
dec
stos
pop
fcompl
mov
aam
idivl
repz
shr
and
or
mov
notb
lock
pop
lahf
push
mov
or
lea
scas
les
rorl
stc
push
xor
pop
mov
pop
mov
jae
ss
mov
das
mov
ret
mov
rclb
testb
stos
adc
adc
lahf
jl
and
dec
data16
in
mov
test
dec
cmovae
adc
filds
add
push
xor
mov
popf
add
repnz
nop
jne
inc
inc
pop
loope
adc
mov
lods
xchg
repnz
mov
add
inc
inc
dec
xchg
out
jb
xlat
mov
int
mov
adc
mov
leave
mov
fcoms
sub
sbb
push
in
mov
stc
and
rcll
scas
cwtl
scas
dec
add
and
das
dec
rolb
cmp
adc
jmp
mov
sub
sbbl
outsb
mov
rcl
hlt
mov
aaa
out
imulb
mov
imul
xchg
into
mov
and
push
push
xor
push
lret
mov
dec
jno
push
pop
pusha
ss
pop
ret
ds
je
dec
jl
out
pop
in
mov
mov
pop
cli
dec
mov
jb
mov
inc
gs
stos
push
mov
lar
inc
loopne
clc
add
js
jmp
cli
mov
xchg
mov
rclb
shlb
cmpsl
push
mov
push
cmp
jl
adc
loop
data16
xor
ja
clc
aas
std
in
sbb
xchg
dec
in
stc
lret
adc
rol
repz
fistl
cmp
pop
mov
xchg
insl
rorl
add
push
idivl
sub
ret
ret
or
addr16
sub
lret
or
mov
or
or
popf
push
xor
mov
push
xchg
jnp
mov
divb
in
and
mov
or
fs
andl
sbb
sub
mov
in
cmp
xchg
push
lahf
mov
mov
je
lea
clc
call
xchg
dec
test
and
jmp
mov
or
push
xor
mov
stos
sbb
mov
stc
ss
lea
std
inc
mov
mov
je
stc
stos
mov
inc
and
movsb
pop
jo
loop
jno
or
sub
mov
xchg
and
outsb
pop
xchg
ficompl
xchg
cmp
jae
xor
arpl
pusha
sub
in
stos
or
in
mov
call
popf
rcrl
out
das
lret
mov
pop
xorl
iret
add
xabort
inc
push
pop
aad
ljmp
aam
push
jmp
push
sub
pop
xchg
push
sbb
xor
repnz
ss
sub
loopne
test
andb
pop
stos
mov
adc
cmp
jl
ret
cmpsb
insb
sub
sbb
mov
adcb
sub
jl
and
outsb
roll
push
mov
fcomip
roll
push
adc
mov
fs
pop
pop
imul
xor
mov
sbb
fadds
inc
dec
xchg
inc
stos
push
iret
pop
mov
stos
addl
mov
stos
lock
sub
scas
in
repnz
and
jae
xor
lods
push
inc
mov
mov
fwait
stos
sbb
mov
pop
xor
roll
push
mov
xchg
popf
out
outsb
dec
pusha
stc
adc
add
push
mov
mov
loop
mov
lret
mov
or
mov
dec
inc
and
add
ficomps
add
in
mov
sbb
mov
shll
push
and
or
aaa
mov
shrl
pop
mov
push
pop
pop
add
and
lret
hlt
and
leave
inc
in
fsub
jecxz
insl
cmp
daa
jo
adc
lahf
cs
pop
sub
cmp
repnz
clc
mov
cld
ds
adc
jb
push
fidivl
push
and
jne
jp
jle
jle
push
pop
xlat
mov
fcom
mov
mov
xchg
inc
sub
fmull
test
push
inc
mov
into
dec
sti
or
mov
jmp
push
dec
push
sub
dec
sub
loop
aas
xchg
inc
nop
rcl
sub
or
or
mov
inc
cwtl
lds
xchg
cltd
in
mov
nop
pop
jbe
mov
mov
in
jmp
inc
shl
adc
shrl
xchg
mov
popf
mov
add
in
xor
pop
cmp
jno
add
dec
mov
notb
mov
and
pop
and
clc
ss
fcmovne
push
xchg
cmp
jne
sahf
adc
pop
rorb
test
sub
push
cmp
jae
dec
xchg
jns
inc
fildll
ds
pop
inc
push
mov
mov
in
pop
movb
nop
jb
sub
lret
call
jns
push
sbbb
pop
jle
enter
andb
dec
dec
stos
outsl
testb
mov
bnd
cltd
pop
call
or
and
inc
jecxz
mov
sbb
out
addr16
in
push
push
push
mov
or
xchg
ficompl
std
xchg
dec
cmp
cmp
jl
sub
loope
cltd
shrl
insb
dec
and
stc
add
bound
dec
cmp
sub
xchg
prefetchnta
or
insl
lock
mov
and
push
loope
ja
or
and
loop
lahf
adc
add
mov
or
addr16
aas
mov
sub
es
clc
enter
xor
sbb
outsl
inc
jp
lds
mov
push
js
insl
arpl
in
loop
faddl
sub
popa
aam
lods
cmc
scas
int
scas
push
xchg
mov
push
jnp
or
fistpll
hlt
gs
push
es
repz
aad
dec
repnz
repnz
xchg
xchg
repnz
jnp
cmpsb
jmp
push
jno
sub
cmp
cmpsl
add
jb
mov
cmp
mov
jae
push
sbb
aad
cmpsb
js
push
repz
dec
cli
and
push
jg
cmp
cmc
loopne
adc
inc
jle
xchg
and
jecxz
ficoml
in
and
adc
movsb
sbb
xlat
shlb
or
test
addr16
jne
lcall
stos
lods
push
ja
arpl
push
sarb
jg
mov
stos
xchg
loopne
mov
popf
adc
fsubrp
pop
sub
fildl
jo
jne
cmp
jo
lahf
outsl
sub
lret
cli
inc
mov
jg
or
cmp
imul
dec
or
dec
sub
icebp
fdivrl
pop
iret
or
mov
loopne
jnp
lahf
es
cmpsl
and
xchg
sbb
scas
mov
xor
movsl
cmp
jno
fldl
clc
mov
in
cs
xchg
int3
add
cmp
rorl
dec
inc
ljmp
test
adc
aas
cli
or
mull
loopne
popa
shrl
cmc
sbb
mov
imul
test
xchg
popf
adc
leave
dec
pusha
test
push
adc
decb
push
push
mov
dec
fadds
jge
push
je
std
ficoms
lods
out
xor
cwtl
test
and
and
jno
fdivl
in
test
int3
mov
pop
xor
inc
testb
test
mov
jnp
sbb
add
dec
xor
or
shlb
cld
mov
movsl
jb
je
jbe
dec
sarb
ret
mov
lcall
in
mov
jmp
push
adc
ja
leave
mov
xchg
sub
inc
pusha
sar
movsb
push
fstpt
sub
lret
hlt
das
sbb
sbb
imul
icebp
mov
aam
repnz
sbb
sub
lahf
mov
sbb
insb
fidivl
andl
pop
xor
dec
jno
mov
out
pop
cmpsl
push
lods
sub
cltd
movsb
sahf
jle
out
movsb
pusha
cmp
jb
jne
daa
pushf
fcmovb
loope
dec
scas
outsb
lock
in
data16
mov
hlt
test
push
sti
sbbl
ljmp
inc
sub
or
adc
imul
add
pop
int
xchg
lea
iret
mov
or
or
ss
or
enter
jmp
mov
and
sub
or
cmp
push
push
iret
adcl
cmp
ljmp
pop
jl
jnp
pop
dec
repz
push
insl
and
shrb
int
gs
fisubl
add
repz
mov
adc
inc
das
hlt
sbb
dec
push
push
popa
stos
lret
pop
inc
and
imul
iret
push
int
cwtl
leave
mov
xor
inc
jno
or
jl
mov
xor
adc
jnp
jmp
mov
dec
fsubr
inc
idivl
add
add
dec
pushf
loopne
or
push
inc
xor
out
push
rcll
cmc
push
subb
xchg
push
pop
scas
jecxz
mov
or
cld
add
stos
bound
cwtl
mov
mov
inc
cli
adc
adc
leave
cmpb
jg
add
adc
test
inc
add
movsl
inc
cmp
lcall
popa
sbb
jg
cmp
mov
cmp
call
sbb
fldt
aaa
add
stos
adc
jecxz
imul
jnp
mov
inc
lcall
mov
clc
pop
shlb
lea
and
adc
cmc
push
out
pop
add
lods
cld
pusha
xor
lods
cmc
push
pusha
ds
into
sahf
pop
sub
and
dec
sub
add
mov
aaa
adc
or
sub
xchg
mov
pop
dec
scas
lods
aaa
xchg
inc
in
daa
pop
pop
xchg
lock
fldt
dec
sub
addr16
jecxz
mov
scas
imul
mov
jne
movsl
test
and
mov
adc
adc
rorb
ss
jae
cs
pop
cmpsb
push
icebp
jbe
lods
mov
mov
mov
jecxz
or
leave
dec
insl
dec
cs
pop
push
xchg
or
aam
xor
outsb
loop
jp
lods
pop
iret
jne
xchg
lods
test
push
jns
rolb
stos
adcl
jle
dec
dec
subl
lds
imul
movsb
inc
daa
jl
jle
push
std
nop
cmp
adc
test
fs
out
push
popf
push
pop
insl
cmp
sub
cmpsb
pop
cltd
popf
adc
fadd
insb
je
imul
pop
mov
ja
jmp
xchg
clc
stos
je
mov
push
and
inc
mov
movsl
int3
ljmp
shll
fwait
push
fnsave
aam
stos
cltd
outsl
repz
push
add
pop
shlb
adc
mov
rorl
stos
pop
or
iret
xchg
jmp
jl
xor
sbb
call
xchg
xchg
mov
inc
dec
pop
jns
pop
js
xor
xchg
pop
xor
lret
pushf
orb
stc
sub
mov
mov
movsl
cli
push
add
test
cwtd
aaa
clc
je
fbstp
mov
and
ljmp
cmp
fisttpll
mov
lahf
mov
mov
sti
mov
lcall
ljmp
stc
jl
mov
sbb
insl
xor
sub
out
or
sub
pop
sub
das
xchg
add
jmp
test
daa
testl
xor
sub
mov
mov
out
inc
mov
lret
scas
jp
jecxz
jno
adcb
int
mov
daa
cmpsl
xchg
insl
repz
push
inc
les
and
loopne
xchg
xor
ss
js
idivb
add
lret
push
xchg
sarb
mov
xchg
jle
or
mov
pop
cmp
jecxz
push
outsb
jmp
mov
pushf
cltd
or
xchg
and
adc
pop
dec
inc
push
movsb
push
sti
into
mov
cmp
enter
cmp
cld
mov
movsb
lret
and
jne
clc
fsubs
xor
frstor
mov
jp
and
jnp
int
testb
jmp
not
in
popa
sub
lods
cmp
psubusb
cmp
xchg
mov
fldcw
pop
or
mov
movsl
adc
cmp
xor
lea
cmp
cwtl
jecxz
pop
cli
bound
jne
adc
scas
mov
or
dec
mov
xor
loopne
scas
movl
push
jnp
enter
lods
aad
sub
mov
out
fistps
sub
int
andl
stos
imul
daa
sub
jmp
aad
jae
leave
shlb
lcall
insb
adc
test
adc
lods
mov
data16
inc
testl
ss
and
mov
sti
sbbl
jmp
mov
loopne
pop
shll
xor
cmp
jl
inc
add
fdivrp
es
test
xchg
insl
loop
jecxz
pop
movsl
pop
mov
scas
in
xlat
add
hlt
das
dec
mov
inc
mov
insb
iret
xlat
adc
dec
pop
out
cwtl
xchg
cmp
ds
inc
popa
add
fsubrl
test
lods
mov
mov
aad
sub
ret
outsb
push
cwtl
repz
xor
idivb
sahf
int3
adc
stos
mov
push
sub
aam
imul
jle
insb
mov
pop
mov
sbb
xor
mov
imul
mov
xor
mov
xchg
insl
js
lret
jmp
scas
sarl
out
imul
jge
and
insl
dec
xchg
cwtl
mov
mov
std
fmul
stc
iret
jg
push
xlat
mov
cli
add
clc
fsubp
notb
xchg
sbbl
cmp
jp
jecxz
xchg
lea
sub
push
cwtl
ret
repz
cltd
pop
sub
dec
cwtl
jns
cmc
int3
hlt
ret
scas
xchg
cmc
lds
xchg
and
call
jne
pop
mov
dec
daa
pop
aas
popa
and
jp
sub
sbb
shlb
pushf
push
ljmp
add
pop
adc
mov
dec
ljmp
arpl
jns
xchg
out
mov
divb
cmp
fdivrs
imul
sahf
adc
or
and
rorl
jns
mov
pusha
mov
sbb
imul
push
mov
pop
in
push
in
mov
es
lcall
xor
xorb
adc
xor
mov
jnp
ror
sbb
mov
fisubrl
int
sub
dec
jae
or
pop
adc
sub
dec
mov
in
mov
pusha
or
and
aam
arpl
repz
mov
mov
push
jecxz
std
mov
push
push
xor
rcr
ds
mov
lret
loopne
xchg
out
nop
pop
in
aam
pop
cmpb
daa
mov
nop
repnz
das
sarl
pop
inc
sub
ret
sbb
xchg
std
and
ljmp
mov
inc
inc
mov
ds
jmp
cwtl
sub
sarl
jno
cmp
jne
dec
push
jecxz
fmuls
leave
bound
out
lcall
xchg
data16
add
sbb
push
adc
shl
mov
and
test
and
mov
sub
cmp
mov
mov
scas
lret
ss
pushf
js
add
sub
lret
adc
and
lea
or
dec
sbb
jle
push
sbb
push
js
add
lods
mov
pusha
sub
sub
xchg
adc
les
lcall
out
push
ret
dec
into
leave
push
js
notb
inc
sub
adc
dec
jecxz
push
addr16
inc
bound
and
inc
cmp
inc
cli
xor
mov
mov
and
xlat
xchg
push
popf
imul
fisubrs
outsl
mov
pop
fwait
xor
cmp
gs
mov
mov
andl
out
mov
lods
lret
dec
in
call
cmp
mov
push
mov
jno
sub
mov
insb
insl
imul
jmp
sub
ss
data16
push
cmp
test
jbe
or
outsb
shll
cmp
pop
xchg
jg
popa
cmpl
inc
mov
data16
inc
les
movsb
fbld
cmpsb
stc
movsl
fistpll
mov
faddl
mov
and
xchg
pushf
push
int3
jb
scas
xor
popf
fistl
dec
pop
cs
mov
dec
inc
loopne
aaa
jmp
sub
and
iret
lret
cmc
jle
lahf
lds
adc
in
mov
xchg
xlat
inc
loope
test
push
or
jle
pop
orb
stos
cwtl
mov
mov
mulb
sub
and
inc
ljmp
movsb
lods
sub
enter
pop
push
and
rcrl
jmp
fistpll
inc
push
sbb
ljmp
mov
rcrl
sarb
outsb
mov
pop
xor
popf
xchg
int3
sbb
scas
sub
dec
mov
add
pop
mov
push
es
sub
add
or
fisubs
sbb
pop
mov
loop
dec
test
cltd
out
cld
push
lahf
scas
adc
xchg
loopne
aam
pop
push
jmp
xchg
repnz
mov
pop
sub
xchg
lds
mov
or
sbb
test
jecxz
gs
cmpsl
inc
push
js
daa
pop
imul
mov
fdiv
dec
loop
dec
stos
mov
aam
repnz
cmpsb
lods
inc
push
sub
int3
data16
mov
sub
call
pushf
sbb
sbb
push
aaa
les
andl
cmp
inc
mov
movsb
jns
mov
or
push
pusha
cmc
lret
and
jbe
sbb
imul
repnz
xor
decb
lods
or
jle
not
xchg
push
dec
mov
les
popf
cmp
aaa
fs
in
xor
dec
test
in
test
xor
out
pop
scas
xchg
mov
cmpsb
lods
mov
int
mov
mov
xlat
cs
mov
scas
icebp
stos
ss
mulps
movb
add
stos
inc
in
mov
inc
stc
add
inc
ds
ja
negb
int
std
hlt
popa
jne
es
fmuls
pop
or
or
adc
loop
in
scas
mov
fmulp
mov
out
addr16
jmp
mov
scas
negl
push
xchg
add
push
ja
rclb
ror
stos
add
vmovmskps
nop
pop
ret
iret
pop
add
push
sbb
adc
fwait
sbb
cltd
inc
cmp
inc
ss
or
fsubrl
lock
popa
xchg
lods
push
test
lds
mov
pop
jg
adc
cmc
xchg
jnp
sbb
pushf
or
add
stos
iret
in
jecxz
jbe
pop
cwtl
jne
mov
aam
sbb
push
fwait
xorl
jp
aad
push
loop
mov
dec
pop
fiadds
scas
cltd
lret
adc
inc
jnp
jecxz
cmc
add
mov
js
pop
idiv
or
imull
mov
jle
insl
scas
js
push
in
fwait
adc
cmpsb
into
pop
adc
mov
sbbl
or
shlb
mov
fisttpll
loope
lahf
cmp
jb
test
jo
cmp
test
mov
mov
mov
mov
stos
jno
xchg
jbe
push
push
cmpsl
pop
pop
jp
subb
ret
data16
pusha
std
jbe
xchg
add
mov
mov
sub
push
out
leave
test
das
dec
in
cld
cltd
mov
xchg
sub
loop
mov
idiv
test
hlt
dec
icebp
mov
xor
push
nop
mov
xor
push
shl
inc
fiadds
cmp
xor
inc
push
ss
mov
imul
jmp
je
or
inc
mov
push
jb
dec
or
dec
fisttpll
or
insb
push
adc
dec
mov
push
lods
or
mov
mov
inc
mov
lret
jle
test
jmp
repnz
inc
bound
sbb
out
jno
fs
mul
rclb
js
jns
push
test
sahf
in
and
cmpl
cmp
pop
jmp
std
push
dec
repnz
or
jne
clc
shrb
pop
jge
in
sub
add
sub
and
int
add
sbb
pop
add
dec
out
fidivl
adc
sub
mov
mov
xor
push
sbb
xchg
and
cmpsb
pop
inc
scas
jbe
in
or
pop
repz
or
mov
insl
xor
and
sti
mov
xchg
in
lods
fcmovu
fnstcw
xchg
daa
mov
inc
push
iret
test
cli
xchg
push
fwait
xlat
and
leave
mov
xchg
std
pop
mov
mov
or
fistps
pop
pop
mov
aaa
or
add
cli
cmc
lods
insl
sahf
out
aas
stos
add
push
addr16
imul
jnp
outsl
ljmp
cs
and
pop
aad
arpl
lret
xor
adc
test
xchg
inc
imul
nop
jg
mov
sbb
cmpsl
sbb
push
stos
inc
dec
daa
cli
shlb
or
fldt
jmp
lods
xchg
mov
add
in
adc
enter
shlb
movb
popa
sbb
xchg
sub
jns
push
xorb
aas
xor
insl
aas
jl
data16
mov
lret
test
hlt
divl
inc
ss
call
inc
jae
daa
pop
pop
and
mov
inc
and
bound
push
sbb
stos
ja
imul
adc
cmpsb
repnz
and
rcll
jo
jne
inc
insl
testl
mov
sbb
inc
mov
inc
loopne
cmc
int3
mov
mov
inc
stos
test
xlat
mov
and
test
loop
push
call
rol
push
mov
xor
or
sub
loope
push
mov
and
icebp
mov
mov
sbb
cmp
cs
xchg
dec
insl
jb
add
bound
push
cli
dec
mov
cmp
je
out
aad
and
and
mov
inc
pop
sbb
testl
cmp
pop
jnp
mov
cwtl
adc
push
xchg
xchg
sbb
sti
out
movsb
push
mov
adc
push
fisttpll
lcall
sub
and
shlw
cltd
add
xor
and
test
dec
adcb
push
fs
push
mov
mov
and
shlb
iret
outsb
adc
pop
jo
movsb
cmp
imull
xor
inc
mov
pop
pushf
sub
mov
mov
mov
jne
std
andl
stos
pop
cltd
and
and
jl
fidivl
mov
in
sub
in
sbb
and
daa
inc
addr16
pop
movsl
cltd
jne
push
loope
sbb
mov
roll
stos
mov
mov
outsb
pop
sbb
jb
ljmp
shll
lods
dec
test
mov
xor
ja
out
mov
loope
pop
ja
repnz
es
test
mov
adc
sbb
out
push
int3
xor
scas
fwait
xchg
imul
add
nop
mov
rcrl
inc
leave
dec
call
fcoms
ja
adc
inc
cmpsb
mov
mov
xlat
sub
jp
sti
fucomip
int3
cmp
dec
test
or
sub
xor
mov
ljmp
push
add
repnz
js,pn
jg
fwait
cmp
xchg
xorb
xor
call
insb
dec
pop
shl
fs
mov
xchg
jae
push
fcoml
out
pop
add
cmc
jno
pop
addr16
or
mov
rol
and
adc
iret
repnz
iret
inc
push
mov
xchg
pop
stos
stos
cs
jmp
fcomip
add
lret
adc
push
push
divl
push
nop
out
xchg
jno
pop
scas
cwtl
push
fidivs
pop
dec
dec
and
ret
push
lcall
out
cmp
mov
andb
fisubl
pusha
push
push
lret
xchg
cwtl
out
sti
test
test
aam
push
faddl
and
sbb
hlt
mov
mov
xchg
pop
sbb
fimull
cmc
add
jno
stos
shl
mov
xor
test
popf
inc
addr16
daa
sub
pop
pusha
addr16
mov
jecxz
push
xchg
xchg
scas
dec
and
cmp
push
mov
out
sub
fwait
xor
fildll
mov
shlb
loopne
aaa
and
push
jl
enter
mov
jg
pop
sbb
inc
bound
push
sub
stos
sub
sbbb
jne
clc
and
lahf
inc
orb
xor
notb
pushf
adc
addr16
ljmp
xlat
shll
xchg
pop
fistps
pop
inc
mov
fcos
or
jecxz
call
ficoml
cld
add
cmpsl
aas
push
bound
and
jp
add
sti
aas
inc
xor
ss
xchg
mulb
xchg
sbb
xor
pop
mov
loopne
mov
add
jg
push
push
roll
mov
mov
call
cwtl
xchg
xchg
out
mov
mov
lahf
pop
mov
push
in
int
movsb
mov
inc
sub
shll
das
test
inc
jmp
out
outsl
or
jmp
push
or
xor
shll
cwtl
mov
mov
mov
mov
loopne
pusha
scas
les
jge
addr16
test
ljmp
movsl
fwait
and
mov
fnstsw
add
jne
fwait
lock
jle
xchg
mov
jecxz
cmp
adc
lock
push
xor
pop
push
push
mov
loop
pop
out
jge
lcall
pop
mov
jp
inc
add
mov
push
push
lret
dec
outsb
mov
out
add
dec
mov
cmp
sbb
sub
mov
pop
mov
pop
pop
in
sub
cli
mov
mov
lret
push
rorl
lock
repnz
mov
mov
xor
mov
xor
adc
add
mov
pop
sbb
adc
aam
dec
test
or
xor
jg
mov
xor
pop
fbstp
add
sti
je
mov
mov
pop
push
popf
mov
fs
out
shlb
lret
jb
jne
iret
mov
or
pop
push
mov
or
insb
or
xchg
push
fistpll
in
sub
or
dec
pop
cli
pop
sbb
push
pop
mov
nop
cs
sbb
cs
loopne
and
call
sbb
daa
adc
fldenv
mov
xchg
leave
xchg
xor
jbe
rorl
cmp
jecxz
sbb
cmpsb
dec
pop
aad
call
add
jno
add
fcmovbe
sub
enter
mov
fmull
test
lock
lret
cmp
jge
or
mov
std
imul
bound
aaa
sub
popa
pop
sub
mov
cmp
outsl
adc
inc
into
out
ficompl
cmp
lcall
dec
fwait
inc
push
std
and
into
in
or
add
xchg
or
push
aam
stc
ds
data16
xlat
hlt
dec
mov
iret
pop
jmp
lret
cld
push
mov
int
adc
imul
sbb
mov
js
dec
cmp
call
out
pop
push
test
cli
jecxz
out
rorl
outsb
xchg
mov
ds
insl
fst
adc
into
add
imul
push
out
shl
jae
xchg
in
iret
add
mov
stos
test
sbb
add
sbb
push
ret
push
mov
call
cmpsl
add
push
mov
mov
push
fidivl
js
dec
js
fwait
outsl
stc
mov
cmc
test
pop
loop
sbb
dec
xchg
adc
in
jmp
pop
mov
inc
inc
sub
mov
jae
sbb
jl
adc
test
icebp
incb
mov
push
test
sub
push
xor
loopne
pop
loope
fsubrl
mov
and
inc
pop
xor
rorb
sbb
push
fwait
cmp
and
or
xor
bound
mov
push
arpl
loop
sub
jb
or
pop
push
nop
jmp
xor
push
insb
dec
dec
scas
bound
mov
dec
and
mov
or
movsb
cmp
and
jmp
into
in
sub
mov
inc
cmp
adc
pop
inc
das
sub
xchg
and
loopne
inc
dec
pop
dec
popf
cmp
pop
push
mov
pushf
nop
xor
dec
lock
add
lds
sub
test
bound
or
pop
and
scas
loope
push
or
cmp
cmp
shll
lock
jle
cmp
cwtl
add
jno
dec
in
rorb
or
jbe
xchg
lods
rorb
push
xlat
inc
mov
insb
jp
dec
lods
mov
mov
out
cli
rcrb
in
cmc
in
outsb
in
rcl
sub
push
out
sbb
or
push
mov
inc
fidivrs
daa
cmp
inc
aam
ret
pop
cld
mov
pop
outsl
movsb
inc
adc
negl
mov
push
movsl
push
lock
mov
imul
or
cltd
cmp
int3
xor
imul
clc
push
fistpl
cltd
fdivr
mov
inc
cmp
cmp
mov
xor
lds
push
mov
loop
pop
lds
ss
mov
pop
mov
add
mov
cmc
mov
mov
push
xchg
pop
xor
fcmovb
mov
and
std
sub
fwait
mov
xor
push
das
orb
cmp
push
test
aas
dec
cmpsl
inc
add
pop
daa
adc
rcr
pushf
fldenv
rorl
and
xor
mov
xchg
dec
mov
xlat
js
pop
test
mov
scas
scas
lock
lea
fs
adc
sub
call
stos
jo
mov
or
popf
mov
inc
sbb
stc
xchg
push
jae
and
lods
adc
jge
repz
fcmovu
mov
test
xor
dec
sahf
fsubrl
fs
mov
mov
or
and
fildl
dec
or
mov
inc
sarb
jns
test
icebp
std
jns
je
lods
fnstsw
xchg
and
or
sub
sub
adc
adc
clc
and
outsb
rorb
repnz
in
lds
adc
xor
push
xchg
mov
add
push
push
dec
or
mov
pop
bound
xor
mov
and
test
pop
shll
das
inc
cld
adc
js
std
popa
inc
imul
arpl
xchg
sub
pop
fisttpll
imul
lahf
aas
in
rorb
or
jg
inc
push
es
stc
push
in
and
lret
dec
adc
or
mov
js
sub
ds
in
and
mov
shrb
xchg
fnstcw
out
jno
in
jnp
xchg
ljmp
dec
dec
subl
xor
loop
fcompp
cmpb
mov
inc
push
fs
inc
add
push
pop
add
inc
test
jp
pop
out
into
push
cld
mov
fdivr
incl
and
mov
add
dec
mov
inc
cmp
mov
adc
xor
xor
out
cltd
movsl
xchg
dec
lods
cli
jg
adc
xchg
or
mov
sbb
loope
dec
xchg
leave
aam
negb
imul
mov
dec
dec
jmp
or
mov
shll
pop
sti
or
adc
jae
inc
cmp
sti
insl
sahf
scas
mov
fwait
clc
adc
push
dec
jno
out
xchg
out
sbb
sbb
adc
xchg
int3
ja
das
xor
dec
std
add
xchg
cmp
sti
loope
dec
cltd
push
test
inc
add
loope
clc
cmp
icebp
pop
jbe
sahf
aas
push
test
xlat
push
xchg
xchg
inc
mov
loope
mov
inc
adc
add
jns
sbb
popl
aad
dec
mov
sub
adc
addr16
jae
push
cmp
adc
push
stos
les
sub
hlt
inc
jne
imul
cmp
mov
pop
cmp
orb
rclb
popa
outsl
xor
out
jg
push
lods
ret
inc
add
testl
mov
inc
cmp
pop
insl
xor
mov
loop
int
sub
xchg
xchg
sub
push
xchg
push
test
adc
ffree
data16
xchg
sub
add
push
sub
push
fsin
push
and
mov
inc
jne
and
mov
and
arpl
movsl
sbb
add
dec
pop
cmpsl
lahf
lds
sti
insb
or
sbbl
fucomp
iret
jae
adc
xchg
ja
pop
xchg
in
mov
push
rcrl
arpl
mov
mov
add
stos
lea
sub
cltd
cmpsb
je
pop
jne
inc
add
cmp
les
dec
out
push
pop
jno
call
imul
mov
iret
cli
mov
mov
scas
mov
fnstsw
in
and
mov
push
mov
outsl
inc
pop
out
dec
xorb
loope
bound
xchg
adc
xlat
cmp
mov
mov
rol
jge
xchg
mov
mov
imul
sub
outsb
xchg
xlat
cmp
es
lea
fisubrl
mov
imul
xchg
jmp
pusha
or
fiadds
addps
sbb
and
xor
in
mull
dec
mov
mov
xor
jmp
ss
adc
loop
daa
jge
jle
jle
lahf
push
sub
xchg
outsl
push
int
jnp
sub
movsb
add
mov
ret
addr16
sti
iret
test
iret
lahf
cmp
push
fcompl
in
into
out
aam
cmp
push
stc
push
mov
sbb
dec
cmp
fs
xchg
das
enter
aaa
dec
sub
mov
mov
insl
mov
adcb
aam
sub
dec
pop
jle
cmpb
jae
into
cmp
jns
std
cmc
sbb
sbb
hlt
clc
sub
fs
js
rcr
dec
or
mov
pop
xchg
cmp
xor
scas
mov
lret
pusha
imul
xchg
in
dec
add
jne
pop
xchg
pop
ret
mov
push
lods
shlb
enter
shrb
bnd
xlat
jno
fsubs
pop
cwtl
dec
xor
inc
and
pop
popa
jne
jne
mov
xchg
inc
ret
in
mov
xorb
pop
shrb
testl
push
inc
rclb
and
in
js
xchg
mov
stos
out
notl
dec
lock
addr16
jns
cmp
dec
out
or
in
sub
out
les
pusha
dec
xorb
adc
shrl
std
dec
jg
cmp
cmp
js
mov
cmpsl
sbbb
iret
std
mov
mov
mov
dec
push
jnp
xchg
jecxz
je
fistpll
popa
iret
mov
sub
out
push
movsl
pop
mov
adc
sbb
in
xor
cmpsb
xor
lahf
and
fistpll
cmpsl
outsl
or
loop
mov
lahf
cltd
into
aad
test
mov
add
in
pop
xor
and
jno
jns
shlb
loop
sub
daa
push
ja
sub
push
add
shr
insb
ljmp
jmp
in
ret
push
into
xchg
outsb
inc
rcl
dec
stc
add
mov
and
xorl
pop
xor
jp
or
or
mov
out
int3
std
push
test
xchg
mov
stos
test
leave
sub
js
jg
je
xor
das
pop
xor
mov
xor
add
adc
adc
cmp
fsubrl
ret
sbb
movl
pushf
movsl
leave
mov
aad
insb
pop
sbb
xor
add
xor
lock
xchg
aam
andb
sti
lock
dec
in
aas
push
pop
movb
fldenv
lret
xorb
mov
pop
cmc
xor
sbb
pop
mov
pop
sub
sub
push
inc
or
icebp
cs
inc
popa
cmp
mov
sub
cmp
into
cmpsl
sub
in
cmc
or
add
int
push
xor
addl
gs
xor
pop
push
jae
insb
shrl
fcoms
js
dec
ja
fidivrl
les
xchg
into
push
fldt
in
and
push
loope
movsb
incb
std
data16
xchg
out
pop
arpl
sub
lret
jno
das
push
cwtl
xor
test
lds
sub
push
xlat
mov
xchg
inc
dec
pop
stos
cmp
lret
aaa
jns
xor
stos
rorl
loope
mov
test
cs
aad
cltd
pop
mov
sub
fbstp
sbb
lds
ja
mov
in
pop
lcall
dec
jge
pop
push
fnstenv
inc
inc
sbb
mov
xchg
mov
or
push
arpl
ja
push
push
loope
add
pause
push
aad
in
je
mov
js
je
pop
pop
xchg
out
cmp
aam
out
sub
sarb
xlat
out
sti
add
pop
mov
in
ret
sbb
xor
test
loope
mov
sub
lock
lods
stos
xchg
and
sbb
jecxz
dec
jne
jno
dec
cs
cs
fbld
dec
test
aad
adc
psubusw
mov
cmp
xchg
adc
fdivrl
dec
jecxz
ret
fwait
sbb
cmp
inc
nop
lret
mov
xchg
mov
xchg
cld
add
cmpsb
pop
mov
mov
enter
and
cs
jae
dec
xor
out
jb
sbb
lret
test
mov
add
lods
mov
repz
mov
or
out
pop
mov
push
hlt
sub
into
popf
jle
stos
or
sbb
or
sub
sub
movsl
in
add
leave
mov
dec
lret
dec
cmc
ds
fsubr
push
sub
add
in
ja
push
stos
out
scas
mov
inc
xchg
je
lahf
mov
and
sub
sbb
inc
xchg
out
mov
jo
fistpl
cmpsb
pushf
sub
jle
shl
je
and
iret
mov
gs
push
mov
lods
inc
push
mov
mov
pop
jbe
lret
lods
push
xor
mov
sbb
int3
jnp
xor
pop
leave
out
cmpsl
adc
cmpsb
jecxz
fistps
lods
psllw
adc
test
lock
sub
push
es
mov
jbe
xchg
inc
mov
push
addb
je
or
adc
cmp
jnp
cmp
sub
shl
dec
mov
adcb
ja
sub
or
dec
and
dec
push
aam
out
cld
mov
inc
fdivrs
test
mov
shl
pop
xlat
repnz
cltd
mov
or
fiadds
xor
into
shll
int
mov
clc
mov
enter
mov
mov
dec
xchg
inc
movsl
std
shrb
xor
call
push
dec
arpl
andb
testb
push
lcall
adc
dec
sub
jb
or
hlt
out
inc
jp
xchg
mov
or
jae
test
pop
loop
xchg
sub
add
aas
mov
add
cmp
fisubl
pop
in
pop
pop
add
dec
xlat
dec
insl
push
and
dec
jno
sub
movsl
pop
xor
add
ror
push
jne
ss
jbe
sbb
jle
inc
js
leave
movsl
pop
test
pop
fstl
push
mov
mov
inc
int
mov
je
cmpsl
mov
sbb
call
or
pop
add
mov
mov
pop
pop
gs
jnp
test
cltd
push
repnz
xchg
mov
push
popf
mov
mov
frstor
pop
cmp
push
mov
jo
cmp
ficompl
pminub
cmp
je
fstp
fisttpl
lcall
push
and
sbbl
sbb
fisubl
jno
jg
sub
clc
sbb
sbb
scas
mov
ljmp
outsb
push
sub
cmp
push
jp
daa
je
adc
mov
subl
xrelease
sub
fs
scas
sub
rcrb
fdivr
dec
push
jo
inc
push
dec
subb
lods
mov
hlt
loopne
addr16
ljmp
test
shrl
and
sub
mov
jmp
sbb
nop
add
pop
xchg
dec
ret
sub
add
mov
loop
or
lret
add
out
adc
jo
fsts
adc
sti
dec
jne
xchg
xchg
test
push
dec
sbb
das
cli
add
adc
shlb
adc
dec
stos
and
xor
in
jecxz
or
cmpsb
movsl
adc
or
leave
testl
popf
fwait
mov
cld
add
imul
fsubs
das
pusha
inc
lods
xchg
idivl
mov
mov
mov
negb
clc
and
lcall
cltd
mov
mov
cmp
or
add
cwtl
dec
mov
sub
imul
cmp
repnz
cmp
js
cmp
dec
add
sub
clc
cmp
lods
adc
push
inc
xchg
jo
sub
jb
adc
lods
mov
mov
inc
sbb
fstpl
es
imul
lahf
loop
popa
add
pop
fistpll
cmpsl
mov
int
dec
mov
push
lret
and
and
leave
ss
mov
lods
into
pop
test
clc
sbb
mov
inc
push
data16
cmp
test
sbb
xor
mov
popf
and
mov
push
mov
ss
xchg
xor
sub
test
push
adc
mov
arpl
jl
and
sbb
scas
dec
test
or
jge
push
stos
push
fsubrl
xor
lock
movsl
fwait
add
adc
jbe
loopne
add
daa
scas
jl
and
push
scas
mov
jb
mov
inc
mov
sbb
sub
dec
xchg
sbb
xor
loope
sbb
movsb
scas
cmp
cmp
dec
daa
or
adc
lea
stc
dec
cmp
sbb
mov
pusha
fsubs
scas
jo
mov
daa
insb
adc
ja
js
jbe
int3
popf
ficompl
mov
jmp
rclb
push
and
jae
adc
add
mov
push
fisubrl
sub
mov
int3
fwait
mov
xchg
das
jno
in
loop
bnd
jmp
dec
add
roll
call
stos
addr16
fcomi
aaa
adcb
lods
js
pop
fwait
mov
pop
data16
arpl
js
xchg
loop
mov
xor
ficompl
add
mov
and
jg
hlt
and
in
pop
mov
rcll
push
pop
xchg
lock
mov
sbbl
xchg
popf
fsubrp
or
mov
mov
push
sub
sarb
lret
push
fstps
jb
mov
xor
loopne
xor
fcomps
outsb
and
mov
int
xor
or
xlat
imul
xchg
imul
gs
shrb
lds
dec
mov
xchg
add
push
rorb
dec
int
scas
arpl
pop
xchg
fidivrs
mulb
sub
jnp
ret
enter
aam
addb
adc
cltd
hlt
or
int
and
fwait
stos
loop
fists
cmpb
imul
pop
pop
ficompl
push
mov
mov
push
out
jp
pop
push
jb
dec
xchg
repnz
out
lea
inc
gs
imul
jmp
adc
stos
add
push
push
hlt
into
jo
xchg
and
sahf
shrl
neg
dec
movsb
mov
pop
dec
in
jmp
popa
popa
adc
push
lock
adc
and
ljmp
jbe
jl
inc
daa
lods
dec
cmp
pop
andb
cmp
inc
stos
push
jl
je
in
stc
aaa
jno
xchg
add
shlb
pop
cmp
push
adc
jcxz
movb
mov
push
and
jns
xchg
add
xor
mov
je
loop
mov
loope
lods
mov
inc
sbb
stc
mov
repnz
mov
out
sbbl
outsl
push
fwait
sbb
xor
sbb
mov
testb
daa
loop
fucom
jmp
std
push
test
jp
das
mov
jnp
push
or
gs
jmp
sub
out
inc
movsl
cmp
into
fwait
pop
sarb
cmc
jns
sub
fildll
xor
jo
mov
mov
jecxz
cmp
xor
je
cwtl
sub
xchg
push
pop
sti
dec
addr16
mov
pushf
ss
bound
test
pusha
je
adc
adc
daa
in
lret
imul
pop
xchg
insb
daa
aas
push
test
int3
std
cmp
xlat
mov
xchg
push
js
xor
jl
mov
push
shlb
lods
xor
mov
push
jb
or
in
rcll
daa
or
int3
pop
push
popl
bound
rcrb
out
and
jle
push
inc
outsb
inc
aam
ret
push
pop
enter
adc
push
sbb
adc
inc
dec
sahf
dec
or
push
pop
push
dec
inc
add
popa
jp
out
xchg
out
daa
jnp
loope
inc
lahf
xor
sahf
inc
or
push
bound
push
daa
cmp
push
inc
push
pop
jo
cmp
ja
pop
addr16
pop
gs
xchg
jbe
pop
jl
push
xorb
jl
lret
xor
into
adc
inc
jbe
or
inc
mov
sbbb
insb
lret
das
xor
cmp
gs
insl
sbb
jmp
jae
popf
inc
fldt
adc
lock
insb
icebp
js
nop
dec
mov
sub
pusha
fldt
jns
or
daa
movsb
mov
push
xchg
std
or
xor
xor
mov
dec
jnp
cltd
and
out
out
jmp
cmp
xor
ljmp
xor
mov
cli
sahf
and
or
mov
dec
imul
and
out
lods
mov
pop
lods
xorb
daa
xchg
push
inc
das
mov
mov
mov
or
ret
imul
clc
add
cwtl
mov
gs
into
stos
xchg
add
inc
daa
xchg
pop
or
inc
sbb
dec
push
arpl
xchg
cmp
jl
jb
repnz
movsl
cmp
sbb
stc
push
adc
sub
cltd
or
pop
push
ret
test
xchg
push
or
sbb
iret
data16
xchg
push
push
clc
xor
jns
push
add
call
mov
dec
jmp
pop
test
out
sub
lret
push
add
icebp
lock
mov
mov
fldt
popf
mov
add
adc
inc
arpl
dec
jge
cli
insb
mov
dec
ljmp
in
adc
insl
sbb
push
lahf
clc
mov
add
jns
movsl
cmpsl
lahf
out
jecxz
sbbb
js
lret
jb
mov
dec
dec
rcrb
dec
xlat
fisttps
inc
jae
test
loop
mov
cmp
fadds
mov
xchg
popf
add
loope
into
add
jl
lea
or
stos
push
jmp
and
in
mov
push
cs
insb
xchg
in
das
fldlg2
adc
pop
shll
mov
test
repz
imul
xlat
lds
out
std
andl
adc
mov
fldenv
stc
pop
fsubs
cmpsb
fiaddl
push
or
jle
imul
popf
xchg
cltd
push
or
in
jo
cmpsb
xchg
xchg
pop
stc
jo
loope
push
add
inc
pop
shll
or
scas
nop
daa
sub
inc
popa
jl
and
rcll
cmp
adc
push
pop
ret
cld
pusha
in
inc
insb
shlb
mov
popa
enter
xor
mov
jg
pop
sahf
cmpsl
cmp
adc
aas
daa
pop
lods
rcrb
inc
lods
xlat
fldcw
jnp
mov
mov
shll
stos
sub
jo
sbb
out
stos
sbb
mov
mov
pop
repnz
sbb
jnp
or
in
sbb
outsl
je
rcrl
sub
add
lods
movsb
test
imul
adc
stc
arpl
iret
int
lods
rclb
repnz
call
clc
jp
mov
inc
in
cli
mov
insl
in
shll
push
ret
addr16
push
insl
dec
xchg
mov
pop
pop
arpl
loop
add
push
xchg
lret
and
inc
mov
pop
sub
lds
ret
push
mov
ret
cltd
mov
mov
add
sbb
arpl
icebp
pushf
mov
je
mov
addr16
xchg
mov
aad
jecxz
mov
mov
adc
mov
push
mov
out
test
sti
xchg
in
xchg
sbb
test
daa
xchg
ret
jbe
pop
lcall
or
mov
adc
fstpl
out
mov
dec
push
call
stos
push
adc
movsb
xchg
mov
xchg
fidivl
cli
aad
das
scas
repnz
cli
das
lret
sbb
add
and
popf
push
adc
xchg
mov
das
insb
jae
and
ret
loopne
lcall
mov
fisttpl
lea
push
movb
or
push
enter
jno
addb
ljmp
das
sub
mov
jbe
jne
add
or
movsb
mov
xchg
movsl
push
cld
adc
inc
mov
dec
rclb
imul
dec
pop
jge
push
inc
jb
and
jg
out
inc
sahf
rcll
stos
ja
mov
pop
xchg
loop
stos
push
xchg
std
xchg
jge
xor
mov
mov
add
mov
popa
or
jmp
rorl
cmp
in
into
add
sbb
pusha
outsl
loopne
stos
inc
push
adc
movsl
sbb
test
jge
nop
repz
subl
rcrb
ficoml
fidivs
xchg
movsb
pusha
lods
in
adc
stos
mov
lret
bound
push
push
sub
cmpsb
push
adc
sbb
inc
pushf
cmp
dec
xchg
dec
and
int3
adc
adc
shlb
add
sbb
pause
aad
jno
gs
xchg
repnz
pop
outsb
lds
cmp
shr
mov
jecxz
lds
jb
outsb
or
cmp
jg
push
cmp
addr16
or
lods
jg
scas
inc
mov
outsb
rcrl
addb
popa
lock
popf
cmp
popl
lods
insb
mov
xor
lods
jge
nop
or
sarl
dec
or
sbb
js
jo
aaa
add
xchg
inc
call
push
fwait
js
push
rcrl
pop
inc
out
fcoml
std
lret
jl
mov
lcall
leave
imul
cmpsl
lods
pop
mov
ja
in
out
repz
dec
ret
inc
sbb
mov
insl
jmp
scas
lods
sub
adc
rcrb
cltd
in
cmp
pop
xor
jecxz
lea
mov
notl
cwtl
mov
add
into
outsb
in
in
pushf
scas
sbb
jo
inc
mov
daa
mov
jne
push
pop
or
push
push
in
loope
mov
adc
jnp
inc
add
push
or
mov
add
xchg
leave
add
mov
imul
dec
cmp
loopne
inc
inc
mov
dec
push
mov
ficomps
sbb
insl
loop
sbb
dec
jns
push
adc
xchg
mov
or
in
push
inc
mov
dec
adc
cmp
cmpsl
xchg
mov
mov
xor
mov
push
mov
cmc
add
push
dec
push
add
push
sbb
dec
pusha
mov
mov
pop
push
addr16
and
pop
inc
mov
jmp
ds
inc
dec
sub
or
and
and
pop
rcrb
imul
inc
mov
les
jg
int3
push
jnp
test
add
cmpsl
fs
popf
push
ficompl
mov
pop
mov
add
es
cmp
and
lds
pushf
cmpsl
fimull
data16
inc
bound
into
dec
add
shl
inc
inc
cmpsb
cli
or
cmp
cmp
cmc
push
mov
jb
mov
push
xchg
dec
test
sbb
xchg
mov
into
xchg
subb
out
mov
add
int3
add
in
mov
cmpsl
add
mov
inc
inc
adc
jae
cmp
add
mov
ds
std
and
sbb
call
mov
lahf
aam
mov
and
xchg
and
mov
and
inc
and
adc
insb
outsl
jge
and
xchg
jl
in
lock
mov
iret
clc
hlt
inc
fisubrs
stc
dec
cmp
jb
push
cmp
mov
jno
dec
cmp
and
add
dec
ja
push
add
sahf
es
lods
je
or
xchg
sub
addl
shll
xor
push
and
dec
and
cmp
pop
cs
xchg
jl
push
push
mov
mov
pop
ja
adc
pushf
cmp
xlat
adc
popa
ss
xchg
repz
mov
pop
inc
js
adc
hlt
cwtl
lret
pop
into
mov
xchg
dec
insb
and
dec
xlat
push
cmp
aaa
add
add
cmpb
mov
jnp
dec
pop
pusha
repnz
fisttps
and
push
cwtl
xor
xor
data16
xchg
push
adc
sub
cmpsb
repnz
iret
jmp
ja
push
inc
fnstenv
mov
and
xchg
mov
sahf
insl
in
dec
pextrw
imul
rclb
roll
shll
and
mov
clc
pop
pop
jns
aaa
dec
aaa
add
cmc
jmp
inc
pop
push
pop
dec
sbb
mov
inc
jmp
cmp
loope
mov
mov
or
shlb
push
outsb
mov
jns
cmp
negl
mov
je
add
sbb
out
lcall
les
xorl
outsl
shr
cli
pop
data16
jge
call
test
fnsave
repz
mov
lret
cmp
mov
mov
mov
ret
jbe
xor
adc
out
inc
scas
jge
pop
mov
ds
gs
mov
cld
inc
or
les
nop
cmp
ret
push
cld
mov
push
repnz
jecxz
andb
adc
bound
adc
or
xchg
mov
call
inc
pushw
data16
and
add
or
stos
add
pop
xchg
sar
xchg
push
and
shlb
mov
dec
mov
filds
xor
call
mov
sbb
inc
lock
arpl
out
hlt
ja
incl
inc
mov
xor
pop
mov
cmc
push
jne
daa
aam
xchg
addl
xor
ficoms
and
pop
ljmp
adc
xor
shll
mov
adc
lea
mov
cmp
push
and
push
lds
pushf
inc
and
out
mov
xchg
into
orb
jbe
fs
repz
mov
pop
mov
jp
stos
je
mov
inc
clc
xchg
or
mov
call
cmp
mov
adc
pop
lcall
fiadds
push
or
popa
push
and
push
mov
dec
test
xchg
lret
mov
daa
ss
test
lret
dec
icebp
jbe
rcr
jp
fcmovnbe
sbb
repz
in
pushf
add
pop
fcom
sub
jno
sbb
addr16
cld
or
xchg
jg
cltd
lret
push
dec
aas
and
arpl
scas
sbb
ret
jns
lret
jmp
cmp
add
xchg
inc
push
pop
testl
push
sub
jno
or
push
push
in
sub
cmp
jbe
sub
dec
shl
mov
cld
test
pop
sahf
dec
shll
fwait
add
repz
push
sarl
std
cs
sbb
jmp
push
push
repnz
fnstsw
xor
testl
dec
imul
and
and
fwait
pop
xorb
aam
pop
sbb
sub
shrb
push
mov
out
sub
in
push
fwait
sti
ja
je
and
dec
cmpsl
sahf
xchg
xchg
shl
dec
push
insl
and
popa
or
sub
out
ret
call
int3
movsb
push
popf
pusha
mov
sbb
nop
mov
xor
in
call
pop
cmpsl
sbb
jle
test
jns
cmpsl
in
inc
dec
sbbb
jae
ja
add
mov
cltd
push
dec
out
jno
test
or
cmp
fmuls
mov
fisttpll
pop
fwait
bound
mov
cmp
fbld
dec
mov
mov
fs
sbb
cmc
hlt
rcll
int3
into
ss
lods
mov
mov
push
sbb
loopne
lret
dec
adc
roll
cmp
aas
out
xchg
pop
xor
int3
fstps
push
test
les
or
sbb
sub
cmp
les
push
pop
mov
mov
in
sbb
out
pop
mov
jnp
pop
add
pusha
mov
cmp
xor
call
sbb
mov
leave
jae
fwait
aaa
sbb
push
pushl
cli
pushf
popf
mov
push
push
stos
and
push
sbb
lret
lds
dec
clc
pop
sbb
cmp
mov
push
sbb
data16
sbb
mov
jge
lods
mov
cltd
pop
aas
mov
fcomps
into
out
pop
jo
fldenv
rorb
dec
outsb
adc
cmp
inc
xlat
sub
mov
repnz
pop
popl
sti
xchg
jmp
mov
mov
inc
dec
xchg
lret
sub
fnsave
fidivs
dec
es
dec
outsb
loope
aaa
ja
add
mov
sbb
mov
lods
and
cld
into
add
pop
or
mov
push
mov
mov
scas
add
xor
shll
jnp
fld
data16
xor
pop
bound
out
adc
xchg
cmc
aas
lods
sbb
call
pop
xchg
fdivl
shll
xor
mov
pop
rcrb
loope
xor
imul
add
cmp
or
popf
add
or
popa
dec
loopne
dec
outsl
out
cld
sbb
jae
cmpsb
into
add
xlat
pop
mov
scas
pop
xor
aaa
clc
pop
les
or
jb
add
jle
push
add
mov
sti
rcl
cltd
or
movsb
jno
es
bound
ds
stc
adc
push
mov
clc
xchg
jmp
mov
test
aad
cmp
call
lock
test
popf
ret
and
sbb
fstpt
xor
subb
fists
mov
sub
mov
mov
push
jge
mov
loope
mov
lahf
sub
setno
rcll
iret
jecxz
addb
das
idivl
xchg
xor
inc
mull
lock
movsb
jmp
adc
enter
lock
aaa
push
dec
fwait
mov
std
cmpsb
sarb
pop
inc
adc
mov
cmpsl
imul
mov
jnp
fcmove
pop
mov
test
lock
inc
lret
int3
xor
jmp
sub
and
outsl
pop
imul
loope
je
inc
xchg
lods
sub
mov
fstl
push
idivl
rcrb
stos
pop
mov
aaa
orb
test
xor
inc
push
ja
mov
pop
lods
jg
leave
mov
dec
iret
xchg
imul
stos
repnz
int3
test
lds
sbb
mov
sbbb
ss
test
mov
icebp
bound
rorl
aas
icebp
fldcw
mov
mov
pop
sub
pop
mov
add
and
sbb
out
shll
test
sub
lods
stc
std
ret
ljmp
sub
cltd
pop
cmp
mov
addr16
fiadds
in
sbb
shll
popa
push
popa
inc
lret
sub
jmp
jne
jecxz
sub
dec
fdivrl
mov
xor
loope
xchg
mov
icebp
call
test
xor
fnstcw
std
divl
mov
cmp
inc
scas
orb
jle
xchg
jmp
stos
mov
or
push
in
sub
xorl
imul
movsl
rcll
std
xorl
sbb
jbe
std
lods
enter
stc
fdivs
jo
push
iret
cmp
pop
mov
or
sub
fwait
or
rcll
mov
sarl
cwtl
pop
cmp
cs
dec
out
dec
mov
loope
xlat
and
mov
movsb
add
add
arpl
sahf
xchg
or
mov
es
and
push
and
dec
xor
push
cmp
mov
inc
cwtl
test
ret
ret
adc
xchg
sub
xchg
xlat
les
aas
test
arpl
data16
scas
xor
loop
sti
lods
lcall
xorl
test
add
pop
fstl
mov
mov
xorl
shrl
stc
or
dec
sub
outsl
xor
adc
push
in
aaa
dec
imul
jbe
scas
repnz
jne
and
inc
out
jnp
or
mov
and
and
movsb
lock
mov
jb
xchg
dec
push
outsl
sub
in
adc
or
jl
fisubrs
sub
jge
popa
test
cmovns
pop
bound
pop
divl
rol
loope
adcb
lods
cmc
and
loopne
mov
push
pop
hlt
or
push
jnp
or
cwtl
cmp
pop
mov
and
sbbb
dec
mov
push
lret
mov
fistl
je
mov
mov
xchg
jmp
jge
pusha
fisttps
xor
xchg
cmp
jle
dec
inc
aas
xchg
push
push
xchg
out
xchg
inc
mov
or
xor
adc
mov
cmp
movsb
ret
sub
and
xchg
mov
shl
or
bound
insb
jo
inc
xchg
push
or
out
aaa
jbe
into
ret
mov
rorl
push
lahf
xlat
dec
add
pop
cmp
sbb
outsl
xor
out
jmp
xchg
test
fstpt
nop
out
mov
repz
callw
leave
mov
add
lods
fcomp
mov
cmpsl
sbb
cltd
mov
ret
insl
jo
inc
mov
jp
loope
xchg
out
jno
cmpl
call
data16
cld
mov
dec
pop
jmp
pusha
je
aaa
and
adc
mov
cmp
sarl
roll
mov
out
mov
or
movsl
mov
inc
fstl
or
cltd
mov
addr16
push
lods
addb
jne
mov
jmp
and
adc
add
inc
mov
adc
sub
push
push
ja
mov
xchg
je
fs
outsb
push
inc
xor
add
out
xor
repz
ja
ret
pop
mov
jmp
call
pushf
ret
push
jle
mov
std
adc
leave
std
adc
mov
gs
sub
xchg
dec
sbb
dec
insl
dec
inc
and
cmp
xor
pop
pop
jne
jbe
in
in
xor
xchg
lock
lods
dec
adc
mov
rclb
push
jp
sub
mov
lahf
xchg
test
adc
int
mov
enter
xchg
jge
fsubr
in
bswap
in
es
ficomps
pop
aam
in
xlat
pop
aas
xor
add
popf
pop
dec
xor
lock
hlt
fwait
cmp
shl
movsb
jmp
mov
push
cmpsw
je
pop
shll
lods
in
jle
xchg
push
pop
pop
inc
xor
mov
push
mov
popf
mov
test
test
sbb
cmc
push
or
pop
jecxz
lahf
mov
push
enter
fdivrs
enter
lock
in
mov
out
bound
mov
js
xchg
shl
dec
adc
addb
popf
stos
rorl
add
scas
scas
add
sub
les
xor
xor
notl
out
jl
dec
out
dec
push
jno
jecxz
loop
stos
mov
ret
push
mov
mov
add
jnp
xchg
push
ljmp
lock
cwtl
inc
xor
pop
ret
or
jns
push
imul
xchg
jbe
xor
inc
and
adc
inc
lock
xchg
adc
icebp
mov
lcall
in
or
push
aad
aas
idivb
and
int3
inc
in
add
out
cmp
push
fildll
push
insb
push
cmpsb
push
xchg
cmp
xchg
and
js
fisubrl
mov
sub
or
loop
fcomps
fisubrl
outsb
sbb
imul
push
in
xor
mov
jns
aad
lcall
cmp
sti
add
stos
xor
fbld
add
data16
push
or
scas
rolb
mull
es
adc
add
stos
enter
loop
leave
rcll
andl
push
repnz
aaa
inc
mov
adc
lock
xor
inc
push
add
loop
orb
adc
sbb
sti
dec
inc
and
ret
fidivs
ja
and
aam
loop
lock
sub
pop
dec
hlt
out
push
jg
mov
push
xor
sbb
xor
mov
dec
xor
inc
insl
subl
insl
bound
and
ja
repz
xor
push
test
jne
push
add
push
sub
lea
add
jecxz
adc
lahf
hlt
fsubl
in
test
xlat
jo
dec
inc
out
imul
mov
cmp
sbb
mov
mov
xchg
jmp
pop
add
jne
test
into
sub
sub
jecxz
out
inc
or
xor
cmc
sbb
add
loopne
sbb
pop
leave
inc
cmp
xchg
xor
lock
mov
rcrl
mov
inc
repnz
sbb
pushf
adc
orb
jo
jmp
scas
ljmp
fcomi
mov
jle
and
loope
sbb
push
mov
mov
xchg
mov
mov
mov
mov
out
adc
xchg
jbe
cmp
imul
cmc
stos
out
or
out
je
push
cmp
or
lahf
xchg
ljmp
lea
pop
mov
add
es
mov
fcmovnb
or
rcrb
inc
stos
ret
orl
andb
add
adcb
mov
mov
cmp
sub
mov
mul
ja
insl
adc
push
out
loope
and
sub
movsb
and
pop
sub
jl
and
sub
mov
jno
sbb
aas
cs
or
loopne
jns
pop
into
rol
jae
pop
xchg
daa
cli
nop
out
ss
adc
das
push
cmp
enter
push
mov
shr
in
mov
faddl
pop
push
inc
add
cs
je
out
pushf
mov
mov
mov
dec
push
int3
sbb
hlt
cmp
sbb
dec
out
xlat
insb
insb
dec
inc
sarb
mov
sbbl
jg
rclb
or
mov
pop
shl
adc
xchg
fiadds
xchg
mov
inc
in
mov
mov
pop
push
add
xor
ret
out
mov
sbb
push
callw
mov
cmp
xchg
int3
or
test
push
outsl
xchg
sbb
bound
test
push
pop
hlt
pop
mov
fistps
xor
das
pushf
xor
inc
jns
mov
push
inc
outsb
test
outsl
push
fs
les
test
lea
int3
incl
stos
mov
loope
mov
lods
jecxz
jg
fildl
enter
stc
mov
and
movsb
dec
clc
sbb
push
add
notb
fcompl
imul
lahf
shrb
lds
pop
jge
mov
adc
into
sbb
xorl
rcrb
push
mov
cmpsb
loopne
and
mov
test
icebp
and
pop
dec
sub
jmp
fstl
cltd
mov
inc
inc
pop
cmpsl
mov
mov
xchg
addr16
xchg
sti
insl
repnz
jbe
mov
test
out
and
movsl
sbb
rep
loop
pop
filds
adc
mov
dec
cmp
insb
cwtl
sub
inc
pop
xorl
cmc
jb
into
daa
pop
jg
lods
and
add
mov
xchg
adc
pop
push
dec
mov
push
test
mov
jno
sbb
jns
ja
mov
out
inc
fistps
mov
lds
cltd
je
mov
out
pop
outsb
mov
jge
lahf
lret
jb
call
popa
sub
movsb
fnstenv
mov
jns
adc
adc
mov
nop
sahf
sbbb
dec
cmp
lcall
cmp
sub
or
pop
inc
cmc
fnstenv
aaa
xchg
test
or
loopne
inc
test
cltd
fwait
xchg
cmp
or
lds
inc
adc
stos
fdivrp
mov
fnstcw
and
xchg
out
xchg
adc
jg
jl
pop
enter
dec
add
sub
out
cmp
imul
subps
sbb
fwait
mov
repz
lds
pop
ret
cmp
jg
mov
inc
ja
lret
movsl
pop
loopne
xchg
push
cmpsl
leave
loopne
inc
sbb
lret
dec
pop
inc
das
movsl
ficomps
imul
outsl
mov
jnp
cltd
lea
lds
adc
dec
pusha
and
lahf
jb
cmp
sahf
mov
ljmp
in
push
pushf
mov
add
incl
leave
leave
jbe
dec
sahf
dec
mov
and
mov
sbb
cwtl
jge
pushf
movntq
repz
pop
stos
rorb
mov
sub
bound
cmpb
lahf
xchg
jb
pop
xor
nop
jb
subb
ficomps
lods
outsb
outsb
xchg
pop
rcr
in
and
jbe
gs
aad
jbe
ds
test
aaa
fisubrl
pop
inc
daa
lods
inc
mov
daa
push
and
push
push
js
push
in
and
ret
jbe
les
push
cltd
ret
loopne
pop
mov
cmp
int3
fstpt
and
mov
adc
add
ss
fdivl
cld
mov
inc
inc
adc
mov
out
jecxz
add
xor
push
cmpb
sub
mov
test
jmp
es
cmp
mov
xor
int3
cwtl
push
dec
jno
xchg
fidivrs
ss
pop
int
adc
daa
daa
push
cwtl
or
aam
sub
sbb
and
dec
and
loopne
push
push
outsb
fmul
and
aas
cld
mov
aaa
and
or
cmp
in
das
mov
xchg
xor
cmp
insb
mov
pushf
testb
xor
mov
pop
push
jp
and
cmc
call
fcomps
mov
or
mov
stc
pusha
adcb
movsl
fbld
xchg
sbb
es
js
fcoml
add
and
rclb
int
das
loopne
xor
xor
or
loopne
shrl
pop
xchg
pop
push
repz
int
lods
mov
je
enter
xchg
mov
cmpl
cmpb
inc
sub
popf
loopne
pusha
adc
and
pop
arpl
mov
insb
bts
pop
in
into
mov
cmp
xchg
stos
lahf
push
dec
sub
pop
pop
inc
fmull
aaa
jle
mov
sarl
xchg
and
in
xor
sub
dec
test
es
and
cmp
push
jns
mov
dec
mov
mov
push
cmp
jb
clc
clc
lret
jno
lret
sub
shlb
jl
dec
notl
ljmp
or
and
adc
pop
stos
sub
loopne
int
in
insl
aad
xchg
cmp
and
ficompl
xor
xor
js
push
xchg
movsl
jmp
mov
test
rclb
les
in
dec
fcomi
add
pop
jecxz
test
subl
or
mov
sub
xchg
hlt
imul
mov
adc
jmp
mov
pop
dec
cmc
pop
repz
mov
je
and
sbb
jbe
mov
push
pop
inc
xchg
aad
mov
fdivl
dec
movsl
adc
and
call
sar
imul
xchg
imul
push
and
es
mov
jecxz
pop
mov
lds
xchg
inc
xor
outsb
mov
out
loope
jno
ret
je
lahf
sarl
mov
pushf
ljmp
ljmp
scas
adc
fistpll
daa
dec
imul
push
bnd
ljmp
loopne
pop
cmpsl
lock
add
bound
push
outsl
mov
mov
arpl
loop
add
dec
fsubp
sahf
fbstp
cmc
into
minps
sub
push
jle
and
roll
cmp
push
xor
xchg
push
add
mov
ror
aam
fisttps
mov
popa
xchg
imul
lcall
push
dec
test
sub
aam
aaa
and
test
jecxz
pop
pop
xchg
jno
loope
lods
jmp
insb
jle
mov
push
pop
jo
cmp
stos
leave
scas
xor
out
insl
stos
fidivrl
xor
jmp
dec
jmp
push
cmp
cwtl
jb
sbb
cwtl
add
pop
or
add
int3
sbb
dec
out
pop
lock
popf
lret
lods
enter
fdivl
gs
icebp
loop
jno
fwait
lret
adc
push
mov
xor
inc
lcall
dec
arpl
aaa
add
xor
cli
int3
inc
push
scas
add
or
cmpsb
adc
xchg
xchg
mov
dec
xchg
sub
inc
imul
lahf
jnp
jecxz
cmp
loopne
adc
pop
stc
lods
rolb
pop
xchg
pop
push
add
sbb
pop
push
adc
pop
loope
lock
das
cmc
inc
into
add
or
imul
and
mov
in
andb
rclb
push
insb
push
cmc
sbb
xchg
cmp
push
push
cmc
xchg
iret
js
aas
push
push
xlat
sbb
dec
stc
sub
adc
adc
jne
adc
sbb
cmp
push
inc
and
dec
lahf
scas
sub
icebp
cmp
dec
mov
xchg
roll
jp
insl
ret
mov
sub
int
imul
nop
mul
dec
mov
insb
xor
ds
jbe
fnstcw
mov
aas
push
out
call
roll
mov
sub
pop
xchg
repnz
inc
add
mov
inc
ljmp
mov
inc
fwait
sbbl
pusha
icebp
push
dec
add
sub
mov
rol
mov
add
add
aam
xchg
jp
add
loop
or
shll
dec
lret
int
insb
in
out
mov
inc
movsl
out
ljmp
arpl
add
and
xchg
dec
andl
pusha
ss
add
dec
sbb
add
loopne
lock
or
into
shl
pop
jnp
and
push
test
cmp
int
adc
loopne
ret
push
xchg
cmp
sub
add
jnp
dec
and
int
enter
je
or
cmp
mov
and
adc
sub
adc
stc
cmp
mov
add
dec
inc
test
xchg
aaa
icebp
das
and
mov
mov
dec
mov
cmpsl
xchg
sbb
inc
dec
fwait
jp
mov
pop
adc
int
mov
mov
adc
popf
and
sbb
bound
rclb
mov
push
or
aaa
mov
sub
xor
lret
fsubrl
adc
daa
sbb
push
mov
jae
push
loope
push
mov
dec
out
push
imul
aaa
mov
add
insl
pop
inc
xor
cld
fdivrl
les
mov
push
gs
mov
lret
cmpb
add
mov
add
pop
push
jp
fs
fisubl
inc
push
jae
mov
mov
lret
sbb
cvttps2pi
or
xor
orb
push
dec
xchg
add
inc
ffreep
push
cmc
or
or
adc
mov
push
cltd
or
or
xchg
in
adc
push
add
jno
push
xchg
push
sub
mov
dec
ss
icebp
and
fcoml
mov
das
cmpsl
adc
jo
scas
pop
in
xlat
sub
inc
sbb
es
jg
loop
ja
push
or
add
lcall
mov
lret
push
leave
lahf
pop
xchg
loopne
dec
rcrb
aad
push
fs
cmp
xchg
rcl
dec
sbb
mov
adc
nop
pop
shlb
hlt
test
loope
push
iret
insb
add
cmc
outsb
aam
pop
and
mov
addr16
ss
sbb
xor
xchg
aam
je
or
sahf
jg
leave
shr
scas
add
mov
sub
lahf
shlb
cwtl
subb
cld
fsubs
dec
in
add
rorb
inc
jle
fists
clc
push
xor
out
in
mov
add
test
jnp
ss
add
mov
leave
jae
roll
hlt
xor
sahf
mov
pop
fwait
push
add
cwtl
test
in
inc
mov
mov
icebp
sti
cmpsl
jp
rolb
daa
jns
pop
les
popf
cmp
sbbb
loopne
add
mov
movsl
or
push
mov
outsl
xor
fwait
sbb
xor
dec
mov
pushf
mov
mov
js
lahf
int
push
outsl
xchg
fwait
sub
ss
mov
or
adc
push
push
add
inc
mov
in
cmpsl
ss
xlat
cmpb
fisubl
pusha
mov
mov
inc
xchg
dec
in
cmp
pop
xor
dec
xchg
dec
xchg
sbb
and
arpl
push
jmp
into
inc
enter
ret
outsl
sarb
fstpl
push
in
loopne
push
ja
insl
and
gs
sub
addb
add
jl
mov
fwait
or
and
int
or
sub
push
cmp
ror
push
jge
sub
icebp
and
ret
xor
ja
lret
out
out
test
mov
inc
inc
call
jae
fbld
popf
rcr
aad
dec
mov
push
cmp
rolb
mov
fisttps
push
jo
jp
inc
call
cwtl
subl
and
les
ficoml
popa
xchg
aam
lcall
mov
push
pop
push
out
jg
and
dec
adc
icebp
sbb
inc
outsb
and
shll
push
add
mov
stos
pop
or
lcall
pop
mov
dec
pop
notb
sub
jb
sar
pop
scas
sub
xchg
mov
cmpsl
loop
bound
pusha
push
cmp
inc
sbb
dec
js
mov
into
cltd
movsl
jb
xchg
cmp
sub
mov
cmpb
cltd
adc
xlat
in
or
outsl
test
je
hlt
ds
movsl
mov
daa
out
pop
sbb
adc
mov
inc
mov
xchg
sarl
mov
xor
rclb
or
mov
int3
out
mov
pop
clc
cwtl
mov
cmp
idivb
pop
add
push
jns
cmp
adc
xor
loop
in
out
pop
popa
pop
jge
pop
cmp
push
es
jmp
mov
add
inc
jle
dec
lret
lret
mov
fwait
inc
insb
js
je
adc
loopne
push
psadbw
jg
sub
sbb
in
and
loope
dec
sbb
fldl
sub
sar
and
mov
jg
xchg
and
rcrb
push
scas
les
popa
cmp
std
nop
lret
dec
mov
lret
das
lea
aaa
fsubs
push
aas
fbstp
cmpsb
xchg
jmp
shrb
mov
roll
sub
sub
and
push
jl
pop
dec
test
repnz
cmp
rorl
iret
xchg
insl
jle
inc
push
sub
mov
sub
outsl
lcall
and
mov
test
fdivrp
sbb
push
jl
xchg
xchg
or
mov
jne
xchg
xor
push
and
sbb
nop
ret
adc
rclb
xor
roll
test
or
inc
push
or
in
outsl
push
pop
xlat
and
xchg
je
and
jb
lds
imull
rol
shl
sbb
sbb
dec
pop
cli
pop
cmp
jae
call
insl
lds
clc
aaa
mov
push
fisttpl
iret
nop
cmp
adc
cltd
mov
mov
xor
push
outsl
sub
lods
rep
cwtl
jns
scas
std
sarb
mov
frstor
scas
mov
or
jns
jle
roll
and
imull
in
je
or
jae
ljmp
aaa
xchg
lods
jo
lahf
sbb
call
xor
jp
inc
add
mov
cld
pop
jns
ljmp
xlat
push
push
xchg
ss
xor
jns
mov
sbb
mov
jne
push
inc
adc
orb
test
rcrl
pop
insb
aam
ret
mov
pop
lret
leave
call
iret
and
pop
lret
adc
adc
xorl
test
lahf
or
aam
lcall
mov
rorb
pop
jae
loope
rclb
call
popf
add
rep
xor
xchg
or
mov
mov
push
fwait
cmp
sbb
jp
addl
fiadds
cwtl
movl
sub
ja
pop
aad
cmc
das
push
pop
and
and
dec
or
insl
inc
ret
stos
movsb
mov
xlat
scas
rclb
sbb
mov
lea
or
mov
push
pop
dec
pop
adc
dec
cmp
mov
les
jno
lods
push
pop
pop
push
bound
jmp
inc
mov
or
jnp
repnz
adc
add
mov
stos
xor
jle
std
and
sbb
outsl
and
subb
pop
ror
and
lds
ror
loopne
xchg
mov
js
mov
adc
mov
pop
inc
nop
daa
inc
xchg
mov
out
dec
cmp
sahf
std
jmp
arpl
gs
mov
movsb
pop
push
adc
or
lret
sub
add
mov
sub
int3
push
fwait
sbb
imul
loop
jl
push
push
xor
add
fisttps
repz
imul
loope
xchg
cmp
in
sub
sahf
and
insl
mov
jbe
xor
aad
dec
xor
into
xor
jmp
mov
stos
cmp
lock
sbb
lock
inc
pop
mov
jb
notb
sti
stc
movsb
call
insb
and
dec
and
in
iret
mov
push
sbb
ja
dec
outsb
add
inc
sub
adc
mov
les
shl
dec
mov
ret
jae
test
dec
fdivrs
mov
fidivs
and
mov
add
fildl
jp
test
mov
lahf
xchg
cld
inc
hlt
and
jo
stos
pop
mov
repnz
dec
sub
test
out
int
adc
in
dec
or
adc
pop
fwait
mov
jne
movsl
bswap
xchg
ret
sub
inc
test
jp
dec
pop
je
push
fwait
cmp
xor
mov
cmc
push
repz
jmp
shll
pop
cmp
aaa
in
sub
jne
pop
out
mov
mov
jg
pop
mov
outsb
sbb
jnp
adc
mov
shll
xor
inc
fucomip
add
mov
mov
xor
or
push
xchg
xor
dec
push
add
nop
in
add
jge
pop
cltd
loopne
movsb
xchg
cmp
dec
mov
adc
leave
pop
sbb
out
push
adc
sahf
es
pop
cld
stos
cltd
lcall
movsl
fs
pop
and
fimull
mov
adc
iret
xor
cld
in
add
add
fists
repz
hlt
xchg
inc
dec
repnz
and
push
js
or
pop
cld
imul
fidivs
mov
or
repz
fsubrs
cmp
jns
loope
enter
je
pop
ds
and
stos
add
cmp
test
test
jmp
inc
adcb
xor
and
pop
cld
test
inc
mov
mov
or
xchg
cltd
pop
jl
es
mov
das
out
push
xlat
pop
lea
insl
cli
pop
arpl
int3
push
xchg
fs
mov
jnp
fsts
lea
xor
into
lea
dec
and
xor
or
aas
fildll
mov
sbb
stos
fiaddl
movb
scas
mov
push
push
in
or
repnz
mov
inc
xchg
sbb
push
mov
pop
fildl
into
sbbl
andl
in
arpl
dec
sub
fcomps
mov
push
insl
xchg
mov
das
hlt
jg
jl
mov
and
gs
sti
in
pop
push
jbe
repz
arpl
inc
enter
mul
mov
repz
popf
mov
aas
sarl
jb,pt
mov
ret
jne
ds
push
int3
aas
out
jge
daa
or
ds
fistps
xor
lret
pop
mov
pop
int
cmp
gs
decl
cmp
sub
ss
lods
aad
jne
push
dec
inc
sti
cmc
scas
mov
or
mov
adc
and
pusha
push
dec
pusha
data16
xor
pop
test
lcall
cltd
push
cli
jl
test
jmp
pop
cmp
mov
loope
pop
xchg
ret
jle
shlb
jb
jae
or
addb
icebp
cmpsl
xchg
ret
cmp
jbe
hlt
neg
xchg
repnz
xlat
ja
mov
ljmp
movsb
bound
out
mov
loope
xchg
mov
shll
or
cli
push
adc
rcr
pop
push
dec
pusha
xorl
out
jp
jecxz
adc
pop
ja
lock
push
jp
mov
aas
hlt
xchg
lock
cmp
sub
xor
jb
dec
mov
repnz
int
and
shlb
mov
ret
add
outsl
out
sarb
push
sahf
aas
xchg
xchg
jae
outsb
dec
fiadds
movsb
test
add
jp
xor
mov
lods
and
fwait
or
into
lods
sahf
xchg
stos
xchg
dec
jb
cmp
out
lods
fadds
or
sbb
xchg
dec
pop
and
inc
xchg
fs
sub
fstps
mov
mov
mov
add
gs
lods
std
ud1
cwtl
mov
dec
out
out
push
dec
mov
cld
lock
mov
xchg
sbb
daa
sbb
cmp
push
sub
js
push
div
fisttps
jne
pop
inc
or
notb
mov
loopne
add
leave
push
jle
frstor
push
aas
lock
sbb
jle
mov
inc
xchg
jg
sub
les
fdiv
fisubl
inc
imul
lods
xor
add
adc
cmp
mov
inc
loop
xchg
mov
in
int
inc
xor
mov
shrb
adc
xchg
rolb
fildl
ret
je
sub
or
repz
lcall
push
rcrl
xchg
push
fs
jmp
mov
inc
imul
shll
xor
and
inc
pop
mov
outsb
pop
push
dec
push
int3
sub
sub
jg
xor
call
loope
sub
sbb
dec
xchg
xorl
sub
test
fildl
xor
orl
mov
sarl
loopne
add
xchg
mov
pop
arpl
sti
jne
xchg
or
mov
fyl2xp1
aaa
sbb
insb
xchg
jbe
mov
lahf
mov
mov
lods
rclb
mov
jmp
and
mov
or
clc
and
xchg
mov
pop
negb
xor
push
dec
sbb
xchg
mov
ret
in
out
shrb
ss
fnsave
into
fimuls
adc
and
push
pop
xchg
sti
pop
jecxz
fists
cmpsl
push
mov
ret
ss
xchg
jmp
mov
lret
je
add
jle
sub
lods
bound
push
mov
test
jp
inc
adc
mov
jns
loope
out
mov
inc
enter
cmp
mov
adc
sub
in
mov
test
mov
mov
out
insl
lret
add
test
iret
pop
cmpsb
sahf
aas
ret
in
lcall
out
jns
inc
and
pop
dec
loopne
ljmp
and
mov
pop
or
push
jl
xchg
inc
pop
dec
adc
shr
jl
shr
cmp
or
lea
xchg
mov
sub
cmp
pusha
and
daa
lds
lahf
lea
adc
popf
cmpsl
lret
cmp
or
stos
gs
cmp
pop
cs
jnp
jl
or
mov
shrl
in
test
add
dec
adc
aam
outsb
lock
push
aam
js
call
int3
addr16
mov
jns
or
ficoms
and
sahf
push
xchg
js
aam
stos
mov
lcall
dec
mov
scas
adc
rcr
mov
jge
cmp
enter
push
cmp
mov
seto
jecxz
or
mov
mov
rolb
xchg
sbb
dec
aas
push
adc
jb
faddl
add
in
cmp
cs
in
mov
and
push
ss
xchg
push
cmp
add
imul
xchg
pop
in
xchg
pop
icebp
into
repnz
lea
lods
div
sbb
ret
aad
adc
cltd
out
shl
sub
xchg
cli
adc
add
sti
jnp
das
fisubs
mov
outsl
sbb
arpl
dec
test
mov
and
xchg
call
loopne
or
inc
or
lret
push
adc
inc
test
add
push
test
clc
xor
nop
jg
add
mov
cmp
xchg
push
cmp
vmptrst
in
push
mov
jp
aaa
xchg
xor
pushf
mov
jns
rorb
test
popf
js
push
andl
and
fisttpl
data16
adc
jl
lods
dec
mov
in
arpl
enter
popa
mov
cmpsl
push
mov
out
adc
ret
repz
sub
into
push
jl
mov
cmp
cmc
scas
lods
inc
add
sbb
ficoms
mov
popf
data16
maskmovq
negl
inc
jno
in
inc
push
dec
lds
dec
adc
out
sti
aas
je
rolb
push
add
sbb
div
rorl
mov
cmp
push
imul
sub
outsl
pop
pop
push
xchg
or
push
xchg
adc
popf
sahf
adc
mov
and
or
jns
int
inc
bound
mov
adc
popa
sahf
lods
sub
sahf
movsl
cli
push
sub
fcompl
xabort
cmp
inc
lahf
mov
insl
and
lcall
lods
sbb
out
mov
mov
add
mov
mov
decb
jbe
push
movsl
adc
adc
out
jl
mov
jbe
jmp
adc
jno
cltd
mov
push
mov
mov
and
fcomps
cmp
jae
mov
roll
sbb
mov
sub
inc
rcr
aam
fwait
adc
lcall
push
pop
movsl
dec
inc
aas
outsl
adc
test
enter
pop
mov
pop
rcll
xchg
fidivs
xchg
gs
pusha
dec
stc
imul
repz
push
xchg
cli
fstp
cmpsl
mov
aad
negl
test
sahf
mov
mov
xchg
test
xchg
sbb
mov
pop
adc
fsubrs
mov
add
out
fs
int
cmc
into
pop
pop
add
leave
push
cmp
shl
xchg
jae
scas
xor
jg
lret
xor
adc
js
nop
mov
aaa
out
jl
shrl
mov
jecxz
sbbl
popa
lret
scas
fstps
insb
jo
stos
jge
leave
cs
popf
jmp
pop
je
popa
add
data16
out
hlt
stc
aas
clc
shrl
cmpl
das
add
rolb
push
clc
jb
dec
cmpb
add
add
hlt
cld
aam
lahf
cmp
pusha
add
movsl
push
mov
mov
xor
mov
loope
cmpsb
into
or
jmp
test
mov
in
jne
cld
mov
iret
mov
and
inc
inc
push
pop
insl
les
or
pop
fwait
out
aas
bound
lcall
xchg
mov
jl
add
xor
sarb
push
out
cmpsl
jmp
pop
fidivl
enter
inc
push
or
mov
mov
push
sbb
fwait
imul
inc
lock
shrb
ret
test
pop
cmp
aas
mov
mov
leave
sub
loope
ret
add
je
jae
mov
jp
xchg
fs
loope,pn
in
cmpsb
lock
inc
or
and
addr16
mov
cli
sbb
jecxz
dec
sbb
div
pop
into
mov
xchg
xchg
loope
lock
out
add
clc
test
cmpsl
or
jb
pusha
cmp
fidivrs
cmp
jo
adc
cs
and
pushf
pop
mov
call
aas
push
sbb
xor
inc
or
popa
ficompl
das
aas
mov
inc
pop
dec
daa
pop
lret
push
xor
sbb
rorl
jno
pop
sub
mov
jg
cmpsl
mov
xchg
push
addr16
inc
mov
and
mov
mov
lds
mov
xchg
cmp
pop
mov
sub
mov
pop
flds
es
loop
enter
fnstsw
or
daa
jo
add
mov
and
enter
mov
roll
leave
out
testl
filds
dec
bound
lock
dec
jp
insb
or
jae
pop
cmpsl
adc
out
adc
lcall
mov
xor
ljmp
pop
mov
sub
xor
sbb
xor
xor
xor
xor
repnz
add
cmp
fistpl
fwait
vpcmpgtb
or
mov
fbld
insl
mov
mov
andl
cmp
mull
test
xchg
loopne
fwait
pushf
or
outsb
adc
mov
mov
and
out
fisubs
xchg
mov
push
idiv
fmuls
inc
xchg
push
xchg
addb
dec
or
push
test
xor
fidivrs
inc
in
sbb
cmp
xchg
andl
jl
lods
into
bound
add
and
lahf
push
or
pop
jo
sahf
push
out
xor
add
iret
push
dec
testb
fisubl
icebp
les
stos
or
cmp
and
mov
lds
cmp
rclb
sbb
dec
fildll
sbb
pop
icebp
xchg
dec
dec
dec
sarb
fcompl
dec
pop
inc
lret
enter
js
xor
xchg
jg
in
cli
aas
adc
cs
push
pop
adc
out
xchg
mov
xlat
xchg
pop
pop
xor
xchg
mov
sbb
xchg
aam
jp
aas
clc
push
cmp
push
add
xchg
pop
hlt
jns
inc
inc
sbb
push
movsl
in
loopne
int
cmp
xchg
es
xor
jp
xchg
clc
xor
push
je
inc
xor
or
add
mov
dec
push
scas
das
dec
mov
jp
mov
mov
test
pop
jo
nop
or
inc
je
sub
shll
enter
xchg
fldcw
cmp
testb
xchg
push
addb
push
addr16
out
cmp
jmp
push
cmp
cmp
iret
pop
mov
cwtl
fwait
in
mov
lock
mov
fbld
adc
mov
insl
std
push
jg
cmp
ret
or
jge
pusha
add
add
popl
cmp
fstp
mov
into
push
jecxz
pop
sbb
ret
js
loop
mov
test
cmc
xor
aam
and
sti
pop
add
shll
js
sub
js
leave
xor
mov
jns
inc
leave
mov
enter
mov
and
push
cmp
sbbb
pop
and
rcrb
test
popf
or
jle
sub
cmpsb
sbbl
mov
cs
sub
cltd
lcall
mov
or
leave
pop
es
mov
pushf
mov
gs
divl
cmp
xlat
push
insb
cld
jge
out
and
cmp
cmc
js
cltd
dec
lods
repnz
jge
lcall
mov
int3
sbb
pop
int3
std
and
mov
rcrl
mov
dec
or
push
add
jge
mov
pop
dec
mov
icebp
add
data16
mov
adcl
fbld
jle
insl
pop
mov
sub
or
lcall
out
inc
jmp
xchg
push
xchg
arpl
push
aad
cmp
lahf
xchg
xor
mov
pop
adc
mov
movsb
daa
into
inc
push
fcompl
ljmp
jl
test
and
inc
mov
and
fidivl
jg
xchg
cmp
inc
mov
loop
lret
rcl
and
and
adc
int3
inc
addr16
iret
loope
or
cwtl
sub
pop
popf
xor
or
fwait
test
xchg
jl
outsl
jae
sub
sti
lds
mov
shll
mov
inc
or
push
ss
cmp
push
in
cmpb
nop
push
imul
mov
shl
int
in
popf
add
xor
jge
imul
mov
jmp
sub
std
movsl
xchg
ja
pop
jmp
insb
stos
jge
scas
xchg
push
mov
pop
mov
jmp
jge
rolb
or
push
and
xorl
sti
mov
mov
dec
pop
and
pop
int
push
mov
pop
or
lahf
and
stc
push
arpl
adc
idivl
jo
movsl
dec
xchg
nop
enter
adc
fucom
pop
pop
push
shl
pop
xchg
movsb
add
sahf
mov
outsl
sbbl
lods
mov
jmp
and
aad
xchg
and
js
les
in
data16
or
or
in
mov
fdivl
inc
imul
adc
leave
jle
xchg
jle
jbe
dec
and
mov
push
mov
sub
mov
aas
call
sbbl
pusha
mov
ret
movsb
adc
sbb
sbb
fists
push
or
cmpsb
and
mov
xchg
into
leave
shr
xchg
push
out
into
xor
inc
ds
rolb
pusha
cmc
jns
jge
xchg
cmp
fsubs
int
into
sub
mov
stos
lcall
fidivrs
stc
shrb
fwait
mov
pop
lahf
xor
and
mov
ljmp
test
jecxz
add
jmp
into
push
mov
and
jbe
ja
mov
xchg
sbbl
mov
adc
add
mov
sbb
or
pop
add
xchg
in
mov
push
out
shlb
mov
cmp
jl
outsl
lret
sub
jno
not
in
lcall
pop
xor
mov
mov
cli
xlat
cmp
pusha
xor
mov
fdivrs
pop
lods
sub
or
inc
mov
lods
fsts
lds
ds
cld
mov
pop
jne
std
jg
in
inc
dec
addr16
xchg
cmpsl
outsl
pushf
test
lahf
add
adc
push
add
out
imul
or
xor
xor
fsub
jnp
scas
pop
ljmp
xorl
sbb
jo
jno
xchg
gs
loope
or
ret
or
stos
xor
sarl
fs
aaa
push
iret
push
mov
bound
mov
ss
scas
clc
test
xchg
stc
rcr
and
lods
mov
or
ret
daa
ljmp
cld
rcrl
cmp
jge
fwait
mov
cmp
test
and
lret
xor
insl
jp
push
sahf
fwait
add
pop
pop
and
and
and
dec
shll
add
ja
cmp
mov
mov
jnp
lods
jns
out
mov
xor
inc
roll
or
pop
xlat
decl
cwtl
cmp
scas
xor
out
ja
add
mov
lcall
jmp
dec
inc
cmp
movsb
inc
inc
inc
inc
imul
sbb
cmpsb
loopne
adc
jp
sub
shlb
mov
mov
xchg
pop
or
icebp
push
lret
aaa
add
leave
aaa
or
adc
mov
test
int
daa
jnp
dec
push
cmp
ljmp
mov
in
mov
scas
fdivr
lock
fmuls
mov
popa
push
xor
lret
and
sub
imul
scas
cmp
dec
cmp
stos
aam
and
push
mov
cmp
je
int3
jp
sbb
xchg
in
popf
out
xchg
xchg
int
or
mov
mov
ds
pop
fs
dec
in
push
repz
xlat
pushf
clc
push
sub
stos
adc
bt
cltd
lahf
out
dec
mov
icebp
or
sbb
aad
ds
dec
and
push
dec
xchg
mov
push
push
jns
movsb
imul
xchg
push
mov
mov
sbb
gs
add
inc
xchg
mov
mov
cs
ljmp
test
addr16
test
nop
fs
loopne
pop
leave
icebp
dec
adc
icebp
mov
jle
mov
scas
or
xchg
pop
sbb
lahf
jo
call
popf
xchg
push
sub
movb
adc
mov
dec
mov
lds
xor
dec
mov
mov
pop
aam
movsb
pop
in
rcrb
lods
fldt
mov
rol
dec
xchg
lcall
pusha
lock
fstp
imul
inc
fsts
adc
xchg
xchg
xor
es
shrl
out
push
or
repz
imul
in
mov
loopne
mov
xor
fwait
mov
lods
andl
insl
pop
daa
add
xchg
jg
and
mov
sbb
pushl
les
sub
cltd
pop
pop
push
xor
xor
in
ffree
cmp
dec
pop
cmp
push
add
fidivl
movsl
outsl
shl
add
rclb
mov
fcomps
dec
cmp
push
sbb
dec
pop
leave
andb
popl
in
rol
mov
pop
sbb
or
addr16
add
push
pop
jo
push
xchg
lock
popf
sub
mov
mov
insl
xchg
xchg
lods
sahf
arpl
outsb
popa
fdivrs
jne
cli
inc
and
sti
cmp
mov
xor
xor
xchg
scas
dec
incb
into
jo
jnp
xchg
mulb
inc
jle
inc
testb
insb
les
fs
sub
pop
dec
mov
lods
popa
cs
mov
or
lcall
jno
icebp
roll
lret
aam
xchg
nop
aam
adc
out
jo
cs
adc
cmpsl
arpl
loop
insb
lods
loop
lahf
add
cmp
fiaddl
adc
mov
sub
cmp
push
rcrl
testl
fsubrl
xchg
push
or
adc
push
aas
mov
mov
clc
or
mov
xlat
and
lahf
inc
or
cs
ret
pop
rcrb
ret
sub
jb
dec
repnz
lock
hlt
imul
lahf
fcompl
adc
lods
loopne
lcall
jecxz
shlb
dec
stos
sbbl
lahf
inc
fnsave
sbb
pop
pop
xchg
mov
ds
test
or
in
std
or
repz
icebp
lds
or
and
lock
decb
iret
jnp
test
lods
fst
outsb
lds
pop
loopne
or
inc
pop
inc
add
ja
mov
jmp
aam
mov
mov
call
and
in
je
test
ja
repnz
or
jmp
mov
jg
pop
pop
dec
dec
aad
shll
mov
inc
fsubl
fildll
sub
pop
mov
sub
pop
pop
mov
icebp
fwait
ret
les
push
imul
sub
sub
std
add
in
pop
lods
in
das
cld
scas
icebp
sahf
std
xorb
hlt
xchg
imul
fildl
cwtl
sub
pop
lea
dec
xorl
repnz
or
xchg
add
push
pop
sbb
sti
repnz
incl
mov
nop
dec
mov
in
cmp
lds
les
adc
dec
insl
stc
adc
jbe
cltd
sub
pop
pushf
sbb
adc
xchg
mov
arpl
sbb
add
fisubrs
pop
imul
push
gs
test
outsb
insl
rclb
sbb
aaa
in
and
out
int3
mov
push
xorl
cltd
out
loop
xor
xchg
pop
adc
shlb
mov
cmp
mov
jl
arpl
pop
push
push
fisubrs
loopne
mov
jae
or
mov
flds
int
mov
pop
lock
add
popa
stos
sbb
scas
repnz
cmpsl
xor
ret
shll
ror
adc
test
sub
xor
cmp
jg
cmp
mov
ret
add
out
jecxz
lret
push
and
aad
fs
mov
iret
mov
shlb
xchg
iret
mov
in
bswap
sbb
cs
dec
xchg
fiadds
cmpsl
sbb
ret
repnz
rcrl
mov
push
es
fcmovb
mov
adc
dec
or
test
mov
pop
dec
add
mov
fldcw
sahf
jp
pop
stc
ret
xchg
sbb
movsl
or
cltd
call
fisttps
jno
fs
je
addb
add
add
es
cmp
mov
add
sbb
test
inc
push
dec
mov
fdivl
lahf
xchg
in
sbb
mov
fs
adc
cltd
orl
inc
jae
cmp
icebp
pop
in
pop
inc
sub
cmp
or
pop
fildll
pop
or
loop
xlat
mov
mov
sahf
and
mov
xchg
cmp
sbb
js
add
imul
cmp
pushl
rcll
and
sub
in
xor
jns
rorb
or
lcall
jnp
enter
xor
dec
mov
lret
ljmp
adc
fildll
in
ss
daa
outsl
pop
inc
das
cmc
sbb
pop
pop
cs
dec
push
stos
or
add
xlat
xchg
shrl
std
pop
mov
jle
fildl
or
test
lds
cmp
jnp
shll
sub
mov
add
mov
cli
dec
rclb
dec
cmpsb
jg
adc
les
xabort
push
outsb
xchg
mov
stc
jp
jbe
popa
sarb
mov
fsubr
test
xor
out
xlat
pop
ss
leave
sub
sbb
fsub
stos
les
jmp
adc
cmp
mov
push
mov
aas
xchg
push
add
jmp
popa
pop
mov
and
mov
mov
sub
fstpt
jl
sbb
and
cmp
fwait
leave
shl
mov
dec
fdivs
pop
xchg
jbe
test
adc
std
sbb
stc
andb
ffreep
call
cmp
rorb
dec
push
hlt
pop
stc
push
popa
iret
pop
inc
das
out
bound
mov
mov
aam
mov
mov
sub
in
and
sub
inc
ljmp
enter
out
mov
jbe
xchg
push
cwtl
mov
mov
dec
mov
cmpsb
pushf
outsb
insb
pop
lcall
or
pop
test
dec
gs
jno
xchg
cmp
jns
push
fldt
iret
test
jb
cmp
dec
mov
xchg
lret
fwait
jecxz
pop
pop
movsb
add
sub
sub
repnz
in
jnp
fsubr
fwait
and
idivl
sbb
jb
sbb
iret
cmp
cmpsb
sbb
pop
xchg
inc
cmpsl
mov
inc
xchg
jb
lock
imul
flds
jne
iret
sub
ror
mov
jg
js
xchg
pop
loop
lds
jno
jge
rorl
jl
add
adc
arpl
out
push
stos
or
mov
out
shlb
pop
repz
jg
data16
enter
insl
dec
stos
insl
adc
adc
jae
mov
leavew
adc
pop
adc
scas
xor
add
popf
es
cltd
rol
or
lods
and
cli
fisttpl
lret
lahf
aam
mov
int3
sub
shll
hlt
insb
dec
dec
roll
xchg
nop
push
xchg
testb
ja
or
roll
mov
push
dec
dec
aad
dec
mov
sub
lods
aas
push
or
cmc
cltd
in
mov
insb
xchg
sbb
ss
hlt
je
mov
sub
xchg
xchg
jge
pop
xchg
sbb
jae
loope
lock
or
fcomps
jae
sub
fwait
insl
out
repz
mov
mov
sub
mov
push
in
mull
jle
test
mov
imul
adc
mov
sarl
sbb
insl
xor
or
mov
dec
sbb
in
dec
cmp
inc
and
or
mov
and
adc
add
add
jnp
push
sbb
jmp
inc
int3
out
outsl
or
mov
cwtl
adc
inc
adc
mov
out
cmp
cli
mov
sub
xchg
mov
fldl
call
mov
ficomps
xchg
fwait
push
shr
or
mov
cmpsl
cltd
testl
aaa
aas
dec
cmovle
pushf
out
iret
cs
xlat
pop
pop
aas
pusha
fiadds
xor
adc
lock
sub
repz
dec
and
sbb
inc
mov
sub
cltd
dec
adcb
repz
cmp
xor
dec
mov
jne
jo
sub
rorl
jg
sub
bound
cs
jmp
xor
inc
adc
add
cmp
fwait
jecxz
adc
dec
sub
cld
xchg
jnp
xchg
or
mov
pushf
xor
mov
shl
push
js
dec
add
outsl
out
xor
xor
jbe
faddl
or
mov
pushf
xchg
jb
push
mov
out
mov
mov
push
in
sahf
inc
xchg
cwtl
mov
mov
mov
pop
mov
jns
inc
fsubr
sbb
mov
inc
pop
xchg
adc
mov
jmp
mul
lods
push
adc
add
push
cmp
mov
or
cmp
xlat
sbb
sbb
xchg
push
in
or
test
sub
mov
test
inc
jae
xchg
jae
pop
cmp
mov
or
pop
and
outsb
or
sti
jae
std
push
sbb
adc
out
aad
cli
adc
sub
pop
xchg
mov
rclw
ss
jne
mov
sti
ja
cmp
ret
insl
xchg
xchg
add
pop
repz
dec
inc
push
into
jge
xchg
cmp
int3
stos
lods
jbe
dec
xchg
shr
lods
sti
pop
int
aad
or
and
mov
dec
xor
jnp
mov
xlat
ret
hlt
push
lret
ds
bswap
std
mov
inc
repz
repnz
cwtl
and
rolb
push
das
xchg
leave
rorb
pop
lods
lock
leave
push
inc
xor
jnp
into
dec
xor
inc
mov
inc
addl
outsl
sbb
push
mov
mov
pop
pop
inc
aaa
push
and
popa
mov
arpl
icebp
mov
mov
movsb
lahf
xchg
jmp
xchg
and
arpl
pop
xchg
ds
cmp
icebp
testb
push
cmp
jnp
test
pop
in
es
icebp
decl
add
push
mov
fadds
mov
mov
sub
repz
pop
sbb
popl
sub
or
inc
jg
ficoms
jecxz
jge
iret
lret
sub
jl
sbb
and
dec
lret
imul
int
xchg
mov
fmulp
aas
push
mov
lea
adc
mov
mov
xor
cld
pushf
mov
cmp
cli
aad
outsb
mull
test
push
enter
in
push
push
in
and
push
xor
adc
lds
xchg
sahf
outsl
pop
loopne
jo
inc
aas
push
pop
out
es
into
inc
add
ds
mov
xor
int3
cmp
mov
xchg
sbb
adc
fstps
dec
jno
and
sbb
cmp
popf
sub
fiaddl
push
mov
push
or
test
add
loopne
pop
adc
push
sub
jne
pop
or
stos
fmull
sub
inc
add
lods
mov
lret
adc
or
aad
jne
xor
push
cwtl
sbb
sub
bound
mov
orl
jnp
cmp
push
adc
sbb
inc
pushf
out
cmc
lods
and
jp
negb
int
push
ret
xor
rorb
cmpsl
mov
iret
inc
or
imul
out
pop
test
adc
and
test
adc
cmp
cmp
inc
or
out
fcmovnb
imul
loop
or
pushf
loopne
mov
rolb
js
jno
sbb
subb
repnz
inc
dec
icebp
jo
daa
iret
mov
push
or
loop
add
sbb
and
mov
sub
jle
xlat
xor
and
xlat
and
or
and
pop
cmp
je
xlat
jb
adc
xchg
pushf
js
addb
aaa
lret
pop
cmpsl
jbe
or
push
mov
orl
scas
ss
adc
mov
jno
movsl
sub
mov
pop
movsb
cli
lcall
push
inc
add
mov
mov
push
and
adc
lahf
cmc
das
das
xchg
movb
mov
shr
push
push
loope
mov
jge
xor
nop
stos
cmp
sbb
push
daa
pop
js
jge
int
xor
pop
mov
cmp
es
movsl
ja
inc
fsts
scas
and
pop
cmp
adc
in
push
push
sub
adc
push
clc
rcll
jae
cmc
add
jg
adc
pushf
mov
jne
mov
sbb
inc
lahf
jns
xlat
sbb
outsb
int3
add
popa
push
push
inc
ret
pop
imul
popf
daa
inc
ret
test
xchg
out
sbbl
and
sub
cld
bound
xchg
test
pushl
lret
lock
loope
lds
sti
movsl
ret
loopne
fdivrs
dec
push
or
mov
add
mov
aad
mov
ret
fists
mov
adc
pop
out
sbb
jbe
ljmp
push
jmp
add
jno
cmp
iret
jnp
aaa
lret
mov
xor
out
inc
out
sbb
test
inc
mov
and
cmp
aad
enter
imul
pop
cmp
dec
cmpsl
jo
xor
xchg
fcomp
lea
cmp
lret
xor
sub
popf
sub
sub
xchg
jae
lret
ror
adc
and
inc
sbb
imul
pop
or
mov
mov
dec
lock
std
sbb
cli
imul
jno
jno
or
fadds
or
clc
xchg
fistpll
add
cwtl
iret
fcom
stc
in
and
mov
jo
int3
push
mull
xchg
adc
pop
sub
jle
lar
mov
xchg
std
xchg
pop
cmp
xchg
dec
mov
aas
pop
std
in
jae
cmp
pusha
mov
jle
rorl
inc
js
ss
stos
lret
mov
dec
pushf
sub
xor
pop
fldl
iret
mov
insb
sub
mov
mov
aaa
add
add
call
push
into
mov
pop
fidivrs
dec
ret
sahf
cmp
dec
stc
loopne
adc
xchg
aas
mov
fists
dec
bnd
hlt
lret
mov
into
add
leave
fptan
push
jle
push
fucomp
lods
fs
mov
add
fisubrl
mov
mov
stos
out
insl
add
repnz
clc
adc
jge
jae
call
xchg
pop
scas
jmp
mov
pop
add
stos
stc
mov
jg,pn
inc
dec
push
push
pop
pushf
int3
loop
jnp
int3
xchg
pusha
fldt
test
or
mov
insb
insb
and
push
out
stos
sti
lcall
pop
pop
sahf
inc
test
movsl
push
addr16
int
repz
lods
mov
lret
loop
cmp
adc
jns
test
movsb
mov
inc
ja
mov
call
fstpt
mov
in
imul
sub
or
xchg
mov
popf
pop
xchg
ljmp
pop
mov
cmp
call
out
sub
cltd
xor
sahf
push
leave
sub
inc
fsubp
xchg
int3
and
aam
xchg
int
push
leave
xor
pop
das
pop
mov
mov
sbb
stc
scas
loope
mov
jg
sarl
loop
int3
aad
sbb
popa
lahf
adc
ljmp
xchg
lcall
sub
mov
iret
das
in
dec
fidivrl
mov
mov
in
adc
cld
or
dec
mov
adc
movsb
dec
mov
es
jb
and
mov
cmpsl
sahf
dec
add
sti
sbb
sahf
test
fcom
lods
fsts
push
ds
fs
cmpsl
jne
jae
jbe
xor
inc
stc
adc
push
xor
or
fdiv
or
lock
xor
into
mov
rorl
or
push
pop
or
out
stos
cmp
or
enter
jns
cwtl
sub
mov
mov
fistps
aaa
lods
jnp
fsubrl
out
out
mov
jo
mov
and
in
inc
mov
jbe
jne
std
mov
mov
dec
adc
push
push
cld
pop
sbb
je
dec
rclb
fwait
cltd
je
scas
out
adc
fdivp
xor
xchg
stc
sarl
lea
aad
shlb
ret
mov
addr16
mov
inc
jb
xchg
adc
jmp
add
es
lcall
movsb
cmpsb
rcll
push
inc
pop
cmp
pop
int3
sbb
test
mov
cmp
mov
and
and
sub
and
sbb
stos
sbb
cs
aad
sub
mov
cmp
faddl
lret
add
loopne
mov
sahf
je
adc
test
out
lahf
ret
in
std
imul
daa
les
inc
pop
jne
loope
push
push
pushf
cmp
mov
pand
mov
xor
push
add
mov
dec
pusha
pop
imul
out
dec
adc
ljmp
sbb
push
scas
jl
push
jmp
lods
cmp
aas
add
push
jmp
rcl
mov
xorb
lret
cmpl
outsb
inc
dec
lods
gs
dec
cmp
sti
sub
sub
pop
xorb
mov
jmp
push
xchg
adc
flds
cmp
pop
dec
aas
imul
test
jbe
cmp
fcomps
sub
aad
cmc
in
mov
aas
aas
sbb
or
insb
std
add
cmp
jb
mov
sbb
scas
sbb
mov
call
sarb
xor
sbb
jge
in
push
inc
and
int
dec
cmpsl
cmc
xchg
mov
mov
fbld
rcl
inc
rclb
add
mov
jb
out
add
and
fsts
fcompl
sub
adc
mov
xchg
xorb
mov
sbb
xchg
xor
or
xchg
fxch
dec
mov
idiv
mov
lret
insl
mov
or
ret
pop
test
and
fs
inc
sbb
and
xor
outsb
hlt
je
ret
pop
notb
jl
repnz
int3
pusha
mov
dec
xchg
xlat
adc
mov
scas
inc
and
insl
jecxz
movsb
jns
xchg
subl
enter
cmp
cli
cs
mov
lcall
js
xchg
in
mov
jb
sub
imulb
jb
jl
js
jmp
ret
add
and
sub
mov
stos
sbb
popa
lahf
test
and
fisubrs
xor
test
int3
aaa
add
pusha
mov
ret
add
jge
inc
outsb
paddusw
xchg
push
mov
push
and
scas
js
js
ret
dec
loope
daa
xor
jl
push
jle
jp
jg
test
sbb
daa
ficoml
loopne
sbb
orb
xor
mov
sti
push
lea
inc
int3
stc
inc
xchg
rcll
fwait
nop
or
pop
fldl
jae
in
mov
mov
sar
xlat
ja
push
jo
iret
nopl
lds
mov
adc
addr16
push
inc
stc
mov
sahf
or
xchg
dec
mov
daa
xor
add
das
xchg
arpl
mov
dec
mov
addr16
ss
sub
cltd
js
and
sub
pushf
mov
dec
jne
adc
ret
jae
dec
ljmp
pop
std
cmp
loopne
pop
cmp
jl
jg
idiv
xchg
mov
mov
push
clc
lcall
js
es
cwtl
int3
scas
push
sbb
xor
xor
hlt
test
and
mov
scas
adc
pop
push
mulb
fs
flds
aaa
movntps
mov
inc
stc
lcall
lret
bound
dec
mov
sbb
jo
shll
jecxz
aam
ljmp
or
cmpl
inc
push
push
lcall
cld
jl
and
cmp
movsb
cmp
ds
popa
addr16
inc
and
push
and
mov
jne
std
dec
xchg
pop
jecxz
dec
pusha
shlb
cmp
sub
pop
repz
and
stos
fidivl
fs
gs
pusha
iret
jle
xor
xlat
mov
clc
sbb
in
nop
jno
cmp
push
sub
sub
imul
jge
jbe
movb
xor
fimuls
sti
repnz
dec
ja
xchg
pusha
cwtl
push
jmp
cmovne
inc
out
pop
dec
sbbb
fdecstp
call
fiaddl
js
in
cmp
lcall
adc
lods
bound
rorb
pop
icebp
fcoms
scas
jne
inc
nop
fwait
scas
add
in
mov
push
mov
xor
sbbb
inc
inc
mov
cld
pop
sbb
inc
add
stos
or
adc
out
cmp
incb
jae
ret
stos
ret
mov
push
cmp
pop
jl
mov
mov
cli
enter
cmp
mov
cmp
cmp
push
out
test
gs
mov
sub
jnp
or
mov
lock
stc
push
mov
mov
and
in
add
push
adc
orb
mov
push
xchg
mov
data16
loope
pop
jecxz
fidivl
xor
scas
std
jmp
push
inc
popa
or
sub
jmp
and
pop
movsl
or
es
xchg
pushf
pusha
dec
jecxz
data16
rcll
cltd
cmp
and
adc
cld
xchg
mov
jl
mov
xor
mov
push
pop
popa
mov
insl
sbbl
xchg
stc
jns
push
das
push
mov
std
add
into
ret
dec
into
dec
jmp
sub
iret
fwait
adc
add
js
pop
push
cmp
decl
push
pusha
lods
sbb
lods
sub
cwtl
inc
xchg
push
imul
add
dec
roll
insb
jns
inc
lods
stc
adc
mov
call
push
mov
sub
rcrb
push
and
in
das
pop
jmp
loop
daa
mov
scas
mov
mov
pop
push
xor
arpl
test
add
mov
xchg
mov
movsb
sbb
filds
and
mov
jmp
in
js
and
nop
and
inc
cmc
jae
jb
stos
push
cmp
aas
out
mov
xchg
lds
pop
or
sahf
fcmovnu
and
fsts
dec
jne
pop
pop
xchg
aas
mov
stos
pop
push
jo
xor
or
and
cs
scas
rcll
mov
push
enter
ret
jecxz
ret
push
and
push
jno
jmp
inc
call
stos
dec
dec
xchg
fprem
and
cwtl
stos
cmpsl
dec
scas
xchg
test
jne
fdiv
js
push
cmpsb
mov
xor
lods
jbe
in
fistps
pop
and
jno
sub
add
jns
pusha
les
das
sbbb
ds
adc
mov
push
shlb
sahf
xchg
rcr
inc
lods
insb
jo
or
inc
and
call
adc
lret
ret
aam
rcr
loope
pop
add
out
pop
jp
jg
cmp
es
jns
mov
in
push
aas
pop
pop
or
dec
jge
leave
stos
lcall
clc
shl
add
mov
out
add
jno
sbb
test
pusha
push
push
and
pusha
outsb
lock
mov
or
jo
sbb
lret
mov
mov
or
cmp
sub
gs
lahf
outsb
jb
cmpsb
or
adc
adc
out
cld
pop
xor
dec
xchg
jmp
sub
addr16
jmp
xchg
inc
mov
dec
mov
xchg
iret
mov
stos
sbb
sub
sbb
jae
pop
fldenv
mov
test
addr16
mov
jg
cwtl
aam
cmp
fbld
jl
inc
aas
cs
pop
cmp
cmp
js
or
pop
mov
inc
xor
lods
xor
adc
mov
inc
iret
sbb
lret
out
pop
incl
push
js
movsl
jg
pop
mov
flds
xor
pop
int
fsubrp
lret
inc
cmpsb
jg
cmp
add
push
ret
ja
and
dec
jnp
and
loop
mov
rorb
mov
imul
inc
insl
jae
fldl
xchg
das
sub
jecxz
ljmp
jl
ds
rcrb
inc
xchg
js
push
xor
push
addr16
sbb
pop
int3
aaa
fs
pop
push
xor
testl
jne
xchg
outsb
jp
stos
fs
mov
adc
or
scas
or
decb
and
add
inc
mov
insl
mov
stos
mov
xchg
mov
mov
or
xchg
daa
xor
jmp
lret
or
mov
pop
push
ja
pop
insl
xchg
add
mov
pop
shlb
add
mov
jecxz
adc
ficoms
or
insl
lods
lea
inc
inc
dec
mov
pop
in
push
in
outsl
das
test
scas
push
out
adc
mov
jl
sti
pop
push
mov
cmp
fnsave
loopne
lcall
inc
push
pop
lahf
inc
insb
das
mov
aad
dec
push
xor
adc
enter
loope
out
repz
cltd
data16
dec
dec
dec
aaa
test
or
mov
int
pop
ret
inc
and
adc
add
mov
xchg
sahf
test
pop
inc
push
push
xchg
scas
push
movb
or
je
add
jmp
dec
fmull
outsl
aas
push
lds
jb
inc
push
ja
add
je
add
adc
cmp
mov
xchg
add
nop
or
pop
repnz
mov
negb
mov
jg
rorb
outsl
jp
int
lock
mov
sbb
push
movsb
pop
in
sub
shrl
and
adc
pop
cltd
jle
fs
js
or
bnd
mov
sub
sbbb
jge
push
xchg
jl
rolb
mov
aam
cmp
es
rol
and
clc
xor
jo
in
ss
mov
lods
jle
and
repz
xchg
cmp
xor
mov
jle
cmpsb
jbe
fnsave
jnp
sahf
icebp
outsl
dec
rorl
iret
sbb
test
icebp
pop
adc
push
add
or
jno
hlt
lods
cmp
jge
loope
popa
test
loop
mov
bound
loope
xchg
test
cmp
mov
insb
jo
push
jl
stc
sub
sbb
sub
test
sbb
mov
in
push
testb
xchg
push
call
movsl
push
outsb
inc
add
rclb
in
mov
dec
and
das
mov
push
mov
jle
ljmp
mov
std
inc
int3
mov
lods
pop
repnz
mov
sbb
daa
aaa
cli
aaa
adc
sub
sbb
pop
imul
jecxz
in
in
inc
leave
jge
cltd
aad
gs
mov
negb
mov
add
mov
sbb
mov
pop
outsl
add
jge
gs
and
fs
adc
aad
adc
xor
scas
sub
addr16
jp
ja
mov
push
cs
cmp
arpl
push
sbb
nop
inc
pop
cmpsl
xchg
lret
jge
xor
adc
ret
xor
lcall
jae
mov
jp
mov
hlt
sub
aas
dec
adcl
mov
in
push
cmpsb
mov
add
mov
lret
and
je
stos
pop
dec
fwait
sbbl
xchg
jp
jno
xor
popf
push
jl
and
cltd
sbb
fldenv
es
xlat
cmpsl
jne
addr16
divps
fiadds
nop
loope
arpl
lds
lret
std
jmp
cmp
push
stc
shrl
pusha
jge
mull
test
add
push
sbb
decl
gs
mov
ret
in
and
mov
dec
jbe
sbb
mov
sub
mul
dec
scas
pop
pop
stos
pop
jl
add
fdivrp
mov
cmp
mov
pop
xor
insb
daa
cld
out
jecxz
repz
andl
in
xchg
fimull
xlat
adc
ljmp
int3
jo
decb
inc
dec
std
test
sbb
pmulhw
or
cmp
pop
loope
or
mov
pop
rcr
rol
push
mov
xor
int
fdivl
xor
adc
mov
mov
scas
sub
inc
push
sbb
mov
jp
shr
jbe
push
loopne
pusha
jle
je
cmp
mov
shlb
mov
jecxz
push
incb
lock
lret
jne
in
shl
adc
add
in
mov
jp
jp,pt
aas
pop
loope
cmp
adcb
orl
mov
addr16
insb
xchg
test
sub
inc
leave
mov
es
jae
jns
dec
inc
mov
sub
sub
negl
leave
jle
add
add
bound
xor
push
shrb
xor
shll
pop
sub
ja
pusha
jb
pop
daa
mov
and
and
pop
jle
mov
ret
repz
leave
in
ret
xor
enter
sbb
in
stos
rcr
xor
or
ss
shrl
push
xchg
das
andl
fimuls
das
in
dec
xchg
lret
mov
xor
add
int3
outsl
or
pop
or
ja
xor
inc
xor
sub
lea
sahf
aam
push
pop
xor
push
aaa
out
cmc
insl
enter
sbb
sbb
ret
loopne
data16
xor
divl
adcl
in
in
lods
test
lds
adc
sti
pop
iret
stc
jns
xor
and
mov
cmp
test
lds
ret
std
dec
push
rorb
inc
push
add
push
dec
push
lret
mov
and
inc
iret
movsl
sarl
xlat
dec
in
stos
inc
push
ret
imul
mov
cmp
sub
dec
insb
sti
shlb
cmp
repnz
xor
cli
or
mov
rcr
das
sub
leave
pushl
fiaddl
xchg
mov
jns
daa
sbb
jp
mov
std
inc
fdivrp
test
jmp
pop
ds
push
mov
cmpsb
pushf
pop
insb
xchg
fistps
jmp
movsl
int3
dec
and
ffree
cltd
sbb
in
pop
or
sbb
insl
aam
mov
or
dec
daa
push
and
and
mov
testl
pop
xchg
ja
es
das
push
sbb
sub
lods
or
dec
mov
cmp
pop
pop
dec
push
inc
fwait
jp
inc
loop
mov
call
jo
stos
xchg
addr16
add
and
add
cmpsl
daa
ja
out
xchg
aad
cli
xor
xchg
out
cmc
js
adc
mov
xor
cmpsl
mov
lcall
ljmp
scas
push
pop
mov
cs
push
push
mov
cld
js
mov
rcrb
jb
inc
fistpl
cld
inc
jp
fdivrl
push
jb
mov
icebp
gs
fisttpll
in
cmp
hlt
mov
mov
mov
pop
xor
mov
hlt
push
sbb
lret
sbb
xchg
sub
mov
or
cmc
lods
sbb
dec
in
inc
cmpsl
xchg
and
lods
sbb
or
bound
xchg
add
fmull
adcb
dec
inc
push
jns
test
int3
lahf
out
mov
repz
enter
insl
inc
and
lcall
rcll
pop
bound
cmp
aaa
jg
push
hlt
and
xor
jg
xchg
daa
pop
stc
push
lock
je
insl
dec
push
test
out
outsl
out
jae
inc
add
mov
jmp
js
leave
lods
push
mov
cmp
cmp
inc
popf
repz
mov
insb
pop
push
jge
or
imul
call
aad
popa
inc
mov
xor
push
sub
cmpsb
sbb
ret
push
into
mov
or
arpl
xor
imul
outsb
pop
dec
lods
add
jb
divl
imul
sub
inc
rorl
mov
lods
stc
mov
faddl
mov
rorl
jne
jp
pop
das
icebp
adc
mov
lea
lcall
sbb
and
sub
mov
test
add
rcrl
lret
call
lds
call
lret
push
stos
cmpsb
lcall
arpl
testl
sub
jle
pop
out
in
fs
dec
inc
xchg
cmp
ret
aaa
faddl
addr16
aam
inc
aam
nop
mov
dec
int
xchg
test
js
sbb
pushf
xor
test
cmp
cmp
ffree
daa
xchg
test
mov
ss
xchg
jns
pop
shld
pop
xchg
std
sbb
into
stos
and
cld
lods
xchg
mov
test
adc
or
mov
test
in
dec
jge
jne
idivb
push
out
ja
xor
aaa
lcall
add
xor
fsubs
aaa
or
addr16
test
mov
pop
mov
cwtl
icebp
mov
fidivs
call
ljmp
mov
inc
cmp
into
sbb
ret
inc
stos
jecxz
enter
fbstp
jp
pusha
sbb
outsb
cmp
mov
mov
icebp
push
aas
cmp
pop
inc
xchg
or
shl
sub
fs
aas
jae
jae
and
cmp
cld
in
fistps
rorl
mov
xchg
call
sbb
std
xchg
ror
sbb
ss
jns
insb
stc
stc
enter
or
divb
and
scas
inc
add
pusha
stos
and
lds
cmovb
mov
sub
jo
push
cmc
add
in
test
inc
dec
ljmp
stos
or
sbb
sbbw
xor
in
lret
push
mov
loope
addr16
jl
jge
fiadds
stos
inc
mov
mov
repz
xchg
mov
ljmp
and
push
sbb
push
int3
pop
ds
adc
sub
push
pop
hlt
pusha
aad
fs
cmpsb
add
cli
sbb
sbb
lret
rcll
mov
cld
xor
filds
xchg
xchg
or
aaa
in
loopne
int
sub
jl
sub
fucom
or
and
pop
dec
mov
or
inc
stc
popa
push
mov
into
jae
shrb
jno
xor
test
ret
push
add
test
inc
dec
sbb
sti
mov
or
mov
cld
push
mov
push
push
mov
inc
gs
sub
jl
ss
test
aaa
mov
or
iret
ret
mov
xchg
into
mov
mov
xor
mov
out
jmp
jle
ficompl
add
inc
cmp
pop
pop
imul
mov
xchg
push
jle
xchg
ficoml
les
xchg
xchg
fwait
sbb
dec
push
push
inc
pop
mov
gs
pop
cmp
push
cmp
jmp
xor
mov
popl
xchg
test
xchg
cld
add
adc
aaa
std
xchg
push
add
xor
test
in
scas
adc
jne
jb
sbb
mov
xchg
adc
inc
lret
cmp
bound
ret
cmp
sbb
cmp
popa
and
sbb
or
cmp
inc
fucompp
in
inc
rclb
add
mov
out
cli
inc
push
hlt
jle
jno
pop
das
dec
ss
inc
test
adc
mov
jne
gs
stos
movsb
mov
or
add
mov
cmp
push
add
movsb
les
call
stc
adc
jo
push
call
outsl
sub
ljmp
cld
sbb
arpl
pusha
out
jg
pop
and
inc
pop
jg
lret
mov
sub
dec
add
in
dec
scas
jno
dec
xor
jne
negb
cmp
mov
je
push
inc
repz
mov
leave
out
push
psrad
add
inc
call
jmp
movb
inc
dec
xchg
fists
and
out
fisubrl
pusha
pusha
std
aad
scas
aas
xlat
adc
call
fsub
xor
repz
repz
push
xchg
push
stc
xor
adc
popf
inc
lahf
stc
xchg
jg
data16
xor
sbb
adc
xchg
outsb
xchg
ret
xor
in
jmp
or
inc
mov
add
aad
movsl
xchg
lret
adc
sbb
xchg
sbbl
popa
mov
lods
fstl
mulb
fnstenv
or
inc
push
add
and
jo
sti
stos
sbb
aaa
aas
idivl
lret
push
fs
ja
popw
sub
xchg
dec
test
test
cmpsb
out
aaa
addb
push
jns
lret
test
fldcw
jecxz
jb
lahf
sub
pop
adc
jo
add
shlb
mov
xor
dec
push
mov
sub
jle
roll
nop
repz
into
into
sub
sub
cmpsl
mov
rcrl
jae
xchg
test
rcrl
cmp
pop
sub
xchg
mov
cmp
jbe
adc
add
in
xor
aam
dec
lods
stos
push
rcrl
es
xor
mov
fwait
cwtl
xor
dec
inc
dec
andl
imul
add
iret
lea
jb
arpl
enter
xor
jecxz
and
scas
lcall
jo
out
popa
aam
stos
lahf
jno
lock
fmull
sub
add
push
jbe
rorb
lcall
push
les
cmp
shll
adc
push
repnz
adc
enter
jne
test
lods
mov
iret
push
mov
cmp
aas
mov
enter
inc
inc
int3
push
fwait
leave
pop
push
inc
adc
test
or
fwait
out
pushf
and
jge
push
lds
enter
push
in
scas
sbb
cmp
sub
sbb
pop
test
mov
imul
pop
add
into
bound
lret
je
sub
sbb
sub
scas
cs
cmp
jae
mov
daa
fstpt
cmp
push
push
sbb
mov
dec
ljmp
ja
icebp
cmp
fwait
outsl
leave
fs
or
call
mov
push
inc
push
negb
mov
and
mov
and
and
jmp
mov
cwtl
lahf
scas
cmp
out
ret
push
stos
aam
sahf
pop
push
dec
sub
ret
int3
sub
add
inc
mov
pop
divl
cmp
sarl
sub
std
jo
out
push
adc
mov
lcall
push
xor
lods
pop
or
pop
outsl
rcll
add
sbb
fstpt
pop
pop
mov
ret
mov
xorb
js
mov
mov
aas
jo
inc
push
pushf
fwait
iret
test
sub
fdivr
in
mov
cmpl
push
mov
and
movb
mov
xchg
test
mov
and
lcall
inc
lock
mov
adc
in
cmp
mov
xchg
outsl
jbe
cmc
xchg
repnz
jg
outsl
out
sub
and
clc
popa
daa
filds
xchg
mov
mov
jl
sub
xor
push
jns
xchg
int3
movsl
cltd
ret
pop
mov
push
inc
mov
cmp
cmp
pop
adc
and
xor
pop
das
cwtl
dec
enter
mov
add
pushf
mov
cli
les
cmc
mov
div
imul
fsubs
and
hlt
in
xchg
hlt
push
fistpll
pop
or
sahf
lods
dec
ret
and
sbb
mov
je
mov
add
outsb
mov
adc
mov
mov
ss
test
stc
ret
push
push
shll
jae
cltd
and
dec
xor
adc
fdivr
aas
adc
sub
adc
jb
std
lcall
mov
or
lds
dec
inc
xchg
pop
mov
dec
mov
aad
or
jg
sub
mov
jle
or
xchg
mov
inc
jecxz
fisubl
data16
jnp
leave
xchg
test
push
cli
sub
in
mov
dec
push
pop
sbb
iret
push
lds
inc
push
mov
mov
sub
incl
pop
leave
rclb
ret
sbb
dec
jae
jecxz
cmc
js
mov
push
adc
cli
in
es
aas
jp
jg
add
test
js
mov
stc
stos
insb
push
mov
xchg
mov
test
inc
les
and
push
jge
lds
shll
es
pushf
xchg
insb
jnp
cmp
pop
sub
jmp
stos
mov
sbb
inc
xchg
pop
mov
or
stos
in
enter
cmp
inc
mov
addr16
adc
loopne
data16
call
jmp
mov
shrb
sub
jae
subl
out
jg
mov
mov
jle
movsl
push
pushf
outsb
imul
dec
sti
cmp
pop
xchg
repnz
notb
or
push
push
sarb
or
fsubrl
push
mov
add
aas
fcoms
push
mov
fdivl
repnz
and
push
push
cmpsl
mov
call
lcall
xor
sbb
add
mov
mov
pop
xor
pusha
mov
xlat
in
mov
and
lds
pop
jecxz
xchg
call
les
popw
ss
ss
lds
fwait
add
enter
inc
test
adc
inc
iret
dec
xlat
iret
fisttps
dec
rcll
jo
aam
test
aas
test
shlb
imul
mov
inc
dec
lret
adc
mov
fistl
mov
and
lds
imul
arpl
or
icebp
lds
into
arpl
bound
pop
pop
xor
inc
arpl
push
imul
mov
mov
test
sti
mov
loop
adc
ja
jb
add
cmpsl
gs
test
push
lcall
cmp
jnp
add
add
int
dec
and
sbb
cmp
fs
cwtl
adc
cmp
dec
push
push
dec
cld
sti
mov
push
adc
lods
xor
fistpl
es
jmp
and
mov
xor
inc
xchg
mov
adcb
in
imul
jns
dec
aad
sbb
pusha
cltd
test
out
inc
in
outsl
and
push
out
test
pop
cmpsb
in
test
rol
push
push
sbb
es
shll
data16
adc
mov
inc
sbbb
adc
dec
add
shrb
add
cld
icebp
scas
mov
mov
ret
or
push
test
inc
adc
dec
cmc
dec
mov
lods
iret
pop
lahf
mov
sbb
ljmp
dec
pusha
bound
mov
xchg
mov
adc
in
xchg
je
sbb
cmp
fsub
addr16
jnp
mov
push
jp
push
fcoml
sbb
xchg
xchg
cmp
je
xchg
stc
sub
imul
mov
mov
adc
pop
bound
jle
jbe
and
add
imull
in
push
shll
xchg
es
jbe
push
adc
iret
lret
js
repz
lret
add
arpl
sub
stos
outsb
stos
stos
in
jb
aaa
jae
dec
dec
lods
daa
push
jle
mov
dec
sub
pop
scas
pop
jbe
das
stos
repnz
call
xor
rolb
mov
add
dec
push
fdivrs
mov
hlt
cmp
xchg
adc
es
movsb
and
sbb
call
mov
nop
sbb
xlat
mov
pop
mov
push
insb
int
jp
xchg
and
pop
int
push
ss
jae
sub
cld
mov
pop
xor
arpl
sbb
mov
aam
dec
mov
ja
icebp
lock
jl
lods
pop
gs
or
mov
inc
jecxz
sub
out
testb
inc
lods
push
or
mov
adc
fildl
cwtl
fisttpll
xchg
and
andb
push
jmp
js
aam
arpl
out
mov
pushf
or
sub
xor
ds
popf
dec
rol
mov
imul
mov
sbb
aad
or
mov
arpl
and
and
iret
mov
inc
and
sbb
inc
jmp
scas
mov
sbb
fisubl
add
test
dec
arpl
repnz
insb
push
mov
repz
int
mov
mov
xor
fnsave
or
addl
lods
imul
jo
out
popa
aad
xchg
or
mov
stc
fnstenv
repz
push
and
ds
repnz
leave
jp
xor
sbb
adc
cmp
and
mov
jmp
fs
cmpsl
nop
sbb
inc
dec
cltd
push
cvtdq2ps
cmp
aas
xor
fs
sub
and
mov
adc
cs
xchg
daa
pushf
sbb
in
je
mov
iret
or
inc
int3
xor
leave
pop
test
pop
jb
into
mov
fsubs
adc
xchg
in
test
test
adc
mov
lret
push
test
mov
stos
jecxz
sub
pop
xor
xchg
push
mov
jbe
lods
mov
fs
movsl
js
outsl
push
hlt
sbb
idivl
inc
sub
lret
jo
jno
repnz
sbb
mov
mov
repz
jp
mov
std
shll
shrl
inc
rcr
xchg
movsl
mov
fdivrs
and
mul
jnp
inc
dec
arpl
xchg
add
pop
clc
adc
sbb
aaa
repz
ror
push
pop
test
rol
xchg
mov
cmc
clc
fdivrs
push
pop
sti
adc
test
out
lret
or
mov
movsb
aas
js
pop
fwait
add
sar
mov
cmc
or
out
shlb
mov
push
dec
mov
ret
cmpl
mov
fdivl
mov
cmp
pop
sub
cmpb
cmp
hlt
xchg
mov
xchg
fwait
add
mov
xor
and
rorb
jmp
popa
jb
add
inc
aam
cmp
or
cmp
inc
pop
jne
outsb
jns
cmp
and
daa
int3
ret
jbe
push
fwait
popf
jmp
cmpsb
flds
cmpb
dec
popf
xchg
jg
repnz
enter
icebp
repz
pop
addr16
sub
cltd
mov
lea
fstpl
clc
div
pmulhw
and
xor
cmp
xor
add
add
jmp
cld
sub
ficoml
add
cmc
es
jo
repz
ss
mov
pop
out
push
xchg
push
or
mov
cmc
and
in
push
pop
in
pop
outsb
xor
iret
mov
scas
test
loope
cmp
lock
pusha
fnstenv
inc
inc
cmp
sbb
leave
stos
stos
mov
push
xor
dec
sub
add
xor
xor
sub
sbb
pop
adc
sub
das
shll
adc
mov
dec
bound
mov
sbb
push
aam
inc
shlb
les
arpl
xor
pop
imul
outsb
adcb
add
in
shrl
adc
int
jle
stc
mov
test
dec
roll
mov
inc
or
push
sub
rcr
cmp
jl
das
add
add
data16
mov
fistl
ret
gs
jl
shrl
cmc
pop
fistps
add
pop
sahf
mov
push
int
push
push
mov
adc
aam
mov
aad
jo
adc
lods
fs
cmp
push
les
dec
jne
mov
into
dec
out
std
das
ret
push
adc
mov
inc
movsl
mov
inc
push
xchg
mov
in
jg
rcll
iret
sbb
cwtl
idivb
mov
xlat
stos
andb
rclb
shrb
mov
mov
xchg
add
push
daa
or
aas
xchg
xor
push
xchg
xorb
or
test
dec
ffree
mov
lds
popl
data16
test
mov
push
imul
mov
iret
add
mov
in
jb
and
xchg
aad
jo
dec
cmp
pop
inc
fmul
in
pop
jb
dec
scas
xlat
daa
and
add
sub
nop
outsl
or
mov
stos
sahf
xchg
jbe
xchg
popa
mov
std
sub
sbb
pop
ficomps
dec
and
jne
mov
jl
mov
lcall
dec
std
jae
mov
jg
rol
int3
cmpsb
enter
push
push
cwtl
dec
push
xor
fildl
test
adc
inc
js
and
add
adc
jno
jp
cmc
testl
fdivrp
inc
adc
mov
ret
enter
mov
ljmp
jno
inc
dec
addr16
xor
mov
in
iret
js
jge
cmp
mov
lds
outsl
movsl
xchg
xchg
idivb
cmp
pop
loope
jbe
mov
inc
add
adc
nop
insl
dec
mov
mov
push
gs
push
or
repnz
adc
jge
xor
xor
insl
sub
cwtl
mov
or
push
dec
test
mov
out
lret
dec
or
sbb
cld
ret
jbe
sbb
in
call
shll
aad
lds
ljmp
and
fdivrp
dec
xchg
jb
mov
fcoml
lret
add
cltd
or
pusha
pop
jmp
cli
out
shlb
ss
cmp
inc
out
in
sbb
mov
out
cli
adc
sbb
test
dec
push
mov
movsl
jmp
pushf
jge
mov
dec
outsl
stos
je
bound
jge
fnstsw
popf
pop
fs
fstpt
dec
mov
sbb
mov
pop
popa
loop
xchg
push
adc
push
sti
mov
cld
je
test
mov
out
sub
cmp
mov
in
or
cld
mov
push
test
je
mov
xor
ret
mov
les
repnz
sub
stc
adc
push
loopne
jno
scas
enter
push
pushf
xchg
and
add
insl
xchg
in
out
push
jnp
add
dec
sub
push
and
pop
mov
xor
and
mov
pop
movsl
xchg
subb
out
jmp
notb
daa
mov
push
or
or
ficoms
sub
adc
inc
mov
popa
fsub
insl
push
in
and
es
sbb
and
jl
jne
or
sahf
mov
out
jne
daa
addb
mov
loop
mov
sbb
fadds
fstl
ja
idivl
mov
and
into
mov
ds
cld
imul
jl
mov
jnp
iret
add
add
jne
xchg
mov
stos
mov
xchg
addr16
fwait
and
test
jge
shrb
pop
pop
sub
mov
int3
inc
or
and
xorl
aaa
ret
jns
or
das
into
mov
push
dec
pop
jl
cmp
jecxz
jp
outsb
sbb
jns
lret
push
test
mov
inc
mov
imul
popf
sub
stc
das
xchg
cli
lods
fldenv
enter
pop
imul
daa
in
lds
shrb
xchg
xchg
sub
and
movsb
in
inc
xchg
sbb
fs
mov
jno
ds
push
les
cmpxchg
and
inc
pop
insb
xor
mov
ljmp
into
imul
add
xchg
arpl
pop
adc
push
mov
mov
out
sub
dec
test
xchg
imul
fidivrl
leave
push
xchg
addr16
jp
cmc
sub
sbb
pop
mov
cmp
sti
daa
cmc
pop
bound
push
mov
push
pop
cmp
insb
jne
outsb
lods
cs
movsb
fisubrs
jns
pusha
in
fisttps
xchg
jno
mov
cmp
in
sahf
xchg
xor
jb
pop
sbbl
xchg
out
fs
shll
xlat
inc
roll
xchg
dec
fldl
cmp
jno
mov
into
dec
sbb
loop
jbe
test
rcrb
dec
mov
jo
into
call
outsb
dec
mov
sub
mov
pushf
sbb
icebp
lock
nop
xchg
lods
jecxz
test
mov
outsb
jns
xor
dec
or
test
test
mulb
out
adc
jp
insb
jnp
rcrb
fcmovne
fstpt
mov
fstpl
inc
les
int3
bound
iret
sbb
mov
data16
arpl
lods
outsl
pop
scas
movsl
adc
pop
bound
fidivrl
jne
mov
hlt
inc
notl
xor
pop
fdivrl
ss
movsl
mov
lret
insl
lock
jmp
inc
xchg
mov
jl
jns
dec
aaa
mov
fwait
cmp
test
ds
xchg
loopne
pop
push
hlt
daa
pop
subb
in
nop
or
dec
orb
cwtl
shr
adc
mov
xor
xor
testb
push
lods
sbb
loop
popa
dec
dec
dec
gs
cmp
push
mov
pushf
pop
les
xchg
mov
addl
arpl
stc
insb
mov
cmpsl
fcomip
fwait
pand
aam
pop
arpl
ljmp
das
or
xchg
bound
cwtl
imul
sub
rorl
cmpsl
stc
xchg
and
cmp
daa
cltd
pop
cmp
lret
inc
sbb
cwtl
dec
mov
lods
lahf
adc
jno
push
inc
out
xchg
or
pop
add
lret
dec
popf
aam
cmpsl
cld
jecxz
adc
adc
push
and
lcall
pop
push
loop
rol
lret
in
mov
xorb
cmpsl
xchg
jp
aad
mov
stc
pop
xor
ss
jbe
mov
xchg
xchg
dec
data16
cmc
loope
data16
xchg
in
ret
pop
mov
in
test
dec
sub
dec
mov
in
sbb
gs
fs
lock
lcall
add
sbb
mov
pop
enter
jecxz
repz
mov
cmp
add
push
cmp
outsl
sbb
scas
and
ljmp
es
sti
out
mov
fidivrs
outsl
pop
cmp
jno
lret
shrb
rorb
xchg
lea
scas
mov
mov
es
sti
adc
inc
mov
adc
call
xchg
dec
xchg
loope
pushfw
notl
bswap
cmp
lods
fwait
cmp
adc
add
pop
ret
in
les
out
mov
movsl
pop
stos
adc
std
pop
or
add
and
mov
orl
ret
and
repz
or
inc
lcall
add
in
inc
push
sarl
add
and
mov
scas
data16
insl
jb
std
add
rol
mov
sbb
and
xor
adcb
notl
repz
and
dec
icebp
sahf
lods
push
sub
lret
js
adc
insl
jl
jmp
fildll
das
in
cmp
sahf
jp
scas
jne
jg
loop
shlb
ret
push
mov
cmp
cli
jns
imul
push
jb
xor
push
dec
jno
inc
mov
shll
dec
and
xor
in
jecxz
cmp
jle
sahf
xor
mov
cmp
pushf
xor
push
jge
repz
lahf
das
dec
stc
mov
lret
insl
rcl
lcall
push
icebp
dec
je
out
stos
outsl
push
xor
inc
fcomp
or
jl
or
dec
and
ss
or
rcrl
adc
ss
jl
daa
and
xchg
scas
movsl
xlat
imul
dec
lcall
out
push
aam
repnz
inc
jg
fisttpll
cmp
mov
les
outsl
sub
outsb
jg
or
sbbb
sub
test
or
dec
hlt
mov
inc
xor
repz
add
sbb
pop
cmpsl
lcall
clc
mov
movsb
ds
testl
outsl
call
test
repnz
add
dec
and
rcrl
inc
mov
out
pushf
mov
adc
andl
jp
xor
fucomi
popf
popa
jae
pop
test
dec
add
dec
jno
inc
shlb
mov
pop
mov
popf
mov
call
mov
pop
adc
jle
add
pop
mov
nop
adc
out
cmp
sub
pop
pushf
fwait
popa
or
adc
or
repnz
mov
jmp
mov
shrb
not
pop
js
lret
adc
mov
stos
int
xchg
mov
lock
add
push
jecxz
bound
and
stos
push
popf
push
dec
mov
pop
jns
clc
push
xchg
rcl
mov
sbb
inc
xchg
mov
jle
ds
jmp
jl
dec
stc
lods
mov
jo
iret
lret
popf
dec
pushf
xchg
mov
cmp
je
mov
sar
cli
lret
pop
sbb
xchg
xorl
mov
loope
add
add
jns
addb
sar
xchg
xchg
mov
ret
mov
dec
test
mov
sub
jnp
sub
lret
or
add
neg
imul
rcl
push
arpl
insl
movsb
mov
sub
jnp
mov
iret
cmpsl
ljmp
das
aas
fstl
jg
loopne
add
xchg
adc
call
mov
add
mov
les
and
and
xchg
test
or
repnz
sbb
cmpsl
sbb
fistps
mov
addr16
jmp
jb
push
and
jne
pop
pop
push
sub
lahf
sarb
daa
sub
pop
sahf
pop
fdivl
in
cmp
in
and
sub
adc
and
pop
pusha
pop
les
popf
or
repz
jbe
mov
and
fdivs
call
jge
std
mov
rolb
pusha
out
scas
sbbl
sub
sti
inc
rorb
sub
fcomps
pop
jnp
adc
in
push
enter
xacquire
and
es
mov
cmp
cmpb
int3
add
or
push
sbb
lock
xchg
cmpsb
mov
cld
popa
scas
movsb
lret
scas
dec
jp
xchg
adc
lret
dec
jno
xor
cli
hlt
stos
stos
and
jb
imul
outsb
xor
rcr
sub
sub
shl
and
insb
aas
sub
sub
and
push
push
jl
icebp
int3
sub
enter
jmp
adc
xchg
dec
jle
ss
pop
pop
xchg
in
mov
scas
add
fdivs
mov
stos
icebp
dec
push
cmp
sbb
into
mov
lahf
arpl
mov
movsl
shll
xor
xchg
int
insl
or
pop
inc
mov
sbb
scas
jecxz
mov
add
leave
add
jo
and
idiv
lods
dec
leave
cmp
mov
dec
mov
push
test
dec
pop
movsl
pop
movsl
jne
test
loope
insb
sbb
sbb
vpmadcsswd
stos
ljmp
stc
add
and
mov
stos
push
or
or
ret
in
lods
repz
adc
imul
and
in
xchg
scas
mov
lret
and
test
adc
pusha
clc
aas
sbb
addr16
push
jl
enter
hlt
pop
ret
sti
pop
lret
sub
sub
aas
dec
mov
in
jle
cwtl
bound
arpl
and
gs
ljmp
cli
mov
nop
sbb
and
xchg
mov
add
popf
pop
sub
push
inc
insb
xor
pop
inc
iret
add
cmp
jl
mov
dec
ljmp
or
lahf
in
sub
ret
or
push
xchg
sub
out
andb
mov
xchg
jbe
xor
int3
mov
fnsave
and
mov
leave
xor
xlat
inc
pop
pop
xchg
dec
fwait
push
jno
xor
cmp
sbb
dec
sub
enter
test
addl
adcb
mov
and
xchg
inc
lret
sahf
sub
mov
movsb
inc
cltd
xchg
imul
push
xchg
dec
or
xor
xor
mov
xor
mov
cmp
aam
adc
xor
jae
adc
lret
repnz
out
aam
xchg
aaa
fdivp
subb
inc
dec
popf
sbb
jge
std
jno
dec
out
or
nop
stos
dec
jnp
addl
xchg
inc
add
inc
jbe
xor
add
bound
pop
mov
mov
jae
in
faddl
pop
jnp
mov
sbb
mov
mov
adc
jp
fimuls
jns
jns
mov
mov
cmp
inc
js
sbb
ja
faddp
push
ret
xchg
pushf
loop
xchg
scas
or
fs
loopne
adc
outsl
jmp
mov
popa
mov
scas
push
xchg
inc
lahf
inc
fs
jbe
fisttps
jnp
xchg
xchg
xchg
inc
adcb
lock
push
fs
or
sub
jae
lret
orb
jbe
and
dec
jo
shrb
add
cmpsb
and
mov
mov
out
sbb
push
cmp
gs
and
aam
mov
jmp
and
xchg
shrl
call
ror
inc
sti
sbb
stc
adc
lret
pop
push
jnp
mov
and
addr16
popf
push
push
in
lods
pop
ficompl
cmp
jle
fisubrs
imul
mov
nop
cwtl
mov
mov
cmpb
pop
ret
adc
test
xor
cmp
mov
sub
sbb
mov
leave
jg
cmp
pop
aam
xor
pop
mov
enter
jge
cltd
je
test
lds
and
pop
sub
sbb
cwtl
cmpb
mov
out
jle
and
aas
in
scas
imul
xor
mov
push
cmp
mov
push
jno
xchg
mov
rcrb
enter
cwtl
inc
sar
jbe
das
push
xorl
nop
push
leave
icebp
lock
imul
daa
rolb
rcrl
lgs
or
cmp
dec
int
sub
cmp
and
push
or
jg
dec
mov
clc
mov
in
add
popf
cmp
pop
or
aam
sub
pushl
push
test
adc
dec
and
push
xor
sbbl
fwait
or
xlat
ljmp
or
xor
popf
dec
nop
out
imul
jmp
xchg
push
jg
and
imul
sub
lret
mov
ljmp
inc
arpl
test
mov
cltd
dec
pop
and
and
pop
push
out
ret
inc
insl
jmp
cmp
movsb
and
ds
cmpsl
and
jecxz
pop
and
cs
call
insl
pop
pop
notb
and
cmpb
sub
sub
pop
push
je
test
outsl
adc
dec
mov
shr
mov
xor
cmp
inc
jle
outsl
push
in
jae
idivl
scas
push
dec
scas
xor
jb
adc
lea
inc
aad
mov
pushf
rcll
stc
mov
bound
cmpsb
or
fidivrl
in
xor
out
les
ret
addb
shlb
or
inc
dec
dec
sbb
rcrl
add
pop
sbb
mov
mov
sti
xchg
xchg
into
cmp
mov
xor
or
mov
shlb
add
test
js
cwtl
cmp
or
push
out
push
mov
call
imull
dec
mov
inc
push
xor
mov
pop
daa
sti
mov
enter
and
leave
and
jmp
sub
dec
mov
mov
sbb
and
push
and
nop
adc
aam
in
mov
ss
cmc
mov
aaa
hlt
dec
xchg
lea
pop
mov
push
mov
adc
adc
push
ret
xor
aad
addr16
push
sbbb
insb
loope
xchg
imul
sahf
cltd
and
outsb
mov
adcl
mov
adc
lods
in
je
sbb
rorb
mov
rcl
mov
pushf
pop
sbb
cltd
bound
xor
xchg
push
sahf
push
jecxz
call
push
mov
outsb
pop
lock
jbe
dec
test
andl
cmpsb
cwtl
adc
inc
or
adc
stc
dec
into
bnd
je
push
xchg
add
mov
loopne
insb
repnz
lock
jle
sete
dec
jo
inc
sub
lea
or
filds
push
bound
mov
push
rolb
pop
cmp
adc
or
and
fnstsw
jmp
pop
arpl
xorb
mov
test
cmp
fistpll
cmp
fstps
push
dec
inc
in
jnp
call
out
arpl
fadd
mov
int
sub
xchg
leave
jecxz
adc
and
mov
repz
aas
mov
fmul
mov
sbb
int
rorb
mov
push
idivl
mov
cwtl
aad
ljmp
outsb
adc
lret
inc
cld
jae
out
adc
sub
sbb
mov
and
adc
daa
cwtl
aas
pop
push
pop
out
add
scas
inc
ljmp
pop
fistl
mov
aas
mov
dec
pop
jle
inc
xorb
pop
movsl
popa
mov
ja
lds
or
imul
push
int
fisubrs
pop
sub
add
cmp
pop
insb
dec
test
hlt
pop
mov
push
jns
nopl
fnsave
dec
dec
incl
cmp
mov
inc
jae
notl
or
xchg
in
repnz
sti
imul
pop
js
stos
je
pop
mov
pop
adc
test
adc
cltd
jge
rorb
fistpll
and
xorb
jcxz
ret
cltd
xlat
pop
jmp
adcl
dec
or
xchg
cmp
movsb
push
sarl
pop
out
mov
jns
dec
jle
push
add
mov
inc
movsl
xchg
rclb
inc
out
mov
lods
add
flds
pop
jge
shlb
mov
sbb
test
addr16
sbbb
dec
inc
and
or
mov
push
mov
ja
sub
gs
out
inc
addr16
jae
xchg
sub
xchg
lcall
in
scas
pop
out
mull
mov
jp
inc
scas
or
pop
mov
scas
lods
mov
clc
out
in
jo
xchg
out
insl
cli
xor
mov
int
fistpl
or
mov
aaa
imul
aas
leave
push
push
mov
scas
mov
push
push
mov
xor
cmc
push
aas
test
and
pop
push
subps
pop
sub
test
and
mov
mov
stos
cli
bound
flds
mov
adc
xor
and
test
xchg
ss
sbb
mov
push
xor
mov
mov
adc
push
inc
cmpsb
in
fbld
dec
mov
push
lcall
xor
sub
xor
or
leave
iret
out
aad
addr16
xor
jecxz
inc
dec
outsl
jl
add
test
xor
leave
cltd
cmp
jl
dec
push
or
push
jmp
lcall
mov
jb
jmp
push
xchg
das
rclb
ds
bound
fadd
outsl
lock
ret
in
add
pop
dec
xor
xlat
jnp
pusha
mov
inc
mov
stos
cmp
sbb
dec
popl
enter
in
sbb
mov
mov
loopne
aas
shlb
push
dec
out
adc
mov
mov
or
jp
push
iret
lods
inc
pop
ret
mov
mov
mov
push
pop
adc
pop
push
aaa
and
nop
fsubrp
aaa
push
mov
mov
mov
push
inc
ds
xchg
dec
xor
xchg
cltd
imul
jnp
dec
xor
aam
jg
cli
and
addr16
add
aad
mov
sub
adc
fidivs
or
dec
es
pop
dec
dec
cli
mov
into
pop
push
out
inc
pop
sub
ret
jecxz
push
stos
ffreep
push
addb
addl
add
lret
dec
movsl
ficompl
popf
adcl
mov
mov
scas
or
test
push
scas
fadd
lea
adc
inc
js
repz
pushf
lock
xchg
ret
xchg
scas
dec
xchg
jnp
ret
mov
aam
mov
cmp
sahf
dec
iret
or
inc
scas
or
adc
adcb
mov
mov
pop
push
xchg
mov
push
pop
js
mov
xchg
sbbl
and
adcl
ss
loope
fiaddl
stos
pop
sti
pop
rcrl
sbb
mov
test
add
pop
mov
lahf
cmp
in
mulb
fs
push
int
mov
push
mov
std
push
add
or
int3
cmp
std
out
inc
sub
mov
rcrb
jp
sub
ds
and
and
stos
cltd
ficoml
mov
mov
fidivl
sti
insl
mov
mov
xchg
fcomps
lds
das
pop
xchg
push
ret
xchg
es
mov
add
daa
sub
in
cmp
jno
push
xchg
jo
lgs
sub
scas
js
push
sub
jecxz
mov
xchg
or
jb
push
popa
jno
xor
test
ficoml
cld
jp
addr16
scas
xchg
mov
pop
stos
sub
ss
out
lds
lds
jbe
cmp
daa
jl
in
orl
pushl
and
mov
bound
sbbl
mov
xchg
push
sub
cld
std
dec
repnz
cmp
adc
sbb
dec
scas
mov
xchg
enter
and
stos
insb
inc
iret
loopne
fbld
pop
mov
out
jbe
jmp
push
lods
pop
shlb
loope
sub
scas
cld
fadds
sbb
cmp
lods
jle
xor
leave
packuswb
ret
inc
sbb
movsl
clc
cmp
xlat
sahf
sub
push
in
in
popf
xor
rclb
pop
ror
ss
cmp
leave
sahf
mov
sbb
or
xor
mov
inc
pop
add
and
sbb
aam
ljmp
aaa
push
loope
pop
mov
pushf
adc
pmuludq
cwtl
cmpsl
out
stos
mov
fwait
add
stc
mov
pop
or
sub
adc
push
xchg
pop
dec
jl
frstor
lods
stos
xchg
cwtl
push
xchg
leave
pop
xchg
add
insb
push
test
lahf
mov
lods
push
add
sub
flds
push
add
scas
push
je
mov
sub
loop
pop
ljmp
fisubs
or
test
mov
mov
mov
inc
mov
out
xchg
cmp
xorb
dec
adcl
das
leave
mov
push
adc
push
ds
push
fcomp
loop
or
cmp
mov
add
xchg
fldz
xchg
movzwl
test
cmp
cld
aas
mov
je
outsb
and
ljmp
dec
add
cmp
insb
adc
pushf
push
sbb
mov
mov
push
mov
int3
jb
shrb
cmpsb
loopne
cwtl
push
mov
jmp
pop
mov
jae
pop
cltd
pushf
outsl
int3
sbb
push
xlat
shll
inc
mov
adc
xchg
sti
xor
push
inc
pop
rcl
enter
push
adc
idiv
push
pop
xchg
add
pop
inc
icebp
cmpsl
sub
jns
ud0
call
jg
fadds
xchg
movsl
out
lcall
push
fwait
push
aad
test
or
mov
scas
popf
mov
mov
cmp
jp
jb
pop
lret
push
add
movsb
push
mov
popf
loopne
sahf
aad
lock
inc
pop
sub
dec
in
pop
xor
push
fsubrs
ds
xchg
and
inc
jmp
lds
shlb
das
imul
aaa
rcrb
or
jp
mov
outsl
jnp
mov
lahf
add
std
imul
or
ja
les
pop
mov
movsl
shlb
jo
sarl
sbb
out
cmpsb
test
sub
mov
mov
loop
icebp
inc
cmpsl
jmp
jo
insb
popa
cmpsb
xchg
pop
xor
pop
pop
xchg
inc
pop
xchg
arpl
aaa
loop
hlt
std
into
dec
pop
mov
rol
inc
and
enter
inc
push
cld
add
pop
jb
push
and
daa
push
pop
xor
inc
in
and
mov
xchg
arpl
cld
fwait
inc
jp
out
mov
xor
add
ret
outsb
scas
scas
xchg
sub
shll
dec
aaa
jmp
shl
outsl
js
or
daa
mov
push
icebp
rcrb
mov
loope
inc
mov
ljmp
js
dec
xorb
xchg
cld
dec
cmpsb
movsl
cmp
pop
push
lahf
adc
lcall
stos
mov
clc
and
sbb
gs
in
mov
dec
or
and
xchg
mov
hlt
lock
and
cli
xor
mov
scas
jnp
jb
push
push
rorb
leave
cwtl
cmpsl
rcrl
stos
fdivp
popf
data16
paddusb
mov
stc
xor
in
adc
mov
cmp
push
xor
aaa
adc
fsin
int
mov
add
gs
xchg
nop
adc
in
fstl
jecxz
movsl
loopne
mov
out
jae
dec
mov
lods
fnstsw
sti
pushf
add
mov
add
sarb
xor
clc
ss
sbb
sub
repz
mov
out
jecxz
andl
aad
xchg
pop
mov
mov
popa
faddl
ds
cli
adc
rcll
adc
inc
pushf
je
pusha
out
inc
mov
iret
or
repnz
and
loop
add
imul
test
mulb
imul
xchg
xchg
test
ret
inc
inc
out
lahf
cmpsb
stc
xchg
xchg
es
and
out
and
sub
inc
mov
popa
mov
cmpb
pop
fwait
xchg
adc
fistpl
mov
xchg
xchg
adc
pop
jg
in
push
push
jl
int
jp
xchg
mov
subb
push
dec
idivl
movsb
ljmp
insb
cmp
stos
arpl
loopne
and
orb
sbb
stos
int
inc
daa
rolb
jecxz,pn
out
movsl
mov
out
rcrl
mov
xchg
or
in
mov
inc
and
jg
push
insb
pop
mov
mov
or
mov
pop
lods
aad
gs
jae
dec
inc
icebp
sbb
push
inc
inc
nop
mov
jmp
jecxz
dec
add
xchg
rolb
mov
xchg
leave
int
stos
cmpsb
mov
jge
loop
loopne
cmp
sub
fs
repz
dec
mov
dec
jmp
pop
dec
jg
jbe
out
lock
fnsave
jb
mov
dec
scas
loop
mov
sahf
sti
test
mov
and
aaa
and
fadd
jnp
mov
mov
sbbb
inc
sub
sub
popf
inc
xchg
and
pop
mov
pushf
inc
divl
popf
sahf
test
sub
mov
mov
push
cs
decb
cmc
xor
dec
xchg
dec
mov
incb
stos
addr16
stos
test
cmp
lods
leave
imul
loop
rcll
inc
adc
imul
sbb
orb
loope
inc
pop
lods
cmpsl
dec
jbe
orb
pop
jnp
pop
daa
inc
push
outsb
xchg
add
insb
dec
cmp
sbb
and
xlat
push
jge
dec
mov
pop
hlt
daa
inc
int
out
inc
shlb
bound
xor
lahf
jg
push
and
call
add
mov
aam
sub
ror
mov
sbb
iret
aam
loopne
sub
popf
add
test
pop
xchg
cld
push
inc
ret
addr16
jae
mov
pop
addb
push
jecxz
test
fdivs
or
aas
repz
mov
and
lret
adc
jecxz
popa
jnp
lods
repnz
imul
insb
aam
and
or
cmc
mov
jle
pop
adc
sahf
loop
mov
inc
cmp
jnp
arpl
push
out
sub
mov
lret
pop
aad
inc
lret
and
sub
mov
divb
sbb
mov
shlb
jecxz
jl
cmp
repnz
xor
xchg
lcall
aad
sti
xlat
nop
fimuls
test
jb
xchg
mov
push
mov
push
pop
cmp
lahf
and
movsb
push
out
mov
mov
jle
add
inc
lds
sub
inc
mov
xor
pop
adc
pop
mov
aaa
fs
and
push
jecxz
mov
mov
andb
push
jge
or
xor
adcb
das
push
push
lds
das
repnz
outsb
xchg
dec
aas
mov
sub
iret
pusha
imul
add
lds
shl
mov
lds
hlt
imul
dec
cmpl
sub
out
jo
lret
cmc
ljmp
lods
les
inc
inc
fldt
mov
ret
xchg
pop
in
cwtl
fstpt
inc
dec
lret
jle
jo
mov
mov
xorb
out
aad
sbb
out
lock
sbb
or
bnd
push
lods
and
inc
shll
pop
sbb
mov
xor
insb
mov
je
adc
icebp
gs
mov
jnp
pop
cltd
in
add
or
xchg
sbb
repz
lahf
xchg
mov
popf
loopne
fcmovbe
lret
popf
pop
xchg
mov
insb
data16
scas
mov
push
or
pop
xchg
mov
mov
adc
xchg
push
push
xchg
lret
xchg
cli
out
daa
pop
push
add
js
fstl
cmc
inc
mov
or
dec
pop
out
xchg
mov
adc
mov
xchg
lret
cld
sahf
lods
mov
fisttps
jp
dec
pop
and
adc
test
jle
es
add
ss
mov
inc
inc
popa
adc
add
enter
loope
fprem
jb
fstl
sub
mov
mov
mov
xchg
lret
gs
fwait
inc
add
jae
test
dec
in
movl
push
ja
and
fsub
and
mov
pop
pop
ds
scas
cs
dec
push
adc
xor
shlb
pop
ret
push
jnp
stos
or
loope
mov
scas
xchg
add
ret
adc
dec
cmp
pop
inc
mov
inc
test
ficompl
pop
or
sub
imul
mov
testl
cmpsl
out
push
pop
roll
cld
mov
test
and
mov
mov
lds
pop
mov
test
rorb
movsb
adcb
bound
mov
shr
cld
hlt
xchg
add
jle
jl
popa
dec
and
pop
xchg
push
insl
xor
cs
aas
inc
adc
je
jg
push
test
aam
add
pop
push
jnp
aam
mov
loop
lret
js
inc
inc
clc
rcll
int3
xchg
jmp
xor
push
popf
enter
adc
push
add
jno
test
xchg
sbb
fsubrl
hlt
nop
ja
jmp
cmp
mull
pop
xchg
jno
inc
packuswb
inc
mov
insl
mov
test
out
movsb
adc
sbb
mov
jb
push
push
popa
or
pushf
xchg
add
in
cltd
xor
and
lcall
dec
scas
xchg
push
cs
or
inc
jle
mov
inc
mov
daa
push
popf
gs
js
sub
sbb
add
mov
pop
pop
fsts
sbb
testl
ljmp
jb
adcb
enter
lret
push
aad
push
pusha
adc
orb
outsb
inc
push
cmpsb
idivb
mov
test
sub
repz
xchg
subb
ret
mov
dec
jecxz
das
in
daa
cmpsb
test
sahf
push
and
sbb
jae
jecxz
push
lcall
cltd
push
icebp
cmp
lret
scas
xor
push
pop
cmc
aam
dec
dec
and
and
pop
aaa
jp
sub
pop
stc
sub
loopne
inc
cmpsl
aad
pop
mov
test
je
int3
es
imul
leave
ficoml
add
inc
arpl
push
aas
jns
out
leave
xor
fisubs
in
das
nop
jbe
inc
jg
outsl
cs
jecxz
fidivs
xchg
pusha
sub
pusha
mov
xor
mov
iret
rcrb
adc
push
inc
mov
pop
cwtl
stc
pop
hlt
dec
inc
arpl
scas
push
cmpsl
jne
fisubl
pushf
lea
cmp
nop
inc
dec
sub
aad
push
and
movsb
pusha
xor
xchg
push
int3
push
aaa
and
fwait
dec
push
inc
jo
sub
mov
repz
ja
inc
xor
loopne
pop
mov
xor
sub
stc
cld
ret
jb
fnop
ret
aam
pop
rcrb
mov
ficompl
hlt
ljmp
js
mov
jp
inc
mov
ljmp
adc
inc
xchg
add
mov
fdivl
in
pop
adc
pop
pop
in
and
mov
jns
adc
or
mov
cmpb
subb
dec
arpl
pop
popa
int3
mov
or
mov
into
je
js
ss
cmpsl
outsb
mov
sti
pop
shrl
imul
fs
cmp
jb
push
or
xor
repz
push
dec
push
sbb
rol
xor
addb
jo
jl
push
divl
add
imul
jp
out
mov
xor
invd
sub
inc
mov
jne
sub
cmc
add
or
and
stos
sub
das
and
sahf
mov
or
push
fs
out
test
lret
or
je
das
sbb
xor
xchg
scas
imul
loopne
orl
xchg
xchg
fdivrp
mov
mov
xchg
stc
add
mov
mov
jmp
std
dec
fists
add
sti
mov
in
mov
inc
mov
fsubs
pop
cmp
iret
insb
jnp,pt
cmc
shrl
jge
adc
ja
subl
clc
xchg
mov
mov
adc
mov
imul
daa
xchg
lcall
inc
push
sub
push
xor
ss
or
add
xchg
shll
in
xchg
mov
adc
into
or
fwait
cwtl
test
add
mov
in
mov
cmp
imul
test
not
loopne
ja
sub
push
inc
lods
test
pushf
jo
dec
or
stos
outsb
inc
fwait
lea
mov
mov
les
cmpsl
test
and
out
xchg
pop
inc
ss
cmp
cmp
gs
mov
shl
cmp
enter
cmp
lods
sbb
out
or
and
cs
inc
aaa
and
sbb
dec
stos
sti
jecxz
mov
mov
xor
es
mov
xchg
push
sbb
mov
sbb
repnz
add
pusha
add
and
repnz
loope
jl
loope
push
mov
test
adc
fcmovu
adc
inc
dec
mov
jns
mov
jle
and
sub
mov
mov
fidivrl
pop
divb
insb
mov
in
sub
add
aaa
sub
dec
xor
push
out
lods
jge
out
cmp
sub
dec
ds
and
movsb
mov
test
jo
add
and
xchg
or
es
into
lret
lock
mov
int
fbld
rolb
rcrb
icebp
sub
je
shr
testl
adc
ja
out
xorb
in
gs
cmp
test
mov
and
fidivl
je
add
mov
pop
mov
jno
les
xor
lret
in
stos
shl
mov
xor
add
mov
call
jne
dec
fisubrs
imul
outsl
dec
mov
int3
xchg
sub
gs
pop
push
add
ja
mov
icebp
push
fld
loop
ds
push
xchg
add
test
repnz
inc
dec
or
in
sub
sbb
adc
loop
inc
xchg
jns
insl
nop
sub
sbb
cmp
sti
mov
aas
out
push
mov
mov
cld
jbe
movsl
mov
mov
adc
sub
jmp
jecxz
push
cltd
jle
push
out
xchg
enter
insl
and
out
sti
xchg
insb
pop
into
ss
scas
lods
jns
outsb
mov
lret
mov
fdivrs
add
pop
lahf
push
repz
popa
xchg
xchg
xlat
or
add
notb
or
movsb
scas
imul
stos
inc
dec
cmpl
pop
adc
lret
out
fmuls
dec
sbb
or
gs
in
cwtl
cmp
push
inc
xor
fistl
xchg
fnstcw
clc
lcall
popf
popl
cmc
xor
stos
push
push
cmc
out
cli
xchg
fcmovb
test
aam
sbb
adc
outsb
xchg
stos
lds
xchg
lock
loopne
add
insl
sub
cmp
stos
jae
lcall
rcrl
les
cli
adc
test
leave
in
dec
jp
jge
jg
jo
imul
enter
inc
aad
arpl
sub
das
popf
and
xorb
cltd
sbb
add
mov
xchg
mov
test
scas
aad
cmp
lods
es
push
jbe
fbstp
and
push
add
mull
lods
inc
out
xchg
pushl
cld
nop
mov
dec
loopne
shrb
or
pop
inc
sarl
mov
jb
bound
ret
cmp
std
inc
mov
pop
jecxz
or
dec
pop
mov
push
mov
sub
push
je
and
aad
dec
rorb
pop
mov
andb
and
outsl
test
rclb
mov
adc
jmp
push
add
mov
mov
nop
aam
lds
lock
cmp
repz
addr16
repz
std
scas
sub
out
fwait
icebp
mov
mov
int
mov
inc
dec
inc
lea
push
scas
fcomps
aam
iret
out
aaa
addr16
jno
aad
ja
repnz
dec
push
pop
into
stos
jns
sub
mov
daa
subl
xchg
dec
addr16
add
mov
jp
nop
loope
out
ljmp
pop
mov
pop
mov
add
dec
mov
loop
rcl
cltd
xchg
cmc
insl
jns
stc
rolb
sbb
in
mov
pop
mov
jp
rcrl
jl
out
xchg
mov
jge
popf
test
int
xchg
jo
xor
inc
sbb
dec
mov
sti
and
lea
cmp
cmp
call
cmp
and
cmpsb
dec
shrl
cltd
notb
or
shlb
std
je
shlb
pop
stc
ljmp
push
lret
test
xor
push
lcall
in
nop
inc
jae
cltd
mov
out
jns
addr16
jecxz
shlb
xchg
insb
bound
fisubl
mov
and
and
mov
and
aas
dec
sub
add
repz
test
dec
gs
mov
fnstenv
cmp
mov
dec
popa
mov
xor
xor
adc
loop
dec
pop
pop
in
or
lcall
stos
fnstsw
dec
mov
pusha
jo
mov
sarl
addr16
add
dec
cmp
in
adcl
sbb
rol
lock
adc
test
aam
push
repnz
mov
sbb
inc
adc
int
fdivs
jge
jl
push
sub
dec
andb
stc
dec
mov
movsb
push
imul
stos
in
push
test
mov
pushf
xchg
mov
test
xor
mov
jno
xchg
roll
in
sub
in
inc
les
jno
mov
aad
out
sub
jno
mov
cmpsb
pushf
imul
insl
xchg
aaa
lret
cmp
outsl
and
pop
inc
frstor
movsl
mov
or
or
loop
jo
mov
push
jno
fldcw
aaa
test
mov
lret
and
lods
ljmp
mov
dec
iret
shlb
sti
jnp
lds
mov
mov
aam
xchg
cmp
xor
mov
pop
cmp
mov
js
pop
xor
mov
imul
insl
rcr
push
pop
lock
inc
cmp
les
or
sbb
cmp
pop
or
sub
stos
sarl
xchg
pop
repnz
mov
mov
lret
adc
pusha
pusha
enter
xlat
jle
add
clc
imul
sbb
push
mov
aam
inc
pop
jnp
mul
popa
aas
repnz
les
pop
sub
mov
inc
xchg
dec
dec
aad
push
aad
out
loop
in
pop
outsb
pop
fwait
das
xchg
in
and
add
and
addr16
jno
cmp
popf
jmp
incl
mov
std
fsts
sbb
dec
pusha
dec
bound
xchg
mov
in
jae
mov
mov
outsl
xchg
sub
xchg
jbe
leave
enter
xor
xchg
sbb
repnz
addr16
sarb
and
adc
aaa
cmpsb
pop
rcrl
out
fidivs
shll
mov
xchg
cwtl
dec
push
ficompl
ret
test
fdivrp
mov
push
shll
int3
rolb
pop
and
pusha
jmp
xlat
dec
mov
xchg
jmp
ds
je
dec
pushf
xchg
test
lods
ss
aam
cltd
loope
das
ljmp
pushf
sub
jl
fmull
insl
aam
dec
mov
mov
subl
andb
mov
aas
or
popf
in
jg
es
sbb
rcll
mov
xor
xchg
add
cmp
cmp
js
addl
cld
mov
inc
out
mov
mov
mov
mov
xor
fbld
sahf
shll
decl
in
js
xor
repnz
or
push
pushf
push
add
loop
mov
fmul
pop
ficoml
and
ja
int
les
xor
mov
adc
test
mov
inc
or
or
in
inc
inc
pusha
mov
pop
movsb
jbe
aad
scas
std
lods
ret
mov
lods
lcall
lea
pop
scas
pusha
add
aad
dec
push
inc
jno
push
push
in
or
jno
loopne
jbe
fisttpl
sbb
leave
scas
mov
cmc
and
ss
fildll
mov
lds
cmp
mov
sbb
xor
add
inc
addr16
gs
stc
sti
mov
mov
mov
add
push
cmc
dec
xchg
push
push
ret
int
dec
imul
mov
push
sub
xor
mov
ljmp
adc
push
and
lods
sub
shr
std
out
inc
jle
xchg
mov
jnp
cli
test
icebp
xor
push
mov
mov
movsb
outsb
fisubl
shll
lock
pop
shrl
jae
shlb
jge
ja
pop
sub
cmpsb
loopne,pt
lea
movsb
fidivrl
pushf
add
outsl
aad
dec
mov
xor
mov
stos
lods
bnd
or
into
push
mov
movsl
aam
pop
imul
mov
out
pushf
add
mov
mov
jno
xor
je
add
cmc
jecxz
and
pop
sbb
jnp
movsb
iret
sbb
test
in
pop
mov
xor
cmp
loop
into
add
push
add
sbb
cwtl
push
scas
je
add
leave
lcall
es
adc
andl
mov
jecxz
out
sbb
dec
in
int3
popf
mov
cmp
inc
cmp
jb
mov
inc
mov
add
xchg
inc
jl
adc
mov
and
dec
sbb
outsl
pop
fdivrs
push
sub
fwait
jb
sub
xchg
xchg
cltd
push
es
and
cmpb
sub
xor
push
or
cmpsb
sub
and
popa
sti
push
sbbb
not
imul
pusha
push
sbb
sub
pop
lret
les
lods
test
cmp
fmuls
cmpsl
loopne
or
out
jl
xor
mov
and
xorb
fdivl
push
bound
in
in
ss
dec
out
bound
cmp
jg
out
mov
jbe
in
in
pop
lods
mov
xlat
sarl
out
lret
sarb
loope
hlt
mov
push
and
adc
js
das
xchg
repz
sbb
popf
xor
jmp
sar
adc
xchg
adc
mov
cmpb
xor
pusha
pop
jb
sbbl
adc
clc
stos
xchg
out
pusha
and
cmp
ja
aad
adc
outsb
xor
mov
bound
in
dec
xchg
mov
push
jmp
pop
sub
mov
loope
int
jl
cmpsl
mov
scas
gs
lds
fucomip
add
cmpsb
mov
pushf
ror
jb
inc
push
lea
out
sub
jg
adc
and
mov
int
test
push
hlt
push
outsb
push
xchg
int
int
das
xor
jbe
add
lods
push
ret
outsb
mov
mov
js
mov
dec
imul
negb
pusha
add
push
imul
pushf
dec
ljmp
ss
cmpsl
cmp
mov
outsl
and
lock
fs
pop
shrb
popa
pop
xlat
fwait
cmp
cmp
dec
mov
andb
add
and
mov
xchg
jns
or
in
mov
cmpsl
jae
shlb
mov
jl
inc
mov
ret
sbb
pop
call
jne
pop
call
pop
mov
stos
pushf
in
dec
fildll
jae
push
gs
inc
pop
sti
fisttpll
pop
adc
ret
movsbl
mov
pop
loop
mov
push
lea
je
jge
imul
mov
jne
ret
cvtpi2ps
add
dec
xor
jl
adc
mov
popf
scas
inc
pop
or
mov
jge
and
outsl
int
nop
stc
adc
scas
lods
das
pop
cs
mov
mov
cmp
lahf
adc
dec
and
ss
jg
cmp
push
sbb
mov
test
cmp
pop
pop
mov
dec
add
add
cmovl
scas
int3
ror
dec
adc
cmc
mov
pop
ficompl
stc
jmp
adc
fiaddl
das
mov
cmc
adcb
add
xchg
inc
dec
or
add
jmp
sahf
out
pmaxub
movsb
sub
leave
call
dec
fdivrs
shl
lcall
cmp
push
jne
sarb
xchg
sub
rorb
add
xor
das
movsb
mov
lea
loopne
outsb
mov
fld
inc
mov
lret
xchg
push
sbb
jecxz
inc
jae
mov
insl
add
and
sbb
dec
mulb
jmp
xchg
lcall
xor
mov
mov
out
popa
push
aas
jns
xorb
cmp
add
xor
dec
pusha
scas
pop
add
or
mov
fdivrp
or
push
xorb
popf
mov
mov
and
mov
outsb
ja
lahf
cltd
pop
clc
jae
pop
or
lea
out
lret
out
sbb
push
xchg
mov
sarb
out
or
push
push
adc
jb
jle
dec
stc
jnp
or
not
xchg
imul
mov
aaa
test
daa
jae
shr
sub
push
add
mov
rorb
in
mov
inc
jb
push
push
jne
cmc
inc
jo
mov
lds
sbb
je
ss
mov
push
dec
xchg
adc
aas
loopne
lods
jp
icebp
out
jle
lods
cli
adc
push
sarb
test
mov
lods
add
sbb
in
and
pop
push
and
sti
cwtl
pop
fisubl
sarl
je
mov
adc
rorl
jno
cmp
or
mov
inc
mul
jno
loopne
dec
sub
outsb
sub
cmc
sbb
mov
mov
sub
inc
fstl
lret
push
mov
adc
aam
mov
push
lahf
mov
add
movsl
xchg
xor
mov
push
jb
fcomps
repnz
jge
xor
sub
hlt
lods
int
sub
cmp
inc
adc
sarl
stos
dec
shll
popa
in
fsubr
movsb
add
mov
push
jecxz
cmpsl
or
lea
dec
iret
outsl
stos
pushf
jo
jne
fldt
xchg
mov
jp
push
and
aam
clc
std
pop
pop
ret
mov
jns
fucomi
scas
mov
dec
push
jg
cmpsb
xchg
xchg
stos
push
dec
lock
movl
mov
push
push
xchg
fsts
icebp
xlat
mov
ret
sbb
out
push
into
xor
and
nop
inc
outsl
stos
sbb
popa
loopne
aaa
addr16
or
push
mov
xchg
out
jb
jo
gs
add
jae
push
xor
rcrb
decl
scas
aas
call
int3
stos
xor
inc
push
mov
xchg
mov
mov
cmc
lods
ret
jo
jl
stc
and
push
jle
sbb
push
fimull
xchg
repnz
dec
mov
mov
push
xchg
jle
sub
jne
enter
xchg
fcomps
stc
icebp
insb
lret
mov
cltd
fimuls
stos
xchg
sub
pop
lcall
fisubrs
std
adcb
ja
and
in
movsl
push
js
mov
push
leave
sub
sbb
or
cmp
mov
add
and
sahf
mov
imul
mov
sub
mov
push
movsb
sbb
jo
ss
inc
mov
or
sbb
ret
xchg
les
ljmp
or
popa
jp
lret
inc
pop
inc
cmp
push
sub
cmp
add
dec
dec
int3
lods
xchg
sbb
test
or
mov
fsubrs
mov
adc
outsb
sub
jns
aam
lcall
mov
fildl
sbb
inc
adc
test
mov
sub
mov
mov
lahf
mov
fdivrs
loop
pop
stc
mov
roll
sti
mov
mov
test
xchg
fwait
inc
add
ret
pop
mov
out
arpl
and
mov
jle
mov
js
jmp
out
add
lea
jnp
push
loopne
mov
add
add
int3
mov
out
add
das
fwait
and
bound
lret
test
fimull
loope
mov
in
ja
adc
push
sub
inc
leave
pop
cmpsb
inc
in
pop
lea
dec
outsb
sarb
mov
cmp
loop
xchg
lahf
mov
fdivp
pushf
mov
and
jno
into
fidivs
cli
aad
out
mov
es
pop
sarl
outsb
aaa
add
stc
scas
call
jmp
xor
inc
int
xor
and
icebp
inc
cmp
jecxz
popa
adc
cmp
sbb
stos
div
jg
push
sbb
push
loope
out
add
mov
mov
push
in
out
jge
mov
mov
pop
dec
faddl
dec
fwait
mov
cvtpi2ps
sub
imul
cmp
pop
ret
mov
mov
ret
jns
inc
sbb
imul
fisubrs
jp
fdivs
pop
inc
insb
mov
lods
repz
adc
sub
xchg
fmull
les
pop
ret
jns
js
mov
push
xorb
pushl
pop
clc
xchg
dec
mov
lret
and
fs
loop
jecxz
pushf
and
out
xor
and
pusha
pop
jae
nop
push
inc
inc
out
add
addb
fdivrl
shr
mov
fwait
mov
and
add
sarb
push
adc
xchg
out
mov
ret
sbb
mov
divl
mov
xchg
cltd
inc
xor
xor
pushf
fcmovnb
hlt
test
stos
pop
gs
lods
or
je
ljmp
xchg
mov
arpl
movsb
mov
pusha
and
addr16
fs
jmp
arpl
jbe
jecxz
sahf
int
std
arpl
pop
out
push
jp
dec
lret
pop
cmpsb
jno
xchg
xor
fcmove
jmp
mov
repz
pop
cmp
out
pop
fincstp
outsl
pushf
xchg
cwtl
sub
scas
imull
insb
jle
ljmp
pop
pop
js
dec
insl
insb
aas
leave
icebp
popa
test
lods
data16
mov
das
sub
inc
ljmp
loop
mov
jbe
mov
js
dec
pop
sbb
pop
mov
push
adc
adc
or
jl
or
mov
cmp
sbb
sub
dec
jle
std
push
loopne
adc
repnz
mov
dec
xor
push
ss
faddl
and
addr16
notb
push
sbb
dec
pop
aaa
mov
push
mov
push
orb
pop
add
jae
cmp
popa
dec
es
clc
imul
negl
add
aaa
cmp
xor
popf
loope
cs
int3
fidivl
loop
movsl
add
push
pop
push
jae
jg
hlt
addr16
mov
ljmp
jnp
mov
cmp
add
in
jg
mov
je
xchg
hlt
jle
test
cmc
xor
pushf
ljmp
jecxz
fdivl
adc
pop
dec
repnz
adc
ja
cmpl
andb
in
int3
xor
xor
aam
xor
sbb
xchg
fwait
cmpl
sti
ss
add
cmp
outsb
js
rorb
int3
xchg
jg
js
leave
test
mov
lods
gs
decb
xor
xchg
jle
pop
test
sti
sub
add
divl
sub
or
lret
pop
dec
xor
fsubl
mov
inc
cli
dec
pop
jae
cmp
jecxz
inc
pop
inc
shr
sub
cltd
je
cmpsb
cmpl
pop
push
jge
pop
insl
pop
lods
clc
dec
xchg
pushf
outsb
repz
or
pusha
pop
xor
cmp
or
shr
andb
inc
cmpsb
je
sub
push
fpatan
rol
add
in
xor
fnsave
rolb
into
cmp
sub
xor
aam
pop
pushf
pusha
hlt
fs
ss
cmp
push
das
jmp
cs
rcrb
pop
fs
and
lret
mov
dec
scas
clc
xchg
mov
lret
shrl
stos
int
lcall
lock
adc
lock
xchg
push
clc
outsb
outsl
test
adcb
out
sarb
aam
addl
decb
rclb
std
pop
push
xor
xor
pop
push
xor
dec
lods
enter
out
test
in
xor
mov
sbb
add
jecxz
out
shlb
mov
or
xorb
test
inc
shlb
in
les
js
pushf
stos
stc
xlat
je
dec
mov
adc
jg
roll
pop
out
repnz
in
sbb
cmp
lea
push
push
aas
or
cmp
repz
jge
call
push
pop
fucomi
mov
rorl
stos
pop
popf
cwtl
faddl
xor
inc
lcall
out
icebp
mov
aas
out
or
pop
test
sbb
push
jge
mov
pop
inc
or
cmp
cld
outsl
add
sbb
sub
lret
addr16
mov
cmc
sub
mov
mov
fldl
jnp
leave
repz
ja
fwait
jecxz
in
jmp
jo
sahf
sbb
mov
in
cmpsl
push
pop
xchg
mov
rcr
jns
mov
js
out
inc
or
neg
mov
sbb
or
inc
cmp
push
mov
rcrb
jp
test
inc
cvtps2pd
mov
lds
mov
fs
clc
adc
push
mov
mov
mov
adc
fwait
jbe
pusha
sti
cltd
hlt
adc
lock
pusha
dec
imul
mov
sbb
mov
nop
dec
movsb
adc
popf
adc
int
xchg
rclb
jno
das
lds
push
fs
repz
lea
stc
cli
sbb
xor
aaa
dec
sbb
push
daa
mov
pop
xchg
adc
add
mov
pop
mov
push
push
xor
sbb
mov
je
out
loop
int3
mov
adc
dec
js
mov
test
mov
sbb
jmp
mov
xchg
nop
outsb
gs
subb
das
mov
das
aaa
inc
sbb
mov
mov
popa
and
in
mov
xor
jp
sub
idivl
jne
or
loope
jle
and
fistpl
mov
in
pop
imul
mov
mov
out
mov
out
stos
cli
ljmp
cltd
iret
push
and
push
pop
push
mov
pop
pop
jmp
pushf
add
sub
cltd
fwait
pusha
aam
clc
addr16
inc
lea
out
sbb
push
pushl
stc
les
lret
daa
dec
add
push
popf
flds
cmp
test
xor
int3
test
add
adc
sti
stc
xor
cmp
in
add
dec
push
jae
fdivs
jge
pop
addr16
hlt
imul
mov
xor
lea
ss
lcall
fsubs
dec
or
sti
pop
iret
mov
daa
jbe
push
mov
mov
or
jno
enter
gs
mov
mov
in
cmp
mov
aaa
in
xor
fsubrs
sub
stc
push
jne
bound
cmp
sub
mov
dec
cmpl
iret
pop
out
outsl
mov
ja
outsb
lock
push
iret
out
insl
mov
mov
xor
jle
xor
xchg
mov
lds
pop
call
cli
adc
nop
cmp
xor
xlat
inc
push
out
jbe
xchg
clc
mov
pop
jo
stos
jl
xor
notl
nop
inc
sahf
or
shlb
push
add
mov
add
in
std
mov
cmpsb
sub
data16
inc
mov
fdivr
sarl
out
dec
sbb
or
fwait
sbb
loopne
dec
push
jno
je
stc
pop
ret
mov
inc
xchg
pop
add
dec
sub
popf
dec
daa
sbb
fwait
inc
pushf
in
out
out
insl
aad
adc
push
jnp
scas
insb
in
cmc
adc
inc
fwait
ret
fs
xor
lds
xchg
jmp
lcall
xor
outsl
pushf
in
mov
jg
je
fdivs
negb
xchg
in
stos
insb
es
pop
ret
stc
dec
cld
ret
dec
lock
loope
ja
sub
mov
push
sbb
jp
mov
shlb
xchg
jae
xchg
andb
insb
cli
cmp
daa
adc
fs
xchg
rcll
sub
and
aaa
sbb
cmpsb
mov
mov
and
lods
iret
lods
pushf
push
xchg
cmp
mov
cmp
sub
inc
jecxz
call
cmpb
divl
dec
xorb
dec
sbb
mov
sarb
lret
and
test
int
mov
out
xchg
add
faddl
add
out
sub
in
fsubr
sbb
inc
and
mov
jp
stos
and
sbb
lahf
mov
enter
fwait
stc
cs
lods
mov
xor
mov
popa
cmpsl
cli
sbbl
out
sub
lods
cmp
aas
dec
notb
imul
xchg
lcall
loope
daa
aas
push
push
push
pushf
movsb
sbb
je
cmp
sbb
pushf
adc
xor
mov
arpl
jge
push
jno
sti
insl
pop
jo
daa
loop
pop
pusha
jnp
sbb
xor
insl
xor
xor
inc
adc
mov
push
jge
test
test
adc
mov
shll
pusha
xchg
stos
fdivrs
and
in
sarl
shrl
fucom
out
arpl
inc
mov
add
movsb
rorb
popf
dec
pushf
inc
test
js,pn
jno
mov
scas
filds
pusha
andb
cmpsb
rolb
mov
bound
movsl
stos
sahf
mov
push
sti
jmp
movsb
jae
mov
xchg
or
pop
andb
inc
xor
div
sbb
aam
dec
lock
in
add
adc
cmp
mov
arpl
xchg
mov
inc
dec
push
xchg
ja
jbe
lret
shl
les
adc
xchg
sub
push
cmp
or
sbb
bound
jbe
jns
cmp
insl
jb
std
xchg
out
sarl
sahf
inc
mov
mov
or
dec
jbe
jle
aas
test
pop
cld
out
scas
dec
mov
xchg
insb
frndint
stc
insl
mov
lahf
push
dec
mov
fists
pop
sbb
or
and
mov
mov
cmp
mov
rol
mov
pop
sub
dec
pop
jb
fidivl
fwait
aaa
test
pusha
inc
and
insb
rorl
divb
pop
testl
xchg
pushl
fs
inc
dec
xor
dec
pop
ljmp
dec
mov
inc
leave
sbbb
cltd
lcall
xor
dec
jae
push
or
cmp
popa
out
push
adc
inc
pop
imul
inc
fldl
loopne
jmp
das
psubsb
je
inc
in
cmp
cmp
imul
nop
jl
cmpsb
sbb
or
and
into
imul
sbb
adc
and
sbbb
cmp
nop
pop
xchg
pop
leave
mov
ljmp
inc
out
sbb
mov
cwtl
jae
icebp
xchg
das
scas
dec
sbb
ja
test
jnp
loope
push
inc
idiv
and
xchg
jle
xor
push
jmp
cmp
push
loope
fnstcw
inc
scas
sub
imul
imul
pop
jnp
add
fmul
lahf
sarl
xchg
sub
inc
jbe
xor
jae
je
fstl
cld
movsb
dec
inc
mov
xlat
loope
jp
jb
sbb
sbb
in
shlb
data16
cmpsl
mov
or
cmpsb
push
jbe
mov
push
add
xchg
cs
xor
jecxz
addr16
mov
enter
sahf
mov
sub
test
inc
test
xor
jbe
sub
pop
mov
push
mov
mov
xchg
adc
movsl
mov
aaa
lock
clc
pop
mov
cmc
movsl
pop
popa
cmpsb
add
add
fcom
cmp
into
cld
pop
lods
mov
and
in
push
lods
adc
imul
sub
sub
jb
inc
jo
or
push
jbe
cmp
rolb
str
lret
xchg
push
sti
jecxz
xor
std
jno
int
mov
sbb
ss
mov
add
jle
mov
testb
mov
ficomps
push
cmp
dec
std
sbb
adc
xlat
aas
cmpsl
sti
cld
mov
out
in
decb
sbb
stc
inc
fdivrs
cmp
fistpl
imul
mov
aas
xor
jmp
adc
lods
js
or
in
ja
ffreep
bound
pushf
les
and
popa
int3
mov
dec
cmp
pop
insl
into
fcomps
mov
sbb
sub
into
jl
mov
sub
add
dec
xchg
jnp
gs
rcll
addr16
mov
cmp
rorl
cmpsl
add
jecxz
cmc
decl
icebp
mov
lret
aam
jne
adc
xchg
jg
cmp
icebp
cmc
daa
cmc
cs
pop
hlt
or
fistpll
mov
ljmp
xor
jecxz
jbe
jb
xchg
out
jnp
fiaddl
sub
aam
aaa
jns
or
lret
rorl
mov
push
inc
daa
mov
push
fcmovnu
mov
sub
mov
vmread
sbb
fldenv
xchg
and
stos
mov
cmpb
and
sub
andb
or
inc
jno
jl
lods
movsb
jnp
movsl
cmpsb
loope
lds
push
mov
insl
inc
push
ret
pop
jnp
push
cli
xor
mov
inc
jg
stos
xor
push
jb
pop
or
dec
add
inc
lret
mov
loopne
insl
inc
mov
loope
xor
loope
mov
pop
loopne
jnp
in
pop
nop
add
sbb
mov
push
outsl
jl
sbb
cmp
inc
out
sbb
out
xchg
jp
sub
ret
ds
arpl
ror
add
popa
jo
lea
out
test
movsl
repnz
inc
lock
ds
out
or
loop
jb
movsl
and
je
pop
arpl
xchg
je
dec
les
mov
cmp
sarb
cs
std
and
cmpsb
nop
or
and
jle
jle
into
push
pop
xlat
das
pushf
gs
adc
adc
push
xorl
cld
rorl
aam
imul
psrlq
or
and
loopne
in
dec
dec
je
jl
xor
sub
std
add
pop
or
lods
out
sub
or
or
jle
cmpsl
and
push
mulb
shr
loope
test
jecxz
stos
dec
cltd
shll
mov
aaa
push
cs
int3
je
pop
mov
outsl
into
pop
mov
icebp
in
movsl
xchg
dec
mov
aas
das
cmp
jge
scas
lods
adc
push
enter
loop
add
add
jge
cmc
icebp
lock
daa
sub
and
mov
lahf
xorb
sub
push
xor
scas
scas
not
and
cmp
outsb
aam
rol
push
push
addr16
fsts
outsl
dec
loope
bound
pop
adc
xchg
adc
insb
add
dec
inc
xchg
in
mov
pop
push
mov
xor
xchg
sub
lods
adc
ja
sub
ficoml
pusha
decl
and
cmc
pusha
mov
std
mov
aas
add
out
inc
jle
rcll
mov
cmp
push
inc
mov
aaa
inc
add
fcoml
adc
dec
and
add
cmpsb
jbe
mov
lock
push
inc
inc
jl
rcrb
lret
ret
push
push
adc
sub
push
hlt
sub
mov
loope
jb
fisubrs
mov
mov
aad
push
mov
inc
push
bound
ret
insl
dec
dec
pushf
lock
mov
add
shrl
inc
sahf
inc
mov
sbb
push
in
mov
decb
mov
xchg
jno
push
pop
arpl
out
mov
mov
dec
in
and
push
jg
dec
mov
sar
cli
lock
lods
xchg
cltd
or
rcrl
lea
movzbl
or
add
ffree
stos
adcb
mov
cld
aad
push
adc
add
xor
add
mov
imul
inc
mov
and
lods
push
out
fmuls
aad
xchg
lcall
dec
cwtl
mov
leave
mov
aam
jns
push
pop
xor
or
or
jne
sub
and
or
adc
mov
cld
dec
call
andb
imul
push
mov
mov
mov
andps
mull
mov
xchg
lea
and
loop
sahf
cwtl
dec
test
sbb
xlat
les
std
je
pusha
test
les
out
sbb
inc
lea
andnps
fnstcw
add
ja
stc
loop
or
and
cmpsb
mov
push
xor
jl
and
jno
pop
mov
jg
outsl
mov
push
ffreep
lods
or
mov
mov
mov
out
adc
sbb
daa
pop
out
adc
or
mov
and
rcrb
inc
or
js
jo
lahf
int
sub
jecxz
mov
push
dec
push
mov
pop
repnz
adc
repnz
fdivrs
rclb
adc
je
mov
mov
lock
mov
mov
lcall
add
jnp
mov
jne
in
cltd
and
add
shlb
push
xor
lahf
xchg
push
lods
fists
popa
and
js
dec
add
jnp
roll
xlat
loop
aas
inc
add
out
loopne
aam
pop
cmp
pop
and
leave
popa
test
xlat
push
add
mov
dec
cmp
xor
xor
repnz
cwtl
lock
adc
cwtl
xor
outsl
lahf
lods
jmp
popa
lret
cwtl
mov
adc
mov
das
outsl
fstpt
mov
cld
in
lret
leave
and
mov
lcall
or
insl
jp
dec
pop
jno
xchg
call
inc
enter
icebp
ds
insb
sbb
popa
pop
aaa
jbe
rorb
jl
mov
and
mov
push
pop
les
lods
inc
or
mov
shrb
fs
lahf
dec
fimull
lds
cmp
call
in
jb
push
aam
mov
fisubrl
mov
movb
or
dec
inc
jmp
ds
mov
ss
push
fmull
icebp
push
push
movsl
es
scas
or
and
push
cmpsl
int3
xchg
sbb
mov
adc
out
xor
out
jae
add
or
and
mov
in
imul
xchg
insl
out
loopne
pop
imul
xchg
jmp
mov
pusha
ret
test
jne
adcb
mov
fadds
mov
adc
or
sub
mov
andb
fs
insb
aad
mov
mov
out
pop
leave
mov
int3
bswap
jl
lds
pushf
xchg
jg
mov
jae
dec
xchg
inc
lcall
jmp
imul
jnp
test
inc
push
lods
adc
mov
add
and
jb
sub
mov
out
testb
and
cs
pop
call
addl
scas
inc
ja
mov
and
rcl
fstpt
sarl
mov
jb
add
leave
jge
or
inc
add
pop
sahf
mov
adc
inc
mov
sub
iret
aaa
inc
in
sub
xchg
cmp
jb
inc
insl
ss
out
sbb
std
cmpsl
xor
mov
sbb
mov
push
and
ja
mov
icebp
cmpsb
pop
jno
xor
pusha
ja
repz
cmpsb
addr16
mov
cltd
inc
pop
inc
mov
sbb
adc
popa
leave
sti
push
stc
ss
lret
inc
push
mov
aam
movsb
test
lds
arpl
or
aad
lods
sbb
insb
jmp
mov
mov
push
jo
mov
into
fcomp
lock
shll
scas
imul
es
ds
add
cli
sarb
test
dec
dec
mov
cwtl
dec
push
outsb
test
and
mov
les
xchg
cmp
or
in
repz
or
add
out
xor
pop
mov
push
push
nop
lea
xor
sbb
insl
push
inc
js
add
adc
push
xchg
inc
mov
and
sbb
mov
in
dec
stos
movsl
xor
xor
pop
mov
pop
pusha
pop
jp
jl
movsb
daa
add
and
push
jnp
cmp
jnp
push
hlt
jne
xchg
mov
mov
pop
xchg
cmp
loope
or
or
xchg
and
pop
cmp
jno
rcl
ret
mov
movsb
arpl
call
mov
pop
aaa
lds
sub
push
jecxz
int
movsb
inc
movsl
into
mov
and
or
sub
dec
push
and
dec
dec
jno
mov
cltd
rcll
mov
cmpsl
adc
dec
in
xlat
lret
call
outsb
and
test
mov
add
sbb
stos
js
mov
popa
pop
jo
and
js
test
pusha
aas
shll
imul
pop
stos
leave
mov
mov
std
pop
cmpsl
shll
xor
aas
into
mov
inc
mov
popf
pop
fldenv
mov
nop
pop
adcb
daa
out
mov
test
cmp
push
notb
loop
mov
push
popa
enter
inc
push
ss
xchg
shl
es
es
lret
dec
mov
inc
inc
jno
xchg
sahf
sbbb
jg
or
dec
adc
insl
out
mov
repnz
pop
gs
xchg
xchg
cmc
push
aas
cmp
fldenv
pop
ljmp
pmaxsw
and
test
loope
out
xor
jo
cmpsb
xor
sahf
add
mov
and
dec
jl
inc
out
filds
jg
sbb
or
pop
mov
rcll
daa
lods
pop
add
cld
sbb
andb
out
sti
into
push
dec
rcrl
and
int3
mov
mov
cmp
scas
lret
jmp
jno
mov
add
sahf
add
mov
sbb
scas
push
adc
push
sub
stos
jbe
dec
cmp
loope
sbb
add
in
jne
push
push
mov
pop
or
imul
pop
jecxz
addl
or
xchg
out
js
jbe
lret
sub
add
or
and
xchg
cmpsb
js
adc
xchg
insl
sbb
inc
mov
mov
inc
jle
mov
pop
add
pop
gs
loope
stos
push
jmp
jl
ret
loop
mov
repnz
mov
pop
mov
mov
push
ja
push
cmp
adc
mov
cmp
or
dec
and
ficompl
mov
or
pop
dec
insl
loopne
sub
test
out
stos
dec
insb
pop
stos
cld
aam
test
lret
enter
dec
mov
and
mov
cli
fstp
adc
mov
push
stc
setae
push
jmp
lret
xor
sbb
es
sbb
add
fisttpl
mov
push
adc
cli
dec
mov
call
dec
movaps
cmpsb
hlt
inc
roll
mov
push
xchg
shrb
jb
xchg
push
mov
mov
cltd
test
sbb
inc
jnp
push
cmpsl
rolb
addr16
sub
push
inc
sbb
push
ficoms
sub
cmp
or
adc
int3
pushf
mov
adc
jnp
mov
xor
mov
inc
inc
cmp
lods
jno
mov
sahf
pusha
scas
push
inc
pop
popa
cmpsl
enter
mov
jbe
dec
aam
sbb
mov
enter
cs
negl
fisttpl
aaa
lds
cmpsb
mov
mov
jmp
scas
xlat
xor
cld
jb
pop
dec
push
jno
into
aam
rorl
xor
std
push
mov
into
daa
xor
push
pushf
call
mov
adc
popa
mov
cmc
mov
push
cs
dec
dec
mov
test
out
sbb
xchg
and
pop
cld
push
std
call
je
jns
int
aas
mov
push
mov
int3
outsl
add
fwait
adc
repnz
cmc
and
adc
mov
pusha
int3
sub
push
add
and
push
nop
xlat
and
xor
andb
pop
pop
mov
and
mov
cmpsb
dec
into
int3
pop
and
clc
mov
cmpsb
mov
adc
or
xorb
ror
jnp
push
shlb
jecxz
outsl
iret
jge
mov
dec
icebp
mov
int
adcb
sub
add
mov
dec
lods
sti
in
mov
or
shll
pop
lods
sub
xchg
add
and
arpl
dec
and
loop
or
lods
or
mov
js
sbb
cmp
ret
cltd
mov
dec
jbe
addl
mov
sbb
shll
pop
add
iret
mov
cmpsl
scas
mov
sub
fcomps
out
xchg
jno
insb
xor
lret
xchg
fwait
aam
push
inc
cli
lahf
addl
push
xor
jb
pop
out
lret
jecxz
cld
push
pop
cmp
and
lds
dec
dec
pop
in
jl
sbb
dec
aam
cmp
xchg
jl
inc
mov
pushf
lock
mov
insl
aad
sbb
mov
stos
adc
dec
clc
pop
sub
data16
sbbl
pop
xor
jmp
subb
inc
push
ss
aam
arpl
jp
push
std
in
mov
fwait
inc
loopne
xchg
inc
mov
in
jne
push
sub
hlt
bound
mov
mov
rolb
subl
in
fistpll
in
push
je
push
jne
sbbl
lahf
imul
daa
shrl
dec
data16
dec
sub
ss
push
cli
inc
dec
xchg
sti
jnp,pn
push
rolb
mov
mov
sub
inc
dec
insb
frstor
mov
mov
mov
out
lods
dec
into
test
arpl
test
pop
cmpsl
aas
int
dec
dec
jne
mov
mov
inc
repz
jl
xor
dec
xlat
loope
insl
dec
sahf
sbb
jnp
pop
push
lea
push
dec
out
push
jle
xchg
aas
sbb
sti
scas
clc
addl
push
pop
lods
je
inc
mov
and
in
rcl
jnp
push
inc
es
sbb
mov
movl
jne
outsb
cmp
call
movsl
push
adc
push
jae
test
dec
shr
add
das
or
cmp
jns
sahf
mov
rclb
std
loop
arpl
int
adc
jb
out
lahf
cmp
lahf
out
push
xchg
inc
cmp
mov
xchg
icebp
test
repnz
scas
bound
xchg
dec
ja
test
loope
push
sarb
xor
in
pop
into
mov
inc
lods
add
jno
push
dec
jecxz
cmp
stos
sbb
adc
jge
das
and
into
icebp
xchg
shl
cltd
push
adcb
loop
pop
add
or
ret
adc
das
das
out
or
mov
mov
dec
or
jecxz
ret
sbb
test
call
cmpsl
pop
icebp
push
and
pop
xchg
into
aaa
aas
push
push
sahf
rcl
xor
div
xchg
jns
push
jo
xchg
adc
jb
inc
movsl
je
jmp
mov
add
pop
sub
push
sub
push
std
ds
daa
pop
push
loopne
hlt
bound
dec
mov
sahf
xchg
arpl
insl
xchg
popf
xor
icebp
shrl
in
outsb
pusha
std
sub
int
rcrl
mov
mov
inc
push
mov
pop
fdivrp
test
sub
mov
cmpl
hlt
int
sub
mov
pop
pop
inc
or
out
add
pushl
out
addr16
mov
dec
mov
sbb
jl
fnstsw
mov
out
push
in
repnz
leave
rclb
inc
pushf
les
jl
xor
mov
pop
jle
or
cmc
push
mov
inc
fwait
or
dec
cmp
or
cli
or
test
jecxz
rclb
pop
inc
and
test
cli
or
test
mov
in
shll
ds
mov
mov
pop
repnz
add
fbstp
jae
pop
and
mov
mov
lret
push
pop
inc
dec
ja
and
jae
ds
in
or
stos
in
jo
sub
xor
push
dec
repnz
push
add
mov
push
xlat
nop
in
js
in
stc
adc
mov
std
lea
dec
xchg
push
mov
in
ret
lcall
mov
into
dec
test
popa
out
mov
xor
or
inc
add
int3
stos
cmpsl
test
sbb
movsl
aas
fdivs
push
xchg
mov
in
insb
xchg
fisubrs
ss
mov
fwait
xchg
mov
das
sbb
or
mov
jmp
ja
push
ja
stos
push
push
inc
scas
jg
dec
push
add
fs
dec
mov
sub
or
mov
bound
jg
adc
xchg
imul
pop
cmp
dec
xchg
scas
or
dec
sbb
aas
imul
mov
shrl
mov
jo
xchg
or
push
xchg
bound
adc
push
mov
mov
jb
dec
xchg
pop
cmp
enter
in
adcb
pusha
cvtdq2ps
cmpsb
mov
and
inc
test
and
push
xor
or
cmp
in
adc
sbb
jae
out
adc
or
xchg
sub
fnstcw
dec
add
dec
pushf
mov
js
jmp
sbb
aad
out
xchg
insb
sub
loopew
xchg
arpl
dec
jge
lods
stos
jg
add
mov
push
cmpsl
sbb
mov
dec
pop
inc
pop
xchg
stc
sbbl
inc
dec
roll
push
ds
scas
adc
mov
jecxz
jae
pop
sbb
inc
cmp
and
and
pop
int3
adc
imul
or
mov
push
or
xchg
hlt
mov
dec
inc
adc
fisubrl
insb
bound
jmp
rclb
pop
orps
and
mov
mov
add
jle
push
adc
outsl
mov
cmp
sub
xor
outsl
inc
sub
out
inc
hlt
rcll
in
mov
fwait
xchg
add
push
sbb
or
ds
test
leave
add
pusha
imul
lea
push
mov
fwait
mov
and
cs
mov
or
arpl
mov
cmp
dec
stos
dec
adc
adc
jae
ret
push
jnp
jp
fistl
pop
xor
push
or
popa
mov
mov
cmc
xchg
adc
and
sti
pop
insb
xchg
xchg
vmovshdup
dec
pmuludq
fstpt
inc
loope
cmp
mov
or
pop
sbb
leave
call
sub
cli
js
test
sub
cmp
loopne
ss
and
mov
cmp
sbb
jmp
or
pop
pushf
or
jne
lods
js
cmpsb
mov
mov
int
xchg
lret
add
outsl
cli
pop
or
test
jge
stos
push
movsl
pushf
jecxz
xor
xchg
sarb
inc
repz
add
sbb
cltd
xchg
incb
addr16
repz
pop
cwtl
xchg
lds
cltd
ret
mov
cmpsb
dec
icebp
cli
jl
push
hlt
testl
mov
jl
into
ljmp
outsb
fwait
int
or
out
and
popa
rcr
jno
setno
xchg
insb
push
js
in
stos
std
sub
test
fisttps
mov
insl
pop
mov
and
sub
inc
div
pop
pop
lret
test
rcrl
fistl
xor
lcall
jnp
lahf
leave
sub
mov
push
fbld
or
mov
mov
sbb
ja
ret
push
sub
sbb
repz
cmp
test
addb
or
ret
cmp
mov
lret
push
sub
lea
inc
xchg
and
mov
pop
dec
add
mov
enter
mov
mov
inc
aad
mov
movsl
push
sahf
jbe
popa
pop
sbb
xor
adc
jno
fmulp
mov
pop
ja
adc
movsl
mov
lods
and
push
add
or
sbb
flds
insl
sbb
sbb
sti
addb
push
add
fwait
das
sbb
out
xorl
mov
pusha
rolb
xchg
and
xchg
pusha
nop
or
shll
or
pop
inc
shll
fistps
mov
repz
popa
mull
jl
jp
jle
in
in
push
sub
xor
cmp
mov
divl
aaa
mov
daa
aam
sub
dec
je
push
andb
ljmp
jne
lods
cmp
mov
das
notl
cli
int3
mov
mov
xor
mov
ret
ja
test
nop
add
pop
imul
shl
inc
cs
and
fstpl
shl
pop
ret
dec
add
test
stc
mov
jno
pop
pop
pop
cmp
xor
ud0
dec
movsb
fwait
clc
adc
in
add
out
pop
and
inc
mov
xchg
and
add
and
sub
iret
pop
cmp
inc
sarb
in
lods
js
fistl
xlat
mov
sbb
jg
fsubrp
push
cltd
outsl
pop
mov
mov
or
call
jbe
rcrb
add
imul
or
sub
cmp
adc
push
fsubrs
rorl
xlat
xchg
ja
xor
inc
lret
cmp
loopne
test
or
sarb
pushf
outsb
xor
loop
push
inc
jecxz,pt
roll
xor
xchg
call
out
push
pop
imul
push
daa
sub
stos
jnp
or
xor
daa
and
xor
or
xchg
cmpsl
dec
lds
pop
pop
aas
adc
jne
pop
stos
mov
mov
clc
pop
sbb
xchg
xchg
jl
jge
stos
outsl
adc
xor
xor
push
pusha
adc
cmp
dec
jns
and
inc
in
notb
xor
jb
pop
cli
push
je
dec
ja
cmp
push
dec
dec
fbstp
dec
inc
sub
aad
imul
or
outsb
push
pop
inc
cmp
inc
imul
out
fisttpl
sbb
xchg
sbb
aas
dec
mov
cld
repz
fnsave
pop
mov
cltd
aaa
pop
pop
fwait
mov
gs
cmpl
arpl
add
push
dec
push
lock
sbb
hlt
push
fldenv
jne
rol
aas
outsl
imul
icebp
out
lret
in
inc
cmp
mov
cmc
add
mov
sbb
xchg
dec
and
or
or
cmp
cmp
scas
leave
mov
inc
pop
push
and
or
add
loop
jmp
sub
dec
jne
insb
imul
mov
fstpl
push
mov
and
pop
fst
imul
sub
int3
push
and
rcrl
pop
mov
xchg
das
push
inc
call
lahf
sahf
xor
repnz
out
ret
negb
scas
pop
xchg
dec
xchg
movsl
dec
mov
roll
std
push
mov
mov
lds
inc
mov
jbe
sub
dec
inc
fs
in
or
insl
dec
test
push
adc
dec
xor
int3
add
pushf
bound
fisttps
call
scas
fwait
enter
xchg
xchg
out
inc
sbb
inc
bound
in
jne
repz
inc
push
rcrb
pop
int
sarb
xchg
call
mov
cs
cmp
sub
sub
add
mov
fcmovne
addr16
sahf
ror
jg
aaa
dec
sub
mov
sbb
enter
loop
in
into
repnz
xchg
bound
jb
int
fdiv
mov
sbb
mov
pop
lcall
cmp
xor
mov
add
or
xchg
lret
aaa
pxor
lret
adc
aad
int
push
inc
mov
ja
test
pop
cmp
sub
or
outsb
arpl
xchg
xchg
and
stos
mov
insl
lcall
cltd
sub
adc
les
adc
sbb
cld
pop
inc
iret
mov
int
and
enter
cmpb
hlt
int3
push
add
mov
xor
test
fidivrl
mov
xchg
mov
mov
jmp
push
testl
and
mov
rol
shlb
xor
jnp
jle
inc
xchg
lret
movb
clc
mov
or
inc
je
loope
xchg
mov
repnz
scas
jae
iret
xchg
andb
xor
insb
jmp
lret
mov
inc
in
shlb
cwtl
inc
lcall
mov
out
and
das
ljmp
jbe
pusha
push
stc
jo
lret
jle
adc
test
mov
inc
cmp
jge
repnz
dec
iret
adc
xor
ficompl
fisubrs
rorb
jne
push
dec
mov
push
in
add
movsl
sub
jb
popf
pop
add
or
daa
ds
inc
push
ss
mull
jecxz
data16
aaa
xor
mov
popf
aas
sbb
lcall
ja
sbb
add
sub
xchg
movsl
adc
fimull
xor
lock
cmp
xchg
xor
pushf
mov
out
or
jne
add
push
jmp
inc
lcall
bound
mov
dec
shlb
in
push
adc
lock
or
popf
dec
repnz
jne
scas
cld
lods
cmpb
ror
int
outsl
std
in
or
mov
popa
pop
sbb
xchg
xchg
sub
pushf
and
loop
jo
ret
dec
cmp
cmc
jecxz
loopne
jb
mov
xor
movsl
jmp
imul
mov
loope
xor
adc
mov
xlat
pop
shll
jg
out
out
mov
testl
and
aas
cmp
or
xchg
das
mov
scas
nop
or
psrld
das
inc
mov
mov
sub
mov
inc
addr16
inc
push
int
fnstenv
inc
mov
pop
popf
fsubs
adc
pop
mov
std
cli
loope
mull
fcmovnu
push
pop
movsb
es
test
xchg
and
mov
sub
xchg
sub
dec
and
cwtl
adc
dec
mov
arpl
sbb
and
xor
in
cld
dec
outsb
inc
loop
or
ret
lcall
adc
jmp
aas
dec
outsl
cmp
mov
cmp
in
cmp
mov
push
cmpsl
fnstcw
sub
rorl
cmpsl
sbb
add
dec
cltd
arpl
jnp
scas
fs
sarb
outsl
xor
jo
xor
mov
mov
fisubl
push
clc
jb
add
inc
test
fs
in
push
pop
pop
jo
mov
adc
and
xor
mov
xor
popa
insl
dec
xor
and
test
add
sbb
mov
lahf
xchg
idivl
jg
popf
mov
sub
mov
inc
fsts
stc
cs
mov
icebp
mov
popf
lock
shrb
pop
push
mov
or
hlt
loop
shlb
lea
and
les
mov
jae
leave
mov
aad
popf
inc
dec
mov
pop
pop
lock
cmp
cmp
dec
dec
loope
test
and
popa
jo
add
xlat
xchg
pop
adc
sbb
xor
sub
and
jl
andl
fisubrs
lods
dec
mov
stc
jns
mov
push
test
add
sub
add
pop
out
loop
int
gs
or
push
push
aas
sahf
fldl
cwtl
push
dec
repnz
into
xchg
push
bnd
outsl
nopl
mov
sbb
fdivrl
xchg
push
xor
imul
enter
dec
jl
dec
jle
pop
xor
test
pusha
push
insl
cmp
jmp
shrl
ljmp
pop
push
shlb
rclb
lock
mov
push
sub
pop
out
mov
adc
add
repnz
mov
subb
sbb
aaa
fisubrl
movsb
jo
mov
std
pop
cwtl
xchg
aad
pop
mov
push
mov
and
ficomps
xchg
push
jnp
mov
pusha
pop
cltd
les
aam
jge
inc
dec
jmp
xor
imulb
sarb
mov
pop
jbe
call
rolb
dec
jbe
jge
das
mov
and
mov
or
sahf
pop
into
rclb
lcall
pop
adc
lock
es
loope
and
mul
enter
test
add
xchg
icebp
mov
es
xor
push
cmp
xor
dec
sbb
dec
mov
je
jo
sub
mov
std
cmpsb
call
into
clc
inc
lahf
testl
js
inc
push
xchg
adc
mov
cli
jp
pop
mull
clc
push
jg
pop
lea
repnz
cmp
mov
cmp
mov
push
loopne
mov
popf
push
daa
idivl
scas
dec
rcll
push
or
int3
jge
pop
into
inc
in
nop
mov
xlat
mov
aam
mov
and
lahf
cmp
je
popa
rorl
jae
sarb
xlat
and
mov
insl
xor
in
mov
dec
rcl
jbe
xchg
call
loopne
dec
js
nopl
pop
mov
scas
lret
mull
mov
test
aad
sub
stos
out
pushf
or
pop
inc
ss
into
and
repz
ret
rcll
lods
mov
sub
data16
dec
ds
out
cmp
push
loopne
sbb
lcall
andl
mov
add
adc
push
sbb
negb
je
rcrl
test
and
push
pop
inc
jnp
fwait
testl
mov
je
xorl
lea
cs
notl
mov
and
add
mov
xor
xor
or
out
jmp
daa
and
and
ja
shll
jle
mov
add
hlt
add
daa
mov
pop
jo
repz
decl
pop
sti
movsl
das
fstps
cmp
cmp
adc
sbb
and
jg
daa
mov
mov
and
xor
sub
mov
push
mov
outsb
adc
into
xchg
daa
dec
fs
and
fisubs
jno
movsl
roll
std
in
out
xor
xor
sub
pop
add
xchg
sub
xchg
sbb
lahf
andl
and
popf
mov
push
pop
cmp
mov
ror
cwtl
mov
scas
fadds
mov
and
test
sbb
adc
xor
cmp
scas
inc
mov
sti
popa
xchg
mov
outsb
mov
or
out
out
pop
dec
cmpsl
repnz
lret
ret
pushf
mov
gs
and
mov
sbb
adc
sub
and
cmp
popa
dec
lods
std
push
xlat
insb
push
fcomps
jo
mov
into
cmp
test
out
daa
push
popf
rol
sub
ds
jns
dec
dec
rcl
ja
jl
int3
cmc
pop
or
lods
sbb
stos
dec
repz
jnp
push
push
rolb
enter
mov
scas
pop
pop
mov
or
push
lods
movsl
fwait
mov
jnp
sbb
inc
std
dec
test
lahf
inc
xor
imul
cmpl
cmc
cmp
dec
insl
and
add
imul
xchg
sub
inc
adc
sub
sub
pop
je
mov
xorl
sbb
or
stos
mov
inc
adc
add
sbb
mov
loop
movsb
mov
inc
dec
sub
movsb
or
mov
pop
jae
pushf
jbe
add
dec
inc
push
or
dec
int
repnz
icebp
and
aas
clc
in
call
xchg
jmp
bnd
mov
dec
push
xor
mov
or
sub
ja
loope
adc
mov
and
ja
jo
repz
push
jle
push
pop
jb
pop
rcl
xor
stos
and
es
jno
push
pop
popa
data16
jbe
cmp
call
movsl
loope
mov
arpl
outsl
sbb
cmp
mov
or
lea
xchg
mov
push
xor
ja
jbe
insb
cmpsl
add
out
divl
push
push
sub
shlb
jb
out
rcrb
scas
movsl
fsubrp
dec
jbe
xchg
mov
jno
jb
fists
cmpsl
test
dec
mov
sbb
bound
loop
sti
jo
and
jge
sub
clc
inc
push
dec
xor
insb
incb
adc
cmp
xlat
movsl
pushf
movsb
inc
jecxz
outsl
inc
adc
repnz
int
mov
outsl
ljmp
mov
repnz
loopne
or
xchg
pop
scas
jne
imul
jmp
cmp
unpcklps
fcomps
call
sbb
fidivrl
jno
js
std
jp
xor
call
pop
test
outsl
je
and
loopne
mov
shrl
xchg
imul
sub
mov
adc
ja
xor
repnz
mov
jnp
jo
push
data16
pop
and
jns
adc
bound
insl
dec
cmp
xchg
jmp
xchg
jmp
or
sbb
mov
cmpsb
and
sub
ficoms
and
pusha
xor
sbb
cli
fiadds
loop
xchg
daa
add
in
pop
cmc
mov
xor
and
adc
push
cltd
je
xorb
xchg
xorb
lock
outsl
nop
mov
aas
insb
sbb
aam
cwtl
pop
arpl
pop
mov
cltd
ss
mov
dec
push
daa
vmread
rolb
xchg
mov
dec
lods
pop
mov
mov
xchg
imul
enter
ds
push
mov
cmpsl
enter
push
push
mov
xchg
pop
and
in
jecxz
test
push
pop
mov
pop
jns
in
outsl
jnp
or
dec
test
mov
fs
push
and
cmc
sub
out
pushf
xchg
shr
hlt
mov
adcb
jmp
jmp
cli
fwait
jmp
ficoml
ret
add
xchg
ljmp
jnp
mov
and
aaa
repz
test
stos
add
inc
pop
popa
lcall
paddq
lea
pop
sbb
add
add
cmp
add
stc
sbb
aam
testb
popa
jbe
insl
push
cld
push
clc
and
fdivr
xchg
pushf
insb
ss
sbb
or
and
data16
jb
loope
scas
jmp
rcll
pop
and
loope
dec
lret
ljmp
fsubrs
pop
or
mov
int3
lock
cwtl
jmp
pop
mov
stos
ljmp
mov
mov
shr
fwait
mov
addr16
imul
jae
jns
pop
pop
adc
pop
dec
xchg
push
xchg
pop
cmp
mov
scas
push
pop
dec
xor
add
or
lods
shll
xor
pusha
call
fbstp
push
repnz
movsl
pop
dec
mov
jnp
mov
subl
jns
dec
sbb
mov
test
xor
dec
fistpll
aad
xor
xor
xor
icebp
xchg
adc
xor
ljmp
add
mov
testb
mov
adc
pop
inc
loop
rcl
loop
sub
mov
adc
push
or
or
and
adc
fwait
or
ret
frstor
sbb
jmp
push
test
fwait
shll
adc
adc
push
jle
cmpsl
mov
add
fsubr
loop
pop
es
inc
jmp
cltd
sbb
and
push
add
popa
adc
inc
ds
inc
xchg
jo
sbb
xor
and
mulb
lds
xor
mov
subb
xor
xchg
imul
push
xor
in
lcall
or
pop
movsb
sbb
mov
pop
xor
xlat
loopne
jle
stc
arpl
cs
adc
leave
shlb
add
lods
test
pop
call
out
test
ss
mov
pop
mov
inc
sub
in
iret
lahf
daa
cmp
or
or
xlat
lods
adc
packuswb
lods
jo
outsl
movsb
jg
jmp
scas
notl
lods
sub
dec
lret
pop
mov
sbb
dec
ds
ds
xchg
stos
dec
xchg
pop
fcoml
or
pop
ret
fsts
sbb
xchg
jb
sbbl
cmp
lock
jg
je
xchg
in
mov
outsb
inc
or
adc
js
cld
pop
fndisi(8087
or
add
addl
pop
fstpt
ffreep
dec
sub
mov
or
cmp
sbb
or
inc
adc
sbb
fnstsw
xchg
stos
mov
sub
mov
jmp
lock
mov
ss
leave
cmp
xchg
lahf
aas
movsl
jbe
scas
adcb
je
movaps
mov
leave
dec
sahf
push
and
gs
pop
fwait
cmp
arpl
adc
and
mov
adc
jae
icebp
pop
fiadds
sub
mov
mov
inc
dec
sbbb
xorb
lcall
das
imul
in
mov
mov
jp
push
sub
movsb
je
inc
sbb
pop
xchg
mov
jp
lock
gs
repz
pop
add
sbb
into
dec
inc
adc
mov
mov
jl
gs
decl
std
ljmp
decl
gs
mov
movsl
jl
jno
jns
leave
mov
jp
hlt
pop
add
cmp
push
movsb
push
and
pop
dec
pop
xchg
aas
fisttpl
aas
or
pop
xchg
inc
push
add
xor
jbe
repz
adc
je
cmp
inc
xchg
pushf
jo
push
lods
or
lahf
mov
pop
imul
add
outsl
mov
daa
int
hlt
out
bnd
or
cs
mov
pop
lcall
ljmp
sub
outsl
clc
jae
dec
xchg
mov
jp
leave
mov
aas
addl
sub
push
nop
movsb
inc
ljmp
xchg
imul
mov
nop
ja
aaa
xor
outsb
inc
fld
inc
repz
cs
jle,pn
mov
fwait
push
in
jbe
leave
inc
push
and
int3
cwtl
enter
sbb
bound
fldenv
push
std
dec
shl
loop
fwait
rclb
or
pop
lcall
stos
fs
ja
adc
and
ss
test
jno
andl
xchg
test
pop
mov
xchg
mov
outsl
adc
cmp
fwait
mov
outsb
aaa
and
xchg
mov
xchg
mov
add
insl
jbe
fcomp
subb
jns
push
push
js
dec
repnz
xchg
push
lods
jnp
gs
push
cmpl
out
clc
sti
stc
test
sahf
and
push
mov
adc
xchg
cmp
jno
cld
mov
mov
int3
fsubrl
cmpsl
mov
ja
ret
dec
lret
sbb
xor
scas
mov
adc
and
mov
adc
inc
sub
push
aam
hlt
push
ss
jno
push
push
cmp
pop
outsb
loope
div
mov
fcoms
xchg
fldl
jecxz
xchg
xor
mov
adc
adc
pop
xor
xor
mov
call
decl
ja
mov
add
popf
mov
inc
mov
jp
xchg
sbb
cmp
pop
shr
sub
jge
cltd
mov
fnsave
rolb
in
psubb
test
sbb
rcr
inc
or
testb
lahf
sub
dec
mov
test
jge
jge
cmp
fcomip
push
adc
push
mov
popa
sbb
pop
add
dec
ja
out
mov
push
jns
aam
mov
in
mov
ret
pop
sub
pop
jle
rolb
fucomip
lods
pushf
add
mull
pop
pop
add
inc
cmpsl
jo
add
clc
imul
das
push
sbb
adc
mov
inc
and
inc
jp
jno
cmc
jbe
jl
cld
mov
fisttpll
add
test
movsb
cmp
add
xor
repz
lea
push
mov
or
divb
lret
adc
fstpl
scas
stos
pop
pop
cmp
xchg
cmp
xchg
xor
outsb
push
or
faddp
jg
scas
inc
and
xor
add
dec
sub
push
bound
in
movsl
imul
cmp
clc
add
fcoml
pusha
jno
stos
pop
or
je
and
pop
enter
sbb
xorb
mov
lods
out
pop
sbb
rcrl
pop
add
shl
cli
and
inc
add
fcoml
push
push
dec
out
enter
xor
mov
sub
ds
sahf
addr16
or
stos
fwait
in
out
inc
push
xor
in
jmp
shll
add
cmp
popf
push
push
in
mov
add
inc
jbe
and
or
pusha
xor
outsl
sub
out
les
xor
test
adc
sub
rorb
mov
dec
in
sub
in
dec
sbb
mov
mov
popa
xor
jecxz
shll
cmpsb
cli
cmpsb
xchg
mov
xlat
inc
call
repz
xchg
add
in
jno
add
imul
sbb
fiadds
adc
sub
dec
repnz
lods
aad
rorb
cmpsl
test
inc
cmp
sub
sti
fs
ja
sbb
arpl
mov
push
lds
stos
pop
jns
inc
pop
stc
jmp
and
test
in
gs
add
aam
sub
xchg
inc
sbb
add
mov
push
xlat
scas
mov
addb
mov
dec
sub
icebp
lock
in
pop
sbb
test
call
into
xor
or
mov
sub
in
mov
dec
dec
xchg
cmp
inc
call
icebp
add
xor
and
cs
inc
xor
mov
mov
loop
mov
mov
dec
inc
dec
in
aas
ret
test
add
sti
fisubl
pop
add
pop
fcoml
xor
inc
mov
or
lret
jo
dec
jp
dec
in
xchg
mov
add
out
ja
mov
adc
push
sarb
dec
push
fisubrl
loop
ss
lock
mov
popf
cmp
mov
fists
lret
add
jp
mov
push
pushf
sbb
out
push
adc
out
jo
xor
adc
pushf
cmp
xchg
jge
add
fistpll
out
imul
add
sub
cwtl
inc
pop
dec
xlat
lock
int3
js
out
sti
push
outsl
push
cmp
lea
movsb
xchg
ds
roll
adcb
pop
jge
addr16
int
lock
loop
mov
je
rcrl
jbe
arpl
dec
push
pop
lahf
or
out
cmpsb
or
cmc
dec
dec
aaa
dec
push
andl
sahf
insl
xchg
insl
xchg
leave
loopne
xor
data16
xor
fnsave
js
or
arpl
repnz
scas
push
int
fcoml
in
clc
xlat
sti
cmp
mov
dec
inc
daa
mov
sti
mov
add
in
push
fidivl
and
cmp
add
push
leave
rcll
pop
xor
cltd
xchg
rorl
mov
insl
xchg
clc
loope
or
mov
ljmp
jmp
out
fistps
out
xchg
sbb
inc
jno
insb
test
push
mov
imul
in
dec
out
xchg
cmpsl
arpl
jnp
lcall
pusha
lods
push
cmpsl
dec
xchg
stc
fs
loope
aad
sbb
jns
xchg
mov
out
mov
mov
cltd
or
aam
test
add
and
ds
xchg
cmp
xor
pusha
insl
imul
loop
rep
int3
and
pushf
call
xor
test
jno
xor
pop
out
mov
jmp
outsl
loop
bound
sub
or
jnp
lcall
and
iret
jp
insb
insb
aas
cwtl
xchg
cmp
out
in
adc
shlb
movb
fistps
aas
into
iret
mov
mov
adc
push
cmp
xlat
cmc
pushf
or
mov
pop
push
xchg
push
das
insl
js
sub
mov
dec
mov
out
xchg
icebp
ja
mov
popa
xchg
icebp
mov
pop
push
out
push
nop
sbb
and
pop
ficoml
jae
push
cmpsl
mov
test
adc
inc
subl
sti
jbe
fsub
mov
sub
nop
pop
shr
popf
add
push
adc
ds
je
cli
fstps
pop
xor
test
jo
dec
inc
jno
pop
mul
push
mov
rcll
xchg
not
sub
loope
or
and
idivl
xchg
iret
movsl
pop
in
xor
inc
mov
ss
mov
ja
xchg
test
sub
and
je
hlt
out
hlt
pop
mov
lea
fistpl
ljmp
stos
jge
test
cld
xchg
xchg
rcll
sbb
mov
push
mov
stos
mov
jg
testb
jg
jne
and
andb
into
divl
pop
push
mov
mov
cwtl
cmp
sub
xchg
sub
loop
scas
stos
add
cmp
stc
insb
pusha
sub
xor
mov
sub
add
jno
push
rclb
push
lods
mov
cli
push
and
dec
imul
cmp
mov
ds
mov
fidivs
push
ss
lds
sub
add
sbb
dec
pushf
cmp
or
lock
dec
inc
mov
aad
xor
scas
sbb
add
in
and
sbb
and
bound
dec
jle
sbb
sbb
das
lock
cli
push
fimull
xchg
push
aam
xchg
jno
les
push
jae
or
pushf
adc
dec
sub
hlt
cmp
sub
notl
pop
push
inc
mov
push
sub
leave
fstpl
push
adc
dec
sti
cmpsb
fadds
push
mov
sbb
adc
addl
pop
xlat
xchg
xor
out
out
sbb
out
dec
sbb
aaa
ja
cmp
mov
jne
dec
outsl
mov
mov
pushf
test
xchg
idiv
test
mov
and
xor
cltd
pop
in
enter
pop
shrl
and
add
mov
pop
jbe
inc
das
dec
mov
or
push
dec
sbb
jmp
push
cmpsb
mov
pop
dec
out
std
and
fisubrs
ljmp
mov
cmp
cmp
fwait
mov
push
inc
outsl
and
xchg
inc
push
jecxz
or
cmp
shlb
push
outsl
cli
leave
xchg
mov
in
inc
out
lret
pop
and
jmp
or
ror
dec
dec
es
pop
lcall
xchg
or
fcom
js
dec
int
xchg
loopne
pop
mov
mov
and
movsl
shlb
fistpll
bound
hlt
xor
add
icebp
xor
sub
mov
dec
push
bound
enter
cmp
mov
jl
and
mov
xchg
pop
loop
or
mov
out
jle
jae
xchg
dec
aad
cltd
or
pop
js
jmp
inc
jne
test
test
lea
lods
inc
scas
xchg
ret
int3
in
into
adc
orl
js
cmpsb
das
pop
inc
les
pop
sti
rcrb
sub
stos
cmp
arpl
pop
mov
or
ds
pop
xchg
sub
aam
lds
push
mov
ljmp
and
inc
push
jns
and
sub
dec
lods
pop
sbb
fisttpll
adc
and
ljmp
inc
nop
xlat
mov
je
jp
and
jp
add
popf
stc
rclb
bnd
inc
mov
aaa
mov
sbb
push
inc
gs
lea
lret
jnp
xchg
repz
int3
test
mov
ret
fcoml
jmp
cltd
fisubl
dec
xlat
pop
stos
rdmsr
mov
pop
jbe
jg
rcrb
xchg
inc
cli
xorb
pop
loope
bound
xor
cmp
popa
test
cmp
mov
jb
mov
paddsb
or
into
mov
pushw
loop
sbb
mov
add
icebp
fmull
int
push
push
xchg
cmp
push
loope
repz
mov
loop
sbb
fmul
push
adc
addl
bound
and
push
in
or
jne
rolb
lds
sbb
xchg
lahf
pop
cmc
stos
jbe
jge
cmc
push
scas
outsb
xchg
jo
or
repz
data16
dec
es
sti
rcl
scas
adc
inc
xchg
pop
nop
ficoml
lds
and
mov
ljmp
and
xor
jbe
pushl
in
mov
mov
add
mov
sbb
out
jo
lods
xchg
in
ds
jns
cltd
xchg
or
mov
in
and
or
or
scas
hlt
andl
add
push
in
cmpsl
pop
aaa
or
sub
out
shll
sahf
xorb
insb
and
int
cltd
push
aas
jmp
inc
rcrl
in
cmp
and
pop
imul
cltd
push
jl
sub
insl
xor
int
sbb
cltd
and
sub
jg
mov
jnp
sub
and
mov
push
ja
in
sub
lahf
cmp
jo
lods
rorl
mov
repnz
ljmp
push
push
push
movsl
jbe
adc
test
add
fs
loop
xchg
cmp
pushf
jnp
jl
pop
and
xchg
lods
jno
and
aaa
add
and
cld
repnz
inc
fldenv
loopne
int
jge
fs
mov
stos
cmp
xlat
sub
out
aad
cli
sbb
adc
shl
cmp
lds
adc
pop
mov
inc
out
add
stos
in
cmp
shr
dec
xchg
mov
dec
sub
shlb
lea
test
add
gs
push
sub
mov
push
mov
call
mov
pusha
sub
dec
adc
fnsave
xchg
setae
push
xchg
outsl
dec
cmpsb
jle
into
pop
and
mov
leave
cli
out
xchg
lods
sub
xor
sub
mov
xchg
or
push
push
inc
sbb
in
push
xor
fwait
bound
ja
xor
inc
dec
push
adc
jb
leave
es
and
clc
test
das
call
mov
sub
push
or
addr16
aad
xchg
xor
pop
test
adc
enter
sub
push
fcoms
bound
sub
ret
pop
out
sub
pop
push
inc
push
inc
mov
cmp
sub
and
es
adc
dec
add
loope
imul
dec
lret
jp
lahf
sbb
leave
xchg
sub
push
out
sub
icebp
push
mov
je
test
ret
lods
mov
pop
push
mov
nop
cvtdq2ps
jg
movhps
mov
mov
fwait
add
outsb
pushf
pop
mov
iret
ret
push
lahf
dec
dec
push
jge
ficomps
xlat
aas
inc
push
in
xlat
fwait
jno
out
test
mov
fnstcw
jp
cmpsl
or
mov
adcl
jecxz
sbb
mov
mov
in
and
cmc
cltd
pop
lock
cmp
sti
clc
fcmovu
cmp
sub
push
imul
pop
fadds
adc
cmc
dec
or
or
lcall
inc
mov
cli
jb
iret
xchg
xor
pushf
fbstp
push
movsb
inc
pusha
jnp
add
pusha
xor
push
mov
dec
add
mov
rorb
dec
push
out
mov
mov
repz
sbb
mov
mov
out
movsb
adc
test
shrb
push
or
shlb
nop
jne
roll
xlat
pop
push
out
push
hlt
test
sub
adc
mov
pop
cmp
adc
mov
mov
out
insl
lcall
sub
and
das
std
sbb
mov
out
cmpsb
mov
and
lahf
imul
sbb
pop
inc
lds
xchg
adc
sbb
jo
fistpl
push
repz
dec
sub
fsubr
fld
pop
dec
ds
inc
or
ljmp
inc
adc
xchg
pusha
inc
push
pop
cmp
repnz
mov
jno
xchg
sbb
pop
js
nop
adc
nop
xchg
inc
imul
imul
inc
adc
fstpl
sub
adc
ss
or
repz
addr16
loope
insl
inc
es
jl
out
lods
mov
and
and
bound
loope
mov
cmp
ret
and
xchg
outsl
mov
cld
cmc
shll
dec
and
iret
imul
lods
cmp
dec
cmp
shrb
adc
enter
pop
or
ss
lds
fsubrl
adc
leave
inc
jge,pn
aas
sbb
js
inc
test
sub
loope
adc
mov
or
addr16
jbe
dec
std
es
scas
jns
and
sahf
das
mov
popa
push
cmpsl
pop
push
jo
jmp
rcrl
mov
add
loopne
rcr
out
pushf
xchg
adcb
jno
cmp
aam
jg
push
push
cli
adc
jns
jp
daa
xchg
stos
gs
sub
stos
out
adc
je
divb
pop
pop
mov
inc
cmp
mov
sub
jno
xchg
enter
pushf
lret
and
inc
mov
andl
inc
idivb
les
lcall
mov
add
icebp
jb
and
lret
inc
addr16
fcmovne
std
or
lods
shll
nop
jl
dec
ss
rcll
pop
in
cmp
dec
jge
gs
mov
dec
lock
sub
xor
mov
dec
jb
ret
push
cmp
ss
lret
push
jbe,pt
push
sbb
pop
lret
cli
inc
mov
aas
and
arpl
xlat
ja
les
fbld
clc
inc
cmpsl
lea
repz
adc
orb
popa
pushf
insl
jp
sub
movsb
mov
nop
and
fwait
push
dec
mov
pusha
scas
out
leave
popf
jge
mov
cmpb
mov
sub
dec
jl
push
nop
jp
cmp
int3
jnp
shrl
insb
out
add
aaa
rol
pop
cmc
xorl
xchg
rcll
in
fucom
cmp
and
adc
inc
dec
mov
mov
sbb
test
lea
shrb
adc
jbe
cld
ret
orl
or
jns
call
add
daa
xor
xchg
imul
add
sub
jno
aad
mov
push
fiadds
jl
and
xchg
jp
or
divl
ret
icebp
imul
fnstenv
add
rorl
sbb
je
jmp
in
lcall
pop
icebp
cmp
in
dec
add
std
in
mov
xchg
les
jbe
das
iret
aas
pop
sbb
int
gs
ret
or
adc
addr16
push
inc
add
push
daa
add
dec
mov
lret
inc
cwtl
adc
mov
pushf
test
sbb
xchg
mov
adc
push
out
stc
xor
push
mov
inc
imul
adc
push
stos
pop
js
add
sarl
pop
fldt
and
outsl
in
addb
adc
jbe
push
push
int3
jae
add
sbb
mov
lret
pushf
pusha
add
pop
aad
mov
lret
sbb
out
popa
add
adc
or
mov
xchg
fidivrl
sbb
pop
fwait
and
sbb
lret
sub
ficoml
shl
pushf
and
stos
lahf
inc
xor
ds
das
push
cwtl
jb
leave
fimull
mov
stos
jg
out
out
stos
mov
imul
pop
out
test
push
in
pushf
jo
pop
cmc
daa
cmpb
sbb
in
cmp
add
sti
xchg
rcrb
fcoms
dec
out
pop
ss
stos
mov
mov
mov
sub
add
loop
push
lods
dec
int3
das
jmp
ror
add
mov
mov
jae
std
ret
movsl
cli
xchg
xchg
aas
mov
and
jmp
pop
cmp
test
int3
or
in
jecxz
adc
pop
inc
iret
adc
inc
mov
test
test
dec
fstpl
cmove
repz
arpl
xchg
es
cmp
les
xlat
xor
mov
jle
inc
sbb
lcall
adc
and
push
pop
out
fcomps
or
out
jmp
mov
fwait
jle
jne
lahf
mov
jmp
dec
popa
out
add
lcall
ljmp
and
sbb
pusha
or
xchg
nop
and
dec
scas
sub
xlat
lea
cli
inc
fcoms
mov
cld
lods
mov
dec
jns
inc
jnp
pop
je
mov
add
test
in
mov
sbb
in
xor
repz
mov
mov
mov
push
inc
adc
jne
leave
add
repnz
dec
add
hlt
stos
adc
mov
enter
mov
arpl
fldl
mov
cmpsb
xor
movsb
out
hlt
sub
das
xchg
testl
hlt
push
ret
mov
aaa
aam
in
cmp
mov
lret
mov
popa
mov
data16
test
pop
xor
pop
mov
and
push
imul
add
scas
pop
subl
mov
fstl
fmuls
inc
push
fld
aas
push
push
lea
js
xchg
decl
fwait
push
push
inc
dec
adc
ffreep
sbb
cld
push
rolb
mov
cld
mov
stc
subl
add
xor
pop
sbb
outsb
subb
sbb
pop
and
scas
shrb
loop
out
pop
inc
cmp
je
imul
nop
inc
sub
sbb
push
lcall
push
ret
push
mov
mov
pop
inc
mov
into
sbbb
xchg
or
or
inc
repz
sub
inc
jmp
and
adc
inc
inc
ja
pop
mov
leave
sbb
adc
mov
scas
out
xchg
or
mov
or
popf
stos
jle
jge
cwtl
dec
nop
or
push
arpl
mov
js
fstpt
jg
mov
jne
sub
mov
mov
cmp
push
mov
clc
aas
cmp
or
test
jl
xchg
push
daa
xchg
cmp
addr16
stc
mov
push
pop
aas
and
pop
inc
je
sub
clc
mov
dec
and
xlat
push
xchg
dec
pop
fidivl
or
leave
dec
or
mov
addr16
clc
pop
scas
repz
and
mov
insb
fadd
test
popa
rcr
pop
cmc
sbb
jmp
addr16
push
hlt
cmp
and
ret
lret
test
push
cld
cmpsb
lods
shlb
outsl
in
lahf
or
xor
pop
dec
cli
push
sbbb
xor
pusha
xor
jg
adc
jo
fidivrs
ja
scas
outsb
inc
test
ss
xchg
or
push
std
sub
shlb
mov
sti
jmp
mov
int
stos
rorl
push
lods
fldt
xchg
jns
fnstenv
or
push
repnz
cmpsb
iret
arpl
push
push
mov
mov
cli
mov
scas
std
or
aam
push
and
inc
mov
movsb
jp
lock
xchg
shll
sub
push
mov
or
adc
mov
pusha
xorl
ljmp
cmp
sub
or
or
pop
jae
rsm
mov
fldt
js
cmp
push
mov
xlat
scas
bound
pusha
adc
lods
push
or
cs
jecxz
das
enter
mov
add
loope
cld
arpl
cmpsl
rcll
test
sahf
jnp
adc
fmul
xchg
pop
dec
stos
enter
popf
push
fsubp
pop
int3
lret
push
fsubrs
pop
and
mov
push
sub
sahf
cltd
scas
adc
fnstcw
dec
cmovl
bound
jecxz
adc
fstps
cmc
movb
mov
fnstcw
and
jge
push
and
adcl
and
cld
outsb
push
jb
mov
nop
pop
and
or
ss
sub
sbb
lods
out
loopne
jg
aad
rcrl
pop
or
movsb
pop
sbb
inc
dec
cmpsb
popf
mov
mov
jmp
mov
jle
sbb
inc
enter
sbb
jne
hlt
add
in
rolb
xchg
into
nop
aam
and
test
gs
dec
je
inc
add
mov
jns
push
loop
mov
fs
adc
xchg
adc
mov
lcall
push
shll
jp
shl
in
sbb
and
cmp
movsb
dec
push
aaa
cmc
hlt
adc
popa
mov
push
sbb
sbb
dec
pop
jb
xchg
adc
inc
scas
sahf
stos
jmp
aas
push
bound
add
outsl
jns
clc
movsb
call
aad
data16
mov
sbb
fsubl
mov
outsl
std
cld
aad
inc
out
add
loop
mov
cs
outsb
in
ret
vpsubw
jne
mov
aad
jp
xlat
sub
ret
lret
leave
nop
sbbl
pop
adc
dec
jno
sbb
mov
push
sub
sbb
clc
sub
loopne
insl
xchg
inc
dec
or
test
mov
add
pop
dec
xor
sbb
dec
fstpt
jmp
mov
lahf
gs
repz
xor
xor
int
mov
outsw
rcl
fldpi
xchg
out
xor
pop
dec
aad
lock
push
jnp
scas
fsubl
pop
out
adc
fisttps
jp
push
adc
push
sub
lds
cmp
inc
in
sub
push
or
mov
or
sbb
ret
push
test
adc
popa
jno
outsl
das
testl
inc
out
cmp
test
jns
fisubrl
mov
es
xchg
insl
adcl
int3
sar
sbb
dec
and
les
cmpsb
xchg
pop
std
lods
push
lret
xchg
dec
and
sbbl
jge
scas
out
test
ja
in
outsb
push
adc
mov
call
adc
mov
jb
adc
sbb
mov
cmp
imull
mov
dec
xor
mov
fs
xor
dec
push
lock
mov
sub
cld
jno
cmpb
jno
add
push
fiadds
push
mov
push
int
push
or
rorb
rorb
test
adc
mov
sbb
shl
add
inc
cmp
lods
imul
lods
inc
aam
mov
dec
sbb
insl
cmc
gs
subb
or
int3
fcomp
add
inc
int3
daa
mov
out
addr16
loopne
ret
push
dec
out
mov
inc
repnz
push
jg
cld
push
push
mov
push
add
int3
mov
mov
jg
hlt
lock
inc
dec
and
call
xor
gs
xor
cltd
sub
xchg
ja
push
fwait
testl
shrb
push
cmp
ljmp
xchg
xorb
test
mov
cmp
jmp
xor
mov
aaa
fsub
cs
inc
and
cwtl
and
arpl
mov
and
adc
test
iret
fwait
xchg
mov
arpl
or
pop
stc
dec
pop
or
mov
aam
insl
dec
fs
sub
push
mov
cmp
add
xchg
cltd
inc
xchg
jecxz
ja
sbb
inc
mov
pop
sbb
les
cltd
fisubrs
jle
add
pop
and
cmpsl
mov
call
in
dec
arpl
pop
icebp
or
enter
jo
sub
xchg
sub
mov
rcrb
xchg
lods
mov
jge
lods
sbb
mov
xor
mov
cmp
pop
push
xor
jp
cmpsb
loope
mov
cmpsl
ret
ljmp
subb
mov
movsl
push
mov
jbe
loope
imul
xor
insb
out
scas
mov
sub
andl
push
sbb
movsb
stc
sub
jo
pop
or
test
mov
inc
jg
mov
inc
lock
dec
xchg
rolb
imul
out
xor
call
pop
orb
cmp
adcl
pusha
jns
and
bound
stos
fstpl
loopne
add
cmp
push
adc
cli
fwait
cmp
fistl
dec
into
fcoml
mov
sub
xor
sbb
push
push
stc
aaa
sub
pop
sbb
mov
push
outsb
inc
mov
push
hlt
out
insb
int
jb
rcrb
fistl
xchg
orl
inc
cmp
lods
pop
lock
data16
cmp
movsb
sub
pop
inc
popf
add
ljmp
dec
jae
rclb
and
stos
fisubrl
fbld
push
clc
lea
inc
stos
popa
xor
xchg
shll
es
dec
mov
inc
outsb
movsl
and
sub
mov
sbb
fistpl
movsb
mov
dec
add
mov
cmc
lock
pusha
jne
fldt
fisttpll
stc
push
push
sbb
jnp
push
jmp
inc
cs
js
pop
jns
and
add
jge
out
xchg
jbe
fsubs
adc
pop
cmp
in
movsb
cltd
into
push
loopne
and
add
mov
outsb
mov
test
repz
ja
test
jae
sbb
imull
and
jae
lret
hlt
aad
ds
loope
push
jne
rol
mov
movsl
mov
notb
ret
mov
xchg
aaa
cld
rcrb
or
in
cmp
cmp
add
inc
scas
es
inc
and
push
inc
imul
jmp
fbstp
rcl
jne
mov
fs
push
push
sub
cmpsl
jle
pop
dec
mov
js
mov
or
cmpsb
jns
cmp
dec
into
jecxz
push
xchg
jg
mov
pop
test
or
fsts
dec
mov
imul
jg
cs
movsb
sbb
xchg
mov
push
cli
test
lret
mov
add
mov
cmp
sub
aaa
lea
fmull
das
pop
add
inc
faddl
fldcw
icebp
fsubrs
subb
add
mov
test
mov
xchg
dec
mov
jp
dec
pop
out
xchg
js
xor
dec
dec
xor
ficomps
cmp
jbe
test
mov
pop
cmp
pop
loopne
stos
mov
hlt
sbb
xchg
int3
insl
scas
fwait
xchg
pop
pop
fcoml
mov
lods
mov
xor
cmp
sarl
adc
cmp
add
test
mov
lahf
shrl
dec
push
dec
lds
aad
loope
out
adc
push
ds
cmovs
mov
sbb
in
mov
jo
cmp
insl
dec
cmp
mov
jmp
pop
or
fistl
fcomp
enter
xor
adc
int
fidivrs
pop
sub
push
mov
xchg
out
data16
addl
jp
sbb
scas
sub
and
and
in
inc
and
out
mov
mov
pushf
fst
bt
inc
cmpsb
adc
mov
jne
mov
mov
adc
nop
leave
bound
sub
pop
add
push
mov
outsl
lahf
mov
cld
adc
adc
shll
fdivl
ja
cmpsb
xchg
sbb
in
ret
push
fisttpl
cmp
adc
cmpsl
aad
std
mov
lret
and
sub
popa
sub
test
jg
pop
push
inc
loope
jbe
cmp
jmp
sti
push
ret
scas
xor
aaa
rclb
ja
mov
ds
sub
jle
iret
arpl
pop
and
or
popa
hlt
push
jns
xor
jae
pop
xchg
pusha
fisttps
add
or
in
adc
inc
lret
out
ret
iret
fisttps
mov
jmp
ret
cwtl
jge
cmp
clc
imul
cmp
movsl
xchg
inc
mov
out
mov
aas
test
mull
mov
jne
cmp
pop
test
mov
and
fisttps
popa
popf
adc
and
jnp
fs
fidivrs
sub
stos
push
aam
arpl
stc
test
stos
lcall
adc
lahf
xor
cmc
adc
xor
dec
adc
sbb
gs
lret
iret
cmp
xchg
jge
pop
push
das
lcall
sub
cmp
or
xchg
pop
adc
pop
inc
js
lods
cmp
shl
xchg
pop
adc
jnp
pop
mov
adc
dec
push
pop
fistpl
testl
fnstsw
pop
popa
mov
fst
imul
xchg
out
into
inc
or
xchg
fdivr
inc
xor
inc
outsl
push
jae
add
lcall
cli
mov
sti
das
push
xchg
dec
sbb
inc
ja
push
adc
lcall
mov
jns
dec
sbb
test
es
mov
xchg
cmp
mov
adc
mov
or
fisttpl
fdivp
xchg
js
repz
ret
stc
mov
in
sbb
jmp
aaa
jge
ljmp
mov
ret
xor
aaa
adc
mov
movsl
js
in
pop
pop
inc
mov
pop
jge
add
xor
mov
repnz
cs
xor
data16
leave
out
push
push
add
cwtl
int3
pop
add
insl
lret
out
inc
mov
push
les
addl
xchg
iret
lods
fstpl
dec
mov
shld
inc
mov
std
push
jmp
xchg
push
mov
stos
icebp
outsl
adc
leave
mov
add
sbb
adc
sub
xchg
jmp
pop
cmp
rcrb
mov
test
aam
xor
sub
adc
cs
jl
mov
mov
inc
mov
in
lret
sub
fidivl
orb
sub
pusha
fwait
push
xlat
xor
cmp
add
ds
xchg
mov
mov
mov
sub
data16
sahf
lahf
sbb
stos
mov
mov
cbtw
sub
xchg
insb
sub
cmp
pop
adc
mov
mov
cmp
and
call
loop
loope
negb
or
arpl
mov
shlb
movsl
xchg
push
divl
sbb
adc
je
sbb
rcll
or
xor
lret
inc
adc
rcrb
xor
xchg
dec
xchg
dec
mov
mov
incl
dec
adc
call
mov
ljmp
out
cmp
je
mov
daa
fs
movsl
shll
sbb
fsubrp
add
aas
cmp
leave
movsl
mov
jmp
add
sub
ret
imul
dec
dec
push
dec
or
and
push
push
daa
jno
mov
lcall
loopne
in
int3
cmp
mov
cmpb
loope
jb
ficoms
lods
sbbb
icebp
inc
daa
mov
jge
push
jp
inc
int
inc
xchg
xchg
mov
gs
cmp
fidivs
jp
pop
idiv
pop
pop
adc
or
test
clc
call
xchg
popf
xchg
int3
jge
addr16
out
sub
outsl
cmpsb
add
mov
into
mov
fsubr
adc
inc
fs
gs
cmc
call
mov
fildl
out
pop
mov
and
ja
ja
inc
or
pop
jp
lret
push
movl
or
icebp
int
pop
or
xor
and
sahf
push
or
sarb
push
dec
xlat
push
call
in
fdiv
fmull
push
lret
mov
flds
xlat
push
push
mov
shll
jl
jmp
xchg
xor
dec
push
mov
pop
inc
jecxz
inc
inc
movsl
xor
cmp
fldenv
xchg
dec
sbb
cwtl
mov
mov
mov
jnp
sub
fidivl
inc
arpl
adc
sbb
into
mull
adc
jge
leave
and
mov
mov
jg
insl
mov
lret
xor
cwtl
fstpt
in
and
testb
add
cmp
jmp
inc
fdivs
pop
popa
outsl
add
or
int3
cld
out
popl
inc
repnz
sub
movsl
shl
adc
sahf
hlt
outsb
sub
movsl
inc
adc
paddusb
push
ds
push
movl
fidivs
scas
dec
push
pop
inc
test
loope
push
aas
mov
pop
cmp
sbb
insl
arpl
out
dec
lock
gs
cli
mov
mov
dec
adc
dec
sbb
imul
ret
mov
jne
push
sti
xlat
push
add
or
paddb
inc
shrb
inc
cld
ret
push
push
mov
repz
test
mov
scas
jmp
add
aaa
bnd
cmp
or
dec
inc
xlat
cmp
xchg
dec
mov
ret
jmp
lcall
mov
push
je
std
pop
and
addr16
xor
pop
xchg
or
int3
sub
cmp
jno
cmpb
leave
stos
test
xchg
xlat
xor
std
jge
push
sub
jb
lahf
test
iret
cmp
dec
xchg
adc
nop
rorb
cltd
mov
mov
jge
dec
clc
cmp
addr16
mov
xor
leave
push
test
jmp
int3
pop
mov
clc
sub
bound
aam
add
out
dec
and
out
adc
sub
fstpt
adc
mov
scas
xchg
xchg
mov
mov
sbb
pusha
mov
aaa
or
mov
stos
mov
shrl
popf
push
sti
outsb
mov
lret
sbb
push
xchg
sti
mov
pushf
stos
sarb
mov
lahf
fisubrl
scas
pop
xchg
inc
sbb
sub
sbb
cltd
mov
inc
dec
int3
bound
pop
push
inc
rcrl
cmp
or
repnz
test
in
and
push
cmovbe
lahf
bound
xchg
cmp
xor
jp
add
outsb
mov
mov
xchg
test
xor
ret
arpl
das
rclb
imul
fsubrs
jmp
shrb
js
dec
icebp
mov
inc
pop
cmc
and
out
push
loope
add
push
and
sbb
cmp
js
cmp
add
mov
push
movsl
xchg
stc
inc
sub
mov
mov
add
fidivrl
xchg
or
shll
sbb
int3
iret
test
sbb
std
imul
shll
fwait
gs
pop
push
mov
inc
push
push
dec
mov
test
xchg
cmp
mov
addb
push
pop
xchg
cmpxchg
test
and
or
inc
ret
lea
fidivrs
cmpsb
insl
dec
arpl
jnp
and
dec
mov
pop
sar
dec
xchg
or
rclb
pop
xchg
push
int
jnp
fwait
mov
push
lret
test
dec
or
mov
ss
fcoms
loopne
mov
xchg
push
cld
js
cmp
xchg
dec
cld
dec
mov
int3
mov
mov
call
jp
xchg
cmp
das
stc
jns
lods
mov
lods
lock
push
mov
pusha
lret
pop
out
jb
shrl
jns
push
mov
shl
mov
shlb
push
jnp
cli
jns
xor
imul
and
adcb
sbb
mov
and
mov
push
testb
jae
xor
jl
jbe
adc
scas
in
push
inc
jg
sbb
bnd
jnp
adc
jecxz
sbb
cmp
jg
mov
je
sahf
test
outsl
mov
mov
add
in
xchg
and
bound
jno
repnz
in
sarl
dec
lds
lret
int
ja
and
xor
add
les
ljmp
jnp
push
sub
dec
lds
imul
dec
dec
add
lahf
mov
mov
inc
aam
mov
add
mov
hlt
pop
movb
rcrl
sahf
pop
loope
pop
dec
ljmp
in
or
addr16
les
lods
cmp
pop
call
fidivrs
ljmp
ret
std
test
mov
xlat
cmpsb
scas
in
xchg
inc
mov
pop
xchg
cld
into
in
sti
mov
sbb
lods
pop
pop
mov
pop
rcll
mov
lea
cld
cmpsb
mov
scas
mov
mov
jb
sbb
fdivrs
in
imul
movsl
or
enter
jl
adc
adc
adc
scas
sub
lea
mov
xchg
das
cmp
js
add
sbb
jmp
jnp
and
xchg
inc
jno
fwait
xchg
sub
pop
xchg
je
cmp
int
lahf
test
xor
xchg
les
lret
ja
xor
jno
xor
jnp
cwtl
lahf
cmp
xor
cmc
aaa
orl
popf
mov
out
pop
mov
ljmp
out
enter
push
and
lock
jg
out
ds
stos
dec
fidivs
fldl
sbb
leave
imul
iret
and
clc
inc
xchg
nop
and
fnsave
and
sti
adc
in
mov
in
popf
out
pop
iret
pop
jmp
rclb
xor
aas
sub
orb
sub
lret
imulb
pushf
jge
fdivrl
inc
fwait
daa
insl
xlat
fcom
lds
call
icebp
mov
loope
mov
jb
pop
insb
loop
mov
test
mov
mov
cwtl
cmp
jp
mov
lods
fisubl
sub
push
xor
dec
mov
and
sub
filds
pop
or
inc
sub
int
mov
push
pop
xchg
and
insl
testb
jbe
incl
sub
data16
fs
mov
sti
inc
lods
cmc
xchg
mov
xchg
dec
cmpsl
repz
scas
sbb
mov
mov
int3
dec
mulb
pop
mov
out
and
js
mov
or
ja
jae
mov
nop
ficomps
mov
mov
dec
int
rcr
lods
lcall
repz
lods
es
xchg
arpl
cld
call
stos
push
jnp
push
cli
loop
fsubs
mov
and
cmpb
roll
mov
imul
inc
cld
daa
mov
les
xchg
sub
sar
mov
cmp
mov
jmp
pop
outsl
dec
mov
push
repnz
adc
inc
xchg
sub
icebp
hlt
mov
jns
dec
dec
fsubl
sbb
movsb
jnp
cli
pop
fwait
xchg
xor
in
ret
pop
dec
call
mov
int3
jmp
pop
fs
jle
and
scas
xor
lock
sub
fisttpll
sub
ret
mov
cmp
lahf
mov
mov
dec
sbb
sbb
sub
test
sti
push
pusha
mov
nop
inc
jecxz
push
mov
and
dec
mov
jbe
mov
ja
dec
ret
imul
push
cmpsl
jecxz
adc
imul
pop
enter
divl
and
adc
mov
out
inc
cld
sub
sbb
enter
mov
cld
imul
cmp
add
sbb
out
dec
shlb
cmc
xchg
add
pop
movsl
pop
push
push
mov
jg
cltd
mov
popl
call
pop
pop
jns
push
mov
jle
ja
imulb
dec
mov
mov
inc
jge
adc
lret
ljmp
or
jg
ss
dec
imul
into
inc
dec
jae
mov
in
dec
repz
into
jbe
cmpsl
and
addr16
pop
dec
mov
xchg
adc
je
fcomp
cmp
jmp
xor
pusha
stos
or
lret
repnz
mov
cmpb
out
ror
add
jb
std
push
mov
rcl
imul
xor
xchg
js
mov
popf
mov
add
cli
push
mov
aad
je,pn
mov
hlt
cmpsl
pop
and
rclb
jmp
sub
pop
jmp
sbb
push
orb
divl
inc
jl
pusha
push
subl
push
xchg
jg
push
lds
pop
shrl
lds
inc
cmp
xor
add
cs
inc
adc
mov
push
or
lahf
jle
pop
sbb
mov
mov
aad
jmp
inc
in
push
imul
push
arpl
loope
addb
fwait
jns
adc
ljmp
outsl
loop
xchg
icebp
xchg
test
fnstsw
push
cs
or
imul
mov
rorl
push
ret
loopne
test
jle
adc
mov
sub
mov
adc
cld
mov
aam
or
lock
add
mov
push
test
pop
add
sub
push
push
jmp
xchg
mov
add
imul
loope
push
fwait
and
fiaddl
pop
mov
shlb
mov
hlt
or
adc
mov
in
sub
inc
or
int
rclb
cmpsb
mov
test
inc
add
fimuls
add
ja
movsb
mov
inc
push
loop
cli
xchg
mov
inc
icebp
aas
dec
in
inc
rorl
lret
addr16
mov
mov
rcrb
fdivrp
das
xchg
jmp
test
and
inc
xchg
dec
dec
sbb
out
ljmp
dec
dec
sub
ja
mov
and
cmp
fs
in
add
adc
mov
aad
imul
lods
and
out
int3
fs
daa
push
das
insl
xor
dec
cmp
aad
cmpsl
cwtl
mov
popf
xlat
popa
add
test
cld
push
adc
sbb
divl
out
lods
mov
aaa
insb
daa
push
and
insb
pop
push
jo
mov
inc
cltd
test
dec
daa
cmp
push
bound
cmp
je
dec
xchg
adc
inc
pusha
hlt
ljmp
aas
and
pop
mov
test
sub
js
and
mov
pop
nop
mov
out
jmp
pop
pop
push
cmp
testl
lcall
imul
in
imul
jno
repz
jns
ficoms
and
inc
mov
sbb
mov
cs
sbb
mov
push
pop
movsl
testb
sub
fdivrs
mov
and
cli
int
arpl
fdivrs
ss
dec
fdivr
fadds
jae,pn
testl
pop
xor
sbbb
adc
xchg
cld
mov
adc
rcrb
cmp
lods
loopne
push
into
in
pop
decl
sbbb
and
out
lcall
pop
and
int
cmp
sbb
jge
xchg
sbb
mov
insl
stos
sti
mov
test
pop
lods
fistl
mov
leave
dec
or
inc
ret
gs
xor
xor
movsb
aas
cmp
in
popa
stos
repnz
fstpl
sub
pop
fsubp
pop
movsl
leave
loopne
or
lcall
jp
push
shrl
rep
and
test
pop
sbb
pop
add
subb
fs
cmp
in
dec
test
cwtl
mov
mov
loopne
test
mov
push
pop
sub
test
pop
jne
in
das
jae
or
int
aad
sbb
lock
adc
movb
mov
mov
push
insb
setne
inc
mov
outsb
adc
test
cwtl
in
push
fs
lret
and
push
or
dec
mov
ds
dec
arpl
jnp
push
orb
movsb
sub
ret
insl
fidivs
dec
push
out
mulps
inc
decb
mov
sbb
test
jg
mov
shr
jb
arpl
sub
xchg
and
loop
dec
sub
aam
loopne
xor
es
hlt
mov
js
pop
sbb
push
in
adc
ja
xor
pop
fsubl
pop
sbb
lock
das
jno
lret
pop
xchg
add
mov
imul
scas
jle
pop
pop
xor
stos
fdivs
and
mov
fs
dec
push
xor
jne
jle
rorl
jbe
pop
dec
inc
fsts
add
fsts
adc
sub
cmpsb
push
test
push
cs
sbb
cwtl
stos
and
mov
adc
cmpsl
pop
imul
and
lea
xor
mov
cmp
test
xchg
addb
insb
or
push
out
xor
cs
or
mov
in
xchg
cld
dec
dec
sub
mov
ret
mov
mov
movsb
das
movsb
sub
cmc
cld
inc
jge
stos
or
int
sbb
push
imul
test
xor
xor
fdivrl
mov
push
scas
jne
or
sti
pop
push
jp
push
cmc
adc
ret
add
data16
fidivrs
add
cmp
add
aad
stos
cmp
dec
test
adc
out
call
dec
cltd
and
mov
test
nop
push
and
adc
xorb
or
xor
sub
push
dec
andl
bound
dec
push
shlb
and
cmc
es
and
mov
add
jge
out
fbstp
adc
test
bound
int3
jecxz
data16
pop
and
cmp
push
test
xor
lods
mov
inc
mov
add
xchg
ret
inc
fstps
or
dec
sbb
bnd
xchg
sbb
rcrb
adc
xlat
mov
ss
lahf
mov
pop
faddl
jecxz
pop
push
and
sub
add
and
sub
out
push
test
popa
not
pusha
ja
pop
mov
ret
push
push
hlt
xchg
fmuls
add
inc
xor
fwait
jo
or
pop
pop
inc
xor
cmp
rol
imul
imul
mov
aaa
clc
jbe
clc
bound
stos
add
mov
jo
addl
or
pop
clc
add
in
movsb
xchg
jl
push
mov
mov
out
dec
pop
mov
and
aaa
pop
mov
pop
popa
out
mov
mov
sbb
mov
xchg
pop
mov
hlt
daa
mov
sbb
jg
mov
or
repz
jns
xchg
in
fldenv
sbb
xor
jle
xchg
xchg
sar
dec
into
in
sbb
mov
push
inc
fwait
xlat
mov
fs
mov
and
pop
aad
push
aad
add
jp
xchg
mov
mov
mov
sub
es
mull
jge
clc
mov
pop
xor
pop
jne
gs
jmp
sbb
inc
mov
push
lds
lods
pop
out
loope
ja
fisubl
outsb
mov
jmp
push
cmc
jge
add
jl,pn
xor
das
fsubrs
mov
imul
pop
stos
repnz
gs
sbb
xchg
rep
adc
iret
jo
in
pop
mov
inc
inc
lods
ds
fwait
ret
pop
and
pusha
fcoml
pop
mov
add
cmp
sub
pop
inc
rcll
mov
or
sbb
jb
xor
lds
pop
xchg
clc
out
add
jmp
shlb
pop
pop
dec
shrb
or
and
loope
and
outsl
loopne
aam
dec
test
sub
fsubrl
fimull
push
mov
mov
test
cmc
sbb
jle
pop
out
xchg
ret
mov
xor
ret
movsb
sahf
mov
add
push
mov
inc
fmull
lahf
dec
andl
incl
mov
in
out
cmp
sahf
mov
and
or
mov
lods
pop
cwtl
mov
ja
jecxz
std
mov
push
ficompl
aam
ss
push
dec
push
mov
in
add
mov
adc
out
dec
mov
test
cli
mov
out
nop
out
mov
push
loope
xchg
fbld
call
dec
inc
adc
shrb
rol
cmpsb
stos
repz
scas
sbb
dec
test
std
movsb
stc
daa
adc
xor
test
mov
scas
xor
lods
mov
jbe
call
mov
orb
push
mov
out
sbb
lds
nop
ds
dec
jb
test
mov
fisubl
ror
std
or
inc
pop
mov
and
or
shrb
dec
aam
cld
hlt
cmpsb
adc
pop
into
mov
das
bnd
push
into
test
or
push
cmpsl
or
lret
jecxz
jg
fwait
loope
or
shrb
dec
insl
test
jo
mov
xor
cmp
daa
push
inc
add
mov
out
ljmp
bound
int3
ja
stos
mov
jg
das
push
pop
add
mov
out
sub
xor
fwait
jo
cmp
shlb
xchg
aad
pop
xchg
push
mov
sub
inc
dec
jnp
push
outsb
cmp
xorb
mov
jmp
shr
mov
xor
add
ss
mov
push
lret
in
cltd
sub
sub
add
aaa
mov
loop
xor
fldcw
pop
repz
mov
pop
aas
xchg
cmp
popf
inc
dec
icebp
add
into
lods
stos
std
mov
loope
pushf
insb
or
dec
pop
xchg
andb
add
cmpsl
fstp
push
aas
fwait
enter
and
push
adc
scas
fildl
sub
shr
dec
mov
and
mov
push
jp
xor
cmc
adc
in
mov
or
imul
push
pop
out
lods
or
xchg
int
xchg
fisubrs
mov
bound
and
scas
add
lret
orb
jge
lret
jo
adc
and
in
or
push
xchg
mov
call
pop
mov
inc
mov
decl
cmpsl
fsubs
rcrl
xchg
ja
enter
pop
inc
jbe
lea
cmp
inc
jmp
fstpt
sbb
xchg
adc
cs
push
cmp
js
lret
es
sbb
mov
enter
adc
mov
mov
out
scas
repz
or
icebp
add
lret
testb
bound
jbe
jnp
or
mov
rcrb
add
xchg
push
je
jno
stos
scas
insl
fscale
xor
lcall
and
inc
xor
inc
xchg
shlb
adc
mov
mov
imul
scas
mov
or
outsl
sbb
in
cmp
add
sub
adc
jne
mov
vunpcklps
mov
imul
daa
je
int
mov
push
out
xor
out
mov
js
divb
or
ret
adc
mov
sbb
test
sbb
stos
jno
sub
mov
dec
ror
inc
adc
jae
mov
xlat
sbb
jo
and
lcall
mov
cld
leave
cmpsb
cmp
or
sti
ja
jmp
cld
in
adc
xchg
mov
insb
push
mov
xchg
lods
xorl
inc
out
xor
sub
int3
sti
rcl
adc
jl,pn
sti
in
adcl
push
jnp
ja
pop
and
mov
pushf
stos
rcrl
je
cli
sahf
add
jle
scas
sub
xchg
fistpl
nop
mov
je
adc
idiv
cmpsb
call
inc
mov
and
cmp
loop
enter
jg
add
jnp
xor
pop
mov
jmp
mov
scas
mov
push
scas
ja
movsb
sub
jp
cmp
and
xchg
gs
pop
sti
jo
hlt
cs
xlat
inc
jl
or
cmp
sub
sbb
pop
mov
cli
loopne
xchg
jo
xor
dec
jmp
xor
mov
ljmp
push
mov
daa
add
inc
jbe
mov
add
jmp
push
push
push
inc
pop
push
add
ds
push
cmp
in
call
dec
enter
rcll
jl
cmpxchg
xor
idivb
mov
ficomps
dec
xchg
adc
cmp
push
ja
inc
xor
rorl
mov
inc
outsl
cs
adc
das
sbb
pusha
ds
rcrb
jo
movsl
cmp
adc
insl
mov
fdivp
xor
stos
movsb
or
fcomps
or
imul
insb
and
sub
inc
adc
or
enter
push
adc
xchg
mov
int
jle
dec
std
adc
sahf
sbb
cmpsl
sbb
fiaddl
sub
or
lea
fdivrs
sub
stos
fisttps
and
seto
lcall
cltd
jo,pn
adc
mov
lods
sbb
insb
pop
fnstenv
mov
push
dec
mov
popf
push
jne
mov
nop
dec
movsl
dec
cmp
pop
lods
out
aad
xchg
in
xchg
insb
push
outsl
cmp
inc
mov
dec
jne
adc
repz
cmp
xor
shr
sub
mov
pop
mov
jb
es
xchg
mov
clc
add
aam
out
sbb
push
decl
sub
fwait
mov
adc
in
mov
mov
sub
push
subb
hlt
mov
jmp
xchg
xchg
test
mov
mov
ljmp
jge
jmp
or
add
xchg
ljmp
sbb
int3
cmp
adc
insb
jl
mov
mov
arpl
cwtl
std
xorb
push
inc
lret
jb
mov
adc
ret
push
push
fidivl
adcb
in
out
dec
and
cmc
or
stos
mov
dec
sbb
gs
sarb
in
jg
jb
movsl
cmpsl
call
lret
icebp
jo
pop
shlb
aad
xor
in
adc
adc
mov
fdivrl
and
sbb
cmp
lods
sti
into
push
divl
out
cmp
add
sahf
or
std
out
popf
mov
pop
imul
mov
clc
and
xor
mov
mov
pop
out
mov
push
pop
jle
fcomps
pop
jmp
mov
shr
daa
stc
pop
lahf
imul
sbb
xor
js
lock
jne
repz
lret
loope
outsb
loopne
lods
iret
out
inc
in
cli
jmp
sbb
fisubrs
push
into
and
aam
cwtl
add
pop
out
jecxz
mov
jo
mov
jp
jg
xor
pop
adc
test
add
inc
testl
mov
das
adc
inc
es
ss
in
js
idivl
push
daa
mov
sub
push
iret
dec
addb
lock
sub
call
mov
outsb
sub
in
addb
pop
aas
pop
cmp
fmull
shll
dec
jle
in
adc
xor
aas
lds
repz
mov
fwait
sahf
add
out
add
clc
mov
mov
les
dec
jns
stos
sub
int
mov
cmp
ss
inc
mov
dec
jo
mov
lret
jmp
out
mov
ljmp
cmpsl
jno
in
rolb
test
sub
mov
mov
test
popf
xchg
ja
bound
push
push
sub
outsl
lcall
pop
push
lods
add
fdivs
jge
fcomps
jge
and
push
jmp
insl
hlt
scas
lret
adc
mov
incb
cld
or
test
add
enter
mov
pop
and
sub
pop
jg
cmpsb
dec
pop
pop
stos
sbb
loope
jo
call
xor
in
outsl
jmp
or
push
loope
mov
cwtl
sub
cld
or
ljmp
cmc
aaa
repnz
mov
lret
lods
cmp
subl
push
push
icebp
jne
out
cmp
jp
mull
decb
fmul
lret
fcoml
repz
mov
sub
cwtl
add
adc
pop
or
jmp
aad
js
shrb
xor
hlt
jbe
or
mov
or
dec
addr16
jne
dec
jg
cmpl
pop
add
cwtl
sub
mov
nop
fstpt
and
jmp
sbb
adc
add
in
jp
outsl
sbb
divb
mov
out
jb
xorl
cmc
push
in
movsb
xor
rcrb
dec
sahf
cmp
scas
add
ret
jp
mov
cmpsb
mov
js
fs
mov
leave
mov
and
jbe
jae
dec
stos
fsubs
leave
sub
movsl
shrl
test
dec
add
sbb
push
sbb
and
fimuls
popa
mov
mov
mov
jno
jae
pop
jae
mov
out
xchg
out
in
imul
stc
aaa
xor
aad
pop
cmc
mov
or
inc
dec
call
lea
hlt
xlat
aam
push
push
pop
lds
ja
jo
cli
jns
lods
ret
fdivl
imul
les
int
in
mov
stos
test
aaa
leave
fsubrp
cmpsb
add
pop
hlt
adc
or
fwait
dec
sub
jne
insb
popa
lret
in
jmp
jne
dec
rcrb
xchg
mov
lea
push
mov
cmc
pop
outsl
es
gs
shl
xchg
xlat
outsl
cmp
inc
add
mov
lods
stc
sbb
adc
push
push
mov
int3
inc
add
test
add
push
or
mov
ficoms
stos
and
sub
adc
scas
test
ret
mov
es
gs
dec
or
testl
gs
pop
out
or
fmulp
adc
bound
int
mov
and
xor
xchg
xor
add
jno
in
imul
mov
shr
call
adc
xchg
adc
push
bound
jb
stos
jg
cmc
scas
sahf
push
jne
clc
cmc
sbb
sub
adc
sbb
jecxz
mov
mov
das
xor
and
pop
jg
arpl
imul
jb
jmp
push
call
loope
push
adc
sbb
js
out
push
xor
loopne
sub
jmp
js
jle
addr16
mov
jmp
ret
jmp
sbb
jge
fistpll
leave
cmpb
inc
loope
roll
iret
pop
mov
mov
mov
sahf
xchg
outsl
ffreep
mov
mov
xchg
lods
push
jns
insl
pushf
dec
jb
lock
daa
add
mov
data16
or
jg
mov
push
xor
loop
lcall
jge
jo
inc
mov
pop
jbe
das
or
push
sahf
out
jp
jge
cltd
push
mov
pop
bound
pop
add
scas
fidivl
xlat
aad
mov
lcall
sbbb
rolb
pop
loop
lcall
pushf
divl
push
pop
jo
lret
jp
xchg
nop
xor
aaa
out
mov
xchg
and
push
and
mov
test
xchg
pop
lods
test
xor
add
mov
aad
clc
icebp
jmp
pusha
popf
jmp
push
addb
add
mov
stc
pop
cmp
or
jbe
sub
xor
sbb
mov
ljmp
cmp
push
sahf
in
sub
mov
insb
call
loopne
fisttpl
std
shlb
aaa
mov
imul
sar
stos
mov
cltd
and
sbb
pop
dec
iret
loop
into
or
fimuls
lods
mov
jle
rol
lods
lods
xor
into
sub
pop
mov
jp
pop
mov
xor
xor
or
movsb
hlt
cmc
inc
or
call
movsl
repnz
jl
adc
movsl
jnp
push
xchg
popa
mov
test
cmc
testb
out
lahf
enter
mov
push
into
xor
add
lock
mov
mov
mov
inc
mov
aam
test
add
cmp
fwait
adc
aad
addl
adc
pop
js
ja
sub
mov
pop
shrb
mov
jno
hlt
and
push
gs
mov
incb
lret
inc
loop
mov
xchg
cmpsl
pushf
cmp
and
jbe
leave
mov
lret
add
int
les
mov
fdivrp
add
movsb
outsb
push
into
iret
lcall
push
inc
inc
xchg
ja
adc
shlb
push
cwtl
mov
sahf
gs
icebp
mov
inc
cmp
cli
lods
jae
repnz
inc
sub
pusha
lods
mov
mov
insb
mov
sub
fistpl
jl
inc
fsubl
add
fs
push
insb
aaa
sub
fisubs
popf
and
loop
jmp
sub
ret
rol
ret
mov
jae
cmpsl
cmp
sub
push
cli
ss
cmp
sub
call
lds
pop
push
pop
cmp
fidivrl
mov
cltd
aad
aad
aas
and
stos
jg
nop
sti
xchg
leave
hlt
and
imul
pop
fisttpll
jg
scas
jp
jns
mov
xchg
and
cli
and
jp
add
push
pop
pop
dec
dec
push
jecxz
lock
and
das
mov
push
push
add
mov
sbb
and
rol
popf
jl
loop
dec
push
in
nop
inc
stos
and
dec
pop
lock
inc
adc
mov
lods
inc
leave
lahf
sbbb
movsb
lahf
in
and
mov
sbb
fldenv
or
mov
jecxz
add
sub
adc
fdivl
les
xor
call
int3
xchg
mov
xchg
test
lret
xchg
iret
inc
sub
sub
adcl
inc
mov
sub
pop
and
rclb
out
add
inc
and
shlb
xor
xchg
in
ss
mov
icebp
stos
adc
sub
daa
jmp
mov
fs
pop
stos
hlt
vdivps
lods
sub
mov
pop
or
int
pop
clc
les
pop
lods
lods
mov
jmp
movsb
into
dec
cmp
add
imul
and
andl
mov
filds
sbb
sbb
sbb
mov
gs
dec
jmp
push
sarb
ffreep
sub
cmp
mov
sbb
jae
and
fldcw
mov
shr
xchg
fmuls
cmp
shl
jl
das
sbb
loope
pop
pop
in
lea
adc
testl
or
adc
mov
ja
js
loopne
out
jo
addl
push
inc
jbe
mov
test
cltd
inc
jg
inc
mov
outsb
add
sub
cmp
xor
cmp
sub
push
or
pop
stos
adc
aad
ret
cld
outsb
in
jns
loope
stc
cltd
out
out
sub
push
out
dec
mov
repz
inc
push
mov
or
push
orl
ret
ret
shll
bound
loopne
sub
pop
jge
les
aaa
xchg
imul
bound
pop
adc
adc
out
es
add
popf
popa
bound
ret
pop
in
insb
fsubs
out
shll
dec
sbbl
add
xchg
lock
and
movsb
sub
fs
aam
mov
cmp
fisttps
sub
or
inc
push
add
ret
inc
loop
inc
xchg
inc
xchg
push
pop
rorl
icebp
xlat
xor
jae
or
or
out
lods
cmp
sbb
repnz
stos
imul
dec
sbb
sub
mov
movsl
pop
lock
lods
lods
out
out
sbb
and
test
es
aaa
std
inc
push
in
cmpsb
loope
andl
clc
mov
call
or
fucomip
scas
mov
and
push
push
out
jg
imul
aad
mov
orb
aad
inc
mov
mov
mov
pop
pop
fcmovb
sub
xorl
jp
push
mov
pop
adc
mov
pop
test
vmread
popa
aam
jecxz
jne
ds
push
ret
xor
movlps
nop
mov
fistpll
xor
push
inc
mov
pusha
adc
xchg
sbb
inc
mov
inc
adc
inc
stc
add
in
insl
rorl
lds
lods
popf
sub
push
or
lret
pop
cwtl
and
add
or
test
adc
sbb
sub
dec
ret
sub
jns
rclb
cmp
dec
cwtl
adc
jecxz
sbb
ret
lahf
call
dec
jnp
arpl
test
pop
or
bound
icebp
add
movsb
push
outsl
lock
das
outsl
popf
stc
push
ficomps
cmpsb
xor
pop
ljmp
mov
inc
fisttpll
cltd
push
jo
out
jae
cmpsl
dec
repz
pop
aaa
mov
out
xor
fs
rcl
sbb
cmpsl
popa
movsl
inc
mov
cmpsb
in
testl
dec
adc
loope
xorb
gs
xchg
loope
das
cli
jnp
or
loopne
mov
lea
int3
sub
and
mov
fiadds
fistps
cmpsb
cltd
movsb
out
push
sti
clc
push
cld
xacquire
sbb
mov
mov
dec
pop
in
sub
push
mov
les
shlb
into
pop
sahf
sahf
sbb
xchg
add
loope
mov
mov
inc
xor
xor
dec
ljmp
inc
aaa
cld
jno
cmpsb
sti
cmpsl
xchg
out
jge
jg
inc
pop
mov
jge
stos
orb
daa
add
test
ja
or
cmp
in
sub
sub
rclb
push
lahf
pop
xor
jb
sahf
mov
js
cmpsb
js
fwait
and
push
mov
fs
sarb
xchg
add
ficompl
ljmp
or
sub
or
iret
mov
cmpsb
and
cmp
ficompl
lock
lock
push
fisttpl
mov
push
mov
stos
lock
jmp
xchg
or
push
cltd
clc
jmp
outsl
mov
xorb
ljmp
ss
push
jle
inc
push
fs
mov
mov
mov
cmp
rcll
jne
shll
andb
nop
ret
lahf
jno
cli
pop
repz
adc
mov
dec
mov
out
ret
fisttpl
gs
divl
cmp
addr16
and
mov
push
imul
mov
mov
insl
jnp
shl
int3
imul
pop
imul
dec
cmp
shrl
es
aam
arpl
out
and
cmp
pop
je
adc
cld
xchg
in
push
gs
ret
xlat
gs
mov
cwtl
inc
test
sub
hlt
pop
sbbl
mov
clc
jecxz
pop
aad
jbe
fidivrl
dec
mov
cld
and
int3
push
mov
mov
mov
lret
inc
ds
outsb
mov
jne
popa
enter
sahf
in
add
lahf
push
lock
nop
or
es
rcrb
fcoml
adc
jle
outsl
mov
ret
sbb
cmp
repz
gs
push
cmp
xchg
push
mov
xor
fisubs
xchg
xor
cmpsl
popa
mov
jge
dec
inc
into
mov
mov
out
sbb
pop
push
or
mov
inc
stos
xchg
add
sahf
dec
mov
pop
into
push
mov
test
testb
add
and
push
push
jno
scas
push
gs
gs
inc
pushf
inc
mov
das
cmp
in
pop
shll
dec
mov
outsl
loope
push
test
fsubs
sub
jae
and
cmpsl
in
xor
ss
xlat
pushf
push
pop
push
mov
jg
xlat
jge
repnz
inc
push
insb
mov
repz
cmc
cmc
jmp
insl
loop
xchg
in
cld
sub
dec
flds
mov
add
or
xchg
adc
push
stos
test
aam
mov
cmpsb
sub
inc
ja
add
inc
es
xorb
push
adc
shlb
int
jnp
sbb
ret
inc
das
es
jl
lret
js
mov
pop
frstor
dec
push
jne
xor
nop
pop
mov
inc
cmp
orb
dec
ret
inc
icebp
jge
rolb
mov
imul
cmp
sahf
shlb
or
jmp
movsb
or
pop
ljmp
loope
dec
cmpsb
adc
test
fistl
sbb
fldl
cmp
xchg
pop
repnz
das
mov
push
add
sahf
js
and
sub
mov
xchg
or
sbb
push
mov
jp
in
pop
adc
mov
xor
dec
xor
or
sub
ss
xchg
les
cwtl
xor
popa
cmp
add
cs
cli
xchg
aaa
mov
loop
and
gs
sar
adc
sub
inc
je
mov
or
ret
inc
fdivl
jbe
inc
add
pushf
cmpsl
ror
and
dec
out
sub
mov
dec
jmp
dec
fnstsw
fcoms
mov
mov
push
cmpsl
test
jo
jg
orl
fmull
jnp
and
pop
push
aam
int3
leave
cli
lods
cld
outsl
mov
xor
stos
ja
icebp
out
mov
clc
ds
test
iret
fdivr
ret
andl
cmpsl
mov
mov
pop
push
out
bswap
pop
iret
mov
xchg
shrb
push
mov
xchg
inc
mov
call
push
dec
and
leave
sub
aas
pop
inc
and
xor
mov
lods
push
dec
mov
add
jecxz
inc
addr16
js
xchg
xor
sbb
imul
bound
pop
test
and
xor
pop
outsb
sub
mov
mov
jmp
sbb
add
pop
adc
pop
shll
and
cltd
add
loope
jns
mov
mov
xchg
and
add
fcoml
xchg
int3
dec
dec
pop
xor
sub
stc
mov
inc
outsl
jae
bound
xchg
fs
lret
je
sbb
push
in
adc
test
and
addr16
mov
cmpb
add
mul
sub
adc
movsl
inc
in
imul
lcall
jle
insb
popa
sub
sbb
data16
sbb
in
enter
cmp
mov
xorl
push
pop
sbb
ds
jb
scas
das
dec
mov
test
leave
ror
sub
movsb
jo
sbb
add
cwtl
xchg
fs
jns
cmc
cmpsb
outsb
rcl
pop
mov
sbb
sub
in
arpl
jnp
out
cltd
aaa
mov
sub
add
adc
aaa
sbb
xor
xor
cmp
xchg
mov
adc
jno
je
lret
sub
adc
mov
mov
std
jns
xor
in
sbb
jp
sbb
inc
sub
mov
cmpsl
jo
idivb
int
lds
mov
loope
sbb
xor
adc
rol
sbb
leave
jo
rol
lahf
rcrb
gs
ja
shlb
inc
mov
into
int3
sbb
test
pop
arpl
fdivp
sub
xor
sbb
xchg
in
add
dec
ss
insl
lret
std
roll
add
jg
xchg
int
repz
out
xor
sbbb
fmull
jne
mov
int3
addr16
ja
adc
xchg
inc
jecxz
mov
repz
jmp
inc
loop
test
je
add
iret
imul
test
mov
rcrl
push
cwtl
mov
pusha
push
int
pop
cmp
mov
sub
push
pop
and
mov
not
sbb
popf
mov
inc
lret
and
xchg
cbtw
movsb
xor
push
cmp
push
sub
sub
fdivr
add
sti
jbe
into
in
sbb
inc
add
push
mov
in
jns
sbb
test
cld
clc
imul
adc
sub
sub
cmp
nop
into
cmp
jne
xorl
fcomps
sub
and
shl
mov
add
ret
push
iret
jecxz
pushf
mov
mov
out
mov
jp
inc
mov
add
int
in
mov
add
jb
leave
cmp
sub
mov
test
dec
mov
jno
das
pushf
pop
and
xchg
loopnew
mov
cmp
sbb
push
gs
icebp
mov
dec
jae
add
ljmp
jp
pusha
inc
adc
dec
mov
outsl
outsl
std
hlt
stos
push
sbb
pop
ret
rclb
add
aaa
add
out
xor
ljmp
loopne
xor
mov
mov
out
in
cmp
mov
out
mov
xchg
jmp
out
pop
movsb
xchg
sbb
sbb
icebp
adc
adc
pop
inc
cmp
cltd
negb
leave
shrl
jno
pusha
jge
adc
pop
mov
in
movsb
mov
arpl
cmp
outsb
fsubl
inc
sbb
push
jns
mov
into
and
cmpsl
mov
icebp
xchg
or
jmp
lods
sub
sti
pop
sub
inc
and
dec
data16
data16
imul
cmc
and
xchg
lahf
mov
ss
divl
es
xor
ja
out
mov
jo
shl
mov
enter
scas
cmp
fsubrs
arpl
mov
pop
cld
icebp
pop
pop
aam
es
or
adc
dec
adc
cmp
roll
push
push
repnz
in
mov
aas
aam
mov
push
dec
add
stos
ljmp
ret
sahf
lock
mov
cld
sbb
xlat
sbb
jnp
rcrb
cs
push
stos
jae
insl
pop
and
inc
pop
sub
test
adc
pop
cmp
inc
xchg
pop
pop
dec
rorl
call
insl
mov
mov
stos
ret
add
mov
jg
daa
imul
mov
orl
rorb
int3
lods
arpl
jnp
dec
and
dec
mov
and
adc
sub
add
mov
data16
gs
jnp
mov
jecxz
flds
out
pop
add
mov
fdivrs
in
nop
cmp
jno
fldcw
out
jns
or
and
pop
mov
or
lea
mov
cltd
sbb
or
test
xor
xchg
mov
sar
mov
roll
repz
sbb
aam
cmpsl
dec
cmp
into
jmp
mov
jo
cld
bound
aam
xor
mov
or
pusha
das
and
pop
and
loop
sbb
sub
jg
out
test
and
lret
fnstsw
stos
test
bound
into
cmp
data16
hlt
repnz
scas
aad
nop
call
and
xchg
and
loope
adc
cmp
sub
pop
sbb
mov
xchg
inc
xchg
sahf
jg
cmp
hlt
sub
in
cli
sbb
pop
daa
arpl
dec
rcrb
aad
test
adc
mov
cmp
xchg
mov
or
outsl
test
test
and
dec
adc
add
push
adc
mov
pop
xchg
rolb
cmp
psllw
mov
cmp
fs
pop
insb
jge
out
loopne
dec
pop
imul
leave
jo
mov
mov
fwait
inc
and
fstpt
and
dec
xlat
xor
repz
lods
sbb
iret
sub
sbb
adc
lods
hlt
pop
and
stc
idiv
ds
sub
jo
std
repz
pop
arpl
rorb
mov
xor
test
fmuls
cmpsb
push
bound
int3
inc
nop
scas
iret
mov
fadd
repz
xchg
sub
mov
add
sub
ret
ljmp
jmp
mov
jge
xchg
mov
or
out
inc
mov
mov
pop
add
xchg
fistl
sub
lock
fnstsw
inc
insb
mov
push
xchg
push
fildl
jmp
mov
lods
test
mov
imul
addr16
fsubrs
lods
push
mov
ss
ret
xchg
and
pop
xlat
mov
imul
in
xor
mov
outsb
cmpsl
push
adc
clc
xchg
nop
lea
loope
mov
cmp
std
adc
push
bound
xchg
sbb
mov
xchg
sbb
jo
nop
gs
imul
test
sub
call
lock
dec
js
push
xorl
int3
addr16
jmp
leave
lret
xchg
nop
xchg
adcl
mov
setae
mov
fwait
ret
sarl
push
adc
repz
mov
insb
adc
cmp
mov
lds
adc
cltd
imul
ror
or
popf
int3
sub
xchg
xchg
jmp
mov
ljmp
adc
and
jge
pop
push
adc
jge
jbe
push
push
sub
andb
xchg
fiadds
sub
sub
adc
cwtl
mov
iret
fs
std
push
push
test
or
bound
and
sub
push
aas
push
aas
inc
xor
xchg
cmovle
adc
sub
ja
sub
std
int
std
add
sbb
int
jp
and
daa
xchg
add
or
clc
cmc
add
mov
popa
ficoms
jo
es
and
xchg
jb
imul
adc
or
call
mov
xchg
sbb
cmp
or
lcall
adc
nop
add
paddsb
dec
jmp
adc
push
inc
mov
xlat
or
mov
daa
test
aad
adc
lcall
pop
inc
mov
mov
hlt
mov
push
cmp
push
jp
bound
sbb
mov
popf
ja
mov
mov
sahf
sti
xchg
pop
std
or
add
incb
bound
mov
add
push
lcall
ds
jmp
mov
ja
or
test
int
adc
adc
adc
stc
lds
sub
inc
xor
jb
cwtl
aas
and
ja
sub
sbb
test
mov
test
and
lods
into
sub
sbb
js
xlat
enter
loop
call
or
pop
test
sub
fmul
add
cli
pop
mov
rorb
or
dec
jl
popa
jp
sub
push
aas
add
sti
es
nop
pop
dec
gs
ds
aad
rcll
pop
aad
lock
jo
je
or
fwait
dec
adc
imull
mov
sub
das
fdivl
out
in
push
or
mov
ja
dec
jae
push
shlb
push
mov
ret
pusha
inc
fnstcw
call
jle
cmp
popf
mov
mov
rcr
cmc
rcr
or
sub
dec
jb
rcrl
in
and
jg
leave
lret
das
ror
push
push
fidivl
ljmp
dec
arpl
je
pusha
push
jae
int
xor
mov
xor
lds
ss
adc
ljmp
sub
insl
aam
out
mov
and
loope
pop
mov
sbb
add
stos
popa
aaa
dec
sahf
fidivl
jle
je
mov
cli
into
sbb
inc
cmp
lds
pop
fcmovb
push
mov
shl
sub
or
jo
push
xlat
add
pop
cmpsb
js
ret
adc
xor
xchg
push
in
dec
pushf
shlb
fldenv
gs
repnz
fldenv
and
push
dec
dec
test
sbb
inc
sbb
out
xchg
das
pop
mov
and
ud1
nop
movsb
and
shr
jb
xchg
mov
loopne
xchg
inc
dec
adc
inc
out
stos
and
popf
pushf
aam
sarl
imul
xchg
sub
loope
imul
mov
cmc
subb
ds
sbb
or
lds
jle
xchg
inc
xor
mov
sbb
mov
mov
push
mov
adc
les
clc
int
ficompl
fsubs
push
mov
cmpsl
mov
aas
loop
xchg
mov
subl
jo
movsl
mov
push
dec
stc
lret
insl
enter
jno
or
loope
lcall
lret
sbb
push
movsl
pusha
arpl
mov
mov
imul
push
pop
push
fs
push
ja
jnp
lcall
or
mov
pop
cmp
jecxz
add
fistps
mov
lea
jge
test
mov
clc
pusha
icebp
std
inc
addb
aad
ss
aam
jo
popf
loop
fiadds
and
movsb
addr16
add
cmp
ret
fisubs
dec
mov
push
xchg
test
out
mov
cmp
mov
push
dec
mov
shll
pop
mov
clc
inc
mov
lods
daa
push
imul
imul
xor
jp
icebp
xchg
sub
leave
xchg
testl
pusha
adc
ss
push
clc
les
insb
insb
daa
cmp
dec
and
dec
shl
loop
xor
push
test
movsl
pop
jmp
negl
test
pusha
pop
and
leave
xchg
fs
mov
inc
pusha
xlat
mov
lds
not
pop
adc
lods
fnsave
pushf
xchg
and
cmp
mov
cmpsl
or
neg
arpl
ret
mov
sub
adc
xor
sbb
lods
cli
pushf
test
aam
push
loopne
imul
sti
sahf
daa
ds
mov
sub
mov
cmp
xor
mov
jb
or
addr16
repz
sub
into
cmp
sub
or
movsb
xchg
popa
adcb
es
xor
ja
mov
adc
sbb
push
push
adc
imul
in
pop
jo
insb
pop
orl
test
loopne
mov
jmp
fisubl
inc
cmp
mov
test
cmpsl
inc
cltd
cmp
pop
cmpsl
mov
inc
testl
int
xchg
ja
inc
xchg
sub
lds
add
sub
push
adc
dec
aaa
mov
and
lcall
and
sub
rcll
jbe
ret
iret
and
sahf
xchg
xchg
shrl
cli
adc
mov
sub
push
cmp
movsb
and
xchg
dec
cmp
jbe
loope
mov
push
pop
xor
je
aam
pusha
cld
sub
lods
jl
in
les
adc
andl
das
out
sbb
add
cmovs
xor
dec
fcomps
pop
popa
jg
insb
and
sub
sbb
bound
lods
push
in
and
cmp
pop
aaa
xlat
mov
xor
jl
xchg
push
adc
lcall
fwait
test
dec
add
xchg
mov
mov
sbb
cmc
or
mov
add
xchg
cltd
out
lds
cmp
icebp
pop
mov
xchg
in
dec
mov
loopne
jle
addr16
and
mov
insb
mov
cmpsl
ljmp
outsb
sbb
cmp
mov
outsb
cmpsb
cs
cli
cmp
jl
cli
arpl
sti
bound
pop
out
sar
fcomps
mov
fs
jns
lods
cmp
js
xchg
insl
hlt
jbe
jae
mov
scas
jns
xorb
test
jmp
xchg
and
cmp
pop
and
dec
cli
shlb
jae
sub
push
xchg
out
mov
rcrb
push
and
jne
orb
jnp
clc
out
push
push
mov
pop
add
adc
jb
jns
addr16
mov
fsts
pop
dec
pusha
adc
sub
mov
inc
push
xor
push
adc
push
movsl
cli
xor
cmp
xor
fcmove
dec
out
add
pop
leave
pop
int3
out
fdivp
adc
jae
mov
mov
sti
mov
add
sub
pop
fcoms
mov
push
arpl
or
cmpsl
xchg
sbb
add
or
push
mov
xchg
frstpm(287
mov
clc
cmp
mov
add
leave
movsb
filds
insb
inc
mov
out
push
inc
pop
jbe
adc
lcall
mov
jmp
xor
mov
and
arpl
js
filds
aam
out
sbb
loopne
push
adc
inc
das
sub
push
dec
mov
lcall
sub
das
sub
sub
and
leave
lock
daa
subl
pop
jle
imul
jne
mov
icebp
rclb
popa
je
loop
into
scas
pop
int
outsl
xor
push
scas
in
xchg
sahf
mov
inc
sub
mov
orl
aad
fsts
mov
scas
int
fwait
xor
cmp
or
cwtl
push
cltd
pop
fistpll
cmpsl
mov
xchg
mov
ds
ror
lods
or
data16
loope
data16
ret
daa
mov
ja
xor
sbb
lods
jl
subl
adcb
jge
xor
pop
xchg
fcomp
xor
into
test
inc
ds
std
jae
leave
sbb
clc
cld
int
lahf
inc
adc
int
repnz
dec
sahf
sbbl
mov
es
mov
inc
out
pop
rclb
arpl
cld
cli
dec
mov
cmp
fmul
es
sbb
and
popf
jb
or
jns
aaa
mov
jmp
push
or
fcmovnb
test
adc
mov
lds
push
addb
push
leave
lods
cmpsb
xor
mov
cltd
into
loopne
mov
call
ret
loope
or
mov
aas
jl,pt
ret
outsl
repz
xor
pop
inc
mov
stc
pop
push
movsb
out
dec
stos
and
pop
add
add
push
pop
xchg
or
xchg
popa
adc
xchg
test
out
popf
xchg
das
and
mov
xchg
aad
mov
pop
sub
or
es
sub
ret
or
test
push
in
test
mov
aas
cld
in
cmpsl
cmp
xchg
sub
sbb
divl
fiadds
dec
dec
sbb
adc
sarb
outsb
int
jo
or
cmp
testl
and
cmc
pop
jb
adc
dec
add
in
inc
pop
mov
ss
ljmp
lea
pop
pusha
mov
aaa
mov
mov
std
jae
fstpl
dec
and
cmp
cmc
data16
mov
push
mov
fdivl
xbegin
fsubp
dec
outsl
pop
imulb
jns
push
rcll
fsubrs
dec
pop
mov
out
fs
stos
mov
fwait
lret
mov
and
fidivrs
jns
or
or
data16
arpl
shr
xchg
dec
pop
aas
dec
shrb
call
mov
mov
or
stos
in
test
jne
fsubrs
call
insl
dec
or
stos
fs
aam
and
add
and
sub
sub
lock
xchg
cmpsl
jp
dec
push
test
push
push
mov
call
lret
adcl
push
pop
mov
lods
dec
popf
jl
cwtl
orb
outsl
lods
dec
imul
pop
loope
cmp
addps
inc
scas
jmp
inc
xchg
sub
mov
aam
shl
adc
sbb
outsb
cmc
mov
test
scas
pop
fnstcw
int3
dec
adc
or
lret
sub
add
popa
pop
xchg
cli
push
pushf
int3
xor
in
pop
cmp
dec
pop
aam
push
push
arpl
xor
mov
dec
push
out
cmp
jmp
cmp
add
push
or
mov
scas
mov
mov
mov
pop
lahf
mov
icebp
inc
testb
or
dec
cmp
mov
xorl
mov
mov
xchg
mov
icebp
add
mov
outsb
fwait
mov
jle
xchg
dec
or
or
addr16
lods
sbb
mov
mov
xchg
pushf
fcomi
stc
pop
mov
jle
jecxz
aam
push
xchg
adc
shrb
ret
mov
ret
add
andl
inc
mov
dec
movsb
sahf
lret
lods
push
ss
roll
dec
test
pop
cld
push
fistpll
hlt
popa
xlat
push
imul
in
jae
sbb
mov
mov
xor
mov
pop
adc
jmp
and
lds
push
mov
rep
rorb
inc
mov
stc
ffreep
ret
push
movsb
sbb
int
and
jge
and
dec
xchg
mov
lret
repnz
and
sbb
pushf
pop
hlt
js
cmpsb
popa
addr16
jno
scas
or
lods
sti
push
xchg
stos
cmp
fdiv
lcall
push
dec
cs
dec
fcomp
add
pop
xchg
add
pop
xchg
jl
addb
pop
fcmovnbe
push
ret
push
cmp
icebp
in
mov
jp
loop
jle
mov
js
or
cmp
rorl
nop
scas
sar
outsl
inc
loope
lret
iret
dec
pop
cld
add
jg
subb
gs
sbb
mov
jnp
test
std
xchg
pextrw
adc
and
ja
mov
lret
outsb
mov
imul
lretw
and
lds
hlt
adc
fidivrl
in
int
imul
shll
push
outsb
scas
in
repz
jne
xchg
stos
and
cmpsl
mov
jl
add
clc
cmpsl
shrb
push
stos
aaa
daa
pop
cmp
cwtl
inc
push
push
mov
es
cwtl
mov
mov
rcrb
popf
rol
mov
push
mov
fldt
jle
incl
cmpsb
push
pop
jle
fcomi
push
loop
add
aam
pop
int3
ja
sti
into
rcrb
add
lcall
xchg
rorb
insl
inc
dec
mov
pop
popa
xchg
bound
jg
arpl
pop
push
mov
cmp
xchg
rorl
dec
xorl
mov
sahf
outsl
aas
nop
movb
jno
subl
push
sbb
sti
popf
cmp
adc
mov
lea
jns
pop
mov
mov
push
cli
xchg
adc
pop
mov
add
pop
popa
push
scas
cmp
adc
push
nop
mov
int
out
inc
add
jl
cmp
bound
xchg
add
mov
jl
push
cld
pop
xor
dec
test
in
movsl
repnz
dec
push
mov
adc
sarl
or
cmp
jmp
dec
or
mov
xchg
ja
in
pop
inc
adc
lods
and
sbb
movl
sbb
xchg
cld
icebp
into
inc
ret
stc
fcmovu
data16
push
add
je
inc
aam
rorb
shlb
jg
push
cltd
push
jne
in
lret
ds
scas
sahf
mov
movsl
std
mov
mov
or
xchg
cmpsl
cmpsb
and
jae
lret
add
lret
les
lods
daa
sub
adc
push
xchg
lret
push
pop
xor
mov
and
sbb
std
popa
lret
stc
inc
or
push
mov
in
scas
xorl
lahf
fnstcw
aad
lret
jmp
das
leave
jne
ficoml
adc
jae
inc
dec
aas
popf
and
dec
jb
mov
fdivr
pusha
sub
sbb
pop
xor
xchg
outsb
imul
cli
sub
in
adc
loope
into
data16
repz
xchg
cs
not
xchg
cmp
jo
gs
cmpsl
jnp
movl
xchg
add
push
addr16
shll
lods
xchg
mov
gs
mov
cltd
jb
pop
jno
out
adc
xor
sbb
stos
or
popf
ret
stos
sahf
call
lods
ljmp
mov
iret
and
pop
pop
cli
int
test
dec
sub
call
cli
or
lock
fisttpll
rcrl
aam
ret
mov
sahf
push
mov
lret
cmpl
jg
mov
std
ja
pop
vmovdqu
mov
rclb
fs
ficoml
mov
daa
and
or
push
pop
cmp
idivb
lahf
or
add
out
cmpsl
xchg
outsw
and
ja
and
push
xchg
push
xor
xor
or
push
dec
xorl
cmpl
out
push
addl
pop
jle
test
dec
mov
aaa
fimuls
and
adc
mov
mov
lret
cmpsw
fmull
cmpl
adc
aaa
or
mov
ljmp
sub
cmp
sbb
gs
xchg
test
jl
inc
jp
in
sbb
sbb
xorl
or
std
lds
push
iret
cmp
cli
xchg
xchg
fcompl
ja
dec
inc
jle
pop
mov
sbb
jnp
add
divl
xchg
pop
sub
add
pop
fadds
or
arpl
mov
jmp
jb
ret
lret
test
test
jb
jge
mov
add
jbe
xchg
pop
fisubrl
out
sub
das
mov
mov
push
push
lahf
lret
adc
jl
cmc
mov
add
ds
mov
test
fbld
jbe
lahf
popa
mov
mov
mov
fidivrs
clc
mov
imul
and
scas
inc
xchg
jb
outsb
jne
imul
mov
lods
mov
or
jno
addr16
push
in
and
xor
sub
aam
sbb
or
inc
es
mov
push
jns
cltd
sub
pop
mov
pop
pop
cmp
test
rcrl
scas
dec
fsub
xor
cmpsb
fdivs
int3
and
cmp
lcall
cmpsb
or
in
sub
push
jg
inc
clc
xor
ss
push
cmpsl
inc
ret
xchg
mov
cmp
lock
repnz
daa
je
mov
rclb
dec
push
out
or
sti
int
xchg
cmp
test
js
fstpt
dec
xchg
pop
ficompl
cmpl
nop
sti
sbb
jno
loop
movsl
push
testb
scas
test
inc
test
mov
data16
data16
imul
xor
mov
pop
push
cmc
repz
xchg
cwtl
adc
jnp
sti
repnz
pop
xchg
stos
addr16
test
xorb
jb
int3
inc
and
jo
push
inc
mov
in
and
dec
xchg
test
mov
jg
push
and
push
pop
fs
sbb
pop
mov
sub
test
pop
adcl
fsubrs
dec
or
insb
mov
jmp
rolb
adc
outsl
dec
ret
push
sbb
add
mov
push
test
mov
mov
mov
mov
les
xchg
out
xor
adc
sbb
std
hlt
inc
inc
fwait
pop
sbb
mov
gs
jno
cltd
sub
lods
inc
dec
leave
cmp
cs
push
or
ds
xor
sub
rcrl
fidivrl
push
push
jmp
sub
push
push
xchg
cmpsl
mov
fimuls
xor
sub
mov
pop
and
add
addr16
js
cmp
mov
xchg
adc
filds
xchg
lcall
dec
push
pushf
push
inc
sarl
in
adc
pop
stos
xchg
adc
jle
and
jp
xchg
sti
sub
movsb
xchg
leave
or
lret
push
popa
out
adc
fcmovnbe
and
xchg
add
jmp
leave
adc
scas
dec
jns
into
push
sub
jbe
jmp
int3
pop
mov
dec
xchg
xor
push
out
mov
xchg
lods
cli
imul
ss
sub
jb
mov
cmp
and
cli
aas
sarb
bound
jb
xchg
push
lcall
and
sbb
loope
cmp
and
xchg
mov
fisubrs
int
mov
push
dec
mov
sub
sti
in
in
and
xor
add
mov
rcrw
push
cmp
cmp
out
push
jbe
call
imul
clc
pop
rcll
imul
enter
rcrl
jnp
imul
inc
sbb
scas
pextrw
push
add
push
stos
fisttpll
and
cs
push
aad
mov
adc
jbe
jge
stc
adc
sub
call
add
sub
cmp
das
lock
jb
dec
rorb
jns
or
divl
aam
push
fisubl
ret
aam
insb
rcll
pop
in
dec
lahf
cmp
out
lods
lods
shl
push
add
xlat
test
fmul
pop
push
shrl
xchg
hlt
add
shll
rorl
xor
and
inc
adc
shl
xchg
stos
adc
popa
mov
loopne
sbbl
push
sub
mov
and
sub
test
cmpsl
cwtl
cmpsl
notl
pop
movsb
push
xchg
jg
out
mov
mov
fstpl
and
add
inc
gs
adc
sub
dec
pusha
std
cmpl
incb
fwait
jnp
jl,pt
xchg
jmp
dec
xchg
sub
or
pop
call
popl
push
frstor
inc
hlt
dec
adc
gs
adcl
outsb
dec
rclb
in
jg
cmpsl
mov
sbb
lret
push
sub
icebp
mov
jmp
ds
adc
pop
sub
add
sbb
dec
sti
jns
fucomip
add
sbb
je
fsub
and
xor
jo
jle
insl
fstpl
mov
jmp
insl
pop
mov
jle
jnp
rolb
xor
add
fdiv
pusha
push
mov
addr16
xor
mov
dec
sub
daa
or
data16
ret
dec
fsts
cmp
jnp
mov
outsl
dec
enter
inc
std
lock
adc
lcall
mov
gs
jns
mov
fiadds
hlt
test
in
in
mov
arpl
cwtl
call
leave
iret
mov
sarl
cmp
inc
ror
or
lahf
sbb
pushf
stc
aad
or
scas
icebp
and
pop
mov
dec
fiaddl
in
fisttps
xor
stos
test
add
sbb
lret
and
add
imul
scas
add
mov
in
mov
adc
adc
jg
je
sbb
movsl
xchg
jb
jb
loope
or
das
cld
cltd
mov
pop
ret
mov
mov
lcall
push
daa
mov
mov
int3
popa
sub
inc
lock
cmp
dec
ret
xchg
xor
sub
std
loope
into
jo
bts
sbb
pop
mov
jo
pop
movsl
mov
movsl
lock
push
loopne
jnp
xor
pop
test
add
lret
pusha
stos
leave
fucom
lcall
arpl
lea
cmp
mov
push
imulb
sbb
push
mov
pop
pop
sub
movsl
mov
dec
das
hlt
test
ret
push
aaa
cmp
or
xor
leave
cld
adc
mov
dec
mov
push
fs
scas
nop
ja
incl
out
enter
pop
push
shlb
les
and
fs
iret
inc
jg
cmpsl
mov
fldl
in
jmp
popf
fnstcw
adc
inc
jge
jns
inc
pop
xor
mov
popf
xchg
xchg
sbb
mov
adc
jg
jae
adc
pop
sub
in
call
xchg
pop
fldl
add
mov
shrl
rorl
mov
pop
jecxz
cmc
lds
rorl
mov
jnp
cmp
mov
fstps
fucomi
jae
inc
add
fs
daa
es
mov
and
sbb
sub
insb
push
lock
jo
cmpsl
inc
pop
mov
jge
push
pop
scas
mov
lods
in
out
fidivs
cmpsb
inc
into
int3
and
js
xchg
dec
pop
and
jecxz
mov
mov
mov
mov
add
xor
and
aaa
mov
sahf
push
popl
cmp
sbb
fsub
mov
push
push
ret
xlat
xor
out
ljmp
fisttpl
loop
imulb
es
and
mov
add
sahf
cli
mov
mov
dec
rclb
dec
adc
daa
xor
cmpsb
dec
jmp
mov
fnstsw
fcompl
mov
cltd
dec
lret
dec
jle
and
or
test
xchg
fistpll
mov
out
cmp
ja
shll
nop
inc
popa
adc
imul
dec
mov
stos
loopne
rcrw
out
push
pop
cmp
push
pop
mov
xchg
jle
add
sub
xchg
xlat
rcl
scas
out
mov
pop
jg
mov
lea
xor
bound
inc
jecxz
xor
fldl
sbb
cmpsb
adc
cs
mov
negb
cmp
sub
inc
in
andl
pop
ljmp
push
mov
jns
ss
shrb
fistpl
je
fsubs
adc
out
int3
std
aas
lret
and
outsl
ljmp
add
ret
jl
xchg
jne
inc
test
jecxz
xchg
push
xchg
xchg
dec
sub
add
xor
lods
loope
scas
dec
clc
fldenv
in
xor
xlat
pushf
xchg
jo
orb
andl
jmp
sahf
cwtl
mov
rep
mov
mov
and
imul
push
adcb
gs
scas
in
xor
cmp
nop
cld
int
jb
int
insb
subl
adc
mov
adc
js
popa
or
cmp
or
aaa
sti
pop
loop
and
test
pop
pop
adc
mul
mov
insl
cmpsl
std
popf
mov
les
xchg
xor
xor
pop
push
cmc
mov
push
or
xor
adc
sbb
and
loop
add
lods
call
xchg
in
int
xchg
loop
ljmp
pop
cmp
push
adc
add
sub
push
or
mov
and
test
pop
sti
mov
adc
mov
or
hlt
xor
and
cmp
repz
adc
les
call
data16
cmp
and
jb
sti
mov
cmp
mov
out
out
addl
add
sti
mov
popf
mov
inc
push
or
cmpsb
and
xor
cltd
fiadds
cmp
inc
shrl
push
mov
sub
inc
cs
out
shl
ss
in
and
dec
lahf
in
stos
stos
loope
xor
sub
jo
dec
addr16
mov
sbb
push
fs
push
push
ds
inc
mov
mov
cwtl
or
dec
inc
mov
jb
insl
push
iret
cmpsl
sbb
adcl
pop
jmp
xchg
sub
test
shll
out
dec
ja
in
xor
jl
mov
adcb
movsb
jmp
push
inc
push
inc
and
into
mov
dec
adc
pop
mov
shlb
mov
fcoms
and
pop
scas
jmp
ret
mov
aad
ret
xchg
arpl
pop
or
rclb
push
mov
in
mov
jle
fwait
enter
push
push
adc
or
clc
push
push
sbb
adc
push
cmp
push
jmp
add
or
mov
jmp
jo
fisttpl
fwait
jbe
mov
icebp
mov
or
iret
cmp
jnp
xor
notl
pop
mov
icebp
pop
das
mov
jl,pt
sub
pop
mov
push
fcoms
and
mov
add
adc
lea
sub
pop
jmp
mov
in
shrb
push
mov
adc
negl
lods
into
mov
push
repnz
testb
test
notl
xchg
or
orl
adc
leave
jbe
sub
in
jb
mov
lods
imul
and
sub
xchg
add
push
jmp
cmp
loopne
push
imul
shlb
std
adc
scas
daa
adc
nop
push
push
test
push
sarl
mov
add
popf
sbb
pop
push
orl
sbb
aas
or
hlt
repz
shlb
cs
or
dec
in
neg
sbb
xlat
mov
push
repz
aaa
adc
push
sbb
sbb
aad
fisubrs
dec
xlat
cmp
loopne
mov
repnz
cli
jge
aas
sbb
mov
test
pop
out
mov
imul
fucomip
lock
push
inc
pcmpeqb
cli
sbb
cmp
mov
mov
pop
jp
insb
push
rcr
movl
jg
fildl
fidivs
gs
xor
rcll
inc
cs
gs
das
sbb
sbb
mov
and
sti
ret
loope
inc
pusha
jo,pt
lcall
push
adc
inc
push
inc
in
or
lds
lret
mov
aam
ror
lcall
shr
mov
inc
push
jmp
dec
ss
jae
ljmp
rolb
and
test
jle
push
roll
test
jbe
out
lahf
mov
cmc
inc
push
cli
repz
les
ficomps
xor
or
xchg
mov
scas
jmp
adc
int
int3
pop
or
mov
ja
jne
insb
or
fs
pop
rorl
aas
test
xchg
pop
lock
adc
push
in
xchg
xchg
inc
loopne
adc
ror
xchg
scas
lock
test
stos
stos
pop
inc
lea
jne
adc
stc
stos
adc
or
rcll
pop
lret
mov
and
adc
jne
shlb
out
jns
out
adc
adc
test
xor
rcrb
cmp
flds
sbb
and
adc
lea
sbb
adc
outsb
mov
gs
mov
inc
xchg
je
stc
jmp
or
movsb
mov
or
jmp
loop
inc
sahf
loop
jge
or
insl
and
gs
out
mov
add
repz
lret
add
ror
std
jo
aaa
das
sti
dec
sbb
scas
mov
repz
push
adc
fists
mov
hlt
adc
mov
jge
aaa
outsl
mov
int
jne
and
sbb
int
les
fstl
pop
cmc
jecxz
xlat
int3
dec
xor
jns
xchg
inc
xor
les
push
lcall
jae
adc
je
scas
daa
loope
leave
pop
sbb
add
sbb
add
fisttps
sbb
or
mov
push
and
int
loop
gs
dec
ficompl
dec
arpl
fldz
pop
sti
cs
push
arpl
cmpsb
push
lret
lret
out
pop
cmp
stos
inc
xchg
cltd
int
stos
push
imul
push
icebp
or
jo
jae
fstpt
jb
xchg
inc
mov
or
cmp
into
fcomp
lods
xchg
jecxz
scas
lock
divb
sbb
sbb
sub
sbb
stos
pop
dec
jns
xchg
push
shll
mov
enter
stos
cmp
outsl
push
ret
das
lcall
mov
sbb
add
test
lret
call
les
push
or
es
lods
or
fnstcw
mov
pop
test
bound
fisubrl
icebp
jae
hlt
sbb
cwtl
dec
pushf
push
cmc
xchg
push
dec
mul
loop
jge
jbe
push
push
fildl
cmpsb
das
jbe
sub
scas
pop
push
mov
nop
dec
shlb
les
fisubrl
push
and
jge
fsubrs
je
idivb
ds
cmpb
jecxz
aam
aad
std
push
les
push
call
dec
outsl
push
fldt
inc
ret
lret
ret
xor
push
adc
fisttps
push
andl
inc
xor
idivl
inc
sbb
arpl
dec
push
jb
inc
nop
repz
loop
out
push
inc
les
loopne
mov
pusha
pop
cmp
sbb
adc
pushf
ljmp
lret
jge
das
int3
adc
sbb
xor
jge
lcall
mov
push
movsl
je
xor
jmp
cs
das
jns
jl
adc
or
xchg
or
mov
jbe
or
and
jbe
addb
pop
pop
in
push
lret
dec
sbb
ror
dec
pop
aam
xchg
push
in
mov
sbb
daa
mov
test
add
sbb
das
ljmp
adc
inc
and
testl
lods
test
sub
mov
add
mov
lods
loopne
pop
pushf
inc
in
cmp
scas
lahf
push
in
outsb
or
dec
popf
fcomps
xlat
popa
jmp
jg
mov
aam
hlt
das
arpl
stos
xchg
sub
cmpl
andb
xor
sysexit
and
mov
cmp
enter
mov
jl
test
sbb
inc
jb
pop
or
shlb
jl
push
mov
mov
lret
xor
cmp
outsl
ret
int3
cwtl
xchg
ss
test
dec
imul
push
sbb
cli
lods
sub
dec
cmp
lock
popa
sbb
push
out
outsb
ret
js
shll
cmp
lret
das
pop
jp
or
add
sahf
push
sbb
add
jmp
repz
sbb
jae
mov
insl
or
mov
movsl
pop
js
out
popa
xchg
jl
jno
popf
mov
movb
inc
mov
in
mov
cwtl
int3
dec
test
add
push
sbb
dec
push
pop
sahf
sub
data16
sbb
and
mov
imul
jo
shl
ud0
dec
out
fwait
mov
les
jnp
dec
aam
cmc
shrb
out
push
inc
mov
xchg
inc
cs
gs
sub
or
mov
loope
call
and
cmpsl
aaa
lret
jmp
mov
pop
arpl
int3
jp
or
in
or
fdivrl
cmovnp
xchg
ss
insl
add
fdivl
xlat
xor
pop
cmc
out
loop
ret
xor
popa
xor
xchg
js
sbb
jmp
push
add
push
insb
and
jge
ret
fucomip
mov
mul
lds
inc
push
inc
cmp
enter
cmpsl
xor
inc
outsl
mov
mov
int3
cmp
out
mov
push
mov
push
push
mov
dec
gs
imul
dec
fs
mov
xchg
hlt
mov
loopne
loop,pt
cmp
xchg
mov
pop
mov
test
mov
push
imul
jae
jge
cld
mov
aas
lcall
outsl
pop
fsubs
jmp
outsl
testb
xor
in
push
leave
out
xchg
sub
ds
inc
sbb
or
push
inc
stos
sbbl
xor
lods
sub
dec
mov
repnz
pop
push
cmp
adc
or
add
aas
mov
cmp
inc
mov
ja
xchg
push
andb
sti
lea
mov
std
dec
shrb
xor
std
push
jp
mov
ret
xlat
cld
jbe
xchg
inc
jo
jg
dec
jo
pusha
std
cmpsb
test
cmp
bound
cmc
leave
lock
stc
adc
push
mov
mov
adc
jno
inc
or
mov
je
jge
xor
push
mov
push
inc
sub
mov
mov
xorb
pushf
fbld
bnd
cmp
cli
gs
inc
xor
mov
inc
mov
movsl
sub
out
fistps
jecxz
mov
into
pop
lret
inc
rorb
pushf
stc
dec
or
enter
inc
cmp
add
dec
outsb
mov
outsl
push
enter
sub
test
jne
test
sbb
push
or
pop
mov
sarb
jmp
in
mov
or
imul
bound
mov
dec
jnp
imul
or
cmp
jg
movsb
bound
add
rep
jnp
sub
lea
jp
xchg
outsb
testb
xchg
and
mov
repz
xchg
into
hlt
sbb
fs
pop
insb
divb
jl
movsl
loopne
mov
inc
pop
or
sub
mov
ret
shlb
ret
mov
stos
cs
call
cmpsl
icebp
mov
loopne
pop
mov
push
inc
mov
xlat
cmp
in
mov
or
mov
into
in
xorl
add
dec
or
pop
and
jle
sti
push
sti
repz
mov
into
cmp
sub
pop
xor
fsubrs
adc
lea
mov
cli
sbb
fildl
push
leave
adc
sbbb
pusha
adcl
je
fwait
mov
loopne
lock
arpl
and
cmp
arpl
mov
jne
dec
add
dec
fwait
add
jmp
and
mov
mov
nop
xchg
inc
sbb
leave
add
scas
es
test
dec
mov
inc
sub
addl
push
adc
add
pop
mov
out
dec
xor
push
addr16
pop
dec
mov
aam
pop
subb
cltd
fincstp
dec
inc
loope
jecxz
jbe
push
jae
jle
addb
xor
adc
dec
ljmp
sub
bound
mov
and
shrb
fcoms
fcompl
jb
sbb
daa
iret
jae
jbe
cmp
mov
pop
inc
out
gs
add
dec
push
cmp
xor
dec
sub
pop
jmp
stos
in
and
xor
dec
mov
jnp
insl
mov
push
and
push
xchg
std
jg
adc
daa
sbb
shlb
insb
cmp
imul
adc
mov
repz
inc
cmp
mov
add
loope
xchg
cmp
outsb
jo
and
xchg
out
cmpb
outsl
sub
push
add
inc
cltd
lock
mov
movsl
mov
cmc
cmpsl
push
fs
mov
xchg
clc
imul
adc
mov
jae
mov
fadd
push
push
out
adc
xor
cmp
or
mov
cwtl
and
repnz
dec
inc
cmp
loopne
fidivs
push
shll
pop
movsl
call
dec
mov
xorl
cld
aaa
cmc
int
std
rorl
rclb
mov
adc
popf
xor
dec
sub
xor
jmp
dec
fnstcw
or
inc
dec
jne
mov
fldenv
leave
push
add
or
fcomps
or
jnp
sbb
xchg
xlat
std
xchg
out
imul
aam
les
divl
jbe
push
or
out
push
jp
cmp
hlt
aas
test
fcmovne
pop
orb
into
hlt
lea
mov
enter
mov
cmp
es
in
scas
les
adc
dec
lret
mov
aaa
jbe
mov
fdivrl
cmc
lods
icebp
inc
mov
cli
fisubrl
jbe
mov
sub
test
xor
xchg
imul
pusha
push
shlb
aas
push
pop
pop
mov
lock
jl
xchg
push
dec
les
jle
and
orl
mov
test
push
mov
ljmp
xchg
mov
pop
sbb
mov
sub
xor
ds
cmp
push
or
jbe
inc
lret
add
nop
adc
pop
enter
orl
mov
cld
movsl
fidivl
cmp
movsb
xchg
and
sti
repnz
lret
sbb
dec
int
movsl
pushf
daa
dec
sub
lods
loop
mov
mov
cli
push
fistl
push
cmpsl
cwtl
sub
lods
jne
scas
gs
repnz
pop
lret
bound
sub
jbe
ret
fdivrp
popf
cmpsl
and
xchg
aad
sbb
mov
sub
fs
fbstp
mov
inc
iret
add
mov
push
jl
dec
sub
ljmp
notl
aaa
and
sbb
lock
jge
ss
push
or
cwtl
and
sub
inc
sbb
fiaddl
out
imul
hlt
ja
fcompl
cs
push
mov
mov
dec
cltd
adc
mov
ljmp
ret
push
mov
lret
mov
jno
dec
decb
pop
pusha
je
xor
push
sbb
cmpsl
scas
jle
cs
outsl
inc
popa
or
mov
jb
dec
mov
es
hlt
xchg
pop
xor
int3
xchg
mov
enter
int3
aad
lods
add
mov
out
lock
xorl
test
dec
dec
in
lcall
adc
pop
inc
adcl
pop
aam
ds
pusha
scas
jns
sub
xchg
shrb
jno
lods
xorb
add
ja
or
pop
jnp
and
or
rol
push
mov
or
pop
inc
cmp
cmp
fisttpl
mov
dec
jmp
sti
mov
out
lcall
sbbl
xchg
test
scas
jb
fnstsw
stos
ret
stc
sti
inc
fsubr
fdivrs
inc
cmp
mov
mov
nop
and
in
jecxz
test
sahf
and
mov
adc
lcall
cmpsb
add
stc
pop
dec
pop
mov
cmp
xchg
inc
dec
cmp
cmp
jp
inc
cld
outsb
mov
xor
popf
adc
out
das
push
push
loopew
inc
mov
mov
leave
mov
sbb
sbb
shr
lock
cmp
notl
push
cmc
gs
push
sti
xchg
cmpsb
imul
mov
jnp
loop
es
adc
stos
jmp
jns
cld
push
scas
and
push
sub
add
or
xorb
fwait
or
xchg
incl
add
mov
jae
jecxz
dec
aas
fbld
mov
cltd
ret
loop
mov
mov
and
in
pop
sbb
lcall
repnz
rorb
imul
shrl
test
in
test
push
xor
cmc
jp
scas
jl
ljmp
pop
pop
imul
dec
mov
in
lcall
inc
push
adc
orb
shlb
sub
mov
insb
ret
sub
xchg
mov
popf
gs
mov
and
xor
xor
imul
out
mov
jnp
out
push
rclb
test
movsb
repz
add
inc
push
in
into
mov
add
jnp
fnsave
jno
sub
inc
loop
lock
nop
sbb
mov
insb
int3
pusha
cld
andb
sbb
add
mov
lahf
int
dec
jne
pop
stc
shlb
in
dec
adc
mul
and
or
fcoms
pop
loope
xchg
push
imul
pop
cmc
dec
push
push
popa
push
sbb
call
test
idivb
xchg
std
or
jmp
push
cmc
mov
pusha
mov
xchg
jle
aas
jge
cmp
xchg
xchg
rcrl
xchg
add
js
mov
movsb
ljmp
inc
mov
rcrb
test
add
sbb
shrl
mov
sub
dec
or
mov
idivl
lea
adc
jge
dec
mov
shll
pusha
and
jmp
ror
inc
cmp
ds
jns
pop
scas
clc
idivb
dec
dec
sub
mov
hlt
shlb
andb
insb
mov
leave
outsb
adc
pusha
or
jge
out
pusha
xchg
outsl
dec
inc
subl
sahf
repz
add
pop
iret
jg
test
push
inc
jmp
mov
imul
lds
and
pop
and
add
adc
ljmp
jg
mov
in
fnsave
mov
xchg
inc
xor
fisubrl
and
lea
sub
xor
ljmp
add
js
shrl
outsb
inc
sub
faddl
pushf
jp
mov
cmpsb
mov
popf
jecxz
xchg
add
aas
jp
jns
adc
or
das
adc
sub
outsl
dec
and
cli
jle
or
clc
jbe
je
mov
push
movsb
add
leave
pop
clc
icebp
rcrb
and
jno
out
aas
pop
dec
inc
in
out
adc
mov
xlat
in
sbb
ret
xor
outsl
lcall
ds
enter
icebp
lods
stos
lahf
or
fcoml
test
ss
jge
sub
pop
push
or
add
bswap
outsb
pop
iret
dec
fisubl
push
dec
jecxz
iret
mov
xor
push
mov
lret
push
inc
dec
and
push
popa
imul
pop
cmpsb
movsl
mov
sahf
aam
xchg
fcoms
aad
xchg
push
in
imul
loopne
imul
sbb
pop
sbbl
loop
or
fstps
aad
adc
xor
jae
shl
cmp
push
les
popf
out
mov
xor
xchg
cmp
xor
int
pusha
cmc
xchg
or
xor
adc
loope
pusha
push
push
mov
mov
mov
pop
fisttpl
push
adc
inc
fldl
sbb
negl
xorl
pop
inc
push
ja
inc
push
mov
lret
mov
mov
mov
test
cmp
test
add
inc
dec
mov
pop
xchg
jnp
rcrb
repnz
js
lock
les
jbe
sarl
push
and
in
fsubl
ja
mov
movsb
mull
rcll
xor
mov
and
jne
ss
ret
ss
ret
sahf
loope
test
jmp
insb
pop
inc
dec
outsb
int3
imul
xor
test
jmp
fs
xor
push
test
jae
sbb
pop
popf
jge
je
repz
arpl
push
lret
inc
xchg
ds
cmpsl
adcb
cmp
fnstcw
and
movsl
mov
inc
adcl
enter
cmp
add
mov
xorb
int
rcl
add
jae
loopne
add
pop
and
mov
jbe
cmp
andl
adc
xor
mov
repz
mov
sti
loop
adc
out
push
stos
mov
loopne
stc
sub
jl
cmpsb
out
dec
jo
mov
rcll
adc
jge
scas
mov
jne
outsl
fcomps
add
ljmp
loopne
arpl
and
push
and
add
pop
sub
jge
lock
jnp
pop
aas
repnz
repnz
cmpsl
les
addr16
int
cwtl
jnp
jge
dec
or
pushf
dec
stos
leave
and
mov
fmulp
xor
pop
or
pop
jmp
fnstsw
rol
lock
les
inc
inc
xor
push
sbb
and
and
push
in
int3
cmp
pushf
pop
sbb
ljmp
int
or
xchg
in
jecxz
enter
stc
xor
popa
inc
mov
dec
int
sub
fwait
js
push
and
jmp
fs
std
jbe
jmp
or
xchg
mov
insb
lods
es
cmpsw
mull
xlat
or
mov
addl
or
andb
inc
lcall
jle
xor
mov
fldl2t
lods
fsts
pop
adc
jge
jecxz
int3
push
dec
enter
ljmp
push
jne
cmpsl
ss
dec
pushf
dec
xchg
lret
popa
and
div
xor
mov
ret
movsb
test
push
andb
pop
or
in
dec
jns
sti
sub
lods
jmp
and
push
jne
lahf
int3
and
jno
mov
jl
mov
mov
and
call
mov
push
mov
push
ret
lock
xor
add
adc
outsb
in
jb
arpl
cmpb
lods
xor
add
adc
push
call
fucomip
rorb
lahf
out
fidivl
cmpl
xlat
stos
push
push
add
pop
add
dec
dec
xchg
shlb
test
adc
mov
lock
daa
mov
nop
in
sahf
sub
pop
cmp
push
xchg
mov
jmp
inc
inc
jecxz
cs
fimull
mov
lea
push
mov
fwait
xor
push
and
ljmp
sahf
cmp
jae
mov
mov
push
pop
dec
push
dec
or
push
aas
jnp
out
jnp
push
xor
xchg
push
jbe
loopne
rolb
insb
pop
scas
stc
xor
aas
push
jge
pop
xchg
xor
adc
adc
push
mov
push
data16
mov
or
neg
loopne
dec
xchg
add
enter
cli
stos
xchg
gs
ret
adc
sbb
dec
mov
jb
sbb
ret
jmp
std
sbb
ficoms
es
sbb
aad
pop
dec
add
pop
ret
cmc
test
repz
stos
pop
lock
std
or
add
mov
add
push
cmp
cmp
pop
fsqrt
sub
mov
cmp
popl
es
add
cmp
cli
dec
insb
sub
and
pop
and
xchg
mov
jb
js
sbb
mov
ljmp
in
add
fnstcw
lods
pop
inc
xor
sarb
out
lcall
inc
pop
data16
jl
into
sbb
pop
scas
sub
and
cmp
push
fidivl
inc
wrmsr
mov
mov
xor
loopne
repz
jno,pn
insl
mov
call
es
push
adc
in
stos
cld
popa
je
imul
out
jbe
push
sahf
mov
data16
dec
xchg
shll
lret
popa
xchg
jo
test
in
ret
cmc
jle
stos
cmp
mov
dec
je
mov
xchg
fidivs
jle
addr16
mov
xlat
loopne
mov
dec
lret
pusha
mov
lcall
pop
stc
or
addr16
iret
mov
mov
or
movsb
xchg
fs
test
lahf
loop
mov
loop
push
pop
out
push
cs
or
pop
shrb
push
lahf
xor
inc
addb
clc
lret
cmp
jns
xchg
testb
mov
les
mov
and
loope
push
mov
inc
bound
mov
call
in
mov
and
or
inc
inc
push
sarb
cmp
mov
mov
fmull
dec
mov
nop
je
adc
loop
jne
push
shll
clc
push
mov
cmp
test
ds
sbb
add
fnstenv
out
repnz
scas
xor
rolb
cmpsl
mov
xchg
pop
repnz
pop
cmp
popa
ljmp
fisttpl
ret
mov
shlb
push
pusha
sub
jl
jge
adc
notb
jno
jbe
dec
in
cltd
rcrb
ds
mov
pop
lret
out
xchg
enter
sbb
pop
lahf
push
rcl
mov
loop
push
stc
xchg
scas
out
push
scas
cmpsb
push
scas
cmpsl
stos
inc
xchg
xchg
sbb
add
xor
adc
inc
cmp
mov
insl
leave
insb
aad
or
rcrb
imul
aas
add
sti
xor
sub
hlt
pop
not
xchg
aam
pop
pop
cs
sub
fsts
into
push
sbb
pushf
mov
rclb
pop
inc
mov
std
xchg
test
in
or
xchg
fistpll
adc
popl
sbb
scas
push
add
cmp
pop
push
xor
add
aaa
cmpb
in
jle
data16
inc
fcomps
insb
pop
add
outsb
hlt
outsl
scas
fnstsw
lret
pop
in
or
cs
pop
mov
sub
cld
nop
sub
divl
sub
push
xorl
scas
or
dec
loopne
xor
lahf
fwait
je
aas
sbb
push
sbb
mov
lret
add
inc
pop
jb
mov
fisubs
cli
mov
or
rol
loopne
stc
pop
incl
sub
int
call
clc
push
lahf
mov
scas
sbb
andb
out
jae
sbb
mov
fdiv
xchg
pop
or
dec
repz
cli
fistpl
iret
add
pusha
adc
or
jne
and
lea
fnstcw
push
sarb
xor
sub
shrb
sarb
pop
enter
cmp
mov
push
xchg
andl
dec
ret
andb
in
fistps
jmp
loop
in
inc
ret
sub
in
adc
push
jbe
mov
bound
mov
lret
jnp
add
mov
out
arpl
outsl
push
xor
dec
js
add
loopne
and
test
lods
sbb
and
jmp
mov
insb
inc
xchg
sub
jmp
inc
pop
xchg
xor
adc
repnz
dec
jo
adc
add
mov
and
adc
jb
sbb
sub
into
push
dec
inc
xchg
cltd
pop
add
shlb
jge
add
out
pushf
sub
popf
pop
stos
lret
lcall
adc
rcr
pop
xor
mov
push
sbb
sbb
and
iret
loope
out
sub
pop
dec
pop
and
dec
cmp
call
pop
arpl
mov
mov
out
daa
sahf
in
les
cmp
mov
imul
dec
jb
push
js
mov
dec
fwait
push
into
push
shll
add
test
add
fs
daa
and
je
dec
jecxz
fadds
add
ss
enter
out
dec
push
and
jle
mov
inc
mov
in
sub
scas
sbb
mov
cmp
cmp
jb
jmp
inc
xchg
mov
push
adc
push
jne
adc
outsb
out
push
daa
loope
add
mov
pop
sbb
sbb
fwait
sahf
add
rol
mov
mov
pop
ds
mov
and
in
test
and
xchg
insb
sbb
loop
loopne
arpl
jb
mov
push
pop
jns
lds
das
daa
icebp
sub
fists
add
sbb
jp
clc
pop
outsb
inc
fwait
mov
inc
lcall
std
dec
or
mov
enter
or
pop
enter
mov
je
mov
mov
sbb
jo
push
clc
add
dec
fimull
jmp
movb
push
mov
cmpl
and
cwtl
dec
adc
sub
add
cmp
push
sbb
shlb
cltd
imul
sbb
push
bound
stc
sbb
in
mov
cmp
fldl
or
pop
xchg
int
or
xchg
mov
cs
gs
std
loope
lret
jl
xlat
js
fs
hlt
add
inc
insl
xchg
sub
cmp
add
jo
out
mov
xor
or
or
dec
adc
hlt
fidivrl
cs
les
inc
and
jp
fidivrs
stc
jge
ret
in
jp
fildll
push
push
cli
pop
mov
sahf
push
pop
xor
fs
leave
adcb
hlt
jns
sub
jle
mov
sub
mov
repnz
in
jne
fdivp
inc
xorl
or
ds
fwait
and
imul
aas
pop
fsubrl
push
or
mov
icebp
rolb
popf
mov
mov
push
out
imul
cmp
mov
test
int3
inc
sarl
jmp
leave
mov
adc
or
pop
xchg
out
outsl
xchg
lahf
mov
testb
mov
mov
sbb
call
shr
push
jg
data16
dec
mov
rolb
movsb
or
lahf
mov
test
adc
xchg
cld
out
inc
orl
push
cltd
fists
mov
mov
mov
pop
sbb
push
call
mov
int
adc
cmp
sbb
lcall
fucomp
shlb
inc
aam
or
sbb
xchg
js
repz
cmpsb
sbb
enter
pop
mov
mov
dec
ficompl
insb
mov
mov
fs
popa
xor
pushf
or
xchg
lock
sub
ror
lods
lcall
push
clc
push
add
and
out
hlt
sahf
fs
rcrl
jmp
cmp
mov
mov
pop
insl
loope
lret
cmpsb
fisttps
fstl
es
sbb
mov
repnz
pop
imul
mul
in
addr16
lods
dec
rcl
sub
fwait
pop
and
cld
rcl
ret
aaa
jb
addr16
mov
add
cs
push
and
mov
lods
bound
inc
mov
dec
in
sti
popa
or
loop
cmpsb
pop
dec
data16
jb
pop
stos
loopne
rclb
and
lods
dec
in
mov
cmpsb
fstps
fsubs
cs
arpl
adc
sub
mov
mov
mov
jb
inc
mov
mov
push
sbb
imul
and
imul
dec
popa
insb
shlb
mov
jp
jns
out
mov
mov
movsb
int3
sbb
adcl
fcoms
pop
rcl
test
dec
ljmp
movb
movsl
call
mov
jp
repnz
jmp
fucomi
shlb
push
sbb
sarb
cmp
sbb
test
das
xor
enter
mov
cltd
add
mov
mov
lock
jle
adc
jbe
mov
cmpsl
pushl
loope
mov
into
cld
ret
pop
add
popf
std
pop
sbb
dec
inc
or
xlat
xchg
jmp
aad
leave
jae
lret
testb
punpcklwd
inc
pop
mov
outsl
pop
add
and
ss
mov
xor
push
inc
in
jbe
jo
imul
mov
rcl
and
mov
ss
cmp
xchg
mov
pop
in
pop
loopne
push
stc
imul
clc
dec
push
mov
pop
pop
mov
xchg
sti
fcom
cmpsb
mov
xor
sbb
add
scas
lods
push
scas
mov
jg
jb
addr16
mov
sahf
shrl
je
dec
aam
cmc
out
add
sarb
in
aas
dec
jmp
dec
int
sbb
adc
xchg
push
out
or
insb
lea
ret
stc
stc
push
inc
fisubrl
cmp
inc
push
adc
mov
sub
addb
cltd
jmp
bound
jns
shll
cwtl
adc
mov
sub
lods
push
jne
jnp
dec
rorb
mov
sahf
leave
sbb
outsb
ds
mov
mov
sbb
push
call
addr16
xchg
mov
pushl
pop
call
xchg
cltd
cmovnp
notb
int
dec
pop
and
sahf
nop
aaa
stos
xchg
jnp
xchg
in
or
test
mov
jno
push
jge
lds
pop
div
stos
xor
flds
sbb
add
aad
int3
or
inc
out
enter
xchg
cmpsl
out
fldt
pop
cmp
or
cmpsb
test
rcll
loopne
aaa
mov
test
fcmovne
test
mov
pop
shrl
in
icebp
addr16
cmp
pop
stos
insb
xor
jnp
test
jb
xchg
insb
xchg
xchg
inc
lea
aam
dec
andb
xchg
push
inc
dec
xchg
mov
outsb
or
lcall
xor
jne
cmp
dec
sub
xchg
sub
das
or
lock
lahf
cli
inc
sbb
or
es
test
scas
test
mov
lret
push
xor
sbb
fldenv
scas
cmpsl
sahf
addr16
ret
xchg
movsb
clc
in
pop
sbb
loope
mov
mov
add
and
ret
ret
notl
xor
outsb
cmp
xchg
cmp
ror
aam
mov
int3
popa
cld
jg
nop
pop
scas
sahf
aaa
out
ret
sub
pushl
icebp
mov
imul
dec
add
or
loopne
xchg
mov
lahf
cmp
sub
xor
jp
mov
adc
arpl
insb
jg
ret
es
pop
icebp
jp
rcr
pop
mov
mov
imul
repnz
insb
mov
sbb
sbb
mov
jns
jge
int3
push
jmp
dec
mov
push
xor
es
mov
in
xlat
aam
dec
mov
aaa
out
push
and
mov
test
mov
xor
inc
fdiv
arpl
andl
shl
pushf
imul
adc
inc
adc
movsb
out
testl
pop
mov
call
cmp
mov
inc
dec
popf
imull
adcb
loopne
popf
mov
xchg
test
test
sbb
jmp
or
out
mov
mov
lds
inc
adc
icebp
cmpsb
dec
jb
adc
lock
or
push
adc
or
or
aad
mov
arpl
es
adc
jp
jo
mov
hlt
jns
call
cltd
bound
push
jns
pop
or
fcomps
aam
movsb
mov
or
cli
xchg
in
push
mov
mov
lea
inc
inc
hlt
les
les
loopne
pop
or
es
jne
add
mov
inc
stos
addr16
cmpb
cld
push
loop
in
push
gs
call
scas
xchg
push
or
jae
gs
addr16
mov
xchg
shl
lea
sub
andl
shlb
daa
cmp
dec
pop
xlat
psubusw
fwait
jl
push
leave
les
cmp
ret
fnstenv
mov
inc
rcrb
addb
mov
sbbb
stos
push
mov
jg
daa
lcall
js
ds
sahf
cmp
das
pop
sub
and
sub
mov
inc
dec
xchg
add
inc
lahf
cmpsl
loop
cwtl
aad
mov
mov
push
jecxz
into
int3
inc
or
loope
sarb
into
lret
loopne
push
sub
mov
test
pushf
mov
es
push
notl
mov
insb
mov
add
shll
mov
dec
fxch
or
fisttpl
bound
stc
std
sbb
dec
cs
cld
xor
mov
mov
leave
fsubs
cmc
dec
dec
cmp
sub
fldl
bound
ret
pop
mov
shlb
gs
xor
into
pop
iret
sbb
pop
stos
mov
mov
push
loope
cmp
outsb
xchg
push
iret
cli
call
ficompl
dec
sbb
push
adc
mov
scas
nop
lock
adc
leave
cld
aas
xor
jae
xchg
dec
mov
jl
inc
rcll
bound
xchg
imul
push
cmp
mov
adc
jno
inc
iret
cli
inc
pop
fldl
sbb
jo
test
shll
mov
cwtl
clc
jle
xchg
ss
test
scas
xor
sub
and
pop
add
and
or
cmp
pusha
loope
sbb
into
pop
xlat
sub
pop
hlt
test
xchg
xchg
jl
cmpsl
xchg
sbb
inc
xor
dec
mov
enter
jno
sahf
fdiv
mov
test
movsb
jle
and
cs
jns,pn
pop
mov
adc
imul
std
jecxz
lods
sbb
das
out
pop
add
fxch
jb
popf
lds
fs
enter
fldcw
bnd
sub
loopne
jg
insb
ret
or
mov
daa
jae
push
cs
mov
inc
mov
jae
ficompl
in
jnp
lcall
outsl
shll
mov
sub
lock
and
ret
mov
mov
adc
ja
push
add
lcall
pop
jg
jp
orl
adc
jl
xchg
jns
push
fnsave
inc
popa
ljmp
popa
clc
sub
int3
inc
pop
int3
cs
outsb
adcl
pushf
sbb
add
gs
push
outsb
dec
dec
sbb
cmc
popa
repz
and
pop
mov
popf
dec
popf
sahf
sbb
push
xchg
dec
das
bound
push
arpl
or
and
cli
push
rcrb
add
ds
and
lcall
and
lret
jge
jecxz
xchg
in
push
jb
sub
pushf
adc
repnz
push
cmp
pop
mov
movsl
push
push
pop
xor
adc
jb
test
icebp
mov
or
xor
shlb
and
and
push
xchg
imul
mov
out
xor
pop
add
aas
outsb
frstor
leave
imul
push
fmull
mov
fisubs
std
or
cmp
mov
aam
aad
fwait
adc
inc
mov
jge
je
in
adc
cmc
jle
aas
mov
mov
and
push
leave
test
push
add
mov
sbb
ja
fisubrl
mov
sbb
cmp
jg
stos
add
xchg
and
movb
push
mov
cmp
lods
call
push
inc
popw
cmp
mov
fcomps
pop
js
jo
add
fsub
stos
xchg
in
les
in
mov
dec
and
rorb
cld
push
mov
mov
pop
lock
cmp
push
xchg
test
jb
jp
or
cli
subl
loopne
out
inc
mov
in
outsb
call
movsb
pop
bnd
mov
sarl
ja
clc
out
pop
cmp
jecxz
ss
inc
xchg
xor
subb
cmp
aam
adcb
pop
fbld
pop
pop
dec
push
sub
mov
fisubs
cmp
cmovo
hlt
lret
into
xchg
mov
scas
mov
xchg
or
adc
xorb
daa
mov
xor
xchg
stc
nop
test
fmuls
push
scas
aam
jg
sub
cmp
lcall
push
or
shll
inc
pop
scas
popf
cmp
movsl
dec
fnop
xorl
nop
or
arpl
pusha
jb
cmp
test
scas
push
mov
push
push
outsl
insb
or
cmp
dec
popl
mov
test
aaa
push
mov
adc
jle
fisttpl
mov
sbb
jae
push
adc
and
stos
sub
es
adc
gs
out
lret
mov
insb
mov
jo
loope
mov
roll
push
inc
dec
loope
sub
cmpsl
push
push
call
jecxz
int3
xlat
pop
mov
das
imul
loop
in
addr16
or
cmc
sub
xlat
sub
pusha
ret
lods
dec
or
aam
and
push
lret
sbb
popf
mov
fs
mov
cmp
jmp
xchg
fnstenv
scas
and
pop
dec
test
mov
das
or
cmc
push
hlt
mov
mov
jo
and
mov
or
jb
shl
jns
test
arpl
inc
mov
and
sub
in
fldl
lods
jl
leave
cmp
xchg
call
or
push
and
push
fcomps
push
jae
out
pop
scas
fcoms
rolb
gs
mov
mov
stos
clc
inc
mull
testl
in
js
xor
ret
stc
inc
int
loopne
or
push
xchg
iret
pop
dec
push
xor
and
jg
xor
popa
xchg
push
cmp
mov
je
aaa
mov
cld
scas
mov
adcb
test
pop
loope
hlt
scas
loopne
addr16
mov
lea
cmp
mov
sub
je
in
js
mov
sbb
push
push
scas
js
jne
in
add
jmp
daa
lods
cmc
mov
punpckhdq
dec
roll
push
jnp
sub
ficoms
or
mov
shll
les
sbb
aad
adc
dec
inc
inc
xchg
lahf
jmp
sti
push
pusha
adc
jle
cs
or
cmc
jbe
int3
es
jmp
push
js
iret
sbb
pop
lods
call
jne
clc
lret
in
mov
xchg
push
xor
mov
xchg
xor
pop
cmpsb
mov
jns
loope
or
std
dec
xchg
jl
clc
cmp
sub
inc
jle
fstpt
test
mov
xor
ljmp
mov
fs
int
add
popf
test
insb
mov
sub
push
sub
and
sbb
loopne
fidivrs
repnz
jecxz
fwait
mov
pop
mov
inc
xor
xchg
adc
mov
mov
xchg
and
fistpll
and
xchg
jp
addr16
mov
nop
mov
xchg
push
pop
fstl
add
xor
push
cmp
pop
test
add
inc
jecxz
pusha
mov
xor
fildl
aam
loope
pop
mov
mov
shr
cltd
pop
lcall
flds
pusha
imul
dec
fidivs
rdmsr
xchg
dec
icebp
xor
je
in
dec
andb
shlb
fcomps
cltd
jae
fs
cli
hlt
ficomps
test
xor
movsb
pop
sbb
pop
xchg
cwtl
mov
jmp
aaa
rcll
jae
adc
lods
imull
dec
gs
das
mov
lods
lea
sbb
fs
pop
rcr
jge
in
mov
test
addr16
scas
les
pop
and
jecxz
jge
and
push
les
aas
fsts
jmp
ljmp
push
subb
ja
sbb
mov
cmp
shlb
inc
or
mov
test
add
xor
push
xchg
adc
loop
ss
loopne
jns
pop
mov
push
adc
inc
pop
jmp
or
sarl
bound
ljmp
negb
pop
jge,pn
cmp
push
inc
lds
leave
aad
stos
sarl
lods
mov
jnp
fwait
loopne
xor
inc
fstp
mov
dec
add
jns
mov
pop
and
cs
add
in
adc
insl
sbb
mov
enter
xchg
pop
jae
fnstsw
sbb
pop
cmp
scas
cmc
cmp
mov
sbb
or
dec
cmpsl
adc
es
or
cmp
mov
xor
fs
bound
cmc
sbb
xor
dec
jge
rclb
cwtl
arpl
sub
aam
in
ja
outsb
mov
xlat
shrl
mov
fld
into
adc
adc
or
idiv
mov
xor
xor
loopne
xor
insl
push
push
fs
xchg
pushf
outsl
int
js
and
jb
cmp
jmp
pop
pushf
push
mov
fidivrs
es
out
lock
xlat
mov
sahf
sbb
ds
push
sbb
shr
loopne
clc
jb
lret
imulb
imul
jecxz
xor
je
dec
nop
pop
test
lock
dec
lds
in
pop
bound
xor
or
adc
lahf
cld
jb
aad
mov
xchg
jmp
pushw
dec
xor
loopne
jp
or
filds
jno
cmp
sarb
cmc
mov
and
fidivs
js
repz
sbb
enter
adc
or
xorb
nop
dec
dec
lahf
pop
cmpsb
cmp
not
ljmp
fisttps
and
leave
out
hlt
out
adc
vcvtdq2ps
cmp
dec
and
jp
out
je
cmp
nop
or
mov
cmpsb
sub
xchg
push
shrl
jbe
pop
mov
std
pop
mov
loopne
aad
fmulp
lea
sbb
fistl
add
jne
xchg
or
cmp
int3
cmp
in
aas
or
lea
mul
aam
addl
adc
and
test
clc
sarb
add
test
rcl
fs
bound
mov
movsb
test
mov
jne
cmc
pop
inc
stos
mov
stos
cmpsl
in
and
pop
adc
call
cmpsl
cmp
loope
jge
sbb
daa
comiss
mov
add
jne
xchg
mov
sub
dec
push
push
sub
xor
xlat
int
loope,pt
nop
fisubrl
insl
push
scas
jnp
sbb
sub
jle
dec
imul
out
pop
xchg
jmp
shr
arpl
iret
scas
shrb
or
int
pop
dec
ss
aam
xor
xor
pusha
in
mov
cld
movsb
test
mov
aad
cmp
pop
subb
dec
push
mov
xchg
fcmovbe
sbb
adc
lea
cld
mov
or
stos
and
mov
scas
cltd
nop
jns
lahf
adc
mov
mov
ljmp
mov
and
fs
cmp
ljmp
mov
hlt
jnp
loope
xchg
adc
fwait
insl
aad
daa
jnp
jg
adc
jl
pop
loop
push
cltd
sub
xor
dec
adc
cmp
jg
dec
xor
xor
je
inc
incb
lock
cmpsb
mov
in
fs
aad
inc
inc
and
ljmp
loop
lret
mov
jb
scas
mov
cld
xor
loop
das
stos
lods
fs
cmp
pop
pop
scas
testb
int3
pop
inc
adc
lods
xchg
cmp
dec
inc
dec
sub
jne
cmp
cmp
into
scas
ja
mov
mov
fucom
jnp
gs
push
jnp
ret
int
lcall
and
jno
mov
pop
aam
aaa
cmp
mov
cmp
js
test
dec
adc
add
sub
movsl
mov
ret
je
adc
icebp
xor
jne
popf
mov
test
lods
mov
adc
xchg
fdivrl
flds
out
dec
call
inc
enter
xchg
adc
in
xorb
loop
xchg
enter
and
add
add
scas
push
ss
shl
sub
int
pushf
out
mov
xchg
inc
adc
scas
jp
push
xor
rol
sbb
and
lods
pop
ja
push
jp
das
in
clc
xor
dec
sub
sbb
subb
bound
xor
jbe
lret
and
gs
fldcw
ljmp
adc
insb
pop
lds
dec
inc
enter
enter
je
cmpb
mov
in
mov
mov
push
js
sbb
adc
ja
push
outsl
sub
aaa
xor
add
test
mov
jne
mov
and
mov
aad
jl
sbb
es
cmp
sub
test
mov
aad
push
fistpl
rorl
inc
fidivs
je
dec
notb
mov
movsl
adc
enter
aaa
push
insl
arpl
insb
push
sub
mov
lret
enter
mov
sub
or
or
cld
notl
cmp
in
xchg
mov
int3
leave
nop
add
rclb
jne
dec
pop
pop
push
and
fstl
fadds
xchg
mov
pop
popa
lahf
dec
or
mov
cmpsl
pushl
shll
outsl
gs
stc
push
push
int3
jnp
test
lret
pop
cmp
inc
add
mov
pusha
pop
xlat
aad
ljmp
jg
idivl
inc
xchg
iret
sbb
mov
ret
mov
pop
sbb
and
xchg
andl
mov
xlat
in
daa
xchg
pop
test
out
push
push
ss
mov
sub
cwtl
dec
call
cld
mov
lcall
add
or
adc
popf
and
iret
inc
xor
xor
jmp
movsb
xchg
xchg
inc
dec
sub
and
push
dec
adc
pop
cmp
shll
xor
inc
push
mov
sub
jne
fbstp
in
call
hlt
mov
pop
add
sub
stos
pop
or
sti
aaa
shlb
cmp
movsl
shlb
mov
push
test
xor
in
mov
jb
cmp
and
mov
lea
sbbb
nop
jp
nop
and
jle
fbstp
js
out
in
and
ret
pushf
sahf
out
lea
jl
mov
test
hlt
push
movsb
adc
sub
or
cmpsb
call
dec
sub
mov
xchg
xor
int
leave
scas
jae
fwait
movsl
out
cmpsb
sbb
cmp
mov
in
scas
push
and
or
les
add
sbb
add
outsb
mov
or
aaa
iret
mov
stos
inc
addr16
sub
rcrb
mov
std
popa
inc
and
jmp
hlt
inc
test
outsl
int3
adcl
sub
pop
fwait
dec
xor
pop
jmp
mov
push
push
inc
jl
out
jl
lret
rcrl
pop
mov
jge
jae
and
or
call
xchg
inc
dec
mov
xlat
fcomps
cwtl
xchg
shrl
cli
or
push
inc
mov
dec
lret
in
aas
jbe
rcl
popa
adcl
cmc
in
divb
movl
or
xchg
pop
mov
adc
sti
iret
in
lods
lcall
dec
dec
and
push
xchg
hlt
sbb
mov
loope
fistpl
into
jle
mov
sbb
test
push
fwait
xor
adc
jns
insb
jbe
cwtl
cmp
cmp
jecxz
add
int
popf
dec
pop
cmp
sub
sbb
xlat
lret
sarl
ja
shrb
dec
jecxz
mov
fistpl
pop
jmp
pusha
scas
mov
gs
sbb
push
test
enter
dec
pushl
popa
adc
or
pop
enter
cmp
loop
jecxz
sbb
cmp
cld
or
imul
out
aad
in
mov
cmpsb
xchg
addr16
in
fsts
jns
push
add
outsb
outsb
lret
mov
xor
out
mov
scas
popa
imul
sub
dec
outsb
stc
hlt
pusha
dec
cmp
xchg
sub
les
push
sbb
lods
mov
mov
sbb
push
jns
xor
or
mov
pushf
xor
je
fcomps
sbb
out
aas
mov
aas
mov
stos
sbb
mov
mov
out
js
push
lock
stc
dec
push
test
dec
and
leave
or
sarb
scas
mov
test
push
mov
ljmp
int3
inc
xchg
stos
jmp
xchg
or
daa
std
pop
lds
xor
lods
fadd
add
repz
in
icebp
sbb
out
lret
out
pop
mov
xor
mov
repz
mov
sub
pushf
add
or
lea
xor
test
and
mov
push
mov
xchg
sbb
rcrl
pop
push
sbb
fnsave
cmp
pushf
shll
jns
pop
mov
sub
test
jne
out
fcomps
dec
fs
fs
adc
and
push
daa
icebp
clc
iret
inc
push
call
icebp
and
cwtl
imul
and
int3
cmp
outsl
ds
popf
sbb
out
xchg
enter
pop
inc
adcl
add
add
cmp
gs
dec
aaa
xchg
fstpt
ds
ja
fidivrl
xchg
fldt
fistpll
iret
cmpsl
inc
add
repnz
cld
sbb
loopne
lcall
cmp
or
add
mov
insb
dec
sub
push
enter
sbb
mov
pop
vmovd
xchg
inc
out
ljmp
mov
cmpsl
flds
lds
addr16
in
mov
enter
jmp
ficompl
mov
xor
pop
push
xor
gs
push
les
cwtl
jg
jmp
mov
adc
scas
ss
in
repz
fistps
push
pop
push
test
int3
lret
outsb
jbe
popf
scas
pop
je
inc
push
jmp
jg
xor
stc
aad
leave
xchg
fwait
xor
out
repz
flds
sub
stos
js
push
pop
cmp
jp
jg
movsl
int
inc
shrb
xchg
dec
xchg
testb
in
push
xor
stc
add
mov
pusha
cld
or
movsl
push
push
dec
or
decb
jae
xor
insl
std
jnp
outsb
xchg
out
out
jnp
test
push
push
leave
or
push
scas
imul
jo
pop
stos
inc
fidivrl
jnp
push
shll
mov
ss
xlat
xchg
jo
fidivrl
arpl
xchg
dec
popf
sbb
jnp
xchg
inc
add
xor
adcb
add
test
push
cmp
lods
xchg
clc
or
nop
and
test
cltd
loope
jmp
mov
lcall
inc
out
adc
mov
outsb
inc
lret
ds
or
jg
movsb
pop
into
xchg
xlat
cmpsb
jmp
shll
inc
test
add
xlat
or
movsb
and
sbb
fmull
aad
mov
jle
xor
push
cmc
xor
cli
inc
jmp
rcll
icebp
js
sub
iret
adc
popf
bound
dec
cmp
mov
xor
mov
fsubl
mov
push
int
jne
push
es
rolb
test
jnp
data16
jae
cmp
push
cmp
or
cmp
testb
lret
in
xor
scas
shrl
dec
sbb
popa
jecxz
data16
push
add
out
rorl
sub
and
jo
push
outsl
mov
mov
mov
push
rcr
loopne
mov
aad
push
adc
fs
mov
fstpl
or
mov
xchg
popf
gs
fstpt
inc
adc
jl
or
mov
xchg
jne
adc
jge
jo
lret
scas
stc
pushf
xchg
repnz
push
out
and
stc
gs
lret
or
adc
cmp
or
pop
push
jo
xor
shll
adcb
lods
shr
inc
mov
mov
fnsave
sbb
adc
movsb
adc
shrb
sub
or
addr16
stos
daa
sub
mov
cmp
pop
mov
jmp
cmpsb
arpl
bound
mov
and
scas
rolb
rcll
rcrl
pop
jmp
push
out
rclb
stos
ljmp
cmp
xchg
sub
imul
xlat
rcr
pop
es
ret
dec
fsubrl
repz
xchg
scas
sub
arpl
insl
pop
adc
jno
bound
sarb
mov
push
mov
dec
push
mov
push
ret
fidivrs
pop
cwtl
aas
aad
pop
jne
mov
stos
add
ljmp
jg
aad
popa
clc
test
daa
jno
mov
push
xor
stos
leave
cmc
imul
pop
gs
xchg
lds
jne
cmp
in
fwait
and
dec
pop
cmp
push
xchg
clc
loope
pop
pusha
je
and
jecxz
pop
arpl
sbb
dec
clc
inc
test
lret
out
xor
mov
push
cmpsb
daa
pop
cmp
insw
icebp
mov
out
and
adc
push
dec
xchg
sbb
cmc
das
cmp
popa
ds
dec
test
xchg
icebp
scas
dec
nop
sbb
mov
dec
push
rcr
mov
mov
rcrb
imul
jecxz
nop
aas
adc
push
dec
aam
xchg
std
mov
xchg
sbb
or
stos
test
repnz
rcrb
js
aaa
ljmp
lret
mov
dec
cltd
or
mov
cli
lock
arpl
jae
dec
lret
and
aam
jno
nop
sbb
popa
daa
pop
fs
jns
inc
xor
ds
cmp
push
xor
int
in
jno
stos
aad
push
jbe
cmc
andb
enter
or
test
fistpl
lahf
clc
mov
popf
sub
pop
pop
xchg
push
test
cmp
inc
pop
inc
insb
inc
mov
mov
scas
jmp
push
adc
and
lret
pusha
sbb
jae
das
xor
fadd
mov
ret
cmp
mov
hlt
dec
push
jbe
inc
mov
scas
xchg
xchg
cmpsb
and
aas
push
push
xorb
push
lret
test
mov
inc
sbb
jecxz
sbb
stc
and
movsl
lock
outsl
dec
sar
mov
xor
pop
rorb
adc
cmp
in
mov
cmp
icebp
in
cmp
es
push
or
and
push
mov
lret
icebp
enter
mov
xlat
mov
jecxz
fcoms
push
sahf
in
out
js
lea
or
sbbl
jl
movsl
or
fnsave
fsubp
mov
mov
test
insb
ficomps
aas
pop
sahf
push
mov
out
out
or
aaa
mov
inc
add
cmp
popa
cld
mov
pop
mov
sbb
in
add
xchg
push
fnstenv
lods
inc
cltd
sbb
pop
mov
ret
pop
mov
es
aas
int3
jne
or
pop
out
dec
cmpsl
adc
stos
push
push
inc
or
push
cmpl
inc
in
lods
xor
inc
or
loopne
adc
pop
jle
lods
pop
out
pop
orb
out
cmp
xchg
ja
lods
jmp
sub
popl
lea
cld
jnp
cmc
mov
imul
add
dec
push
loopne
movsl
xchg
ret
pop
popa
xchg
test
dec
adc
xchg
stos
leave
jmp
mov
popf
test
push
dec
aaa
sahf
or
xchg
outsb
insl
inc
in
mov
fldt
push
decl
popa
lods
adc
into
outsb
pusha
scas
mov
test
lods
fs
sub
xchg
jle
outsl
adc
ja
in
clc
push
jecxz
rcl
dec
aam
jp
jecxz
add
push
movsb
sti
cwtl
xchg
mov
or
mov
cmp
adc
jnp
stos
pop
and
dec
pop
fidivs
mov
jmp
roll
insb
popa
cld
daa
out
push
shlb
and
mov
call
adc
imul
das
std
adc
cmp
insl
or
insb
mov
fcomps
ror
fs
and
lds
fxch
cmpsb
adc
mov
lock
sub
out
inc
shll
pop
test
loop
jle
cmp
std
shll
int3
mov
jb
mov
test
out
int3
stos
leave
in
cs
bnd
jp
cltd
std
ljmp
popf
fs
sub
or
imul
stos
stos
dec
xchg
enter
sbb
outsl
lods
push
or
ret
movsb
xchg
mov
and
in
jl
jge
jle
cmpsb
pop
in
pop
ret
aas
fnstenv
psrlq
dec
sbb
fadds
and
outsl
cmc
jg
neg
pop
imul
aad
xlat
add
xor
push
mov
sti
ret
mov
fwait
sub
scas
push
cld
and
push
lods
aad
out
repnz
lret
jg
enter
fistps
call
push
shll
inc
sub
mov
shll
push
movsl
add
insb
cli
in
divb
inc
cmpl
popf
jmp
pop
dec
divl
mov
cmp
outsb
jno
jo
jle
in
insl
mov
lea
cmpl
lods
mov
or
inc
sbb
sahf
and
xchg
push
pop
fsubrs
mov
add
xchg
bnd
mov
mov
cmp
leave
push
out
mov
repnz
scas
inc
in
lahf
push
lock
imul
cmp
add
xchg
ja
xor
add
shlb
sbb
nop
call
fucomip
push
or
imul
or
lret
sub
jno
test
test
adc
pusha
xor
cmpsl
lcall
mov
mov
mov
inc
mov
mov
test
push
in
sbb
add
fld
lahf
sub
dec
clc
xchg
div
xor
push
sub
stos
mov
adc
xor
add
jp
gs
jl
pop
pop
div
das
ja
lds
not
cmp
test
xchg
cmp
jo
popa
popf
dec
repnz
pop
push
jae
mov
jo
test
inc
lock
and
or
test
cmp
or
add
pop
loope
or
pop
jae
or
xchg
lds
sub
aas
aas
idiv
andb
js
lea
mov
pop
aad
xchg
daa
push
testl
cmpsl
mov
adc
pop
mov
mov
popa
mov
inc
inc
sub
jmp
add
inc
sti
ds
cld
in
ficompl
jns
inc
jecxz
jmp
mov
in
leave
lods
push
push
shlb
ret
xor
mov
jp
cmp
adc
repz
pusha
xchg
adc
addl
gs
imul
subb
pop
mov
mov
or
cmc
fdivrp
add
add
aas
and
sub
pusha
test
jg
mov
pop
xchg
inc
add
xchg
xor
pop
lods
mov
test
pop
fisttpll
gs
mov
sbb
mov
lretw
jmp
insb
std
lcall
xchg
push
mov
and
push
sub
gs
sub
loope
sar
adc
lret
xor
cmc
mov
jbe
hlt
add
insl
mov
fdivrs
pop
mov
adc
notl
shr
jmp
fstpl
cmpsl
jne
pop
jbe
add
incl
sti
xchg
and
repz
jno
in
xor
dec
stos
cmc
xchg
mov
sti
mov
jno
pushf
in
jge
pop
lcall
mov
pop
dec
in
pop
or
loopne
dec
push
ret
mov
cmp
or
cli
adc
nop
cli
xchg
fidivs
lret
lods
lcall
inc
in
fadd
jp
jp
icebp
sbb
push
sub
sbb
cmp
test
leave
jo
cmp
dec
cmp
in
roll
test
stc
sub
pop
mov
xchg
daa
stos
das
pop
xchg
or
dec
add
outsl
add
insl
out
insb
mov
mov
sbb
mov
mov
lea
xchg
aam
neg
sub
lods
sub
add
imul
stc
lods
xor
xchg
lcall
mov
jp
cwtl
xchg
mov
sar
sbbl
or
jle
movsb
out
iret
pusha
es
aas
pop
jae
daa
orb
mov
insl
mov
push
add
test
imul
rolb
push
cs
dec
leave
push
scas
sahf
movsl
and
jnp
push
cmpsl
pop
loope
jnp
inc
xchg
shl
daa
nop
jg
nop
jns
mov
sub
sahf
adcb
and
pop
test
adc
jl
dec
dec
in
out
push
fnstcw
lods
mov
dec
daa
push
insl
and
outsl
adc
aad
pop
mov
xchg
aad
jle
mov
xor
cmp
add
push
push
lret
or
push
loop
cmp
shlb
movsl
push
test
or
xchg
mov
cli
jns
jno
mov
mov
pop
call
mov
insl
jns
add
jge
loop
mov
loopne
arpl
mov
cmpb
gs
popa
stos
das
cmp
jmp
add
sti
adc
xor
xor
jl
mov
jmp
dec
adc
adc
mov
es
mov
movsb
cmp
mov
scas
out
fwait
mov
or
js
bound
inc
push
jl
movsl
outsb
mov
ficoml
in
clc
sbb
out
and
cmc
movups
movsl
stos
adc
push
outsb
fs
xor
pop
cmc
loope
cmp
lcall
push
cld
movsl
xchg
mov
inc
cs
push
dec
addr16
mov
mov
mov
sbb
in
leave
push
xorb
mov
cmp
test
cmp
push
and
stc
and
ret
sbb
out
flds
pop
dec
push
cmp
xchg
int
push
adc
ljmp
push
adcb
and
sbb
jmp
leave
lahf
dec
movsl
xchg
cmp
ja
and
repnz
movsb
add
ficoml
mov
test
rcr
pop
add
mov
jge
out
jge
inc
in
xchg
sbb
xchg
lcall
adc
mov
ret
fcoml
jne
dec
and
daa
inc
das
sarb
insl
lock
jb
inc
sub
or
negl
dec
and
cmp
inc
daa
fwait
mov
scas
cmp
scas
push
les
add
inc
dec
push
xchg
xchg
into
ja
xchg
or
aad
sub
sub
add
xor
mov
test
pop
mov
mov
xorb
xchg
loopne
sbb
aam
lret
sbb
loop
mov
sbb
push
add
xchg
or
mov
and
decb
pop
xchg
jo
test
and
xor
sub
hlt
outsl
xchg
sub
aad
es
scas
inc
push
notb
xchg
je
xchg
filds
fcoml
insb
gs
hlt
cli
and
mov
cmp
xor
cli
push
and
jbe
ret
jmp
add
mov
push
xor
push
js
jg
add
dec
decl
adc
or
xor
mov
or
fs
jp
sub
int
push
nop
mov
imul
test
mov
aas
add
push
mov
and
mov
cmp
push
adc
jmp
push
push
dec
inc
inc
pop
mov
xorl
and
rorb
mov
insb
popa
cmc
jp
cmp
test
push
push
pop
jle
imul
pop
pop
sbbl
test
and
mov
in
sbb
inc
pop
jae
lods
dec
clc
jbe
cmp
mov
mov
stos
xor
pop
mov
sbb
fldl
xchg
fdivs
loopne
clc
and
push
fisttpl
test
roll
fisttps
and
outsb
and
adc
or
hlt
jae
imul
fldenv
hlt
std
mov
inc
xor
or
les
cmpl
pushf
adc
inc
call
mov
mov
pop
inc
lock
sub
fucomip
jle
and
insb
mov
mov
movsb
add
sub
push
scas
adc
mov
add
test
xchg
stos
stos
adc
xor
push
mulb
dec
leave
cmpsb
adc
push
test
adc
sbb
cltd
test
testb
cli
test
es
icebp
mov
addb
loop
and
ljmp
add
mov
push
test
mov
mov
mov
cmp
out
mov
sub
movsl
pop
and
add
lea
xor
dec
stos
iret
scas
popf
out
aam
add
sbbl
mov
sbb
mov
stos
iret
lcall
sub
mov
xor
mov
sub
mov
incb
sbb
xor
lret
mov
ret
sbb
cwtl
test
or
xor
mov
jle
leave
outsb
pop
xor
fcoms
shll
lahf
mov
es
mov
imul
pop
hlt
push
xchg
loope
sbb
out
outsl
cmp
mov
fs
push
int3
loope
jmp
adc
cmpsl
push
and
push
dec
pop
arpl
xchg
movsl
pop
int
pushf
gs
ljmp
or
icebp
stos
mov
sbb
pushf
mov
mov
xor
fsubr
hlt
stc
leave
faddl
inc
sub
push
xor
dec
xchg
pop
inc
popa
push
outsb
pushf
mov
mov
pop
fsubs
cld
mov
and
rcrb
adc
mov
test
bound
inc
cwtl
mov
mov
pop
int
lea
imul
dec
in
xchg
mov
sbb
cmp
adc
xor
or
cmp
push
jmp
lahf
out
sahf
cmp
leave
cmpsb
mov
cmp
in
dec
mull
repnz
test
in
mov
cmpsb
ljmp
inc
sti
mov
das
mov
xchg
or
pop
cmp
sbbb
or
push
or
jnp
xchg
sub
mov
jb
mov
cmp
fcmovbe
adc
xchg
dec
pop
xor
repz
sbb
pop
outsb
dec
mov
stos
cmp
cmpsb
in
mov
iret
shlb
cltd
test
mov
add
aam
repnz
mov
lods
push
popa
mov
sub
cmp
movsl
add
xor
sbb
mov
scas
repz
insl
sub
and
xlat
imul
shll
pushl
dec
add
inc
inc
xchg
dec
adc
les
jmp
gs
test
out
repz
or
ja
inc
mov
xor
dec
mov
sbb
or
loop
in
js
sbb
adc
mov
in
dec
inc
das
je
cld
sbb
int
fwait
cwtl
mov
jbe
call
mov
cli
mov
sbb
pop
sbb
mov
jle
shlb
ljmp
cmpsl
adc
cmp
inc
ja
jne
fisubrl
xor
lret
scas
imul
mov
push
add
popf
push
ret
dec
popa
mov
lock
mov
cmpb
mov
or
nop
pop
cmp
lods
lahf
lcall
push
cmp
and
loop
sbb
sbb
cmc
scas
adc
out
out
push
clc
in
outsb
mov
mov
push
and
push
and
sub
sub
xchg
xchg
orl
mov
adc
out
xchg
out
jb
cmp
and
int
out
push
dec
xor
popa
lcall
ljmp
mov
mov
inc
pop
in
push
outsl
out
sbb
inc
cmpsl
push
je
jb
cmpsl
push
pop
push
addl
out
int
sti
xor
xor
pop
push
pop
mov
js
inc
push
push
mov
add
jp
in
mov
pop
aam
jg
cmc
xchg
ss
popf
mov
clc
sub
or
sbb
cmpsb
dec
ror
dec
insb
jl
test
mov
xor
das
or
jnp
and
mov
pop
icebp
push
nop
inc
mov
out
outsl
ret
pop
call
or
push
hlt
add
jle
hlt
lret
bound
gs
mov
movsl
and
bound
lcall
sbb
cwtl
ret
outsl
outsb
pop
pop
imul
adc
sub
int3
pop
mov
sbb
aaa
testb
xchg
sbb
cmp
jbe
test
pusha
xor
cmp
lret
inc
shll
fcoml
hlt
ja
jle
mov
and
out
mov
ret
xor
push
sarb
pusha
mov
aas
cmp
mov
mov
aas
loope
pushf
push
or
repnz
fsubp
setnp
jge
or
scas
subl
arpl
fcomp
mov
loope
cmp
mov
jg
loopne
jo
lret
mov
inc
jmp
mov
out
clc
xchg
es
cld
ljmp
out
loop
mov
and
inc
and
sbb
add
add
or
and
cmpsb
and
xlat
lock
sub
test
subb
sti
and
test
lods
rcr
sahf
fwait
mov
inc
pop
adc
adc
cmpsl
and
mov
pushf
and
sub
pusha
out
pop
icebp
or
lods
sarb
test
mov
jae
fidivrl
dec
clc
mov
in
pop
lock
adc
test
aaa
fmuls
xchg
xchg
adc
xchg
fisttpll
mov
lock
mov
addl
repz
mov
jmp
xor
popf
mov
xor
ret
stc
jmp
insl
ds
stos
fldenv
sbb
jo
cmpsl
loopne
test
sub
adcb
sub
push
adc
lock
or
and
jbe
and
enter
jbe
pop
movsl
test
loope
shrb
mov
dec
shrl
pop
push
adc
push
jo
push
inc
lcall
and
and
cwtl
andb
mov
jo
push
imul
mov
pop
dec
fimuls
daa
cwtl
iret
cmp
push
xchg
lahf
out
fcomip
xor
test
or
cwtl
push
int3
xor
sahf
xor
call
inc
shlb
push
hlt
movlps
bound
dec
in
pusha
pop
jmp
ret
cltd
jle
ja
mov
jl
mov
fcmove
inc
push
or
fdiv
cwtl
and
in
gs
xchg
jb
xor
daa
lock
pop
push
ret
mov
movsb
and
xchg
pusha
sub
push
add
mov
pushf
jo
lds
or
mov
rol
dec
in
push
and
xor
movsb
push
dec
sbb
test
mov
sahf
test
pop
inc
aam
in
inc
aad
popa
jmp
rcrb
push
dec
arpl
or
out
xor
fxch
mov
xor
xchg
mov
push
mov
mov
jge
sub
cwtl
and
xlat
mov
mov
dec
or
test
pop
leave
cli
mov
push
mov
sbb
push
lods
xor
push
mov
jae
cmp
imul
js
int
dec
xor
aas
pop
jb
inc
fcoml
pop
inc
push
add
pop
ss
or
push
ss
outsb
insl
lret
push
or
idivl
fsubs
rcll
dec
scas
adc
arpl
rclb
ds
lcall
mov
dec
inc
gs
dec
dec
adc
pop
adc
mov
mov
cli
sub
and
jp
cmpsl
xchg
inc
in
mov
push
pop
insb
test
cmc
jae
sahf
jb
cld
mov
lea
mov
scas
loopne
dec
inc
shrl
lret
push
rcrb
shl
test
mov
shll
or
scas
push
sbb
stos
fwait
das
pop
data16
push
push
sub
cmp
mov
repnz
pop
jno
and
pusha
xor
loopne
sub
xchg
lea
inc
or
and
dec
ja
cmp
mov
add
inc
sbb
stc
pusha
cmpsb
adc
gs
rclb
add
lcall
inc
lds
inc
pop
jmp
push
dec
cmpsl
adc
adc
mov
dec
push
inc
pop
xchg
cmpsb
in
push
and
dec
xorl
jge
sarl
jmp
inc
shlb
sbb
aam
out
pop
mov
dec
pop
jp
js
fldl
out
lahf
jecxz
xchg
out
pushl
cltd
adc
fiadds
jmp
rolw
push
aas
xchg
sbb
mov
test
mov
in
call
pusha
pop
sbb
adc
clc
inc
inc
xchg
sbb
mov
cld
push
jecxz
xchg
cmp
cli
push
and
out
mov
dec
aam
push
pop
mov
push
jecxz
fs
mov
xchg
jne
cmp
aam
xor
sar
xchg
push
mov
sbb
test
lahf
shll
fidivl
fstpt
sub
ret
test
xchg
mov
shlb
jb
sbb
test
mov
sub
iret
sub
addr16
rcpps
or
jg
xchg
push
cmp
pushf
dec
out
cmp
xor
jmp
sub
mov
mov
nop
ja
jg
sbb
adc
push
push
lahf
mov
mov
enter
inc
icebp
lea
out
xor
int
dec
or
and
shrb
add
mov
pop
pop
in
xchg
popa
test
bound
repnz
icebp
xor
lahf
sbb
clc
mov
mov
dec
push
sti
sbb
mov
mov
inc
push
add
xchg
stc
add
mov
das
movsb
decl
shlb
jle
adc
aaa
cs
outsb
lret
push
mov
fimuls
xor
je
mov
stos
adc
lea
fnsave
xchg
sub
rcrb
mov
outsl
shll
pop
cltd
fs
shlb
adc
in
mov
xchg
jl
imul
or
xor
adc
ror
sbb
mov
cs
xchg
mov
int3
sub
repz
xor
jg
insl
jbe
daa
mov
xchg
outsl
and
sbb
push
push
adc
jmp
mov
das
out
mov
out
nop
cs
dec
mov
mov
sarl
popa
outsb
sub
sub
push
aas
test
movsb
or
push
push
push
ret
lret
cld
lock
leave
iret
roll
lret
xor
popf
and
call
in
adc
add
out
je
addr16
dec
dec
outsb
pop
shrl
adc
rcll
mov
jl
cmpsl
mov
xchg
or
lock
sub
push
jmp
xor
cld
sub
daa
xor
mov
mov
insl
xor
lahf
or
jecxz
fldenv
xor
arpl
sub
ljmp
xchg
pushf
mov
mov
cwtl
jnp
mov
iret
sbb
mov
pop
aad
lahf
push
add
stos
sub
mov
cmp
scas
lds
stos
in
mov
loopne
add
in
movsl
adc
pop
mov
mov
mov
xchg
add
arpl
push
fs
imul
mov
arpl
popf
das
cmp
adc
adc
push
cld
sbb
mov
mov
repz
ja
xor
jae
aaa
push
push
mov
inc
lock
popa
mov
xlat
add
or
mov
call
ds
shll
cmpsl
push
and
loop
mov
xor
fdivrs
jp
xor
shl
popf
stos
mov
xchg
or
insb
cmc
stc
xchg
test
push
shrb
sarl
leave
mov
push
jo
xor
mov
adc
iret
repz
aad
mov
adc
inc
pop
test
sub
gs
lret
and
scas
sbb
mov
mov
cmp
orl
cmp
outsb
stos
mov
repnz
lods
dec
lds
push
cmp
xor
push
push
jge
inc
mov
ret
test
andl
shl
mov
outsl
xor
lret
push
mov
pop
cmp
minps
out
cmpl
xorl
imul
adc
dec
and
sub
jp
leave
jb
lcall
or
push
or
jae
inc
lds
repz
in
popf
mov
add
fldcw
mov
vpermt2d
mov
mov
clc
add
jp
lods
iret
fcoms
jbe
cmpsb
jle
jbe
xor
cmpsl
je
fnstcw
fdivl
ljmp
lock
mov
sub
lds
pop
cmp
mov
add
repz
inc
or
inc
dec
das
mov
xchg
mov
pop
ljmp
push
push
test
or
sub
lcall
sbb
cmpsl
dec
cli
and
pushf
je
xchg
inc
stos
jg
cmp
call
test
pop
xchg
pop
int
push
sti
cmp
xchg
fwait
push
cwtl
nop
ds
stc
sbb
and
mov
mov
int
jno
add
shrb
push
jno,pn
push
rorl
inc
sbb
syscall
add
cmpsb
ljmp
or
jecxz
cmp
repnz
pop
mov
out
jge
mov
xchg
insl
inc
inc
pop
das
jnp
push
pop
subl
adc
ljmp
in
ds
out
das
ror
jecxz
or
push
push
test
loope
shll
movsb
adc
push
xchg
or
adc
push
popf
add
mov
push
stos
call
push
test
filds
mov
rcrb
mov
add
int3
xchg
and
adc
lock
fidivl
xor
aas
sub
and
push
mov
cwtl
push
mov
push
and
xorl
push
jg
push
sub
xor
xchg
xlat
add
xchg
scas
clc
sar
sub
mov
lea
add
sahf
sub
out
sbb
cmpsl
jb
popa
ret
ljmp
sbb
je
arpl
push
sub
dec
lods
cmpsl
xor
pusha
lods
loope
mov
jmp
adc
into
mov
xor
ljmp
roll
in
inc
pop
push
ss
and
xor
pop
hlt
inc
dec
adc
xchg
push
mov
jg
ljmp
xor
cmp
ret
cmp
scas
and
pop
jmp
jo
sbb
push
je
mov
shlb
dec
dec
movsl
xor
outsb
dec
cmp
or
int
inc
adc
jle
add
xchg
mov
scas
aas
cli
lahf
icebp
and
mov
pop
js
push
in
xor
push
enter
push
cs
mov
cs
arpl
xchg
mov
fnstsw
push
or
push
jle
xchg
int
mov
ret
push
sbb
fdivrs
jnp
adc
add
les
fsubr
aad
in
adc
ret
mov
dec
sti
cmpsb
loop
insl
jb
jae
mov
push
outsb
cltd
and
loop
aad
adc
shlb
inc
dec
pop
push
sbb
out
fldl
mov
arpl
add
push
insl
inc
pop
cmp
es
xor
lahf
inc
shr
jecxz
push
mov
sbb
out
sbb
sti
pop
call
sbb
mov
xchg
jl
or
push
dec
and
push
ss
pop
sti
lahf
sbb
cli
stos
out
xlat
div
loope
andb
addr16
sub
fildll
push
mov
xchg
xchg
scas
mov
cwtl
sub
pop
testl
iret
aas
xchg
push
jecxz
sub
xchg
es
jne
scas
fisttpl
push
out
sbb
push
stc
lock
cli
add
mov
jp
and
sub
mov
xor
xor
les
and
inc
xchg
popa
or
lret
xor
adc
xchg
push
nop
push
bound
hlt
adc
pop
hlt
adc
and
mov
jno
sbbb
jnp
stos
mov
mov
rcrb
and
xor
sbb
mov
add
push
sub
arpl
jge
pusha
cmp
addr16
rcl
dec
lock
sub
dec
push
lods
lods
repnz
mov
inc
gs
fwait
cmp
mov
loope
pushf
sti
mov
fcmovnbe
pop
xchg
in
xor
test
outsl
icebp
in
jae
out
popa
adc
fisubl
and
or
rcl
pop
ret
mov
das
dec
stos
or
arpl
mov
pop
cmpsb
xor
sbb
push
sbb
negl
pop
jb
int
gs
push
and
mov
xchg
jnp
into
stos
lock
fisttps
lods
lret
loop
and
xor
mov
xchg
pop
xchg
outsb
jmp
mov
jb
or
jae
lret
pop
nop
mov
in
cltd
andb
mov
inc
push
int
and
adc
xchg
push
mov
adc
daa
sub
pop
sub
or
mov
inc
fs
pop
sbb
in
aas
pop
adc
and
mov
rol
xchg
fcmovnu
xor
test
jae
cld
mov
iret
mov
subl
sahf
xlat
movsb
push
xchg
inc
bound
xchg
xlat
je
pop
lcall
jne
cmp
cmpsl
addr16
jb
mov
adc
and
xor
cltd
test
cmp
jp
lahf
jae
xchg
adc
dec
fs
xlat
stc
cmp
dec
lds
inc
das
adc
stos
inc
and
sub
ljmp
dec
mov
cmp
iret
testl
inc
jge
jecxz
cmp
sbb
jp
mov
push
fbld
sub
ja
mov
sub
dec
xor
rcr
mov
call
pop
js
and
mov
inc
lock
jno
hlt
cmp
cmp
cmp
jo
imull
inc
aam
add
js
out
xor
mov
mov
adc
dec
mov
mov
out
jmp
inc
inc
mov
mov
adc
pusha
or
push
inc
mov
jb
in
cs
inc
out
and
push
mov
inc
test
lds
pop
dec
ja
paddsb
stos
shrb
bound
pop
scas
dec
mov
rcrl
dec
adc
jp
ret
mov
inc
mov
test
jae
out
cmp
mov
fsts
inc
and
loop
and
test
cmp
inc
pop
or
test
cltd
outsb
out
sbb
and
clc
inc
dec
xchg
fldenv
aad
outsb
add
push
dec
rorb
sbb
insl
outsl
push
sub
push
cmp
jno
stc
pop
push
mov
in
xchg
sbb
mov
sbb
loop
and
pop
cmp
pop
imul
sbbl
sbb
mov
fcmove
lods
stc
dec
and
push
lahf
dec
sbb
fcoml
add
dec
sbb
add
pop
mov
fstpl
mov
cltd
mov
cmpsb
dec
leave
push
hlt
xchg
add
arpl
in
pop
sub
adc
aad
xchg
xchg
push
ret
sbb
inc
xor
lods
cmpsb
and
popf
pop
mov
sbb
jnp
cmc
xchg
jmp
popf
in
aas
sarl
sub
icebp
aas
shll
mov
aad
sub
insb
dec
sub
add
insb
push
shrb
lock
cld
mulb
sti
in
sarb
icebp
out
movsb
pusha
add
sahf
cmpsl
js
mov
add
adc
out
inc
mov
mov
add
imul
push
jns
sar
into
shlb
aad
daa
push
dec
or
in
inc
adc
psllq
rcr
jbe
in
movsb
fcomps
mov
fdivrs
xlat
fs
mov
inc
inc
mov
mov
movsb
push
push
daa
insl
shr
cmp
sbb
or
mov
lahf
hlt
in
test
or
cmp
mov
andl
fwait
add
mov
cmpsl
sti
xlat
filds
xchg
fxch
and
sbb
aas
in
adc
into
add
lock
dec
jo
imul
je
sub
xchg
jmp
xchg
test
iret
in
sub
lret
movsl
push
pushf
repnz
mov
outsl
gs
shlb
jnp
imul
jmp
or
lds
daa
dec
arpl
into
jge
je
sub
cmp
lds
in
adc
jp
fimull
gs
sub
shl
add
rorl
test
inc
addr16
and
cmp
inc
sub
je
and
cmc
pushl
pusha
scas
or
adcb
or
loop
cs
insl
repz
add
lcall
jnp
js
jo
xlat
imul
xor
movsl
xchg
lcall
cltd
cli
jb
or
adc
adc
push
lcall
cwtl
jno
fiadds
push
push
pop
and
repz
les
andb
xchg
in
xor
idivb
idiv
test
adc
dec
add
fmulp
cmpsb
xchg
paddd
push
lahf
fsubrs
aad
adc
xor
adc
shlb
mov
add
jb
sbb
incl
jo
or
leave
test
adc
cmp
jns
sarb
ror
mov
mov
inc
adc
dec
js
testl
push
repnz
lret
js
dec
jo
out
andl
mov
mov
mov
add
leave
cmc
add
ss
aas
addb
push
fisubrs
lahf
fs
movsb
cmpsb
cmp
sahf
jae
aaa
out
int
mov
imul
int3
jle
and
adc
sub
push
and
pop
jo
aad
dec
adc
and
inc
and
call
leave
add
mov
inc
in
cmp
or
into
aaa
inc
add
ret
cmc
in
jne
inc
sbb
inc
pop
pop
je
sahf
jl
aad
shll
mov
dec
inc
sub
adc
mov
enter
subl
mov
xchg
fdivrs
jns
cmp
in
jle
xor
adc
aaa
pop
adc
popa
mov
aad
cltd
insb
testb
xchg
pop
mov
test
and
out
stos
and
jge
popf
dec
daa
and
cmp
ss
fidivrl
cmp
dec
mov
and
pushf
jno
lds
push
loopne
mov
mov
or
mov
popa
xchg
xchg
jmp
add
loopne
bound
mov
lcall
mov
pop
mov
mov
popf
inc
negl
sbb
lock
hlt
fstps
inc
andl
fstpt
dec
hlt
sbb
xchg
jno
dec
aam
add
cmpsl
pop
pop
cwtl
loope
cmpl
lret
cld
mov
jl
into
sbb
adc
jae
mov
jns
sbb
dec
clc
sbbb
enter
sbb
out
mov
sub
pop
jae
sahf
sbb
inc
adc
xor
int
out
mov
leave
jp
aam
rep
loope
sub
rcll
jae
sbb
lret
add
jno
mov
aad
push
jns
mov
mov
sbb
xor
adcb
add
daa
pop
mov
movsb
or
in
mov
pop
xchg
fsubr
movsb
mov
call
jb
mov
and
fildl
aaa
sub
icebp
int3
adc
aad
fwait
mov
cmp
jbe
fsubrs
lock
mov
cmc
jns
sahf
jp
xor
mov
jg
insb
in
xchg
repnz
xorl
mov
rol
incl
and
push
push
shl
ja
repnz
in
icebp
jns
xor
push
cmp
jg
lret
pop
push
mov
sbb
mov
pushl
and
jbe
lret
out
das
js
insb
mov
pop
sub
insb
int3
fdivrs
adc
mov
jb
and
mov
mov
inc
mov
push
cmp
lods
and
call
test
imul
push
test
rcll
or
mov
addl
inc
fs
stc
cs
inc
add
mov
add
push
sbb
and
test
pop
int3
clc
cmp
xchg
xchg
dec
and
add
cmovge
adc
loope
stos
pop
js
xor
cmc
inc
fidivs
lods
int3
cli
out
scas
inc
je
movl
movsl
push
popf
aaa
cmp
sti
add
into
add
loopne
roll
fs
xchg
cmc
add
test
and
mov
mov
cmp
xchg
aad
push
mov
jbe
fisubs
mov
push
in
dec
push
pop
or
ss
stc
cld
daa
iret
mul
xlat
push
jge
sub
cmp
cltd
cwtl
ror
lock
mov
repnz
adc
jecxz
mov
xor
roll
sahf
and
int3
mov
inc
imul
sbb
inc
and
xchg
push
in
fistps
xchg
lods
push
out
xchg
rclb
pushf
insl
pop
lea
adcl
add
pop
inc
dec
xchg
lea
lock
push
sbb
mov
aad
ficomps
stos
cmp
xchg
stos
sbb
sti
sarl
int
inc
push
xor
ret
mov
in
int3
pop
jecxz
pop
divl
xor
ja
rcl
mov
pusha
cmp
pop
outsl
leave
stos
test
or
pop
push
cmp
ficoms
jle
call
aad
int
and
jge
ret
add
jl
jg
gs
lret
cmpsb
loope
adc
stc
ljmp
push
sbb
mov
cmp
sarb
fistl
stos
orb
insb
or
mov
stos
pop
fnstenv
ss
sarb
adc
data16
push
fsts
sub
xchg
or
ffree
js
jo
cmpsl
and
push
jo
push
inc
imul
jbe
aam
cltd
cmp
jle
loope
lret
shrl
sbb
xchg
xchg
int3
lret
scas
mov
pop
ret
jo
add
mov
or
adc
shll
mov
push
sbb
inc
and
jp
xor
fdivl
data16
mov
xor
lods
jp
push
hlt
xchg
fsts
xchg
in
pop
popl
cmpsl
add
dec
xchg
pusha
repz
test
cmp
and
out
lock
pushf
xchg
or
insb
adc
add
push
mov
jp
add
bswap
pminsw
and
push
dec
hlt
and
sbb
lcall
ret
add
scas
pusha
or
jl
mov
dec
xorl
icebp
clc
int3
and
shll
cs
add
xor
aam
lods
inc
enter
int
out
push
mov
cmp
mov
iret
pop
aam
add
mov
push
mov
xor
call
inc
movsb
ret
push
push
cmp
sti
loopne
mov
or
mov
xchg
xchg
stos
or
sub
dec
push
mov
cs
sbb
and
jmp
push
sahf
mov
cmp
leave
ret
jns
and
repz
leave
int
xor
or
je
enter
inc
add
lcall
in
jg
sbb
add
fwait
xor
pushf
sahf
imul
add
stos
ret
sub
hlt
xchg
add
add
lds
xchg
dec
adc
mov
lret
pop
pop
enter
pop
mov
notrack
and
scas
test
jo
lcall
cmp
pop
and
mov
fs
push
ss
adc
or
xor
push
scas
pop
mov
adc
jo
mov
sbb
xchg
jle
inc
mov
xchg
sub
cmp
and
fbld
mov
jge
mov
adc
fisubrl
add
push
insl
jl
data16
xor
jle
dec
cmp
test
gs
cli
cltd
sbb
enter
ljmp
insb
in
pushf
mov
push
fmuls
sub
cmp
in
mov
out
dec
mov
es
xchg
mov
lret
dec
sar
xchg
mov
lcall
or
je
cmp
lcall
xchg
mov
ret
js
mov
repz
lea
sbb
aaa
fcmovne
imul
push
int
fimuls
mov
pop
pop
dec
out
cld
xorb
mov
iret
ja
mov
out
cli
mov
mov
out
movsb
mov
imul
shrl
enter
sub
leave
dec
mov
xor
scas
ljmp
das
jno
adc
add
cmp
fldl
js
ret
shlb
cmp
push
add
call
sahf
loope
jbe
movsl
fsubr
test
sbbb
xchg
sbb
fwait
xchg
es
add
inc
jns
cs
push
dec
test
and
stos
cmc
lods
and
ret
jno
call
push
pop
or
push
mov
inc
jnp
enter
push
add
pop
cli
dec
xchg
jl
inc
ret
mov
roll
xchg
lret
dec
jbe
in
pop
hlt
mov
mov
push
pop
or
add
adc
sbb
jmp
or
dec
mov
gs
je
push
dec
mov
fcomps
xchg
jns
cwtl
mov
jecxz
inc
test
add
push
mov
mov
data16
faddl
cmp
xchg
cmp
ret
pusha
bound
push
and
mov
out
mov
addr16
call
mov
jno
nop
test
cmpsb
inc
add
and
sub
loop
divb
pop
jp
sub
stos
std
in
fwait
imul
mov
leave
test
lods
jae
in
jle
enter
andb
loop
pop
push
movsb
mov
mov
push
stos
lret
cmpsl
or
scas
sub
cmp
shlb
clc
pusha
xor
scas
stc
int3
movl
std
stc
push
fnstcw
nop
sbb
ljmpw
aam
adc
mov
pop
clts
adc
push
ret
add
test
test
test
rcrl
xchg
pusha
jo
cmp
sub
insl
push
mov
lea
lret
addb
scas
push
inc
push
or
scas
dec
fistpll
push
call
push
pushf
fisubl
mov
pop
rcrl
ss
pop
lds
test
test
test
mov
cmp
push
aad
jmp
mov
mov
cmp
out
fidivs
jnp
dec
mov
out
sbb
sbb
fsubl
or
mov
call
movsb
xor
jmp
or
jns
jg
dec
sbb
push
sbb
mov
push
pushw
leave
iret
push
push
jo
fisttpl
and
adc
pop
add
je
jns
lods
jmp
out
mov
jo
js
shlb
push
and
add
jp
adc
mov
pop
add
xchg
movsl
xorb
inc
jmp
mov
mov
pop
pop
fld
or
and
out
xchg
cmp
test
out
fs
and
scas
push
jl
xor
or
sub
xor
xor
arpl
test
or
inc
inc
xchg
jmp
adc
test
cli
sbb
addr16
or
cmpsb
dec
roll
mov
mov
mov
jle
add
xor
adc
jecxz
nop
pushf
out
insb
jmp
inc
movsl
movaps
mov
lods
mov
fldt
imul
add
shr
adc
adc
popf
add
fdivs
inc
adc
lods
pop
icebp
dec
imul
xor
jp
xchg
mov
jae
inc
add
cmpl
js
mov
mov
stc
sub
or
cli
lods
add
mov
sbb
call
loope
test
mov
clc
fisubrl
xor
adc
sub
sbb
xlat
jno
popf
xlat
cmp
scas
fistpll
dec
push
push
mov
adc
std
int3
lds
pop
pop
nop
cmpsb
les
shl
xchg
cmp
je
cmpsl
mov
push
aas
hlt
adcl
cmp
aaa
scas
out
inc
dec
rcr
shl
es
shll
dec
lcall
loop
inc
mov
fstl
cmp
add
hlt
push
cs
push
mov
ret
clc
pop
jmp
dec
jle
push
insl
jg
mov
mov
clc
cmp
mov
xchg
lea
cmp
pop
repnz
mov
aad
mov
xchg
fdivr
push
pop
xor
imul
mov
push
xchg
jge
jo
rclb
mov
mov
pop
and
jae
sub
fistpll
icebp
and
jg
jle
test
fsubs
jl
pop
cmp
fsubrp
daa
and
dec
fdivrs
ret
out
mov
fcmovbe
subb
sub
and
sarl
nop
sub
fs
fmull
pushf
fdivl
push
clc
dec
lret
popf
sbb
out
adc
cmp
aad
xor
lods
dec
int3
sub
pop
mov
jnp
pusha
push
add
add
xor
dec
rcll
lret
dec
gs
out
fs
xchg
dec
movsb
push
cwtl
mov
in
mov
mov
popa
cs
pop
icebp
push
les
stc
jns
sub
dec
bound
jecxz
push
sahf
mov
scas
jp
xchg
sub
das
in
icebp
jmp
xor
nop
sub
lea
mov
aas
mov
nop
adc
out
pop
or
mov
ljmp
in
jge
push
mov
pop
int
adc
jb
mov
inc
push
jnp
push
push
push
push
rcr
sbb
inc
das
and
outsb
in
cs
adc
dec
scas
xor
in
dec
repz
xchg
mov
cmp
ficoms
pusha
cs
fnstenv
dec
cmp
xchg
scas
scas
or
mov
test
data16
or
mov
xor
add
sub
mov
jg
push
addr16
shll
sbb
aad
dec
dec
mov
mov
or
sub
test
mov
in
inc
mov
push
pusha
inc
mov
dec
xor
imul
or
rcl
or
stc
cltd
jbe
shlb
push
repz
inc
add
xlat
movsl
shrd
adc
or
mov
add
mov
jmp
cs
or
jb
stc
lret
sub
cmp
push
inc
fs
imul
daa
ja
dec
and
jl
clc
xchg
cli
ffree
inc
shll
fdivrs
or
xor
and
xchg
pop
pop
repz
scas
sub
or
dec
lret
mov
xlat
sbb
enter
lods
push
cmp
xchg
dec
lods
test
rclb
lret
pushf
outsb
mov
push
xlat
stc
pop
sub
xor
cmc
daa
inc
sbb
popf
scas
fldenv
push
jmp
or
fsubp
push
mov
inc
xlat
out
mov
push
add
scas
nop
jg
mov
jl
xor
test
sbb
add
push
mov
mov
and
push
add
sub
pop
push
rorb
mov
ljmp
dec
sbb
mov
cmp
and
in
cmp
rorl
ror
pop
pop
outsb
push
sbb
imul
sbb
mov
sub
pop
ss
pop
mov
fsubs
pushf
add
xor
push
xor
sbb
rolb
nop
rol
or
int3
adc
xor
ds
xchg
pop
mov
inc
push
pop
test
and
bound
out
xchg
push
repnz
movsb
shrb
xchg
cld
shll
fs
insb
imul
sarl
mov
aas
cmpl
mov
ret
fmull
push
test
adc
push
arpl
addr16
push
test
push
add
mov
pusha
mov
int3
xor
add
mov
iret
mov
mov
sbb
and
hlt
pop
lcall
cmp
adc
cmpsb
xor
sbbb
push
hlt
popa
push
imul
xchg
daa
ja
ds
out
loop
mov
adc
ret
and
jp
mov
popa
xchg
das
push
dec
mov
pop
mov
dec
popf
xlat
xchg
mov
scas
dec
fs
jb
push
lock
or
lock
sbb
or
mov
insl
into
outsb
ljmp
add
pop
jns
sub
xchg
pop
pusha
into
push
ja
add
mov
push
test
inc
imul
repnz
rcl
mov
shll
pop
imul
push
mov
fs
out
push
lcall
push
or
fs
inc
push
cmc
add
outsl
icebp
loop
or
xchg
mov
in
pushf
idiv
xchg
mov
jmp
and
jb
mov
nop
movsb
popf
sbb
dec
fisubrs
jmp
mov
mov
add
pusha
mov
iret
scas
xlat
cltd
jle
jae
dec
adcl
mov
mov
mov
jns
stos
pushf
repz
mov
popa
lea
leave
jno
push
xchg
add
fildl
xor
inc
stc
dec
xchg
pop
pop
addr16
call
add
mov
test
pop
adc
sbb
jecxz
dec
in
fidivl
movsl
pop
push
push
arpl
jge
inc
sti
xchg
scas
jns
imull
add
movsb
loop
jmp
das
xor
dec
rclb
popf
int
loope
sbb
dec
sub
cmp
sub
mov
cmp
jecxz
cwtl
jns
add
sbbb
popa
mov
nop
add
ss
insl
xor
push
xor
test
adc
cmpsb
pop
pop
and
lahf
lahf
xchg
mov
xchg
lret
rcrl
es
push
sub
xor
pop
pop
fisubrs
addr16
push
lods
dec
mov
inc
in
mov
jge
cli
mov
xchg
ja
or
lahf
mov
cmp
popf
in
mov
aam
inc
mov
xor
cs
int
cmpsb
mov
ficoms
cmp
cmpl
std
insb
dec
fwait
lock
aam
mov
in
mov
rorb
pop
rclb
xchg
cld
jge
adc
lods
mov
scas
movhps
cmp
clc
stos
cmp
xchg
mov
lahf
scas
stc
sbb
pop
out
push
test
inc
popa
fisubs
and
ret
adc
push
ffree
lahf
inc
das
cmpl
add
icebp
sbb
lea
pushf
jle
clc
add
jmp
jnp
fisubl
sbb
in
fdiv
insl
push
push
inc
int
adc
and
inc
mov
leave
mov
sbb
bsf
adc
sub
test
arpl
mov
notl
fadds
mov
ljmp
or
out
lea
mov
fidivrs
enter
push
push
and
jg
je
add
lret
push
mov
sub
mov
jmp
and
xor
jmp
and
jno
mov
jae
sbb
pop
test
inc
arpl
pop
mov
or
in
jns
cmp
mov
stos
cmp
mov
mov
in
movsl
mov
jne
cmpsl
and
or
icebp
sbb
jl
shl
cmp
push
shrb
pop
mov
mov
dec
jne
jecxz
sti
and
adc
bound
cmp
fcmovnbe
add
repz
insb
xchg
adc
jmp
lods
xor
das
fs
add
imul
mov
jns
scas
jl
pop
or
mov
cmpsl
lds
pop
orl
test
pop
sub
push
fstps
pop
jl
sbb
xor
push
dec
mov
stos
xor
xchg
push
inc
stos
xlat
sbb
and
push
shrb
jg
test
out
les
cltd
lods
and
jo
test
test
sbb
xchg
rep
cld
sub
and
gs
push
scas
xchg
aam
add
mov
ret
and
mov
cld
rcr
inc
inc
popf
or
scas
dec
fbstp
xor
jno
lock
out
rorl
jo
and
or
pop
cmp
lods
dec
xor
cs
xor
xchg
lcall
add
sub
fsubrl
insl
add
xchg
jp
rcll
cwtl
jne
pop
and
adc
das
sub
cs
dec
leave
ret
or
sbb
xor
out
adc
js
or
js
inc
in
xchg
fstpl
jb
cmp
adc
push
pop
dec
dec
cmpb
add
pushf
pushf
sub
cwtl
mov
xor
push
fistpll
cli
test
pop
xchg
popf
call
cmpsl
push
and
dec
adc
lret
adc
adc
or
xor
cmp
cs
push
jne
stos
mov
out
into
in
stos
xchg
hlt
jae
cmp
and
cmpsb
in
aad
xchg
lss
sub
popf
imul
pushf
mov
aas
bnd
sahf
cmpsb
or
mov
test
fsub
fscale
or
xchg
and
inc
ss
xlat
cmp
aas
rorb
inc
mov
imul
dec
mov
outsb
insl
jg
lds
aam
arpl
jae
sbb
mov
sahf
dec
and
mov
and
or
test
jno
cmp
scas
push
loopne
and
xchg
pop
ret
sti
sarb
cwtl
jbe
push
fstps
inc
imul
sbb
pop
shlb
dec
fwait
lcall
pop
push
mov
or
sti
inc
fwait
sub
jnp
int3
into
xchg
mov
jns
les
inc
faddl
pop
hlt
jnp
cmpsb
mov
out
jmp
dec
or
sbb
repz
fidivs
add
out
bound
fadd
inc
int3
push
call
mov
lea
insb
mov
or
std
cmp
lcall
mov
mov
dec
jnp
arpl
dec
adc
je
loop
lea
in
insl
mov
mov
mov
pop
orl
imull
cmp
push
jle
inc
dec
stc
push
adc
daa
jne
mov
jae
jae
dec
pop
sbb
add
std
shl
mov
subb
daa
sub
mov
mov
in
int
xchg
and
xor
add
sti
in
jne
aas
xchg
jne
jno
nop
or
dec
mov
sbb
adc
int
hlt
cmp
mov
mov
push
push
adc
dec
ds
ja
gs
inc
dec
daa
push
or
xchg
cmp
std
dec
add
dec
jo
push
cmc
shlb
loope
push
test
adc
adc
lods
cmpsb
popa
test
repnz
cli
stos
jp
jmp
inc
sbbl
orl
je
push
scas
aas
xchg
and
pop
sti
xor
dec
fcompl
adc
shlb
scas
adc
shl
call
jl
jno
pop
pop
pop
pop
mov
push
xchg
sbbb
rorl
mov
cld
or
lret
mov
pushf
push
pop
clc
test
je
shll
repnz
icebp
jp
popl
jbe
push
ret
dec
stos
pop
sub
jmp
cmp
out
lret
lock
mov
and
cmpsl
shlb
dec
fcmovnu
add
dec
insb
sub
xchg
add
mov
and
fs
out
cld
leave
dec
mov
in
push
and
sub
nop
aad
jmp
cmp
adcl
insl
inc
mov
dec
sti
inc
js
test
xor
pop
xor
mov
cmp
jecxz
mov
gs
clc
outsb
outsl
add
mov
cmp
out
imul
out
in
dec
out
popf
push
mov
inc
out
dec
mov
xchg
cmp
pop
rorl
iret
lcall
lock
jle
addr16
ret
andl
add
xchg
cmpsl
sub
xchg
add
addr16
or
push
shrb
push
inc
inc
sub
pop
imul
add
insl
mov
mov
mov
or
and
inc
mov
out
and
push
and
iret
call
in
cmp
in
mov
loope
hlt
inc
ja
push
xchg
into
lods
cs
jno
inc
dec
lret
ss
ljmp
or
inc
or
stc
hlt
fwait
enter
jb
out
inc
and
pushf
or
and
fidivrs
bound
or
mov
jae
idivl
pop
lods
lret
jl
jle
sub
outsl
cwtl
arpl
push
lds
add
roll
ja
mov
loope
mov
jne
clc
je
fmul
mov
cltd
push
pushf
call
or
push
lcall
loop
jb
lods
jg
push
inc
movsl
ficomps
fmul
add
imul
pop
enter
lods
icebp
sub
icebp
mov
cmp
dec
jno
or
xor
fwait
setge
out
mov
aad
dec
dec
ret
jp
aas
insl
sub
in
lock
xchg
mov
cs
scas
fcomps
xlat
test
pop
cltd
push
and
jge
sbb
out
mov
in
xor
jmp
pop
cmp
aad
sub
pop
xor
pushf
ficompl
and
lock
cwtl
insl
or
push
sbb
jbe
rcl
jmp
insl
mov
xchg
ficoml
adc
into
or
jae
mov
test
jle
sbb
mov
das
pop
in
jg
ret
outsl
adc
popf
test
and
mov
xchg
hlt
or
push
push
ret
fdivp
nop
in
mov
pop
dec
jge
xor
adc
iret
pushf
icebp
sbb
pop
pop
dec
add
pop
pop
pop
andb
xchg
enter
cmp
mov
push
inc
xchg
jnp
pushf
pop
lahf
sti
pop
mov
popa
stc
sub
mov
add
fnsave
or
inc
clc
mov
jg
imul
mov
frstor
mov
adc
and
mov
pop
dec
movsl
ds
test
rcll
orb
icebp
pop
mov
sub
roll
xor
repz
imul
sub
in
pop
stos
dec
into
lret
repz
stos
cmp
mov
ficompl
mov
setne
add
ret
fiaddl
add
or
fildl
xor
push
sbb
and
mov
popa
jecxz
gs
cmp
xchg
popa
mov
testl
lahf
cmc
adc
push
popa
push
jno,pt
sbbl
cmp
add
push
dec
sbb
icebp
std
sub
es
push
testb
jmp
inc
out
push
lcall
push
lock
popa
out
jns
add
js
lea
and
inc
int3
mov
add
loop
into
cs
fcmovne
xchg
arpl
mov
jmp
dec
jno
test
dec
dec
cmpsl
in
lcall
xchg
pop
mov
movsl
pop
jns
add
mov
push
into
fwait
inc
int
js
cli
fcomps
aad
jg
mov
mov
sbb
mov
mov
xchg
out
jl
xlat
lods
adc
decl
mov
out
sub
fcmove
loop
pop
testb
push
sarb
sbb
lret
xchg
pop
jl
fdivr
push
inc
repz
dec
xchg
and
icebp
xor
jns
xchg
mov
pushf
fsubs
scas
out
push
lea
mov
pop
xlat
fcomp
push
aam
jae
pop
cmp
loope
dec
imul
mov
pop
fsubrs
sbb
arpl
lret
insb
sbb
mov
xchg
fwait
mov
xchg
push
mov
das
sbb
sub
stos
out
push
jae
adc
mov
xlat
and
mov
lea
inc
jge
lcall
call
sbb
mov
stos
lret
mov
andl
aaa
inc
sbb
jo
pop
fistpl
mov
dec
jbe
sbb
lret
sti
or
jl
fiadds
popf
xchg
cld
dec
push
jae
out
aam
shl
cmpsb
daa
push
out
pop
ja
subl
data16
mov
inc
cmp
lret
add
jge
je
shrb
orl
js
sti
mov
pop
lock
pop
lods
jle
mov
test
lret
rorl
inc
mov
jae
dec
jbe
fisubrl
in
cmp
push
hlt
out
cltd
lcall
mov
and
sti
mov
out
push
cmp
jnp
inc
or
push
sbb
push
push
out
sbb
mov
movsl
mov
xchg
xor
dec
add
adcl
roll
mov
stc
jle
rorl
and
pop
push
sbb
lahf
daa
js
xor
shll
inc
add
into
push
push
in
dec
mov
sub
cli
outsl
cmp
lea
pop
rol
add
cli
in
scas
push
jno
incl
sbb
jne
pop
push
rcrb
in
inc
mov
jl
inc
cmp
out
mov
xchg
xor
test
je
xlat
or
cmp
out
into
popf
adc
rcll
cmp
jb
or
fucomi
pop
test
pop
cmpsb
adc
mov
fnstsw
xchg
sbb
nop
sti
mov
in
call
adc
pop
repz
aas
push
out
pop
sahf
and
jno
sub
loope
mov
dec
push
cli
scas
sarl
cmp
push
mov
adc
jae
mov
xchg
jecxz
fwait
or
push
mov
add
pop
dec
ss
jmp
addl
and
pop
cmc
addr16
pop
outsl
sub
xor
xchg
ja
mov
pushf
mov
lahf
sub
dec
flds
lcall
loop
or
inc
insb
outsb
cltd
lret
les
nop
xor
scas
mov
aaa
push
inc
cld
add
pop
stos
sbb
ljmp
cmpsb
ret
fsubl
ficomps
int
cli
pop
xlat
pop
push
inc
inc
pop
inc
mov
andb
icebp
clc
pusha
adc
inc
adc
ret
inc
add
jo
mov
or
jne
int
data16
xchg
gs
inc
push
imul
outsl
and
in
cmp
pushf
daa
notl
es
roll
dec
cli
dec
push
leave
mov
cmpsl
jg,pn
lods
mov
mov
pop
pushf
xchg
sbb
fidivl
jp
pop
scas
sti
shll
je
je
outsb
cld
inc
mov
jge
jle
jbe
stc
jl
dec
ret
add
sub
test
das
add
add
mov
mov
and
mov
pop
fcoms
xchg
cld
sahf
pusha
add
xchg
adc
dec
jo
xor
fcmovnu
fstpl
nop
inc
push
xor
lock
scas
loop
or
pmulhuw
pop
pop
in
lds
mov
and
jne
imul
out
inc
pop
mov
loope
xchg
pop
and
cmp
jle
lea
jmp
mov
jg
addr16
mov
push
mov
push
inc
insb
cmp
inc
test
addl
fildl
in
dec
jmp
inc
xor
cmp
adc
repz
cmc
xchg
adc
movsb
xor
xchg
and
xchg
cmp
leave
add
mov
push
xchg
int3
inc
cmpsl
insl
cmp
mov
pop
jns
shl
add
xchg
aas
movb
loopne
push
push
xchg
iret
movsb
out
sub
adcb
mov
cmp
ja
mov
inc
mov
std
pop
mov
fsubrl
adc
stos
lret
fsubl
xor
mov
mov
addl
inc
pop
dec
fcompl
cltd
pusha
adc
aad
jp
in
fidivl
push
test
adc
int3
xor
jmp
stc
mov
push
cmp
dec
test
lret
push
leave
ja
add
cmpsb
cltd
pushl
in
jle
sbb
push
ret
jae
mov
sti
cmpsl
je
adc
sbb
test
arpl
fsubrl
inc
and
mov
das
cmp
dec
xor
daa
xchg
daa
in
lcall
push
adc
out
mov
jmp
fcmovnbe
xchg
mov
mov
sbb
sbb
or
das
fsubrs
ds
push
jo
test
sub
mov
lret
shlb
fstpl
or
cmp
cltd
mov
cwtl
sarb
mov
cmc
cld
vmovd
loopne
push
repz
mov
imul
test
cmp
sub
out
movsl
push
divl
fsub
shl
jg
xchg
rcrl
repnz
outsb
jge
popa
aaa
sbb
adc
inc
pop
push
inc
dec
adc
cld
fcos
mov
lret
test
int3
iret
loopne
or
lret
por
sbb
cmp
je
icebp
aam
hlt
sub
xlat
mov
aam
enter
test
cmova
fistpll
cmp
pop
mov
add
rorl
sarb
js
jmp
or
sub
lods
pop
add
icebp
dec
jae
mov
shl
mov
repnz
push
mov
lahf
sub
xor
pusha
add
sub
ljmp
dec
std
cmp
filds
mov
lahf
loop
ja
enter
loope
xchg
dec
jp
xor
xchg
xchg
xchg
pop
sbb
pop
push
inc
out
imul
cmp
ret
outsl
loope
xor
loopne
icebp
xchg
pop
testb
and
leave
testb
mov
push
int3
popf
push
scas
dec
mov
das
shlb
addr16
repnz
pop
add
mov
xorl
cmp
xor
mov
jno
rcr
daa
cmp
out
or
sub
mov
aaa
fisubs
testb
mov
xchg
cmpsb
iret
sahf
mov
pop
clc
je
jmp
int3
pop
mov
xchg
xlat
out
mov
sub
gs
push
fadds
cltd
mov
mov
push
adc
xor
dec
inc
jle
std
jge
clc
fbld
sbbl
cmpsb
out
mov
aas
outsl
push
xchg
or
inc
inc
cmp
sti
int
cmp
outsl
std
cmp
std
rcrl
push
jae
imull
leave
xchg
inc
andl
push
jmp
nop
aad
out
sbb
adc
adc
lds
enter
add
in
pop
jbe
inc
fs
fisubs
jo
xchg
mov
xchg
dec
mov
push
test
add
iret
jecxz
and
imul
jmp
stos
jne
lock
jp
icebp
shrl
movsb
mov
arpl
in
push
sub
or
cmp
xchg
lea
cmp
adc
sti
dec
pop
sbb
and
ficompl
sbb
outsb
dec
enter
sbb
lahf
vmread
dec
or
push
adc
mov
dec
mov
fimull
aaa
es
xor
lret
push
mov
xchg
adc
pop
rolb
mov
test
nop
lds
fwait
push
mov
lahf
aaa
xor
jae,pt
rol
pop
ret
pop
add
mov
fstp
dec
xor
roll
jnp
insb
shr
inc
or
insb
into
jecxz
push
ja
cmc
mov
adc
xchg
das
and
loop
sub
gs
mov
movsb
mov
cmp
pop
cmpsb
lods
inc
push
adc
into
xchg
and
movb
mov
test
hlt
in
fdivp
retw
mov
mov
mov
jns
cltd
imul
cmp
pop
cwtl
es
dec
mov
lds
jp
lret
jo
daa
mov
ljmp
sub
popa
addb
adcb
rclb
xlat
dec
xchg
je
xor
add
fmull
mov
lock
sbb
mov
fwait
rclb
push
fsubl
fistpll
xor
js
inc
fadd
mov
xor
lods
or
das
push
fs
jns
out
mov
mov
sbb
mov
jge
inc
mov
and
and
test
addr16
push
jb
jno
ds
inc
dec
ja
int
jbe
ror
mov
fs
ljmp
xchg
push
lods
mov
gs
gs
daa
pop
mov
push
lock
xor
adc
sbb
and
into
cmp
int3
jl
mov
pop
cmpsl
notb
jge
ficomps
dec
rcrb
test
in
dec
push
add
shr
and
aas
sbb
jne
push
out
dec
cmp
icebp
add
pop
lods
pop
inc
mov
lods
mov
cld
or
ret
fsts
cmp
adc
fsts
ds
aas
xor
pusha
setnp
push
xor
dec
adc
ret
adc
sbb
aad
sub
and
jmp
push
ds
push
xchg
fildll
push
push
dec
stos
mov
inc
push
xchg
mov
aas
dec
fs
sahf
arpl
push
dec
pop
sub
in
inc
mov
jmp
or
mov
xor
mov
sti
mov
cmpl
pop
mov
shlb
cmp
dec
rolb
adc
jge
push
fiadds
sub
lds
dec
addr16
or
cmc
xchg
popa
jl
inc
xor
daa
inc
insl
sub
jo
ss
push
cmpsb
loop
clc
push
cmp
inc
ret
int3
dec
movsl
mov
js
jle
or
adc
enter
push
insb
push
pop
cmpb
sub
mov
lods
xchg
lret
sub
ss
repnz
daa
hlt
adc
inc
pop
add
fwait
xor
call
inc
into
xor
xor
int3
gs
mov
lea
and
xchg
add
mov
mov
or
movsb
sbb
das
xlat
jmp
mov
and
enter
movaps
mov
adc
pusha
xorl
sub
add
sub
sbb
sbb
pop
xchg
aam
sub
push
cmp
jo
stos
mov
jmp
in
push
outsb
test
dec
daa
xor
xchg
outsl
fdivrs
jb
lret
rorl
scas
clc
aad
and
dec
and
dec
lret
ljmp
out
sub
call
jae
inc
pop
adc
mov
inc
pop
sub
sbb
neg
inc
sbb
cmp
adc
fildll
fwait
or
xchg
lss
fstl
mov
sbb
mov
jne
out
repnz
mov
mov
sub
sub
mov
ss
or
jecxz
js
mov
push
inc
das
div
adc
xlat
shr
popf
std
scas
mov
test
nop
test
push
iret
shlb
push
sahf
inc
push
mov
xchg
fcoml
adc
outsb
jl
mov
xor
inc
mov
int
adcb
scas
cltd
cmp
and
xchg
mov
pop
fwait
push
inc
mov
pop
and
jnp
adc
dec
pop
jle
fimull
dec
sbb
mov
es
and
inc
stos
cmp
adc
int3
je
rcrl
sub
push
mov
arpl
mov
movsl
mov
pop
outsb
sub
push
mov
dec
push
dec
lret
dec
inc
sbb
pop
and
lahf
push
pop
in
fldcw
insl
dec
mov
jae
lret
test
nop
xchg
daa
pop
dec
cld
cmp
or
pop
sub
add
div
push
xchg
push
fistpll
cmpsl
pop
frstor
es
lcall
pop
jmp
ja
xor
jne
adc
scas
xor
mov
pop
inc
mov
orl
std
xchg
ret
mov
in
pushf
jge
sbb
fs
jp
pop
mov
push
sub
loope
mov
popf
sbb
jns
ss
daa
ret
stc
insl
adc
push
fyl2xp1
jb
iret
mov
push
es
es
pusha
jne
mov
adc
mov
jle
mov
sbb
cmpsl
test
aam
daa
insb
lahf
outsb
xchg
push
inc
push
sub
outsl
xchg
js
lds
popf
push
rorl
jge
test
cmp
dec
push
pop
xchg
rolb
cli
xchg
insb
scas
jb
das
mov
lahf
jmp
je
jae
cmc
nop
or
inc
jb
cmp
lock
in
imul
repz
push
mov
outsb
fnstsw
jnp
fwait
jg
cmp
orb
jb
xchg
mov
jmp
pop
hlt
movb
inc
push
lret
mov
jg
notb
test
cli
and
mov
jae
xchg
push
inc
rorb
mov
std
adc
adc
xor
jns
sub
or
sbb
in
int3
xlat
dec
jb
push
mov
jae
mov
imul
xor
stc
push
out
inc
mov
cmp
outsb
in
and
and
cmp
xor
sbbl
es
repnz
jge
pop
popf
scas
ja
sbb
pop
dec
ror
jnp
adc
sub
mov
das
fwait
into
rol
testl
mov
jle
cwtl
mov
subb
sbb
aam
inc
push
push
mov
xor
or
comiss
dec
push
sub
ds
jno,pt
cmp
in
sbb
out
leave
andl
adc
cmpsb
dec
pop
mov
cmp
mov
xchg
jns
dec
insb
sbb
mov
insb
mov
push
inc
loopne
cs
xlat
cmp
xchg
and
dec
fldl
insl
cwtl
das
cmp
rorb
cmp
loopne
bound
test
and
jo
popa
in
leave
push
jbe
out
add
adc
xchg
test
mov
pushf
test
mov
loop
or
ret
lods
jb
jp
adc
pop
lcall
xor
push
cmp
stos
ret
cmpsl
test
push
rorl
pop
cmc
jo
jecxz
add
mov
xor
imul
push
inc
test
sub
jns
rcll
xchg
push
or
add
stos
jae
shrl
xor
or
inc
pusha
push
sbb
dec
cmc
pop
push
test
mov
and
icebp
adc
push
xor
fwait
mov
in
pop
sbb
dec
leave
adc
xchg
enter
fs
enter
jg
rol
push
sub
inc
add
nop
testl
inc
inc
mov
cmp
xchg
sbb
insb
cmp
js
or
sbb
mov
fiadds
cwtl
popf
aas
pusha
movsb
aam
and
push
cmpsl
dec
fistl
scas
xor
ret
mov
mov
mov
xchg
inc
inc
daa
cmp
mov
jmp
test
or
xchg
mov
sbb
stc
or
fstl
xchg
sti
test
jg
mov
dec
mov
mov
fisubl
nop
test
icebp
pop
mov
xor
pusha
int3
sub
call
push
cwtl
rcrl
ljmp
cmp
loopne
pop
sarl
jbe
mov
add
or
je
push
xor
lea
out
out
push
arpl
subb
mov
pop
nop
mov
xchg
jbe
mov
inc
mov
rcll
jge
pushfw
mov
cmp
ljmp
fnstcw
jecxz
jp
std
push
mov
repz
push
push
jmp
imul
test
sbb
mov
sbb
fisubl
inc
push
cmp
mov
imul
test
ret
jl
mov
xchg
imull
xor
sbb
cmp
iret
mov
dec
dec
jne
mov
test
in
mov
incb
pop
ret
dec
sub
add
lahf
aaa
adc
xchg
sbb
and
or
cmp
push
jl
adc
push
out
or
cmp
push
stos
addr16
mov
jecxz
pop
addl
das
lret
add
pop
xchg
mov
xchg
pop
les
leave
ja
sub
push
adc
lock
fisubrs
or
and
pop
sbb
lds
mov
mov
xor
push
sbb
cmp
int
sub
imul
pop
inc
insl
stos
cli
pop
sti
bnd
icebp
aam
push
stos
movsl
outsl
fidivs
inc
in
push
imul
test
lds
dec
push
inc
mov
pusha
and
inc
movsb
jg
cmpsb
cmp
push
scas
pop
imul
aas
jge
stc
dec
fidivl
add
inc
add
and
rcrb
or
stos
xor
daa
fcoml
xchg
mov
cmp
pop
push
or
leave
mov
aaa
jns
or
xor
in
jnp
cmp
jle
jge
jg
dec
jp
jp
daa
lods
mov
xor
dec
daa
dec
adc
cld
dec
rorl
mov
or
insl
pop
mov
lret
pop
inc
addr16
mov
ret
insl
lcall
mov
ds
outsl
mov
fwait
cmp
fistpll
sbb
cmpsl
cwtl
test
lods
jne
loope
ss
shrl
cmp
and
cs
push
lods
mov
add
xor
xchg
xlat
fwait
push
je
test
shll
orb
mov
mulb
and
dec
or
cmc
fwait
cmc
push
cmp
mov
cli
aas
sbb
out
adc
push
outsb
gs
push
jl
inc
ljmp
mov
cmp
bound
pop
mov
mov
xchg
sub
ds
mov
jo
dec
mov
add
adc
adc
nop
std
sahf
js
jecxz
xor
sbb
mov
add
sub
mov
call
or
cmp
lods
test
cmp
pop
and
fdivp
fisttps
pop
sbb
cmp
mov
or
bound
mov
ds
scas
xor
dec
inc
cmpsl
pop
and
push
mov
daa
nop
clc
pop
and
cld
push
or
sub
xor
or
mov
cmp
add
rcll
pop
fisubrs
and
xchg
out
xor
inc
inc
sti
insl
popa
inc
mov
push
dec
push
lods
sub
sbb
xchg
adc
jb
repnz
jnp
cmp
mov
loop,pn
push
push
jno
dec
dec
pop
leave
add
xchg
dec
mov
inc
mov
je
ds
mov
fsubs
pop
pop
jp
into
rorl
ret
xchg
jne
sub
pop
shll
fdivrl
and
test
popf
jbe
mov
cli
pop
xchg
rcr
and
popa
xchg
or
test
daa
xlat
sbb
rcrl
inc
enter
mov
jp
jl
push
out
sub
call
inc
stos
imul
pop
arpl
push
cmp
dec
inc
shr
imull
arpl
xchg
mov
mov
push
fimuls
mov
jg
bound
pop
add
sbb
int
mov
aad
xchg
fmull
aam
sub
or
sbb
icebp
or
push
sbb
add
inc
sbb
ljmp
xchg
jb,pt
mov
data16
pop
push
xor
jns
pop
das
ljmp
xor
pop
aad
pop
dec
out
add
cli
xchg
inc
out
dec
repnz
out
mov
inc
dec
js,pt
loop
ss
push
ret
out
cmpsl
and
test
jnp
xor
sub
addb
adc
xchg
and
stc
loopne
mov
mov
or
movsl
std
push
sbb
lods
inc
enter
push
les
dec
xchg
int3
mov
sarl
and
jg
mov
ret
int3
lret
mov
lret
enter
inc
push
les
das
xchg
xor
mov
and
rcl
push
enter
mov
sub
jg
xchg
push
cs
push
sbb
or
adc
lea
jle
mov
sub
leave
jge
test
dec
pop
movl
addr16
lret
xchg
outsb
mov
mov
test
sub
pop
push
nop
sub
pop
xor
outsl
popa
std
mov
pop
and
sbb
ss
push
iret
pop
lcall
clc
mov
sbb
or
nop
mov
lcall
movsl
xchg
mov
stos
dec
cmc
jg
loope
test
out
xchg
adc
cmpl
xor
push
push
mov
mov
mov
dec
fwait
pushf
and
dec
mov
out
scas
mov
pop
and
out
aaa
sti
test
dec
je
push
mov
dec
push
push
into
daa
in
ds
test
mov
sbb
dec
imul
out
xor
outsb
lods
jg
inc
mov
cwtl
inc
sbb
insb
cmp
mov
mov
mov
sti
imul
jge
dec
mov
scas
xor
repnz
ret
aaa
out
loopne
push
js
dec
movl
xchg
and
js
jle
xor
and
scas
cs
hlt
pop
sub
in
repnz
push
in
fcmove
lea
insl
jge
mov
sarb
or
and
sbbl
sbb
lods
sub
inc
divb
ret
dec
adc
or
add
dec
mov
pop
push
loop
mov
test
es
pop
std
sub
ss
dec
xor
ficompl
mov
mov
pushf
inc
pushf
cli
cmp
mov
mov
fisubrl
loopne
and
pop
jbe
sarl
rorl
mov
int3
sbb
pop
add
pop
push
and
rcl
inc
scas
inc
call
and
or
cld
push
lret
je
sbb
xor
das
xor
jp
lahf
lock
xchg
daa
cmp
mov
fisubs
mov
add
fwait
adc
jnp
mov
dec
pop
mov
scas
out
and
pusha
add
loope,pn
push
jo
fidivs
repnz
in
mov
jle
pushf
jb
mov
fiaddl
ja
stos
test
call
xor
dec
in
adc
pop
outsb
fucomi
xor
inc
push
rcrb
clc
rol
and
lods
notb
outsb
adc
aad
or
xor
mov
inc
negl
test
aas
loopne
test
xchg
es
lods
cltd
adc
push
push
fld
call
push
in
fs
addr16
cmp
out
push
es
jae
push
push
xor
push
xor
and
subb
mov
jbe
cs
outsl
pop
fcmovnbe
mov
test
dec
sub
adc
pop
mov
adc
inc
dec
dec
xchg
adc
imul
sti
adc
ja
mov
sbb
adc
xlat
je
push
jne
dec
fnstsw
les
sbb
or
mov
rclb
dec
cmpsb
fisttps
in
mov
inc
adc
xchg
cmp
xor
xor
push
addb
xchg
inc
dec
cwtl
mov
sub
shll
xchg
adc
dec
xchg
adc
icebp
xchg
pusha
les
sub
adc
sub
xchg
icebp
xchg
mov
pop
pop
andl
mov
jg
cld
pop
adc
repz
push
jmp
xchg
jo
xchg
test
dec
scas
call
js
and
inc
leave
addps
jge
cltd
push
xor
push
jecxz
mov
sub
or
adc
inc
nop
dec
das
call
cmp
ss
cld
js
fdivrl
sub
push
push
test
cld
push
fnstcw
jp
ret
inc
repnz
rorb
sub
neg
cltd
jle
xor
push
push
push
stos
int
fwait
ss
int
movsb
mov
mov
clc
bound
push
loop
sub
sbb
aad
fimull
ret
mov
pop
arpl
in
sub
xor
dec
leave
hlt
push
icebp
pop
out
mov
je
jmp
inc
int3
out
sahf
fs
mov
pop
in
aas
lods
jo
lea
pop
les
inc
cmpl
add
loope
sbbl
sub
fisubl
fcomip
adc
and
xchg
or
cmpsb
push
es
adc
cmp
xor
and
mov
mov
pop
cltd
xchg
jb
cwtl
or
mov
xchg
inc
fbstp
jbe
xor
or
dec
xchg
adc
add
push
push
popl
adc
and
push
push
xor
in
xor
pop
jg
xchg
addb
xor
test
jb
mov
rcrl
mov
loopne
sbb
jo
scas
cs
fildll
jecxz
popl
lods
ja
sub
enter
push
enter
xchg
test
fxch
das
fcomps
inc
repnz
outsb
aad
sub
xchg
loope
sub
sub
por
test
xchg
xchg
mov
mov
mov
xchg
adc
pop
call
lods
sub
fadds
mov
sub
data16
mov
dec
movb
int
and
adc
mov
les
xor
mov
pop
jo
imul
leave
pop
push
xorl
out
sub
push
xchg
sbb
xor
dec
mov
adc
pop
cld
pop
cmpl
pushf
add
ss
inc
cmpsl
test
daa
inc
movsb
test
sub
mov
lret
pop
out
repz
jno
or
mov
push
and
cld
mov
adc
jae
mov
inc
dec
stos
sbb
bnd
xor
in
adc
xchg
addr16
roll
fwait
xchg
mov
mov
cwtl
adc
sti
stos
psubusw
or
in
xchg
fs
fiaddl
cmpsl
xor
mov
js
jecxz
sbb
add
dec
into
mov
loop
pop
push
sarb
dec
iret
insb
add
sub
jecxz
adc
jo
mov
cltd
jbe
pop
loopne
add
pusha
rorl
xchg
add
loop
mov
pop
cmp
sbb
xchg
out
push
add
dec
clc
cld
xor
addr16
push
cltd
int3
pop
insb
ja
in
push
inc
scas
mov
push
aaa
pop
mov
movsb
ret
pop
std
cmp
adc
in
mov
mov
test
ds
cmc
push
xchg
mov
push
daa
mov
dec
inc
lcall
clc
into
adc
lret
ficoms
stos
dec
xchg
inc
xor
push
jo
out
jo
outsl
adc
pop
lock
outsl
xchg
rclb
jle
out
sub
mov
adc
je
jge
imul
push
mov
and
rorl
sub
jo
push
mov
mov
andb
cmp
push
frstor
sbb
adc
push
jle
jmp
pushf
rcll
push
pop
fisttpll
or
pop
cmp
fldl
lock
xor
cmp
sub
bound
ror
lahf
mov
inc
add
icebp
popf
push
sti
adc
fs
popf
mov
in
cmp
inc
mov
mov
lock
out
test
jmp
push
jo
fs
test
lcall
int3
jp
pop
sbb
outsb
insl
mov
mov
pop
repz
orb
add
cmp
pop
or
cmp
sub
xor
cmp
cli
gs
mov
scas
mov
dec
not
mov
mov
add
add
fsubs
sbb
movsl
mov
leave
leave
push
dec
adc
mov
or
mov
jbe
sbb
jl
sbb
inc
div
aaa
es
scas
mov
mov
sub
mov
inc
cwtl
rcr
fstps
mov
jns
cs
pop
cmp
xor
lock
xchg
loopne
cmpb
jb
andb
xor
adc
pop
xchg
sbb
aaa
mov
inc
push
loop
xor
rorl
pop
fildll
pop
lahf
pop
and
fmuls
scas
pop
mov
jp
dec
mov
and
loop
cltd
pop
adc
insb
enter
fidivrs
repnz
mov
mov
jmp
mov
dec
pop
inc
jnp
adc
dec
jne
in
fcomps
cltd
and
add
aam
inc
aaa
cmp
les
and
add
and
push
cmp
aam
and
pop
test
jg
sbb
in
xor
pop
stos
lods
pop
out
push
jno
xchg
sbb
in
mov
fnsave
fdivl
das
in
rcrl
add
lods
push
mov
adc
fsubs
in
dec
repnz
sub
pop
xor
mov
xchg
mov
movsb
iret
das
lds
and
or
outsb
lods
mov
jge
jbe
inc
dec
xor
rcrb
addr16
mov
or
mov
lcall
mov
test
test
outsb
pushf
fidivrs
adc
sub
dec
push
sti
lcall
call
int
adc
scas
push
out
xor
mov
mov
lcall
in
int3
xor
xchg
sbb
imul
push
aaa
add
je
cs
jmp
inc
cmp
push
fiadds
dec
push
sub
in
dec
pop
lret
jns
roll
inc
repz
out
out
sbb
adc
xchg
sti
cmpsl
fstl
xlat
xor
dec
push
push
push
xlat
adc
push
cmp
pop
push
jne
daa
int3
inc
fs
mov
pushf
shr
xchg
loopne
xor
sub
clc
xor
xchg
div
add
adc
xor
mov
iret
out
ret
decb
xor
fcoms
push
outsl
xor
aaa
push
inc
cmp
mov
fidivl
popf
fdivrs
dec
cmp
sbb
clc
icebp
jmp
divb
xchg
in
scas
cmpsb
outsl
scas
jnp
shlb
daa
aam
xchg
mov
iret
incb
pop
jae
subb
lcall
daa
icebp
outsl
jl
iret
jb
or
ret
inc
jecxz
popa
push
pushf
xchg
addb
push
mov
repnz
loopne
or
cmp
leave
sbb
xchg
add
and
pop
dec
jle
subb
adc
sbb
cmp
mov
das
and
ret
shlb
negl
xchg
sbb
jp
cmc
std
hlt
rcrb
inc
ljmp
push
mov
insl
sbb
dec
jecxz
mov
push
dec
jl
subb
inc
add
xchg
inc
adc
cs
mov
fs
lcall
imull
aam
mov
cmc
cmp
divl
or
in
pop
push
mov
repz
js
cmpsl
xchg
mov
pop
test
pop
nop
push
int3
or
push
jae
dec
outsb
das
jp
cmc
jmp
mov
pop
xor
jo
mov
mov
add
ret
test
sub
imul
iret
xchg
out
xchg
jns
add
js
inc
adc
subl
test
mov
xchg
fwait
call
xchg
incb
lcall
call
pushf
pusha
add
push
mov
aaa
jne
lock
scas
or
js
xor
loopne
push
dec
scas
ja
ror
inc
mov
xlat
icebp
add
xor
push
bound
mov
mov
mov
ss
pop
xchg
out
jle
push
inc
outsb
dec
je
mov
sbb
aad
cmpsb
mov
cmp
sbb
mov
popa
repz
stos
ficoms
shlb
or
sbbb
jmp
xor
pop
jne
push
pop
aaa
mov
orl
lret
mov
pop
jge
lods
or
je
mov
mov
ror
mov
mov
notb
dec
xchg
cmpsl
push
pop
jnp
mov
pop
sub
add
ds
xor
push
out
jo
and
sbb
adc
lock
test
xor
mov
into
arpl
outsl
rol
dec
leave
jo
das
loop
dec
ja
lods
dec
lret
or
xor
dec
fisubs
out
sbb
xor
rclb
dec
inc
dec
cld
lret
and
xor
dec
sub
in
adc
int3
mov
inc
mov
pop
fbld
jb
shlb
lds
push
jns
pop
js
cli
stc
pop
stc
sbb
mov
xchg
push
mov
mov
insb
cmp
and
cltd
push
xchg
jmp
dec
ja
mov
repnz
stc
inc
mov
push
mov
cli
sti
add
arpl
inc
jmp
sahf
push
inc
xor
mov
pushf
nop
cmp
rclb
in
push
aaa
or
lods
jle
faddl
lds
sub
lds
test
mov
fidivs
and
pop
mov
jns
orb
xor
xchg
fldl
or
hlt
xchg
or
mov
cmp
cmpsb
out
pop
xor
sbb
xlat
or
adc
mov
or
test
jmp
jg
sub
pop
bswap
imul
mov
loope
sbb
fs
and
jecxz
cmp
mov
out
jge
mov
cmpl
ja
dec
je
cmp
int3
pop
stc
insb
xchg
fdiv
or
addr16
push
dec
insl
mov
and
hlt
and
lods
arpl
and
jge
jg
call
je
fidivs
fs
mov
inc
pop
sbb
jmp
imul
call
xlat
mov
pusha
xchg
jecxz
out
adc
inc
pop
cmpsl
cmpsl
pop
add
add
adc
inc
mov
or
mov
push
or
cmp
xchg
sub
cld
clc
hlt
and
add
inc
pushf
es
test
mov
imul
sbb
or
bound
xor
mov
sub
pop
fsubp
ret
scas
mov
dec
arpl
repz
out
adc
popa
jge
or
cmp
jl
divl
outsb
js
sub
les
sub
cwtl
push
jp
xor
cmpl
outsb
clc
jne
in
popa
xor
push
push
mov
push
sub
outsl
mov
int3
call
inc
jo
sti
mov
push
hlt
adc
mov
loop
sub
arpl
test
lock
fcompl
loope
or
xchg
es
cmp
gs
xchg
stos
jns
loop
sti
outsb
mov
in
fsubrp
loopne
repz
and
mov
sbb
pushf
xchg
out
shll
push
lcall
test
shlb
int
jp
fsubl
mov
mov
dec
add
pop
and
sbb
add
daa
cwtl
mov
xchg
pop
sub
cmc
mov
ds
out
mov
stc
mov
pushf
dec
sub
inc
lods
orb
daa
xchg
mov
hlt
xchg
out
inc
push
mov
shrl
add
in
into
sarb
dec
ficoml
inc
adc
bound
shlb
xchg
movsl
insl
cmpsb
dec
dec
mov
and
xor
mov
repnz
add
dec
adc
imul
sti
push
imul
int3
sub
adc
mulb
scas
mov
repnz
imul
xchg
cmp
movsl
or
cmpsl
cmp
xchg
lcall
in
push
scas
dec
mov
push
push
adc
push
or
lock
ret
adc
pop
pop
fisttpl
push
or
sbbl
mov
and
adc
mov
jle
push
mov
xchg
daa
test
push
std
mov
xor
popa
aaa
adc
incb
push
mov
adc
notb
sub
int
cmp
fs
mov
rorb
test
pop
in
punpcklwd
sbb
sub
xorb
int3
add
sbb
sbb
inc
add
sbb
adc
cmp
push
adc
pop
push
xchg
push
out
pop
and
cs
pop
adc
lahf
out
sub
pop
fcomps
push
inc
rolb
mov
nop
cmpsl
lock
jae
jg
fistps
or
dec
adc
pop
jl
nop
mov
adc
dec
mov
xlat
adc
mov
dec
outsl
pushw
add
add
xchg
add
and
jno
pop
ljmp
jo
mov
sahf
lcall
rcrb
and
shl
mov
leave
pop
sub
cmove
test
out
xchg
xor
inc
outsb
cmp
cltd
call
jp
jo
inc
cmpsl
rorl
inc
lock
imul
loope
popa
int3
ret
mov
xchg
inc
jne
or
aad
or
sbb
out
ja
add
push
aad
inc
cmp
aad
loope
bound
xor
add
aam
fwait
push
add
imul
es
insl
fcomps
cmp
shrl
call
or
xor
sbb
lahf
inc
sub
push
dec
incl
pop
add
pop
shrb
ficoms
repz
add
sbb
push
xchg
ljmp
in
icebp
int
sarb
push
sub
mov
shrl
je
inc
xor
cmpsl
xor
movb
ja
les
push
push
insb
cmp
popf
out
cmp
mov
push
adc
sahf
jg
push
adc
test
mov
lea
sub
mov
jo
cs
int
stos
push
mov
or
sbb
sub
fisubrs
out
pop
inc
sbb
cmpsb
das
sub
popa
data16
mov
loopne
xor
adc
arpl
push
inc
fcoms
push
mov
rcrb
push
push
inc
mov
cs
mov
fwait
hlt
repnz
psrad
in
ss
mov
dec
mov
roll
adc
jp
sbb
imul
loope
push
loop
xlat
jbe
or
loope
mov
cmpsl
imul
jg
jo
xchg
sbb
adc
xchg
adcb
imul
mov
int3
add
push
cmc
dec
aaa
sbb
dec
push
popf
jne
test
ss
or
push
dec
je
jp
pop
adc
mov
mov
sub
xor
sbb
outsb
out
test
test
nop
adc
pop
jecxz
xchg
dec
jb
sarl
outsl
xchg
popf
dec
push
mov
clc
adc
leave
adc
or
cltd
ds
xor
inc
clc
adc
popf
icebp
or
mov
dec
cmp
xchg
sub
lea
add
or
adc
ret
mov
in
and
add
adc
jg
mov
repnz
lods
and
and
adc
xlat
xor
inc
pushf
inc
insl
mov
lahf
cmp
js
and
test
test
ret
xchg
add
test
push
ljmp
inc
push
mov
mov
sub
and
mov
lock
lret
or
pop
cmp
fisubrs
in
sbb
in
adc
inc
mov
popf
push
push
push
inc
outsb
or
pop
add
imul
hlt
mov
cmc
inc
dec
lods
xchg
cmp
lcall
fs
aas
mov
inc
rcl
pop
and
mov
dec
fsubs
pusha
mov
or
pop
inc
nop
pop
shrl
je
in
lahf
ljmp
hlt
test
out
repz
dec
mov
popa
sahf
jl
dec
mov
hlt
pusha
scas
sbb
pop
not
inc
sti
or
pop
neg
popa
aaa
xor
add
sub
test
sub
adc
xchg
jp
or
ja
sub
cmp
out
sbb
sbb
mov
cmp
inc
xor
xchg
lret
cmpsb
sub
aam
mov
or
or
dec
push
jbe
mov
push
insl
xor
xchg
int3
xor
inc
push
stos
sub
and
js
stc
mov
flds
and
add
sbb
xchg
mov
mov
or
inc
cmp
out
or
ds
bound
inc
xchg
jmp
es
lods
inc
out
sar
push
int3
shl
shll
push
mov
dec
gs
adcb
jmp
cmp
outsb
inc
sbb
rcll
jno
std
sub
jae
cmp
es
inc
xchg
addr16
in
mov
xlat
mov
push
jmp
sub
xchg
and
fcoms
or
repz
fcom
mov
push
adc
cmc
pop
rcll
pop
cmp
xlat
sub
gs
and
and
lcall
sbb
jno
daa
cmc
int
in
jns
mov
lock
scas
add
fiadds
push
aam
inc
sub
in
mov
jmp
lret
test
out
xlat
push
ljmp
mov
cld
dec
cmp
std
leave
test
jl
adc
pushf
dec
inc
adc
mov
mov
rolb
hlt
cwtl
xchg
repz
int
and
rol
cld
enter
test
test
cmp
sti
inc
pop
fisttpl
stos
addr16
jl
jo
jb
pop
icebp
add
mov
fs
loop
hlt
sti
insl
jae
mov
xorl
xlat
imul
out
add
sub
cmc
loope
in
cmp
adc
cs
int3
rorb
scas
pop
cmc
loopne
rcl
popa
sub
fwait
add
out
and
push
dec
push
jp
mov
pop
pop
mov
xchg
cs
fadds
mov
add
leave
fsubp
dec
lahf
mov
dec
inc
aaa
xchg
mov
mov
data16
mov
push
mov
sub
or
adcb
cmpsl
dec
cmp
add
xlat
and
in
addb
and
decl
cmp
mov
lret
jp
mov
mov
test
pop
mov
fs
bound
lcall
leave
movsb
add
enter
sbb
lahf
adc
sub
cmp
lret
push
loope
faddl
out
add
out
inc
pop
pop
cmpsb
fbld
popf
shlb
std
shll
imul
and
dec
inc
int3
loopne
in
push
in
cmc
movsl
xor
int3
xchg
hlt
jb
test
fnsave
push
icebp
cmpsb
adc
popa
inc
iret
mov
adc
fdivs
icebp
inc
sar
notb
add
test
call
in
popa
push
or
roll
scas
mov
ja
les
movsl
push
movsb
icebp
push
xchg
mov
push
aas
sbb
jno
scas
insl
cmp
sub
sahf
lahf
pop
stos
dec
rcl
int3
mov
mulb
cmp
lods
or
stc
es
repnz
aad
testb
ret
pop
adc
sbb
leave
xchg
pop
lahf
mov
hlt
jmp
add
movl
ljmp
jp
out
dec
loop
add
mov
std
pop
sti
cltd
xor
lods
dec
rcr
fucomp
les
push
jecxz
and
pop
pop
mov
cmc
fcompl
jecxz
stos
or
jge
adc
iret
pop
add
pop
and
fstps
fidivrs
stos
adc
sbb
jge
pop
sti
in
mov
fcompl
daa
pop
es
scas
jecxz
xorb
insl
sbb
cmp
shl
cwtl
lods
mov
jne
dec
les
call
lods
mov
sbb
insl
dec
repz
cmp
fildl
pop
rorl
adc
push
jmp
xchg
cmpsb
cmp
ret
mov
xorl
inc
dec
test
cmp
pop
fistpll
mov
ret
test
jl
dec
call
repnz
ja
cmp
sbb
loope
xor
testl
pop
cltd
xchg
or
test
xchg
sahf
in
imull
mov
je
gs
pop
int3
or
jle
aaa
call
mov
sbb
imull
insb
sbb
push
mov
push
sbb
mov
xchg
lock
dec
jmp
mov
lods
fwait
pop
and
into
push
daa
jno
mov
fldenv
enter
je
fsubrl
and
sti
cmp
or
loop
mov
xor
sub
lcall
fwait
jno
push
pop
inc
or
mov
mov
test
or
daa
mov
arpl
leave
lds
mov
mov
pop
pop
out
push
push
fadds
cwtl
cmp
mov
pop
test
in
testb
pop
mov
sar
or
lahf
or
inc
sub
lahf
cmpsb
aam
inc
in
cmp
jmp
aaa
cmp
dec
ret
sti
mov
fcmovu
sub
cltd
rclb
enter
cld
inc
push
jg
notb
shll
push
enter
mov
or
in
sub
mov
push
and
push
aaa
cli
and
cld
aas
pop
mov
jle
lds
sbb
dec
out
jmp
clc
pusha
enter
adc
out
mov
sbb
repz
add
or
aaa
cld
ss
call
jmp
push
add
push
jne
dec
add
jmp
cld
lods
jmp
or
mov
sarl
jmp
push
fimull
das
or
fcmove
xor
mov
jne
faddl
stos
int3
mov
pop
push
ds
mov
aam
inc
in
and
cmc
jns
jg
add
push
cmp
or
add
test
jb
cmp
fnstcw
mov
out
test
in
push
sti
sub
les
sarb
mov
bound
fdivl
add
cmp
pop
cmp
in
mov
test
dec
lcall
mov
mov
ds
daa
pop
mov
xchg
not
stos
pop
cld
dec
dec
addr16
push
pop
cli
test
in
xchg
mov
mov
xchg
push
mov
sbb
xchg
jo
push
sub
aam
lock
and
mov
inc
jmp
imul
cmpsb
into
mov
inc
das
out
push
jo
lret
enter
jle
sbb
rclb
int
ds
ja
fld
xor
and
add
or
fstp
cltd
mov
xor
mov
fnstenv
das
cmpsb
mov
sub
mov
sti
into
clc
jmp
andl
xchg
repz
lock
rorl
xor
mov
adc
push
rcr
jno
cld
cmp
mov
stos
xor
push
and
mov
add
sbb
out
add
daa
adc
jne
jmp
aas
xchg
jbe
jb
cmp
cmp
repnz
fstpl
xchg
xchg
xchg
sub
lods
out
push
das
xlat
aam
lods
inc
aas
aam
pop
mov
or
and
push
xchg
and
pop
shlb
adc
call
ljmp
dec
dec
aas
sub
js
push
xchg
inc
pop
xorb
mov
shlb
outsb
jb
dec
jmp
fisubrl
and
ja
lret
cmp
cmp
cwtl
fcmovnbe
push
push
test
sub
testb
adc
pop
or
fisttps
in
sbb
cmp
inc
es
jl
cmp
loop
mov
xchg
iret
xor
into
mov
push
xor
push
jb
sub
daa
ret
jle
inc
xchg
insl
cli
inc
cltd
mov
loopne
imul
stc
xlat
iret
mov
push
xchg
xor
cs
inc
jo
xchg
iret
add
mov
popa
sarb
loop
sub
fdivs
or
mov
add
insl
adc
notl
sahf
int3
notb
dec
cli
inc
fistps
pushl
out
sub
mov
dec
stos
ss
adc
sub
fsubrs
lods
cmp
jb
es
repnz
fs
movsb
dec
fs
int
mov
xlat
sub
add
lcall
test
ret
or
movsl
sbb
add
movsb
shr
push
imul
jbe
push
cld
or
pop
and
cmp
pop
filds
mov
int3
pop
out
jg
sbb
aad
aad
setl
or
bound
cli
cmp
js
popf
push
cli
outsb
movsb
or
ds
add
rcr
shlb
pop
push
cmp
lcall
xchg
push
dec
sub
cld
pop
repz
push
je
sbb
pop
jae
xlat
shl
xor
and
f2xm1
or
jle
inc
test
jno
lock
inc
cs
cmp
and
pop
insl
add
xchg
mov
adc
push
gs
xchg
test
sbb
pop
jg
sub
jle
push
pop
stos
fidivrs
js
xor
mov
pop
jbe
push
add
arpl
sub
or
inc
ror
xor
adc
add
leave
dec
aam
jb
ds
ficomps
dec
fnstenv
add
arpl
add
aad
sahf
das
push
add
push
xchg
inc
mov
lret
dec
mov
popa
push
sub
adc
sti
dec
jl
testb
pop
mov
mov
jae
jmp
xor
cmp
jle
mov
outsl
lcall
sbb
mov
test
pop
mov
imul
jp
aas
mov
inc
push
fsubs
mov
in
out
jmp
aaa
sbb
dec
pusha
icebp
repz
dec
shlb
repnz
and
int3
rorb
sub
mov
popa
or
cmp
mov
ss
sub
inc
icebp
cs
loope
in
jl
adc
in
inc
xchg
cmpsl
mov
inc
mov
push
pop
test
outsl
fisubrs
aaa
mov
pop
movsb
stos
inc
sub
inc
pop
xor
xchg
ret
cmpl
push
dec
repz
ret
in
sub
scas
movsb
sarl
out
adc
in
push
popf
test
lds
dec
mov
adc
dec
decb
mov
jle
sub
js
stc
outsb
or
aas
das
cmpsb
push
and
mov
test
lret
stos
push
shrl
fld
sbb
daa
jp
aaa
xor
inc
add
sti
fnstsw
and
mov
sub
cmpsb
mov
ret
loope
out
jl
jbe
push
shr
push
scas
fstpl
jb
or
pop
pop
lcall
push
xor
cmp
roll
mov
test
outsb
pop
enter
mov
mov
loope
dec
dec
mov
inc
push
pop
xchg
cmp
insb
cmpsl
sbb
mov
popa
adc
mov
in
faddl
pop
and
insl
xor
imul
and
pop
idiv
mov
repnz
push
out
aaa
stc
xchg
xor
and
mov
xor
pop
mov
pusha
test
movsl
mov
mov
jnp
fdivrl
shl
loop
push
push
sbb
jmp
loop
push
outsb
pop
sub
js
push
cld
es
ja
mov
pop
push
shll
stos
das
pushf
lock
popl
mov
jg
or
cmc
addb
and
sub
js
xor
fsubl
cltd
or
mov
push
pop
repz
aaa
push
pop
dec
ret
mov
add
insb
rolb
rorb
mov
test
outsl
pextrw
mov
imul
mov
push
shr
loopne
mov
and
jge
xor
pusha
sar
push
addl
jo
mov
aad
mov
gs
jnp
or
cmp
negb
fs
dec
cmp
lahf
das
sub
insl
push
sbb
mov
pop
mov
fdivl
xor
fistpl
adc
inc
test
gs
mov
shlb
test
adc
and
stc
adc
into
sbb
add
hlt
sub
cwtd
rcr
adc
enter
repz
pop
mov
lcall
add
sbb
pop
dec
ss
lcall
aam
add
movsb
inc
mov
sub
sti
xchg
push
arpl
test
sub
outsb
mov
dec
in
pop
sbb
sbb
int3
aad
push
popf
or
cmp
jmp
loop
enter
aaa
add
push
inc
aad
ja
xchg
stc
or
dec
dec
mov
mov
ljmp
lahf
mov
rolb
xchg
add
jecxz
mov
sub
add
in
lcall
jge
fsts
call
cmp
adc
cmp
and
repnz
imul
adc
mov
push
bound
sbb
leave
roll
cmc
push
inc
jb
mov
and
cmp
in
test
in
or
dec
xor
sub
mov
fdivrs
mov
cmpl
push
fstpt
scas
or
jge
and
sbb
or
mov
das
in
sbb
lahf
mov
cmp
dec
or
and
mov
mov
xchg
sbb
fwait
sub
xor
add
movsb
jle
xchg
scas
xor
aaa
xchg
push
in
adc
fsubrp
jne
imul
fst
jge
and
sbb
bound
lahf
lretw
xchg
pop
push
jbe
push
mov
mov
pop
loop
sarb
pop
popa
adc
movsb
add
pop
mov
adc
jl
lcall
jge
mov
sarb
fldl
push
sbbb
inc
cltd
ss
mov
cwtl
mov
mov
sub
ljmp
pop
test
jmp
into
mov
xor
jae
jge
mov
mov
jg
or
scas
jnp
xor
dec
xorb
test
loop
mov
enter
inc
sub
adc
or
orl
sbb
ret
mov
outsl
adc
test
cli
and
jne
mov
cmp
loope
test
add
movsb
rcr
das
and
xchg
pop
in
adc
popa
pushf
and
and
inc
mov
inc
stos
pusha
mov
cmpsl
cmp
sbb
movsb
jge
out
fidivs
push
sbb
sahf
gs
push
cmpsl
roll
pop
loopne
dec
cmp
adc
mov
jecxz
sub
mov
fucomip
add
xchg
psubd
out
pop
mov
insb
jge
adc
or
dec
mov
mov
cmp
adc
test
jl
jge
jns
and
add
daa
imul
push
sub
cwtl
popa
cld
push
ret
scas
fcomps
dec
out
in
fcompl
movsl
push
fisttpll
hlt
outsl
rcrl
sub
nop
mov
cmp
and
xor
adc
push
push
mov
jb
sub
scas
and
inc
dec
or
clc
mov
adc
jnp
xchg
push
push
daa
pop
movsl
add
outsb
xchg
xor
or
jmp
jo
xchg
pop
cmp
out
sarb
stos
mov
push
popf
stos
lods
loopne
test
xchg
ficompl
cmp
ljmp
push
icebp
jp
inc
push
adc
fidivrs
arpl
cmp
fbld
out
data16
push
outsb
push
pop
sbb
lods
push
inc
jns
mov
lret
cwtl
and
mov
lahf
add
push
lods
aad
pop
in
mov
add
xor
add
dec
xor
inc
pop
dec
dec
and
or
stos
daa
clc
push
in
std
jo
push
mov
pusha
add
mov
pop
jge
out
loop
jecxz
fmull
testb
ret
es
add
or
fistl
xlat
jg
sub
sbbl
cli
mov
mov
mov
push
out
pop
inc
movsl
jne
mov
inc
add
mov
fs
addb
test
cwtl
push
iret
inc
test
rcrl
lret
push
xor
ja
mov
mov
addl
ficomps
push
push
jne
adc
mov
push
fcmovu
outsb
mov
lods
sbbb
int3
pop
test
mov
push
jno
hlt
call
gs
jp
aam
fldl
sahf
dec
dec
out
pop
sbb
insl
imul
add
push
mov
hlt
mov
jmp
inc
rclb
sarb
mov
test
lock
lds
inc
frstor
ja
aad
push
and
mov
pop
sub
sbb
xchg
xchg
js
add
mov
jb
sbb
dec
jno
daa
clc
inc
popf
outsl
xor
mov
jb
jo
ja
adc
sub
add
lock
sti
enter
pushf
sub
test
stc
les
in
scas
sbb
fidivl
shlb
ret
sahf
cmp
add
xchg
push
cmp
cmp
push
int
sbbb
mov
push
out
cmpb
jb
sarl
imul
cltd
cmp
push
mov
lods
dec
xchg
push
fs
aad
btr
jnp
adc
popa
movsl
xchg
add
or
sbb
divb
jbe
mov
out
cmp
jmp
in
pop
add
test
jg
push
mov
mov
nop
fdivl
mov
scas
push
push
out
scas
inc
addr16
outsb
mov
xor
xchg
outsb
cmp
and
jnp
mov
loope
notb
sbbb
add
test
or
pushf
repz
cmp
fwait
sub
call
fs
out
imul
dec
lahf
fwait
iret
jecxz
or
test
pop
das
repnz
push
pop
or
mov
xchg
xor
insl
push
sbb
push
leave
pmovmskb
fcompl
mov
jmp
inc
int3
repnz
push
lds
jmp
cs
dec
mov
fsubrs
dec
les
jns
cmp
outsl
movsb
cs
sbb
and
iret
jo
stc
inc
sbb
rcpps
movsl
int
fcomip
pop
lret
mov
mov
and
cmp
ds
jbe
aad
ret
cmpsl
pop
jns
fistl
push
adc
lret
ja
mov
sbb
fsubrl
imul
int3
test
in
out
push
aad
jne
cmp
dec
jg
pop
jns
cmp
mov
fs
mov
pushl
or
mov
pushf
mov
xor
cmp
stc
mov
dec
adc
inc
add
cmp
pop
ret
or
inc
loop
cltd
hlt
pop
xchg
sarb
mov
sbb
inc
pop
daa
fstl
push
cmc
pusha
pop
ss
mov
fwait
mov
add
ret
adc
rol
adcl
mov
dec
mov
adc
daa
dec
xlat
es
cli
mov
pop
int
sbb
stos
pop
mov
pop
sbb
es
mov
ja
in
shl
mov
leave
or
daa
enter
scas
add
or
pop
push
mov
fistl
fmull
sarl
pushf
jns
outsb
ret
test
test
add
jge
js
sbb
jmp
int
adc
das
jne
mov
inc
add
cmp
insl
xor
mov
sbb
or
add
ss
and
sbb
mov
rcll
sbb
xlat
es
outsl
outsl
xchg
xchg
adc
inc
lahf
test
or
scas
into
sub
jle
push
imul
push
mov
xchg
jle
pop
ljmp
shrb
movsb
add
jg
pop
popf
out
push
les
ja
push
pop
popa
lret
call
sbb
inc
icebp
mov
nop
push
popa
xchg
scas
xor
push
call
int
mov
and
sbb
lret
lea
inc
or
stc
dec
ja
xchg
ss
mov
aaa
xchg
adc
enter
push
pusha
mov
mov
pop
xchg
sbb
adc
jo
mov
ds
mov
outsl
mov
test
ljmp
and
mov
subb
mov
addr16
ss
xor
jecxz
aad
pop
inc
adc
dec
jae
jp
mov
add
stos
sahf
and
mov
imul
sbb
mov
sbb
rcll
push
and
rolb
dec
xor
mov
jbe
xor
loope
sbb
push
inc
sbb
inc
pop
inc
and
jo
cmp
ficomps
ljmp
hlt
movsb
sub
pop
into
into
push
sbb
mov
insb
loope
xchg
jg
lret
gs
adc
insb
cltd
test
lods
leave
pop
loopne
xchg
scas
fisubrl
js
cltd
pushf
dec
daa
push
dec
push
je
cwtl
stos
ret
cwtl
addr16
stos
mov
and
pop
mov
stc
repnz
push
rol
jge
xchg
out
mov
dec
jo
sub
dec
repz
push
jmp
ss
push
mov
jno,pn
insl
inc
cmp
fwait
and
pop
push
insl
ja
ss
pop
lods
mov
cmp
lock
lret
insb
int3
fadds
push
push
xchg
iret
mull
movsb
xchg
negb
fcompl
cli
dec
outsb
dec
cmp
pop
or
bound
js
dec
and
fcompl
jnp
pop
fisubrl
cmp
rol
in
pop
std
out
pop
test
fsubrl
movsb
in
mov
fdivrl
mov
xchg
pop
xchg
in
mov
push
cltd
sahf
jmp
xor
sahf
xchg
mov
cmp
cmc
jno
adc
jl
rclb
adc
dec
xlat
fdivl
mov
in
xchg
and
pusha
push
pop
jae
mov
adc
jns
mov
repz
and
aas
push
lahf
mov
test
and
jge
adc
sbb
xchg
mov
rcrb
imul
and
cmp
jecxz
xor
pusha
push
popa
pop
push
pop
lahf
dec
and
iret
push
dec
rcrb
add
cld
icebp
xchg
out
shrb
cmpsl
shr
popa
push
int
jns
sub
mov
mov
mov
mov
in
mov
push
cli
jge
or
add
int3
int3
add
jo
gs
aad
add
jmp
jno
aaa
xor
or
aas
std
or
jns
add
mov
loope
popa
xchg
jp
sbb
xlat
jl
mov
mov
and
push
fidivrs
into
and
or
sahf
xchg
aad
dec
fdivs
movsb
jg
scas
inc
lock
add
xchg
xchg
pusha
ss
iret
pop
arpl
std
push
movsl
mov
mov
lds
jl
xchg
insb
outsb
std
int3
cltd
jno
repz
leave
addl
fidivs
imul
xchg
test
scas
xchg
in
jecxz
jg
fadd
popf
sbb
xor
ficomps
sbb
icebp
sbb
jae
pop
jb
jle
movsl
dec
sub
push
out
movsb
sbb
or
xchg
inc
inc
insb
lock
outsb
in
sbb
js
inc
repnz
mov
jg
or
xlat
or
push
aad
fcomi
cld
in
scas
rorb
inc
cmp
orb
fldt
sub
data16
jo
or
fisttpl
jmp
ret
inc
lcall
nop
jo
xor
lds
push
hlt
and
imul
arpl
add
fldt
push
push
enter
repnz
mov
push
sahf
xor
into
mov
aaa
or
in
push
mov
adc
sub
jl
jnp
ds
ret
pop
in
inc
aam
cld
pop
and
xchg
mov
mov
mov
adc
mov
sub
cmp
popa
mov
stos
movsb
xor
das
sarb
dec
cmp
out
cmp
insb
dec
mov
or
adc
les
insl
stc
or
jecxz
or
mov
stos
mov
daa
mov
sbb
cmp
lods
aaa
test
out
scas
pop
inc
adc
int
in
dec
bound
lds
jns
inc
sbb
sbb
aad
push
lahf
fnstcw
jno
and
sub
sti
jae
mov
inc
jl
jp
mov
mov
into
push
push
mov
mov
in
out
adc
pop
mov
nop
mov
push
fmul
iret
repz
mov
in
nop
arpl
jge
testb
insb
pop
xor
gs
pop
pusha
stc
mov
mov
inc
push
int3
cmc
inc
cltd
inc
lahf
jecxz
in
push
stc
jmp
nop
pusha
or
jg
push
std
shr
test
fstpl
pop
repnz
xchg
or
adc
jns
xchg
xchg
adc
xor
xor
je
jns
repz
mov
enter
ss
test
add
insl
aas
mov
or
xchg
aaa
les
cmc
in
or
xchg
sbb
insb
or
or
pop
ss
bound
pop
pop
jo
or
dec
lds
lret
or
or
jl
pop
or
mov
inc
mov
iret
sub
jecxz
and
cmpsb
xchg
idiv
mov
xor
mov
lret
pop
mov
mov
cmp
popf
push
xchg
js
in
jns
fdivrl
imul
daa
xor
rorb
ja
gs
out
gs
jmp
insb
adc
mov
pushf
lret
sahf
in
movb
add
fnstcw
pusha
data16
sub
popf
and
loop
cmc
lods
pop
inc
adc
pmuludq
adc
int
sub
push
or
rorl
jecxz
movsb
inc
jp
mov
inc
dec
xchg
inc
gs
jnp
jnp
loope
mov
xchg
xlat
nop
mov
mov
sbbb
movsb
sbb
sub
imul
add
idivl
pop
cmpsb
loop
mov
inc
jecxz
pop
push
jmp
xor
add
mov
sub
in
ror
jge
xor
mov
push
loopne
dec
js
mov
pop
pop
and
sahf
pop
inc
add
push
adc
mov
pop
jmp
fidivrl
loop
cmp
inc
adc
sub
das
loope
call
mov
add
cmp
sub
cmp
add
aad
stos
ret
test
jle
es
add
ljmp
test
mov
xlat
je
gs
je
mov
pusha
sbb
xor
bound
pop
inc
test
bt
or
sub
icebp
ljmp
jb
lods
out
add
push
dec
pop
mov
fists
rol
arpl
cwtl
inc
dec
repz
xor
mov
adc
sub
in
adc
clc
faddp
cmp
add
mov
jo
ror
jl
clc
sar
test
dec
sbb
mov
xchg
test
pop
lcall
mov
or
aam
add
aam
jne
mov
mov
or
sbb
clc
in
jg
addl
mov
sbb
mov
out
fadds
xchg
es
dec
and
std
clc
mov
out
fld
lahf
ret
sbb
jb
jge
cmp
pop
rorl
movsb
lods
jnp
std
jg
fbstp
jno
xor
incl
mov
andl
jg
test
xchg
mov
popa
add
jb
inc
and
fdivrl
out
inc
clc
xorl
andl
movsl
scas
add
mov
mov
mov
add
jp
test
lret
pushf
popf
sub
xchg
pop
cmpsb
and
and
pop
fiadds
ret
idivl
push
lret
xorb
insb
inc
push
fstl
jbe
inc
popf
cmp
inc
jns
fisubl
sbb
je,pn
jmp
and
stos
inc
jo
xchg
push
mov
pop
sbb
scas
xorl
adc
test
push
dec
sbb
or
add
dec
cmpsw
cmp
ja
or
inc
and
jae
adc
fsts
fwait
lock
dec
mov
push
mov
lods
jo
xor
inc
inc
stos
xchg
outsl
mov
out
pop
add
xchg
sub
call
cmpsb
and
popf
dec
insl
dec
push
loope
icebp
rcrb
and
sbb
mov
jbe
notb
js
hlt
cmpsl
shrl
scas
jl
cmp
dec
xchg
in
shl
sbb
js
sbbl
cmp
cld
mov
sbbl
mov
or
int
loop
add
inc
fadds
jo
int3
lahf
hlt
mov
mov
adc
orl
test
or
adc
xor
jns
aaa
push
lods
inc
add
test
jb
sub
add
push
sti
inc
cmp
stos
mov
push
das
ret
inc
push
ljmp
orl
lret
lret
ds
xchg
jne
jge
sbb
xor
dec
cli
dec
dec
xor
mov
inc
cltd
pop
inc
lcall
fidivs
mov
icebp
jmp
jbe
lret
xor
inc
loope
sub
bound
xchg
mov
cwtl
mov
jae
xorb
jle
jl
lods
jno
push
jae
push
lea
sbb
sbb
fildl
es
ljmp
pusha
cltd
dec
sub
aam
in
fucomp
cltd
fidivl
iret
or
adc
clc
push
cmp
out
daa
insl
xor
jmp
inc
cmp
sub
cmp
sub
popf
pop
xchg
int3
push
in
les
push
mov
fsubl
stos
ljmp
int
mov
sub
scas
jo
mov
shrb
adc
push
mov
jmp
test
bound
loopne
xchg
inc
adc
adc
sub
pop
xchg
push
mov
xchg
aam
or
popf
fimull
mov
or
xchg
mov
mov
insl
xor
cmp
enter
push
rcrb
push
xor
scas
mov
mov
adc
mull
pop
add
mov
imul
xchg
inc
mov
leave
push
jge
scas
movsb
sub
call
cltd
into
xchg
loopne
mov
clc
or
cmp
iret
adcl
movsw
adc
mov
test
xchg
pusha
fiadds
aam
and
mov
dec
aad
xor
mov
add
daa
js
mov
pop
xlat
pop
cmp
fwait
ds
mov
cmpsb
je
repz
push
xchg
xor
jbe
shr
outsb
cmpsb
mov
cmp
test
loopne
add
jno
xor
nop
nop
dec
lea
sub
cmpsb
dec
jnp
loop
fcompl
arpl
xor
mov
dec
out
xor
arpl
push
mov
call
jp
or
push
sub
mov
mov
jns
jno
lcall
call
outsl
fxch
mov
and
stc
sbb
push
in
inc
jns
imul
mov
mov
or
rclb
sub
dec
lock
jno
fidivrl
outsl
add
into
jle
loope
sti
dec
jo
outsl
in
push
mov
xchg
jo
lcall
mov
lcall
aas
cmp
jbe
mov
adcl
cmpsl
pop
jmp
hlt
inc
aas
out
push
bound
jns
int3
mov
dec
cmp
jnp
insl
add
mov
push
mov
sbb
jae
mov
adc
loop
shrb
repz
sbb
push
adc
in
mov
scas
sub
and
ret
mov
or
jle
iret
dec
pop
xchg
inc
gs
insl
out
fisttpl
jle
pop
xchg
into
sbb
dec
pop
aad
mov
mov
mov
push
cwtl
fstp
pop
xchg
mov
cwtl
je
fistpl
dec
mov
iret
lods
mov
xor
iret
iret
jbe
test
neg
das
xchg
or
popa
clc
in
arpl
push
loope
repnz
adc
sti
lods
add
and
xor
or
push
ja
out
dec
xchg
outsl
adc
xchg
popa
ljmp
xor
sbb
cmp
lock
iret
push
mov
dec
inc
sbb
mov
sbb
int
cmp
std
imul
pop
ja
sub
jge
dec
pop
outsl
repnz
shl
inc
fprem
lahf
jb
mov
xchg
mov
or
xchg
insl
addr16
pop
inc
mov
push
pop
mov
inc
orb
pop
cmp
out
adc
pop
inc
push
addr16
mov
jnp
dec
mov
or
push
add
fisttpll
mov
mov
ja
push
out
pop
pop
loope
pop
or
int3
adcl
call
fisubl
inc
imul
lock
lods
and
movsl
loopne
dec
es
pop
jge
fcompp
xchg
arpl
inc
loope
out
jge
or
fistl
xchg
in
sub
pop
bound
shl
mov
jns
mov
rol
lcall
out
into
push
ds
loop
repnz
sti
mov
mov
pop
add
inc
ja
dec
stc
jmp
mov
xor
push
xchg
lcall
jno
lea
popa
enter
push
cmp
or
ret
stos
sbb
pop
push
ret
rcll
push
xor
sbb
pusha
cmp
mov
xor
pop
inc
outsb
les
shlb
pop
fnstsw
mov
repnz
push
push
or
inc
jle
outsl
adc
movsl
pop
in
movsl
mov
gs
add
popf
adc
xlat
xchg
icebp
imul
push
icebp
cmc
xlat
jecxz
pop
add
pop
jo
cmp
jb
sti
add
mov
pop
sbb
ja
mov
addr16
mov
nop
mov
jl
sub
xchg
jge
jne
sbb
push
xchg
pop
dec
cmp
inc
shrl
fimull
pop
and
test
nop
mov
push
int3
mov
repnz
cld
mov
cmpsb
int
cltd
pop
add
jo
sarl
test
aad
js
xor
xor
sbb
mov
sub
inc
xchg
decb
into
push
jmp
jp
leave
dec
or
inc
xchg
fldt
mov
pop
clc
dec
addb
les
lcall
cmpsb
mov
aaa
mov
dec
rclb
test
mov
or
cmpsb
jl
stc
cwtl
out
ja
rcrl
cli
ja
test
cmp
mov
xchg
fmuls
xlat
xor
add
sub
outsb
test
jecxz
adc
pop
pop
addr16
lock
notb
test
idivl
insl
pop
mov
lock
jbe
xchg
repz
sbb
xor
popa
cmp
lea
and
in
xlat
xchg
xchg
aam
inc
outsl
repz
cmp
loopne
cli
xchg
repz
out
dec
xor
mov
jns
cmp
dec
add
sub
outsb
lods
ljmp
cli
sub
cmp
sub
pop
jge
dec
popf
rep
popa
push
imul
jns
mov
add
jmp
sub
xor
inc
ret
mov
rcrb
pop
fcmovbe
stc
push
loop
and
fiaddl
sbb
daa
adc
jae
call
fcoml
or
push
out
sub
data16
popa
sti
ljmp
pop
dec
pop
hlt
rorl
arpl
mov
clc
jg
jge
pop
imul
fs
std
mov
dec
cli
push
jg
push
repz
jbe
xchg
xor
pop
test
outsl
outsl
fwait
pop
or
dec
pop
xchg
or
ljmp
pop
xchg
jmp
outsb
rclb
push
ficoml
jmp
jb
adc
cmp
ror
adc
jbe
push
fwait
gs
fsubl
iret
stos
insb
or
or
sbb
or
in
sti
imul
and
mov
mov
push
sbb
jae
outsl
lods
stos
shll
mov
leave
repnz
mov
dec
shll
mov
ret
scas
insl
xor
sub
data16
jb
insl
popf
cmp
std
test
dec
fidivrs
push
xchg
outsl
iret
cld
cmc
je
cltd
stos
lcall
sbb
push
add
stc
adc
adc
shlb
fs
mov
push
outsl
psllw
adc
jnp
adc
cld
sbb
test
fadd
shr
fiaddl
pop
inc
jecxz
jmp
jns
movsl
adc
jae
mov
mov
mov
ljmp
add
dec
test
sub
gs
aam
jmp
cmp
cli
adc
std
push
jmp
inc
imul
jl
mov
leave
dec
mov
dec
cwtl
mov
and
cmp
adc
and
cli
and
jo
push
fbld
push
movsl
in
xchg
inc
dec
imul
insb
into
insl
std
cli
call
cmp
les
repnz
test
mov
pop
push
sbb
push
les
or
mov
mov
mov
pop
loopne
dec
sbb
xor
std
arpl
mov
cmp
jg
sub
cmp
xchg
sbb
ljmp
stos
sub
out
stc
out
mov
push
add
movsl
fisttps
mov
cs
pop
mov
aam
sar
jg
popf
jbe
in
sub
and
fnstcw
jle
mov
pop
cmpsl
cmp
cld
xchg
push
jbe
xchg
lods
filds
or
stos
into
and
xchg
gs
arpl
sahf
push
adc
notl
mov
in
popf
jmp
andl
push
inc
sarb
push
sub
jb
test
cmpsb
repnz
lcall
sbb
loop
adc
clc
jl
pop
pop
in
inc
pop
inc
loopne
add
sbb
mov
inc
pop
mov
stos
mov
fldlg2
pusha
inc
adc
or
daa
mov
sub
cwtl
ljmp
insb
pop
pop
push
dec
js
roll
or
mov
xchg
int3
icebp
addr16
imul
mov
leave
pop
jl
inc
aaa
fildl
mov
xor
pop
fs
push
cmpsb
mov
sub
or
dec
aaa
inc
test
cli
arpl
out
adc
xor
inc
lods
push
and
bound
push
rorl
sahf
cmp
xor
mov
xchg
mov
cli
or
and
and
loop
jge
cmp
repnz
push
jbe
iret
xor
out
cmc
jmp
scas
mov
fucom
fsubl
std
cmpsl
jmp
aam
or
pop
and
lock
sbbb
push
mov
adc
xor
sbb
push
shll
out
jle
es
mov
sti
sbb
sub
push
imul
enter
std
push
push
dec
cld
pop
xor
xorl
dec
sbb
pop
push
sbb
dec
xchg
sar
adc
sub
cmpsb
test
xchg
or
or
jo
sbb
fs
or
xchg
pop
cmp
pop
xchg
jge
lret
or
mov
pop
and
jno
xchg
push
hlt
jecxz
rcrl
push
repnz
and
jno
pop
incb
cmp
out
xchg
icebp
lds
xor
sbb
out
mov
sbb
ljmp
mov
push
orb
mov
shr
adc
leave
ss
test
in
adc
jl
jno
lock
stos
xchg
push
mov
pop
popf
repz
push
adc
imul
sbb
add
jns
out
or
sbb
int
shll
mov
int
out
and
hlt
push
cmpsb
mov
iret
in
imull
pop
loop
add
loop
out
mov
imull
xor
dec
adc
adc
sti
out
nop
push
jmp
pop
sub
lods
shrb
and
test
insl
loopne
das
fs
popf
pop
test
add
ljmp
mov
daa
jbe
pop
mov
adc
shll
push
or
jmp
mov
mov
push
popa
mov
sti
sbb
cmp
mov
mov
add
xchg
add
into
in
hlt
xchg
or
lret
pop
sub
shll
add
add
sbb
inc
and
mov
out
mov
adc
in
inc
add
xor
lods
mov
roll
or
inc
daa
fsubs
stos
insb
jnp
mov
mov
loop
fisubl
test
and
pop
sti
push
int
cmp
and
insb
mov
int
xchg
das
or
out
inc
xchg
push
jp
xchg
sbb
dec
bound
lcall
cmp
mov
outsb
mov
shlb
mov
data16
cltd
mov
repz
mov
xor
imul
jmp
mov
je
sahf
mov
mov
sbb
fistpll
aas
inc
jl
jge
adc
popf
in
adc
sbb
lahf
shrb
stos
in
jle
rcrl
mov
or
ror
sub
in
adc
adc
aas
sahf
dec
inc
push
in
js
out
add
push
repnz
mov
inc
rcll
inc
cwtl
imul
push
aaa
dec
loope
out
xacquire
push
mov
sbb
rorl
mov
cmpsl
dec
mov
jmp
lods
sbb
push
lock
xchg
enter
outsb
push
pop
xor
in
shll
jecxz
ret
xor
daa
mov
push
je
inc
dec
loopne
inc
daa
je
leave
test
mov
popa
pop
iret
jmp
xor
in
xchg
shrl
mov
sub
dec
dec
notb
aad
xchg
xchg
adc
popa
mov
mov
or
mov
sti
int
or
xchg
inc
stc
inc
int
cmp
mov
pop
or
sbb
xor
xchg
scas
ds
cmp
test
ljmp
pop
sub
mov
jno
cmp
fs
xor
adc
cmp
or
jge
and
xchg
les
jmp
jnp
fsubl
xor
rclb
dec
lods
stos
jnp
cmp
cmp
push
cmp
insb
mov
jg
inc
cmp
or
jo
or
call
in
push
jb
mov
mov
push
lds
jae
mulb
pusha
adcb
push
out
rcrb
cmpsl
out
mov
aaa
push
inc
add
pop
out
sub
sbb
xrelease
inc
insb
cs
out
jge
mov
mov
sub
mov
mov
movsl
and
and
stos
xor
sarb
cld
mov
jl
cmp
sbb
out
push
cmp
pop
rdmsr
push
mov
or
sbb
lods
fdivrl
mov
dec
cmpsl
stos
dec
sub
add
add
jecxz
xchg
and
xchg
jne
mov
push
or
or
cmp
add
in
and
jno
mov
inc
sub
inc
mov
gs
clc
sub
cmpsb
popf
hlt
loopne
int3
stos
add
jg
in
sbb
js
xor
sub
mov
mov
clc
aas
and
popf
dec
sbb
movsb
xor
fwait
iret
mov
sbbb
aaa
aas
push
cmc
sbb
rorb
sub
xchg
jge
addr16
adc
gs
cwtl
insb
cltd
js
loope
xchg
sub
add
outsl
orl
popa
mov
ret
cmp
push
sbb
and
mov
out
and
dec
lret
cmp
mov
out
mov
ds
lock
cmp
adc
mov
xchg
inc
sbb
ss
xor
push
icebp
push
fbld
jmp
clc
adc
pop
or
add
stos
or
jl
xchg
das
push
outsl
orb
fisttps
and
lcall
pop
inc
adc
mov
mov
cmp
imul
outsb
xchg
push
stos
jmp
sub
icebp
sbb
mov
and
sub
aaa
lahf
mov
pop
push
ja
iret
je
addb
fildll
pushf
pop
dec
or
push
sahf
push
inc
bound
jg
push
mov
dec
mov
mov
dec
mov
xchg
cs
enter
mov
cli
add
inc
xor
xlat
test
stc
outsb
mov
ds
es
mov
mov
cmp
movsb
subb
hlt
jmp
movsl
jne
jle
xchg
in
mov
or
lcall
loopne
mov
fsubrs
aaa
aad
push
int
adc
rcrb
mov
jmp
shll
jl
clc
aaa
mov
hlt
pop
scas
lahf
popf
dec
and
push
jmp
add
jnp
testl
adc
sub
mov
icebp
xlat
dec
test
mov
and
sub
imul
sarb
xchg
push
and
and
daa
xor
mov
inc
imul
pop
push
sar
mov
aad
inc
cli
js
inc
in
xchg
cld
sbb
jno
cmpb
test
push
xchg
cwtl
ljmp
ficoms
subb
sub
ja
test
negb
sarl
sub
cmp
mov
std
andb
scas
push
mov
int3
and
pop
aad
mov
scas
divl
inc
jg
pushf
mov
clc
mov
jb
or
add
dec
lahf
mov
inc
xchg
dec
pcmpeqd
cld
cwtl
mov
push
inc
sub
adc
sub
testb
push
call
mov
xlat
xor
cmp
adc
pop
inc
jns
xor
jg
imulb
inc
sbb
out
js
mov
xchg
jmp
inc
testl
dec
xlat
inc
mov
add
dec
mov
mov
push
or
test
sub
out
andps
mov
nop
lahf
cmp
mov
movsb
xchg
fiaddl
repnz
mulb
and
cmovs
mov
ret
or
into
insb
mov
mov
sub
push
out
lcall
adc
int3
out
push
out
dec
jns
dec
jge
imulb
repz
hlt
dec
and
sub
sbb
xlat
mov
out
pop
clc
xchg
cmp
add
sub
movsb
mov
mov
pop
dec
xchg
xor
out
sub
rorl
mov
lahf
adc
pop
scas
xor
pop
leave
add
cmpsl
icebp
loope
movsl
je
pop
fs
mov
mov
xor
not
and
popa
frstor
push
jmp
mov
aad
mov
dec
fwait
mov
mov
test
mov
dec
inc
loope
mov
hlt
mov
adc
mov
rcrb
in
test
movsb
js
mov
pop
scas
sbb
clc
shlb
nop
addl
and
ss
and
sti
or
fisubrl
mov
push
sbb
add
scas
or
cmp
iret
jle
push
imul
xor
out
test
or
pop
fsubs
add
cmp
jb
test
sub
jb
ret
cmp
cmpsl
dec
popf
js
jo
cmc
clc
insb
mov
cmp
dec
sbb
aas
fmull
push
sub
sub
mov
add
push
cmp
out
call
fucom
adc
les
aam
outsb
aad
sub
jge
ja
aaa
xor
ret
lahf
pop
aad
xor
fadds
mov
ss
push
jge
or
loop
and
add
sbb
xchg
adc
imul
jbe
add
xchg
sub
mov
stos
rolb
or
in
and
leave
gs
fsubrl
setl
xchg
jg
xor
inc
lahf
mov
loopne
int
cwtl
cmp
sub
iret
lods
jbe
adc
jae
push
bound
cmpsl
mov
xchg
mov
ficompl
cmp
std
xchg
arpl
xchg
repz
xorb
adc
stos
lods
mov
fildll
mov
xchg
xchg
mov
fiadds
call
and
shrb
sub
sahf
jle
stos
outsl
cmp
gs
sahf
push
stc
scas
fstpt
lcall
inc
mov
xchg
insl
mov
xor
stos
mov
push
sub
fildll
loop
jno
insl
xor
cwtl
jb
aam
mov
xor
fisubs
or
mov
loopne
and
popf
dec
shlb
arpl
imul
in
addr16
outsl
ret
jno
xlat
jge
mov
lock
sub
jo
mov
push
mov
dec
enter
pop
cmpb
jge
scas
push
lcall
es
mov
inc
adc
fmul
inc
lds
pop
jae
test
mov
lea
aaa
push
shl
mov
mov
add
and
add
rcll
mov
mov
pop
mov
dec
cmp
out
cmp
or
pop
or
cmpl
mov
mov
push
in
sub
sarb
mov
pusha
pop
out
subl
pop
out
out
hlt
aad
cwtl
ret
mov
mov
test
loope
xor
shll
sub
xchg
jae
sarb
and
lea
aam
lods
push
loop
push
mov
ret
movsl
jge
mov
je
mov
xchg
push
lahf
inc
sbb
dec
stos
loop
inc
sub
sub
push
mov
lcall
mov
add
mov
inc
ja
mov
mov
sub
adc
rclb
and
cmp
or
inc
xor
dec
movsl
pop
in
sbb
cltd
mov
or
fmul
pop
inc
clc
xor
sbb
or
lods
arpl
andb
dec
add
cmp
lds
mov
xor
rorb
mov
sub
cs
addb
push
xor
cmp
xlat
sarb
outsb
xchg
imul
aad
mov
icebp
add
mov
xchg
pop
int3
or
xchg
sbb
push
push
aam
jbe
shl
sub
test
cmp
nop
xor
jnp
jns
leave
ja
nop
cmp
repnz
inc
pop
xlat
add
sbb
je
test
mov
or
cmc
add
sub
test
daa
mov
cmpb
sbb
fwait
adc
aam
jge
les
je
aaa
clc
enter
out
in
sub
xchg
cmpl
imulb
dec
mov
orb
or
jo
mov
jg
outsl
inc
pop
sbb
adc
ret
in
stos
cs
and
fisttpll
ficoml
arpl
add
out
xor
repnz
sub
repz
mov
test
inc
decl
stos
popa
xchg
sbb
push
std
adc
cmp
shl
sub
ror
mov
lods
ds
sbb
ds
lret
iret
leave
mov
cs
fidivrl
jae
pop
fs
adc
sub
jmp
js
ja
pop
jbe
movsl
mov
out
mov
push
adc
cmp
fistpl
rclb
xor
repnz
inc
test
ljmp
or
mov
insl
dec
iret
push
xchg
push
nop
mov
inc
sarb
and
dec
fs
clc
jo
sub
xchg
fwait
int3
pop
data16
lods
sbb
sahf
std
mov
add
dec
xchg
add
out
in
xor
dec
lcall
pop
mov
out
fnstcw
sahf
test
lcall
push
lcall
jo
pusha
or
fisttpll
push
dec
lods
jg
out
add
int3
shrl
xchg
mov
pop
stc
test
and
adc
andl
icebp
jne
shrl
das
push
and
ljmp
daa
ljmp
mov
mov
mov
pop
mov
inc
ror
mov
gs
mov
mov
data16
or
cmpsb
inc
pop
pusha
xchg
mov
jp
rol
pushf
cmpsb
mov
dec
in
sbb
daa
inc
fmull
jb
ficoms
mov
test
test
movsb
jmp
push
rcll
adc
jb
int3
inc
sbb
test
mov
fbstp
dec
cmp
xchg
jmp
xor
shl
clc
test
popf
imul
or
mov
lcall
and
rclb
dec
ficompl
add
mov
test
fwait
push
movsl
or
xor
sub
cmp
inc
cmp
inc
sub
pop
pop
pop
adc
bound
sub
jl
sub
andl
pop
bound
jo
jo
fcom
imul
shlb
fstl
xchg
inc
cmp
mov
pop
js
scas
and
ljmp
paddq
dec
cmp
mov
lea
xchg
jae
ret
adc
pop
leave
push
xor
mov
aas
add
mov
fwait
dec
xchg
aad
mov
cmp
push
andb
push
and
lods
pop
rolb
jno
stos
andl
xlat
stos
mov
andl
push
push
nop
das
scas
std
add
jbe
cmpsl
outsb
pop
js
sbb
arpl
jbe
or
inc
mov
xor
dec
lods
loopne
push
cmp
scas
mov
mov
fldl
int
rclb
fstpt
mov
jbe
lret
cmpsb
shrl
jmp
sub
mov
loopne
fwait
mov
ss
pop
jmp
adc
pop
icebp
cmp
cmp
lret
fnstenv
lods
loopne
pop
pop
add
imul
leave
dec
mov
mov
fiaddl
adc
adc
mov
jg
cmp
mov
dec
xchg
nop
leave
clc
sub
scas
push
and
fnop
scas
ret
fwait
out
aad
adc
mov
mov
mov
jmp
pop
repz
pop
mov
aad
lods
xchg
inc
and
lds
shll
adc
dec
pop
clc
aaa
shl
icebp
imul
fdivrs
pop
mov
cmp
sub
insb
stc
or
sti
add
nop
mov
inc
sub
inc
imul
lret
fdivs
lret
mov
lahf
dec
inc
in
cmp
test
xlat
jge
and
pop
jnp
xchg
lahf
mov
xchg
adc
mov
cwtl
addr16
cs
push
aam
add
xlat
fcoms
jo
or
push
cmpsl
rcl
repnz
xor
push
loop
sahf
or
into
arpl
xchg
sarl
pop
fidivl
xor
push
cmp
cmp
shlb
mov
jbe
push
ss
enter
repnz
pop
aad
stos
jl
dec
cltd
shrl
int
into
mov
adc
imul
cld
mov
lret
imulb
xchg
push
shll
and
sbb
sbb
dec
xor
sbb
nop
shlb
lea
fldenv
mov
ret
dec
adc
pusha
shrl
pop
push
test
shll
push
call
adc
jo
loopne
mov
leave
out
ret
or
outsb
sbb
scas
gs
popa
daa
das
les
leave
test
xchg
cltd
test
rorb
pop
mov
xchg
decl
mov
into
mov
mov
addr16
mov
xor
mov
data16
mov
lahf
cwtl
aaa
lods
xlat
decl
mov
push
jp
fs
fnsave
stos
push
inc
adc
ret
test
call
lret
lcall
int3
gs
jbe
or
and
hlt
fcomi
mov
ss
dec
and
ja
xchg
mov
mov
test
dec
and
in
out
andb
sbb
push
lods
dec
and
xor
adc
cmp
mov
add
push
mov
mov
sub
cmp
ds
fwait
daa
jb
or
bound
loope
or
dec
or
xchg
or
fsubp
inc
lds
rorl
sar
ljmp
sbb
cmp
orb
aas
jns
or
xor
inc
push
loopne
mov
and
push
fistl
and
test
push
sbbl
addr16
mov
pushl
cmpsb
lock
xchg
push
outsb
push
mov
jne
sbb
cltd
scas
in
dec
or
xlat
or
mov
sub
outsl
lret
rol
push
jb
cli
dec
fisubl
cmp
xchg
popa
jbe
mov
sarl
and
jecxz
les
jg
mov
icebp
pop
and
inc
imul
sbbl
lods
ljmp
test
jmp
lahf
dec
fidivl
rclb
xchg
jp
or
or
mov
imul
rcrb
or
xor
out
push
cmp
aad
pop
movsl
daa
loope
mov
int3
jns
lods
push
adc
jb
xor
xchg
cmpps
sub
dec
sub
push
sti
sub
shlb
popa
or
sub
mov
push
mov
mul
sub
je
cwtl
loope
adcl
testb
out
dec
adc
aam
std
fdivrl
jle
pusha
inc
cli
adc
jne
ss
adc
mov
out
xchg
mov
inc
loope
sbb
lds
jae
js
mov
jne
fadds
mov
sbb
add
pop
movsl
sub
pop
or
hlt
arpl
jl
sbb
iret
movsl
mov
out
test
lret
push
insl
mov
dec
out
test
mov
addr16
sub
or
jmp
sub
mov
add
aad
xor
shll
sub
sub
inc
adc
out
xlat
inc
dec
pop
fimull
mov
mov
mov
pop
xor
fistpl
push
out
fisubrs
adc
mov
pop
xchg
cmp
mov
push
sub
sbb
xor
loop
idivl
outsl
out
or
sub
out
mov
cmc
pop
fistpl
lods
mov
je
bound
cltd
pop
fcmovnbe
sub
mov
mov
out
lcall
ss
faddp
dec
aaa
out
mov
mov
dec
push
shll
pop
loopne
shlb
shlb
add
sub
lds
orb
mov
adc
jmp
or
jmp
int3
cmp
sub
ficompl
xor
nop
cmp
ljmp
ret
inc
sub
orl
add
jg
add
dec
mov
jnp
dec
sub
mov
dec
inc
jae
mov
xor
mov
fsub
push
fisubrs
pop
mov
mov
mov
mov
xor
push
push
jno
leave
add
in
add
and
movsb
loopne
mov
add
jecxz
jns
jo
daa
pop
mov
pop
fcoms
fsubrl
dec
cs
cld
aam
loop
jo
cmc
push
or
es
mov
push
pop
or
add
stos
pop
jecxz
aad
in
jns
ljmp
push
jge
stc
ljmp
or
lahf
dec
js
push
xchg
sub
out
sub
mov
pop
xchg
mov
mov
mov
ret
inc
lods
in
leave
sub
scas
sbb
cmp
or
dec
sbb
adc
nop
push
dec
and
cmp
xchg
ret
aaa
aam
sbbb
xchg
lcall
rcrl
mov
dec
repnz
mov
jle
movsb
call
pop
cmpsl
icebp
cmc
dec
das
ljmp
cli
sbbl
bound
cltd
mov
fmull
mov
mov
inc
jl
mov
fdivs
cmp
scas
nop
mov
pushl
cltd
jno
and
push
fcoms
pop
sbb
sarl
jp
cld
cmp
popf
mov
xchg
sbb
fdivr
push
repnz
dec
mov
pop
lret
jle
lret
sbb
pop
aam
jns
rorb
adc
rclb
aam
inc
or
out
loopne
xchg
ret
loop
sub
mov
hlt
mov
or
and
fwait
ds
pop
int3
push
rolb
jae
pop
mov
fisubrl
jb
lret
push
arpl
jmp
in
pop
je
mov
sbb
hlt
out
fistpl
cmpsl
idiv
popf
lock
aas
cmpsb
adc
dec
and
sub
cwtl
mov
bound
pop
jmp
sub
adc
xor
sbb
mov
fsubrl
dec
into
test
cmp
gs
push
xchg
xlat
andl
xchg
cmp
push
popf
jg
ficomps
mov
jp
repz
test
push
xchg
push
cltd
sub
ret
mov
ds
cwtl
out
adc
orb
out
into
int3
ds
cwtl
int3
xchg
ret
inc
mov
out
and
test
popa
daa
add
xchg
xor
int
sbb
shr
les
jb
daa
dec
mov
scas
int3
xchg
ret
movsl
test
pop
mov
dec
jne
and
jo
pop
mov
loopne
jl
cmp
call
fst
fsubs
popf
pop
jo
cmpsl
icebp
call
lret
mov
aad
inc
pop
mov
cld
push
lock
ret
js
mov
mov
pop
movsl
add
orb
fadds
mov
icebp
aad
cmp
subb
and
repnz
mov
mov
and
jmp
and
ret
adcl
and
mov
cmpsl
push
call
xor
xchg
clc
cmp
cmpsl
and
movb
mov
call
or
or
popf
jl
push
mov
pusha
cmc
cld
mov
push
mov
scas
ret
xlat
ds
mov
inc
pusha
pop
mov
sub
jns
inc
push
popl
jne
arpl
ja
mov
imul
mov
adc
pop
ljmp
sbb
jno
sub
pop
roll
xchg
sub
std
cwtl
push
add
xchg
stos
dec
adc
add
cmp
mov
and
inc
insl
push
out
lcall
insl
pusha
or
cmp
mulb
call
out
and
add
stos
scas
int
add
inc
stos
mov
orb
mov
xor
sbbl
adc
inc
cmp
sub
sarb
iret
call
sbb
push
cmp
or
test
lret
jne
sarb
mov
mov
mov
inc
cld
mov
mov
push
sbb
inc
adc
in
out
arpl
jecxz
lods
mov
fisttpl
push
aaa
xor
lahf
pop
inc
dec
and
sbb
aaa
outsb
fcom
hlt
std
jb
icebp
push
cwtl
ljmp
std
xchg
int3
xor
fsubrl
xor
loope
or
popa
xor
push
jl
xchg
pusha
lods
ret
push
inc
ret
out
cltd
and
es
lahf
jbe
jne
mov
aam
insb
std
aas
xlat
out
xor
lcall
push
ljmp
lods
loopne
push
ss
popa
mov
sti
pusha
fwait
lahf
sbb
and
mov
out
jp
inc
aas
out
mov
mov
dec
rcl
add
aam
and
mov
fld
test
sbb
sbb
cld
inc
mov
loopne
addl
cmp
popa
outsb
dec
push
jne
pop
movsl
aas
lock
pop
dec
nop
scas
movsl
lahf
fs
push
jmp
mov
ret
cmp
test
outsb
jbe
call
loop
push
repnz
out
testl
test
mov
fs
test
arpl
mov
lret
jecxz
xchg
enter
xor
sub
nop
jecxz
icebp
add
xchg
nop
lret
aaa
cmpsb
push
lcall
push
clc
mov
test
jno
and
mov
test
pop
lods
jp
push
cwtl
pop
aaa
dec
arpl
inc
xor
adc
and
out
jl
cmpsl
lret
push
fwait
ds
scas
lds
stos
cmpl
scas
lds
pop
mov
or
aaa
jle
adc
push
push
push
or
adc
jbe
stos
mov
hlt
mov
lcall
scas
frstor
fisubl
cmc
iret
mov
fs
out
test
mov
hlt
jmp
and
lock
sbb
loop
jmp
push
out
loope
fldt
enter
dec
cmp
push
jne
insl
repz
add
lds
push
xor
push
xchg
push
out
cli
jle
dec
add
add
jl
cld
mov
scas
pop
lock
imul
repz
aas
and
xor
mov
push
gs
sbb
dec
mov
outsb
xchg
cmp
dec
dec
and
pop
popa
adc
push
and
out
jb
fisttpll
sbb
push
int
data16
and
cltd
cmc
mov
int
or
mov
inc
sub
mov
popf
inc
out
xor
aam
xlat
mov
pop
xchg
or
pushf
lods
outsb
movsl
cltd
push
adc
pop
and
fstp
sub
sbbb
add
xor
loopne
inc
jmp
xor
sub
aaa
lock
jno
lret
inc
adc
punpcklwd
bnd
mov
mov
xchg
pop
sbb
ret
cmp
loopne
sbb
add
fwait
jns
and
subl
adc
xlat
in
lret
and
test
push
inc
xchg
mov
iretw
cmp
test
loope
adc
sub
dec
mov
fcmovbe
mov
dec
cli
mov
rorb
leave
adc
stos
push
out
or
adc
popf
sub
jb
and
pop
jns
roll
xor
in
das
and
or
idivb
out
outsl
hlt
sub
stos
sbb
lahf
sub
pop
mov
mov
repnz
popf
inc
sbb
out
pop
lds
iret
sub
xlat
push
mov
pop
test
jne
scas
pop
inc
mov
popa
test
int
inc
and
divb
pop
dec
xchg
test
dec
jae
into
dec
adc
pop
adc
cwtl
std
pop
mov
xor
int3
test
push
cs
cmp
cmp
xor
scas
sub
cwtl
lahf
lock
mov
out
dec
mov
movsl
cmp
ss
push
fists
jne
push
sub
lock
in
xchg
add
adc
fiadds
sahf
mov
js
test
sbb
test
iret
or
popa
lea
mov
sub
loopne
inc
rclb
pop
outsb
arpl
xchg
hlt
mov
sbb
dec
sbb
jle
daa
pop
ret
sbb
inc
push
sbb
aam
ret
dec
movsb
roll
xchg
push
inc
sbb
in
ret
mov
xchg
andl
dec
sub
aad
mov
add
jbe
clc
insb
sub
aad
mov
xor
xchg
mov
stc
push
ret
cmp
icebp
inc
cmpl
sarb
mov
test
pop
mov
fistl
push
lock
mov
jle
fldcw
add
jle
mov
js
incb
ss
push
jbe
dec
xor
int
stos
call
mov
cltd
add
sub
movsb
lea
mov
push
hlt
dec
dec
js
add
mov
dec
push
mov
xlat
pushf
aas
ret
ret
lea
shl
shrb
andl
mov
add
jns
orl
insl
leave
test
clc
lods
cmp
jbe
rol
push
push
imul
not
divb
lock
repnz
pop
jb
push
jp
mov
pop
push
inc
call
adcb
adc
sub
cmc
mov
lahf
inc
sub
mov
sbb
jae
fimull
push
pusha
cmpsb
pop
popf
in
insb
rorw
ja
dec
xor
fistps
bound
daa
sub
push
cmpsb
mov
fnstsw
mov
fwait
mov
xchg
lods
add
mov
or
pop
mov
mov
pop
mov
repz
pop
mov
fwait
stc
ret
std
test
stos
pop
xlat
sbb
in
inc
out
xchg
jae
mov
jns
lret
or
inc
mov
negb
inc
lock
lods
sub
pushf
jne
sbb
inc
or
shll
leave
mov
stc
in
aaa
movsl
test
rcl
cltd
xchg
sbb
insb
popf
fnstsw
dec
testb
cmp
les
lret
mov
mov
and
dec
int
and
mov
dec
shll
pop
insl
pop
ljmp
mov
aas
push
adc
in
jg
fsub
pop
and
outsb
es
jne
rcrb
sbb
cmp
mov
out
cmp
loope
inc
js
shrl
and
jb
mov
fnstenv
xchg
xchg
push
add
fs
inc
sub
xor
xchg
cmpb
cmpsl
pop
pop
cmp
push
inc
dec
adc
test
sub
fiadds
cmp
cmp
sahf
mov
mov
mul
or
out
es
fs
cmpsl
adc
lods
or
in
jae
mov
ret
es
aaa
and
mov
push
roll
fdivrl
lods
inc
int
loope
push
pusha
mov
mov
repz
xor
xor
inc
jmp
aam
incl
imul
out
xor
data16
adc
rcrb
pop
adc
xor
sub
movsl
cmp
rorb
test
sbb
cmp
xchg
fdivrl
scas
movsl
fldcw
cs
ret
push
ret
movsl
pop
cli
sub
addr16
and
or
push
out
in
jmp
in
jle
cmp
sbb
or
mov
fnstsw
int
outsb
fimull
je
mov
test
mov
sub
xor
sub
inc
call
sbb
testb
out
add
lfs
and
inc
fsubrl
cmpsl
aad
enter
fwait
insl
popf
and
dec
mov
xor
lahf
movsl
or
outsb
adc
add
stc
cmp
or
push
dec
lods
ficoms
dec
out
pushf
sahf
pop
cld
mov
mov
sbb
roll
not
jb
das
rorl
sub
fs
loope
sti
add
repnz
mov
mov
push
mov
adc
mov
xchg
loopne
jecxz
cwtl
lret
adc
movl
adc
lcall
bound
cmp
mov
sbb
mov
mov
mov
imul
repz
mov
sbb
cli
sub
mov
cmp
cmp
inc
loop
fidivrs
xchg
fwait
leave
out
mov
lret
test
push
insb
cmp
add
jnp
lret
fistl
vpslld
in
push
dec
leave
mov
mov
mov
bound
movsl
jbe
cmp
xorb
xor
inc
inc
nop
pop
mov
test
or
dec
outsl
mov
xor
addr16
push
cmpl
std
lret
outsl
loope
cmp
stos
scas
xchg
mov
ja
cwtl
and
scas
ljmp
mov
pop
pop
stos
subl
into
mov
jae
ret
pop
in
in
cmp
mov
dec
scas
repz
mov
jmp
jg
gs
sbb
popa
mov
stos
push
jmp
xor
and
shll
pop
push
push
inc
push
adc
sub
cmc
and
pop
push
inc
mov
cwtl
xchg
lock
push
or
sbb
and
mov
insb
inc
stos
add
xchg
rcll
outsb
xchg
inc
mov
iret
add
lcall
stc
les
icebp
movsb
mov
dec
mov
sbb
push
pop
or
pop
jecxz
js
je
push
xchg
jnp
mov
mov
inc
aaa
xchg
js
fidivs
pop
mov
sbb
shrl
and
std
mov
out
cli
add
clc
jecxz
ss
insl
int3
in
xor
add
daa
clc
adc
loop
push
push
jno
cwtl
popf
sub
push
stos
cli
mov
pop
sub
sarb
orb
aad
sbb
add
lds
add
pop
jp
xchg
adc
repz
int3
jns
incl
jmp
or
repz
ficomps
ret
cmp
adc
inc
xchg
call
cld
xor
fbld
scas
sbbb
addr16
dec
popf
dec
jno
cmp
push
jb
sbb
lods
pop
xor
mov
test
cmpl
or
xchg
jmp
xchg
sbb
or
movsl
pop
mov
enter
lret
jae
sub
and
dec
mov
add
cs
ss
repnz
dec
jp
or
aas
adc
mov
dec
movsl
adc
shll
imul
sbb
or
mov
das
or
adc
inc
imul
roll
scas
jne
adc
addr16
js
pushl
inc
sbb
dec
sub
jo
into
addb
cli
in
pop
push
lea
sub
popa
mov
mov
data16
mov
faddp
xor
or
fcmove
bound
mov
xchg
fnstsw
pop
stos
movsb
loop
add
pop
fisubrs
push
jnp
ss
imul
lcall
jne
mov
test
arpl
shll
ficoml
pop
or
adc
cmp
data16
xor
stos
sti
repnz
jbe
or
pop
lds
dec
or
jmp
inc
add
mov
or
mov
mov
pop
sbb
jb
xchg
imul
cmc
sbb
or
mov
mov
cmp
xor
out
hlt
hlt
enter
pop
mov
fldt
push
mulb
iret
cli
sbb
int
scas
rorl
mov
stos
lock
jb
mov
inc
mov
mov
dec
imul
cmpsb
xor
pop
pop
push
scas
cmp
movsb
out
xchg
sub
leave
jo
jge
sub
sbb
or
aas
push
sub
mov
out
or
aaa
jmp
pop
repz
sahf
inc
mov
add
jmp
faddp
or
adcb
cmovs
fldl
and
xor
adc
add
mov
rolb
sub
xchg
aam
in
repnz
cmp
test
dec
xor
fcompl
mov
aas
clc
sets
popf
sbb
inc
pop
push
mov
lret
sbb
cmp
jne
or
cmp
adc
mov
push
add
arpl
xchg
out
incl
sbb
outsl
mov
cwtl
je
adc
mov
aaa
jno
pop
popa
ret
jns
cmp
dec
ljmp
dec
icebp
insl
pusha
mov
hlt
inc
push
lret
xchg
shlb
gs
xor
icebp
es
dec
jp
fxch
out
jns
sub
sub
xor
push
lock
adc
sbb
movsl
and
into
popf
orb
push
fadd
add
mov
sbb
notl
or
out
in
int3
push
loop
ss
xchg
addr16
xor
leave
pop
cmp
pop
movsb
xlat
aad
ja
jo
movsb
push
fwait
pop
pop
jg
dec
nop
push
cmpsb
sbb
mov
arpl
mov
and
mov
dec
and
add
js
fcmovnbe
call
adc
cmpb
ss
mov
mov
xlat
adc
rcll
pop
dec
dec
mov
pop
push
cmp
pop
push
sahf
sub
cltd
es
push
push
mov
mov
shlb
jo
xor
lcall
sbb
daa
adc
sub
idivb
lock
sahf
fisttpl
push
push
imul
add
mov
ja
and
adc
lods
js
cmpsb
mov
sub
lret
das
andl
es
or
imul
jle
loope
sti
es
xchg
cld
das
lea
pop
aam
ljmp
cmp
or
nop
cmp
lock
dec
sbb
rorl
aaa
mov
dec
adc
sbb
out
imul
mov
pop
pusha
mov
fcomps
dec
add
mov
cmp
jge
xchg
add
clc
cld
cltd
stc
cmp
xchg
sbb
cmp
jne
out
aas
inc
mov
int
xchg
aad
out
pop
mov
movsl
repnz
faddl
movb
or
loop
js
sub
sub
cmp
push
push
sbb
xor
push
jbe
divl
fisubl
push
cltd
scas
pop
dec
add
mov
sub
daa
dec
mov
cwtl
ficomps
xor
div
fst
js
add
mov
push
jg
xchg
pop
shrl
ror
jp
dec
out
fldt
call
inc
adc
push
pop
test
mov
cmp
push
inc
sub
fwait
loopne
xor
movsb
test
out
mov
lods
fucomi
jns
mov
push
mov
std
ret
hlt
xor
mulb
or
pop
inc
fldt
jmp
icebp
es
cltd
lea
pop
mov
mull
icebp
bound
aad
test
mov
cli
add
xchg
aam
in
cmc
inc
test
lods
ret
mov
movsl
and
ljmp
lcall
xor
fsubr
sbb
pop
mov
nop
sbb
adc
jnp
pusha
test
andb
outsl
mov
mov
xlat
std
xchg
mov
jge
or
jbe
and
adc
rol
and
popa
push
mov
and
pop
in
lea
std
dec
popl
and
xchg
testl
mov
adc
sub
mov
cli
jns
push
pop
mov
cli
fwait
sbb
jno
aas
insb
loop
out
pop
cld
leave
pop
loop
inc
data16
mov
add
pop
or
push
inc
lock
add
dec
xchg
or
testl
loope
test
push
je
and
dec
push
shlb
xchg
mov
fsubrp
imul
sbb
and
pop
nop
cmp
push
push
xor
cmp
or
sub
xor
scas
xchg
cmc
shr
pushf
dec
aad
outsl
je
pusha
std
daa
pop
and
mov
jl
xor
sbb
testl
movsb
shl
fidivrl
push
add
jp
sbb
je
inc
cmp
xor
lahf
jns
cld
scas
outsb
lcall
mov
aaa
stc
and
cmpsl
pop
add
cmpsl
mov
popf
roll
pop
or
xor
stos
push
or
mov
mov
aam
cmovs
mov
fldenv
fistpl
mov
mov
ja
adc
test
clc
lods
pop
orl
jg
into
mov
cmpsl
pop
loop
cmp
sbb
dec
les
popf
pushf
dec
or
sbb
adc
mov
outsl
test
dec
mov
sub
mov
mov
mov
inc
jb
mov
ret
jp
aam
cmp
and
add
xor
mov
push
mov
dec
jo
jmp
mov
push
mov
push
or
gs
jae
dec
inc
xchg
pop
jmp
shlb
jmp
sahf
xchg
mov
fcoml
xchg
shlb
scas
imul
sub
das
mov
lcall
cmc
cmpsl
rorb
sar
sub
add
and
add
pop
es
dec
sub
cmp
fwait
and
mov
jo
jb
into
mov
lds
push
jne
xchg
sub
cli
or
cmc
push
out
add
push
and
pusha
adc
mov
jge
enter
xor
les
in
cmp
add
sti
imulb
mov
mov
out
and
loop
cltd
shlb
les
xor
fcomp
add
ficoms
dec
push
sti
rcr
mov
sbb
lea
imulb
repz
xchg
dec
cwtl
sarl
dec
ljmp
dec
push
scas
nop
mov
js
rcr
int3
pusha
push
jg
bound
lods
or
mov
pop
or
lock
std
mov
xor
das
pop
lock
mov
sbb
popl
mov
or
int3
into
imul
or
rorb
fs
cmp
leave
loopne
inc
dec
mov
fs
push
inc
cltd
popf
push
adc
sbb
shlb
mov
sub
pushf
adc
movsb
and
hlt
movsl
pop
xchg
insl
test
xchg
mov
clc
gs
mov
stc
mov
mov
jne
sbb
rolb
dec
nop
jbe
daa
mov
adc
mov
popf
ja
das
in
repnz
cmp
cwtl
imul
mov
inc
dec
inc
xchg
jne
mov
push
mov
and
cmp
xchg
shrl
inc
mov
sub
dec
movsl
addr16
mov
lret
sahf
cmp
das
inc
sti
ret
xchg
int
sbb
dec
jl
lea
inc
addb
jp
je
cmpb
repnz
shll
adc
es
popf
mov
add
sbb
ss
add
dec
arpl
mov
mov
clc
out
jg
sbb
add
mov
or
lcall
cmp
add
popa
mov
jp
lock
popa
xor
adc
xchg
pop
lods
or
push
in
mov
cmc
cld
jno
js
push
es
sub
xchg
outsb
cmp
xor
mov
mov
rcrl
inc
aad
mov
cs
lods
mov
and
mov
pop
repz
lcall
nop
jno
pop
add
sub
fs
pop
daa
mov
int3
in
xlat
data16
sub
outsb
bound
mov
adc
aas
cmp
jo
push
xchg
int
inc
in
push
sub
nop
pop
xchg
sbb
shrb
push
stos
and
xorl
mov
xchg
cmpsl
lahf
lock
stc
push
push
stc
mov
nop
jle
cmp
stos
movsl
dec
aam
icebp
ljmp
xor
in
int
out
es
loopne
adc
jns
cmpsl
push
lds
jae
je
xchg
test
pop
xlat
mov
mov
xchg
mov
push
mov
fnstsw
jecxz
jp
bound
into
imul
popf
sub
fsub
adc
aam
sbb
stos
mov
jns
and
and
insl
dec
jmp
lods
je
mov
mov
jae
mov
outsl
sub
mov
in
jb
int3
icebp
daa
movsb
xchg
cmpsb
stos
addr16
gs
or
aas
sub
xor
sbb
or
sub
cmp
mov
or
dec
gs
pop
data16
push
pop
fiaddl
scas
in
das
push
jno
xor
aad
ret
f2xm1
inc
lret
enter
adc
mov
sub
push
dec
xor
in
aaa
inc
jmp
adc
sbb
add
jbe
push
out
push
lods
xor
mov
in
js
dec
aas
fbld
jbe
rcrb
repz
push
xor
in
jg
jg
mov
repz
inc
xchg
pop
imul
cwtl
imulb
jmp
vmread
sub
ljmp
out
jle
aas
mov
jle
jbe
in
xor
mov
insb
and
mov
loopne
daa
xor
inc
sbbl
push
add
or
pop
mov
push
cmp
pop
mov
in
shrb
test
xor
pop
sub
dec
fs
xor
mov
jb
inc
jge
aaa
and
test
xor
into
stos
loopne
rcrl
or
sbb
sub
xchg
imul
xchg
dec
fistpl
popa
in
sbb
in
iret
cmc
enter
negb
nop
inc
cmp
xor
stos
bound
adc
xchg
pop
lcall
cmc
inc
lahf
sbb
mov
shlb
ss
shl
ljmp
aam
jo
cmp
test
inc
mov
loope
mov
jno
pop
icebp
inc
pop
jmp
out
mov
mov
jb
sbb
mov
mov
push
or
shrb
clc
xchg
mov
adc
sub
loope
jno
scas
sbb
std
int3
jmp
pusha
xor
imul
jle
iret
pop
and
sub
mov
mov
pop
pushf
jg
std
pop
repz
roll
outsb
mov
mov
arpl
jge
sahf
mov
int
cli
pop
pop
lock
out
push
mov
mov
sbb
loop
aad
sbb
sbb
jge
add
jmp
pminsw
loopne
ficoml
sub
xchg
cmp
xchg
sub
cmpb
stc
fcmove
adc
fstpl
mov
sbb
dec
sub
das
sub
and
cmpl
sub
pop
movsl
add
rol
enter
aam
xchg
xchg
sbb
inc
dec
mov
flds
lahf
int
lcallw
lds
xor
fdivs
mov
shll
jbe
test
add
rcrb
ret
push
movsb
mov
ss
mov
jp
mov
into
jb
xor
jmp
mov
push
stc
scas
out
rcr
cmp
mov
push
ja
lds
mov
mov
shrb
iret
mov
adc
stc
shlb
mov
jecxz
dec
movsb
xor
inc
iret
scas
int3
inc
xchg
aad
in
pop
jae
xchg
cmpsl
js
mov
aam
loopne
fiaddl
loopne
aas
cs
aaa
inc
xor
push
xor
sub
ret
pop
test
push
jne
push
jno
or
mov
fidivl
pop
cmp
out
jne
rcl
nopl
jge
and
sub
inc
and
shl
ds
push
popa
sbb
fwait
inc
mov
shl
lea
cmc
dec
nop
sub
mov
pop
mov
hlt
test
hlt
sub
les
mov
mov
dec
pop
mov
jne
jge
jl
sub
testl
jno
sub
xor
lods
sub
fiaddl
popa
cmp
cmpsl
loop
push
mov
loop
icebp
std
gs
sub
cwtl
sti
setp
push
jo
sbb
out
cmp
xor
push
push
push
test
arpl
ret
inc
cs
icebp
loopne
subl
stos
jmp
repnz
push
cltd
in
aad
or
add
jmp
dec
cli
cs
or
rcrl
sub
sub
sbb
and
mov
sahf
pop
push
push
inc
in
mov
cs
sbb
loop
popf
jmp
adc
inc
cmp
or
add
inc
jle
cli
jb
daa
dec
fwait
adcl
insl
popf
cld
cmp
aas
adc
idiv
push
jb
clc
mov
int3
mov
imul
out
pop
paddsb
xchg
xchg
in
cmp
mov
sarb
aam
pop
insl
das
hlt
adc
shll
adc
enter
and
cwtl
fsubl
rcrb
pop
pushf
cmp
jae
mov
adc
shr
cmpb
sub
sub
stos
outsl
jnp
data16
lock
mov
dec
paddw
in
outsl
andb
xchg
cmp
shl
sub
les
adc
test
outsl
sbb
rcr
mov
cmp
scas
roll
sbb
or
jns
pop
fbld
mov
push
ds
jg
xchg
nop
ljmp
cmp
mov
out
inc
adc
clc
mov
mov
jo
in
add
cmpsl
je
in
movsb
sub
sub
outsb
sbbl
loopne
push
pop
cld
leave
inc
inc
in
mov
cwtl
adc
or
dec
dec
ret
cld
pop
stos
mov
lds
push
sub
arpl
push
outsb
mov
bound
xchg
mov
jne
xor
lret
jmp
inc
pop
xchg
and
in
push
pop
push
out
push
xor
inc
out
sbb
xchg
rcrb
scas
movsl
inc
inc
arpl
mov
jbe
push
jbe
fisubrs
es
ja
in
adc
push
mov
push
popf
cmp
shl
je
icebp
push
sub
insb
shll
cmpsb
adc
inc
mov
and
out
sarb
out
cmp
push
ret
je
jle
fnstcw
mov
enter
ss
mov
mov
lock
sub
jo
mov
shl
adc
sub
mov
jbe
jne
lock
mov
sbb
push
push
push
faddl
add
xor
pop
inc
or
cwtl
dec
sub
out
notl
mov
or
out
pop
mov
leave
ljmp
int
andb
or
lret
mov
sbbl
pop
stos
xor
out
les
xor
mov
insl
out
repz
jnp
mov
repnz
lock
inc
lcall
mov
in
sub
xor
jmp
outsl
inc
cltd
pop
xchg
test
pop
pop
mov
lret
shll
aas
popa
push
lds
push
mov
mov
sti
inc
add
clc
gs
mov
subb
in
mov
jne
sub
and
lea
outsl
sahf
shll
sub
stos
pop
xchg
xor
jmp
mov
dec
fldl
shlb
shl
jg
push
push
lods
ret
xchg
or
jno
bound
dec
inc
push
lods
xchg
or
sub
adc
pop
xor
in
mov
fstpl
out
jno
cld
cmp
repnz
imulb
or
or
test
mov
sti
into
daa
sub
jp
fisttpl
not
add
pop
dec
xor
out
push
cmp
mov
jb
test
ret
dec
lds
mov
mov
push
xchg
mov
and
rcr
mov
xchg
mov
andl
les
shlb
sub
lcall
mov
sahf
mov
push
not
repnz
lods
insb
or
testb
adc
je
dec
ss
add
addb
fildll
cmp
mov
xor
icebp
jge
jmp
mov
test
or
xchg
or
mov
lods
adc
lods
lea
cmpsl
mov
dec
loop
cltd
lret
mov
sbb
adc
mov
imul
and
mov
pop
adc
adc
push
fcomi
mov
inc
and
push
add
outsb
in
pop
aaa
cs
out
cmp
out
dec
dec
sbbb
pop
pusha
scas
sub
jb
lods
sarb
pop
inc
repz
out
xchg
cltd
int
mov
fsubrl
pushf
loop
jnp
faddp
pop
in
mov
xchg
pop
mov
mov
lods
ss
fs
sub
xchg
pop
lods
mov
inc
pop
lds
mov
sub
dec
in
push
jmp
in
jl
ds
lods
or
xchg
or
pusha
aas
movsl
xchg
dec
shl
or
cld
enter
xor
xor
int
sub
push
adc
stos
into
popf
adc
loope
lds
or
cs
or
adc
fisubrs
mov
cmp
push
mov
cmp
or
rcr
fs
std
sahf
xchg
push
push
lahf
test
hlt
sbb
lret
add
or
gs
out
rolb
mov
lret
test
xor
mov
rclb
popf
adc
pop
int
packssdw
stos
out
ror
mov
fs
dec
cli
cmpsb
inc
sub
clc
fimuls
cli
fmuls
out
adc
xor
sub
lret
or
mov
mov
fmul
push
xchg
push
rcr
lock
mov
jle
je
das
pop
test
mov
in
xor
jmp
sub
sbb
dec
or
and
xor
cli
jno
lret
fwait
ret
call
ljmp
mov
dec
jnp
scas
pop
insb
push
sahf
or
mov
xorl
movsl
mov
or
sbb
sti
mov
inc
andb
lds
hlt
cmp
fs
idivb
je
stos
call
shl
mov
adc
loope
fsubs
jl
sbb
and
gs
sahf
in
scas
xchg
in
jp
pop
and
ss
add
andl
popf
ljmp
fdivrl
and
mov
cmp
xchg
negb
xor
push
test
jnp
pop
lret
mov
sahf
ljmp
add
std
loope
adc
loop
xchg
add
lret
xor
and
push
pop
and
pop
xor
mov
fs
adc
and
xchg
xor
and
lods
sti
inc
out
and
ret
out
clc
imul
fdivrs
popf
subl
xchg
sbb
add
and
mov
movsb
pop
test
inc
out
shl
mov
insl
jae
inc
inc
dec
add
jns
adc
mov
push
imul
jl
insl
movsb
ja
jae
add
sub
mov
jmp
js
push
mov
call
cmp
lret
ror
push
dec
cli
mov
and
adc
mov
and
jns
push
push
outsl
mov
xlat
into
andb
inc
mov
and
xlat
das
mov
test
jne
and
adc
mov
xchg
ja
movsl
adc
dec
dec
xchg
iret
sub
xchg
inc
push
xor
fwait
jp
fisubl
cmpsb
sbb
mov
in
adc
call
in
sub
or
arpl
inc
daa
lock
sbb
push
popa
sbb
cs
push
bound
ds
or
lock
cs
loop
jbe
std
mov
addb
ss
mov
push
nop
into
nop
cs
lret
fdivl
repnz
push
or
jg
in
add
loope
sahf
sub
push
push
ret
aad
ljmp
das
test
dec
sbb
jns
xchg
add
xlat
shl
loopne
mov
mov
loop
leave
xchg
stos
outsb
rclb
iret
push
pop
dec
inc
cli
adc
fs
mov
mov
out
andb
int
pusha
test
lret
add
mov
inc
push
bound
cmp
mov
cmpsb
clc
std
xor
pop
scas
repz
sbb
xchg
fnstcw
aam
fidivrl
shlb
inc
lahf
pop
cmp
sbb
jo
xchg
push
jecxz
hlt
adc
dec
sub
cmp
mov
subb
add
testl
xor
fimuls
mov
fwait
dec
pushf
or
bound
sbb
outsb
jmp
divl
scas
xchg
pop
xor
push
pop
repz
mov
add
lcall
xchg
adcl
push
lahf
jmp
sarl
push
inc
sbb
jno
stos
push
lods
adc
call
mov
mov
test
jno
cmpl
scas
out
decb
imul
push
lret
lods
dec
pusha
mov
push
in
jno
jge
and
lahf
mov
mov
repz
jmp
bound
call
nop
dec
sub
adc
inc
and
push
subl
mov
jmp
push
aad
jmp
adc
vminsd
stos
push
xchg
lods
mov
or
and
popf
lock
jecxz
sbb
test
and
mov
mov
mov
cli
jmp
montmul
cmpsb
ret
les
pop
gs
loopne
dec
xchg
cmc
xor
or
fsts
pop
lock
xor
or
fimuls
fidivs
dec
arpl
push
daa
sub
fisubl
outsl
xchg
mov
dec
dec
lret
js
xchg
push
cmp
xor
mov
dec
hlt
out
lods
cltd
dec
xor
push
mov
andb
inc
xor
or
test
xchg
sbb
mov
dec
inc
test
cmpsb
cmp
jnp
mov
xlat
lods
int3
jbe
cli
or
lds
insl
lods
xchg
shll
xchg
das
and
xlat
mov
sbb
sub
push
dec
adc
cmc
lea
dec
or
cmp
mov
clc
mov
out
push
or
adcl
push
jno
xor
jg
repz
incb
xor
lods
add
pop
cli
xchg
mov
xchg
andl
int3
adc
xlat
xchg
adc
xchg
popa
jbe
out
jb
or
dec
cltd
es
les
nop
push
lcall
jge
jle
bound
popa
adcl
cmp
mov
scas
out
fimull
popl
sbb
sub
mov
test
pop
inc
sub
jns
push
mov
mov
adc
sar
scas
icebp
xchg
and
cmp
fldcw
shll
or
add
ja
addr16
lahf
jmp
test
or
scas
sub
push
push
movsl
shlb
or
ja
fsts
pop
lwpval
fstl
test
mov
sarb
jmp
mov
call
mov
xor
or
dec
orps
add
cmp
out
add
fstps
push
iret
aam
test
jp
decl
or
xlat
cmp
cltd
clc
push
data16
add
adc
xor
test
test
std
jns
cwtl
mov
call
call
mov
imul
cltd
pop
scas
andl
arpl
push
cmp
mov
jbe
sar
adc
popf
xorb
and
sbb
cmp
jl,pt
lods
cs
cmp
push
aaa
xor
outsb
add
xor
cwtl
in
xor
dec
cs
inc
push
xor
sub
push
push
test
jle
lret
sahf
xlat
xchg
mov
and
cli
cmp
das
jns
in
insb
aam
fsubr
dec
pop
daa
push
loop
xchg
adc
adc
test
adc
dec
xor
test
shrb
outsw
loopne
neg
lds
inc
imul
push
rcrl
push
push
jp
jbe
je
es
sbb
sub
ds
iret
xchg
sbb
mov
lret
mov
xchg
inc
inc
add
xchg
inc
cmp
sbb
pop
xchg
push
and
int3
movsb
repnz
xorb
jo
adc
adc
mov
inc
scas
jmp
dec
and
or
jecxz
sub
sub
loop
xlat
rolb
cwtl
loopne
xlat
pop
mov
dec
stos
lahf
mov
test
mov
cmp
xchg
pop
sub
insb
test
cmp
add
popa
loope
popl
fldt
andl
jns
sbbb
repz
nop
fimull
or
pop
mov
loop
loopne
sub
push
rcll
data16
leave
cmpsb
test
sarl
adc
lds
inc
add
or
mov
xchg
test
lret
in
lea
in
inc
mov
xchg
shl
ret
ret
xchg
sbb
mov
inc
push
repnz
sub
jge
call
addr16
test
aaa
aam
lahf
call
xor
je
adc
dec
push
sub
cmpsb
jecxz
ljmp
jle
sarl
mov
cmpsb
mov
or
pop
into
dec
arpl
stos
push
sbb
push
mov
jnp
shrl
xchg
icebp
sbb
jb
push
mov
mov
and
mov
ja
outsb
sbb
fs
mov
icebp
ret
out
iret
test
bound
arpl
into
roll
icebp
aas
sub
dec
xlat
dec
repnz
jmp
leave
mov
inc
mov
xchg
or
insb
xor
jb
dec
test
in
or
xor
sub
orl
mov
jle
xor
pop
shlb
xchg
cmovp
jge
lods
xor
pop
negb
insb
dec
in
sub
mov
ret
push
mov
arpl
cmp
jle
xor
call
pop
push
xor
fmulp
sbb
mov
jmp
sub
ja
out
sbb
cmp
int
je
negl
sub
dec
cmc
imul
repnz
bound
or
jnp
mov
cltd
sahf
sbb
jb
mov
mov
addb
cs
aad
mov
mov
inc
pop
mov
out
add
shlb
out
jns
adc
lock
scas
test
jo
cltd
adc
fsts
test
mov
fsubs
xlat
je
incl
push
lds
mov
cld
fisttps
add
xchg
push
cld
les
jb
jae
sarl
xlat
int
push
aad
jp
flds
push
iret
mov
mov
mov
aad
idivb
adc
rorb
iret
js
mulb
inc
ret
fwait
in
repz
cwtl
test
mov
lcall
pop
les
outsl
or
pop
pop
xchg
addr16
mov
push
cltd
test
cmp
pop
push
fisubl
xchg
lock
add
jnp,pt
add
mov
add
sbb
int
xor
adc
lahf
cmpsb
xchg
sub
inc
mov
mov
lahf
inc
pop
add
xlat
shlb
ljmp
test
addr16
aad
sbb
lods
movsl
jno
shrl
dec
push
mov
xchg
pop
and
pop
xchg
jne
loopne
push
cltd
test
fdivrl
shr
ret
gs
jno
dec
adc
repz
movsl
imul
std
and
adc
sbb
rorb
push
and
ret
cwtl
pop
fadds
arpl
sahf
sub
add
not
ds
imul
sbb
mov
les
cltd
lahf
push
or
call
adc
xchg
int
into
lods
xchg
sbb
adc
clc
sti
gs
mov
add
cmp
stos
cmp
jne
fnstsw
cmp
cltd
js
popa
and
mov
mov
ss
pop
and
add
xchg
add
sahf
mov
loope
das
and
jle
lcall
xor
adc
push
das
pusha
push
loopne
cmp
mov
fwait
aas
cltd
pop
test
scas
inc
not
mov
pop
adc
addr16
and
cmc
dec
push
add
enter
mov
sti
fisubrl
lret
test
lds
push
add
jmp
out
push
inc
jmp
sub
ror
inc
cmp
or
filds
mov
idivb
icebp
inc
hlt
dec
iret
sbb
xchg
outsb
pop
cmp
mov
dec
stc
fists
repz
sbb
xor
lea
dec
mov
daa
push
fiaddl
mov
in
out
repz
jecxz
mov
xchg
int3
jae
mov
aam
inc
ss
into
mov
xchg
sub
sarl
mov
cmp
mov
jno
test
mov
sub
cltd
cwtl
dec
stos
out
aaa
sbb
sbb
cmpsb
outsl
repnz
push
push
test
arpl
or
add
addr16
popw
sub
in
and
icebp
ficoml
mov
inc
mov
mov
mov
push
cli
out
and
lea
jno
or
push
or
fcompl
cmp
cmp
sub
mov
and
mov
fistl
out
dec
out
daa
push
sar
insl
jb
inc
adc
mov
inc
leave
or
aam
leave
dec
mov
mov
repnz
mov
push
repz
push
call
insl
das
sub
imul
cmpsl
fsubr
iret
xor
mov
jg
inc
data16
add
and
in
gs
fistpll
ss
jne
add
jmp
push
ret
sub
pop
sub
loopne
sbb
xchg
fisubrs
pop
popf
add
mov
mov
add
and
jp
pop
or
cmpl
data16
sub
data16
pop
xor
jecxz
cmpsb
call
lret
or
cld
mov
push
outsb
insb
fnsave
inc
add
push
aas
shll
fmul
adcl
jbe
fnop
push
negb
in
cmc
insl
hlt
mov
shr
dec
or
fldt
or
std
movsl
inc
aas
xor
mov
lcall
lds
push
xchg
rorl
insb
xorb
adcl
xor
jne
iret
push
popa
scas
fcomip
xor
icebp
dec
insb
gs
jne
jns
roll
xchg
adc
push
sbb
aad
cmp
jg
add
out
or
pusha
mov
ljmp
xlat
add
imulb
add
cmpsl
xor
sbb
in
push
pop
outsl
mov
loope
cs
add
inc
inc
into
testb
cli
jl
inc
fsts
pop
push
dec
cltd
inc
loopne
and
repz
inc
imul
xchg
out
inc
shlb
into
sub
es
xorb
or
mov
cmp
cmp
stos
into
rcrl
in
cmp
xlat
mov
jg
inc
int3
scas
dec
push
es
fxch
xorl
mov
inc
loop
xor
xchg
scas
leave
inc
pushf
mov
sub
popa
or
sbb
das
cmpsb
mov
insb
dec
mov
sub
cmp
popf
pop
or
lock
sub
xchg
stos
mov
ds
clc
movzbl
shl
add
xor
lods
popf
movsb
pop
push
and
ret
pop
stc
lock
scas
mov
cmp
xor
rcr
and
dec
cs
inc
or
push
add
popf
ss
adc
or
fwait
cwtl
adc
xchg
xchg
pop
movb
mov
jns
xchg
inc
fnstcw
and
cmp
jge
orl
sti
or
repz
mov
mov
lret
rclb
push
insl
and
or
jmp
xor
add
push
dec
clc
sub
hlt
dec
or
and
mov
adc
stc
push
ljmp
mov
leave
mov
push
adc
imul
jb
retw
mov
decb
pop
fisubl
sub
inc
ljmp
sbb
js
mov
rorl
mov
add
mov
sub
mov
push
mov
mov
pop
xchg
push
pop
mov
cmp
loop
sbb
jne
adcb
test
jbe
add
data16
inc
add
push
std
vmwrite
mov
xchg
mov
pop
stc
jae
ljmp
jl
fsts
mov
out
pop
add
scas
or
push
inc
xor
pop
push
aad
mov
xor
or
cmp
lcall
mov
xchg
xlat
mov
shrb
fdiv
inc
pop
shrb
not
imul
add
sbb
out
cmp
into
dec
in
xor
inc
cmp
pop
scas
xadd
mov
aad
shrl
cmp
cmp
ror
scas
mov
in
mov
popa
mov
xchg
in
pop
inc
shll
add
mov
into
inc
push
mov
fisubs
fsubrp
xchg
lahf
dec
dec
ljmp
daa
add
or
cmpsl
mov
sub
scas
jl
inc
test
sbb
push
into
xor
or
pushf
cmp
out
hlt
mov
repz
adc
movsb
test
push
jbe
adc
scas
mov
gs
mov
outsl
dec
xor
push
adc
jb
cmp
out
pop
jg
fldenv
inc
mov
xor
addr16
jle
int
xchg
pop
push
xchg
lds
cmp
jbe
call
jne
xor
cmp
push
push
fsubp
out
jo
pop
mov
adc
pop
in
jle
ret
test
sbb
push
je
in
lea
sub
sahf
lret
imulb
jno
sbb
pop
add
cltd
mov
and
aam
pop
subb
ljmp
clc
in
add
or
jg
aam
mov
lds
test
std
dec
cmpsb
dec
imul
sbb
push
push
inc
sbb
xor
mov
inc
add
inc
popf
add
imul
popa
pop
es
leave
loopne
mov
test
sbbb
jp
pop
jnp,pt
mov
cmp
pop
arpl
sbb
out
jae
xor
test
stos
ja
inc
and
cli
pop
ja
pop
pop
or
test
imul
pop
sbb
jns
rcrl
pop
xchg
jmp
sarb
dec
sub
jle
pop
popf
xchg
xor
loop
mov
ficoms
icebp
and
push
mov
out
pop
xchg
add
and
pop
sahf
xchg
mov
les
push
add
jb
adc
enter
fsubl
sub
adc
adc
shrb
push
inc
jge
inc
mov
sub
sbb
rclb
mov
pop
popf
aas
int3
daa
std
pop
stc
sbb
pop
and
outsb
fwait
push
cmp
ret
gs
add
pop
mov
ret
dec
jge
xchg
cmp
mov
xor
pop
dec
rcl
xchg
xor
rclb
imul
push
gs
xlat
jns
popa
mov
and
pop
sbb
das
add
fistps
dec
xchg
cld
ja
ret
mov
out
fisttpl
mov
sarl
inc
pushf
or
push
and
mov
cmpsb
dec
sti
es
lds
mov
cli
jb
jecxz
sti
cwtl
imul
daa
outsb
cli
fdivs
repz
pushf
jae
pop
cmp
sahf
and
xor
insl
addb
inc
sub
mov
scas
pop
into
iret
sbb
or
push
fidivrs
cltd
sub
dec
cmpsb
pand
je
lret
or
cs
in
lea
popa
mov
inc
divb
jo
dec
lea
sbb
xchg
dec
subb
mov
cmp
sbb
pusha
xchg
xor
test
jns
push
mov
stos
cld
mov
fcomip
jno
cmp
fucom
dec
mov
push
ljmp
mov
div
stos
in
lcall
push
jbe
xlat
lea
cmpsl
clc
push
inc
out
lret
icebp
xchg
cmp
mov
xorb
push
aam
push
test
leave
leave
fadds
sub
sar
jnp
mov
jae
movsb
sbb
mov
mov
loopne
stos
insb
shrb
repz
mov
or
fldenv
xchg
ja
push
xchg
xor
sbb
loope
mov
inc
in
aas
pop
scas
xor
pop
lea
pop
dec
inc
add
pop
inc
xchg
fdivrp
cltd
sbb
sar
jmp
jns
dec
ret
or
xchg
ss
and
jbe
jnp
push
les
vpunpckhdq
mov
dec
sahf
aam
inc
adc
or
mov
lcall
adc
inc
ret
dec
inc
loope
adc
cmp
mov
in
out
jbe
or
jl
pop
jle
data16
jmp
and
arpl
sub
ljmp
pop
sbb
mov
xchg
mov
pop
add
mov
inc
add
jl
add
dec
cmp
sbb
add
xchg
xchg
adc
xchg
xor
jbe
sub
mov
or
je
xor
push
enter
andb
leave
loope
mov
test
xchg
mov
push
stos
mov
fsub
add
mov
mov
add
dec
stos
dec
rolb
shl
xor
cltd
mov
xchg
sbb
sub
fstps
lds
les
fcomps
popf
add
mov
ja
sbb
xchg
push
xor
push
jcxz
repnz
jo
scas
or
and
mov
mov
and
lret
test
inc
stos
adc
ss
adc
jnp
mov
add
lods
es
push
test
cmp
add
push
xor
pop
in
push
adc
shrl
shrb
sbb
daa
out
fcompl
xchg
int
inc
cltd
adc
rol
lret
adc
shlb
pop
jle
xor
sahf
sub
push
or
pop
stos
xorb
add
cmp
pop
cmp
daa
xchg
pushf
xchg
imul
in
test
inc
aad
xchg
mov
enter
fcomip
and
shll
dec
aam
jae
add
and
mov
dec
shrl
mov
or
popa
sbb
out
mov
lahf
std
dec
je
mov
dec
mov
push
sub
jmp
fwait
push
cmp
xchg
pushl
jecxz
out
pushf
je
enter
xor
in
pop
sub
sub
loopne
leave
int
cmc
and
stc
fldt
adc
and
adc
repz
xchg
mov
or
orb
imul
aaa
outsl
pop
push
xor
hlt
inc
jle
sbb
inc
sub
xchg
hlt
sbb
out
dec
adc
sub
nop
pop
cmp
jne
and
in
fists
sbbl
mov
aam
lods
pusha
add
cmp
cmc
shll
movsl
rcrl
jmp
inc
xchg
pop
adc
sahf
jb
dec
lds
and
scas
sub
ficomps
aad
push
and
insl
aad
push
push
rorb
xor
stos
adc
scas
addr16
iret
ret
lret
jb
and
js
xchg
jb
arpl
push
xchg
or
mov
and
jno
aam
fistpl
or
int
mov
or
pop
in
sbb
mov
rcll
xlat
adc
xchg
shrl
lea
ss
sbb
xchg
clc
mov
push
aaa
sti
pop
xchg
leave
and
addr16
sub
repnz
js
xor
mov
jg
shlb
shlb
rcrb
lahf
fdivrl
xor
mov
push
orl
sub
adc
iret
mov
dec
ljmp
push
int
xchg
lds
and
je
call
sub
pusha
sub
fists
sbb
pop
loope
loopne
push
add
nop
test
movb
shll
push
jae
sub
out
add
cmp
mov
int3
cli
test
jmp
out
loope
add
ja
fisttpll
out
movsl
les
mov
and
in
push
mov
dec
jno
movsl
xor
enter
mov
sub
mov
out
and
sub
dec
pop
lcall
ds
push
push
mov
adc
add
jbe
xchg
jbe
lods
outsl
arpl
cmpsl
and
push
cld
push
sbbl
stos
or
pop
aaa
and
repz
xchg
adc
xchg
xor
sbb
int3
inc
xor
cltd
adc
movsl
inc
dec
add
cmp
push
mov
lcall
minps
sbb
popf
addr16
push
xchg
stos
lahf
inc
mov
int
fmuls
sahf
jle
xchg
push
cltd
ja
lock
pop
fwait
cmp
xchg
ja
mov
sbb
sbb
jecxz
mov
daa
lock
adc
and
jno
sbbb
and
in
int
sbb
insb
pushf
int3
std
out
int
sbb
dec
ret
test
dec
adc
sbb
xorl
lods
cmpsl
les
xchg
and
push
mov
ds
sbb
sahf
gs
js
mov
scas
sti
in
stos
mov
inc
cmp
sbb
xor
dec
out
and
xor
xor
mov
sub
push
mov
jg
aas
das
mov
xchg
dec
mov
ret
jmp
or
push
sub
int
popa
test
in
sbb
adcb
aaa
and
mov
mov
xchg
and
fwait
mov
push
mov
sbbb
popa
pop
ret
out
mov
mov
fistps
outsl
push
mov
mov
aas
cli
push
cmp
ja
dec
push
xor
lret
push
loopne
bound
dec
shlb
or
pop
rcrb
repnz
adc
les
mov
pop
push
shr
jg
add
out
mov
scas
and
xchg
fwait
lcall
dec
ret
xor
xor
push
cld
push
add
shll
mov
mov
xor
and
xorl
add
imul
or
gs
inc
push
stos
lds
jl
or
loopne
and
pop
es
mov
cltd
mov
outsl
sarl
mov
or
cmpsl
mov
insl
lock
hlt
jmp
popa
dec
fisttpll
adc
lds
insb
aad
lret
sbbl
repnz
or
in
xor
cmpsb
outsb
scas
cmpsl
add
sar
sub
roll
pop
push
push
out
mov
add
ror
inc
loope
mov
mov
pop
mov
add
push
les
out
jg
push
clc
fwait
ret
mov
popf
mov
xchg
sti
leave
xchg
subb
xchg
xor
lcall
or
xor
mov
movsb
add
iret
test
cld
jo
cli
mov
push
xor
icebp
dec
pop
wrmsr
pop
loopne
movsl
add
fwait
andl
callw
hlt
shll
pop
jno
or
or
mov
popa
popa
mov
add
stc
outsl
fstps
ljmp
out
mov
pop
add
mov
pop
out
push
jnp
mov
sbb
and
xchg
mov
mov
mov
out
in
rcrb
test
adc
lcall
adc
sbb
pmulhw
lret
xchg
dec
ja
or
cmp
ret
mov
arpl
test
sub
sbb
out
pop
mov
ljmp
sbb
sbb
mov
outsl
xchg
call
fcoms
sti
outsb
pop
and
jo
mov
jp
lock
push
sar
mov
test
imul
dec
into
xorl
incb
mov
lahf
or
jnp
rep
push
cld
mov
daa
push
mov
addl
imul
dec
add
decb
xchg
mov
pop
lods
adc
pop
lret
insl
jno
and
jbe
or
mov
insb
test
push
in
xor
pop
rcrl
stos
mov
sbb
daa
xlat
pop
push
insl
test
xor
sti
je
pushf
inc
int3
ret
push
loop
lock
cwtl
int3
outsb
push
push
pop
xchg
adc
sti
hlt
in
fnsave
mov
lds
ret
or
mov
dec
clc
xchg
sbb
push
cmp
sub
cmp
incl
sbb
mov
xchg
and
push
push
ds
lods
iret
cmovg
adc
dec
ja
fs
mov
fnstcw
stos
rcll
lock
movsb
xchg
mov
dec
pop
inc
nop
out
call
leave
mov
xor
push
dec
fdiv
mov
ja
bound
test
push
lret
mov
fstpl
fwait
mov
jmp
jecxz
ja
int
push
mull
sbb
enter
nop
idivl
pop
out
mov
call
je
mov
mov
and
pop
das
jae
or
hlt
mov
dec
movq
arpl
mov
jmp
mov
scas
sbb
add
xchg
jmp
mov
aas
pusha
or
out
int
lods
pop
int
es
clc
add
pusha
push
daa
inc
or
dec
sbbl
mov
movsb
adc
gs
sub
rorl
pop
pushf
xor
mov
sti
cwtl
push
pop
jp
inc
loope
add
jmp
push
push
insb
mov
xchg
jmp
add
insl
movsl
jnp
orl
add
aam
jb
leave
repz
in
call
ret
out
cwtl
jo
mov
jo
arpl
push
cmp
ret
rcll
mov
cmp
cmpsl
repz
jp
enter
sub
mov
aas
cltd
test
mov
inc
js
inc
sbb
jg
movsl
inc
call
test
cmp
in
xchg
jnp
add
cmpb
out
ja
cmp
push
push
mov
push
je
pop
cmpsb
ljmp
adc
push
sbb
fsubs
sbb
in
mov
lret
pop
or
std
lea
out
mov
jbe
xchg
daa
mov
jp
adc
adc
add
jmp
movsl
inc
xchg
pusha
mov
pop
int
in
xchg
outsl
and
in
inc
fwait
or
and
es
xchg
cmp
into
arpl
push
scas
jb
or
mov
jno
push
fmul
scas
daa
filds
imul
imul
pusha
pop
in
sahf
mov
add
dec
subb
add
pop
or
dec
cmpsb
fstp
push
int
mov
mov
outsb
les
enter
es
outsb
movsb
add
or
rorl
and
scas
dec
jae
fldl
jae
sbb
mov
or
in
xor
fidivrs
mov
add
cli
js
cmc
fdivs
inc
lcall
xchg
mov
not
jns
stc
movsb
stc
sbb
pop
out
sub
enter
sti
or
pop
push
adc
popf
xor
sbb
aad
negb
xchg
or
cli
push
or
dec
outsb
repz
push
subb
jle
andb
inc
mov
sbb
and
inc
jg
test
call
sbb
inc
test
mov
pop
mov
std
inc
mov
cmpsb
xchg
cmp
data16
mov
pusha
mov
pextrw
xchg
xchg
repz
and
mov
xor
in
fsubs
in
test
cmpsl
and
or
jbe
dec
je
and
lret
push
mov
call
sahf
rorl
pop
in
and
xor
push
fildll
xchg
out
popa
dec
sbb
jmp
icebp
popa
mov
ja
inc
pop
lret
popa
mov
xchg
adc
cld
loope
loope
dec
idivb
mov
dec
mov
dec
mov
dec
sbb
pop
and
xchg
jp
sbb
sbb
sub
out
dec
push
xorb
xchg
adc
mov
dec
xor
aas
fiaddl
fbstp
xchg
push
fstl
jbe
mov
shlb
stc
jmp
mov
jp
fnstsw
rcrb
outsb
stc
cmc
mov
popf
and
and
clc
mov
std
cs
pop
push
xor
movsl
popa
adc
mov
loopne
repnz
test
out
movsb
xchg
call
insl
outsb
aam
add
cmpsb
nop
and
and
ret
dec
lea
and
jg
inc
xchg
fdivs
fsubrl
aaa
xor
mov
add
scas
push
inc
out
into
lret
fidivs
sub
mov
lods
mov
push
xchg
push
sti
pop
add
adc
inc
ljmp
mov
js
call
movsb
aaa
xchg
fs
jl
and
or
or
sub
jne
sbb
in
adc
scas
inc
adc
inc
or
fstps
jns
mov
lock
cli
push
ret
sub
fiaddl
subl
popf
inc
inc
cmp
shll
movb
pop
fiaddl
cmp
movsb
jb
pushf
aad
out
pusha
mov
mov
jmp
xchg
dec
inc
mov
dec
movsl
test
ret
adc
push
sub
cs
orps
pop
das
cmp
adc
mov
xchg
mov
xor
fcmovu
in
and
dec
imul
mov
add
adc
ss
pop
cmp
ljmp
insb
aas
aaa
mov
lret
mov
loop
xchg
imul
push
xlat
mov
and
aam
inc
dec
in
cmp
into
rol
shl
jle
pop
mov
adcl
ljmp
lock
jmp
and
dec
xchg
jmp
insl
push
pop
lret
xor
es
pop
fwait
cmpsl
cmc
rorb
dec
jno
adc
adc
icebp
cmpsl
movsl
dec
mov
in
dec
mov
push
clc
mov
cmp
fdivrl
dec
outsl
mov
std
popf
push
cmp
adc
fadds
dec
and
out
imul
jge
das
push
mov
fcmovne
lea
mov
and
into
popf
adc
lret
pop
dec
mov
fidivs
mov
cmpsl
pop
push
xor
xchg
pop
and
push
sub
pop
js
add
add
cmc
nop
sub
pop
decl
jl
add
sbb
mov
push
nop
push
or
enter
sti
je
into
cltd
cmpsb
xor
mov
jno
enter
sbb
jmp
or
cmc
es
sub
push
push
idivl
fbld
gs
sarl
jnp
test
cmp
out
jle
jo
rorb
push
je
pop
shlb
sbb
inc
popf
loopne
div
js
inc
add
andl
xor
add
push
ret
ljmp
xor
es
out
dec
push
jb
xchg
jg
xor
into
cld
mov
xchg
adc
xchg
mov
ret
mov
mulb
push
loopne
cmpsl
add
fadds
mov
mov
add
cmp
mov
push
pushf
cmp
push
stos
pop
rol
xor
sub
stc
inc
dec
dec
dec
push
inc
out
xor
mov
xor
and
hlt
sub
adc
push
in
add
je
push
pushf
pop
and
or
pop
sub
fcomps
push
ret
push
ret
mov
ret
in
cmp
les
mov
mov
je
fcoml
rcrb
dec
in
cs
cmc
mov
je
mov
jecxz
lret
cld
cmp
jmp
pop
pop
outsb
imul
out
data16
inc
and
inc
and
push
mov
dec
xchg
mulb
push
and
fs
outsb
jo
jg
and
jg
inc
sbb
add
daa
loopne
push
adc
movsb
rcr
incb
ja
cwtl
pusha
and
lcall
iret
push
xor
shrb
xchg
shlb
js
cmp
mov
cmp
jle
push
xchg
stc
shrb
jl
jg
rorb
daa
ljmp
pop
dec
push
add
into
sub
loope
xlat
cmp
popf
mov
mov
loop
xchg
push
faddl
incb
fmulp
xchg
adcb
int
stc
xchg
hlt
es
negl
xor
dec
jnp
cwtl
cld
loopne
jns
orb
push
stc
subb
pop
ss
add
mov
xor
and
and
pop
inc
aad
ljmp
out
std
dec
je
adc
or
and
cld
sbb
add
pop
icebp
xor
sub
fsubl
sbb
mov
enter
xchg
sti
xchg
xchg
data16
dec
idivb
stos
lea
loop
inc
dec
aaa
mov
loop
jne
pusha
cld
and
popaw
inc
std
pop
bnd
mov
jae
mov
adc
sarb
in
test
xchg
xor
orb
sub
dec
jnp
xchg
jns
adc
sbb
jge
xor
insl
sub
xchg
mov
sar
sti
jecxz
adc
jmp
pop
aad
mov
jle
sub
cmc
push
mov
icebp
shll
cwtl
adc
or
in
ficoml
stc
mov
shll
xchg
xchg
ja
add
pop
fdivrl
out
cmp
into
xchg
outsl
push
cmpl
mov
jb
mov
jecxz
imul
mov
imul
lea
je
push
mov
je
mov
sti
nop
ret
fsubp
idivl
or
dec
and
jbe
jbe
push
jns
lcall
xor
loope
add
cltd
mov
mov
jg
repnz
stos
pop
pop
inc
and
push
scas
sti
jne
int
pop
push
mov
mov
nop
mov
jl
jecxz
add
in
test
test
lods
rclb
popa
arpl
fadds
ror
pop
xor
std
mov
out
cwtl
imul
adc
xchg
add
mov
rorl
push
jge
cltd
mov
mov
xor
pop
sti
imul
loope
push
aad
fstpl
inc
xlat
pmulhw
clc
sbb
adc
push
popf
fisttps
inc
movsb
idivb
shrb
add
dec
cmp
data16
loopne
add
mov
addr16
xchg
in
mov
push
sub
dec
cmpsb
mov
std
lea
stos
adc
mov
out
dec
push
pop
pop
pop
in
or
mov
repnz
inc
pop
out
les
and
imul
jbe,pn
out
xor
adc
cmp
dec
jmp
jl
pop
xchg
insl
mov
pop
jnp
add
imul
fsubl
xor
pmuludq
in
aaa
add
mov
jle
scas
loopne
jmp
pop
out
test
ja
jnp
inc
mov
aam
dec
mov
sub
push
add
pop
push
arpl
out
shl
mov
cs
mov
aad
das
mov
pop
and
sahf
cmp
lock
push
mov
fs
scas
scas
pop
xchg
loope
sbb
adc
insb
add
mov
jnp
mov
jne
sbb
es
push
xor
out
mov
jno
dec
sbb
mov
jb
movsb
jl,pt
and
adc
cli
test
aas
mov
dec
sub
push
cltd
pop
in
xor
dec
pop
pusha
xor
push
pop
xchg
cmp
add
mov
mov
and
pop
inc
aad
or
shl
add
push
mov
inc
popa
cmp
fs
xor
mov
movsb
adc
fisubrl
out
bound
dec
lods
orb
mov
jp
pop
xchg
xchg
cmp
xchg
ffreep
scas
jbe
push
or
insl
sub
outsb
daa
mov
push
jb
xchg
in
lods
jae
dec
xchg
aas
xor
sub
sbb
cmpsb
fcmovnu
xchg
cmp
fidivs
fidivrl
dec
mov
xorl
lods
mov
dec
ja
push
push
push
push
pop
dec
leave
jns
and
push
pop
pop
mov
or
in
push
push
sbb
mov
js
sub
das
insb
mov
sub
and
jno
enter
popf
testl
jmp
loop
clc
add
sbb
mov
fisttps
stos
aad
xchg
and
loop
pop
mov
scas
pop
mov
or
xor
leave
cmp
jl
lods
in
gs
xor
lret
loop
test
cld
in
addr16
dec
fldl
mov
das
sti
scas
dec
test
add
repz
fldcw
add
fidivrs
mov
sti
sbb
sub
cs
imul
imul
cmp
mov
add
rcll
mov
rol
scas
fsts
xor
add
sarl
jbe
and
sbbb
test
dec
mov
ret
icebp
mov
lret
loop
stc
insb
inc
repz
push
adc
adc
mov
roll
ss
insl
inc
xchg
add
andl
mov
or
sarl
jmp
sbb
stos
fwait
xor
mov
cltd
test
pop
call
lret
pushf
mov
inc
aad
sub
lret
pop
into
sarl
pop
test
arpl
mov
inc
loopne
pop
icebp
aas
sub
xchg
xor
arpl
and
pop
aam
jno
mov
sbb
mov
or
lods
test
out
xor
repz
pop
adc
cmp
sbb
mov
lcall
add
xchg
rorb
jae
mov
imul
push
pop
movsl
mov
jo
inc
jmp
pop
pop
push
fbld
jmp
jp
pop
cmp
inc
jnp
leave
in
push
mul
xchg
push
pop
sub
insl
nop
iret
cld
mov
pop
ds
sbb
xchg
out
sbb
or
ljmp
push
mov
imul
cmp
test
fndisi(8087
jns
sub
mov
dec
leave
cwtl
addr16
aad
inc
gs
int
shrl
mov
movsl
int
iret
sbb
push
jnp
xchg
and
cmc
and
stos
or
xor
hlt
or
push
inc
dec
push
dec
loope
idivb
loop
out
mov
mov
and
lods
ret
gs
xor
xor
mov
fldln2
jnp
aam
cld
pop
push
aad
jg
ficomps
pop
mov
jne
rcll
rcl
test
mov
mov
shlb
inc
xchg
jb
mov
mov
sahf
sti
cmp
xor
jne
or
mov
pop
inc
inc
leave
pop
lcall
mov
lcall
test
xchg
pop
mov
add
ljmp
dec
mov
add
cmc
push
jnp
rcll
jmp
pusha
fbstp
insl
adcb
inc
cmp
mov
cmp
pushf
arpl
and
dec
test
scas
arpl
addr16
pushf
sub
scas
leave
aas
inc
add
jb
dec
insl
add
xchg
mov
cmp
mov
mov
xchg
adc
jb
addr16
fstps
bound
mov
jbe
inc
rcll
aam
int3
inc
pop
adc
popf
sbb
xchg
cmp
jbe
mov
xchg
inc
int
lea
or
mov
sbb
pop
test
jle
jae
sub
test
mov
mov
jecxz
stos
fimuls
dec
mov
rcrl
push
mov
jmp
cltd
imul
pop
lcall
jnp
das
mov
xor
addl
jne
or
cmc
daa
push
dec
pop
inc
mov
sti
lea
sbb
bnd
pop
out
fnsave
push
sahf
shll
fldt
jb
push
das
pop
xchg
pop
pop
add
xor
sub
xlat
cs
xor
sbb
push
mov
jne
sbb
cmpsl
pop
sub
mov
xchg
leave
popa
sub
mov
stos
icebp
push
jg
subb
inc
inc
push
ficoms
mov
inc
jle
aas
call
push
into
pop
das
imul
push
out
pop
add
push
mov
dec
out
sahf
fsubs
jo
push
sbbb
or
mov
mov
mov
pop
xor
add
add
xchg
scas
jns
ss
out
lahf
push
jg
into
lock
add
or
dec
fwait
mov
jnp
mov
icebp
push
into
mov
daa
adc
or
pop
aaa
dec
jnp
pop
aas
in
or
cli
pop
popf
push
xchg
pusha
add
xchg
std
push
add
imul
xchg
mov
xor
stos
loopne
test
mov
in
and
mov
mov
push
mov
xorl
dec
xor
xchg
dec
or
fistps
cltd
mov
test
fidivl
dec
mov
xchg
mov
dec
jno
mov
add
mov
dec
outsb
aaa
icebp
adc
inc
je
push
pop
pop
mov
mov
in
mul
dec
test
adc
in
mov
or
jl
add
inc
pop
jl
jnp
dec
mov
popf
pop
xor
shrb
imulb
out
test
mov
pop
shlb
xchg
add
inc
test
lods
movsl
clc
push
popf
cltd
mov
and
test
pop
shll
mov
hlt
daa
repnz
stos
jmp
ss
enter
mov
nop
dec
sub
xlat
xor
dec
fwait
int3
jle
push
lcall
stos
call
dec
aas
xchg
cli
repz
cmp
roll
and
mov
push
movsl
je
leave
or
arpl
jl
cld
aaa
mov
lcall
shrb
stc
inc
popa
and
and
sbbl
inc
decl
mov
fstpl
mov
mov
dec
sub
mov
push
lahf
xchg
jecxz,pn
mov
das
xchg
loope
lret
js
int
js
xlat
jp
jl
add
ret
fstpl
cmp
mov
sbb
push
push
sub
mov
dec
mov
or
lea
push
mov
nop
ljmp
or
mov
lcall
out
xchg
aad
cmp
je
mov
test
or
xchg
test
dec
push
xchg
lods
cmpb
sub
mov
pushf
push
inc
enter
xor
cmpsl
mov
add
mov
jae
cmpsl
and
fiadds
xor
lea
cmpsl
or
lock
out
push
inc
out
fadd
dec
cmp
push
push
mov
inc
imul
in
sbb
xchg
nopl
xor
jne
jmp
addr16
subl
out
incl
and
lds
fmuls
cmp
push
std
add
mov
sub
lds
cmpsb
movsb
out
popa
pop
xor
jb
xor
inc
cmp
add
jl
fldlg2
outsl
insb
pop
dec
lret
push
adc
push
mov
incb
push
inc
js
cmp
orl
or
sub
movsb
mov
inc
cld
out
loopne
cmp
imulb
stos
pop
fisubs
sbb
sbb
leave
push
dec
add
cmp
sti
mov
adc
sub
outsl
fidivs
in
sub
inc
xor
xchg
sub
popa
inc
jge
push
add
lret
jl
add
dec
pusha
cli
idivb
subl
loope
sub
xchg
push
decb
call
xor
pop
sbb
ret
mov
and
stc
sarb
lahf
adc
and
cmpl
pop
cmpsl
xlat
pop
sbb
ljmp
test
aaa
int
sbb
add
dec
sahf
bound
popf
cs
cs
sbb
pop
jb
or
icebp
or
fsubr
jl
pop
setae
mov
sbb
in
or
pop
aad
dec
fucom
and
add
lock
xor
test
sbb
inc
fwait
add
mov
xchg
push
adc
icebp
sub
inc
sarl
insl
je
adc
mov
rorb
mov
xchg
sbb
test
xor
lea
lcall
mov
adcl
add
int
or
or
lret
gs
xor
inc
jle
xor
fwait
imul
data16
int3
fwait
mov
cltd
jle
adc
out
loop
add
xorb
in
fldt
es
jae
or
lock
imul
inc
inc
sbb
pop
mov
jle
cmpsb
mov
aas
notl
add
lea
in
xchg
add
in
faddl
pop
adc
adc
and
loopne
ja
dec
imul
and
push
push
jle
out
mov
mov
xchg
outsl
popa
push
aad
inc
scas
sub
mov
popf
outsl
scas
xor
jle
call
test
cwtl
fimuls
sbbl
inc
add
pop
into
push
arpl
imul
pop
popa
and
inc
fidivs
fiadds
test
cmp
fdivrl
fmuls
push
lcall
scas
cmp
mov
mov
ss
mov
push
or
fsubs
inc
pusha
sub
cmp
mov
lret
mov
out
or
in
cmpsb
dec
cld
jecxz
mov
jnp
jo
or
in
loopne
idivb
sysenter
or
push
push
pop
sbbl
push
sub
punpckhdq
cld
hlt
push
test
add
test
sbb
js
pushf
mov
scas
shlb
adc
inc
data16
cmpsb
out
jg
cltd
mov
sbb
insl
inc
test
divb
daa
adc
nop
cltd
lahf
push
pop
mov
adc
lret
dec
mov
cli
add
popa
adc
ret
sahf
pop
cmp
sbb
inc
mov
xorl
sub
out
inc
aaa
movl
sbb
incb
les
cmp
and
mov
jmp
cld
mov
leave
and
test
mov
jmp
cmp
loope
bound
repnz
fdivp
mov
fnstsw
dec
cmp
cmc
cmp
in
negb
pop
imul
add
shll
mov
or
fildl
push
fdivrs
shll
in
inc
mov
psubsb
jne
scas
out
call
stos
push
jp
call
sbb
fs
movsb
aas
out
xchg
push
stos
sbb
jae
aaa
mov
jne
fisttpll
pop
jb
push
jno
xchg
push
test
mov
iret
leave
dec
mov
jno
add
shrb
push
push
fxch
sbb
push
or
loop
jae
inc
jmp
xchg
sub
stos
xchg
pop
push
cmp
push
out
loopne
pop
scas
ret
clc
xorb
push
jecxz
mov
cmpl
and
cmp
cmp
nop
cmpsl
adcb
xor
rolb
cmp
inc
inc
push
push
mov
loopne
test
xchg
adc
out
mov
pushf
lret
pop
out
lods
insb
inc
iret
pop
in
daa
cmp
outsl
or
add
cmp
sub
ja
cli
rcl
ljmp
jmp
cs
or
inc
lods
sub
scas
pushl
mov
popf
jo
in
adc
and
shll
lahf
xchg
mov
cli
popa
into
or
jl
sub
or
mov
cmp
pop
call
mov
data16
add
push
jb
jmp
mov
mov
lods
mov
cmp
sbb
hlt
stos
icebp
lea
ror
push
adc
cld
dec
stc
test
dec
sub
ret
ds
and
mov
rorl
les
jmp
adc
adc
mov
cld
pushf
mov
adc
or
rcr
decb
sbb
mov
adc
and
fidivrs
outsl
rcr
movsb
orl
mulb
fs
into
mov
rcr
subl
xchg
xchg
daa
in
loopne
jbe
loopne
jae
rol
xchg
and
dec
cmp
jecxz
pusha
mov
ds
xchg
push
loopne
jecxz
xchg
das
rolb
jb
movsb
xchg
ja
clc
push
cmp
fmuls
jmp
sub
and
xchg
in
iret
sub
cmc
lcall
mov
negb
fldl
and
push
dec
mov
add
xor
jnp
leave
jae
xor
push
sbb
xlat
mov
sub
mov
loopne
cld
sbb
call
adc
pop
mov
out
xlat
pushf
mov
push
add
mov
sub
mov
mov
push
sbb
pop
mov
out
push
mov
lock
stos
lock
push
iret
es
xchg
inc
dec
cld
test
repnz
stc
ret
adc
leave
pop
jae
sahf
stc
leave
aaa
or
push
cmp
sub
jbe
sarb
fcoml
orb
adc
or
iret
mov
pop
sbb
jae
or
sahf
push
decl
outsb
das
out
outsb
aad
mov
ret
adc
sub
pop
aas
dec
xchg
pushl
imul
call
xchg
jg
or
ret
inc
jl
and
test
mov
adc
movsl
ss
mov
xchg
pop
es
lea
shlb
jne
sti
mov
and
and
adc
call
outsl
std
xor
mov
out
add
and
out
jl
xchg
pop
pop
imul
dec
mov
push
jnp
les
inc
pop
in
and
mov
jbe
stos
dec
cltd
imul
add
push
push
dec
pop
cmp
adc
decl
fwait
mov
add
add
fsubl
and
test
mov
sbb
jno
adc
pop
mov
pusha
or
sbb
mov
aam
adc
inc
xchg
popf
add
int
xchg
iret
lods
push
arpl
inc
push
pop
in
test
inc
leave
mov
mov
jae
into
jae
mov
adc
lret
pop
cmc
jmp
flds
push
in
jno
adc
scas
fnsave
sbb
pop
mov
cmp
xchg
push
mov
cli
mov
sub
or
test
mov
mov
xchg
fld
cld
out
lret
add
movzbl
dec
orb
ljmp
inc
test
jle
nop
sarb
push
mov
outsl
push
mov
push
mov
and
mov
and
fmul
std
add
xor
roll
faddl
mov
mov
and
mov
pop
jg
mov
out
sbb
bound
ja
ja
and
inc
les
cmp
roll
cmp
test
lret
arpl
popf
lcall
loopne
incb
inc
fnstcw
aas
dec
rorl
xchg
push
fsts
jge
and
pop
jmp
incb
or
xor
das
inc
addr16
cmpsl
sub
mov
insl
sbb
dec
ljmp
arpl
je
pop
sbb
pop
pop
mov
int3
es
or
xchg
mov
bound
lcall
into
xor
adc
xor
fs
add
mov
jb
repz
mov
cmp
xchg
sti
dec
in
enter
data16
jns
or
jg
movsb
jecxz
pop
icebp
cmpsl
in
or
mov
dec
lock
cmc
mov
or
mov
sahf
lods
pop
das
insl
repz
fucomip
cltd
mov
and
jnp
sahf
shl
mov
repz
into
outsl
and
and
xorl
in
call
int3
bound
inc
out
cld
ja
mov
aas
subl
test
pop
add
sub
mov
dec
dec
sub
or
dec
jns
imul
and
mov
or
cmp
sub
sub
pusha
pop
icebp
pop
dec
jnp,pt
loopne
pop
rcll
iret
test
loopne
sub
sub
jne
push
enter
pushf
cmpsl
sub
jp
jo
data16
mov
ret
sbb
xchg
call
filds
pushf
shr
jb
sub
fwait
stos
sbb
pusha
sub
jbe
mov
xor
cs
jl
in
cmp
rcrl
dec
mov
sahf
mov
pop
inc
sarl
cmc
inc
clc
ja
dec
xor
pop
jl
push
clc
or
adc
cltd
inc
sub
nop
popa
jg
and
std
andps
loop
xchg
rcrl
push
add
dec
jno
mov
cmp
mov
pop
jne
fldl
arpl
fsub
lahf
adc
jb
fcompl
mov
in
cmpsb
aam
fwait
push
cmp
out
adc
jne,pt
in
scas
xchg
pop
idivl
mov
mov
xchg
js
pop
xor
cmpl
jnp
scas
cltd
lcall
push
int
lcall
adc
jno
pop
pop
es
mov
les
pop
xlat
jl
lock
shlb
movzbl
mov
mov
jg
sub
popa
add
into
jl
mov
push
push
loope
xchg
icebp
and
ss
out
pop
ficoms
jns
cmpsb
xchg
or
in
jnp
das
cltd
fstps
pop
pusha
icebp
mov
je
lret
outsl
jle
sub
dec
xchg
push
sub
jns
popa
cmc
cmp
leave
push
hlt
dec
mov
push
add
dec
cs
dec
xchg
pop
fdiv
loope
sub
cmp
cmpsl
mov
xor
lret
dec
xchg
bound
cmp
test
pop
push
xor
push
mov
pop
inc
push
mov
scas
pop
xchg
push
fstpt
imul
mov
rcrl
and
ret
in
mov
jne
adc
dec
sbbb
pushf
sbb
push
ja
adc
pcmpgtw
pop
pusha
xor
ret
sbb
mov
lock
sarl
je
sbb
lahf
cmpsb
mov
adc
leavew
pushf
xchg
sbb
jno
mov
sbb
outsl
cmp
scas
lods
adc
lods
xorl
fstp
cmp
adc
mov
jecxz
mov
mov
sub
mov
push
enter
ljmp
ljmp
cmp
icebp
ljmp
add
pop
sbb
fwait
fwait
pop
pop
out
cmp
shrb
lret
pushf
cld
mov
lret
inc
adc
pop
cmp
adc
or
pop
mov
push
xchg
sti
mov
add
fstp
cmp
sti
push
hlt
enter
insl
test
cmpb
and
sub
pop
sub
dec
inc
fidivl
push
mov
data16
scas
sub
clc
cmc
inc
clc
jns
fcmovbe
push
adc
movl
lahf
mov
daa
aam
cmp
adc
ja
adc
jb
jecxz
xchg
out
and
not
inc
lock
mov
fimull
xchg
pop
fdivrl
cld
sti
test
outsb
sbb
xchg
shlb
enter
sub
inc
fwait
sahf
ss
out
and
mov
xor
enter
sub
mov
cmpl
les
lret
int3
or
inc
fsubs
aad
scas
cmc
imul
outsb
jns
cmp
inc
cmc
das
ljmp
js
je
test
call
fs
cs
int
shll
std
push
jp
mov
daa
iret
dec
shrb
sbb
cmp
sub
sbb
fs
call
jge
inc
and
addb
fnstcw
push
inc
xor
gs
jns
add
mov
push
adc
dec
subb
xchg
fstpl
mov
data16
stc
call
ret
cmpsb
fbstp
sbb
xchg
mov
and
xchg
enter
cmpsb
adc
push
mov
mulb
mov
lock
rcr
das
fsubl
or
rorb
jl
test
add
add
sbb
pusha
sbb
adc
lock
outsb
xchg
push
pop
adc
or
js
mov
inc
sub
sbb
cmp
lds
mov
lds
shl
pop
sbb
repnz
mov
mov
inc
sub
pop
nop
pop
mov
inc
ss
shl
mov
jl
inc
sbb
inc
pop
call
stos
dec
xchg
cwtl
xchg
scas
mov
inc
xlat
ds
add
daa
inc
ret
inc
add
dec
dec
jle
pop
add
sub
mov
rcll
adc
fwait
sahf
mov
faddl
adc
ja
and
pusha
cmp
lcall
mov
jge
ljmp
test
jo
or
push
fmuls
rcl
inc
push
cmp
pop
jge
fimuls
push
push
mov
mov
xlat
sbb
cmp
sub
je
in
leave
movswl
sub
and
pop
inc
adc
dec
cs
subb
jecxz
push
sbb
pop
xor
cmp
jno
or
int
jns
pushl
sub
out
add
test
or
xlat
mov
jecxz
jbe
add
das
lds
inc
push
cmpl
sub
enter
lods
ljmp
popa
push
mov
mov
rclb
enter
pusha
bound
stos
in
cmpsb
out
pop
dec
inc
dec
je
pop
and
mov
cmp
cmpsl
popf
jp
adc
pushl
fldenv
lcall
jle
mov
pop
sbb
pop
fwait
xchg
mov
lahf
aad
add
mov
loope
movl
in
xchg
pop
jl
cmp
push
loop
adc
adc
clc
xor
push
xchg
and
adc
cmp
rorl
icebp
les
mov
test
xorl
inc
xchg
xchg
push
js
addr16
lods
lcall
popf
mov
and
cmp
cwtl
icebp
test
add
stc
adc
int3
lret
jecxz
cmp
add
or
push
jp,pt
pop
lahf
sbbb
push
cmp
mov
cwtl
repz
jbe
ds
ds
daa
scas
xor
fistl
into
mov
cmp
retw
jle
sub
movsb
fists
out
xchg
adc
cmp
scas
xchg
sbb
and
add
dec
lret
loope
xlat
mov
xchg
cs
dec
jge
mov
dec
icebp
or
test
xor
push
xlat
and
jp
stos
fcmovb
mov
int
push
arpl
sub
jge
enter
lods
int
cld
leave
out
jne
cltd
shlb
mov
cmp
test
push
pusha
xchg
shrl
mov
inc
push
icebp
xchg
pop
dec
bound
xchg
into
jl
lods
divl
mov
cmp
jae
lret
jne
data16
mov
iret
inc
aam
push
xchg
and
xor
pop
jmp
js
mov
lods
mov
enter
pop
or
pop
rcll
dec
aaa
nop
and
lret
inc
movsb
aad
repnz
add
cmp
push
xor
mov
push
mov
xchg
push
ss
ds
add
outsl
and
test
and
dec
ds
arpl
xchg
mov
mov
jg
addr16
mov
call
test
in
pop
inc
adc
in
xchg
lock
movsl
flds
fstl
ret
ret
cs
sbb
popa
xchg
out
es
pop
and
cld
stos
inc
inc
nop
mov
push
pop
repnz
shlb
jnp
fldt
subl
jb
loopne
inc
pop
sbb
mov
inc
sub
or
test
scas
jns
add
lock
icebp
or
xor
movsb
and
fldenv
pop
adc
inc
and
lea
xor
out
xchg
xchg
jmp
inc
scas
sub
test
lock
mov
jl
sbb
push
add
imul
nop
or
shrl
mov
subl
jmp
or
out
jbe
pop
sbb
dec
jb
pop
xchg
mov
jle
lods
jp
or
stc
push
mov
stos
cs
notl
cmp
or
or
bswap
les
inc
test
dec
mov
out
fidivrs
stos
push
jo
mov
push
sub
inc
mov
lret
aas
insl
dec
jne
lds
sbb
mov
and
sbb
push
fnstcw
loopne
inc
shl
test
stos
repz
push
and
addr16
cld
pop
jle
lcall
das
push
fs
mov
outsl
push
mov
dec
and
xor
out
shrd
enter
mov
sbb
dec
mov
xchg
push
leave
and
fnstsw
mov
inc
jne
stos
push
xchg
movzwl
pop
mov
cmc
mov
add
bound
in
punpckhdq
adc
xchg
je
add
loop
sub
lock
sbb
test
pusha
stos
xchg
addl
mov
add
into
mov
push
xlat
push
dec
push
add
jecxz
inc
in
cmp
insb
or
and
nop
dec
jno
stos
fs
inc
add
pop
imul
imul
add
mov
jb
adc
mov
insb
in
jnp
arpl
sub
pop
aad
adc
es
imul
mov
xor
rcll
ret
jns
push
pop
sbbb
outsl
out
or
fidivl
sub
stos
aam
aad
scas
jns
mov
aam
loopne
flds
cmp
cltd
addb
rol
cmp
iret
scas
fldcw
andb
call
xchg
iret
mov
jg
jp
bound
out
mov
jp
sbb
inc
sbb
and
cwtl
fnstcw
inc
out
repnz
mov
fldcw
fldenv
sub
xor
repnz
ret
prefetchwt1
xlat
pop
lahf
mov
std
jns
popa
clc
iret
in
mov
fcompl
pop
mov
jb
std
movaps
dec
into
ja
mov
pop
adc
mov
xor
leave
pop
mov
pop
xchg
mov
aam
fistpll
mov
inc
push
or
push
addb
cmp
lock
xchg
aaa
lods
stc
fnsave
push
cmp
push
fnstcw
repz
loopne
lods
jg
xor
in
jnp
nop
idivb
cmp
mull
cmp
and
fbstp
mov
aas
enter
test
cmpsl
pop
mov
xor
or
outsb
clc
pop
aad
add
je
adc
outsb
xor
mov
fs
call
enter
pop
cli
pop
xchg
add
aaa
push
jmp
cmp
negl
lcall
outsl
inc
xor
or
sbbl
stos
push
or
std
xchg
push
xlat
andl
pop
into
lds
clc
loopne
jl
mov
sbb
xor
mov
stos
cmc
stos
arpl
or
jmp
imul
mov
js
cs
cmp
stos
outsl
idivb
xchg
jmp
adc
and
push
mov
shrb
add
mov
sbb
ss
jno
push
cmpsl
insl
dec
lret
inc
test
lds
arpl
cmpsb
cli
mov
sub
fbstp
and
jae
movsl
xor
mov
fdivrs
and
xor
mov
movsb
mov
clc
push
cmp
sbb
inc
scas
cli
scas
loopne
push
enter
mov
mov
jle
lret
jmp
outsb
mov
jl
insl
jge
push
mov
dec
pop
imul
sbb
or
push
fsubr
aam
sub
inc
xchg
in
jl
scas
aam
xor
outsl
cwtl
pusha
xchg
dec
int
or
xchg
outsb
ret
xchg
jno
mov
dec
pop
adc
pop
and
std
cld
data16
incb
movsb
add
inc
shl
push
inc
fildll
push
cli
out
popf
add
xlat
dec
dec
or
nop
add
push
xchg
cmpsl
call
fnstcw
js
push
ljmp
fimuls
mov
push
xor
movsb
push
mov
test
adc
pop
sti
pop
sbb
fs
imul
pop
popf
pop
mov
or
sbb
mov
inc
into
inc
data16
mov
mov
test
mov
jle
pop
cs
mov
and
test
adc
cwtl
jb
negl
mov
adcl
fsubs
mov
enter
aad
inc
sti
adc
lock
cmp
and
sbb
test
int
gs
leave
jg
mov
ss
push
mov
aam
xor
sbb
stos
clc
xchg
xor
inc
cld
orb
and
pop
lahf
data16
cmp
adc
mov
pop
popa
sbb
xchg
jbe
dec
sbb
js
xchg
jp
xor
lret
sahf
rorl
xor
lods
fcomi
add
fdivl
cwtl
jecxz
ds
mov
adc
sti
pop
mov
ss
lods
out
nop
leave
or
stc
rcl
insb
outsb
shlb
ret
pop
push
std
jae
inc
inc
sub
into
jle
stc
out
inc
aam
les
dec
popa
jg
add
jg
or
popa
mov
sbb
jle
sahf
subl
popf
cmp
jp
dec
movsb
and
ret
out
mov
ret
lods
rcll
xor
test
cmp
adc
notl
aad
ret
and
pop
cmp
jno
xor
pop
dec
dec
or
sbb
fs
jae
dec
adc
lret
dec
shlb
bound
or
cs
adc
fbstp
cmp
mov
aaa
std
in
ds
js
push
loopne
sub
dec
jle
inc
push
je
in
mov
pop
jl
push
xlat
pushaw
repz
push
scas
cmpsb
xor
inc
push
in
jo
and
dec
sub
push
jp
add
faddl
sub
or
mov
loopne
notl
cltd
xchg
aad
jns
addb
mov
xor
in
push
rolb
ja
pushw
movsb
fidivrl
jno
data16
addr16
fs
sahf
leave
cmp
push
aad
mov
ret
sbb
xchg
pop
cltd
ret
les
sahf
fwait
xchg
pop
jmp
out
pop
mov
and
push
or
xchg
adc
push
frstor
xchg
xchg
mull
add
push
out
gs
inc
out
negl
push
cmovno
pop
inc
pop
arpl
push
add
xchg
mov
insb
dec
popa
mov
aaa
sub
addr16
sbb
sub
and
mov
xorb
pop
test
js
aam
xchg
jg
push
jae
fbstp
shrl
test
sub
cmp
jge
sti
jbe
cmp
imul
sahf
out
pop
lods
xor
dec
lds
and
scas
pop
cltd
xlat
mov
pop
stos
dec
je
nop
scas
imul
fcoml
scas
xchg
inc
push
lds
mov
insb
in
jae
imul
notl
aaa
sub
mov
push
ret
lret
lods
iret
stos
cmp
in
xchg
or
aas
in
lods
cwtl
mov
sbb
loop
or
stos
mov
jae
popa
mov
and
daa
out
nop
je
xchg
push
loopne
mov
imul
ficoml
movsl
sub
jmp
jno
test
mov
and
sti
adc
xchg
cmp
jl
sub
scas
and
add
xchg
ret
jle
push
jb
loope
pop
push
loop
leave
pushf
dec
outsb
arpl
jae
aad
or
xchg
stos
sahf
lcall
aad
ret
cmc
push
sahf
loopne
jg
mov
adc
add
pop
mov
cmp
push
mov
jg
cmpsb
icebp
xchg
dec
lret
imul
adc
fmull
movsl
fwait
stos
sbb
jle
mov
pop
sub
mov
lahf
daa
sbb
in
fldcw
mov
ja
popf
sub
dec
pop
das
aaa
cmp
loopne
mov
inc
mov
xchg
movl
cmp
cs
cmp
mov
inc
xor
std
pop
fidivrl
inc
in
fsubs
pop
mov
adc
test
jecxz
push
push
mov
rcl
mov
jns
mov
push
addr16
mov
mov
xor
xchg
pop
dec
sbb
mov
dec
mov
loopne
push
jbe
mov
ret
xchg
inc
call
popa
mov
dec
and
cmpsl
fdivl
sub
inc
xchg
data16
push
push
sbb
fdivp
fsubs
add
xchg
cmp
pop
jne
enter
addr16
add
shrl
dec
out
je
fcmovb
test
xlat
dec
fistpll
lret
xor
fsubl
jge
inc
sub
dec
mov
stos
lret
shll
push
cmpsb
dec
scas
ret
mov
mov
mov
lcall
clc
mov
pavgw
pop
adc
arpl
cltd
sbb
sub
xchg
in
andl
shrl
mov
xchg
or
sbb
lret
inc
ds
dec
fs
bnd
mov
push
lret
arpl
iret
mov
add
out
xchg
adc
or
test
inc
out
sbb
push
mov
out
add
xor
ljmp
cli
inc
shll
test
xor
mov
je
xchg
sbb
mov
fwait
subb
xchg
ficomps
sti
cmp
mov
aam
orb
lret
stos
sbb
lret
out
sti
lret
mov
xor
scas
mov
jl
dec
addr16
mov
shlb
jne
or
jge
fwait
rorb
scas
scas
jecxz
scas
iret
mov
xchg
xor
mov
push
push
js
pop
lahf
bound
cmp
mov
in
mov
inc
cmc
push
or
inc
xor
lea
and
ret
pop
stos
notl
enter
das
mov
mov
sub
mov
jnp
data16
pop
test
mov
pop
outsl
mov
xlat
mov
pop
mov
lahf
sub
imul
push
mull
dec
arpl
repz
xor
sbb
lods
pop
cmp
or
fldcw
not
or
adc
or
xor
or
and
sub
xchg
mov
push
xor
pop
mov
daa
clc
sahf
cwtl
imul
les
pop
in
xchg
pushf
rcl
lahf
jp
lods
mov
mov
lds
cmp
mov
js
cmp
in
lcall
inc
lock
mov
jmp
cmp
mov
mul
aas
loop
rcr
jle
fmull
mov
xchg
sbb
fsubrl
xorb
aam
popf
les
mov
insb
into
mov
daa
frstor
adc
rol
add
pushl
cmp
negl
xor
mov
call
cld
repnz
iret
in
mov
mov
arpl
or
or
pusha
sub
daa
lods
xchg
add
mov
lret
lsl
mov
out
dec
or
imul
jecxz
iret
push
and
cmp
scas
in
loopne
in
push
testl
adc
repz
loop
notb
inc
mov
and
enter
mov
add
mov
iret
dec
add
sbb
aas
xchg
inc
jmp
je
cmpsb
lods
mov
loopne
add
lock
test
jnp
outsb
shll
xchg
xchg
ret
shrb
push
add
popf
adc
jp
jl
dec
sbb
std
cld
pop
repnz
mov
push
mov
and
push
lds
repz
test
loop
lret
mulb
aad
jnp
lahf
adc
cmpsb
xchg
or
stc
push
out
sbb
mov
sub
xor
dec
or
ds
std
pop
xchg
jmp
std
dec
dec
push
in
hlt
cmpsl
enter
inc
aad
in
pop
adc
mov
push
rolb
daa
mov
jp
popf
clc
pusha
subb
cli
and
mov
mov
js
fldl
in
insb
nop
jb
xchg
orl
pop
repz
icebp
fnstenv
jle
sbb
lret
outsb
push
dec
or
dec
ja
xor
out
cli
cmp
dec
and
or
mov
lods
jmp
std
outsl
mov
sub
xchg
js
enter
inc
xchg
inc
xchg
mov
lret
shlb
popa
leave
leave
cli
inc
dec
pop
movsb
sub
add
negb
and
jb
roll
lret
lods
int3
xor
outsb
popf
and
inc
es
imul
sub
or
ret
sub
gs
gs
mov
mov
add
cmpsl
adc
or
jge
mov
cmpb
push
or
js
in
fsubrs
pop
adc
xchg
mov
jp
dec
popl
outsl
jns
stc
mov
push
stos
inc
aam
sbb
mov
aaa
inc
cwtl
push
iret
add
call
mov
cmpl
jae
jecxz
in
rclb
iret
sub
shll
adc
js
xchg
pop
and
movsl
scas
push
xchg
push
or
dec
ljmp
mov
sub
add
mov
movsl
push
lahf
and
push
jno
jne
daa
jmpw
pop
mov
mov
jecxz
arpl
inc
sub
add
fucomi
cld
imul
arpl
or
pop
and
add
je
lcall
jae
movsl
push
inc
mull
pop
mov
cmp
mov
jb
lahf
add
jp
insl
out
jl
out
xchg
add
and
scas
inc
cli
add
xchg
and
cmp
mov
push
out
sub
mulps
pop
int
sar
test
jge
push
mov
adc
pop
movsb
adc
lret
mov
fidivs
in
and
dec
aaa
rcr
in
scas
xchg
inc
aad
sbb
pop
jnp
shll
mov
or
cltd
add
mov
lods
cmp
lahf
xchg
insl
xchg
jo
dec
push
daa
or
in
mov
mov
hlt
std
mov
pop
sbb
out
sub
fdivp
std
pop
jbe
push
xor
xchg
jae
fimull
xor
xchg
popl
adc
movsb
lock
imul
mov
push
xchg
shr
out
js
mov
pop
push
out
cmpsl
jae
out
xchg
pop
and
mov
nop
out
orl
cmp
mov
or
push
or
dec
mov
sub
loop
push
shlb
std
pop
push
inc
lahf
or
mov
fstpl
pop
dec
pop
aad
push
push
popf
dec
aas
pop
fucomp
inc
and
adc
jno
cwtl
sbb
bound
push
fnstsw
fs
mov
or
fisttpl
fidivs
fwait
out
sbb
sti
pop
lret
loopne
jecxz
les
dec
add
aam
rolb
xchg
xor
xchg
aaa
push
inc
out
test
push
addb
imulb
stc
fs
pop
jae
and
push
fucom
mov
inc
and
mov
mov
ljmp
xor
jo
adc
lcall
push
lods
sub
dec
xchg
shll
mov
movsl
xor
arpl
xor
sub
inc
push
in
push
inc
in
scas
inc
mov
mov
aas
adc
fs
aad
push
rcl
mov
fsub
mov
ja
jg
xchg
fwait
sahf
or
repnz
lds
repnz
dec
and
push
out
out
rol
shl
cmp
sub
xor
das
sahf
lods
dec
call
aam
adc
loope
jnp
enter
fnstenv
cltd
repz
adc
out
pop
sub
adc
mov
jnp
shl
jge
mov
call
pop
mov
adc
test
nopl
cmp
pop
fwait
outsl
test
and
xchg
add
stos
mov
sti
jmp
pop
push
das
mov
push
push
jbe
aam
add
loop
push
imul
dec
clc
and
sub
and
outsb
inc
push
xor
dec
lahf
mov
std
scas
out
test
cmp
jge
adcl
push
dec
mov
jne
test
arpl
mov
add
test
mov
adc
loop
dec
adc
xlat
adc
sahf
jge
mov
cmc
movsl
in
popf
mov
add
scas
mov
add
add
cmpsl
les
xchg
mov
cmc
push
jecxz
int
dec
pop
push
enter
mov
aad
pop
cmp
push
rcll
scas
pop
jmp
xor
dec
xor
sbb
xor
and
sub
ror
dec
or
and
repz
mov
push
adc
mov
mov
xchg
outsl
dec
adcb
dec
inc
in
icebp
or
dec
jo
ret
in
jge
push
pop
jbe
jb
pop
sbbb
cmc
sbb
jg
push
int3
jl
xchg
lahf
inc
dec
mov
sbb
jg
bound
das
adc
sub
dec
stos
in
push
jne
dec
lods
je
sub
ja
ret
xchg
or
adc
pusha
ljmp
cmpsb
imul
aas
test
push
lret
xchg
inc
xchg
not
sahf
scas
popf
ss
aas
movsb
pop
cs
lods
inc
jnp
mov
cs
jae
and
or
dec
xor
loop
inc
push
cmpsb
jg
jp
orl
mov
imul
cmpsl
ret
or
stos
std
xchg
movsb
subl
mov
mov
xor
xchg
jb
mov
lret
fldcw
push
mov
subb
mov
mov
add
stos
fisubrs
jl
cmp
cwtl
lods
or
pop
cs
into
push
lret
nop
repnz
aam
mov
pop
or
nop/reserved
pop
pop
mov
lahf
es
mov
pop
jl
jl
fwait
imul
out
out
xchg
aas
mov
jl
ja
das
ljmp
sbb
xor
test
gs
jns
lods
nop
movl
ficomps
sub
lods
jne
aam
mov
ficoml
xlat
jbe
lcall
gs
sti
jge
sahf
mov
mov
xchg
or
pop
repnz
das
push
push
xlat
pop
icebp
dec
insl
jae
mov
popf
leave
add
incl
scas
popf
sbb
push
test
lret
icebp
shlb
adc
call
fisubrl
std
push
cmp
xor
or
cwtl
push
insb
ret
push
ret
fs
jl
pop
xchg
std
cmp
lea
mov
call
add
fisubs
push
in
mov
inc
out
jae
xor
and
cmp
xchg
and
jmp
test
int3
sbb
xlat
mov
mov
or
and
fistpl
rcrl
imul
mov
adc
in
add
repz
cmp
and
xchg
sub
inc
push
test
imul
sbb
push
insb
mov
mov
cmp
popf
aad
add
xchg
mov
jecxz
sub
dec
or
jns
add
into
cmp
push
lcall
test
aam
xor
sti
imul
lret
stc
push
mov
addb
ss
xor
pop
sub
in
adc
orb
clc
push
in
push
xor
addr16
fsubl
mov
mov
jp
jp
lock
sahf
notl
pop
nop
cmc
lea
cmp
mov
xchg
lret
ljmp
mov
sti
pop
cmp
mov
xchg
ret
sub
js
cmp
iret
add
std
dec
dec
mov
push
loopne
ret
cmp
add
popf
pop
rorl
xchg
jnp
movb
jg
pop
inc
je
cmc
or
ja
pop
dec
js
sub
adc
pop
nop
adcl
in
bound
mov
imul
jns
pop
adc
fsubl
ss
enter
mov
in
inc
pop
jbe
mov
lods
fdivrs
xchg
sub
pop
xor
popl
clc
stc
in
sub
pop
mov
dec
lods
xchg
mov
mov
cmp
mov
dec
dec
jne
ljmp
out
cmpsb
icebp
fstps
inc
or
test
mov
inc
js
jno
aam
leave
xchg
inc
lret
mov
push
das
add
mov
push
mov
cli
outsb
sarb
pusha
stos
xchg
pop
aad
pop
mov
pop
xor
daa
and
jae
shr
xchg
push
aas
xlat
gs
xorb
lods
jnp
xor
lock
scas
xchg
lahf
pop
pushf
mov
shll
icebp
jo
mulb
pop
adc
lock
andl
push
test
xchg
xor
add
stos
ljmp
lahf
adc
in
cltd
jmp
icebp
nop
aam
rorb
ja
aad
int
ficompl
mov
jmp
xor
inc
iret
fstp
enter
adc
add
into
dec
push
imul
push
aad
lea
push
pop
pop
das
shll
in
xor
lods
inc
cmp
imul
jmp
push
push
pop
push
or
int3
sub
stc
pusha
mov
push
add
test
adc
es
sahf
or
jo
mov
imull
stos
mov
pushf
stos
inc
popa
int
loopne
stos
fimuls
sbb
inc
pop
cmp
sub
test
jns
ljmp
dec
dec
adc
insl
add
dec
enter
movsb
out
xor
adc
mov
xchg
dec
in
jae
sbb
pop
cmp
adc
fwait
mov
adc
mov
push
pusha
lret
dec
push
or
popf
xchg
cmp
xchg
push
add
mov
push
cmp
imul
enter
cli
pop
sbbl
cli
cwtl
xchg
add
mov
mov
and
pop
jecxz
fadds
pushf
xor
mov
icebp
cltd
cwtl
add
mov
lcall
test
or
jle
in
cmpsb
jne
jns
fldenv
and
xor
jb
or
je
movsb
nopl
loop
mov
outsb
test
add
sbb
arpl
insl
dec
jmp
ja
xor
movsl
lds
push
sub
mov
xor
push
add
rorb
out
mov
je
adc
outsb
lahf
dec
xor
js
mov
jle
lcall
js
in
mov
bound
addr16
push
add
orl
lock
inc
inc
aaa
push
sbb
stos
cmp
shrb
add
ja
xchg
in
mov
mov
es
ss
sub
jp
ret
sti
mov
lahf
dec
shrl
cmpsb
push
cltd
lret
mov
adc
mov
push
fs
sti
pushl
pop
loop
adc
int
xor
hlt
jmp
inc
lahf
flds
ljmp
jnp
cmpsl
jl
or
push
fnstenv
pop
lock
sub
loopne
sub
js
xchg
jne
push
insl
push
rcl
mov
testb
outsb
jmp
dec
lea
mov
in
jmp
fldcw
mov
and
push
insl
cmp
sub
inc
add
xchg
int
mov
pop
sub
mov
cmp
mov
mov
add
sbb
icebp
jle
adc
mov
cmp
xor
cld
lea
leave
pop
inc
xor
adc
test
stos
imul
and
push
arpl
in
lods
ret
ds
lret
leave
xchg
adc
js
stos
test
xchg
mov
push
lock
push
or
cmp
fsubr
dec
popf
xor
jge
shll
divl
into
bnd
inc
push
mov
sbb
mov
inc
pop
fstps
data16
xor
movsl
adc
xor
hlt
cwtl
add
add
jge
mov
test
xor
out
sti
cwtl
imul
xlat
cmp
adc
daa
cmp
pop
mov
mov
sub
shll
inc
jbe
push
xor
and
dec
or
pop
imul
sub
xor
push
add
xor
movsb
into
stc
mov
adc
loop
call
cwtl
nop
pop
pusha
in
mov
sub
fsubrl
mov
jmp
fs
xchg
mov
popf
stos
adc
mov
scas
push
rcl
mov
imulb
mov
sbb
mov
incb
pop
leave
sub
fiaddl
movsb
test
dec
push
mov
dec
imul
add
out
out
inc
push
and
rorb
sub
insb
jmp
and
mov
hlt
lds
add
push
pop
jo
sbb
das
hlt
movsb
mov
sbb
jmp
movsb
jne
push
sub
jg
push
sti
loop
std
int
add
lds
pop
sub
push
dec
sub
pop
cmp
or
mov
cld
in
popf
sbb
fimull
push
adc
cmp
sub
mov
loope
fldt
div
into
repz
int
mov
xchg
xchg
ljmp
dec
aas
fstp
mov
cmp
adc
xlat
andb
cmp
inc
aam
push
shrl
or
pop
sahf
vaddsubps
iret
xchg
sahf
push
ret
xor
sub
mov
lds
fldenv
mov
and
fiaddl
std
cltd
inc
stos
les
nop
dec
add
xor
lods
pop
stos
cmpsb
mov
pop
xchg
fsubrs
add
jno
mov
jle
xchg
repnz
jne
loope
repnz
mov
in
pop
sbb
adc
lret
adc
and
jg
mov
outsl
mov
mov
sti
daa
push
mov
push
sti
je
or
jp
mov
loopne
outsl
xlat
sub
jg
pop
dec
shll
jne
data16
mov
mov
ljmp
addr16
or
cli
xchg
pop
ds
jbe
shl
aam
mov
imul
rolb
jbe
and
pop
push
adc
push
adc
je
jno
arpl
push
jo
sti
into
push
xor
insl
outsb
fadds
cmp
repz
jae
jle
insb
push
outsl
push
cmp
dec
shl
dec
xchg
push
inc
dec
dec
adc
mov
sar
or
push
xchg
fmulp
loop
out
fcoms
lea
loop
add
sbb
clc
pop
and
das
movsb
jb
fsts
pop
out
push
cmp
pop
movsb
sub
lcall
pop
fs
pop
dec
stos
xor
inc
mov
test
mov
movups
movsl
aaa
mov
adc
loope
in
lods
int3
dec
push
or
incl
sbb
scas
test
push
cld
arpl
aas
fwait
dec
jo
cmp
or
sahf
sbb
pop
pop
nop
push
movsl
add
arpl
imul
out
mov
inc
sti
xor
dec
lea
aam
mov
xor
mov
std
repnz
jae
jmp
jg
xchg
pop
or
add
xor
add
sbb
jg
push
mov
mov
mov
scas
addr16
xchg
ror
mov
push
les
mov
pop
lods
gs
pop
sbb
outsl
loopne
movsb
test
test
jmp
popl
and
icebp
insl
sti
shll
mov
pop
lcall
inc
push
shlb
clc
sbb
mov
push
sahf
loop
xor
or
and
jbe
arpl
sub
push
dec
lods
adc
sub
push
pop
iret
pop
aam
mov
cltd
iret
das
movsl
testl
sub
push
outsb
jmp
sti
jae
xor
add
fchs
div
xor
dec
adc
xor
test
sbb
pop
repnz
sbb
and
gs
jb
sub
push
sbb
sub
jo
mov
mov
dec
add
call
add
inc
icebp
cmpb
jns
xlat
dec
pushf
cmp
insb
jecxz
fcomip
insl
mov
and
pop
xchg
mov
mov
push
sbb
mov
insb
add
pop
rcrl
pop
mov
lret
stos
les
push
mov
ret
popa
xor
xlat
sbb
sahf
outsl
cmp
jno
mov
cmp
sbb
lea
ret
mov
adc
jmp
sub
and
outsb
pop
xor
ret
push
add
lret
cmp
mov
add
dec
test
adc
jecxz
nop
sbb
or
out
rol
jmp
push
mov
cli
sbb
mov
and
in
inc
ds
sbb
js
ljmp
cltd
adc
insb
jnp
jmp
roll
mov
ret
push
sti
inc
shll
xchg
lods
mov
add
ds
hlt
popa
xor
int3
out
cld
xchg
dec
mov
out
lods
mov
repnz
lods
adc
loope
push
xchg
sbb
dec
sbb
lahf
stos
jnp
int3
lahf
aad
mov
or
sub
fs
jle
xor
xchg
or
cmp
stos
test
subb
push
iret
int
pop
aad
jnp
push
scas
pop
xchg
dec
mov
pop
or
mov
adc
out
cwtl
adc
sub
dec
jle
popl
cmp
fst
std
imul
lods
inc
iret
mov
cmpsb
lock
movsb
push
sub
xor
pop
fs
call
mov
mov
into
fcompl
and
movsb
jmp
scas
add
femms
out
pop
lds
cltd
notl
pop
ljmp
jecxz
fldenv
movsb
jae
jmp
cmp
loopne
sbb
cwtl
xchg
scas
sbb
push
push
mov
adc
fs
icebp
out
mov
and
shlb
mov
test
or
xlat
or
xchg
xor
inc
jl
cs
add
fisubl
stos
inc
scas
jle
and
jecxz
enter
clc
icebp
sub
mov
pop
sub
cmp
iret
in
fwait
cmp
mov
jl
sbb
mov
test
ret
out
inc
ret
or
pop
popf
add
xchg
orb
scas
insb
dec
movsb
divb
jmp
fistps
xor
or
shrl
lcall
mov
int3
cmp
xchg
test
call
jnp
iret
out
dec
cwtl
xchg
rcll
enter
enter
in
and
pop
inc
pop
imul
push
xor
push
jne
loop
or
lret
add
jl
into
add
or
rcl
call
pop
push
jno
andb
jbe
jno
or
stos
aad
jbe
jecxz
ja
sub
clc
sub
jp
sub
push
cmpsl
jmp
add
popf
lahf
test
push
repnz
mov
or
xor
mov
addb
loopne
aaa
mov
inc
mov
sbb
ret
cwtl
ret
xor
insb
or
dec
push
dec
ffreep
ficompl
push
ss
cmp
jo
xchg
into
xorl
push
adc
inc
xor
xchg
into
loop
mov
jmp
je
lret
pop
js
nop
dec
sbb
cli
adc
sarl
mov
mov
lret
fwait
mov
push
int
cld
cld
xchg
or
and
in
sub
xchg
and
icebp
sarb
adc
loope
sub
mov
out
jae
fsubrs
mov
jmp
adc
test
cmp
popf
shll
sub
sub
mov
es
jl
xor
cmp
add
xchg
fistpll
push
and
jecxz
lds
bnd
imul
push
dec
mov
clc
adc
mov
push
xor
mov
loop
movsl
fs
cmc
xchg
test
lret
leave
sub
rol
mov
out
xchg
lods
mov
movsb
sub
xor
pop
sahf
mov
mov
cs
push
rcr
mov
enter
scas
inc
arpl
ret
add
imul
into
ficompl
out
mov
sub
fcmovnb
popa
lret
aad
pop
es
push
shlb
mov
hlt
loope
mov
test
out
xor
push
push
stos
clc
gs
and
add
xorl
scas
push
jge
pusha
mov
sbb
mov
outsl
inc
mov
xlat
mov
push
aaa
sbb
sub
sub
or
call
adc
addr16
lods
add
pop
sbb
jge
inc
mov
mov
fsubrp
pop
iret
popa
insl
loop
shl
cmpsb
xor
dec
jmp
loop
cmp
adc
mov
sti
mov
push
pop
or
dec
sti
aas
fimull
subl
sub
movsl
aaa
mov
cmp
xchg
test
cmp
lods
iret
subl
aaa
cwtl
jmp
jle
pop
xor
push
lret
mov
stos
xorb
and
repnz
out
adc
mov
mov
jae
xchg
fstpt
and
cmc
mov
popa
fs
add
inc
inc
jnp
das
hlt
gs
hlt
cmc
pusha
xchg
mov
pop
das
pop
sbb
ret
xlat
cmp
push
call
sahf
fistl
push
dec
cmp
dec
popa
or
and
or
fs
es
nop
pusha
fs
movsl
insl
cmc
ja
je
sti
pop
lahf
daa
mov
sti
mov
xor
xchg
out
and
mov
hlt
addl
mov
mov
push
in
punpckldq
enter
dec
push
mov
inc
mov
jb
testl
mov
adc
test
push
outsb
mov
push
push
orb
xchg
add
loopne
jbe
adc
push
cmp
mov
pushf
data16
push
sub
pop
ficoms
cmp
xchg
jg
cmpsb
sub
mov
fcompl
js
into
sub
icebp
cld
lret
into
push
mov
and
add
mov
and
dec
xor
ds
mov
mov
sbb
jb
sub
push
inc
jmp
xor
mov
mov
lods
addb
inc
lods
fwait
cli
pusha
lret
rol
sbb
and
xor
pop
xor
das
cmp
ror
fdivrl
pushf
dec
cltd
jo
inc
cwtl
daa
jmp
mov
stos
add
mov
mov
loope
mov
in
add
lcall
sub
rcrb
push
aas
andl
popf
cwtl
add
out
and
test
jg
out
roll
mov
pop
jecxz
fxch
adc
rcl
push
push
adc
mov
je
fildll
sbb
mov
pop
xchg
sti
dec
and
imul
ja
cmp
outsl
inc
test
cmp
cltd
xchg
fcomp
xchg
sbbb
dec
mov
adc
add
mov
add
and
data16
sub
xor
inc
jnp
fs
out
into
insb
xor
dec
stc
pop
jecxz
fnstenv
lods
dec
inc
imul
rolb
push
arpl
xor
cmpsb
add
fimull
stos
sbb
jmp
mov
mov
pop
test
lods
adc
cmc
ror
jo
pop
adc
aas
insl
imul
sbb
push
pop
les
mov
or
pop
mov
nop
jle
push
and
xchg
mov
inc
aam
mov
mov
xor
mov
dec
cmpsl
fstpl
mov
aas
mov
xchg
xchg
adc
shr
cmpsl
loopne
dec
call
jo
scas
jnp
sti
hlt
imul
je
fsubrp
mov
mov
cmp
icebp
std
rorl
lods
dec
push
lret
movsl
inc
sub
imul
add
dec
inc
xchg
xchg
cmpsl
add
and
test
cmp
stos
ror
adc
test
sbb
leave
push
sbb
jb
pop
sbb
dec
arpl
jbe
add
cwtl
and
fnsave
xor
pop
mov
or
les
outsl
mov
mov
ficoms
imul
jnp
mov
adc
insb
push
cmpsb
sbb
ds
adc
mov
sub
mov
shrl
inc
cmc
jmp
jg
rcrb
in
jp
adc
xor
jno
xor
jno
loopne
clc
sbb
mov
mov
push
shll
and
add
sub
inc
lret
outsb
pop
pushf
cld
or
cmp
xchg
out
xchg
lret
sub
xor
cld
mov
cltd
xchg
adc
sub
enter
sub
andl
push
push
jg
jo
jl
jg
lds
push
scas
div
cmp
adc
cmp
inc
std
cli
sub
shrb
xor
repnz
popa
insl
cmpsb
fnclex
cmp
sahf
icebp
inc
ret
sbbb
sub
sbb
rcr
dec
cmp
jle
mov
fwait
cmp
pop
mov
cmpsl
mov
push
push
out
jo
fcmovbe
js
adc
rolb
jmp
cmpsl
lcall
adc
mov
aas
icebp
adc
lods
jae
pop
add
movsl
xor
scas
inc
cmp
dec
xor
add
std
cmp
mov
xchg
xchg
jno
pop
sbb
pop
inc
outsl
clc
sar
je
pushf
push
inc
pop
jmp
iret
fisubrs
inc
aam
add
mov
and
inc
insl
out
nop
out
push
lods
jae
outsl
adc
sbb
or
out
add
movsb
out
push
pop
movsb
pop
mov
push
add
gs
imul
mov
js
rorb
inc
xor
loopne
cld
adc
pop
jp
push
mov
popa
push
jge
jl
mov
in
pop
push
add
inc
orb
pop
out
push
addr16
or
mov
sub
int3
adc
fidivrl
movb
dec
mov
sub
add
mov
mov
insl
pop
fld
cs
pop
or
sbb
inc
jo
add
jl
stos
jg
repz
cltd
sbb
xor
mov
stos
daa
push
jge
jg
mov
sti
pop
mov
test
mov
xchg
push
fwait
cld
adc
or
pop
xchg
mov
add
out
cwtl
xchg
sbb
daa
push
pop
mov
sar
push
insl
aas
jo
or
mov
jae
sub
popa
sbb
push
mov
ret
pop
pop
pop
in
gs
stos
jmp
iret
pushf
inc
dec
dec
imul
sub
mov
sub
into
push
mov
inc
outsl
sbb
xor
sbb
iret
lret
mov
into
inc
adcb
call
and
ljmp
loop
in
mov
rorl
js,pt
mov
lds
jp
dec
and
subb
insl
ds
sbb
jg
orl
fcomps
pop
out
mov
xor
jecxz
xchg
pop
pop
xlat
in
push
sub
jle
jae
sub
dec
adc
test
insb
xor
cltd
jle
push
aad
inc
mov
mov
mov
ja
mov
cmpsb
sbb
or
test
dec
add
xlat
roll
cmpsl
sarb
xchg
insl
pushf
dec
stos
les
pop
sub
xlat
adc
dec
mov
mov
xchg
aad
xor
nop
lods
push
popf
lcall
dec
data16
in
push
and
push
movsl
cmp
add
xor
mov
adc
cwtl
xchg
cmp
jecxz
lea
imul
add
jecxz
test
adc
sbb
sub
lret
pop
add
aas
jno
outsl
scas
inc
push
jp
cmpsb
scas
xor
cmp
push
add
dec
rcl
cmp
add
pop
loop
scas
daa
subl
sub
call
jb
sarl
push
in
lcall
lods
xchg
adc
mov
jno
cltd
or
mov
add
sbb
inc
nop
xor
lcall
xchg
test
out
mov
inc
fildll
int3
pop
dec
inc
pop
test
xor
lock
dec
jbe
leave
jo
xorb
ja
les
pop
push
fiaddl
mov
sbb
and
addr16
call
sarl
pop
pushf
sub
sahf
dec
sbb
add
imul
adc
mov
xchg
add
jbe
cmp
xchg
push
jle
jmp
std
inc
inc
xchg
test
es
or
loope
inc
shrl
es
pop
test
fsubrl
gs
jns
loopne
out
cmp
mov
jg
jo
jmp
pop
sbb
repnz
popa
mov
jbe
jbe
mov
lcall
loopne
movsl
nop
cmpsb
xor
lea
xor
mov
loopne
sbb
clc
and
in
xchg
pop
dec
lret
es
aas
sub
add
fsubp
testl
cmc
movsb
dec
push
insb
pop
push
insb
push
fnstcw
cmp
nop
push
mov
icebp
mov
mov
dec
jns
and
lods
sbb
jmp
out
test
xorl
mov
jne
mov
repnz
rcll
aam
fnsave
cmpsl
int
mov
jae
push
lods
mov
loopne
into
outsl
cwtl
cmp
outsb
int
sbb
and
out
dec
fadds
mov
scas
push
inc
pop
dec
popf
xchg
dec
das
push
xchg
leave
fyl2xp1
lods
sbb
lods
push
mov
adc
adc
fdivs
ficoml
into
aas
ffreep
push
pop
push
negl
dec
jp
mov
pusha
outsl
inc
xchg
jae
xlat
dec
mov
mov
xchg
stc
mov
adc
stos
mov
mov
stc
mov
clc
cmpsb
fildll
jno
sbb
jo
stc
cs
aas
cwtl
or
cmpsb
jp
jnp
mov
pushf
stos
add
dec
mov
loop
cmp
xlat
ss
cmpsb
leave
lcall
std
sbb
adc
loop
das
mov
sbbb
sub
bswap
imul
aad
and
jge
outsl
jns
into
outsb
pop
jp
xchg
inc
fdivr
adc
adc
cmp
rorl
loopne
lods
xchg
mov
lret
mov
dec
ljmp
xchg
ficompl
std
and
inc
outsl
mov
or
fwait
cs
dec
sbb
int
movsb
addr16
fisttpll
sub
or
mov
adc
icebp
push
js
add
sub
leave
mov
mov
sbb
sub
orl
push
cmp
sbb
std
jmp
in
sbb
cmp
das
xchg
push
cmpsl
mov
jg
mov
or
jge
ss
xchg
cmp
mov
stos
add
out
dec
lret
sub
inc
lods
or
xchg
nop
push
push
push
aam
es
insl
in
call
leave
mov
dec
xchg
repnz
mov
xor
movsb
stos
push
mov
adc
mov
mov
or
push
loop
or
xchg
jbe
rcrl
stos
jmp
or
das
pop
scas
mov
xor
stc
cmp
mov
mov
xor
sub
les
mov
and
addr16
push
push
xchg
popw
lods
or
add
mov
and
mov
call
adc
mov
fisttpll
cmpsb
xor
dec
hlt
in
stos
xchg
xchg
push
and
movsl
pop
ja
xorb
aas
sbb
popf
xorl
lahf
mov
cmp
jmp
xchg
sbb
pop
adc
inc
fistl
fildl
ja
cld
shrl
sub
dec
jae
pop
pop
add
add
mov
mov
jne
mov
pop
mov
jmp
pop
push
pop
hlt
inc
fs
loopne
arpl
cmp
lret
dec
or
imul
jl
xchg
fldl
icebp
xor
inc
int
enter
data16
shrb
lret
inc
mov
sahf
out
mov
outsb
fstpt
test
or
xor
rcrl
in
xchg
dec
xor
or
mov
into
lods
mov
pop
outsb
hlt
sbb
addr16
jl
ds
adc
imul
sub
repnz
popf
divl
arpl
daa
bound
xchg
lret
data16
aaa
jg
jecxz
dec
fdivs
sub
xor
loop
push
cs
or
mov
push
addb
cltd
lods
cmpl
popf
add
jecxz
jmp
je
loopne
jo
movsl
push
pop
pop
loopne
cmp
lcall
ja
test
push
sbb
xchg
inc
xor
into
mov
out
mov
push
or
test
aad
fldt
out
push
jge
dec
hlt
cmp
jle
ss
cmpsb
dec
add
sarl
pushf
push
xchg
scas
fsts
ror
cmp
jo
dec
pop
ja
mov
sbb
scas
mov
push
mov
xor
aaa
mov
xor
xlat
bound
pop
test
mov
repz
sar
sub
xor
call
rorb
inc
lods
inc
movsb
cmp
stos
xchg
sbb
adc
or
jmp
inc
cmpsb
mov
daa
lds
dec
inc
sti
fs
adc
dec
push
jmp
dec
fs
call
lret
jae
xor
fildl
dec
dec
inc
sbb
dec
sti
xor
shl
xchg
pop
pop
lods
push
inc
xor
dec
mov
xor
insb
xor
mov
std
jnp
add
aam
xchg
add
les
push
jmp
mov
jns
push
pop
mov
or
sbbb
inc
aaa
aaa
jnp
test
rcrl
cmp
dec
inc
lahf
add
xchg
cmp
stc
sub
cmpb
pop
fwait
rorb
inc
xor
pop
mov
pusha
add
test
insl
int
mov
lret
xchg
or
pop
loopne
in
pop
test
popa
es
movsb
stc
pop
jle
dec
daa
jg
into
call
inc
xor
sbb
jmp
ljmp
xchg
jb
js
and
fdivl
mov
add
mov
imul
cmp
sarb
pop
sub
xor
pop
xor
sub
mov
adc
inc
daa
pushf
sbb
mov
testb
push
or
cmp
adc
and
popa
pop
dec
sub
cmpl
in
cmc
adcl
fnsave
inc
dec
lea
popf
lcall
inc
stc
jp
cmp
cmp
dec
or
mov
lahf
inc
adc
es
pop
in
dec
mov
or
jl
xchg
jb
mov
insl
out
xlat
cmp
jno
test
adc
jbe
dec
sub
lods
pushf
cltd
dec
lds
shlb
mov
cmp
jbe
push
pusha
lret
cmc
xchg
sbb
rolb
outsl
in
pop
pop
sbb
outsl
cmp
into
or
mov
loope
idivl
mov
inc
andb
cli
or
shlb
shl
hlt
ds
sub
movsb
xchg
movsl
jl
mov
scas
jmp
in
jnp
iret
jge
cmp
jecxz
or
xchg
movsb
jmp
test
mov
mov
add
aas
sub
and
xor
cmp
mov
hlt
jne
sub
dec
andb
jmp
push
sub
aad
repz
icebp
dec
cmpsb
adc
jp
pop
mov
cmp
and
cmp
es
mov
into
testb
and
push
add
sbb
xor
mov
inc
mov
xchg
fisttps
inc
mov
testb
jle
inc
lock
xchg
sar
test
scas
lea
std
arpl
mov
mov
xchg
jne
inc
dec
stc
push
jbe
jecxz
dec
scas
dec
hlt
pop
inc
aaa
push
leave
dec
dec
pushf
inc
es
push
test
sub
inc
push
pusha
out
pushf
mov
scas
inc
jle
mov
mov
sahf
lock
leave
jle
sahf
cltd
and
ds
jle
outsl
sbb
lock
iret
lods
out
mov
xchg
and
das
rcll
incb
ficompl
mov
xchg
or
mov
mov
popf
fmulp
cmpsl
mov
xchg
cmp
jecxz
lret
popf
pop
in
out
enter
push
inc
pop
dec
mov
or
das
mov
push
cmp
xchg
and
cs
xor
and
jae
sbb
icebp
call
adc
fsubl
jb
cmp
movsb
hlt
dec
push
stc
xor
lahf
js
aas
mov
rcll
add
scas
in
xchg
push
out
aaa
sbb
xor
mov
and
xlat
nop
cmp
mov
imul
push
ljmp
pop
jmp
cmp
or
mov
repnz
das
stc
push
enter
push
bound
push
ret
iret
jbe
cmp
mov
movsb
int
sub
sbb
mov
sbb
add
sub
fnsave
das
cmc
gs
arpl
test
adc
or
ficompl
add
fcoms
mov
cmp
jmp
pop
test
adc
lret
push
cmp
cmpsl
flds
fwait
les
mov
inc
lds
jmp
and
sti
popf
xchg
ret
addr16
ja
push
inc
add
adc
sbb
out
inc
push
adc
and
addl
jle
mov
aaa
pop
jge
scas
jo,pn
push
sbbb
pop
lock
dec
lods
lcall
jnp
rcr
mov
shlb
push
jae
insl
lret
prefetchwt1
or
outsb
mov
fisttpl
push
xchg
mov
in
cmp
hlt
mov
sub
bound
lds
sub
sub
jno
push
int
push
je
outsl
outsl
dec
test
bound
sbb
je
dec
add
mov
jne
adc
cltd
pop
sahf
pop
or
lahf
dec
daa
add
jmp
adc
fisttpll
dec
fbstp
push
pop
and
sub
stos
cmp
sub
lahf
push
test
fs
jge
xor
mov
xlat
in
dec
mov
rol
stos
stc
jnp
mov
adc
lret
push
stc
inc
add
lea
or
repnz
lock
or
inc
cmpb
fwait
nop
jecxz
mov
addl
jl
ss
addr16
inc
lcall
fwait
adc
aas
fadd
leave
out
add
pushf
lock
and
jecxz
xchg
sub
lods
pushf
push
shl
fcomip
popf
mov
out
add
pop
pop
jbe
nop
mov
movsb
push
outsb
ja
sbb
xchg
fstpt
dec
out
lds
ljmp
xor
nop
lcall
pop
pop
nop
jae
adc
xchg
sbbb
adc
push
xor
lods
push
push
adc
mulb
sbb
das
adc
mov
push
out
pop
pop
xchg
imulb
sbb
stos
mov
dec
xchg
push
and
test
rcll
dec
sbb
mov
bound
push
out
push
shll
hlt
call
mov
mov
idiv
mov
pop
pop
shr
sbb
pop
into
ficomps
shl
faddl
enter
xchg
out
je
fs
adc
push
dec
mov
pop
inc
stc
test
jecxz
int
sub
test
sub
inc
or
cli
ljmp
arpl
insl
rcrl
sbb
adcb
in
out
movsl
mov
daa
ja
out
fcom
out
cltd
bsr
xor
call
jno
shrd
xlat
popf
mov
mov
adc
sarl
jmp
cmp
dec
sbb
and
jno
mov
imull
add
and
sub
push
icebp
pushf
outsb
pop
in
addr16
inc
inc
or
cwtl
enter
in
cmp
iret
jno
filds
ds
dec
cmpsl
inc
pushf
cwtl
add
adc
mov
pop
push
xor
pop
aaa
xlat
mov
dec
dec
aad
dec
adc
int
lcall
xor
imul
ret
aas
add
push
enter
xor
xchg
int
lock
scas
mov
fnsave
sbbb
outsl
dec
adc
xchg
xchg
out
cwtl
ret
sbb
mov
fdivr
or
inc
aas
mov
clc
mov
push
pushf
outsl
or
cmpsb
lret
bound
xchg
mov
and
outsb
fdivrp
mov
dec
outsl
aam
cmp
je
push
jge
xchg
rcrl
mov
scas
jl
mov
daa
into
inc
ss
and
bound
cmpb
or
jae
mov
lret
xchg
shll
test
fbld
push
ja
mov
jbe
into
xchg
clc
fisubl
mov
mov
add
jmp
loope
testl
dec
cli
push
lret
popa
in
lods
div
adc
daa
adc
push
pop
pop
adc
pop
push
sub
loop
sbb
lock
div
mov
addb
test
inc
mov
adcl
lock
nop
imul
push
sbb
out
xor
inc
iret
subb
out
lret
mov
icebp
or
pop
sub
in
xor
cmpsl
out
ljmp
aad
addb
aaa
push
testb
daa
inc
clc
fs
je
adc
test
mulb
lds
jne
ljmp
inc
add
imul
insb
test
icebp
dec
mov
ret
jns
push
jns
mov
test
cld
pop
out
inc
sub
repz
jno
and
mov
loope
fs
scas
test
inc
stos
in
jmp
hlt
daa
lret
add
out
sub
stos
mov
fisubrs
insb
test
mov
or
add
sub
xchg
cwtl
imul
add
cmpsb
mov
hlt
xor
cmc
adc
push
clc
adc
inc
stos
dec
clc
pop
clc
movb
fnsave
lods
outsb
or
push
call
add
pop
fisttps
lret
bound
add
push
test
fcomip
jnp
mov
mov
loopne
lret
mov
xor
mov
rol
mov
xor
out
mov
int3
ja
dec
pop
add
enter
lock
cmp
out
pop
adcb
sti
shlb
gs
push
gs
in
mov
xchg
clc
mov
and
mov
sbb
add
mov
pop
push
jmp
out
sti
adc
in
mov
bound
jno
dec
push
cmp
loop
mov
and
in
leave
or
jo
movsb
push
jg
push
mov
xchg
mov
xchg
jne
and
xor
cli
pusha
xor
mov
test
ret
bound
fstps
cmp
inc
push
dec
mov
push
rcrb
fsubrl
fildll
inc
and
daa
jb
jne
cld
pop
xchg
lahf
test
movsl
jbe
cmova
testb
xchg
test
adc
pop
pop
mov
or
xor
call
lret
jmp
aaa
pop
mov
or
ja
mov
popa
pop
pop
mov
xchg
lret
jg
pop
pop
arpl
inc
mov
push
sbb
not
cmp
push
gs
adc
jmp
and
push
int3
addr16
fstl
loope
pop
jo
xchg
ds
data16
or
aam
and
bound
mov
aaa
ds
lahf
mov
mov
mov
cld
inc
sbb
cli
pop
ja
test
push
movsl
xor
cwtl
iret
or
mov
pop
dec
cmp
inc
repz
test
xchg
inc
xor
inc
ret
or
scas
lock
loop
fists
subb
pushf
xchg
inc
pop
dec
cmp
in
adc
cmpb
inc
sbb
sti
jp
ret
out
add
stos
aas
push
jo
dec
mov
negb
cmc
lds
cld
call
mov
cmp
mov
xorl
push
flds
lea
jl
pop
fdivrp
jmp
sub
clc
add
xor
and
push
ss
mov
cli
mov
insl
cmpsb
adc
mov
or
and
xchg
testl
ljmp
jg
scas
incb
out
sbb
dec
ficomps
aaa
push
test
in
jnp
push
push
cmp
inc
xchg
lock
sub
xor
mov
and
jae
add
mov
idiv
mov
push
lret
adc
inc
movsb
push
jns
and
xlat
xchg
cmp
mov
in
mov
mov
aam
pop
dec
enter
mov
jmp
cli
in
sbb
lds
mov
fidivrl
pop
xor
cmp
and
sub
push
ret
mov
ret
sub
and
mov
lea
xor
sti
xchg
negl
int3
je
jle
cmpsb
cltd
or
test
repz
and
mov
sbb
inc
inc
inc
pop
stos
fwait
sti
repz
xor
jge
xchg
jp
push
dec
mov
frstor
dec
push
fwait
mov
rolb
fcmovnu
lock
add
outsb
out
inc
and
pop
or
adc
xlat
mov
aas
mov
fisttpl
mov
rclb
inc
out
mov
mov
inc
lcall
xor
pop
xchg
inc
ljmp
shll
xchg
and
repnz
xchg
subb
test
dec
cltd
pop
ffreep
out
nop
popa
jne
dec
adc
repnz
std
cmpsl
les
pushf
test
imull
aas
pop
add
jp
pop
push
dec
push
xorl
xor
fcompl
stos
mov
inc
ret
push
mov
or
movsl
mov
addb
insb
dec
into
int3
scas
xchg
loope
and
aam
or
jne,pt
push
lock
add
dec
lcall
ljmp
mov
inc
movsb
push
clc
jge
dec
sbbl
add
adc
adc
cmpsb
cmp
data16
and
jg
pop
cld
repz
or
pop
xchg
dec
cmp
inc
mov
ds
adc
mov
outsl
jecxz
mov
mov
mov
cld
push
and
add
mov
sub
xor
out
push
or
mov
mov
into
lret
xor
xor
add
or
out
fldl
xchg
mov
xchg
jp
roll
fnstsw
sarb
jle
xor
scas
and
pop
add
imul
add
mov
cltd
xchg
xor
jae
aam
lds
push
test
cmp
jge
mov
mov
inc
and
stos
fwait
les
loop
adc
or
enter
push
fdivl
xor
aad
push
adc
sub
jns
imul
or
popf
jb
cmp
xchg
pop
push
repz
addr16
lret
repz
sbb
scas
fcoms
add
les
push
fnstenv
xor
inc
lahf
sbb
ror
sub
push
loop
push
mov
lahf
and
push
ficoms
add
inc
push
fisttps
dec
push
add
decl
in
ljmp
adc
iret
stc
pop
mov
repz
jecxz
aaa
mov
dec
mov
in
mov
enter
stos
lahf
add
inc
cmp
arpl
sbb
mov
pusha
les
push
xchg
in
fwait
divl
mov
in
or
test
dec
sub
sub
ljmp
jnp
in
ss
push
lcall
sub
shlb
pop
push
mov
and
jge
cld
xchg
sub
push
adc
nop
add
or
mov
mov
cld
push
sbb
lret
dec
inc
cmp
push
dec
out
out
add
int
push
enter
xor
cmp
inc
test
test
in
jge
and
xor
push
xor
xor
xchg
jbe
loop
insl
out
pop
add
faddl
cld
insb
mov
ljmp
repz
fidivs
mov
push
cmp
jge
test
aam
xchg
jg
fmulp
call
xor
jge
adc
dec
jle
dec
and
or
pop
cmpsl
dec
dec
jg
fbstp
aaa
sub
jnp
lods
ja
arpl
lret
or
mov
gs
mov
and
push
loop
xlat
cmpsb
xor
sbb
into
fistpl
xchg
addr16
xchg
daa
test
pop
nop
fs
insl
out
cmc
daa
pop
jns
shld
cmp
addl
fdivp
sub
popl
dec
cwtl
mov
jmp
mov
inc
inc
test
out
lahf
xor
xchg
dec
fadds
sub
lret
popa
pop
xchg
pop
shrb
cmc
lea
mov
or
mov
xlat
mov
ret
cmp
mov
std
xor
sbb
push
sbb
and
push
stos
fildll
in
call
push
mov
push
in
mov
mov
icebp
xor
lods
xchg
mov
dec
mov
inc
inc
into
cmp
xchg
mov
or
xchg
repz
push
stos
jb
xor
add
cmp
xchg
push
js
push
lahf
out
mulb
sahf
pushf
ror
lock
pop
xor
mov
repz
mov
jne
cmp
fwait
jge
sbb
and
sub
lahf
loope
mov
or
push
push
inc
sbb
outsl
pop
mov
inc
or
jge
or
push
lock
mov
cmp
mov
adc
mov
pop
or
out
fiadds
jg
sbb
sbb
loope
call
jp
or
cmc
and
push
mov
or
nop
pop
in
jns
push
shr
test
cld
in
pop
out
fld
lods
iret
pop
shrl
lea
in
fld
push
push
inc
out
xor
mov
out
mov
sbb
inc
or
fadd
inc
sub
mov
push
insl
leave
mov
pusha
push
shl
jae
mov
jmp
shll
mov
jb
dec
mov
bound
enter
es
sbb
pusha
sbb
jnp
addr16
add
adc
aam
fnsave
arpl
mov
mov
insl
push
add
mov
dec
sbb
sbb
sti
pop
mov
loopne
pop
scas
push
mov
nop
sub
sbb
cs
into
or
je
fnstenv
dec
jge
cmpsb
pop
imul
dec
xor
jnp
jecxz
fsubrs
mov
stos
mov
repz
loope
xchg
cli
adc
lea
push
or
jmp
jp
rcr
movsl
lea
je
pushf
out
push
add
fldt
fdivr
xchg
inc
shrl
pushf
pop
fcoml
push
push
and
mov
lcall
adc
pop
jb
xchg
mov
lahf
pop
loope
xchg
movsb
insb
out
inc
roll
popa
imul
add
push
push
movsb
push
rorb
lret
or
pop
or
insl
stos
mov
movsb
cmp
push
xchg
test
rcl
xor
pop
out
cmc
aad
sbb
out
xchg
in
roll
mov
jne
push
pop
bswap
cltd
icebp
adc
fcoml
js
jp
or
sub
add
insb
mov
dec
xor
mov
sarb
sub
xchg
push
stos
dec
cmp
lret
mov
cld
jg
pop
mov
mov
arpl
push
sbb
inc
cld
jo
inc
and
orl
and
xorb
add
pop
pop
sbb
pusha
nop
pop
mov
mov
cltd
pusha
push
mov
les
push
sub
pushf
or
sahf
out
inc
filds
xor
pop
xchg
rorl
cmpsl
cmp
mov
mov
insb
ficoms
dec
mov
sub
fs
int
das
mov
lahf
inc
mov
cmp
or
mov
or
inc
lret
xor
pop
mov
mov
adc
sbb
sti
adc
or
dec
mov
dec
cmpsb
dec
and
loop
cmp
push
add
loope
dec
mov
sbb
dec
add
sbb
inc
stc
pushf
cmpsl
ret
fadds
add
pop
xor
dec
adc
mov
jecxz
pop
sbb
aaa
insl
jle
cwtl
das
mov
cmp
loop
inc
leave
mov
in
fs
loop
inc
mov
adc
mov
call
mov
xchg
ds
repnz
xchg
xor
rcll
lods
add
push
jmp
scas
clc
pop
popf
and
mov
stos
xchg
and
sub
aam
mov
add
cmc
jbe
into
adc
pop
dec
test
cld
inc
test
scas
xor
js
cmp
in
add
xor
inc
cmpb
jb
xchg
mov
jno
shll
jecxz
in
mov
or
jp
sbb
xor
loop
inc
push
cmc
bound
xchg
repz
or
outsb
jb
rolb
lods
jp
fldcw
add
jg
cli
push
dec
enter
xor
fistpl
out
cmpl
cmp
xchg
mov
jg
nop
lock
and
fwait
lods
iret
pop
xor
push
jo
pop
xchg
stos
or
pusha
push
pop
sahf
cltd
dec
xchg
enter
inc
sbb
out
dec
jecxz
mov
lahf
adc
loope
dec
adc
push
xchg
push
mov
scas
ret
pop
push
dec
pop
ss
test
xor
xor
sub
xor
push
insl
dec
push
dec
lret
pop
sti
ljmp
fwait
outsb
lock
rcll
sbb
jns
lea
xor
decl
pop
in
shrb
imul
xor
in
push
sahf
insl
push
orb
inc
push
lds
lret
sbb
sbb
les
out
add
or
scas
out
jle
shrl
out
stos
xchg
xor
scas
push
inc
mov
xchg
lcall
fs
push
leave
hlt
mov
add
jae
pusha
xlat
cmp
adc
jbe
push
sbb
outsb
mov
push
adc
in
jae
lret
outsl
ss
cmc
je
jle
out
push
outsl
sbb
insb
arpl
jmp
arpl
and
sahf
aas
inc
hlt
les
std
ret
push
ficoml
test
data16
int
and
lock
push
jb
popa
int3
ds
jmp
idiv
inc
movsb
push
inc
push
cli
mov
mov
dec
outsb
popa
xchg
jg
repnz
jae
js
test
imul
gs
mov
insl
cld
pop
iret
and
xor
cltd
xor
adc
pop
dec
outsl
icebp
iret
jb
cmp
push
cmp
in
cmp
inc
or
jns
pusha
js
loope
sub
cvtdq2ps
sub
repz
scas
nopl
xor
inc
mov
mov
sub
mov
or
mov
scas
fwait
xor
mov
sub
stos
ljmp
test
mov
push
add
xchg
jmp
mov
sbbb
ljmp
xor
dec
sub
dec
or
sub
lcall
pop
cmc
sbb
ds
mov
test
pop
movl
push
mov
stos
sbb
cld
or
or
gs
test
mov
orl
mov
aaa
fildl
mull
call
not
jne
fistpll
aaa
inc
rclb
add
mov
xchg
jae
cmp
push
jb
nop
push
dec
dec
hlt
loop
leave
ss
data16
scas
sbbl
movsb
jmp
repz
sbb
fistps
push
in
lahf
sbb
bound
xchg
dec
mov
cmp
lcall
or
popf
pop
lret
push
cmpsl
mov
cld
jno
pop
xor
adc
nop
sahf
and
xor
mov
cmc
daa
pusha
lret
cmpsl
dec
mov
dec
outsb
xchg
adc
mov
inc
flds
jns
adc
jb
fstps
cmpsb
test
subl
jbe
aas
pusha
fnsave
xor
pop
mov
mov
data16
push
sub
imulb
xchg
fistpl
or
jge
inc
add
push
xor
adc
dec
inc
das
repz
popa
adc
aas
cmp
les
shrb
jnp
xor
inc
cmc
sub
movsl
cmp
addr16
movsb
pop
outsb
lahf
jge
fldl
inc
cs
lahf
lret
in
inc
shlb
and
and
in
stc
scas
je
push
xlat
jge
out
cmc
pop
xorl
fisttps
out
arpl
cmp
int3
lds
std
ljmp
pop
dec
fsubr
jmp
sub
daa
and
fisttpll
lods
mov
cmpsb
std
mov
mov
adc
sbb
inc
xor
mov
lds
stos
add
out
dec
cmpsb
xor
and
sub
es
mov
jge
jl
cmpl
sbb
in
subb
insb
dec
jbe
lea
aaa
loope
out
mov
imul
imul
or
mov
js
das
jge
or
in
bound
xor
mov
int
popa
addb
js
sub
mov
jb
jmp
lods
xor
dec
insl
outsl
sbb
addr16
xorb
adc
mov
push
push
idivl
out
cmc
sub
sti
dec
pop
mull
jne
mov
xchg
test
and
fstps
cmp
repnz
movsb
into
fimuls
dec
adc
xchg
sub
test
mov
ja
pop
sbb
cmpsl
push
js
pop
mov
nop
fcmovb
push
mov
pop
xor
mov
jbe
cmp
inc
icebp
xchg
mov
cmp
inc
push
ret
aad
movsl
sar
imul
push
call
adc
cmp
addb
inc
jle
sub
icebp
je
enter
sbb
cmp
mov
lods
fstps
stc
test
in
hlt
pop
mov
clc
in
es
mov
rcrb
rcr
mov
or
insb
push
sar
in
dec
xor
sbb
and
test
imul
vmovntps
aad
adc
mov
and
loopne
add
xchg
push
gs
shll
fldt
enter
pop
jne
ret
in
stc
xor
test
jg
pop
push
sarl
inc
xchg
dec
aam
pusha
adc
icebp
jmp
ja
orl
dec
call
imul
mov
dec
xor
jns
cmp
pop
ret
ret
aaa
jl
or
sti
sbb
stc
jmp
inc
cmc
mov
addr16
pushf
sub
ja
dec
and
data16
mov
or
add
push
pop
jae
outsl
cmc
dec
pop
mov
pop
add
ljmp
add
sub
mov
imul
loopne,pn
es
push
out
mov
mov
jge
sub
sbb
inc
xchg
pop
mov
pop
push
bound
xor
loope
pop
cltd
adc
out
cmp
xchg
aaa
xor
mov
xor
int3
xor
add
rcrb
jge
xorb
into
dec
pop
sar
push
jle
mov
xor
inc
jge
hlt
pop
or
fisttpll
decb
sbb
push
pop
rorl
cmpsl
jmp
shll
adc
xor
pusha
test
mov
lret
ss
imul
cmp
pusha
or
mov
fs
sub
jl
rcrb
push
ljmp
pusha
mov
xor
or
cmp
insl
stos
xchg
xchg
mov
mov
sub
sar
ljmp
jmp
insl
mov
mov
aaa
sti
out
hlt
pop
gs
call
mov
adc
xchg
dec
cmp
sbb
fcoms
fsub
lds
jno
fdivrs
push
pop
fisttps
lds
arpl
and
mov
xor
push
adcb
test
mov
clc
pop
cld
cmp
xor
mov
sarl
or
jle
cmp
shlb
add
xor
mov
jp
decl
dec
idivl
cmp
dec
bound
mov
je
aam
int
clc
in
inc
jmp
adc
inc
cs
cmp
iret
jnp
mov
or
mul
testl
mov
call
inc
fs
xor
dec
inc
les
push
push
fdivr
mov
std
xchg
stc
pop
insb
notl
mov
push
sahf
shrb
cli
shrb
js
ds
into
or
out
sub
sysenter
rolb
arpl
rcll
jle
lods
dec
js
and
mov
cld
shrl
scas
mov
xor
adc
cmovb
fisubrs
cmpl
add
test
outsb
cmpb
mov
mov
inc
or
ljmp
pop
pop
cmp
xchg
fidivl
stos
inc
or
jmp
push
cwtl
mov
ss
imul
inc
fwait
popf
leave
ja
imul
lahf
out
stos
dec
aam
repnz
dec
sbb
jnp
mov
dec
std
stc
and
mov
js
div
add
lods
mov
jmp
dec
ss
xlat
mov
std
pushf
push
sub
push
ret
pushf
ss
std
js
insb
inc
in
xor
pop
popf
jge
and
pop
xchg
sysexit
cmp
push
push
dec
mov
test
mov
clc
push
pop
scas
dec
scas
into
xor
cmpsl
xor
xor
xor
xchg
in
mov
fisttps
push
loope
rolb
fimull
mov
cmp
sub
sti
imul
aad
mov
leave
mov
mov
jg
mov
jae
stc
mov
cmc
xchg
shl
mov
sbbb
imul
add
inc
sub
jno
xchg
ljmp
lock
subl
shr
inc
jo
mov
insl
out
int3
sbb
jbe
inc
xorb
jbe
imull
aas
lds
pushf
or
push
lock
fwait
add
andl
adc
push
lods
and
outsb
mov
cmp
and
or
bound
scas
cmp
inc
out
sti
es
aam
jl
dec
xchg
dec
mov
jecxz
std
in
mov
dec
push
test
filds
dec
xor
ret
mov
out
mov
outsb
mov
and
shll
xchg
cmp
xchg
push
sbb
dec
mov
mov
cltd
xchg
jno
inc
fisubs
ret
jo
sar
es
mov
mov
xchg
aaa
pop
movsb
sub
fsubrp
xchg
into
shll
fildll
imul
xchg
pop
lods
aam
xchg
jge
sbb
and
fs
sahf
or
jmp
dec
data16
adc
pop
cltd
pushf
push
adc
out
scas
into
shl
sbb
inc
dec
pop
aaa
xor
fisubs
inc
add
fs
cs
call
in
rclb
jmp
das
and
mov
ret
cltd
cmp
or
cmp
rorb
or
out
lods
cs
sbb
scas
call
mov
or
es
xor
stos
enter
mov
dec
fdivs
xchg
sbb
mov
cmp
or
ret
mov
int
pop
push
add
cmp
push
sbb
or
lods
mov
lret
sub
push
fstps
jmp
in
lds
mov
cs
loopne
sbb
and
lods
add
sub
mov
xchg
dec
fwait
cmp
movsl
sub
test
fistpll
fdiv
xchg
push
out
out
aad
sbb
sahf
dec
in
dec
mov
add
imul
ds
enter
add
shrl
mov
int
in
dec
mov
out
add
mov
jns
fsubl
xchg
imulb
clc
jae
pushf
loop
jecxz
std
dec
lcall
jbe
int
rolb
pop
dec
dec
xor
lret
mov
insb
push
xor
push
pop
jmp
sub
xchg
mov
push
mov
mov
mov
flds
dec
xor
mov
mov
ss
xchg
aad
test
ja
sub
sub
fsubs
arpl
outsb
insl
xor
daa
pushf
cmp
cs
fldcw
mov
inc
add
popf
and
dec
inc
mov
push
add
pop
shll
fs
cmp
orb
push
mov
dec
fdiv
xchg
push
inc
push
push
in
cwtl
xor
fucomp
cmp
push
movsl
push
test
adc
lods
roll
ljmp
mov
out
jno
cmpb
jb
lret
mov
mov
or
mov
lcall
mov
cmc
jle
data16
mov
stos
loope
sbbl
jb
inc
pop
mov
push
imul
es
cmp
mov
mov
out
mov
lods
pop
rclb
xchg
jne
int
lret
mov
adcl
sahf
loope
mov
cld
cmc
mov
pop
xor
cs
push
xchg
out
inc
push
mov
jnp
sbb
push
or
inc
fs
dec
mov
rorl
andl
jnp
jnp
mov
fwait
cmp
jns
mov
aad
dec
push
dec
ja
popa
ficoms
pop
les
int3
es
pop
dec
mov
push
push
fnstcw
loopne
clc
into
js
add
das
jge
aam
jnp
push
dec
inc
or
xor
sub
ret
daa
mov
fisttps
movsb
dec
pop
je
mov
xchg
xor
daa
ljmp
or
xor
out
daa
sbb
das
pop
inc
movsl
loope
les
insl
andb
orb
ficoms
mov
int
cmp
push
push
xor
stos
into
push
mov
addl
push
lea
fcmovnb
mov
xchg
jo
mov
jb
ret
pop
cmp
adc
mov
adcl
decb
aam
int
dec
cmp
outsl
in
fisubl
sub
add
out
into
jno
ja
cmpsl
pop
cmp
jne
mov
in
jbe
aad
lods
pop
cs
mov
mov
sti
rorl
shl
pop
add
fsubr
or
stc
rcrl
test
mov
stos
push
ljmp
inc
bound
sub
bound
mov
or
jno
dec
std
fsubs
mov
popf
jns
mov
icebp
int
pop
jmp
cmp
xor
test
out
sub
loopne
sub
loop
dec
popw
out
rcll
pop
push
lds
dec
or
sbb
loope
arpl
cmp
jne
sbb
faddl
fnsave
add
mov
mov
mov
fidivl
xor
test
pop
iret
je
and
and
fldl
aas
arpl
das
gs
int3
jae
dec
xor
divb
scas
imull
dec
ss
jb
jb
outsl
xchg
sub
mov
jae
mov
fidivrs
pminsw
arpl
loop
fwait
les
pop
shlb
add
mov
out
nop
faddl
pop
nop
lods
enter
mov
xor
add
lret
dec
push
jns
scas
push
std
mov
push
mov
insb
mov
stc
clc
cld
jl
mov
sbb
mov
sbb
xchg
daa
mov
lods
add
sub
mov
stc
popf
clc
mov
xlat
fwait
subl
fidivs
ficoms
ret
jmp
in
xchg
outsl
icebp
cmp
js
adc
mov
addb
fidivs
jl
rcl
push
pop
fst
es
jae
gs
movswl
scas
mov
xor
ja
inc
iret
xchg
jo
mov
or
in
bound
popa
cmp
imulb
push
fsubs
pop
cmp
jb
mov
adc
inc
ret
imul
jmp
or
xchg
dec
outsb
out
imul
scas
pop
sbb
orl
xor
outsl
and
fs
clc
adc
daa
sbb
rclb
fs
push
imul
sbb
jb
pop
dec
jg
sbb
fistpl
jp
out
or
push
pop
push
cltd
icebp
sbb
ficomps
push
mov
aam
lret
adc
inc
int3
push
mov
jg
xor
pushf
pop
fisubl
es
add
icebp
rorl
sbb
xor
scas
cmp
or
call
std
shl
jae
jmp
adc
subb
daa
testl
ljmp
aam
pop
cmpsb
in
data16
sub
sarb
jg
jmp
dec
nop
fwait
push
jb
test
mov
and
imul
mov
cmp
rcrl
fstl
dec
fcoml
hlt
ds
test
pop
jae
jne
outsl
sahf
xchg
push
xor
aam
or
hlt
imul
pop
scas
in
mov
xor
inc
sbb
push
push
aam
xor
dec
fisubl
jns
mov
mov
ljmp
add
lcall
lret
btr
addb
movl
leave
jg
lds
add
mov
sbb
add
xchg
and
jns
mov
adc
js
cmc
mov
cmpsb
lret
lods
lds
outsb
movsb
mov
jns
sbb
and
pop
js
sub
cmp
pop
orl
xor
outsb
cmpl
add
inc
cmp
xchg
ljmp
sub
xchg
movsb
jo
movsl
jl
stos
push
mov
mov
jns
push
loop
jb
xchg
fdivrl
xor
sub
lahf
pop
pop
jmp
mov
jmp
out
out
gs
jmp
xlat
cmp
inc
or
sbb
jp
fs
mov
pushl
add
push
mov
enter
insl
or
mov
lods
xor
pop
xchg
push
adc
pusha
push
imul
xchg
sti
xchg
jnp
dec
sahf
aaa
cmp
and
icebp
inc
jg
pop
push
inc
insb
push
outsb
adc
sbb
push
cmp
sub
sahf
movsl
add
add
dec
push
sub
daa
daa
fs
lock
pop
mov
jl
je
lahf
sub
push
jae
ljmp
mov
pop
jo
sbb
pop
dec
lret
out
inc
nop
lcall
pop
push
std
ja
and
clc
pop
dec
ret
inc
xchg
test
dec
xor
aaa
in
sbb
xor
lret
sub
mov
icebp
pop
in
dec
sub
jne
push
xor
sub
cmp
xchg
fcomps
xchg
lds
inc
mov
mov
pusha
mov
jp
xchg
push
pop
mov
je
xchg
push
sub
add
rclb
add
into
jle
push
mov
clc
cmp
jno
jo
dec
xchg
out
fistl
mov
and
mov
adc
or
mov
push
decl
inc
add
dec
sbb
int3
bnd
sbb
cld
les
and
stos
xor
jno
mov
enter
je
pushf
enter
ss
adc
jmp
sub
aad
js
xor
or
imul
jp
cmp
in
sub
pop
push
pop
test
inc
loop
enter
fidivs
adc
fcmove
ds
sar
enter
sub
rclb
cmp
rcr
cmpsb
lock
push
fsubrs
add
or
jb
addr16
lds
mov
pop
inc
dec
test
into
cmpsb
adc
mov
int3
lret
aad
mov
sub
xchg
lods
fildll
cli
fs
stos
lock
pop
mov
cli
ret
dec
jle
xchg
xchg
mov
or
insb
daa
adc
iret
mov
xchg
movsl
pop
mov
hlt
cmp
mov
stos
jb
add
jmp
aad
mov
pop
pop
mov
jl
ror
sbb
out
jge
sbb
xor
fldt
subb
inc
jle
push
fimuls
aad
and
frstor
cltd
pop
mov
adc
adc
jae
jecxz
jmp
pop
push
cmpl
dec
inc
cmp
sbb
fs
test
out
in
xchg
faddl
jmp
or
sub
clc
jle
jns
cmpb
repz
or
dec
daa
test
xchg
dec
jl
cmp
data16
clc
xchg
jnp
mov
and
ret
push
jecxz
cwtl
sub
mov
push
ret
jg
ds
adc
in
les
insl
lock
outsl
into
ret
cwtl
mov
pop
cli
push
inc
in
pop
ja
je
jg
xor
lods
xlat
repnz
mov
and
pop
lret
pop
or
shl
nop
addr16
mov
lock
xchg
fwait
int3
jmp
xor
dec
sub
jecxz
cld
xchg
pop
mov
push
fsubrl
push
sbb
push
push
dec
popf
inc
cld
lods
je
mov
adc
jge
mov
dec
pop
mov
je
xor
xchg
cmp
pusha
push
pop
jbe
mov
test
dec
mov
test
xchg
adc
fwait
pop
or
test
mov
add
pop
hlt
loope
ret
xchg
lea
pop
inc
aas
mov
lds
test
adc
add
out
xchg
jle
sbb
lret
imull
cs
fdivrl
sti
jmp
aad
and
pop
fistpll
adc
jle
cwtl
push
mov
add
xlat
dec
out
pop
hlt
shr
cmpsl
sub
push
in
lods
pop
pop
jae
mov
fsubrp
jbe
mov
neg
sub
dec
mov
into
or
subb
pop
push
icebp
mov
or
xor
je
call
sub
sbb
stos
sahf
jp
les
jb
shll
inc
jge
sub
mov
in
mov
std
cmp
movsl
test
and
inc
inc
pop
out
idivl
addr16
add
out
inc
gs
jmp
inc
add
loope
sbb
dec
lret
pop
jae,pt
jno
push
inc
daa
aaa
testb
outsb
shll
pop
sub
inc
mov
jnp
stos
sub
je
jp
jae
cmp
fldcw
inc
addr16
xchg
loop
sub
hlt
shll
shll
jno
sbbb
loop
mov
pop
imul
mov
in
mov
cltd
sub
into
nop
push
cld
mov
inc
mov
dec
loopne
mov
mov
xchg
adc
loop
cmp
xor
fwait
inc
leave
add
and
jl
jno
lahf
or
ror
out
and
mov
mov
out
mov
mov
or
or
jae
sub
fiaddl
dec
cwtl
pushf
xor
ds
leave
popa
xchg
mov
inc
shrb
push
imul
sub
cmpsb
push
and
xor
mov
xchg
fdivl
leave
add
iret
push
daa
leave
mov
jle
movsb
cltd
or
aas
push
pop
push
cmp
fnstsw
push
lods
push
sbb
inc
mov
xchg
cmovnp
test
daa
pushf
cmp
sub
ljmp
frstor
loopne
mov
sub
sub
push
setg
ds
xor
ret
repz
cmp
shll
mov
rorl
out
jne
and
mov
repz
push
les
mov
inc
clc
sti
sbb
mov
sbb
inc
into
popf
pop
pop
pop
xor
xlat
sbb
xchg
xor
sub
mov
popf
push
cmp
out
das
mov
enter
jecxz
outsb
nop
out
in
emms
cmp
dec
mov
enter
fsubl
jecxz
in
cmp
jo
sahf
int3
movsl
mov
es
dec
test
fimuls
ret
inc
jg
sub
mov
aad
xor
and
sub
mov
pop
or
xor
out
adc
xor
imul
mov
scas
mov
in
outsb
push
add
jl
ja
movsl
mov
dec
xchg
jmp
sbb
mov
stos
in
insb
adc
xchg
movsb
mov
pusha
iret
inc
mov
jne
sti
pop
xchg
test
fidivs
mov
ja
sbb
lods
xor
fwait
cmc
nop
mov
jb
inc
xchg
push
mov
or
movsb
into
stos
stos
ficoms
outsl
mov
push
imul
stos
push
test
add
push
inc
dec
adc
test
jb
aaa
in
outsb
push
movsb
je
lea
jnp
push
and
push
jno
xchg
push
add
and
ja
xchg
sub
xchg
push
aaa
push
mov
lock
cmp
dec
mov
lahf
xor
push
add
roll
scas
xchg
jmp
addr16
or
jbe
pop
sahf
scas
inc
xchg
enter
rcrl
lret
push
jmp
in
cwtl
mov
imul
rcrl
mov
mov
ja,pn
cmp
xor
jb
jno
push
in
sbb
jb
mov
in
arpl
mov
loopne
and
les
ffreep
push
cwtl
les
adc
or
aaa
stos
cmpsl
shlb
xchg
imul
shrb
aad
pop
test
and
push
lods
mov
fmul
mov
popa
xchg
fwait
call
inc
cmp
mov
xor
jo
loopne
jp
jb
ss
cli
shrb
or
sub
popf
aad
lea
sti
jmp
sbb
repz
lcall
adc
inc
fld
jae
sub
sbb
loop
hlt
inc
mov
cmc
mov
add
test
mov
cld
stos
shrb
mov
pusha
pop
and
in
test
ja
pop
mov
arpl
xchg
mov
jge
push
xchg
jmp
ja
div
aad
inc
lds
push
andnps
fabs
dec
xchg
add
rorl
jp
mov
andl
jmp
mov
mov
fimuls
data16
fdivrl
std
ret
and
add
mov
cmc
sub
jge
sbb
lahf
mov
leave
ret
mov
jle
sub
repnz
lods
adc
loopne
lret
xlat
loop
fs
les
mov
ja
jge
push
sbb
mov
mov
mov
mov
ret
cmpsl
mov
cmp
xchg
int3
xchg
movsb
mov
jnp
ret
xchg
pop
adc
aam
int
sahf
dec
loope
dec
push
xchg
or
dec
sub
and
in
addr16
xor
mov
pop
jg
aaa
xor
lret
es
fbld
std
or
rclb
or
pop
stc
loope
sub
out
jo
fidivs
cmp
out
mov
mov
xchg
mov
test
pop
dec
ja
and
movsb
test
mov
sbb
adc
popf
jp
xchg
sti
aam
outsb
je
repz
rolb
mov
popf
inc
or
lea
push
push
test
jge
js
mov
xchg
xor
cltd
test
rcll
and
push
sahf
into
in
sbb
idivl
inc
sbb
xor
dec
sub
mov
add
add
rorl
stos
stos
push
loope
push
in
ror
rcrl
dec
xor
andb
push
cmc
das
cmc
pop
dec
rorl
cli
add
mov
movsb
in
mov
add
test
mov
imul
daa
sub
mov
insb
add
nop
push
fists
xchg
xchg
cmp
sub
mov
ret
pop
mov
test
sbb
jno
shlb
inc
imul
dec
adc
xchg
push
mov
jecxz
rol
mov
dec
mov
push
cmpsb
sbbl
je
js
cmp
or
dec
dec
pop
push
cltd
insb
inc
test
test
jns,pn
les
mov
xchg
add
mov
sbbb
sbb
cli
sbb
add
repz
dec
cld
scas
pop
push
arpl
jo
jns
cmpsb
sbb
xchg
fistpll
cmp
lahf
pop
xor
push
mov
mov
mov
je
test
aad
xchg
push
mov
inc
sbb
push
mov
ret
mov
out
sbb
das
or
xchg
mov
orb
adc
mov
sbb
dec
xor
pop
xchg
shll
stc
rorb
mov
mov
lret
jno
je
mov
leave
arpl
out
lds
ret
dec
leave
es
sbbl
jnp
cmpsb
repz
frstor
pop
jmp
add
and
fstpt
and
subb
pop
fwait
mov
add
and
inc
mov
xlat
cmpl
leave
mov
ret
and
mov
scas
push
push
stos
fildll
stc
aas
adc
jo
inc
inc
cmp
push
sub
aas
xchg
cwtl
in
inc
fwait
stos
xor
and
or
call
pop
cld
bound
ret
out
inc
fwait
sbb
enter
jmp
jecxz
icebp
jge
sbb
in
loop
push
xchg
repz
scas
test
mov
clc
popa
in
cmp
jns
loope
mov
leave
inc
push
mov
lds
mov
or
cli
add
jbe
aad
cmc
rcl
jp
pop
mov
stos
jg
and
insb
pop
and
lds
cmp
inc
mov
or
fldcw
lods
xchg
and
rorl
mov
xchg
cmp
xor
push
xchg
cmp
xchg
adc
cmpsb
fwait
test
jo
inc
out
popl
leave
enter
mov
mov
bnd
and
loope
sub
aad
ret
push
in
dec
jmp
in
sbb
adc
push
idivl
mov
pop
lret
lret
data16
cmc
mov
cmpsb
int3
or
lods
pop
imul
mov
xchg
xor
add
add
movsb
stos
loop
or
ds
popf
ss
fdivrp
xor
test
sbb
xor
cwtl
and
dec
lret
sub
pop
sub
and
pop
mov
lahf
imul
lcall
pop
in
mov
repnz
call
xor
stos
pushf
mov
jg
pop
fs
mov
push
movb
jb
pop
dec
jno
jge
stc
aaa
stos
mov
dec
aam
lods
and
mov
idivl
lock
xchg
mov
or
mov
pop
xchg
js
xor
mov
pop
push
repz
pop
iret
sbb
dec
xor
lea
in
mov
inc
pusha
jmp
testl
xchg
scas
push
out
clc
push
mov
sub
mov
mov
xchg
xchg
stc
fs
rorb
jge
stos
dec
adc
and
clc
enter
movsl
outsb
sbb
mov
shlb
and
shll
ret
push
popa
sub
add
mov
mov
push
fcom
sarb
inc
scas
lods
dec
push
fwait
js
cmpsl
test
scas
in
adc
movsb
mov
inc
push
mov
data16
inc
mov
fmuls
shl
imulb
in
scas
call
jnp
sbb
xor
mov
push
fcmovbe
mov
jnp
xor
shlb
sub
in
insl
or
pusha
shrb
fbld
push
out
adc
std
dec
sbbb
cmp
sub
sub
out
pop
cli
ficompl
into
mov
dec
cmpsl
and
out
adc
pop
pop
popa
push
in
loope
in
mov
out
pop
and
imul
xchg
fimuls
test
xchg
xor
hlt
fsubs
sbb
jge
adc
enter
cli
pop
mov
pop
out
lds
xor
xchg
push
inc
xchg
push
fsubrs
pop
and
mov
out
xchg
lahf
or
xor
mov
hlt
mov
ja
in
cmp
imul
nop
adc
inc
cmp
jnp
xor
sub
jmp
or
mov
push
or
pusha
je
sbbl
inc
or
sub
mov
ret
adc
jno
push
sub
mov
lcall
sbb
lahf
mov
call
aaa
stc
and
out
pavgw
inc
push
movsb
sbbb
aad
push
scas
and
mov
and
sub
in
aaa
add
and
xchg
jl
lods
adc
xchg
ret
cmp
es
jg
fildll
out
rclb
enter
jle
repz
pop
fnsave
test
cmp
xlat
jge
jae
andl
jge
xchg
stos
sub
push
dec
mov
aas
rcrb
adc
les
popa
push
sub
xor
lds
sbb
sbb
xchg
lods
rorl
mov
cmp
fistpll
adc
mov
in
jmp
xchg
jge
aad
cwtl
pop
cmp
inc
mov
movsl
pushf
mov
shrl
or
mov
xchg
testb
or
add
xchg
xchg
shll
imul
cld
lods
jo
cs
dec
mov
cmovo
stos
in
push
insl
mov
iret
fcmovnbe
adc
dec
cmpb
lea
or
xor
or
data16
cmpsb
jne
pop
aas
int
dec
pop
push
js
jne
daa
movb
and
cmp
popf
jbe
mov
icebp
add
out
sahf
mov
fdivl
popf
je
insl
cld
rcl
popa
cmc
dec
cmp
lods
xchg
push
ljmp
mov
in
aad
jo
mov
mov
and
notb
add
sub
dec
sbb
cmpsb
add
mov
ljmp
mov
dec
push
adc
cvttps2pi
or
cmp
mov
pushf
or
in
out
out
push
test
jb
into
or
lret
int
dec
mov
push
or
lock
cmp
xchg
les
push
xlat
pop
bound
push
dec
dec
push
and
push
xchg
fwait
loop
pop
jmp
addr16
mov
jbe
adc
aad
xchg
xchg
cwtl
mov
stc
xor
fsubr
iret
sub
lock
mov
or
inc
shlb
or
incl
in
sarb
fimuls
mov
xor
dec
in
xor
movsb
jns
add
xor
scas
lock
pop
mov
scas
xor
inc
call
test
clc
rclb
cmc
jg
iret
jl
dec
das
cmp
xchg
mov
xor
mulb
jecxz
pushf
xchg
mov
jg
adc
arpl
aaa
mov
mov
dec
and
and
push
ret
cltd
xchg
out
ret
jp
or
dec
xchg
sti
stos
push
mov
jnp
dec
pop
push
push
in
imul
push
mov
test
or
subb
sarb
jmp
push
stc
mov
sub
mov
mov
or
cmp
sar
pop
xor
lcall
and
es
fstp
arpl
in
push
cli
xchg
and
mov
mov
fadds
sub
xor
test
movd
fisttpll
pop
daa
movb
cltd
cltd
push
ret
mov
cltd
enter
lods
movsl
push
jnp
icebp
inc
xchg
dec
push
jg
sahf
and
adc
fs
inc
push
push
cli
adc
ljmp
test
call
adc
insl
les
addl
cs
fistpl
movsb
ljmp
push
je
jae
xchg
xchg
adc
lods
adc
pop
inc
jmp
shll
jne
test
cmp
jnp
sub
cmp
mov
iret
sub
lds
out
lahf
pushf
lcall
popf
ss
sahf
sub
daa
jbe
xchg
scas
test
pop
js
add
jp
pop
pop
das
sub
and
aad
scas
fwait
inc
and
fldt
andb
jl
jmp
or
out
inc
mov
fmull
dec
inc
aaa
movsb
inc
mulb
incl
popf
cmc
les
fdivrl
inc
addr16
jne
int
jb
mov
pop
pop
test
fsubl
cmp
sbb
rolb
cmp
pop
mov
push
popf
inc
sahf
in
and
mov
orb
loopne
push
sbb
out
mov
mov
push
jecxz
iret
into
repz
mov
ud0
pop
mov
mov
mov
xor
inc
jp
test
jmp
push
xchg
dec
js
add
data16
in
nop
in
jnp
das
push
in
pop
xlat
mov
hlt
xchg
rcrb
adc
mov
mov
jg
daa
lea
js
daa
dec
scas
jbe
mov
popa
mov
adcl
orb
aam
mov
mov
lods
mov
pop
pop
aam
cmp
loope
pusha
movl
notb
xor
stc
or
aad
mov
outsl
pop
in
int
push
out
sbb
lret
aam
mov
dec
lds
jl
dec
mov
in
jle
sti
std
xchg
mov
or
cmp
or
push
mov
push
mov
adc
xor
push
loopne
pop
jae
jle
inc
into
inc
nop
lea
mov
cmpsb
sbb
pop
les
xchg
push
mov
pusha
xchg
es
in
decl
cli
leave
je
sbb
daa
mov
sbb
dec
xchg
and
cmp
sahf
outsl
cmp
cmpsb
cmp
shr
cmpb
aam
jae
cmp
adc
add
out
and
popf
call
andb
xor
mov
mov
in
sub
jno
fdivrl
xchg
push
icebp
mov
xchg
and
add
jl
cmc
pop
or
fidivs
ja
inc
mov
jno
mov
cmp
aad
ret
mov
inc
addb
and
mov
mov
and
mov
xchg
mov
xlat
subb
nop
xlat
or
call
mov
add
subb
pop
pushf
nop
aaa
mov
aaa
imul
sbb
mov
pop
jno
mov
pop
push
in
cmc
sub
sub
jl
dec
jecxz
mov
pop
sub
fdivrl
sub
jle
sub
jno
lods
lds
fcomip
ja
push
adcl
mov
rorl
cmp
mov
mov
pop
movsl
push
in
movl
jl
gs
and
cmpsl
shll
insl
ljmp
cmp
adc
pop
sar
sub
popl
pop
ljmp
jmp
push
sub
bound
xlat
lea
les
arpl
mov
jg
rclb
mov
push
addr16
mov
inc
mov
imul
ds
stos
movsl
push
push
loope
addr16
push
or
adc
out
dec
vmwrite
lods
stc
fwait
mov
ficomps
out
add
mov
clc
mov
lds
dec
push
dec
lock
iret
jne
adc
push
push
jo
cmp
pusha
test
cmp
push
inc
outsl
adc
sbb
cmp
jge
mov
push
inc
gs
out
aaa
sub
das
jp
jmp
in
daa
cmpl
repnz
mov
cld
cld
ja
add
clc
out
sbb
mov
gs
call
out
ljmp
fmulp
sbbb
push
lret
adc
inc
cld
ficoml
jnp
cmp
mov
jmp
pop
gs
lret
xor
inc
pop
loopne
pushf
fcompl
stos
add
cltd
sarl
pushf
into
jno
ficoms
inc
fsubrl
out
pop
out
jle
aad
bound
or
mov
push
cli
pop
hlt
ss
sbb
sbb
in
sub
rcl
xor
outsb
dec
inc
adc
leave
push
mov
jo
test
jno
in
popa
sahf
outsl
xor
fidivrl
xor
sbb
push
mov
int
push
test
mov
pushf
add
jno
inc
loop
negl
lret
iret
loopne
data16
int3
mov
lret
pop
int
xchg
cmp
int
movsl
inc
mov
loop
stc
in
lret
int3
in
inc
in
std
or
mov
sbb
sub
hlt
sub
test
in
push
mov
pop
ss
sub
lcall
leave
frstor
cli
xorl
pop
push
xchg
shr
fcompl
mov
or
sub
cld
xchg
sub
imul
mov
xor
negl
inc
sub
mov
int3
dec
cmp
jl
les
loope
repnz
rclb
push
mov
lods
sub
push
mov
adc
pop
add
das
lret
pop
pop
pop
arpl
xor
xor
lods
imul
loop
into
xlat
inc
movsb
rcrb
jnp
fldt
push
mov
push
mov
test
cld
mov
adc
add
inc
ret
call
inc
std
dec
and
outsl
inc
rclb
repnz
pop
lcall
dec
mov
lret
cwtl
sub
shl
push
xchg
or
adc
add
sbb
cs
leave
mov
or
xchg
fs
mov
popf
mov
adc
loop
fbld
push
cmp
aas
sub
xor
push
mov
arpl
pop
mov
cmp
and
xlat
add
lea
jge
dec
or
pop
jo
rolb
xchg
leave
pop
loop
outsb
arpl
mov
or
jg
cmp
and
jb
mov
pop
std
jnp
inc
sarl
push
scas
das
cli
test
mov
cltd
jge
pusha
mov
jae
repnz
inc
add
pop
cwtl
mov
cld
mov
stos
ljmp
stos
push
subl
jg
mov
test
inc
lods
mov
fldenv
sbb
pop
loope
icebp
mov
ja
or
and
jecxz
inc
add
sub
mov
cmc
xor
sbbl
out
movsb
clc
adc
pop
adc
stos
int3
xor
mov
stc
mov
lds
add
xor
mov
lahf
movsl
adc
sbb
pushf
test
mov
push
push
pop
fwait
sub
aaa
sbbl
bound
fwait
loope
mov
gs
stos
stos
test
jecxz
push
cmc
mov
or
loopne
jb
mov
mov
mov
sbb
cmpsl
out
adc
push
pop
jns
pop
jns
das
jg
ljmp
jge
mov
add
pop
ds
or
mov
fwait
cmpsb
lea
xor
mov
adc
xchg
int3
loop
or
pop
inc
repz
cmp
sbb
cmpsl
xchg
adc
cmp
aaa
aam
insb
stos
mov
and
rolb
or
push
mov
not
xchg
sbb
adc
or
std
and
add
rol
push
adc
scas
cmpsb
mov
ficompl
push
xchg
adc
mov
cmp
loopne
lcall
aam
sarb
mov
sti
dec
insb
jne
popa
push
push
jl
outsl
lret
leave
xor
jecxz
pop
push
mov
aam
cmp
loop
out
and
xchg
cmp
sbb
mov
mov
shll
mov
stos
gs
mov
push
fsubrp
push
push
mov
fidivl
and
fidivrs
mov
jae
incl
loopne
mov
or
cmp
out
bound
les
prefetcht2
lret
mov
add
jne
int3
adc
jb
divb
in
scas
and
incl
out
outsl
loope
jns
in
imul
jmp
imul
xchg
psrad
mov
add
out
xorl
jnp
xor
pushf
jecxz
pop
lods
shrl
leave
add
mov
ret
ffree
sbbl
or
inc
sbb
jle
jl
insb
xchg
mov
pop
xlat
pop
cltd
shr
xchg
lcall
insb
pop
ror
xchg
mov
in
push
adc
or
sbb
mov
scas
rcrb
outsl
jge
pushf
outsb
jae
sub
jle
rorl
test
ljmp
cmpsl
pushf
sub
sbb
pop
sbb
or
ss
hlt
add
sahf
lock
mov
outsl
jbe
mov
adc
mov
fsubrs
pop
or
call
jle
cmpsb
jl
add
inc
out
mov
cmc
rorb
jmp
xchg
repz
dec
lret
or
sbb
xchg
push
in
jb
pop
mov
jnp
lods
enter
sarl
test
ljmp
and
test
mov
sbb
pusha
ljmp
inc
jne
mov
pop
or
dec
out
xor
fdivl
sbb
cmp
jno
push
inc
sbb
fwait
jbe
sub
es
xor
scas
jge
add
jge
lret
jge
jg
es
aaa
ljmp
lock
push
mov
or
or
iret
push
jecxz
or
icebp
sarb
mov
adc
jne
stc
out
jmp
adc
roll
push
lfs
mov
fwait
dec
mov
xlat
and
or
sub
mov
or
xchg
and
jbe
sbb
iret
mov
mov
jl
in
sti
pusha
shll
inc
lds
sbb
adc
test
repnz
adc
push
stc
cmp
mov
and
mov
or
in
push
push
test
add
cmp
imul
adc
jbe
sbbb
nop
call
and
pop
and
mov
inc
jo
push
xchg
rcrl
movsb
loop
jae
je
push
xchg
mov
shrl
xor
test
xchg
leave
jnp
pushf
in
and
ret
push
sbb
call
test
or
mov
pop
stos
popa
cwtl
divb
jle
int
ja
adc
gs
or
or
in
nop
and
mov
push
add
push
not
mov
mov
sbb
sti
mov
cld
stos
mov
sbb
outsb
in
lahf
popa
jae
into
inc
sahf
bound
sbb
xchg
in
xor
icebp
and
mov
cmc
out
push
mov
lods
pop
xlat
dec
adc
jne
adc
loope
push
mov
sub
sbb
pop
jmp
bound
out
test
int3
push
lock
std
mov
pop
xchg
cmp
dec
mov
add
call
sub
mov
into
jb
insl
aaa
sub
xchg
mov
in
or
dec
clc
punpcklwd
xchg
daa
dec
rcr
nop
shrl
sub
xchg
fucomip
sub
add
popf
nop
idivl
nop
xchg
sub
int3
inc
sti
xchg
imul
in
enter
stos
and
sbb
call
in
repz
add
dec
jle
mov
jae
mov
daa
fwait
mov
pop
cmp
daa
mov
ljmp
push
cmpsb
mov
cbtw
cmp
jbe
divl
inc
pop
and
lods
and
ljmp
add
inc
and
pop
cwtl
jecxz
nop
dec
outsb
xor
xchg
pop
xchg
push
daa
out
mov
add
cmp
xor
xchg
cld
je
aam
outsl
mov
mov
mov
pop
or
xchg
dec
scas
xlat
push
jo
jmp
int3
imul
dec
jno
lret
loop
rcrl
int
js
mov
dec
ja
xor
jg
push
cmpsb
mov
call
inc
in
out
jmp
cmp
shr
icebp
test
sub
inc
push
cld
sub
popf
push
xor
lds
inc
pushf
jo
test
mov
jl
sbb
lret
jl
addl
inc
pop
jl
or
int
icebp
xchg
mov
test
int3
lcall
insb
jno
inc
jge
cmp
push
js
popf
mov
scas
xor
js
xchg
or
inc
jb
hlt
xor
mov
mov
sarl
sbb
jae
mov
cmpsb
sbb
mov
xchg
sahf
and
sbb
cwtl
dec
mov
pop
mov
mov
jbe
inc
popa
inc
out
adc
cltd
xor
mov
pop
or
fs
popf
jecxz
mov
leave
stc
movsb
shrl
aaa
hlt
clc
cmpsb
roll
lahf
fisubrs
push
mov
mov
or
out
and
sbb
repnz
int3
mov
and
sahf
stos
fidivrl
imul
pop
xor
call
lock
mov
pop
push
mov
mov
sub
mov
push
fnsave
push
cmpsb
mov
jp
adc
cs
add
push
aam
movsb
inc
popa
in
imul
mov
test
mov
out
sbb
xchg
xor
addb
mov
push
insl
or
jae
aas
scas
mov
sbb
iret
cs
movsl
push
xchg
test
xchg
lret
push
cmp
xchg
pusha
in
nop
push
adc
iret
xchg
jle
jne
or
and
sub
inc
clc
inc
xchg
in
rorl
jmp
nop
xorb
cmp
mov
inc
xchg
xor
ljmp
inc
iret
shlb
jne
mov
pop
mov
jl
mov
adcl
es
sbb
cmp
add
mov
dec
insb
fst
sub
push
xor
psubq
push
js
or
mov
pop
loopne
test
mov
gs
out
push
mov
mov
aas
add
adc
sbb
jp
sbb
stos
push
int
aad
mov
gs
mov
sub
inc
aad
xchg
jns
out
imul
sub
jno
int3
mov
jle
imul
pop
divl
sub
jmp
adc
ds
push
adc
dec
scas
jle
or
mov
cmp
push
sub
cmpsb
dec
sbb
or
lret
jb
and
push
das
mov
jae
dec
popa
fisubl
clc
out
sub
subl
xchg
aas
dec
lcall
pushf
mov
inc
sub
test
ljmp
mov
jmp
lcall
ja
adc
pop
adc
fildl
fidivrl
clc
bound
cmp
movsb
cli
xlat
js
and
pop
jno
jo
movb
mov
adc
or
add
jg
inc
sahf
out
adc
das
cltd
outsl
imul
cmp
icebp
inc
mov
bound
and
cmp
sub
mov
shl
or
jl
hlt
inc
add
adc
divb
movsb
jns
jle
mov
aad
push
fcomps
mov
mov
sbb
cmpb
jo
xchg
jmp
mov
sbb
dec
cld
in
mov
adcb
test
jbe
xchg
cmpsl
sbb
insb
sarb
inc
clc
xlat
and
cltd
outsb
in
sub
jbe
xchg
inc
fldt
cwtl
fbld
cmpsl
sub
leave
in
push
ja
mov
xchg
neg
clc
nop
sbb
lea
mov
push
ret
test
mov
loop
mov
mov
fwait
cltd
test
shrl
xchg
xor
pushf
xor
mov
jle
or
push
dec
jbe
jno
and
add
lods
js
mov
push
sbb
fcmovu
jbe
arpl
xchg
sub
and
cmpl
mov
sub
scas
push
loope
mov
xchg
out
ljmp
decl
lods
in
and
cld
sarb
pop
xchg
mov
lds
aas
pop
or
divb
cmc
cmc
hlt
icebp
mov
sar
push
jp
lds
sub
mov
xlat
movsl
shll
test
xchg
push
mov
inc
std
sub
nop
push
or
es
mov
fnstcw
stos
aas
sbb
dec
sti
mov
sbb
inc
inc
sahf
into
jb
and
pop
or
aad
loop
adc
mov
scas
jnp
dec
cmpps
pop
adc
push
sub
sub
mov
in
std
sbb
xor
les
jae
fimull
inc
stc
mov
jnp
push
and
dec
iret
inc
and
mov
mov
fists
popa
jg
mov
inc
andl
int3
faddl
out
enter
or
test
out
in
mov
testl
jnp
aas
ja
push
mov
cmp
jle
les
rorl
cmpsb
int3
std
test
in
jge
mov
test
jle
mov
mov
mov
popf
mov
add
scas
jno
les
test
push
adc
xchg
aad
jns
gs
arpl
movsl
pop
mov
enter
lret
inc
mov
decw
sahf
or
and
icebp
iret
mov
roll
add
xchg
or
add
mov
jle
lret
push
test
dec
leave
stc
test
jns
cmp
popf
fs
ljmp
int3
ret
or
xchg
pusha
inc
idivl
lret
cld
xchg
sbb
shl
addr16
pop
lret
mov
adc
cli
push
pushf
repnz
sbb
aad
mov
xchg
jle
ja
enter
mov
sbb
repnz
adc
std
into
cmp
jle
xchg
daa
pop
mov
push
cmpsb
cld
popa
fidivrl
test
lret
push
insl
inc
dec
xchg
mov
das
in
mov
sub
lret
sbbb
mov
jbe
sbb
xchg
and
add
adc
pop
jb
mov
mov
movsl
popa
xchg
or
lret
repz
inc
jae
and
in
shrb
dec
inc
aaa
out
cli
cmp
push
pop
lahf
inc
imul
fnstsw
test
ja
sbb
ja
scas
inc
in
jns
jo
hlt
and
jae
stos
and
insb
or
addr16
mov
std
inc
aas
mov
ss
or
mov
adc
add
mov
mov
cmp
fidivrs
lret
aaa
mov
ds
mov
pop
dec
orw
loopne
mov
out
or
sahf
cmp
xchg
jl
mov
add
xor
pushf
inc
ret
loope
push
sti
push
fdivrs
pushf
cmp
cmp
test
test
cmp
mov
cmp
ss
jg
jno
mov
cwtl
scas
nop
lcall
jg
jl
fwait
arpl
cs
in
push
add
sbb
dec
rcll
adc
mov
or
fmul
push
xor
jb
mov
pop
cwtl
push
pop
cwtl
sub
jl
xchg
mov
adc
adc
and
lds
movsb
and
leave
outsb
stc
mov
pushf
stos
sbb
ljmp
dec
enter
dec
inc
sbb
push
push
mov
aaa
jo
les
lret
notl
xor
bound
arpl
lods
pusha
mov
insl
mov
sbb
pop
push
in
mov
out
sti
fs
mov
sbb
lcall
and
mov
inc
rcrb
sbb
movsl
sub
mov
imul
inc
fdivs
clc
daa
clc
push
cmp
xor
cmp
inc
jno
stc
mov
dec
fldenv
xor
pop
xchg
pushl
sub
lods
loope
jns
iret
loop
and
mov
icebp
adc
sub
fdivrs
xchg
mov
sub
test
loop
xchg
test
mov
mov
lahf
cmc
push
sub
or
ljmp
incb
movsl
or
sti
sub
outsb
push
adc
cmp
mov
ss
mov
pop
sbb
imul
adc
call
cmp
jmp
xchg
adc
daa
lods
nop
scas
jb
jbe
mov
pop
or
popl
push
lret
sti
shl
insl
test
add
xchg
xor
in
int3
lret
or
fcomi
fwait
xchg
inc
inc
addr16
xchg
je
pop
xor
pop
sub
je
xchg
pop
pop
dec
scas
pop
and
lahf
pop
cld
inc
jno
sub
pop
pop
sub
fiaddl
inc
lods
lock
lods
push
fistps
sbb
inc
jle
lret
pop
xor
dec
cmp
mov
push
and
movsl
pop
adc
fisubs
or
cs
sbb
inc
popf
nop
in
adc
inc
xchg
sti
imul
mov
ljmp
lcall
jecxz
xchg
stc
lea
pop
sbb
dec
mov
push
aas
pop
sbb
jns
outsl
daa
dec
mov
stc
mov
jge
pop
aas
mov
fidivl
in
in
lods
pop
in
sub
mov
xor
repnz
xor
cmpl
ss
addl
out
add
data16
in
sbb
xchg
jne
and
call
and
ja
adc
adcl
xchg
or
or
cmpb
test
minps
add
gs
push
int
repz
cmp
roll
sub
jne
xor
repnz
fs
push
rorb
les
cwtl
fcomps
jmp
das
xchg
fnstenv
jg
mov
mov
popl
pusha
mov
mov
inc
jb
rcrl
sahf
pop
fisubrs
pop
jbe
cmp
jecxz
add
push
mov
and
push
lret
mov
int
lea
push
push
and
jnp
cltd
testl
dec
test
adc
pop
push
jmp
pop
popf
out
xor
repnz
std
rolb
sbb
ds
loope
mov
stos
movsb
mov
repnz
add
arpl
mov
mov
popf
xchg
cmp
movsb
push
sub
mov
mov
sbb
or
jbe
cmp
es
mov
int
test
sbb
push
jl
push
xchg
out
ljmp
stc
mov
mov
pushf
out
mov
push
pop
add
dec
push
out
fnstenv
and
and
imul
sbb
dec
or
daa
stos
pop
push
add
ret
push
cli
xchg
repnz
psrlw
addr16
int3
stc
add
addr16
mov
ljmp
pop
sbb
lahf
fcompl
jg
gs
xchg
sub
mov
xchg
add
popf
inc
xlat
mov
xor
arpl
lods
fs
mov
mov
ja
lea
leave
out
add
and
call
pop
push
jb
lods
adc
pop
mov
scas
add
loopne
nop
test
or
pop
or
jnp
xchg
adc
dec
push
add
ss
int3
in
movsb
lock
es
stos
push
cmpsl
mov
push
cld
cmc
mov
push
stos
enter
jecxz
ficoml
mov
jbe
pop
cs
xchg
scas
push
mov
push
jae
sub
mov
sub
call
out
ja
or
sbbb
push
test
xor
hlt
jl
pop
push
hlt
fs
mov
decl
out
sbb
xchg
jmp
cwtl
stos
sti
fldcw
lcall
fsubl
add
lahf
add
lods
sbb
jg
inc
mov
or
sub
cld
adc
movsb
stos
mov
xsha1
cmpsb
dec
pop
cmp
mov
je
sub
push
mov
and
daa
sub
stos
push
aad
cmpsb
ja
lret
inc
mov
shl
add
jle
hlt
imul
or
pop
mov
mov
je
test
sbb
xor
ret
arpl
fistl
sbb
icebp
pop
shl
rcl
pop
push
xor
xchg
insb
jl
mov
into
or
add
pshufw
and
outsl
scas
cwtl
adc
adc
inc
mov
inc
cmp
mov
cld
hlt
and
stos
ljmp
lcall
sbb
add
push
shll
das
sub
mov
mov
addl
xor
xchg
ja
pushf
fistl
rorb
mov
fs
adc
xor
mov
dec
js
xlat
int
add
out
pop
jbe
and
loopne
add
ret
mov
lret
daa
dec
out
adc
add
adc
cli
out
popa
xor
cltd
mov
mov
pusha
aam
cmpsb
mov
repz
gs
or
adc
push
push
out
out
iret
cmc
inc
xorl
test
cmp
loop
sub
imul
add
mov
loope
mov
xchg
das
mov
lcall
pop
fwait
and
popl
sub
cld
pop
cmpsl
mov
imul
inc
std
loopne
adc
cld
shll
cmp
dec
rclb
negb
cmc
adc
imul
xchg
cmp
fs
imul
xchg
das
cmp
repz
pop
sbb
aaa
notl
outsl
jle
addr16
dec
movb
adc
movsb
test
mov
pop
xchg
out
xchg
push
xor
fldt
sub
cmc
or
mov
mov
sbb
neg
idivb
add
in
pop
and
dec
lret
outsl
xlat
int
dec
adc
sbb
mov
xchg
cmpsl
and
xor
mov
mov
cmpsl
jmp
jmp
es
or
out
pop
jb
mov
mov
sbb
jne
cs
push
dec
jae
lret
lret
push
stos
cbtw
sub
popa
inc
scas
lods
dec
lret
pop
adc
addr16
dec
mov
jle
mov
adc
mov
loopne
fldt
fisubs
jne
outsl
cmp
int
test
leave
ljmp
js
js
bound
or
or
sub
jbe
mov
shl
xchg
mov
imul
subb
xchg
aam
test
leave
jno
sub
push
loopne
push
in
sbb
sub
xor
jns
sub
int
adc
adc
xchg
testl
push
sbb
cmpsl
cld
lods
lea
es
fldcw
mov
jl
call
and
adc
xor
test
mov
mov
fcomps
mov
add
int3
add
lret
push
adc
fwait
jmp
xchg
jbe
xchg
sbb
xor
mov
stc
rcrb
pop
sti
cmpsl
or
xchg
sbb
fistpll
push
in
jge
leave
mov
add
push
inc
push
inc
in
les
xchg
xor
and
movsl
popf
setne
inc
sub
jle
in
fwait
xlat
xchg
das
cld
outsl
mov
cmpb
scas
cmp
outsb
cwtl
sub
out
js
sbb
xor
insl
xor
movl
sbb
sahf
test
test
xor
xchg
dec
stos
pop
mov
sbb
jnp
jo
fdivs
out
addr16
int
and
loope
lret
mov
out
clc
dec
add
sub
je
cwtl
fistpl
fisubrs
aas
ss
out
cmpsl
hlt
aad
mov
mov
lods
pop
add
xor
aaa
and
push
bnd
int
stos
bound
pop
jbe
ret
sub
cld
push
pop
lock
pusha
and
sub
cmp
iret
mov
jle
add
mov
sahf
and
jecxz
popf
aaa
jnp
test
xor
test
xlat
imul
inc
rep
ret
loope
mov
insb
cmp
sbb
push
in
cwtl
daa
addr16
push
jo
sbb
pop
pushf
mov
fdivl
mov
inc
sbb
inc
push
push
fs
cmpsl
hlt
push
push
adc
mov
or
enter
adc
xchg
rorb
test
mov
mov
adc
add
std
shlb
xor
iret
mov
jle
outsb
in
sub
imul
sbb
mov
push
mov
sbb
sbb
mov
mov
fnclex
sbb
add
mov
fbld
pmaddwd
test
sub
mov
gs
and
mov
loope
and
test
out
cmpsb
sahf
adc
stos
xchg
stos
aad
cmpsl
clc
daa
int
sbb
ret
add
push
pop
jle
dec
popf
fimull
jne
cmpsl
mov
fwait
movsb
pop
and
cs
inc
push
enter
popf
hlt
je
sbbb
adc
sbb
daa
pop
cmp
jns
iret
ds
lret
inc
sub
mov
sbb
push
cli
js
pusha
sbb
jns
add
push
fcmovb
mov
and
iret
push
cmpsb
adcb
jmp
xchg
dec
and
xor
popa
and
mov
out
cmp
arpl
icebp
mov
in
roll
fsubs
push
cmp
ret
jnp
adc
dec
sbb
inc
cld
stc
lods
push
jmp
stos
out
jmp
lods
or
aam
idiv
mov
inc
aaa
sahf
adcb
push
sub
pushf
cmp
cmp
jmp
inc
arpl
rclb
inc
or
out
add
pop
outsb
mov
mov
cli
jo
mov
pop
out
pop
lahf
movsb
jbe
mov
inc
xor
out
leave
mov
fidivs
or
adc
mov
aaa
adc
pop
ret
adc
ljmp
dec
dec
pmaxsw
pop
inc
mov
jl
xchg
loop
pop
stc
ret
imul
in
push
or
repz
cmp
add
lods
inc
lea
fsubrp
mov
mov
fpatan
inc
or
xor
in
loope
xor
ds
mov
sti
mov
push
inc
cmp
mov
adc
fbstp
lods
mov
lahf
jl
int
mov
mov
bnd
ret
adc
lock
mov
addr16
sahf
add
pushf
mov
aas
pop
pop
pop
ror
lcall
jp
inc
mov
imul
push
jnp
push
cli
sub
dec
jnp
cwtl
push
cmpsl
jnp
sbb
pop
icebp
leave
fstpt
xor
std
add
adc
jb
outsl
dec
mov
sarb
int
arpl
mov
int
imul
xchg
xor
popa
push
pop
xchg
imul
pop
push
pop
pushf
jb
scas
mov
sti
int
add
push
or
adc
aam
xchg
lret
or
mov
xor
mov
or
incb
pop
das
jo
inc
cmp
les
xor
data16
mov
push
pop
ds
gs
loope
outsl
les
xchg
cltd
in
lods
or
enter
and
les
lds
sbb
sbb
xchg
push
in
cmp
adc
cmp
arpl
xor
ret
xchg
add
xor
orl
and
lret
outsl
cmp
mov
dec
lds
push
xor
sti
imul
clc
ds
adc
subb
movsl
clc
cmpsb
lret
push
test
mov
leave
mov
xchg
popl
test
pop
cmp
fisubl
mov
inc
in
xchg
xchg
sbb
inc
out
push
mov
lods
add
pop
es
jb
jge
fwait
xlat
mov
ljmp
fcoml
sbb
popf
and
adc
lods
loope
lds
jns
lea
adc
in
sub
xor
pop
sub
mov
enter
dec
xor
mov
add
fadds
adc
cmc
xchg
lods
into
repnz
ret
into
inc
mov
push
imul
or
jl
jo
add
cmpsb
or
cmc
movsl
repnz
push
adc
nop
xchg
das
sub
arpl
clc
outsl
inc
ret
add
pop
jne
jl
mov
rcrl
rorl
lret
and
inc
cmp
mov
adc
mov
aaa
mov
dec
sbb
mov
add
xchg
pop
mov
in
add
dec
mov
mov
call
and
xor
iret
stos
pop
sbb
push
xchg
insb
std
mov
in
sub
shrl
mov
aas
add
pop
insb
inc
and
cmp
cmp
push
add
inc
in
mov
push
dec
int
iret
std
sbbl
rolb
fcom
clc
in
imul
ret
push
push
enter
adc
add
movups
loop
daa
sbb
addl
sub
jg
xor
sub
sub
xchg
es
xchg
xor
aaa
in
outsl
dec
jo
mov
xchg
push
incb
test
repnz
jecxz
cmpsl
jne
mov
lock
rclb
inc
js
xchg
inc
in
pushf
and
mov
ljmp
or
push
mov
insb
andl
loop
aaa
mov
insb
scas
and
jns
dec
inc
xor
xor
loop
cli
cmpb
xor
lock
cltd
jecxz
pop
or
leave
mov
xchg
call
xor
rcrl
dec
and
cmpsb
push
jmp
jg
lahf
mov
inc
jnp
loop
cltd
aas
insl
mov
jnp
sbb
mov
lahf
nop
movsl
push
inc
ret
add
sub
ss
mov
outsb
pusha
outsl
lcall
divb
push
dec
dec
pusha
jmp
cmp
fisubs
nop
jo
cmp
lar
lahf
cli
popa
cwtl
jp
mov
arpl
sub
je
rcrl
mov
les
inc
sbb
push
test
pop
push
jae
push
rcrb
lea
jne
fisubrs
fsubs
or
add
ss
rcll
cmp
cmp
push
call
lret
sub
and
push
hlt
je
adc
movsb
in
jge
sbb
dec
cmp
das
xor
int3
daa
mov
adc
loopne
mov
sub
cmp
out
popa
cmp
jo
or
and
cld
cmp
ljmp
daa
outsb
iret
shrb
pop
mov
cli
test
inc
sub
test
sub
mov
cwtl
adc
sub
mov
jp
aaa
js
inc
sbb
jbe
imul
xlat
xor
dec
mov
pop
adc
lea
jbe,pt
push
push
sbb
cmpsl
fiaddl
das
jg
iret
and
xchg
mov
ja
mov
rol
mov
xor
xchg
fcmovu
movsb
divb
push
jle
cwtl
mov
push
inc
mov
add
iret
in
dec
mov
push
notb
cmpsb
out
mov
cmpsb
lods
dec
faddl
sbb
hlt
ljmp
shlb
inc
pop
pop
test
repnz
inc
mov
cmpsb
repz
jnp
mov
lods
je
std
push
and
mov
cmp
popf
repz
aad
aad
adc
sahf
jo
es
daa
jne
inc
jge
sub
or
mov
jge
mov
push
adc
repnz
mov
sub
ja
sub
pop
or
aad
sub
imul
aas
dec
and
dec
ficompl
out
sub
cmpsb
xchg
push
fs
adc
lea
cmp
pushf
jne
sbb
xor
dec
xchg
jle
std
ret
out
dec
mov
and
mov
inc
mov
fisubrl
das
dec
loop
lahf
js
push
mov
pop
or
add
or
xchg
lods
inc
lret
mov
test
inc
sbb
popa
jae
xor
out
inc
cmpsb
xor
push
jne
push
push
fsubrs
adc
lods
jl
lock
enter
subb
and
stos
adc
push
dec
adc
pushf
dec
pop
pushf
std
push
fsubrl
sbb
pusha
lods
sub
xchg
repz
inc
aas
or
testb
jb
inc
adc
mull
xchg
insl
je
test
mov
outsb
mov
popf
jne
dec
jnp
fcmovnb
xchg
mov
mov
jle
or
jo
shr
ret
fnstenv
stc
mov
xchg
dec
dec
inc
cmpsb
orl
pop
dec
jmp
add
enter
leave
movsl
adc
std
sub
mov
sbb
repz
pop
popa
mov
xor
ja
mov
or
jl
dec
adc
push
loopne
dec
out
dec
jo
mov
lock
mov
xor
sahf
push
pop
pop
sbb
xor
jnp
push
lret
add
divb
jno
push
xchg
negl
push
xchg
jle
fld
and
jmp
js
and
decl
cmpb
cmp
dec
lahf
dec
test
lock
call
adc
xchg
and
sahf
ret
cwtl
addr16
mov
pop
imul
dec
out
insb
mov
and
cmp
dec
cmp
push
cmp
insl
cmp
popa
jae
out
xlat
jg
xlat
inc
add
push
push
jge
sbb
dec
call
and
mov
pop
or
dec
addb
in
add
mov
jecxz
das
neg
add
jns
dec
xchg
lea
test
cltd
lret
aad
sbb
dec
pusha
shl
and
cmp
xor
mov
mov
sbbb
lcall
xchg
lea
inc
loopne
loope
aaa
pop
out
jo
lahf
int
out
fildll
mov
int
jmp
fists
inc
xchg
mov
push
dec
lods
mov
fmuls
ds
jns
mov
push
xchg
movsl
fldt
out
sbb
mov
lods
dec
popl
jmp
cltd
inc
imul
cmp
std
outsl
jg
ret
movsl
jbe
rorl
stos
subb
cld
sbbl
gs
xor
and
or
aas
aad
movsb
sub
shl
mov
ss
js
movaps
sbb
xor
adc
pop
cmpsl
xchg
push
test
scas
cli
ss
addr16
add
mov
pusha
ds
subb
aaa
data16
sbb
shl
lcall
sbb
sub
inc
ljmp
adc
leave
std
add
xor
pop
or
mov
sub
aad
aaa
scas
pop
xchg
iret
std
movsl
adc
loop
adc
cmp
sbb
pop
fnclex
outsl
mov
sbb
fdivrs
push
sbb
xchg
push
cli
jmp
imul
add
repnz
pop
cmp
xor
push
xor
arpl
les
mov
sbb
xchg
daa
repz
xchg
xchg
lahf
lods
int
xchg
sarl
and
fstpl
dec
mov
mov
dec
push
dec
or
pop
mov
sbbl
inc
int
xor
dec
scas
roll
xchg
arpl
adc
pushf
pop
inc
mov
fnstenv
add
lahf
pop
in
mov
xor
or
push
fdivrl
enter
ss
cltd
pop
adc
in
ret
mov
lret
sub
stos
cmpsl
mov
inc
mov
dec
mov
push
inc
mov
mov
inc
enter
fcmovnu
push
jge
lea
fbstp
lret
stos
jb
adc
push
add
ret
outsb
iret
jle
jmp
add
add
gs
cltd
es
adc
sub
add
sbb
fdivs
inc
pop
fadds
mov
add
add
lods
xor
or
inc
jo
outsl
xor
mull
leave
arpl
mov
rolb
and
add
or
in
das
ret
pop
clc
lcall
jns
mov
xor
cmpsl
sub
test
shlb
add
inc
int3
insb
int3
out
cmc
icebp
pusha
les
add
adc
movsl
pop
daa
pop
mov
lret
ja
mov
aam
repnz
cmp
xlat
out
mov
push
aaa
or
lcall
fwait
push
push
daa
dec
roll
mov
xor
xchg
lea
in
cmp
jb
add
sahf
push
push
repnz
sub
jecxz
loopne
sbb
dec
or
jge
mov
aad
or
sbb
jnp
cs
add
addr16
scas
sbb
arpl
mov
jp
mov
pushf
fsts
aas
mov
rcll
xchg
pop
mov
shlb
push
cmp
rorb
mov
cmc
and
or
sub
pop
jmp
cmp
or
or
sbb
mov
push
cmp
lea
lret
call
lods
sub
mov
les
mov
mov
lods
and
push
and
and
jle
push
cmp
fcomp
mov
ljmp
xor
dec
andl
dec
shr
and
cwtl
in
push
mov
sbb
jno
sbb
pop
lcall
mov
mov
pop
or
in
dec
jecxz
dec
sbb
inc
mov
lahf
jl
int
jg
les
jp
sub
sub
push
mov
mov
inc
addr16
in
jle
ss
inc
jnp,pt
inc
sub
clc
call
aad
repnz
aad
out
cmp
jnp
sbb
ret
jp
cmp
popa
das
loope
push
fisttps
loopne
popf
sub
add
daa
into
dec
mov
dec
xchg
int
stos
ljmp
add
ja
sbb
in
inc
rcr
mov
ret
stc
jae
shrl
pop
outsb
jl
pop
ja
push
push
out
or
in
mov
sbb
jge
insl
int
into
hlt
test
das
mov
add
xchg
in
xor
inc
or
cs
nop
mov
addb
jo
les
fcomip
xor
shl
ret
iret
ret
pop
pop
jb
popa
addr16
dec
loop
outsl
stos
cmp
cmp
out
lahf
inc
inc
loop
sahf
jecxz
lret
cmc
mov
repz
out
fidivrs
add
inc
outsl
dec
das
bound
andl
inc
mov
adc
decb
mov
in
jbe
and
mov
icebp
cmp
and
sahf
cmp
jge
push
divl
mov
hlt
mov
jno
mov
stc
jge
lcall
sarb
ds
jb
adc
mov
jnp
cmp
les
rcr
jne
lods
push
addr16
movsb
mov
sbb
adc
cmpsb
adc
aas
jne
xchg
jne
lods
data16
jl
cmp
inc
add
mov
cmp
call
sub
lods
inc
out
push
cmp
jb
lahf
sbb
push
xor
xor
and
stc
jl
inc
jle
sbb
mov
jge
mov
insl
sub
ret
push
dec
pop
lock
and
xchg
stos
aam
bound
xchg
add
mov
cs
fiadds
scas
enter
sbb
xchg
mov
sub
adc
int3
inc
aas
mov
and
popa
adc
sahf
xor
xlat
aas
sbb
ja
cmpb
lods
and
js
movsb
aam
or
push
jmp
push
dec
popa
push
pop
les
test
push
sbb
dec
cmp
clc
or
add
lea
sti
pop
aam
je
jo
sub
adc
push
push
scas
sbb
cmp
cmp
shll
push
pop
pop
xchg
mov
mov
fiaddl
xchg
out
stos
cs
call
jmp
addr16
out
mov
push
pop
add
cld
dec
inc
jno
inc
push
mov
mov
dec
mov
ss
xchg
daa
sub
pop
lret
cmpsl
mov
fcmovnb
mov
or
adc
dec
push
or
fisttps
mov
inc
xor
mov
cmp
out
mov
enter
mov
cmp
push
rclb
mov
stc
es
jge
cli
pop
push
inc
loopne
js
xchg
or
sahf
mov
ret
mov
jl
inc
lret
fldln2
in
lods
and
ret
mov
outsl
fbld
subl
es
mov
ss
in
inc
call
xor
or
jb
or
jne
inc
push
and
xor
ja
jle
jb
dec
lock
adc
mov
mov
out
add
xchg
pusha
jno
and
pop
loope
lret
dec
cmpsb
cmp
dec
in
dec
sbb
scas
inc
sub
push
cvtps2pi
test
and
adc
ja
inc
sbb
das
mov
jg
mov
repnz
add
push
pop
sti
nop
stos
and
mov
iret
int
lods
fucomip
push
data16
pop
int
mov
xchg
mov
mov
stc
je
and
test
arpl
mov
push
mov
int
je
lds
push
scas
mov
xor
xor
lret
lahf
add
iret
mov
xchg
dec
dec
repnz
not
inc
and
and
xchg
insb
push
mov
sub
jecxz
push
sbb
popa
fsts
xor
insb
xchg
xor
pop
push
inc
sub
jnp
push
scas
cs
gs
pop
jno
push
jg
test
dec
imul
lds
push
jns
dec
pushf
outsb
leave
inc
pop
sbb
mov
orl
insl
pop
xchg
iret
pop
outsl
xlat
pusha
test
jo
cs
in
imul
sub
andb
test
inc
and
das
insb
sub
cmc
push
pop
and
push
mov
fs
js
call
xchg
cmpsl
or
or
cmp
or
push
push
ror
icebp
and
xor
push
ljmp
loop
imul
mov
orb
out
das
inc
lds
cmp
push
test
dec
mov
lcall
bound
lds
addr16
xchg
leave
pop
xchg
mov
mov
jge
xchg
cmp
addl
sub
jmp
inc
fdivl
add
sahf
dec
mov
pop
xchg
sub
push
push
cmp
test
jns
enter
lods
das
test
jecxz
cmp
sbb
leave
fidivl
icebp
xlat
mov
imul
and
lea
insl
mov
cwtl
in
cmpsb
imul
ss
js
push
push
cs
fidivs
mov
hlt
jne
sub
icebp
fldenv
lcall
in
cmpl
stc
push
add
bndstx
mov
inc
pusha
push
data16
pop
xlat
mov
or
jle
out
cli
push
cmp
sub
in
mov
sbb
cmp
jne
mov
xchg
popa
cmp
cmp
jmp
xchg
adc
lret
xchg
test
imul
dec
jae
xchg
pop
inc
dec
xor
subb
pop
pusha
and
shl
xchg
aam
fimuls
mov
and
gs
jno
movsl
int
cli
les
mov
xchg
mov
push
repnz
jne
adc
leave
fwait
shrb
fucomp
push
add
frstor
scas
adc
pop
popl
jo
adc
in
sarb
inc
adc
mov
je
push
pop
bound
mov
xchg
fcoms
xor
cmp
hlt
dec
scas
mov
xor
adc
mov
mov
sub
subl
jle
mov
jp
idivb
in
dec
dec
lahf
jg
and
lret
sbb
shll
xchg
cli
and
push
lods
xchg
dec
es
mov
clc
push
std
ret
cltd
fbld
or
hlt
in
mov
inc
adc
cs
out
out
sahf
lods
insl
or
stc
je
xchg
xor
add
sahf
movsb
nop
mov
xchg
push
inc
adc
daa
xchg
xlat
sub
sbb
jnp
addr16
out
aad
jmp
mov
insl
gs
push
xchg
loop
fcmove
and
and
fstps
scas
push
repz
pushf
jo
mov
mov
mov
iret
sub
or
mov
shll
outsl
push
xchg
mov
in
jecxz
cli
dec
sbb
jmp
inc
repz
mov
lret
xchg
imul
test
mov
in
dec
orb
js
push
push
xorl
mull
stc
pop
mov
insl
mov
inc
rolb
jp
mov
or
mov
jbe
fisubl
pushf
fnsave
arpl
push
lods
fdivl
xchg
flds
dec
stc
mov
sub
lahf
add
lahf
movsl
rcrb
cmc
lods
stos
mov
das
and
dec
sarb
sbb
scas
ja
rclb
xchg
pop
xchg
or
add
out
mov
mov
lock
xchg
ret
bound
test
popl
ret
fisttpll
xchg
pop
scas
data16
lret
inc
jae
in
scas
xchg
lret
stc
scas
or
inc
out
xchg
pop
pop
push
pop
and
sub
push
mov
or
or
in
push
cld
mov
inc
fldenv
in
jg
fiaddl
mov
adc
lds
add
and
pop
fidivrl
lods
mov
xor
jns
push
mov
add
shlb
or
nop
inc
test
pop
cmpsl
mov
add
jb
lock
jno
inc
es
lret
inc
repz
ja
cmp
jle
sub
js
cltd
fcomps
enter
xchg
and
subb
frstor
loopne
and
add
mov
addr16
lret
jo
and
mov
insl
fdivl
cmp
lret
and
sarl
dec
movsb
push
cmp
dec
mov
and
jle
fsubl
sub
xor
sbbl
shll
mov
das
dec
inc
out
imul
aas
push
mov
test
lret
add
or
std
pop
push
es
xlat
xor
stos
fwait
lret
outsl
mov
out
test
test
push
movsl
sub
hlt
insl
pop
mov
pushl
shl
cmp
ljmp
push
adc
dec
cmp
out
int
in
sbb
dec
mov
mov
sub
jge
sbb
pusha
icebp
inc
cmpl
outsb
repnz
pop
mov
orl
add
mov
push
fwait
jbe
fildl
popa
adc
jo
daa
out
xchg
lds
stc
pushf
in
adc
movsl
push
int
adc
pushf
mov
std
and
ja
inc
xchg
sub
push
jno
scas
in
xor
ficompl
cwtl
out
xchg
adc
data16
inc
mov
mov
call
pushw
lea
or
inc
into
fs
ja
nop
ret
dec
jmp
jmp
out
fidivl
aad
jns
popf
and
cs
clc
mov
xor
pop
inc
mov
pop
sub
pop
pop
mov
ja
cli
stc
jecxz
push
and
lcall
inc
add
lcall
ja
ret
sbb
jmp
add
cmpsl
pop
lock
inc
orl
lret
ja
mov
mov
out
sbb
sbb
test
push
cmp
or
lret
sub
xor
mov
into
and
cmpsl
dec
push
aam
out
lods
stc
or
shll
push
xor
and
sbbb
mov
or
inc
insb
push
fwait
push
ss
add
pop
ret
loop,pn
cmc
dec
inc
sub
jp
test
or
addl
dec
mov
scas
popa
out
ds
jns
jg
add
js
ds
mov
divb
addr16
push
xchg
fmull
or
hlt
mov
inc
dec
aas
fwait
or
hlt
pop
data16
lret
mov
cmp
cli
dec
sub
xchg
inc
jmp
stos
adc
xchg
cwtl
add
shl
push
shrl
imul
out
bound
loope
inc
gs
js
fisubs
inc
xlat
roll
mov
mov
adc
loop
lea
mov
movsl
stos
addr16
dec
push
fnstcw
popf
mov
stc
cltd
std
sbb
or
enter
add
pop
or
out
movsl
sahf
dec
add
pop
aaa
mov
mov
mov
orl
lcall
test
fwait
loopne
out
sbb
and
xchg
ja
lock
jg
cmp
xor
jmp
xor
addb
sub
mov
popf
inc
and
outsb
iret
sbb
fldt
aaa
add
adc
push
lods
xor
mov
cwtl
push
shrl
push
aam
nop
add
ret
xor
fs
cmp
jb
out
ror
pop
repz
movsb
cmp
jge
sti
sbb
sub
sub
mov
sub
lods
jne
adc
inc
and
mov
enter
out
ljmp
lret
aam
push
je
call
or
or
push
mov
sub
je
mov
popa
lea
aad
shrl
cmp
in
adcb
push
jle
lret
or
jge
add
sub
imul
jl
inc
and
pop
das
jb
push
inc
adc
movsb
call
xor
adc
test
or
iret
cmp
mov
sbb
jno
mov
cmpb
jl
out
push
and
dec
dec
out
rcl
cmpsb
jg
cmp
jp
mov
decb
repz
and
mov
testl
pop
stos
insl
sbb
or
dec
adc
push
popf
inc
add
movsb
ds
aas
xchg
faddl
movsb
dec
dec
ror
mov
movsl
in
ffreep
fcmovbe
mov
lret
lock
movsb
and
inc
inc
nop
addr16
jae
or
cmp
aam
ret
inc
xchg
outsb
dec
mov
cmp
imulb
in
in
iret
pop
mov
cmc
imul
adc
add
test
push
jle
inc
inc
mov
cld
or
cli
xor
xchg
pop
xchg
or
ja
andb
mov
shl
jo
mov
fsubs
data16
cmp
cmpsl
mov
mulb
sub
or
cs
lods
aam
hlt
mov
mov
pop
push
xor
movsl
stc
mov
add
add
lret
les
xchg
flds
cs
fucomi
jmp
push
jno
sbb
push
ja
outsb
pusha
dec
out
mov
sub
popa
aaa
fmuls
fisubl
inc
into
xor
out
push
push
inc
jp
sti
add
cli
jmp
add
mov
xor
mov
mov
movsb
jnp
cltd
xor
adc
clc
mov
add
xchg
jl
add
test
popf
jge
push
and
lahf
add
xor
ljmp
repz
outsl
sub
enter
dec
sbb
mov
push
add
cmp
xor
cmp
xor
iret
sub
sbb
or
cld
jb
mov
jl
aad
jbe
popa
movsb
into
sub
xor
mov
inc
out
test
mov
nop
lds
lock
mov
repz
call
add
mov
lcall
inc
mov
test
add
mov
adc
dec
mov
repnz
sbb
xor
gs
push
pop
sbb
test
cmpsb
mov
int3
sarb
out
out
movsb
jle
mov
test
aas
push
mov
mov
pop
fidivs
imul
rcrl
iret
icebp
sbb
pop
xor
mov
jp
imull
leave
jo
flds
std
inc
adc
inc
inc
pop
lds
mov
or
sar
and
jmp
adc
or
insb
add
movsb
out
jle
loop
xor
mov
fcoml
mov
jno
dec
cld
jmp
and
outsl
daa
xchg
dec
dec
inc
ds
test
adc
xchg
in
push
ja
and
sti
and
test
adc
int3
sbb
ja
push
leave
pop
and
dec
fwait
xor
outsb
push
lret
mov
ret
in
cmpb
aam
pop
scas
stos
sbb
pop
adc
ja
stc
adc
jno
test
pop
xor
adc
popf
xlat
or
mov
lcall
adc
inc
dec
pop
sbb
nop
jne
inc
lds
aam
mov
sbb
lahf
adc
mov
fbld
pop
inc
ret
push
adc
sti
sub
cmp
add
mov
xchg
stos
hlt
xlat
ret
mov
xchg
xlat
sbb
cli
dec
in
addr16
and
sub
outsl
jge
xchg
jae
and
in
imul
fidivs
mov
jne
dec
subb
cli
ret
daa
and
call
xor
clc
in
insl
add
push
shll
test
and
notl
jmp
data16
xor
mov
fcomps
xchg
push
xorl
pop
jb
mov
xchg
mov
int
mov
and
and
hlt
pushf
addr16
fs
xchg
mov
aam
mov
cwtl
or
cmp
jo
insb
cmc
jno
or
pop
es
movsb
lahf
xchg
push
inc
inc
pop
xchg
fwait
leave
mov
jge
dec
imul
xchg
jne
cmp
stc
stos
mov
cmpb
add
dec
pushf
add
xor
stos
jnp
das
call
shlb
or
fldenv
add
int
sub
push
outsb
mov
mov
ret
in
or
test
scas
jl
ds
outsl
dec
xor
lret
inc
fiadds
lahf
push
pop
xchg
popa
iret
mov
push
inc
inc
mov
push
outsb
iret
pop
xor
test
outsl
lret
stos
fwait
mov
inc
xchg
js
adc
ljmp
inc
pop
jo
jle
xchg
fdivl
jp
fnstenv
pop
xchg
xchg
test
mov
dec
mov
inc
cs
test
and
jg
or
pop
int3
rclb
jo
sbb
lcall
jo
jbe
push
fwait
mov
insb
cli
clc
inc
xchg
jo
sti
push
movsb
popa
out
outsb
sbb
xor
popf
inc
sub
mov
mov
push
out
cmpsb
pusha
fstpl
shll
rcrb
cli
sub
stc
loopne
sar
bound
ret
xchg
jae
mov
cmp
inc
push
pusha
cld
adc
add
inc
out
cmpsb
inc
stc
pushf
daa
not
dec
jle
cmp
test
mov
loopne,pt
stc
sub
pop
ljmp
out
sbb
rolb
rorl
aas
daa
aas
fwait
shll
mov
xor
imul
fadds
inc
xor
repz
cli
cld
pop
insb
cmc
hlt
push
xor
inc
sbb
mov
push
loopne
dec
jae
push
fdivl
lods
mov
sbb
mov
xor
dec
jmp
js
inc
push
clc
js
pop
repz
test
jae
or
das
jns
adc
jae
xchg
rorb
xor
sti
xor
fstpl
subb
pop
out
fsubs
xor
lret
and
xchg
cmp
and
daa
push
jle
out
inc
dec
lods
ret
push
aas
stos
mov
add
dec
stc
xchg
and
inc
push
and
pop
fsubrl
inc
movsb
addr16
push
or
push
lret
cld
push
int
push
jo
int
and
movsb
stos
add
lret
pushl
mov
cmp
adc
scas
mov
mov
pop
lahf
les
gs
in
loope
mov
test
and
mov
int
adc
xchg
addr16
ret
subb
mov
sub
lahf
push
out
dec
pmullw
das
stc
mov
mov
and
test
sbb
pop
loopne
int3
fdivs
sub
pop
adc
push
fs
sbb
lcall
loope
mov
das
mov
xchg
and
xchg
push
inc
ja
pop
xchg
cs
mov
out
push
mov
pop
jno
cmpsb
popl
cmp
fildl
pop
outsl
mov
imul
loop
or
popf
aaa
cmp
mov
fidivs
mov
bound
std
inc
test
stos
aas
insb
in
add
fsubr
jae
dec
pushf
sub
xor
jnp
xchg
arpl
cmp
test
fcmovnu
inc
cli
aas
jmp
add
xorl
repz
sub
mov
lahf
addb
add
pop
clc
mov
pop
daa
movsl
push
in
pop
push
mov
jo
testb
ja
dec
push
ret
mov
rcl
and
movsl
test
lods
ret
rclb
xchg
cmp
pcmpgtb
sub
push
lea
lret
mov
add
loopne
stc
xchg
lock
inc
mov
mov
push
iret
clc
adc
bound
inc
adc
mov
add
daa
out
inc
push
mov
leave
cmp
xchg
cld
jno
leave
pop
pop
mov
out
lahf
loope
mov
jg
cmp
repz
fabs
orl
jl
call
jnp
xchg
dec
movsb
ret
mov
mov
outsl
scas
mov
out
repz
and
in
xchg
mov
movsl
jmp
and
lea
cltd
inc
add
fbstp
jne
mov
arpl
push
cmovae
ret
js
add
push
rcll
xor
gs
jmp
sbb
inc
fwait
lods
lods
cmp
int
outsl
inc
and
sub
jb
pop
leave
ja
push
xchg
pushf
push
ret
pop
jnp
xchg
cwtl
inc
insb
out
daa
repnz
cs
jl
mov
sub
pop
int3
xlat
arpl
xchg
and
jno
in
movsb
cmp
int3
outsb
insb
or
xchg
mov
xchg
pop
test
mov
inc
cmp
mov
and
push
pusha
fsubr
mov
adc
cmpsb
mov
cld
adc
fadds
push
daa
lds
sahf
outsb
test
test
test
ja
cli
daa
push
outsl
bnd
add
adc
sahf
loopne
jnp
or
in
push
es
cld
call
push
out
xchg
sbb
js
push
or
push
inc
popa
test
mov
hlt
outsl
mov
xor
xchg
mov
sbb
adc
sti
push
test
pusha
mov
xchg
stos
adc
cld
jle
pop
mov
ret
das
xchg
and
je
leave
gs
testb
movsl
xor
or
and
inc
mov
or
push
iret
mov
xchg
mov
repz
scas
bound
mov
cmpsb
mov
incb
push
mov
or
xor
nop
test
mov
fcoml
outsl
inc
shrb
xchg
fimuls
in
in
inc
sbb
icebp
aam
or
mov
push
sbb
gs
test
sbb
out
inc
inc
add
in
xor
add
dec
dec
into
loop
leave
pop
bound
je
pusha
into
lea
jp
les
lret
dec
lret
faddp
adc
lea
push
sub
out
inc
sti
dec
lods
push
pusha
mov
out
jnp
lahf
test
pop
cmp
rolb
mov
in
aas
test
dec
xor
xor
jnp
rcrb
hlt
sub
les
mov
cmc
cmp
popf
pop
mov
jle
mov
sbb
jae
mov
xchg
adc
and
add
mov
divl
aad
jnp
inc
jns
push
and
mov
pop
push
and
in
insb
adc
cmpsb
js
int
inc
in
ds
sbb
orb
mov
xorl
xchg
pop
arpl
mov
clc
jg
scas
aaa
roll
cmpsb
cmp
dec
mov
pop
inc
fnstcw
in
adc
inc
jg,pt
mov
sub
xor
and
mov
fwait
in
jbe
mov
ss
cld
out
das
in
and
jae
xor
out
popa
icebp
mov
sub
xchg
cwtl
pushf
mov
adc
cmp
xchg
add
data16
xchg
mov
pop
adcl
mov
mov
fstps
test
mov
test
out
sahf
jge
push
lds
imul
mov
xchg
pop
lret
fsub
ficoml
loopne
push
dec
mov
test
cmp
fnstsw
test
insl
xchg
in
enter
push
add
dec
push
decb
xchg
fstps
fwait
push
xor
mov
outsl
mov
movsl
cwtl
leave
pop
test
lods
ret
inc
addr16
das
dec
nop
rorl
jnp
popf
cmp
pop
and
shrl
lods
mov
sub
cmpsb
cmp
shr
mov
cld
ficompl
jmp
push
xchg
push
pop
pop
mov
out
mov
rorl
insl
leave
je
lock
roll
aad
shll
daa
and
and
xchg
mov
ja
hlt
mov
and
xchg
arpl
or
imul
fs
std
add
shr
nop
push
andb
fwait
lds
xor
test
mov
mov
insb
cwtl
sbb
mov
mov
loopne
inc
adc
push
adcl
pushl
xor
jbe
or
pop
jb
leave
add
and
mov
lea
xor
and
mov
call
push
cmp
stc
jnp
adc
inc
xchg
fstpl
cmp
idivb
imul
xchg
ds
push
sbb
push
push
lea
mov
insb
sub
push
push
test
sbb
jg
mov
pop
mov
xorl
cmpsl
inc
cli
mov
xor
fstps
stos
xlat
sbb
or
out
sbb
pop
das
dec
cmp
sbb
or
cld
lret
or
fs
xchg
test
outsl
stos
add
inc
sub
add
or
xor
rorl
data16
mov
fstpt
cwtl
pop
sub
test
cs
sub
je
xchg
xchg
jo
mov
aad
movsb
and
pop
cmp
pop
or
jecxz
xchg
rcl
outsb
daa
sbb
inc
mov
cld
je
sub
mov
cmp
push
adc
mov
out
mov
push
adc
loope
scas
dec
aas
jmp
cld
mov
hlt
xchg
jnp
push
aad
push
adc
out
movsl
popa
push
dec
insl
push
mov
add
out
sti
cwtl
dec
test
call
push
cs
push
mov
push
imul
and
and
push
adc
dec
imul
cmp
xor
loop
sbb
fdivp
and
xlat
xchg
and
mov
fbld
aas
push
scas
bnd
stos
div
mov
xchg
push
lret
out
std
pop
pop
imul
mov
push
mov
std
push
rcrl
pushf
sub
lds
imul
push
mov
outsb
into
ja
dec
sbb
mov
push
lock
xchg
sub
ja
das
aas
mov
xchg
and
mov
repz
push
clc
repnz
cmc
xlat
jno
cmp
ja
ja
inc
adc
push
push
push
stos
or
lods
pushf
dec
in
push
movsb
lods
dec
sub
iret
fs
inc
cmpsb
hlt
xor
pop
xchg
stc
add
mov
aas
sub
cmp
dec
stos
sahf
orl
pusha
lds
add
add
mov
sub
sbb
or
popf
sahf
lds
pop
add
pop
jns
dec
pop
push
pushf
std
adc
or
in
add
mov
popl
sub
sarb
sti
nop
push
pop
push
cli
and
add
jp
mov
incb
rolb
mov
rcll
testb
mov
jle
sub
push
mov
adc
jmp
ret
cmc
pop
fsubrl
cmp
jb
pop
mov
adc
ror
fcoml
insb
popa
cmp
pusha
mov
lret
sub
ret
push
fs
inc
fnstsw
cmp
imul
pop
cld
pushf
inc
mov
mov
mov
xlat
lret
daa
pop
inc
xchg
fidivrs
gs
pop
jp
imul
or
lds
adc
lods
test
sbb
mov
in
fadds
mov
cmpsl
int3
sahf
mov
mov
push
xor
out
sub
pop
jne
insl
mov
in
pop
pop
or
mov
xor
jle
cld
icebp
inc
cmp
hlt
fisttpl
push
sbb
shl
sub
add
pop
and
test
jmp
repz
popf
mov
xor
or
ret
insb
mov
push
jno
sti
jo
out
fldt
mov
inc
mov
stos
popa
out
cmpsb
call
roll
addr16
popf
andl
fcomp
jmp
xor
jg
cmpb
pop
mov
inc
dec
xchg
ficoml
loop
stos
dec
inc
loopne
xor
mov
inc
movntq
pop
dec
push
cwtl
ss
inc
cld
frstor
mov
mov
adc
adc
pop
sbb
push
jge
cltd
ja
and
popa
adc
sub
sahf
xor
in
or
xchg
sbb
addr16
pop
js
sysexit
xchg
in
add
xchg
or
iret
mov
dec
mov
mov
leave
adc
sub
sbb
shl
loope
jns
cltd
outsl
and
mov
mov
jo
push
pop
loop
mov
bound
inc
test
ret
inc
pop
repnz
loope
pop
ds
mov
add
sub
fiaddl
movsb
xor
lahf
and
xchg
cmp
and
icebp
jmp
imul
xor
dec
test
and
jnp
test
cs
pop
adc
adc
add
push
mov
leave
imul
or
cmp
lods
push
xchg
adc
enter
or
fsin
outsl
cmp
pop
cmpb
sbb
jge
xor
call
imul
pop
mov
fwait
or
adcl
stos
cmpl
cmp
sbb
cmp
cmp
pop
cmp
adc
inc
xchg
test
cltd
mov
std
arpl
mov
ds
and
inc
pop
or
pop
sub
imul
and
and
mov
sub
pop
repnz
jle
sbb
xchg
imul
loope
dec
stos
nop
jo
push
gs
or
arpl
pop
push
daa
fwait
lcall
xchg
push
cltd
sub
jns
jmp
popf
add
jp
mov
push
fistpll
iret
dec
mov
pop
nop
mov
adc
dec
mov
movsl
or
fmul
push
dec
adc
push
cmpsb
aaa
insb
xchg
cmp
leave
xchg
aam
repnz
divl
stc
xchg
dec
jbe
cld
mov
mov
push
jo
out
int3
es
js
sub
sub
fs
cltd
aas
add
lahf
push
fnstcw
mov
mov
test
sahf
xchg
cltd
fcmovbe
pop
mov
push
aam
in
scas
sbb
or
xchg
dec
jbe
mov
push
fwait
repnz
cmpb
adc
lds
mov
testl
mov
dec
insb
subl
inc
imul
xor
gs
jns
jge
test
jge
sub
bound
xlat
cmp
fs
dec
popf
imul
and
fcmove
push
test
inc
outsb
mov
les
and
sbb
push
inc
sub
dec
add
cli
mov
push
sub
push
fisubl
inc
int3
xchg
dec
popf
mov
sbb
les
add
outsl
push
pop
lods
mov
sbb
outsb
shlb
sub
std
jl
dec
fwait
push
mov
idivl
dec
xor
cmp
mov
into
mov
and
jns
shlb
loope
es
mov
cld
int3
iret
pushf
adc
mov
cs
adc
and
push
add
mov
add
dec
sub
sbb
add
dec
inc
fstpl
mov
pop
insl
loop
sub
push
sahf
in
loope
stos
inc
pop
pop
pop
xor
sbb
adc
pop
or
es
and
xor
in
adc
mov
xchg
dec
add
cwtl
jnp
jmp
imulb
pushf
push
xchg
adc
jae
or
loop
jecxz
cwtl
mov
inc
mov
loope
insb
sub
mov
push
and
sub
xor
mov
icebp
and
jne
cmp
fbstp
pop
lret
cmpsl
lret
into
repz
int3
sbb
repz
jge
jg
mov
sbb
mov
movsl
dec
lds
inc
mov
xor
decl
fcompl
push
scas
dec
add
jnp
dec
shll
inc
sahf
dec
push
dec
mov
pushf
lock
and
sub
fucom
or
testl
out
and
jnp
sbb
inc
enter
mov
and
jle
pop
cltd
push
test
mov
stc
cmpsl
mov
lret
pop
je
mov
sarb
mov
mov
out
lea
insb
cmp
jns
mov
pop
cmc
popf
sahf
jmp
ret
rcrb
movsb
movsl
jl
loop
aad
out
jmp
mull
ja
mov
test
cmp
inc
repnz
repz
push
or
daa
jl
xchg
cmp
out
and
xor
leave
inc
pop
dec
xor
mov
xor
xchg
loop
arpl
mov
subl
mov
dec
into
mov
jo
mulb
or
push
xchg
cmp
push
push
repnz
lea
lcall
leave
out
xor
test
push
sub
outsl
cs
xchg
jb
sbb
scas
icebp
mov
mov
xchg
inc
in
push
insb
add
js
test
mov
test
test
dec
jb
add
push
mov
xlat
rcl
cmc
jno
pop
orl
push
call
mov
inc
lahf
pop
or
fadd
sub
test
aaa
xor
scas
mov
popa
mov
lock
mov
push
mov
xorl
add
push
mov
ljmp
cmpsb
or
dec
scas
xor
mov
cwtl
pop
fld
mov
aam
xor
inc
mov
pop
test
in
pusha
in
xor
fcmove
xchg
xchg
add
or
mov
fisubrl
push
movsl
js
mov
add
xchg
jg
adc
ljmp
xor
mov
sbb
add
sbb
aas
or
clc
lea
in
scas
or
repz
fwait
dec
cltd
push
rcl
xor
mov
aam
clc
pop
jnp
inc
mov
nop
mov
mov
lret
std
cmp
jbe
xor
shr
jecxz
adc
in
or
mov
jnp
mov
movsl
cltd
in
or
ljmp
cmp
repz
dec
cld
nop
fbstp
fistpll
cmp
aas
xchg
pop
inc
nop
cmp
jbe
popa
jl
mov
outsb
pop
mov
nop
jmp
and
rclb
cmpsl
int
mov
push
and
mov
pushf
sbb
xor
jle
gs
push
cmc
sbb
push
sti
push
push
add
mov
arpl
rcr
es
pop
sbb
sbb
mov
das
cmpsb
nop
pop
pop
filds
int
testl
lcall
cmp
push
das
adc
sbb
fucompp
adc
popf
cwtl
shrb
push
jae
loop
push
test
mov
adc
cmpsl
mov
sub
and
test
jle
pop
mov
int
inc
in
aam
push
dec
int
lcall
inc
testl
mov
ljmp
push
in
loope
scas
call
enter
cmpl
cli
jne
mov
lock
pushf
xchg
imul
aas
mov
gs
dec
aam
push
cmp
out
repz
out
lea
vmovaps
js
jg
or
sbb
mov
test
inc
daa
fsubrl
push
adc
add
sahf
fwait
jne,pn
rcrb
jbe
in
insb
dec
jp
es
incl
and
adc
mov
stos
adc
hlt
jo
and
mov
add
aas
in
push
arpl
xchg
jnp,pt
sahf
cltd
xor
cmp
imul
out
mulb
roll
int3
popa
cli
cmp
imul
push
sub
rclb
inc
shll
xchg
enter
push
test
sub
hlt
fldl
rcrl
arpl
xchg
push
bound
outsb
daa
xchg
out
sti
int
repz
push
push
scas
mov
sbbb
js
sbb
hlt
pop
scas
imul
mov
out
cwtl
sub
aad
cmp
mov
iret
xorl
addr16
sbb
std
scas
xchg
sub
bound
leave
jge
das
ja
rolb
mov
mov
xor
stos
leave
fnstsw
adc
lret
mov
jg
dec
mov
jp
or
push
jle
data16
popa
roll
dec
and
cwtl
clc
jecxz
mov
nop
fwait
cld
inc
fiadds
aas
xor
test
adc
sbb
jl
flds
mov
popf
dec
dec
popa
mov
aam
int3
pop
push
incb
and
aad
imul
mov
mov
daa
imul
lock
ret
sahf
loop
loope
fwait
and
outsl
pop
ficompl
mov
mov
push
popa
shlb
rclb
dec
push
mov
aad
inc
addr16
dec
cmpsb
or
std
aam
repz
adc
mov
mov
cmc
nop
adc
arpl
test
jns
push
leave
inc
hlt
loopne
out
icebp
add
inc
sbb
cld
stos
push
ret
pop
addr16
aad
pop
js
subb
testb
repnz
or
std
inc
lahf
xchg
out
dec
sbb
fimull
or
mov
mov
dec
mov
inc
js
jmp
jp
ds
mov
enter
mov
mov
pusha
bound
or
bsr
enter
xchg
xchg
jbe
stc
xlat
out
inc
jge
out
js
adc
push
or
leave
add
mov
pop
jne
lret
stc
pop
mov
xchg
xor
sbb
int
cmpsb
pop
rolb
or
cmp
inc
mov
mov
or
dec
jno
dec
lea
push
adc
push
in
cmc
push
sbb
and
dec
sbbl
xor
pop
adc
dec
ret
add
subb
neg
inc
and
mov
jnp
insl
dec
das
inc
in
inc
hlt
aaa
and
fs
frstor
sub
sbb
fsub
cli
and
int3
jg
rorb
inc
fdivs
sbb
pop
inc
mov
test
stos
and
sub
inc
dec
inc
into
insb
inc
rcrl
mov
sbb
roll
ja
arpl
jecxz
imul
lret
outsb
add
clc
icebp
call
inc
xor
sbb
push
popf
scas
lret
push
arpl
jno
mov
fwait
sub
pop
sub
or
cmpb
int
pop
movntq
dec
addr16
arpl
add
outsb
xchg
xchg
jge
shrl
pop
mov
lcall
mov
xor
ret
ret
or
test
testl
lahf
mov
ret
fidivrl
ja
xor
fmuls
or
ds
mov
push
xor
xor
mov
dec
xor
or
pop
mov
jo
xchg
inc
xlat
push
or
ljmp
aaa
outsb
mov
xchg
sbb
popa
mov
jecxz
cli
mov
cmp
xchg
loope
in
push
mov
repnz
xorb
xor
lock
fwait
sarl
jae
sbb
mov
repnz
cmp
outsb
das
aas
push
sbb
arpl
or
incb
sub
pop
jmp
xchg
hlt
ljmp
dec
or
outsl
pop
pop
addr16
sub
pop
inc
push
inc
add
lcall
enter
push
and
nop
arpl
jl
mov
add
shl
or
sti
imul
push
mov
push
ja
or
dec
adc
fistpl
xor
repz
and
stos
insb
int3
or
ret
out
out
gs
jge
aad
out
jecxz
call
pop
pop
cmp
jb
cmpsb
xchg
rclb
sbb
push
pop
mov
lock
movsl
inc
in
popf
iret
pop
pop
sbb
cmpsb
insl
jns
jl
xchg
xor
xor
ss
jp
je
int3
daa
xchg
mov
jae
jmp
in
ficomps
mov
hlt
test
mov
sub
cmc
sub
mov
mov
jne
fidivrl
pop
pop
mov
ljmp
loope
fisubl
call
inc
lahf
jne
add
mov
loope
idivb
inc
sub
add
mov
adc
mov
jp
push
pop
into
ret
or
jne
test
lret
push
xchg
inc
divb
mov
enter
scas
and
aas
pop
mov
sub
mov
inc
scas
fucompp
and
roll
mov
jle
pop
movsb
jne
incb
outsb
dec
test
xchg
xor
xor
mov
in
cli
lahf
scas
xchg
mov
xor
incl
icebp
add
les
dec
iret
sub
jnp
mov
inc
scas
or
jle
xor
fs
lods
fidivrs
sub
push
in
addl
push
popa
jns
pop
ret
outsb
pusha
aas
jecxz
mov
add
outsb
push
rclb
nop
jl
push
xchg
in
insb
frstor
sbb
mov
idivb
add
mov
xor
push
out
lret
fidivrs
pusha
imul
out
mov
das
inc
movl
inc
pop
add
cmp
bound
pushl
adc
minps
out
fistpl
gs
insl
mov
lahf
popa
cli
dec
cmpsb
mov
xor
inc
inc
push
pop
rolb
dec
lds
and
pop
or
cmp
dec
sub
and
test
inc
pusha
mov
or
movsl
jl
cmpsb
adc
pusha
outsl
decb
sbb
fnsave
cmc
sahf
iret
movb
cs
push
xchg
or
call
push
imul
movsl
out
in
fiadds
xor
enter
icebp
mov
lahf
and
leave
mov
mov
dec
mov
int3
ret
fldenv
idiv
ljmp
andb
fnsave
inc
sub
dec
cmp
xchg
adc
cli
cmp
out
xor
xchg
pusha
orb
js
xlat
rcrl
xchg
cs
add
stos
test
mov
sbb
mov
sbb
xor
add
stc
lock
lcall
test
fdivs
cmp
xor
insb
push
mov
testb
pushf
xor
push
sbb
movsl
rcll
lea
imul
out
cmp
mov
gs
jb
ret
pushf
cli
dec
inc
inc
fadds
ja
mov
imul
sub
add
and
fistpl
popa
stos
das
imul
xor
jge
pushf
push
xchg
dec
sbb
out
dec
push
rclb
jo
cmp
push
fimull
cli
dec
ret
mov
add
xchg
jmp
mov
and
fucomi
pop
adc
js
aas
xor
cmp
inc
add
or
loop
lret
sti
sahf
cmp
adc
sbb
push
cmpl
orb
movsl
cltd
dec
jecxz
inc
out
wbinvd
shlb
fs
sbb
sbb
jb
sarl
repnz
mov
stc
push
push
sbb
bound
lea
fbstp
mov
jp
push
stos
stos
je
sbbl
push
sub
mov
lds
lahf
addb
cwtl
rol
pop
and
les
pop
mov
cmp
mov
test
je
test
sub
movhps
lcall
xlat
insb
ljmp
cs
push
sub
stos
testb
pop
sbb
mov
loopne
loop
int3
ljmp
movb
inc
push
clc
fcomps
mov
jno
jp
sub
mov
sarb
mov
mul
test
adc
lahf
dec
or
dec
rolb
aad
sub
icebp
imulb
fcomps
movsl
push
mov
jecxz
cmp
in
jmp
or
stc
pushf
xlat
sub
imul
push
gs
push
out
inc
cmp
add
push
pop
inc
jo
in
cltd
cmp
fstl
nop
sbbb
inc
mov
iret
push
sub
add
mov
cmp
add
pushf
sbb
popl
pop
sti
clc
inc
lret
movsl
ret
inc
mov
push
inc
add
lea
dec
test
xor
cs
adc
aas
cmpsl
fdiv
popf
jo
aam
inc
stc
insb
inc
xchg
adc
adc
mov
mov
xor
arpl
aas
xor
les
sbb
inc
je
jae
fisttpll
out
pop
lahf
lods
sbb
lcall
lret
sbbl
sub
jno
lods
mov
push
mov
xchg
jle
cs
sbb
pushf
mov
lret
jns
test
rcr
or
loope
xchg
out
popa
adc
mov
or
jae
inc
xor
pop
or
out
cmc
lahf
push
and
adc
aas
dec
add
xchg
in
xchg
ss
daa
and
lahf
xchg
pop
mov
and
mov
test
mov
cmp
out
or
int
or
fnsave
jns
sbb
icebp
fsubrl
iret
inc
push
xor
adc
lock
faddl
addr16
daa
jecxz
out
mov
js
xchg
cmpsl
fidivrs
mov
popf
mov
imul
sbb
fisubrl
test
pop
add
lcall
inc
or
inc
icebp
mov
mov
bound
dec
push
jp
js
inc
daa
sub
push
mov
lds
call
pop
push
and
das
xor
xor
mov
sbb
cs
out
inc
pop
push
pop
pop
jmp
adc
add
mov
cmpsl
inc
lea
aam
loop
dec
outsb
add
movsb
pop
mov
test
lock
add
dec
push
loopne
fidivl
adc
cmp
pop
lds
lret
sub
ss
cmpsl
xor
sub
push
mov
mov
hlt
fcmove
test
inc
in
andb
xchg
mov
into
es
popa
lods
jmp
add
fcompl
dec
push
std
xchg
push
je
es
lock
imul
sbb
pop
in
mov
insl
jns
mov
out
pop
ja
xchg
in
add
mov
rorb
push
scas
adc
lcall
mull
int3
decl
mull
or
jae
sbb
lock
cmp
loope
ljmp
inc
shll
fwait
sbbl
test
into
adc
jb
mov
fidivl
adc
loop
rclb
add
xchg
addr16
and
sub
inc
insl
xchg
rcrl
clc
mov
xchg
test
mov
and
mov
lret
out
and
in
ja
xor
mov
xchg
pop
and
mov
fstl
xchg
pop
mov
mov
mov
jae
lret
movsl
imul
je
push
outsb
scas
rcrb
push
hlt
xchg
or
mov
mov
mov
and
or
push
xchg
loopne
lock
into
fcomip
push
xchg
add
jno
sbb
and
lret
repz
std
js
loopne
les
mov
sbb
popf
daa
and
mov
int3
pop
push
ret
mov
and
push
push
push
xor
lret
bound
jae
enter
lcall
push
add
fadds
test
add
imul
mov
cli
das
ja
dec
stos
sti
ret
mov
sbb
clc
in
int
int
es
jae
movsb
leave
hlt
adc
mov
adc
pop
cmpsb
lcall
cltd
sub
dec
cmp
cltd
push
xchg
push
mov
sub
push
cli
lock
in
ds
fstps
pop
xor
dec
aad
nop
jae
lret
sbb
inc
pop
xchg
adc
mov
leave
sub
pop
daa
dec
out
pop
mov
push
stc
dec
pushf
mov
xor
rcrb
dec
mov
imul
fcompl
pop
lods
dec
loope
lock
jge
jp
xchg
loop
clc
mov
pop
fadds
pop
outsl
mov
and
or
lret
insb
aaa
lock
and
cmp
lds
cmp
push
test
imul
cld
stc
mov
out
lods
dec
mov
lods
sub
mov
cmp
dec
lock
or
lods
push
jp
cmpsb
dec
repz
cmpsb
test
mov
and
or
fadds
mov
cmpsb
pushf
sub
fstpt
leave
sbb
xlat
and
and
repz
icebp
pop
mov
sbb
sub
dec
lods
inc
mov
movsl
sahf
mulb
jnp
cmc
cmp
rcl
dec
fwait
jmp
dec
sar
fists
fisttpll
and
loope
stos
je
and
push
out
xlat
aaa
rol
and
aaa
add
sbb
xchg
sbb
pop
movsl
and
repnz
mulb
rolb
mov
inc
jg
test
ja
cmpsb
icebp
out
pop
xorl
sahf
xchg
mov
bound
inc
test
out
mov
stc
mov
dec
jb
mov
stc
cmp
mov
subl
push
mov
lret
adc
je
or
push
clc
addr16
mov
add
outsl
inc
es
inc
pop
xor
dec
adc
lahf
inc
cmp
test
mov
scas
mov
sub
mov
mov
xlat
lods
lret
cmc
adcl
push
into
sahf
mov
cltd
xor
dec
cmp
fmull
cmp
pushf
jne
xor
or
loope
or
or
add
jp
add
jg
lods
or
rorb
xor
test
cmp
pop
insl
ljmp
out
scas
ja
nop
lea
enter
cmp
jbe
mov
mov
lea
sbb
icebp
xchg
mov
fdivs
aad
sti
or
cmp
sub
cmp
shrb
jl
in
stc
fistpl
push
data16
mov
cmp
in
jmp
and
aas
rclb
adc
nop
push
fiaddl
dec
mov
jmp
shrl
aaa
inc
lcall
pop
lret
xor
and
leave
or
xor
pop
icebp
mov
sbb
callw
out
jmp
fbld
mov
inc
mov
jne
xchg
out
push
andb
jbe
in
rcrb
addl
jmp
or
push
xlat
xor
cmpsl
pusha
enter
aas
mov
xor
popf
ljmp
pop
sbb
adc
int3
add
int
lods
clc
mov
inc
fimull
xor
sub
mov
int3
ficoml
rcll
pop
fildl
aad
nop
jne
test
add
enter
push
add
adc
into
cs
cmpsb
mov
lods
adcb
mov
ret
jno
pop
icebp
mov
fiaddl
fisttps
insl
cmp
std
test
pop
mov
pop
pop
test
push
int
aam
daa
jb
cmp
xlat
or
xchg
bnd
mov
lcall
jge
mov
in
int3
es
gs
fs
mov
jge
mov
inc
jl
mov
push
xor
xor
sub
push
insb
icebp
ds
or
in
sti
lret
insl
jmp
sub
sbb
pop
adc
mov
xor
pop
add
pusha
cvttps2pi
scas
mov
push
lds
push
pop
rol
adc
push
shll
out
push
sahf
inc
inc
cs
pop
mov
jg
and
sbb
mov
and
ret
xor
and
out
in
fists
pop
aad
mov
inc
push
mov
movb
fwait
dec
cmp
and
stos
cltd
adc
inc
inc
cmp
mov
jge
mov
jl
testb
cwtl
cli
mov
xor
adc
lea
cmp
push
fidivl
jno
and
leave
test
sahf
out
push
xchg
sbb
in
clc
push
xor
fists
mov
xchg
mov
xchg
js
sub
inc
push
xchg
cmp
jns
cmpsl
mov
add
mov
lea
push
icebp
sbb
int
xchg
add
pop
pop
adc
add
xchg
adc
pop
sbb
xlat
inc
jg
test
movsl
loope
data16
mov
xor
mov
ret
xorb
bound
inc
jmp
jl
push
jecxz
es
mov
test
sbb
inc
ds
test
call
pop
add
das
out
mov
gs
push
stos
xor
sbb
add
mov
jle
aad
and
mov
xor
shl
dec
and
arpl
cld
cmpsb
dec
shl
pop
pop
enter
popa
fcompl
xor
xor
fmuls
xchg
ret
fnstcw
and
aam
jmp
in
or
in
dec
sub
pushl
rorb
push
add
leave
lds
imul
mov
inc
cwtl
aas
push
into
add
mov
lahf
leave
dec
stos
xor
fstpt
dec
fisubrs
xchg
shrb
push
push
insb
sbb
fsts
dec
mov
xorb
ja,pn
mov
rcrb
push
xchg
pop
inc
sti
imull
inc
and
adc
add
jge
or
movsb
dec
mov
cwtl
mov
enter
aaa
shll
and
pop
mov
mov
iret
inc
pop
add
outsb
test
fdivrs
lods
into
insb
aaa
inc
out
xor
cmp
adc
aaa
rol
aas
adc
fcmovnb
pop
aaa
push
ret
stc
outsb
xchg
fs
jle
jp
xlat
inc
mov
fidivl
add
test
inc
inc
ret
stos
and
jecxz
inc
fists
sti
fstl
outsl
fisttps
and
cmpsb
jbe
or
out
xor
mov
cmpl
cmp
sahf
mov
cltd
cld
stos
pop
repz
hlt
stc
sbb
xchg
out
sbb
pop
mov
insb
test
adc
lods
dec
push
xchg
inc
cld
dec
xchg
push
sub
rcll
ja
sub
xchg
in
mov
push
call
push
xchg
cli
pushf
imul
das
xchg
ljmp
stos
out
inc
rorb
rclb
jne
adc
outsb
sahf
icebp
and
xlat
lock
adc
sub
xchg
test
aam
call
xchg
cmp
movsb
mov
mov
loopne
inc
mov
iret
push
inc
pop
adc
lcall
lea
mov
out
leave
fcompl
sti
imul
and
mov
test
mov
fistpll
icebp
xchg
pop
movsb
aad
test
push
inc
jae
dec
inc
xchg
ja
pop
call
mov
add
lahf
push
test
movsl
mov
loopne
icebp
push
sahf
or
int3
fisttps
pusha
adc
mov
and
stos
mov
fnstsw
inc
mov
lcall
mov
in
xor
push
test
pop
jmp
rcll
fmul
cmpsl
xor
call
leave
call
dec
jne
dec
ret
out
mov
cld
lahf
mov
es
pop
xchg
xor
das
scas
in
or
decl
jne
adc
cli
jp
sti
mov
dec
push
lret
mov
pop
cwtl
lds
arpl
cmp
leave
rorl
adc
insb
mov
sbb
ret
dec
leave
bound
insb
andb
add
jb
dec
ucomiss
test
jno
and
shr
pusha
lret
stos
fiadds
rclb
pop
outsb
daa
js
in
pop
mov
js
sub
cli
pusha
and
sub
jno
push
pop
ffreep
cwtl
jae
imul
stc
dec
aam
in
push
xor
nop
out
pop
and
vmovlps
fwait
mov
xchg
and
sahf
pop
dec
scas
outsl
jnp
enter
inc
jnp
mov
das
or
pop
jb
sti
add
fidivl
insl
lods
cmp
sti
shl
sbb
lcall
push
push
xchg
cwtl
lcall
stc
xor
sub
imulb
movsl
rcl
push
loop
lahf
xchg
int
lock
icebp
mov
inc
sti
icebp
mov
nop
out
pop
loope
lcall
cwtl
rcll
rcrl
push
ljmp
ja
imul
sub
inc
jmp
fsubs
or
xor
sbb
xor
push
loope
push
or
xor
test
ljmp
xor
int3
call
dec
dec
in
push
in
lcall
inc
mov
ss
sub
or
push
out
pop
fdivl
cmp
xlat
inc
xchg
addr16
pop
cmp
rcll
adc
mov
xchg
sbb
pop
js
lods
cmp
inc
stc
jg
cltd
inc
aad
jns
out
movsb
jg
dec
imul
jg
gs
cli
imul
enter
rolb
rorl
mov
pop
jne
std
xchg
push
inc
pop
seta
lahf
repz
cmp
xchg
in
aad
popa
cmp
dec
add
ljmp
dec
add
mov
sub
xchg
movsl
xor
in
mov
icebp
mov
jmp
adc
mov
jge
cmp
xor
pop
ret
sbb
sbb
divl
mov
add
js
adc
jno
test
fidivl
xchg
mov
push
sub
int3
xchg
cmp
fnstcw
add
push
pop
pop
cli
xor
xchg
inc
adc
inc
aaa
jb
nop
rclb
adc
cmpsb
pop
pop
jge
es
pop
pop
mov
pop
mov
loope
into
or
aam
test
add
jns
xor
and
sub
sahf
jecxz
or
aaa
out
das
jo
push
sub
mov
and
aaa
je
push
push
mov
lcall
nop
mov
test
mov
cli
adcl
dec
inc
insb
incb
clc
sub
xor
lds
pop
sub
fildll
and
loopne
inc
ret
scas
xlat
push
lock
mov
mov
push
mov
add
jnp
sbb
mov
daa
aad
aas
lock
jl
add
loop
cld
fimull
or
in
push
sbb
cltd
js
pop
lretw
sbb
push
xchg
fsubp
push
clc
pop
movsl
sub
mov
adc
push
hlt
inc
and
fs
clc
rclb
test
xchg
pop
inc
pop
inc
sub
pushf
pushf
cli
mov
jl
push
jmp
je
sbb
das
or
pop
cwtl
lret
andl
subl
pushf
inc
mov
scas
insb
cmpsb
neg
dec
sub
ret
test
mov
xchg
mov
xchg
out
or
outsb
pop
or
repz
dec
loop
popf
jmp
test
cmpsl
inc
stos
orb
xor
and
scas
or
icebp
jnp
adc
dec
cltd
dec
stos
dec
inc
rorb
adc
sub
inc
es
adc
xor
bnd
mov
or
push
cmp
pop
adc
jmp
bound
mov
movsl
int
lea
mov
aam
aad
xchg
add
mov
leave
or
mov
jle
inc
pop
or
test
xlat
pop
jp
ss
movsl
inc
test
dec
sub
inc
into
daa
inc
aad
pop
add
loop
jno
inc
mov
pop
sbb
mov
aaa
mov
loop
mov
push
ret
scas
dec
push
sub
ja
daa
sub
adc
iret
inc
jo
or
testl
test
push
jo
imul
outsl
mov
push
cmp
pop
jne
gs
xchg
ret
imul
es
jae
add
add
aaa
loopne
push
and
xor
aad
out
mov
and
push
ljmp
jg
dec
lcall
scas
mov
lods
fwait
mov
mov
adc
and
lahf
mov
add
push
jg
cmpsl
aas
nop
sub
adc
icebp
jecxz
enter
xlat
xchg
or
ret
push
aaa
sbb
inc
xor
mov
add
jno
je
xchg
nop
jg
pushf
arpl
dec
jecxz
in
cmp
inc
pop
enter
push
gs
mov
xchg
jb
and
cmpsb
std
adc
movsb
aad
popf
ret
push
jno
in
add
out
stos
mov
sti
dec
roll
jb
dec
lret
push
sbb
dec
adcl
xchg
out
jmp
add
arpl
xchg
fadd
jne
rcrl
or
addr16
mov
daa
cltd
subl
or
lds
mov
cltd
xor
scas
enter
ret
sbb
dec
jge
lahf
subl
js
out
sub
mov
sub
xor
test
mov
fsubp
xor
and
rcrl
imul
pop
outsl
aam
adc
push
or
jge
test
je
mov
and
pop
lahf
and
cmc
push
mov
rcl
jnp
fildl
pop
nop
aad
xchg
dec
lods
fisubs
ficoms
add
pop
icebp
xorl
stos
xchg
arpl
loope
fldcw
mov
pushf
pop
loope
push
mov
mov
lahf
jmp
ss
sti
data16
out
loop
cmpb
push
push
mov
inc
fwait
mov
ljmp
adc
cmp
sbb
push
stos
data16
cmp
mov
subb
xor
xchg
sub
shl
rcrl
cmp
outsl
repz
test
lret
adc
push
xlat
mov
leave
xor
pop
inc
or
pop
repnz
movsl
mov
mov
sahf
cmp
lcall
xchg
fildl
or
pop
mov
push
mov
cmp
mov
or
test
sbb
ror
xor
call
pop
xor
mov
or
test
loopne
mov
movsb
cli
push
lret
sbb
in
out
lret
fbstp
xor
int3
xchg
jns
orl
or
je
movups
or
aad
test
or
mov
mov
iret
jmp
imul
jno
lret
lret
lcall
hlt
inc
lods
lds
cltd
dec
push
add
rcrl
push
ss
cmp
push
out
loop
cmpsl
push
jmp
adc
push
pop
xor
jbe
aas
jle
popf
mov
sub
mov
sahf
iret
repz
lods
std
add
push
adc
jmp
push
test
popl
movl
fs
cmp
inc
jbe
lahf
pop
sbb
jae
sahf
push
inc
lret
dec
sahf
inc
mov
xchg
and
inc
ficoms
sahf
mov
jns
rorb
aaa
mov
ljmp
insl
push
xchg
lcall
int3
imul
or
bound
scas
je
xor
aam
cwtl
addb
scas
into
or
scas
fnsave
repz
xchg
pushf
stc
xor
xor
and
jg
aam
jle
pop
imul
pop
insl
test
loopne
cli
dec
push
sub
pop
pop
andb
xor
sarb
cld
cmp
pop
mov
add
andb
pop
lea
pop
rorl
iret
mov
add
sub
in
out
cmp
add
mov
cmpsl
in
mov
and
add
xchg
dec
mov
cwtl
xchg
cli
dec
mov
arpl
mov
dec
jmp
pusha
push
adc
add
leave
lods
pop
out
xor
mov
dec
sahf
jg
jmp
clc
lods
xchg
lret
cmpsb
mov
pop
aaa
cmp
sub
push
lea
imul
je
lea
inc
inc
cmp
mov
outsl
inc
sbb
cld
shrl
xchg
in
pop
test
lcall
data16
sbb
imul
fistps
jle
jnp
stc
push
mov
push
lods
out
insl
adc
fadds
scas
xor
push
cmp
pop
jbe
cmp
or
shlb
ljmp
dec
shl
pop
loope
mov
xor
sahf
mov
mov
push
ja
pop
inc
jb
je
jae
xchg
push
or
cld
sub
roll
add
push
outsb
lods
mov
mov
add
mov
add
pop
daa
sahf
xchg
loop
push
in
mov
mov
and
mov
repnz
incb
xlat
add
sub
aam
jecxz
ljmp
mov
popl
xor
inc
xor
popa
int
rcll
or
daa
ss
in
mov
aaa
lret
lods
ss
ds
xchg
pop
and
cmc
rclb
sub
das
test
arpl
icebp
sbb
push
imulb
xlat
scas
mov
mov
aas
add
ljmp
xor
pusha
dec
fwait
jno
cmp
cmp
adc
push
fidivrl
gs
out
pushf
jl
mov
fstps
lods
jnp
cmp
mov
pop
or
outsl
xlat
inc
jle
in
push
push
pop
xor
dec
push
xor
lds
icebp
cmp
and
test
enter
dec
push
in
and
mov
sbb
inc
cli
hlt
das
cltd
cmp
inc
pop
xor
popf
mov
inc
inc
mov
cmpsb
push
xchg
push
mov
mov
sbb
cmp
fs
push
addl
icebp
pop
adc
push
mov
cmpb
out
fldt
inc
psubd
imul
stos
lods
mov
leave
scas
cwtl
enter
test
stos
flds
ret
ret
adcb
xchg
add
shl
pusha
hlt
mov
sub
xlat
adc
shll
mov
lret
test
jne
pusha
mov
inc
lods
xor
xor
push
cmp
push
fists
inc
sahf
push
cmc
mov
das
mov
cmpl
cld
or
xor
and
enter
add
and
push
cmp
imul
dec
call
mov
pop
andl
inc
adc
enter
rolb
inc
sbb
add
pop
pop
jae
push
shlb
fsubr
popa
adc
lock
and
jae
pop
lret
jecxz
int
mov
adc
push
cmpl
mov
clc
cmp
xor
idivb
addb
mov
xchg
sub
inc
xchg
lods
nop
pop
imul
ficoml
push
je
jo
dec
mov
andl
jmp
pushf
mov
sahf
ja
bound
ss
xchg
push
xchg
push
jge
aaa
mov
nop
fiadds
or
ljmp
or
out
flds
leave
iret
sbb
inc
dec
mov
sbb
ret
mov
andb
cmp
repz
push
jge
xchg
jae
outsb
int
inc
dec
ljmp
mov
xchg
addr16
jle
xchg
int
into
push
js
push
sbb
sbb
loope
lods
mov
cmp
test
cs
adc
cld
dec
cmc
inc
aad
loop
pushf
jle
xor
push
imul
ffreep
push
or
push
rcrl
sbb
aas
in
stos
lods
add
in
fistl
jns
out
leave
test
out
sub
inc
lret
test
pop
jmp
push
sbb
jg
jle
dec
mov
push
fwait
or
int3
push
cmp
mov
add
fstpl
mov
scas
inc
inc
sbb
and
adc
popa
inc
stc
jns
cs
mov
jg
pop
add
mov
lcall
fucomp
lods
sti
mov
or
jp
rorb
inc
scas
xor
mov
and
jp
in
pushf
inc
mov
pop
cli
adc
jg
mov
in
ja
adc
negl
sbb
mov
insb
xor
push
jnp
xchg
xorb
sub
sbb
jecxz
mov
xchg
nop
push
fldcw
sar
scas
repz
mov
stc
enter
mov
sub
icebp
aas
xor
jg
and
jge
ja
pushf
inc
cwtl
les
std
lahf
push
dec
mov
pop
out
xor
xlat
call
cli
pop
mov
fbstp
push
cmc
dec
xor
arpl
cmp
sbb
imul
mov
in
rorb
xchg
cmc
pop
mov
nop
lock
in
inc
out
sbb
int3
xor
clc
arpl
sub
into
push
movsl
out
dec
fsub
xor
xchg
rclb
movsl
outsl
push
mov
pop
push
mov
stc
pop
pop
and
xor
mov
adc
stos
ret
into
mov
push
mov
aaa
or
cmc
shlb
mov
pop
ret
push
cli
lods
jmp
nop
mov
daa
push
cmp
adc
rcrb
int3
mov
popf
mov
xor
rolb
xor
xor
movsl
scas
test
xor
xor
mov
shlb
cld
sbb
or
je
das
stos
jge
bnd
ss
mov
aas
in
test
fadds
push
jle
add
mul
and
push
mov
mov
into
sub
shlb
and
sahf
es
xorl
dec
out
fnstenv
orb
pusha
ds
pop
pop
dec
or
mov
jl
push
add
arpl
mov
jno
mov
add
ror
lcall
es
rclb
stc
add
jl
or
dec
push
scas
pop
test
mov
mov
cmc
cli
xchg
jecxz
les
scas
sbb
cmc
or
orl
inc
push
outsb
outsl
push
mov
xor
mov
shlb
lds
hlt
out
or
or
ljmp
fmuls
add
loope
bound
xor
sti
inc
or
sti
mov
xchg
lcall
push
push
sub
xor
cmp
setb
jmp
fs
jbe
xchg
into
pop
adc
scas
xchg
ds
out
fmulp
shrb
rolb
popf
add
adc
or
mov
in
imul
in
lcall
pushf
inc
cmp
sahf
leave
les
inc
jecxz
pop
stc
mov
pop
mov
jbe
or
ret
jno
ret
testl
imul
add
inc
mov
imul
jmp
iret
fildll
cmp
xor
cmp
test
sbb
rorl
xlat
aas
sub
pusha
xor
cs
sarb
cli
shlb
xor
outsb
and
sub
jb
in
sbb
push
mov
jl
jmp
iret
adc
insb
daa
dec
mov
fdivr
mov
movsb
shll
cmp
cli
mov
cmp
jbe
sbb
test
into
fadds
pop
sbb
push
cld
cmp
fmull
loopne
gs
pop
clc
jg
hlt
pushl
or
popa
push
cld
push
in
rcrb
mov
xlat
pop
mov
scas
ljmp
pop
pusha
mov
dec
sahf
push
dec
imul
mov
sub
cs
mov
push
repnz
push
or
shrb
aam
sarl
mov
out
lds
push
xchg
sbb
and
fdivs
daa
mov
mov
ss
inc
xchg
je
and
loop
cmp
cmp
imul
push
scas
jge
xchg
aaa
and
cmc
test
mov
add
out
lds
xchg
rcrl
push
sub
dec
movsb
or
cmp
fildll
push
and
mov
into
adc
or
mov
aas
call
pop
stc
xor
push
and
iret
lods
lods
xchg
fst
mov
add
gs
jnp
int3
pop
shlb
ljmp
insl
int
test
mov
cmpsb
loope
sub
mov
xor
push
pop
inc
lea
in
aas
pop
subb
inc
jbe
mov
jno
out
aad
imul
sti
and
enter
int3
xor
or
or
dec
jne
sbb
mov
jb
ret
adc
push
jecxz
xor
push
add
stos
mov
mov
fcoms
pop
xchg
roll
pop
mov
das
lea
xchg
test
faddl
mov
cmpsl
out
and
mov
bound
cltd
adc
jae
fcoms
inc
xor
rep
sbb
push
mov
mov
imul
ljmp
test
pop
xor
and
aas
sbb
stos
jnp
push
sub
popa
push
aam
bsf
mov
sub
push
sub
pusha
mov
cmp
pop
mov
add
scas
and
les
outsb
les
jmp
jge
mov
in
subps
xchg
test
les
mov
scas
incb
cmp
cmp
xor
xor
adc
out
mov
outsl
hlt
cmpsl
aad
aas
push
ja
rol
sbb
outsl
cwtl
push
jno
js
or
lock
xchg
mov
lret
push
rolb
gs
sbb
jecxz
lock
mov
pop
sub
and
xor
mov
lods
cmp
cs
ljmp
scas
mov
add
mov
out
jmp
popf
dec
cmp
and
fldcw
dec
arpl
push
or
pop
dec
sbb
out
outsl
dec
jecxz
cmp
adc
arpl
xchg
arpl
mov
push
xor
cmp
std
sub
push
cmp
sbb
int3
adc
shlb
mov
outsb
xlat
test
nop
jo
fists
loop
add
xor
pusha
hlt
rep
dec
test
bnd
jno
int3
push
call
cmp
imul
mov
jle
jmp
out
mov
fistpll
movsb
into
outsl
nop
fidivl
cs
lds
lahf
xchg
adc
inc
inc
lods
dec
push
mov
sbb
out
mov
aam
test
push
and
cmpsb
js
pop
push
stc
hlt
cmp
dec
loope
imul
lcall
fcoml
out
bound
stc
adc
xchg
adc
mov
shll
mov
into
mov
leave
mulb
add
sub
cmp
push
push
movsl
aad
xor
xor
cmp
adc
push
mov
mov
hlt
inc
int
sbb
testl
data16
fcmovnb
jo
add
mov
sbbl
adc
les
in
or
push
xor
loop
shlb
add
push
inc
pushl
mov
fwait
cmp
jbe
rcr
andl
nop
std
cmp
xchg
adc
mov
jae
lahf
js
aaa
pop
stos
push
aad
ja
fisubrs
mov
outsl
push
stos
stos
cmp
cli
xchg
popf
icebp
lds
mov
cs
jo
or
cltd
leave
xchg
shl
test
stos
xchg
push
das
xor
xchg
fisubrl
cmp
lea
testb
test
insl
mov
xorb
jns
and
stc
test
js
mov
adc
sarl
aaa
cmpsl
ljmp
stos
lret
pop
mov
mov
ret
xor
inc
cltd
jae
icebp
imul
stos
icebp
int
rcl
insl
add
das
jb
call
mov
cmpsl
sub
lret
add
fwait
jmp
pop
jb
xchg
cmpsb
std
cld
mov
cwtl
js
dec
inc
in
dec
mov
bound
push
adc
sbbl
dec
fisubrs
les
js
sub
negb
mov
xchg
unpckhps
andb
inc
pop
adc
divb
adc
sahf
pop
stos
adc
cmp
push
std
lahf
loop
mov
cs
ljmp
orl
xchg
loope
fsubrl
cmp
and
rcll
push
ljmp
sarb
dec
dec
add
inc
mov
movsl
pop
cmpsb
push
filds
push
pop
ds
jmp
lods
jmp
sbb
insb
fwait
sbb
inc
inc
iret
in
ss
das
and
test
cwtl
cs
adc
add
loope
xlat
dec
cmp
pushf
das
addr16
bound
cltd
cmp
mov
mov
pop
ss
lock
je
inc
lds
add
cld
inc
pavgb
popa
cmp
mov
sbb
inc
movsl
pop
add
movb
cmpsl
push
test
mov
nop
jecxz
fsub
arpl
push
mov
or
dec
pop
mov
mov
xor
xchg
mov
jns
dec
enter
lea
mov
cli
push
fstl
lcall
enter
or
push
mov
adc
sahf
pop
sbb
inc
lahf
jl
dec
adc
loop
pop
shlb
ljmp
inc
pop
mov
out
pop
aaa
jl
in
push
data16
xchg
dec
xchg
sub
lods
ds
sub
mov
xor
jl
shl
dec
mov
cmp
adcl
ss
xor
bound
add
rcrl
pop
cmp
ret
or
cmpsb
sbb
sbb
sarb
mov
push
fwait
sahf
xor
fistpll
or
testl
push
stc
fs
js
out
xor
dec
mov
mov
dec
dec
sti
call
cwtl
enter
cs
xchg
sbb
scas
sbb
enter
filds
loope
add
pop
lock
fldcw
mov
movsb
push
gs
cwtl
in
dec
dec
lds
mov
and
push
popa
dec
push
pop
sbb
sbb
sub
insl
subl
loopne
add
mov
cmpb
cmpsb
jns
mov
add
lahf
xlat
pop
ret
outsl
jnp
inc
mov
dec
cmp
dec
xchg
sbb
mov
inc
xlat
out
call
fnstcw
out
movl
inc
shrb
cmp
aas
leave
mov
pop
sti
std
jbe
sub
ret
mov
pushf
ret
mov
mov
pushf
cltd
mov
fwait
or
sub
jmp
sbb
add
mov
or
cmc
push
dec
mov
ja
xchg
dec
aad
sbb
ds
ret
fs
sbb
movsb
mov
jg
xchg
xor
adc
pcmpeqd
jge
or
push
push
ret
jae
loop
ret
test
das
sub
imul
mov
testb
adc
test
dec
and
rolb
xchg
push
dec
mov
jl
push
cmp
jge
push
mov
in
mov
dec
adc
adc
dec
ds
and
mov
cmc
insb
mov
mov
adc
in
pop
cmp
adc
clc
inc
movsb
leave
and
mov
or
jns
inc
mov
push
movsl
rolb
push
pop
xlat
int
icebp
sti
hlt
xchg
xor
and
loopne
outsl
cs
pop
mov
cli
ret
sbb
lea
orl
jno
orb
dec
rcrb
dec
push
pop
add
stos
sarb
push
in
popl
cmpsb
loope
mov
push
xlat
jmp
fnstcw
mov
aaa
or
jbe
out
and
enter
add
xchg
sub
mov
insb
in
push
outsl
xchg
and
xchg
hlt
iret
jg
xchg
out
xchg
pop
test
lea
pop
add
pop
aam
aaa
cmpsl
sub
sahf
mov
mov
insb
inc
and
fstpl
jecxz
sbb
push
mov
xor
aas
mov
scas
xor
add
loope
dec
inc
subl
lds
xor
nop
dec
not
sub
and
test
mov
adc
cli
test
pop
out
fsubrs
mov
add
aam
hlt
sbb
movsb
rcl
fsubr
xor
mov
pop
or
fcoms
stos
mov
mov
mov
xlat
daa
xchg
xor
jmp
xorb
daa
mov
pop
xor
mov
clc
aam
mov
je
lahf
mov
xchg
insl
fwait
movsb
push
adc
jle
jge
mov
in
lahf
mov
rorl
cld
add
test
sbb
fs
cmpl
fildll
pop
imul
cmpsb
test
mov
mov
insl
pusha
cmp
das
sub
xchg
dec
cli
sub
add
insb
push
push
loope
jle
dec
mov
lret
jb
xorb
or
xor
dec
jecxz
bound
lcall
lds
inc
movsb
jno
les
outsl
jmp
inc
or
in
push
and
or
std
dec
xor
lods
jno
mov
pop
add
pop
ret
mov
test
cli
repz
mov
pushf
cmp
imul
rclb
jno
andnps
addl
jae
inc
and
rcll
outsl
test
aam
mov
adc
lcall
rorb
dec
cli
inc
mov
movsb
outsl
das
subl
xchg
sbb
cmpsl
icebp
insl
iret
and
jmp
xor
add
xchg
jnp
mov
mov
into
xor
mov
jle
stos
daa
pushf
lea
adc
xchg
or
repz
dec
in
fwait
insl
bound
lret
icebp
push
dec
xor
loope
cli
stos
mov
movsb
mov
push
mulb
lds
push
test
mov
dec
jns
mov
mov
mov
jno
mov
inc
dec
je
add
pop
mov
test
cld
addr16
enter
sbb
mov
clc
jle
scas
push
sub
push
inc
out
xchg
call
adc
es
and
sub
lret
fprem
lods
dec
xor
out
lea
insl
mov
call
lea
mov
mov
pop
sarb
lods
out
jmp
sub
and
ficoms
sub
call
dec
wrmsr
jne
jae
push
mov
and
loope
and
dec
arpl
les
in
std
jl
fsubrp
bound
bound
fmull
loope
cwtl
xchg
orl
mov
adc
mov
pop
sbb
cmp
mov
or
mov
aad
repz
xchg
mov
popf
or
popf
aad
adc
int
inc
stos
jnp
sbb
sbb
test
mov
notb
cmp
jp
and
xchg
dec
mov
jg
stc
mov
cld
adc
mov
mov
mov
mov
jno
je
iret
jl
pop
fdivs
jb
outsl
dec
es
xrelease
ret
leave
pop
mov
and
push
and
sti
std
sbb
in
push
es
push
or
jns
fnstenv
cmpsl
mov
add
movsw
add
test
js
fisubs
inc
sub
js
jae
pop
xchg
inc
cmpsl
or
jmp
scas
xor
je
push
out
cmp
cmp
lds
mov
mov
addr16
mov
adc
btc
sti
add
out
outsb
pop
sub
pop
jns
rcl
int3
ljmp
dec
mov
inc
cmp
fcoms
inc
jnp
aas
repz
das
hlt
std
pushf
in
jecxz
das
fcomi
add
fisubl
jbe
mov
icebp
mov
xchg
mov
es
fiadds
ret
xor
inc
cs
in
jno
popf
out
push
mov
stos
push
imul
adc
sbb
and
sbb
fisubrs
mov
mov
insl
and
jne
popa
cld
rcll
dec
mov
push
add
xor
sub
dec
mov
cmp
inc
mov
lods
push
inc
mov
pop
sbb
scas
pop
lods
jg
inc
stos
popa
cmpb
lods
hlt
jno
fadd
xorl
push
test
outsb
xlat
inc
cmpsb
sbbb
shl
xor
mov
jns
imul
lods
subl
pop
inc
cli
pushf
cld
or
nop
add
mov
dec
int3
std
leave
xor
sub
fisubl
mov
and
dec
push
ret
outsl
adc
out
and
cltd
pushf
inc
lcall
or
divb
test
aaa
or
xchg
fcmovb
mov
out
movsb
popf
xor
push
xchg
sbbb
rorb
inc
sarl
mov
jl
push
inc
jecxz
outsb
dec
sub
popa
xchg
adc
shll
je
jmp
into
in
jno
negl
xchg
ja
sub
test
adc
rol
mov
cmpsb
xor
sbb
loope
rorl
lret
pop
push
notl
sub
dec
lods
adc
roll
sti
sub
idivb
jo
aam
and
daa
cmpsl
arpl
jo
push
dec
fwait
jo
sti
ss
mov
inc
pause
movsb
dec
and
xchg
xchg
je
jecxz
mov
loop
rorb
call
inc
movsl
push
stos
repz
push
hlt
or
inc
popf
xor
add
loope
sbb
sbb
daa
mov
jnp
ljmp
mov
lahf
pop
cwtl
jle
das
in
adc
mov
ljmp
push
imul
push
pop
fldcw
fcmovb
xlat
out
sub
xor
mov
and
mov
lods
movsb
andb
lock
out
dec
xchg
and
mov
mov
add
das
sahf
xchg
sti
ljmp
outsl
es
xchg
ds
enter
sbb
out
test
lret
cmp
push
not
mov
movsl
lock
xor
push
push
cmp
clc
in
test
mov
int3
xor
dec
mov
pop
mov
xchg
data16
sub
js
daa
stc
adc
cld
push
mov
pop
mov
loopne
mov
lock
sub
arpl
and
jnp
sarl
std
scas
pop
mov
xchg
dec
or
mov
mov
push
xor
jge
in
inc
stc
sbb
push
js
divb
cli
lock
mov
sti
fadds
mov
and
lret
popa
mov
add
adc
enter
jbe
push
pop
cmp
xchg
inc
ret
lock
iret
add
push
xchg
sub
mov
rcl
cmp
shlb
pop
pop
stc
popa
fmulp
in
ffree
addb
ret
cmc
push
faddp
mov
shl
pop
vpaddusw
mov
fbld
pop
adc
fisttpl
xor
sub
or
xchg
mov
out
imul
xchg
cvtps2pi
xchg
je
mov
mov
sub
lock
push
gs
xor
pop
ja
sahf
mov
push
sub
outsl
jle
add
mov
std
sti
push
outsl
insl
data16
dec
es
popa
push
test
add
das
xor
push
gs
loop
divb
or
or
cmp
add
cld
mov
or
jno
dec
adc
push
adcl
std
cwtl
mov
add
adcb
push
enter
loop
bound
ror
add
jg
stos
pop
xor
or
dec
shrl
les
pop
repnz
iret
lahf
andl
push
dec
jl
aaa
push
sub
mov
in
mov
and
test
mov
rorl
dec
lods
and
mov
out
insb
lods
in
jmp
xchg
push
sti
sti
loopne
xor
cmp
out
xor
arpl
arpl
and
push
jmp
popa
jg
push
aaa
pushf
sbb
loope
and
inc
jb
mov
jecxz
xor
xor
outsb
lds
and
mov
fimuls
xchg
js
push
push
loope
ljmp
mov
pop
pop
lods
or
push
mov
pop
jns
sbb
stos
fdivr
inc
iret
sub
test
or
idivb
mov
jbe
in
push
adc
sbb
loopne
adc
pop
outsb
or
mov
mov
push
cmp
imul
add
or
sar
decb
cmpsl
push
xor
and
mov
cmpsb
pop
pushf
inc
ficoms
insl
inc
stos
pop
mov
movsl
push
inc
mov
in
imul
dec
fsubrl
or
aaa
sbb
aam
xlat
pop
push
dec
push
xchg
leave
sbb
sbb
ds
push
pop
cmp
xor
pop
repnz
add
pop
push
xor
sti
outsb
inc
mov
mov
push
adc
mov
outsb
sub
test
mov
add
dec
push
inc
cmc
lock
lock
fmuls
xchg
add
loope
pushf
push
and
xchg
dec
inc
pop
push
addr16
jg
lcall
mov
testb
and
lods
cld
sbb
dec
mov
jge
pop
sbb
fidivrs
jp
cmpsl
pop
hlt
fmull
ss
jp
in
jne
fwait
lret
movl
mov
mov
mov
push
jae
pushf
cmc
inc
sub
lcall
dec
mov
pop
xor
cmp
iret
and
sahf
jno
out
test
inc
jae
fcomp
adc
xor
adc
pop
mov
in
popf
imul
lods
xchg
ljmp
rclb
cs
inc
incl
cmp
sub
jnp
aaa
addb
repnz
mov
push
mov
inc
fistpl
mov
push
je
and
flds
xchg
inc
scas
or
imul
cs
sbb
mov
mov
push
pop
and
add
stc
adc
ljmp
lret
mov
aaa
sub
leave
mov
sbb
shl
mov
jmp
js
lea
cmp
fistpll
lds
sbb
cmc
sbb
sub
push
pusha
sbb
cmp
xlat
cmp
imul
ficomps
dec
dec
inc
xchg
push
adc
pop
gs
push
or
icebp
dec
int3
push
and
cmp
je
xchg
fs
jp
lds
cltd
push
sub
pop
xor
js
jmp
sub
sub
mov
jecxz
insl
movsb
int3
fstl
daa
fldl
mov
mov
in
cmovo
dec
loope
cmp
fcomp
jae
or
aas
push
jecxz
lcall
in
lahf
or
cmp
sbbb
mov
cmc
adc
pop
jno
dec
jge
out
mov
ss
inc
or
dec
and
stos
std
adc
loopne
jmp
mul
mov
mov
jmp
xchg
insl
add
ret
add
repnz
xlat
shlb
aam
mov
ja
or
inc
inc
xchg
mov
dec
push
sub
push
stc
fwait
push
adc
fadd
out
sbb
addr16
adc
adc
cld
adc
lahf
push
add
jb
or
test
xor
jae
dec
scas
repz
pop
pop
xchg
stc
imul
fwait
sahf
jecxz
repz
pop
mov
lret
sub
xchg
roll
xchg
cmpsl
ror
jle
xchg
fcomps
arpl
ret
and
cmc
into
test
sub
adc
inc
or
cmpsl
cmp
and
xor
outsl
push
mov
incl
xor
xchg
sub
lahf
jmp
xchg
popa
lret
scas
les
xchg
lret
fmull
test
and
loope,pt
cld
pop
imul
dec
or
xchg
out
je
outsl
je
fwait
out
popf
insb
push
aad
push
lcall
jge
fdivs
shll
sub
mov
gs
out
sbbl
jb
jmp
cwtl
arpl
insl
mov
jae
adc
xchg
and
jle
out
mov
xchg
sub
shrl
adc
sbb
lods
and
adc
insb
add
sub
leave
cwtl
xchg
jp
es
add
lret
divl
lods
in
push
lods
aas
test
pop
jne
or
cmpsb
in
lods
pop
cmp
inc
ds
adc
outsl
pop
nop
out
or
insb
or
bound
fildl
xor
in
push
std
sahf
movsb
test
cs
ljmp
or
je
sti
movsb
daa
shll
dec
shrb
repnz
loopne
shll
std
lods
test
aam
dec
cltd
mov
jbe
xchg
scas
loope
sub
jne
push
ja
xchg
push
lret
mov
cmp
hlt
cmpsb
cmp
je
dec
out
bound
lret
push
add
pop
cltd
cmp
lahf
les
leave
loopne
sub
outsl
sbb
push
lahf
xor
mov
fisttps
adc
decl
pop
sbb
movsb
mov
data16
cld
mov
push
cmp
iret
adc
xor
pop
neg
mov
out
and
loopne
iret
pop
ss
mov
ja
clc
dec
stos
cld
enter
dec
mov
notl
sub
jg
push
pop
das
cli
jne
sbb
fwait
test
mov
jns
adc
mov
add
cmp
xor
mov
mov
mov
cmpsl
int
loop
sti
cli
dec
sbb
sbb
aas
gs
pop
and
mov
mov
js
pop
jmp
push
pop
sbb
jecxz
push
xor
xchg
push
subb
and
cmpsb
pop
inc
jge
je
xchg
sti
out
aas
push
mov
push
xor
stos
sti
push
push
xor
ret
mov
pop
push
dec
and
int3
jb
out
sbb
add
imul
jae
mov
je
inc
jb
mov
sbb
cli
ljmp
sti
std
pop
push
xlat
sub
fadds
mov
in
mov
jnp
aam
xor
push
and
es
sbb
jnp
lods
adc
inc
movsl
jbe
aam
add
xchg
mov
jno
sbb
cmp
les
sub
xlat
into
insl
fdivrl
cmp
shlb
adc
xlat
and
fstps
and
lahf
in
out
jg
roll
sub
sbb
and
jle
out
call
push
into
mov
nop
cs
fdiv
inc
js
push
dec
push
xchg
jmp
movsl
push
jae
inc
repnz
jo
mov
cmc
jg
push
adc
or
dec
push
movsl
xchg
dec
insl
mov
lods
mov
adc
mov
jno
aad
cmp
xchg
dec
cltd
pop
and
shlb
subb
orb
adc
outsl
sub
mov
lods
fs
jg
mov
pop
mov
into
mov
repz
sbb
push
jae
push
and
or
fcmovnbe
jge
dec
and
jb
sbb
in
adc
movsb
pop
xlat
ja
pop
les
fildl
pop
pop
xchg
shl
out
je
imul
xchg
cmpsl
les
ret
pop
testl
test
shlb
gs
dec
xor
xchg
fs
scas
sarb
out
pop
ret
xchg
in
fisubl
push
mov
mov
jae
pop
mov
insl
xlat
ror
cmp
add
arpl
jge
add
xor
daa
das
jne
inc
dec
dec
mov
sub
mov
inc
mov
pop
adc
xor
fwait
lret
mov
push
arpl
out
sub
in
loope
adc
mov
add
inc
ss
inc
xchg
add
out
iret
addr16
jge
out
pop
repnz
jnp
mov
inc
aas
xchg
xchg
ja
fwait
rclb
into
outsl
dec
sbb
sbb
mov
popa
fmuls
pusha
push
push
repnz
scas
adc
shrb
push
push
call
scas
xchg
mulb
pop
je
std
or
pop
shr
push
push
inc
int3
ret
adc
add
sti
inc
dec
xchg
movsl
neg
ljmp
pushf
or
fstp
jb
pushf
mov
insl
pop
pop
scas
jg
jnp
lcall
cmp
mov
imul
push
and
nop
pop
xchg
push
cwtl
jg
out
cmpsl
cltd
mov
imul
inc
in
lods
loope
pop
fldenv
pop
xchg
cmp
data16
data16
mov
out
in
cmpl
repz
shrb
pop
das
lods
pusha
jge
xchg
sub
test
cmp
bnd
negl
lahf
dec
add
bound
jbe
aad
jp
xchg
cmpsb
cmp
iret
nop
mov
imul
cld
sahf
xor
inc
mov
mov
cld
adc
cltd
and
sub
cld
mov
inc
add
adcl
ror
leave
push
dec
test
insl
or
cs
cmc
push
lret
xchg
lahf
ret
rorb
inc
dec
dec
mov
adc
lea
dec
ds
xor
ror
lret
pushf
fstl
jl
sbb
out
ficoml
sbbb
test
pop
stos
aam
repz
addr16
dec
sub
movups
or
stc
xor
repnz
inc
stos
movsb
icebp
lret
pop
xchg
mov
ret
xor
cmp
push
sub
lods
adc
adc
pop
inc
inc
ljmp
aad
daa
cmp
and
dec
mov
mov
mov
pcmpeqb
sbb
stos
scas
jmp
dec
mov
loop
sahf
xchg
faddl
mov
test
addr16
adc
lretw
ds
sub
stos
sti
mov
sbb
mov
and
cmp
inc
pop
out
std
shrl
adc
std
clc
sub
inc
in
cmp
rcrb
mov
iret
push
jle
cld
adc
add
imul
ffree
xor
cmp
mov
sbb
pop
test
mov
inc
mov
lods
lea
fcomip
aad
shlb
inc
dec
add
out
or
mov
aad
jmp
jns
mov
xchg
pusha
mov
and
cmp
js
mov
add
call
filds
mov
es
insb
push
mov
stos
adc
mov
ret
inc
pop
cmp
xor
dec
sbb
xchg
cmp
cmp
pop
out
test
std
iret
adc
lcall
stc
xor
stos
push
xor
fdivrp
stos
inc
fsubr
clc
or
movsbl
cmpsb
imul
sbb
lcall
insl
sbb
add
fs
loopne
mov
pop
add
sub
sahf
scas
sub
xchg
movsl
jno
or
test
rcrb
xor
push
mov
mov
fisttpll
movsb
cld
cltd
into
xchg
sbb
mov
mov
je
sub
jbe
jmp
fildl
pop
sbb
es
rclb
subl
mov
out
shlb
xor
imul
sarb
add
dec
sbb
popa
bound
push
dec
dec
testl
xlat
cmp
mov
sbb
data16
mov
shll
sub
and
sub
mov
cmc
fidivl
dec
mov
stc
adc
pop
sti
int3
fiaddl
pop
inc
sub
adc
out
test
repz
mov
shl
or
push
ss
leave
sbb
jne
add
mov
cs
mov
call
repz
lcall
pop
inc
icebp
xchg
xchg
mov
sbbb
ds
call
or
jle
inc
loopne
sarb
sbb
inc
les
mov
aam
pop
or
in
stc
mov
mov
and
iret
xchg
lcall
mov
pop
xchg
sub
add
popa
add
fcoml
jne
xchg
xchg
in
loope
jns
xor
ret
mov
js
dec
jl
xchg
scas
test
mov
fistps
rclb
clc
mov
movsl
mov
xchg
dec
pusha
xchg
push
stos
cmc
in
xor
sub
not
inc
cwtl
mov
jo
xchg
mov
sbb
dec
jnp
xchg
fadd
sub
jmp
in
fcom
sarb
jae
mov
and
lahf
push
or
mov
push
pop
imul
test
dec
hlt
adc
mov
imul
loop
inc
push
inc
lods
and
push
out
add
enter
mov
push
dec
in
pop
sbb
movsl
mov
and
push
fldcw
stos
inc
into
pop
js,pn
dec
inc
dec
in
inc
or
push
data16
pop
cltd
lahf
lea
jecxz
mov
adc
xchg
or
scas
out
in
push
inc
jne
mov
les
stos
cmpl
popa
push
push
pop
xchg
jmp
or
int3
popf
rcrb
cmp
adc
inc
inc
push
and
mov
inc
or
push
pop
and
and
adc
in
inc
push
fs
je
cmp
test
mov
rcrl
icebp
or
lahf
fistps
inc
mov
cmc
push
int
test
sahf
adc
stos
mov
adc
mov
dec
sub
and
jmp
jnp
ljmp
inc
jne
mov
data16
dec
adc
movl
jne
pusha
xchg
hlt
jp
lods
cmpsl
repz
fiaddl
jle
out
mov
rorb
sbb
dec
sub
push
xchg
cmpsl
sarl
dec
mov
aas
push
popf
ja
xchg
jge
pop
sti
jbe
cmpsl
add
inc
scas
sbb
andb
stc
mov
jbe
mov
fistpl
jne
mov
test
mov
and
outsl
xlat
adc
jg
jbe
add
jno
add
mov
popa
jg
in
push
call
out
fwait
outsl
add
lahf
mov
pop
pushf
jmp
ds
arpl
jne
mov
push
addr16
scas
dec
sbb
sub
mov
popa
adc
pop
inc
int3
frstor
insl
sahf
imul
push
int3
cmpsl
data16
roll
mov
notb
mov
hlt
and
scas
cmc
pop
popa
testl
imul
jne
dec
sbb
jo
inc
sti
nop
cmp
dec
mov
test
imul
push
jmp
inc
pop
xlat
push
ficompl
inc
xchg
mov
popf
mov
push
push
sub
pop
fistl
mov
sub
xchg
and
cwtl
mov
lret
aas
or
cmc
insl
fiadds
dec
jns
pop
imul
outsb
jne
push
jae
cltd
sbb
inc
aaa
inc
insb
push
and
fs
mov
push
pop
cmp
adc
ror
xor
js
cmpsb
xor
adc
outsl
xchg
sarl
popf
cld
in
loopne
and
in
pop
inc
es
lock
xor
jge
int3
addb
add
pop
lret
lock
iret
movsl
insb
shlb
test
stos
jb
inc
jmp
sbb
sbb
not
cmpsl
pop
movsl
mov
in
mov
jmp
aad
xchg
lcall
jecxz
ljmp
call
cmp
mov
xorl
pushf
dec
cmp
divl
inc
pop
cmp
mov
cmpl
movsl
lret
lods
cli
scas
and
or
xchg
xor
cwtl
add
push
pop
lahf
inc
xor
sbb
aas
dec
call
jecxz
rorb
test
enter
nop
jne
lret
adc
das
fistpl
cmp
lahf
fnstenv
or
subb
push
cmpsl
sub
nop
or
popf
orl
adc
clc
ja
add
inc
nop
or
icebp
push
lods
jl
ret
pop
pop
fisubs
test
and
lcall
add
mov
out
mov
mov
xchg
outsl
lods
push
mov
out
jbe
popf
adc
mov
mov
cmp
push
lret
push
cs
cltd
sbb
fidivrl
and
pop
pop
out
and
dec
sub
inc
mov
and
cmp
mov
sbb
jecxz
jbe
add
icebp
sahf
in
insl
mov
js
xchg
in
dec
push
popa
push
inc
popl
scas
cmp
adc
enter
mov
ss
iret
sub
imul
xor
repnz
js
in
cmpsl
or
mov
or
fs
movsb
sub
add
inc
hlt
mov
sub
lret
mov
push
clc
dec
ljmp
pop
mov
sbb
rorl
iret
inc
inc
push
pop
shrb
inc
pop
mov
fs
or
ret
cmp
ljmp
insl
mov
mov
or
fs
sbb
push
xchg
inc
test
inc
aaa
ret
pop
popf
add
mov
fwait
jg
push
scas
sbb
push
call
int
mov
cmp
and
imul
mov
inc
pop
sbb
and
pop
daa
mov
pusha
ljmp
in
int3
sbb
arpl
push
xchg
nop
movsl
ret
dec
iret
inc
push
imulb
das
and
push
ret
fs
jb
mov
xchg
push
inc
sbb
sub
int3
add
movsb
stc
lea
fnstenv
lea
sbb
int
hlt
sbb
nop
scas
or
push
into
xor
add
push
mov
fbstp
mov
idiv
cmc
fisttpl
xchg
mov
outsl
shll
cmp
nop
sub
cmp
cwtl
and
pusha
psrld
stos
mov
cs
ret
add
jbe
or
popa
repnz
leave
nop
dec
in
fbld
loopne
out
sbb
aam
loopne
inc
xor
cmp
out
sarl
add
and
cld
add
xor
xchg
clc
lcall
gs
fsubr
sbb
gs
xchg
mov
int
inc
scas
mov
xchg
inc
ljmp
rcll
push
adc
clc
cwtl
dec
fbld
loopne
push
fwait
add
pop
imul
jle
push
icebp
rcl
sahf
lods
pushf
pop
mov
cs
sbb
push
jbe
pusha
push
xchg
push
addb
jns
mov
cmc
inc
stos
or
out
icebp
xlat
sub
jnp
pop
or
cmp
scas
lods
lods
ret
icebp
add
fwait
add
sbb
vcomiss
lods
dec
mov
lea
mov
mov
xor
jne
and
and
loop
mov
clc
icebp
jo
xchg
mov
leave
bound
imul
xchg
cmp
cmp
js
jo
pop
in
bswap
testl
lods
loop
gs
and
and
fldcw
push
jmp
sbb
fidivrs
lods
pushf
cmc
mov
test
add
xchg
fldl
das
cmp
cmovge
pop
dec
cmpb
mov
xor
or
mov
movsl
dec
aas
xchg
jle
in
int
test
rcrl
dec
add
lcall
mov
nop
or
movsl
fs
scas
data16
rol
mov
push
sahf
int
das
in
push
insb
mov
adc
shld
pop
pop
mov
mov
cmp
in
jae
popf
icebp
lcall
xorb
sldt
fprem
pop
mov
jbe
push
xor
ret
jle
pop
adc
fs
int
aas
pop
pop
leave
and
jmp
adc
fidivl
data16
xchg
mov
rolb
sete
add
pushf
lds
enter
je
mov
pop
js
aas
mov
js
adc
dec
or
mov
movsb
mov
stos
stc
jne
adc
jno,pt
push
das
mov
stos
cld
mov
xlat
jmp
sbb
pop
movsl
add
cltd
xchg
int3
ljmp
dec
aas
sbb
mov
and
mov
adc
xor
add
dec
fcmove
shr
lods
outsb
jno
cmpsl
gs
mov
ljmp
dec
shll
fnstsw
pushf
xor
jp
clc
addb
inc
rclb
jnp
xchg
gs
lods
adc
push
cmp
ljmp
xor
dec
and
cld
sahf
leave
orl
xor
pop
mov
mov
mov
jo
popa
aam
jno
rcl
xor
sti
fwait
xor
mov
nop
jge
mov
push
subl
and
outsb
jno
sbb
cmp
sti
sbbb
pop
xchg
int3
movb
or
sbb
mov
mov
mov
sahf
inc
sub
lret
or
jae
aam
mov
xchg
daa
adc
mov
or
dec
push
jle
sub
sar
push
jmp
fs
mov
filds
testl
or
bound
pop
xchg
mov
dec
mov
int3
mov
jg
popa
pop
int3
aaa
push
jne
insl
push
gs
loopne
bound
jl
packuswb
sbb
push
ret
ja
repz
aas
aas
stos
repz
inc
mov
rolb
fists
jge
cli
or
pop
subb
dec
imull
dec
push
lret
sub
in
dec
jmp
leave
mov
inc
fs
mov
cli
mov
int3
mov
insb
xor
mov
jle
mov
mov
fstps
dec
pop
and
xchg
repnz
in
mov
das
loopne
mov
mov
outsb
cmp
aaa
pop
cmp
xlat
mov
xor
jo
loopne
cs
cmp
add
jge
testl
adc
stc
mov
cmpsl
pop
sti
xchg
in
loope
mov
or
sbb
fsubrs
mov
iret
sar
orb
div
xchg
jge
dec
mov
pop
mov
sub
or
xor
xchg
inc
mov
push
mov
sub
dec
cs
pop
lock
pusha
ficomps
sbb
les
iret
and
mov
sti
pop
pop
in
mov
es
push
push
sbb
nop
sub
pop
and
lock
adc
movsb
dec
rorl
jae
ja
fbstp
mov
jae
out
or
or
xchg
movl
push
xor
mov
xchg
hlt
in
add
sar
inc
pop
pop
mov
mov
jnp
sbb
stos
xlat
iret
add
mov
roll
mov
jbe
push
dec
aas
adc
aaa
sahf
sub
add
dec
jge
inc
xchg
stos
mov
adc
leave
jle
inc
push
cmc
jns
push
les
scas
inc
sar
or
cs
dec
pop
inc
push
fnstsw
ds
inc
mov
filds
xor
mov
ret
and
xor
mov
lods
stos
call
xor
das
outsl
xchg
mov
push
sub
les
dec
decl
ja
bound
sbb
cmp
rcr
xchg
mov
scas
imul
leave
inc
xchg
nop
cmp
add
inc
int
inc
popa
jno
aaa
mov
dec
mov
xchg
push
fcomps
push
mov
cwtl
jbe
insb
cmp
repz
insb
xchg
lcall
cs
sti
loopne
js
jnp
xor
mov
mov
fisttps
xchg
mov
into
outsb
out
mov
dec
add
add
repnz
fnsave
test
mov
rcr
mov
movsl
cs
aad
and
movsl
jl
repz
xor
inc
jb
mov
in
into
iret
mov
popa
movsl
fwait
icebp
jno
stc
nop
in
insb
movsb
cmpsl
fmuls
push
fwait
xchg
cmp
xor
push
popf
loopne
movsl
out
rorb
cmpxchg
in
sub
repz
pop
pop
jmp
xor
mov
insw
cmp
inc
xchg
dec
cli
sub
loopne
aam
push
into
push
pop
xchg
adc
inc
ret
fdivrs
adc
loope
push
fldl
gs
nop
mov
dec
xor
sahf
fldcw
pop
xor
icebp
out
jb
fmull
adc
out
push
shrl
ds
add
bound
jb
outsl
push
repnz
pop
cltd
xor
sub
cmpsb
push
ret
jbe
dec
push
cltd
movl
scas
mov
push
stc
nop
pop
inc
sti
ljmp
jbe
aaa
mov
outsb
out
aaa
inc
mov
popa
imulb
jns
aaa
sbb
stos
mov
cmp
pushf
mov
hlt
push
push
ss
sbb
sbb
js
inc
inc
stos
call
shl
or
inc
lods
pop
rdpmc
cmpl
bound
stc
repnz
test
cmc
fmuls
mov
repz
or
xor
inc
mov
std
in
cwtl
fmul
mov
mov
xchg
inc
sti
pusha
sub
jl
repz
mov
ds
mov
mov
inc
adc
sub
mov
aaa
mov
jle
test
cmp
cld
fdivrs
inc
cmpsb
cwtl
or
mov
shll
mov
mov
lock
lods
in
rclb
xchg
adc
sub
outsb
fdivs
rcrl
and
cmp
not
imul
xchg
inc
cmpsl
xchg
popa
out
xchg
push
daa
js
jne
movsb
mov
out
push
cld
outsb
xchg
andl
stc
mov
std
xchg
push
add
popf
test
out
push
push
sbb
pop
jne
jmp
pop
add
or
xor
rorb
lea
pop
or
mov
in
arpl
or
xchg
inc
mov
cmp
stos
jne
mov
jns
aaa
mov
pop
popa
mov
cmp
aad
push
cmp
enter
repz
xchg
sbb
das
push
out
xor
movb
jmp
lcall
es
lds
cmpsb
popf
pop
mov
add
test
sbb
addr16
mov
lea
push
fsubl
xor
out
xchg
cmpsb
outsb
mov
sbb
cli
stc
mov
jnp
popa
fsubrl
mov
andl
push
clc
out
repnz
lret
mov
xor
xor
jl
stos
inc
adc
mov
ljmp
inc
outsl
out
xchg
push
jno
push
shrb
scas
dec
push
push
notb
adc
add
imulb
lds
or
or
ret
jecxz
sub
or
mov
xchg
fwait
stos
dec
pusha
outsb
mov
dec
jae
xor
xlat
aam
int
icebp
fdivrl
fisubrs
dec
in
pop
or
sbb
mov
jno
nop
sub
lods
imul
stc
mov
leave
dec
or
lret
xchg
jmp
xor
aaa
dec
dec
and
push
mov
roll
mov
loop
leave
sarb
mov
mov
insl
or
push
shll
push
and
adc
jmp
jne
insl
cmpb
dec
sub
into
mov
push
lret
ljmp
loop
out
nop
push
jp
cltd
xor
mov
cld
push
mov
out
push
xchg
push
fistps
lock
test
mov
pusha
pop
jbe
or
in
mov
sub
out
cmc
orl
shlb
cmp
sub
xchg
mov
inc
xchg
or
jle
or
mov
leave
mov
mov
ss
xchg
int
outsb
test
pusha
imul
ficoml
into
pop
icebp
nop
add
lock
jle
jne
mov
lea
stos
cmpsb
mov
inc
test
cwtl
incl
jb
mov
test
loop
sar
cmpsb
xchg
int3
ficoms
jno
addr16
mov
xor
dec
push
cmp
test
add
jbe
add
jge
loop
std
jns
loop
xor
imul
xlat
test
mov
hlt
sub
nop
test
pusha
fmuls
jmp
repz
xlat
addr16
xor
cwtl
or
pop
dec
xor
pop
shll
push
xchg
loopne
leave
mov
inc
pop
cmp
mov
je
imulb
ja
adc
lods
xor
ret
mov
popf
sbb
stos
cmpsl
inc
jge
call
fidivs
ficoml
popf
sbbb
clc
mov
sub
es
ss
mov
and
in
adc
lahf
aaa
cmpsl
popf
rep
mov
shrb
and
movsb
xor
jne
xchg
mov
repnz
push
adc
outsl
and
repz
ljmp
cmp
decb
stc
or
hlt
xchg
jne
cmp
out
cmp
jp
fbld
adcl
insl
dec
fisttpl
test
cmp
fidivs
jbe
jmp
dec
xchg
into
xchg
fcmovnb
mov
loopne
popa
mov
scas
xchg
jle
sub
cs
and
xlat
cmp
add
les
addr16
mov
sub
or
sbb
test
stc
adc
mov
sbb
pop
xchg
mov
sbb
out
inc
mov
and
js
or
or
aad
stos
mov
popa
fldl
sbb
push
int3
outsb
test
lret
cmp
jg
or
adc
pop
cmpsb
loop
aam
mov
setle
adc
jg
imul
push
out
leave
iret
xchg
cwtl
or
dec
clc
cmp
cmp
jmp
jo
mov
mov
lahf
dec
mov
clc
and
popf
xlat
sbb
pop
test
or
dec
stos
and
jl
jmp
add
addl
mov
or
rcl
xor
dec
aas
inc
or
push
out
push
jp
mov
addb
test
or
pop
sbb
popf
push
push
cmp
sub
xor
sub
mov
jecxz
xchg
scas
sbb
lds
test
add
xchg
xchg
mov
xchg
clc
mov
push
ljmp
jo
mov
mov
sbb
fs
xchg
dec
bound
add
and
xlat
adc
fisubl
hlt
sub
mov
xlat
adc
jp
xorl
movsb
jg
dec
rep
mov
in
ret
out
mov
pop
loop
xchg
push
add
pop
sarl
subb
lods
in
mov
sahf
mov
lea
std
scas
jecxz
shrb
push
leave
cltd
in
pop
mov
ret
dec
mov
jecxz
loopne
cmp
cld
jg
jne
sbb
sti
sub
sbbl
pop
push
push
push
out
push
mov
jbe
in
xchg
mov
test
mov
test
idivl
js
int
xchg
xchg
xchg
gs
or
xlat
sub
jecxz
arpl
ret
inc
int
cs
stos
mov
sbb
xlat
icebp
jne
loop
jecxz
pop
lea
insl
lock
roll
fwait
lahf
pop
jns
inc
push
and
and
pop
xor
push
mov
pop
ret
adc
and
bsr
lret
xlat
call
das
cmp
ret
push
inc
jb
pusha
pop
jge
lock
call
mov
lods
adc
xor
mov
icebp
push
cwtl
jle
mov
cmp
rclb
dec
mov
sbb
ret
test
std
fdiv
stc
adc
insl
mov
jnp
cmp
loop
arpl
mov
sahf
dec
fcoml
mov
push
adc
daa
cwtl
inc
lcall
inc
sbb
imulb
or
mov
or
pop
cmpsl
stos
lret
lds
push
xchg
cs
lcallw
push
stos
fdivrs
add
popa
jnp
xor
mov
lret
jns
dec
inc
push
cmp
pop
mov
lods
cld
cmp
mov
gs
xor
add
xchg
movsl
mov
addr16
push
cli
fistl
jnp
mov
js
mov
dec
mov
stos
repz
xor
imul
pop
cs
frstor
in
mov
and
push
das
repnz
inc
jne
adc
push
mov
mov
pop
pusha
inc
sub
sub
pop
out
xchg
mov
roll
fwait
popa
aaa
cmp
mov
sub
ds
mov
or
xchg
mov
inc
das
sub
fsubs
cmp
lcall
xchg
test
movsb
jmp
and
jae
and
mov
lcall
pop
sbb
xor
pop
int
mov
movsl
adc
mov
mov
scas
lret
aas
xor
into
inc
or
dec
mov
idivb
add
leave
add
inc
imul
sbb
leave
push
mov
mov
xor
into
and
addl
dec
cmc
pushf
jno
mov
ds
inc
mul
add
or
inc
orl
clc
cli
repnz
push
imul
out
rcrl
out
mov
sub
jae
push
insl
xchg
outsb
mov
mulb
push
jns
std
xchg
stos
xchg
imulb
push
xor
out
jo
add
add
enter
xor
arpl
xchg
insb
sub
test
outsb
sub
mov
lret
dec
or
in
lea
mov
call
add
mov
repz
ss
and
mov
dec
das
xchg
mov
aas
inc
or
push
xor
sub
push
adc
or
negl
cmp
data16
out
out
test
lods
mov
idivb
mov
in
xchg
cli
mov
push
stos
add
dec
sbb
jnp
test
negb
push
push
gs
or
test
sub
lods
jnp
adc
popa
dec
or
mov
in
dec
and
pop
ficompl
jg
sub
loop
mov
scas
or
ja
cmpsl
test
mov
adc
lock
adc
lcall
inc
repnz
loop
inc
mov
pop
xorl
cwtl
subb
xorb
js
movsb
mov
into
js
repnz
sbb
sub
cmc
call
hlt
lods
xchg
arpl
ret
xor
icebp
xchg
inc
dec
faddl
sub
sub
mov
jae
in
add
mov
in
sbb
inc
mov
arpl
pop
jno
sbbl
cmpsb
dec
fcoml
cmp
add
mov
ja
pop
push
dec
rcl
clc
jmp
lds
jnp
and
popa
cld
sti
cmp
in
fwait
incb
repz
push
sarb
sarb
pop
in
mov
sbb
or
pop
enter
test
push
mov
mov
inc
push
lods
mov
lahf
stos
mov
iret
add
daa
lea
pop
gs
dec
mov
xor
fidivl
push
xor
js
jb
mov
mov
repz
dec
into
and
mov
lret
mov
pop
dec
cli
inc
xlat
mov
mov
mov
jmp
adc
clc
fildll
pop
jo
mov
inc
in
popa
icebp
ret
fists
inc
fidivl
cmpsl
add
or
sahf
rorl
jae
cld
loopne
and
mov
lahf
iret
xchg
push
pop
or
orl
mov
fwait
inc
mov
push
mov
mov
jae
cmp
int3
push
cs
arpl
lods
sub
cmp
xchg
incl
pop
test
pusha
popa
xchg
imul
outsb
test
repz
aaa
int3
test
xor
sahf
outsb
jmp
and
add
in
push
sub
repz
xchg
lret
icebp
iret
xor
xor
clc
daa
push
loop
fdivs
outsl
cmp
lahf
lea
les
jle
cmpsl
aaa
stos
dec
inc
cltd
pop
aaa
loope
repnz
mov
out
out
lock
sub
cmpsl
and
bound
stos
xchg
enter
and
das
imul
das
xor
add
into
mov
add
jae
data16
jnp
push
add
or
cld
mov
das
sub
test
dec
mov
mov
and
push
push
cmp
cmp
cmp
mov
imul
scas
cmp
notb
jge
cmp
lea
lock
sbb
test
leave
xchg
push
stos
or
sbb
jle
jns
lods
push
out
dec
mov
stc
jbe
or
inc
sbb
arpl
movnti
je
and
mov
aad
push
jno
mov
adc
cli
mov
outsb
inc
fwait
loop
mov
aad
addb
pop
lea
ljmp
repz
stos
pop
cmp
aad
icebp
test
jp
mov
jle
inc
xor
and
inc
lods
mov
inc
in
pop
addb
inc
scas
sub
push
lret
fxch
xor
addr16
dec
enter
jno
sub
adc
pop
cmpl
add
gs
push
inc
push
int3
pop
adc
jne
pop
jae
inc
cmp
test
mov
gs
mov
mov
bound
shl
add
rcrl
movb
dec
scas
pushf
adc
iret
pop
jmp
repz
pop
outsl
loope
lcall
xchg
and
inc
cs
jne
xor
and
dec
testb
mov
repnz
cmp
clc
sbb
dec
push
jnp
xor
adcl
push
aaa
push
in
sbb
arpl
sbb
test
mov
sbb
xchg
mov
sub
push
mov
mov
divb
jp
mov
mov
lock
test
mov
pop
mov
lock
loope
xchg
pop
arpl
mov
dec
ja
add
cmpsb
scas
cmc
fildll
repz
jge
jp
popf
xchg
sahf
or
xchg
jmp
xor
mov
cli
sbb
js
movsb
cmpsl
iret
outsl
fmull
dec
out
popa
sbb
ret
lds
aas
mov
and
cmc
sbb
jg
fcompl
cli
shrb
or
sbb
mov
sub
out
aas
imul
addr16
iret
clc
adc
movsl
lahf
nop
dec
mov
xchg
sub
add
push
sbb
pop
jno
xor
sub
aaa
in
sbb
mov
jge
mov
leave
jl
or
or
add
loopne
push
jp
inc
dec
jle
mov
mov
pop
pushf
les
lock
and
ds
mov
push
cwtl
xchg
mov
mov
mov
jno
orb
hlt
in
addr16
mov
lods
mov
rol
sbb
ss
push
gs
das
lock
push
xor
lret
stc
out
das
sbbb
ds
jno
arpl
sbbl
sbb
mov
movsl
addr16
fs
push
mov
shll
mov
js
popa
jmp
add
xchg
xchg
loop
sbb
pushf
sub
add
mov
xchg
out
pop
dec
out
mov
es
movsb
jp
loopne
out
cmp
and
mov
xor
push
jl
xor
lock
pop
gs
fcmovnu
pushf
mov
rolb
call
sub
cld
inc
movsl
mov
test
and
rolb
cmp
pop
xlat
outsl
call
imul
jmp
adc
xchg
pop
shr
aas
inc
mov
subl
jmp
fnstenv
std
pop
push
or
push
out
and
push
inc
sbb
sub
je
cltd
fidivl
or
mov
stos
shl
push
clc
push
lods
rcl
xchg
loope
lcall
aam
lods
in
xlat
mov
cwtl
ret
inc
push
cmpsl
xchg
inc
mov
jae
jo
aaa
fldcw
imul
xchg
or
mov
mov
jge
mov
or
sbb
pop
jns
xchg
clc
inc
xor
loope
mov
xor
nop
out
rol
shrb
jcxz
fdiv
inc
sub
daa
into
push
jne
cmp
add
add
testl
inc
loope
icebp
sbb
mov
and
adc
daa
mov
data16
dec
movsl
test
rorl
mov
mov
stos
ret
xor
mov
cmpsl
adc
mov
test
loope
jmp
sub
inc
push
mov
jge
mov
jp
lret
pop
jbe
add
inc
xchg
insl
sbb
dec
insb
jmp
jge
adc
das
std
sub
pop
push
in
pusha
lahf
out
cld
popf
jne
and
jne
arpl
xchg
outsl
mov
mov
and
mov
xchg
xorb
ret
jae
mov
scas
adc
jg
cld
jo
leave
adc
out
jbe
xchg
cmp
loop
imul
stc
and
mov
jo
xchg
js
in
rolb
add
mov
sbb
xchg
mov
mov
xor
inc
jnp
push
test
popa
lret
cmp
clc
mov
sub
stos
insb
call
leave
mov
dec
sti
lea
inc
loope
inc
pop
jae
nop
dec
jg
not
pushf
outsl
add
int
jg
xor
ror
add
fsubs
roll
xchg
lds
xchg
lods
int
sti
jns
loopne
jae
mov
cwtl
mov
and
call
dec
sti
in
mov
xor
dec
cmp
inc
mov
insb
and
cmp
icebp
popf
push
std
inc
insl
add
imul
and
or
or
jg
out
inc
pop
mov
rcl
push
icebp
cmpsl
repz
add
pop
cmp
and
lea
inc
mov
xchg
push
dec
negl
ss
div
inc
cmc
fisttps
dec
mov
pop
and
mov
jb
repnz
mov
pop
dec
fildl
jnp
mov
add
aad
jnp,pt
sti
movsb
mull
or
mov
add
and
int
fiadds
mov
in
mov
push
mov
mov
or
pop
jbe
push
aad
clc
push
mov
mov
scas
loope
and
inc
xor
cmp
xchg
add
dec
dec
xchg
shll
fwait
lock
mov
mull
pop
and
outsl
push
push
aaa
jns
insb
mov
mov
mov
sub
ss
movsb
into
imul
inc
addl
or
pop
scas
cs
or
pop
inc
sar
xor
call
sub
testl
pop
inc
daa
mov
scas
shrb
fistpll
aas
inc
mov
sub
jecxz
lcall
popf
fnstsw
pop
push
bswap
loopew
movsb
outsl
fstp
scas
cmpsl
loop
jg
mov
lahf
fwait
pop
fnstenv
insl
sbb
shrl
xchg
fistl
cld
cmc
mov
dec
fstpl
xor
lret
add
sbb
lock
outsl
jo
sbb
sbb
cmc
inc
in
xlat
adc
mov
addl
xchg
scas
and
mov
pushf
imul
pop
mov
jbe
subb
js
push
les
cmc
stc
mov
inc
xchg
jae
mov
sub
fcomp
xchg
push
cmp
nop
adc
stos
lods
jmp
testl
shrb
or
movsb
addr16
sbb
xor
inc
loopne
add
xchg
mov
into
rorb
xchg
testl
sar
cmpsb
sub
mov
js
pop
es
lret
popf
dec
mov
adc
add
xchg
fcmovnbe
dec
aam
inc
insl
sub
mov
xor
xchg
movsl
xchg
jp
xlat
inc
or
xor
sub
lret
ret
add
sbb
sbb
jg
and
dec
push
jo
jnp
mov
xchg
int
bound
sbb
inc
and
jecxz
add
jl
pop
andb
stos
xor
cmp
jmp
insl
push
aam
push
xchg
scas
mov
adc
xor
lret
iret
add
jmp
adc
pop
jle
int3
lods
ja
and
nop
xor
adc
lahf
daa
jp
loope
dec
mov
mov
ds
ss
js
add
fimuls
cmp
mov
xor
aas
and
dec
adc
mov
cmp
dec
inc
jl
outsl
pop
es
and
test
cli
mov
sbb
sbb
loopne
pop
subb
pop
cld
pop
mov
cltd
shlb
inc
dec
int
in
and
add
int
test
cmpsl
xchg
inc
inc
imul
jo
mov
roll
xchg
or
cmc
sbb
xchg
dec
push
pop
jle
test
inc
lret
insl
hlt
ret
jecxz
sarl
movsb
inc
pop
mov
mov
out
dec
mov
xor
test
and
fst
ja
test
mov
test
add
and
sbb
and
fisubs
mov
xchg
jle
data16
test
jne
jecxz
xchg
mov
jle
ja
cmp
and
and
cmc
insb
dec
stc
subb
in
idiv
xor
push
ud1
push
dec
out
psraw
pop
test
dec
and
add
out
pushf
jmp
sbb
test
add
repz
mov
pop
outsl
add
das
sbb
inc
or
mov
pop
push
dec
mov
leave
mov
fwait
ds
cmp
scas
push
lods
or
xchg
stc
negl
adc
pop
xor
inc
dec
or
jp
sarl
mov
aam
xchg
aas
xor
out
jmp
push
sar
push
shlb
add
lcall
or
pop
or
mov
lods
adc
xchg
pushf
mov
jno
int
frstors
out
jmp
mov
sub
iret
pop
in
and
ja
jecxz
mov
outsl
cltd
imull
cmpsb
push
nop
repnz
mov
jns
dec
push
mov
sub
cmpsl
imul
iret
and
pop
lret
pop
test
adc
jmp
mov
mov
push
mov
loop
mov
mov
sbb
dec
out
mov
dec
push
dec
pop
jl
add
pop
stos
jae
hlt
and
bound
or
outsb
shll
mov
sbb
xor
int
mov
mov
xchg
insl
rorb
scas
dec
jno
pop
xor
in
push
mov
cmp
and
lock
cld
jmp
iret
mov
leave
push
mov
xor
lret
cmp
ljmp
lea
in
dec
add
jge
sub
add
cmc
divb
lods
mov
mov
aad
cwtl
mov
jae
iret
mov
insb
inc
mov
lahf
xchg
das
std
or
out
in
rcrl
popa
and
aas
fwait
xor
pusha
pushf
pop
cmp
mov
ret
mov
xchg
add
lahf
dec
add
add
test
xchg
sub
fmuls
sar
daa
shrl
pop
ds
adc
scas
sti
decl
insl
test
imul
stos
xchg
pop
xchg
push
sbb
test
leave
xchg
insb
mov
dec
nop
ljmp
jno
jae
push
push
fiadds
adc
dec
sub
cmp
jns
dec
push
lods
bound
jp
leave
jb
mov
adc
fcmovbe
inc
adc
jae
jecxz
out
and
not
dec
mov
pusha
loop
and
sub
aad
fidivs
test
push
mov
push
cmp
push
adc
stc
inc
sti
pop
mov
jbe
or
cmpsb
pop
adc
dec
into
out
fcoms
outsb
dec
mov
and
ds
sub
js
sbb
or
adc
arpl
xchg
jp
bound
jmp
mov
movb
mov
mov
cmc
lods
jbe
in
adc
scas
inc
stos
mov
or
stc
push
rcrb
sbb
mov
push
in
push
adc
jo
mov
ja
dec
sti
lods
cmovs
movsb
and
add
int3
adc
lock
out
jne
and
inc
loopne
aaa
sti
jbe
lcall
mov
mov
cwtl
pushl
sahf
cmc
out
jo
push
mov
fldl
outsb
out
das
sbb
push
jb
pop
fpatan
xor
cs
cmpsl
jp
and
das
loope
sbb
pop
idivl
stos
pop
out
push
scas
add
pop
hlt
mov
mov
cmp
hlt
stos
stc
dec
add
and
into
jbe
addb
dec
mov
mov
or
pop
dec
nop
push
sub
cmp
popa
sub
les
outsb
movl
test
adcl
ds
sbb
cmp
cs
lcall
xchg
stos
xchg
nop
data16
daa
xchg
outsb
push
ljmp
xchg
cmp
jge
jns
test
repnz
mov
mov
xor
roll
jnp
gs
xorl
jl
mov
inc
addb
xchg
cld
mov
push
iret
jp
jge
add
lods
nop
jecxz
xchg
xor
and
sub
inc
mov
aad
iret
lcall
mov
and
push
mov
jae
xor
stos
scas
sub
xchg
mov
mov
cli
out
out
push
cmpsl
jne
mov
ja
cmp
ret
jns
into
popa
cs
iret
jb
clc
stc
out
inc
adc
xchg
fistps
in
jmp
scas
sub
hlt
stc
les
bound
dec
mov
push
adc
dec
aaa
repz
xor
scas
popa
cltd
cld
fnstenv
mov
sub
cmpsb
sbbl
dec
or
jmp
sbb
nop
scas
pop
int
lock
repnz
mov
dec
xchg
pop
jmp
sub
fsubrp
or
shl
ja
loope
xchg
mov
sub
aaa
outsl
adc
test
ret
hlt
insl
add
pop
adc
mov
rorl
mov
roll
push
adc
mov
jl
leave
subl
out
mov
shl
sahf
es
push
test
mov
lock
arpl
cli
sbb
aas
test
inc
push
lods
repz
loope
imul
je
cmpsb
test
xchg
push
jle
subb
cmp
push
and
cmpb
mov
and
insl
outsb
enter
es
rcrl
sub
mov
or
pop
ja
mov
pop
stc
lcall
test
lods
jmp
daa
imul
test
mov
add
fs
andb
out
or
insl
cli
xchg
mov
cld
cmp
mov
std
outsl
push
xor
jnp
cmp
lods
pop
in
test
add
daa
fsub
mov
pop
cmc
add
aaa
movsl
hlt
scas
push
cwtl
cwtl
pushl
data16
scas
or
or
loop
lret
jo
out
xor
leave
inc
out
push
and
cmp
jo
xchg
lret
dec
cmp
push
adc
pop
js
mov
pop
xor
out
pop
or
js
enter
mov
in
xor
sarl
jmp
loop,pn
aad
pushf
jmp
adc
jecxz
mov
jp
sub
and
sub
adc
jo
bound
popf
or
pop
xchg
lahf
ret
mov
or
dec
add
fsubrs
mov
pushl
mulps
pop
sub
outsl
mov
in
jecxz
dec
sub
add
incb
mov
cmp
dec
lret
push
jecxz
in
test
cmp
insb
mov
push
cmp
insl
int
push
push
sub
aad
stc
ret
jne
mov
mov
int
inc
inc
pop
imul
jb
sbb
mov
aad
fwait
aad
xor
mov
mov
cmpsb
sbb
and
popf
jnp
mov
dec
dec
inc
dec
out
ds
push
sub
int3
lret
orl
fcmovnbe
stos
adc
icebp
fistpll
cwtl
cltd
fstps
ss
sbb
xchg
mov
popl
xchg
xor
int
push
sbb
std
jnp
ljmp
push
insl
int3
jnp
insl
inc
int
pop
aad
and
sbbb
mov
adc
cmpl
cltd
jmp
sbb
stos
enter
dec
sub
cltd
cmp
stc
dec
xchg
xorb
and
sbb
jne
jecxz,pn
dec
dec
rorb
es
test
pushf
adc
dec
andb
jne
daa
ficomps
lods
clc
ja
sbb
rcll
mov
xor
adc
pop
xor
nop
jbe
mov
or
jg
inc
movb
cmpb
mov
mov
mov
jecxz
add
jnp
sbb
cmp
jle
ljmp
jb
xchg
insb
out
mov
mov
bound
push
int
test
fsubrs
jne
cwtl
mov
ret
gs
pop
push
sub
cmp
adc
push
and
in
mov
xchg
ret
nop
mov
hlt
scas
pop
bound
rolb
shlb
pop
test
push
adc
cld
cmp
jne
jle
sbb
rol
arpl
jle
add
jp
mov
ss
lock
lahf
icebp
sub
jp
cmpsl
lds
jnp
mov
in
pusha
dec
sti
dec
xchg
lahf
jl
cmc
and
pop
inc
push
cli
pop
cmp
popa
lods
mov
test
in
sub
repnz
cs
cmpsb
dec
xchg
repz
mov
rolb
push
rorl
cmpsb
dec
pop
mov
loop
clc
arpl
js
dec
xchg
pop
jbe
jnp
inc
push
movsb
mov
loopne
ss
imul
es
aam
sti
or
gs
push
and
loop
rorl
cmp
clc
cmc
mov
mov
jmp
imul
sbb
lcall
fldl
adc
jp
push
lock
jns
push
xchg
dec
cwtl
in
mov
sbb
adc
push
push
mov
bound
sub
and
mov
clc
imul
sarb
loop
stos
jne
cs
fldl
push
stc
mov
jle
sbb
add
aaa
data16
fcmovnb
cmovne
mov
pusha
mov
mov
ds
cmpsl
dec
mov
or
pushf
cmp
sti
cmpsb
pushf
pop
dec
xchg
pushf
aaa
mov
popf
aaa
and
xor
jl
mov
and
jg
iret
cmp
lcall
mov
mov
sahf
aas
mov
xchg
mov
icebp
or
and
into
jno
cmp
cmp
push
pop
outsb
lods
mov
and
xchg
adc
mov
adc
cmp
aas
and
mov
andl
pop
or
aas
jbe
add
mov
hlt
mov
xor
dec
pop
repnz
pop
push
and
cmp
or
orb
push
xchg
jl
ret
or
dec
lcall
enter
jecxz
pusha
dec
pop
mov
cld
mov
jne
inc
mov
call
sbb
ja
int
insl
jl
aas
fwait
pop
lods
mov
or
xchg
jle
jg
clc
dec
int
shrb
mov
pusha
inc
mov
cmp
adc
xchg
inc
pop
popa
mov
aad
push
jae
das
repnz
and
adc
testb
aam
outsb
in
movsl
pop
mov
nop
push
fmul
sbb
call
into
data16
in
ss
out
xchg
push
pop
bnd
fldcw
dec
stos
or
jno
and
jns
cmp
bswap
adc
dec
leave
ja
push
adc
jge
test
jno
leave
add
xchg
stos
xchg
in
add
dec
fwait
ljmp
jecxz
es
aaa
mov
sahf
mov
xlat
enter
push
out
mov
in
in
adc
cmpsb
movsl
pop
push
movsb
lds
popf
push
xorb
loope
sarl
sbbb
shrb
dec
mov
mov
or
sbb
inc
adcl
dec
push
cmc
ljmp
cmp
outsl
sbb
cmc
fs
mov
adc
fdivrs
dec
cmp
jnp
cmp
or
push
clc
xor
mov
outsb
xchg
fdivrs
leave
pop
sbb
pop
sub
push
inc
xchg
dec
mov
fistl
cmc
push
xor
je
cltd
sub
lcall
cmp
adc
ret
sub
mov
shl
movsb
xor
fcmovnbe
cs
cmp
push
out
icebp
lock
sbb
imul
ja
mov
fcmovb
ror
or
inc
scas
int
cli
scas
popf
jbe
stos
push
and
sahf
sub
out
stos
jno
and
mov
xor
fwait
popa
ret
dec
pusha
dec
in
mov
jmp
jecxz
out
subl
push
xlat
dec
mov
jae
clc
pusha
cld
add
fmull
or
movsl
mov
cwtl
pushf
daa
jl
call
icebp
adc
in
fistpl
daa
sub
shr
add
loop
jle
jno
push
mov
fs
std
testb
mov
fcmovu
jno
or
popf
lock
mov
mov
adc
hlt
jbe
clc
adc
fdiv
scas
sbb
mov
outsl
inc
test
insb
mov
call
sbb
lmsw
mov
push
nop
adc
adc
rolb
mov
dec
xchg
xchg
and
in
std
iret
fsts
mov
sbb
mov
jns
pop
xchg
mov
cmc
leave
and
andl
cmpsb
fidivs
stc
adc
nop
add
add
inc
lea
in
lcall
ret
aaa
xchg
ret
jo
mov
enter
mov
sahf
pop
iret
push
gs
adc
es
fwait
pop
ljmp
flds
mov
mov
adc
fldl
clc
daa
bound
movzbl
mov
cmc
call
pop
stc
inc
sbb
adc
add
xor
arpl
xchg
outsl
shrb
jo
cs
inc
pushf
xchg
jg
pushf
pop
insl
ret
jbe
pop
outsl
fdivrl
out
cwtl
cli
pop
dec
psadbw
ja
inc
int
push
dec
pop
shll
sub
xchg
out
jns
jnp
xchg
mov
adc
and
jl
or
inc
xor
sbb
std
or
cmp
jmp
dec
mov
test
inc
inc
test
add
pop
jecxz
arpl
pop
mov
inc
xor
fdiv
or
pop
decb
push
add
repz
and
mov
xor
pusha
fs
or
leave
ja
icebp
es
sub
mov
lods
xchg
pop
shlb
gs
and
xchg
out
ss
insl
ret
mov
imul
add
std
movsl
inc
lock
add
mov
insl
insl
dec
lds
mov
and
push
outsb
sub
rorl
jbe
les
jne
bound
jp
lods
das
sub
in
data16
fnstenvs
mov
test
sub
daa
mov
adc
xor
or
scas
cmp
mov
inc
xor
jmp
xchg
mov
mov
push
dec
inc
add
adc
mov
inc
test
sahf
rorb
daa
jle
cmc
mov
mov
std
into
fdivl
fadd
mov
sbb
in
sub
jbe
sahf
scas
fisubl
jg
adc
insb
jecxz
mov
lods
jge
in
cmp
sahf
test
dec
add
andb
mov
enter
push
pop
sbbl
cmp
mov
lcall
aaa
dec
mov
add
addl
or
sbb
push
mov
dec
test
dec
or
push
lods
clc
nop
dec
xor
outsl
sahf
iret
loope
mov
mov
pop
ret
insl
mov
cmpl
or
cltd
xor
push
jle
adc
dec
jae
fisttpl
sub
jecxz
jb,pn
push
shlb
xor
cmc
out
push
add
outsl
dec
pusha
dec
aas
and
mov
fcoml
fs
mov
or
cltd
fcompl
movsb
out
mov
inc
out
insl
ss
in
fidivrl
iret
pop
push
mov
mov
sub
push
mov
and
mov
mov
loope
aaa
pop
mov
loopne
pop
insb
orb
mov
shlb
repz
cld
sub
dec
test
clc
outsb
loope
inc
xchg
mov
and
dec
cmp
lret
jbe
repz
mov
adc
insl
xchg
pop
jnp
adc
clc
pop
xchg
stc
mov
sbb
add
add
mov
adc
add
push
cld
stos
lahf
movsb
inc
fdiv
cs
inc
jl
cmp
popf
dec
add
leave
dec
mov
or
jp
mov
int3
mov
adc
dec
xchg
dec
shrl
dec
leave
pop
xorb
fdivp
repz
add
mov
test
pop
xor
xchg
add
mov
xchg
and
sub
test
jo
push
mov
fsubs
add
inc
mov
mov
fwait
nop
adc
xor
loope
jge
mov
or
sti
cmp
pop
pop
adc
and
and
je
cmp
fwait
or
adc
jle
or
pop
stos
add
cld
xor
mov
mov
jl
xchg
fnstenv
stos
jbe
or
sti
fcompl
pop
movsb
js
sub
fsubrl
daa
pop
int
pop
cmp
xchg
int3
mov
ret
pop
mov
leave
inc
sarl
adc
int3
jnp
in
ss
rorl
jp
and
mov
jae
jle
xor
mov
jecxz
jne
nop
lahf
sti
test
xor
mov
sub
sub
mov
push
mov
je
mov
push
pop
stos
push
nop
in
or
add
jb
out
dec
mov
inc
dec
add
rclb
or
dec
je
push
sti
loope
sbb
adc
add
adc
jae
pop
jl
xchg
inc
data16
sarl
decb
dec
jle
cmc
imul
adc
pop
and
icebp
push
daa
outsl
pop
sti
add
pop
xchg
fildl
movsl
arpl
cli
pop
fstp
jb
cmp
sbb
inc
shrb
add
inc
and
xor
jns
cwtl
outsb
rcr
cmp
lods
fcompl
or
lock
add
or
sub
pop
cld
in
cmp
push
pop
stos
mov
push
std
cmpsl
cltd
mov
lahf
xor
jbe
add
rcll
lret
leave
addr16
pop
add
pushf
push
mov
jle
es
pop
dec
dec
jmp
pop
fbstp
xchg
jnp
lock
cmpb
test
insl
jns
fmuls
inc
loopne
jg
mov
mov
daa
movsb
jp
xchg
imul
dec
imul
cltd
ja
data16
inc
push
adc
or
idivl
dec
imul
pop
pop
idivl
jb
pop
pusha
sub
sbb
cli
mov
fidivrs
dec
adc
call
jecxz
lds
iret
xor
pusha
jge
pop
loop
addr16
loop
cld
sub
pop
adc
dec
sti
mov
or
sub
mov
mov
scas
or
xchg
and
lret
addr16
roll
leave
repz
cmp
push
leave
pop
ret
inc
push
sarb
xchg
adc
lods
leave
cmpb
cltd
lock
mov
inc
fsubrs
movsb
xchg
sub
pop
cwtl
mov
jg
sub
lahf
clc
mov
test
adc
sbb
xchg
pop
push
push
mull
sbb
mov
sbb
cmp
mov
test
inc
pop
xlat
loop
sbb
add
lods
iret
icebp
shlb
pop
int
pop
and
jo
mov
popf
sti
and
stc
mov
mov
and
dec
inc
mov
testl
mov
sub
std
clc
negb
sarb
sbb
mull
sbb
stos
mov
jmp
fbstp
repz
xlat
dec
cli
movsl
jg
enter
jle
add
jae
incb
add
or
jbe
xchg
pop
xchg
out
dec
adc
pop
ljmp
cmpsl
and
cmp
mov
mov
xlat
mov
cmp
scas
lcall
pop
cmpsb
subb
jno
popa
testl
pop
out
stos
mov
shll
mov
das
dec
xchg
sbb
in
sbb
push
fucomp
cld
cmp
xchg
enter
cltd
repz
pop
add
cld
std
push
jl
jb
dec
das
test
or
xor
adc
out
inc
mov
cld
push
sbb
out
mov
ret
add
aas
test
test
mov
mov
mov
inc
pushl
ljmp
repnz
lods
outsl
roll
call
mov
sbb
in
pop
and
repnz
clc
xor
or
push
ret
sti
pushf
jb
out
push
scas
ficompl
pop
and
icebp
fmull
sbb
sub
cmp
mov
outsl
mov
movzwl
inc
jno
inc
push
xor
pop
jmp
push
xor
push
pop
fisttps
bound
mov
adcb
mov
data16
pop
dec
out
and
ljmp
mov
stos
fwait
add
out
lock
add
dec
inc
xchg
and
inc
xchg
pop
iret
adc
inc
int
mov
imul
stos
std
test
jmp
and
stos
aas
xchg
pusha
xchg
and
push
pop
push
add
lods
repnz
lods
js
outsl
fs
pop
pop
jmp
xchg
sbb
in
aam
pop
mov
inc
dec
jp
popa
pop
in
outsl
add
lods
or
cmp
pop
add
es
mov
push
fstpt
mov
insl
xchg
pop
xor
mov
push
fmull
mov
xchg
xchg
xchg
ret
push
data16
dec
idivl
sti
std
inc
or
fsubl
mov
int3
dec
cld
cmp
or
dec
jmp
idivl
cwtl
sti
dec
popf
insl
repz
sbb
stos
ljmp
push
push
scas
cmp
out
push
dec
out
scas
xor
xrelease
mov
sub
out
mov
enter
sti
mov
or
push
minps
fldcw
data16
sbb
bound
cmp
cmp
fisttpll
jae
adc
testb
je
into
mov
test
ficompl
mov
inc
push
shr
aaa
sub
push
jmp
push
ds
stos
push
mov
jns
cltd
jae
mov
sub
jmp
fiadds
popa
loopne
xchg
or
mov
aaa
mov
mov
jns
sbbb
xchg
in
incb
xchg
and
dec
dec
stos
in
sub
pop
inc
aaa
adc
call
scas
jo
nop
movsb
and
and
mov
push
loopne
cld
js
jnp
bsf
popl
push
adc
push
or
repz
in
fwait
int
out
adc
push
add
loopne
fdivrl
test
popa
lods
jecxz
das
aas
leave
movsb
and
push
jb
fdivs
xchg
cmpsl
add
jno
test
jl
mov
xor
mov
sbb
int
cmc
inc
stos
dec
call
push
mov
outsb
xchg
insb
divb
and
inc
daa
xchg
outsl
cli
sti
lods
lds
call
sub
popa
sub
push
sbb
out
mov
inc
pop
sbb
jae
adc
int
daa
repz
dec
add
or
xor
pop
pop
lahf
xchg
fidivrs
nop
inc
add
in
arpl
jecxz
mov
aad
pop
push
in
stos
repz
mov
es
ds
push
sarb
out
push
inc
lea
sbb
dec
ss
inc
jns
daa
aas
cmp
or
andb
fidivs
cltd
leave
cmpl
xor
sbb
fabs
xor
std
loopne
mov
push
fists
fisubrs
addr16
stos
push
mov
hlt
jns
fwait
lcall
cmpl
inc
mov
mov
out
push
add
cmp
push
lods
fs
mov
pop
sbb
faddl
xor
pop
xor
mov
jecxz
xor
inc
into
fstpl
fadds
lret
xchg
out
push
push
js
sahf
inc
xor
mov
and
enter
xor
mov
add
jb
data16
cmp
fnstsw
mov
pusha
sbb
xor
aad
mov
or
push
dec
mov
mov
inc
sub
sahf
insb
adc
sub
push
xchg
int3
fisubrl
mov
int3
popa
pushf
jl
sub
lea
sbb
fcoms
orl
dec
adc
shll
cmp
data16
push
or
and
sub
sub
add
iret
push
mov
lods
inc
jecxz
loope
mov
test
repnz
aad
scas
and
xor
and
cmpsl
cmp
popf
xchg
ret
fstpt
aad
scas
sbb
adc
xor
jae
xor
jbe
mov
mov
add
mov
or
cmp
shr
jg
movsl
mov
lret
sub
imul
mov
ja
sub
mov
cmp
clc
inc
push
rclb
aad
sub
sub
add
sub
cs
push
mov
lock
mov
mov
xor
sub
cmp
adc
sub
dec
sbb
movntq
sub
loop
das
fistl
andl
bound
in
xchg
cmp
add
pop
das
ret
jne
dec
fiaddl
xor
mov
lods
jge
movsl
dec
iret
xor
shlb
mov
insb
pop
xchg
or
xor
jae
int3
addb
cmp
dec
cmpsb
push
imul
lret
das
icebp
sub
rol
lds
sbb
pop
mov
stc
fstl
in
lods
mov
ret
xor
jne
cmpsl
and
push
loopne
push
arpl
xchg
sbb
ret
ja
and
and
test
mov
sahf
ret
imul
mov
icebp
std
pusha
cltd
inc
push
dec
pushf
dec
xchg
insl
cmc
lods
sbb
rclb
sarb
mov
sahf
das
loope
and
mov
call
xor
sbb
pop
jl
jmp
sub
repz
mov
sbb
lds
cltd
bound
sub
es
mov
out
out
mov
add
ljmp
lcall
rcr
and
jecxz
daa
rcrb
es
pop
in
into
mov
xchg
xchg
ljmp
loopne
xor
pop
mov
mov
shll
mov
insl
lods
popa
arpl
mov
in
lret
aad
fisttpll
mov
movsb
jecxz
dec
cmp
xchg
sbb
mov
sahf
jbe
and
out
cmpsl
shlb
or
jecxz
add
mov
arpl
es
pusha
add
int3
jno
mov
cmp
outsb
shl
scas
push
das
sti
loope
push
pop
cmc
and
aam
pop
pop
pusha
mov
notl
jecxz
jns
mov
push
cwtd
popl
stos
andb
movsb
push
xor
push
outsl
xchg
pop
outsl
cmc
sbbb
out
insb
adc
xchg
cmc
cmpl
stos
in
repz
cmp
jbe
daa
les
sti
stc
addr16
cs
movsl
push
and
movsb
mov
rolb
lahf
inc
sbb
xor
sub
xchg
jns
push
pop
xor
and
mov
adc
dec
inc
pop
jp
add
fldt
push
xlat
xor
pushf
adc
jmp
enter
xorb
push
hlt
fisttpll
sbb
in
sub
ds
aad
mov
popf
bound
loop
in
in
lahf
and
and
fwait
push
fsub
mov
jno
out
loop
negl
xor
sarl
cmp
fmuls
insl
in
push
cmp
or
jmp
dec
adc
mov
movsb
and
fidivl
or
lret
repnz
movsb
cltd
ret
pop
ljmp
lret
int3
popf
addr16
sub
xor
xor
push
and
mov
mov
aaa
add
inc
and
cli
cmp
push
pop
jle
mov
sahf
ljmp
inc
roll
call
fisubl
aam
or
jb
push
rorl
rsm
sti
fs
daa
cmc
out
dec
cli
mov
sub
mov
inc
sub
jl
addr16
cmpsl
lds
mov
test
push
mov
push
cmp
inc
add
out
jbe
sbb
sbb
insb
add
mov
sti
out
cmpsb
adcb
loope
push
add
jle
shll
lods
sbb
adc
loop
stc
sbb
xor
mov
orb
xchg
cwtl
and
mov
scas
inc
rcrl
xchg
arpl
xchg
les
mov
insl
push
gs
sub
pop
push
loopne
xchg
adc
mov
mull
push
sub
movsl
js
stos
cltd
lods
jl
imul
and
ret
imul
add
stos
ds
lds
push
sub
xor
imul
adc
sub
lds
xchg
pop
rcll
dec
push
cwtl
mov
fs
repz
push
outsb
adc
in
aaa
addb
push
pop
lcall
mov
xchg
scas
andl
mov
gs
push
scas
adc
push
movl
addb
jne
adc
ljmp
mov
push
js
in
gs
sti
inc
cmp
sbb
lret
xor
popa
idivl
dec
ret
ds
pop
dec
in
andl
push
xchg
mov
jne
fidivrl
imul
push
add
adc
les
cltd
mov
cmpsl
rolb
fs
mov
punpcklbw
xcrypt-cbc
cmpsl
shl
lods
mov
push
mov
sub
jmp
in
out
iret
xchg
rcrb
ja
sbb
lret
les
sti
sub
lret
fldl
mov
dec
mov
sbb
xchg
adc
mov
shrl
mov
movsl
sahf
xor
mov
popf
imul
and
xorb
lret
mov
sub
adc
inc
add
into
inc
into
dec
sub
inc
xchg
xchg
outsb
rorb
icebp
sbb
mov
and
lahf
jmp
pop
xor
cmp
sbb
sbb
xor
mov
jecxz
pop
dec
add
aaa
adc
iret
mov
mov
push
push
sbbb
inc
sub
push
out
outsl
cld
imull
cmp
cwtl
loopne
mov
sub
fldcw
jne
hlt
fnsave
insb
int3
mov
xchg
out
dec
dec
or
mov
and
jl
fwait
ret
xchg
pop
in
rol
mov
arpl
popf
cs
sub
std
fcompl
fimull
mov
nop
dec
out
pop
push
pop
in
mov
cwtl
ret
dec
scas
jecxz
loope,pt
pop
cmp
sub
or
push
pop
bound
loop
movsb
repnz
pusha
mov
cmovl
mov
test
or
fistl
xchg
xor
and
sbb
fs
loop
mov
inc
sbbb
cmp
push
dec
cmp
mov
adc
leave
jbe
movsb
cmpl
rcll
dec
fstpl
xchg
pusha
jo
or
pop
and
addr16
cld
lret
dec
movsb
cmpsl
aaa
adc
aaa
ja
lret
mov
push
and
ficomps
push
xorb
jecxz
or
mov
in
or
andl
je
nop
inc
nop
ret
int3
cld
jl
pop
lock
loope
std
xor
icebp
jo
dec
in
xchg
sub
and
fnstcw
dec
pushf
xchg
leave
in
imul
push
data16
push
jne
inc
mov
cs
hlt
stc
orb
stos
popf
mov
std
adc
aad
in
dec
out
sti
outsl
sarl
ja
pop
xor
leave
stos
add
cli
inc
fistpl
jno
pusha
jbe
pop
add
mov
inc
dec
out
mov
dec
sub
xor
inc
xor
in
jae
push
push
leave
or
mov
out
xchg
adc
icebp
jmp
loope
cmp
cmp
ja
ja
dec
and
aaa
sub
imul
shlb
cmp
xchg
mov
mov
icebp
mov
mov
inc
lds
mov
jl
int
movl
out
imul
jbe
loop
stos
fstpt
fsubr
sub
decl
popf
jge
popf
cmc
movsb
sub
lods
mov
mov
mov
arpl
out
cmp
lds
imul
add
cld
dec
std
movsb
mov
lcall
popa
cwtl
pushl
idivb
in
into
das
sbb
aam
cmpsb
dec
cmpsb
mov
movsl
cwtl
lods
pop
cmpsb
ja
inc
xor
mov
fmull
leave
mov
push
adc
pusha
les
adc
ja
fwait
ljmp
call
call
shl
adc
das
enter
push
mov
dec
vcvttps2dq
and
push
iret
or
daa
jae
lods
roll
lods
hlt
lds
cwtl
dec
addl
hlt
dec
pop
mov
xchg
cmp
fistps
inc
insl
and
fdivrl
mov
xor
pop
xchg
mov
jmp
outsb
xchg
out
xor
push
fidivrl
and
inc
imul
fwait
andb
fidivl
adc
cmp
mov
jb
lea
jno
pop
push
sbbb
ja
adcl
leave
push
stos
xor
stos
mov
out
pop
rcr
ljmp
cmp
xorl
mov
adc
cld
addr16
movsb
pop
inc
pop
push
sub
xor
in
hlt
aad
inc
push
inc
sub
xchg
fwait
sub
xchg
push
mov
rorl
pop
repz
add
pop
mov
mov
or
flds
mov
mov
push
ficompl
cld
stos
shll
xor
push
out
clc
jns
jne
imul
aaa
pop
adc
add
xchg
dec
and
jl
lcall
leave
call
push
bound
jg
loopne
add
jne
les
mov
inc
mov
and
jg
sub
cld
xor
fldt
dec
out
pop
push
jb
insl
pop
ss
adc
mov
rcrl
sbb
repnz
iret
push
push
inc
jo
test
push
add
rcrb
outsl
adcb
out
mov
add
jns
xor
mov
pop
push
int3
and
sub
sub
loop
add
mov
sti
jne
xor
jbe
inc
adc
leave
leave
or
mov
inc
xchg
shll
cmp
adcl
fsubs
int
sub
jmp
std
xchg
push
popf
dec
cmp
xchg
fsubl
mov
jb
int3
xchg
out
pop
xor
test
mov
fs
adc
mov
ljmp
iret
inc
sbb
cmp
jnp
xor
inc
aam
push
xchg
adc
jb
imulb
pop
mov
mov
fadds
jle
inc
or
stos
lods
add
sub
mov
sbb
pop
xor
mov
divb
jl
sbb
data16
fadds
cmpsb
mov
pushl
lret
adc
sarl
data16
push
repnz
ret
xchg
pop
push
push
sbb
jp
cmpsb
inc
psubq
je
xchg
lret
les
nop
push
popf
movsb
jbe
ret
jns
jae
xor
sub
mov
in
fsts
sti
sbb
adc
movsl
xor
xor
das
cmc
jb
mov
iret
push
add
push
lods
inc
mov
cmp
and
test
insl
sub
loope
loopne
jb
sbb
sbb
mov
adc
loopne
es
mov
xchg
fsubs
sahf
aaa
js
mov
add
push
push
adc
mov
daa
dec
andl
mov
ja
xchg
add
frstor
fwait
das
sub
and
lods
test
and
xor
add
mov
dec
dec
aam
lcall
mov
dec
xchg
xorb
out
fabs
cmp
push
xchg
mov
ror
mov
shll
mov
xlat
cmp
xlat
in
sarb
mov
cwtl
cmp
mov
bound
inc
pop
mov
into
je
mov
add
lcall
push
push
sti
jnp
xor
imul
mov
push
pop
lret
push
cltd
movlps
push
cmp
jnp
daa
leave
mov
ret
adc
dec
xchg
mov
xchg
xchg
jae
mov
push
frstor
out
mov
shlb
inc
mov
pop
inc
test
xor
lcall
push
cli
es
lret
sahf
pop
lret
xchg
sbb
jb
jl
mov
jmp
xor
pop
int3
das
mov
lods
aad
add
jp
xchg
int3
inc
pop
ljmp
cltd
clc
cmpsb
test
cs
jne
sub
cltd
pop
jmp
dec
xlat
scas
mov
lret
xor
test
lods
popf
fisttpl
sub
push
sbb
push
inc
fxch
add
int3
pop
dec
fmuls
cltd
bound
test
lds
test
sbb
sbb
es
lret
and
lods
subl
pop
xchg
scas
aaa
push
xorl
dec
dec
xlat
cs
js
ds
sahf
mov
adc
push
aas
mov
test
xchg
push
fs
mov
pop
add
sahf
dec
lea
dec
mov
xchg
or
ja
bound
inc
aam
cmp
pusha
xchg
or
mov
inc
jo
sbb
mov
stos
dec
les
dec
and
imulb
stos
jnp
imul
mov
cwtl
notl
dec
push
fwait
roll
and
push
jp
call
rorb
jnp
or
jae
xchg
push
std
lods
into
and
jo
xor
mov
sub
mov
filds
rclb
fstp
popa
es
in
and
jg
cmp
repnz
pop
sahf
mov
cmc
repz
or
add
lods
sub
inc
cmp
stos
pushf
push
mov
mov
outsl
add
pop
call
jg
jl
add
jo
sub
or
test
cmp
dec
pop
pop
sarl
mov
std
sub
mov
cwtl
stos
ftst
jb
mov
and
andl
rcrb
scas
std
cmp
js
mov
lcall
sub
and
lods
lock
ljmp
xchg
aaa
repz
pop
ljmp
jno
pop
sbb
enter
push
and
xchg
xor
push
xlat
cmp
mov
cmp
pop
imul
jae
cmp
mov
imulb
xchg
stc
or
jne
xchg
lds
and
repz
cld
ss
cs
repz
lock
sub
cli
add
mov
inc
xchg
jmp
fisttps
aaa
fsubrs
sti
or
test
les
jg
insl
xlat
lahf
adc
out
fmull
test
lea
xor
push
out
push
repnz
movsb
lahf
jl
sub
movsl
pushf
jge
ss
lods
scas
lcall
rclb
push
out
in
loopw
and
sbb
das
sub
push
in
sbb
and
inc
aaa
dec
cs
jecxz
and
cmpsb
rorb
loop
mov
test
imul
lret
loop
sti
mov
shrl
imul
rorb
mov
sub
rorl
jmp
xchg
inc
mov
mov
cmp
mov
dec
std
rolb
iret
inc
fadds
sbb
mov
pop
int
dec
jo
pop
cmpsl
push
xor
enter
pusha
adc
fsubrs
mov
or
fninit
fs
popf
mov
imul
leave
aaa
push
sub
ds
mov
loopne
and
and
pop
arpl
sahf
xchg
push
stos
jmp
dec
sbb
dec
add
mov
and
xlat
jecxz
xor
cmc
mov
imul
dec
add
inc
and
adc
aam
je
popa
lret
xchg
vcmpeq_uqpd
mov
mov
push
mov
adc
push
mov
cmpsl
idivl
push
data16
and
ficomps
rcr
cmp
mov
sub
xchg
cmp
div
dec
aaa
mov
lahf
add
jnp
xchg
mov
fs
jns
and
xor
mov
dec
jo
test
xlat
fcomps
data16
xor
insl
aaa
fsts
pop
lret
scas
lret
enter
ja
jno
and
pavgw
mov
addr16
mov
and
out
loop
xchg
add
or
addl
mov
xor
xor
lds
scas
cmp
das
fbstp
jns
dec
add
push
ja
lret
aas
out
lods
xor
sarb
sub
jo
xor
mov
lds
testb
fsubrs
sbb
lods
adc
sub
in
mov
or
popf
xchg
dec
daa
xchg
mov
addr16
cltd
add
mov
pop
xchg
adc
icebp
mov
dec
repz
lea
sub
pop
jno
adc
push
inc
loope
lods
mov
popa
pop
mov
out
insb
insb
and
pop
mov
sti
repz
sub
shrb
and
or
in
xlat
test
stos
jae
lcall
jl
mov
sarl
mov
popf
add
sbb
inc
repz
int
and
lcall
inc
sub
add
mov
es
cwtl
insl
int3
in
inc
negb
sub
fisttps
cli
and
adc
filds
xor
arpl
mov
into
fdivs
out
mov
sti
mov
xchg
fucomi
in
xchg
cmp
rorl
add
pop
addr16
popa
xchg
pop
push
jno
push
xorl
jg
xchg
ret
inc
push
dec
mov
and
stc
sahf
mov
test
mov
inc
gs
jl
test
xchg
xor
notb
dec
mov
mov
scas
arpl
push
negb
inc
aas
fnstcw
cwtl
ss
and
adc
outsb
mov
repz
jge
std
mov
loope
adc
xor
add
mov
das
sub
dec
push
mov
enter
ds
mov
push
xchg
in
pop
pop
xor
push
inc
jmp
push
push
adc
sbb
ljmp
mov
clc
and
push
repnz
xchg
dec
popa
notb
pop
mov
cmp
test
mov
mov
or
out
int3
push
mov
arpl
jae
stos
dec
xchg
pop
fldpi
mov
aas
lock
adc
add
loope
shr
sub
fmull
test
mov
xor
jb
pop
jl
inc
adc
jecxz
jb
jnp
lahf
jp
dec
mov
lcall
shlb
mov
xor
sub
shrl
insb
add
jne
cmp
pop
les
push
cs
fldt
shlb
xchg
cmpsl
js
outsb
and
adc
inc
xchg
repz
addr16
in
nop
push
mov
sbb
test
aaa
aad
xchg
xchg
push
adc
aad
cmc
sbb
cli
mov
lcall
in
cmp
call
out
addr16
pop
scas
cmp
mov
jns
inc
lahf
jp
cmc
roll
pop
and
cli
cld
cwtl
push
mov
mov
and
iret
pop
pop
cmp
fwait
sbb
sub
xchg
aas
ret
mov
sbb
pop
dec
pop
push
outsl
inc
mov
sbbl
andl
mov
inc
mov
and
daa
lret
pop
push
nop
jbe
cmp
bound
and
inc
mov
dec
inc
add
dec
mov
test
out
jmp
inc
icebp
enter
sub
ljmp
push
enter
add
xchg
movsl
popa
clc
jae
outsl
add
or
ret
jo
sub
arpl
sub
imul
add
xchg
std
push
fwait
jnp
jo
or
cmpsl
daa
mov
je
shld
push
clc
mov
hlt
or
jno
ja
dec
xchg
mov
jl
cmpb
mov
iret
mov
sbb
insb
cltd
into
pop
icebp
dec
mov
cltd
scas
jg
xchg
hlt
fdecstp
dec
cwtl
jnp
adc
mov
or
pusha
add
leave
xchg
pop
mov
pop
insb
dec
mov
rorb
outsl
loopne
test
fldcw
push
arpl
shlb
ret
mov
and
out
lahf
fs
cli
imul
xchg
stos
lods
cmp
push
inc
in
sbb
add
pop
jge
test
xchg
mov
je
xchg
jne
fists
adc
jno
inc
mov
jbe
xchg
adc
push
jg
ljmp
pop
xor
ss
pop
sbb
fdivp
and
cmpl
add
sbb
adc
pop
cmp
mov
cmp
push
mov
mov
dec
out
mov
and
rolb
add
add
push
popf
insb
inc
sti
add
xlat
jae
xor
or
fildl
and
fwait
pop
sbb
adc
or
inc
cltd
sti
ja
rcrl
jno
dec
push
pop
mov
ret
or
jle
adc
cmpsl
aam
sub
push
adc
mov
addb
pop
xbegin
stos
push
loopne
bound
jge
movsb
mov
sbb
andb
dec
jg
lds
movb
outsb
jbe
daa
lret
icebp
or
lods
cwtl
or
sbb
in
fldenv
rcrb
into
je
imul
in
outsb
jne
insl
not
mov
pop
fdiv
arpl
sub
stos
jg
js
imul
dec
mov
jns
or
cwtl
sbbl
mov
sbb
mov
xchg
fiaddl
jo
inc
enter
sbb
out
xchg
fsubrl
aaa
cwtl
and
mov
lock
mov
xchg
xor
les
decb
jns
bound
sub
imul
push
cmp
adc
add
cmpsb
xchg
in
outsl
or
push
shlb
rcrl
fidivrs
xchg
push
push
lahf
jmp
jl
stos
add
add
xor
sbb
cmp
aam
pop
ror
pop
loop
int3
inc
aam
mov
lods
xchg
aaa
dec
stc
cmpsb
mov
push
inc
mov
xor
fsubs
cmc
push
test
lds
cmpsl
mov
test
jb
mov
insl
sub
xor
xchg
and
push
add
cld
xchg
jne
xchg
mov
pop
add
insl
lret
dec
rcrb
xchg
adc
jge
in
daa
stc
dec
lds
mov
mov
mov
fsubl
sub
lea
xchg
sbb
xor
mov
andb
fisttpll
sbb
xchg
mov
mov
ja
loopne
inc
sbb
ds
fimuls
int3
pop
daa
loop
es
fistpll
dec
jg
xchg
or
mov
add
dec
push
mov
mov
cmp
lds
pop
pop
andl
and
pop
cmp
lods
call
out
sbb
cmp
adc
dec
add
cmp
xchg
cmp
aad
call
pushf
inc
sbb
or
cmp
adc
adc
ja
out
pop
int
and
out
cmp
test
mov
pop
fsts
xchg
insl
negb
jp
stos
and
decl
cmp
mov
push
daa
stos
sahf
mov
and
xchg
jns
stc
push
mov
test
xor
mov
ja
push
imul
test
test
push
cmpsl
dec
data16
pop
lret
xchg
pop
xchg
pop
pushf
inc
ja
mov
jmp
xorb
imul
sbb
dec
mov
cmc
jecxz
lret
push
jae
dec
in
clc
cmp
addr16
push
xlat
cltd
ss
daa
sbb
rcr
out
push
loop
outsb
pusha
mov
cmp
fnsetpm(287
push
sub
jo
jo
adcb
sub
jg
push
outsl
mov
and
sar
lds
je
dec
jmp
mov
in
cmp
jle
scas
xor
test
adc
adc
mov
je
lret
roll
cltd
mov
out
in
add
xchg
mov
and
scas
cli
shl
repnz
add
pushf
lahf
aam
sbb
pop
icebp
int3
ret
xchg
loop,pt
mov
mov
mov
add
inc
jae
jbe
fistl
xchg
add
push
inc
lea
inc
or
ja
popa
pop
mov
pusha
push
xchg
sbb
pushf
iret
push
jne
cmp
cmp
dec
pop
lret
pop
and
loope
pop
pop
add
cmp
cltd
cmp
sbb
hlt
dec
jp
and
mov
adc
addl
push
je
jb
addl
je
ds
sarl
dec
add
inc
loope
sarb
xchg
xor
lods
mov
scas
cmp
andl
pop
cld
cli
pop
ds
lret
adc
adc
fldcw
adc
xchg
testb
popf
add
aam
mov
adc
aaa
fsts
mov
repz
movsl
lods
cmp
es
int
xchg
testb
pop
cmpsl
and
jne
xchg
sub
dec
cmp
js
shl
sbb
mov
xor
cmp
cwtl
mul
mov
std
mov
movsb
out
bound
mov
and
cs
imul
dec
das
imul
pop
jnp
mov
dec
cmc
iret
stos
scas
popa
pop
lea
pop
mov
jl
test
into
mov
mov
popf
lods
aas
xlat
ja
shll
mov
push
or
lret
hlt
fnstenv
mov
add
in
out
rclb
mov
mov
mulb
fildll
cwtl
xchg
int3
pushf
push
cld
movb
pushf
cmp
mov
pop
cmpsl
jge,pt
les
jne
ljmp
repz
pop
mov
movsb
mov
pop
cmp
iret
int3
lcall
aad
out
call
pop
and
stos
lahf
lock
or
adc
add
aad
mov
xchg
enter
cs
outsl
loope
stc
mov
sbb
jp
jb
int
ljmp
fwait
pop
sub
inc
bound
out
or
imul
adc
fbstp
lret
mov
cmp
adc
jge
out
hlt
and
das
sbb
jne
pop
lods
pop
cmc
xchg
xor
inc
and
out
out
in
les
dec
je
xor
and
rolb
or
cmc
xchg
xchg
mov
and
jg
xor
sub
and
push
push
jg
and
inc
inc
les
and
mov
addb
sti
sub
clc
jns
jmp
dec
add
mov
int3
std
and
and
mov
xor
dec
out
cmc
sbb
add
stos
jg
adc
fiaddl
inc
jg
jp
lods
mov
inc
in
push
fldenv
jns
icebp
fldcw
int3
lds
lret
dec
sbb
and
dec
dec
negl
xchg
movsl
nop
push
cmp
cmp
sbbb
mov
stc
dec
inc
mov
mov
inc
add
hlt
mov
push
shrl
sbb
das
in
call
add
adc
jno
je
or
sub
test
cs
clc
mov
pop
loop
sub
mov
in
mov
sub
jp
insl
addb
ja
ljmp
inc
lds
dec
add
or
push
cltd
dec
jns
ss
mov
jno
int3
fisttpll
mov
inc
aaa
into
cmp
adc
sbb
je
scas
and
pop
mov
test
sub
lret
mov
inc
fcomp
xchg
inc
inc
push
stc
cs
lods
lret
loope
push
jns
push
cmpl
stos
adcb
or
hlt
push
pop
mov
addr16
and
stos
jno
jmp
push
das
iret
movsb
andb
and
add
and
xor
insb
xchg
gs
inc
in
mov
ficoms
stos
mov
xlat
bound
in
outsb
lods
xchg
mov
out
cmpsb
xchg
mov
jno
in
movsb
clc
lods
nop
shl
jb
mov
mov
jb
mov
movsb
sub
mov
sub
fdiv
dec
lds
xor
jg
gs
mov
xor
testl
cmp
loopne
xchg
push
add
rolb
cmc
xor
push
loopne
int
cmp
test
xor
pop
jle
aaa
or
icebp
adc
je
add
xchg
sti
dec
lret
xchg
les
outsl
fcmovne
sub
test
sub
pop
mov
int3
add
pop
cli
inc
scas
cmc
mov
jp
fnstcw
xchg
push
xor
ret
outsl
cmpsb
pusha
pop
add
push
lea
and
repnz
mov
lock
mov
cmp
inc
mov
clc
adc
ds
and
in
into
aaa
xchg
pop
mov
mov
push
jb
jecxz
fidivs
adc
add
into
push
pop
dec
inc
jge
adc
mov
and
daa
jge
push
outsl
in
sarl
test
mov
bound
sar
sbb
xlat
add
fdivs
insb
inc
add
icebp
jo
in
fs
sub
adc
push
cmp
adc
arpl
and
adc
loopne
jmp
mov
rcrl
add
xchg
pop
mov
xchg
cmc
je
int3
sub
arpl
mov
pushf
fidivrl
xchg
pop
cmp
and
daa
sbb
pop
rolb
jnp
test
push
inc
les
mov
mov
lret
mov
xor
jp
mov
test
xchg
roll
aaa
test
insl
leave
jmp
mov
dec
sbb
addb
cmc
outsl
sub
push
movsl
or
dec
mov
repnz
shlb
adc
jns
xchg
jns
clc
int
pop
adc
cli
fs
jp
jmp
cld
xchg
movsb
pop
add
stos
push
and
or
fiadds
test
sub
popa
ret
mov
push
test
out
pop
in
dec
inc
mov
sub
jl
jecxz
sub
sbb
push
mov
insb
test
mov
pop
mov
jo
inc
ret
lahf
mov
test
add
sub
roll
add
add
mov
push
bound
mov
jns
jl
or
inc
cmpb
push
int3
xor
pop
lods
jns
fsubs
jmp
ffree
xchg
push
insl
lods
or
mov
xchg
xlat
in
pop
inc
jb
mov
aad
cwtl
std
inc
ficoml
pushf
movsl
nop
std
xor
mov
fwait
sub
repnz
andl
push
or
fdivrs
push
sbb
mov
lret
pushf
add
sbb
ss
sbb
sub
mov
jne
jl
call
fsubs
mov
jbe
dec
sahf
test
test
out
sbb
jg
add
and
jo
jae
push
into
pop
sub
and
lods
mov
jl
sete
push
xlat
mov
inc
ret
mov
xor
int3
sub
add
push
lret
add
sbb
movsl
fsubrs
rorb
jp
loope
fmuls
fwait
jecxz
and
inc
int
add
sub
daa
pop
adc
pop
add
cmpsl
cmp
mov
xor
test
cmp
scas
repz
pop
fistps
arpl
pop
bnd
inc
sti
testl
sub
jmp
jmp
or
pushf
dec
xor
je
outsl
add
mov
and
clc
mov
iret
andl
testl
xlat
sbb
nop
xorb
push
push
aad
mov
xor
cltd
dec
clc
push
push
cmp
nop
mov
lcall
sbb
call
push
ds
add
add
jne
and
and
xchg
mov
pop
sbb
dec
int
popa
mov
xor
pop
fwait
xchg
stc
or
popf
cmp
sbbl
jle
out
in
mov
mov
jecxz
mov
sub
push
aaa
jmp
mov
push
outsb
jns
jo
lea
scas
adc
shl
lcall
mov
fwait
aad
sbbl
mov
leave
jno
cltd
adc
add
mov
xorb
nop
push
pop
mov
xchg
lods
cmp
outsb
lcall
inc
jg
loop
jns
out
push
std
lcall
int
out
popf
test
movsl
pop
mov
pop
push
inc
into
fcoms
addb
xchg
adc
out
inc
cs
and
mov
pop
je
mov
xchg
test
out
clc
gs
jne
pop
dec
aad
bound
iret
loope
shll
add
insl
sbb
iret
loopne
dec
shl
mov
mov
fisubs
add
add
xor
sbb
jmp
jmp
iret
stos
icebp
out
int
pushf
cmc
sbb
movsb
dec
jae
shrl
inc
inc
or
push
aad
fldt
arpl
sbb
ja
mov
test
cltd
lods
and
test
fidivrl
iret
cmp
shlb
pop
test
push
adc
push
or
pop
push
insb
inc
cmp
mov
mov
adc
cmp
and
outsb
ja
stos
jnp
sbb
push
insl
cmpsb
js
cmp
loope
jnp
xor
shr
jge
fstpt
test
fs
add
or
mov
lods
lods
or
movsb
pop
pop
mov
pop
subb
imul
les
jmp
cvtps2pi
stos
andb
pextrw
jg
rclb
pop
cmovne
test
scas
mov
incb
mov
add
dec
adc
adc
data16
mov
xor
mov
jno
in
call
jg
nop
adc
xchg
inc
cwtl
cld
cmc
movsb
hlt
fbstp
movsb
sub
mov
xor
pop
test
sub
leave
sub
inc
mov
push
decb
push
icebp
add
pop
mov
mov
sahf
add
ljmp
int
push
mov
nop
xlat
rcl
pushf
fistps
inc
cmpsb
loop
add
jnp
mov
cmp
or
scas
mov
aaa
push
mov
jbe
out
mov
arpl
inc
xor
mov
push
sub
stos
addr16
rol
lds
xchg
out
cltd
aam
rcll
pop
push
and
sbb
mov
mov
and
mov
js
add
jno
sub
jne
pop
and
sbb
lret
ret
sbb
ficoml
ret
add
sahf
test
jb
loop
push
fisubs
je
out
pop
leave
add
xchg
add
xor
pop
mov
in
add
or
popl
fs
cmpsl
lret
std
sub
psubd
adc
out
sbb
jp
ret
sub
mov
scas
mov
xchg
das
xor
ret
lods
mov
jb
lret
or
ljmp
shl
inc
mov
push
shrb
push
test
xor
outsl
inc
push
jecxz
cmp
xor
cmc
mov
jecxz
fistpl
pop
enter
out
or
push
push
mov
sub
icebp
mov
loope
lods
fs
adc
repz
arpl
push
ret
hlt
mov
pop
cmp
pop
insb
shl
xchg
sub
jb
sahf
pop
mov
testb
int3
dec
sar
out
mulb
in
stc
push
sbb
clc
dec
mov
xchg
and
into
xchg
cwtl
mov
pop
push
push
mov
mov
inc
arpl
adc
test
dec
pop
jns
inc
pop
xor
lods
insl
aam
fwait
pop
adc
imul
cltd
mov
mov
pop
fsubrs
dec
jb
mov
cmp
loope
enter
cmp
push
in
rcrl
mov
inc
cmp
adc
fdivrs
pop
pop
pop
stos
dec
fwait
add
mov
pop
data16
ret
cmp
testb
inc
xchg
nop
pop
pusha
mov
mov
jbe
sub
xchg
mov
inc
xor
cli
mov
jle
nop
push
jl
nop
mov
in
daa
popa
push
and
mov
xlat
push
and
xchg
cld
mov
aas
aas
or
mov
pop
inc
int
into
out
out
loopne
or
pusha
sub
fs
repz
dec
in
inc
adc
jg
push
fldt
lea
push
push
push
pop
sbb
mov
push
dec
lcall
jns
cmc
push
ret
cmp
iret
std
shll
sub
iret
aad
fsubl
and
mov
insl
cmp
es
jns
push
push
loope
jp
es
sbb
leave
xor
mov
insl
cs
push
jno
daa
mov
pop
xor
in
outsl
jo
jecxz
mov
adc
stos
int
fs
inc
inc
imul
jge
xor
loopew
mov
inc
dec
mov
shll
subl
roll
xor
int3
mov
mov
dec
je
jle
add
sub
movsb
cmp
mov
mov
notl
jo
and
mov
shll
add
out
ret
stos
jl
mov
mov
lods
in
gs
cmp
js
push
mov
jns
xor
push
xor
and
jae
mov
push
es
adc
lods
rcll
add
in
mov
test
lods
loop
pop
shll
pop
test
jo
push
in
add
popf
push
push
xor
mov
fidivrs
inc
insl
dec
scas
cmp
mov
inc
fisttps
sub
fwait
push
imul
lcall
adc
sub
xor
xchg
les
aam
xor
or
sub
cs
cltd
out
sub
imul
pop
jle
fidivrs
pop
cmpsb
or
sti
fwait
mov
xorl
cmp
inc
pop
xchg
jb
pop
out
cmp
jle
sti
add
or
sbb
xor
dec
dec
inc
inc
sub
cltd
in
enter
in
xor
mov
sub
lds
sbb
mov
mov
xchg
aam
out
js
dec
ljmp
xchg
in
push
cld
or
mov
ss
scas
and
sbb
mov
pop
push
scas
insl
andl
jo
leave
mov
ljmp
out
jg
leave
xchg
xor
xor
jmp
inc
cld
call
sub
repnz
or
inc
sub
jbe
ss
movsb
je
mov
mov
jecxz
int
sqrtps
pop
loope
xchg
cmp
inc
hlt
adc
movl
add
fst
repnz
ds
push
cmpsl
cld
pop
rolb
xchg
out
test
xchg
jle
jae
fwait
loop
gs
aaa
cs
outsb
cmp
dec
adc
xor
add
mov
call
push
insl
imul
popa
sti
xorl
lcall
cmpsl
dec
sti
dec
push
sub
mov
cmp
mov
cmp
jle
pop
sbb
sahf
test
bound
std
sarb
xchg
mov
cmpsl
dec
mov
bnd
push
add
jb
js
xchg
dec
mov
jp
data16
cld
mov
and
inc
adc
test
insb
mov
push
into
adc
scas
cmp
inc
js
xchg
int
xchg
dec
loopne
xchg
cmc
xor
lret
bound
rcll
inc
fwait
inc
mov
fmuls
jge
arpl
push
lock
test
cwtl
popa
test
cmpsl
loop
jb
cmp
sub
xchg
jp
push
test
or
lea
jl
push
xor
cmp
jge
stc
mov
adc
or
lods
lret
dec
popa
stc
mov
xchg
dec
test
jge
enter
cwtl
mov
pop
xor
and
rcrb
mov
jmp
aam
arpl
sub
xor
pop
arpl
sub
test
lret
dec
lea
mov
das
lods
push
sbb
scas
repz
and
sldt
faddp
cld
lcall
mov
out
adc
pop
fimull
jnp
mov
sub
es
cmp
pop
add
mov
lds
sub
jecxz
ljmp
addr16
sbb
mov
mov
dec
xor
inc
ljmp
inc
dec
out
jecxz
imul
mov
jbe
dec
rcl
inc
sbb
in
jo
icebp
mov
rcl
add
popa
cmpl
sbb
aaa
insl
jle
ret
ret
mov
pop
jp
or
mov
aaa
in
or
std
xchg
add
inc
jge
je
cmp
lret
aas
lcall
cli
push
adc
aas
fsubl
out
incb
mov
enter
mov
iret
mov
pushf
imul
dec
add
les
les
rorl
aam
mov
mov
xchg
sbb
push
or
jg
add
int3
mov
jle
data16
inc
aas
int
add
dec
pop
or
out
mov
xor
pushf
inc
or
call
aad
dec
cld
cmpsb
pop
ljmp
sub
insb
pop
sbb
sarb
aaa
test
pushf
mov
fwait
out
hlt
mov
push
lods
in
loope
ret
fstps
imul
push
jns
mov
les
loopne
cmpsb
movsl
jmp
push
ja
fldcw
scas
iret
mov
jo
push
cli
cld
ja
icebp
pop
rcll
ds
lods
pop
and
daa
xchg
leave
adc
arpl
mov
mov
and
cmc
add
dec
mov
imul
pxor
or
add
dec
mov
jb
lds
mov
adc
les
js
rolb
jge
iret
jmp
je
inc
push
xor
xor
rorb
push
or
adc
inc
jmp
mov
fnsave
cltd
adc
loope
add
adc
push
xor
xor
inc
fldcw
push
cld
fld1
xor
clc
sub
cmpsb
dec
mov
cmc
fildll
cwtl
mov
les
fisubl
inc
xchg
adc
out
sbb
dec
push
dec
inc
roll
ljmp
jle
mov
pushf
ja
in
dec
lds
les
shrb
outsb
stos
popl
ljmp
push
xchg
in
jp
sbb
addl
pushf
lea
xor
mov
sub
lods
push
aam
imul
pop
push
iret
mov
dec
dec
pop
imul
cmpsl
ret
dec
aam
pop
cmp
es
ret
cmp
stos
xor
fiaddl
sub
sti
fwait
pop
push
or
xorb
inc
and
or
push
xchg
cmp
lcall
mov
je
cwtl
ror
xor
pop
loope
mov
rcl
roll
shll
add
rcrb
mov
shrl
mov
mov
add
mov
add
loope,pt
ret
jecxz
mov
mov
jb
imulb
pusha
mov
and
xor
bound
mov
mov
adc
and
loop
dec
outsb
xor
sti
lds
insl
mov
shrb
pop
scas
rcrb
pop
mov
sub
lret
bound
mov
and
dec
inc
inc
mov
pushf
mov
incl
xchg
pusha
std
mov
inc
xchg
pushf
xchg
sbb
shlb
loop
incl
cmpsl
mov
sti
leave
sub
lfs
icebp
rolb
inc
pop
inc
adc
jmp
ficoml
movsl
sub
fcompl
fstpl
sbb
mov
aad
sahf
scas
icebp
or
mov
and
enter
aad
aas
add
imul
push
aam
shrl
and
adc
xchg
stos
sarb
faddp
xorb
pop
ret
sbb
or
fcomp
pop
xchg
orb
sub
cmp
in
sbb
pop
sbb
js
clc
pop
jne
pop
mov
insb
sahf
or
ljmp
in
inc
call
daa
mov
jp
cld
in
pop
xor
sub
lods
test
push
pop
mov
mov
sbb
loope
mov
outsl
cld
cmp
movb
ret
rolb
in
and
sbb
mov
mov
adc
adc
mov
fiaddl
movsl
pop
lds
fistpll
pop
and
stos
push
jge
pusha
in
xchg
dec
out
loopne
pop
imul
movsl
cld
push
inc
mov
icebp
daa
push
push
or
addr16
mov
popa
movsb
rcl
loope
add
adc
es
aam
and
cs
sbb
in
loop
daa
jmp
dec
ljmp
inc
inc
aaa
inc
mov
pop
nop
ljmp
aad
pop
sub
mov
mov
leave
scas
mov
sbb
iret
and
or
cmc
mov
das
mov
scas
push
mov
aaa
jge
mov
dec
rorl
in
ret
fldl
test
lds
lock
leave
dec
sbb
les
repnz
xchg
fbstp
lret
fidivrs
nop
jae
mov
cmp
pop
sub
mov
and
fcom
inc
sarl
dec
inc
arpl
cmp
arpl
pop
mov
movsl
fmul
aas
lea
jmp
out
addr16
jne
lret
xor
push
mov
sahf
push
sub
push
dec
jmp
jne
cmp
aam
or
lds
mov
repz
popa
repz
and
push
into
sbb
out
loopne
mov
stos
es
mov
sti
cmp
pop
insb
mov
outsb
mov
mov
mov
lods
xor
jns
mov
dec
inc
or
or
xchg
dec
imul
call
jbe
aas
out
push
cmp
lahf
fisubs
int3
and
enter
mov
lret
adc
lods
sub
lret
sub
xchg
repnz
pop
and
xorb
dec
adc
dec
aaa
leave
jmp
push
xor
mov
cltd
adc
jl
push
rolb
jecxz
loop
inc
adc
lds
push
push
fucomp
cmp
push
mull
inc
shrb
mov
mov
movsb
clc
test
push
sub
xchg
sti
mov
clc
mov
cwtl
cmpsl
jbe
andb
fs
dec
shrl
add
xor
call
sub
dec
fstl
call
and
sbb
cmpsb
or
iret
bound
inc
dec
clc
pop
adc
mov
lds
sbb
subl
push
cmp
shlb
sbb
aam
aas
pushf
fisubl
push
jnp
inc
pop
jnp
mov
and
lret
sbb
push
or
jle
loop
fs
sbb
jnp
cs
push
or
aas
subl
add
or
xlat
mov
int3
cmpsb
pop
fsubrp
adc
mov
or
and
sbb
loop
fxch
mov
dec
aaa
shlb
aad
cwtl
sbb
jb
jmp
and
test
inc
push
orb
or
scas
ljmp
loop
xor
std
repnz
sarb
arpl
insl
scas
and
mov
pop
lds
sub
jecxz
bound
bound
lods
cmpsl
xor
pop
push
pop
xor
inc
xchg
loope
mov
in
sarb
imulb
mov
jmp
push
and
fwait
mov
je
mov
push
cmp
inc
jle
jb
aad
call
test
push
jo
push
sub
shl
xchg
ficompl
test
mov
adc
mov
dec
sub
sub
or
or
daa
add
pop
sbbl
pop
out
dec
cmpl
and
pop
mov
or
sub
insl
cmpsb
imul
add
mov
xorb
fs
dec
push
push
push
js
add
daa
cmp
pusha
into
inc
cmp
mov
or
jle
imul
in
or
mov
mov
lods
mov
and
xor
daa
mov
sbb
xlat
jae
xor
pop
jno
mov
lret
insl
mov
loopne
out
addr16
loopne
push
lahf
pop
dec
sub
push
sub
lcall
cmp
shlb
sub
daa
push
pop
jno
inc
pop
iret
cli
dec
lret
dec
popa
test
mov
popa
mov
push
aaa
lret
lahf
sub
ffreep
movzbl
pop
fildl
xchg
dec
xor
outsb
aad
push
or
or
popf
repnz
and
insl
out
jecxz
rorl
lahf
repz
rorl
push
xchg
sahf
fists
into
mov
cmp
jl
into
sbb
cwtl
cli
pop
addl
pop
or
lods
lods
nop
sub
pop
xor
fwait
out
xchg
jl
aam
mov
lcall
fs
repnz
hlt
push
test
pop
and
dec
loopne
pop
push
inc
push
cld
outsl
les
dec
mov
shlb
loop
leave
imul
sub
adc
cmpsl
or
enter
mov
jae
mov
imul
and
xor
movsl
enter
cmc
jle
pop
mov
aas
push
int3
xor
sbb
repnz
fst
inc
sbb
pushf
jmp
js
inc
mov
lahf
jae
inc
push
es
repnz
push
jb
dec
and
addl
ljmp
sbb
insl
and
mov
pop
jns
nop
mov
and
insb
jae
add
jecxz
add
test
push
les
cmpsl
test
and
mov
xor
cmp
add
out
mov
aaa
xchg
mov
sub
or
mov
test
mov
jl
dec
pop
xchg
cmp
repnz
gs
pop
in
test
pop
mov
inc
scas
pop
icebp
xchg
movsl
jmp
inc
jg
pop
mov
stc
xlat
std
inc
jp
adc
bswap
sti
mov
loope
add
sub
out
cs
test
stos
arpl
xchg
lahf
je
mov
add
cmp
cmpsb
inc
sub
add
test
add
lret
mov
jecxz
push
jmp
gs
push
and
and
xchg
sub
or
sahf
cltd
daa
mov
cmpsb
daa
addr16
lcall
jp
mov
cmp
shlb
inc
sbb
xor
pop
add
ret
addr16
fsubrs
aaa
inc
cmp
loop
mov
sbb
les
cmp
pop
adc
dec
sbb
xor
and
js
push
sbb
in
cltd
add
xor
xor
fwait
dec
data16
aaa
xchg
shll
mov
xor
and
adc
mov
gs
es
push
lahf
push
nop
out
jnp
push
or
add
xchg
les
ds
cld
rcll
jg
ds
scas
mov
rorl
or
outsb
enter
sbb
and
xor
lret
lcall
mov
sbb
test
xor
mov
mov
dec
adc
jl
jg
xchg
mov
cmp
inc
pop
ret
aam
xor
pop
imul
mov
mov
mov
repz
jecxz
and
mov
jne
arpl
dec
loope
push
in
sub
mov
stc
imul
cmp
adc
roll
sbb
dec
and
push
clc
jle
inc
push
add
fistps
or
test
mov
push
je
adc
ret
sbb
in
shll
adc
test
shl
dec
mov
in
daa
xor
pop
push
mov
mov
or
sbb
jo
xchg
arpl
insl
shlb
mov
clc
fldt
mov
into
mov
mov
mov
add
or
pop
sbb
mov
sarl
mov
lret
cmp
daa
scas
cld
mov
ds
movsl
push
pop
xor
push
out
mov
sbb
mov
jle
ret
and
ret
clc
sti
in
in
in
test
aas
add
sub
lret
jae
sbb
cmp
fildl
popa
arpl
pop
lahf
int3
std
testl
jbe
mov
xor
push
push
scas
std
les
xlat
pusha
add
inc
jno
ss
jno
fisubrl
out
push
lds
jbe
lret
jbe
jns
xchg
or
pop
sub
dec
and
mov
fnstcw
clc
inc
and
xor
sub
addb
addr16
adc
ret
in
call
jb
or
pop
push
inc
pop
push
in
in
jg
or
mov
sbb
pop
insl
std
push
cmp
mov
inc
xchg
sbb
sbb
push
or
mov
lock
pop
and
sbb
dec
int3
fmuls
xchg
cmc
jg
add
mov
add
pop
or
outsl
cmpb
int3
lods
push
xchg
push
push
scas
dec
jg
fwait
pop
popa
jecxz
shrl
mov
andb
lret
jmp
pop
cld
in
mov
scas
mov
push
dec
data16
imul
and
sub
sub
jg
xor
data16
inc
in
mov
mov
mov
mov
inc
xor
mov
in
fcompl
sbb
aaa
jb
inc
cmp
xchg
jp
inc
xchg
sub
movsb
imul
test
push
out
cmp
lret
les
inc
adc
rolb
idivl
repz
cwtl
in
xor
adc
sti
push
fnstenv
int3
loopne
or
mov
ret
repz
inc
das
push
xor
rcrl
jnp
push
cmp
or
jge
push
stos
and
data16
xchg
inc
insb
cs
insl
mov
xor
hlt
fwait
add
jmp
and
mov
data16
mov
or
je
imul
mov
shrl
test
stc
rorl
popf
jo
into
mov
and
in
hlt
bound
pop
xor
leave
push
lea
je
inc
iret
ljmp
mov
sub
push
inc
popa
jmp
mov
jl
push
dec
test
mulb
out
sbb
insl
xchg
test
shlb
pop
mov
aas
xchg
pop
xchg
adc
xchg
xor
mov
push
push
js
push
xchg
dec
notl
test
cwtl
pushl
gs
addr16
fsts
loopne
mov
data16
out
pusha
data16
movsb
pop
mov
xlat
mov
or
xchg
mov
repz
xchg
xor
mov
mov
adc
inc
rcrb
xor
loope
sub
jbe
pop
or
inc
adc
sub
rcr
dec
jecxz
jmp
jnp
ret
popl
pusha
mov
arpl
repnz
cmp
push
repz
pop
adc
clc
mov
jb
add
and
stos
dec
or
aam
pop
xchg
dec
mov
in
or
iret
out
int3
ret
rcr
dec
outsl
shll
cld
mov
enter
and
and
xchg
lahf
mov
lea
mov
enter
in
cmc
dec
jecxz
dec
lcall
out
or
imul
sbb
inc
push
dec
cmp
and
pusha
jle
repz
pop
sbb
cmp
dec
or
pop
outsl
ds
xor
repz
pop
out
xchg
add
lahf
dec
sbb
test
push
pusha
mov
xchg
loopne
pop
adc
jl
std
aas
dec
pop
stc
lds
push
hlt
or
pusha
mov
je
inc
test
sub
inc
aas
cli
scas
cld
das
add
imul
stc
outsb
jnp
push
and
xchg
push
inc
pop
jl
enter
aad
ds
sbb
int3
sbb
insl
push
adc
sbb
shlb
in
or
adc
mov
pop
mov
lahf
mov
stos
fs
scas
popa
or
sbb
xorl
push
int3
push
dec
xor
movsb
or
and
cmpsb
xchg
lcall
dec
pop
mov
and
fidivs
mov
movq
arpl
les
fsubs
cmp
push
push
enter
jno
lret
out
lock
pop
data16
sarl
xchg
push
add
stos
rorb
sbb
push
xchg
mov
dec
in
ret
sarl
push
xchg
xchg
jp
test
mov
lock
bound
fmuls
adc
xchg
push
mov
sahf
xchg
dec
mov
adc
arpl
int
and
ficoml
js
loopne
sub
rclb
dec
aaa
pushf
repz
notl
mov
xchg
xchg
lahf
fistps
jne
stc
fists
lret
ret
xchg
mov
lock
jnp
mov
mov
rcrl
cmp
add
mov
in
push
cmp
cmp
xor
xor
cltd
addr16
imul
int
xor
inc
call
int
outsl
cmp
push
jecxz
adc
or
mov
inc
mov
lahf
dec
sbb
sbb
lret
mov
scas
cltd
out
and
pop
inc
add
icebp
push
scas
lcall
dec
lods
jmp
loop
lock
aam
and
sbb
jp
stc
int
bnd
stc
lods
dec
es
rcr
cld
or
add
xor
mov
add
jle
xor
aaa
repz
and
cmp
stos
testb
inc
int
ja
pop
or
js
adc
imul
mov
ja
mov
mov
xlat
int
es
mov
fistpl
outsl
xchg
stos
leave
nop
fistpl
push
xchg
stc
sbb
inc
or
iret
jne
pop
push
iret
inc
cmp
out
or
mov
rcl
adc
lahf
xchg
mulb
mov
outsb
aaa
ret
pop
movl
sub
decl
push
mov
sbb
or
xor
cmpsb
hlt
mov
cmp
jmp
sbb
or
lods
and
dec
insb
mov
lcall
rcrb
stc
cmp
mov
dec
rcr
lcall
sahf
add
ret
in
loope
cmpsl
clc
sub
push
jmp
call
mov
pop
mov
pop
sbb
push
fstpl
pushfw
insl
mov
mov
push
xchg
stos
orb
mov
out
cs
xchg
inc
cmp
xchg
fcmovbe
xchg
push
sub
lcall
popa
stos
movsl
or
push
cmp
scas
insw
fdivl
ret
inc
adc
add
movsb
adc
add
movsl
mov
ljmp
push
push
out
mov
push
jecxz
fisubs
ret
add
mov
or
adc
mov
insb
push
jb
push
mov
push
mov
adc
cmpsb
mov
int3
scas
sbb
imul
xchg
mov
xchg
mull
push
fdivrl
fisubrl
push
ljmp
mov
xor
out
pusha
filds
nop
cmp
lock
mov
mov
mov
ds
or
out
dec
xchg
lock
mov
in
mov
loope
aas
rclb
popa
sub
xchg
nop
cmc
std
pop
cmpl
pop
mov
jne
and
mov
xor
cli
fsub
aam
aam
fwait
out
xchg
scas
or
int
xor
jo
mov
or
xor
loopne
push
ljmp
push
shlb
jne
jmp
add
adc
xor
out
mov
inc
and
push
incb
pop
pop
inc
mov
mov
stc
pop
sti
call
sbb
pop
jae
out
add
outsb
pusha
cmp
add
xlat
imul
sbb
fnstenv
std
sub
ss
push
insl
push
xchg
fwait
dec
aas
adc
xor
jge
mov
leave
jmp
ret
sbb
rcrb
imul
andl
xor
and
jo
mov
lcall
enter
lret
and
in
add
jmp
ja
dec
sub
cmp
mov
mov
dec
xchg
xchg
mov
mov
imul
insl
jo
je
popf
push
js
adc
xor
pushf
or
push
jge
and
ret
push
dec
lcall
aad
insl
jns
or
test
mov
in
sbb
xchg
dec
int
into
incl
adc
mov
push
enter
inc
and
je
xor
subl
fistpl
shll
adc
in
xchg
leave
ljmp
ret
enter
bnd
lcall
inc
mov
push
movsl
mov
sahf
mov
test
stos
cmp
inc
pop
sub
inc
addr16
cmc
sbb
cli
notb
int
sbb
pop
mov
and
xchg
inc
scas
out
ljmp
mov
push
or
mov
dec
subl
mov
mov
or
adc
adc
arpl
jne
jp
cmp
cmp
cwtl
fldcw
mov
ret
ficompl
mov
push
popf
pop
out
dec
jns
pop
mov
cltd
mov
fwait
xor
fisttpll
test
mov
adc
mov
ret
into
inc
mov
mov
jbe
ret
mov
fnsave
aam
rcll
mov
sbb
test
sub
scas
mov
aad
and
pop
push
sub
xchg
jb
mov
stos
push
add
mov
or
clc
les
mov
mov
push
dec
inc
mov
sbb
pop
cmpsl
out
out
inc
jl
int
jnp
cld
inc
mov
and
hlt
and
inc
mov
fimull
sbb
inc
pop
push
shrb
nop
add
fmull
aas
pop
sub
das
jmp
cmc
dec
idivl
stos
mov
je
ja
jg
out
push
add
dec
inc
in
mov
lods
sub
push
lock
scas
outsl
or
test
scas
fs
cmp
adc
ljmp
sbb
xor
lods
mov
adc
js
xchg
inc
scas
out
bound
fidivs
daa
pusha
pop
xchg
xchg
lods
push
pop
pushf
in
js
push
js
lcall
out
pop
les
jp
and
les
pop
push
push
scas
sbb
jge
xchg
bound
jo
add
enter
cltd
out
lret
in
leave
xor
pop
addl
inc
sub
mov
jo
push
ret
mov
mov
adc
dec
xchg
inc
adc
jp
mov
mov
movsl
sbb
into
mov
push
std
sbb
pop
stc
fstl
push
add
lds
xchg
add
aas
adc
lahf
adc
popf
lock
xchg
dec
jbe
adc
sbb
sub
push
jg
jbe
movsb
mul
test
je
jecxz
cmpl
mov
mov
ss
das
or
push
aaa
mov
popa
lods
pop
mov
je
and
push
fdivl
and
aaa
cs
push
xlat
decb
dec
adcl
mov
test
mov
sub
push
ss
xchg
jns
xor
push
outsl
das
cmc
xor
mov
hlt
pop
jmp
pushf
rolb
or
ficompl
dec
inc
push
add
jp
cmp
sub
mov
push
loopne
fnstenv
les
mov
dec
lods
dec
dec
push
lret
out
aas
mov
repnz
push
xchg
push
xor
nop
in
mov
add
out
push
xlat
stos
pop
mov
jno
insl
xchg
pop
lret
ds
push
aad
mov
jae
loop
mov
loop
ret
jne
mov
bound
inc
test
adcl
dec
arpl
enter
jmp
sub
icebp
or
sahf
adc
stos
fidivs
mov
into
cwtl
sbbb
enter
sub
xchg
inc
jno
inc
lahf
stos
leave
xchg
mov
push
sti
fnstcw
jle
cmpsl
ds
dec
nop
sub
dec
stos
fiaddl
sub
push
stc
add
cmp
data16
decl
scas
xorb
mov
cmp
add
popf
xchg
cmp
dec
jns
icebp
mov
sar
inc
inc
nop
push
mov
unpckhps
inc
mov
movsl
js
out
jmp
sub
ret
testb
test
mov
cmc
rcrb
stc
add
cmp
xor
adc
mov
lcall
jno
inc
mov
xor
sub
mov
push
jg
jg
into
jne
dec
cmc
push
cmp
loopne
lret
pop
push
cmp
outsb
and
adcb
cmpl
pop
mov
jmp
mov
mov
iret
out
sub
imul
stos
push
or
push
inc
test
out
negl
or
rorl
cwtl
push
in
xor
xor
insl
sbb
mov
and
mov
dec
mov
mov
aas
jle
ljmp
inc
mov
push
outsl
dec
call
int
sbb
and
cwtl
push
sbb
popa
pushf
jg
and
aam
inc
inc
xor
or
push
imul
push
mov
ss
idivb
out
les
xchg
cmpsb
out
subb
loope
pop
dec
mov
push
sub
es
neg
sub
lods
add
call
sbb
ja
push
mov
xor
add
adc
mov
and
aas
call
xor
cltd
and
ret
fisubl
push
ret
mov
and
mov
xchg
mov
jle
pop
pushf
lock
popa
testb
aad
add
fcmovnb
jne
xchg
bound
fmull
insb
mov
fcomps
shl
xor
sbb
shll
scas
pop
ljmp
mov
mov
mov
push
or
push
sub
dec
jge
dec
rolb
aas
mov
push
cld
aam
fisubrs
mov
js
xor
icebp
shr
in
mov
nop
or
adc
popf
xor
repnz
xchg
test
fadd
stos
push
orl
sub
repnz
in
xchg
imul
fiadds
and
pushl
lret
cs
xchg
lret
pop
mov
sbb
ss
mov
cmp
sub
mov
das
mov
pop
adc
mov
movsl
movsb
or
ret
lods
dec
rcl
jl
inc
std
xlat
inc
mov
ret
jp
mov
popf
jp
add
pushf
mov
push
cmp
lret
filds
sub
sti
sub
dec
outsb
jo
test
ja
out
jo
jge
pop
push
shll
pop
sbb
nop
fsts
xor
jb
outsb
shrl
sub
out
or
pop
xorl
lods
arpl
push
push
mov
push
test
cmpl
jp
fisubrs
arpl
xor
sbb
xchg
test
mov
cmpsb
jmp
dec
adc
cmp
lret
loope
dec
fnstsw
aad
adc
mov
xor
mov
fwait
aam
lret
mov
rolb
xchg
adc
mov
cli
push
cmp
leave
aad
je
test
pop
fisubrl
cmp
sub
jl
xchg
cmc
data16
out
dec
daa
pop
and
push
adc
push
xchg
jle
sahf
mov
adc
mov
sub
repz
push
inc
incl
int3
cmp
sub
xchg
xor
into
lods
sub
or
mov
loop
ljmp
pop
sarl
aad
add
mov
pop
mov
leave
das
inc
inc
jne
mov
dec
and
and
or
ja
xchg
xor
mov
xchg
ss
xchg
jg
push
cmp
lock
pop
fwait
push
in
lock
icebp
mov
cmp
test
lds
jae
dec
in
outsb
xchg
fistl
rclb
mov
ret
imul
xchg
fnstcw
jne
in
mov
mov
adc
mov
cmp
arpl
je
aaa
out
mov
cmp
jns
daa
mov
lds
add
inc
in
push
and
mov
dec
aam
sti
push
xor
mov
mov
or
mov
pop
sbb
pusha
ljmp
adcl
sbb
mov
lods
mov
stos
in
sarb
arpl
pop
testb
sub
inc
pop
inc
adc
incb
aas
loop
jle
or
pop
pop
or
mov
adc
inc
imul
push
fs
popa
adc
lahf
orb
sbb
push
test
pop
aas
bound
imul
outsl
or
xchg
xchg
stos
xlat
pop
inc
daa
sub
lock
push
insl
jns
test
xor
cld
cmpsb
mov
imul
scas
xor
xor
iret
and
mov
lds
xchg
dec
outsb
add
js
aad
orb
sti
add
loopne
mov
loope
jo
and
jo
stc
add
or
pop
shrb
pop
dec
movsb
add
xchg
and
mov
jne
lcall
sahf
xchg
fstl
push
int
pop
and
jb
arpl
sub
shll
jge
xor
outsl
cli
mov
jge
adc
or
sub
fld
jg
cmp
jl
rcrl
pop
jae
xor
and
data16
sbb
pop
lret
iret
loop
mul
lcall
add
mov
cmpsb
fstpt
push
cmp
dec
sub
dec
dec
cmc
es
mov
popf
add
ss
mov
jb
gs
mov
fnstenv
insb
xor
arpl
pop
xor
mov
inc
lea
outsl
rclb
js
pop
stos
stc
xchg
mov
call
jbe
push
sub
xchg
dec
xor
fs
mov
jbe
stos
test
lea
adc
mov
sahf
lds
pop
out
and
mov
fs
cmp
ljmp
cmp
cmp
mov
fwait
es
jae
adc
xor
out
xor
dec
xor
jp
notl
movsb
add
nop
cmpsl
popa
pushf
adc
es
sub
push
pop
adc
add
ljmp
sub
mov
xor
mov
nop
arpl
cld
fwait
sbb
xchg
xor
ss
mov
imul
lret
jl
sbb
lret
xchg
pusha
out
push
inc
ror
mov
lock
insb
mov
add
xor
pop
pushl
inc
or
decb
cmp
pop
xchg
push
cli
nop
cmp
daa
lock
out
clc
jp
mov
adc
out
jmp
clc
out
xor
mov
mov
mov
mov
sbb
rorl
movsb
pop
adc
fildl
fcmovnbe
pop
xor
add
mov
and
dec
cmp
int3
stos
andb
add
lods
jnp
push
popf
aas
in
sub
idivb
mov
loop
inc
ret
add
jecxz
loopne
in
pop
sub
fidivl
hlt
sahf
fwait
mov
mov
push
sbb
ja
push
out
idiv
loop
cmpsl
aam
mov
leave
or
pop
jb
dec
out
cmp
sbb
in
clc
aaa
cmp
unpcklps
dec
sbb
lret
mov
pop
cmp
xor
mov
jo
addr16
das
xor
icebp
xchg
sbb
inc
jge
jbe
ret
push
add
xor
je
cmp
push
mov
cmp
mov
repz
sub
xchg
push
inc
push
xchg
mov
sub
movsb
sbb
dec
loope
push
dec
push
and
sbb
cld
in
add
adc
cmpsb
lcall
lret
mov
jle
sbb
ffreep
dec
cltd
jno
mulb
push
popa
pop
es
imul
loopne
push
outsb
jae
inc
xor
cmp
mov
in
lock
leave
dec
xor
cmp
cmp
xchg
mov
jbe
sub
or
mov
inc
jge
mov
cmpsb
xchg
xchg
mov
shl
mov
ficomps
arpl
xchg
push
sbb
imul
lahf
xor
call
pop
jp
jns
or
mov
pop
popa
frstor
stc
rcrl
movsb
mov
mov
scas
sub
push
lret
sbb
push
sahf
rorb
es
fldcw
out
iret
inc
rclb
or
lcall
xchg
das
cmp
xchg
mov
iret
fisubl
aas
xchg
sub
fcompl
sbb
insl
push
test
sub
popf
in
lahf
pop
mov
mov
mov
push
and
adcl
je
push
movb
xor
jecxz
test
shr
fwait
insl
or
mov
mov
push
imul
lret
loopne
mov
cld
or
cli
cmp
cmpsb
mov
cld
faddl
fimuls
inc
xchg
stos
mov
push
adc
dec
push
scas
xchg
mov
gs
jno
in
or
divl
jne
xor
and
pop
mov
push
xchg
sub
push
int
movsl
ficompl
leave
mov
mov
sbb
pop
iret
cwtl
push
mov
pop
or
xchg
mov
cwtl
jg
push
add
sbb
or
or
shlb
rcrl
jno
out
xchg
mov
sbb
cmpl
mov
ret
mov
sbb
xor
xlat
mov
lea
sbb
xor
xchg
inc
in
inc
xor
sub
ret
or
into
mov
sub
jbe
and
mov
xchg
movsb
or
je
in
xchg
test
or
aad
shll
fsubs
jo
cmp
ja
push
dec
cwtl
xor
imul
nop
add
adc
inc
loope
jmp
sbb
or
or
adc
mov
out
mov
imul
lods
int
jmp
fs
leave
loope
js
jg
sbb
icebp
popf
jmp
aaa
cmpsl
mov
jo
cmp
push
cmp
cmp
jle
sarl
adc
outsb
mov
and
pop
int3
std
sub
sbb
aam
cmp
push
mov
cmpsl
xchg
insl
mov
or
fucomip
in
idiv
subb
inc
add
xchg
fsubrl
add
pusha
imul
in
jge
insl
xlat
lcall
sbb
pop
fadd
dec
inc
xlat
jae
ret
bnd
sbb
mov
loopne
test
sub
stc
mov
leave
arpl
xchg
or
imul
dec
imul
fcoml
hlt
rcrl
ljmp
mov
push
xor
dec
add
fwait
insl
les
add
fldl
or
inc
inc
shr
sub
mov
fnsave
stc
in
sub
fldenv
fisubl
push
nop
inc
fs
daa
lahf
addb
or
jp
mov
add
scas
push
and
clc
mov
sbb
mov
test
xor
pushl
inc
and
xchg
rorb
cmp
lea
jl
xor
fidivrl
aas
insl
gs
mov
call
repz
imul
and
push
add
mov
data16
js
lahf
stc
cmp
sbb
fs
ljmp
adc
filds
pop
mov
inc
dec
in
ds
push
ljmp
int
mov
push
subl
xor
xchg
imul
sbbl
mov
jns
ret
imul
push
into
stc
lea
fwait
push
cltd
in
test
addr16
test
mov
jmp
adc
cwtl
sub
repnz
add
cld
and
int3
fiadds
push
add
add
loopne
iret
jmp
das
jae
sub
fwait
xor
into
out
pop
rorl
dec
adc
test
mov
data16
xor
cmpsl
arpl
imul
data16
fsts
or
add
jno
es
int3
ljmp
mov
xchg
mov
sbb
push
dec
clc
pop
repz
mov
shlb
jecxz
movsl
pop
dec
loope
adc
shll
out
stc
sbb
push
je
xor
dec
push
movsl
jb
jp
mov
dec
adc
popf
add
pop
pop
popa
mov
pop
fdivr
adc
mov
outsb
loope
jns
xlat
cmp
or
sahf
stc
mov
sbb
jae
ja
daa
dec
fwait
mov
cmp
cmpsb
testb
in
sub
jecxz
jl
ljmp
std
stos
mov
jae
movsl
lods
xchg
outsl
test
add
cli
rcll
inc
pushf
dec
out
jecxz
xor
aam
fistpll
cmpsl
jecxz
sub
fwait
mov
or
adc
fs
cmpsl
dec
jne
scas
xchg
faddl
pop
fstpl
fsubl
fs
insl
pop
cmc
shll
pop
mov
test
out
cmp
loopne
sbb
fsubrp
and
mov
nop
pusha
push
aas
cld
adc
arpl
das
test
outsb
in
mov
jge
sub
push
aas
and
inc
inc
jb
and
outsb
or
decb
adc
ss
lret
fs
fcoml
repnz
jbe
cltd
lcall
pop
xchg
repnz
cld
jmp
addl
dec
stos
out
jno
lret
or
repz
in
xchg
xchg
sbb
iret
push
cmp
hlt
xor
stc
call
jne
lret
sbb
sahf
shl
mov
popa
push
inc
and
add
xlat
aam
int3
fsincos
mov
repz
mov
push
push
inc
mov
nop
outsl
int3
sub
inc
mov
and
jb
in
or
jne
movsl
fsubrl
sbb
inc
fs
test
add
mov
mov
mov
js
leave
pop
dec
es
sub
outsl
icebp
jp
mov
imul
dec
in
filds
ja
movl
cli
mov
jbe
mov
pop
cwtl
mov
inc
sub
in
sti
or
sub
pop
add
aaa
xchg
cld
in
xor
bound
pop
and
popf
mov
cmpsb
pop
adc
xchg
arpl
stos
ja
mov
lret
sahf
mov
outsl
int3
nop
cmp
xor
ficomps
xchg
and
pop
outsl
call
lock
mov
lret
pushf
dec
add
adc
das
push
ljmp
aad
dec
push
lahf
cmp
cmp
in
push
fwait
cmp
mov
inc
movsl
shlb
mov
pop
xchg
out
in
stc
mov
shrl
pop
fwait
add
sbb
pop
xor
pop
jne
pop
in
pop
push
mov
jb
fs
lods
and
add
data16
aad
adc
scas
xchg
movhps
and
les
adc
fiaddl
fnstsw
fldenv
xor
mov
cmp
loopne
out
mov
and
stos
xchg
pop
push
fldcw
scas
jmp
xor
pop
dec
sbb
and
sub
and
xor
aad
jb
out
aaa
or
fbld
addr16
test
or
outsb
jb
stos
fldenv
rcrb
inc
xchg
jge
sbb
mov
pop
cmp
in
push
mov
cmp
outsb
ja
aaa
cmp
xchg
jns
ljmp
dec
dec
xor
push
mov
rclb
ljmp
les
test
daa
pusha
stos
sbb
mov
rcll
sub
fists
mov
push
mov
push
push
add
sbb
jno
cmc
in
pop
daa
dec
push
ljmp
adc
sahf
dec
push
or
sbb
inc
xchg
or
mov
mov
leave
jl
sbbl
add
jns
fisubl
push
add
dec
push
cmpsl
loope
test
cmpl
and
push
addr16
or
in
out
pop
das
subl
push
lahf
mov
out
dec
lret
mov
pop
cltd
pop
aad
cld
dec
xor
nop
sbb
in
hlt
outsl
inc
fs
popa
and
push
mov
pop
cmp
std
sbb
mov
jno
ret
cmp
fs
pop
sub
ds
lods
xor
sbb
dec
mov
cli
fldt
xchg
dec
mov
stos
inc
fsub
mov
sbb
lret
jb
pop
jns
rcrb
fsubl
cld
rorl
sub
cltd
jbe
je
in
xor
sbb
iret
test
fnstcw
lds
cmp
dec
testb
bound
loope
cs
imul
sbb
movsb
pop
loopne
mov
pop
repz
push
std
popf
dec
sahf
push
iret
pop
sbb
idiv
aas
outsb
mov
pop
push
sbb
into
popa
popa
xor
sahf
shll
sub
inc
cltd
cmp
sub
out
xchg
xchg
enter
shr
rorl
dec
sbb
sbb
inc
push
mov
mov
inc
mov
inc
call
xlat
mov
mov
xchg
jo
mov
pop
inc
xchg
xor
pop
movsl
xchg
mov
inc
pop
mov
cmp
lahf
maxps
repnz
or
lock
or
jmp
pop
nop
out
lahf
sub
xor
xchg
clc
ret
scas
cs
inc
dec
push
sbb
jo
movsb
jbe
fsubs
es
fisubrl
pop
inc
jl
leave
outsl
notl
in
ret
repz
lret
lret
rol
jl
cmp
sbb
xlat
sbb
or
in
pop
jge
sbb
dec
insl
mov
shrl
adc
inc
cld
imul
das
scas
add
adc
cltd
jno
inc
cmpb
addr16
dec
mov
popf
movsl
imul
shrb
xor
sbb
or
es
inc
stos
mov
xor
add
fnsave
jecxz
in
jbe
xchg
dec
or
mov
sub
sub
and
cmp
xchg
mov
das
loopne
leave
ret
arpl
call
gs
xchg
pop
mov
mov
pop
cwtl
test
pop
jbe
mov
hlt
or
xor
lods
imul
mov
mov
pop
fisttps
dec
js
dec
lods
cmp
mov
xchg
ret
mov
or
mov
xchg
and
xor
push
and
sub
jnp
fs
test
cmp
mov
iret
mov
add
aaa
insb
pop
fstps
xor
inc
xor
daa
outsl
clc
adc
retw
and
mov
or
sub
fcomi
adc
inc
inc
pop
lahf
enter
xchg
lock
push
int
es
stos
dec
sbb
xchg
push
sbb
pop
cld
fiadds
addr16
dec
xchg
cwtl
or
loope
sub
fimuls
cwtl
sahf
mov
adc
fs
pop
movsb
mov
dec
sbb
sub
icebp
aad
pop
clc
push
jge
push
inc
cld
loope
and
xchg
mov
adc
imul
daa
call
fstpt
fsubrl
jae
cmc
add
cmp
xor
gs
shlb
or
lds
ds
or
and
aam
push
sub
stc
out
add
add
aaa
shll
gs
bound
int3
push
outsb
and
push
push
sub
adc
mov
push
cmpsb
imul
sbb
int3
xchg
out
fsubs
bound
jb
xorps
xchg
shlb
sbbb
int
les
pop
ja
scas
pusha
stos
jmp
push
fs
ja
andb
aaa
mov
mov
sub
ret
pop
jo
mov
sub
mov
cwtl
sahf
add
movntq
popa
pop
mov
out
sbb
sub
ja
das
jecxz
xor
sti
mov
dec
fildl
dec
out
faddl
push
sbb
cmp
push
testl
push
cli
sbb
xchg
sti
xchg
inc
adc
mov
inc
xor
mov
push
scas
inc
pop
cwtl
xor
stos
addl
mov
jl
jae
sbbb
lock
cmpsb
lahf
enter
dec
fs
sbb
fstps
push
dec
scas
sub
aaa
ret
xchg
jg
stos
loope
xor
xchg
out
xchg
cmpsl
mov
add
dec
sarb
or
inc
push
lods
dec
mov
mov
add
loopne
push
std
xor
pop
mov
pop
sti
jmp
stc
negb
dec
push
fwait
cwtl
fists
sbb
popf
sbb
and
movsl
clc
lods
aaa
jae
dec
daa
cmp
pop
fcomps
adc
lret
icebp
mov
inc
pop
fsts
inc
daa
in
pop
dec
and
dec
stos
roll
shll
xchg
add
sub
mov
pop
ds
lahf
sub
cli
sbbl
mov
cmp
movsl
push
gs
stos
add
into
inc
outsl
cmp
scas
ret
insb
add
repnz
or
ss
gs
jmp
jmp
sub
xor
jecxz
in
inc
add
dec
sbb
push
ljmp
push
insl
ja
mov
outsb
or
jl
and
out
insl
push
mov
loope
fcompl
ljmp
bound
in
idiv
jp
repnz
sti
and
sbbl
cld
das
push
loopne
xchg
fwait
jns
arpl
pop
push
daa
or
push
sbb
ss
xor
insl
iret
enter
inc
lret
ljmp
cmc
inc
shrb
inc
je
bswap
cmc
mov
lret
aaa
add
lock
repz
pop
fs
cltd
sti
sbb
jnp
lahf
inc
mov
sub
je
loopne
mov
inc
bound
fdivr
cli
sbb
xor
jbe
insb
push
lea
push
in
les
cmp
xchg
idivl
imul
repnz
popa
xchg
mov
int3
fs
hlt
xchg
insb
icebp
test
cmp
xchg
push
add
shr
mov
dec
adcb
int3
add
divl
loopne
pop
ljmp
jnp
jmp
icebp
lods
dec
or
fildl
mov
imul
ss
jb
out
lahf
cmp
out
lret
mov
cld
xor
ret
icebp
dec
movsl
loop
ret
test
test
push
clc
cmpsb
aaa
popa
ss
fdivs
in
xor
in
inc
cwtl
fidivrl
or
mov
push
fimuls
push
adc
nop
pop
xchg
loop
adcl
mov
adc
sub
cli
shrb
in
lea
in
pop
mov
mov
push
icebp
insl
movsl
mov
int3
sbb
jecxz
in
xor
outsb
jecxz
or
cwtl
out
mov
inc
mov
pop
xor
cli
inc
sub
jb
mov
imul
fwait
lret
inc
fstps
cmp
gs
sbb
push
addl
xchg
es
mov
xchg
out
loop
aam
jl
sbb
addb
in
mov
ds
sub
inc
mov
and
inc
jmp
dec
outsb
add
out
addr16
push
pop
push
std
test
push
aaa
aam
mov
cli
dec
scas
cmpsb
inc
jnp
cmp
cmc
sbb
jle
mov
adc
dec
cmp
or
out
mov
mov
int
jne
adc
adc
and
xor
imul
mov
and
xchg
xor
xchg
call
or
int
mov
cwtl
mov
jno
push
mov
shl
xor
popa
xchg
add
pop
push
addr16
push
pop
xchg
push
or
dec
sbb
stos
in
sbb
int3
mov
or
test
dec
pusha
dec
hlt
sahf
or
je
stc
fwait
dec
mov
add
jl
inc
xchg
xor
xchg
cmp
mov
mov
mov
xlat
jmp
add
lahf
es
lret
or
xchg
icebp
xchg
cmp
xchg
inc
dec
xchg
or
shll
adc
filds
test
cmp
mov
sbb
sub
adc
adc
mov
xchg
jns
dec
mov
aad
lret
imul
push
out
subb
faddl
jb
sti
mov
ret
xor
sbb
inc
lcall
repz
sub
outsb
sbb
add
leave
ja
pop
jge
sub
inc
jno
or
cmp
notl
pop
inc
add
lcall
fsubl
inc
and
js
add
and
pushf
adc
xor
int3
mov
xlat
in
test
jb
or
xor
int
movsl
or
shlb
mov
call
fisubrl
frstor
jne
sub
xchg
pop
mov
pop
jl
cmp
and
iret
imul
xlat
cld
jns
mov
scas
mov
loopne
lea
sub
mov
pop
mov
jmp
xchg
xchg
pop
test
and
cmpb
mov
sub
mov
fstps
es
std
rclb
mov
ret
pop
mov
mov
mov
cld
frstor
gs
push
int3
add
push
popa
jbe
add
ljmp
ret
mov
gs
add
dec
jno
fsts
push
mov
bnd
cmp
add
movsb
sbb
movsl
in
into
sub
repnz
sub
scas
push
mov
pop
adc
test
jo
cmp
xchg
out
push
jp
mov
or
fldcw
fbstp
cmp
adc
out
sarl
fs
cmpsb
push
iret
sub
scas
push
test
mov
adc
pop
int3
or
leave
xlat
xlat
ja
xor
pop
cs
cmp
inc
inc
push
and
adc
dec
or
mov
push
xor
stos
js
dec
mov
insl
mov
test
in
shlb
push
movsb
loope
add
arpl
push
pushf
sbb
leave
dec
loop
push
jge
outsb
jmp
jno
and
sbb
push
aaa
dec
xchg
stc
outsl
bound
push
bswap
mov
adc
inc
inc
jl
push
loope
add
cwtl
mov
mov
out
xchg
cmp
sbb
and
xchg
push
inc
mov
push
dec
or
mov
je
sbb
jo
cld
es
xchg
xchg
in
pushf
movsb
mov
aaa
jg
mov
out
push
jecxz
inc
pop
xchg
rcr
cmpsb
mov
jns
popa
dec
rorl
mov
popl
pop
aad
lret
xchg
fmull
xchg
or
movsb
mov
add
xor
sub
lahf
ds
inc
or
push
inc
arpl
mov
sarb
pop
jo
pushf
js
lock
dec
push
out
lcall
pop
aad
mov
xor
and
iret
leave
repz
mov
xchg
jae
test
movsb
sub
mov
pop
xchg
mov
jo
dec
test
outsl
xor
xchg
lock
divb
push
ja
mov
clc
shl
sbbb
mov
and
sbb
lods
pop
loop
ljmp
repnz
add
test
test
cs
fs
or
rcrb
or
inc
out
aam
scas
mov
jle
adc
loope
lds
push
in
ja
out
xor
imul
inc
sbb
add
cli
lods
sbb
jecxz
rcrb
imul
adc
int3
lahf
jnp
inc
pop
clc
mov
outsl
lahf
test
fists
sub
jl
xorl
imul
push
sub
mov
stos
nop
movsl
jo
movsb
fiaddl
ljmp
adcb
push
mov
mov
mov
and
ljmp
xchg
sbb
add
icebp
test
sub
cmp
dec
jecxz
xor
mov
arpl
pop
cmpb
sbbb
jno
push
sub
mov
push
idivl
inc
lock
add
sub
sub
jns
arpl
sti
cmc
sbb
fstps
in
mov
iret
pop
das
mov
xchg
insl
adc
pop
pop
je
jecxz
dec
test
pop
test
mov
repnz
imul
or
movsb
in
es
and
out
dec
lret
ss
mov
js
and
mov
aaa
push
imul
idivl
adc
test
nopl
cmp
dec
leave
into
repz
pushf
inc
imul
xor
jae
ds
test
cmp
fisttps
enter
fs
test
lods
xchg
sub
nop
add
cmp
push
or
jne
push
in
fs
mov
cmp
fidivrl
movsl
cmp
stc
push
cltd
xchg
pop
rcr
imul
pop
js
or
mov
shrl
jno
out
dec
gs
cld
jns
test
fwait
test
lcall
movsb
mov
jg
lods
mov
adcb
es
pop
sub
jno
mov
stos
sbb
mov
push
push
or
inc
lahf
dec
pop
xor
or
lahf
es
mov
mov
fwait
neg
jbe
cld
rolb
clc
jae
jnp
dec
pop
or
popa
js
inc
stos
bound
jmp
out
jns
or
cltd
inc
inc
mov
hlt
dec
jg
pop
xchg
and
jbe
popa
not
adcb
push
or
xor
push
aaa
mov
adc
mov
add
push
mov
popf
sbb
aaa
inc
mov
sti
roll
push
add
adc
test
jmpw
mov
mov
les
or
mov
push
lahf
mov
cmpsl
sbb
or
add
add
pop
sahf
jp
cmp
pop
mov
jae
int
push
mov
in
popf
xlat
xchg
xchg
insl
daa
sti
leave
and
mov
sbb
popf
fwait
icebp
pop
jmp
inc
add
mov
pop
or
dec
jb
addr16
mov
mov
pop
jnp
movl
js
out
adc
das
xchg
mov
loope
push
xchg
pusha
sub
mov
in
adc
testb
xor
and
scas
pop
lret
in
pusha
lcall
test
aaa
in
test
xchg
pop
mov
xchg
sbb
mov
mov
out
add
notb
nop
mov
jmp
jp
jecxz
fwait
dec
out
inc
jne
xchg
fiaddl
adcb
movsl
adc
fsubp
nop
hlt
dec
mov
cwtl
test
imul
mov
and
push
aas
and
or
xor
mov
je
jne
pop
jp
jmp
bound
xchg
je
jecxz
sar
pop
pushf
pop
stos
xor
out
dec
iret
out
pop
or
pusha
jp
arpl
push
rol
or
roll
cmp
xchg
daa
fists
test
loop
xor
jnp
ja
push
sub
es
pop
jae
fisubrl
lea
xlat
mov
sbb
xor
xchg
jo
ret
jnp
jg
loop
repz
jo
xchg
adc
repnz
fidivrl
push
mov
push
ficoml
sti
adc
inc
notb
cmc
into
push
xlat
inc
jge
pusha
dec
cmpsb
subl
cwtl
pushf
mov
inc
sub
xchg
out
mov
mov
cld
rcll
shl
xchg
cwtl
cmc
sbb
mov
push
dec
addr16
fsubrl
mov
mov
arpl
notl
sub
std
mov
mov
xlat
add
inc
ljmp
adc
aam
or
in
subl
das
test
call
lds
ljmp
iret
sub
jmp
adc
mov
jb
xor
mov
mov
fmull
and
add
xor
fisubs
clc
sbb
cmp
test
mov
cmp
jb
imul
adc
ficompl
jl
shll
sub
int3
cwtl
decl
xchg
inc
jmp
vpcomud
add
cltd
push
jg
ss
push
bound
nop
lret
je
arpl
clc
out
adc
xlat
sbb
pushf
lret
and
in
in
addb
pop
push
adc
add
lahf
push
div
mov
clc
popf
pop
mov
std
and
les
mov
and
mov
or
shlb
pop
addr16
or
repz
popf
xor
adc
adc
aaa
out
lods
cli
push
mov
andl
xor
sub
xchg
cmp
and
fists
loopne
mov
push
xchg
arpl
sbb
xor
sbb
mov
cli
stc
push
jbe
test
fisubs
mov
insb
inc
cmpsb
jns
adc
lcall
adc
sub
icebp
lds
pop
and
push
or
sub
rcll
add
mov
xchg
sub
sbb
mov
mov
jmp
push
cmp
popf
mov
enter
arpl
pop
fimull
mov
pushf
push
and
mov
shr
push
enter
into
out
in
push
sbb
insl
mov
xlat
aaa
add
loopne
pop
ds
lahf
fidivl
cmp
pop
lcall
mov
dec
jb
mov
cmpsl
dec
mov
mov
mov
lahf
insb
or
add
dec
into
mov
sub
xorl
repz
mov
or
mov
in
test
int
push
and
sbb
jae
jle
sub
adc
and
rcrb
fstps
dec
push
stc
shll
push
scas
push
and
into
js
xor
sub
push
les
outsb
fnsave
dec
cmc
pop
mov
pusha
mov
mov
pop
push
adc
fidivl
sbb
inc
nop
adc
or
aas
loopne
mov
sbb
sbb
imul
fs
mov
cmc
out
xorl
dec
or
into
fimull
or
stos
sbb
test
ss
inc
loope
aaa
loopne
and
sbb
mov
test
cmpsl
ret
adc
test
es
mov
scas
sbb
pusha
sub
pusha
shlb
pop
ret
xor
mov
call
xor
and
in
test
das
rolb
clc
sti
iret
xchg
add
xchg
dec
sub
fmull
push
leave
fs
repz
or
clc
dec
sub
lods
mov
in
sbb
ds
adcb
cwtl
jo
push
xchg
ja
jb
movl
pop
mov
test
enter
mov
push
inc
pop
pusha
enter
jl
cmp
mov
shr
adc
icebp
notb
cmc
mov
cmpsb
jecxz
cld
jns
pop
popa
popa
int
iret
lret
rcl
pop
rcr
mov
inc
bound
ret
fsts
push
pop
push
push
inc
sbb
out
scas
and
or
inc
iret
popl
js
gs
das
stc
sbb
sti
insb
iret
insl
rcll
gs
lods
loopne
push
add
stos
jg
mov
aas
daa
negb
jp
in
and
or
jno
xor
jne
movsl
mov
stos
pshufw
adc
push
mov
popf
aad
movsb
mov
jle
sub
jg
call
fisubrl
pop
lds
shlb
bound
adc
or
and
movsb
mov
mov
cmp
fwait
cmpsb
lock
cwtl
gs
mov
pusha
push
inc
cmpb
into
subl
mov
sub
icebp
addb
loopne
test
lock
test
fldcw
ficoml
inc
push
lret
add
lods
mov
lods
mov
int3
sahf
inc
adc
test
mov
out
movsl
dec
inc
pop
imul
adc
inc
jge
jg
ja
sahf
add
sbb
in
arpl
push
jne
sbb
mov
in
in
popf
dec
xchg
out
sub
dec
adc
bound
pushf
mul
jecxz
cmpl
xchg
mov
in
outsb
add
daa
sbb
mov
loope
fdivp
je
popa
mov
push
fcmovnb
dec
addr16
mov
xor
push
xor
stc
push
mov
popa
test
cltd
inc
xor
push
cmpsl
dec
sbb
mov
inc
and
js
cli
cmp
jg
cmp
test
das
addl
push
or
inc
fnstsw
out
cmp
int
lea
push
repz
dec
sarl
mov
aaa
push
iret
xchg
push
mov
test
addr16
lods
inc
jne
cs
loopne
inc
mov
xchg
xor
cwtl
and
aam
cmp
int
cmpl
lods
packuswb
push
mov
jmp
xchg
movsl
das
pop
repnz
fistpll
rcl
ds
xlat
sbb
add
pop
inc
les
cmp
fwait
out
xchg
add
sti
jp
inc
lcall
and
movsb
incb
lods
lret
lock
mov
js
loopne
movsl
rcrl
in
push
add
cmp
mov
dec
dec
sti
cmpsb
sarb
fistl
inc
pop
rclb
mov
jp
dec
jp
push
cmp
mov
fdivr
roll
mov
movsb
mov
sti
jne
fsubl
pop
aad
and
xchg
outsl
mov
movsb
testl
inc
adc
xchg
mov
pop
in
jl
jae
lea
rcll
adc
and
cmp
icebp
test
lahf
sahf
scas
pusha
mov
pop
pop
int3
cmc
add
jo
leave
inc
and
fcmovne
div
mov
sbb
push
shll
mov
dec
jno
hlt
in
insb
movsb
adc
mov
xchg
movsb
pop
push
xor
and
lret
stos
enter
arpl
ss
cmp
or
mov
or
std
mov
mov
mov
lret
mov
push
and
xchg
pop
out
jae
idiv
bound
cltd
jle
inc
lret
stos
sub
push
stc
dec
and
dec
jne
enter
out
cmpsb
cmc
cli
mov
mov
enter
xlat
pop
xor
pop
mov
jno
ret
xor
adc
mov
xor
je
ljmp
xchg
sub
std
sbb
xorb
ja
or
mov
lods
dec
add
cld
int
or
xorb
push
adc
pop
stos
xchg
fcmovu
in
sbb
sbb
add
jno
bound
lret
xor
int
push
lret
or
inc
xchg
divl
shll
cmp
cmp
jge
aaa
cmc
xchg
add
mov
sbb
test
mov
or
outsb
add
sbb
jmp
mov
xor
fstps
jnp
add
adc
dec
xchg
popf
rclb
push
pusha
lahf
cli
push
into
repz
and
or
add
cmp
mov
mov
pop
cli
sbb
fsubr
scas
dec
jle
ss
sbb
loope
nop
gs
in
mov
sub
ficoms
xorl
sub
xchg
jl
pop
rclb
in
push
movsb
jno
lea
outsb
insb
push
xor
fldl
rcrl
enter
cwtl
dec
cmpsb
outsl
pop
fwait
jge
mov
pop
xchg
pop
cmp
xor
inc
push
jecxz
pop
enter
vmovhps
out
pusha
mov
test
pop
ja
loop
adc
mov
add
movsl
cltd
and
std
movsl
movsl
icebp
inc
mov
aas
adc
sub
ja
fsubl
je
inc
xchg
pusha
dec
sbbb
sbb
test
push
in
bound
leave
fistpl
shlb
inc
sbb
mov
fidivrl
into
mov
push
loop
dec
xlat
negl
jae
stc
enter
mov
dec
xchg
mov
add
leave
ljmp
rcrb
stc
dec
mov
jmp
ja
fbstp
aaa
int3
mov
sub
stos
lahf
movsl
push
inc
lahf
add
and
popfw
inc
or
loopne
stos
fadds
movsl
and
and
dec
mov
xlat
cmp
cwtl
lahf
and
jle
out
fmuls
out
pushf
psrad
fsubl
imul
dec
inc
mov
test
mov
sbb
and
sub
jecxz
cmp
aam
and
jl
bound
rcrb
arpl
sub
cmovl
add
mov
xor
and
test
jae
sub
push
dec
imulb
cmpsb
sub
shll
sbb
movsb
outsb
decb
in
and
jp
xor
das
sbb
imul
jnp
mov
cld
and
movhps
jnp
fucomp
int3
cmc
or
test
inc
xlat
out
sti
mov
mov
lea
mov
ljmp
loopne
testl
mov
int
jo
shlb
dec
out
ss
push
xchg
add
andnps
mov
in
arpl
cs
push
outsl
int3
and
xlat
adc
jge
popf
lcall
fstl
or
dec
adc
dec
mov
mov
icebp
stos
xchg
nopl
push
push
or
and
outsb
nop
sbb
adc
stc
shl
rclb
cld
adc
push
jmp
cltd
jno
sahf
sub
and
mov
lcall
mov
or
push
add
movsb
jb
test
cld
cmp
push
jge
addb
nop
lock
call
in
cltd
fisttpl
les
lret
fcomp
sti
popa
jmp
push
js
imul
sub
rcrl
stc
data16
push
jbe
mov
vmread
push
mov
mov
or
pop
sub
popa
inc
add
cmp
mov
frstor
call
push
mov
dec
push
ljmp
punpcklwd
ret
sub
or
gs
into
or
pop
ret
sbb
int3
lret
fistl
and
insb
inc
les
pop
scas
aaa
adc
cwtl
js
mov
mov
lcall
lret
inc
cmc
stc
or
fimuls
mov
fimuls
and
mov
gs
jnp
test
in
enter
dec
es
std
outsl
loope
bound
stos
addr16
xchg
add
pop
and
pop
cmp
pop
lahf
pop
cmp
xchg
add
add
scas
push
rcr
sbb
outsb
adc
sbb
sub
jnp
adc
loopne
jbe
cmpsl
xchg
sbb
xor
lcall
popf
aas
dec
dec
mov
or
inc
test
jp
out
int3
cmp
jb
xchg
dec
mov
xor
lods
mov
jl
outsl
sar
movsb
ljmp
mov
ja
aas
gs
push
rcll
ss
xor
mov
xchg
mov
fsts
pop
push
int3
icebp
jecxz
ret
pop
xchg
je
cwtl
mov
nop
inc
imul
push
subb
imul
daa
outsl
adc
fnstcw
inc
pusha
rorl
fwait
stos
mov
les
int
sbbl
mov
or
es
je
cs
sub
xorl
pop
sub
xor
add
jno
inc
dec
lcall
xchg
test
add
faddp
shll
push
push
push
jmp
mov
outsl
mov
loop
mov
jmp
lcall
test
xor
cmp
in
cmp
cmpl
pop
test
sub
jmp
in
int
jge
sti
fcomps
sbb
fs
int3
subl
mov
outsl
push
cmpsl
xchg
pop
adc
and
icebp
dec
lcall
xor
push
sbb
cli
xor
xlat
adc
add
sbb
js
shll
sbb
ret
shrl
add
xchg
rcll
ds
pop
test
dec
lds
add
sub
cmp
add
lcall
push
outsl
jp
sbb
jo
or
out
adc
nop
cmp
add
inc
sub
mov
into
mov
dec
jo
bound
repnz
xchg
xor
ljmp
aad
inc
enter
mov
pop
mov
adc
cmp
add
rorl
sti
fistps
div
sbb
rclb
push
push
leave
xchg
mov
fldenv
jae
jo
adc
imul
sub
fnstsw
jecxz
jge
andb
mov
movsl
mov
in
aam
add
adc
mov
inc
add
push
adc
cmp
adc
rolb
pop
into
fst
mov
mov
push
int
adc
add
test
fbstp
lock
and
fsubl
and
popf
adc
pop
int
nop
and
movsb
loope
pushf
lock
sub
lock
inc
or
xor
js
xchg
xstore-rng
cmpsl
inc
jnp
cmp
out
leave
xchg
jg
stos
sbb
xchg
cli
sub
dec
les
scas
push
jge
xchg
cmp
mov
jbe
lea
jne
enter
xor
ja
push
mov
dec
rol
xchg
fadd
das
cmpb
and
ja
sbb
testb
xor
loop
jecxz
mull
dec
fldl
es
pop
and
xchg
lds
or
daa
loope
rcrl
or
xchg
in
xchg
icebp
aam
in
mov
cwtl
in
pop
cmpsb
jmp
cmc
lods
mov
mov
ret
push
cmp
pop
cs
inc
jmp
xor
add
push
sub
push
and
jno
xor
lea
pop
stos
int3
std
xor
daa
xchg
imul
repz
cmp
mov
xorl
or
pop
jnp
stc
in
dec
jp
shll
sarl
cmc
ljmp
push
popf
xchg
je
cmpsb
mov
push
in
out
jl
mov
dec
pop
mov
xor
dec
mulb
cmc
int
xchg
testl
repnz
negb
pop
and
and
ljmp
test
pusha
sbb
mov
icebp
in
aas
cmp
push
call
arpl
dec
fildll
cli
push
add
into
insl
mov
inc
cmp
stos
mov
mov
jne
sbb
aam
int3
push
daa
or
push
outsl
jp
fistpll
xor
leave
rorb
lods
xor
push
fdivl
ds
mov
lods
pop
mov
cwtl
sub
stos
jo
mov
xlat
mov
adc
jl
sbb
add
jae
mov
popl
aad
arpl
mov
push
cmp
std
jae
jo
popa
lea
mov
add
and
inc
xchg
inc
pushf
lods
push
sub
add
xor
cmpsl
call
fwait
adc
test
mov
jp
mov
dec
push
mov
push
add
xchg
xchg
jecxz
jo
cmp
outsb
imul
lret
cmp
fldenv
or
jbe
dec
xorb
mov
int3
xlat
adc
xor
cmpsl
jp
cmp
inc
imul
pop
insl
cmp
dec
mov
rcll
stos
mov
jno
jle
mov
scas
xor
dec
xchg
cmpsb
mov
push
cli
cmp
cmp
dec
sbb
mov
or
jg
adc
inc
and
inc
mov
pop
aaa
out
mov
pop
jle
jmp
xchg
sti
jmp
and
xchg
dec
fstl
mov
out
mov
push
mov
dec
add
mov
shrb
adc
stos
aas
je
mov
jmp
outsb
jbe
adc
or
loop
jle
pop
insl
sbb
shll
int
mov
test
popa
mov
les
sub
test
or
pushf
add
icebp
aaa
ds
aas
pop
xchg
and
repnz
mov
jp
in
and
clc
adc
clc
mov
xor
cmp
dec
jne
mov
mov
jle
mov
push
cmp
test
shrl
sbb
jl
inc
inc
into
addb
push
les
stos
jno
insl
pusha
push
or
stos
mov
adc
mov
pop
lret
jp
xchg
call
shlb
jbe
in
adc
inc
inc
popa
sbb
pushf
loop
fcomps
ljmp
cmpsl
hlt
push
xor
out
and
rorb
je
xchg
imul
sub
into
push
daa
adc
pop
clc
mov
call
cmpxchg
je
clc
cmpsl
xor
jne
fwait
pop
fbstp
adc
push
fcomi
dec
xor
mov
jb
js
cmp
lret
imul
fs
cmp
out
ja
ljmp
jmp
push
xchg
mov
xor
repz
mov
sti
jnp
or
mov
repnz
dec
mov
outsb
mov
jmp
xchg
outsb
mov
cmp
or
jns
scas
fldenv
inc
lods
ficompl
mov
xor
and
cmp
adcl
rcrl
inc
inc
push
sub
jl
dec
mov
sbb
push
fcompl
jp
rcl
mov
push
inc
fs
call
movsb
fs
adc
out
sahf
adc
js
inc
push
bound
sbb
insl
xchg
inc
sti
in
enter
jmp
jo
hlt
leave
xchg
ja
fmul
int3
dec
pop
jecxz
fldenv
inc
cmp
andl
mov
sub
mov
outsl
jg
adc
xor
sub
aad
mov
pop
jbe
fimuls
push
dec
push
gs
je
jnp
xor
cmc
setae
adc
in
adc
enter
repnz
clc
dec
movsl
loope
ret
xor
xor
mov
stc
jecxz
cwtl
out
iret
leave
fbld
leave
cmp
adc
pop
xchg
adc
out
cmp
frstor
pop
pop
mov
mov
xchg
idivb
ljmp
mov
pop
fisttps
cmp
dec
les
sarl
loopne
icebp
pop
cmp
ds
sti
clc
outsb
stc
outsb
inc
inc
shll
xor
in
xchg
push
xor
shl
jbe
shl
jl
fnstcw
fildl
sbb
push
jbe
jl
push
mov
in
mov
lds
adc
cmc
fistpll
xorl
xor
popf
cmp
jne
iret
pop
ret
pop
cld
add
dec
iret
push
notl
lea
shr
mov
gs
fwait
mov
pop
jmp
rcll
xor
mov
fdivp
enter
sub
jns
arpl
or
and
dec
and
pop
in
dec
pop
xchg
fsubs
adc
fwait
jnp
stos
cs
movsl
aaa
ss
mov
iret
jg
movsl
fadds
jg
jmp
mov
mov
sbb
fidivrs
add
xor
jl
cmp
sti
push
or
cmp
xchg
add
pusha
mov
and
dec
mov
mov
mov
xlat
lcall
and
mov
dec
mov
sbb
ret
jns
loop
arpl
jg
outsl
lds
popa
pusha
aad
add
outsb
jp
cmp
pop
imul
pop
mov
jge
and
cmp
push
dec
sbb
sbb
lods
fimull
xor
leave
inc
and
test
inc
sbb
jge
fisttpll
cmp
loopne
sbb
sbb
into
insb
mov
stos
repnz
xchg
imul
xchg
sahf
ja
inc
xor
mov
fldt
sub
stos
inc
mov
pushf
xchg
or
push
and
out
push
lods
jge
and
movsb
int
dec
add
adc
in
jmp
pop
jle
js
scas
push
sbb
mov
xor
inc
mov
sbb
fiadds
insb
lock
shll
sub
fdivrs
mov
mov
xchg
insl
mov
dec
jg
fsubs
sub
lock
jl
mov
sbb
xchg
mov
sub
mov
int
test
jl
mov
xor
sbb
aad
cmp
ja
cmp
aam
dec
push
dec
mov
imul
shll
sbb
cmpsl
add
mov
push
jle
jae
or
push
inc
adc
sbb
jp
sbb
orb
in
sar
mov
jne
das
jne
dec
cmpsb
movsb
xor
xor
icebp
mov
cmovs
ret
push
mov
icebp
adc
lahf
mov
cmpsb
jecxz
andl
es
jae
aad
dec
adc
cwtl
icebp
out
push
test
adc
loopne
cmp
out
xor
stc
fidivrs
dec
or
mov
sahf
fyl2x
dec
jno
jne
push
cld
jbe
fs
xchg
pop
popf
lahf
dec
pop
add
cli
push
movq
jbe
lds
ljmp
sbb
in
adc
push
jns
es
lret
pop
shrl
outsb
sbb
xchg
cmpsb
or
pushl
fs
mov
jns
fnsave
fdivp
adc
add
shr
test
arpl
test
inc
mov
popf
xor
mov
sub
cmp
mov
es
sbb
dec
leave
outsb
xor
jo
repz
cwtl
mov
cmp
add
add
out
inc
arpl
sub
movl
lods
add
loop
cld
adc
push
stc
mov
jae
xchg
mov
cmp
jecxz
sub
add
imul
jns
pop
lahf
imul
lods
mov
cmp
jg
fists
jbe
inc
xor
xchg
test
inc
cmpsl
cmpsb
dec
adc
addr16
cwtl
xchg
movsl
mov
xchg
mov
cmp
test
lcall
pop
negb
call
or
arpl
popa
bound
sub
pop
cmp
sub
lds
ds
push
loop
ret
mov
push
stos
push
cmp
jno
into
nop
in
and
dec
or
lods
adc
icebp
data16
add
jmp
sarb
dec
pop
lret
out
test
push
fmul
mov
cmp
pushf
sti
dec
movsl
inc
adc
cltd
lods
dec
data16
iret
std
aaa
xchg
rcll
fwait
and
mov
adc
cltd
xchg
shll
pusha
add
push
enter
idiv
or
shrb
jp
fsubrs
sbb
fistps
push
loopne
jmp
cmp
js
mov
and
lock
jge
jmp
rclb
xchg
dec
mov
pop
and
mov
add
loop
jnp
dec
xchg
mov
aaa
bound
orb
inc
and
imul
cld
adc
push
adc
in
jle
dec
out
scas
and
out
ja
movsb
fsts
mov
adc
lahf
jl
push
int3
jecxz
stos
mov
add
push
out
sbb
data16
xchg
in
xor
inc
mov
cs
data16
sub
xor
inc
push
mov
or
ljmp
insl
sbb
pop
cmp
pop
cmp
int
bound
jnp
out
cli
les
jge
scas
scas
dec
dec
inc
push
test
pop
es
leave
or
shl
pop
vpsravq
cmp
sub
mov
mov
ja
pop
mov
fiadds
sub
loope
dec
int3
ljmp
js
xor
inc
mov
das
dec
cmpsl
in
lods
lret
leave
jmp
xor
or
pop
dec
fsubl
mov
lods
mov
sbb
out
and
movsb
adc
dec
cmp
dec
lret
dec
inc
repnz
mov
mov
outsl
pop
cli
xchg
loope
cs
bound
add
inc
sbb
and
adc
xor
dec
pop
addb
outsb
dec
pop
push
adc
dec
bound
xchg
gs
hlt
ret
xchg
jne
pop
xchg
add
iret
into
mov
in
and
xchg
cmp
insb
push
pop
icebp
cmp
or
xor
stc
sahf
jae
pop
push
stc
icebp
js
jecxz
adc
das
and
jno
shl
cltd
in
notl
fincstp
rolb
mov
push
popf
lock
lea
jp
sbb
aas
sub
ja
pop
jb
rol
or
loopne
xchg
and
aas
lods
and
xor
test
insl
lods
shll
or
pop
inc
in
pop
ljmp
mov
addr16
clc
push
adc
insl
test
popa
loop
sub
add
cmp
gs
fidivrl
push
mov
jo
out
jnp
xchg
pop
push
jnp
lahf
popl
xor
movl
add
mov
aam
mov
push
rorb
scas
xor
loop
cmp
xor
cld
roll
rorb
jle
cmp
jle
aam
in
hlt
imul
adc
repz
lea
fimuls
vpandn
sbb
jae
add
cmpsl
into
mov
or
mov
pop
inc
jae
cmp
inc
push
int
push
in
xchg
pop
daa
incl
insl
jnp
push
jno
dec
xchg
mov
and
clc
loope
mov
sub
cmpsb
push
pop
aad
sbb
sbb
int3
pop
sub
leave
dec
imul
scas
sbb
fst
scas
in
mov
icebp
adc
mov
mov
mov
lret
xor
repz
outsl
cmovns
adc
lret
or
cwtl
dec
loopne
mov
sbb
push
hlt
push
push
sbb
xchg
push
xchg
xor
mov
sti
mov
lods
mov
cwtl
daa
add
adc
mov
adc
gs
cwtl
cmc
adc
sahf
sbb
mov
push
cmp
dec
jp
enter
jmp
subl
fsubs
mov
push
inc
fs
and
shl
cmp
fs
fcoms
addl
sub
ffreep
je
jle
clc
mov
mov
in
repnz
jns
cmp
xchg
pop
scas
lcall
add
xor
push
push
jge
in
pop
mov
pushl
xchg
lea
xchg
and
cmp
fs
int
cld
aaa
popa
jne
xor
popf
push
adc
shlb
aam
dec
aaa
jmp
ss
jl
push
cmpsb
es
stos
es
push
test
cmc
push
mov
arpl
in
push
lret
mov
daa
xchg
testb
xchg
xor
fwait
push
jmp
fsubrl
mov
add
pop
cmp
jge
mov
and
aam
xor
rclb
loop
mov
adc
and
or
inc
imul
xchg
cmp
lret
fidivl
cmp
dec
xlat
lds
xor
pop
addr16
mov
out
adc
mov
sbb
inc
or
test
mov
test
negb
mov
mov
adc
mov
ret
dec
std
clc
cmpsl
inc
mov
icebp
sbb
cltd
push
into
daa
lahf
jle
pusha
adc
nop
dec
jnp
fidivrl
mov
jge
inc
mov
pop
mov
in
mov
sbb
sahf
repnz
jle
mov
lods
jle
fcoms
jnp
imul
loope
xor
call
fstps
pop
incl
jns
icebp
call
or
dec
pop
out
pop
mov
lret
jge,pn
jle
int
sti
push
cmp
pop
je
jne
js
dec
push
cmp
dec
in
arpl
popf
stc
pop
xchg
mov
xchg
push
imul
repnz
pushf
or
mov
jns
pop
adc
sbb
mov
push
xor
inc
mov
bound
fldcw
lret
jo
dec
mov
rcl
daa
ds
dec
out
mov
cmp
cmp
sub
xor
push
stos
cmp
in
fisubrl
cmpsl
pusha
ja
cwtl
ffree
jo
das
mov
pop
fistl
pop
arpl
push
mov
xchg
inc
pop
mov
adc
mov
lretw
test
fstpt
and
pushf
mov
pushl
rcll
cmp
lahf
jecxz
inc
ret
mov
jecxz
cmp
add
cmp
outsl
fldcw
jg
cmpsl
sti
test
aas
in
rcrl
pop
or
pop
dec
popa
daa
int
pushf
dec
inc
or
jnp,pt
inc
jmp
repz
adc
xchg
jle
cltd
adc
adc
or
sub
int
push
or
push
pop
mov
mov
mov
add
jo
lcall
sbb
dec
aam
mov
push
aaa
xor
sbb
inc
arpl
adc
sbb
aaa
jns
mov
inc
je
mov
cmp
jo
xchg
adc
push
ja
dec
and
cmp
in
xchg
pop
rclb
jecxz
push
aam
sbb
enter
negb
mov
push
loope
negb
jb
mov
mov
mov
or
outsl
sub
add
mov
int
pop
mov
mov
addr16
pop
lea
shl
data16
shlb
mov
out
xor
lock
adcb
jne
testl
ds
push
mov
test
push
sahf
ret
sbb
pusha
inc
fsubp
aad
mov
fistps
fstpl
dec
xchg
popa
repz
dec
push
iret
lret
xchg
vpunpcklbw
xchg
push
sbb
loopne
add
xchg
fisubs
adc
jmp
aam
add
cmovs
dec
sbb
push
jg
stc
in
or
inc
xor
jge
cmp
subl
cs
shrl
or
imul
lahf
cmpsl
popa
sahf
or
fdivrl
and
push
add
cmc
aam
xor
inc
test
cli
add
scas
cld
fs
sbb
sub
inc
lret
cmpsb
test
mov
repz
int
and
fimuls
cld
into
xor
ja
lods
sbb
aaa
hlt
dec
ret
cmp
test
mov
lds
aam
cmp
adc
lods
outsb
xor
icebp
iret
jle
cmpsb
ds
sbb
pop
int
push
clc
aam
mov
pop
imul
adc
test
sbb
push
clc
dec
mov
xor
or
jl
jle
adc
mov
adc
lock
xchg
jb
adc
cmpb
aam
into
sahf
xor
clc
mov
aam
xor
aam
push
inc
inc
sti
rcll
or
test
das
faddl
out
lcall
push
clc
shlb
add
xchg
iret
insb
fsubr
mov
clc
mov
nop
test
mov
sbb
jp
test
js
aad
ja
jno
divb
pusha
mov
scas
and
push
dec
add
jmp
pop
push
lret
cmp
in
repz
inc
imul
int3
jne
add
leave
or
dec
imul
scas
push
dec
mov
mov
xlat
mov
mov
bound
dec
sbb
lea
inc
jbe
or
popa
inc
iret
dec
decl
mov
or
in
jnp
inc
xor
incb
jns
xor
sar
jb
pop
movsl
int3
jo
mov
sub
stos
inc
lret
inc
push
lods
pop
jo
subb
xchg
mov
push
xchg
mov
popf
sub
dec
lds
out
add
leave
jg
mov
adc
rcrb
dec
lea
xchg
pusha
scas
mov
and
mov
mov
into
in
push
jnp
int
in
mov
lds
lahf
cmp
sti
les
push
sub
mov
add
inc
repz
dec
xchg
test
sub
imul
arpl
mov
gs
mov
ljmp
sub
stos
lahf
cmp
xchg
add
adcb
cmp
andb
dec
sub
mov
or
xor
out
mov
sbb
cmpl
movsb
jmp
sub
or
sbb
or
adc
incb
push
sub
cmp
fisttpl
outsl
leave
shrb
cmp
inc
in
adc
sti
mov
cs
push
sbb
adc
cltd
jne
mov
mov
sbb
sbb
pop
inc
jge
sbb
idivl
aas
pop
jge
stc
imul
mov
fdivl
fbld
push
dec
lea
enter
cmpsb
push
inc
xor
decl
rcrl
or
mov
sub
cmp
scas
dec
or
mov
popf
jns
rolb
dec
sbb
stos
fsubrl
jnp
push
adc
flds
sub
push
xlat
ljmp
xchg
cmp
jno
xlat
pushf
mov
mov
pop
jp
cmp
jmp
mov
cltd
movsl
mov
xchg
mov
push
adc
lods
xchg
cmc
sub
mov
pop
dec
inc
mov
fists
out
fwait
xorl
roll
push
and
cmp
jnp
mov
cwtl
loop
or
cmp
in
push
mov
lds
packuswb
mov
sub
and
lret
cmp
rcrl
push
pop
mov
mov
xchg
lock
popf
fcoml
bound
push
pop
mov
and
in
in
jp
push
mov
pop
jl
mov
inc
les
loopne
rcr
sub
lods
sub
xchg
add
xor
ret
addl
dec
test
movsb
xchg
mov
xlat
fdivrl
mov
jbe
add
mov
add
or
repnz
addl
add
cmpsb
fdivs
fcomi
or
test
push
subb
cmp
es
fistpll
fimull
push
sub
push
dec
fisubs
shll
jne
lea
and
int3
es
dec
pop
pushf
mov
adc
ds
jo
push
arpl
xor
cwtl
jno
push
popf
sub
call
xchg
movsb
dec
aas
adc
out
pusha
out
ficompl
les
or
push
inc
loop
dec
cmpsl
mov
test
or
mov
sub
mov
repnz
int
lcall
inc
js
fs
xchg
xor
jge
call
cmpsl
add
xchg
xchg
test
inc
lret
jns
movsl
cmc
js
popa
or
out
push
add
mov
sbb
and
stos
sbb
popf
inc
sbb
pushf
jge
mov
shrl
in
pop
xor
xor
inc
xchg
pop
or
push
or
pop
mov
push
scas
scas
mov
fldt
pop
dec
cmp
nop
cmpsb
js
inc
and
xchg
inc
out
or
pop
xor
jmp
movsl
add
jo
out
fisubrl
daa
arpl
sub
xlat
addr16
and
pop
push
jl
and
js
ds
outsl
lea
push
sub
test
das
mov
rcl
dec
lea
inc
and
xchg
cmp
jg
lods
into
xlat
xchg
xlat
fldl
mov
cmp
mov
ret
sbbb
fisubl
dec
std
mov
xor
jmp
jo
ds
lahf
xchg
pop
int
int
push
push
mov
pop
mov
lock
shll
shrb
popa
popf
jnp
mov
inc
arpl
lods
jmp
scas
shl
arpl
mov
popa
ljmp
and
adc
and
jae
mov
ficompl
cmpsb
movsl
mov
mov
push
or
sub
rcrl
test
ss
jg
scas
out
pop
aaa
les
ret
or
clc
bound
and
mov
sbb
xchg
xchg
pop
stc
out
cmc
sub
aaa
popf
clc
xor
out
ret
subl
jecxz
xchg
adc
mov
add
add
jmp
xchg
jle
stos
dec
shlb
sbb
loopne
cwtl
add
iret
sbb
pusha
out
mov
mov
push
lods
clc
inc
mov
sysexit
push
aam
add
pushf
adc
sub
rol
jb
pop
sub
sahf
repz
ljmp
cmpsb
and
bound
dec
push
mov
cwtl
dec
mov
clc
cmp
sub
dec
xor
mov
mov
test
pop
or
or
adc
lret
sbbl
ljmp
pop
mov
scas
in
push
cltd
movsb
imul
mov
cmp
rcr
daa
cltd
push
cld
fistpll
popf
ret
add
adc
hlt
lahf
jle
js
or
xchg
push
shl
leave
ret
pop
push
inc
ret
roll
ja
and
xchg
jmp
stos
mov
xor
xor
xor
loope
mov
xchg
lds
test
xor
cld
fwait
ret
or
jbe
popa
adcl
sub
shl
mov
sahf
xchg
lahf
dec
add
jge
fadds
jnp
std
inc
loope
fsubrs
dec
roll
mov
add
push
jp
and
xchg
xchg
jg
in
add
loopne
movsl
pop
test
call
mov
outsl
test
sub
lahf
sbb
popf
aaa
add
rclb
mov
push
push
xor
inc
in
jmp
mov
inc
lret
inc
cwtl
scas
js
adc
inc
dec
and
dec
pushf
repnz
stos
cli
mov
inc
lods
iret
xor
xchg
mov
jle
out
int
andl
xor
fmul
orl
jp
cwtl
add
gs
loopne
movmskps
shrw
xor
les
dec
dec
inc
cltd
out
adc
arpl
sarb
xor
arpl
aam
fwait
es
mov
jne
lcall
cmp
add
jno
cli
cld
out
xor
aas
test
test
cltd
cmp
xchg
pop
xchg
jae
imul
push
dec
push
dec
fdivl
popa
enter
imul
lea
xlat
pop
cs
and
aaa
addr16
and
js
mov
and
mov
lcall
ror
subl
fisttpl
out
mov
lods
test
sbbb
mov
jp
inc
and
ds
dec
imulb
js
rcr
mov
testb
test
cmc
jo
ds
xchg
flds
popf
mov
pop
add
adc
push
or
aam
adc
daa
cmp
mov
or
sub
hlt
and
addr16
fnstsw
pop
clc
jno
cmp
dec
cmpsb
push
loopne
jl
mov
aaa
test
je
popf
shrl
inc
add
or
cmpsb
inc
mov
shll
pop
nop
sub
fcoml
repnz
arpl
pop
xchg
stc
mov
in
cmp
sbb
xor
movsb
jbe,pn
out
hlt
clc
idivb
clc
into
add
mov
test
sti
fisubrs
add
std
test
mov
scas
jno
fucom
xor
or
shrb
jle
mov
je
movsb
in
mov
addr16
insb
inc
addr16
mov
dec
or
mov
sti
jp
mov
cmp
test
pop
shrl
pop
in
je
repz
and
divl
or
aaa
insl
fsubl
ja
jnp
jmp
mov
push
lods
jae
lea
outsl
mov
int
push
ds
aas
mov
add
fisubrs
sbb
jecxz
jecxz
mov
xchg
add
jnp
repz
inc
std
negl
int3
inc
mov
aad
or
nop
mov
test
add
idivb
aad
add
sbb
xchg
mov
push
vmread
mov
lret
inc
add
pop
out
xchg
mov
adc
xor
xchg
lods
dec
adc
cmp
jecxz
rclb
int
in
mov
xor
je
cmc
mov
jno
es
out
cmp
mov
mov
xor
fs
ret
cmpsb
cltd
mov
and
repnz
mov
sbb
push
sbb
pop
sub
lods
ja
sub
sbb
jno
repnz
pop
push
lds
xor
pop
and
fstps
xorb
sbbb
fcompl
mov
lret
cld
addr16
sub
fbld
data16
or
ljmp
adc
adc
sub
pusha
out
mov
jne
orb
cmpsb
mov
push
incb
sub
ror
push
push
and
call
xor
popf
aad
int
out
arpl
mov
add
test
push
xchg
mov
sbb
imul
push
or
aam
aaa
cmp
std
sub
insl
adc
xor
notl
sub
push
add
dec
mov
into
lock
jae
jmp
out
pop
movsb
das
adc
push
dec
pop
imul
rcll
push
xchg
or
dec
mov
mov
mov
fistl
inc
ds
mov
cmp
dec
data16
dec
andb
mov
movl
add
insb
ficoms
xor
test
push
pop
notl
push
adc
inc
dec
icebp
or
xor
test
in
call
aas
jmp
fstps
in
arpl
jne
xchg
repnz
stc
and
clc
call
push
xor
dec
fistl
inc
jg
movsb
mov
fiadds
push
add
or
xor
jnp
fldenv
cmp
xchg
es
fwait
sub
iret
push
push
mov
sar
add
xor
mov
jg
push
inc
or
mov
pop
push
fcos
adc
ss
aaa
loop
jg
inc
pop
mov
inc
out
pop
lret
xchg
xorl
cli
in
rorl
jge
test
mov
adc
mov
push
jb,pt
out
das
mov
inc
insl
dec
aad
or
add
sub
out
xor
push
add
xor
sub
sub
out
push
dec
popa
fnstcw
xchg
test
icebp
push
incl
stos
rolb
mulb
cmp
nop
mov
pushl
in
out
das
add
scas
adc
mov
inc
dec
fdivrl
pushf
in
test
dec
f2xm1
sarl
repnz
adc
jne
scas
sub
jmp
push
shlb
movsl
mov
fistpll
xor
cmc
cld
ret
mov
pop
jne
cmp
jmp
adc
loop
shr
mov
cmp
in
scas
sub
mov
jecxz
das
jge
jno
fldl
mov
scas
repnz
push
popf
mov
cmp
lods
sbb
mov
mov
movsl
dec
add
sbb
xchg
jns
xor
dec
inc
movsl
sub
jl
in
xchg
stc
xchg
jl
jno
jb
mov
xchg
mov
mov
dec
aas
cmp
ret
pmulhuw
and
xor
xor
sub
popa
sub
ret
sub
sti
push
pop
stos
xor
sbb
adc
pop
mov
into
or
outsb
mov
cmp
inc
xchg
mov
ret
sbb
enter
lahf
add
mov
fwait
xchg
js
adc
ljmp
xor
lret
jecxz
push
sub
shrb
or
andb
cmpsl
xchg
cmpb
and
inc
outsl
nop
ds
cmp
aad
lret
and
int3
push
sarl
and
jnp
nop
fiadds
scas
leave
insb
lcall
out
xor
mov
sub
loope
test
jl
add
xor
fnstcw
movsl
fdivs
dec
test
and
je
js
test
pop
dec
shrl
mov
fdivrl
xchg
mov
scas
loop
lret
jmp
nop
imul
popf
frstor
lahf
outsb
repz
lret
jb
push
dec
inc
adc
cld
bound
into
les
jmp
xchg
shl
and
jp
out
cmp
dec
sbb
in
xchg
pop
dec
pop
das
dec
into
dec
decb
pop
jg
xor
cmp
test
cs
push
popa
mov
out
ja
xchg
and
movsb
shl
cmp
mov
repnz
fnstsw
pop
and
or
dec
add
mov
push
inc
stos
cmp
or
mov
xchg
mov
aas
push
jl
mov
repnz
mov
pop
out
icebp
lahf
add
or
xchg
sbb
movsl
push
pop
inc
outsb
enter
or
push
movsb
cs
aaa
in
inc
ljmp
mov
lods
std
leave
jno
repz
outsb
xor
mov
shr
nop
xchg
mov
sbb
and
cltd
in
mov
inc
ficoms
loope
add
xchg
inc
pop
cmp
fistl
out
mov
sbb
inc
popf
cmp
cmp
xorb
mov
push
dec
sub
fwait
test
xor
push
loop
mov
cmp
jge
mov
std
movsl
gs
pop
adc
xor
xchg
mov
stos
shl
jns
add
mov
push
xchg
mov
clc
xchg
js
call
sub
ljmp
loop
test
es
fnstenv
or
jmp
stos
loop
repnz
and
ljmp
cmpsl
in
enter
mov
pop
andb
jge
hlt
arpl
mov
mov
sub
cmp
pop
ret
inc
popa
ljmp
lret
ficomps
xchg
es
popf
loope
test
xor
push
pop
movb
orl
mov
hlt
stos
andl
lock
add
scas
inc
dec
xor
jnp
lret
jl
leave
mov
cmpsl
test
sbb
mov
mov
stc
in
sahf
addr16
in
test
orl
aad
mov
jecxz
fisubrs
aas
fisttpll
decb
inc
and
add
shll
into
fldz
and
hlt
cmp
ljmp
repnz
jl
mov
leave
divl
insl
xchg
nop
ja
push
and
inc
or
test
lods
cmp
adc
lds
lods
insb
out
xchg
fbld
out
pusha
outsb
mov
xor
stos
sbb
aaa
add
out
mov
xchg
dec
and
xchg
shlb
int
cmpsl
popa
scas
push
xchg
fisubl
lcall
and
pop
push
mov
xor
idivl
adc
daa
add
pop
decb
in
es
xor
add
movsb
subps
aas
pop
sti
jnp
mov
jmp
sti
mov
mov
cs
mov
pop
and
cmp
mov
pop
in
ljmp
jl
mov
xchg
mov
insb
fabs
mov
mov
or
xchg
pop
or
lods
stos
pop
push
sbb
in
jb
stos
mov
loop
sahf
cli
loopne
jnp
xchg
inc
add
les
hlt
rolb
push
jecxz
hlt
lods
out
xchg
jp
xor
pop
or
sbb
sbb
imul
jp
sbb
loop
xchg
out
scas
inc
loopne
out
xor
lods
push
pop
shrl
je
les
cmp
push
xchg
fcmovu
sbb
cmp
out
adc
jno
std
int
mov
dec
movsl
andl
inc
push
icebp
sub
inc
jno
in
cmpsb
mov
mov
cmp
cmpsb
call
shll
fldenv
sub
and
das
jmp
daa
daa
mov
test
repnz
mov
popa
lahf
mov
xchg
pop
xchg
rorl
call
push
addr16
xor
jecxz
mov
fistpll
js
cs
mov
mov
les
enter
jbe
push
mov
arpl
xor
add
cltd
xor
adc
data16
lock
sbb
andb
popa
inc
ja
int
cmc
loope
inc
xchg
xchg
sahf
call
popf
testl
out
ret
ficoms
pop
mov
pop
push
xchg
out
rolb
and
xchg
ret
test
pop
loope
adcl
fsubs
leave
cwtl
cmc
cmp
pushf
nop
mov
and
dec
jmp
rolb
jecxz
jge
test
jp
pop
cmc
xor
das
cs
xor
int3
inc
and
xchg
stos
xor
addr16
cmp
jns
shr
ds
cmp
iret
adc
mov
sub
in
pop
stos
fs
testl
adc
jno
fists
mov
xchg
add
xchg
fldl
mov
lcall
js
imull
dec
jp
xchg
sbb
es
aas
mov
xchg
xor
pop
inc
aaa
es
pop
inc
scas
cmp
dec
xchg
movsl
adc
add
out
sub
jle
mov
test
in
js
frstor
inc
out
jne
sub
pop
lret
cmp
inc
nop
in
mov
sbb
decb
xor
adc
and
or
stc
push
xchg
xchg
rcrl
xchg
or
push
lahf
xchg
xlat
inc
cmp
jmp
outsb
scas
int3
out
cmp
aad
nop
add
lret
pop
jno
push
jb
push
xchg
adc
lcall
cld
lret
pop
out
roll
mov
adc
into
mov
pop
imul
add
ja
jle
lret
aaa
and
mov
push
xor
fidivs
mov
lcall
cmpsl
and
fwait
sbb
xor
outsl
add
das
xchg
sbb
xchg
mov
in
mov
sub
jle
rcll
hlt
mov
cli
inc
ss
or
int
xlat
push
hlt
data16
lock
mov
dec
mov
ds
and
ja
ss
xchg
cmc
fidivrs
daa
cs
jnp
sbb
daa
lret
adc
js
jo
jne
cmp
lret
rdpmc
pop
mov
xlat
call
adc
js
imul
test
and
pop
sub
add
sub
aaa
fldenv
std
mov
shll
push
inc
add
inc
dec
fsubl
in
xchg
mov
mov
mov
dec
repz
cli
jp
or
ret
lock
or
or
push
aam
mov
ja
mov
loopne
push
inc
add
cmpsl
scas
push
sbb
ret
jp
int3
fstps
ljmp
jnp
movsl
dec
jb
lcall
pushf
cmpsb
sub
mov
adc
adc
ret
pop
xchg
xchg
rolb
sub
in
cmp
pop
sar
pop
stc
add
test
arpl
stos
mov
sbb
cmp
push
xchg
sbb
fidivrs
adc
das
ror
in
lods
into
mov
fidivrl
sahf
sub
mov
adc
rcr
xchg
in
jmp
loop
cwtl
aam
addr16
sbb
or
incl
mov
and
ds
pcmpeqw
xor
xchg
popa
cmp
adc
inc
out
xorb
into
cld
aad
adc
push
inc
or
insl
int
aas
ficomps
sahf
add
insb
xor
sub
insl
fwait
daa
adc
loopne
mov
ret
mov
sub
addr16
lds
sahf
divb
lret
push
das
mov
imul
inc
dec
pop
mov
xor
push
sub
hlt
add
push
dec
repz
jbe
pop
push
andb
mov
adc
in
mov
xchg
adc
sbb
lods
gs
xor
mov
mov
xchg
inc
aaa
call
jnp
imul
pop
inc
aad
roll
insb
push
add
xor
add
imul
xor
ss
jne
mov
pushf
mov
jnp
pop
inc
gs
mov
movsl
mov
test
fstpl
ret
fsubr
imul
mov
mov
cli
jbe
je
mov
js
hlt
ret
jae
pop
xchg
pusha
ss
arpl
xlat
aad
in
sbb
leave
mov
mov
xor
and
and
fcoml
cmp
pop
lods
mov
pandn
cmp
lods
pushf
fidivrl
jp
mov
and
mov
in
adc
add
xor
pop
adc
mov
mov
rcll
lahf
inc
xchg
xor
mov
xor
shrl
and
mov
mov
fs
and
mov
push
in
pop
push
fildll
mov
out
dec
dec
enter
ljmp
mov
mov
xchg
adc
nop
lret
and
call
ret
aaa
or
push
dec
call
mov
mov
mov
ljmp
jb
jae
int
fists
dec
out
or
mov
je
pushw
inc
or
rcll
data16
cmpsb
fldt
ljmp
mov
jle
scas
das
aad
divb
and
xchg
adc
shll
lock
les
adc
test
mov
int
inc
fsubl
xchg
or
enter
xor
and
in
jns
pop
pop
icebp
in
add
pop
pop
addr16
sub
push
lret
mov
xor
jb
ficoms
xor
jge
nop
mov
dec
fdivl
dec
sbb
xor
mov
push
mov
imul
jl
add
or
mov
xchg
jl
aaa
dec
cmc
xchg
mov
sbb
orl
mov
pop
js
mov
xor
mull
in
push
shlb
mov
push
push
push
clc
mov
adc
xchg
es
arpl
pop
or
shll
std
movsb
test
fs
dec
add
shll
and
push
add
in
test
adc
cs
enter
fsubs
stos
nop
sbb
lock
test
incb
test
ret
scas
incl
mov
cmp
sub
in
jb
fimull
pop
out
lds
mov
mul
ds
xchg
xchg
push
iret
vpaddusw
jl
je
mov
adc
inc
mov
scas
xchg
icebp
dec
rorl
mov
es
dec
clc
jecxz
jle
popf
and
insl
lahf
sti
xor
gs
fistl
les
push
mulb
mov
pop
add
leave
stos
call
int
popf
sahf
rcl
sbb
lahf
xor
lea
push
push
cmpsl
imul
or
fs
lods
lcall
push
aad
lock
or
daa
push
mov
jns
and
jb
xchg
inc
or
sub
dec
int3
lods
dec
addr16
call
and
punpckhdq
sti
jne
pop
and
or
adc
pop
stos
adc
cli
idiv
gs
aas
cmpsb
xor
sbb
rcrb
pop
mov
pop
scas
mull
mov
lods
xchg
je
and
mov
mov
xchg
out
mov
lock
sbb
add
push
xchg
adcb
out
inc
mov
pushf
mov
push
inc
daa
pop
cmpsb
xchg
movsb
repz
imul
ror
mov
lret
mov
cwtl
pop
lods
cmc
mov
flds
jbe
add
pop
pop
inc
pop
mov
pop
adc
std
sarl
xor
fadds
xchg
lds
dec
hlt
iret
outsb
ficoms
mov
lahf
enter
test
mov
lods
mov
mov
je
adc
sub
jle
inc
inc
inc
mov
call
adc
pop
and
inc
cmp
cld
out
add
cmp
xchg
mov
xchg
sbb
cltd
enter
pop
fwait
lock
ds
fst
les
aaa
je
sbb
outsl
pop
jae
aas
sub
into
or
xchg
ja
jmp
push
push
adc
scas
sbb
adc
hlt
mov
xor
and
inc
rcrl
mov
cwtl
pop
xchg
xchg
cli
pop
aam
sbb
stc
adc
mov
gs
push
sbb
insl
lock
xchg
sti
xchg
outsl
and
mov
lcall
dec
inc
stos
and
aad
rcll
jbe
xchg
iret
adc
mov
lret
and
cld
sti
psraw
popf
ret
int3
inc
xchg
jne
lahf
inc
mov
and
adc
xor
push
loop
pop
movsb
nop
push
sub
xor
rcll
fidivrs
cmpsl
test
mov
xchg
lock
sbb
xchg
inc
or
clc
in
xchg
push
jecxz
pushf
loope
xchg
test
popa
out
or
mov
mov
jmp
pop
movsb
push
or
lcall
inc
sub
mov
add
fwait
shr
push
aaa
out
and
aaa
or
mov
mov
lret
mov
enter
adc
jo
gs
or
lds
inc
adc
cmp
xor
in
lret
and
jno
scas
adc
or
inc
cmp
cs
pushf
hlt
dec
icebp
xor
cli
jle
movsb
sub
scas
cs
pop
outsl
jl
jecxz
add
mov
sub
add
add
pop
loopne
push
cmp
inc
fildl
dec
xor
loopne
xchg
fsubs
js
dec
into
fcomps
dec
fadds
inc
jp
mov
imul
xchg
jae
or
out
lock
out
inc
mov
sub
imul
cld
xchg
in
clc
roll
adc
imul
jmp
adc
push
je
mov
cmp
scas
lock
pop
jne
stos
nop
push
in
mov
sub
pop
cmp
into
psubusw
divb
imul
lds
jbe
mov
mov
xchg
les
inc
incl
xchg
daa
imul
mov
fidivs
mov
push
call
inc
push
push
xchg
pop
pop
lret
lods
ja
inc
push
add
int3
mov
lds
lcall
lock
mov
in
mov
stos
nop
mov
cmpsl
add
lret
add
pusha
repz
loopne
xchg
andb
ffreep
aam
mov
incl
js
xchg
fsubl
jb
or
pop
xchg
sub
or
adc
imul
test
ja
jnp
and
mov
jecxz
pushf
xchg
adc
xchg
adc
out
and
xchg
fwait
jle
cli
and
sub
and
or
push
iret
jmp
adc
push
fbld
mov
test
sbb
mov
cwtl
mov
inc
push
mov
pusha
mov
push
sbb
sub
mov
dec
test
addr16
pushf
push
lock
adc
stos
cmp
xchg
out
push
jbe
push
cmpsb
scas
push
shll
push
push
xchg
in
push
lret
sahf
or
sar
mov
aad
popf
cmp
mov
mov
out
fldlg2
jb
test
setle
xchg
clc
mov
mov
push
sub
fdiv
sti
add
xchg
jmp
jl
jge
sbb
xchg
psrld
xor
rcrb
clc
push
sub
mov
into
aaa
addl
sub
je
mov
mov
xor
ljmp
mov
into
test
dec
inc
inc
pushf
add
aam
test
sub
into
shrl
sbb
pop
mov
cmp
pop
mov
idivb
adc
push
cmp
mulb
xchg
sbb
mov
and
jb
and
jp
add
pushf
and
rolb
push
jno
xor
adc
adc
xchg
fwait
xchg
rcll
pop
paddsb
jbe
xchg
cmpsl
xor
addb
xor
les
fiaddl
or
into
mov
pusha
sub
and
mov
mov
push
cs
dec
sbb
lods
mov
inc
sub
cmp
icebp
sub
clc
in
add
pusha
xchg
jne
repnz
mov
outsl
data16
mov
repz
inc
pop
cs
adc
mov
loope
pushf
push
imul
cld
roll
fcmove
sbb
jg
jns
inc
or
mov
aad
push
or
inc
jmp
hlt
or
adc
xor
xlat
loopne
ja
sbb
mov
shrl
xchg
les
cmp
imul
xor
mov
lahf
add
xor
dec
add
xchg
jmp
pusha
std
ret
mov
rdmsr
sub
inc
push
pushf
adc
aaa
xchg
mov
lret
sub
mov
fadds
adc
loop
xlat
out
xor
jns
adcb
out
lret
sbb
nop
xor
mov
or
in
push
push
loope
mov
out
jp
fld
or
mov
imul
lcall
pop
fcmove
sbb
mov
outsb
cmp
and
fsub
fsubp
and
into
pop
fistpl
mov
mov
or
adc
movsl
xchg
mov
repz
or
aas
mov
cs
sbb
ljmp
ljmp
pop
jg
ljmp
js
mov
loop
ljmp
jns
push
push
int3
cli
and
xor
into
mov
cli
pop
pop
fwait
ret
iret
lcall
pop
ljmp
popf
je
xchg
inc
mov
clc
or
inc
outsl
aad
rcl
xchg
pop
or
and
sub
inc
int
popf
lahf
xor
cmp
push
sub
adc
vpmovm2q
mov
sti
jge
inc
ljmp
push
cli
aam
pop
pop
sbb
sahf
jnp
add
mov
cmp
jmp
movl
in
or
push
cmpsl
jne
or
cmp
lods
lret
pop
mov
aas
push
mov
push
and
push
jge
bound
and
rcr
push
cmp
in
xchg
test
mov
and
and
outsb
push
inc
in
mov
jns
test
pushf
pop
xchg
test
dec
push
sbb
int
aaa
jg
dec
cltd
and
jns
jns
outsl
loop
pop
icebp
xchg
ds
cld
xor
out
adc
es
pushf
and
jne
sbb
jne
stos
fadds
rcl
cs
das
jmp
int3
push
push
adc
and
pop
xchg
push
push
sbb
cmp
andl
loopne
or
fidivrs
stc
aas
mov
inc
mov
andl
inc
insb
test
ds
xlat
mov
test
add
jmp
inc
scas
push
test
cmovl
dec
xor
sarl
push
xor
mov
push
cmp
scas
ljmp
mov
push
jns
andl
push
sub
add
jbe
vpmaxsd
ret
mov
push
jno
xchg
loop
push
pop
dec
mov
enter
sub
and
popf
pop
xor
adc
aaa
test
mov
pop
cltd
dec
push
sub
out
xchg
mov
negl
push
dec
mov
jbe
jb
addb
aam
inc
je
scas
out
lret
xchg
sub
icebp
sbb
fldenv
jbe
push
mov
shrb
addr16
inc
sbb
jp
mov
mov
mov
push
popa
jo
xchg
lods
orb
arpl
xor
inc
fsubrp
dec
iret
xor
icebp
gs
or
subl
jns
inc
sub
pusha
hlt
add
add
xchg
repnz
aam
jp
jo
push
xor
mov
push
dec
daa
inc
stos
into
push
dec
pop
jmp
icebp
rcll
in
in
fucomi
jecxz
mov
rorb
in
rclb
mov
in
jnp
pop
xor
lret
cmp
repnz
jecxz
cmp
fimuls
cmc
popa
xchg
pop
jp
fwait
and
movsl
lret
sub
pop
mov
lock
xchg
test
sbb
pop
mov
jp
out
gs
dec
push
mov
cmp
mov
incl
pusha
cmpsl
xor
mov
adc
xor
cmp
fnstenv
push
in
cmp
jb
jnp
cwtl
js
ss
cmp
popf
jae
jnp
adc
scas
adc
mov
jnp
xor
lock
in
dec
jp
push
loope
mov
add
inc
cmpsl
xor
mov
adc
xchg
cmp
dec
loopne
scas
add
and
cmc
loop
mov
mov
jg
xchg
dec
shll
test
mov
gs
xchg
call
dec
insl
leave
jmp
xor
lcall
stos
dec
mov
push
cmp
add
psubq
mov
lock
sbb
aam
mov
shl
fisubrl
pop
shlb
pop
aad
or
xchg
std
sub
lds
out
dec
mov
adc
das
outsl
ljmp
aas
daa
divl
stc
push
dec
mov
movsb
and
fcomps
daa
mov
sarl
mov
sbbb
cmp
inc
enter
stos
sbb
outsl
roll
cmp
jle
pop
sarb
and
fistpl
mov
imul
push
add
int3
loopne
adc
xor
sub
adc
mov
push
adc
inc
push
and
sub
mov
push
test
ljmp
dec
insl
adc
push
ficomps
das
pop
out
mov
rcr
pushf
add
sti
fisttpll
sbb
push
mov
lock
push
mov
sbb
aaa
sub
out
xchg
push
xchg
jle
jns
in
add
or
fscale
dec
imul
xchg
repnz
popa
incb
sub
xor
out
or
idivl
and
sub
and
fs
lret
inc
shll
pop
and
mov
outsb
jns
sbbl
pop
inc
gs
pop
mov
arpl
dec
cmpsl
mov
in
insb
or
xlat
adc
push
push
ret
inc
jp
add
popf
enter
push
xchg
mov
ret
fistpll
scas
jecxz
mov
mov
jb
xor
dec
rolb
popa
push
or
das
int
nop
stos
xchg
bound
dec
iret
outsl
or
jae
adc
cmp
push
hlt
adc
sbb
dec
ret
ja
and
inc
push
xor
loope
andl
mov
xchg
mov
popa
das
popf
pop
ficompl
or
inc
xor
xor
sbb
incl
in
cmpsl
dec
inc
mov
loop
mov
shlb
push
cmp
jecxz
cmpl
sub
lds
mov
and
jns
imulb
cld
xlat
mov
ljmp
sbbb
rolb
xchg
cmp
jne
lret
or
push
andb
push
mov
dec
gs
xchg
lds
sar
fwait
pop
pusha
adc
adc
jmp
jmp
in
lea
jae
repz
sahf
cwtl
xor
adc
andl
or
mov
subb
je
cmc
jae
jbe
mov
cmp
gs
outsl
rcll
push
gs
push
rolb
cmp
cmp
enter
mov
das
cmp
jg
fildl
negl
lret
cld
ja
push
enter
pop
sbb
test
ss
push
dec
out
pop
arpl
add
jge
xor
das
cmp
test
mov
scas
leave
movsl
cmp
mov
daa
jo
add
xchg
or
dec
pushf
je
push
test
adc
in
repnz
pop
mov
push
mov
mov
mov
mov
nop
mov
inc
aam
jbe
mov
cli
push
iret
adcl
push
pop
iret
push
pop
push
lea
ret
push
in
dec
sub
pop
fwait
inc
lret
stc
cwtl
mov
out
mov
adc
sbb
xchg
in
call
sub
xchg
dec
shll
popa
bound
aam
push
mov
mov
stos
and
push
movsl
mov
push
xlat
dec
and
sub
jb
fs
dec
and
aas
jg
mov
out
cmp
in
cmp
or
lret
sbb
sub
xor
jecxz
lret
mov
aam
ljmp
jae
ficoms
popf
js
and
test
jne
repz
lret
dec
test
xor
sub
out
lds
xor
sbb
int3
xor
out
push
mov
in
scas
ljmp
pop
mov
mov
inc
je
push
dec
push
movsb
push
decb
loop
idivb
scas
mov
mov
aaa
cmp
add
dec
xchg
aam
push
std
lcall
dec
push
lcall
out
ss
push
jge
add
cwtl
fcoms
xchg
mov
aad
lahf
add
and
cwtl
shl
rolb
out
mov
sbb
and
or
pop
mov
dec
push
dec
jo
inc
jbe
repz
daa
sti
loopne
ficoms
add
stc
push
fmuls
pop
xor
scas
inc
imulb
and
and
sbb
inc
jne
push
and
adc
or
cmc
andb
imul
jle
or
mov
dec
mov
sbb
xor
mov
jno
inc
imulb
inc
pop
hlt
fsubrp
aam
or
loopne
div
jo
sbbl
lea
jnp
scas
mov
jmp
mov
lret
repnz
mov
movsl
fidivrs
sub
push
push
jmp
lock
sub
sbb
pop
sub
pop
inc
cmc
ds
xchg
pushf
loope
je
inc
mov
or
mov
push
ret
adc
mov
pusha
cmpsb
adc
test
ss
insl
push
lcall
lcall
iret
add
dec
xor
pushf
out
pop
xor
fldl
sbb
push
mov
dec
sti
imul
mov
or
shrb
push
push
xorps
rclb
cmp
inc
xor
mov
pop
cmc
cmp
outsb
dec
enter
lahf
sbb
inc
loopne
add
fisttpll
adc
mov
fnsave
or
and
stos
lcall
loop
fbld
es
xchg
pop
mov
fstps
jae
pop
sub
rcrb
and
aas
add
add
mov
fisubrs
ret
sub
arpl
mov
adc
sub
rcll
xor
mov
je
int3
dec
out
gs
pusha
pop
jl
fdivs
push
je
mov
imul
outsl
mov
mov
mov
aad
sub
icebp
xchg
aas
xchg
cld
jmp
push
add
and
jo
int
scas
inc
push
inc
loope
sbb
outsb
jae
push
push
pop
gs
jg
lcall
fwait
cmpsb
movsl
filds
mov
cs
fsub
sub
orb
mov
xchg
lds
out
inc
or
add
lcall
iret
xor
imul
add
fdivl
fidivl
or
dec
pop
fistpl
dec
dec
aam
inc
jmp
adc
push
js
pop
stos
cmp
lods
jg
pop
mov
inc
jns
fs
push
jb
jnp
fnstenv
movsb
pop
shll
ss
outsb
ret
dec
aas
mov
lret
repnz
pop
mov
shlb
add
mov
inc
dec
adc
in
pop
jne
fiaddl
repz
fs
xlat
in
scas
push
lock
aad
bound
mov
lds
mov
and
jl
clc
addr16
xor
fnstsw
mov
in
jle
inc
mov
popf
hlt
sub
lods
arpl
repnz
sub
scas
dec
pop
inc
push
scas
pop
ja
outsl
pop
js
das
jp
jge
popf
push
aas
inc
mov
sbb
add
inc
popf
fwait
insb
mov
out
rorl
ret
clc
lcall
xchg
lods
and
mov
inc
shlb
aad
pushf
int
sub
pop
or
jmp
aad
inc
imul
sbb
or
pushf
outsl
pop
pop
cmp
pop
test
inc
dec
mov
int3
sbb
mov
pop
dec
xor
cli
inc
push
jb
loopne
push
imul
jecxz
inc
mov
cltd
fwait
inc
jns
fldcw
mov
cmp
mov
arpl
repz
mov
clc
sti
pop
adc
cmpsl
enter
int
iret
in
mov
and
add
ficompl
add
dec
add
divb
jle
add
dec
lahf
xchg
adc
cmpb
inc
lock
repz
and
fdivl
adc
and
add
adc
mov
inc
mov
xor
pushf
inc
cmp
add
dec
mov
loope
idivl
jmp
jnp
shlb
mov
outsl
test
call
test
and
inc
das
mov
fldenv
cmpsl
lcall
stc
cmp
lock
mov
inc
js
repnz
loopne
sbb
aam
mov
pop
jp
insb
test
xor
fdivs
outsb
cmp
xchg
adc
push
orl
lds
mov
call
jo
adc
mov
fs
cmc
out
pop
enter
into
mov
sub
les
inc
mov
and
ljmp
les
sbbb
sub
push
adc
and
call
sahf
inc
xor
lret
sub
pop
add
mov
sarb
mov
mov
in
and
enter
and
pop
repnz
je
cmc
addr16
lcall
and
repz
xchg
out
lods
xor
mov
js
and
or
pop
outsl
call
mov
test
xor
cmovg
imul
pop
push
push
push
jnp
hlt
jns
add
pop
roll
or
cmp
inc
mov
cmp
push
or
push
cld
add
mov
je
aad
sub
insb
loope
pop
jge
in
fmull
jbe
pop
popa
and
xchg
xor
sub
call
cmc
xchg
or
adc
mov
mov
add
mov
xchg
adc
outsb
add
xchg
push
stos
fbld
cmp
sbb
dec
jnp
lods
mov
jns
cmp
out
jbe
jo
mov
sbb
fisubrs
ret
add
xor
hlt
in
and
mov
ret
out
mov
adc
cmpsb
push
pop
fistl
and
lahf
addr16
sbb
pop
imul
cltd
popa
test
push
into
in
xchg
bound
out
mov
lret
je
negl
mov
rcrb
cmc
xlat
jge
out
mov
fwait
stos
push
inc
outsl
sbb
mov
sahf
enter
mov
jmp
cli
in
mov
popf
test
stc
push
rcrb
addr16
out
push
or
pop
shll
mov
fisubl
addr16
or
std
mov
or
inc
subb
movsl
sub
pop
and
or
xchg
mov
stos
shrb
dec
js
adc
test
cmp
int
mov
out
mov
dec
jl
ret
outsl
inc
or
dec
rcr
fs
leave
sub
xor
add
adc
out
ds
inc
lret
out
es
pop
push
sti
divl
inc
mov
data16
leave
fsubrs
and
aas
push
mov
imul
lods
sbb
xor
mov
add
and
insb
mov
test
mov
xchg
sub
lods
inc
out
jmp
test
into
inc
testl
imul
jl
xor
jle
push
call
push
xor
jge
xor
cmp
lds
xor
jge
es
cwtl
fwait
xor
loop
cs
jmp
mov
loopne
add
notl
gs
mov
in
movsl
cli
idivb
jmp
mov
dec
repnz
hlt
jp
out
addb
popa
xchg
aad
clc
lcall
mulb
mov
out
in
dec
xor
dec
xor
inc
pop
cltd
lret
mov
mov
nop
cs
fsubs
jnp
dec
cltd
or
sub
cmpsl
daa
fsubrs
cltd
push
push
adc
outsb
daa
sahf
das
ljmp
aam
rcl
clc
sub
popf
mov
cmc
xchg
pop
in
das
dec
push
andl
lcall
xchg
pop
push
add
sub
add
out
pushf
les
sub
outsb
and
clc
roll
push
dec
sahf
fistpll
sub
outsl
je
sbb
xchg
fnsave
lret
sub
jl
push
call
sub
daa
clc
es
out
cmp
adc
pop
popf
int3
popa
sbb
fwait
xchg
cwtl
aas
lret
lcall
mov
out
xor
pop
cmp
je
push
add
fistps
fcoml
inc
mov
or
rcl
mov
stc
and
jno
mov
insl
add
dec
cmpb
xchg
fcompl
mov
sub
pop
enter
fistps
or
popa
imul
or
pop
xchg
filds
daa
xor
inc
inc
pop
shll
mov
pushf
sti
and
movsl
out
lods
fwait
imul
aam
lcall
add
loopne
mov
and
insl
xchg
mov
jl
xor
sbb
cmc
shlb
jmp
pop
repnz
sub
xchg
push
pop
lret
lahf
ret
sbbl
dec
pop
sub
pop
add
cmp
rclb
les
push
mov
jbe
aaa
in
and
inc
xchg
pop
or
or
mov
xchg
aam
lahf
in
xchg
push
into
sub
rcr
mov
loope
push
aas
sub
xchg
pushf
movsl
mov
mov
push
notl
or
repz
pusha
inc
in
sahf
or
lahf
dec
mov
sahf
ret
fucom
inc
and
cld
ror
mov
and
push
add
lret
add
lahf
scas
pop
lock
jg
nop
lock
and
call
and
ljmp
or
cmpsb
test
sbb
or
push
popa
lahf
and
mov
push
mov
das
push
icebp
into
add
cmpb
mov
fwait
add
or
inc
xchg
shrb
xchg
add
lea
sbb
ljmp
ss
out
outsb
xor
xchg
arpl
cmc
iret
mov
push
inc
lods
fisubrs
add
lods
pop
fisubs
push
sbb
cwtl
and
xor
mulb
sub
cmpsl
mov
xchg
lea
sbb
pop
jmp
adc
aam
mov
insl
fsub
in
es
xchg
push
fucomip
daa
sub
inc
cmp
lods
cmp
mov
push
scas
jle
sub
mov
inc
movsl
rolb
add
pop
inc
imul
cmp
inc
addb
test
gs
and
xor
cld
add
cmp
cli
dec
in
jmp
scas
inc
xchg
das
and
sub
dec
xchg
cmpb
arpl
push
or
fs
inc
lahf
sahf
lret
iret
mov
lods
outsb
fs
out
xchg
js
sub
ret
xor
dec
jmp
popa
fwait
lods
adc
mov
cld
mov
jge
pop
scas
xchg
repz
adc
enter
test
shlb
xor
icebp
xchg
xor
add
xchg
sti
and
cmp
fcoml
pop
mov
ds
cmp
pop
aas
xchg
pop
pop
sbb
out
repnz
xchg
or
add
cmovb
pop
jg
dec
dec
jecxz
inc
loope
sbb
add
add
in
mov
xchg
repnz
xchg
xchg
fsubrp
push
sbb
enter
addr16
test
sub
xor
aad
xchg
or
push
mov
mov
jl
pop
mov
dec
push
adc
jecxz
mov
enter
sbb
xor
jo
mov
push
imul
fwait
mov
push
cmp
pop
lods
aam
jp
imul
cmp
cmp
push
loopne
jle
push
fildl
cli
mov
icebp
lock
add
add
inc
inc
out
add
test
mov
mov
hlt
mov
xlat
out
mov
mov
jmp
out
pop
xor
clc
cmpsl
fiadds
out
out
mov
ret
test
cmp
jns
mov
jge,pn
ret
orb
insb
mov
inc
ljmp
ja
and
push
xchg
dec
cltd
rol
test
xor
cmp
lret
int
jmp
cmp
test
repz
stos
lcall
jl
ss
inc
leave
cmpsl
test
dec
or
mov
sub
inc
push
je
xor
js
stos
or
mov
fwait
into
dec
lods
in
push
test
mov
repz
fcomps
mov
jo
inc
jne
and
and
cmc
adc
fcmovnb
movsb
rolb
jno
sbb
shlb
mov
ja
xor
test
aad
pop
into
mov
adc
pop
ja
push
sub
fs
mov
dec
icebp
testb
call
jae
popf
mov
ret
frstor
pop
push
xchg
icebp
test
push
aas
push
jmp
sub
xchg
lea
pop
xor
int
imul
and
xchg
out
cltd
pushf
sbb
cltd
sub
cld
push
xchg
insl
inc
or
jb
movsl
add
mov
and
cmp
out
add
mov
test
mov
mov
pushf
jnp
and
aaa
push
jo
arpl
repz
jmp
loopne
shrb
ja
shl
sub
mov
movsl
push
cmpsb
jnp
addr16
divb
aad
lcall
xor
add
cmp
int
cmp
imul
fucom
xor
mov
pop
add
adc
pop
add
push
icebp
stos
out
mov
cs
pop
push
in
push
cmp
shll
repnz
push
push
test
or
ja
shrl
mov
fs
sub
sbb
lock
mov
xor
add
ficompl
lret
jge
xchg
cmc
pop
fsubrs
dec
lahf
into
fldenv
adc
outsb
xor
jns
repnz
pop
pop
add
stos
js
pop
xchg
pop
repnz
mov
in
aaa
inc
inc
aas
outsl
int
or
cld
ss
jnp
rorb
jo
xchg
dec
mov
cmpsb
insl
pop
rclb
dec
mov
out
repz
sahf
rcll
ja
xor
sub
mov
fs
rclb
cmp
sbb
mov
pop
cmp
cli
dec
jo
cmp
lahf
pop
sbb
mov
fidivl
fidivrs
arpl
adc
xor
cwtl
mov
push
mov
movsb
cmp
les
inc
xor
pop
or
dec
lods
test
in
mov
leave
mov
cwtl
inc
pop
adc
xor
and
out
mov
imul
xor
jb
dec
push
jl
repnz
add
adcl
dec
stc
dec
lret
outsb
ss
jge
push
rolb
jae
das
aad
push
sub
push
xor
out
mov
push
test
lret
outsb
loopne
out
cmpl
in
cs
jno
xchg
xchg
mov
sub
sahf
lret
lods
pop
push
cmc
popa
xor
push
cmpsb
push
ror
stc
stos
mov
lods
popf
sbb
mov
pop
jns
mov
stc
jl
ss
adc
add
inc
fsub
cli
jbe
dec
sub
xchg
loope
jae
outsl
or
lret
stos
in
icebp
imul
add
outsl
sub
or
mov
test
pop
and
iret
or
xchg
mov
and
push
fcoml
movsb
mov
adc
cli
xor
mov
push
cltd
xlat
or
aam
pop
dec
pop
out
les
das
dec
lock
es
ljmp
fscale
xchg
jns
movsb
clc
mov
jmp
sbb
sbb
xchg
jge
mov
xchg
pusha
shl
ret
jl
xlat
adc
rcrb
or
sub
xlat
fnstsw
lods
addl
sub
andl
cltd
jbe
bound
movsb
sub
pop
loopne
movsl
jno
mov
cld
mov
hlt
push
pop
cmp
sbb
and
inc
adc
mov
insb
sahf
movsb
add
in
xor
and
loope
push
mov
inc
push
je
call
inc
mov
jge
and
sar
int
js
adc
std
sbb
and
adc
fwait
jecxz
push
rcll
jge
divb
and
jecxz
lods
xchg
out
xchg
inc
sahf
push
add
stos
pop
hlt
sahf
aam
add
mov
xchg
fcomi
rolb
leave
pop
and
jns
imull
inc
icebp
mov
inc
divl
mov
adc
cs
es
loop
mov
lcall
loop
icebp
xchg
lods
xchg
dec
andl
mov
scas
add
mov
or
push
nop
mov
push
sub
out
fimuls
lds
add
and
movb
push
jns
push
loope
orl
notl
jle
cld
mov
or
cbtw
hlt
negb
sbb
fsubrl
dec
mov
mov
in
cmp
repnz
adc
sbb
mov
push
sbb
hlt
int3
pop
xor
ss
sbb
icebp
pop
or
sub
and
jmp
movsb
out
out
inc
divl
jns
jl
addr16
add
adc
xchg
xchg
inc
ja
sbb
xchg
add
inc
call
pop
mov
add
jae
pop
int
sbb
sub
test
js
dec
pop
popa
jae
add
inc
pop
dec
mov
jo
nop
pushw
out
mov
mov
std
cmp
jle
mov
popf
xchg
xchg
xor
rcrb
call
push
orb
jecxz
movsb
popl
mov
cmp
jbe
lret
insl
rol
insb
jb
or
lds
lods
xor
loop
aaa
lret
sub
int
jle
cmp
push
shl
pop
test
roll
out
cmp
orl
xor
gs
into
push
ja
js
in
aas
pop
clc
add
test
jb
stc
dec
and
mov
xchg
or
adc
jle
das
fsubrl
ret
movsl
mov
out
or
dec
subl
out
adc
into
lods
dec
sub
or
out
mov
cmp
add
test
loope
mov
lea
in
lods
push
insb
mov
xchg
dec
out
ja
repnz
jo
mov
test
cmp
xor
inc
shrl
xchg
mov
ljmp
push
push
jae
cmp
fcoml
or
cmpl
xchg
xchg
stos
fisttpl
xchg
shlb
cmp
insl
mov
cmp
mov
xchg
lcall
jnp
es
outsb
jb
pop
inc
dec
or
pop
loopne
mov
cmc
mov
lock
fsubr
les
fcmovnbe
sub
xor
cs
scas
push
adc
cmc
nop
out
clc
dec
ret
sahf
xchg
les
add
mov
mov
or
loope
push
adc
rcrl
cmp
cmp
add
or
aam
ss
xor
jle
jmp
xor
jp
inc
or
mov
add
mov
mov
xchg
or
mov
xchg
push
pop
xchg
inc
sbb
and
mov
jmp
push
mov
push
aaa
or
cmp
ds
je
xbegin
sbb
ret
js
push
xlat
in
movsl
xchg
jge
jp
xchg
fstpl
jle
dec
les
inc
jnp
aaa
andb
and
js
leave
fadd
mov
inc
inc
inc
gs
push
sbb
or
pop
das
call
iret
pop
jecxz
cmpsb
mov
lods
cmp
sti
sub
sbb
aas
hlt
mov
testb
aam
int
repnz
mov
and
xchg
sbb
xchg
pop
cmp
jg
mov
je
lcall
stos
cmp
mov
push
mov
push
pusha
in
aad
insb
sub
lcall
scas
testl
add
cmp
pop
mov
or
cwtl
addr16
adc
inc
sbb
aam
cmp
aam
scas
test
and
pop
dec
nop
sbb
outsl
mov
test
cmpsl
int
mov
fistpll
cld
adc
aam
fwait
popf
lret
xor
and
into
ret
sub
push
and
xchg
inc
ficoml
jge
push
sbb
setl
adc
fiaddl
sub
mov
push
js
sarb
lods
or
or
ja
pop
aaa
lret
sar
test
repnz
ljmp
lock
adc
mov
pusha
jecxz
xchg
fsubrs
inc
cmp
add
pop
adc
mov
cmpsl
mov
jp
inc
insb
xchg
mov
add
sub
cmpsb
mov
sti
sub
das
pusha
and
imul
idivl
dec
mov
xor
pop
data16
dec
fldcw
cli
stc
or
sub
aad
aas
pusha
jl
cmp
sub
adc
movsb
es
dec
bound
pop
cli
xchg
mov
inc
int3
xchg
jmp
dec
mov
test
mov
scas
mov
test
inc
insb
cld
or
jno
negb
push
int3
mov
das
pusha
jbe
rclb
mov
or
repnz
imul
stos
xchg
and
mov
aaa
test
scas
cmpsb
lea
xor
and
movsl
pop
cli
cmp
and
decb
icebp
call
mov
add
jmp
std
mov
lds
cli
xchg
sbb
add
mov
sub
jnp
lock
jecxz
shrl
iret
shlb
push
push
jge
inc
adc
pop
imul
sub
jbe
pop
mov
sub
cmp
cmp
aam
mov
mov
shll
adc
and
push
cmc
filds
rclb
push
cld
into
je
and
dec
mov
popf
add
movsb
mov
shll
cmp
out
add
sarb
arpl
sbb
int
sbb
loopne
xor
pop
out
test
push
pushf
jno
cmc
add
pop
fstpl
adc
dec
cmpsl
inc
arpl
adc
in
ds
xchg
inc
cmc
out
adc
jg
test
inc
pusha
cmp
jae
neg
fstp
aad
cltd
xchg
xor
popl
popl
data16
sbb
sub
insl
xor
cmpb
aam
ljmp
add
mov
or
push
or
popf
nop
push
sbb
ret
sti
xchg
xor
arpl
cmp
cmpsl
cmpb
ret
div
jae
outsb
push
cmp
ret
and
and
sbb
lds
mov
into
ret
fimull
push
daa
mov
jg
aad
xor
mov
pop
dec
push
pop
sbb
shrl
movsb
inc
insl
cltd
es
fstl
push
aaa
iret
sarb
je
dec
inc
add
mov
inc
jnp
add
scas
les
cmp
in
xchg
or
das
push
test
fstp
fstpl
xchg
daa
rcrl
in
insb
push
rcll
les
jl
pop
mov
notb
jmp
mov
add
adc
negb
pop
sbb
stos
xor
dec
push
inc
jle
inc
addr16
cwtl
sti
pusha
in
out
orl
pop
push
push
inc
push
mov
fwait
adc
mov
push
mov
sbbb
dec
or
lret
shr
stos
repz
outsl
femms
mov
or
pop
inc
push
sub
mov
or
push
xchg
xchg
popf
pop
aas
sbb
fadds
xchg
leave
iret
jmp
fwait
lods
loopne
push
imul
in
mov
mov
shll
lea
js
out
cltd
ja
push
sbb
mov
fnstcw
mov
jb
mov
cmp
and
dec
bnd
test
cs
add
sbb
push
out
sub
je
lahf
xchg
fsubrs
jecxz
fldenv
inc
cld
imul
dec
add
loop
aad
push
cmpsl
into
dec
sub
or
mov
bound
lcall
cmpsl
lods
pop
xor
sbb
jb
sti
jg
sbb
test
add
jl,pt
in
stc
ljmp
addb
les
and
or
out
mov
jp
rcll
jne
jae
add
push
dec
jae
push
loope
cld
mov
js
sbbl
stc
fisubrl
sub
sub
scas
xchg
aas
cmp
mov
sub
add
stos
loop
jl
and
push
xor
pop
pcmpgtw
imul
cltd
ja
jge
out
mov
mov
push
jno
movsb
cmp
cmp
cmp
pop
mov
jb
imul
sarl
jns
cs
sbb
mov
adc
bound
add
aas
adc
cltd
jne
insl
mov
adc
js
dec
adc
cwtl
push
insb
mov
bound
inc
cmpsl
push
das
add
sub
mov
divb
int3
xor
dec
addr16
xchg
mov
repz
add
loop
das
scas
xchg
push
mov
xor
in
mov
xor
xor
push
cs
ljmp
testl
sahf
mov
ds
and
push
fadds
mov
ds
xor
pop
jmp
mov
cmp
jbe
xor
jp
std
or
mov
lods
pop
divl
add
mov
lahf
stos
mov
mov
scas
loope
stos
pop
mov
pop
xchg
xor
add
loopne
pop
push
int3
sti
mov
xor
xchg
and
sbb
pop
mov
loope
adc
imull
inc
movb
loope
fcmovnu
ret
sti
inc
mov
int
test
add
out
jmp
sti
dec
push
fwait
dec
call
mov
insl
outsb
and
fisubrl
addl
mov
pushf
push
notl
in
pop
adc
mov
dec
push
xchg
lahf
inc
test
jae
cmp
xchg
inc
mov
in
fstpt
inc
test
xchg
jecxz
fiaddl
dec
shlb
hlt
cmp
mov
sub
push
bound
test
push
std
movsb
or
jbe
jno
cmp
rep
int
jmp
mov
lds
std
js
hlt
movsb
sbb
shlb
sti
movsl
les
add
mov
iret
push
jnp
js
shlb
das
nop
rcrl
mov
hlt
lahf
mov
add
push
pushf
sub
cmp
pusha
mov
or
or
push
dec
jae
shll
pop
lds
std
lcall
scas
jl
cmc
test
stc
enter
xor
inc
cmc
roll
and
adc
sub
rol
and
push
lcall
sbb
popl
stc
or
push
pushf
stc
mov
imul
mov
dec
xor
sahf
jo
jl
int
loopne
add
push
clc
add
shrl
xchg
push
xor
and
test
popw
pop
xchg
mov
subl
pop
or
fistps
outsb
aad
mov
pop
lea
fstl
adc
cmp
outsb
mov
mov
test
mov
jnp
mov
leave
or
and
mov
dec
das
fsts
enter
ss
mov
dec
sbb
cwtl
int3
cmp
test
mov
push
out
mov
xchg
adc
sub
bound
fucompp
div
sbb
push
lret
inc
push
adc
inc
int3
rcr
in
stos
push
xchg
movsl
lds
xchg
push
and
cmp
pop
jmp
test
cli
sub
lods
or
into
stc
pop
and
icebp
icebp
sub
push
stos
pop
stos
dec
jnp
cmp
test
out
pop
fs
or
pop
js
adc
dec
jp
clc
jmp
push
arpl
push
ret
in
jmp
stc
pushf
jns
mov
loop
scas
icebp
mov
jbe
iret
push
cmpsb
lret
cmp
adc
and
les
data16
cmp
dec
test
clc
sub
mov
mov
inc
sub
xchg
push
shll
je
push
fidivl
lahf
cmc
pop
daa
sub
mov
mov
mov
ds
add
xchg
inc
xor
movsl
xlat
in
pop
mov
mov
int3
xchg
in
add
xor
inc
test
push
mov
test
xchg
loopne
jl
pusha
icebp
shrb
fwait
leave
and
andb
icebp
pop
lods
lret
insl
inc
mov
in
xlat
adc
mov
xchg
ja
shll
adc
sbb
shl
loope
lahf
dec
arpl
call
fiaddl
movsb
cmp
xchg
cmc
xchg
lcall
push
cmp
sar
cltd
xchg
andl
aam
lds
call
stc
aaa
pop
cld
sub
pushf
pop
out
xchg
pop
sahf
ret
push
sbb
pop
data16
xor
push
xor
and
pusha
and
outsb
das
ret
pop
outsb
or
cmpsb
push
cld
push
jnp
xchg
lcall
pop
out
cmp
into
push
scas
pushf
les
cmpsb
adc
cmp
das
iret
jno
xchg
subb
jno
jle
mov
out
mov
and
xchg
filds
xchg
add
or
cmc
in
or
or
int3
jae
push
fdivrs
mov
add
movsb
notl
dec
lahf
mov
dec
pop
mov
or
hlt
lods
xchg
pop
mov
les
pop
sub
push
mov
cli
ljmp
loopne
pop
gs
adc
inc
fldenv
add
cmp
mov
scas
mov
leave
pushf
pop
pop
data16
xor
aaa
sub
imul
lret
mov
xlat
push
aad
cli
ficomps
sub
or
je
jecxz
mov
jo
pop
ljmp
xor
das
lret
mov
stc
sub
cmp
pop
shlb
jge
or
mov
push
ror
popf
jo
jecxz
lahf
mov
jbe
insl
push
jb
dec
add
or
adcl
lods
rcrb
push
iret
out
es
subl
dec
bound
mov
xor
lret
jecxz
sub
push
call
adc
addr16
dec
hlt
push
data16
add
sub
pop
mov
les
in
xor
cli
pop
aaa
testb
std
xchg
pop
adc
dec
sbb
mov
or
insl
movsl
imulb
lods
mov
jge
mov
add
mov
jle
xchg
dec
dec
sub
xor
scas
mov
mov
shll
pushf
lcall
les
pop
lret
add
addb
addb
cmp
sub
sti
lret
push
inc
out
jmp
cltd
ja
stos
jge
stc
sbb
pop
cmp
and
adc
fdivp
mov
cmp
loopne
sub
mov
xorl
imul
insb
rorl
cmp
push
xchg
lcall
pop
psubw
mov
sbb
inc
cmp
pop
cmpb
jecxz
and
out
je
das
sub
add
or
hlt
sbb
xor
add
mov
nop
sti
repz
pop
or
xchg
ss
clc
or
inc
out
inc
cld
lret
inc
inc
adc
pop
sbb
es
mov
mov
cmp
mov
or
cs
imul
cmp
inc
cmp
fstpl
std
call
ror
mov
testl
nop
jo
clc
repnz
out
loopne
xor
pop
dec
jecxz
pop
rolb
fidivl
pop
popf
adc
xchg
jae
dec
rorb
cmp
cmp
jle
xor
rol
xor
aas
fs
call
pavgb
repnz
hlt
mov
popf
xchg
stos
jnp
mov
xchg
dec
mov
in
lods
data16
pop
test
pop
pop
shll
push
int3
add
adc
sbb
es
cs
orb
pop
sbb
ffreep
fcompl
mov
les
cltd
outsl
popa
jae
pop
std
or
or
mulb
push
cmp
jp
jmp
add
mov
fs
test
fimuls
loope
push
add
xor
lea
scas
nop
cmc
out
outsb
cmp
fsubs
popa
push
lret
sbb
add
movsl
ds
sub
scas
cli
out
dec
popf
inc
mov
ja
jae
in
dec
fdiv
mov
shl
push
outsb
or
pop
xlat
incl
lock
push
xchg
sbb
cltd
es
out
xchg
shrb
mov
pusha
sarl
mov
into
jle
adc
add
sub
pop
mov
and
lcall
or
movsl
clc
repz
shr
and
sti
inc
inc
fsubl
push
stos
lret
mov
mov
stc
sbb
xchg
cwtl
inc
mov
mov
lcall
jo
dec
in
std
and
jo
ds
leave
ja
sub
push
and
lock
dec
sub
jbe
adc
sub
bound
sbb
or
pusha
add
mov
jmp
xchg
push
dec
and
outsb
out
ror
movsb
hlt
subb
loopne
cmc
pop
lcall
pop
mov
or
xchg
mov
loopne
fs
outsb
xor
sbb
jbe
adc
addr16
cmp
cmp
shlb
push
imul
inc
sbb
jle
dec
sahf
or
cld
jo
movsl
lea
les
scas
and
arpl
fsub
leave
mov
mov
mov
add
iret
mov
cmp
push
push
pop
add
iret
in
push
xor
and
je
dec
lds
inc
and
and
and
pop
je
or
inc
push
stos
mov
jbe
int
pop
add
nop
sahf
mov
mov
push
and
add
mov
dec
mov
clc
add
cmpsl
test
cmp
cmp
loop
adc
xchg
addb
lcall
add
into
mov
fwait
std
cmp
aad
sti
xlat
or
cmpsl
rol
mov
inc
mov
cmp
push
jb
daa
jb
jbe
mov
pop
xchg
mulb
cld
sbb
pop
lods
or
cmpsl
sub
mov
cs
push
push
mov
sar
mov
icebp
xlat
sbb
pop
lods
sub
cmp
loope
mov
xor
push
or
jp
cmp
in
push
dec
xchg
stos
stc
pop
sub
movsl
mov
repnz
es
xchg
push
sbb
add
lcall
and
dec
mov
icebp
mov
push
sub
sete
icebp
mov
test
lahf
pop
dec
stos
add
fisttpll
add
xchg
pop
loope
mov
pop
iret
into
ss
xor
adc
dec
out
push
out
cmpsb
js
cltd
push
add
in
movsl
imul
sub
push
adc
mov
sti
aam
sub
inc
sub
mov
sub
push
push
loopne
lods
add
clc
mov
mov
sub
aam
pop
imul
xchg
mov
push
adc
stos
mov
cmpsl
movsl
lods
mov
adc
div
shr
adc
or
mov
sbb
mov
gs
sti
push
outsl
movsb
dec
shr
aad
jle
int3
xlat
mov
insb
pop
pop
inc
stos
push
cwtl
iret
mov
sbb
loopne
js
xor
jecxz
cld
xchg
inc
add
and
dec
and
mov
hlt
mov
inc
pop
mov
xor
mov
xor
enter
into
test
and
insl
dec
add
setbe
es
addl
mov
mov
filds
sub
cmovge
sti
fwait
cmp
jmp
data16
dec
push
jbe
push
mov
lods
dec
scas
ret
movl
aaa
lcall
xchg
imul
sub
mov
sbb
dec
fiaddl
xor
or
fdivs
cmp
jp
in
jo
pop
sbb
call
sbb
push
daa
xor
aas
cli
sub
sahf
popa
bound
inc
adc
pop
add
in
mov
jo
rcl
inc
imul
mov
sbb
pop
adc
push
cmp
mov
sbb
sbb
shlb
adc
andb
in
fscale
std
sub
xor
lds
lret
sbb
and
inc
push
mov
add
mov
scas
fcmovne
cmp
outsb
mov
mov
jmp
lock
je
inc
aam
pop
loop
lahf
mov
sub
sbb
out
or
inc
or
sbb
mov
hlt
repnz
xorb
loopne
in
out
sbb
push
dec
and
lock
rep
pushf
iret
pop
cld
test
idivl
sbb
mov
loope
lret
aaa
out
adc
add
or
icebp
mov
xor
ret
cltd
sbb
imul
loope
lret
int3
pop
sub
popa
xchg
scas
inc
popf
call
inc
mov
in
shrl
lcall
in
movsl
pavgw
mov
sbb
and
ja,pn
les
push
mov
dec
mov
imul
ret
or
clc
fcomps
flds
jae
pop
add
iret
pop
out
jns
pop
clc
in
pop
mov
aam
xchg
add
mov
mov
iret
jne
mov
ja
mov
mov
fnstsw
jae
jae
push
aaa
push
fwait
mov
ds
pop
testb
ret
mov
ds
add
pushf
pop
cmc
rcrl
cs
push
and
negl
mov
fwait
cmp
sbb
sub
xor
xchg
push
insl
clc
aas
push
xchg
or
sbb
push
call
or
jbe
and
dec
into
lret
adc
mov
sub
mov
push
xor
bound
ljmp
repnz
xlat
mov
daa
jno
mov
jge
cs
arpl
mov
jmp
repz
inc
cmp
mov
lret
dec
mov
jnp
daa
popf
sub
test
add
aad
cli
or
fsubrl
stc
fs
push
jbe
outsb
jmp
aam
xchg
inc
cmp
sbb
inc
inc
adc
add
push
mov
xchg
data16
xchg
xchg
sbb
pop
testl
test
mov
cmc
mov
xchg
shrl
daa
lods
inc
push
ljmp
out
fs
ret
sbb
push
mov
mov
ror
out
inc
jae
test
stc
mov
inc
sbb
icebp
cmp
adc
aaa
sbb
lods
in
rcrl
mov
int
outsl
ffreep
test
into
cwtl
pushf
lea
sub
push
add
pop
push
jne
mov
xchg
out
mov
xorb
cwtl
ss
mov
cltd
adc
rolb
jge
imul
mov
lds
cmp
push
imull
hlt
out
es
xorb
lea
clc
stos
in
push
inc
sbb
cmpsb
xchg
cli
sbb
jle
out
mov
mov
scas
movsb
add
mov
lahf
imul
das
lea
int
mov
sub
sbb
lea
mov
les
insl
sbbl
scas
ja
arpl
and
cmp
out
mov
mov
ss
imul
adc
pop
xchg
xor
adc
nop
movb
cmpsb
mov
fisubs
data16
sbb
pop
ss
insb
push
mov
aas
mov
cmp
test
ret
dec
in
js
sbb
push
fwait
inc
mov
dec
cmc
test
rcll
and
jno
cmp
lret
jg
addr16
jae
inc
mov
in
daa
mov
push
mov
push
dec
icebp
jmp
out
or
cwtl
mov
pushf
scas
sub
cwtl
sahf
inc
pop
jecxz
dec
in
push
fisttps
jne
add
xchg
push
ja
sub
ljmp
pop
inc
jb
pop
pop
cs
call
jbe
mov
push
fcompl
cltd
sbb
push
xchg
aad
out
daa
call
punpckhdq
mov
cmp
call
sbbb
les
stos
mov
pop
popf
mov
add
icebp
push
mov
inc
adc
loope
aas
and
ds
in
ret
xorl
sub
out
mov
arpl
jns
mov
mov
les
xchg
dec
jp
stos
or
stc
push
jbe
adc
adc
xchg
gs
aam
ljmp
ss
data16
mov
fdivr
rorb
push
jmp
cli
movsl
dec
sub
roll
pop
lock
inc
or
movsl
int
mov
jmp
ds
dec
clc
stos
scas
xchg
mov
mov
rorb
dec
mov
je
sub
aad
push
outsl
into
lea
mov
xchg
insb
adc
adc
adcb
push
cmp
inc
inc
inc
and
and
out
xchg
cmc
jmp
sub
xchg
shlb
jle
mov
bnd
mov
sbbl
movsl
fstpl
adc
int3
xchg
mov
cmp
xchg
test
xchg
or
sbbl
movsl
or
cltd
push
inc
mov
sbb
outsl
loopne
clc
cmp
jp
popa
jb
outsl
nop
cs
out
jnp
xchg
cmpl
lahf
mov
sti
div
sti
xchg
jbe
out
aaa
out
cmpsl
int3
add
sub
and
jg
ds
fisttps
pop
push
pusha
call
test
push
decb
push
mov
rcrb
jmp
xor
or
jno
mov
ficoml
add
mov
leave
sub
xchg
sbb
addr16
and
test
xchg
stos
aam
mov
dec
xchg
pop
jmp
pop
jmp
cmp
jecxz
rcrb
ja
cltd
sbb
imul
xchg
xchg
dec
fdecstp
out
dec
pop
xor
int3
sub
add
fldl
sahf
rorb
jl
mov
mov
mov
jl
out
addl
pop
mov
cmp
movsl
pop
jae
inc
lret
xchg
and
dec
shl
sbb
sub
jg
movb
lret
xor
pop
mov
add
int
pop
mov
xor
loop
aam
fcomps
dec
mov
push
outsl
rcrb
mov
jg
cmp
sahf
popf
call
jg
scas
loope
inc
dec
lds
xchg
out
in
inc
pushf
jmp
cwtl
insb
inc
mov
push
nop
inc
imul
cli
fnsave
push
add
sub
sbb
and
mov
and
sub
adc
aas
or
ret
out
ljmp
ror
icebp
cli
mov
std
int
arpl
or
pop
sbb
aad
imul
aas
loopne
lods
xchg
hlt
sub
inc
mov
aas
dec
and
or
jmp
xor
pop
dec
int3
adc
cmp
scas
jge
ja
pop
stc
adc
and
pop
or
xor
cmp
mov
das
sbbl
pop
push
and
cwtl
stc
shlb
sbb
mov
xchg
cmp
negb
sub
or
and
outsb
push
repnz
sub
aad
cli
jne
dec
sub
cmp
ljmp
inc
mov
xchg
pushf
gs
dec
push
ljmp
mov
push
data16
xor
inc
inc
and
orl
addr16
lahf
cmp
stc
push
popa
sbb
rorb
sbb
daa
rcl
mov
cld
jp
dec
inc
stos
push
jno
pop
cmp
ret
test
xchg
xlat
pop
inc
aad
fisttpl
gs
movsb
xchg
fcoms
call
dec
inc
xor
sbb
mov
orb
xchg
mov
mov
and
mov
and
dec
mov
movsb
xchg
push
mov
sbb
hlt
lcall
pop
xor
sbb
icebp
je
loop
and
cmp
push
and
subb
jmp
adc
inc
stc
out
lds
pop
arpl
pop
or
pop
xor
push
pmulhw
cltd
lock
sbb
push
push
orl
or
add
push
adc
sub
hlt
outsl
pop
inc
rorl
sub
mov
sbb
sbb
in
cli
stos
out
pusha
outsb
pusha
out
mov
push
adc
pop
cld
call
out
add
pop
sub
xor
sub
scas
cmpsb
test
mov
into
aaa
mov
sbb
mov
adc
add
pop
pop
imul
mov
data16
fwait
pop
dec
inc
xchg
jp
mov
loopne
xor
mov
mov
xlat
sbb
and
loop
xchg
scas
mov
lea
ljmp
jne
imul
cmc
pop
mov
loopne
fisubs
aad
and
ret
daa
ror
cmp
lret
mov
push
lods
out
imul
jnp
fldcw
mov
push
and
mov
mov
lcall
xor
jbe
imul
cmp
jne
mov
sbb
push
mov
pop
ss
popa
xorl
lods
imul
mov
repnz
xor
push
jno
inc
pop
sbb
pop
and
ret
dec
add
mov
ret
shlb
aas
pop
mov
popaw
cmpb
addr16
sub
fcmovnu
and
ja
in
icebp
mov
dec
push
ja
dec
testb
xchg
orl
ret
outsb
mov
and
inc
dec
sbb
dec
testl
lcall
cmp
cvtps2pi
addr16
xor
aam
mov
add
mov
dec
adcl
cwtl
push
addb
data16
mov
xor
jmp
movsl
add
stos
jge
rorb
lods
push
enter
xchg
inc
in
dec
das
cmpsb
mov
insl
xor
bound
test
sbb
imul
pop
fwait
pop
out
movsl
test
subb
sub
push
into
cs
or
cmp
mov
push
inc
lds
sar
mov
shl
pop
or
jmp
gs
fstps
sub
cmp
arpl
push
cltd
aaa
mov
ror
test
ljmp
dec
inc
aaa
dec
mov
pop
nop
or
shlb
lcall
pop
inc
das
sbb
fxtract
mov
pop
data16
in
cmpsl
add
arpl
popa
mov
and
or
adc
inc
cmp
add
push
cmpsl
lods
mov
adc
nop
test
sub
in
imul
ret
pop
nop
ljmp
scas
push
aad
push
push
push
dec
xlat
jns
adc
lods
dec
mov
mov
add
inc
adc
push
jp
fwait
mov
fcomi
pop
mov
adc
xorb
ljmp
cs
cmp
xor
pusha
rcrl
and
iret
mov
push
movsb
stos
test
rclb
mov
mov
cmp
rclb
add
and
mov
mov
enter
mov
sub
hlt
loop
je
pusha
es
jae
sub
xchg
or
add
gs
add
aaa
cmpsb
xchg
mov
inc
repz
xchg
adc
iret
pusha
int3
xlat
sub
and
rolb
stos
or
cmc
dec
add
add
stos
sbb
imul
xorl
and
es
in
leave
cmp
aaa
jp
test
jnp
mov
mov
adc
rcr
clc
test
cmp
or
inc
fwait
cmp
push
and
dec
mov
push
int
loope
cmp
push
fisubl
sub
stos
and
movb
xchg
in
push
int
jecxz
pusha
insb
xchg
clc
pop
inc
cmp
pop
std
orb
push
mov
fmuls
psllw
push
jl
inc
mov
or
mov
leave
leave
call
push
test
pop
cs
sub
ficompl
arpl
pop
mov
pop
idiv
arpl
imul
int3
lret
test
cmp
rorl
icebp
jge
lods
pop
jle
cmp
aam
sub
add
sub
jge
popa
xchg
pop
push
std
sbb
fwait
or
mov
add
fsubrp
out
out
in
lock
pop
pop
addr16
and
add
sub
dec
in
cli
in
les
dec
push
jl
adc
xor
dec
xchg
shll
push
inc
jae
scas
sub
cltd
lahf
daa
ss
insl
sub
insl
mov
adc
mov
dec
jp
enter
gs
xor
sbb
xor
pop
nop
lret
ds
xor
insb
ds
add
pop
or
cmp
push
sub
sbb
ljmp
jns
rolb
loop
mov
mov
andb
adc
les
jge
mov
test
aam
xchg
shll
fwait
out
push
cmp
in
push
jb
dec
int
lock
push
push
pop
jmp
popf
loopne
mov
dec
cmc
or
sbb
fst
lgs
xchg
loopne
mov
and
add
add
out
xorl
jg
fists
repz
push
xor
movsb
in
mov
in
in
adc
imul
mov
xchg
into
insl
rclb
cmp
clc
out
lds
neg
jl
lahf
adc
and
jecxz
aas
loope
pop
ljmp
ret
mov
iret
pop
repz
pop
sti
leave
xor
xor
les
mov
dec
dec
das
mov
dec
cmp
jbe
ror
xchg
and
ds
xchg
mov
dec
xor
sbb
mov
and
ret
in
ds
mov
cld
adc
out
clc
xchg
mov
mov
icebp
sub
pop
cwtl
pushf
xor
pop
push
adc
push
adc
push
fisttps
mov
jne
push
orb
ds
test
lcall
xchg
xorl
inc
push
adc
outsl
mov
lcall
shrb
popf
fimull
daa
sbb
push
jmp
sub
adc
pop
pop
sub
push
scas
cmp
cmp
inc
in
popf
sti
popa
add
lcall
ret
mov
cmp
fldl2t
mov
cmp
pop
daa
test
cmp
je
sahf
shrb
xor
push
cld
fmuls
ja
pop
lea
sbb
repnz
out
fisttps
inc
hlt
sbb
sbb
and
mov
test
iret
out
and
xchg
push
ds
and
push
data16
jmp
sti
lds
fstpl
add
nop
xor
lcall
inc
out
and
xchg
adc
dec
cmp
sbb
mov
pusha
push
adc
mov
push
or
sub
imul
jp
dec
lods
sbb
js
jge
push
es
cmp
jg
xchg
nop
jp
lret
test
sbb
add
sahf
mov
lret
jb
int3
cwtl
call
cmp
rcrl
cmpl
or
or
shll
pop
int
sub
cmp
push
lds
adc
lar
mov
test
call
cmc
and
data16
cmp
cmp
cli
jp
jns
scas
and
xlat
in
mov
and
notl
adc
mov
sbb
dec
push
mov
xchg
ljmp
xor
pop
push
add
dec
mov
sub
xchg
xlat
out
lahf
movsb
clc
outsb
sub
pop
sub
mov
pushf
push
in
leave
clc
imull
inc
pop
outsb
out
xchg
add
add
mov
fnstenv
or
rcll
imul
dec
jp
push
dec
lods
mov
mov
jmp
push
push
movsl
push
mov
lods
add
xchg
sub
cmp
das
pop
add
test
mov
addr16
xor
push
mul
aaa
fmul
hlt
or
mov
in
dec
jecxz
mov
flds
push
scas
add
bnd
pop
call
mull
fldt
inc
mov
adc
pop
sbb
scas
clc
call
mov
test
nop
push
outsb
push
les
fs
cli
pop
ljmp
add
ss
or
sahf
mov
stc
loope
stos
dec
mov
push
outsl
pop
inc
dec
stc
dec
mov
fcomps
xchg
mov
aad
sbb
test
rcr
inc
jb
stos
mov
sub
cli
adc
add
outsb
and
dec
adc
popf
aam
lret
arpl
jae
jmp
mov
loop
push
xor
loope
jl
ret
lret
sub
mov
in
test
xchg
test
mov
xor
sbb
pop
std
shrb
add
hlt
in
fistpll
xor
cmp
cmp
push
outsl
shrb
pop
cld
and
aad
and
add
mov
cld
inc
mov
fistpll
push
pushf
test
sub
popa
fwait
mov
mov
inc
mov
jnp
pop
mov
dec
push
fs
adc
adc
adc
sub
nop
mov
and
orb
push
movsb
iret
sahf
xor
ss
iret
adc
movsb
inc
jb
mov
xrelease
cli
sbb
push
jecxz
push
mov
adc
jae
ret
stos
sarb
xor
jb
jb
addr16
shrb
cmp
sar
scas
mov
sub
leave
lret
cwtl
or
mov
xor
inc
int
rcrb
leave
and
inc
push
outsl
iret
pop
push
je
pushf
mov
imul
xchg
adcb
out
mov
sub
push
scas
sbb
ror
sbb
adc
in
in
loopne
insb
or
loop
pop
das
stc
repnz
fwait
mov
xor
mov
push
xchg
xchg
add
insl
xchg
or
into
adc
dec
ds
popa
movsb
jns
cld
and
stc
pop
mov
test
adc
jmp
orb
mov
ret
rclb
rorl
jp
in
in
xchg
icebp
lret
pusha
scas
iret
lods
xchg
fs
mov
inc
frstor
imul
mov
inc
out
push
mov
lea
mov
dec
gs
cmp
and
mov
stos
mov
in
jo
xchg
mov
or
inc
cmp
pop
cmp
dec
out
std
daa
fadds
addr16
inc
add
and
cmp
mov
daa
inc
es
xchg
push
cmp
pop
xlat
rorl
mov
mov
fidivs
outsb
jbe
scas
xor
std
cltd
xchg
xchg
dec
js
bound
shlb
ss
jle
xchg
cmp
sti
fcmove
cmp
pop
ss
mov
or
inc
movsb
test
int
xchg
daa
jl
hlt
je
jne
cmp
idivb
dec
inc
push
ret
cmp
jg
nop
sub
insl
push
add
in
enter
xchg
shl
cs
sarb
mov
ret
hlt
inc
cmp
ds
xor
int3
cli
in
xor
cltd
insb
xchg
in
call
repnz
out
repz
push
pop
jns
out
dec
mull
xchg
jecxz
mov
shrl
cwtl
lret
push
dec
adc
int
and
push
mov
xor
loope
xchg
imul
xlat
mov
shlb
cld
dec
mov
cmp
jp
jp
aad
inc
push
sub
daa
xchg
and
cwtl
xlat
pop
mov
push
push
testl
lock
pop
and
insl
inc
rorl
jle
push
lahf
les
sub
cld
sahf
inc
adc
stos
add
lods
xor
leave
arpl
push
adc
mov
inc
out
popf
or
outsb
pop
test
xlat
push
xlat
cmp
sahf
xor
pop
adc
imul
ss
xor
cmc
movsb
test
cmc
clc
dec
jo
inc
sahf
leave
cmp
inc
lock
imull
pushl
in
xlat
mov
stos
test
xor
ljmp
aaa
ds
add
loop
sbb
out
jp
pop
jno
daa
add
test
ljmp
cmp
pop
push
iret
shrb
xchg
adc
push
xchg
pop
out
pop
sbb
and
dec
ss
sbb
dec
int
das
dec
rorb
push
out
mov
cmp
pop
jb
out
pop
lret
cmpsl
xor
sub
ret
test
mov
adc
bswap
cmc
movsb
enter
lcall
push
data16
enter
cltd
mov
mov
mov
sub
lcall
adc
mov
divl
add
into
insl
lret
mov
fimuls
cld
cmpsb
pop
movsb
jno
dec
xchg
notl
mov
jecxz
inc
int
lock
popf
shrb
push
ljmp
sbb
int
or
xor
es
sarl
pop
pop
sbb
std
mov
inc
mov
in
jne
mov
mov
sahf
mov
ret
xor
push
shlb
mov
cs
movsl
in
or
jl
mov
jnp
movsb
jb
pop
insl
add
clc
sbb
adc
jne
push
jp
out
pop
jle
out
rcrl
push
add
les
les
aam
jecxz
jns
ss
mov
xor
fstpt
jecxz
orb
dec
or
cmp
and
jle
movb
iret
xor
or
add
dec
fists
inc
mov
mov
add
mov
iret
rolb
stc
icebp
add
mov
mov
jmp
ja
or
adc
dec
xchg
sbb
imul
faddp
insb
aad
jo
push
mov
cmp
jnp
repnz
and
cmp
faddl
rdmsr
jmp
xor
xor
jmp
mov
pusha
pop
outsb
ljmp
pop
insb
lods
cmp
jae
jecxz
jnp
mov
xchg
shrl
cmpsl
mov
fwait
daa
clc
cld
and
fldenv
into
ror
cwtl
xchg
mov
inc
push
imul
lea
jecxz
int3
mov
jne
cltd
pop
out
arpl
sub
sbb
gs
scas
cli
mov
cmp
cmp
pop
insb
cmpsb
cltd
xchg
pop
rcrb
pop
mov
sub
popa
mov
pop
pop
mov
pusha
daa
int
push
negb
xchg
fwait
rcrl
xlat
roll
and
ljmp
inc
outsb
cmpsl
cwtl
xorl
lods
pop
dec
push
or
push
pop
mov
mov
fs
mov
lods
mov
sahf
mov
idivb
cs
add
jo
daa
xor
xchg
mov
jae
shrb
bound
stc
lea
popf
jl
jae
sub
stos
jg
insb
xor
mov
cmp
cmp
mov
imul
xchg
and
je
add
xor
mov
divl
push
xchg
fwait
lret
out
fimull
les
mov
nop
cld
mov
int
aam
fnstcw
jae
aas
lods
hlt
push
jl
or
cmpsl
rorb
mov
sbb
mov
dec
loope
push
mov
out
decl
pop
loop
lods
cmpsl
jge
push
adc
push
mov
fsubs
cmc
ret
ror
loop
pushf
pop
movsb
inc
decl
decl
xor
inc
add
mov
adc
out
and
add
outsb
rcr
mov
push
hlt
imul
mov
pop
jae
ja
inc
rol
cmp
int
push
mov
test
mov
xchg
jno
out
and
cmpsb
rol
xchg
cli
adc
jmp
sub
adc
iret
dec
bound
jnp
push
popl
imul
xor
inc
push
jnp
out
mov
je
std
idivl
insl
faddl
test
jbe
fwait
or
cmp
adc
std
test
popa
subl
push
mov
push
lahf
mov
cli
ljmp
push
jl
dec
fstps
mov
inc
push
pop
negl
push
lock
aaa
rorl
arpl
mov
sbb
sbb
jae
mov
push
push
subb
pop
imul
xor
add
cmp
dec
cs
out
mov
dec
push
xchg
mov
cmp
rorb
std
aaa
inc
dec
cmp
sbb
fcomps
push
ljmp
dec
aad
inc
aad
shll
movsb
push
inc
lock
mov
ret
push
inc
pop
mov
das
int3
or
xchg
jnp
mov
sbb
incl
adcb
jne
lods
int
mov
sbb
gs
xor
mov
pop
add
sub
add
scas
jecxz
pop
nop
repnz
mov
pop
rol
jle,pn
ss
push
fs
fistpll
addr16
fcmovu
leave
dec
sbb
incl
sbb
lcall
lret
mov
mov
mov
or
cli
xchg
das
sub
jne
push
add
jmp
test
out
cwtl
or
clc
mov
in
jg
sub
and
xchg
pop
adc
test
or
pop
sub
imul
loope
pop
adc
inc
mov
pop
xor
pop
fdivr
mov
xor
xor
lret
and
out
dec
mov
test
pop
mov
movsl
or
add
mov
aad
pop
add
sbbl
mov
je
sub
mov
fs
pop
loop
jmp
push
rcrl
sub
lret
xor
jo
add
push
add
xchg
ficomps
pusha
dec
xchg
mov
xor
les
mov
into
xchg
lcall
lret
or
imul
xchg
mov
add
cmp
sbbl
rorb
cmpsl
insb
mov
jmp
or
sub
or
js
adc
mov
push
adc
adc
xchg
test
roll
hlt
lcall
ja
and
faddl
or
mov
mov
jl
inc
pop
data16
cmc
addr16
lahf
stc
cmpsl
sub
adc
mov
mov
jmp
jmp
or
mov
cmp
ds
push
sbb
leave
inc
or
mov
rorb
sub
dec
sbb
sbb
push
idiv
mov
test
inc
aad
lods
arpl
popa
stos
je
push
xchg
mov
jle
test
sub
les
out
adc
and
xchg
mov
pop
sbb
dec
pop
cmp
adc
cld
or
mov
dec
push
pop
jnp
xor
sub
and
cmp
scas
ficomps
test
pop
xchg
loop
ret
add
outsl
jle
fwait
shrb
cmpsb
xchg
mov
mov
in
add
xlat
mulb
cmp
jmp
jo
mov
das
aam
sti
pop
xchg
cli
jmp
cltd
mov
lret
add
jmp
xor
loop
push
mov
imul
lods
mov
mov
sarb
gs
sub
in
andl
jb
jns
repz
xor
mov
cmp
mov
bound
sbb
or
adc
sub
shr
push
call
hlt
xorb
sub
jns
ss
jmp
clc
push
mov
data16
push
out
push
push
repnz
andb
fwait
and
enter
jg
aam
dec
sbb
jle
xchg
xlat
clc
jecxz
adc
daa
sbbl
sbb
mov
cmp
sub
push
pop
adc
das
shl
dec
test
mov
jno
loop
bound
mov
mov
rclb
mov
sahf
rol
adc
jge
push
andl
sti
pop
in
clc
pop
sbbb
push
mov
and
sub
jbe
sbb
in
push
call
pop
sbb
and
xor
jge
dec
lret
adc
and
mov
aad
sbb
iret
cmpsb
data16
or
sub
xchg
pusha
in
shrl
xchg
xor
addr16
test
inc
dec
jmp
pop
and
mov
adc
adc
push
push
jb
js
setg
xchg
in
pop
enter
insl
add
add
roll
jmp
out
adc
sub
fwait
mov
inc
and
dec
lds
stos
lds
lods
xor
pop
cmp
cmp
rclb
adc
test
lea
jo
or
mov
fstpt
imul
orb
push
clc
lret
add
test
jo
out
xor
mov
mov
call
and
dec
std
orl
sub
mov
adc
call
lahf
cmp
dec
mov
sbb
adc
mov
sbb
inc
adc
xor
imul
loopne
and
shrb
adc
mov
neg
mov
mov
lret
sub
adc
cmpsl
loopne
test
movsl
and
push
jmp
mov
pop
sarb
sbb
sarl
popf
add
dec
stos
xor
popa
push
out
inc
adc
sbb
je
aam
loop
xor
daa
aaa
aad
mov
cwtl
cmp
outsl
xchg
sub
out
rcrl
ds
pushf
cmc
andb
or
xchg
sbb
xchg
rcrl
fcmove
push
xor
iret
mov
hlt
pop
xlat
xchg
mov
mov
or
pusha
push
cmpb
rol
jbe
test
imul
adc
sub
xchg
push
pop
and
outsl
pop
mov
mov
aaa
hlt
xor
stos
cmovno
cld
and
or
push
or
xchg
ds
fbstp
jp
gs
subl
test
jno
call
movd
xchg
enter
xor
inc
inc
mov
cli
add
inc
inc
push
adc
cmp
inc
mov
test
mov
stc
sbb
jae
adc
or
fisttps
sahf
xor
cmp
jmp
lds
xchg
push
sub
repz
and
dec
mov
cmc
mov
cld
sbb
rsm
mov
xlat
mov
fstpt
movsl
inc
or
mov
mov
dec
subl
pop
adc
xchg
es
aam
or
sub
fstpt
dec
lods
mov
insb
icebp
inc
adc
jnp
jp
mov
and
jge
adc
aam
pop
lock
pop
cwtl
mov
addl
mov
jecxz
push
movb
fistpl
mov
call
xchg
pop
aas
xor
addb
cmc
inc
loope
test
sub
adc
push
popf
popa
rol
cmpsl
lods
push
jb
cmp
dec
insl
push
cs
test
inc
jae
lds
mov
imul
dec
sub
jae
popf
or
and
scas
xchg
test
pop
int3
lds
lcall
clc
jmp
mov
adcb
add
jno
pop
push
lods
cmp
jns
jge
fucomi
test
scas
xor
decb
pushf
xlat
xchg
dec
fnstsw
push
jle
mov
sahf
lea
pop
and
scas
jne
bnd
push
and
xchg
mov
test
adc
dec
mov
jb
jo
sbb
sbb
fldl
cmp
mov
mov
lods
popa
fsub
decb
pop
addr16
cmp
repnz
cmp
mov
and
shrb
fmull
mov
xor
pop
out
lock
cmp
lret
jnp
adc
or
arpl
loope
ds
loopne
mov
into
adc
rcll
fistl
pop
ret
mov
inc
xor
icebp
sub
lds
or
add
ficompl
xor
shlb
enter
push
aam
fimuls
orb
mov
push
adc
out
fistpll
adc
cmc
int
cld
cli
inc
aas
pusha
xor
aas
sbb
cmc
shrb
es
push
repz
jns
orb
sub
xor
test
ds
pop
mov
hlt
sbb
in
unpckhps
int
mov
out
insb
loope
ja
push
lock
popa
pop
loopne
dec
std
popf
dec
jmp
jno
cmp
outsl
sub
jo
or
sbb
out
push
and
cmp
mov
fisttpl
cmc
or
and
inc
cmp
shlb
sahf
pop
stos
sub
repnz
push
insb
ja
out
enter
mov
divl
mov
in
jmp
jl
icebp
test
fcoms
cwtl
pop
xchg
movsb
ja
xchg
or
xlat
xor
fisubl
addb
test
cwtl
jmp
int
sbb
test
dec
xor
popl
cld
fcoml
loope
or
add
ret
rclb
sbb
and
outsl
enter
jl
pop
or
xchg
pop
imulb
push
push
or
enter
loope
mov
lock
ffree
popa
movsb
mov
push
sarb
je
sub
es
sbb
icebp
cmp
dec
or
mov
pop
cld
mov
dec
lea
add
imul
dec
or
arpl
lea
clc
in
inc
ret
ds
in
shrl
push
xlat
mov
in
fs
pop
sahf
les
test
jmp
jl
push
mov
fs
js
mov
lret
inc
mov
xchg
sub
enter
jp
and
outsb
fcoml
out
sub
mov
jno
stos
push
mov
repz
std
ffreep
scas
mov
imul
mov
lret
clc
inc
mov
xchg
and
and
dec
dec
lock
cmp
jp
rolb
fwait
push
adc
out
cmp
mov
xchg
mov
xchg
dec
xor
fdivr
sbb
rorl
push
pop
movsb
mov
inc
and
lcall
mov
mul
sub
add
ja
pop
in
adc
sbb
cmpsb
daa
or
jnp
popf
sub
xchg
sbb
sub
sub
pop
cwtl
mov
cmpb
divl
add
push
pusha
sti
jno
jl
loop
inc
sbb
fsub
push
adc
mov
sub
pushf
popa
faddp
lods
aad
xchg
xchg
inc
mov
dec
movsb
insb
jo
in
out
pop
cwtl
add
push
xchg
stc
push
mov
aam
out
out
cmp
add
dec
sub
in
inc
pop
orl
xor
test
jns
int3
test
jnp
or
adc
pop
jp
jl
dec
and
mov
sub
nop
out
xor
ret
pusha
sub
loope
cs
jecxz
lret
jo
in
repnz
rorb
xor
inc
rcll
or
fildl
loope
cli
mov
test
xlat
aam
add
mov
cs
adc
mov
subb
es
mov
mov
sbb
stos
adc
xchg
lret
icebp
xchg
pop
andb
icebp
js
mov
mov
xor
fildll
add
je
das
mov
fdivs
fst
jge
fwait
in
lcall
cli
sbb
icebp
pop
inc
fldcw
push
pop
dec
mov
bnd
sbb
pop
and
std
inc
movsb
loope
int
daa
repnz
lcall
es
in
xor
dec
mov
inc
notl
incb
sbb
movsb
ljmp
xchg
decb
inc
xchg
movsb
icebp
and
mov
xchg
mov
into
cmpsl
jmp
loopne
bound
addr16
insl
mov
sbb
jnp
icebp
test
repz
add
jnp
push
lcall
imul
sarl
or
cmp
inc
push
lock
mov
inc
adc
stos
lea
push
jns
in
push
push
push
test
test
mov
icebp
enter
movsb
jge
je
pop
fincstp
jb
mov
outsb
push
sbb
jne
inc
fst
pushf
enter
pop
hlt
jb
dec
test
cmp
outsl
stc
das
cmp
jne
es
mov
pop
xor
and
shl
std
mov
sbb
popa
xchg
loopne
out
sub
push
cmc
sbb
pop
repnz
ret
jecxz
inc
rcrb
sbb
pop
jno
jle
andl
and
adc
xchg
mov
mov
cld
jg
xabort
fs
popa
or
add
push
inc
bound
mov
loope
insb
pop
call
xchg
or
rclb
popa
cmp
xor
ljmp
pop
sub
int
xchg
jne
in
arpl
push
loope
push
jl
sub
xchg
and
out
test
mov
mov
mov
repnz
movl
mov
jmp
lods
gs
aas
jp
sbb
pop
fwait
pop
aas
roll
in
or
shrl
cmp
xchg
notb
dec
adc
or
mov
mov
das
cmp
pop
loope
jae
stc
aaa
mov
pop
push
les
sahf
pusha
sub
movsb
aad
sbb
rorl
jle
inc
out
jle
cli
push
xlat
lock
test
lret
inc
inc
mov
lret
xchg
sarl
lock
adc
subb
dec
sbb
inc
dec
jmp
dec
cltd
sti
adcb
adc
jbe
arpl
in
fwait
jne
movsb
xchg
mov
cmp
mov
push
inc
mov
push
push
das
std
mov
jp,pt
jb
icebp
dec
addr16
mov
loop
pop
inc
es
or
scas
aad
xchg
mov
in
repnz
and
int
pop
mov
rolb
into
scas
sbbl
add
icebp
cmp
out
mov
cmp
shlb
js
pop
and
xchg
test
xchg
fcoms
xor
mov
stos
xchg
dec
xlat
sbbb
cmpsl
xchg
pop
cmp
cmp
daa
sahf
mov
daa
pop
sarl
mov
pop
inc
je
iret
into
adc
mov
inc
add
movsb
sub
iret
lock
shll
outsb
push
lods
xor
ss
lods
sub
imul
daa
les
cmpsb
xchg
sub
loop
out
insl
mov
cld
lahf
xchg
mov
adc
mov
dec
xorl
out
sti
mov
mov
cltd
int3
push
repnz
aam
jmp
sbb
aas
mov
aam
cli
cmc
fldlg2
adc
jno
repnz
push
cltd
shrb
in
pushf
xor
push
test
icebp
stos
mov
popf
out
mov
daa
out
stc
dec
add
jecxz
xchg
out
cmp
out
adc
out
in
xchg
jne
loop
lret
testl
adc
es
inc
out
push
test
repnz
jmp
xor
add
aas
or
fcomi
push
xlat
mov
add
jp
or
lcallw
mov
mov
outsb
pop
push
nop
fwait
and
test
jge
mov
adc
rcrb
push
sub
aaa
les
mov
out
xor
movsl
loopne
ret
ret
lahf
fldcw
pop
movsb
xor
jo
in
in
out
imul
jb
mov
cmpsl
xchg
adc
sbb
leave
and
popf
or
fcomi
loope
sbb
push
mov
jl
fdiv
add
jae
mov
movsbl
call
dec
pusha
insb
sub
dec
mov
loope
dec
lods
adc
xor
mov
mov
sub
repnz
fiadds
mov
inc
xchg
lock
outsb
movsl
xchg
ret
dec
inc
push
adc
pop
sbb
aas
pop
cmp
add
insl
inc
outsl
inc
jo
pushf
imul
stc
nop
xor
les
dec
mov
pop
or
jecxz
jle
adc
push
int3
push
xor
pop
inc
insb
test
stc
and
cmp
jbe
pusha
mov
ljmp
pop
pop
icebp
sbb
jbe
mov
sub
jmp
mov
cld
pop
test
insl
sbb
xchg
dec
dec
dec
add
popf
mov
mov
sbb
xor
or
cmp
and
sbb
shrb
jl
adc
pop
cmpsb
add
lahf
cmp
imul
out
cli
je
jecxz
std
lcall
xchg
add
mov
mov
push
popf
mov
out
out
outsb
fstpt
jns
add
inc
xor
jns
clc
jmp
fs
jne
jnp
fisubs
cltd
pop
insb
in
dec
fs
filds
add
push
in
hlt
in
jnp
loope
xchg
xchg
sub
cmc
cltd
mov
sti
push
cvtps2pi
pop
sub
pcmpeqb
mov
fdivl
int3
fisubl
shll
lock
inc
cmp
push
aad
push
cld
adc
cmc
out
sub
and
aad
mov
xchg
jb
insl
adc
mov
and
mov
xor
xchg
test
adc
rorb
inc
jb
push
mov
in
cli
push
xorb
stos
jns
mov
push
popa
jbe
aad
lds
aaa
mov
inc
sbb
icebp
setl
cmp
jmp
pop
xchg
push
cmc
bound
cwtl
add
inc
add
sbb
jb
lret
add
or
adc
jg
mov
xchg
or
lahf
pop
sub
fstp
jmp
mov
fdivl
sahf
in
clc
data16
lods
shrb
adc
outsl
pop
sub
sub
mov
sbb
xchg
xchg
or
and
adc
call
lcall
push
mov
sbb
push
in
inc
jno
addb
insl
out
push
je
sbb
mov
sub
testl
movsl
inc
cld
push
adcl
mov
aaa
rorl
pusha
fwait
pop
lods
fldt
mov
ljmp
or
jbe
mov
or
sub
adc
xor
outsl
scas
ds
xchg
mul
js
negb
dec
add
aaa
shl
lahf
and
xlat
mov
movsl
stos
mov
clc
dec
arpl
xchg
int
mov
inc
test
clc
arpl
ds
or
pop
xor
pop
out
cmp
xor
xchg
stos
mov
gs
jns
jmp
add
inc
out
pop
imull
mov
ljmp
mov
popa
and
mov
jmp
dec
xor
stc
stc
stos
adc
cmp
and
mov
cmpl
jecxz
jbe
add
sbb
in
jbe
and
out
stc
cmp
xor
sahf
inc
cmp
js
cmpsl
aas
mov
out
jne
ret
arpl
addr16
xlat
adc
in
sub
jg
fcompl
inc
pusha
test
in
lds
mov
rorb
pop
insb
xor
push
sbb
cmc
dec
pop
dec
xchg
call
out
fadds
mov
push
iretw
daa
shlb
lds
je
inc
sti
stos
pop
cmpsl
inc
cmp
xchg
sti
ljmp
movsl
fcmovnb
rcrl
ss
es
rorb
nop
incl
inc
out
mov
lret
aas
ds
int3
stos
push
mov
lret
pushf
pop
fdivrl
xchg
add
jns
fidivrs
fwait
inc
cmc
in
sarb
ja
fisubl
mov
mov
xor
mov
stos
lods
push
data16
pop
mov
jae
cmpsb
inc
mov
sub
in
out
test
int3
pushf
bswap
or
inc
aad
loope
mov
cmp
into
mov
ja
loopne
addr16
and
or
movsl
push
lcall
lret
adc
and
lock
imul
cmpb
pop
jbe
fisubl
sub
cld
and
cltd
or
and
sub
sti
mov
xchg
loope
or
pop
loope
add
cmp
push
xchg
xchg
push
stc
cmc
mov
iret
aaa
int
cltd
mov
stc
xchg
sbbb
adc
in
into
adc
fsubrl
mov
test
call
loop
retw
lcall
mov
daa
jo
inc
xor
ja
jge
cmp
decb
lea
and
jo
adc
sarb
fwait
jp
ret
or
sub
push
push
movsb
into
mov
enter
jecxz,pn
fwait
cmp
call
sbb
sub
add
scas
cmp
pushl
insb
push
pop
movsl
inc
aam
fsub
xor
push
popf
xchg
out
inc
mov
pop
out
pop
decl
mov
fnstsw
js
pop
mov
mov
dec
inc
adc
rorb
inc
sbb
bound
pop
psubb
stc
mov
int
push
jnp
insl
push
jmp
jg
dec
pop
sub
jnp
rcl
pop
push
or
jmp
fstps
loopne
aad
clc
push
dec
test
mov
and
push
and
and
popa
imul
out
cmpsb
fdivp
rcl
gs
cmp
in
test
sahf
mov
stos
add
dec
push
rol
xchg
jns
inc
ljmp
cmp
mov
add
push
sbb
adc
push
sub
inc
movb
and
sub
rorl
jns
dec
sarb
xor
dec
adc
leave
push
rorb
adc
sub
in
jns
inc
mov
lock
mov
or
cmp
shl
sbb
sbb
scas
jmp
scas
popf
jg
cmc
mov
jae
sub
mov
das
lock
add
xchg
push
lcall
jne
nop
adc
adc
push
mov
fisttps
lret
xchg
idivl
fnstsw
out
xchg
dec
stc
testb
sbb
ret
imul
mov
sub
dec
mov
sahf
test
cmp
ja
gs
movsl
leave
jae
lods
pop
les
jno
jg
ret
dec
filds
jns
rcrl
adc
sub
ljmp
inc
and
dec
xchg
jmp
adc
cli
loop
jge
lods
fs
lcall
ljmp
pop
dec
lcall
pop
push
sti
data16
shlb
push
mull
adc
mov
imul
mov
gs
lock
dec
pop
imul
adc
pop
pop
mov
jecxz
dec
aad
fidivrl
loopne
mov
dec
mov
scas
flds
roll
lock
mov
fdivrl
mov
cmpsl
into
fbld
stos
mov
adc
int3
les
add
add
xchg
inc
mov
or
out
sub
push
pushf
into
add
lret
xor
mov
sbb
jecxz
shlb
lret
xchg
or
mov
jp
jp
xor
es
cmp
ret
les
adc
and
push
mov
jl
dec
shll
mov
cli
xchg
mov
dec
xchg
call
test
or
pusha
test
enter
mov
repnz
pop
jbe
mov
sub
push
das
insl
stos
mov
xchg
cs
aad
adc
xchg
test
repz
mov
sbb
stos
lods
inc
ds
pushf
jne
hlt
je
jbe
cmp
mov
ss
cmp
and
jnp
mov
xchg
mov
cmp
std
dec
lods
ss
into
mov
repz
push
xor
pop
push
sti
add
test
jne
xor
arpl
sub
dec
mov
in
shld
push
adc
xor
xchg
repz
test
fdivrp
jmp
out
or
ss
rorl
pop
in
pushf
mov
stc
mov
cmpsb
push
inc
dec
jecxz
xchg
add
sub
fdivl
cmp
or
jo
xor
sbb
clc
sub
cmc
sbb
mov
adc
or
cmp
aas
aaa
mov
rcll
xchg
call
xchg
lahf
cmp
xchg
mov
pop
rcrl
pop
lcall
bound
mov
cmp
sbb
outsl
ret
jmp
cmpsb
add
xor
das
jns
mov
add
es
and
dec
cmp
lods
pop
mov
sbb
rolb
in
xor
xor
jno
cs
push
rclb
fstps
insl
pop
insl
inc
leave
inc
lock
negl
mov
ljmp
inc
jae
xchg
rcll
fdivrs
mov
les
xor
mov
mov
inc
lret
pop
mov
popa
and
dec
lock
cmp
arpl
lret
ret
lret
adc
inc
daa
push
jmp
loopne
jg
dec
xchg
mov
cmp
xorl
int3
and
lahf
inc
fstl
xchg
andl
pusha
ljmp
cmpsl
and
ret
and
jmp
nop
mov
mov
loopne,pt
mov
fsubp
sub
fwait
in
ret
add
cmp
mov
mov
xor
sti
xchg
leave
cmp
rcrl
cmpl
mov
add
les
scas
fistpl
lods
cmp
stc
and
popa
lahf
sarl
pop
xor
push
mov
movl
sbb
mov
setl
pop
xor
sub
xor
jns
pop
out
sarl
iret
pushf
lahf
enter
repnz
sub
test
sbbb
aad
mov
cmc
stos
clc
mov
push
lcall
mov
dec
fdiv
xchg
js
push
inc
push
inc
das
gs
sbb
or
jae
adc
jmp
movsl
rol
stos
mov
dec
cmp
cmp
lea
inc
inc
lcall
push
repnz
inc
pop
dec
mov
xor
sbb
mov
ret
mov
mov
jnp
sub
cmc
in
fsubs
pushf
imul
ja
into
out
test
inc
jg
test
repz
push
loopne
fstps
out
testl
jle
int3
ds
sbb
rclb
mul
cmp
xor
sbb
xchg
imul
lods
scas
mov
das
pop
fcmovbe
cmpsb
das
mov
icebp
rcr
cmp
lds
mov
xor
add
inc
ficompl
mov
xchg
pop
and
lods
test
inc
mov
shl
xchg
nop
fsubp
xor
dec
xchg
ljmp
adc
mov
mov
repz
fwait
xor
incl
mov
xchg
xchg
mov
fidivl
lds
popa
addb
call
ret
shl
sub
movl
shrb
imul
and
cmp
xchg
nop
gs
ds
jae
and
rep
adc
cmpsl
adc
es
jb
sbb
adc
sub
mov
enter
inc
lds
xchg
cmp
in
mov
ja
setle
loop
sbb
add
and
es
ds
mov
sti
insb
pushf
daa
and
outsb
mov
xor
shlb
addl
cmp
rcrb
imul
repz
pop
sti
jmp
mov
jns
or
jmp
mov
inc
in
clc
sbb
inc
popa
test
push
mov
pop
je
subl
popa
mov
inc
cmp
add
sti
call
xchg
and
mov
lods
imul
mov
lahf
lcall
adc
jbe
push
push
ljmp
pop
pop
mov
outsl
mov
and
jg
data16
fs
xchg
cmp
mov
cmp
outsb
rcll
dec
pop
pop
pop
test
and
xor
pop
sarb
cmp
cmp
mov
adc
aad
and
fistpll
ret
addr16
aad
mov
repnz
mov
shll
cmp
cmp
repz
rcl
in
mov
sarl
jle
in
push
cmp
xchg
mov
nop
ljmp
aam
icebp
dec
xor
mov
jmp
pop
ror
arpl
inc
jge
nop
test
scas
pop
stc
lods
mov
cmpsb
inc
popf
mov
inc
mov
fsubrs
popf
ss
pop
aam
lret
test
mov
sub
sub
sbb
push
dec
fdivs
enter
push
sbb
rcr
aas
fcomps
lret
and
insl
lret
and
adc
lea
jb
in
fiaddl
sub
pusha
jne
sub
pop
xor
cwtl
dec
xchg
out
cltd
cli
insl
mov
jb
gs
sbb
sub
mov
les
es
mov
mov
movsl
mov
jl
xchg
mov
mov
push
popa
fisubl
rcr
lods
jnp
sub
jecxz
sbb
push
pop
xlat
xchg
add
call
pushf
in
bound
insl
jne
pop
into
mov
ss
inc
je
cmp
shrl
sbbl
aaa
inc
scas
jns
or
cli
jae
xor
cld
xor
lret
leave
or
daa
mov
mov
adc
push
jae
out
mov
xor
cld
or
adc
pop
pushf
jg
mov
mov
shlb
pop
push
jbe
pop
lock
icebp
pop
pop
sbb
jge
jns
loope
mov
cli
test
inc
inc
imul
mov
mov
mov
pop
pmaxub
xchg
xlat
adc
push
test
es
mov
andb
jo
cltd
das
xchg
lret
pop
sbb
insl
add
cmc
xor
subl
pusha
sbb
jg
jno
sbb
push
aaa
dec
aad
lret
mov
ljmp
daa
add
incl
enter
xchg
mov
mov
adc
fidivs
add
pop
sub
sub
ret
andl
movsl
sbb
loopne
and
sahf
daa
insb
mov
outsl
arpl
jnp
stos
mov
sbb
test
clc
xchg
sub
dec
out
push
dec
and
imul
xchg
sub
out
fldenv
inc
jmp
insw
subl
and
call
pop
or
sub
jmp
push
in
sahf
in
xchg
adc
mov
sbb
sarb
push
jmp
cmp
jle
sbb
pop
int3
insl
testl
orb
aaa
rorl
call
fsubs
cmp
call
push
sub
iret
lds
insb
ljmp
shlb
jo
cmc
cwtl
cmc
mov
les
cmp
xchg
jl
fldl
xchg
fsubr
jl
pop
jns
cmpsb
cmpsl
or
push
movsl
popa
js
inc
xchg
subl
mov
xor
push
mov
mov
inc
mov
aam
rclb
pushl
xchg
xlat
mov
sub
fidivrs
pop
daa
scas
pop
nop
inc
mov
mov
mov
push
sub
inc
adc
sbb
mov
addb
dec
mov
addr16
pop
nop
pop
test
fcoml
dec
or
mov
lcall
xchg
or
popf
pusha
inc
mov
outsl
iret
sub
icebp
call
out
pop
pusha
insb
je
push
sbb
sub
mov
push
in
ficoms
ds
adc
mov
leave
push
std
cmp
js
ds
jge
enter
cwtl
add
lret
adc
lods
iret
cmp
lods
sarl
arpl
cmpsl
or
mov
xchg
add
repnz
jge
xchg
jge
push
test
es
pop
popf
fcmove
scas
mov
dec
mov
js
jl
loopne
frstor
rclb
add
les
movsl
sbb
imul
push
popa
add
or
mov
lret
test
aaa
bound
add
xchg
adc
sbb
sub
push
sub
ds
lret
mov
jmp
sub
scas
push
dec
test
out
pop
rcr
add
stos
stos
add
aam
xor
mov
fwait
mov
cmpsb
fwait
jg
lret
hlt
test
int
adc
aam
in
das
in
movsl
xchg
inc
pop
mov
mov
pop
call
add
push
mov
xor
add
mov
cwtl
in
test
lcall
cmp
in
lret
fstpl
adc
sbb
in
call
div
adc
push
mov
pop
jmp
loopne
divl
aas
xchg
mov
jne
inc
jecxz
cmp
jo
rorb
cmp
sbb
clc
cltd
ja
mov
scas
pop
fsubrs
iret
jns
jp
xchg
scas
lcall
sub
jae
fdivrl
inc
and
lret
or
stos
leave
fwait
jg
repnz
jmp
cli
jns
call
pop
xchg
test
test
sbbl
jne
mov
fisttps
out
rcrl
in
imul
mov
mov
out
loope
adc
std
push
scas
fwait
clc
test
jl
sbb
insb
pop
pop
pop
mov
arpl
leave
fiaddl
mov
mov
imul
pop
pop
icebp
sub
ja
sbb
add
or
pop
cmp
addr16
dec
pop
mov
and
mov
mov
mov
or
insb
iret
enter
dec
add
ss
add
js
pushf
std
push
mov
lds
fiadds
cmp
ret
popa
or
mov
dec
adc
push
sti
pop
int
xchg
ljmp
mov
sub
mov
pushf
push
insl
outsl
xor
mov
pop
or
add
inc
lahf
popa
pxor
jno
repnz
xorb
in
push
fldl
in
out
cmp
jno
mov
fiadds
mov
push
cmpsl
xor
arpl
xor
or
mov
and
push
in
adcl
inc
sub
jl
es
in
mov
out
mov
push
mov
inc
fnstcw
popf
mov
inc
cmp
mov
stos
mov
cld
lahf
incb
sbb
xacquire
scas
cmp
push
pushw
out
fdiv
cmp
aam
or
repz
or
pop
mov
sub
andl
bound
inc
rcr
or
int3
xchg
iret
push
loop
xor
jmp
les
scas
lcall
cmc
movsb
fnstcw
push
scas
add
pop
loope
scas
data16
adc
outsb
mov
fadd
nop
lcall
daa
fdivr
clc
xor
cmp
fdivrs
faddl
icebp
pop
xchg
ljmp
xor
in
insb
test
movsb
and
adc
xorb
out
in
inc
js
div
xchg
repnz
xchg
or
pop
fcmovb
stc
jne
jbe
jb
out
mov
data16
cli
cmp
in
rolb
fsubp
xchg
inc
shll
cltd
fsts
stos
xchg
and
mov
rcll
push
mov
inc
ja
mov
dec
ja
test
sbb
adc
push
jnp
mov
addr16
mov
je
shr
shlb
das
dec
sub
push
inc
das
sar
xchg
dec
xor
adc
imul
lahf
sahf
insb
es
or
sub
add
in
rcrb
cmp
popf
xchg
push
std
in
orb
lahf
xor
and
leave
cmp
lds
leave
jmp
mov
adc
ficoml
sarl
mov
dec
cmpsl
mov
pop
xor
ljmp
mov
cwtl
cmpsl
fdiv
test
adc
or
jnp
cmpl
in
dec
orb
stos
loopne
xor
mov
mov
sbb
ret
fisttpll
add
fldenv
adc
mov
xchg
jno
mov
nop
aad
push
push
test
cmp
and
add
dec
cmp
xor
daa
pop
mov
jo
inc
je
mov
xchg
lcall
dec
shl
ss
loopne
movsl
pop
bound
repz
idiv
int
jb
mov
clc
pop
jns
jbe
repz
outsl
mov
aaa
in
xchg
cmc
and
mov
and
aad
cmp
mov
test
or
adc
push
aam
and
loopne
rcrb
adc
dec
xor
out
xchg
jo
sub
or
add
lods
clc
xor
sbb
fucom
sub
mov
add
inc
mov
or
or
mov
int
or
dec
outsl
dec
push
fwait
mov
adc
arpl
cmp
cmc
lea
xchg
adc
xor
enter
add
push
and
nop
iret
ss
les
fildll
adc
or
or
xchg
into
push
lods
jp
mov
lcall
mov
ljmp
sub
mov
mov
xchg
mov
loop
aad
lds
mov
cli
call
aam
ja
mov
and
cmp
aad
fadd
push
add
sub
or
mov
sbb
out
xchg
jo
inc
in
pop
fs
mov
jecxz
lret
adc
lods
cmp
test
jo
cmpsb
jb
mov
cmpsl
adc
cmp
ret
dec
ret
or
dec
pushl
loop
or
push
xor
push
jmp
repnz
cmp
lds
in
push
mov
or
call
pop
fsubs
test
imul
rcrb
dec
cmp
cmp
cmp
dec
adc
sbb
cmp
in
sub
or
dec
out
insb
aam
js
push
mov
shl
sarb
mov
dec
xor
and
out
cmpsb
or
cli
xor
in
aam
test
pushf
mov
mov
sub
push
jl
out
jae
fisttpl
fildl
out
ja
loope
xchg
jnp
add
push
in
push
ds
pushf
add
add
mov
and
daa
or
jno
mov
pop
or
popa
adc
dec
inc
hlt
and
xor
lea
inc
loope
sub
jmp
pushf
sub
sbb
popf
imul
xlat
nop
iret
add
pop
rolb
mov
cmpl
xlat
ljmp
inc
mov
dec
mov
pop
adc
repz
mov
ret
cltd
inc
outsb
fnsave
enter
cltd
jecxz
mov
xorl
mov
xchg
xor
std
aaa
and
mov
dec
sbb
rcrl
shll
xor
cli
inc
aas
push
xor
dec
in
insb
cmova
popf
push
jne
inc
adc
outsb
loopne
pop
inc
lret
out
je
add
jno
in
test
push
cmp
pushf
dec
mov
lea
fisttpl
mov
lods
insb
push
int3
test
xor
in
dec
test
ds
sub
mov
ret
jecxz
shrl
dec
dec
add
mov
xchg
inc
cli
ljmp
repz
jecxz
insb
enter
hlt
test
mov
pushf
insl
pushf
sbb
stos
mov
je
bound
movsb
testl
ja
adc
int3
cmp
adc
xchg
es
nop
inc
xchg
mov
sbb
sahf
aas
xchg
dec
dec
cmp
arpl
jo
test
cmc
adc
mov
jmp
das
sub
mov
ret
dec
push
test
xor
mov
xchg
aas
mov
mov
mov
sarb
int3
adc
and
hlt
xchg
jge
inc
clc
ret
aaa
iret
das
in
les
jbe
ret
pop
jp
cmp
adc
loop
sub
loope
xchg
or
and
inc
loopne
lods
inc
and
aas
jne
movb
xor
xor
test
mov
adc
jae
adc
dec
jb
scas
sub
imul
inc
dec
stos
scas
ss
clc
xor
outsb
sbb
test
dec
cmp
inc
xchg
push
pop
push
mov
or
add
add
xlat
sbb
incb
push
mov
push
jp
pop
pop
addb
cld
in
es
pop
jnp
popf
pop
repnz
lea
jno
sub
sbb
sub
mov
iret
mov
push
fistps
jbe
repz
ret
dec
dec
arpl
jne
dec
pop
dec
fs
sbb
jbe
cmp
loop
aas
lock
sbb
mov
mov
pop
mov
insb
jae
je
mov
push
hlt
and
adc
stos
push
push
sbb
mov
cmp
dec
sbb
pop
adcl
ja
xlat
adc
repz
aas
xlat
movsl
mov
sbb
lret
xor
add
jle
sub
mov
fcmovnbe
push
add
mov
mov
pop
push
inc
mov
fmul
dec
ljmp
fisttpll
ja
std
movsb
mov
xor
dec
mov
loop
mov
mov
mov
add
mov
addr16
sahf
jae
jmp
pusha
enter
not
xor
int
out
iret
fs
jmp
js
popl
and
sub
in
jbe
xchg
adc
les
test
in
add
dec
adc
and
mov
xchg
and
std
in
mov
xchg
lret
shll
cmp
daa
sti
lods
out
addr16
xlat
mov
shll
push
sbb
cmpsl
lcall
cmp
in
inc
push
insl
mov
dec
outsb
std
jo
dec
inc
xchg
std
mov
loopne
js
sbb
push
shll
loop
loopne
hlt
jnp
shr
out
aas
push
aam
and
popf
into
mov
in
lds
cmpsb
sahf
push
fcoms
cmp
stos
cs
ds
lret
mov
stos
cmc
xchg
pop
and
fs
and
cmp
inc
test
sub
xchg
lds
loopne
inc
xchg
push
test
mov
pusha
pusha
push
inc
cmc
stc
xchg
outsl
push
add
push
dec
shl
cmpsb
pop
mov
insl
jg
dec
jg
sub
mulb
cltd
add
imull
xlat
pop
dec
dec
xor
pushf
lods
in
or
inc
cmpsl
jp
inc
outsl
fwait
add
sub
dec
inc
insb
xor
jno
jp
mov
adc
pop
sub
pop
cs
bound
push
fstpt
pushf
or
xor
arpl
mov
scas
dec
mov
dec
lcall
lahf
xchg
push
and
pop
sarb
sub
dec
int
and
mov
in
and
xchg
aaa
std
mov
pop
cmpsl
int
mov
xchg
xchg
xor
adc
sub
or
repz
and
cli
mov
mov
in
mov
cwtl
inc
out
test
sbb
and
enter
lahf
rorb
xor
out
pusha
rcll
xchg
pop
scas
scas
ret
xchg
insl
mov
testl
mov
sahf
mov
mull
mov
aaa
adc
out
jo
lret
out
pop
push
sbb
movsb
add
or
ror
cltd
dec
roll
mov
push
inc
push
cli
stos
mov
sub
test
push
enter
lock
aaa
fstpt
dec
sub
lock
mov
jmp
jno
push
mov
xor
fwait
sub
jnp
cmp
pop
xchg
ljmp
sub
adc
dec
cmp
push
add
fdivr
inc
push
xchg
loopne
lods
xlat
clc
pop
add
ret
ds
popa
cmp
shrb
mov
arpl
insl
int
add
movsb
mov
mov
negl
in
xor
mov
and
sbb
dec
xchg
pop
and
test
es
fs
push
xchg
ror
jge
call
popa
push
jb
lret
inc
push
imul
sti
mov
sub
pusha
sub
dec
and
addr16
shrb
jmp
and
sub
int3
jmp
lret
push
pop
jns
cmp
xor
ja
stos
or
add
nop
adc
jle
mov
mov
or
jo
xor
test
in
dec
cltd
stc
clc
sbb
cltd
popf
jmp
adc
clc
fsubrl
cmp
xchg
cmp
enter
lea
cmpsl
and
test
not
nop
jecxz
push
mov
mov
dec
jne
fxch
filds
xchg
mov
divl
in
andl
jmp
fsubrp
daa
dec
mov
cwtl
inc
pop
pushf
fwait
and
fs
hlt
ljmp
cmp
sbbb
aaa
movsb
push
shl
and
and
lods
test
mov
enter
jmp
cmp
or
or
fiadds
mov
sub
lock
dec
adc
jo
xor
orb
js
in
pop
push
insb
or
iret
daa
lahf
xchg
in
fmulp
orb
push
sub
or
bound
xorb
mov
out
push
sbb
mov
iret
cmpsb
sub
cmp
les
jle
aas
mov
aam
pop
mov
mov
adc
mov
mov
inc
push
pop
jp
popf
push
lret
or
cltd
adc
rorb
jne
sub
mov
xchg
xchg
in
xchg
das
push
ljmp
jg
popa
sbb
js
loopne
mov
cwtl
jl
into
jno
scas
pop
int
xor
gs
and
inc
test
push
dec
dec
les
call
mov
inc
add
or
dec
push
mov
mov
fucomip
into
leave
movsl
clc
popa
add
inc
mov
scas
inc
cli
xchg
pop
daa
scas
add
mov
push
lds
sub
nop
int
mov
add
push
loopne
rorb
sti
xchg
rcll
fsubrs
xor
lods
dec
loop
or
test
addb
or
jmp
pushf
jl
iret
xor
in
xor
inc
icebp
mov
ds
mov
cmp
mov
and
mov
sbb
add
adc
sub
and
sub
stc
test
stos
add
mov
lea
sbb
jge
and
add
xchg
adc
scas
imull
dec
nop
adc
out
les
sahf
pushf
cmp
and
gs
dec
daa
or
adcw
shll
or
dec
ret
adc
mov
ds
add
pop
cmpsl
aaa
mov
pop
and
into
and
sub
dec
inc
or
mov
movsb
push
adc
jns
sti
test
and
iret
fistpl
push
test
sti
inc
cli
dec
stc
or
ss
inc
add
cmpsb
fwait
movsb
jl
clc
cli
push
pop
jp
xlat
inc
xchg
fistl
jnp
sbb
inc
in
lcall
insl
icebp
jns
push
sti
es
mov
mov
sub
dec
hlt
jnp
loopne
push
sbb
cmp
sub
push
mov
repz
into
jnp
xor
inc
dec
ret
push
and
cmp
mov
in
test
push
stos
adc
mov
gs
imul
repz
flds
push
test
fwait
loope
iret
je
je
xchg
lea
push
add
movsl
arpl
lcall
mov
int
dec
push
pushf
ficoms
in
xor
mov
cwtl
roll
add
mov
shll
cmp
sbb
xchg
out
jns
adc
mov
stos
mov
dec
push
das
in
or
sub
sbbl
imul
push
pusha
hlt
mov
cmp
in
cmpsl
lret
and
imul
adc
ljmp
mov
sub
and
push
les
nop
add
out
inc
pusha
rorb
push
jno
dec
sub
sbb
push
in
cmp
sub
mov
jno
ljmp
dec
rcll
pop
cmpsb
cmpsb
nop
dec
jecxz
fisttpll
and
popf
push
inc
sub
mov
addr16
in
inc
pop
xor
mov
aam
cmpsb
out
mov
cmpsb
jg
mov
imul
adc
ljmp
mov
or
out
dec
push
mov
in
fmulp
fwait
nop
stos
lds
ret
dec
cmp
popa
mulb
mov
int
lock
pop
scas
test
pushf
or
loope
stos
adc
imul
int3
lahf
loope
rolb
push
loop
adc
leave
outsb
xchg
cmp
cmp
xchg
lock
add
leave
sbb
add
adcb
cmp
sbb
mov
leave
xor
cmp
fldt
in
sub
daa
mov
sarl
mov
sbb
xchg
sbb
mov
test
add
test
push
push
dec
add
mov
bound
lds
imul
inc
mov
mov
in
push
mov
jnp
nop
jno
mov
sbb
sub
les
add
sbb
sar
ss
clc
push
leave
mov
daa
fistpl
xchg
addr16
insl
es
lret
enter
push
mov
push
not
inc
icebp
enter
decl
test
cmpsl
into
ss
mov
les
sarl
xor
mov
pop
popf
mov
cmp
mov
add
dec
in
adc
xchg
cli
xor
or
dec
or
sarb
xchg
scas
mov
fldl
call
sub
aam
mov
cmp
mov
jb
ds
jle
jg
xlat
loop
pushf
leave
popa
rcll
add
dec
mov
pop
xlat
push
cwtl
sub
xlat
adc
xchg
add
cmpsl
adc
int3
addr16
xchg
push
xor
sbb
sbb
dec
outsb
mov
add
stos
push
sbbb
and
jge
in
cmp
adc
xchg
data16
push
jge
pushf
call
adc
inc
inc
int
dec
outsb
lods
xor
pop
dec
adc
or
and
sub
inc
push
pop
inc
pop
dec
jl
repz
pop
shl
xchg
add
sbb
mov
imul
lock
stos
ret
pop
nop
inc
fisubl
iret
sub
mov
add
dec
mov
push
jb
dec
out
mov
mov
sar
inc
cmpsl
sub
sub
mov
ret
insb
mov
jnp
jge
scas
fmul
cmp
add
sbb
adc
fwait
pop
jle
cld
mov
or
test
je
ficoml
clc
cmp
xor
jbe
cmpl
mov
sar
pop
inc
add
pop
outsb
into
adc
in
pop
enter
lret
pop
addr16
sub
adc
or
test
pop
inc
test
xchg
xchg
jnp
and
pop
aam
inc
ret
rcrb
ret
push
pushl
mov
sub
adcl
clc
xchg
repz
push
mov
xchg
mov
push
or
lcall
mov
sbb
or
add
cmp
enter
mov
mov
popa
ficoml
pop
xchg
inc
cmp
idivb
pop
stc
lret
fs
dec
jg
mov
clc
bound
arpl
fdivrl
daa
or
add
test
inc
sahf
and
jnp
cltd
jle
in
cmp
cwtl
nop
pop
mov
add
aas
fcomip
stc
subl
jp
mov
scas
cmpsb
sbb
das
pop
mov
movsl
and
fstpt
movl
inc
xchg
xchg
movd
dec
push
imul
sti
int3
cmp
cmp
imul
aaa
imul
add
bound
dec
in
bound
push
jl
jecxz
xchg
jle
je
push
imul
mov
test
repz
xchg
rcrl
hlt
outsl
dec
scas
nop
icebp
roll
pusha
adc
cmpsb
hlt
sub
mov
mov
rorb
push
and
xchg
xchg
mov
or
cmpsl
int3
sahf
push
test
fwait
das
movsl
and
sub
loopne
push
jl
andb
inc
test
mov
jp
insb
lret
mov
inc
xor
mov
call
es
inc
pop
sub
mov
shl
pop
inc
jmp
lahf
arpl
sub
xchg
jo
cmpsl
cwtl
xor
nop
fists
shlb
jle
ja
add
xorl
dec
or
jbe
sub
dec
lods
sub
jbe
push
aaa
and
loopne
inc
adc
test
fs
dec
ret
xchg
and
dec
rcl
fsub
lret
sub
mov
mov
xchg
pushf
mov
fsubrp
sbb
xor
and
int3
or
shll
mov
push
popf
outsb
or
inc
lock
out
daa
mov
xchg
sub
add
sbb
push
call
mov
sbb
jl
xchg
push
inc
cmpsl
or
adc
push
repnz
out
mov
jp
and
dec
jg
mov
adcl
xchg
adc
rorb
xchg
ja
mov
or
xchg
mov
push
iret
push
inc
shrl
andl
xchg
jmp
arpl
hlt
loop
loop
sub
pop
or
in
inc
sbb
fldt
cwtl
or
sub
adc
cmpl
hlt
repz
test
sub
push
outsb
jnp
movsl
xor
xor
mov
cmpsb
cmp
roll
jg
fldt
dec
std
clc
call
dec
dec
mov
mov
mov
sub
xchg
cmp
xor
xchg
mov
or
or
insl
ficoms
out
rcrb
or
mov
sti
xchg
inc
jl
lcall
mov
call
sahf
cmp
movsl
jne
mov
adc
ds
mov
pop
inc
push
mov
out
mov
mov
or
movsl
add
call
add
adc
adc
out
lds
mov
out
or
inc
cmp
adc
mov
outsb
insb
or
mov
xchg
pop
scas
cmp
mov
or
sbb
negb
jmp
sbb
push
mov
cmp
loop
popf
fsubs
adc
je
lret
clc
clc
stos
ret
xchg
add
mov
xorl
repnz
xor
push
push
sub
mov
pop
cld
mov
and
scas
or
or
push
cmpsb
cmp
sbb
mov
dec
mov
xchg
pop
iret
mov
fmuls
cld
xchg
test
das
movsb
mov
insl
sub
dec
mov
jbe
mov
cmp
jae
sub
cli
mov
fldcw
mov
add
sbb
push
loopne
jne
out
push
mov
and
xchg
movsb
sbb
leave
scas
test
add
xor
push
xor
or
dec
and
mov
test
jl
or
fistpl
mov
jg
xor
jne
in
adc
testb
movsb
out
popf
push
addl
sahf
jae
cmp
and
testl
loopne
or
in
mov
mov
dec
in
pop
movsl
mov
jo
std
jecxz
outsb
pop
adc
dec
hlt
inc
ljmp
lea
mov
in
xor
pop
mov
add
mov
jp
in
dec
sub
adc
loopne
sbb
push
int3
data16
rolb
cmp
adc
int
and
out
adc
mov
and
cmpsb
arpl
jo
mov
movsb
sbb
pushf
outsl
sub
cs
je
rorl
mov
or
and
jle
adc
loopne
mov
adc
push
sub
push
push
push
sub
insl
xchg
fidivs
cli
and
or
push
mov
mov
outsb
jno
xor
xchg
clc
outsl
push
arpl
dec
pop
mov
mov
rorl
and
iret
jo
mov
push
addl
pop
daa
pop
loopne
xchg
mov
shl
sbb
sbb
shrl
shrl
inc
mov
sbb
sbb
xor
in
pop
lcall
xor
aad
popw
js
push
daa
cmc
and
cmp
pop
loope
sbb
pop
adc
mov
fcmovnb
popf
mov
iret
fisttpl
pop
push
cltd
jnp
cmp
cmpsl
or
jl
ds
sbb
sahf
lcall
push
add
jge
int3
sub
je
outsl
xchg
add
mov
and
daa
ja
mov
cmpsb
xor
xchg
cs
shrb
xor
stos
inc
xchg
or
add
jne
mov
mov
mov
add
add
filds
mov
repz
movsb
push
subl
clc
xchg
fcomi
xchg
push
addr16
xlat
mov
mov
and
xor
jo
or
mov
sub
xchg
fs
cwtl
mov
xlat
xor
xor
mov
jmp
xchg
sub
mov
hlt
lock
push
fisubrs
mul
insb
repnz
test
loop
inc
xchg
shlb
jmp
lret
cmp
cmpsl
mov
dec
stos
pop
je
mov
cmp
mov
aad
nopl
pop
cli
or
rolb
push
fbstp
or
xchg
int
xor
loop
lods
add
sub
sbb
iret
pop
push
aas
mov
fs
dec
mov
mov
jg
adc
shl
fisubs
xchg
lcall
add
lahf
es
insl
call
loop
mov
or
push
ss
push
cmp
sub
xchg
fisubrl
jp
in
xor
fidivrl
icebp
call
mov
xchg
fsubrl
lods
mov
test
leave
xchg
and
cmp
mov
inc
imul
lret
dec
pop
imul
xor
pop
xchg
mov
mov
ret
jle
loopne
pop
int
xchg
push
pop
jge
inc
sub
fstpl
xchg
dec
sub
leave
int
repz
jg
sahf
lods
or
jae
mov
imul
mov
fwait
movsb
push
fisttpl
mov
sbb
lahf
xchg
xor
or
or
je
das
or
std
mov
into
aad
jo
pop
jnp
jo
je
sahf
or
mov
push
and
xor
push
mov
lret
adc
into
sti
test
fisubs
cwtl
xchg
cmpsl
jge
scas
outsl
adc
xor
imul
popf
sub
in
cmp
andl
or
int
mov
sub
test
cmpsl
scas
pop
mov
imul
push
out
mov
rclb
xchg
mov
jle
inc
or
pop
mov
pop
outsl
gs
xchg
dec
pop
mov
lock
insl
xchg
lods
sbb
insl
fdivp
push
in
sti
push
mov
iret
and
mov
xor
xorb
cmp
fdiv
push
inc
xlat
fisubs
sbb
dec
or
outsl
cmp
cmp
andl
cmp
outsb
push
lods
xchg
pop
lds
pop
pop
xor
or
cli
inc
jno
stos
push
dec
xchg
sbb
je
pop
in
xor
fnstenv
gs
loop
adc
dec
sub
xchg
out
lods
stos
fsub
imul
xchg
sbb
dec
sub
daa
cmp
addl
sbb
jb
push
xchg
xchg
addr16
sbb
sbb
add
lds
pop
push
fsubrl
inc
sbb
jmp
gs
rcll
daa
mov
roll
mov
add
lea
fistps
jecxz
push
adc
dec
jl
cli
jne
inc
mov
fs
fisubrs
xchg
ds
jae
xchg
fwait
insl
loope
jg
inc
jne
lret
notb
push
or
dec
xor
pushf
outsb
jle
mov
scas
cwtl
push
sub
ret
adc
push
xchg
mov
mov
adcl
stos
arpl
inc
push
rol
jb
popa
js
mov
cmp
mov
out
orb
mov
mov
das
pushf
cmpsl
cwtl
in
stos
mov
stos
les
xor
psrad
push
test
add
movsb
push
xchg
jle
pop
push
popa
ret
cli
xchg
test
mov
mov
pcmpgtb
rcrl
lret
dec
add
call
mov
cld
mov
adc
int
aaa
mov
push
scas
arpl
inc
shl
sbb
les
jle
stos
cli
aaa
mov
add
in
hlt
xor
mov
call
add
lret
pusha
mov
xchg
dec
aas
xor
je
dec
lret
je
adc
jnp
sbbl
repnz
into
out
ds
das
out
clc
loopne
jb
xchg
pop
add
aam
xlat
push
and
es
pop
loopne
movl
xchg
cmc
mov
fisubrl
mov
loope
mov
and
push
lea
cs
pop
xchg
outsb
nop
lock
lret
inc
sbb
aaa
push
jne
or
sub
cwtl
outsb
pop
lods
dec
fidivl
sub
xchg
jnp
sahf
sbbb
mov
sub
push
data16
movsl
and
sbb
sbb
mov
into
outsb
sbb
in
push
addb
cmc
aad
dec
popf
cmp
int3
mov
idivb
push
mov
in
mov
cmpsl
cwtl
rclb
pop
adc
je
nop
jne
or
popf
stos
adc
ja
add
mov
pop
gs
fwait
popf
jge
hlt
cmpsl
xchg
and
imul
cltd
jne
xlat
and
sbb
add
cli
mov
fwait
mov
fisubl
sahf
jecxz
sbb
jne
test
add
pop
std
iret
pop
popf
jne
pop
add
mov
mov
shrl
dec
cmc
movsb
cmp
mov
aaa
ror
jo
pop
movsb
lret
scas
mov
or
pop
scas
jmp
push
add
lock
pop
test
rcrb
daa
inc
or
push
and
and
mov
or
mov
jbe
xchg
mov
lret
daa
ret
add
mov
sub
ret
je
std
iret
cmp
les
sub
test
xor
mov
xchg
rclb
mov
into
loop
sub
inc
xchg
mov
sbb
push
jo
pop
das
test
add
les
ss
out
push
push
fisttps
dec
add
mov
mov
mulps
or
push
pop
aaa
xchg
xchg
inc
mov
das
inc
xchg
jo
ja
orl
addr16
dec
and
sbb
dec
out
fistps
pushf
dec
dec
sti
pop
lds
mov
mov
cld
and
cli
xchg
xorl
sub
test
iret
jns
jno
sub
push
pop
mov
inc
shrb
fisubl
xchg
mov
movsb
and
fs
inc
mov
xor
decb
jo
daa
sti
mov
popf
mov
daa
jecxz
into
pop
add
hlt
sub
push
mov
push
clc
sbb
xlat
jge
jo
outsb
mov
fnstcw
mov
rcrl
jno
lods
lret
adc
adc
out
mov
xor
pop
lcall
mov
mov
mov
enter
xchg
inc
or
sub
ret
popa
push
mov
sub
cmp
xlat
sub
xchg
cmp
cli
dec
adc
inc
dec
bound
lcall
pop
bound
jmp
enter
pop
sub
mov
call
xchg
out
jns
ljmp
dec
pop
arpl
jge
push
adc
lret
out
js
arpl
movsb
cmp
push
mov
test
ss
push
repnz
cs
xor
sub
test
xchg
push
add
stos
xchg
dec
sub
pop
push
dec
cmp
jns
sbb
test
push
adc
imul
dec
test
push
call
push
dec
cld
mov
mov
mov
cmp
push
nop
rcl
repz
call
sub
insb
xlat
mov
in
push
push
lods
mov
add
dec
add
in
pop
adc
cwtl
sub
push
fs
add
mov
cs
rcrl
sub
cmp
pop
call
rolb
mov
aad
daa
cli
or
stos
jb
inc
add
pop
push
ss
les
ja
fidivrs
in
sub
dec
sbb
dec
xchg
mov
jp
add
imul
bound
jb
lea
pop
cmpsb
ret
add
cmp
mov
and
pop
add
sbb
test
pop
pop
in
mov
lds
cmp
arpl
popa
mov
cmpsb
mov
in
cmpsb
test
cs
cld
ljmp
out
data16
loopne
add
mov
push
push
sahf
push
inc
arpl
cltd
shll
push
lret
xchg
mov
lods
mov
popf
shll
mov
and
jle
xor
pop
fwait
imul
cmpsb
and
mov
in
shl
jle
stc
adc
jg
lea
jae
sbb
mov
std
mov
outsl
lods
mov
xor
cmp
loop
cmp
iret
pop
out
stos
push
mov
fistpl
mov
bound
es
cs
pop
pop
imul
insb
xchg
mov
out
std
dec
ja
xchg
sti
or
mov
stos
xlat
mov
in
ret
xor
je
add
adc
inc
loope
popa
cmp
std
pusha
cmp
adc
cmpsl
or
adc
clc
nop
inc
xor
iret
cmp
sub
out
xchg
and
and
movsl
jge
cli
jmp
cmp
mov
inc
jo
pop
fisubrl
lea
adc
out
mov
enter
sar
ds
sbb
in
xor
xor
mov
xor
les
je,pn
push
jns
cmp
cmp
and
imul
sub
divl
push
ds
ds
mov
int
popf
call
inc
in
jb
hlt
int3
sbb
cmp
lret
add
or
test
arpl
pop
add
int
jmp
inc
inc
add
sub
jae
mov
lahf
sti
xchg
mov
clc
jbe
sub
add
sub
mov
cmp
mov
xchg
and
fldt
leave
push
push
xor
cmp
cmc
push
sub
add
add
push
cmpsb
dec
mov
lods
pop
ja
pop
ret
call
and
add
out
idivl
movsb
aad
out
pusha
repnz
call
lea
ss
mov
jbe
in
mov
int
adc
not
adc
jecxz
xchg
mov
dec
in
add
jle
and
and
add
mov
dec
dec
push
pop
int3
mov
in
mov
mov
cmp
in
inc
mov
dec
inc
add
push
push
mov
test
cmp
sub
add
mov
xor
rcrl
scas
mov
and
mov
es
subl
inc
repz
inc
scas
mov
aas
sbbb
cmp
popa
or
cmp
inc
xor
xor
movsb
mov
mov
cwtl
int3
or
ss
push
mov
aaa
push
in
mov
jecxz
cwtl
xor
push
aaa
lcall
xor
mov
xchg
inc
negb
xor
fwait
dec
xchg
and
cs
cmc
dec
ljmp
icebp
xor
jg
dec
sub
jno
setbe
cmp
inc
xchg
in
mov
push
in
iret
mov
sahf
in
pop
ret
xchg
fidivrs
xor
nop
out
push
lods
cs
arpl
leave
xor
cmp
lds
call
clc
jb
cmp
out
xorl
movsl
xchg
sbb
mull
in
cmp
out
add
sbb
lret
jge
mov
lods
into
push
cmpsl
add
pop
inc
xor
adc
sbb
sub
dec
test
push
stos
lahf
pop
imul
mov
cmp
aas
dec
push
stos
repz
mov
and
pushf
les
and
pop
cmp
sahf
pop
sbb
fstl
adc
jmp
push
mov
xor
scas
lret
mov
or
ds
push
dec
mov
fistl
jecxz
push
lea
mov
jle
xor
jmp
scas
test
lock
inc
jge
out
xor
ud1
dec
adc
sub
pop
mov
test
out
jae
adc
testb
mov
adc
loopne
xorb
cwtl
sti
shll
push
mov
dec
lcall
sti
cwtl
sbb
or
call
pusha
subl
scas
in
adc
add
add
js
pop
pop
lahf
ljmp
data16
clc
enter
lcall
lea
pop
orl
ja
cmp
and
popa
adcl
cmpsb
jmp
xor
and
lcall
cmp
jnp
loop
mov
fwait
cmpsl
imul
jl
data16
push
cmpsl
roll
int
mov
or
mov
xchg
mov
mov
cmp
fs
or
mov
jb
or
cmpsb
and
sahf
push
xchg
ljmp
dec
or
out
faddp
in
push
mov
callw
mov
xor
dec
sbb
inc
push
fidivs
cli
in
jae
and
mov
add
xor
add
adc
test
and
cmpl
das
xchg
leave
cmp
dec
pop
inc
jg
mov
popa
dec
icebp
in
cmc
lea
loope
outsb
xchg
jl
xchg
cltd
mov
sbb
cs
and
outsb
add
fadds
mov
mov
mov
jne
fisubs
daa
fsubrl
out
imul
mov
outsl
lret
adc
dec
xchg
mov
imul
pop
xchg
out
xchg
dec
jbe
filds
aas
shr
inc
inc
sbbb
jnp
push
les
push
push
pop
pop
cmp
xchg
fwait
roll
sbb
xchg
outsl
les
add
jnp
test
fadds
xchg
js
pop
dec
jno
adc
divb
pop
mov
pop
std
cs
repz
arpl
addr16
push
xor
jo
fdivrs
inc
lods
enter
xor
enter
jb
jp
add
clc
aaa
add
pop
sub
mov
in
xor
ret
movsw
ljmp
xor
in
jns
mov
mov
mov
sti
insb
cltd
cmp
mov
into
pop
scas
popa
push
push
jmp
mov
mov
dec
out
fdivrs
add
repz
jl
leave
ja
xchg
inc
scas
dec
or
scas
pop
test
sbb
lock
shlb
addr16
or
scas
orl
je
aam
xlat
ss
aad
lods
cmpsb
or
les
mov
sbb
mov
adc
fdivs
add
mov
inc
add
mov
xor
mov
push
push
arpl
pop
add
andb
insl
out
mov
xchg
out
les
xor
mov
ret
mov
cmpxchg
mov
icebp
sbb
cmp
ljmp
bound
sbb
shlb
imul
xor
stos
add
mov
fisubs
cmp
push
enter
dec
fldenv
es
mov
pop
les
xor
mov
pusha
lret
mov
xor
xor
sub
insb
inc
push
lock
jp
dec
mov
inc
adc
xorb
jae
arpl
shll
sub
mov
test
mov
pushf
loop
fldcw
sbb
sarl
sbb
je
sub
les
mov
inc
xchg
add
pop
icebp
fcomps
push
fwait
lock
adc
add
stos
addb
test
ret
das
test
cld
popa
fstl
mov
xchg
and
icebp
jo
jp
mov
pmaxub
lods
pop
loope
ret
cmp
std
aaa
fisttpll
xchg
push
test
push
cmpsl
aam
dec
push
inc
ljmp
pop
xchg
insb
mov
jns
and
addr16
lds
in
cmp
mov
xor
in
or
add
icebp
enter
jb
cwtl
arpl
xchg
xchg
cs
int
add
popa
aas
jg
sub
repnz
les
cmc
jp
ret
inc
mov
test
xor
int
repnz
sarl
push
mov
cmp
xor
rcrb
fmuls
in
enter
inc
jmp
mov
sbb
sub
bndldx
sub
inc
xor
dec
stos
fbld
cmc
mov
xor
and
in
dec
xlat
popa
in
sti
sub
daa
mov
imul
in
mov
or
inc
add
shlb
fs
cmpsb
outsb
add
mov
imul
sti
add
and
ds
jg
fbld
adc
mov
in
es
push
or
inc
and
and
xchg
or
enter
or
jnp
xchg
mov
or
mov
outsb
pop
adc
push
fs
cli
inc
xchg
dec
and
xor
clc
mov
pop
out
sbb
and
adc
push
jecxz
or
xchg
cli
pop
aaa
xor
lea
cmp
and
sbb
mov
and
testb
jns
out
sub
mov
sbb
jmp
pop
ss
xor
mov
ljmp
fs
cwtl
vpshaw
gs
mov
push
sbb
inc
push
ljmp
aaa
test
push
jo
jo
mov
push
and
cmp
mov
outsb
and
xchg
lods
mov
sti
test
pusha
out
cmp
mov
cmpl
add
out
aad
movsl
or
lcall
mov
daa
aaa
in
and
adc
xor
inc
and
cmp
pusha
into
pushf
mov
push
into
xchg
fs
lods
lret
popf
insb
or
sub
bound
arpl
xchg
mov
test
insb
pcmpeqb
movsb
add
sub
add
movsb
cmp
adc
lds
xchg
or
fimuls
add
aas
enter
dec
dec
mov
aam
mov
or
xchg
negl
loopne
xchg
jp
sti
pop
lock
loope
addl
or
mov
adc
jecxz
lret
orl
loop
icebp
je
mov
xor
loopne
pop
sub
mov
outsl
and
and
incb
stc
jne
pop
adc
fs
pop
cmp
fldenv
aam
dec
loopne
inc
mov
add
out
pop
xor
shlb
mov
and
lea
sbb
notb
stc
lea
je
ja
hlt
testb
mov
fstps
int
add
sub
lock
inc
cs
xchg
xchg
les
dec
fs
inc
loope
in
lret
repnz
mov
cltd
ds
cmpsl
pop
shl
push
add
in
mov
lock
into
ret
ret
ret
inc
or
jle
gs
loope
scas
jae
outsl
jnp
outsb
mov
cmp
sbbb
mov
in
pop
ret
out
mov
daa
jne
fldt
outsb
push
jl
mov
subl
fldenv
dec
pop
adc
in
out
jne
adc
leave
mov
shll
xchg
cmp
mov
push
mov
add
lret
push
add
movsl
push
mov
shll
cmp
or
inc
lret
mov
adc
fucomi
pop
mov
pop
loope
push
add
mov
cmpsl
cmp
fs
or
icebp
pop
jnp
test
scas
movswl
sbb
inc
xchg
inc
scas
inc
jo
mov
sub
sahf
cmp
jo
icebp
adc
rclb
mov
out
enter
pop
sub
lock
imul
mov
movsl
jo
insb
mov
in
xchg
aam
shl
xchg
lock
rorb
sub
and
sub
jmp
mov
daa
fistl
sar
xchg
movb
lret
push
inc
cs
mov
gs
or
xchg
scas
ds
shrl
push
out
and
cmp
or
aam
daa
icebp
aaa
insb
test
scas
push
sub
test
lock
cmp
mov
jp
jmp
popa
jmp
xchg
mov
mov
sahf
dec
out
push
rcrl
sub
and
shlb
jge
mov
cmpsb
inc
sbb
inc
push
aad
and
push
mov
or
outsl
popf
sub
insl
fdivp
xchg
pusha
or
call
cmp
icebp
fwait
fwait
sahf
imulb
inc
xchg
stc
mov
push
dec
adc
or
and
daa
lods
enter
ret
lock
add
adc
pop
mov
pusha
lods
pop
popa
pop
add
popf
sbb
dec
loop
inc
test
stos
pop
xchg
js
push
andb
mov
insb
int3
and
mov
add
out
cmp
imul
js
aaa
fmuls
xor
sbb
jl
adc
jns
out
fwait
iret
xchg
pop
dec
pop
lods
and
inc
push
pop
stc
testl
mov
pop
shlb
cmpsl
test
inc
lcall
bound
in
jns
test
clc
jp
push
insl
into
fdivrl
adc
ret
mov
ja
call
dec
shlb
pushf
mov
cltd
and
cld
outsb
aam
divb
mov
stos
jg
dec
orb
push
mov
xlat
ficoms
mov
es
enter
or
incb
mov
pop
push
xchg
jo
add
add
and
stos
sbb
lods
clc
sbb
pusha
xor
xor
cmc
lock
push
test
push
mov
test
push
out
iret
xchg
jae
dec
push
rorb
aas
mov
xor
lcall
int3
insl
in
outsb
movb
pop
lret
mov
arpl
pop
lock
mov
lock
xor
lock
dec
nop
leave
loop
bnd
add
in
jmp
mov
jnp
nop
shl
shlb
cmp
and
andb
test
sub
sahf
ds
outsb
dec
fidivrl
subl
lret
ret
clc
inc
enter
and
leave
push
mov
push
lods
jp
jle
imul
xor
imul
add
in
add
or
rcll
je
and
adc
push
adc
negl
outsb
fs
ret
popa
testb
push
mov
mov
xchg
mov
lahf
push
stos
cltd
mov
jae
sbb
sahf
xchg
jbe
in
mov
sbb
movb
lods
xchg
dec
push
iret
hlt
imul
add
inc
ret
adc
jmp
fnsave
jp
pop
cld
xchg
inc
scas
fstpt
fisubs
and
push
cmp
adc
jbe
jmp
popf
cmp
ret
data16
aaa
and
dec
shrb
stc
mov
adc
jge
pop
in
pop
pop
sub
rcll
clc
outsb
dec
sarb
mov
mov
dec
movsb
fisubs
leave
les
lock
frstor
mov
mov
pushf
popa
xchg
and
sub
out
xor
mov
pop
leave
dec
push
aad
testb
insl
push
fildll
mov
jl
push
sar
cs
outsb
inc
inc
push
push
dec
pop
ret
outsb
mov
jmp
push
adc
les
lret
pop
pop
popa
xlat
or
add
cld
bound
andl
outsl
mov
scas
bound
pop
mov
into
es
push
popf
aaa
xor
adc
jle
fucomp
ja
aaa
int
fadds
pop
out
sarb
dec
cmp
pop
jae
push
push
cmp
mov
loope
sub
mov
mov
or
xchg
adc
push
icebp
pop
les
sbb
jne
das
lods
fnstsw
sub
fdivrl
stc
mov
inc
cmp
scas
aaa
sti
ficoms
cmpsb
mov
push
inc
xchg
pusha
xor
lahf
subb
push
rolb
xor
push
jge
sbb
cmp
or
out
popf
ss
push
mov
dec
dec
sub
es
imul
push
add
outsl
shlb
jmp
xor
mov
xchg
jmp
loopne
jecxz
push
add
cmp
sbb
jbe
fwait
pop
add
xchg
test
cmc
xlat
loope
shrb
or
jl
pusha
out
int3
femms
arpl
js
cmpb
iret
iret
fsubr
bswap
push
dec
loop
lds
push
les
loopne
or
scas
leave
adc
xchg
adc
rorl
fs
sbb
addr16
add
idiv
sbb
and
xchg
mov
stos
les
cmp
hlt
add
pop
mov
sbb
or
cmp
mull
push
mov
dec
jne
adc
inc
cwtl
std
aas
sti
mov
inc
iret
sbb
adc
jnp
sub
dec
cmp
cmp
jne
or
and
inc
xor
push
mov
out
in
mov
jg
in
mov
mov
shl
mov
mov
mov
jno
sbb
adc
pushf
or
sbb
jnp
pop
push
jp
sub
gs
insl
leave
xchg
inc
std
bound
add
xchg
imul
cwtl
hlt
clc
dec
nop
addr16
pop
dec
notl
inc
push
cmp
sbb
add
push
sbb
xchg
add
loope
aas
imul
loope
and
adc
mov
insb
pop
div
addl
jge
add
mov
int
mov
ret
mov
dec
push
mov
inc
mov
sahf
add
divl
rolb
xchg
push
insl
mov
inc
or
and
int3
push
xor
ja
push
mov
test
xchg
sbb
lock
pop
loopnew
insb
test
mov
sub
mov
push
and
sub
adc
mov
addr16
xchg
mov
cmpb
scas
lds
or
enter
inc
aam
rcl
fnstcw
gs
shll
clc
xchg
xchg
xchg
popa
cmpxchg
lock
into
xchg
pop
sbb
mov
adc
ret
loop
ret
inc
xor
rol
or
dec
adc
cmc
jl
inc
dec
mov
popa
mov
sbb
pop
lcall
stos
mov
sub
ror
push
inc
addr16
mov
add
or
and
push
add
mov
movsb
pop
or
mov
scas
xor
cmp
inc
lea
jle
sub
je
inc
nop
cmpl
sub
inc
fmull
das
jmp
pop
mov
mov
ss
dec
movsl
or
mov
push
dec
dec
test
xchg
iret
xchg
and
push
mov
std
mov
jge,pn
mov
mov
xor
fwait
leave
sbb
scas
insb
in
ret
js
pop
imul
mov
adc
mov
rol
fcomps
jp
scas
pop
pop
mov
mov
jae
mov
pop
dec
inc
mov
shll
push
xor
or
adc
int3
ret
xor
lods
jp
cs
pusha
filds
icebp
icebp
mov
stos
jg
mov
mov
mov
jge
imul
sbb
in
fcomps
push
outsb
adc
adcl
sbb
scas
movsl
cmpb
mov
add
aas
pushf
mov
fsubl
fstpt
mov
addl
mov
mov
xlat
addr16
xor
jmp
sbb
js
loopne
arpl
and
subb
std
mov
pop
add
rol
xor
cmp
or
add
xchg
push
nop
dec
clc
jae
and
mov
mull
aam
ret
subl
adc
imul
loop
movsw
sub
pop
mov
xchg
or
jb
pop
add
inc
mov
inc
scas
xchg
dec
jno
adc
push
pop
stos
jb
imul
mov
sub
insl
fcmovu
sbb
jl
fistpll
shr
xlat
into
add
in
das
idivb
test
ja
mov
cmpsl
sbb
sub
pop
mov
jmp
dec
xchg
mov
adc
mov
push
add
or
lods
add
iret
fnsave
dec
and
mov
cmp
in
stos
arpl
in
pop
lcall
jecxz
lea
pop
and
xor
mov
adc
xchg
cmp
popf
xchg
and
xchg
mov
stc
pop
push
mov
and
outsl
sbb
jp
pop
js
jl
pop
push
repz
cwtl
pushf
int
dec
pop
pop
push
out
scas
out
pop
repnz
jl
mov
add
ss
sbbl
scas
lds
and
adc
xchg
fldenv
add
mov
adc
dec
jns
mov
jae
cli
iretw
mov
sbb
fisubs
lock
in
aad
mov
xorb
stos
cmp
xchg
add
lock
xchg
pop
ja
dec
pop
loope
sbb
xchg
hlt
or
aas
insl
mov
sbb
in
adcb
mov
aam
mov
mov
cmp
cld
dec
pushf
gs
sbb
fdivrl
shl
fsubrl
lock
iret
cs
jo
add
bound
xchg
push
push
in
imul
add
out
pop
test
pusha
push
push
dec
jae
stos
lods
mov
std
movsl
outsl
or
loope
cwtl
into
sbb
or
std
push
sub
push
mov
out
iret
or
add
les
sub
sub
cltd
mov
jns
sbb
js
sub
clc
push
movsl
fistl
pop
inc
movsl
mov
aad
and
xor
and
stc
notl
lret
push
dec
subb
test
xlat
jle
dec
inc
push
cmp
xor
insb
sbb
jp
push
das
push
jecxz
pop
idivb
push
out
pop
loopne
jmp
sahf
sarl
push
out
out
imul
mov
xchg
insb
push
xor
jmp
jl
pop
out
aaa
cmp
jp
cmpsl
xchg
jp
fs
jge
xchg
mov
push
js
inc
stc
andb
push
add
dec
jne
nop
pop
enter
lret
or
shl
mov
in
test
dec
xchg
int3
or
das
dec
int
ret
adc
jmp
xchg
add
pop
fidivrl
outsb
mov
notl
cs
sub
sub
xor
jbe
mov
xchg
xlat
movb
data16
iret
sub
adc
add
pop
fdiv
lock
fwait
cmpsb
incl
push
int
mov
pop
les
and
ss
mov
arpl
mov
sub
jo
pop
sbb
popa
loope
jbe
arpl
lret
repz
cmpsl
mov
jge
push
pop
jg
adc
push
jecxz
mov
imul
das
aad
stc
xor
fbstp
cmpsb
cmp
dec
mov
loope
cmpb
mov
add
insb
addr16
jmpw
and
xchg
js
pop
fdivl
cld
sti
into
ret
gs
jmp
ret
cmpb
xor
in
out
xchg
dec
scas
jmp
sahf
adc
pushf
dec
lret
push
inc
and
out
push
cmp
push
or
repnz
add
mov
xchg
xor
xor
pop
push
in
sub
ja
sub
aaa
rolb
mov
fprem1
adc
sbb
jne
insl
push
arpl
mov
lahf
mov
jmp
in
nop
inc
or
shlb
das
into
sbb
nop
mov
xchg
icebp
sarl
cmp
call
jnp
inc
adc
sub
mov
push
xchg
in
and
jns
test
mov
lods
mov
aam
gs
imul
jbe
and
pop
sti
sbb
push
or
pushf
xor
cwtl
add
andb
mov
stc
mov
and
negl
dec
mov
imul
mov
call
add
mov
mov
dec
movsb
adc
in
test
mov
shlb
test
sbb
pop
mov
insl
popf
out
out
pusha
mov
orb
and
cmp
sub
ret
fisubrs
jmp
mov
mov
stc
fldcw
out
xchg
mov
cmp
sbb
insl
lret
rcll
push
push
sbb
lods
sarb
scas
movsb
adc
sbb
lock
lock
loop
into
mov
add
inc
sbb
lock
mov
movsl
adc
sahf
and
sbb
jno
test
mov
push
cmpsl
cmp
shl
aas
or
adc
movlps
pop
mov
mov
mov
or
fdiv
mov
add
xor
jae
shlb
jbe
inc
ret
mov
pop
popf
test
jg
jp
cld
popa
popf
subl
mov
lea
js
inc
sbb
jle
cmp
push
fsubrl
dec
into
cmc
aas
mov
loope
insl
adc
adc
pop
sbb
popf
testl
push
lret
xchg
repz
js
push
mov
nop
pop
jl
icebp
cltd
pusha
das
movsl
jle
daa
out
sub
outsb
shl
repz
mov
stos
sub
sbb
in
das
mov
leave
lods
pop
pop
jp
fs
sub
loop
clc
das
enter
mov
mov
fwait
stc
inc
lock
add
xor
mov
mov
xchg
add
adc
or
push
aaa
arpl
fdivrp
push
jns
inc
mov
lods
lods
data16
leave
cmp
imul
leave
cmp
daa
jnp
sub
mov
fwait
cmc
and
fstps
jno
xchg
mov
fucomp
dec
test
xor
mov
stc
lock
aaa
cmpsb
add
adc
dec
js
jne
fstpt
lea
fwait
cmp
push
arpl
or
in
and
notb
push
push
outsb
cmp
femms
jno
nop
push
rorb
push
dec
rcll
mov
push
push
sub
mov
add
out
mov
insb
xchg
inc
sbb
fndisi(8087
stos
jmp
call
xchg
fmuls
lret
pop
stos
xchg
inc
mov
enter
jmp
cli
inc
cmp
dec
add
scas
cmp
and
hlt
ljmp
imul
mov
cmp
aam
adc
xchg
inc
lock
mov
outsl
repnz
std
dec
aad
dec
outsl
leave
jns
cmp
aam
push
cmpl
fcoms
sbb
mov
mov
or
sbb
mov
xchg
fidivl
stc
xor
cmp
and
or
xchg
and
mov
bound
xchg
iret
fsub
jecxz
scas
popf
arpl
and
cs
pop
dec
icebp
inc
mov
jnp
push
cmp
shrl
pop
xor
adc
insb
jmp
sub
rol
out
dec
sub
jmp
outsl
ror
insb
into
insl
inc
in
push
xchg
cmpsb
push
ret
mov
cmc
into
idivb
mov
std
fdivrl
sbb
imul
push
mov
mov
arpl
aam
nop
cmp
jmp
call
jp
lahf
jnp
jecxz
pop
inc
sti
xor
push
out
int3
mov
test
adcb
pusha
cmpsl
test
aaa
xchg
dec
xor
and
push
xchg
cmc
andb
je
popa
subb
sbb
push
cmp
adc
std
sub
movups
fstps
xchg
sub
mov
mov
mov
push
mov
sub
test
add
int
or
out
inc
dec
push
pop
daa
inc
outsb
ret
iret
mov
inc
adc
cmc
in
cmp
roll
pop
sbb
xor
mov
jo
jne
add
xchg
scas
roll
into
xchg
ret
jge
xor
xchg
popa
mov
jbe
inc
call
cmpsb
jl
adc
icebp
orl
sbb
ds
sbb
cmp
aam
ds
mov
lret
xchg
adc
push
adc
add
adc
add
and
fdivrs
mov
loope
cltd
in
cmp
ret
jmp
imul
or
cli
movsb
jmp
push
mov
jns
adc
les
mov
or
inc
cmp
cmc
add
push
popa
push
rcrl
movl
shll
adc
lock
and
xchg
pop
push
adc
stc
mov
xchg
rcrb
lea
jae
imul
gs
ss
jg
rorb
sti
add
movsl
ret
lea
jae
push
mov
mov
push
push
clts
lds
stos
lahf
pop
repz
imul
ljmp
ficomps
jl
or
mov
mov
call
dec
dec
add
pop
mov
aaa
push
mov
sti
pop
or
pop
sbb
adc
testb
jp
rcll
lock
mov
add
test
xchg
push
cmp
loopne
or
mov
into
lcall
push
ja
int3
test
mov
or
mov
in
mov
faddl
xchg
in
clc
scas
push
sub
pop
clc
repnz
shr
or
sar
js
inc
lods
in
enter
mov
and
xlat
sbb
fnsave
push
pop
inc
mov
out
mov
in
and
repnz
out
mov
add
lahf
mov
scas
jmp
add
sub
fs
mov
fs
dec
pusha
imul
pop
mov
jmp
add
popa
sbb
or
and
imul
scas
ret
sub
pusha
in
xor
insl
add
and
idivl
aas
dec
and
adc
mov
lea
sub
imul
or
pop
pop
mov
int
mov
mov
out
das
xor
inc
mov
sub
or
mov
xchg
push
add
mov
xor
fnstcw
lret
pop
cmp
loop
out
xlat
add
pusha
xchg
in
mov
dec
mov
enter
dec
notl
in
sub
into
inc
sub
insb
sub
pusha
sbb
jg
push
sub
outsl
jb
pop
push
into
gs
sub
shll
mov
push
ljmp
test
sub
add
sbb
stc
add
xor
push
cmp
sbb
je
pushf
mov
mov
mov
pusha
cld
adc
iret
outsl
jecxz
aam
pushw
xchg
xchg
movsb
cmp
imul
shrl
xchg
push
scas
dec
push
cwtl
pushf
test
cmpl
inc
sbb
out
inc
es
out
inc
inc
stc
jbe
cmp
pop
push
and
pop
nop
test
add
out
fcomps
cmp
clc
jecxz
subl
push
enter
or
inc
bound
jnp
mov
adc
popf
pop
and
mov
cmp
sbb
out
mov
sbb
ja
loopne
in
scas
mov
hlt
push
cmp
daa
push
pop
dec
call
cli
push
idivl
repnz
xchg
pop
cmc
icebp
shrb
add
test
clc
inc
jns
xor
stos
fdivrl
jl
push
imul
push
push
adc
sbb
addr16
push
jge
cmc
push
popf
cs
sub
rcrb
in
dec
lds
test
imul
sbb
adc
loopne
ds
inc
dec
popf
fbld
cmp
lods
outsl
pop
orb
sbb
in
pop
xor
lods
add
xor
jo
loope
lds
fldl
mov
lock
pop
pop
and
call
test
test
mov
mov
scas
lea
negl
jne
cmp
xlat
fcmovnb
out
mov
fnstcw
aaa
dec
inc
dec
addl
enter
or
popf
inc
rolb
ret
jns
add
fld
jbe
les
fsubs
xchg
xchg
jns
or
insb
in
xchg
ds
in
cli
int3
push
movsl
sub
and
xor
loop
cwtl
sti
or
mov
pop
xchg
arpl
cltd
js
into
cmc
movsl
imul
dec
fldl
xchg
xchg
dec
cmp
adc
cmp
pop
mov
mov
sub
add
and
js
or
sub
mov
imul
jecxz
mov
frstor
jns
cmc
daa
push
inc
mov
popa
push
int
push
testl
ret
lea
sub
xor
xchg
cmp
pushw
nop
clc
addr16
mov
jnp
loopne
aaa
inc
movsb
ljmp
sbb
cmp
lahf
pop
std
or
push
punpckldq
cmp
adc
inc
divb
fmuls
sbb
adc
and
aaa
scas
insb
ss
in
ret
mov
test
cmp
inc
mov
in
inc
fsubrp
ficoml
sub
sub
inc
lds
shl
ds
sar
xchg
adc
mov
fxch
mov
in
daa
rclb
mov
fnstenvs
std
stos
push
arpl
sub
leave
or
daa
jno
out
pushf
ret
psllq
dec
mov
mov
jge
cltd
pusha
lret
mov
push
sbb
ret
fwait
inc
sbb
clc
shrl
inc
dec
mov
cmpsl
mov
mov
mov
ret
sub
fxch
cltd
sub
cmp
loopne
cmp
xchg
hlt
jno
sbb
push
adc
push
repz
imul
mov
std
and
sahf
clc
ret
dec
aaa
shrl
test
nopl
repnz
test
sbb
mov
stc
or
push
pop
fisubrl
repnz
into
push
dec
jle
mov
leave
xchg
das
scas
inc
int3
clc
lods
or
int3
jmp
jnp
pop
xchg
mov
add
dec
inc
fld
xlat
pop
mov
fists
clc
les
lret
inc
mov
test
jne
xorl
loope
xorl
in
mov
push
test
in
addl
mov
mov
push
mov
ds
xchg
pop
cmpsl
push
shlb
mov
mov
aad
out
popf
imull
xor
push
pop
mov
or
mov
add
mov
sbb
sbb
cwtl
loop
addl
movsb
nop
pop
cmp
in
test
mov
mov
dec
nop
cmp
adc
clc
les
fsubrp
or
mov
and
cmpsb
dec
pop
lods
aam
popa
pop
dec
cmp
inc
lds
out
xchg
or
orb
fwait
out
pop
into
cmp
inc
sub
shll
xor
inc
xchg
xchg
sub
mov
or
push
xor
dec
add
xchg
mov
pop
adc
mov
mul
stos
or
das
data16
sub
sti
in
cmovns
clc
mull
aas
sub
and
stos
ja
int3
cli
lret
jl
push
bound
mov
sub
xchg
sahf
test
sbb
imul
imul
cs
repnz
push
cmpsb
mov
fisttpll
fdivrl
mov
lds
test
scas
sbb
mov
jp
mov
jp
flds
lret
mov
rcr
cmp
sub
bound
into
push
shlb
jns
scas
pop
add
xor
dec
repz
inc
cmp
ret
xor
incb
jns
cmp
popf
dec
sbb
pop
mov
bound
adc
and
mov
mov
popf
pusha
cmp
sub
out
push
adc
xchg
leave
inc
enter
into
adc
movsl
adc
stos
xchg
cli
fstpl
repnz
pop
test
fadd
stc
in
cmp
out
outsl
fnsave
in
mov
cmc
xor
ret
jo
jecxz
cmp
cmp
jb
jb
mov
cmp
cmp
inc
or
popa
test
push
jb
test
xor
loop
xor
gs
jle
inc
test
xchg
sti
nop
pusha
movl
cmpsl
jge
fmuls
js
mov
pop
mov
dec
pop
xchg
icebp
mov
lahf
ds
sahf
loop
xor
xchg
push
cli
or
enter
aad
insb
mov
ds
sbb
xor
adcl
cld
aad
addr16
insb
cld
jge
xchg
jb
fdivrs
push
in
in
cwtl
or
clc
popf
into
xor
adc
cmp
cwtl
or
xchg
jne
or
loop
mov
or
imul
sahf
hlt
ficoml
ret
rcrl
in
mov
cmp
repnz
popl
pop
mov
or
into
sbb
mov
out
int3
mov
popa
rclb
js
or
mov
out
sub
cmp
add
mov
loopne
lods
sbb
jno
cmp
adc
fidivrl
or
enter
int3
popa
jnp
mov
and
sub
mov
jl,pt
sbb
into
jbe
adc
ja
popl
in
inc
and
mov
ret
and
outsb
cmp
cmc
jns
lods
xchg
xchg
mov
in
fs
push
das
in
jle
sub
cmp
mov
je
xchg
jg
xor
lret
xchg
lods
adc
and
add
int3
push
cwtl
das
xchg
pop
and
jno
es
and
popa
std
lahf
jae
rol
mov
out
pop
lcall
push
mov
jne
cmp
cmp
lods
and
bound
and
jle
data16
imul
mov
jnp
jb
mov
pop
pusha
fwait
push
leave
test
lret
jae
orl
in
les
xchg
xor
mov
push
outsb
test
ror
dec
shrl
hlt
adc
mov
push
enter
jb
pop
add
jge
addr16
xor
int
cmpsb
dec
sar
jecxz
dec
add
xchg
fisttpll
mov
xor
add
sbb
fisubl
jae
inc
push
jl
sub
push
fdivr
adc
mov
cmovno
push
pop
add
mov
mov
inc
lea
movsb
push
and
xor
adc
jb
pop
push
mov
push
cmpsl
sub
xchg
scas
lcall
xchg
add
lcall
inc
pop
mov
pop
cmp
xor
rcl
or
rcrl
xor
int
fldenv
imul
jo
mov
mov
imul
mov
dec
pop
push
or
mov
mov
loop
sbb
loopne
pop
sbb
push
xchg
inc
dec
aas
stos
mov
call
pop
mov
sbb
or
aad
jecxz
cmp
enter
ss
sub
xchg
mov
notb
dec
sub
jo
mov
aas
out
shlb
daa
adc
push
in
push
mov
add
mov
jns
mov
xor
pop
ret
js
fstpt
push
cmpl
add
push
out
lahf
out
xor
data16
jecxz
sub
mov
mov
sub
and
cmpsl
out
cwtl
jns
and
push
mov
test
add
sbb
adc
shlb
or
and
jle
xchg
movsl
add
add
or
stos
push
xor
cwtl
sub
xor
and
dec
sub
cmc
push
xor
mov
xor
out
xchg
pop
sbb
mov
or
mov
clc
lret
shll
sbb
push
mov
mov
insl
test
sbb
mov
in
rclb
stos
adc
je
int
inc
sbb
data16
mov
xchg
movsb
mov
sub
ljmp
inc
add
jns
imul
pop
push
fcmovbe
lahf
mov
add
mov
xor
std
cmp
popl
dec
or
popa
popa
data16
rcl
fiaddl
and
xchg
mov
sbb
and
rclb
xchg
dec
push
aas
push
jbe
dec
out
jbe
cmpsl
fadds
andb
cs
shrl
lret
ret
mov
xchg
mov
push
das
subl
out
sub
out
into
add
mov
jecxz
jae
ss
leave
xor
pushf
jbe
pusha
cld
inc
mov
shlb
or
fidivrl
inc
clc
negb
mov
mov
hlt
repz
mov
cmpsl
jbe
icebp
sub
fs
rcl
shrl
dec
sbb
mov
int3
ret
cmp
mov
clc
mov
jnp,pt
jae
push
sbbb
fstp
jae
clc
insb
cmp
push
gs
stos
adc
mov
jg
jl
in
dec
lret
sub
xchg
dec
xor
mov
pusha
inc
pop
fists
test
cmc
ds
cmc
leave
imul
call
clc
test
fisubl
cmp
push
inc
jo
clc
xor
mov
dec
fwait
jl
hlt
push
je
jae
add
or
rclb
in
push
fmulp
jl
jno
xchg
adc
adc
imul
sub
fisubl
and
xor
xchg
mov
xor
inc
adc
add
pop
or
dec
jns
sub
lods
push
add
push
jl
mov
sub
jecxz
loop
loop
adc
cmp
iret
inc
shrl
sub
out
jle
and
jg
xchg
aam
mov
loop
outsl
sarl
shrl
push
cmp
sahf
pop
dec
arpl
xor
cwtl
fstps
outsl
enter
sbb
jl
jno
jg,pn
cmp
cmp
sub
mov
lahf
test
lods
mov
sbb
cwtl
inc
addl
add
push
lret
push
add
aas
add
in
paddw
dec
or
fldcw
xor
ja
ja
dec
inc
xchg
out
cld
ja
xchg
inc
out
xor
push
nop
mov
mov
icebp
cmpl
inc
add
arpl
sub
fcmovnb
repz
jle
fmuls
dec
sbb
repz
sti
or
imul
xor
dec
dec
out
mov
adc
mov
xor
mov
jp
sbb
loopne
por
daa
rolb
mov
clc
mov
pop
pop
in
lock
push
hlt
jecxz
sub
push
jp
pushf
lods
outsb
fwait
dec
in
repz
in
dec
out
mov
jmp
iret
mov
in
enter
enter
push
jae
dec
loope
xchg
push
jge
and
hlt
repz
orl
jge
xor
xor
sub
pop
mov
sahf
idivl
inc
sbb
insb
sbb
gs
mov
sbb
jmp
mov
cmp
dec
imul
test
mov
es
sbb
jns
jo
xor
ret
scas
jl
adc
and
xor
sbb
cmp
sbb
shl
lret
stos
dec
mov
mov
xchg
inc
es
cmp
andb
pop
lods
mov
push
sbb
add
mov
dec
mov
jne
mov
adc
nop
or
dec
pop
and
jle
sbb
addl
sbb
ja
adc
pop
fstps
add
pusha
bound
xchg
sbb
fcoml
cwtl
and
adc
lock
push
jecxz
ds
or
pop
pop
dec
outsl
in
cmpsl
cmovns
lock
js
fdivrs
xchg
pop
sub
cmp
cmp
out
sub
push
jl
repz
mov
sbb
notb
pop
repz
jge
xchg
xchg
adc
mov
xor
pop
dec
das
xchg
jo
ret
cmp
shr
mov
lahf
sbb
lods
hlt
dec
test
or
insl
fcmovnu
pop
cmpl
jmp
scas
repz
insl
xor
iret
and
xchg
dec
addb
cs
jmp
pop
jbe
imul
out
cmpsb
jns
mov
xor
mov
outsl
in
cs
fwait
pop
pushf
movsb
push
push
mov
sbb
movb
sub
loop
ret
lods
jo
call
frstor
pushf
les
fs
push
iret
arpl
cmp
cmovne
gs
and
pop
loop
mov
ffreep
fisubs
pop
lods
cmp
out
lret
mov
hlt
sti
mov
lods
cld
mov
dec
jae
jbe
cmp
mov
lods
or
add
out
mov
fsts
mov
das
ds
lret
aad
cld
xchg
mov
adc
xchg
jmp
cwtl
arpl
mov
repnz
leave
popl
push
outsl
bound
pop
or
push
loope
ret
mov
jp
mov
inc
flds
mov
and
sahf
es
inc
enterw
fldt
xor
xor
jno
orb
push
pop
popa
cmp
jns
mov
daa
fldcw
push
int
jge
aam
sbb
cmp
outsl
shll
xor
and
pop
add
mov
mov
sbb
in
aam
inc
xchg
dec
add
pop
mov
mov
jge
cmpl
movsb
push
push
mov
dec
idivb
sti
sti
popf
jae
aaa
loopne
dec
push
dec
sub
pushf
in
sub
pop
adc
lahf
xor
sbb
div
imul
daa
fdivl
cmp
gs
leave
in
mov
pop
mull
and
imul
add
sbb
and
in
mov
mov
popa
xor
cmp
aas
xchg
daa
xchg
jb
mov
pop
mov
mov
dec
push
fs
xadd
push
call
sub
jnp
rol
push
fbstp
push
loop
xor
and
stc
and
cmp
adc
jp
pop
fiaddl
pushf
daa
push
adcb
and
shlb
lock
fsubrl
cli
and
ja
movb
clc
add
mov
or
adc
daa
js
int
outsb
int
fisubl
sbb
ljmp
mov
push
xchg
sub
in
add
sub
fidivs
inc
xchg
cs
in
out
mov
scas
imul
int
mov
mov
xor
rclb
in
jle
andb
mov
loopne
mov
cmp
lahf
xor
mov
lods
pop
and
dec
lahf
pushf
testl
xor
dec
sub
pop
int
scas
je
rorl
mov
or
rclb
lcall
jl
lcall
mov
pop
aaa
cmp
cmpsl
ja
mov
out
dec
rcrb
cmc
fxch
push
cmp
or
rcll
bound
lods
pop
arpl
in
mov
lret
aaa
sub
pop
in
dec
aas
xor
ret
call
xchg
pop
add
xchg
in
mov
dec
sbb
push
ja
inc
sbb
push
adc
js
push
sarb
xor
cmpb
pop
inc
jnp
mov
xchg
dec
aam
add
fldl
leave
fistps
cli
mov
mov
pop
scas
js
jne
jbe
mov
movsb
xchg
test
mov
lods
or
into
jb
out
or
pop
adc
pop
mov
push
ss
nop
cmp
pushf
or
cli
or
sbb
jne
pop
jle
add
push
inc
test
sbbl
negb
xchg
sbb
or
subl
push
das
cmp
jmp
test
shr
push
stc
fdivp
lods
cmp
ja
inc
iret
pop
sti
or
fimull
cmpb
lock
gs
jg
aaa
inc
movsl
rcl
mov
mov
dec
pop
adc
jmp
jb
jmp
mov
xchg
lret
or
mov
ss
adc
dec
ja
jns
adc
stos
lock
mov
jno
jns
and
pop
fcomi
mov
jae
idiv
sbb
leave
fistpl
dec
and
xchg
xor
aad
and
xchg
jle
inc
xchg
lcall
jp
jl
xchg
insb
xor
fs
aad
loopne
js
xlat
sbb
mov
and
adc
cmpb
punpckhwd
mov
add
mov
adc
nop
or
stos
ds
rclb
push
movsl
sub
ljmp
out
xchg
and
cmp
dec
daa
xor
sar
ds
stc
je
or
pusha
push
mov
jne
ss
or
adc
xchg
xchg
cli
xchg
adc
scas
xorb
div
mov
xchg
push
pop
enter
cmc
dec
xlat
xor
lea
push
insb
xlat
xchg
stc
add
dec
mov
js
cltd
enter
xchg
jne
or
mov
imul
dec
nop
rcl
out
arpl
lahf
popa
pop
lcall
cs
push
mov
out
mov
mov
inc
insb
rolb
push
mov
xor
pop
push
push
insb
sbb
inc
mov
sbb
imulb
inc
cli
aas
jnp
sub
cmp
and
sub
bound
mov
pop
jns
fisubrl
aam
in
mov
pusha
pop
mov
cwtl
out
or
xor
loop
xor
xchg
add
jnp
adc
out
sti
push
test
in
inc
aad
push
faddl
ss
cmp
testl
pop
and
dec
inc
dec
jne
ret
cmp
pop
jns
sub
leave
push
mov
bound
pusha
les
cld
cmp
imul
push
push
or
push
iret
leave
es
aam
jge
sahf
in
xor
add
sahf
testb
adc
inc
push
insl
icebp
add
sbb
mov
in
jb
mov
xor
movsl
xchg
cwtl
mov
dec
mov
rorb
jb
xchg
sti
in
outsl
mov
xor
push
sbb
sbb
pop
test
and
inc
fucomp
aad
mov
mov
std
xchg
fadd
inc
mov
and
fwait
pop
negb
adc
xchg
mov
adc
dec
out
scas
lcall
fisubrs
xchg
mov
mov
nop
aaa
jbe
ljmp
mov
pusha
test
into
ljmp
jmp
push
mov
aad
bound
stc
mov
daa
leave
adc
push
mov
cld
sbb
hlt
mov
call
ljmp
xchg
inc
add
cmpsl
cmp
daa
mov
dec
and
and
movsl
xor
and
daa
pop
jle
pop
add
lds
inc
cmpb
mov
adc
xchg
xchg
cmp
in
push
popf
mov
jb
sbb
insl
sub
or
xchg
test
sbb
jno
popa
aas
loop
sbb
js
or
fsub
shlb
lret
add
pop
mov
and
mov
pop
inc
cmpsl
jg
dec
or
sub
pop
out
loopne
inc
push
movsl
add
fnsave
sub
xchg
iret
outsb
and
push
stos
mov
insl
xchg
or
pop
bound
pop
out
inc
cli
stc
xchg
test
mov
loop
mov
loope
mov
jo
repnz
jge
ss
imul
test
pop
push
mov
lcall
jb
mov
add
dec
mov
xor
mov
or
out
xchg
ret
inc
popa
mov
jno
dec
sbb
rolb
pop
addl
xlat
dec
clc
xor
je
hlt
dec
test
push
lds
inc
js
in
test
jne
sub
cmp
push
mov
add
push
mov
or
loope
leave
sub
aas
mov
xorl
adc
lret
movsb
cmp
or
jno
mulb
push
mov
inc
adc
lea
dec
test
in
xor
add
or
out
fistl
sub
xchg
adc
inc
lea
sti
pushf
or
mov
jae
add
fildl
lods
int3
mov
pop
mov
ljmp
mov
and
pop
insl
fcomps
mov
in
mov
sbbb
adc
nop
fdivl
out
push
das
and
lods
lods
mov
xor
xlat
inc
push
test
add
pushl
mov
mov
int3
repz
cltd
jge
mov
sbb
sbb
fisubrs
pop
rcrl
mov
mov
cmp
jg
jbe
pusha
mov
inc
adc
jmp
and
les
iret
fiadds
cmp
mov
dec
mov
loop
cmp
icebp
je
pop
ja
jmp
enter
es
cmp
ljmp
in
jne
xor
push
fxch
hlt
sbb
cli
xchg
lret
xor
rclb
dec
or
scas
mov
enter
popa
push
pop
mov
or
int
movsl
popf
lea
test
add
into
ret
aas
cmp
test
adc
dec
in
sbb
fiaddl
jbe
or
ss
adc
rorb
xchg
adc
or
sbb
cltd
push
lock
enter
daa
fistpll
and
fsubrs
lods
sbb
fcomp
ss
xchg
inc
push
add
icebp
cmp
fucom
sub
mov
or
push
mov
test
mov
adc
or
dec
cmp
into
in
or
scas
sti
xchg
das
sbb
mov
lret
outsl
je,pn
adc
push
adc
jp
test
fldenv
rclb
sbb
pop
mov
jp
mov
mov
mov
mov
push
jecxz
leave
mov
cmc
xchg
inc
add
popf
aad
aas
js
data16
and
jmp
mov
mov
call
mov
inc
xchg
and
xor
test
dec
pop
cmp
mov
scas
mov
cmp
dec
pop
lahf
addl
pop
out
in
adc
fisttps
jb
pusha
das
mov
mov
adc
loop
mov
cli
iret
sahf
adc
fwait
push
jmp
jb
fs
xchg
test
jl
or
into
in
cmp
xor
mov
das
dec
ja
shr
mov
pop
xchg
pop
mov
in
xor
jecxz
push
jo
daa
jp
mov
pop
ficoms
jbe
and
and
shrl
inc
dec
inc
push
andb
aaa
stos
sbb
sbb
lods
pop
pop
fwait
mov
out
mov
das
inc
pop
add
bnd
or
movsl
mov
jnp
adc
cmpsb
js
dec
or
inc
loopne
push
shlb
add
dec
sub
popf
lahf
cwtl
fiaddl
sarl
mov
mov
mov
das
lret
addr16
popa
mov
cmpsb
sti
mov
fwait
cmp
add
ds
jne
mov
xchg
inc
sub
xlat
adc
aad
adc
std
mov
sbb
out
add
cmp
fdivl
cld
sub
aaa
jns
cld
test
aas
push
add
into
mov
movsl
add
mov
push
jecxz
mov
pop
jmp
jle
nop
loopne
es
push
pop
gs
push
mov
or
adc
cmpsb
sub
call
dec
mov
les
cwtl
stos
jmp
xchg
cld
dec
fs
cltd
stos
cmpsl
and
add
xor
int3
xchg
inc
fists
cmp
sub
or
ret
lahf
mov
lret
es
es
lods
mov
js
movsl
or
xor
dec
sbb
out
insb
ss
fdivl
cmp
pushf
loopne
inc
or
and
lret
sub
mov
xchg
mov
ljmp
cmc
cmp
push
xchg
mov
xor
lods
test
pop
es
push
jb
sub
or
push
sbb
idivl
xor
repz
iret
fistpl
push
dec
mov
bnd
jmp
test
xor
mov
push
cmp
and
fiadds
cmp
xchg
sti
mov
sbb
mov
testl
jp
xor
push
ja
arpl
rcrl
mov
add
mov
scas
jb
lret
icebp
fst
ret
adc
xchg
mov
inc
pop
cmpsb
jno
outsl
pop
mov
add
cmp
inc
adc
mov
lahf
inc
js
jne
mov
xchg
push
out
sti
lahf
cltd
push
pop
addr16
cmpsl
and
sbb
push
and
js
ds
fcoml
add
je
jge
dec
clc
push
fsts
fistpl
dec
js
inc
xchg
jne
and
sub
icebp
fists
int3
je
xchg
test
fnsave
mov
lea
and
xor
lods
je
xor
mov
int
ret
push
mov
add
ret
and
and
add
mov
or
repz
pop
cmpsb
dec
movsb
lret
jnp
les
pop
or
lock
adc
inc
or
outsl
insl
cli
cli
and
nop
or
xchg
xchg
pop
cmp
hlt
add
test
stos
arpl
lea
test
shlb
rclb
ja
or
nop
mov
mov
in
or
jne
outsb
call
sub
mov
or
std
xchg
push
and
ja
stc
push
in
xchg
xor
out
int
jmp
xchg
xchg
das
js
xchg
or
mov
gs
cmc
push
push
sahf
pop
push
insb
push
nop
scas
adc
jno
scas
das
xchg
sub
loopne
lret
or
mov
out
cmp
jbe
sbb
es
insb
sub
mov
ja
in
inc
cli
sub
add
mov
decl
jnp
and
cmpsb
mov
jne
pop
cltd
jle
lcall
cmpsl
inc
pop
xlat
lcall
pop
xchg
cltd
mov
pop
inc
sbb
jns
cwtl
push
push
adc
hlt
ljmp
sti
adc
cld
notb
imul
add
xchg
das
outsl
mov
fnstsw
jp
inc
and
popf
test
inc
hlt
subl
fcmovnu
test
xor
xor
imul
lahf
jg
mov
or
xor
pop
lea
in
into
mov
pop
enter
mov
call
loopne
inc
cmpsb
lret
fisubs
cmc
inc
dec
sub
mov
mov
sub
mov
into
pop
loopne
inc
enter
jbe
sbb
ljmp
jbe
call
jl
jo
pop
ljmp
xchg
call
push
push
cmp
fstl
or
pop
or
xchg
lea
mov
scas
pop
jg
mov
sahf
ljmp
dec
in
lret
scas
jae
das
sarb
rcl
cmp
jg
addl
inc
mov
dec
cmpsb
pushf
xlat
xchg
mov
push
xorl
repz
jns
push
scas
mov
shrl
mov
sub
cmp
or
into
aad
xchg
fsts
jl
cmpsl
fistl
xchg
sbb
jbe
mov
xchg
mov
xchg
sub
dec
push
inc
mov
clc
cli
std
push
push
fs
mov
fnstsw
sbb
dec
lds
aam
es
cmp
lods
push
jns
scas
push
and
sbb
adc
inc
mov
dec
jecxz
repz
cmp
in
insb
sub
int
or
fstps
or
xor
sub
add
in
test
pushf
jbe
xchg
dec
addr16
mov
clc
movsl
inc
or
das
ljmp
fisubrs
cmpsl
cmp
int
out
in
lods
lea
pop
jg
fadds
inc
cmp
or
test
dec
push
adc
movl
push
adc
iret
push
adc
cmp
test
hlt
das
mov
aaa
add
adc
add
mov
test
lret
pop
int3
sbb
dec
push
ja
cmc
cli
lods
bswap
sub
es
inc
fs
rclb
push
cli
cmovno
lods
or
daa
fmulp
mov
imul
jbe
pusha
add
mov
push
ret
scas
adc
cmp
out
roll
pop
cs
mov
das
push
sub
cmpsb
push
fistps
jge
pop
jbe
cmp
insb
loope
or
out
imul
fdivr
loopne
xchg
inc
sub
movsb
add
test
adc
hlt
jp
xchg
pop
or
jno
insl
mov
xor
xchg
push
mov
out
leave
pop
enter
dec
mov
aad
xor
add
fisubs
push
push
cmc
inc
dec
bound
add
cli
inc
cmp
sub
int
stos
cmpsb
std
or
inc
xor
or
lock
cmp
bound
ja
xor
xchg
pop
in
daa
xor
lods
fnsave
add
cli
insb
lods
es
pop
dec
cmp
lock
cmp
add
ret
mov
cmp
es
sub
into
cmpsl
roll
movaps
sahf
cmp
fcmovu
cmpsb
bound
adc
add
fwait
mov
inc
insb
js
pop
inc
mov
jmp
mov
mull
pop
test
xor
add
rcrb
scas
mov
push
std
jp
loopne
jecxz
xor
aad
clc
jo
xchg
or
lods
or
mov
and
aas
sbb
jecxz
mov
xor
sarl
or
pusha
es
in
mov
repnz
iret
inc
nop
scas
add
lea
mov
xlat
push
rclb
push
mov
inc
adc
mov
push
jb
repnz
notb
fs
xlat
pop
inc
bound
imul
cwtl
out
cwtl
js
sub
shl
iret
push
lcall
xchg
cld
repz
fidivs
push
inc
or
in
fwait
cs
or
cmp
push
sti
out
adc
and
mov
mov
sbb
pop
cmc
pop
test
test
in
pop
rol
xor
sbb
mov
and
test
mov
rcl
test
mov
mov
das
scas
or
sbb
shrl
std
inc
test
andl
shr
or
lcall
and
and
lock
xor
pop
jo
pop
icebp
xchg
das
push
jecxz
pusha
or
or
cwtl
cmp
jnp
push
enter
cltd
imul
pop
jne
lods
nop
std
push
rcrl
dec
add
add
out
push
lock
scas
ljmp
cmpsb
sub
jg
cli
inc
and
inc
and
mov
dec
xchg
cmpsb
insl
xchg
addb
sub
pop
in
xchg
fs
shlb
pusha
pop
fstps
and
inc
jl
jl
mov
push
add
or
jo
loope
leave
cmp
dec
mov
jae
fnstenv
dec
int3
inc
adc
fsubs
idivl
xchg
into
add
or
mov
daa
lds
jno
pop
jmp
push
roll
mov
push
xchg
xlat
lcall
add
jg
sub
sbb
shll
outsl
movsl
inc
or
jl
xchg
mov
test
mov
aaa
add
out
mov
and
sub
pop
rolb
xchg
in
jns
fwait
in
add
popf
lods
jae
outsb
push
outsl
aas
mov
cmp
fsts
push
push
cmp
lret
mov
jae
orb
test
cmp
adc
lock
lret
jb
cmpsl
loop
adc
lods
xchg
inc
push
arpl
idivb
pop
imul
dec
mov
jo
push
fnstcw
imul
ret
push
inc
fdivrp
insb
mov
mov
stos
testl
into
adc
push
mov
pop
repz
ss
push
jo
or
stc
sahf
mov
xor
add
mov
add
test
inc
sbb
and
fstps
xchg
xor
dec
fstpt
mov
sarl
imul
pop
jnp
popf
mov
jne
adcb
dec
into
mov
mov
dec
sub
pop
mov
scas
mov
cltd
jl
hlt
test
cs
pushl
dec
fmulp
shr
icebp
shll
arpl
lods
xchg
jb
adc
scas
jnp
insb
sti
inc
sbb
lcall
inc
or
xchg
je
int
adc
mov
jg
xchg
xchg
push
push
sarb
subb
arpl
popf
jle
lret
sbb
inc
pop
dec
push
loop
pop
sub
stc
cs
cmp
sub
rclb
xor
repnz
into
out
mov
test
mov
cld
fwait
xchg
adc
sub
xchg
xchg
sub
jmp
sahf
or
stc
cmp
sbb
jmp
push
mov
in
or
inc
mov
mov
iret
jb
fdiv
mov
test
cwtl
mov
pop
cli
jmp
mov
cmp
sub
xor
jae
inc
movsb
jge
out
sbb
add
imul
inc
out
jae
or
imul
cmp
scas
adc
sbb
jl
arpl
lock
cmpsl
cld
ss
adc
mov
push
sub
outsb
shl
pop
pop
xchg
addl
loop
lea
imul
and
sbb
sbb
aam
pushf
stc
xor
dec
test
xchg
mov
out
inc
pop
adc
and
dec
ret
rorb
imulb
cmp
in
scas
and
arpl
add
cli
jge
xchg
pop
test
cmc
leave
mov
cmpsl
sbb
cmc
add
xchg
fxch
adc
pop
and
and
pushf
aad
jg
jae
mov
fidivs
bnd
mov
pop
xor
sahf
je
sub
sbb
xor
imulb
cmp
push
je
rorl
fisubl
cmp
icebp
stos
addr16
pop
rolb
and
mov
insb
inc
adc
insb
push
dec
and
ret
mov
test
sub
mov
fwait
sub
clc
cmc
cmc
iret
pop
lret
stos
movsl
outsb
es
repz
sbb
and
lcall
aaa
xor
xchg
out
pop
shl
insl
adc
dec
arpl
sbb
fmull
jmp
cs
fwait
cmp
xor
xor
xchg
mov
cld
outsl
pop
arpl
in
and
test
int
adcb
ret
inc
std
movsl
stc
cltd
inc
es
loope
lds
push
lods
add
push
sbb
xchg
lods
idivb
dec
shrl
bound
loopne
stos
push
push
pop
jge
scas
scas
push
cs
inc
mov
hlt
sub
mov
add
sbb
push
sbb
in
leave
aaa
mov
jbe
mov
lea
mov
lods
lods
mov
jb
gs
jns
adc
push
arpl
stc
shr
pushf
and
mov
mov
pop
adc
pop
cli
sub
xchg
mov
lcall
sub
mov
xchg
dec
mov
lcall
mov
dec
cmc
jns
rcrl
cmp
pop
imul
pop
rcrl
bound
inc
cmp
stc
iret
inc
push
mov
push
hlt
xlat
mov
fidivrl
testl
int3
and
fbstp
jg
jb
and
hlt
stos
inc
mov
xchg
push
aaa
mov
pop
js
inc
mov
ja
pop
xor
ja
push
inc
sbb
outsb
daa
inc
jno
filds
out
arpl
or
sbb
jne
fmuls
sbb
xor
std
xor
mov
movsl
lret
mov
daa
outsl
mov
xchg
jbe
arpl
mov
jno
sub
sub
pop
inc
ds
jmp
dec
push
lock
idivl
push
mov
mov
xor
jns
cmc
cltd
sbb
xchg
mov
sbb
fistps
jns
push
jnp
mov
das
cld
loope
sub
ficoml
loope
pop
pop
xor
adc
scas
cmp
sbb
push
jne
call
fbstp
cmp
hlt
pusha
outsl
pop
arpl
add
mov
xchg
imul
fs
loope
mov
dec
and
cld
enter
mov
dec
stc
fdivp
pushf
enter
push
xor
iret
sub
xchg
inc
test
insb
cmpsl
fisubl
mov
lods
cmp
pushf
fldt
sbb
and
aas
dec
std
fdivrp
int
dec
mov
xor
rcrl
test
daa
mov
lret
daa
repnz
inc
pop
cltd
cmp
mov
xlat
push
lcall
mov
aaa
cld
cmpsb
xchg
mov
xchg
repnz
mov
shr
and
jecxz
int
imulb
cmp
loop
add
mov
shll
mov
mov
add
xchg
inc
gs
pop
xchg
sub
or
flds
pop
lret
stos
xor
ror
add
or
dec
shlb
nop
movsb
mov
jl
test
fwait
mov
sub
cmpsb
lods
mov
xorb
int3
divb
mov
leave
clc
fdivs
xchg
mov
xchg
dec
fs
mov
xchg
xchg
mov
ficomps
daa
xchg
test
out
xchg
xor
adc
push
push
fsubrs
andb
rcr
xor
popa
subl
lds
add
pop
test
mov
dec
filds
test
xchg
adc
stos
hlt
sub
lds
mov
negb
dec
add
lods
lds
rcrb
int
xor
fildl
ret
pop
add
pop
jp
shr
mov
data16
sar
loopne
jo
jb
arpl
pop
fildl
mov
sarb
inc
leave
pop
nop
jecxz
push
imul
add
add
popf
and
sahf
cwtl
mov
mov
and
or
scas
jg
mov
les
add
push
int
adc
and
sub
mov
testb
cmpb
stos
jb
cmp
or
mov
lea
xchg
push
mov
push
mov
enter
out
cs
popa
jecxz
jae
push
mov
leave
sti
fildll
cli
pusha
lea
aas
cmp
jnp
mov
cmp
jo
push
sub
xchg
mov
out
sub
inc
adc
mov
pop
test
ret
push
addb
push
scas
imul
cs
cmpsb
xor
scas
stos
dec
ficompl
out
cmp
lds
outsl
adc
mov
mov
or
and
loop
push
aad
in
leave
adc
das
xlat
mov
mov
ficoml
es
mov
out
jnp
jge
pushf
mov
aam
sub
push
xor
and
cld
lcall
outsb
test
test
mov
and
dec
and
leave
in
popf
mov
repnz
dec
in
lds
pop
or
xor
jge
mov
sub
loop
lcall
rol
mov
jne
shrl
gs
test
mov
xor
mov
lcall
pop
stos
fmul
iret
mov
adc
ljmp
mov
xchg
cld
mov
into
insl
lahf
inc
xlat
dec
js
sbb
dec
pop
mov
mov
pop
sub
shll
in
inc
xchg
loopne
or
pusha
test
js
mulb
stos
fisubrl
add
add
enter
sarb
loope
js
adc
push
and
lea
lret
repnz
push
sti
and
shll
push
pop
cmpsb
scas
dec
pusha
xchg
jmp
jne
and
daa
push
xchg
add
push
into
dec
pop
mov
and
sub
je
xchg
adc
xor
stos
jae
pusha
xchg
imul
fwait
xchg
movsb
notb
aad
je
movsb
aas
sub
daa
aas
sub
dec
in
pop
sar
and
enter
sub
and
xor
pop
sbb
loop
je
int
xor
xchg
inc
xchg
push
aas
cmp
dec
mov
xor
sub
sub
mov
xchg
cmc
js
push
inc
fwait
push
push
popa
scas
int
xchg
out
push
ret
xor
in
out
sahf
xor
pop
pop
je
stc
inc
cmp
mov
in
adcl
xchg
xor
mov
push
push
mov
fldl
xchg
fcomi
es
loopne
cmpsb
pop
ss
shrb
mov
sbb
mov
pop
xlat
adc
mov
pop
sub
sub
inc
xor
movsb
xor
stc
lret
mov
sarl
add
mov
push
mov
xchg
and
neg
pop
cli
fcmovnb
test
aam
jnp
inc
sub
mov
lock
xchg
inc
mov
dec
pop
push
mov
xor
lahf
push
dec
fstpl
das
sbb
xchg
pop
loope
je
dec
sub
test
lret
imul
cmp
lahf
andl
dec
xchg
pop
or
aam
mov
add
stos
outsb
push
fldl
xor
js
in
out
gs
adc
lods
or
addr16
scas
hlt
pop
mov
insl
mov
mov
gs
fcoms
add
dec
xor
push
mov
push
or
mov
je
stos
xchg
mov
test
cmp
fwait
sub
in
aas
arpl
jnp
sbb
into
lds
adc
mov
push
push
cmp
std
in
icebp
into
jmp
xchg
pop
out
mov
xlat
int3
sub
fcoms
adc
add
cmp
mov
pop
std
jmp
push
sub
lahf
fyl2xp1
cmp
sahf
repz
les
cmova
cmp
lods
dec
aas
mov
inc
fldz
ss
xor
pop
or
or
into
lcall
rolb
mov
out
mov
push
mov
repz
addb
imul
push
ret
cmpl
insb
adc
mov
nop
push
out
mov
and
mov
jae
mov
dec
or
mov
call
mov
and
adc
or
mov
adcl
xchg
enter
push
bound
jbe
popa
daa
or
ds
leave
int3
nop
mov
dec
add
jl
sub
ja
adc
lret
push
loope
jno
ds
add
aad
or
mov
fistl
adcl
add
cmpsl
mov
ljmp
popf
int3
sub
pop
xor
fst
movsb
fadd
aas
in
es
cli
fldt
xchg
bound
outsl
pop
in
sub
je
hlt
sbb
fs
push
aad
pop
mov
test
push
pop
push
test
rcl
mov
adc
push
daa
jno
out
test
sbb
pop
sub
sar
pop
fiaddl
mov
out
fcmove
sub
mov
dec
ljmp
les
sbb
push
jae
lea
mov
stc
pop
xor
insb
fwait
mov
mov
sub
cli
push
cmp
jg
mov
pusha
mov
shlb
ds
in
mov
out
fists
jno
mov
jl
xchg
outsl
or
stos
sbb
lock
adc
sbb
das
pop
hlt
sti
push
mov
mov
enter
arpl
or
rcrb
dec
add
sbb
mov
push
or
jb
dec
orb
mov
inc
ror
js
fmuls
in
lahf
jge
mov
insl
push
nop
into
mov
add
lcall
or
insb
push
shll
das
xchg
xchg
cmp
insb
int3
push
push
or
pop
jle
stos
xchg
std
nop
lea
push
icebp
rep
cmp
jmp
es
imul
sub
and
notb
inc
das
pop
mov
std
xchg
imul
pop
mov
xchg
jo
dec
sbbl
ljmp
pop
or
and
mov
sbb
sar
mov
sbb
je
add
sub
dec
add
ret
inc
stc
dec
and
sti
sub
dec
add
std
push
lret
jl
hlt
mov
pop
cs
mov
and
mov
jecxz
sti
fucom
mov
dec
ds
mov
dec
ss
push
ja
into
pop
xor
scas
lcall
sbbl
lods
mov
test
into
mov
mov
lret
add
mov
sti
push
add
call
dec
push
or
imull
inc
into
ja
repz
movsb
cmp
scas
je
xor
mov
stos
xor
pop
dec
leave
xor
jbe
or
push
lcall
adc
sbb
lds
sbbb
or
int3
mov
ds
clc
lods
adc
add
dec
lret
lods
cwtl
movl
clc
inc
xor
movsb
std
mov
outsl
push
inc
lock
lock
pop
lock
test
in
shl
rcrb
sahf
mov
jne
loop
jne
stos
fstpt
pop
jnp
add
xchg
jne
cmp
mov
and
rcll
imul
int3
pop
and
addr16
push
mov
jle
lret
adc
mov
cld
sub
out
int
xor
lock
add
add
mov
jbe
pop
arpl
mov
mov
loop
jae
fs
cmp
adc
fstps
fs
push
iret
jecxz
mov
arpl
mov
fwait
xor
pop
xor
push
outsl
addr16
inc
das
rcr
and
std
insb
jns
lret
shlb
mov
add
hlt
adc
xchg
mov
adc
mov
stc
xchg
pop
ret
pop
es
jno
pusha
stos
insb
in
xor
imul
and
mov
outsl
jg
fisubrl
xchg
jae
fdivl
sub
stc
or
push
cltd
pop
fwait
inc
stc
push
adc
sbb
in
cmpl
in
arpl
add
cltd
pop
lcall
hlt
fsubl
cmp
lea
sti
lock
and
dec
cld
pop
pop
pop
mov
mov
mov
loop
xchg
adc
xchg
or
andb
and
outsl
dec
lea
add
push
jmp
iret
dec
jae
push
mov
addr16
mov
repz
scas
jae
cmpsl
js
cs
xor
je
daa
std
ss
and
out
mov
sbb
negl
mov
nop
out
cmp
jmp
sub
dec
std
xor
dec
out
push
add
xchg
cmc
loope
daa
testl
push
jle
cmc
out
mov
xchg
lret
outsb
fstpt
pusha
in
orl
inc
push
into
stos
cwtl
xchg
mov
enter
cs
jle
in
aas
int3
cs
leave
imul
cmpsl
shlb
mov
loope
leave
dec
pop
movsl
std
inc
mov
andb
lods
jne
inc
inc
out
push
in
xorb
xor
jl
imul
lods
jg
jle
or
cmp
push
mov
push
idivl
push
mov
ja
std
daa
sahf
add
push
pop
sbb
aaa
aad
ds
hlt
shl
cmp
iret
lret
jo
xchg
ljmp
sub
enter
push
mov
cwtl
idivb
or
jp
and
mov
pop
xorl
jns
movsl
fbld
fistl
scas
ds
lcall
jge
in
inc
push
mov
mov
adc
ljmp
mov
fs
mov
push
fs
push
stc
mov
scas
adc
je
outsb
pop
insl
ret
jae
mov
sub
sbb
mov
push
sbb
add
push
xchg
and
pusha
mov
or
push
and
pop
mov
mov
insl
add
es
out
nop
bound
hlt
pop
das
or
lods
inc
push
scas
adc
cpuid
mov
dec
sub
int
daa
cmp
inc
shrl
xchg
mov
cs
mov
lahf
aas
jnp
jb
loope
shlb
loopne
add
push
call
cmpsl
cwtl
loop
jl
mov
setnp
mov
xor
lea
sbb
fidivrl
gs
scas
add
test
push
callw
pop
inc
jmp
mov
pushf
xor
dec
ja
sbb
fcmovnbe
insb
mov
xor
cmp
data16
mov
xchg
gs
dec
gs
jg
inc
aam
and
xor
stc
popa
mov
pop
dec
lods
mov
mov
mov
mov
xchg
push
aaa
inc
enter
int3
inc
push
mov
fistpll
inc
jl
movsl
test
xchg
addr16
adc
into
jns
daa
sub
mov
mov
push
rol
shl
mov
int3
fists
jg
jge
in
xor
movb
ret
out
dec
arpl
add
jp
xchg
popa
stos
cmp
xchg
hlt
inc
cltd
sub
add
push
mov
outsl
lret
testb
dec
cs
jno
push
xorb
fs
and
inc
dec
add
xchg
xor
nop
push
or
mov
std
ret
xor
in
xchg
jne
dec
div
sub
sub
imul
loop
inc
mov
ljmp
or
ss
das
hlt
xchg
sub
mov
sub
mov
push
inc
xchg
insl
pmaxsw
insl
jmp
xchg
cmp
jmp
in
mov
mov
icebp
xor
sbb
repz
xchg
repnz
xor
je
in
out
orl
push
xor
adc
adc
out
and
mov
enter
ret
inc
cmpsl
inc
mov
push
mov
js
ds
cmp
out
lcall
shll
mov
mov
jl
xlat
negb
dec
sbb
call
mov
inc
xor
ljmp
fcoms
xor
pop
cmp
fldt
add
push
inc
add
scas
mov
pop
inc
inc
add
xor
call
push
jl
jecxz
dec
mov
sbb
in
xor
cwtl
out
xor
ds
nop
fcompl
inc
hlt
push
ss
or
mov
add
aad
push
outsl
pop
add
js
test
push
mov
mov
insl
ficompl
mov
adc
fwait
addr16
and
jb
pop
sub
dec
sbb
int
leave
lds
lods
inc
jne
xor
subb
xchg
jmp
mov
popf
ljmp
inc
jle
dec
mov
sbb
mov
mov
dec
push
mov
xchg
push
inc
adc
push
inc
inc
mov
jbe
mov
outsl
sbb
scas
xchg
test
ffree
inc
lret
ficoml
fcom
xchg
push
pop
test
xchg
pop
sub
jmp
pop
mov
push
cmp
and
jp
jnp
push
ja
fwait
cmc
xchg
inc
pushf
imul
movsl
lds
xor
mov
dec
inc
or
xor
mov
dec
into
cmp
repz
in
in
and
cwtl
jae
mov
arpl
sbb
repnz
insb
adc
lock
shlb
into
adc
mov
and
push
int3
xchg
lret
sbb
lods
add
mov
outsl
jae
push
add
and
inc
mov
sub
xor
ljmp
mov
add
jmp
push
mov
sarl
aam
adc
in
adc
adc
shlb
sbb
pop
dec
mov
das
ret
xchg
lret
test
arpl
dec
in
out
pop
fs
adc
insb
mov
stc
call
dec
push
sbb
mov
fwait
mov
dec
jg
flds
sbb
fidivrs
push
pop
test
sbb
pop
sub
push
or
rcll
xor
popa
and
dec
test
fmul
fiaddl
mov
jae
push
rorl
adc
lret
and
jl
mov
shrl
cmp
push
popf
ljmp
popa
addr16
ljmp
testl
push
idivb
js
fisttps
jb
mov
dec
pop
push
mov
xor
and
out
aas
push
sub
cmp
movsl
dec
mov
dec
and
clc
push
setae
in
or
mov
and
xchg
jle
sti
xchg
add
push
mov
xchg
bound
xor
sbb
xchg
jne
lods
mov
les
pop
addr16
popf
cli
inc
mov
ret
add
dec
inc
mov
out
xor
cmpsl
xor
jb
pop
push
movsl
shl
push
cmpsb
mov
fdivrs
cwtl
lahf
aam
adc
hlt
adc
fimull
in
mov
mov
in
and
jge
adc
jno
mov
and
push
jmp
sti
insb
outsb
push
sbb
cld
push
xchg
iret
mov
cli
std
fmuls
decb
inc
and
and
fstp
mov
mov
sahf
sti
mov
and
out
decl
pusha
adc
xchg
sbb
sub
xchg
ljmp
in
hlt
lret
scas
je
mov
mov
hlt
cmpsb
jae
dec
data16
fcmovb
pop
inc
mov
jbe
int
adc
int
bound
jmp
jo
ret
mov
movsl
mov
shr
push
decl
jbe
add
mov
sub
mov
jle
cmp
and
add
rcll
jns
movsb
rcrb
pop
cmp
sub
inc
shlb
adc
shl
add
out
jbe
repz
popf
std
test
push
repz
xchg
fs
mov
pop
aad
inc
jb
inc
jecxz
push
xchg
sar
imul
push
mov
ljmp
daa
jne
add
add
sub
xchg
inc
lcall
xor
lret
loope
pop
xor
mov
sti
mov
sbb
cli
pop
test
dec
jns
cwtl
add
mov
scas
sbb
test
fnstenv
ret
or
mov
pop
popa
es
lahf
sbb
clc
rorb
in
lods
sbb
lea
sbb
testb
orb
dec
mov
and
in
add
or
mov
in
xor
push
ja
mov
pop
and
push
dec
loopne
std
and
fidivrs
and
mov
cmp
xchg
sbb
xchg
mov
pusha
dec
xlat
mov
and
outsb
enter
xchg
cmc
adc
cmp
adc
shl
fucom
mov
jae
or
sub
mov
lret
add
dec
mov
fisubl
ljmp
dec
out
and
push
clc
inc
outsb
psraw
inc
sbb
pop
movsb
mov
scas
sub
insb
lret
sbb
dec
stos
cs
fwait
stos
mov
and
or
fstpt
push
cmpsb
scas
mov
add
and
mov
sub
xor
and
inc
lret
test
xchg
test
cmp
lahf
pop
shll
dec
add
outsb
or
xor
pop
jnp
popa
outsl
inc
aaa
jbe
adc
int
jmp
pushf
mov
xor
pushf
fdivl
stc
out
push
in
out
out
shll
or
xchg
mov
cmp
addl
push
or
in
xchg
out
movsb
faddl
in
shrl
adc
sub
xor
aas
lahf
or
cs
sbb
pop
sbb
lock
iret
xor
jmp
add
clc
call
inc
dec
or
addl
pop
out
ja
mov
pop
js
scas
mov
pop
adc
mov
fsubr
into
orl
shl
aad
mov
push
sbb
roll
inc
aaa
pop
aaa
or
mov
dec
daa
push
xor
mov
test
dec
inc
ficoms
pop
ret
inc
mov
or
sbb
les
mov
lret
test
lcall
repz
dec
push
sbbb
inc
mov
pushl
mov
sbb
adc
int3
sub
out
cmp
hlt
mov
repz
xor
pop
jecxz
dec
dec
mov
repnz
jns
out
add
iret
jg
cmpsl
push
testb
fnstsw
aad
dec
mov
jl
push
das
jne
test
les
psrlq
pop
xorb
mov
incb
lret
arpl
push
jl
enter
dec
arpl
movsb
and
and
mov
xchg
mulb
jmp
sub
dec
lret
enter
lods
in
cmp
mov
dec
into
xchg
test
xchg
fsincos
inc
int
std
mov
push
add
and
das
das
add
imul
pop
mov
cmpsb
sbb
in
std
out
mov
add
fildl
cmp
xor
or
mov
add
jge
aam
push
and
fs
cwtl
out
xchg
xchg
xchg
inc
loopne
mov
mov
rclb
arpl
mov
sub
mov
loop
mov
inc
dec
mov
std
push
or
push
shll
aas
push
cmpsb
js
push
stc
pop
popa
jmp
loopne
ja
push
test
cmp
repnz
sbb
fs
rcll
add
pop
aaa
outsl
cmp
xchg
mov
mov
jmp
imul
mov
pop
sti
mov
or
cld
jp
pop
inc
iret
imul
outsb
je
lea
sub
push
sub
insb
sti
push
outsb
insb
sub
out
fldt
int
and
xchg
popl
lods
test
mov
faddl
faddl
jbe
mov
aas
pop
fnstcw
inc
mov
mov
int3
daa
jno
scas
dec
push
or
loope
cmp
mov
add
mov
jmp
jp
loope
push
push
adc
repz
mov
icebp
cmp
xchg
dec
add
inc
xor
push
pop
add
pop
push
adc
nop
out
dec
mov
mov
mov
xchg
mov
call
xor
mov
adc
nop
loop
mov
xor
inc
jno
cmp
fisubrs
imul
test
lock
adc
sbb
mov
xor
mov
into
adc
movsb
sub
subb
cmp
sub
cltd
jo
push
ret
movsb
xor
or
inc
xor
mov
xchg
pushf
shl
ucomiss
inc
incb
imul
adc
sub
lcall
xchg
jg
xor
xchg
sysenter
inc
movsb
mov
in
in
into
adc
cmp
adc
dec
out
push
lea
scas
pop
pusha
popf
mov
mov
mov
call
fistps
add
jne
xor
jnp,pt
lods
and
fistl
lods
mov
dec
adc
inc
pop
in
adc
xorb
int
cs
insb
and
add
fs
rcl
aas
mov
scas
jmp
in
lahf
sahf
fcompl
xchg
pop
into
fcomps
loopne
or
out
clc
jecxz
ffree
bound
adc
xchg
pop
out
fstl
adc
in
jno
leave
or
adc
xchg
aas
out
jl
daa
leave
inc
pop
popf
dec
xorl
and
pop
pop
sub
lcall
sub
test
push
push
movsl
sahf
outsl
sbb
mov
out
movsb
sub
addr16
push
iret
icebp
sbb
in
jle
dec
and
mov
dec
fstp
mov
ljmp
jne
add
in
fs
sbb
jge
sub
inc
jno
popa
jl
js
shlb
inc
sub
jmp
ficompl
mov
cld
loope
ficompl
push
loope
mov
test
cmpsl
jno
sub
jbe
stos
mov
sbb
stc
mov
mov
sbb
lret
addl
nop
cwtl
sbbb
mov
ss
xchg
loop
xlat
cmp
xor
ljmp
jg
popa
sub
cltd
into
push
aam
inc
jecxz
push
xlat
ss
pop
pop
jp
out
stc
pushf
pop
les
lock
dec
mov
jno
lret
or
icebp
outsl
lea
or
enter
mov
adc
xor
cmpl
fwait
cmpsb
push
cmp
int3
stos
jp
out
or
aas
test
aad
and
jae
push
imul
cmp
jp
sahf
out
jnp
xchg
scas
cmc
inc
xor
mov
lds
xchg
mov
int3
je
add
shlb
fbstp
mov
and
pop
cmp
inc
inc
nop
jmp
inc
inc
icebp
clc
or
inc
jnp
and
sub
mov
push
xchg
sub
pop
xor
push
mov
xchg
cltd
sahf
adc
js
mov
pop
cli
mov
lahf
mov
aaa
or
daa
push
gs
cmp
cld
mov
imul
mov
xchg
int
fisubs
dec
cmp
orb
xchg
sub
ja
push
out
xchg
loop
cs
sbb
mov
jle
cld
mov
cmp
add
cmp
pop
arpl
and
setns
ljmp
xchg
mov
mov
jge
outsb
pushf
mov
pop
mov
pop
cltd
sbb
fsubrs
insb
loop
push
lea
jecxz
jns
aam
in
cmp
dec
repz
or
ret
fwait
shrb
push
cmp
ja
mov
push
cmp
orl
pop
fsts
mov
jp
ss
xor
clc
push
jno
pop
jb
and
test
jbe
mov
add
popf
gs
dec
add
pop
shl
inc
cld
adc
xor
mov
sub
ja
mov
pushf
xchg
sub
aas
test
sahf
xchg
in
lea
push
xor
jno
and
ss
adc
push
and
js
lret
lods
orl
push
mov
jb
rolb
subl
daa
mov
mov
fisttpll
jecxz
xchg
cs
mov
xchg
sbb
pop
cmpl
mov
or
pop
repz
cli
dec
cltd
std
aam
sub
cmp
js
mulb
cli
scas
pop
mov
push
aad
data16
jecxz
add
ja
sbb
sti
fiaddl
bound
jns
jno
test
mov
push
push
jb
xchg
mov
xchg
in
fs
test
inc
fwait
rorb
push
cmp
add
frstor
std
inc
mov
mov
gs
subb
add
test
mov
mov
sub
addb
mov
sbb
or
mov
push
mov
jnp
sub
cmp
testb
push
mov
lds
scas
fnsave
repnz
pop
ds
xchg
fildll
or
adcb
mov
mov
js
jecxz
out
and
mov
lods
jae
insb
sub
pushf
push
lahf
push
push
popa
test
sbb
add
sub
adc
cmpsb
cmp
test
jns
cmp
test
inc
loope
popf
call
or
adc
out
jp
rclb
cmp
push
in
insb
jb
shll
push
adc
adc
mov
rorb
mov
dec
mov
sarb
test
in
dec
dec
shr
ja
fisttpl
aam
mov
insl
addl
sbb
push
rorl
pop
iret
cli
shll
sti
sarl
adc
decl
dec
and
dec
fcmovb
pushf
stos
mov
sti
scas
jp
jmp
xor
out
push
jle
cmp
inc
out
and
movsl
dec
push
iret
in
push
loop
lods
xor
mov
movsl
and
dec
popa
dec
push
or
adc
lret
icebp
movsl
daa
scas
mov
jge
xchg
dec
mov
fmuls
hlt
xor
xor
or
or
movsl
cmp
xor
cmovs
inc
test
jmp
pop
out
xchg
icebp
dec
sbb
lahf
push
pusha
mov
inc
sar
sahf
cmpsb
outsb
jno
push
cltd
in
add
out
xchg
mov
leave
adc
in
push
mov
test
inc
out
ja
jns
ret
imul
push
subl
shl
test
inc
inc
aam
aaa
sbb
xchg
mov
mov
call
inc
dec
pop
nop
cltd
repnz
mov
and
in
cld
pop
sub
jmp
ljmp
negl
in
inc
lods
lahf
subl
add
push
outsb
mov
sbb
stos
movb
in
pop
lods
fs
repnz
cmp
pop
add
or
mov
scas
xchg
rcr
or
xchg
loop
mov
pop
fldenv
mov
sbb
dec
shlb
push
jle
lahf
cmp
push
test
movsl
push
mov
push
loopne
shlb
cltd
jo
add
cmp
pop
cmpsl
mov
cltd
jb
cmp
pop
imul
xorl
cmp
jb
stos
jnp
xor
xor
lock
mov
dec
push
jmp
mov
mov
rorb
int3
outsb
xlat
arpl
push
imul
fldenv
push
and
andb
inc
jns
nop
cmp
daa
add
push
add
cmp
and
dec
jnp
test
lock
sub
xchg
loope
jmp
mov
lock
not
add
inc
std
sbb
into
xchg
ds
mov
cwtl
enter
inc
cmp
mov
test
xor
call
idivb
mov
xchg
pop
add
push
sbb
jge
inc
lahf
mov
add
mov
cmp
fcoms
imull
out
out
insb
cmpsl
xor
add
rsm
inc
adc
fbstp
negl
mov
jnp
mov
xchg
or
and
push
mov
clc
pop
xchg
sub
push
in
and
nop
fistps
andl
and
fwait
or
add
sarl
jg
into
cmp
mov
push
dec
mov
mov
into
xchg
dec
cli
jne
sbb
lret
and
cli
add
testl
xchg
push
or
loope
adc
es
push
loop
hlt
push
fbld
mov
push
bound
sahf
loopne
inc
push
mov
data16
insb
arpl
insb
lods
into
push
or
jae
dec
sbbl
hlt
cli
mov
xor
int
lcall
and
mov
cli
xchg
jge
mov
add
daa
add
xchg
cmp
fwait
push
pop
adc
pushf
and
je
xchg
mov
xchg
pop
in
xor
cmpl
repz
push
add
mov
mov
sub
imul
and
pop
or
pop
int
jl
xchg
xor
mov
sbb
pop
sbb
push
jp
dec
mov
lret
cmpsl
push
je
arpl
ja
enter
mov
arpl
mov
rcr
mov
nop
jne
pop
in
jge
cmpl
imul
jnp
or
cmc
add
out
inc
es
push
mov
mov
ja
jnp
cli
push
scas
and
in
fwait
mov
std
out
add
ljmp
sub
lahf
jno
adcl
cmp
xchg
mov
push
fsub
cltd
xchg
inc
dec
das
jns
ror
inc
sub
repnz
pop
mov
mov
es
push
adc
in
insb
ss
pop
sbb
jo
fistps
loope
jge
xorl
incl
add
movsb
shrb
pop
inc
mov
inc
std
xchg
daa
add
aam
mov
aam
jbe
dec
icebp
jecxz
pop
aas
mov
outsl
inc
insl
and
xor
pop
jmp
mov
xchg
aas
shlb
pop
cmpsl
dec
adc
filds
add
add
out
mov
cmp
dec
stos
mov
dec
flds
das
pop
bound
adc
cmpsl
outsb
fstps
mov
jnp
fsubrl
es
imul
mov
sbb
iret
or
lahf
and
inc
jno
sbbl
in
movsl
add
scas
inc
adc
cmp
and
add
call
or
push
push
cmpsb
addr16
dec
in
or
fmuls
sbb
out
mov
mov
gs
or
adc
lds
testl
into
lret
aas
or
cmp
dec
fcomps
xchg
jle
out
in
jns
rclb
jno
jns
xor
dec
cmp
dec
mov
mov
lcall
or
adc
push
fsin
icebp
pop
xchg
jge
ret
cld
pop
xchg
in
divl
out
mov
imul
and
daa
aaa
push
jns
jae
pop
jns
popa
cmpsb
inc
mov
sub
in
shl
js
adc
test
jle
ss
xlat
repnz
cmp
fisttpl
out
add
jl
push
fmull
test
dec
shrl
mov
mov
je
jbe
pop
pusha
loope
and
jb
pop
xor
cmc
push
lds
dec
sub
push
fiadds
mov
jmp
subl
int
jno
stos
mov
inc
mov
ja
mov
sub
fsubrs
aas
mov
lods
orl
xor
in
inc
outsb
stc
inc
mov
mov
sarl
and
test
movb
cmp
pop
negl
push
dec
inc
mov
xor
mov
mov
insb
sub
mov
push
repz
mov
jb
shrl
push
xor
call
insb
lahf
sub
ljmp
xchg
dec
je
mov
sbb
mov
mov
pushf
xlat
and
xor
in
jle
aam
mov
mov
mov
pop
dec
inc
mov
sub
jns
inc
fisubs
lea
aad
rcl
push
pop
sub
mov
xchg
xchg
jg
arpl
enter
xorl
enter
jecxz
rorb
gs
test
sbb
vunpcklps
scas
dec
repnz
adc
rorl
loopne
mov
push
add
test
int
pusha
or
idiv
lods
inc
lds
mov
jle
mov
push
incb
mov
cmp
and
movsl
xchg
filds
cltd
test
jnp
pop
ljmp
jns
dec
or
add
ror
out
inc
mov
cmp
xor
repnz
scas
sbbb
test
add
incb
movb
and
and
stc
aad
adc
test
pop
rcll
sub
mov
xor
mov
in
ret
jp,pt
loopne
rorb
dec
push
loope
mov
test
or
shlb
sub
push
pop
in
rol
js
xchg
cwtl
imul
mov
sbb
pushf
mov
add
pop
jg
shl
in
sbb
pusha
lods
ficompl
mov
jmp
xor
lea
jo
sbb
jnp
shlb
mov
pop
les
dec
xchg
out
pop
mov
jecxz
push
fwait
push
or
insb
hlt
lods
cmp
xchg
push
jae
or
mov
pop
ror
and
ja
and
inc
or
jne
dec
mov
mov
popf
ret
lock
or
xor
cltd
inc
mov
aas
jg
adc
push
and
xchg
inc
jnp
idiv
pop
or
ret
rorl
inc
ljmp
jbe
dec
or
mov
lods
jns
stos
cmp
push
mov
ret
cmovs
outsl
ret
gs
adc
sbb
mov
jnp
mov
push
dec
arpl
dec
inc
mov
cli
jo
in
cmpsb
push
movsl
mov
vpsrad
mov
imul
scas
cmp
dec
aam
or
fmuls
mov
adc
mov
popf
mov
pop
or
jo
fwait
push
mov
fdivrs
lret
sub
icebp
lahf
in
hlt
jbe
pop
movsl
jb
push
shlb
pop
adc
mov
add
and
push
loope
pop
adc
loopne
push
shll
test
popf
jns
pop
dec
or
int3
outsb
inc
cli
or
je
xchg
mov
enter
mov
fs
lea
aas
das
sub
mov
lret
aaa
inc
lock
into
xchg
fildll
popl
fiadds
fdivs
adc
sahf
test
jle
cmp
jbe
mov
add
cli
jbe
push
inc
jbe
inc
adc
leave
and
adc
in
nop
in
shr
loope
or
stos
xchg
add
or
ret
mov
fsubs
and
punpcklwd
jo
adc
into
dec
jl
lahf
test
push
in
mov
sbb
outsl
lods
mov
decb
jne
jp
xor
dec
pop
mov
xorb
ds
aad
inc
adc
das
jne
jp
repz
in
cs
ljmp
outsb
mov
xchg
aas
mov
xchg
jnp
sbb
push
pop
push
fsts
sub
jb
pushf
push
sti
jge
int
or
arpl
bound
sub
fadds
cmp
adcb
mov
xor
inc
sub
jb
mov
or
pop
mov
lret
stc
in
inc
je
outsl
mulb
aad
jmp
mov
sbb
pop
cmp
push
push
push
jne
mov
inc
cmp
xchg
int
addr16
push
inc
rcr
xchg
push
or
orb
push
and
mov
xor
mov
call
cmp
add
rclb
fwait
dec
mov
idivl
jecxz
pop
mov
mov
xlat
or
out
sub
and
jmp
sahf
mov
shll
cmp
xor
cmpsb
scas
push
jecxz
inc
add
mov
jbe
pop
or
bound
aaa
insb
mov
and
push
sbb
loopne
mov
int3
mov
stc
mov
add
enter
aam
xor
in
loop
out
jg
iret
xor
fimuls
out
and
or
rorl
ret
jle
push
fnsave
push
sbb
leave
les
std
and
sti
call
dec
addr16
mov
inc
int
scas
gs
add
mov
nop
adc
xchg
cmp
jp
pop
inc
mov
jo
mov
popa
bound
imul
cmp
subb
jae
stos
ret
cmp
xor
or
repz
sbb
pop
mov
repz
push
aaa
push
xorl
sbb
xchg
and
iret
jne
cmp
mov
pop
sbb
stos
push
dec
push
cmp
pop
and
rcrl
sbb
inc
fidivrs
imul
enter
push
cmp
ficoml
cmp
sub
lock
mov
mov
sahf
pop
clc
jns
mov
scas
jno
rolb
or
mov
push
in
pop
shl
push
or
mov
loop
das
mov
sbb
sti
mov
jecxz
cmp
imul
pop
jb
movsb
push
imul
cmp
jo
jmp
push
mov
and
inc
xchg
adc
addl
test
cmp
inc
push
mov
push
add
mov
pusha
mov
dec
and
lods
subb
inc
jns
and
lret
dec
cmp
and
sub
loopne
jns
notrack
in
and
add
mov
or
fs
xchg
gs
cmp
stc
dec
sbb
sub
add
ss
lea
data16
fwait
dec
push
xor
enter
ljmp
lret
or
stos
das
or
mov
cltd
cmp
aas
jl
orl
inc
pop
xchg
jno
cmp
adc
popf
pop
stos
push
or
les
loop
jne
pop
mov
jmp
inc
dec
mov
inc
mov
push
xchg
insb
outsl
pop
jg
arpl
mov
out
sbb
dec
sarl
pop
mov
iret
std
inc
aaa
mov
xor
mov
and
iret
fmuls
adc
cmp
insb
mov
cmp
cmp
pop
xor
lods
shrb
stc
in
mov
cmp
push
jmp
and
sub
jp
das
xchg
shrb
in
xor
aad
repz
push
adc
mov
shll
mov
mov
mov
mov
testl
push
dec
mov
push
mov
data16
cmc
ds
jns
xor
jbe
rcrb
and
xchg
out
jmp
test
test
cmp
dec
ljmp
jno
aas
andl
dec
js
fisttps
xchg
cmp
imul
out
sbb
jae
and
xchg
icebp
sbb
pop
or
nop
dec
daa
aaa
ficoms
lods
sub
inc
jmp
mov
sahf
mov
shlb
push
add
int3
dec
mov
and
and
mov
pushf
jo
stos
mov
pusha
lods
fiadds
mov
inc
sbb
jbe
jp
pop
cltd
fmulp
push
jmp
in
pop
outsb
mov
ja
ds
enter
mov
sbbb
sub
or
hlt
xor
test
cmc
jne
mov
mov
loopne
in
and
lcall
mov
mov
or
out
jnp
leave
arpl
xchg
leave
and
popa
sub
lods
mov
popf
dec
dec
orb
xchg
adc
hlt
daa
aaa
leave
adc
mov
into
fimuls
xchg
into
imul
mov
in
dec
rclb
cmc
leave
test
hlt
push
stos
aas
xchg
inc
sbb
and
dec
mov
adc
push
mov
ds
jno
mov
sub
jp
xor
testl
out
aad
cltd
jne
jnp
dec
jge
in
push
int3
mov
stc
xchg
xchg
mov
ljmp
ret
sub
mov
fiadds
push
mov
cmpsl
mov
xor
inc
cmp
xchg
pusha
dec
mov
scas
clc
fdivs
mov
jmp
xlat
sbb
jge
adc
sarb
xor
jp
cltd
dec
xor
loopne
fcmovne
bound
inc
call
mov
inc
xchg
add
adc
stos
js
jle
inc
push
sub
and
cmpsb
push
rorl
or
push
sahf
iret
sar
in
mov
pop
add
mov
pop
mov
xlat
cmp
imul
ret
lcall
imul
and
jo
repnz
fldt
sbb
fst
inc
pop
jbe
or
andb
fstpl
sub
sbb
add
jle
andl
cld
xor
inc
sub
push
mov
imul
nop
mov
push
jae
fs
out
cmc
sub
push
cltd
inc
call
mov
mov
dec
mov
push
adc
xor
cmpsb
gs
inc
aas
sarb
sbb
out
add
mov
mov
xchg
sbb
xor
loope
lea
js
test
movsl
cmpl
fstpt
xchg
mov
les
sbb
add
stos
stos
mov
adc
rclb
iret
fimuls
dec
imul
mov
mov
mov
push
lahf
fcoml
rcll
pop
or
sbb
xchg
mov
jg
iret
dec
mov
mov
cmp
mov
jbe
addr16
arpl
mov
pop
into
cld
adc
sub
fisubrs
sti
jp
loopne
fidivl
imul
jns
mov
add
test
mov
add
fidivs
outsl
es
add
scas
iret
icebp
jecxz
outsl
enter
push
idivl
insb
inc
mov
leave
in
aad
imul
cltd
stos
ret
mov
mov
insl
mov
mov
gs
stos
lahf
pushf
ljmp
and
xchg
pop
dec
or
lahf
pop
sbb
stc
nop
inc
push
adc
fiadds
call
shl
mov
int3
inc
xchg
in
cmp
call
ja
jl
dec
testl
pop
movsb
mov
lock
repnz
pop
dec
sahf
inc
jg
xchg
movsl
mov
fnstcw
jb
mov
stos
jle
adc
dec
rep
jmp
sbb
movsl
outsb
lcall
inc
fiaddl
jns
adc
and
mov
mov
pop
test
mov
fdivr
loopne
outsl
sbb
inc
scas
loope
xorb
test
mov
cwtl
jge
xor
dec
dec
pop
or
jnp
jl
or
dec
mov
pop
cmp
adcb
adc
shrl
ds
lahf
xchg
imul
mov
cli
mov
inc
cli
je
call
hlt
or
xorl
fsubs
adc
mov
sti
jbe
mov
out
push
lcall
cmp
cmp
cli
pushf
or
loopne
jle
add
loope
sbb
sbb
jo
sbb
ficoms
fs
lret
subl
out
dec
mov
mov
mov
lcall
cmpsl
int3
mov
ret
popa
pop
outsl
pop
outsl
add
cwtl
push
ret
lds
shrb
imul
gs
or
sbb
cmp
lods
notl
das
sbb
dec
dec
outsl
jg
xchg
sub
mov
int3
iret
in
sahf
ret
add
mov
dec
lcall
push
jo
jae
or
jecxz
mov
pushf
xor
inc
lret
ret
push
rol
jno
push
pop
rorb
xchg
adc
push
fcomp
aaa
data16
repnz
fiadds
repz
pop
dec
ret
xchg
scas
out
mov
in
jl
icebp
lds
and
call
mov
test
faddl
or
fcoms
sub
cmpsb
cmp
mov
sub
pop
int
icebp
mov
in
stos
push
lcall
aam
pop
push
mov
pop
mov
jmp
cmp
adc
cmpsl
out
push
imul
dec
rorl
push
jp
inc
dec
or
mov
pop
testb
xor
xchg
adcl
adc
lahf
xorl
cli
sub
or
sbb
sub
mov
repnz
js
cmova
cmp
dec
mov
aam
add
mov
xchg
ret
int
adc
testb
mov
lret
jp
adc
mov
shll
repz
hlt
or
jecxz
lock
push
adc
fidivrs
rcrb
dec
popa
mov
xchg
stos
nop
fsubs
sbb
es
ljmp
push
sub
movsl
sbb
aad
dec
shll
dec
fisttpl
dec
ret
adc
fcmovu
js
loopne
shll
in
aaa
ja
xor
or
icebp
or
daa
out
xchg
cmc
dec
jecxz
pop
out
ret
fs
dec
and
xor
fnstsw
sub
gs
mov
insl
dec
sbb
mov
popa
fiadds
js
mov
or
and
imul
nop
dec
mov
jl
or
sahf
in
mov
push
repz
sbb
xor
push
cmp
xor
xor
or
xor
mov
je
adc
ficompl
sbb
cmpsl
scas
and
hlt
inc
lcall
cmp
mov
stos
fwait
push
mov
push
dec
xchg
add
sub
and
and
inc
pushf
lock
or
lock
sbb
sbb
scas
jno
inc
jo
mov
push
push
lret
mov
test
fcomps
sub
aaa
aas
mov
inc
cmp
fmul
add
xor
xchg
out
push
cwtl
cmpsl
adc
out
test
pop
jge
xchg
lahf
rcl
ret
mov
add
js
and
lods
pop
xchg
std
and
adc
mov
int
repnz
ljmp
shll
fistl
test
fnsave
mov
jp
roll
mov
xchg
mov
ds
pop
lret
add
xlat
test
jbe
sub
gs
xchg
or
rcrb
jmp
mov
mov
es
in
push
les
dec
mov
jmp
mov
imul
pop
mov
and
movsl
jp
xorl
lcall
out
ja
xchg
repz
push
mov
inc
push
xchg
and
pop
in
negl
or
iret
mov
cmc
pop
dec
cmp
push
sbb
outsb
test
push
cmp
shll
xor
add
xor
push
shrl
test
xchg
add
push
fdivs
dec
js
cli
lds
mov
ss
gs
es
rcrl
xor
incb
in
pushf
mov
xorl
test
mov
pop
push
lods
pop
loope
mov
stc
std
out
ret
jp
or
imul
xor
mov
enter
sbb
loop
push
dec
or
jo
inc
xchg
cmc
jmp
sub
jecxz
dec
inc
inc
jo
jmp
jg
push
xor
es
cmp
cmp
int3
jmp
pop
inc
adc
sbb
ja
xchg
cmp
test
cli
lods
mov
pop
add
adc
mov
xchg
cmp
adc
insb
xchg
push
cmp
mov
das
cmpsb
or
jp
repz
mov
and
fidivrs
mov
jmp
das
cmp
or
inc
das
lahf
add
jecxz
xchg
out
jbe
lahf
push
ds
xor
test
popf
adc
xchg
dec
dec
sbb
pop
mov
stc
add
add
mov
sbb
push
pop
mov
adc
mov
test
movb
inc
aam
cltd
sub
shl
push
fwait
dec
pusha
mov
sar
xchg
jecxz
lock
inc
mov
mov
fst
mov
inc
pop
lock
lret
ds
js
loop
cltd
xor
xor
insb
pop
roll
sahf
sarl
or
gs
sbb
rclb
test
xchg
fstpl
in
imul
dec
cli
push
jae
add
add
pop
xor
pop
jne
mov
and
xchg
rcrl
scas
negb
je
lods
ja
push
sub
mov
xchg
jg
test
sbb
dec
je
popf
push
out
shll
and
jl
scas
push
pop
aas
xlat
jge
sub
test
push
leave
mov
js
roll
fs
daa
sarb
mov
rorb
stc
xchg
aam
xchg
sti
mov
jno
rcrb
jo
lods
cmpsl
cwtl
mov
inc
cmp
cld
and
xchg
inc
dec
xchg
decl
jb
shll
jmp
push
xchg
or
jg
stos
lods
xchg
cmp
adcl
sub
test
imul
loopne
pop
push
jl
insl
inc
mov
lret
mov
fwait
shll
push
clc
lock
lds
stos
in
or
rcrl
inc
xor
lret
lahf
xchg
push
icebp
add
mov
mov
addr16
arpl
inc
push
gs
test
inc
jbe
out
mov
mov
imul
jae
dec
xchg
ljmp
cmp
rol
adc
cwtl
sub
dec
mov
cmp
mov
in
mov
xchg
dec
bound
sub
push
insb
mov
lods
jae
mov
pop
cltd
scas
incb
add
insl
fs
push
adc
loopne
mov
fwait
jne
aad
pop
xchg
dec
sub
data16
sbbb
or
in
lods
in
sti
movsb
add
sub
es
dec
pop
fnstenv
andb
out
mov
lcall
mov
leave
loop
scas
push
mov
pop
arpl
lcall
lcall
cmpsl
nop
mov
sub
jl
lahf
cmp
mov
std
mov
inc
adcb
and
out
test
loop
jbe
stc
or
cmp
lea
cltd
pop
test
adc
stc
out
subb
pushf
inc
mov
loope
cmp
fdivrs
nop
mov
cmp
cmp
lahf
mov
lcall
shll
test
mov
mov
xlat
fnstenv
inc
pop
lret
negl
push
sub
jo
dec
sub
adc
pop
dec
rcrb
cmc
not
sub
dec
push
mov
push
stos
jnp
adc
sub
mov
push
xor
xchg
dec
imul
ss
int
js
inc
xchg
or
aaa
inc
imul
lods
fnstcw
adc
sub
mov
jecxz
mov
imul
pop
cmpsl
sbb
sbb
in
adc
into
and
lcall
and
add
or
xor
ret
outsl
pop
jle
xchg
cmpsb
scas
inc
dec
inc
in
dec
push
push
cs
mov
jne
xor
jno
lods
push
sbb
xchg
sarb
inc
dec
les
and
pop
push
int
popf
in
insb
pushf
js
jmp
dec
inc
mov
add
je
bound
inc
jne
gs
mov
push
and
das
jl
dec
mov
sub
rclb
dec
pop
pop
push
jo
iret
mov
bound
lods
lahf
bound
stos
cmpsb
mulb
lods
movaps
jl
xchg
cmp
mov
or
orb
lea
pop
lret
pusha
push
jo
test
sbb
ja
xchg
jnp
movsb
test
repz
pop
mov
push
adc
shrb
mov
repnz
movzwl
mov
mov
cmp
ja
add
push
mull
test
or
loop
in
movsl
xor
sbb
mov
push
jae
pop
push
xchg
in
jbe
imul
ret
push
out
insl
out
pop
xor
rol
stc
mov
out
mov
lods
iret
out
cltd
cmc
or
or
jbe
aad
es
test
jge
or
rcrl
jecxz
pop
js
adc
gs
loopne
mov
cs
sbb
inc
xlat
lds
sbb
dec
bnd
inc
dec
mov
xor
jnp
jo
jbe
in
sub
lods
cmp
std
frstor
pushf
fnstenv
jae
data16
lock
pop
hlt
push
fdivr
jne
out
into
dec
je
adc
push
in
mov
in
hlt
xor
scas
or
repnz
ljmp
push
into
and
stos
scas
leave
jo
dec
es
pop
bound
cvtpi2ps
aam
jmp
pop
hlt
int
loop
enter
mov
mov
pushf
orl
call
push
stos
xor
popa
mov
into
dec
dec
loope
pusha
iret
mov
or
jne
arpl
andl
jae
cwtl
add
cli
and
cld
jb
dec
repz
dec
outsl
push
cmp
jnp
mov
adcb
in
movsl
sbb
mov
jp
cs
inc
punpckldq
mov
cmp
adc
stos
and
dec
ret
stos
loope
xchg
mov
pop
xchg
out
and
push
mov
xor
push
sbb
das
rol
sti
mov
js
ficoms
in
mov
imul
pop
cmp
es
inc
adcb
lcall
shl
adc
push
or
dec
movsb
inc
fmull
fwait
sub
xor
out
and
and
pop
xor
std
stc
call
xchg
stc
adc
in
iret
pop
mov
in
out
sbb
cmp
mov
push
arpl
dec
jne
ror
lds
lds
psadbw
test
icebp
aad
push
ret
sahf
sub
test
push
mov
lea
add
push
int3
enter
push
js
and
pop
test
add
cltd
fisubrl
add
xchg
stos
mov
pop
pop
mov
nop
popa
arpl
test
adc
pop
daa
or
or
lods
pop
mov
pop
push
xchg
sti
xor
mov
jmp
lds
dec
dec
mov
or
cmp
jae
add
repnz
add
cmp
decl
jb
xlat
and
jmp
mov
mov
pop
out
loop
mov
incl
dec
fdiv
or
add
es
jmp
adc
hlt
sbb
inc
stos
stos
xchg
insb
out
daa
push
mov
adc
mov
adc
jp
xchg
jle
add
nop
out
lds
jecxz
sbb
push
and
decb
andl
aas
sub
out
xor
inc
push
js
mov
pop
cmp
xchg
notb
rclb
lret
mov
or
in
mov
add
loopne
test
hlt
aaa
shrb
cmpb
or
push
outsb
jne
dec
mov
pop
data16
and
fsubr
jecxz
pop
icebp
int3
fucomi
mov
sub
fisttpll
rol
mov
mov
jne
jb
xor
rolb
or
js
std
into
add
add
andl
jl
mov
movsb
xlat
pop
ss
aaa
dec
std
mov
xchg
mov
stos
dec
fsubr
mov
dec
sub
sahf
adc
js
jmp
jle
pop
add
sbb
jmp
testl
lcall
add
ja
data16
mov
ds
inc
adc
incl
ret
dec
or
js
xchg
xchg
xchg
cmpsl
add
pop
xchg
outsl
lret
xor
xchg
hlt
mov
sahf
xor
cmpsb
cmp
jle
sbb
cmp
or
adc
iret
rorb
iret
jo
ja
push
outsl
insl
in
inc
fimuls
pop
loopew
insl
lods
mov
cmp
outsl
mov
mov
or
push
mov
dec
js
xchg
test
jge
or
jl
jle,pn
sub
fldcw
jle
pop
js
xlat
or
push
sub
in
jmpw
hlt
sub
popa
sub
loope
mov
mov
add
pop
jns
loop
and
adc
jmp
xchg
rolb
push
adc
je
daa
pop
cmpsl
pop
enter
mov
add
addl
fmull
and
dec
ret
mov
or
mov
les
lods
pop
pushf
mov
mov
mov
test
ret
shl
push
cli
popa
jg
rcl
mov
push
lahf
and
mov
out
cmc
rorb
xor
cmp
inc
scas
insl
pop
gs
fs
or
bound
cmpb
js
mov
push
ljmp
pop
jbe
aaa
mov
outsb
loop
xchg
das
xlat
and
bound
je
js
add
out
jle
dec
mov
ret
in
stos
js
shlb
jg
adc
jo
test
cli
shrl
xor
pusha
bound
sub
adc
mov
lods
add
lcall
test
lret
incb
push
push
fists
cltd
inc
ja
pusha
mov
leave
loope
push
mov
or
cmp
icebp
dec
ja
mov
mov
push
fistpl
ret
pop
add
outsb
sub
je
and
out
insb
cmp
fists
pop
sub
cmp
adc
adcl
mov
div
dec
xor
cmp
and
iret
mov
xchg
fs
pusha
sub
out
and
icebp
push
jge
fsubr
cli
leave
out
cmp
xor
xor
xchg
dec
inc
jg
icebp
mov
xchg
cltd
mov
push
mov
sub
movlps
xor
fsubrp
jns
cmp
and
xchg
sub
jl
pop
pop
sahf
fisubrs
in
test
sbb
sar
popa
sub
jns
add
es
hlt
cmp
dec
cmp
mov
notl
pop
jo
loop
or
call
ret
pop
cmp
adc
pushf
inc
lock
insl
cs
jo
imul
popf
lret
fwait
addr16
dec
fisttpll
ds
mov
cmp
bound
ss
shll
xor
mull
dec
jb
mov
das
std
jne
and
sarl
nop
fmul
pop
cmpsl
test
sbb
out
inc
jbe
imul
out
addr16
mov
mov
data16
inc
mov
inc
sbb
add
scas
jmp
lahf
mov
inc
cmp
xchg
sub
ds
pop
sub
jae
aad
jno
jbe
pop
adc
iret
cli
cmp
and
andl
gs
cmp
aas
and
out
jo
lock
and
jecxz
push
dec
sbb
jp
mov
pop
ret
push
cmpsb
test
outsl
movsl
andl
xchg
push
sbb
je
iret
or
sbb
cmc
xor
jg
xor
cmp
mov
dec
push
mov
fstl
icebp
push
ds
mov
pop
adc
pop
fstl
push
orb
sbb
fnstcw
push
xlat
popf
xchg
jb
jbe
in
push
mov
cmpsl
adcb
mov
ja
xchg
pop
stos
mov
cld
rorl
add
mov
or
js,pt
inc
add
xlat
jo
stos
cmp
aas
fimull
aas
jge
pop
cmpsl
jnp
je
pop
cltd
daa
movsl
mov
adc
jp
jl
loopne
enter
dec
pop
cltd
xchg
sbb
inc
push
jp
dec
and
push
repnz
sbb
fbstp
je
pop
push
rcll
gs
es
adc
sti
pop
es
dec
adc
add
xlat
das
mov
and
imul
xchg
dec
sbb
mov
out
rcll
mov
pop
insb
xchg
sbb
loopne
jl
movsl
sub
adc
ret
loop
fcmovnu
test
mov
test
pop
mov
sbb
cmc
push
xor
loope
push
fnstcw
popa
repz
cmc
or
sub
repz
mov
shlb
rcrb
mov
jns
pop
or
andb
test
push
sub
dec
sub
decl
je
xor
sbb
sbbb
aam
ds
dec
sar
dec
daa
adc
jno
dec
xchg
adc
into
mov
pop
add
cmp
xchg
cld
mov
dec
les
scas
out
adc
inc
in
imul
pop
imul
mov
rcr
pop
sub
sub
out
scas
mov
dec
add
cmpl
enter
sub
and
cmp
mov
dec
ret
movsb
sub
mov
outsb
mov
orb
sub
mov
pop
std
mov
mov
les
xchg
lret
mov
pslld
pop
push
mov
stos
and
cmpsl
repz
xchg
xor
pop
jp
add
arpl
mov
test
in
add
hlt
cmc
dec
and
xchg
adc
adc
push
jo
fwait
inc
aas
ud0
push
push
std
sub
or
add
lock
push
add
push
mov
dec
push
into
shr
fisubrs
inc
push
and
icebp
or
push
jb
sbb
movsl
ja
jl
xor
rorl
xchg
or
jnp
sub
cmc
bound
dec
mov
push
dec
fmull
cmp
jg
arpl
ds
popa
stos
inc
loopne
stos
insl
jbe
mov
jg,pt
fists
sub
idivb
and
jmp
xchg
push
inc
pusha
inc
or
mov
lods
fisubrl
fcoms
test
ja
js
idivl
or
fstps
xchg
lea
sub
in
xchg
outsb
inc
pusha
lret
mov
mov
fs
sarb
mov
js
jg
mov
call
push
int3
add
add
sbb
out
popf
ljmp
std
inc
ret
or
push
stos
in
jb
xor
sub
decl
xchg
stos
aam
push
push
shr
lcall
sbb
push
test
xchg
into
ficompl
stos
jne
movsb
pop
js
addb
mov
push
ds
enter
adc
sbb
mov
lcall
xlat
imul
or
shrb
push
push
data16
loope
int
mov
or
out
std
dec
mov
mov
pop
fcoms
push
int
adc
add
jno
aad
mov
push
adc
jbe
mov
vmread
aaa
sub
out
jne
mov
fwait
hlt
hlt
ret
movsl
aaa
dec
dec
jae
and
sub
ret
sbb
bound
es
lahf
xchg
mov
inc
int
sahf
inc
pop
mov
mov
stos
push
add
pop
jl
mov
fcoml
daa
xor
mov
int
nop
subl
mov
sti
xchg
mov
ss
jo
mov
xchg
insl
and
daa
loopne
add
bound
scas
mov
dec
push
mov
pop
test
fistl
adc
popf
xorb
push
repnz
adc
insb
ret
pop
hlt
and
dec
jecxz
pop
push
int3
out
call
pop
inc
add
nop
fisttpl
fcoms
test
test
cs
dec
scas
inc
xchg
movsl
and
pushf
pushf
lods
jg
cmp
jle
ret
adc
nop
rorl
jbe
fistpl
roll
add
lods
pop
dec
aaa
stos
fld
xor
or
cwtl
test
or
cmp
cmp
jl
aam
inc
test
dec
mov
jo
adc
nop
jno
in
jno
adc
push
sub
sub
and
xor
iret
dec
xabort
dec
stc
and
test
scas
mov
das
lods
lcall
repnz
fimuls
pop
fiadds
sbb
mov
inc
mov
gs
inc
cmpsl
cmpsl
inc
and
mov
pushf
ret
jle
test
sbb
mov
inc
cs
shlb
outsl
dec
pop
pushl
icebp
scas
mov
push
inc
inc
cli
mov
xchg
or
int
stos
cmc
mov
or
or
cmp
push
mov
aas
dec
and
cmp
cmc
out
lcall
dec
imul
or
lea
mov
xor
lcall
mov
out
sub
mov
mov
and
jg
dec
mov
push
shr
scas
popf
sahf
sahf
idivb
je
frstor
ss
stc
mov
and
jb
xlat
gs
loope
out
and
cmp
jo
mov
push
add
pop
mov
cmp
loope
cmp
test
jecxz
cmpb
sbb
aam
mov
push
xchg
insb
loope
sar
ficoms
xchg
test
ret
insb
cmp
cmpsl
dec
mov
or
test
dec
insb
adc
fcomp
jne
push
aas
pop
or
loopne
jbe
inc
adc
push
divb
pop
dec
adc
js
test
mov
mov
push
int3
aaa
xchg
cmp
xlat
pop
push
jne
test
call
sub
jo
push
mov
dec
dec
push
movsl
sbb
daa
xchg
mov
or
in
and
sub
mov
pop
subb
lret
clc
mov
xchg
aaa
cmp
mov
loope
lret
xor
jl
repnz
ret
mov
inc
mov
add
popa
adc
xor
aas
popf
setl
int
in
mov
decb
pop
lods
mov
sahf
jle
setne
ss
insl
and
cmp
pop
stos
adc
pop
jl
jno
sbb
in
popf
and
push
mov
mov
push
inc
sbb
jecxz
xor
lret
test
mov
pushf
testb
faddl
out
iret
stos
fwait
xor
insb
mov
dec
pop
imul
enter
and
lods
mov
xor
stc
es
sub
scas
xchg
bound
stos
daa
jge
and
mov
adc
call
subb
call
lret
movl
stos
in
pop
push
fisttps
cmc
fdivrp
mov
lods
pop
lock
xchg
gs
xchg
sub
jl
fnstenv
sbb
xchg
xchg
rcll
in
mov
jle
icebp
mov
int3
inc
ret
nop
icebp
pop
add
test
cwtl
jne
cmpsb
xchg
or
pop
es
inc
mov
push
jl
es
xchg
mov
mov
lods
push
push
cmc
mov
mov
jmp
adc
addr16
and
xchg
repz
dec
sbb
data16
cwtl
outsl
fucomp
adc
push
pavgw
jl
or
int
cmc
pop
pop
dec
xor
or
add
dec
mov
pop
ror
push
js
sahf
mov
jl
negb
ljmp
aas
fildll
int
mov
sbb
and
test
lret
push
stos
repz
sub
repz
xor
and
jo
pop
mov
xor
mov
pop
std
inc
dec
mov
pop
or
jecxz
test
push
add
in
enter
jg
inc
iret
adc
mov
popf
push
and
movsb
xor
movsl
pop
xchg
push
sbb
mov
pop
jb
jge
or
add
jmp
push
push
cmc
es
pop
inc
dec
lods
bound
inc
nop
jbe
mov
jb
rclb
add
cs
mov
hlt
insb
mov
add
push
xchg
or
les
negl
cli
pop
and
arpl
in
add
fs
inc
shld
xor
add
mov
dec
fsts
hlt
popf
in
mov
mov
adc
fstpt
aaa
inc
or
out
sbb
ret
mov
sti
mov
dec
ljmp
stos
sub
fisubs
jne
outsb
stc
xor
dec
xchg
jp
mov
jl
mov
int3
xor
mov
add
stos
insl
scas
cmpsl
pop
in
push
addl
xor
icebp
or
mov
dec
test
das
imul
add
mov
aad
das
bound
adc
add
aaa
jae
shlb
mov
pop
enter
mov
pushf
jno
cli
sahf
jns
add
and
lock
push
mov
popf
push
and
add
sub
lret
pop
jnp
add
add
ret
mov
cld
sub
or
aad
addr16
imul
sbb
adcl
or
cmp
sbb
pop
xchg
hlt
orb
stos
xor
cmp
pop
test
mov
add
loopne
es
stos
mov
popa
fmuls
cltd
into
popl
adc
inc
ja
arpl
push
pusha
pop
adc
test
test
pop
cs
sbb
movsl
rorl
sub
lret
ja
or
mov
iret
push
push
dec
inc
cltd
mov
ret
xor
lret
or
dec
ljmp
frstor
xor
push
cltd
jbe
mov
jge
cmp
push
jmp
mov
push
mov
lods
inc
lahf
adc
loopne
mov
hlt
jae
sbb
add
clc
xor
mov
jmp
sbb
hlt
je
pop
push
test
add
and
pop
addr16
mov
sti
ja
xchg
lret
fs
xor
out
jmp
inc
lahf
pusha
sbb
leave
sbb
jmp
xchg
lods
cmp
mov
test
ljmp
sbb
pop
mov
popf
imulb
sbb
mov
dec
push
mov
f2xm1
ljmp
pop
cmp
pop
out
int3
cmp
mov
ficomps
loope
add
dec
imul
test
mov
into
inc
les
mov
insl
je
mov
fisubl
fstps
mov
cmc
negb
popf
arpl
mov
push
jp
idivl
in
test
cltd
lds
push
inc
and
rcl
das
xchg
aam
aaa
push
in
and
lret
lods
push
enter
xor
data16
fincstp
stc
ja
xor
dec
scas
test
inc
cltd
js
pop
sub
jmp
push
dec
xchg
cli
and
push
add
loope
popf
pop
hlt
jno
rorb
lret
mov
js
scas
pushf
inc
dec
mov
pop
push
lock
pop
stos
test
inc
ds
les
fidivl
aaa
sub
cmp
sbb
pop
or
enter
add
cwtl
je
push
dec
mov
fsubl
ljmp
xchg
xchg
aaa
mov
or
dec
inc
popf
mov
inc
stos
dec
dec
mov
push
fsubs
pop
cmpsb
sub
mov
ljmp
daa
jns
sbb
xor
daa
inc
sub
sbb
jae
rorb
sub
inc
cs
mov
lods
adcl
push
push
mov
cmp
arpl
leave
lret
fdivp
lea
pop
sbb
jns
leave
ds
sbbb
testl
inc
adc
data16
out
push
or
std
push
mov
out
movsl
xchg
movsl
ds
jae
mov
jmp
xchg
iret
add
push
push
aad
cs
xchg
mov
xchg
jg
inc
sbb
cmp
setae
sub
clc
orb
pop
add
fcoml
mov
xchg
clc
nop
and
mov
pop
dec
dec
xlat
add
xlat
and
sbb
movsb
sub
mov
lcall
mov
inc
je
fwait
adc
sub
or
sti
sbb
jge
sbb
sbb
enter
outsl
scas
mov
daa
fs
jl
insb
outsl
mov
xor
xchg
jae
adc
sub
aas
fsub
dec
cmp
mov
and
xchg
mov
outsb
out
or
add
int
lock
dec
cwtl
add
rcrb
test
popf
loopne
inc
dec
addr16
xchg
outsl
adc
add
inc
insb
mov
fnstsw
pusha
mov
mov
mov
cmp
or
xchg
das
cmpl
test
add
mov
mov
nop
dec
adc
inc
aam
int3
cwtl
roll
std
decl
clc
or
movsl
pop
mov
mov
lahf
sbb
adc
mov
jae
pop
stos
outsl
jae
clc
aam
inc
jae,pn
mov
push
adc
mov
je
fwait
inc
loopne
cli
cmpsl
xor
or
mov
jnp
add
add
mov
lods
dec
xchg
mov
test
leave
pusha
inc
xor
popa
movsb
pop
xchg
dec
cli
sahf
scas
jb
cld
iret
test
xor
push
dec
jg
cmp
idivw
jp
xchg
into
cmp
jo
mov
add
stos
cmp
add
xchg
inc
mov
mov
aas
std
mov
test
icebp
xchg
xlat
mov
popf
xor
mov
xor
cmp
sbb
lret
dec
cmp
mov
testl
aad
outsl
lret
pop
mul
sub
mov
pop
jno
out
je
add
mov
dec
push
shll
sub
cmp
inc
pop
sbb
outsl
mov
jbe
arpl
mov
iret
and
xor
gs
mull
jl
dec
jl
adc
dec
les
cs
xchg
rcrb
in
add
mov
je
inc
cmp
repz
mov
aaa
push
les
shll
xlat
add
clc
outsl
add
imul
mov
mov
popl
pusha
frstor
mov
lcall
sbb
inc
imul
enter
andl
mov
std
fadds
rorb
popa
or
sahf
fisttps
aas
iret
insl
jecxz
mov
nop
inc
lds
mov
pop
call
inc
or
icebp
inc
xor
or
mov
ret
js
mov
ss
sub
xchg
fcmovbe
push
xor
lock
shrb
stos
mov
iret
dec
push
push
pop
lods
adc
add
add
mov
push
loopne
fiadds
sbb
orb
inc
cmc
cmpsb
cmp
pop
cltd
test
sub
cmp
jmp
sti
or
push
mov
ja
scas
jg
adc
dec
lcall
test
arpl
shl
fisubl
repnz
arpl
jmp
fwait
in
push
popa
inc
rcll
icebp
out
nop
ja
les
mov
dec
cmpb
stos
stc
jl
aas
push
jmp
aaa
aas
sbb
adc
imul
arpl
mov
inc
sbb
mov
pop
mov
sub
xor
sub
sbb
adc
adc
in
lahf
test
dec
sarl
push
repz
fdivrs
or
jb
push
sbb
hlt
add
stc
cmp
jo
les
clc
ljmp
and
cmp
pop
dec
out
pop
mov
pop
xchg
and
cli
cmpsl
and
scas
push
xor
or
hlt
add
inc
movsb
out
bound
and
pop
inc
inc
das
sbb
aad
sbb
lea
pop
cmp
mov
mov
pop
or
loopne
mov
sar
push
aam
cmpsb
int3
and
rcl
sub
lds
pop
loopne
pushf
out
ret
pusha
jecxz
into
dec
clc
fsubl
cmp
lcall
push
popa
push
lahf
aam
adc
adc
movsb
pushf
and
out
aaa
cltd
or
mov
or
pop
cmp
mov
into
dec
add
mov
mov
js
out
fimull
rclb
mov
fisubs
lock
stc
fs
test
pop
dec
out
andl
loop
mov
test
mov
rorl
adc
repz
and
xorb
xchg
test
mov
or
and
in
insl
adc
sub
and
add
imul
shl
jmp
sbb
stc
ss
lahf
cmp
jmp
mov
jl
cmp
mov
inc
jno
inc
sub
in
shlb
or
fdivrp
pushf
inc
rol
mov
jo
xchg
jecxz
arpl
pop
mov
std
mov
pop
sub
jb,pn
mov
cld
or
mov
aam
jmp
popf
push
xor
dec
adc
push
sub
mov
push
xchg
sub
pop
mov
mov
movsl
enter
mov
ja
inc
adc
and
in
xlat
dec
iret
adcl
or
adc
popa
mov
xchg
and
pop
inc
fcoml
movsl
mov
out
push
jle
push
hlt
sub
lcall
and
and
nop
jmp
jecxz
es
push
clc
push
enter
mov
test
cmpsl
and
sbb
jle,pt
adc
fildl
pop
mov
int3
push
and
mov
ficompl
jecxz
inc
into
lret
xchg
add
cmpsl
jg
and
dec
das
jbe
lock
insl
aaa
out
push
push
sbb
mov
mov
add
stc
push
imul
inc
fists
lods
and
mov
fcompl
jb
xlat
adc
out
rclb
jl
mov
leave
push
cs
mov
shll
xor
adc
pop
xchg
dec
inc
mov
mov
addr16
into
inc
or
daa
les
inc
fadds
mov
sbb
lret
repnz
ja
in
daa
and
or
cmp
outsb
arpl
sbb
fbstp
ret
cmpsl
push
mov
popa
add
fisubrs
scas
ret
cmp
aam
cli
xchg
adc
push
into
jnp
xchg
adc
loopne
push
inc
xchg
xchg
iret
and
int3
into
and
dec
lds
or
push
jecxz
test
jnp
data16
enter
cltd
push
lret
add
into
gs
sbb
aad
cwtl
repnz
rclb
adc
pop
add
inc
int
inc
rcr
popf
dec
mov
into
outsb
and
ljmp
mov
in
dec
mov
inc
hlt
dec
repnz
lods
or
lds
pop
ljmp
inc
lahf
and
or
mov
sbb
mov
dec
push
fstl
fsub
incl
sbb
and
xchg
out
xor
mov
gs
into
lock
rorl
lods
pop
daa
insb
xchg
cmp
in
shll
adc
pusha
pop
mov
into
lods
cs
sbb
push
cmpb
popf
shlb
das
adc
mov
lods
mov
cmp
outsl
out
into
repz
jns
repz
out
jle
pop
loope
add
pop
push
sbb
mov
mov
xor
push
fdivrs
sub
enter
xor
pop
adc
and
jns
inc
andb
xchg
cltd
adc
pop
std
cli
mov
cmp
or
xor
or
mov
into
aad
cwtl
push
jl
cmpsb
lahf
gs
faddp
sub
sub
cld
aaa
jecxz
enter
lcall
insb
add
mov
mov
stos
cmpsb
sahf
mov
jecxz
jg
mov
dec
mov
and
ds
rcll
and
xor
fiaddl
adc
xchg
cmpsb
or
clc
out
mov
xchg
sbb
jae
in
mov
sub
shll
jl
hlt
stos
loop
jne
repz
cmp
cmp
pop
cmp
out
mov
loope
inc
repnz
js
push
pop
hlt
shl
mov
jg
jno
ljmp
jg
adc
lcall
out
imul
sub
test
iret
pop
mov
les
sbb
mov
sbb
mov
lahf
adc
ja
push
or
push
sarb
jge
les
mov
pop
xor
in
out
dec
add
outsl
out
nop
or
test
imul
xor
sub
jnp
cmp
jno
fadds
outsl
shll
scas
inc
and
cmpsb
insl
pop
xchg
sbb
stos
icebp
pop
add
mov
vpaddq
outsb
subl
mov
dec
inc
ret
push
mov
mov
mov
ja
inc
push
in
ret
jp
adc
cltd
stos
mov
or
test
popa
inc
arpl
mov
inc
je
rorb
xor
inc
fidivl
inc
and
mov
sub
xchg
sub
sbb
shrb
in
jle
in
movsl
sub
mov
or
dec
pop
movsl
incl
add
aas
iret
or
push
out
jae
dec
xchg
jmp
xor
sub
push
push
ret
dec
cld
sarb
aas
insb
mov
scas
jg
cwtl
mov
cmp
adc
mov
lret
fwait
push
mov
lock
add
sti
cmp
add
dec
out
in
sti
aam
fcomps
imul
repz
ljmp
cmc
lret
lret
mov
adc
adc
pop
fwait
iret
fisttpll
test
lds
mov
loope
push
mov
push
cmc
and
mov
xchg
push
aam
je
lcall
shlb
cmc
loope
sub
pop
pop
mov
adc
cmp
pop
lahf
cmc
fisubl
sub
int3
shl
or
mov
cld
frstor
rcrb
jne
fistpll
sub
jecxz
push
mov
out
pop
aaa
call
cs
hlt
mov
andb
imulb
jle
je
mov
movb
cwtl
insl
cli
mov
dec
sub
iret
and
fs
scas
push
mulb
clc
aas
pop
out
shlb
lret
movb
push
xchg
xchg
lcall
pop
cmp
mov
out
lods
sub
in
xor
pop
out
mull
xor
sub
call
jbe
mov
mov
mov
push
adc
mov
xor
pusha
xor
scas
es
pop
aaa
and
adc
int
dec
jno
insb
sub
ja
sbb
add
lret
ja
mov
mov
xchg
lods
dec
daa
in
int3
cmp
mov
scas
pop
push
aam
fistps
jne
insb
jecxz
sti
lds
imul
ljmpw
clc
cltd
add
ljmp
cmp
out
adc
xchg
mov
hlt
sbb
push
xchg
mov
repz
and
mov
mov
faddp
fdivs
in
dec
sahf
inc
jb
jb
repnz
cltd
jge
jge
jg
push
insl
or
popa
out
inc
cmp
test
mov
mov
mov
cmpsb
rcll
mov
mov
jo
jno
cmpb
push
aas
push
sbb
adc
data16
dec
call
jns
and
xor
lcall
fldt
jecxz
fucomi
mov
mov
insl
dec
adc
test
mov
out
pop
cmc
xchg
mov
jae
insl
adcl
sbb
bound
lahf
sub
dec
bound
imul
int3
rcrl
nop
in
xchg
fs
out
cltd
push
add
cltd
es
pop
adcb
pusha
ret
int
cmp
test
scas
in
fmuls
std
xor
or
sbb
mov
push
aam
jae
mov
pop
clc
test
mov
cwtl
dec
cmp
loopne
xchg
in
mov
push
push
mov
mov
fs
sbb
adc
out
enter
mov
hlt
xchg
xchg
aaa
arpl
mov
add
loope
jbe
add
ficompl
aad
aas
xchg
rolb
mov
xlat
ffreep
mov
add
mov
jns
cld
jnp
lds
sub
stc
inc
rcll
add
cmc
xor
xchg
cmp
cmpsl
mov
aam
pop
add
jl
mov
adc
and
imul
inc
mov
xchg
jae
stos
fmull
or
ror
ja
xchg
and
ffree
cmpb
mov
bound
or
inc
fdivl
xlat
arpl
mov
lods
mov
cltd
sub
not
lea
or
lods
orb
aad
in
sbb
mov
test
fsubrs
faddl
cmc
setbe
pop
add
mov
js
out
jnp
lahf
fldenv
add
out
std
ds
cvtps2pi
xor
cmp
xchg
cltd
test
inc
call
mov
adc
jecxz
inc
xor
dec
pop
frstor
test
loop
test
and
mov
mov
xchg
lahf
mov
sub
xchg
push
std
xchg
xchg
lcall
in
xchg
sti
xchg
jge
mov
cmp
pop
cmp
mov
daa
jge
cmp
mov
sub
pushf
add
out
out
std
jae
sbb
mov
aam
test
movsb
or
lock
pop
push
pushf
pusha
ficoms
or
adc
das
arpl
inc
xor
xchg
addr16
out
inc
mov
xchg
out
add
inc
lahf
pushf
mov
outsl
imul
pop
pop
xlat
dec
shll
mov
pop
out
or
in
xchg
mov
dec
mov
adc
je
lcall
or
adc
out
pushf
cld
pop
or
xor
pop
ret
pavgw
lock
mov
jns
jb
xchg
dec
jmp
rclb
jp
out
mov
cli
aam
in
lea
shl
jmp
int3
add
cmpsb
jns
sbb
xchg
in
mov
sbb
fdivl
bound
push
xor
jle
push
outsl
mov
inc
push
nop
mov
rorb
cmpsl
cli
shr
into
shlb
mov
loopne
inc
fistpll
xor
mov
shlb
stos
outsl
int
push
andl
mov
and
fistl
push
xchg
jl
fabs
adc
incl
xchg
imul
or
fwait
inc
xchg
add
cwtl
outsl
fimull
loope
cltd
cli
sbb
mov
adc
jns
push
push
mov
jns
dec
pop
inc
adc
cmp
andl
sbbl
sub
and
stos
sbb
adc
mov
aad
cld
repnz
pop
repnz
and
add
mov
inc
sbb
dec
popf
rolb
lods
add
es
mov
test
xor
mov
xchg
pop
fcoms
lea
cs
xor
and
sub
or
jno
xchg
aad
icebp
fidivl
in
sub
loope
cmpb
or
sub
pusha
sbb
xchg
shll
in
xchg
addr16
dec
dec
fiaddl
in
push
jns
shl
in
and
mov
inc
or
shlb
andl
mov
adc
roll
cld
loopne
dec
xor
add
cmp
popf
aad
pop
pop
test
mov
push
and
jns
mov
and
pushf
push
inc
inc
push
mov
adc
cmp
push
sbb
fstl
jp
jmp
frndint
pop
or
cmp
mov
jecxz
sub
data16
stc
jae
jno
popf
stos
mov
mov
cltd
ds
ret
mov
push
jp
xchg
pushf
mov
daa
push
add
inc
into
sbbb
xor
and
mov
add
fidivrl
enter
cmp
stos
loope
in
push
incb
inc
jae
fwait
inc
add
push
pop
inc
sti
cmp
leave
jno
pop
nop
flds
mov
xor
enter
push
lds
push
stos
pop
cmp
pop
cld
imul
mov
addl
fistpll
mov
stos
std
push
pop
pop
jle
daa
ret
sti
mov
pop
cld
arpl
in
xchg
jno
inc
inc
push
push
gs
js
pop
add
loop
lods
pop
jbe
imul
mov
mov
mov
cmp
mov
mov
lret
xor
sbb
cmp
xorb
and
div
lahf
inc
mov
pop
adc
call
xchg
mov
cld
xor
jne
mov
aaa
ja
rolb
mov
xchg
in
add
dec
fisubrl
sbb
in
xlat
adcb
push
mov
mov
mov
add
mov
testl
loope
stc
inc
test
sets
lret
arpl
jbe
lahf
repnz
push
cmp
iret
negb
xchg
js
cltd
bound
hlt
js
inc
enter
pop
inc
push
or
jl
addl
bound
xchg
ja
in
rolb
or
test
dec
outsl
mov
dec
adc
xor
or
fiaddl
test
in
mov
push
mov
std
addb
xor
rclb
ja
mov
loope
xor
jg
sbb
fidivrl
popa
inc
lea
mov
inc
loop
pop
and
sbb
aam
mov
or
push
xor
mov
or
xchg
pop
idivb
push
vandnps
push
faddl
in
cs
scas
clc
xchg
or
sbb
xlat
rorb
lret
jp
sub
cmp
and
jne
cwtl
lret
and
jnp
and
xor
mov
dec
dec
aam
ficompl
xchg
repz
pop
push
dec
push
mov
and
ret
dec
inc
mov
add
xchg
or
and
add
testl
insb
dec
pop
fistpl
or
push
sbb
mov
ficoms
mov
adc
test
test
xchg
ret
scas
into
push
adc
push
clc
mov
js
gs
popa
inc
jmp
sarl
je
add
neg
xchg
cmpsb
mov
xorb
sbb
add
mul
clc
jae
scas
sub
shl
jb
add
inc
pop
cmp
xor
fisttps
sub
lahf
clc
cmp
xor
sub
jmp
pop
lcall
mov
push
mov
pop
das
fiaddl
pop
icebp
and
iret
xchg
lods
xor
popf
or
cld
imul
and
jne
mov
andb
fsub
pop
insl
sbb
mov
arpl
or
dec
sub
cwtl
xchg
popa
and
lret
addr16
in
jbe
aaa
out
mov
xchg
lods
push
gs
nop
xor
mov
jo
aas
ja
cmp
popa
out
mov
shll
mulb
mov
ret
mov
pop
pop
pop
mov
push
mov
push
xchg
mov
xor
pop
ret
mov
add
test
test
push
and
jo
push
sub
mov
sbb
fcmove
ret
pusha
leave
or
xchg
push
out
out
dec
inc
sbb
jo
mov
insl
sub
outsb
aas
outsb
loop
lcall
xorl
clc
lods
cld
repz
pushf
dec
sbb
sbb
push
lods
or
xchg
iret
dec
mov
pushf
and
outsl
clc
dec
int3
xchg
cmpsl
decb
mov
cmp
inc
es
sbb
mov
adc
dec
mov
or
les
clc
mov
std
fdivrs
mov
push
es
jnp
or
sbb
movsl
or
push
and
lahf
fdivp
shlb
aad
mov
inc
mov
dec
ljmp
adc
test
xchg
inc
in
dec
push
dec
aas
inc
mov
inc
sub
sbb
dec
repnz
inc
mov
jb
test
filds
loope
mov
test
lds
movsl
aam
sbb
dec
jp
jle
iret
jecxz
mov
ljmp
aad
cmp
jecxz
mov
fisubrs
addl
xor
rclb
jns
jp
fdivs
cmpsl
xor
loopne
insb
jae
hlt
jo
cmp
and
movsl
daa
add
mov
mov
std
and
add
out
dec
and
mov
mov
xchg
push
fmull
sahf
dec
pop
fisubs
arpl
std
aaa
xchg
jmp
pop
or
clc
fs
insl
scas
push
sbb
inc
jge
push
mov
xor
sub
add
cmp
sub
mov
fs
movsl
pop
fistpll
inc
daa
lods
push
push
bound
or
faddp
jbe
and
mov
xor
cmp
loopne
jno
sahf
aad
inc
aam
rcrl
add
sahf
add
gs
jp
pushf
sub
daa
xchg
notl
cli
xchg
sbb
lea
and
mov
or
add
popf
cmp
pushf
dec
jb
rcrl
mov
lods
mov
and
add
inc
xor
imul
outsl
xchg
addr16
test
add
ss
data16
test
mov
out
test
sub
in
and
call
icebp
dec
loopne
sbb
insl
shrl
and
fnsave
add
sbb
xor
push
xchg
sub
leave
iret
sar
inc
push
cmp
ret
and
jmp
repz
jg
add
lea
out
fs
sbbb
imul
data16
jb
movsb
push
jnp
or
into
mov
rcrl
push
dec
xchg
int3
imul
rol
pop
push
mov
test
inc
popf
loop
sub
scas
lods
pop
jmp
mov
insl
or
out
mov
inc
cmp
fwait
addr16
int3
leave
pop
je
sub
sbb
adc
gs
mov
xchg
loop
in
insl
adc
inc
movq
shrl
jae
std
fnstsw
xor
push
scas
loope
jb
add
stos
inc
push
jae
sti
inc
loopne
jne
shr
pushf
mov
lds
idivl
repz
mov
xor
sbb
dec
lret
jge
pop
std
lret
xchg
imul
ljmp
dec
jle
pop
divl
cmp
dec
bound
popa
sub
loop
add
ret
out
push
jg
mov
jns
test
and
shlb
add
sub
in
jg
lcall
mov
loop
mov
xor
in
in
ror
adcl
fs
jg
sbb
cltd
lret
out
inc
popf
popa
enter
ja
fstps
adc
mov
mov
les
ret
lods
dec
adc
sbb
fucomip
sbb
inc
stc
stc
add
mov
sahf
mov
pop
add
jp
repnz
jae
sbb
out
ret
or
inc
mov
adc
aas
dec
les
cmp
push
iret
std
cmp
sbbb
lcall
push
dec
dec
js
imul
aaa
iret
test
loopne
sti
fcompl
std
cmp
jl
push
cmp
scas
scas
cmp
cmp
ret
push
sbb
cmp
cmc
mov
push
fsubrl
mov
pop
mov
push
lods
adc
lahf
loope
mov
jle
xlat
cmp
pop
pop
aam
and
adc
mov
out
push
sub
js
dec
dec
test
mov
push
movsl
mov
stos
jb
fnstenv
stos
or
out
xchg
repnz
add
mov
and
in
int
cld
lds
lods
imul
lods
or
xor
fiadds
faddl
insb
xchg
xor
and
cmp
mov
adc
add
dec
testl
cmp
std
icebp
lods
cmp
lret
pushf
sbb
pop
pushf
rclb
mov
mov
out
xchg
outsl
icebp
faddl
sub
test
lret
xchg
push
xor
enterw
js
xor
pushf
mov
inc
push
dec
push
cli
out
xchg
and
jmp
push
lret
jae
inc
loop
outsl
aas
or
add
flds
ret
adc
jl
fdivl
outsb
dec
icebp
dec
mov
push
inc
sarb
add
adc
xchg
mov
pop
adc
sarb
jmp
test
aas
repnz
xor
mov
int
pop
in
and
fsubrl
jge
mov
cmpsl
and
ret
mov
dec
out
enter
into
outsl
or
clc
xchg
jbe
movsl
test
imul
lock
fcomi
repz
repnz
inc
and
and
insl
out
ja
out
in
popa
mov
fs
rcrb
lea
push
nop
cmp
repnz
inc
sub
dec
outsl
lods
scas
mov
insl
pop
sbb
addr16
pop
inc
jmp
enter
xor
ljmp
fcmove
xlat
lcall
xchg
cs
or
add
sbb
push
jle
lahf
sbb
sbb
jmp
dec
push
pop
or
cmp
pop
add
movsb
mov
cwtl
data16
jno
lcall
sub
sahf
rclb
mov
fidivrl
scas
inc
fwait
into
mov
stos
adc
ret
into
mov
and
cltd
pop
rcrl
mov
mul
les
mov
jecxz
add
push
popf
loope
push
aad
jg
in
add
pop
and
outsb
push
pop
xchg
push
aas
outsb
ret
stos
mov
aad
imul
popf
test
fisttpl
std
jo
mov
fsubs
inc
or
jb
cmc
movsb
sti
sbb
adc
cli
fxam
sub
flds
xchg
rcll
mov
mov
pop
rep
adc
inc
cmp
mov
fwait
aam
cmp
loopne
mov
mov
out
push
jecxz
mov
jl
fxch
xchg
cmp
lcall
mov
push
jo
std
lods
sbb
mov
ret
roll
sub
add
popa
outsl
rcpps
inc
data16
jmp
jb
sub
leave
pop
cmp
jnp
int
fwait
mov
sbb
push
xchg
xchg
pop
xlat
clc
adc
mov
jno
adc
test
xchg
lock
shll
inc
sub
add
in
test
lock
dec
addr16
mov
data16
mov
cmp
sysexit
and
sub
lcall
add
add
cmp
push
in
xchg
adc
xorl
add
shlb
or
pop
repz
aam
in
push
out
aad
lods
jb
dec
loopne
in
mov
cmp
mov
mov
popa
jae,pn
hlt
ficomps
dec
stos
pop
pop
jb
xor
lods
dec
and
xor
mov
cwtl
iret
repz
mov
nop
mov
push
mov
rolb
xchg
dec
jnp
stc
mov
dec
add
aam
xchg
adc
fidivl
stos
aad
dec
xchg
ffreep
dec
xchg
ljmp
cwtl
into
icebp
pusha
pop
push
aaa
fs
fbstp
ljmp
out
push
sbb
mov
and
xor
ret
aas
cmp
pop
int
stos
pushl
js
pushf
xchg
push
and
add
fcompp
loop
cmpsl
add
incb
xor
stc
or
adc
jp
scas
leave
dec
mov
jg
inc
adc
sbbl
dec
pop
repnz
mov
test
inc
movsb
lock
cmp
loope
out
mov
jg
xchg
daa
dec
outsl
std
repnz
push
dec
xchg
cmp
stos
js
and
sbb
arpl
sub
cmp
or
cld
jns
pop
mov
add
mov
daa
out
call
cmp
sbb
lods
dec
lret
loop
dec
scas
out
in
cmp
xor
out
mov
cmp
sti
add
xchg
adc
xor
dec
not
dec
jns
ljmp
push
or
loope
add
xor
sbbb
sub
cmc
mov
out
movsb
xor
jge
sub
inc
clc
xor
jle
jmp
aaa
push
dec
daa
sub
fidivrs
aaa
push
ljmp
jecxz
pop
test
or
adc
mov
push
pop
cmp
aaa
addr16
jl
sub
xchg
outsl
leave
xchg
and
or
shrl
mov
lret
mov
cmpsb
xor
into
pop
adc
out
mov
ret
pop
cs
lock
ret
adc
repnz
mov
or
jnp
loop
outsb
mov
sbbl
test
sbb
dec
fcomp
dec
mov
imul
jae
cmp
test
and
adc
in
or
adc
inc
scas
jp
pop
mov
mov
ljmp
ret
pop
in
mov
xchg
loop
lods
and
cmp
aaa
movsl
xor
or
enter
add
ficoms
pop
mov
ss
fsts
push
mov
ret
dec
jno
fbld
dec
jp
mov
stc
sahf
xlat
dec
std
cmp
xchg
jbe
ss
pop
jecxz
lret
mov
or
mov
imul
xchg
cld
ss
rorl
stos
addb
pop
sub
dec
xchg
imulb
and
push
add
push
neg
dec
jae
pop
xchg
push
mov
loope
hlt
jl
stc
pop
adc
add
cmp
mov
hlt
les
or
adc
sti
bound
das
pop
add
xor
add
aad
pushf
xchg
sub
nop
xchg
aaa
jnp
fstps
fsubrp
jp
mov
add
mov
out
xchg
arpl
cmp
iret
test
jo
jecxz
lret
gs
incb
cwtl
mov
pop
xor
jecxz
inc
outsl
imul
cmp
in
add
cltd
inc
xchg
mov
out
push
js
pushf
sahf
xchg
xchg
stos
xchg
sbb
mov
xchg
cli
dec
mov
cwtl
cmp
dec
sub
test
lret
insl
push
mov
lods
decb
inc
shlb
loopne
popf
arpl
inc
aam
sub
pop
cmpsl
adc
or
mov
inc
arpl
in
inc
test
fldcw
xor
cmp
adc
cmpsl
adc
into
mov
mov
fisubrs
mov
inc
push
jb
xor
push
adc
xchg
mov
in
xchg
xorl
scas
js
jle
lcall
push
rclb
jmp
movsb
mov
clc
movsl
leave
sbb
push
in
xchg
mov
jge
in
xor
stos
jo
ja
dec
xor
xchg
cwtl
or
repz
cmpsl
call
es
pop
cmp
rol
xor
cli
je
fwait
push
and
mov
and
aad
inc
xchg
stc
pop
rcl
jns
cmc
adc
xchg
outsb
stos
outsb
rcrl
xchg
xchg
pop
lret
mov
cltd
mov
aad
sub
in
sar
cs
push
stc
call
mov
imul
mov
pop
inc
adc
push
jecxz
push
jns
das
mov
sbb
xor
sbb
adc
in
push
mov
dec
shll
inc
push
enter
mov
sbb
xor
pop
outsl
call
test
jbe
sbb
lock
sbb
fisubrl
dec
sahf
sbb
push
xlat
cmpsb
dec
push
push
fmul
add
shrl
xor
pop
rorl
daa
outsb
mov
mov
xchg
js
dec
add
xorb
xor
lahf
shrb
push
and
dec
lods
int3
mov
sti
dec
aad
inc
mov
ss
sbb
jne
sbb
push
pop
pop
pop
sub
mov
jno
nop
mov
aaa
test
repnz
sbb
mov
lahf
test
push
pop
sbb
mov
lock
lea
rcrb
push
mov
mov
dec
jno
cli
push
push
mov
push
push
popa
mov
idivb
jmp
insb
mov
jbe
push
pop
xchg
pop
bound
pop
adc
mov
add
sub
aaa
jge
push
adc
pop
cld
mov
je
pop
add
inc
out
jb
or
xchg
mov
xchg
lea
and
loop
flds
aam
pop
addr16
cmp
imul
loope
push
popf
lcall
ficoml
cmp
add
xor
mov
test
mov
lods
push
lods
lret
sbbb
les
insl
jbe
mov
cmc
rorl
jbe
popf
jmp
push
adc
les
fs
xchg
subl
ljmp
pushf
ljmp
and
pop
add
gs
cld
fmulp
mov
movl
push
mov
cltd
leave
in
das
jl
dec
inc
lods
jbe
xchg
pop
add
cmpsb
mov
scas
push
ret
and
cmpsb
and
lret
testl
dec
jp
mov
fidivrl
aad
xchg
push
mov
sbb
inc
adc
pop
cmp
and
outsl
and
xor
pusha
xchg
insb
pop
xor
pop
pop
in
fcoml
lret
sbbb
aaa
popf
inc
inc
jge
mov
jae
or
loope
pop
xchg
and
mov
xchg
sbb
jae
cs
lret
mov
imul
mov
push
inc
cmp
xchg
or
pop
push
pop
xor
hlt
sarb
xorl
cwtl
jo
shlb
int
adc
cmp
add
mov
push
ret
nop
sub
frstor
pushf
fwait
js
ret
test
test
add
mov
lret
add
jno
cmp
pushf
xor
inc
lret
jb
adc
popf
jnp
cmp
jno
jo
call
les
ficoms
xchg
nop
adc
add
pop
cld
jnp
push
icebp
sub
cmpsl
les
mov
mov
push
jle
and
xchg
xlat
inc
xchg
sub
push
lret
cmp
es
mov
lret
shll
or
aas
mov
gs
jmp
sarl
divl
decl
mov
popf
inc
mov
lods
xor
jmp
and
stc
jmp
lret
cmc
jmp
xlat
xor
insb
cmpsb
push
pusha
ds
aas
sbb
and
add
int3
inc
or
add
cld
sahf
pop
or
add
dec
popf
popf
sbb
fmuls
loop
mov
inc
and
es
jae
lock
stos
xchg
outsl
in
repz
filds
inc
sti
fwait
inc
lret
xchg
ss
loope
mov
push
je
aaa
test
add
in
sub
xchg
xchg
push
stos
das
mov
inc
dec
inc
call
xor
or
mov
std
or
sbb
xchg
out
lods
jo
in
daa
adc
pop
fimuls
mov
dec
push
fwait
jbe
data16
add
lods
xor
mov
jno
fimuls
lea
xlat
cmp
dec
push
or
popa
push
mov
test
sbb
mov
stos
add
xchg
std
lahf
test
dec
inc
mov
iret
xlat
mov
mov
fldenv
sbb
mov
sub
test
xor
rcll
ljmp
dec
mov
fsubrs
scas
jg
lahf
inc
adc
sarb
outsl
xchg
or
movsl
sbb
setns
lods
lods
mov
movb
mov
cmp
cwtl
les
ljmp
std
js
leave
ljmp
or
insl
jmp
push
pop
mov
dec
ret
lds
mov
cmpsl
imull
aas
cwtl
push
and
scas
scas
mov
jnp
xchg
std
pop
lods
cmp
push
pushf
aad
mov
ljmp
les
jb
cmc
pop
mov
pushf
inc
inc
clc
outsb
loop
aas
out
je
in
cld
fldenv
and
popa
dec
mov
add
fstps
fwait
fwait
add
mov
push
ds
outsb
ror
add
sahf
faddp
add
loope
jmp
sbb
das
pop
js
push
sbb
pop
jecxz
xchg
ror
fstps
sahf
test
notl
int
cmp
outsl
out
jne
push
push
mov
lds
pusha
mov
dec
jmp
loopne
add
std
jg
cltd
jge
addr16
cwtl
pop
insb
xor
nop
popf
js
cmp
cmpsl
xor
push
pusha
pop
cltd
jnp
xchg
mov
insl
or
jo
sbb
xor
stc
out
imul
push
test
bound
dec
and
push
andb
pop
mov
out
mov
lahf
mov
xor
push
cmc
icebp
jb
and
mov
mov
xlat
cmpsb
xchg
test
ret
or
rcrl
lcall
fs
js
pop
dec
xor
cltd
cmp
pop
xor
adc
aad
in
xor
mov
das
rol
add
cltd
fwait
or
sbb
montmul
cmpsb
lds
lds
pop
dec
adc
sbb
negl
and
scas
push
and
push
pop
inc
insl
inc
xor
inc
mov
push
ficomps
pop
es
rorb
xchg
negl
sbb
mov
inc
mov
lcall
mov
dec
or
jecxz
jb
mov
jl
mov
test
xchg
mov
enter
gs
push
jnp
cli
pop
or
adc
pop
mov
sub
cs
lcall
mov
push
add
jo
and
sub
jg
sub
insb
test
lcall
cmp
stc
xor
jae
or
mov
jecxz
inc
dec
push
pop
andb
rcr
cmp
in
shlb
mov
sahf
out
push
mov
pop
mov
push
daa
pop
mov
test
inc
mov
pop
ret
ficoms
xchg
mov
push
insl
push
orb
sbb
jnp
pop
push
fstpt
mov
cmp
cmp
adc
scas
out
cli
xchg
stc
or
imul
cmpsl
mov
adc
fidivrl
addr16
pop
mov
out
rorb
loop
pop
loop
inc
cmc
xchg
cwtl
or
mov
movsl
addr16
jbe
adc
lahf
int
adc
ret
jb
mov
fnsaves
and
cpuid
ja
inc
pusha
mov
inc
sub
test
or
shll
js
push
cmp
sbb
dec
push
inc
cmpl
mov
nop
xchg
movsb
push
ret
pop
jo
bound
and
lahf
xor
iret
push
jne
loop
cmp
lock
mulb
dec
push
dec
das
push
xchg
mov
idiv
sbb
pop
mov
xchg
fwait
jmp
cmp
add
stos
mov
add
ljmp
cli
sti
cmp
je
and
cwtl
dec
mov
and
aas
push
inc
daa
enter
mov
push
cmpl
and
push
xchg
call
mov
movsb
fiadds
sub
into
adc
sar
dec
xor
ret
std
mov
into
inc
push
aaa
fldl
or
ja
mov
icebp
or
jbe
jns
push
mov
xor
incb
pop
xchg
mov
mov
xlat
xchg
lds
jl
rcl
bound
aam
sub
test
int
lock
fimuls
push
push
push
shlb
sbb
mov
xchg
jns
xchg
shll
or
sti
loop
cmp
sbb
jb
push
cmpsb
pop
xchg
loop
arpl
pop
push
xor
rcl
inc
cmpsb
mov
clc
jl
and
adc
in
mov
icebp
cld
test
in
cld
jl
jp
out
xchg
jo
ja
mov
stos
push
xor
fcoml
rcll
adc
loope
sti
cmp
popf
or
push
test
sub
les
lock
inc
mov
push
sbb
push
enter
adc
jb
and
sti
mov
movsb
cmp
mov
ret
mov
ja
dec
mov
jmp
ret
mov
in
pop
pop
sbb
mov
adcl
in
std
jmp
xchg
stc
xchg
test
loopne
dec
dec
fld
and
xchg
aaa
and
push
inc
iret
push
je
add
int3
lea
push
xor
xchg
adc
adc
or
or
fs
adc
shlb
xchg
mov
xor
mov
sub
icebp
mov
or
sbb
push
sbb
jnp
cwtl
push
and
in
pushf
jge
add
insb
jg
or
hlt
adc
xor
mov
call
inc
jge
xchg
out
xchg
cmp
add
push
cwtl
in
rcll
fsubrp
push
test
outsb
mov
pop
jnp
jle
ficoms
pop
sub
in
popf
adc
lcall
mov
add
leave
jp
mov
roll
stc
sbb
test
pop
lcall
fldenv
push
or
test
jmp
inc
pop
add
sbb
jo
js
inc
mov
mov
mov
sub
clc
iret
ja
pop
push
inc
dec
jg
cmpb
fcom
cli
lahf
jns
cmpsb
mov
js
cli
lods
cmp
in
shlb
stc
inc
inc
and
je
test
inc
push
adc
enter
or
insb
pop
punpckhwd
ret
mov
cmp
xchg
mov
aaa
mov
xchg
fcmovne
and
push
add
or
mov
rcl
pop
mov
or
xor
mov
pop
pop
pop
push
sub
in
je
inc
and
ljmp
xor
xchg
xlat
pop
push
xor
push
mov
xchg
mov
or
pop
aam
xchg
mov
sbb
jp
popf
das
jo
sahf
lahf
clc
push
loop
mov
jae
decb
aaa
and
popf
lahf
idivl
dec
out
add
inc
adc
mov
loop
push
adcb
mov
pop
sub
scas
leave
sub
pop
scas
xchg
mov
rcl
sbb
sub
sahf
jo
and
dec
out
scas
js
clc
and
mov
inc
add
enter
cmp
adc
push
out
fadd
xor
mov
jno
imul
pop
sbb
lock
jo
pop
xchg
and
pop
iret
rcrl
jge
push
sbb
pop
pop
mov
adcb
pushf
sbb
jge
mov
scas
call
adc
sub
imull
scas
cmp
orb
jne
mov
andb
cmp
in
in
test
sbb
aaa
cmp
pusha
push
push
mov
adc
mov
add
rcrb
adc
dec
cmpsl
out
bound
sub
cwtl
mov
lods
in
mov
jno
test
test
mov
nop
fsubrs
mov
xchg
data16
fs
int3
adcb
in
dec
js
cmp
xor
fs
push
jge
nop
bnd
in
jbe
pop
repnz
mov
ffreep
cmp
das
ljmp
mov
mov
iret
rcll
pop
mov
mov
lock
rcrl
jae
sti
or
push
scas
pop
mov
in
push
cld
pop
dec
lds
push
out
adcb
add
xchg
cli
sbb
mov
push
xlat
lahf
sub
mov
sbb
mov
pushf
testb
jge
mov
push
ret
loope
xchg
jno
lds
mov
fbstp
xchg
sti
mov
fiadds
mov
inc
lea
adc
test
mov
loop
ljmp
jne
pop
loope
hlt
pop
stos
inc
sbb
pop
pushf
imul
sbb
inc
mov
repnz
xor
cmpsb
sub
hlt
push
dec
lods
add
inc
jb
fdivs
add
pop
xchg
push
gs
addr16
imul
push
ja
lret
imull
pop
and
jb
loop
pop
xor
push
int3
sub
jo
leave
roll
pushf
cmp
and
enter
hlt
and
clc
lcall
scas
outsl
fimull
inc
mov
in
scas
jp
pop
cld
es
dec
imul
xchg
mov
sbb
and
mov
dec
and
dec
repz
test
or
jl
sub
adc
or
push
into
sub
mov
mov
jo
jp
xchg
dec
adc
push
mov
or
push
fsubrs
pop
movsl
gs
loop
jae
sbb
push
mov
xorl
mov
mov
int3
negb
pop
mov
jae
outsl
cmpsb
js
and
js
push
pop
inc
adc
std
xor
pcmpeqd
jp
mov
ffreep
and
jmp
les
sbb
and
push
sti
imul
mov
and
pop
cmpsl
jnp
jno
daa
lods
sub
in
push
ret
inc
push
xchg
adc
fwait
mov
mov
adcl
pop
inc
cmp
aas
xor
jg
add
lahf
or
mov
dec
or
sbb
mov
or
inc
pop
aaa
arpl
jo
mov
rclb
push
inc
xor
pushf
jne
out
jb
push
repz
pop
insb
dec
mov
push
xor
pop
inc
popa
ja
or
and
push
shlb
daa
sub
push
xor
and
sub
test
iret
cmp
popa
or
imul
insb
in
cmpb
out
mov
repz
fdivr
pusha
aad
lret
mov
repz
push
lret
jns
sbb
cmp
jmp
ljmp
push
lcall
pop
movsb
jns
pop
pop
dec
dec
jl
ret
add
clc
icebp
pop
sub
jp
out
mov
xchg
pusha
mov
bound
repz
mov
mov
mov
mov
scas
imul
negb
mov
imul
negb
jge
jge
inc
sbb
jp
jae
pop
out
fldz
arpl
push
xor
dec
out
cmp
in
inc
filds
fucomp
push
mov
push
bound
int
push
test
mov
rcrl
push
clc
sub
xor
in
pop
mov
mov
xchg
or
xchg
bound
arpl
mov
ds
mov
xor
sbb
cltd
sbb
adc
jg
aam
imul
adc
aam
movsl
mov
fdivs
sbb
push
jecxz
add
inc
es
ret
pop
in
mov
ja
add
imul
jno
mov
inc
mov
orb
dec
test
xchg
outsl
cmpsb
nop
jno
movsb
dec
xchg
cmc
add
adc
loope
push
aad
inc
out
xor
stos
rorb
sbb
pop
jp
mov
aas
push
aaa
ret
outsw
adc
add
lock
lock
inc
push
jb
stc
fistpl
mov
xchg
pushf
adc
testl
cmpsb
xor
sbb
in
jb
scas
fidivl
das
iret
mov
fstl
pusha
jg
icebp
xchg
in
sub
lahf
mov
jo
sbb
shrl
xor
push
aam
xchg
jo
stos
pop
aaa
out
stos
mov
ficompl
dec
sub
xchg
aas
inc
cmc
jmp
xchg
popa
pop
ret
rol
jbe
fwait
mov
push
push
pop
insl
or
add
and
pop
shr
dec
jnp
out
sbb
mov
jae
out
movsl
push
jns
sub
mov
jecxz
bswap
mov
test
xor
or
jmp
data16
mov
stc
lret
lea
xchg
xlat
pop
sub
xchg
inc
push
stc
mov
inc
sti
mov
pop
cwtl
mov
adc
mov
neg
sbb
por
repz
ret
lret
cwtl
fcmove
adc
add
adc
in
insl
xchg
stc
xchg
js
aad
add
cmpsl
inc
in
enter
popf
mov
ds
or
arpl
test
shll
das
inc
adc
ficoml
lods
jecxz
pop
stos
cmpsl
ss
rclb
sbb
lret
aas
mov
in
jl
push
imul
shrb
jg
add
std
movsl
daa
xchg
mov
nop
sub
mov
sbb
push
sub
sbb
scas
mov
sub
aam
push
icebp
icebp
lahf
arpl
fs
mov
jbe
mov
sbb
fistl
hlt
in
cmp
in
out
imul
jl
cmp
and
out
popa
scas
aam
cmp
xchg
adcb
jle
and
mov
sub
sub
mov
sbb
dec
lcall
daa
mov
jecxz
loope
push
cltd
nop
or
inc
xchg
iret
add
dec
add
push
loop
fwait
jb
add
jle
imulb
push
movsb
push
mov
scas
sbb
mov
arpl
cmp
jp
sbb
in
sbb
ror
jo
movsl
or
call
mov
xchg
adc
pop
and
lret
xor
test
xchg
inc
dec
frstor
out
adc
into
aaa
xorl
push
pop
add
dec
inc
sbb
je
leave
cmp
dec
mov
sti
xchg
ljmp
sub
out
lods
mov
mov
xlat
add
insb
add
nop
lret
pop
in
and
lods
addr16
mov
pushf
mov
jne
mov
lods
aaa
lods
data16
pop
push
cmp
or
icebp
repnz
xchg
xor
lods
mov
mov
lret
mov
or
outsb
mov
shll
std
aad
adc
rcrl
mov
or
mulb
stos
and
divb
dec
icebp
pop
push
jecxz
sub
mov
mov
jnp
mov
push
inc
in
icebp
call
mov
push
repnz
aad
pop
test
xchg
push
pushf
sbb
repz
rorb
and
or
stc
jo
and
or
in
mov
mov
mov
cmpsb
adc
mov
roll
pop
loopne
jns
push
mov
and
xchg
mov
xor
pushf
push
mov
fsubs
jl
in
pop
jne
sbbb
out
mov
out
mov
sbb
mov
mov
or
xchg
je
in
movsl
stos
xchg
xor
sahf
mov
cltd
lods
mov
push
ret
cmp
ret
sbb
jo
mov
repnz
and
mov
dec
leave
add
dec
sahf
cmp
pop
mov
mov
dec
into
movsb
xchg
and
adc
lods
iret
add
out
aas
int3
rcrb
sbb
aam
lahf
add
adc
enter
out
push
jg
in
ret
or
lea
jno
lret
cmpsb
add
xor
xor
xor
or
int
iret
jne
push
clc
hlt
mov
or
fwait
jae
popf
or
jmp
jge
fs
or
movsl
iret
mov
jg
loope
je
out
shll
stos
aam
shl
jae
aam
cmp
mov
mov
popa
in
push
pop
adc
push
cmp
lahf
adc
imul
mov
cs
mov
cmp
int3
push
mov
scas
sarb
mov
dec
imul
push
stc
hlt
es
in
icebp
outsl
and
and
xlat
cltd
xchg
das
imul
ljmp
shrl
daa
arpl
xchg
xchg
scas
lret
jb
call
lds
mov
inc
lods
inc
jp
out
sbb
lods
push
aam
dec
adc
out
xor
fcomps
inc
mov
pop
js
in
add
push
dec
fadds
popa
aad
inc
cmp
out
aaa
jmp
cltd
jecxz
xor
movsl
stos
cmp
mov
test
sbb
or
xchg
fwait
pandn
jg
lods
mov
in
mov
inc
cmp
and
test
arpl
mov
sbb
fistps
xor
fdivrp
add
xchg
jp
test
je
dec
loop
popf
lea
add
inc
sbb
jg
insl
xlat
loop
adc
loopne
inc
jecxz
scas
inc
scas
xor
test
cmp
in
push
push
scas
stc
popf
mov
out
push
jo
sub
xchg
or
cmpsb
xor
xor
push
pop
les
cmp
cmp
out
dec
mov
shll
xor
cmpsw
jbe
and
fdivrl
adc
jne
pushf
push
inc
repz
pop
decl
cld
idivb
dec
stos
jg
push
or
push
dec
mov
hlt
int
popa
push
enter
cmc
int
mov
les
mov
scas
test
fcom
or
es
ljmp
push
xor
jnp
test
inc
mov
mov
in
test
data16
fdivr
and
mov
lods
adc
mov
push
enter
jp
add
enter
adc
cmpl
out
into
mov
idiv
mov
xorb
imul
xchg
pop
cmpsl
scas
cmp
ret
call
pop
pushf
jmp
jne
inc
out
xor
mov
imul
outsb
popa
faddp
out
js
mov
stos
push
imul
shll
into
cmp
test
jo
xor
ret
loop
test
and
mov
ja
fs
or
xor
bound
pop
insb
cmp
lock
dec
pop
andl
mov
add
lcallw
jmp
scas
or
hlt
aam
pop
mov
cld
adc
ljmp
xor
aas
fsubr
and
cltd
jg
inc
or
imul
xor
pop
dec
loopne
dec
mov
push
fstpl
push
xchg
lods
jns
and
popa
lret
or
ds
shl
pop
mov
sub
push
push
or
pushf
nop
popa
ja
stc
scas
cmp
cmc
mov
dec
dec
jge
or
adc
popa
and
or
push
imulb
mov
orl
ret
cwtl
sbb
or
cld
add
push
pop
pop
in
pop
addr16
adc
or
mov
mov
dec
dec
loopne
sbb
jecxz
mov
adc
and
push
movsl
and
sub
jnp
popf
push
in
aad
dec
fisttps
sub
cmpb
dec
shr
pop
cmp
fstps
mov
or
push
movsl
leave
adc
aam
addb
fsubrs
out
sub
lcall
dec
inc
js
test
unpcklps
shrl
jle
imul
clc
mov
mov
cmp
cmp
mov
add
xchg
add
fwait
pop
out
sub
or
dec
ja
and
inc
lcall
pop
push
xchg
and
xor
pop
bt
arpl
cmp
sbb
int3
hlt
loopne
push
in
mov
les
and
pop
mov
stos
push
mov
bnd
add
lret
mov
xchg
sar
rolb
je
mov
sbb
data16
jge
inc
fstpt
xchg
push
scas
inc
loop
leave
cli
leave
xor
ljmp
xor
div
or
jnp
fsubl
pop
xchg
mov
pushl
nop
mov
jmp
ret
xor
call
push
jle
mov
hlt
cmpsl
mov
lods
lea
add
jbe
sub
mov
adc
sbb
rcrb
or
dec
or
add
cmp
jp
outsb
ret
loope
incl
mov
push
cs
cld
and
fsubl
js
and
mov
repz
pop
pop
outsl
dec
push
push
aaa
pop
push
jp
in
les
sbb
dec
xchg
das
adc
push
xchg
fildl
add
in
scas
sarl
cmp
sahf
inc
dec
inc
and
xchg
pop
inc
int3
and
movsl
add
loopne
pushf
add
pop
pusha
insl
xor
in
in
fisubs
shr
mov
or
sub
je
arpl
add
inc
push
imul
jb
popf
fucomip
push
dec
call
ret
mov
ja
imul
push
dec
in
mov
movsl
adc
add
decl
adcb
xchg
js
rcll
roll
mov
mov
and
push
dec
xchg
lcall
data16
add
rep
daa
xor
shrb
ljmp
fildl
push
imul
jne
movl
mov
xchg
dec
pop
xchg
inc
cmp
call
mov
push
pusha
popa
addr16
pop
es
fldt
xlat
iret
sub
pop
mov
sbb
mov
sub
es
insl
push
add
int
jge
enter
jecxz
push
push
pop
sub
xlat
daa
sahf
lods
and
push
bound
fdivrl
or
jmp
fadd
add
ds
xor
and
push
pop
aad
ss
xor
push
or
ja
cmp
fstps
push
dec
or
add
sub
out
dec
xor
fwait
daa
in
fs
aaa
ds
pop
shl
popa
pop
insl
in
fmul
cmp
icebp
out
lds
cmpsb
fcoms
decb
mov
dec
scas
add
and
dec
fdivr
notb
add
sbb
add
pop
mov
mov
int3
push
inc
in
cwtl
push
push
xchg
xchg
push
dec
js
dec
push
cmpb
mov
sub
orb
leave
mov
cmp
mov
aam
rclb
addb
mov
push
fsubrl
xor
data16
xchg
vpcomb
add
lret
test
jne
dec
cli
xchg
mov
popa
out
jmp
add
xlat
dec
dec
popf
out
cltd
mov
pop
inc
push
out
ret
inc
mov
sahf
add
in
shl
dec
pop
jns
int
jno
add
stos
cwtl
xchg
pop
jecxz
fwait
pop
dec
and
dec
aas
pmaddwd
popf
dec
xchg
fistpl
repz
mov
mov
or
and
xchg
clc
lock
mov
push
jecxz
iret
test
cmp
xorb
mov
popa
add
cmpsb
sbb
ljmp
popl
add
fucom
sub
jbe
out
sbb
popf
aaa
in
add
mov
push
inc
dec
mov
stc
xor
cld
mov
add
insl
aas
fbld
mov
adc
addl
ret
cmp
jmp
in
popf
and
decb
mov
and
pushf
cs
add
dec
push
sub
fstps
mov
mov
fists
imul
dec
mov
cltd
arpl
es
sti
fmuls
lcall
pop
sbb
mov
mov
adc
fidivl
pop
push
enter
jl
pop
add
cmp
shl
loopne
add
das
imul
nop
mov
lcall
inc
mov
mov
mov
rcll
mov
popa
nop
xchg
ds
test
arpl
nop
push
inc
jmp
sbb
outsl
jge
arpl
push
stc
aad
and
adc
stos
push
out
scas
mov
jp
sbb
cld
or
rcrl
or
xchg
in
test
outsl
cmpsl
xchg
push
cmp
mov
pop
push
jp
sti
lods
jae
or
push
fwait
mov
pop
shrb
movsb
push
lods
into
fists
ficoms
mov
or
push
and
sbb
mov
imul
or
imul
sbbl
cmp
cs
push
data16
xor
mov
pop
enter
mov
xchg
xlat
aad
mov
mov
inc
loope
or
popf
loopew
xchg
inc
inc
gs
mov
sbb
mov
inc
lcall
pop
and
xchg
scas
push
icebp
mov
cmp
test
push
sbbb
dec
add
adc
and
test
dec
mov
pop
rolb
inc
fnstsw
jb
div
pushf
sarb
inc
faddp
lcall
xor
notb
in
mov
subl
scas
repz
jmp
stc
mov
push
cli
xchg
mov
mov
fs
xchg
and
push
out
sbb
movsl
mov
xor
gs
or
and
mov
lods
add
xchg
repnz
or
int3
lods
mov
js
test
lret
test
adc
xchg
pushf
xor
or
ret
aad
and
or
jb
sbb
dec
sbb
out
push
out
inc
xlat
fsubs
outsl
pop
jne
xchg
stos
inc
lock
mov
gs
cmp
rorb
pop
mov
sbb
imul
rcll
aas
adc
add
mov
adc
or
jle
pop
mov
or
pop
insb
out
lods
scas
out
out
sbb
or
aam
ss
cmp
sahf
push
sbb
test
add
mov
lcall
call
aaa
mov
pushl
push
sti
or
adc
dec
jnp
adc
aas
dec
lcall
inc
xlat
je
ss
cmpsl
jns
inc
pop
pop
in
mov
mov
mov
jns
push
add
icebp
out
cmp
int
sbb
pop
sarl
mov
lea
shll
mov
test
dec
add
clc
dec
inc
int
add
in
repz
in
mov
pop
dec
sbb
push
lods
dec
add
pop
mov
mov
aaa
sbb
pop
outsl
ss
scas
stos
outsl
jb
aaa
mov
orb
dec
dec
aad
es
arpl
xchg
mov
cmp
sbb
and
lcall
push
fld
fisubrs
dec
cmpsb
cmp
adc
add
test
cmp
mov
inc
jg
fwait
bnd
pop
mov
lahf
or
les
test
ret
leave
mov
mov
in
add
pop
loop
adc
inc
cmp
jle
leave
pop
jg
mov
xchg
push
xchg
stos
push
pop
cld
imul
stos
sub
stos
fsubl
subl
int
jl
inc
testl
push
xchg
fisttpl
pop
sub
dec
nop
mov
loope
shll
sbb
cli
mov
inc
mov
jg
mov
orl
lret
rclb
sbb
repz
inc
iret
cmp
mov
pop
movsl
cli
mov
jb
movsb
cmp
or
adc
mov
cmp
lods
inc
mov
into
pop
dec
pop
cmc
mov
sub
jg
add
mov
mov
adc
jns
stos
popf
pcmpgtw
mov
gs
push
out
aas
fcomps
icebp
push
test
mov
fstpl
push
movsl
or
jmp
pop
xchg
inc
call
push
andl
sub
cmp
adc
fwait
sub
jne
imul
ret
in
xlat
xor
fidivl
mov
jl
mov
imul
aas
mov
or
xchg
sbb
dec
dec
sbb
insb
outsl
inc
push
pop
sbb
out
pusha
jbe
nop
jae
pop
cmovb
sub
je
in
inc
popa
repnz
jae
adc
lods
dec
lret
cmp
cmp
mov
or
cmp
inc
insb
and
xchg
xor
jl
mov
in
dec
adc
or
and
insl
mov
dec
je
xor
cmp
cmp
mov
pop
pop
hlt
aad
repz
call
outsl
ror
push
sti
xchg
cmp
cmc
xchg
xor
sbb
adc
test
lahf
xorl
shrl
movsb
aas
gs
repz
inc
and
repz
xor
stos
icebp
daa
lret
mov
aas
mov
nop
adc
and
mov
push
and
icebp
xchg
shrb
push
std
fidivl
mov
jae
into
ror
mov
pop
dec
loop
push
push
pusha
and
sbb
shll
ret
xchg
scas
dec
loope
loope
sbb
mov
mov
add
pop
pop
mov
lahf
and
inc
jo
xor
aad
mov
jb
pop
mov
testb
cmpsb
mov
sbb
cmp
fldcw
push
fwait
xchg
mov
data16
push
int
in
enter
test
add
sub
icebp
pop
test
out
jns
enter
pop
data16
in
lcall
roll
mov
mov
or
fsts
out
aaa
jmp
jno
cs
lret
test
das
jno
lret
rcrl
cmp
push
cmp
imul
dec
js
or
jmp
pop
das
mov
arpl
test
pop
add
nop
inc
jo
xchg
jge
cmp
push
dec
lcall
xchg
sbb
mov
in
cmp
addr16
popa
jp
push
cltd
xor
movsb
dec
adc
int
fisubs
xchg
pop
repnz
mov
cs
int
mov
jbe
jmp
imul
mov
and
mov
push
je
imul
cmp
add
les
mov
mov
sbb
pop
hlt
cwtl
mov
lret
cmpb
add
push
push
insb
or
in
fists
insl
dec
das
push
ss
dec
pop
popa
jbe
adc
ds
movsl
or
pop
dec
test
pop
test
cmpb
adc
sbb
cmp
xor
movsl
or
seta
rcl
nop
cltd
or
mov
lea
xchg
jle
into
leave
jge
lock
lds
mov
mov
xor
jle
int
adc
sub
iret
add
popa
cmp
cmp
jp
xchg
sti
out
sarb
out
fiaddl
leave
into
into
push
adc
jb
sbb
dec
aad
movsb
lock
ss
lahf
leave
inc
andb
test
arpl
imul
lods
test
jnp
jnp
cmp
repz
rorl
leave
push
rorl
sahf
mov
xor
stc
or
jecxz
insb
cwtl
or
out
add
pushf
fcoml
inc
andl
pop
push
ret
dec
jg
popf
int
test
int3
cmpb
iret
sbbb
mov
int
hlt
fs
push
icebp
sarb
jge
sarl
mov
and
jae
and
jnp
push
inc
push
nop
push
mov
loopne
imul
sub
xor
jmpw
xchg
mov
push
hlt
or
sahf
xchg
add
test
les
lcall
sub
cmp
sub
inc
out
enter
sub
mov
sub
hlt
leave
or
adc
loopne
inc
xor
aam
xor
xchg
cmp
divl
push
in
je
jp
adc
in
mov
loopne
popf
in
sbb
fisubrl
push
and
cmpsl
cmp
push
pop
inc
pop
ret
push
pop
dec
sbb
xchg
adc
lcall
fnstcw
jg
and
adc
push
dec
insb
mov
lret
mov
mov
jl
sub
fsubrs
clc
sti
xor
mov
mov
fcomp
insl
or
xor
or
jnp
bound
loopne
out
ds
jo
or
repz
rolb
xchg
mov
movsl
lret
stc
mov
ljmp
jo
call
sub
movsb
sub
push
pop
mov
xchg
push
mov
and
cli
cmc
inc
sub
mull
jecxz
xchg
lret
filds
jnp
and
addr16
and
movsb
inc
and
test
add
aaa
call
loope
inc
sub
icebp
mov
mov
enter
leave
ficoms
addb
add
sub
adc
adc
adc
stos
mov
rcrl
enter
aad
mov
push
add
jns
cmpsl
or
inc
inc
stos
push
mov
lea
mov
sub
ficomps
adc
int
test
push
lcall
inc
mov
jg
pop
notl
push
xor
lahf
fisttpl
sub
jmp
xchg
lahf
stos
inc
andb
divl
push
lock
adc
sbb
mov
xchg
jg
ljmp
mov
ret
out
push
stos
pop
pusha
sub
jecxz
xchg
jmp
push
or
and
pop
les
pop
mov
pop
pushl
roll
lret
mov
out
xchg
daa
sub
adc
out
in
push
mov
dec
insl
imul
mov
pop
push
testl
icebp
shll
cs
test
and
cmpsb
and
aad
nop
jno
push
xchg
and
push
shll
insl
push
xchg
inc
leave
sbb
or
or
cld
and
mov
js
xor
or
mov
xchg
repnz
or
aaa
inc
imulb
sbb
lahf
lock
fsubs
dec
ljmp
sub
jge
dec
notl
or
movsb
mov
or
jl
outsb
add
add
dec
xchg
add
xchg
data16
nop
and
dec
xchg
cmp
and
jge
jle
aaa
inc
or
outsl
dec
cmp
jo
jge
pop
xor
or
fwait
jmp
sbb
cmc
dec
cld
addl
ret
jno
dec
cmpsl
not
sbb
and
pop
inc
es
test
push
cmp
mov
dec
xlat
xchg
jo
lods
and
sub
xor
loope
mov
cmp
sub
in
xlat
ret
inc
lahf
jne
jo
rorb
cwtl
cmc
stc
push
lock
ja
xchg
pop
popf
cmp
or
xchg
xchg
pusha
pop
cmp
in
pop
divb
hlt
adc
int
bound
cmp
sbb
inc
aam
push
lret
es
cltd
aam
adc
dec
add
add
arpl
scas
xchg
bound
sub
pusha
fs
sahf
pop
fimull
push
in
out
cwtl
xchg
dec
pop
lahf
je
and
ret
test
mov
or
outsb
cmpsl
rclb
adc
stos
pop
mov
add
cmp
test
push
pop
insl
das
pop
or
iret
into
les
shr
sub
cmpl
sbb
adc
xchg
mov
rorb
test
int
sbb
test
inc
in
push
rolb
adc
out
pusha
iret
push
dec
add
xchg
cli
cmp
insl
imul
add
mov
fnsave
jb
push
sub
adc
fwait
mov
and
insl
popf
xchg
pop
add
hlt
or
js
std
bound
test
pop
faddl
mov
dec
mov
mov
cmp
cmc
adc
cltd
in
fsubrs
loopne
push
popa
and
xor
xchg
cld
lea
sbb
data16
push
mov
inc
push
notl
adc
xchg
push
cld
sahf
adc
push
jmp
jmp
ret
stos
sub
outsb
xor
jno
hlt
int
dec
sbb
push
jne
test
xchg
xchg
inc
dec
repnz
xchg
push
stos
cmp
push
push
lea
jbe
nop
insb
xchg
fisttpll
popf
mov
mov
out
call
aas
mov
dec
mov
aaa
and
out
xor
ja
and
xchg
jp
mov
das
scas
fidivrs
xchg
out
mov
dec
pop
popa
add
sbb
pop
adc
xor
imul
fmul
push
subl
adc
aaa
ja
movsl
or
icebp
mov
cmp
sahf
add
cmpl
les
mov
cmp
pop
xorl
ret
testb
or
fwait
xchg
xor
mov
xchg
add
jg
sub
cmp
jae
addb
movsl
mov
mov
cld
xchg
aas
cmc
jnp
lret
bound
adc
sbb
or
les
pop
jle
mov
add
mov
mov
xor
sbb
or
int
cs
icebp
or
int
xor
test
out
sub
lds
mov
idivl
mov
dec
cmc
pusha
cmp
inc
pushf
push
cmp
xchg
add
sahf
daa
jp
in
fptan
push
adc
pop
and
xor
pop
mov
movsb
stc
sub
jb
test
add
jmp
mov
inc
loope
hlt
sti
jb
add
cmc
stc
xor
adc
or
ja
pop
test
icebp
ljmp
aam
inc
and
rcll
sbb
mov
dec
sbb
sub
cmp
mov
dec
insb
mov
pop
push
ds
mov
pop
mov
push
xlat
aad
cmp
repnz
jge
in
cmp
gs
test
pop
cmpl
or
not
adc
fnstcw
adc
sbb
les
add
pop
lods
faddl
push
into
fs
add
jae
dec
pop
in
in
lock
lret
aam
mov
aas
mov
pop
jns
inc
idivl
loopne
jne
test
jbe
mov
push
iret
mov
mov
jnp
movsl
mov
xchg
gs
sub
in
cld
sbb
sarb
popa
js
pop
and
jno
sti
sbb
cmp
jmp
cs
outsb
cmp
in
pop
pop
loope
nop
sbbl
popa
dec
mov
inc
dec
jns
cmp
popf
adc
sbb
pop
inc
std
sahf
stc
arpl
in
mov
xchg
sbb
cmpl
xchg
inc
cmp
mov
push
xchg
ficomps
mov
sbb
mov
mov
out
mov
and
dec
scas
mov
insb
xchg
dec
addr16
in
pop
test
add
imul
data16
aas
mov
fiadds
insb
scas
cmp
or
ds
je
adc
jle
shlb
mov
cmp
dec
mov
xchg
cmpsl
dec
in
rorl
test
nop
jns
loope
mov
leave
mov
dec
pop
pop
shlb
clc
adc
pop
sub
lock
xchg
cltd
testb
pop
lea
push
inc
and
ss
in
xchg
je
dec
pop
jnp
and
jne
imul
xor
jle
mov
into
loopne
sahf
fistl
es
jne
dec
test
push
inc
sarb
xor
dec
adcb
or
jae
mov
push
or
xchg
mov
mov
push
and
xchg
or
mov
add
jb
adc
pusha
jno
test
ss
push
mov
add
es
push
jmp
movsl
mov
sbb
mov
mov
sub
or
dec
cmp
jmp
push
push
push
push
pop
pop
imul
test
inc
mov
add
mov
popf
stos
cmp
xchg
roll
or
cmp
popa
ss
arpl
repz
xor
jg
daa
cmp
pop
jecxz
xor
mov
jnp
sbb
imul
jge
insb
pop
lcall
int3
je
insl
int3
push
push
cmpsl
xchg
adc
mov
ret
stos
cwtl
in
mov
jae
xor
mov
sub
push
dec
lock
mov
cmc
push
icebp
mov
imul
jl
xchg
dec
jl
nop
arpl
cmp
icebp
mov
mov
xor
bound
cmp
xchg
ljmp
in
push
icebp
jns
popf
sbb
arpl
dec
test
lock
lahf
lods
rcrl
test
mov
pop
int
subl
pushf
xor
pop
xor
rclb
or
jecxz
cmp
pop
xor
mov
outsl
pop
xor
dec
mov
shlb
addr16
pop
mov
mov
cmp
je
jne
dec
or
out
ret
mov
pop
pop
addr16
stos
clc
jge
imul
in
and
add
sbb
mov
mov
and
add
lods
out
cld
enter
loop
into
cmpsl
pop
psubb
out
jmp
mov
push
push
gs
and
loop
jge
pop
push
fidivl
test
cmp
add
les
xchg
shll
in
inc
cmp
scas
fstps
imull
push
inc
sub
xor
pop
stc
add
cmc
repnz
jne
fisttpl
add
popf
popa
mov
aas
sahf
negl
xor
andb
jge
sbb
sub
out
cmp
cmp
arpl
cmp
dec
add
lods
adc
outsb
push
dec
xor
push
jnp
dec
pushf
mov
not
jecxz
in
push
cli
pop
mov
cltd
lock
and
or
into
mov
push
jae
test
lcall
lods
inc
insb
lcall
icebp
cmc
rol
lods
fs
jecxz
out
fwait
mov
iret
xchg
rol
and
mov
xor
dec
cld
xor
dec
xchg
xor
mov
adc
dec
test
xchg
pop
cli
jae
mov
mov
icebp
jp
test
cmp
cld
jo
mov
addr16
add
mov
adc
mov
popf
in
mov
jge
out
sti
mov
mov
loopne
push
xor
lret
jg
lock
inc
mov
mov
adc
add
adc
push
adc
jg
push
aaa
mov
adc
or
add
jae
shrl
pop
outsl
or
jno
inc
xchg
cmp
adc
addr16
fxch
into
das
add
js
addr16
dec
repz
pop
mov
into
fs
mov
outsl
and
cmp
mov
jae
jle
xchg
and
bound
push
inc
push
ret
sub
pop
out
mov
push
push
jge
jge
fst
push
push
pop
mov
movsb
adc
push
mov
int
inc
arpl
inc
popa
xchg
loop
int3
ret
loopne
push
adc
pop
sbbl
or
xor
push
lcall
daa
icebp
xchg
dec
pushl
and
add
ja
xchg
not
ret
jmp
call
sub
cs
cwtl
test
jle
add
jp
push
cmp
xor
aad
xor
sub
adc
or
fldl
gs
mov
sbb
mov
dec
mov
xchg
hlt
adc
loopne
dec
inc
sbb
xchg
andb
loopne
cmpsl
insb
nop
bound
jo
jb
mov
stos
outsl
insl
push
cmp
inc
push
and
ret
pop
or
js
xlat
pop
fldcw
imul
and
mov
mov
jmp
mov
push
shlb
mov
in
and
mov
enter
andb
dec
stc
out
aam
int3
addr16
and
int3
movsb
out
xchg
adc
add
sbb
pop
jg
stos
or
jecxz
cmp
adc
popa
xor
xchg
lods
stc
adc
or
adc
pop
cmp
imul
mov
sbb
test
xchg
mov
nop
sbb
xlat
and
pcmpgtb
mov
xchg
out
jp
test
inc
dec
mov
jbe
loope
inc
sahf
mov
scas
movsl
ret
cmp
out
pusha
jge
push
jl
and
jg
gs
into
data16
movsb
idivl
jge
out
xor
or
scas
popf
and
loope
mov
repnz
push
mov
gs
push
outsl
sahf
add
call
push
outsl
jecxz
push
pop
mov
cmp
cmpsb
xor
xor
mov
loope
xchg
dec
mov
movsl
jmp
repz
popf
pop
pushf
adc
fs
and
sub
jnp
and
leave
repz
ror
xor
mov
mov
nop
add
push
scas
jecxz
sbb
mov
sahf
lahf
sahf
ds
pop
repnz
push
call
hlt
outsb
cmp
stc
dec
push
add
in
hlt
pop
mov
leave
repz
mov
insb
rclb
jmp
andb
lock
jmp
add
jg
jp
adc
inc
dec
std
repnz
pop
jp
push
jmp
test
je
stos
fiaddl
adc
xchg
dec
aam
scas
ljmp
test
in
cmc
fists
out
out
or
imul
pop
mov
or
mov
push
pushf
mov
mov
js
add
xchg
dec
int
or
jbe
push
mov
jb
in
movsb
ja
adc
loopne
jp
fsubrl
pop
mov
std
or
xor
js
mov
sub
test
pop
pop
or
adc
pop
out
cltd
dec
cwtl
sbb
push
ljmp
cld
or
aaa
sbb
and
or
ret
subb
or
mov
add
mov
xor
dec
pop
fbld
add
push
pop
lret
fsts
insb
dec
or
sub
push
mov
adc
dec
or
cmc
xlat
das
outsb
fs
loopne
into
sbb
mov
movd
mov
test
mov
arpl
repnz
add
adc
mov
jbe
outsb
mov
mov
cmpsb
xor
leave
jge
pop
push
insl
loope
mov
push
add
adc
aam
cmp
mov
clc
cmc
mov
dec
pop
dec
xchg
mov
stos
int
mov
in
xchg
adc
bound
adc
xor
std
fisubl
add
out
mov
lahf
ret
out
jns
stos
ja
lock
push
sub
dec
xchg
out
inc
lock
addr16
clc
mov
std
pop
pop
dec
and
int
stc
mov
add
mov
out
dec
leave
lret
cmp
fisubs
add
sub
push
pop
test
shlb
clc
dec
and
insb
and
sub
mov
or
bound
stc
ja
shl
rcrl
and
jmp
test
mov
rolb
jle
jp
shrl
jge
std
xchg
mov
leave
js
stc
mov
and
inc
scas
add
orl
shlb
js
sub
xchg
pop
mov
push
or
and
ficoml
xor
out
fiaddl
daa
notl
jmp
out
jl
icebp
call
and
xor
ficoml
xchg
jo
push
and
shll
pop
jle
mov
sub
int3
test
test
adc
ljmp
andl
sbb
xchg
mov
decb
mov
xchg
lcall
pop
jecxz
jo
push
in
and
sbb
leave
and
stos
lret
push
punpckhdq
mov
mov
push
and
adc
cmp
test
pop
cmp
jbe
mov
push
adc
sbb
out
mov
out
push
cltd
sub
or
add
shlb
add
dec
aaa
or
rcll
xor
sbb
rorl
sbb
jno
enter
and
pop
adc
mov
outsb
iret
push
stos
cld
push
push
mov
xchg
mov
js
pop
inc
sbb
mov
outsb
add
outsl
inc
jl
cmp
rorb
enter
or
mov
mov
fistpll
lahf
mov
sbb
push
imul
ljmp
add
and
rcl
outsl
push
or
jmp
fidivrs
movsl
cmpsl
push
add
pop
notl
dec
loop
or
mov
sub
add
mov
in
sub
mov
call
sbb
rolb
push
pop
push
iret
jae
fstpl
pop
push
mov
loope
enter
fisttpl
xor
arpl
and
jno
inc
insl
aas
out
xor
jno
andb
idivl
xchg
testb
push
rcrl
jl
std
mov
dec
lods
push
xchg
jns
jg
lea
lret
or
daa
pop
shll
mov
stos
push
jbe
sahf
out
and
mov
pusha
shll
pop
ss
pop
ret
add
xor
testl
hlt
out
mov
jae
push
jae
pop
daa
mov
je
pop
lea
cltd
add
stos
sbb
mov
test
lock
inc
addb
nop
daa
dec
pop
aaa
xchg
in
dec
out
in
jno
mov
subl
jecxz
jle
pushf
cmpb
dec
loop
fwait
lock
and
shlb
mov
push
mov
sahf
mov
adc
mov
sarb
push
lret
ficompl
pusha
inc
bound
bound
imul
cmc
adc
cmp
dec
mov
mov
sub
xchg
xlat
xchg
cmp
sbb
sub
xor
pop
cmp
cli
cmp
fbld
es
aaa
fldt
imull
in
outsl
negl
mov
test
xchg
stos
xchg
fistl
out
or
movsl
xchg
inc
push
fidivs
lea
ds
mov
mov
addr16
jne
jmp
cmpsl
gs
ljmp
movsl
loopne
movsb
addr16
inc
xchg
div
aam
popf
in
iret
in
and
mov
cmpsb
mov
and
lret
pop
fsubrp
data16
sub
add
daa
mov
xor
and
xchg
sahf
insl
pop
and
lcall
out
daa
cli
in
loop
mov
ret
pop
fcmovnb
pop
cmp
shrb
sti
loop
popa
mov
fisubs
mov
in
lea
ficoml
dec
xchg
pop
xchg
xor
cmpsl
ds
or
or
pop
mov
mov
push
adc
mov
loop
cmc
inc
out
clc
fwait
push
cmp
cltd
fdivrs
or
push
popa
xor
cmpb
stc
inc
jp
or
jg
in
mov
test
icebp
addr16
mov
sub
addb
pushf
adc
pop
dec
fadds
fldcw
sbb
mov
push
bound
int
push
mov
sub
cltd
adc
not
xchg
jl
into
adc
mov
andb
shll
pop
add
adc
cmpsb
dec
lock
dec
push
jmp
stos
add
dec
cli
insl
push
mov
das
test
loope
clc
sub
adc
popa
int3
negl
ret
sar
pushf
xor
data16
mov
sbb
test
test
push
inc
daa
push
mov
inc
lcall
adc
rcrl
outsl
shrl
icebp
out
movsb
popl
adcl
fwait
cld
cmp
mov
pop
icebp
jns
xchg
push
in
and
sti
cli
dec
int
outsl
jmp
xor
and
push
mov
and
insl
aaa
lock
jbe
pop
mov
cmp
inc
movsl
xor
sbb
fcmovb
xchg
loopne
cmp
xor
dec
or
stos
adc
push
insl
inc
xor
movsb
sbbl
or
adc
inc
push
loope
mov
jp
loope
add
std
jp
out
sti
outsb
and
outsl
dec
jnp
pop
ret
std
or
sbb
sti
cli
enter
mov
mov
or
ljmp
imul
xor
scas
jnp
push
or
push
cmpsl
mov
cld
je
ds
icebp
rclb
std
or
adc
cwtl
cmpsl
shl
rorl
xchg
popf
test
cmp
or
test
inc
enter
lds
into
adc
imul
icebp
xor
std
add
repz
pop
mov
cld
dec
xchg
icebp
fwait
mov
or
mov
movsl
loope
mov
into
cmp
sbb
repnz
and
pop
mov
or
test
lea
pop
dec
out
lods
pop
adc
into
ljmp
cmpsl
and
jmp
dec
or
loope
dec
in
daa
outsl
ror
jge
je
push
adc
fs
jmp
std
cmp
adc
mov
adcb
out
jbe
jns
int
pop
jp
adc
jl
push
aad
mov
pop
stos
xchg
add
jne
lock
xchg
movb
lock
pop
mov
or
fs
fbstp
shlb
push
jle
sbb
sbb
nop
testb
ds
ds
sub
fs
lods
push
pop
mov
xlat
sbbl
scas
or
cmp
in
inc
test
sbb
loop
xor
pop
pusha
xchg
pusha
xor
cmp
out
adc
pop
ja
jbe
sub
lock
mov
call
lock
xchg
iret
cmp
out
ds
push
int
mov
mov
ljmp
push
and
ljmp
adc
loop
fs
xchg
fdivl
jae
lds
mov
imul
inc
ror
and
fistl
rcrb
repz
lcall
push
stc
nop
cmp
adc
fcmove
imul
gs
add
jmp
ret
pop
shll
jbe
sahf
pop
jb
mov
call
jns
daa
and
pusha
je
mov
jp
addr16
int3
test
and
adc
out
sbb
cmc
push
int
push
clc
data16
inc
testb
mov
pushf
dec
lret
or
push
pop
gs
pop
stos
mov
sub
mov
jb
xchg
rorl
leave
jl
jp
dec
jne
adc
test
test
mov
rolb
add
pop
xchg
lret
jnp
hlt
testl
popa
pusha
add
and
inc
and
rorb
sub
add
adc
mov
shlb
sbb
xchg
popf
icebp
cmp
jecxz
mov
mov
inc
leave
mov
fwait
ss
jne
testb
mov
cmpsl
sahf
cs
xchg
jno
aad
mov
dec
jge
out
or
jnp
sub
xchg
imul
xchg
xchg
cs
mov
cwtl
inc
push
jmp
pop
cmpb
sub
pop
pxor
pusha
call
fisttpl
movsl
jns
call
pop
stos
enter
enter
js
sub
ss
cld
outsl
mov
sbb
add
pop
test
or
cmc
jns
out
test
btr
movsb
rclb
sbb
sbb
bound
insl
dec
call
popa
pusha
sub
lret
cmp
mov
and
je
out
inc
inc
in
pop
lcall
and
push
jne
fisubl
mov
add
gs
scas
mov
mov
cmp
sbb
jge
lods
fisttpll
inc
jl
ret
mov
add
cmp
sbb
dec
clc
jp
outsb
test
pop
test
dec
outsl
xchg
jecxz
pop
xchg
cmp
cmpsb
clc
mov
pop
movsb
xchg
pop
xor
rcll
and
push
mov
shr
bound
jle
inc
push
mov
lea
fs
xchg
outsl
test
outsl
cmpsl
or
pop
cmp
repnz
cmpsb
xchg
adc
add
pop
mov
fcmovne
fs
jne
jle
push
fidivrs
push
cmp
mov
sub
out
lcall
and
inc
mov
lcall
cwtl
lock
or
and
or
jp
jmp
ret
mov
rcrl
aam
dec
les
dec
or
push
dec
xchg
loope
cmp
and
mov
sbb
mov
orb
push
orl
js
sbb
fbld
xor
daa
cli
leave
dec
jnp
cmpsb
call
hlt
aad
fnstsw
cs
mov
xchg
push
data16
test
rcr
xor
xor
shrb
std
mov
cli
xchg
or
addr16
add
mov
repz
xor
dec
int3
scas
dec
addr16
test
push
xorb
nop
cmpsb
repnz
lret
mov
subb
bnd
jecxz
push
iret
pop
in
or
mov
jno
cmp
mov
test
jl
cmp
sbb
dec
xor
push
sbb
push
hlt
add
mov
cmp
popa
fbld
or
dec
loope
adc
lds
lods
cmp
xor
imul
iret
xchg
test
outsb
sbb
in
gs
inc
add
add
outsl
mov
mov
popf
call
scas
mov
repz
dec
hlt
inc
sbb
inc
mov
leave
adc
mov
je
adc
xchg
js
stc
sbb
jbe
adc
mov
ds
jnp
mov
sbb
aad
test
outsb
fistpl
aam
add
dec
pop
mov
push
and
pop
imul
mov
pushf
inc
loop
xor
fmull
ja
and
lret
mov
rcll
cmp
ja
pop
mov
mov
adcl
insl
adc
push
cmpsl
imul
mov
loopne
push
cmp
popa
out
cmpsb
pop
mov
and
push
mov
and
cmp
add
sub
mov
and
jl
aad
and
or
sub
cltd
int
push
psrlq
inc
aaa
pmulhuw
mov
cmp
mov
cmp
test
imul
sbb
xlat
fbstp
pop
in
xor
mov
lcall
lds
int3
mov
inc
xor
dec
add
jo
insl
xchg
lret
cs
or
les
cmp
sbb
mov
mov
xchg
push
cmc
pop
or
and
mov
fxch
movsb
mov
or
jmp
inc
aad
pop
sub
rcl
cmp
ljmp
insl
pop
mov
fwait
sbb
or
mov
and
mov
pop
sbb
push
int3
jns
in
push
adc
cmp
ficompl
mulb
cld
int3
add
lock
pop
push
stc
aas
pop
iret
int3
cmp
push
sub
fsubs
ja
lock
mov
cmp
add
aaa
dec
cs
or
mov
or
inc
xor
add
repnz
inc
hlt
inc
cmp
sub
xor
lock
outsl
hlt
mov
and
sbb
add
inc
fsubrl
roll
stos
cmpsb
add
nop
and
inc
cmp
adc
rcrb
push
into
push
subl
pextrw
adc
push
rcr
jecxz
test
cmpsl
mov
sahf
push
loop
mov
mov
mov
aad
cld
adc
and
insl
leave
sbb
jg
push
xor
push
add
adc
sub
roll
ljmp
xchg
aaa
mov
mov
bound
js
inc
cmpsl
sbb
mov
jle
lock
rolb
call
aam
dec
insl
popf
das
out
sub
xor
add
cli
inc
or
mov
fcmovne
or
jecxz
push
xchg
jns
stos
movsl
mov
sarb
loop
inc
jl
xchg
rorb
pop
fs
mov
sub
lcall
fdivp
push
dec
mov
sub
add
daa
add
xlat
jmp
mov
sub
and
cmp
repnz
jnp
pushl
incb
xchg
xorl
adc
cmpsl
xchg
dec
popf
test
fsubp
pusha
xchg
popa
jo
mov
or
add
mov
fisubrs
cmc
js
mov
dec
rorl
inc
dec
jle
aam
cmpsb
sub
push
sub
xchg
aaa
mov
mov
in
mov
push
das
or
dec
std
add
cld
iret
pop
and
sub
mov
xor
repnz
sbb
cmp
imul
movl
pop
sub
add
inc
xchg
mov
sbb
lret
push
sub
add
sub
mov
cmp
jmp
mov
push
fisttps
lods
mov
dec
mov
mov
stc
xor
outsl
das
inc
jbe
inc
or
popf
rcl
loop
scas
dec
push
cmp
sub
inc
lds
and
lods
pop
or
xchg
mov
cmpsb
repz
push
repnz
push
aaa
popa
xchg
cmp
movsb
sbb
adc
mov
xchg
in
in
push
nop
das
sbb
imul
and
ljmp
and
out
lods
ja
lods
pop
xorl
cmp
ret
out
dec
fwait
push
add
push
cmp
mov
cmp
mov
inc
stos
mov
pusha
pop
addr16
pop
daa
movsl
sub
rolb
inc
or
test
hlt
and
bound
mov
aam
cld
adc
and
faddl
lock
inc
jno
fists
ss
rcr
and
das
pop
ljmp
xor
es
or
ja
cmp
stc
aad
pop
mov
cld
or
jnp
jmp
clc
xor
aam
faddp
dec
pop
outsl
inc
test
cmp
sub
cwtl
and
cmpsl
adc
ss
jns
imul
inc
rolb
ss
cltd
std
or
xor
or
dec
push
cld
jae
jl
mov
cmp
dec
jae
xor
xor
cltd
faddl
push
xor
pop
jl
sbb
out
sbb
or
lock
stos
mov
pusha
push
mov
sub
sarb
mov
int3
insb
outsl
pusha
test
mov
cmpsl
js
test
lods
xchg
les
xchg
ret
or
in
mov
fnsave
jb
fwait
les
fsts
adc
mov
sbb
rolb
rcll
xor
pop
xchg
and
ds
fcomps
pop
gs
rcll
xchg
cmp
scas
mov
loopne
pusha
mov
push
std
push
mov
push
loop
pusha
sbb
fs
lods
repz
inc
pop
pop
imul
int
das
cmp
mov
out
cltd
mov
or
out
shlb
repz
mov
scas
push
jmp
xor
in
adc
gs
push
mov
pop
movsl
push
xor
mov
mov
mov
mov
fsub
mov
sub
adc
mov
mov
add
jg
add
cmpsb
cmp
pop
hlt
add
cmp
pop
xor
imulb
popa
fs
scas
hlt
enter
in
stos
int
inc
and
cs
int3
mov
pushw
imul
xlat
ljmp
cmp
hlt
repnz
jmp
loopne
leave
cld
enter
ds
adc
aad
mov
mov
push
dec
cltd
test
cwtl
bound
cmc
lods
fistpll
int
movsb
pusha
mov
outsb
fs
sub
xlat
xor
shrb
popf
mov
ds
mov
lea
stos
mov
pop
jae
aam
jecxz
icebp
lcall
mov
mov
ljmp
cmp
cmpsb
lods
push
out
fwait
mov
mov
inc
jle
out
add
test
adc
lcall
adc
rcrb
sbb
sti
hlt
adc
sbb
loope
lea
fs
pop
mov
mov
fldt
adc
jl
shrl
push
mov
aad
jmp
das
rorb
gs
in
mov
or
mov
push
sub
pushf
ss
scas
flds
mov
mov
icebp
dec
cmp
jne
pop
and
lret
pop
lock
psubusb
stc
or
pop
mov
fldt
sarb
adcb
movsb
rcll
mov
mov
and
aaa
push
add
cmp
add
adc
pop
xorb
das
push
test
push
std
lret
lcall
out
pushf
enter
and
aaa
call
add
roll
insb
movsl
push
jle
adc
sub
push
sbb
mov
mov
in
sub
and
mov
rcrb
lret
add
xchg
jl
dec
push
stos
mov
pop
adc
in
push
cmpsl
inc
mov
mov
stos
sbb
divb
bound
loopne
xchg
fcoms
mov
out
dec
jb
fwait
aaa
lock
push
push
mov
loope
das
enter
mov
mov
lret
jle
pusha
and
repnz
pusha
push
mov
cltd
cmpl
adc
xchg
je
and
aaa
repz
lods
inc
rep
jno
scas
stos
cmp
fwait
sti
ret
push
sub
lea
imul
mov
xlat
mov
jmp
xchg
add
sbb
shlb
jo
pop
mov
dec
cmp
stos
xor
sbb
or
mov
mov
jg
mov
push
mov
jne
jbe
inc
in
xor
std
ja
inc
jge
in
xor
call
jne
out
pushf
fldenv
in
div
icebp
jmp
jb
fcomps
xor
call
xchg
adc
jbe
xchg
push
xchg
mov
jae
notl
ja
adc
add
imul
and
sbb
xchg
sub
jg
mov
xchg
pop
testl
inc
sti
sub
stos
mov
mov
enter
fcoms
xchg
aas
xor
cltd
adc
xor
adc
jle
aas
and
cmpsl
jns
fsubrs
outsb
xchg
pop
ss
jecxz
jle
aaa
imul
fcomps
jmp
popf
xor
sahf
test
mov
mov
cmp
xchg
jae
dec
mov
xchg
mov
xchg
or
mov
vmwrite
dec
in
xor
arpl
pop
cmp
into
lods
push
mov
test
insl
dec
add
stc
or
into
push
add
add
rorl
loop
repz
jecxz
cmp
cmp
cmpb
and
sub
xchg
sub
sub
shr
xchg
push
test
xchg
jg
iret
pop
testb
test
leave
cmpsb
lret
mov
mov
pop
and
cmp
mov
mov
das
add
inc
pushf
sbb
cmpb
pop
sbb
testb
mov
jo
mov
mov
sub
xchg
in
jnp
int
lock
faddl
dec
fdivrp
in
movsl
gs
dec
pop
enter
jp
fucomip
jmp
loop
cmp
daa
rcrl
push
shrl
sub
xchg
lock
sbb
push
scas
sub
push
jecxz
adc
mov
in
mov
sub
test
clc
push
repnz
jbe
xor
cmp
cmp
notl
mov
push
call
xor
loop
jno
sub
insl
scas
xor
pushf
ficoml
cmpsl
add
push
pop
jge
and
cltd
push
cmp
sub
push
sti
aad
mov
adc
mov
and
cwtl
sub
movsl
inc
out
jbe
cli
mov
loop
popa
lret
add
sbb
loopne
and
je
out
xchg
pop
jo
ficompl
dec
fwait
xor
sbb
push
cli
pop
call
daa
jmp
jno
popa
adc
jle
mov
gs
orb
push
js
in
mov
sub
repz
xchg
shlb
pop
mov
mov
outsl
cmp
adcl
and
mov
bound
lahf
or
repnz
inc
push
arpl
dec
insb
loope
repz
sbb
mov
sbb
es
add
in
mov
popf
inc
xchg
fstpt
jbe
data16
lods
leave
nop
stos
and
xor
xchg
ja
mov
mov
push
sub
dec
gs
xor
mov
push
sti
xor
imul
dec
push
inc
jmp
movsl
fdivrs
sbb
and
ret
lea
add
scas
mov
sbb
push
loopne
lahf
aam
jl
mov
and
imulb
cs
jnp
and
in
popf
xchg
mov
mov
mov
repz
pop
sbb
jle
outsb
lret
aaa
dec
popa
xchg
addr16
sub
add
xchg
lret
mov
add
rorl
js
fidivrs
sub
lahf
imul
xorb
mov
dec
mov
ds
rcr
cmp
dec
dec
test
mov
aam
and
cmp
repz
mov
and
fbstp
aas
int3
xchg
jno
dec
sub
cltd
push
movsb
sbb
in
mull
cmp
pop
out
and
mov
mov
repnz
dec
icebp
mov
xchg
dec
fs
daa
adc
outsl
add
ds
cltd
pushw
pop
sbb
aas
sbb
cmp
jbe
or
mov
in
pop
ret
jne
dec
mov
out
or
repz
mov
daa
aam
mov
test
xchg
out
cs
push
xchg
int3
je
xor
cmpsl
inc
in
sti
mov
sub
pop
shlb
push
movsl
aam
sarb
cmp
xchg
outsb
shlb
or
lods
or
inc
test
xlat
mull
js
fbstp
hlt
pop
in
xchg
outsl
jbe
jns
and
jge
psrad
sti
lods
sti
push
ja
dec
pop
fs
arpl
mov
int
jo
xor
jecxz
fwait
bound
cmpsl
dec
xlat
sbb
dec
mov
xchg
xchg
nop
adc
mov
xchg
pop
jp
push
xchg
sbb
das
imul
and
popf
and
dec
inc
jnp
cmp
adc
adc
add
mov
mov
rol
sub
sub
add
mov
ja
testb
mov
cmp
cwtl
sub
pop
test
std
sub
xor
rcrb
test
adc
arpl
pop
add
sti
in
lcall
sub
popa
xchg
ror
das
je
insl
push
xor
xor
jge
fldz
push
mov
adc
lods
lock
fwait
hlt
daa
xor
push
jne
lret
ljmp
mov
addr16
lods
or
inc
loop
mov
loopne
les
outsl
test
adc
cltd
jge
rcrb
in
pop
and
dec
mov
push
jno
aam
dec
dec
xor
repz
dec
sbb
insl
int3
loope
jno
jo
cmp
aam
test
insb
lods
mov
push
cld
fstl
sahf
bound
xlat
dec
xchg
mov
jne
push
roll
and
adcl
cld
mov
jo
fistpl
cmp
enter
add
push
push
xchg
shlb
jmp
mov
ret
outsb
cmp
out
adc
xchg
lds
gs
add
fisttpl
mov
dec
inc
pop
jae
sub
add
pop
mov
cmpsl
mov
int3
ss
pop
ss
adc
or
sub
pusha
mov
lahf
cmp
cmp
xorl
ja
push
daa
or
mov
out
fcmovb
jg
es
xor
and
pop
cmpsl
jne
jle
sbb
jns
jnp
pop
in
es
sbb
pop
divb
imul
es
rcl
push
adc
stc
inc
dec
cld
jae
jmp
mov
jmp
out
aas
test
jp
std
and
jg
jae
dec
repz
mov
adc
push
add
cli
mov
pop
loopne
ficoml
mov
push
pop
and
cmp
fsubs
test
fs
dec
in
pop
popa
push
add
mov
cld
mov
sbb
pop
sub
lea
or
sbb
mov
jmp
clc
test
loopne
gs
xor
out
cmp
pop
mov
loopne
int3
dec
lret
pop
lahf
pop
push
stc
push
add
push
stc
jae
cmp
dec
sbb
clc
jnp
xchg
ds
push
lods
aad
movsb
les
push
lcall
andb
dec
push
rcr
mov
xchg
push
pushl
fsts
lods
add
mov
cli
or
sub
test
pusha
mov
test
lea
ja
mov
insl
mov
loop
mov
inc
mov
or
lret
dec
aas
mov
and
inc
push
cwtl
sti
jmp
or
pushf
ficomps
mov
les
jmp
xchg
sub
mov
mov
sahf
pop
lea
leave
in
dec
in
hlt
test
repnz
fisttps
inc
add
pushf
xchg
je
jl
sub
adc
icebp
movsb
lea
dec
inc
adc
jo
int3
or
adc
mov
lea
jmp
mov
call
loopne
cwtl
call
dec
adc
jne
lods
pop
out
lds
repz
out
mov
and
addr16
xlat
mov
inc
mov
fcmovb
les
sbb
sub
push
cmp
pop
and
int
jl
fstp
mov
fwait
inc
ja,pn
sbb
sub
and
data16
push
popf
flds
cmpl
or
xor
popf
insl
imull
mull
cvttps2pi
movsb
mov
rorb
stc
adc
fdiv
scas
add
fs
adc
jl
pop
iret
cmpsl
push
pop
ret
pop
adc
add
dec
xor
jle
insb
enter
lahf
hlt
je,pn
xchg
cwtl
pop
jb
icebp
ret
and
test
je
dec
rclb
scas
mov
add
movl
or
or
mov
push
jp
mov
adc
movsl
jnp
ret
cli
rcl
es
les
mov
sbb
fsubrl
and
mov
cmc
mov
pop
loop
ret
or
pop
testl
es
xchg
ss
testb
mov
mov
xchg
in
loopne
or
and
lahf
scas
sub
dec
aas
dec
test
ror
push
mov
jb
shll
and
filds
lock
cmp
sbb
xchg
stos
jns
clc
adc
loope
add
mov
lds
jecxz
sahf
and
push
inc
or
pop
cmp
scas
lods
scas
lret
lods
in
adc
bound
call
loopne
sbb
rcll
orb
decb
sbb
icebp
jnp
xchg
or
mov
loope
scas
mov
out
sbb
mov
adc
out
or
mov
aas
xchg
push
lret
or
lea
enter
lret
jno
out
int
lahf
pop
stos
pop
xor
insb
test
mov
addl
dec
sbb
out
push
jmp
cmp
fidivs
gs
loop
lret
loop
xchg
fs
mov
insl
dec
mov
adcb
add
jmp
shll
pop
jecxz
lock
mov
ljmp
cmpsb
cmp
pop
testb
popa
shll
mov
repz
js
adc
and
or
mov
jb
xchg
sbb
data16
ljmp
cmp
or
imul
xor
push
lods
mov
rcll
xor
jns
mov
mov
xor
data16
movq
imul
lock
loope
lods
jge
cmp
xor
jmp
lret
mov
sub
inc
arpl
sub
jae
outsl
pop
mov
jg
pop
call
push
pop
or
sbb
nop
fwait
outsl
jge
cmp
mov
test
dec
inc
insl
dec
das
arpl
mov
int
out
addl
lahf
out
clc
sbb
xchg
sahf
int
data16
adc
es
push
andb
xor
aas
fdivs
inc
jge
jbe
js
insb
push
fcomip
mov
sub
fs
xchg
mov
mov
inc
xor
xchg
xchg
inc
jg
lods
push
sub
movsb
mov
stos
mov
mov
mov
mov
mov
in
cs
rorl
inc
jge
xor
into
aas
mov
out
in
add
jp
out
cmp
je
in
adc
cmp
jmp
or
sub
inc
add
push
bound
stos
jge
nop
test
lock
imul
sbb
daa
insl
mov
sbb
nopl
pushf
jns
aad
xor
push
pop
icebp
fstpl
dec
mov
push
pop
mov
aam
and
jne
int3
aas
pop
pop
loop
dec
sbb
aas
outsl
aam
lds
adc
dec
xchg
ficompl
clc
inc
notl
lahf
jnp
mov
add
xchg
mov
icebp
mov
mov
fsubr
fistpll
into
dec
jno
movl
or
fcomp
out
mov
xchg
jp
cmpsl
fldcw
ficoml
add
clc
les
cmp
ss
dec
xchg
lahf
push
out
data16
mov
mov
ljmp
pop
add
mov
mov
cli
into
shr
jecxz
mov
lret
movsb
sub
clc
sub
ja
xorb
subb
movsb
pop
sahf
out
test
cltd
mov
addr16
fstpt
xchg
or
jge
in
sub
mov
mov
xchg
imul
sbb
dec
pop
movsl
stos
jb
aad
das
dec
adc
xor
cmc
push
lods
or
pushf
dec
push
inc
inc
test
mov
mov
add
ljmp
push
cmp
fwait
sahf
arpl
fdivrl
shrb
push
mov
sbb
inc
add
xchg
scas
xchg
and
repz
movsb
int
out
call
das
ficompl
sbb
xchg
dec
pop
cli
sbbb
sbb
out
imul
dec
daa
adc
jb
or
cmpsl
icebp
adc
leave
repnz
adc
ljmp
daa
push
repnz
mov
pop
jmp
push
cmc
fwait
lds
int
popa
arpl
mov
cmpsl
and
popa
pop
sbb
test
jg
push
lods
sbb
cmp
arpl
out
jbe
out
add
loope
movsl
pop
dec
add
jmp
add
hlt
jle
arpl
jecxz
mov
ret
ljmp
call
pop
inc
lahf
push
fcomip
aam
mov
clc
ljmp
inc
dec
dec
jnp
fidivrl
pushf
bound
dec
push
insb
repnz
or
rcl
scas
ljmp
sbb
mov
adc
mov
fsubrp
stos
arpl
pop
sub
cmpsb
mov
mov
cwtl
sbb
popa
mov
dec
in
rclb
jno
and
neg
std
icebp
push
in
mov
adcb
jns
adc
sbb
bound
pop
mov
out
filds
pusha
imul
adc
scas
cli
mov
out
mov
dec
add
arpl
cmp
int
push
out
subl
sahf
or
pop
xchg
das
mov
mov
out
lret
push
add
aad
mov
ret
mov
imul
sub
jno
sub
orb
inc
push
out
mov
mov
and
fs
out
cmpsl
rcr
xchg
fdivr
mov
adc
sub
mov
out
cmpb
xchg
popa
outsb
mov
push
mov
push
cmp
lds
add
imul
pop
cmp
push
add
cmpsl
lret
rcrl
popf
lcall
sbb
into
decb
mov
mov
pop
insb
or
mov
push
stos
jmp
data16
inc
mov
pop
lret
mov
mov
and
fisttps
jp
push
dec
xchg
mov
jmp
scas
xor
sti
pop
mov
call
icebp
inc
mov
add
mov
nop
mov
xchg
adc
test
enter
lods
add
test
pop
or
icebp
and
jge
lahf
mov
mov
lcall
call
sbb
cmpsl
pop
and
stc
scas
sub
mov
cmpsl
test
and
dec
test
arpl
push
stos
inc
mov
cmp
push
imull
ret
shll
clc
stc
sub
mov
push
mov
jle
jp
dec
shlb
adc
mov
mov
vpsubw
iret
jae
cmp
pop
push
in
scas
mov
jno
sti
outsl
ret
cli
sti
mov
mov
xlat
divb
mov
or
dec
jo
hlt
jno
cs
adc
inc
inc
subb
stos
lds
pop
pusha
pop
scas
and
inc
sbb
xor
adc
adc
sub
jnp
lcall
loopne
xchg
stos
out
xor
mov
lods
outsl
movsl
cmp
and
sar
sbb
and
jge
lret
imul
movsb
jns
faddl
leave
rolb
adc
fnstcw
jno
shlb
pop
adc
sub
faddl
cmp
imul
clc
lcall
pop
push
push
jo
push
je
insl
mov
ja
jecxz
loop
leave
sbb
cmp
adc
xchg
cltd
mov
mov
xchg
jo
pop
lahf
mov
xor
cmc
gs
clc
inc
mul
xor
stc
mov
idivb
mov
adc
pop
stos
inc
test
jne
dec
fwait
and
xchg
sub
movsb
add
ljmp
push
mov
outsl
aaa
enter
lds
out
std
fildl
or
test
mov
xchg
nop
aaa
dec
xor
push
rorl
std
mov
push
je
push
test
xor
mov
cmp
out
data16
repnz
loop
call
ds
add
roll
fcoms
fists
sub
divl
xchg
add
pop
fidivrs
cs
stc
adc
and
test
sub
cmp
or
lods
push
or
mov
sbb
popa
inc
xlat
dec
int3
inc
loope
rcrl
push
in
sub
lahf
addl
mov
adc
call
xchg
xorb
jl
mov
and
out
hlt
icebp
fstpl
ljmp
xor
js,pt
addr16
mov
mov
jnp
sbb
jge
cs
stc
sti
jmp
dec
xor
out
fisubl
pop
jae
bound
add
js
pop
fisttps
inc
add
xor
cmpsb
adc
subb
push
mul
clc
dec
and
jno
and
test
dec
jne
cmp
mov
scas
ja
dec
movsbl
aas
aas
enter
push
cmpsb
movsl
and
ret
mov
adc
js
push
scas
mov
push
or
adc
cmp
xchg
xor
or
fwait
mov
rcrl
jno
divb
inc
push
jge
mov
or
pop
icebp
add
jnp
xchg
push
cmp
mov
cwtl
jg
imul
fcompl
mov
rcr
cmp
imul
mov
lea
in
dec
pop
ret
in
mov
or
xor
jecxz
push
loope
sti
cld
arpl
mov
mov
adc
xchg
push
jbe
push
into
fwait
dec
pop
pop
cltd
sub
inc
sbb
aad
jns
or
nop
insl
dec
dec
mov
test
cwtl
test
orl
add
js
cmp
fs
or
and
xchg
fwait
add
jmp
iret
and
sbb
sar
arpl
gs
push
sbb
ficompl
movsb
dec
fisttpl
sub
adc
lea
jns
shlb
inc
add
stc
out
dec
sti
or
popf
push
out
push
outsb
movd
xor
jle
sbb
jecxz
cmp
fildl
pop
rcll
stos
lahf
xor
std
adc
out
lods
stos
aam
and
dec
aas
lods
out
adc
sub
dec
xchg
sbb
stc
in
clc
aas
cltd
mov
scas
sub
jno
xchg
inc
mov
rcll
andb
mov
pop
out
imul
mov
in
pop
mov
sbb
loope
js
jbe
inc
rclb
mov
data16
enter
or
cmp
sbb
mov
sbb
pop
std
fistps
call
cmpsl
and
cmpsb
fs
cmpsb
jnp
jae
cmp
movsl
lock
cmpsb
pop
aaa
pop
mov
outsl
mov
fdivl
mov
inc
jle
mov
pushf
xchg
loop
push
add
pop
fldenv
arpl
pop
mov
pop
fsubrs
jbe
adc
mov
aad
leave
in
in
mov
lods
fbstp
cli
mov
pop
jo
mov
mov
nop
imul
adc
or
inc
repz
sti
add
mov
pop
insb
inc
and
adcb
out
dec
shrb
lahf
ficoml
rcll
push
jl
adc
push
inc
xor
dec
movsl
add
push
movsl
pop
fsts
pop
lods
and
and
cmp
dec
xor
movnti
or
js
push
cli
dec
sbb
fadds
adc
xor
or
push
pushf
jne
pop
sub
lds
std
sbb
fldenv
call
repnz
fstpl
test
movsl
sub
push
fcmovnu
xor
arpl
dec
rcll
push
dec
ja
test
sbbl
mulb
out
mov
pop
xor
or
mov
es
add
xor
fs
test
xor
mov
or
leave
fwait
sub
lds
outsb
cli
and
cwtl
cmp
sbb
insl
push
int3
sub
outsb
jb
fneni(8087
test
ret
jbe
or
movsl
lds
insb
lcall
inc
sahf
test
sub
adc
add
cmp
sbb
andb
xadd
dec
mov
xchg
loopne
nop
cmp
jno
xchg
dec
sub
div
add
outsl
fmul
mov
sbb
push
or
mov
mov
dec
mov
and
in
data16
fildll
clc
not
mov
lret
cmp
sub
bsf
fwait
xchg
xor
aam
fwait
xchg
loopne
out
dec
into
lcall
and
or
or
xchg
lds
arpl
arpl
mov
and
fldt
add
and
sbb
das
fistl
inc
jmp
shl
jae
pop
stos
pusha
push
mov
xchg
xchg
popa
jno
aad
push
and
pop
in
sbb
dec
pop
stc
jnp
imul
testl
sbb
int3
inc
scas
pop
sbbl
xchg
movsb
push
shl
jmp
out
fbld
stos
stos
cmpsb
dec
outsl
sbb
bound
inc
call
popf
xor
subb
xchg
mov
mov
inc
sbb
cmc
fldl
pop
es
mov
lock
xchg
pushf
imul
lods
mov
fcmovnbe
push
into
inc
jl
shlb
jg
jmp
mov
mov
sbb
fsubrl
xchg
pop
push
and
fyl2x
cmp
jmp
daa
cmp
mov
dec
and
xchg
add
add
stos
or
jbe
xor
cmp
push
call
cli
push
lcall
int3
testb
or
jmp
les
mov
pop
scas
and
subl
in
push
lret
cltd
inc
dec
insb
mov
xor
xchg
lret
cli
add
testl
jae
sahf
adc
mov
xor
jl
inc
mov
push
cwtl
sbb
adc
pop
inc
aad
lds
cmp
jg
push
insb
xchg
lods
push
fisttpll
hlt
std
cmp
mov
adc
xor
inc
je
sub
ja
arpl
imul
aad
cmp
xchg
scas
enter
leave
pop
push
xchg
or
pop
sub
cmpsl
pop
jae
and
ds
or
jp
pop
push
int3
stos
xchg
in
pop
test
test
nop
push
xlat
cmp
test
pop
repz
scas
imul
sbb
or
mov
push
sarb
sub
lret
jb
arpl
jae
sbb
jmp
imul
fdivrs
fisubl
cmc
push
sbb
imul
mov
aad
inc
iret
xor
pop
push
movlps
mov
pop
mov
mov
cli
std
out
popa
lret
movsl
add
leave
imul
lahf
cmp
mov
jb
hlt
dec
out
scas
cmp
aaa
jl
lock
mov
adc
push
mov
jnp
aaa
sbb
mov
or
mov
jp
xchg
push
cmpsl
cmp
dec
jmp
into
or
mov
sbb
push
aas
movsb
and
test
jb
pop
lock
les
mov
adc
aam
test
stos
sub
movsb
arpl
mov
shll
mov
movl
addr16
outsb
xor
ret
jg
fs
xchg
stos
movb
gs
inc
adc
mov
sbb
std
sub
rol
cmpsl
in
es
movsb
or
loop
adc
stos
inc
cmc
cltd
lcall
repnz
sub
mov
lods
loopne
scas
jo
xlat
cwtl
push
rcrb
cmp
popf
shrl
mov
pop
add
aaa
leave
add
cmc
jp
fidivrs
add
int
jne
push
movsb
lahf
mov
pop
sbb
jnp
fnstsw
out
xor
adc
cmpl
popa
xchg
cmp
and
mov
dec
aam
test
push
xchg
into
or
leave
and
dec
push
out
mov
shrb
jae
inc
adcl
mov
pop
pop
pop
dec
dec
add
push
test
add
sbb
sub
in
outsb
cmpsb
xchg
aaa
jmp
mov
mov
push
cmp
mov
imul
xchg
into
or
out
sub
jns
daa
dec
std
fadds
jmp
imul
cmc
sbb
push
lahf
pop
push
inc
sub
push
add
mov
ret
fmulp
cmp
test
outsb
cltd
adc
and
inc
sbb
fcmovnbe
mov
js
xor
jmp
sub
lcall
add
mov
call
dec
int3
cmpb
popf
fcompl
mov
scas
xor
out
push
js
push
stos
push
insb
movsb
sbb
aad
lock
rcl
cmp
pop
mov
aas
mov
les
imul
mov
jg
push
or
adc
cmp
jae
seto
jmp
mov
clc
sub
imul
imul
fisubl
push
imul
out
cmp
fisubl
mov
cmp
mov
push
adc
mov
out
dec
xor
aaa
jecxz
in
mov
pop
cmp
jge
inc
adc
jae
jno
and
pop
jge,pn
orl
jnp
inc
and
fstps
inc
repnz
xchg
imul
pop
add
adc
gs
in
outsl
fiaddl
sbb
ffree
dec
sbb
jno
or
xchg
xchg
dec
adc
ds
dec
imul
nop
dec
call
add
and
fbstp
inc
inc
int3
movsb
sarl
jnp
xor
dec
or
mov
mov
jp
lret
fwait
jp
push
js
adc
mov
dec
adcl
mov
cltd
mov
pop
sbbb
dec
dec
mov
xor
popa
and
mov
xchg
imul
mov
inc
addr16
xchg
out
sub
push
repz
in
and
les
add
out
xor
pop
mov
ss
dec
popf
dec
es
leave
adc
lret
enter
jl
jns
out
adcl
and
test
ss
jae
das
push
dec
in
xchg
idivb
fsub
popa
sbb
sbb
add
pop
mov
sbb
xor
sub
jnp
add
pop
xor
aas
insl
xor
or
inc
add
and
push
jb
mov
sbb
mov
adc
out
add
popf
leave
outsb
loop
and
sbb
stos
insb
dec
jbe
mov
pop
inc
loop
jbe
loope
jmp
xchg
fs
lcall
and
cmp
int
outsl
inc
add
push
es
push
jo
cmc
push
push
dec
mov
push
pop
cwtl
mov
mov
aaa
mov
pop
mov
gs
dec
mov
adc
nop
xor
jmp
and
cmc
dec
ror
push
sbb
and
fidivs
fbld
in
inc
mov
or
ret
outsl
and
rcll
lret
pop
test
into
add
in
pop
inc
sbb
xor
das
adc
leave
cmp
stos
aaa
es
xor
pop
cmp
mov
in
pusha
sbb
aas
cmpsb
adc
mov
jno
xchg
mov
nopl
int
mov
cmpsb
sti
mov
in
sbb
jo
in
ja
or
push
arpl
jecxz
fildl
adc
imul
pop
cmp
cmp
clc
or
jp
aas
test
imul
repz
or
jge
loop
mov
movhps
add
xor
fisubs
dec
fs
push
fsubs
outsl
mov
scas
enter
cmpb
cmp
pop
out
sbb
jo
xor
xchg
cli
fwait
aas
loopne
cltd
insl
push
ret
cmp
xor
add
pusha
add
fiaddl
loop
mov
loope
mov
mov
movsl
or
in
jns
aas
mulb
call
inc
stos
popa
mov
xor
jns
loope
fstps
out
out
in
lock
ret
cmp
ja
aam
adc
pop
movsb
sbb
rcrl
es
cmpsl
stos
xchg
mov
or
movsl
loopne
sbb
mov
pop
rcrl
movsl
adc
cmp
jmp
xor
movsl
pop
les
push
xor
jle
das
lea
jge
shll
adc
ret
arpl
addr16
test
jbe
xchg
jmp
push
aad
sbb
mov
scas
pop
loope
jmp
stos
lcall
fdivl
xor
mov
orb
or
jo
sub
outsl
add
pop
test
stos
inc
xor
test
sbb
sbb
pop
in
adc
daa
xchg
mov
lds
jmp
dec
outsl
sbb
gs
stos
rcrl
mov
mov
xlat
lahf
lcall
dec
aas
sahf
lret
mov
hlt
repz
xchg
pop
aas
es
mov
mov
mov
stos
aaa
mov
mov
js,pn
maskmovq
notl
mov
or
inc
js
xor
out
xchg
pop
mov
mov
and
pop
cli
adc
sub
and
mov
rcr
jbe
pushf
add
xchg
fincstp
xor
and
add
popf
mov
test
not
adc
adc
inc
jne
push
add
test
pop
insb
aam
daa
fisubrl
shlb
call
jp
adc
sbb
sbb
cmp
std
std
repnz
lods
mov
inc
inc
int3
push
dec
jl
stos
push
sub
lds
mov
cmpsl
pop
fisubrl
mov
cmp
movsl
cmpsl
pop
sub
mov
bound
push
xor
mov
fwait
inc
jle
je
xor
dec
and
push
cmp
sub
or
mov
cmp
jne
aam
aam
push
imul
out
imul
das
sub
fcoml
and
sbb
scas
sub
or
add
and
adc
sahf
das
or
jp
negl
mov
mov
inc
dec
jnp
in
sub
mov
and
jecxz
inc
cmp
ss
sbb
lock
aam
add
push
dec
mov
lea
mov
test
sbb
and
testl
sar
cmp
sub
add
xchg
subps
cmp
add
jge
fs
or
int3
scas
call
icebp
jge
xor
int
scas
inc
dec
add
rcrb
push
or
xlat
popf
and
sbb
adc
cmp
rol
jbe
bound
push
enter
data16
ds
or
inc
rep
fs
arpl
movsl
cmpsb
cmp
lds
dec
mov
sahf
add
sbb
mov
pop
rclb
stos
fisttpl
cmpsb
xchg
scas
dec
and
jle
mov
jb
testl
lea
cs
and
mov
sbb
push
in
mov
push
aad
repnz
sub
cs
ljmp
out
lret
push
inc
cmp
mov
or
mov
in
jecxz
xchg
int3
mov
pop
sub
or
pop
xchg
andl
or
shll
jns
in
jb
lret
push
rcrb
test
stc
arpl
xor
and
sub
mov
push
sar
push
xadd
sbb
push
mov
jbe
aaa
push
pop
xor
mov
mov
pop
inc
jg
fists
mov
movsb
pop
fsubrl
aaa
ret
pop
mov
imul
mov
mov
dec
mov
push
push
loopne
mov
cmp
jp
lods
lcall
cmp
adc
xchg
add
enter
sbb
pushf
mov
dec
and
cmp
pop
mov
outsl
or
fmul
push
inc
xor
outsb
xchg
mov
ljmp
cs
cmc
das
jmp
jno
jne
sub
xchg
and
mov
xchg
mov
pop
lods
cltd
mov
cmp
or
push
ss
pop
lea
mov
xchg
mov
test
mov
jno
je
inc
repnz
test
fists
jnp
mov
lret
push
ret
leave
rcrl
cwtl
mov
fs
xchg
dec
or
mov
and
das
pusha
jge
dec
dec
shlb
dec
ds
add
xchg
dec
sbb
fs
stos
scas
cmp
loop
jne
jl
sub
pop
cmp
into
into
lret
inc
push
dec
add
mov
xchg
enter
or
pop
pop
daa
fwait
push
sbb
jmp
cmp
mov
mov
push
out
or
cwtl
xor
leave
sarl
dec
sub
inc
mov
jge
sbb
jbe
dec
mov
mov
mov
sahf
fidivl
push
fs
enter
int3
pop
inc
inc
pop
sbb
and
out
dec
pushf
jg
enter
sti
stc
mov
mov
enter
popa
pop
hlt
or
sub
pop
push
sbb
test
sub
cmc
aam
icebp
mov
mov
popf
mov
jg
or
fldl
pop
imul
mov
leave
inc
adc
dec
xorl
pop
clc
jmp
cmp
sbbl
fstpt
setbe
add
scas
in
imul
mov
mov
jb
lcall
rorb
dec
push
repnz
int3
and
cli
mov
fcmovu
je
inc
mov
pop
fnsave
lea
aas
arpl
mov
dec
icebp
cmp
xchg
fistpl
push
jge
xchg
jno
loopne
sub
jo
or
cmpsb
pop
scas
fsub
push
adc
mov
pop
jle
sub
add
mov
jmp
sbb
mov
jl
jbe
push
mov
sub
pop
rcrb
test
dec
push
xor
and
fistpll
repnz
sub
mov
add
incl
popf
cmpsb
push
loop
jmp
pop
add
push
sbb
inc
outsl
adc
out
pop
cmpsb
stc
mov
xchg
sarl
inc
aas
fldt
mov
fistps
xor
cmp
xchg
loope
cs
test
lret
mov
aam
mov
jne
lret
js
push
cwtl
jbe
add
pop
and
stc
out
xor
in
mov
sarb
xor
pop
divl
adc
movsw
fmul
out
enter
sub
mov
mov
mov
sub
add
xor
dec
std
aas
cs
inc
fucom
jmp
lods
dec
and
push
sbb
sahf
push
jne
faddl
sti
xchg
lock
ds
pusha
lahf
jne
cmpsl
mov
mov
pusha
xchg
js
test
inc
mov
adc
in
and
push
cmpsl
mov
sbbb
std
ret
mov
pop
push
fimull
jmp
imul
cmp
cltd
mov
shl
loop
lret
int
add
sub
mov
stos
notb
mov
movsb
dec
xor
cmp
push
mov
stos
adc
mov
dec
jge
in
sub
pusha
and
repnz
mov
xchg
loopne
fs
stos
dec
daa
adc
mov
rol
int3
mov
fs
inc
dec
cwtl
jnp
lock
jno
lock
cmpb
lret
loop
cmp
xor
sub
or
xchg
jp
lahf
dec
and
cmp
jg
icebp
jae
adc
sbbl
and
cwtl
sub
cld
mov
stos
subb
into
xchg
mov
mov
and
and
gs
adc
jo
dec
xor
sti
xchg
add
das
xor
or
into
sarb
and
jae
ret
sub
push
xor
xor
dec
xor
mov
fdivrs
mov
jle
fists
jmp
cmp
xor
loopne
sbb
lds
inc
cs
push
loop
and
fwait
push
or
or
shll
rcll
arpl
jg
in
aaa
jmp
stc
xchg
xchg
fdivr
or
addr16
dec
rdpmc
inc
push
sub
popa
pusha
inc
fidivs
and
test
ficoml
cld
sbb
vpaddw
shrl
nop
cmpsb
mov
lods
add
mov
fcomps
scas
fldl
mov
sar
adc
cltd
int3
adc
loope
mov
sbbl
aas
mov
scas
pop
pop
jmp
pusha
adc
cld
sub
scas
add
ja
sub
mov
sbb
jg
mov
mov
repz
testb
aas
dec
push
pop
jmp
pop
inc
push
out
jae
dec
outsl
cmp
add
xchg
lock
loop
adc
mov
lret
cmp
sub
xor
mov
mov
pop
lods
xor
xor
cmp
hlt
xchg
and
and
inc
pop
in
jno
dec
js
mov
cmp
pop
cmp
cwtl
sbb
add
dec
fwait
pop
mov
dec
mov
lahf
lret
in
xorl
xchg
adc
sub
out
cwtl
imulb
mov
test
lret
dec
ror
and
xor
pop
pop
test
push
mov
scas
adc
js
popf
mov
xor
xchg
int
or
mov
aaa
das
ror
gs
fsts
add
adc
mov
stos
aad
add
lcall
es
in
das
lret
jg
movsb
js
jl
jnp
call
dec
mov
scas
lea
push
jge
xchg
test
cwtl
and
jg
fnstcw
inc
repnz
popa
or
mov
pusha
cmpsl
call
xor
gs
push
popf
cmpsl
mov
cs
jno
scas
lcall
mov
aaa
sbbl
out
and
ja
inc
dec
mov
icebp
imul
imul
subl
xacquire
mov
stos
mov
test
mov
movsl
dec
ds
in
in
ret
cmp
rclb
jecxz
mov
lcall
loopne
and
jnp
sbb
out
call
pop
imul
in
out
fwait
push
leave
push
in
push
pop
push
andb
or
lret
add
xchg
jno,pn
pop
mov
aaa
nop
add
or
adc
dec
enter
jno
xchg
and
loope
sbb
leave
lds
cwtl
lret
ss
popa
inc
jne
in
lods
push
add
js
imulb
xor
cmc
ljmp
scas
test
dec
mov
popf
div
orl
inc
hlt
xchg
dec
insl
imul
pushf
stos
jp
pop
cwtl
sub
call
push
inc
rclb
jle
lahf
jb
das
mov
pop
pop
sub
adc
into
fidivrl
out
cmpsl
ficomps
shlb
push
aad
add
add
jle
push
xchg
lea
andl
adc
mov
xchg
inc
ficoms
outsl
jno
call
xchg
addb
cli
inc
dec
adc
mov
fistpll
xlat
xor
adc
subb
sti
xchg
fsubp
addr16
popa
xchg
inc
arpl
fcompl
mov
outsl
idiv
nop
xor
lods
ljmp
jae
xor
mov
gs
imul
xchg
add
mov
movsb
xor
mov
in
es
cmc
rcrl
adc
jae
sub
push
in
arpl
mov
scas
add
cmp
push
das
jmp
aaa
cld
push
xor
xchg
sub
test
movsl
imul
mov
lds
andb
enter
ret
ret
push
mov
fcoms
rcl
mov
mov
push
arpl
imull
das
inc
pop
imul
gs
in
add
rorb
stos
sbb
mov
std
xor
lahf
out
mov
or
sbb
std
hlt
lahf
insl
ret
jae
nop
test
cltd
in
push
scas
pusha
mov
fdivp
sbb
mov
jmp
add
pop
jmp
xor
mov
pop
add
pusha
repnz
imul
movsl
pop
pop
adc
dec
fsubl
pop
add
aas
ljmp
add
mov
push
stos
add
call
mov
pop
cmp
stc
out
int
adcb
mov
pop
shl
loopne
push
mov
jle
xor
cmp
int
mov
cmp
sbb
lahf
xor
xor
fs
in
push
shlb
push
mov
inc
aas
and
iret
repz
arpl
movsb
xchg
in
adc
repz
add
inc
push
jg
int3
test
imul
fwait
out
lahf
sbb
push
cwtl
aam
fidivrl
pop
and
sub
adc
stc
jnp
and
imul
jmp
fld
push
aam
push
or
pusha
ret
push
add
les
jb
cltd
ss
or
or
fldenv
lea
fisubl
out
mov
sbb
ret
jecxz
push
mov
fimull
jne
and
xchg
sbb
test
lret
jbe
and
and
pop
lds
fs
hlt
sbb
test
lea
ficomps
ror
pushf
cmp
mov
pop
or
sub
xchg
es
nop
adc
xlat
jno
or
fnstcw
mov
jecxz
popa
ficompl
jnp
push
dec
sub
into
xchg
popf
xchg
in
sbb
add
test
dec
rclb
out
dec
movsb
xor
data16
ret
cmp
lods
mov
int3
cmpb
xorb
loopne
sub
adc
jmp
mov
push
push
sub
mov
cmp
cltd
mov
and
outsl
fisttps
int3
loope
push
stos
sets
add
and
or
add
mov
lret
cmp
divl
pop
mov
pop
or
je
push
push
std
mov
mov
add
movsl
lahf
arpl
pop
leave
pop
fidivs
test
int
xor
popf
jb
inc
fdivrp
mov
out
fcompl
cmovle
scas
fsubl
cmpsl
jne
out
mov
xchg
imul
out
pop
mov
push
sbb
cmpsb
pop
dec
jg
aam
xchg
popa
jl
or
fisubrs
std
inc
dec
inc
mov
inc
ljmp
ret
push
adcb
xor
pop
xchg
inc
inc
adc
pusha
adc
lret
jo
xchg
insl
mov
stos
pushf
ret
fmulp
scas
nop
cmp
push
test
cmp
mov
sub
mov
and
sbb
jnp
out
mov
out
jmp
outsb
popf
cmc
dec
sbb
mov
mov
dec
mov
ds
inc
leave
xor
or
lea
js
cmp
adc
mov
mov
add
scas
negl
into
nop
or
mov
test
fbstp
mov
andb
aam
add
mov
jns
sub
cmp
into
aam
pop
aad
dec
adc
pop
mov
mull
adc
sarl
rolb
jno
jae
out
xor
inc
movsl
push
ret
sti
sbb
xchg
xchg
xlat
dec
aam
out
iret
adc
test
bound
push
in
inc
jne
push
data16
pusha
shlb
jne
cwtl
mov
enter
xor
mov
lcall
out
insl
push
jg
xor
ja
mov
push
nop
dec
adcl
xchg
cmp
outsl
mov
xor
sub
cmp
dec
jae
cmp
mov
sarb
inc
xor
adc
adcl
push
jno
arpl
xlat
sbb
loopne
test
inc
pop
icebp
in
cmp
jb
dec
insl
xor
lds
jne
loope
lods
and
dec
cmc
xor
dec
mov
lea
popf
pop
jns
insl
sub
inc
shll
xorl
sahf
jnp
ja
and
fwait
xor
add
jbe
inc
out
lods
lods
insb
stc
icebp
add
jo
push
clc
push
cwtl
mov
sbb
sub
jmp
adc
ror
fwait
or
add
fcoms
repz
pop
sbb
in
mov
loopne
cmp
ret
sub
test
and
and
jg
shrb
cmp
add
loop
into
jno
ret
scas
mov
cmpsb
cmp
dec
xlat
cld
cwtl
cli
mov
and
jo
mov
imul
jb
scas
pop
xlat
mov
add
sub
inc
cld
adc
and
or
mov
sti
adc
movsl
cli
jecxz
pusha
or
pop
xor
sub
ljmp
hlt
adc
pop
jmp
out
fbld
sbb
adc
loopne
jo
push
inc
das
inc
xor
enter
push
sti
sbb
in
push
push
push
jg
pop
faddp
cmp
jne
fdivs
in
aad
pop
or
mov
addl
sbb
cmp
xlat
jno
xchg
icebp
call
mov
dec
or
sbb
pop
mov
les
je
testb
insl
hlt
mov
cmp
jb
sahf
pop
in
add
popl
push
pushf
pushf
jl
mov
push
or
xchg
jnp
sub
repnz
jnp
stos
xchg
xchg
jmp
mov
jle
dec
push
out
bound
cs
jge
fstps
mov
mov
mov
gs
cli
cmp
pop
adc
iret
jg
fiaddl
push
push
sub
jle
pushf
mov
divl
movsb
xchg
fwait
or
add
daa
out
and
xchg
iret
adc
adc
inc
pop
hlt
aas
je
inc
std
xor
shl
inc
jg
or
loopne
incb
inc
arpl
outsb
testb
add
jns
loopne
aad
mov
push
inc
out
push
pop
or
adc
mov
aaa
add
mov
gs
inc
loope
xor
leave
add
mov
popf
pop
sarb
loopne
jecxz
xchg
sbb
cmp
sbb
in
stos
leave
dec
jno
imul
aam
aad
adc
lods
cwtl
add
aam
push
xchg
out
jbe
imul
ja
out
cwtl
sbb
fsubl
daa
or
dec
push
jb
inc
test
fwait
ss
xor
add
push
das
imul
les
adc
pop
das
and
pop
or
mov
or
push
clc
cmpl
mov
add
lahf
cmc
and
in
xchg
ret
dec
cmc
addr16
jp
out
je
xchg
ficomps
mov
call
shrb
mov
inc
insb
in
je
xor
mov
push
je
cmp
aad
push
out
jnp
sub
leavew
fs
push
pop
push
push
sub
enter
adc
adc
repz
ss
mov
sbb
fldl2t
aam
mov
sbb
dec
ljmp
push
pop
xor
push
or
dec
sbb
pop
lahf
aaa
adc
adc
movsb
push
inc
lret
mov
outsl
ret
inc
lock
and
jb
pop
divb
mov
mov
cmp
or
lock
sbb
jecxz
imul
shlb
in
push
test
push
pop
jnp
sub
mov
pop
aam
add
pop
nop
inc
mov
je
jl
push
xor
mov
mov
mov
clc
sub
cli
jecxz
xchg
cmp
fmuls
inc
fst
in
das
pop
push
mov
ja
loop
push
push
nop
bound
lods
es
mov
add
jo
les
pop
jg
aas
push
into
sbb
mov
fisubrl
xor
mov
mov
std
lea
bound
aam
push
and
gs
jg
mov
mov
mov
fsubl
out
mov
jae
mov
shll
fistps
addr16
lret
pop
bound
sub
mov
sbb
or
push
inc
test
mov
push
xchg
out
sub
loop
shrl
int
sbb
adc
sbb
mov
push
mov
mov
adc
inc
movd
or
test
inc
jl
sti
pop
dec
mov
repnz
cmp
inc
add
xchg
sub
cmp
fidivrs
lret
ss
mov
js
shll
cmpsl
lods
enter
mov
lds
test
add
cltd
adc
xchg
dec
jns
leave
adc
inc
mov
lock
mov
or
mov
pop
mov
out
pusha
mov
addl
or
outsl
xchg
hlt
xchg
xor
cmp
xchg
add
mov
mov
cli
mov
imul
lcall
sbb
lds
rcrl
ror
divb
xchg
sub
ret
loop
mov
int
sbbb
mov
jne
lret
pop
cld
xchg
bound
cbtw
shlb
push
mov
lea
addl
ror
add
mov
mov
cmc
jmp
adc
aaa
insl
mov
cmpsl
adc
dec
dec
sbb
out
and
cmc
add
pop
shlb
fidivrs
fsubp
xchg
pop
int3
mov
xchg
imul
in
add
mov
stos
jg
subl
jg
pop
adc
andb
xor
rclb
or
inc
cltd
adc
sti
push
mov
inc
shrl
stos
aas
or
pop
mov
out
dec
insb
inc
mov
sub
jno
into
outsb
push
ss
inc
and
mov
cwtl
out
push
push
hlt
movswl
xchg
cmpsb
or
mov
mov
jp
fwait
jo
sbb
push
push
jge
outsl
or
pop
add
pop
cmc
mov
imul
pusha
sub
mov
jmp
xor
mov
dec
push
sub
mov
add
inc
dec
xor
fstpt
pop
xchg
stc
mov
xchg
push
ljmp
mov
jecxz
into
pop
clc
daa
push
outsb
inc
xor
data16
popf
inc
lahf
jp
cwtl
xchg
mov
daa
mov
mov
mov
es
mov
jno
data16
push
int
out
test
fsubl
jmp
in
popf
imul
iret
sub
rcrl
dec
sub
sahf
stos
mov
in
movsb
xchg
cmp
insl
rcrl
fisttpll
pushf
push
fisttpl
jl
fistl
and
pop
inc
pop
mov
loop
shlb
push
imul
sar
xchg
mov
xor
jae
push
lret
jno
xchg
mov
xchg
mov
leave
cltd
mov
dec
pop
mov
dec
push
cmpsb
mov
dec
pop
clc
out
cs
lret
xor
ds
jecxz
lahf
push
scas
andb
stc
push
sub
sbb
add
xlat
shl
jb
push
nop
inc
fcomip
call
mov
sub
mov
out
unpckhps
iret
adc
mov
rcrb
inc
lods
dec
fstl
sahf
xor
and
inc
test
cmc
mov
pop
test
dec
out
mov
aad
in
std
aad
into
or
sbb
outsb
cmp
je
mov
mov
mov
push
mov
inc
xchg
test
mov
cs
mov
in
cmp
mov
adcb
notb
sti
clc
lea
push
cmp
mov
movsl
push
int
lock
lea
aas
adc
sbb
int3
mov
or
jmp
xchg
xor
shlb
xchg
arpl
test
pop
jp
fdivrp
lds
cmp
lret
jnp
or
fildl
mov
xor
jne
je
or
pusha
mov
xchg
cmc
rclb
enter
in
movsl
lret
push
lods
arpl
sbb
dec
xchg
stos
aas
test
jno
mov
inc
data16
fsubl
jp
inc
jne
inc
jmp
pop
lea
inc
or
adc
inc
out
sbb
push
jbe
js
xchg
mov
sbb
dec
loope
pop
sbb
dec
pop
xor
shlb
add
pushl
cwtl
dec
sub
lcall
add
jb
sub
cmp
sub
test
insl
sub
mov
jmp
inc
inc
out
lahf
lcall
sbb
test
jae
adc
je
dec
cmpl
cli
imul
jge
stos
cmc
fidivrs
aas
or
xchg
mov
fbstp
sarl
mov
inc
out
adc
mov
mov
bound
jo
adc
cmp
daa
clc
ret
sub
xor
ficomps
mov
stos
push
js
cmp
and
fdivs
mov
fsincos
out
push
rorl
pop
hlt
mov
rcrl
fsubrl
or
je
xchg
xor
push
xchg
fdiv
cmp
insb
add
or
hlt
aaa
sub
icebp
pusha
mov
jge
outsl
jecxz
adc
rorb
mov
cmc
mov
scas
or
pop
in
into
add
inc
outsl
movsb
pop
xchg
int3
mov
mov
pop
cmp
jns
push
push
iret
subl
add
jle
sbb
loopne
mov
lahf
int3
pop
pmulhuw
rclb
dec
scas
lds
cmpsb
mov
andb
jle
andb
inc
shll
sahf
pop
imul
and
fcomi
jno
insb
pop
cmp
add
sti
push
or
js
mov
es
fildl
jmp
int3
pop
dec
rorb
jno
test
ret
dec
sbb
push
pop
scas
aaa
sbb
loop
push
adc
lods
mov
sbb
cmp
pop
xchg
xor
lea
mov
cli
cwtl
sbb
lret
std
icebp
add
sbbb
je
in
jge
add
push
push
mov
clc
icebp
xchg
mov
dec
jbe
cmc
adc
lea
xlat
test
lahf
les
outsb
scas
lea
out
inc
adc
cmp
js
fidivrl
ds
jmp
pop
add
adc
outsl
sub
adc
fisttps
enter
mov
test
sub
out
jo
xchg
mov
dec
mull
icebp
jae
sub
pop
jae
fsub
pop
mov
rcl
push
pop
pusha
int3
xchg
mov
ret
movsb
pusha
xchg
aas
into
std
and
jnp
push
sbb
nop
jno
add
adc
xlat
mov
dec
mov
in
ja
lcall
fisubrl
rol
push
pop
daa
jg
dec
lcall
cmc
cltd
mul
jge
insl
or
sub
add
xchg
lods
pop
push
int
inc
pop
mov
scas
add
adc
sub
fistpll
pop
jne
push
mov
test
and
lock
ds
popa
loop
popf
dec
lret
sub
aaa
pop
pushf
faddl
or
dec
pop
arpl
lret
ds
outsl
out
dec
or
dec
inc
and
mov
loope
addr16
insb
xchg
dec
xor
fsubl
std
push
mov
stc
jo
inc
inc
mov
pop
outsb
pusha
mov
jl
inc
repnz
and
popa
xor
inc
push
cltd
jge
cs
pop
add
fcmovu
sti
adc
enter
pop
sti
push
insb
adc
rolb
fwait
dec
jmp
lock
push
mov
es
jle
shll
xchg
mov
fisubs
std
dec
dec
adc
fsubrl
pop
repz
xor
dec
fildll
outsb
mov
sbb
push
aaa
sbb
push
push
nop
adc
or
out
imul
insl
mov
add
test
shrb
xor
xchg
pop
xlat
or
and
mov
adc
stos
sbb
push
repnz
addr16
and
xchg
dec
xlat
fstpt
out
cmp
loope
and
lock
push
push
xor
push
rolb
pop
out
and
das
bound
aam
lcall
out
mov
adc
mov
push
mov
ret
pop
mov
mov
imul
mov
xchg
mov
jns
arpl
xor
cmpsb
mov
push
test
roll
xchg
sbb
jo
ret
das
dec
lahf
jno
mov
js
out
in
nop
mov
loop
daa
or
popa
push
sbb
or
adc
in
clc
ret
adc
push
ret
mov
add
notb
in
lea
mov
in
xchg
mov
lods
leave
sbb
pushf
aad
idiv
stc
or
arpl
xor
add
mov
outsl
xchg
arpl
enter
sahf
xchg
push
fisttps
push
cmp
leave
or
add
push
int
ja
mov
sub
in
popf
push
jg
push
dec
xchg
dec
adc
es
sahf
arpl
mov
xchg
mulb
inc
cmp
loop
lds
push
cmpsb
loope
call
test
hlt
jp
imulb
lock
mov
jbe
xchg
dec
mov
xor
insb
rol
or
js
mov
mov
mov
daa
and
adc
std
fwait
adc
js
xchg
call
dec
cmp
stos
out
pop
pop
mov
lds
shrl
mov
push
cmp
cli
addr16
mov
dec
popa
ja
mov
and
cmpsb
lahf
jmp
mov
in
fdivrl
fbstp
adc
and
cld
push
mov
and
pop
mov
popf
mov
shlb
repz
jno
cmc
out
test
adc
add
sbb
in
test
lods
mov
imul
je
push
sbb
inc
xor
push
dec
sbb
mov
jecxz
jnp
or
xchg
cwtl
insl
lds
mov
add
mov
xor
cwtl
std
lret
gs
std
dec
jecxz
ds
rcrb
jbe
fistpll
push
xchg
clc
jno
push
sti
incb
pop
lds
mov
pop
jno
inc
add
aam
push
adc
das
dec
addb
cmp
testb
mov
ljmp
add
movsl
mov
movsb
movzbl
dec
mov
iret
aam
xlat
inc
push
cmp
shrb
mov
iret
or
or
push
mov
pushf
in
in
push
outsl
imul
jle
pusha
pop
mov
into
and
mov
xchg
or
xchg
lock
stos
jno
scas
sbb
mov
out
out
dec
fdivs
cld
add
cltd
arpl
mov
mov
push
fstl
rcr
jl
scas
xor
push
ficompl
stos
mov
call
cmp
testb
imul
adc
xor
icebp
push
push
aas
push
jae
aam
cmp
push
add
cmp
mov
add
jo,pt
xor
jno
out
mov
and
cmp
mov
sub
adc
mov
push
scas
push
dec
aad
sub
les
nop
fdivp
xchg
push
cli
rcr
mov
hlt
outsl
mov
push
jo
pop
hlt
in
data16
loopne
jl
add
sub
ss
mov
out
pop
xor
mov
popa
fisttpll
rol
xlat
mov
cli
mov
fiaddl
add
jno
jns
shrl
mov
cld
dec
xchg
sub
fadd
pusha
and
loop
add
aaa
push
mov
idivb
dec
jmp
loopne
cmpsl
cmp
and
icebp
add
repz
lret
xor
jbe
xchg
push
fwait
sahf
jle
cmpb
jp
out
mov
lods
mov
dec
jo
push
test
into
cmpsb
and
and
fwait
lret
lods
lcall
ja
enter
flds
out
push
mov
mov
imul
loop
rol
push
xchg
inc
jge
cmp
mov
push
or
mov
ret
stos
push
pop
pop
addr16
rorl
xor
sbb
in
pop
std
sub
pop
into
cmp
popa
cli
std
sub
and
inc
add
rcrb
das
jbe
out
or
pop
js
lock
mov
iret
mull
testl
mov
sub
daa
sub
pand
jmp
cmpsb
sub
pusha
lcall
in
cmp
int
mov
les
repz
push
fisttpl
imul
xorl
xor
pop
into
xchg
push
fstl
push
rcrl
fdivl
adcb
push
sbb
and
mov
ret
fiadds
out
test
arpl
ret
test
icebp
stos
repnz
lds
cltd
test
jo
arpl
insl
sub
shl
mov
fcoms
sbb
aaa
lods
push
ss
jl
ret
sbb
xor
out
cmp
cmp
xchg
es
jae
or
add
pop
in
xor
mov
adc
testl
sti
sbb
sub
cmp
or
and
adc
divb
rol
push
inc
clc
cmp
cltd
cwtl
movsb
dec
mov
adc
pop
mov
push
into
sbb
js
test
inc
xchg
or
insl
adc
lahf
incb
xchg
rorb
xor
ds
stc
xchg
pop
xchg
sub
or
push
ret
dec
push
mov
xor
cmp
and
pop
jp
dec
add
fdivrl
or
lret
or
sub
and
aad
jbe
push
xchg
repnz
xor
in
stc
and
rorl
adc
cmp
cmp
push
xlat
dec
jl
movb
aas
inc
stc
icebp
ljmp
test
push
cli
pop
arpl
push
aad
loope
mov
inc
and
lods
xchg
inc
out
pop
out
jl
mov
or
out
subl
les
jns
notb
popf
xchg
or
and
out
sub
rcr
mov
das
fisubl
fidivrs
mov
or
dec
fmul
dec
adc
popf
ja
pop
nop
cltd
les
pushf
mov
xchg
cmp
pop
fistpll
outsb
mov
cmpsb
mov
imul
inc
push
fnstcw
aad
popa
loope
mov
pop
push
jns
and
jl
sarl
loop
adc
add
incl
push
fadds
mov
xor
cs
mov
mov
andb
insl
cs
movsb
fisubrl
jp
mov
lock
es
cld
inc
lahf
vphaddudq
jle
push
adcl
notb
loope
adc
inc
xchg
mov
int3
lods
xchg
xor
mov
xor
test
mov
mov
xor
xchg
cmc
push
out
jb
sti
test
call
pop
inc
sbb
dec
outsb
dec
dec
es
jecxz
rcll
sub
mov
lcall
sub
pusha
add
test
xor
lock
repz
jbe
outsb
ja
adc
rol
loopnew
add
pop
jecxz
push
int
andb
mov
or
imulb
push
inc
add
in
test
inc
or
push
imul
pop
dec
fdivr
cmp
xor
cwtl
fisttpl
adc
xor
and
insl
push
jle
push
cmc
xor
test
rcrl
pop
sahf
daa
sub
mov
je
idiv
shll
mov
fs
outsb
ja
cmpsb
aas
aad
dec
push
dec
test
out
out
pop
cmp
js
movb
ret
shlb
and
lcall
adcl
lahf
int
pusha
mov
and
dec
popf
loopne
pop
into
mov
cld
dec
fldt
in
xorb
add
xchg
and
and
sarl
mov
subb
xchg
dec
jmp
lret
lods
cli
sub
cmp
insl
stc
adc
cs
xchg
orl
mov
cli
push
add
dec
icebp
roll
aaa
jmp
ss
xchg
dec
mov
stos
cmp
cmc
rolb
add
xchg
or
cmpl
xor
sbb
stc
or
pop
popf
jb
test
and
or
dec
mov
fisubl
adc
mov
jecxz
xchg
loop
out
es
inc
push
pop
dec
push
or
mov
or
repz
mov
lods
push
hlt
insl
loop
xlat
out
test
lret
pop
adc
mov
sti
jmp
mov
inc
xchg
lds
fbstp
in
scas
int3
cld
call
mov
outsl
push
inc
cwtl
add
push
rorl
and
ds
lods
enter
and
pop
xor
ljmp
std
cmp
pop
lret
imul
in
push
int3
out
jge
cmp
add
sbbl
jbe
xchg
dec
cmpsl
nop
adcb
mov
xchg
inc
jbe
stc
xchg
dec
xlat
mov
mov
xor
sahf
int3
mov
cmp
inc
and
lods
shr
mov
xor
jnp
out
lahf
inc
aad
dec
add
movsb
int
scas
mov
inc
jecxz
call
push
sub
hlt
filds
in
cmpsl
add
scas
jne
rclb
insb
call
xor
aad
repnz
cld
mov
arpl
xchg
jbe
adc
xchg
xchg
out
add
popf
bound
jle
cmc
lahf
jne
mov
xlat
xchg
mov
rorl
jge
sbb
sub
dec
int
pushf
xor
repz
stos
scas
or
test
sbb
sbb
loope
push
inc
divl
pusha
xchg
fisttpl
iret
pop
mov
xchg
jmp
add
loope
out
mov
and
imul
inc
add
mov
xchg
lcall
das
adc
mov
es
and
jp
sub
cmp
jl
xchg
sub
sbb
pop
imul
shlb
pop
and
shll
add
add
adc
push
sti
loop
mov
out
mov
imul
lret
xchg
imul
inc
subl
xchg
and
dec
and
jl
mov
fldt
sbb
fwait
push
inc
adc
test
pop
add
in
rcrl
dec
out
pop
push
shrb
pop
dec
imul
mov
and
jbe,pn
stos
sub
daa
jne
add
mov
jae
je
aam
mov
pop
sbbb
mov
xchg
imul
dec
xchg
lahf
out
mov
dec
fsubrl
cmp
jb
xchg
jb
mov
shlb
movb
sbb
mov
ret
movsb
or
inc
test
xor
test
pop
push
insb
ss
int
mov
fwait
jmp
jle
push
sarb
jle
rcrl
mov
popa
ljmp
mov
jne
arpl
sbb
pop
in
sub
popa
mov
sbb
add
mov
std
pop
dec
lods
sub
dec
inc
in
fwait
loop
xchg
or
test
movsb
push
adc
cld
dec
adc
mov
movsb
incb
rol
leave
jg
mov
lods
mov
js
in
in
test
xchg
loope
ds
ss
sbb
ss
mov
ss
ja
decb
outsb
fwait
scas
cmpsl
daa
or
mov
mov
push
xor
mov
clc
test
xchg
add
in
ss
int
sbb
outsb
inc
add
repnz
outsl
cmp
daa
rcll
ficoml
inc
sub
loop
dec
int
jg
enter
xor
data16
cltd
mov
add
dec
das
jb
xor
mov
sbb
jbe
dec
imul
in
lock
jo
in
inc
frstor
mov
pushf
add
sahf
aas
and
pop
jns
xchg
pop
div
loope
jge
xor
loope
inc
fs
popf
inc
sub
imul
inc
gs
stc
jp
mov
dec
popf
fildl
inc
cmp
rolb
mov
fcompl
push
out
scas
cli
cltd
pop
inc
xchg
jb
hlt
int
ret
rep
push
mov
in
adc
push
jle
lcall
mov
jl
dec
lret
and
test
cmpsl
insl
loop
hlt
aas
add
aam
jle
test
or
scas
ret
loopne
cli
mov
push
out
outsb
je
into
mov
push
testb
loope
pop
add
mov
mov
xchg
and
jge
dec
xchg
xor
cs
in
xor
fidivs
imul
dec
ds
or
mov
and
inc
mov
loop
dec
bound
movsb
cmpsb
dec
add
sarb
cmpl
movsl
xor
out
jle
adc
dec
inc
jno
add
in
pop
aaa
dec
shll
mov
xor
in
push
mov
mov
inc
xchg
cmpb
pusha
loopne
in
je,pt
ja
lock
jmp
rorl
pop
pop
test
jae
xor
mov
adc
out
and
cmpb
cmc
fnsetpm(287
add
pop
adc
aad
jp
cmpsl
sub
xchg
inc
sub
int3
cmpsb
inc
mov
stos
dec
and
out
jle
cmpsb
lret
xor
pop
lahf
push
lea
mov
fwait
sub
xor
pushf
jl
repnz
aaa
mov
loop
inc
sbb
clc
in
mov
ret
xor
std
inc
xchg
cld
mov
dec
mov
jg
fstpl
pushl
icebp
adc
and
dec
sbbb
xor
xor
cli
addl
rcr
and
addb
dec
call
iret
data16
add
mov
fldl
js
dec
dec
fxam
sub
sub
sbb
cli
jns
mov
std
dec
stos
popa
fadds
sbb
jl
outsb
sub
mov
pop
jno
cmp
xor
push
cmpsl
sarb
rclb
and
test
dec
mov
pop
jno
stos
jo
sahf
hlt
push
gs
test
ljmp
ja
mov
push
das
mov
cmp
imul
mov
dec
jg
lcall
lods
xchg
out
icebp
xchg
or
mov
shll
push
sub
xor
xchg
push
sub
dec
jl
push
jle
or
cmp
and
xchg
test
nop
xchg
push
ja
jmp
inc
sbb
fucomi
pop
mov
enter
ljmp
jno,pt
pop
shll
jnp
pop
sbb
mov
jge
fmuls
testb
fiadds
inc
xchg
stos
xchg
pop
lock
repnz
xchg
sbb
std
mov
mov
fdivrl
ret
jae
in
std
mov
jg
cli
inc
and
jp
push
call
cmp
cwtl
js
mov
repnz
dec
aam
pop
mov
inc
div
das
out
push
stos
sub
push
data16
xlat
sbb
mov
fildl
arpl
aas
repnz
lock
push
es
mov
repz
nop
pop
in
fsub
js
fsts
jo
xchg
add
pop
mov
add
test
add
stc
ficoml
cmpsl
xchg
cmp
mov
mov
arpl
addr16
mov
rcll
rolb
outsb
fld
push
outsl
aas
xor
and
stc
xor
add
lods
mov
jno
ret
inc
insb
pop
into
pop
or
sbb
lea
loope
adc
jg
cltd
inc
int3
imul
cwtl
test
jne
xlat
enter
dec
sub
shll
out
mov
xchg
adc
cmpsb
in
and
ficoml
inc
inc
mov
fwait
dec
pop
cmp
in
sbb
out
lahf
outsl
fsubrl
mov
xchg
cmp
mov
mov
sub
test
pop
pop
incb
jmp
ror
shl
push
bound
in
cmp
pop
xor
popf
lock
rolb
int3
cmpsb
xor
xor
inc
sbb
lret
or
hlt
loopne
orl
jge
sub
add
insl
aaa
dec
scas
jmp
out
sbb
out
mov
int3
mov
aam
ja
divb
xchg
pop
xchg
rolb
dec
rorb
cli
dec
js
jns
or
push
xchg
mov
cmpsb
movsl
or
daa
rclb
dec
mov
sbbb
xlat
lret
shl
stc
pop
push
mov
fdivs
cs
jg
push
aas
rcrl
scas
mov
pop
xchg
inc
mov
es
ficoml
xchg
lock
std
aam
cmp
jp
cmpsl
pop
push
or
cmp
pop
lods
arpl
pop
fisubrs
loop
push
sarl
xor
cmp
add
pusha
rorb
add
dec
scas
jle
cli
and
mov
pop
scas
movsl
lds
dec
vpcmpeqb
mov
cmp
push
pop
sarl
push
cmp
sub
cmpsl
adc
mov
and
mov
mov
mov
imul
adc
sub
and
sub
pop
sti
out
out
cwtl
mov
add
in
gs
mov
pop
lods
dec
movsb
mov
push
mov
iret
mov
push
out
xor
jbe
fdivl
or
inc
cmp
imul
mov
push
inc
pop
xor
test
rcrb
das
sub
mov
pop
push
jle
push
or
popf
adc
add
sahf
cmp
xor
dec
fdivrs
push
pop
xchg
out
mov
insl
sbb
ret
dec
jmp
and
lods
data16
js
xchg
and
in
popf
sbb
shll
pushf
xchg
jo
push
movsl
jg
jg
mov
imul
cmpsb
sbb
lods
sub
les
xlat
jecxz
xor
push
jb
ret
mov
aad
pop
pop
xchg
push
dec
sub
inc
push
popf
jbe,pt
dec
push
jno
fmull
lahf
add
or
jo
mov
into
inc
xor
sub
sbb
adc
js
into
cmpsl
mulb
addr16
jge
cmp
loop
sbb
fisubs
imul
push
push
inc
inc
or
cld
in
sbb
ss
in
fwait
sahf
inc
and
and
and
cmp
lret
movsb
shlb
es
iret
loopne
js
sbb
dec
scas
dec
and
fmull
outsl
xchg
sub
or
xor
call
and
push
xchg
adc
pop
es
jno
stos
fdivrp
orl
mov
sti
dec
sub
mov
pop
mov
xor
mov
cmp
jns
lods
inc
push
push
in
inc
je
adc
mov
cmpsl
int3
or
mov
lds
das
pop
daa
xchg
fnstenv
mov
or
mov
lods
push
in
mov
imul
sbb
dec
dec
mov
clc
lahf
addr16
and
int
jmp
ss
sub
mov
rorb
add
mov
sub
imul
mov
sub
in
push
rol
jg
loope
xchg
jge
and
lcall
out
out
or
int
sub
xchg
inc
andb
stos
add
lock
popa
insb
jecxz
mov
repnz
and
sub
ret
mov
push
dec
push
add
adc
dec
mov
or
cmc
test
mov
mov
jmp
xchg
dec
mov
mov
sbb
ret
dec
and
ficoms
push
jle
int3
jne
push
mov
mov
mov
pushf
cmpsb
push
mov
dec
inc
les
adc
dec
mov
jmp
sbb
insb
movsl
mov
out
dec
pushf
testb
int3
pusha
mov
cs
mov
popa
outsb
jae
dec
dec
mov
mov
fwait
hlt
adc
mov
and
daa
insb
fiadds
add
jo,pt
push
push
or
sbb
subl
negb
and
push
dec
aas
pop
mov
adc
fs
and
clc
pop
xchg
jne
xchg
inc
stos
mov
cmp
aas
pusha
mov
sbb
push
in
adc
pop
pop
push
add
add
roll
sub
into
fiaddl
jb
adc
cli
out
lcall
dec
mov
dec
pop
pop
adc
add
and
jbe
pop
cmp
sbb
lods
shll
xchg
dec
mov
rorl
clc
lods
inc
jno
mov
rcrl
inc
push
jne
std
aam
cmp
imul
inc
in
fistpl
xor
gs
rclb
adc
xor
sti
lea
daa
lods
lret
out
mov
lahf
cmpsl
cwtl
out
rcrb
pushf
sbb
fwait
pusha
mov
push
xchg
cmp
popa
or
jp
jmp
dec
ds
pop
adcl
call
repnz
inc
stc
and
insl
cmpl
xchg
cmp
orb
jle
mov
jno
int
fs
pop
inc
insb
fwait
xchg
arpl
sub
icebp
adc
dec
ss
xor
pop
dec
adc
adc
jae
fstps
out
lcall
aam
pop
addr16
jb
shll
jp
jp
sbb
mov
xchg
test
jge
push
lret
dec
cmp
fadd
jne
and
jmp
popf
pop
int3
lahf
bound
leave
sub
mov
test
and
arpl
cwtl
push
mov
push
xor
adc
mov
sahf
loop
pop
in
lds
pop
rcll
mov
xchg
out
push
in
cmc
xchg
xor
pop
test
mov
inc
imul
subb
stos
iret
sbb
jns
sub
bound
iret
push
mov
jno
inc
add
mov
jge
push
mov
aam
dec
js
cmpsb
mov
mov
loope
sti
mov
sbb
loopne
ss
add
loope
push
jno
mov
je
insb
mov
test
mull
sub
push
cmpsb
push
es
ja
add
fmull
xchg
shrb
and
add
fwait
jg
jne
je
pop
out
pop
xchg
xlat
mov
das
jns
sbb
mov
mov
icebp
lods
mov
mov
loopne
rolb
or
mov
test
sbb
pop
dec
and
unpcklps
std
push
mov
sub
dec
mov
xor
outsb
mov
js
shl
cmp
movsb
xlat
push
idivb
popf
in
mov
mov
mov
sub
push
inc
push
jb
xor
mov
fldt
repz
or
pmulhw
aam
pushf
ret
and
or
bswap
int3
stos
cltd
lret
test
cld
adcl
repz
and
clc
pop
sub
or
jl
pop
insb
pop
mov
add
lret
add
push
es
andl
das
cmpsb
lods
jle
sub
rcll
add
outsb
xor
mov
pop
negl
mov
popl
jle
cmp
mov
xor
fcoms
hlt
loopne
inc
cmp
or
mov
cmp
test
mov
repz
adc
sbb
rclb
and
jo
sbb
xchg
sbb
xor
xor
cmp
adc
out
push
add
pusha
pop
jo
and
adc
rolb
mov
stos
jne
adc
mov
stos
ret
mov
aad
jno
repz
mov
into
push
pop
flds
in
inc
adc
movsb
sub
rolb
add
lret
mov
sbbl
mov
pop
xchg
mov
sbb
sbb
aad
mov
test
push
xor
pop
bound
inc
out
add
jmp
ret
xchg
out
dec
mov
sti
sahf
push
inc
push
sub
mov
sbb
shr
mov
add
popf
fists
loope
inc
bound
imul
pop
lret
int
sbb
fbstp
rclb
dec
xchg
or
addr16
fcomip
clc
mov
test
sti
repnz
jecxz
jae
and
int3
aaa
lds
out
add
sub
mov
movsl
lret
or
repz
scas
pop
xchg
and
sub
pop
or
jno
dec
cmpsl
iret
xchg
addr16
cmp
loop
mov
dec
fmuls
repnz
pop
scas
push
fsubrs
stc
xchg
xor
scas
jns
jns
cmp
out
push
pushf
jns
sbb
test
mov
xchg
add
adc
fbld
or
stos
push
mov
jne
lea
or
sti
fisubl
in
or
test
stos
cmpb
xchg
pop
movsb
in
pop
push
sbb
mov
rcr
mov
push
jg
pushf
ja
bound
nop
sbb
mov
add
aam
popf
jmp
adc
imul
mov
jg
movsb
xor
xor
pop
add
xchg
mov
push
lea
push
es
dec
fimull
push
inc
and
ret
mov
xchg
mov
dec
xchg
inc
lods
adc
jne
pop
jge
jge
es
mov
add
xchg
mov
lret
dec
js
fisttpll
sbb
xchg
imul
pop
sbb
and
push
jge
into
cmp
pop
insl
add
pushl
enter
es
test
xchg
lahf
dec
pushf
in
jne
xchg
jne
jb
call
and
cltd
mov
adc
inc
xor
pop
cmp
xchg
pop
sub
repz
and
xor
fdivrs
xor
mov
cwtl
fistps
data16
lods
or
popa
fiadds
pop
push
pop
outsb
aad
mov
sub
out
xor
leave
sbb
mov
pop
push
lea
mov
mov
mov
pop
mov
push
cmp
xchg
adc
and
or
iret
ljmp
cs
sbb
xor
dec
sbb
xor
add
cmp
add
shrb
imul
pop
and
and
adc
jb
movsb
mov
into
inc
insb
rolb
xor
xor
inc
outsb
psllw
cmp
outsl
or
cmpsl
testl
daa
push
dec
cwtl
andb
push
repnz
lods
jno
int
popa
inc
enter
shlb
pop
out
adc
imul
adc
and
aas
push
shr
mov
sub
jno
stos
mov
daa
cmp
push
and
addl
cld
aaa
into
notb
jmp
and
xchg
dec
add
cltd
sbb
mov
dec
clc
pop
das
in
mov
mov
aaa
daa
add
je
mov
hlt
sub
movsl
fisubrl
in
jg
iret
inc
test
mov
jo
scas
into
inc
pop
adc
xlat
mov
int3
push
inc
fsubs
ror
jle
bound
adc
push
jp
fs
mov
inc
dec
jg
ret
test
sub
add
outsl
loope
and
add
insl
jo
cmp
cwtl
inc
xor
mov
and
jmp
mov
decl
inc
xchg
loopne
push
push
in
adc
cs
cmp
mov
popa
cmp
xor
cmp
adc
insl
mov
aas
roll
push
dec
lods
shll
insl
xor
add
adc
cmp
in
mov
cmp
mov
imul
xor
aaa
clc
cmp
iret
jb
jp
fidivrs
scas
aaa
push
jb
and
test
ja
push
das
aaa
scas
rol
out
dec
sbb
mov
mov
jns
mov
addr16
push
in
inc
mov
push
sbb
cmp
mov
jne
adc
std
pop
adc
enter
inc
repnz
imul
adc
inc
fs
in
add
mov
sub
in
in
sub
mov
cltd
pop
cmp
jb
aaa
int3
ja
ja
scas
ret
adc
jae
lcall
or
and
cmp
push
pop
loopne
push
gs
sbb
pop
push
xchg
icebp
jne
test
sub
mov
pop
mov
pop
bound
xchg
iret
lock
add
mov
test
jo
rcr
add
leave
leave
pop
test
dec
adc
or
sbb
daa
xor
and
int
movsl
dec
lret
gs
scas
outsb
out
mov
std
or
sbb
mov
data16
dec
jp
push
int
mov
lret
clc
add
pop
mov
mov
aad
mov
in
ds
cltd
add
jmp
mov
mulb
incl
add
aam
pushf
movsl
sahf
mov
std
aam
adc
repz
and
cli
pushl
dec
into
adc
or
cmp
stos
dec
jo
arpl
aad
sub
sbb
incl
inc
push
pop
ret
jp
jge
sub
mov
rcrb
cs
incb
fistpll
jne
jle
loope
sti
in
mov
push
out
add
cmpsl
dec
push
adcb
int
cmc
sahf
cmc
cwtl
mulb
jp
ss
cmpsl
cwtl
jb
mov
xchg
adc
jno
or
ret
push
pusha
pusha
mov
int3
test
int
psllq
outsl
cwtl
pop
cmp
add
inc
mov
mov
test
push
fsubr
push
hlt
out
pushf
xchg
ret
jo
inc
jno
cmp
aas
and
shlb
popf
arpl
and
add
xor
mov
mov
inc
mov
jae
iret
sub
lds
or
xor
push
and
dec
sahf
cmp
xchg
inc
in
in
adc
fmull
scas
xchg
jb
dec
xchg
ds
aad
push
call
cs
dec
test
loop
int3
mov
and
out
enter
xor
fs
scas
jmp
jne
mov
jns
jnp
sub
hlt
and
mov
loope
cmpsl
add
adc
loope
and
in
mov
enter
sahf
mov
in
ret
push
imulb
fisubrl
push
adc
and
pop
mov
and
rcrb
ret
loopne
inc
mov
push
insl
lea
or
mov
inc
push
inc
int3
lcall
inc
cmc
adcl
and
mov
xchg
popf
into
mov
xor
ret
add
icebp
mov
fwait
jle
or
add
jnp
mov
pop
xchg
aaa
mov
inc
fcmovne
add
sbb
adc
or
xchg
dec
jns
mov
pop
sti
cmp
fs
aas
push
pop
xor
dec
idivl
jo
sbb
scas
fcmovbe
fnstcw
aad
in
jb
push
out
shll
sbb
add
and
lock
cmpsb
mov
pop
je
push
addr16
mov
mov
inc
push
fsubs
or
push
shl
not
shr
xor
inc
dec
jns
inc
pushf
das
add
out
pop
or
jne
imull
sti
and
mov
sahf
mov
sub
cld
cmpsb
int
dec
pop
jl
sub
push
popf
imul
fwait
push
xchg
jb
and
call
nop
sub
test
es
push
cmp
in
cmp
cmpsb
fmuls
lods
or
sub
push
pop
cmp
push
mov
rorb
push
aad
lods
and
inc
push
fwait
xchg
fidivrl
jmp
mov
jg
icebp
xchg
lds
push
jne
adc
xchg
mov
shrl
psubb
xchg
les
mov
fs
sarl
out
push
cmp
cmpl
int
xchg
cmp
adc
and
cmp
sarb
int
or
adc
mov
aam
js
orl
add
repz
mov
ret
mov
in
mov
lahf
jmp
cmp
or
xor
ror
outsb
dec
jl
std
sbb
sarl
and
xchg
fs
cmp
divb
jg
sbb
lea
pop
adc
push
pop
fidivl
mov
enter
push
pusha
mov
mov
shl
ss
int3
clc
add
pop
sub
fdivrs
xchg
punpckhwd
jl
lods
shlb
fadds
cs
leave
std
in
mov
stos
fidivrl
icebp
ficomps
add
jl
es
adc
insb
mov
ljmp
ret
sub
mov
cs
and
or
sti
push
ss
xchg
mov
lret
pop
sti
xor
mov
jae
lods
or
in
popa
xchg
imul
xor
add
sbb
push
cli
inc
dec
xchg
cmp
pop
mov
addr16
xor
ja
xchg
pushf
fstpt
es
fldl
pop
movsb
push
xchg
sbb
sub
les
leave
shll
fisubl
sti
jmp
add
jo
sti
cmp
xor
dec
mov
xor
sahf
adc
adc
or
adc
out
test
incb
jns
icebp
cmp
jl
lret
pop
xor
push
pop
pop
sbb
sbb
adc
inc
or
das
mov
rcr
int3
cld
enter
sbb
mov
out
mov
push
hlt
push
int3
cmp
hlt
out
sbb
xor
call
std
adc
cmp
icebp
adc
sub
xchg
mov
rol
xchg
lcall
inc
jl
xchg
add
unpcklps
sbb
dec
mov
adc
mov
mov
gs
dec
lock
int3
and
lgs
jbe
les
std
jo
sti
xchg
idivl
push
rcl
sbb
xchg
mov
pop
pop
leave
out
addr16
pop
pushf
sub
jp
add
add
push
sub
scas
xorb
out
or
aas
popf
ja
mov
mov
iret
xor
fstpl
test
fstpt
cmpsb
xchg
cmp
jmp
daa
xchg
pop
push
inc
lret
filds
das
scas
inc
stc
int
lret
lock
pushf
outsb
xor
xor
mov
inc
test
adc
xchg
xor
adc
outsb
inc
or
mov
mov
jb
push
sbb
mov
out
mov
sti
clc
popa
andl
movsb
outsb
in
call
xchg
fwait
jge
xor
in
pop
add
sub
sub
bound
sub
rorl
mov
xchg
std
shlb
jo
mov
pop
aad
adc
jns
arpl
or
out
jl
push
andl
lcall
push
xor
mov
andb
orl
inc
int
sub
cmp
ljmp
inc
mov
dec
push
ret
xor
hlt
push
dec
jmp
gs
shl
call
push
mov
mov
leave
push
xor
sub
testb
aad
lock
push
mov
inc
mov
and
jns
std
dec
push
fwait
jo
cmp
mov
pushl
das
and
push
mov
mov
pop
dec
dec
dec
pop
dec
ljmp
jmp
push
pop
cmp
loopne
xchg
pop
idivb
mov
cwtl
xchg
xadd
jg
mov
movsb
add
add
rorl
sub
mov
or
sub
adc
jne
out
sbb
mov
sbb
mov
dec
mov
movsb
cld
sbb
les
dec
iret
ret
mov
jo
push
pop
outsb
xchg
and
cs
xchg
sbb
arpl
pop
sub
mov
jle
out
push
dec
leave
daa
mov
push
adc
mov
xchg
enter
push
andb
xor
sub
lret
pop
mov
cltd
fildll
in
pop
fsubs
push
and
movsb
xchg
pusha
jo
lcall
mov
sbb
fs
sahf
out
sub
insb
mov
lahf
ljmp
ljmp
rcrl
xchg
xchg
clc
mov
fwait
sub
mov
cmp
dec
or
mov
pop
stc
adc
add
pop
insb
cmp
test
callw
bound
dec
test
sahf
sub
mov
xor
fwait
add
push
scas
cld
in
sbb
jns
xor
inc
mov
bound
dec
sub
jmp
div
adc
mov
inc
in
xchg
mov
cwtl
in
mov
push
out
dec
ret
nop
mov
aaa
cmpsl
mov
add
dec
adc
rclb
scas
mov
sub
sbbl
xchg
movsl
rol
xor
jge
test
jg
shlb
cmp
sub
or
popf
fxtract
pop
fisttpl
adc
jo
loope
aas
ret
sub
sahf
out
jno
and
jb
or
loop
adc
cli
cmp
add
ds
xor
fsubl
outsb
out
xlat
sbb
loopne
mov
push
mov
and
add
imul
lret
dec
push
pop
push
adc
es
sti
mov
xor
cld
push
insb
jg
adc
adc
icebp
mov
xchg
mov
mov
dec
loope
dec
iret
jmp
cltd
stc
sub
std
xor
jnp
inc
cltd
andb
jmp
add
mov
xlat
mov
inc
stc
cmc
add
add
inc
imul
test
lret
mov
push
add
aaa
mov
das
push
lret
fiaddl
mov
or
test
ds
fidivrl
or
inc
pop
mov
jl
push
je
mov
mov
push
cltd
jb
push
bnd
xchg
aam
push
bound
icebp
adc
pop
dec
ror
jnp
comiss
popf
xchg
jge
scas
std
cmpsb
jnp
jns
out
call
pop
or
jae
es
loop
mov
dec
xor
mov
xor
in
repnz
push
jge
push
sarl
push
sahf
dec
or
lret
adc
nop
lahf
test
jecxz
inc
lea
jo
pop
cmp
mov
stos
sbb
cvtdq2ps
mov
lahf
aaa
dec
jg
lret
insl
cmpsl
jle
in
add
movl
in
lock
ret
dec
movsl
pop
push
mov
aam
xchg
xchg
pusha
ret
or
test
xor
fbstp
or
sbb
std
lret
pop
cmp
lahf
stos
popa
enter
add
popa
out
adc
xchg
mov
pop
cmp
add
xchg
inc
sbb
addl
pop
adc
jnp
pop
push
push
add
jnp
xchg
jg
repz
pop
pop
ljmp
orb
bound
out
mov
test
loope
mov
rol
inc
dec
jmp
and
jbe
and
mov
inc
dec
inc
lahf
mov
xchg
icebp
add
pop
sbb
daa
out
pushf
jmp
and
loop
out
xor
adc
add
out
cmp
dec
pop
inc
xor
sub
xor
adc
inc
mov
cmovs
and
mov
push
mov
mov
lods
jno
pushf
arpl
bound
lods
push
push
push
inc
adc
xchg
pop
mov
mov
jbe
test
cmp
jmp
add
inc
lret
test
dec
lcall
jns
mov
test
xor
aas
js
sub
xor
jle
fstl
inc
dec
pop
push
into
jb
lds
sbbl
cmc
jg
jbe
mov
out
push
call
loop
insl
lock
or
fnstcw
mov
scas
fs
cmpsb
or
and
mov
cmovno
lcall
cmpsb
test
lock
ss
push
dec
sar
push
dec
pop
cmpps
lds
mov
adc
adc
push
inc
pop
sub
fnstsw
iret
stc
jb
data16
mov
jl
int
in
cmp
or
mov
sub
cli
loope
repz
dec
dec
lretw
cs
and
imul
jnp
insl
push
or
cmp
and
mov
xlat
jo
xchg
lahf
aaa
mov
cmp
xor
pop
pop
fs
xchg
xchg
imul
sbbl
push
jmp
or
aam
sahf
mov
xor
and
sbb
sarl
xchg
ja
cli
add
out
push
dec
and
mov
gs
mov
push
ja
cmp
dec
in
jnp
jno
out
popf
pop
inc
cli
pop
ret
xchg
rol
push
and
jns
mov
out
cmpsl
das
fwait
cs
push
mov
cmc
sbb
jl
leave
call
in
sahf
cld
sbb
inc
cmp
sbb
aad
lods
imul
fchs
lret
or
inc
push
lcall
fs
ja
and
or
test
dec
pop
inc
xchg
adc
cmp
hlt
insl
mov
es
cmp
push
inc
add
push
aas
add
inc
loope
add
mulb
loopne
xor
imul
lcall
mov
clc
in
fs
xchg
leave
stos
call
inc
aad
pusha
push
scas
pusha
stos
outsl
lahf
pushf
or
fdiv
add
es
xchg
inc
fcmovne
outsl
sub
testb
lahf
lock
in
add
jo
mov
stos
aam
dec
ds
add
sbb
clc
or
icebp
iret
fmuls
arpl
dec
aas
jle
test
and
in
or
dec
or
ficoml
insl
mov
jo
push
pop
scas
int3
xchg
pop
jne
imul
adc
dec
jg
jge
je
shl
inc
mov
aad
aam
cmpsb
popa
inc
mov
pushf
frstor
or
or
cwtl
mov
or
push
incl
sub
adcl
stc
es
pop
ljmp
and
leave
repz
xor
add
mov
daa
mov
nop
call
notb
cmpsl
and
cmp
and
dec
xchg
mov
dec
loope
push
mov
js
into
scas
inc
mov
dec
mov
inc
and
dec
insb
xchg
dec
mov
pusha
leave
sbb
ret
push
xchg
dec
dec
fsubrl
sbb
loopne
mov
gs
and
add
ss
fdivl
mov
aas
jo
inc
nop
mov
cmp
jnp
insl
clc
shll
scas
xchg
push
mov
and
inc
inc
xchg
xor
sbb
cmp
mov
in
adc
outsb
jl
mov
rorb
or
mov
or
ret
dec
nop
lea
enter
and
rcrb
sub
jp
push
repz
shl
or
add
add
lret
xchg
aaa
addb
ja
sbb
adc
jg
stos
ret
in
sahf
bnd
pushf
add
mov
xor
mov
dec
pop
jne
stc
cmp
test
int3
push
mov
fimull
iret
xor
jecxz
addr16
test
leave
mov
addr16
nop
and
dec
mov
aam
sbb
andl
cmp
dec
dec
cld
rorb
push
or
pop
rcll
jne
mov
pop
cmp
sbb
fisttpl
xchg
ja
xchg
push
xchg
nop
mov
imul
imull
imul
data16
sub
inc
jge
js
mov
jmp
push
fwait
lcall
orl
es
notl
int3
pop
jo
out
jecxz
and
cmp
addr16
mov
push
cmp
call
jp
xor
pop
ds
push
mov
add
sti
imul
jnp
and
loopne
and
daa
fbld
sbb
jl
cmpsb
sub
push
jne
adc
mov
jg
xor
cmp
jbe
das
movzwl
ja
rcrl
xor
mov
test
cmpsb
dec
push
ftst
js
lret
and
and
hlt
in
mov
sbb
ss
adc
mov
add
stc
outsb
dec
std
and
jmp
cmp
faddl
push
and
or
ja
xor
pushf
mov
insb
xchg
out
jecxz
cmpsl
divb
mov
push
sbb
add
push
lods
fsubr
xchg
add
movsl
xor
leave
lea
out
stos
cwtl
pop
sub
out
daa
xchg
lahf
stos
mov
lcall
inc
je
xor
incl
out
inc
scas
or
popa
stc
cltd
hlt
xchg
pop
cmp
jge
ljmp
pop
cmp
movsl
or
or
in
mov
adc
dec
cmpsb
das
data16
fisubrs
mov
adc
mov
fmul
incl
lods
xchg
outsl
cmpsl
mov
test
lods
in
sub
jnp
jmp
or
mov
loop,pn
add
xorb
and
cmp
cwtl
in
inc
into
lret
rorb
pop
andb
and
in
adc
push
jmp
inc
add
roll
xchg
dec
je
xor
jns
adc
orb
xor
negb
xor
enter
add
enter
test
shl
mov
in
or
or
imul
jnp
jp
sbb
add
inc
js
mov
aaa
adc
movsl
out
dec
push
insb
push
push
pop
mov
fldcw
cmp
scas
mov
dec
cltd
sub
in
cmc
jbe
enter
jae
data16
or
push
fildl
gs
lahf
leave
mov
ss
rcr
xchg
decb
in
enter
int
fidivrs
movsb
xchg
loop
and
dec
loopne
cli
les
std
add
pop
ret
shr
jecxz
jne
lock
mov
mov
out
out
pushf
sub
jnp
inc
pop
add
or
inc
mov
xchg
jnp
ds
aad
or
loop
dec
notb
imul
pop
fstps
rclb
push
jo
sub
out
fsub
mov
out
outsl
fsubs
inc
sub
xor
fiadds
stos
cltd
imul
adc
sbb
cld
addr16
jb
adc
mov
xlat
je
insb
sti
dec
int
pusha
lret
fsubl
out
jno
mov
dec
in
mov
xchg
xor
movsl
mov
lret
in
ja
pushf
adc
das
adc
popf
push
push
xor
andb
lret
stos
stos
inc
sbb
fldenvs
std
cli
popa
lods
fiaddl
cmp
outsb
ror
in
mov
jnp
jg
mov
push
push
shlb
cmc
sti
cmpsb
out
or
aas
inc
enter
cmpsb
aad
notb
aaa
loope
into
popa
push
shll
out
fcomps
pop
cltd
inc
fsts
dec
xor
xor
add
fsubrs
movsl
jmp
mov
mov
lret
dec
repnz
rclb
sbb
or
xchg
mov
lret
imul
mov
repz
pop
insb
xchg
dec
sbb
pop
cmpsl
dec
fstpt
popf
popa
ds
test
test
add
or
ret
add
pop
inc
pop
notb
fiadds
push
mov
ret
inc
cmp
in
repz
mov
aad
mov
sahf
std
mov
push
xor
fwait
mov
in
mov
xor
dec
fdivp
pop
fwait
push
hlt
mov
mov
mov
iret
or
call
xor
xchg
fistps
or
jmp
aas
adc
pop
inc
das
lods
mov
daa
adc
pusha
adc
push
test
popf
ret
dec
mov
jmp
jbe
or
imul
push
mov
add
or
fld
mov
fstpt
add
stos
or
nop
lcall
fsubs
mov
cltd
push
mov
add
ret
or
mov
mov
xor
cmpsl
shlb
cltd
or
aad
push
cwtl
aam
jmp
out
aas
clc
test
aad
fstl
cli
xchg
pop
ss
shrl
lods
lock
aam
jns
xorl
push
jecxz
dec
sub
push
jecxz
inc
xor
xchg
ret
cs
cli
xchg
sub
mov
mov
ja
push
mov
daa
sti
dec
stos
lret
jg
xchg
mov
adc
adc
or
mov
jl
ror
repnz
insl
mov
sti
adc
sbb
cld
sub
bound
es
jnp
mov
xor
xchg
aad
ds
xlat
sbb
sub
ja
dec
adc
dec
pusha
mov
jne
jl
movsb
movsl
push
test
fdivrl
jnp
jmp
ret
cld
sub
push
xchg
aaa
bound
mov
in
sbb
sub
aas
dec
rcrb
sub
dec
adc
mov
aad
movsb
sti
sub
mov
dec
jecxz
test
ret
jp
cmp
cld
int3
lds
mov
lds
xchg
inc
mov
mov
push
cmp
or
cli
lock
jecxz
lock
xlat
faddl
xor
fs
and
jg
push
je
adc
aaa
in
inc
xchg
stos
movsb
mov
ja
mov
gs
jecxz
sbb
lock
in
ficompl
fidivrl
add
and
js
negb
or
cli
push
push
les
jbe
pushf
outsl
ret
sub
pop
fiadds
or
jo
addl
andl
adcl
cmc
jns
jl
sbb
std
cmp
pushf
sbb
push
icebp
iret
mov
adc
repz
add
pop
ret
cmp
xor
fstpl
push
outsb
jp
push
add
and
pop
cmp
ds
and
sbb
add
bound
pop
sbb
cmp
xchg
or
sbb
mov
pop
std
shl
sbb
loope
divb
adc
rcr
out
xchg
les
inc
mov
inc
imul
rcl
popf
out
push
sbb
addr16
aad
sbb
out
popa
outsl
rol
mov
pop
pop
pop
push
cmpsl
sub
jecxz
lds
push
arpl
push
cmp
rclb
loope
adc
xchg
push
jecxz
cmp
sbbb
xlat
xchg
mov
andb
mov
je
sub
mov
lock
or
add
cmp
mov
imul
push
xchg
ret
xor
cmpsl
insl
jns
mov
push
push
lods
movsl
ds
mov
gs
pop
jne
pop
inc
fldcw
xor
divl
in
dec
jle
xchg
adc
xchg
mov
into
pop
in
lds
testl
inc
xchg
dec
cmp
ret
ja
push
inc
jg
ja
push
mov
pop
in
push
in
call
out
in
mov
sti
cmp
xor
xchg
and
pop
push
push
xchg
adc
shl
push
stos
mov
and
jae
repz
sub
sbb
aaa
adc
sti
insl
aaa
add
hlt
call
fdiv
fmull
push
dec
sub
or
add
shll
sarb
pop
out
stos
inc
jecxz
leave
mov
sbb
roll
pop
xor
outsl
push
pusha
lret
mov
pop
inc
mov
jmp
icebp
xor
inc
dec
xchg
popf
dec
mov
mov
inc
mov
rcl
sbb
mov
cmpsb
in
lahf
subb
cmpsb
inc
lods
dec
xchg
repnz
mov
push
fsubl
call
movsb
jmp
aas
pop
or
push
sub
ret
out
scas
rorb
push
stos
inc
jne
mov
mov
add
in
cwtl
ss
sub
mov
and
or
repz
mov
pop
or
dec
dec
orl
nop
mov
sub
jne
jb
adc
adc
mov
es
scas
xor
enter
jo
inc
outsl
int
movsb
pop
dec
out
mov
mov
lock
mov
mov
mov
lods
mov
mov
jnp
aad
ja
leave
fbld
add
or
add
adc
in
daa
fcomps
pop
cli
fildl
ljmp
inc
push
add
jb
mov
popl
in
int
jl
lock
imul
ret
in
push
les
mov
xor
inc
xor
sub
push
pushf
xchg
mov
dec
movsl
mov
jecxz
call
sub
jo
call
insl
rorb
popf
stos
mov
xchg
mov
enter
pop
or
sbb
inc
mov
push
xchg
movsl
inc
mov
dec
arpl
xchg
shrb
mov
pop
and
das
cwtl
cs
and
add
ret
shrl
xor
jo
rclb
data16
sub
sub
icebp
push
sub
loop
sub
inc
and
jg
add
pop
call
ja
jne
dec
add
add
bound
mov
das
jbe
and
inc
sti
into
mov
unpckhps
adc
in
int3
aaa
mov
sub
adc
jg
mov
xacquire
sbb
jmp
das
sbb
xchg
fadds
add
ss
lret
loopne
loop
jecxz
hlt
pop
push
mov
into
dec
cmpsb
cwtl
or
lret
popa
out
mov
dec
repnz
jmp
pop
jns
aas
xchg
rorb
push
std
repz
mov
rcr
adc
inc
scas
and
adc
fwait
xchg
aas
dec
lcall
outsb
cltd
or
negb
jmp
adc
pushf
dec
cmp
push
cmp
adc
add
lds
sub
jle
pop
mov
cmp
jb
push
or
or
fnstcw
sbb
push
adc
out
mov
mov
cwtl
aaa
mov
lods
pop
std
test
push
sub
xor
cmp
in
or
pop
icebp
cltd
jmp
adc
stc
mov
xchg
rcrb
ret
icebp
push
pushl
cwtl
lods
pop
cld
pop
lods
adc
outsb
sbb
pop
mov
cli
push
sbb
repz
jbe
inc
inc
fsubrl
push
cmp
ja
popa
lds
inc
cwtl
xor
insl
test
jecxz
and
xchg
ljmp
or
leave
inc
sub
stc
push
xor
lds
hlt
and
icebp
outsb
call
push
les
out
add
mov
loopne
sbb
scas
add
xchg
mov
cmc
xchg
push
cmpsb
dec
xor
xor
inc
lcall
fnsave
ss
ja
push
pop
push
jmp
out
stos
into
cmp
cmpsl
ret
sbb
stc
xor
daa
imul
daa
xchg
lret
cli
es
pop
bound
inc
fmulp
sub
lods
inc
das
pop
lret
add
inc
xchg
jbe
rcll
fisubs
add
or
push
pop
dec
sub
xor
mov
or
add
dec
loopne
pop
push
and
into
leave
jl
sti
xchg
insb
out
into
fstp
adc
pop
mov
push
rcll
mov
rolb
add
pop
movsb
lret
push
xor
das
inc
mov
push
cmc
leave
mov
inc
sbb
aaa
cltd
push
or
cli
fmuls
jnp
pop
inc
fstp
pop
and
and
sbb
jmp
loop
lods
mov
rcll
push
dec
loope
push
push
push
outsb
add
sti
hlt
repz
push
int
insl
test
mov
mov
clc
xchg
fildll
stos
shll
push
cld
sarb
pusha
jle
notb
and
loope
test
xor
mov
jno
jne
sbb
outsb
or
pushf
js
lahf
cmp
adc
push
sarl
mov
jbe
inc
call
cmp
sub
movsl
cmp
xchg
or
jmp
out
sahf
popf
shll
xor
xchg
roll
cmc
cmpsl
mov
sti
outsb
xor
or
jmp
ss
mov
test
insb
sub
mov
xor
lret
aam
test
sub
mov
push
adcb
xchg
inc
dec
dec
out
sbb
pop
jns
xor
addr16
cwtl
idivb
push
andb
cltd
adc
mov
scas
mov
loopne
dec
iret
add
les
xchg
lock
adc
leave
pop
nop
out
jb
ljmp
push
jmp
push
insl
pushf
jnp
mov
push
repz
sub
pop
add
ret
xor
loope
dec
shll
sbb
mov
xor
cmp
jo
out
mov
int3
stc
data16
sub
mov
aaa
decb
nop
sarb
mov
es
cmp
imul
std
test
sub
orl
ja
icebp
jl
enter
pop
sub
or
bound
orb
pop
int
xchg
pop
push
roll
dec
daa
shr
loop
xor
cmpsl
mov
sbb
adc
jb
or
and
cmpsb
mov
movsb
dec
rcl
dec
or
push
nop
test
into
xchg
std
mov
and
push
mov
jb
pop
push
jns
mov
hlt
test
push
std
add
in
call
cli
cwtl
add
test
push
sbb
pop
jge
ret
push
xchg
gs
ljmp
movsl
mov
pop
popa
imul
or
into
push
xlat
ljmp
lahf
or
and
leave
roll
bound
icebp
ljmp
jns
scas
sub
leave
jae
movsl
addr16
cli
inc
push
mov
jbe
xor
push
popa
pop
and
mov
addr16
into
rcl
sbb
sbb
loop
xchg
fcmovne
adc
mov
lahf
xor
inc
add
fs
jnp
lods
xchg
adc
jno
push
dec
test
popa
jecxz
mov
daa
or
daa
cs
mov
jne
pushf
jmp
xchg
inc
int3
jmp
pusha
push
xchg
inc
jl
mov
or
es
add
dec
cmpsb
cmpl
mov
insl
stos
xor
das
xor
push
test
cmp
ret
sub
sbb
loope
mov
jbe
inc
and
stc
dec
push
sbb
std
rcl
push
pushf
mov
nop
cmp
or
enter
nop
loope
fsubl
push
jmp
xor
xchg
decb
outsb
mov
loopne
jo
jmp
pop
sub
xchg
push
pop
sbb
cmpsb
fwait
bound
loopne
neg
iret
shrl
scas
mov
test
mov
outsl
mov
or
sub
jg
nop
inc
push
test
dec
add
aam
push
push
cmp
jmp
sub
jle
xchg
xor
mov
mov
out
pushf
ror
std
mov
and
mov
in
inc
fdivrs
mov
shll
adc
pusha
loop
cltd
stc
ss
sti
rorl
jb
xchg
out
mov
xchg
jl
mov
jg
jo
ljmp
ds
sti
scas
xor
lds
and
pop
dec
enter
rsm
sbb
popa
sub
pop
mov
jp
jmp
xchg
sub
movsb
clc
ja
mov
and
test
xchg
adc
fimuls
pop
outsb
ljmp
divb
sti
fwait
hlt
pop
lock
jl
cmp
out
out
add
daa
fdivr
aad
lea
sub
adc
or
push
push
shrb
cmovs
int3
push
dec
jp
xor
mov
popf
andl
dec
push
xor
sbb
sub
inc
repnz
lods
stc
imul
sahf
movsl
push
mov
inc
sahf
scas
rcrb
test
shlb
lret
mov
enter
lret
divl
cmp
mov
jp
fidivrl
mov
sbb
add
cwtl
movsb
mov
pop
insl
out
rorb
add
push
pop
daa
mov
and
push
adc
mov
cli
lods
aam
pop
shlb
faddp
cmp
bound
dec
sbb
mov
add
ret
pop
sbb
daa
cmp
cli
jg
or
in
mov
lods
mov
push
outsl
pminsw
mov
ror
ret
imul
lods
push
sub
movsl
jae
xchg
inc
pushf
lock
sbb
loop
lods
pop
cwtl
idivb
fcomip
xchg
sub
cmp
cmp
loope
into
iret
add
rolb
lcall
push
mov
fisubs
mov
adc
mov
aas
fsubrs
mov
rcrl
inc
stos
mov
outsb
pop
mov
nop
loopne
ss
push
push
cld
je
cltd
mov
scas
fadds
scas
nop
je
inc
sti
pop
iret
sbb
lret
add
addr16
scas
sub
fs
mov
mov
mov
cwtl
hlt
mov
lret
mov
jge
xchg
arpl
daa
push
adc
iret
cmp
pop
sbb
pushf
cmp
call
dec
ret
add
push
subb
pop
in
mov
push
or
mov
shrl
in
adc
data16
or
xchg
pop
mov
mov
leave
and
out
aam
lret
sbb
push
insl
sub
stos
dec
sub
shrl
push
cmc
add
and
inc
dec
push
scas
dec
jecxz
scas
jg
gs
js
adc
xchg
scas
ret
mov
es
imul
call
mov
dec
mov
sub
stos
data16
xchg
mov
push
movsl
and
shrl
adc
jg
and
pop
jae
cmc
outsb
pop
clc
es
enter
push
pop
xor
xlat
movsl
inc
cmp
jae
jb
mov
xor
movsb
sub
adc
xor
add
add
mov
ds
cmp
push
test
addr16
enter
stos
fldcw
data16
std
pop
add
roll
sbb
in
pop
cs
xchg
mov
imul
fcmovu
stos
add
stos
jnp
or
xor
jg
adc
push
xchg
mov
outsb
fs
and
fcoms
add
adc
loope
fxch
push
mul
or
jle
mov
shll
xchg
test
adc
adc
aad
test
shrb
cmp
rorb
push
in
gs
pop
sti
adcb
icebp
push
std
xor
push
dec
cmp
es
aas
fwait
jmp
mov
and
xor
aas
mov
int3
rorl
inc
fwait
mov
sahf
subb
mov
test
je
aaa
jns
lret
push
lret
test
out
stos
sub
push
dec
cli
adc
and
fistpl
push
adc
dec
outsl
sbb
aad
mov
jg
push
das
mov
movsb
ss
aaa
imul
lods
jle
jns
dec
push
cmpsl
out
mov
mov
das
xchg
out
stos
jecxz
push
mov
outsl
pop
repnz
xchg
jno
cmp
adcb
mov
stos
dec
notb
icebp
jge
xchg
loopne
movsl
xchg
sbb
push
pop
and
fcomi
cmp
addr16
repnz
imulb
xchg
pop
jmp
stc
fcoml
push
lret
mov
in
popf
cmp
lds
add
pop
inc
xlat
add
sub
adc
or
pop
sub
out
xchg
mov
cmpsb
push
stos
push
aam
dec
imul
xchg
push
arpl
jbe
rorl
mov
push
stos
sub
insl
jle
std
sbb
fcomps
xlat
dec
mov
sbb
cwtl
mov
jecxz
sbb
inc
mov
push
mov
insl
pop
inc
pop
mov
movsl
push
push
add
xor
push
sbb
fdiv
mov
jne
ja
mov
mov
stos
negl
mov
pop
add
add
leave
fidivrs
fwait
js
shrl
mov
sub
lea
scas
cs
jnp
shl
xlat
shrb
out
addb
inc
mov
pop
je
mov
sbb
lods
jmp
adc
scas
in
adcl
jmp
sahf
adc
xor
testl
int3
sbb
adc
xchg
repz
fisttpll
pushf
pop
cmp
out
and
adc
sbb
jno
es
sub
and
test
jae
xor
pop
shlb
aad
insl
jg
cmc
es
pusha
es
fidivl
sarl
cli
ja
daa
jb
pop
lds
jmp
push
or
fcompl
jle
arpl
sahf
push
cld
push
dec
cltd
and
ljmp
loop
xchg
and
stos
pop
adc
push
cs
leave
mov
inc
jmp
mov
hlt
insb
sahf
clc
in
insl
pop
dec
das
push
mov
std
add
gs
outsb
sbb
push
add
hlt
test
mov
cmpsb
and
sub
notb
mov
mov
stc
push
jecxz
add
int3
ret
test
cmc
addr16
mov
iret
jl
fnstsw
jno
decb
loope
cmp
in
inc
in
sbb
cmpsb
mulb
ss
jne
out
aaa
in
sbb
into
inc
add
ja
mov
pop
mov
push
scas
std
jl
cld
iret
pop
mov
fxtract
push
sahf
insb
xchg
stos
jge
loop
fcoms
xchg
ss
mov
pop
aad
mov
and
outsb
mov
out
lret
loope
daa
pushf
pop
mov
and
pslld
test
pushf
nop
xor
cs
sbb
xlat
dec
arpl
mov
fsubl
push
cwtl
hlt
mov
daa
jl
scas
enter
or
adc
int
mov
aas
xchg
inc
cmp
jno
ja
xor
ret
test
xchg
out
and
mov
adc
push
ja
rolb
xchg
jle
nop
xor
jp
mov
pop
xor
aad
push
or
ljmp
jle
fstpt
jnp
mov
lods
jnp
fidivs
adc
xchg
adc
mov
gs
lea
mov
movsb
dec
insl
cmpsl
sti
cmpsb
push
add
mov
add
xchg
int3
jb
dec
xchg
lock
jne
mov
jmp
movsb
mov
es
inc
mov
movsb
jle
adc
push
ror
lds
rclb
data16
push
test
popf
add
xor
cwtl
xor
into
insl
push
sub
pop
pop
dec
add
pop
dec
push
enter
pushf
mov
add
pop
scas
pop
inc
stc
test
xlat
dec
aas
pop
mov
jns
fstpl
mov
and
inc
lods
cli
mov
pushf
shl
es
cltd
pop
pop
mov
sbb
out
daa
xor
pop
jmp
mov
xor
push
mov
mov
stos
cmp
ljmp
pushf
jmp
mov
pushf
pop
repz
cmc
jmp
addr16
pop
dec
sub
movsb
xor
jnp
mov
add
push
mov
shlb
jp
xchg
or
ja
movsb
pop
cmp
jno
pop
ja
lds
inc
pushf
cmp
push
cmp
div
cmp
ficomps
in
loopne
fistps
cmpl
imul
fmulp
mov
and
rcrl
push
fsubrp
pop
jmp
mov
xchg
cmp
add
sbb
dec
cmc
aad
in
push
popa
mov
rcr
jbe
shrl
sub
adc
pusha
and
int3
psubw
jae
push
daa
inc
push
jmp
sbb
mov
mov
dec
inc
sub
rcr
imul
jb
aas
jle
pop
push
sar
lds
jne
xor
push
ds
iret
dec
inc
or
mov
aam
push
add
cli
andl
divb
sti
ss
mov
test
rcrl
nop
ret
and
gs
aad
jbe
pop
test
pop
xchg
bound
sbb
push
divl
hlt
movsl
mov
or
mov
xchg
lcall
xor
cmp
pop
inc
add
jno
call
insb
jecxz
inc
leave
into
push
gs
popa
pop
es
rcr
lock
out
jmp
mov
or
incb
inc
pop
les
aas
jno
xor
and
mov
inc
fdiv
pop
pusha
cmpsl
xor
mov
dec
mov
adc
xchg
mov
aaa
loop
xchg
mov
sets
aad
inc
add
rcll
decl
adc
sbb
js
inc
cld
repz
daa
fisubrl
sahf
fcoms
or
aam
mov
shll
push
stos
sub
xor
stos
xor
or
stos
jae
test
lods
cmpsb
repz
mov
ds
dec
adc
enter
mov
frstor
pop
ret
jne
jecxz
shlb
sbb
popf
test
stc
test
lcall
adc
fwait
mov
jnp
cmp
mov
imul
nop
add
sbb
inc
inc
mov
dec
js
xor
adc
cmp
and
mov
cs
pushf
dec
adc
sub
mov
xchg
add
out
xchg
out
mov
repnz
inc
and
leave
daa
inc
sahf
mov
rolb
xor
jns
xchg
test
mov
out
nop
dec
jle
loope
popl
mov
loopne
movsl
or
stos
hlt
iret
pop
sub
cli
mov
xor
mov
and
ret
call
push
jg
push
mov
mov
jnp
movaps
sub
and
lds
mov
es
or
dec
cmp
movsb
inc
jge
jecxz
add
stc
ret
data16
cwtl
jb
mov
or
out
pop
add
fmuls
int
lds
dec
mov
sub
lcall
lods
cwtl
orb
cmp
add
mov
push
outsl
fwait
add
mov
mov
add
orl
ficoms
int3
mov
lahf
inc
mov
bound
std
gs
mov
stos
into
rcrl
das
adc
cmpsl
scas
xchg
jbe
ljmp
adc
movsl
mov
lahf
xchg
dec
sub
xchg
ljmp
jecxz
jne
jmp
jle
loop
pushf
addr16
addr16
sbbl
xchg
push
ds
pop
mov
popa
adc
aas
bound
aaa
lahf
push
aam
jmp
pop
bound
add
movsb
and
pop
rorl
dec
xor
inc
mov
mov
scas
cmpsl
sbb
cmp
push
mov
add
lea
cmp
xchg
or
bound
call
dec
pop
jne
outsl
lret
jb
aad
addb
push
repnz
xchg
cli
sub
push
es
dec
xchg
pop
sub
inc
cmp
loope
jno
inc
cmp
repz
push
bswap
fsubrs
jns
fstp
scas
push
ljmp
push
pop
lret
dec
mov
lret
stos
mov
out
mov
punpckhwd
push
add
or
or
shll
aad
sub
aas
test
xor
call
into
mov
into
adc
xor
and
mov
imul
inc
xchg
add
mov
xor
stos
xchg
les
xor
pop
and
out
arpl
sbbb
push
stc
insb
notl
xor
ljmp
push
stos
jle
mov
jnp
jge
adc
cmp
mov
rcrb
sbb
sti
lods
scas
jl
sub
xor
ljmp
in
xchg
sbb
cmp
out
adc
out
inc
dec
push
add
mov
fcomps
adc
inc
in
push
ficoms
loope
stos
jne
call
sbb
cmp
gs
rcr
push
les
dec
or
aas
bnd
loopne
sub
xchg
adc
lds
and
ficompl
inc
sub
hlt
mulb
adc
xor
mov
sbb
out
mov
lock
inc
jbe
jmp
mov
sahf
and
outsb
out
mov
int
or
push
push
fstpl
test
push
and
xchg
xchg
cmp
movsb
dec
push
lcall
rep
lret
cltd
xorb
dec
pop
das
loopne
mov
xlat
cmp
sub
xchg
mov
sbb
aad
cli
popf
aas
popf
push
lods
mov
push
sub
lds
lcall
push
adc
xor
sti
jns
push
mov
insb
mov
mov
mov
add
jb
out
aaa
pop
dec
mov
mov
imul
push
cmp
xor
mov
sub
add
push
lahf
xchg
push
mov
lret
out
push
iret
cmp
inc
cmp
aam
mul
addr16
xchg
and
jge
imul
sbb
jle
sbb
push
sbb
clc
out
mov
fwait
pop
fmul
stos
xchg
adc
adc
bound
cmpsl
cwtl
cmp
xchg
dec
jg
mov
push
add
push
add
push
iret
xor
jne
sub
adcl
scas
xchg
lds
filds
add
jge
mov
xlat
ffree
cli
or
es
xacquire
test
sub
movsl
inc
inc
mov
out
int3
std
push
cmp
stc
pop
mov
leave
jae
shrb
stos
mov
xor
or
sarl
enter
pop
stos
dec
pop
mov
lahf
xor
sbbl
mov
iret
mov
dec
mov
out
rcrb
stos
jecxz
fidivrs
dec
test
lret
pop
sub
repz
icebp
jae
cwtl
les
in
jns
push
mov
test
adc
mov
mov
ret
dec
adc
mov
sbb
std
ret
sub
mov
lret
add
js
xchg
lods
ljmp
stos
jb
sbb
fimuls
adc
jnp
and
sub
rorl
dec
sub
push
das
subb
ret
and
clc
mov
push
jns
inc
dec
addr16
push
inc
pusha
cmp
and
mov
cmp
mov
xchg
sbb
mov
insl
pop
imul
fbld
imul
push
loop
inc
decw
cvttps2pi
ss
or
cli
in
sub
jp
leave
aaa
idivl
subb
insl
pop
dec
mov
jle
xchg
addr16
lea
xchg
clc
fisttpll
sahf
pop
pop
mov
out
jno
adc
fistpll
je
or
aaa
push
xor
ret
sbb
jmp
push
adc
dec
imul
int
jbe
mov
or
loopne
mov
xor
push
jl
insl
stos
out
mov
inc
into
leave
mov
ljmp
push
out
xchg
lods
out
scas
dec
in
enter
xlat
shll
jp
dec
pop
loope
cltd
and
xor
add
sbb
out
inc
xchg
cmp
cmc
sub
in
scas
push
sarl
pop
push
mov
or
es
add
fwait
adc
rcl
mov
testb
xchg
adc
cmp
sub
mov
test
lahf
adc
inc
loop
inc
add
pop
adc
cmp
jp
mov
jp
sbb
je
sbb
sbb
jnp
and
sub
in
lock
cli
daa
popa
je
push
inc
jl
pop
clc
inc
imul
mov
popf
fidivl
out
ja
inc
icebp
into
frstor
push
mov
sub
cmp
sub
outsl
xchg
xchg
arpl
push
and
sub
push
xorb
jmp
loope
fs
mov
cmp
mov
lods
sub
cmp
push
fucomi
fsubl
mov
mov
mov
push
fs
sub
shrb
lods
pop
inc
pop
cmp
mov
xor
sbb
and
popa
mov
or
xor
jg
jecxz
mov
jmp
lcall
xor
push
shl
xchg
or
inc
dec
dec
mov
mov
push
fldl
popa
out
add
mov
push
hlt
pop
rcrb
nop
notb
xlat
add
push
or
sub
stos
add
pop
shrb
xchg
cld
and
cmp
scas
adc
into
mov
dec
pop
ja
mov
orl
aam
xlat
push
adc
mov
mov
xlat
sub
mov
fisttpl
faddl
xor
test
xor
stc
fwait
sub
mov
cli
mov
lds
cli
jne
xchg
dec
jne
sbb
pop
enter
test
adc
cmpsb
pop
push
xor
movsl
dec
pop
loop
sub
xor
lcall
sub
cli
sub
mov
inc
stos
rcrl
sti
ljmp
lock
cmc
pop
fistpl
fldl
jb
xchg
out
pop
push
in
xchg
loopne
lea
nop
sahf
inc
in
iret
imul
mov
sti
or
das
jg
jp
shlb
cld
sub
sub
mov
pop
adcb
mov
lcall
pop
arpl
jmp
orl
dec
and
push
es
das
ljmp
mov
and
push
aam
repz
adc
and
fs
imul
dec
ljmp
xor
jbe
int
cltd
jo
jmp
je
outsb
icebp
pop
sbb
in
mov
add
jbe
mov
dec
mov
mov
or
push
adc
in
add
pop
xchg
pop
cmpsl
jns
and
icebp
jp
frstor
push
fcmovnu
mov
gs
cmp
push
jb
or
jmp
arpl
outsl
or
rclb
jno
test
add
ret
push
mov
and
in
and
bound
push
nop
mov
xchg
cmp
stos
js
jle
inc
je
ss
jp
cmc
sbb
mov
pop
or
push
jecxz
cmp
or
test
xchg
push
fbstp
int
outsb
or
movsl
jmp
add
push
test
leave
mov
jne
sub
insb
ljmp
fsubrs
rorl
push
out
mov
mov
fsubrs
test
enter
shll
movq
jg
dec
cmp
mov
bound
out
lcall
scas
int
bound
sbb
cmp
arpl
movsl
lock
outsb
lcall
push
pop
jge
or
add
pop
hlt
sub
hlt
lods
subl
ljmp
mov
je
rcrl
pop
xor
cld
in
push
push
test
sti
es
mov
mov
cmpsl
sbb
pusha
pop
addr16
fwait
sbb
cmpsb
jo
jbe
popf
cmp
xchg
lret
loopne
mov
pand
cmp
pop
ss
cld
sarl
xchg
sbb
xchg
xorb
and
sbb
stos
fsubrs
and
jne
popf
sub
movsb
pop
inc
divb
neg
and
pusha
test
adc
clc
ja
adc
jmp
cmp
divb
repz
inc
adc
lds
cmp
sti
adc
out
call
mov
sbb
sub
lret
add
and
xor
fdivrl
cs
dec
not
xor
dec
and
adc
sbb
jne
out
mov
cmpsl
inc
scas
push
mov
imul
or
xor
test
testl
pop
and
ja
movsb
mov
sbb
rorl
ds
jbe
test
inc
jno
inc
pop
jg
pop
xor
leave
and
dec
xlat
jg
xchg
ss
mulb
cld
arpl
add
cltd
mov
or
xor
and
jnp
lea
jl
sbb
in
xchg
testb
movsb
das
and
cmp
xor
outsl
jae
or
popf
mov
xchg
sti
lock
dec
clc
jl
int3
loope
data16
ds
inc
fnsave
jne
sub
inc
cld
mov
and
xor
int3
add
and
push
mov
hlt
inc
xor
sub
lret
shll
outsl
adcl
jmp
jno
pop
fimuls
stos
xor
jecxz
pop
sub
scas
pop
es
inc
das
jp
out
inc
subb
int
pusha
out
les
dec
aam
cwtl
mov
call
into
jp
frstor
pop
jecxz
xor
enter
or
mov
fnstenv
mov
imul
je
push
dec
jg
inc
mov
push
imul
hlt
roll
pop
out
in
mov
jge
sbb
lods
mov
jmp
push
outsl
adc
stos
out
les
daa
sub
or
pop
ss
scas
orb
pop
sub
inc
cld
adc
popf
xchg
loop
aam
movsb
stos
mov
test
pop
jnp
cmpsb
xchg
xor
and
aad
ret
sub
pcmpeqd
dec
mov
scas
inc
cmp
adcl
jg
dec
imul
cltd
stc
call
fdivrl
loop
icebp
mov
xor
sbb
int
xor
fsubrl
inc
mov
push
xor
cvtps2pd
and
pop
pavgw
cwtl
cmpsb
mov
call
push
pop
xchg
jecxz
ss
mov
aad
pop
mov
add
push
sbb
scas
je
out
dec
mov
jmp
int
pop
dec
cmp
jle
enter
adc
jecxz
aaa
mov
cltd
fsubl
dec
fcoms
sub
pusha
pop
push
mov
xchg
repnz
add
fst
xchg
es
orl
mov
adc
sbb
aas
xchg
add
mov
ficoml
jb
push
push
pop
add
xchg
cmp
and
pop
shl
adc
rorb
rol
add
xchg
mov
loope
and
push
sub
test
add
jne
aas
mov
cmpsb
sbb
cmp
dec
imul
mov
out
jge
mov
push
fdivrs
or
add
jp
mov
mov
dec
add
mov
xchg
adc
leave
roll
xchg
in
xchg
loop
add
lods
cmp
lds
xchg
xchg
mov
xor
mov
cmp
movsb
cmp
add
cltd
in
dec
jae
gs
jbe
push
adc
sub
cld
inc
leave
dec
out
jg
sti
call
negl
sub
jmp
rclb
lods
adc
xor
repz
xor
pop
xchg
mov
ja
shlb
cvtdq2ps
call
jmp
inc
pop
aas
bswap
adc
and
cmpsl
adc
lds
inc
jae
pop
and
lods
ljmp
fucomi
adc
pop
movsb
add
cmp
test
cs
hlt
mov
push
into
in
daa
mov
imul
and
shr
jg
das
mov
outsb
push
mov
mov
iret
sub
mov
jbe
jb
fiaddl
and
lds
icebp
inc
lods
cmp
inc
mov
and
pop
inc
pop
dec
repz
inc
pop
xlat
int
rep
or
xor
and
or
and
adc
fdivrs
mov
mov
push
jne
sbb
sub
add
ficoms
shrb
mov
sar
nop
mov
adc
ret
fyl2xp1
cld
xchg
je
add
into
loope
mov
ret
lret
lret
mov
lds
push
cmpsl
or
cmpsl
fistpl
inc
inc
loope
mov
sti
ja
sbb
cli
sbb
xchg
cmc
mov
push
xor
mov
xor
sub
and
jb
andb
pop
incb
je
imul
popa
shlb
repz
leave
fdivr
push
shl
lahf
cmpsl
mov
or
adc
iret
les
pop
jmp
scas
fisubrs
out
sbb
mov
fisttpll
mov
int3
jnp
in
push
sbb
cs
loopne
std
mov
mov
sahf
jle
lahf
lcall
and
rorl
fists
cmp
or
sar
aas
adc
add
ret
inc
cmp
or
and
in
test
fwait
xchg
testb
mov
mov
adc
jb
imul
fwait
jg
jp
push
mov
add
lret
mov
add
fwait
mov
inc
lods
mov
xchg
push
pop
add
jle
jno
test
pop
push
xor
dec
cmpsb
mov
sbb
and
loopne
jo
mov
and
xchg
int
inc
icebp
add
lods
adc
mov
pop
call
jbe
in
shrl
and
fists
popa
sub
sbb
test
mov
call
and
in
fcmovnb
fdivrl
push
fistpl
rcrl
cmp
aas
cmp
test
pop
je
in
push
stos
xor
lods
fstl
mov
dec
enter
data16
rorl
mov
jecxz
cltd
dec
in
cli
lcall
fildll
jb
stc
mov
pusha
adcb
add
inc
and
push
inc
lds
jle
rolb
jb
daa
stos
addr16
rolb
das
xlat
cld
and
inc
pop
add
pop
loope
fistps
aad
xchg
push
movsb
xchg
push
lea
in
and
inc
out
out
mov
push
jmp
insl
adc
bswap
je
stos
xchg
dec
xchg
je
sub
jmp
dec
repz
sti
push
dec
int
xchg
and
jnp
add
xchg
sti
fisubrs
jae
mov
mov
jne
in
rcl
repnz
cmpb
into
ja
mov
rcrl
push
sbb
lods
insb
das
jp
bound
movsl
push
push
lods
push
jnp
push
int3
arpl
test
xchg
out
jne
xor
addr16
fwait
mov
not
xchg
or
lock
jo
adc
push
aad
call
add
cltd
cwtl
dec
ret
xchg
fdivs
sahf
jae
imull
push
int
test
adc
adc
jmp
lods
pusha
arpl
xor
pop
mov
xchg
imull
incb
inc
pop
fdiv
and
cs
fnstenv
adc
mov
je
xor
bound
add
cmp
out
or
pop
push
mov
aad
test
popa
inc
hlt
mov
cmp
jno
in
dec
mov
fildll
add
ljmp
sub
mov
movsl
sbbl
push
bound
mov
mov
dec
or
dec
popa
dec
js
subb
mov
popa
sub
sbb
fistpll
test
inc
loopne
int
push
idivl
lods
loop
add
mull
add
pop
and
sub
out
xchg
xor
push
add
push
dec
dec
dec
cmp
jno
dec
mov
popa
dec
popa
jl
dec
mov
movb
loop
lods
sbb
push
or
and
pop
setge
fwait
test
add
inc
sarl
pop
lock
pop
cli
jle
jp
mov
ljmp
xchg
int
aas
out
add
pushf
iret
inc
scas
int3
bound
cmc
push
idivb
push
sub
jl
roll
icebp
inc
or
fistl
and
sbb
jae
lret
adc
mov
aaa
or
movsb
ss
adc
lret
mov
into
mov
xchg
stos
add
mov
in
fdivs
movsl
test
jmp
pop
jle
data16
dec
pop
in
into
data16
xor
jne
push
pop
xchg
aad
jle
or
lods
cmp
xchg
jle
mov
test
or
pop
dec
insl
jecxz
adc
and
test
xlat
daa
dec
mov
clc
sbb
stos
add
ror
jmp
pop
push
lock
jp
hlt
out
adc
repnz
sbb
js
cli
mov
pop
clc
fdivrs
inc
imul
rorb
data16
out
clc
xor
test
ret
adc
sar
sub
daa
stos
push
cld
adc
pop
xor
sti
scas
mov
call
addr16
mov
test
jns
pop
addb
inc
cmp
inc
xlat
dec
adc
jb
xchg
mov
inc
iret
cmpsl
sahf
rorl
ja
test
scas
iret
cmpsl
add
push
int3
les
popa
sbb
in
popa
lret
push
xor
dec
inc
push
stc
or
int
mov
addr16
pop
insb
movsb
and
loop
or
mov
mov
lcall
xorb
dec
outsb
popa
cmpsl
cmp
imul
mov
scas
jbe
gs
inc
push
pop
es
aas
or
repnz
jl
mov
adc
ficomps
dec
arpl
jb
imul
xchg
cmp
pop
mov
addr16
xchg
pop
xchg
ja
je
mov
into
and
lods
ljmp
pop
cmp
out
xlat
nop
popl
lds
test
mov
jp
inc
xor
jae
adc
add
and
mov
xchg
mov
sbb
push
mov
ja
outsb
leave
fsubs
fists
jne
mov
mov
fistl
xchg
mov
adc
add
pop
ret
lock
mov
lcall
scas
pop
mov
and
sbb
out
loope
in
or
inc
cmc
enter
out
mov
mov
mov
test
adcl
cli
leave
add
sbb
jno
and
adc
data16
mov
jmp
cmp
rcrb
xchg
int
jo
popa
mov
mov
mov
gs
mov
jae
and
lcall
dec
mov
sub
and
out
push
dec
mov
sbb
out
out
xchg
pop
dec
mov
cwtl
ret
xchg
cs
movsb
rorb
xor
jns
mov
xor
pop
dec
push
push
cld
cmc
dec
insl
les
pop
sub
mov
mov
mov
andb
out
xchg
arpl
mov
cli
out
loop
push
movsb
test
sbb
out
mov
xor
in
and
sbbl
and
daa
mov
mov
sub
xchg
mov
mov
imul
pop
cmp
aaa
ss
cwtl
mull
sub
negl
cmp
adc
adc
mov
popa
mov
scas
addr16
loopne
push
sub
push
das
mov
adc
mov
sbb
inc
xor
push
dec
ret
sbb
fisttpl
out
dec
out
pop
test
mov
int
inc
mov
and
dec
cmp
fsubl
lock
or
sbb
pop
cmpl
add
mov
pusha
or
push
adc
inc
jbe
cmp
lods
inc
in
xchg
push
in
nopl
sub
sarb
fidivs
rolb
xor
nop
addl
sub
out
pop
dec
repz
mov
mov
nop
lods
cli
xchg
inc
xor
mov
dec
pop
stos
lea
pop
ss
push
inc
lret
cmp
mov
sti
cmp
mov
mov
enter
mov
jg
add
xchg
dec
sti
adc
adc
pop
add
cmp
dec
lods
stos
mov
jecxz
pop
adc
test
iret
data16
loop
sbb
sub
adc
and
sub
sub
sub
cmc
fs
or
stc
adc
test
ficoms
int
push
mov
push
mov
out
xor
pop
lret
mov
mov
dec
and
or
rcrl
jnp
mov
lahf
ss
out
pop
shl
insb
adc
js
xchg
sub
rorb
xchg
or
sub
jmp
pop
sahf
lds
and
cltd
cs
mov
sbb
push
pusha
and
mov
push
add
lcall
cmp
pop
mov
or
pop
jg
jge
lret
cmp
add
pusha
dec
das
mov
lret
jg
cli
push
push
fisubrl
mov
repz
out
repz
xlat
sub
add
push
js
lahf
mov
lahf
xchg
xchg
sub
mov
push
xor
cmp
sti
sbb
xchg
cmp
test
out
cmp
mov
push
js
jne
push
push
xchg
inc
cmp
je
cwtl
push
test
sub
ds
mov
decl
dec
xor
js
push
inc
mov
cmpsl
pop
gs
inc
add
rcrl
dec
and
and
xchg
imul
jns
add
xchg
loop
loopne
xlat
dec
dec
test
and
lock
aas
inc
jbe
and
xchg
xor
lods
cmp
xchg
in
xchg
stc
shl
bound
sbb
sarl
pop
jl
enter
outsl
pop
test
leave
outsb
lds
fcompl
add
aad
shll
mov
cmp
xchg
xchg
xchg
mov
idivl
pop
mov
aas
dec
adc
loopne
jg
mov
mov
roll
mov
pop
fisubrl
push
mov
pop
movsb
fs
jno
outsl
adc
mov
pop
cmp
lret
add
xorl
sarl
mov
lock
je
push
ret
fs
mov
jne
lcall
cmp
scas
inc
add
and
stos
sbb
jecxz
cltd
stc
scas
sar
stos
push
test
push
addb
cli
jge
push
or
and
pop
les
sbb
ds
xchg
and
lahf
mov
cltd
cld
jae
jmp
mov
das
mov
add
pop
sub
push
adc
xlat
jne
dec
mov
mov
test
or
adc
sub
fmulp
fistps
xchg
aaa
mov
rcr
data16
cmp
in
scas
cmp
shll
mov
jle
fs
inc
push
jae
mov
int
push
dec
xchg
arpl
repz
push
out
mov
std
jno
mov
adc
inc
add
jb
cmp
repnz
xor
pop
movsb
icebp
es
bound
inc
xor
mov
fs
mov
inc
leave
lahf
sbb
sti
add
dec
sub
fs
ds
pushf
jno
add
and
cmp
ljmp
addr16
push
rcll
nop
xor
pop
adc
pop
pushf
or
in
in
adcl
dec
movsl
push
outsl
or
es
lret
jp
lds
lahf
mov
js
mov
xchg
sbb
cmp
pusha
shl
push
pusha
xchg
popa
insl
push
les
mov
gs
aaa
jecxz
xchg
mov
lea
inc
loope
test
sahf
flds
push
dec
mov
jnp
in
inc
cmc
pop
xchg
fisubs
push
cmp
adc
clc
fdivr
pop
xchg
mov
mov
xor
xor
sub
test
mov
ret
in
sub
sbb
cmp
xchg
pop
adc
aam
push
dec
jle
int3
cltd
add
ret
xchg
dec
mov
sub
sarl
popf
inc
ja
outsl
sub
rol
xlat
fstpl
mov
dec
test
insb
add
inc
jo
push
dec
jbe
scas
popf
jmp
mov
pop
inc
enter
std
sbbb
add
mov
addl
mov
je
mov
leave
scas
cmp
pop
into
pushf
mov
inc
mov
iret
jle
and
pop
lahf
jns
pop
dec
jg
mov
popa
fadds
lock
fsub
pop
xor
mov
popa
mov
xor
xchg
pop
add
fcompl
mov
cmp
adc
addr16
sbb
out
push
xchg
mov
fidivs
in
pop
in
test
mov
rclb
and
pop
adc
add
clc
and
movsb
pop
mulb
push
sbb
dec
leave
arpl
push
aaa
add
fcoml
sbb
jae
xor
cltd
hlt
std
lea
stos
out
jp
jp
scas
mov
push
sub
add
rcrl
jl
xchg
pop
out
repnz
hlt
lods
jno
jl
js
sbb
and
mov
dec
jb
lret
es
jno
dec
mov
shrb
push
cld
fstl
sbb
and
mov
add
sbb
and
cmp
jle
cltd
rol
and
clc
lds
insb
lods
ds
loop
popa
xor
cltd
mov
push
hlt
push
sub
xor
orl
jl
outsl
imul
rol
jmp
hlt
jne
inc
pop
test
inc
stc
aad
dec
mov
pushf
imulb
xorb
lcall
sbb
and
rclb
aad
sub
sub
aaa
or
mov
cltd
add
leave
inc
xchg
and
lret
inc
add
nop
adc
xchg
js
test
push
mov
dec
sbb
inc
cltd
push
pop
jle
pop
or
inc
xchg
data16
out
jp
mov
dec
test
sub
xchg
xchg
xlat
cld
push
das
pop
or
push
arpl
out
add
adcb
mulb
js
repnz
jno
int
ds
add
stc
push
gs
inc
ljmp
lock
inc
stc
inc
in
xchg
mov
ss
mov
mov
inc
ss
or
xor
fisubrl
loopne
and
and
pop
lahf
xchg
sbb
sbb
popf
push
pop
mov
repz
mov
pop
mov
js
lcall
sahf
or
dec
and
cmp
lcall
sbb
scas
mov
fdivr
popf
mov
add
push
xor
dec
jmp
mov
adc
xchg
and
cltd
or
int
pop
mov
sbb
imul
and
mov
push
and
xchg
sti
push
je
pop
ds
mov
mov
fdivs
fistpll
outsb
jmp
fistpll
aas
data16
jle
imull
hlt
test
aas
push
in
scas
loopne
popa
jne
cmp
je
inc
jb
repnz
add
cwtl
call
mov
icebp
scas
jbe
push
lods
lret
inc
ds
jle
imul
jns
es
jae
ss
fsubl
mov
mov
outsb
dec
addr16
movsl
mov
dec
mov
adc
xchg
xor
xchg
test
cltd
lock
sti
adc
repz
mov
test
lcall
xchg
stos
pushf
dec
mov
js
addr16
push
jns
cmp
arpl
xor
dec
ret
dec
mov
outsl
cmp
cmp
or
jmp
fisttps
xchg
push
sub
xor
in
sub
jne
aaa
sub
add
jno
addb
insb
xchg
in
sub
or
pop
xchg
adc
test
mov
dec
xorb
jae
idivl
ja
pop
mov
aad
scas
mov
sbb
adc
imul
popf
adc
loope
in
ja
loop
stos
add
xchg
sbb
test
inc
mov
jmp
aad
fbstp
lcall
insb
stos
enter
dec
add
xor
lcall
push
lods
jno
push
in
push
mov
xor
cmpsl
and
lret
test
outsb
into
jg
mov
adc
xchg
stos
sbb
mov
lcall
xchg
pop
cmp
cmp
add
or
jns
int3
fcoml
xchg
push
stos
dec
mov
rcll
mov
daa
insb
pop
dec
je
inc
sub
clc
pop
sbb
pop
cmp
out
cmpsb
xchg
iret
pop
pop
pop
insl
mov
xor
and
ret
xchg
imul
inc
icebp
dec
or
push
js
fimuls
fidivrl
out
jo
jno
xor
push
inc
rorb
xchg
sahf
add
dec
push
fstl
or
hlt
sub
add
pop
mov
mov
add
nop
mov
cmpsl
jo
cmpsb
mov
rol
ja
adc
ror
xor
adc
lret
jmp
sub
xchg
push
mov
ds
jmp
cmp
jns
js
sub
insl
fimull
test
sub
cld
mov
jmp
flds
cmp
mov
rol
enter
push
sub
jle
inc
xchg
cmpsb
jns
dec
mov
and
push
and
or
pop
or
dec
inc
pop
sbb
add
pop
inc
pop
in
mov
pop
mov
cmp
add
add
je
fnsave
and
lret
data16
pusha
mov
ret
push
mov
sbb
iret
jp
add
push
das
test
test
mov
jp
shll
add
aad
push
sbb
roll
xchg
jecxz
inc
or
add
call
mov
popf
movsl
outsb
test
insb
jge
jo
inc
xor
mov
idivl
dec
lea
das
rorl
pop
sahf
scas
add
sbb
jo
push
pop
xor
adc
push
jo
jb
cmp
fidivrs
addl
cmp
mov
and
lret
ljmp
in
out
mov
js
sbb
add
imul
cs
mov
ret
clc
push
daa
aad
or
mov
push
ss
mov
bound
jp
jg
lret
cmp
xor
inc
into
pop
push
fisubl
xchg
push
pop
divl
out
insl
leave
jge
sub
xor
in
cmp
push
les
aas
aaa
nop
fcoms
imul
jo
push
ljmp
int
icebp
mov
jmp
lods
cmpsb
mov
loop
mov
sbb
out
sub
mov
ds
test
in
das
pushf
inc
loope
mov
xchg
jno
dec
dec
mov
dec
pushf
and
mov
je
mov
cmp
comiss
mov
mov
push
jle
repz
data16
dec
and
jp
fsubrp
add
rcrb
push
lcall
xchg
mov
dec
cmp
inc
mov
das
pop
pop
pop
add
loop
lcall
ret
mov
loopne
adc
jecxz
push
cmp
in
cld
test
repz
lret
push
xorl
sti
jno
lahf
imul
pop
or
ficompl
cmpl
cmc
xchg
aas
mov
pmuludq
shl
sub
mov
ds
push
xchg
inc
inc
mov
jmp
push
dec
loopne
sbb
cwtl
movsl
mov
mov
fisubrl
adc
shl
gs
adc
ret
sub
pop
aas
ds
cmp
arpl
dec
jae
xlat
adc
repz
enter
loope
int
mov
imul
arpl
rcrl
mov
int
or
cmpsl
loope
test
hlt
int3
pop
xchg
jns
sbb
add
daa
push
mov
cltd
dec
loop
pop
movsl
cmp
int
sub
inc
orl
jmp
leave
scas
je
mov
insl
popf
pop
fisubrl
mov
xorb
hlt
aad
or
xchg
cmp
jmp
sbb
sub
rcrb
push
jbe
jnp
pop
dec
cltd
cld
xchg
test
lea
fs
and
push
roll
jmp
dec
mov
pop
inc
dec
nop
xchg
je
pop
in
jae
adc
pop
xor
mov
test
mov
and
pop
inc
and
sbb
test
popf
fdivrl
sub
ds
mov
pop
fwait
or
jo
lock
mov
ds
loop
dec
mov
xor
xchg
clc
scas
push
sub
pop
add
pop
arpl
int
mov
push
pop
popf
loope
jle
or
or
mov
subb
xchg
mov
lret
sub
repnz
out
adc
in
out
mov
dec
or
push
jg
inc
push
in
into
sbb
pusha
pop
das
jl
fcmove
insb
inc
rcrb
stos
outsl
inc
insb
mov
loopne
lds
pop
xchg
mov
push
fcoms
adc
clc
sub
std
ret
adc
popf
jnp
cmp
insl
push
out
pop
and
rorl
inc
jbe
xlat
mov
rolb
sbbl
lds
push
mov
ret
jo
cmpl
popf
sub
testb
shrl
scas
mov
mov
pusha
iret
fmuls
inc
pushf
jge
fimull
stos
jb
push
scas
shr
fs
nop
dec
fimuls
lods
fs
jnp
out
jb
jbe
dec
fwait
sahf
or
fstpt
and
push
aaa
xor
mov
addr16
lods
pop
rcrb
mov
push
clc
xchg
inc
outsb
divb
lret
sarl
in
and
scas
sub
js
mov
adc
enter
sbb
push
dec
ljmp
rorb
in
sub
adc
and
mov
rolb
ret
sti
jns
sti
push
pop
sbb
es
push
mov
sub
mov
push
inc
xchg
push
push
popf
scas
xchg
arpl
cwtl
mov
jae,pt
mov
jnp
adc
mulb
jb
fwait
xchg
fcomps
mov
mov
mov
bound
test
pushf
mov
mov
dec
mov
mov
iret
sub
pop
xlat
dec
lcall
stos
pop
xchg
sub
mov
jle
xlat
xchg
or
pushf
inc
out
xor
int3
xchg
sub
cmpsl
jns
xlat
xchg
jge
lds
adc
xor
and
mov
enter
cs
hlt
or
stos
mov
push
jnp
ss
test
mov
xchg
jmp
dec
lock
testb
fstpl
inc
shl
mov
mov
push
lods
lods
jnp
mov
int3
aas
cmp
ror
arpl
aam
insb
xchg
add
or
mov
out
loop
dec
popf
mov
push
xchg
jl
lahf
dec
xchg
jl
lret
stc
cmc
jbe
lret
xchg
aas
lret
push
divl
push
scas
xor
mov
enter
xchg
iret
or
push
sub
mov
or
popa
xor
das
dec
pop
in
sbb
or
mov
jo
aas
inc
ljmp
movsl
test
ret
mov
loopne
sbb
xchg
mulb
mov
sbb
sbb
jmp
push
push
xor
push
cwtl
aam
jae
inc
mov
push
pop
sub
inc
ror
in
and
repz
xchg
popf
or
ja
jb
sbb
jnp
push
inc
nop
add
jae
scas
hlt
jg
idiv
inc
scas
in
nop
scas
mov
sub
fstpl
xlat
insb
ja
in
call
mov
fst
adc
scas
cmp
jmp
mov
and
mov
nop
cmp
aam
movsb
loopne
sahf
test
inc
in
sbb
popa
xchg
mov
ret
test
aam
push
fsts
imul
adc
mov
cmp
jno
xor
shlb
jp
add
pop
sti
scas
or
pop
repz
mov
dec
xor
xchg
sarl
mov
sbb
jne
lds
stos
mov
and
loop
arpl
out
add
addb
mov
stos
rolb
adc
mov
scas
shrb
je
mov
js
lret
jno
out
clc
jo
aad
aaa
lret
notb
not
mov
adc
lahf
adc
cmp
adc
frstor
dec
loop
sub
inc
adc
jne
andb
adc
jmp
cmp
mov
aaa
jo
xchg
test
adcb
cld
test
movsb
cld
dec
mov
arpl
sti
ljmp
outsl
lahf
dec
jg
repz
mov
out
jl
and
inc
pushf
idivl
dec
pop
shll
and
lcall
adc
nop
test
sbbb
out
push
movsb
and
push
add
cmp
or
cmp
ss
loope
repz
jo
notl
add
sahf
and
fcoml
pop
loope
rclb
mov
jns
jo
sahf
shrl
push
xchg
aas
cmp
jecxz
xchg
xchg
std
popf
fimuls
pop
xchg
and
daa
fldcw
mov
push
cmpb
dec
out
loope
lret
dec
pop
sbb
in
push
into
out
rorb
inc
lea
arpl
mov
mov
sbbb
imul
rorb
pop
es
lock
sahf
ds
in
add
sbb
ss
jecxz,pt
scas
jle
test
pop
daa
fcomi
inc
pop
fs
nop
jmp
mov
out
push
outsb
out
xor
mov
mov
cld
push
in
jl
nop
mov
pop
jns
sti
mov
repnz
fsubp
enter
and
out
cmpb
loopnew
pop
or
xchg
sbb
adc
sbb
jo
pop
mov
ljmp
out
rcrb
sbb
pushf
mov
lods
bound
imul
ds
shr
in
je
fs
iret
movl
js
shrb
push
aad
lret
mov
add
add
ror
xor
es
dec
mov
push
in
ret
xchg
xor
or
mov
xor
fcmovne
clc
dec
mov
mov
mov
mov
xchg
insb
aam
sbb
adc
sbb
or
pop
loop
ret
rolb
adc
bound
jle
les
out
mov
push
xor
addr16
pop
mov
out
movsl
mov
and
rcl
jecxz
pop
push
in
add
or
and
popa
aad
xchg
shlb
push
mov
xchg
adc
cs
or
dec
fidivrl
lods
les
ret
mov
test
or
popa
jge
lock
xchg
pop
repnz
imul
xchg
movsl
into
in
xor
mov
cs
int3
enter
pop
push
js
lret
add
pop
xchg
aaa
dec
xchg
push
in
hlt
sub
scas
es
in
mov
cli
test
js
pop
aaa
jmp
fnstenv
test
and
sbb
lret
rclb
rol
roll
enter
pop
pushf
cmp
xrelease
pop
mov
fnstcw
jbe
lret
inc
fisubrs
xchg
mov
push
mov
adc
add
adc
pushf
xor
test
mov
cmp
scas
out
mov
pop
hlt
pop
cmp
stos
jns
loop
xor
fimuls
xchg
mov
cmp
or
jg
mov
pop
xorl
aad
lods
lods
clc
mov
pop
xchg
incb
dec
mov
pop
dec
call
add
mov
xor
mov
mov
and
dec
and
jo
jle
push
pop
inc
inc
mov
in
and
pop
sub
push
dec
movsl
or
lods
sbb
mov
ret
jge
push
pop
mov
sub
dec
xchg
mov
nop
push
add
jo
mov
inc
adc
cmp
mov
test
xchg
out
cmp
sub
sbb
mov
xor
xchg
mov
into
and
daa
imul
pop
push
pop
test
mov
je
repz
imul
dec
push
mov
push
js
mov
xor
xor
and
or
pop
push
mov
lea
out
xor
inc
dec
stos
lret
mov
xchg
fs
outsl
sub
cmp
cmpl
inc
push
testl
mov
push
nop
add
nop
cmp
sub
push
push
out
scas
arpl
pushf
jge
addr16
jle
inc
jne
lahf
ds
and
add
in
idiv
jo
aam
pop
push
lret
dec
xchg
aam
mov
cmp
and
mov
sbb
push
xchg
or
push
imul
cwtl
aas
imul
sbb
lcall
mov
imul
out
jae
movsl
and
in
imull
sbb
hlt
in
lret
out
das
inc
sub
inc
adc
push
adc
cmpsl
dec
xchg
pop
push
inc
add
fwait
aad
ja
add
mov
fldcw
mov
cli
xchg
stc
lahf
pop
stos
mov
jp
and
mov
dec
dec
xchg
sbb
repz
adc
xchg
mov
cmp
mov
mov
xor
addr16
test
mov
adc
xchg
movsl
push
xchg
rolb
mov
mov
stc
out
jns
push
lahf
jecxz
cmpsl
mov
add
inc
jb
mov
add
push
dec
cmp
divl
sbb
mov
push
sub
jp
pop
int3
decl
pop
inc
xor
inc
adc
mov
mov
push
call
mov
mov
and
cmpb
cld
fisubs
mov
dec
mov
cltd
mov
mov
cmp
jmp
shll
dec
sub
or
addb
lret
push
test
hlt
mov
jge
or
xchg
jge
into
fcoml
mov
sti
enter
push
mov
pop
inc
cltd
js
lods
xor
cvttps2pi
inc
inc
iret
lcall
pop
dec
or
arpl
mov
xor
icebp
fdivs
adc
sbb
sbb
xor
in
addr16
xlat
sti
jg
lret
ret
inc
xchg
mov
sbb
jp
js
and
mov
pushf
sub
jecxz
inc
imul
sub
jnp
adc
dec
leave
mull
mov
sub
dec
test
push
je
lods
xor
in
sbb
xchg
lods
xchg
scas
movsl
inc
jl
xchg
mov
insl
jecxz
insl
push
xchg
cs
out
lods
sub
sbb
add
xor
stos
sbb
lret
jecxz
ffreep
mov
pop
xchg
push
in
or
out
xlat
test
cli
movsl
fstl
mov
jecxz
dec
out
js
int3
or
mov
std
pushf
jp
aam
inc
add
loopne
push
xchg
xchg
mov
in
fldl
and
aad
mov
jmp
stc
cmpsb
sub
adc
sbb
nop
icebp
xlat
negb
xchg
test
sub
out
daa
inc
jmp
ljmp
js
js
xor
jge
or
outsl
add
xchg
mov
mov
arpl
aaa
sub
sub
pop
sahf
add
pop
dec
add
pop
hlt
stos
xchg
pop
enter
into
mov
adc
lret
and
pop
rorb
mov
roll
mov
add
ret
lods
cmp
pop
mov
aad
push
cmpsl
aad
mov
aaa
mov
mov
and
test
or
rorl
cmpsb
dec
ret
add
lea
outsb
adc
fldpi
js
push
push
cmpsb
stos
dec
lds
mov
cmpsl
jo
into
sahf
push
adc
cmp
divb
sbb
repnz
movsb
sbb
dec
jecxz
add
sbbl
sub
outsb
jnp
inc
cmp
mov
out
imul
push
das
sbb
mov
dec
push
jae
neg
jecxz
xchg
cld
mov
iret
ret
push
outsl
adc
adc
push
pop
adc
movsb
inc
mov
orb
cmp
cltd
dec
or
sub
adc
nop
sbb
mov
sub
fnsave
sub
je
and
jp
push
arpl
rcrb
imul
jae
adc
lahf
fsubs
pop
and
sbb
jle
sbb
mov
xchg
mov
add
rcr
xchg
lds
arpl
lret
loop
jge
cli
fstps
or
cs
add
xchg
and
lret
fwait
repnz
shlb
ret
test
inc
push
lods
inc
pusha
xorb
mov
outsl
cmc
mov
je
adc
pop
bnd
cmpsl
adc
inc
es
daa
adc
fcompl
inc
xchg
mov
pop
pop
xor
jbe
rol
ret
xor
sti
adc
mov
loop
push
clc
lret
lahf
faddp
iret
scas
or
xchg
pushf
insl
ljmp
out
xchg
or
push
lock
jl
push
adc
psadbw
xchg
add
jnp
jno
mov
icebp
jecxz
loop
popa
mov
cmp
mov
jo
jge
cmpsl
add
ret
ret
push
mov
pop
mov
sbb
lahf
push
xchg
scas
adc
xor
lock
or
sti
xlat
rorb
fsubrs
adc
rorb
jecxz
xor
test
out
xor
imul
clc
into
insb
cmpsl
cwtl
lds
invd
dec
pop
lods
sub
jno
adc
dec
lods
mov
dec
mov
mov
adc
out
loope
ds
fucomip
ja
xchg
push
mov
cmp
inc
lea
addr16
sahf
in
jo
and
adc
call
and
test
fistpl
xchg
mov
adc
cmc
lcall
hlt
cmp
lods
cmp
test
xor
mov
jl
cwtl
inc
add
andb
mov
pushf
xchg
punpcklbw
cld
jb
imul
sbb
cmp
mov
les
insl
sbb
addr16
add
or
jo
lock
aad
xor
rcrb
lcall
jmp
sub
and
xchg
pop
push
pop
dec
insb
jns
lea
lret
or
outsl
xor
or
push
lea
inc
cmp
inc
xchg
flds
cmp
inc
xchg
xchg
jne
test
add
cltd
jbe
fisttpll
sbb
movsl
cmp
jnp
push
sub
arpl
lret
movsl
xchg
mov
cmp
in
int
movsl
mov
mov
mov
fists
xchg
enter
aas
xor
scas
mov
and
push
out
xchg
xchg
xorb
rorl
ds
mov
sub
add
pop
mov
outsl
mov
inc
add
mov
js
add
outsl
scas
sbb
sub
cmp
sbb
mov
into
loop
mov
in
orb
rcll
cmp
sub
imul
cmp
xor
mov
push
mov
les
dec
testb
pop
clc
pop
pop
mov
cmpl
jno
or
adc
dec
xchg
xchg
xor
and
dec
pop
cmp
repz
test
dec
pop
jae
test
sub
out
and
daa
pop
push
push
dec
fincstp
and
sub
sub
leave
leave
add
or
mov
lock
inc
int3
fsubrs
jbe
sub
pop
cs
in
jo
stc
lea
mov
or
jmp
loopne
sahf
ret
adc
leave
dec
ror
in
sbb
push
ljmp
popf
xor
out
push
in
scas
adc
lret
aaa
mov
sub
add
mov
pop
cmpsb
lock
test
int3
pushf
dec
jmp
pusha
lcall
bound
int3
or
stc
gs
aas
out
mov
lds
add
gs
fimull
std
leave
movsl
fdivl
xchg
int3
sbb
xchg
jb
test
jb
gs
or
pusha
std
test
shr
jg
add
cmp
test
shll
rcrl
adc
add
push
jecxz
lock
hlt
mov
push
and
cltd
ret
and
imul
or
push
xor
adc
jecxz
lods
push
inc
stos
std
idivl
stc
js
mov
mov
shll
clc
add
lret
push
cmp
sti
push
nop
mov
frstor
cli
je
inc
and
dec
aad
int3
inc
ficomps
and
jnp
xchg
jge
dec
jb
ret
inc
and
out
mov
lea
stc
pusha
sub
fs
or
xor
nop
push
out
xor
fstp
push
push
insl
push
loop
mov
pop
cmp
stos
lea
dec
rcll
rcll
lea
or
mov
xlat
push
mov
fisubs
add
test
push
inc
sbb
push
cld
js
cmp
lret
or
push
iret
movsb
movsb
push
xchg
sub
cmp
mov
cli
mov
jp
or
fistpl
mov
ss
jl
vmptrld
rol
mov
cmp
cs
out
xchg
xor
mov
cmc
iret
cmp
or
cwtl
movsb
sub
mov
jo
shrl
sbb
xor
lcall
adc
mov
ficoml
outsb
into
test
dec
pop
cmp
fcoml
inc
movsb
mov
das
dec
cmp
cli
push
ret
ret
dec
pop
xor
fsincos
das
push
insb
jge
fwait
js
into
inc
push
xor
pushf
loop
pop
xchg
pop
pop
stos
cli
ja
cmp
inc
jecxz
pop
adc
push
pop
mov
push
pop
jo
sahf
xchg
push
lods
cmp
cmpsl
mov
lods
xchg
stc
outsb
test
in
out
jle
sub
adc
iret
sub
pop
lret
lret
leave
test
xchg
and
pop
push
sub
pop
in
xorl
sar
mov
movl
mov
je
out
pop
mov
push
lea
fstl
add
or
flds
mov
jae
movsb
sub
push
daa
pop
sub
adc
inc
cmp
push
psubw
in
mov
outsl
jnp
aad
add
sub
sub
ret
adcl
pop
test
ljmp
repnz
lea
mov
and
push
xchg
stos
xchg
test
pop
arpl
or
and
lock
mov
mov
push
jno
or
int
movsl
insb
cmp
jnp
xchg
dec
adc
cmpsb
enter
sub
or
pop
cmpsb
xchg
mov
nop
repz
mov
adc
pop
sar
stos
out
dec
mov
mov
outsb
mov
fcoml
add
and
jb
xchg
xchg
mov
adc
or
mov
mov
inc
je
mov
das
xlat
lcall
mov
push
cmp
jge
push
mov
mov
out
incb
cmp
pop
sub
imul
scas
sbb
add
cmc
inc
jmp
cli
push
lret
es
ds
or
clc
les
mov
popa
lret
adc
sbb
mov
data16
push
rolb
lds
cld
out
jp
push
pushf
out
ja
pop
adc
cmpsb
ja
xor
and
push
shrb
dec
jg
cmp
mov
sub
or
and
jne
cli
sub
dec
fnsave
lds
dec
outsb
jno
das
cmp
test
xchg
and
push
jecxz
enter
push
inc
cmc
inc
push
hlt
mov
outsl
inc
sahf
stos
mov
std
xchg
xor
xchg
int
stos
movb
pop
popf
dec
dec
stos
mov
push
jb
jae
jp
ror
test
jmp
flds
ja
jmp
cmp
out
inc
cwtl
adc
xchg
les
sbb
push
aaa
out
inc
popa
and
insb
sti
stc
sub
ficoml
jne
pop
in
lock
push
rol
out
insb
sbb
paddd
popa
xchg
sti
jl
call
xchg
add
lea
aas
cmp
dec
mov
fsubrl
test
push
es
push
hlt
cmp
cmp
cli
addb
repnz
sbb
dec
inc
pop
push
mov
ja
mov
push
inc
adc
call
shrl
fsubl
jo
jno
xchg
mov
mov
pop
iret
out
xor
lods
pushf
cmp
std
xlat
cmp
shrb
arpl
xor
mov
fyl2xp1
jb
add
pop
cmpsl
push
cmc
xor
sub
jo
das
insb
lret
pop
cwtl
inc
cmpsl
adcl
xor
sbb
mov
sbb
sub
inc
jge
test
popl
inc
mov
faddl
insb
adc
movsl
rcrl
xor
and
xor
cld
push
jg
jp
push
lret
push
imul
adc
xchg
pop
lret
cmc
movsb
push
push
add
ss
adc
lods
lods
sbbl
aam
push
mul
adc
xchg
mov
dec
add
xchg
jp
xor
out
test
stc
adcl
insb
movsb
mov
fs
xchg
and
mov
dec
jg
xor
arpl
hlt
sbb
mov
sarl
aam
pop
xchg
dec
mov
mov
xor
mov
stos
in
inc
xchg
xchg
daa
sahf
mov
in
stos
gs
pop
fisubs
xchg
scas
and
sarl
ret
cld
int
adc
mov
cmpl
inc
and
jecxz
ret
jl
aam
push
inc
xor
and
mov
sbb
and
push
jg
jl
ret
ja
adc
mov
or
pop
adc
das
jecxz
shrb
iret
mov
xchg
hlt
push
cld
jle
add
cwtl
xor
adc
fistl
lds
add
sub
or
or
fimull
pushf
rolb
xchg
notl
mov
loopne
imul
int3
int3
stc
fdiv
insl
shll
sbb
sub
add
and
lds
jp
adc
cmpsb
cmpsl
jmp
and
cmpsl
popf
ret
lds
add
addr16
and
addr16
shrb
aam
pop
sbb
rol
jbe
les
mov
lret
testb
fldenv
dec
leave
mov
fs
pop
mov
or
into
lret
out
arpl
mov
call
add
xchg
dec
in
shll
and
cltd
add
notl
shlb
call
adc
rol
push
fistpl
dec
add
outsl
clc
pandn
xchg
adc
mov
enter
sbb
lods
add
and
cmp
js
mov
je
cmp
xor
nop
es
lods
push
outsl
fsts
sbb
pop
into
fsts
adc
mov
arpl
add
xchg
mov
xchg
cltd
or
add
shlb
daa
cmc
mov
adc
jbe
mov
icebp
mov
pop
and
xchg
arpl
add
pop
cwtl
sbb
mov
pusha
jg
out
fisubs
dec
adc
xchg
or
sahf
push
lret
mov
xchg
sub
lock
loope
or
inc
daa
dec
and
dec
pop
push
scas
shll
push
arpl
cmp
or
push
aam
dec
mov
fadd
andl
in
outsl
sub
addr16
fiaddl
pop
xchg
jle
push
inc
outsl
out
mov
xchg
xchg
add
xchg
mov
push
xchg
mov
mov
xor
scas
mov
mov
push
cltd
sbb
scas
xor
push
mov
daa
pop
loopne
aad
sub
clc
or
fs
shll
jp
mov
rcrb
inc
pusha
push
es
cmc
fwait
inc
loopne
loope
jne
jb
cmp
jmp
and
hlt
idiv
movsl
gs
cwtl
pop
mov
mov
rolb
pusha
dec
jp
mov
movsb
push
sub
notl
sub
lock
sbb
mov
inc
or
mov
mov
mov
fildl
mov
sbb
add
mov
cltd
gs
int
data16
push
sbb
fisubrs
jp
bound
mov
test
lret
and
pop
mov
aaa
adc
or
test
jne
pop
shrb
xchg
pop
xlat
jmp
dec
icebp
cltd
inc
int
and
add
mov
cmc
cld
outsl
mov
and
out
cmpsl
mov
mov
lods
or
pop
push
mov
mov
cmp
push
xlat
push
pop
or
jae
cmp
push
pop
cmp
cmp
imul
incl
sbb
jl
or
popa
and
test
mov
and
insl
mov
xor
adc
hlt
pop
js
dec
jnp
pop
out
inc
mov
and
mov
test
loope
adc
xchg
out
fldenv
shll
out
jecxz
sbb
add
pop
push
adc
jne
ss
orl
push
sarb
inc
jae
fcmovbe
test
lcall
cmpsb
mov
adc
pop
out
fcoml
or
or
and
outsb
cmp
dec
stos
dec
xor
in
call
jmp
jno
aam
shll
mov
sbb
sub
cmc
pop
or
mov
jae
out
xchg
fs
cwtl
xchg
sbb
cmp
pop
add
outsl
adc
repz
xor
cmp
sbb
mov
jl
pop
lahf
cli
jo
cmp
jo
and
or
adc
loope
pop
cmc
ljmp
push
push
and
push
out
push
fcompl
xchg
xor
arpl
sbb
or
xor
xor
fs
and
nop
test
icebp
out
jnp
inc
sahf
call
sti
adc
int3
jns
jbe
test
mov
cli
pop
test
xor
inc
stos
in
stos
loopne
mov
das
xchg
or
adc
pop
outsl
mov
gs
cmp
fdivp
jl
dec
xor
adc
cmp
mov
and
dec
rcr
lret
cmpsb
mov
stc
xor
cmp
adc
mov
dec
jg
jae
cmp
jno
mov
clc
adc
sbbl
lahf
loopne
jbe
mov
scas
in
es
mov
or
mov
popf
insl
pushf
jmp
jae
decl
cltd
das
dec
test
cmp
int3
dec
xlat
mov
cmp
mov
push
mov
rcr
popa
cmp
mov
adc
test
mov
mov
xor
ret
lcall
or
mov
dec
inc
push
or
xchg
sbb
int
mov
push
add
das
and
cs
std
sbb
sbb
xor
jae
ljmp
sub
push
test
cmp
fidivs
cli
jnp
negl
int
xchg
shrl
aas
mov
fidivs
or
mov
mov
in
popf
mov
mulb
or
ficoml
xor
aaa
or
pop
mov
push
scas
insl
cmp
dec
xor
lock
pop
xchg
in
jp
xor
pop
adcl
in
or
cltd
mov
sbb
dec
mov
dec
std
xor
cwtl
rcr
and
outsb
cwtl
aad
fnstenv
sbb
movsb
jno
rolb
popa
cltd
aas
pusha
pop
adc
sub
adc
repz
push
test
aad
cmc
pop
push
stos
mov
xor
arpl
push
ror
sbb
mov
lea
pop
or
mov
fildl
jne
add
sbb
or
and
push
add
sub
cltd
pop
rolb
lock
push
orb
nop
aam
sarl
lcall
mov
push
inc
cltd
loopne
pop
cmp
xor
stos
decl
leave
scas
int3
loope
repz
lods
insl
jmp
lea
imul
or
and
or
or
pop
les
pop
movsb
inc
in
jg
aas
pop
jae
mov
gs
push
mov
dec
ss
add
ja
mov
std
mov
nop
dec
ffree
mov
push
xor
mov
mov
ljmp
divl
icebp
push
adc
test
repz
push
cmp
xchg
add
fptan
bound
adcb
out
out
test
push
push
jb
in
dec
movsl
call
loopne
push
add
xchg
enter
ret
push
cwtl
mov
bound
out
lods
repz
loopne
pop
in
js
mov
mov
pop
daa
xchg
xor
fadd
ret
adc
ds
jno
lock
cmpl
stc
sub
bound
lahf
push
fbstp
add
pop
jge
or
in
push
push
ror
or
mov
insl
pushf
sbb
sbb
clc
testb
xchg
push
inc
stos
loopne
popa
adc
in
arpl
xchg
mov
ljmp
sub
repnz
dec
jge
cs
arpl
arpl
inc
push
inc
pop
push
jecxz
pop
fmull
dec
cltd
cltd
cs
sub
jns
rorl
push
xchg
es
mov
loopne
stos
std
mov
and
adc
xchg
fcoml
int3
fstl
jecxz
mov
xor
add
lds
loop
jp
mov
iret
or
hlt
lcall
xchg
cmpb
leave
inc
sub
xchg
cmc
inc
insl
inc
jle
sub
wbinvd
mov
lcall
call
fimull
call
dec
pop
jl
jnp
pop
mov
jno
popa
int
stos
sub
ffreep
mov
gs
adc
test
mov
xchg
jb
or
call
jp
jecxz
push
ja
ret
clc
adcl
push
xchg
fsubrs
fsubl
and
addb
add
inc
or
pop
or
mov
xchg
jecxz
test
test
rorb
cmp
ja
test
fmuls
push
or
mov
loope
outsl
pop
mov
xor
loopne
lods
jmp
xor
in
sbb
sahf
out
je
adc
test
jl
xor
push
inc
and
movsl
mov
dec
mov
adc
or
add
xchg
cmp
xchg
cmp
push
jle
mov
stc
inc
push
cmpsl
int3
in
repnz
out
ss
cmp
mov
dec
sub
daa
xlat
shlb
add
adc
clc
imul
shrb
repnz
lock
inc
fdivl
call
lret
pop
fisubl
in
sbb
push
add
ljmp
add
cwtl
xchg
pop
xor
enter
add
imul
adc
roll
arpl
inc
pop
pushf
cmp
fidivrl
push
repnz
je
lock
mov
pop
out
inc
out
imul
daa
movsb
scas
xchg
fwait
iret
fs
cli
mov
insl
push
into
adc
jmp
ret
adc
xchg
xorl
bnd
or
je
xchg
xchg
enter
cld
jo
out
outsl
dec
adc
or
lea
cltd
mov
dec
cmpsl
mov
outsb
pop
mov
cmp
push
rolb
push
mov
popf
xlat
lea
into
out
lods
mov
shlb
sbb
clc
loop
xor
mov
outsb
mov
mov
aad
in
mov
mov
pop
jno
adc
call
add
inc
enter
jp
mov
inc
insl
cs
nop
iret
pushf
push
add
cmp
or
sbb
adc
stos
sub
in
inc
sbb
sti
out
push
push
ret
xchg
fsts
cmp
out
jo
adc
repnz
outsb
xchg
scas
or
inc
fwait
imul
mov
rorl
mov
pop
jmp
cmpl
jle
sbb
pop
clc
sbb
int3
lea
mov
dec
enter
push
inc
rcrl
and
ja
lds
movsb
rorb
nop
dec
mov
push
dec
stos
sbb
mov
mov
stc
inc
or
add
mov
mov
mov
jo
sub
push
data16
iret
jg
hlt
sbb
cli
add
pushf
mov
mov
push
hlt
ror
imul
pop
leave
sub
xchg
sub
insb
or
jno
out
and
clc
imul
pop
pop
xor
jmp
jl
repz
shll
imull
sub
fidivs
pop
in
ljmp
les
mov
scas
out
loope
jmp
sbb
divl
dec
fidivs
ja
roll
out
sub
aam
xchg
xchg
pop
xor
jg
loopne
jl
pop
movl
jmp
dec
mov
mov
arpl
imul
inc
sub
inc
lods
push
adc
inc
adc
jl
mov
sbb
pop
inc
in
push
nop
call
push
sbb
fsubs
getsec
and
jp
mov
pop
mov
shl
mov
adc
insl
sti
jle
nop
or
movaps
loop
and
stos
adc
shll
outsl
daa
cmp
sarb
push
ficompl
movsb
fisubl
sub
icebp
test
bound
sahf
lahf
pop
insb
inc
add
lret
push
sbb
mov
pop
aas
pop
cld
and
sbb
clc
popf
push
jno
sbb
imulb
sbb
fists
repz
scas
out
scas
pop
dec
push
and
iret
or
int
adc
ret
push
cmp
popf
push
sub
stos
add
sbb
ja
ds
inc
cli
cmpsl
add
jle
jno
mov
in
pop
sbb
ds
xor
add
dec
and
cld
and
imul
fimuls
call
hlt
into
adc
jge
mov
lea
xchg
add
sbb
lret
inc
out
adc
mov
aas
mov
jmp
jo
push
pushf
xchg
jnp
and
xchg
inc
mov
mov
xchg
jl
repnz
fistps
push
or
adc
fiadds
ret
in
shrb
or
push
int3
pop
jnp
ret
add
int
inc
sahf
mov
outsl
lcall
lock
pop
pusha
inc
popa
lret
inc
daa
jnp
jecxz
icebp
lods
lods
add
out
mov
adc
add
mov
rcrb
shl
mov
fwait
call
std
mov
jp
int
js
sub
aam
mov
nop
and
gs
xchg
arpl
aaa
lods
js
push
pusha
jb
ljmp
iret
mov
add
cli
or
lods
dec
sbb
orl
bound
test
pop
or
sub
ja
jmp
inc
fdivs
pop
jo
rolb
pop
xchg
xchg
mov
mov
mov
xor
ds
cmp
out
ffree
test
add
xchg
aam
push
push
jge
jmp
mov
push
jb
push
ljmp
les
adc
inc
out
cld
stos
xor
scas
dec
pop
cmp
mov
and
cmp
dec
inc
pop
push
lret
mov
aad
sti
mov
mov
push
xor
cltd
and
xchg
ds
push
scas
leave
rorb
lods
mov
xchg
xchg
mov
or
int
shl
ret
insl
pop
pop
mov
lds
push
xchg
lock
dec
ficompl
xchg
les
das
in
into
jmp
punpckhbw
pop
cmp
push
mov
cld
sub
adc
jne
or
jmp
fldenv
mov
mov
pop
shrl
push
fmull
mov
dec
pop
test
pop
adc
pop
fs
dec
inc
clc
push
fisubs
push
aam
inc
ss
xchg
movsl
push
out
ret
out
rcrb
icebp
fwait
pop
xlat
push
insl
xchg
cmp
in
jae
mov
add
adc
jns
mov
fsubrl
sub
xor
inc
mov
ds
push
fldt
ret
rcl
jge
cmp
vorpd
loope
lds
ret
fmull
out
repz
cwtl
clc
orl
imul
scas
push
scas
xor
inc
bound
mov
cmp
movb
cmp
push
cwtl
mov
cli
mov
inc
test
and
sub
jnp
aaa
dec
aam
std
xchg
mov
mov
dec
inc
xchg
movsl
aad
or
jnp
or
jbe
mov
mov
int
ficompl
inc
add
seta
cld
mov
bound
mul
insb
pop
jae
lds
pop
sahf
push
lock
inc
sbb
lods
orb
dec
aaa
mov
cmp
fisubs
sahf
mov
xor
inc
bound
and
insl
dec
and
pop
hlt
adc
repnz
pop
insl
add
jno
inc
aas
add
cmp
scas
push
mov
divb
sub
ret
gs
xor
cltd
leave
mov
xchg
cwtl
cmp
sub
or
imul
jmp
or
in
mov
xor
subb
sub
hlt
jns
sub
and
push
repz
sub
in
cltd
sbb
sub
inc
aaa
outsb
testb
sub
test
pusha
mov
jp
dec
xor
les
lds
jo
je
imul
adcl
jne
in
sbb
mov
add
mov
sbb
in
add
fmuls
lahf
jmp
cmp
add
jp
mov
xchg
aam
sbb
xchg
xor
inc
sbb
sub
imul
popa
inc
cwtl
mov
xchg
js
mov
adc
push
pusha
sbb
add
sub
xchg
cmp
mov
mov
cmp
lret
cmp
xor
icebp
out
and
mov
in
and
push
xchg
mov
jae
lret
sbb
ss
mov
mov
sub
mov
cmp
xchg
push
mov
mov
ret
push
xchg
pop
ret
push
in
movsb
push
mov
pop
and
and
add
hlt
cmpsl
rorl
aaa
mov
fiadds
fsubr
inc
lods
insb
pop
mov
jg
cld
popf
mov
xchg
jae
mov
popa
imul
pop
inc
inc
aam
jle
leave
iret
in
xchg
adc
les
jp
inc
pop
in
in
inc
jnp
push
xchg
dec
add
pop
adc
xchg
xchg
popa
jecxz
mov
sub
cwtl
jbe
iret
xor
mov
mov
pop
cmc
imul
mov
inc
mov
dec
jnp
sub
xchg
push
ret
mov
fldenv
adc
or
std
ds
cmp
sbb
repnz
jbe
mov
cmpsl
je
inc
jae
idiv
int3
loope
add
push
cmc
xor
sar
mov
repz
cwtl
mov
xchg
adc
inc
lds
not
hlt
lock
out
in
fsubs
sub
call
lods
cmp
adc
std
shufps
flds
cmp
popf
loopne
dec
sbb
insb
mov
stos
and
jge
lret
int
je
call
and
xchg
in
fcomps
mov
jmp
sbb
mov
or
sbb
inc
jno
int3
lods
lock
push
shll
jge
mov
cltd
inc
hlt
ret
xor
inc
inc
adc
cwtl
shlb
nop
mov
data16
mov
ficompl
fiadds
rolb
imul
or
pop
stos
std
mov
daa
push
dec
adc
cs
dec
repz
mov
inc
les
sub
out
xchg
jno
in
sub
testl
std
mov
cmp
sahf
sub
jo
or
fisttps
cmpsl
inc
outsb
xchg
pop
xchg
mov
mov
jl
pop
mov
arpl
and
inc
clc
xor
in
xchg
adc
cmpsl
pop
mov
push
call
add
popa
xadd
inc
push
into
xchg
jns
insl
pushf
ja
test
pop
push
or
cmp
cmpsb
out
jns
jns
popl
sub
lods
xchg
or
xchg
les
cmpb
fs
lcall
sbb
pop
sbb
mov
dec
cmp
out
xor
into
js
adc
call
inc
mov
jo
ja
mov
mov
clc
cmpsl
gs
xchg
xchg
pop
movsb
mov
imul
push
mov
and
aad
and
idivl
push
sbb
inc
out
cmp
shl
mov
outsl
outsl
cld
inc
pop
and
xchg
fs
cli
cwtl
or
add
loopne
shr
mov
cmp
subb
cmp
aaa
jns
ret
int3
fildl
push
cmp
nop
rcll
scas
adc
mov
shrb
movsb
lcall
jne
push
out
stos
add
xor
pop
or
mov
stos
icebp
out
xchg
xor
mul
ret
dec
stos
push
jge
loopne
mov
sub
or
out
aad
xchg
jg
xor
jo
cltd
test
outsb
sbb
outsb
clc
popa
xchg
mov
inc
out
popa
cmp
mov
scas
setb
add
popf
dec
es
jle
je
leave
in
fldt
arpl
dec
test
jg
daa
movsl
cmp
loop
cmp
sub
mov
inc
push
cmp
xorl
mov
add
ja
pop
push
pusha
jle
pop
sbb
add
cmp
lcall
push
mov
or
mov
clc
pop
mov
cmp
sbb
sub
jno
push
mov
mov
popa
add
insb
pop
push
lret
sub
cmp
imul
rorb
jb
jne
adc
add
data16
fsubrs
pop
xor
jae
pop
pop
sbb
pop
pop
or
int3
sbb
push
pop
out
cmpsb
dec
pop
adc
dec
dec
push
mov
xchg
scas
sbb
dec
mov
sbb
adc
divb
pop
fwait
pushf
and
popa
aaa
popf
jg
test
cmp
enter
cmp
mov
mov
jp
jnp
test
mov
push
dec
popa
out
xor
xor
ret
and
cltd
repz
and
lret
add
bound
movsl
sbb
add
faddl
fstpt
lret
lock
test
imul
xchg
cmpsb
movsl
addr16
insl
inc
mov
aaa
insl
jno
dec
stos
mov
xchg
dec
mov
pop
and
lea
scas
hlt
and
dec
int
mov
ss
jl
xor
push
jge
or
sahf
out
cmpb
imul
jecxz
cmp
outsb
sarl
push
add
jnp
cmpsl
imul
jnp
jns
adc
add
xchg
mov
add
pop
xchg
push
pop
jns
dec
imul
dec
push
add
loope
aaa
xchg
and
push
cltd
pop
imul
xor
pop
mov
xor
mov
out
lahf
lret
cmp
stc
xor
shlb
jbe
in
in
add
aad
leave
dec
mov
push
sub
and
dec
inc
out
pusha
jle
pushf
aad
jae
addb
loope
fcoms
mov
je
aad
mov
xchg
in
add
outsb
decl
mov
imul
addr16
sbb
ds
xor
cmp
dec
mov
cmp
fwait
adc
cmp
add
fnstcw
add
mov
cmp
cltd
pushf
mov
stc
mov
sbb
pop
aad
mov
jle
or
mov
dec
subb
call
mov
push
imul
arpl
cmp
arpl
loopne
movsb
enter
and
les
ds
les
jae
mov
out
cmp
cmp
into
inc
mov
mov
mov
in
add
int
cli
aad
loope
push
cmp
jecxz
xor
cltd
insl
sti
je
int
lcall
daa
ficomps
in
ljmp
push
jne
addr16
mov
push
hlt
push
and
int
arpl
or
add
push
mov
mull
ss
push
sahf
arpl
sahf
lret
mov
add
imul
cs
sbb
gs
mov
ss
pusha
int3
cwtl
cli
push
mov
push
and
dec
ret
cmp
and
ret
jo
adc
xor
outsl
or
into
stc
jb
mov
aam
mov
inc
movl
mov
mov
rolb
xorb
jl
daa
decl
xchg
jns
repz
pushf
mov
clc
lods
pop
pop
sbb
pop
out
push
stos
movsl
and
loop
mov
js
mov
jp
mov
dec
in
mov
std
clc
push
pop
xlat
cmpsl
adc
pop
xchg
pop
leave
push
xchg
lds
cmpsl
and
clc
dec
loope
cltd
jb
dec
jnp
adc
sbb
add
fst
jo
shrb
xor
out
or
or
mov
jge
xor
mov
and
sbb
cmp
xchg
push
pop
js
in
rcrl
test
outsb
mov
scas
sub
es
lock
in
push
cwtl
fs
push
jo
movsb
jmp
dec
movsl
and
pop
pop
sbb
ss
fcoml
dec
mov
dec
loop
add
mov
push
add
into
dec
sbb
sub
sub
dec
or
popa
and
push
and
adc
and
bound
stc
and
rcrl
mov
dec
sti
pop
js
out
out
cld
push
pop
adc
out
inc
sub
adc
imul
fildl
adc
adc
push
add
mov
out
sub
inc
loop
stc
test
fs
pop
push
aas
mov
arpl
dec
xlat
mov
in
or
movsl
dec
push
rcrb
mov
inc
jo
dec
inc
and
movsb
mov
xorb
je
testb
inc
sub
mov
in
inc
jne
test
sti
enter
data16
mov
iret
xor
jbe
mov
push
movsb
mov
nop
imul
xor
and
fisubs
rcrl
xor
push
mov
js
in
out
xchg
jp
mov
insl
mov
mov
dec
inc
outsl
or
push
jb
dec
lods
add
pop
stc
mov
bound
cmp
mov
sbb
xor
jnp
adc
xchg
jg
push
push
pop
push
mov
inc
xor
mov
sub
sub
fcmovnu
push
aaa
and
xchg
cmpsl
jecxz
inc
push
bound
push
sbb
mov
mov
gs
fdiv
ja
std
sbb
movsl
push
mov
push
stos
xchg
sahf
cmp
in
pop
enter
inc
cli
shlb
jp
data16
lods
and
fs
scas
fs
stos
adc
mov
xlat
sub
call
push
test
out
arpl
rcrl
xchg
je
mov
add
jmp
stos
cmp
pop
into
mov
add
fidivs
xchg
sub
rolb
push
pop
outsl
repz
enter
test
mov
test
enter
shlb
jecxz
inc
sub
ficompl
gs
add
sub
mov
fwait
pop
outsl
sarl
jns
push
mov
loopne
adc
xchg
sub
xor
es
inc
inc
inc
lea
push
icebp
notl
shrb
sub
mov
xor
mov
xchg
sub
or
lea
lahf
aas
xor
addl
inc
mov
inc
jno
test
data16
mul
jns
jae
mov
and
push
jnp
icebp
test
add
aaa
je
dec
and
fistps
div
inc
out
cmc
movsb
jae
jle
and
jb
mov
sbb
or
push
je
push
scas
xor
nop
pop
loopne
pop
xorl
push
fcomi
push
movsl
shlb
jnp
sbb
pop
outsl
xor
jg
sbb
xor
sbb
scas
shl
mov
mov
mov
out
pop
scas
jo
out
sub
jp
xchg
xchg
mov
mov
inc
and
sbb
push
lods
pop
in
lods
cwtl
testl
xlat
js
mov
orl
or
dec
aam
pop
and
lret
outsb
push
and
add
shrb
fdivrs
ljmp
sbb
ret
bound
rcrb
in
mov
ret
cmpsb
aad
jb
and
xor
in
sub
xchg
pop
adc
push
mov
dec
mov
xor
or
clc
sub
scas
lahf
add
xor
jmp
pop
mov
adcb
jno
in
lea
adc
inc
inc
mov
mov
xor
les
int3
test
dec
leave
rclb
cmp
lret
repz
push
mov
je
or
jnp
inc
ss
mov
dec
aaa
adc
enter
rclb
xchg
sbb
jg
pop
jae
in
push
sar
pop
fnstsw
xchg
jo
or
loop
loope
ja
cmp
add
jb
mov
jg
dec
mov
push
stos
and
addb
icebp
mov
xchg
push
rcll
rol
jecxz
test
xor
mov
fcompl
dec
dec
ror
pusha
xchg
push
jno
ds
mov
shlb
in
cmpsb
inc
out
xor
loope
jg
pushf
jg
loop
cmp
inc
hlt
sbb
hlt
arpl
push
divl
fistps
or
inc
jns
insl
dec
push
cmpsl
shl
cld
inc
pop
and
rcrb
lods
inc
shl
arpl
sahf
je
ljmp
int3
push
repz
sti
xor
mov
adc
popf
add
sahf
inc
lret
push
sete
jne
jnp
add
dec
jge
movsb
dec
mov
loope
stc
insb
movsb
lods
das
imul
lahf
mov
dec
jne
xor
xor
xchg
test
mov
inc
insb
or
pop
rorb
mov
leave
ds
xor
insl
lret
imul
movb
clc
or
pop
addr16
add
jmp
jecxz
div
icebp
popa
out
push
imul
sub
sbb
jbe
outsb
aad
nop
lods
pop
mov
mov
fistpl
aaa
addr16
cs
mov
push
movsb
outsl
subb
pop
or
jae
cmc
sub
mov
gs
sbb
sbb
mov
dec
cmp
popa
cltd
stos
repnz
add
pop
les
stc
sub
cmc
or
popa
vmwrite
jne
jns
out
lret
fwait
xchg
or
sub
aas
gs
mov
pop
adc
jge
add
or
dec
jmp
idiv
sbbb
sbb
and
lods
lds
pop
add
arpl
test
sbb
stc
in
lcall
dec
sar
jne
adc
sti
push
inc
sahf
out
pop
xor
arpl
stos
fwait
cmpsl
inc
push
mov
roll
mov
sbb
das
xchg
push
dec
inc
es
xchg
inc
in
push
dec
hlt
xchg
lds
jns
xchg
mov
mov
jg
pushl
mov
push
stos
jns
inc
jae
enter
or
cmp
jp
pop
js
add
mov
outsb
cli
add
cmp
gs
testl
xor
adc
lret
mov
sbb
mov
loope
or
hlt
into
pop
out
cmp
lret
xchg
push
pop
ret
xchg
fdivrp
hlt
adc
mov
or
nop
xor
sbb
xchg
pop
dec
idiv
popf
jecxz
xchg
pushf
stc
mov
andl
les
stos
pop
int
je
cld
cmc
or
lods
xchg
and
pop
xor
push
or
adc
shrb
push
jnp
mov
fisubl
jns
testb
das
mov
dec
mov
and
xor
mov
fists
popa
loope
sbb
add
psrlq
mov
fwait
aam
sub
fstpl
lea
dec
push
and
cmp
sub
nop
roll
pop
mov
ja
xor
pop
js
loop
jae
pop
add
fstps
pop
enter
popf
and
jno
or
sbb
sbb
xchg
mov
das
nop
fs
lods
lret
ror
mov
sub
xor
pop
in
mov
or
cmp
push
pushf
mov
push
dec
data16
mov
cmpsb
cld
xor
sbb
ja
or
ds
imul
mov
jno
jo
mov
inc
sti
push
hlt
sbb
lock
or
cmpl
push
xchg
jle
loope
mov
xor
stc
pop
pop
mov
je
dec
sahf
inc
cmpsb
push
and
ds
test
push
xchg
ffree
dec
notl
inc
scas
pop
data16
ss
outsl
jno
fiadds
arpl
inc
loopne
ss
and
add
pop
push
insb
dec
movsbl
mov
lcall
fildll
fdivl
cmp
out
jg
mov
mov
notl
dec
push
into
push
xor
push
adc
repnz
in
inc
mov
imul
jae
cwtl
jns
xchg
inc
mov
stos
es
cmp
dec
out
cld
in
mov
lds
cmc
adc
cmp
js
loop
push
pusha
mov
xchg
bound
test
mov
fiaddl
jnp
dec
xchg
scas
je
dec
xor
fdivl
xlat
je
sub
into
add
sbbb
in
add
out
idivb
jo
loope
dec
xchg
sub
pop
inc
in
in
jmp
dec
adc
mov
xchg
mov
pop
ret
adc
lods
subb
stos
xor
rcll
testl
sub
imul
repnz
test
add
stos
pop
test
pop
fldt
shr
cmp
lcall
inc
sub
push
lods
inc
mull
dec
pop
inc
movsl
iret
push
sub
push
aaa
jns
sub
add
arpl
pusha
cmpsb
shl
mov
lods
fabs
dec
ja
out
push
mov
lock
out
cmpsb
popf
icebp
mov
cmpsb
xchg
jae
mov
mov
sub
shl
dec
or
sahf
sbb
lahf
mov
imul
aas
sbb
push
lcall
repnz
xchg
mov
or
aam
dec
pop
ljmp
push
out
mov
xchg
xchg
loopne
popf
into
scas
dec
mov
shlb
int
ss
xchg
cmp
stos
fsubrs
pop
loop
jp
pusha
in
fnsave
pop
mov
ret
enter
xchg
faddp
inc
bnd
add
clc
sbb
mov
sbb
ret
lea
lcall
out
cltd
xchg
imul
cltd
pop
and
jmp
popa
mov
inc
fbld
push
inc
pop
lock
ss
adc
ljmp
xchg
mov
stc
pop
repz
pop
inc
das
inc
cmpsb
pop
push
inc
jp
mov
test
jo
loope
fistpl
dec
or
fcmovb
xlat
mov
xchg
mov
sub
dec
stc
jae
xor
mov
jl
stos
jnp
sub
repz
inc
add
in
push
push
inc
cwtl
jae
cmp
lock
jns
and
cli
cmpsb
pop
mov
mov
incl
inc
cmpsl
ds
std
mov
mov
js
cmp
clc
and
test
inc
and
dec
out
jle
bound
xchg
mov
mov
and
add
push
inc
jno
jb
rolb
dec
andb
cli
pop
sahf
jno
aas
ss
dec
pop
lret
cmp
sahf
push
cmp
adc
stos
cmpsb
not
fists
stos
cmp
xchg
movups
cmpl
sbbl
pop
hlt
idivb
xchg
and
sub
cmp
xchg
mov
pushf
ljmp
arpl
aam
xchg
mov
jl
dec
lds
sub
jg
cmpsb
std
xor
int3
ja
mov
sbbl
sbb
pop
fisttpll
cmc
add
out
pop
fldcw
dec
ja
jbe
in
mov
add
in
mov
cmpsb
test
mov
fcmove
or
push
in
inc
or
xchg
sub
aam
lods
mov
or
ficoml
out
xlat
int3
jbe
stos
aad
insb
out
jge
add
in
cwtl
addl
int
dec
sub
pop
insb
jg
mov
popa
xchg
scas
sbb
mov
andb
push
mov
push
mov
mov
inc
jle
js
pop
out
cli
or
pop
push
fstpl
xor
xchg
push
dec
pushf
adc
dec
jo
test
xorb
fimull
sahf
jno
sti
pop
push
cmp
mov
jmp
inc
cmpsl
dec
add
mov
repz
jp
jl
scas
add
les
inc
mov
add
ds
mov
cmpsl
xchg
sbbl
xor
jnp
jl
outsb
out
sti
mov
pop
xlat
jns
or
mov
jb
jmp
mov
test
adc
mov
jge
push
sub
rol
js
gs
and
or
cs
daa
push
subl
in
in
lret
lret
mov
push
mov
pop
adc
inc
test
xchg
fidivl
lahf
fcompp
xchg
mov
sbb
ja
jo
cs
pushf
cltd
mov
pop
mov
jmp
ret
fldcw
gs
push
pop
dec
xchg
push
pop
sub
out
mov
sub
jb
sub
outsl
lds
cmc
insl
lcall
lods
mov
lock
jge
dec
daa
mov
mov
or
enter
mov
dec
ret
push
out
add
sub
enter
js
cmpsl
jmp
xchg
stos
xor
jp
pop
inc
dec
mov
inc
aam
loopne
stos
mov
xchg
and
repz
scas
loopne
mov
cmc
push
loopne
fsubrs
xlat
movsl
pusha
xchg
mov
mov
out
adc
iret
mov
push
popf
jle
push
add
push
or
and
les
pop
stos
inc
nop
and
jae
popf
xchg
test
movb
leave
adc
or
sbb
je
call
pop
dec
outsb
pop
movsl
mov
mov
ljmp
lret
sbb
push
mov
sub
lcall
pop
mov
and
cmp
jmp
xor
pusha
ds
dec
or
adc
xor
test
imul
lahf
adc
inc
sub
xor
aam
std
xor
leave
aad
xchg
shrb
and
addl
ret
dec
and
inc
pushf
adc
push
test
jle
insb
xchg
repz
idivb
popf
jbe
popa
lsl
xor
mov
add
push
mov
xchg
pushf
xlat
push
xchg
pop
rcl
adc
jge
push
mov
xchg
push
hlt
inc
lret
xchg
jp
rolb
jp
pop
jbe
cmp
lds
data16
mov
inc
jg
fdivs
lea
lcall
loope
jg
loope,pt
lock
mov
push
inc
pop
je
cmpsl
add
add
fwait
mov
xlat
adc
mov
xor
or
lcall
cmpsl
jo
daa
das
mov
xchg
fwait
inc
inc
loopne
cmp
in
mov
xchg
sub
icebp
mov
xlat
xchg
sub
stos
lods
cli
xchg
rorl
sub
in
push
aaa
or
fprem1
jno
mov
ficomps
test
add
shrb
pop
incb
inc
cmc
loop
in
sbb
repz
test
rcl
cmp
cmp
ret
mov
ja
push
inc
and
mov
lahf
and
lds
inc
sbb
pop
daa
mov
mov
mov
leave
test
in
jge
and
and
jno
xlat
sub
jb
xor
insb
cmp
imul
cltd
bound
sub
push
mov
jmp
push
adc
bts
sub
call
lret
test
pop
daa
dec
jae
xchg
notl
mov
cs
xchg
pop
or
into
sbb
int
aam
push
jge
cs
insb
jg
and
cmpsl
sti
mov
inc
imul
push
adc
shlb
js
or
imul
dec
dec
and
roll
cmp
arpl
sub
fmul
or
pop
mov
nop
out
dec
pop
pop
jl
jmp
xchg
jle
addb
adc
jl
inc
pop
and
test
sarl
cmc
lods
incb
fistps
add
ret
arpl
repz
fucomp
add
lock
fwait
mov
xor
lcall
lea
mov
out
mov
stos
cmc
icebp
lds
dec
jo
lret
sbb
loop
jns
mov
and
push
fs
xchg
add
lods
sub
icebp
mov
push
inc
xor
std
inc
or
or
lds
ror
sbb
sbb
sub
push
dec
sbb
adc
icebp
icebp
push
aam
pop
jae
mov
xchg
arpl
cmc
fcomip
dec
mov
ss
xorl
cmp
or
push
aas
mov
int3
sarb
addl
stos
pop
sti
dec
int
out
movb
adc
scas
cmp
mov
daa
test
punpckhwd
cmp
jno
pop
shll
fcompl
stos
cmpl
sbb
pop
call
pop
push
jne
cmp
lods
adc
xchg
hlt
push
pop
test
adc
movsb
scas
cmp
mov
mov
xchg
inc
jb
inc
lea
repnz
or
insl
lea
push
movsl
mov
test
aas
mov
pop
jnp
repz
add
add
push
mov
xchg
int3
mov
sbb
sub
mov
jne
sub
push
pop
lret
or
or
push
cli
pop
out
sub
in
jno
scas
cmp
je
cmp
adc
insl
movsb
inc
cmpsb
sub
inc
mov
stos
dec
inc
loopne
rcll
cwtl
cltd
xchg
inc
jge
lret
ja
mov
arpl
loopne
add
cmp
in
cmp
dec
aad
in
pusha
and
ficoml
jge
inc
cs
ret
lcall
mov
and
xor
sarl
sub
mov
push
adc
lock
sahf
mov
and
icebp
popf
and
sarl
cmp
push
mov
jne
aam
pop
mov
jae
mov
push
inc
sub
pushf
sub
fsubp
stos
cld
mov
pop
fisttps
jg
push
cmp
inc
dec
std
test
lret
push
sub
test
inc
add
push
inc
cltd
xor
xchg
imul
iret
or
cmp
jae
sub
cltd
in
out
jb
ficoml
mov
mov
jp
mov
cltd
clc
fidivrl
dec
into
mov
adc
mov
xor
and
mov
mov
jbe
pop
cld
int
jo
enter
mov
fists
sarb
das
xor
fsubs
xchg
js
shll
mov
sbbb
clc
lds
pop
sbb
mov
lar
cmpsl
mov
and
test
fadds
ljmp
in
fildll
mov
jmp
fists
int3
aas
lock
popf
cs
xor
mov
int3
mov
and
adc
jmp
pusha
ljmp
push
xchg
push
sbb
push
adc
sbb
jb
or
xchg
testb
mov
ds
inc
js
lds
dec
clc
jmp
lcall
daa
out
pop
cmp
cmp
ror
lahf
fsubrp
pop
out
jbe
js
int3
mov
mov
push
push
sbbl
pop
push
xchg
or
enter
scas
sub
scas
insl
jnp
mov
xlat
ss
aam
push
scas
jmp
pop
lret
sbb
das
mov
xor
rolb
ja
push
or
pop
iret
jnp
mov
push
sbb
mov
mov
mov
pop
dec
push
cmc
jp
movsl
and
pop
ja,pt
je
rolb
lret
inc
xchg
mov
push
jg
int3
outsl
mov
push
mov
lahf
mov
adc
repnz
ret
xor
lock
movsb
ficoml
mov
cmp
dec
stos
sbbb
loope
mov
or
push
dec
mov
imul
lea
xor
stos
jp
sbb
inc
shlb
push
sub
mov
dec
mov
and
and
rol
xor
gs
cmp
pop
loop
scas
lods
aam
cmp
jae
lods
sub
cmp
xor
or
pop
cmc
ret
lret
test
stos
test
push
rorb
ja
testb
sbb
cmpsb
mov
dec
jle
pop
jp
lds
push
test
pop
movsb
sbb
adc
push
nop
fists
sbb
sub
push
out
and
push
xchg
aaa
pop
pop
push
pshufw
inc
sub
add
pop
pop
inc
xchg
mov
pop
push
jnp
mull
test
enter
push
cmp
cmp
push
and
dec
ss
and
lea
loope
insb
stos
adc
mov
and
mov
addr16
push
cmp
fs
cmpsb
fldenv
sbb
fwait
stc
clc
push
cltd
pop
pop
adc
add
mov
pop
cmpsb
pushf
jg
xor
in
pop
out
add
xchg
mov
dec
add
mov
xorb
fcom
inc
es
adc
repz
push
mov
push
sbb
js
jg
add
fucomp
mov
fdivs
adc
push
outsl
xlat
jb
mov
pop
call
leave
lcall
jnp
mov
inc
subb
jl
fisubrs
aad
int3
movsl
dec
lret
jne
xor
push
es
lods
fstpt
insl
or
sar
cmpsl
jle
in
mov
mov
pop
test
xor
imul
popf
mov
fisubrl
movsl
pop
mov
jge
push
cli
int
and
jmp
jecxz
adc
repnz
pop
mov
loop
add
cmp
inc
inc
lock
or
mov
or
dec
pop
es
pop
mov
sbbb
cmp
push
xor
sahf
or
out
inc
fwait
test
sbb
imul
les
adc
mov
ljmp
out
int
or
cltd
mov
dec
push
int3
insl
push
in
jb
repz
bound
xor
mov
out
push
inc
add
sarb
sbb
out
out
lock
and
loop
loopne
and
jl
dec
test
or
xchg
in
push
pop
inc
stc
sti
popf
cld
sti
cli
inc
cld
pop
sub
jne
mov
arpl
adc
pop
pop
stos
data16
or
adc
cmpsb
repz
fmull
inc
and
std
inc
mov
ja
jle
ds
mov
lret
pop
jbe
push
stc
je
pop
push
sbbb
fs
ss
pop
jg
rclb
push
push
adc
es
xor
sahf
cmc
popf
mov
lock
insb
aas
inc
push
push
adc
xor
outsb
movsb
jmp
cltd
insb
push
xor
sbb
fucomi
lods
cmp
addr16
addl
or
or
into
mov
dec
ret
inc
scas
fcmovbe
insl
sbb
subb
loope
fstpl
xlat
mov
in
in
xchg
ficomps
adc
gs
xor
sbb
jmp
test
mov
repnz
lea
jecxz
roll
lret
pop
mov
je
scas
out
sti
mov
fnstenv
ljmp
aaa
mov
andl
push
xor
std
xchg
add
subl
mov
xchg
xchg
cmpsb
jb
mov
movsb
push
mov
mov
mov
jae
in
pop
dec
outsl
mov
dec
inc
mov
and
pop
ret
cmc
sbb
je
stc
shrb
nop
js
daa
add
jecxz
mov
xor
rcrl
fcmovne
sub
test
lahf
mov
pop
lods
mov
fsubrs
mov
sub
dec
fs
jmp
scas
rolb
push
nop
es
loopne
pop
mov
out
cltd
insl
mov
lock
mov
add
pop
add
aas
add
or
rcl
mov
push
sub
mov
jl
xor
je
xchg
rcl
shll
daa
orl
cmc
mov
insl
push
roll
mov
cmp
adc
stos
out
or
call
ret
sbb
sbb
jge
add
aad
xor
push
popa
out
cmp
cmp
gs
mov
push
push
addr16
mov
or
icebp
add
dec
icebp
push
push
aas
push
jno
xor
movb
sbb
mov
popa
mov
dec
inc
adc
fstpt
pop
push
push
aam
lret
dec
dec
in
das
xchg
fs
daa
xchg
pop
or
cmp
mov
sbb
lahf
xlat
or
push
pop
xlat
sbb
dec
ret
dec
jb
fsts
lahf
ss
mov
ficoml
jge
pop
insl
dec
stos
xor
dec
push
and
out
lods
mov
lcall
out
xchg
scas
or
scas
pop
test
lret
jp
shlb
shlb
sbb
adc
and
js
pop
enter
dec
pusha
test
mov
outsb
or
in
add
ss
xlat
adc
stc
pop
adc
cmp
mov
push
js
mov
lock
sbb
mov
loopne
xor
jno
sbb
shlb
js
pop
xchg
pop
and
es
clc
jle
inc
into
std
xbegin
daa
cltd
mov
loope
cmp
call
aas
mov
lods
popa
adc
fsubr
lcall
jbe
jae
rorl
rcrb
sbb
test
xchg
jnp
mov
lahf
adc
leave
test
mov
pop
arpl
mov
sarl
push
rorl
sub
mov
mov
mov
cmp
and
push
mov
or
adc
xchg
xor
insb
jns
add
xorb
jb
push
xchg
popf
push
lods
stos
pop
xor
fldenv
inc
or
in
jbe
xchg
inc
push
out
sbb
add
out
mov
dec
imul
sub
inc
push
insl
xchg
fndisi(8087
leave
nop
pop
in
mov
cmpsb
jp
pop
cmp
or
mov
inc
clc
cmpb
aam
mov
jne
mov
sub
dec
bnd
push
cmp
test
sbb
enter
add
test
mov
in
pop
roll
addr16
sub
or
sbb
nop
and
sbb
dec
push
cmp
addb
popa
sbb
ja
cmp
popf
jmp
inc
sbb
pop
dec
test
outsl
js
cmp
dec
mov
mov
cmp
sub
jl
xchg
es
loopne
cmp
mov
push
arpl
movsb
add
pop
sbb
lahf
mov
and
pop
movsb
aas
sbb
out
insb
fisttps
stos
add
test
enter
xchg
cmp
mov
loopne
fsubr
dec
and
push
inc
popa
or
outsb
push
daa
cmp
insb
scas
ja
jl
clc
cmp
cmp
pmullw
js
lret
jae
rclb
or
dec
sbb
push
mov
je
movsb
jae
and
loop
pop
jnp
inc
push
xchg
test
pop
mov
cld
mov
fucomi
or
sub
shlb
xchg
sub
hlt
ljmp
mov
xchg
ja
in
shll
fwait
and
into
fnstsw
mov
xchg
shlb
ficomps
hlt
xchg
outsb
les
lods
xor
fldcw
sub
cmp
sbb
add
push
xor
mov
int
pop
mov
cmp
ret
sbb
aam
lret
and
ficoms
sbb
enter
sub
lret
ss
popa
popf
mov
fprem
stos
repz
push
cld
dec
add
repnz
sbb
cmpxchg
xchg
adc
dec
add
jecxz
fistps
or
cmc
or
imul
icebp
cmp
int
dec
sahf
add
jmp
xchg
mov
jecxz
mov
cwtl
outsl
cmp
insl
sbb
adc
xchg
in
xchg
mov
pop
cltd
addr16
jo
push
dec
cli
pop
loope
xor
adc
inc
cmpsb
push
push
std
fistps
xchg
lret
popf
jecxz
pop
or
cmpsb
lods
jp
test
xor
cwtl
dec
sbb
mov
test
pop
adc
movl
mov
fsubr
adc
ret
sbb
add
repz
and
mov
aad
and
sbb
movsl
mov
bswap
dec
sbbb
mov
ljmp
xlat
push
mov
test
cwtl
cld
jbe
xchg
adc
add
lahf
pop
nop
or
add
cltd
push
pop
and
pop
leave
cmp
aad
pop
sub
mov
jnp
and
pop
addb
fsubp
sbb
hlt
mov
xor
mov
push
cld
sub
mov
xor
inc
lods
pop
insb
jecxz
arpl
dec
cmp
les
and
lds
out
out
pop
xor
filds
sub
jge
add
mov
cwtl
call
jecxz
lock
mov
jo
push
sahf
vsubpd
jbe
jo
test
data16
sbb
ret
sti
jb
xor
mov
testb
dec
mov
push
mov
mov
ret
test
movsb
sbb
cmpsb
mov
scas
adc
push
decb
stc
pop
sub
or
mov
lods
xchg
shrb
sbb
or
push
mov
push
js
mov
test
call
mov
pop
push
or
inc
mov
inc
jecxz
or
or
mov
dec
mov
imul
mov
rcll
and
leave
xchg
dec
inc
pop
imulb
sahf
out
ret
xlat
aaa
mov
cmp
sti
sarb
addb
jno
loopne
int
cmc
iret
push
ja
mov
cmp
inc
xchg
addb
sub
sub
lods
loopne
daa
cmpsb
jge
mov
cld
clc
leave
out
scas
jge
xor
test
jne
scas
xlat
sbb
repz
fisttps
mov
sub
sarl
pop
xchg
xchg
mov
out
mov
xchg
pop
mov
cmp
cmova
lahf
jecxz
out
gs
movsl
push
add
inc
aad
sbb
lret
scas
inc
dec
push
and
xchg
les
fwait
mov
fidivrs
imul
pop
scas
mov
pop
imul
scas
mov
sub
jb
add
mov
adc
popf
cmp
ret
nop
hlt
dec
jg
daa
cmp
dec
mov
insb
dec
mov
clc
imul
shld
inc
fisubl
loope
add
push
popa
sub
aam
mov
push
lods
sub
psllw
adc
jo
inc
fisttpl
adc
xlat
jnp
mov
in
cmpsl
arpl
lahf
shlb
mov
out
and
or
inc
adc
pop
popa
sti
outsl
jmp
daa
and
pop
out
mov
push
scas
xchg
dec
sbb
cmpsb
xchg
jo
add
sub
mov
adc
or
mov
lock
and
push
xor
fisttpl
inc
addr16
adc
cwtl
ret
inc
aas
dec
sbb
pop
mov
push
push
xchg
sub
repnz
cmp
add
mov
push
fisttpll
int
adc
push
sub
dec
xor
icebp
adc
andl
xor
push
jecxz
pop
cmc
sysexit
cs
or
push
das
mov
fs
jo
or
or
cmpxchg
loope
addb
fsub
push
xchg
lea
lea
or
stos
sbb
inc
orb
in
lcall
leave
inc
push
mov
cmp
test
push
cmp
aam
push
ret
test
test
pop
out
push
mov
jae
cltd
loop
out
adc
cwtl
in
push
out
clc
cmpsb
xor
stc
in
jns
fisubrs
rclb
dec
lock
out
rclb
stos
jmp
xchg
pop
mov
cltd
bound
dec
lret
push
repz
pop
shll
push
shrl
xchg
sbb
fsubrs
dec
out
or
jnp
jp
jg
aam
std
mov
mov
and
mov
mov
arpl
leave
jo
aas
les
rol
addr16
mov
jp
cmp
sub
jg
xchg
daa
sbbl
enter
mov
imul
push
and
sub
jmp
ss
arpl
repnz
mov
in
jae
pop
cmc
popl
jno
sub
stos
lahf
xor
cli
lods
inc
mov
add
popa
push
adc
xchg
pop
jp
push
push
mov
pop
cmc
aad
filds
gs
push
and
movsb
ror
pop
xchg
xlat
cmp
int3
stc
fdivl
jmp
dec
add
loopne
dec
add
adc
cwtl
dec
push
daa
adc
daa
xchg
sbb
in
mov
cwtl
adc
loope
adcb
and
jmp
fldl2t
cmpsb
insl
outsl
lods
sub
or
shll
cmpsb
test
repz
sbb
ja
jl
dec
int
push
jbe
mov
mov
xor
aaa
bts
loope
push
dec
dec
adc
sbb
push
mov
lock
inc
cmc
xor
jne
push
std
popa
lods
mov
je
cmpsb
or
cwtl
jne
shrb
in
fs
add
fwait
xor
push
je
data16
mov
mov
stc
push
imul
mov
jp
scas
notb
ds
mov
xchg
pop
jb
mov
in
and
insl
fcoml
cmpsb
sbb
lret
popl
mov
bound
jnp
mov
and
inc
or
xlat
xorb
push
decl
outsb
je
mov
xor
mov
and
sbb
pop
cli
movsl
inc
jle
cmc
sbb
adc
cmpsb
out
jnp,pt
inc
jecxz
add
mov
dec
sub
mov
pop
sahf
aad
mov
mov
or
pop
stc
clc
fisttps
cmpsl
mov
or
jb
daa
movsl
push
jo
jno
jbe
xor
int3
outsl
fiaddl
fs
testl
xorb
stos
inc
jge
cwtl
sbb
lea
hlt
lahf
outsb
fiadds
jp
xchg
push
out
in
cltd
inc
enter
mov
jno
stc
mov
in
push
add
jnp
adc
or
xor
adc
arpl
dec
adc
dec
cltd
popf
into
jbe
ficomps
dec
xlat
sub
faddl
dec
adc
je
dec
lret
imull
cmpsb
xor
hlt
xchg
fldt
shlb
xchg
cmp
imul
mov
mov
or
lea
les
repnz
lahf
jl
iret
or
and
pop
ret
and
movsb
aas
in
add
fwait
mov
mov
call
js
sbb
sarb
testb
sbb
and
xchg
add
ss
and
fisubrs
int3
jo
pop
movsl
mov
mov
push
adc
sub
dec
ds
sahf
xchg
repz
dec
cmp
sub
adc
and
cli
popf
jb
loopne
mov
pop
mov
lods
popf
jecxz
aad
sub
in
dec
add
jle
sub
sub
xchg
js,pt
std
rclb
xchg
sub
bound
pusha
leave
jnp
mov
leave
ds
xor
shll
push
jl
ss
in
xor
mov
inc
imul
cmp
test
hlt
dec
int
or
adcl
nop
sub
pop
andb
mov
hlt
xchg
test
lahf
hlt
xor
mov
pushf
aas
mov
or
adc
push
xchg
xor
and
jne
sbb
or
push
stc
sub
imul
outsb
xchg
sbb
mov
push
mov
les
in
mov
pop
in
int
dec
mov
ret
lods
shrb
jp
daa
cmp
xchg
aas
pop
iret
add
cmp
mov
sbb
xor
xchg
pop
das
fcoms
std
js
pop
mov
jge
mov
mov
and
adc
cmp
xorb
mov
inc
dec
iret
sar
dec
and
loop
fdiv
arpl
js
data16
lahf
pop
repnz
scas
or
dec
dec
cltd
out
cmc
pop
push
jle
sbb
mov
sub
sbb
mov
and
sti
andl
ss
fucomip
stos
pop
jne
mov
jno
sbb
and
sbb
xchg
shr
dec
fcompl
dec
dec
jnp
cmpsb
gs
adcl
mov
ret
in
mov
loopne
push
arpl
jne
jmp
or
xchg
cmpb
dec
ret
int3
rclb
popa
xchg
leave
mov
je
into
inc
jecxz
fstps
jecxz
xor
pop
dec
push
xlat
sub
xchg
add
push
into
ficoml
seto
or
and
imul
and
cmpsb
loope
or
dec
out
sub
sbb
xchg
jg
and
inc
sti
cmc
sbb
mov
jnp
mov
data16
mov
aad
push
aas
mov
pop
lock
pop
je
das
lods
ret
xor
cmpb
out
and
mov
dec
sub
addr16
sub
in
daa
push
cmp
bound
testb
jle
stos
dec
sbbb
shrb
fsubp
mov
clc
enter
push
xchg
lret
leave
pop
ficompl
jae
mov
insb
adc
shll
push
into
cmp
int
ret
std
pop
lret
ss
jecxz
pop
fwait
imul
cmp
cmpsb
movsl
repnz
push
pop
and
jge
jo
and
scas
xor
cli
das
and
ljmp
cltd
and
and
dec
dec
jo
lock
nop
xchg
add
sub
sbb
sub
push
movsl
cltd
dec
hlt
push
das
pop
jg
stc
lahf
pusha
inc
push
or
outsl
push
lahf
mov
or
sub
push
mov
pusha
shlb
cmp
mov
adc
mov
lret
push
subb
pop
in
sbb
les
push
xchg
lcall
and
jns
dec
popa
shr
dec
pop
lods
test
xchg
dec
rcll
sar
sahf
push
xlat
or
cmp
es
xchg
pop
ljmp
fdivs
pop
ret
das
popa
in
xrelease
lret
xchg
push
pushf
mov
loop
jnp
clc
sbb
pop
lret
fcompl
imul
fcom
mov
and
nop
imul
sub
push
pandn
inc
mov
adc
pusha
xchg
addb
das
mov
adc
push
repz
push
faddl
sub
sbb
mov
adc
jbe
xchg
push
enter
fsts
pshufw
fstps
sbb
movsl
sub
mov
jbe
outsl
push
rcrb
and
xchg
cltd
jmp
in
imul
aaa
es
xchg
inc
nop
gs
insb
adc
daa
dec
call
loop
mov
into
pop
jno
fucomip
js
sti
add
mov
fbstp
sub
pop
movb
test
cmp
mov
push
sub
js
push
insl
les
nop
ja
cmp
push
popa
adcb
adc
mov
pop
out
test
loope
sub
inc
cmpsb
inc
or
fidivrl
div
not
mov
movb
dec
ja
or
jmp
loopne
es
loopne
std
or
test
and
leave
pop
jmp
cwtl
mov
lret
mov
mov
xchg
inc
aas
leave
jns
sbb
sub
or
cli
mov
iret
xchg
push
push
pop
addr16
xchg
add
pusha
lods
std
xlat
faddp
scas
jp
into
test
push
adc
inc
jmp
jge
adc
adc
push
movsl
fnstcw
popf
sub
xchg
sbb
call
fs
jbe
mov
adc
mov
dec
fdivrl
fists
push
fcomi
xchg
ds
pop
xor
jmp
negl
ffree
das
push
fidivl
hlt
xor
sti
outsl
fsubrp
jnp
repz
or
push
cmp
mov
adc
adc
jge
aaa
xor
add
lds
jmp
mov
sti
mov
stc
in
fdivl
xchg
das
pop
jne
sbb
mov
push
inc
xorl
add
push
jle
mov
cmp
test
xchg
cmp
lret
or
push
pusha
stc
roll
fldt
mov
pushf
inc
xchg
mov
inc
inc
inc
adc
inc
jecxz
pop
cwtl
or
jl
sub
lahf
jmp
and
outsl
sbb
sub
stc
in
test
adc
popf
sub
mov
mov
mov
cmpsl
push
movsl
jp
cmpsb
enter
push
push
iret
test
jmp
pusha
adc
push
or
pop
addb
mov
pop
aad
hlt
shlb
icebp
scas
inc
imul
movsl
test
pop
lret
dec
and
sbb
xlat
rorl
or
sbb
sub
xchg
mov
cmp
mov
pusha
jno
jno
push
xor
push
mov
and
xor
lods
jmp
push
sub
call
jns
lahf
mov
jae
ja
inc
sub
inc
jno
inc
imul
jmp
hlt
in
enter
mov
cwtl
sub
stos
std
fimuls
repz
xor
xchg
ds
inc
dec
imul
repz
aaa
insb
hlt
cmpsb
pop
inc
pop
or
inc
js
sub
push
push
js
es
and
sbb
push
mov
sbb
and
insb
xchg
out
es
icebp
fscale
and
repz
fmul
inc
jmp
orb
int
add
push
int3
xchg
dec
inc
stos
loopne
lcall
mov
cmp
xchg
cwtl
lcall
inc
mov
mov
xchg
rolb
or
insb
repnz
popf
jge
rcll
jbe
sub
shll
fidivl
or
mov
test
subl
xchg
loope
mov
push
cmp
fistpll
dec
loopne
jne
add
xchg
lea
mov
mov
sub
and
mov
adc
mov
in
or
lret
xor
daa
test
xor
nopl
imul
mov
jnp
xchg
pop
cmp
pusha
or
push
scas
inc
push
sbb
dec
fldt
jns
add
inc
orb
shrl
jp
mov
sbb
lcall
push
ljmp
and
aaa
or
and
mov
pop
stc
pop
inc
cwtl
mov
cmc
mov
aas
sbb
fdivrl
scas
bound
ja
push
inc
push
ljmp
daa
adc
cli
test
pop
ja
cmc
ss
pop
data16
sub
ret
aas
into
arpl
jo
xchg
scas
pushf
idivl
je
leave
das
andb
pop
jle
int
jno
test
imul
orl
fldcw
mov
xor
and
jg
fnsave
lcall
mov
dec
mov
mov
int3
lcall
push
arpl
xchg
out
in
pop
je
repnz
pop
or
jge
aad
insb
push
mov
fxch
mov
daa
xchg
mov
out
mov
cltd
addr16
pop
lcall
sub
xor
bound
cmpsb
adc
pop
lock
aad
mov
mov
roll
movsb
push
pop
repnz
scas
vcvtps2dq
add
inc
repz
nop
ret
iret
inc
outsb
fdivrs
inc
cs
xor
lods
jnp
loope
rcr
or
je
out
rorl
in
mov
jp
cmp
xchg
scas
cmp
pop
adc
push
jb
mov
mov
cmp
sbb
fsubrs
inc
ror
das
cs
cmp
dec
pop
adc
cmp
sbb
mov
enter
and
and
sub
jns
xor
xchg
fiaddl
pusha
insb
add
pop
mov
pop
mov
sub
aam
test
cmp
rcrl
popa
mov
cmpb
or
push
pop
jecxz
xchg
outsb
imul
sub
mov
lock
jl
xor
xor
test
bound
pop
mov
jnp
dec
pushf
mov
popa
pop
hlt
outsb
addb
xchg
iret
lret
add
add
jg
cmpsb
movsb
gs
mov
stos
fimuls
clc
sbb
data16
mov
pop
mov
call
out
mov
in
xchg
pop
and
dec
lret
jp
shl
sti
jp
xor
ror
enter
mov
pushf
or
cmp
xor
xchg
lds
mov
push
fbld
loopne
iret
iret
inc
popa
and
jb
clc
cld
insb
ds
fcmovnbe
test
cmp
dec
sub
push
sbb
jecxz
stos
dec
mov
xchg
cmp
and
sti
mov
fildl
insb
test
mov
bound
add
lock
xorb
jns
and
lods
adc
test
dec
add
in
ss
dec
sbb
pop
dec
mov
mov
sub
xchg
je
mov
out
pop
jnp
shrl
js
ret
or
ret
mov
jp
inc
sbb
ret
pop
arpl
xchg
repnz
aad
inc
call
xchg
pop
enter
insb
sbb
jne
loopne
jmp
and
shrb
xor
cli
cmpsb
cs
pop
or
cltd
jl
jns
stos
pop
push
push
cld
xchg
cmp
adc
sbb
clc
mov
repz
inc
ret
dec
inc
add
cs
lret
in
loopne
outsb
xor
pop
cmc
or
mov
divl
push
jo
push
jne
xor
loop
imul
lock
jecxz
fwait
cltd
popf
adc
in
lcall
ret
mov
mov
inc
scas
scas
push
push
daa
mov
cld
fwait
in
int
adcl
jno
mov
ret
pusha
sarl
popf
mov
aaa
xor
sub
xor
mov
dec
push
dec
lea
cmpsl
cs
pop
and
stos
adc
inc
push
out
add
pop
or
fimull
test
xchg
lds
xor
orb
ret
stc
mov
or
hlt
leave
lea
movsb
add
fs
push
mov
movsl
out
lcall
or
lds
test
push
int3
mov
sarb
test
vcomisd
mov
sbb
pop
daa
mov
mov
and
scas
lret
nop
or
fwait
push
pusha
nopl
test
adc
in
xchg
mov
fistl
push
inc
mov
and
lods
loope
inc
les
loopne
jno
lahf
cmp
or
fsub
jno
pop
mov
test
sub
fnsave
shlb
jmp
stos
inc
pop
imul
mov
aaa
shl
push
pop
nop
call
nop
pop
pushf
xor
cmp
in
dec
mov
push
out
outsl
push
and
movsb
sarb
nop
jb
lods
sub
fstps
add
lahf
aam
imul
xorb
hlt
fisubrl
std
vpunpcklwd
mov
fcompl
mov
ficoml
flds
jbe
xchg
in
pop
push
mov
pop
xor
pop
sub
mov
gs
pop
mov
cli
daa
out
and
xchg
dec
stc
push
sahf
and
sahf
pusha
cwtl
ss
jg
mov
adc
fisttpl
adc
xchg
add
call
aam
inc
cmp
fsubrs
push
cmp
pop
xchg
jns
pop
out
ds
ret
fsubs
fsub
das
fmull
sub
and
sbb
je
xor
mov
ljmp
adc
in
push
sub
out
xor
sbb
and
mov
dec
in
xlat
pop
cwtl
lock
cltd
cli
test
inc
test
fbstp
mov
pusha
das
imul
daa
mov
roll
sbb
dec
stos
mov
nop
fldt
jl
pop
xchg
out
mov
psubusb
fnstenv
jg
pop
adc
add
lods
mov
cmp
pop
push
push
sub
cmp
or
fbstp
dec
mov
sbb
sbb
xor
mov
cld
test
dec
leave
sbb
aam
or
push
mov
repnz
test
xchg
pop
mov
jp
sub
xor
push
lahf
icebp
push
daa
jbe
adc
push
jne
pop
mov
repz
jne
insl
out
scas
fcomip
cmp
rcrb
pop
cmp
cmp
mov
adc
in
or
nop
pop
fdivl
xchg
cmp
jg
lcall
xchg
test
add
mov
lret
push
sti
enter
adc
jb
addr16
cmp
adc
sti
jl
repnz
hlt
jle
mov
jecxz
xchg
pop
pop
cmp
mov
xchg
stc
dec
loope
pop
and
ja
xor
lods
mov
mov
dec
jg
xchg
imul
jg
movsb
mov
lret
insl
pop
sub
gs
sahf
sahf
mov
pop
xlat
shll
mov
dec
cmp
in
or
sub
inc
sbb
xchg
icebp
jnp
sbb
inc
js
mov
lods
aaa
or
sti
jne
data16
mov
xchg
imul
push
xor
inc
cld
mov
int3
popf
data16
js
mov
and
cmc
adc
out
js
xchg
stos
daa
or
inc
sub
mov
mov
mov
jecxz
js
add
call
inc
out
jg
lret
sbb
push
lret
pushl
jp
xchg
iret
xchg
lods
fdivrl
in
jnp
rcrb
mov
mov
mov
ret
mov
push
pop
inc
inc
or
pop
mov
add
jo
loopne
je
jno
lods
icebp
sub
std
test
call
jnp
hlt
inc
sub
inc
xchg
shll
lret
xchg
fcomps
xor
or
fisubrs
mov
loop
push
sbb
fstps
xchg
stos
scas
or
popf
cmpsl
icebp
push
push
fisubs
rorb
mov
push
into
sbb
push
adc
subb
test
loope
test
sub
adc
je
sbb
das
fadd
sbb
enter
lods
inc
adcb
lcall
lcall
stos
bound
pop
cmp
or
test
leave
ja
shl
imul
dec
stos
adc
loopne
push
mov
push
add
stos
sub
lcall
jmp
sbb
cmp
repz
push
mov
es
or
icebp
dec
mov
mov
add
cmp
inc
mov
sub
and
push
gs
mov
xlat
daa
pop
popa
clc
sbb
mov
or
test
sti
mov
mov
xor
inc
mov
shlb
or
or
mov
imul
xchg
mov
push
shl
push
xor
mov
xchg
push
jo
jmp
bound
outsl
test
dec
scas
inc
pcmpgtw
mov
out
cmp
loope
test
ret
icebp
stos
adc
cmp
pusha
fs
adc
clc
cmp
cmp
push
push
dec
add
loope
cwtl
ret
jmp
push
jbe
mov
out
jne,pn
pop
insl
push
xchg
sub
rcl
inc
push
imul
dec
mov
push
dec
lret
xor
cmp
stos
fs
cmp
push
cmp
push
in
sub
dec
movb
les
xchg
push
dec
addr16
xchg
in
push
cli
dec
inc
sbb
out
imul
mov
ret
shlb
fcoms
xor
xchg
mov
arpl
loop
push
outsb
cs
or
push
aaa
jge
jp
test
aaa
add
mov
das
mov
jnp
scas
push
iret
mov
notl
scas
insb
mov
das
imul
aam
mov
clc
aam
lret
and
mov
insb
dec
insl
sub
or
xchg
sbb
mov
jge
xor
mov
and
dec
ss
push
adc
fiaddl
rolb
xchg
movl
cmp
test
stc
addr16
cmpsl
ljmp
ffreep
cmp
les
mov
es
xor
xchg
sub
cmp
lock
dec
sbb
cmc
nop
add
jg
xchg
mov
fwait
jnp
or
jno
inc
je
jbe
insb
dec
push
adc
adc
add
adc
fwait
in
cmpl
add
movsl
pop
xor
xchg
cmpsb
jg
or
inc
pop
int3
fnsave
scas
movsl
mov
pushf
cmp
add
mov
int3
fsubrl
in
xchg
loop
ror
stos
dec
xchg
cmpsb
sub
loope
rolb
lods
icebp
mov
push
mov
dec
test
mov
xor
mov
xorb
popf
aad
mov
jnp
pusha
es
mov
out
cmc
xor
pop
repnz
push
fs
orl
sbb
in
cmp
iret
or
rorb
inc
mov
lahf
out
mov
and
push
adc
es
pop
dec
js
lcall
push
mov
dec
cli
mov
es
movsb
les
xor
leave
fildl
in
xor
mov
add
xor
in
sub
push
xchg
adc
aam
dec
movsb
mov
movsb
xchg
bound
or
adc
test
cmpsb
mov
leave
mov
pop
movsl
cmp
lret
mov
shll
dec
jecxz
mov
das
cwtl
mov
aad
mov
sbb
les
xchg
rcr
wbinvd
loope
mov
lahf
stos
lods
mov
xchg
lret
dec
lds
adc
pop
mov
pop
or
call
das
loop
pop
mov
cmc
add
pop
sahf
or
jno
mov
cmc
and
in
add
insl
shl
cwtl
stos
imul
sbb
sub
or
or
pop
int3
xor
sbb
popf
bound
lret
add
aas
jp
add
popf
das
inc
gs
into
gs
imul
add
shr
jno
fists
dec
xor
rcrb
leave
lret
mov
shlb
add
adc
fs
out
xlat
pop
ret
sbb
lret
adc
arpl
loop
fmull
enter
incl
sbb
jle
xchg
jge
inc
loopne
je
or
xchg
int
fildl
es
sub
and
stc
mov
xchg
insb
pop
jle
js
mov
sahf
mov
ljmp
hlt
in
or
into
mov
pop
push
xor
js
ljmp
sti
adc
ds
cwtl
ds
shrl
mov
push
mov
adc
jg
in
insl
inc
lret
sbb
test
sbb
faddl
out
mov
mov
ret
sar
adc
jl
jg
mov
push
push
mov
jbe
out
sbb
mov
aas
inc
push
mov
pop
inc
sbb
leave
mov
ljmp
push
pop
ljmp
mov
dec
mov
mov
mov
cmp
es
bound
cmp
sbb
lock
cltd
jnp
sbb
movsb
cmp
imulb
ret
cli
imul
shlb
das
fldcw
out
jno
call
loop
jle
js
fldcw
xor
aam
cmp
movsb
adc
adc
push
add
cmpsb
sub
fcoml
and
push
nop
xlat
mov
repnz
jnp
outsb
ss
xchg
icebp
mov
jle
inc
sti
and
cs
loopne
and
ffree
xchg
std
fdivrl
cli
ret
mov
jnp
xchg
jo
ja
mov
aam
dec
add
xor
push
xor
lock
push
imul
icebp
dec
add
scas
dec
cli
add
xchg
in
push
mov
nop
fadd
stos
out
jge,pn
dec
inc
ss
dec
loop
loopne
mov
pop
hlt
pushf
pop
fldt
pop
cld
jns
test
xor
add
bound
aam
xor
repz
inc
int
gs
mov
aas
jbe
in
jmp
push
push
daa
int3
xchg
inc
xor
leave
mov
test
mov
dec
mov
push
jp
jmp
adc
push
jne
int
sub
and
xor
mov
inc
push
and
andl
add
add
mov
jo
shll
fildl
mov
in
arpl
insb
add
inc
xor
outsb
mov
or
lock
inc
jb
gs
push
std
add
mov
scas
push
lcall
ret
lcall
sub
push
pop
pop
pop
shll
sub
pop
and
cmp
pop
test
jecxz
stc
mov
xchg
or
jno
loop
jecxz
cli
ret
pop
lahf
sbb
mov
enter
arpl
out
imul
lcall
ret
adc
jmp
aam
push
sbb
add
cwtl
inc
leave
jmp
loop
pop
fs
scas
in
xchg
pop
les
mov
mov
rol
lds
adc
hlt
fbld
stc
mov
loop
or
rcr
lock
shll
cmpsb
cmp
mov
xchg
sbb
mov
int3
jo
cs
and
pop
dec
mov
cmpsl
add
orl
xchg
pop
xchg
imul
sbb
inc
push
push
adc
cmpsb
and
jmp
pop
aam
xchg
pusha
js
das
push
frstor
cmp
mov
test
push
push
cmc
jge
cmp
adc
adc
mov
popf
cmp
adc
and
cmp
shrb
mov
out
hlt
aas
scas
inc
fsubl
push
add
test
or
dec
cmc
add
jge
pushf
sbbb
xchg
in
sub
jmp
jno
and
push
insb
cmp
dec
xchg
mov
push
lea
mov
decl
mov
popa
fs
jmp
pop
leave
mov
sub
das
adc
xor
xchg
push
inc
push
movsl
test
jns
pop
cmp
jle
enter
add
sbb
sahf
xchg
insb
mov
dec
inc
jg
ret
test
lds
inc
movsl
cmp
cmpsb
lahf
sahf
or
gs
cmp
lea
dec
out
shrb
les
mov
mov
xchg
xlat
ss
inc
pop
movsb
mov
in
push
sbb
fcoms
cmpl
dec
int
mov
int3
add
fwait
jo
xchg
add
or
out
mov
test
cmpsl
pop
leave
into
xlat
xchg
mov
in
lods
pop
sub
repnz
pop
inc
inc
inc
jmp
out
inc
push
inc
fdivrs
ljmp
hlt
or
cmp
fildll
jo
inc
push
pushf
adc
pop
lahf
addb
js
int3
inc
clc
popf
scas
pushf
sbb
push
xor
add
cmpsl
in
out
inc
ljmp
xchg
loopne
jmp
test
imul
shrb
sbb
rcrb
rcl
dec
popa
pop
dec
repnz
sbb
and
je
inc
fisubl
lods
sbb
in
iret
jecxz
cmpsb
push
xchg
mov
pop
inc
cmpb
test
aas
push
aad
push
jo
inc
mov
out
cltd
pop
inc
adc
out
in
mov
hlt
inc
nop
jns
or
sbb
or
mov
push
outsl
inc
imul
add
out
shr
jo
sti
in
pop
xchg
sub
outsb
icebp
int3
cmpsb
iret
addb
test
push
fisubrl
fst
gs
dec
push
xchg
fs
ljmp
enter
push
adc
push
mov
jae
mov
xor
ja
movl
mov
pop
addl
insb
mov
xchg
xchg
jp
imul
clc
dec
in
pop
jp
dec
loopne
enter
jbe
js
dec
mov
mov
sbb
inc
sub
push
lods
push
mov
xchg
cli
mov
xor
mov
and
das
mov
add
dec
imul
in
cmp
jecxz
xor
sbb
es
xchg
mov
cmc
pop
roll
lret
repnz
xchg
jecxz
push
cmp
rcll
cmp
xchg
testb
test
mov
inc
xor
adc
inc
sbb
shr
std
fisubl
jg
icebp
rcrl
jl
jmp
in
mov
dec
sti
jge
jae
xchg
xor
ret
sub
pop
xchg
push
imul
arpl
jbe
jg
inc
push
notb
test
imul
mov
rcl
cwtl
jle
jno
ja
add
out
sbb
es
leave
and
sbb
jmp
cmp
add
jns
push
ljmp
outsl
mov
daa
jecxz
mov
mov
xchg
movsb
mov
inc
test
push
jnp
inc
outsl
adc
mov
out
inc
sbb
icebp
push
jmp
push
dec
orb
mov
push
leave
clc
cmp
pop
xchg
stc
cmp
sbb
cmp
aad
pop
dec
fstps
testb
xchg
int3
scas
ret
dec
xchg
add
std
test
movsl
add
push
je
mov
adc
sub
in
test
cmpsb
stc
pop
inc
sbb
icebp
cmp
fisubrs
jle
push
lcall
insl
lods
ret
orb
xor
dec
dec
mov
std
outsl
scas
mov
jl
push
xor
sbb
xchg
jl
sub
add
push
out
inc
call
and
adcl
shrl
add
sti
add
inc
jne
sub
or
mov
test
mov
enter
adc
inc
push
mov
sub
pop
and
adc
inc
xorl
arpl
inc
cwtl
imul
iret
and
lock
push
enter
repz
or
xor
add
andl
repz
bound
push
xchg
adc
and
pop
sub
sub
andb
aam
dec
inc
int3
mov
orb
bnd
hlt
rorl
pop
rcrb
test
iret
push
ljmp
xchg
rcll
sahf
push
aaa
movsl
dec
add
addl
jno
aas
push
test
mov
xchg
adc
faddl
push
in
or
cmp
xchg
mov
jle
jp
dec
pushl
push
dec
das
cmpsb
lock
ja
inc
and
dec
loopne
lret
dec
ljmp
pop
add
adc
sbb
sub
sbb
jns
clc
arpl
ja
shl
push
aad
test
push
fst
add
popf
bound
lock
popl
mov
jle
rorl
lcall
inc
repz
jle
sbb
dec
in
std
lds
movsb
pop
inc
mov
xchg
sbb
mov
mov
add
sbb
negl
enter
ja
in
mov
fiaddl
shl
rdmsr
lock
or
and
cmpsb
daa
dec
inc
in
pop
daa
jb
mov
lret
jo
cmpsb
stc
fs
cmp
imul
mov
add
pop
cmpsb
sub
fldenv
xor
add
cld
xchg
cwtl
ret
mov
cmc
inc
adc
adc
inc
xor
imul
adc
int
sbb
xor
mull
lcall
and
mov
and
dec
enter
pop
movsl
aaa
dec
hlt
inc
loopne
fisubl
jae
cmp
sbb
dec
push
mov
push
sbb
lods
out
mov
scas
out
sbb
cmp
xchg
test
push
pop
add
ljmp
inc
jb
les
or
ss
mov
imul
aad
dec
shl
pop
ds
add
push
daa
mov
mov
imull
mov
sub
mov
icebp
adc
loopne
or
arpl
out
adc
fdivrs
sbb
mov
popa
jecxz
jnp
inc
pop
fwait
cmpsl
loope
sbb
and
test
out
dec
pop
jne
loop
adc
add
pop
mov
ljmp
inc
mov
sbbl
dec
add
ret
mov
pop
mov
xchg
scas
lahf
or
mov
sbb
cwtl
repz
ja
cwtl
andb
lahf
mov
fwait
insb
push
pop
dec
lock
pop
call
mov
pop
fmulp
ja
mov
ds
xchg
leave
aad
or
lahf
hlt
inc
shl
adc
cmp
rolb
addr16
pop
out
shlb
jmp
fdivr
les
xchg
daa
ret
pusha
mov
jg
aas
lcall
inc
jmp
nop
pushf
loop
aas
in
add
push
jecxz
out
mov
dec
imul
adc
add
js
push
cld
inc
pop
insb
xchg
fstps
or
es
mov
ja
sbb
into
adc
aaa
adc
arpl
mov
mov
mov
dec
fs
in
jae
shll
into
pop
xor
call
and
ret
mov
jle
push
repz
ret
test
adc
decl
xchg
xchg
or
scas
stc
cmp
mov
xchg
xchg
push
in
das
mov
push
shll
and
popa
fwait
dec
add
pop
adcl
xchg
lgdtl
adc
adc
mov
sbb
nop
orb
pop
ror
stos
adc
int
int
imul
mov
jbe
test
andb
pop
fcmovne
mov
addl
inc
insl
sbb
push
jle
lods
fucomi
into
xor
arpl
scas
sub
loop
push
addl
sbb
movsb
out
imul
test
divl
cltd
dec
stos
xor
push
lds
psubq
pushf
jo
pushf
jne
mov
add
xchg
loop
dec
sub
xor
mov
out
push
ja
mov
aam
inc
je
mov
ss
xchg
mov
jno
adc
xchg
xchg
jecxz
das
cs
jg
outsl
and
jle
push
jmp
and
jae
mov
movsl
adc
loop
push
push
push
add
movsb
or
in
add
inc
pop
testl
int
loope
pop
mov
addb
add
xor
inc
xor
dec
and
in
inc
sbb
lcall
mov
inc
cmpsb
sbb
jp
xchg
jmp
push
add
xchg
pop
mov
sub
and
incl
and
cltd
cs
push
pop
ljmp
mov
push
sbb
xlat
aas
outsb
or
push
loop
push
fwait
sbb
mov
vpsraw
mov
jp
int3
push
out
aaa
mov
inc
mov
sahf
lods
mov
dec
xchg
je
pop
nop
psubd
ss
sti
mov
sub
mov
mov
rol
inc
stos
das
xlat
popa
add
clc
adc
inc
mov
lcall
or
dec
and
cs
jno
in
imul
xor
adc
or
ljmp
insb
or
ja
sarl
jg
mov
add
jmp
lods
inc
sub
sub
mov
mov
aaa
push
aam
insl
lret
loop
mov
ljmp
jecxz
lods
adc
xchg
jp
sbb
lahf
pusha
sarb
mov
mov
xor
into
andl
sahf
fbld
add
movsl
scas
ret
mov
insl
xchg
movsl
dec
cltd
cld
cmp
add
and
xor
cmp
mov
andnps
mov
ret
iret
mov
sbb
mov
pop
xor
pop
xchg
rcll
es
hlt
in
pop
mov
mov
mov
mov
mov
int
xchg
insl
shrb
pushf
cmc
js
inc
push
mov
adc
fs
arpl
mov
clc
int3
cmp
lcall
lods
rcrl
fstpl
xchg
mov
mov
pop
cmp
mov
sbb
pop
mov
sub
js
test
pushl
fldenv
call
and
push
jmp
rcrl
lods
or
xchg
fidivl
lds
inc
adc
pop
dec
pop
push
pop
fdivr
jns
mov
pusha
push
jl
test
fisubl
mov
testb
insl
cld
or
xchg
xor
std
jno
push
data16
push
xchg
mov
cmp
jl
xor
mov
and
test
rcrb
cmp
cmp
jge
ljmp
mov
pushl
xchg
mov
int3
fdivrs
mov
jecxz
add
fnsave
or
sub
and
cs
mov
dec
ds
js
push
pop
pushf
cmp
ret
xor
js
jecxz
push
jp
ljmp
repz
add
jl
or
stos
or
mov
hlt
mov
push
in
jl
xor
das
outsb
sbb
sti
shrb
hlt
cmpb
jge
loop
test
mov
popf
and
mov
sbb
mov
jo
lret
sarb
andl
dec
hlt
mov
add
rcrl
into
movsl
jo
jl
mov
sub
in
int
mov
dec
push
xor
and
jle
inc
adc
call
repnz
push
test
fwait
jg
pop
int
hlt
sbb
hlt
sub
cli
mov
pop
cld
xor
mov
lock
push
fnstcw
push
out
fistpl
and
call
addr16
jmp
jle
adcl
repnz
push
jmp
out
pop
movb
push
or
loope
aaa
daa
or
dec
pushfw
mov
push
xchg
mov
add
imul
loope
aaa
out
add
push
pop
fnstsw
push
cmp
inc
inc
dec
xchg
dec
mov
adc
sub
fldenv
imul
xor
sbb
inc
stos
shrb
data16
mov
fwait
xchg
cmp
sub
pop
xor
xchg
int
mov
sbb
fwait
repz
leave
mov
push
sti
xchg
jae
outsb
ret
hlt
dec
ds
jnp
in
sbb
and
sbb
lods
sub
sub
hlt
push
mov
add
xor
rcr
mov
je
fcompl
shrb
pushf
scas
into
push
xchg
rol
pusha
pushf
sbb
mov
cmp
flds
das
pop
mov
push
cli
movsl
call
rcr
imul
dec
lret
fstpl
aaa
pop
inc
mov
bnd
pop
repnz
jno
bound
cmpsl
arpl
pusha
iret
mov
pop
and
nop
pop
in
mov
sub
shrb
xchg
jo
jo
aad
inc
rolb
call
into
mov
fisttpll
sbb
aaa
adcb
jmp
insb
cltd
imull
sbb
hlt
neg
in
cmc
ja
cmp
sub
mov
in
cld
cs
push
adc
push
cmp
sidtl
jno
add
loopne
jbe
xchg
xchg
pop
outsl
cmp
adc
nop
outsb
lret
sbb
and
lret
in
and
jbe
mov
shll
pop
out
fdivs
testb
lods
daa
inc
movsl
sbb
mov
sahf
and
mov
sub
inc
in
in
push
sbb
or
pop
jl
out
jle
xor
jge
push
scas
push
adc
add
xor
ret
inc
push
sub
les
adc
or
dec
sbb
and
iret
mov
jne
fisubrs
push
push
lret
dec
loop
aam
jne
mov
push
dec
std
les
sar
or
shlb
pop
cltd
pusha
dec
add
push
fdivrs
xor
mov
fs
push
mov
dec
add
pop
loopne
inc
cmpsb
imul
or
test
or
xchg
sbb
into
lret
test
xchg
xor
leave
out
cli
rcll
jae
arpl
cmp
mov
hlt
loope
adc
pop
decl
lret
in
imul
in
inc
mov
scas
jge
jl
icebp
jbe
inc
test
out
fcom
sbb
fisubrs
pop
sbb
mov
push
adc
ret
fistpl
imul
or
jne
jns
push
fsubr
sub
inc
adc
sbb
std
mov
insb
inc
mov
mov
stos
dec
mov
pushf
cmp
jnp
lock
aad
hlt
idivl
push
js
arpl
add
aaa
addr16
lret
imul
cmp
nop
jg
mov
rcrl
addr16
xor
ss
scas
mov
daa
hlt
out
mov
lret
leave
ror
outsl
loopne
loop
cmp
or
xor
dec
push
loop
mov
lods
or
jmp
lds
repz
push
sbb
adc
pop
mov
imul
cwtl
xchg
outsl
dec
sub
sub
out
xor
mov
aam
mov
mov
mov
repnz
clc
pushf
push
fs
pop
lods
add
and
sub
lods
add
mov
sahf
pop
xorb
in
or
fs
xor
push
or
xchg
movsl
xor
nop
dec
fwait
and
ret
pop
pushf
sub
xorb
test
mov
xchg
mov
lahf
cwtl
xchg
or
rorb
aaa
and
xor
mulb
in
add
aam
lcall
lea
cli
ja
sbb
sarb
scas
push
jp
aas
xor
add
out
notb
ss
inc
outsb
xor
mov
mov
dec
mov
pop
mov
das
leave
jp
into
jae
jecxz
jg
loopne
shll
inc
mov
rorb
mov
lds
and
scas
cmpsl
or
push
enter
sbb
cmp
cltd
pmullw
mov
mov
sub
in
push
shrb
enter
movsl
mov
rorb
pop
pop
in
xchg
and
outsb
mov
push
lret
pop
inc
cmp
sub
pop
stos
insl
sbbl
add
shll
movsl
push
je
mov
and
call
loope
sub
das
cs
mov
push
add
movsb
pop
mov
in
mov
call
jne
outsb
or
jl
sahf
mov
cmc
pop
adc
and
nop
in
mov
out
and
cmc
jo
adc
push
mov
sbb
aam
jno
sub
ds
ret
push
adc
andl
mov
jge
mov
fwait
mov
mov
repz
mov
jae
xchg
jmp
call
lret
lods
jb
jl
xchg
adc
stos
adcl
push
movsb
cmp
xchg
in
pop
add
lcall
cltd
cmpsb
sbb
sub
test
lods
xchg
xchg
ret
jo
push
pop
jl
sub
jns
cltd
popa
cmp
mov
into
sub
cmp
out
adc
add
inc
xchg
add
pop
divb
or
push
or
pop
and
xor
mov
test
inc
test
divb
loope
pop
xor
sar
movsb
lods
add
inc
xorb
xchg
push
ss
jle
cmpsb
adc
loop
mov
push
xor
xchg
sub
dec
xchg
in
xor
mov
ret
push
repz
inc
pop
imul
notl
adc
push
jne
push
std
sbb
mov
ja
cmp
or
inc
test
popa
clc
rol
gs
sbb
adc
popf
xchg
inc
je
clc
mov
or
push
xor
pop
ljmp
mov
fs
dec
and
fstl
data16
sbb
cwtl
dec
out
ficoms
mov
pop
cli
fildl
dec
inc
mov
les
mov
aas
sub
push
pop
ret
cmpl
daa
in
xchg
pop
ror
cmp
test
mov
mov
mov
rcr
dec
aas
sub
shrl
out
and
or
push
ja
fstpl
lods
cmpsb
icebp
mov
subb
int
shrb
push
pop
icebp
mov
add
push
cmp
mov
pop
cs
jno
int3
nop
dec
cmc
test
aad
lahf
outsl
xchg
fs
pusha
push
xchg
push
scas
and
mov
inc
aas
ret
xor
jmp
push
inc
lahf
pop
dec
mov
pop
xor
sub
mov
pop
fstl
dec
inc
mov
arpl
out
das
lret
sub
sbb
testl
fidivs
add
and
insl
pusha
adc
in
xor
add
ret
ds
in
ds
add
fs
call
sub
stc
push
cmp
push
ja
xchg
mov
xchg
push
push
and
mov
mov
test
aam
sub
lds
xchg
mov
pop
out
xchg
dec
mov
repnz
jo
shll
inc
popa
orb
mov
dec
jmp
aam
cmc
xchg
scas
adc
mov
adc
push
xchg
in
push
in
rorl
xor
sub
lock
sti
pusha
sahf
dec
mov
dec
aad
rcll
sub
mov
js
ds
iret
lret
push
push
push
and
into
rcrb
daa
popf
xchg
jnp
and
pop
xchg
cmpsb
adc
aaa
shrb
inc
ret
inc
push
inc
inc
lahf
aas
fucomp
pusha
in
dec
fisttpll
into
xor
pop
enter
mov
movsl
push
mov
lahf
pop
enter
rcll
cmp
jnp,pt
pop
test
in
sti
std
mov
les
or
mov
and
popa
mov
jno
xchg
hlt
xchg
sbb
insl
inc
sarl
jbe
inc
imul
push
mov
js
push
add
mov
test
and
lea
repnz
cmp
xor
test
inc
mov
pop
iret
lods
cs
and
lret
iret
xor
dec
addr16
sbb
push
add
jne
push
mov
imul
jno
out
push
jle
clc
mov
xchg
or
pop
jne
xchg
pop
inc
stos
mov
lea
dec
fsub
int3
or
lock
mov
mov
repnz
int3
mov
xchg
jl
fstpt
cmp
inc
lods
mov
cltd
push
inc
int
scas
loopne
stos
nop
inc
sbb
test
aas
andl
ja
ret
jo
sub
add
loop
cld
and
pop
jmp
add
shrl
lret
jmp
mov
and
ljmp
mul
sti
cli
jb
cmp
data16
mov
inc
das
inc
push
mov
add
xchg
or
jp
out
leave
or
push
aad
push
int
mov
pop
cmp
int
add
test
stc
iret
cwtl
nop
add
add
mov
std
adc
repnz
jbe
sub
icebp
cmp
shrl
inc
inc
adc
push
push
xchg
ljmp
add
sbb
mov
jecxz
push
xchg
jecxz
xlat
jecxz
cmpsl
inc
add
xchg
aaa
dec
xchg
sub
and
insb
and
out
fs
xor
and
js
lods
mov
push
mov
mov
cmp
lock
int3
add
loop
and
pop
sbb
add
xor
lret
mov
aam
imul
jae
aas
pop
test
lcall
ret
outsb
pop
lods
outsl
bound
test
repnz
jns
cmp
add
int3
push
jge
inc
add
loopne
movb
popa
clc
jns
fidivl
adc
loopne
push
pusha
mov
imul
nop
ljmp
sbb
fimuls
mov
call
jp
xchg
bound
in
arpl
rcrb
fwait
mov
sbb
xor
jnp
sub
adc
sub
and
adc
xor
fmull
mov
es
insl
jne
ret
les
std
arpl
nop
nop
jmp
jecxz
ja
sub
fmull
call
addr16
jno
cmc
arpl
dec
push
int3
in
out
stos
push
jl
xchg
faddl
and
and
jg
mov
call
dec
push
shll
into
add
pop
push
in
jbe
dec
nop
fisttps
mov
push
xchg
push
test
mov
clc
outsb
sbb
shr
sbb
push
xchg
fisubrs
mov
faddl
leave
lea
popa
push
pop
int
pop
lahf
jno
jnp
pop
push
cmp
sub
mov
add
imulb
sahf
adc
sbb
jp
dec
ret
bound
jo
fwait
cmp
xchg
sub
push
add
xlat
test
jg
in
mov
xchg
mov
es
lret
pop
insl
jnp
addl
sub
in
nop
ss
loope
popf
dec
testl
pop
and
push
cs
sub
les
sbb
shll
push
aad
sti
push
fidivl
xchg
out
xchg
mov
dec
jecxz
in
push
popa
and
mov
jl
lock
out
push
sbb
push
lea
shr
sbb
lock
js
xchg
or
out
sbb
sbb
jns
insl
mov
ds
xchg
inc
test
in
push
add
mov
xor
xchg
mov
sbbb
test
mov
repnz
jne
or
in
pop
mov
mov
sti
clc
fdivrs
jae
ds
icebp
sub
add
push
mov
and
dec
pop
jns
shll
xor
sbb
fiadds
scas
mov
stos
sub
dec
fs
adc
adc
jle
xor
lret
cmpb
mov
dec
mov
pop
mov
fistpl
cmp
cmp
inc
popa
cmc
sub
dec
pushf
sub
sarl
push
lods
jp
cld
iret
lea
jb
pop
xor
inc
loop
add
jbe
mov
dec
jae
inc
inc
int
xor
bound
cltd
push
cltd
add
mov
jns
sti
mov
mov
mov
lcall
pop
rclb
cmpsb
or
stos
ljmp
xchg
cs
dec
lea
xlat
pop
mov
inc
mov
add
cs
addr16
pop
fbld
out
and
jmp
dec
jno
test
xchg
mov
loop
lea
cmc
mov
or
push
jmp
cmp
cmp
jnp
nop
out
pushl
xchg
push
sub
ljmp
sbb
add
sub
daa
adc
rcl
add
fcmovnu
fs
and
jmp
mov
cltd
je
mov
jns
mov
mov
mov
sti
xchg
adc
pusha
out
xchg
lods
cmp
fwait
push
adc
and
adc
xchg
dec
mov
jbe
imul
mov
pop
push
push
push
rcll
mov
push
add
mov
pop
jecxz
or
inc
xchg
mov
ror
mov
in
sbb
outsb
xchg
out
sahf
sbb
ds
add
jle
mov
push
outsl
cmc
mov
nop
cwtl
outsb
clc
sar
loopne
js
push
jmp
push
inc
repz
jle
lcall
pusha
mov
xlat
les
adc
jmp
jb
outsl
push
push
inc
push
sahf
loop
xchg
jnp
loopne
lret
xor
repnz
jmp
add
cmpsl
xor
out
test
test
lock
jns
dec
and
cmp
dec
clc
movsb
jbe
push
in
xor
inc
gs
mov
incl
mov
mov
icebp
je
mov
in
mov
dec
or
mov
out
sbb
movsl
xor
jno
les
sub
cltd
and
dec
or
dec
negb
test
and
es
adc
dec
into
lcall
icebp
int
pop
inc
sbb
push
add
out
inc
pop
sti
cmp
clc
jo
jmp
jne
outsb
pop
and
addr16
mov
insb
ret
aad
cmpsb
mov
cmp
push
fidivrl
lds
mov
bound
loop
mov
dec
ret
bound
or
sub
inc
pop
pop
mov
inc
mov
add
cld
outsl
and
mov
push
rcll
test
mov
dec
xor
enter
push
cmp
insl
out
mov
dec
ljmp
adcl
jl
das
xchg
add
jo
addb
add
inc
push
movsl
fidivrs
inc
lds
push
xchg
cmc
repz
jmp
pop
sub
ja
iret
jnp
jge
lahf
repz
outsb
inc
xor
ucomiss
cld
sbb
mov
clc
add
sub
flds
or
ficoml
mov
es
mov
orb
jae
inc
sti
test
inc
jge
scas
arpl
out
sub
mov
mov
xchg
pop
addr16
mov
icebp
clc
test
not
push
rclb
mov
add
pop
in
ret
in
jnp
inc
or
pop
mov
pop
popa
pop
or
jp
mov
repnz
mov
sbb
ret
nop
cli
in
insb
loop
inc
dec
pop
pop
or
cltd
cs
sahf
inc
arpl
mov
std
dec
rcrl
imul
dec
push
popf
jg
test
imul
mov
mov
and
pop
pop
addl
sbb
cmpsl
lds
mov
push
adc
dec
and
and
repz
scas
bnd
popf
inc
inc
inc
clc
test
data16
inc
iret
mov
shll
ljmp
inc
not
adc
call
xchg
imul
pushf
inc
mov
iret
push
pusha
push
in
imul
popl
nopl
adc
nop
mov
jmp
mov
adcb
add
dec
popa
inc
shrb
imul
int3
jae
aad
jbe
pushf
mov
dec
mov
pop
push
xor
scas
dec
mov
sbb
fmuls
ss
int3
shll
and
aam
out
sbb
in
shr
adc
gs
lcall
test
popf
pop
lahf
scas
sbb
call
add
xchg
push
cmp
mov
dec
and
inc
mov
dec
fldcw
jae
cmpsb
into
jle
jmp
test
iret
xchg
adcb
mov
fists
and
inc
cmp
or
mov
or
jno
pop
je
imul
fnstenv
popl
mov
cmp
jbe
imul
mov
jp
pop
sahf
test
inc
in
sbb
mov
pop
bound
cmpl
add
bound
push
jmp
dec
cmp
aam
cmp
xchg
or
adc
jo
hlt
pop
enter
xchg
pop
xlat
xor
cmp
arpl
into
pop
pop
jmp
popf
ds
pushf
mov
lods
cltd
ret
xchg
push
xlat
cs
add
pop
popa
pop
sub
out
mov
and
pop
mov
xchg
push
and
dec
mov
sbb
popf
movsb
mov
mov
jge
jo
fnstcw
and
mov
sub
adc
cltd
adc
leave
mov
cld
jae
fucomp
adcb
test
sub
dec
icebp
mov
add
pop
insb
stos
jle
adc
loop
mov
lds
lcall
or
ror
mov
cs
out
lret
mov
ljmp
adc
enter
jnp
fwait
add
lea
cltd
fbld
stos
mov
and
pushf
lods
ficoml
insl
ljmp
aad
mov
sbb
jns
jle
xchg
dec
repnz
aam
mov
out
pop
pop
xchg
mov
ror
pop
push
and
add
xchg
push
add
ret
mov
cltd
dec
sub
int
add
fcom
cmc
in
outsb
push
leave
ds
jae
loope
dec
pushl
shl
sub
lea
loop
jge
pop
xchg
mov
xlat
inc
movsb
std
and
xor
fs
mov
cmp
fimull
jo
and
xorb
orb
dec
mov
fnstcw
cmpsl
out
jo
pop
jbe
push
and
pop
push
mov
ret
addb
jmp
sub
jl
std
dec
add
dec
insb
faddl
adc
cmc
inc
out
cmp
and
loope
push
sub
push
dec
push
pop
repz
dec
cwtl
inc
pop
xor
pop
mov
jle
dec
xor
js
jo
push
dec
dec
jge
and
lock
in
jp
jo
adcb
fidivrs
xor
jg
aaa
lret
sbb
sbb
fisubrl
adc
sub
arpl
push
xchg
ret
std
ljmp
xor
fldt
loopne
pop
scas
outsb
dec
and
aam
out
cmpsl
jmp
mov
insl
or
mov
push
cmp
xor
xor
js
sti
pop
inc
cmc
xchg
or
sbb
inc
cmp
sbb
cmp
cs
xchg
clc
testl
adc
push
iret
jge
jnp
mov
loopne
jmp
in
inc
mov
sahf
dec
dec
lods
rcrl
inc
in
add
xchg
cli
std
aas
insb
je,pn
in
or
es
xlat
sti
mov
jp
push
das
lock
sbb
aaa
fcmovne
cltd
and
add
sbb
scas
fxch
rep
and
jl
push
jns
or
mov
sbb
inc
pushw
mov
repnz
outsb
fcmovne
testl
or
sbb
aas
or
addr16
xor
std
movsl
arpl
xchg
pusha
adc
addr16
xchg
mov
mov
insb
mov
pop
and
cmc
test
rcl
iret
pop
push
mov
mov
mov
imul
mov
sbb
sbb
pop
ret
stc
lock
stc
insl
sub
cmc
xchg
and
ljmp
cmp
je
lock
jns
sub
ret
mov
mov
add
test
add
cmp
xlat
xor
test
sbb
out
inc
xchg
mov
jp
and
cmpsl
push
popl
adc
rcr
pop
and
out
es
pop
jle
hlt
pop
repz
cmp
dec
or
or
stc
icebp
or
int
adcb
xor
sbb
push
in
dec
jecxz
test
sbb
testl
fldenv
add
loop
vcvtsd2ss
push
or
stos
jp
pushf
jecxz
xor
xchg
je
push
roll
pop
dec
push
fadds
or
bound
or
aad
inc
stc
xor
dec
lahf
outsl
jnp
dec
or
push
fs
fucomip
es
adc
push
pop
pop
xchg
ss
ss
xor
ss
xchg
mov
xchg
mul
jo
xchg
sbb
jbe
in
mov
adc
jns
test
pop
dec
daa
xchg
gs
es
rorl
jnp
sahf
lds
mov
jae
shl
test
leave
aas
out
xchg
or
mov
mov
xlat
add
rcrl
inc
aad
fidivrs
jno
in
dec
mov
cld
adc
mov
push
cmp
pop
dec
std
adc
inc
insb
loope
ret
inc
sbb
pop
xlat
fistpl
jecxz
xchg
push
shlb
mov
jmp
mov
mov
enter
or
mov
xchg
out
nop
lods
gs
dec
add
or
dec
aas
push
sub
mov
movsb
jg
xor
mov
dec
jge
cmp
leave
sti
ret
or
fistps
lods
cmp
jae
out
sbb
lods
ret
test
pop
sub
push
les
sub
xor
jmp
xchg
std
arpl
xor
mov
xor
jecxz
pop
lock
xor
mov
sbbb
dec
std
xor
jle
pop
fildl
rolb
jb
dec
out
mov
mov
call
mov
push
sub
sub
lods
loopne
xor
or
dec
movsb
xor
lock
or
mov
test
add
dec
clc
sbb
cmp
test
sbb
or
sub
cs
or
std
outsl
inc
bound
fnstcw
mov
gs
sub
sbb
inc
xor
loopne,pt
orb
es
pusha
mov
xor
xchg
negb
mov
lock
push
inc
scas
pop
data16
clc
lcall
lds
fwait
push
cli
jmp
jns
xor
jb
in
enter
das
xchg
std
adc
mov
jle
mov
inc
test
mov
rorb
and
scas
test
xchg
xor
mov
arpl
mov
xor
jns
jg
scas
pop
or
inc
pop
mulb
stos
adc
push
mov
ret
xchg
int
sub
jg
sbb
xchg
push
cltd
aas
imul
fidivrl
push
stos
mov
inc
cmc
call
sub
and
mov
ds
inc
xor
inc
inc
or
cmp
mov
iret
rclb
xchg
imul
mov
aaa
vhsubps
sbb
into
inc
pop
push
mov
loop
xchg
enter
mov
mov
loopne
sti
push
out
in
sbb
mov
pop
bound
stos
cltd
pop
sbb
sahf
sarb
push
dec
fdivrs
fyl2x
in
jl
mov
and
repz
sbb
jg
mov
mov
dec
jnp
sbb
sbb
cmpsb
push
aam
fldcw
xor
into
cmc
repz
repnz
lods
push
dec
sbb
sahf
or
dec
pop
cmp
popf
insl
add
xor
pop
jle
push
out
int
xchg
in
repz
or
cmpl
stos
por
call
into
mov
out
roll
pop
mov
stos
in
imul
sbb
int
push
repnz
and
push
xor
das
mov
pop
mul
and
call
mov
and
or
push
cmp
jmp
mov
ja
xor
inc
mov
cmp
mov
cli
or
mov
out
or
jnp
dec
sahf
xchg
cld
test
pop
push
iret
dec
mov
shll
insl
mov
jne
xchg
sbb
ss
cmpsb
sbb
sti
shl
out
xchg
popa
addr16
ficoml
stos
pop
adc
fistpl
sbbb
inc
xchg
pop
lds
shlb
xchg
ss
and
mov
add
rclb
cmp
call
pop
add
mov
mov
mov
jmp
test
push
mov
push
pop
pop
jmp
adc
push
xor
jns
xchg
cmp
ja
addr16
inc
test
bound
mov
push
aas
ss
leave
clc
xor
mov
das
ss
add
mov
fdivs
jns
sub
push
outsl
sub
pushl
lret
leave
jmp
xchg
pop
pop
incb
daa
pusha
cltd
pop
nop
dec
daa
lock
jne
inc
movsb
shr
pop
andb
mov
push
ret
dec
daa
pop
mov
cmpsb
out
mov
mov
imul
imul
int
push
cmp
shll
rcr
inc
sub
sub
jbe
push
fidivl
push
xchg
inc
les
lods
bound
dec
xor
cs
bound
jo
movsb
pop
test
imul
aas
sarb
jecxz
cmp
push
push
or
push
das
popf
sub
inc
das
add
mov
lods
cwtl
sbb
dec
hlt
rorl
mov
push
arpl
ret
jle
hlt
fsubs
test
ficomps
jne
push
idivl
shll
pextrw
dec
jl
add
divb
mov
sub
inc
mov
xchg
pop
fidivrl
push
sbb
jb
add
repz
lods
nop
addr16
loop
mov
ret
jecxz
pop
orl
insl
arpl
neg
jbe
xchg
inc
mov
test
aaa
out
mov
fld
dec
sbb
xor
xor
cmpsl
push
pop
mov
push
push
insb
insb
sbb
sbb
fdivs
xor
pop
cli
loop
lea
cmp
shr
add
addl
jmp
cmp
fmul
shr
jnp
mov
cmp
jl
inc
popa
push
fiaddl
scas
shlb
dec
sbb
call
in
out
aaa
sub
out
divl
sub
xchg
fwait
push
pop
or
add
sbb
xchg
out
and
or
sahf
leave
adc
xchg
imul
push
xchg
out
arpl
push
sbb
jne
add
dec
xchg
popf
int
mov
mov
sbb
lahf
scas
clc
push
out
xchg
shrb
leave
push
xchg
insl
push
mov
xlat
inc
fidivrl
sub
call
jno
xlat
xchg
sbb
mov
daa
push
repnz
xor
shlb
mov
out
scas
shrb
test
or
pop
add
push
pusha
mov
mov
sub
out
in
adc
imul
ret
mov
add
popf
mov
push
lret
inc
and
mov
mov
mov
sti
arpl
pop
call
inc
cltd
push
stc
cmp
sbb
out
adc
jle
xchg
mov
fwait
mov
sbb
push
lret
and
adc
cmp
fstl
jno
ret
xchg
pop
ja
mov
push
data16
jns
jns
mov
jl
and
mov
rol
mov
jo
dec
hlt
xchg
xchg
lds
js
push
inc
movsl
xor
lods
popa
test
mov
into
inc
sbb
push
add
sarb
ljmp
or
add
orl
enter
or
sub
push
aad
jg
stos
lahf
inc
nop
fldpi
sub
sub
sbb
lea
sub
jmp
lret
jo
ret
ret
int3
lds
ljmp
mov
xor
orb
mov
or
or
inc
fisubl
cmp
fldl
mov
dec
add
mov
mov
push
movsb
jp
dec
push
and
lahf
leave
repz
jecxz
test
ffree
loopne
in
mov
into
ja
sahf
call
icebp
or
stos
mov
jp
out
in
sub
mov
push
insb
leave
int3
stc
test
dec
inc
xchg
pop
and
dec
add
cmp
fwait
into
jmp
jo
sub
jne
mov
add
lock
adc
movsb
out
adc
in
fadd
or
inc
roll
mov
cmc
dec
repnz
fcomps
out
fsubr
lods
movsl
jae
arpl
mov
pop
aas
push
sub
shl
sbb
mov
sub
mov
int3
fdivs
lret
arpl
push
sti
xchg
popa
lods
mov
out
mov
jl
fidivl
dec
add
js
jmp
push
cmpsl
jg
inc
cltd
mov
adc
nop
jecxz
dec
push
push
adc
lods
jne
cpuid
adc
jbe
mov
or
mov
xchg
adc
jg
xor
push
enter
loopne
lahf
bound
and
popl
jnp
stos
loop
add
ret
mov
ds
int3
mov
in
xlat
imul
mov
push
mov
insb
in
adc
mov
scas
aas
das
lahf
je
cmp
adc
mov
hlt
xor
jne,pt
sbb
out
pop
pop
into
adc
inc
or
dec
mov
jmp
and
jge
subb
in
dec
dec
clc
in
data16
sub
cmpsb
adc
dec
pop
cmpb
mov
pop
cmc
sub
dec
out
leave
stos
into
xor
mov
push
jl
cmp
jo
sub
lret
cmp
frstor
push
xchg
inc
cmp
mov
mov
xor
mov
sarl
dec
mov
cmp
cli
mov
ss
push
cltd
int3
jne
sbb
loop
aam
mov
mov
add
leave
push
sbb
mov
scas
pop
lcall
lds
push
mov
lret
dec
pop
jns
cmp
add
mov
and
imul
scas
iret
test
xor
lcall
dec
ds
into
inc
cmp
loopne
dec
hlt
arpl
mov
mul
mov
mov
orb
ret
inc
cli
xchg
loop
adc
aad
jb
sbb
or
loope
hlt
sbb
dec
into
ss
insl
test
sbb
push
push
pop
mov
add
ss
or
lcall
popf
jmp
push
inc
sub
push
dec
stos
jle
adc
mov
mov
and
and
pop
ret
xchg
sbb
adc
and
push
notb
push
loop
dec
inc
pop
adc
aas
and
ss
adc
in
pusha
or
adc
sarb
cmpsl
pop
pop
mov
dec
and
lahf
daa
pop
sbb
in
xchg
outsl
dec
popa
sbb
rep
out
jbe
aaa
repz
pop
mov
push
push
mov
inc
add
mov
lcall
cmp
scas
mov
mov
xchg
mov
inc
cmp
xlat
pop
pop
mov
jns
push
inc
lea
sbb
nop
mov
mov
push
add
jge
in
fildll
movsb
test
add
iret
mov
xchg
fs
add
inc
adc
fiaddl
cld
cmpsl
adc
dec
fbstp
pop
dec
or
push
inc
fldenv
mov
dec
rorb
xorb
xchg
jae
push
xor
sub
xchg
and
jne
sbb
add
inc
hlt
jae
add
out
xchg
int
daa
mov
std
mov
push
sahf
popf
test
outsb
dec
add
es
fildl
popf
push
sbb
push
mov
inc
xchg
test
in
jg
or
add
pop
into
adc
or
icebp
push
aas
pop
cmp
sub
and
icebp
xchg
xor
ja
pusha
hlt
push
pop
out
push
xchg
inc
stos
add
movsb
test
loop
cmp
js
sub
sbb
mov
fistpl
sub
xor
jbe
fadds
loop
dec
or
enter
sub
push
push
xchg
scas
xor
sahf
stos
cwtl
popf
popf
orb
in
pop
insl
in
repnz
and
jge
fnstenv
pop
sbb
mov
cs
jge
push
xchg
dec
adc
outsb
imul
mov
dec
adcb
aaa
mov
pop
in
dec
loope
aaa
ds
xchg
pop
pop
sbb
push
push
dec
orl
jg
fimull
dec
jecxz
call
mov
add
fnsave
fistl
jno
stc
cli
add
push
ret
push
shlb
or
outsl
jb
fcoml
push
lret
fidivl
cli
ret
mov
leave
xlat
push
and
mov
flds
mov
stos
add
leave
mov
xor
aad
dec
push
dec
inc
jg
inc
shrb
add
mov
mov
fwait
jl
test
outsb
ud0
aas
xchg
jmp
sahf
test
add
mov
cmp
in
insb
push
adc
and
cmp
daa
imul
icebp
int3
sbb
xchg
jne
xchg
mov
jge
mov
enter
mov
jg
mov
faddl
jl
into
lcall
mov
lods
mov
aas
mov
addr16
or
and
popf
pop
adc
mov
xchg
sarb
pop
and
or
or
mov
xchg
aas
inc
push
sbb
jne
aaa
pushf
mov
xlat
out
loopne
pushf
daa
iret
pushf
inc
mov
fimull
jb
and
add
xlat
std
ljmp
int3
pop
and
bound
fs
mov
pop
fsubs
fisubl
in
movsb
sbb
lcall
adc
inc
inc
sti
mov
out
gs
pop
cmp
mov
or
jl
into
ret
sbb
aam
sub
adc
cmp
test
mov
jecxz
inc
lock
ljmp
dec
or
mov
aaa
loopne
popl
movsl
jno
xchg
mov
jl
add
mov
jne
mov
add
idivl
repz
sbb
push
sub
mov
sbb
pushf
adc
out
pop
imul
adc
dec
xor
jecxz
mov
lds
mov
movsl
cmc
loope
pop
jbe
arpl
insl
loope
rolb
insb
push
cmp
jmp
dec
cmpsl
rcrb
out
cli
sub
inc
dec
mov
pop
je
add
lds
dec
xlat
push
aad
lods
pop
je
jb
fildll
inc
scas
mov
jp
and
hlt
ret
movl
inc
fidivrs
jne
dec
enter
cmpsb
dec
pop
gs
mov
in
sub
dec
mov
adc
movsb
xchg
jae
pop
dec
mov
lahf
out
sbb
jmp
std
inc
adcl
inc
jle
sarb
int3
fwait
mov
cld
mov
inc
mov
outsb
jno
add
gs
inc
lcall
ja
or
fisubrs
ja
mov
sbb
lods
ficompl
xchg
mov
jno
jae
jecxz
sbb
push
das
fsts
jne
ficoml
ljmp
push
mov
ret
adc
bound
push
clc
inc
pop
xchg
xchg
adc
pop
cltd
sti
mov
je
or
or
jge
popf
sub
and
or
push
or
jno
cmp
test
sti
mov
dec
cltd
fidivrs
push
es
sbb
popa
or
ja
mov
in
cmp
or
data16
jl
push
cmp
js
cmpsl
fists
cwtl
sbbb
cmp
sbb
nop
frstor
add
aas
gs
loopne
sti
int3
and
inc
push
clc
insb
inc
or
and
int3
sub
adc
stos
or
pop
js
loop
xor
movsb
adc
inc
push
adc
ret
data16
mov
test
sbb
xor
mov
orl
outsl
decl
sub
insl
and
ss
jecxz
adc
out
rcl
scas
mov
cmp
dec
jmp
cmpsb
dec
outsb
insl
jl
inc
dec
pop
pop
mov
stos
mov
ljmp
pop
nop
dec
sti
jae
and
mov
dec
sub
jmp
fucomi
movsb
mov
sbb
cmpsb
aam
xchg
xchg
in
inc
jb
xchg
stc
push
or
or
in
push
jp
iret
inc
fwait
arpl
lret
sub
adc
inc
or
jge
std
jl
mov
add
and
mov
mov
xchg
les
mov
out
adcb
ds
sarl
ret
arpl
xchg
xor
cmpsl
lret
inc
aas
dec
lock
leave
fisubl
mov
bound
xchg
xchg
lods
in
cld
xchg
inc
add
fucomp
sbb
pop
dec
je
jle
loop
gs
ret
in
dec
push
mov
jl
addr16
nop
push
dec
sahf
sbb
subl
pop
cmp
loop
stos
inc
inc
push
xchg
mov
and
ss
xchg
stos
pop
xlat
fisubrs
fwait
mov
bound
scas
mov
out
fstps
fnstcw
data16
add
jmp
notl
loope
test
faddl
pop
pushf
sub
lret
cwtl
push
xor
scas
pushl
roll
mov
mov
fcmovne
jae
xlat
fdivs
or
sub
xor
test
pop
xchg
call
xor
dec
inc
push
insb
lret
mov
sbb
js
std
dec
inc
insl
mov
movsb
pop
pop
popa
in
dec
leave
pop
shr
pop
pop
push
and
ds
sub
and
mov
sbb
pop
jecxz
testl
icebp
xor
aam
stos
xchg
std
sti
loop
jno
mov
lea
fstl
iret
in
ja
add
and
je
pop
test
aad
dec
mov
iret
dec
mov
or
insl
inc
and
enter
mov
es
jl
xor
push
or
cmp
enter
loopne
sub
mov
out
in
fstp
clc
cmp
out
inc
rcll
leave
aas
lds
mov
jp
push
jo
shlb
xchg
idiv
dec
sub
stos
sahf
mov
sbb
test
adc
mov
ja
lret
sub
and
pop
cltd
out
ljmp
shlb
sahf
out
or
sarb
in
mov
shr
push
mov
lret
in
ljmp
int3
xor
andb
ror
cmp
movsb
dec
mov
jns
mov
xchg
push
data16
mov
out
setno
out
jnp
loopne
fwait
nop
ficoml
dec
lcall
loop
push
jle
mov
inc
lea
mov
xlat
pop
inc
dec
sub
rcrl
popa
or
sub
jp
popf
add
pop
dec
sbb
mov
in
fsubr
add
addr16
xchg
sub
mov
mov
in
setne
mov
cmp
xchg
mov
sbb
div
jb
rorl
xchg
aas
clc
or
out
mov
mov
sbb
lcall
sub
int
xlat
cmp
popa
pusha
push
or
xor
sbb
sarl
xlat
sbb
inc
xchg
pop
icebp
cwtl
mov
rcrl
and
mov
xchg
fiaddl
movsb
in
mov
xor
dec
mov
mov
in
cmp
ja
xor
sub
fstl
push
fnstenv
bound
rclb
xor
mov
cmpl
leave
fistps
movsl
mov
or
sar
cli
sarb
rorb
mov
jg
lea
mov
mov
jae
and
mov
lea
adc
fs
je
push
outsl
data16
push
adc
dec
repz
cmp
mov
push
out
push
pop
fistl
cmp
adc
imul
insb
adc
xchg
roll
movsl
pop
add
dec
adc
ret
mov
mov
pop
jo
and
jb
add
sbb
arpl
dec
sahf
hlt
cmp
stos
das
test
mov
jle
pop
mov
xlat
int
aad
jge
dec
popa
in
add
sbb
shrb
fcomp
sahf
aad
inc
mov
push
imul
xchg
pop
mov
jbe
mov
rol
mov
movsb
mov
mov
sahf
dec
dec
jbe
sahf
clc
cmp
enter
outsl
xorl
fs
rep
add
jle
fwait
adc
mov
xchg
aas
push
cmp
ljmpw
pop
and
aad
ds
lahf
aam
cmc
jmp
sarl
dec
pop
mov
xchg
xchg
cmc
mov
jbe
mov
adc
sti
xchg
notl
das
pushf
jns
sub
sahf
std
sbb
sub
subb
sub
pushf
loopne
scas
loope
das
adc
setp
lahf
cli
imul
push
sub
dec
lret
add
mov
enter
aam
sub
cmp
pop
stc
test
xor
jl
call
jne
and
pop
or
inc
inc
xorb
mov
es
inc
inc
shl
sbb
sub
mov
cmpsb
movsl
cltd
clc
jecxz
mov
sbb
or
dec
adc
xor
adcl
mov
int
aas
movsb
push
cwtl
xchg
fdivrs
jnp
xor
and
add
sub
mov
daa
push
lea
xchg
adc
xchg
js
movsb
push
imul
mov
pop
sub
out
aaa
lods
out
aam
inc
push
push
aas
ja
pop
pop
jg
lahf
adc
sahf
lods
jmp
or
test
outsb
jge
xchg
mov
rorb
inc
int
add
dec
add
leave
mov
sarb
mov
dec
scas
push
push
fildl
push
and
bound
cltd
sbbb
push
or
roll
mov
lds
addr16
jl
sbb
dec
es
and
fdivl
sub
xor
jb
out
adc
pushf
pop
call
andb
push
and
push
mov
cwtl
cmp
leave
inc
xlat
pop
cld
push
insb
or
mov
cwtl
sti
jnp
sti
scas
mov
gs
dec
mov
cmp
pop
mov
fnstenv
mov
movsb
out
lods
fwait
sbb
ds
mov
cmc
shll
mov
mov
cli
push
and
hlt
add
daa
jle
scas
jne
sbb
jl
push
cmc
jl
stos
mov
fdivrs
mov
cwtl
mov
cvttps2pi
jp
mov
dec
leave
cmpb
add
cmpsl
fsts
add
cmpsl
js
pop
addr16
test
pop
mov
shl
push
stos
cmp
ss
jo
push
test
sub
int
negb
fwait
sbb
cmp
mulps
cltd
push
cmpsl
popa
xor
jp
push
faddl
pop
outsb
push
lods
mov
push
add
cmp
aam
sbb
xchg
ja
addr16
hlt
mov
outsl
and
pop
stos
sub
leave
orb
push
repnz
into
pop
vmread
stos
mov
lcall
mov
xlat
mov
adc
sbb
jmp
pop
pop
inc
push
xorl
ljmp
and
in
aam
in
mov
pop
scas
add
xchg
cmp
mull
ret
mov
test
cmp
adc
into
and
imul
jp
mov
jecxz
lods
adc
pop
cld
sub
inc
add
je
cmp
imul
adc
lahf
dec
test
js
ret
enter
jnp
mov
stos
mov
loope
jmp
scas
aas
jne
adc
or
out
sub
pop
cbtw
adc
fpatan
out
cmovnp
call
ja
sub
inc
mov
addb
outsb
jl
sbb
pop
add
push
fst
adc
cmc
cmc
inc
push
xor
loop
xlat
cmp
mov
call
pop
ss
dec
hlt
cltd
add
nop
mulb
fistl
inc
inc
and
or
cmp
ljmp
out
xchg
xchg
shll
add
aas
out
adc
mov
mov
jle
adc
mov
add
lcall
sub
negl
push
jno
test
stos
cmp
or
fisubl
pop
scas
jmp
cmpsb
mov
fcompl
stc
cwtl
in
inc
jp
push
mov
call
push
cvtpi2ps
fstl
cmpsl
shlb
orb
or
xchg
in
rclb
fbstp
jae
popf
ret
jle
cltd
jge
jmp
out
arpl
pop
lret
mov
outsb
dec
dec
adc
xor
mov
mov
pusha
jle
xchg
xor
adc
mov
insb
push
cltd
dec
fwait
xlat
popa
test
nop
leave
jb
cmpsb
shrl
adc
pop
dec
ret
sub
lods
add
sbb
xchg
add
xchg
sub
mov
pop
bound
scas
cmc
js
dec
loop
and
pop
sbb
jne
and
int
leave
jp
push
mov
jp
sbb
jns
xor
pop
sub
dec
mov
or
dec
enter
sbb
or
cmp
sti
int3
pop
add
cmp
repnz
shrb
pop
shrl
mov
orb
or
fs
fstps
daa
jmp
js
sti
sub
loop
ret
adc
loope
ret
mov
mov
sbb
aas
mov
inc
outsl
dec
aaa
scas
f2xm1
insl
fstpt
in
adc
movsl
and
sbb
adc
adc
mov
mov
jne
stos
iret
mov
jb
inc
hlt
pmaxub
mov
mov
inc
les
xor
or
xor
loopne
sbb
cmp
push
aaa
mov
popa
lret
adc
sub
inc
inc
push
inc
xchg
stos
inc
push
loop
outsb
stos
inc
push
cld
cmp
dec
mov
push
jbe
repz
xor
mov
cld
adc
push
jo
subb
sbb
or
ljmp
jl
daa
add
add
add
and
nop
jecxz
cltd
lcallw
inc
icebp
xchg
pop
sub
and
cmp
and
ret
mov
sbb
call
lret
mov
jp
stc
call
jmp
loop
jno
pop
sbb
cs
xor
pop
xchg
push
push
xor
dec
std
out
cmp
lock
dec
and
xor
cmpsl
rcrl
mov
movsb
mov
out
pop
sub
fidivrs
pop
roll
insl
dec
js
push
jmp
sbb
enter
fdivr
insb
cwtl
and
dec
jge
sub
rcr
movsb
jge
xor
test
push
push
popa
or
mov
xor
and
mov
popa
inc
loop
xchg
push
dec
stos
shrb
push
mov
jle
fwait
xchg
into
shlb
and
dec
sti
out
sarb
lock
jno
inc
scas
dec
jbe
xchg
inc
sub
jmp
pop
jo
inc
adc
out
xchg
inc
addr16
xchg
or
bound
in
call
arpl
cmp
nop
mov
adc
cmp
ljmp
add
je
decl
jle
adc
mov
push
in
fildl
stos
ja
jp
xor
adc
fidivrs
push
push
and
inc
lock
insl
loopne
mov
push
out
cli
and
shrl
les
cmpsl
loopne
repnz
js
mov
out
cmpl
mov
int
test
insb
stos
mov
jnp
add
fcomip
dec
aam
fsub
pop
sbb
lret
sti
adcb
pop
sbb
lret
movsl
aas
out
jno
push
lods
lea
push
cmpsb
lcall
stc
xlat
and
or
repz
push
lock
decb
or
inc
loopne
fdivl
js
test
push
pop
pop
lret
mov
movsl
mov
fldenv
mov
ljmp
lods
xor
adc
pop
and
lock
and
int3
mov
fstpt
jnp
sbb
xchg
lcall
mov
rcll
fwait
icebp
cmp
add
rolb
pusha
scas
sbb
mov
aas
pusha
pop
jle
xor
xlat
mov
ret
xchg
dec
daa
push
dec
lock
gs
push
fadds
jmp
nop
push
jnp
aad
pop
add
ss
hlt
sbb
push
mov
fistpl
test
xchg
rcr
lods
in
fcomps
pushf
test
out
mov
mov
xchg
add
or
push
dec
popa
inc
mov
jl
jb
mov
push
inc
or
xchg
and
pop
mov
or
push
add
or
es
and
dec
mov
push
aad
push
das
jns
adc
cmp
cmp
pop
data16
sahf
xchg
negb
arpl
adc
loope
cs
sub
cmp
and
mov
dec
dec
lret
rol
mov
ljmp
sub
push
movb
stos
mov
mov
push
mov
mov
test
sbb
imul
cs
sbb
int
sub
pop
test
aam
jno
or
ret
mulb
pusha
test
push
ljmp
adc
das
mov
add
sbb
xor
and
data16
and
lods
mov
divb
cmp
inc
jge
shll
xchg
fimuls
insb
cltd
mov
dec
cmp
mov
leave
xchg
or
xor
repz
mov
mulb
jecxz
andb
mov
jl
add
out
subb
daa
es
out
jecxz
in
outsl
jp
lock
daa
dec
repnz
movsb
adc
inc
mov
jno
lock
lcall
pop
mov
into
je
or
sti
movsl
mov
pop
test
push
aas
mov
adc
repz
jmp
lret
dec
inc
jp
loopne
dec
in
stos
sub
push
rclb
push
xchg
push
scas
xchg
mov
outsb
or
mov
jns
fsubrl
pop
push
xchg
in
push
push
cs
lret
test
mov
cwtl
sub
mov
jge
or
or
outsb
in
and
xchg
xchg
sbb
sbb
sub
in
icebp
jp
mov
mov
lea
lods
lea
or
add
mov
fisttpll
bound
cmp
jae
jae
movsl
rcrb
dec
jge
insb
xor
xor
sub
popf
xor
pop
add
or
mov
rcl
imul
mov
push
addl
lock
aam
ljmp
xor
std
mov
je
testl
sub
add
js
lcall
inc
inc
sub
cmp
mov
cld
pop
lea
sub
pop
inc
sti
xor
cmp
test
nop
cltd
or
aad
mov
je
dec
pop
je
and
dec
subb
movsb
xchg
testb
and
jae
popa
add
aaa
push
and
pop
xor
loop
xchg
and
xlat
fsubrs
cltd
mov
mov
sbb
jmp
mov
pop
and
adc
jp
mov
sar
movsl
pop
mov
fcoml
add
cmp
cli
orl
mov
pop
icebp
loopne
test
dec
out
mov
inc
lahf
scas
gs
imul
and
stos
or
popa
xor
fistl
daa
mov
fisttpll
repnz
mov
mov
lea
jg
dec
in
testb
out
mov
push
mov
mov
pop
sub
cld
mov
lcall
mov
add
call
add
mov
out
mov
inc
jl
jns
enter
adc
jp
mov
pop
int
repnz
inc
lahf
jp
insb
pop
fmuls
ljmp
inc
stos
js
ljmp
cmp
add
mov
push
inc
pusha
stos
mov
cltd
sbb
movsb
andb
and
sti
jle
add
push
cmp
das
ds
adc
fnstenv
xor
xor
psubw
push
xchg
inc
adc
aas
sbb
arpl
stos
mov
and
mov
mov
es
jbe
rolb
out
incl
repnz
arpl
sub
lods
std
bound
stos
mov
cmp
fmul
test
out
add
into
rolb
inc
addb
mov
loopne
pop
or
xchg
sub
test
or
mov
out
pop
cmp
fsubs
shll
lahf
and
pop
lock
sub
mov
pop
popf
lcall
cmpsb
jns
mov
sbb
stos
jnp
outsl
xchg
sbb
cmc
mul
jp
pop
add
push
js
das
jge
add
ljmp
mov
jle
push
mov
das
inc
hlt
cld
xchg
jecxz
cmpsl
push
mov
insl
lods
ja
sub
scas
fdivs
sbb
les
jmp
sets
xchg
cld
jl
jbe
ss
or
inc
xor
ss
pop
aad
xor
sub
test
mov
push
out
adc
dec
fiaddl
dec
cmp
stos
hlt
aas
pop
lcall
push
fbld
popa
add
mov
std
out
mov
popf
test
or
mov
out
dec
adc
xchg
test
fstpt
movsl
es
repnz
inc
lcall
sub
sbb
or
mov
sub
mov
dec
insl
dec
mov
mov
out
jl
fwait
xchg
xor
mov
iret
enter
in
idivb
dec
fists
pop
pop
xchg
test
ret
sub
sub
mov
inc
fldt
cmp
mov
cld
adc
lods
dec
into
sbb
adc
addb
int
and
in
frstor
xchg
leave
sub
push
xchg
mov
ljmp
lret
sbb
cmp
ret
adc
push
shlb
mov
ja
mov
xorl
jmp
sahf
in
and
jle
je
sub
loope
sub
mov
mov
xchg
xor
nop
lock
xchg
fistl
and
and
shrb
scas
mov
neg
sub
cmp
pop
mov
pop
ret
xchg
cmpsb
mov
jo
xchg
push
rcll
dec
fadds
pop
jnp
and
xchg
gs
add
inc
in
jbe
nop
add
push
add
cmp
das
jno
out
mov
and
cmp
sub
mov
add
lods
lods
lret
lcall
push
or
jo
ret
or
rcrb
daa
mov
jg
mov
negl
xchg
lods
jl
inc
adc
cmp
iret
hlt
dec
push
cld
dec
int3
daa
xchg
dec
das
shll
sarb
scas
rcrl
or
rcll
out
sbb
adc
das
cmpsl
dec
mov
mov
inc
fisttpl
mov
insl
and
jae
stos
bnd
mov
lret
outsl
add
sbb
mov
cmp
js
cs
movsb
subl
or
adc
mov
add
adc
rorb
cld
inc
aad
into
or
imul
fcoml
push
pop
jbe
movsb
sahf
xlat
mov
pusha
leave
cmpsl
mov
jo
cmp
cmc
js
cmp
imul
into
push
test
add
int3
push
pop
lock
sbb
dec
push
inc
in
cltd
shrb
cld
cltd
and
leave
adc
or
mov
js
lahf
ds
inc
stc
repnz
mov
and
sbb
sbb
mov
push
and
cli
cmpsb
pushl
mov
es
in
dec
cmp
je
cmp
dec
das
pop
roll
test
xchg
inc
and
xor
shrb
inc
fdivl
xor
mov
cmp
push
repnz
pop
and
int
popf
sub
cmp
jp
jge
sbb
pop
inc
outsl
imul
ss
repz
ljmp
loop
mov
mov
sahf
testl
xor
lods
pop
dec
ffree
pushf
jbe
push
cmpsl
ret
dec
pop
push
mov
js
fcomps
add
dec
push
nop
loopne
sbb
dec
or
and
mov
dec
pusha
in
rclb
adcl
push
pop
xor
pushf
push
dec
leave
rcl
sbb
repnz
into
sub
jmp
je
call
mov
jp
mov
fdivl
cmp
sub
fld
in
fcmove
cltd
repnz
icebp
pop
in
mov
lret
or
iret
movsb
xor
in
jmp
add
js
xlat
xchg
jp
sub
push
and
pusha
lea
sub
jle,pt
xchg
lds
je
inc
fildll
jmp
add
pop
pop
stos
pop
jno
lods
add
outsb
jb
insb
ds
mov
iret
sti
lds
jecxz
aaa
add
mov
gs
addb
jle
daa
mov
xor
or
leave
mov
xlat
test
sbb
mov
leave
mov
outsb
cmovl
sbb
insl
pop
lret
pusha
pop
imul
sub
stos
in
xor
add
dec
jne
mov
rol
pushf
fucomip
mov
aas
scas
push
cmp
sub
ret
mov
jbe
cwtl
cmp
add
adc
push
cmpsb
or
jp
pop
in
mov
repnz
mov
dec
fbstp
mov
aam
pushf
lret
sbb
cli
inc
sub
and
adc
icebp
mov
popa
loop
imul
repnz
sub
in
outsl
insl
bound
or
jb
mov
pop
inc
push
inc
jbe
pop
out
jo
push
or
icebp
pop
or
fs
xor
repnz
jne
jecxz
jns
sbb
mov
jecxz
ror
or
push
cmpsb
adc
xor
sahf
bsf
or
jmp
fisubrs
dec
sub
adc
out
testb
add
imul
repnz
mov
pop
roll
test
sarl
push
gs
scas
lods
mov
mov
mov
addr16
push
jbe
sahf
push
jbe
sti
adc
and
sbb
ljmp
push
mov
ljmp
sub
stos
inc
ret
pop
push
test
cltd
jg
jmp
repz
in
cmp
stos
sub
jb
dec
cld
cmp
lret
pop
mov
popa
push
lods
mov
mov
jmp
jnp
outsl
sahf
cmp
mov
cmp
or
lods
dec
test
mov
loopne
dec
inc
movsl
aas
fiadds
ljmp
enter
testb
mov
mov
not
cli
popf
inc
in
push
pop
mov
lret
lock
or
ja
jns
mov
hlt
jg
cmp
xchg
test
insl
ja
iret
add
add
and
ljmp
sbbl
enter
imul
aad
lock
dec
mov
gs
test
fidivs
rcr
in
jmp
insl
cld
aad
pop
adc
fnop
inc
pop
addl
add
scas
lds
in
mov
pop
and
adc
jnp
push
shll
sub
mov
mov
inc
dec
mov
xor
push
jp
fbld
sub
hlt
gs
ds
sbb
popf
push
lods
xchg
pushf
sub
pop
ljmp
cld
pop
adc
out
stc
lods
pop
cli
dec
call
cmp
ss
add
adc
scas
pop
rolb
sti
push
and
fists
add
xor
cmp
and
fisttps
int
push
inc
call
scas
mov
xor
data16
xor
lahf
or
leave
adc
and
lret
and
pop
mov
cs
xchg
lcall
imul
adc
rorl
or
out
bound
jns
pop
sbb
cmp
das
iret
dec
aam
pop
mov
insb
sub
mov
pop
ja
rolb
es
xlat
out
dec
jbe
repnz
psllq
adc
cmp
xchg
addr16
popa
ficompl
ret
scas
or
roll
jnp,pn
pop
test
iret
adc
push
insb
insb
pop
les
nop
sbb
fdivrl
ljmp
aad
push
insl
sub
fwait
les
int3
lea
mov
pop
dec
push
xchg
cld
loope
fsub
mov
sub
add
fstl
and
cs
loope
outsl
iret
and
ja
arpl
push
out
dec
lods
in
aaa
cmp
inc
adc
adc
sbb
daa
jmp
jecxz
iret
adc
dec
sub
es
mov
out
fcomip
fwait
lret
or
inc
cld
frstor
ds
mov
cmp
sub
mov
pop
lret
cmpsl
in
ja
mov
int
dec
xchg
jle
push
jb
pop
int3
ljmp
sub
aam
dec
lcall
movsb
pushf
rcll
inc
stos
lods
mov
fyl2x
jp
enter
mov
pop
repnz
jmp
fldenv
scas
adc
aaa
sub
ljmp
test
aam
lds
pushf
popf
and
or
lcall
int
xor
xchg
mov
sbb
cld
std
test
fdiv
repz
lahf
lods
scas
add
or
lods
mov
xor
arpl
push
ret
xchg
mov
sti
fimull
clc
or
addr16
outsb
fiadds
int
mov
mov
lods
shlb
in
arpl
scas
pop
or
mov
xchg
lds
out
icebp
hlt
in
cltd
jbe
test
mov
pop
rcll
scas
dec
mov
mov
mov
stos
push
rorl
ja
xlat
dec
aas
gs
ret
cld
mov
adc
dec
mov
les
dec
adc
sahf
std
stc
mov
lock
adc
mov
mov
insl
dec
imul
adc
notb
and
sbb
xor
sub
fs
xchg
jbe
outsb
insb
enter
xchg
lods
test
lods
jb
sub
xchg
cwtl
xor
pop
sbb
push
cmp
das
ret
adc
xorl
movb
ret
mov
in
aad
mov
lods
push
mov
enter
xchg
jne
leave
mov
jno
test
fisubrs
scas
addr16
fsubrs
jno
shrb
call
arpl
mov
mov
insb
loop
jae
mov
cmpsb
aad
call
sbb
hlt
ds
pop
iret
add
xchg
div
add
adc
popa
dec
dec
cmp
inc
add
dec
data16
mov
push
out
popf
and
scas
popa
pop
loop
mov
in
insb
js
add
jl
lcall
ljmp
xchg
mov
daa
jp
sbb
addr16
das
out
push
pop
iret
out
add
out
mov
mov
leave
mov
jecxz
inc
mov
adc
int
xor
xchg
add
mov
cmp
call
inc
adc
shll
mov
stc
inc
jnp
stos
sbb
xor
mov
add
sbb
outsb
mov
sub
cmp
jns
loope
scas
nop
ret
andb
js
cmc
mov
xchg
fidivs
imul
mov
jmp
push
insb
pop
out
dec
mov
test
nop
rcrb
xchg
inc
inc
mov
xchg
sbb
lahf
sub
jle
lret
repz
cmp
fwait
mov
ds
fwait
and
clc
sbb
stos
or
insl
pop
push
lods
mov
mov
cmpsb
mov
in
data16
rcr
ja
js
jecxz
mov
mov
push
dec
test
daa
stos
inc
addb
sbbl
loopnew
push
mov
dec
pop
mov
es
mov
add
testl
pusha
sbb
push
popl
clts
sarb
in
xchg
sti
cmp
and
add
mov
js
push
push
aad
adc
xchg
mov
nop
xchg
dec
add
mov
xor
and
inc
xor
or
push
sarl
sbb
jg
scas
mov
pop
push
sarb
xchg
adc
popa
testb
sar
dec
sbb
xor
aad
insl
adc
pop
mov
sbb
call
cs
mov
xor
and
negb
inc
in
xlat
movsb
sbb
rol
lret
sbb
fs
rorb
cmpsl
cmpsb
in
jb
jp
push
daa
mov
shrb
sbb
pop
lock
sub
pushw
popf
test
or
xchg
pop
sbb
add
mov
jmp
mov
cmp
adc
jne
cmp
add
adc
dec
pusha
daa
push
stc
mov
ja
fs
arpl
leave
sarl
cmp
or
inc
jbe
xchg
mull
js
xor
int
dec
sbb
leave
xor
divl
arpl
xorl
pop
and
sub
inc
xchg
sub
aad
sbb
jne
or
mov
jb
sub
sub
inc
pushw
jmp
call
xchg
dec
ss
aas
movb
ja
xor
js
mov
push
mov
and
outsb
dec
xchg
xchg
cld
lods
push
sbb
push
sbb
ret
mov
dec
hlt
mov
rcll
jge
scas
push
cwtl
jmp
dec
cwtl
loope
or
and
push
repz
daa
mov
xchg
addr16
in
cmp
jecxz
or
pop
mov
jno
cmpb
ljmp
jmp
jge
dec
cltd
lods
pop
jle
add
adc
pusha
sub
leave
cmc
push
pushf
testl
dec
jne
fstpl
add
push
loopne
out
xor
andl
sbb
adc
movsb
out
inc
pop
mov
fwait
pop
xchg
hlt
push
out
insl
scas
inc
sbb
lahf
ret
mov
shlb
sarw
cmc
shll
jb
fsubrs
cmp
xchg
test
dec
mov
jl
scas
rclb
cmp
outsb
popa
cwtl
out
sub
adc
cmp
js
mov
addr16
rcl
testw
fninit
scas
mov
pushf
loopne
jg
movb
lret
in
enter
add
inc
mov
sbb
mov
andb
cmp
mov
fs
int3
xor
js
sbb
xor
fisubrl
and
mov
lret
cli
jle
roll
rolb
out
icebp
cmp
jmp
xchg
cmp
jl
in
cmp
ds
sub
clc
icebp
mov
pusha
dec
xchg
mov
jno
inc
adc
repz
fildl
add
adc
jbe
jg
pop
stc
dec
push
shl
inc
pop
jno
ret
pop
lods
stos
push
ss
cmp
pop
or
iret
sub
fadd
and
dec
or
push
gs
fnstenv
push
mov
jae
or
repnz
movsl
or
push
dec
iret
daa
mov
pop
xchg
cmpsl
rcr
jl
scas
clc
or
add
and
mov
mov
imul
push
xor
mov
fisttpl
push
push
mov
fwait
clc
sub
ja
pop
insl
or
adc
test
xor
popf
mov
sbb
cmp
das
fistps
imul
adc
frstor
sub
push
sub
lcall
dec
add
cmp
and
in
inc
fists
ret
les
push
xor
dec
in
cmp
faddp
and
bswap
mov
insb
vmwrite
cmp
mov
mov
dec
rorb
sbb
lahf
xor
push
scas
mov
push
mov
push
or
dec
and
loop
ja
jns
pop
cmp
sbbl
sbb
add
sub
loop
fstl
push
movsl
jno
outsb
cltd
cmp
cli
xchg
push
sar
test
mov
shrb
test
jl
mov
into
jno
cmp
outsl
inc
loope
jecxz
xor
and
test
jmp
cmp
mov
cli
aas
rolb
or
inc
jge
push
imul
mov
test
aad
sbb
out
test
jecxz
in
dec
pop
into
xchg
pop
scas
fistl
fmull
sub
mov
mov
es
mov
or
jp
je
jg
popa
ret
inc
mov
and
shll
add
dec
mov
sbb
xchg
jge
out
int
into
xor
fdivrs
icebp
int3
xlat
les
cs
pop
out
inc
aas
fbld
mov
stos
out
sbb
lret
cmc
dec
or
mov
call
push
add
xor
enter
lret
push
rorb
xchg
scas
mull
je
addr16
arpl
pop
mov
sub
and
mov
and
adc
hlt
and
pop
rclb
jbe
imul
jae
xchg
jbe
dec
jecxz
popa
mull
cmp
xor
xchg
jle
dec
mov
cs
mov
sub
imul
push
out
test
loopne
cmp
aas
cmc
mov
mov
sti
enter
call
dec
xchg
xor
fcoml
sub
jp
scas
mov
int3
leave
fildl
jo
ss
xlat
hlt
in
andb
enter
nop
out
push
jmp
lods
jg
push
cs
je
push
or
jnp
push
mov
mov
jno
cmp
stc
xchg
jp
pop
jns
nop
bound
outsb
fs
test
xchg
jb
inc
outsb
dec
jns
and
pop
xchg
push
sbb
jl
sahf
in
dec
sahf
sbb
push
imul
fcoms
xor
jmp
outsb
mov
scas
icebp
add
jmp
xorl
cmc
lret
push
sar
xor
xor
mov
jo
xor
popf
jl
cmp
in
out
loope
pop
push
dec
push
mov
scas
js
mov
stos
jg
dec
push
fsubrl
rcll
cmp
movsl
and
ret
aam
xor
xchg
mov
int3
jae
pop
fwait
and
js
mov
fbstp
loop
sub
sbb
lahf
sbb
or
rcrl
into
lods
fnstsw
cmp
call
xor
pop
and
xor
inc
or
outsb
push
or
cs
bound
andw
imul
fcomp
repnz
pop
sub
pop
xor
push
push
rorb
adc
cmpl
ret
lods
test
imul
arpl
sub
jmp
lahf
addr16
cld
xchg
out
bound
test
enter
lret
fwait
cmpl
fsubs
cmp
sub
cwtl
mull
out
popa
cmc
mov
mov
stos
mov
in
jecxz
into
mov
dec
and
popa
imul
xor
xchg
mov
clc
dec
and
fildll
adc
iret
push
pop
pop
cmp
sub
pop
mov
ljmp
sahf
mov
add
pop
pop
push
mov
pop
push
or
pushf
adc
cld
shl
mov
and
cmp
push
iret
jle
scas
cmp
shlb
test
sti
int3
fdivr
mov
cmp
add
or
xchg
fidivl
sub
xchg
xchg
jno
inc
scas
into
cmp
pop
je
sub
lret
sahf
aaa
cwtl
sub
add
in
imull
cmp
out
adc
and
outsl
movsb
jno
fsubrs
mov
and
lock
mov
inc
xchg
pop
add
fldcw
add
cli
loop
fs
mov
lea
dec
inc
testb
xor
push
ja
stos
and
mov
loop
mov
nop
int3
jne,pn
sub
iret
jae
rcrb
cld
dec
xchg
pop
dec
adc
nop
sub
mov
ja
sbb
sbb
xor
loope
lock
sub
imul
sbbl
fsubrl
in
iret
cmpsl
outsl
xor
mov
dec
ljmp
cmp
les
iret
iret
int
mov
push
in
movsl
sub
dec
xor
jp
pop
sub
rcr
jns
dec
sbb
jge
mov
push
and
jae
mov
lret
loop
test
cwtl
in
aam
arpl
xchg
lods
adc
leave
sub
repnz
or
or
out
mov
push
sbb
xor
jg
shll
inc
sub
out
int3
imul
je
jg
lret
push
mov
ss
jg
mov
in
inc
outsb
es
push
sbb
outsl
push
adc
xor
push
and
repnz
sbb
dec
pop
fs
inc
loop
out
movsb
fmul
clc
call
loop
shll
sub
push
xchg
pop
xchg
xchg
jo
and
xor
xor
add
inc
hlt
mov
mov
add
mov
aaa
jl
adc
lea
adc
cld
sbb
outsb
dec
mov
popf
clc
xor
push
test
fdivs
out
jg
cmpb
mov
sbb
loopne
pop
xor
pop
popa
xor
push
stos
sti
int
imul
fimull
mov
cmpl
push
adc
mov
and
and
dec
pop
movsb
mov
in
cmp
leave
mov
push
fistps
xchg
sbb
lea
push
mov
fnstenv
push
decb
or
dec
mov
pop
sub
dec
add
mov
jmp
cmp
gs
arpl
test
fdivr
mov
cmp
or
jmp
pop
leave
and
aad
imul
adc
add
pop
ret
insb
popf
xor
inc
adc
iret
mov
repz
inc
inc
xor
pop
fisttpll
cmp
std
clc
pop
lea
jne
imul
sbb
inc
icebp
mov
arpl
jmp
cmp
jge
pop
addb
arpl
inc
int3
ret
sbb
mov
push
adc
test
decb
repnz
xorl
sbb
dec
push
xchg
inc
inc
xchg
addr16
shll
repz
cmp
pop
ss
xchg
pop
sub
pop
scas
dec
icebp
pcmpeqd
mov
or
ds
add
xor
xor
cltd
clc
in
push
jo
mov
push
and
mov
std
push
add
sub
fidivl
add
jg
cmc
sbb
push
les
cmpsl
jp
add
mov
lea
adc
in
dec
int
jp
adc
pop
fstpl
jno
sub
cli
std
and
out
lock
cmpsb
add
push
push
jmp
negl
imull
xchg
dec
lods
inc
inc
xchg
xlat
xor
mov
enter
dec
lcall
popf
fadds
data16
dec
mov
fcoml
ja
ret
push
dec
aad
cmpsb
or
adc
mov
ret
lods
pop
mov
shr
push
inc
mov
push
cmp
push
adc
enter
xchg
or
mov
ret
test
adc
sahf
push
sub
push
and
cmp
stos
out
fildl
dec
leave
mov
mov
cmp
sbb
fxch
ljmp
sub
sbb
and
fmuls
mov
repnz
or
push
jno
xor
jae
out
imul
mov
xchg
int
dec
push
lret
stos
and
shl
imul
lock
lret
in
xchg
pop
fstl
call
out
movsl
pop
xchg
cmpsl
mov
xor
test
fsubp
xor
fbld
pop
xchg
mov
aad
hlt
movl
jle
push
pop
fs
push
movsb
xchg
jne
lods
add
ljmp
mov
das
ja
gs
or
mov
and
roll
shll
out
shrb
dec
jnp
in
dec
mov
pop
ret
js
fldenv
mov
shll
out
push
mov
fdivp
push
arpl
inc
inc
pop
outsb
inc
addr16
in
xchg
pop
stos
loopne
movsl
and
jnp
ja
jnp
leave
mov
mov
je
inc
xor
add
dec
cmc
mov
push
inc
int
mov
xor
popa
mov
loop
mov
sbb
push
xchg
push
pop
or
mov
pop
sub
ljmp
inc
push
out
fwait
lahf
adc
jnp
stc
icebp
mov
movsl
push
sub
push
sahf
xlat
sarb
inc
mov
cmp
shlb
cmp
jb
cmp
mov
in
sub
loopne
xchg
mov
mov
adc
mov
repz
fwait
mov
negl
add
popa
inc
sbb
cltd
lods
std
test
and
repz
popf
fwait
ljmp
mov
test
jg
dec
flds
inc
sub
jbe
stos
ja
and
ror
mov
ret
dec
ja
hlt
adcl
imul
lcall
mov
js
sub
xor
insb
cmpsl
fldl
mov
xchg
fs
mov
push
pusha
xor
dec
imul
adcl
in
xchg
dec
mov
leave
jnp
pusha
fsubl
sub
mov
push
lds
aas
nop
aaa
aaa
lcall
pop
into
ret
xchg
jg
bound
xchg
je
lods
rcr
out
mov
insb
push
into
mov
pop
jle
xor
ljmp
add
sbb
and
mulb
push
test
stos
lods
xchg
pushf
push
sbb
push
addr16
cmp
jg
retw
test
nop
mov
push
cltd
cmp
test
outsb
and
arpl
adc
mov
lcall
js
cmpsb
neg
cmp
je
out
insb
fcomps
jp
movsb
test
out
pop
imul
aas
bound
or
push
jg
mov
stos
mov
outsb
push
mov
test
arpl
lods
xchg
jno,pn
lret
mov
inc
pop
stos
mov
enter
mov
xchg
fucomip
xor
andb
inc
push
push
lds
or
cmpsl
and
add
arpl
movsb
push
fs
outsb
test
xchg
mov
dec
mov
xchg
outsl
sbb
inc
sbb
pop
rcl
sbb
xor
pop
outsb
cmp
shll
mov
pop
xor
jbe
sub
pop
sbb
into
frstor
lds
mov
inc
and
inc
cwtl
inc
mov
enter
rorl
test
icebp
mov
cmp
mov
movsb
pop
jne
and
es
orl
inc
pop
dec
mov
mov
out
add
sar
jbe
cmovl
test
mov
rorl
dec
mov
sbb
sub
lcall
pop
xorb
adc
addb
fcomps
jb
pop
movsb
pop
sub
push
adc
loope
push
pop
sbbb
pop
into
xorl
dec
inc
pop
xor
cli
adc
enter
xor
xchg
stos
and
sub
idivb
shlb
push
mov
ss
mov
mov
pop
stos
fistl
jl
pushf
sbb
inc
imul
out
ret
int3
cmp
dec
ljmp
into
pop
loopne
pop
ret
xlat
adc
scas
jp
rorb
mov
mov
outsb
cmp
or
int3
jmp
jp
xor
mov
sahf
inc
push
pop
push
cmp
rcl
addb
adc
in
mov
xchg
jle
dec
pop
loope
in
es
xor
rorb
dec
je
inc
add
mov
xchg
cmp
xor
adc
cmp
in
xchg
movsl
sub
inc
cmp
and
fbstp
jmp
out
gs
mov
pushf
scas
dec
push
xchg
divl
sbb
icebp
push
std
jp
push
jne
hlt
ret
ja
dec
ds
xchg
icebp
or
push
jmp
jecxz
sub
ficompl
jo
addl
jecxz
negb
data16
fs
aad
fwait
jmp
leave
sub
or
shll
dec
mov
sti
bound
lcall
jne
sbb
pop
bound
mov
jge
xor
push
clc
xor
adc
ret
inc
mov
xchg
xchg
aam
jmp
test
xchg
arpl
fbstp
test
cmp
mov
xchg
xchg
mov
repz
clc
sbb
pop
out
xchg
sti
mov
lcall
insb
push
add
iret
aaa
out
and
add
adc
pushfw
je
int3
xchg
out
mov
jmp
inc
lock
sub
sub
aas
mov
cltd
adc
mov
jge
cld
or
fsubp
pop
dec
shrb
leave
and
jb
lods
iret
es
mov
lock
insl
inc
into
cmp
in
add
cwtl
repz
mov
outsl
mov
add
clc
push
jge
jo
pop
test
imul
adcb
int
jno
in
aad
movsb
inc
gs
jo
dec
popa
rorl
lea
mov
movsb
push
xor
and
push
pop
push
xor
data16
dec
in
js
push
es
orl
inc
pop
clc
xor
int3
add
cmp
and
jmp
cmp
inc
cmpl
mov
sub
int3
or
scas
sub
jge
cs
add
fildll
inc
adc
lret
pop
adc
cmpsb
sahf
xor
adcl
testl
xor
and
repz
xor
ss
pop
scas
test
pop
lock
test
jp
out
nop
sahf
pop
mov
add
inc
ja
fists
jp
repnz
and
jb
into
insb
sbb
push
roll
inc
es
adc
cmp
cmp
stos
mov
lcall
lea
mov
push
fdivp
imul
lock
inc
or
cld
and
ror
loope
pop
fmull
inc
jg
or
ljmp
dec
push
testl
sub
testb
mov
inc
and
scas
and
mov
shll
sbb
and
mov
mov
and
mov
add
pop
xchg
push
push
xor
add
jle
inc
dec
adc
loop
lods
cld
addr16
repnz
xchg
arpl
mov
imul
call
iret
imul
loopne
inc
rorb
sahf
cmp
push
fbld
mov
pop
outsb
sarl
mov
rcl
sti
std
or
add
mov
cmp
and
jle
or
mov
xchg
arpl
cmp
xor
inc
cmpsl
sub
jb
push
push
lcall
sbb
fsub
out
outsl
mov
dec
pushf
mov
push
clc
push
ss
aad
cwtl
out
fisttpl
repnz
push
imul
xchg
or
cmp
loop
not
dec
push
pop
cmpb
lret
sbb
jg
scas
ds
add
pop
jmp
xor
lret
pop
dec
pop
shll
push
jge
mov
jno
fwait
scas
fbstp
and
out
jecxz
sbb
mov
push
stos
aaa
xchg
icebp
cmp
pop
pop
cmc
mov
jecxz
or
mov
repnz
dec
mov
pop
jb
repnz
aam
push
ljmp
movsl
and
out
frstpm(287
push
jge
pop
cmp
fcmovnbe
scas
jno
es
xor
sbb
in
adc
js
out
pusha
rcr
adc
and
xchg
popa
jg
cltd
nop
and
cmpsb
jnp
mov
and
mov
cmp
sub
imulb
gs
sbb
clc
mov
mov
jmp
daa
add
ret
inc
bound
push
push
push
and
movsl
in
loop
and
je
out
adc
jg
fisubl
out
scas
in
rol
dec
mov
adcl
out
sbb
ss
inc
xlat
les
pop
lea
ds
mov
inc
cmp
sub
test
incl
lds
fwait
push
push
pop
outsb
mov
fisubrs
adc
rorb
mov
inc
mov
pop
jmp
inc
push
test
ret
iret
cli
sbb
lods
pop
das
and
mov
nop
jg
sysenter
pop
mov
dec
fadds
mov
and
movntps
orl
adc
std
lcall
push
add
jl
and
cmp
pop
aad
cmp
cli
je
dec
adc
ljmp
scas
dec
dec
movlps
ljmp
loope
shll
cli
inc
mov
cmpsb
bound
jle
call
stos
jle
sub
arpl
jl
into
mov
pop
push
pop
dec
sub
sbb
jle
adc
repz
outsb
stos
xor
inc
notl
cmp
out
jl
int
imul
push
test
push
add
icebp
rcr
fs
test
hlt
push
sub
test
or
fnsave
push
mov
mov
loopne
jmp
push
jnp
dec
out
xor
mov
sarl
fistpl
lret
mov
test
movsl
push
in
xor
xor
and
aas
imull
testl
sbb
push
aas
push
dec
hlt
mov
mov
and
std
dec
xchg
mov
sub
stc
mov
adc
adc
insl
jle
ds
out
dec
xchg
adcb
pop
mov
aad
pop
outsb
mov
adc
subl
gs
mov
adc
xchg
sbbb
xlat
test
imul
iret
lahf
outsl
sub
xor
in
lds
mov
dec
mov
cmpsl
xor
movsl
dec
shll
test
sbb
sub
mov
xor
insl
fiadds
inc
daa
sub
xchg
jne
subl
vminss
mov
jle
mov
outsb
aam
pop
jmp
jl
xor
xor
jecxz
and
imul
and
xor
pop
mov
les
add
pop
push
xchg
pop
ret
test
arpl
or
mov
insl
test
fsts
pusha
in
dec
js
push
cmpsb
adc
stos
adc
pop
aas
ds
outsb
sahf
adc
lea
mov
mov
cmc
adc
or
dec
xor
mov
xchg
lcall
bound
int3
ret
stc
ljmp
adc
test
loope
addb
loopne
inc
pusha
mov
mov
je
jp
adc
xor
loop
shr
xlat
jo
testb
test
jb
stos
jg
mov
mov
popa
xor
sbb
mov
dec
add
xchg
imulb
adc
fisubrs
xchg
sbb
inc
js
cmc
inc
icebp
sbbl
mov
pop
jo
movsb
cli
dec
mov
xlat
lret
jmp
push
lcall
test
inc
shrb
push
aam
int3
xchg
test
add
rclb
sub
add
xchg
inc
ja
fcompl
pop
xchg
jecxz
fdivs
into
sub
jno
lret
jg
sbb
pop
xchg
ret
mov
cmp
add
cmpsb
push
movsl
sar
fdivr
hlt
out
mov
into
pop
cmpsb
add
mov
sub
out
jmp
or
test
mov
ret
cmpsl
mov
or
xor
mov
fldenv
sub
add
mov
mov
mov
lods
mov
and
add
xorl
rcrl
out
sbb
or
ljmp
xor
and
xchg
cmp
or
mov
imulb
scas
loopne
sar
push
pop
inc
adc
sar
test
in
xchg
or
cmp
lret
jb
divb
sbb
aam
xchg
xchg
cmp
add
repnz
andl
subb
nop
sbb
add
xchg
roll
ljmp
icebp
mulb
call
mov
adc
ficoml
or
stos
hlt
jbe
outsl
mov
sbb
mov
jb
push
loopne
shl
popa
cmp
psubsw
dec
out
movsl
xchg
sub
lea
mov
lcall
jb
cmp
hlt
ja
sbb
pop
shl
cwtl
xor
adc
aad
fnstenv
arpl
or
aas
int
outsl
mov
push
xchg
adc
sub
pop
cmp
pop
enter
cmp
mov
and
js
mov
outsb
push
cmp
cwtl
xchg
sub
fldenv
cmpl
leave
icebp
pop
jno
outsl
hlt
push
in
cmp
lret
fildll
sbb
cmp
xor
out
stos
mov
jecxz
ds
add
jo
and
icebp
xchg
in
mov
movsl
or
push
rcll
fnstcw
sub
enter
mov
push
mov
shl
sub
icebp
inc
ficoml
std
sbb
rclb
mov
mov
cli
repnz
mov
sub
mov
movzwl
imul
xorb
loope
inc
ss
adc
imul
jle
popf
fdivl
pop
push
xor
push
test
aam
cltd
pop
aaa
adcb
xor
dec
sub
push
cmp
insb
jmp
movsb
popf
sub
jb
sub
clc
dec
or
ljmp
add
xlat
mov
addr16
and
popa
push
ljmp
ficoms
xor
pop
fiaddl
xor
loopne
xor
es
jo
mov
ds
xor
mov
mov
push
jne
scas
push
mov
cmp
mov
repnz
shlb
mov
adc
in
int3
jg
and
mov
xlat
lock
imul
push
loop
cmp
push
outsl
test
movl
fcmovb
js
insb
fiadds
sarb
ja
pop
mov
cltd
inc
push
rcrb
repz
sar
cmpsb
andb
shll
nop
into
nop
dec
movsb
adc
out
je
orb
and
xchg
aas
inc
scas
xchg
pusha
sbb
je
les
pop
or
cmpsl
fistl
ss
lahf
loop
rclb
mov
in
std
mov
pop
jns
jo
das
repnz
mov
iret
mov
ljmp
push
dec
dec
je
jecxz
dec
ret
dec
pop
jmp
mov
lcall
jl
pusha
mov
call
popl
mov
dec
push
lods
jnp
jne
mov
dec
test
push
push
test
cltd
adc
mov
or
fbld
jp
mov
sbb
ret
icebp
fsts
jl
mov
cmp
and
lahf
mov
xchg
mov
mov
rorl
lds
mov
mov
inc
or
ficoml
loope
vphaddubq
cmp
xor
push
inc
mov
out
cmp
int
add
shrl
popf
shrb
in
and
pop
movsb
jle
scas
pop
loop
adc
mov
es
stc
mov
nop
out
or
jge
in
int
in
xchg
and
sar
push
xchg
gs
and
cmp
push
xchg
sub
sub
and
cmp
dec
fsubrs
xchg
cmp
push
mov
ss
fstpl
dec
mov
bound
jns
es
pusha
push
dec
inc
es
push
jno
mov
push
mov
pop
rclb
ficomps
cwtl
cmp
add
ret
xor
aas
repz
outsb
ret
or
frstor
push
cmpsl
out
push
imul
push
repz
cmp
gs
sti
or
test
mov
xchg
outsb
cmpb
pop
mov
mov
xchg
dec
add
pop
int3
pusha
inc
xchg
push
test
fnclex
push
pop
popf
jo
inc
stc
mov
leave
idivb
or
jae
jo
sbb
mov
mov
scas
mov
jbe
lcall
cmp
push
insb
sarb
jns
cs
sti
shrb
xchg
movsb
xchg
mov
xorl
in
dec
inc
mov
nop
mov
lret
clc
mov
pop
jmp
sahf
movsl
jge
sub
cltd
cmpsb
pop
mov
sti
icebp
aam
daa
pop
ret
sub
leave
mov
cmp
in
add
mov
push
cmc
xor
push
sti
mov
jb
jmp
fdiv
dec
icebp
push
sub
jnp
vminps
lcall
inc
inc
js
test
or
lret
pop
lret
scas
hlt
test
dec
mov
cs
jns
jne
xchg
sub
pop
loop
push
shr
lret
cmp
and
cltd
or
enter
icebp
loope
pop
lea
add
mov
in
pop
or
jno
lret
dec
bound
xchg
and
test
in
mov
push
cmp
or
jne
or
xor
sub
testb
ret
shlb
mov
xor
movsb
in
leave
push
ret
mov
enter
clc
js,pn
fstpl
sbb
push
js
and
div
into
aaa
cwtl
add
add
imul
notb
pop
cmp
adc
scas
pop
bound
dec
movsl
movsl
xchg
das
ficoml
mov
fildll
aaa
enter
mov
jecxz
jb
lods
push
nop
mov
rcrb
mov
jb
icebp
push
notl
push
add
aam
cmp
mov
lock
insl
hlt
or
mov
sti
outsl
and
nop
iret
loop
push
imul
sahf
xor
outsl
inc
fstl
pop
inc
push
es
mov
jmp
xchg
pusha
stc
push
lods
xor
sub
mov
outsb
dec
test
loop
cmp
xor
dec
xor
daa
in
in
pop
jp
mov
add
push
out
nop
mov
mov
pop
mov
enter
mov
rorl
outsl
cltd
dec
inc
sbb
mov
sbb
aad
or
and
cmc
mov
mov
in
repnz
adc
mov
xchg
push
xor
xrelease
dec
xchg
or
fninit
scas
mov
jge
je
lock
lock
sbb
cld
sub
mov
mov
or
subl
xchg
loop
sub
xorb
mov
xor
adc
test
push
jnp
sbb
js
push
gs
jnp
andb
mov
push
arpl
aas
nop
es
sub
into
cmp
pop
in
mov
or
mulb
daa
xor
popa
push
pop
clc
sbb
insl
jl
sub
and
sub
mov
sub
mov
ja
push
inc
jl
mov
or
hlt
repz
imul
pop
pop
stos
jb
bound
push
shll
ret
lds
dec
aas
lcall
sub
ror
ss
js
push
test
jne
adc
dec
and
sub
cmp
inc
into
loop
enter
adc
gs
push
inc
and
jb
inc
mov
inc
shl
dec
pop
pop
std
js
pop
push
pop
addr16
or
inc
ljmp
push
mov
cmove
pop
repz
add
mov
cmpsl
jl
mov
loope
mov
xchg
mov
xchg
dec
test
xchg
lcall
mov
sbb
xor
adc
ja
pop
mov
test
sbb
movsb
jb
and
stos
push
jae
xlat
test
testb
out
rcr
cwtl
pop
ljmp
fbstp
jmp
mov
and
out
mov
or
popa
cmpsb
push
push
rcr
or
or
xchg
call
pop
adc
enter
lds
mov
insb
das
in
andl
imul
fimull
sub
gs
daa
cmp
test
mov
fisubrs
xor
fldcw
lcall
xchg
mov
data16
pushf
test
adc
sbb
inc
icebp
lcall
fs
rcrl
lods
add
push
aad
dec
popl
sub
mov
mov
jae
xor
into
dec
jmp
pop
or
out
popf
stc
inc
shlb
lds
jnp
cmpsb
gs
dec
notb
notl
pop
mov
jl
dec
clc
popf
fmull
jp
dec
add
mov
inc
inc
push
in
xor
and
pop
cmpsl
je
cmp
icebp
test
inc
outsl
daa
stc
xor
push
pushf
cmp
mov
ljmp
and
call
sbb
stos
nop
pop
lea
xchg
mov
pop
xchg
cmp
imul
aaa
cmp
lea
push
cmpsl
lods
push
inc
jno
adc
lods
dec
negb
xor
ja
and
pop
cs
mov
pop
cmp
insl
push
adc
shr
jo
mov
mov
add
cwtl
iret
arpl
xor
pop
inc
repz
sub
add
dec
cmpsl
mov
cmp
push
imul
fwait
xchg
aad
popf
shl
inc
in
inc
scas
sub
mov
mov
mov
hlt
mov
fwait
jmp
and
xchg
xor
mov
xchg
add
inc
or
push
cmp
xchg
sbb
or
je
xchg
nop
cmpsl
push
shll
mov
dec
jle
xlat
loope
sbb
xchg
data16
loope
mov
add
dec
jecxz
repz
jge
sti
js
rolw
iret
cmp
or
cs
test
cmpsl
in
in
push
repz
dec
adc
xor
inc
test
mov
sbb
push
mov
add
or
stos
mov
push
adc
mov
sahf
ret
xchg
stos
xchg
or
sbb
jmp
js
and
dec
dec
xchg
mov
and
hlt
cmp
fldcw
push
dec
test
mov
dec
cmpsl
in
imul
gs
push
pop
jnp
cmc
sbb
xchg
fildl
pop
cli
and
in
mov
rcpps
pop
pop
jg
mov
gs
in
cmpsl
out
cmp
pop
mov
add
push
sub
cmp
gs
add
add
mov
inc
stos
test
rclb
mov
push
push
enter
call
cmpl
shr
pop
push
sti
pushl
loope
add
aad
push
jo
xchg
jne
jle
les
sbb
stc
adc
add
or
int3
sub
pushf
pop
test
adc
pop
or
adc
int
nop
or
mov
fs
lods
jle
mov
xchg
iret
shrl
add
out
or
orl
out
or
icebp
loope
jle
jns
add
gs
xorl
jmp
fistpl
cld
xchg
jae
xor
js
movsb
xor
enter
push
pushf
push
and
iret
punpcklwd
mov
inc
cltd
add
lods
push
enter
out
push
or
sahf
sbb
push
push
loopne
out
daa
jmp
ds
inc
dec
aas
jge
push
sub
mov
pop
js
pop
inc
mov
dec
stos
rcrb
jmp
push
iret
dec
leave
stos
inc
push
daa
je
dec
call
mov
lret
ljmp
aad
jo
mov
mov
repz
cmp
mov
sbb
push
sbb
or
test
adc
int
inc
dec
push
test
js
mov
loope
cld
and
adc
cld
test
mov
inc
pop
fmull
dec
adc
lds
pop
frstor
xor
jmpw
push
lahf
sbb
shll
dec
mov
int
mov
leave
lods
jnp
mov
cld
mov
jecxz
push
stc
inc
adc
xor
cmp
ret
jp
nop
popf
mov
mov
out
or
mov
jp
aaa
mov
and
inc
add
jmp
add
cs
jnp
or
sub
mov
xor
ret
loopne
xchg
setge
int3
or
rolb
mov
daa
cli
repz
push
xchg
inc
sub
sub
shll
bound
fcomi
xor
repnz
repz
jp
jo
push
jae
xchg
fwait
jecxz
adc
adc
xchg
inc
xchg
inc
leave
nop
icebp
cmp
mov
or
int
stc
pop
mov
data16
in
outsl
popf
and
mov
repz
stos
cld
dec
mov
fists
xlat
in
lods
lock
push
movsl
pop
enter
stos
movsb
jne
adc
fidivrl
jecxz
jbe
jp
cmp
push
push
imul
stos
jae
sti
fs
pusha
mov
inc
inc
icebp
rcll
mov
cmp
jl
dec
fwait
ret
adc
outsl
rolb
cmp
and
pop
push
adc
arpl
aam
pop
jno
push
inc
jle
xchg
ljmp
and
lods
rcrl
jmp
call
mov
mov
stos
aam
repz
js
sbb
into
push
add
dec
mov
and
or
lret
fucomip
ljmp
repnz
inc
popf
mov
int3
and
jmp
mov
cmp
mov
fiaddl
in
xchg
or
es
lret
jl
stc
or
imulb
aaa
xchg
fnstenv
rol
add
mov
pop
jbe
mov
push
or
mov
mov
mov
xor
cmp
sbb
add
cmp
inc
adc
sub
jns
push
mov
cmp
test
shr
mov
repnz
ljmp
mov
and
inc
push
pop
in
or
mov
dec
dec
xchg
mov
iret
mov
cli
xchg
push
mov
and
cs
push
xchg
push
rclb
lahf
and
dec
inc
test
ljmp
sub
icebp
icebp
mov
jnp
mov
mov
in
mov
xor
insl
and
clc
pop
ret
sahf
ljmp
push
fists
test
outsl
iret
add
jle
mov
sbb
jno
je
adc
jns
pop
shl
push
or
cmpsb
mov
mov
mov
push
sbb
fiadds
dec
xlat
in
push
jmp
in
sbb
xor
jae
dec
fcomp
test
sarb
xchg
popa
imul
jo
lret
and
xchg
int
lcall
cmpsl
dec
mov
dec
sub
daa
sahf
inc
add
mov
and
dec
mov
dec
jne
sub
daa
aas
in
sub
adc
pop
dec
cli
add
mov
bound
movsl
mov
sbb
es
in
jge
aam
mov
mov
test
in
add
mov
mov
adc
cmpsl
fbstp
inc
xchg
fcmovnb
mov
aam
popa
mov
inc
sbb
mov
lods
imul
mov
xor
test
cmp
sbb
in
xchg
jecxz
pop
fdivrs
shl
mov
mov
test
rcr
repz
int3
rcrl
scas
movsb
fwait
mov
orb
cs
clc
push
icebp
adc
xor
lret
xchg
negl
push
cmp
add
fstpt
ficompl
cmp
ret
or
adcb
mov
pop
pop
xchg
jne
shl
imul
out
loop
sbb
mov
cmp
sub
pop
push
mov
push
addr16
fs
add
loope
cld
pop
sahf
data16
cwtl
pop
dec
bound
arpl
adc
and
in
mov
lret
dec
pop
call
aaa
cmp
sub
ds
scas
test
movsl
das
mov
les
lahf
loopne
inc
cmp
cmp
cmpsl
dec
jns
cmpsl
add
push
pop
pusha
sbbl
insb
pop
push
arpl
pusha
push
xchg
repnz
test
inc
jmp
ror
push
sub
and
das
mov
sbb
push
xchg
or
adc
adc
aad
cmp
hlt
fwait
daa
lea
leave
js
jecxz
test
callw
or
hlt
dec
test
pcmpgtw
cli
add
mov
push
leave
jp
mov
mov
filds
in
std
xchg
xchg
inc
in
movl
cmp
or
inc
data16
hlt
daa
or
cli
loopne
fdivs
das
lcall
test
xchg
iret
insb
inc
cs
dec
ret
sbb
and
inc
push
jns
xorl
aad
sbb
push
shll
test
adc
arpl
mov
jns
idivl
push
push
sub
push
xchg
cmp
pushf
fldcw
inc
sbb
mov
or
lea
mov
cld
into
sub
xor
jne
add
sbb
mov
and
jae
out
adcb
sbb
mov
cmp
pop
mov
sbb
stc
idivl
pop
push
fs
jbe
fucomi
rorb
out
lret
jo
mov
mov
popa
testb
xor
outsb
jp
inc
sbb
mov
pop
ds
jae
mov
mov
dec
cmp
gs
and
add
fs
push
xchg
and
dec
int
lret
xchg
inc
jmp
add
sub
in
adc
fsubr
sbb
push
or
xor
movsl
mov
inc
jae
xchg
push
add
add
mov
sbb
lods
pop
sbb
rorl
cmp
out
xchg
mov
sub
loopne
cmc
mov
cmp
lret
insb
lock
adc
or
xchg
scas
fnstcw
or
lahf
dec
inc
pop
sub
imul
mov
and
and
pop
popa
dec
les
xchg
xor
cld
inc
push
xor
mov
mov
shll
ret
mov
in
inc
imul
mov
and
gs
leave
push
int3
push
mov
mov
outsl
je
insl
fstpl
shrb
fwait
or
js
scas
out
mov
test
jl
push
mov
in
jecxz
sbb
mov
lahf
int
test
xchg
cli
cmp
xor
in
jae
jbe
xor
mov
out
test
xor
add
xchg
cltd
mov
in
fcomp
popa
aas
lret
inc
sub
xor
jo
aad
adcb
cmp
insb
inc
inc
xorl
cmpsl
adc
test
fmuls
sub
shrb
and
jmp
int
push
dec
sub
ja
mov
xchg
fisttpl
pop
pop
sub
iret
dec
loope
test
call
insb
ret
loope
and
mov
mov
daa
ficoml
push
cmc
jae
mov
mov
add
sahf
scas
mov
jle
and
mov
mov
shr
adc
repnz
push
inc
int
sbb
push
cltd
or
iret
mov
jbe
fmul
inc
cltd
enter
add
or
adc
addr16
lock
mov
mov
mov
lds
adc
xchg
fdivrp
nop
sbb
jge
push
insb
and
or
push
arpl
jecxz
lds
std
ret
mov
sbb
out
test
and
and
stos
sahf
enter
aad
sbb
les
fmuls
les
out
add
loop
addr16
test
adc
mov
pushf
add
out
inc
mov
adc
mov
int
pusha
add
cmpsl
ljmp
push
das
out
lods
stos
mov
adc
int
nop
stos
and
mov
push
mov
stc
sub
ja
test
shlb
notb
mov
les
dec
pop
inc
imul
and
add
xchg
adc
stos
frndint
cvtpi2ps
pop
push
mov
xchg
push
pop
push
dec
and
push
cld
cmp
les
and
sbb
inc
jbe
movsl
dec
or
aas
adc
inc
xchg
scas
add
daa
imul
scas
or
mov
jle
mov
or
outsl
mov
mov
aas
scas
cmp
push
jnp
xchg
pop
adc
mov
pop
test
je
mov
cmp
pusha
sbb
ret
ljmp
mov
and
jns
push
lods
insl
fdivrl
or
xchg
pop
fs
pop
les
pusha
out
jae
sbb
arpl
rclb
mov
sbb
pusha
imul
test
mov
js
iret
cmp
adc
cmpsl
inc
into
addr16
aas
mov
lock
fiaddl
add
imul
hlt
das
cmp
mov
aam
jo
cltd
jbe
imulb
sbb
rol
jne
jne
push
jmp
loop
je
inc
sbb
iret
shlb
add
and
mov
loopne
add
mov
ror
stos
hlt
int
jl
mov
jno
and
adc
lret
sahf
xchg
mulb
sbb
cltd
dec
inc
in
jge
fisttpll
cwtl
in
mov
iret
cli
es
inc
into
sbb
pushf
imul
jne
aad
repz
iret
adc
pop
pushf
jbe
dec
movsl
leave
repz
dec
fwait
cmp
dec
xchg
cmp
outsb
push
inc
outsl
iret
clc
lcall
jp
cmp
in
and
jge
shl
mov
jmp
lods
imul
and
xchg
shrb
inc
cs
sub
sub
fcmovnu
pushf
data16
mov
or
mov
jo
subb
ds
rcrl
sti
mov
in
call
push
jp
or
and
inc
push
push
sbb
push
cmp
dec
sbb
add
test
ds
mov
adc
shl
add
xchg
pop
and
add
dec
sub
sti
mov
daa
jae
jb
dec
stos
in
inc
xor
notb
add
icebp
mov
cmp
popf
aas
movsb
jge
add
ja
sbb
int
insl
sahf
mov
and
fwait
mov
lods
xchg
dec
pop
xchg
add
push
mov
lea
fadd
movsl
mov
cmp
pop
hlt
xchg
decl
jbe
test
scas
incl
cmc
push
fisttps
sub
dec
or
adc
mov
jne
lahf
or
fsts
mov
loopne
pop
insb
adc
or
sub
ja
mov
lea
cmp
fsub
lcall
cmpsb
test
lahf
out
test
cltd
test
or
incl
dec
and
sub
dec
int3
jbe
into
insb
adcl
pop
mov
lock
cltd
fs
nop
call
loopne
jl
in
imul
mov
and
ja
fildl
sub
repz
mov
jb
mov
sbb
testb
testb
negl
xor
fcmovnbe
adc
sbb
cld
inc
adc
cwtl
mov
mov
push
adc
stos
adc
pop
mov
xor
aad
jbe
pop
and
rclb
stos
ret
ficoml
pop
sub
flds
aaa
mov
sbb
shll
dec
stos
xchg
lods
adcl
out
jge
jns
jne
and
mov
out
xor
outsl
outsl
movsl
jns
and
test
bnd
xor
bound
pushf
cmc
adc
mov
data16
xlat
mov
iret
dec
jo
clc
mov
mov
fs
sti
call
stos
dec
lahf
aad
fiaddl
lods
cmp
stos
mov
dec
add
mov
jp
jb
add
cmp
fldenv
adc
xor
add
iret
mov
pop
sarl
xchg
lcall
jl
push
adc
push
cmp
int
loope
jmp
ret
dec
sbb
mov
int3
mov
aas
pop
xor
push
mov
add
outsl
sub
mov
xchg
out
inc
bound
fiaddl
repz
insl
and
lds
cmp
sbb
xchg
mov
test
dec
aad
add
in
fsubrl
push
push
and
or
shll
sahf
and
mov
sarb
adc
in
inc
jge
mov
cmp
cld
movsb
lods
pop
test
cmpl
cmpsb
mov
pop
push
and
and
decl
jmp
dec
push
icebp
mov
jp
or
mov
xor
jl
mov
xchg
dec
popa
push
test
inc
push
movsl
scas
jo
mov
mov
rcr
push
mov
jmp
xor
movsl
xor
aad
scas
loopne
push
and
icebp
dec
xor
rorl
pop
xchg
xor
push
mov
loope
in
sarl
sub
movsb
mov
inc
divl
outsb
sub
mov
xchg
push
mov
sahf
pop
sub
int3
popl
pop
pop
pop
js
dec
xchg
jle,pt
loopne
mov
mov
jmp
stos
into
pop
roll
pop
or
stos
jmp
pop
lock
jg
out
dec
xor
dec
mov
fisttpll
fdivrl
pop
and
ljmp
add
stos
sbb
mov
fwait
aaa
xchg
out
xor
test
sti
inc
rclb
pop
out
sub
add
push
pop
and
addb
mov
fisttps
push
jecxz
xor
loopne
inc
inc
test
cltd
push
cmp
lcall
push
sbb
std
pop
lret
mov
xchg
adc
xchg
or
fisttpll
push
ret
cli
sar
dec
adcl
aam
and
or
out
xchg
mov
rorl
mul
and
push
test
fwait
mov
test
or
and
loope
push
sbb
adc
loope
cmp
dec
imul
cwtl
push
add
movsb
leavew
cwtl
loopne
sahf
testl
and
int3
xchg
mov
mov
push
xchg
mov
or
or
test
aaa
adc
out
scas
add
cmpb
xor
imul
xor
fmulp
or
mov
xchg
movsl
aas
test
xchg
popf
nop
cli
lret
xor
mov
cmp
arpl
push
sti
dec
lcall
pop
sub
hlt
in
pop
sbb
out
adcl
cmp
push
fs
std
pusha
sbb
lret
inc
jne
sahf
lods
push
fistpl
out
add
ss
dec
push
jb
insl
sti
scas
fistpl
sti
push
pop
jbe
mov
mov
sub
push
sbb
test
and
cmp
sbb
dec
popa
inc
jbe
lret
inc
loop
push
pop
cmc
loopne
ss
mov
addr16
pop
pop
mov
subb
jg
repnz
test
fsubr
in
cmp
sti
jg
dec
xlat
faddp
sub
jge
push
mov
jp
rcrl
mov
sbb
rcrl
sarl
or
xor
hlt
and
pushf
mov
dec
aaa
aam
mov
test
pop
out
addr16
rcr
pushf
enter
nop
imul
inc
or
je
mov
sahf
xor
lahf
dec
pop
jl
or
inc
mov
arpl
sbbb
jp
push
mov
rolb
cltd
sti
das
pop
push
mov
mov
pop
pop
shrb
mov
mov
sub
mov
add
daa
mov
ja
lahf
pop
and
jb
dec
pop
push
adc
jae
inc
dec
adc
subb
or
cmc
sub
je
mov
dec
insb
dec
adc
cmp
xor
push
sar
xchg
fisubl
mov
inc
jnp
daa
pop
out
cmp
mov
imul
or
sub
aaa
adc
inc
in
iretw
add
and
aad
popf
daa
lahf
mov
sti
rep
test
dec
mov
ljmp
cmp
insb
outsb
mov
bound
dec
dec
add
imul
out
mov
adc
dec
inc
mov
mov
adc
xchg
push
les
add
pushf
mov
dec
xor
popf
xchg
sbb
push
out
push
lods
lock
and
add
xchg
add
dec
mov
cmp
fildll
add
out
imul
out
pushf
mov
sti
mov
in
fldl
xor
jecxz
pop
cmp
fwait
or
jae
inc
add
insl
je
mov
std
sbb
sahf
add
add
loope
nop
into
ljmp
in
fdivs
lcall
mov
add
enter
push
ret
daa
and
cmp
aad
aas
pop
pop
xchg
mov
push
sbb
sub
cmp
mov
test
out
jno
push
fdivrl
fdiv
insb
pop
xchg
and
dec
mov
pop
in
mov
adc
jmp
outsb
or
mov
mov
test
imul
cltd
xor
imul
adc
stos
xor
nop
xor
or
adc
aam
idivl
aad
jle
sti
xor
inc
lret
jae
andl
scas
enter
cmc
popf
mov
insb
repnz
adc
aas
sbb
xchg
push
in
ja
inc
out
stos
pop
fwait
cmpsl
ficomps
repnz
outsb
xchg
jle
push
ficoms
in
mulb
jbe
les
mov
and
in
rclb
push
ja
call
stos
inc
sub
ds
sub
add
push
jne
xor
popf
out
addr16
xchg
or
push
xor
pop
sahf
cmp
mov
inc
xchg
stc
movsb
nop
inc
neg
std
into
sub
aas
hlt
cmp
mov
and
fisttpll
mov
std
iret
shll
cmp
inc
icebp
scas
jbe
fs
pop
ss
lods
popa
into
jmp
push
and
or
cli
push
lahf
mov
pop
or
ss
inc
xor
push
shlb
pop
xchg
outsb
pop
fdivrp
cli
sbb
shrb
jp
mov
and
xlat
fdivrl
inc
jnp
inc
icebp
adc
sbb
and
scas
shl
sub
test
in
cmpsl
add
dec
fwait
dec
popa
inc
fidivs
pop
loop
pusha
repz
cwtl
outsb
in
mov
or
xchg
mov
je
scas
rorl
jne
jg
jne
ss
pop
dec
out
data16
movsl
sbb
sub
sub
cwtl
test
jne
adc
fcomi
in
xor
xchg
xchg
push
jge
leave
aaa
scas
mov
out
xchg
sub
jae
sbb
cmp
rcrb
or
pop
mov
sbb
adcl
xchg
adc
aam
xor
mov
pop
jg
dec
mov
adc
dec
ficoml
mov
lret
enter
mov
jo
nop
jmp
push
pop
cmpl
dec
xlat
addl
mov
inc
lock
adc
jle
fcmovnu
pop
jecxz
pop
sub
imul
jns
lock
jge
jl
sub
inc
sbb
aaa
mov
pop
pop
xor
cmpsl
leave
aam
cmp
jbe
pusha
fmuls
std
aas
push
loop
mov
adc
dec
mov
sbb
test
xchg
pusha
cld
sbb
out
gs
clc
lahf
and
sbb
dec
push
loop
dec
mov
bound
insl
loopne
js
push
les
jg
mov
lret
nop
lret
lods
adc
adc
and
loop
subl
rorb
push
push
sub
aad
push
sub
pop
xor
addr16
push
movsl
pusha
and
xor
add
xchg
jns
ss
out
out
pop
mov
clc
add
mov
xor
test
mov
fdivs
lret
adc
sbb
das
push
fxch
loope
xor
jp
ret
out
test
jno
xor
push
dec
xor
dec
test
mov
jae
xor
push
fnop
daa
jae
out
jne
pop
jl
jmp
enter
sub
loop
dec
adc
in
adc
mov
inc
pop
es
xor
add
and
and
cmp
add
pop
test
xor
jbe
cmpsl
les
call
adc
stos
test
pop
popa
and
push
or
rorl
adc
dec
int3
out
movsb
or
in
mov
mov
pusha
ftst
xor
push
sbb
mov
mov
mov
adc
lods
loop
cmp
mov
or
push
pop
mov
pop
popa
sar
xchg
pushf
pop
mov
sahf
outsl
mov
pop
in
inc
arpl
lds
add
out
xorl
dec
je
adc
and
jmp
xchg
lahf
out
push
push
lret
jge
xor
clc
call
adc
mov
and
pop
mov
jle
mov
push
pop
fidivl
negb
inc
in
jge
jo
cld
push
dec
leave
iret
cli
jo
and
xchg
add
pop
sub
icebp
sar
xchg
cmp
aas
fsubl
jne
hlt
fsts
adcb
stc
mov
shr
clc
xchg
mov
loopne
imul
adc
leave
lods
sbb
adc
lcall
bound
xchg
fsubrp
sub
gs
cmp
pop
inc
xchg
adc
sub
nop
jb
mov
jp
ret
xor
js
stos
fsubrs
sbb
enter
mov
popa
inc
cmpsl
cli
push
mov
or
add
cs
and
and
rol
and
lret
sub
outsl
decb
test
dec
mov
incb
push
out
scas
fwait
punpckldq
out
push
pop
iret
lock
mov
xor
mov
ds
or
or
pop
dec
mov
pop
mov
mov
iret
and
mov
out
pushf
sbb
and
xchg
lret
outsb
xchg
sbb
mov
stc
dec
fisttpll
jbe
fs
inc
inc
lods
stos
daa
ljmp
nop
sub
aaa
loopne
xor
pop
call
xlat
mov
test
aad
mov
scas
adcl
insb
sub
insl
shlb
shl
mov
dec
imul
in
sub
cmp
ja
movsb
pushf
stos
adc
jns
in
in
bound
popf
pop
aas
add
jnp
push
adc
std
push
aas
pop
cmpsb
repz
ficomps
rclb
push
out
jmp
jl
enter
std
loope
fadd
loopne
pop
dec
fidivrl
inc
adc
loop
call
popf
and
fistps
xchg
and
test
cmp
es
or
mov
xor
sbb
mov
cmp
adcb
popl
mov
fdivr
je
out
out
mov
mov
ret
mov
xorl
or
hlt
gs
dec
dec
in
or
insb
test
cld
mov
jnp
mov
stos
mov
enter
scas
outsl
mov
adc
jecxz
popa
les
inc
xchg
lea
stos
rorb
lahf
jl
sbb
sub
mov
mov
iret
xor
push
stc
fsubrp
das
out
gs
dec
loopne
mov
xchg
cmp
pop
mov
xchg
ss
notb
push
xor
movsl
sarl
and
outsl
mov
sub
movsl
sbb
dec
jg
adc
icebp
or
push
sub
pusha
and
and
outsl
cmpb
movsl
mov
test
ret
mov
lods
dec
pop
daa
aam
scas
fwait
and
mov
pop
cltd
sbb
and
testl
ljmp
mov
sbb
fdiv
xchg
dec
imul
xor
test
dec
lods
jo
and
xchg
call
outsb
pop
je
sbb
jnp
inc
mov
out
mov
mov
mov
and
sbb
xor
out
clc
push
in
or
sbb
cmpsb
xbegin
stos
or
aad
xchg
jmp
sub
xchg
add
cmp
push
test
mov
into
add
pop
adc
les
cmp
test
movb
cltd
inc
fistl
add
sub
and
xor
stos
jecxz
fdivr
dec
popa
mov
mov
push
outsl
sarb
dec
lods
icebp
push
sbb
xor
push
lahf
out
lods
lock
add
adc
adc
dec
in
ret
and
fs
sub
iret
out
das
inc
testl
cmpsb
ss
scas
adc
cli
xchg
fwait
push
in
cmpsl
cmp
cmpl
jno
arpl
xchg
xor
mov
adc
push
mov
cmp
push
sub
fsubs
in
scas
js
jg
push
gs
dec
movsl
jle
iret
or
lahf
ljmp
bnd
iret
jo
int
ljmp
lods
jmp
push
ds
popf
jle
and
rorb
mov
stos
mov
pop
hlt
movsb
pop
cmp
xor
add
add
inc
lahf
sti
in
cmp
cmpsl
lods
sbbl
pop
mov
push
orb
roll
mov
loopne
cwtl
dec
shrb
xor
gs
and
bound
frstor
mov
jns
not
xchg
loope,pt
push
xabort
ss
repz
push
pop
mov
and
imul
out
push
imul
in
out
lret
xchg
xor
in
sbb
imul
imul
sub
xlat
iret
enter
daa
mov
andl
push
bound
add
cltd
imul
unpckhps
test
jbe
inc
outsl
add
adc
sar
mov
enter
mov
dec
outsb
xchg
sub
fimull
and
inc
lods
or
and
jae
push
cli
xchg
pushf
dec
lahf
shlb
ljmp
mov
xchg
or
hlt
add
jno
push
jmp
jne
push
ja
addr16
outsl
mov
cmc
and
sbb
pop
or
mov
arpl
lods
cmpsb
add
jo
bound
lret
ret
dec
test
push
mov
pop
lods
pop
mov
sbb
inc
and
mov
or
sbb
lret
jns
push
inc
push
push
push
pop
jecxz
push
jmp
bound
xchg
loopne
xchg
push
jns
jle
mov
lcall
xlat
sbb
fnstsw
mov
clc
popf
stos
mov
cltd
dec
or
outsl
pop
mov
mov
push
add
inc
push
cltd
je
mov
sub
xlat
mov
shlb
movsb
push
xchg
js
push
mov
xor
mov
fistpl
test
jl
cmp
sbbb
ja
mov
sub
jbe
mov
add
lret
adc
mov
stos
sub
pop
xor
mov
xchg
test
cmp
adc
negl
les
loop
inc
adc
or
inc
add
movb
and
call
add
fnsave
pop
or
mov
iret
lret
jne
adc
stos
push
in
lods
lds
std
mov
outsb
push
cmc
inc
mov
test
mov
lods
xchg
pop
stos
fcoms
or
xor
rclb
sahf
pop
call
push
mov
or
inc
mov
ja
in
mov
jnp
push
push
call
addl
push
xor
stos
xor
fwait
lds
mov
pushf
repnz
lds
ret
pop
iret
shll
pushf
scas
add
push
xor
pushf
sub
mov
arpl
adc
inc
mov
inc
sarb
cmc
arpl
pop
les
test
mov
sarb
inc
addb
imul
out
ljmp
mov
lods
adc
mov
nop
push
in
sub
ficomps
fmul
insl
outsb
inc
mov
jmp
mov
sub
adc
fucomp
cmpsl
mov
mov
shrb
dec
andb
ljmp
jl
or
fs
movsl
mov
pop
inc
add
mov
pop
cs
lods
fistps
pop
dec
inc
cwtl
xorb
lea
orl
cmp
jne
cwtl
inc
jl
sbb
mov
pop
arpl
dec
fadd
in
sub
fcoml
out
nop
pop
mov
jns
mov
mov
mov
ror
push
in
je
xchg
dec
sub
into
into
lods
in
and
clc
inc
mov
hlt
rclb
imul
push
cli
jnp
mov
call
jmp
jmp
xor
mov
xor
data16
in
or
xor
jnp
adc
jge
push
cmp
in
pop
xchg
ds
movsl
mov
loop
rol
sbb
nop
sahf
cmp
push
testb
inc
sti
pushf
inc
pusha
jg
mov
lret
xor
mov
adc
mov
xor
daa
and
push
lret
push
sub
dec
pop
pop
cs
filds
imul
sub
pop
mov
add
cltd
das
pop
or
in
mov
mov
push
mov
sahf
rcl
ljmp
lea
sti
repnz
lahf
mov
icebp
adc
lcall
scas
sbb
stos
lcall
int
sub
xchg
mov
es
cmp
lock
int
loope
jmp
mov
jno
mov
mov
dec
loop
enter
stc
xlat
jns
loope
add
in
rcl
pop
clc
test
out
xlat
xor
push
ret
dec
and
pushf
inc
or
fdivl
or
sub
and
inc
xchg
pushf
jnp
lret
int
iret
leave
stos
stos
mov
jp
jno
insl
vpacksswb
dec
stos
xor
add
xchg
movsb
lahf
pushf
mov
sub
mov
or
sbb
repz
sti
aam
xchg
jecxz
and
push
xchg
lods
push
xchg
repz
pusha
out
inc
pop
mov
lret
jg
insl
push
jbe
push
shrl
ds
cmp
push
pop
jae
or
pop
mov
mov
push
cmpb
xor
inc
adc
add
out
in
aad
into
push
adc
push
fcomps
dec
mov
shlb
xchg
test
push
ret
push
adc
push
adc
lcall
push
and
pop
ror
xchg
pop
cmc
xchg
pop
adc
xor
sbbb
mov
cmp
inc
jge
inc
loopne
push
gs
xchg
add
xor
and
fwait
jg
and
sub
push
or
and
fiadds
cwtl
dec
pop
lods
int3
scas
mov
xchg
repnz
dec
in
gs
aam
dec
mov
adc
or
rclb
or
sarb
push
andl
jbe
cmpsl
adc
push
and
xor
mov
cwtl
mov
int
jne
jge
mov
rcl
out
sbb
das
int
lods
inc
leave
cmpl
adc
cmp
jb
and
imul
mov
rcrl
sub
hlt
dec
jae
xlat
mov
mov
cld
scas
push
xor
and
add
in
or
push
mov
out
jg
sbb
mov
mov
adc
test
cli
ja
mov
das
cmp
fscale
les
hlt
jne
push
repz
outsb
lods
imull
arpl
rorl
rolb
dec
mov
dec
add
or
cld
adc
sbb
cmp
push
pop
out
and
inc
xchg
repz
repnz
in
sub
loopne
fstps
or
ret
arpl
xchg
call
dec
inc
scas
bound
stc
push
popf
bound
push
dec
pop
pop
stos
jno
sbb
mov
push
in
repz
shlb
lret
fwait
out
shrl
mov
decb
inc
pop
mov
mov
aad
sub
pop
sub
sbb
jo
inc
je
lret
test
stos
jae
insb
push
icebp
movsl
jb
orl
lods
sti
pop
cmc
shll
movsl
bound
inc
sub
fmull
cltd
sbb
out
sbb
mov
enter
ja
adc
mov
shr
pop
lods
dec
xor
push
sbb
aas
xor
jbe
xchg
out
enter
xor
rorb
je
mov
int3
add
test
and
repz
fstpt
lret
fnstcw
push
popa
jg
and
lret
xorl
mov
pop
sub
or
lret
mov
ljmp
jl
sub
xchg
dec
hlt
add
js
inc
out
cmp
and
jmp
movsl
in
mov
jae
push
jg
xchg
or
lock
stos
bound
mov
jnp
into
xchg
rcll
mov
ljmp
jl
out
lds
mov
les
out
sbb
sahf
rolb
push
dec
andb
inc
and
push
aas
shll
rolb
test
jbe
pusha
sub
scas
jle
inc
mov
mov
adc
stos
jg
fs
xchg
inc
dec
es
sbb
stos
jmp
add
xchg
pushf
sub
pop
jg
cmp
sub
mov
dec
jp
lret
mov
fsubrs
flds
mov
dec
je
out
mov
jo
call
mov
push
push
repz
dec
enter
sub
mov
jnp
jnp
cmp
test
les
jne
inc
sub
cmp
mov
mov
subb
popf
and
xor
and
sub
mov
pop
or
adc
pop
jae
inc
in
loope
mov
je
mov
add
insl
inc
cmpsb
cmp
cli
or
dec
push
repnz
aaa
push
jnp
ret
sub
stos
cmp
int
js
xchg
jg
adc
add
push
mov
mov
sbb
xchg
mov
loope
mov
mov
dec
rclb
lea
sbb
in
mov
dec
mov
call
cld
jnp
dec
sbb
les
push
repz
xchg
cli
test
je
popa
mov
test
dec
roll
xchg
mov
pop
pop
dec
in
sahf
mov
or
cmp
mov
les
xlat
sbb
cld
or
xchg
sbbl
adc
hlt
inc
jge
icebp
inc
mov
and
aad
or
xlat
movb
jmp
mov
xchg
movsl
mov
aaa
dec
mov
out
in
cmp
sub
les
and
sahf
imul
fldenv
mov
movsb
and
gs
leave
xchg
je
add
lea
dec
dec
pop
xchg
jmp
ljmp
sub
mov
xchg
out
xchg
adc
sahf
addl
pop
in
sub
stos
xor
pop
stos
jae
inc
or
xchg
lds
adc
ffreep
xchg
lods
mov
es
in
cmpsb
adc
scas
imul
xor
mov
inc
or
mov
adc
test
insl
inc
jp
pop
icebp
dec
rol
cmpsb
mov
cmp
je
lea
in
and
cmp
fidivl
stc
push
daa
xchg
mov
cltd
jle
adc
sbb
clc
push
int3
sti
and
out
pop
xchg
cmp
inc
loop
mov
cmp
es
or
push
imul
rolb
imul
scas
insb
sbb
pop
sbb
data16
imul
mov
cmpsl
xchg
test
xlat
xchg
add
xlat
push
adc
nop
push
xor
cmp
ljmp
pop
mov
jb
nop
loop
push
aas
ss
mov
push
lods
das
ds
dec
ret
test
pop
imul
push
and
push
push
and
dec
and
into
popf
leave
mov
iret
insb
enter
mov
sub
movsb
mov
faddl
rcrb
out
nop
sbb
stos
cltd
and
pop
pop
inc
and
stos
jns
mov
je
cmp
sahf
lods
jne
xor
push
push
push
inc
ljmp
sub
ljmp
lods
lret
add
rorb
daa
push
cltd
mov
or
cli
fistpll
jmp
outsl
push
pop
lret
ds
jno
outsb
and
nop
int3
cmpsl
das
jno
mov
lahf
jge
rclb
lds
xor
or
movsl
out
fdiv
lret
stos
xor
sub
mov
and
int3
mov
and
rorl
adc
cmp
xor
jne
nop
jmp
sti
imul
inc
and
dec
xchg
mov
insb
adcl
pop
ds
lcall
jb
fiaddl
lods
rolb
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
decl
test
imul
push
icebp
andb
leave
or
mov
cmp
push
fbstp
jns
inc
aaa
jmp
pop
nop
mov
dec
int3
add
icebp
cmp
lret
cmp
cmpb
repz
inc
push
out
adc
test
dec
mov
sbb
gs
mov
imull
lahf
cmp
outsb
dec
pop
pop
popa
xchg
jb
sub
pop
pop
jbe
inc
aas
insl
jge
aam
aas
adc
inc
mov
mov
dec
push
pushf
in
jne
lcall
aam
aad
cmp
add
push
mov
rorl
inc
push
inc
aam
jecxz
jecxz
stos
adc
push
sub
xor
ret
inc
shll
dec
adc
shl
fnstcw
out
push
mov
movsl
cmpsb
std
xor
insb
jb
adc
mov
cmpsb
std
jbe
push
jg
sub
loop
jmp
dec
sbb
mov
push
int3
rorb
dec
inc
aas
push
ss
mov
subl
add
jo
add
mov
mov
movsb
push
jecxz
lret
xchg
daa
in
movsl
mov
jnp
sbb
or
insl
call
mov
push
lret
jb
cltd
ret
dec
or
jns
or
ds
out
push
mov
aam
test
xor
xor
or
adc
or
fdivl
and
leave
xlat
mov
mov
mov
jb
and
lea
sbb
dec
sub
daa
xor
movsb
xchg
and
cld
jmp
icebp
imul
add
cmp
loope
add
call
xor
pop
iret
xchg
push
inc
sub
mov
cld
stc
mov
mov
stc
push
repz
cmp
ret
icebp
jne
loopne
ficoms
stos
ljmp
loop
cmp
jle
ss
add
or
and
test
rolb
outsl
in
int
push
dec
jmp
pusha
add
ljmp
cmp
rorb
or
xor
ss
test
push
outsl
xchg
loopne
add
fsubl
scas
pop
xor
sub
mov
push
xchg
sahf
outsl
test
pop
push
adc
push
movl
aam
jnp
cli
pop
pop
imul
rcll
hlt
mov
and
sub
jge
inc
push
test
xorb
mov
mov
inc
inc
fsubl
sbb
dec
sbb
mov
jle
hlt
rolb
sub
mov
lock
sbb
sub
sbb
addr16
sahf
and
repnz
lret
popa
inc
stos
pop
pushf
test
add
dec
in
fldcw
sbb
fidivrl
hlt
fs
push
stos
scas
push
mov
mov
iret
dec
pop
ficoml
imul
jb
das
pop
lods
shr
sbb
add
inc
sbb
mov
fdiv
dec
out
pop
mov
mov
inc
pop
movsl
cmc
inc
ret
cmc
clc
mov
dec
loope
lea
test
je
jo
movsb
ret
lods
sarl
cs
xor
arpl
movsb
into
cs
xchg
dec
jae
add
lods
sbb
xor
ret
push
sbb
jb
or
sbb
popa
and
jo
mov
jns
mov
jecxz
lret
jecxz
push
dec
aam
mov
mov
mov
outsb
inc
addr16
inc
xor
xchg
js
dec
cwtl
fcmovnu
or
gs
adc
pop
icebp
inc
ja
sub
push
pop
jmp
xor
mov
fmuls
fcmovu
xor
in
ds
loope
pop
loopne
lcall
addb
mov
xlat
push
sub
adc
movb
insb
icebp
mov
pop
sub
lret
ja
mov
cs
adc
loopne
cmp
push
cwtl
sbb
test
xchg
iret
jecxz
pop
jne
call
stc
test
adc
xlat
hlt
xchg
and
sbb
dec
shl
jb
add
add
add
add
inc
xchg
in
add
xchg
mov
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
lahf
mov
add
cmc
mov
