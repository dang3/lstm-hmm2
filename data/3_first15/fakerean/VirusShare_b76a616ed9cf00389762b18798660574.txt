sbb
add
mov
cmp
aaa
les
dec
unpcklps
jecxz
lret
into
lods
lods
pop
in
rcrl
mov
lret
xlat
je
andl
cmpsb
xchg
mov
dec
in
lret
pop
in
mov
mov
mov
popf
mov
pop
shlb
icebp
add
jl
mov
or
ret
cld
aam
xchg
sbb
cmp
jecxz
add
and
dec
out
je
ss
mov
push
jb
jmp
sbb
out
cmp
cmpsl
les
imul
ds
jno
xchg
xor
jnp
add
and
sub
leave
push
jmp
add
sbb
jno
out
add
jmp
enter
cmpsb
adc
pop
cwtl
sub
cmpsl
ja
xchg
lret
sbb
mov
adc
jbe
fdivr
sub
mov
ljmp
mov
in
call
out
mul
or
xchg
outsl
push
pop
or
mov
rolb
dec
dec
mov
aaa
sahf
gs
popf
pop
std
xchg
cmpsl
call
mov
mov
lods
push
jns
mov
jnp
dec
xchg
mov
fs
daa
test
jecxz,pn
sbb
mov
imull
fadds
cmp
and
nop
popf
cmpsl
and
es
sbb
ds
shrl
shll
movsb
bound
sahf
sbb
push
leave
repz
inc
cmc
cltd
mov
orb
mov
daa
mov
cli
inc
sbb
inc
push
lods
rcrb
fdiv
add
lock
sbb
jmp
xchg
mov
ret
test
insb
popf
xchg
pushf
les
cmp
in
lahf
inc
in
inc
mov
inc
rcrb
cmp
jns
jo
xchg
pop
popf
or
aaa
sarb
adc
jno
inc
out
push
cmpsb
push
idiv
cmp
es
rcll
stos
notl
pop
sub
mov
mov
shrb
mov
jb
test
sahf
shl
sahf
dec
inc
cmpsb
cmp
jb
mov
xor
cmp
and
inc
jnp
cltd
cmp
in
mov
xchg
rcrl
dec
jns
or
shlb
jl
sahf
xor
mov
cwtl
sub
sbbb
fs
jbe
xchg
test
dec
push
add
insb
lods
out
aam
xor
mov
push
fdiv
push
inc
add
cld
clc
mov
xor
loopne
xchg
cltd
pop
jae
orb
scas
out
jl
cmp
sub
jb
int
sbb
movsl
addr16
sbb
mov
test
icebp
lcall
adc
pop
lret
pop
shrl
add
jl
shrb
enter
xorl
pop
add
push
push
roll
inc
cld
test
and
pop
lods
repnz
add
cltd
stos
and
jp
or
test
popa
sbb
mov
sub
cmpsl
mov
pop
cmp
cmc
cmp
js
push
add
sub
les
lock
fnsave
out
lods
mov
pop
jg
fisubs
pop
sbb
jo
cmpps
jae
sub
mov
add
xchg
dec
repnz
xchg
pop
mov
pop
loop
call
push
and
scas
imull
push
or
fisubrl
push
ret
sub
scas
cmp
add
mov
jl
push
inc
les
sbb
add
and
sub
push
lcall
idivl
outsl
dec
lock
inc
loopne
xchg
shrl
dec
outsl
popa
push
adc
add
inc
and
mov
fdivrl
sub
rcll
stos
out
fdivs
dec
jmp
in
and
jno
jnp
mov
sbb
pop
cmp
push
or
fwait
mov
loopne
xchg
inc
xor
lock
dec
or
xchg
hlt
js
inc
ret
add
or
xchg
xor
cmp
sub
xchg
test
scas
mov
pop
mov
or
push
fs
xchg
mov
mov
loopne
jp
std
inc
push
sbb
jmp
pop
clc
lds
rol
mov
push
adc
adc
sub
clc
sub
test
cmpsl
dec
push
push
jmp
cmp
lret
jb
sbb
outsl
repz
frstor
shrl
push
pushf
pop
cmp
cs
das
inc
sub
mov
xor
jne
mov
les
orl
clc
movntps
in
fdiv
and
sub
adc
jp
cmpsl
mov
pop
scas
add
in
ljmp
movsl
sbbl
dec
xchg
pop
sbb
dec
adc
cld
mov
shlb
fisubrl
xchg
cli
nop
loope
push
cmpsb
scas
out
sbb
orb
xor
add
pop
jmp
pop
push
pusha
repz
mov
pusha
sub
lcall
sub
jg
lock
jg
or
adc
stc
test
dec
dec
test
push
js
mov
sbb
out
sahf
pop
lock
shr
xchg
rorb
adc
pandn
cld
imul
push
std
dec
data16
mov
xor
rcrl
dec
inc
aam
dec
into
mov
dec
aas
jno
jge
add
rorb
adc
test
mov
pop
stos
fsubs
in
aam
roll
lret
test
push
cmp
roll
xlat
push
icebp
scas
pushl
or
or
lods
cmc
jl
adc
jge
sbb
jmp
adc
mov
cld
dec
scas
dec
lahf
jns
orb
test
mov
fldenv
push
mov
stos
xchg
push
fisubs
mov
push
repnz
jnp
mov
aas
stc
xor
sub
and
inc
jp
push
cmpsl
pop
scas
mov
jne
cltd
push
and
push
pop
jmp
imul
lds
ret
in
mov
enter
sti
add
clc
call
mov
sub
addb
mov
mov
mov
roll
mov
or
insl
cltd
lret
xchg
xchg
popf
outsl
aam
jle
jnp
fisttpll
je
gs
cmpsb
rorl
jns
push
loopne
jl
addr16
ret
lret
mov
fisttpl
push
pop
fdivr
test
test
jmp
adc
xchg
scas
cmp
cmp
or
xchg
cmpsl
dec
aas
pop
fwait
mov
mov
sub
stos
jge
repnz
sub
xchg
jle
add
cmp
movsl
mov
out
jmp
aaa
scas
xor
cmpsb
sub
pop
test
shrl
mov
push
fldln2
adc
pushf
pop
arpl
or
xor
mov
cmp
outsl
mov
outsb
inc
push
loopne
jnp
or
inc
jg
stos
dec
and
pop
lcall
fdivr
jp
push
and
mov
test
adc
fld
sbb
cli
cmc
push
xlat
lods
ror
in
aam
sub
xor
pop
insl
and
jns
sbb
lcall
sarb
int
jp
fisubrs
or
popf
testb
sbb
mov
sub
mov
dec
push
cmp
jecxz
xchg
sbb
inc
inc
inc
lahf
adc
popf
xchg
and
ljmp
and
out
mov
lods
jb
inc
jo
imul
and
jbe
cmp
mov
bswap
outsl
mov
or
push
mov
or
movsl
push
sub
mov
mov
xchg
xchg
stos
sbb
xor
js
ret
lahf
roll
add
test
dec
push
in
jmp
in
sub
jnp
imul
in
jb
test
mov
and
push
xchg
mov
xchg
leave
das
out
ja
popf
mov
push
mov
inc
xchg
mov
sbb
rcrl
cld
in
dec
and
leave
popf
jne
lods
and
icebp
js
jmp
or
pop
out
sub
insb
xchg
movsb
or
movsl
popa
das
imul
test
stc
test
jge
sub
pushf
fnclex
lret
mov
mov
seto
int
enter
or
cs
repz
mov
jp
jae
jne
adc
add
and
cwtl
orb
test
in
ljmp
pusha
test
leave
into
leave
jb
outsb
xchg
push
repz
and
adc
cs
shl
jmp
int3
das
mov
lods
push
int
jge
rolb
and
out
push
lret
es
pop
jbe
repnz
push
and
subl
clc
mov
scas
and
jg
aam
outsl
fsubr
lahf
mov
dec
mov
dec
repnz
mov
jae
jae
fnclex
inc
and
lods
pop
cmp
outsb
cld
push
xchg
mov
pop
movsl
rolb
pop
mov
vfnmsub213ss
add
imul
loopne
aad
sub
les
icebp
call
jb,pt
push
mov
in
insb
push
pop
sbb
lods
sub
and
adc
mov
cmp
js
or
or
push
andb
fimull
cmp
inc
sub
push
rorb
not
sarl
push
inc
pop
sahf
pop
lock
lret
fldenv
and
cmpsb
fisubl
mov
out
cmp
mov
mov
mov
pop
fcomip
in
aaa
ljmp
mov
nop
adc
push
pop
push
and
jo
jg
sub
adc
sub
inc
outsl
mov
ljmp
test
mov
cmp
jl
cmp
daa
jmp
xchg
je
imul
aas
pop
out
pusha
add
inc
jp
ret
popf
loop
lahf
mov
orb
add
mov
mov
inc
fisubl
je
mov
nop
scas
push
pop
xor
sub
pop
imul
lcall
int3
shll
pop
adc
pop
fcomip
insb
into
cmp
sub
mov
leave
mov
hlt
mov
je
movsl
sub
jle
leave
insb
pop
adc
fmuls
mov
mov
cmc
popf
cmp
mov
push
into
shlb
aaa
jb
sub
in
dec
xorl
push
pop
stos
lea
stos
sbb
and
bnd
lret
clc
jns
mov
mov
sbb
into
sub
imul
dec
add
jl
pop
scas
fwait
stc
repnz
sbb
push
icebp
into
dec
mov
xlat
lret
stos
or
lods
pop
and
dec
nop
scas
sub
loope
inc
jmp
imul
scas
pop
xchg
aad
ljmp
movsl
mov
leave
in
dec
push
cmp
mov
arpl
out
xor
stc
adc
mov
fidivl
push
out
mov
fiaddl
out
sub
push
or
mov
push
dec
mov
push
in
test
inc
mov
xor
jne
adc
jb
in
mov
push
outsb
ljmp
mov
out
jae
jle
lods
fs
push
mov
dec
add
mov
repz
cmp
roll
nop
mov
shrl
imul
cmc
int3
and
jbe
out
jns
inc
daa
dec
adc
mov
push
fnstsw
and
pop
in
push
int
roll
into
mov
divl
in
ja
adc
andl
mov
out
popa
sbb
dec
mov
lods
dec
addr16
popa
fcoms
inc
lods
mov
popf
inc
rolb
push
or
push
loopne
push
pop
lods
mov
lahf
cltd
jmp
sti
shll
lcall
int3
stos
out
or
loopne
loopne
lods
ss
push
pusha
add
and
jnp,pt
mov
sbb
hlt
push
push
nop
insb
mov
xor
jae
lea
and
pop
mov
mov
adc
nop
outsl
rolb
andb
push
into
sub
mov
and
out
inc
testl
mov
push
jmp
sbb
and
ret
mov
iret
inc
mov
sbb
outsb
xchg
repz
into
xchg
cmpsb
pop
adcb
testl
inc
addps
mov
lods
dec
pushf
xchg
loope
push
sub
push
popa
fimuls
dec
jnp
inc
imul
xchg
jge
mov
notl
repnz
and
stos
mov
rcll
fdecstp
stc
ljmp
dec
cmp
or
xchg
subl
mov
mov
test
bound
or
lea
jmp
pop
stc
push
gs
flds
inc
sbbl
push
cwtl
call
lahf
mov
xchg
lea
lret
xchg
loopne
mov
dec
inc
mov
mov
pop
aad
mov
push
dec
ds
push
shr
in
pusha
push
lcall
mov
clc
or
popa
icebp
add
jge
inc
mov
ja
outsb
loop
cld
int
ljmp
push
jno
call
sahf
adc
pop
roll
or
mov
mov
pop
rcl
sbb
hlt
mov
mov
pushl
cmpsl
jae
or
insl
or
sub
jp
pushw
popa
fcmovbe
movsb
sbb
sbbl
aas
pop
rcll
jne
mov
jne
lret
fadds
ss
mov
leave
pop
hlt
and
jp
mov
add
inc
or
js
outsl
push
cmp
data16
inc
scas
lret
pushf
int3
lcall
leave
cmp
jl
xor
cmp
inc
subl
pop
xchg
mov
in
out
pusha
stc
dec
icebp
ror
xchg
push
mov
xchg
pop
xor
sub
add
or
pop
sahf
adc
bound
jp
adc
inc
adc
pusha
pop
mov
test
push
sti
outsl
cltd
scas
inc
xchg
aaa
dec
add
cmp
out
xchg
sbb
test
addr16
dec
adc
xchg
fmull
pop
dec
pop
sbb
call
ds
icebp
aad
js
outsb
mov
add
sbb
cmp
pop
test
shll
xor
inc
dec
out
push
clc
lret
into
fcmove
sbb
dec
and
clc
add
xchg
or
aam
inc
in
cmp
lods
loopne
fimull
push
loopne
add
adc
lea
adc
push
add
mov
and
addr16
pop
mov
adc
dec
jo
loop
push
rolb
cltd
mov
pushf
dec
push
dec
mov
loop
jl
mov
pop
int3
cmp
mov
int
ds
and
arpl
arpl
fldcw
pop
mov
stos
out
loop
cmpsl
fstpt
outsl
scas
mov
bound
jnp
pop
shll
sbb
popl
shl
negb
addr16
pushf
stc
mov
fsubs
fs
mov
jmp
push
daa
lret
int3
cmpsb
fucomp
inc
dec
outsl
incl
sti
mov
xchg
stc
stos
xchg
and
sbb
popf
xchg
cs
in
push
nop
daa
enter
outsb
jb
in
out
or
xor
mov
mulb
mov
push
cmp
movsl
subb
paddsb
mov
loopne
jns
pop
pop
jne
mov
scas
scas
imull
lret
xor
in
or
adc
pop
sbb
push
jno
insl
xlat
test
shrl
in
jo
xchg
mov
add
stc
push
mov
es
rcll
xchg
subb
rorl
call
and
fdivp
sti
push
jl
or
jb
push
call
enter
push
andl
cmp
fs
ljmp
das
test
stc
loope
or
mov
cld
jo
insl
and
insl
aas
call
mov
movsb
icebp
cld
lahf
scas
add
test
mov
pop
mov
mov
cmp
aad
popa
mov
or
jmp
mov
stos
cmc
add
dec
lods
test
out
or
dec
push
ret
inc
movsl
xchg
nop
mov
rcl
loop
out
mov
xchg
sti
aaa
sbb
adc
leave
repz
sbb
jae
lret
xor
iret
lds
sbb
pop
scas
inc
sbb
or
push
dec
push
or
or
jns
ljmp
xchg
jle
push
mov
mov
in
pop
add
adc
adc
cmp
test
imul
inc
push
cmp
int3
in
cmp
or
aas
xor
mov
das
shrl
sahf
loope
cmp
das
jp
jno
mov
movsl
lds
mov
bound
aaa
ss
dec
mov
scas
mov
scas
jle
ficompl
js
test
pushf
popa
lcall
lods
adc
mov
dec
in
in
stos
mov
ret
iret
add
xchg
or
push
dec
adc
pause
dec
push
cmp
cmpsb
and
jne
rorl
jae
and
ret
fs
or
mov
pop
out
mov
shrb
push
xor
sub
inc
iret
mov
lds
or
add
aam
fstps
dec
or
inc
lcall
sub
adc
adc
or
inc
leave
push
out
movsl
cwtl
rep
adc
xchg
cmc
xor
mov
or
vpsubd
fcmovbe
enter
push
lds
sub
aad
movsl
and
add
popf
test
dec
add
rorl
mov
in
xor
and
ficomps
movsb
sbb
dec
push
cmc
sub
lock
call
mull
jle
aad
xchg
xlat
jno
lds
inc
fistps
pop
jo
je
jl
loop
fcoms
outsb
or
dec
dec
in
push
outsb
ljmp
xlat
mov
jle
icebp
or
and
nop
dec
lds
xlat
stos
fisubrl
dec
ror
cwtl
inc
mov
and
dec
sti
fiadds
push
scas
mov
inc
aam
mov
and
in
add
pusha
int
icebp
jg
push
push
cmp
push
jo
jg
cmpsl
cmp
stos
jg
hlt
adc
dec
rolb
sbb
aas
xor
add
and
rorl
aaa
add
lea
mov
cmc
pop
jae
popf
mov
cmpl
xchg
push
pop
xor
lret
fcoml
sub
negb
jmp
jno
xchg
outsb
inc
nop
pushf
sbb
lret
xor
and
bound
push
shl
mov
cmc
cmpsl
imull
dec
cld
sahf
xchg
mov
xchg
xchg
fcoms
daa
mov
nop
cmpsb
sub
or
pop
rcrb
testb
mov
mov
and
aad
dec
int
adc
mov
decl
iret
xor
dec
jno
data16
aas
sub
push
or
mov
and
icebp
fcoml
mov
in
repnz
inc
xor
mov
clc
xchg
lods
aaa
stos
insl
xchg
std
jg
scas
jle
jge
orl
sbb
xor
or
out
jle,pt
arpl
repz
pop
hlt
pop
dec
add
in
and
sbb
cltd
jp
outsb
packsswb
dec
or
add
fwait
mov
or
sbb
cmp
mov
gs
fucom
das
dec
cmpsb
xlat
jle
push
imul
pop
add
es
clc
push
cmp
jle
lret
out
inc
out
sbb
fsubl
inc
testb
add
mov
shl
rorl
dec
xchg
and
push
sbb
push
pop
pop
mov
mov
xchg
scas
int
xor
pop
movsl
lret
adc
mov
sub
lock
shll
push
pushf
das
outsb
out
xchg
roll
in
push
push
data16
pop
sbb
pop
and
pop
add
dec
xchg
xchg
add
roll
sbb
xchg
or
icebp
mov
enter
sbbb
aas
sbb
jb
imul
arpl
xor
in
mov
mov
sbb
aam
inc
das
xor
std
dec
stc
fildll
fisttpll
je
popa
mov
cld
sub
and
add
test
orb
ror
cld
lock
stos
fldl
pop
lods
shlb
imul
repnz
and
mov
or
out
adc
ret
dec
arpl
orb
pop
clc
xchg
mov
clc
popa
mov
dec
adc
and
inc
dec
pop
adc
aad
xchg
addr16
push
negl
outsb
in
xchg
ds
or
mov
and
push
leave
sbb
mov
scas
test
xchg
cs
xor
je
enter
cmpsl
dec
lcall
movsl
into
sti
adc
sbb
inc
fisttpl
xchg
push
out
cmc
inc
adc
ja
hlt
cmpsl
pop
xchg
mov
push
out
mov
cmc
ds
xchg
lods
lret
test
cmpsl
jecxz
mov
je
push
push
pop
and
mov
out
or
mov
mov
outsb
jmp
push
pop
sub
cmp
divl
sub
cmp
cmpsb
jbe
push
stos
loope
xchg
xchg
dec
add
stc
mov
inc
aam
dec
pop
dec
xorl
add
and
xor
sbb
pop
add
or
push
cmp
mov
pusha
mov
movl
adc
popa
pop
pop
out
cmpb
adc
into
fsqrt
xor
int3
jne
out
sub
mov
bound
add
hlt
pop
inc
adc
xor
notl
pop
pop
sub
mov
shll
fnstsw
and
loopne
iret
sbb
pop
loop
xchg
loope
jns
lret
push
lahf
cmp
repnz
test
sbb
mov
incl
out
daa
es
mov
sar
repz
js
fimuls
flds
es
add
and
sbb
movsl
xchg
push
in
ja
je
loopne
cmp
repnz
sbb
dec
add
int3
adc
test
mov
and
nop
jge
pop
dec
mov
sti
sahf
inc
icebp
adc
jne
es
ss
pop
adc
leave
xor
fwait
pop
aad
ror
stos
mov
mov
pop
mov
call
stc
ljmp
mov
sbb
adc
adc
out
mov
enter
dec
repz
rcr
push
adc
ret
in
out
push
lea
mov
cmpsl
cmp
sbb
push
mov
mov
pop
pushf
fiadds
push
icebp
lods
iret
movsb
add
jmp
or
stc
dec
and
jae
cs
pop
mov
sbb
stos
rcr
lds
scas
cli
imul
mov
mov
int
push
jae
pop
xchg
push
popf
push
xchg
sbb
lea
lods
jns
jg
or
stos
lahf
je
out
iret
xor
retw
or
push
add
xchg
lret
inc
fistl
jg
stc
pop
jbe
lcall
inc
cmp
push
cmp
or
loop
or
ret
popa
stc
xor
cmpsb
cmp
adc
stc
mov
push
std
add
imul
dec
sbb
jl
icebp
push
add
cltd
push
jb
in
inc
xor
xchg
inc
push
gs
xor
sub
out
cltd
jnp
pusha
xchg
pop
ds
outsb
jmp
add
cmp
int3
or
push
mov
ficoms
jno
sbb
les
test
jl
cmp
lret
cmp
lock
dec
sahf
xor
jns
adc
jl
dec
hlt
call
popf
mov
dec
jecxz
movsb
inc
sar
lods
stos
fsub
push
mov
dec
sbb
repnz
outsb
cmc
push
mov
cmp
xchg
mov
jo
lret
lea
xor
dec
popa
rcll
pop
or
in
push
jne
mov
jge
push
sti
lods
out
pusha
lahf
pop
lcall
jbe
push
dec
mov
adc
aaa
int3
repz
pusha
frstpm(287
push
or
imul
xchg
inc
movsl
dec
jnp
popa
push
lods
jnp
xchg
adc
xchg
mov
movsb
cmpsb
sbb
adc
in
xlat
pop
and
jl
jge
jmp
scas
fdivl
ret
mov
pop
push
sbbl
add
icebp
mov
std
sub
push
and
lea
cmp
aam
test
cmp
add
or
cmpsl
add
mov
cvtps2pi
mov
sarl
dec
icebp
lret
jno
adc
shll
cld
mov
outsb
jecxz
mov
mov
mov
jbe
loope
popf
inc
xchg
jle
js
lahf
or
cmp
je
jl
rorl
idivb
jmp
sbb
push
add
cmc
push
pop
rol
add
xchg
decb
andl
lahf
jne
int3
add
sahf
inc
sub
xchg
pop
mov
roll
cmp
cmp
iret
jae
sbb
jmp
sub
into
xchg
pushl
movsb
pop
lock
sub
cmp
sti
and
push
nop
imul
outsl
push
lods
or
outsb
pop
nop
xor
sub
mov
mov
push
sub
addb
pop
rcl
push
cld
xchg
jg
cmp
lods
pushf
mov
insb
push
mov
push
push
sbb
push
pop
clc
aaa
cmovns
std
pop
jmp
jg
stos
aam
pop
xchg
inc
jg
mov
incl
mov
cmp
sub
or
mov
inc
mov
dec
jg
pop
xchg
shlb
je
mov
add
mov
std
xchg
test
jge
out
pop
arpl
xchg
pop
push
movsl
mov
mov
push
popa
jae
or
fmul
mov
sbb
pushf
xlat
test
mov
push
js
xchg
repz
decb
gs
addl
jle
int3
cmp
and
pop
fstps
testb
pop
and
push
adc
lods
cmp
cmp
sbb
mov
in
fcmovb
xor
add
and
clc
and
into
or
and
pop
cmpsl
sar
pop
sub
cmp
xchg
and
push
push
push
jecxz
jne
push
cmp
out
or
ja
mov
out
jne
stc
arpl
cs
adc
mov
push
out
ficompl
mov
inc
ja
lret
xorl
mov
jnp
dec
outsl
or
mov
push
adc
cld
addr16
mov
push
jecxz
es
cmp
and
push
or
sub
scas
push
mov
lods
mov
jp
pop
movsb
mov
mov
cmpsb
aad
in
lods
mov
bnd
xor
adc
stc
aaa
lods
sbb
mov
dec
std
fildl
cmp
sub
test
shll
outsb
fs
xchg
dec
xchg
fcoms
add
or
ss
cmp
cmp
mov
test
ror
lret
pop
lahf
add
inc
or
mov
pop
xlat
js
adc
ljmp
push
out
pop
imul
push
jnp
mov
add
stc
dec
inc
jg
cmp
pushf
les
lret
sub
rcrb
cli
mov
push
pop
decl
or
jo
sbb
mov
mov
cmp
test
scas
or
pop
out
xor
pusha
mov
jbe
mov
lock
xchg
fistps
arpl
pushf
xchg
mov
cmpsl
xor
or
fmul
ds
and
sbb
inc
call
mov
mov
stos
lods
cmc
pop
jno
pop
test
es
mov
xorl
add
sbb
mov
xchg
mov
movsl
push
movsl
aam
or
jge
or
adc
inc
xor
outsb
fildll
cli
insl
mov
ret
or
push
mov
mov
pop
push
and
jecxz
stos
je
int
push
cmp
dec
jno
mov
pop
or
xor
hlt
cmovae
cli
mov
xchg
mov
or
xlat
or
sub
and
ficoms
or
fcompl
pop
outsl
scas
mov
xchg
fisubl
stos
ja
cmp
sub
push
incl
cmp
jp
pushf
lds
inc
int
stc
add
sub
xlat
mov
sahf
xchg
in
jecxz
negl
sub
sahf
mov
movsb
out
mov
cltd
xchg
dec
cmp
cs
push
scas
jmp
sbb
pop
dec
aam
mov
outsb
push
sbb
fidivrl
xchg
and
fiaddl
mov
stc
xchg
cmc
mov
sub
jo
push
out
sub
xchg
mov
fistl
cmp
mov
cmpsb
jno
push
push
je
add
shl
int
add
jne
cmpsl
sub
stc
xor
cmpsl
shlb
aam
mov
adc
push
fidivrs
xor
fistps
or
xlat
inc
in
gs
cmp
xchg
push
ljmp
ds
sbb
push
stos
in
push
stc
jecxz
push
icebp
es
out
fsubs
jecxz
push
add
hlt
mov
insb
push
es
jg
cld
mov
ja
fldcw
cmc
iret
mov
mov
sub
cld
pop
outsb
imul
js
sbb
ss
mov
pop
fmul
rcl
insb
sub
cmpsl
arpl
inc
push
imul
clc
jmp
out
push
push
cmpsb
push
int
inc
inc
imul
sbb
cmp
rcrl
movsl
push
xchg
inc
adc
ja
arpl
xchg
stos
imul
nop
xor
pop
in
shrl
lcall
imul
in
inc
mov
sbb
int
lods
sbb
xorl
aam
mov
jne
sbb
dec
xchg
dec
adcb
sub
lcall
cmp
and
shlb
pop
push
add
push
ljmp
mov
jmp
test
cmpsb
and
popf
test
lods
imul
cmpsb
int3
add
loope
scas
sahf
xor
mov
jae
adc
mov
pop
out
fcoml
test
loop
fistpll
mov
mov
ss
sub
into
and
jns
addr16
mov
or
mov
aam
sbb
push
mov
push
daa
jb
push
or
pop
jnp
cs
xchg
jecxz
addr16
negb
iret
les
outsb
cmp
icebp
or
lcall
insb
cli
push
inc
xchg
mov
lcall
sbb
outsb
mov
stc
mov
mov
sub
adc
and
mov
repz
pop
rorb
push
sub
sbb
out
pusha
mov
imul
rcrb
jno
mov
insb
push
clc
pop
leave
ljmp
push
sbb
cmp
mov
jg
mov
stos
sbb
jle
push
pop
dec
fcmovu
shlb
mov
push
fisttpl
add
adc
iret
test
adc
mov
adc
movsl
shll
nop
ds
call
shlb
mov
push
ss
or
or
data16
enter
dec
aad
loop
adc
pushf
mov
inc
nop
mov
jb
mov
push
std
daa
popa
arpl
dec
sti
mov
aad
cmp
sbbb
xchg
fwait
dec
sub
mov
push
int
cld
lret
pop
mov
stos
lods
adc
stos
cmp
pushf
out
adc
pop
dec
and
es
sbb
jbe
cmp
jae
cmp
and
dec
stc
ja
xchg
out
imul
or
in
or
ljmp
or
ficompl
jne
sti
cmp
sub
adc
stos
movsb
xchg
popa
push
adc
cmp
nop
jb
lock
bnd
sub
jne
lea
or
les
outsl
aaa
and
jno
mov
scas
adc
jb
aas
dec
bound
ljmp
jmp
pop
xchg
mov
xchg
stos
ja
jmp
test
stos
and
je
xor
xor
push
pop
xchg
mov
ficoms
cmpsl
jns
jb
rcl
mov
add
dec
lahf
jmp
jmp
bound
cmpb
mov
out
jae
lods
mov
stos
push
rol
test
loop
jmp
sbb
xchg
mov
bswap
push
push
test
pop
mov
lahf
cmp
mov
call
ret
xchg
add
outsb
fiadds
loopne
icebp
inc
jl
mov
or
jecxz
xchg
push
mov
cmp
push
iret
sbb
jp
mov
into
jbe
sub
shlb
pop
fiaddl
pop
adc
mov
mov
fldl
mov
outsl
jno
jp
or
pop
pop
and
sar
mov
sar
and
rol
sub
lods
jo
clc
imul
jl
leave
icebp
pop
fs
ret
int
dec
adc
cmc
or
mov
std
cld
sbb
push
pop
jmp
fisubrs
mov
mov
rcrl
sbb
ss
scas
scas
xchg
xor
adc
loopne
mov
or
rclb
outsb
mov
jge
pop
push
shlb
jmp
or
jne
add
jecxz
pop
aas
add
or
dec
adc
adc
jle
xchg
leave
das
test
xor
pushf
sbb
xor
arpl
mov
mov
icebp
lahf
add
data16
sbb
inc
cld
xchg
addr16
stos
jge
jle
push
adc
pop
jae
inc
lahf
imul
es
setp
and
ss
mov
or
jae
mov
iret
cmc
mulb
mov
test
pop
adc
cmp
insl
xor
movsb
popf
jae
jle
outsl
cmc
fs
rorb
sub
outsb
lods
dec
xchg
xor
cld
mov
test
xor
or
test
and
jmp
mov
mov
adc
je
sbb
xchg
mov
mov
ret
or
ljmp
xchg
ds
jmp
hlt
sbb
xchg
aad
adc
cmp
in
sub
jnp
inc
out
loop
lcall
stos
pushf
sub
dec
push
add
push
xchg
data16
mov
loop
stos
jnp
push
mov
push
pop
aam
mov
mov
jnp
push
fisubrl
mov
shrb
adc
push
out
gs
xchg
std
insl
stos
push
fcoml
stc
add
in
adc
outsl
sbb
xchg
push
sbb
sbb
lods
call
popa
or
xchg
ds
ss
lods
jg
dec
cltd
push
fs
popf
icebp
je
jne
ficompl
dec
push
aad
data16
imul
mov
adc
or
push
cmp
cmp
sahf
lock
les
push
mov
pop
jno
faddl
xor
cmp
push
jb
fcmovnb
add
fdivp
fwait
jecxz
mov
rclb
and
shrl
mov
and
stos
push
js
mov
lret
cld
cs
inc
and
mov
andb
adc
sarb
mov
shll
add
mov
sbbl
mov
scas
cmp
jnp
rcrb
repnz
dec
lods
aad
or
jecxz
xor
inc
rcrl
xchg
shl
dec
or
sub
fcomps
jp
das
icebp
dec
mov
and
push
adc
call
testb
arpl
ficoms
daa
cmpb
inc
aad
test
imul
cli
mov
add
outsl
lret
fsubr
cwtl
jp
fcompl
mov
jmp
add
fmull
fisttps
push
addr16
inc
cmp
lcall
xchg
clc
and
int
lahf
dec
aam
adc
adc
or
shlb
test
popa
pop
loope
cs
inc
incl
test
mov
repnz
sub
jmp
inc
fucomip
cmp
repz
cmpsl
jne
sti
out
jge
fwait
ds
lcall
movsl
and
ds
mov
std
cmp
or
cmpsb
mov
push
sub
lret
jmp
std
outsb
cmp
sbbb
int
cld
scas
inc
jns
out
bound
shll
and
ss
movb
test
push
cwtl
xor
lods
hlt
and
adc
xor
mov
dec
cld
push
xsha1
cmpsb
dec
sub
cmpsb
mov
mov
push
iret
push
aam
fwait
cmpsb
inc
push
dec
int3
negl
pop
add
pop
push
and
cld
push
clc
cld
xor
ret
int
xchg
mov
sub
fisubrs
outsl
xor
pop
dec
mov
fst
aam
jle
inc
dec
or
fstpl
pop
xor
xchg
cltd
xor
outsb
add
push
mov
adc
sbb
add
pop
and
je
jne
mov
pop
test
cltd
cmp
or
xor
loopne
mov
lret
ret
pop
xor
and
ret
xor
xchg
mov
add
xor
loope
inc
mov
testb
mov
out
and
lret
xchg
mov
mov
sbb
lock
scas
js
add
pop
repnz
mov
stc
fcomip
pop
and
stc
dec
push
cmc
mov
mov
test
fidivrl
mov
insl
mov
pop
inc
and
xor
out
xchg
ret
pop
fldt
imul
sti
xchg
ret
xor
fs
mov
out
sti
inc
xchg
cmp
or
push
or
lahf
decl
lret
xchg
or
shrb
mov
daa
out
and
imul
fmull
push
stos
popf
xor
jge
mov
and
ds
and
xor
cltd
adc
jmp
fldl
dec
push
adc
enter
shl
cmpsb
sub
push
mov
sti
adc
mov
inc
ret
xor
rol
call
fsubrs
es
pop
xchg
jne
adc
vpshuflw
and
xchg
bound
stos
sub
inc
repz
xchg
xor
loope
dec
mov
insl
roll
in
int3
aad
sub
add
mov
jge
leave
sbb
sbb
mov
xchg
bound
fsts
sub
ficoml
push
mov
fcomp
pop
movsb
cmpsl
ss
outsl
xchg
dec
push
mov
xor
add
or
sqrtps
sbb
into
dec
mov
jmp
sbb
std
fwait
pop
dec
in
add
test
add
test
jl
incl
adc
les
leave
lods
dec
std
mov
xlat
pop
pop
jecxz
stc
lcall
lds
inc
jbe
or
mov
sahf
and
data16
pop
or
push
inc
ljmp
cmp
pop
mov
push
mov
nop
push
push
cmpsb
dec
outsb
in
push
mov
sub
daa
xchg
pop
arpl
jecxz
xor
add
and
cmp
dec
test
shlb
ljmp
jo
popf
test
cli
lods
jle
ds
or
cwtl
or
sub
xor
adc
mov
cmp
adc
inc
hlt
xchg
fucom
bound
popa
test
pop
xchg
xchg
in
xchg
pop
idivl
add
fxch
pop
mov
repz
stos
push
xor
inc
incb
jg
add
mov
fsub
mov
icebp
fcmove
cwtl
pop
mov
mov
sbb
adc
mov
inc
cwtl
ror
cltd
adc
sbb
sbb
sti
and
xor
cltd
pop
mov
xor
push
sbb
xor
mov
xor
inc
aaa
icebp
lret
jae
jo
test
cmpl
xchg
pop
sbb
cmpsb
les
pop
and
mov
push
add
xchg
sub
push
mov
fdiv
flds
rorb
ss
es
dec
cmp
sub
pop
mov
es
pop
fwait
aas
lock
movsb
cmp
or
inc
inc
adc
push
xor
xor
lea
outsb
aad
inc
mov
mov
enter
mov
lcall
popf
pusha
lds
pop
cmpsl
int
int
pop
jo
push
dec
test
jns
jnp
mov
cltd
rcll
arpl
lods
adc
push
jle
jae
lret
clc
adc
cwtl
testb
and
dec
outsb
mov
imul
xorl
cmpsl
jle
notb
ljmp
loop
popa
out
mov
out
je
lret
jmp
xor
les
stc
out
sbb
in
aaa
mov
test
xor
sahf
push
in
into
sub
jbe
adc
ja
mov
outsl
out
test
movups
sbb
lods
or
jmp
push
or
out
pop
jae
and
es
push
mov
scas
fdivrs
mov
test
adc
jmp
es
pop
lret
inc
out
mov
outsb
ja
add
ss
es
ja
adc
add
test
xor
icebp
push
or
mov
cmp
aaa
shrb
push
push
dec
in
hlt
jle
or
and
cmp
xchg
jmp
sbb
divl
fwait
in
xor
divl
mov
add
rcll
adc
mov
push
out
sbb
push
xor
fwait
jmp
aas
das
mov
cmp
xlat
dec
cmp
inc
addr16
lret
mov
mov
dec
jecxz
xchg
test
in
int3
sub
and
push
or
push
pusha
adc
sarb
incl
push
jbe
mov
in
xchg
or
pop
pop
mov
and
call
xor
lock
push
pop
pushf
sub
test
mov
pop
out
pop
inc
test
cmp
cmpsb
mov
icebp
pop
std
outsl
aam
pop
aam
mov
add
jge
test
aaa
sub
ret
dec
pop
push
mov
mov
or
subl
xchg
cmp
shlb
cmpsl
out
mov
cli
pop
jbe
push
js
cli
push
cmp
cmp
int3
jb
and
push
icebp
test
mov
fnclex
jns
push
subb
lock
jno
mov
insb
adc
push
xlat
pusha
sbbb
cmp
inc
sarl
mov
push
mov
inc
xor
pop
bound
mov
lret
hlt
dec
sub
adc
adc
pop
jbe
mov
ja
and
xchg
pop
test
push
pushf
pop
add
das
in
mov
inc
aam
adc
or
xchg
push
in
xor
or
je
xor
aaa
sti
mov
popf
xlat
adc
std
out
push
lahf
cwtl
lea
and
cmp
dec
mov
js
xchg
enter
sbb
aad
xchg
jl
sbb
and
mov
daa
mov
movsb
dec
mov
iret
xchg
or
pop
out
shll
mov
dec
and
test
stc
insl
mov
mov
sbb
popf
jae
xorl
jge
mov
ret
inc
xor
jge
adc
push
ja
mov
int3
icebp
fisubrl
call
sub
fldln2
or
pusha
push
xchg
push
test
imul
lods
stos
sbb
or
mov
jns
in
cmp
mov
fwait
cmp
dec
pop
adc
in
cld
insb
mov
mov
dec
dec
sbb
xchg
push
in
mov
lcall
das
pop
fnstsw
int3
xor
and
cs
mov
shlb
cmc
inc
adc
and
lahf
push
stos
xor
sarl
xchg
push
cli
sti
in
pop
add
mov
pop
call
and
sub
data16
mov
sti
cmp
jl
push
imul
mov
adc
out
push
je
xchg
fcmovb
cmp
lods
mov
adc
or
push
lock
test
inc
aad
fldenv
push
scas
jo
inc
jbe
pop
jo
mov
rcrb
lcall
cmpsb
sub
call
sti
jge
ror
mov
dec
inc
pop
aaa
adc
fistpll
ds
and
adc
lcall
iret
out
lods
adc
aas
add
push
xchg
mov
imul
pop
addr16
test
outsl
or
and
int
cld
inc
outsb
pop
mov
jecxz
xchg
test
imul
add
adcl
sub
pop
jle
xchg
mov
mov
xchg
jns
leave
add
insl
inc
mov
jge
rclb
adc
jl
mov
jmp
std
fwait
mov
xchg
dec
and
mov
xchg
sar
scas
clc
pop
jns
push
push
inc
cwtl
pop
push
aam
xorb
add
pop
aaa
js
dec
lods
adc
inc
das
push
lock
icebp
in
fsubrl
aad
xor
mov
stos
test
adc
push
sbb
iret
repnz
cmp
call
cli
dec
leave
cmp
inc
loop
mov
scas
mov
sub
sbb
dec
idivl
xor
xchg
movsl
lret
mov
or
loop
les
shlb
or
out
nop
mov
in
je
repnz
sbb
jb
into
popf
inc
mov
lods
pop
movsl
dec
int
dec
andl
sub
mov
mov
mov
fwait
inc
bound
mov
mov
dec
xchg
bound
mov
cmpsl
xor
adc
push
pop
cmc
and
xor
cltd
aam
test
out
inc
int3
std
rorb
and
mov
loope
in
bound
and
jnp
cmp
xor
and
cli
insl
xchg
inc
shll
mov
jae
dec
jo
lcall
adc
cmp
mov
pop
out
xor
push
ljmp
push
pop
jne
jnp
inc
mov
sahf
xchg
sbb
js
adc
xchg
push
ja
pop
mov
imul
scas
pop
call
sub
in
lock
hlt
cltd
shrl
testb
repz
scas
adc
testl
dec
lret
leave
cmp
jg
dec
arpl
mov
mov
sub
add
jmp
addr16
sub
mov
adc
aaa
mov
mov
fdiv
daa
cmpsl
mov
push
jge
lods
sbb
jns
outsl
cld
ja
popf
pop
adc
mov
loop
roll
je
popl
push
jae
loope
test
push
inc
jge
mov
lods
leave
dec
mov
jecxz
test
adc
test
xor
xor
mov
cs
in
push
je
addr16
sbb
pop
inc
insb
cli
aad
shl
testl
outsb
sub
sbb
add
int
insb
push
inc
daa
rcrl
cmpsl
in
mov
test
pop
cmp
inc
dec
frstor
aas
stos
or
jb
sbb
sbb
fistpl
dec
adcl
or
lret
insl
mov
sbb
jne
stos
xchg
pop
xchg
dec
inc
mov
jb
sti
mov
pop
jecxz
xor
ja
cmc
repz
mov
test
mov
mov
and
out
and
ret
inc
sub
jle
lahf
in
xchg
xorb
xchg
dec
adc
xor
or
outsb
fdivrl
faddp
push
out
xchg
inc
jb
fwait
pop
xor
xor
inc
jmp
lods
repnz
push
lahf
in
lahf
jo
xor
adc
inc
std
test
jle
or
sub
scas
je
mov
mov
sti
xchg
fwait
inc
cmp
test
lahf
adc
add
jb
adcl
fadds
cmp
adc
adc
pop
das
stc
cmp
imul
sbbb
inc
scas
push
xchg
xchg
int
jge
icebp
and
daa
data16
inc
and
mov
dec
orb
int
cmp
aas
fs
cld
jae
cmpl
shl
sti
shr
push
enter
xchg
mov
mov
js
push
imul
outsb
lret
ficoms
jno
or
cli
pop
xchg
xchg
add
enter
jle
cmp
sbb
movsb
jae
aas
add
add
xchg
aaa
mov
test
inc
ja
dec
add
loopne
sub
js
or
mov
mov
sbb
sbb
sub
test
cmc
xchg
int3
mov
and
hlt
dec
mov
jne
cltd
out
pop
shrb
pop
lods
loope
lods
imul
jns
sbb
mov
dec
jb
sub
mov
or
aad
cmp
mov
popa
push
lods
adc
xor
add
jo
mov
sti
lods
into
jo
adc
rcrl
pop
push
aam
ret
jbe
daa
jle
adc
pop
xchg
dec
cmp
xchg
sti
sub
into
daa
daa
inc
adcb
mov
pushf
repz
adc
add
pop
inc
pop
scas
shrl
mov
fmulp
push
ja
push
jg
mov
mov
jno
jmp
fsts
outsl
cmp
aaa
fldl
push
pop
xor
and
dec
xchg
or
out
fldcw
inc
pop
loop
mov
xchg
dec
dec
mov
aam
icebp
mov
mov
mov
lcall
fistpll
mov
imul
add
jmp
insl
hlt
xor
jns
jmp
enter
add
inc
sub
cs
insb
and
push
movsl
push
cmp
dec
pop
lock
shl
jge
lcall
mov
out
inc
int
mov
push
jnp
outsb
adc
aam
xchg
outsl
shlb
int
xchg
scas
sbb
cmpsb
aam
loop
or
cmp
adc
jge
dec
test
cmovle
xchg
mov
xchg
push
jne
push
mov
mov
test
or
int
test
and
mov
out
cltd
jl
sti
xor
movsl
push
inc
push
pop
and
addl
adc
mov
xlat
and
sahf
mov
xor
jae
inc
outsl
lret
les
jle
lods
jae
inc
in
mov
int
ss
pop
or
loop
enter
stos
sub
mov
sti
mov
push
push
into
mov
enter
inc
imul
mov
lods
dec
mov
xor
stos
cmp
ret
out
xchg
mov
sub
fildll
push
pop
xchg
and
movsl
sarl
inc
scas
gs
xchg
dec
mov
inc
aad
fisubl
jge
js
fdivrl
xchg
and
sub
jmp
rorb
push
cld
mov
out
mov
fwait
repnz
mov
sub
add
out
sbb
fdivr
mov
xbegin
stos
mov
inc
jno
outsl
cs
test
xchg
es
push
jge
or
fisttps
fs
mov
jmp
movsb
popa
sub
enter
mov
fists
inc
scas
jp
cmp
das
cmc
push
fs
inc
jle
test
idivl
hlt
fcmovnb
iret
push
into
jo
adc
jo
lret
scas
mov
inc
xchg
pop
iret
mov
rorl
std
adc
pop
out
push
imul
cmp
mov
popa
test
mov
mov
xchg
iret
cmp
out
out
fdivs
test
jmp
mov
and
and
data16
stos
push
add
and
movsb
sbb
leave
add
shll
xchg
cmp
lret
adc
push
cld
inc
leave
sub
push
stos
jbe
cwtl
lods
scas
add
es
aas
dec
aaa
rol
mov
stos
xor
fstl
insl
roll
push
lcall
loopne
cmpsb
leave
mov
in
xor
cmp
mov
push
pop
xchg
mov
sub
sbb
insb
ljmp
aad
sbb
ja
mov
mov
or
sub
andb
lods
mov
add
and
push
xchg
mov
mov
imul
pop
pop
cltd
push
stc
and
test
inc
dec
or
pop
notl
stos
pop
fs
sub
mov
pushf
sbb
cmp
sar
inc
lea
xchg
in
push
push
fs
pop
adc
fs
adcl
push
lret
test
adc
fdiv
pop
xchg
les
fisubs
inc
stos
xor
push
push
inc
clc
and
lcall
aaa
movsl
push
pop
push
inc
repnz
pushf
cmpsb
xchg
lods
ss
lret
sub
cltd
dec
movsl
xor
xchg
cmp
jl
inc
loop
xor
fidivs
mov
aaa
rclb
daa
xorb
nop
arpl
popa
mov
or
incl
jmp
xor
sub
inc
or
dec
xchg
outsb
js
ret
mov
cld
fdivl
dec
and
pop
mov
int3
dec
outsl
push
sub
dec
sub
jp
pop
xor
arpl
test
sbb
jb
mov
stc
jecxz
cli
xor
fsubs
jecxz
add
mov
inc
mov
ret
faddl
cmp
in
xor
cmp
mov
mov
dec
xchg
les
jns
mov
jno
push
loope
mov
rorl
les
mov
adc
xor
cmc
pusha
out
mov
cmpsb
mov
sbbl
xchg
inc
push
inc
lods
out
xlat
xchg
xor
pop
mov
dec
xor
stc
insl
into
lcall
fcmovb
outsb
xor
mov
cli
int
and
pop
sti
add
cmp
mov
fistpl
pop
ss
mov
cmpsl
push
jle
in
jne
insb
cmp
std
repz
test
cmp
std
xchg
mov
xor
insb
push
push
dec
shl
mov
mov
lds
sub
inc
test
cltd
cmp
fisubrs
fisubrs
outsb
mov
jle
or
in
dec
pop
test
nop
sbb
dec
sbb
ss
xor
mov
push
lock
sbb
cld
cmp
mov
pop
pop
mov
cmpsb
inc
push
and
notl
daa
pop
jle
bound
insb
cmpsb
sbb
cmpsl
dec
lcall
mov
mov
mov
sbb
out
int3
leave
movsb
in
scas
repz
mov
enter
pop
jnp
mov
dec
sub
inc
mov
cmpl
push
ja
mov
xchg
out
push
pop
fisubs
lods
ds
mov
mov
mov
sbb
sbb
fadds
cmpsb
or
fbstp
mov
pop
subb
jne
sbb
arpl
cmc
adc
loope
lods
pop
cld
cmp
cli
pushf
jle
jne
ficomps
dec
call
rclb
lret
imull
iret
aam
sub
dec
aaa
in
fsubs
push
pop
pop
cmp
add
iret
xor
and
nop
cmpsl
lcall
pop
out
iret
mov
or
jns
cwtl
sbb
data16
leave
sub
jo
adc
pushf
mov
mov
ret
pop
mov
mov
lret
insl
and
sub
mov
insl
rorl
mov
push
push
lret
popf
mov
add
ljmp
je
das
das
je
ss
rorl
mov
icebp
sbb
inc
xlat
jl
enter
hlt
pop
mov
jb
rorb
mov
push
andl
and
std
mov
xchg
inc
xchg
mov
jmp
pop
mov
and
mov
jbe
add
mov
adcb
inc
pop
lret
adc
add
sbb
aad
fisubl
add
mov
add
arpl
sbb
loopne
add
mov
bswap
sub
adc
adc
mov
adc
sbb
das
lahf
std
ror
loop
into
cld
ljmp
jbe
xchg
call
gs
pop
jl
cmc
negl
adc
mov
lods
roll
add
cs
xchg
rorl
dec
scas
out
cli
insb
add
sbb
adc
bound
dec
pop
hlt
loopne
enter
pop
xchg
dec
enter
enter
movsl
rolb
fcompl
inc
inc
pop
push
aaa
ljmp
mov
lea
push
fwait
and
sbb
push
cld
add
in
mov
sub
inc
and
lcall
mov
push
test
add
jbe
adc
and
dec
jno
out
test
sbb
popa
sahf
pop
cmpsl
mov
jle
fdiv
imulb
mov
cltd
xchg
ja
push
lods
inc
int
push
jae
and
cmpb
pop
inc
jae
push
cmp
divl
mov
fidivrs
cltd
sahf
pop
xor
cltd
outsl
push
aaa
bound
notl
loope
and
jae
ljmp
xor
sub
xchg
inc
loop
fidivs
imul
cmp
hlt
hlt
jns
mov
shl
mov
jecxz
orl
xchg
pop
popf
cmp
pop
cmpsl
jne
pushf
dec
sbb
pusha
emms
push
add
and
sahf
sbb
pop
movnti
imulb
out
inc
sbb
jbe
or
data16
lret
mov
jg
pop
int3
ret
aas
or
mov
pop
mov
mov
mov
sbb
push
cmp
fldcw
xchg
clc
orb
pushf
or
call
or
mov
scas
add
inc
jecxz
push
fisttps
push
ret
jns
test
mov
pop
rol
addl
iret
cmp
movsb
adc
dec
xor
mov
mov
inc
es
mov
mov
notl
xchg
push
enter
adc
xchg
cmc
or
repz
pop
sar
enter
adcb
jnp
outsb
pop
ds
insb
add
xor
sub
movsb
loope
add
jle
dec
iret
in
pop
mov
sbb
mov
negb
fstl
cld
ss
iret
insb
jmp
inc
inc
push
lret
outsl
ljmp
fiaddl
cmp
cs
stc
push
lret
daa
mov
aad
lahf
enter
sahf
sub
mov
cmp
lcall
outsb
push
nop
les
lcall
sbb
leave
jae
mov
sahf
jl
jae
imul
loop
in
add
jp
sub
addr16
iret
test
cmp
sahf
popf
out
pop
add
test
mov
cmp
jmp
mov
dec
adc
and
mov
pop
rcll
inc
mov
push
mov
jl
xchg
das
dec
js
mov
xor
adc
fdivs
or
dec
push
xorl
into
pusha
dec
or
mov
adc
and
dec
hlt
out
clc
push
xchg
outsb
icebp
fdivrs
xchg
mov
pop
mov
cmp
push
rcl
mov
out
stos
lods
xchg
pop
xlat
testb
popa
jb
nop
pop
push
mov
sbb
aaa
pop
pop
arpl
mov
lods
dec
xchg
std
ds
mov
test
das
ds
xchg
adc
xor
fsubs
add
int3
rcrl
sbb
in
push
push
jnp
mov
in
int3
fcomps
lods
add
pop
jae
xlat
cmp
pushf
xor
or
addr16
test
idivb
fwait
jecxz
mov
into
out
addr16
stos
fnstcw
sbb
mov
push
in
mov
outsb
jbe
mov
lret
stos
push
out
cmpsl
dec
bound
out
push
mov
sarl
cltd
sbb
push
dec
mov
into
addr16
jbe
imul
stc
xchg
mov
dec
insb
stos
dec
mov
sbb
xchg
sub
arpl
adc
jecxz
sbb
loope
jnp
xchg
shl
ret
leave
stc
nop
lods
mov
es
push
jbe
js
enter
adcl
aam
cltd
sti
sub
loopne
ss
pop
fisttpll
push
out
mov
jb
mov
push
outsl
imul
lds
pop
cmpsl
fcmovnu
pop
lods
and
cmp
push
loope
icebp
cwtl
fldcw
in
jb
int3
sbb
out
mov
ds
lret
sbbb
dec
imul
in
shrb
faddp
leave
mov
push
in
das
fnstcw
jbe
icebp
sti
sub
loope
loopne
pop
sahf
mov
int
lcall
sbb
sbbb
inc
sub
dec
mov
fsubrs
pop
movsl
add
dec
or
mov
mov
je
mov
push
lods
in
outsl
test
add
imul
pop
loopne
imul
mov
cwtl
add
aam
cmp
push
mov
jp
inc
ficoml
push
ljmp
or
btr
enter
fs
adc
inc
and
rclb
xchg
inc
arpl
fldl
pop
outsl
lret
leave
or
pop
and
sub
incl
and
sbb
pop
lcall
cmp
pop
fadd
in
out
lods
andl
outsl
sbb
leave
jns
ror
adc
sub
shl
ss
sbb
mov
or
inc
movsb
or
xor
fdivrl
in
xchg
mov
pop
pop
adc
add
add
loopne
jbe
test
mov
hlt
inc
pop
mov
push
popl
lret
mov
jo
std
add
or
test
inc
mov
dec
filds
insl
dec
clc
xlat
je
frstor
lcall
inc
sub
in
add
pop
dec
and
lds
imul
mov
cld
adc
sub
push
mov
xor
sub
mov
adc
sahf
sub
and
fs
nop
shll
push
add
popf
adc
rcrl
mov
into
stc
pop
rorb
push
shlb
jb
mov
dec
pop
inc
cmpsb
xor
xor
inc
mov
imul
lret
jno
jge
lock
in
push
xchg
aam
adcb
lret
lds
dec
popa
and
pop
push
dec
not
ljmp
lods
mov
fs
cli
and
mov
mov
xchg
dec
setle
lcall
cli
leave
xchg
add
push
sbb
push
cmp
adc
mov
shlb
aas
std
mov
pushf
inc
and
js
adc
pfrcpit1
in
inc
push
push
cmpsb
pop
loope
sub
dec
popf
daa
data16
pushf
sbb
test
xchg
xor
adc
test
enter
je
scas
xchg
insb
xor
data16
push
dec
cmc
jb
dec
mov
mov
mov
arpl
pusha
inc
dec
mov
xor
sbb
pop
lds
sbb
rorl
and
push
iret
and
shl
xchg
fisttpl
or
hlt
push
xor
cld
jmp
shll
ret
and
popa
xchg
in
shrl
xor
jp
or
jnp
dec
or
shll
test
pop
push
shrl
int3
rcrl
std
xor
pushf
mov
ss
xor
bound
mov
stos
sub
push
xchg
xor
test
ljmp
pop
push
pusha
cmp
in
jnp
jae
xchg
dec
push
movsl
imul
mov
fistps
std
shlb
lock
orl
push
rorb
push
mov
mov
insl
sbb
lods
xchg
sub
pop
pop
ja
cmpsb
pop
imul
cli
gs
sbbl
ljmp
ret
out
inc
xchg
inc
mov
hlt
loop
xchg
fsubs
iret
pop
data16
inc
and
sub
outsl
or
clc
stos
shrb
ljmp
jno
jle
adc
fdivp
rolb
js
push
sub
inc
jne
pop
sbb
pop
mov
adc
mov
in
test
inc
dec
or
jmp
aam
dec
fnsave
jbe
fistpll
mov
or
mov
sti
adc
neg
mov
enter
ret
mov
mov
inc
addl
aam
icebp
mov
bound
pop
flds
pop
inc
mov
lods
in
std
fsub
pushf
loope
les
xchg
andl
sbb
push
or
adc
sbb
hlt
inc
jo
lock
into
and
add
and
add
mov
push
out
lea
out
fwait
mov
pop
test
or
pop
sti
mov
and
mov
icebp
aad
inc
or
mov
loopne
sbb
inc
mov
sbb
xorb
lret
push
test
inc
and
lret
push
adc
int3
sbb
hlt
inc
dec
jecxz
and
mov
cwtl
jecxz
mov
jp
push
mov
xchg
in
and
jne
inc
sub
or
pop
fadds
inc
xor
mov
sub
sub
cmp
push
test
enter
xor
sbb
mov
ja
adc
insl
adc
add
xchg
xor
jle
push
dec
sbb
in
lds
jmp
in
mov
mov
xchg
outsl
hlt
jle
loope
icebp
rcr
push
xchg
pushf
push
jmp
sarb
shll
add
push
rorl
pop
rcrb
imul
push
add
stc
and
push
inc
or
cmp
mov
es
lret
inc
out
jge
pop
out
adc
ret
cmp
adc
xchg
dec
adc
mov
out
sbb
fistps
dec
push
imul
xchg
inc
mov
mov
out
and
or
mov
popf
xor
subl
push
ss
inc
ss
fwait
pop
je
rclb
fbld
jmp
mov
mov
fdivrs
outsl
jb
out
mov
and
mov
add
decb
aaa
les
xchg
xor
mov
sbb
es
in
imul
shl
cmp
jmp
mov
cmp
pop
dec
jbe
dec
ss
mov
jns
cltd
imul
rcll
xchg
xchg
mov
rcrl
in
mov
ljmp
sub
and
sbb
fidivs
test
sub
pushf
int3
push
xor
pop
shrl
incl
stos
leave
negl
addr16
sub
lock
mov
inc
js
xchg
xor
dec
outsb
mov
fdivl
pop
xor
xor
lret
nop
lahf
ret
fmul
pop
dec
xchg
xor
addb
sub
hlt
rcll
cmp
pop
mov
lock
cmp
pop
dec
inc
or
addr16
pop
out
ss
dec
lds
jecxz
lret
add
cmp
push
sbb
scas
jl
mov
dec
fldenv
rolb
ret
int3
push
lock
icebp
gs
movsb
pop
cmp
adc
fistl
je
ja
push
jl
pop
push
xor
arpl
in
push
mov
clc
ss
mov
mov
sahf
inc
sub
mov
popl
inc
in
mov
jmp
stos
into
or
mov
mov
aad
int3
out
and
enter
jg
sahf
or
jb
pop
pop
lods
rcl
je
bnd
jge
xorl
dec
add
frstor
sahf
repnz
popf
cmp
push
jg
arpl
push
or
dec
mov
mov
pop
mov
cs
fs
inc
in
data16
cmp
xor
push
xchg
push
aad
push
sarb
or
sti
dec
adc
mov
adc
cmp
xor
jl
cmp
push
ja
sbb
cmc
shr
ja
pushf
mov
pop
push
jge
test
sbb
lcall
pop
ret
ljmp
ficoms
dec
xchg
mov
insl
mov
aad
enter
xchg
das
sub
and
push
lds
insl
out
mov
loopne
cmc
outsl
dec
push
out
sbb
xor
cmp
adc
cli
jnp
rcrb
outsb
stc
mov
pop
arpl
dec
pop
push
shll
inc
test
nop
lods
test
bound
shlb
lods
adc
push
and
or
push
mov
sysexit
in
push
and
xor
inc
xor
or
shrb
xchg
add
divb
repz
mov
sub
adcl
mov
jmp
and
lea
mov
test
add
ret
insb
xchg
andl
xchg
xor
pop
dec
sub
lods
aas
xlat
mov
xor
repz
cld
inc
repnz
jbe
mov
pusha
inc
sar
add
mov
add
adc
test
es
aaa
in
out
mov
fs
fisttpll
int
cmp
cmpsl
cmpsl
testb
fbstp
mov
lds
xchg
pushf
test
out
cmp
orb
cmpsb
js
addr16
push
mov
in
mov
shl
inc
mov
cmp
add
outsl
mov
fcmovb
xchg
dec
and
sub
and
cmp
lcall
mov
or
inc
sti
es
mov
push
es
pop
jo
sub
cmp
imul
mov
mov
dec
push
jbe
adc
xor
outsb
ja
scas
push
dec
popa
addb
inc
icebp
xchg
pop
mov
cs
lods
add
fs
icebp
ja
dec
mov
push
int
push
lods
inc
add
sar
clc
and
andl
rcrl
dec
xchg
enter
ds
ljmp
and
jge
mov
pop
add
data16
push
add
mov
out
mov
and
mov
scas
cmp
lods
sahf
jmp
jp
or
pop
xor
cwtl
stos
push
out
mov
outsl
push
xor
sub
lret
add
incb
cmp
add
or
mov
into
xchg
int
mov
loope
sub
faddp
inc
inc
add
pop
les
add
addb
lcall
inc
fdiv
xchg
imull
scas
rcrl
adc
mov
sti
push
repnz
jmp
loope
fwait
cltd
addr16
cs
into
jb
push
xchg
mov
lret
push
les
mov
xor
mov
and
jae
jge
jmp
push
mov
pop
insb
rcrb
fcmovnu
cld
orl
popa
fiaddl
xchg
sbb
inc
pop
add
sbb
rclb
and
iret
je
pop
stc
cld
pop
repnz
mov
inc
cmp
lock
mov
push
ret
mov
aad
adc
jecxz
bound
push
popa
dec
int3
adc
jmp
sub
mov
dec
xor
pushf
inc
dec
lds
lcall
popf
sub
push
mov
mov
push
or
outsb
jno
enter
inc
jb
clc
punpckhwd
pop
mov
mov
leave
repnz
in
adc
add
xor
aaa
and
sbb
loopne
and
in
and
sbb
sarb
test
lds
cli
mov
das
pop
jnp
outsb
subb
fwait
jne
adc
mov
xorl
xor
xchg
jns
subb
cmpb
jmp
fisubrl
insb
mov
in
mov
fdivrs
ds
in
sub
fstl
inc
sbb
sbb
sbb
andl
jge
adc
dec
sub
loope,pn
pop
lock
fwait
cmpsl
lods
fdivp
xchg
mov
mov
push
sti
sub
mov
add
push
mov
ljmp
jecxz
popa
jmp
sbb
cld
mov
jb
jns
dec
and
rol
fsubs
inc
inc
leave
call
cmp
and
shr
ds
ficoml
mov
xor
pop
sbb
lods
or
xchg
fidivs
mov
mov
push
sub
jae
aam
inc
mov
sub
adc
dec
push
mov
xor
out
push
jle
add
movsb
testl
cmp
sbb
pop
cmpsl
adc
negl
shl
shlb
adc
mov
aad
xchg
add
subl
into
pop
sbb
mov
fisubrl
lret
fcoms
jmp
push
adc
sbb
insl
pushf
sbb
lahf
test
lds
leave
int3
lods
push
xorb
negb
roll
mov
sub
lcall
rcll
or
add
outsl
xor
and
aaa
clc
aam
push
add
add
das
fmul
das
in
addr16
insw
adcl
mov
aad
or
mul
mov
loop
xorl
ljmp
push
pop
icebp
in
pop
add
mov
mov
in
sahf
outsb
dec
fsubrp
sbb
adc
das
ds
loop
in
inc
aas
test
lea
cmp
in
pusha
sub
decb
es
shrb
push
xchg
icebp
enter
scas
add
jne
dec
push
cmp
lods
aam
mov
or
mov
scas
cmp
sbb
icebp
xlat
adc
shlb
out
shlb
add
arpl
test
or
sbb
std
jmp
in
mov
adc
mov
in
mov
or
js
flds
test
push
aad
pop
shlb
sbb
push
mov
sbb
mov
cmp
jb
js
cmpsb
test
mov
or
scas
and
shl
cwtd
push
rcll
cmp
movsl
sbb
pushf
mov
int3
int3
push
sbb
movsb
test
jecxz
scas
adc
dec
das
mov
pop
ret
insl
lcall
xor
mov
xchg
clts
in
add
leave
inc
stc
jl
les
aad
adc
addr16
int3
divb
xchg
jmp
fstpt
sbb
add
decl
es
popf
cmpsb
xor
insl
mov
loopne
push
pop
pop
and
and
jbe
mov
ret
inc
scas
dec
sub
or
push
inc
and
cmpsl
ret
sub
jbe
pop
jns
icebp
or
fisubs
push
mov
pop
imul
xor
mov
ljmp
mov
cmp
leave
lock
sub
pop
add
pop
add
daa
stos
jp
pop
sbb
ret
in
leave
dec
enter
lret
icebp
xor
sbb
pop
cltd
scas
sub
fsts
fwait
and
arpl
sbb
fcoms
inc
sub
lret
cmp
xor
rcl
ja
enter
hlt
std
sub
cmp
adc
in
inc
loope
es
repz
fildll
dec
test
xor
daa
scas
jae
imul
loope
or
xchg
les
jg
jecxz
je
add
pop
int
aam
jae
add
mov
jno
orb
mov
outsl
mov
xchg
sbb
test
push
shr
das
push
add
scas
mov
add
int
push
and
sbb
xchg
es
imul
mov
fs
mov
notl
rcrl
shll
scas
mov
xchg
call
cwtl
push
mov
mov
sbb
leave
lods
sbb
xchg
aaa
and
add
ret
xchg
repnz
insb
mov
mov
xor
jnp
popa
loope
mulb
xchg
sbbb
addr16
xor
scas
popf
pop
jg
cltd
pop
insl
lahf
movsb
stos
pop
sub
cmpsl
and
jecxz
sbb
jg
ss
fcmovnu
and
ds
cli
cmpb
or
daa
sbb
out
rcrl
and
push
sarb
movl
adcl
cs
push
lahf
xchg
movnti
test
popa
xchg
inc
mov
fucomi
adc
das
lahf
mov
mov
inc
lahf
aam
notl
jp
jmp
sub
or
inc
fidivrs
cmp
pop
fildll
pop
xor
pop
sbb
data16
mov
in
into
xchg
in
cmpsb
cmp
mov
xor
jg
aam
mov
inc
dec
fnstsw
push
inc
daa
out
call
sub
dec
cmpsb
mov
stc
roll
adcl
lret
pop
sbb
out
loopne
dec
je
and
xchg
adc
push
inc
pop
pusha
aaa
pop
idivl
out
mov
loope
out
xchg
leave
dec
and
add
fwait
add
sbbl
lods
mov
sub
cmp
je
fwait
adc
add
and
jb
iret
jns
sub
iret
mov
add
mov
xchg
adc
dec
frstor
out
out
jecxz
dec
fwait
subb
push
in
sub
aas
loop
mov
mov
dec
andb
loope
roll
pop
std
addr16
stos
icebp
loopne
mov
sbb
inc
ja
pop
jp
shll
pop
pop
dec
push
inc
xchg
insb
aam
shr
ds
xchg
hlt
cmp
pop
adc
jecxz
inc
sub
bound
inc
mov
jbe
aas
fidivrs
sbb
and
push
add
lods
popa
mov
xchg
gs
push
in
and
repnz
push
mov
xor
adc
inc
popf
loop
gs
cmp
adcb
ja
and
jmp
mov
ret
mov
cmp
enter
jne
js
mov
repnz
xor
loope
pop
cmpb
dec
cmpsb
repnz
inc
jo
add
sub
jb
jae
sbb
outsl
sbb
push
mov
mov
mov
cwtl
xorb
cwtl
add
scas
or
fcomp
xor
mov
push
dec
fists
xlat
call
sbb
and
sarl
inc
xchg
sub
inc
lret
jb
test
or
aas
or
ljmp
pop
subl
lcall
cmp
lcall
xchg
addr16
push
aad
inc
outsb
xchg
sub
insl
mov
es
pop
test
sbbl
cmp
dec
xchg
andb
iret
xor
or
lcall
repnz
pop
in
addr16
mov
outsb
push
ret
xor
adc
xchg
imul
in
ss
or
add
add
mov
fists
divl
popa
fmul
shrl
dec
or
inc
es
repnz
outsb
jno
loope
mov
js
dec
movsb
outsb
test
jo
scas
shll
xor
in
fwait
dec
fwait
sbb
popf
add
mov
mul
aaa
lods
xor
adc
mov
loope
mov
aas
mov
add
sti
and
fisubs
in
xor
in
add
adc
into
js
sub
jecxz
mov
leave
mov
dec
mov
add
xchg
movsl
sbb
sbb
push
push
enter
cmp
sbb
cmp
cmpsl
aas
popf
push
loope
push
leave
and
sti
ljmp
inc
jecxz
clc
jb
mov
sub
js
std
and
lock
jns
mov
push
testb
mov
sbb
mov
inc
rcrl
cmp
in
inc
jg
addb
insl
mov
mov
or
lea
shlb
mov
jecxz
scas
xchg
pop
mov
push
xchg
mov
addl
outsl
jno
inc
pop
adc
inc
push
dec
cmp
test
push
cltd
inc
add
divl
adc
test
cmp
fstl
inc
cs
inc
mov
pop
pop
add
pop
and
xchg
inc
push
out
movb
push
push
clc
pop
mov
int
pop
arpl
xchg
mov
xchg
sarl
jp
pop
inc
mov
out
jo
push
hlt
xchg
movhps
fistpll
fstpt
jns
cld
test
adc
mov
cwtl
mov
push
test
clc
sysenter
xchg
addr16
mov
mov
test
xchg
lods
fsubl
stos
dec
icebp
loope
push
in
and
cmp
gs
aad
push
imul
sarb
mov
xor
push
mov
mov
xchg
mov
pop
ja
adc
xchg
loope
xchg
subb
pop
ret
fnstenv
ss
insl
or
stc
data16
bnd
movsb
xchg
or
mov
mov
bswap
jmp
mov
jg
js
jge
ja
fsubrl
and
fmul
pop
cmp
push
test
push
add
cmp
jmp
push
push
and
loope
sub
or
jmp
mov
movsb
icebp
rorb
aaa
call
lret
and
stc
sarl
jb
pop
lahf
pop
mov
add
ror
xchg
jae
mov
aam
sbb
adc
call
arpl
adc
ret
dec
insb
inc
scas
xor
in
sub
xchg
out
xchg
mov
push
fcmovne
and
push
mov
test
hlt
pop
cmp
in
xchg
idivl
xor
and
or
xchg
sub
test
xchg
adc
sti
dec
push
cmp
jae
cmp
add
lahf
repnz
xchg
icebp
or
clc
lahf
push
push
jbe
mov
lea
inc
int
cmpsb
insl
loopne
ficoml
cmpsb
lock
mov
lods
mov
adc
add
stc
orb
in
adc
xorb
imul
jbe
loope
xchg
shr
push
lock
mov
push
sahf
jmp
cltd
pop
mov
sbb
fwait
daa
outsb
aas
sti
cmc
pop
test
loop
frstor
cmp
sbb
pushf
das
jnp
leave
test
test
xchg
mov
xchg
rcll
outsb
stos
sbb
aam
mov
adc
cmp
cli
jle
dec
pop
js
insl
mov
out
cmp
mov
sub
into
xor
push
jae
out
push
stc
xor
dec
cmp
or
rcrb
jmp
pop
cmp
push
fwait
mulb
lret
mov
and
test
cld
lcall
mov
popa
dec
fsubs
mov
and
xor
loopne
or
add
shlb
inc
call
inc
cmp
mov
cwtl
pop
imul
push
mov
jb
imull
or
adcl
mov
push
mov
testl
inc
sbb
and
mov
icebp
adc
mov
mov
cmc
push
pop
mov
and
fsts
outsl
push
and
mov
and
test
aas
out
xchg
jae
sbbl
loopne
int3
fmull
jnp
sahf
and
popa
xchg
cmpsb
je
inc
push
mov
js
test
lock
jnp
jge
lock
outsb
adc
push
movsl
in
mull
or
cmp
dec
stos
lds
mov
popa
popa
sub
mov
xor
sub
sbb
cmp
jg
jno
jecxz
stos
lahf
arpl
push
sti
adc
jo
inc
jmp
sbb
aam
cli
addb
mov
bound
sub
fildl
pop
into
push
mov
xor
dec
mov
cmp
aas
mov
push
xor
pop
add
xor
jmp
mov
aas
clc
fldenv
adc
imul
das
lods
popf
mov
aas
cltd
sub
inc
mov
fstpl
or
clc
xor
or
mov
xchg
jge
mov
mov
enter
shr
mov
inc
cmp
push
in
mov
int3
xchg
popf
test
sub
rcrb
dec
fcos
mov
dec
iret
add
and
mov
daa
adc
dec
or
and
outsl
loop
ljmp
xor
push
addr16
in
fadd
inc
fsubrl
jmp
leave
sbb
std
inc
sub
or
fcomps
int
cld
out
inc
shlb
pushf
mov
out
movsb
xchg
shr
popf
loope
mov
out
cmpsb
mov
jno
std
lcall
push
les
shlb
rcrl
xchg
xor
cltd
sti
adc
fistps
and
adc
mov
fsubrp
and
sti
nop
jbe
cmp
cmpsl
xchg
test
adc
mov
das
xor
fisubs
dec
and
outsl
in
aaa
jmp
pushf
xchg
or
rep
pop
movsb
xor
icebp
mov
repnz
mov
fdivl
adc
adc
fnstcw
lret
test
stos
or
xchg
xor
add
mov
mov
cs
andb
clc
mov
xchg
push
loop
or
int3
rorb
mov
or
jne
lods
mov
push
clc
sbb
loope
inc
jp
int3
fwait
popa
xor
rep
pop
and
and
pop
cltd
adc
mov
cli
jp
cs
out
orb
clc
cwtl
mull
sbbb
or
xchg
rcrl
cmp
vshufps
fldt
cmpsl
cmp
pop
in
dec
pop
sub
xor
and
jns
push
aam
in
mov
addr16
fidivl
lcall
push
out
std
inc
rcrl
andl
ror
cmpl
lods
lods
mov
imul
push
arpl
adc
jns
jp
inc
mov
push
add
mov
rcr
fstps
std
push
xchg
or
outsb
push
mov
or
test
jge
adcl
cmp
out
dec
xor
xchg
andl
push
xor
and
xchg
sti
scas
loopne
sbb
or
scas
sbb
sub
fstps
ss
xchg
fdivl
push
cwtl
arpl
bound
imul
std
lods
xor
inc
call
lds
outsb
pop
cwtl
ljmp
out
addl
outsl
loope
rcr
sbbb
or
pop
in
push
cwtl
or
jle
sahf
lods
repz
sub
jnp
inc
lahf
lods
or
adc
adc
jmp
or
lcall
mov
in
jmp
nop
or
lods
inc
call
cmpsl
xor
inc
ret
sbb
xchg
clc
or
rcr
in
mov
sbb
add
xor
mov
out
sahf
and
inc
cmpsb
xor
into
jl
or
ret
add
adc
xchg
aam
dec
mov
xchg
and
push
lea
cmp
xchg
movsb
mov
pop
and
mov
or
dec
addr16
cmpsb
mov
rcrb
mov
je
push
scas
sub
dec
jb
inc
test
adcb
cmp
mov
sbb
out
call
fs
outsl
inc
mov
adc
dec
push
orl
lods
push
test
pop
ljmp
mov
shrb
xorb
jo
inc
js
lea
or
daa
in
cmpsb
repnz
lock
test
icebp
and
push
aas
sub
pop
shl
pop
clc
add
in
test
inc
clc
in
mov
sbb
xor
and
sbb
icebp
insl
xor
stos
idiv
mov
loopne
mov
jns
sbbb
insl
sbb
xchg
ja
mov
sub
aaa
and
leave
lcall
lcall
push
data16
push
out
ja
pop
pop
adc
sahf
aad
cmpl
je
push
lret
test
sbb
flds
outsb
jmp
decl
aam
repz
mov
cmpsl
xchg
or
cmpl
mov
pop
loopne
push
call
stc
and
mov
scas
and
push
push
sub
add
sub
mov
mov
stos
std
jbe
test
loopne
mov
cmp
dec
imul
mov
adc
lahf
dec
leave
in
and
lods
dec
gs
sbb
push
mov
fbstp
add
sahf
cmpsl
push
xchg
xchg
pop
pop
sahf
push
movd
outsb
in
dec
push
movsl
je
inc
mov
mov
adc
ss
jns
ficomps
inc
mov
loope
repz
arpl
xchg
imul
or
pop
mov
sbb
cmp
pop
shl
out
cltd
adc
pop
push
ss
popf
sbb
pop
out
andb
inc
cld
mov
cmc
pop
jge
mov
std
sbb
mov
jbe
cmp
shlb
insb
ja
adc
push
sbb
clc
adc
mov
jno
leave
aaa
cmp
sub
ss
bswap
ret
imulb
sahf
xchg
xchg
mov
cmpsb
sub
sbb
jge
add
cmp
xor
xor
shr
rclb
pushf
sbb
negb
gs
mov
and
xor
push
jns
mov
push
andb
loope
add
and
jb
adc
shll
popf
out
scas
xchg
aam
pushaw
xor
ret
pop
push
ljmp
scas
mov
leave
jmp
jle
xchg
xor
push
stc
mov
iret
push
fiadds
pop
cs
push
stc
ret
mov
push
push
dec
pop
jmp
jecxz
adc
pop
pop
sub
xchg
les
mov
push
fadd
jmp
cmpsl
sarl
inc
sti
aaa
sbb
and
push
add
test
sub
sahf
adc
movsb
mov
mov
js
imul
gs
pop
push
mov
or
frstor
cld
daa
leave
xor
cmp
xchg
mov
int3
mov
cmp
out
mov
ja
scas
iret
call
xchg
je
mov
imul
jno
call
pop
pop
mov
xchg
push
aaa
mov
je
cmpsb
pushf
push
sub
mov
cltd
mov
mov
fisttps
and
push
lods
xchg
inc
or
inc
leave
lds
cmp
leave
lret
add
mov
repnz
call
mov
jge
ret
jbe
jbe
jne
inc
sahf
mov
imul
xchg
push
lahf
and
pusha
and
fdivp
jnp
bound
jmp
jnp
jns
es
aaa
pop
cli
repnz
fdivs
adcb
loopne
mov
in
cli
fstl
or
sub
je
imul
inc
call
mov
mov
dec
push
mov
fwait
not
jno,pt
nop
cmp
into
sub
dec
popa
rol
xchg
mov
mov
cli
xchg
or
nop
cmp
repnz
inc
and
mov
or
rcrb
inc
das
sub
imul
mov
ret
movsl
mov
ret
out
add
jae
cmp
inc
or
repnz
scas
xchg
or
rcll
mov
mov
lret
xor
sub
data16
inc
jge
jmp
popf
xchg
xchg
pop
notl
adc
cli
cmp
mov
mov
jo
and
iret
cwtl
cmc
mov
inc
xor
jnp
sahf
xor
jbe
xchg
mov
inc
sbb
lds
aad
jmp
sbb
jge
leave
mov
loope
dec
test
xor
hlt
push
imul
sti
xorb
xor
mov
jbe
dec
fistl
mov
gs
adc
lret
push
jae
pop
push
ret
fisubrl
orb
push
jbe
data16
push
mov
sbb
loope
pop
and
stos
fsubp
addr16
xor
lcall
in
enter
dec
pop
cmpsl
sbb
push
mov
pop
lcall
push
lret
dec
push
pop
dec
insb
xor
imul
sub
xchg
popa
cmp
lret
jle
xor
mov
xchg
subl
jle
loope
push
xor
xchg
xchg
jle
lea
dec
jns
stos
jmp
pop
not
aaa
xcrypt-ecb
cmpsl
int3
add
adcb
jl
xchg
xchg
mov
xchg
sbb
inc
xlat
ret
cwtl
xor
test
dec
fbld
xchg
jae
add
xchg
mov
fadds
and
lcall
mov
ss
std
mov
mov
lock
cmp
dec
lcall
or
das
sti
enter
imull
add
pop
roll
jno
push
stos
scas
hlt
movsl
sbb
jmp
xchg
outsb
leave
push
push
cmp
in
insb
shll
das
xchg
aam
call
add
push
lock
inc
std
fstpt
into
cmp
aad
fwait
mov
inc
subb
adc
mov
push
cltd
lcall
sbb
mov
shr
inc
inc
std
movsb
push
mov
int3
jns
pop
insw
push
mov
xor
cmpsb
iret
inc
stc
das
and
out
sub
dec
mov
lret
sub
xor
xor
sti
sub
push
cmc
push
sbb
mov
ret
inc
xchg
std
push
xor
mov
lcall
test
sbb
out
mov
mov
dec
xchg
js
ret
cmpsl
xor
add
cwtl
cmp
stos
imulb
mov
xchg
mov
dec
scas
pop
repnz
imul
mov
ljmp
mov
inc
cmc
andl
xchg
daa
jl
out
loope
cmp
mov
in
outsl
ljmp
lods
fdivs
mov
inc
movsl
es
std
mov
cltd
nop
jl
cli
in
pop
iret
mov
adc
rcll
dec
cld
xchg
lea
inc
mov
adc
inc
mov
inc
dec
scas
scas
scas
mov
popf
lods
sahf
cltd
inc
mov
push
adcl
adc
xchg
test
mov
pop
dec
xor
push
push
or
shr
jl
lock
fmull
pop
adc
push
add
in
adc
lcall
or
clc
sub
pushf
jns
int
out
pushf
loope
jmp
lcall
leave
decb
or
movb
test
xor
mov
mov
out
fbstp
and
rol
pop
ret
sub
sti
xchg
insl
dec
mov
xor
sub
pop
jb
ds
mov
or
dec
aad
sub
mov
fs
in
pop
les
inc
cld
adc
cmpsl
xor
xor
sti
or
and
or
xor
jne
pop
lcall
enter
sub
cmc
shlb
xchg
sub
inc
movsb
nop
insb
ret
movsl
pop
arpl
xor
push
imul
rcl
mov
mov
adc
or
test
out
xchg
ss
sbb
jb
sarl
xchg
jo
mov
rolb
jns
les
test
lods
add
lods
xor
ja
inc
ljmp
sbb
das
les
cmp
fbstp
faddl
cs
jns
icebp
les
sahf
or
push
push
dec
imul
out
fwait
xchg
test
insb
add
js
push
insb
inc
ret
out
dec
mov
fsub
sub
jecxz
ss
shll
dec
aaa
cmc
fs
add
test
push
inc
subb
adc
fisubl
into
jl
cmp
test
jmp
mov
xlat
xchg
fstps
nop
in
cmp
xor
or
idivl
scas
xor
pop
sbb
aaa
pop
jecxz
cmp
sub
call
cltd
xor
les
imul
dec
aad
pop
adc
das
sbb
inc
rclb
testl
fimull
shl
bound
xchg
push
mov
push
jmp
or
ja
call
add
cmpsb
inc
mov
and
insl
sahf
arpl
mov
fsubs
xor
imul
push
shrb
fnsave
cld
icebp
aad
sbb
mov
push
add
pop
inc
inc
mov
mov
pop
dec
add
imul
add
lods
and
mov
stos
in
ficomps
sbb
fidivs
cmp
cmp
enter
adc
mov
mov
jne
push
adc
cmp
xchg
aam
dec
dec
xor
jle
xchg
jecxz
cld
ja
sub
sub
outsb
enter
das
scas
xor
cmpsb
fmulp
mov
arpl
stos
iret
pop
shr
test
sbb
inc
dec
jge
data16
and
iret
ficompl
mov
sbb
mov
mov
sti
or
jne
mov
xchg
fs
push
pop
xor
iret
xor
sub
cld
fiadds
aam
xchg
inc
dec
jns
ret
in
jo
addb
adc
push
cltd
mov
xchg
mov
mov
outsl
jae
popf
or
xchg
cmp
push
push
mov
fcmovb
loope
sbbl
frstor
movsb
mov
sub
fimuls
xor
mov
std
and
enter
cmp
mov
jg
fldz
les
or
daa
sub
ljmp
sbb
movhps
mov
inc
push
iret
movsb
data16
xchg
xchg
and
pop
push
ret
hlt
rorb
and
jnp
ja
or
cmp
in
jns
mov
out
cs
idivl
shrl
mov
add
jb
push
cmc
sbb
dec
jns
dec
out
jge
mov
scas
gs
inc
rorb
lods
lds
adc
xchg
push
push
ja
xchg
out
stos
sbb
stos
push
jecxz
lret
pop
mov
sub
push
data16
inc
xchg
in
jge
outsl
pop
lods
rcr
xchg
lret
cmp
in
fdivrp
mov
xor
and
test
stos
popf
test
stc
xor
mov
dec
mov
jge
xor
push
dec
addr16
mov
lcall
or
aas
fs
inc
lock
in
mov
or
aad
sbb
ljmp
inc
adc
mov
pop
lea
cmpsl
or
mov
ret
lcall
adc
daa
dec
sbb
rclb
test
cmp
mov
cwtl
pop
mov
jecxz
adc
mov
push
mov
and
pop
mov
xor
shlb
jp
dec
jp
push
movsl
std
je
iret
inc
xor
test
push
xchg
xchg
adc
xchg
jg
rorl
and
repz
loope
mov
pushf
aam
fstpl
cmc
sub
les
adc
out
aaa
cmpsb
and
js
xor
jb
and
iret
lahf
test
fwait
xchg
loopne
insl
icebp
xchg
jl
xlat
sbb
or
push
scas
fwait
in
rolb
sbb
loop
je
out
hlt
push
xchg
adc
sub
test
mov
cmp
imul
gs
push
push
imul
push
xor
aam
add
xor
push
xchg
test
jns
push
xchg
sbb
insl
inc
xchg
scas
adc
sbb
xchg
in
lock
dec
inc
jnp
jns
cmp
lock
ss
dec
mov
or
jb
arpl
lock
fxch
std
sub
xorb
jecxz
stos
dec
mov
std
loopne
dec
cwtl
push
or
imul
cmpsb
aaa
scas
sti
cmp
imul
outsl
sub
sbb
mov
xchg
lahf
jge
or
les
fdivr
and
xor
mov
int3
ficompl
enter
fwait
mov
repnz
lahf
ja
cmp
in
in
mov
ljmp
addr16
mov
pushf
cmp
stc
xlat
andl
test
fstps
add
mov
gs
test
repnz
out
xor
sti
xchg
push
add
les
cwtl
push
pop
jbe
ja
ret
mov
sbb
add
jp
push
xlat
push
lods
nopl
jns
out
mov
cmp
enter
lret
fisttpl
cmpsb
mov
sbb
jnp
arpl
or
test
fadds
shrl
call
mov
mov
sarb
xchg
pop
nop
pushf
cmp
pop
int3
in
arpl
bnd
jle,pt
pop
or
out
jns
outsl
imul
inc
pop
pushl
adc
mov
popf
daa
loopne
add
mov
xchg
or
lock
dec
pusha
push
add
flds
fimuls
daa
sti
pop
fs
lret
popa
or
imul
cmp
movsl
cld
push
mov
push
sahf
stos
pushf
cltd
or
scas
adc
cmp
inc
lods
rorb
add
roll
mov
dec
cmc
or
sbbb
cmp
add
xor
xor
adc
push
repz
add
and
dec
mov
push
mov
mov
xor
jnp
ja
outsl
data16
pop
mov
xor
aad
mov
jmp
xchg
sub
mov
lods
pop
jecxz
popf
imul
xor
sti
pop
test
fildll
cmc
push
lock
mov
xor
xchg
clc
in
out
mov
jb
mov
push
pop
ljmp
xor
xlat
sub
push
into
xchg
jmp
and
mov
inc
inc
pop
scas
or
adc
jmp
xor
inc
lods
mov
test
movsl
xor
mov
dec
out
and
cmp
in
pop
pop
or
fs
cmp
add
mov
dec
mov
movsl
xor
pop
mov
add
imul
hlt
cmovp
fs
movsb
cs
dec
adcw
scas
das
in
jnp
arpl
pop
push
mov
and
loop
stos
iret
test
dec
out
nop
push
cmp
or
add
data16
insl
inc
adc
in
sub
add
lock
negb
dec
ficompl
jbe
cmp
sbb
adc
les
jns
sahf
mov
xchg
xor
jns
push
xchg
cmp
iret
decl
add
imul
sub
ficomps
xchg
neg
and
test
sub
xor
cltd
clc
loop
sarl
push
dec
xchg
mov
xor
dec
add
push
cmpsl
dec
fnsave
aas
daa
inc
push
clc
sbb
jp
add
push
mov
aaa
fwait
repnz
mov
int3
aaa
add
shll
les
loop
in
mov
call
leave
dec
push
xchg
jae
sarl
jg
stc
inc
sub
rorl
inc
arpl
popa
mov
xchg
xchg
test
push
cmp
sbb
je
push
popf
and
cmpb
jg
mov
jp
xor
in
psrld
lcall
xchg
fwait
pop
cmpsl
je
xor
inc
test
mov
add
lea
cmp
and
sbb
stos
sbb
xchg
outsl
xchg
pop
dec
sbb
sub
roll
mov
fs
mov
cmp
icebp
into
or
fmul
mov
outsb
imul
add
into
adcb
mov
xor
push
test
fmuls
and
adc
and
xor
jb
mov
push
mov
ljmp
cmp
inc
adc
out
push
mov
mov
lret
movsb
xor
mov
mov
mov
mov
in
addr16
std
das
adc
js
or
dec
jle
fcoml
fidivrl
adc
jbe
mov
mov
mov
sub
idiv
mov
cli
repz
pop
push
subb
int
jp
sbb
mov
pop
mov
push
jae
outsb
push
cmp
loop
ja
cld
xor
cli
lahf
sbb
fmull
add
clc
je
inc
jecxz
aam
pop
pop
inc
cmc
divl
sahf
or
dec
adc
inc
mov
sbb
mov
or
jle
aaa
and
adc
stos
pop
orb
sub
mov
movsl
xchg
call
rcrb
jae
je
jns
sbb
push
cld
inc
push
pop
hlt
daa
loopne
divl
jo
pop
mov
in
push
addl
lock
cli
lock
sub
xor
lahf
push
outsl
or
or
inc
mov
xlat
test
sub
dec
cmp
scas
decl
dec
pop
aaa
pop
pop
mov
jl
dec
out
test
clc
clc
aam
idivb
dec
mov
lods
cmp
nop
mov
dec
pop
aaa
outsb
cmpsl
jl
testb
lods
int
cmp
in
sub
inc
pop
and
sub
jmp
inc
xor
xchg
aam
cmp
sub
push
or
push
push
loope
jecxz
filds
daa
fs
xor
push
imul
cmp
jp
sub
stc
jb
clc
les
sbb
ffree
and
and
lret
push
xor
ret
jbe
inc
sub
and
loop
jmp
in
icebp
mov
scas
or
xchg
bound
xor
pusha
andl
push
inc
sub
sbb
jmp
mov
cmp
pop
push
push
movsl
inc
aaa
pop
pop
decb
stc
mov
mov
faddp
sub
shll
mov
imul
clc
test
xor
int3
mov
movsb
in
cmp
mov
inc
in
lods
insb
fs
inc
lret
in
pop
and
or
packuswb
fcomps
out
popa
bound
and
fdivs
loopne
stos
cmp
add
and
ljmp
mov
shrb
and
xchg
push
fwait
pop
xchg
xchg
repz
push
jns
mov
xor
out
or
mulb
or
push
cmp
arpl
into
jge
xor
cmpb
fbstp
cs
inc
push
clc
gs
jmp
mov
mov
mov
dec
int
fistpl
xchg
jg
insb
sub
dec
popa
xchg
je
mov
imul
and
cmc
push
orb
sub
nop
mov
add
sbb
inc
jne
push
fnstenv
pusha
and
sub
sbb
push
jno
lcall
dec
out
inc
int3
in
aaa
jnp
cmpsl
sub
and
xchg
jno
sub
sub
adc
adc
int
push
aas
mov
mov
or
notb
out
lret
push
cs
and
inc
cmp
mov
nop
jecxz
jae
rclb
or
lea
stc
jg
enter
insb
mov
mov
adc
mov
mov
xchg
xchg
cmp
enter
popa
mov
jmp
xlat
inc
lds
mov
cltd
or
lods
outsl
fcompl
test
lret
inc
cmp
or
xchg
jne
insb
incb
jns
pop
cmpsl
nop
dec
pop
stc
mov
aas
shrl
xorl
lcall
lret
and
daa
or
sti
out
push
popa
ja
jge
jnp
adc
push
imul
les
mov
mov
add
jbe
add
std
in
jmp
sbb
aam
and
xor
cmp
fildll
rclb
xor
or
xchg
pop
filds
xchg
fidivl
inc
mov
mov
jmp
ficoml
in
aaa
mov
mov
enter
les
or
test
sbb
and
pop
jle
repnz
sbb
repz
sbb
cli
sbb
xchg
add
adc
pop
sub
pop
je
pop
clc
adc
mov
jnp
insl
jg
popf
cmc
or
lea
jae
mov
mov
inc
mov
cltd
lods
cmp
inc
sahf
mov
adc
sbb
iret
sub
lock
sbb
repz
jno
cwtl
jb
aas
scas
in
or
mov
lahf
shll
out
repz
mov
and
add
shlb
out
cs
sub
ljmp
or
xor
movsb
or
fidivs
inc
bound
and
cli
mov
and
xchg
push
adc
mov
ret
repz
push
cs
pusha
outsb
repnz
sbb
pop
in
dec
or
push
out
rcrl
loop
shr
adc
sub
loope
in
or
shlb
pop
pop
sahf
scas
data16
jg
cmp
iret
lea
jne
or
mov
inc
hlt
jp
push
icebp
push
xchg
xorb
adc
adc
int
and
inc
dec
fnstsw
imul
lret
in
aaa
div
les
push
dec
aas
insb
repnz
inc
js
dec
push
xchg
cmpl
add
mov
cmp
int3
jae
sti
enter
aam
cmp
inc
pop
arpl
mov
fmul
xchg
mov
jb
adc
out
sub
mov
cli
or
xchg
jb
pop
cmpsl
filds
ds
push
push
sbb
jno
inc
int3
dec
adc
pop
xorb
cmp
push
jp
test
fwait
push
sbb
xchg
mov
mov
dec
jge
fwait
jns
in
stos
mov
xchg
pop
xor
xchg
xchg
aas
cmp
rolb
inc
xchg
movsb
imul
or
ret
scas
sub
std
sub
mov
std
inc
out
cmp
lcall
adc
xor
loopne
xchg
out
into
pop
mov
sbb
inc
enter
cmp
jbe
dec
push
or
sbb
inc
pop
sbb
aas
clc
inc
aam
adc
mov
jo
dec
jne
aas
mov
gs
jle
iret
adcl
test
clc
popa
into
inc
scas
cli
mov
frstor
mov
aam
pop
fidivs
in
pop
subl
imul
or
add
xlat
xor
aas
ret
mov
aad
fsts
inc
mov
lds
repz
fwait
adcb
jae
push
xchg
mov
rorb
aam
and
fisttpll
xchg
and
push
pusha
mov
rolb
cmp
rclb
mov
mov
mov
xchg
call
pmovmskb
mov
mov
pop
into
mov
sub
enter
pop
add
stos
jnp
idiv
imul
imul
pop
es
inc
mov
nop
in
shll
stos
cmc
push
sbb
popa
ffree
dec
xor
inc
shrb
mov
mov
lods
mov
sub
sub
dec
jge
sbb
sahf
dec
testb
clc
xchg
inc
nop
enter
and
lds
pop
adc
push
popa
and
and
and
dec
fsubl
mov
adcb
and
mov
das
xor
sahf
inc
jp
hlt
or
fs
inc
out
aam
rcrb
push
in
je
push
cmp
clc
inc
mov
dec
cmp
pushl
pop
idivl
clc
mov
insl
sub
mov
xchg
ss
inc
in
js
push
in
out
push
lods
push
or
stos
outsb
or
push
dec
jno
push
mov
inc
jle
and
fmull
outsl
dec
push
jg
out
inc
mov
int3
xchg
cmpsl
adc
orl
shrb
test
adc
jbe
loop
inc
inc
sub
fs
xor
lret
jns
adc
or
push
stos
pop
popf
lea
inc
jl
repnz
mov
mov
adc
es
scas
sub
jnp
js
pop
jne
test
aad
roll
cmp
lret
pop
outsl
push
push
fmull
lods
pop
sbb
daa
mov
sbb
stos
pushl
cli
int3
mov
mov
adc
leave
shrl
xlat
mov
jg
cmp
mov
pop
jecxz
jae
xor
jle
and
inc
dec
outsl
cmp
jno
dec
or
mov
sub
xor
sbb
mov
push
jg
inc
sahf
jne
inc
jle
xchg
mov
lret
leave
lods
mov
add
sarb
insb
ja
and
dec
jmp
xor
xchg
jle
pop
and
inc
shl
adc
sti
xchg
pop
adc
pop
pop
and
sub
shrl
mov
negl
aad
cmc
fcoms
or
aad
sub
pop
xlat
cmp
lcall
sti
fsubrl
pop
in
jae
mov
and
xchg
aaa
out
xchg
xchg
pusha
cli
adc
inc
sarb
xchg
mov
push
adc
jmp
pop
dec
pop
inc
jno
movl
or
in
fadd
adc
scas
dec
push
mov
pop
sbb
pop
roll
and
dec
cwtl
and
mov
dec
into
or
dec
cmpl
jnp
insl
sub
mov
rolb
or
pop
adc
sbb
push
adc
mov
std
repz
lods
dec
outsb
outsb
add
hlt
and
std
jp
ss
jle
push
jne
pop
mov
aas
mov
push
outsl
nop
adc
dec
xor
push
dec
dec
daa
fwait
int3
pop
cwtl
les
cltd
jl
sahf
cmp
scas
xchg
sbb
sahf
add
fs
and
jns
call
inc
test
adc
sub
cmp
cld
js
stos
jle
lcall
negl
adc
cmp
dec
shll
jmp
jae
dec
ret
and
arpl
add
sub
fidivrl
lods
cmp
jle
sub
cmovle
inc
repnz
inc
out
aas
stos
xor
add
pop
inc
mov
push
xor
and
mov
inc
in
adc
inc
pop
mov
mov
lods
jmp
mov
aam
popf
mov
testb
aas
or
xchg
jnp
xor
or
inc
cwtl
stos
gs
ss
xor
ret
out
inc
les
push
nop
faddl
jmp
mov
shlb
scas
cmpsl
cmp
adc
std
pop
inc
adc
in
jl
popf
out
movsl
mov
leave
xchg
mov
adc
scas
cs
jns
inc
cmp
jge
shrl
ss
in
into
enter
cmp
gs
push
xchg
xchg
sub
xchg
in
adc
pop
adc
sbb
adc
lret
cmp
sahf
aad
pop
js
arpl
dec
les
or
iret
sub
cmp
aaa
pop
pop
in
mov
rclb
std
cmpsb
mov
in
test
add
shrb
mov
gs
cmpsb
jb
jle
pop
mov
ds
les
fdivrs
rcrb
xsha1
cmpsb
mov
mov
aad
inc
lds
lock
sub
movd
adc
add
mov
enter
and
imul
sbb
iret
movaps
out
fs
push
push
sub
jo
mov
xor
movsb
bound
inc
out
inc
sub
dec
pop
movb
dec
cmpsb
push
push
pushf
int
mov
scas
cmp
adc
dec
jmp
pop
and
adc
pop
mov
ljmp
xor
ja
adc
in
ror
stos
mov
out
add
out
adc
sbb
pop
inc
mov
mov
xor
sbb
cs
faddl
mov
cmpsl
ret
addr16
or
jmp
out
es
lahf
lret
sbb
xchg
mov
push
cwtl
mov
aam
sbb
popa
shrb
mov
mov
insl
dec
adc
jb
dec
sbb
gs
xchg
clc
xchg
leave
ja
cmp
sbb
push
sub
imul
test
js
jnp
pop
add
sub
pusha
push
push
insb
ss
rcll
dec
adc
mov
mov
out
xchg
jbe
in
arpl
hlt
pop
lea
lret
popf
loope
in
xor
movsb
xor
jmp
lret
jmp
sbb
push
pop
push
test
mov
pop
sub
mov
sti
jecxz
and
push
aas
js
mov
push
pop
and
orl
mov
aaa
into
cli
movsl
pop
sbb
loope
mov
lret
xlat
scas
push
xchg
dec
out
inc
hlt
inc
aas
mov
call
notb
and
das
jecxz
xchg
enter
in
sahf
mov
inc
orb
stc
leave
jne
cmc
push
stc
rorl
andl
nop
je
insl
and
rcr
cmp
adc
lcall
pop
adc
add
cmc
jecxz
push
cmp
sbb
sbb
xor
adc
pushf
and
lods
xchg
mov
ja
push
repz
mov
out
xchg
pop
out
adc
add
cmp
jno
imul
ret
jp
bound
out
mov
sub
mov
mov
mov
mov
ficoms
sarb
fstpl
fdiv
or
jb
inc
adc
movb
or
inc
loop
addl
sub
filds
cwtl
sub
lea
gs
insl
cmc
push
int3
cmp
xor
movsb
xor
xchg
cmpsl
std
lcall
dec
es
jge
inc
ret
pushf
and
sbb
fs
add
mov
out
and
cmp
xchg
sub
cmp
cltd
xchg
cmp
testl
xor
arpl
scas
lcall
ret
into
sbb
sbb
push
test
scas
das
loopne
mov
in
cmp
xchg
ljmp
sbb
mov
mov
in
jmp
jae
lock
arpl
cltd
in
pop
out
cmc
mov
push
pop
mov
pop
adc
jmp
out
dec
fldz
lcall
jmp
fwait
sbb
repz
inc
in
xchg
aaa
sbb
repz
adc
andl
xchg
fsts
push
aam
xchg
xor
mov
in
jb
or
data16
add
insb
mov
inc
inc
sbb
ja
int
xor
mov
jge
repnz
cmp
push
mov
pushf
and
cld
xor
add
push
or
fistps
movsl
mov
bound
sub
gs
or
lret
dec
mov
fsubrl
cmp
in
push
mov
lock
jno
in
mov
ss
cld
bound
mov
xor
aaa
jnp
xchg
push
insl
in
jns
popa
in
mov
imul
ret
push
lcall
mov
aad
dec
push
cmp
push
lea
pop
clc
sbb
sbb
or
and
xchg
loope
xor
cmp
imull
enter
mov
clc
insb
sbb
jecxz
es
lock
outsl
jg
pop
ja
inc
fsubl
aam
jmp
repnz
stc
pop
xchg
out
cmpsb
jne
dec
xor
inc
aad
icebp
dec
icebp
mov
xchg
mov
mov
je
iret
in
jno
bound
out
inc
xor
pop
sub
cld
jo
test
std
repnz
insb
dec
xchg
adc
cmp
mov
insl
scas
jg
xor
jle
xor
fists
cmp
adc
push
outsl
hlt
clc
imul
xor
fwait
std
mov
in
loope
xor
insb
jle
adc
sub
dec
fsubl
and
mov
mov
pop
lret
stos
jbe
hlt
inc
jno
add
int
rol
pusha
dec
add
dec
xchg
rcrb
pop
cld
shlb
or
dec
fdivs
dec
mov
cmp
les
mov
out
mov
roll
in
dec
xchg
cli
sub
iret
bound
lock
int3
inc
jp
outsb
imul
pop
jecxz
lcall
mov
xchg
add
pop
mov
sub
pop
fwait
pop
pop
push
mov
xor
push
xchg
imul
scas
pop
cmp
cmp
inc
lods
mov
into
inc
add
cwtl
cmp
or
sti
ss
or
roll
sbb
and
mov
rorb
sub
mov
mov
xchg
sbb
xor
push
adc
sbb
sahf
imul
in
mov
pusha
inc
pop
mov
push
test
sahf
into
pop
fistl
or
mov
lods
shl
mov
mov
mov
psrad
jl
pop
stos
and
fidivs
jnp
sub
lods
jg
pop
test
loop
add
pusha
push
mov
cmp
andl
stc
mov
adc
fbstp
ret
popf
xor
lods
test
push
fcompp
jmp
push
jae
test
adc
mov
mov
inc
add
test
or
test
pushf
push
fisubrs
adc
test
xor
dec
push
popf
xchg
mov
cwtl
fcoms
adcb
hlt
xlat
cmc
mov
fadd
adc
pushf
call
mov
jno
out
fnstcw
mov
xchg
cmp
rol
pop
mov
mov
std
fidivs
mov
mov
cmp
mov
xchg
mov
and
test
pop
push
in
pop
jg
pop
push
aad
dec
orb
pop
fisubrs
xor
xor
out
std
dec
insl
inc
cmp
sarb
pop
pop
aad
outsb
mov
popf
xchg
addl
ljmp
scas
jns
jnp
out
cmpsb
dec
rcrb
popa
pop
shrb
add
push
xchg
dec
add
sbb
sub
inc
xor
add
push
sbb
lret
aam
pop
or
sbb
pop
mov
push
adc
pop
inc
mov
mov
mov
mov
mov
or
xchg
popa
or
adc
jecxz
jnp
sbbb
mov
pop
xchg
fnsave
imulb
outsl
ss
sahf
jle
testb
int3
imul
stc
es
mov
jecxz
cmpsl
fstl
fxch
push
xchg
inc
into
mov
je
movl
xor
add
les
push
push
out
xor
insl
xlat
xchg
sub
cwtl
bound
test
in
jne
cld
cs
aam
decb
scas
into
testl
jo
popf
ljmp
int
lcall
data16
lods
pop
pop
dec
jns
repz
cli
pop
in
mov
shll
or
das
fistps
cmp
std
sbb
mov
mov
std
inc
or
test
je
jno
mov
andl
sbb
out
sbbl
sub
pusha
mov
int3
jle
sub
xchg
jno
lea
inc
ljmp
leave
lock
aam
roll
inc
rcrb
mov
out
jp
mov
adc
je
or
jbe
dec
push
xchg
push
bound
push
mov
or
jbe
mov
xchg
push
imulb
stos
divb
cmp
lcall
and
stos
filds
out
stos
loopne
mov
xchg
adc
insl
jge
xor
aad
scas
and
xor
mov
les
push
in
mov
repz
cli
mov
mov
mov
and
aaa
rcl
push
add
jnp
gs
jp
fcoml
fidivrs
push
lahf
mov
xchg
mov
and
movsl
dec
adc
add
stos
notb
mov
mov
sub
fidivrl
jo
mov
es
cmpsb
and
es
adc
and
cmpsl
cwtl
cmp
mov
push
and
shl
mov
pushf
lods
jae
adc
jl
push
cmpsl
in
xchg
notb
push
xchg
xchg
loop
sub
sarb
adc
pop
cmp
test
sub
ds
in
cmpl
mov
jp
or
push
out
mov
xor
in
lods
dec
lahf
or
popf
jmp
lahf
push
insb
test
push
mov
inc
mov
xor
xchg
scas
jl
sbb
in
mov
or
or
xchg
mov
sub
stos
xor
push
dec
dec
insl
icebp
push
mov
pop
fadds
add
lds
ss
ret
call
cmpsl
into
mov
pop
fs
int3
add
outsb
popa
mov
cmc
add
lahf
addl
or
sbb
mov
lods
rcrb
xor
jecxz
and
push
sbb
cmpsb
xor
mov
pop
cmp
cltd
cmp
lods
push
orb
clc
inc
xorb
jns
sbb
mov
sub
jmp
cld
loope
clc
lret
mov
lods
fdivs
or
inc
pop
jge
dec
fisubrs
lcall
pop
mov
lret
pusha
ljmp
cmp
push
xor
mov
es
jae
sahf
movsb
xchg
adc
lret
mov
lcall
jecxz
adc
lods
jae
cmpsl
test
inc
addr16
enter
repz
push
mov
daa
and
xor
scas
mov
scas
js
cmp
arpl
mov
mov
lret
clc
mov
pusha
adc
xbegin
mov
or
inc
mov
pop
adc
add
push
cmp
stos
jmp
jl
cltd
outsl
divl
cli
ja
xchg
shrb
in
mov
jo
inc
mov
sbb
faddl
mov
cmp
jmp
lret
fwait
add
cmp
pop
xchg
clc
jae
test
xlat
sbb
enter
jle
fisttpl
andb
test
addr16
out
lock
mov
movl
jnp,pn
add
xor
mov
mov
fistl
pop
scas
pusha
adc
cmp
call
loop
mov
xor
xchg
xchg
adc
push
mov
aad
test
and
mov
dec
xorb
cltd
adcb
jns
cmp
mov
jecxz
daa
inc
arpl
inc
mov
sub
insl
mov
mov
filds
ret
mov
subb
push
mov
clts
cld
pop
push
xchg
xlat
sbb
fs
pop
hlt
add
lods
lcall
cmpsb
pop
mov
cmp
gs
out
sbb
inc
jle
sbb
inc
addr16
cwtl
mov
mov
sbb
sub
imul
scas
test
cmp
pop
scas
data16
xchg
mov
imul
and
adc
mov
in
scas
adc
and
cmp
out
mov
testb
jnp
mov
std
lahf
sbb
dec
out
inc
inc
leave
or
sar
pusha
ljmp
jecxz
lds
pop
test
outsb
outsl
cwtl
shlb
or
xor
aaa
jge
aam
sahf
pop
mov
jb
sub
push
fdivrs
jmp
sub
adc
and
mov
inc
leave
sub
xor
sub
outsl
notb
pop
hlt
or
sub
push
ret
mov
cmp
sub
jl
or
lret
sahf
jno
mov
cmp
mov
mov
sub
jecxz
or
pop
xor
insb
jle
test
mov
mov
mov
loop
cli
mov
push
addr16
jl
jbe
stos
icebp
ret
jbe
sub
mov
push
add
stos
jbe
loope
test
pop
dec
inc
mov
mov
xlat
fdivl
mov
cld
stc
push
daa
movsb
lods
push
out
mov
xchg
dec
xor
xor
or
sub
pop
sub
imul
imul
xchg
xchg
and
icebp
int3
loope
add
add
jb
lcall
call
xlat
gs
mov
cmp
pop
pop
mov
cmc
addb
dec
leave
cmp
xchg
adc
out
insb
mov
ret
das
test
loopne
int
or
nop
movsl
pop
xor
jle
ds
pop
in
xchg
jae
cmp
cltd
bound
add
aaa
adc
loop
lock
or
jg
inc
jge
popf
xchg
or
jne
cwtl
arpl
outsl
aas
int
cmc
ror
testl
addr16
in
adc
mov
and
push
lcall
add
std
push
push
or
je
fabs
sbb
mov
sub
jb
pop
out
mov
in
imul
lret
mov
cltd
mov
xchg
push
mov
mov
adc
shrl
mov
push
pop
stos
loope
push
or
and
clc
rcll
in
push
imul
ljmp
add
sysret
bound
xor
xchg
push
pusha
loop
and
int
mov
jb
sbb
lahf
cmpsl
loopne
jmp
inc
pop
pop
adc
icebp
ds
and
xor
icebp
insb
sahf
cld
adc
outsb
out
ss
or
inc
jle
iret
jecxz
inc
gs
jg
in
into
pushf
idivb
dec
xor
setbe
cmpsl
ret
mov
popa
pop
mov
xchg
test
xor
cltd
mov
test
xchg
pop
or
subl
jb
mov
mov
sub
outsl
inc
cmp
sub
sub
loope
xor
ss
mul
clc
imul
push
lcall
mov
aaa
dec
add
ret
cltd
pop
inc
inc
mov
xor
test
jbe
movsb
lahf
scas
jb
mov
ret
call
pop
lds
jns
call
inc
pop
inc
cmpsb
jecxz
inc
and
arpl
push
test
int3
out
or
daa
aas
shrb
mov
aad
lea
insl
shll
push
ret
insl
mov
xchg
xorl
xor
mov
and
loope
mov
dec
out
cmpsl
mov
in
bound
jmp
loopne
in
push
xchg
jb
pop
jae
inc
and
pop
or
cmp
pop
shlb
js
outsl
in
sub
push
pusha
xor
mov
pop
pusha
pop
dec
adc
and
aas
add
int3
jge
add
push
shlb
mov
decl
mov
mov
push
inc
jbe
lret
out
outsl
cmpl
ljmp
leave
jmp
fistpll
ja
data16
and
fistpl
sub
dec
int
and
push
push
mov
jecxz
push
xchg
popa
out
pop
sarb
push
cli
insl
fsubs
adc
pusha
cmp
leave
mov
xlat
mov
jp
inc
add
cmp
into
or
add
shll
cmp
xor
adc
pusha
dec
icebp
shll
xchg
js
das
nop
inc
pop
adc
cmp
test
mov
fists
mov
popf
push
pusha
add
std
sbb
xchg
lcall
push
inc
pop
dec
ds
outsb
test
add
mov
in
or
sbb
in
and
jge
jle
mov
daa
test
andl
jne
lahf
jmp
xorl
cld
inc
xchg
push
fcmovnb
shlb
add
mov
stos
mov
cmpb
dec
int3
push
jp
ret
xor
or
testl
icebp
add
mov
cmp
push
mov
jle
or
jae
outsb
test
mov
xlat
jno
fwait
aaa
testl
aad
pop
cmpsl
jbe
pop
lods
inc
iret
popf
int
lods
and
stc
sahf
nop
xor
ss
shrb
enter
mov
mov
cli
aas
loopne
and
add
xlat
ret
xchg
iret
pop
jp
rolb
fimull
out
adc
inc
xchg
inc
icebp
js
sub
jo
jns
and
mov
bound
inc
adc
sub
test
pop
push
jp
outsl
nop
int
mov
cmpsb
xor
mov
cmpsb
xchg
jmp
mov
fisttps
mov
mov
sub
rcrb
sub
mov
xor
xchg
mov
mov
dec
repz
cmpsl
mov
loopne
insb
fld
mov
sub
inc
jl
jns
inc
in
mov
repz
lret
dec
rclb
mov
mov
xor
ret
repz
mov
cmp
clc
or
das
notb
sbb
cmpsl
inc
sarl
xlat
inc
adc
ret
addb
popl
lcall
jmp
movsl
xlat
ds
ds
addr16
jl
xor
dec
dec
sub
push
push
dec
jge
int3
add
icebp
shlb
fldcw
dec
daa
mov
ficoml
push
add
lahf
jno
or
jmp
or
test
adc
inc
les
sbb
mov
lds
cmp
or
push
lods
lds
out
xor
xor
push
or
sub
fnstsw
div
popa
das
out
idivw
out
or
xchg
rcr
lods
add
pop
int3
pop
into
or
rcll
add
mov
inc
insl
rcll
cmc
dec
lods
mov
push
or
mov
insl
mov
mov
icebp
fnsave
daa
push
lcall
call
mov
imul
mov
xchg
sub
mov
adc
pop
je
into
mov
pusha
xor
adc
jae
inc
fstps
xor
or
push
lret
repz
lret
mov
outsb
out
aad
bnd
decb
mov
int3
pop
cmp
mov
push
pop
out
jae
ds
xchg
lods
icebp
dec
shl
xor
ja
add
bnd
psrld
out
push
jmp
js
pusha
cmp
dec
js
int
and
rorl
divl
push
movsl
adc
inc
and
pushf
jp
lcall
dec
fwait
out
loope
cmpsl
mov
add
pop
mov
mov
les
mov
gs
iret
aam
int3
pop
push
aaa
icebp
mov
pop
xorb
rclb
and
daa
jo
shr
dec
into
pop
pop
fcomps
xor
cli
mov
pop
mov
ret
movsl
jno
shlb
push
clc
add
xlat
ss
inc
mov
sub
mov
popl
int
pop
adc
jle
pop
pop
jnp
or
mulb
cltd
outsb
mov
push
inc
add
mov
push
scas
push
sub
fcompl
sub
cmp
mov
movsb
mov
or
sbb
sbb
loopne
addl
test
push
lds
mov
je
xchg
aad
das
mov
jae
sbb
aam
ss
aad
clc
add
push
adc
push
stos
cmp
out
lock
mov
loop
cmpl
push
push
outsl
inc
pop
lea
icebp
addr16
sub
jb
mov
adc
push
mov
sub
jb
iret
dec
insb
std
add
jmp
sub
xlat
fs
aas
dec
push
push
add
dec
adc
xchg
mov
push
das
cmp
xchg
movsl
cwtl
sub
out
xor
adc
adc
leave
scas
xchg
imul
inc
push
jecxz
jg
xchg
jae
dec
std
incb
inc
pusha
sub
mov
pushf
ds
pop
scas
stc
xchg
adc
and
add
add
fisubl
fistpl
enter
mov
cld
adc
lock
mov
adc
fs
imul
dec
cmpsb
out
push
mov
push
pop
ror
scas
scas
fwait
std
mov
je
dec
push
xor
xchg
xchg
lret
bound
sahf
lret
mov
iret
xlat
sub
xchg
xorl
push
jl
pop
fisubrs
repnz
and
jmp
push
mov
mov
xor
pop
test
enter
fimull
stc
aaa
jecxz
out
lret
int3
lret
notl
sti
mov
and
enter
push
inc
cmc
pop
pop
push
in
push
pop
sub
add
adc
mov
inc
add
cld
and
lret
mov
push
rorl
mov
inc
int
sub
sahf
gs
shlb
aad
sub
lret
imul
std
scas
inc
adc
repnz
repnz
daa
ljmp
mov
cmp
nop
aaa
stc
js
or
and
mov
lock
pop
cli
jae
addl
cli
aad
push
stc
mov
push
fsubrl
out
stos
in
movsb
cmp
sub
sub
fimuls
lock
or
test
dec
inc
test
xlat
dec
les
xor
cmpsl
xchg
xor
adc
fsubl
pop
stc
lret
jne
call
add
cmp
xor
or
sbb
js
je
in
fiaddl
sahf
cmc
in
or
or
xor
mov
stos
jp
or
iret
inc
cmp
mov
jl
shlb
gs
mov
xlat
mov
xchg
popf
adc
sub
call
loopne
pop
lret
outsb
inc
inc
repz
inc
lret
shr
xchg
rcl
pop
mov
stos
adc
fcmove
sub
das
mov
daa
jne
sbbl
or
inc
push
and
imul
inc
xor
mov
popa
mov
in
std
adc
cld
xchg
lods
fwait
in
cmp
xor
mov
pushf
loop
in
insl
and
call
adc
pop
lahf
mov
xchg
in
cld
mov
or
outsl
sbb
fisubl
insb
ljmp
add
inc
jno
pop
push
in
cwtl
dec
mov
sar
sbb
mov
fadd
cwtl
mov
imul
das
in
push
push
fadds
adc
nop
jge
push
fxch
call
jl
out
inc
pop
negl
pop
cwtl
dec
mov
inc
cmc
mov
ds
daa
jg
lahf
addb
push
stos
into
sbb
inc
cmp
mov
sbb
pop
iret
dec
stos
xchg
in
pop
push
test
or
cmpsb
aam
inc
sub
es
add
imul
loopne
imul
dec
jg
in
jnp
mov
cmp
pop
shlb
pop
into
dec
jae
or
cli
dec
push
mov
mov
repz
ffreep
xchg
arpl
lods
jp
repnz
pop
test
aaa
lea
sbbl
mov
xchg
jne
aas
cmp
xchg
mov
or
nop
xchg
hlt
adc
ljmp
jae
cmp
std
test
inc
adc
aad
xor
testb
add
test
aad
pop
dec
mov
cld
loop
rcr
mov
scas
xor
sti
add
out
jno
jecxz
xchg
sbbb
add
insl
ret
inc
mov
pusha
popa
sarb
pop
in
adc
gs
dec
enter
out
mov
aaa
xchg
or
loop
cmpl
cmp
test
dec
inc
sti
cmpsl
bound
cmp
sub
movsb
push
jb
mov
fisubrs
dec
cmc
cmp
je
pop
inc
cmp
mov
jno
in
sub
pusha
xor
rcll
mov
insl
and
xor
ds
sbb
inc
lahf
mov
cmpsl
cmp
mov
aam
iret
adc
push
xor
cmp
jle
bound
popa
call
pop
and
pop
movsl
into
cmp
inc
popa
adc
stos
sub
jle
mov
xchg
test
cmp
sbb
sbb
cmp
push
mov
inc
out
bnd
cmp
dec
jns
shl
mov
lret
out
cmp
aaa
stos
sub
ret
leave
scas
test
loop
and
leave
mov
jl
mov
gs
jmp
xor
mov
clc
add
inc
or
ret
inc
shll
and
dec
inc
pop
adc
cmp
push
das
mov
and
or
ds
push
int
lcall
cmp
fsubl
sub
mov
jbe
lods
cmp
fxch
movsl
adc
imulb
dec
loopne
push
stos
stc
bound
in
jp
adc
pushf
add
test
roll
pop
push
jb
or
js
jl
cmpsl
lahf
shlb
push
jbe
jge
ret
sbb
cmc
xor
lahf
mov
test
sbb
cmp
ss
shll
push
and
adc
jecxz
mov
out
addr16
or
push
push
ss
xchg
cmp
pop
mov
xchg
loop
popa
out
enter
xor
je
int3
inc
mov
jp
js
clc
in
test
cmp
push
push
fsub
mov
xor
jecxz
loope
out
popa
jecxz
cmc
jnp
repnz
and
sbb
mov
lock
icebp
jae
jp
sub
mov
sub
mov
xor
inc
pop
inc
push
mov
add
or
test
in
sbb
jo
int
push
fildl
add
push
out
pop
add
fsubs
mov
mov
sbb
cmpl
sarb
add
jle
push
rorb
dec
mov
imul
xor
cmp
int
es
and
les
jmp
xor
mov
cld
xor
movsb
mov
lcall
lods
addr16
rorb
aaa
ds
clc
ja
and
hlt
add
push
loop
pop
push
mov
adcb
add
mov
mov
out
mov
fs
adc
mov
call
cmc
and
repz
lret
mov
lods
add
in
jb
stos
mov
iret
xchg
pop
adc
outsl
cmp
sbb
mov
pop
jno
adc
sarb
pushf
leave
adc
dec
ret
sarl
sub
enter
outsl
dec
sbb
xor
imul
xor
movsb
mov
xor
mov
adc
pop
pop
mov
cld
shrb
inc
insl
ss
mov
dec
xchg
jl
fiaddl
and
lret
leave
faddl
mov
pushf
dec
sub
mov
adc
ret
insb
jno
add
jp
lods
shrl
imulb
adc
cmpsl
pop
test
dec
insl
add
xor
hlt
mov
std
pop
arpl
and
popf
pop
outsb
je
add
mov
jb
xlat
adcb
jne
sub
leave
sbb
int3
xor
cmpsb
inc
test
push
lahf
divb
xchg
shll
movsl
fsubrs
add
push
mov
aas
cld
mov
inc
add
xchg
scas
ljmp
imulb
pop
pop
push
pushf
jle
testl
sbb
xchg
mov
sub
sub
scas
lds
sbb
and
cli
inc
xor
or
orl
sbb
pushf
sub
dec
mov
imul
mov
aaa
mov
fdivrl
inc
std
push
in
pop
lods
insl
and
cmpb
pop
imul
jle
icebp
cmp
pop
jne
ret
xchg
jmp
inc
jp
jbe
and
xor
fdiv
and
jecxz
inc
mov
dec
lret
sar
jns
sbb
inc
fsts
jne
pusha
xor
fildll
dec
pop
jbe
cmp
xor
addps
xor
dec
jg
mov
sub
popf
cmp
ss
dec
mov
fwait
xchg
sbb
shlb
mov
mov
shll
mov
aam
mov
push
push
push
cmp
cmp
and
aas
test
xchg
sub
decl
mov
cmc
lret
and
stos
xor
stc
das
test
xchg
jno
std
mov
sbb
jo
push
cmp
adc
in
frstor
lods
scas
test
addr16
lods
adc
fcmovb
xchg
clc
mov
inc
fldenv
push
mov
mov
mov
sti
ljmp
orl
insl
dec
or
mov
decb
sbb
dec
sub
adc
data16
cmp
or
fidivrs
test
clc
adc
mov
jle
push
mov
movsb
shr
mov
shll
ret
and
adc
bound
gs
mov
and
ror
add
fs
or
std
and
int3
jg,pt
sub
jnp
add
scas
and
stos
std
mov
ror
dec
pop
lock
addb
jo
loope
or
sar
cli
popf
idivb
out
pushf
jae
or
mov
cmp
push
lea
pop
and
mov
mov
dec
popf
les
out
push
dec
inc
xchg
xchg
inc
lret
adc
pop
orb
mov
js
mov
movsl
les
mov
pop
inc
out
aad
jbe
arpl
jns
movsb
push
push
sbb
jae
adc
adc
movsl
hlt
pushf
or
insb
or
xchg
stc
repz
outsb
daa
nop
cmpsb
xchg
xor
jecxz
xchg
pop
test
in
push
xchg
pusha
mov
stos
mov
lcall
jno
xor
xchg
dec
mov
lret
add
sbbl
leave
jae
push
adc
in
dec
add
test
push
subl
sbb
sbb
jle
mov
push
or
jo
shrd
outsb
shrl
enter
xlat
xchg
aad
add
sahf
add
fsubrp
xor
mov
push
and
repnz
jge
out
lahf
fistpl
call
and
sbb
sub
add
push
popf
mov
loopne
retw
ljmp
dec
lret
addb
pop
add
push
cmp
xor
pop
or
daa
inc
mov
push
sbb
addb
mov
int
imul
push
jno
pop
add
pusha
not
shll
mov
icebp
pushf
dec
xchg
lea
add
lds
fcomps
sbb
lods
test
or
ja
xchg
add
test
mov
sarl
or
sbb
mov
inc
leave
dec
bound
nop
push
push
mov
sub
repnz
mov
add
mov
repnz
mov
stos
loopne
xor
xor
lret
nopl
loop
adc
loope
add
jg
popa
pop
hlt
cwtl
cli
push
arpl
test
xor
dec
outsb
fwait
js
int3
loop
imul
add
mov
pop
movsb
cmp
in
aas
cmovno
adc
add
leave
mov
sub
pop
flds
in
ret
jle
mov
dec
mov
xor
scas
in
lds
iret
sbb
dec
iret
mov
scas
push
ret
or
cli
mov
test
mov
jb
addr16
shrl
out
inc
and
sub
shll
stc
and
aaa
sbb
scas
or
xchg
mov
std
xor
mov
fninit
into
inc
cmp
subb
hlt
add
jbe
rclb
mov
pop
cli
push
xor
dec
or
mov
push
push
mov
orl
mov
push
pop
hlt
dec
daa
ret
mov
cmpsl
fimuls
cmp
cltd
stos
iret
cmp
push
outsb
jmp
and
or
scas
add
xchg
mov
xor
xchg
xchg
mov
pop
xchg
inc
fsubr
adc
cltd
jecxz
inc
mov
and
lcall
dec
xor
or
pop
loop
mov
es
out
test
pop
sbb
xchg
ret
xchg
mov
or
cld
sbb
icebp
stos
adc
xor
lcall
mov
fst
inc
fidivrl
jnp
loope
xchg
pop
sbbl
arpl
pop
hlt
xor
in
jmp
pop
pop
add
notb
repnz
cmc
icebp
arpl
or
or
test
xchg
mov
arpl
mov
aad
pop
vmulss
ja
pop
lret
rolb
out
or
lds
xchg
mov
vmovss
adc
sbb
loope
test
lret
mov
pop
cld
xor
and
and
mov
xchg
scas
testl
cs
add
loopne
cmp
cld
sub
test
bound
dec
and
cmpsb
imul
add
sahf
mov
jl
xchg
shrl
sub
add
aad
jp
jnp
ljmp
in
push
inc
sarb
mov
fistpl
sbb
pop
lahf
pushf
xor
fdivr
jle
adc
mov
push
jmp
pop
loopne
jno
xor
sbb
gs
mov
mov
inc
imul
jp
cmp
pop
jl
enter
xor
inc
or
dec
dec
jl
cmpsb
push
ret
out
adc
mov
gs
pop
and
bound
pop
sub
xchg
pushf
jo
inc
aad
sub
xchg
dec
jb
mov
jmp
dec
lods
js
sub
inc
rclb
mov
pop
loope
inc
push
mul
movsl
dec
iret
mov
ret
sub
hlt
xor
pushl
nop
outsl
push
daa
lods
je
lods
jo
sahf
clc
jae
push
icebp
lahf
push
fldt
push
dec
ret
and
mov
out
std
or
adc
ds
dec
sar
aam
inc
les
lret
dec
sbb
pop
dec
xlat
add
xor
xorb
pusha
mov
repz
test
or
adc
adc
fucomp
ss
roll
inc
mov
adc
inc
jno
cli
sti
in
jmp
adc
ret
addr16
flds
xchg
orl
sub
lret
repz
add
pop
xor
xchg
aad
push
inc
or
push
and
mov
cmc
cmp
out
pop
test
jle
js
xchg
cld
sub
stc
push
push
mov
xchg
jl
push
enter
fimull
inc
and
call
inc
sub
inc
fcmovne
out
adc
mov
int
pop
mov
pop
mov
mov
adc
aad
jg
cmpl
push
dec
hlt
aad
fsubl
mov
xchg
pop
push
or
icebp
out
sarl
or
inc
clc
jo
aas
scas
repz
push
sahf
push
lahf
cwtl
mov
into
repnz
aad
mov
cmpsl
std
sbb
push
adc
jl
dec
xchg
push
adc
out
scas
mov
or
ficompl
mov
loope
sbb
les
xor
jnp
or
dec
jl
sti
mov
or
sub
inc
or
pop
mov
fdivs
xor
leave
out
sub
aas
mov
leave
in
mov
lock
pop
add
mov
imul
dec
push
adc
jecxz
xor
mov
cld
les
mov
daa
push
mov
pop
and
decl
mov
pop
inc
jg
fcompl
push
jle
gs
nop
push
in
shrb
push
sub
sahf
adc
cmpsl
test
cmp
in
and
mov
ja
cmp
cli
or
sti
fsubrl
imul
shll
xor
rorb
and
xchg
mov
sub
and
in
insb
cmp
xor
daa
push
popa
adc
pop
outsb
out
add
inc
mov
lods
inc
icebp
push
jge
and
push
inc
mov
xchg
xor
out
push
or
lahf
jnp
bnd
dec
push
and
jo
or
push
xor
lret
movsl
cmp
xchg
pop
movsb
inc
xchg
mov
jge
xchg
ja
addb
jb
lahf
push
cmp
mov
sbb
fistpl
in
sbb
jecxz
stos
clc
mov
adc
sbb
sub
insl
mov
cmp
loop
mov
and
xchg
mov
stc
jnp
dec
cltd
push
ja
inc
xor
mov
insl
into
je
fwait
add
sbb
pop
push
adc
jecxz
aad
out
sahf
stos
pop
mov
or
fnsave
jmp
ds
mov
pop
dec
fldcw
cmp
dec
repnz
test
pusha
xor
hlt
and
das
sub
mov
mov
xchg
jne
rcll
mov
cmp
sbb
mov
mov
push
adc
cld
adc
test
addb
mov
dec
js
mov
pop
sbb
pop
stos
mov
sbbl
inc
lcall
mov
jne
mov
pusha
sbb
fildll
adc
jle
insl
scas
mov
test
mov
out
fstpl
call
sbb
inc
jne
push
imul
je
cs
int3
cmpsl
mov
mov
push
mov
out
das
in
movsl
loop
xchg
mov
retw
add
movsl
cli
imul
sarb
test
xor
pop
hlt
loopne
stos
data16
jns
sbb
out
lods
adc
iret
mov
mov
cmp
mov
and
push
mov
les
inc
pop
fstl
out
or
jl
shll
mov
xor
stos
jecxz
adc
add
and
out
cmp
lock
xchg
inc
cmp
xchg
pop
js
or
sbb
or
push
add
xor
call
adc
xor
pop
push
out
sbb
mov
outsl
daa
addl
sti
mov
mov
and
rcrl
jecxz
lret
jmp
cmp
mov
enter
inc
or
shr
fadds
lret
xor
mov
clc
pop
pushf
ret
stos
add
jnp
je
jbe
out
popf
xor
adc
inc
cmp
xchg
aaa
xor
dec
gs
mov
rcrl
or
sub
repnz
shrl
push
imul
ja
adc
xchg
adc
mov
push
xor
add
cs
pop
andl
dec
out
clc
por
lods
pop
ljmp
popf
inc
push
push
cmc
xor
mov
or
and
xchg
inc
fistpll
ljmp
fpatan
pop
xchg
pop
mov
mov
test
out
or
mov
jle
add
popa
xchg
mov
pop
fnstcw
popa
inc
pop
dec
push
clc
jns
adc
insl
mov
callw
xchg
shrb
outsb
mov
in
cmp
into
mov
or
jg
int3
dec
dec
fs
lret
cmp
test
lds
mov
fldl
loopne
sbb
repz
pushl
aad
ljmp
das
fisttpll
lea
xchg
mov
dec
ja
pop
inc
add
jbe
aaa
inc
mov
adc
mov
pop
and
push
xchg
aam
mov
or
movsl
into
in
xor
adc
mov
sbb
out
or
add
es
outsb
sahf
or
lock
xchg
loope
arpl
xchg
xchg
aam
ret
divl
roll
mov
pop
mov
in
adc
shlb
insb
sahf
sbb
in
xchg
and
mov
leave
inc
loopne
popa
bound
cmp
inc
cmc
test
pop
and
dec
aaa
or
jmp
flds
clc
lods
icebp
mov
dec
cmp
or
mov
ret
negl
rorb
xchg
ljmp
lcall
loope
imul
dec
pop
ficompl
lds
daa
jmp
cmp
sub
orb
mov
cmc
sti
cmc
outsb
adc
cmp
sti
adc
mov
out
subb
lods
movsb
movsb
es
ret
jns
lods
pop
jne
mov
pop
sbb
inc
gs
cmpsl
jle
cs
inc
xchg
in
push
imull
mov
repz
shl
dec
pop
data16
dec
aad
pop
mov
lds
jl
push
jg
icebp
insb
jle
mov
adc
pusha
sbb
push
xor
in
pop
sub
push
out
aaa
clc
push
aam
loop
push
mov
stc
jns
lods
inc
push
repnz
pop
frstor
inc
sub
ljmp
insb
int
ja
sbb
loope
pop
mov
in
ljmp
in
mov
inc
or
ficomps
mov
arpl
mov
bound
lods
lods
test
fidivs
push
sub
sub
mov
sbb
jae
insb
cmp
jne
jle
and
xor
xchg
pop
loope
rclb
jnp
inc
push
hlt
xor
adc
leave
xor
inc
push
sbb
lods
push
and
cmpsl
cmp
push
jecxz
add
clc
enter
daa
sub
or
divl
jno
sub
add
iret
sti
jp
aas
xchg
mov
adc
mul
outsb
pop
dec
addr16
movsb
push
div
and
cli
adc
ror
adcl
cmp
mov
xchg
fdivrl
mov
test
js
xchg
xchg
jno
pop
gs
mov
jbe
cld
mov
test
call
or
lds
jle
or
push
or
fdivp
test
xchg
hlt
les
fnsave
inc
jl
into
inc
in
pop
cltd
inc
xchg
cmp
ror
xor
je
adc
out
push
cmpsb
movsb
jne
xor
in
insl
jge
outsl
cmpsl
in
cmp
jbe
xchg
sbb
pop
xchg
push
pop
or
dec
enter
xlat
fsubl
jo
movsl
jbe
in
sbb
sbb
inc
in
bnd
pop
ljmp
and
in
push
clc
lret
jp
outsl
mov
imul
hlt
inc
fdivrl
push
add
addl
sti
mov
iret
cmp
mov
push
mov
stos
add
inc
cltd
and
add
fidivl
mov
loopne
lret
mov
test
lods
cmp
inc
mov
dec
icebp
cmc
cltd
xor
mov
push
xchg
inc
pusha
out
insb
and
test
mov
int
das
ja
aam
loopne
fdivrl
into
sti
adc
mov
in
not
lea
test
pop
mov
leave
js
insl
or
fsubrl
pop
orl
sub
lcall
sbb
notb
xchg
movsb
cmove
sub
sub
sahf
cmp
jno
das
pop
or
cwtl
enter
mov
pop
divb
test
adc
mov
lahf
test
xchg
dec
jl
jle
push
xorb
sarl
or
fsubrs
pop
std
iret
mov
adcb
gs
jae
and
adc
lods
lret
cmp
leave
jbe
pop
jnp
movsb
repnz
push
je
push
clc
cmp
aaa
mov
std
lret
loope
mov
push
lea
xorb
jnp
leave
shrb
sbb
cld
mov
cld
jle
jbe
jbe
cmp
jbe
adc
jp
dec
movsl
or
arpl
jb
out
movsl
outsl
sbb
push
push
sbb
add
jae
lods
idiv
test
shrb
mov
aam
or
hlt
rcl
ss
addr16
xor
icebp
sbb
sbbl
push
jmp
inc
cli
lcall
gs
adc
inc
stos
lcall
xlat
adc
mov
add
mov
icebp
int3
jmp
push
imul
lcall
sub
mov
push
sar
lea
in
rcr
shrb
or
jnp
fnsave
dec
inc
mov
push
into
test
lret
jg
push
data16
adc
lea
jle
in
add
cmp
or
xor
mov
mov
jg
inc
mov
ljmp
push
sbb
adc
cmp
cltd
test
mov
addr16
sub
mov
or
sbb
or
stos
in
lcall
push
int
or
call
std
mov
xchg
push
xchg
pop
stos
mov
test
adc
push
sub
fcoml
repz
jno
jnp
dec
jo
movsl
in
dec
mov
dec
push
and
call
out
xchg
or
adc
jo
xchg
outsb
sub
adc
jae
push
loope
sub
mov
stos
addr16
dec
jb
mov
cmp
outsl
cmp
push
xchg
jno
mov
pop
fcoml
mov
push
mov
lcall
pop
or
dec
pop
mov
sub
es
jne
stos
and
xor
cmp
in
std
sub
popa
mov
outsb
outsl
lcall
fs
iret
push
mov
aad
jge
or
dec
sbb
jb
shll
mov
repz
jmp
clc
and
cmc
push
leave
jl
dec
shr
sbb
sub
and
loope
push
cld
and
hlt
dec
mov
sub
dec
sub
or
sahf
xor
jecxz
mov
imulb
int3
bound
movsb
data16
mov
jns
or
and
push
mov
xchg
fildl
lea
arpl
stc
xchg
mov
pop
push
pop
lea
dec
notb
gs
je
aam
loop
add
mov
jecxz
rorb
lcall
jle
xor
ds
push
sub
fisttpll
push
daa
push
mov
xchg
addr16
cmp
movsl
lock
jne
mov
fldenv
mov
adc
jnp
cs
inc
mov
lock
xchg
fcoml
jg
dec
push
jo
jg
mov
shl
jb
push
cmp
leave
and
push
insl
xor
push
xchg
fisubrl
sahf
nop
xorb
inc
mov
hlt
test
inc
dec
out
inc
mov
jne
push
cmpsl
repz
in
mov
sbb
out
mov
adc
ret
mov
xchg
lds
push
sub
movsb
cmp
adc
or
mov
jno
xlat
inc
xchg
jmp
js
jo
or
iret
mov
sarl
cmc
aad
adc
movsw
push
pop
cwtl
fdivrs
mov
out
test
cmp
bnd
and
lods
jne
outsl
adc
or
jns
dec
dec
scas
repnz
fisttps
mov
add
lahf
add
aad
movsb
push
pop
mov
mov
dec
pop
popf
mov
mov
xor
test
cmp
clc
testl
pop
shrl
cmp
jp
push
mov
out
loopne
into
outsl
dec
stos
xor
inc
sti
mov
inc
xlat
sbbl
pop
xorl
jmp
insl
adc
insb
lcall
js
les
xor
cltd
fadd
adc
ret
lea
iret
xchg
sbb
xorl
pop
xchg
mov
ror
js
sub
int
cld
inc
inc
mov
sub
sbb
mov
dec
mov
add
out
jmp
jl
insl
pusha
mov
jmp
shll
into
shll
xor
mov
scas
or
imul
jo
mov
and
mov
data16
dec
stos
pop
negb
std
pop
jmp
fwait
ds
push
aaa
jno
inc
add
daa
push
adc
sbb
sub
popf
xor
daa
xor
xchg
mov
dec
cmpsb
pop
rorl
idivl
xor
insb
aam
mov
insb
out
loope
cmp
in
movsl
data16
mov
loopne
nop
insl
testl
sbb
sbb
and
fwait
pop
pop
xchg
dec
cwtl
dec
pop
loop
ds
icebp
stos
jmp
sbb
repz
cmp
lds
sbb
xor
sub
lods
outsb
xor
rorb
and
sub
ljmp
loopne
scas
adc
push
xchg
ficomps
xchg
mov
bnd
aas
sbb
or
pop
jmp
bound
mov
stos
repz
mov
sub
mov
pop
or
pop
es
andl
daa
cmp
dec
mov
xlat
clc
sarl
leave
and
adc
les
ds
clc
je
orl
nop
aad
push
lea
mov
call
jne
inc
mov
shl
and
sbb
adc
fdiv
data16
fmuls
pop
je
shlb
adc
outsb
push
lods
push
add
jo
sti
andnps
xor
clc
fmul
sbb
dec
mov
popl
mov
in
jmp
inc
adc
std
notl
jbe
fs
jb
fisubl
test
cs
repnz
push
push
mov
sbb
hlt
aas
pop
pop
ret
xchg
and
pop
sbb
mov
and
int3
or
sub
or
dec
jecxz
add
lahf
in
xor
movsb
pop
pop
pop
cmp
lea
jle
pop
dec
popa
pop
mov
stos
aas
out
xorl
lods
xor
xchg
stos
out
cmp
in
xchg
stos
test
or
cmp
loop
lahf
jle
mov
inc
mov
out
mov
faddl
test
enter
es
add
imul
insb
out
in
jmp
ds
lret
les
fisttps
xor
add
xor
adc
bound
cmpsl
sbb
pop
and
jp
daa
fbld
mov
cmp
cmp
sbb
nop
fldl
and
dec
or
lea
out
out
rcrb
loope
cmp
cmp
dec
repnz
lcall
inc
xor
add
sub
add
into
inc
xor
sub
or
jnp
dec
jno
push
lods
inc
xchg
fsubs
jo
lcall
fldt
sbb
movsl
pop
out
fists
add
add
xor
push
mov
sub
jns
repnz
lret
and
cmpsl
mov
pop
int3
xor
loope
cmpsl
cmc
shrl
lock
mov
mov
scas
stos
cmp
ret
and
das
mov
insb
lahf
dec
mov
aas
loope
cmp
pop
out
out
test
outsb
cwtl
popf
sbb
fs
mov
aas
jae
adc
or
jg
jae
sbb
or
mov
mov
dec
xchg
and
lds
insb
xorb
fldenv
out
push
cmp
test
pop
test
cwtl
test
out
sub
mov
out
loop
dec
xor
jecxz
pusha
mov
dec
cmpsb
outsb
test
pop
sub
mov
dec
pop
xchg
dec
fsubs
inc
inc
int3
cmpsl
sub
or
fistpll
xchg
sarb
push
cmp
es
inc
xor
dec
je
imul
rcrb
test
aas
rclb
daa
addb
fisttpll
adc
push
xor
jno
push
push
test
dec
test
cs
jp
xor
stc
and
sbb
mov
lret
push
sbb
lods
pop
subb
push
mov
mov
in
ljmp
fucomp
in
fnsave
bound
insl
cli
adc
adc
dec
lahf
addr16
mov
push
sub
aad
push
cmp
dec
inc
sbb
push
cmc
mov
or
repz
adc
addr16
aad
enter
es
jne
cs
push
and
enter
daa
loop
cmp
enter
adc
mov
fs
daa
mov
pop
push
pop
fldln2
shrl
push
movsb
inc
jle
inc
mov
push
lods
paddusb
outsb
dec
dec
test
sbb
mov
repz
lahf
test
mov
inc
scas
and
add
icebp
popa
fcmovne
push
aad
dec
ja
mov
lock
cmp
xchg
push
clc
push
daa
sahf
mov
jle
sub
cmpsb
out
shlb
inc
imull
xchg
pop
hlt
adc
pushf
inc
decb
lret
push
adc
mov
outsb
movsb
cwtl
jo
out
or
mov
pop
sub
mov
cs
push
and
mov
out
rcr
arpl
fstps
push
imul
mov
jns
cwtl
cli
ja
scas
adc
dec
repnz
add
mov
sbb
fisubs
cmp
fs
sti
or
pshufw
iret
outsl
xchg
fndisi(8087
xchg
mov
cmp
sbb
xchg
lret
inc
dec
push
rcrb
xchg
test
int
and
push
xchg
adc
inc
pop
xchg
lock
mov
pop
outsl
mov
or
cmp
mov
leave
iret
mov
sbb
mov
fisttps
jmp
addr16
sbb
mov
and
cmp
cmc
loope
fildl
push
cmc
sahf
sbb
dec
icebp
xor
push
movsb
jno
mov
in
hlt
mov
add
enter
cs
inc
mov
ret
sbb
dec
imull
dec
out
insb
sub
fdivl
aam
icebp
in
and
into
movsl
push
arpl
dec
fildll
cmp
popa
ss
repz
mov
js
jp
test
inc
jo
les
cwtl
sbb
adc
and
mov
xchg
loope
pop
mov
das
mov
pop
ss
dec
jle
daa
decl
sbb
pop
push
dec
mov
or
mov
loope
or
int
adc
retw
insl
pop
fimuls
mov
inc
es
punpcklwd
cmp
sub
mov
outsb
repz
adc
mov
mov
outsb
add
cmp
lcall
scas
inc
mov
lahf
fsts
stos
mov
ljmp
cmp
outsl
adc
ss
or
pop
xor
cmp
mov
cmc
xor
mov
xor
jae
mov
popf
gs
inc
lods
hlt
rcrl
scas
xor
sub
pandn
cli
lcall
ret
enter
cs
cs
scas
lahf
insl
sbb
sbb
push
xor
in
adc
jle
or
push
test
cwtl
mov
mov
rclb
and
xor
mov
repz
leave
sbb
lods
jp
outsb
mov
scas
int
fisubrs
loope
xchg
mov
sub
push
xorl
cmp
sbb
mov
ror
xor
das
repz
ret
nop
lods
pop
dec
mov
lahf
pop
push
xor
mov
or
jl
lea
jg
daa
cmp
lret
and
push
pop
mov
popl
and
sub
inc
ret
mov
or
loopne
cmp
and
fidivrs
xor
mov
sbb
dec
cwtl
add
add
cmpsl
push
das
ret
sub
lret
test
pop
mov
ds
add
and
faddl
xlat
push
int3
jle
icebp
scas
ja
ret
push
cmp
sub
fstpl
in
adc
mov
sbb
jmp
push
inc
push
inc
sbbb
ret
fcomps
cltd
jecxz
inc
daa
xor
fstl
xor
es
fistpl
cmp
andb
inc
mov
pop
jb
jae
enter
mov
pop
pushf
jmp
push
sub
ret
or
rcr
jne
rclb
push
mov
or
add
pop
mov
fidivl
fdivl
cmpsl
shll
push
pop
lcall
and
notl
pusha
int
test
mov
mov
push
shrl
xchg
nop
mov
arpl
jmp
test
pop
adc
int3
sbb
enter
or
cli
xchg
aas
mulb
cmp
or
mov
lret
aad
aas
fs
int3
cmp
and
push
mov
iret
mov
dec
dec
lds
cli
dec
les
jb
mov
or
push
sbb
into
fstpl
jnp
add
push
mov
xor
jge
pushf
push
in
sbb
jmp
aas
adc
xor
sub
mov
add
xchg
jo
push
sbb
cmp
aaa
fstpl
sbb
loope
lcall
pop
jg
cmc
push
dec
shrb
adc
notl
sbb
adc
call
aad
into
add
shll
bound
movsb
cmpsb
push
shr
mov
roll
movaps
push
out
adc
mul
cmp
lods
in
pop
jecxz
mov
push
js
adc
cmp
in
mov
fwait
xor
sbb
mov
setge
or
imul
outsb
test
push
ljmp
pop
jns
dec
add
jecxz
or
rcr
mov
xlat
inc
jae
xchg
lds
pop
push
dec
push
ret
jl
ud2
add
pop
aad
dec
xchg
out
push
mov
imul
push
cmp
jge
popf
or
sbb
repz
fs
mov
pop
sbb
and
pop
and
scas
mov
dec
or
mov
test
add
int3
mov
in
inc
je
mov
inc
pushf
pop
aaa
xchg
repz
mov
sbb
ljmp
mov
sbb
dec
adc
out
dec
ljmp
adc
pop
inc
pop
and
fldenv
xor
pop
cmp
stos
out
mov
je
in
adc
xor
mov
test
mov
pop
imul
in
jb
pop
mov
cmp
xor
jnp
pop
and
cmp
inc
sbb
push
mov
cmp
xor
xchg
add
movsb
lcall
dec
adc
add
push
es
ret
lret
and
push
cwtl
sbb
pusha
mov
scas
enter
xchg
and
out
in
test
cmp
add
cmp
rcrb
aas
les
cmp
negb
bts
push
es
stos
inc
ss
in
in
cmp
push
hlt
sahf
jbe
jg
lret
push
lahf
idivb
dec
dec
mov
stos
xchg
cmp
xchg
inc
test
pop
sub
stos
jmp
test
outsb
xor
cmp
mov
test
aas
outsb
jg
lock
xor
mov
and
inc
dec
pop
xchg
js
pusha
bound
push
outsl
in
sbb
ljmp
les
les
add
push
mov
ficoms
ret
inc
push
sub
lret
das
push
cmpsl
dec
sarl
mov
lock
icebp
mov
adc
dec
push
add
inc
pop
in
fldt
inc
dec
dec
inc
pop
mov
dec
pop
dec
bound
rcrl
sbb
add
xchg
adc
cmpsb
push
sbb
and
pop
in
dec
sahf
or
xchg
mov
sbb
imul
inc
sbb
pusha
jmp
stos
scas
lds
cmp
inc
aaa
xchg
ror
rorb
jno
mov
push
lods
pavgb
mov
leave
jno
dec
insl
pushf
xchg
sbb
push
sub
mov
push
outsl
inc
je
jp
jle
stc
rcl
ret
clc
jge
push
fwait
outsl
in
stos
jae
mov
push
std
loope
repnz
adc
in
leave
call
xor
mov
jg
call
lcall
in
call
mov
data16
mov
roll
dec
int3
xchg
xchg
jl
and
sbb
mov
sub
mov
push
sarb
pop
in
subps
fstl
mov
mov
and
pop
shlb
mov
mov
or
stos
jnp
xor
jl
pop
mov
cli
mov
xor
add
movsb
and
adc
aaa
sub
data16
or
insb
xlat
data16
sahf
xchg
dec
je
adc
fldl
jecxz
push
or
xchg
or
sar
imul
mov
and
enter
pop
cltd
cmp
adc
jmp
xchg
mov
push
jbe
cs
pop
xor
sbb
xchg
xchg
mov
and
add
or
ds
mov
aaa
or
adc
pop
jp
fmuls
lahf
pop
mov
stos
mov
push
sbb
sbb
jae
movsl
mov
repnz
xorb
je
ljmp
leave
pop
and
xlat
pop
lret
xor
cmpsb
and
xchg
int
cmp
cmpsb
test
call
das
cwtl
adc
mov
jmp
mov
xchg
pop
adc
incb
and
xor
je
ljmp
icebp
jns
sbbl
inc
fisubrl
or
push
mov
stc
xchg
xchg
xor
mov
loope
xlat
mov
test
and
xchg
fnstsw
push
cmp
mov
push
dec
das
push
ds
pop
in
in
lcall
mov
ja
nop
mov
pop
add
loop
pusha
mov
push
faddl
out
lock
mov
or
out
aad
cmc
jno
pop
lods
lcall
jp
cmp
aas
push
popa
dec
sub
fsub
xchg
out
imul
mov
das
cli
es
inc
mov
mov
sub
mov
jo
das
outsl
xor
popa
jnp
mov
mov
push
fstpl
mov
xchg
icebp
inc
cltd
xchg
lods
loope
mov
aad
in
scas
ret
cmp
push
enter
and
jbe
adc
add
lret
pop
and
movsl
pop
mov
add
push
push
inc
sub
add
pop
fstpl
xor
outsb
outsl
push
push
nop
out
mov
mov
cmc
sbb
lahf
pop
iret
inc
xchg
jbe
push
jg
inc
add
sbb
sbb
pop
push
add
adc
add
xor
mov
testl
ret
mov
pop
cmp
fs
mov
stos
push
inc
jecxz
stos
jbe
lahf
jno
pop
filds
inc
jnp
into
ficomps
outsb
jge
cmpsl
xchg
dec
inc
out
push
xor
inc
inc
rcrb
inc
mov
pop
orl
lcall
jbe
mov
imul
mov
pop
bswap
mov
xor
in
in
inc
daa
int3
cmp
icebp
aam
aam
inc
inc
xor
push
test
lret
xlat
mov
jno
ficomps
mov
xlat
pop
or
into
cs
add
repnz
cltd
and
pop
or
repnz
jnp
loop
sarb
add
test
mov
pop
int
mov
fiadds
mov
cli
jp
add
cmp
xor
pop
popa
dec
into
scas
adc
push
sub
pop
paddw
fmulp
aas
in
dec
flds
mov
lea
mov
nop
call
rorl
pop
fildll
pop
comiss
loope
imul
aas
ljmp
mov
add
dec
mov
imul
movsb
iret
andl
push
in
jbe
xchg
or
sub
fsubrl
fisttps
dec
in
mov
jge
sarb
inc
xor
mov
pushf
push
test
jle
in
cmp
std
xor
sub
mov
add
ret
adc
sub
push
cmp
outsl
add
cmc
rcrl
cmp
inc
js
xchg
and
fsts
or
movb
fsubrs
scas
notl
xchg
daa
push
xor
add
or
jne
cmpsl
dec
xchg
jp
push
icebp
ljmp
mov
jmp
daa
cwtl
movw
das
push
xor
sarb
out
cld
cwtl
mov
jl
lea
push
xchg
scas
sub
sqrtps
mov
inc
xor
test
hlt
movsb
or
jl
mov
pop
and
lret
add
sbb
adc
and
repz
mov
push
das
pop
mov
sbb
test
or
test
mov
test
stc
arpl
idivb
sahf
cmc
jb
mov
cmp
les
push
arpl
mov
inc
xchg
ret
xlat
daa
subl
and
test
jb
push
jp
sub
add
xchg
scas
adc
popf
outsb
loop
div
jmp
fistl
sbb
imul
cmpsl
sbb
cli
dec
lock
pop
into
pop
sub
jmp
dec
in
mov
popa
cli
clc
mov
xor
sbb
mov
xor
negl
lcall
popa
jl
mov
sti
xor
jno
adc
imul
sbb
or
sbb
aas
jmp
push
jo
and
mov
out
xor
add
and
mov
aas
loop
iret
dec
push
push
loopne
or
xor
stos
add
lcall
iret
push
jp
cmp
cmp
push
add
cmpxchg
xchg
hlt
xor
and
xor
mov
jle
fildll
sbb
pop
push
add
pop
sub
fcmovne
popa
sbb
lds
mov
dec
and
xor
mov
push
mov
xchg
leave
push
mov
and
in
sub
mov
inc
js
jns
shll
adc
inc
jne
pop
add
jl
lahf
enter
push
mov
pop
push
fimull
ja
pop
or
movsl
aaa
inc
jl
popa
in
xchg
hlt
lods
mov
roll
test
mov
imul
pop
cmpsl
mov
dec
sbb
mov
sub
icebp
adc
push
sbb
xchg
sahf
bound
cmpsb
lock
sub
mov
icebp
movsb
rcrb
test
sbb
pop
nop
cmp
mov
cltd
or
leave
js
rclb
leave
sub
add
add
and
fiadds
loop
mov
jle
and
frstor
and
inc
into
pop
sti
mov
ret
push
pop
xchg
mov
mov
mov
jnp
mov
sub
and
sub
xchg
jnp
sbb
dec
js
imul
sbb
pop
loopne
sti
pusha
mov
xchg
push
sahf
jl
mov
fs
lds
bound
shl
push
or
lds
shlb
sub
adc
loope
xchg
stos
or
adc
xor
daa
add
lcall
jno
mov
xchg
ret
adc
push
dec
jo
push
cli
mov
imul
popa
dec
push
or
hlt
out
lret
mov
scas
pusha
inc
lods
and
mov
imul
add
fimull
andb
sbb
and
xchg
ret
insl
add
jl
imul
sub
xor
pop
mov
mov
cltd
sbb
mov
jp
push
cmp
push
out
lods
dec
jnp
js
add
push
fsubrl
fcomps
popf
jmp
inc
out
out
fldcw
adc
aaa
push
int3
fidivs
cmc
outsb
emms
subb
movsl
pop
jmp
inc
cmpl
sarb
push
xchg
push
insl
rclb
shlb
adc
das
sahf
out
out
jle
cmpsl
jnp
sub
mov
sbb
or
cmp
je
jbe
roll
std
int
dec
cmpsb
jle
stc
cmp
adc
leave
cmpsl
pop
ds
test
ret
xor
orl
testl
push
xchg
xlat
push
in
insl
pop
aaa
push
mov
mov
notb
xor
daa
pop
sub
dec
push
xchg
pop
dec
lds
push
xchg
repnz
add
adc
fiaddl
mov
ss
fs
lock
adc
out
or
pop
es
mov
mov
scas
fidivrl
mov
je
orl
imul
rolb
mov
dec
mov
adc
out
out
loop
sbbb
dec
jae
jo
adc
jo
lock
xchg
jge
cmp
sub
jmp
pop
mov
jmp
in
dec
push
mov
gs
xlat
mov
mov
jp
mul
jb
fstpl
lds
adc
lods
and
mov
xchg
imul
loop
add
sbb
scas
ljmp
pop
ret
and
aaa
push
cmp
adc
add
jg
jmp
mov
sub
clc
pop
cmp
movsl
jmp
xor
cmp
xchg
iret
add
shr
aam
iret
lcall
ror
sbb
cmp
inc
xor
dec
aas
push
sar
inc
add
sub
push
test
xchg
mov
insl
mov
pop
mov
adc
jge
popf
adc
xorb
out
lret
inc
int
ficomps
data16
cmc
leave
pop
divb
mov
and
push
sub
cltd
jmp
popf
jne
mov
and
pop
ffreep
mov
xlat
in
lock
out
mov
test
in
sbb
test
inc
repz
push
stos
stc
or
aas
jbe
outsl
and
movsb
sahf
cwtl
loope
jne
lock
cs
xchg
cmpl
lods
mov
xchg
or
pop
enter
cwtl
jp
xchg
sahf
gs
lcall
jb
xor
rcrl
xchg
and
and
xor
out
test
in
pop
pop
mov
int
lahf
loope
out
mov
push
hlt
mov
or
icebp
add
sar
out
push
add
ljmp
mov
cmp
cwtl
mov
lods
xorb
lea
inc
adc
aas
aaa
lahf
xor
test
aas
mov
movsl
sti
xorb
push
push
dec
mov
outsl
mov
mov
push
pop
add
or
mov
fdiv
icebp
add
shlb
mov
fmull
sbb
loope
mov
cwtl
xchg
psubq
movsb
cs
xchg
dec
jg
dec
repnz
stos
je
cli
pop
jecxz
cwtl
hlt
rcll
fadds
adc
sbb
xor
fwait
es
jp
pushf
and
test
and
lock
sub
test
cwtl
push
add
int
mov
adc
icebp
xor
test
pop
mov
jecxz
enter
mov
or
rol
mov
inc
or
ret
cmc
in
call
pop
add
inc
lahf
loop
nop
jae
fwait
imul
xchg
popf
lock
mov
cmp
and
push
repz
pop
outsb
pop
out
and
insb
push
jae
test
pop
lock
insl
dec
pop
xchg
pop
out
test
mov
xchg
mov
cmp
lahf
add
mov
lret
scas
in
stos
repz
and
insl
aas
mov
or
andb
mov
mov
or
fisttps
mov
je
loopne
dec
subl
sub
jo
cmc
xlat
pop
sti
xchg
movsb
and
lret
out
cltd
inc
mov
pop
sarb
push
pop
bound
or
es
xchg
ds
data16
test
inc
mov
scas
fldenv
push
xlat
in
testb
cmpl
aad
iret
ja,pn
sarl
dec
mov
stos
cltd
leave
sub
inc
movmskps
dec
gs
pop
jp
push
out
call
fwait
inc
notl
and
daa
insb
add
jno
add
mov
jno
jmp
ret
inc
mov
pop
rcrb
or
push
lea
inc
or
mov
add
inc
push
push
out
pop
adc
sbb
jae
cwtl
jbe
push
into
dec
je
inc
imul
sub
dec
cld
mov
mov
inc
mov
adc
mov
mov
jmp
adc
inc
cwtl
adc
stos
stc
sarb
enter
jne
dec
cld
mov
ret
add
cld
xchg
xchg
jne
mov
jnp
test
inc
mov
rolb
daa
add
dec
repz
cld
mov
inc
test
hlt
out
pusha
adcb
adc
jb
mov
add
dec
lret
xchg
inc
xor
push
test
mov
cwtl
push
and
mov
xchg
cmc
cld
andl
xchg
jecxz
push
dec
dec
mull
inc
es
lcall
mov
insb
mov
fs
add
lock
imul
or
mov
push
inc
out
das
cmp
inc
adc
and
jbe
js
mov
or
jnp
imul
xchg
mov
mov
pushf
dec
mov
stos
movsl
jbe
outsb
jmp
lods
pop
adc
fdivrs
cmpsl
inc
mov
cmpsl
xchg
and
fildll
sarl
dec
xchg
sbb
dec
xlat
loope
bound
mov
jne
pop
jmp
cmp
lods
jno
mov
push
inc
loope
in
popf
push
mov
cld
sti
fbstp
jge
push
xchg
xor
sbb
pop
xchg
test
pop
push
into
add
xor
jbe
pop
mov
push
mov
mov
mov
pop
push
cs
test
pop
xor
idivl
inc
mov
xchg
sub
add
mov
popf
in
add
cmpsl
xchg
xchg
test
xchg
sbb
dec
pop
push
rep
cs
icebp
call
and
outsl
shrl
rcl
ss
out
out
addr16
xor
or
fs
std
es
fcoml
add
mov
in
gs
adc
push
pushf
loopne
dec
or
dec
push
je
push
lods
cmpb
or
je
inc
dec
xchg
cltd
pop
or
inc
sub
mov
pop
dec
aaa
daa
dec
movsl
in
and
mov
mov
lods
add
in
xchg
leave
lcall
stc
xchg
dec
or
das
fcom
imul
dec
mov
pop
sahf
mov
rolb
aad
push
rolb
loopne
stc
mov
cli
cli
mov
dec
outsb
test
xchg
mov
gs
push
cwtl
js
pop
mov
pop
xor
inc
pop
mov
js
push
out
and
or
jbe
insb
lahf
test
cltd
jae
and
int3
data16
loopne
fidivrl
push
pop
or
inc
sub
cmp
pop
fstpl
dec
xchg
lret
aaa
fwait
cmp
lods
xchg
jo
mov
fidivrs
sub
jns
adc
sbb
push
mov
jle
lock
cmp
inc
mov
or
subl
jg
pusha
jmp
add
call
jns
test
lods
mov
clc
push
lods
push
shl
les
and
sub
mov
add
adc
into
and
adc
jl
push
outsl
xchg
notb
push
std
adc
or
fstpt
lds
xchg
frstor
mov
lods
jmp
adc
jb
cmpsb
repz
pop
push
jg
in
test
or
sahf
out
in
xor
arpl
aaa
fnstenv
decl
scas
and
mov
xor
mov
pop
scas
pop
test
pop
push
xor
mov
dec
out
ficoms
call
notl
in
daa
cmpsb
cmpb
cld
mov
cmpl
in
mov
rolb
shll
test
mov
or
mov
push
mov
pop
je
adc
dec
jmp
mov
pop
inc
in
es
jo
mov
sub
ljmp
push
stc
cmp
lret
sub
jmp
adc
dec
and
xchg
xor
lods
push
loop
cmp
je
js
into
and
out
ss
loopne
and
loope
pop
insl
jb
icebp
insl
fiaddl
daa
push
imul
adc
xor
sbbl
sbb
pop
sbb
movsl
jb
mov
pop
push
cmp
pop
mov
lock
frstor
loopne
mov
mov
sub
test
xor
push
mov
das
pop
ret
dec
adc
adc
push
inc
cmp
dec
loopne
xchg
aad
mov
sti
loop
sbb
clc
xchg
push
scas
cltd
daa
dec
mov
mov
sub
xor
insb
bound
les
sub
mov
sub
das
inc
test
or
inc
or
sub
lods
cmp
adc
outsb
inc
and
push
xchg
stos
dec
in
cmc
sahf
add
ds
out
call
sub
arpl
hlt
mov
std
ficompl
and
test
dec
insl
jg
xor
xor
lahf
mov
icebp
leave
add
fs
mov
ret
test
xchg
inc
sbb
push
sub
loopne
sub
jle
call
pusha
pop
xlat
mov
jl
test
cwtl
lock
repnz
daa
mov
push
adcb
outsl
sbb
jne
scas
xor
push
mov
cltd
push
cli
pop
push
mov
jg
stc
lcall
push
movsb
inc
jae
inc
das
and
icebp
aad
push
scas
xor
out
jl
or
add
jg
std
pop
pop
push
leave
sub
sub
sbb
xor
aam
sbb
ss
jo
neg
lret
inc
dec
pushf
add
stos
aaa
loopne
mov
jle
fstpl
mov
hlt
mull
adc
pop
dec
dec
or
lret
push
mov
cmpb
leave
mov
lcall
sarb
xlat
ret
lods
int3
sbb
pop
dec
push
xchg
mov
mov
mov
xchg
mov
fcmovu
popa
daa
out
fnstenv
sarl
lss
jb
mov
ret
mov
daa
ds
ds
repnz
cld
push
sbb
fcmove
xlat
adc
out
push
add
and
pop
ds
xor
push
adc
push
xchg
dec
mov
adc
cltd
adc
add
dec
push
mov
ds
gs
fbstp
cltd
std
addr16
mov
xchg
pop
sti
fsub
test
and
lock
loop
jmp
add
pop
jno
push
and
popa
and
icebp
xchg
inc
mov
pop
push
fsts
pop
push
aaa
lds
popf
mov
fwait
or
xorb
in
or
sti
test
mov
shlb
int3
sub
dec
mov
mov
out
pop
inc
clc
inc
pusha
aam
push
push
fisubs
or
cmp
mov
cmp
mov
inc
test
xchg
stc
nop
dec
pop
imull
mov
jnp,pn
jp
jbe
gs
int3
iret
add
pop
fidivrl
and
lcall
xor
addr16
lret
and
fildl
stc
leave
cmp
push
in
jg
outsl
xchg
fbld
gs
outsb
xor
and
push
cpuid
dec
out
xchg
es
lock
inc
adc
lods
aas
mov
push
mov
jmpw
rclb
outsb
xor
mov
push
pop
jl
stos
daa
cli
xor
and
rolb
xchg
cmpsb
imull
pop
pop
test
adc
jecxz
sbb
jmp
ret
ljmp
fcoms
out
stos
lcall
ljmp
out
lahf
lock
inc
je
out
mov
mov
dec
leave
sarl
pop
mov
out
push
mov
adc
sub
sbb
jb
dec
mov
loopne
outsb
inc
leave
mov
js
test
inc
cmpsb
jb
xor
mov
fsub
jbe
cmpsb
mov
jp
sub
fucom
jl
mov
sub
push
mov
inc
and
mov
dec
scas
dec
add
mov
and
popa
pushf
std
in
push
cmp
xor
pop
adc
mov
pop
cld
mov
dec
pop
lock
mov
into
pop
and
loopne
cmp
fbld
in
and
cmp
mov
in
mull
pop
gs
pop
imul
sub
xor
jle
scas
push
and
jnp
xor
rorb
mov
sbb
test
jno
adc
fimuls
int
pop
and
js
jecxz
stos
test
mov
cld
cmc
xchg
cmp
mov
xchg
xor
mov
lret
inc
lret
rolb
outsl
fstp
jnp
lods
sbb
ffree
add
jmp
test
and
rclb
sti
aas
jmp
ss
lds
or
adc
push
es
stc
jnp
xor
sub
xchg
repnz
pushf
cmc
jg
das
divb
decb
cwtl
mov
scas
lcall
lret
mov
lods
mov
mov
push
popf
mov
pop
mov
pop
insl
fwait
ds
andl
mov
add
push
test
lds
add
jl
jl,pn
push
stos
stc
pusha
clc
jo
ss
jp
mov
aaa
mov
es
jp
scas
js
mov
dec
call
pop
dec
mov
mov
xor
ja
test
in
pop
push
lods
cmp
loop
dec
outsl
mov
sarl
movsl
mov
dec
sub
xor
mov
stc
inc
mov
push
add
push
add
mov
scas
xchg
hlt
iret
int3
sub
cmp
jle
or
push
test
push
xchg
lock
sbb
fwait
les
adc
xor
adc
out
inc
outsl
insl
cwtl
and
pop
scas
arpl
negl
mov
divb
mov
add
xchg
sbb
cs
jp
jno
push
pop
pop
stos
ret
aad
lods
daa
loop
dec
gs
pop
dec
aam
cmpsl
cli
enter
sub
stc
sub
cs
cmp
pop
ja
je
scas
or
rcrl
aad
cmpsb
cld
or
dec
mov
mov
jb
push
or
lods
icebp
es
scas
add
jmp
roll
int3
or
cli
mov
das
std
adc
out
mov
and
inc
sbbb
mov
pop
les
adc
fs
pushf
mov
jb
sbb
clc
ds
scas
pop
dec
pop
idivb
shlb
es
int3
int
lods
dec
adc
cli
inc
jnp
dec
mov
push
inc
dec
stos
inc
aas
pushl
sub
outsl
push
push
xchg
cld
data16
adc
mov
jbe
xor
adc
mov
xor
inc
arpl
leave
fisubrs
stos
inc
enter
push
pop
mov
adc
stc
faddl
mov
inc
and
roll
pusha
xchg
dec
jl
cld
push
add
dec
and
sub
in
sbb
in
mov
fimuls
scas
cmp
mov
call
cmp
adc
lods
das
aad
xchg
cmpb
jmp
loop
dec
mov
mov
mov
movsl
jle,pn
repnz
mulb
fisubs
mov
scas
or
push
ljmp
dec
ljmp
jno
dec
xchg
shll
and
shrb
xchg
fimull
push
fsubrs
xlat
mov
mov
stos
push
aam
fnstsw
scas
mov
xlat
xchg
mov
inc
mov
push
jecxz
mov
aaa
and
dec
lods
ds
sbb
push
out
loop
mov
or
sub
ja
rcr
sub
popa
cld
pop
cmp
ret
sbb
adc
inc
mov
insb
push
lcall
cmp
mov
stos
rorb
cli
jge
xor
push
popa
cs
push
into
pop
movsl
push
mov
pop
adc
push
dec
jg
cmp
or
leave
insb
andb
jae
ja
or
int
ret
jb
loopne
fstps
das
mov
imul
daa
stos
scas
xor
pop
imul
test
dec
dec
ret
ljmp
pop
shll
stos
orb
push
in
lods
stos
and
addl
cmp
xchg
stc
mov
adc
mov
dec
push
stos
call
repz
mov
sub
pop
jno
mov
sub
and
push
jmp
cmpsl
daa
ret
pop
xchg
in
add
inc
testb
scas
movsb
push
or
mov
cld
sub
xchg
jl
dec
clc
das
and
sub
jl
add
les
imul
arpl
mov
jno
leave
dec
fistpl
xor
sbbl
ss
mov
mov
sbb
aas
push
call
sub
hlt
icebp
adc
or
cltd
imul
mov
clc
lods
mov
mov
and
adc
js
mov
cld
fidivrl
sbb
mov
in
xlat
sbb
fildll
test
xor
mov
repnz
jmp
loop
jne
cltd
movsb
xor
es
imul
imul
pop
pop
jbe
mov
sahf
fcom
and
ret
in
jno
mov
pop
mov
std
inc
mov
das
jecxz
sub
inc
or
push
or
pop
and
mov
inc
sbb
hlt
sub
dec
inc
jecxz
adcb
xor
aam
cld
fwait
xchg
outsl
les
dec
jp,pn
inc
mov
add
imul
call
int3
and
and
inc
iret
mov
adc
dec
ja
lods
xor
sahf
orl
and
xchg
shlb
mov
jns
and
je
rorb
mov
and
gs
insl
or
lcall
sbb
xchg
mov
rcrb
adc
xor
enter
cmpb
mov
fldl
cmc
cli
dec
cmp
xchg
shl
cmp
fsts
cmpsb
mov
clc
test
push
push
cmp
adc
fcomps
roll
jmp
mov
xchg
mov
pop
daa
dec
arpl
icebp
dec
scas
or
xchg
xor
out
rcrb
inc
xor
flds
aas
push
adc
sub
dec
mov
loopne
and
bound
dec
push
xor
sub
lahf
xchg
cmp
push
sub
mov
jge,pt
jmp
pop
mov
das
and
sub
add
jo
out
int3
dec
negb
notb
outsb
gs
mov
jnp
in
push
pop
pop
inc
ss
sbb
mov
adcb
or
push
pop
dec
and
xor
mov
push
cmp
mov
and
repz
or
mov
aad
xchg
repz
or
adc
sub
adc
rcrb
ss
mov
lcall
mov
cmp
pusha
loope
pop
rcrl
mov
scas
mov
push
push
mov
adcb
jno
imul
lods
jnp
fcomip
adc
fwait
or
jne
sub
std
xor
mov
xor
hlt
xor
mov
mov
fwait
adc
mov
jmp
xchg
imull
frstor
push
mov
mov
push
xor
cmp
aam
lret
pop
jle
divl
sub
add
lahf
int3
pop
loope
mov
push
enter
je
lahf
mov
out
mov
and
xchg
pop
sub
loope
inc
jmp
hlt
adc
pop
out
fs
sub
mov
cld
adc
repz
xchg
sti
sub
pushf
push
jp
mov
dec
ds
jle
lock
and
sub
push
pushf
loop
or
pop
mov
popa
sahf
shr
pop
xchg
subb
addr16
push
hlt
mov
add
out
icebp
push
rorl
jbe
je
sti
mov
int3
adc
bound
and
ficompl
xor
subb
lahf
addr16
fldcw
jp
punpckhwd
add
sahf
fcmovnu
pop
mov
sub
pop
enter
mov
aaa
mov
mov
push
adc
loop
pop
mov
fucom
add
add
cmpsb
sbb
or
sub
test
int
test
pop
and
subl
cmp
ss
dec
imul
push
mov
dec
fcompl
xchg
sbbb
cmp
lea
push
pop
dec
enter
fcompl
aaa
imul
ret
mov
ljmp
into
repz
sub
jge
cli
imul
je,pn
and
mull
lods
sbb
xchg
scas
es
fldl
bound
gs
popf
adc
insb
data16
sub
push
pop
idivl
out
adc
add
loop
push
xor
aam
inc
cs
mov
call
imul
cmpsb
cwtl
call
movsl
nop
or
cld
clc
or
inc
xchg
addr16
push
and
and
stos
lds
sbb
aad
pop
push
sub
outsb
or
sub
aam
leave
xlat
jnp
sbb
pop
mov
notl
out
xchg
out
cmp
pop
rcr
cwtl
dec
sbb
jge
data16
push
pop
xor
push
adc
inc
je
sbb
call
loop
pop
movsl
pop
and
in
pop
enter
fcoml
pop
pop
in
xor
stos
inc
into
mov
dec
or
inc
je
outsl
pop
xor
in
arpl
lahf
jns
mov
xor
dec
pushf
mov
xor
xor
out
pop
push
inc
fisubrl
sahf
add
push
jmp
jns
cmpsl
cs
test
shrl
fcoml
dec
cmp
mov
push
das
xor
pusha
aam
iret
fidivl
test
pop
bound
push
bound
in
jg
andb
sub
cltd
xor
les
inc
jnp
xchg
adc
mov
mov
mov
sub
test
cltd
fidivrs
je
or
in
pushl
cmp
xor
movsl
or
inc
lahf
iret
adc
mov
lds
sub
push
jo
xchg
rolb
lea
sbb
mov
pop
adc
push
icebp
dec
int3
mov
push
jle
lret
loopne
push
rcrb
sub
sbb
shl
fstps
in
sub
mov
mov
pop
fwait
adc
cmovbe
xor
out
sarl
add
mov
or
fldenv
pop
push
test
cmp
mov
shll
xlat
test
sub
or
hlt
push
rorl
push
mov
xchg
bound
pop
adc
mov
and
sub
xchg
push
cmp
out
lods
int3
mov
cmp
dec
pusha
mov
adcl
cli
push
sahf
insl
jmp
subb
jae
or
icebp
adc
leave
jae
std
sub
jno
inc
shll
mov
inc
dec
add
jle
test
ja
cld
xor
xor
and
int3
fs
andl
pop
push
fneni(8087
sub
cmp
adc
mov
into
adc
andb
sbb
cmc
dec
and
mov
mov
lods
outsb
xor
mov
sbb
add
in
fsubp
push
xor
jnp
add
fwait
sub
or
xor
aaa
jmp
jbe
adc
xor
mov
adc
mov
mov
test
stc
mov
jmp
daa
imul
shrb
lret
pop
imul
inc
fsubrl
push
xor
or
and
or
inc
push
stos
out
adc
fs
pop
mov
divl
mov
mov
out
jmp
mov
mov
cs
sti
jmp
sahf
push
push
orl
frstpm(287
push
xchg
pop
sbb
stos
sbb
out
outsl
decb
insb
in
pop
mov
pop
jnp
test
sub
lahf
push
sbbl
out
addr16
sbb
es
push
mov
dec
cld
movsb
sarl
loope
or
shll
in
out
in
das
dec
divl
xchg
ja
cltd
test
daa
iret
xchg
jb
sub
loop
enter
cmp
inc
jbe
imul
sbb
dec
mov
test
outsl
jnp
xchg
pop
pop
into
mov
imul
adc
fcomip
adc
jbe
pop
pop
ror
dec
outsb
pop
adc
lods
xchg
mov
cmp
mov
mov
clc
mov
lods
loop
xchg
lcall
jmp
repnz
scas
jae
shll
dec
loop
sub
pop
adc
add
pusha
jle
notb
sub
mov
out
mov
fnsave
mov
vphsubbw
in
dec
hlt
cmpsb
jae
pop
xchg
test
shl
jne
cmp
fstpt
out
pop
rcrl
ss
out
nop
sbb
cmp
pop
hlt
dec
mov
enter
popa
stos
dec
call
lahf
fdivs
inc
ja
loop
leave
sbb
stos
stos
dec
mov
push
fisubrs
loope
fsubrs
pushf
add
stos
pop
inc
sbb
mov
popf
stos
popa
aaa
xor
shr
jb
fmul
dec
enter
pop
aaa
push
jecxz
dec
jae
shll
xor
addr16
sub
aaa
fdivrs
pop
lea
movsb
rclb
dec
xor
xor
mov
cmpsl
mov
mov
frstor
test
mov
cmovs
outsb
jae
call
mov
call
stos
clc
lahf
dec
ret
mov
mov
xchg
insl
mov
xchg
stos
adc
gs
fdivrl
jle
outsb
aad
lods
push
aas
aaa
sbb
call
pop
pop
push
daa
call
jo
scas
ds
add
dec
push
cmc
rolb
jg
fnstenv
pop
mov
decl
mov
fiaddl
pop
rolb
jae
insb
cmp
jg
ljmp
sarl
cmp
inc
xchg
xor
nop
rcl
xchg
mov
inc
add
jle
fcompl
push
outsb
int
les
pop
addr16
push
cmpsb
add
mov
gs
sbbw
mov
add
or
shrb
xor
inc
stos
pop
stos
out
xchg
sbb
cmp
ss
xor
lds
fst
stc
repnz
mov
shl
sub
repnz
rcl
stos
pop
dec
cmp
cwtl
mov
mov
test
xchg
loope
bound
mov
sbb
xchg
push
ja
sbb
gs
fnsave
lret
ret
andl
dec
inc
enter
loopne
popa
xchg
jno
cmp
lea
inc
fisttps
in
testb
ret
add
jae
jae
pop
pop
cmp
loope
push
loope
sub
and
subb
sbb
sub
push
mov
pop
xchg
adc
xlat
cli
dec
in
lods
xchg
xchg
es
sbb
hlt
cwtl
or
cmp
mov
loopne
xor
dec
mov
mov
stos
lods
adcb
mov
dec
pop
sti
mov
xchg
sub
adc
bound
or
in
test
into
data16
popa
fidivl
jp
add
sub
insl
xchg
cmp
inc
in
rclb
sub
in
cli
jns
aad
mov
xchg
cmp
mov
cli
pop
mov
ljmp
dec
dec
sub
stc
ds
cwtl
xchg
xor
es
push
popf
add
notb
test
adc
stc
notl
jb
mov
rclb
mov
sbb
fbstp
out
pop
lock
setg
jmp
jecxz
push
fwait
inc
jmp
push
mov
mov
lock
lock
les
cmp
js
inc
push
test
mov
lods
movb
bound
xor
adc
adc
notl
adc
les
mov
adc
xchg
sub
mov
dec
push
sbb
xor
icebp
in
inc
popf
shll
mov
call
idiv
leave
and
push
jp
xlat
nop
xchg
add
cwtl
push
add
jmp
loopne
rcl
popf
std
je
divb
fs
xor
fs
ds
cmp
inc
mov
movsl
cwtl
popa
or
lock
sbbb
cmp
call
outsb
xor
shlb
out
loop
pushf
cmp
fs
and
pop
pop
stc
fisubl
cmp
jl
pop
sub
add
pusha
sar
pop
std
mov
imul
dec
xchg
and
int3
sub
jl
add
ja
adc
jo
insl
aas
pushf
jecxz
jecxz
jbe
aas
fwait
xchg
jl
lock
dec
xor
mov
jmp
and
xchg
call
cli
cs
leave
rcl
cmpsl
cmp
stos
mov
shl
lcall
dec
ret
cmp
jno
or
imul
pusha
add
adc
add
and
cs
jne
lret
icebp
push
push
xchg
mov
xor
push
int
dec
adc
dec
push
xchg
orl
out
sbb
and
sub
add
loopne
shll
xchg
add
xchg
inc
mov
lcall
mov
inc
dec
adc
cmpsl
or
jb
fmul
cmp
mov
jecxz
jns
push
pushf
je
imul
fcompl
in
jmp
push
push
push
xlat
dec
inc
mov
xchg
shlb
or
jmp
push
push
or
popa
sbb
lock
imul
pop
mov
push
mov
sub
ja
test
inc
jb
aas
cltd
ja
ficoms
sbb
inc
test
push
cmpsb
pushf
push
mov
loop
xchg
aad
adc
adc
std
ret
in
lods
xor
mov
std
sbb
fld
std
mov
jmp
rcrb
arpl
dec
and
icebp
add
cli
stc
popf
cmp
cmp
cmc
add
mov
insb
mov
dec
dec
push
js
ret
popf
inc
mov
sbb
call
push
aas
cmp
adc
pop
pop
shll
fwait
jmp
or
cmp
mov
outsl
outsb
test
and
sar
enter
dec
mov
cmp
jge
mov
das
sahf
insb
cmp
pop
lods
dec
imul
movsb
sti
popa
lods
mov
or
shrb
bound
sub
mov
mov
pop
mov
test
push
repnz
inc
je
mov
mov
and
scas
sbb
in
adc
cmp
dec
mov
jle
xorb
add
outsb
int
iret
sahf
dec
inc
jbe
mov
add
or
or
cmp
int3
xor
dec
movsb
and
jl
and
cs
sub
cmp
push
cltd
ror
call
pusha
stc
cmpsb
mov
or
daa
cmp
stc
jbe
cltd
lcall
sub
int
aaa
sub
xchg
enter
fdivp
rcll
ret
daa
push
aas
xlat
dec
mov
icebp
nop
or
ficompl
gs
enter
inc
sbb
repnz
iret
popa
dec
stos
xchg
jne
xchg
sbb
mov
push
fsubs
jb
not
decl
sub
fs
xchg
pop
in
out
cmp
aam
add
pop
iret
xor
inc
mov
movsl
repnz
les
mov
lahf
push
fidivrs
jmp
and
mov
pop
imul
arpl
nop
sbb
sbb
imul
mov
in
cmp
hlt
adc
cwtl
add
cli
jp
push
mov
int3
movsl
push
add
xchg
or
stc
xchg
cmp
push
inc
pop
enter
push
dec
xor
ret
in
adc
nop
lods
sub
pop
lret
repz
sbb
movl
cmpsb
jne
out
popf
mov
lds
or
lret
out
call
adc
in
mov
push
mov
lea
xor
sub
inc
sbb
das
int
mov
dec
fdivrs
leave
loopne
sbb
fcompl
sti
rcl
add
adc
test
inc
push
shll
call
imul
pop
inc
jecxz
call
icebp
mov
cmp
jae
idivb
push
adc
inc
sbb
ss
into
sub
daa
mov
fbld
nop
push
and
xchg
mov
test
xchg
je
movsl
mov
arpl
dec
notl
fdivl
in
push
sbb
add
out
add
jg
and
mov
aad
repz
cwtl
dec
jle
jl
enter
push
arpl
insl
out
and
sub
xor
inc
lret
mov
shll
mov
sbb
nop
ja
or
jno
rcrb
testb
adc
jnp
pop
les
stos
int3
lret
into
imul
divb
daa
int3
inc
dec
adc
test
gs
popa
rorb
or
imul
inc
inc
clc
aad
sbb
mov
jns
shl
sbb
add
ljmp
mov
std
inc
xchg
dec
dec
iret
push
jae
pop
inc
adc
jnp
int3
push
stos
pop
aam
addb
imull
mov
mov
adcb
mov
into
dec
lea
sbb
stc
adc
jecxz
out
jecxz
in
inc
gs
inc
dec
cmp
cmp
sarl
mov
pushf
shl
mov
sub
hlt
sahf
sti
cmp
mov
in
sub
inc
std
inc
add
scas
add
jmp
aas
pop
sbb
repnz
rcr
cmp
fbld
push
mov
mov
mov
mov
mov
jne
sub
and
xchg
cli
popf
cmpsl
cmpsl
sar
jl
aas
xor
add
pop
sbb
dec
sub
xchg
mov
repnz
add
andl
fs
push
cli
fdivl
into
repz
xchg
push
xchg
out
dec
push
lods
inc
imul
loop
add
push
fdivr
call
in
inc
fsub
popa
sub
xor
jb
sbb
call
aas
sbbl
data16
jns
imul
sbb
lods
sub
inc
push
add
sub
test
mov
ljmp
fs
mov
sbb
xor
lcall
or
jo
movsb
push
sub
pusha
test
test
and
negl
nop
xor
pop
xchg
aaa
clc
ss
imul
fidivrl
mov
mov
cmpb
icebp
push
xchg
mov
loope
dec
ds
clc
and
xchg
cmp
stos
push
jb
mov
sbb
bound
mov
cs
hlt
cmp
out
aam
ficompl
das
push
pop
add
sub
mov
and
xor
loope
inc
adc
mov
mov
loope
stc
imulb
es
jno
hlt
dec
imul
jne
inc
sti
push
std
mov
adc
into
lock
call
jae
imul
cmc
pop
icebp
fists
or
sbb
les
xchg
dec
roll
in
icebp
hlt
xchg
xchg
out
fldl
adc
insb
mov
cli
test
stc
nop
xchg
jo
adc
xor
lret
cwtl
insb
std
jbe
jge
repz
incl
adc
stos
pop
push
cmpsl
int3
vunpckhps
pushf
jle
orb
movsb
jns
ja
rcl
pop
sarl
fwait
aas
jnp
cld
fsub
fisubrl
jne
out
inc
sub
jmp
dec
imul
je
leave
sbb
jge
mov
sbb
sub
shl
sub
shl
jecxz
fimull
add
orl
pop
leave
adc
out
cmp
ljmp
les
adc
pushf
mov
mov
xchg
divb
mov
push
adc
ret
andl
jno
jo
sub
cmp
rep
test
jne
xor
dec
fimuls
scas
out
fldl
adc
insb
pop
cld
mov
fstpl
jae
mov
inc
outsl
or
mov
dec
dec
scas
popa
or
mov
fs
nop
mov
test
jge
das
out
addr16
outsb
icebp
jge
lods
cmp
popa
cmp
mov
lods
push
sbb
aaa
leave
cmp
lahf
or
inc
ss
icebp
sub
inc
push
mov
fildl
xor
ficompl
or
call
dec
insb
insb
nop
sarl
mov
sub
and
ret
int
cmp
jmp
test
add
pusha
mov
cmp
lea
push
ljmp
or
jmp
lods
dec
dec
lea
xchg
dec
jnp
jne
jp
sbb
xorb
mov
xchg
int
dec
push
imul
and
imull
cltd
out
outsb
pop
mov
xchg
test
lods
mov
sub
movsb
xchg
cwtl
xlat
in
hlt
test
mov
add
enter
xor
adc
lds
or
push
mov
pop
fstl
cltd
nop
or
cli
cwtl
xor
leave
jns
cwtl
mov
adc
push
jge
imul
mov
lcall
push
inc
pop
jo
loop
iret
xchg
adc
aad
and
mov
ds
mov
sbb
call
pop
xor
dec
xor
xchg
mov
add
dec
mov
hlt
mov
mov
xor
test
push
fwait
push
gs
pop
stos
dec
loop
addr16
xor
xchg
clc
psubq
std
xor
mov
pop
test
push
sysexit
int
push
cwtl
std
lods
mov
frstor
clc
xchg
inc
add
push
insl
sub
jge
jmp
fs
cmc
sub
jno
in
mov
dec
cmpsb
mov
push
add
mov
dec
inc
xor
or
ss
rcrl
mov
adc
fisubrs
sub
cmpsb
cli
cmpsb
dec
loopne
nop
jnp
icebp
mov
jge
aam
jno
orl
popa
mov
mov
inc
call
lds
cmp
test
pop
xchg
int
add
lods
pop
stos
fimull
movsl
adc
push
jne
mov
lea
sbb
mov
jg
dec
ja
mov
mov
test
ret
out
js
and
mov
dec
ret
sub
out
aas
jno
test
mov
inc
dec
jg
es
inc
test
fsubs
mov
fs
adcb
jge
pmulhuw
test
imul
call
mov
repz
fldpi
or
xor
scas
je
mov
std
cmp
in
push
std
iret
orb
mov
repz
inc
push
mov
cmp
pop
add
int
and
and
jne
movsl
inc
hlt
jp
mov
jg
xor
xchg
jnp
ficompl
xchg
dec
stc
fdivl
adc
cmp
iret
jmp
add
mov
sub
dec
out
subb
push
std
lods
sti
gs
sbb
lret
add
xchg
fwait
imul
pop
mov
fldcw
jge
adc
sbb
scas
xchg
pop
cmpsl
leave
dec
mov
mov
enter
jle
bound
daa
xchg
xlat
shlb
adcl
or
add
into
xor
xchg
leave
mov
inc
stos
jne
enter
cwtl
ficoms
sbb
pop
xor
jl
push
mov
sar
ret
pop
add
sub
or
mov
int3
adc
cmp
xchg
adc
jge
in
push
insl
xchg
fsubr
xor
aas
pop
or
and
xchg
add
iret
dec
push
repz
mov
sbbl
cli
cld
push
mov
and
iret
xor
mov
outsl
dec
xchg
arpl
mov
sbb
ds
xor
xor
cmp
jg
icebp
xchg
sbb
adc
fwait
mov
inc
jno
imul
xorl
push
xchg
js
mov
data16
rdpmc
mov
adc
cmpsb
imul
xor
sub
jle
icebp
dec
sbb
out
dec
sub
pushf
add
ljmp
pop
test
sbb
jno
lret
lods
insl
cld
push
into
adc
xchg
cmp
data16
insl
pop
stos
inc
sbb
insl
movsb
and
push
jg
cmpsb
daa
mov
popf
test
jecxz
push
data16
dec
sub
mov
and
fiaddl
lods
cmp
insl
cli
mov
cmp
xchg
aam
stos
cmc
push
cmp
mov
mov
adc
inc
sub
mov
mov
icebp
mov
gs
loope
hlt
or
mov
pusha
mov
adc
push
adc
cmp
fcompl
iret
into
pushf
adc
xchg
shlb
movups
fdivrs
mov
jmp
sbb
orb
push
addr16
and
shrd
popa
arpl
xchg
or
jo
pop
inc
push
inc
ljmp
scas
mov
inc
addr16
iret
leave
pop
push
das
or
pop
sbb
lret
jb
lods
scas
sub
sub
mov
sub
movsl
gs
cmc
adc
nop
inc
out
dec
scas
mov
in
and
fs
sti
push
dec
or
cmc
mov
adc
ss
sbbl
int
movsl
add
test
inc
push
xor
jmp
lcall
filds
push
inc
or
push
or
fistpl
movsb
cmp
gs
sti
enter
pop
call
inc
jne
arpl
push
ror
nop
insb
and
xor
sti
lods
dec
push
test
push
sahf
fistps
mov
out
jg
jb
stc
sti
jb
aas
push
add
in
jno
mov
enter
xchg
pop
shll
and
insb
mov
aas
jmp
in
int
out
adc
mov
std
rcrb
add
lcall
mov
add
in
in
or
pop
jae
in
mov
lret
jecxz
pop
ljmp
jae
test
adc
ret
cmc
mov
int3
dec
stc
xchg
repz
dec
aam
adc
jbe
je
push
pushf
movsb
push
faddl
fnstsw
sahf
cmpsl
sub
js
adc
jmp
movsb
pop
repz
mov
jnp
cltd
sub
inc
in
es
sti
push
cmp
out
pop
adc
std
push
jmp
push
ffreep
sahf
in
sarb
dec
insb
or
inc
jb
xchg
fsubrs
stc
xor
fiaddl
loope
push
es
xchg
lret
outsb
pop
leave
xchg
push
sarb
fimuls
or
xchg
xchg
and
jne
jo
lea
aaa
mov
fildl
lret
sahf
rorl
mov
lahf
popa
jge
mov
inc
aas
int
das
add
call
cmpsl
adc
fnstsw
sub
iret
add
cmc
roll
and
ret
popa
pop
add
mov
sub
subl
movsb
or
add
mov
arpl
sub
std
add
xchg
cmpsb
stos
scas
lock
lds
inc
test
lods
cmp
ror
imul
push
mov
insb
or
std
lock
or
pushf
mov
xchg
mov
sub
push
je
push
clc
adcb
cmp
mov
or
ss
xchg
cwtl
mov
shll
rclb
mov
dec
pushl
fwait
jb
push
cld
jg
xchg
ficoms
xor
dec
and
push
aad
jmp
pop
adcl
enter
shr
sarl
jno
dec
xchg
ja
dec
test
int
and
daa
pop
iret
lock
mov
ret
xor
int
insb
nop
out
jecxz
lea
cwtl
cltd
into
inc
push
clc
mov
lods
nop
inc
shll
push
mov
push
leave
mov
mov
ret
dec
mov
or
push
scas
into
xlat
dec
jb
fxch
xor
add
mov
lret
pusha
shl
sbb
xor
aaa
inc
rcl
pop
sub
stc
inc
cmp
repz
call
jae
inc
pop
inc
sbb
repnz
push
mov
mov
mov
jns
movsb
lock
xchg
enter
sub
lea
sub
xchg
iret
xchg
rcrl
scas
mov
jnp
int
jge
dec
in
sub
movsb
rcl
psubd
mov
jb
and
push
lret
test
xor
lret
stos
mov
andb
jbe
xchg
cmp
lock
rcr
negl
sbb
cmc
imul
leave
or
je
adc
adc
xchg
popf
adc
mov
lret
lock
mov
lea
jecxz
aas
push
xchg
ret
std
jbe
cli
arpl
mov
int3
nop
inc
mov
sbb
pusha
ss
pop
lret
mov
sarb
hlt
mul
test
and
xor
out
pop
push
jo
stos
jecxz
out
enter
mov
sbb
mov
mov
ljmp
roll
loopne
insl
sti
mov
push
mov
pop
fldt
pop
out
movsb
lret
mov
test
cmp
cmpsb
pop
adc
and
scas
aas
xor
shr
jo
mov
push
add
push
xchg
stos
out
pushf
rclb
imul
mov
fbld
lock
pop
mov
mov
popf
dec
xchg
jmp
aas
mov
rclb
fwait
sub
and
pop
test
mov
ljmp
push
mov
adc
out
dec
xchg
cld
ds
push
sub
sahf
stos
fstpt
pop
mov
clc
cs
pop
mov
ss
mov
jge
inc
aam
mov
cld
mov
mov
out
jbe,pt
jmp
mov
xor
xchg
imul
push
pop
pop
mov
rcrb
mov
in
and
jns
shrb
mov
leave
add
push
pop
mov
push
jo
into
out
leave
jecxz
push
stos
cmpsb
mov
jae
arpl
mov
xlat
in
xor
call
sbb
push
sbb
cmc
mov
adc
mov
popa
test
push
cwtl
dec
push
mov
leave
add
xorb
addb
arpl
inc
movsb
and
into
xlat
inc
fwait
mov
inc
xchg
add
cmpsb
jp
push
insb
dec
aad
pop
add
xor
mov
dec
mov
push
mov
pop
popf
loopne
jb
dec
outsl
sbb
inc
jmp
inc
pop
ret
adc
mov
popl
in
pop
outsl
mov
inc
jl
jmp
pop
lds
xor
mov
sbb
inc
insl
add
lret
lods
push
popa
jne
xchg
ss
cmp
sbb
xor
dec
cmp
push
hlt
push
aaa
loope
dec
cmp
mov
repnz
jp
xchg
and
mov
js
pop
push
outsb
inc
xorb
lds
xchg
repz
bound
out
std
in
sub
add
imul
pusha
loope
inc
cmpsb
xor
cmp
not
sub
cmp
inc
mov
sbb
inc
sbb
sub
dec
adc
jge
fists
and
cli
or
push
mov
rclb
les
fwait
xor
fstp
fldcw
sti
fstl
test
sbb
scas
push
xchg
push
cmp
hlt
mov
icebp
ljmp
or
notl
adc
dec
add
lahf
and
scas
sbb
stos
sbb
shrl
dec
data16
jo
ja
fcoms
jno
push
cmp
in
out
pop
push
dec
loope
pop
mov
fiaddl
mov
stos
jge
mov
mov
or
call
in
inc
ss
out
shrl
cmp
das
lahf
jns
cmc
jnp
das
and
mov
add
out
mov
loop
test
sbb
andl
mov
in
movsl
sbb
int
mov
in
ret
sbb
adc
mov
lea
ret
pop
sarl
ss
movsb
movsb
aaa
jecxz
jp
inc
clc
outsb
ficoml
add
imul
xchg
or
cmpsb
and
add
mov
xchg
shl
sub
call
out
ficoms
or
pop
mov
hlt
xor
pop
insl
rcr
rep
xor
pop
pop
fnsave
xorb
push
lds
sbb
fwait
xor
jl
in
jge
add
jbe
inc
rcrl
adcb
xchg
sub
lahf
mov
xor
lea
mov
jp
xor
aam
add
shl
loope
scas
scas
ja
fsubr
shll
cmp
jp
pushf
push
sti
mov
mov
stos
into
lea
ret
mov
jbe
fistps
push
dec
pop
enter
das
pop
arpl
repz
iret
das
xor
xchg
movsb
les
mov
xchg
sbb
cmp
int3
cmp
jl
mov
fcoml
lock
rcrb
cmp
inc
cmp
mulb
jns
pop
lds
ret
xor
pop
outsl
mov
nop
aad
push
repnz
leave
cld
sub
test
inc
inc
mov
bnd
repnz
pavgw
sahf
add
je
sub
fs
inc
jmp
popa
xabort
sub
inc
sub
cmp
lret
loopne
addr16
xchg
sti
xchg
cmp
mov
test
dec
outsb
ret
div
aaa
mov
bound
and
rorb
xlat
cmp
test
pop
sarl
jg
push
jge
mov
push
dec
or
add
mov
cltd
repnz
dec
inc
in
jge
test
cmp
fisttpl
shll
dec
dec
sbb
into
sbb
fs
stc
push
mov
jno
loop
xor
sub
fimuls
shll
push
cmp
add
int
xor
sub
es
sbb
enter
icebp
cmc
add
jno
fstl
xchg
sbb
sub
add
mov
pop
fninit
and
insb
fs
lret
mov
sub
test
imul
les
push
out
jecxz
add
inc
bound
xchg
jmp
hlt
pop
cmovnp
sti
jge
mov
cmp
dec
mov
add
mov
inc
int
mov
pop
std
into
pop
push
xor
lods
adc
movsb
inc
mov
outsl
lret
cwtl
nop
and
push
imul
xchg
sti
pop
mov
and
jg
mov
popa
jge
cmp
insb
out
int3
fiadds
ror
jge
adc
mov
add
iret
aad
sub
dec
stc
outsl
shll
mov
sbb
jnp
and
aam
into
pop
imul
adc
inc
in
stos
xor
gs
iret
or
jne
inc
pop
mov
xor
mov
testl
stos
loop
mov
call
xchg
push
in
test
lock
movsb
out
and
insb
jae
test
in
xor
push
or
repz
cmp
dec
out
lods
imul
rolb
push
loopne
or
xchg
inc
cmc
inc
xchg
sbb
cld
mov
sub
jb
or
ja
in
sbb
xor
push
daa
fnop
add
xor
lret
pop
sbb
roll
addr16
mov
jnp
push
in
cmc
cmpsl
sbb
adc
dec
cs
jb
dec
loop
or
in
jno
jnp
xchg
xchg
dec
jge
gs
scas
scas
jae
popa
loop
mov
aad
rcll
mov
sub
mov
les
or
cmp
and
popf
and
outsl
popf
int3
insl
js
jns
sub
aam
and
out
push
mov
nop
jle
lret
jo
scas
js
inc
mov
leave
fists
popl
sub
leave
xor
mov
filds
mov
test
out
or
jb
ss
or
pop
jg
and
fs
push
scas
jmp
mov
dec
loopne
mov
jmp
mov
pop
cwtl
and
test
lock
or
shlb
addb
mov
and
aas
es
push
movsw
jnp
hlt
nop
add
and
push
fistl
jo
mov
xorl
or
out
mov
sbb
add
data16
sarl
inc
add
adc
pop
mov
loopw
sub
mov
push
aaa
adc
pop
mov
lcall
and
popa
cmpsb
jecxz
xlat
jle
pop
pop
popf
ljmp
xor
push
jge
repz
and
mov
adc
jne
lds
jns
push
aaa
and
cltd
sbb
aam
rcl
jle
xor
aaa
add
pop
xor
mov
mov
dec
insl
loopne
lds
shlb
or
nop
sub
inc
jg
mov
js
sbb
adc
push
test
daa
addr16
pop
pop
outsb
push
xchg
stc
pop
insl
out
dec
addl
sbb
negb
dec
push
in
test
mov
mov
add
and
gs
sarb
fdivrs
xor
enter
subb
push
movl
in
pop
jp
push
fs
inc
mov
xchg
pop
jge
jnp
or
add
imul
cmc
lea
jns
nop
xchg
pop
stos
jns
sbb
and
sbb
inc
xchg
xor
lahf
stos
dec
jl
cwtl
nop
mov
pop
sbb
aam
mov
push
loopne
pop
in
xor
push
inc
cld
std
jno
mov
fstl
jo
sub
add
add
dec
push
pop
jb
fwait
cmp
pop
dec
push
aam
push
jae
xor
fistps
push
pop
mov
xor
cwtl
mov
lds
sub
hlt
clc
pop
inc
adc
inc
les
mov
shll
aad
add
pop
or
sbb
jno
cmp
out
lea
mov
or
xlat
and
dec
jecxz
lret
call
loope
pop
lret
hlt
test
movsb
dec
xchg
aaa
inc
shll
stos
in
xchg
pop
or
fbld
pop
adc
cmc
sub
test
in
insb
push
sbb
pop
jo
test
and
dec
push
dec
test
icebp
and
cmp
lret
mov
mov
addr16
dec
dec
cli
mov
or
and
adc
gs
xchg
mov
fwait
aaa
jo
and
in
loope
ljmp
pop
mov
pop
aaa
jp
sub
aaa
ror
orl
in
dec
popf
push
pusha
orl
sbb
jmp
push
push
push
daa
addr16
pop
mov
and
fwait
jbe
mov
jnp
and
and
push
imul
jge
popf
test
pop
insl
add
pop
jns
and
es
jb
inc
and
push
cmpsl
inc
inc
mov
in
mov
stos
jb
dec
push
mov
cmc
mov
cmovae
adc
lock
mov
sbb
or
add
mov
sahf
rcll
adc
sbb
testl
fs
je
push
inc
leave
cs
sbb
fs
push
mov
out
sti
aaa
lahf
sti
adc
sub
dec
mov
xorl
sbb
cmp
mov
mov
insl
mov
push
fadds
in
jmp
andl
inc
sbb
xchg
mov
dec
pop
inc
ret
out
popf
sub
pop
ja
sub
add
ret
dec
rcll
dec
movsl
scas
hlt
jae
or
and
sbbl
fwait
ja
or
adc
push
pop
jbe
pop
dec
sub
pop
lods
or
sub
shl
pop
lds
inc
rorb
call
iret
mov
pop
or
adc
sbb
lock
jle
imul
fidivrs
scas
das
rorl
enter
in
lea
adc
push
push
icebp
push
or
in
or
cld
rcr
adc
into
or
lods
or
and
aad
mov
int
daa
cli
lea
into
mov
das
movl
xor
jae
add
sbb
jl
pop
stos
fisubs
outsb
inc
iret
push
jns
push
sti
sti
add
in
add
out
cmc
ret
notb
fwait
aam
xchg
inc
sbb
mov
inc
aas
fstl
hlt
lcall
dec
sbb
andl
pop
push
push
out
test
xor
mov
push
pusha
add
jp
xchg
cltd
lcall
mov
sbb
std
xchg
mov
pop
shll
movsl
movsb
and
in
shlb
insb
addr16
in
das
cwtl
scas
sub
mov
cmc
sub
frstor
loop
int3
push
scas
adc
push
push
pop
aaa
sbb
repnz
sub
jno
adc
fdivl
xchg
cmp
add
ret
jae
outsb
inc
sbb
loope
pop
movsl
dec
inc
stos
shll
mov
orl
ss
add
xor
inc
mov
push
mov
mov
and
adc
scas
xchg
inc
and
sbb
mov
pop
xchg
test
test
scas
ss
mov
mov
xchg
mov
imul
dec
xor
out
test
icebp
mov
scas
mov
aas
or
jg
or
mov
lret
mov
pop
pop
xchg
xchg
insb
andl
jns
cmpsl
lods
out
mov
arpl
fcoms
movl
xor
scas
dec
cld
shll
ss
in
aad
imul
dec
push
xor
outsb
push
test
pop
shlb
xchg
jne
jns
inc
mov
mov
loopne
add
leave
push
repz
sbb
jnp
dec
jae
pushf
in
or
dec
out
mov
lods
fdivrs
lret
mov
mov
insb
test
fcompl
in
outsl
push
sti
add
in
nop
adc
les
cmpsl
jmp
inc
les
clc
push
in
idivl
ror
cmp
flds
mov
daa
sbb
jp
cwtl
fcomps
mov
loop
fidivrl
adc
stos
ret
add
ja
mov
sbb
insb
rcl
adc
scas
pop
test
ficomps
inc
xor
imul
fsub
fnstenv
ret
into
cmp
sbb
sbb
push
mov
dec
cs
mov
nop
sbb
out
icebp
rol
jnp
imul
and
xchg
push
add
mov
and
add
icebp
pop
mov
and
jg
jp
pop
and
outsl
popf
fcmovbe
or
jmp
jle
les
jae
and
pop
dec
jecxz
ljmp
xor
int
repnz
das
adc
jge
push
inc
mov
mov
sub
out
hlt
jl
mov
imul
lods
inc
cld
or
addr16
mov
xchg
int3
je
cmp
out
test
xchg
inc
je
cmpsb
sub
push
stc
jge
fiadds
dec
mov
fwait
inc
ficoml
aas
lret
xchg
mov
cmpl
out
fsubs
fiadds
cmp
jno
insb
ficoml
jns
aad
add
and
daa
aaa
aad
mov
aas
lcall
mov
push
jmp
jns
test
sti
aas
mov
aad
xchg
dec
inc
add
sbbl
orb
jp
das
aas
mov
insb
mov
fsts
mov
adc
stc
push
add
push
stc
pop
cltd
mov
xor
xlat
sub
sahf
loopne
and
mov
pop
mov
mov
je
ja
mov
or
add
out
movsl
cmpsl
outsb
mov
frstor
xchg
addr16
jle
xchg
lret
lods
jl
or
push
hlt
mov
mov
dec
pushf
inc
mov
mov
or
or
fisubrs
mov
mov
lahf
movsb
xchg
xchg
fisubl
mov
inc
cmp
sbb
or
jmp
mov
out
and
or
popf
pop
mov
adc
testb
loope
push
cltd
pusha
lcall
and
pushf
cmc
xor
and
loope
cmp
sbb
fnstcw
ret
imul
cmp
sbb
cwtl
jl
sti
jecxz
push
arpl
ljmp
cmc
jle
fsubl
dec
cmp
mov
jbe
ljmp
fwait
and
xchg
into
dec
aam
sub
adc
jnp
mov
lods
push
cltd
ss
jle
cltd
sub
adc
popa
ds
jp
mov
jo
in
mov
out
cli
roll
sbb
mov
out
sarl
jmp
mov
nop
addr16
shlb
pushf
jnp
push
rolb
in
sahf
xchg
hlt
sub
pop
popf
mov
mov
xor
test
test
jmp
push
loope
ds
lahf
dec
jb
aad
subb
nop
xchg
xor
and
or
mov
enter
jno
xlat
sbb
pop
dec
outsl
roll
ss
xlat
cmp
sbb
inc
lock
sbbl
add
sbb
movsl
cli
xchg
lret
jns
mov
outsb
or
loope
std
mov
push
fisttpll
sub
push
sub
push
sbb
xor
lods
xor
in
push
imul
faddp
test
mov
push
mov
jle
out
mov
dec
ret
mov
jne
lcall
loopne
je
cltd
inc
fdiv
clc
in
stc
add
or
mov
push
lret
in
addb
ja
mov
mov
push
popa
aam
mov
jecxz
fidivrs
cmpsb
xchg
fsubl
jle
rcrl
out
ja
mov
pop
int
cld
dec
xor
push
inc
and
fwait
js
mov
dec
or
ret
mov
fcom
xchg
add
lea
jns
mov
xchg
sub
xor
xlat
lret
push
push
mov
popa
shrb
out
push
cli
aam
pop
rcpps
add
xchg
fldenv
fcmovb
mov
aas
cs
dec
cmp
lret
rcll
inc
xlat
pop
data16
mov
lods
loope
leave
and
push
shll
rcr
addr16
outsl
xchg
jmp
adc
adc
cld
add
add
movsl
enter
shl
xchg
add
dec
rcr
std
sahf
mov
mov
fisttps
xchg
mov
or
aaa
cmp
and
andb
pop
mov
sub
loopne
inc
pop
dec
push
jmp
xor
or
and
loop
inc
jecxz
jge
inc
lahf
mov
daa
push
pop
enter
shlb
add
dec
nop
and
pop
cmpl
ret
adc
pop
cmp
stos
mov
mov
pop
mov
fisubs
outsl
cmp
pop
lods
sbb
jg
xchg
lds
inc
outsb
lea
iret
add
pop
div
xor
mov
add
sub
movq
mov
sbb
mov
movsl
inc
cmpsl
or
pop
inc
ljmp
pop
adc
and
mov
or
sub
and
cs
daa
sbb
jbe
pusha
fwait
sarl
mov
add
sbb
mov
ret
stos
in
or
jge
mov
mov
push
fldenv
int3
mov
movsl
scas
outsb
out
loopne
mov
push
jns
lret
stos
out
mov
mov
mov
in
mov
in
cld
jg
add
icebp
repz
jno
cmpsl
add
aaa
and
xor
jmp
loope
test
in
iret
xor
rcl
int3
and
lcall
jecxz
cmp
add
arpl
mov
xchg
mov
les
push
test
fisubrs
mov
pop
pusha
movsl
sub
movsb
cld
fwait
ret
leave
mov
add
jmp
iret
mov
dec
subl
movsl
xor
fistpl
push
push
xchg
loop
scas
addr16
fildl
push
add
int
mov
sub
sahf
pop
subl
divb
shll
or
test
nop
push
into
mov
out
mov
hlt
cld
jg
scas
adc
sub
pop
icebp
out
repz
scas
inc
nop
daa
sbb
test
add
xlat
lret
punpckhdq
es
mov
out
xchg
sub
mov
and
stos
lcall
mov
jne
mov
mov
imul
add
inc
adc
ljmp
daa
in
imul
mov
xchg
xchg
jmp
pop
or
push
cmp
jno
add
loop
stos
insl
stos
repnz
adc
xchg
push
imul
test
orl
imul
mov
imul
scas
adc
jl
mov
icebp
mov
loope,pt
mov
sarl
jg
jb
testb
mov
mov
mov
pop
or
imul
dec
dec
sub
mov
jp
mov
aas
fcomps
mov
das
dec
or
sarl
add
push
arpl
mov
jge
xchg
sti
xor
xor
cmpsl
insb
fdiv
mov
rcrb
xor
jae
sub
mov
sti
repnz
sbb
adc
shl
jb
sbb
jle
cld
push
fs
sarl
hlt
mov
mov
xchg
or
xor
adc
xchg
inc
lods
aam
imul
cs
add
rcrl
add
fsubrs
mov
scas
in
movsl
cli
add
call
fmuls
and
xor
clc
add
stos
push
jne
mov
xor
or
jg
aam
xchg
mov
lods
cmpsl
mov
pop
adc
lcall
ret
cld
sbb
pushf
jmp
dec
repnz
pmaxsw
and
loope
adc
mov
aad
xchg
mov
xchg
mov
mulb
subl
movsl
fmuls
imul
inc
ret
push
inc
popf
and
sub
scas
xchg
popf
mov
add
inc
mov
cld
js
pop
adc
ljmp
cmp
pop
call
std
sbb
dec
xchg
sub
jge
in
ljmp
mov
dec
loope
clc
ret
int3
cmc
mov
frstor
loope
in
xor
sbb
mov
push
mov
pop
sbb
push
out
add
enter
dec
and
jg
fstp
push
jmp
jmp
mov
jne
data16
pop
lea
lea
nop
jae
push
sub
cmp
les
js
xor
sub
decb
xchg
mov
sub
into
sub
sbb
add
int3
inc
lahf
mov
add
cmp
sub
adc
cmpsl
mov
adc
fwait
popa
add
or
pop
pop
loop
gs
xchg
sbb
ss
shrl
cmp
push
cld
in
and
cwtl
ja
inc
adc
clc
repnz
push
cmp
xchg
aaa
pop
adc
dec
dec
popa
and
stc
sub
sub
sbb
mov
xor
xchg
and
lahf
xor
mov
lahf
stc
push
cmpsl
jno
enter
mov
popf
movsb
push
inc
int3
add
mov
rolb
mov
mov
sbb
je
icebp
int
sbb
push
xor
and
mov
adc
ds
sub
das
stc
cmp
xchg
mov
add
xchg
andb
call
cmp
movsb
nop
sbb
cld
xchg
scas
dec
jno
les
xchg
pop
cmp
ficoml
or
shll
xor
stc
adc
cmp
les
dec
add
pop
loope
fwait
es
pushf
ret
dec
mov
cmp
sar
push
pop
jmp
or
fprem1
jne
or
fmulp
pushf
pop
jg
xchg
mov
sub
fbstp
arpl
push
repnz
xchg
mov
mov
inc
std
cmp
xor
shll
jb
sbb
inc
jmp
pop
xor
int
aad
shll
je
jecxz
push
push
jno
and
idiv
pushf
xor
push
lcall
jae
lea
and
inc
insb
sbb
cmp
xor
sub
fmull
rolb
jo
inc
dec
xchg
jns
lods
sbb
fstl
cmp
lods
adc
sbb
icebp
sbb
test
sti
pop
push
add
pop
dec
mov
jmp
xor
iret
push
mov
lret
pop
pop
jns
pop
test
test
icebp
leave
sub
sub
aad
aas
mov
ljmp
xor
dec
push
cmpsl
das
and
pop
dec
push
and
xor
call
pop
pop
fcomp
movsb
sub
sbb
add
push
fwait
dec
mov
lret
out
cs
icebp
lcall
xchg
sbbl
das
add
das
mov
imul
xchg
sbb
add
dec
add
mov
mov
test
jnp
cld
test
dec
lret
rorl
pop
cmpsb
pusha
out
jmp
lahf
mov
nop
in
arpl
fstl
xor
pop
dec
mov
sub
push
rcrb
bnd
adc
test
xchg
inc
push
ds
sub
mov
xor
cmp
pop
xor
rclb
and
adc
dec
pop
mov
jbe
int
adc
cld
add
jg
sbb
movsl
cs
call
bound
adc
adcb
sti
pop
popa
addr16
cmp
adc
sub
or
inc
cmp
push
xor
dec
push
xchg
jbe
mov
add
jle
fldenv
sbb
decl
into
jle
es
mov
aas
mov
cs
out
scas
inc
jne
test
pop
mov
mov
push
mov
ja
gs
adc
mov
and
shll
xchg
jnp
inc
adc
movsl
dec
xor
scas
or
std
ret
pop
or
fisttpl
addr16
adc
or
pop
arpl
xor
mov
or
in
dec
jp
push
arpl
push
das
shlb
lcall
inc
mov
jecxz
out
sub
ds
pop
out
nop
inc
mov
iret
sahf
mov
dec
popf
popf
repnz
les
cmp
pop
or
movsl
push
push
dec
mull
push
jno
scas
mov
pop
sarl
es
and
mov
fisubs
mulb
xorb
sub
loope
push
sub
lcall
mov
pop
pop
jg
cmp
lcall
outsl
out
jnp
popa
sub
and
loopne
mov
pop
fsub
incl
cmp
mov
inc
jmp
mov
aas
sub
in
out
push
lea
daa
gs
xor
sbbl
aad
fildl
jo
inc
mov
mov
push
pop
mov
jbe
or
adc
jb
insb
mov
mov
icebp
pop
or
popf
inc
pop
int
pop
inc
push
sarl
into
int
push
fstpl
jl
sbb
jbe
mov
insl
cs
cltd
jnp
dec
shl
dec
data16
pop
mov
adc
sub
cmpsb
loope
jbe
imul
iret
jmp
fwait
pop
loope
inc
test
addl
into
mov
lods
test
outsb
mov
inc
dec
addb
jecxz
mov
inc
enter
sbb
ds
cmp
lret
pop
out
add
sbbb
cmpsb
adc
xchg
inc
pop
arpl
pop
imul
pop
iret
inc
stos
and
or
data16
int3
cwtl
daa
xchg
repnz
ret
lret
int
jo
xor
jb
add
sub
jae
pop
cltd
std
sbb
fnsave
jg
loopne,pn
leave
sbb
jecxz
stos
pop
insb
dec
sbb
into
add
movsbl
mov
add
or
repz
out
jle
sub
scas
sarl
test
repz
popa
scas
cmp
outsl
sub
loopne
stos
int3
jne
and
and
mov
dec
or
stos
shrl
jg
sbb
out
xor
out
les
mov
jg
mov
dec
add
jl
orl
mov
push
lods
jnp
cltd
in
sub
mov
std
xchg
rorl
xchg
das
sbb
jns
lahf
gs
outsb
push
mov
mov
int3
mov
inc
shrb
xorl
pusha
adc
cwtl
dec
sbb
mov
fisttps
in
or
movsl
out
mov
stos
mov
push
repnz
jo
enter
repnz
test
add
jmp
push
pop
jae
sbb
cs
fdivr
loopne
jno
inc
push
jl
push
pop
add
mov
pop
inc
fsubl
push
jmp
lods
push
mov
in
in
bound
les
cmp
or
test
mov
sub
inc
int3
lret
outsb
fsts
pop
cmpsb
or
notb
icebp
sbb
out
inc
mul
sub
ret
mov
lods
jno
add
cmp
cmp
and
and
loopne
pop
ss
cli
xchg
pop
dec
mov
sbb
push
or
xchg
or
in
fs
imul
out
dec
loop
jge
idivl
lods
fidivrs
xchg
out
cmp
bound
test
pop
mov
cmp
lea
cmp
or
jp
xor
jle
clc
data16
and
cli
add
stos
sbbb
loope
call
push
int3
cmpsb
dec
dec
xchg
negl
jl
sub
dec
jae
in
or
push
push
jg
test
pop
sub
adcl
mov
stos
jae
std
push
insl
mov
dec
mov
aas
rolb
adc
imul
addr16
mov
sub
sbb
or
aad
sub
andb
cmpsl
cmp
pop
lods
pop
shrb
jmp
jno
lods
jae
inc
imul
shrl
pop
jb
add
xchg
jne
push
adc
push
xor
lret
icebp
mov
jmp
bound
push
fiaddl
pop
std
or
cltd
adc
jae
push
data16
mov
pop
or
insl
adc
mov
push
mov
das
sbb
ret
loopne
lea
outsl
fs
inc
adc
adc
or
pop
xor
adc
subl
in
cmp
mov
nop
sahf
sahf
int3
je
add
push
cli
dec
ret
adc
xor
mov
mov
xchg
pop
pop
adc
sbb
ret
addr16
mov
std
xor
lea
dec
adc
mov
xchg
dec
dec
out
stos
inc
insb
enter
cmp
adc
sbb
repz
repz
in
dec
and
mov
outsl
in
cltd
scas
mov
mov
shl
out
into
add
repz
inc
js
xor
stos
pop
push
and
or
aad
pop
gs
ja
cmp
mov
scas
cltd
rcrb
and
rcrl
and
xchg
adc
sub
pop
loopne
test
flds
adc
les
hlt
sub
adc
pop
aaa
sbb
mov
adc
mov
push
xor
hlt
es
test
je
fisubs
mov
xchg
shlb
adc
mov
mov
sbb
cwtl
push
aam
pushf
fnstsw
cli
stos
popf
xlat
and
rcrb
cmp
pop
les
dec
jne
mov
pop
adcl
cld
add
rcll
sub
pusha
pop
cli
aaa
sbb
add
test
or
inc
xchg
lahf
mov
loopne
push
mov
cld
loopne
sahf
enter
xchg
lcall
xchg
and
mov
xor
cld
sub
pop
das
xchg
jnp
test
scas
dec
orb
out
or
dec
shr
out
imul
mov
or
mov
adc
out
lods
sbb
lds
jge
pop
aas
lret
test
jle
adc
push
push
sub
xchg
stc
lcall
mov
inc
xchg
fnstcw
add
or
cmp
sbb
shll
insb
mov
mov
fs
out
sbb
lods
mov
cwtl
mov
pop
jp
js
loop
mov
jmp
sub
inc
test
sub
iret
xor
lods
clc
mov
sub
das
sub
cltd
lea
pop
pop
adc
adc
push
pop
scas
data16
aas
outsl
jmp
movsl
outsb
scas
sub
adc
add
xchg
mov
pop
aas
daa
pop
in
mov
mov
cmp
movsl
rolb
stos
into
cli
or
sbb
stos
stos
sbb
shlb
leave
cmpsb
sub
test
jne
sub
pop
sti
jb
pop
sub
xor
cmp
pop
dec
in
js
jge
inc
repnz
add
loope
data16
sbb
cmp
jge
sarb
jne
repz
test
andb
mov
mov
adc
xchg
in
mov
push
mov
mov
jge
sub
test
xchg
push
sbb
and
push
dec
mov
xor
subb
xor
adc
push
mov
mov
rorl
push
xor
mov
sub
sbb
add
incl
cmp
fsubl
sbb
mov
sub
cmpsb
shl
sub
dec
shrl
aas
push
lcall
insb
dec
mov
xor
mov
cwtl
mov
adc
cwtl
fxch
loopne
add
jmp
pop
pop
mov
lahf
add
cwtl
xor
fsubrl
outsb
cs
mov
loop
aam
xchg
negb
dec
popf
inc
cmp
mov
dec
push
push
hlt
sbb
add
push
xor
inc
mov
icebp
mov
out
popw
loopne
dec
leave
jge
mov
adc
cmc
out
mov
add
dec
lcall
xchg
adcl
xchg
orl
push
mov
arpl
jg
sub
test
cs
mov
out
es
fimull
xlat
stos
dec
sub
pusha
jne
pop
cwtl
movsb
mov
xlat
jp
psubusw
xor
pushf
fs
xor
in
push
lods
cld
int
mov
dec
insl
jns
dec
cmc
push
jno
loopne
sbb
or
loop
outsb
repnz
jle
out
add
out
popf
hlt
xor
mov
or
cmpsl
cmp
outsb
imul
repz
or
add
mov
cmpsb
aad
scas
popl
in
jo
clc
movsl
or
mov
and
pusha
add
aam
jne
fwait
insb
jl
and
adc
push
addr16
add
js
push
add
pop
inc
in
arpl
ror
out
mov
mov
ret
mov
xchg
pop
movsb
xor
sti
mov
adc
into
xacquire
push
iret
or
fs
cs
rcl
fs
test
push
mov
pop
aaa
jl
ds
test
int3
test
dec
push
outsb
and
mov
dec
imul
mov
out
fimuls
push
pop
mov
mov
jl
js
int
cmp
xor
push
es
mov
jle
jge
lcall
pop
xor
imul
out
leave
lock
ds
xlat
iret
outsb
push
std
movsb
in
sahf
ja
mov
inc
inc
jle
push
and
mov
or
cmp
lods
insl
jbe
notb
pop
push
in
adc
sbb
ljmp
pop
ljmp
sub
mov
dec
pop
int
dec
arpl
sbb
idivb
pop
mov
push
in
inc
in
out
mov
or
sub
pop
outsl
jo
movl
aas
repz
mov
jmp
out
outsb
mov
out
sbb
jg
pop
or
mov
push
mov
jno
andb
test
ret
js
cltd
and
hlt
fists
call
cmp
cmp
jecxz
es
mov
pop
test
xchg
xlat
jno
repnz
orb
and
stos
lea
popf
pop
fucomip
test
jne
lret
pop
or
mov
push
mov
inc
jae
cmp
addr16
lods
das
int3
mov
jle
leave
cmpsl
cmp
stos
xchg
imul
mov
mov
sahf
jp
pop
xor
mov
hlt
movl
add
pop
imul
fstpl
sahf
repz
stos
loopne
cmp
fidivrl
es
sarb
sub
pop
jmp
cmp
movsl
shrb
out
test
cs
xchg
xchg
xchg
jo
rcl
sbb
adc
mov
movsb
loope
mov
jmp
addb
inc
adc
add
pop
movsl
out
push
iret
fdivl
adc
push
push
and
add
mov
stc
orl
xchg
ja
mov
xchg
sbb
sti
sbb
mov
jne
mov
xlat
shrb
add
pop
ret
inc
inc
sub
cs
sti
mov
in
test
add
orl
int
push
and
jp
cs
cli
lods
xlat
popfw
ss
push
pop
mov
xchg
and
jp
loop
js,pn
sub
sbb
xlat
or
stc
mov
test
pop
jno
xchg
cmp
ss
xchg
addb
sahf
ficomps
mov
add
hlt
push
sahf
dec
mov
rol
pop
frstor
inc
lods
pop
loopne
cmp
mov
mov
and
dec
in
push
std
sub
push
fidivrl
inc
shrb
xchg
mov
sbb
aaa
adc
in
mulb
mov
repz
cwtl
jns
scas
incl
push
loopew
pop
ret
or
mov
aad
popf
incb
cwtl
lret
sbb
push
sbb
cmc
and
mov
gs
jecxz
push
sarb
push
sbb
jo
js
lods
bound
pop
lahf
shl
inc
jge
mov
idivb
dec
iret
stos
ret
mov
add
pop
clc
inc
popf
and
or
mov
lock
loope
ja
leave
leave
lds
mov
mov
cmp
loopne
and
test
andps
test
and
pop
inc
nop
in
cli
lcall
into
mov
out
mov
add
cmp
pop
inc
push
and
aam
adc
push
push
sbb
call
orb
push
sub
cs
xchg
inc
dec
movsb
pop
mov
cmpsb
pop
mov
mov
push
push
test
out
test
pop
dec
push
jno
push
inc
ljmp
int3
sub
iret
scas
pop
outsb
outsb
ja
arpl
xchg
ret
jmp
jmp
sahf
xchg
int
aam
push
cmpsl
lret
push
ret
pop
insb
jp
push
jae
add
push
or
sbb
jno
xor
cmp
cmc
test
sbb
and
insb
repnz
repz
sbb
insl
mov
movsl
bound
fstps
outsb
dec
xor
xlat
pop
mov
cmc
pop
sbb
cmp
cld
mov
fstl
mov
jmp
pushf
add
mov
sahf
push
insb
ffreep
push
fcmovbe
sub
cmp
xor
mov
fstl
fs
sub
adc
lret
add
lods
pushf
mov
fsubs
push
jne
flds
popf
mov
and
ret
loope
in
call
pop
movsl
sub
gs
push
out
push
mov
mov
sub
fsubrs
xor
mov
jb
mov
xor
clc
shr
andl
stos
jg
scas
pushf
and
pusha
pop
sbb
cmp
stos
sbb
or
inc
xor
mov
sar
mov
pop
xchg
rcll
popf
jecxz
lods
icebp
fildll
sbbb
jle
adc
into
shlb
mov
sahf
aad
enter
lcall
movsb
cmp
test
imul
nop
xchg
pop
mov
dec
jnp
jmp
mov
popa
and
scas
hlt
lods
xor
add
shll
mov
xchg
jmp
xchg
mov
xor
fildl
jbe
adc
xchg
jge
xchg
orb
in
bound
push
push
ljmp
xorl
add
add
inc
mov
orl
divb
notb
add
dec
fcompl
mov
mov
jge
push
sti
arpl
fwait
mov
fldl
mov
or
scas
xchg
inc
pop
lods
loop
das
mov
sbb
addl
mov
inc
mov
cmc
orl
pop
popa
fcoms
and
inc
aad
dec
mov
insl
clc
xor
push
leave
cmp
mov
cli
add
push
insl
xchg
loop
fxch
repz
xlat
mov
lods
jno
xorl
fnsetpm(287
lahf
inc
pop
in
gs
jno
shrb
movsl
push
scas
rcrb
add
jne
lret
mov
mov
adc
xchg
pushl
mov
add
mov
or
in
cmc
inc
add
jnp
sbb
addr16
mov
mov
jmp
dec
out
mov
cmpsl
mov
ja
fidivs
xor
lds
sbb
xor
dec
dec
mov
adc
xor
xchg
xor
cmp
faddl
fcoml
test
jne
sbb
aas
dec
mov
pusha
sbb
mov
fnstenv
rolb
shll
mov
adc
add
clc
and
arpl
das
stos
xor
test
cmp
and
lret
xchg
push
pop
mov
leave
jo
ror
xor
arpl
sub
das
or
dec
push
outsb
lds
outsb
sbb
stos
test
cs
jecxz
mov
jl
dec
jle
ljmp
outsb
pop
lds
pop
dec
sbb
or
mov
cmp
adc
cmpsl
adcl
jno
lods
popf
dec
stos
ja
mov
xchg
or
and
in
or
lret
dec
insb
fsubs
mov
pop
mov
inc
xchg
inc
addr16
cmc
nop
out
push
push
aaa
adc
into
cmp
into
cmpsl
enter
rorl
popa
stos
out
inc
fldl
sbb
add
adc
add
jne
lcall
outsl
dec
inc
repnz
div
bound
loop
jmp
mov
arpl
adc
mov
push
cmp
push
mov
sbb
mov
enter
xchg
loopne
lock
cwtl
adcb
enter
add
fs
add
xor
add
lods
outsl
bound
aaa
pop
fucomp
mov
rorl
add
push
xor
push
insl
mov
clc
enter
mov
mov
test
mov
sar
mov
push
mov
shrb
ficoml
enter
cli
fldlg2
xor
dec
sub
mov
mov
sub
mov
std
jnp
add
test
inc
pop
jmp
test
jno
fiaddl
jp
and
xchg
jnp
bound
out
jmp
fwait
sbb
cmpsb
inc
jae
pop
jae
mov
add
scas
push
fdivl
cli
pop
shrl
push
push
lods
xchg
lret
inc
adc
sub
push
icebp
pop
in
test
pop
call
dec
outsl
enter
jo
xchg
daa
mov
dec
mov
shlb
sbb
xor
cld
jne
movsb
push
adc
sahf
mov
movsb
sbb
or
jle
mov
fisttps
repz
outsb
inc
test
sbb
pop
sub
test
and
je
movsl
aas
nop
pop
push
push
cmpsl
pop
insb
adc
or
pop
dec
xchg
ss
inc
cmpb
sub
cmp
clc
in
scas
inc
jge
add
inc
mov
xchg
add
stc
aaa
push
pop
cmc
pop
pop
xchg
scas
aaa
dec
sbb
ss
cs
mov
lcall
cltd
lahf
or
mov
loope
pop
adc
lret
sahf
jge
test
aad
cmp
pop
pop
mov
mov
push
fadds
push
pop
std
sbb
stc
addl
cmp
in
dec
imul
orb
negb
sahf
test
nop
sub
push
mov
mov
and
mov
push
loopne
pop
aas
inc
xchg
ret
push
inc
push
pusha
cmc
icebp
sahf
fistps
daa
pop
daa
fbld
test
js
mov
mov
popf
es
aaa
add
xor
or
push
lret
test
mov
or
mov
adc
popa
and
aas
inc
test
stos
push
cmc
or
inc
xor
enter
cmp
cmp
pop
inc
sbb
sbb
jp
addr16
pop
sbb
and
push
repz
test
stos
scas
cmpsl
adc
lahf
inc
rorl
xor
aam
and
leave
fsubrp
jno
pop
je
xlat
leave
push
mov
jbe
pop
xchg
mov
in
flds
and
dec
imul
int3
in
adc
sbb
cltd
shll
pop
sarb
addr16
xor
mov
imul
xchg
adc
lods
dec
adc
cmpsb
inc
test
xlat
cmp
pop
stc
inc
and
loop
jle
jne
mov
cmp
or
aas
mov
icebp
test
xor
fildll
adc
dec
fucomp
xor
imul
out
xor
inc
adc
setae
popf
arpl
dec
nop
dec
pop
jno
gs
ret
daa
fisubrs
repz
xchg
or
inc
imul
lahf
jge
out
jl
and
xchg
mov
popa
test
lahf
sbb
dec
mov
pop
push
and
test
dec
leave
rorl
das
daa
inc
sbb
mov
sbb
leave
mov
push
adc
ret
xor
xchg
jne
shrl
leave
jmp
hlt
aaa
jno
pause
fwait
sbb
cmp
das
fs
xorb
divl
mov
mov
stos
mov
add
out
jns
pop
jb
pop
test
pop
sub
mov
jmp
mov
ret
shlb
jp
std
push
mov
loop
shll
in
test
js
mov
adc
test
mov
lahf
fisttps
arpl
hlt
dec
pop
outsb
fstl
insl
cltd
xor
jae
adc
ret
jecxz
sub
and
lahf
fdivrl
fimuls
mov
xor
mov
nop
bound
popa
pop
repnz
orl
daa
imul
repnz
fistpl
and
ja
dec
add
outsb
cli
push
call
xchg
cmc
sbb
mov
loope
mov
shlb
rcr
sub
sbb
inc
sbb
in
and
je
movsl
jne
sub
sub
hlt
xchg
pop
jge
lea
jb
mov
shrl
loope
in
mov
movsb
gs
stos
jle
cmp
push
sarb
loop
out
or
dec
insb
movsb
sub
and
push
mov
push
push
inc
mov
stos
or
inc
pop
push
ret
pusha
push
aam
xchg
test
adc
dec
cmpl
cli
xchg
out
sahf
mov
xor
sub
mov
int3
jge
push
jp
adc
adc
push
and
sahf
push
xchg
jbe
test
pushf
rcrl
dec
and
aam
xlat
add
lods
inc
push
mov
push
scas
dec
and
xor
cmp
cmp
test
or
icebp
decl
pop
fwait
mov
xchg
sub
jle
add
xor
fisubrs
test
xchg
subl
xchg
loopne
dec
shll
popa
imul
mov
lret
es
inc
cmc
mov
fwait
and
in
mov
sub
lret
xor
jle
add
push
push
xchg
aas
sub
nop
mov
cmp
sub
testb
jg
add
push
mov
into
sarb
xchg
test
js
inc
mov
jae
adc
dec
push
cmp
push
out
aad
xor
cwtl
or
cld
cmp
pushf
sbb
mov
dec
stos
lods
aaa
sbb
insb
int
lret
bound
mov
jae
mov
or
and
aam
into
adc
add
pop
pop
fwait
or
sbb
pop
stos
into
mov
jb
jno
sub
mov
jg
mov
lret
lcall
insb
adc
and
mov
jle
insb
mov
fwait
xchg
in
enter
adc
imul
addr16
dec
subl
dec
scas
fwait
lock
je
lds
rorb
xchg
xchg
js
scas
add
pop
cmpsl
pusha
xor
push
push
adc
xlat
idivb
sub
dec
jo
call
popa
adc
dec
cmp
aam
dec
jae
out
gs
faddp
jge
add
xor
enter
adc
dec
sbb
cmp
shrb
sti
or
pop
in
movb
xor
das
sbb
push
int
enter
into
test
push
dec
push
lahf
mov
inc
mov
cli
xor
movsb
out
lods
sub
fstl
icebp
add
arpl
push
lds
cmp
lahf
stc
or
lods
mov
pop
stos
js
movsl
sbb
into
loopne
xlat
aaa
sbb
int3
clc
pop
addb
jne
in
pop
or
loope
and
inc
test
add
ss
mov
movl
dec
imul
lds
mov
outsb
sub
lods
jl
mov
pop
ss
frstor
adc
sbb
xor
mov
sub
movsb
push
out
pop
mov
iret
mov
push
mov
les
and
aaa
data16
pop
pop
mov
mov
push
jecxz
dec
sub
jae
fists
dec
pop
mov
movsl
xchg
ss
mov
push
call
imul
mov
int3
mov
push
roll
call
das
out
adc
icebp
jl
xor
test
insl
add
push
scas
and
xchg
push
mov
mov
xor
xor
pushf
mov
data16
pop
pusha
scas
adc
dec
adc
or
aam
inc
rorb
dec
adc
rcrl
bound
lods
mov
cli
bound
push
lret
aad
xor
sub
ret
cwtl
pop
push
mov
adc
xchg
push
repz
mov
repz
ror
sbb
imul
out
aas
pop
int3
popa
fistl
rcrb
xor
mov
jg
sbb
pushf
xor
cmp
filds
lcall
cld
arpl
or
mov
mov
je
lahf
fcoms
cmp
xchg
fcomi
out
cmp
fwait
out
das
insl
push
sub
mov
gs
dec
sbb
fistps
dec
lret
clc
sti
jb
sbb
pop
pop
or
std
lahf
fsubs
fcompl
or
jno
nop
addr16
xor
ficompl
xor
mov
ja
scas
clc
fmull
jne
push
and
xor
add
mov
popf
lods
pushf
xchg
imul
jp
ror
or
xchg
inc
jbe
call
adc
iret
mov
pushf
test
mov
stos
push
loop
xchg
or
test
mov
lods
vmovddup
jae
lods
push
jmp
add
dec
jmp
mov
mov
arpl
iret
repz
arpl
lds
sbb
rorl
frstor
push
pop
sti
jns
jmp
loop
xchg
lock
jns
cmp
mov
dec
jp
mov
mov
imul
mov
mov
fldl
nop
push
into
testl
sbb
cmc
sbb
imul
push
pop
rcrl
je
sbb
jl
cmp
out
and
sbb
and
push
mov
add
add
bound
pop
mov
inc
outsb
pop
int
pushf
stos
es
sub
mov
mov
inc
sti
out
push
repnz
pop
punpcklbw
push
jecxz
jns
loope
pop
fisttpll
fxch
mov
push
inc
sbb
aam
icebp
lret
xor
mov
push
arpl
out
mov
pop
mov
push
adc
sub
cmp
daa
or
les
push
xlat
scas
pop
inc
addr16
ljmp
mov
mov
inc
mov
rolb
or
and
inc
jno
dec
arpl
mov
or
pop
idivl
mov
std
test
xchg
movsb
in
push
mov
jnp
dec
aaa
push
nop
adc
fdivrp
fpatan
in
and
lcall
pushf
scas
loop
mov
push
test
gs
clc
dec
push
fidivl
addl
loopne
adc
sbb
movsl
mov
sub
sbb
insb
cmpsl
pop
js
incl
stos
adc
ficoms
int3
or
mov
cmpsb
fdivl
sbb
js
jle
clc
fsubs
push
adc
sbb
adc
pop
data16
pop
test
xlat
sbb
xor
das
adcl
loop
das
jne
iret
test
sub
mov
jmp
jg
sub
aad
loopne
inc
push
arpl
test
sub
scas
mov
xor
add
fsubrl
std
and
jecxz
push
mov
jno
pop
push
and
sbb
dec
push
into
sub
pop
jbe
orl
leave
rcrl
mov
hlt
fisttpl
mov
mov
cs
popa
loop
adc
mov
mov
mov
hlt
insb
and
dec
call
imul
movsl
js
in
dec
push
or
fstpl
jp
mov
push
mov
or
mov
stc
nop
jne
mov
cmp
repz
and
outsl
push
mov
rcll
ret
add
pop
mov
push
ja
pop
pop
dec
test
test
push
aam
fwait
mov
dec
dec
pop
fwait
mov
sub
das
stos
pop
mov
xor
mov
shl
adc
xor
insb
cmc
lds
cmp
and
add
rcl
fldenv
push
addr16
lcall
loope
popf
xchg
icebp
add
and
test
movsb
sbb
xchg
xor
lret
hlt
sub
inc
inc
lds
cmp
xor
xorb
or
insl
std
adc
pop
dec
mov
notb
xchg
div
test
xor
pop
jo
aad
adc
push
lds
mov
test
imul
std
and
adc
in
std
sbb
jno
test
mov
mov
lods
sub
dec
add
fwait
push
roll
andl
xor
int
mov
xlat
sti
jnp
cld
es
loop
xchg
sub
or
std
jmp
xor
fsubrl
jo
andb
push
cmp
sub
fwait
movsl
test
shl
lock
jl
sub
ret
aad
fistps
lds
sbb
lock
insl
sbb
jns
scas
clc
inc
mov
cwtl
inc
loopne,pn
and
inc
lret
sub
stos
stc
loope
lret
jbe
fsts
clc
lret
sahf
mov
mov
push
mov
cmpsl
pop
lea
sbb
jmp
mov
mov
inc
clc
cltd
lock
insl
cmpsb
mov
mov
repz
sbb
jle
loope
cmp
adc
imul
aaa
inc
pop
shll
mov
sbb
pop
std
imul
imul
test
out
subb
inc
inc
stc
popf
out
es
sti
xor
sub
int3
pushf
xlat
shl
inc
pop
adc
pop
sub
rcrb
or
cmc
xor
mov
cld
push
or
shl
cld
icebp
xchg
sbb
mov
cmp
hlt
xor
cmp
xchg
mov
jnp
pop
das
cmp
and
xchg
and
mov
movsl
push
pop
inc
loop
int3
push
cmp
or
cmpsb
mov
lods
outsl
add
push
std
fidivrs
insb
add
mov
fimull
mov
js
repz
enter
fcoml
aas
aad
lret
fdivp
repz
sub
sbb
fstpl
pop
shll
push
leave
pusha
lds
fildll
sbb
or
inc
and
idivb
mov
movsb
shl
or
inc
lea
xchg
dec
pop
inc
xor
xor
orb
pushf
sbb
lcall
mov
push
or
sarb
push
and
and
fdivs
mov
dec
into
lahf
mov
stc
sub
xchg
mov
movaps
mov
subb
push
fimull
and
lods
jno
pop
adc
scas
push
add
stos
jge
insb
or
push
scas
xor
lea
cmc
repz
outsl
adc
bound
sub
cld
mov
pusha
dec
xchg
jg
negl
pop
fildll
xchg
fildl
inc
lahf
lea
jp
scas
push
inc
sahf
rcll
pop
ds
jl
and
cmp
mov
mov
and
sbb
dec
out
adc
aad
decb
popf
leave
push
mov
mov
sbb
jnp
mov
dec
sub
jmp
test
mov
out
mov
enter
push
dec
adc
dec
fs
jbe
xchg
jne
mov
out
fdivrl
aad
cld
loope
xchg
imul
push
ret
jg
xchg
dec
push
adc
adc
and
cmp
bound
mov
aaa
mov
xchg
and
add
fisttps
lods
push
jmp
or
xchg
ss
cmp
jmp
nop
gs
sahf
out
scas
inc
mov
adc
adc
mov
addr16
push
adc
or
mov
push
mov
cmp
and
inc
das
insl
push
mov
xor
mov
insl
les
dec
lcall
outsl
scas
daa
xor
xchg
or
cli
loop
std
jl
cmp
cs
pop
mov
mov
dec
xor
jno
xchg
push
pop
fidivrs
insb
inc
cmp
mov
and
out
dec
aam
lds
jmp
mov
sbb
sub
int3
xchg
push
outsl
mov
pop
mov
dec
sub
sub
jmp
adc
movsb
nop
mov
adc
jbe
push
sbb
movsb
and
bound
fs
ror
repz
addr16
xor
push
adc
imul
int
fstpt
divl
mov
cmp
xchg
ss
into
mov
mov
sub
dec
push
xchg
mov
sbb
inc
xchg
or
pop
dec
outsb
mov
and
fdivr
mov
outsl
mov
into
mov
jnp
dec
pop
sbb
das
cld
movsl
sbb
jmp
add
pop
lcall
xlat
in
data16
push
fwait
ror
pop
push
pop
sub
ljmp
xor
ret
inc
rol
outsb
sbb
cmp
lods
and
nop
pop
mov
divl
pusha
xchg
mov
pop
enter
push
dec
xchg
xchg
mov
sti
push
into
jg
mov
movl
mov
dec
inc
fsubl
jge
mov
mov
push
fs
es
insl
xchg
cmp
out
mov
imul
test
stc
mov
jo
bound
fwait
inc
pop
imul
test
add
adc
xchg
and
mov
or
jno
pop
lcall
stos
repz
fiadds
and
jae
shl
lahf
xchg
loope
or
test
xor
lock
pop
inc
popa
adc
bound
jb
inc
test
pop
loop
movsl
leave
nop
add
xchg
inc
int
sarl
sarl
push
shl
adc
adc
shrb
push
sbb
push
mov
push
sub
scas
cmp
iret
xor
cmpsl
sbb
sub
sti
mov
pop
push
mov
xchg
pop
or
ret
mov
daa
and
jne
cmc
fisubrs
aad
repnz
emms
mov
pop
jge
fsubrl
dec
push
mov
movswl
mov
aas
repz
pop
pop
pop
das
xor
lock
pushf
push
std
stc
push
ss
jo
rclb
xorl
inc
sbb
jns
hlt
add
lcall
or
or
fwait
mov
inc
out
or
inc
jbe
dec
clc
sub
leave
das
rdpmc
lret
add
js
sub
test
dec
sbb
xchg
inc
jbe
mov
out
jnp
movsl
std
ljmp
out
movntps
repz
mov
adc
and
adc
test
inc
sbb
push
xor
inc
mov
or
push
repz
mov
mov
push
fs
dec
mov
sbb
hlt
and
mov
mov
mov
bound
scas
js
push
scas
popa
ds
mov
fcoms
jle
jg
xchg
ror
ja
clc
lea
out
fsubp
aas
add
mov
push
mov
aad
mov
inc
mov
sbb
lret
mov
cmp
push
aad
stc
push
mov
insb
sub
test
mov
jb
mov
push
insb
in
or
test
arpl
or
les
cmp
int3
repz
mov
dec
sahf
push
jle
aaa
push
mov
sub
cltd
jns
adc
jbe
inc
mov
jge
js
fwait
out
dec
or
loop
out
and
cltd
repz
sbb
push
mov
add
xor
arpl
xor
add
mov
jns
dec
mov
out
add
mov
mov
mov
mov
enter
or
test
inc
pusha
data16
jl
xchg
push
jno
jo
and
imul
call
jl
mov
dec
shl
ret
mov
int3
lock
push
push
lea
dec
cld
fs
xchg
adc
repz
inc
hlt
dec
push
dec
jmp
js
in
in
mov
jns
xor
adc
mov
mov
jecxz
inc
add
je
mov
pushf
scas
mov
loopne
dec
pushf
mov
lea
cmp
pop
mov
adc
fwait
mov
std
stos
push
arpl
jg
dec
je
in
stc
cmp
push
pop
mov
mov
outsl
jbe
mov
fdivl
jbe
xor
mov
repnz
fnstenv
adc
negb
jg
lds
fwait
jo
mov
test
inc
inc
ds
add
xchg
data16
dec
dec
das
adc
inc
faddl
aas
cmp
dec
add
mov
repnz
fisubl
push
sbb
mov
inc
mov
adc
push
cmpsb
or
jmp
add
lea
jecxz
inc
fistpl
jns
rorb
rolb
fisubrl
les
call
xor
out
movsb
cmc
mov
and
lds
or
jl
fwait
or
arpl
in
loope
std
das
push
clc
jns
push
cmp
std
push
cmp
inc
jae
mov
push
dec
mov
cmp
pop
add
jne,pt
mov
shlb
sub
and
dec
ret
and
testl
mov
sub
sub
das
int
mov
xchg
push
jg
enter
mov
xchg
mov
adc
cmp
push
jle
sub
mov
ja
ljmp
sbb
sti
jmp
outsb
popa
movsl
xor
imul
mov
mov
jl
jae
hlt
mov
push
movsb
out
inc
sub
dec
adc
lret
pop
adc
mov
cmc
xlat
loope
in
or
sbb
jge
xchg
pop
push
pop
movsb
jmp
dec
cld
inc
jns
xchg
lods
shll
inc
inc
lret
cltd
in
scas
clc
out
out
shl
stc
lahf
movsl
imul
dec
or
xchg
pop
push
das
and
les
mov
in
and
mov
stos
ds
add
or
dec
rcll
gs
cmpb
shrl
mov
pminub
jecxz
or
dec
sarb
mov
outsb
mov
mov
adc
mov
dec
inc
lahf
mov
gs
fldcw
push
aas
add
xor
xchg
or
sahf
outsl
stos
xchg
dec
dec
lea
and
push
enter
in
jmp
inc
push
mov
inc
inc
divb
jle
hlt
fsubrl
mulb
ljmp
mov
popa
test
pop
test
test
jno
sbb
or
lret
and
insl
mov
lock
cwtl
int
mov
mov
cmp
sub
ljmp
adc
jl
mov
shl
stc
aas
push
out
inc
daa
mov
or
cltd
sub
fwait
pop
jne
adc
daa
es
out
jecxz
ljmp
push
std
ret
dec
add
imul
mov
xchg
iret
mov
adc
fnsave
ret
lahf
test
inc
lds
js
outsl
je
cmp
sub
cmpsl
stos
pop
js
dec
ljmp
adc
cmpsb
pop
lds
mov
push
lea
and
push
int3
pop
std
mov
out
cmp
adcb
clc
aad
pop
test
adc
data16
jae
andl
rclb
lahf
cld
ljmp
inc
mov
cmp
rcr
scas
jp
mov
mov
rorl
cmp
inc
and
lret
xchg
or
xchg
arpl
push
into
dec
inc
out
call
leave
push
scas
movsl
dec
jnp
mov
sub
or
stc
in
movsl
jmp
and
xor
jp
mov
mov
jp
test
dec
push
sahf
mov
out
mov
mov
add
mov
loop
ja
test
mov
cmpsl
pop
addb
or
rcrl
stc
add
stos
push
aas
ret
and
cwtl
in
movsb
rcll
dec
dec
daa
lcall
std
push
xchg
inc
je
sbb
and
inc
les
lret
jns
lock
stos
cld
fidivrl
repnz
cmc
or
and
clc
test
push
es
lcall
pop
push
xor
lcall
pop
cmpsl
ja
leave
xchg
andl
andb
pushf
cmp
mov
cld
push
push
mov
lods
in
outsb
jb
push
and
lock
leave
cli
lret
mov
fs
cmp
out
inc
daa
cmc
adc
ret
cmp
cmp
inc
xor
cwtl
push
push
dec
xor
mov
pop
xor
mov
out
mov
cld
jle
pop
adc
mov
js
cltd
inc
adc
adc
stos
sbb
cmpsl
and
insl
test
subl
sbb
sub
and
movsb
nop
xchg
cmpsb
repz
push
aam
pop
out
outsb
aam
aaa
xchg
push
push
jnp
or
jle
pushf
pop
icebp
cmc
andl
cmp
cmp
inc
test
int3
push
mov
fiaddl
jae
jl
lock
daa
jmp
xor
call
mov
mov
js
inc
into
ljmp
out
arpl
aad
adc
pop
lods
sbb
test
jne
into
inc
movsb
xlat
push
pop
jg
stc
cld
inc
push
pop
jecxz
jl
xchg
scas
imul
dec
sbb
xchg
push
aam
clc
int3
jb
jnp
sbb
add
enter
rorl
popa
stos
fnstcw
enter
ss
ja
orb
pushf
je
mov
jb
aad
add
aaa
aad
mov
pop
xor
inc
cmp
push
add
and
inc
mov
add
aaa
sahf
mov
dec
push
imul
mov
out
cmp
dec
out
pop
test
mov
lods
xor
push
mov
pop
inc
cli
psubw
inc
out
jns,pt
ficompl
mov
daa
pop
ja
pop
xor
jmp
rcrb
xchg
inc
pushf
xlat
mov
mov
bound
addb
loop
lods
xchg
or
cmpsl
sahf
test
outsb
sub
push
cmpsb
dec
ja
les
mov
sbb
jne
jo
inc
enter
insb
xorb
mov
pop
jmp
out
pop
mov
cmp
adc
sub
data16
pop
and
jo
jg
push
mov
jb
ds
mov
out
lret
pop
pop
nop
mov
cwtl
mov
mov
test
mov
fwait
adc
jg
subb
dec
lods
je
push
mov
adc
loopne
subl
fildll
mov
inc
jge
xchg
fcomip
fldl
jmp
mov
aaa
dec
mov
dec
xchg
mov
xchg
mov
mov
push
cmpsb
enter
mov
sbb
add
or
ss
sub
mov
mov
jo
out
pop
dec
mov
mov
add
dec
jge
xchg
rclb
dec
sti
mov
add
xor
pop
pop
mov
jne
inc
icebp
addl
repnz
cli
push
xor
pop
out
xor
shrb
adc
jge
pop
aaa
jbe
lods
pop
ja
cmc
stos
pop
imul
pop
ds
mov
adc
xor
fistpll
andb
cmp
ljmp
in
cs
inc
xchg
cmp
imul
data16
mov
mov
mov
push
mov
and
mov
aam
dec
cld
rcrl
loopne
inc
jmp
mov
js
or
sub
dec
lret
and
bound
mov
jp
xchg
jmp
pop
adc
sbb
or
aas
in
xchg
pushf
mov
or
inc
mov
and
negb
arpl
sbb
pop
stc
mov
mov
imul
pop
subb
imul
subl
cmp
mov
outsb
inc
xor
es
call
and
xchg
fsts
outsb
mov
das
and
orl
test
lock
incl
and
repnz
push
cltd
fsubrs
arpl
xchg
jg
leave
inc
pop
jle
cmp
adc
pushf
jp
or
and
xchg
pop
scas
aam
aad
cmp
cmp
lods
mov
sar
xchg
pop
clc
imul
bound
pushf
xor
mov
dec
cmp
and
ja
cmpsl
lahf
pop
push
lcall
enterw
mov
mov
cs
icebp
xchg
push
cmp
xorb
loopne
ljmp
sbb
and
inc
mov
xchg
mov
dec
add
mov
pop
mov
hlt
pop
mov
sub
shl
addr16
mov
or
out
pop
jne
xchg
or
movsl
pop
mov
test
or
jle
ja
lret
gs
fwait
rcrl
fiadds
test
sub
aam
sub
mov
pop
push
mov
mov
sub
adc
mov
push
testb
adc
adc
push
mov
loop
jmp
pop
enter
xchg
xchg
jo
out
mov
ss
push
jb
addl
arpl
adc
pop
inc
fistps
es
push
pop
jnp
inc
mull
cwtl
es
hlt
punpckldq
adc
js
sub
test
pop
mov
jecxz
out
into
pop
inc
mov
inc
pop
pop
xor
mov
inc
test
lahf
adc
jle
stc
adc
insb
lods
cmp
inc
cmpsb
js
mov
push
imul
mov
je
popa
mov
dec
sbb
lret
movsb
push
mov
cmpsb
push
shrb
add
rcrl
fiaddl
andb
inc
inc
mov
sar
test
aas
sbb
rclb
dec
in
xor
insl
inc
cs
dec
lea
push
adc
add
je
fimuls
jl
and
mov
out
xor
pop
pop
pusha
icebp
sbb
xchg
dec
cltd
cld
aas
lcall
adc
cmp
inc
jle
dec
test
aad
push
sub
adc
imul
movsl
adc
dec
pop
dec
pop
lcall
scas
dec
aad
fldenv
subb
xchg
mov
outsl
push
or
pop
sahf
add
adc
pop
adc
es
mov
jge
in
fcmovnu
sub
cmc
sti
jmp
pop
arpl
clc
arpl
xor
xchg
sub
arpl
or
bound
cmp
mov
adc
fdivrl
jle
pop
xchg
loopne
push
mov
mov
adc
ss
sti
mov
out
dec
inc
pop
ss
cmp
or
inc
scas
inc
xor
inc
in
js
int3
fwait
mov
ds
xor
mov
out
int3
add
fnstcw
mov
pop
sbb
jae
outsb
sbb
cmp
test
ds
fs
push
push
data16
imul
ss
fists
adc
push
xlat
mov
insb
xchg
data16
jae
aad
pop
sbb
sbb
rolb
imull
clc
push
mov
sub
push
and
je
sbb
pop
inc
xchg
pushf
jnp
push
push
pop
ljmp
xor
push
aad
incb
int
lret
mov
pop
pop
xchg
rcrl
cmpsb
in
lret
shl
pop
or
testl
in
add
and
inc
adcl
cli
out
decl
clc
jg
add
subb
test
pop
aam
shlb
test
and
dec
test
addr16
cmp
mov
xor
sub
dec
sbb
jl
outsb
pop
mov
test
push
lds
in
pop
sbb
mov
insl
repnz
sub
mov
cmp
push
adc
lods
cli
mov
inc
das
sub
add
cwtl
and
xor
std
cli
xchg
and
adc
std
jns
das
xchg
adc
adc
adc
repnz
xchg
shll
in
and
pushf
sub
dec
sub
in
xchg
xor
mov
rorl
insb
test
pop
fsubrp
pop
jne
imul
sbb
xchg
mov
mov
sub
jg
lods
xor
xor
popa
daa
adc
psrlq
cmp
cli
fwait
loop
ret
dec
and
out
or
loopne
and
fiadds
jns
das
dec
sub
fwait
mov
adcb
jnp
test
out
cmpsb
aam
xor
js
call
iret
xor
jl
das
fs
mov
sarb
jno
gs
mov
or
mov
pusha
jmp
pop
mov
fwait
xchg
clc
cli
push
imul
push
xor
lods
xchg
insl
dec
scas
inc
sub
add
cltd
cli
aas
fdivs
add
xor
test
inc
pop
out
imul
or
jae
inc
pop
add
xchg
xor
mov
mov
sbb
inc
ss
lock
aad
pushf
pop
inc
out
in
out
push
mov
nop
add
mov
sti
lods
jge
lock
adc
pop
ret
stc
sti
and
or
scas
sti
cbtw
cmp
cmp
jo
mov
push
sbb
aam
pop
push
sbb
sbb
ffreep
jmp
cmp
andl
mov
fs
pop
xchg
popf
jae
pop
push
or
lret
in
lods
or
xchg
sbb
pushf
sub
jae
mov
mov
ja
add
shll
fsts
mov
inc
mov
dec
loope
jmp
pop
into
out
jl
ja
jbe
sub
pop
ror
sub
popa
lea
divl
and
pxor
adc
cmp
pop
xchg
nop
mov
or
cli
jb
stos
fsubrl
mov
or
scas
add
sub
inc
and
push
sub
mov
cmc
sbb
jne
xchg
sbb
andb
jle
add
sbb
cltd
int
and
scas
mov
jmp
or
sub
mov
push
mov
scas
jg
mov
pop
inc
data16
add
mov
pop
and
in
mov
daa
movsl
mov
popf
clc
testl
aas
push
jb
dec
aam
mov
lods
movsl
push
test
xchg
imul
mov
inc
frstor
sub
cmp
mov
jb
adc
into
jp
jo
sbb
and
sub
movsl
mov
jg
xchg
mov
add
add
je
mov
fwait
dec
bound
loopne
lret
cmp
xchg
pop
dec
int3
test
fnstsw
dec
inc
inc
mov
dec
jbe
mov
decb
loopne
cmpb
mov
sub
mov
into
or
inc
test
mov
cmp
rcrl
pushf
pop
xchg
loope
test
mov
fstpt
js
cmp
pop
and
sub
rep
cs
lea
mov
jecxz
and
aam
movl
fstp
pop
jo,pt
fistpl
stos
xchg
jle
add
call
out
lock
stc
xchg
addl
cmc
xchg
or
xor
subl
lahf
dec
cmovnp
lds
fsts
iret
pop
cli
mov
lea
dec
lock
cmpsb
lds
and
fdivl
pop
push
add
pop
cmp
vucomisd
sub
and
fdivr
lds
cmp
loop
or
aad
xor
lret
mov
cmp
lods
jnp
cmp
dec
fmull
sti
jl
adc
push
lahf
or
add
insb
insl
cmp
out
mull
mov
pop
or
push
int3
inc
lret
mov
xlat
shrl
nop
push
push
arpl
add
in
inc
xor
xchg
sbb
dec
or
add
xor
aas
pop
and
add
mov
std
test
jge
adc
sub
ret
imul
mov
sbb
sbb
arpl
xor
aam
fidivrl
jp
popa
imul
push
enter
rolb
loop
jbe
pusha
mov
push
push
dec
jmp
mov
pop
inc
subb
mov
dec
jns
jo
or
roll
rorb
pop
mov
pop
mov
ret
fiaddl
sub
fcoml
cmp
mov
or
cmp
rcrb
int3
das
xchg
aas
sti
dec
sub
cmp
loope
add
sahf
lcall
clc
or
cld
mov
fcoms
mov
in
imul
lahf
add
out
shrb
cli
dec
xor
and
mov
loope
stos
out
and
sbb
fwait
or
sbb
adc
in
scas
imul
push
or
cmp
xor
mov
fidivrs
sub
and
push
scas
xor
lods
fnstenv
adc
popa
arpl
cmpsb
mov
das
fmuls
frstor
insl
in
clc
ficoms
lods
lods
in
test
mov
movsb
addl
filds
push
dec
jbe
sub
mov
je
lds
int
outsl
mov
scas
add
mov
jbe
pop
pop
sub
aad
fmul
mov
aam
xchg
fisubs
adcl
fs
mov
or
scas
and
insl
xor
xor
xor
imul
xlat
push
sti
mov
cmpsl
lods
jns
inc
enter
jne
fwait
sahf
mov
jmp
or
xor
int
dec
es
mov
repnz
dec
xchg
inc
sti
data16
dec
mov
pusha
lods
jno
insl
and
loop
push
insb
test
out
xchg
fstpl
in
dec
push
mov
imul
mull
cwtl
lock
into
pop
xchg
andl
pop
xchg
push
imul
sbb
in
mov
leave
mov
pop
test
fstpt
xor
push
idivl
pop
push
push
call
rcl
fwait
shl
xlat
rolb
and
cltd
xchg
stos
xchg
out
xchg
in
pop
fst
and
icebp
bt
jo
cs
mov
repz
fstpl
lds
add
push
adc
ret
adc
xchg
xorl
inc
mov
xchg
or
mov
dec
pop
adc
jmp
mov
cli
mov
ret
jl
stos
fld
jle
loop
xor
fnstcw
mov
insl
bound
push
pop
jo
outsl
and
dec
mov
negl
adc
cmp
mov
out
push
or
xor
push
fldenv
push
repnz
lahf
rcll
mov
jns
loope
into
and
lahf
add
scas
sub
adc
stos
jmp
sti
lds
aaa
xchg
mov
in
ljmp
dec
int3
add
cli
cmp
pop
sar
jno
jbe
movsl
or
lods
jle
and
cmp
inc
push
jae
call
cmc
mov
lds
cs
push
sbbl
movsl
into
jnp
mov
aas
push
rorb
add
rolb
fwait
imul
sbb
inc
test
es
ljmp
adcl
mov
lods
scas
lods
popf
mov
test
mov
inc
pushf
rorb
testb
daa
sbb
out
fdivs
scas
fstpt
lea
add
inc
inc
fs
sti
xor
mov
dec
mov
out
xor
lea
gs
in
jbe
push
mov
adc
enter
mov
pop
movsl
inc
cld
jns
fwait
adc
nop
sbb
incl
add
subl
hlt
adc
insb
and
mov
es
sbb
cmp
jg
insl
incl
cld
push
ljmp
add
popa
daa
testl
loope
sbb
dec
shlb
cmp
xchg
mov
addr16
and
and
xor
je
cmpsb
movsb
or
lds
out
push
dec
ja
fdivrl
adc
mov
mov
sub
cmpb
push
pop
fnsave
mov
push
cmc
sub
sub
in
shlb
dec
xor
push
mov
daa
aam
push
in
dec
and
ret
xorb
mov
jbe
leave
rorb
sti
iret
ss
arpl
sbb
andb
push
out
lahf
or
and
and
mov
clc
insl
dec
or
dec
rcll
repz
push
mov
lds
aad
cmp
mov
xchg
jle
mov
lods
mov
inc
push
adc
sbb
push
mov
dec
xor
das
mov
jg
cmpsb
movl
cmpsb
inc
push
loop
sub
sti
pop
mov
scas
mov
xor
dec
negl
mov
dec
lahf
jo
jbe
lods
cwtl
mov
fldenv
xchg
cmpb
bnd
cwtl
inc
add
xchg
add
negb
jmp
or
jae
out
ret
add
into
mov
enter
sti
lods
sbb
adc
dec
js
jnp
scas
cmp
inc
out
icebp
sti
aad
xchg
sub
jp
test
dec
jmp
test
xsaveopt
inc
outsb
aam
repnz
and
xorb
jmp
lret
mov
fstpl
dec
gs
outsl
mov
and
sar
mov
cwtl
push
mov
inc
lcall
icebp
pop
and
cmp
ds
cltd
pop
mov
inc
jmp
popf
not
mov
mov
ja
xchg
jbe
push
sub
mov
adc
into
inc
rcr
sbb
and
dec
bound
sbb
add
loopne
inc
add
dec
xor
dec
cltd
out
daa
push
pop
lahf
insl
test
cmc
sub
pushf
outsb
mov
fcomip
pop
add
lock
orl
stc
mov
dec
or
sub
and
jp
in
lret
mov
jecxz
sub
out
cmp
outsl
pusha
fxch
enter
ljmp
daa
jno
dec
jnp
mov
aas
ljmp
mov
adc
xor
pop
flds
xchg
cwtl
jle
xchg
in
loop
insl
push
fiaddl
xchg
cmc
xchg
jbe
push
jmp
popf
lahf
cmpb
jle
test
push
dec
stos
mov
ja
fbstp
or
jb
fldenv
mov
pop
pop
mov
jb
mov
icebp
das
rorb
pop
ret
sub
or
adc
int
aaa
loope
dec
subl
call
add
pusha
mov
movsl
repnz
loopne
repnz
data16
sbb
adc
aaa
jne
mov
push
call
int3
push
xor
pop
inc
sahf
loop
es
jmp
mov
fwait
inc
in
adc
shll
add
lock
adc
clc
lret
xor
int
cli
ret
in
and
test
mov
fnstenv
add
lahf
pop
jae
test
cld
mov
call
cltd
icebp
jp
ljmp
dec
rclb
dec
dec
dec
aad
sbb
imul
xchg
pop
mov
inc
dec
std
pop
cmc
xchg
cs
xor
clc
stc
or
leave
mov
fidivs
cmp
das
fsubrs
xor
add
sub
and
sbb
xor
push
cmpsl
jmp
jb
dec
lcall
call
push
lock
movsb
sub
mov
cmpsb
xchg
rcrb
or
aaa
jo
jle
xchg
rcll
sbb
mov
pop
fstps
push
mov
loop
icebp
xor
test
jecxz
mov
mov
sub
loop
int3
enter
or
int
mov
test
sub
sub
mov
add
movsb
or
stos
push
sbb
pushf
push
scas
orl
lcall
push
or
iret
dec
xor
sbb
stos
xchg
sahf
pushf
jne
sti
icebp
mov
cmp
and
dec
xor
aas
push
fmulp
adc
mov
sbbb
dec
enter
inc
push
add
aas
pop
repnz
imul
das
inc
adc
lea
lock
mov
add
xchg
mov
add
ret
popf
repnz
and
cmp
cmp
and
pop
jbe
push
and
or
ljmp
sub
aas
adc
xlat
push
lea
xor
push
cmp
int
pop
and
scas
out
into
mov
mov
sub
jns
xor
jl
or
and
fstps
dec
sub
movsb
mov
fisttps
xchg
jns
mov
pop
pushaw
test
fimuls
adc
dec
mov
cmpl
leave
stc
fnstcw
xchg
pusha
mov
jmp
out
mov
daa
push
mov
cmp
sbb
mov
sub
pusha
cmp
cmp
test
pop
orl
mov
stos
std
jns
ret
clc
jg
pop
les
xchg
xchg
inc
dec
xchg
popa
out
mov
aaa
jae
xor
ljmp
out
in
mov
cwtl
or
jecxz
js
push
mov
call
bound
aad
clc
dec
sbb
cld
pushf
sbb
push
mov
push
xlat
outsl
addr16
add
shll
iret
loop
loopne
sbb
pop
pusha
lret
sbb
jnp
outsl
mov
sbb
mov
dec
mov
jmp
fildl
mov
test
addr16
inc
test
adcb
lods
push
icebp
add
sahf
aas
in
rcrb
inc
cmp
jae
xor
cmpb
jnp
mov
and
lret
dec
mov
je
orb
mov
out
mov
pop
jne
push
fiaddl
jmp
xor
lods
cwtl
cltd
stc
jmp
cmp
mov
jbe
xchg
mov
cmp
add
and
mov
icebp
daa
sbb
lcall
adc
pop
xchg
sub
push
mov
mov
pop
dec
lock
pop
push
or
xlat
icebp
test
jmp
cli
icebp
mov
clc
cli
cmp
or
hlt
stos
lds
mov
loopne
fcoms
mov
pop
mov
jp
hlt
or
pop
sub
rcrl
adc
call
scas
mov
sbb
sub
pop
nop
or
rorl
or
popf
pop
push
rcrb
in
lcall
push
xchg
clc
xor
add
inc
mov
sub
ljmp
sbb
or
xor
fidivrl
call
ret
add
fmull
cld
stc
fisttpl
call
lahf
inc
mov
test
in
je
repz
fdivrl
popa
cmp
insl
aam
xchg
sbb
sbb
jnp
push
inc
mov
adc
and
popa
push
sbb
clc
mov
push
or
add
mov
adc
inc
mov
push
enter
push
and
in
in
mov
in
mov
adc
aam
inc
int3
jmp
in
mov
in
inc
test
sbb
gs
int
jo
shrl
jle
cld
jl
cltd
and
pushf
loope
pushf
fbld
jg
push
jle
jae
je
addb
mov
rcr
xor
xchg
negl
pop
in
and
sbb
faddl
mov
sub
fsubr
int
cmc
pop
jno
loope
fld
or
cmpsb
cli
mov
stc
mov
fcomps
jle
dec
pop
clc
xlat
je
cmp
jle
not
dec
cmpsb
xor
dec
cmp
in
call
mov
test
adc
xlat
inc
inc
mov
push
popa
je
jb
dec
xchg
push
mov
out
jecxz
adc
ljmp
sub
or
fs
add
jmp
or
repz
je
mov
mov
jae
sbb
mov
fidivrs
in
call
test
mov
and
inc
sub
test
movsb
aaa
sub
push
pop
repz
pop
dec
repnz
mov
pmullw
stos
inc
mov
add
jne
je
jae
int
add
sbb
sbb
jl
sbb
je
sbb
push
fs
imul
and
mov
arpl
xor
mov
repz
arpl
jmp
call
adc
inc
loope
add
add
mov
cmp
repz
fbstp
mov
fistpll
mov
aas
ja
inc
clc
mov
xchg
arpl
inc
icebp
mov
dec
test
clc
outsb
rclb
jmp
ficompl
das
sahf
mov
inc
adc
mov
mov
jo
push
shlb
adc
xor
dec
dec
test
xor
adc
into
mov
xor
xchg
sub
xchg
iret
mov
push
pushf
idivl
adcb
xchg
xor
mov
pop
dec
sbb
jge
sbb
push
xchg
lcall
pop
sub
mov
and
and
cmp
adc
mov
lea
cmp
aam
leave
push
sub
jmp
mov
push
mov
jbe
inc
jno
mov
icebp
xchg
pop
mov
pop
jmp
push
xor
xchg
mov
test
dec
xchg
stos
ret
mov
push
test
dec
into
mov
or
pop
nop
mov
mov
clc
sub
and
test
fdivrl
jnp
jp
push
sbb
fisttpl
outsl
lock
mov
lret
pop
decb
jecxz
sbb
test
xchg
adc
push
push
xchg
pusha
adc
cld
popf
leave
dec
dec
loopne
rcrl
cmpsb
lods
test
xchg
outsl
mov
jmp
push
int3
add
push
fistl
pusha
lds
loop
adc
enter
clc
or
test
push
mulb
inc
mov
in
clc
call
sbb
jae
mov
pop
shr
inc
shl
and
sarl
xchg
cmpb
xchg
add
pop
jge
jge
add
repz
dec
stos
fsubl
shlb
insl
pop
movsb
mov
jbe
mov
enter
rorl
int3
jl
in
xor
fists
dec
push
xchg
mov
ret
xchg
fildl
pcmpgtw
inc
mov
cli
jo
dec
loope
cmp
rcll
test
xchg
cmc
inc
insb
in
jb
jnp
lods
jns
enter
js
inc
out
lea
stos
cmpsb
lret
pop
shrb
and
pop
sub
dec
shr
imul
inc
sbb
push
inc
inc
mov
pop
mov
loopne
sahf
adc
push
lcall
mov
push
jbe
cmp
ss
dec
popf
mov
sahf
out
test
out
repnz
mov
mov
lret
rorl
pop
test
repz
jb
xchg
or
ljmp
hlt
jae
xchg
icebp
lret
jnp
cs
jmp
sub
dec
lcall
and
adc
push
inc
sti
sub
je
lods
push
jecxz
es
jno
xor
xchg
in
pop
addr16
inc
divb
adc
mov
mov
xchg
mov
cwtl
xchg
mov
sub
inc
outsb
and
mov
mov
mov
pop
mov
cltd
adc
nop
loopne
ljmp
jnp
out
sbb
insl
inc
sub
mov
sub
mov
xchg
pop
mov
mov
andl
scas
sbb
daa
in
in
inc
jg
sbb
pop
inc
scas
ljmp
aad
aaa
jbe
pop
filds
arpl
pushf
fsin
mov
loope
mov
inc
scas
sbb
outsl
cld
into
or
jecxz
fildl
scas
or
scas
leave
mov
test
cwtl
push
stc
jne
pushf
sbb
mov
push
sarl
mov
iret
push
jmp
in
sub
and
scas
out
pop
cmp
mov
mov
into
into
xor
pusha
adc
pushf
xor
jno
shll
pop
sub
xor
mov
mov
jle
push
add
inc
cli
or
jg
dec
mov
jg
jmp
pop
sub
dec
iret
and
lea
imul
sahf
push
aad
and
sbb
rol
inc
int
mov
inc
inc
test
daa
mov
test
pop
jns
rorl
iret
fisttps
mov
in
outsl
add
fcomps
and
sbb
mov
dec
cmp
add
lret
sub
shll
mov
mov
lret
pop
sub
dec
ja
xchg
inc
jb
dec
mov
xchg
dec
push
scas
lret
inc
js
dec
xor
xchg
imul
xor
ret
cli
addr16
lret
jb
enter
mov
jbe
popf
dec
ja
sahf
adc
lds
dec
add
imul
aam
push
mov
popa
xor
testl
dec
inc
push
pop
xor
mov
adc
sub
movsb
popf
je
dec
or
mov
sbb
hlt
push
mov
ljmp
adc
inc
aad
nop
cmpsl
inc
inc
cmp
jecxz
hlt
popf
call
out
push
fimull
cmp
mov
popa
pop
jno
or
mov
dec
ror
std
jbe
aad
scas
aam
imul
jne
sub
shl
data16
mov
and
aad
cmp
out
call
pop
jge
mov
push
setb
add
mov
inc
fs
fidivl
das
inc
jae
cmp
inc
aaa
int
pushf
insb
adc
in
lret
push
cltd
das
pop
sbb
mov
and
mov
and
xchg
pusha
jg
xchg
jle
inc
stos
nop
mov
ss
mov
push
testb
imul
mov
scas
daa
jbe
xor
jne
inc
lret
jecxz
pop
push
out
push
or
pushf
mov
pop
pop
and
cmpsb
push
addr16
jp
jge
add
adc
xor
inc
cwtl
xlat
cmpsb
dec
icebp
xchg
daa
hlt
jle
pop
inc
std
jbe
mov
cli
xchg
cmp
lret
or
stc
xor
ret
inc
jmp
out
inc
or
add
rcl
fadd
and
xchg
push
stos
int3
loope
sub
xlat
add
cmp
cmp
add
dec
mov
lahf
sarl
xlat
test
mov
std
mov
add
add
mov
cld
jne
mov
mov
xchg
mov
sub
icebp
pop
mov
cmp
stc
mov
mov
inc
imul
jmp
xchg
je
lods
push
jmp
js
lahf
hlt
pop
into
mov
push
mov
cmp
scas
mov
adc
jb
in
outsl
mov
xorb
mov
fwait
mov
in
pop
in
cld
mov
fsubl
movsb
adc
pop
test
faddl
loop
xor
adc
dec
xor
movsb
dec
inc
ja
mov
pop
je
pushf
adc
jne
jg
cmp
cmp
out
lods
in
ss
arpl
jl
xor
dec
rorb
dec
repnz
add
pop
mov
ds
ds
xor
dec
mov
out
lock
jns
xchg
hlt
push
sbb
loop
dec
mov
in
push
out
leave
lcall
enter
add
mov
cmp
stos
pop
outsl
or
push
pop
cmp
stos
iret
into
popf
jnp
add
ret
pop
mov
mov
adc
jmp
loope
in
bound
scas
dec
push
aas
sub
dec
and
mov
push
adc
and
test
cld
xchg
and
adc
ljmp
shl
fsubs
sbb
repz
mov
mov
push
add
arpl
dec
adc
mov
loop
test
outsb
imul
aad
sub
mov
push
xor
insl
jle
jae
loope
or
jb
aam
mov
cvtpi2ps
ljmp
jo
mov
mov
xor
add
mov
sub
cmc
in
adc
or
aad
into
aad
rcll
jb
popa
jl
repnz
movsl
push
sar
pop
pop
popa
mov
or
add
fsub
adc
mov
dec
cmpb
es
inc
sub
inc
mov
add
aam
adc
lds
mov
aaa
stos
mov
add
js
mov
pop
xchg
cmp
fwait
scas
in
sbb
or
push
or
xchg
adc
cmp
imul
xchg
cmp
mov
cmpsl
or
add
sti
lret
into
hlt
iret
test
push
pop
mov
pushf
call
pop
cmp
mov
push
xor
lods
je
mov
jp
test
sbb
loope
popf
iret
pop
and
pop
ds
push
aad
leave
and
mov
sub
mov
out
add
stos
ret
mov
adc
or
fwait
cmc
inc
iret
aaa
xorb
or
or
fistpl
fs
jecxz
jns
std
movaps
mov
xlat
cmp
test
sarb
cmpsl
data16
inc
cltd
test
call
adc
jecxz
out
pop
xchg
rolb
push
call
mov
icebp
or
jns
pop
dec
roll
sbb
push
jae
sub
stc
xor
adc
mov
iret
enter
inc
cmp
ret
jmp
add
mov
dec
lds
add
pop
popa
mov
out
push
push
lds
pop
mov
jns
or
stc
cmp
shl
xor
push
inc
pop
adc
scas
pop
jle
mov
scas
push
dec
sbb
lahf
dec
jns
imul
xor
fs
test
sarb
xor
pushf
push
jg
mov
jmp
push
adc
pop
mov
mov
fldcw
lea
or
xchg
push
inc
popl
and
and
testl
mov
loopne
lsl
xchg
scas
dec
push
add
mov
outsb
nop
xchg
outsl
pop
movsb
mov
mull
cmpsb
cs
lret
cld
clc
loop
out
dec
cmp
xchg
adc
mov
add
xor
aas
insl
mov
cmp
xor
iret
out
cld
fnsave
push
sub
mov
aaa
or
jmp
mov
and
jecxz
xbegin
cmpsl
les
mov
jno
imul
mov
add
xor
mov
push
push
lods
mov
pop
imul
popa
test
dec
xchg
xchg
test
lret
fsubrl
jmp
xchg
mov
repz
arpl
xchg
mov
push
jle
nop
and
jge
dec
pop
scas
enter
rclb
mov
mov
fiaddl
push
out
mov
mov
inc
lcall
jo
sti
and
mov
and
mov
inc
or
test
out
jbe
gs
jge
imul
mov
fildll
imul
xchg
orb
mov
sarl
push
jbe
and
mov
dec
mov
mov
aaa
fdivr
mov
jg
mov
xorb
xor
xor
jae
jbe
scas
ljmp
fs
mov
jmp
sub
popf
and
loope
mov
rorl
mov
in
out
leave
in
mov
aas
std
repz
loope
std
sub
lods
xchg
and
fimuls
mov
push
xchg
or
dec
ss
int
popa
sbb
sbbb
xchg
mov
and
sti
pop
rclb
mov
xor
mov
fnstenv
pop
push
clc
xchg
sbb
cmp
ja
jecxz
testl
movsb
insl
xorl
cmp
scas
mov
shl
outsl
dec
loope
rorl
cmpsl
clc
mov
in
lcall
xchg
and
mov
fs
and
aam
jnp
jle
addr16
cmc
call
jmp
cmp
divb
mov
or
pop
in
sub
jmp
rcrb
out
pop
adc
je
adc
call
sub
popf
and
xchg
dec
push
adc
inc
mov
mov
add
mov
jp
popa
push
mov
lods
hlt
ja
loopne
jecxz
mov
aas
out
or
test
mov
test
jg
int
in
pop
movsb
repz
addb
jmp
imul
test
fbstp
int
add
jo
out
fiadds
xorb
mov
cltd
xor
repnz
jns
test
jnp
mov
adc
sub
dec
lods
inc
adc
das
jbe
sbb
rorb
and
pusha
mov
notb
rcll
push
shlb
mov
mov
inc
icebp
ljmp
fistpl
shll
stos
mov
fwait
pop
shll
pop
repz
dec
xchg
push
push
lds
pushf
mov
jg
cmpsb
adc
xchg
cli
mov
mov
inc
jp
shrl
jb
jnp
pop
adc
pop
xchg
cltd
rorb
xor
mov
xlat
imul
pop
adc
sub
rorl
or
and
cmc
jge
mov
sti
jge
sahf
lret
dec
mov
adc
xorl
push
mov
sub
daa
call
lret
int3
loope
in
pop
lret
testl
jecxz
ljmp
mov
popa
add
popf
sbb
jnp
aad
jle
leave
mov
rcl
mov
outsl
insb
andl
pop
sti
xor
xchg
push
sub
lock
ficoml
stos
cmp
jle
jecxz
ror
mov
in
es
out
jg
and
test
ss
cs
clc
mov
pop
cmp
popf
push
stos
stos
push
fnstcw
xor
xchg
push
add
xchg
js
xor
in
negl
gs
out
lods
and
mov
or
and
adc
scas
popf
cmpsl
mov
repz
lret
add
pop
test
and
test
mov
push
in
and
jmp
fstl
dec
test
daa
mov
out
ja
inc
fidivrs
cmp
cltd
aam
sbb
roll
add
dec
sub
sahf
pop
pop
shlb
insl
addr16
gs
push
mov
sbb
inc
adc
test
cmp
mov
push
loop
mov
insl
lds
hlt
adc
jnp
jne
out
adc
add
mov
loopne
or
fcmovu
subps
xchg
push
out
aas
pop
jnp
mov
and
mov
outsl
imul
mov
popa
xchg
ja
xlat
rcr
lahf
dec
sub
push
mov
fidivrl
xor
jge
jb
out
movsb
and
jnp
sub
xchg
xor
mov
fdivrs
test
aaa
js
mov
dec
adc
sub
jl
mov
dec
out
push
sahf
aad
shrb
movsl
or
lcall
mov
faddp
xchg
insl
inc
mov
sub
lcall
mov
add
hlt
sbb
ds
push
popf
or
or
mov
pop
pop
cwtl
mov
xchg
fwait
loopne
subb
lahf
and
adc
dec
cld
jbe
push
sub
inc
leave
cmp
aas
cmp
out
pop
xor
bswap
or
mov
cmp
xor
mov
jp
movsb
dec
ret
mov
mov
mov
ds
iret
ds
xchg
in
xchg
inc
les
fmull
sub
adc
sbbb
xor
or
out
fnsave
aad
push
out
roll
enter
fs
lock
or
or
popa
out
sbb
out
sahf
mov
adc
inc
and
push
xor
pop
bound
adc
push
cmp
jge
push
mov
mov
xchg
cmpb
or
sahf
push
in
inc
lcall
das
xchg
mov
mov
enter
out
adc
jge
jnp
mov
mov
xchg
push
and
cwtl
ja
lods
ror
mov
cs
das
stos
shlb
xor
les
ja
fadd
cmp
mov
jns
testl
xor
repz
dec
cmc
cmc
jg
decl
inc
mov
das
mov
mov
and
mov
rcrb
mov
jmp
shll
insl
fnstenv
insl
cmc
fsub
lret
or
sub
scas
jae
call
dec
sarb
mov
repz
push
repz
addr16
jp
fucomp
std
fstl
loop
jb
mov
xor
and
test
pop
cmp
jb,pn
mov
xchg
adc
jns
lret
or
stos
and
inc
xor
dec
mov
in
jle
and
loope
stos
gs
shll
xor
into
xor
ficompl
jmp
push
stos
pop
movsb
aam
and
sbb
shll
int
jl
sub
pusha
fnsave
fwait
imul
test
adc
stos
gs
lahf
in
or
mov
dec
mov
and
jnp
xor
push
popa
stos
into
jno
push
and
mov
inc
iret
fsubl
aam
mov
or
fs
cmp
and
outsl
aad
inc
xchg
add
lcall
ljmp
push
xchg
add
mov
push
jns
loope
mov
sbb
stos
xchg
push
in
pop
xchg
ljmp
and
cmp
enter
adc
or
jg
fadds
add
mov
mov
cmp
sahf
dec
cmpsl
mov
lret
pop
je
cmp
inc
mov
popa
add
adc
mov
push
rorl
pusha
fld
jmp
sub
les
sbb
mov
mov
outsb
jb
out
cmp
xor
das
adc
test
adc
int
mov
and
int3
ret
xchg
aad
aas
push
mov
popa
push
in
xor
ss
dec
sbb
lahf
clc
pop
orb
jb
adc
jns
mov
add
bound
lods
cmpsb
mov
arpl
sbb
movl
push
in
gs
leave
movsb
xorl
movsl
sbbb
inc
fstpt
je
pushf
mov
or
shll
scas
pop
push
je,pt
mov
jno
add
jg
adc
jns
inc
mov
dec
pop
sbb
sub
lahf
push
jne
repz
test
mov
add
bound
mov
sbb
inc
push
lds
ret
cld
out
test
insl
pop
fs
or
sub
cmp
sub
xchg
rcll
cld
mov
ljmp
mov
fdivrs
xor
or
xchg
pop
mov
and
and
sbb
jne
je
add
addb
lcall
test
loopne
push
mov
lods
fnstcw
add
push
clc
pop
aaa
faddl
mov
mov
or
jle
outsb
mov
daa
mov
mov
push
shll
lahf
push
and
pop
or
lahf
xor
imul
adc
mov
sbb
fdivp
sbb
xchg
lret
xchg
cmp
and
push
jnp
pop
int3
sbb
mov
push
int
outsb
jp
mov
movsb
pusha
inc
test
pop
jae
inc
inc
bound
call
push
lret
aaa
das
sub
xor
insb
fwait
xor
and
jmp
or
add
es
imul
mov
dec
fistl
xlat
pop
iret
mov
and
cmp
rclb
lds
cmp
rcrl
mov
or
adc
jbe
movsb
inc
xchg
dec
pop
insl
adc
outsb
rcr
cmp
dec
adc
adc
ljmp
stc
cmovb
jp
test
loope
dec
repnz
rcrb
pop
imul
mov
mov
inc
out
or
xchg
aam
lea
sbb
sub
scas
inc
jecxz
xor
push
push
jnp
or
inc
mov
test
cmpsl
test
in
or
shrb
stos
xor
pop
pop
fs
addl
fstl
loopne
and
mov
mov
clc
xchg
push
and
fisubrl
rcll
popa
push
in
dec
arpl
nop
and
mov
std
movsl
sbb
outsl
test
aam
xchg
notb
aad
or
mov
jae
in
icebp
loop
pushf
jecxz
mov
and
jg
fimull
xchg
xchg
mov
loop
callw
xor
ss
sub
sar
pusha
shll
mov
mov
cmpsb
push
mov
mov
lods
mov
or
sbb
enter
es
inc
shl
and
pop
fs
jns
loope
insl
call
push
mov
dec
cwtl
adcl
mov
mov
cs
call
fwait
jns
je
jp
es
arpl
mov
fstl
fs
decl
insb
pusha
lret
cltd
arpl
jl
mov
jle
aad
sbbl
addr16
mov
adc
adcb
mov
lret
lahf
mov
std
in
shl
aaa
sti
jns
or
xchg
pop
in
rorl
and
add
push
pop
lea
pusha
sti
adcb
or
es
mov
testb
mov
das
mov
adc
fldcw
or
push
test
test
dec
or
das
loope
mov
mov
loop
jmp
mul
mov
jnp
into
movsb
jb
or
jp
mov
push
jg
mov
or
in
mov
sub
inc
lods
mov
jns
jmp
aam
mov
jp
aaa
push
pop
adc
jl
lret
and
sub
sbb
adc
shlb
sub
jmp
jg
lds
enter
icebp
aas
aam
cmp
dec
push
rep
orb
push
mov
imul
lea
push
outsb
andl
xchg
inc
jo
xor
and
scas
jne
ljmp
xchg
aad
divb
and
dec
adc
in
loopne
stc
jne
cli
xor
sbb
mov
cmp
jecxz
scas
jmp
scas
icebp
jmp
mov
inc
push
mov
cmp
pop
cltd
push
xchg
cmp
fnstenv
fs
lock
pop
pop
cmp
mov
or
xchg
pop
sbb
jecxz
inc
cmc
icebp
dec
iret
shrb
stos
add
jg
cmc
pop
lret
adc
arpl
jo
hlt
dec
mov
arpl
cmp
mov
das
xchg
inc
xchg
lods
imul
out
jbe
adc
mov
add
popf
cmp
int3
mov
pop
pop
jo
mov
fildll
mov
mov
aas
pop
in
fs
into
mov
std
push
es
push
sbb
push
jo
lret
add
dec
push
jns
mov
fidivrl
arpl
sti
jmp
sbb
shll
outsl
dec
ret
scas
xchg
dec
leave
js
pop
sahf
or
jns
inc
cmp
iret
test
rorb
mov
jbe
outsb
rcll
rcrb
xor
loopne
xchg
add
cmp
sub
stos
xchg
mov
scas
jo
xor
hlt
fstpl
ss
pop
scas
loopne
cmp
out
sbb
fisubl
sub
cmp
cmp
and
cwtl
sub
call
adc
push
fwait
bound
add
aad
rcrb
inc
fmul
mov
pop
aam
ja
or
in
es
decl
pmaxsw
daa
cwtl
scas
mov
mov
mov
nop
rolb
mov
push
inc
pop
jno
sahf
mov
cwtl
add
sub
cmp
insl
sub
lock
jno
cltd
sti
loope
test
adc
jne
outsb
push
addb
xor
jno
cltd
cmp
pop
dec
repz
test
or
push
fwait
jl
incl
sbb
dec
jbe
mov
xchg
xchg
cmp
xorl
in
decb
mov
cld
pop
in
movl
call
pop
rcr
mov
xor
xor
rsm
ret
inc
inc
fists
insl
mov
cmp
icebp
mov
fs
sbb
jae,pn
jmp
xor
xor
cmp
shrl
outsb
outsb
pop
stos
xchg
fimuls
mov
bound
das
ret
xor
ret
cmpsl
add
push
rcrb
mov
fs
cld
aaa
push
out
mov
jmp
add
scas
lds
push
jne
lahf
pop
insb
lret
mov
outsl
pop
sbb
xor
int3
push
enter
xor
imul
cmc
out
push
fs
out
xor
mov
lcall
dec
insl
push
int3
je
pop
mov
push
cmp
jmp
mov
shlb
enter
sbb
mov
or
mov
ss
mov
es
scas
push
or
sbb
jb
enter
pop
mov
loope
loopne
cmp
mov
push
sbb
cwtl
push
arpl
mov
in
cmp
rcll
sbb
dec
add
ljmp
mov
mov
mov
mov
dec
sbb
sbb
shrb
mov
xlat
addr16
pop
enter
ljmp
enter
popf
popa
adc
dec
add
jbe
pusha
mov
lea
add
add
push
ret
pop
into
mov
out
or
adc
les
jo
mov
sahf
in
idivb
cltd
mov
lods
mov
mov
shrb
sub
mov
imul
sub
adc
pop
lock
jns
cmp
fsubp
and
dec
mov
xor
xchg
xchg
add
insl
js
push
call
push
dec
subl
add
in
xchg
lea
cmp
mov
incl
mov
xlat
jle
dec
incl
jge
push
mov
das
cmp
aas
jge
jg
xchg
dec
movsb
movsb
xor
push
push
movsb
iret
push
mov
lea
je,pn
orl
add
dec
mov
int3
je
insl
fs
jo
pop
in
mov
pop
mov
mov
adc
sbb
mov
data16
stos
loopne
or
in
subb
add
sbb
xor
insb
fchs
aad
std
lahf
inc
les
test
rorb
das
sub
sub
cmp
sahf
test
fstpl
bound
cmpsb
and
cmp
arpl
cmpsb
adc
mov
sbb
mov
push
cmpsl
loope
jecxz
push
mov
or
inc
stc
jbe
mov
xor
mov
movsb
add
cmp
aam
les
fs
lock
ds
loop
les
push
jae
inc
push
mov
and
ret
xor
iret
mov
insl
pop
add
xchg
xchg
jnp
jns
cmpsl
add
or
loopne
jp
sub
mov
cmp
jmp
inc
in
sub
xor
lods
mov
dec
jg
into
add
adc
push
loope
test
arpl
or
adc
ret
and
adc
repnz
iret
xchg
lret
or
lahf
out
mov
inc
pushf
push
or
mov
arpl
dec
jns
inc
jne
out
imull
mov
pop
mov
pop
add
pop
idivl
mov
lret
insl
sbb
add
xchg
fstl
cmp
fwait
ljmp
data16
sti
adc
stos
cmc
mov
or
mov
xchg
cmpsl
pop
out
sub
inc
jno
imul
dec
sub
add
jbe
test
mov
sub
xor
lahf
xchg
sub
or
sub
andl
aas
dec
fisttpll
ja
nop
mov
inc
jp
adc
loope
jle
dec
jo
inc
adc
xor
stc
inc
das
es
adc
imul
pusha
lea
std
xor
je
dec
cwtl
and
repnz
cmpsb
lock
lods
lret
mov
mov
xchg
or
les
sti
inc
mov
sti
mov
pushf
push
leave
inc
lods
gs
js
adc
adc
scas
gs
add
cli
mov
cli
push
movsl
sub
jo
dec
shlb
xor
ficompl
je
mov
sahf
xchg
add
ds
and
das
cld
push
test
in
pop
sub
nop
sbb
sbb
add
lods
pop
pusha
push
mov
ret
lret
movsl
pmuludq
dec
pop
rcl
arpl
adc
lahf
divb
aad
bound
xchg
push
push
clc
push
hlt
lcall
repz
stos
aam
cli
out
loopne
test
sub
mov
stos
popa
and
dec
push
inc
or
int
stos
ffreep
or
jp
xchg
rclb
push
sub
cld
dec
jno
outsl
inc
or
jns
fidivrs
mov
pop
aad
dec
pusha
imul
or
xchg
outsb
enter
mov
movsl
pop
cmp
or
gs
outsl
jmp
and
push
add
jo
fdivrs
in
pop
sub
and
dec
aas
or
cltd
push
sbb
insl
push
or
ja
pop
push
pop
in
push
mov
or
fidivrl
push
fsubl
clc
or
cld
gs
mov
cmc
jo
jae
jp
sbb
sbb
mulb
xchg
add
mov
lahf
or
dec
lahf
mov
pushf
or
jb
call
push
andl
push
ja
shr
fwait
lret
sub
stos
test
cmp
jge
mov
cld
jge
das
and
std
cmpsb
mov
mov
scas
imul
int3
and
popa
inc
dec
push
shl
imul
mov
mov
cwtl
mov
and
into
push
out
aam
sub
pop
rcrl
js
dec
call
hlt
loope
aam
icebp
inc
push
sbb
es
mov
stos
out
arpl
sub
scas
fwait
adc
sbb
call
inc
lods
testb
jg
fcompl
mov
dec
or
cmp
imul
inc
test
nop
push
and
mov
stos
cmp
adcl
jmp
mov
iret
jne
or
xchg
and
jns
insl
fildl
out
aaa
mov
das
push
fldt
adcb
fbstp
sarb
in
jecxz
popf
jns
push
inc
sti
fldl
dec
fs
adc
inc
inc
clc
rclb
lahf
test
inc
mov
cmpsl
fcompl
fildll
fnstsw
dec
cmp
mov
ss
xor
push
cli
sub
imul
inc
dec
xor
mov
jne
es
xchg
outsl
mov
popfw
sbb
aam
fcmovnu
jnp
mov
pop
loopne
dec
mov
lea
arpl
xchg
mov
or
xlat
xorl
fdivs
pop
sub
sbb
fcoml
cmp
add
adc
loop
or
imul
mulb
or
bnd
addb
ret
mov
adc
inc
adc
jb
adc
jp
test
or
mov
xchg
mov
ret
mov
clc
pop
sub
outsl
jnp
in
dec
shlb
insb
fs
push
out
mov
dec
bnd
lea
or
sub
ficoml
inc
xlat
in
addb
jns
dec
xor
cmp
lret
dec
push
nop
and
adc
mov
fdivr
cmp
xchg
pusha
insl
stos
stc
and
fsubr
mov
jl
mov
ret
jp
aaa
rcrb
push
push
mov
jl
or
jno
out
xchg
shll
cmpsb
mov
adc
mov
jg
pop
rcll
push
enter
jmp
mov
iret
idivl
popa
jne
push
mov
out
fs
add
mov
pop
divl
dec
fnsave
mov
mov
and
stc
fiaddl
mov
mov
idivb
xchg
aam
js
es
mov
ret
and
xchg
pop
vpunpckldq
jb
xor
data16
jl
xor
in
int
dec
jae
inc
loop
shl
data16
cmp
lds
push
jae
testl
add
mov
pop
lret
push
and
dec
xor
inc
insb
inc
insl
daa
fbstp
cmp
jl
test
mov
test
push
dec
mov
mov
movsb
and
cmp
cmp
addr16
cmp
sarb
lods
pushf
pop
cmp
mov
bound
pop
repz
xchg
mov
repnz
pop
sbb
mov
xchg
jle
pop
pop
mov
outsl
push
dec
pop
dec
orb
dec
mov
bound
jb
adc
andl
daa
stc
subb
ds
jecxz
fdivrl
sbb
data16
jbe
jno
lods
out
mov
dec
xor
pop
rorb
or
xchg
into
dec
and
push
lret
clc
cli
pop
ljmp
jo
test
add
dec
out
sub
cmpb
stc
movsl
stos
ss
dec
leave
xchg
mov
data16
mov
sti
jg
stos
pop
dec
lea
sub
xchg
test
pop
pop
test
mov
std
dec
fwait
xor
fiadds
push
fidivrs
incb
and
shl
mov
add
sbb
or
enter
in
jae
push
dec
test
frstor
rolb
sub
lods
stc
test
xchg
shl
mov
mov
add
xchg
cmpsb
and
cs
sbb
pop
add
mov
imul
jl
mov
movsl
mov
in
xchg
cmpsl
jg
mov
jae
sbb
mov
pushf
lods
and
mov
das
hlt
fildl
xchg
bound
std
into
pusha
insb
sbb
clc
shrb
lcall
and
mov
into
in
push
mov
cld
mov
sub
or
sbb
sbb
xchg
cmpsl
call
xlat
aad
xor
xchg
cmp
rolb
in
pop
lret
push
mov
aad
rol
ljmp
pop
inc
sbb
jnp
mov
inc
dec
adc
pop
orb
add
scas
mov
int
jmp
dec
mov
ret
jg
aad
lods
cmp
fwait
pushf
sub
fdivs
sti
inc
mov
xchg
fmull
ficoml
mov
push
imul
xor
jb
mov
mov
cmp
cmp
cmc
adc
sbb
aam
cmp
or
lods
ds
das
inc
add
xchg
int3
and
mov
fs
lods
movsb
je
xor
or
fnstsw
lea
cltd
adc
or
cmp
lods
sub
shl
ja
fstpt
inc
addb
jne
xor
stos
add
lea
push
cmp
pop
out
leave
inc
test
clc
lods
in
xchg
pop
push
cmpsl
rcl
mov
push
cmp
jp
fucomip
aad
nop
in
dec
lods
jp
insb
cmpb
inc
adc
pop
jle
mov
xor
int
les
pop
cmp
mov
mov
mov
inc
bnd
cmp
test
cmpl
mov
movsb
xor
std
mov
inc
addr16
cmpb
cmc
and
hlt
mov
fwait
jne
andb
jl
pop
push
popa
inc
dec
push
cmp
xor
push
ret
les
fwait
pop
jae
xor
insl
push
mov
shll
and
dec
sahf
xchg
leave
notb
call
scas
jmp
or
setle
sbb
bound
filds
and
fcompl
sti
push
and
mov
dec
in
addb
pop
cmpsl
stos
lretw
aad
xlat
sbb
sbb
sahf
adc
sbb
fwait
inc
push
dec
adc
outsb
fstl
dec
in
js
mov
ret
mov
repz
les
fwait
lds
mov
ja
pop
cmp
jo
cmc
xor
test
fists
adc
fwait
cmp
inc
jecxz
cltd
lret
lahf
sub
mov
negl
sub
mov
nop
jg
dec
psubsb
mov
hlt
je
xor
inc
lods
jae
add
sbb
add
xchg
add
xor
jno
gs
push
push
pop
test
shr
xor
cmpsb
decl
push
xor
push
pop
jb
or
pop
jne
and
es
stos
push
ret
sahf
jns
and
daa
repz
jbe
adc
pop
cli
inc
into
lock
inc
insl
leave
adc
loop
loopne
enter
xchg
and
xor
pop
stos
xchg
xor
xor
subb
pop
pop
rcl
xor
sbb
xchg
fwait
mov
test
adc
fldcw
cmp
jge
pop
hlt
jno
jae
dec
push
jo
lds
sbb
inc
dec
mov
mov
rcl
push
mov
jns
cs
fsubl
in
or
ja
fwait
xchg
jno
mov
cmp
sub
sbb
ljmp
cs
inc
addr16
mov
add
add
jg
inc
dec
cli
enter
and
setge
aad
je
ljmp
or
dec
ret
inc
out
inc
push
xchg
push
xchg
sbb
mov
push
lock
scas
sbb
xor
add
mov
mov
mov
xlat
pop
movb
xchg
ret
push
dec
sbb
scas
cmp
sbb
xor
sti
mov
out
out
out
and
lods
loopne
gs
adc
mov
jge
inc
push
fildll
jg
rolb
adc
mov
push
pop
jae
inc
inc
sbb
insl
ret
shl
mov
xchg
lcall
mov
sbb
jnp
inc
scas
inc
inc
sub
ret
rcll
jno
cli
outsl
mov
xor
mov
incl
xchg
pop
in
xchg
arpl
xlat
loop
jb
lret
jge
lahf
mov
lods
mov
or
mov
mov
adc
xor
fmull
les
push
cmp
and
inc
daa
es
or
adc
jne
cmp
jp
cmp
jg
fwait
sbb
dec
mov
loope
mov
mov
outsb
into
lock
sar
mov
pop
push
fdivs
lea
jecxz
add
add
jns
scas
sti
pop
fiadds
mov
sub
out
or
inc
imulb
adc
xchg
enter
rcr
leave
inc
mov
jb
popf
repz
adc
add
pop
mov
xchg
and
jne
imul
xchg
push
test
jp
jl
inc
or
sub
test
inc
jp
or
out
dec
fwait
iret
test
filds
and
out
hlt
cs
jnp
add
into
mov
dec
and
roll
sbbl
or
ret
or
jl
ret
sbb
add
repnz
data16
dec
addr16
int3
pop
sti
sbb
repnz
sub
push
and
and
and
dec
leave
xchg
mov
adc
sub
push
aaa
pop
xchg
fstp
sub
ds
lret
and
daa
sbb
fildl
add
xchg
in
push
sub
nop
jecxz,pn
fmulp
loop
mov
lock
cmp
notl
dec
xor
sti
jg
mov
add
cmpsl
in
bound
inc
stos
mov
mov
or
cwtl
shll
lods
nop
cld
add
popf
addr16
jo
adc
inc
push
mov
jb
lret
xor
sub
inc
in
mov
mov
mov
mov
repnz
out
repnz
sarb
mov
adc
mov
fildll
aaa
addr16
bound
mov
loopne
and
or
sub
xchg
enter
jg
sahf
cmp
in
jmp
mov
jae
push
hlt
jbe
out
dec
cmc
loopne
pushf
dec
mov
sbb
xchg
scas
xor
xchg
int
or
sbb
lods
mov
jle
pop
int
jno
cs
adc
ficoml
xor
stos
rcll
out
dec
cs
repnz
cmc
sbb
mov
mov
test
aam
int3
lcall
bound
loopne
jns
adc
push
mov
and
dec
or
mov
push
sbb
pop
aad
addr16
pop
jle
mov
mov
jnp
loope
dec
andl
or
or
jg
mov
lret
scas
repz
cs
xchg
addb
sti
push
add
nop
out
subb
popa
mov
nop
sahf
pop
sarb
mov
ffreep
bound
insl
mov
data16
fcomi
adc
test
rorb
dec
mov
fstp
xchg
adc
add
in
mov
cld
xor
add
add
and
es
shll
push
xor
adc
inc
cltd
or
adc
insl
fwait
mov
arpl
mov
stos
or
shl
pop
inc
xor
jmp
mov
push
xor
or
cmp
mov
rcrl
pop
dec
mov
add
das
int3
outsb
jmp
adc
ss
jne
add
fisubl
out
mov
je
cmp
and
pop
dec
sbb
inc
xchg
sub
add
mov
in
inc
inc
pusha
mov
cli
or
fdivl
cmpxchg
mov
push
das
mov
push
jns
sub
in
xor
js
mov
ficoms
fsubl
xor
add
push
jl
mov
aaa
int
mov
movb
jge
lods
shl
and
push
pop
test
pop
imul
cmp
dec
daa
das
xor
xchg
std
lea
pop
jl
int
jo
ljmp
push
mov
mov
pop
arpl
mull
mov
jge
popf
sti
jecxz
ret
inc
das
aaa
fisubrl
imull
push
fs
int
push
sarl
vmwrite
sahf
dec
push
mov
mov
sub
push
insl
adc
testb
ss
scas
jae
push
mov
ljmp
cmpsb
or
icebp
push
mov
ss
sbb
cmp
pop
xor
sahf
mov
mov
cli
pop
aad
mov
ret
mov
loop
sub
jg
scas
shrb
inc
mov
mov
push
mov
sti
adc
cmp
repnz
stos
adc
jl
fcmovnbe
inc
mov
jbe
fnsave
cmp
mov
sbb
and
xchg
lret
jp
cmc
lcall
loopne
mov
fistps
xor
lret
or
jg
mov
ja
decb
arpl
sbb
and
xchg
lcall
mov
pop
ss
push
sub
xlat
lea
mov
loope
xor
push
xlat
push
pusha
mov
dec
sbb
or
sbb
in
or
xor
dec
sub
adc
inc
xchg
es
jg
push
xchg
mov
xchg
lods
xchg
lret
cmp
dec
cmpsb
lods
sub
ss
imul
xchg
adc
adc
pop
push
neg
out
iret
push
push
jne
jmp
cmp
rorl
int3
insb
xchg
push
call
xchg
nop
cmp
insl
xor
in
or
lods
cltd
sub
jmp
lea
pop
add
hlt
fcoms
fiadds
fsts
fdivrl
xor
test
mov
inc
test
test
mov
xchg
sti
mov
push
add
mov
in
lret
and
jecxz
cmpsb
into
insl
or
ds
push
mov
jl
daa
in
cmp
lcall
cld
mov
inc
icebp
stos
mov
leave
loopne
push
xlat
insb
add
fsubs
mov
mov
ffree
sbb
xor
popf
dec
jne
and
aad
sbb
mov
aad
xor
enter
xchg
add
pop
dec
iret
aad
pop
mov
sbb
enter
dec
adc
fsubrl
pop
mov
scas
inc
testl
in
push
lahf
frstor
mov
sbb
daa
sbb
inc
dec
repnz
notl
pop
lock
leave
into
loopne
sarl
data16
or
bnd
cli
ds
mov
lods
leave
loopne
dec
sar
in
cmp
outsl
sbb
push
or
and
dec
mov
lods
aad
mov
test
push
ds
and
pop
leave
aam
or
sahf
repnz
mov
outsb
hlt
loop
movsb
xchg
mov
push
gs
xchg
push
int
js
pop
fists
aaa
cmp
scas
fcoml
scas
ja
aam
mov
jb
inc
pop
jnp
jo
ds
ds
mov
and
jle
xlat
sub
sbb
fnstenv
arpl
fldt
push
arpl
mov
xor
dec
inc
fsts
xchg
mov
fwait
pop
test
rcrb
leave
mov
repnz
out
and
jge
dec
insb
jo
out
mov
mov
xchg
and
stc
cmp
scas
aaa
lods
adc
sbb
das
jne
mov
mov
js
cld
mov
add
lret
pop
xor
xor
lds
push
xor
cmc
sbb
push
out
jbe
test
outsl
and
pop
test
mov
inc
jp
cmpsb
pop
scas
repz
loope
test
pop
sub
jno
dec
data16
je
jge
aaa
and
das
add
mov
sar
dec
les
mov
fists
ljmp
cmp
popf
shr
in
fyl2xp1
inc
mov
mov
add
es
mov
rolb
inc
cmp
enter
mov
jg
adc
cmc
push
das
mov
inc
push
xor
mov
divb
out
enter
je
or
sbb
test
es
ds
fistpll
into
and
xor
mov
data16
xchg
push
lcall
pop
sub
xchg
movl
les
jge
fs
lods
loope
cld
xchg
or
popa
jl
jl
sub
dec
adc
push
fimull
pop
mov
push
enter
push
jnp
ja
addr16
mov
xor
push
lcall
inc
cmpsl
push
dec
sbb
test
or
push
sub
sahf
repnz
fsubrs
test
rolb
lds
ss
es
int
push
rcll
les
xchg
cs
cs
and
jmp
stc
pop
jp
pop
mov
inc
and
js
orl
xlat
jp
jnp
aaa
icebp
sub
call
lods
cmp
into
dec
fldl
in
add
ja
lea
jp
lods
and
mov
fadds
or
sub
push
lea
int
sub
inc
jns
sarl
pop
push
rcll
sub
mov
jp
idivb
dec
mov
fsub
push
push
in
dec
sbb
fstps
fidivl
pop
push
xchg
cmc
pop
mov
inc
leave
stc
mov
rcll
lock
jno
ss
mov
js
and
push
inc
jb
ror
xor
pushl
add
sub
sub
mov
pop
pop
test
jae
int3
fnsave
shrb
arpl
mov
cmp
mov
xor
mov
jl
xor
call
sbb
ja
iret
cmc
pop
mov
fdivl
test
out
jne
out
add
pop
dec
ds
xchg
pop
mov
jno
mov
push
mov
xchg
lock
iret
scas
in
lock
inc
loopne
inc
enter
call
and
jnp
push
adc
jg
sbb
js
repnz
mov
cwtl
adc
jl
fists
cmc
dec
loopne
lods
or
jg
ret
movsb
sub
jo
loop
sub
sahf
fbld
inc
xchg
popl
enter
sbb
inc
adc
shrb
xchg
sahf
xchg
pop
add
call
rorb
in
dec
das
test
mov
or
inc
data16
shll
sbb
aas
mov
jle
and
jbe
nop
aas
mov
fimuls
pmulhuw
icebp
mov
cmp
pop
mov
sbb
aam
mov
inc
dec
xor
int3
push
insb
repz
push
imul
xor
inc
aad
or
jp,pt
sbb
test
mov
sbb
xlat
sub
out
dec
aas
jge
fwait
mov
shl
lret
mov
xor
mov
mov
xor
add
pop
cmp
push
je
pop
dec
dec
imul
cmc
bound
add
mov
jp
mov
mov
mov
xor
es
lret
dec
cmc
addr16
sub
loope
sbb
xchg
mov
scas
adcl
scas
cmp
cli
mov
popa
add
pop
cltd
mov
scas
add
fwait
mov
sub
leave
jbe
ds
rolb
and
stc
inc
pop
daa
inc
pop
lods
or
test
push
rorb
add
push
std
pop
rol
cmp
sub
sub
in
cmp
and
jge
fcmovnu
or
outsb
sti
push
loopne
pop
cwtl
jne
xchg
cld
xor
dec
nop
in
movsl
push
dec
and
leave
in
stos
pop
sahf
fdiv
jle
lods
lret
imul
test
int3
in
mov
push
int3
and
mov
xchg
in
lahf
test
and
jmp
pcmpeqd
jns
add
xchg
ret
lods
out
mov
sub
fstps
cmpsl
je
fdivrl
dec
cmpl
add
fimull
dec
and
push
daa
push
notb
mov
mov
and
faddp
mov
cmp
rol
xchg
das
scas
cwtl
fsubr
pop
sbb
ja
aad
xor
add
xchg
xor
lea
push
mov
xor
sbb
and
mov
sub
imul
dec
orb
push
scas
push
arpl
cmp
je
dec
xchg
jmp
and
dec
add
pop
es
adc
sahf
lcall
xchg
cmp
xchg
pushl
mov
clc
aaa
xlat
mov
int3
leave
outsl
xorb
cmp
mov
mov
daa
sbb
cld
xchg
add
jno
push
xor
test
push
xor
add
outsl
pop
or
mov
mov
sbb
pop
test
das
cs
pop
push
mov
lock
cwtl
cmc
leave
lea
cmp
test
lahf
negb
stc
jbe
add
aad
xor
xchg
les
sbb
sbb
jg
mov
nop
add
test
adc
jns
iret
fwait
imull
xor
xchg
pop
ljmp
mov
in
jbe
jle
pop
shrb
cmp
scas
ds
in
add
imul
cmp
xchg
and
cmp
pop
xor
xor
jg
push
incb
mov
cmp
dec
mov
out
ljmp
cmp
xchg
imul
in
adcb
sbb
in
xor
int
dec
jbe
mov
pushf
inc
push
movsl
in
test
xor
jg
pop
aas
loop
or
imul
push
pop
push
mov
inc
pushf
mov
js
jecxz
add
or
lods
mov
pop
mov
pusha
addb
fwait
mov
cmpb
sbb
loopne
outsl
inc
jnp
inc
add
inc
inc
inc
call
cmpsb
lods
rcrb
stos
pop
repz
jp
test
stos
jl
sbb
and
jo
jl
mov
cmp
fmul
sbb
inc
xor
and
and
pop
pusha
daa
mov
adc
and
adc
nop
mov
out
mov
out
sbb
mov
cltd
loopne
fwait
daa
movsl
jno
scas
arpl
ret
xor
or
sahf
adc
test
cmpsl
test
insb
loope
sbb
int
sbb
dec
fidivl
jno
ret
jo
sbb
jle
add
pop
aaa
mov
cwtl
mov
ljmp
push
insl
inc
push
test
sbb
repz
or
sub
dec
call
es
xchg
adc
lahf
sub
sbb
sbb
test
mov
inc
in
jecxz
arpl
pop
in
lret
pop
push
push
adc
lret
cs
push
sub
push
imul
imul
bound
lods
mov
lcall
es
shlb
mov
adc
adc
sarb
jecxz
stos
dec
cmp
test
sbb
loope
push
dec
sub
out
push
enter
mov
shrb
cmp
and
xchg
cli
and
or
and
shll
xchg
orb
sbb
sbb
test
sub
xor
push
pop
push
jns
rorl
rcr
rcrb
je
xor
test
hlt
fidivl
cld
test
sarl
call
call
sbb
push
mov
or
pop
cmp
mov
es
test
mov
movsl
push
ds
cmp
or
in
xlat
loopne
xchg
pop
add
out
or
adcb
adc
adc
sbb
pop
pop
add
fcoml
cmpl
lcall
sub
and
leave
arpl
push
test
cmp
mov
xor
pop
adc
mov
inc
mov
push
and
lret
fisttpll
and
subl
xchg
xchg
bnd
das
loope
sub
or
sbb
mov
push
add
pop
ss
mov
jmp
cld
js
cmp
clc
rclb
scas
adc
not
pop
pop
les
cli
add
dec
jmp
inc
jp
fidivs
mov
xor
mov
mov
stos
add
mov
mov
xchg
idivl
nop
add
popa
cmp
mov
inc
push
hlt
and
cmpl
pop
sarb
test
addr16
repnz
mull
data16
jae
xor
cmp
push
inc
ja
sti
adc
xor
xchg
push
sbb
sub
cltd
inc
imull
mov
ja
cmc
into
sub
test
les
cltd
test
pop
ljmp
sahf
into
pop
fs
sbb
jbe
enter
jl
aam
pop
and
out
mov
jp
dec
mov
or
inc
outsl
pop
repz
insl
imul
pushf
add
cmpsb
sbb
int3
mov
fwait
lds
test
ret
xor
sub
push
pop
push
mov
xchg
cmpsl
xchg
scas
or
push
add
mov
movl
call
add
lea
add
inc
cli
and
das
push
std
ret
test
inc
push
dec
or
sbb
inc
push
cmp
enter
pop
fsqrt
and
jne
push
mov
xlat
cmp
out
and
jmp
fsubrp
ret
icebp
jmp
cmc
rorl
bound
jl
inc
fs
cmc
jo
mov
das
pushf
xor
dec
mov
shlb
add
imul
inc
jns
ret
sbb
mov
insl
dec
mov
pop
outsb
lcall
cld
aam
jge
das
dec
inc
dec
xchg
jmp
cmp
jle
sbb
and
test
inc
in
mov
xchg
lahf
je
fisttpll
seta
mov
and
je
push
dec
sub
mov
sbb
nop
jl
pop
xor
mov
das
and
leave
xchg
sbb
add
push
xchg
lds
dec
push
pushf
scas
sub
std
sbb
cmp
mov
or
fildl
add
fstpl
in
das
sub
sub
xorl
sbb
popa
aad
inc
jns
mov
imul
cmp
out
data16
std
mov
push
dec
cmc
sti
scas
mov
fnsave
cmp
mov
mov
and
push
cmp
test
mov
rcrl
iret
loop
fs
aad
mov
dec
or
test
xor
pop
enter
xchg
es
pop
pop
inc
xchg
inc
std
iret
dec
shll
test
call
rol
and
jp
ljmp
push
jnp
in
mov
mov
push
in
aad
popf
popf
mov
cmp
xor
add
adc
test
xor
lea
cli
loope
xorl
out
pop
mov
or
adc
call
stc
pop
ret
clc
aad
cld
or
and
repnz
push
xchg
int3
mov
mov
lds
pop
mov
dec
addl
in
xchg
sbb
mov
xchg
push
or
xlat
js
in
cmp
cmp
andl
xchg
test
jns
sbb
or
xor
cmpsl
ljmp
into
mov
lahf
pop
je
push
sub
scas
jbe
je
das
xor
insl
add
cmp
push
sbb
jecxz
or
push
lock
dec
pop
dec
nop
das
add
rcr
adc
and
addb
xor
pop
clc
add
inc
dec
cmpsb
xchg
mov
lock
inc
xor
pop
adc
inc
lret
mov
or
and
in
push
call
psrld
dec
pusha
fistpl
out
sub
cmp
fdivp
and
xchg
pop
mov
lcall
jne
and
pop
cmc
into
jle
cmc
inc
cwtl
or
mov
sbb
fwait
push
pop
imul
push
cmc
shll
iret
in
fists
fisubrs
shl
jmp
stc
ret
mov
out
pop
in
out
pop
pavgb
flds
in
aas
push
js
jbe
xor
hlt
fwait
sarl
lods
xchg
in
pop
sub
clc
cwtl
jg
loop
jle
inc
mov
out
fwait
adc
data16
addr16
clc
sarb
pop
repnz
push
cmp
fdiv
aaa
inc
in
mov
sub
add
out
test
imul
rorb
test
leave
enter
lock
dec
sub
sub
xchg
test
call
add
and
repnz
or
dec
and
repz
test
in
lret
xor
push
dec
jge
sbb
adc
mov
push
or
and
mov
push
negl
cs
in
mov
div
push
adc
enter
mov
pop
mov
ret
mov
sub
ljmp
jmp
inc
xchg
xor
sbb
imul
add
mov
sub
nop
in
inc
bswap
icebp
loope
cmpsb
mov
push
cmp
rclb
or
jnp
and
fnstenv
rcll
mov
adc
das
mov
cwtl
mov
jo
xor
leave
cmp
jo
and
push
push
pop
jle
xchg
and
jne
lret
and
xlat
mul
xor
lock
insb
sarb
ret
or
ja
jg
outsb
fsubrs
jnp
mov
dec
fwait
iret
pop
add
sti
data16
mov
cmpsb
xchg
and
insl
out
or
jno
pushl
inc
mov
mov
inc
movsl
mov
inc
pusha
inc
cltd
andl
push
scas
lds
movsb
mov
mov
int3
jnp
out
fldcw
xchg
inc
cmp
jbe
ret
popa
cmpsb
xchg
mov
ljmp
rorb
mov
sbb
loopne
in
ljmp
xchg
movsl
cs
mov
mov
ret
iret
push
outsb
mov
jns
and
bound
clc
sub
push
inc
inc
negl
mov
mov
lds
aas
test
sub
call
inc
lods
icebp
sub
fcoms
xchg
jbe
jecxz
jl
loopne
out
repz
dec
rcrl
dec
mov
add
shrl
mov
dec
sbb
dec
adc
out
jne
test
jno
xchg
fidivrs
das
pop
sbbb
out
aaa
enter
push
in
push
test
cmpsb
and
imul
sub
jge
or
sub
cmc
mov
or
loop
fsubl
cmp
mov
js
sub
and
popf
inc
push
pop
mov
fwait
in
daa
push
pop
cmp
lock
out
xorb
jb,pn
jne
out
jge
pop
xchg
bswap
jnp
int
repnz
mov
and
add
sub
test
movsl
or
out
lds
push
pop
xchg
cli
and
jecxz
inc
fisubrl
mov
lret
sub
call
pop
gs
pusha
mov
mov
out
xor
int3
fsubrp
fdivr
and
push
push
in
int
xchg
pusha
jp
xchg
ljmp
cli
into
push
inc
pop
shlb
pop
and
push
andnps
pop
adc
jge
in
pop
lcall
cmp
pop
mov
pop
jg
or
mov
sub
mov
shll
mov
loop
jle
add
pop
stos
sarb
call
icebp
or
lds
adc
popf
lds
xchg
inc
ret
pop
pop
test
xor
inc
cmpsb
jbe
into
push
pop
pop
sub
test
int3
iret
xor
gs
mov
shll
jne
or
xor
cmp
out
roll
cmp
movlps
fnsave
xchg
xchg
fdivl
daa
sbb
pushf
sti
call
in
sbb
adc
shlb
cmp
pop
fidivrs
ja
ss
mov
inc
pop
mov
inc
xor
fdivr
add
test
test
call
mov
sbb
inc
adc
adcb
xor
ja
jae
mov
fdivs
insl
sahf
orl
mov
push
or
jg
mov
imul
into
jge
data16
mov
fcmovnu
das
sbb
rorl
mov
out
pop
test
testl
bound
mov
loope
stos
icebp
imul
insl
push
lea
movsb
fsubl
int3
dec
fadds
dec
sbb
push
dec
or
aam
movsb
adc
test
cmp
subl
daa
adc
mov
xor
mov
fiadds
mov
push
lret
push
scas
lock
jnp
lcall
enter
add
pop
pop
xlat
xchg
cwtl
cmp
push
xor
cmp
dec
iret
imul
faddl
cmc
ss
xchg
jecxz
push
stc
test
push
mov
lret
sarl
push
pusha
inc
lret
xor
jo
in
pop
mov
lods
jo
test
mov
jb
inc
outsl
loop
jmp
xchg
jb
sub
xchg
mov
fwait
in
mov
cmpsb
cli
jmp
cmp
jns
jo
scas
jne
inc
sbb
pop
mov
xchg
dec
bound
cli
push
xor
stc
mov
iret
lock
mull
shrl
mov
and
xchg
dec
cmc
sar
xchg
lds
in
pop
mov
mov
cli
inc
out
fidivs
add
sbb
mov
xlat
cmp
aaa
insb
sahf
and
adc
lea
jae
jg
mov
mov
xor
gs
jecxz
xor
sbb
adc
pop
jg
frstor
lods
fnstenv
sbb
inc
pop
ret
inc
testl
pushf
addb
jg
rcrl
inc
subb
arpl
inc
inc
data16
enter
xchg
fstps
cmc
fists
leave
insl
icebp
insl
div
int3
shrb
cmp
lahf
xchg
pop
popf
lret
mov
sbb
test
icebp
shll
std
test
fstl
les
scas
addr16
mov
sbb
aaa
add
shlb
push
push
jg
pop
pop
loope
in
mov
in
push
and
jecxz
icebp
cmc
cmp
push
xchg
scas
inc
xchg
adc
push
xor
pushf
aam
test
cltd
out
sbb
cmpsb
sbb
mov
pushf
out
xchg
lock
mov
ret
jl
aam
fdivl
jl
push
push
sbb
pusha
inc
lret
in
or
mov
out
jne
jl
hlt
mov
insb
shll
xchg
ret
lea
movsl
cmp
mov
push
inc
jmp
insb
pushf
outsl
outsl
js
cmp
and
out
lods
lods
xor
push
push
gs
mov
mov
addl
xlat
adc
xor
lret
pop
loope
pop
aaa
and
lods
xchg
pop
out
xor
loop
cli
sbb
push
insl
jmp
shlb
dec
xor
sub
xchg
mov
test
or
dec
adc
in
xchg
pop
mov
push
mov
sub
xchg
and
out
inc
jno
lock
push
push
lahf
negl
mov
shrb
aas
in
inc
test
and
fdivrl
inc
out
or
adc
insl
mov
xor
sbb
iret
stc
mov
pop
inc
xchg
ds
xchg
ds
sti
scas
roll
mov
daa
mov
call
ja
cli
fwait
test
jns
insl
daa
xlat
je
lret
and
mov
mov
sbb
rcrl
cli
jb
adc
jbe
add
scas
cli
iret
rolb
pop
push
les
int3
pop
mov
or
popf
inc
xor
add
jo
xchg
cmp
shrl
xor
psubq
das
mov
notb
jnp
sbb
sarb
outsl
add
in
adc
cmp
mov
sub
jbe
js
add
aad
ljmp
dec
test
pop
inc
daa
or
shrl
lret
sub
mov
ds
das
icebp
pushf
movsb
xchg
xor
out
fdiv
testl
xlat
shrl
xchg
ss
push
mov
xchg
inc
out
jmp
xlat
jle
adc
loope
jno
mov
xor
cwtl
or
ja
iret
scas
gs
ljmp
jno
dec
pop
inc
test
icebp
add
fwait
adc
cltd
pop
fnstcw
es
repnz
or
pop
fwait
movsb
jns
into
enter
push
xor
fwait
sbb
add
push
movsb
sub
lea
test
pop
mov
xchg
mov
cs
pop
scas
pop
inc
pop
fists
xor
sub
jge
sbb
add
arpl
jecxz
lods
inc
sbb
fiadds
mov
xchg
cld
cmp
push
cmp
rolb
je
fidivrs
jecxz
shlb
inc
je
jecxz
rcl
mov
sbb
loop
sahf
lods
imul
in
pop
mov
leave
adc
mov
mov
notl
pop
lock
ja
sub
sbb
fmul
add
xchg
inc
fwait
cmpsl
andl
pop
sbb
or
adc
sahf
out
jbe
or
in
rorl
addb
push
roll
mov
mov
mov
mov
repz
int
nop
leave
rcrl
call
mov
sahf
mov
std
sbb
dec
lods
insb
cli
fidivrl
jo
xchg
dec
lock
ljmp
push
in
ret
lds
pop
mov
add
pop
in
sbb
sar
sub
je
inc
add
add
aad
fwait
xchg
sbb
mov
rolb
stos
jge
mov
dec
fs
test
and
add
xor
mov
int3
jmp
mov
repz
mov
cmp
fidivl
xchg
fildll
inc
loop
std
xlat
out
mov
lret
data16
cwtl
sub
fcmovb
addr16
and
mov
mov
cmp
mov
push
ret
rclb
stos
mov
fdivr
fildll
push
lcall
inc
clc
mov
jmp
xor
xchg
cwtl
mov
sub
mov
mov
and
subl
sub
push
out
add
or
and
lea
mov
mov
jge
xchg
lret
inc
rorl
test
lret
sub
lods
popa
sub
sbb
inc
cmpsb
xchg
xchg
enter
jno
cmp
mov
and
mov
push
hlt
pushf
in
sub
jmp
data16
data16
push
pop
fisttpll
bound
push
jle
push
imul
out
sarb
bound
mov
clc
push
or
imul
iret
clc
jo
mov
lock
incl
lods
adc
test
pop
fcoml
aaa
mov
dec
iret
xchg
jb
add
sbbb
jmp
xchg
daa
xchg
gs
mov
pop
icebp
je
jb
gs
loopne,pt
cmp
scas
lods
cmpb
pop
rorl
loope
cmp
pop
inc
xchg
ret
lahf
bound
dec
mov
mov
jns
or
jle
jmp
ja
ficoml
into
fisubrs
aad
daa
repz
stos
daa
shl
sbb
jmp
mov
xchg
mov
sahf
ja
push
mov
lods
push
lea
je
cmpsb
out
mov
cmpsb
aaa
sub
nop
xchg
daa
arpl
dec
les
and
loope
lock
xor
sbb
rclb
ja
aam
mov
sbb
and
leave
insb
cwtl
dec
dec
jmp
bound
aaa
mov
leave
and
and
fidivl
mov
rcll
lods
out
out
cmp
mov
cmp
bound
xchg
std
adc
dec
and
inc
jb
inc
mov
outsb
xor
aad
adc
push
lock
lea
xchg
cmp
icebp
jns
rolb
inc
aam
adc
add
push
aas
fldt
jle
imul
jmp
xor
push
dec
das
fstps
out
lret
sar
cwtl
and
pmaxsw
cltd
sub
pop
stc
insb
sub
repnz
jp
mov
jmp
lods
js
push
xchg
sbb
aaa
lret
ja
fisttpl
push
fs
push
and
add
adc
mov
cmp
or
xchg
mov
lods
test
push
adc
jae
in
stc
mov
dec
sub
mov
push
aam
lock
jnp
jl
outsb
repnz
loopne
sub
sar
pusha
scas
jp
ljmp
jp
and
fistl
ljmp
popa
outsb
ja
xchg
adc
ja
pcmpgtd
sub
jl
sub
outsl
sub
sbb
stos
fidivrs
repnz
add
lods
ficoms
pop
add
mov
mov
enter
xor
pop
cmp
stos
xor
pop
adc
lea
cmp
loop
fidivl
into
or
inc
nop
mov
lds
lds
aam
push
push
rorl
lods
cltd
jne
push
push
mov
pop
pop
jbe
mov
xchg
jle
mov
jge
xchg
dec
mov
push
and
pop
lcall
jg
sub
dec
cld
icebp
mov
adc
into
lock
adc
or
test
pop
iret
inc
mov
clc
test
je
xchg
insb
repz
outsb
sbbl
jno
pop
xchg
in
or
push
lret
shrb
jmp
fwait
js
lret
sbb
xor
jnp
push
xor
sbb
data16
mov
outsb
adc
mov
nop
add
mov
out
inc
insb
gs
pop
or
lret
mov
lret
lcall
call
xchg
or
push
bound
rolb
sahf
daa
mov
xor
cs
lcall
loop
xchg
mov
cmp
push
mov
xchg
cli
xor
arpl
mov
jecxz
sub
fdivs
call
adc
mov
insl
out
xor
andl
push
xchg
xchg
cltd
sbb
shlb
jg
pop
cltd
in
inc
lods
sahf
inc
jbe
push
fdivs
mov
push
mov
sbb
addr16
ret
and
lods
test
mov
and
cmp
mov
push
mov
push
insb
fmull
xor
in
sbb
xchg
cmpsl
add
fs
mov
jecxz
and
cmp
pop
int
sti
and
loop
xor
push
and
mov
sti
mov
pop
add
inc
add
in
or
jno
mov
xchg
lock
cmp
add
pop
xchg
pop
adc
and
mov
push
fcompl
or
repnz
xor
jo
push
ds
xor
jno
and
rorl
cmp
out
imul
pop
in
adcl
cmc
pop
lret
and
or
cwtl
aad
out
and
shll
aad
mov
call
pop
add
xlat
iret
mov
lret
sti
mov
xchg
rcll
mov
dec
fdivr
roll
xchg
mov
ja,pn
aaa
or
cld
mov
dec
mov
cs
xchg
sbb
in
pop
shl
pop
xlat
mov
int
mov
int
mov
jge
dec
jb
and
inc
adc
icebp
or
je
fwait
mov
lds
mov
loop
xlat
xor
jb
dec
mov
lock
ret
xchg
stos
cmp
notl
push
push
sub
aas
xchg
mov
inc
sub
lret
or
mov
jae
jnp
jmp
testl
cmpsb
inc
stos
xor
sbb
cmp
push
sarl
scas
jbe
dec
aas
repz
or
adc
js
jnp
lods
out
jg
mov
sbb
sub
sbb
adc
dec
pop
xor
dec
cmp
add
test
mov
dec
jcxz
mov
insb
popa
cmp
mov
pop
ficompl
mov
inc
repz
dec
push
ja
repz
add
jb
mov
ljmp
in
addl
in
mov
xchg
dec
cmpsb
inc
repz
add
aam
inc
xchg
mov
enter
ds
push
push
adc
loope
out
dec
sbb
sub
int
adc
fwait
lea
div
sub
pop
jne
into
ljmp
sar
ja
sahf
call
cli
push
cwtl
inc
push
int3
dec
mov
push
fcompl
add
sahf
rcrl
xor
inc
cmp
sub
or
push
sbb
fsub
sub
stos
popf
cmpsl
lea
les
mov
push
jo
pop
int3
cmpsb
pop
sbb
lret
and
ja
jns
or
jb
push
fisttpll
es
mov
loop
dec
xor
mov
fisubs
sbb
adc
ret
push
icebp
lcall
mov
jg
push
lods
shufps
ss
jmp
jo
repnz
jne
aam
adc
add
cmpsb
dec
cli
mov
dec
sbb
loop
out
add
lds
push
sbb
push
subl
faddp
jno
jg
mov
insl
ficoms
pushf
cmp
jmp
mulb
sub
nop
out
cmpsb
scas
mov
jno
push
rsm
andl
test
mov
inc
fldcw
push
addr16
in
lahf
sbb
push
insl
outsl
ljmp
jecxz
lock
bound
movsb
sub
fisttpll
jmp
in
jne
mov
or
ret
in
mov
cmc
dec
lahf
xchg
mov
inc
sub
mov
cmp
dec
fs
loop
pop
cmp
lahf
int
sub
add
test
mov
pop
mov
lods
cmc
bnd
out
adc
mov
test
cmp
sbb
or
fmull
inc
jmp
mov
inc
cmp
ds
cmp
cmpl
jnp
pop
or
xor
fsubrl
rcl
addr16
push
mov
repz
and
sbb
cld
mov
dec
pop
push
jne
pminsw
jae
push
or
test
pop
shll
cmp
and
cmp
or
mov
sbb
cmp
push
into
in
pop
sti
jg
mov
loop
fdivrl
inc
sub
daa
addr16
push
loope
mov
xchg
inc
sub
push
cmp
jo
xlat
fistps
xlat
jmp
mov
sahf
loope
fldpi
inc
rcll
into
sarb
sub
in
xchg
add
adc
inc
cmp
fdivs
pop
pushl
adc
mov
mov
push
sub
insl
nop
rorl
inc
add
ret
xchg
sbb
dec
cmp
dec
fmull
mov
and
mov
ja
mov
dec
dec
dec
cmp
inc
pop
jns
pop
loope
insb
sub
in
jnp
mov
rcrl
xchg
xor
or
push
pop
mov
add
imul
mov
test
shl
mov
and
aam
call
mov
arpl
arpl
stc
xchg
pop
fwait
movsl
mov
pop
fdivs
in
cld
cmp
pusha
stos
jle
loop
js
shrl
stos
rcr
inc
pop
xchg
aam
and
cmp
and
pop
push
cmpsl
sbb
fwait
insl
add
test
sub
xchg
lahf
xor
rol
or
mov
ds
rorb
sbb
cltd
repnz
ficompl
sub
mov
push
outsl
mov
inc
out
jae
mov
aad
cmpsb
cmp
cmp
aaa
xor
xor
add
xor
sbb
jbe
mov
movsl
ljmp
inc
xor
cmpsb
fadds
jge
enter
dec
pushf
xchg
xlat
xchg
sbb
mov
inc
push
call
dec
ret
and
in
scas
fimull
idivl
ljmp
in
dec
aad
push
cmp
ret
repz
subl
outsl
dec
lea
bswap
mov
mov
insl
sub
pop
in
sbb
mov
lods
std
repnz
pusha
jmp
fninit
jns
adc
xchg
in
std
cltd
mov
pop
dec
pop
imul
xor
jg
iret
xor
xorb
fwait
jo
mov
leave
mov
call
pop
xchg
ficoml
mov
adc
jge,pt
mov
pushf
aam
outsl
jns
push
push
xchg
pusha
mov
inc
cmp
sbb
into
pop
in
xor
dec
ficoms
adc
jns
call
cmc
call
fidivrl
mov
push
inc
xor
arpl
mov
arpl
add
bound
sbb
mov
and
sbb
in
leave
sarb
jle
sti
call
aas
mov
xor
xor
jns
rcl
push
jl
fcompl
aad
sti
data16
sub
lcall
decb
loope
popa
shll
add
xchg
cmpsb
add
repnz
or
stos
pop
pop
adc
aad
pop
inc
lds
cmc
mov
sub
add
mov
mov
inc
cs
jno
int3
insb
je
xchg
pusha
mov
stc
sti
and
pop
cld
sub
mov
gs
jo
sbb
rorl
int3
ljmp
push
lret
out
and
dec
icebp
sahf
pop
xchg
add
in
ss
pop
mov
ds
mov
push
xor
nop
popf
dec
popf
in
insb
xchg
sbb
mov
aam
fcmovnbe
mov
ret
pop
cwtl
or
in
jle
sti
mov
dec
insb
inc
push
cwtl
add
pop
arpl
sbb
aam
adc
fcomps
leave
sbb
aas
scas
sub
push
xor
mov
sub
jp
jb
cmc
pop
movsb
out
stc
movsb
push
insl
fdivs
xor
out
xchg
pop
cmc
xchg
subb
xchg
push
insb
dec
sbb
or
cmp
mov
mov
inc
inc
push
mov
mov
cmp
mov
mov
dec
fs
push
movsl
arpl
shll
scas
pop
mov
in
sti
push
xlat
push
addr16
xchg
lock
sub
ljmp
dec
out
lea
arpl
daa
or
subl
arpl
leave
and
jecxz
pusha
jnp
bound
out
ja
ja
das
enter
inc
movsb
fcmovne
je
and
add
sub
sub
mov
gs
add
xor
dec
and
adc
inc
push
jae
add
adc
lret
stos
js
push
inc
pushf
pushf
adc
jbe
sbb
cwtl
pop
repnz
cmpsb
aad
aad
repnz
jno
xor
mov
and
cmp
push
jmp
int
adc
int3
xor
pop
out
mov
adc
sub
js
sub
dec
inc
add
test
mov
sub
xchg
aam
sbb
ret
in
push
popa
xor
xchg
pop
and
jno
and
lahf
movsb
imul
mov
out
push
push
or
lock
mov
jo
xchg
mov
call
xchg
fcmovnu
push
pop
jns
mov
xor
push
pop
or
sbbl
pop
adc
int
or
add
in
add
ljmp
pop
cld
dec
jmp
or
pop
jl
js
in
ja
test
jno
js
dec
int
and
mov
in
mov
lret
inc
arpl
rorl
sub
mov
mov
mov
push
and
pop
pop
mov
jbe
cmp
mov
mov
mov
adc
lds
push
out
mov
out
pop
jl
mov
pop
add
xor
in
jmp
jge
test
stos
stos
ja
fbstp
push
or
jg
inc
add
push
mov
pop
xlat
pop
and
mov
ja
add
push
fnstenv
jmp
cmpsb
leave
jg
sub
scas
xlat
add
and
inc
pop
das
ja
fadds
jg
sti
nop
insl
mov
pop
lock
mov
push
out
punpckhwd
mov
and
scas
sbb
pop
inc
dec
loopne
or
mov
cli
movsb
lret
out
dec
xor
lock
lret
in
je
icebp
sub
dec
pop
movsl
nop
sbb
cli
cmp
aaa
mull
add
xchg
jge
jle
mov
adc
bswap
psubsb
mov
mov
adc
push
test
imul
adcl
scas
aaa
int3
and
subb
mov
insb
ljmp
dec
or
mov
jg
int3
js
adc
inc
mov
add
adc
in
cmpsl
stos
pop
fistl
movl
loopne
jl
jmp
mov
shl
mov
inc
fsts
in
mov
dec
ficoml
sub
inc
scas
or
xchg
cmpl
mov
out
and
bound
pop
fldenv
mov
pop
loopne
cltd
xchg
cmc
repnz
xchg
add
js
push
push
outsb
jmp
jae
int3
sbbb
and
push
fldl
jle
pop
lret
mov
mov
cli
fwait
das
lea
fdivrl
fwait
jmp
int3
in
shlb
mov
in
mov
pop
popf
nop
and
mov
mov
pop
out
imul
adc
and
mov
ret
cmpsl
jecxz
insl
inc
jbe,pt
adc
mov
xchg
imul
and
and
shr
mov
dec
and
fldt
xchg
and
fsubrs
sti
sbb
movsb
in
mov
fcmovnb
cltd
sub
lret
icebp
fimuls
dec
dec
push
ss
sub
aaa
jmp
int3
mov
adc
scas
pop
cwtl
mov
inc
pop
push
cmp
xlat
dec
mov
addr16
sar
imul
cwtl
lea
sub
jecxz
mov
adc
dec
stc
int3
stos
scas
dec
push
dec
es
addr16
jl
xor
sbb
addr16
rorl
mov
ds
push
das
lret
pop
fdivrp
adc
loop
shll
sub
js
adc
xor
mov
jae
repnz
pushf
push
cmpsl
clc
jnp
adc
fsubrs
sahf
pushf
xlat
movsb
or
dec
loopne
mov
adc
iret
in
scas
mov
mov
mov
sbb
cmp
es
pushl
call
sbb
mov
adc
test
test
xor
bound
xor
call
repnz
jb
add
sti
cmp
aad
mov
or
nop
mov
shll
mov
and
inc
or
dec
cwtl
cs
add
push
in
cmp
ficoms
adc
out
dec
jmp
lcall
outsb
fdivr
xor
push
and
mov
xor
movsl
mov
dec
push
push
mov
les
jge
repz
fwait
addl
mov
shrb
jmp
or
or
ja
jmp
rclb
dec
sub
cmp
loopne
push
adcl
dec
outsb
and
cmc
push
ds
loope
imul
cmp
push
and
xor
push
adc
enter
movsb
inc
or
xchg
mov
in
jns
enter
mov
or
int
rcrl
inc
jle
sbb
enter
test
inc
or
shr
fadds
mov
mov
enter
inc
hlt
adc
movsl
dec
lret
sub
stc
sbb
pop
inc
xor
fcompl
mov
lock
lcall
pushf
flds
mov
test
mov
jae
iret
xchg
out
shl
jge
stc
in
aam
movsb
push
pop
sbb
mov
sbb
jl
stc
sahf
fiaddl
xor
jbe
jb
cmp
inc
mov
xchg
sbb
sti
mov
sbb
dec
pop
iret
and
push
outsl
das
insb
and
dec
ret
or
pop
adcb
pop
test
xchg
sub
mov
pop
dec
jbe
enter
dec
jbe
sbb
and
or
inc
jns
ffree
mov
mov
hlt
mov
fbstp
inc
fsts
call
addb
in
outsl
pop
lahf
lea
xor
and
pop
lods
std
dec
out
mov
xor
or
hlt
int3
add
or
mov
and
cmpsl
pop
stc
popa
sub
cmp
or
add
cmp
jae
push
popa
sub
mov
mov
push
add
data16
adc
lock
ja
sbb
notb
in
rclb
in
cwtl
mov
push
push
inc
dec
aam
sub
xchg
pop
shrb
popf
popa
call
adc
lods
mov
cmp
pop
pop
pushf
mov
scas
in
enter
sub
testl
push
or
fdivrp
mov
xor
jns
insb
or
push
jns
sub
hlt
test
repnz
aas
mov
and
call
sbb
adc
es
mov
insb
pop
push
iret
cmp
jg
push
mov
cmc
addl
testb
mov
testb
pop
add
mov
adc
in
push
mov
test
rorb
sbb
sbb
imul
mov
fcompl
cmc
nop
and
sahf
xor
push
xchg
push
push
punpckldq
outsb
popl
ss
movsb
enter
insb
jecxz
and
je
lea
ret
pop
push
fisubl
gs
sbb
sbbb
sub
xor
sbb
fmul
cli
dec
mov
cmpsb
les
mov
mov
mov
xor
mov
icebp
sub
je
lock
pop
dec
aas
or
dec
mov
nop
outsb
pop
mov
mov
andl
xlat
lods
in
fs
sub
test
andb
mov
hlt
xchg
popa
cmp
leave
out
push
in
xchg
adc
inc
sbb
xchg
cmp
mov
xchg
and
sub
jbe
orb
imul
imul
out
addb
jp
xor
addl
mov
jb
mov
addr16
pop
inc
imul
insb
dec
sbb
test
lods
mov
jne
ret
nop
das
adc
sbb
int
and
in
sbb
sbb
int3
dec
push
jge
jge
shll
lods
out
cltd
enter
aaa
or
pop
popa
in
fdivrs
int3
fidivs
or
push
or
mov
push
jae
in
popa
pop
adc
fstps
sbb
leave
push
js
push
out
push
mov
add
ret
xor
fst
mov
xor
jl
jmp
mov
or
inc
add
or
popf
stos
or
pop
add
dec
mov
xor
mov
enter
adc
lret
cmp
jmp
flds
pop
mov
mov
ror
inc
mov
or
lcall
sub
mov
xor
es
sbb
push
sbb
xchg
or
ljmp
int
aaa
or
hlt
jo
mov
inc
fnsave
insl
dec
mov
jae
in
jno
push
cmp
data16
push
data16
ret
mov
adc
outsl
sub
xor
andl
add
iret
cmp
inc
lahf
mov
cmp
cltd
cmp
push
scas
mov
cmpsb
dec
sahf
into
jg
sahf
xchg
ret
jl
pop
mov
or
jo
aam
in
scas
int3
test
pop
pop
cwtl
in
test
adc
imul
popa
pop
test
ficompl
dec
add
fwait
dec
insl
cmpb
sbb
dec
lea
test
ljmp
dec
cmp
push
repnz
and
adc
pop
cltd
addb
cltd
pop
mov
aaa
adc
ja
xor
cld
sbb
inc
mov
nop
lret
or
int3
and
sub
outsl
cmovs
lea
ds
icebp
repnz
or
dec
sub
mov
std
mov
and
add
iret
pop
xchg
fdivrs
pop
and
dec
mov
cmp
loope
out
add
leave
sarl
lahf
sub
idivl
aas
imul
push
adc
int3
loopne
andb
sub
shll
out
sbb
popf
sbb
fsubrl
pop
aam
dec
inc
int
mov
jmp
lret
shll
ficomps
mov
popf
cs
jmp
outsb
mov
jbe
shll
push
push
fcoml
adc
lods
pop
stos
push
sahf
adc
sub
fdivrl
cmp
dec
lahf
add
leave
call
and
cs
xor
repnz
xchg
dec
push
out
movsl
mov
mov
jg
pop
bound
imul
or
lods
fldt
or
fisttps
loope
lods
mov
sbb
ljmp
rcl
push
lret
push
clts
jl
xchg
or
inc
lea
mov
fnsave
test
inc
gs
scas
arpl
cmp
pop
jge
fcomps
sub
imul
push
dec
mov
in
and
das
mov
or
or
jge
in
mov
dec
les
flds
jg
cltd
or
kmovd
pop
iret
lods
sub
add
std
sub
hlt
cmp
jmp
push
stos
ds
pop
iret
mov
ret
js
or
inc
testl
xor
and
imul
cwtl
mov
pop
sbb
inc
cmp
inc
icebp
push
sti
scas
xor
inc
jmp
andb
sbb
sahf
shrb
push
cmpsl
cmpsb
mov
vucomisd
mov
int3
pop
into
adcl
subb
loope
sahf
sub
test
mov
out
or
adc
jno
mov
mov
and
and
ss
and
push
dec
mov
fwait
mov
repnz
push
pop
xchg
and
mov
mov
adc
stos
pop
rol
mov
pop
or
sub
repz
int3
lret
aad
jmp
and
pop
push
cwtl
cltd
sbb
repnz
or
mov
cmp
mov
or
adc
sbb
or
dec
imull
iret
test
int3
psllw
dec
mov
jl
and
addr16
movsb
push
mov
mov
mov
sub
mov
inc
inc
movsb
push
test
idivb
dec
ss
leave
bound
push
and
fldln2
mov
mov
stos
psllw
xor
pop
mov
sub
out
sbb
pop
in
addr16
cmc
adc
sub
pop
dec
rorb
mov
sub
and
mov
cmp
and
xor
xchg
cld
or
dec
push
cmp
lods
pop
mov
popf
pop
jae
cwtl
test
hlt
das
xor
fwait
mov
and
and
jge
aam
ss
mov
cwtl
or
push
dec
add
adc
test
jge
fstpl
dec
push
jecxz
xor
mov
jmp
imul
mov
pop
test
test
jp
fidivl
inc
dec
push
cmp
cmc
mov
pop
loope
sub
jle
xor
sbb
lea
clc
xchg
push
ss
ret
xchg
mov
test
call
push
and
out
inc
ficoms
inc
pusha
clc
inc
pop
mov
jnp
pop
push
mov
aad
sahf
cli
mov
xchg
add
push
or
in
push
insb
xchg
mov
mov
clc
dec
jb
rorl
jp
cld
adc
push
stos
pop
shlb
in
insl
out
jae
movsb
cmp
icebp
in
push
or
stos
cmp
inc
cmp
push
aam
loopne
fistps
sub
xchg
out
mov
in
and
orb
lods
pop
popa
push
imul
xor
test
cmp
int3
dec
push
jp
dec
cli
mov
jnp
loopne
xor
sbb
cmc
scas
jge
dec
pop
test
mov
pshufw
or
jo
mov
dec
sbb
scas
popf
push
xchg
cs
ljmp
mov
lods
sub
dec
mov
xor
sub
bound
scas
xor
cld
jo
lahf
int3
sub
lret
imul
mov
test
mov
mov
jnp
ds
dec
ja
sbb
cmc
mov
adc
sbb
inc
and
adcl
mov
insl
insl
inc
add
pop
add
add
xor
hlt
pop
cli
or
xor
test
iret
dec
pop
cmp
mov
jbe
loope
or
jbe
adc
sbbl
dec
push
fucom
jno
imul
dec
mov
stc
push
jg
xor
cmp
pop
lds
mov
push
cli
das
dec
push
test
and
inc
seto
xor
mov
cmp
sti
data16
xchg
xchg
sub
push
insb
fcompl
add
or
push
jb
daa
jne
jae
ljmp
dec
js
or
test
lret
mov
out
ret
adc
stc
iret
movsl
lret
inc
fwait
mov
sti
in
roll
test
or
shll
dec
pop
mov
shll
inc
pop
xchg
mov
mov
ret
aad
dec
sbb
js
pop
xchg
push
clc
xor
mov
hlt
lcall
cmpsb
scas
add
aas
ss
aam
mov
sti
dec
aam
xchg
pop
push
fstp
shll
out
xchg
xor
jp
xor
mov
jns
imul
xchg
popa
sub
ret
sbb
sub
mov
scas
mov
ficoms
movsb
pop
inc
or
dec
div
or
xor
cmpsb
xorl
cwtl
add
ret
xor
sub
outsl
pop
lea
sbb
sbb
sbb
es
mov
xor
std
cwtl
testl
pop
std
inc
dec
dec
pushf
es
dec
or
lea
sbb
jo
and
mov
mov
xor
mov
and
adc
les
push
lods
pop
mov
pushf
push
lcall
out
and
aad
lret
and
outsb
add
xchg
lcall
aam
push
inc
leave
inc
cmp
mov
cmpsl
or
clc
es
int
push
inc
or
mov
imul
outsb
enter
lds
jno
jg
xchg
add
inc
xor
xor
inc
jb
lea
loope
xchg
popf
pop
mov
fnstcw
xor
lret
xchg
mov
mov
dec
cs
xchg
fnsave
xchg
pusha
es
lret
test
add
fists
pop
push
cmp
cld
sbb
sbb
mov
adcl
popf
outsb
in
packsswb
cmp
mov
cltd
hlt
inc
sarl
dec
add
jo
cmp
cld
inc
dec
jmp
jle
xchg
sahf
rcll
js
mov
call
sub
xor
shlb
inc
ror
imul
push
add
mov
iret
pop
xchg
sbb
sub
mov
mov
enter
lcall
xchg
add
nop
movsb
bound
xor
dec
lock
jp
mov
sbb
push
mov
or
shrb
cmp
pop
cmp
xor
mov
push
push
mov
pop
sub
push
push
sub
imul
inc
pop
mov
test
aaa
xor
mov
sub
sub
push
mov
out
sbb
cmpsl
aad
xlat
and
ficomps
or
lock
in
bswap
cmp
sub
sbb
rolb
out
addb
pop
pop
in
loopne
or
pop
stc
and
sub
gs
adc
imul
outsl
xchg
inc
mov
arpl
aad
imul
hlt
int
add
lods
mov
lods
push
gs
les
adc
pop
mov
orb
jmp
dec
mov
jmp
jnp
mov
test
fldt
insl
mov
jns
popf
insl
sti
xor
pop
add
cmpsl
jns
lcall
and
mov
jg
jl
lods
jo
jnp
xor
fmuls
hlt
mov
add
cwtl
jbe
dec
xor
push
fucomip
es
out
mov
push
int
or
add
lcall
into
push
or
or
psubb
add
xchg
lret
add
mov
pushf
arpl
aam
jp
rolb
xor
cmp
push
or
sbb
mov
inc
popa
mov
xchg
aaa
sub
clc
sbb
xchg
shlb
in
faddl
decb
push
adc
cmc
pop
notl
jbe
cmp
push
adc
scas
sub
stos
sbb
in
js
cld
dec
out
xor
es
fwait
in
jmp
imul
imulb
gs
movsb
ret
jg
fsubrl
push
inc
fbstp
adc
push
adcl
mov
fimuls
mov
outsb
mov
lock
dec
xor
pop
bound
xorb
cli
enter
push
insb
js
adc
push
mov
outsl
pop
lods
dec
sbb
in
cmpsl
or
outsb
jle
in
shlb
dec
outsl
push
push
bound
mov
loopne
addr16
out
mov
shll
fs
aas
jmp
popa
add
cmp
out
push
push
ds
test
jno
stos
lret
inc
mov
pop
push
btc
mov
data16
call
int3
pop
mov
fs
jnp
popf
neg
xlat
pop
fxch
jb
lahf
jg
sub
sub
inc
cltd
out
jo
fsts
out
outsb
les
lock
outsb
dec
pop
inc
mov
sub
cmpsb
push
mov
push
out
popa
lods
popf
sub
gs
out
and
push
aas
leave
and
out
rcl
imul
dec
jb
or
dec
cs
cmp
and
add
jae
ljmp
lahf
inc
mov
pushf
xchg
scas
pushf
in
gs
push
push
push
hlt
lds
sbb
xor
pop
call
sub
inc
aad
mov
fistps
rorl
mov
jnp
mov
imul
cwtl
out
pop
les
pop
push
test
jae
pop
jecxz
outsb
mov
bswap
out
loop
or
jbe
int
pushf
push
mov
call
sbb
orb
xchg
push
jo
xchg
imul
jmp
movb
jecxz
pop
xor
call
mov
das
inc
sbb
movsb
repnz
adc
das
pop
add
ja
mov
pop
lds
in
push
jnp
lods
jge
test
mov
adc
pop
icebp
push
mov
jno
stos
inc
cltd
mov
sti
pop
hlt
jb
push
pop
jno
cmc
dec
ss
push
jg
bound
fisttpll
push
call
mov
jnp
mov
sbb
fst
loop
jg
pop
add
add
inc
movsl
add
cmc
lret
je
out
sbb
xchg
aaa
cmp
jle
das
call
add
lret
repnz
sub
sbb
iret
ss
jns
pusha
and
push
sub
ss
push
add
pop
pop
icebp
inc
enter
popf
jnp
out
jecxz
repnz
cmp
mov
clc
xchg
mov
decb
in
jmp
fsubl
add
inc
test
lock
lea
in
lahf
or
mov
dec
pand
out
dec
xchg
jp
icebp
js
jbe
jl
adc
rorb
push
dec
inc
aas
fs
fwait
in
push
adc
and
loope
aas
add
cmpsl
clc
cmp
xchg
iret
inc
sbb
or
xchg
dec
xor
ret
fsubr
std
xchg
cltd
in
push
fidivrl
sbb
lahf
lahf
sub
inc
lsl
scas
mov
enter
data16
or
sub
mov
imul
and
outsl
sbb
pushf
enter
mov
subl
cmp
inc
mov
cld
mov
sub
push
in
imul
inc
fistps
sub
lret
out
sbb
jb
out
and
jne
xchg
sbb
sbb
pop
and
xchg
rorb
mov
lock
dec
xor
xchg
dec
flds
sbb
shlb
hlt
fidivrs
sub
ljmp
mov
mov
sbbb
xchg
adc
ret
mov
add
outsb
test
test
push
ret
fmull
push
bswap
push
sbb
or
sub
lcall
jl
in
ret
je
xor
adc
cmpsb
mov
lods
movsl
mov
and
mov
mov
psubd
inc
push
mov
scas
inc
orps
inc
cli
scas
pop
add
cmp
repz
xchg
cwtl
mov
loope
pop
push
cmpsb
xchg
inc
and
aas
mov
sbb
adc
or
add
test
in
dec
mov
jl
sub
sub
sub
ja
cli
mov
jns
insl
stc
cmpsl
rcll
dec
mov
out
push
test
jns
lods
cmc
sbb
push
jnp
push
add
mov
jmp
call
out
xlat
out
xchg
lods
idivb
loopne
cli
rcll
sub
das
push
shll
ds
pop
push
inc
pop
xchg
sbb
popf
dec
push
add
nop
in
ja
das
in
inc
adc
test
xchg
leave
pusha
inc
mov
jbe
imul
mov
jle
icebp
cmp
repnz
push
insl
xchg
or
and
adc
loopne
lods
repz
rorl
push
mov
xor
cmpsb
jge
ja
out
sub
loopne
cmp
lods
sbb
push
cwtl
lahf
add
dec
inc
test
mov
mov
adc
call
dec
ja
lcall
push
pop
and
loope
enter
cmpsb
in
jns
ss
daa
pushf
cltd
add
mov
xor
dec
and
xchg
and
inc
mov
xor
dec
pop
mov
shll
add
idivb
pop
push
js
jmp
push
jo
mov
mov
and
out
jp
xchg
test
leave
pushf
icebp
je
cmp
mov
mov
shlb
rcl
iret
std
xchg
lock
lcall
and
call
aaa
in
in
je
jl
and
and
shrb
mov
cld
push
stos
test
mov
sub
add
inc
inc
popf
hlt
jns
rcrl
and
bound
xchg
xor
add
pop
adcb
sarb
lods
xlat
outsl
pusha
inc
push
mov
cmc
sti
das
lds
sbb
xor
test
test
jmp
inc
dec
jmp
fidivs
mov
jae
scas
push
and
xlat
add
les
add
mov
mov
and
push
mov
xor
dec
add
mov
xor
test
inc
shll
pop
fcmovne
mov
aaa
xor
sub
rcrb
xchg
fsub
jmp
rcrb
jge
outsl
add
popa
iret
cmpsl
in
mov
mov
lock
cwtl
out
dec
test
push
xor
test
mov
push
fmulp
push
xchg
stos
shrb
fnstsw
loop
cld
sbb
mov
sbb
pop
scas
cmpsl
fldcw
outsb
adc
or
xor
dec
mov
sub
push
pushf
dec
inc
xor
push
mov
loope
adc
mov
pop
mov
jl
add
cmpsl
test
xchg
push
imul
push
iret
shl
pop
ljmp
fistpll
leave
or
imul
add
jmp
mov
cld
pop
sbb
adc
cltd
in
stos
inc
mov
insl
mov
xor
add
push
and
adc
ljmp
imul
inc
data16
inc
dec
or
out
mov
add
dec
push
mov
scas
sub
ficoms
stos
in
les
aaa
imul
mov
pop
cmp
xor
cmp
cwtl
dec
pop
or
mov
adc
sub
js
dec
ds
jno
mov
aam
andl
jnp
jne
int
mov
hlt
je
or
mov
shlb
push
mov
jecxz
xchg
dec
dec
test
shlb
fucom
fidivrs
push
push
testl
add
imul
dec
nop
into
ja
dec
nop
stc
cmp
sahf
adcb
sbb
js
sbb
rcrb
fisubrs
pop
out
test
mulb
mov
mov
scas
outsl
jl
ret
cmp
lret
mov
sti
clc
mov
jecxz
sahf
jmp
xchg
repnz
test
inc
movsl
aas
xlat
mov
jp
cmc
es
stos
dec
jl
push
mov
scas
xchg
sbb
inc
mov
out
mov
int3
aad
js
push
hlt
dec
pushl
dec
inc
pop
push
dec
add
cwtl
mov
es
add
mov
aam
pop
inc
push
and
jg
sti
or
jb
ja
push
xchg
mov
fnsave
cwtl
sbb
xchg
push
stos
add
add
loop
out
jl
pusha
xchg
xor
fcom
mov
xchg
xlat
xchg
fadds
add
dec
xor
call
sub
and
shll
xor
faddp
jle
adc
cmp
cmp
jbe
pop
popf
pop
pushf
cli
daa
sbb
mov
xor
xchg
repz
dec
rol
dec
inc
push
mov
into
mov
aaa
mov
test
cltd
faddl
or
mov
xchg
imul
cmc
cltd
std
movb
hlt
lods
sub
arpl
pop
inc
jl
inc
push
test
ds
les
xor
sbb
mov
mov
pop
sub
icebp
cmp
mov
pusha
add
stos
mov
lea
lcall
clc
pop
fs
icebp
rcll
jbe
inc
and
inc
mov
nop
imul
jle
jne
loopne
mov
add
inc
dec
pushf
add
leave
fwait
dec
pop
mov
dec
bound
inc
or
imul
pop
push
jb
iret
adc
jmp
fwait
mov
inc
mov
int
int
push
fst
mov
pushf
inc
push
sbb
in
jp
fldl
orl
flds
inc
enter
out
jecxz
pop
adc
inc
std
push
push
iret
cmc
mov
jle
xchg
shll
pop
ret
callw
add
test
nop
aad
lea
sbb
sarl
or
fsubl
outsl
enter
or
lahf
int3
mov
shrb
pop
ret
scas
shll
iret
test
out
cmp
jbe
cmp
jb
movsl
mov
jb
roll
mov
fnstsw
outsl
mov
cltd
cmpb
inc
mov
pop
jle
repnz
pop
and
into
and
jne
ds
mov
mov
mov
push
dec
lret
xor
or
adc
and
mov
imul
pop
jns
cmp
inc
lahf
or
mov
enter
and
or
test
ja
je
sahf
lds
jmp
pop
xor
fmull
mov
push
das
imul
xchg
jecxz
jp
mov
inc
xor
ja
int3
call
rcrb
loop
xor
or
pop
sub
in
mov
les
lfs
rorb
xor
fldt
add
and
lea
cmp
movsb
rclb
jmp
xor
inc
add
cmpsl
jne
dec
sbb
nop
sub
sahf
and
jge
mov
aaa
pop
inc
ds
dec
loop
ret
jl
leave
push
pop
pop
mov
das
aaa
push
and
dec
cmp
sub
cmp
cmp
xchg
pop
xchg
inc
lds
cmp
add
popf
jmp
loope
push
movsl
cltd
jb
mov
repz
xchg
lods
addb
hlt
push
cwtl
mov
jp
das
rcrl
out
adc
push
es
scas
jae
mov
imul
in
cmp
add
push
stc
mov
xlat
or
xchg
gs
pusha
mov
leave
gs
imul
or
in
sbb
mov
jb
push
cmpl
cltd
push
incb
cmp
jne
xorb
int
dec
push
cmp
aam
adc
dec
sti
jne
mov
mov
dec
push
mov
in
push
std
adc
sahf
lret
pop
pop
push
cmp
push
xchg
lret
or
adc
ss
lret
fldt
sub
pop
cwtl
cmp
xchg
pop
sub
ljmp
lock
xchg
fisubl
pop
dec
test
pop
cmp
push
out
pushf
daa
in
or
hlt
pop
adc
lds
mov
push
aad
pusha
cwtl
in
mov
add
pusha
in
cmp
pop
pop
jb
mov
insl
pop
in
mov
mov
dec
xchg
notb
fisubl
push
pop
sbb
pop
adc
dec
mov
fwait
lcall
aaa
add
xchg
dec
mov
mov
push
loop
mov
push
cld
adc
in
pop
mov
cmp
dec
xor
in
in
mov
jo
repz
push
and
xor
fdivr
fildl
jnp
out
push
and
sbb
loope
rcrl
xlat
mov
xchg
push
inc
shrb
aad
add
dec
or
jae
aaa
call
xchg
jle
mov
jns
movq
xor
lds
sub
add
popa
scas
sub
dec
or
push
pop
sub
sub
pop
in
pusha
pusha
jle
js
sbb
pop
aaa
in
pop
movsb
mov
rcrl
loope
movsl
stc
xor
push
std
xor
xlat
pop
jnp
dec
test
adc
mov
repz
jo
pop
fnstcw
into
add
loope
gs
xorl
xlat
or
adc
outsl
pop
lret
loope
mov
incb
inc
fs
movsb
mov
sbb
stc
cmp
mov
test
out
xchg
adc
push
std
movsb
sbb
fcmovnb
inc
mov
pop
inc
loop
push
into
xor
xchg
mov
add
or
cmp
jb
mov
repz
adc
into
inc
inc
inc
inc
cltd
mov
mov
sbb
clc
push
push
add
sbb
insb
fiadds
in
andl
xlat
fdivl
pop
or
cli
jg
sub
and
das
or
dec
test
pop
mov
pop
insb
xchg
test
sbbl
mov
je
jmp
mov
roll
fwait
sub
hlt
repz
shll
loope
loop
and
enter
ret
out
outsl
xor
sarb
cmc
icebp
push
out
mov
jle
sbb
pop
mov
inc
shlb
pop
sbb
cmovl
scas
sbb
das
mov
das
insb
inc
je
in
adc
mov
sbb
test
push
fldenv
dec
adc
call
xor
cs
add
mov
dec
sbb
xorb
xor
stos
cmp
sub
and
sbb
test
cld
loopne
adc
popa
push
mov
sub
inc
stos
jl
clc
cld
scas
repz
pop
sub
jg
adc
mov
push
test
lods
mov
or
bound
fnstsw
jnp
cmpb
sbb
subb
cmp
jae
clc
dec
mov
push
ret
rorb
enter
cmp
inc
cmp
or
out
cmpsl
mov
mov
in
pop
je
ja
inc
aad
mov
sbb
cmp
add
jmp
fiaddl
dec
push
ja
add
add
add
dec
roll
loop
adc
sub
movb
add
inc
add
jns
in
xchg
push
mov
fwait
mov
data16
mov
and
int3
repnz
in
adcl
jne
pushf
cmp
and
jne
aas
sub
sub
jge
incl
orb
mov
insl
mov
out
daa
daa
sbb
xor
lcall
push
and
out
jae
jb
fdivl
popa
and
inc
pop
jmp
shll
xchg
ds
call
pop
or
jnp
push
es
fdivrp
push
sti
push
pop
sti
push
mov
sbb
fcomi
mov
push
sbb
mov
cmp
jp
sub
push
sbbl
xor
int3
push
movsl
fisttpll
push
rorb
xchg
and
ljmp
inc
add
je
or
push
sti
xchg
call
mul
lcall
xor
in
add
pop
mov
ds
xor
sub
sub
aaa
rcrb
cmpsl
add
int3
lret
mov
daa
push
inc
pop
mov
test
leavew
jmp
mov
xchg
cld
push
sub
in
cmpsl
push
test
sub
mov
xchg
aas
jae
inc
ror
fistps
sub
mov
inc
popa
adc
and
repnz
inc
pop
daa
ss
mov
aas
test
sub
push
cmp
sub
call
es
je
and
jo
xchg
adc
fwait
xchg
mov
push
sahf
cmp
or
mov
dec
lods
pop
test
ret
ja
imull
mov
imulb
subb
jg
lds
pushf
cmc
xor
stos
cltd
xchg
pop
add
inc
popa
aad
ror
pop
adc
push
pop
fisubs
gs
lahf
adc
and
sti
shrl
adc
mov
lahf
xchg
add
enter
add
inc
inc
inc
dec
das
push
xor
or
push
testl
sti
or
xchg
mov
jne
inc
gs
rcrb
push
or
sarb
xor
xchg
int
inc
std
adc
fdivrs
sbb
loop
punpckhbw
mov
sub
fnsave
cmc
lods
sbb
mov
imul
xor
inc
orl
dec
mov
ret
ret
adc
cmp
les
es
ljmp
aaa
sbb
mov
add
pushf
lock
movsb
xchg
pop
mov
mov
mov
loopne
das
lcall
sub
out
pop
mov
clc
dec
inc
mov
lds
cmc
inc
jge
mov
sbb
pop
xchg
daa
nop
or
sti
push
cmp
int3
ja
sbb
popa
ret
inc
sub
jbe
and
mov
imul
ja
sbb
dec
push
mov
mov
ret
das
decl
push
mov
xchg
mov
mov
mov
hlt
mov
cmpsb
test
int
cmp
jns
inc
xor
ret
lret
pushf
xor
jns
jle
or
jbe
or
xor
test
stc
or
std
mov
jne
xor
or
out
dec
notb
mov
into
enter
mov
mov
jle
ja
insb
xchg
dec
imul
stos
ret
shrb
mov
icebp
in
sarb
sbb
add
ret
ret
dec
outsb
enter
ret
bound
and
ja
mov
dec
test
and
pop
insb
fnsave
sbb
fldcw
scas
sahf
mov
into
xchg
push
cmc
fwait
adc
hlt
in
mov
int
rcrl
outsl
sub
jle
test
jae
test
pop
xchg
jmp
jecxz
bound
shrb
jns
out
inc
jg
sbb
and
aaa
jmp
push
aad
call
xlat
or
jl
add
or
pusha
rcr
ja
shlb
inc
ret
dec
lret
sti
pop
pop
mov
dec
sub
xchg
mov
adc
jge
imul
jns
lock
adc
orl
dec
sbb
fisubrs
sbb
pushf
loope
imul
cs
repz
mov
mov
mov
or
cltd
push
divl
addb
push
ss
stos
inc
push
movsb
lea
shr
dec
jne
ja
fwait
inc
cltd
addr16
int3
jae
movsb
jb
lret
out
sbb
inc
loop
mov
xlat
pop
or
mov
fs
pop
jns
mov
shll
push
inc
cmp
aaa
jecxz
lahf
shlb
out
or
adc
push
push
popf
or
mov
cmp
sbb
lea
hlt
jbe
sbb
out
fcmovnu
aam
mov
pop
jae
int
jno
test
and
addr16
jl
pop
popa
stos
and
pushf
mov
and
and
or
test
std
stos
pop
mov
test
mov
popl
mov
scas
rcll
fstl
adc
fcoms
pop
les
sbb
aam
sub
cmp
idivl
aas
push
fmul
test
xor
jmp
out
stos
les
mov
dec
ss
stos
xchg
aad
fimull
data16
dec
jnp
cmp
dec
jecxz
mov
mov
in
arpl
loopne
movsl
dec
push
test
sbb
repz
xchg
sbb
mov
sbb
pop
push
scas
pop
daa
inc
pop
nop
add
out
ret
inc
mov
jnp
xor
fidivrl
fnstenv
sbb
cmp
jl
mov
testb
mov
incl
call
mov
inc
add
in
add
inc
lea
mov
fldl
stos
add
fs
outsb
cmp
sti
inc
test
push
aad
imulb
pop
lods
sub
xchg
mov
insb
gs
nop
push
pop
dec
leave
mov
jge
je
in
imul
mov
ja
xchg
cltd
mov
nop
adc
sbb
dec
out
mov
stos
mov
xor
pop
ficoml
adc
cli
aas
jl
out
mov
mov
test
sti
dec
mov
insb
add
pop
push
pushl
adcl
jno
inc
cmp
add
in
scas
lcall
mov
int
xchg
sar
movl
jge
je
lret
mov
loop
jg
cmc
xor
rcll
xor
orl
iret
jecxz
cli
inc
adc
add
enter
xchg
mov
add
mov
insb
scas
pop
stos
adc
aas
arpl
ficoml
dec
xor
lea
adc
pop
push
add
clc
std
mov
je
jge
xchg
push
lea
mov
jmp
repz
imul
jl
test
addr16
adc
push
push
fs
jo
mov
rcr
and
das
and
sub
scas
add
dec
cwtl
int3
stc
push
or
js
dec
jmp
aaa
mov
in
fucomi
mov
stc
xor
and
sub
mov
jbe
std
imul
jle
cmp
push
push
inc
call
sub
jns
iret
adc
mull
or
arpl
push
test
fidivs
push
or
insb
adc
push
cmp
jl
xchg
and
sub
movsl
add
call
pop
xchg
insb
or
dec
cmp
nop
enter
lea
out
adc
jae
sub
inc
xchg
jge
adc
xor
ss
movsb
pop
movsl
mov
in
dec
inc
sub
fwait
mov
stos
fucomp
jb
out
aaa
cs
pushf
mov
dec
add
xor
pop
cltd
jne
into
cmpsl
xchg
cli
inc
ss
lods
mov
es
in
pop
cmp
pandn
aas
adc
cmp
and
fmulp
cmp
cs
xor
and
insb
test
or
push
sbb
push
dec
scas
movsl
fsub
xor
out
push
fidivs
popa
into
mov
jne
lods
mov
jns
or
out
ss
jl
lock
sbbl
pop
push
push
xor
fsubs
or
shll
out
stos
test
idivl
mov
imul
pop
or
clc
jae
orl
xor
mov
xchg
mov
cmpsl
jge
fdivl
cmpsb
loope
mull
test
lret
push
pop
xor
scas
jae
push
lahf
cs
daa
mov
aam
mov
cmp
mov
mov
mov
and
ljmp
fwait
mov
mov
outsb
push
jp
cwtl
jmp
xor
xor
push
loop
cmp
insl
clc
mov
push
pop
cld
shll
dec
iret
mov
pop
mov
mov
jge
mov
sub
imul
mov
scas
push
sbb
mov
pop
xlat
sbb
xchg
cmp
fistl
mov
jnp
push
ret
xor
pop
aaa
cmp
cs
sbb
int
jno
fisubrl
ss
ret
nop
je
dec
jbe
cltd
inc
andl
fstps
les
lea
pop
dec
scas
dec
xor
inc
sbb
js
fs
inc
pop
outsb
test
adc
sub
cmp
jbe
add
mov
jge
mov
jmp
and
push
sub
cmp
jecxz
mov
xor
lret
dec
dec
mov
popa
shlb
and
or
pop
pop
mov
mov
movsb
jne
push
inc
imul
mov
or
and
pop
xchg
frstor
sbb
clc
lcall
and
and
loopne
xor
nop
mov
repnz
leave
sti
mov
dec
sbb
mov
inc
mov
ffree
jg
sbb
ds
mov
mov
sub
push
inc
mov
jb
mov
fcomip
xchg
xchg
ror
lcall
sbb
in
xor
pop
xlat
push
inc
jns
xchg
add
shll
push
mov
pop
jmp
mov
push
mov
jb
stc
dec
push
in
inc
sbb
jbe
lea
push
jmp
push
ds
addr16
cltd
aad
int
push
push
xor
inc
xchg
mov
scas
stos
sbb
enter
inc
lea
ret
add
dec
add
mov
bound
xchg
cld
jge
jmp
xchg
dec
insb
jno
push
xchg
pop
add
aas
insl
inc
and
pop
divl
mov
mov
testb
aas
rcr
bound
pop
mov
add
test
push
cmp
fsubp
addb
mov
out
xor
xor
lret
sub
int3
fidivrs
sbb
jl
es
and
addr16
and
scas
and
ljmp
or
shl
cmp
scas
cld
lcall
test
mov
dec
or
or
xor
mov
ds
ja
stc
mov
stos
push
push
test
pop
out
popf
bound
sarb
lock
test
and
adc
push
iret
std
sub
and
mov
leave
pop
xchg
and
dec
jecxz
ja
and
xchg
cwtl
data16
pop
enter
leave
mov
scas
jne
loope
inc
or
fwait
call
aam
sbb
in
data16
mov
repnz
inc
sub
mov
adc
xchg
stc
clc
or
data16
inc
mov
jg
or
pop
pop
iret
sub
cmp
les
das
lcall
xchg
sbb
leave
cmp
cwtl
lret
or
cli
adc
add
inc
add
cmpsb
lret
push
repnz
sub
aaa
lds
sbb
and
mov
in
jae
cmp
movsl
out
xchg
mov
pop
inc
add
test
les
shll
je
add
sbb
cmp
cmp
sub
push
jnp
lods
mov
sub
adc
dec
jecxz
inc
dec
aas
adcl
in
in
adc
ret
mov
adc
fstl
sub
aas
sub
repz
mov
arpl
jae
push
pop
sub
es
scas
jl
adc
cs
sahf
sahf
ljmp
mov
data16
lret
mov
pop
loopne
push
inc
loope
into
lea
adc
call
out
or
mov
fldt
rol
gs
pop
test
cld
cmp
pop
cmpb
pop
movsl
dec
adc
ss
lods
int3
push
dec
mov
mov
dec
mov
out
insb
sahf
dec
jl
add
inc
stos
jl
mov
ds
jge
imul
adc
cmpsb
andb
pop
mov
mov
xchg
dec
in
cmp
decl
mov
pop
pop
adc
push
sbb
xor
mov
repnz
enter
int3
add
sub
push
aam
sub
rclb
out
sub
stc
adc
dec
sbb
inc
cmp
pop
cmp
test
sub
or
mov
xchg
popl
outsl
clc
jo
das
call
sbb
push
cmp
jl
pop
xchg
ljmp
mov
hlt
mov
add
loopne
inc
jae
dec
out
rcr
inc
fisubl
push
push
repnz
push
mov
fisttpll
and
in
adc
or
mov
arpl
push
xchg
out
lret
inc
loopne
ss
inc
jmp
inc
sbb
adc
lret
push
lret
mov
int3
ret
shll
push
stc
lret
mov
and
lock
sub
js
push
sahf
xor
in
pop
and
xor
jge
jo
cmp
xchg
mov
dec
adc
test
imul
mov
dec
cmp
in
xor
ds
jmp
shrl
inc
setl
fnstcw
fs
and
and
xor
jmp
stos
sahf
sti
mov
test
das
dec
aam
enter
mov
sbb
rol
cmp
js
jecxz
sti
add
mov
sbbl
cltd
mov
mov
mov
je
ds
iret
nop
inc
in
pop
sbb
lods
loopne
shlb
cwtl
fidivs
mov
loopne
dec
mov
imul
and
out
push
sbb
inc
jnp
pop
insb
lock
xor
loopne
xor
iret
cltd
add
inc
mov
stos
mov
dec
jne
dec
pusha
popf
cmp
lea
icebp
pop
out
add
push
outsb
xchg
out
dec
sub
xlat
mov
push
mul
pusha
inc
pop
gs
sbb
rcr
out
inc
jmp
xlat
ret
int
jae
lods
aad
jmp
jl
xlat
dec
push
mov
inc
xchg
mulps
movsl
mov
push
cld
mov
dec
adc
jle
repz
or
loop
leave
push
adc
dec
call
arpl
xchg
rorl
pop
in
fidivl
or
les
or
and
or
inc
sub
mov
jb
xchg
ret
iret
push
into
stos
repz
add
gs
sbb
pop
mov
es
push
movsl
inc
xlat
dec
add
mov
mov
xchg
mov
leave
outsl
out
cmp
cmp
fsub
out
cmp
in
or
jbe
inc
fistpl
inc
jns
cmp
ret
push
add
mov
cmp
jns
cli
test
cld
sub
cs
into
jp
or
loopne
mov
pop
cld
fwait
ljmp
ljmp
std
jg
mov
test
std
push
outsl
jmp
mov
xchg
and
mov
adc
imul
outsl
sbb
shlb
aaa
push
mov
mov
stc
xor
mov
das
lods
scas
xchg
jecxz
cmc
pop
pushf
outsb
sub
iret
pop
jl
push
inc
mov
pop
sbb
xchg
mov
xchg
mov
or
das
or
push
push
pop
jbe
jbe
cmpsb
popf
inc
cli
dec
or
push
xchg
leave
jbe
das
jge
mov
pop
sub
repz
push
and
jnp
or
std
fdivp
or
call
sub
sbb
mov
mov
mulb
sub
test
pop
push
clc
dec
pop
in
sub
push
sub
pop
sub
outsl
outsb
test
cmc
sbb
std
jle
xor
inc
addl
cltd
xchg
add
out
lcall
jno
mov
add
pushf
sub
add
xor
cmc
push
icebp
add
jnp
mov
push
sbbb
xchg
mov
xchg
sub
sub
andl
push
mov
cli
movsb
push
or
sub
push
call
outsl
jne
mov
addr16
mov
imul
rcr
inc
rcll
or
push
stos
fwait
insb
sahf
push
mov
fbld
push
ss
jmp
aam
mov
jge
cmc
lret
dec
scas
scas
shrb
aam
ffreep
cld
adc
xor
roll
cs
loopne
mov
push
int
lds
or
fwait
dec
icebp
dec
xor
daa
mov
sbb
pushf
jl
ret
push
out
repz
push
shll
and
mov
addl
push
test
cmpsb
fisttpll
inc
insb
aad
movsb
cmp
movsb
mov
and
adc
stos
and
aam
addr16
aam
outsb
dec
adc
enter
shll
mov
outsl
mov
test
daa
shl
and
inc
daa
daa
cmp
push
cmp
mov
and
pop
mov
jle
push
cmc
repnz
xor
cmp
xor
push
aaa
in
in
push
push
iret
jne
out
cltd
leave
xlat
ret
xchg
sti
jle
idiv
cmpl
mov
inc
mov
lret
jne
out
in
outsb
movsb
int
jbe
jb
cmp
pusha
jmp
cmp
sub
stc
mov
leave
enter
jecxz
xor
sbb
fwait
sbb
adc
cmovle
mov
jno
rorb
lcall
and
out
sbb
jae
cmpsl
xchg
pop
pusha
data16
sbb
ret
sbb
fcmovb
jle
mov
sarl
cmp
sub
adc
stos
ret
dec
in
sbb
nop
and
dec
dec
repnz
pop
lods
js
scas
insl
bound
xchg
cmc
je
or
dec
add
cmpsl
or
push
mov
in
addr16
repz
bound
cmp
sub
push
mov
arpl
leave
push
add
or
dec
aad
das
in
loope
mov
fsubrs
mov
loop
out
push
dec
mov
js
mov
xor
mov
jne
bound
arpl
inc
add
aam
ljmp
daa
adc
lds
jbe
rorl
mov
data16
cmp
xchg
movsb
inc
pop
inc
ret
outsl
data16
int
jae
xor
adc
jns
or
mov
jne
xor
pop
ljmp
and
addr16
mov
lods
leave
lods
lret
negb
out
test
ret
pop
loope
jno
pop
xor
pop
fwait
sahf
or
and
cmpb
push
dec
adc
pop
pop
mov
push
pop
lret
pop
cmp
cmp
std
jb
loope
and
push
xor
sub
or
push
jo
adc
iret
das
out
ret
push
lahf
fsubr
movsb
mov
pusha
xor
enter
xchg
pop
mov
xchg
test
popa
aas
dec
cmp
hlt
add
mov
push
jo
jp
aaa
insl
push
mov
sbb
int3
pop
inc
insl
mov
or
iret
xor
sub
fnstenv
rol
xorps
dec
aad
add
or
mov
and
pushf
pop
loope
and
dec
sub
jno
jmp
sbb
cli
mov
in
adc
pop
icebp
add
pusha
jge
and
daa
pop
fdivr
cmp
aad
pushf
xchg
scas
in
xchg
cld
loope
xchg
mov
stos
fcoml
dec
sahf
dec
pop
lahf
fsubrl
fcmovnu
cmp
xchg
fcoml
aas
pop
add
mov
ret
mov
daa
imull
and
jp
leave
xchg
adcl
cs
cmp
xor
lret
push
jge
sti
push
sub
das
xor
test
cs
xchg
test
ret
cmp
sbb
cld
push
mov
jmp
add
mov
into
shrb
out
lcall
jecxz
inc
push
sbb
ss
dec
mov
add
stos
jo
adc
insl
test
mov
xor
sti
jnp
cld
fwait
test
pop
sahf
push
push
jns
and
jl
shr
push
inc
pop
sti
pusha
or
lock
bound
cs
test
pop
icebp
mulb
pushf
push
sub
dec
lahf
add
clc
sub
iret
mov
mov
jge
pop
leave
and
fnsave
cmp
aad
inc
inc
push
xchg
mov
jp
push
lods
xor
or
cs
iret
cli
movsl
cli
add
mov
push
popf
xor
mov
mov
add
clc
jns
rorl
inc
out
cmp
daa
andl
jnp
ror
dec
cs
std
pop
out
xor
push
iret
fdivrl
popf
ja
icebp
mov
fnstcw
pop
cwtl
push
into
mov
sbb
shr
inc
mov
push
push
cmp
xorb
push
mov
lret
icebp
mov
xor
or
cmp
add
sti
test
aaa
cmpsb
xchg
jmp
out
sub
push
shll
pop
jg
dec
leave
out
mov
mov
icebp
mov
pop
xor
cmpsb
mov
cmpsb
negb
daa
int3
es
and
xor
lret
mov
pop
cld
xchg
mov
mov
mov
fsubrl
pushf
fxch
ret
out
add
and
insb
push
mov
cmp
pop
or
jbe
inc
cmp
push
sbb
icebp
xchg
loop
mov
xor
daa
test
bound
dec
ss
inc
inc
mov
xchg
popf
sub
pop
sub
into
orb
out
sbb
popf
xchg
ljmp
xchg
lods
ljmp
mov
filds
or
cltd
xchg
js
fcmovbe
xlat
and
nop
or
or
mov
mov
pop
push
les
rol
mov
bound
mov
add
xor
int3
insb
jge
popa
sub
adcb
loop
cld
push
and
push
cmp
jnp
mov
pop
lahf
mov
and
clc
loop
rclb
mov
mov
jge
test
fisttps
nop
in
dec
loopne
in
jg
les
scas
mov
dec
sbbb
rcrb
mov
in
std
in
or
mov
adc
cli
mov
ja
out
ds
dec
adc
pop
mov
daa
jg
jns
and
adc
mov
pop
imul
or
adc
int
cwtl
cli
push
lds
xchg
push
lcall
mov
pop
push
out
fisubrl
mov
idivb
push
ret
out
cmpb
jne
rorl
stc
add
xor
lret
test
or
dec
ss
inc
push
fisubl
outsl
xchg
out
cmpsb
cwtl
xorl
loop
dec
mov
mov
xor
movsl
sub
into
dec
sub
dec
mov
sub
dec
mov
sub
addr16
loopew
mov
jmp
add
fdivl
out
adc
stos
lea
push
sub
lfs
pop
data16
mov
rol
out
dec
in
shrb
js
pop
or
mov
jl
push
ret
inc
ljmp
mov
mov
jne
insl
mov
dec
xchg
lock
push
adc
imul
mov
ljmp
jge
pop
sbb
sub
jle
lahf
xor
lahf
es
outsl
lock
xor
shr
or
mov
mov
out
mov
in
jbe
andb
fyl2x
mov
std
int3
enter
dec
and
jg
add
scas
mov
test
je
push
jo
dec
cmp
xchg
xor
test
jae
mov
mov
arpl
sub
bound
mov
push
jecxz
andl
rcrb
xchg
test
out
adc
inc
dec
insb
incb
sbb
or
mov
call
lods
test
mov
aaa
cmc
lods
jge
lea
mov
flds
adc
outsb
mov
jnp
jecxz
and
hlt
addl
jno
and
adc
mov
ret
outsb
ljmp
pusha
and
daa
popf
cmp
flds
dec
dec
mov
cmp
lock
fisubl
push
pop
xor
arpl
push
lahf
sbb
jp
std
adc
mov
xor
add
sti
call
fstl
ret
jae
and
shll
sbb
push
lea
mov
std
out
aas
or
test
mov
or
cmp
xlat
lods
or
push
xchg
cli
jno
xor
aam
jbe
pushf
jbe
xchg
xor
fmull
and
add
jne
movsl
cmpsl
adc
xchg
aas
xor
push
mov
gs
gs
jno
mov
neg
mov
imul
out
xchg
popa
enter
mov
stc
scas
sbb
xchg
add
mov
test
pop
test
inc
and
loop
repnz
rcrb
dec
hlt
adc
cld
lea
arpl
xchg
adc
addl
sub
or
outsb
cmp
lret
lret
jns
in
cmp
rcrb
mov
cwtl
cmp
or
mov
jmp
out
mov
dec
loop
std
rorb
mov
xor
out
pop
rcrl
pop
test
mov
iret
inc
add
movsl
fistl
pop
push
and
add
fprem
push
cmp
jecxz
sub
sar
add
and
out
cmp
pushl
repnz
add
xor
inc
pop
int
dec
lret
mov
mov
mov
jecxz
jmp
out
mov
pop
cmp
pop
lahf
test
daa
fiadds
adc
loopne
xor
sub
aam
cmpsb
sarl
in
cmp
lcall
jmp
loop
loope
arpl
rcrb
mov
rcl
cmpsb
pop
push
push
scas
and
jge
add
jae
add
add
add
pop
ss
jnp
push
into
push
test
and
rclb
rcll
and
out
pop
setae
popa
push
jmp
enter
out
adc
xlat
in
sahf
and
add
sub
shlb
loope
and
lahf
cwtl
movsl
inc
sbb
sbb
test
mov
or
icebp
es
jle
push
lea
jns
jae
adc
pushf
mov
cmp
lds
and
inc
cld
iret
outsb
aad
inc
cmpb
lods
cmc
inc
jo
pop
sub
insl
xor
sub
lea
cwtl
xor
pusha
push
xchg
push
xor
orb
push
sti
jmp
ror
xchg
lds
movsl
dec
mov
pusha
lcall
mov
aam
push
sub
inc
out
movsb
insb
iret
outsl
or
jae
adc
and
mov
dec
mov
cwtl
shll
cmpl
lret
repz
pusha
insb
js
xchg
call
mov
mov
pop
bound
mov
fnstsw
insl
gs
fmuls
jns
das
sti
adc
xchg
jae
or
pop
xchg
imul
loopne
inc
jno
aam
sahf
inc
iret
sbb
mov
sub
out
push
mov
jo
loopne
xor
xor
xor
xor
push
sbb
mov
outsl
outsb
adc
xor
testl
jne
sbb
pushf
jle
fisubrs
nop
test
in
dec
dec
js
out
mov
mov
enter
sarl
adc
dec
pop
insl
jmp
test
and
cwtl
jmp
pop
hlt
cs
enter
mov
andl
lods
pop
iret
out
cmpb
jge
addr16
into
in
jae
jl
and
and
int
pop
mov
inc
sub
adcl
xchg
stos
pop
or
insb
fsub
scas
pop
pop
or
and
sub
mov
addr16
jg
movl
mov
sti
pop
sar
lods
scas
popf
or
nop
inc
sbb
mov
ret
sbb
enter
jns
lods
add
pusha
push
leave
shlb
xchg
imul
push
pop
sti
arpl
jae
outsl
pop
xchg
xchg
push
push
cs
jmp
mov
or
adc
adc
imul
xchg
aam
xor
inc
mov
push
push
movsb
shlb
mov
mov
jl
mov
push
push
jl
push
xchg
dec
bound
cmc
stos
cmc
or
push
sbb
imul
dec
or
mov
daa
inc
mov
xlat
mov
lret
outsb
inc
mull
inc
mov
and
inc
or
push
push
push
jl
stos
ret
mov
lahf
int3
and
sbb
mov
xchg
xchg
adc
adcb
lcall
adc
pop
ljmp
ret
repnz
imul
mov
out
xchg
pop
inc
imul
imul
sbb
sbb
xchg
jno
push
pop
jno
cmp
nop
out
ret
pop
add
lret
xor
dec
or
push
fmulp
cmp
push
daa
and
cmovl
sbb
roll
shlb
mov
sub
sbb
pop
popa
cmpsl
out
test
pusha
int3
leave
fcoml
adc
sbb
push
mov
out
js
pushf
mov
lods
add
inc
imul
fmull
aad
das
aas
inc
inc
pop
mov
iret
scas
lret
xor
xchg
lds
inc
add
test
xchg
stc
mov
adc
xchg
addr16
xchg
int
andl
add
sub
mov
pop
addr16
test
or
stc
movsb
dec
xchg
and
jns
leave
ficoms
aaa
and
shrb
fiadds
notl
jne
outsb
je
sbb
pusha
mov
popf
and
sub
jecxz
push
lcall
mov
adc
dec
push
bnd
ds
lcall
pusha
jb
cltd
and
push
cmp
pop
mov
inc
ret
jae
cli
enter
push
mov
adc
sbb
push
loop
xor
push
xchg
pop
cld
dec
js
fs
outsb
das
pop
bound
cli
mov
rclb
cmc
sub
and
popf
xchg
dec
adc
xchg
fwait
sub
and
mov
insb
xlat
lret
gs
xchg
aas
outsb
push
push
mov
outsl
xchg
imul
mov
and
lret
sbb
bndstx
sub
popf
xchg
daa
loopne
jbe
cmp
mov
mov
adc
mov
rcrb
dec
lods
adc
aas
push
repz
jne
and
mov
dec
cmpsl
fwait
adc
mov
push
mov
or
mov
fucomp
mov
ss
xor
fs
inc
adc
inc
stos
enter
push
pusha
inc
enter
add
fnstenv
mov
mov
mov
pop
sbb
inc
mov
loop
scas
cmp
inc
in
lret
pop
and
inc
cli
lret
lods
mov
test
mov
sub
imul
sbb
lret
int
jge
nop
sbb
mov
icebp
sbb
mov
xor
push
pushf
lock
xor
xchg
inc
decb
imul
sar
jecxz
cmpsl
or
mov
inc
std
out
mov
jae
cltd
cmp
lret
xor
mov
mov
pop
test
push
sub
jle
mov
js
ror
mov
popf
xchg
xchg
cltd
fwait
inc
dec
mov
xor
mov
mov
sub
std
ss
data16
push
xor
hlt
xor
bound
loope
lock
jae
cmp
push
fldt
popa
sub
adc
cmp
test
mov
xchg
jb
xchg
mov
dec
push
fsubs
std
bound
mov
or
push
movsb
jp
jecxz
xor
xchg
mov
or
shrl
lret
sbb
loope
adc
punpckhbw
and
jb
cwtl
iret
pop
or
jl
xor
cmc
add
test
and
dec
imul
push
add
jo
sub
jne
push
mov
add
cmpsl
and
pushf
pop
movsb
pop
sbb
stos
jp
lea
inc
dec
xorb
iret
rorb
jmp
xchg
flds
fistpl
sub
mov
push
cmpsb
cmp
adc
adc
cmp
fwait
push
cmp
cmpsb
fidivl
xor
pushf
popf
xor
pop
shrl
mov
inc
xlat
xlat
adc
adc
repnz
arpl
scas
xor
lret
into
xor
test
dec
adc
sbbl
dec
stos
in
out
dec
rcrl
cmp
popa
jne
inc
test
add
stos
incb
or
push
aaa
in
call
and
enter
sub
test
jl
cmp
and
mov
sbb
lahf
repnz
inc
add
mov
fistpl
add
cmp
xor
jg
in
or
jae
je
test
test
mov
lds
stc
mov
bound
xchg
mov
clc
mov
cmp
jne
inc
pop
test
sbb
fadds
xor
pop
and
push
mov
sti
mov
inc
les
add
call
jbe
pusha
lcall
out
push
rclb
fistl
loopne
jg
in
rcll
xor
adc
or
dec
popf
xor
insl
pop
push
xchg
inc
aad
fs
sti
loop
adc
sub
inc
sar
cwtl
pop
xchg
ret
mov
loop
xchg
lahf
push
js
and
int3
scas
and
aas
cmp
sbb
out
pop
xor
mov
fldenv
les
lahf
sub
jmp
lret
fisubl
adc
adc
xor
and
push
mov
cmp
cmp
es
jp
nop
dec
xchg
mov
and
testb
mov
xor
cmp
arpl
adc
cmp
mov
pop
pop
pop
sbb
gs
inc
inc
in
ds
mov
ret
in
xor
xchg
or
movsl
or
inc
mov
sbb
pop
maxps
loopne
fiadds
cld
outsl
pop
xchg
mov
testl
or
pop
inc
cmp
out
mov
and
leave
push
sbb
lret
add
dec
jecxz
pop
in
nop
pop
popa
lret
jg
rorl
stc
in
xor
lds
pop
mov
push
cmp
xchg
sub
dec
push
xor
loop
les
icebp
dec
xchg
push
stos
sar
jnp
out
and
add
pop
cmp
mov
daa
insb
add
pop
and
das
cmpsl
fiadds
mov
cli
adc
xchg
push
push
pop
gs
dec
push
mov
mov
pop
cmp
sub
adc
add
xchg
cmp
cmp
mov
xchg
push
xchg
fistpll
mov
adc
or
fldl
aad
jl
cmc
lods
out
xor
jecxz
cmp
insl
sbb
xchg
pushl
mov
lahf
xor
xor
jno
repnz
mov
insl
insb
push
dec
mov
sbb
jecxz
pop
push
pop
outsb
cmc
jge
shl
int
dec
mov
xor
mov
sti
mov
xchg
popa
mov
stos
adc
add
or
and
rorb
add
mov
lret
mov
mov
scas
lret
and
add
stc
pop
out
lcall
stos
jns
push
inc
push
fnstsw
adc
mov
dec
and
jl
jo
leave
dec
orl
ror
aaa
mov
repnz
sbb
arpl
mov
xor
inc
pop
push
sbb
in
mov
jmp
push
mov
lahf
fisttpl
or
stos
dec
pop
clc
int
add
nop
xchg
lock
mov
cmp
in
dec
mov
sbbl
push
or
scas
hlt
mov
insb
sbb
push
lret
fisttpll
cs
sub
enter
sub
gs
mov
xor
test
mov
std
mov
and
sub
aas
test
and
jle
and
in
cmp
inc
fildll
stc
jecxz
sahf
mov
pop
aas
sub
mov
sub
int3
lcall
and
mov
lahf
mov
into
mov
notb
mov
xor
and
add
jle
sbb
mov
dec
sbb
mov
mov
into
add
mov
sub
je
add
ja
mov
and
dec
cmp
inc
pop
xchg
test
mov
pop
sbb
mov
lods
mov
dec
fisubrl
mov
aad
decl
push
push
push
shr
mov
jle
cmp
repz
pop
in
and
stos
out
flds
lock
inc
sub
call
jmp
iret
idivb
dec
jge
push
inc
aaa
jbe
sbb
lea
or
and
adc
stos
test
daa
fiaddl
rorb
int3
mov
sahf
mov
movsb
out
enter
enter
std
js
test
push
sub
in
xchg
icebp
in
sbb
add
lods
movsl
rcr
testl
in
sbb
push
sub
push
adc
mov
push
mov
mov
bound
js
jmp
cmc
cmpsb
orl
xor
xor
sbb
mov
pop
movaps
add
inc
sub
inc
insb
call
mov
insb
jnp
xchg
dec
inc
ss
push
outsb
repnz
test
push
stc
jecxz
out
sub
fs
aaa
mov
hlt
sub
vpmulhw
inc
add
cmp
je
sub
out
daa
inc
into
inc
outsb
mov
xchg
push
xor
pusha
lds
data16
popf
adc
cli
ficoml
sub
mov
fiaddl
repnz
aam
pop
movsl
outsb
push
xchg
int
inc
ret
fwait
or
pusha
mov
shll
test
jmp
xor
stos
outsl
push
cmp
mov
mov
lcall
sbb
loop
stos
mov
xchg
mov
push
cmp
orb
jae
adc
jae
push
add
popf
pop
aam
sbb
sbb
inc
mov
add
xchg
or
jl
xchg
outsb
repz
jp
cmp
and
pop
ljmp
repz
icebp
pop
inc
fadds
outsl
or
ljmp
loopne
inc
cmp
sub
jl
mov
push
and
repnz
sbb
sub
aas
mov
hlt
cmp
sub
sbb
lret
sbb
jmp
test
or
jmp
pop
mov
jl
push
shl
cmp
push
call
or
cmp
mov
lea
mov
pop
jnp
dec
shll
int3
and
jae
sub
ficompl
push
pop
int3
jnp
jmp
clc
adc
sbb
fldt
les
shrb
sub
das
dec
or
inc
sub
dec
xor
stos
sub
push
dec
psllw
out
sar
lea
sbb
sub
xchg
iret
mov
xor
mov
pop
mov
js
cmp
jnp
in
dec
cmp
adc
aaa
sub
push
fprem1
in
pop
add
sbb
xchg
pop
add
loope
ljmp
fwait
push
jecxz
or
adc
add
fs
fadd
pop
test
paddusb
clc
out
inc
pop
push
dec
inc
call
push
out
out
adc
into
in
cmp
movsb
sbbl
push
adc
int
nop
test
and
loopne
insb
xor
mov
leave
cmp
gs
adc
roll
dec
sti
imul
jne
bound
cli
push
test
hlt
rcr
in
aaa
ret
sub
fs
arpl
pop
dec
sahf
aas
or
and
orb
sub
jecxz
inc
andl
sahf
in
mov
sti
adc
js
mov
inc
ret
cmovs
clc
cmp
std
mov
or
ja
mov
icebp
adc
mov
push
xchg
lea
js
lods
daa
push
test
enter
xor
js
arpl
orl
imul
add
sahf
out
fisttpl
mov
sbb
insb
mov
sub
sbb
jle
mov
rcrl
hlt
loope
jb
movsl
fwait
cmp
nop
jne
and
xchg
mov
cmp
stos
push
inc
rol
insb
enter
bound
in
adc
lds
jno
fbstp
and
push
dec
stos
bound
scas
or
nop
std
jl
sti
test
sbb
mov
pusha
mov
faddl
test
mov
or
es
bt
nop
test
xor
lret
aas
sahf
cmp
jns
testl
sbb
std
fwait
push
jmp
ss
jae
mov
aad
cli
leave
movsb
lahf
fsubl
or
dec
push
cli
adc
jle
dec
jno
mov
and
shll
mov
push
inc
mov
mov
std
sub
dec
subl
hlt
mov
mov
mov
hlt
int
push
inc
mov
dec
xor
rclb
xchg
fsubrl
mov
jl
lahf
jmp
leave
out
cmp
sbb
dec
mov
sbb
push
sbb
test
mov
int
popf
in
sub
in
pusha
and
inc
fsts
js
movsl
inc
cmp
push
mov
jno
xor
pop
leave
mov
xor
mov
sbb
mov
mov
mov
call
pop
sub
mov
lds
fwait
out
imul
xchg
cmp
insl
or
pushf
outsb
jp
cmp
and
cmpsb
int
int3
and
test
in
pop
push
push
ret
out
mov
scas
outsb
add
mov
jnp
cmpl
push
cmp
shlb
jmp
popa
cmpsb
popa
push
daa
xchg
cmp
es
movsb
or
jno
pop
mov
cld
ds
jmp
adc
adc
jg
mov
xchg
lret
pop
iret
popa
test
inc
cmp
xor
pop
xchg
mov
pop
das
repnz
or
or
popf
mov
jne
mov
hlt
sbb
es
ret
sub
fsubrl
dec
dec
int
dec
mov
pop
mov
test
push
and
mov
inc
jo
aam
push
cmpb
outsb
adc
sbb
mov
mov
rcrl
xor
into
add
and
push
jg
mov
insl
jne
repnz
or
icebp
or
pop
xchg
jo
popf
inc
and
pop
dec
icebp
pushf
lret
jg
sti
arpl
test
add
jg
push
aad
sub
out
inc
xor
dec
dec
in
sub
lahf
add
int3
inc
dec
mov
adc
aam
bound
stc
insb
mov
mul
ror
jmp
cwtl
ret
dec
jl
sub
cmp
fmulp
pop
loope
outsb
xchg
adc
mov
xchg
pushf
movsl
iret
xor
jl
hlt
je
mov
je
sub
sub
lods
repz
inc
cmp
ss
aam
es
das
sbb
cs
fldenv
lods
mov
mov
mov
inc
enter
mov
rcl
xor
jbe
xor
dec
mov
jge
inc
je
mov
add
insl
lods
inc
inc
mov
or
xchg
inc
mov
movsl
xchg
bswap
push
inc
ret
add
sub
test
pop
scas
pusha
outsl
sub
jbe
nop
sub
fstpt
cmp
fs
fcoml
outsb
scas
jae
mov
pop
sub
fwait
jb
andl
out
orb
mov
jmp
push
in
adc
jmp
inc
mov
mov
inc
sub
adc
jg
add
call
lret
xor
cmpsb
adc
rclb
call
ret
xchg
mov
jg
push
clc
mulb
xor
sub
add
ret
add
inc
push
movmskps
lea
mov
mov
cmp
inc
cmpsb
push
push
push
movsb
sbb
lock
add
inc
pop
mov
push
out
stos
sub
aas
cld
xor
and
xlat
mov
adc
daa
movsb
rcrl
imul
insb
dec
loopne
dec
xchg
call
xchg
movsb
inc
fwait
cld
and
sbb
sub
jmp
lea
inc
mov
scas
push
adc
add
fucomi
xchg
pop
cmpsl
inc
jbe
push
js
sub
stc
out
push
sarb
add
fdivrp
jge
push
mov
push
pop
lret
cltd
xchg
and
mov
xor
cmp
inc
cmp
fiadds
lods
in
dec
mov
xor
ds
fsin
jg
and
xchg
je
clc
and
or
push
push
inc
jecxz
push
imul
jne
sarb
cmpsl
addb
dec
ja
sub
adc
test
dec
call
call
lods
xchg
nop
dec
inc
in
mov
arpl
sub
aas
sbb
xor
adc
in
movb
pop
mov
mov
lret
mov
dec
xchg
sbb
inc
lds
dec
pop
mov
sbb
mov
jno
test
adc
jle
das
shll
jmp
test
mov
adc
aam
mov
ds
into
clc
test
ret
clc
ss
cwtl
push
cmpsl
or
in
xchg
das
jg
mov
nop
dec
std
mov
in
ja
loopne
arpl
inc
stc
adc
push
jge
push
loop
jno
mov
ljmp
popl
pop
sbb
imul
mov
mov
test
rorl
adcl
fimull
sub
ja
cltd
mov
pop
popf
pusha
fwait
mov
or
or
xchg
aam
mov
stos
cld
push
pop
mov
mov
hlt
insl
sti
mov
fistps
jns
add
test
xor
fcmovu
and
decl
push
daa
shrl
ficompl
push
lds
and
cli
dec
adc
or
dec
dec
sahf
cmp
rcrb
lods
ja
jp
inc
pop
es
into
mov
test
call
pop
mov
in
mov
rolb
movsb
movsb
je
aad
sahf
jmp
push
jp
sti
mov
mov
jae
aam
in
sub
call
test
cli
xchg
test
xchg
xor
xlat
push
jge
mov
outsl
rclb
xchg
cli
aam
gs
add
push
push
dec
out
push
mov
ja
cld
test
add
aas
and
lahf
lahf
aas
mov
das
xchg
fs
adc
test
imulb
and
pop
imul
pop
xor
lock
outsb
jecxz
pop
push
inc
xor
mov
jns
adc
int3
addl
lret
push
or
ljmp
mov
xorl
dec
add
roll
data16
lock
int3
in
sbb
int
je
lahf
sub
pop
jl
int
fwait
xchg
cld
jb
shll
out
pop
add
cmpsl
mov
outsb
aam
dec
pop
inc
imul
dec
mov
imul
add
mov
repnz
xor
and
js
push
or
ds
jnp
cmpsb
sub
lcall
push
or
out
jbe
aam
and
test
loop
push
dec
xlat
out
xor
cwtl
sub
xchg
ret
pop
mov
subb
cmp
sub
push
lds
xor
filds
push
pop
inc
subl
sub
mov
mov
adc
mov
pop
stos
jno
jne
daa
aam
add
pop
cmp
mov
faddl
inc
mov
iret
repz
call
lcall
xlat
push
push
jp
hlt
lods
dec
ds
int
daa
mov
xor
pushf
mov
ds
xchg
es
lea
fs
into
cmpsl
mov
jmp
jmp
mov
sahf
push
pop
iret
xor
cmp
movsl
pop
inc
aad
jge
loope
cltd
loope
mov
inc
test
sti
push
add
push
test
sbb
fldenv
xchg
and
pop
imul
sbb
pop
cli
popf
sbb
rcll
sbb
xor
mov
cld
out
es
outsb
add
xor
jne
js
xchg
jno
popf
jge
shl
insb
inc
aaa
mov
or
shl
mov
ret
mov
daa
idivl
or
inc
scas
fs
rcr
sbb
sarl
mov
jmp
xor
lret
or
lcall
mov
sbb
fisttpll
adc
adc
fs
pop
in
and
aas
addr16
ja
sbb
addr16
xchg
mov
or
dec
lahf
fsts
in
cwtl
xchg
mov
add
add
fstpt
mov
adc
fidivrs
sti
sbb
ljmp
inc
pop
icebp
in
sbb
aas
dec
push
inc
hlt
loopne
movl
subl
jg
inc
gs
xor
cmp
sub
pop
mov
dec
ret
daa
andb
sbb
pusha
dec
push
movsb
ljmp
cmpl
sub
popf
jmp
pop
or
das
pop
shrb
pushf
xor
cmp
dec
inc
aaa
leave
icebp
scas
push
mov
sub
xlat
call
cltd
push
test
out
sub
jecxz
out
add
sti
jmp
adc
pop
pop
or
aam
in
cli
jecxz
add
mov
fstp
pop
int3
dec
and
mov
aam
jnp
nop
mov
xor
adc
or
sbb
mov
cs
aam
cmpsb
or
arpl
mov
and
pmulhuw
mov
loopne
enter
aaa
fistpll
insb
cld
sbb
inc
push
add
fdivrs
je
pop
bnd
sub
int3
adc
fs
dec
push
popa
jns
inc
ljmp
orl
sbb
xor
lods
clc
sub
andb
shll
fldenv
inc
jecxz
addl
stos
push
frstor
pop
int3
cmpsl
jnp
mov
add
jns
jg
push
mov
dec
dec
pop
lock
sbb
lcall
and
xchg
rorb
je
les
xchg
aam
rolb
or
insb
scas
fcompl
sub
xchg
nop
pop
int
movq
mov
loopne
sbb
scas
pop
rorl
icebp
inc
jne
push
clc
daa
sub
mov
out
cld
mov
in
mov
out
out
subb
in
inc
lea
in
jbe
ss
fnsave
mov
cmpsl
or
xchg
pop
dec
leave
es
bound
push
jmp
addl
dec
or
mov
inc
pusha
clc
push
imul
mov
movsb
xchg
out
jne
ds
jg
lods
mov
shl
ljmp
add
jp
sti
xchg
enter
repnz
pop
jl
cltd
cmpsl
cmp
lahf
lods
mov
inc
lret
pop
sarb
lock
dec
xchg
lods
sbb
xchg
ss
subb
loop
imul
or
ds
push
mov
dec
ficoms
icebp
idivb
push
xor
dec
lahf
ret
mov
lret
dec
adc
aam
test
xor
imul
lds
jno
in
pushf
es
jo
jge
mov
outsb
mov
data16
push
notl
cmpb
mov
lea
int
movsb
fs
out
and
popa
addr16
sbb
in
in
incl
cwtl
add
stc
push
movsb
xor
sub
adc
jle
shl
inc
adc
ja
cwtl
push
xor
fsubr
sub
mov
rcl
imul
mov
cli
xlat
mov
out
push
loopne
xchg
mov
adc
and
push
int
and
es
adc
or
js
or
adc
in
cmpsl
xchg
mov
push
data16
lods
jecxz
lcall
imul
and
push
xchg
xor
ret
mov
mov
adcl
xor
mov
adc
das
cmp
fs
pop
add
xchg
addl
ret
imul
lods
ljmp
repz
cmp
mov
gs
loope
sbb
inc
lcall
pop
leave
pop
mov
scas
test
les
or
xchg
outsb
data16
sub
scas
or
sub
mov
adc
mov
push
lret
mov
out
decb
dec
xchg
sub
jge
rol
push
or
movsl
fmull
xchg
add
push
jle
pushf
cmp
lods
push
jp
pushf
cli
out
xlat
sbb
enter
fsubp
jb
mul
and
mov
xlat
jno
incb
and
in
xor
out
popa
dec
subb
ret
repz
mov
nop
adc
stos
pusha
push
dec
push
mov
or
jae
test
pop
fucomp
test
add
ret
or
test
stos
jmp
mov
xchg
mov
aam
mov
addr16
jne
testl
faddp
popf
rcrl
pop
faddl
fs
adc
adc
test
ret
sbb
fs
andl
xchg
ret
pop
imul
lret
and
pop
xor
je
sub
bnd
scas
xor
push
adc
jb
adc
repz
adc
cli
adc
xchg
mov
imul
popf
jg
jo
jne
test
les
sub
iret
in
out
jp
ss
add
mulb
mov
stos
fnstcw
ret
scas
in
jns
xor
jbe
jle
cld
cmp
lods
cmpsb
push
mov
adc
and
mov
xor
sbb
shll
and
mov
dec
stc
mov
push
add
or
into
rcll
test
repnz
and
imul
fdivrl
fadd
mov
or
in
in
and
sti
sbb
and
test
aad
adc
jmp
dec
dec
movsb
sub
pop
aam
je
mov
add
sub
jmp
cmp
and
xor
xor
add
add
mov
push
popf
int
and
pop
jnp
jle
adc
adc
pop
add
jne
or
push
fwait
pop
out
mov
xor
enter
inc
inc
mov
popf
mov
add
clc
loopne
xchg
xor
adc
pushf
mov
sbb
xchg
adc
xchg
in
adc
mov
xor
dec
cmp
xor
loop
sti
dec
mov
aam
out
std
aad
push
xor
cmp
aad
xchg
jo
push
xor
mov
rep
mov
ja
dec
cld
mov
std
nop
cltd
mov
xor
sbb
out
sub
sbb
pop
dec
repnz
cmc
and
mov
popf
mov
imul
rolb
movsl
pop
aam
shrl
fcoml
xlat
and
inc
and
xlat
xor
sub
xchg
in
sbb
out
popa
pop
ficoms
sbbl
pushl
xchg
xor
adc
dec
xor
pop
xor
shlb
out
out
xlat
sbb
outsb
cmpsb
mov
xor
mov
push
cmp
ljmp
xchg
lahf
dec
mov
cmpsl
in
lahf
mov
mov
sbb
rclb
mov
or
push
test
push
iret
push
or
xchg
jns
dec
mov
sbbb
or
pushf
fucomp
jmp
pop
push
pop
mov
fldl
fs
out
jne
dec
add
cmp
jg
orb
xor
iret
pop
gs
je
cwtl
xchg
lret
pop
pushf
xchg
lods
leave
push
fmulp
mov
or
xchg
aad
pushf
sbb
mov
xchg
loope
andb
incl
ret
arpl
mov
cmp
xor
pop
sbb
into
cmp
adc
mov
out
pusha
inc
hlt
cwtl
and
mov
outsl
sub
push
hlt
mov
sub
shll
sub
mov
mov
lock
movsb
insb
add
in
sub
add
jmp
cmp
nop
pushf
nop
add
sub
jns
xchg
push
pusha
sbb
xchg
xlat
add
mov
loopne
pop
or
lahf
lds
sub
cs
or
das
jmp
jo
and
leave
or
shlb
movsb
mov
jns
cmpsl
aaa
add
data16
mov
scas
push
push
test
or
test
xchg
pop
mov
add
outsl
mov
ret
sub
and
js
mov
andl
cmp
fists
inc
xchg
jl
push
mov
fldl
mov
xchg
int3
aas
cmpsb
out
mov
push
mov
lods
mov
jb
leave
popf
jg
add
push
inc
lds
sub
push
add
sub
cmp
pop
imul
shr
xlat
adc
jp
mov
test
in
inc
xor
out
dec
dec
push
sub
inc
push
mov
mov
mov
xchg
inc
out
lea
and
movsb
in
add
dec
cmp
or
pop
loop
outsb
mov
frstor
test
add
pushf
or
test
push
jmp
adcl
mov
popa
mov
mov
cwtl
jmp
dec
adc
mov
mulb
inc
repnz
bound
cmpsl
pusha
cmp
mov
aaa
shlb
push
aaa
sub
and
lahf
sub
sbb
stos
mov
add
add
mov
pop
int
sub
pop
ret
cld
add
sub
jae
popf
dec
or
mov
push
ret
dec
adc
jmp
std
sbb
movsb
into
mov
imul
mov
or
shlb
fistps
ja
or
lock
or
movsb
xlat
int
jle
sub
and
sbb
lea
jle
xor
push
outsl
les
jo
and
cs
cld
mov
lahf
mov
sbb
jge
add
movsl
add
adc
adc
add
add
adc
sub
mov
les
cwtl
sub
icebp
ret
mov
mov
mov
xchg
sub
mov
adc
xor
pop
rcll
outsb
fisttpl
push
push
mov
pushf
in
lret
test
ds
adc
or
jbe
add
pushf
push
stos
daa
mov
fadds
les
lcall
adc
push
cli
lds
jl
and
push
les
out
rolb
inc
lods
add
pushf
mov
jp
in
and
out
stos
jae
fistl
das
pop
fistpl
stos
xchg
repz
mov
push
jle
aas
mov
push
popf
mov
ss
adc
adc
adc
push
dec
jns
cmp
cmpb
pop
aam
dec
xchg
xor
xchg
xchg
bound
xor
cmpsb
and
mov
shr
test
sbb
mov
or
lahf
gs
adc
xchg
mov
push
inc
ret
call
and
inc
out
lahf
sbb
or
sti
or
subb
xchg
pop
rcrb
cwtl
push
rcll
or
add
cmp
adc
int3
xor
rcll
sbb
jae
inc
dec
in
loop
cmpsb
std
out
push
inc
adc
sub
dec
shlb
mov
sahf
test
or
js
pushf
je
stos
repz
stos
sahf
push
notl
mov
fadds
inc
cmp
mov
imul
adc
add
in
clc
and
ss
push
push
cmc
dec
jge
insb
xchg
xchg
jp
xchg
jp
mov
les
idivl
push
jp
dec
stc
mov
stos
ja
pop
icebp
xchg
jno
out
dec
cs
sahf
mov
add
add
loopne
sbb
ret
les
pop
out
jo
xor
mov
mov
fldl
pop
jo
pop
dec
idiv
lods
icebp
and
iret
jle
xor
loope
adc
outsb
cli
jecxz
aam
xchg
add
dec
test
enter
insl
scas
cs
mov
mov
jne
mov
pop
loope
mov
movsb
aaa
lods
pop
push
dec
xlat
xchg
dec
lea
aaa
inc
mov
jb
into
or
aam
sub
int3
rorl
xchg
inc
mov
test
hlt
push
stos
imul
cld
fxtract
push
int3
or
inc
push
jmp
cmp
jp
xor
cmpsl
lock
mov
xor
cmp
inc
std
pushf
popf
or
cmp
or
fwait
je
sub
scas
lcall
fs
inc
enter
in
sub
lds
pop
mov
xlat
lahf
sub
jge
cld
inc
popa
ret
ss
in
fwait
adc
push
adc
dec
xor
push
mov
and
pushf
pop
das
pop
sarb
adc
repnz
sahf
mov
push
or
push
bound
dec
push
sahf
inc
push
pusha
rcrl
rcl
mov
popa
dec
cmpsb
pop
push
xor
ret
mov
icebp
mov
aam
shlb
pushf
movsl
push
sub
cwtl
mov
or
roll
imul
mov
xor
scas
outsb
into
gs
mov
inc
jnp
cmp
scas
lock
sbb
scas
enter
cmp
push
fs
push
jp
dec
cmp
sbb
mov
add
pop
dec
cmp
das
movsb
fcmovnbe
or
out
fwait
arpl
fidivrs
mov
and
mov
cmp
scas
pop
sbb
jo
pop
push
jp
xchg
test
sub
mov
sti
imul
mov
dec
aam
das
cli
jg
dec
xchg
movsb
leave
cli
inc
test
cmpsl
push
pop
outsl
in
imul
lcall
bound
xor
or
xor
inc
js
push
push
xor
popa
cmp
cltd
cmp
mov
xor
mov
dec
xchg
jb
pop
dec
mov
lret
mov
imul
and
aad
scas
xchg
pop
push
add
call
gs
jecxz
xchg
mov
jb
js
shll
mov
out
cmp
mov
lahf
sbb
das
xchg
xchg
jbe
or
sub
je
mov
lea
inc
pop
addl
addb
stc
adc
mov
mov
hlt
aad
inc
add
lods
inc
sub
pop
sbb
fcmovnbe
loopne
xorl
mov
dec
jg
pop
sti
fiadds
cmp
negb
stos
loope
sub
xor
mov
fxch
xchg
repnz
dec
jbe
sahf
pop
jb
jno
insb
rcr
cmp
andl
push
and
xchg
sub
dec
mov
leave
push
push
dec
xchg
cwtl
stc
cmp
jo
lods
cs
cmp
adcl
mov
lea
popa
dec
sbb
jno
shrl
add
mov
insl
iret
add
cmp
divl
sub
mov
xchg
test
shl
adc
xlat
push
pop
cmp
scas
mov
lret
outsl
ret
clc
adc
mov
lahf
xor
adc
fnstsw
test
imul
pop
dec
add
mov
movsl
in
push
jno
sub
adc
jno
mov
std
sub
sti
ljmp
sbb
xor
mov
rclb
frstor
aas
cmp
and
ret
xchg
lods
add
mov
or
sub
jno
xchg
pop
clc
lcall
dec
adc
ds
movsl
sbb
inc
fisubl
shlb
mov
scas
and
pop
out
add
in
inc
push
xor
pusha
mov
clc
pop
sbb
in
clc
hlt
leave
stc
fwait
jl
inc
cld
dec
pop
xchg
ret
ja
ret
hlt
rcl
xchg
dec
ja
pop
movsl
test
cmp
xchg
in
inc
cli
push
add
sub
xor
decb
or
xchg
imul
push
mov
or
stos
outsb
jmp
jg
mov
mov
les
xor
jo
xor
icebp
mov
aas
mov
jmp
jp
cmc
and
jno
popf
out
mov
mov
and
int
dec
mov
and
testb
xchg
stos
mov
popf
jbe
sbb
push
mov
sbb
adc
gs
into
je
jo
fwait
mov
int3
insl
in
jne
int3
cmp
pop
cmp
jno
fsubrp
enter
sahf
jecxz
scas
and
sbb
dec
repnz
mov
icebp
je
inc
sarl
mov
pop
cmpsb
sbb
lahf
decl
pop
add
mov
lcall
pop
inc
rcll
out
test
mov
lock
or
push
adc
hlt
scas
dec
addr16
int
xlat
dec
and
jge
inc
pop
fstps
sbb
ja
mov
dec
imul
lret
test
mov
jae
hlt
mov
cmp
pop
fs
fchs
xlat
in
in
sub
lret
adc
sarb
insl
sub
or
or
xor
sbb
xchg
cmp
sub
inc
push
cs
insb
popf
inc
cmpb
inc
jnp
bound
mov
lcall
pop
mov
push
pop
cltd
adc
inc
jle
jo
push
rcr
and
inc
push
int3
fldt
xchg
xor
shrb
mov
jp
add
fnstsw
in
mov
lods
aam
dec
or
pop
or
mov
xchg
dec
loopne
outsl
out
clc
inc
mov
inc
push
and
rorb
decb
inc
mov
mov
aam
cltd
sbb
imul
addr16
cmpsl
je
mul
outsb
xor
adc
ret
leave
cltd
adc
add
adc
pop
mov
mov
mov
mov
or
mov
cmpsl
jmp
jmp
arpl
gs
xchg
cld
xchg
xor
mov
mov
jl
ss
and
rolb
or
int3
lahf
les
jbe
mov
pushf
out
out
xchg
jno
xchg
add
and
outsb
add
sub
sbb
fs
jl
xchg
and
pop
mov
ret
jmp
or
lods
xor
xchg
incl
pop
push
dec
push
sub
mov
ljmp
mov
cmp
pop
mov
stos
sub
push
inc
popa
mov
sbb
push
je
std
cmp
mov
pop
pop
mov
lahf
mov
sarl
lods
pop
mov
imul
sbb
std
push
cmpb
jnp
enter
imul
movsb
push
in
adc
ss
nop
xchg
cmpsl
xor
mov
adc
cmp
filds
hlt
dec
ret
inc
or
ret
jp
mov
nop
out
in
push
repnz
out
mov
dec
fwait
mov
outsl
cmpsl
mov
pop
or
xchg
add
pop
outsl
daa
movsl
call
lcall
out
mov
testb
dec
cli
dec
jmp
sub
sti
dec
ss
pop
push
out
in
sbb
sub
leave
pushf
or
add
sbb
stos
mov
lahf
fidivrs
adc
cmp
dec
jns
xorl
pop
mov
mov
pop
or
out
mov
cmp
aad
cmp
ficoms
cmp
push
lahf
xor
push
rorl
inc
imul
xchg
add
nop
lock
or
inc
dec
push
jecxz
inc
mov
pop
out
inc
decl
setle
jnp
mov
aaa
test
inc
and
mov
fiaddl
push
cmp
aaa
rolb
push
aas
push
aam
inc
cmc
pop
into
jp
ja
adcb
imul
or
xor
cli
jecxz
sbb
pop
jne
mov
mov
push
push
mov
inc
xchg
insl
fdivl
pop
cmp
mov
mov
ss
lods
jnp
rcrb
negl
ret
mov
pop
xchg
mov
gs
jno
pusha
gs
fldt
sbb
pusha
jge
fdivrs
sub
call
pushf
dec
jo
jns
jbe
sub
loopne
mov
mov
pusha
mov
adc
call
lds
mov
iret
pop
xor
daa
jb
nop
mov
cmp
mov
sbb
xor
or
xchg
pushf
xchg
xor
mov
mulb
adc
cmp
mov
das
popa
icebp
mov
std
imul
push
mov
and
out
mov
sub
test
dec
mov
arpl
gs
jbe
insl
inc
jle
mov
mov
mov
mov
jmp
push
divl
rcrl
sub
mov
lahf
cmpsl
adc
mov
in
stc
push
add
test
and
loopne
scas
cmp
out
pop
mov
push
pop
mov
scas
shrl
lock
and
adc
call
cmovne
sbb
movsb
sbb
push
out
movsb
jnp
xor
xor
test
into
das
je
pop
cmp
std
inc
lret
jae
mov
jae
scas
adc
icebp
add
xlat
add
push
sbb
push
shr
decl
fwait
adc
sbb
insb
or
sbb
rcr
fwait
dec
icebp
cmp
mov
pop
add
orb
push
sub
dec
dec
jae
adc
cmc
cmp
adc
push
sbb
and
mov
sub
fdivrs
mov
pop
fisttpll
dec
adc
repz
aad
icebp
rol
mov
jg
call
mov
lds
cmp
mov
mov
shlb
xor
jmp
cmp
jns
dec
pop
cltd
push
xchg
mov
mov
pop
cmpsb
lock
or
insb
ljmp
xor
cmpsb
imul
aam
andb
jbe
dec
fistpll
add
shll
std
arpl
add
test
arpl
adc
fidivl
iret
cs
int
pop
pop
pop
sti
test
loope
inc
inc
popa
xorb
daa
fcoms
bound
push
push
inc
ljmp
mov
mov
fstl
pop
xlat
std
dec
out
inc
pushf
jle
or
add
mov
les
add
jp
das
jmp
call
test
sub
dec
push
fsubrl
insb
push
aaa
push
push
add
cmp
and
lds
xor
adc
jmp
cld
jle
notl
jae
sarl
loop
sbb
insl
adc
inc
sub
mov
popf
jo
mov
aaa
pop
mov
test
test
jb
and
out
xor
lcall
mov
inc
fbld
add
or
movsb
les
fadd
or
in
add
cmpb
cmp
enter
and
xchg
lock
inc
daa
bound
dec
sahf
ljmp
rcr
inc
jmp
and
and
mov
fbld
out
sar
mov
mov
outsb
inc
sub
jge
sbb
xchg
notl
aam
adc
test
ficompl
xchg
jne
pop
add
push
and
sbb
inc
rolb
aas
and
jecxz
call
and
sub
jo
fnstenv
add
cmp
mov
or
int
inc
fbstp
lret
sub
dec
xor
ftst
jmp
orb
push
mov
jns
je
dec
outsb
jne
movsl
dec
aam
add
repnz
fwait
lret
xchg
in
mov
sbb
or
inc
jnp
mov
std
cmp
sub
pop
ret
cld
adc
pop
outsl
shl
dec
ljmp
test
rcll
dec
outsl
pusha
and
mov
fdivrs
cmpsl
shll
mov
xor
adc
mov
adc
cmpl
sbb
mov
jne
xor
loope
cmp
push
mov
xchg
rorl
cli
pop
and
inc
xchg
jnp
or
sub
arpl
jecxz
lods
fstps
adc
jge
xchg
xchg
cmpsb
sbb
xchg
aam
jns
inc
xchg
dec
hlt
pusha
popa
mov
mov
push
loop
movsl
cmp
mov
lods
jnp
mov
dec
mov
in
pop
clc
sbbb
inc
pop
lds
adc
mov
adc
jp
stos
sbb
ret
or
or
fdiv
pop
stos
sub
xchg
leave
test
cmpsl
inc
out
mov
mov
es
in
push
cmp
fwait
repz
pop
adc
clc
mov
pushf
dec
dec
or
sbb
call
mov
pop
inc
pop
xchg
inc
nop
and
pop
and
lea
mov
push
sti
sbb
or
or
lret
push
stos
rolb
jnp
fucomp
daa
fsubrl
xor
int3
in
add
test
test
pop
icebp
fimuls
out
or
pop
dec
sub
push
jl
scas
inc
cmc
and
insb
mov
mov
sbb
sbb
inc
cmc
push
push
sbb
dec
cmp
xchg
mov
sarb
popa
mov
mov
inc
popa
mov
jno
jge
pop
xchg
xchg
insb
mov
or
inc
mov
jnp
adc
in
cmp
adcl
pop
sbbl
adc
jp
dec
inc
add
push
fnsave
xchg
andl
sbbb
stc
xchg
mov
cmp
cmp
jmp
xchg
jo
xchg
ja
or
jne
es
fstpt
jnp
test
lds
xchg
inc
fcomps
out
mov
icebp
and
cmc
insb
in
adc
mov
sbb
shlb
movsb
incb
xchg
dec
std
sub
sub
je
mov
hlt
adc
repz
sbb
jns
xlat
jl
sbb
pop
icebp
xchg
xorb
movsl
daa
test
lea
cmpsb
push
mov
aaa
mov
adc
pop
inc
add
jmp
jne
stos
pop
adc
fidivrs
leave
mov
outsl
or
pop
push
outsl
jnp
dec
push
mov
inc
movsb
es
xchg
add
ss
pop
inc
into
and
cmp
mov
bound
lahf
jmp
pop
in
mov
mov
lcall
aam
jo
mov
mov
jmp
in
lret
lahf
pusha
or
test
mov
icebp
int3
cmp
loope
and
cmp
mov
pusha
dec
out
pushf
pushf
lea
ss
jns
test
cmp
cmp
jecxz
xchg
mov
and
push
mov
repz
adc
imul
jl
ss
jecxz
rcrb
xor
ret
push
insl
xlat
out
mov
das
xchg
and
pop
xchg
mov
and
movsb
iret
repnz
pop
sub
cmp
lret
jae
cltd
pusha
push
arpl
iret
ficoml
ds
arpl
push
jbe
out
mov
aas
outsl
cwtl
push
mov
data16
xchg
cltd
adc
int
jle
sbb
jae
jns
mov
mov
jle
mov
test
int3
cli
adc
cmp
push
es
dec
adc
xchg
sub
mov
mov
pop
xor
imul
cmpsl
lods
or
and
and
add
adc
in
sti
add
or
and
jb
push
pop
sbb
test
repz
addl
test
pop
insl
cltd
stc
push
xchg
cmp
ret
mov
adc
jo
mov
mov
cmpsb
lret
sbb
mov
xor
nop
push
mov
jae
adc
gs
movsb
incb
dec
test
out
add
and
or
jae
adc
rcrb
pop
testb
dec
dec
sbbl
xchg
xorb
xor
sahf
in
jo
and
mov
sarl
shrl
fisttpl
xlat
call
imul
call
lds
shrb
pop
or
loope
loope
xor
daa
mov
jb
pop
inc
out
adc
adc
std
inc
mov
into
fucomp
vpmaddwd
pop
repnz
add
sbb
sbb
scas
sbb
in
ret
or
clc
add
shlb
unpckhps
stc
sahf
inc
jecxz
push
push
fidivl
lods
stos
cs
ja
in
inc
dec
and
and
fwait
int
pushl
imul
outsl
xchg
add
imul
ss
xchg
or
pop
or
sbb
dec
adc
aam
lea
xchg
jle
scas
xor
into
dec
mov
enter
test
mov
dec
loop
xor
movsl
test
pushl
les
lea
mov
add
add
and
xlat
ds
outsl
xchg
das
mov
dec
mov
inc
imul
dec
cmp
or
loopne
out
mov
lret
sub
xor
add
lret
add
cmp
je
dec
dec
push
jecxz
mov
pop
sti
ja
scas
mov
scas
dec
pop
int
cmp
inc
add
mov
jp
mov
sub
mov
mov
or
outsb
fisttps
fcompp
aaa
push
pop
movsb
outsb
and
cld
cmp
pop
dec
push
push
jp
mov
or
cmp
call
aam
xor
fimuls
pop
lahf
add
pop
es
or
or
mov
and
fbstp
add
adc
sub
jb
call
call
arpl
cmp
xchg
aaa
pop
imul
xchg
movsl
push
mov
test
dec
scas
aam
daa
scas
mov
jg
call
shrb
pop
jae
pushf
rcrb
or
mov
scas
xchg
dec
push
ja
adc
pop
cmp
xlat
mov
dec
out
push
call
mov
fisubl
pop
and
out
add
jnp
out
push
aaa
ss
push
sbb
mov
mov
cwtl
xor
div
push
dec
mov
addl
call
inc
fisubrl
testb
xor
and
ret
add
mov
aaa
cmp
int
jno
scas
outsb
push
mov
mov
data16
mov
push
push
mov
push
jle
in
das
cmp
dec
ficoms
pop
mov
les
mull
fsubl
loope
sub
fs
insl
inc
lds
sbb
sbbb
and
icebp
cmp
mov
dec
out
jne
push
and
sti
sahf
ss
xor
adc
push
jecxz
xor
push
lcall
or
jp
fld
lods
int
repnz
xchg
pop
mov
xchg
jns
mov
push
sub
pushf
jle
and
daa
in
in
push
inc
jns
in
sti
stc
fsubrs
mov
adc
mov
add
ficoml
adc
stos
sub
sbb
cmp
xor
push
popf
mov
ror
push
xor
out
mov
bound
enter
mul
mov
jecxz
aaa
inc
inc
mov
leave
movsb
lea
pop
dec
lret
mov
pop
xor
out
mov
pop
xchg
test
push
mov
stos
lret
adc
add
movsl
pop
loopne
imul
xchg
leave
xor
xor
push
jle
push
ret
jmp
cmp
pop
aad
clc
lret
pushf
lcall
sahf
int3
adc
pop
lock
pop
cmc
out
psllw
leave
sub
and
insb
mov
inc
jmp
sub
enter
stos
mov
xchg
test
jmp
dec
popa
mov
lea
xchg
jb
cwtl
lea
jb
xchg
lret
or
cld
call
jmp
mov
push
pop
enter
cmp
xorb
xchg
stos
iret
pop
lock
imul
arpl
popf
cmp
mov
pop
pushf
stos
xchg
or
ljmp
push
fisubl
popa
les
je
adc
cmpsb
jge
cmp
in
xchg
clc
xor
cmp
out
imul
in
pusha
jnp
imul
test
inc
pop
jne
push
out
bound
and
xchg
pushf
dec
sub
iret
push
xchg
or
je
push
jl
aam
je
xchg
mov
dec
dec
or
add
jae
inc
jno
dec
in
fiaddl
das
xor
cmp
mov
jne
dec
adcb
mov
dec
push
inc
mov
fisubs
xchg
or
jge
stos
out
lods
mov
pop
aad
mov
push
dec
pop
inc
xchg
mov
inc
cmpsb
in
retw
jo
loope
xor
fwait
mov
data16
popf
or
or
xor
xchg
push
outsl
mov
int
imul
std
xchg
decb
mov
in
add
push
xchg
out
les
int
shlb
or
inc
dec
shll
shll
push
pop
push
xchg
out
adc
mov
lret
out
comiss
fisubrl
notl
in
orb
cmp
ret
cmpsb
cmc
xchg
sub
std
dec
add
add
sbb
jno
in
inc
loope
into
pop
test
scas
rcrl
sbb
sbb
pop
mov
mov
lods
jae
cs
push
lret
xor
jnp
arpl
jmp
outsb
xor
jecxz
sub
sub
dec
inc
adc
mov
pop
aad
into
xor
cmp
insl
dec
and
xlat
adc
push
rolb
and
or
lea
inc
and
imul
xor
adc
aaa
arpl
loop
jecxz
test
arpl
adc
jp
mov
cmc
data16
shlb
subl
ret
sahf
pushf
cltd
xchg
ljmp
repz
cmp
inc
jmp
fs
pop
sbb
cltd
add
nop
ret
cmc
and
insl
push
pop
sbb
mov
sub
and
xor
jnp
xor
xchg
mov
iret
data16
push
psrld
test
loope
mov
nop
arpl
inc
cmp
jp
or
scas
xchg
pop
insb
lret
mov
mov
jno
fbstp
sub
mov
xor
orl
push
or
lods
jle
mov
sbb
adc
jno
sbb
lahf
push
inc
jnp
arpl
scas
adc
hlt
scas
sbb
cmpsb
ret
ret
mov
and
jmp
inc
cmp
in
mov
cld
jge
test
stos
cmpsl
xor
sarb
xchg
inc
arpl
cmpsb
gs
loop
mov
mov
paddusb
test
enter
push
aam
setle
push
push
test
jcxz
cmp
test
sbb
sbb
mov
mov
ss
test
and
or
or
pop
js
sbb
cmp
decb
dec
insl
inc
sbb
mov
adc
insl
jle
sub
dec
icebp
or
test
fs
loop
sar
mov
les
xchg
xlat
push
fidivrs
mov
xchg
inc
test
int
fs
xchg
fistpll
rcrb
xor
add
shrl
mov
xor
cmp
mov
jmp
ficompl
je
mov
fimull
push
lods
int3
test
andb
sub
add
test
mov
loope
push
or
aad
jne
out
ds
cmp
cwtl
mov
push
xchg
mov
lock
or
mov
ds
mov
mov
in
js
pop
push
mov
sbb
repz
stos
into
fs
fstpl
nop
mov
and
cld
mov
pop
push
jp
xchg
cmpsb
ss
push
fisubs
xor
cmp
xor
push
xchg
jne
sbb
out
arpl
pop
dec
jge
arpl
test
repz
fcomi
hlt
lahf
inc
leave
pop
pop
leave
xor
pop
scas
add
mov
sub
pop
jg
movswl
jecxz
push
rcll
sbb
lcall
repz
imul
out
cmp
test
push
pushf
mulb
js
bnd
shrb
and
jb
pop
insb
pop
lock
sbb
int3
call
add
xchg
or
shl
pop
dec
mov
and
inc
mov
test
jno
cs
xchg
daa
pop
pop
jo
fstpt
jmp
mov
push
scas
mov
adc
jmp
jnp
jbe
jg
and
inc
rol
gs
push
inc
popf
sub
mov
and
jmp
mov
push
insb
nop
shlb
cmpsb
aas
fstpl
pushf
lock
rcl
xchg
pop
mov
dec
jge
data16
xchg
push
mov
ret
dec
adc
sbb
inc
sub
mov
push
fdiv
jne
hlt
icebp
rol
push
push
jecxz
je
bound
add
xor
fstp
jnp
lods
push
mov
push
cmpsb
add
rorl
jno
push
sub
test
cmp
add
insl
lds
sti
daa
mov
dec
adc
cmpsl
or
pop
sub
pusha
or
jecxz
loopne
xor
sub
sub
mov
add
and
and
add
sarl
bnd
shl
mov
fs
push
stc
jp
fiadds
inc
xchg
repz
les
mov
or
pushf
lret
and
js
push
jns
test
ret
popa
and
add
cmp
dec
movsb
mov
mov
push
xchg
jb
xchg
imul
or
mov
and
pop
mov
and
cmpsl
cltd
hlt
adc
mov
pusha
inc
outsb
cli
dec
or
cli
je
add
mov
aam
jp
xchg
outsl
sub
fdivrp
adc
or
dec
mov
loopne
push
push
mov
movsb
dec
cmpsb
movsl
fwait
pop
fiaddl
fs
xchg
repnz
shlb
mov
cmpsl
test
shll
or
xchg
and
and
sti
jns
xor
push
pop
inc
mov
jecxz
xchg
sub
sbb
gs
ljmp
push
int3
sahf
jge
repz
scas
inc
pop
cltd
movsb
cli
mov
sbb
or
sahf
repz
inc
test
insb
jecxz
mov
jne
or
mov
add
add
cwtl
dec
push
adc
insb
sbb
cmpsb
addr16
iret
inc
push
imul
or
push
or
sbb
ficoml
int
ds
jp
sub
pop
je
push
lret
jl
pop
bnd
mov
xchg
pop
imul
or
mov
dec
xor
inc
mov
out
push
xor
inc
pop
add
fldl
jge
xor
daa
pop
add
inc
mov
cmp
cltd
call
loope
ss
and
adc
xor
xor
loop
ljmp
or
jmp
dec
sub
lcall
loop
push
push
jo
xor
arpl
mov
jne
push
and
pop
sbbl
das
adc
mov
dec
stc
pop
nop
fdiv
fs
push
mov
push
loope
xor
in
imul
mov
push
fbstp
dec
adc
movsb
add
inc
pop
mov
mov
xchg
or
cmc
push
leave
push
inc
inc
jbe
or
push
cmp
dec
mov
push
mov
test
das
pop
adc
or
insl
mov
jge
incb
xchg
data16
mov
inc
lods
cmpl
popf
das
in
call
mov
fisubrs
das
aam
adc
fsubs
repz
pop
lods
popa
inc
mov
fisttps
aas
jae
push
cmp
out
jecxz
xchg
inc
push
pushf
cs
dec
xchg
mov
adc
jbe
stc
enter
roll
sub
jae
lds
lock
jp
add
adc
cmpsb
fiaddl
jmp
loop
testl
repnz
or
lret
imul
int3
fwait
cli
loope
mov
into
hlt
test
mov
push
out
dec
cmp
push
inc
icebp
lcall
jbe
lahf
mov
push
fisubl
and
jl
dec
or
mov
into
lahf
int3
mov
mov
sub
rcrl
pop
les
les
loop
cmp
xchg
sub
test
ret
scas
js
cmpsl
cmp
xor
push
mov
add
add
cwtl
mov
mov
push
iret
fstps
int3
mov
add
hlt
adc
imul
popf
jo
mov
mov
lret
xor
test
out
add
fidivrs
lea
and
cli
in
icebp
mov
pop
mov
mov
pop
sbb
dec
pop
inc
in
xor
pop
into
sub
push
mov
in
push
and
mov
jno
cmp
in
idiv
mov
push
jne
and
xchg
add
lock
ljmp
fimull
add
orb
mov
stc
xor
fistpl
jnp
push
bnd
in
out
mov
xchg
das
pop
mov
scas
and
sbb
sub
push
or
xor
cmpsl
jno
lret
sti
stc
mov
add
push
mov
stos
jmp
scas
addr16
mov
cmpsl
int
sub
les
sub
pop
rclb
push
ja
out
cwtl
jb
jne
cmpsb
shll
push
testb
aad
and
addr16
push
add
or
mov
loope
movsb
cmpsb
push
push
add
ficoml
sahf
repnz
push
jb
inc
inc
mov
test
sub
pop
xchg
mov
adcl
add
enter
and
mov
sub
cld
dec
hlt
sub
sub
dec
imul
lret
mov
lcall
lcall
cmc
and
loopne
sub
js
int
sarb
inc
lret
insl
push
cwtl
and
mov
daa
pop
in
xchg
stc
clc
imul
lea
mov
fistpll
add
loop
idivb
ja
std
push
mov
cwtl
add
loope
xor
jnp
pop
push
jnp
rcll
aad
sub
cmpsl
jo
loop
loope
jnp
sub
sbb
outsb
and
cli
adc
jbe
mov
decl
push
jle
xor
ljmp
rcr
xor
jbe
and
lahf
or
pop
jmp
push
mov
inc
adc
xlat
movsl
imul
push
ss
dec
xchg
sbb
or
jle
push
in
pop
xor
and
js
pop
rcll
push
mov
add
push
insw
rcll
out
outsb
add
pop
fbstp
insb
daa
je
aaa
les
pop
divb
stc
cltd
divb
mov
or
jg
xchg
shll
jns
ja
mov
pop
cld
sbb
scas
cmp
push
add
out
out
pop
jnp
or
movsb
pop
xor
cltd
jl
stc
push
push
je
aad
test
jbe
pop
adc
fdivrs
mov
sti
dec
fidivl
or
cmp
pop
ja
pop
sbb
loopne
pop
add
push
mov
loopne
push
dec
mov
out
push
rolb
out
jns
jne
aad
scas
mov
pop
pop
add
dec
in
pop
mov
or
xor
fwait
sbb
das
push
dec
ss
repz
lcall
insb
ljmp
jb
pop
push
mov
stc
xlat
gs
repnz
icebp
sbb
or
xor
push
lods
sbb
dec
mov
movsl
inc
dec
pushf
cmp
divb
inc
add
or
pop
out
jecxz
cmp
mov
pusha
mov
in
into
loop
stos
xchg
adc
cmovbe
movsb
cwtl
push
ror
out
cmp
mov
sbb
jo
rol
scas
mov
pop
pushf
rcrl
into
rorb
in
cli
fstl
jg
jo
sahf
and
fmull
ljmp
insl
addr16
xor
jp
jne
ja
int
fstl
mov
movsl
sbbl
push
cltd
push
dec
fistps
fstl
xchg
dec
lcall
cli
pop
dec
xor
push
mov
mov
xchg
add
repz
pop
or
xor
jb
and
lcall
cli
test
or
out
xor
cmp
mov
addr16
jne
push
mov
pushw
pop
mov
cli
jp
test
es
jecxz
movb
mov
jb
jp
cld
push
add
dec
int3
push
div
and
dec
xor
aad
pop
rcll
stos
mov
das
mov
jp
sbb
xor
or
mov
fmull
insl
xchg
ds
dec
inc
shll
cmpsb
push
rcrb
sbb
enter
scas
pop
fisubl
adc
dec
xchg
inc
test
loopne
add
ret
jl
cltd
loop
mov
push
xchg
cli
fildll
xchg
pop
sub
cli
movsb
ss
lds
cmp
adc
fwait
mov
cmp
ss
or
cmp
mov
sub
movsb
push
loopne
jne
in
cmpsl
pop
faddl
pushf
lods
repnz
dec
push
mov
leave
xchg
insb
subl
es
sub
cvtpi2ps
sahf
add
cli
in
push
xor
mov
gs
js
adc
adc
loope
xchg
add
adc
push
mov
movzbl
cli
adc
fdivl
or
cmp
push
int3
mov
sti
inc
xchg
fscale
loopne
pop
cld
mov
js
fldt
popa
loop
fwait
and
and
lea
xor
xchg
rolb
mov
dec
or
call
cmpsb
cmp
push
fstp
in
adc
mov
add
adc
sbb
into
mov
lcall
movsb
lahf
xchg
cmpsl
lods
fwait
ss
inc
xor
sbb
pop
fisttpll
sbbb
cltd
mov
icebp
rcll
push
dec
insl
pop
inc
fcompl
mov
test
cld
mov
clc
andb
jae
ret
lods
ljmp
or
mov
mov
fnstcw
or
jge
pop
in
fcmovnu
add
sub
pop
es
icebp
jmp
mov
mov
mov
in
test
addr16
sbb
cmp
and
xchg
cmc
sbb
cltd
xchg
jp
insb
addr16
pop
jmp
mov
outsb
xchg
je
pop
cmpsl
push
jg
add
adc
jl
mov
jmp
dec
pop
pop
mov
cltd
jne
dec
jecxz
push
mov
mov
nop
shlb
mov
sbb
xor
loope
lds
loope
xchg
aad
lods
adc
dec
in
lods
std
in
add
clc
movsl
cmpsb
mov
sbb
xchg
lods
cmp
std
aam
test
sub
fldt
icebp
sbb
ja
lret
subl
addl
cltd
aam
lret
cmp
mov
pop
pop
ret
fistpll
sub
mov
jno
lahf
cmpsb
loopne
pop
repz
sub
and
fs
sbb
add
pushf
idivl
in
in
clc
jp
dec
bound
in
sysexit
inc
lock
sbb
add
adc
lods
adc
dec
cmp
ja
fdivl
pop
or
mov
cmpsl
adc
test
and
cld
jne
mov
mov
fs
std
adcl
jmp
sbb
push
lahf
sarl
pop
repz
cli
inc
test
mov
cmp
xor
xchg
ret
lret
ret
xor
aas
shrb
lock
inc
mov
pop
cmp
mov
or
push
outsb
or
sti
sub
xchg
push
iret
fmull
int
adc
push
mov
sbb
daa
add
mov
adc
iret
cmpsl
mov
mov
cmp
or
mov
jae
xchg
push
sbb
inc
jo
lods
int
jae
add
ja
fisubs
clc
popf
sub
bound
fsts
ret
mov
cmpsb
cmc
mov
cmpsl
ja
and
fldt
loope
add
dec
push
inc
dec
std
int3
push
jl
in
pop
adcl
cmc
jae
scas
or
xorb
arpl
push
ret
mov
pop
cmp
cltd
test
mov
dec
jns
inc
lea
negb
mov
mov
fisubrs
jbe
orb
aaa
push
xchg
add
mov
mov
call
or
test
je
daa
jmp
mov
inc
sub
sub
mov
daa
in
xchg
aaa
push
cmp
neg
xchg
ja
cli
sar
daa
lock
into
aaa
popf
and
aas
jp
fs
test
mov
idivb
int3
mov
fisttpll
pop
out
jmp
fmull
xchg
aaa
into
movsb
lret
lods
mov
mov
filds
cwtl
xchg
punpcklwd
xor
loopne
or
mov
mov
ss
cltd
cld
stc
and
inc
insl
pop
inc
dec
xchg
jmp
loopne
or
sbb
sub
mov
sub
mov
insl
cmp
imul
inc
or
dec
inc
pop
sub
dec
bswap
jnp
pop
jmp
mov
xlat
out
cli
sahf
dec
aad
inc
mov
jae
adc
or
je
fwait
in
inc
sti
shrl
out
and
xchg
mov
aam
jle
dec
test
mov
cwtl
sub
or
inc
fbld
inc
cmc
ss
pop
mov
popw
cmp
inc
mov
gs
xor
ds
pop
lods
daa
nop
sub
cmpsl
or
jl
outsb
hlt
sub
into
adc
inc
jae
pop
int3
faddl
mov
mov
fwait
daa
push
push
adc
push
filds
movsl
mov
mov
das
stc
jo
aaa
int
mov
and
leave
stc
push
aas
mov
popf
ljmp
mov
adc
aas
xlat
inc
push
mov
aam
fstps
shll
mov
popa
ret
shr
in
adc
bnd
mov
negl
shr
sbb
push
mov
movsl
adc
jno
push
inc
xchg
push
sub
mov
mov
clc
imul
xor
jmp
or
pop
pop
sar
push
dec
xchg
jbe
aam
lret
aas
jo
or
mov
push
xchg
ret
add
mov
mov
scas
adc
sbb
loopne
inc
pop
or
jne
mov
icebp
jo
imul
nop
leave
subl
cli
or
xor
pop
pop
lock
ds
and
enter
inc
je
pushf
addl
cmpsl
imul
mov
orb
adc
mov
push
pop
call
or
outsb
arpl
or
or
or
mov
mov
test
fisubs
outsb
mov
aad
movsb
sbb
cld
popf
add
cmc
bound
mov
leave
push
dec
sbb
xchg
dec
popa
popf
xchg
call
mov
mov
jnp
imul
movswl
imul
testb
pop
std
mov
enter
cmpl
mov
lea
xchg
sub
sub
test
and
adc
inc
sbb
cmp
movsl
push
pop
dec
icebp
inc
or
push
cmp
cmpsl
add
jp
les
or
add
xadd
and
xchg
popf
sbb
or
jge
adc
jmp
enter
pop
jmp
cli
sub
mov
sbb
stos
sub
dec
sbb
bound
in
mov
mov
cmpsb
jge
add
retw
bound
inc
nop
test
shr
xor
nop
testb
pop
ljmp
adc
pop
xchg
and
imul
adc
add
scas
mov
ss
dec
adc
loope
sub
shrb
fwait
sub
push
push
mov
cwtl
hlt
mov
inc
xor
outsl
shlb
testb
cmp
cmp
out
lret
imull
xchg
flds
sub
clc
test
or
cltd
sub
iret
cmc
jl
xchg
mov
call
pop
leave
fmul
insl
dec
mov
mov
mov
push
push
sub
movl
jne
and
fs
mov
adcl
dec
ret
jle
add
clc
adc
xlat
fcompl
sub
or
test
pop
cwtl
aas
leave
sarb
xor
shll
pop
push
ret
int3
ljmp
mov
cmpsb
outsl
decb
sbb
adc
xor
stos
cmp
jp
cli
pop
setnp
pusha
lret
clc
scas
mov
push
loope
loopne
add
pop
add
scas
dec
xchg
inc
xor
jmp
mov
inc
sahf
xor
cs
mov
inc
push
inc
into
fisubs
nop
xor
adc
int
mov
mov
cmc
psrad
or
mov
sub
xchg
push
in
rcll
pop
call
insl
ret
push
pop
mov
test
popa
out
lahf
add
jmp
fidivrs
inc
insl
in
ja,pn
fbld
sub
pop
pop
pop
jnp
dec
pop
aam
cld
rcrl
repz
cmp
xor
lods
xor
in
fcmovbe
xlat
mov
into
sbb
add
stos
jne
adc
xchg
jl
test
inc
and
pcmpgtw
add
outsl
pop
scas
mov
push
mov
lret
sub
adc
xor
pop
insb
cwtl
and
xchg
stos
jne
mov
es
mov
negb
fnstcw
repnz
ret
mov
fsubrs
adc
lods
xchg
ficoml
out
testb
imul
fldt
stos
push
ds
push
std
or
jmp
jl
mov
push
dec
mov
scas
sarl
mov
loope
cld
jb
js
jbe
sti
jle
addb
push
jb
stc
andb
sub
ret
and
xchg
inc
xchg
icebp
dec
inc
pop
cmpsl
cmp
fidivrl
xor
mov
jne
sbb
cmc
mov
cmp
jae
jmp
lock
sti
push
ss
loope
add
jmp
in
pop
push
ret
push
aaa
jno
leave
in
ss
flds
scas
pop
aad
mov
sti
jp
mov
stc
add
xlat
xchg
mov
subl
mov
mov
imul
dec
fwait
ret
sbb
sarl
lcall
into
sub
jns
sub
jge
add
mov
pop
shrl
sbb
jp
adc
cmp
adc
mov
cmp
cld
icebp
iret
push
daa
jg
mov
cmp
shll
fwait
test
into
scas
ja
mov
cmc
stos
mov
das
jbe
push
sbb
out
fnstenv
fiadds
ds
and
mov
clc
pop
jp
xchg
enter
stc
or
subl
addb
pushf
nop
push
fwait
stos
cld
lods
js
lret
insl
jns
jecxz
imul
dec
mov
frstor
sahf
daa
movsb
mov
loopne
fildll
test
mov
mov
addl
pop
lret
movsb
pop
fs
mov
testl
loope
mov
loope
cs
mov
or
aaa
fidivrl
dec
mov
push
add
jle
jle
out
in
les
ss
fsts
in
stos
stos
jl
sbb
das
faddl
add
jle
popf
pop
iret
js
addr16
inc
and
scas
imull
insb
mov
jno
mov
push
loope
add
lods
mov
aaa
add
sbb
nop
inc
icebp
pop
xor
mov
pushf
mov
cld
negb
push
mov
sbb
shll
test
jmp
mov
inc
out
popa
cmp
loope
arpl
adc
je
das
rol
adc
popl
popf
imul
insb
jl
or
pop
xor
jo
xorl
and
imul
ret
es
roll
mov
and
scas
aaa
js
push
ret
enter
cmp
outsl
mov
dec
push
adc
xor
loopne
jl
sti
adc
jp
dec
mov
loop
add
ljmp
jl
push
add
mov
fists
ljmp
popa
sbb
xchg
sbb
shlb
sub
push
cld
mov
mov
jno
sbb
pushf
pop
sub
and
xchg
pop
mov
fstl
test
iret
lods
jnp
gs
cld
ret
xchg
pop
cmpsb
mov
xchg
mov
outsl
jae
push
jge
jnp
xchg
push
push
std
pop
aam
and
das
int
jmp
mov
fsubrs
mov
ret
adc
ficomps
push
pusha
rcrl
inc
in
ret
push
loopne
mov
pop
inc
stc
sarl
lea
pusha
push
sub
mov
pop
xchg
mov
add
ljmp
lcall
jns
adc
outsl
sahf
rclb
mov
or
movsl
push
add
or
iret
pop
andb
push
lret
rorb
and
push
mov
fsubrl
negl
in
pop
push
adc
lcall
jecxz
fsts
in
movsb
xlat
push
or
imul
nop
dec
or
rorb
imul
adc
dec
and
lods
mov
repz
pop
pop
nop
mov
xchg
orb
or
push
icebp
xchg
iret
xor
gs
mov
mov
jb
or
lods
imul
rcrl
pop
clc
aas
mov
pop
jo
scas
insl
and
push
jp
xor
pop
push
into
lahf
dec
call
movl
xor
cmp
lock
arpl
insb
cmp
xchg
les
lcall
cmpsb
sub
mov
pop
and
cmpsl
test
and
lods
jmp
repnz
loope
mov
or
pop
jne
xchg
nop
sbb
cltd
popa
pop
xor
dec
flds
rcll
scas
fdivrl
inc
data16
sub
mov
nop
jmp
inc
lret
or
mov
pop
push
jmp
test
sbb
inc
jnp
add
lahf
mov
daa
mov
mov
inc
cmp
test
inc
popa
stos
cmc
mov
cltd
xor
xchg
xchg
sbb
push
cltd
adcl
mov
xchg
cmc
test
dec
sahf
mov
fwait
sahf
lret
into
lahf
jle
int3
or
in
insb
jge
jbe
mov
push
vmovhpd
adc
stos
mov
daa
ja
mov
sar
pop
jbe
addr16
stos
rcll
inc
out
fisubrs
adc
lret
fstpt
fsubrl
out
mov
mov
mov
xchg
xchg
pop
pop
dec
movsl
in
mov
pusha
lret
or
mov
jae
ror
dec
cmc
fldcw
lods
mov
mov
arpl
rcll
nop
ds
dec
sahf
mov
pop
add
adc
and
test
push
cltd
mov
mov
ljmp
movsb
leave
fidivrs
call
mov
add
movzbl
lds
xor
rorl
dec
dec
es
pop
loop
nop
pop
sbb
mov
stos
ja
sub
rcll
mov
cmp
out
sub
xorb
mov
hlt
clc
mov
cs
int
add
gs
popf
aaa
and
or
xchg
push
mov
mov
and
push
adc
jno
jl
mov
cs
add
pusha
std
ret
add
test
mov
cmp
add
inc
xor
dec
adc
cmp
push
dec
aas
sub
add
insb
fisubs
mov
push
mull
mov
shlb
clc
mov
dec
sti
xchg
jge
pop
xchg
mov
shrl
mov
scas
test
loopne
sub
sub
std
jmp
jns
xchg
sbb
and
movsb
sub
mov
and
sbb
sub
push
flds
das
inc
sti
cld
fisubl
and
cmp
test
sub
lret
and
sub
data16
rcrb
jb
fiadds
jecxz
dec
cmc
push
and
xor
mov
sbb
dec
fwait
or
mov
add
inc
push
incl
js
lock
or
cmpsl
cmp
sarb
sub
xchg
xor
and
jle
mov
addl
adc
fwait
cmp
push
xchg
jae
xchg
mov
and
mov
mov
xor
or
xor
clc
or
jb
push
lds
adc
shlb
incl
in
dec
popf
pop
jl
cwtl
or
cmp
xchg
arpl
out
mov
icebp
cltd
push
test
dec
mov
int3
fstl
das
cmp
mov
and
insb
push
popa
scas
jmp
mov
inc
hlt
stos
ret
jae
in
lcall
pop
scas
ja
jb
stos
jle
leave
xor
sub
inc
push
js
stos
mov
and
testl
das
icebp
and
into
xchg
adc
mov
dec
pushf
pop
jmp
in
stos
shlb
cmp
mov
adc
lea
inc
enter
adc
cwtl
sub
sbb
xchg
mov
data16
loopne
je
push
xor
ljmp
les
xchg
xor
pop
jg
in
jbe
and
sbb
sar
xchg
dec
dec
in
jo
pop
add
roll
in
xchg
mov
push
clc
lret
sub
jb
fistpl
push
inc
push
movsb
roll
inc
jg
test
add
jb
dec
push
in
in
mov
loop
insb
jns
xchg
and
push
dec
out
add
in
xchg
cmp
mov
lahf
sbb
add
cmp
insl
sbb
nop
sub
lods
add
insl
cltd
lock
sbb
push
daa
inc
sbb
cld
in
adc
repnz
jp
xor
in
push
adc
jl
and
sbb
add
scas
bound
jne
mov
mov
dec
hlt
xor
push
mov
int
cmp
cld
loop
fisubl
push
or
js
cwtl
aam
addb
mov
cmpsb
scas
fidivs
cs
add
test
push
add
insb
addr16
dec
or
cld
arpl
mov
and
bound
jecxz
test
xchg
and
or
mov
dec
push
mov
scas
test
push
cmc
adcb
dec
cmpb
xlat
and
add
pop
stc
cmpsb
and
xorb
cmc
int
sub
push
out
push
aas
ds
enter
push
dec
out
mov
subb
push
push
pop
sbb
mov
push
push
mov
cwtl
mov
movsl
rorl
js
sbb
loope
fildll
inc
out
add
iret
inc
dec
jecxz
repnz
test
push
les
lcall
jmp
add
add
fxch
iret
ret
cmpb
frstor
or
inc
fists
cli
lcall
lahf
mov
psubsw
arpl
repz
clc
lahf
into
fcompl
lret
mov
sarl
loop
orb
jno
sti
inc
dec
mov
aad
das
test
mov
cmp
sbb
or
xchg
lods
xor
stc
mulps
bnd
rcll
xor
cmpsb
or
out
jnp
fdivrs
out
jne
push
adc
je
clc
sarl
shlb
mov
popa
push
jmp
shrl
movsb
dec
push
test
xchg
xorl
loop
inc
stos
sarl
leave
incl
cmp
or
out
mov
inc
pusha
divl
jle
push
cmp
fimuls
scas
aam
loopne
popf
fnstsw
add
cmovg
test
inc
fidivl
cmp
lea
lods
inc
sub
ror
xor
pop
mov
push
out
mulb
sub
jecxz
mov
pop
push
push
or
inc
enter
cmpsl
cld
test
shlb
pop
pop
adc
popa
stos
cmp
test
pushl
test
loop
es
and
jle
in
sarl
pop
sbb
sti
xchg
sbb
mov
dec
andb
pushf
stos
clc
mov
inc
mov
icebp
dec
push
loope
and
dec
add
lret
rol
pop
cmpsb
or
mov
mov
xor
jmp
mov
xchg
cmp
mov
loop
push
lret
xchg
cmpsb
int
push
sbb
in
mov
outsl
sbb
cld
mov
or
push
xor
mov
adc
and
mov
in
push
mov
sbb
mov
pop
stc
pop
lock
sbb
jge
mov
cmp
inc
sub
fdiv
pop
lahf
movsl
repz
ljmp
jge
jmp
mov
fcmovne
inc
stc
mov
mov
std
push
mov
mov
mov
in
sub
outsb
pop
inc
pop
iret
sbb
bound
pop
mov
mov
mov
xchg
xor
jmp
enter
push
push
fiaddl
int3
out
movsl
setno
push
iret
flds
add
ret
xchg
or
cmpl
cmp
into
sahf
fs
or
into
mov
repz
adc
jmp
sti
jmp
fsubrl
mov
ret
rolb
repnz
jo
fistpll
inc
rclb
push
mov
cs
rolb
lods
push
ljmp
xchg
test
push
push
add
xor
inc
sbb
ret
mov
vpsllq
lods
xor
insl
adcl
aad
adc
rorl
mov
mov
dec
jne
jp
and
cmp
lea
shlb
jmp
push
ret
int3
jbe
xor
push
clc
outsl
mov
push
push
adc
fdivr
push
xor
lods
mov
dec
add
and
ret
push
sub
xor
xor
dec
pop
cmp
sbb
pushf
pop
push
test
jp
enter
lahf
add
pop
pop
hlt
pop
inc
sub
xor
mov
ja
lock
daa
in
leave
xchg
adc
cmp
outsl
sub
adc
or
int
aas
inc
xchg
jne
sbb
nop
aad
mov
popf
icebp
outsl
in
add
sbb
fsts
xchg
xchg
jmp
mov
xchg
lret
cs
insl
loop
mov
xor
incb
cld
test
loope
fwait
sub
lds
xor
mov
fs
fs
ja
add
adc
mov
push
out
and
mov
popf
push
scas
add
adc
sbb
sub
and
lods
mov
aaa
xchg
fisttpl
pop
lea
adc
mov
imul
xor
pop
xchg
test
sub
jp
mov
dec
sarb
fsubrp
sub
repnz
fldenv
cwtd
nop
jnp
and
jg
loopne
or
ja
and
inc
adc
cld
mov
fcmovnbe
mov
insl
push
cwtl
sub
das
mov
push
dec
inc
xchg
data16
mov
data16
js
cs
push
popa
push
orl
sub
cmp
repz
imul
cmp
nop
jo
jbe
or
add
mov
outsl
int3
insb
or
sbb
inc
mov
add
sub
inc
out
push
or
or
xchg
dec
pop
mov
dec
addr16
movsb
mov
or
and
imul
cli
aas
xor
out
mov
pop
jnp
scas
in
ss
or
rcr
je,pn
jo
in
inc
iret
imul
mov
push
fdivl
sti
xor
dec
xorb
cmp
out
sub
cmpsb
lea
dec
arpl
cltd
repnz
imul
shl
data16
mov
loop
mov
xchg
leave
out
pop
icebp
pop
adc
xchg
roll
pop
xchg
xchg
inc
jno
or
jo
push
testl
push
aas
je
mov
mov
mov
mov
test
or
xor
jnp
and
fnstenv
adcl
inc
popa
cmp
add
repz
jae
loop
andl
sar
mov
jo
imul
jno
jge
xor
push
mov
xor
dec
ret
adc
adcb
sbb
lret
mov
cwtl
test
ficomps
and
xor
call
imul
sub
push
mov
cmpsb
das
cmp
outsb
sarl
mov
mov
faddl
repnz
mov
clc
scas
xor
ret
and
lds
jge
mov
or
inc
shr
xor
and
test
xchg
outsb
or
lret
add
xor
mov
ljmp
dec
pusha
movsl
and
int3
roll
cmp
pop
shlb
mov
out
sbb
xchg
out
das
jbe
repnz
cmp
mov
cmp
sbb
inc
jne
in
ja
stos
jge
cmp
movsb
sbb
out
push
scas
jmp
scas
les
pop
jge
in
nop
data16
sbb
fistps
out
mov
mov
add
push
jg
mov
lock
inc
cld
cmp
fldl
add
dec
loopne
cmp
add
jge
rsm
jl
cs
jl
out
cmc
push
xchg
jnp
lock
shrb
add
pop
es
testb
dec
icebp
pop
loopne
in
popa
push
ficoms
iret
jae
sbb
or
testl
sbb
and
sbbb
mov
sarb
sahf
repz
scas
pop
testb
mov
or
repnz
enter
je
xchg
cld
dec
daa
cmpsb
jns
or
out
dec
cmp
adc
fwait
adc
pop
call
mov
imul
jecxz
sbb
cltd
cmp
mov
les
adc
cmp
sbb
mov
iret
fsubrs
mov
lods
adc
or
pop
cmpsl
mov
add
sahf
push
jne
mov
sbb
mov
dec
ss
push
fimuls
jecxz
repnz
leave
decb
adc
or
stos
into
mov
lea
inc
sbb
mov
loopne
mov
shlb
ja
imul
add
in
loope
xchg
fidivrs
cmp
sub
mov
icebp
cwtl
stos
pop
movups
jp
fs
xor
mov
xchg
lcall
pop
xchg
aaa
fwait
clc
jecxz
sti
xchg
mov
jmp
das
addb
xchg
adc
push
test
jle
jmp
xor
push
inc
cmp
bound
push
lods
add
dec
sub
mov
lahf
adc
mov
daa
fucom
test
cltd
cli
ret
icebp
divl
or
andl
jle
lret
inc
loope
jbe
sti
or
das
adc
or
fnstsw
in
jmp
into
fwait
ror
mov
adc
xor
pop
mov
lret
xor
mov
out
nop
inc
sahf
and
mov
enter
xor
fstp
ljmp
xor
loop
mov
adc
inc
pop
movsl
and
push
xor
push
mov
push
cmp
inc
enter
add
pop
insl
sahf
and
ljmp
pop
sarb
rclb
inc
push
jnp
cmp
dec
mov
mov
js
cmp
pop
mov
mov
pop
movsl
shr
aaa
xchg
arpl
sbb
mov
sbb
mov
gs
and
xorb
mov
lcall
push
daa
adc
cmp
shlb
inc
sbb
and
bnd
sti
mov
pop
add
adc
mull
imul
mov
pop
ljmp
testl
mov
xchg
and
dec
andb
cmp
daa
lods
jb
repnz
mov
ret
pop
ret
xchg
jo
cmp
mov
fnstcw
sahf
je
push
fwait
sub
sar
cmp
cmpsb
xchg
iret
repnz
and
jb
jno
dec
lret
sbb
mov
dec
fistl
sbb
mov
inc
sub
out
xlat
push
add
cmpsl
inc
sbb
push
fs
adcb
or
std
sbb
into
shlb
xchg
rcrl
pusha
jg
xor
bound
sbb
mov
mov
scas
aad
test
add
aad
mov
fbld
mov
mov
andb
iret
out
cld
cmp
sbb
sub
out
test
or
cltd
inc
cli
jno
loop
mov
push
outsb
fadd
pushf
pop
mov
jmp
xchg
outsb
clc
adc
and
cld
or
leave
in
jge
dec
lock
jbe
inc
in
jmp
sub
ljmp
adc
mov
inc
es
jmp
inc
sahf
shll
cmp
push
cmpsl
mov
loope
or
fbstp
outsb
mov
test
packsswb
and
dec
cmp
iret
inc
dec
jg
js
mov
push
push
je
mov
pop
mov
jg
movsb
aad
hlt
icebp
lret
sbb
add
aas
scas
dec
xchg
nop
push
add
xchg
aad
mov
push
es
mov
and
pop
sahf
movsl
in
pop
inc
outsl
pop
cwtl
mov
dec
push
mov
push
stos
push
test
adc
xchg
popf
sbb
sub
mov
out
adc
jl
xchg
cmpsb
and
je
sti
out
test
enter
mov
pop
and
pop
loopne
scas
mov
into
nop
cmp
cmp
push
add
or
test
cmc
sub
imul
sbb
out
aaa
lret
add
iret
mov
lahf
stos
arpl
clc
lods
cmp
stc
cmp
and
sub
jbe
sub
jge
inc
add
pop
cmp
inc
push
mov
push
pop
shlb
add
negb
clc
shll
dec
sub
pop
inc
pop
rol
mov
pop
push
mov
push
fcmovbe
popa
and
push
sub
sbb
mov
cmp
jae
sub
pop
daa
lods
push
inc
jl
dec
cmp
ds
cmc
jae
sub
in
jns
xor
es
cmpsb
ret
test
in
or
out
rcll
xorb
in
outsl
push
popf
rorb
cmc
push
test
adc
mov
lds
jae
mov
xchg
lret
inc
jmp
lahf
xchg
arpl
subb
imul
dec
cmp
ret
ret
pop
incl
xor
frstor
sub
lock
outsb
pop
jmp
mov
jecxz
mov
adcb
dec
mov
cmp
aaa
adc
push
cltd
adc
xchg
subl
pop
es
pop
mov
push
aam
fcoml
adc
push
inc
test
stos
cmp
push
outsb
insb
mov
mov
test
jns
lret
js
jb
pop
fcompl
push
cli
stc
jge
and
sbb
fs
lcall
in
setns
repz
add
and
fs
imul
mov
xchg
fnstcw
jae
jl
mov
popf
mov
aam
ss
fcompl
push
push
pop
mov
push
xor
aas
repz
repz
cmc
rcll
lahf
lds
cs
jnp
stos
lcall
and
sub
cwtl
push
sub
mov
lret
mov
and
hlt
fisttpl
add
mov
sarl
sub
fimull
push
mov
push
je
mov
add
repnz
cmp
mov
xchg
mov
stos
incb
add
popa
lds
pop
push
and
pop
fidivrl
push
or
inc
cwtl
lods
loope
dec
call
insl
sbb
mov
iret
mov
jns
daa
xchg
int3
mov
fwait
or
jbe
cmpb
cmc
push
fs
push
lahf
xchg
ror
shlb
pop
pusha
scas
ret
into
leave
out
push
mov
andb
repz
jl
addl
or
les
scas
jmp
out
int
and
sub
add
and
jg
jg
icebp
xor
push
inc
dec
mov
mov
outsb
in
pusha
push
fsubrs
subb
push
in
es
add
mov
inc
iret
fldcw
jle
das
adc
data16
pop
clc
dec
stos
loope
rcrl
imul
mov
xchg
mov
push
jo
cmpsb
xor
test
ja
out
and
add
cmpsb
mov
inc
jbe
les
or
aad
or
and
aas
dec
sub
dec
xchg
and
inc
cwtl
mov
gs
mov
xchg
sti
and
or
pop
iret
inc
leave
or
or
enter
cwtl
sbb
gs
aaa
cmpsb
dec
inc
dec
mov
push
negl
aaa
rcll
pusha
push
xor
scas
inc
mov
ja
inc
mov
jne
pop
scas
ss
lds
cmp
sbb
mov
int3
dec
jbe
cmp
fucomp
pop
data16
pop
rcrb
std
sub
lds
lahf
out
xor
add
push
dec
cmp
hlt
in
addr16
mov
cmpsl
sbb
jns
dec
fsubrs
cmp
iret
sbb
mov
add
add
lcall
lds
leave
lcall
out
fmulp
ret
xor
fldl
sbb
inc
clc
mov
jmp
sub
arpl
add
sbb
mov
out
ret
icebp
js
add
inc
call
or
xor
or
mov
incb
or
add
mov
pop
cltd
inc
data16
loopne
mov
popf
insl
xor
movsb
scas
cmp
mov
cwtl
clc
ret
adc
arpl
lods
lods
pop
mov
insl
mov
movsb
insb
mov
ret
test
mov
fstl
sub
inc
dec
jmp
pop
inc
dec
into
cli
add
sbb
into
lds
adc
scas
push
ret
mov
xchg
movl
insl
dec
lcall
mov
out
push
int3
fwait
adc
dec
sub
cs
loope
sbb
and
lahf
sbb
bound
mov
nop
or
xchg
jb
add
xchg
pushf
push
jecxz
fisttpl
fdivs
mov
aad
mov
or
jae
dec
mov
mov
data16
pusha
mov
pop
xor
adcl
addr16
and
nop
adc
cmpsb
sub
pop
nop
jmp
ss
or
subl
mov
loopne
lea
mov
mov
fldenv
lods
adc
xlat
cmp
mov
xor
aad
stc
fptan
xchg
adc
scas
lds
fwait
lods
or
add
rclb
int
mov
xchg
xchg
clc
mov
push
ret
pop
mov
dec
lock
cmp
jbe
fmuls
imul
ljmp
mov
ss
js
fcoml
pop
test
push
aam
dec
test
jno
mov
scas
test
pop
xchg
jle
movsb
add
test
adc
test
cmp
xor
je
push
adc
inc
call
mov
subb
insb
arpl
mov
add
add
mov
mov
icebp
lods
fs
xchg
sub
jne
jge
sbb
in
cli
in
and
pop
fs
xor
xchg
dec
dec
jg
mov
lods
and
jne
pop
sub
fstl
inc
dec
and
hlt
pushf
mov
inc
xlat
rcl
arpl
mov
pop
ret
sub
rcll
movsb
insl
fmuls
in
popf
stc
xor
ds
mov
test
cltd
aad
add
or
lret
bnd
inc
cmpsb
imul
call
jne
std
pop
call
ds
stos
xor
popf
or
pop
loop
add
sub
and
nop
lret
aad
fnstsw
and
xor
in
jae
adc
jge
pop
xchg
lahf
and
pushf
stos
or
dec
jmp
mov
mov
adc
addl
jo
ret
mov
xor
and
es
arpl
mov
mov
pmulhw
and
call
lods
xchg
dec
ds
jge
adc
loopne
pop
and
adc
mov
cmc
addr16
hlt
jne
imull
inc
loop
xchg
inc
sbb
xlat
lods
notb
and
mov
sub
mov
aaa
mov
xchg
sbb
push
aad
je
xor
in
inc
add
cmpsb
adc
sbb
in
insl
jae
xchg
cltd
xlat
push
fcompl
push
incl
sarb
xor
mov
dec
je
pusha
xchg
imul
popa
cs
imul
clc
push
lret
xor
cmp
fs
rcrb
and
pop
stos
insl
pop
pop
stc
xchg
jmp
xchg
inc
cmpsb
adc
movsl
pusha
xchg
mov
jg
push
lret
fnstenv
fdivrs
in
inc
repnz
push
xor
sar
xor
xor
xor
push
or
xlat
push
pop
setbe
fstpt
push
dec
adcb
es
and
inc
notb
aas
insb
push
ret
shrl
xor
sbb
inc
out
popa
pop
xor
mov
fucomi
lods
pusha
scas
shrl
dec
sub
and
mov
xor
int3
les
addr16
mov
jp
mov
shrb
xchg
push
push
in
cmpsb
push
clc
mov
ret
vcvtpd2psy
iret
sarl
out
in
loop
pop
lods
or
sahf
dec
jae
lock
call
pop
jbe
sub
hlt
inc
mov
ret
sub
ret
pop
mov
daa
pop
lahf
popa
mov
decl
adc
pop
pop
inc
mov
repnz
jp
in
dec
lods
xor
pop
mov
loope
mov
push
out
xlat
pop
addr16
cmpsl
lea
icebp
fldenv
fs
call
sub
repnz
jae
pop
test
mov
mov
iret
ret
dec
sti
insl
bound
lret
cltd
aas
out
enter
popa
stos
sbb
into
repnz
je
and
inc
adcl
sbb
aam
cmp
js
clc
into
sub
mov
mov
jecxz
sti
inc
fcomip
mov
dec
add
cmpsl
shlb
and
mov
in
loope
shl
ret
nop
inc
pop
fwait
mov
sarl
int
push
pop
mov
ret
mov
jmp
call
ret
loope
pop
sbb
xor
inc
add
sbb
adc
jle
shl
mov
mov
xchg
adc
mov
mov
imul
ror
lods
cmp
and
mov
mov
mov
jle
cli
jge
aas
pop
xor
inc
sbb
pop
mov
int3
jecxz
mov
std
mov
outsb
fcmovb
mov
loop
fistl
cmp
outsl
les
adc
adc
ljmp
or
pop
loopne
xchg
rorb
cmpsb
inc
add
int
jb
pop
inc
xor
cld
jle
outsl
or
loope
imul
mov
loopne
pop
cmp
mov
jb
iret
jecxz
cli
jo
es
rcll
pop
mov
pop
jnp
jns
mov
outsl
scas
pop
rclb
cmpsl
mov
xor
pushf
pop
bound
lea
pop
sbb
and
sub
xchg
push
ljmp
mov
mov
stos
jmp
test
sbb
push
jns
xchg
and
insl
inc
insb
fnstsw
das
repnz
mov
lcall
dec
ret
jmp
add
xchg
xor
icebp
sbb
adc
adc
shll
mov
loope
add
push
shrb
sti
aas
sub
ficompl
push
push
mov
stos
outsl
sub
mov
fstps
inc
rcl
xchg
sbbb
pop
adc
and
cmpl
shll
in
and
decb
es
subl
test
enter
mov
sahf
icebp
adc
icebp
fadds
push
movsl
mov
lahf
ret
loope
jae
mov
xchg
outsb
mov
pop
adc
mov
aad
jge
jmp
adc
fwait
test
xor
ljmp
stos
and
in
mov
mov
daa
in
test
jb
dec
pop
idivb
mul
fs
fsubr
mov
outsb
ficoms
sub
clc
test
int
pop
movsl
repz
cmp
sbb
xchg
xchg
roll
sbb
mov
push
test
push
mov
pop
rcll
mov
mov
xchg
mov
adc
cwtl
in
cmp
add
dec
or
and
or
loop
pop
cltd
popa
xorb
adc
enter
lahf
sub
sbb
fisubl
int3
adc
gs
sub
ret
movsb
lock
popa
cmp
out
dec
push
xchg
test
sti
test
mov
movsl
jecxz
std
push
jae
cmp
jb
hlt
sarb
or
cld
adc
call
sahf
outsl
sti
mov
std
arpl
es
jmp
idivl
outsb
fisttpll
mov
js
filds
cmp
xchg
fistl
jecxz
xchg
nop
inc
call
int
jge
mov
mov
sub
pop
push
inc
pop
sbb
mov
mov
mov
push
pop
rcpps
dec
cmp
cmp
mov
or
mov
jl
xchg
sub
inc
cli
ja
push
aaa
fsubr
jns
sub
or
push
repnz
mov
call
push
sti
xor
push
jmp
jmp
mov
cmp
add
out
stos
rcl
lcall
xchg
xor
bound
jmp
fdivl
shrl
clc
bound
cmc
push
adc
mov
add
jmp
repnz
repz
popf
cld
idivb
pop
push
xchg
aaa
mov
notb
fwait
mov
pop
push
cmp
lods
fcoms
cmp
jle
pop
iret
xchg
push
push
and
mov
sbb
mov
pcmpgtd
ret
add
xsha256
cmpsb
aam
sbbl
mov
ja
fcoml
das
popa
jno
or
jg
gs
pop
adc
icebp
jns
jae
cmpsb
xchg
and
ds
movsb
jg
adc
inc
rcr
sbb
adc
cmp
xor
fisttps
lahf
addr16
push
popa
xor
nop
les
mov
inc
roll
mov
cmpsb
clc
mov
movsl
or
add
leave
negl
add
mov
dec
jmp
rcr
push
pop
push
gs
cmc
rcrb
jbe
movsl
mov
fcmovu
xchg
xchg
xchg
dec
mov
pop
lcall
cmp
jmp
xchg
jnp
dec
jmp
les
mov
ja
fadds
rcl
and
daa
gs
cmp
mov
push
je
inc
jo
push
out
inc
insb
addr16
dec
ljmp
rolb
lret
scas
cmp
outsb
btc
iret
sbb
push
mov
dec
xchg
mov
cmp
stos
sbb
ds
lcall
out
jl
mov
and
mov
ret
test
in
cmp
lret
jbe
push
out
jle
lock
adc
mov
sub
outsb
out
cmpsl
test
xchg
inc
lahf
int
xor
xorb
add
jno
pop
dec
outsl
fisubs
cmc
shlb
std
cmp
push
les
ror
mov
add
aas
push
or
outsl
inc
into
adc
aam
or
bnd
cltd
sub
xchg
xor
add
xchg
dec
popa
mov
mull
cmp
ret
cld
push
into
dec
mov
adc
cmpsl
sbb
repnz
mov
push
into
cmpsb
sbb
movl
inc
sub
aaa
es
lea
icebp
add
lahf
test
je
and
jbe
fstps
cmpsl
pop
movsb
scas
push
pop
fstpt
clc
mov
lea
jb
enter
fisubrs
aaa
cmp
cmp
shlb
fsub
rclb
popa
imul
mov
mov
movsl
insl
test
lahf
movsb
push
xorl
dec
and
or
aaa
or
inc
dec
push
sbb
push
lods
jae
xchg
dec
in
add
inc
insb
adc
repnz
mov
rcl
sub
sub
mulb
ljmp
les
repnz
in
sahf
mov
inc
test
icebp
push
jmp
loope
mov
dec
shll
push
icebp
into
jle
push
jnp
lds
cmp
dec
mov
lahf
jae
rolb
and
jo
inc
xor
jne
ret
xlat
jns
insb
sti
pop
mov
loopne
sub
lods
jae
mov
pop
stos
imul
dec
mov
pushf
hlt
xchg
jge
ds
push
cmpl
pop
cwtl
and
push
sarl
out
dec
push
xchg
adc
popw
ja
lods
add
jmp
push
add
aas
push
push
sub
mov
jae
outsl
out
stos
mov
popf
cld
add
pop
pop
jno
sbb
xor
cmp
mov
bound
fmul
xchg
sahf
mov
bound
fisttpll
stos
push
dec
sbb
jmp
cli
add
jg
enter
call
push
pop
mov
push
adc
mov
adc
xchg
ja
mov
dec
test
pop
dec
in
cmp
in
jle
xchg
cmp
insb
and
in
loopne
push
add
jle
push
sarb
sub
imul
cmp
adc
cwtl
jl
insl
jl
inc
mov
mov
std
push
pop
repz
push
mov
xchg
ret
js
jne
cmp
jmp
push
test
mov
in
movsl
hlt
dec
lods
push
jl
rcrb
addr16
mov
xor
jle
rclb
xchg
int
mov
mov
jo
push
sbb
mov
add
fisttps
mov
das
ds
aaa
pop
fsubl
into
push
mov
cmp
push
cmp
addl
cld
or
xor
xchg
push
mov
mov
dec
xlat
fbld
out
or
popf
xchg
pop
xchg
sbb
sub
into
sahf
les
jp
push
scas
cmpb
pop
cmc
lds
and
add
int3
push
dec
fisubrl
inc
outsb
out
test
adc
test
out
std
pusha
loope
cmc
or
add
xchg
or
cmp
mov
test
test
sub
leave
or
mov
sarl
sbb
pop
ret
pop
je
lock
pop
mov
je
fs
loopne
lds
out
mov
cmp
cmp
xchg
xchg
adc
dec
es
aam
xor
sbb
fdivs
aaa
xchg
add
jb
push
dec
pop
mov
xchg
mov
pop
jl
or
add
push
fldcw
je
cmp
push
mov
dec
outsb
bound
test
mov
lret
fdivl
inc
aas
pop
mov
inc
cmp
movsl
out
mov
mov
data16
lret
gs
adc
test
lcall
pushf
movb
es
push
xchg
lret
imul
in
jnp
fucomp
adc
je
inc
data16
loop
test
dec
add
and
dec
shlb
or
xor
test
sub
imul
mov
mov
or
pushw
das
jl
sbb
sub
lods
jg
jmp
pop
inc
cmpsl
and
clc
jge
rolb
das
push
or
ljmp
mov
or
mov
rolb
movsl
add
adc
mov
ret
add
lret
rcrb
cli
dec
mov
subb
push
jns
xor
add
aam
add
pusha
es
mov
into
test
sub
or
mov
mov
sahf
repnz
icebp
pop
jecxz
in
rcl
stos
fstps
int3
fcoml
test
xchg
rorl
in
push
push
adc
cmpsl
mov
mov
dec
not
adc
xchg
aas
jmp
insb
lods
inc
shlb
js
lcall
add
or
pop
insl
and
stc
lret
leave
cmpsb
jbe
loopne
aas
in
jg
outsb
jge
int3
sub
les
jno
mov
jbe
mov
arpl
push
hlt
aas
sub
lods
mov
test
das
popl
es
push
ljmp
ret
dec
lds
dec
mov
cs
and
dec
mov
imul
push
sbb
mov
mov
sub
neg
in
push
cltd
mov
icebp
cmp
jle
and
mov
jmp
pop
push
push
push
push
in
rcrl
cmpsl
sti
movsl
sahf
inc
loopne
popa
inc
gs
in
loopne
jbe
std
gs
sub
pop
shr
lods
les
xor
cmpsl
jnp
ret
adc
mov
xchg
dec
andb
xor
lea
add
jecxz
frstor
fucomip
inc
repnz
call
xchg
dec
mov
xchg
ficompl
fwait
sub
aam
mov
enter
insb
rclb
fdivrl
outsb
test
sbb
dec
or
jg
dec
addb
or
sbb
pminsw
outsl
dec
add
sbb
lahf
cltd
push
aas
cltd
loopne
adc
jo
out
jg
xor
jl
dec
ret
sbb
ss
mov
dec
mov
cmp
inc
mov
cmp
movsl
sub
in
jbe
sub
insl
in
mov
sub
add
jl
inc
imul
data16
es
das
subb
insl
cmc
stos
data16
aad
and
or
jecxz
lods
pop
movb
movsb
inc
lds
and
aam
mov
push
pop
xchg
insl
std
jnp
mov
dec
pop
js
xchg
pop
test
and
shlb
and
gs
sbb
inc
lods
inc
push
mov
jg
sub
cmpsl
pop
cwtl
cmp
mov
dec
push
imul
or
popaw
aam
and
lds
jecxz
and
test
lock
mov
pop
aaa
lret
call
sarl
add
cmp
mov
jb
ds
test
stc
xor
orl
mov
scas
mov
inc
xchg
sub
add
push
and
push
jg
mov
inc
sbb
xchg
idivb
push
inc
push
lcall
mov
stos
and
cmpl
andnps
dec
rorl
xsave
push
xchg
lods
lret
xchg
jg
scas
mov
and
sbb
ficoms
ljmp
sub
shlb
inc
push
sbb
adc
test
test
int
leave
sub
mov
jns
adc
or
cwtl
subl
sbb
inc
cmp
xchg
pop
in
icebp
fcoml
xchg
inc
xor
adcb
mov
cltd
pop
xchg
push
ret
dec
out
jg
xor
fucom
mov
mov
into
in
inc
cwtl
push
stos
xchg
cli
out
into
jle
ss
ja
mov
mov
repz
ja,pn
rclb
add
and
xlat
mov
popf
in
xchg
xor
imul
insl
inc
and
push
aam
das
mov
jge
push
in
fwait
mov
dec
int3
fmul
test
jno
fsubrp
pop
repz
dec
xchg
dec
shr
in
hlt
outsl
inc
jmp
inc
int3
addr16
stc
mov
mov
or
fs
arpl
movl
jns
sahf
mov
sbbl
jb
in
cmpsb
mov
or
inc
inc
sub
ficoml
pop
adc
nop
sbb
in
push
insb
jg
call
jl
lret
ja
jp
sbb
nop
sub
push
outsb
mov
add
push
jp
pushl
dec
aas
xchg
out
push
insb
add
jae
ret
cmp
push
popf
adc
jl
dec
cmp
xchg
in
add
mov
arpl
mov
mov
add
stos
inc
fs
or
fnstsw
out
xchg
inc
sbb
sub
or
and
or
sbb
jns
dec
movsb
lock
adc
push
and
dec
ss
lds
stos
insl
push
iret
cmp
jmp
test
cmpl
push
pop
addr16
in
decl
in
push
iret
sub
jmp
cmp
xchg
pusha
ds
hlt
cli
cmpsl
inc
push
or
inc
mov
push
stc
lahf
push
es
repnz
add
and
cmp
inc
add
clc
sub
sbb
pop
shll
jo
ja
or
mov
sbb
jb
dec
psubusb
out
sahf
sub
dec
lcall
pop
fadds
or
rcrl
loopne
lcall
push
jns
addb
out
in
int3
mov
in
cmp
test
xchg
fs
lods
inc
jb
jle
push
cmp
xchg
sub
mov
xor
andl
les
call
sub
sti
pushf
mov
add
in
sub
arpl
lret
mov
pop
scas
push
sbb
sub
and
enter
push
add
jp
push
mulb
arpl
or
mov
aad
test
dec
adc
addl
fimull
or
push
lea
mov
cwtl
lods
push
pop
stc
jmp
fnstsw
addl
xchg
push
adc
lds
rolb
rorl
cwtl
frstor
rcr
repnz
mov
pop
or
push
insl
out
push
pop
mov
lock
mov
repnz
dec
fcmovnu
xor
fimuls
fbstp
imulb
call
push
fbld
sbb
inc
icebp
pop
aas
jo
cmp
jl
pop
or
mov
dec
mov
out
push
fistpll
test
dec
sbb
inc
sbb
jns
add
outsb
add
aaa
outsl
mov
cltd
push
or
movsb
xor
outsb
aad
xchg
divb
add
roll
xchg
or
sub
fdivs
repz
sub
ret
sub
aas
dec
insb
call
movsl
cwtl
mov
pop
scas
pop
sarb
clc
mov
ljmp
nop
fcoml
sub
repnz
jle
imul
clc
xchg
lea
sbbl
jo
fidivrl
adc
mov
dec
cmp
inc
mov
enter
pusha
aaa
mov
in
mov
mov
movsb
mov
inc
cltd
jbe
imul
cmpsl
mov
add
popf
lods
jb
sti
not
enter
cs
enter
in
out
lock
xor
loopnew
or
jmp
xor
mov
mov
sub
addps
imull
jae
jbe
xchg
lods
mov
movsl
mov
lret
jo
aad
fidivl
mov
mov
mov
mov
cmpsb
jns
int
pop
add
xchg
pop
fists
xchg
stc
fnsave
xor
insb
or
rol
insb
push
pop
ror
xchg
mov
lret
inc
dec
fstpt
sbbl
test
inc
test
fbld
mov
lret
pushf
loop
incb
adc
sub
decl
sbb
stc
cmpsl
scas
inc
sub
mov
xchg
sub
je
out
jnp
mov
mov
pop
out
jl
out
pop
in
out
or
fldt
scas
mov
dec
sub
xchg
insl
notb
ljmp
sub
pop
pop
scas
test
pop
test
push
jl
leave
sbb
cmpsl
and
jno
ror
sarb
xchg
aad
fdivs
add
pushf
fucomi
push
xlat
or
in
mov
sbb
cmpb
dec
int3
and
push
iret
lock
outsl
push
movsl
mov
xor
mov
pushf
push
mov
pop
push
xchg
js
mov
ror
je
sub
iret
xchg
cmp
int
test
adc
fnsave
cmp
stc
sub
mov
jnp
mov
jns
dec
jae
in
cmp
scas
push
dec
outsb
jns
nop
fmul
popa
pop
cmc
rorl
jecxz
das
mov
mov
add
mov
ret
ficoml
push
mov
cmpsl
fcoml
out
or
out
jae
jp
add
addr16
cmpsb
fsubrl
addr16
test
pushf
sub
out
ret
or
rorb
mov
add
xor
and
mov
aad
pop
adc
scas
cmp
lods
scas
mov
push
dec
pop
cld
imul
outsb
push
in
mov
inc
or
inc
mov
pop
pop
mov
mov
dec
shlb
lcall
adc
lcall
scas
lret
sti
add
jp
xchg
sub
cmpsl
cmp
imul
fnstcw
popa
xchg
xor
pop
xchg
les
arpl
inc
rcrl
mov
aam
imul
repnz
repz
and
xchg
sub
test
in
stc
add
pushf
ret
lods
jbe
cmpsb
fldenv
hlt
stc
into
push
add
fisubrs
push
mov
jno,pt
mov
sbb
push
gs
cld
jb
std
mov
negl
and
inc
inc
xchg
ljmp
xor
sub
outsb
sbbl
jns
enter
push
mov
and
pop
scas
enterw
orl
xlat
mov
loope
pop
xor
inc
add
inc
std
andl
mov
cmovg
xchg
sbbb
cltd
lret
lret
or
into
test
adc
out
xchg
out
mov
lds
xlat
pop
lods
js
dec
testb
xchg
mov
ret
int3
adc
fistl
jns
shrl
cmpl
mov
sbb
das
loope
cmp
sahf
fstps
bound
dec
test
adc
in
rolb
js
in
mov
pushf
out
mov
loope
icebp
test
cmp
notl
out
fdecstp
xchg
sbb
aad
inc
mov
mov
je
pusha
mov
cs
rcll
sti
mov
mov
roll
push
addr16
add
or
push
insl
jl
mov
sub
jl
pop
and
push
push
pop
sarl
jg
xor
jp
lock
fucomi
xchg
movsl
cli
cmp
ja
mov
cwtl
icebp
add
adc
and
sub
lods
cmp
bound
and
push
xchg
ja
sub
sub
test
xlat
sti
jnp
pushf
add
mov
rcl
mov
stc
enter
mov
cltd
roll
mov
dec
mov
out
lods
test
jge
jge
mov
fadd
dec
pop
daa
or
rorl
rcl
rolb
loope
pusha
test
pop
jb
or
cltd
aad
pop
push
sbb
mov
mov
pusha
add
adc
fbld
jecxz
push
xor
je
push
sub
sti
xchg
pop
aam
dec
add
adc
movsb
fildl
push
and
je
fildl
adc
xorl
fdiv
add
daa
andl
into
aad
das
push
cmp
adc
mov
clc
mov
lcall
mov
sub
and
std
add
cmp
fdivs
sub
inc
cltd
lock
addb
add
out
add
fstps
mov
pop
pop
pop
shlb
scas
sbb
int
aas
lds
ror
jg
adc
or
mov
in
sbb
sarb
and
stc
icebp
ds
fstpt
adc
rorl
rcll
lahf
shrb
jne
push
xor
fadd
call
push
out
jnp
inc
mov
xor
sbbl
lds
xor
pushf
cld
inc
mov
or
jne
pop
fadds
mov
cmp
les
roll
and
enter
mov
cwtl
ljmp
mov
or
adc
testl
inc
cmp
jno
jmp
sub
punpcklbw
cmc
in
mov
es
mov
enter
sub
in
sub
xlat
dec
mov
mov
pusha
loop
pop
add
jmp
push
in
cwtl
cmp
popa
cs
sbb
movsl
fsub
fildll
jbe
pushl
data16
fs
mov
sub
or
sti
or
rolb
aas
stos
mov
popa
sub
mov
pop
fcmovne
sub
jl
push
jnp
xchg
adc
addps
and
xchg
jg
push
stos
out
sbb
inc
jmp
aas
mov
sahf
subb
push
cmp
movsb
mov
dec
pusha
cmpsl
pop
ljmp
sahf
andl
jbe
shrl
inc
outsb
push
loop,pt
inc
testb
xor
jnp
lret
fistps
pop
mov
call
fmulp
test
cltd
add
jb
jno
xchg
neg
into
ja
push
inc
daa
inc
mov
movl
push
push
iret
pop
and
ret
pop
loopne
mov
and
rolb
jo
test
jmp
and
jb
or
pop
jg
les
push
mov
cltd
hlt
push
arpl
test
movsl
shlb
push
stos
lock
in
aas
sbb
in
lock
mov
dec
aad
inc
ss
imul
aaa
fwait
mov
in
es
xchg
inc
shr
mov
mov
lea
mov
sbb
cld
cmc
pop
pop
jmp
cli
and
mov
iret
pop
test
mov
in
outsl
aas
xchg
pushf
and
sbbl
loopne
adc
outsl
pop
and
push
push
sbb
xor
add
cwtl
xchg
add
ds
inc
sub
test
ret
cmp
mov
dec
fnsave
lock
addr16
ficoml
in
pop
adc
fstpl
icebp
out
mov
out
daa
push
sbb
fsubrp
push
pop
jecxz
pop
inc
dec
testb
jg
pop
mov
adc
sub
jmp
sub
mov
add
roll
iret
fldl
cmpsb
inc
inc
scas
or
pop
dec
in
das
lock
repz
adcb
stc
leave
ss
stos
xchg
lds
sub
mov
aas
pop
insl
push
add
shl
test
jle
shlb
in
dec
aam
mov
cltd
sbb
mov
jb
lcall
mov
pop
cmp
mov
xchg
jp
lea
sarb
mov
daa
loopne
inc
lret
xor
xchg
lret
mov
xor
hlt
cltd
xchg
xor
adc
dec
aam
cli
addr16
es
mov
add
push
aam
rcrb
mov
inc
push
addr16
push
popf
notb
add
bound
jle
sbb
jecxz
fwait
jl
cld
pop
add
push
mov
xor
dec
mov
inc
adc
ret
jno
inc
repnz
cmp
nop
adc
sub
fdivrp
cmpsl
daa
mov
push
jae
inc
push
aad
mov
enter
dec
or
jl
test
cltd
jge
sbb
addl
mov
xor
push
sbb
repz
sub
push
or
xchg
mov
ret
ds
push
push
lret
dec
pushf
inc
inc
sarb
cld
mov
xor
jne
call
fnop
cmp
pop
ja
mov
inc
mov
leave
sbb
enter
jp
scas
fsubrl
or
loop
movsl
stos
mov
cmp
incb
xor
jg
in
scas
scas
addr16
jae
pop
in
outsb
lock
call
out
insb
adcb
mov
scas
fisubrl
ret
mov
sbb
xchg
or
or
cmpl
daa
or
es
cmp
mov
insb
add
mov
test
faddl
mov
sahf
cmpsl
jae
mov
mov
pop
sub
lea
aas
test
ret
rolb
add
sbb
jo
jae
pop
mov
jbe
push
enter
xchg
loop
mov
mov
xchg
sub
mov
mov
cmp
jg
fnsave
loopne
pop
ljmp
push
cwtl
cmp
mov
je
push
sbb
mov
mov
aam
push
outsb
dec
imul
in
inc
push
mov
jb
pushf
xchg
fsts
add
dec
mov
sub
pop
mov
sub
jge
jae
pop
sbb
push
adc
cmp
jge
or
adc
jg
out
mov
nop
aas
frstor
mov
jne
mov
lea
xor
and
xchg
push
inc
sbb
dec
int3
fstl
outsl
sahf
dec
sub
popa
inc
mov
cmp
push
daa
fiaddl
or
orb
mov
shl
pop
xchg
cwtl
stos
shr
mov
jne
lcall
iret
call
icebp
maxps
inc
or
lods
jle
or
popa
inc
cmp
icebp
cmp
or
sbb
push
aaa
imul
add
pop
nop
dec
jae
ja
mov
popa
mov
push
adc
lret
lds
lea
push
mov
aad
mov
adc
pop
pop
adc
mov
lcall
cmpsl
test
and
enter
incl
int3
and
lods
jo
sub
data16
or
mov
jge
and
into
xor
pop
mov
leave
xchg
pop
movsb
pop
cmp
in
sub
dec
xor
test
jl
test
std
xlat
jo
push
aad
mov
je
push
pop
or
out
ja
sbb
sbbb
or
mull
pop
sbb
cmp
cmp
cmp
mov
lea
xor
je
js
lret
cmp
aas
out
popa
in
iret
movsl
cmp
outsl
adc
jno
das
das
cmp
imul
addl
mov
jns
sub
or
ja
lods
xchg
or
fs
pop
and
dec
lret
sub
aad
sbb
test
test
pop
mov
sti
popf
xor
inc
je
test
pop
jns
push
jae
outsl
xor
adc
cmc
add
mov
shll
shlb
adc
cwtl
adc
mov
lods
xor
or
scas
adc
hlt
in
es
leave
out
shrl
aad
adc
sbb
sub
movsb
sub
add
aad
dec
jno
fdivl
jp
xchg
fs
lds
sub
pop
mov
pushf
sub
sub
mov
mov
pop
loopne
aaa
lahf
xchg
lea
jecxz
fcomp
test
mov
iret
mull
mull
cmpb
fcoms
or
pushl
pop
jge
mov
jbe
loope
or
and
mov
inc
xor
add
in
jo
pop
stos
jp
stc
push
fucomp
pop
sub
rcl
mov
jnp
dec
cmp
daa
cmpsb
mov
sahf
add
ret
cmp
push
mov
ss
adc
cli
sub
mov
sub
xchg
scas
pop
and
addr16
dec
lret
cmpsb
pop
lahf
or
xor
inc
es
inc
push
mov
ljmp
je
fwait
call
std
lods
cmpsb
pushf
push
pop
cmc
inc
imul
lods
push
pop
daa
pop
pop
mov
lea
pop
push
mov
fdivs
xor
fdivp
dec
data16
jmp
adc
pusha
mov
cli
xchg
cmp
and
jne
gs
xchg
dec
pop
out
jl
or
lock
xchg
xchg
add
data16
inc
sbb
pop
pop
mov
push
push
loopne
je
out
mov
ss
cwtl
rcrb
je
jb
dec
cmp
cmp
adc
sub
int3
and
inc
in
out
std
jp
add
out
fldt
aas
fwait
push
xchg
mov
lahf
lret
pop
sti
in
cltd
lcall
int
popa
leave
inc
cmp
pop
inc
push
popa
roll
movl
sbb
test
dec
clc
out
mov
mov
jg
cmp
ret
daa
scas
in
insl
ds
test
adc
out
mov
pop
xlat
cld
iret
stos
ret
add
loop
mov
xlat
jae
negl
add
cmp
or
dec
daa
loopne
push
or
mov
add
dec
cld
cltd
std
xchg
sub
jg
add
stc
clc
sar
dec
adc
mov
dec
push
pop
xchg
inc
inc
dec
mov
addr16
sub
lret
pop
dec
arpl
cli
and
dec
pop
xor
js
add
jo
out
out
shll
arpl
cmp
jbe
inc
cltd
xchg
movl
add
gs
mov
jbe
xchg
lcall
outsb
out
cmp
popa
out
cmpsb
dec
loope
push
popa
pop
push
xchg
subl
pop
push
jl
push
fdiv
enter
dec
jmp
iret
jae
xor
cmpsl
sahf
mov
push
mov
gs
dec
dec
sub
push
xchg
inc
inc
mov
out
sbb
push
sub
mov
mov
outsl
aas
aam
pop
mov
lods
xchg
mov
sbb
aam
sahf
xchg
inc
pop
and
leave
push
popf
leave
or
fcmovnbe
push
scas
lods
sub
outsb
jl
das
pop
and
xor
pushl
mov
push
cld
sbb
mov
out
inc
daa
add
sbb
das
mov
mov
test
ret
imul
inc
cmp
les
hlt
jp
or
fwait
ss
out
fbld
push
mov
mov
daa
jne
fs
mov
sbb
cs
mov
dec
rclb
sub
int3
fisttpll
shrl
sbb
xchg
fldenv
and
test
xor
data16
mov
repz
or
mov
mov
dec
outsl
out
repnz
icebp
into
lcall
xchg
aaa
js
push
cmpsb
dec
aad
jno
mov
sub
les
or
jnp
xchg
testl
dec
sub
xlat
inc
dec
xchg
add
cmp
aaa
push
push
xchg
pop
cmc
mov
loope
cmp
or
stos
fnstcw
xchg
incb
outsl
mov
pop
mov
sub
cwtl
push
sbb
push
mov
xor
mul
pusha
clc
ljmp
cli
lods
dec
fsubrs
fucomip
jle
inc
add
sarl
or
fldl
cmp
cmpsb
and
mov
sub
imul
movsl
daa
xor
pop
test
push
sahf
dec
lahf
cmpsl
add
fwait
mov
aaa
aad
xchg
insb
jle
scas
cwtl
xor
loope
call
xchg
cli
sarl
aaa
lods
xor
push
orl
pushf
jns
movsb
mov
pop
jle
fisubrs
fucomp
mov
mov
push
mov
jns
pop
sub
xchg
lret
insl
aad
mov
movsl
enter
cmpsb
out
jns
mov
jns
push
mov
mov
sub
jne
cld
mov
push
push
scas
ds
pop
dec
je
cmp
mov
adc
fsubs
pusha
xchg
dec
pop
mov
loopne
iret
jge
xor
jp
in
leave
mov
mov
mov
fidivs
lock
arpl
dec
repz
cmp
je
jle
shlb
fisubl
bound
mov
stos
mov
push
pop
repz
ret
mov
in
inc
enter
fiadds
and
orb
or
das
fistps
mov
ljmp
mov
inc
xchg
frstor
call
add
mov
cli
lea
popf
rcrb
dec
dec
pop
ret
popa
xchg
inc
and
dec
imul
dec
sti
out
loop
xorl
push
fwait
mov
cmp
lret
dec
push
cs
cltd
cmpsb
jmp
scas
dec
add
mov
jae
cmp
in
lea
jp
adc
xor
cmp
add
jle
pop
shlb
daa
adc
cmpb
sbb
mov
ja
mov
sti
and
push
xchg
xor
add
xchg
sub
enter
cmp
mov
add
and
push
jp
xor
xor
lods
mov
stos
pop
icebp
fstl
roll
pop
jo
sbb
xchg
push
cli
jg
xor
das
xor
enter
and
sbb
in
sarb
inc
xlat
loop
ret
jmp
cli
sarb
adc
cmp
jg
xlat
lret
add
popa
cmc
xchg
push
mov
lods
cmp
push
mov
cmp
scas
xchg
out
jns
push
jbe
sub
pop
mov
mov
daa
xchg
mov
or
outsb
call
icebp
cmp
ds
sub
data16
sahf
mov
sub
test
jecxz
lret
jnp
mov
pop
jns
xor
ss
add
out
fisttpl
in
repz
sbb
movl
out
fisttps
or
or
cltd
in
or
aam
test
and
shlb
lahf
xchg
pop
and
out
xchg
test
mov
jle
cmp
int
or
jae
push
xchg
out
test
int3
push
jp
movsl
inc
sub
and
call
lret
inc
sbb
pop
cltd
mov
bnd
fsub
xor
dec
test
sub
call
jle
mov
inc
das
rolb
fcompl
jmp
imul
jmp
add
in
fwait
jo
inc
sub
push
icebp
sub
movsl
fs
aaa
das
repz
popa
cmpsl
fcmovb
in
sub
testl
xor
cli
or
xchg
cmp
dec
mov
push
xchg
dec
cmpb
mov
ds
sbb
jp
fisttpl
loopne
adcl
repz
mov
inc
jle
dec
fucomip
xchg
test
lods
in
fistps
sub
pop
mov
push
inc
orl
lcall
addr16
inc
mov
xor
pop
js
inc
sub
lret
cwtl
mov
mov
cmp
inc
inc
sub
adc
pop
loopne
into
mov
int3
and
jl
sahf
inc
fnstcw
mov
inc
call
into
pop
add
jns
xchg
in
stc
lret
out
pusha
fldlg2
rcrl
or
stc
dec
push
mov
stc
xor
lds
loopne
pop
lret
push
stc
shr
cmp
xchg
mov
repnz
das
jp,pt
add
and
sub
fldt
sbb
jmp
mov
sar
loopne
jmp
shlb
cmp
fadd
mov
xchg
insb
out
and
jne
xlat
aam
cltd
out
pop
pusha
xchg
nop
push
push
mov
push
mov
and
pop
dec
add
sbb
aad
or
sbb
mov
arpl
fcomps
xor
fld
hlt
stc
imul
sub
mov
push
cld
mov
mov
es
and
mov
sub
xor
sub
clc
lcall
and
sub
jbe
cs
xor
or
fwait
addb
jmp
out
inc
dec
mov
jle
test
repnz
es
sti
dec
lea
cli
fmuls
fnstsw
out
mov
rclb
xchg
in
cmp
ror
ds
lock
pop
push
orb
shlb
cmpb
lcall
mov
fsubrl
mov
testb
bound
inc
push
sahf
xchg
dec
xor
add
pop
sub
sti
sbb
scas
pop
adc
xchg
stos
mov
xor
inc
pop
adc
mov
or
mov
push
mov
or
xchg
test
mov
mov
cmpsl
pusha
ret
add
out
pop
mov
out
fstl
popa
add
or
pop
and
push
cs
cmc
cmovb
fmul
movsb
or
lcall
rorl
cmp
adc
popa
xchg
mov
mov
inc
icebp
and
repz
les
ja
mov
cld
xor
mov
or
repnz
sub
pushl
and
pop
iret
shrb
or
cmp
sub
inc
cmp
in
cmp
fisubrl
aas
mov
push
xor
jbe
fadds
pop
in
js
insl
xchg
dec
sub
lcall
jbe
shrl
das
adc
inc
insb
xchg
push
push
lods
adc
sahf
scas
pusha
cmpsb
inc
repnz
mov
sbb
push
popa
mov
stos
pushf
stos
cmp
and
dec
push
jb
pushf
push
movsb
sbb
in
pusha
jmp
cs
jl
test
mov
sbb
add
mov
jmp
lods
ror
or
shrb
movsb
test
and
mov
jp
ret
fs
stc
cs
sahf
popf
add
and
fs
jns
out
das
xor
jmp
or
or
mov
inc
hlt
and
push
data16
loope
push
gs
mov
sub
ljmp
add
in
mov
dec
les
js
cmp
lods
popa
inc
push
sbb
ds
add
loop
cmp
lcall
hlt
sbb
adc
xchg
mov
gs
pop
popf
xchg
call
ret
sub
xchg
std
std
and
das
or
mov
sub
push
stc
xlat
sbb
xor
cmp
hlt
stos
push
into
fisubs
mov
test
movsb
fldcw
sbb
shlb
lret
xchg
inc
sub
cmp
out
cmp
mov
jns
xchg
aas
ss
inc
push
sub
clc
enter
test
rcr
xor
jne
int3
adc
cmp
mov
mov
frstor
das
inc
push
outsl
addl
std
xchg
jae
inc
cmpsb
in
push
loopne
dec
xchg
push
bound
and
jno
in
push
xlat
push
add
jns
enter
hlt
arpl
mov
mov
and
push
sahf
jno
push
jp
add
jge
mov
insl
rorb
das
mov
cs
adc
in
jg
xchg
dec
fs
lods
lock
test
jle
loop
xchg
mov
adc
sahf
out
inc
movsl
js
loopne
jmp
push
lock
add
addr16
ja
stc
mov
pop
repnz
std
adc
push
mov
sub
das
cmp
adc
push
or
pop
mov
leave
movsb
fsts
ljmp
mov
xchg
scas
insl
lahf
add
imul
jmp
fldcw
mov
mov
mov
call
dec
dec
adc
cs
xor
cmp
xchg
jne
lock
flds
inc
cmpl
icebp
cmpsb
xchg
adc
lods
mov
cmpsl
sbb
cltd
sbb
scas
sbb
dec
cli
inc
in
jae
adc
out
jp
mov
test
mov
adcl
leave
pop
jp
fwait
mov
xchg
rolb
add
xor
push
jns
fcoms
out
jmp
mov
fisttpl
cmp
add
pop
xchg
mov
lret
add
insl
cmp
insb
cmp
ret
leave
rorb
call
es
mov
lock
adc
pop
stc
pop
in
int3
xchg
mov
sti
pop
out
pop
idivb
repnz
aaa
jle
or
push
insl
add
xor
mov
or
mov
jg
sbb
pop
dec
xchg
ds
gs
jmp
sub
dec
push
xor
arpl
notb
push
inc
repz
sbb
imul
into
or
rclb
xchg
mov
push
aas
arpl
fwait
mov
pop
je
pop
sub
pop
scas
push
xor
push
dec
inc
nop
cmc
fwait
jp
and
nop
enter
xchg
lods
push
test
or
cmpsb
cmp
test
xchg
mov
outsl
mov
jne
mov
inc
iret
popf
cmp
nop
adc
popa
lahf
xorl
pop
cltd
mov
lahf
xchg
lods
xor
movsl
inc
cltd
pop
sbb
sbb
dec
push
jmp
leave
jno
xchg
gs
jbe
jbe
xor
xor
lods
mov
dec
insl
daa
dec
lods
jmp
or
aam
pop
pop
cld
cmc
aad
push
mov
fiaddl
xor
mov
cmp
sbb
not
in
mov
dec
sub
stos
fstl
sub
jne
adc
add
xorb
push
jp
lret
lahf
dec
inc
jae
insl
call
sbb
out
arpl
lcall
outsb
pop
push
sahf
mov
jnp
fdivrl
jmp
lds
or
adc
jbe
xchg
ds
xor
push
cmc
jge
daa
shlb
sbb
add
cmpsb
xchg
mov
push
sarl
or
fcmovnu
sarb
dec
test
jno
lock
es
popf
mov
dec
movsl
jecxz
js
mov
lods
sub
stos
shlb
hlt
inc
leave
push
mov
lods
pop
mov
sahf
sbb
mov
stos
jl
jb
inc
adc
inc
rcrb
leave
pushf
pusha
shll
cmp
daa
xchg
loopne
xor
psrlw
adcb
push
out
and
stc
pop
adcl
jg
pop
fmul
addr16
adc
imul
xor
icebp
dec
add
scas
loope
push
push
fs
in
sbb
xchg
xchg
dec
xchg
lods
popa
popa
jbe
jno
dec
les
sub
pop
stc
int3
scas
add
mov
sbb
cmp
call
mov
jp
ficomps
insl
push
cmp
lea
jns
fnstcw
and
jne
or
mov
add
xchg
out
and
push
mov
in
add
cmp
test
mov
xlat
push
sbb
sub
fcmovnbe
mov
jl
dec
push
pop
xchg
jbe
rorl
jo
sahf
cmpsl
das
jo
sbb
mov
insl
mov
test
add
add
data16
mov
fstps
pop
lods
insw
xlat
es
cmp
in
dec
jecxz
sub
rcll
pop
inc
lcall
sbb
movb
gs
in
lds
push
push
xchg
dec
mov
xchg
mov
dec
pop
std
xchg
mov
jne
mov
dec
gs
pusha
lcall
mov
mov
dec
jge
stos
dec
cmp
frstor
xor
mov
inc
lds
fnstcw
pushf
add
dec
push
lret
cmpsl
sub
psubd
bnd
push
dec
jp
imul
and
rolb
loope
mov
dec
pop
cld
pop
mov
xchg
dec
out
out
jl
inc
call
gs
or
dec
aaa
mov
stos
aaa
nop
or
xor
xchg
xchg
ja
fmull
sbb
out
sub
fisubrs
add
dec
xchg
inc
cmp
fcoml
scas
insl
dec
faddp
sub
add
adc
sub
jbe
ds
ret
jle
xor
jne
sti
xchg
sarb
into
push
loop
xchg
movsb
cmpsl
mov
cmpsb
addr16
cmpl
or
add
mov
clc
enter
mov
pop
pushf
add
or
mov
mov
mov
test
mov
rcll
data16
push
push
push
add
adc
push
push
or
push
or
ss
jae
inc
divb
test
test
push
cmp
add
fwait
inc
push
loopne
insl
jmp
jmp
lret
jmp
fsubr
mov
fisttpll
inc
cmp
pop
pop
sbb
jmp
lcall
nop
pusha
cmp
mov
or
cmp
js
subb
aas
mov
arpl
jne
inc
sbb
pushf
sub
cmpsl
add
sahf
mov
fcoml
out
fildl
pop
sahf
mov
xor
or
adc
aaa
popf
inc
movsl
lds
loopne
andl
adc
lahf
fdivl
mov
cmp
and
dec
int
stos
and
leave
pop
sar
mov
mov
xor
in
jo
dec
adc
insb
mov
addb
sub
cwtl
add
xor
das
repz
and
jp
pushf
push
dec
and
adc
out
bound
inc
adcb
push
out
mov
xor
inc
push
inc
mov
push
fldt
clc
jae
gs
es
aaa
inc
xchg
xchg
xchg
popf
fidivs
add
enter
dec
add
sub
xchg
and
sti
xor
or
mov
stos
xchg
pop
push
mov
imul
inc
mov
outsl
or
or
mov
lahf
out
xor
vmaxpd
sbb
hlt
cld
lret
lods
cmp
jbe
jns
mov
push
popf
mulb
dec
inc
sbb
icebp
cli
ror
ret
lret
sub
adc
mov
xor
xchg
stc
leave
mov
fwait
sbb
clc
dec
ja
xchg
mov
leave
insl
orb
iret
jmp
xchg
icebp
cld
dec
aam
test
push
xchg
rorl
ret
sarb
test
pop
dec
testb
push
dec
test
cwtl
in
and
push
jg
dec
std
rol
fnstcw
movsb
fistpl
call
cs
sbbb
clc
inc
fwait
cmc
and
push
repz
jle
or
or
scas
add
in
fwait
mov
mov
cmp
pop
sahf
cmpl
notb
shll
aaa
dec
lods
xor
scas
mov
lea
lret
lcall
mov
add
lahf
push
imul
loopne
pushf
pusha
cmp
out
xor
sub
call
rclb
shll
jbe
dec
rcll
scas
pop
lahf
les
jl
orb
mov
fstpt
loopne
movsb
mov
das
cs
std
inc
xchg
or
cmp
xor
into
int3
lods
dec
test
inc
stc
and
lods
sbb
cs
ljmp
mov
inc
insb
lods
iret
or
cmp
cmp
pop
lods
adc
push
push
add
rcrl
adc
fwait
clc
cld
and
cmpsb
dec
xchg
ss
data16
fcmovb
rorl
pop
ret
fisubs
push
imul
sub
into
scas
jmp
pop
test
and
mov
xchg
xor
mov
push
push
or
mov
sar
roll
inc
dec
dec
std
pop
cwtl
leave
pop
or
out
in
test
push
inc
xor
loopne
sarb
sub
pop
xor
push
mov
hlt
leave
rclb
adc
test
addr16
inc
xor
xchg
nop
fcoml
dec
mov
ljmp
lods
push
xchg
or
add
mov
int
mov
push
xor
sti
les
xchg
mov
adc
lret
dec
sbb
jne
sbb
mov
daa
dec
xor
and
mov
cld
int
lahf
push
lcall
push
push
out
popf
lods
adc
js
pop
rcrb
push
mov
mov
loop
add
add
pop
rolb
cmp
bound
xor
and
mov
add
inc
mov
and
xor
fidivrs
scas
jnp
or
outsb
add
scas
push
mov
fsubr
adc
mov
out
jg
pop
sbb
mov
iret
fidivrl
add
push
cmpsl
pop
out
cltd
mov
into
push
fldt
xlat
fucomip
dec
or
call
push
fidivs
negl
cmp
insb
addr16
cmp
lahf
or
stos
lods
cmpsl
ss
or
and
push
mov
in
lcall
fildll
xchg
xchg
adc
mov
neg
mov
push
cmp
enter
aam
loopne
or
ljmp
add
cmp
mull
cmpsl
pusha
shlb
jg
nop
aad
insl
call
mov
inc
jb
and
xor
jo
imul
mov
push
in
imul
loop
mov
xchg
loope
pusha
fxtract
icebp
aad
dec
loop
inc
in
movsl
jae
xchg
pop
mov
ss
sqrtps
push
dec
cmp
adcl
shll
loope
push
repz
pop
pop
lret
insb
fisubl
fidivs
pusha
add
ret
xchg
push
push
push
xchg
into
ss
in
jge
iret
ljmp
cmovnp
imul
push
add
lret
push
mov
rcl
push
pop
push
push
frstor
push
adc
or
mov
xchg
les
es
fistps
push
fmull
xorb
sarl
jle
mov
sub
imul
lcall
mov
inc
push
mov
add
lcall
addr16
xor
cmp
loop
dec
mov
mov
sub
orb
add
xchg
pushl
lcall
add
andl
scas
add
fisubs
dec
pop
pop
xchg
mov
mov
pop
add
cmp
xlat
rclb
jno
mov
fldl2t
loopne
push
pop
fistpl
cmp
xchg
ss
mov
out
leave
movsl
inc
mov
repnz
test
xor
pop
pop
fcom
mov
add
lods
fdivr
and
or
data16
mov
sub
pop
push
aaa
pop
push
vpsadbw
mov
in
and
cltd
cs
loope
dec
adc
out
sub
ljmp
inc
dec
repnz
fisubs
aam
insl
push
mov
pop
call
sti
outsl
xchg
or
jae
cmpsl
imul
and
imul
mov
loopne
jge
jg
lods
aas
pop
push
add
inc
and
adc
jle
sti
xchg
pop
clc
jbe
pop
inc
xor
inc
inc
aad
and
pusha
rolb
adc
repnz
into
pop
or
sarb
push
fdivr
les
pop
sahf
flds
les
sub
mov
add
mov
popa
jmp
mov
cmp
cmp
sti
xchg
or
adc
and
add
mov
xor
jb
push
push
push
clc
push
mov
mov
cmc
cli
rcr
lods
aas
dec
lods
xchg
nop
mul
sbb
adc
lock
mov
lahf
xchg
gs
xchg
push
xchg
push
push
push
aas
mov
iret
daa
mov
test
mov
cmpsb
xor
imul
ret
nop
xorl
xor
call
push
jmp
jmp
addr16
loop
jp
movsb
mov
mov
movsb
mov
shrb
test
pushf
dec
mov
andb
push
in
imul
loope
stos
adc
imul
mov
stc
push
cwtl
and
add
mov
mov
cwtl
pop
adc
data16
jle
mov
xor
stos
push
sub
imul
xor
add
pop
adc
sub
adc
jmp
inc
orb
dec
push
les
jne
adc
lahf
lods
push
mov
jmp
mulb
sahf
push
sub
stos
xchg
push
sahf
mov
mov
iret
enter
mov
xchg
mov
leave
pop
in
ret
pop
rolb
add
loope
inc
sbb
je
mov
das
pop
in
mov
sub
jnp
cmpsl
out
int3
sbb
push
xchg
rcll
popa
sub
cmp
fldt
push
xchg
stos
cmp
sub
and
inc
or
cmpl
add
mov
cmc
cltd
leave
mov
adc
sub
loope
mov
mov
dec
push
int
mov
aam
jmp
jbe
pop
xor
out
push
and
movsb
and
ljmp
int
mov
nop
mov
leave
pop
mov
adc
lcall
repz
inc
mov
loope
les
scas
in
add
jne
add
xchg
add
push
adc
lahf
ja
roll
movsl
jmp
xor
mov
sar
nop
lock
ret
lahf
pop
inc
out
pop
roll
stc
sub
dec
movsb
aas
dec
and
popf
lret
pushfw
stos
mov
and
push
mov
cmp
mov
fadd
and
loope
fwait
add
cmp
movsb
push
movsl
dec
sahf
xchg
adc
mov
or
push
or
lock
push
int3
mov
cmpsb
and
cmp
hlt
jb
dec
xchg
sub
inc
add
aaa
pop
rorl
dec
xor
arpl
movsl
out
mov
cmp
lods
cmp
test
shl
jae
mov
jle
push
sbb
data16
or
ficompl
aam
lock
ds
mov
mov
divb
test
jl
hlt
enter
sbb
mov
popf
sbbl
loopne
and
xchg
cs
in
fst
popf
pusha
dec
scas
lods
xchg
push
cmp
inc
jl
je
fisttpl
sarb
push
cld
and
fdivrs
sub
sub
mul
sub
xchg
cmp
and
pop
rorb
out
fbstp
enter
popa
jge
or
jmp
ja
orl
fcmovne
lock
es
adc
scas
xor
inc
dec
mov
lods
in
mov
lock
mov
nop
push
ljmp
sub
dec
and
js
push
push
mov
mov
push
test
add
jecxz
xor
mov
mov
xchg
sub
xor
test
stos
xchg
mov
or
movsb
mov
daa
push
or
insl
cmp
jo
push
jno
enter
add
push
mov
adc
fildll
adc
or
sbb
cs
and
pop
pop
pop
inc
repnz
add
pop
adc
mov
mov
imul
cmp
insl
jmp
aaa
xchg
loop
out
push
cs
data16
jp
adcl
jb
call
fidivrs
imul
cmpb
sub
xchg
stc
pop
pop
lds
sbb
test
jecxz
rclb
scas
movsb
pop
stc
mov
jl
ja
sbb
pop
int3
sbb
out
and
xchg
mov
std
push
adc
mov
mov
outsb
fsubrp
mov
or
cmpsl
cltd
mov
mov
pushf
iret
sbb
mov
xchg
sub
stos
xor
mov
lret
sub
jb
movsb
pop
pop
fcmove
jp
std
inc
inc
shlb
repnz
xchg
sbb
pop
shl
push
xor
cmp
jmp
xchg
loopne
test
xor
xchg
xor
push
cltd
xchg
in
hlt
incb
movsb
enter
push
jg
dec
or
mov
lods
inc
adc
adc
fcoml
aaa
inc
add
push
lea
jo
pushf
pop
ds
je
sahf
pop
or
int
fs
mov
aad
in
stos
adc
loope
mov
mov
fisubs
jle
sub
xor
lret
addl
mov
inc
daa
jb
ljmp
mov
sbb
stc
popa
jg
fsts
push
mov
ror
loopne
ja
fdivl
enter
mov
icebp
out
or
and
cmpl
dec
test
stos
xor
cmc
test
lret
addr16
in
sub
fcomi
xor
fsubp
push
cmpl
push
testl
ret
nopl
xchg
mov
cmp
aas
cmp
push
imul
and
sub
mov
push
xchg
dec
cmp
jae
cltd
xchg
or
or
add
dec
rcll
inc
push
xchg
mov
xorl
dec
loop
in
bound
and
jae
test
pop
push
std
in
inc
scas
xchg
push
out
mov
xchg
pop
hlt
call
testb
xor
add
lock
loop
shll
jb
imul
fs
sub
mov
or
pop
inc
lcall
int
nop
or
cld
test
or
bound
fdivr
fwait
lods
arpl
mov
stos
icebp
mov
dec
xchg
xorb
cmovae
loop,pn
jns
fadds
xchg
lret
shl
or
jge
mov
dec
jle
cmp
xor
jne
call
mov
xchg
stos
pop
aaa
bound
mov
jb
jge
imul
jecxz
push
mov
add
xor
push
inc
or
inc
cmp
mov
pop
lret
jle
mov
les
insl
xchg
pushf
push
shl
fstl
xor
push
jne
mov
pop
fists
adc
nop
push
mov
insl
mov
mov
cmpsl
mov
fs
add
pop
js
adc
push
fsub
adc
pop
or
sbb
dec
loop
pop
push
jbe
clc
shrb
pop
divb
in
sbb
js
mov
and
mov
or
shrb
bound
movsl
xlat
mov
and
cltd
mov
add
fmuls
mov
lcall
cmp
in
jg
fisubl
ljmp
lret
ljmp
push
or
stc
mov
sub
cmpsl
frstor
les
cli
cmc
pop
pop
aam
and
mov
mov
imul
lock
jb
fcomps
call
dec
xchg
jg
shrb
dec
inc
scas
out
das
lods
inc
andb
addl
cmpsl
sar
xchg
sbb
iret
scas
xor
mov
into
adc
movsb
les
pop
dec
jl
xlat
jo
add
icebp
add
jle
push
das
push
push
jge
negl
xor
fnclex
add
lock
push
cmpb
pushf
scas
bound
dec
call
add
jmp
sbb
decb
inc
lret
dec
cmp
je
xchg
test
jmp
mov
fdivp
mov
jbe
out
mov
imul
sub
jnp
lahf
xchg
imull
flds
and
mov
ja
mov
scas
pop
or
jmp
jns
mov
add
movsl
fistpl
jecxz
mov
jle
scas
mov
push
sbb
rorl
loope
push
in
cmp
xor
push
add
xor
in
mov
xchg
jno
in
testb
daa
in
gs
xchg
into
les
jnp
rcl
sti
into
jle
test
inc
js
sbb
push
es
mov
push
mov
fs
es
push
pop
cmp
mov
mov
sub
popf
into
into
pop
adc
cmpsb
pop
popf
lcall
ret
sub
insb
das
jl
hlt
mov
fiadds
xchg
cmc
mov
xor
mov
jno
mov
fsubrp
popf
or
stos
mov
lcall
js
inc
adc
andb
and
bound
mov
mov
mov
cmc
or
add
movsl
lods
scas
cli
jno
add
mov
test
mov
sub
jae
jecxz
xlat
ds
out
or
jmp
ds
sbb
inc
cmc
mul
les
fpatan
lea
pop
mov
mov
std
out
fwait
bound
into
pop
xchg
inc
push
out
jp
jle
push
add
std
in
mov
inc
cmp
add
jb
insb
mov
ret
mov
repnz
inc
adc
inc
shlb
outsb
das
dec
cmpsb
fs
rcrb
cmp
fistps
jg
stc
sub
adc
inc
pop
sbb
pop
jp
mov
dec
jp
add
fldt
jbe
movsl
push
je
fmull
lret
lds
movsl
add
in
fnsave
mov
lcall
sbb
push
or
push
sub
jnp
aam
lods
adc
inc
or
pop
mov
shr
lods
cmpsl
pop
cmpsb
movsb
mov
or
push
inc
mov
jge
xor
sub
adc
mov
insb
cmp
xchg
js
shll
xchg
dec
and
loop
loop
mov
add
orb
push
ss
lds
mov
jo
cmp
adc
stc
push
out
outsb
int
pop
aaa
scas
es
aaa
fistpl
lcall
loope
lock
mov
push
aam
sbb
cmp
pop
inc
icebp
cmp
or
daa
fsubrp
lods
jge
or
das
lds
push
mov
xchg
jnp
sub
push
loope
xor
sbb
pop
stos
stos
push
pop
mov
fcoml
or
shl
std
jno
inc
or
out
repnz
jne
shrb
test
imul
outsl
inc
and
inc
xor
or
popa
out
mov
fs
jge
daa
notb
test
lret
mov
fs
adcb
sbb
pop
mov
jg
mov
dec
push
cmc
lds
cwtl
push
cmp
cmp
cwtl
cmp
outsl
outsl
addr16
clc
or
xchg
loopne
lahf
pop
shlb
mov
xor
sbb
lock
out
das
cmpb
cmp
sbb
jnp
hlt
sbb
inc
aaa
test
leave
cmp
mov
xchg
jmp
fbld
lcall
push
sub
mov
jo
cmp
es
cmp
clc
rclb
jmp
jge
adc
jae
cmpps
jne
das
mov
into
lret
cmc
dec
addr16
inc
xor
jge
jecxz
adc
stos
adc
jmp
mov
dec
shr
jg
or
and
push
dec
push
rcl
cmp
out
es
adc
fimull
cmp
lret
fcomp
inc
iret
pop
in
pop
xchg
push
sub
es
in
push
call
jg
aaa
pop
sub
ljmp
push
push
push
mov
nop
adc
cld
movsl
fstp
push
xchg
add
push
dec
push
add
or
pop
in
jb
cmp
adc
nop
aam
pop
test
xchg
mov
icebp
jb
inc
or
mov
jg
sti
leave
xchg
cmpsb
out
aas
mov
push
icebp
adc
mov
movsl
cltd
out
inc
xchg
lret
adc
or
jmp
mov
scas
and
push
jae
fisttps
dec
loope
pop
enter
scas
aad
xor
test
jo
in
pop
inc
or
jmp
xchg
dec
and
add
or
leave
pop
inc
ja
pop
movlps
in
pushf
cmp
adc
stos
mov
cltd
daa
test
in
adc
leave
cmp
mov
fcomps
shr
mov
repnz
and
mull
inc
movb
xor
sbb
out
or
pop
mov
add
pusha
call
xchg
pop
mov
mov
out
push
stos
mov
or
cmp
pusha
dec
in
repnz
movsb
mov
sub
pop
out
shlb
fs
mov
push
and
or
hlt
ljmp
dec
inc
xor
mov
and
aad
push
rcrl
scas
outsl
aas
hlt
popf
movsl
insl
and
add
xchg
in
mov
shlb
out
add
or
mov
cwtl
stos
push
pop
mov
dec
cs
jno
shr
xchg
mov
mov
mov
xor
mov
pop
push
stos
lret
inc
pushf
into
mov
out
cmpsl
jmp
pop
jg
mov
bound
mov
push
cmp
cmp
xchg
loopne
loopne
adc
push
adc
fmul
hlt
rorl
cli
xlat
aaa
lahf
mov
fs
insb
and
xor
sub
ljmp
xor
rcrl
rolb
push
ret
sbb
jne
mov
sub
scas
sti
fdivr
and
push
mov
or
icebp
sahf
jns
xchg
push
not
xchg
sbb
pop
cmp
push
je
mov
ret
iret
lret
adc
addl
cwtl
adc
push
ficompl
imul
fsubrl
push
pushf
popl
pop
sti
add
mov
pop
pop
aaa
aaa
movsl
xor
or
add
ficoms
xchg
or
sub
int3
outsb
icebp
mov
mov
bound
popw
daa
iret
mov
xchg
into
nop
ja
icebp
xor
sbb
test
mov
or
out
inc
xor
js
sub
mov
lcall
inc
lock
imul
mov
or
stc
mov
ljmp
int
fildl
pop
out
jl
jb
daa
ss
pusha
dec
adc
lret
jns
mov
push
fimuls
cltd
stos
mov
outsb
mov
push
call
mov
pop
jle
sub
pop
sbbb
jmp
iret
inc
mov
nop
enter
and
adc
push
cmc
rolb
and
adc
xchg
sub
enter
ljmp
mov
add
aam
pop
lcall
pop
push
xor
out
inc
mov
addps
sub
hlt
shrl
repnz
push
sub
xchg
xlat
jb
cmc
mov
xchg
or
mov
fwait
dec
scas
or
sti
or
dec
jae
imull
xor
dec
adc
call
cmc
cmp
and
insl
mov
jae
stos
jae
dec
roll
adc
xor
mov
push
ja
xlat
adc
ja
mov
mov
gs
popa
mov
jne
idivl
mov
cli
lds
mov
mov
and
std
mov
imul
in
sbb
and
push
ljmp
test
enter
jae
adc
mov
xor
mov
movsl
xchg
push
pop
jb
fs
add
mov
filds
xchg
sbb
adc
sub
repnz
paddw
push
jmp
jmp
leave
adc
rclb
ja
fwait
sub
pop
pop
jbe
shll
push
sub
jg
xlat
push
dec
cmpsl
decl
jns
mov
into
dec
arpl
jns
arpl
iret
mov
jmp
fucomp
lods
sbb
orb
test
imul
scas
push
push
dec
sbb
push
aas
inc
stc
das
xlat
jne
int
mov
dec
push
push
stc
jo
jne
pop
and
push
cs
push
or
fwait
or
xchg
mov
jle
push
pop
mov
mov
fmull
mov
jbe
push
stos
dec
ss
cs
cs
repz
and
cmc
mov
jne
cmp
shll
mov
lahf
inc
out
mov
bound
popf
fsubs
dec
pop
xchg
lahf
pushf
js
xor
lret
ret
leave
sub
and
adc
movsbl
jne
in
cmpsl
decl
ja
pop
data16
out
es
pop
or
hlt
imul
lret
fldenv
push
push
mov
jo
cs
xchg
ret
mov
sarl
push
push
cmp
sbb
jnp
lea
mov
add
mov
sub
shll
push
stos
les
adc
sbb
mov
sbb
pusha
sbb
testb
imul
xchg
sbb
bound
push
lret
ficomps
adc
sarb
imul
clc
repz
or
fcoml
arpl
shr
adc
insb
and
incl
subb
sub
mov
gs
lret
push
dec
movsb
iret
push
mov
jnp
adcb
nop
pop
xor
cmp
test
inc
xchg
imul
or
fabs
push
out
push
push
jb
aam
mov
mov
out
out
icebp
cmp
push
icebp
test
or
call
js
scas
cltd
or
and
ret
ja
ud0
push
xlat
lods
pop
or
shl
sahf
jg
popl
adc
out
fmull
stos
inc
xchg
and
cmc
rol
stos
lock
sub
inc
outsl
int3
inc
ds
dec
mov
jmp
outsl
je
hlt
jp
es
add
or
mov
bnd
roll
cwtl
xchg
dec
dec
jmp
dec
adc
cmp
jge
or
xor
cltd
scas
jl
add
cmp
incb
outsb
ja
xchg
stos
jecxz
mov
adc
insl
mov
adc
sbb
repnz
imull
pop
iret
jne
cs
push
lods
jo
ret
push
stos
into
int3
jbe
cmpb
popf
push
not
push
movsl
pop
cli
inc
outsb
xor
lahf
aas
fwait
mov
pushf
js
fdivrl
sbbb
test
insl
test
ljmp
push
sub
lds
fnstcw
xchg
fwait
pop
arpl
out
or
push
movsl
cmc
fsubrp
and
fimuls
or
data16
inc
pop
popf
lret
lcall
or
jg
in
fwait
xchg
pop
lds
and
push
std
lret
mov
cmp
jmp
cmpsb
cmp
test
loope
pop
aaa
test
xor
sahf
fwait
push
and
movsl
mov
addr16
sahf
xorb
sub
mov
mov
cwtl
sub
in
idivl
int
cmp
imul
jp
cmc
dec
dec
test
inc
adc
call
out
jo
mov
and
mov
dec
and
mov
cmp
dec
movsl
inc
aam
jnp
stos
outsb
lock
pusha
cmpsl
in
aas
nop
xchg
inc
jmp
jp
mov
jo
sbb
xor
rep
push
adcb
sti
jnp
repz
movsl
les
mov
pop
sub
xchg
roll
xchg
add
in
mov
mov
and
xor
fwait
pop
sbb
inc
mov
sub
out
aad
rcr
test
insl
add
push
pop
mov
jge
xor
cmp
mov
fs
jg
test
adc
pusha
les
int
popf
fistl
icebp
xchg
pushf
int
fs
out
pusha
test
mov
dec
push
fcoms
insb
scas
addr16
testl
in
outsl
clc
mov
into
cltd
je
mov
xlat
and
in
xchg
aaa
iret
inc
mov
jo
or
bound
fldl
out
pushf
inc
outsl
jle
jle
insb
hlt
add
xchg
dec
lret
movsl
mov
jg
jno
mov
jmp
jecxz
test
pop
mov
dec
inc
and
js
repz
push
inc
bound
pusha
mov
nop
in
aad
jbe
cmp
aaa
add
push
jae
cmp
cmp
es
movsb
and
xchg
mov
add
xchg
jmp
sti
dec
subl
xor
mov
insb
mov
cmpsb
adc
cmpsb
test
je
dec
addl
out
rorl
aaa
out
hlt
inc
shll
mov
lcall
mov
pop
ret
dec
add
aas
pusha
jbe
es
lret
outsb
test
push
mov
sbb
mov
or
jne
pop
dec
fs
add
clc
test
cmc
fadd
shrl
mov
insl
xchg
decl
ds
push
mov
lods
xor
in
cmp
and
pop
cmp
push
pop
rcll
std
movsb
add
mov
jns
jmp
xor
test
xchg
int3
add
push
jo
mov
test
jnp
iret
out
mov
xor
inc
call
pop
adc
jp
lods
out
sub
push
outsb
shlb
leave
push
adc
lea
lret
dec
addr16
lcall
cmp
fidivs
jle
cli
xor
or
mov
outsl
jae
int
pop
and
arpl
loopne
dec
mov
xor
sbb
xlat
and
ds
jno
or
lcall
xlat
jae
or
cmp
inc
loope
rclb
add
fsubl
enter
fisttpl
fisubl
and
add
dec
jne
insl
daa
lahf
repz
or
das
push
adc
mov
inc
fcoml
imul
inc
mov
call
fists
xchg
mov
out
or
push
lret
or
stos
rcrl
sub
mov
ljmp
sarb
mov
inc
pop
icebp
push
lret
xchg
jle
arpl
js
movsb
leave
rcll
inc
mov
loope
ja
lcall
jge
arpl
sbb
mov
pop
int
stos
and
out
push
dec
lock
jge
iret
cmpsl
add
rcl
xchg
es
add
loop
mov
inc
cmp
push
jo
mov
mov
test
jmp
popf
and
mov
loop
push
out
mov
mov
pushf
xchg
adc
jb
push
popa
pop
xchg
test
mov
adc
jno
lret
xchg
js
dec
int3
sbb
cs
and
sub
scas
divl
enter
popa
mov
stos
lret
xlat
mov
and
and
mov
pop
or
sub
mov
adc
es
and
mov
mov
cli
rorl
aam
cmp
rolb
fs
or
inc
ret
je
fs
jle
jg
rcrb
movsl
or
incb
mov
iret
orb
jl
shll
pop
inc
js,pt
and
mov
xchg
out
popf
lods
inc
mov
ljmp
and
movsb
stc
pushf
inc
insl
mov
pop
fcmove
sahf
cmp
sub
pop
push
mov
pop
xor
jl
inc
sbb
rol
movsl
lret
insl
test
in
filds
and
push
push
pop
dec
xchg
xchg
adcb
mov
mov
xchg
or
mov
test
mov
sarb
dec
push
sub
adc
add
xchg
aaa
jmp
outsb
lods
inc
inc
xchg
adc
insb
cmpsl
add
cmpl
mov
movsl
je
les
sbb
int3
jp
jle
enter
das
ljmp
enter
xor
cwtl
and
mov
mov
or
xchg
mov
and
mov
xor
xor
jmp
mov
ja
test
add
inc
rcrb
mov
and
addr16
push
jge
stos
pop
int3
pushf
jo
inc
dec
pushf
sti
mov
mov
dec
jg
push
scas
repz
cmp
pop
shl
cmp
cltd
les
push
imul
out
jo
out
out
xchg
fisubs
gs
mov
adc
push
lods
ljmp
xchg
imul
mov
adc
cmp
push
test
stos
push
fldt
enter
mov
pop
inc
mov
and
xchg
and
popa
aad
cwtl
adc
pop
adc
pop
fbld
push
cltd
shl
loope
inc
xor
orl
scas
or
repz
popa
enter
stos
test
or
mov
mov
sar
adc
push
lods
push
rorb
bswap
dec
xchg
cwtl
lret
enter
push
cmp
les
jo
fwait
pusha
outsb
repz
pop
nop
mov
imul
push
in
mov
mov
xchg
sub
xor
cmpsb
aam
sti
mov
push
sahf
pop
adc
call
dec
stos
or
fadds
mov
or
jl
cmpsl
jl
rclb
ret
insl
stos
insl
xor
push
xchg
repnz
jbe
xor
cmc
nop
inc
mov
mov
push
sub
into
icebp
xor
gs
cmp
leave
ds
xor
fildl
fcomps
add
xor
push
add
scas
lds
ficompl
je
movb
inc
addr16
pop
or
push
and
xchg
mov
mov
inc
jl
test
insl
cmc
sbb
sub
cli
cmp
mov
loopne
cmp
adc
test
mov
lret
fstpt
push
cmp
clc
int
or
pop
push
pop
fdivl
adc
fildl
addb
test
cmpsl
sarl
lds
insb
lahf
push
pop
xchg
jge
out
enter
and
out
mov
lods
cmp
cmp
cmp
rcl
jb
out
push
mov
add
inc
xchg
popf
mov
aas
xor
cmp
testl
jnp
test
ljmp
imul
fsubr
xchg
adc
data16
inc
call
fstl
add
lea
movsb
shll
lea
xchg
pop
jno
ss
jle
xchg
in
in
dec
xchg
mov
push
stc
mov
insl
inc
mov
push
mov
adc
sub
iret
mov
add
dec
rol
and
aas
or
sbb
lret
mov
mov
adc
fadd
lods
mov
sbb
daa
pushf
sarl
ret
cmp
lcall
aam
cli
xchg
xchg
fistpll
cmp
adc
sub
cmp
fisubrl
add
jns
add
iret
jne
and
addr16
pop
fadd
adc
dec
lds
add
cwtl
pusha
pop
sbb
sbb
mov
mov
std
pop
andl
daa
lahf
lods
mov
pop
or
push
push
inc
es
repnz
sahf
loope
xchg
and
lret
das
mov
out
rcl
in
addr16
jo
in
mov
leave
gs
xor
adc
cld
or
fmuls
test
jp
pop
xchg
das
cmp
imul
test
jns
push
xor
lret
sbb
rorb
mov
push
mov
enter
stc
cmp
imul
dec
clc
in
lea
mov
adc
adc
call
jo
sub
jp
adc
and
xor
js
cmp
inc
mov
mov
inc
add
push
jg
test
arpl
loop
daa
orb
xor
xchg
ficompl
pop
shll
mov
fs
insb
xchg
sbb
mull
test
push
pop
mov
and
mov
fldl
mov
pop
lods
and
pop
push
pop
stos
aad
mov
jmp
lock
push
cmp
add
xlat
push
imul
rcrl
and
arpl
es
and
mov
xor
ret
push
repz
or
repnz
lea
push
or
or
insl
lea
decb
mov
cmp
subl
into
repnz
data16
lahf
fimuls
scas
and
pop
ja
jmp
sbb
sbb
sbb
aaa
cmp
mov
adc
lea
xchg
add
adc
push
or
push
repnz
jne
sbb
lahf
pop
push
loopne
add
aam
jge
push
cmp
push
scas
xchg
lret
jno
ss
mov
mov
push
mov
mov
mov
popl
jbe
filds
loope
xor
sbb
add
jne
jne
push
shlb
bound
jecxz
adc
xchg
jge
mov
xchg
aad
pop
fistl
jmp
xchg
mov
push
iret
stos
mov
add
or
inc
ja
mov
inc
andb
xor
push
out
into
icebp
lods
pop
mov
adc
call
out
out
das
jne
xchg
les
pop
pop
pop
mov
cmpsl
dec
jbe
outsb
inc
inc
fimuls
jge
ret
repnz
xor
lods
test
inc
test
movsb
jge
and
xchg
popf
xor
sti
pushf
xlat
sub
pop
cmp
aas
sub
sbb
int
mov
test
sub
cld
inc
gs
mov
lods
stos
cs
xlat
mov
xor
das
xor
push
es
dec
push
and
mov
add
mov
cltd
mov
xor
jmp
mov
push
negl
sbb
inc
xchg
xchg
ret
jnp
mov
je
xor
xchg
xor
mov
add
adc
cld
fwait
add
inc
cli
sbb
push
loopne
mov
push
iret
push
mov
jge
push
jecxz
sub
adc
fdivrl
bound
in
adc
inc
mov
push
add
cmp
in
std
cmp
cli
inc
xor
sbb
pop
and
sbb
imul
xchg
or
arpl
pop
sbb
push
in
std
ljmp
dec
jne
test
subb
add
jmp
mov
popf
inc
sahf
push
pop
xchg
or
xor
sub
gs
push
fs
fs
mov
sub
xchg
aas
dec
sahf
in
jb
aam
pushf
and
icebp
push
sub
add
mov
sub
movsb
sub
idivb
xor
mov
mov
mov
sbb
repz
adc
decl
mov
push
pop
cmp
sbb
pop
stos
adc
cmpsb
cltd
xor
xchg
jne
lods
and
cmp
insl
fs
rcrl
and
lcall
xlat
and
jmp
cmp
lods
lods
shll
mov
xchg
sub
mov
pop
ss
xor
dec
in
mov
call
xchg
je
mov
andb
fdivl
mov
out
lret
cmp
xor
mov
mov
cmp
out
and
fsub
and
jne
lret
xor
adc
push
jecxz
and
fcoml
aas
gs
cmp
pop
fs
mov
push
loopne
sar
push
sbb
inc
aas
fadd
mov
jbe
inc
xor
mov
pop
mov
pop
cmc
movsl
lcall
scas
js
movsl
aas
loopne
and
addr16
mov
scas
inc
gs
les
mov
out
inc
jp
lds
scas
gs
and
dec
push
in
dec
and
jecxz
xor
pop
or
mov
xor
and
cmp
daa
testb
jb
imul
repz
jmp
or
mov
mov
dec
ss
sbb
dec
lock
rorb
pop
aaa
pop
jge
lds
add
popf
cs
sarb
in
mov
test
cmpsb
xchg
decb
bound
lret
push
rclb
loopne
loopne
jns
test
push
fwait
add
sbb
or
xchg
add
cmpsb
adcl
stc
rolb
in
push
sbb
dec
adc
or
dec
lahf
in
push
xor
je
gs
in
jbe
xor
add
test
popf
mov
fstl
lret
or
xchg
rclb
stos
xchg
cmp
in
xor
fucomi
ret
mov
cltd
and
test
adc
pop
sti
inc
xchg
movsb
lods
in
mov
js
xchg
xor
icebp
mov
pop
push
enter
aas
mov
cmc
je
cmpsl
clc
call
sub
subl
scas
adc
loope
inc
jbe
sub
iret
cmpsl
xchg
lcall
push
xlat
push
popf
add
pushf
xchg
dec
cmp
loope
cltd
mov
and
jl
out
leave
lahf
cli
in
xchg
mov
cld
loope
xchg
mov
movb
dec
pop
add
outsl
imul
pusha
aas
jnp
mov
movsb
fwait
jg
jl,pn
aas
lar
sub
add
ficoml
add
jp
rcrl
test
inc
lods
xor
adc
test
mov
cwtl
arpl
inc
sub
repz
lock
loop
jo
incb
cltd
int
adc
mov
daa
mov
pop
movsb
int
xchg
popf
pop
imul
inc
int3
or
mov
insl
jno
mov
or
lods
pop
jns
loop
or
and
int
sti
in
popf
fldcw
mov
sbb
arpl
rcl
scas
lret
dec
adc
sbb
cmpsb
sub
adc
stos
dec
test
arpl
xchg
jcxz
jmp
or
jb
lret
and
mov
fildll
pusha
jbe
or
repnz
push
nop
lods
mov
shlb
mov
push
xchg
dec
cmpsb
jns
in
fadds
pusha
mov
rcrl
fildl
inc
adc
mov
out
gs
mov
or
mov
cmp
andl
xchg
test
daa
pop
sub
xchg
js
sub
and
shll
shlb
neg
add
jmp
add
cmc
jae
xor
dec
pop
push
xchg
popa
stos
fldt
mov
pop
inc
mov
sbb
push
loopne
mov
mov
mov
imul
aas
dec
push
scas
cmp
aad
mov
mov
test
les
pop
test
xchg
cwtl
mov
sbb
fwait
cmp
shll
aam
adc
int
call
add
das
pop
sbb
fisubrl
and
fiaddl
sbb
push
push
jnp
push
mov
adc
mov
lea
fimuls
mov
push
mov
mov
sbb
mov
xchg
sub
or
stos
and
jmp
cmp
inc
rcrl
enter
jecxz
mov
cld
add
dec
fistps
jle
cmp
repnz
mov
fsts
sbb
xlat
cltd
and
inc
lods
and
test
aad
mov
jle
test
pop
push
cmp
subb
fcmove
aad
xchg
jno
rclb
mov
sar
shll
inc
sub
fiaddl
mov
jmp
and
iret
cmp
into
push
push
and
push
mov
add
mov
xor
nop
add
cmp
fsubrl
cmpsb
adc
lret
mov
jg
cmc
sti
stos
mov
xlat
lock
popa
repnz
dec
fnstsw
pop
cwtl
lcall
sbb
aaa
jbe
mov
xchg
imul
imul
addr16
sub
shl
pop
idiv
stos
adc
adc
jne
int3
mov
inc
cmp
mov
cmpsl
add
fldcw
ja
pushf
and
jne
outsl
mov
mov
dec
xchg
and
aad
stos
cld
sbb
push
stc
mov
pop
mov
fs
movsb
cld
mov
insl
popf
leave
jmp
sbbl
les
push
mov
sub
adc
loopne
mov
xor
outsb
in
outsl
mov
in
mov
mov
pop
dec
dec
xor
and
jl
cmpsl
push
movsl
enter
jmp
pop
cld
or
and
dec
dec
out
adc
mov
xchg
sarl
nop
popf
addr16
inc
cld
test
adc
mov
mul
stc
out
movsl
push
mov
seta
inc
inc
ja
mov
xor
pop
add
mov
sub
cmp
lods
dec
ret
xor
jge
movsb
sbbb
xchg
pop
adc
cmp
inc
icebp
sub
jle
mov
cli
add
movsb
sub
mov
cmp
push
sbb
mov
mov
inc
add
js
mov
inc
and
mov
aad
test
fs
mov
data16
dec
das
push
mov
add
pusha
mov
xor
int3
jle
mull
jmp
cmp
adc
mov
xchg
mov
into
fs
cmc
mov
adc
scas
test
mov
sbb
and
push
imul
adc
xor
imul
mov
sbb
and
movsl
mov
jno
cmp
in
lods
xchg
in
test
fldt
frstor
insl
iret
je
out
mov
dec
cltd
scas
xlat
jge
mov
xor
lods
shlb
pop
mov
push
cmpl
xlat
jbe
jg
pushf
mov
mov
cli
lods
jno
mov
addr16
lcall
pop
xchg
and
jl
rclw
lret
ljmp
mov
add
ret
pop
mov
xchg
and
ret
adc
ja
stc
push
or
aam
shl
jae
daa
xchg
xor
jae
lds
mov
sub
xchg
lds
in
jge
fidivrl
push
cmp
mov
push
mov
loopne
adc
test
mov
ficoml
xor
mov
add
mov
popa
ret
ljmp
push
push
sahf
scas
clc
repz
xlat
mov
mov
lahf
push
pop
cmp
rcrb
lds
loopne
adc
shrb
inc
test
cmc
sbb
xor
fdiv
fs
arpl
adc
cld
xor
cli
jne
push
mov
jo
push
add
ret
jmp
cmpl
pop
jnp
sbb
in
and
rcrb
adc
mov
stos
dec
cmpsl
insb
adc
sbb
add
insl
jnp
jae
xor
popf
adc
dec
and
cmp
lea
loope
fwait
add
adc
inc
fidivrs
mov
subb
xchg
mov
sub
sub
loop
mov
rcrb
and
repz
adc
cli
push
inc
push
arpl
sub
add
mov
push
jmp
mov
mov
out
and
sbb
les
and
call
in
mov
test
push
lahf
sbb
bound
add
push
jg
and
xchg
jo
xchg
jmp
pop
xchg
enter
scas
adc
es
cld
mov
dec
ss
push
movsl
sbb
sysexit
dec
popa
or
cmp
cmp
loop
mov
sbb
outsl
pop
xchg
das
pop
mov
test
aas
jne
adc
mov
loopne
inc
sub
sarl
add
dec
into
push
outsb
dec
movsl
lahf
xchg
arpl
lcall
xor
ror
adc
xchg
outsl
pop
es
lahf
fdivrl
in
and
sub
mov
xorl
xor
notl
mov
sbb
test
push
movsl
add
mov
shlb
mov
fadds
fcmovnu
dec
scas
hlt
jg
lret
add
pop
push
jbe
or
and
std
pop
xor
stos
mov
in
push
ds
pushw
ljmp
sti
popf
jbe
inc
jge
les
push
fisubrs
dec
xorb
in
mull
or
fs
inc
push
mov
inc
stc
and
sarl
mov
dec
out
scas
sub
adc
popa
jns
and
xchg
out
xchg
cmp
clc
xchg
nop
shlb
jno
sbb
mov
xor
mov
pop
lods
in
in
mov
jne
xchg
and
cmp
mov
jo
mov
pushf
les
jecxz
cwtl
mov
test
and
cli
sbb
incb
mov
daa
dec
dec
add
icebp
jbe
fcmovnbe
push
cwtl
lods
push
and
idivb
add
lret
enter
test
test
add
xchg
mov
jnp
or
mov
or
in
cli
push
test
or
cld
mov
jle
jmp
js
mov
mov
out
gs
fs
adc
ret
jns
xchg
adcl
cmp
or
push
or
cli
pop
sbb
sub
arpl
mov
cld
inc
mov
jnp
movsb
push
cli
popf
das
jge
movb
sbbl
jl
and
sub
inc
xor
mov
and
hlt
mov
xchg
xchg
lcall
fcoms
inc
fbstp
and
xchg
adc
or
cmp
jb
lcall
adc
sbb
cli
aam
adc
push
or
pop
test
sbb
mov
fstps
inc
fisttps
cmp
ror
sub
test
dec
xor
rorb
mov
mov
sbb
xchg
mov
push
mov
sarb
xchg
call
test
sub
in
and
pop
add
jmp
iret
sbb
arpl
rorl
sbb
pop
sbbb
add
int
push
inc
ja
test
test
mov
imul
pop
ret
lcall
push
das
sti
lds
pop
arpl
es
movsl
and
xor
mov
out
dec
jle
scas
in
stos
test
inc
add
inc
cltd
push
mov
jp
mov
popa
sahf
aas
pop
add
subl
sbb
jo
add
xlat
fcmovne
scas
jp
ss
test
pop
ds
pop
lcall
or
nop
jge
xor
xchg
xor
les
push
mov
movb
or
imul
data16
adc
aaa
adc
mov
xor
cmp
sti
dec
xor
mov
out
cmpb
mov
movsb
sub
pushf
push
cwtl
cmc
mov
popf
repz
enter
lcall
scas
push
cld
mov
sub
pop
or
mov
into
pop
idivl
icebp
fsubs
insb
arpl
pusha
xchg
push
iret
adc
push
shl
push
test
push
pop
xchg
sbb
mov
sbb
pop
inc
xor
cs
les
xchg
vpackssdw
arpl
mov
pop
add
jl
cld
aaa
pop
cmp
xlat
bound
neg
fcmovnb
stos
push
out
pop
inc
bnd
mov
stc
xlat
data16
xchg
ss
jnp
mov
push
xchg
xchg
std
rcl
divb
addb
mov
mov
fdivrs
call
dec
xorb
ret
xchg
jle
inc
filds
clc
push
xor
pop
ljmp
out
cmpsl
sbb
xor
dec
adc
add
pop
rorl
test
mov
lods
lock
mov
stc
lret
sub
dec
into
pop
mov
sbb
mov
or
imul
adc
jae
sub
cli
cmpsl
pop
xchg
sub
idivb
inc
lcall
fists
cli
push
dec
fisubrl
jb
cmpb
call
fs
xlat
xchg
push
cmp
mov
fs
lea
cs
cmp
xor
dec
jbe
xchg
dec
popf
incl
jge
sbb
mov
stc
cmp
lcall
jno
mov
mov
inc
pushf
sub
or
mov
adc
dec
out
mov
ficoms
xchg
mov
js
inc
cmp
jne
xchg
scas
into
sub
xor
sub
out
insl
scas
sub
lea
aam
xchg
mov
add
mov
stos
testb
int
gs
jecxz
fwait
scas
in
jb
js
cmpsl
rcll
cwtl
push
addb
ljmp
adc
pop
fs
test
inc
xchg
fucomip
andl
pop
mov
pop
pop
jbe
push
fstpl
adc
call
cwtl
sub
ja
mov
mov
dec
pop
repz
lret
scas
dec
sub
xor
mov
jns
leave
lahf
xor
lcall
push
pushf
mov
gs
mov
push
fcmovbe
cmp
push
sbb
aaa
repz
out
iret
es
xchg
inc
shr
movsb
pusha
fld
cmpsl
lods
sub
inc
divb
adc
mov
adc
imul
inc
inc
mov
mov
and
xchg
in
xchg
mov
inc
ja
jp
pushf
es
cwtl
mov
cmp
jp
or
or
les
push
jne
xchg
cmp
jno
mov
inc
xor
pop
in
sub
fbld
mov
mov
xchg
je
enter
jg
adc
aas
lods
push
fwait
xor
mov
into
push
lds
xor
scas
repnz
inc
lods
and
mov
dec
cmc
mov
xchg
mov
repz
outsl
dec
cmpsl
add
mov
mov
andl
jge
icebp
rcl
es
inc
adcl
nop
jbe
jmp
movsb
pushf
xchg
out
mov
xchg
sbb
out
xchg
sub
cmp
xlat
xrelease
xchg
or
js
push
xchg
cmp
dec
mov
add
xor
inc
stos
int3
sahf
popf
jbe
push
in
push
sub
ljmp
out
lcall
int3
cmp
xor
pop
in
inc
mov
in
les
shrl
sub
adcl
sub
in
ret
sbb
add
test
adc
sbb
jnp
sub
lahf
jbe
or
adc
lcall
and
pushf
les
cmp
adc
enter
mov
imull
ret
dec
ljmp
push
add
fdivl
aam
iret
jne
mov
sub
mov
push
mov
sbb
inc
sbb
push
xchg
call
shrl
fcomi
sub
in
xchg
mov
scas
inc
test
pushf
imul
mov
xlat
cmp
xor
dec
loope
cmp
push
pop
es
xchg
iret
call
jno
rcrl
fwait
inc
divb
xchg
subl
or
test
and
icebp
mov
fstpl
in
jl
sbb
push
outsb
in
or
cmp
icebp
test
or
mov
add
sbb
push
inc
lcall
mov
dec
aad
test
lahf
fsubrs
fcmovne
fs
lret
push
das
sub
and
mov
outsl
loopne
mov
out
repnz
push
cmp
or
insb
loop
mov
mov
adc
cmpsl
pop
pop
aas
rorl
mov
je
dec
js
adc
jae
fnstenv
add
pop
push
aam
xor
sahf
jno
clc
scas
cs
cmp
mov
add
inc
xor
enter
in
mov
shlb
add
andl
mov
pop
sub
notb
decb
or
mov
loopne
xor
std
faddp
pop
in
and
fcoml
pushf
pshufw
pushf
loop
loop
sub
negl
cltd
mov
rcrl
out
pop
in
mov
xchg
pusha
add
push
mov
sub
push
mov
loope
aam
mov
pop
adc
push
and
dec
xchg
mov
in
mov
pop
cmp
cwtl
mov
cmp
cltd
dec
sbb
sub
push
call
sbb
pop
je
jno
enter
push
mov
pop
jmp
push
int
lods
jae
rclb
loop
inc
and
dec
fst
rol
push
mov
data16
xor
inc
push
xchg
push
sahf
pop
cli
dec
lods
adc
decl
sub
xor
inc
jae
pusha
ss
lahf
ret
jne
rcll
push
pop
hlt
ja
sbb
inc
pop
pop
adc
mov
dec
int
dec
xchg
sub
dec
out
in
or
sbb
push
xor
rcll
das
sbb
xchg
dec
jg
ret
mov
mov
pop
dec
aas
mov
mov
inc
in
leave
cli
xchg
fstl
rorl
xor
out
push
push
add
aaa
and
pop
mov
mov
hlt
ja
xchg
sbbl
imul
or
cmc
js
cmpsl
outsl
mov
cmp
push
mov
sub
orb
ret
inc
test
cmp
sub
cwtl
push
test
fistl
inc
call
mov
ret
mov
sbb
sbb
shlb
pop
pop
dec
adc
and
outsl
cltd
push
inc
insb
jnp
mov
mov
inc
mov
xor
mov
or
sbb
lret
mov
pushf
in
int3
adc
sahf
clc
pop
addr16
mov
imulb
push
nop
stc
pop
hlt
das
mov
aad
repnz
fldz
mov
cwtl
fidivrs
jl
cld
xorb
push
jl
out
lods
dec
push
xchg
dec
mov
js
adcb
ja
add
pop
sbb
ret
insb
xchg
bound
cld
jge
mov
fs
jo
xor
and
mov
repnz
dec
jmp
sbb
lahf
mov
lock
mov
mov
dec
test
jae
mov
cwtl
fs
scas
dec
mov
adc
addr16
adc
jne
pop
movb
cmp
js
add
pop
mov
lock
sbb
leave
lret
or
adc
jge
pusha
dec
and
xor
adc
adc
jae
cmc
push
popf
popf
sub
arpl
sub
or
int3
or
mov
mov
xor
cmp
enter
pop
sub
mov
shr
sub
cmp
arpl
inc
pop
or
xchg
adcb
jmp
xchg
mov
ljmp
add
mov
push
dec
faddl
insb
jg
pop
dec
leave
cmpsl
mov
mov
fldl
shl
cmp
push
rorl
or
xor
in
push
repz
cmp
arpl
ss
adc
and
or
jne
push
inc
adc
loopne
jmp
shrb
jnp
ljmp
xor
aas
loopne,pt
xchg
les
push
jl
or
mov
push
cmp
shr
mov
cmp
loope
fucom
fisttpl
xor
cmp
aaa
cmp
pop
add
aad
cmc
fiadds
xchg
sub
pop
xchg
or
and
and
mov
mull
call
lcall
add
mov
out
pop
mov
sub
mov
push
loopne
xor
mov
cli
mov
mov
xchg
sub
lds
jne
sub
push
dec
gs
es
add
xchg
cmpsl
adc
push
std
jp
gs
fmuls
mov
add
mov
or
aas
imul
mov
sbb
test
sbb
push
and
lret
aas
push
es
into
outsb
sub
cltd
push
add
pop
mov
psubw
idivb
sahf
or
or
rorb
jge
mov
sub
out
adc
pop
pop
push
inc
push
xchg
mov
pop
pop
dec
insl
aam
adc
push
pop
rcrl
mov
stos
mov
pop
ret
inc
cli
adc
push
fisttps
mov
sub
dec
mov
sbbb
stos
dec
xchg
push
inc
scas
stos
loopne
mov
dec
and
push
outsb
mov
cs
jl
or
and
stos
in
sub
mov
sbb
in
stos
adc
jnp
shlb
cs
imul
aas
add
lods
dec
jp
jmp
dec
jl
mov
mov
out
adc
in
sub
test
int
sarl
dec
lods
shlb
dec
fcmovbe
les
gs
inc
push
sbb
mov
sbb
jae
orl
sbb
lret
int3
test
push
xchg
fwait
mov
call
outsb
loope
sub
and
cltd
scas
and
cltd
ss
mov
cmp
loope
push
or
lea
loop
push
insb
mov
jb
xor
adc
dec
mov
or
cmp
mov
sbb
mov
cmp
mov
add
xor
int3
sbb
jbe
dec
popf
mov
sbb
adc
push
sub
out
adc
addr16
movsb
cmp
push
and
sub
sub
jne
pop
fwait
cli
jae
dec
sbb
mov
and
ljmp
pop
enter
sbb
mov
xchg
testb
pop
leave
fimull
push
inc
mov
popw
je
not
arpl
pop
shll
repnz
outsb
pop
in
enter
in
push
mov
jge
cmp
mov
scas
mov
mull
cld
shrb
js
addl
jno
dec
incl
xchg
cmp
pop
dec
sub
xchg
lcall
mov
lcall
repz
adc
inc
arpl
adc
daa
pop
lds
xchg
xor
push
stos
out
or
jg
bound
pusha
dec
sbb
cmpb
fstpl
test
outsl
mov
dec
mov
and
jp
sahf
sub
push
jne
int3
xchg
mov
adc
or
add
outsb
xor
jbe
js
jnp
jp
cmpb
aam
imul
jnp
and
aaa
jns
and
idiv
jns
xchg
pop
sub
movsb
xchg
mov
lods
mov
sbb
cmp
xor
orb
in
loope
clc
jae
sub
or
and
scas
fistps
pop
jbe
xchg
shrl
mov
push
xor
jno
fldl
jb
pop
sub
shl
shrl
xor
adc
loope
cli
aas
cmp
pop
call
mov
js
lock
lods
shrb
rorl
push
btr
jnp
hlt
adc
out
leave
cmp
aas
xchg
jl
and
adc
lods
fmul
mov
into
adc
into
out
aas
and
pop
in
jge
sub
dec
mov
fisubl
jb
push
lcall
jo
mov
cmpsl
jns
dec
mov
sbb
cmc
outsl
movsl
stos
rcrl
rclb
jg
and
or
pushf
repnz
inc
out
fs
les
mov
push
leave
outsb
ss
stos
mov
mov
loop
test
push
cmp
repz
xchg
pop
xchg
loopne
dec
in
add
sub
adc
cmp
pushf
adc
push
stos
mov
sbb
ret
in
fildll
dec
incl
xor
movsb
xchg
pmaxsw
dec
comiss
and
xchg
cmp
jns
adc
add
jbe
mov
lret
xor
aaa
daa
js
lods
andl
mov
lods
cld
clc
loop
out
sbb
sbbl
daa
sub
push
sbb
in
pop
cmp
mov
sbb
int3
xor
sbb
push
jmp
inc
pop
je
test
das
sti
loop
mov
mov
push
out
stos
leave
ret
jg
dec
movsl
mov
xor
bound
sbb
repz
mov
fadds
int
pop
negb
lret
test
xlat
das
in
xor
dec
pushf
sbb
aad
int
add
repz
xlat
or
fildll
cwtl
mov
adc
lock
ss
adc
daa
out
jp
dec
push
cmp
int
xchg
inc
sarb
mov
cmp
movsb
mov
lcall
dec
gs
test
xchg
out
es
std
pop
fwait
push
and
pop
stc
jge
xlat
lea
dec
fdivl
xorl
xchg
xchg
and
add
inc
and
dec
fwait
push
xor
jp
sub
sbb
push
jns
or
sbb
in
mov
test
imul
add
loope
js
jne
pop
movsb
mov
jne
fsubs
xor
aam
shlb
das
ds
xor
aaa
or
inc
pop
jge
xor
cmp
mov
cmpsb
push
enter
cmp
mov
mov
adc
and
fimull
and
sub
js
add
mov
and
mov
mov
sub
stc
repnz
mov
addr16
jo
icebp
cmp
add
jmp
dec
cmp
mov
es
xor
loope
mov
orl
dec
outsb
fldt
cmpsb
movsl
mov
daa
insl
subb
imul
sbb
cmc
push
fsubp
shrb
push
push
xlat
push
push
adc
jmp
xchg
outsb
inc
add
cmp
mov
aad
mulb
jg
lret
push
loopne
push
dec
scas
in
invd
jmp
mov
or
mov
cmp
clc
adc
std
jmp
test
imull
jo
mov
cmp
test
sbb
mov
out
daa
aad
aas
jle
add
xchg
fs
push
testb
xchg
lret
frstor
mov
rorb
and
or
cli
cltd
adc
rcrb
fimull
fstl
out
notb
dec
ja
loop
ljmp
stc
mov
pop
xchg
inc
pop
daa
arpl
jmp
dec
subb
movsb
mov
pop
lret
push
sub
adc
mov
mov
pcmpeqb
cli
jnp
lock
push
jno
push
pop
jl
lods
sbbl
cmp
stos
movl
roll
pop
and
add
iret
jmp
lea
adc
jp
inc
xor
mov
ja
ss
jno
cld
dec
scas
or
cltd
les
ja
inc
pop
cmp
mov
jnp
jo
xor
sub
mov
push
push
dec
sbb
dec
push
bound
bound
ucomiss
pushf
adc
adc
inc
test
add
jno
fldcw
lret
fsin
add
mov
lods
push
loopne
inc
mov
jbe
and
iret
or
mov
and
pop
mov
ja
test
jmp
mov
out
test
pop
pop
xor
jmp
cmp
pop
lods
pop
dec
add
iret
cmpsb
or
mov
imul
dec
xlat
mov
dec
push
addr16
xchg
loope,pt
inc
mov
sbb
rcrl
in
es
push
sbb
mov
push
cmp
int
lods
mov
dec
dec
cmp
out
mov
bound
hlt
sub
xchg
rolb
cmp
add
sub
imul
out
inc
imul
ja
cmp
hlt
jno
mov
test
sbb
sti
stos
ss
pop
ljmp
test
ret
mov
test
leave
daa
pop
mov
mov
sbb
cltd
lret
cmpsb
ljmp
fmulp
push
iret
lcall
popf
aam
sbb
jb
out
outsb
lret
adc
mov
jnp
xchg
jo
push
xchg
jae
mov
xchg
xor
sbb
ljmp
xchg
pop
test
in
or
fs
mov
cli
cs
add
insb
int3
xor
jg
in
cli
mov
ret
ffreep
das
and
push
ja
dec
dec
mov
and
pop
mov
rolb
or
jae
imul
xchg
jns
inc
dec
pop
mov
mov
movsb
repz
mov
lea
dec
fsubr
mov
and
adc
push
xchg
xchg
xor
ret
cmpsb
movsl
jae
sub
push
add
stc
clc
pop
scas
xchg
cmp
add
add
cld
jg
int3
mov
test
mov
lret
in
stos
cli
mov
sbb
push
imul
dec
loopne
cld
rcrl
mov
push
and
leave
mov
movsb
hlt
shrb
jle
enter
cmp
xor
push
bswap
dec
xchg
lcall
push
enter
std
fistps
inc
movsb
xor
xor
test
fistpl
and
in
jnp
push
or
mov
jo
mov
adc
cmp
jno
divb
fdivl
pop
ret
mov
jno
sub
jae
insl
xlat
jp
outsw
stos
test
stos
ss
xchg
jl
rcr
mov
xchg
cmpsl
movsl
mov
lock
mov
rorb
jl
mov
stos
inc
mov
loopne
enter
adc
mov
pop
add
or
in
mov
in
pop
push
leave
arpl
pushf
outsb
cmp
lods
dec
sahf
add
shl
mov
divl
faddl
jbe
adc
push
repnz
ud2
add
jno
cmp
stc
jne
cmp
mov
cmpsl
into
or
icebp
rolb
daa
popl
jge
imul
sub
pop
push
fxch
pop
inc
aaa
adc
xor
insb
mov
sbb
push
push
jl
ret
push
xor
arpl
add
loopne
jo
fs
pop
xchg
pushf
dec
imul
lahf
sbb
test
mov
out
mov
push
xchg
jo
jbe
mov
icebp
xchg
je,pt
push
jb
jo
shr
inc
or
outsb
addb
int3
nop
sarl
adcb
jo
pop
cwtl
dec
inc
cmpsb
test
orl
lods
mov
loop
mov
cmp
rolb
sub
mov
fsubl
pop
lahf
cmpsb
xor
loope
push
lcall
jp
sbb
popa
clc
sar
mov
popf
dec
mov
stos
ja
cmpsl
jnp
call
or
pop
pop
scas
fs
pop
sub
sti
push
movsb
xchg
loop
shll
lock
rorb
jl
cmp
mov
xor
leave
aas
sbb
xchg
and
cld
jl
mov
cmp
lods
mov
add
lock
adc
push
mov
cwtl
mov
into
pop
xchg
int
pop
mov
sub
cmp
dec
jns
repz
cmp
in
nop
ret
repnz
jg
mov
aam
test
push
ret
or
cmpsl
mov
mov
mov
call
mov
push
xor
fs
jne
leave
xchg
jo
jp
mov
xchg
adc
scas
mov
xor
icebp
cmp
mov
jbe
add
les
push
jns
and
mov
sub
adc
sub
push
jne
xchg
dec
aad
or
xchg
out
neg
loop
out
dec
jg
shlb
lock
cwtl
daa
data16
call
adc
xchg
leave
loope
inc
jns
orb
pusha
adc
dec
mov
mov
jp
shl
test
in
sarb
test
dec
lods
jb
lds
jmp
dec
xchg
sbb
stos
enter
mov
fcomip
rorb
push
inc
mov
inc
popa
cld
xchg
sbb
cld
mov
pop
cmp
xchg
frstor
into
mov
neg
fidivs
lods
lss
jge
notb
xor
or
repnz
int3
idivl
cmp
pop
jae
shl
xchg
aad
das
mov
mov
cmpb
js
mov
loopne
jecxz
scas
call
or
scas
outsl
mov
mov
cmp
mov
push
mov
andb
insl
inc
sub
xor
jle
add
std
nop
cmp
mov
fmulp
ljmp
push
inc
xchg
adc
ja
out
xchg
push
movsl
xchg
pusha
mov
mov
jle
dec
clc
call
or
dec
and
cmp
arpl
push
cmpl
pushf
daa
or
aam
icebp
dec
dec
mov
ljmp
cmp
jns
fs
in
dec
adc
cmp
sbb
aas
push
leave
loop
adc
sbb
js
cvtpi2ps
and
popl
jo
mov
jbe
es
pop
arpl
test
mov
repz
lret
push
enter
pop
mov
sub
mov
mov
inc
xor
jae
sbb
sub
mov
rcr
mov
pop
or
sbb
mov
jl
aam
pop
imul
lret
pop
jno
pusha
sarb
ficompl
and
das
aas
test
pop
jne
pop
sbb
push
int3
out
mov
or
fsts
sbb
dec
xchg
leave
xor
out
shlb
das
test
push
rcll
jmp
mov
stc
test
repnz
rorb
jecxz
pop
or
outsl
mov
in
mov
inc
jmp
aaa
xchg
loop
pop
clc
out
xor
xlat
mov
xlat
jle
mov
mov
ja
fwait
cwtl
lahf
mov
ljmp
jle
fnstenv
repz
pop
sub
or
xchg
shl
test
daa
cmp
mov
loop
jno
sbb
repz
popa
arpl
arpl
fldpi
jo
push
or
cmp
imul
jbe
popf
test
jo
out
xor
sub
pop
mov
popf
xchg
movl
insb
or
insb
cmc
clc
mov
andw
xchg
pop
ja
push
jbe
or
leave
cltd
xor
push
out
daa
jl
sbb
dec
into
ja
lea
push
push
movsb
imul
xor
shll
aaa
pusha
sbb
fwait
dec
enter
pop
inc
popa
sbb
das
xlat
into
movswl
push
out
mov
bound
mov
scas
mov
pop
stos
imul
idivb
jle
jecxz
sbb
cmp
inc
inc
mov
push
icebp
xor
cmp
icebp
fcomps
ja
leave
ljmp
hlt
aaa
jmp
cli
sbb
jp
in
in
add
in
repnz
jle
fstpt
pop
inc
push
lea
inc
std
test
lock
std
xchg
data16
cmpsb
add
andb
mov
loope
push
fildl
adc
movsb
bound
pushf
ds
pop
notl
aaa
jo
mov
jmp
or
int3
push
mov
addr16
mov
xorl
or
jo
adc
or
push
xchg
dec
ja
shl
call
out
cmc
xor
out
lret
mov
and
pop
add
in
cmp
jle
scas
sbb
pop
dec
sub
out
xorb
sub
sbb
cli
lods
add
jbe
mov
or
mov
or
sub
xor
movsl
dec
sbb
out
popf
adc
lcall
and
push
loope
lods
pop
push
in
call
rcrl
mov
mov
xor
push
imul
dec
xor
ret
gs
pop
pop
ret
mov
dec
mov
insb
sbb
pop
cmp
inc
mov
mov
out
xor
mov
and
loopne
cmpsb
dec
fcoms
call
popa
test
lods
inc
push
and
push
sub
test
xchg
hlt
shr
jo
shll
mov
inc
movsl
lods
mov
les
shlb
pop
inc
fnstcw
iret
shll
push
pop
dec
lea
or
jle
sbb
es
cli
xchg
mov
push
out
mov
callw
mov
sarl
push
sub
rcrl
add
or
ret
add
repnz
sbb
ret
pop
leave
mov
bound
scas
imul
sub
into
push
popa
psubusb
jmp
or
ss
push
inc
cmp
jmp
aad
mov
fnstcw
xor
test
insl
adc
cmp
pushl
jne
pop
in
stos
cltd
and
push
or
in
sbb
push
lret
xchg
cmp
test
sub
adc
rorl
lods
inc
jl
mov
leave
scas
mov
push
fiadds
xchg
jae
pop
neg
mov
xchg
testb
xor
pop
xchg
jae
xlat
and
fistpl
test
pop
leave
enter
jne
leave
dec
xchg
rcrb
mov
sbb
mov
gs
dec
jne
push
push
sub
push
adc
sbb
shr
push
enter
xchg
out
jmp
jnp
inc
xor
jmp
loope
pusha
cwtl
jle
inc
jne
out
cs
inc
shl
jns
insl
mov
xchg
push
nop
cmp
cmpsb
call
aaa
dec
popa
mov
add
clc
outsl
cmp
sbb
aas
mov
lret
clc
fistpll
xchg
pusha
aam
mov
fwait
mov
jl
mul
jl
decl
das
xchg
popa
pop
test
adc
notb
sub
nop
sbbl
imul
push
popf
xor
xchg
mov
mov
and
inc
aaa
dec
bound
sahf
clc
mov
mov
loop
mov
add
sub
jns
and
cmp
int3
loope
cmpsb
xlat
push
std
mov
test
aas
push
add
outsb
inc
mov
jb
testb
dec
es
ftst
cmp
sub
loope
pop
roll
out
mov
lret
inc
je
out
dec
pop
fwait
iret
test
sbb
mov
inc
push
fdivs
inc
and
dec
aad
jecxz
jne
test
inc
jno
push
fucomip
inc
xor
aad
push
mov
fadds
xor
adc
mov
dec
hlt
aam
jno
jne
cmp
enter
ss
mov
mov
sub
push
fs
adc
mov
std
jae
push
aam
lret
jmp
dec
dec
popa
adc
rorb
cld
in
sbb
stos
sub
mov
insb
mov
adc
mov
out
adc
ljmp
sbb
mov
sarl
lcall
pop
mov
imul
dec
divb
sbb
sub
arpl
sub
in
mov
mov
sbb
lea
lods
mov
enter
add
lea
or
fwait
stos
and
imul
xchg
fdivs
in
cmp
inc
sbb
bound
jg
outsb
sub
call
mov
jl
adc
sub
andb
cmpsb
rorl
fmuls
cmp
lcall
push
jp
jg
jmp
rcl
add
sub
out
lods
and
enter
je
pop
sub
mov
push
lret
roll
sbb
ds
cmpps
ja
sub
clc
clc
add
adc
cmp
arpl
mov
addr16
sbb
add
sbb
mov
jno
int
mov
or
sub
int
push
stos
popf
adc
jmp
and
fmull
das
sti
jb
sbb
mov
adc
repz
xor
js
jbe
mov
inc
sbb
dec
cmp
pop
jb
insl
scas
xchg
movsb
out
push
pop
lret
jno
xor
sub
jle
mov
addr16
pop
fsub
aad
fwait
add
xchg
insb
out
jo
mov
xchg
adc
mov
stc
fidivrl
xchg
ror
mov
jae
leave
lods
insl
jno
xchg
pop
outsb
fwait
mov
xlat
add
push
test
test
push
ja
data16
pop
outsb
test
mov
dec
cwtl
imul
add
mov
mov
gs
es
ret
rcrb
and
test
mov
lret
mov
jns
jo
out
xchg
aam
je
pop
xchg
js
xchg
pop
int3
setae
jg
mov
ror
movsb
outsb
in
ds
out
mov
incb
ds
fsubl
sbb
mov
or
push
fildll
outsb
add
push
scas
in
dec
cltd
call
mov
jne
cmp
inc
push
les
or
cmp
fistl
inc
adc
xchg
into
mov
das
pop
jecxz
mov
jmp
data16
cmp
dec
lahf
mov
cmc
aaa
inc
xor
xchg
mov
out
outsb
pop
or
leave
fdivs
mov
fstps
iret
enter
rcrl
xor
test
dec
pop
insb
rep
sub
ret
cmpsb
xor
icebp
sub
ror
pop
aam
jecxz
push
out
xorl
push
add
jmp
xor
mov
cmpsl
mov
push
in
inc
arpl
mov
test
out
fldcw
xchg
inc
inc
jno
cwtl
push
stc
or
rcrb
dec
adc
ret
test
push
xchg
repnz
lock
xor
ret
sahf
xor
call
cmp
sub
adc
or
js
jmp
mov
push
xor
push
out
fimuls
mov
lods
xchg
xchg
push
leave
call
gs
cmp
jecxz
pop
je
xchg
cmpsl
or
ljmp
adc
sar
pop
lahf
cwtl
decb
push
mov
lcall
iret
daa
inc
sbb
aad
xor
mov
cmp
dec
jnp
sub
jmp
test
mov
jo
push
xchg
xlat
shll
lods
inc
push
mov
ja
pop
mov
mov
repz
xor
addr16
cltd
cmc
dec
sbb
mov
xchg
jb
inc
xor
lods
push
xor
and
lcall
aas
push
out
mov
in
bound
xlat
push
inc
add
cmp
mov
dec
daa
inc
push
xor
xor
cmc
ja
adc
mov
or
pusha
inc
push
js
rcll
dec
sub
mov
add
andb
push
idivl
jno
out
inc
pop
dec
pop
sahf
xchg
cmp
rcr
xor
cmp
inc
sub
data16
mov
or
and
jno
jp
xor
js
mov
out
sub
mov
mov
out
sub
dec
mov
addr16
jecxz
adcl
pop
lahf
mov
xor
rcl
inc
out
push
inc
shlb
xlat
aam
sbb
dec
pop
lea
out
inc
sti
push
sbb
fldcw
jo
xor
mov
mov
outsl
imul
cmpsb
in
in
fidivs
mov
loop
nop
ret
shlb
dec
inc
js
mov
inc
cli
add
loope
mov
pop
cmp
jo
orl
adc
gs
aaa
mulb
or
loop
sub
fstpl
fmul
mov
push
push
ficoms
and
inc
jmp
out
add
push
repnz
push
aaa
out
insl
xor
and
and
in
shl
xchg
add
js
pop
scas
decb
out
sub
xlat
fisubs
inc
scas
xchg
mov
adc
flds
shll
imul
hlt
pop
dec
in
and
repz
repz
outsb
enter
fwait
js
sub
inc
push
mov
sahf
nop
roll
mov
xchg
mov
cmovbe
jno
pop
js
jp
pusha
push
fidivs
cld
pop
imul
out
lcall
sbb
loop
cmp
mov
imul
push
lds
or
push
mov
sbb
and
subl
imul
push
in
dec
sub
pop
push
nop
push
dec
shrb
lods
cmp
std
movsl
xor
jno
xchg
pushf
out
cltd
addr16
push
pop
ret
adc
lods
push
leave
pop
lret
popa
dec
in
es
sub
xchg
sbb
add
imul
adc
push
push
call
add
sub
mov
mov
popf
repnz
pop
lods
mov
hlt
cmpsb
lods
jns
adc
idivl
into
bound
mov
aam
dec
xchg
popf
push
cmpsb
lods
cmp
inc
daa
loope
mov
fcmovnb
sub
cmp
sarl
gs
les
js
arpl
adc
sbb
push
nop
adc
sub
loope
in
push
cmc
xor
dec
orb
dec
xchg
push
jg
mov
mov
xchg
add
push
add
adcl
mov
pop
sbb
add
cmp
lds
repz
sahf
jae
jne
fstpl
cmp
les
xor
fbld
and
inc
adc
lods
data16
pop
andb
loope
or
jle
enter
fbstp
add
adc
loope
jg
inc
dec
popf
adc
test
inc
sbb
sbb
subb
pop
and
aad
stc
les
mov
pop
adc
jns
mov
int
fcoml
jg
test
jb
jns
lahf
lret
jb
fistpl
fisttpll
mov
add
dec
xchg
jae
sahf
call
or
dec
aad
xchg
ja
push
lahf
lret
pusha
or
imul
cmpsl
sbb
fstpl
and
enter
sti
cmp
popf
pop
repnz
les
les
xchg
mov
mov
outsb
ljmp
and
arpl
xor
inc
fwait
loope
int
dec
mov
dec
and
sbb
xor
popf
mov
es
fwait
xchg
popa
mov
push
pop
cmp
loopne
outsl
inc
jno
lock
lcall
in
fildl
je
and
test
call
dec
insb
adc
test
fcmovnbe
hlt
dec
xor
sbb
and
cwtl
dec
movsl
divl
xchg
xchg
fwait
loop
test
jmp
shrb
jbe
pushf
mov
jg
clc
and
or
scas
out
iret
xchg
cmp
and
dec
xor
je
aad
mov
add
js
aam
cwtl
or
xor
mov
sub
popa
xor
adc
xchg
push
imul
xor
mov
shll
lret
imul
aad
into
stc
mov
fs
movsb
pop
lcall
jne
insl
out
and
pop
pop
ljmp
iret
mov
movq
mov
rcrl
scas
xchg
mov
leave
xchg
pop
xchg
les
mov
das
pop
xor
fs
xchg
sahf
call
jae
imul
inc
mov
fidivrs
test
jo
rcll
insl
mov
mov
or
popa
test
lret
xchg
loopne
sub
test
cs
dec
dec
es
mov
mov
sub
inc
sahf
adc
pop
in
les
pop
push
pop
pop
stos
movl
sti
xchg
pusha
sarb
daa
dec
cwtl
xor
pop
fisubl
in
xchg
rcl
iret
xor
xchg
nop
ljmp
and
jge
mov
sbb
inc
mov
andb
sbb
in
mov
mov
adc
cmc
lods
mov
stos
add
push
in
sbb
push
pop
lahf
adc
jae
ss
jp
das
lret
lret
out
test
jbe
push
lahf
pop
iret
inc
jle
add
inc
jnp
adc
in
xor
ss
test
rorb
jbe
les
movsl
sti
xorb
outsl
cli
ret
push
jno
daa
sbb
mov
push
imul
xlat
and
stos
mov
cmp
mov
sub
jmp
ja
lea
nop
or
cli
xor
mov
fs
fisubrs
inc
xchg
or
adc
outsb
hlt
xchg
sub
gs
lds
or
mov
push
xor
mov
addr16
inc
sbb
ss
pop
sbbl
mov
int
jb
out
pop
std
loop
sahf
jmp
add
leave
int3
scas
adc
outsl
mov
push
ljmp
or
and
bound
mov
mov
std
cmp
sub
dec
ficomps
das
rorl
jae
cwtl
inc
pushl
or
cltd
stos
lods
nop
cmp
cmp
in
test
push
pop
ss
or
sub
pop
es
mov
pop
and
sub
or
xorb
pop
mov
and
mov
jns
sub
leave
sbb
aas
jne
sub
xchg
jo
and
mov
cmp
dec
insl
mov
test
js
add
scas
scas
shll
pop
pop
lods
lock
or
mov
mov
jp
push
push
fcoml
fcomps
dec
add
lods
jge
arpl
mov
negl
or
sub
cmp
adc
mov
sub
out
inc
pop
mov
movl
test
outsl
inc
cmp
addr16
inc
add
xor
xor
jmp
test
add
jle
lods
add
test
add
int
lock
dec
xor
xchg
cmp
mov
aam
jb
cmp
sar
inc
fisttps
mov
sbb
inc
jns
jp
and
shl
jge
enter
ret
aad
sbb
sub
mov
fs
jmp
or
mov
and
adc
cmp
lea
lret
push
enter
into
in
xor
movsb
cmp
xor
push
lea
and
xchg
imul
and
enter
mov
stos
mov
fwait
das
lock
push
adc
xchg
fs
and
add
daa
js
pop
sbb
test
push
push
xor
xor
cmp
sub
push
xor
xor
decl
xchg
test
and
iret
leave
pop
cmpsl
add
ret
test
cltd
inc
lcall
inc
sti
fists
mov
negb
xlat
pop
imul
seta
rcll
in
pop
push
fisttpll
xchg
inc
pusha
push
lods
test
push
push
mov
test
jl
or
adc
test
pop
add
sahf
cmc
das
std
popf
sti
outsb
mov
add
pop
inc
cmp
adc
pop
outsl
loopne
dec
jp
gs
mov
aam
mov
mov
stos
repnz
add
popf
add
mov
rcl
cmpsb
lret
dec
add
xor
aam
push
dec
iret
popl
cmp
popf
mov
xlat
lock
and
jg
hlt
and
adc
push
xor
or
inc
pusha
scas
xchg
mov
jecxz
cwtl
jle
add
lds
in
jae
xchg
repnz
popf
pop
sbb
inc
cwtl
cmp
cwtl
mov
push
movsb
adc
mov
push
push
inc
mov
adc
out
jge
sarb
pop
mov
xlat
inc
repz
and
xor
mov
je
jb
inc
and
dec
into
cmp
and
mov
inc
mov
js
aaa
inc
sbb
lcall
stc
mov
imul
push
jge
jecxz
lock
jge
lock
push
pop
pop
xor
xchg
decl
sti
shrl
push
mov
push
leave
sti
loopne
aas
push
movsb
popf
int
test
sbb
mov
mov
stos
les
push
fisubrs
mov
rclb
out
sub
iret
pop
push
dec
mov
sti
loopne
in
mov
shr
int
inc
fisubl
xchg
cmpsl
movsl
add
adc
das
ja
dec
sbb
jbe
xlat
mov
repz
xchg
mov
jo
addr16
je
sub
pop
sbb
andl
lock
ds
pop
mov
pop
loop
adc
jae
sbb
test
test
loopne
aam
mov
mov
push
or
push
push
std
jl
sub
cmp
or
ja
xor
cmp
xor
or
stos
test
mov
mov
mov
aam
push
lods
push
pop
and
cmp
sub
and
xor
loope
insl
sub
inc
loope
testl
mov
fnstcw
xchg
or
dec
push
mov
pushf
cmpsb
cmp
mov
lahf
mov
xor
cmc
jmp
pop
data16
push
sub
push
popa
int
xchg
cmc
push
cwtl
adcl
cmpsl
push
push
out
mov
ss
inc
rcrb
test
mov
in
sub
test
dec
mov
pushf
push
call
push
pop
out
mov
or
mov
inc
je
shlb
sbb
jb
hlt
or
cmp
mov
dec
pop
loopne
das
xor
fidivrl
or
sbb
push
setns
mov
out
sbbb
call
out
lods
cwtl
add
mov
shl
flds
xor
fwait
inc
jl
cli
cmp
emms
arpl
xchg
adc
sbb
nop
out
pop
pop
cmc
rcrb
adc
popf
lods
jne
and
adcb
gs
xchg
cmp
loopne
sbb
mov
das
jnp
in
add
sub
outsl
mov
in
inc
ret
sbb
and
sub
mov
jo
xor
in
loope
popf
mov
and
sbb
cmp
pop
and
dec
stos
dec
test
xor
xchg
in
adc
push
into
cltd
les
stc
mov
xchg
mov
jl
int3
aas
test
and
movsl
mov
insb
ret
scas
sub
lret
fstl
mul
sahf
xchg
out
push
ds
jns
cmpb
or
jno
mov
scas
insw
push
jmp
arpl
std
les
je
lods
xchg
push
pushf
addr16
leave
inc
pop
jmp
bound
or
xor
pushf
fisubs
xor
jne
std
cmpsl
pusha
pop
mov
lods
pop
bound
inc
pop
xchg
std
or
popa
or
test
jne
jmp
dec
mov
dec
add
les
imul
lea
cltd
xchg
enter
test
cli
int3
cmpb
jp
push
push
jmp
mov
test
jae
out
inc
iret
sbb
mov
aad
dec
sub
or
xchg
adc
outsl
xor
inc
sub
mov
sbb
sub
mov
daa
ja
and
aam
add
lcall
out
xchg
cwtl
pop
into
popa
mov
and
in
xchg
jecxz
aam
leave
pop
outsl
mov
push
dec
or
xchg
mov
sbb
cmp
mov
test
and
mov
mov
push
out
xorb
repz
xor
mov
dec
negl
push
stc
cli
cltd
sbb
ret
clc
dec
cmpsl
stos
inc
js
negb
inc
popa
arpl
pop
sub
add
push
fstps
out
dec
mov
imul
cmp
cs
fimull
push
aas
popf
sub
inc
fdivrl
ret
scas
daa
mov
xchg
js
arpl
stc
sti
add
jne
xor
adc
add
push
mov
or
outsb
das
arpl
push
cmc
dec
mov
lods
ja
mov
fistl
in
pop
je
pusha
mov
gs
mov
imul
xor
sbb
or
pop
sbb
inc
add
jae
aas
std
ret
out
mov
xlat
scas
mov
jne
pop
and
insl
repnz
push
mov
jbe
and
sub
mov
lods
out
push
adc
pop
sbb
pop
mov
mov
push
xor
jnp
imul
mov
test
dec
ja
test
push
dec
inc
cmpb
cmp
push
cmp
jb
pop
repz
or
mov
mov
testl
scas
jge
xchg
mov
fldcw
xchg
and
fwait
rorl
or
add
shll
shll
aad
out
and
loope
lcall
cwtl
mov
les
sahf
mov
push
inc
test
xchg
jg
test
out
pop
inc
fsubl
mov
icebp
loopne
int
mov
cwtl
adc
dec
div
mov
pop
adc
insl
les
in
iret
add
dec
pop
imul
xor
add
aaa
je
cmp
xchg
jmp
call
fstps
pop
ja
aas
imul
push
mov
mov
push
and
roll
mov
test
enter
sbb
dec
dec
nop
lock
push
cld
into
cmpsb
adc
mov
sbb
mov
aad
adc
adc
loop
or
pop
lods
dec
sti
lock
dec
mov
test
pop
test
arpl
mov
mov
jne
mov
mov
ret
movsb
or
pop
xor
sub
cmp
imul
mov
cmp
inc
pop
divl
jbe
mov
jns
js
movsb
adc
mov
shl
fwait
jg
hlt
jae
movsl
xor
std
adc
int
scas
pop
and
sbb
stc
fucomi
lea
call
dec
sahf
gs
jg
pop
insl
adc
mov
push
dec
xchg
ds
aam
inc
jge
dec
cmpsl
sbb
in
push
int
adc
and
outsb
push
pop
jae
mov
cmp
inc
pop
mov
mov
fdivrp
lcall
into
push
mov
bound
pop
das
call
es
xor
movl
mov
movsl
ds
cmp
bound
in
andl
lret
int3
xchg
cli
stos
int3
loop
fnsave
cmp
push
pop
xor
test
punpckhwd
out
xor
jns
sbb
in
shr
xor
in
shlb
jg
adc
pop
stos
inc
les
jle
xchg
xchg
xor
cmp
pusha
pop
mov
jno
ret
repz
mov
adc
movsl
push
ret
stc
filds
stos
shlb
loope
loopne
sbb
adc
sub
push
cwtl
mov
daa
push
pop
cmp
adc
or
mov
mov
ficoms
mov
lret
sti
xlat
inc
stc
adc
fwait
ror
jae
movsl
imul
int
out
xor
mov
loopne
icebp
popa
mov
mov
cmp
or
xchg
xchg
sub
inc
push
imul
inc
loope
ret
daa
nop
push
fs
mov
mulb
inc
ror
inc
dec
and
mov
pop
push
jmp
xchg
xchg
push
pusha
xchg
push
adcl
dec
xor
dec
push
jbe
lock
ss
test
sub
inc
sahf
stos
sti
shlb
mov
inc
dec
dec
push
ret
shl
add
jo
inc
ret
aam
mov
js
push
add
push
out
mov
cmpsb
loope
hlt
inc
dec
bound
fildl
xchg
push
lods
push
in
fwait
mov
push
push
mov
mov
das
sbb
insb
ljmp
push
push
neg
dec
movsl
cld
les
cmp
shld
enter
loop
pusha
mov
int
xchg
jecxz
pop
jb
lods
ret
lea
lods
or
sbb
int3
jb
cmp
cmp
cmp
mov
dec
add
xchg
cmp
or
mov
cli
jl
adc
ja
mov
xchg
cmc
popf
cli
jmp
sbb
add
fisttps
out
sbb
pop
gs
mov
mov
adc
scas
xchg
xor
cltd
xor
dec
inc
sub
mov
jno
mov
ljmp
mov
adc
sbb
lea
push
lods
xchg
lods
jno
push
jbe
cld
les
rolb
call
mov
out
cltd
xchg
rorb
out
xor
sbb
jl
jecxz
inc
adc
jno
arpl
das
in
jp
inc
lods
cmc
ret
pop
fbstp
jo
jne
add
lret
lock
adc
popa
jl
xor
pop
daa
out
dec
sub
dec
mov
inc
int
inc
adc
and
pusha
icebp
mov
rcll
scas
push
push
mov
lret
jmp
add
add
mov
testb
scas
or
push
jmp
out
cmpsb
cwtl
cmpsb
xor
ja
repnz
cmpsb
xor
hlt
in
inc
das
aam
scas
cld
mov
adc
pop
es
shlb
and
leave
subl
adc
out
cli
imul
jp
jo
orl
subl
pop
cmc
push
push
in
and
je
push
xchg
leave
jae
aaa
shl
mov
push
ss
out
lea
sub
dec
sahf
gs
xor
outsl
rclb
and
pop
call
mov
push
push
mov
mov
push
inc
lods
fwait
pop
pop
cmp
mov
je
jmp
push
mov
in
stos
js
decb
adc
jge
cmc
inc
adc
aad
aaa
pop
push
sub
sub
adc
ret
ss
in
jno
fwait
repz
jnp
xchg
outsl
jb
jmp
notb
push
jno
sbb
fidivrs
add
popf
outsl
sbb
aaa
lea
and
push
or
sub
push
gs
call
dec
jnp
xchg
xchg
mov
jo
jmp
push
cmp
cltd
shlb
xor
adc
movsb
jge
jnp
and
jle
pushf
fbld
test
jae
in
mov
push
ja
pop
pop
jmp
inc
xchg
leave
add
xor
test
andl
in
out
pop
hlt
sarl
push
mov
testl
ja
outsb
dec
mov
mov
mov
mov
ret
fcmovne
and
lcall
int3
daa
sbb
setl
push
add
cmp
sub
hlt
lret
aas
mov
pop
loope
call
sub
adc
jle
adc
xor
lods
mov
push
cs
mov
cwtl
leave
enter
leave
clc
insl
add
push
js
xor
jne
into
js
lret
imul
repnz
test
lret
std
mov
dec
cmc
fdivrs
sbbl
fnstsw
mov
lds
lea
aas
push
nop
int3
mov
xor
dec
call
loope
jns
jb
lods
fs
mov
lcall
pop
cpuid
adc
jle
adc
icebp
sbb
cmp
cwtl
scas
cmpsl
and
push
dec
aaa
iret
inc
xor
push
arpl
lret
push
std
jb
dec
pop
ret
cmp
push
outsl
xor
mov
mov
pop
shll
aas
xchg
aaa
or
sub
cmp
lret
aam
and
addl
mov
lret
ds
pusha
and
mov
sbb
sbb
inc
insb
shlb
xchg
jmp
rcr
cli
dec
cld
mov
ror
add
dec
push
mov
xor
mov
push
sbb
shll
push
rcr
inc
fsts
in
bound
xchg
icebp
or
jle
dec
push
stos
mov
subl
lret
repnz
mov
push
gs
pop
push
xchg
cld
stos
out
cli
lret
mov
and
push
sahf
adc
push
data16
pop
add
xchg
cmp
fs
ds
std
movsb
ja
push
fcomps
sub
and
cmp
je
ss
dec
and
hlt
xchg
xor
addr16
mov
ficomps
movsb
mov
jae
hlt
or
jne
xchg
ja
aad
push
push
push
out
sti
ja
cld
mov
pop
sub
aam
xor
cmp
and
dec
or
test
jb
shrb
cs
insb
jecxz
mov
adc
jmp
push
adc
push
jmp
jl
je
push
es
aaa
cmpsl
sbb
test
mov
call
inc
stos
mov
dec
lahf
lcall
dec
sbb
push
jb
xchg
sbb
mov
hlt
mov
mov
and
and
mov
inc
sub
mov
gs
in
adc
ficoml
xchg
out
jge
xchg
xor
adc
outsl
pop
push
sbb
xor
test
ss
dec
mov
cld
mov
pop
add
mov
dec
dec
cmc
mov
cwtl
les
jp
sub
das
jno
arpl
lahf
xor
aas
outsb
xchg
imul
jmp
sahf
aad
aam
mov
sbb
ja
push
jg
xchg
jmp
aaa
mov
pusha
jl
stos
push
inc
jmp
cli
fwait
icebp
popf
ja
dec
jecxz
xchg
push
mov
or
xor
sub
inc
mov
jae
lahf
dec
mov
add
inc
add
repz
dec
add
imul
jno
out
mov
cwtl
cmp
leave
lds
imul
movsb
or
mov
adc
cmp
nop
xchg
pop
and
data16
mov
push
or
pop
sbb
pop
or
pop
or
dec
sub
jae
call
xchg
add
pop
das
sub
nop
cmc
js
fildl
gs
push
sar
add
cmp
std
mov
cmpsl
dec
mov
sub
ja
dec
push
add
inc
es
inc
je
xchg
insb
pushf
adc
mov
imull
xchg
adcb
jecxz
cmp
push
inc
aaa
test
in
sbb
subl
push
lea
mov
nop
or
jecxz
push
aam
sub
mov
pop
pop
mov
jae
push
movl
xchg
sub
jl
cli
xchg
pop
int
or
jno
mov
test
cli
lret
mov
outsl
add
xchg
rcll
inc
cmp
mov
scas
iret
add
js
test
repz
cs
rcl
xchg
and
add
mov
jle
shl
and
jb
cmp
imul
mov
outsl
sbb
dec
dec
mov
inc
cmp
sarb
lret
pop
adc
mov
and
sub
cmp
data16
arpl
mov
mov
hlt
xchg
sub
adc
xchg
stos
clc
mov
mov
idivb
div
inc
daa
fildll
ret
sbb
mov
clc
lcall
subl
cmp
or
rcr
push
or
mov
sub
bound
imull
movsl
pop
movsl
inc
movl
jmp
mov
push
test
xlat
int
jne
imul
pop
xlat
adc
int
stc
daa
add
ret
xchg
fdivs
cmpsl
cmp
test
jp
mov
subb
out
mull
addb
push
sub
out
inc
in
pop
in
stos
cmp
pop
leave
loope
dec
out
decl
popa
shlb
push
lock
std
pushf
mulb
adc
popa
repnz
lea
mov
jns
sbb
arpl
jmp
and
mov
and
jmp
es
inc
adc
fucomp
les
push
ss
sub
inc
xor
lea
ss
psubusw
test
push
push
jle
and
sub
push
push
lods
add
mov
cmp
scas
fwait
sbb
mov
rorb
and
pop
or
addl
mov
dec
push
ficomps
and
mov
xlat
jns
inc
lahf
mov
icebp
lahf
xlat
mov
outsb
adc
dec
push
lret
ss
and
je
addb
mov
mov
out
loop
shlb
repz
aam
xchg
xor
cld
test
in
int
int3
iret
xchg
out
mov
es
cmp
popa
push
subb
inc
outsl
push
out
dec
pop
stos
inc
xchg
add
sbb
add
jo
inc
add
aam
add
cmp
scas
pop
dec
pop
xchg
jo
add
stc
push
repz
xchg
shrl
dec
dec
movsb
cmp
dec
dec
mov
pop
add
aad
xor
cld
popf
mov
mov
ret
pop
xor
and
xor
fstps
sahf
lcall
rclb
mov
sub
xlat
js
xor
push
out
hlt
repz
outsl
mov
adc
xchg
jb
jmp
test
js
dec
ljmpw
xor
aaa
mov
and
mov
into
outsl
pop
fwait
aas
dec
imul
push
sub
loopne
shll
sub
fcmovu
aam
jmp
dec
dec
inc
loopne
or
fsubrs
pop
sub
inc
leave
sub
dec
enter
addr16
mov
mov
adc
mov
std
mov
xchg
cmp
or
xlat
sub
mov
sub
lods
cltd
push
push
mov
pusha
or
out
pop
sub
test
xlat
or
jge
imul
xchg
test
xor
push
subb
xlat
hlt
das
scas
sahf
call
les
pop
dec
jge
jecxz
aas
hlt
jle
dec
xchg
push
and
iret
cmpsl
push
cwtl
inc
push
add
and
jle
fs
jmp
cld
sub
aaa
mov
mov
cmp
aam
cmc
pop
sub
cltd
mov
js
pushf
into
mov
stos
sbb
mov
cmp
sbb
push
mov
cmpxchg
push
pop
dec
jno
pop
cmp
jnp
push
lods
inc
insl
add
shlb
add
jp
adc
notb
lods
test
fadds
leave
sti
dec
sbb
sbb
jp
ds
cwtl
mov
push
cmp
sbb
pusha
sti
imul
or
xor
xchg
sub
mov
and
xchg
inc
sbb
jns
jp
add
and
mov
shll
ja
cmp
es
call
jmp
fadds
sbb
bound
jp
daa
add
pop
bound
inc
ja
mov
in
stc
push
lcall
sbb
aaa
mov
lret
lea
mov
test
icebp
fcmovne
lock
push
sbb
dec
jne
add
xchg
in
adc
pop
sarb
dec
mov
clc
loop
dec
test
dec
xlat
cmp
sbb
ret
int
sar
outsb
push
fmul
pushf
mov
add
and
sbb
and
mov
out
mov
mov
dec
iret
and
add
mov
outsl
inc
ljmp
xchg
mov
sbb
push
xor
int3
sti
movsb
fists
popf
loop
int
mov
out
jmp
fidivl
psllw
lcall
add
or
cmpsl
cli
pop
shll
mov
xchg
leave
in
push
movsb
fs
mov
dec
cmp
xor
movsb
imul
lret
lcall
mov
mov
or
push
call
fsubrp
push
adc
mov
lret
out
nop
xor
scas
popa
repz
out
mov
xor
adcb
jno
pop
rolb
push
mov
lods
jb
popf
mov
add
repz
pop
mov
adc
push
lock
mov
subl
xlat
and
sub
jecxz
vcomiss
mov
inc
mov
sbb
and
mov
push
es
push
mov
decl
pop
gs
mov
push
sarb
iret
cmc
lahf
mov
jle
lock
stos
inc
lret
cmp
xchg
insl
jb
jne
test
imul
out
jb
cmp
jmp
sub
inc
dec
insl
shl
mov
cmp
pop
mov
imul
lods
leave
xor
je
mov
ljmp
ss
adc
pusha
imul
nop
push
jp
sub
pop
rclb
mov
repz
outsl
call
or
cmp
fucomp
pop
sti
bound
imul
push
mov
call
mov
scas
sub
ret
insl
add
inc
sbbb
jno
jecxz
adc
dec
roll
inc
leave
test
pop
jbe
imul
bound
push
cltd
xchg
movsb
mov
fmuls
sbb
cmp
push
or
push
ret
pop
pop
or
and
loopne
jle
test
add
clc
push
mov
arpl
pushl
xor
jp
subb
mov
mov
mov
inc
out
fiadds
imul
mov
out
dec
aam
lcall
faddp
mov
inc
ffreep
lcall
push
and
xlat
mov
in
int
xorl
or
in
push
push
sti
pusha
std
inc
sbb
cwtl
adc
mov
adc
shl
das
adc
or
push
cwtl
sub
stos
mov
and
fistps
adc
lea
insb
adc
add
pusha
or
push
bound
repz
push
aaa
jnp
mov
and
add
shll
fnstsw
in
jge
pushf
ftst
push
xor
in
orl
inc
rcrb
je
scas
mov
popf
into
adc
xchg
sbb
movsb
daa
push
in
dec
jnp
adc
or
movsb
lahf
or
sahf
jge
push
gs
test
adc
lock
push
outsl
js
mov
inc
jne
fadds
cmpb
mov
jecxz
xor
scas
std
jb
bound
sub
js
sti
clc
in
arpl
pop
push
jl
fs
outsl
aas
and
fisttpl
lods
lahf
outsb
jo
out
ficompl
std
arpl
and
mov
insb
mov
push
mov
dec
jae
push
xchg
add
shlb
loope
mov
sbb
dec
popf
sub
test
scas
lahf
arpl
mov
sub
clc
pop
jmp
cmpsl
push
mov
scas
dec
dec
pop
aas
pushf
cld
mov
jle
sarb
sbb
scas
stos
cmp
mov
dec
jle
add
xchg
pop
int
xchg
stos
mov
mov
repz
mov
adc
in
sub
and
dec
jo
add
xor
mov
adc
cmpsb
cmpsl
xchg
xor
inc
push
xchg
sub
lock
call
jecxz
stos
mov
xchg
or
lock
sbb
push
ds
jbe
ljmp
inc
inc
mov
xor
mov
mov
adc
jl
mov
out
inc
sbb
xor
pop
leave
jle
test
or
and
or
sbb
mov
mov
cli
out
or
xchg
lods
xchg
dec
xchg
add
add
cmp
pushl
sub
or
mov
test
xchg
cli
jle
adc
loopne
mov
popf
adc
xor
add
stc
out
jg
and
ja
dec
call
adc
fdivrl
xchg
outsb
call
and
cld
jo
outsl
xlat
addr16
sbb
push
scas
shr
rcrl
mov
in
aaa
adc
cmp
mov
mov
pop
sub
pop
popa
sbbb
lods
lahf
jmp
leave
sbb
mov
lret
popa
or
add
pusha
mov
daa
mov
addr16
sub
mov
mov
push
pop
pop
lahf
scas
mov
mov
es
outsl
cmc
xchg
mov
or
jp
fimuls
jno
test
xchg
out
leave
rcr
and
les
loopne
dec
fisubrs
inc
out
xchg
iret
jmp
and
repnz
jbe
pop
push
pop
in
inc
out
outsl
or
ficomps
mov
push
cs
lea
pop
pop
cmc
popa
mov
lods
stc
jp
xor
enter
xchg
das
cltd
inc
imul
leave
mov
lcall
dec
push
jns
cli
or
cmp
jb
mov
push
or
sti
js
lock
mov
add
cmp
dec
lcall
mov
push
mov
shl
mov
lods
lods
sbb
mov
cs
rclb
sbb
ret
dec
and
ljmp
ds
ljmp
push
clc
popa
mov
jle
pushl
mov
enter
imul
xor
nop
sbb
sub
mov
adc
jmp
repz
cwtl
jmp
push
add
sti
adc
pop
xor
das
dec
sub
xor
dec
inc
call
rol
inc
jnp
leave
sub
xor
int
lods
sbb
out
test
xor
hlt
cmp
fisttpll
xchg
aaa
jcxz
cmpsl
adc
aas
idivb
and
mov
mov
pushf
ja
aam
sub
cmp
clc
or
stc
xchg
ss
pop
add
daa
scas
mov
incl
push
push
fmul
loope
mov
dec
inc
rcrb
xor
mov
nop
outsl
packsswb
dec
cmp
popf
inc
mov
pushf
fs
mov
mov
dec
push
xchg
icebp
jb
pop
push
pop
xchg
jmp
pop
in
into
or
popa
sub
loope
pusha
cmp
mov
adc
lahf
dec
and
leave
lods
fimuls
xor
out
jmp
out
pop
sbb
lds
aaa
pop
xchg
insl
add
ud1
enter
cmc
imul
fstpl
inc
pop
xor
repnz
test
xor
ljmp
rorb
xchg
popf
add
out
imul
out
int
sub
jl
insb
or
adc
sbb
push
inc
and
lret
cmp
cmc
repz
mov
ficoms
add
iret
in
aaa
cmp
rolb
cmp
or
clc
mov
shl
orl
imul
fwait
inc
scas
mov
mov
sbb
jge
push
xor
in
mov
test
mov
insl
lcall
sbb
insb
jle
and
mov
inc
jns
popa
sub
mov
dec
mov
pop
scas
popf
mov
aaa
ficoml
pushl
and
and
loopne
loopne
outsb
sbb
test
aas
xor
bound
mov
pop
mov
jg
cli
or
inc
iret
ja
mov
inc
jle
mov
xor
inc
lret
sub
cmpl
and
aam
out
iret
or
xor
enter
xchg
sbb
xor
add
xchg
loop
enter
loopne
outsl
pushf
popf
shlb
mov
push
mov
hlt
sub
sahf
mov
add
icebp
sbb
jp
pop
cmp
jnp
xlat
push
ja
push
out
out
filds
push
xchg
imul
inc
jne
xchg
jb
cmp
adc
pop
into
mov
fwait
mull
jmp
sbb
sub
xor
sbb
inc
push
cmc
cmpsl
xchg
das
les
cmp
call
inc
in
pop
ljmp
cmc
mov
ret
mov
mov
mov
mov
rcll
inc
ss
outsl
int
cwtl
test
dec
cmp
mov
and
push
js
add
jns
mov
lcall
call
and
lahf
jns
jbe
das
sbb
gs
lods
ds
mov
jnp
outsl
aad
mov
sub
adc
or
pop
outsl
adc
or
lods
inc
or
arpl
mov
add
scas
mov
lcall
pusha
xlat
fstpl
sub
adc
aas
jl
outsb
push
cmp
sbb
jle
add
fistl
pop
jle
insl
xor
push
insb
cmp
inc
add
lea
mov
lock
sub
pop
xchg
repz
adc
lods
std
adc
add
mov
insl
out
mov
stos
mov
roll
mov
das
in
mov
sub
addb
call
cmc
mov
clc
pushf
pusha
leave
inc
test
dec
gs
sbb
jne
add
cmpsl
mov
das
sub
ret
mov
xchg
repnz
mov
sub
fimull
mov
scas
jno
ficoms
inc
popa
cmpsl
mov
sahf
ret
xchg
mov
lea
mov
inc
mov
mov
jo
fimull
sub
pusha
shrb
das
aaa
ljmp
fstps
pop
int3
pushw
xchg
add
xchg
sarl
scas
data16
jae
mov
sbb
inc
push
add
mov
mov
ret
ljmp
out
xchg
movsb
stos
add
dec
sbb
mov
movsl
sarl
stos
shl
in
add
cmpsl
and
push
shlb
and
pusha
and
rcrb
inc
jns
adc
jo
test
mov
sahf
pop
aaa
dec
in
and
jo
mov
call
xchg
sarb
or
scas
sub
mov
push
mov
or
pop
lods
xchg
dec
push
mov
jbe
arpl
incl
sarb
rcll
push
fsub
jne
pop
pop
push
aas
mov
gs
add
andb
add
enter
jnp
add
mov
inc
aas
xorl
add
imul
das
fdivp
push
mov
jae
sub
popf
and
clc
adc
cmc
inc
inc
test
pop
mov
cld
add
test
and
mov
leave
jmp
loope
xor
adc
add
aaa
orb
aas
cli
adc
cltd
and
jge
aam
inc
push
hlt
xchg
fld
mov
xadd
sbb
lods
pop
andl
inc
call
adc
adc
aaa
push
test
xchg
cli
clc
fmulp
shll
push
mov
pop
aas
les
add
mov
frstor
dec
push
lret
pop
inc
nop
add
pushf
outsl
sbb
call
jecxz
mov
pop
mov
cmp
push
cmp
or
xor
sbb
out
inc
pop
push
mov
xor
jecxz
inc
add
pop
les
int3
iret
daa
mov
vmovntps
mov
inc
pop
dec
xchg
data16
movsb
pop
repnz
mov
sbb
decb
jge
cmp
out
stos
add
in
pop
outsl
outsb
jb
inc
jmp
dec
lock
aam
sbbb
dec
adc
mov
jno
sub
or
sbb
ret
push
push
shlb
inc
mov
in
mov
inc
popl
out
fidivl
jmp
sbb
icebp
xor
mov
mov
xor
mov
das
push
dec
cli
cmp
mov
mov
adc
sub
idiv
imul
int
xor
decb
fcompl
daa
sub
pop
mov
push
leave
sbb
mov
and
ret
push
leave
shrl
loopne
adc
adc
and
pop
xchg
push
add
jne
daa
pop
inc
scas
push
bound
xlat
jle
pop
lods
outsb
aad
pushf
xor
xchg
cmpsl
loope
pop
xlat
pop
or
or
adcb
lret
out
clc
jno
out
imul
call
insb
xor
insb
mov
inc
test
push
lds
nop
es
std
rolb
shll
push
cwtl
sub
imul
mov
scas
fwait
inc
aad
inc
sub
push
sbb
dec
shlb
jo
push
je
inc
repz
push
aad
xor
xchg
call
pop
cmp
shl
pop
push
stos
mov
xchg
xchg
fs
push
and
pop
nop
lahf
ret
mov
bound
mov
jno
push
lret
out
dec
repnz
popf
inc
aam
mov
lret
jno
cli
scas
lahf
xor
std
and
jb
repnz
loope
enter
int3
pop
xchg
mov
stos
adc
push
cmp
add
sub
mov
cmp
pop
adc
insl
outsb
pushf
test
pop
mov
shlb
bound
sub
xor
insb
ds
pusha
dec
dec
mov
inc
insl
add
cltd
imul
xor
adc
dec
sti
xor
mov
inc
pop
and
sbb
iret
es
fidivl
int3
sar
or
mov
mov
ret
imul
lock
loopne
in
push
cmpsl
xchg
and
pusha
fs
adc
mov
and
push
dec
add
icebp
outsl
inc
test
imul
lods
and
cmpsb
mov
pop
leave
fldl
pop
fnsave
pop
sti
or
std
cmp
dec
js
rorl
aam
aas
sub
jecxz
mov
je
xchg
adc
ds
cwtl
jecxz
jne
popf
lds
inc
sbb
push
mov
insb
push
mov
test
mov
add
mov
cmpsl
push
mov
xchg
outsb
ljmp
jno
mov
mov
rcrb
pushf
and
inc
jb
ljmp
std
adc
mov
mov
pusha
loope
ljmp
sub
mov
inc
fwait
subb
icebp
xchg
xchg
sub
sbb
adc
lock
scas
outsb
jl
leave
aam
jns
cmp
sbbb
cwtl
inc
fildl
adc
mov
mov
frstor
mov
aas
data16
push
mov
xchg
lods
adc
in
mov
and
add
mov
fsubl
inc
lret
data16
cld
inc
in
fdivrl
and
call
cmp
rcrb
ds
cmpsb
aaa
stos
jle
or
xor
orb
rcrb
cmpsb
jle
dec
mov
mov
gs
out
popa
scas
dec
fiadds
and
andl
ja
sub
add
push
and
and
pusha
sub
and
es
cmp
dec
rorb
cmpsl
adc
pop
jg
inc
imul
push
mov
rcrb
pushf
out
loope
aad
lahf
mov
jae
xchg
xchg
jae
cmp
push
mov
mov
dec
inc
adc
cmp
fbstp
and
pop
pop
iret
test
push
jp
outsb
addb
pop
mov
sahf
fbld
jecxz
pop
xchg
xchg
inc
fiadds
push
dec
hlt
in
xchg
out
sahf
test
mov
sti
xchg
xor
int3
jl
jno
jns
mov
and
repz
push
mov
xlat
sti
mov
cmc
fsubrl
cmp
in
cmc
call
testl
pusha
sub
or
inc
xchg
cmp
cmc
jmpw
testb
outsl
into
push
sbb
pop
add
aaa
pop
jecxz
fmul
mov
and
enter
je
push
ret
jne
push
sub
mov
ror
push
dec
sub
cmp
dec
and
dec
mov
dec
daa
aam
stos
test
aad
lods
add
lods
cmp
jecxz
add
test
scas
repnz
xor
push
xchg
rolb
sub
inc
push
jnp
scas
leave
daa
xchg
arpl
xchg
loopne
push
push
sub
and
sbb
shl
adc
insb
sub
loop
aas
imul
pop
mov
hlt
mov
fnsave
sahf
arpl
in
imul
sub
stc
lods
out
lds
aam
and
fldl
push
jecxz
cmc
scas
aaa
dec
daa
das
jne
dec
or
lods
repnz
pop
sbb
xchg
lds
insb
pop
adc
cmp
sti
mov
icebp
popf
xor
sbbl
dec
or
test
xlat
pop
jle
inc
stos
inc
xchg
lret
inc
stc
fwait
sahf
test
cmp
fstps
or
mov
add
cmp
cli
inc
and
fwait
push
add
sbb
loop
daa
and
sarb
sbb
xor
lods
cmp
push
fmul
mov
xor
rol
push
adcb
jge
jl
jecxz
imul
pop
or
xor
rorl
ret
sarb
insb
cmpl
outsb
xor
in
mov
dec
add
mov
jg
cli
cmp
lret
inc
xlat
sti
xor
cmp
and
push
cmpsl
cmc
es
xchg
or
sbb
ss
loopne
dec
sahf
push
leave
pop
mov
xchg
cli
arpl
dec
testb
xchg
mov
xor
dec
push
ret
and
jl
emms
fmull
fnstcw
stos
sarb
jae
and
sbb
ret
ja
out
les
pop
stos
cmpsb
test
pop
fmull
jno
shlb
or
mov
mov
xor
test
mov
test
fmul
cmpsl
pop
rcll
mov
inc
outsb
inc
sbb
jge
inc
xchg
lock
push
pop
cmpsl
stos
jbe
je
fisubrs
cmp
mov
fistl
and
xlat
dec
push
inc
sahf
jb
sbb
mov
pushf
aas
cmpsb
aad
xchg
pop
aaa
cmpsl
sahf
cwtl
sbb
push
and
cwtl
adc
fiaddl
push
jne
fdivrl
jo
out
cmpsl
add
push
jbe
repnz
aad
aas
mov
add
daa
push
mov
cld
mull
mov
in
add
add
insb
push
loopne
inc
mov
mov
cli
add
push
jne
add
pop
pop
lock
out
push
in
pop
xchg
std
jle
add
rcrb
loopne
test
mov
movaps
popf
mov
inc
repnz
lods
scas
jbe
out
pop
push
and
lret
jo
cmc
lahf
popf
fwait
push
xchg
cltd
pop
push
subl
loope
arpl
adc
jg
cmp
rcrb
stos
xor
jbe
aam
and
dec
or
dec
mov
sbb
enter
imul
icebp
pop
f2xm1
dec
inc
xchg
inc
les
mov
adc
loop
mov
cmp
out
test
frstor
pop
mov
pushf
shlb
mov
lret
or
xor
jmp
fisubl
pop
out
mov
fmull
dec
pop
pop
dec
addr16
add
mov
xlat
fldt
lret
fidivl
cmp
cli
test
mov
repz
fsubrl
ljmp
cmpsl
ds
inc
ss
inc
shl
push
lret
push
add
adc
cs
mov
sub
movsb
add
xchg
shlb
repz
stos
mov
pop
out
call
dec
cmp
mov
fwait
sbb
enter
mov
xor
xor
push
add
jbe
je
dec
vpmaxub
mov
push
scas
push
mov
cmp
mov
inc
mov
or
push
out
sub
push
mov
mov
sub
and
cmpl
pop
push
xchg
cmp
adc
adc
sub
mov
fimuls
lret
negl
cs
gs
pop
add
push
enter
movsb
adc
sub
repnz
sbb
xor
jne
mov
or
stos
lea
or
push
lock
and
scas
imul
shlb
pop
xchg
or
arpl
mov
fildl
das
or
mov
lret
push
data16
test
scas
repnz
mov
addr16
test
shll
les
movsb
mov
jne
dec
cmp
jns
in
es
mov
mov
cmp
xor
mov
sbb
xor
pop
xchg
mov
in
stos
fiadds
in
pusha
jno
repnz
sbbl
jecxz
xor
sbb
test
popa
inc
and
test
and
pusha
cmpsb
addr16
daa
cltd
jae
or
lods
and
push
roll
repz
cmp
jge
push
mov
call
inc
leave
push
sub
ud1
xchg
cmc
popa
aaa
fs
mov
push
subl
mov
out
cmc
int
fidivl
pop
pop
inc
cmp
das
scas
daa
pop
pop
loopne
ret
test
lcall
pop
cmc
dec
pop
aad
mov
sub
movsl
popf
jo
mov
pop
and
imul
adc
test
pop
cmp
stos
lret
lret
pusha
inc
adc
lods
dec
adc
aam
pop
loopne
call
push
imul
stc
inc
icebp
idivb
add
sbb
push
push
mov
sub
push
data16
pushl
mov
ja
fists
fs
insl
pushf
lret
lcall
mov
fildll
repnz
lcall
sbb
hlt
and
mov
ret
std
add
fcoms
and
mov
lahf
dec
in
jl
lds
dec
leave
stc
rcrl
adc
xor
hlt
xor
mov
aam
push
sbb
add
jno
ja
xchg
adc
cmp
loopne
hlt
jno
out
scas
test
and
xchg
popf
scas
mov
repz
aas
movsl
inc
test
pop
into
mov
das
sbb
inc
add
roll
imull
dec
pop
push
fnstenv
movsb
movsl
in
cmp
and
mov
subb
adc
or
lods
add
and
add
mov
fldt
sub
jle
sub
xor
adc
loop
lods
insl
push
in
jmp
cmp
adc
push
std
dec
mov
push
dec
loope
jo
mov
jae
lret
xlat
sub
or
xor
repnz
and
and
stos
sbbb
aam
xor
fs
ret
daa
scas
and
iret
out
das
xchg
xor
shll
stc
call
iret
std
mov
sub
jg
mov
test
jno
xchg
and
dec
out
mov
jne
inc
xchg
fisttps
iret
mov
xchg
sbb
aas
mov
sbb
movsb
inc
push
fistpll
mov
sbb
add
push
addl
hlt
bound
dec
mov
call
lret
sbb
push
jnp
roll
adc
xchg
dec
and
stos
out
mov
push
fwait
loope
jg
stc
adc
std
addr16
test
dec
and
mov
movsl
adc
imul
inc
test
in
leave
adc
jp
outsl
mov
rcl
jge
ret
dec
repz
mov
mov
repz
hlt
xchg
mov
jb
pop
pop
shlb
cmp
incb
call
iret
sahf
dec
rolb
gs
or
lret
dec
js
in
emms
xor
idivl
jo
mov
in
sar
inc
push
cli
or
push
rcrb
repnz
imul
xchg
dec
push
jae
or
mov
sbb
adc
and
lcall
xor
aas
repnz
push
sbb
std
inc
aam
fisttpll
pop
push
mov
mov
repz
or
mov
jg
xor
test
stos
movsl
sbbb
js
or
pop
or
test
sub
clc
mov
pop
or
sbb
cmpsb
or
cli
pop
ja
sub
push
sbb
out
and
enter
stos
cmp
std
jnp
gs
and
imul
sub
pop
push
addb
shlb
xor
outsb
adc
pop
sub
pushf
popl
mov
loope
cmp
and
xchg
push
xchg
icebp
or
push
cmp
xchg
add
jmp
cmp
xchg
push
mov
into
xchg
cmpsb
shrb
add
jg
jne
mov
jmp
mov
cli
ret
rorb
fdivl
dec
sub
xchg
lods
orb
inc
cmp
imul
jp
dec
mov
loope
ss
xchg
sub
pop
and
ror
pop
push
ljmp
adc
popf
ss
push
pop
cmp
repnz
hlt
cwtl
stos
add
int
int3
dec
push
pop
int3
adc
ret
pop
push
inc
inc
repnz
jg
bound
push
push
nop
imul
mov
cmp
xchg
in
in
dec
in
mov
and
mov
outsb
hlt
cmp
les
hlt
pop
cmp
cwtl
jle
cmp
cmp
mov
pop
push
lahf
scas
push
cs
lock
cld
dec
fs
push
pop
rorb
arpl
sbb
xchg
daa
pop
js
push
call
shrl
sbb
cmc
pusha
out
insl
mov
pop
test
cmp
sbb
repnz
and
mov
dec
xor
cmc
popf
lods
or
fwait
cli
dec
iret
sub
and
das
add
fs
repnz
std
pop
roll
mov
or
pop
pop
int
dec
shlb
cmpsl
dec
xchg
pop
js
xchg
test
into
loopne
movsl
pop
in
adc
lret
lea
stos
pop
pop
cmpsb
mov
pop
mov
push
mov
cmc
pop
jecxz
lcall
lret
adcb
mov
lcall
inc
cli
std
mov
outsb
daa
lds
pusha
xlat
cmc
aad
iret
adc
scas
lods
je
or
cmpsb
icebp
fwait
std
movb
sub
add
add
add
adc
dec
sti
push
addl
int3
mov
std
sub
dec
pop
adc
jb
jecxz
and
frstor
or
jmp
movq
js
or
fs
mov
lcall
addr16
push
subl
push
rcll
and
xor
out
test
and
jbe
or
jg
and
arpl
nop
rcl
xchg
cmp
insb
xchg
cmpsb
mov
mov
negl
pushf
sahf
pop
outsb
pop
fimuls
aas
and
cld
inc
xor
mov
adc
je
dec
mov
adc
lcall
stos
aaa
add
inc
push
loopne
icebp
mov
lock
js
push
mov
dec
or
rclb
mov
sbb
call
test
cmp
add
pop
test
imul
popa
pop
lret
jg
lock
mov
push
or
daa
stc
push
sub
repz
test
jo
fcomi
sub
adc
jae
insl
arpl
push
ret
call
jb
add
fcomip
mov
out
xchg
jge
cmpsb
or
cmp
adc
dec
cs
or
push
jl
pop
ja
out
int3
jp
cli
xchg
scas
jne
fnstenv
jnp
ds
sub
adc
ret
xor
xchg
cmpsb
imul
scas
andb
push
xchg
jge
add
sub
rolb
jns
arpl
dec
pushf
mov
roll
xchg
push
mov
sub
sahf
or
and
mov
mov
cmp
adc
cs
or
and
gs
jg
lcall
pop
in
mov
imul
hlt
call
sub
rcrb
out
out
pop
out
jecxz
cmp
nop
orb
adc
ja
xchg
xchg
jb
aad
iret
ficoms
mov
add
jle
ljmp
or
pop
imul
movsl
pop
and
mov
fistpl
inc
jecxz
adc
cmpb
adc
push
jg
add
mov
imul
xchg
jne
inc
out
inc
hlt
push
shrb
cmp
push
stos
pop
test
mov
or
test
cmpsb
sbb
mov
movsl
adc
push
lds
out
push
insl
jbe
aas
outsl
push
push
sub
jbe
jp
mov
call
cmpsl
idivb
out
mov
jmp
nop
mov
imul
dec
fiaddl
mov
jl
jne
imul
arpl
push
shrl
xor
cmpsl
dec
add
sbb
dec
popf
js
or
test
outsb
push
mov
int3
daa
adc
ljmp
sbb
addr16
mov
add
cmp
lea
rcl
aam
sbb
imul
lret
ja
pop
adc
pop
jl
popf
mov
sub
stos
push
movl
xor
ds
add
cmp
ret
xor
dec
jne
sub
cltd
lods
dec
jp
mov
into
xchg
push
inc
clc
push
jnp
and
iret
fdivl
dec
xchg
pop
fdiv
mov
outsl
insb
fldenv
adc
pop
fnstsw
push
movsb
or
push
fiadds
scas
or
pop
jge
call
mov
sub
dec
cwtl
jbe
pop
or
mov
xchg
push
and
xchg
pop
out
and
push
nop
sub
popf
clc
filds
push
test
rcl
xchg
push
adc
sahf
sbb
push
cmp
lret
inc
push
xor
das
data16
xchg
xchg
inc
xor
and
lret
jl
mov
icebp
xor
call
sti
orb
push
jle
xlat
or
pop
loope
jl
icebp
testl
sbb
mov
mov
jecxz
lds
dec
outsb
push
sbb
movsl
cmp
cmp
lcall
cli
test
and
sti
mov
inc
xor
or
and
adc
mov
sbb
sbbl
inc
sub
int3
xor
les
cmp
cmp
in
insl
stos
mov
mov
mov
rcr
cmp
adc
mov
in
push
xor
sbb
lret
mov
xchg
arpl
sbb
xchg
fnsave
bnd
xor
outsl
scas
dec
mov
cld
cld
xchg
mov
es
iret
sbb
adc
repz
out
xor
scas
pop
rcll
ljmp
push
lods
aaa
cmp
xorb
pop
fdivrs
fnstcw
add
mov
inc
push
call
xlat
inc
int
mov
daa
fsubp
push
sbb
mov
mov
mov
aaa
dec
gs
or
call
xchg
loope
mov
rol
or
xchg
int3
mov
das
sub
add
bound
and
stc
lret
xchg
out
sub
fimuls
adc
push
repnz
jg
mov
cs
dec
lds
fidivrs
mov
cld
pusha
popa
sbb
daa
bound
xchg
repz
mov
insb
es
in
inc
out
ret
insl
pushl
push
inc
inc
into
add
jb
mov
ja
ret
sub
repz
sahf
sti
add
hlt
mov
mov
mov
call
out
inc
sbb
adc
imul
sbb
jp
mov
loopne
loop
mov
inc
loop
shlb
mov
xor
fs
hlt
rorb
aam
mov
add
repnz
and
lahf
sbb
pop
xchg
shlb
mov
fwait
lock
dec
sub
imul
mov
xchg
xchg
loope
mov
dec
cli
pushf
adc
cmp
pop
pusha
jp
dec
test
push
dec
ficomps
xor
mov
lods
ret
clc
or
xchg
adc
add
fsubrl
cli
loopne
sti
in
dec
cld
iret
inc
xchg
or
or
cmp
mov
test
jl
sar
icebp
loope
dec
and
adc
push
xchg
push
sahf
scas
dec
pop
xorl
fsubrs
fisubrs
mov
in
repnz
loopne
clc
mov
std
pop
mov
cltd
dec
dec
jne
lods
adc
jnp
cwtl
xor
mov
jg
xchg
mov
adc
jg
das
add
ret
stc
mov
lret
shll
mov
jo
pop
clc
out
push
subl
xchg
and
jae
dec
push
lahf
xor
jmp
fildl
pop
cmp
dec
push
out
mov
in
mov
sub
es
addr16
stc
push
stos
and
cmp
sar
dec
and
scas
fs
dec
jns
ret
mulb
fwait
insb
clc
mov
sub
das
or
out
in
test
lods
orb
cmpsb
cs
xchg
sti
cli
or
je
add
in
mov
testl
jg
andl
stos
cmp
jbe
mov
or
mov
xlat
mov
jg
xor
lock
scas
insl
xor
pop
outsl
mov
mov
pop
test
lea
sub
cltd
popl
add
add
xchg
add
dec
test
data16
cwtl
xor
pop
in
mov
mov
sub
and
mov
or
scas
cmovbe
je
pop
test
and
addr16
mov
or
adc
pushw
jle
mov
loope
mov
mov
inc
rcrb
mov
sub
test
fdivs
add
sbb
shll
test
fldl
sbb
add
sbb
push
and
fstps
pushf
adc
call
loop
int3
fcmovu
cmpsb
jne
es
clc
nop
sbb
jne
sbb
mov
int3
ret
cmp
loop
pop
or
dec
cmp
push
cmp
fcomp
pushl
mov
inc
repz
into
enter
inc
sbb
decl
es
jmp
push
dec
popa
push
sbb
pop
ja
mov
or
fisubrl
xchg
bound
iret
pop
mov
in
sbb
pop
aad
jp
cwtl
push
stc
mov
push
sti
nop
jg
dec
mov
inc
mov
jnp
mov
iret
fistl
enter
mov
cmp
lahf
adc
add
add
in
push
dec
test
movsb
imul
dec
in
outsb
test
fdivrl
pop
sbbl
push
xor
mov
inc
or
incb
notl
or
adc
dec
addr16
insb
push
scas
addb
sub
fmulp
inc
ret
in
shrl
push
mov
psubd
rorl
mov
add
cld
pop
and
iret
mov
sbb
dec
xor
in
mov
jne
pop
pop
loopne
sbb
mov
hlt
popf
push
je
cmp
rcl
icebp
shlb
stc
inc
jmp
dec
mov
cld
adc
mov
push
push
cmp
imull
cwtl
dec
les
hlt
std
stos
aaa
push
pop
jg
cmpsb
push
fstl
lret
jge
imul
fs
xchg
stos
movsb
cmp
test
hlt
leave
cmpsb
and
lds
sbb
sub
mov
mov
push
push
push
mov
cltd
in
popf
push
and
mov
ljmp
movsb
pop
es
sbb
aam
cmpsl
pop
mov
adc
xchg
jns
cmpsl
ret
shlb
add
scas
sub
test
insb
lock
or
or
mov
imul
sub
js
and
fdivrl
inc
adcb
or
cld
test
je
jle
lods
repz
inc
test
movsb
stos
enter
repz
lea
adc
sub
xchg
mov
mov
push
pop
insl
push
mov
clc
mov
mov
add
aaa
jge
cmp
mov
scas
mov
mov
dec
ss
rol
pop
imul
mov
cmp
sub
sub
daa
imul
cmp
or
lcall
xor
xor
pop
pop
bound
pop
jmp
sub
push
pop
push
adc
cmp
adc
mov
mov
das
cmpsb
add
jns
subl
adc
int
fsts
insb
fwait
ss
int3
push
rcl
ljmp
stos
sub
xchg
scas
push
sbb
jne
jbe
mov
cmp
mov
and
gs
testb
and
mov
xor
sub
stos
xor
lcall
jne
cwtl
lods
push
mov
outsl
mov
cmc
or
push
ficoms
sub
and
xorl
sub
push
iret
xchg
push
adc
pop
jmp
stos
jne
push
jecxz
mov
add
shrb
cmp
push
cli
cwtl
xchg
test
dec
pushf
lds
mov
into
jns
bound
or
push
call
xchg
sbb
inc
xchg
add
mov
mov
add
aad
xchg
fidivrs
xchg
adc
cmp
leave
mov
repnz
and
jmp
lods
sub
mov
les
inc
mov
dec
in
xchg
sbb
fucompp
insl
jmp
pop
jmp
scas
rcll
xchg
cmpsb
cmp
mov
jecxz
jo
xchg
add
movsl
mov
aas
gs
fwait
cmp
jo
xchg
stos
movsl
iret
leave
aam
jbe
pop
xor
in
sub
cltd
lret
clc
push
lret
sub
xchg
es
xorl
popf
mov
cmp
cmp
movsl
mov
xor
in
xacquire
fadds
pushf
cli
pushf
in
or
rcl
add
xchg
bound
loopne
insl
mov
fdiv
jl
inc
cwtl
sbb
imul
or
jbe
cltd
stos
rclb
cmp
cmp
pushl
lcall
pop
orw
sbb
or
jns
jge
sub
pushl
inc
cmc
popa
lret
sub
mov
repz
sub
data16
dec
addr16
or
push
push
or
or
inc
jmp
pop
cs
mov
inc
mov
movsl
or
cmp
jne
ret
push
movsl
sub
test
xor
inc
in
add
pop
jno
cmp
mov
cmc
scas
js
push
ss
rcrl
icebp
xchg
mov
bound
push
addb
add
pop
movsl
imul
das
cmp
mov
or
cmp
pop
mov
xor
clc
xchg
in
xchg
and
xchg
dec
notl
jmp
cwtl
lahf
in
and
mov
enter
divb
sbb
adc
pop
gs
int3
loop
aam
aad
sahf
sbb
je
cmpsl
cs
nop
das
and
cmp
dec
test
stos
xchg
sbb
pusha
int3
outsb
push
in
rcrl
jecxz
std
push
pop
jl
push
call
fsubrl
in
ret
and
mov
sbb
je
add
hlt
mov
push
in
les
dec
xchg
jae
or
push
mov
filds
pop
mov
loope
mov
insb
adcl
mov
mov
sbb
iret
or
mov
push
push
nop
repnz
nop
test
jmp
aad
jge
movhps
je
popf
xchg
jns
adc
mov
in
repnz
popf
iret
scas
es
fstpt
xor
sub
test
mov
out
mov
cmpsl
ret
inc
fidivs
xor
or
cmp
pusha
loop
int3
pop
imul
cmp
or
fimuls
test
adc
out
mov
fisubrl
pop
sbb
imul
jl
into
insb
mov
sub
stos
mov
daa
int3
push
shl
sub
sbb
add
popa
push
push
cmc
lea
sarl
sti
adc
dec
cli
int3
shrl
mov
popw
fwait
xchg
mov
inc
pushl
push
mov
test
shl
xchg
and
mov
fcomps
mov
xchg
add
test
xchg
sub
adc
scas
or
push
mov
push
pop
adcl
add
js
adc
dec
jae
sub
mov
pop
or
sub
cmp
mov
and
dec
add
xlat
movsb
adc
js
xorl
add
dec
push
daa
and
das
sbb
push
jbe
cmp
jae
and
int
loope
cmpsb
pop
lahf
or
jle
into
cli
and
out
adc
leave
fcmovb
and
dec
or
dec
int
sarl
lahf
pop
mov
xor
and
jl
aaa
ljmp
dec
daa
test
add
mov
inc
fmull
cld
jmp
sub
in
sub
test
loop
in
loope
icebp
lds
aad
and
call
cld
mov
dec
inc
shl
bound
fimull
sahf
pop
mov
ret
scas
cmp
test
test
mov
inc
sbb
hlt
or
jo
loopne
lcall
or
movsl
std
mov
lods
mov
fimuls
daa
cmpsb
jnp
outsb
cmp
notb
fbstp
mov
sub
fimuls
xchg
test
jnp
int
and
mov
call
ds
mov
aas
mov
adc
inc
xchg
not
jno
mov
aaa
daa
dec
loope
movsl
add
pop
or
or
imul
loopne
ja
repnz
aas
int
jb
jb
jne
xlat
inc
mov
test
xor
hlt
or
ret
inc
xchg
push
jle
cltd
stc
push
cmc
stos
adc
lock
insl
sub
sub
ret
sbb
into
cs
aaa
pxor
scas
jnp
lcall
mov
sub
fnstcw
es
cmp
shrb
mov
mov
scas
dec
in
mov
push
xchg
mov
inc
push
dec
sub
mov
cmpsl
daa
jbe
imul
dec
mov
sbb
lds
pop
shlb
popa
test
fs
jnp
and
shl
lcall
mov
outsb
mov
mov
scas
cmp
jmp
jae
in
mov
out
es
jnp
pushf
lock
mov
push
dec
das
popf
push
fs
cwtl
adc
inc
push
or
inc
outsb
pop
cmpsb
arpl
xchg
or
or
sbb
xchg
nop
jbe
cwtl
and
dec
xor
sub
mov
mov
mov
sbb
sahf
fucompp
jmp
pop
sub
adc
lahf
jae
push
and
int3
iret
adcl
or
aas
mov
leave
xchg
aaa
out
scas
xchg
into
xor
sbb
pusha
cli
push
dec
xchg
jle
mov
andl
push
pop
jb
pusha
add
subb
test
xchg
mov
lods
adc
push
pop
dec
int3
inc
je
jge
jno
inc
jle
adc
inc
or
pushf
add
sbb
mov
repz
inc
arpl
dec
insb
sbb
adc
add
mov
insl
inc
hlt
test
push
or
loopne
mov
pushf
pop
mov
mov
xor
push
pusha
xor
or
and
fadds
pop
rolb
add
jae
nop
xor
cmp
dec
or
jle
imull
nop
mov
insb
push
mov
aad
pusha
sub
add
push
movsb
add
cli
mov
jle
xchg
mov
cmpsl
pop
movl
push
mov
push
jbe
pop
lret
cmp
dec
push
push
or
call
xchg
and
outsb
adc
xchg
or
push
rcl
insl
dec
pop
and
cltd
mov
mov
mov
cmpsb
out
jmp
mov
pop
sbb
enter
cmp
inc
inc
adc
fiadds
lds
in
sbb
jmp
xchg
mov
mov
adc
pop
pop
xchg
or
mov
lds
orb
nop
push
repnz
icebp
xchg
subl
xor
cmp
dec
loopne
xchg
pop
or
icebp
in
ret
sub
loope
sbb
andb
sub
mov
or
popa
mov
xor
push
int
push
imul
outsl
mov
adc
push
mov
mov
add
stos
jg
les
je
mov
jae
in
scas
mov
adc
xlat
jp
cmp
fsubrl
icebp
jb
es
add
ret
xlat
lds
call
and
sbb
std
fisubrl
push
fcmovnbe
jno
push
iret
push
xor
pop
mov
sbbb
jno
push
iret
pop
stos
rcll
cwtl
cmp
bound
lods
les
mov
jns
int
jnp
and
or
lcall
jmp
rolb
mov
xorl
xchg
add
icebp
mov
loope
adc
cmp
fsts
pop
clc
sub
inc
xchg
push
mov
cmp
ljmp
push
jmp
outsl
dec
call
sbb
mov
nop
inc
lahf
cmc
ljmp
inc
jge
ds
inc
mov
fisubrs
subl
add
out
dec
mov
fadd
mov
pushf
scas
dec
lcall
mov
inc
jmp
jp
rolb
or
sub
into
inc
loope
jae
push
mov
jle
iret
inc
pop
and
stc
ja
mov
dec
sub
push
push
xchg
sbb
mov
pushf
sbb
andb
out
pop
xor
adc
adc
mov
ss
jg
or
jle
cmc
push
dec
xchg
dec
fstpt
rcl
cmpsb
fildll
jns
imull
lods
stos
js
call
xor
adcl
mov
cmp
jp
shll
mov
jb
dec
lock
cmp
rcr
sahf
insb
hlt
mov
xorl
add
aas
test
imul
xor
mov
pusha
and
arpl
jns
jne
test
fists
negb
into
push
pushf
fistpl
imul
pop
andl
in
imull
push
cmp
rcrb
shr
add
adc
cltd
outsb
lahf
adcl
ja,pt
ficoml
addl
sahf
and
dec
push
fs
div
call
fdiv
mov
addr16
sbb
test
jbe
inc
popa
xchg
negl
dec
mov
clc
pop
cmp
adcb
lret
xchg
cli
out
push
sti
mov
xor
test
cld
nop
ficoms
pop
mov
gs
repz
stos
adc
or
mov
cmpsb
mov
inc
cld
or
ja
aam
lods
lock
sti
addr16
jo
sub
test
cmp
cmp
pop
add
pop
mov
mov
int
or
adc
or
repz
dec
insl
sub
xor
mov
mov
addr16
enter
cmp
push
ds
jecxz
sti
push
add
sbb
jl
enter
bound
fwait
lcall
out
dec
negb
xchg
jle
adc
int
clc
stos
xchg
cmp
sbb
jecxz
repnz
jb
test
or
mov
xchg
repz
jl
or
and
std
setge
lock
mov
mov
stos
scas
xchg
mov
and
aaa
and
mov
icebp
das
insl
or
mov
sbb
incb
stc
shl
jle
loopne
pushf
sub
sub
in
push
dec
push
std
add
jns
insl
push
cmc
push
in
dec
and
rolb
pop
dec
cmp
pop
sbb
test
insb
enter
inc
scas
mov
pop
cmpsl
mov
cmp
adc
movsb
xor
pop
ret
icebp
test
cmp
pop
std
jmp
lods
mov
fldt
jle
jo
jp
in
mov
in
jne
sub
clc
fiadds
sbb
icebp
mov
in
in
mov
std
pop
stos
fs
inc
out
dec
out
adc
or
mov
in
das
punpckhdq
adc
movl
aaa
sub
out
cld
or
les
dec
xor
ds
inc
mov
and
sub
sbb
adc
and
les
test
xor
loop
mov
popf
lahf
or
das
push
sbb
mov
push
push
push
leave
icebp
rol
mov
std
jmp
fs
fmuls
loopne
les
lock
in
pop
orl
fistl
shrb
and
cmpb
fwait
cmpsb
insl
xchg
add
sti
mov
lods
push
mov
cmp
dec
cmp
cltd
push
jl
xchg
mov
jp
stos
sbb
xor
and
das
ja
jbe
dec
mov
test
icebp
jns
sbb
and
cmp
shlb
inc
ds
push
out
in
sarl
cmp
dec
add
mov
add
push
xor
sti
fidivrs
mov
repz
and
sub
dec
adc
xor
fsubr
arpl
in
orb
test
stos
push
leave
in
lods
lahf
push
mov
sub
adcb
jo
loope
adc
add
stos
push
xchg
in
mov
adc
push
cs
dec
mov
and
outsb
je
hlt
scas
lcall
insb
cmp
mov
test
sub
mov
mov
cmp
in
mov
sub
fimull
das
add
out
cmp
add
xchg
mov
dec
mov
outsb
cmp
pop
mov
sbb
cmpsb
or
xor
pop
xor
dec
jo
or
sbb
cmpsl
insl
iret
test
jge
inc
fisubs
inc
lahf
jbe
cmp
es
outsl
fisttpl
fldenv
int3
ljmp
aad
test
sbbb
pop
bound
or
lods
xchg
leave
add
inc
cmp
sub
dec
aaa
out
je
ja
jmp
data16
sahf
aam
lea
addr16
pop
push
mov
sub
and
cmp
aad
aaa
aad
sarb
push
pop
mov
rcr
cmp
xchg
adc
or
cmp
jnp
cmp
push
jp
dec
push
jo
dec
popa
add
sub
int3
shr
xchg
add
das
jle
inc
das
jecxz
les
fs
mov
add
fidivrl
sub
icebp
pop
jge
mov
imul
add
aam
dec
add
jne
push
aad
shrb
sub
movlps
xor
in
push
lea
or
cld
aas
and
mov
loop
sub
inc
xor
jno
pusha
sub
cld
mov
pop
movsl
icebp
xor
cli
jle
and
loope
dec
in
fisubrl
pop
inc
jae
adc
repnz
sub
rorb
or
dec
xchg
sbb
dec
mov
mov
pop
pushf
jno
mov
cmp
out
dec
fimull
jmp
dec
sahf
mov
aam
inc
call
pushf
sbb
lock
dec
adc
sti
rorb
push
ss
xchg
dec
cwtl
or
mov
dec
jle
mov
jge
and
mov
cmp
into
sahf
data16
mov
dec
jecxz
jnp
sahf
imul
adc
test
ret
out
idivb
cmp
test
pop
push
pushf
inc
or
data16
leave
daa
lahf
xchg
ja
mov
fistpl
jg
shlb
dec
icebp
cmp
xchg
mov
or
cs
add
imul
add
dec
or
jmp
push
add
sbb
pushl
pop
notl
mov
or
mov
imul
daa
mov
or
cli
cmp
pop
push
pop
nop
sbb
pop
inc
test
pop
push
mov
mov
mov
imul
packuswb
inc
inc
enter
xchg
push
mov
inc
push
xchg
dec
or
xchg
add
fwait
mov
insb
aad
inc
fs
int3
aad
daa
adc
das
inc
mov
fwait
adc
mov
call
movsb
pop
psubw
or
inc
pusha
jae
lcall
sbb
sar
xchg
jne
int3
add
sbb
adc
adc
jo
cli
add
or
sub
inc
rolb
sub
movsl
popa
sbb
out
int3
jbe
test
jl
iret
mov
mov
pop
in
sub
sub
mov
inc
jnp
xor
scas
or
dec
out
lahf
outsl
stos
out
add
ljmp
stos
sbb
mov
cs
xor
mov
dec
jmp
clc
cmp
pop
mov
or
mov
ja
pop
or
pop
xchg
movsl
test
cmp
popa
cmpsl
adc
int
insb
jnp
mov
mov
shll
xorb
popa
in
pop
fists
jp
stc
jecxz
push
mov
xor
arpl
mov
xchg
iret
adc
mov
hlt
iret
dec
push
out
mov
in
lahf
jne
mov
xchg
movl
mov
sbb
xchg
mov
add
push
inc
lret
cmp
jge
cmpsl
out
imul
xor
adc
lock
stc
stc
sbb
stos
push
addr16
sub
xor
rolb
xor
and
adc
pop
sbb
lcall
inc
add
ljmp
ja
mov
cmp
scas
cmp
add
pop
aaa
fpatan
sub
mov
rcrb
out
dec
mov
adc
shl
cmp
jg
mov
push
popa
inc
mov
lret
xchg
cmp
sbb
ja
push
mov
fistps
mov
sbb
or
xlat
inc
push
mov
out
push
push
loope
inc
into
dec
pop
dec
jnp
xlat
stc
hlt
xor
rclb
jo
roll
jmp
push
pushf
sub
enter
sahf
jno
sub
mov
pop
out
and
pop
call
add
icebp
cmpsl
testl
cmp
dec
mov
insl
hlt
fwait
sahf
fsubr
mov
xor
mov
sub
xor
inc
sbb
std
cs
lods
or
cmp
test
add
push
adc
push
pop
cmc
ss
mov
mov
and
adc
add
or
nop
ja
sbb
mov
mov
call
and
gs
leave
stos
aad
jbe
repz
insb
add
ds
into
dec
mov
loope
push
inc
cmp
in
dec
xor
repz
inc
aaa
in
push
and
push
cmc
dec
mov
fiaddl
loope
in
inc
outsl
mov
je
icebp
pushf
cltd
ljmp
aas
mov
xchg
das
pop
shl
dec
push
jl
push
mov
loope
cli
daa
clc
and
jno
fisttpll
fldt
icebp
repnz
xchg
loop
push
test
movsl
fbld
fs
lds
incl
add
sub
cmpsb
sbbl
stos
mov
clc
jns
mov
add
outsl
or
mov
jae
xchg
loope
mov
stos
or
xchg
mov
hlt
sbb
jae
mov
test
leave
cmpsb
xchg
jl
push
or
mov
xchg
addl
pop
xor
loop
push
inc
adc
push
xchg
imul
jo
add
test
and
dec
je
pusha
and
pop
push
jmp
outsb
jo
int3
pop
inc
mov
dec
ljmp
dec
and
cld
hlt
and
mov
cmp
notb
test
xchg
and
call
fdivr
mov
push
mov
stos
cmp
lods
es
cwtl
movsl
fs
sarl
sbb
das
mov
fimull
call
popf
and
dec
enter
xor
std
mov
iret
popa
call
out
out
pop
mov
push
sub
lahf
sbb
pop
jp
jg
mov
add
jne
push
mov
inc
movsb
sti
fisubl
hlt
adc
jno
lea
std
shlb
or
fs
gs
sub
jbe
push
xorb
push
in
fucom
pop
inc
into
rclb
scas
jp
xchg
jbe
test
leave
mov
fldln2
divb
sbb
push
fcmovnu
xchg
inc
mov
add
cwtl
cmc
clc
incl
sbb
xor
out
cwtl
xchg
es
mov
sbbl
jno
mov
sbb
out
icebp
add
dec
push
rep
lret
pop
repnz
dec
xchg
movnti
mov
xor
cmp
sub
js
push
stos
dec
jecxz
push
push
ss
jne
adc
das
pop
popf
fs
fimull
int
jbe
add
push
int
jg
rorb
push
add
mov
mov
fimull
push
mov
or
jecxz
mov
xor
mov
hlt
fcompl
ja
xchg
or
jecxz
out
mov
lret
mov
test
sahf
jnp
iret
push
jecxz
mov
jno
inc
mov
cwtl
and
ja
js
sbb
mov
push
adc
cld
or
lret
dec
mull
ljmp
sub
pusha
int
mov
loop
mulb
sarb
push
pop
pop
jp
inc
hlt
inc
xchg
rcll
fldcw
aaa
mov
xchg
pop
sbb
xlat
sbb
jns
xlat
cli
popa
jmp
enter
frstor
in
sub
xor
cmpsb
mov
and
sbb
add
push
aad
addr16
lret
sub
jle
jmp
mov
js
nop
push
inc
icebp
pop
sbb
jo
and
leave
out
pop
into
mov
ja
or
or
or
push
inc
add
mov
out
jp
fnstenv
add
cmpl
cld
cmp
push
fs
cmc
mov
or
je
out
sar
push
and
push
in
rclb
xchg
push
scas
sub
les
pop
mov
sub
cmpsl
nop
out
xchg
pop
pop
or
mov
dec
jmp
push
add
inc
cwtl
mov
cmp
push
dec
mov
cmp
xor
and
call
dec
push
jns
sub
adc
cmp
mov
jo
mov
adc
or
stc
cmp
cmp
xor
jle
in
in
sbb
mov
jp
rorb
outsl
add
lods
negb
es
aas
pop
sub
sbb
inc
mov
inc
repz
inc
mov
hlt
aam
out
add
jne
js
test
into
popa
add
test
ja
and
inc
ret
sbb
popa
or
insl
insb
jge
xor
mov
mov
and
andb
mov
mov
scas
and
les
sub
stos
fcmovnu
xchg
sbb
mov
jns
icebp
test
das
int3
lahf
aam
daa
in
ds
jmp
aad
add
push
fsubrs
mov
push
jl
lods
push
xor
sub
mov
fbld
ret
pop
movsl
fimull
jge
push
jmp
cwtl
or
add
imul
icebp
sahf
inc
stos
ljmp
adc
pop
dec
push
jecxz
arpl
repnz
mov
push
fs
jb
mov
insb
dec
xor
fisttpl
add
clc
gs
pop
ffreep
push
js
dec
dec
js
push
mov
inc
adc
jns
jge
dec
jg
lods
mov
add
clc
push
push
xchg
inc
adc
je
sbb
jns
push
sar
test
push
mov
rcrb
pop
nop
pop
out
jno
insl
jno
push
push
rorb
inc
xchg
jne
xchg
and
xchg
cmp
pop
clc
aas
push
sarl
mov
or
paddd
mov
insb
ret
jecxz
or
push
jbe
push
lcall
inc
cs
jnp
or
test
dec
shl
fstl
out
adc
xor
mov
shrb
testb
jge
imul
int
in
js
xor
mov
push
dec
lds
or
cmp
sahf
enter
rcrl
sub
stos
outsb
pop
sahf
int3
loope
mov
mov
out
rclb
lret
inc
lds
xor
mov
add
sbb
or
ja
nop
popa
pushf
cmp
mov
and
repnz
xchg
add
loopne
jge
cmp
jno
inc
inc
push
icebp
cs
pop
or
sbb
xstore-rng
cmpsl
add
dec
ret
out
arpl
and
mov
es
in
in
pop
mov
xor
dec
push
iret
pushf
out
fnstenv
cwtl
enter
scas
pop
lods
repnz
gs
sbb
dec
jp
push
test
cld
xor
mov
sub
sahf
add
pop
aas
xchg
test
fcmovne
mov
add
lods
push
bound
adc
mov
lret
ljmp
push
pop
stos
dec
or
movsl
mov
add
cmc
push
cli
call
sub
sbb
mov
aad
sti
icebp
test
fdivs
data16
es
sub
jae
mov
adc
in
div
push
jns
adc
std
dec
inc
cmp
mov
jne
jno
fdivs
add
lret
pop
sub
int
stos
jo
or
xor
push
stc
or
test
cmp
cmc
dec
xchg
xlat
loopne
jl
mov
lahf
lock
test
pop
mov
cltd
and
sar
push
mov
jle
lcall
test
in
xchg
int3
mov
jg
aad
incb
xchg
inc
sub
hlt
mov
movsl
xor
mov
xchg
pushf
adcb
dec
xor
push
cld
adc
outsl
jmp
ret
sti
int
dec
outsb
into
push
jmp
push
inc
out
and
sbb
cltd
mov
fadds
iret
data16
into
mov
sub
inc
or
sbb
in
stos
lahf
cmpsl
addr16
fs
xchg
popa
out
mov
xchg
testl
xlat
mov
addr16
or
mov
jb
jbe
push
cld
jp
cmpsl
sahf
lods
clc
and
xor
movsb
cmpb
xchg
mov
lods
pop
mov
push
lea
xorb
mov
insl
fwait
bound
divb
test
sarl
icebp
and
outsl
cmp
push
jl
adcl
fdivp
push
push
cmp
dec
or
add
cmpb
push
mov
sbb
or
and
inc
mov
adcl
xorb
mov
pop
xchg
enter
scas
push
xlat
push
inc
rcl
adc
repnz
aam
push
fs
loope
fstpl
stc
xchg
fisubl
repnz
pop
push
mov
aad
pop
adc
push
repnz
xchg
sahf
cmpsl
adc
outsb
imul
test
sub
or
imul
cmp
nop
sub
pop
lret
outsb
add
int3
pushf
jl
inc
in
das
out
adc
inc
and
adc
adc
adc
inc
inc
cmp
call
inc
and
mov
loopne
xor
add
insb
xor
jmp
mov
sbb
dec
out
xchg
mov
push
shll
push
aad
push
mov
leave
dec
das
inc
mov
mov
pop
int
adc
icebp
mov
dec
ds
mov
dec
shrb
lahf
pop
bound
mov
xchg
jb
adc
pop
mov
jmp
mov
jo
movsb
mov
ret
imul
mov
sbb
sbb
into
inc
div
ljmp
add
data16
or
pop
add
add
jae
pop
mov
out
cmc
js
xor
or
jp
mov
mov
ja
push
xchg
mov
dec
mov
jb
fldl
cmp
test
inc
data16
cmp
stc
push
leave
int
and
in
mov
xlat
lahf
xlat
xor
adc
push
fidivrl
dec
cltd
loopne
jno
stos
les
pop
popa
pop
rcll
rcrl
daa
xor
or
jmp
and
sti
mov
add
push
mov
mov
js
decl
addr16
xchg
dec
xor
xchg
inc
ss
inc
fstpl
mov
dec
cmp
pusha
sbb
mov
iret
lock
jne
not
std
cmp
ficoms
lods
add
es
subl
lret
add
push
mov
in
inc
add
out
mov
inc
test
adc
and
mov
inc
stos
adc
jo
out
jmp
nop
ja
sbb
jnp
xchg
adc
mov
push
sub
nop
aam
dec
push
imul
xor
sti
out
cwtl
aam
xlat
and
mov
pop
jl
ljmp
mov
adc
mov
pop
cmp
xlat
int3
push
es
mov
xchg
out
out
push
int
lahf
sbb
jl
out
aas
mov
sbb
daa
sahf
ljmp
sub
add
pop
cmp
fisubrl
jp
lret
push
test
ss
inc
ljmp
push
xor
sub
inc
popa
sbb
js
push
sti
add
jmp
shrb
je
pop
fisubs
out
sbb
xlat
xchg
sub
and
cmp
fst
pop
mov
add
sbb
cwtl
cmp
pop
gs
and
mov
and
int3
das
cs
scas
or
dec
mov
mul
xor
pushf
movsl
xor
mov
push
mov
push
stos
sti
mov
fwait
pop
stos
fadds
mov
leave
xchg
inc
ret
mov
cmc
stos
scas
call
xchg
pop
mov
and
adc
in
or
test
aam
loop
mov
lock
lods
push
imul
lods
gs
jl
stc
push
out
add
fnsave
dec
je
cli
gs
xchg
stos
mov
adc
in
xchg
aam
outsb
shlb
dec
leave
pop
out
push
xor
or
jne
xor
mov
scas
xor
dec
fs
and
cmp
dec
push
sub
add
das
sub
and
je
push
in
and
pop
test
jno
in
mov
xchg
inc
jne
sbb
or
es
or
lahf
dec
arpl
xchg
decl
fistps
push
and
push
lea
adc
rclb
jecxz
xchg
loope
jge
outsb
sarb
push
mov
mov
incb
mov
fs
jl
mov
mov
data16
subl
mov
mov
loope
push
and
add
fsubp
mov
jno
ret
or
mov
fdivr
jl
mov
jb
fadd
in
xchg
bound
add
inc
stos
in
xor
mov
aaa
fidivrs
mov
sub
dec
dec
loop
stc
xchg
mov
icebp
nop
cwtl
mov
mov
imul
dec
lods
jle
push
cmp
aas
es
mov
jle
jge
dec
addb
xlat
mov
hlt
adc
icebp
fxch
pop
mov
iret
xor
pop
aam
ret
dec
adc
cltd
and
add
repnz
rcrl
jo
andb
sbb
out
add
out
or
sti
push
fcmovbe
out
cmpsl
mov
or
xchg
lret
jnp
pusha
pop
sar
pop
out
mov
push
xchg
cmp
fxch
hlt
xor
test
repz
mov
or
cmp
rorl
push
scas
sub
jb
loop
cmp
adc
mov
mov
push
stos
jmp
adc
mov
je
push
sub
jmp
pop
mov
cmp
adc
scas
sub
scas
push
sbb
lea
cmpsb
rolb
popf
nop
sbb
xlat
sub
es
push
xchg
jle
in
jmp
in
xchg
sbb
test
cmpsl
fsubr
push
add
inc
dec
add
idivb
repz
cmp
movsl
orb
fiaddl
aaa
pop
je
inc
push
pop
cmp
pop
adc
mov
out
cmpl
enter
mov
in
adc
cwtl
jns
adc
xor
push
lds
pop
imulb
sysexit
push
xor
mov
outsb
or
or
inc
ja
hlt
in
cltd
jecxz
aaa
jge
imul
push
jno
cmp
js
mov
scas
adc
mov
filds
cli
rcll
mov
jo
mov
sahf
or
xor
add
xchg
mov
cmpsb
pop
xchg
nop
cmpl
jns
push
cmp
cmc
cmpsb
or
and
add
mov
pop
bound
lahf
nop
mov
xor
jb
hlt
das
rolb
dec
xchg
jle
pusha
sahf
xor
cmp
inc
mov
push
or
xchg
popa
add
sbbl
cmp
mov
or
lds
jg
sbbb
out
sahf
mov
cmpb
mov
jl
add
out
jno
frstor
cltd
add
sbb
outsl
hlt
imul
dec
fbld
lahf
push
mov
fisubrl
mov
in
mov
xchg
pop
xor
xor
jbe
out
xlat
jle
jg
jmp
cmp
mov
jo
jnp
xor
inc
loope
iret
ret
push
push
orl
shll
sub
pushw
test
mov
popa
dec
push
fildll
pop
mov
aaa
dec
mov
xchg
inc
mov
dec
mov
aam
mov
pushf
popa
lea
cmc
fcoms
push
push
ljmp
cli
mov
out
lods
xchg
divl
cli
testb
cmc
or
add
notb
push
popa
mov
in
fwait
and
inc
outsb
jmp
jnp
insb
into
divb
testb
loopne
or
mov
adc
stos
clc
ds
ja
fmull
std
mov
push
shll
mov
sbb
cld
movl
arpl
imul
data16
push
jmp
js
repz
test
add
adc
xor
xor
jg,pt
pop
in
jb
and
mov
mov
sub
inc
add
cmp
cmp
into
jae
jecxz
mov
ljmp
mov
movsb
and
mov
scas
out
imul
stc
int
jnp
lahf
push
hlt
test
fcmovu
mov
shl
in
xchg
xchg
and
and
inc
push
jp
jno
sbb
repz
or
out
pop
daa
loope
push
cmp
rcll
nop
or
out
jae
xor
xchg
jnp
jl
xchg
call
sub
call
divb
test
xor
cmp
into
je
dec
xchg
inc
push
outsb
test
loop
int
xchg
loop
adc
lock
push
test
push
int3
push
es
iret
lret
dec
push
mov
mov
mov
dec
mov
in
mov
enter
add
aad
psrld
jno
stos
mov
mov
or
in
and
sbb
rcr
pop
int
negb
imul
jbe
cmp
aas
fidivrs
xchg
xor
xor
cmp
pushf
scas
fbstp
es
xchg
push
dec
cmp
dec
jmp
lods
sbb
xor
mov
xchg
inc
pop
inc
sbb
popf
cmc
cmp
cli
add
jge
lock
or
cmp
xor
cmp
adc
movsl
mov
mov
add
mov
lret
lock
mov
sti
or
in
xlat
adc
outsb
int
cmpsl
jecxz
insl
xor
out
or
xlat
aaa
pop
nop
stos
into
add
stos
pop
xchg
push
mov
lds
jecxz
fmuls
inc
movb
mov
sub
push
mov
cmpsb
fsubrl
stos
std
xchg
and
das
xor
jmp
sub
shrl
lret
jge
and
cmp
leave
inc
aad
mov
jbe
cmp
inc
roll
repnz
adc
addb
fwait
mov
inc
and
sub
dec
pop
push
inc
xchg
add
leave
icebp
sbb
sbb
and
jno
sbb
hlt
or
aas
in
push
or
add
in
fistpl
and
add
outsl
popf
insl
outsl
dec
cltd
cmp
jnp
xchg
mov
or
inc
sub
in
add
adc
xchg
jo
cld
mov
in
xor
adc
dec
into
jg
pop
pop
inc
xchg
push
push
mov
xchg
mov
movsl
xchg
xchg
ja
pop
loope
cwtl
pop
addr16
xor
out
insl
nop
xor
fildll
fsts
insl
gs
sbb
push
scas
mov
repnz
adc
xor
in
xchg
into
cmp
dec
mov
nop
nop
lahf
or
lods
rep
mov
cmc
je
jg
inc
cmp
es
rcll
call
test
adc
dec
jns
in
inc
aas
adc
mov
jbe
pop
outsl
lret
and
and
xor
pusha
mov
push
jp
outsl
cli
loopne
in
xchg
mov
call
mov
call
push
insb
enter
adc
and
ss
fiadds
sub
call
push
sub
or
mov
xor
mov
mov
movb
dec
mov
mov
push
xor
mov
loop
cwtl
imul
mov
dec
cli
cmpsl
filds
in
xlat
testb
mov
icebp
pop
cmp
push
mov
cmp
dec
and
out
outsl
xchg
xchg
sub
pop
adc
and
sub
dec
shll
xor
pop
inc
in
cld
cli
pop
stc
int
fidivs
sbb
add
nop
imul
arpl
mov
into
or
or
stos
or
inc
sub
int3
iret
cmpsb
sub
cmp
dec
mov
adc
das
out
add
test
jmp
icebp
ret
repnz
pop
xor
mov
cmp
addb
arpl
rcrb
sbb
mov
inc
inc
popa
cld
add
jo
incl
xor
stc
sub
sub
pusha
adc
movsl
pop
test
leave
cltd
nop
into
sahf
add
push
loop
andb
mov
pop
test
lods
je
mul
mov
and
cli
orb
cmp
xor
jno
xchg
sbbb
jmp
push
outsl
repz
sub
cmpsb
aas
inc
xlat
ret
cli
popa
jno
cmp
stc
sti
test
inc
fisubrl
adc
pop
cmp
daa
xchg
inc
out
scas
fcmovne
xor
ja
adc
push
sub
cmc
adc
mov
mov
cld
popf
das
cmp
notb
xchg
out
dec
or
cmp
or
push
xchg
push
xchg
pop
and
lret
pop
pusha
cmp
jge
mov
add
pop
inc
lret
cmp
mov
shl
andl
addr16
mov
dec
scas
xchg
iret
fwait
vmovddup
ds
xchg
fisttps
cmp
rol
mov
sub
cli
adc
ds
mov
sbb
scas
jmp
cltd
stos
stos
xchg
fmull
jge
cmp
popa
fs
jns
or
call
add
loop
push
cwtl
shrl
lahf
inc
aad
and
shll
arpl
mov
sub
push
lock
xchg
mov
lret
in
xor
add
js
pop
das
sub
pop
insb
cmp
push
ja
mov
hlt
mov
arpl
cmc
mov
push
pop
sbb
push
add
adc
sahf
je
sbb
dec
imul
inc
xchg
sbbl
loop
daa
push
bound
fwait
mov
mov
jnp
sub
mov
mov
xlat
icebp
cmp
cmp
and
test
inc
push
insl
jb
mov
mov
jns
mov
mov
push
fdivs
mov
aam
jle
out
lds
mov
push
push
insb
jno
sbb
mov
inc
sub
lcall
push
xchg
mov
inc
push
daa
mov
ja
fcmovnbe
pop
loop
movsb
ret
mov
inc
lods
movsb
ljmp
mov
in
mov
pop
test
pop
cmpsb
or
test
adc
daa
test
ljmp
dec
repnz
cmpb
inc
xchg
jae
xchg
out
insw
out
lret
out
push
mov
lcall
ss
sub
inc
lock
hlt
mov
jo
aas
push
mov
sub
cmc
xor
popa
jl
jp
inc
sbb
fs
dec
loop
and
xor
scas
dec
xchg
push
sub
push
ltr
inc
sub
cltd
lret
mov
inc
test
dec
fcmovnbe
and
pusha
jbe
or
mov
xchg
mov
loopne
lods
pop
and
or
shll
and
pop
loopne
aaa
aaa
rorl
mov
iret
mov
insl
dec
lret
fsub
iret
popf
push
dec
adc
call
aad
loop
sbb
cmp
mov
ret
sbb
sahf
dec
add
pop
fsts
xor
cmp
xchg
sbb
xchg
jmp
enter
gs
adc
icebp
hlt
sub
stos
jae
sub
into
clc
inc
cmpxchg
loop
add
mov
pop
dec
call
into
daa
push
jmp
in
or
sub
stos
mov
jns
fimull
test
nop
adc
mov
fnsave
idivl
mov
and
inc
mov
and
bound
enter
ficomps
pop
loop
push
fwait
rcrb
pop
test
inc
mov
cmp
cmp
out
inc
mov
shll
push
ret
xor
add
mov
inc
pop
pop
xor
inc
cmpsl
inc
jle
pop
or
dec
add
adcl
mov
xchg
mov
sub
xchg
xchg
or
movsl
inc
lret
loope
ljmp
push
fs
mov
sahf
add
add
loop
loope
cmpb
mov
mov
push
cld
ss
jl
inc
and
fcmovu
repz
xor
outsl
lock
sbb
int3
sub
adc
push
stos
ficoms
or
or
les
sub
popa
fists
add
jp
lds
dec
cmp
lea
push
mov
or
xchg
test
lds
add
mov
fwait
fs
push
cmp
clc
cmp
sbb
and
mov
add
daa
push
cmp
push
cli
mov
loope
bswap
test
cmp
add
out
sahf
enter
add
aam
add
fldcw
jmp
jmp
out
jnp
pop
or
sahf
sahf
cmpsb
sbb
repz
loopne
sbb
cwtl
das
xor
scas
jge
dec
add
mov
adc
ss
mov
adc
mov
ret
pop
and
mov
ffreep
or
js
jmp
aad
adc
adc
js
fisubrl
test
xchg
jb
mov
ror
or
or
lea
fsubr
out
mov
dec
repz
fninit
mov
repz
dec
imulb
and
mov
cmp
ds
loopne
xchg
ds
jle
ficoms
xchg
testl
aas
aas
es
jle
add
or
mov
repz
xchg
sbb
sti
pop
scas
add
shlb
fmull
and
into
fimuls
xor
movsl
inc
push
xchg
cltd
xor
or
fidivs
andb
cmp
sahf
fdivl
bound
jns
push
bound
scas
sti
shlb
xchg
mov
cmp
add
xor
test
leave
ret
repz
and
loop
repz
out
xchg
pusha
int3
out
xchg
cmpsl
hlt
jp
or
test
pop
mov
lret
inc
and
push
mov
arpl
das
xchg
lds
in
fstl
cwtl
popa
xchg
sarl
add
inc
or
jbe
cwtl
inc
cli
test
xor
xchg
int3
xchg
sti
inc
mov
pop
mov
cld
dec
push
fmulp
jnp
lret
repz
inc
es
push
bound
push
xor
sti
lret
aas
fcoms
pop
pop
das
popf
gs
mov
pop
out
jno
jge
cmp
jns
sbb
push
hlt
xchg
std
lds
mov
push
mov
fst
jecxz
or
neg
inc
xchg
int
aas
fbstp
and
bswap
cwtl
add
xor
aaa
stos
jmp
sahf
pop
adc
add
hlt
jae
aas
mov
mov
xor
aad
daa
and
dec
std
add
shrl
fmuls
cmp
mov
jge
jl
sub
jb
mov
mov
insl
xchg
mov
cltd
mov
xchg
mov
lret
lock
fs
push
inc
mov
nop
mov
inc
cmc
in
sti
pop
sbb
ljmp
mov
aad
dec
dec
pop
mov
ret
push
fdivrp
mov
and
lods
dec
stos
leave
push
addr16
jle
mov
leave
and
nop
sub
pop
lods
pop
pop
mov
pop
jbe
ljmp
mov
jg
mov
sbb
mov
mov
in
sub
inc
pop
mov
ret
cwtl
and
adc
push
xor
aaa
jmp
dec
idivb
rcrl
add
orb
clc
fldl
sbb
dec
xor
std
leave
sub
gs
sbb
fwait
cmp
cmp
cmp
dec
mov
xchg
lods
fcomp
repnz
mov
push
or
pop
shrb
test
cmp
cmp
movsb
dec
adc
xor
out
stc
mov
sub
out
stos
aas
jnp
sar
repnz
dec
push
xor
imul
adc
sub
xlat
lcall
and
mov
call
lods
cmpsb
dec
cmp
mov
push
cmpb
fs
add
jl
leave
popa
xlat
inc
mov
xchg
and
dec
aad
ret
rcl
in
and
push
pop
lahf
push
push
mov
lods
arpl
push
ss
push
push
dec
subb
xchg
scas
sub
sub
dec
push
dec
mov
in
repz
or
es
or
fisttpl
test
lea
idivb
and
lds
cmp
jo
test
fnsave
mov
decb
or
icebp
testl
add
push
xchg
movsb
movsl
sub
add
inc
pop
adc
xchg
cld
xor
sar
pop
sbbl
push
or
xor
andb
frstor
and
fidivrl
in
pop
fmul
orl
addr16
orl
mov
xchg
cmc
loopne
test
popa
fwait
iret
xor
push
loope
xchg
dec
addr16
pop
mov
scas
xor
cs
pop
jge
xchg
in
cmpsb
jg
popa
shlb
xor
dec
lret
dec
lock
pop
mov
jg
mov
xlat
insb
loop
dec
fcmovnu
add
jne
pop
pmuludq
fistpl
cmp
inc
imul
icebp
xchg
popa
mov
push
ud0
rcll
or
enter
call
xchg
je
sub
jno
lods
or
ds
popa
push
movsl
mov
fs
lods
dec
pushf
ss
stos
mov
out
imul
ud2
cld
aaa
or
xor
es
mov
jnp
stc
sbb
jg
add
dec
xor
jge
inc
add
mov
mov
or
xchg
int3
sub
add
cmp
cmpsl
pop
iret
mov
into
test
leave
scas
iret
hlt
test
xchg
add
in
cmp
push
mov
cmp
movsl
jmp
sti
xor
mov
mov
lea
stc
push
paddb
xlat
and
into
mov
xchg
xlat
inc
jne
xor
sti
xchg
sbb
in
addr16
cli
movsb
rolb
xchg
jo
int
insl
pop
push
js
xor
movsl
xchg
sub
cwtl
ljmp
mov
ljmp
inc
imull
mov
and
loope
jge
adc
sub
jbe
xchg
sbb
xor
xor
dec
mov
insl
or
into
mov
cmp
test
cli
add
cmp
push
or
and
aam
mov
push
cmpsl
stos
pop
test
mov
int
out
mov
lret
pop
pop
xor
loope
call
popa
fsubs
out
inc
pop
xor
xchg
xchg
imul
icebp
scas
adc
push
pusha
mov
cmp
lret
int
xchg
mov
push
rolb
test
add
es
scas
dec
mov
fdivp
and
mov
pop
iret
loop
test
pop
jg
sbb
pop
aaa
iret
dec
testl
cltd
lock
push
lret
sub
subl
adc
movsb
clc
iret
cmp
mov
daa
push
sub
lret
sbb
push
dec
repz
mov
es
cld
sahf
mov
adc
push
add
cwtl
pop
divb
add
adc
sub
mov
in
push
cld
stc
mov
in
pop
adc
addl
dec
mov
mov
sbb
std
mov
sti
idiv
sbb
mov
imul
sub
cmp
mov
sbb
cltd
jns
addr16
sub
xchg
leave
push
jb
or
jno
ds
int3
pop
pop
call
test
cmp
jns
ror
xchg
fisubl
jns
push
lock
call
cmpsl
je
outsl
push
fisubrs
mov
mov
into
cld
decl
mul
and
iret
pop
test
dec
mov
push
jge
les
fs
mov
out
mov
es
repz
and
and
iret
mov
jp
xchg
jecxz
lock
xor
imul
pop
sbb
jl
pop
pushf
hlt
cli
xchg
sbb
fiadds
repnz
and
inc
fildll
je
and
push
out
mov
stc
adc
mov
pop
or
jnp
shr
pop
cld
ret
shrl
scas
push
mov
cltd
shll
popa
xchg
xor
xchg
cmp
scas
ficoms
test
mov
xchg
popa
fwait
sbb
cmp
push
or
iret
mov
lret
push
push
push
ljmp
stos
mov
jbe
test
fists
mov
ds
sti
push
adc
pop
jg
pop
xor
popa
pushf
cmpsb
jbe
aas
dec
or
loop
pop
js
in
aaa
js
loop
lahf
cmpsb
lock
mov
xor
shlb
shlb
aam
adc
pop
mov
ds
insl
or
test
push
clc
leave
popf
pcmpeqw
rol
cmp
add
in
add
fmul
enter
pop
cli
mov
add
pop
xchg
stos
pop
mov
and
jbe
mov
adc
mov
xchg
xchg
mov
and
imul
sbb
jle
and
jg
das
xchg
insl
popa
mov
inc
add
xor
leave
jp
das
and
xor
sbb
into
cmp
add
shl
jl
add
dec
jle
jl
ficomps
xchg
ds
cmpsb
pushf
xchg
ljmp
je
ds
mov
jae
fs
jnp
push
clc
sub
sub
sub
hlt
scas
ficoml
adc
push
repz
lock
xchg
and
push
lods
loop
mov
xchg
jmp
sbb
popa
xor
rorl
xchg
shll
add
mov
hlt
fwait
addr16
sti
lcall
out
fdivrl
testb
repnz
sbb
vcmppd
mov
adc
push
inc
addr16
rcll
rcrb
repz
insl
imul
mov
or
pushf
pushf
pop
mov
sbb
mov
stos
jl
dec
scas
add
cmp
xor
xor
pushf
add
test
lock
iret
fsubs
fiaddl
pop
jg
xor
repz
ret
sbb
shlb
sbb
insb
dec
iret
pop
icebp
out
das
sub
dec
jae
mov
fnstenv
or
mov
ljmp
adc
pop
nop
popa
scas
shl
out
fwait
roll
adc
inc
subb
shrl
xchg
cmpsb
mov
pop
mov
mov
test
xchg
fildl
cli
stos
ljmp
add
and
jae
mov
xchg
ret
enter
lods
shr
mov
ja
popf
add
or
and
shrb
adc
sub
call
daa
mov
add
push
pop
paddw
push
lods
es
inc
inc
rol
lret
xchg
ja
rolb
push
push
or
adc
sub
cli
or
add
jne
push
jp
inc
xor
dec
out
push
mov
xor
nop
pop
sti
cltd
and
mov
cli
aaa
in
repnz
sbb
mov
mov
sti
leave
dec
push
sbb
and
pushf
sub
cmpsb
xor
outsb
mov
stos
leave
scas
sbb
out
sub
lahf
add
sahf
add
push
aad
and
imul
inc
xor
pop
xchg
cs
inc
mov
dec
sub
xor
dec
movsb
pop
in
test
and
dec
mov
ljmp
mov
ljmp
mov
roll
push
dec
mov
pushf
nop
lock
into
xchg
stos
lcall
sbbb
cmpsl
rolb
or
inc
ficomps
dec
lret
cmp
jns
jmp
or
leave
out
xchg
pop
and
cmp
push
adc
clc
pop
or
add
ret
fildll
notb
int
gs
sub
data16
push
xchg
int
iret
divb
bound
das
mov
or
xor
inc
or
push
in
cwtl
andl
cli
stc
lret
faddl
push
je
arpl
loopne
inc
xchg
imul
dec
push
adc
sbb
pushf
add
sarl
repnz
leave
sub
push
sbb
xor
inc
test
mov
arpl
jmp
or
rolb
ror
lret
sbb
push
clc
inc
subl
andb
cmp
dec
xlat
mov
into
cmp
mov
push
les
std
push
lcall
xchg
fdivrs
add
and
push
movsl
fcom
stos
int
pop
ja
test
out
jb
rclb
pop
jecxz
jle
push
adc
pop
lds
push
dec
jge
lods
jne
aam
imul
add
movsl
push
mov
xchg
or
jbe
stos
sub
jbe
repz
fcoms
outsl
ss
subb
mov
dec
inc
scas
jl
sub
outsb
pop
stos
outsb
roll
sub
inc
xor
mov
dec
decb
pusha
repnz
mov
testl
mov
add
jns
sub
jl
pop
jo
dec
aad
imul
jg
call
aaa
mov
add
das
mov
cs
add
leave
sti
pop
mov
dec
pop
stc
iret
push
scas
inc
or
stos
int3
imul
pusha
sbb
sbb
add
or
jno
dec
mov
insl
lods
je
jns
xchg
mov
lods
and
sbb
xchg
ljmp
sti
ficompl
loope
pop
adc
inc
jg
mov
cmp
rclb
out
pop
aam
cmp
scas
jns
cltd
jns
push
fidivrl
data16
or
or
pop
in
mov
mov
jg
cmp
mov
decb
xchg
fstpl
push
jl
dec
popf
inc
dec
mov
mov
orb
push
dec
flds
cld
xor
fcoms
test
xchg
aad
loopne
movsb
sbb
ss
movsl
les
add
daa
jge
adc
sub
xor
jns
or
test
repnz
sub
jb
pop
sbb
push
scas
ljmp
stos
cli
sbb
xor
aaa
stc
dec
jp
inc
sbb
lock
popf
mov
pop
fidivl
leave
test
stos
repz
loop
outsb
in
dec
in
and
dec
push
ds
lea
xchg
scas
repz
jecxz
sub
push
xorl
loope
mov
xor
or
rcr
add
cli
pop
mov
ffree
and
movsl
cmpsb
leave
insl
pop
adc
mov
insl
push
inc
add
and
iret
lea
cwtl
or
jle
sbb
push
jg
xor
fisttpll
mov
and
es
sbb
addr16
incl
push
outsl
test
and
scas
icebp
call
xor
cltd
ret
or
stos
add
xlat
cmp
jo
notb
lcall
and
mov
or
sbb
push
and
data16
jne
sahf
aaa
sub
in
inc
or
pop
add
and
rcll
pop
jmp
adc
mov
test
cltd
pop
mov
rcr
or
pop
cmp
adc
sbb
xor
mov
push
adc
jle
loop
int3
cli
in
sbb
jbe
ljmp
adc
outsb
adc
cmp
mov
inc
mov
lahf
add
aam
sti
int3
rcrl
into
push
into
in
jbe
inc
lds
jae
push
and
add
insl
push
cs
ljmp
lods
gs
or
push
adc
sub
cmpsl
inc
fldcw
int
inc
push
adc
das
inc
cs
out
pop
xchg
and
in
xlat
push
push
cmp
fbld
sub
sarb
mov
or
jnp
addb
push
lea
jecxz
mov
lds
inc
jnp
sub
xlat
xchg
jmp
shll
jle
xor
ja
pop
cmp
cmc
pusha
imul
inc
lret
cmp
adc
cmpsl
xor
leave
mov
jmp
stc
addr16
lds
out
enter
fnstcw
pop
lock
insl
sub
dec
xchg
insb
inc
ss
jl
and
push
pop
push
push
and
je
scas
arpl
jb
fildll
sub
loope
pop
mov
xor
jl
sub
inc
mov
movsl
adc
out
dec
cli
out
movsb
xchg
pop
test
push
and
xchg
or
mov
adc
into
or
jmp
sub
cmpsl
ret
in
aad
incb
in
mov
cmp
inc
cmp
dec
xor
or
loope
jle
xchg
xor
or
fistps
push
repnz
dec
push
sti
push
push
adc
cmc
jbe
out
out
cmp
jecxz
cld
push
add
icebp
cmp
movl
push
xchg
test
mov
push
dec
fldz
inc
jge
negb
insb
sub
ljmp
mov
dec
loop
outsb
dec
cwtl
addr16
rol
jne
push
scas
cmp
xchg
sbb
int3
fbstp
loopne
xchg
mov
mov
fsub
mov
push
ret
inc
clc
push
ret
cmpsb
and
add
xor
inc
fwait
outsl
mov
dec
mov
in
sbbl
xchg
inc
hlt
test
rcl
inc
sub
popa
out
je
sti
outsb
stos
inc
jp
pop
jp
push
pop
ja
mov
jp
inc
adc
scas
sbb
adc
shrb
add
pop
mov
and
push
jge
nop
inc
pop
mov
pop
imul
int3
cmpsb
cs
mov
sub
and
pushf
int3
mov
and
add
inc
push
scas
stos
lret
ret
roll
in
scas
stos
rolb
mov
jbe
shlb
mov
or
cmc
lods
pusha
scas
jg
fists
jl
cltd
mov
aaa
xchg
cmp
and
jl
inc
mov
pop
ret
mov
push
cli
lret
out
pop
rclb
std
aam
clc
sar
sbb
sub
int3
popa
push
jmp
int
pop
add
outsb
inc
mov
insl
cwtl
cmpsb
adc
pop
jno
shl
nop
gs
push
test
inc
mov
push
xchg
jae
adc
sub
dec
rcrl
dec
adc
xchg
mov
add
inc
imul
in
loopne
inc
pop
into
les
mov
pop
push
add
out
pop
inc
and
sahf
pandn
test
insl
jg
into
cmp
pop
jns
or
jg
fsubs
mov
ja
push
fisubs
dec
xor
mov
aaa
and
xor
jecxz
mov
rorl
mov
repnz
sbb
movsb
int3
lea
fcompl
faddl
ds
or
push
inc
lahf
enter
out
fistl
push
and
lds
popf
orl
mov
aam
fwait
push
and
shrb
aaa
rorl
or
call
mov
add
xchg
mov
adc
dec
popf
stos
push
add
mov
lods
inc
cltd
cltd
jne
pop
int
mov
icebp
scas
pop
cmpsb
notb
or
push
inc
cmpsl
adc
aaa
lods
push
sub
jmp
es
xor
lahf
loop
pusha
xchg
xor
hlt
push
cmpsl
int3
sbb
pop
jmp
cmpb
movsl
popf
fcmovbe
test
xlat
pushf
aad
xor
out
icebp
sub
popf
mov
xchg
and
adc
sub
xchg
stc
push
mov
xchg
stc
mov
arpl
mov
dec
xchg
cwtl
icebp
fadds
icebp
sbb
inc
orb
dec
mov
xchg
mov
xchg
pop
jmp
stc
cwtl
mov
pop
rcl
insb
push
js
xchg
lods
aad
ss
lods
push
push
pop
in
mov
test
adc
sbb
or
loopne
dec
aas
jp
loope
sbb
rolb
jns
ret
ret
mov
cmp
cltd
fildl
push
imul
jae
cwtl
cmc
xor
xchg
sub
fucomp
aad
mov
xchg
push
lds
sub
movsl
movsb
nop
push
pop
loop
ja
pop
mov
repz
shrb
pop
iret
mov
jo
dec
jbe
ror
in
stos
xchg
add
ja
mov
xchg
jle
aam
movl
lods
fidivs
mov
cmc
pop
je
or
insl
jns
push
push
add
addr16
aas
or
or
lods
push
jmp
jns
arpl
sub
pop
dec
movsb
test
push
fdivl
sub
jl
insb
aad
out
pop
push
call
mov
pop
ret
jl
and
mov
fisubrl
sub
inc
divl
cmp
add
jnp
rcr
add
arpl
rcrb
aad
jnp
jae
inc
push
pop
fnstcw
into
mov
stos
mov
mov
call
ss
sbb
add
stc
fistl
push
iret
iret
push
lret
adc
aas
fsubl
lods
push
lea
movsl
leave
ja
fwait
dec
je
add
sbb
or
cmp
jge
data16
rorl
pop
and
jno
mov
add
push
jl
add
ret
out
adc
jl
jmp
enter
cmpb
lret
test
and
lret
ret
shl
sbb
sbb
out
loope
inc
adc
popf
test
xor
loope
adc
roll
xor
mov
sti
ds
arpl
data16
inc
adc
cmpsl
push
shrl
or
dec
jae
inc
cmp
xor
and
or
mov
scas
adc
mov
sbb
xchg
fwait
adc
xor
push
cwtl
imul
mov
loope
hlt
pop
jp
mov
mov
push
and
cmpsb
add
pop
and
lret
pop
push
adc
cmp
push
add
mov
ss
cmp
lret
mov
xor
aam
mov
iret
adc
in
cmp
sub
or
out
shl
pop
insb
adc
pop
mov
insl
jne
mov
enter
add
xchg
arpl
fmuls
outsl
sbb
sti
push
inc
push
pop
out
fisttpll
jno
cmp
loop
cmp
mov
inc
in
out
ficoml
sbb
mov
dec
xchg
loope
adc
mov
shlb
pusha
int3
push
push
push
in
push
mov
inc
sub
pop
out
or
and
sub
lret
inc
dec
sarb
sbb
pop
or
outsb
in
xchg
ret
into
cmp
cmp
and
mov
mov
inc
push
repnz
aam
movsb
lret
cmp
loope
adc
arpl
add
lods
pop
arpl
cmp
push
xchg
sbb
dec
lcall
into
lods
sub
dec
int3
cmp
inc
xchg
ret
andl
pop
adc
add
repz
dec
mov
mov
shlb
xor
jae
dec
ficoms
enter
adc
inc
stos
loope
ds
shr
stos
and
mov
in
sbb
mov
addr16
mov
sahf
mov
leave
test
adc
ret
push
mov
xor
pop
popa
mov
add
jge
int3
data16
fwait
add
jne
push
adc
jmp
or
cltd
mov
int3
push
mov
aam
sti
pop
pop
pop
push
movsb
mov
inc
sub
or
jle
xor
cmp
pushf
mov
ror
mov
mov
hlt
lret
test
xor
sbb
pop
cmpsb
push
add
or
popa
fdivl
ljmp
pop
add
mov
sete
fsubl
xor
test
filds
mov
xchg
inc
push
sub
and
fs
jecxz
adc
pandn
popf
sub
jge
fidivrs
dec
movsb
cmp
inc
push
sbb
ficoms
pop
mul
inc
mov
int3
jnp
cmp
fisubl
lods
out
fs
clc
pop
arpl
nop
shl
add
mov
repz
loop
mov
aam
mov
add
push
je
popa
inc
jne
out
add
fldt
cmp
fnstenv
scas
sahf
mov
xor
lahf
cmp
aaa
mov
jmp
out
jnp
mov
or
dec
xor
xor
mov
std
pop
add
ret
mov
lods
nop
mov
cmp
dec
jb
mov
in
stos
rcll
or
lods
xor
test
int
mov
lcall
sti
inc
mov
mov
inc
pop
adc
cmp
mov
pop
jl
int
push
bound
jno
mov
pusha
shl
xlat
mov
sub
and
std
push
push
lahf
pop
inc
sbb
into
cltd
sbbl
aas
or
dec
jae
add
stos
xchg
loop
dec
cwtl
test
int
jg
sub
or
pop
push
stc
call
das
add
add
imul
sarl
mov
sahf
es
inc
adc
scas
pop
push
pop
and
into
shll
pop
mov
sahf
or
sbb
imul
insl
dec
inc
roll
dec
push
out
sbb
cli
cli
mov
movb
push
mov
daa
mov
mov
fwait
test
out
xchg
mov
and
cmc
lods
pop
cld
jl
add
sbb
les
int
adc
mov
push
stos
mov
add
call
aas
imul
dec
xchg
jg
add
adc
push
mov
inc
daa
lods
sbb
jmp
fnstcw
inc
push
push
xchg
sub
daa
enter
jb
int
lahf
or
in
xchg
ss
lods
or
out
sbb
cmp
or
insl
inc
popf
sub
repnz
sbb
es
add
lret
stos
mov
adc
fisubrl
cmc
dec
mov
stos
jmp
ljmp
outsl
cmp
rcr
loopne
lahf
cmp
pop
add
pop
rol
fs
cmp
dec
ficomps
hlt
das
sub
sbb
mov
mov
push
xor
into
dec
sbb
jae
cmp
jns
pop
rorb
adc
jg
and
xchg
in
inc
jns
xchg
stos
jae
test
fisubrl
pop
pushf
test
pop
out
test
int
cmp
pop
pop
xchg
mov
jnp
insl
divl
mov
mov
and
stc
fiaddl
add
xchg
shr
xchg
jae
and
xchg
inc
lret
dec
push
bswap
mov
es
inc
addr16
push
dec
pushf
jmp
add
stos
stos
mov
mov
add
xor
mov
imul
or
adc
jno
pop
cmpsb
nop
mov
scas
and
pop
gs
hlt
rcll
insl
les
inc
push
mov
push
xrelease
gs
pushf
pop
cmp
jnp
ljmp
dec
into
movsl
lea
pop
add
lret
sbb
ret
scas
add
dec
pop
mov
jne
stos
pop
sub
in
or
sbb
mov
xlat
lock
cmp
add
jp
adc
scas
or
mov
ljmp
pusha
cld
add
add
jp
inc
push
sbb
fcompl
xchg
dec
dec
add
loop
mov
scas
test
aaa
or
repz
or
add
xchg
loop
pop
outsb
sub
mov
jl
cmpsb
or
jb
sahf
iret
js
mov
and
enter
push
test
sub
ja
scas
jae
inc
test
cmp
insl
dec
aam
jl
sub
sub
pop
sub
dec
inc
gs
jmp
mov
push
loop
add
push
pop
into
push
sahf
lock
mov
dec
icebp
arpl
scas
inc
shll
inc
mov
fdivrs
jno
pop
out
add
sub
movsb
cld
sahf
hlt
insl
pop
mov
call
test
jg
mov
or
xchg
sti
push
xchg
loopne
shr
inc
inc
sbb
inc
mov
pop
je
ss
push
das
lahf
cmp
mov
pop
pop
sbb
pop
cltd
and
pushf
pop
jb
adc
rolb
ret
clc
jg
adc
int
mov
mov
xchg
and
push
mov
shll
inc
insl
stos
fcmovnu
cmpsl
xlat
ret
aas
sbbl
xor
scas
jns
pop
out
lcall
mov
jp
loop
xchg
or
ret
mov
out
push
and
xor
add
pop
xorl
jecxz
push
aaa
jns
cmpsl
lods
insb
inc
inc
negb
mov
mov
sub
or
enter
daa
mov
cmp
enter
pusha
or
aam
push
inc
es
inc
or
jp
dec
cli
ja
and
loopne
and
cs
aas
add
stc
push
cmc
aaa
fisttpl
cmp
mov
sbb
inc
sub
dec
lods
iret
mov
or
adc
repnz
push
loopne
xor
orl
rclb
sub
xchg
repnz
jecxz
add
in
outsb
xchg
mov
rclb
inc
pop
pusha
test
out
and
mov
loopne
in
movsb
bound
or
sbb
mov
ficomps
pop
loope
xor
dec
sub
insb
xor
cmp
mov
shld
outsb
xchg
jge
mov
jns
iret
xchg
or
inc
roll
add
pop
xor
push
jl
sub
outsb
dec
sub
fdivr
stos
jns
lock
je
and
pop
inc
sub
push
nop
mov
inc
lahf
cltd
mov
pop
aas
stos
lahf
or
popa
sbb
stos
push
outsl
xor
jle
jo
cmpsl
inc
shlb
cmpl
mov
shr
xor
sti
aas
loope
cs
sti
pop
dec
gs
jns
mov
fbstp
rorl
push
rcrl
mov
jne
mov
and
jae
testl
cmp
xchg
shlb
jmp
pop
cmp
mov
inc
cmp
adc
ret
dec
xchg
mov
add
fstps
pop
adc
jb
dec
push
scas
rolb
jae
dec
cmp
dec
shlb
or
fistpl
es
es
out
fs
sbb
loope
cmp
test
popa
pop
and
sbb
movsb
lret
xchg
int
and
das
ret
add
pop
mov
push
rorb
addr16
popf
addr16
jbe
in
test
test
out
loope
and
fucomp
push
scas
push
pop
push
dec
or
pushf
scas
das
add
lcall
scas
int
movsb
add
ret
sbb
out
js
sar
adcl
popf
push
xchg
pop
repnz
mov
popl
shrb
add
cmpsl
fimull
lret
and
int3
add
xchg
add
push
push
or
sbb
mov
mov
sbb
push
jb
out
sbb
insl
enter
scas
addr16
cld
add
cli
testl
push
cmc
dec
xchg
lods
dec
insb
pop
dec
into
fmuls
jp
mov
xor
out
ja
dec
mov
popf
sahf
push
out
push
pop
sahf
push
and
jg
push
jmp
mov
inc
add
pop
and
add
inc
cmp
ret
sub
mov
movsl
sbb
int
mov
cmpsb
lret
cwtl
adc
mov
outsl
jmp
lea
mov
mov
movsb
xchg
pop
fadd
pop
call
lods
or
xchg
push
mov
int3
stos
pusha
sti
cmp
jp
lcall
mov
daa
pop
rcrl
std
cmp
or
xor
add
orb
clc
fimull
add
dec
les
sub
sbb
rol
add
and
xor
xchg
and
sahf
hlt
aaa
cmp
pop
in
mov
mov
xchg
mov
inc
add
test
nop
test
or
xor
callw
jl
jmp
dec
das
cmc
rcrl
and
in
call
push
outsb
roll
sub
lock
jb
or
adc
jae
sbb
in
dec
js
cmpsb
pop
stc
cld
add
mov
into
cwtl
in
pop
negw
pop
jmp
add
xor
mov
divb
mov
mov
mov
in
mov
mov
scas
xlat
fidivrs
mov
push
ret
push
test
iret
int
pusha
mov
aad
mov
cld
xor
test
or
jp
subb
xchg
adc
dec
jecxz
stos
lods
add
xlat
xchg
xor
fisttpl
insl
ja
movsb
inc
cltd
lods
in
fcoms
lods
jns
cld
cmp
sub
std
test
sarl
jl
lret
mov
and
mov
aas
aas
fstpt
lods
sbb
or
daa
cmp
inc
test
jbe
fdivs
cwtl
sub
xchg
mov
jno
std
je
pop
into
std
shll
dec
cmp
lret
loopne
cmp
into
test
out
ficoms
jp
cmp
xchg
les
adc
fwait
or
jmp
adc
or
roll
add
pop
and
jbe
inc
mov
fadd
jg
loop
mov
lcall
popa
xchg
add
xor
fldt
mov
sbb
icebp
xchg
bound
cmp
adc
hlt
cmp
lock
scas
sti
dec
jns
lds
enter
imulb
fdivs
mov
push
movsl
push
das
pop
push
test
cmp
aaa
js
cmpsl
add
outsl
jg
dec
dec
sub
out
cmpsb
sub
or
jb
adc
sti
xor
je
mov
adc
loop
inc
mov
fistpll
mov
xchg
xchg
jns
dec
lock
repz
test
pusha
inc
sbb
sub
testl
mov
div
stos
jmp
cltd
lret
push
push
dec
imul
dec
cmp
scas
movsl
cmp
push
jge
addb
pop
add
mov
pop
scas
fisttps
fs
push
rcrl
or
jp
adc
xchg
xor
arpl
std
cmpsl
sub
jno
ds
cmp
mov
sub
sbb
loop
mov
lret
fadds
mov
aaa
rclb
rcll
sbb
in
daa
and
testb
sbb
push
sub
pop
xchg
mov
addr16
cmp
push
adc
test
test
sbb
push
jg
adcb
jne
mov
in
jg
scas
roll
sbb
sbb
sub
js
add
add
dec
es
popa
xchg
loope
imul
jns
js,pt
repz
fs
jns
inc
ss
popa
push
repz
ljmp
cmp
cmp
push
movsl
out
adc
and
repz
clc
aad
push
push
sub
xor
icebp
lcall
mov
xchg
outsl
movsb
lods
popf
sbb
mov
test
cmpsl
loopne
nop
cwtl
in
xor
fisubrs
push
clc
or
sahf
sub
cmp
mov
mov
jle
xchg
xchg
and
push
roll
xor
sbb
mov
lahf
pop
or
xchg
pop
comiss
push
imul
pusha
leave
notl
js
loope
push
jbe
pushf
jns
push
fdivl
shl
dec
enter
leave
lods
dec
mov
mov
mov
in
ja
mov
or
jnp
add
orb
add
outsb
sub
test
inc
sti
add
fidivrl
and
sub
mov
add
push
push
stc
push
ja
mov
jmp
jns
add
cmp
jmp
out
loop
dec
push
dec
fcmovbe
jae
fiadds
jmp
xchg
sbb
push
jnp
xor
lahf
push
pop
hlt
sub
jmp
enter
adc
aaa
or
clc
pushf
cmp
in
cmp
inc
out
js
mov
ficompl
jg
in
inc
sti
inc
sbb
or
pop
push
xchg
sbb
loop
outsl
sub
lea
cli
adc
adc
push
mov
jecxz
cmp
in
adc
xor
xor
dec
sub
dec
inc
rolb
or
fcoml
dec
ret
in
push
rcll
and
jecxz
mov
cli
divl
jo
cmp
inc
dec
push
push
ljmp
add
aam
xchg
dec
push
sbb
pop
movb
mov
mov
cmp
daa
fucom
add
movsb
iret
ja
outsl
outsl
xchg
push
mov
inc
or
rcrb
and
mov
popf
pop
dec
inc
push
jmp
cmp
cli
push
mov
ja
dec
jle
stos
and
adc
sbb
or
gs
in
push
push
jge
adc
push
push
sub
stos
xor
mov
gs
popa
arpl
test
decl
or
mov
cmp
in
jecxz
dec
pop
jecxz
pop
movsb
out
test
dec
jle
scas
add
not
leave
fcmovnbe
pop
pop
popa
dec
cld
mov
xchg
rcrl
inc
cmovne
fistpll
adc
hlt
inc
cli
pop
stos
jg
jns
mov
or
and
test
xchg
scas
xor
sub
hlt
jnp
mov
shll
pushf
lds
daa
repnz
dec
push
rcll
xchg
insl
push
push
mov
popa
mov
test
xchg
jae
adc
sub
stos
jno
xchg
jo
jge
lret
or
in
adc
mov
stos
ror
inc
mov
hlt
add
fiaddl
add
ss
mulb
daa
mov
cmp
mov
xlat
dec
mov
cs
std
jbe
adc
xor
pop
xor
mov
lret
xlat
push
adc
add
mov
sub
dec
bound
clc
xchg
lret
stos
les
das
aas
push
fcompl
xchg
lret
mov
stos
fmuls
mov
daa
add
jp
pop
test
adc
pop
jp
inc
xchg
cmp
addr16
and
and
lds
int3
cmp
cltd
jle
decl
out
dec
push
jg
adc
push
jbe
lds
jle
cmp
mov
inc
cmp
jne
inc
sbb
jne
fadds
push
jo
sub
mov
or
xlat
mov
or
and
inc
push
aad
push
bound
pop
icebp
mov
lret
lods
js
movsb
sub
adc
ficoml
inc
cmp
scas
scas
xlat
hlt
lock
rorb
cmp
inc
in
aaa
inc
push
dec
call
ljmp
mov
cltd
ljmp
cmpl
inc
fcoml
sbb
inc
pop
push
pop
sahf
fnstenv
fdivr
nop
sar
mov
cmp
jp
lock
fldl
sub
lods
shrl
hlt
movsb
pop
cli
xor
and
shrb
sbb
scas
cli
ficoms
mov
inc
lret
imul
jb
inc
cltd
stc
std
aam
ficoms
jp
or
xor
es
dec
adc
in
push
fdivp
addb
inc
jmp
mov
add
fistl
leave
mov
push
lret
sti
stc
inc
inc
cmpsb
std
out
fldlg2
mov
push
or
jge
mov
icebp
out
ljmp
pop
mov
mov
fnstcw
stc
jecxz
inc
fiaddl
push
ret
mov
test
mov
outsl
push
xchg
outsl
xor
cmpsl
mov
les
and
das
sub
inc
sahf
es
jl
cmpsb
testb
lret
lds
mov
jg
mov
mov
cmp
fldt
imul
push
adc
cmp
outsl
or
add
ja
ret
int3
xchg
or
stos
push
add
popa
mov
mov
loopne
sbb
iret
mov
cld
les
loopne
jp
gs
mov
xor
loop
clc
test
xor
shlb
fcoms
dec
and
mov
outsb
cmp
xorb
jnp
aaa
mov
adc
xor
add
jae
jae
scas
gs
hlt
outsl
cmp
mov
pop
ud0
lret
jecxz
fimuls
ja
sub
mov
loope
hlt
mov
add
mov
cld
adc
mov
sahf
mov
out
cwtl
out
mov
inc
arpl
mov
ret
push
mov
mov
ret
xor
mov
and
sbb
jecxz
lret
leave
and
sahf
insb
daa
bound
lds
jo
daa
scas
mov
adc
mov
adc
fstps
aaa
jp
and
fwait
cld
cmp
into
fwait
adc
imul
cli
sub
out
mov
cmc
test
pop
mov
nop
and
mov
inc
add
mov
mov
popf
xchg
pop
sub
ret
mov
push
mov
call
sub
andl
in
xchg
jnp
pop
sub
jne
jns
push
adc
jecxz
cwtl
lds
popf
sahf
stos
rolb
xor
mov
or
mov
ljmp
jmp
divb
push
sarl
xchg
ja
mov
pop
bound
cmp
adcb
push
lock
cltd
xchg
pop
pop
pushl
popa
iret
jo
stos
or
shl
fildll
repz
sub
test
push
mov
xchg
iret
icebp
add
sub
gs
cwtl
popf
fsts
popl
in
sarb
xchg
in
pop
jo
je
push
pop
roll
dec
mov
mov
pop
mov
xchg
out
in
xchg
filds
cmp
lock
sub
mov
mov
mov
mov
mov
stc
into
ficomps
arpl
je
jb
cli
xchg
sbb
dec
imul
push
pop
mov
sbbb
push
stos
into
mov
int3
bound
adc
xlat
xchg
cwtl
mov
in
loope
repnz
pop
mov
jne
push
lds
cltd
std
lret
lret
jae
jne
adc
cmp
mov
sub
les
orb
outsl
xchg
js
lcall
icebp
cmc
ds
repz
and
cmp
lcall
adc
enter
ljmp
or
push
pop
add
sbb
aaa
mov
pop
jnp
lcall
ds
iret
insb
insl
loop
cltd
ss
mov
and
inc
mov
inc
imul
std
and
pop
orb
mov
sar
sub
shll
test
xor
adc
mov
int
xchg
adc
jle
stc
fwait
out
ret
dec
and
adc
pop
push
and
mov
jno
imul
sbb
pop
push
sub
cmpsl
push
mov
mov
lea
cmpsb
and
add
adc
mov
rcrl
sub
jp
lret
aad
movsb
lret
out
cmp
lods
pop
adc
sub
push
stos
mov
mov
sub
xchg
pusha
gs
clc
cmp
and
fstps
addl
shll
sar
repnz
loopne
mov
push
sbbb
pop
cmpb
das
cmp
jns
stos
in
xchg
xor
loopne
hlt
add
xchg
add
mov
xor
loop
mov
movsb
adc
or
test
pop
push
stos
fstpl
push
sahf
movl
cli
mov
cmc
xor
in
sub
rclb
lods
cmpsl
push
movsl
adc
iret
in
mov
fdivrs
sbbl
shr
cmp
pop
jle
xor
les
outsl
sub
es
popf
call
inc
loope
mov
and
iret
cmp
or
lcall
cmp
cmp
ljmp
mov
dec
cltd
mov
rorl
mov
in
loop
add
into
inc
dec
loop
xor
mov
stos
cwtl
fnstenv
inc
inc
jmp
push
dec
movsb
push
imul
jns
loope
dec
in
jo
sub
subb
popf
or
out
movsb
sub
xchg
pusha
adc
pop
std
add
inc
push
jg
lret
mov
fdivp
and
les
mov
xchg
in
test
in
and
dec
xor
lret
and
pusha
inc
add
pop
cs
test
lret
ljmp
xchg
movsl
push
xchg
leave
pop
out
xlat
sti
and
sbb
cmpsb
adc
xor
clc
mov
xchg
roll
push
push
inc
push
push
aad
dec
mov
mov
adc
pop
shl
dec
pop
jmp
aad
add
cmpl
pop
adcb
jecxz
sbb
lds
sbb
xor
inc
inc
push
dec
jb
and
or
sub
jg
pushf
xor
scas
cmpsl
test
adc
xor
lea
popa
mov
add
pop
daa
ljmpw
cmp
add
movsb
popf
mov
pusha
xor
arpl
push
adc
sarl
cmp
jns
mov
sbb
ds
lcall
test
or
out
xchg
test
mov
popa
shlb
mov
iret
das
neg
jnp
ja
fnstsw
data16
clc
ljmp
adc
xchg
stc
call
iret
sbb
repnz
lea
or
stc
xchg
scas
lods
pop
pop
inc
pop
ror
and
or
sbb
dec
mov
lds
shlb
imul
test
lea
cmp
scas
inc
mov
cmc
rcrb
testl
fld1
pop
sbb
dec
jp
or
cmp
lret
lds
nop
frstor
inc
rclb
cld
jp
pop
pop
push
loop
shl
bound
pop
adc
dec
popa
ret
jno
mov
ret
push
and
outsl
out
lret
xor
repz
jne
sbb
cmovbe
jae
or
mov
cltd
rcll
rolb
xor
dec
negb
push
push
inc
popa
mov
adc
add
jo
and
push
pop
test
int
cmpl
ret
icebp
lret
sbb
loopne
hlt
in
clc
ja
cmc
std
jno
or
jp
jecxz
dec
sbb
and
idivb
jb
mov
xor
adc
mov
push
cs
pushl
sar
sbb
nop
sbb
pop
aad
add
mov
push
int
sub
sarl
rorb
insl
and
into
adc
and
push
sti
pop
loope
xor
fstl
xchg
aad
daa
pop
jmp
pushf
jne
pop
jo
hlt
dec
jbe
jo
sbb
das
jbe
repnz
push
push
outsb
mov
aam
arpl
mov
test
pusha
jne
jae
jecxz
cs
xchg
dec
jg
xor
mov
mov
sbb
xor
mov
movsb
add
inc
dec
icebp
sti
cmp
fs
inc
inc
xor
nop
add
loopne
ljmp
xchg
cwtl
negw
jmp
lock
fucomip
or
andl
cmp
push
mov
xchg
ss
adc
pop
xchg
sahf
das
shrl
ljmp
mov
xchg
add
fs
addr16
dec
cmp
xchg
xchg
and
neg
push
data16
rcl
fistpl
ja
outsl
dec
shlb
pop
gs
rol
repz
or
shrl
pop
je
lea
out
lea
mov
dec
fwait
jbe
ficoms
push
hlt
repz
and
stos
cmp
ljmp
aam
and
add
js
push
xchg
and
int
ficompl
and
inc
mov
push
clc
stc
or
pop
jl
lock
lds
stos
xchg
or
jle
pop
or
testl
jb
lret
mov
and
or
push
arpl
test
mov
inc
push
sub
jnp
call
enter
pusha
inc
repnz
lea
mov
ficoml
mov
fldenv
sti
ret
sbb
sub
cltd
mov
mov
out
dec
mov
and
fcmove
adc
inc
mov
add
push
xor
insl
xor
call
mov
out
insl
cmpsb
add
jno
cmpsl
rolb
push
dec
mov
sub
sbb
push
nop
jge
mov
and
adc
cld
aaa
mov
cmpsb
mov
push
fdivl
or
mov
adc
adc
jno
loopne
push
xor
push
jg
fsubs
or
cld
aam
cs
loopne
sub
stc
in
mov
inc
cli
lret
sub
or
cs
out
mov
inc
in
stos
popf
mov
lcall
leave
stos
fs
sub
ror
or
inc
pop
aas
aam
jl
add
cltd
mov
or
xorl
or
xor
aad
aaa
andl
mov
push
mov
in
xor
rorl
fstl
cwtl
adc
lret
popa
inc
data16
xor
das
movsl
rcrb
int
dec
scas
test
bound
inc
adc
dec
xchg
jbe
bound
int
xlat
ljmp
pop
mov
fwait
mov
in
out
fmul
jge
out
inc
xchg
mov
xchg
jmp
arpl
fsubrs
xchg
cli
std
into
sbb
inc
repnz
jae
sti
lods
xlat
dec
push
mov
cmp
adc
sub
testl
mov
sbbb
xchg
xchg
jo
inc
add
insl
push
std
loopne
in
pop
lods
mov
add
pusha
adcb
mov
test
subl
es
jge
jno
mov
ja
cmp
sbb
rcll
xor
and
nop
jnp
xchg
clc
mov
push
fstpt
les
add
mov
in
xchg
dec
push
pop
pop
xor
mov
out
jo
mov
loop
cwtl
dec
mov
bound
subb
movsl
xchg
xor
fbstp
pop
and
mov
jle
pop
into
sub
mov
push
aaa
inc
pop
inc
pop
or
icebp
push
scas
inc
cld
std
stc
xchg
pop
mov
sub
cmp
movsl
bound
out
je
or
ftst
ss
jmp
ds
xchg
xchg
mov
cmpsb
aas
iret
lahf
mov
sbb
and
adc
shll
pop
sub
popf
xchg
xchg
jmp
movsl
enter
jmp
daa
jbe
outsb
outsl
pop
inc
cld
jno
push
add
bound
add
push
popf
js
out
inc
testl
jmp
sub
lds
jp
aas
cmp
cs
cmp
lcall
inc
cmp
jmp
add
test
fmull
sbb
push
pop
pop
lock
inc
hlt
xchg
cmpb
push
mov
add
pop
in
mov
scas
mov
decl
mov
mov
icebp
adc
rol
push
xor
or
mov
sbb
out
jecxz
xchg
addr16
out
push
enter
repz
mov
in
adc
fstl
test
fnstsw
xlat
and
repnz
ja
sub
enter
into
and
mov
add
movsb
test
mov
push
sub
mov
sbb
xchg
in
clc
or
cmp
mov
inc
arpl
aas
push
xchg
sbb
mov
dec
fs
dec
in
hlt
scas
sub
xchg
test
xchg
mov
fwait
pop
in
push
fadds
test
nop
sbb
push
or
cwtl
std
cld
sbb
add
aaa
jne
add
imul
aas
add
add
push
ret
mov
fildl
iret
cmpsl
mov
jnp
push
sahf
cli
sub
and
inc
sbb
inc
cmpsl
outsb
mov
pop
lret
scas
ljmp
dec
cwtl
ss
push
hlt
or
xchg
adc
dec
jge
aam
xor
or
test
jne
lret
aad
xchg
jb
dec
and
jmp
lds
test
sti
xor
lea
sbb
xor
or
or
bound
cltd
pop
addb
dec
pusha
daa
movsb
adc
push
mov
adc
mov
or
cmp
sbb
out
or
push
xchg
xor
jb
std
aam
mov
sub
stos
test
call
lock
fs
xchg
sbb
inc
push
dec
adc
cmp
outsb
dec
test
and
mov
sbb
daa
mov
pop
call
jb
fwait
push
add
ficoml
fcompl
in
ja
ja
shrb
mov
push
inc
test
test
dec
cmpsb
lds
sub
push
std
cmp
insl
jle
shll
rol
pop
scas
mov
pop
mov
pop
call
sbb
aad
push
inc
sub
add
xlat
test
jbe
fwait
mov
lods
jg
mov
out
sub
shll
push
adc
xor
test
add
pop
negl
lods
popa
mov
jbe
sbb
push
setp
adc
jecxz
test
push
add
icebp
mov
cmp
push
adc
test
inc
inc
das
sbb
jnp
pop
outsl
mov
dec
pusha
jb
inc
neg
push
pushf
pop
jne
fnsetpm(287
pushf
xlat
ret
sub
xchg
icebp
fistps
push
mov
and
or
out
mov
mov
rolb
push
and
jp
push
xor
aad
test
adc
dec
out
sbbb
pop
mov
jg
aas
out
inc
mov
fidivrl
push
adc
lahf
imul
mov
aaa
addr16
bound
dec
push
gs
or
cld
xchg
cmp
cli
loopne,pt
cmp
ds
sar
repz
clc
dec
movsl
or
jge
xchg
mov
sar
xchg
cwtl
shll
mov
lock
cmpb
mov
icebp
ja
movsb
or
mov
pop
dec
adc
and
pop
push
les
cwtl
jne
push
lahf
fstpt
dec
jle
mov
sti
cwtl
cmp
cmp
sti
shll
cs
mov
jb
add
cmp
inc
xor
mov
mov
pop
xchg
out
pop
roll
repnz
pop
mov
inc
add
pop
inc
mov
in
dec
idivl
mov
sub
sbb
jbe
push
lods
add
dec
imul
push
sub
cmc
and
mov
add
lret
cwtl
aad
or
stc
std
adc
test
mov
mov
fstps
pop
mov
push
inc
int3
cmp
stos
inc
insb
movsb
sub
push
dec
cmp
gs
in
ret
fstpt
mov
pop
adc
cmp
xchg
sbb
out
sbb
push
push
pusha
pop
call
jae
xlat
ljmp
jl
je
ret
or
into
cs
sbb
in
xor
icebp
ds
xchg
push
data16
mov
or
int
iret
test
jp
sbb
pop
rcll
inc
mov
stc
add
mov
in
mov
cmpsb
dec
add
sub
cli
mov
jg
add
stos
out
pop
inc
push
test
adc
xchg
jl
cltd
cmp
lcall
iret
add
fimuls
sub
or
jecxz
iret
jns
mov
lds
xlat
inc
jle
pop
jge
test
mov
adcl
cmpsb
sahf
adc
andb
inc
je
xchg
insb
add
in
mov
sub
pop
popf
movsl
xlat
xchg
lret
fisttpll
push
jb
push
out
push
call
fidivrs
and
rcr
loopne
mov
add
dec
arpl
pop
push
sahf
sbbb
cmp
jmp
das
adc
clc
sub
sub
in
cmp
jne
lea
js
and
push
xor
xor
daa
fucomi
jp
add
test
mov
add
lods
loope
sbb
sub
jbe
push
inc
jge
pushf
cmp
xor
mov
and
mov
jge
xchg
mov
call
and
push
shl
in
ja
push
push
int3
aaa
dec
bound
rcl
ds
inc
shrl
jbe
sahf
fnsave
inc
or
mov
mov
lods
in
mov
jp
scas
push
into
push
dec
test
cmp
out
jae
dec
mov
fstl
insl
je
mov
scas
outsb
in
dec
mov
push
push
xchg
pushf
mov
aad
cmpsl
mov
std
xchg
pop
sub
aam
hlt
or
mov
mov
mov
add
xchg
lahf
or
push
dec
test
add
sbb
mov
aad
jbe
mov
test
in
ds
or
or
xor
jno
add
xor
sbb
sbb
sub
pop
iret
idivb
xchg
jns
inc
mov
cld
loope
mov
enter
in
in
jae
sub
out
xchg
sbb
push
gs
mov
sub
push
inc
jmp
pop
sub
repz
jecxz
xor
dec
inc
ret
movsl
push
mov
pushf
fwait
rorl
dec
fsub
or
mov
or
mov
pop
dec
push
sub
in
pop
bound
icebp
je
cmp
push
scas
mov
mov
stos
xchg
push
gs
pop
xchg
popf
push
mov
push
psubsb
sti
pop
clc
mov
in
pop
sub
pop
jno
or
mov
loopne
jecxz
sub
xchg
or
int3
jecxz
and
cmp
mov
xor
sti
out
xchg
lea
sbb
adc
adc
dec
jbe
push
mov
mov
mov
sbb
push
aad
ja
call
outsb
out
jae
or
pop
mov
cmp
xchg
addr16
lahf
inc
neg
sarb
pop
test
xorb
cmp
loopne
mov
dec
mov
mov
mov
push
loopne
insl
mov
lea
loop
dec
test
aad
call
inc
pop
test
and
dec
sub
xchg
push
mov
xor
add
cmp
and
loope
outsb
sbb
pop
mov
pop
inc
clc
cmp
in
pop
shll
inc
das
psubusb
mov
data16
push
mov
adc
testb
leave
aad
in
and
or
and
xor
in
jecxz
gs
mov
fdivrs
fsubrs
ret
inc
or
sbb
xchg
ja
sbb
nop
sub
xor
les
loope
inc
xchg
jnp
es
int
cld
int
imul
xchg
clc
pop
out
fcoml
add
pop
ret
mov
test
push
andl
call
leave
pop
ja
add
lahf
adc
cmp
push
pcmpeqw
pop
imul
push
test
lods
movsl
or
cli
cwtl
rcrb
shl
cmpsb
movsl
jbe
dec
and
in
sbb
test
push
jae
xchg
andl
test
mov
mov
or
ds
outsl
dec
or
cwtl
addr16
cmp
shlb
or
mov
seto
xchg
ss
cmp
test
fwait
adc
ret
and
iret
inc
jbe
mov
aad
imul
into
aas
add
daa
mov
push
mov
push
std
pop
or
jne
pop
aas
js
mov
movsl
cmc
cli
push
aaa
jne
stos
sub
icebp
repnz
aad
pop
jo
ljmp
and
adc
sbb
lods
gs
arpl
add
xchg
test
cmp
jmp
enter
cmp
and
xor
aaa
sub
push
adc
xchg
popf
push
mov
sahf
movsb
fildl
aad
inc
mov
cs
mov
das
xchg
lods
sbb
push
sbb
add
dec
xchg
pusha
sub
test
hlt
xchg
add
cmp
dec
xor
push
pop
xchg
loopne
adc
cwtl
mov
cmp
cli
lcall
cs
mov
pushl
adc
mov
test
pop
add
fisubrl
dec
sbb
rorl
in
cmp
sub
jb
mov
xchg
jp
add
stc
das
outsb
js
xchg
cmp
or
and
or
adc
pop
and
sti
mov
mov
fs
sarb
xorl
mov
push
sbb
icebp
push
add
movsb
fcomp
inc
xor
mov
sahf
js
test
fwait
or
lret
pop
adc
dec
sub
addr16
mov
leave
lret
pop
or
xchg
or
lret
inc
test
add
xor
notb
lcall
test
out
sub
sub
mov
fnstenv
fidivs
mov
icebp
mov
ja
loopne
and
stc
loop
fstpl
aam
and
adc
push
jl
shr
out
jg,pt
stos
or
dec
adc
cltd
in
negb
xorl
cli
popa
les
mov
jne
pop
in
clc
test
stos
popa
fisttps
mov
maxps
out
inc
and
jg
xor
dec
pusha
push
fwait
lods
adc
inc
bound
push
ds
cmp
push
or
cs
idiv
dec
push
mov
sbb
add
sbb
push
rcrb
addr16
cmpsl
mov
lods
lea
fdivrl
cmp
std
push
mov
fisttpll
lock
movsb
and
aam
adc
pushl
dec
popa
xlat
sarl
jle
js
andl
push
cmpsb
sbb
call
xor
cld
sar
test
cmp
jnp
jle
inc
xor
mov
pop
xorl
adc
sub
cmp
push
mov
popf
imul
rorb
sbb
fs
lret
movsb
inc
cmp
inc
inc
push
or
push
adc
xorb
push
daa
mov
lret
or
rcll
jge
pop
stos
jae
fs
pop
ret
mov
aas
jecxz
mov
loop
rolb
push
add
mov
or
xchg
dec
test
jb
mov
jecxz
cmp
cmp
pop
les
mov
fbstp
add
add
push
sub
fld
adc
cmp
mov
sti
aaa
or
cmc
jns
fidivl
inc
adc
in
leave
ja
mov
out
mov
shrl
ds
push
sub
sub
sbb
sbb
push
cli
jno
dec
xor
and
inc
and
test
xchg
mov
dec
push
call
insl
hlt
add
pop
ds
xor
mulb
or
jecxz
adc
push
and
iret
push
inc
sub
jnp
push
dec
mull
imul
sub
fmuls
sahf
ljmp
or
sub
and
or
add
aas
add
dec
jno
xor
iret
nop
stos
test
xchg
lahf
jnp
das
pop
xchg
mov
pop
mov
mov
push
xchg
xchg
push
ljmp
pop
pop
mov
jle
idivl
stos
loopne
jne
js
cmp
mov
pop
sbb
addl
xchg
adc
adc
push
adc
ret
into
push
cmpsl
cmp
dec
inc
lcall
pop
jno
jmp
push
test
ret
out
mov
pop
sbb
outsb
loopne
sbb
sub
push
test
sbb
pushf
inc
loope
jbe
cmpsl
xchg
cmpl
add
cld
out
std
pushf
js
xchg
cmp
loope
repz
fucomip
dec
xchg
cli
movsl
push
enter
ret
fidivl
mov
xor
in
lods
push
ljmp
stc
sahf
push
test
push
and
aas
jne
xor
jne
dec
inc
push
pop
dec
lcall
aam
jmp
and
das
dec
shrl
xchg
dec
mov
sbb
jne
xor
sbb
rclb
insl
sbb
add
loope
stos
jle
xchg
jne
fadds
push
sbb
and
inc
rcr
cmpsb
sti
pop
sbb
loop
cli
xor
xor
sbb
lods
xorb
fs
sbb
outsb
cmp
mov
or
mov
xor
xchg
cmp
psrld
out
call
pop
aaa
out
outsb
lcall
xchg
jbe
push
jns
dec
mov
pop
inc
scas
jbe
fbld
jno
shlb
push
push
jns
repz
lahf
stos
pop
adc
jae
xor
fisubrs
adc
mov
lds
sbb
js
data16
dec
push
nop
cmp
scas
inc
sbb
loop
mov
jmp
inc
loopne
xchg
pop
inc
jp
jns
rorl
clc
imul
xor
std
inc
xor
xchg
pop
andb
mov
ss
xor
xchg
sbb
push
cmp
adc
jl
repz
out
fnstenv
inc
ficomps
sbb
rol
or
push
cmpsl
fistl
pop
movb
lahf
out
inc
stos
cmp
in
fisttps
shlb
sbb
call
jae
inc
ds
les
into
mov
clc
xchg
sub
lods
icebp
les
loop
adc
dec
sbb
out
call
xchg
xchg
das
pusha
dec
cmp
inc
out
xor
cltd
cld
fstpt
jle
icebp
std
jl
mov
and
xor
dec
push
jp
push
ret
xor
push
adc
add
lock
mov
fistpl
imull
xchg
xchg
adc
insb
dec
push
and
or
outsb
sahf
cli
add
enter
adc
je
ja
movsb
xor
xchg
xchg
pop
fidivl
lock
and
jae
inc
test
hlt
sbb
lahf
pop
sti
push
jbe
ljmp
out
out
out
ficoms
mov
jecxz
cwtl
adc
out
lcall
mov
fcoms
xchg
imul
mov
or
and
idivl
sbb
popa
and
sbbb
ret
addb
ss
mov
rolb
popa
adc
sbb
stc
in
inc
mov
shll
sub
into
jecxz
lea
mov
fimull
int3
push
add
pop
xor
imul
jmp
mov
push
test
sub
xor
push
pusha
addl
aad
sub
push
mov
jle
sahf
or
push
rcl
rcrb
mov
dec
sarb
mov
add
lods
aad
mov
xor
mov
sub
ljmp
mov
sti
fmuls
fldlg2
sbb
aaa
cmpsl
pusha
sbb
scas
rcrl
daa
stos
mov
cli
lods
out
pop
push
xchg
jl
fisttpll
leave
les
negb
loop
test
inc
js
dec
xchg
out
push
mov
inc
cld
nopl
in
xchg
lea
jns
mov
sbb
iret
sahf
pop
lods
jno
and
xchg
mov
and
push
call
cmp
int3
outsb
pop
fisttpll
mov
subl
pusha
jg
imul
mov
fnstcw
lea
ljmp
test
dec
shll
fstpt
stos
into
lods
jns
add
dec
push
xchg
adc
push
or
repz
scas
mov
daa
mov
cmp
inc
sub
and
jbe
add
cmpsb
stos
and
xor
sbb
dec
push
push
mov
cmpsl
pop
mov
adcb
subb
sub
jb
call
xor
lahf
mov
out
mov
rcll
and
mov
push
scas
in
loope
jne
lcall
enter
jne
and
cli
inc
dec
andl
ret
std
jb
mov
in
idivl
inc
sbb
mov
add
cmp
mov
mov
jns
inc
pop
jno
in
cli
pusha
xor
stos
inc
pop
idivb
ss
fadd
adc
popa
sub
xchg
push
push
pop
add
outsb
mov
xor
jnp
andl
mov
xchg
loopne
pop
or
pop
mov
xchg
mov
data16
or
jmp
add
loop
xor
mov
aas
bound
shl
sti
fdivp
out
enter
inc
in
mov
adc
cmpb
push
pop
fsincos
mov
adc
ret
pop
xor
mov
sbb
sbb
xchg
aam
cwtl
cmpsl
jmp
jnp
movsb
sahf
mov
pop
nop
fadd
push
fbstp
mov
arpl
mov
outsl
inc
out
aaa
pop
cmpsb
ja
addr16
fs
push
pop
adc
cmp
pop
dec
cs
cmp
mov
cmp
add
ja
movsl
mov
insl
das
ficoml
push
cmp
xor
fimull
aas
je
lcall
das
aas
fwait
in
out
add
xor
xchg
bound
lock
adc
data16
das
lcall
sub
mov
shl
shrb
sbb
cwtl
cli
shrl
negl
cmp
arpl
and
dec
cmp
fsubrp
repnz
nop
pop
insl
pop
leave
pop
pop
in
je
rcll
mov
test
cmp
inc
mov
imul
sub
jp
out
mov
lock
test
sbb
xchg
scas
push
and
add
jge
dec
mov
repz
stos
push
jp
sub
and
pop
js
sbb
fdivrl
movsl
lock
sti
ja
jmp
xchg
incl
xor
jb
subl
clc
mov
adc
lcall
dec
daa
aaa
imul
inc
sub
xchg
test
fildll
in
xchg
push
out
dec
test
inc
xchg
lret
outsb
data16
insl
ret
ljmp
loope
mov
mov
xor
add
xor
popa
insb
sub
cli
jns
push
push
sti
loop
adc
jns
jbe
sub
inc
inc
fldpi
mov
mov
add
out
inc
call
cli
sbb
dec
sub
rcrl
rorb
inc
xor
jo
mov
dec
pop
cld
sub
shll
fwait
mov
cmp
rcl
js
icebp
push
cmp
int3
jne
or
in
inc
jb
cli
add
xchg
outsb
cmpsb
aam
stos
int3
in
dec
cmp
es
mov
pop
push
mov
sbb
stos
leave
aas
fidivrs
xchg
sub
addl
and
out
mov
lret
insl
jle
dec
lods
xchg
aas
jns
or
sub
roll
daa
incl
jl
xchg
xchg
inc
lds
fwait
aaa
pop
sti
aaa
xor
lret
pop
or
iret
shlb
ljmp
push
or
hlt
pminub
sub
ret
mov
jae
pop
data16
sub
decb
push
sbb
add
sbb
xchg
inc
aad
arpl
or
add
pop
push
or
xor
test
clc
mov
repnz
lahf
inc
cwtl
fildl
xchg
push
dec
fcoml
push
sahf
aas
pop
lret
jg
sarl
in
adc
cli
into
mov
inc
loop
insb
fisttpl
fsts
rcrb
shrl
pop
leave
iret
pop
jae
int3
scas
aad
cld
jge
xor
push
mov
es
push
mov
bswap
movsl
in
xor
mov
xor
add
mov
sbb
das
lahf
xchg
int3
out
test
cmpsb
ficomps
jl
adc
pop
scas
in
jle
jo
add
cmpsl
shrl
enter
push
xchg
ds
lock
sub
stos
adc
js
mov
insl
cmp
push
lahf
add
push
rcrl
hlt
mov
in
shr
call
mov
ljmp
mov
xchg
into
and
mov
fsubr
cmp
mov
inc
inc
and
lods
call
inc
mov
fldenv
adc
mov
test
fimull
outsb
pushf
dec
sbb
or
or
insl
jge,pn
mov
cmpsb
mov
test
imul
cmp
inc
scas
ja
jnp
lret
and
outsb
fidivl
int3
mov
imul
hlt
mov
ds
insl
outsl
imul
arpl
fildll
or
lock
mov
dec
sbb
mov
loop
pusha
add
pop
aaa
test
aam
or
inc
lods
mov
cmp
push
cli
stos
mov
inc
pop
fs
outsb
jb
add
jae
pop
push
or
mov
maskmovq
testl
pop
xor
inc
or
lock
movsl
scas
test
cmp
mov
mov
and
xlat
push
and
push
adc
mov
or
loop
popl
call
pop
push
aaa
jae
daa
dec
test
outsl
mov
push
cmp
fiaddl
and
pop
aaa
test
imul
cwtl
out
or
mov
imul
push
repnz
sbb
sub
cld
cli
rcl
add
out
and
push
push
dec
xlat
ds
clc
inc
loope
mov
addl
scas
pop
orb
sub
add
loop
out
dec
mov
cs
pop
lcall
mov
inc
push
xchg
ret
dec
les
sbb
lea
jbe
ret
sbb
test
mov
inc
mov
xor
and
scas
in
lods
jns
push
int
mov
pop
cmp
hlt
push
lcall
int3
pushf
push
int3
les
pop
mov
data16
mov
jnp
cltd
xor
inc
dec
add
or
jbe
xchg
lods
push
sti
xchg
test
enter
fsqrt
xor
adc
xchg
pop
in
ficompl
mov
inc
or
dec
jo
dec
movsb
add
out
ss
scas
incl
aaa
xchg
sbb
shr
enter
push
outsb
rcrl
dec
add
mov
dec
shr
mov
mov
sbb
aam
shl
stos
cmpsl
mov
xor
cmp
or
push
xor
pop
scas
fmul
rcrl
inc
xchg
cli
ja
inc
lret
sbb
jp
js
gs
hlt
ljmp
jb
orl
aad
and
jge
and
aad
stos
out
inc
ds
call
xlat
jp
push
jmp
jp
xchg
push
cmp
push
ret
shr
jge
dec
mov
xchg
aam
push
dec
addr16
outsl
pop
mulb
test
test
jbe
pop
sbb
push
xor
ss
lahf
xchg
mov
fcmovbe
push
jae
movsb
xchg
aad
sbb
aaa
test
in
test
jnp
outsl
add
leave
dec
mov
push
add
sti
imul
mov
push
sbb
sbbb
rol
mov
inc
out
loop
xor
subb
push
addb
stc
adc
je
adc
pop
es
cmpsl
fisubrs
jl
jmp
dec
jnp
cmp
or
subb
lea
rcl
aad
mov
aad
in
jp
add
jecxz
jmp
sbb
cmp
and
repnz
into
and
push
pop
add
mov
mov
dec
pusha
test
int3
mov
repnz
push
insl
sub
mov
mov
cltd
icebp
mov
push
shll
xor
inc
test
stos
mov
xchg
scas
outsb
cmp
mov
mov
dec
cmpsb
cwtl
pop
jns
cmp
insb
push
xchg
cli
out
out
jno
sbb
call
fisubrl
xor
and
hlt
repnz
and
add
cli
push
xlat
xor
dec
test
stos
jnp
sti
pushf
and
cmc
int3
pop
out
sub
pop
push
cmp
mov
mov
push
gs
and
adc
mov
mov
sub
dec
inc
mov
sarl
jbe
insl
sub
fwait
or
dec
dec
daa
ficoms
aam
leave
pop
add
push
inc
pop
outsl
push
ficoms
or
divl
jbe
and
leave
and
jle
jnp
xchg
xchg
mov
loope
pop
mov
xlat
movsb
push
ficoml
sbb
add
inc
mov
dec
mov
rorb
iret
shlb
dec
imul
daa
sbb
adcl
sbb
pop
gs
or
les
jecxz
notl
call
sti
andps
lds
int3
ret
insl
mov
jle
add
xchg
test
sbb
stos
pop
sarl
shll
lds
addr16
inc
add
ljmp
mov
mov
xchg
cmp
xor
pop
je
cmp
xchg
inc
stos
cltd
pop
cwtl
add
cs
mov
cmp
mov
cmp
rcrb
testb
sbb
inc
cmpsl
push
insb
xchg
pandn
dec
out
xchg
loopne
shrl
or
test
arpl
idivl
rolb
xlat
push
nop
imul
push
sbb
push
jmp
or
jnp
jbe
inc
cli
and
add
shrb
add
ficoml
mov
gs
dec
and
aad
jmp
scas
mov
inc
xlat
add
out
xor
sbb
in
push
jns
jae
jl
sbb
xchg
push
sub
int3
ss
inc
js
adcb
fs
sub
pop
pop
hlt
inc
repnz
stos
pop
aas
xchg
add
pop
jp
mov
sub
mov
xchg
sub
sbb
ljmp
push
pop
jg
std
jo
jl
in
flds
mov
jmp
cmp
mov
mov
jg
lcall
dec
xorl
add
mov
sub
cmpsb
mov
aam
mov
mov
xchg
add
dec
repnz
cmp
rclb
or
and
or
std
loope
faddl
lods
mov
insl
cmpsb
fsub
lods
cmpsl
std
xchg
xor
xchg
mov
adc
pop
jno
jge
mov
lods
mov
mov
ljmp
movsb
jns
jl
xchg
pop
sbb
pusha
fs
sub
xchg
add
movsb
xchg
mov
lods
mov
lret
jno
xor
mov
xor
iret
out
fxch
sbb
imul
lock
push
rorb
push
jns
push
jno
inc
enter
je
and
fwait
push
adc
in
sbb
sbb
imul
jnp
fcoms
xchg
hlt
js
jae
int
lea
rclb
mov
push
jmp
jae
int3
jle
add
push
adc
into
or
mov
sbbb
xor
stc
and
fdivrs
dec
mov
and
sub
or
lods
out
out
dec
cltd
cmp
aam
dec
xlat
dec
cltd
push
sub
imul
imul
pop
mov
test
pop
fstpt
fwait
mov
nop
xchg
test
jo
sahf
sbb
repz
dec
ja
fsts
sub
shll
cld
cs
negb
in
push
sub
pop
ret
rcrl
cmp
fwait
ret
jbe
jg
test
lret
lret
inc
mov
aaa
jo
movsl
jb
loopne
leave
adc
xchg
xchg
or
call
int
pop
lcall
xor
adc
lcall
mov
in
and
scas
js
sbb
cmp
mov
sbb
mov
sar
jecxz
gs
scas
pop
fwait
adc
rolb
inc
add
in
cmpsb
fcmovu
inc
pusha
xor
mov
mov
sub
in
mov
ffree
loopne
aas
into
mov
das
xlat
or
out
pop
fsubs
out
mov
or
jle
sbbl
fst
sahf
adc
iret
mov
and
adc
push
or
fwait
mov
push
add
mov
mov
jecxz
nop
aam
mov
repnz
or
mov
cld
jo,pt
and
add
and
stos
ficoms
and
mov
mov
clc
test
fwait
shrb
sub
lret
bound
ljmp
jo
sahf
cmpsb
xchg
lret
cmp
mov
divb
jbe
pop
sub
mov
cmp
stos
in
div
js,pn
sub
xchg
jb
cmp
sbb
ja
imul
fcoml
scas
dec
inc
add
mov
add
inc
jo
enter
sub
xor
aam
mov
push
rolb
or
sub
ret
pop
xor
sub
leave
xor
dec
lods
push
outsb
fcmovne
push
xchg
das
test
cltd
pop
stos
sub
sub
lods
addr16
or
xor
fld
jae
in
imul
neg
mov
sahf
mov
daa
mov
mov
std
scas
hlt
pop
pop
shlb
nop
mov
cmp
lcall
data16
xchg
push
cmp
sbb
or
cld
mov
cld
aam
call
push
loop
mov
adc
ficoms
scas
jl
arpl
xor
add
insl
push
in
stos
das
test
push
xor
add
mov
outsl
ret
dec
lock
loope
sbb
lret
xorb
movsb
push
mov
mov
xchg
rorl
xor
xlat
arpl
repz
pop
push
jecxz
stos
cld
mov
js
lret
pop
inc
ss
xchg
xchg
and
sahf
stos
xchg
out
jne
mov
in
or
enter
ja
in
mov
mov
rcll
jmp
add
dec
jp
dec
push
das
js
push
pop
loopne
sub
in
jecxz
inc
dec
hlt
outsb
std
sub
and
push
add
xor
adc
mov
fldt
mov
addr16
leave
and
sti
and
sub
js
xchg
lods
movsl
movl
push
cmpsb
adcl
mov
jnp
sub
cmp
test
les
repz
shll
jmp
ret
add
or
dec
jns
xor
inc
loopne
sub
mov
lcall
pop
pop
xor
aaa
in
push
fcomps
clc
aaa
xchg
or
jp
lea
aas
or
fcmove
ds
pop
adc
lods
mov
xor
push
sub
test
sbb
xchg
mov
xor
lds
mov
jmp
dec
loop
add
pop
adc
dec
shll
push
bound
adc
inc
pusha
jbe
ljmp
pop
pop
mov
lret
cmc
or
inc
pop
xchg
adc
push
pop
inc
cmp
or
ret
adc
scas
jle
arpl
inc
mov
ret
xchg
xchg
dec
dec
sti
mov
js
leave
add
jnp
mov
pop
jecxz
pop
pop
cld
dec
mov
push
push
pop
fisubrs
je
fisttpl
push
addr16
sbb
push
pushf
and
ss
call
mov
sbb
or
dec
cmpsl
ret
inc
pusha
or
loope
mov
in
mov
out
jecxz
mov
mov
inc
rolb
test
loop
pop
loopne
pop
sub
lea
adc
sbb
addr16
mov
addl
movsb
fnsave
inc
add
in
scas
mov
jnp
mov
jecxz
test
dec
sbb
push
ja
mov
xorb
mov
mov
pop
adc
imul
jle
mov
dec
xorb
cltd
mov
or
xor
pop
jl,pn
pop
fistpl
mov
mov
out
add
dec
dec
add
xor
loopne,pt
push
pop
jmp
shr
sub
fs
sbb
sub
dec
push
add
cmpsb
test
insl
cli
pop
sbb
mov
mov
mov
aad
in
jle
cmp
shrl
roll
aaa
jge
inc
shll
mov
mov
addr16
sub
cmp
out
mov
insb
or
sbb
test
push
xchg
imul
mov
mov
test
outsl
loope
xchg
dec
xor
inc
divb
sub
xor
jp
mov
jg
mov
and
xlat
push
popf
mov
pop
mov
mov
fstpl
jnp
push
sbb
sub
xlat
lahf
imul
jl
insl
pushf
sbb
out
cmp
pop
xor
aas
or
adc
push
cmp
inc
into
aad
mov
ja
cmp
iret
cs
test
loop
rcrl
mov
enter
pop
sub
and
jbe
imul
mov
test
push
cmp
dec
decl
imul
fcoml
cmp
std
repnz
repz
sub
adc
lret
dec
lret
mov
flds
mov
loop
mov
hlt
dec
push
push
adc
push
jp
mov
clc
inc
xor
es
sbb
sbb
fldt
cmp
mov
xchg
fcmove
sarl
xor
div
sub
adc
cmp
mov
mov
inc
cmp
enter
ja
mov
add
repz
arpl
lods
repnz
mov
jecxz,pt
js
iret
add
inc
or
or
inc
nop
stos
dec
repnz
sub
dec
into
test
dec
or
hlt
popf
or
and
and
mov
pop
cmp
into
gs
pop
lret
imul
movsl
lods
and
xchg
sbb
mov
stc
scas
fcmove
addr16
jmp
filds
adc
mov
aas
jmp
mov
ret
sub
out
xchg
mov
mov
jnp
cmp
cmpsb
sub
into
sbb
lahf
pop
mov
stos
cwtl
aad
xchg
adc
hlt
leave
in
stc
pop
lcall
data16
jmp
mov
inc
mov
imull
add
inc
push
sbb
cmp
cmp
ljmp
hlt
rcrl
mov
xchg
js
andl
pop
dec
hlt
or
mov
test
mov
repnz
cmc
hlt
lahf
inc
mov
cmp
sbb
adc
mov
orl
test
aaa
notl
jmp
xor
jbe
aas
aad
push
sahf
gs
dec
call
loop
jmp
jmp
pop
pop
jge
xorb
cmp
aas
push
jmp
sbb
pop
data16
das
adc
xor
in
sbb
sub
cltd
scas
push
insb
stc
loop
adc
sub
hlt
and
dec
cmp
out
loopne
in
outsb
std
xor
dec
jge
jne
loop
enter
gs
and
or
fdivrl
push
in
setbe
mov
jge
ret
dec
rcll
push
cmpl
or
psrad
popa
or
xor
pop
xchg
imul
shll
or
subl
sarb
stos
xor
xchg
cmc
arpl
aam
xchg
pop
push
xchg
jmp
cmp
lods
pop
mov
sub
jne
push
and
inc
add
sub
jge
sahf
orb
sub
hlt
add
fiadds
pop
mov
adc
pushf
xchg
adc
les
daa
push
fs
xchg
fcoml
aam
push
push
arpl
fsubrs
cmp
xchg
fcompp
mov
pop
pop
addr16
ret
add
enter
stos
push
mov
mov
or
cmpsl
jo
outsl
xchg
adc
int
sub
mov
adc
jae
adcb
out
lock
push
shrl
jp
sub
test
aas
shll
outsl
out
jg
sbb
push
pop
mov
aam
jmp
mov
xchg
loop
and
mov
mov
jns
jmp
dec
xor
adc
push
jns
in
loopne
inc
mov
dec
dec
mov
pop
mov
mov
adc
pop
mov
ljmp
adc
or
daa
mov
jle
cmc
jge
sub
push
and
fmul
rolb
hlt
pop
jb
mov
xchg
pop
or
ljmp
out
adc
loope
push
mov
xchg
adc
mov
xchg
dec
jo
and
mov
xor
insb
inc
ret
pop
sbb
pop
cmp
testb
ss
pop
orb
lahf
inc
scas
icebp
add
jge
xor
loope
pop
adc
hlt
sets
xchg
repz
das
jo
idivl
push
testb
sbb
sub
or
cmp
pop
xor
int
ret
out
lods
mov
in
mov
mov
cmpsb
int3
jmp
add
out
and
es
std
andb
or
inc
mov
dec
add
and
cmp
mov
xchg
xchg
mov
or
dec
sub
repz
cmpsl
cmp
or
mov
mov
push
mov
inc
into
jne
inc
mov
and
cmp
jbe
outsb
mov
icebp
or
mov
or
cwtl
fucomip
pop
int
mov
push
lods
jmp
enter
pop
sbb
adc
mov
popa
loope
cmp
push
je
inc
jns
mov
cmp
pop
mov
or
cli
push
arpl
inc
aas
mov
cmpsb
cmp
cmp
shufps
aad
in
sbb
xchg
jae
or
mov
or
outsl
aas
scas
sub
pop
mov
sbb
xchg
imul
push
clc
mov
out
pop
xlat
sub
add
call
adcb
cltd
neg
imull
adc
lods
mov
fstps
sbb
bound
jl
fdivr
fs
mov
or
jb
movsl
loope
push
push
mov
pop
and
test
lcall
shlb
add
push
mov
movsb
push
into
cmc
add
xor
jp
sbb
mov
cltd
aaa
sub
rcll
dec
lcall
xor
cmp
xor
xchg
insb
js
add
movsb
jae
out
pushf
xchg
and
fldt
popa
in
hlt
jge
pop
test
ffree
aaa
sbb
dec
inc
decb
mov
or
shlb
xchg
arpl
shlb
lods
pop
jb
pop
xor
loope
sbb
or
xchg
xchg
pushf
pop
push
xchg
and
mov
cld
cmp
add
test
sahf
shll
test
loopnew
das
or
and
into
leave
xchg
insl
mov
or
pop
mov
xchg
test
xchg
and
mov
or
je
and
in
mov
mov
add
cmpsl
dec
ret
jg
loop
stos
lods
and
xchg
imul
add
fbstp
jbe
aam
dec
push
jle
ds
bound
mov
scas
lahf
or
js
add
or
call
out
push
pop
lret
rol
test
ljmp
shr
out
roll
insb
lock
orl
aam
iret
dec
ljmp
and
out
sahf
lcallw
mov
mov
adc
sahf
jl
adc
xor
icebp
testl
adc
dec
push
stos
mov
subl
lret
scas
push
adc
jb
subl
sbb
and
xor
lods
insb
mov
adc
pop
mov
mov
inc
mov
pop
jecxz
int3
nop
hlt
popa
jo
fisubrs
mov
cmpsl
and
cli
and
lret
sar
xchg
sub
sahf
sbb
repz
fcomps
dec
mov
clc
sub
inc
mov
loop
sub
xlat
aas
mov
in
xchg
fldlg2
loope
ficomps
jecxz
add
clc
pop
sbb
out
jg
or
jp
ror
cmp
xchg
xchg
xchg
loopne
xchg
mov
repz
imul
push
or
and
fadds
xor
ds
sbb
or
stos
dec
das
adc
inc
pop
xchg
push
jge
push
or
push
fstl
cmp
push
sbb
sbb
push
and
insl
push
mov
fwait
pop
xchg
cwtl
shrb
xchg
jno
or
sub
je
out
ret
mov
xor
xchg
cmpsb
push
or
test
xchg
dec
fcmovnb
shr
mov
shlb
sbb
cmpsb
repnz
sub
out
repz
ljmp
sub
ficomps
loop
adc
mov
jmp
fdivs
aam
loop
mov
mov
pop
dec
dec
gs
dec
jo
xchg
repnz
jge
loop
imul
mov
pop
push
add
lock
mov
dec
out
stc
imul
inc
outsb
xchg
inc
jp
repz
into
es
stos
jecxz
and
movsb
xor
popf
fs
cwtl
arpl
mov
mov
mov
mov
popf
pushl
mov
imul
add
lret
or
test
in
repnz
pusha
mov
dec
mov
sub
pop
jns
sub
out
sbb
cmp
jmp
outsb
sub
inc
push
xlat
xchg
sti
xor
push
rolb
push
push
inc
mov
ljmp
rcrl
rclb
subb
and
mov
fadds
scas
jl
mov
ss
push
outsb
xlat
aas
roll
lret
out
dec
sbb
cwtl
pop
fnstcw
je
lods
jg
push
xchg
stc
add
xchg
mov
aad
pop
mov
lahf
mov
jns
hlt
imul
push
mov
jmp
jmp
push
in
jge
adc
dec
pop
in
jnp
jo
xchg
pop
imul
daa
ret
out
mov
in
pop
daa
aad
add
arpl
ds
cltd
arpl
cmpsb
ret
push
cld
push
sub
adc
sbb
or
pop
ljmp
bsf
daa
inc
dec
cmp
in
mov
xchg
jns
cmp
data16
repnz
push
mov
or
sbb
sarl
adc
fcomps
adc
rcrb
aas
int3
aam
cmc
fsts
loope
out
or
cmp
mov
bnd
les
jns
clc
aad
outsb
cmp
ljmp
iret
popa
pop
push
mov
adc
addb
push
sarl
in
xchg
adc
aad
jae
push
popa
lret
pop
out
mov
sarl
and
or
cmpsb
dec
idivb
rclb
push
pop
or
jno
pop
mov
push
dec
sbb
lahf
jecxz
mov
mov
mov
mov
xchg
outsl
cs
push
add
cmp
shl
jno
movb
out
inc
icebp
jns
mov
ljmp
lds
arpl
shlb
loop
test
xor
cmp
adc
cli
mov
push
fldt
cmp
adc
mov
fs
lods
lea
in
icebp
repz
cli
mov
adc
cmpsl
cltd
clc
xor
pop
test
aas
mov
fsubrs
dec
mov
dec
xchg
stos
faddl
dec
mov
adc
inc
cmpsl
das
enter
mov
dec
addb
push
pushf
das
rcrl
es
pop
pop
jl
test
mov
xchg
mov
sub
mov
mov
and
fildl
pop
xor
jp
cltd
test
pop
push
jmp
ret
push
pop
add
mov
jle
sbb
pop
jnp
mov
loopne
pop
addr16
daa
xor
cmp
or
cmc
adc
int
lods
jb
and
mov
jmp
mov
scas
daa
int
sbb
ss
xchg
into
fisubl
or
sbb
add
gs
jmp
lcall
rclb
mov
jg
sbb
pop
inc
pop
sbb
cmpsl
in
pop
pop
loope
push
mov
out
js
lods
dec
stos
aad
hlt
les
mov
andl
or
rolb
pop
movsl
inc
clc
andl
and
arpl
sbb
in
fcmovbe
xchg
sbb
je
jns
push
rorl
mov
iret
and
inc
les
aad
cwtl
sbb
arpl
xchg
push
out
dec
inc
leave
inc
mov
xchg
cmpsb
adc
cmc
shlb
push
mov
stos
iret
jg
push
enter
out
arpl
loope
push
inc
add
cmc
stc
je
sub
xchg
add
adc
ret
add
jle
outsb
out
xor
mov
out
js
stc
daa
aam
mov
mov
adc
nop
iret
sbb
pop
gs
or
xor
cmp
pop
shl
gs
mov
rolb
mov
loop
sub
cmp
sbb
ljmp
rclb
push
cld
idivl
movsb
inc
dec
pop
movsb
cmp
jg
shlb
sub
fwait
and
mov
out
sub
push
xchg
cs
subb
push
mov
jmp
mov
add
hlt
xchg
lods
iret
add
in
inc
jge
push
out
adc
lcall
fs
inc
ret
popa
add
and
push
sub
xor
add
imul
loop
xchg
jp
cltd
cmpsb
pop
mov
pushf
out
pop
ds
std
cmpsb
mov
cmpsl
movb
xchg
mov
test
pusha
and
cmpsb
inc
mov
and
imul
jmp
mov
daa
and
mov
ret
out
and
xor
ss
xor
mov
adc
cmc
aam
mov
pop
adc
pop
or
cli
jmp
xchg
dec
cmpsl
push
mov
inc
rclb
mov
mov
xchg
mov
loope
imul
and
inc
stc
sub
push
leave
dec
push
rol
or
ss
xor
mov
dec
in
jmp
movsb
inc
add
jno
add
cltd
insb
ss
sub
xlat
outsb
clc
lock
cmpsl
lock
adc
sbb
jl
dec
cmc
rolb
and
mov
or
push
dec
pop
sbb
arpl
xchg
std
faddl
adc
cmp
cmp
sbb
sbb
scas
jmpw
jo
enter
repnz
mov
cmpsb
jmp
test
test
loopne
dec
ljmp
sbb
xor
loop
push
outsb
mov
fdivl
or
cld
popa
rorb
imul
adc
lahf
rcl
imul
mov
mov
shrl
mov
cs
addr16
sub
lcall
push
pop
cmp
mov
pop
fstl
bound
or
sbb
sub
add
push
mov
inc
jecxz
fs
test
pop
sbb
cld
mov
fnstcw
test
stos
mov
cmc
push
sub
and
rol
cwtl
mov
mov
adc
pop
push
sbb
mov
scas
or
mov
aaa
outsl
test
test
fs
mov
or
push
jb
add
xor
les
in
mov
fimull
into
in
sub
adc
pop
outsl
imul
ss
dec
push
adc
sahf
mov
push
jl,pt
add
loopne
pop
lea
into
push
cltd
icebp
jbe
inc
test
inc
mov
test
jmp
cmp
out
fdivs
sbb
das
pushf
out
imul
notl
jge
in
xchg
das
add
add
int3
cwtl
or
stc
rorl
fmuls
mov
push
ss
push
lret
clc
dec
ds
rolb
xchg
stos
xor
jno
incl
and
insl
xchg
xchg
xchg
cmpxchg
adc
push
lea
pop
inc
mov
sbb
shl
pop
jae
cmpsl
jno
repz
mov
mov
paddusb
les
lahf
dec
or
add
and
sahf
adc
popf
cmc
jge
mov
jg
xchg
pop
xchg
int3
popf
sbb
lods
aad
pop
adc
xor
shr
jne
fisubrs
js
int3
mov
cld
lcall
mov
movsb
sub
xchg
insl
clc
lea
jge
mov
jne
sbb
in
or
sbb
xor
inc
inc
ds
dec
out
xchg
xchg
loope
add
jae
fbld
enterw
cmp
jo
sbb
push
or
bound
fs
lret
dec
jno
jge
sbb
cli
xchg
js
and
insb
mov
jp
test
inc
xor
ljmp
fcom
mov
in
sbb
stc
inc
shl
scas
push
enter
enter
out
inc
daa
and
in
in
lret
adc
outsl
rorb
stos
cs
int3
ljmp
das
lods
sub
inc
imul
neg
aaa
lret
popf
out
adc
idiv
and
xchg
xchg
sbb
dec
sbb
push
stos
xor
pop
xchg
fnstenv
loope
repz
iret
add
xor
dec
dec
out
mov
fbld
or
cmp
fistl
out
push
xor
das
mov
test
mov
jbe
ljmp
mov
sub
jno
lret
out
shlb
xchg
cld
adc
jbe
aad
sub
jmp
xor
insl
sbb
aaa
or
adc
fwait
std
cmp
xlat
jmp
cmp
mov
or
sbb
iret
jecxz
mov
fs
fnstcw
xchg
nop
xor
adc
in
lods
push
or
sbb
es
ss
and
pushf
xor
xlat
fcompl
cmp
gs
gs
mov
rcll
lods
dec
cld
das
lret
aam
filds
outsl
in
int3
clc
insl
or
dec
xchg
and
js
mov
push
pop
shr
les
loope
push
cmp
adc
rol
daa
das
jnp
xorl
cmp
dec
fbstp
sub
mov
cs
jmp
repz
mov
jo
push
push
sbb
fisttps
ja
fwait
cmp
int
xchg
or
push
addr16
mov
or
leave
stc
mov
inc
jmp
jecxz
fsubl
rol
scas
daa
add
push
std
and
or
mov
sub
aam
fwait
aad
pop
das
and
fstl
mov
xchg
rolb
lret
loope
cmp
sbbb
das
pop
clc
rol
clc
pop
mov
jae
insl
and
cmp
scas
sub
inc
test
jg
jmp
in
lds
lods
xchg
in
sbb
leave
aaa
sbb
jne
xor
jne
jne
jno
sub
add
fmul
cmpsl
bound
aam
cmp
adc
popa
aas
or
xchg
xchg
adcl
ror
rolb
xor
mov
stos
push
mov
enter
pop
mov
cmpsl
dec
jmp
lods
or
stc
push
adc
int3
test
test
repz
rcrl
fistpll
cli
mov
fidivl
movsb
jne
shll
push
push
or
jmp
push
cmp
or
jne
mov
imul
push
out
imul
sbb
test
add
inc
sbbw
ljmpw
mov
xor
sub
jl
pop
aad
mov
pop
dec
mov
push
xor
test
push
adc
pusha
neg
mov
sub
cwtl
hlt
divl
cmp
or
ret
mov
sbb
aad
push
or
psubusb
sbb
adc
insl
push
sub
scas
outsb
pop
fldenv
mov
push
dec
aad
popf
vfnmsub132pd
dec
push
cmp
iret
add
aas
xor
add
test
dec
bound
orl
cwtl
fwait
or
sahf
iret
ss
popf
repz
xor
push
cltd
div
jmp
arpl
leave
mov
sahf
jg
lret
push
cwtl
sub
std
sbb
daa
fldt
int
aaa
add
jno
sub
cs
ja
data16
outsb
outsb
cmc
mov
mov
jo
and
xchg
push
scas
fsubr
mov
cmpsb
push
into
icebp
ljmp
test
fld
fbstp
fistpll
out
rcll
cltd
stc
aaa
in
int3
inc
push
sbb
das
pop
pop
iret
mov
mov
push
stc
mov
and
lods
mov
cmc
sbb
xor
enter
xchg
dec
jl
jbe
xlat
mov
jnp
push
or
loope
fisttpll
jle
and
add
add
pop
xchg
or
adc
rol
lahf
sti
ja
in
jb
scas
lods
leave
jbe
jae
iret
mov
or
out
xchg
in
and
mov
mov
clc
jg
cmpl
dec
sbb
mov
xchg
dec
and
mov
loop
cmp
sbb
outsl
enter
jne
inc
js
push
sarb
mov
push
popf
mov
push
enter
insb
jp
mov
jnp
mov
shll
mov
loop
xor
imul
jb
sarl
xchg
out
pop
insl
pop
popa
fldcw
inc
jnp
mov
std
push
adc
add
aad
push
ja
stc
clc
daa
mov
ss
sbb
fisubs
mov
fstpt
pop
in
adc
push
fiadds
xchg
fildll
adc
fstps
jmp
shlb
mov
xlat
sub
pushf
mov
mov
adc
sti
mov
inc
xchg
mov
xor
add
push
icebp
hlt
fxam
push
add
cld
and
sahf
cmp
sbb
xchg
in
or
mov
test
ss
gs
sahf
and
lods
jbe
in
inc
lcall
sahf
notl
lcall
sbb
loope
pop
lret
push
xchg
out
stc
add
xor
inc
idivl
push
dec
or
pop
in
mov
test
jno
daa
mov
stos
mov
insl
jno
mov
or
cmc
dec
addr16
and
or
mov
shl
xorl
add
jb
pop
cs
iret
or
andl
mov
mov
xchg
in
fcmovne
push
adc
aas
xchg
mov
mov
std
stos
inc
test
cmpsl
sub
mov
push
ss
mov
dec
and
test
fsubs
jb
test
rorl
les
cld
in
mov
mov
xor
loop
ret
mov
mov
jae
sbb
shlb
sbb
ss
pop
lds
xchg
stc
mov
push
or
xchg
inc
jb
cmpsl
clc
into
sbb
jbe
outsl
insb
mov
xchg
jb
sub
mov
cld
stos
enter
cmp
inc
sahf
pop
sub
fsubs
add
mov
adc
out
jge
js
add
aaa
std
movsl
repnz
push
pop
fdivs
popa
sbb
sub
lcall
mov
push
sub
subb
mov
inc
push
push
dec
push
outsb
mov
sbbb
cmp
jb
fisttps
pop
cmc
adc
lret
adc
adc
out
jg
aam
ret
loop
mov
mov
sub
push
pop
data16
xlat
jae,pn
or
imul
les
sub
xchg
push
and
sbb
sbb
lret
cli
xor
and
jnp
lahf
imulb
pop
mov
jmp
out
mov
mov
pusha
mov
int3
fidivl
jae
add
gs
fnstcw
adc
loop
nop
jb
inc
push
mov
sub
push
sub
roll
cmp
jb
rol
adc
fwait
adc
das
cmp
cmpl
dec
inc
mov
icebp
mov
lret
mov
negl
int
xor
negl
adc
lahf
pop
xchg
cltd
mov
mov
mov
push
lds
dec
mov
leave
cmp
es
cld
or
cs
negl
and
icebp
popa
inc
mov
mov
jp
jnp
lret
adc
push
dec
es
mov
test
inc
popf
iret
inc
push
pop
jne
mov
mov
shlb
dec
xor
cwtl
fnstenv
bound
pop
lret
sub
jb
ja
scas
pusha
movsl
mov
je
xchg
jb
xor
in
stos
and
lock
mov
sbb
jne
or
xchg
movl
vminps
xchg
je
std
cmp
xchg
test
fidivs
test
jp
in
or
mov
jmp
and
pop
gs
xchg
jne
mov
adc
mov
mov
mov
daa
pop
movsl
xor
push
out
or
dec
notb
es
rorb
jo
ja
push
or
mov
icebp
loopne
pop
sub
rcl
jmp
mov
inc
mov
adc
subb
loop
mov
test
or
inc
sub
and
mov
jae
inc
mov
sbb
inc
xchg
mov
sub
shrl
push
sub
mov
stc
jbe
movsb
mov
icebp
sti
rcl
lahf
add
cmp
mov
push
mov
cmp
movsw
jp
out
xorl
fsubp
or
pop
bound
cmp
add
in
imul
hlt
xchg
cmp
and
pop
arpl
insl
fdivrs
fiadds
test
xor
fdivs
cmpsb
xchg
outsb
scas
pop
or
jg
nop
sub
dec
xlat
pop
dec
hlt
sbb
xchg
and
pop
addb
jmp
xor
out
sahf
mov
xchg
cwtl
aaa
mov
jmp
mov
das
pop
repz
xor
push
hlt
or
outsl
les
push
jo
dec
fiadds
sub
aad
xchg
push
or
out
xchg
int
mov
subl
cmp
inc
mov
sti
jbe
mov
cli
pop
nop
daa
call
mov
push
fucomi
pushf
insl
mov
xor
icebp
mov
push
add
in
mov
inc
jae
sub
ret
out
std
sub
push
dec
pop
out
stos
jns
hlt
lods
or
jg
inc
or
popl
xchg
dec
push
jg
fmull
sbb
clc
jl
mov
pop
les
popa
out
ror
rorb
sub
or
in
lods
and
pop
or
mov
cmc
push
jo
and
push
dec
adc
int3
xor
and
fstpl
std
xchg
pop
pop
xchg
cmp
mov
push
mov
divl
stos
mov
mov
dec
aas
out
icebp
pop
in
cmp
sub
adc
jne
iret
in
pop
or
into
gs
fwait
lret
adc
sbb
repnz
testb
rcrl
insb
lods
ja
cmp
ret
pop
adc
dec
jns
adc
jns
lret
in
leave
sub
insb
lahf
dec
ret
mov
jecxz
fwait
dec
dec
je
ret
mov
push
xchg
cmpsl
mov
jecxz
ljmp
aaa
mov
jnp
in
jno
cmc
cmpsl
pop
mov
insb
mov
ret
int3
lcall
dec
pushf
in
mov
sti
xor
lea
pop
mov
scas
mov
icebp
jno
mov
sub
loope
ret
out
mov
enter
stos
ret
decb
pop
mov
mov
or
sahf
scas
cmpsl
leave
ljmp
xor
mov
cmp
je
sub
or
outsl
das
jg
inc
lea
je
leave
jns
dec
inc
pop
add
shll
inc
and
sub
mov
xor
adc
mov
cmpsb
jae
or
jge
and
pop
enterw
mov
cmp
in
ja
jo
lret
or
std
loop
push
mov
xchg
lods
adcl
jns
sub
sbb
call
ss
sbb
aad
pushf
test
ljmp
mov
xchg
push
and
and
ds
movsb
andb
stc
push
and
outsb
dec
mov
jo
aas
mov
stos
arpl
scas
addr16
push
jbe
adc
xchg
xor
sub
mov
jl
fwait
inc
mov
aam
pop
xor
pop
push
ret
movsl
pop
stos
push
incb
in
aam
mov
jle
mov
and
lods
adc
ds
inc
loope
adc
cmp
loope
or
jmp
sahf
dec
mov
adc
enter
jmp
dec
xchg
xchg
add
popa
push
das
popf
stc
push
ds
jnp
push
enter
cmp
mov
push
xor
fxch
or
adc
ljmp
adc
and
mov
xchg
out
push
sbb
aad
add
arpl
push
push
push
scas
cmp
insl
cmpsb
push
pop
xchg
insl
inc
daa
mov
sbb
xchg
mov
ret
lahf
and
pop
push
jne
mov
pop
ss
ds
iret
shr
adc
shl
inc
push
dec
and
stos
sub
mov
fsubrl
and
outsl
ret
scas
inc
mov
stos
xlat
add
imul
cltd
xchg
popf
lret
xor
movl
scas
dec
sub
lods
movsl
jae
adc
mulb
or
not
add
test
cwtl
jne
stos
mov
arpl
iret
pop
imul
pop
add
repnz
mov
push
loopne
mov
jle
sbb
xchg
xchg
push
test
or
mov
test
out
roll
test
lea
cwtl
inc
out
xchg
in
jae
loopne
cs
ret
mov
mov
mov
sbb
add
orb
mov
adc
mov
stos
insb
push
dec
xchg
loopne
std
out
dec
pop
push
sub
ljmp
outsl
or
jg
scas
fwait
shlb
fcomps
jno
or
push
adc
cmp
xchg
fisubl
adc
fdivp
inc
pusha
push
mov
sub
jg
push
mov
dec
rcrb
push
inc
push
xor
inc
dec
sub
jne
cld
dec
lds
lods
ss
cmp
push
in
jecxz
hlt
inc
pop
int
mov
add
sbb
imul
inc
cmp
jl
xchg
xor
dec
es
dec
sbb
inc
mov
push
das
pop
push
shrb
pop
cs
repnz
sbb
cmp
cmpsb
cmpsb
out
and
and
add
inc
jnp
sbbl
sub
lods
and
jns
and
sub
orl
dec
mov
filds
xor
popa
jmp
adc
ja
mov
adc
mov
inc
mov
xchg
cmp
xor
sbb
xor
stos
xchg
mov
mov
loopne
mov
lahf
shrb
jb
out
das
xchg
jb
cmp
jnp
outsl
jp
mov
sti
aas
mov
aaa
test
hlt
sahf
dec
mov
mov
addb
ss
pop
xchg
push
jb
or
jg
and
or
and
sub
subb
movsb
push
aam
cld
pop
test
mov
jl
test
add
es
rcll
cmc
scas
fdivr
add
pusha
mov
test
sub
in
xchg
fs
xor
pop
mov
mov
call
mov
movsl
add
fcmovne
lret
in
aas
cmp
pop
sahf
mov
or
rolb
in
cmp
pop
jb
je
bound
scas
mov
mov
lret
sub
daa
mov
scas
mov
inc
and
mov
ud0
jge
mov
lods
rcrb
pusha
jle
mov
ss
push
push
mov
mov
ss
pop
mov
test
inc
xchg
mov
into
jo
pop
cli
adc
push
mov
fwait
into
fs
popa
jno
pop
push
lock
movsl
inc
jnp
jle
mov
sbb
push
rorb
cs
cltd
xor
aaa
aaa
mov
sub
lcall
mov
into
xor
push
jb
ljmp
and
and
jne
loopne
fwait
call
pop
stos
mov
iret
mov
ljmp
push
pusha
cs
push
aaa
daa
in
nop
roll
in
sbb
ret
dec
sub
sub
shlb
pop
popa
fisubrl
loopne
mov
mov
add
fldcw
xchg
push
add
cmpsb
mov
lods
jg
sub
aad
leave
movsl
mov
dec
out
imul
pop
dec
pop
xchg
shlb
sbb
xchg
inc
fmulp
rcl
icebp
cmpsb
sbb
jne
dec
xor
push
add
pushf
popf
pushf
or
sub
rcl
adc
rorl
xor
and
incl
inc
sbb
daa
push
adc
stos
jbe
enter
sub
xchg
xchg
into
cld
les
mov
mov
aad
sbb
je
mov
insb
hlt
arpl
pop
xorl
jp
inc
loopne
cld
gs
xchg
xor
push
fiaddl
nop
sbb
cmpsb
dec
pop
pop
jbe
and
xor
nop
fwait
outsb
lods
xor
pop
shrl
pop
jge
ret
sub
int3
in
add
aam
std
and
mov
push
cmp
dec
shr
pop
dec
arpl
pop
xor
subl
xor
mov
adc
push
jge
insl
outsb
jbe
js
sub
adc
aas
pop
in
add
out
inc
and
sub
or
xchg
pop
test
movsb
icebp
fs
out
mov
lret
pop
inc
divb
pop
jmp
xor
jge
mov
cwtl
mov
test
mov
sub
movsb
lds
jo
add
mov
ret
mov
lods
cmpsl
and
mov
mov
lods
fistl
roll
in
mov
push
in
daa
mov
cld
ret
xor
lea
jb
push
cld
dec
fs
mov
aam
push
scas
jbe
test
fistpll
sbb
sub
scas
shl
jo
cmp
mov
cli
xchg
mov
push
jp
cmpsl
and
xor
fcmovb
stos
sbb
jmp
adc
sahf
call
inc
lcall
pusha
insb
push
in
inc
sbb
jo
out
and
adc
mov
adc
mov
xchg
pop
pop
insb
addl
mov
call
sub
push
mov
mov
loope
xchg
fcompl
mov
in
dec
or
and
lock
cmc
cmp
mov
mov
push
push
jbe
pop
or
mov
push
stos
fmul
aaa
mov
imul
or
jg
data16
std
pop
je
push
jb
push
loope
xchg
jmp
fsubs
cmpsb
rol
out
mov
imul
int
loopne
out
leave
pop
das
int
jl
jne
jae
dec
aas
jae
pop
push
jbe
sbb
in
add
sbb
sbb
cwtl
add
addr16
jo
push
fwait
mov
outsb
jg
ss
xlat
jne
dec
push
xor
daa
adc
xchg
and
arpl
loopne
sbb
xlat
xchg
and
push
adc
push
outsb
mov
insb
nop
inc
jecxz
inc
iret
sbb
test
sub
cmp
adc
mov
std
gs
aaa
sbb
sub
loopne
dec
lcall
aad
push
imul
mov
inc
push
dec
lahf
incl
jns
in
cmpsl
jnp
pop
je
aad
xchg
repnz
addr16
pop
pushf
lahf
dec
jmp
js
ficompl
xchg
fwait
pop
ljmp
add
or
cmp
mov
test
jb
rcll
mov
push
add
xlat
ret
dec
pusha
lods
aam
sbb
xchg
frstor
sbb
inc
stos
addr16
mov
pop
leave
push
and
movsb
sub
aad
mov
insl
shl
imul
and
adc
jb
jo
lea
ret
sbb
xchg
and
fdivr
test
jb
mov
cltd
fists
jmp
mov
xor
mov
adc
mov
sbb
push
adc
nop
and
ljmp
imul
mov
imul
xchg
sbb
ja
mov
fidivrl
jle
js
adc
push
sarl
push
leave
cmp
shlb
and
mov
jb
cmc
push
shlb
ret
int
ds
lcall
xor
jbe
dec
dec
xor
in
insb
cmpsb
inc
sub
aaa
jmp
xchg
add
inc
movsb
mov
or
loopne
or
repnz
xchg
outsl
loopne
bt
cmp
mov
push
notl
cmp
stc
gs
arpl
cmp
out
xor
mov
int3
lcall
movsb
aad
jno
mov
cmp
sub
xchg
mov
or
pop
jo
jae
idivb
mov
sti
fisubs
cmp
in
cli
arpl
mov
out
das
mov
cwtl
cmp
adc
sbb
test
fildl
push
std
jbe
sbb
cmp
push
mov
mov
insl
push
cmc
add
scas
js
push
mov
js
adc
inc
pusha
movsl
fiadds
pop
push
mov
push
sub
incb
pop
sbbl
adc
and
mov
mov
cmp
shr
clc
add
sti
mov
dec
sbb
or
negb
pop
shlb
push
popa
aaa
push
bound
cwtl
or
in
test
or
ss
enter
jmp
sub
and
sub
out
push
push
mov
sbb
ja
xchg
ficoms
sbb
push
dec
push
loopne
out
mov
xchg
xchg
dec
sub
mov
aaa
mov
cld
out
fwait
dec
push
xchg
or
cmp
pop
shrl
insl
je
sub
cmp
mov
mulb
mov
xor
sub
push
fwait
add
loop
sub
mov
xor
pop
fmulp
mov
std
inc
mov
push
jnp
sbb
add
jecxz
jmp
jbe
ljmp
bnd
or
fucomip
jbe
adc
andl
into
pop
pop
in
sbb
push
mov
and
dec
pop
ret
jmp
sbb
subb
adcl
ffree
xor
ds
mov
sbb
sub
add
push
or
mov
mov
inc
subb
adc
pop
je
dec
xor
xor
cltd
or
or
add
arpl
pop
stos
pop
movsl
repnz
mov
out
call
lea
das
test
cli
sahf
cs
ret
imul
hlt
sbb
daa
mov
adc
jp
dec
jo
mov
add
out
mov
fldl
inc
sbb
leave
mov
adc
aas
xchg
outsb
and
mov
cmp
jge
loope
fldenv
xor
sub
les
lods
rolb
pop
dec
popa
add
mov
pop
clc
inc
addb
frstor
dec
sti
pop
and
enter
loopne
pop
add
cmp
hlt
js
or
call
xor
push
xor
xchg
lret
cmpsl
push
nop
hlt
fmul
add
lds
cmpsl
dec
dec
out
sub
sbbl
aaa
dec
sbb
dec
mov
daa
dec
xchg
sbb
push
mov
or
jmp
inc
testb
in
mov
pop
xchg
lahf
cmc
ret
test
xchg
ret
lcall
add
rcrb
push
into
sti
rcrl
ret
ss
arpl
add
push
sbb
outsb
inc
mov
add
jl
adc
test
fsubl
fsts
into
cmp
test
sub
movsl
test
mov
adc
dec
pop
cld
lcall
lds
mov
cmpsb
sbb
mov
lahf
jae
leave
in
cmp
iret
xchg
negb
xchg
and
mov
sub
orb
jl
mov
les
mov
loopne
bound
jle
pop
pop
xor
dec
arpl
addr16
add
andl
jbe
xor
pushf
lea
fmulp
pop
je
into
mov
mov
fcompl
inc
mov
jne
stos
or
add
sbb
or
cmc
pop
push
repz
test
rol
and
jne
jne
mov
in
sub
aaa
imul
jp
xchg
repz
cmp
add
enter
mov
cmp
push
nop
mov
rclb
dec
push
pop
adc
pushf
pop
mov
add
mov
xor
popa
insb
xor
or
xchg
dec
je
inc
mov
sub
lret
inc
fisttpll
inc
sti
lock
adc
inc
pop
and
enter
leave
dec
stos
ret
aaa
jmp
insl
mov
aaa
daa
add
mov
push
js
jns
insb
sub
push
imul
dec
scas
sub
pusha
jl
icebp
popa
adc
mov
je
adc
dec
in
mov
into
sbb
xchg
pop
mov
push
shlb
sub
icebp
int3
jge
add
les
jge
and
cld
cmp
xchg
xor
mov
lret
inc
jb
xchg
push
xchg
lods
jmp
inc
push
mov
scas
imul
test
fsubrs
mov
mov
adc
push
mov
mov
sub
pop
movb
sbb
iret
push
lahf
mov
and
cmpsb
push
mov
jne
lret
out
mov
push
insl
and
push
pop
mov
sub
sbb
cs
jge
jl
push
mov
or
fisubs
xchg
xlat
imul
push
sbb
scas
inc
scas
sub
sbb
xor
ret
daa
insb
adc
sbbb
in
ss
pop
cltd
mov
mov
cmp
cmpl
mov
mov
test
mov
data16
push
jmp
mov
mov
pop
pop
add
and
mov
xchg
xor
divl
jnp
mov
movsl
adc
enter
mov
fisttps
adc
jl
dec
je
insb
ja
fisubs
cmp
jb
cltd
jmp
mov
mov
es
out
std
ds
fcomi
dec
daa
xor
xchg
xor
mov
pop
and
mov
xchg
cmp
mov
inc
mov
adc
sub
adc
inc
cmpsl
movsb
fistl
inc
push
or
stos
jecxz
das
clc
xchg
sub
mov
loop
dec
loopne
xor
call
outsb
cmp
fnsave
stos
mov
sub
add
push
xor
sub
inc
xchg
jne
outsb
push
add
dec
pop
push
sbb
push
mov
in
ja
sub
xchg
in
outsb
pop
pop
cmpb
movsb
in
fldl
jmp
xor
adc
mov
push
or
test
dec
and
jge
icebp
and
int
adc
pop
call
xor
and
mov
fs
loope
ror
dec
mov
stos
imul
cltd
sbb
in
lods
or
ret
roll
testl
xor
jg
pop
stc
std
cmpsb
inc
test
or
xor
or
or
sahf
les
iret
sub
ljmp
cli
in
jecxz
push
lcall
das
decl
sbb
insl
in
aad
fldl
lock
adc
cli
jbe
mov
popf
inc
pop
popf
xor
iret
lock
push
ret
ja
xor
lea
test
lods
or
mov
aas
sti
popf
dec
mov
pop
mov
dec
adc
dec
dec
data16
jae
add
mov
lcall
push
inc
cmpl
cmp
dec
nop
adc
xchg
outsl
xchg
mov
repnz
sub
loopne
mov
shlb
test
cmp
sub
ljmp
insb
lods
xchg
stc
push
push
dec
xchg
cmp
ljmp
inc
mov
sbb
test
loope
cmp
int
jns
cmp
mov
scas
insb
rorl
insl
nop
inc
jne
jae
roll
clc
insb
inc
stos
test
loope
mov
loop
cwtl
pop
xchg
pop
clc
jle
out
iret
repnz
adc
lock
add
cmpsb
mov
inc
mov
popa
mov
jnp
mov
mov
addr16
push
repnz
loope
push
mov
cmp
imul
and
inc
inc
shll
push
adc
and
sub
arpl
out
movsb
sbb
xor
lret
jno
inc
inc
icebp
js
mov
out
inc
aam
imul
mov
arpl
cltd
inc
int3
mov
push
cs
mov
out
movsb
ja
mov
aas
sub
mov
mov
xor
in
cmc
jnp
inc
pop
xchg
out
xorl
mov
scas
push
mov
jp
in
pop
movsl
ljmp
cld
sbb
xor
cmp
cmc
and
mov
clc
rcrb
mov
rcrb
pop
or
mov
gs
xchg
push
cmpsl
jns
shll
mov
int
or
xor
adc
imul
xchg
adc
pop
dec
inc
loopne
pop
cld
sbb
lock
xchg
and
push
lock
fwait
sbb
lock
aaa
fimull
push
pop
aas
xchg
add
std
loopne
push
int
jle
adc
mov
movsl
lock
lret
dec
cmp
xor
pop
jb
ret
loop
cmp
frstor
inc
pop
lcall
shll
out
push
dec
pushf
sbb
sub
and
push
pushf
xchg
imul
and
insb
out
fnstsw
jge
xor
int
xor
pusha
ss
or
add
mov
xchg
xor
xlat
or
pop
pop
inc
pop
pop
adc
dec
cltd
mov
enter
test
scas
jg
mov
repnz
push
mov
repz
jnp
push
inc
iret
lods
aaa
insl
out
pop
xchg
push
add
mov
mov
jns
pop
mov
jp
sti
push
adc
repnz
dec
cmc
xlat
movsb
jo
popa
dec
or
imull
fmuls
cmp
cmp
sbb
ds
int3
and
dec
imul
adc
xor
cmp
and
loopne
add
loope
push
loope
fbstp
mov
insb
cmp
fnstsw
loop
data16
xchg
push
cmp
lcall
imul
jbe
fwait
hlt
inc
ret
dec
popf
sbb
xor
jae
jmp
test
ret
add
adc
out
sub
outsl
xchg
sbb
lods
icebp
les
or
add
or
dec
movsb
mov
int
dec
mov
push
loopne
xorb
in
popf
shrl
nop
lcall
scas
arpl
inc
push
pop
pop
inc
xchg
cmp
cmp
ds
mov
mov
push
and
add
xchg
lods
popa
mov
pop
inc
pop
rcll
jmp
mov
out
loopne
jno
cmp
inc
inc
jge
mov
jl
dec
in
cltd
mov
adc
mov
dec
add
jns
pop
stos
cmp
or
cmp
jp
out
push
ret
aad
call
pop
xor
push
mov
test
dec
mov
sahf
sbb
in
mov
push
cli
mov
mov
bound
mov
and
repnz
pusha
push
ficoml
add
jns
and
add
arpl
mov
daa
inc
rep
pop
xor
mov
rcrb
pushl
ficompl
adc
jns
sub
push
stos
fisttpll
jle
in
lods
movsl
in
stos
in
aad
push
adc
fldcw
testl
jecxz
jge
and
xchg
mov
gs
xchg
jg
inc
in
divb
mov
push
shrl
inc
cld
mov
imul
es
scas
sub
ret
shl
adc
add
stos
push
addr16
xchg
popf
inc
inc
xchg
dec
pusha
push
cmp
mov
and
push
scas
lods
push
bound
mov
adc
int
adc
into
adc
mov
in
movsb
mov
mov
inc
push
into
pop
push
clc
xchg
inc
pop
jle
jmp
lahf
cld
pop
xlat
jle
push
push
movsl
in
xorl
cmc
dec
test
xlat
das
add
adc
int
enter
and
sti
xor
incl
fldcw
sub
mov
mov
adc
jno
adc
insl
lods
int3
cwtl
popf
add
pop
mov
jmp
inc
test
aam
cmc
dec
mov
int
into
xchg
jbe
or
xor
lea
push
jp
add
psubb
roll
mov
dec
pop
adc
mov
adc
xor
inc
sub
rcll
push
xchg
and
pop
pop
cmc
xchg
daa
sbb
add
cltd
jmp
lret
jmp
and
fisttpl
mov
ret
mov
cmpsl
inc
addr16
into
and
inc
xchg
mov
jnp
inc
lcall
in
cmp
dec
jp
rcll
xchg
mov
push
or
fcoml
mov
ret
mov
mov
pop
mov
loope
mov
cmp
or
cmp
xor
sbbl
xchg
int
insb
imul
cld
dec
mov
mov
sahf
xlat
int3
or
push
imul
movzwl
cmp
and
into
mov
mov
jecxz
iret
pop
dec
xor
daa
cmpsb
scas
popa
jecxz
xchg
lret
pop
dec
push
cmp
or
mov
push
or
sti
sub
pop
xchg
lods
lcall
jle
out
push
out
iret
sbb
shr
daa
dec
iret
inc
int3
dec
test
dec
jno
rolb
cmp
outsb
test
cmpsb
sub
add
and
or
iret
xchg
insl
dec
mov
out
test
in
cli
popf
or
xor
cltd
imul
adc
sub
cmp
lcall
xchg
stc
or
stc
sbb
pop
pop
mov
xlat
cmpsl
xchg
and
sbb
xor
jno
cmp
and
sbb
jo
notb
ds
jo
push
iret
lcall
shll
dec
cmc
fsub
incb
mov
iret
pop
rcr
out
jae
push
fists
fmuls
push
shll
cmovb
repz
fldenv
dec
push
mov
mov
adc
and
rcll
cmp
int3
aad
test
imul
and
ret
dec
bound
insl
dec
adc
xchg
mov
sub
sub
and
icebp
or
in
jecxz
mov
push
xchg
pop
xor
pop
aaa
outsl
mov
pop
mov
xchg
mov
and
sub
in
stos
or
sub
xor
lds
push
dec
movsl
decl
loop
sti
out
cmp
in
popa
adc
and
mov
cmp
adc
es
inc
mov
gs
pop
sub
sub
aad
mov
cmp
inc
jae
aaa
sti
dec
jmp
lods
mov
jbe
mov
fists
pushf
fsubrs
mov
jmp
push
or
mov
insb
mov
movsb
inc
cltd
ret
fs
call
call
dec
ficomps
cmp
mov
popf
jge
pop
pop
insl
dec
add
pop
pusha
aad
testl
pop
fiaddl
outsb
cmp
push
aas
push
popf
ret
sbb
ds
xchg
outsl
hlt
rclb
rorb
jae
lods
out
jo
dec
add
pusha
xor
sub
rcrb
cwtl
sub
sbb
mov
les
or
push
pop
outsb
pop
test
cmp
fstp
mov
shr
jmp
mov
insl
dec
push
adc
fnsave
xlat
pop
dec
xchg
sbb
xor
or
int3
sbb
and
in
leave
mov
adc
mov
in
nop
pop
scas
fists
pop
mov
or
imul
jmp
xchg
ficompl
sbb
daa
hlt
push
xchg
xor
je
loope
dec
xorb
xchg
loopne
pop
pop
mov
xor
dec
jo
pop
cmpb
fsubrs
or
lods
rorl
mov
jg
shr
and
and
xchg
ret
jae
xchg
dec
add
or
xlat
jnp
and
imul
pop
mov
insb
or
inc
hlt
cmc
stos
mov
sbb
daa
push
test
fistps
into
cmpsl
mov
lds
outsl
popa
sub
jne
pop
cmc
outsl
dec
mov
jne
or
or
shrl
mov
add
stos
add
pop
mov
mov
lods
push
lahf
jmp
popf
ljmp
mov
adc
faddl
jno
pop
es
mov
xchg
add
cmpsb
fstpl
xor
push
cmp
xchg
xchg
sub
les
divb
push
shlb
popa
sub
decb
pop
out
xchg
aas
imul
data16
push
push
lods
insb
dec
imul
movsl
jo
xchg
lcall
cltd
cmp
mov
cwtl
push
movsb
or
inc
adc
sarb
lcall
scas
push
mov
outsl
lods
outsb
shl
inc
cmp
fnstenv
jns
push
call
and
adc
push
xor
outsb
xor
jg
adc
sub
pop
repz
pop
sbb
cmovo
jbe
pushf
dec
or
ljmp
dec
sbb
push
sub
cmpsb
daa
arpl
add
test
sbb
cmpsb
lret
loopne
adc
inc
xchg
sahf
cli
stos
inc
subl
mov
mov
fwait
dec
dec
jb
and
std
jbe
out
and
add
jnp
inc
jle
loope
cmp
sbb
sub
out
xchg
jecxz
popf
cmp
ret
mov
pop
jge
xchg
mov
add
push
xor
in
cmc
insl
push
sbb
mov
and
jl
push
hlt
ds
mov
popa
adc
imul
mov
mov
jle
sbb
sti
xor
imul
xor
dec
xchg
lahf
adc
sbb
jb
loopne
mov
pop
fistpll
outsl
in
jg
jle
or
and
dec
jo
push
push
jmp
icebp
jno
cmp
sub
gs
dec
adc
mov
gs
sub
push
sub
jbe
negb
into
xor
mov
aam
bound
adc
xor
test
sbb
outsb
iret
mov
fsubrl
cmc
or
xchg
ret
iret
stos
lods
cmp
mov
jge
fnstcw
loope
push
mov
push
das
ja
xor
loop
aad
mov
fbstp
jle
das
sti
nop
mov
lahf
inc
loope
hlt
ror
mov
and
ret
jno
xor
dec
push
pop
push
ds
nop
jno
mov
imul
das
cs
add
pop
dec
dec
inc
push
cwtl
mov
cmp
adc
std
int
call
into
jmp
out
inc
push
cltd
add
in
fnstsw
pop
and
loop
push
mov
addr16
sub
xchg
out
fimuls
sub
inc
cmp
scas
push
sub
xchg
push
sub
pop
add
xchg
icebp
stos
clc
dec
rcl
pop
push
mov
insl
fwait
ret
xchg
lock
dec
leave
mov
dec
mov
dec
or
sbb
or
pop
jno
and
hlt
pusha
cmp
out
push
push
mov
mov
inc
mov
shrl
test
imull
sti
adc
cmp
enter
sahf
xchg
mov
adc
jle,pt
test
jle
sti
adc
stos
sub
fisubrl
fs
movsb
mov
clc
gs
jnp
stc
fs
icebp
and
in
mov
addl
out
scas
mov
mov
cmp
outsl
fsubl
sub
mov
cltd
int
sbb
mov
push
push
test
sbb
or
sub
or
gs
popa
rcrb
mov
xchg
xor
cwtl
dec
pop
aad
inc
mov
shll
fnsave
add
fldt
mov
dec
shrl
push
stos
cmp
inc
dec
pop
cmc
inc
inc
fadds
dec
xchg
fsubrs
sbb
cmpsb
cmp
jo
pop
sub
fstl
loopne
out
stos
add
or
iret
imul
add
mov
js
movsb
sahf
pusha
cmc
test
fwait
negb
popa
lahf
fxch
repnz
aad
push
in
loopne
fisttpl
dec
outsb
fstpt
mov
or
pop
popf
je
cmp
adcb
mov
dec
and
fwait
flds
push
cmpsb
shll
movsl
mov
pop
jno
mov
pop
sbb
inc
inc
mov
fistps
dec
push
lcall
ret
fstpl
test
mov
or
nop
hlt
dec
push
cwtl
cmc
repz
out
rcll
rorl
fiadds
cmp
mov
jo
cmp
scas
fiaddl
mov
pop
inc
popf
cmc
es
cmp
fimull
popf
outsl
pminsw
aam
mov
push
mov
sbb
test
test
dec
lea
mov
pop
out
mov
shlb
jle
adc
leave
pusha
aaa
push
jnp
sbb
jmp
or
mov
push
push
inc
mov
pushf
pop
jecxz
in
fidivs
encls
les
sub
mul
mov
fs
mov
fs
mov
loopne
clc
dec
jae
js,pn
mov
cmp
notb
dec
dec
mov
gs
jns
mov
xor
pop
add
out
pop
addb
push
inc
addr16
sub
pop
xchg
xlat
shrl
lods
jnp
jb
stos
push
push
jp
cmp
or
adc
inc
sbb
lret
inc
das
sbb
mov
or
sbb
addr16
out
sbb
xchg
movsb
add
and
out
outsb
loopne
sub
scas
push
adc
mov
cmc
stos
mov
daa
and
jbe
cld
xor
into
insl
xchg
les
icebp
push
mov
fcom
mov
pop
dec
mov
push
in
stc
pop
mov
xor
arpl
sbb
mov
std
movsb
aas
push
jnp
iret
in
dec
cmpsb
jb,pn
sub
orl
mov
daa
sti
add
pop
fdivs
pop
pop
jbe
outsb
loopne
mov
jae
lods
mov
fadd
dec
shll
cmc
xor
sub
sub
jne
inc
adc
test
or
mov
sbb
cmpsl
shrd
mov
insl
or
sbb
xor
lcall
push
inc
icebp
add
push
or
push
mov
lea
push
xor
adc
les
insb
in
inc
pop
js
movups
add
mov
sub
jo
push
ret
in
xchg
dec
lock
dec
jnp
mov
push
out
mov
pop
aam
xlat
ja
fldl
cmp
push
mov
xchg
add
test
add
jb
fwait
ja
inc
icebp
ljmp
ror
negb
in
cmc
dec
push
xor
scas
aam
push
testb
cmp
js
jmp
dec
sbb
cmp
nop
xorl
sbb
xor
out
aad
pop
push
push
pop
scas
loope,pn
insb
shl
test
push
adc
fcoml
stos
inc
inc
lea
or
sbb
mov
pushf
lea
lods
inc
mov
mov
adc
adc
adc
out
out
mov
cmpsl
mov
test
bound
dec
stc
push
lcall
fwait
nopl
sub
insb
enter
in
mov
ret
push
fsubr
xor
fcmovnb
mov
test
push
xchg
cmpsb
stos
shl
xchg
test
cld
mov
sbb
mov
iret
mov
das
xor
and
mov
out
or
test
movsb
xor
iret
mov
push
dec
jne
lock
repz
jge
rorb
arpl
mov
xchg
sub
mov
mov
cwtd
ficoms
adc
nop
ja
mov
and
lcall
pop
call
mov
pushf
sbb
enter
jo
xor
dec
cwtl
inc
and
call
cmpl
int
lret
in
fsubs
push
mov
xor
inc
dec
xor
push
scas
aas
loope
push
xlat
dec
sti
incb
daa
mov
out
add
int3
mov
ret
xchg
mov
int
daa
mov
insb
das
sbb
or
add
push
mov
push
test
rcll
pop
xchg
push
sub
add
clc
pop
sub
or
mov
scas
hlt
push
movsb
and
shl
das
xchg
je
pop
jns
adc
ret
test
sarb
xor
adc
dec
pop
dec
test
mov
cmpsl
daa
fcompl
push
loop
ret
enter
inc
in
add
jg
cmp
pop
scas
mov
push
mov
sub
aaa
jg
movsl
and
aaa
in
sbb
xchg
cmpsl
add
xchg
dec
ljmp
enter
sarb
popf
cmp
pop
xlat
xor
into
push
out
pop
cmpsl
rclb
scas
rolb
push
enter
push
sbbb
movsl
jge
sub
adc
jb
test
outsl
cmp
loope
pop
idiv
push
xchg
out
dec
mov
icebp
test
add
jp
add
aad
xchg
pop
xor
pushf
lea
test
mov
push
or
pushf
pop
xchg
mov
or
xlat
shl
outsl
fdiv
jge
xchg
ss
scas
into
loope
ret
or
addr16
sbb
and
xor
mov
jge
lcall
fdiv
test
mov
icebp
pop
int3
js
stos
cli
mov
push
jge
out
mov
inc
and
mov
and
sub
movsb
stos
cld
lods
mov
mov
pop
dec
jo
sbbl
cli
aaa
push
push
mov
xor
pushf
mov
mov
movsb
mov
mov
sbb
jmp
pop
mov
lea
rorb
call
sub
clc
testb
aad
loopne
popf
jl
mov
stos
cmpsb
int3
ss
xor
rcll
in
dec
pushf
aas
stos
sub
call
scas
loopne
sub
xor
add
xchg
repnz
imul
fildl
or
in
insl
fists
sub
add
pop
mov
into
scas
leave
insb
cli
enter
and
adc
xor
or
xchg
jae
fldt
mov
pop
cwtl
iret
xchg
bound
loopne
dec
pusha
cmc
popa
inc
cmpsl
loope
pop
into
dec
jl
int
fisttpll
fsubr
dec
out
cs
rorb
jo
dec
aas
cmpsl
xchg
fnstsw
cmp
ljmp
scas
test
faddl
dec
in
mov
sbb
shrb
int
xchg
inc
cltd
pusha
orb
stc
pop
adc
mov
mov
stc
test
stos
cld
sbb
and
aad
loop
sbb
adc
stc
adc
fsubrs
push
imul
jl
arpl
jmp
jp
inc
cmpsb
jl
mov
add
subb
xchg
call
jno
cmp
sub
and
fstpt
lret
lret
mov
xchg
fdivs
in
mov
sbb
fucomp
jns
mov
mov
mov
mov
das
mov
popf
pop
shll
sbb
or
fistpll
push
add
pop
cld
pop
xchg
mov
test
icebp
sar
mov
and
xchg
sbb
mov
push
icebp
xchg
pop
clc
outsb
add
mov
aam
jle
nop
mov
inc
mov
xchg
and
pop
mov
insb
insl
dec
in
data16
sbb
in
pop
xor
push
push
jmp
push
dec
fidivrl
out
xchg
aas
test
mov
sub
or
stc
inc
pushl
test
pushf
adc
fists
pop
pop
or
push
xor
das
clc
imul
lcall
rcll
mov
push
testl
sbb
sahf
daa
stc
out
lock
mov
in
out
cmp
lahf
push
cmp
xchg
loopne
rolb
in
jmp
ja
mov
cmp
inc
ljmp
xorb
scas
xor
popa
fwait
aam
push
sbb
add
out
sti
lods
shrl
sub
push
icebp
lcall
cmp
clc
paddq
mov
pop
and
xchg
push
xor
push
lods
adcl
pop
dec
sahf
cmp
out
push
sarl
popf
cwtl
mov
mov
dec
mov
xchg
imul
clc
jl
dec
jns
call
inc
or
adc
leave
fs
pop
push
mov
lods
sahf
leave
cmc
in
mov
sub
int
shrl
sbbb
mov
adc
add
sbb
stos
fisttps
out
in
aad
jmp
pop
mov
dec
xchg
and
test
push
pop
pop
mull
jmp
inc
mov
mov
stos
jbe
add
dec
testl
adcl
movsb
push
sub
call
movsl
fsubrs
outsb
icebp
xor
orb
fucomp
jo
je
push
incl
mov
xor
jae
push
popa
inc
or
mov
loope
fistpll
cmp
mov
cli
jp
mov
cld
sub
ss
das
iret
mov
inc
mov
sbb
inc
adc
addr16
or
sub
dec
in
inc
sbb
in
inc
ljmp
les
cs
or
data16
out
pusha
pop
leave
out
mov
jnp
xorl
or
out
jecxz
adc
fwait
lret
mov
lds
lods
pop
pop
and
or
fistpll
mov
std
or
icebp
es
xchg
inc
pop
inc
ficoms
lcall
mov
mov
dec
cmp
sbb
mov
cmp
pop
sub
and
pop
push
xor
mov
sbb
adc
add
sarb
sbb
add
fldpi
dec
xchg
adc
popf
jp
fisubrs
loop
enter
lahf
mov
jl
stos
daa
jae
fs
test
adcb
mov
adc
sbb
xchg
imul
mov
rcl
fwait
cmp
das
movsb
add
inc
mov
cld
sub
in
jp
lods
jl
cmp
je
test
stos
clc
movsl
mov
dec
or
xchg
push
mov
add
in
aas
add
scas
mov
and
mov
out
cmp
pop
mov
cmc
nop
dec
mov
aaa
jo
cmp
push
mov
mov
shl
add
or
aam
sub
xchg
mov
mov
out
cli
fdivrl
or
out
ret
mov
sub
mov
inc
jp
jle
sub
xchg
pop
or
es
aad
test
and
loopne
mov
in
jo
xchg
mov
in
mov
cwtl
mov
pop
mov
jnp
mov
aas
aad
inc
popa
jmp
sbb
sbb
sub
or
cmp
cld
cmpsl
in
lea
mov
scas
movsb
push
out
jle
fmuls
xchg
xchg
stc
lret
add
or
xchg
testb
xchg
js
popa
sbb
inc
mov
in
daa
cmp
nop
lds
enter
aam
mov
fwait
mov
inc
in
cmp
movsl
mov
lcall
pop
movsb
test
xchg
lods
insb
adc
jle
cmpsl
fst
lds
sub
mov
pop
out
add
dec
pop
lods
mov
mov
pop
cmp
xor
xchg
push
mov
pop
lea
dec
xchg
push
outsb
pusha
inc
push
mov
or
dec
add
lock
mov
lret
or
lea
stos
aaa
jo
cmp
xchg
ffree
mov
lds
and
add
ret
js
push
lahf
push
ficompl
rcrl
and
and
mov
fldt
gs
cs
popl
mov
in
imul
insb
or
jo
fs
imul
fs
xchg
mov
dec
push
sbb
ficompl
inc
cmp
lret
int
test
gs
hlt
cmc
xor
sti
mov
fptan
push
clc
sub
popa
ffree
xchg
movsb
inc
dec
inc
push
push
mov
stos
jmp
adc
sbb
sbbl
add
out
xchg
stos
sub
nop
xchg
mull
and
push
pop
push
push
mov
bound
adc
addr16
mov
adc
mov
sahf
jne
mov
adcl
movsl
sbb
rorb
sub
push
dec
jno
rolb
and
adc
jmp
es
mov
jno
sub
xor
cmp
movsb
add
ss
dec
adc
enter
push
jp
push
mov
mov
jnp
sub
es
dec
stc
fstp
pusha
pop
push
sbbl
lcall
fidivrl
shr
test
mov
mov
jno
inc
js
xchg
leave
aaa
addr16
repz
jp
jmp
loop
popa
js
cmpsb
cmp
sbb
adcl
cld
and
pop
cmp
sub
sub
dec
mov
jle
leave
jb
push
jo
dec
xlat
adc
pop
mov
idivb
in
mov
jnp
aad
dec
inc
clc
sub
pop
outsb
jg
add
fucomip
xor
cmp
push
push
inc
stos
loop
lds
rclb
ljmp
rol
clc
dec
sub
int
mov
ret
out
aaa
pop
mov
fcmovu
arpl
and
inc
test
mov
aas
mulb
daa
mov
jnp
push
mov
sbb
dec
pop
lcall
fdivr
add
mov
ret
scas
and
and
fbstp
push
and
cmp
out
jg
push
and
pop
sub
pop
sbb
and
movsb
add
mov
stos
sbb
in
dec
push
rcrb
mov
pop
mov
fisubrs
or
inc
int
in
pop
fbld
test
mov
adc
pushf
xchg
cmp
mov
scas
mov
inc
outsb
mov
daa
xor
mov
push
dec
js
das
cmc
xchg
dec
movsb
push
dec
xchg
xchg
add
inc
or
int3
cs
leave
stos
mov
sbb
stc
clc
push
loop
mov
push
sub
lcall
jae
add
iret
fmull
and
xchg
adc
xchg
outsl
mov
int
or
inc
imul
jle
push
pop
cltd
lea
mov
and
mov
ss
and
sub
gs
or
or
xchg
mov
int
in
sbb
cmp
lods
mov
icebp
addps
loop
adc
stc
add
cld
bound
sub
sub
xchg
cmp
cmc
mov
mov
dec
mov
jecxz
sbb
inc
adc
push
shrb
cs
stos
pop
pop
ds
or
sbb
in
xchg
inc
addr16
and
mov
sub
mov
dec
lea
inc
hlt
adc
dec
sub
add
andb
mov
add
mov
cmp
push
lret
mov
mov
nop
sub
add
lret
test
adc
mov
fdivrs
mov
mov
sub
jg
fs
mov
push
fisubrl
addr16
pop
jb
or
scas
lds
popf
popf
outsb
lcall
fwait
sub
mov
and
loope
out
mov
lret
jg
xchg
pusha
in
cs
mov
sub
ret
xor
hlt
jae
cld
pop
dec
lcall
mov
in
pop
ds
mov
aaa
pop
jle
sbb
pop
mov
xchg
jmp
push
sub
cmpsl
mov
or
xor
push
lods
leave
hlt
fstl
xchg
shlb
lods
dec
sbb
sarl
inc
xor
dec
xchg
cmp
jnp
dec
insb
jle
xchg
pop
xchg
incb
fnstsw
imul
pop
sbb
push
popf
out
sbbb
js
dec
sahf
dec
int3
in
sbbl
inc
fwait
aad
xchg
sub
pop
iret
dec
push
aad
mov
cmp
pop
jge
outsl
ds
mov
cmp
std
mov
and
or
test
push
rcr
add
das
dec
sub
in
ret
mov
jno
fcmove
add
sub
fwait
add
jecxz
xchg
push
lcall
mov
test
shll
add
aam
mov
mov
add
scas
aad
jmp
cmpl
cld
dec
push
cs
push
into
mov
pop
jp
xchg
dec
pop
cs
xchg
test
cmp
test
xchg
rcll
pop
dec
imul
sbb
sub
sub
in
rcll
imul
mov
pop
mov
arpl
movsl
in
xchg
or
or
jae
mov
in
jge
xor
aaa
fwait
cltd
sbb
xchg
xchg
out
fidivl
in
mov
in
cli
jecxz
xor
clc
mov
sbb
push
fsubl
int
mov
out
into
hlt
test
push
fildll
leave
repnz
sub
xchg
call
mov
gs
push
lret
fnsave
pop
fsubs
xchg
xorl
mov
fildl
insl
push
and
push
dec
xchg
ljmp
das
cmp
jo
cltd
inc
xchg
scas
and
decl
pop
push
push
pusha
pushf
xor
das
insl
jno
adcl
cmp
mov
aam
mov
ljmp
inc
and
or
dec
out
or
adc
mov
int
sub
sub
cmp
sti
or
mov
jbe
int
mov
daa
inc
popf
fmul
inc
push
jl
add
jnp
mov
push
aas
fcom
mov
dec
push
adc
push
mov
dec
mov
cmc
xchg
icebp
or
jecxz
pusha
test
sub
outsb
mov
test
ds
cmp
sbbb
shl
out
push
ret
jne
mov
mov
xor
lret
insb
insl
inc
mov
inc
aas
mov
mov
ljmp
nop
call
dec
arpl
jecxz
mov
movsb
fsubrs
adc
rcr
fildl
push
mov
rolb
pop
stos
and
xor
int
xor
jmp
dec
out
jnp
fwait
repnz
inc
cmp
jg
add
mov
fimuls
test
add
sarl
cmp
sti
int3
ficoml
pop
rcll
aad
aam
push
popf
sbbl
scas
loop
stc
sbb
iret
add
mov
test
daa
push
enter
les
jge
sarb
jmp
fucom
adc
mov
xor
addr16
repz
fs
add
xor
lahf
out
mov
sub
adc
lock
fdivrp
movsb
mov
inc
jp
pop
cltd
mov
lds
pop
and
mov
xchg
int
adc
push
push
gs
insl
push
loop
out
and
sbb
gs
and
add
ficoms
and
popa
push
lahf
or
xor
xchg
jns
pop
faddl
aas
mov
sub
inc
pop
mov
mov
pop
clc
sti
addr16
loope
mov
adc
std
and
in
xlat
jmp
mov
outsb
adc
jb
push
leave
hlt
push
add
divl
loope
push
add
rorb
lahf
pop
neg
jge
xchg
xor
add
lds
lcall
rcr
or
hlt
js
bound
mov
xor
jecxz
inc
dec
gs
dec
sti
test
cld
mov
dec
loopne
aas
xchg
sahf
add
dec
jno
mov
nop
pop
and
add
pop
dec
and
push
jl
loope
movsl
popa
pop
lods
sub
ljmp
mov
cmpsb
into
and
cmp
les
test
scas
mov
pop
sbbl
into
in
inc
cmc
imul
xor
fs
jo
fcoml
or
mov
imul
adc
inc
inc
out
sahf
xchg
cltd
push
mov
lods
pusha
icebp
fistpll
or
dec
cmpsl
les
mov
leave
add
js
scas
fucom
push
je,pt
stc
or
arpl
push
xor
push
sbb
fcoms
scas
mov
fwait
ret
es
cltd
sbb
stos
xchg
mov
mov
fs
imul
push
mov
repz
cmp
out
mov
cwtl
lahf
push
icebp
das
jmp
cmp
pop
mov
int
icebp
sub
dec
jae
ss
test
test
adc
xor
dec
cmp
fldt
gs
sbb
push
inc
test
jno
pop
pop
sub
or
outsb
mov
jl
gs
push
out
pop
ret
lods
lods
mov
fcoml
cmp
push
xchg
sti
mov
mov
dec
icebp
sbb
mov
and
push
loopne
xchg
cmp
rclb
fldenv
pop
fists
xchg
inc
jge
mov
push
insb
mov
mov
or
pop
xor
sbb
out
add
mov
sub
inc
imul
dec
dec
stc
movsl
orl
shll
ljmp
xchg
pop
xor
cwtl
lret
ja
push
call
jae
sub
aas
cmp
fimull
and
shr
or
outsl
loope
mov
in
adcl
lret
push
add
std
mov
jp
aam
lods
sub
jmp
enter
enter
xchg
test
es
mov
jae
scas
adc
sub
nop
mov
pop
adc
ja
ss
scas
inc
push
or
sbb
lret
xchg
and
pop
push
mov
cwtl
insb
scas
mov
cmpsl
clc
and
repnz
cmpsl
adc
icebp
inc
inc
scas
fistpll
shlb
pusha
xor
or
fcoms
and
decl
in
add
sbb
mov
push
je
push
stos
arpl
pop
pop
pop
fnstcw
in
shll
and
les
ss
add
imul
loop
mov
ret
jp
jmp
sub
aas
ds
repz
fwait
push
push
adc
rorb
pop
repnz
cmp
hlt
or
xor
fisttpll
or
inc
out
dec
jae
xor
adc
add
and
out
xor
fldenv
test
lea
fiadds
push
dec
jp
clc
pop
dec
in
test
adc
dec
inc
adcl
adc
and
jg
push
stos
mov
stos
mov
lods
dec
stc
arpl
and
data16
cmpb
adc
push
xchg
sahf
fisttpll
adc
ss
jno
mov
sub
mov
add
add
push
and
xchg
add
filds
aas
mov
cli
scas
mov
dec
in
add
ja
push
fdivrs
or
cmpsb
mov
xchg
cmpsl
push
lds
notb
imul
or
loop
scas
mov
mov
jg
or
cmp
scas
hlt
and
adc
scas
push
imul
loopne
ss
push
jb
lret
sub
rorb
mov
mov
jg
sbb
negl
jl
fmuls
das
xchg
dec
mov
and
fwait
loope
adc
jbe
mov
jg
dec
ud0
mov
pop
fwait
int
adc
arpl
pop
pop
out
jae
cmc
dec
mov
or
ficoms
inc
cmp
es
sub
mov
cmpb
sub
push
cmp
shrb
jnp
push
int3
movsl
and
xchg
das
test
push
jne
add
lret
cmpsb
repnz
leave
mov
daa
mov
lcall
sub
push
cmp
or
pusha
inc
lret
adc
push
push
pop
ds
sub
push
out
int
js
push
test
test
scas
add
add
mov
ds
hlt
add
fwait
or
lea
into
push
loop
dec
jecxz
xlat
adcl
mov
pushf
int
inc
mov
and
iret
push
aad
sarl
or
subb
jmp
aaa
dec
sbb
sub
lret
cmpsl
sbb
push
xor
jb
in
or
sub
jae,pn
je
popa
and
mov
jle
cmp
paddsb
xor
pop
ss
es
xlat
mov
pop
scas
xlat
lahf
inc
shrl
pop
jbe
enter
add
in
aas
inc
movd
lret
insb
loope
inc
sbb
in
sub
lea
dec
add
ret
pop
push
mov
movsl
inc
mov
out
repz
scas
rcrb
adc
test
imul
sub
push
push
jl
ss
js
jg
pop
sub
push
daa
add
insl
jle
mov
insl
add
xchg
in
add
jne
cmp
shll
push
sub
not
cmpb
jne
out
mov
sub
sub
adc
pop
jl
call
ljmp
adc
pop
pop
mov
psubw
insb
mov
mov
loop
scas
jo
cmp
pop
mov
push
pop
js
mov
cwtl
mov
push
inc
cmpsb
pop
cmp
mov
js
mov
fisubrs
or
adc
pusha
loop
repnz
sti
push
dec
movsb
fmulp
lds
inc
movsb
fsub
adc
call
mov
mov
jle
test
sub
and
and
insb
push
adc
sub
or
out
icebp
mov
movb
mov
aas
jp
cmpsl
cltd
shrb
sub
rolb
sub
jle
cmc
xor
and
jno
stc
imul
psubsw
xchg
stc
mov
or
or
cmp
movsb
add
aam
sbb
in
std
add
mov
cmp
and
out
pop
repz
adc
add
loop
dec
test
addl
repnz
pop
jle
int3
xchg
adc
popf
adc
ds
add
cmpsl
hlt
sbb
pusha
jae
pop
xor
js
stos
jl
push
jo
mov
repz
pop
xorl
pop
push
or
daa
js
cmp
mov
sbb
dec
stos
or
insl
mov
out
sbb
cltd
cmp
in
push
sbb
cmpsl
or
jg
enter
aam
push
incb
ficoms
and
in
lock
repnz
mov
rcrb
dec
pop
loope
mov
outsb
imul
dec
xchg
lods
cmp
xchg
push
jb
jae
rorb
enter
mov
push
aas
mov
sarb
or
mov
std
dec
std
xchg
dec
cwtl
out
sbb
pusha
inc
fs
es
std
arpl
add
add
inc
xchg
jbe
xchg
icebp
cmp
movsb
mov
call
xlat
adc
fildl
stc
jge
sbb
push
iret
loop
xor
and
enter
xchg
or
inc
sbb
inc
jmp
es
imul
test
mov
ror
cmp
cld
xor
in
mov
subl
std
fmulp
ds
mov
addr16
inc
test
addr16
push
inc
out
cli
cmc
sub
cmc
fsts
aad
inc
sbb
jb
icebp
jg
sbb
and
xor
jo
nop
cmpsb
mov
aas
lahf
xor
hlt
das
fwait
int3
aad
in
leave
dec
addr16
into
push
movups
jmp
fwait
mov
bound
mov
arpl
push
cmp
fnstsw
repz
xchg
mov
enter
xor
jb
xchg
or
out
ficoml
leave
aas
leave
mov
imul
mov
sahf
sub
loopne
inc
shlb
std
popa
sub
std
or
jl
scas
mov
push
push
cli
mov
xor
add
mov
aaa
xor
shrb
popa
aaa
xor
iret
cld
cmc
xchg
jl
dec
push
iret
ret
pushf
lock
pop
fsubr
inc
push
cmp
clc
divb
cmp
jnp
adc
js
push
sahf
fs
jg
mov
std
xor
xchg
cmpsl
mov
je
iret
sti
les
adc
jno
xor
stc
nop
test
mov
aas
xchg
cmpsl
pop
lret
pusha
xchg
push
cmp
fldenv
pop
xor
leave
repnz
fildll
mov
insb
out
fnstsw
cmpsl
ljmp
push
call
mov
aam
and
add
stos
pop
cmp
inc
jo
adc
in
out
fildll
pushf
jne,pn
int
arpl
test
mov
jmp
mov
jbe
push
icebp
jecxz
adc
and
arpl
popf
and
test
jae
push
jo
sbbl
cmp
bound
outsb
pushl
push
and
lahf
and
dec
mov
subb
fwait
xchg
shll
cmp
sub
fwait
std
into
jl
test
or
cld
xchg
rclb
xor
xchg
add
push
xor
mov
mull
mov
xor
dec
stos
cmp
vpsllq
push
xchg
rep
add
lret
dec
xor
mov
xor
out
mov
xor
mov
mov
popf
movsb
repz
inc
out
lods
ret
lcall
mov
fwait
pop
pop
je
push
adc
inc
les
push
std
pushf
pop
out
push
mov
imul
idiv
test
shll
cmc
jl
mov
pop
lret
orb
xchg
push
mov
sub
in
mov
xor
sbb
out
pop
jg
xchg
mov
test
or
movsb
daa
mov
aas
pop
sbb
idivl
mov
xor
pop
xor
mov
add
pop
pop
sub
ret
repz
lea
add
dec
dec
daa
sub
insl
das
hlt
xchg
add
adc
mov
push
or
push
repnz
mov
rorb
mov
in
xor
cld
dec
enter
sbb
xor
sub
stos
cmpsl
add
fdivrp
les
nop
in
inc
popf
pushf
mov
iret
push
cltd
mov
std
jg
push
aaa
call
dec
xchg
lea
dec
sbb
sbb
xchg
jmp
imul
daa
push
aam
push
xorl
enter
xor
lcall
popf
push
push
test
xor
ficoms
cmp
popf
fcomip
gs
mov
int3
lea
jecxz
inc
push
jmp
notl
fwait
pop
stc
cmc
push
sbb
idivl
imul
xchg
adc
das
or
out
into
outsl
xchg
mov
sub
ljmp
icebp
push
push
addr16
dec
rcrl
push
movsl
push
dec
pop
ror
and
repnz
cld
cmp
adc
push
imul
int3
inc
icebp
xchg
ret
mov
stc
cmc
cmc
cmp
aam
and
mov
xor
mov
popa
xor
xor
xchg
add
aam
cltd
popa
add
push
add
mov
push
mov
push
ja
push
lahf
cmp
or
xchg
push
enter
cmp
add
cmpsl
hlt
and
cmp
xor
and
loop
cwtl
repnz
arpl
add
mov
enter
mov
dec
mov
out
mov
inc
test
rcrb
adc
inc
lods
cmp
mov
xor
or
jl
std
cmp
lods
inc
nop
subl
sbb
jne
pop
inc
xchg
inc
ss
sbb
pop
repz
aam
mov
push
or
jno
sarl
hlt
pop
jle
out
sub
ret
xchg
sbb
stos
shlb
cwtl
cmc
add
out
call
or
lods
mov
jmp
jb
and
push
dec
addl
dec
pop
push
xchg
sbb
xchg
fisttpll
loope
add
pop
sti
pop
pop
fs
cmpsb
add
fdivrs
adc
call
add
out
adc
and
leave
icebp
jl
and
and
je
rcrl
sbb
mov
fsubr
jle
les
out
dec
add
pop
std
lcall
pop
jecxz
jns
sub
dec
sahf
fstpt
scas
rcr
fwait
in
std
jmp
xchg
jne
mov
icebp
adc
and
int
xchg
and
add
sahf
fcmovnb
orb
xchg
jae
cmp
dec
dec
jl
aad
daa
push
das
cmc
les
xchg
cmp
dec
jle
adc
sub
push
xor
jno
or
sub
ljmp
xor
inc
fs
mov
mov
jp
inc
idivb
jg
ret
sub
sbb
xchg
data16
stc
inc
rorb
loopne
mov
inc
out
in
push
add
sti
mov
popf
loop
lret
sbb
jle
ret
mov
pop
lret
rclb
inc
cmc
stc
jmp
imul
inc
inc
and
or
pop
sub
mov
dec
in
cmp
adc
hlt
test
xor
and
test
sub
sub
jmp
sbb
mov
paddusb
out
jp
jno
addr16
xlat
icebp
jo
jnp
pop
ret
addr16
sub
sub
mov
addb
xchg
dec
clc
add
sbb
aaa
packsswb
inc
insb
out
adc
mov
mov
or
jne
out
ret
outsl
inc
fs
rolb
outsl
inc
sbb
rcrl
hlt
dec
mov
cwtl
push
push
cs
pushf
adc
push
inc
jae
dec
ja
sbb
adc
in
jo
hlt
fnstsw
push
inc
sub
insl
aas
push
add
inc
inc
jge
shrd
test
sbb
inc
stc
mov
fimull
xchg
adc
add
outsb
and
or
jo
jo
and
mov
adcb
push
mov
mov
and
xchg
mov
lret
neg
adc
sub
rorl
mov
inc
pop
adc
in
das
push
clc
nop
fimuls
shl
outsb
leave
adc
loope
xchg
mov
lods
sub
jo
hlt
adc
and
or
je
inc
sti
pusha
sbbb
sbb
icebp
shrl
inc
ret
xchg
jge
cld
pop
sbb
push
push
push
cld
popa
and
jle
popa
popa
jge
jge
dec
jg
xor
fimuls
popl
add
lock
ja
test
xor
sbb
mov
aas
pop
cmp
xor
mov
cmp
mov
xchg
xor
in
lret
sub
adc
push
js
test
xchg
loope
lahf
pusha
cmp
or
inc
loope
mov
call
sbb
repz
add
adc
mov
subb
shll
jmp
xor
movsl
xchg
inc
pop
jno
data16
xchg
rcrl
pop
jnp
std
bound
stos
sbb
jmp
jg
jg
push
push
jnp
jb
adc
lea
add
pushf
adc
mov
ds
mov
mov
and
lods
mov
js
mov
dec
jns
jno,pn
lock
cs
dec
or
xor
mov
loopne
xchg
inc
ds
loopne
or
adcl
mov
mov
pushw
mulb
xor
dec
adc
sti
add
mov
shrb
aad
jbe
dec
mov
repz
aad
out
mov
cmp
das
rolb
imul
inc
xchg
idivl
cmpsl
mov
mov
sbb
jle
aas
pop
gs
in
mov
cs
out
out
add
push
mov
pop
jp
jb
ja
xchg
aaa
push
cmp
mov
push
mov
sbb
sarb
js
mov
xor
and
in
rolb
xchg
insl
add
dec
inc
and
add
cld
fidivl
outsl
xor
mov
inc
xchg
xchg
iret
je
cwtl
sarl
xor
xor
mov
jbe
push
jge
adc
insl
pop
pop
mov
sub
cmp
cmp
xchg
xor
mov
push
mov
shll
push
pop
outsl
movsb
insl
add
push
adc
jns
jg
xchg
in
and
loop
mov
jbe
mov
clc
daa
fldl
in
push
push
ja
inc
stos
mov
jne
cld
push
jl
inc
stos
fsts
nop
push
lahf
mov
jp
fisubrs
sbb
and
ret
rcl
sbb
test
incb
call
stos
rclb
sub
xchg
xlat
jl
and
xchg
fisubrs
xchg
iret
shr
je
xchg
push
xorb
daa
cmpsb
lahf
mov
lret
and
mov
js
mov
add
jns
scas
mov
mov
cmc
pop
dec
in
dec
pop
rcll
popa
jl
inc
xchg
stos
mov
jno
mov
in
sub
sarb
mov
clc
dec
push
loope
jge
movsl
clc
xorb
inc
pop
or
test
ds
mov
insl
and
mov
cwtl
dec
cld
add
jne
pop
or
add
sti
push
lahf
pop
rcl
in
add
sahf
lods
lret
xor
xchg
mov
js
jne
jl
cmp
or
cmp
sbb
fcompl
ret
add
iret
lea
and
pop
jno
sub
sti
pop
pop
xchg
push
jmp
loope
or
aam
or
int
xchg
ljmp
mov
mov
rorl
popa
imul
test
sbb
jle
sbb
mov
cli
or
or
ret
stc
fndisi(8087
aad
dec
cmpsl
pop
lods
ficoms
mov
lods
aad
inc
call
incb
and
fsubrs
cltd
mov
cltd
in
or
add
imul
into
lret
nop
mov
imul
repnz
dec
sub
push
shll
lea
sub
scas
inc
cmp
ljmp
mov
jnp
pop
cmpb
jno
jae
les
ret
xor
and
jg
aaa
cltd
data16
pop
lret
in
mov
mov
inc
jg
xchg
dec
adc
fs
mov
cmpl
mov
js
outsl
aas
xchg
hlt
cmp
and
ret
dec
rcll
xchg
fs
mov
push
int
lret
pop
shlb
mov
jp
inc
aam
and
inc
mov
negb
sarl
aaa
jne
ret
lret
out
push
pusha
lret
sarl
lds
scas
lret
or
mov
xchg
stos
add
inc
cmp
pop
push
push
adc
je
mov
push
loop
mov
dec
adc
and
fistpll
clc
hlt
jp
sbb
mov
dec
inc
int
push
rol
inc
gs
jb
test
mov
xchg
sbb
mov
iret
cli
mov
push
mov
lret
stc
loop
aam
inc
or
outsb
loope
mov
insb
sbb
in
aam
push
nop
add
push
test
iret
sbb
fwait
dec
cmpsb
or
adc
and
popa
stos
pop
aad
adcl
hlt
mov
int
mov
frstor
cmp
cli
arpl
test
cmc
push
adc
pop
sbb
shl
inc
pop
scas
movsb
mov
push
sbb
xlat
add
ret
mov
icebp
es
sbb
cmp
jp
bnd
jecxz
and
cmp
mov
pushf
ljmp
adc
jne
xor
cmp
bound
lahf
out
push
lcall
jno
test
dec
ds
cmp
inc
insl
push
jno
and
cmpb
fldpi
adc
les
cmpsb
cld
sti
shll
repz
and
mov
sbb
mov
xor
mov
out
cld
and
int
pop
dec
inc
or
mul
sti
movsb
xchg
sub
andl
xchg
mov
or
cmp
js
and
push
xchg
pop
cmpsb
js
add
arpl
pop
xchg
cmc
mov
pop
push
out
imul
sbbl
fimull
jle
xor
inc
mov
iret
scas
loop
jmp
lods
sti
movsl
cli
add
adc
jg
pop
pop
jb
xor
mov
inc
xor
jmp
arpl
dec
xchg
jle
lods
out
jmp
insb
rcrl
arpl
push
xor
mov
jnp
into
addb
hlt
cmpsl
mov
dec
shl
mov
cmp
lods
xor
pop
cmp
mov
fs
mov
jno
mov
gs
mov
and
inc
pop
jg
jae
fmull
inc
loop
das
xchg
and
imul
in
lods
mov
push
hlt
push
fdivrl
mov
adc
in
pushf
pop
pop
inc
cwtl
cwtl
popf
pop
mov
sbb
ret
loop
popa
ja
imul
ficoms
movsb
movb
ljmp
jp
movb
ja
inc
mov
insb
sub
mov
and
inc
cmp
ss
jge
or
stc
mov
popf
stos
shrb
mov
repnz
test
sub
mov
xchg
inc
mov
mov
loopne
adc
or
aaa
add
out
sub
fbld
adc
cmp
ljmp
aas
cmp
popf
adc
xor
enter
cmp
scas
repnz
movsl
push
inc
cld
das
aam
loope
push
sbb
push
jnp
fs
test
xchg
ja
notl
jns
mov
mov
aaa
mov
mov
test
bound
lret
mov
aam
sti
pushf
sbbl
loopne
pop
push
sbb
mov
jp
or
push
aaa
push
push
xor
insb
xchg
mov
push
jecxz
sub
pcmpeqb
or
lret
fsubs
out
je
mov
sub
mov
mov
clc
cmp
add
bound
test
sbbb
mov
fs
decb
out
enter
repz
jb
jno
xchg
stos
add
cld
stos
adc
imul
ds
les
je
test
icebp
je
sti
shl
sahf
cmovns
or
insb
mov
push
dec
xor
cwtl
or
cmp
ficoml
adc
cmp
ja
cltd
jl
xor
scas
pop
into
aas
xchg
std
mov
fcmovnb
jle
movsb
out
sbb
or
cmp
and
mov
jns
jns
aam
movsl
lock
cwtl
repnz
xchg
add
out
test
and
outsb
xchg
mov
pushw
test
lock
mov
cmpsb
jns
adc
fmuls
leave
es
jne
inc
out
ljmp
fsubrp
mov
int3
dec
int
inc
inc
mov
cmp
out
mov
stos
fsubrs
mov
ljmp
sub
add
fcompl
push
setnp
incl
xor
pop
shlb
rcrb
push
fldt
and
sarb
sti
inc
and
jge
stos
scas
pop
jns
dec
cld
cmp
cltd
mov
addr16
jl
out
xchg
inc
push
cwtl
cs
ljmp
add
ja
movsl
cld
adc
mov
es
mov
addl
repz
ficomps
mov
jl
in
inc
das
dec
lret
jge
dec
push
push
push
gs
dec
dec
mov
sbb
cmp
xchg
push
mov
and
das
jle
pop
sub
mulb
jno
addps
sbb
call
sub
mov
jmp
out
loope
jb
cld
sub
fcomps
push
mov
stos
cmpl
lret
sub
mov
xchg
adc
aas
inc
push
test
int
leave
xchg
into
mov
aam
push
pop
inc
sbb
mov
pop
bndldx
ss
xlat
sti
add
mov
insl
popf
dec
dec
std
test
push
test
pusha
push
cld
call
ds
dec
jno
mov
pop
xor
jle
jae
jb
sub
in
ljmp
inc
enter
dec
outsl
arpl
xor
sub
shrb
lods
enter
mov
dec
ja
mov
insl
cmp
mov
and
lods
and
loope
loopne
fs
dec
mov
mov
ret
andb
cmp
out
cmp
fcoms
or
outsl
inc
fsubl
dec
xchg
imul
clc
imul
bound
and
ret
in
fcompl
ja
add
sub
mov
xchg
decb
out
jge
iret
lea
fucomp
xchg
std
push
aas
in
dec
int
cmpsb
pop
inc
sub
daa
cmp
and
pop
ss
xor
rolb
xchg
jecxz
mov
xor
mov
push
std
sub
rclb
imul
data16
mov
rcrl
daa
push
push
cmp
sbb
add
add
dec
mov
ss
lahf
jb
cmpsb
lods
lods
mov
or
adc
rcrl
jne
pop
jns
and
shl
ror
or
iret
lret
cs
mov
dec
cmp
add
iret
sti
mov
fchs
mov
shr
jne,pt
sub
cmc
and
jb
add
sub
std
iret
jbe
in
fbld
or
gs
sahf
or
out
mov
and
or
pop
xchg
lods
adc
and
cmp
aaa
or
imulb
sbb
aam
fwait
outsl
loope
mov
xchg
inc
loope
sbb
dec
xor
fsubrl
inc
jno
in
lock
sbb
into
xchg
adcb
out
stc
xchg
adc
mov
xor
imul
iret
mov
or
outsl
cmc
call
xor
adc
pop
adc
or
sbb
pop
sbb
dec
inc
jle,pt
mov
dec
ljmp
inc
ret
ret
out
rcl
lods
push
int3
mov
out
mov
leave
jno
dec
mov
inc
xor
mov
jl
sbb
sahf
bound
inc
nop
loop
pop
pop
pop
push
pop
fsubrs
cmp
cwtl
pop
or
adc
jg
xor
in
xor
mov
dec
sti
sub
push
mov
mov
pop
ja
shll
aaa
shll
xchg
dec
or
mov
sub
lret
aad
int3
jo
iret
push
enter
inc
lock
jg
and
mov
pop
mov
call
jmp
orl
daa
adc
repz
lea
sub
xchg
adc
push
inc
or
push
push
lcall
daa
jbe
mov
mov
xchg
xlat
sbb
mov
aam
mov
add
scas
jmp
popa
push
inc
dec
shlb
loopew
nop
sub
pusha
mov
cs
push
pusha
dec
and
imul
aas
pop
das
sub
mov
push
and
popl
repnz
cld
ficoms
inc
pop
mov
jl
xor
nop
fildl
scas
jge
mov
pop
add
fbld
inc
inc
push
leave
std
dec
adc
lea
push
icebp
pop
arpl
pop
loop
jnp
bound
ud0
pushf
in
inc
adc
lods
sub
mov
adc
aaa
test
sahf
ds
cmp
xor
movsb
in
mov
ja
push
cmpsb
in
aad
bound
es
xchg
inc
add
mov
sti
xchg
pop
and
shrb
pushf
sub
icebp
dec
rcrb
das
pop
xchg
cld
sarl
ljmp
insb
sub
std
push
xchg
stos
jno
inc
or
inc
add
add
fs
ss
pusha
mov
out
repz
mov
inc
popf
sub
add
pop
jg
daa
mov
or
sti
mov
mov
xor
fnstcw
mov
jno
movsl
stc
rclb
mov
outsb
cld
ss
mov
mov
rcll
mul
adc
sti
mov
inc
add
dec
cmpsb
lds
fdivs
mov
push
or
out
push
outsb
dec
or
mov
sub
pusha
daa
sub
clc
popa
dec
scas
sub
mov
sub
push
mov
sub
cli
rorl
jp
lret
cwtl
mov
mov
xchg
mov
insl
fcoms
outsb
sti
inc
add
bound
in
adc
pop
dec
repz
test
test
push
fstpl
sbb
sbb
cmp
addr16
dec
push
iret
cmp
int3
inc
pop
xchg
and
aam
push
sbb
mov
aam
enter
push
das
adc
mov
lcall
dec
push
aad
mov
fidivs
xor
jl
insl
mov
jns
rep
fwait
sbb
adc
xchg
jns
or
mov
bound
cld
mov
mov
xor
std
out
dec
in
pop
in
inc
jno
or
pop
push
sub
lret
push
outsb
mov
ret
aam
in
jb
and
lock
mov
dec
xchg
fadd
ljmp
outsb
rolb
fidivs
xchg
jne
scas
inc
xor
mov
nop
mov
fisubs
lret
in
sbbb
lcall
dec
sub
mov
aaa
push
jl
adc
pop
mov
xor
mov
mov
jp
aam
insl
and
push
sahf
push
neg
pop
rorl
call
mov
or
sub
stos
test
inc
into
int3
negl
or
or
arpl
sbb
xchg
xchg
pop
cmp
insl
xor
rclb
jp
out
ret
dec
mov
mov
rcll
and
aaa
in
pop
sarl
sti
sub
jns
fistps
adc
adc
adc
out
mov
test
mov
popf
lods
call
lcall
stc
cmc
lea
int
jnp
pop
or
jecxz
lods
adc
dec
bound
shr
stc
sub
aaa
xor
xchg
mov
jmp
add
data16
out
cld
cmpsb
mov
stc
ljmpw
fxch
push
jbe
jno
mov
push
in
jno
jle
add
lods
mov
cmp
xor
movsb
and
add
dec
shrb
fwait
std
cld
shlb
mov
lcall
js
cmp
cs
add
in
in
cwtl
dec
xchg
aam
in
movb
lcall
test
icebp
fpatan
or
add
mov
lock
bound
jge
imul
sbbb
and
cmp
adc
inc
pop
int3
imul
dec
or
mov
decl
xchg
adc
fstpt
pop
outsl
push
sub
dec
or
fadds
push
add
sub
ficoms
out
lock
dec
gs
jecxz
fistpll
xchg
mov
xor
movsl
xor
scas
fsub
fs
dec
dec
add
mov
iret
mov
mov
lock
xor
subb
and
mov
cltd
imul
xchg
jae
and
cmp
aam
lret
mov
xor
mov
pop
mov
and
xchg
push
fnsave
or
lret
sti
pop
test
jbe
xchg
mov
sbb
push
sbb
sub
xor
add
dec
aaa
fbstp
cmp
pop
pop
hlt
sbb
mov
std
aaa
mov
sar
cmp
mov
mov
xchg
orl
test
shl
pcmpeqw
push
fisttpl
jo
jb
popa
pusha
outsb
clc
dec
movsb
imul
dec
push
lcall
inc
stos
es
imul
dec
test
daa
pop
stos
inc
mov
sbb
or
jb
in
imul
xor
lahf
sti
mov
enter
push
daa
jnp
xchg
stc
aaa
xchg
and
xchg
lds
mov
mov
popf
fnstsw
mov
push
inc
inc
jp
adc
mov
and
cmp
mov
lods
subb
scas
lret
notb
xor
jp
xchg
fldenv
out
test
ror
andl
pop
jmp
loop
call
sarl
lahf
popf
or
lods
pop
pop
sti
xchg
xchg
mov
fwait
sarb
inc
out
xchg
add
mov
repz
cld
sbb
pop
lea
outsb
push
xchg
les
pop
or
lret
pusha
movsb
mov
mov
pushf
in
jg
or
xchg
popf
fwait
insl
xor
or
aaa
push
fbstp
sbb
bound
fimull
or
imul
sarb
scas
jns
loop
jge
mov
outsb
bound
xchg
sub
adc
stc
ror
add
les
lods
jp
mov
xor
mov
dec
mov
shrl
gs
mov
rcrl
push
insb
push
xor
arpl
lea
adc
add
shlb
gs
add
cmp
pop
out
mov
cmp
arpl
cli
aas
mov
ljmp
jmp
push
or
cmp
jecxz
icebp
loopne
into
mov
pop
dec
add
dec
aas
fwait
jnp
test
sbb
xor
push
push
and
mov
jecxz
sub
cmc
rcll
add
cli
adc
mov
loop
inc
mov
dec
and
loopne
flds
sbb
jge
inc
mov
cld
imul
push
mov
sbb
xchg
mov
mov
mov
xlat
loope
popa
sbb
mov
lcall
add
aad
mov
sub
rorl
xchg
lret
jge
lds
dec
in
pop
incb
add
mov
pop
lcall
cmp
out
insb
jl
xor
loop
insb
sub
mov
adc
adc
cmpsb
xchg
and
xor
cmp
push
fdivrl
lods
push
add
das
push
mov
in
dec
pushf
cld
rorb
push
les
cltd
mov
pusha
ds
mov
sub
xchg
pop
orb
push
add
test
jb
lahf
jg
xchg
and
mov
cmpsl
mov
xor
jb
in
stos
lods
gs
dec
out
sub
shlb
lea
bound
dec
xchg
cltd
outsb
leave
cli
loop
add
fmuls
fbstp
test
je
lds
ss
movsl
dec
test
jne
faddl
rcll
lds
jl
mov
imul
lea
jb
pop
inc
imul
xchg
add
ds
inc
xor
xor
stos
xor
sub
pusha
jl
ss
xchg
or
push
inc
inc
pop
outsb
push
dec
sbb
roll
nop
in
sub
xchg
sbb
mov
mov
mov
mov
jl
dec
mov
inc
cmpsb
and
sub
sti
mov
jno
gs
sub
mov
dec
in
mov
aaa
out
loopne
mov
int
jp
incb
adc
pop
lahf
insl
movsl
jnp
loope
jnp
jae
stos
mov
xor
shll
lods
adc
ss
in
mov
inc
ret
out
sbb
dec
test
sub
and
pusha
std
mov
call
xor
shlb
or
push
jb
cmpsb
mov
setbe
pop
in
mov
loope
xor
jns
ret
in
daa
out
cld
mov
andl
push
adc
jg
mov
ds
loope
js
iret
xor
aad
push
sub
add
add
test
div
movsl
dec
pop
pop
push
mov
test
add
sub
stc
jge
pop
mov
cmp
in
cmp
data16
mov
lcall
cli
int3
insl
js
mov
xchg
dec
sbb
sbbl
sarb
push
sbb
call
mov
scas
imul
sbb
lcall
mov
dec
jmp
xchg
jno
std
rorb
push
popf
cmc
xchg
dec
ret
xchg
add
fadds
xorb
pop
dec
pop
inc
ljmp
addb
fwait
ljmp
nop
pop
push
push
lcall
js
or
fwait
leave
stos
xor
daa
and
aam
loopne
lds
xor
dec
rclb
push
lret
cmp
mov
dec
xlat
mov
call
xor
lar
jl
lahf
mov
inc
xlat
outsl
sbb
ret
and
sub
daa
cmp
push
dec
repz
cmp
xchg
mov
push
push
shlb
dec
sbb
test
pusha
push
std
pop
rep
xorl
mov
xor
push
or
imul
pop
aas
push
adc
test
and
mov
mov
js
mov
data16
out
add
out
push
mov
out
and
fwait
ja
jno
inc
fld
xchg
xor
mov
jmp
cmp
sub
scas
push
std
adc
adc
fildll
movsb
dec
pop
jbe
push
xor
out
xchg
out
adc
xchg
mov
xor
xchg
pop
push
inc
cmp
outsl
inc
jg
push
xchg
cmpsl
pop
cwtl
pop
repz
sub
add
fnstenv
mov
icebp
jo
push
dec
fcmovu
or
cmp
ret
out
lret
or
inc
jp
mov
lock
pushf
popa
jge
dec
push
adc
dec
push
cmp
cmp
jmp
divb
adc
jnp
push
in
pop
mov
mov
adc
xchg
jo
repz
ret
mov
pop
sbb
pop
sub
sbb
jp
and
testb
clc
xor
outsl
mov
xor
lds
lock
outsb
mov
out
pop
xchg
into
cmp
sub
mov
sahf
mov
pusha
jge
inc
divb
pop
lock
mov
mov
jbe
pextrw
jge
xchg
and
enter
jl
in
mov
test
imul
clc
arpl
xorl
loope
gs
or
pop
loop
mov
jns
sbb
stc
lods
mov
push
and
in
add
insl
inc
pop
inc
sbb
sbbb
jmp
sub
or
mov
cli
sti
out
loop
inc
scas
xor
das
mov
dec
pop
cld
mov
mov
cld
clc
or
push
adc
lods
mov
lret
adc
pop
push
jp
inc
jne
repnz
cmc
shll
push
scas
test
pop
enter
loop
lcall
and
add
aaa
xorb
mov
cmpsl
sub
cmp
imul
push
add
mov
xor
in
test
sub
jne
lret
movsl
lahf
lahf
jg
mov
movb
les
lock
cmc
adc
push
jge
hlt
rcr
inc
mov
or
loopne
mov
dec
mov
push
xlat
pop
insl
mov
scas
push
fwait
aam
pop
arpl
dec
sbb
xchg
andl
pop
inc
sub
push
push
cmp
nop
aaa
or
xchg
jl
mov
adc
or
sbb
sbbb
jns
ror
jno
stc
in
test
call
push
test
sbb
das
test
adc
xor
mov
dec
add
mov
movsb
pop
pop
sti
loope
sub
push
inc
fstpl
adc
sti
push
cmpsl
cmpsb
add
aas
imul
or
in
out
mov
fs
mov
mov
in
jne
cmp
mov
xor
xor
sub
es
jmp
enter
jb
in
jne
pop
shrl
lcall
xor
shl
add
ret
fwait
pop
mov
xchg
mov
addr16
lods
push
jo
ficoml
rclb
dec
out
push
clc
mov
sbb
pushf
adc
mov
sbb
and
movb
push
mov
cmp
sahf
lea
cmp
mov
and
addr16
stos
xor
push
loopne
sbb
ja
mov
pop
and
push
push
pop
xlat
outsb
xor
in
push
int
xchg
xor
cmp
or
mov
out
hlt
inc
scas
lods
sbb
jbe
inc
into
scas
pop
jne
xchg
stos
daa
jns
mov
push
mov
stos
push
pop
icebp
lfs
sbb
std
push
xor
or
pop
pop
jmp
test
andl
sub
pop
ret
cmp
jbe
arpl
jge
dec
lcall
data16
and
inc
push
shr
lahf
rorb
and
fwait
push
jp
xor
mov
out
out
sbb
sub
dec
cli
jle
dec
jnp
push
enter
popa
nop
out
jmp
dec
nop
sbb
mov
fwait
lea
pop
daa
lahf
adc
nop
fstpt
out
cld
cmp
mov
pop
repnz
inc
ret
cmp
jns
je
mov
repnz
rol
push
dec
xor
orb
pop
push
mov
mov
and
aad
inc
bndstx
dec
push
lahf
sbb
jnp
jp
sahf
inc
data16
mov
sbb
pop
mov
jp
outsl
fdivrs
subb
repnz
jb
sbb
dec
inc
xor
xor
or
leave
arpl
cltd
mov
outsl
dec
push
pop
lret
pop
cmp
mov
sbb
inc
jmp
and
xor
mov
jb
jns
cmp
sbb
pop
in
mov
in
mul
mov
repz
ljmp
fwait
sbb
push
mov
out
in
sub
bound
jp
mov
dec
and
mov
mov
jle
jecxz
lock
out
inc
sub
into
repz
inc
and
sarb
push
lods
mulb
pusha
arpl
mov
xchg
popa
lock
xchg
xchg
mov
push
inc
sub
or
cmp
push
adc
cmp
jae
mov
sti
std
sbb
jo
add
mov
jnp
lds
shrl
js
cmp
icebp
xchg
jnp
mov
jg
sub
inc
mov
pop
imul
pop
andb
add
fldenv
adc
popa
fmulp
sbbb
sbb
push
insl
adc
mov
insl
rcll
pop
add
cmp
scas
add
jno
stos
addr16
xor
cwtl
xchg
xchg
shll
mov
dec
cmpl
insb
mov
pop
fnstenv
xor
fwait
mov
inc
aaa
push
ja
loop
sbb
jne
ret
jnp
insb
lret
aaa
mov
inc
fdivrs
push
and
xor
adc
sub
xchg
or
and
push
mov
jp
mov
or
hlt
add
jns
jle
cmp
xlat
test
jge
out
popa
repz
icebp
or
mov
out
xor
rcrb
loop
dec
out
or
sbb
into
mov
loopne
push
aad
mov
cmpsl
adc
xchg
cltd
clc
std
rolb
inc
xchg
xor
lds
cwtl
xchg
cmpsb
mov
shl
mull
mov
mov
pop
and
popf
ret
adc
int3
dec
mov
xor
cmp
cmp
push
lock
outsb
stos
fxch
add
cwtl
cmpsl
shrl
xchg
jg
cmp
mov
add
lret
dec
and
dec
or
nop
jp
icebp
add
or
addr16
adc
into
adc
insb
and
xor
ljmp
adc
adc
repnz
adc
sub
mov
push
xchg
lock
leave
add
aad
sub
add
pushf
dec
sbb
call
xor
mov
sub
out
movsb
mov
data16
push
cmp
stos
daa
scas
pop
dec
jo
test
sti
mov
negl
inc
test
cmp
add
insl
add
cltd
push
lea
movsb
inc
daa
cwtl
cmp
cmpsb
ljmp
mov
rcrb
in
or
rcrb
inc
mov
push
test
cmp
xchg
dec
mov
push
je
loopne
aam
xchg
pop
stc
cmpsb
jp
clc
add
push
mov
jp
mov
mov
jge
fstps
stos
ljmp
bound
sbb
lret
lea
cmp
outsl
out
cmp
push
jp
lret
jnp
loopne
jp
xorl
xchg
leave
or
dec
outsb
cltd
sub
cmpsl
insl
jns
inc
cmp
lret
sbb
xchg
or
push
sqrtps
jecxz
iret
je,pt
dec
push
cltd
xchg
xor
and
sub
test
popa
ror
jg
in
mov
stos
mov
push
mov
pop
inc
dec
fildl
jmp
mov
out
out
cmc
mov
xor
inc
jbe
sbb
dec
inc
test
mov
fdivrl
dec
or
testl
inc
sub
pushf
adc
je
push
or
arpl
stos
sub
outsb
gs
sub
add
lret
out
push
pop
es
mov
jle
xchg
aam
pop
sti
addr16
jp
shr
push
ret
fsub
mov
xchg
pop
mov
lcall
adc
fcomi
pop
jbe
filds
fistpl
adc
and
xchg
mov
inc
jo
add
xchg
filds
inc
push
mov
dec
std
into
xor
bound
xorb
popa
inc
mov
push
out
icebp
jo
inc
add
lret
xor
xlat
test
notl
outsb
add
mov
out
pop
add
js
mov
or
lcall
push
je
movsl
push
add
sbb
sti
sbb
call
mov
sub
cmpsb
mov
loope
iret
xor
outsb
xor
loopne
pop
enter
cmp
outsb
xorb
inc
mov
sub
fbld
xchg
insb
ret
mov
inc
and
mov
leave
aas
pop
es
mov
es
sti
ret
repz
add
pushf
jo
lret
mov
xor
filds
sarb
out
dec
das
addr16
inc
adc
cmp
pushf
xorl
inc
dec
clc
dec
sbb
cmp
imul
lods
pop
data16
push
mov
out
dec
cmpsb
xchg
pop
fwait
lock
int
lahf
cwtl
gs
pop
cld
pushf
test
decb
xchg
enter
or
pusha
out
mov
mov
arpl
stos
and
sub
sti
mov
testl
cmp
dec
sbb
popf
and
mov
inc
mov
lcall
mov
adc
inc
jmp
rcl
xchg
popa
in
inc
jge
in
cmp
dec
push
inc
fsts
mov
lahf
roll
js
ret
sub
test
xlat
add
stc
sbb
jbe
sti
mov
fsubrl
outsb
xchg
imul
stos
mov
jb
dec
cmp
les
jne
leave
mov
aam
stc
testb
add
test
and
inc
mov
aaa
jns
stc
hlt
mov
repz
fistpll
dec
adc
fs
nop
xchg
jnp
sbb
sub
lret
sub
cmp
cwtl
cmp
push
in
xor
out
adc
cmp
rorb
lods
imul
sbb
mov
add
jo
aad
int3
or
and
cmp
push
fidivl
clc
adc
sti
nop
add
imul
mov
mov
lahf
mov
jns
sbb
pop
bound
add
ret
sbb
addr16
mov
push
mov
push
mov
dec
in
push
or
cmp
ljmp
dec
mov
pop
mov
int3
aad
lods
movsb
mov
mov
inc
out
push
mov
fcoms
or
cmp
and
cwtl
add
mov
mov
fisttps
enter
test
imul
fbstp
call
mov
xchg
pushf
push
dec
rcrl
lret
shlb
cmp
shll
fcmovnb
es
popl
lock
jecxz
mov
add
daa
xor
or
push
mov
outsl
xchg
mov
data16
xor
flds
add
xchg
call
cmpsl
xchg
ret
out
dec
lock
sub
dec
xchg
mov
jo
sub
dec
shll
scas
and
xchg
cmc
xchg
lds
into
pop
mov
mov
mov
fwait
test
xor
aaa
jb
pop
xor
add
adc
xchg
pop
push
aaa
int3
or
or
out
mov
aas
das
repz
sbb
sbb
out
rorb
adc
rorl
xor
dec
movsl
xlat
insb
pop
xor
cmp
rcll
lods
or
enter
fimuls
int
jnp
add
adc
imul
rcrb
shlb
sbb
mov
lahf
fdivs
in
mov
sbb
das
sbb
sub
mov
sub
sbb
or
mov
xchg
mov
jmp
mov
sub
ficoml
mov
cmc
jl
insb
sub
mov
xor
mov
mov
adc
int3
insl
jae
lds
enter
in
mov
fisubs
mov
insl
mov
fisttpll
or
jg
pop
les
xchg
ljmp
divl
cmpsl
fndisi(8087
cmpsl
leave
jae
and
test
call
insb
cmp
xchg
mov
jae
xchg
mov
iret
adc
dec
or
adc
daa
repz
pop
and
fsubl
mov
xor
add
loopne
jnp
or
and
fmul
xor
in
jecxz
lahf
jecxz
pop
loopne
push
cmp
sbb
dec
sbb
mov
fistpl
insb
xchg
push
jo,pn
fbstp
ja
test
mov
or
insl
push
or
cmp
push
std
jle
movsb
les
nop
rcrb
lock
fwait
push
cwtl
and
pop
andl
jnp
add
aad
dec
ljmp
aad
mov
loop
addr16
inc
jnp
xorl
lods
sub
test
add
aaa
lea
mov
fwait
jns
cmp
repz
and
cmp
mov
shrl
stos
stc
rorb
pop
dec
sbb
mov
into
js
xor
fnstsw
out
jmp
pop
push
xchg
jb
jo
lds
adc
jl
daa
fildl
pop
mov
es
mov
nop
push
lock
sti
xchg
jns
mov
mov
cmp
jle
or
das
inc
xchg
cmp
push
mov
or
or
add
pop
pop
sub
add
adc
xor
adc
outsl
sbb
jmp
fidivrl
sbb
call
in
sbb
xchg
negb
out
adc
shlb
push
jl
testb
push
push
fwait
test
repz
inc
adc
icebp
mov
nop
aas
lea
insl
add
loopne
hlt
sti
iret
or
adc
cmp
mov
divb
inc
or
sarb
pop
sub
push
fwait
xchg
sbb
ljmp
out
or
imul
lahf
in
cmp
hlt
mov
xchg
bound
lock
fsubr
stc
push
mov
bound
pop
xor
mov
fisubrl
mov
scas
out
jne
xchg
mov
sub
and
xchg
sbb
imul
mov
je
dec
repnz
je
adc
mov
lret
and
push
mov
jmp
cld
or
adc
sbb
mov
out
and
jo
in
inc
push
pop
mov
push
jnp
pop
jb
xor
les
push
add
mov
and
and
insl
jo
mov
xchg
push
add
mov
sub
data16
or
aas
fnstcw
popa
adc
and
add
inc
cmc
shll
mov
outsb
jle
nop
or
stos
ja
repnz
push
or
xor
sbb
imul
push
push
negb
js
fdivrs
pop
sub
mov
popf
cltd
cmc
mov
add
leave
pop
cmp
push
ss
testb
add
push
das
mov
jl
pop
xor
adc
cs
push
push
sbbl
pop
scas
in
dec
adc
push
push
adc
add
mov
sbb
and
out
mov
mov
adc
adc
mov
andb
cs
add
mov
fucomip
jge
cwtl
mov
cmpsl
sbbb
cmp
add
add
dec
dec
dec
sub
cmp
cmp
jg
xchg
sbb
pop
dec
movsl
fsub
mov
insb
xchg
and
ljmp
andl
pop
cmpsb
mov
shl
adc
insb
call
jno
lcall
inc
pop
stos
es
cmp
or
shll
fldl
lds
jl
jecxz
cli
xchg
fcomps
fisttps
loope
pop
cmpsb
or
pop
sub
cltd
cli
pop
outsb
xchg
rorb
dec
sbb
mov
jbe
dec
dec
push
pop
xchg
lods
mov
loope
outsl
fnstcw
jb
xorb
push
cwtl
imul
psrlq
jb
insl
jp
pop
dec
mov
cmp
cmpsb
cmp
mov
daa
ja
in
outsb
fdivrp
xchg
pop
pop
pop
inc
ret
loop
sub
push
jnp
aam
int3
jno
inc
enter
sbb
adc
sbb
adc
loopne
in
std
cmp
leave
repz
in
jecxz
cmp
jmp
jle
or
adc
frstor
test
jp
sub
ja
in
mov
testl
lods
xlat
mov
pop
pop
testb
push
add
addb
scas
es
and
les
fwait
push
jnp
and
adc
movsl
xchg
out
add
cmp
cmp
clc
jne
std
adc
and
outsb
mov
mov
popf
lret
adc
xor
jge
into
xor
cltd
cmp
into
nop
xchg
cmp
in
fs
jae
cltd
inc
int3
shll
cmp
iret
shl
lods
cmp
or
and
add
adc
jae
or
pushf
mov
scas
ja
push
xor
fwait
sbb
or
pop
add
push
adc
setnp
sbb
test
xchg
sub
in
mov
fwait
inc
int3
repz
push
insl
pop
xor
or
jecxz
popfw
ja
adc
mov
inc
adc
or
dec
jno
xlat
fs
imull
jns
lods
mov
lods
lock
xchg
popf
rclb
mov
push
pop
scas
sub
test
pop
jecxz
mov
addr16
mov
xchg
std
bound
and
movsl
mov
out
aas
mov
icebp
scas
dec
imul
xchg
cmpsl
sub
out
lcall
lret
ficompl
sbb
mov
inc
xchg
insl
mov
aaa
arpl
cmp
or
out
sub
roll
and
or
and
rcrl
lds
int3
mov
pop
clc
cwtl
stc
add
push
xorb
orl
jge
test
lds
addr16
adc
movsb
fsubs
cmp
pop
or
lods
pop
or
sti
insl
adc
mov
cltd
sbb
push
sbb
jnp
xchg
pop
pop
test
insl
pop
push
jne
mov
int3
cwtl
imul
jno
mov
jnp
jecxz
mov
pop
lea
sbb
add
mov
push
scas
jmp
and
sub
scas
lret
cmp
cmp
aaa
and
out
adc
add
out
or
ljmp
xchg
jne
addr16
aam
xlat
test
lods
fs
stc
fs
lods
cmpsl
test
mov
clc
sbb
xor
mov
pop
sub
cmp
nop
test
ljmp
mov
ret
xchg
outsl
xlat
lods
push
ret
push
test
inc
pop
inc
sbb
mov
ljmp
push
mov
mov
sar
mov
into
test
push
mov
xor
scas
xchg
rep
addl
test
add
xchg
out
fbstp
pop
repnz
sub
repz
test
cmp
xchg
scas
shlb
and
insl
inc
pop
call
jecxz
mov
fidivs
das
nop
mov
adc
fwait
les
cmp
add
stos
jecxz
add
adcl
add
jnp
cwtl
lea
add
jg
fcoml
mov
and
aam
push
jecxz
mov
dec
lahf
test
fwait
inc
sub
and
ja
mov
xchg
xchg
push
inc
jo
mov
fiaddl
sub
shlb
jno
push
scas
pop
mov
cmp
out
xor
sahf
ja
inc
arpl
std
mov
orl
flds
mov
xchg
cltd
popa
int
xchg
dec
shll
xor
and
mov
out
rcrb
ja
stos
dec
push
and
fbld
add
add
outsl
and
mov
dec
loopne
push
outsb
adc
paddb
mov
mov
xor
push
dec
ljmp
call
mov
das
sbb
mov
sub
cmp
test
repz
ret
insb
mov
and
loopne
push
push
mov
sbb
fadd
dec
sub
add
hlt
adc
xchg
call
mov
cmp
rcll
xor
push
andb
jg
mov
adcb
fwait
adc
bound
and
or
loope
lods
fcom
mov
sub
dec
cmp
lret
xlat
push
dec
dec
fcompl
push
push
incb
cmp
mov
add
fnstsw
jle
xor
andb
nop
sub
jmp
in
pop
sbb
xchg
insb
mov
pop
sub
out
cmp
cmpsb
add
outsb
xchg
lods
push
and
arpl
push
inc
jmp
arpl
xlat
sub
filds
xchg
adc
movsl
jnp
test
mov
mov
add
adc
lea
lods
or
cmpsl
mov
outsl
or
sbbl
fisubrs
cli
lds
test
push
loopw
mov
xchg
or
outsb
mov
mov
jle
sub
sbb
addr16
pop
loop
mulb
lea
pop
bound
icebp
xor
scas
cmp
fwait
or
ljmp
pop
ja
aas
addps
cmpb
cmpsb
or
sti
inc
mov
fisubrs
in
jnp
jbe
iret
aad
les
mov
popa
popa
cli
xchg
jno
cmp
cld
sub
lahf
push
push
gs
push
pop
push
in
fldl
jae
mov
sti
loopne
int3
mov
xchg
out
lret
sbb
les
cmp
fwait
lods
push
jecxz
repz
mov
sub
mov
xor
xor
jmp
lods
inc
lfs
ljmp
mov
das
dec
lods
je
call
push
pop
xor
outsl
xor
fsubrs
jmp
call
xchg
nop
mov
scas
imul
xchg
sahf
adc
adc
dec
out
push
ds
lahf
cs
cmp
jbe
idiv
clc
sub
dec
cwtl
pop
and
xchg
jns
mov
dec
fwait
xchg
shll
repz
and
mov
and
mov
imul
imul
sbb
lea
roll
and
std
fwait
jnp
push
xor
sbbb
and
pop
and
jmp
lahf
mov
sbb
outsb
inc
pop
sbb
xchg
jns
mov
mov
dec
into
cwtl
sbb
xchg
dec
iret
aas
push
adc
es
data16
dec
jl
insl
pop
inc
adcb
xchg
push
pop
mov
sti
stos
fidivrl
pop
repnz
sub
sti
cld
push
dec
push
fimuls
sbb
jae
mov
add
sub
inc
lods
subb
and
repz
pop
mov
ja,pn
aad
pop
loopne
divb
inc
lea
loop
cmp
pop
lods
jo
out
pusha
push
es
movsbl
sti
cld
add
out
mov
jle
jnp
adc
add
cmpsb
sub
xor
xchg
icebp
mov
hlt
mov
scas
xor
call
in
mov
mov
jmp
negb
out
pushf
add
dec
test
add
cwtl
cmp
pop
hlt
rol
pusha
inc
jecxz
add
insb
or
sbb
loopne
cltd
xchg
into
enter
pop
imul
aam
sub
cmpsb
jmp
call
xchg
mov
push
push
mov
jns
jge
int3
sti
dec
insl
pop
mov
sub
ja
sub
mov
mov
jge
sti
pop
shl
jno
fucomi
or
inc
and
mov
insl
sbb
mov
lahf
cli
call
test
jbe
mov
mov
push
cmp
sbb
add
mov
cltd
mov
dec
int3
push
sbb
mov
cmpsb
mov
mov
mov
mov
cmp
scas
ffree
push
cs
outsb
xchg
dec
jo
ljmp
cmpsl
icebp
inc
xchg
movsb
or
icebp
mov
les
stc
xchg
mov
movsb
lret
mov
mov
cmp
mov
cltd
iret
mov
js
rolb
bound
mov
push
jb
ja
pop
jecxz
push
int3
dec
nop
aad
out
inc
js
cltd
sti
or
inc
push
add
pop
mov
xor
mov
sbb
dec
mov
mov
bound
mov
pop
cli
bound
push
out
fwait
lods
es
sub
cmp
adc
inc
push
jnp
push
or
pop
jle
cmp
sarl
adc
lea
inc
ja
leave
shll
out
jp
andb
and
insl
arpl
mov
lret
inc
dec
dec
add
dec
cmp
push
or
fs
lock
std
mov
xor
mov
cmpsb
mov
das
inc
enter
cmpb
push
repz
rep
imul
cmpsl
push
testl
scas
outsl
sbb
out
fnsave
in
into
jae
icebp
stc
mov
pop
lods
adc
xchg
dec
daa
jbe
scas
add
add
sbbb
test
jae
scas
cli
fcomps
dec
cltd
inc
inc
iret
pop
imul
movsb
jnp
decb
sub
gs
daa
mov
jo
aas
imul
sbb
aam
inc
add
jmp
add
jnp
or
push
addl
pop
fnstsw
fstps
orl
test
jg
jb
rcr
idiv
imul
and
pop
movsl
jo
push
and
mov
fst
lods
pop
je
push
out
stos
pop
cld
pop
out
enter
lods
sbbb
jnp
ds
insb
mov
sbb
sbb
outsb
xchg
enter
mov
push
and
inc
xchg
rolb
shr
pop
lret
push
ss
sahf
leave
ja
hlt
clc
push
xor
gs
aas
pop
test
mov
test
adc
add
ret
ss
subb
addr16
lret
in
adc
adc
stos
or
arpl
movsl
push
push
lds
mov
vmovsd
push
lret
pop
push
rclb
dec
cli
add
push
jno
add
sub
cmp
cmc
jno
xchg
lods
push
jl
div
loope
pop
pop
mov
dec
mov
ret
lea
mov
jl
mov
not
push
rol
repz
mov
ret
mov
pop
dec
pusha
push
cwtl
inc
xchg
xchg
ficomps
sbb
push
push
fdivs
les
cwtl
sub
push
xchg
xchg
movsl
cltd
clc
jb
xchg
sub
movsb
fisttps
hlt
jne
clc
icebp
xchg
sarl
lahf
ret
push
push
inc
push
pop
out
and
fisubrl
xor
fidivrl
clc
nop
lods
mov
lret
into
jae
inc
and
pop
pop
ja
daa
xor
mov
es
jns
jns
shll
int
mov
out
imul
clc
mov
sbb
out
push
movsb
imul
out
push
xor
pop
sarl
jne
fiadds
fistl
mov
xchg
lods
sub
sarb
shrb
add
mov
popa
inc
inc
mov
jle
mov
std
xor
je
loope
xchg
or
nop
push
xor
add
fstpl
in
pop
lock
pop
pop
pushf
sar
jg
nop
in
sub
pushf
out
stos
xchg
mov
in
push
daa
mov
lahf
push
icebp
pop
fisttpl
in
lahf
shrb
insb
out
scas
add
xor
outsb
in
out
jno
hlt
mov
push
adc
popf
repnz
rorl
xor
dec
mov
das
push
mov
mov
cli
cmp
fimull
cld
negb
mov
push
loop
jmp
lods
lret
pop
mov
add
daa
insl
mov
adc
pop
sbb
cmpsb
in
mov
cli
movsl
lods
xor
xchg
xlat
lret
pushl
scas
ja
pop
mov
fildl
out
add
stos
cltd
and
mov
ret
lods
lcall
int3
cmp
xor
dec
sub
xchg
shl
mov
stos
and
and
jno
ret
mov
cmpl
push
add
pop
or
jle
cmp
mov
push
je
into
mov
je
add
ljmp
or
inc
inc
addb
cs
loope
sub
repz
sub
pop
das
cli
dec
or
jp
in
dec
adcb
push
dec
xor
xchg
lret
hlt
push
aad
xchg
add
insl
push
rcll
pop
daa
cmpsb
test
test
dec
int3
stc
add
jecxz
mov
cmpsb
xorb
psrlw
sub
xchg
movsl
inc
ss
adc
imull
aam
aad
inc
fistl
push
idivl
dec
mov
adc
sbb
fdivp
gs
bound
add
lods
popa
pop
sbb
inc
shl
pop
je
pop
mov
pushf
loope
mov
xchg
dec
loopne
out
mov
pop
inc
and
xchg
enter
fbld
inc
push
or
mov
out
hlt
mov
fdivs
scas
stos
arpl
cltd
xor
xchg
push
or
xchg
xor
mov
dec
mov
sbb
jae
add
je
fimull
jne
iret
movsb
xchg
add
adc
or
les
jp
leave
cmp
das
add
jmp
movsb
into
sbb
fmuls
testb
inc
jbe
rorl
fs
jge
jp
das
add
in
push
aam
xchg
mov
mov
sarb
fcoml
nop
add
scas
pop
xchg
shrb
movsl
mov
push
mov
stos
and
lods
in
out
cltd
in
adcb
aad
jno
adc
cmp
jns
mov
loope
inc
sbb
aaa
mov
xchg
and
and
les
jbe
dec
xor
stc
outsl
lret
or
mov
jl
adc
call
xchg
das
hlt
mov
stc
es
js
pop
adc
fcomi
rorl
js
stc
lcall
hlt
cld
dec
or
je
lock
ja
stos
fistpll
loope
sbb
add
rclb
or
iret
adc
dec
or
int3
es
push
add
sbb
jne
jecxz
or
fsts
jnp
test
and
fsubr
or
cmpsl
and
jno
and
push
cmpsb
adc
mov
das
mov
xchg
lds
mov
arpl
sbb
outsb
inc
outsb
clc
push
mov
mov
sub
std
xor
dec
stos
enter
popa
into
jno
fmulp
sub
dec
das
add
xor
cmpl
inc
ficomps
das
cwtl
add
ss
add
xlat
inc
xchg
bound
cmp
pop
clc
scas
pop
cld
dec
cmp
leave
icebp
jge
mov
xor
scas
adc
mov
jne
cmp
leave
pop
mov
rcrl
clc
inc
call
push
shrl
cmp
mov
mov
fs
jns
sti
lea
jge
in
cmpsb
pushf
iret
jmp
cmp
pushf
stc
or
sbb
lret
xchg
cmp
shrl
and
mov
xor
adc
aad
inc
int
call
jecxz
sub
dec
mov
or
jmp
jmp
pop
mov
sahf
gs
mov
fimuls
fcomps
jb
insb
sbb
push
mov
mov
inc
jo
mov
movsl
mov
aaa
mov
outsb
and
cmc
stc
pop
les
rclb
pop
push
mov
add
aad
mov
rcl
mov
xor
jnp
xlat
mov
lcall
xor
fiaddl
stc
lret
pop
lcall
icebp
cmpsl
inc
and
pop
mov
aaa
imul
nop
inc
add
lods
sahf
jns
mov
mov
aas
cltd
push
sub
pop
outsl
or
push
cwtl
pop
popa
popf
fiadds
sbb
dec
cmp
ds
mov
jge
xor
push
mov
negb
fstps
xchg
add
addl
repz
sub
cmc
into
mov
repnz
sahf
sbb
mov
lock
pop
int
xor
cltd
mov
mov
push
inc
in
ja
subl
gs
mov
jp
int3
mov
jge
cmp
xchg
dec
fistl
ficoml
sbb
push
push
outsl
dec
sbb
adc
mov
clc
or
ret
test
jl
repz
out
pop
cmp
fdivl
mov
xchg
addb
mov
pop
sti
mov
negb
les
cwtl
cmp
out
jo
stos
pop
cltd
dec
push
in
rcrl
insl
clc
push
std
aas
fwait
mov
cmpsb
adc
mov
adc
insl
nop
mov
dec
pop
ret
sbb
dec
out
sub
xchg
imul
mov
test
bnd
fcoml
dec
add
push
les
xor
imul
fldenv
mov
or
into
dec
adc
jns
dec
out
ret
outsl
lea
nop
outsb
dec
orb
push
push
fdivs
mov
mov
sub
lret
lds
cmpsb
in
jp
clc
add
sbb
ficoms
cmp
leave
fildll
loope
xchg
out
je
out
and
cld
hlt
jmp
stc
fidivl
and
inc
lcall
xor
fbld
pop
sti
sbb
or
sub
adc
pop
push
cmp
adc
cmpsl
aas
or
sti
push
out
add
xchg
push
rol
mov
inc
scas
mov
in
cltd
fsubs
mov
ss
jle
mov
scas
mov
call
push
mulb
shl
add
jo
push
mov
test
frstor
mov
lret
mov
jne
test
cli
mov
jne
pop
roll
mov
imul
xchg
mov
mov
dec
pop
push
out
dec
inc
arpl
xchg
sub
push
sub
cs
cmp
cmc
sub
mov
dec
jmp
pop
mov
std
cmp
sti
ja
cwtl
mov
inc
or
xchg
sbb
mov
push
adc
in
xchg
push
shrl
push
nop
dec
test
mov
loopne
mov
push
mov
add
xchg
or
cltd
sbb
mov
adc
int3
and
adc
cmpb
add
pop
lds
xchg
das
das
xchg
pop
enter
inc
out
mov
in
scas
jmp
inc
inc
dec
cmpsb
push
mov
xor
fstpl
dec
aad
mov
inc
ja
rcl
pop
mov
pop
and
fldl
mov
mov
fistpl
insb
ljmp
test
in
int3
sti
xchg
lcall
jg
shlb
xor
test
add
adc
aad
sbb
cmp
pushf
hlt
jecxz
cmc
lret
pusha
into
mov
ja
jg
mov
xor
push
mov
or
jb
orl
lret
mul
jb
xchg
cmc
sbb
inc
ret
cmp
rcr
or
push
rol
mov
dec
push
shll
jle
jl
pop
cmc
loop
sbb
add
mov
ret
mov
bound
jno
ss
ret
daa
push
jno
dec
push
inc
jno
push
cwtl
jl
sub
pop
je
sbb
sub
les
pop
jmp
jne
mov
das
js
jecxz
mov
push
xor
sti
stc
test
mull
xlat
and
nop
adc
jnp
daa
fsubl
and
jae
add
adc
cmp
pushf
sbb
or
pop
jns
mov
jae
cltd
xchg
adc
sub
pop
sub
aam
dec
dec
push
sti
int3
push
divl
in
sbb
add
ss
js
mov
fidivrs
mov
in
sub
mov
lods
jl
or
mov
rcrb
ffreep
jl
xor
jle
cli
pop
and
sbb
imul
push
pusha
test
lods
lods
sbbb
scas
loopne
hlt
out
mov
adc
or
nop
pop
jbe
icebp
aaa
pushf
imul
jno,pt
int3
mov
int
enter
adc
and
clc
andl
mov
je
repz
in
pop
xchg
out
stos
dec
lods
mov
mov
stos
sahf
pop
insb
mov
lcall
inc
sub
xor
insb
icebp
lds
or
adc
nopl
pop
lret
icebp
xchg
pop
add
or
or
cltd
jbe
in
inc
cltd
adc
sub
ret
add
lret
mov
push
in
xchg
add
lods
jg
lret
sub
push
int
push
mov
call
out
jnp
or
fcoml
dec
dec
push
mov
ljmp
sti
cmpsb
push
js
fistl
mov
inc
outsb
out
or
mov
or
sub
ficomps
jge
jl
add
gs
dec
in
push
mov
or
inc
xchg
xchg
popa
mov
je
addr16
fisttpl
mov
lret
arpl
insl
adcb
sar
js
cmp
rcll
and
xchg
dec
xchg
pop
cmp
pop
or
insl
adc
rolb
rol
mov
add
xor
inc
mov
aam
aas
fldenv
jmp
push
mov
ja
cmpsl
xchg
sti
fs
sahf
ss
sbb
inc
push
push
cmp
fxch
lea
movsl
enter
push
xor
dec
out
addr16
outsl
or
push
cmp
xchg
xchg
push
cmp
lea
jnp
adc
sbb
cmp
mov
ret
loop
inc
divl
adc
pop
xor
mov
js
push
add
cli
test
inc
scas
addr16
std
xor
imul
pop
sub
fadds
inc
fs
mov
mov
dec
pop
xchg
loop
sub
xor
add
adcl
aad
insl
data16
cli
jnp
lods
dec
jbe
loopne
pop
hlt
inc
ss
jle
out
cmpb
or
sbb
adc
pop
mov
lods
cmp
cmp
nop
push
sub
sub
mov
xchg
pop
xor
idivl
sbb
andnps
push
mov
mov
out
xchg
add
mov
inc
fisubs
int
adcb
repnz
test
test
push
pop
sbb
insl
cwtl
mov
test
push
pop
mov
insb
ds
adc
lock
idivb
leave
xor
xchg
sbb
xor
sub
das
js
adc
adcb
push
mov
push
pop
out
adc
jno
fildl
mov
inc
movsb
test
pop
sub
push
xchg
test
mov
repnz
push
mov
xchg
aas
and
add
dec
loope
fmull
jl
outsb
sub
shld
imul
clc
into
ror
int
movsb
sbb
aaa
cmp
pop
mov
lret
ret
jb
call
sbb
movsl
iret
pop
and
cmp
andl
push
loopne
ffree
movsb
xor
in
icebp
inc
cmp
jecxz
sub
mov
dec
sub
pop
cld
sub
je
hlt
dec
movsb
bound
mov
or
jmp
adc
add
cs
sahf
cmp
add
imul
repnz
in
ret
scas
add
dec
mov
and
gs
cltd
mov
sarb
loop
and
jmp
inc
int3
or
ds
fcoms
lods
fiaddl
inc
push
cmp
fimull
push
call
mov
fs
adc
lcall
dec
loop
das
dec
pop
xor
jns
lods
xchg
push
inc
xchg
stc
notb
cmp
add
inc
js
notb
pop
sub
mov
imul
scas
inc
pop
clc
jl
dec
push
cmp
cld
dec
and
jbe
icebp
mov
sbb
dec
ret
lret
or
inc
loop
mov
shlb
add
fwait
pop
push
cli
dec
lahf
pop
push
push
jecxz
cmp
sti
push
lret
test
pop
adc
jmp
sbb
daa
sbb
clc
xchg
xorb
outsl
push
dec
adc
mov
xor
sti
adc
pop
sbb
fisttpl
iret
cltd
test
xor
test
inc
sarl
je
sbb
xchg
mov
ffree
cmp
aam
enter
or
test
jl
adc
xchg
sub
popf
mov
mov
nop
mov
cltd
push
int
insb
lods
add
jae
lods
adc
ss
xor
xchg
adc
mov
sub
mov
mov
or
jae
shr
or
dec
subl
inc
enter
std
or
fdivs
insb
mov
dec
test
pop
aas
mov
adc
fscale
mov
sub
icebp
pop
sub
adc
jle
gs
jnp
push
push
gs
cmp
mov
das
jo
cltd
adc
mov
inc
xacquire
icebp
fdivrl
jnp
xchg
inc
mov
xchg
pop
ss
push
ja
jae
xchg
xor
jmp
enter
mov
and
nop
push
push
testl
je
cs
xor
xor
inc
ret
scas
push
push
xchg
cs
inc
cmpsl
cld
loop
push
fld
icebp
and
sti
xor
and
popf
jmp
enter
fimull
leave
jns
jns
cltd
pop
pusha
or
movsl
filds
mov
into
jl
xchg
leave
inc
outsl
andb
mov
mov
ret
jmp
xchg
ljmp
pop
push
cmpl
xchg
mov
and
sub
das
enter
test
jle
cmpsb
mov
cltd
icebp
xor
aad
repnz
test
add
sub
icebp
pop
push
mov
fimull
mov
loopne
xchg
int
in
cwtl
arpl
mov
loopne
sub
mov
lahf
and
mov
mov
jp
vrsqrtss
jmp
out
insl
jae
daa
pop
ret
add
gs
cmc
or
jne
push
stos
push
insb
testl
push
xchg
cmp
adc
jne
push
push
arpl
mov
and
sub
mov
les
inc
and
sahf
call
negb
add
adc
test
xor
pop
fwait
std
loop
jmp
insb
xor
mov
adc
mov
out
test
es
mov
mov
xor
inc
mov
mov
jnp
inc
add
outsb
test
jbe
pushf
in
test
cmp
in
push
xor
sub
mov
mov
int
loop
jmp
xchg
test
mov
in
daa
cwtl
imul
jge
xor
sbb
jle
inc
push
mov
and
lcall
in
mov
add
mov
xlat
outsl
int
and
sbb
sti
push
inc
cmp
stos
mov
in
test
pushf
push
or
inc
pop
push
ja
popf
std
adc
jp
repnz
test
mov
bound
mov
and
cmp
cmpsl
and
test
and
push
push
bound
xchg
lds
dec
mov
mov
test
push
xchg
adcl
lds
int
test
push
inc
adc
xor
js
fbld
shl
in
daa
jp
xor
cmp
jle
cli
pop
stos
push
in
xchg
nop
or
lods
inc
stos
in
cmp
shl
sahf
insb
insb
and
push
arpl
cmp
dec
sub
lea
jg
pop
int3
nop
inc
jl
leave
jbe
pop
in
pop
push
lret
xchg
out
cmpsb
dec
mov
sbb
adc
sbb
cltd
ja
cmp
jp
mov
xchg
inc
xor
jl
std
mov
imul
shl
push
aam
outsb
xchg
mov
fisttpl
push
xchg
xor
mov
insb
sbb
and
decb
push
push
fs
imul
push
pop
cmpsb
pop
aam
push
pop
add
add
push
aaa
scas
lock
xor
cmp
jo
push
imul
cmc
inc
test
sub
sbb
cs
lcall
insl
subl
out
std
jno
adcb
leave
bound
sub
jmp
dec
test
movsl
pop
pop
test
arpl
and
push
pop
loopne
stos
mov
mov
loope
int
lahf
mov
lahf
in
stc
jb
sarb
push
pushf
xchg
jmp
or
jmp
addr16
mov
cs
into
cld
push
test
or
inc
fcoms
cltd
adc
sub
inc
push
in
fistps
push
in
lcall
je
je
addr16
add
add
jl
inc
dec
lcall
sbb
xor
lods
xchg
sub
cltd
nop
rolb
or
or
ficoms
in
or
sti
lret
bound
repz
shr
aaa
xor
or
dec
popf
lret
je
sbb
sbb
sbb
add
ret
ss
mov
pop
sub
cmpsl
push
xchg
pushf
adc
inc
stc
test
aad
mov
or
jmp
push
movsb
sub
mov
pop
cmpsl
sti
bound
loop
sbb
jle
ss
imul
pushf
inc
sub
mov
xchg
fbstp
push
ljmp
xchg
add
loope
aaa
jbe
mov
cmp
jns
daa
jnp
pop
ja
pop
pop
ss
adc
mov
pop
lret
pushf
push
enter
adc
pop
loop
dec
enter
enter
mov
sub
fdivrl
mov
cwtl
jns
mov
jl
shrb
adc
cmpsb
jnp
sub
push
mov
mov
icebp
or
pop
pop
mov
lahf
xor
xchg
cmp
les
push
repz
std
jae
xchg
mov
xor
jge
mov
mov
jnp
xor
fbstp
mov
arpl
jge
test
adc
sbb
dec
mov
or
adc
jb
sub
or
jns
lock
inc
int
xor
arpl
dec
dec
aad
bound
aad
not
stc
pop
jecxz
cmp
pop
cmpsl
mov
fcoml
cwtl
ret
std
lock
das
adc
xor
sub
xchg
fistl
stc
dec
cmp
sub
and
popa
or
mov
std
push
pop
pop
stos
xchg
test
sbb
sub
fs
pusha
push
adc
insl
int3
or
divb
cmp
sub
jmp
xor
push
aam
sub
out
fiadds
test
mov
xor
or
push
out
push
gs
mov
xor
lret
push
lret
jnp
push
mov
sbb
sbb
negb
hlt
aaa
push
jno
outsb
imul
out
insl
mov
inc
scas
movsb
or
lods
and
add
inc
rorb
push
loopne
jae,pt
roll
lds
push
and
js
cmpsb
push
icebp
cli
xchg
mov
mov
rorb
js,pt
jmp
stc
mov
dec
push
iret
lret
shlb
lods
adc
je
popa
inc
sbb
add
mov
jmp
in
xchg
dec
xor
sbb
sbb
or
mov
iret
xor
sub
enter
test
subl
movsl
es
fsubrs
xchg
outsb
lret
sahf
in
sub
sbb
daa
xor
mov
mov
sbb
fmull
int
dec
and
or
gs
sbb
sub
js
mov
add
xor
sbb
cs
cmpb
adc
imull
aam
je,pt
out
cld
cwtl
shrl
pop
sahf
lea
mov
mov
pop
pop
jo
sarl
sub
and
or
cs
lret
jg
popf
or
aad
arpl
aam
ss
out
inc
ds
and
into
xchg
repnz
les
inc
into
mov
ficoml
xchg
in
push
mov
adc
lret
sbb
mov
dec
cmpsl
cmp
xor
mov
cmpl
lret
pop
cmp
sbb
mov
fwait
sub
xchg
je
ret
xchg
sbb
cmp
fmuls
jg
adc
call
push
fsubrs
clc
and
out
sbb
outsb
lods
and
dec
cld
and
jecxz
and
push
sub
pop
pop
sub
fstpt
sub
int3
and
nop
jbe
loop
adc
mov
icebp
and
rcrb
jecxz
mov
add
cmpsl
jecxz
inc
mov
popa
call
mov
xchg
and
push
lea
xor
jmp
add
dec
scas
and
jne
xor
push
addr16
xchg
inc
or
repnz
cwtl
xorb
push
decl
sbbl
div
repz
cmp
pop
lahf
jnp
and
pop
inc
mov
sbb
lods
mov
into
inc
fidivs
jae
sbb
enter
mov
push
jge
sub
mov
test
sbb
fsubr
cmpl
mul
ds
adc
xor
xchg
rcl
push
enter
lods
xor
scas
cmp
ret
mov
adc
roll
push
je
sbb
and
xchg
xor
push
pop
mov
scas
push
mov
sbb
sub
out
xorl
dec
sbb
fimull
inc
pop
mov
xorl
stos
sbb
loop
aaa
sti
push
pushf
lahf
cmp
dec
sub
jae
add
aad
insl
pop
rclb
cwtl
jle
ret
and
pop
aad
xor
xchg
ss
test
ficoml
int
mov
fnsave
std
mov
arpl
je
test
sub
adcl
mov
mov
icebp
mov
sbb
iret
jbe
insb
push
cmp
inc
mov
arpl
mov
adc
shll
into
mov
xor
in
add
and
jb
cltd
and
jo
iret
fsts
cmpsb
cmpb
sbb
and
imul
in
or
push
xor
outsb
daa
fidivrl
fwait
int3
push
inc
sbb
pop
xor
inc
add
out
adc
adc
sbbl
js
dec
xor
and
dec
into
dec
outsb
out
xor
xchg
jns
pop
inc
or
jmp
dec
in
orb
push
les
scas
pop
jne
in
inc
test
mov
jmp
cld
das
push
les
jp,pn
cmpsl
mov
and
pop
xchg
adc
js
xor
imul
hlt
imul
popa
adc
xlat
shrb
mov
fiaddl
js
dec
sub
xchg
sahf
les
pop
mov
jl
cmp
push
add
cmc
sbb
fisubl
xchg
adc
sub
jbe
stos
and
movsl
ltr
lret
out
mov
inc
or
pop
adc
mov
outsl
dec
cmp
orl
sbb
fbld
pop
roll
jno
and
adc
and
out
push
daa
out
call
pop
in
mov
sbb
xchg
dec
lods
imul
sub
push
scas
outsl
es
cmc
clc
xchg
pop
lret
cmp
xchg
pop
movsb
push
stc
lods
adc
dec
jle
push
fmuls
mov
xchg
aas
loope
lods
ret
xlat
xchg
push
mov
inc
mov
dec
sahf
push
pop
jb
push
js
cmp
xlat
sbb
push
inc
sub
jbe
dec
faddl
mov
adc
scas
cli
lds
add
outsb
iret
test
pop
dec
inc
adc
xor
jl
fcoml
adc
and
sbb
imul
mov
adc
xchg
dec
sbb
add
jp
pop
mov
mov
mov
pop
sahf
cmpsb
aaa
fisubs
das
inc
shlb
into
sti
rcll
jno
fsubl
add
std
prefetcht1
fs
add
std
lea
mov
push
aam
int3
fbstp
arpl
inc
dec
cmpsl
mov
sub
push
mov
and
mov
les
js
movsb
cli
popa
xor
pop
cld
jae
mov
mov
leave
xchg
dec
push
sub
xchg
push
push
es
leave
inc
icebp
andb
push
ss
and
fnstsw
inc
mov
push
inc
dec
cmp
aas
stos
mov
fwait
popa
dec
lret
cmp
mov
cltd
inc
pop
movsb
cmp
stos
test
sbb
insl
int
ja
fidivrs
fs
inc
iret
mov
dec
je
shl
adc
dec
or
nop
dec
pop
pop
cwtl
das
xor
mov
xor
clc
int3
push
sbb
dec
push
dec
movsl
test
popa
bound
test
cmp
mov
cwtl
loop
jnp
dec
lret
shll
cmc
mov
jge
es
mov
nop
in
add
outsl
repnz
dec
neg
icebp
iret
or
test
int
and
mov
jl
add
je
hlt
or
add
jp
insb
jp
jbe
shll
jae
lods
cmpb
cmpsb
or
xorb
jne
cmp
out
shr
nop
push
loop
clc
adc
jo
popf
xor
jecxz
jle
cmp
call
fwait
sub
adcb
movsl
dec
cmp
add
jne
xor
test
cmpl
notb
push
sub
jg
mov
and
mov
mov
and
imul
pop
out
nop
pop
lea
jg
jo
adc
xchg
sbb
cmp
push
mov
adc
pop
fists
inc
call
out
pop
add
stc
jns
ds
insl
pop
aam
and
das
push
insb
insl
inc
scas
dec
xchg
imul
aad
inc
in
lock
lret
loop
xor
dec
jne
mov
rclb
dec
icebp
dec
ja
repz
adc
pop
nop
mov
rorb
or
pop
aam
int
fimull
add
loopne
adc
mov
sbb
roll
test
icebp
mov
sbb
mov
sbb
or
lret
imul
mov
mov
mov
sbb
ficomps
push
inc
xchg
ret
mov
mov
fimuls
push
mov
mov
fs
jo
mov
sbb
mov
ret
jns
loopne
sub
dec
and
xchg
or
negb
add
dec
in
das
push
cwtl
push
mov
mov
stos
sbb
js
sbb
jbe
or
pop
pop
dec
adc
iret
or
mov
xchg
add
push
xor
xchg
loopne
mov
aaa
dec
add
push
mov
out
pop
flds
fldcw
pop
mov
fstps
decb
add
sarb
inc
jb
jecxz
iret
insb
cmp
lods
push
lcall
and
sahf
leave
mov
loope
aam
fdivrl
cmp
push
dec
inc
add
iret
shl
and
repz
das
sub
int3
daa
nop
pop
and
push
rolb
lods
cld
enter
dec
stos
hlt
mov
rorl
adc
cld
push
cmp
inc
aam
sbb
aas
xchg
fstl
imul
adc
arpl
jnp
lahf
aas
push
xchg
or
fsubl
in
rclb
movsl
add
sub
out
sbb
mov
icebp
add
sahf
inc
jge
dec
mov
push
test
and
leave
sub
sbb
loop
jae
scas
or
dec
call
adc
orl
inc
push
bound
stc
outsb
in
in
mov
sbb
or
jecxz
xor
movb
in
push
pop
test
and
in
push
pop
xor
xor
or
mov
out
lea
bnd
ds
jmp
and
push
inc
xor
mov
add
mov
add
cmp
inc
fisttpl
lods
lcall
fsubl
popl
jmp
and
jnp
mov
push
mov
cmpsb
stos
mov
or
push
mov
push
and
inc
in
jle
scas
shrb
les
pop
mov
xor
sbb
mov
lds
dec
mov
jmp
in
lcall
incl
sbb
inc
pop
pop
dec
lcall
push
out
mov
and
push
add
cmc
imul
in
dec
les
jb
push
imul
and
sbb
outsb
push
shlb
add
imul
mov
ficomps
clc
cmp
sub
xor
scas
dec
jge
movsb
xor
shlb
jae
jl
mov
push
add
dec
call
repz
je
fisubs
ret
adc
js
repz
adc
and
xor
mov
aad
rorb
sahf
mov
xor
jp,pn
mov
dec
inc
cmp
stc
cmp
insl
add
gs
jb
pop
lahf
xchg
movsb
outsl
sbb
gs
cmp
push
adc
add
lahf
jmp
sub
adc
xor
push
dec
fmull
iret
xor
mov
jo
cltd
hlt
xchg
or
add
pop
mov
dec
pop
jbe
xchg
in
test
sub
mov
fmull
sti
sbb
or
js
sbb
mov
xchg
and
je
fidivrs
mov
movsb
jge
int3
inc
jg
pop
xchg
test
movsb
mov
inc
cmp
scas
cmp
movsl
rol
mov
sbb
sarl
test
mov
sub
push
add
ja
adc
adc
inc
push
cli
loopne
mov
frstor
ljmp
xchg
lret
out
data16
addr16
loop
call
inc
das
loope
aaa
sbb
mov
pop
mov
push
sti
inc
sbb
jmp
push
out
lcall
mov
or
repnz
xchg
jno
lret
inc
xor
and
stc
dec
mov
out
add
sub
das
clc
mov
mov
push
movsl
repnz
mov
xchg
in
jns
repz
rol
cmp
repz
loope
pop
push
in
mov
mov
cwtl
pop
rclb
hlt
inc
repz
push
fld1
cs
xlat
cmc
rcrl
inc
fnstsw
adc
ret
xor
sbb
adc
push
sahf
hlt
fists
out
insl
daa
lret
jae
mov
add
sub
fistps
or
imul
cltd
jg,pt
fidivrl
testb
ds
mov
ficompl
mov
or
fisubrs
mov
mov
pop
and
inc
or
and
adcl
mov
imul
xchg
lret
and
xchg
push
push
sub
and
je
mov
push
jp
movsl
dec
xchg
mov
mov
adc
mov
sbb
xor
or
das
js
fwait
mov
js
jp
jmp
js
lahf
jno
push
data16
sub
cwtl
in
pushf
dec
pop
jo
mov
mov
in
loope
and
pop
into
hlt
push
jmp
push
mov
js
faddl
dec
pop
push
sub
idivl
setb
cmp
pop
push
imul
sarl
rorl
divb
mov
cmp
icebp
in
ds
pop
jmp
mov
mov
mov
pop
xchg
mov
cs
mov
pop
mov
bound
lods
adc
sub
sub
lret
pushf
sbb
rcll
sahf
addr16
inc
popf
in
cmp
inc
fstps
adc
movsl
cs
lods
div
dec
mov
pop
jle
lcall
jno
xlat
sbb
sbb
push
or
lea
fcomp
pop
ja
fwait
sub
jb
loop
aas
stc
mov
ja
pop
adc
aas
outsl
mov
cld
mov
xchg
or
jl
ret
push
lahf
ja
aas
cmp
stos
in
fdivrs
jne
xor
xchg
scas
cmp
sub
out
sbb
push
and
dec
push
fldl
jmp
stos
out
add
and
xor
push
lods
or
testb
jne
js
int
hlt
inc
cmc
dec
jb
inc
cmpsb
add
testl
pop
daa
psubq
add
adc
inc
aas
sbb
jno
sub
cltd
sahf
das
push
xor
cli
ficoms
mov
lcall
fcoms
sub
and
sub
or
pop
mov
scas
dec
inc
jle
inc
xchg
mov
mov
mov
mov
add
out
in
popf
idivl
stc
cmp
dec
mov
notb
cmp
repnz
pop
test
and
pop
cmp
cmp
mov
inc
in
ficomps
fisttpl
inc
loop
ror
push
adc
dec
pop
data16
xchg
jmp
xchg
cmpl
leave
pop
adc
sbb
ret
aad
jb
ret
push
notb
test
test
repnz
test
fprem1
mov
fisubl
add
inc
jb
mov
imul
dec
push
je
mov
sti
cmpsl
int
push
into
add
push
pop
mov
push
mov
out
mov
mov
mov
jp
pop
imul
adc
adc
cmc
aaa
arpl
sub
and
sub
and
xchg
pop
or
data16
mov
push
outsl
scas
xchg
push
lods
add
dec
cmp
mov
pop
sbb
jns
popa
lds
je
jae
inc
enter
shl
push
out
sub
xchg
cmp
dec
push
or
aaa
pop
fstl
lret
jnp
add
rcr
inc
sbb
leave
xor
out
push
mov
mov
xor
dec
mov
pop
lds
jno
test
pop
mov
fcoml
dec
xor
jge
fsts
xchg
clc
cmc
mov
aas
insb
dec
jl
xchg
mov
sti
cmpsw
dec
push
addr16
cltd
xchg
std
cmc
inc
in
sub
or
fcmovne
cld
mov
push
cli
out
insb
mov
nop
jno
inc
pop
pop
outsl
out
insb
and
in
fwait
aad
rcrl
mov
aaa
push
sbb
cmpsl
aam
shr
dec
stos
sti
int3
add
cmp
cmpsl
jno
stos
fwait
sti
mov
ficoms
cwtl
sbb
cmp
enter
pop
pop
ret
decl
xchg
fwait
fst
das
les
mov
outsl
sbb
adc
push
enter
inc
push
pop
jae
movsl
sbb
cmp
cmpsl
ss
cwtl
jae
mov
mov
cmp
mov
cwtl
pop
decb
stos
loop
adc
mulb
cmp
movsl
mov
cmc
cmp
fimull
cmp
adc
shll
out
loopne
add
and
mov
inc
dec
repnz
lcall
xchg
xchg
mov
jns
mov
and
shll
xchg
mov
jne
pop
push
push
in
aas
xchg
adc
mov
cmc
mov
addl
xor
pop
cmp
inc
cmp
repz
sbb
push
loope
pop
hlt
fdivl
mov
xor
loopne
xchg
loope
pop
mov
fcoml
loopne
cmp
mov
mov
push
shll
add
jecxz
movsb
add
outsb
jl
push
imul
inc
idivb
mov
and
fiaddl
push
add
nop
mov
test
std
popf
ds
cmp
shrb
jge
add
xor
inc
icebp
push
mov
xchg
mov
sti
mov
popa
mov
or
aaa
fwait
std
cwtl
sarl
fisttpll
dec
movsl
cmpsb
scas
mov
xchg
xchg
cmp
mov
test
sbbl
test
jg
jmp
sbb
inc
cmp
fs
sub
in
lock
mov
dec
cmp
add
sub
fstl
shl
mov
in
dec
push
dec
mov
iret
aaa
pop
xchg
xor
sbb
push
sub
cs
popf
lock
cmp
xlat
nop
fadds
adc
lods
mov
xor
fsubr
push
add
out
lret
ret
mov
test
pop
xor
mov
test
push
lds
inc
mov
sub
pop
in
mov
lods
aad
les
imulb
movsl
enter
ljmp
mov
xor
in
push
int3
test
inc
jno
call
mov
test
pop
push
push
out
insl
clc
lds
push
xchg
int3
mov
lods
arpl
cwtl
inc
into
cli
add
cltd
cmc
rcrl
iret
cmp
shll
notl
and
out
mov
jne
fisubs
in
mov
inc
or
repz
repnz
or
mov
sbb
push
cmp
incl
imul
imul
push
push
das
xor
sti
jnp
lds
cmp
jo
xor
push
test
dec
inc
lock
popa
aaa
adc
gs
pop
mov
nop
subl
loopne
xchg
les
xor
sub
push
inc
into
sbb
sbb
test
or
into
int3
sub
test
hlt
ss
cmp
adc
ljmp
sbbb
xor
cltd
pop
or
mov
scas
sti
push
in
dec
mov
dec
mov
cli
push
jl
inc
mov
ja
lods
xor
push
mov
xor
cmc
mov
daa
mov
push
jns
pop
addr16
mov
das
test
xor
jns
adc
jbe
pop
repz
sub
sbb
cmp
lods
sbbl
sub
sbb
xor
inc
lods
and
xchg
cmp
mov
inc
popa
fimuls
je
cmpl
xor
pop
call
std
mov
sub
adc
jo
dec
xor
push
out
and
pusha
mov
ret
mov
xorb
xor
mov
mov
cld
cmpsl
pop
add
sbb
push
arpl
mov
inc
das
std
mov
pop
aam
inc
xor
push
mov
ljmp
mov
lcall
fldcw
mov
lret
test
pusha
pop
pushf
pop
lret
add
sub
jl
or
xchg
shl
scas
jmp
cwtl
mov
fdivp
push
cmp
sub
pop
add
fldl
xchg
lods
dec
mul
dec
enter
inc
inc
mul
dec
inc
cld
cmc
movsl
jmp
add
sbb
jbe
pop
or
sbb
or
jnp
xor
pop
jns
pop
mov
rcrl
stc
lret
in
nop
adc
es
sbb
push
js
mov
out
aas
xchg
out
jp
fsubrl
inc
cs
movsl
bound
xor
pop
rolb
mov
je
shll
jge
insb
shll
sub
int
mov
jmp
cmpsb
stos
push
cmpsl
mov
pop
in
into
inc
pop
aam
push
pop
push
add
lahf
cmpsb
lods
ret
leave
mov
add
jbe
or
sbb
rcr
ja
xor
or
dec
jp
jmp
xchg
sbb
addr16
xor
cs
imul
and
push
outsb
rcrl
push
iret
mov
inc
jo
sub
fsubl
outsb
dec
and
lods
mov
shlb
test
test
xor
into
inc
xchg
fwait
mov
mov
cmpsb
cs
xadd
stc
inc
and
push
dec
sub
sbb
lods
adc
mov
in
or
xor
outsb
addl
mov
pop
es
pop
jo
jbe
inc
negb
jbe
nop
outsl
push
cwtl
lea
sub
mov
pop
mov
cmp
sub
sarl
or
das
shll
sub
lea
cmpsb
xchg
jge
push
fistps
jno
movl
fidivl
ljmp
subl
addb
stos
inc
ficompl
pop
cmp
icebp
test
inc
add
outsl
sbb
jae
cmp
jo
adc
adc
mov
xchg
push
daa
testl
pop
cs
jns
jmp
add
jns
idivl
pop
sbb
inc
pop
inc
xchg
out
xchg
lahf
mov
popf
xchg
mov
leave
jns
jg
enter
jne
mov
push
xchg
or
cmc
adc
add
scas
imul
jp
sub
scas
subps
sbb
ss
sub
iret
les
push
stos
orl
push
lea
and
addr16
incb
mov
sbb
notl
inc
mov
lret
adc
mov
xchg
jmp
lret
out
mov
in
call
shll
cmpsb
add
or
inc
lods
xor
shr
sub
pop
lods
push
pop
xchg
inc
dec
enter
lods
mov
cmp
jg
inc
sbb
lahf
test
mov
sti
or
test
cmp
mov
out
in
sbb
pop
jp
fldt
arpl
cwtl
call
in
adc
outsb
mov
inc
in
jae
scas
repnz
jecxz
pop
sbb
addl
xor
clc
xchg
movsb
xchg
xchg
fcomp
test
pushf
sub
daa
push
mov
or
loop
mov
aam
daa
dec
xor
fnstcw
outsb
sbb
out
pop
jg
push
push
sbbb
mov
push
or
mov
mov
jae
xor
and
sub
and
dec
cmp
or
inc
es
enter
push
push
mov
loopne
loope
or
mov
sub
xchg
cwtl
lcall
sbb
or
xchg
cmp
in
nopl
xor
jl
lret
jp
std
lods
aas
inc
mov
int3
jno
in
lea
movsb
pop
test
outsl
add
lds
shll
clc
test
xchg
cmc
push
js
js
iret
xchg
out
cmc
cmc
scas
movsb
movsb
lcall
dec
ret
adcl
popl
push
sbb
mov
and
enter
daa
xor
lret
lahf
mov
repnz
lds
lea
sbb
lods
cmpsb
push
out
push
in
mov
push
cmpsl
rcrb
or
lock
std
inc
pop
out
icebp
sub
mov
test
mov
inc
jle
mov
or
pusha
jle
insb
mov
ficoml
sub
mov
or
call
xor
mov
sti
clc
fwait
and
push
xchg
push
push
mov
call
and
push
jge
jae
mov
and
add
xor
cmp
mov
and
fsubs
dec
ret
or
cmp
pop
inc
xor
or
xlat
les
repnz
sbb
mov
out
dec
hlt
cltd
jae
mov
mov
clc
mov
lcall
push
jae
inc
mulb
pop
sub
jns
icebp
sbb
test
jb
sbb
mov
rcl
fninit
jo
ss
in
data16
inc
loop
stos
jb
xchg
jae
inc
inc
mov
mov
aaa
sbb
lahf
ficomps
lgdtl
out
inc
jno
pop
dec
mov
adc
xlat
pop
lahf
cmp
sub
imul
fstl
lods
cli
and
loop
ret
dec
sub
mov
shll
clc
cmp
shr
xchg
mov
adc
into
or
pop
cwtl
xchg
test
mov
adc
cs
cmpsl
aaa
mov
sbb
pop
and
pop
lods
imul
mov
cwtl
dec
jnp
sbb
jbe
scas
add
mov
ja
js
dec
std
lods
cs
rclb
test
mov
rcll
cmp
movsl
inc
adc
inc
daa
loopne
push
stos
cmp
stc
push
add
cmc
jmp
cmpsb
ss
fidivrs
icebp
push
cmc
sub
fsubs
out
xchg
adc
sbb
fiadds
sub
popa
repz
scas
aam
cmp
test
push
xor
push
mov
insb
fwait
insl
or
int
or
ret
mov
loop
inc
jp
push
imul
jnp
mov
popa
xchg
dec
sarb
mov
es
popa
inc
cmp
push
js
mov
jns
sti
scas
add
jo
lods
pop
sbb
push
ret
mov
in
push
jg
insl
in
shl
or
mov
push
pop
xor
jp
shrl
lock
lds
clc
xchg
push
cmp
sbbb
add
jno
sbb
call
xchg
jne
add
jecxz
nop
adcl
cmc
xchg
pop
lcall
int
xchg
cmpsb
hlt
mov
dec
and
mov
mov
add
jmp
mov
into
jl
dec
scas
int3
push
fwait
mov
jbe
jno
roll
adc
or
mov
mov
dec
inc
insl
outsl
jae
in
and
int
orl
addr16
add
lods
rolb
xor
daa
stos
lds
mov
inc
stc
add
lods
adc
pop
repz
movsb
fcompl
in
pop
pop
sbb
xchg
or
jmp
stc
insl
test
jmp
test
xchg
loopne
add
add
mov
gs
mov
lcall
sahf
push
xchg
bound
and
out
jge
outsl
sub
fdivr
xlat
cmpsl
gs
jns
leave
and
test
or
dec
mov
and
add
pop
mov
jo
jo
pop
mov
push
mov
shlb
scas
push
cmp
xchg
dec
mov
out
cld
fisttpl
xchg
bound
loop
ret
inc
out
xor
cmp
push
addl
test
push
loop
inc
add
adc
jns
js
in
mov
mov
sub
push
push
ljmp
repz
add
pop
sbb
pop
mov
insb
repnz
stos
cmp
cmp
jl
xor
jae
mov
mov
and
fiadds
pop
xchg
mov
das
ret
ret
ds
add
rorl
outsb
push
push
shll
fidivrs
and
test
jo
lea
xor
arpl
dec
scas
push
stos
sub
sbb
push
pop
test
jmp
sub
stos
cmp
sub
pusha
dec
sub
ret
lahf
cmpsb
mov
xor
psubw
xchg
fildl
ljmp
and
mov
push
lea
sbb
lahf
inc
adc
mov
mov
arpl
adc
xor
inc
sbb
xchg
inc
or
push
add
mov
ficompl
leave
pop
inc
mov
xor
testl
mov
jl
dec
or
std
mov
lds
cmp
call
mov
es
sti
push
lds
testl
xchg
mov
enter
adc
jle
rcrb
ret
cmpb
adc
mov
jnp
and
stos
icebp
imul
adcb
push
iret
jno
mov
mov
aam
pop
rcll
call
fbld
sub
adc
xchg
popa
adc
fdivl
xchg
out
icebp
lock
mov
lds
push
push
loop
jnp
popa
nop
popa
insb
cmp
test
outsl
mov
mov
xor
jecxz
cld
xorl
gs
aad
jb
pop
push
lret
jmp
sbbb
int
jle
sub
ret
add
ljmp
xchg
add
scas
and
sar
sbb
push
loopne
sbb
sub
jp
jnp
sbb
icebp
loopne
lds
negb
scas
dec
add
sub
sbb
lret
incb
sahf
out
mov
pop
fs
out
ds
xchg
fsubrs
cld
les
and
setns
jb
addr16
push
cmp
mov
notb
mulb
sub
leave
sarb
fwait
repnz
dec
dec
leave
ljmp
pop
repz
xor
mov
push
pop
ss
imul
and
mov
cwtl
and
movsl
jl
repz
not
sub
lock
push
cltd
out
fisttpl
xchg
fnop
cmpsl
jnp
xchg
mov
repnz
int
ljmp
sarl
gs
adc
mov
mov
add
aad
inc
hlt
adc
fldcw
out
xor
leave
lret
sbb
aas
xchg
lods
jo
mov
int3
lret
out
cli
hlt
add
sti
dec
cld
mov
mov
add
dec
cltd
inc
cld
or
fwait
roll
jge
adc
xchg
push
or
adc
cmpsl
push
pushf
faddl
inc
les
cltd
bound
paddd
stc
jecxz
jle
lahf
cmp
sub
pop
popa
pushf
bnd
mov
pop
mov
shrl
add
jecxz
mov
dec
and
push
mov
mov
bound
jp
in
daa
fists
xchg
adc
cmp
out
decb
pop
pop
jmp
adc
mov
data16
push
sbb
dec
sub
mov
pop
xor
xchg
adcb
orb
adc
in
insl
sub
push
push
out
test
push
nop
pop
and
out
ret
mov
cmp
cs
sbbl
in
jge
fisttpll
push
divb
jb
jecxz
cltd
sub
mov
inc
pop
lods
lret
pop
mov
std
std
cmp
lock
mov
imul
xchg
jle
lods
push
aas
fs
ss
rorl
sbb
and
icebp
xchg
sbb
repz
test
fisttpll
int3
jo
scas
or
test
cmp
lret
xor
pop
cmp
push
lods
dec
fdivrl
mov
lret
mov
jle
dec
cmp
movsb
rol
shl
movsb
int
dec
pop
xor
ljmp
lods
int
pop
add
jnp
das
repz
mov
arpl
lds
cwtl
fimuls
jnp
es
lret
adc
ret
or
addr16
xchg
mov
cmpsl
jge
in
icebp
or
mov
icebp
fsubs
push
js
add
mov
adcl
sbb
mov
pop
mov
les
call
loopne
lret
cwtl
mov
imul
jmp
lahf
mov
xor
stos
push
cmp
in
xor
and
cmp
inc
aam
jg
roll
lock
imulb
push
movsb
pop
dec
mov
stos
and
inc
arpl
and
xor
jecxz
pop
sub
jecxz
popf
nop
jg
bound
imul
imulb
jbe
push
imul
or
xchg
add
scas
out
cli
fdivrl
or
repz
sahf
jae
add
jl
add
shrb
lock
mov
out
cmp
sahf
dec
sub
sbb
loop
leave
sub
sti
es
movsb
fdivrs
fbld
aaa
adc
repnz
mov
push
adc
ss
call
jp
test
mov
pop
call
imul
push
adc
das
sub
repnz
cmp
popa
push
fsubrs
cmp
js
lods
push
mov
xchg
mov
jge
sahf
lcall
fmull
inc
cmp
sub
mov
aaa
dec
outsb
imulb
add
lds
mov
or
inc
das
jmp
arpl
std
inc
dec
cmp
lret
mov
neg
adc
jg
movsb
pushf
adc
mov
fdivrp
iret
sub
fwait
mov
and
sub
xlat
lcall
cmc
clc
into
pop
mov
aad
test
repnz
orb
lcall
aam
adc
sub
stc
mov
jbe
cltd
xor
je
push
imul
ja
xchg
or
push
out
xor
scas
out
stos
sub
cmp
subl
movsl
sti
enter
adc
ror
out
dec
es
subb
mov
or
in
outsl
je
mov
shrl
adc
aas
jne
add
fldenv
jecxz
in
lret
jp
mul
add
js
in
insb
mov
rcr
and
je
or
inc
in
lods
jle
std
dec
arpl
pop
jne
pop
or
aad
xchg
xor
mov
push
lret
mov
popf
xor
pop
jge
fisttpl
cmp
cmp
lock
or
xchg
loopne
inc
sahf
ljmp
inc
dec
jle
xor
jecxz
cmpsb
je
aaa
mov
push
jns
jae
mov
xchg
sub
push
dec
sub
inc
test
jo
cmpsl
mov
pushf
jae
out
bound
inc
adc
xchg
shl
inc
push
dec
sub
inc
jmp
into
gs
inc
jne
or
pop
movsl
sbb
out
pop
fstpt
das
rolb
int3
clc
pop
lods
lods
in
ljmp
xchg
repnz
cmp
and
xchg
dec
cmpsl
sub
and
sub
and
xchg
sti
push
mov
mov
jmp
loope
ljmp
roll
sub
pop
movsb
sbb
sub
mov
or
or
mov
xor
add
je
pop
push
cmp
mov
inc
mov
mov
mov
and
inc
mov
adc
scas
fidivrs
loopne
xchg
push
mov
xchg
mov
fs
push
lds
orl
sub
out
xor
cli
adc
sub
xchg
cmp
divl
ret
xchg
fisttpll
mov
enter
sbb
fsubrl
mov
rorb
aaa
dec
jge
fwait
je
repnz
arpl
dec
into
add
push
pusha
inc
pushl
ja
int3
pop
jg
arpl
aad
cli
mov
setns
inc
pop
in
push
stos
xchg
orl
mov
mov
cli
arpl
add
dec
mov
xor
rep
popa
pop
mov
divb
ss
jns
adc
inc
pop
and
cmpb
and
pop
int
add
inc
xchg
sbb
mov
push
out
cmp
imul
lahf
add
loop
push
test
or
fadds
aad
xchg
xor
mov
push
adc
jnp
cmp
cltd
in
pop
mov
mov
or
and
adc
in
imul
lds
stos
add
js
push
dec
sbb
fwait
cmpsl
sbb
add
rcll
fstl
add
test
xor
sub
or
inc
mov
call
sbb
jmp
nop
mov
jns
pop
dec
xchg
fnstenv
sbb
fistl
pop
cli
or
xlat
dec
mov
sub
es
enter
push
js
xchg
orl
lods
enter
into
jno
test
mov
pop
jg
sar
std
push
cwtl
push
or
maxps
test
cmp
pop
or
push
cmp
dec
repnz
mov
mov
adc
and
jae
les
xchg
xchg
lcall
pop
mov
mov
pop
pop
inc
loope
fbstp
leave
pushf
jbe
jne
jns
cmp
sbb
pop
loopne
aad
fisttps
nop
pop
les
adc
sbb
jbe
add
std
jns
cli
sti
cltd
pop
sub
int3
push
test
pushf
into
jge
pop
movsb
xchg
pop
xor
bound
mov
aad
dec
arpl
stc
mov
aaa
decb
inc
cmp
cmpsl
and
cltd
sub
cmp
loop
jns
not
lods
mov
mov
test
add
mov
mov
jp
and
sbb
adc
in
push
aaa
adc
sbb
xchg
cltd
dec
dec
inc
xor
sbb
adc
and
mov
lahf
add
iret
jae
jb
sub
pop
pusha
mov
add
mov
je
in
pop
or
push
lock
bound
and
sub
and
pushf
and
push
inc
xor
out
setp
xchg
jne
rcr
stos
cmc
dec
xchg
repnz
stos
in
mov
dec
pop
sahf
leave
inc
mov
bound
pop
popf
inc
sub
mov
pop
dec
jge
mov
lock
aad
cmp
pop
filds
out
js
pop
mov
loop
dec
mov
imul
pop
adc
and
sbb
pop
mov
and
in
mov
adc
mov
jmp
fs
sbb
xchg
stc
xchg
push
mov
bound
rorl
sub
cwtl
data16
xor
in
xorl
cld
inc
sbb
cmpsb
mov
insl
sbb
cmp
sarl
test
dec
xchg
lret
mov
add
xor
xchg
out
push
mov
enter
call
dec
cmc
xchg
push
insb
pop
xchg
cmp
stos
pusha
repz
popa
fnstenv
xor
mov
mov
and
sub
xor
xchg
inc
or
cmp
inc
in
in
push
stos
mov
cmp
out
in
jle
adc
and
lea
movsl
cmpsl
sbb
inc
mov
test
in
cmp
mov
ljmp
ror
xor
cmp
mov
dec
xchg
rorl
rcr
adc
out
mov
in
pop
rcr
push
outsl
insb
xor
arpl
mov
cmpsb
push
pop
mov
adc
cmpsb
and
or
dec
mov
fnstcw
push
or
sbb
insb
cmpsl
and
push
dec
sbb
fimull
repnz
adc
lds
jae
mov
xchg
sub
aas
pop
imul
paddusb
sbb
add
pop
sub
jg
loope
mov
push
pushw
mov
fldcw
xor
and
pop
sbb
mov
mov
xchg
mov
cmp
sub
cli
mov
jo
adc
mov
popf
je
test
and
inc
scas
sbb
add
std
adc
lret
rclb
and
sub
sbb
add
push
sbb
jnp
adc
cli
adc
in
sbb
je
aam
fstps
or
test
sarl
pop
stc
and
or
stos
push
stos
and
or
das
or
cmc
xor
call
or
out
sbb
mov
adc
cmc
mov
mov
xor
sub
cmp
lret
mov
shll
dec
gs
sub
lods
jecxz
sub
and
pop
repz
daa
dec
jge
pop
test
movsl
jae
es
insb
dec
inc
mov
cwtl
jl
dec
in
scas
or
int3
inc
idiv
pop
inc
repnz
movsb
lcall
mov
mov
xchg
sbb
aad
xor
jo
xor
pushf
jnp
popa
jae
roll
lods
das
or
dec
mov
sub
cli
jbe
pop
xchg
aam
je
pusha
lcall
cmpl
mov
shlb
xchg
push
je
mov
insl
mov
cmp
in
aad
sub
mov
xchg
cmp
add
lcall
mov
pusha
add
lds
sarb
subl
jnp
cmp
decl
add
xlat
idiv
out
sbb
fdivs
xlat
test
inc
mov
xchg
push
sti
adc
xchg
push
mov
xor
shll
push
push
xor
push
jl
and
mov
lods
cwtl
add
mov
mov
mov
fwait
and
push
out
lret
jle
jnp
dec
mov
dec
mov
gs
lahf
inc
xchg
and
mov
dec
add
fs
xor
and
test
dec
or
pop
stc
cmp
pop
inc
loopne
jo
lahf
push
cmp
shr
lds
mov
jae
pop
jp
lret
mov
xor
lods
lea
std
aaa
cltd
push
sbb
xchg
sarl
jo
in
cmp
sub
adc
sbb
pushf
test
in
mov
bound
scas
adc
std
call
cmpsl
lds
mov
sub
js
data16
ljmp
push
rcll
pop
stc
call
mov
daa
icebp
clc
movsl
cmpsl
mov
xor
add
into
bound
xor
mov
test
xchg
adc
in
shr
out
adc
cmp
add
hlt
adc
nop
xor
mov
negb
mov
xchg
sahf
lock
mov
das
fcoml
cmp
int
mov
mov
dec
lds
rorl
mov
into
xor
ss
ja
xorb
test
mov
and
pop
inc
frstor
in
add
fcmovnu
rol
xchg
xorl
dec
xchg
xchg
cwtl
xor
test
sbb
es
xchg
cmp
in
sub
mov
xor
cmpsb
and
jp
jge
and
pop
arpl
sub
push
pop
xchg
dec
movsl
es
or
mov
sub
pusha
mov
mov
cmp
pop
in
jmp
jo
jg
or
gs
xchg
and
sub
divb
movsb
jnp
push
adc
dec
add
out
data16
in
pop
negb
xchg
jne
dec
adc
insb
jg
adc
pusha
push
addb
push
repnz
inc
adc
pop
stc
inc
bndldx
mov
xor
mov
add
ja
pop
pop
lods
outsl
test
insb
ljmp
mov
sbb
dec
decl
inc
sub
push
notb
sbb
pop
inc
jb
cld
iret
xor
lods
sub
hlt
rcrl
je
cmp
add
jecxz
xor
and
jns
jecxz
add
push
pop
dec
jno
pusha
dec
add
jp
enter
adc
nop
mov
cmc
cmpsl
xrelease
gs
in
inc
ss
mov
dec
mov
into
fs
std
ja
fdiv
jg
es
add
in
or
inc
ffree
and
add
cmpl
push
jg
enter
cmp
cltd
pop
jecxz
sub
imul
dec
gs
pop
shrb
mov
mov
push
rcr
prefetcht2
lods
outsl
sti
cmpsb
mov
lods
cmp
sahf
xchg
cmpsl
jge
or
mov
mov
adc
in
adc
jne
ja
dec
mov
dec
movsl
mov
addr16
int
sub
data16
pop
push
cmp
cmp
arpl
pop
sub
and
mov
fcomps
mov
inc
pop
popa
add
xchg
jae
addr16
push
adc
pop
fimuls
jmp
aaa
mov
fsts
mov
repz
js
iret
mov
adc
gs
push
xor
xor
cmp
sbb
pop
popa
sub
push
sbb
sbb
cmp
cmp
inc
cmpb
scas
mov
nop
inc
ficoms
dec
imul
or
sbb
pop
cli
mov
mov
and
lds
or
nop
pusha
push
in
push
xchg
dec
or
sbb
ljmp
subl
outsb
cmp
addr16
sbb
mov
fsubrs
cmp
es
out
xor
out
cwtl
push
out
lret
into
xor
jle
movsb
jb
jb
ret
lahf
xor
xchg
inc
test
enter
jb
mov
lcall
and
sti
imul
lock
mov
push
and
icebp
cmpb
ds
mov
pop
repz
cli
in
popf
jle
push
add
push
adc
ja
mov
adc
push
stos
repnz
jb
sahf
data16
pop
push
and
inc
mov
sub
cmp
leave
test
sar
push
fs
push
and
push
add
xchg
lcall
fmuls
mov
addr16
not
sti
jne
sti
jns
mov
mov
jle
or
ljmp
shll
je
iret
adc
mov
clc
sbb
sbb
jmp
sbb
add
xlat
sub
add
inc
push
sar
add
cli
sti
outsl
xchg
sub
mov
cmp
xlat
fstpt
ror
lock
roll
out
mov
adc
in
loopne
outsl
xor
dec
xchg
cmp
mov
dec
adc
xchg
cltd
xchg
jbe
pop
aam
daa
je
nop
jns
cltd
jmp
adc
fsubrp
mov
cld
stos
jne
pop
jnp
and
adc
ja
lea
popa
mov
adc
mov
and
cmp
inc
lods
shr
sub
into
mov
mov
xchg
add
loopne
add
mov
xchg
test
scas
and
xchg
hlt
bound
fwait
jecxz
mov
add
mov
sbb
subl
push
inc
dec
inc
and
pop
pop
xchg
add
sbb
mov
lret
and
pop
push
addr16
aad
jg
adc
jl
cmc
cld
push
in
lds
pop
call
test
cmp
dec
sbb
pop
adc
cltd
popa
dec
mov
in
push
add
popf
lret
mov
pop
loop
xchg
incb
mov
jmp
pushl
mov
int3
es
or
imul
loope,pt
ss
mov
jl
aaa
js
aad
xchg
xchg
outsb
mov
leave
popa
mov
mov
out
loope
repz
mov
xchg
and
adcl
mov
iret
out
cmp
insb
pusha
and
cmp
add
jecxz
mov
jmp
test
or
ss
inc
inc
fs
pop
mov
das
daa
or
push
je
pop
push
xchg
in
sti
lods
sbb
dec
scas
jno
std
imul
jecxz
daa
aad
jb
icebp
filds
test
jbe
mov
add
inc
inc
js
dec
cli
inc
mov
insl
add
pop
call
gs
mov
stos
push
out
stos
ficompl
xchg
xor
sbb
or
imul
mov
dec
mov
mov
dec
pop
push
pop
cmp
cmpb
mov
les
out
and
fimuls
int3
cltd
lock
into
js
adc
daa
push
push
lods
popa
out
and
jae
cmpsb
sub
xchg
sbb
scas
mov
sub
int
adc
adc
and
fs
adc
andl
mov
movsl
mov
xor
fstpl
out
repnz
mov
jge
imul
jmp
sti
dec
xor
xlat
push
sahf
aad
ror
push
mov
or
sahf
gs
leave
sbb
clc
stos
mov
fwait
pop
add
popf
pop
ret
in
dec
push
sub
movd
pusha
stc
push
cmp
and
push
ret
imull
test
rcrb
rorb
cmp
dec
sahf
pop
xchg
dec
cmp
loop
bound
push
cmpsb
jae
cwtl
or
and
sbb
clc
mov
inc
xchg
and
jmp
add
fists
cmp
cmp
dec
movsl
mov
loope
ffree
daa
stos
inc
add
rcrb
mov
filds
add
inc
movsl
movsb
xchg
dec
push
xor
cmpsb
adc
fs
or
or
shl
outsl
cltd
aaa
mov
shll
dec
cmpl
aam
mov
xor
pop
adc
fildll
add
dec
lret
icebp
test
movl
outsl
das
jb
sbb
sbb
fsubrs
mov
jae
outsl
mov
inc
push
popf
push
movsl
add
and
cvtpi2ps
in
mov
pop
lret
daa
icebp
and
dec
test
mov
mov
out
lahf
sbb
mov
fcmovnbe
insl
out
or
rcrl
shl
dec
repnz
lahf
mov
gs
shll
lcall
shlb
mov
sahf
aad
js
and
adc
mov
adc
push
sub
cmp
or
repz
push
jns
fcmovnu
seta
dec
push
and
inc
shl
mov
pop
cmc
scas
xor
pop
mov
inc
mov
adc
rcll
sbb
in
pushf
jbe
shrl
jnp
test
insb
pop
and
mov
imul
mov
push
xchg
or
fs
fsub
or
out
push
push
pop
aam
hlt
mov
fistpll
stos
das
mov
inc
or
lods
cmp
inc
call
xor
insl
add
call
add
xlat
add
xor
inc
xlat
insb
testl
xchg
pop
pushf
int3
push
mov
loop
xor
iret
insb
xchg
pop
push
fldl
nop
incb
jl
ja
mov
divb
pop
adc
mov
shll
js
mov
testb
and
pop
ret
pop
out
aad
adc
and
sahf
lcall
inc
lcall
pop
sbb
xlat
dec
and
and
jle
pop
or
cmp
out
test
mov
sub
addr16
lock
shll
mov
or
stc
cmp
scas
sub
inc
cmp
lcall
jb
xchg
repnz
call
inc
mov
iret
outsb
lock
lahf
adc
jae
pop
jl
xor
cmp
push
leave
out
imul
das
aam
stos
cwtl
or
cmpsl
pop
test
or
lock
popa
insl
sub
cmpsb
pop
jo
lock
add
push
lds
cmpsl
sbb
cltd
add
add
lds
mov
cmp
repz
jnp
and
fidivrs
jne
jp
mov
out
mov
test
and
outsb
lods
out
popa
xor
sarl
inc
cwtl
pop
stos
bound
lahf
sub
inc
fsqrt
push
dec
cwtl
test
cmp
sbb
mov
ss
inc
jno
shrl
mov
mov
in
test
inc
cmp
adc
repnz
lds
gs
sarb
dec
cwtl
mov
fwait
gs
xchg
dec
push
pushf
movsl
stc
aaa
mov
pop
enter
aad
enter
js
into
mov
xchg
subb
cli
fldl
jg
sbbl
in
fxch
inc
jnp
mov
or
stc
push
sbbl
xchg
cmp
les
jb
ror
stc
cmpsl
flds
icebp
aad
xor
inc
mov
in
jns
popf
repnz
add
xor
ljmp
int
cwtl
pop
cmp
inc
in
sub
add
sub
cmp
out
mov
call
add
aas
outsl
ret
cmp
mov
add
addb
push
pusha
lods
mov
xchg
rorl
jg
and
ss
adc
leave
decl
dec
mov
cmp
xchg
and
sub
data16
jne
cmc
pop
lock
or
xor
push
int3
popa
adc
notb
sahf
jg
aaa
jl
jmp
je
in
out
js
aad
push
sbb
pusha
sbbb
mov
jnp
into
mov
xchg
sbb
cs
mov
movsl
rcll
sbb
pop
xchg
movsb
adc
test
mov
add
ret
sub
push
and
pop
jp
cmc
arpl
insl
xchg
loopne
jmp
ds
negb
mov
scas
inc
mov
inc
lahf
push
xchg
xor
dec
fldenv
inc
adcb
mov
sahf
outsb
cmp
repz
sbb
push
push
inc
es
cld
shlb
nop
scas
lret
aas
fcoms
xchg
mov
mov
enter
mov
push
sub
dec
sbb
nop
cmp
mov
mov
sahf
ss
mov
xchg
mov
xor
push
rolb
movlps
repz
jno
inc
add
jnp
mov
out
sbbb
aad
stc
aaa
inc
lahf
into
add
jae
mov
mov
test
stc
dec
inc
sbb
fdivrs
mov
and
cmp
fisubl
cmp
adc
inc
repz
push
cmp
mov
and
arpl
or
fsub
and
lcall
int
push
sub
adc
test
adc
leave
repz
xchg
nop
add
mov
int
ja
ss
fdivl
pop
pop
dec
aad
mov
imul
test
jb
mov
fistpl
es
lahf
push
gs
xchg
mov
scas
lods
cmc
in
or
sbb
into
pusha
mov
dec
out
push
mov
gs
or
testl
aam
les
sbb
inc
xchg
das
shr
cltd
in
dec
popa
ret
xchg
inc
and
repnz
mov
dec
out
js
das
cli
adc
movsl
aaa
push
out
lcall
xor
mov
test
xor
and
cmp
cmp
out
add
inc
in
int3
scas
in
and
sub
addl
xor
lods
cli
stos
out
mov
jo
out
lods
cwtl
pop
jno
out
sub
loopne
decb
fimull
popa
gs
je
dec
xchg
pop
sbb
cmp
std
sbb
into
xchg
in
sti
cs
mov
stos
mov
outsl
jnp
xchg
mov
daa
ret
and
push
lret
movsb
sarb
jge
push
or
dec
add
iret
fiadds
jns
sbb
mov
sub
jo
push
les
sub
sub
jns
or
or
xor
out
pop
rolb
daa
movsb
jecxz
inc
xchg
pop
fisubs
jae
inc
pusha
adc
aam
sub
lea
pop
pop
push
and
popa
cmp
cmp
mov
ljmp
mov
rol
push
jmp
rorl
jno
push
mov
pop
xor
popf
rcrl
lods
loope
addr16
and
ret
lret
push
gs
adc
and
stos
cmc
cmp
cli
sbb
scas
lods
arpl
movsb
jb
mov
fbstp
sub
pusha
rclb
divb
in
ljmp
jge,pn
sub
cmp
pop
fsubr
inc
jns
hlt
daa
xchg
stc
mov
sub
push
mov
int3
daa
jae
inc
les
imul
xor
rol
mov
or
or
not
je
cmpsb
mov
sbb
push
lcall
ja
test
pushf
pop
mov
xor
and
push
jns
add
xchg
nop
call
or
fisubl
mov
iret
add
mov
lcall
or
lock
mov
inc
dec
and
stc
cltd
dec
dec
mov
out
mov
adc
out
mov
adc
fisubl
jmp
fsubrs
and
xchg
push
push
inc
dec
jl
inc
int3
and
roll
lret
int
jmp
jae
aad
rclb
into
movsl
in
stos
push
xchg
mov
xchg
test
cmp
dec
pop
sub
shrl
xor
push
orb
inc
and
and
pop
adc
sub
addr16
cltd
or
xchg
or
sub
xchg
cli
sbb
clc
icebp
fistl
push
mov
fmul
pop
sub
js
mov
imul
add
xchg
sbb
push
jg
mov
mov
enter
lock
push
xchg
mov
fsubp
dec
add
popf
popf
lcall
ss
mov
es
notb
scas
int
push
lcall
int3
cli
subl
push
test
rol
test
cwtl
or
pop
push
dec
cltd
xchg
push
rolb
xchg
mov
in
rcrl
pop
test
lods
sbb
push
test
mov
mov
popa
xor
lods
std
mov
cltd
and
dec
sub
out
add
jns
xor
int3
mov
mov
in
sti
add
jnp
sahf
insl
add
dec
jno
das
cmp
stos
dec
jno
not
jmp
rcl
lret
aaa
cmp
test
out
mov
pop
cltd
daa
mov
imul
loop
ja
and
addr16
add
cmpsl
adc
movsb
nop
mov
and
inc
or
aas
ljmp
sub
xlat
jbe
add
sub
push
fstpl
mov
repz
push
mov
jp
ret
dec
or
ljmp
pop
push
popaw
jmp
jnp
ret
push
out
in
and
ja
cwtl
mov
cwtl
xor
pushf
xlat
xor
sbb
xchg
mov
xchg
jecxz
pop
cld
in
pop
out
mov
dec
add
sbb
fisubs
and
sbb
lcall
add
jmp
repnz
or
and
in
pop
push
jecxz
gs
adc
rclb
push
push
cmp
lcall
jbe
inc
cmp
sbb
pushf
insb
lods
lea
mov
mov
fidivs
push
jmp
test
jbe
mov
pop
sub
mov
inc
mov
jl
cmp
dec
or
xchg
icebp
sbb
dec
js
push
and
jns
mov
or
shrb
xlat
mov
add
mov
xor
in
mov
sub
test
movsb
dec
repnz
mov
dec
notb
dec
arpl
mov
mov
jno
mov
or
xor
lret
and
scas
popf
add
scas
adcb
lea
das
cmpsb
or
outsl
mov
mov
lods
roll
mov
fbstp
test
sub
and
and
dec
loop
push
aaa
in
mulw
call
mov
mov
jmp
loope
mov
jns
cmp
sub
add
ret
add
jp
lret
sbb
or
mov
push
jnp
push
mov
mov
pop
mov
jne
outsb
mov
cmp
mov
sbb
outsb
dec
ds
mov
inc
pop
or
lret
in
test
mov
dec
stos
in
dec
pop
sti
jno
sbbl
mov
xchg
aad
fsubs
cs
imul
xlat
push
je
and
arpl
cmp
push
xor
xchg
scas
cwtl
fidivl
daa
loop
or
fsub
pusha
adc
pop
cmpsb
or
lock
xchg
sbb
fs
in
jo
xor
push
fwait
jle
aaa
std
inc
shlb
xchg
mov
aad
pop
cmpl
jl
rclb
gs
jle
dec
mov
aas
cmp
mov
or
repz
pop
nop
imul
jbe
lock
xor
and
push
and
adc
addr16
xor
sbb
adc
es
mov
mov
xchg
popa
mov
icebp
fst
push
cmp
xorb
call
adc
mov
out
pop
xchg
rorb
adc
fisubl
repz
testb
andb
mov
add
jg
push
inc
xor
out
divb
jmp
pop
push
xchg
sub
ret
cmpsl
in
xorl
inc
repnz
scas
data16
sub
adc
inc
add
enter
jnp
inc
add
mov
outsb
cwtl
icebp
testb
jns
cld
add
adc
lahf
pop
sbb
std
std
inc
xchg
cwtl
or
mov
sub
push
in
cmp
mov
orb
xor
aaa
mov
jge
lret
dec
mov
lret
mov
jg
rorb
int3
or
ret
sub
pop
nop
push
neg
insl
lods
gs
outsl
adc
fwait
mov
sbb
mov
jnp
out
insl
scas
sub
jl
mov
xchg
aaa
fnstsw
jg
mov
es
xchg
pop
aaa
mov
stc
xor
in
popf
ret
popf
out
lods
daa
pop
mov
jmp
ret
test
push
cmpsl
sbbl
sbb
and
or
push
rorl
stos
orb
icebp
and
add
fildll
and
lret
inc
adc
sub
scas
mov
stos
movsl
push
dec
outsl
ret
cli
pop
jno
cli
mov
lahf
shlb
gs
sub
mov
mov
mov
out
xchg
je
repnz
pop
push
jmp
cmp
cmp
jl
sub
inc
fcmovnb
and
fidivrs
inc
call
or
in
inc
mov
jns
ret
outsl
or
mov
push
rolb
sbb
aad
hlt
loopne
insb
push
pop
dec
jle
xchg
sbb
mov
loopne
gs
incl
fwait
sbb
jmp
fdiv
lret
xlat
mov
mov
movsl
pop
push
pushf
jle
pusha
enter
xorl
inc
int3
pushf
xchg
inc
incl
stos
lock
sub
sbb
imull
hlt
pop
popf
ret
pop
jae
jle
scas
cmp
icebp
andb
hlt
mov
inc
loope
test
sub
jmp
dec
xchg
push
clc
inc
push
mov
and
cmpb
fst
dec
mov
push
cmc
jmp
cmpsb
syscall
dec
mov
dec
mov
lock
pushf
mov
sub
outsl
cs
or
and
ret
xor
popa
mov
lret
cmp
shlb
add
mov
jno
dec
push
pop
rcr
add
mov
daa
jbe
and
rcll
push
int
in
or
bound
and
adc
xchg
cmp
cwtl
mov
add
jge
enter
pop
adc
and
lock
pop
dec
xor
pop
push
call
dec
lret
in
or
or
out
outsb
pop
pop
fmull
dec
or
mov
add
and
jo
and
test
fs
xor
cmc
pop
cmp
imul
lahf
cmc
out
mov
push
test
ret
mov
mov
in
push
and
sbb
xchg
ds
pop
inc
int
addr16
inc
int
sbb
pop
jns
push
cmpsb
or
sub
cltd
iret
loopne
sub
stc
mov
es
xlat
xor
imul
pusha
insl
jne
insb
inc
mov
test
or
adc
aam
mov
insb
sbb
or
jbe
negl
into
adc
stc
xchg
adc
mov
test
cmpsb
je
stos
repnz
pop
icebp
in
fcompl
push
adc
push
xchg
push
movsl
or
ret
sbb
lahf
dec
outsl
lods
add
or
rorb
inc
jp
movsl
mov
mov
int3
mov
scas
ret
lds
or
jg
xchg
jne
pushf
sti
cmpsb
js
adc
ret
insb
loope
push
sub
stos
add
pop
and
push
mov
mov
mov
cmp
sbb
push
enter
ds
jg
bnd
js
rorl
bound
mov
mov
jbe
sub
mov
jmp
xchg
lret
outsb
fstpt
clc
push
xchg
mov
test
xchg
adc
jl
sub
add
js
mov
mov
jne
cld
imul
sti
adc
pop
mov
xor
cmp
mov
dec
lea
insl
lods
cmc
xchg
push
in
inc
xor
cmp
cmp
aas
shl
inc
mov
jo
dec
js
xor
in
daa
mov
jne
dec
mov
push
test
test
sub
push
mov
std
mov
aam
mov
sarb
ret
and
cltd
in
mov
mov
popa
cmp
jne
sahf
into
mov
in
aam
addr16
push
cs
pop
out
rcr
mov
lods
mov
xor
mov
subl
cmpsb
xor
pop
jae
aam
push
fwait
xor
sub
hlt
pop
and
mov
jmp
movsb
aas
inc
repz
aaa
mov
cli
out
mov
and
call
iret
stos
sub
mov
mov
popf
push
out
and
jle
lock
mov
ds
lret
icebp
cmp
push
dec
xor
and
mov
adc
fsubs
jle
iret
mov
xchg
shll
loop
mov
or
mov
addr16
mov
and
push
in
dec
dec
lret
stos
mov
xchg
xor
out
sub
ss
bound
jle
inc
jo
add
xor
int3
cmc
dec
test
rclb
push
movsl
dec
push
pop
push
movsb
out
ror
ljmp
fbstp
outsb
jmp
mov
divl
rcrb
daa
loopne
or
invd
mov
aas
movsb
xchg
xchg
jp
xlat
sub
add
and
cmp
enter
into
mov
adc
lock
outsb
cmp
mov
xchg
ljmp
pop
push
mov
imul
sbb
xchg
popa
stos
imul
cmp
mov
das
or
pop
into
mov
loopne
xor
fdivs
and
in
jb
jne
cli
ds
push
inc
or
movb
sbb
scas
fmulp
pop
sti
sti
sbb
mov
pop
adc
xor
cmp
push
push
inc
popf
addb
mov
inc
mov
dec
sub
fidivl
lahf
dec
loop
jo
es
cli
cmp
fwait
insl
in
pop
dec
mov
jo
cmpsb
leave
fwait
sbb
adc
sbb
sub
cmp
sbb
dec
cmpsb
jne
imul
lar
mov
pusha
imul
cmp
aad
pop
in
jp
lea
aam
stos
push
pop
dec
pushl
mov
dec
repnz
inc
jecxz
arpl
cmc
pop
out
sbbl
lcall
bnd
sub
xor
scas
adc
js
or
mov
pop
or
inc
xchg
and
data16
lahf
mov
adc
cs
fstpt
into
pop
xchg
xchg
ljmp
leave
cs
sahf
out
adc
lock
mov
or
adc
fiaddl
add
push
add
sti
cmpsl
fisubrs
cs
lahf
pop
cmpsl
hlt
jmp
mov
outsb
mov
mov
stos
push
mov
inc
or
add
rol
add
sub
lahf
test
mov
loop
cli
mov
data16
jmp
cmp
lods
stos
lret
dec
push
aad
xchg
mov
mov
inc
mov
fildl
pop
mov
add
movsl
sub
std
xchg
sub
mov
mov
inc
or
mov
and
mov
cmp
sbb
or
cmc
fisubs
adc
mov
aad
out
jecxz
fwait
mov
insb
fistps
push
outsb
mov
inc
xchg
mov
es
jne
jae
add
fwait
or
std
jp
ret
push
insb
shll
jo
mov
xchg
inc
or
lock
das
sub
mov
cmpsb
adc
iret
nop
pop
xchg
xor
mov
or
int3
dec
sahf
mov
arpl
dec
je
scas
inc
inc
dec
jne
cmp
xchg
rorl
dec
in
sbb
fucomp
int
sbb
shlb
push
rorl
imul
jae
data16
mov
add
loope
pop
pop
fistpll
jmp
negl
mov
call
mov
mov
cmp
movl
ja
xchg
xor
mov
pop
adc
mov
dec
ss
xchg
mov
outsl
into
outsl
inc
lds
mov
jmp
xchg
cmp
or
icebp
ret
fnstenv
dec
sti
cltd
mov
jmp
or
mov
cmpsl
or
pop
cmp
roll
jge
adc
call
scas
mov
not
out
aam
add
cmp
aad
sub
into
movl
loope
mov
or
int
and
sbb
mov
jl
imulb
lds
scas
push
sbb
xor
pusha
ljmp
push
shl
shr
jp
xlat
xor
mov
mov
out
repnz
jmp
ljmp
cmp
test
sbb
das
xor
xchg
arpl
stc
mov
jbe
cmp
sub
pop
mov
insb
pop
andl
jmp
fwait
mov
push
cmp
rcrl
pusha
fimuls
cmp
sbb
mov
test
mov
mov
adc
push
mov
adc
cmpsl
cmpsb
or
nop
fwait
dec
dec
test
ljmp
mov
mov
pop
mov
jmp
call
loope
mov
lret
mov
mov
data16
inc
mov
or
popa
pop
xchg
xor
aas
push
insl
mov
es
or
pop
sbb
mov
push
inc
arpl
mov
xchg
scas
ficoml
addr16
sbb
icebp
es
pop
subb
into
pop
pop
sbb
ret
xchg
or
iret
hlt
xchg
mov
and
adc
or
push
test
xor
and
pusha
pop
jmp
lods
je
mov
lahf
loopne
aam
sbb
mov
ja
addr16
cmp
outsb
test
sbb
mov
aad
xchg
lods
mov
dec
jnp
imul
mov
jno
cltd
push
xor
mov
or
stos
xor
bound
ret
std
ds
or
nop
scas
sub
jg
ljmp
loop
inc
cwtl
pop
xor
add
out
lret
bound
jp
hlt
xchg
lods
jmp
in
pop
cmpl
subl
pop
xchg
adc
insb
shll
pop
dec
mov
mov
dec
pop
out
fidivs
push
lret
jb
sub
repz
aas
ss
clc
lea
or
jge
jo
lcall
cltd
aaa
dec
mov
imul
or
cmpsb
and
loopne
das
scas
ret
inc
add
testl
daa
sub
lods
cmpsl
cs
adc
mov
lahf
sti
mov
jb
cmp
fsubrl
xchg
rcll
jmp
scas
mov
ficoml
in
jne
inc
lret
pop
fwait
mov
gs
enter
xchg
aam
mov
pop
cmp
gs
dec
cmp
mov
adc
testl
cmp
cmp
pop
mov
adc
and
aas
mov
add
adc
mov
add
mov
cmpsb
ror
and
movsb
mov
popa
out
iret
mov
scas
mov
std
adc
add
arpl
daa
xchg
pop
ret
xor
mov
subb
and
jg
inc
dec
lret
jno
repz
fstp
sbb
mov
out
mov
popf
cwtl
push
call
lahf
imul
insl
mov
movsl
sbb
pop
bound
dec
push
ret
stos
fcoms
push
cmpsb
xor
xchg
mov
addr16
int
sbb
pop
inc
jns
lret
jnp
add
loopne
jb
lea
sub
push
aam
push
push
sub
inc
icebp
stos
xor
enter
mov
insl
inc
sbb
jne
andb
jle
lods
jl
xor
mov
pop
pop
lcall
and
cmp
cmp
mov
adc
mov
faddl
or
popa
pushl
or
dec
xor
jne
rcrb
jmp
pop
cld
push
mov
pop
aam
scas
cltd
aam
sbb
out
es
inc
adc
xchg
push
mov
mov
jl
std
mov
es
es
push
push
inc
inc
jp
inc
or
imul
movl
mov
xchg
cmp
add
movsb
sub
popf
jge
sti
sbb
cmpl
inc
mov
sahf
sbb
sub
outsl
mov
repnz
or
fiadds
dec
push
add
dec
aam
data16
dec
es
mov
jno
pop
mov
jns
mov
pop
sub
xchg
xchg
mov
movsl
mov
and
jp
pop
dec
adc
repnz
jmp
imul
dec
inc
out
mov
pusha
je
pop
jl
mov
push
adc
and
xchg
inc
pop
test
sbb
int
notb
push
sbb
mov
clc
and
push
rorl
iret
push
jl
fwait
inc
sbb
mov
clc
xor
inc
jecxz
cmp
pop
lods
mov
div
test
mov
dec
nop
rorl
xor
sub
lret
mov
inc
jmp
sbb
mov
pop
adc
sbb
mov
dec
add
adc
mov
or
sbb
testl
sub
xchg
aam
adcl
int
dec
mov
arpl
stc
push
shlb
xor
jmp
jns
mov
and
icebp
insl
mov
loope
or
testl
add
jecxz
push
test
outsb
mov
test
sbb
or
jp
sbb
pop
daa
pop
fistpll
mov
push
pop
mov
lret
and
mov
int3
int
je
je
push
js
adc
test
popf
rcr
jp
ljmp
and
pop
mov
mov
sub
jb
cld
add
push
or
stc
push
dec
push
adc
dec
add
xchg
in
cmpb
pop
push
jnp
ficompl
mov
cs
and
xlat
cmp
aas
jne
cmp
into
xor
push
jb
lahf
aam
mov
lods
int
imul
add
push
pop
add
inc
dec
dec
xor
adc
mov
mov
std
jecxz
xchg
scas
enter
gs
iret
inc
lods
sbb
sbb
lret
hlt
rcll
sti
icebp
std
xor
mov
lret
repnz
popf
lods
es
jmp
je
cmc
lcall
and
push
gs
fs
mov
mov
lds
mov
dec
mov
jne
mov
xlat
jmp
out
in
lods
mov
add
dec
pop
jno
pop
ds
ret
lods
or
sbb
fisubrs
pop
fs
andb
adc
lret
xchg
jo
sub
dec
in
pop
xchg
dec
cmp
sbb
sub
lahf
inc
stos
add
lret
jmp
fabs
imul
cmp
repnz
in
sbb
clc
dec
inc
jmp
lret
jle
push
js
jae
jnp
pop
pop
xor
outsb
jp
loope
call
sarl
ds
in
mov
sar
sub
cmpsl
stos
in
push
and
ljmp
lea
mov
cmp
dec
rol
or
ret
xor
mov
xor
mov
test
and
pop
or
mov
sub
out
inc
ds
or
stos
sub
mov
push
or
pop
pop
out
mov
add
dec
or
mov
lods
mov
and
mov
pusha
das
insb
xor
fsubrs
test
mov
aas
test
xor
mov
movsb
in
ja
mov
loopne
fstps
sub
pop
xor
pop
test
push
sub
lcall
cmc
dec
xchg
js
pop
xchg
pop
lods
aas
inc
shlb
fists
in
pop
outsl
xor
jle
push
int
lods
aas
cmp
adc
mov
and
cmpl
xor
icebp
lahf
in
fsubl
test
addr16
mov
cmc
push
inc
nop
and
cli
hlt
rorl
inc
sbb
sahf
lret
xor
push
les
popf
iret
mov
jge
vmovntdq
dec
nop
mov
fbstp
scas
xchg
mov
pop
cmpsl
dec
cmc
in
addl
ljmp
sbb
mov
andl
mov
mov
fnstsw
rcrb
mov
jg
push
inc
into
adc
out
mov
jl
mov
jns
inc
out
out
sub
xchg
add
lock
out
lds
out
mov
jno
mov
ja
mov
out
stos
fmul
cwtl
or
icebp
mov
lahf
inc
or
filds
bound
mov
ret
sub
push
sbb
and
xlat
mov
pop
aad
add
mov
sti
inc
xchg
aad
or
xchg
shll
ss
xchg
and
aad
es
movsl
inc
mov
jp
or
loop
xchg
dec
int3
cmp
mov
mov
sbb
hlt
push
push
rcrl
popf
dec
loopne
stos
out
pusha
leave
aaa
push
mov
fidivrs
push
push
or
xor
or
xor
out
mov
add
js
pop
popa
jle
insb
jge,pn
int
sbbb
pop
bound
mov
out
mov
dec
add
push
frstor
jmp
cmp
mov
cmpsb
and
xor
add
mov
dec
lds
and
clc
mov
movsb
mov
outsb
jl
cmp
dec
jg
fidivl
add
nop
out
rorb
push
cmp
xor
adcb
outsb
subl
imul
nop
adc
pop
mov
cmp
es
and
xor
xchg
xchg
mov
pop
sahf
cli
and
ret
jns
xchg
in
sbbl
sbb
cmp
mov
mov
cmp
lea
push
es
pop
push
cmp
dec
xchg
add
std
cmp
or
jno
xor
je
mov
and
mov
or
pop
fsubl
and
dec
aaa
mov
das
stos
pop
sbb
xor
sub
push
mov
mov
lods
repnz
xchg
dec
loop
into
and
push
pushf
mov
sti
inc
mov
and
outsl
sub
and
jmp
hlt
mov
fistl
dec
xchg
and
stos
outsb
pop
jns
sbb
or
add
into
sub
dec
mov
mov
loope
aaa
adc
lahf
insb
cs
xor
adc
add
sbb
sar
and
and
pop
addr16
cmpsl
lods
sub
inc
pop
add
push
sbb
daa
sbb
sub
sub
mov
pop
adc
cmp
sub
xor
cmpsl
rol
and
fnstsw
pop
repnz
add
push
pop
es
mov
add
pop
push
std
das
bound
outsl
adc
out
add
pop
xor
andb
mov
call
test
sub
mov
mov
in
out
mov
lds
mov
pop
inc
fnstcw
fdivrl
hlt
imul
in
js
jo
and
mov
mov
dec
or
sbb
insl
xchg
sbb
in
out
add
cmp
test
and
fadd
adc
iret
and
mov
lcall
popa
xor
add
test
insl
xchg
lret
cmp
adc
fcompl
pop
ds
sbb
repnz
mov
out
cmp
shll
lods
mov
repz
mov
dec
mov
pop
out
pop
sahf
in
mov
adc
jl
mov
js
adc
mov
in
nop
fwait
pop
jge
or
mov
cli
push
and
shrl
gs
cltd
sub
xchg
and
addl
hlt
push
lret
icebp
pop
and
and
les
xor
ss
dec
cmpsl
std
mov
mov
inc
in
movsl
and
mov
push
fsubl
pop
push
subb
stos
rolb
shlb
adc
mov
out
xlat
inc
dec
sbb
jecxz
xchg
iret
sbb
dec
add
or
pushf
ss
dec
fnstcw
mov
adc
cmp
mov
inc
insb
cli
mov
cli
das
push
sbb
pop
xchg
add
movsl
jmp
addr16
adc
gs
mov
es
jge
test
pop
or
js
xlat
sub
icebp
cmc
outsl
sbb
xorb
and
pop
adc
xchg
test
adc
xchg
xchg
xchg
push
hlt
in
sub
adc
adc
pushf
xchg
sub
cli
push
rcrl
xchg
gs
aad
inc
xor
fs
dec
push
adc
and
lcall
out
aam
xchg
mov
mov
fdivl
je
fadds
sahf
insl
jno
addr16
lret
cmp
jg
push
inc
or
test
mov
cmp
pop
sub
mov
jns
add
dec
test
mov
ror
mov
bound
arpl
and
jle
movl
cmp
and
mov
or
dec
pop
out
cmp
push
fistpl
gs
mov
popf
cltd
sub
add
mov
movsb
or
and
jnp
sbb
dec
push
push
add
into
stc
loop
jp
pop
mov
lock
mov
xor
in
mov
mov
sti
jno
cmp
adc
push
stos
jns
lcall
mov
daa
and
jne
xchg
jae
test
add
js
and
mov
outsl
scas
inc
push
loopne
xlat
or
stos
aas
loopne
mov
pop
lods
hlt
jbe
cmp
xchg
insl
int
cmp
pop
dec
sub
int3
fucomip
xchg
test
mov
dec
adc
test
pop
mov
out
dec
fs
mov
es
jne
sub
push
popa
icebp
fstpl
mov
inc
aam
popf
xchg
pop
mov
xor
cbtw
xchg
lods
mov
in
jb
inc
ficoms
insl
leave
jo
inc
scas
movsl
sub
mov
cmp
inc
mov
test
shrl
das
rcr
push
xor
or
rcll
scas
test
push
or
jle
frstor
inc
mov
jne
mov
out
sub
push
add
aam
add
add
push
sub
inc
and
and
cwtl
in
test
push
mov
out
in
mov
mov
into
jbe
pop
cmc
leave
and
mov
jne
push
dec
sbb
push
pushf
mov
inc
sub
lods
pusha
or
fisubrs
iret
jmp
pushf
cli
jbe
mov
out
gs
stos
push
inc
cld
out
jbe
inc
addr16
pop
xlat
inc
or
push
cltd
movntq
pop
sub
and
cli
adc
out
inc
mov
mov
pushf
xchg
xor
and
and
adc
shll
mov
xchg
lret
fildll
test
faddl
sub
dec
jle
jno
adc
cmpsl
pop
fs
imul
add
dec
pop
sbb
add
jno
fisttps
add
xor
lcall
imul
sahf
push
pop
add
inc
cmc
add
add
xchg
orb
cli
cmp
sbb
cltd
idivl
pop
loopne
and
lods
loope
jmp
jmp
test
inc
adc
xchg
xchg
cli
sbb
aaa
inc
js
dec
frstor
pusha
mov
dec
ds
out
mov
mov
push
lods
mov
aam
aad
xor
xor
push
or
inc
in
push
adc
gs
out
outsl
xchg
inc
xchg
pushf
imul
pushf
imul
icebp
je
xchg
mulb
xchg
movsl
xor
clc
sti
pop
or
mov
push
clc
loopne
mov
inc
sbb
jge
push
push
sti
jecxz
pop
adc
or
add
pop
scas
pushf
push
adc
push
xchg
jecxz
repnz
xchg
add
fcomip
popf
mov
push
aas
int
imul
sti
add
daa
scas
daa
addb
push
sbb
xor
dec
or
sbbb
out
test
cld
cmp
xor
mov
arpl
test
xor
les
das
xchg
xchg
popf
mov
and
and
loop
rcll
leave
inc
jns
adc
xor
ljmp
icebp
mov
lret
push
fisubl
shll
push
dec
push
rcrb
out
mov
adc
dec
mov
sbb
shl
pop
fwait
mov
imul
rclb
test
mov
repnz
cmpsl
addl
lods
xchg
je
int
imul
decl
adc
ret
cmp
scas
push
repz
adc
or
pop
or
xchg
ljmp
pop
inc
xor
clc
test
cltd
movaps
sub
fstl
addb
sbb
and
pop
inc
mull
xchg
mov
xchg
xchg
js
test
or
push
addl
mov
and
or
adc
cmp
pop
inc
adc
xor
push
xchg
ja
pop
jnp
scas
jmp
mov
test
sub
out
popa
jle
or
push
cmp
in
lret
ljmp
fldt
test
or
scas
pop
xlat
addr16
notl
add
mov
xchg
ret
les
sbb
xchg
bound
mov
scas
adcb
es
xchg
js
lock
jg
mov
inc
fidivrl
repz
cmpsl
daa
push
pop
inc
inc
mov
pop
sub
inc
inc
ja
loop
dec
int3
movsb
inc
or
xlat
dec
jo
sub
pushf
clc
addr16
cmpb
mov
rcrb
cmp
ljmp
lea
and
test
adc
fmul
pop
gs
sub
shlb
lds
add
push
pop
mov
jo
xchg
movsl
mov
sbb
test
test
lret
ret
jae
xchg
or
sarl
mov
ja
out
clc
and
xchg
bound
pop
push
cmpsb
inc
fdivl
mov
add
pop
adc
inc
xchg
mov
subb
dec
sarb
inc
cmpsb
dec
mov
les
call
dec
insl
jbe
loope
in
or
xchg
stc
scas
xchg
or
push
pop
es
std
jge
dec
mov
jbe
aam
cmp
pop
inc
xor
pop
sub
jle
mov
rorb
cmp
mov
test
in
testl
fwait
je
inc
jo
cmc
roll
add
fnstsw
push
icebp
outsb
pushf
enter
jle
mov
and
std
sbb
sbbb
xor
xor
in
push
sti
jno
sub
xor
mov
add
mov
push
das
pop
xor
mov
int3
jb
lret
jecxz
popa
cmp
in
sbb
xor
hlt
loopne
push
iret
xchg
jecxz
inc
rcrl
mov
lret
cli
cmp
pop
dec
push
ljmp
dec
rol
or
repz
aad
xchg
xor
ret
mov
pop
mov
loopne
in
xchg
mov
mov
arpl
nop
dec
pop
push
rclb
pop
pop
out
ret
sbb
out
leave
dec
fldl
mov
cmp
pop
lods
xor
nop
inc
data16
popa
into
dec
xchg
mov
in
in
xor
shlb
mov
ret
or
cltd
sbb
sbb
push
fsts
insl
pop
cld
outsl
jbe
lock
je
sbb
pusha
cmpsb
stos
jb
repnz
ss
cli
out
xchg
sub
adc
xchg
sbb
inc
shll
lret
sbb
lahf
movsl
cmp
dec
test
nop
inc
sub
dec
sub
mov
nop
cmp
push
mov
dec
outsb
loopw
push
cs
clc
into
into
xchg
push
add
or
inc
sub
mov
jl
rcll
ds
cmpsl
jle
sub
pushf
mov
test
sub
outsb
sub
imull
ljmp
repnz
adcb
dec
xor
push
xor
pop
mov
and
fxch
inc
lahf
enter
xor
sub
orb
orl
adc
jae
jae
enter
add
push
xchg
push
add
pop
cld
xor
or
dec
dec
push
sub
bound
gs
les
and
test
fs
imull
dec
outsb
jp
adc
push
pusha
inc
xor
sbb
or
scas
dec
repz
mov
lcall
sbb
cmp
xor
mov
xchg
cli
push
cmpsl
hlt
xchg
add
jp
fsts
test
shll
inc
cmp
mov
outsl
adc
hlt
js
insl
mov
mov
mov
sub
dec
mov
mov
add
int3
lds
std
pop
jne
int3
cmp
push
mov
ss
lea
aaa
mov
dec
mov
std
jbe
imul
push
sub
scas
stos
mov
or
fcompl
repnz
test
neg
mov
call
movsb
cmc
xchg
jne
lahf
push
xchg
xchg
mov
in
daa
jp
dec
imul
subl
push
add
cmp
fcmovbe
mov
push
pop
xchg
sbb
inc
ljmp
stos
or
aas
mov
adc
pusha
dec
loope
jmp
sbb
dec
and
inc
pop
mov
mov
mov
push
fsubrs
jo
shlb
pop
sbbb
push
sub
adc
mov
xor
daa
ds
addb
fnstcw
inc
sbb
xchg
pop
icebp
pusha
mov
and
outsb
add
xor
fnstcw
xor
mov
insb
sub
es
xchg
lret
in
mov
mov
mov
jno
add
push
popf
jbe
ret
cmp
add
ds
push
cld
inc
fwait
ljmp
lret
mov
mov
lea
xchg
mov
or
add
pop
imul
aam
in
movsl
lods
cmp
pop
jmp
mov
mov
sub
and
jl
aad
in
jno
mov
sub
fsubp
sub
mov
sub
sub
and
decb
movsl
push
int
dec
stos
lahf
leave
xchg
test
xchg
gs
jb
sub
or
sbb
and
in
pushf
mov
ret
sub
daa
cmp
aaa
aad
imul
lea
mov
mov
inc
jmp
lds
add
jae
cs
and
outsb
mov
cltd
aaa
cmp
negb
cmp
add
xchg
cwtl
int
test
adc
lret
jae
pusha
inc
sbb
ffree
cmp
repz
sub
adc
add
add
pop
movsb
movsb
xor
js
cli
mov
mov
and
aad
sub
and
push
daa
add
nop
clc
scas
popf
jecxz
push
out
cmpxchg
pop
iret
fcompl
leave
sbb
sarb
imul
lds
je
xchg
call
loope
adc
pop
mov
pushf
mov
in
pop
out
out
dec
inc
pop
pop
mov
ret
insl
cld
and
fists
popa
jmp
adc
out
push
or
push
cmp
fcmovnbe
or
push
rcrb
je
movsl
lcall
jge
xchg
ficomps
in
vpmadcswd
and
lods
and
push
out
int
or
lcall
xor
lahf
cmp
in
mov
or
jmp
inc
popa
pop
adc
fsubrs
adc
dec
mov
pop
sub
adc
xchg
push
add
pop
cltd
xchg
mov
mov
loope
sbb
cmpsb
xchg
stos
jle
jle
nop
enter
jo
sub
jb
or
add
xchg
dec
sub
mov
mov
push
inc
mov
mov
sahf
sub
dec
sbb
fists
leave
jne
bound
or
ljmp
es
movsb
clc
test
xor
idivl
test
loop
lods
mov
arpl
int
mov
mov
imul
jo
mov
cli
decl
push
subl
je
dec
and
or
or
push
or
ror
xchg
ljmp
and
mov
or
insb
rolb
mov
mov
outsl
cmp
mov
jae
and
es
jns
fs
pop
sub
xor
cmp
sahf
jno
adc
adc
inc
mov
rorl
clc
jmp
movsl
mov
out
pop
cmp
jbe
cmpb
mov
stos
pop
enter
pop
sahf
mov
insl
loopne
xchg
mov
pop
sub
repz
sbb
leave
aas
mov
fbstp
sbb
test
mov
pop
es
xchg
jp
lock
fs
stc
test
or
add
mov
xlat
mov
jne
inc
gs
cmp
pop
shll
and
push
test
dec
iret
into
mov
enter
cltd
shlb
aas
jae
pop
sub
or
rclb
test
cmp
hlt
addr16
fsts
push
lahf
dec
out
fbstp
xchg
mov
adc
adc
and
faddl
xlat
jne
pop
je
sahf
sub
add
mov
icebp
mov
test
lret
fcompl
loope
adc
sbb
test
insb
stos
mov
cmp
mov
add
push
movsb
push
push
mov
enter
inc
cli
lret
xor
cs
mov
daa
mov
les
and
xor
or
inc
shlb
addr16
les
sub
mov
pop
push
lds
movsl
push
test
mov
out
sub
xchg
das
rcrb
mov
mov
add
mov
mov
les
mov
lcall
in
dec
push
nop
xor
ret
call
pop
mov
lea
adc
inc
daa
xchg
fs
pop
popf
jp
fldenv
jne
dec
test
jge
lods
leave
push
add
or
test
test
jnp
mov
and
scas
insl
sbb
mov
mov
cltd
or
xor
ffreep
jmp
cmp
lret
adc
lret
shlb
bound
xchg
or
mov
pusha
test
and
in
pusha
and
cwtl
or
lods
fdivr
sbb
inc
loope
movsl
pop
out
fwait
lret
test
mov
sub
lods
testb
fbld
jnp
rorb
xlat
lods
mov
sub
in
enter
mov
ficompl
loop
in
loope
pusha
rolb
jae
sub
stc
mov
sbb
push
or
pop
push
adc
test
sub
jbe
mov
cmp
das
ja
dec
and
mov
fcmovne
stos
fistpl
repnz
ret
push
aas
mov
sub
lahf
push
inc
cltd
jae
mov
mov
mov
cltd
fsubrl
movsl
shr
loope
lds
aaa
cltd
imul
push
mov
ret
jno
lods
dec
xchg
leave
cwtl
inc
push
lds
sub
sbb
outsb
and
add
push
mov
cmpsb
fstps
icebp
and
lahf
outsb
call
testl
movsl
or
sub
aaa
mov
test
lods
jnp
adc
lret
jns
jbe
mov
cli
push
insl
mov
addb
loope
jecxz
nop
rcl
or
testl
sahf
add
mov
cmp
mov
mov
pop
imul
fisttpll
sub
mov
push
sarb
cmp
arpl
xchg
mov
mov
xchg
sbb
xchg
xchg
jo
roll
cmp
cli
jno
pushf
dec
jb
xchg
cld
pop
dec
test
pop
or
scas
lret
push
loop
sbbl
and
and
inc
adc
adc
push
xchg
ja
jmp
test
data16
jmp
lret
xchg
cmp
arpl
in
lret
lea
aad
dec
dec
adc
pop
fdivr
cs
punpckhbw
jo
test
int
push
dec
dec
cwtl
cli
scas
mov
fwait
insl
loop
cmpsl
cmc
sbb
test
vpcmpgtb
sbb
clc
bound
dec
andb
cmp
imul
cli
fdivrp
jg
ret
and
add
sti
fmul
push
jle
pop
aas
gs
stos
imul
inc
into
stc
adc
mov
mov
pop
cmp
mov
xorl
xor
mov
sbb
sbb
cmp
mov
mov
pop
mov
push
xchg
xor
jns
sbb
popf
or
push
push
inc
ss
push
cwtl
mov
aas
jmp
in
arpl
cmc
push
push
push
scas
adc
or
loope
popa
or
cmc
ljmp
mov
test
iret
jp
lahf
xchg
pop
fstl
jecxz
cmpl
mov
push
mov
pushf
pop
pop
movsb
and
jge
push
test
mov
shr
insb
xlat
lods
lock
xor
lds
ret
lcall
and
imul
call
mov
inc
cmp
mov
hlt
pop
ja
pusha
iret
mov
insb
scas
mov
sub
push
add
inc
mov
xchg
push
fadds
sub
shlb
add
and
bound
enter
iret
push
lds
jl
push
mov
pop
xlat
std
loopne
outsb
or
sti
scas
filds
lret
ficompl
xor
repnz
pop
and
xor
dec
inc
mov
stos
mov
pop
cmp
divb
jl
adc
mov
xorl
xor
and
scas
xchg
cmc
rcll
lds
xchg
not
sbb
and
aad
cmc
roll
in
in
mov
xor
lds
out
adcl
das
hlt
dec
jmp
cltd
sbbb
rclb
mov
rcrl
adcl
xchg
imul
jg
jne
shll
outsb
mov
jmp
inc
rorb
sbbl
pusha
leave
sub
mov
dec
sbbl
fwait
adc
ljmp
push
pop
and
jg
jbe
imul
pusha
mov
pop
cmp
aas
scas
lahf
fisubs
sbb
add
sbb
imul
repz
clc
push
fsts
mov
sbb
fidivs
movsb
les
ljmp
dec
out
mov
sbb
mov
jmp
adc
fcomi
bound
and
sbb
pop
xlat
pop
dec
add
xor
mov
into
mov
shlb
js
xor
mov
and
daa
add
inc
scas
sub
jg
mov
inc
cwtl
fadds
aad
in
into
cmpsl
and
push
stc
push
push
outsl
adc
xchg
mov
cmc
pushf
and
jne
jge
ss
push
push
mov
stos
push
xchg
and
lcall
popa
and
test
scas
repnz
psrlw
mov
xchg
insb
push
xchg
xchg
jne
in
sbb
fwait
adc
movb
jne
push
dec
cmp
nop
add
lret
sbb
fildl
xchg
mov
jno
jbe
pop
mov
test
lods
xchg
pop
loopne
iret
adcl
adc
adc
mov
cmp
mov
in
nop
das
call
cmp
test
or
pop
insl
pop
sub
int3
jb
xor
dec
mov
and
adc
lock
fimuls
enter
gs
mov
sub
lea
pop
inc
daa
mov
pusha
pop
out
shrl
sbb
mul
cwtl
sahf
in
ljmp
into
in
shlb
mov
mov
cmp
mov
out
ljmp
adc
pop
jo
cmp
fistpll
repz
mov
ret
lds
orl
xor
mov
popf
and
sub
addr16
rcrl
iret
test
push
sub
popf
cmp
mov
daa
push
pop
ret
int
sub
add
xchg
int
test
testb
xchg
popa
and
loopne
test
lods
dec
xor
cld
rcll
enter
ret
imul
mov
test
xchg
ja
add
adc
dec
mov
cmc
jbe
stc
push
or
mov
pop
outsb
enter
cld
push
imul
popa
mov
push
adc
and
addr16
aam
xlat
xor
push
fcoms
mov
pop
xlat
mov
sahf
or
popa
cs
test
push
popa
xor
test
es
ret
and
push
adc
in
bound
mov
and
push
movsl
sbb
dec
gs
pop
daa
rorl
jg
insb
arpl
loopne
clc
sub
inc
scas
cs
add
pop
out
clc
push
xor
jp
mov
jns
sbb
pop
cmpb
sbb
mov
fldl
mov
jge
in
test
jl
shl
clc
xor
and
imul
pusha
adc
sbb
push
xchg
or
add
mov
aas
and
pusha
add
inc
xchg
push
cmp
addb
movsb
dec
xchg
inc
cmpsb
mov
or
pop
dec
scas
mov
or
dec
js
mov
push
and
arpl
jne
shr
movsb
in
and
inc
add
adc
cmpsl
mov
inc
mov
or
inc
ret
in
clc
in
cwtl
pushf
and
dec
pop
mov
mov
mov
push
xor
repz
outsl
mov
pusha
add
push
aam
lock
sbb
pop
push
pop
jge
nop
outsb
push
lods
in
sub
and
repz
loopne
push
inc
pop
in
aad
es
sbb
sbb
test
imul
call
jmp
push
pusha
nop
mov
xor
orl
or
mov
pop
adc
push
pop
mov
push
sti
cli
ret
cmp
and
insb
mov
xor
lcall
pop
dec
cmp
rorb
xor
add
cmc
push
neg
dec
stos
sub
adc
pop
or
sti
mov
cmp
dec
xor
push
insl
and
mov
xchg
or
and
clc
es
jb
xchg
sbb
orl
cli
pusha
jbe
jnp
dec
xor
and
repz
jnp
cmp
stos
outsb
sbb
xchg
cmc
xorl
xchg
add
iret
insb
cld
jg
or
mov
pop
inc
fcomps
sub
mov
cmpsb
lret
in
sbb
jle
hlt
jge
scas
sub
jae
je
gs
cs
outsl
dec
cs
sub
mov
fimuls
out
cmp
mov
push
imul
pop
push
pop
pop
jmp
and
xchg
mov
xchg
add
pop
aam
test
push
sbb
movsl
or
jmp
jb
inc
movsb
and
cmp
int3
jno
sbb
int3
daa
das
out
push
in
pop
add
das
sub
jmp
aam
xor
lock
pop
lods
dec
jge
dec
mov
xor
or
stos
jmp
mov
mov
pushf
fadds
popa
inc
cmp
ja
imul
pop
jmp
push
inc
mov
inc
add
adc
enter
sarl
mov
mov
stos
shlb
cmpsl
ret
insb
xor
add
in
xchg
sub
and
mov
hlt
negb
mov
and
enter
cmp
bound
std
loope
pushf
jmp
add
in
outsb
inc
xchg
xor
add
loop
cli
jmp
test
ds
jmp
bound
mov
inc
shrb
pop
mov
outsl
mov
pop
fbstp
jno
in
stos
mov
adc
mov
sub
test
push
pop
mov
popf
cmp
data16
in
mov
rorb
push
pusha
mov
lds
inc
es
push
sbb
addl
lea
sub
dec
mov
jno
mov
adc
aas
mov
dec
imul
fldl
xor
sub
jmp
inc
fcomip
out
aaa
add
scas
mov
mov
add
mov
lea
pop
fwait
cmovp
cmp
ja
jg
out
lea
pusha
rclb
out
cmp
rcrb
or
mov
xor
shlb
push
inc
in
sub
xchg
idiv
mov
fsubs
mov
pop
jp
mov
mov
jmp
inc
inc
icebp
insb
fwait
scas
roll
or
out
test
xchg
push
dec
dec
mov
inc
add
inc
lds
add
stos
pushf
sbb
xor
mov
add
mov
sbb
pop
pop
notl
dec
fistl
jge
aad
mov
les
cld
sub
mov
js
divb
dec
stos
mov
sbb
ret
push
xchg
mov
mov
jns
cmp
hlt
and
out
loop
sub
cmpl
inc
call
or
in
aaa
clc
fs
inc
jecxz
inc
ja
std
scas
fldl
mov
mov
mov
mov
pop
adc
mov
cli
cmp
lret
fcoml
push
insb
adcb
fcoms
xchg
hlt
jp
inc
lcall
mov
xlat
cmpsl
insl
sub
in
xlat
pop
pop
cltd
inc
ja
xor
mov
jmp
mov
or
inc
jne
repz
adc
ljmp
iret
xor
mov
gs
push
rorl
mov
test
jo
les
lret
sbb
sbb
jg
enter
xor
sub
mov
repnz
cmp
xor
jmp
and
gs
sahf
push
dec
sub
add
inc
clc
pop
iret
shll
andl
inc
xchg
test
jbe
aas
and
loop
out
mov
out
sub
cmp
cmp
mov
sbb
dec
mov
mov
rorb
mov
pop
sub
es
ds
sbbb
or
addr16
in
lcall
fcomip
in
cmpsl
incl
mov
out
fmul
ss
aas
cmpb
add
jns
cmp
push
jbe
aad
divl
push
loopne
repnz
xor
mov
jae
rorb
add
jns
adc
xor
sbb
out
lahf
inc
mov
cmp
mov
mov
jns
cmp
fiadds
insl
rcr
filds
jnp
xlat
rep
push
stos
hlt
nop
aaa
and
aam
mov
outsl
mov
and
das
push
enter
roll
cli
jns
stos
mov
into
les
mov
movsl
test
movq
mov
sub
inc
ss
filds
bound
and
xor
dec
adc
pop
paddusw
dec
fmuls
fwait
sub
jb
inc
imul
xor
xchg
sub
mov
xlat
and
push
jno
pusha
loope
loope
jmp
mov
dec
rorl
mov
es
notb
add
in
int3
imul
mov
sub
adc
adc
aam
jbe
xchg
add
xchg
les
repnz
cli
cmc
fwait
ljmp
push
outsl
fmul
inc
push
insl
or
and
out
mov
imul
bsr
mov
pop
int3
jle
dec
cmp
loope
dec
das
sbb
cmc
inc
out
xor
mov
pop
movsb
lea
push
popl
mov
adc
icebp
inc
push
sub
xchg
cmpsb
cld
fldl
movsl
mov
outsb
adc
aad
sbb
adc
pop
sbbb
nop
inc
data16
mov
add
mov
dec
es
les
add
cmp
pushf
lods
shl
fcmovnbe
pop
sub
mov
dec
dec
std
xchg
inc
mov
movsl
jne
stos
or
sub
lea
or
or
sbb
pop
xchg
out
enter
inc
push
out
jmp
xchg
xor
xor
sub
ja
or
fsts
and
mov
adc
jmp
call
cmc
fistpll
jmp
fsts
cwtl
mov
adc
imul
lret
mov
push
dec
out
adc
add
add
outsl
xchg
rcl
dec
push
jb
pop
add
xor
nop
sub
mov
das
rorb
cmp
leave
add
xchg
cmc
shll
mov
adc
pushf
das
sbb
stc
fidivs
jecxz
int3
cmc
sbb
aam
xchg
sub
jnp
out
cmp
jp
lock
popf
addr16
jns
ret
sub
adc
sbb
dec
mov
adc
sbb
mov
xor
enter
push
mov
xor
inc
loope
fnstsw
das
rcl
test
jnp
jl
je
aad
inc
or
xchg
jge
xor
pop
lcall
pop
ret
icebp
and
pop
pusha
shll
adc
jp
push
push
es
sbb
inc
push
jmp
inc
jae
in
add
loopne
add
jns
in
mov
lds
mov
inc
adcb
sbb
dec
jg
lcall
or
out
jp
int
dec
les
inc
pop
jmp
mov
sub
adc
mov
fwait
iret
jnp
push
jmp
adc
mov
sbb
cs
mov
mov
mov
scas
pop
ljmp
shl
lock
cwtl
add
mov
add
add
xor
sub
dec
out
add
and
aad
xchg
cmp
aam
push
movsl
mov
stc
popf
sub
adc
xchg
add
jecxz
add
cmovp
mov
pop
adc
dec
xchg
inc
lods
mov
int
add
pop
das
and
sbb
xor
sbb
pop
jns
incl
add
sti
in
outsb
mov
loope
push
sub
popf
jnp
or
push
jnp
cmc
cmp
push
inc
mov
push
pop
cmc
cmp
mov
sbb
pop
lods
mov
add
ss
mov
cmp
cmp
mov
rcr
rcrl
add
mov
js
push
enter
mov
jle
sbb
ja
xchg
out
sbb
sbb
mov
pop
mov
int3
mov
addr16
je
push
out
mov
or
lahf
xchg
and
aam
xor
jo
xlat
shl
jno
push
adc
out
mov
enter
mov
inc
aam
hlt
mov
adc
mov
xlat
mov
hlt
mov
pop
cld
cmp
sbb
jne
xchg
mov
iret
call
mov
pop
inc
fstpt
rorl
les
pop
jbe
ret
hlt
xchg
lods
sub
jle
cs
mov
mov
enter
pop
mov
push
out
mov
adcl
sub
cs
mov
mov
test
es
jno
push
mov
sbb
push
jnp
insb
mov
pusha
mov
jo
mov
push
jge
xchg
jnp
lock
sub
ss
aas
cmp
cli
push
mov
mov
fwait
leave
mov
ret
and
lods
leave
inc
adc
and
pushl
fistpll
jns
mov
xchg
fildl
xchg
mov
aad
notb
add
push
fmuls
mov
mov
push
stos
jne
pop
xlat
fildl
repnz
ja
sbb
scas
push
mov
repz
lods
pop
jl
iret
mov
movsl
std
insb
sub
mov
mov
std
xor
fcom
mov
jae
lods
mov
mov
pop
mov
aam
insl
mov
bound
testb
aad
dec
cmp
dec
mov
jns
push
adc
arpl
and
mov
aad
mov
frstor
shl
dec
inc
jnp
jge
inc
mov
inc
imul
f2xm1
imul
adc
mov
pop
push
or
jno
jns
icebp
and
xor
cmpsl
and
inc
lock
pop
sub
push
or
cmp
jmp
jae
jmp
movb
lods
popf
fwait
pop
or
mov
lahf
mov
xchg
out
xchg
fistps
sbb
add
popa
push
xchg
outsl
xor
dec
mov
insb
shll
jns
loope
test
inc
xlat
rcrb
shll
push
sub
mov
orb
mov
das
and
aaa
adc
icebp
lods
add
inc
inc
fimull
mov
or
sub
xchg
adc
jns
addl
clc
mov
push
mov
and
mov
push
fmull
data16
int3
inc
pop
cmp
xchg
xchg
mov
loop
jno
pop
inc
mov
pop
enter
cmpsb
sub
in
loop
das
fsts
xchg
shlb
jle
pop
sub
mov
xor
andb
das
test
jl
add
jae
rorl
pusha
mov
ljmp
cmp
fmulp
pusha
sti
out
sbb
cmc
inc
roll
jl
sbb
pop
cmp
lret
fucom
cmp
das
out
cmpsb
pop
enter
fnstcw
mov
mov
jnp
or
sti
pushf
pop
fistpll
fcmovnbe
or
stos
cmp
and
push
mov
xor
cmp
dec
test
mov
mov
inc
test
flds
mov
into
mov
aam
jp
jmp
in
pop
or
sub
sbb
cmc
cwtl
pop
ret
add
pop
mov
dec
push
in
jmp
pop
push
cwtl
mov
sub
mov
adc
movl
outsl
xchg
pop
in
adc
dec
jbe
push
or
inc
sbb
testb
mov
das
lret
add
aad
data16
inc
jae
cltd
aas
mov
mov
sub
cs
xlat
out
arpl
stc
inc
cmp
sbb
mov
out
push
add
cli
sub
orps
into
daa
mov
insl
ljmp
push
test
prefetch
or
xchg
add
pop
gs
jo
pop
mov
and
icebp
xchg
pop
and
mov
js
popl
out
neg
lret
mov
push
sbb
pop
rol
jbe
fsubr
nop
aad
or
mov
arpl
xor
sbbb
pop
shl
or
xchg
mov
pushf
imul
add
mov
pop
subb
push
pop
pop
stos
loope
leave
adc
popa
or
cmc
cmpsb
je
dec
pop
es
inc
mov
jbe
loopne
negb
mov
cmp
fs
daa
and
decl
add
lahf
pushf
sbb
mov
test
iret
subl
sub
mov
add
add
xchg
jmp
ds
push
insb
ja
movsb
mov
jmp
repz
jnp
and
imul
inc
int
mov
addr16
mov
mov
insl
das
sub
cmpl
out
sub
xchg
dec
push
sub
cmp
xchg
data16
out
push
push
push
cmp
xchg
add
mov
fwait
imul
jmp
pop
std
sbbl
dec
mulb
xchg
hlt
inc
jecxz
inc
lods
cltd
sub
test
movl
push
pop
inc
mov
lret
and
push
and
sbb
fisubl
sub
jne
imul
cmpb
dec
out
imul
pop
divb
add
lret
xor
xor
leave
sahf
mov
insb
out
xchg
push
mov
cmpsb
leave
dec
fnstsw
and
repz
in
push
ja
sti
cmp
push
push
lods
mov
push
lods
je
dec
fwait
xchg
pop
mov
sbb
xchg
jl
jge
jo
fs
pop
push
gs
stc
or
in
push
out
mov
jl
jno
adc
hlt
mov
push
sub
shlb
pop
daa
mov
daa
sbb
mov
cmpl
xor
rorb
cmc
adc
ss
and
cs
cmp
mov
fmull
mov
cmp
xchg
adc
pop
jne
mov
pop
popf
icebp
mov
push
popa
aaa
js
push
inc
jle
or
xor
or
mov
xor
pop
or
idivl
addr16
mov
leave
int3
lret
ja
jl
fisubs
shll
loope
add
adc
mov
xchg
push
pop
dec
mov
std
mov
adc
ja
inc
mov
pop
insb
inc
jg
in
loopne
xor
movsb
and
sbb
mov
repnz
xchg
mov
and
aad
enter
insb
adc
dec
sbb
inc
xlat
leave
adc
pop
roll
mov
or
mov
xchg
pop
cmc
hlt
dec
push
pop
mov
fdivrs
or
add
mov
imul
cmp
pop
xchg
mov
orb
aas
outsb
xchg
repz
fwait
pop
sbb
movsl
jmp
cmc
xor
outsl
repnz
pop
cmp
daa
xor
popf
xchg
std
jp
xchg
add
sbbl
lods
dec
mov
in
and
jno
jbe
ds
les
rorl
jl
dec
mov
test
and
inc
dec
inc
test
lcall
mov
insb
bound
push
ljmp
or
aaa
test
inc
fcmovbe
cmpsl
and
out
pop
test
sub
dec
icebp
inc
mov
aas
xor
mov
cwtl
outsb
and
in
xchg
test
xchg
cli
outsl
addr16
jp
xchg
and
dec
inc
sub
xor
test
xchg
fld
cmp
mov
push
jbe
jp
mov
enter
in
sti
loop
addr16
test
pop
cmc
aas
push
mov
shl
push
xchg
sub
inc
mov
imul
call
and
dec
adc
ss
leave
insl
xor
pop
psllq
movsb
mov
test
dec
fs
push
rorl
leave
iret
and
into
icebp
loop
clc
js
add
jge
out
movsb
notb
mov
xchg
mov
inc
pushf
cmp
lret
mov
sub
add
push
in
jp
inc
mov
jns
mov
mov
icebp
xor
arpl
jae
loop
dec
loopne
mov
mov
int3
or
sub
push
push
sbb
in
js
sbb
push
jo
or
cs
xchg
pop
into
shlb
cmpl
or
xor
push
fstpl
das
add
pushf
mov
test
lock
or
push
cltd
fcomps
arpl
sub
jo
jnp
dec
dec
aaa
push
insl
jmp
dec
xchg
mov
sahf
test
cmp
pop
and
mov
les
sbb
loope
push
xchg
popf
inc
push
bound
popa
insb
add
lods
mov
mov
push
cli
call
mov
or
cli
cli
sub
pop
mov
adc
icebp
xor
je
mov
jno
push
adc
ds
cmp
hlt
dec
add
and
mov
lahf
ds
out
or
daa
or
dec
or
and
inc
xlat
cmp
lahf
jbe
sub
mov
stos
cli
xor
leave
addl
ja
loopne
out
jp
push
scas
pop
rorb
popa
jg
in
mov
loop
mov
jae
add
pop
adc
xchg
fmuls
jmp
loop
ljmp
xor
push
popl
or
popa
into
or
dec
outsb
mov
test
adc
les
mov
xchg
aad
dec
bound
std
inc
jbe
cmp
enter
mov
out
pop
cmp
orl
rclb
aam
fsubl
and
push
loopne
add
sbb
fcoms
dec
push
in
fldcw
mov
pop
push
mov
adc
mov
and
jecxz
shlb
subl
adc
and
pop
jne
shlb
adc
minps
bound
push
sarb
push
sbb
icebp
lea
outsb
and
mov
mov
movsb
xlat
xchg
xchg
out
ja
scas
dec
in
ret
push
imul
mov
pop
xor
icebp
mov
xor
sbb
mov
test
subl
inc
rolb
je
mov
icebp
pop
xchg
aaa
push
adc
sar
sbb
lods
sbb
mov
xor
mov
add
xchg
cmp
pushl
jno
cmp
jne
jne
out
es
popf
repz
and
fldt
in
mov
inc
jns
mov
scas
sbb
nop
push
adc
pop
leave
inc
int
sub
pop
addr16
dec
sub
movsb
sbb
sub
dec
push
mov
mov
mov
jbe
xchg
jns
fwait
repnz
jnp
or
cmp
jle
in
gs
mov
outsl
dec
aas
add
popf
add
inc
test
jne
mov
sub
push
push
hlt
jmp
and
push
leave
aas
rcrl
in
test
jnp
scas
frstor
push
adc
mov
ret
pop
lret
insl
xchg
jp
filds
add
jle
je
add
adc
or
arpl
test
dec
mov
mov
jmp
adc
dec
outsb
xor
cmc
or
push
push
lods
cmpsl
mov
icebp
inc
arpl
cltd
subb
in
lret
inc
xlat
push
xchg
add
dec
push
test
vpmadcswd
call
ds
pop
push
popa
cs
fs
pop
insb
push
xor
xor
js
xchg
xor
jl
sarl
pushf
xlat
rclb
bound
inc
popf
cmp
or
cmp
test
jno
jns
rorl
imulb
lret
and
stc
cmpsl
mov
cmp
scas
call
add
mov
movsb
push
fwait
push
cmp
add
fs
sbb
cmpsl
ret
jno
popf
shrl
xor
clc
and
add
jmp
lcall
cmpb
sub
mov
loope
inc
repnz
shlb
inc
inc
test
adc
jo
dec
movsb
mov
inc
addr16
mov
je
adcb
in
mov
dec
jge
xchg
imul
pop
or
enter
test
adc
in
sarl
inc
in
out
dec
add
out
mov
mov
aad
cmpsl
adc
jnp
cs
lahf
pop
mov
xor
xchg
jecxz
xchg
cmc
shlb
das
loop
cwtl
andb
repnz
shl
in
xlat
out
pop
add
or
addb
idivb
inc
fdivrl
lahf
xchg
push
fnstcw
lret
imul
pushf
and
pop
loope
add
push
pop
in
and
or
in
push
sub
lods
sti
imul
test
inc
inc
sbb
dec
push
inc
dec
sbb
divl
int
jno
sub
mov
push
sbb
push
lods
out
jge
pop
or
fsubrl
mov
fnstcw
lret
incb
add
out
addb
test
xor
mov
jns
imul
inc
jbe
jns
fildl
rorb
sbb
and
xchg
push
push
pop
outsb
cmc
and
dec
roll
and
inc
fcoms
xor
or
ror
fcoms
mov
sbb
lcall
out
mov
fsubr
inc
cwtl
sahf
mov
push
cmc
lret
out
xor
and
add
fiaddl
sbb
icebp
test
fists
mov
cwtl
movsl
stos
push
in
and
and
out
or
insb
cmp
jae
aaa
pop
sub
mov
test
mov
jge
cltd
inc
cmpsb
sti
jb
addb
mov
xchg
fwait
and
test
mov
dec
or
fstpt
mov
fmull
inc
and
and
test
or
idivl
sub
imul
cli
sub
leave
imul
aam
mov
cmp
xchg
aaa
fwait
in
lahf
test
mov
imul
int
mov
pop
inc
pop
rorb
push
jae
fs
ljmp
loop
mov
jmp
mov
mov
mov
add
pop
call
inc
int3
aas
inc
clc
dec
sub
jbe
test
repnz
neg
sub
in
cwtl
rcrl
stc
jl
jo
xor
sub
mov
xor
test
imul
cmp
jb
sahf
push
leave
mov
loopne
pusha
fdivp
pop
popf
push
fdivr
loope
in
sbb
mov
mov
fsubr
imul
and
fcomps
mov
fldcw
push
mov
out
mov
stos
jno
hlt
mov
mov
xchg
sbbb
or
xchg
pop
aaa
pop
cmp
mul
loopne
mov
sbb
sbb
aam
test
rclb
sti
arpl
lods
pop
and
xchg
ss
mov
dec
inc
cmp
mov
push
dec
adc
enter
inc
hlt
mov
pop
sbb
gs
repz
subl
mov
xor
out
pop
inc
sbb
add
mov
mov
and
cltd
into
popa
mov
mov
movb
rclb
add
movsb
lahf
fs
and
fsubrl
enter
or
cmp
cli
js
jg
xor
loop
inc
jle
dec
xor
cmpsb
mov
pop
pop
inc
jg
push
fdivs
dec
repnz
ja
jns
icebp
xchg
mov
outsb
adc
out
pop
pop
fistl
xchg
fs
inc
popa
add
scas
aaa
inc
push
rcl
xor
orl
sub
and
xchg
icebp
mov
out
adc
lret
inc
jl
jecxz
pop
fmull
roll
outsl
fsubp
shrb
data16
sbb
test
fimull
cs
adc
push
xlat
lret
dec
lods
xchg
ss
mov
std
pop
push
inc
les
pop
xchg
pop
out
xor
lods
mov
ljmp
mov
sbb
dec
faddl
jmp
movsl
dec
push
or
int3
cmp
enter
sub
mov
ds
lds
or
push
or
ficompl
or
pop
insb
aaa
test
and
and
and
lea
mov
pusha
cmc
mov
pop
int
ret
fistl
and
and
fwait
rcll
mov
xchg
add
mov
dec
mov
loope
fbld
ret
sarl
sti
adc
xchg
cmpb
cmp
xchg
ds
repz
lret
sub
push
lock
cwtl
negl
jno
mov
dec
in
or
adc
xor
movsl
dec
ja
mov
xor
popa
mov
mov
out
push
dec
sub
int
pop
cmpb
stos
and
inc
push
push
sub
mov
inc
jecxz
xchg
iret
movb
sti
orb
mov
jmp
mov
cwtl
daa
cmc
addr16
sbb
hlt
xor
nop
in
das
dec
xchg
lret
movsb
cmc
and
sub
add
cmp
into
in
xlat
or
add
push
sti
pop
mov
gs
xchg
sahf
add
jb
mov
xchg
popf
setge
popa
scas
cltd
ret
mov
js
push
test
out
ja
sub
xchg
test
jb
ljmp
fnclex
subl
xchg
sub
popa
jae
stos
xchg
iret
mov
sti
loope,pt
push
add
inc
jno
fwait
in
cli
bound
stos
call
addb
imul
out
cmp
push
sub
push
fimull
mov
pop
test
xchg
add
lods
push
stos
xchg
lret
aas
popl
fmull
fsts
ljmp
cmp
adc
mov
cs
nop
pop
in
cld
xchg
fbld
xchg
imul
jnp
subb
jno
push
and
add
pushf
and
mov
adc
dec
loopne
mov
jg
sbb
std
lret
mov
hlt
cmpsl
aam
push
sbb
dec
pop
push
repnz
jo
mov
std
in
mov
and
xchg
sahf
push
ja
mov
or
int
fcoms
jle
and
push
cltd
jle
loopne
cltd
xchg
lea
fidivl
shr
push
fsubrl
clc
sbb
mov
lret
xor
mov
stc
dec
pop
xor
scas
mov
divb
sti
andl
int3
in
gs
daa
inc
ret
dec
cmp
jmp
subl
and
negb
xchg
scas
cmp
cmpb
jb
push
jo
adc
cmp
lret
hlt
int3
mov
enter
cmc
fsubl
ret
sbb
sti
fildll
mov
mov
leave
jo
pcmpgtb
ljmp
imul
dec
test
and
mov
pop
mov
cltd
scas
cmp
inc
rcrl
data16
jmp
gs
shlb
loop
iret
inc
fadd
imul
lock
push
mov
push
imul
mov
adc
jnp
outsb
cmp
pop
mov
inc
mov
call
and
stos
and
mov
lods
push
push
pop
sbb
insl
ret
sahf
sbb
pminsw
frstor
inc
outsl
jb
pop
sarl
imull
push
or
inc
push
adc
pop
lahf
cmpsb
lods
ljmp
addr16
xchg
repz
outsb
xchg
ds
cwtl
shr
imul
and
mov
adc
and
test
je
pop
repz
jnp
and
mov
mov
inc
sbb
mov
mov
fsubrs
out
xchg
inc
lock
sahf
negl
jp
clc
popa
xor
add
fisubs
xlat
sub
ficomps
adc
dec
aam
fldt
mov
push
mov
inc
mov
bound
cmp
ljmp
insl
and
test
inc
iret
xlat
dec
lret
sub
inc
push
mov
and
out
fsub
mov
dec
mov
mov
cmpsl
jle
aaa
inc
stos
adc
pop
push
loop
add
inc
in
in
jl
mov
imulb
jl
negl
add
dec
out
daa
adc
in
movsl
in
lods
cli
cmp
add
mov
pop
in
loop
pusha
inc
shlb
or
adc
mov
aad
lods
mov
mov
fsubrl
push
jb
jmp
push
push
lods
fidivl
push
mov
lcall
hlt
mov
int3
push
mov
push
in
xchg
mov
xor
fisttpl
mov
insb
lock
rolb
inc
dec
cmp
fisttpl
cmp
xchg
shl
mov
jae
pop
xor
arpl
out
cmp
out
arpl
push
pusha
xor
popf
lcall
jmp
ss
test
xchg
std
out
faddl
sub
std
fs
sub
lock
lds
jecxz
mov
clc
pop
xchg
imul
xchg
xchg
icebp
pop
out
sbb
pop
xor
clc
addr16
mov
iret
push
push
outsl
lods
jp
lds
push
and
and
jmp
adc
adc
jmp
xlat
push
mov
xchg
sub
loopne
jmp
fdivl
stc
push
xchg
cmpsb
arpl
jne
push
lret
sbb
or
stos
inc
ss
cmp
ja
mov
mov
cs
aas
out
inc
push
in
sub
sbb
lods
cmp
jecxz
pop
xchg
sbb
out
rorb
and
xchg
and
fldl2e
jns
enter
imul
xor
aas
lods
ss
aam
adc
insl
cmp
hlt
fildl
jecxz,pt
mov
es
xlat
pusha
push
js
or
and
cmp
aaa
sub
je
jne
decb
add
sbb
adc
mov
xchg
addr16
imul
inc
lock
fisubrl
cmp
pop
sbb
cmpsl
xchg
stos
add
sub
stc
fldt
sbb
aam
or
outsb
clc
add
push
sarl
out
hlt
imul
jne
mov
inc
lret
mov
ja
push
pusha
xchg
sub
repnz
xor
in
jno
imul
fwait
add
shlb
in
scas
fs
mov
jle
lea
sub
pop
stos
sub
jae
jo
orl
xor
arpl
insl
sbb
jbe
mov
loopne
pushf
repnz
inc
and
ret
xchg
mov
je
arpl
test
mov
js
lea
mov
fs
bound
or
loope
popa
cmp
pop
shrb
cltd
cwtl
add
push
mov
out
lds
and
xchg
rcrl
jl
jno
jb
cld
orb
lahf
pop
insl
iret
in
or
faddl
icebp
xor
test
fsts
sub
and
inc
jne
or
add
sub
lock
cld
dec
jmp
jle
push
das
mov
push
mov
fbstp
add
inc
shrb
jns
dec
sub
cld
jnp
mov
sbbb
xchg
ss
sbb
add
fwait
pop
xor
mov
lret
pop
jno
xchg
pop
mov
test
insb
aas
popa
leave
lds
sub
cmp
xorb
inc
fs
cmp
and
jo
pop
dec
mov
xor
push
mov
add
subl
pop
mov
push
mov
andl
loope
xchg
mov
jg
test
hlt
fisubrl
cld
rorl
shll
arpl
ret
sbb
inc
add
aam
or
xchg
add
inc
xchg
xchg
xchg
adc
popa
je
jns
pop
cltd
nop
mov
mov
dec
imul
sub
cmp
aas
mov
loope
lds
jo
push
sti
mov
mov
in
jne
jp
test
rcl
scas
fst
repnz
xchg
fisttpll
mov
mov
xchg
cli
popf
dec
dec
mov
sub
pop
xchg
stos
add
inc
add
mov
jne
fsubrl
jge
mov
popa
in
pusha
cld
inc
jl
push
or
js
jp
xchg
imul
subl
insl
rorl
fs
and
push
add
jae
leave
pop
das
jno
inc
enter
call
and
sti
jo
mov
mov
loope
sarl
test
push
dec
sbb
scas
mov
rol
xor
mov
shll
movsb
sbb
xorl
sahf
jp
not
cltd
outsb
pop
andl
les
mov
pusha
sbb
int
adc
xchg
xchg
xlat
outsb
nop
add
xchg
jb
jle
lock
xchg
mov
insb
mov
jge
jno
ficoml
addl
aam
std
cmpl
mov
dec
mov
xchg
add
clc
dec
sub
test
sub
es
call
add
arpl
or
jmp
sub
rorl
ljmp
and
xor
fsubrs
mov
fisttpl
movsb
sbb
add
jle
inc
and
insb
sub
das
add
fstpl
xchg
pop
stos
mov
movsb
cmpsb
popf
push
push
jb
push
clc
add
movsl
mov
pop
loop
shlb
pop
lret
mov
imul
cmp
inc
xchg
sbb
mov
cmp
sub
push
inc
test
dec
cmp
aaa
hlt
xor
fucom
lds
add
inc
in
in
cmovg
push
xchg
or
mov
xlat
mov
es
mov
push
fs
mov
fwait
testl
cmc
mov
push
inc
call
les
lret
cmp
or
lods
jb
hlt
aad
xchg
lods
or
out
sbb
enter
call
imul
shlb
add
add
pop
fstp
cmpsb
sbb
sti
sub
mov
andl
es
orl
pop
xchg
in
dec
insl
push
js
leave
mov
jge
dec
jno
out
out
pop
lods
cmovbe
sub
cmp
jl
cmpsb
mov
dec
imul
lds
jb
mov
insb
aas
lcall
push
ret
stos
out
sub
movsb
and
cmp
mov
dec
lret
dec
loop
cwtl
les
mov
fisubrs
jns
dec
xchg
ror
or
cmp
int3
in
jb
sub
xor
in
rolb
clc
sbb
outsl
push
cwtl
jae
aam
inc
les
in
mov
mov
es
cmp
and
mov
pop
repnz
lahf
clc
sarb
fidivl
iret
test
push
insl
xchg
and
maxps
or
pushf
ds
aas
pop
popl
daa
shlb
std
loope
or
aad
in
sar
jmp
stos
enter
out
scas
mov
cmpsb
std
shlb
notb
in
xorl
ljmp
sar
hlt
imul
mov
ret
pop
icebp
inc
mov
out
dec
ret
pop
sti
cld
mov
dec
cmp
in
sbb
xchg
pop
xchg
scas
mov
shrb
popf
xor
add
push
xor
loopne
mov
fisubs
push
mov
and
fstps
cmp
xchg
stos
cli
int
sbb
push
sbb
jnp
adc
pop
outsl
in
popa
xchg
rorl
jecxz
add
and
test
xchg
mov
loope
repz
pop
insl
les
fs
loope
cmp
ds
mov
ljmp
repz
jecxz
dec
mov
pop
jne
mov
cmp
or
xor
arpl
outsl
sbb
inc
pop
push
mov
inc
bound
xchg
lock
push
mov
xor
mov
ds
lods
mov
adc
sarb
cmc
enter
addb
adc
xor
fistl
jae
scas
jns
rcll
or
test
mov
and
adc
loop
cmp
mov
dec
enter
or
jl
or
out
test
cmp
js
addl
push
lods
mov
fisubl
iret
ja
not
fs
pushf
and
ds
cltd
out
mov
ret
lds
jno
jno
scas
not
mov
jg
out
loopne
mov
inc
sbb
push
fnstsw
popf
outsb
cmp
sub
or
lds
loope
push
movsl
push
xor
movsl
add
push
insb
in
rclb
fidivl
fdivp
addr16
outsb
es
aaa
jp
xlat
lea
or
sti
les
out
mov
dec
cwtl
dec
aad
cmc
cli
jno
push
int
xlat
data16
and
imul
cmp
mov
scas
out
rclb
xchg
pushl
xor
push
out
and
cmp
pushf
pop
xchg
mov
cmpsl
add
aam
sub
arpl
movsb
and
notb
pop
rcr
jo
sub
popf
xchg
dec
pop
inc
aaa
faddl
add
cmp
mov
jno
jae
push
pop
int
or
sub
aaa
dec
inc
fwait
lahf
repz
jbe
fwait
push
arpl
xchg
mov
xchg
pop
shrl
dec
xor
push
in
outsl
loop
add
movsl
add
fistl
outsl
icebp
inc
loopne
rcrb
push
jmp
mov
mov
sbb
xor
enter
aad
dec
add
jg
lahf
push
out
jmp
ljmp
push
sub
pushf
pop
test
add
add
mov
cmp
xchg
mov
and
cmp
sub
addl
mov
cmp
mov
dec
lahf
mov
xchg
mov
int
jne
cwtl
adc
sub
dec
int
call
adcb
mov
sti
mov
clc
fcoms
dec
push
or
test
push
ja
cmc
jp
out
or
dec
adc
dec
and
or
lret
ja
lods
int3
push
outsl
leave
add
mov
xor
aaa
xor
sbb
sbb
gs
outsb
mov
repz
jmp
xchg
add
push
stos
add
sbb
adc
mov
push
je
hlt
lret
jp
or
push
movsl
jl
iret
fs
mov
stos
daa
sti
into
sub
push
pop
adc
push
add
cli
decb
insl
clc
fnsave
push
mov
jb
dec
jns
pop
adc
popf
jb
mov
add
jbe
pop
out
jl
mov
popl
insl
jo
push
loop
enter
loop
clc
xchg
out
pmulhw
lret
jecxz
je
adc
xchg
repnz
add
bound
mov
rcrb
sarb
call
xor
add
sbb
xchg
lcall
ret
mov
mov
cmc
inc
pushf
and
daa
lock
hlt
sbb
jae
mov
cmp
cmpsb
fdiv
jb
inc
jno
icebp
loopne
jl
add
dec
pop
jmp
in
xchg
and
jbe
inc
movsl
push
fistpl
and
outsl
jno
daa
fisttpl
push
lea
and
mov
pop
shll
xor
call
loop
sti
xor
dec
sub
out
cmpl
out
sub
lcall
stos
pop
repz
and
test
xlat
std
xorl
or
outsl
xchg
mov
pop
adc
push
imulb
int3
das
ret
movsb
repnz
mov
jbe
rol
stos
adc
dec
mov
inc
jbe
and
mov
xchg
sbb
stos
and
shrb
cmc
dec
sbb
leave
jp
out
cmp
push
popf
lret
cltd
stc
ret
dec
pusha
mov
aam
mov
sub
insb
ss
stc
xchg
xor
or
inc
push
mov
cmpsl
aas
fnsave
push
push
inc
sbb
mov
iret
sub
xchg
add
sahf
push
repz
jns
inc
mov
daa
ljmp
int3
enter
fwait
sub
xor
mov
lock
pop
std
sahf
ss
hlt
ja
call
mov
ja
mov
add
dec
jmp
mov
push
je
loope
mov
adc
mov
push
or
cmpl
loopne
or
mov
cmp
sbb
fimull
inc
aas
ficoml
int3
test
mov
pop
inc
mov
xor
test
fists
gs
sub
in
or
push
aad
in
js
fs
sub
mov
lret
or
sbb
sbb
inc
lea
jne
les
js
sbb
fcoms
in
mov
inc
mov
mov
mov
mov
outsl
test
mov
gs
lcall
test
xchg
and
xchg
lods
scas
jbe
lcall
jnp
sbb
xchg
dec
faddp
test
add
adc
inc
mov
sahf
mov
sbb
lds
in
in
or
push
lods
add
jecxz
popa
in
aad
jl
outsb
or
int
pop
jb
mulb
and
lods
dec
jg
clc
xchg
sub
loopne
xor
mov
inc
or
stos
cmp
push
lods
test
fwait
iret
movsb
hlt
inc
or
aaa
xchg
dec
mov
hlt
cmp
push
lods
addl
in
movsl
shlb
jno
out
push
dec
xlat
jne
cmpsb
jbe
insl
xor
mov
xor
into
outsb
pop
push
repz
cmc
inc
cwtl
psubq
insb
ds
push
movsb
mov
mov
adc
out
hlt
std
test
lods
in
add
add
pusha
filds
or
inc
cs
enter
mov
inc
adc
jmp
xlat
xor
test
rcrb
and
cmp
test
roll
mov
hlt
out
cmpsl
inc
mov
dec
shlb
test
xor
xchg
stc
jecxz
sbb
sbb
inc
cmp
sub
hlt
rorb
mov
inc
loop
mov
mov
enter
cmp
es
inc
mov
jle
xchg
les
lret
dec
es
lcall
sahf
js
in
mov
mov
add
daa
xchg
dec
fs
cmp
and
mov
hlt
ljmp
mov
orl
xchg
pusha
lock
and
insl
push
push
jb
in
je
add
mov
jnp
sub
inc
mov
ficoms
mov
outsb
shlb
out
jge
xor
xchg
sarb
add
int
jns
xlat
add
repnz
jne
sbb
inc
pop
dec
sub
sub
aas
aam
jno
sbb
test
stc
movsl
push
mov
repnz
enter
lock
dec
pop
in
repnz
mov
sbb
mov
lea
dec
dec
push
push
popa
jg
or
mov
sbb
mov
loop
sbb
add
xchg
insb
sbb
adc
mov
aas
imull
movb
inc
iret
lahf
pop
ret
mov
xor
subl
push
aad
jecxz
sub
sbb
cmc
sbb
popa
sbb
jno
js
pop
js
sub
mov
orb
lock
mov
mov
add
xor
in
push
out
stc
or
jb
mov
mov
push
mov
add
fcoms
and
push
cmpl
xor
int3
and
push
push
mov
mov
cmpb
pop
pop
js
push
mov
add
gs
dec
mov
dec
cwtl
jl
mov
jl
xor
int
fucom
xchg
pusha
adc
fistps
mov
mov
mov
mov
je
bnd
cmc
or
jno
jo
js
jnp
dec
cli
daa
or
mov
push
ret
test
mov
push
icebp
fs
fldl
loope
pop
imul
and
mov
xchg
mov
in
fdivl
jne
mov
jl
clc
xor
cmpsl
es
xchg
mov
lahf
mull
dec
cmp
icebp
and
aaa
outsb
sbb
push
je
push
dec
daa
xchg
mov
cmpsb
movsb
mov
push
sti
scas
mov
sbb
xor
mov
inc
xor
sar
push
pop
insb
jl
pop
pop
xor
scas
ficoml
out
stos
xor
push
xor
imul
push
sbb
repz
push
movsl
mov
mov
pop
ja
xchg
lret
adc
mov
fcompl
int3
add
out
push
aaa
adc
shr
sbb
negb
and
push
nop
test
lea
cli
ja
negb
xor
rcl
repnz
dec
mov
dec
ret
mov
test
add
lret
dec
jmp
dec
imul
or
gs
mov
test
sbb
mov
test
pop
pop
arpl
sub
test
xorl
jge
and
sbb
xchg
xor
pop
pop
stos
jno
lods
andb
mov
mov
or
arpl
mov
sub
mov
sbb
je
out
int3
sbb
add
pop
iret
xchg
fwait
aam
lea
scas
add
sbb
out
pop
cmpsl
repz
xchg
add
seta
fwait
ds
sub
or
pop
das
ds
fcoml
sub
dec
jae
xchg
dec
fidivs
and
cwtl
hlt
pop
addb
repnz
fstp
clc
cmpsb
mov
daa
insl
add
pop
repnz
iret
cmpb
pop
cld
outsb
out
xor
pop
fisttpll
int
loop
loopne
ljmp
stos
xor
cmpsb
int
movsb
pop
xor
lcall
xor
or
sarb
dec
fwait
jle
inc
inc
mov
jmp
cwtl
xor
loope
or
decb
lods
mov
jno
push
dec
mov
fsubs
cld
sub
loope
sbb
push
jno
fidivl
int
test
testl
out
outsl
clc
adc
lea
inc
arpl
xor
sbb
addl
pop
out
push
push
add
fmull
push
repnz
js
xchg
push
pop
or
jb
add
jb
lret
xor
call
jecxz
cli
mov
sub
lds
lods
pop
test
lret
xor
jnp
xchg
fldl
cld
xchg
mov
and
sub
xchg
dec
outsl
lea
dec
fadds
cmpsl
inc
lret
jp
inc
pop
out
dec
and
push
pop
inc
xchg
mov
xchg
popl
insb
int
cmpsl
sub
add
xor
out
jo
dec
into
and
cmp
push
icebp
jl
mov
cmpsl
push
xor
push
mov
sbbl
movsl
pop
je
cltd
shll
in
sbb
and
std
js
popf
movsl
jge
data16
cmp
mov
lock
pop
cmp
add
xchg
adc
jmp
ss
cmp
mov
fwait
xchg
repz
in
repnz
adc
scas
ja
clc
jnp
add
inc
es
aam
addr16
pop
mov
adc
inc
push
mov
add
push
addr16
jno
sbb
call
add
sahf
ret
cld
inc
and
sbb
ret
add
xchg
adc
mov
mov
cli
ss
adc
mov
adc
or
div
rcll
mov
or
xor
jne
aaa
cmovns
push
ds
mov
and
mov
lea
mov
mov
sbb
adc
xor
imul
pop
jno
or
mov
mov
aas
and
cmp
adc
cmpsb
push
add
xor
xor
es
das
jmp
inc
mov
dec
loop
test
imul
jnp
js
push
out
jne
les
mov
push
cs
std
cmpsb
mov
add
loope
sub
mov
or
sbb
and
add
stos
aad
cltd
nop
pop
mov
js
mov
gs
or
jo
or
xchg
mov
pop
test
mov
cmc
jp
test
sub
xchg
in
sbb
loopne
pop
arpl
or
mov
mov
loop
mov
test
xchg
dec
test
sbbl
mov
jae
enter
roll
test
fistl
cmp
jae
lret
push
mov
cld
lods
scas
cs
jo
xchg
lock
inc
call
inc
hlt
dec
ret
inc
mov
xchg
sbb
insl
ja
push
dec
call
push
fwait
mov
aas
das
inc
sbb
dec
jo
push
add
call
pop
les
xchg
out
lcall
inc
mov
push
adc
push
sbb
push
push
cmp
cmpb
cwtl
jmp
and
movsl
aam
orl
das
dec
pusha
jg
mov
ljmp
inc
lahf
xchg
aad
je
jnp
add
cli
push
cmp
xlat
aas
pop
jns
outsb
sar
in
aam
nop
inc
lock
pop
ljmp
arpl
sbb
adc
or
pop
fnstsw
mov
jmp
in
jecxz
shrl
lcall
inc
push
fmull
outsl
pop
rol
repz
mov
ds
enter
cmc
rorl
lods
rorl
xor
in
jb
sbb
push
je
adc
pop
rorb
stos
fcomps
inc
loope
pop
adc
fisttpll
jl
mov
cmc
pop
orb
jae
dec
pop
repnz
daa
loopne
and
mov
sbb
pop
cli
adc
lods
pop
lods
add
out
sbb
xlat
dec
loopne
scas
mov
or
sbbl
jne
mov
mov
mov
lahf
push
dec
and
outsl
lahf
test
adc
dec
std
cmp
dec
das
push
ss
xchg
add
mov
out
outsl
jno
xor
xchg
roll
mov
add
mov
pop
movsl
aad
fdivl
pop
mov
sub
fidivrl
mov
pop
sahf
and
ja
sbb
jae
fcomps
mov
repnz
in
test
xchg
and
pop
xor
push
mov
scas
imul
pushf
mov
add
jnp
inc
add
jne
fs
dec
pop
jp
std
out
mov
cli
popf
xor
cltd
xor
sbb
xchg
repz
mov
push
xchg
pop
adc
dec
push
xchg
stc
mov
neg
js
dec
lods
aam
cld
fiaddl
cli
or
mov
ret
cmp
xchg
jle
sysexit
sti
imul
mov
cltd
stos
cmpsb
std
and
mov
cmp
lods
ret
pop
pop
mov
ss
repnz
fxch
jecxz
and
das
out
notb
call
or
mov
rcrb
imul
cmpsl
aam
inc
in
mov
daa
scas
jecxz
leave
push
sbb
pop
fs
pop
test
pop
sub
fwait
cmp
repnz
cmp
rol
incb
sub
sbb
pop
pop
cmp
out
mov
dec
scas
adc
fs
shl
mov
fstps
push
in
mov
add
decb
or
adc
gs
insl
pop
fldenv
dec
sub
jmp
mov
insl
mov
scas
cmp
lahf
rcll
cmpsb
mov
fildl
out
xor
xor
test
pop
adc
push
test
mov
add
lret
push
repnz
dec
pop
lods
pop
vpunpckhwd
repz
push
out
dec
jl
pop
je
pop
cwtl
mov
xchg
insl
xor
insl
sbb
imul
movsl
andl
test
cmpsb
mov
clc
add
stc
push
add
insl
adc
lahf
cmp
lahf
aas
lcall
mov
mov
jecxz
add
shlb
ss
mov
and
cmpsb
push
and
lret
sub
aas
push
pop
neg
filds
out
xchg
jmp
push
fiadds
cmpsb
jg
aaa
cmp
inc
pusha
aad
mov
cmpsl
pop
mov
call
mov
fmull
lret
addr16
sti
test
mov
pop
test
lds
aaa
jmp
jno
imul
popa
adc
sahf
adcl
push
inc
dec
xchg
lods
push
lds
jmp
andl
orb
sub
cmp
and
cmp
inc
iret
popf
push
loop
lret
lcall
jb
or
mov
addr16
xchg
or
shlb
pushf
mov
jne
icebp
jl
and
xchg
fcomps
sbb
adc
cltd
arpl
fldenv
loope
sti
and
jl
ds
cmc
sub
adc
cmp
adc
jns
mov
fdivrs
and
pop
push
enter
ret
cmpsl
sub
xchg
loopne
sbb
mov
test
stc
pop
leave
movsl
lahf
sub
push
mov
mov
lret
xchg
cld
loop
aam
imul
adc
cwtl
mov
aaa
nop
addr16
mov
pop
mov
mov
mov
xchg
push
mov
rcll
jo
mov
outsl
pop
and
shl
mov
sahf
lea
or
xchg
fldl2t
jmp
test
jne
fstpt
inc
imulb
xchg
jmp
mov
cwtl
sub
or
sub
xchg
xchg
adc
xchg
stos
inc
adc
into
dec
popf
add
inc
shlb
call
or
cmp
mov
ss
mov
and
mov
mov
leave
aaa
movsl
jmp
fimull
add
xchg
xor
out
cltd
adc
js
push
mov
mov
test
cmpsb
ss
enter
adc
aaa
loope
bound
mov
loop
pop
out
push
xor
xor
pop
fdivrs
fcoms
inc
lds
fidivl
aad
jmp
insl
pop
mov
popa
pop
push
pop
pop
test
imul
int3
add
scas
mov
xor
cmpb
lret
jae
adc
mov
dec
sbb
rcll
in
outsl
jg
sbb
xor
sbb
jge
add
sub
sbb
mov
push
loopne
push
push
or
cltd
punpcklqdq
or
lods
xor
ds
dec
push
dec
out
rclb
or
fnstcw
sbb
jmp
jnp
add
jae
repnz
jo
icebp
mov
lods
rorl
cmc
jae
mov
aam
daa
push
jnp
mov
jp
xor
aam
adc
inc
es
jle
dec
out
aas
insl
ds
into
sub
pop
add
xor
mov
and
and
das
gs
pop
out
mov
arpl
dec
and
cltd
pop
xchg
mov
adc
les
cmpb
pop
jns
pop
sub
xor
push
rorl
fisubl
dec
push
loope
sbb
cmpl
sbb
inc
inc
xchg
jge
dec
dec
out
push
call
data16
enter
insb
cmp
inc
cltd
mov
test
in
or
xlat
xchg
ret
cmp
shrl
inc
rolb
sbb
add
ss
movsl
test
lods
jecxz
movb
dec
scas
push
insl
sub
faddl
or
dec
push
dec
fwait
fmull
or
jle
pop
push
mov
in
adc
sbb
cltd
jle
push
leave
sub
jp
dec
xor
addr16
lds
jae
jl
cltd
out
jbe
test
popl
fwait
xor
xchg
popa
outsl
xor
sbb
xor
fs
outsl
sbb
aam
in
xchg
test
and
xchg
add
pop
cmpsb
stos
add
cs
int3
pushf
imulb
jbe
ret
into
jb
xchg
jbe
enter
cmc
dec
push
test
shrb
and
popf
jbe
push
fcmovne
inc
lcall
aas
inc
pop
dec
cmpsb
repnz
ret
out
insb
std
push
into
add
lock
sbb
and
mov
push
mov
movntps
or
in
mov
mov
sbb
push
jp
xchg
sbb
push
divb
loopne
dec
lock
shrl
kmovb
dec
push
xchg
ror
test
jl
bound
mov
pop
lahf
jnp
setne
popf
aad
pcmpgtw
and
jns
mov
sbb
mov
arpl
inc
push
jg
lods
cmp
add
shl
mov
inc
jbe
sbb
inc
js
pushf
ret
pushf
or
push
adc
and
xchg
daa
mov
outsb
outsl
lahf
sahf
dec
arpl
xlat
sub
ror
jae
jp
sub
mov
nop
test
test
into
bound
mov
sub
fwait
iret
mov
xchg
jno
test
jne
jl
shl
fstps
call
cltd
mov
xchg
mov
push
es
rcll
mov
in
enter
insl
repnz
sub
mov
shlb
jne
sub
cmp
inc
xchg
or
mov
loope
xchg
popf
dec
xchg
je
mov
sub
jge
cwtl
lds
sbbl
sub
loopne
pop
push
notb
mov
loop
fstpt
rcrb
add
jmp
xchg
test
stos
adc
add
outsl
subb
push
cmp
test
push
dec
push
dec
dec
inc
jns
hlt
mov
mov
das
jnp
outsl
fcmovnu
outsl
mov
adc
xchg
stos
pop
bound
movsb
mov
dec
sahf
mov
push
inc
test
dec
loope
scas
insb
pop
adc
insl
xchg
xor
into
orb
repnz
mov
bnd
xor
sub
mov
mov
in
nop
or
gs
std
dec
pusha
test
cmc
adc
testb
out
jecxz
imul
add
pop
les
clc
cmpsl
add
popf
jns
jp
sub
fs
jp
out
mov
mov
lds
push
sbb
jp
xor
stc
xchg
push
orl
push
xchg
pop
adc
xor
adc
cmc
add
inc
pop
ja
out
xor
sub
aaa
rclb
add
mov
jle
in
mov
and
cli
mov
push
xchg
pushf
rorb
xchg
dec
push
js
pop
xor
je
mov
dec
test
test
and
xchg
rcrb
mov
jle
and
fstp
jg
shrb
and
or
pusha
mov
push
xor
ja
push
fnstenv
addr16
ss
ret
mov
adc
roll
aaa
sbb
iret
jmp
dec
pop
jmp
xchg
test
mov
xor
dec
mov
sub
mov
cmp
imul
mov
mov
mov
dec
xchg
inc
jecxz
or
mov
cmc
add
cmp
sbb
fldcw
lea
int3
test
sub
mov
icebp
scas
sahf
repz
dec
outsb
repz
andb
cmpsb
mov
scas
pop
xchg
dec
xor
cwtl
and
mov
jnp
sub
jo
movsl
and
pop
and
adc
add
sub
pop
clc
fucomi
sbb
jg
ret
inc
mov
fsubs
xor
mov
leave
sbbb
adc
scas
mov
dec
cmp
cmc
ret
cs
inc
pusha
mov
or
inc
cmc
sbb
pop
mov
out
inc
test
xor
adc
xchg
inc
fwait
cmpb
shrd
mov
insb
jg
fndisi(8087
cmp
sub
sbb
mov
divw
notb
adc
pop
sbb
jno
movsb
cwtl
inc
ljmp
or
xchg
mov
mov
or
or
mov
cmp
loopne
jg
addr16
adc
dec
push
addr16
xlat
or
dec
mov
jnp
cmp
fildl
nop
push
xchg
mov
mov
xor
mov
out
adc
int
les
aam
adc
mov
in
pusha
xchg
leave
fstps
dec
sahf
dec
add
int3
or
jl
call
xchg
lock
cltd
lds
pop
fbstp
or
jg
outsb
push
bound
das
lahf
push
test
lea
data16
xchg
add
stc
cmp
mov
ret
mov
aam
inc
sbb
lcall
jno
cmpsb
lret
std
lcall
imul
and
dec
push
stos
mov
outsb
mov
push
xor
mov
xchg
jp
or
sti
and
cmp
push
ja
inc
addl
cld
add
les
stc
add
sahf
adc
in
mov
adcb
push
cmp
dec
in
ja
mov
jnp
icebp
icebp
nop
mov
jg
loopne
out
pop
pop
jmp
sti
lods
xchg
cmpsb
mov
push
out
sub
xor
call
test
add
xor
dec
leave
add
in
in
clc
addr16
adc
sar
imul
and
ja
movsl
je
mov
into
js
sbb
add
aad
and
mov
inc
fdivr
sbb
je
lcall
nop
pop
imul
jl
add
sbb
xchg
push
repnz
dec
xchg
cltd
mov
jns
sbb
dec
xor
xor
inc
lcall
and
das
mov
pushf
add
mov
or
add
push
mov
pop
mov
mov
in
test
arpl
xchg
es
adcb
imul
out
je
in
jge
lea
clc
lods
push
arpl
fnstsw
push
mov
jmp
sbb
loopne
clc
sbb
repnz
mov
ds
sub
mov
jne
aaa
jle
cmp
insb
xchg
mov
lret
inc
idivb
xchg
and
cwtl
dec
sbb
js
and
mov
aaa
inc
jmp
scas
out
fadds
or
mov
sarl
ret
cmc
nopl
imul
xchg
addl
push
cmp
push
or
pop
popa
ja
cmc
jmp
push
stc
loop
sti
jno
faddl
sub
and
pusha
insl
push
mov
xor
je
vpunpckhdq
pop
fdiv
mov
xor
jp
jnp
shll
sbb
or
roll
dec
pop
jecxz
fwait
xor
popf
clc
mov
pop
adc
inc
stc
insl
inc
jne
clc
test
fldl
sub
gs
add
or
push
sbb
iret
sti
mov
xor
xchg
jb
fnstcw
add
jne
out
outsb
cld
cld
icebp
enter
or
dec
dec
nop
xor
lret
and
rolb
in
mov
pop
sbb
mov
hlt
and
and
popa
outsl
rorl
enter
lcall
jb
mov
mov
mov
pop
cli
repnz
lods
hlt
inc
sbb
jge
dec
aam
enter
pop
mov
jl
jmp
ret
push
aam
push
pusha
mov
ja
ss
jmp
xchg
sbb
dec
mov
outsb
and
or
or
jbe
scas
fidivrl
cwtl
test
cmp
out
mov
sub
mov
aam
sahf
dec
pushl
ds
mov
orb
repnz
arpl
dec
cmp
dec
cmp
lea
rorl
je
inc
mov
fadd
loope
jno
lahf
loopne
lahf
test
cld
or
lock
mov
popa
mov
scas
test
test
xor
in
jne
mov
mov
js
add
mov
in
cmp
pop
dec
cmp
pop
pop
fwait
dec
sub
xchg
leave
arpl
sbb
mov
adc
dec
fdivr
orl
push
addl
es
dec
pop
mov
inc
push
xchg
push
addl
in
ss
subb
fadd
sbb
jbe
pop
hlt
loope
mov
vmread
test
pusha
jmp
mov
ds
hlt
jle
jmp
lret
ljmp
movsb
jno
pop
loop
and
mov
in
pop
pop
gs
shrb
bound
xor
test
mov
adc
mov
xchg
cli
fwait
cld
add
sbb
sarl
sub
pop
xchg
cmpsb
in
jno
mov
pushf
addr16
jno
rcrb
fistl
insb
loope
xorl
lods
cmp
stc
popa
cmpsl
stos
jmp
shrl
into
clc
mov
test
in
mov
insb
aas
pop
in
inc
mov
and
insb
and
inc
leave
mov
mov
mov
inc
inc
add
jbe
push
inc
fsubrp
shlb
add
rorl
pop
mov
push
add
call
and
dec
loop
imul
fmull
dec
imul
out
xchg
or
xchg
dec
mov
sub
nop
test
pop
sub
bound
in
mov
lods
or
pop
aam
das
adc
enter
mov
out
sysenter
push
push
lods
push
sub
mov
pop
ficoms
mov
test
jl
and
xor
cld
clc
test
test
mov
icebp
push
popa
and
sub
bound
jge
outsl
mov
push
sub
add
movl
in
cwtl
mov
out
cltd
adc
outsl
cmp
loop
shr
jecxz
sbb
and
out
inc
xchg
out
lds
mov
fwait
lock
test
call
ret
aad
add
out
jge
fnsave
dec
hlt
movl
jbe
ljmp
decl
repnz
inc
scas
std
adc
in
in
cmc
xor
xor
inc
dec
jbe
xchg
ljmp
jg
bound
jecxz
mov
and
fs
mov
cli
adc
cld
xor
or
inc
ds
test
cli
cmp
loopne
insl
sar
pusha
pop
mov
gs
adc
fistl
subb
sahf
mov
fldl
pop
jb
pushf
jmp
xchg
mov
popf
lods
mov
bound
xorl
movsl
loope
push
cmp
sbb
rcr
xor
inc
les
lds
or
mov
dec
xchg
xchg
test
aas
iret
out
and
push
roll
fildl
ret
push
xchg
ss
inc
and
stos
cs
cmp
loopne
inc
adc
jge
jb
mov
dec
xor
mov
ja
cmp
jg
jns
mov
cmp
addl
push
mov
fwait
shll
push
fwait
cmp
and
xor
push
xor
or
cmp
ljmp
mov
xor
dec
int
leave
cmpsl
les
and
addr16
pop
nop
testb
mov
in
in
test
add
out
clc
out
ljmp
je
movb
bound
push
lret
pushf
and
xchg
hlt
pop
fidivs
push
je
movsl
movsb
or
mov
in
mov
out
pop
int3
cwtl
fmulp
enter
jns
xchg
xor
sbb
test
and
push
testl
dec
cs
loope
lret
lcall
test
retw
shrb
aas
mov
mov
repz
mov
pop
scas
xchg
xchg
push
movl
xchg
push
lret
dec
adc
dec
add
rolb
imul
lret
sbb
xchg
add
push
aam
inc
lock
in
popf
clc
cmp
mov
adc
xor
mov
inc
int
dec
xor
in
imul
es
fdivs
gs
pop
test
inc
mov
cmp
push
loope
add
adc
adc
movsl
jnp
xor
lret
cmp
cmp
inc
in
lock
repnz
ljmp
pop
xchg
cmp
sbb
fnstsw
pop
cmp
rcl
lea
xor
lds
sub
mov
in
fst
out
icebp
push
loopne
lea
int3
sub
xchg
stos
push
jae
mov
fdiv
xor
inc
adc
jl
push
sbb
or
into
leave
sarb
sub
fldenv
lods
xchg
sub
dec
add
jp
into
mov
test
cmpsb
adc
shll
cmp
xchg
fs
add
sbbl
iret
jno
cmp
sti
pop
push
sbb
insl
add
arpl
cli
mov
mov
mov
mov
mov
scas
inc
enter
test
nop
dec
std
call
sbb
cli
push
or
les
sub
repz
mov
mov
lahf
fsubrs
cmpsb
daa
mov
ss
cmp
sar
insl
and
sub
inc
push
xor
xor
jmp
scas
fs
shrl
jnp
and
pop
jo
outsl
cmpsb
dec
mov
push
cs
shrb
ret
mov
cmp
popa
xor
mov
jns
fwait
mov
cwtl
pop
lods
pop
gs
inc
xor
mov
cmp
bnd
cmp
roll
inc
xchg
popf
repnz
fscale
sahf
mov
mov
mov
push
inc
inc
sbb
sbb
lahf
jno
into
push
mov
pop
jle
mov
mov
test
scas
ret
add
xor
fwait
cmp
xchg
nop
jo
orl
loope
mov
fstpl
std
cmpsl
cmp
pop
xor
sub
dec
popa
add
lret
adc
push
mov
pop
push
mov
ficoms
frstor
sub
enter
or
adc
cmp
jne
mov
jne
and
fnstsw
shlb
rclb
icebp
in
cmp
xorb
mov
xchg
cmp
add
cmp
mov
imul
mov
sbb
jg
aad
mov
add
lret
pushf
out
insl
add
jbe
and
sbb
call
mov
mov
daa
fdivs
in
mov
popa
cmp
lds
shrl
ret
aaa
push
pop
mov
inc
loop
and
mov
ficomps
jmp
or
loope
sub
dec
and
and
push
push
vrcpss
in
add
pop
cmpsb
iret
int
nop
or
or
into
cmp
jne
jb
enter
push
jg
aad
pop
insl
cmpsl
inc
cmp
pop
insl
pusha
jmp
lcall
mov
popa
imul
pop
add
jmp
dec
xchg
dec
movsl
lahf
das
cli
inc
and
test
ucomiss
int
shl
rcl
dec
xor
shll
mull
adc
adc
icebp
push
push
out
inc
cmpb
fadd
cmpsl
jnp
xchg
or
push
sar
ljmp
push
lahf
jnp
test
mov
filds
in
adc
mov
cli
cmpb
lret
imul
dec
mov
or
frstor
xchg
mov
and
dec
fimull
or
gs
or
cmp
xchg
bound
inc
xor
mov
ja
adc
inc
push
fld
and
cmc
mov
mov
test
icebp
xchg
and
out
lods
inc
push
repz
out
mov
jnp
add
push
ret
cmpsb
enter
fsts
fs
mov
sub
cmp
je
insl
test
aad
jmp
xchg
adc
inc
add
test
dec
sub
adc
mov
xchg
push
loope
jg
sbb
pop
std
push
clc
mov
in
incl
sbb
aaa
shrl
pop
mov
cmc
gs
jno
outsb
sbb
mov
call
int
xorb
fstl
xchg
rcll
mov
test
xchg
xchg
mov
iret
or
mov
push
and
ret
sbb
shrl
in
fs
loope
jmp
sbb
adc
push
addr16
sbb
and
or
inc
inc
enter
test
pop
or
movsb
ficoms
aad
call
sbb
mov
iret
insb
cs
pusha
and
icebp
movb
movsl
ret
fisttps
jl
jbe
cmpsb
lds
add
mov
imul
jl
ja
jae
orl
mov
mov
push
ljmp
stos
ja
in
cmc
xor
mull
mov
mov
mov
loop
popf
mov
lds
xor
fcompl
js
inc
std
jb
dec
jecxz
cmp
push
sbb
scas
aam
dec
inc
xor
fmull
clc
lcall
xor
jno
jno
aaa
sub
out
cld
or
mov
rorl
les
push
imul
xchg
mov
jae
add
movsb
pop
and
fucomip
or
repnz
add
sbb
add
mov
jmp
scas
add
jg
push
push
inc
cmpsl
fisttpll
cmp
jmp
movsl
xor
daa
xor
jno
ror
xor
sbb
sbb
insl
subb
push
sub
shl
push
xchg
cld
mov
mov
adcb
dec
pop
outsb
or
dec
xor
scas
ja
pop
notb
xchg
dec
pop
pop
adc
aad
and
add
mov
ficoms
popa
neg
and
sbb
xchg
xchg
cmp
jo
gs
ficoms
lahf
mov
jle
adc
sub
gs
shll
jbe
jp
stc
cmp
shr
mov
mov
mov
add
adc
adc
xlat
repnz
dec
stos
jns
mov
adc
xchg
test
aad
ds
jne
cmp
addr16
rorb
adcb
out
xchg
pusha
jns
les
xor
jns
adc
xchg
xchg
fwait
or
xor
jge
insl
sbb
fsts
outsb
mov
out
insl
enter
pop
lret
mov
mov
mov
fildl
cwtl
inc
fisubrs
push
out
sub
jnp
stos
movsb
les
out
push
xchg
fdivs
in
add
std
popf
in
sub
jbe
aaa
in
inc
sbb
dec
inc
push
pop
mov
xchg
dec
sbbl
imul
mov
repnz
js
push
inc
jne
leave
adcb
enter
insl
sahf
iret
lock
movsl
push
dec
sub
gs
sahf
cwtl
jmp
xor
lds
push
out
and
cwtl
insl
add
cmpl
fmuls
cmp
mov
sub
xlat
xchg
sub
orb
call
sets
pop
negb
nop
push
cmp
xor
xchg
ja
outsl
sbb
inc
insl
lds
xorb
xchg
movsl
cmp
mov
es
call
sub
popf
jo
ret
lahf
adc
sub
and
lret
decb
data16
sbb
fstpl
mov
in
push
gs
or
cmp
add
dec
dec
mov
fisubs
and
ss
cld
sub
jmp
mov
or
mov
pop
and
cs
hlt
sub
adc
pop
mov
lahf
test
sti
lds
push
pop
addr16
pop
or
ss
mov
cmpsl
mov
mov
movsb
add
inc
ret
into
fs
cmp
lahf
xchg
and
pop
sbb
sbb
or
scas
mov
cmp
cmp
xchg
jns
or
fiadds
xchg
sub
xor
pop
inc
push
sbb
lcall
icebp
jmp
outsb
or
add
mov
sub
lcall
cmpsl
adc
outsb
or
mov
pop
xor
leave
mov
shl
push
lcall
fdivl
mov
imul
nop
push
mov
or
mov
inc
push
jo
inc
mov
xchg
add
dec
call
and
sbb
push
cmc
mov
cmp
dec
hlt
inc
sub
gs
je
cmpsb
das
pop
mov
mov
inc
mov
push
movsb
xlat
das
iret
cld
xadd
rcr
mov
stos
cmp
mov
dec
scas
xchg
clc
pop
or
mov
repnz
cmc
add
shrl
pop
cmp
fildl
daa
mov
nop
loop
jge
inc
pop
mov
add
in
shr
ret
sbb
insl
push
push
movsl
aas
dec
incb
cltd
shrb
movsb
stc
inc
scas
nop
cli
shrb
test
dec
add
adc
xchg
add
sbb
or
push
rolb
adc
in
imul
aam
and
pop
out
or
sti
rorb
push
jl
int
rcrl
aam
movsb
xor
or
dec
lock
cli
outsl
xor
clc
in
ljmp
popf
push
mov
jae
pop
aad
je
mov
mov
shrl
or
dec
jbe
sub
dec
cld
das
sbb
es
mov
sub
ret
insb
scas
es
xor
dec
adc
xchg
xchg
mov
rol
lahf
push
outsb
movsl
push
mov
int
popa
or
scas
nop
push
inc
loopne
sub
adc
mov
pop
jge
add
loop
jp
divb
fs
sub
int3
gs
cli
or
test
sub
aam
cmp
push
push
and
pop
cmp
mov
int
ljmp
scas
mov
xor
cmp
inc
mov
pop
push
or
mov
cld
xor
fcoml
aam
pushf
adc
cmpsb
jns
push
inc
xor
inc
xchg
jg
push
inc
cmp
cmpsb
mov
xor
xchg
movsl
jb
jbe
or
test
and
nop
out
into
es
push
icebp
out
add
mov
cld
fldcw
rclb
jnp
xchg
jnp
sub
out
ret
jmp
shl
pop
mov
sbb
jno
lret
pusha
test
dec
negl
in
xchg
adc
lea
arpl
push
sub
test
mov
jnp
ljmp
jl
mov
imul
pop
xchg
inc
les
call
sub
std
jge
xchg
mov
xchg
pushf
and
aam
cvtdq2ps
out
mov
outsl
lahf
push
mov
imul
xchg
cltd
or
xor
lock
scas
mov
mov
jne
mov
mov
or
adc
xlat
inc
lahf
lea
mov
fadds
fwait
sub
xchg
jb
cmp
adc
jb
sbb
dec
out
and
lret
daa
and
enter
arpl
lea
mov
xor
xorl
fbstp
imull
sbb
inc
xchg
imul
dec
or
dec
data16
push
stos
dec
adc
pop
pop
xchg
xor
pop
cmpsb
in
adc
cwtl
push
dec
and
fmul
or
mov
loope
xor
adc
or
mov
int
arpl
mov
mov
adc
movsb
lahf
adc
add
or
cmp
xchg
dec
push
sub
mov
pop
xchg
pop
jle
mov
jns
dec
fisttpll
adc
inc
sbb
popa
inc
xchg
adc
mov
mulb
xchg
sbb
mov
scas
add
add
lock
and
or
daa
and
adc
xor
ja
daa
scas
mov
sahf
les
je
dec
out
push
es
repnz
sub
pop
jecxz
rep
sbb
push
jbe
insl
sbb
and
push
xor
cmp
add
dec
loopne
jge
or
or
or
or
sub
mov
jno
xorl
adc
xchg
clc
add
lret
aad
leave
mov
daa
ja
inc
into
test
movsl
sub
push
std
cmpb
das
jecxz
xor
sti
or
cwtl
test
ss
pushf
push
pop
subb
add
push
inc
ja
es
pop
lock
jg
jge
push
sahf
mov
fstps
jno
loopne
scas
mov
pop
xor
insb
inc
jb
ret
adc
push
movsb
lret
dec
and
push
leave
cmp
fbstp
rorb
pop
movsb
movsl
xor
cmp
mov
pusha
mov
rolb
push
mov
out
push
nop
push
dec
fsub
rcrl
idiv
imul
jns
loope
add
add
jg
popa
inc
dec
inc
inc
hlt
pop
out
push
cmp
test
outsb
jmp
or
imull
inc
jne
fstpt
pshufw
movsl
imul
adc
aad
lods
push
xlat
pop
imul
dec
mov
sub
mov
repnz
mov
jecxz
cld
pop
dec
cltd
arpl
or
push
or
ffreep
adc
stos
cld
sbb
xchg
pop
inc
pop
ss
mov
mov
push
sbb
push
xor
or
movsb
pop
push
push
inc
inc
rclb
push
mov
int
mov
daa
sbb
push
xchg
sub
xor
mov
push
cmp
in
mov
js
rolb
lahf
jp
and
cmpsl
xchg
leave
jnp
adc
inc
add
repnz
pop
mov
pop
adc
test
inc
out
movsl
jo
or
sti
mov
fscale
jcxz
mov
sti
out
or
jp
mov
pusha
xchg
push
nop
shlb
or
scas
xor
stc
bnd
sbb
push
icebp
push
cmp
repz
idivb
xchg
sti
inc
dec
inc
and
dec
sbb
aad
sbb
sti
sub
in
inc
sub
fbld
repz
test
or
jmp
fwait
sub
pop
dec
outsl
aad
inc
inc
mov
add
push
dec
into
add
sub
scas
int3
pop
ret
cltd
aam
push
les
leave
jae
add
mov
outsb
leave
push
push
mov
jge
stos
in
push
andb
jae
xchg
adc
jo
ljmp
or
push
std
and
loope
lods
sub
rcl
dec
pushf
sbb
js
lock
ficompl
adc
scas
and
mov
fwait
sti
or
addr16
lea
js
mov
outsb
cmp
pop
aad
xchg
loopne
mov
fistl
cmp
aam
xlat
inc
lods
aam
xchg
lcall
fldt
iret
mov
add
fdivrs
test
mov
std
sub
sbb
dec
imul
arpl
outsl
rolb
mov
pop
pusha
inc
pop
push
or
stc
sbb
loopne
cmp
fsub
popf
mov
jno
xor
fstl
cmp
in
iret
nop
lret
lods
inc
mov
xchg
mov
stos
xor
dec
into
notl
loope
push
push
aad
das
sub
mov
shll
push
mov
cmp
negb
inc
scas
sub
pop
inc
mov
add
dec
scas
into
mov
cmpsb
mov
shrl
and
mov
push
int3
lahf
or
xchg
jmp
imul
mov
jle
fildll
test
inc
popa
pop
mov
inc
mov
xor
dec
nop
xor
jg
cmp
les
adc
mov
leave
jne
sti
gs
fs
add
sarl
add
push
xor
imul
cmc
shl
mov
scas
pop
and
pushf
jne
cwtl
mov
mov
or
andl
jno
fnstsw
inc
leave
adc
or
cmc
divb
and
incl
out
ljmp
sub
mov
into
and
aaa
lcall
imul
iret
test
lahf
mov
repnz
dec
test
or
add
data16
mov
cltd
push
clc
lods
dec
xchg
into
add
sar
ss
mov
cmc
mov
jecxz
lret
lock
sub
jle
mov
jnp
in
ret
movsl
outsb
leave
out
pcmpeqb
mov
push
jae
mov
push
jg
fsubrl
loop
or
in
fcom
jbe
sbb
pop
xor
inc
ret
movsl
jg
loopne
xor
rdmsr
mov
outsb
es
std
or
inc
jg
daa
inc
adc
pop
pop
mov
out
and
aaa
inc
shll
imul
jg
lods
add
fs
repnz
mov
inc
cmp
shl
fidivrs
dec
pop
inc
lock
mov
mov
in
inc
lods
adcb
pop
inc
add
ds
mov
dec
lret
dec
jnp
rclb
xorb
adc
stos
jmp
jnp
repz
sbb
pusha
in
movsb
shrb
xchg
push
adc
xor
in
prefetch
inc
les
sahf
pop
jmp
negl
repnz
mov
mov
scas
dec
pushf
fiadds
mov
push
aas
xchg
mov
test
sti
iret
push
or
mov
and
out
insl
fcomip
dec
xor
add
lods
pop
into
mov
movsl
lea
jno
adc
loope
dec
ja
push
loope
aaa
mov
mov
cmpb
fldl
adc
push
cmpsb
push
popa
add
cld
mov
movsl
sub
clc
rol
orb
jge
mov
and
pop
pop
into
mov
cmp
lea
push
scas
push
and
fldenv
adc
dec
popf
add
test
cmp
mov
out
mov
out
aaa
lcall
xchg
into
pop
lds
lea
mov
push
daa
cmp
cmp
or
shlb
xor
pop
inc
jno
cmpsl
inc
push
sub
add
add
fists
xor
and
add
sbb
pop
notb
push
int3
es
xor
pushf
xor
add
ret
pop
je
loopne
fldcw
imul
dec
adc
shl
insb
xor
xor
loopne
aaa
pop
hlt
mov
rorl
out
lret
inc
or
loopne
push
gs
sub
in
sbb
ljmp
stc
and
xor
scas
xor
ret
xor
and
in
fs
mov
leave
stc
sbb
loopne
fistps
xchg
xchg
xor
addr16
add
and
xchg
addr16
push
xor
mov
arpl
pop
in
cs
jns
push
gs
sub
aam
add
cld
hlt
fiadds
xchg
push
xor
enter
xchg
in
sbb
xchg
or
cmp
loopne
hlt
pop
sbb
gs
and
cmp
lods
cmpsb
jbe
mov
and
mov
fcmovnu
jg
movsl
dec
xor
xchg
enter
faddl
das
rorl
arpl
cmpsb
cmp
and
adc
nop
cmc
jle
mov
jge
pop
mov
andl
mov
sbbl
and
leave
xor
jg
mov
fidivrs
nop
push
les
lods
add
push
imul
fmuls
push
cmp
in
hlt
jecxz
ds
pop
inc
adc
push
xchg
cmpsl
out
xchg
push
mov
push
mov
pop
cmc
mov
push
in
push
cmpsb
xchg
lea
push
add
fcompp
mov
inc
aam
jge
and
aam
adc
add
das
adc
push
cmp
sbb
pop
enter
and
pop
rorl
jae
imul
dec
hlt
lock
sbb
sub
fistpll
sub
stos
ljmp
sub
testl
in
inc
es
imull
mov
mov
pop
sbb
or
cmp
pop
fdivrl
push
inc
xor
mov
ljmp
jae
cs
sub
ret
sbb
ucomiss
cmp
xor
lock
xchg
cltd
in
and
add
ret
gs
jno
daa
test
pop
dec
ror
xchg
sbb
xchg
dec
lods
loop
push
inc
sub
sub
pop
jmp
mov
xor
jp
mov
jnp
jne
mov
lcall
call
pop
xchg
out
mov
leave
sub
push
xor
jns
push
sub
nop
jl
xchg
dec
stos
arpl
or
sbb
xor
mov
fstpt
inc
push
mov
aam
lods
xor
push
mov
wrmsr
pop
add
jo
mov
mov
ds
movsb
or
loope
clc
out
je
rcll
push
inc
jl
popa
xor
push
ror
push
std
test
xor
movsb
dec
mov
jo
addb
stos
mov
aaa
mov
mov
dec
insl
push
fincstp
cli
or
lds
mov
xchg
cmp
sub
mov
sub
sti
sub
adc
adc
push
mov
jl
dec
mov
mov
sbb
push
inc
mov
pop
ds
or
cmpsb
jo
mov
mov
add
ret
ss
rorb
daa
lahf
xlat
js
frstor
inc
push
xor
cltd
addr16
and
mov
add
cmp
into
mov
sahf
pop
adcl
and
push
cmc
push
jmp
sahf
xor
ljmp
clc
push
push
lea
dec
pop
lahf
test
bound
out
and
popf
mov
adc
out
cmp
negl
xor
lods
cli
shl
inc
jecxz
ret
mov
adc
in
inc
sbb
and
adc
std
not
ret
push
pop
insl
in
push
scas
push
dec
sub
push
jecxz
fs
int
and
aaa
inc
or
cli
xchg
aas
jecxz
adc
or
mov
ljmp
xchg
sub
clc
ret
mov
lods
ret
xchg
xchg
ffreep
repz
iret
dec
stc
fcoml
xor
inc
cmpsl
in
popf
ljmp
xlat
movsl
xchg
xor
and
sti
stos
data16
mov
test
stc
outsb
sbb
int
or
dec
adc
jmp
shlb
adc
mov
fidivrl
mov
mov
sbb
or
js
mov
pushf
cmpsb
fnstenv
repnz
sti
sub
hlt
test
or
and
pop
test
pop
fisttpll
in
cld
push
clc
adc
push
das
enter
xlat
mov
addr16
mov
cmp
jo
imul
push
aad
and
loopne
subl
mov
popa
mov
cmp
mov
repz
mov
and
mull
lock
loopne
xchg
test
mov
jecxz
lret
mov
in
orb
test
lret
sub
lahf
decl
xchg
mov
shrb
popa
xchg
push
xor
mov
sbb
mov
arpl
xchg
pop
std
lret
mov
lcall
icebp
jmp
daa
sahf
ror
inc
roll
push
and
sbb
mov
les
sarb
fisubrs
jg
sbb
stos
mov
jns
lcall
sbb
imul
sbb
pop
jne
jecxz
in
daa
add
cmp
out
popf
jmp
xchg
inc
xor
imul
outsl
adc
mov
iret
cwtl
jbe
les
dec
pop
cwtl
sbbb
pushf
rcl
das
stos
sbb
loopne
push
sbb
imulb
lret
xchg
pop
outsl
push
mov
adc
out
std
sbb
cmp
in
pop
cld
mov
or
jmp
fiaddl
lea
xlat
pop
sahf
mov
lock
mov
hlt
and
push
mov
sbb
out
add
mov
sahf
jecxz
scas
jmp
cmp
xchg
rcll
lret
sbb
test
test
adcl
xor
aad
add
xchg
pop
jp
test
mov
pop
out
jno
imul
leave
popw
sub
lds
adc
popf
pop
dec
aaa
repnz
decb
mov
rorb
into
mov
or
jmp
pushf
ja
ljmp
jnp
repnz
cmp
mov
icebp
cld
push
dec
arpl
sub
imul
aad
or
lea
stos
dec
ljmp
cmp
and
lea
pop
cmc
inc
roll
out
stos
jmp
je
add
repnz
pop
push
xor
jecxz
pop
daa
ds
xchg
pop
insb
pop
sti
mov
arpl
fwait
push
xorl
mov
fwait
mov
or
cmp
xchg
out
mov
mov
xchg
push
icebp
sbbl
adc
outsl
aas
sbb
cmp
ja
mov
pop
in
ret
cmp
dec
sub
push
jnp
xor
idivl
out
popa
xlat
repnz
andl
xor
cwtl
adc
jae
xor
xor
addr16
sti
and
jbe
loopne
scas
lock
and
mov
loop
pop
mov
scas
in
mov
sahf
mov
jns
fildll
ja
push
gs
mov
stos
lods
mov
fisttpl
scas
xchg
pop
cmpsb
in
loop
pop
aas
rorl
test
inc
sub
jno
inc
or
push
lret
inc
lea
jb
fisubs
fwait
xchg
lahf
and
xor
or
inc
popf
addr16
jnp
add
push
fstl
inc
incb
call
into
adc
cmc
push
adc
mov
jmp
push
bound
mov
dec
jbe
pusha
push
jae
lret
lret
aam
aas
mov
clc
xor
cmc
into
push
icebp
fldl
fnstsw
popa
movsb
sbb
lea
mov
pop
jne
push
sbb
jp
xchg
pop
popf
inc
dec
xchg
dec
stos
arpl
jge
and
mov
iret
jo
lods
lds
push
sbbb
mov
lock
xor
xlat
push
pushf
xor
adc
jbe
loop
jl
and
imul
xor
in
push
and
push
or
xchg
pop
aam
enter
adc
inc
call
sub
inc
bound
inc
cwtl
mov
mov
xchg
aad
fsubrp
inc
xchg
or
adc
pop
test
movsl
add
and
pop
xor
or
fistpl
and
fldt
ret
stc
xlat
into
sub
push
rolb
scas
mov
out
addr16
xchg
mov
sub
sahf
add
adc
fcmovbe
mov
sbb
jno
int3
fld
jl
push
loopne
cmp
fprem
push
lea
and
rcl
inc
inc
ret
outsb
cli
loopne
inc
ret
jmp
cmp
jo
mov
mov
popa
sub
xchg
frstor
or
in
ficomps
mov
in
out
pop
mov
push
dec
dec
pop
sub
rolb
sbb
lods
sub
xchg
xchg
adc
add
in
int3
jecxz
jne
mov
mov
ja
mov
pop
ss
js
lods
xchg
ret
scas
jmp
stos
fstl
jl
aaa
ret
cmp
cs
and
or
or
js
loopne
clc
je
in
out
leave
stos
mov
shl
sub
movsl
xor
adc
jae
dec
ljmp
hlt
xchg
cmp
adc
xor
test
push
dec
fistpl
sbb
fs
aad
cmpsl
popa
ds
clc
xchg
xor
lret
int
sbb
inc
adc
cmpsl
cld
ror
sbb
fiaddl
pop
ljmp
shlb
adc
lds
jg
xchg
cli
mov
stos
ds
dec
in
push
jl
mov
imul
cmovnp
xor
pop
pop
push
jne
jp
and
pop
push
inc
loope
scas
pop
pop
shll
jle
ret
in
sub
ljmp
jmp
dec
dec
and
mov
push
jnp
lret
repnz
loope
dec
jmp
cmp
test
fs
add
insl
insl
rcrl
or
dec
testl
es
call
jg
addr16
inc
xchg
out
pop
adc
lahf
xchg
push
xor
stos
mov
leave
call
xchg
scas
pop
les
or
ror
mov
pop
pop
in
js
push
pop
pop
out
es
mov
sbb
mov
loope
adc
scas
xor
icebp
ds
dec
andl
add
pushl
lret
test
sub
insl
negl
mov
xor
inc
mov
out
jno
mov
dec
mov
ds
xrelease
cmp
outsl
arpl
dec
fistl
ljmp
add
mov
test
outsl
push
sbb
jle
in
jp
sahf
inc
push
pop
inc
push
push
adc
fsubrs
sub
lds
lods
xchg
pop
mov
and
xor
pop
scas
mov
add
mov
ror
in
into
inc
data16
jne
push
data16
mov
fstpt
and
std
adc
insb
ret
leave
xlat
lahf
sbb
loop
stos
lea
mov
xchg
dec
dec
fsubrs
push
pop
addb
stc
or
repnz
jp
in
or
sbb
gs
mov
shr
sar
xor
arpl
jo
adc
push
sbb
shl
das
fisttpll
in
sub
cmp
or
adc
clc
and
push
or
xor
mov
push
loop
int
shl
mov
loopne
mov
pop
inc
push
ret
xor
imul
push
add
daa
push
mov
cwtl
inc
rorb
daa
adc
dec
lea
lcall
hlt
sarl
ds
or
push
std
add
aad
push
out
dec
pop
sbb
mov
sbb
popa
pop
sbb
ja
movsb
test
and
loope
cmp
jg
jne
mov
add
xchg
inc
movsb
idivb
xchg
inc
inc
adc
out
js
dec
fwait
sub
and
leave
xor
cs
lret
add
cmp
push
repnz
jns
lret
xchg
jne
cs
lret
mov
mov
mov
lea
and
dec
outsl
cmp
fst
inc
jns
xor
fidivs
push
push
loope
nop
jae
fsubs
out
xchg
jns
mov
dec
xor
dec
pop
cmp
xor
outsl
jo
test
xlat
insl
dec
push
push
lret
xor
fcmovb
adc
shr
push
test
mov
cwtl
addb
into
sbb
je
or
and
xchg
mov
mov
movsb
movsl
dec
scas
sub
enter
xchg
enter
xor
xor
nop
push
xor
fldl
xor
shll
sbb
arpl
xchg
mov
jecxz
fwait
sub
lea
ja
cmp
mov
leave
loope
das
adc
or
cmp
shl
enter
cwtl
rolb
dec
mov
jnp
push
fildll
push
fwait
push
xor
mov
push
and
xlat
mov
out
dec
test
mov
cmp
mov
cmpsb
cmp
or
and
rcl
in
loop
mov
mov
mov
fcompl
loopne
into
cwtl
pop
pop
aam
xor
push
cld
je
dec
cltd
lea
push
divl
orb
mov
int
xchg
and
sbb
push
leave
mov
mov
sub
or
adc
imul
cltd
or
insl
xchg
fsubrp
pop
lods
sub
add
lret
lds
or
dec
cmpsl
pop
and
xchg
loopne
push
lret
cmp
ljmp
sti
sarl
in
sbb
movsl
fistl
testl
or
loopne
mov
out
or
loopne
xchg
adc
lret
into
push
scas
cmc
rorb
or
into
inc
in
rcrb
fcmove
pop
cwtl
mov
gs
sbb
cltd
pusha
shll
inc
push
outsb
pushf
sbbl
adc
lods
inc
mov
ret
stos
jecxz
repnz
dec
bound
inc
cmp
addr16
jl
into
xchg
out
mov
aaa
jno
jmp
mov
jle
int3
into
repz
or
iret
and
aam
push
dec
push
aam
ljmp
test
cmp
and
ds
fstps
pop
mov
cmp
loope
mov
cltd
jnp
jb
add
into
pop
jns
xor
roll
push
out
mov
xchg
jmp
push
jg
icebp
pop
push
cwtl
pop
jo
cld
add
sub
or
cli
mov
or
xor
push
push
inc
fcoms
jle
inc
inc
xchg
dec
mov
fiaddl
inc
or
mov
mov
push
cli
repnz
aad
aad
jo
mov
iret
test
pushf
mov
fidivrs
push
lock
mov
push
aaa
test
inc
or
int
pop
sbb
push
xor
mov
nop
sub
mov
loopne
pushf
push
cmpsl
dec
mov
bound
xlat
cltd
push
sub
in
sub
ficompl
cmp
aaa
dec
je
pop
mov
xchg
loop
xor
xor
nop
lret
jecxz
mov
data16
ds
or
mov
sub
mov
sarl
sbb
cmp
jnp
inc
fbld
out
jns
lcall
push
enter
repz
rcl
es
mov
cmp
adc
pop
sub
repz
hlt
or
popa
sub
adcb
and
push
int
clc
insb
leave
sub
fimuls
idivl
adc
clc
sbb
hlt
out
inc
cmpsl
xorb
dec
xchg
pop
or
push
lret
and
lcall
arpl
push
stos
mov
mov
mov
jne
hlt
insb
cs
sbb
outsb
xchg
and
xchg
mov
xor
and
jecxz
add
xchg
aam
leave
cwtl
test
or
xor
lret
mov
icebp
adc
lcall
aad
cmp
bound
sbb
lds
push
xor
scas
mov
rcr
imull
sbb
add
cmpsl
mov
add
or
test
push
mov
daa
je
rorb
das
mov
and
imul
inc
or
jb
or
mov
aam
dec
add
gs
std
cmp
jecxz
rolb
sub
notl
jnp
ljmp
adc
sbb
mov
inc
lock
and
cmc
imul
pop
gs
sbb
fwait
add
fucom
dec
int
cmpsl
cmp
cltd
add
hlt
call
nop
mov
je
jne
les
out
cmp
pop
or
sti
mov
test
stc
cld
fucom
movsl
add
mov
imul
pop
mov
ljmp
fs
lods
and
jmp
cmp
push
sti
out
sbb
mov
xchg
jle
in
subl
cmp
mov
add
jp
loope
or
xor
push
pop
push
xchg
fisttps
and
pop
pop
jl
imul
scas
mulb
mov
imul
mov
dec
movsb
pop
and
clc
aas
aad
jg
fnstenv
or
ss
adc
pop
and
cmp
iret
mov
leave
lahf
scas
movsb
pop
pushf
xor
cltd
jecxz
ja
mov
inc
fiadds
xchg
out
test
inc
out
adc
mov
repnz
lods
jo
xchg
lret
lret
jg
adc
rolb
cmp
dec
pop
mov
inc
push
push
mov
xchg
push
jl
xchg
in
push
aaa
mov
add
out
aas
sbb
test
ja
bnd
call
movsb
push
adc
jmp
xchg
shufps
dec
in
mov
dec
adc
out
push
mov
call
dec
rcr
popf
imul
lahf
cmp
pusha
in
mov
dec
xchg
stc
mov
popl
mov
cmpb
daa
adc
sub
addr16
mov
jmp
jmp
pop
mov
scas
xor
add
aas
push
pop
sar
test
xchg
gs
das
das
lcall
lods
sti
lret
call
push
cmp
xor
jg
and
cmp
push
mov
and
dec
dec
mov
scas
popf
adc
cld
scas
xor
je
mov
je
adc
stos
push
test
jge
lods
and
mov
rclb
popa
clc
jp
jecxz
sub
lret
cmp
rclb
sbb
push
mov
hlt
cmp
mov
rcr
jbe
adcl
adc
es
mov
jl
icebp
xchg
testl
inc
xorb
and
adc
jb
sbb
fbld
shll
arpl
imul
enter
clc
cmp
dec
mov
add
xor
in
and
test
out
push
mov
es
das
addb
jl
mov
ljmp
jo
shll
push
add
dec
dec
sub
mov
mov
shlb
xor
movsb
sar
sub
sub
mov
cmpsl
cltd
push
and
out
inc
pop
int3
lcall
sub
mov
xchg
cmp
fdivrs
cmp
repz
sub
aam
dec
mov
inc
jbe
pop
add
jle
dec
push
dec
notb
aad
xor
cwtl
jo
jns
dec
and
xor
lahf
pop
repz
aaa
fs
and
push
jb
adc
ja
or
fs
mov
adc
pop
cli
fs
or
xchg
je
jnp,pn
xchg
and
and
jge
pop
jge
or
lahf
push
popa
incl
and
loope
stos
push
xchg
and
xchg
and
adc
cmpsl
in
mov
fcoms
sub
and
arpl
or
cmpsl
call
dec
movl
cmpb
arpl
jno
xor
imul
rclb
cmp
pop
sub
sub
mov
adc
sub
mov
cmp
ret
in
shrl
dec
sbb
mov
push
xchg
mov
jb
mov
in
and
adc
loopne
push
push
loopne
dec
mov
psrlq
mov
xchg
sbb
and
mov
into
mov
fisubrl
inc
cwtl
add
mov
jge
xor
mul
mov
push
xor
pop
ljmp
xchg
mov
push
xchg
repz
pop
imul
xor
and
das
hlt
repz
pop
push
add
jge
adc
addr16
or
jb
cmp
sub
dec
push
mov
adc
mov
lahf
out
cmpw
pusha
pop
leave
pop
lds
fmul
movsb
ja
les
cmp
insb
push
jne
insl
cltd
sahf
jb
xor
fmul
xor
sbb
sub
xor
scas
inc
adc
out
lods
push
jae
or
mov
mov
inc
xchg
sahf
ss
adc
push
push
loop
mov
or
scas
xchg
or
popf
test
xor
mov
inc
push
mov
stos
mov
cmpsb
mov
stos
addr16
test
cmp
xor
jno
in
push
rcrb
jecxz
stos
cli
fiadds
shll
stc
dec
out
cs
mov
mov
sbb
cmp
push
int
ret
rol
jl
movsb
loope
daa
pop
in
mov
ret
fld
adc
pop
mov
and
sub
and
fsubs
pop
and
mov
insb
pop
dec
dec
mov
and
push
js
fisubrs
aad
icebp
add
sarl
jne
dec
fisttps
dec
fcmovu
icebp
and
das
imull
fs
pop
arpl
mov
jecxz
mov
sar
or
push
frstor
addb
sub
jnp
push
adc
lahf
xor
data16
outsb
mov
xor
jmp
mov
cmpb
mov
mov
lods
inc
sub
push
push
inc
or
outsl
cmp
mov
nop
das
fidivrl
outsl
jbe
scas
outsb
cmp
jo
out
xor
in
ret
pop
repnz
dec
pop
rcl
and
xor
mov
xchg
pop
test
add
mov
push
xchg
mov
lds
push
jbe
outsb
fistl
sub
inc
mov
push
fwait
popf
lods
stc
shll
jle
pop
fcmovnu
inc
adc
sub
xor
sahf
sub
icebp
jge
push
mov
mov
sub
fsts
push
sahf
hlt
xor
cmp
leave
mov
loop
dec
cmc
je
pop
mov
fwait
test
mov
iret
ret
rorb
ja
mov
sbb
addb
cmpsb
jecxz
leave
jae
or
cmpsl
arpl
popa
mov
aaa
int
mov
enter
popf
pop
enterw
inc
pop
out
mov
cmp
lods
dec
jle
test
int3
push
and
cmp
cmp
sbb
jo
sbb
mov
dec
psubb
or
mov
jo
cmc
fiadds
xchg
sbb
lock
inc
es
mov
loop
and
dec
push
jo
push
mov
cltd
xchg
add
fisttpll
jecxz
jo
pop
imul
xchg
in
sbb
jge
sbb
fstps
outsl
mov
popf
push
shrl
push
push
and
insl
push
dec
ss
icebp
shrb
ret
jns
outsb
int3
popa
inc
movsb
popf
pop
ss
jae
dec
lods
loope
lret
nop
cmp
add
xchg
into
mov
pushf
or
call
push
and
dec
jge
sub
sub
mov
arpl
mov
scas
pusha
stos
fwait
adc
cmp
in
cmp
fcompl
add
push
and
cmp
fcompl
add
xchg
or
test
mov
lea
xor
jmp
arpl
mov
call
xchg
jmp
push
and
gs
mov
push
sbb
je
add
mov
mov
call
shlb
lcall
xchg
loopne
mov
jne
enter
sub
or
and
sti
ljmp
cmp
sub
pop
dec
xchg
movsb
add
add
pop
mov
ss
or
xor
pop
lret
push
mov
aad
aaa
lea
push
pop
orb
pop
xor
push
inc
push
test
sti
arpl
rorl
lods
xchg
test
leave
mov
inc
call
cmpsb
jl
cwtl
mov
lock
mov
hlt
jecxz
rorl
repz
mov
dec
sub
pushf
pop
mov
js
std
test
orl
daa
cli
inc
add
push
or
xor
pop
jl
imulb
hlt
mov
hlt
xchg
mov
adcl
xor
sbb
and
clc
sbbb
sbbl
inc
xchg
xor
or
pop
subl
inc
fs
aam
cmpsb
cmpsl
push
sub
or
js
mov
mov
int
mov
aad
xor
add
in
lret
or
data16
ljmp
in
aad
lahf
pop
out
test
dec
sub
adc
aam
outsl
mov
fistpl
inc
adc
mov
jp
adc
jmp
cli
fdivrs
sbb
adc
sbb
mov
mov
mov
jg
repz
lods
sbb
cmp
pop
movsb
dec
xchg
mov
dec
mov
or
mov
mov
or
xchg
scas
pop
xor
sub
jl
mov
imul
int3
adc
shrb
cli
fiaddl
mov
gs
dec
ja
rcrl
mov
mov
roll
cli
push
in
mov
cmp
insl
out
imul
mov
xlat
pop
cmpsb
inc
data16
mov
push
or
fcoml
leave
dec
out
fcomi
sub
xchg
cmp
idivb
stos
inc
inc
push
adc
dec
xchg
push
jns
dec
scas
xchg
adc
stos
in
cmpsb
push
mov
loop
pop
repnz
rep
mov
lock
xlat
notl
push
es
pop
sbbb
pop
iret
and
or
clc
incb
fs
dec
mov
sbb
or
out
mov
pop
cmpsb
add
jg
loope
xchg
xor
xor
sahf
pushf
hlt
movsb
cmpsb
call
ds
cltd
pop
cld
cmc
call
dec
shlb
inc
in
cmc
test
addr16
or
jns
cmc
sub
icebp
push
movsb
inc
popa
or
add
ss
into
mov
jae
mov
mov
mov
mov
mov
loope
and
sbb
bound
xor
xchg
mov
cmp
ret
jb
ljmp
sbb
js
jne
or
repnz
shlb
jl
adc
and
push
xchg
gs
dec
out
pop
cmp
inc
cmp
inc
sub
sbb
lea
lret
stos
in
jns
cmp
xor
sub
bound
inc
sbb
dec
pushf
data16
pop
pop
mulb
loopne
xchg
jmp
nop
outsl
mov
dec
xor
mov
xor
jbe
mov
shr
aaa
ss
test
jae
jne
rcr
test
add
rcl
push
jae
pop
divl
insb
xchg
test
dec
add
push
sub
aaa
addb
imul
test
dec
cmpb
stc
push
sbb
lods
and
cmp
pop
mov
pop
data16
in
or
inc
cmp
icebp
inc
add
or
lock
pop
sub
lock
jmp
rol
ja
nop
in
rcll
addl
dec
lret
or
cmpsl
add
popf
pop
inc
pop
fisubs
sarl
clc
push
xchg
leave
dec
popa
lea
xchg
fninit
jo
rcrb
mov
repnz
sbb
mov
jb
fwait
pop
pop
lcall
add
push
stc
arpl
sbb
pop
mov
aaa
lahf
nop
inc
jmp
sbb
mov
insb
inc
inc
mov
xchg
sub
add
adc
xor
mov
push
imul
xor
fwait
repz
push
leave
dec
shr
int
xchg
sbbl
jnp
adc
aam
dec
mov
push
and
ds
out
insb
mov
xchg
mov
ss
movsl
mov
pop
cwtl
pop
movsl
push
xor
inc
dec
lea
pop
mov
xchg
add
clc
mov
jne
jge
ss
jmp
fnstcw
call
fwait
sti
mov
xchg
jle
xchg
imul
push
popaw
push
test
xchg
rcr
push
ret
sbb
fs
ss
inc
inc
hlt
gs
push
aaa
xchg
rol
loop
dec
mov
sub
lret
outsw
xor
iret
fwait
into
shll
and
pop
push
loop
push
inc
xchg
in
addr16
sub
xlat
mov
mov
inc
mov
mov
pop
jecxz
and
jbe
or
mov
imul
cmp
mov
pop
movb
inc
icebp
add
fnsaves
clc
jp
mov
cltd
aas
js
mov
push
shrb
jo
mov
cmp
xchg
sahf
icebp
mov
xchg
xchg
mov
ds
pop
jno
insb
movsb
pop
test
popl
shrl
inc
sbb
aaa
jbe
jle
jmp
xlat
mov
jbe
repnz
or
xchg
outsl
loopne
pop
filds
movsl
jmp
xlat
xor
jg
enter
or
sbb
mov
stos
dec
xor
mov
inc
and
lds
shll
mov
aad
push
cmp
insl
jg
dec
mov
addr16
xor
xchg
mov
cwtl
push
cmpsb
lcall
push
xchg
sarl
jecxz
xor
and
aad
insb
fistpl
ret
or
ret
xchg
xchg
mov
dec
loopne
mov
dec
and
mov
cmp
stc
mov
in
pushf
sub
adcb
lds
cmp
sbb
adc
xchg
mov
dec
push
cmp
sbb
jg
bound
mov
pop
test
mov
sbb
imul
out
xor
lods
inc
addr16
adc
sarb
xchg
or
xor
scas
loopne
rcrl
jmp
fsin
xchg
xor
jmp
jp
imul
sub
shlb
scas
jp
popf
jge
xchg
addr16
jecxz
push
add
jo
xchg
loope
jle
nop
jmp
scas
sbb
in
push
movsb
inc
lods
daa
in
mov
mov
insl
xchg
and
push
adc
inc
loope
adc
xorb
add
inc
nop
movsb
mov
outsl
aas
dec
xlat
mov
cmpsb
mov
mov
aad
fwait
sub
ret
fwait
es
es
js
pop
shlb
pop
lods
sti
cmp
xor
inc
fldt
push
dec
data16
sti
fnstcw
xchg
lret
adcl
jb
lods
loopne
add
mov
hlt
xchg
fwait
mov
push
fmull
pop
shr
mov
push
dec
add
xor
adc
ds
sbb
movsl
sub
imul
pop
or
lret
pop
xchg
sub
adc
pop
push
negb
pop
xchg
dec
mov
xchg
ja
fwait
mov
popa
dec
sub
xchg
or
sahf
add
ret
lds
dec
and
jmp
clc
cmp
mov
dec
xor
xor
aaa
mov
dec
outsl
and
pop
xor
cwtl
push
xor
inc
mov
fisubrs
je
in
in
int
out
adc
test
cwtl
fisttpll
mov
les
inc
sbbl
mov
addl
jge
mov
dec
std
fcmovnb
sub
je
mov
aad
cmpl
jp
fcomps
aaa
and
lea
pop
dec
mov
pop
into
cld
idiv
std
int
sub
dec
clc
cmpsl
scas
xchg
mov
das
les
cmp
mov
fiaddl
ret
lret
cmp
fs
dec
xchg
cmp
mov
pop
sti
add
jp
inc
cli
xchg
addr16
lock
pop
mov
je
sbb
loop
imul
lods
sub
sarb
fwait
mov
mov
sub
mulb
fwait
jne
test
sub
lods
stc
addr16
aaa
xor
or
mov
push
dec
test
cmpsb
sti
call
jb
pop
jnp
lods
add
add
push
clc
out
adc
xchg
adc
xor
test
fwait
and
jmp
mov
setae
cmp
xchg
mov
mov
cwtl
mov
test
fdivl
xor
xchg
movsl
mov
popa
inc
imul
cmp
push
jb
adc
stos
subl
aad
mov
mov
inc
adc
cmp
xchg
mov
sarb
in
cmp
jg
test
fs
dec
shll
sarl
loope
fs
or
pop
movsl
xor
cld
jmp
pusha
jae
test
sahf
lahf
xchg
push
imul
and
and
push
std
sbb
lahf
fistpl
cmc
xchg
mov
imul
dec
mov
sarl
lods
and
fdivrs
sbb
cwtl
aas
dec
sub
and
test
mov
shrl
out
divb
lods
add
sarl
testl
xchg
test
and
cmp
data16
out
xchg
xchg
push
lock
loope
aaa
sbb
jp
in
repz
aad
adc
mov
js
dec
cmpsb
hlt
mov
stc
xchg
adc
cmc
imul
mov
cmc
fs
cmp
std
loop
pop
xor
cld
xor
stos
mov
mov
mov
adc
lahf
pushw
in
xchg
aam
movsl
adc
xchg
and
lahf
cmpsb
or
xor
insl
add
pop
roll
insb
xor
mov
dec
sti
pmuludq
jne
insl
scas
or
pop
stc
adc
sti
test
fildll
shll
push
lcall
xchg
sbb
clc
xlat
xlat
fwait
negb
pusha
jbe
in
lock
std
lods
xlat
or
add
sbb
jg
sub
rol
cli
imul
call
leave
out
rclb
cmp
sbb
jecxz
rcrb
lods
repnz
jg
mov
mov
ret
lahf
aad
js
jecxz
addr16
mov
xchg
clc
bound
loop
push
pushf
rcrl
push
test
sub
inc
jne
or
in
pop
xchg
in
cltd
pop
lret
in
mov
mov
nop
sub
add
ljmp
ret
xchg
and
repz
lret
xchg
cmp
test
sub
jno
pop
hlt
xor
outsl
test
or
add
jae
std
into
mov
cmp
add
adc
jne
jle
scas
pushf
sbb
pop
stos
leave
loope
sahf
add
add
xchg
xchg
jb
popl
int3
inc
dec
scas
dec
jecxz
fildll
mov
cmc
xchg
dec
clc
jno
cmp
fnstsw
imul
es
sarb
push
cld
icebp
mov
dec
sbb
or
test
sti
xchg
cmp
mov
cmp
int
es
mov
pop
xchg
js
jne
dec
fs
outsl
push
xor
mov
into
xchg
sub
and
xchg
in
mov
xor
hlt
sbb
leave
rcll
cmpb
shll
cltd
test
jecxz
stos
jnp
xchg
xchg
cltd
pushf
or
arpl
lods
in
mov
std
push
sub
aaa
jl
mov
cmp
cmpl
out
popf
jmp
sub
mov
insb
dec
lret
dec
or
dec
int3
or
jp
jnp
repz
cmp
dec
dec
add
or
inc
add
dec
fstpt
and
add
pusha
sti
in
fwait
movsl
insb
and
clc
cmc
xchg
cmp
sub
cmp
xchg
idivb
shlb
enter
cmp
hlt
inc
push
leave
inc
fidivl
cs
scas
sbb
dec
outsl
lret
cltd
scas
and
movsl
push
jo
jmp
mov
dec
aad
lret
xor
inc
mov
mov
mov
mov
clc
addl
rol
out
je
ret
movsb
jle
cltd
pop
fisubrs
clc
dec
int3
add
push
jnp
inc
xor
sarb
or
fs
cs
cld
out
bound
les
cli
jg
cltd
adc
mov
mov
and
fldt
sbb
add
or
lods
jae
pop
jmp
mov
add
dec
jp
sbb
jecxz
fmuls
or
in
add
adc
cwtl
lods
hlt
cmpsb
out
daa
imul
push
mov
adc
aad
scas
scas
out
sbb
sbb
xor
jns
shll
and
mov
xor
jecxz
inc
pushf
sbb
lods
scas
das
inc
sub
mov
in
push
mov
loope
xor
pop
jg
or
shrb
jb
pop
mov
out
pop
hlt
add
cwtl
mov
mov
and
scas
adc
fxtract
sbbb
test
dec
inc
pop
nop
test
js
jge
cwtl
push
fcmovbe
mov
mov
jb
addl
jmp
mov
lock
lcall
lods
xchg
lcall
sbb
adc
addr16
mov
mov
push
mov
roll
push
add
shll
das
sbb
push
push
les
cmp
and
inc
pop
lds
xchg
add
movsl
frstor
aad
test
jne
inc
outsb
stos
jl
pop
data16
lahf
inc
stos
lods
aaa
mov
stos
popf
cmp
sub
int3
ret
repnz
repnz
sub
ficomps
cmc
js
jb
fildll
push
cli
cld
aas
aaa
mov
jno
dec
aas
pushf
xlat
stos
in
push
pop
stc
outsl
imul
push
xor
add
xorl
mov
pop
push
paddusb
inc
cltd
pop
rclb
lret
jmp
xchg
pop
push
cs
cli
xor
pop
mov
out
cmpsl
test
cmp
push
int3
ja
repnz
sbb
cltd
cmovb
adc
xchg
jle,pt
ja
pop
sub
cmpsb
or
cmp
xor
inc
mov
add
mov
jae
xchg
scas
test
leave
aaa
mov
fnstcw
jp
jnp
int3
cld
mov
jno
sub
cmpsl
jmp
add
int
pop
lahf
leave
mov
and
push
cmpsb
pushf
mov
sbb
fisubs
loope
sbb
fstps
ss
test
mov
fwait
xor
mov
or
pusha
push
sbb
pop
inc
scas
aas
add
pop
aas
xchg
insb
mov
mov
push
jl
xor
negb
xchg
xor
addr16
adc
push
cmp
or
sbb
lods
movsl
or
xchg
or
and
jle
popf
mov
outsb
adc
dec
imul
xor
push
lret
push
cmp
cmpsl
add
imul
outsb
dec
pushf
push
push
xor
and
add
pop
fisubrs
in
xacquire
loopne
icebp
or
adc
js
enter
mov
mov
cmp
xchg
fwait
lret
push
xor
mov
fldt
mov
test
mov
sbbb
bound
pop
xlat
mov
push
jnp
daa
or
or
mov
xor
cld
sbb
xchg
movsl
mov
mov
lea
das
inc
pop
enter
xlat
movsb
in
jp
sub
add
dec
push
inc
jo
xor
pop
inc
imul
xchg
mov
outsl
xor
and
fdivl
js
aad
sbb
mov
mov
xchg
sbb
mov
loope
fidivrl
popa
mov
loopne
fistl
std
mov
xchg
lods
dec
clc
pop
lea
shl
or
pop
int
or
out
mov
or
clc
sub
inc
fnsave
push
shlb
lock
fstl
hlt
in
shrl
test
xchg
and
and
mov
mov
push
icebp
inc
test
jnp
or
leave
outsb
xor
jo
fdivrs
mov
mov
data16
xor
dec
in
mov
adc
mov
mov
jns
cli
cmp
out
sbb
rcl
cmp
aad
test
push
jno
mov
int3
fstl
inc
lock
cmp
fwait
loopne
cmpsb
pop
mov
das
mov
cmpb
lret
or
mov
mov
addl
xor
push
push
lods
lea
jnp
cmp
je
lock
mov
adc
dec
add
xchg
jecxz
sbb
shlb
das
mov
cmp
cmpsl
push
push
adc
cld
mov
les
sub
push
mov
addr16
inc
pusha
mov
daa
sub
cwtl
dec
ret
sub
rorl
aam
xchg
mov
jns
out
xor
jae
jnp
or
mov
lret
xor
outsl
jl
adc
jb
xor
out
das
push
pop
jae
js
loope
jmp
int3
aas
mov
aad
insl
lcall
mov
ja
arpl
decl
hlt
xor
lret
into
or
add
cmp
int
test
pop
das
outsb
mov
mov
pop
rcrb
popa
mov
jne
sub
xlat
imul
jbe
inc
cmp
cmpsb
pushw
adc
xor
mov
add
push
ficomps
dec
call
mov
sub
ss
lret
aaa
stos
sbb
mov
cmp
pop
push
dec
pushf
and
cmp
mov
ds
fnstsw
cld
push
stos
lds
xchg
push
or
subb
pushl
xlat
scas
movsb
fidivrs
in
xchg
iret
and
push
addr16
jo
std
dec
push
popa
inc
movsb
jb
fldt
int
pop
xchg
imul
xor
push
cmpsl
sbb
loopne
xchg
mov
mov
lahf
jl
aaa
loop
fdivs
sbb
cmp
insl
and
dec
and
push
mov
movsl
movsl
daa
mov
push
mov
mov
ja
jmp
dec
sub
inc
leave
dec
jns
dec
adc
cmpsb
pop
inc
std
sbb
pop
dec
xor
jle
mov
jnp
adc
cmp
sti
jmp
lods
xchg
lods
in
and
addr16
cltd
xor
xor
pop
sub
jbe
rcll
xor
leave
sbb
lcall
pop
xor
out
ja
pop
jnp
and
ljmp
cmp
int
ljmp
loopne
push
xorl
shrl
adc
jmp
mov
add
adc
mov
xor
xchg
push
mov
enter
call
rorb
adc
cmc
pushf
jecxz
shll
sbb
mov
pop
xor
jno
mov
or
push
xchg
jl
add
inc
imul
fstl
sbb
xchg
sub
jecxz
xchg
mov
sbb
push
xor
sbb
es
mov
mov
adc
test
sti
jl
cmp
pop
arpl
movsb
arpl
push
push
nop
loopne
stc
mov
lods
in
xchg
sti
imul
ds
cmp
cmc
scas
mov
xor
test
insb
pop
jnp
jp
xchg
jne
fwait
jmp
pop
cmpsb
mov
into
push
jne
popa
pop
jg
int3
popf
out
adc
adc
push
jne
cmpsb
pop
mov
mov
clc
push
in
test
mov
xchg
hlt
mov
pop
dec
or
int
adc
push
std
dec
xor
fcomps
into
inc
loop
and
addr16
add
mov
aas
mov
in
xchg
int3
je
cmpsb
int
adc
jecxz
lret
jo
push
cmp
xor
sbb
and
dec
imul
xor
rorb
popa
call
pop
aas
aaa
sbb
mov
stc
in
xchg
sub
inc
or
mov
fnstcw
pop
mov
shll
out
bound
mov
in
clc
pop
pop
xor
or
push
xor
and
dec
mov
cmp
lcall
xchg
fidivrs
lcall
imul
in
sbb
inc
js
into
xchg
call
pop
daa
mov
pop
lds
mov
dec
push
pop
sub
std
mov
dec
scas
pop
repz
aam
jle
xchg
cmp
mov
pop
push
mov
enter
int
popf
adc
sahf
lcall
cmp
dec
pop
sub
inc
push
pop
js
xor
loop
xor
jecxz
inc
and
xchg
pop
mov
ficomps
pop
test
xlat
lea
sahf
test
int
or
sbb
push
fnstsw
lock
fadds
loopne
shr
out
repnz
mov
add
xlat
adc
cli
aaa
int3
stc
shrb
dec
lret
mov
jp
push
aaa
mov
std
mov
jle
mov
jb
and
outsb
dec
inc
cltd
rol
push
dec
imulb
mov
sbb
xchg
rclb
or
in
mov
clc
cltd
dec
add
inc
push
movsb
call
pop
mov
adc
lock
and
xchg
fistl
repz
ret
movsl
dec
mov
and
enter
add
pusha
dec
outsl
push
mov
repz
stc
inc
inc
mov
xchg
lock
fisttpl
sti
ret
pop
cmp
dec
pop
mov
push
push
mov
stos
test
test
inc
push
fwait
xlat
jmp
loopne
imul
dec
in
sbb
inc
add
shrb
and
cmp
push
mov
and
lahf
clc
jge
jo
aas
jg
pop
icebp
pop
inc
movsb
sarb
pop
or
fildll
dec
adc
jle
pop
subb
sbb
loopne
in
xchg
mov
add
xlat
jne
pop
xchg
jb
rcrb
inc
jp
fdivrs
jg
andb
xor
pushf
inc
push
pop
push
aas
jnp
xor
mov
roll
cmp
xchg
data16
and
ljmp
jmp
pop
fwait
inc
lock
ja
outsb
fdivs
aam
andl
xchg
dec
fcompl
js
push
push
fistps
push
cvtdq2ps
inc
xlat
pop
cmp
loope
add
jge
inc
pushf
idiv
or
add
fnstsw
cmc
inc
cmp
jecxz
inc
cmc
jbe
rep
pop
rcrl
push
insb
jbe
lea
xchg
pop
hlt
xchg
mov
lock
and
push
jp
adc
mov
push
sbb
cmp
mov
aas
xchg
cmpsb
mov
fiadds
mull
adc
mov
out
test
scas
call
insb
add
xor
popf
emms
mov
lods
add
rclb
lcall
dec
notl
in
cmp
sub
and
pop
xchg
dec
mov
cmp
jge
pushl
add
fildl
and
cltd
sub
xchg
dec
xor
xlat
insl
mov
push
and
xlat
mov
sbb
push
xchg
addr16
push
sbb
sub
cmp
rol
popf
jb
inc
jnp
stos
stos
rolb
clc
sbb
dec
xlat
or
add
add
mov
xchg
jb
mov
inc
roll
xor
dec
pop
loope
daa
pop
dec
jl
mov
rcl
and
leave
inc
cltd
fsubl
cmc
out
scas
pushf
cmp
inc
jno
ds
xchg
cmc
cmp
jge
fisttps
cmc
sbbb
out
cmovl
scas
xchg
ja
enter
das
mov
cld
add
pop
dec
sar
fwait
push
dec
mov
sbb
scas
and
push
scas
adc
movsl
jmp
enter
push
sub
out
mov
inc
mov
out
sbb
rolb
and
out
pop
mov
sub
icebp
pop
ret
mov
xchg
push
sarl
fisubrs
repz
popa
xchg
rcrb
jmp
gs
push
pop
bound
sar
sti
loop
sbb
orl
sarl
dec
xor
shr
add
test
cmp
lds
mov
cmp
dec
push
cs
out
in
adc
loopne
jg
stc
arpl
inc
or
mov
int3
outsb
loopne
ljmp
adc
add
fstl
xor
cltd
or
out
adc
pop
cmp
das
pop
mov
mov
test
in
lret
jae
loop
cmpsb
sub
jl
or
jmp
fiadds
add
and
inc
popf
bound
xchg
push
js
mov
cmp
or
leave
push
xchg
fs
aaa
test
into
jecxz
xchg
jp
sub
lods
mov
lds
mov
or
movsb
push
dec
mov
leave
xor
dec
adc
addr16
sbb
jae
es
or
mov
movsb
fwait
cmc
aas
fbstp
inc
mov
push
jmp
ffree
xchg
or
pop
subb
dec
movsl
and
aas
sub
jg
clc
scas
icebp
aam
adc
push
push
shll
mov
stos
sub
dec
push
imul
int3
push
pushf
cli
jae
cmpsb
das
inc
add
bound
xor
adcb
and
cmp
cmp
fcoml
call
sub
enter
sbb
xchg
mov
cmp
xchg
inc
inc
in
addb
jbe
or
inc
sbbl
pushf
xchg
test
pcmpgtw
mov
jmp
mov
jle
jae
enter
subl
int
dec
aas
inc
mov
inc
out
xor
adcb
mov
fcoms
fiaddl
movsl
mov
int
mov
inc
xor
mov
movsl
lock
mov
xor
mov
add
inc
cs
mov
addr16
dec
test
mov
dec
movsl
les
dec
iret
sbb
and
inc
leave
jno
ret
xor
lods
add
jno
out
sub
mov
scas
push
push
sbb
xor
scas
das
adc
clc
stos
roll
aaa
mov
fisubs
pop
stc
arpl
dec
sbb
std
cltd
adcl
mov
dec
jne
leave
ret
cmp
fldcw
inc
add
gs
push
mov
aaa
mov
stos
sbb
cltd
les
jle
xchg
orb
fists
stos
jbe
not
dec
xor
mov
xchg
dec
cwtl
xchg
xor
sub
cmp
imul
push
adc
adc
ficoms
lods
insl
adc
iret
xorb
lcall
dec
xor
cld
push
stos
jp,pn
push
or
inc
repnz
jp
scas
add
js
mov
addr16
cmp
push
lcall
aas
mov
ds
push
push
aaa
mov
lods
inc
and
push
test
mov
xchg
dec
xor
sbb
pop
xor
jl
aas
fs
cwtl
pop
sti
mov
mov
xchg
push
jnp
std
xlat
cltd
add
push
in
mov
jmp
in
adc
lret
jo
loopne
in
push
mov
shrb
out
xchg
aam
in
scas
mov
mov
or
stos
lahf
in
or
mov
push
adc
pusha
jmp
pop
and
mov
push
mov
sub
hlt
fmulp
arpl
pop
push
loope
adc
push
inc
call
jp
cmp
sbb
stos
repz
cmp
addr16
in
mov
mov
xor
jg
stos
jl
or
sub
mov
jo
dec
mov
mov
lds
pop
add
adc
mov
add
popf
xchg
push
lds
xor
mov
in
pop
and
push
fsubs
outsb
clc
mov
mov
push
test
jbe
dec
mov
jnp
insb
arpl
jl
shll
enter
ljmp
add
mov
mov
fisubrs
mov
inc
inc
inc
jbe
loopne
push
inc
inc
lods
xor
dec
dec
and
arpl
push
jno
jl
adc
cmp
and
and
bswap
mov
rol
loope
pop
inc
pop
xlat
addb
out
sub
loop
add
fsubrl
in
mov
adc
cs
xchg
mov
xor
es
inc
das
ja
xor
in
incb
and
andl
loope
mov
jbe
adc
ret
repnz
mov
add
add
xchg
inc
ret
imul
out
mov
push
mulb
ret
addl
sub
pop
lods
xchg
fidivrs
movsb
xchg
inc
mov
push
insl
push
sub
sub
out
mov
xorb
jo
ss
mov
lahf
inc
xchg
lahf
call
add
arpl
xor
cmc
xchg
ds
popf
jae
ja
xor
in
clc
sti
hlt
mov
dec
aad
jle
xor
test
sub
es
jnp
stc
jp
cmc
mov
inc
mov
rcll
rclb
dec
push
push
and
xchg
add
imul
push
pushf
xor
add
scas
mov
sbb
js
std
and
rcl
popa
shll
ljmp
push
push
addb
mov
pop
dec
testl
fisttps
pop
pop
inc
stos
rcll
movsw
or
fmuls
js
cs
add
mov
test
in
xor
addr16
sbb
stc
cltd
cmp
leave
xor
mov
dec
mov
in
xlat
les
push
fmul
fwait
rorl
iret
adc
pop
adc
sub
cmp
ss
and
das
cmp
outsb
lret
loope
sbb
mov
jno
pop
sar
push
and
inc
add
sbb
bound
mov
leave
push
fwait
dec
adc
or
and
pop
sub
xchg
leave
scas
roll
sbb
pop
data16
mov
and
jo
mov
jnp
xchg
jns
loopne
mov
jecxz
cmp
test
add
fistl
and
inc
ds
lds
push
dec
mov
and
sbb
jecxz
and
cld
pop
sbb
stos
mov
push
mov
push
aam
mov
insb
inc
xchg
ret
sub
movsb
sahf
and
sarl
adc
xor
jb
sbb
adc
mov
mov
xchg
idiv
jg
sbb
inc
add
sub
inc
adc
xor
push
mov
mov
xor
out
cwtl
or
cmpsl
movsl
nop
popa
fstpt
jmp
push
lcall
ljmp
popf
and
xlat
fstpl
test
inc
mov
in
fstl
rcrl
ret
out
adc
js
jle
rcr
push
sub
sbb
pusha
in
jl,pt
pop
stos
scas
cwtl
shlb
sahf
mov
dec
test
sti
out
push
or
sub
or
mov
push
xchg
mov
std
aaa
and
push
and
push
in
pop
mov
movsb
mov
cmp
cmp
iret
inc
pop
mov
pop
mov
jmp
lods
xor
int3
add
pop
sahf
mov
mov
inc
lock
insl
xor
jb
cmp
cmpsb
xor
push
mov
xor
repnz
inc
inc
add
loopne
mov
shlb
dec
addr16
jg
xchg
sbb
push
xchg
push
xchg
in
inc
xchg
xor
adc
mov
pop
repz
ds
pop
add
dec
in
cmp
dec
jmp
dec
cmpsb
insl
fs
jae
imul
jmp
es
jnp
cmp
and
inc
jle
add
cwtl
or
sbb
ds
fld1
sti
xor
xor
les
mov
xlat
enter
das
test
ljmp
cs
xchg
cltd
mov
xchg
inc
in
pop
add
loope
sahf
arpl
lret
shlb
push
rcrl
inc
pop
lcall
pop
mov
scas
inc
pop
das
enter
inc
add
jmp
and
idivb
ret
pop
xor
xchg
mov
jne
push
push
rclb
imul
sub
push
pop
js
and
mov
repz
imul
cmp
ja
das
inc
mov
sub
jecxz
jg
mov
aam
out
push
into
popa
or
mov
addl
mov
fwait
andb
pop
and
mov
xor
fdiv
add
imul
pop
mov
cmc
jnp
and
iret
iret
push
je
repz
sbb
pop
jns
push
jns
ja
push
inc
and
push
xchg
les
test
fs
pushf
lcall
cmc
or
add
aaa
cmpsb
sbb
add
dec
cld
lods
insl
daa
xor
or
ffreep
inc
cmc
jmp
mov
test
jl
in
mov
ja
inc
pop
push
lods
fs
in
ret
das
hlt
mov
pop
push
mov
sbb
mov
jl
iret
sbb
add
ljmp
inc
mov
cmp
sub
jo
adcb
ja
cmpxchg
inc
popf
inc
mov
adc
ficoms
xlat
fiadds
mov
cmp
or
add
popaw
adc
aam
xchg
and
les
mov
add
inc
nop
jb
cld
cs
enter
loop
out
cmp
push
and
sbb
out
cmp
pop
lret
mov
and
inc
xor
adc
dec
aad
mov
scas
add
sbb
jnp
sub
scas
lods
mov
sub
hlt
dec
pop
cmp
push
add
std
add
ja
ljmp
sbb
xor
cltd
mov
adc
sbb
cmpsl
push
push
addl
cmp
xchg
adc
push
and
push
push
movsb
mov
dec
shlb
adc
pop
jp
fsubrs
push
ds
push
mov
int3
pop
in
inc
xor
sbb
jmp
inc
enter
sti
add
stc
outsb
add
push
mov
jge
push
push
in
sahf
das
jmp
dec
sub
sub
sbb
repnz
test
mov
mov
rolb
sahf
fsubrl
inc
adc
pop
and
lods
jmp
mov
fcoml
rorb
js
fnstenv
icebp
push
pushf
pop
loope
jo
fisttpl
out
pop
adc
xor
popa
xor
fldt
test
cmp
inc
scas
jmp
and
sbb
fisubl
jb
in
and
shrl
cs
push
cmpsb
sub
cmp
loopne
mov
sahf
lock
jno
fiadds
rcll
mov
push
dec
mov
ss
xor
lock
pop
jnp
mov
cmp
pop
jae
sub
les
popf
call
dec
movsl
int
lret
fmuls
add
in
lods
inc
out
stc
insl
enter
pop
movsb
mov
fwait
and
sbb
jge
sbb
sub
cmc
fidivrl
dec
stos
and
dec
pop
out
mov
aaa
daa
dec
adc
ret
cli
xlat
lds
orl
or
and
xchg
add
clc
xchg
xor
sub
sbb
mov
leave
flds
adc
jne
sub
movsb
jmp
pop
cs
push
negb
push
movsb
inc
cmc
les
xchg
cmp
and
dec
push
add
push
lahf
test
xor
cmp
add
push
xlat
mov
mov
and
roll
add
xchg
loopne
mov
cmp
jb
push
xchg
je
sar
mov
mov
add
nop
mov
popl
fcomip
fsubs
push
push
shrb
pop
ss
jg
dec
jbe
mov
mov
into
imul
rcll
pusha
dec
mov
stc
or
jle
xor
push
out
push
test
jnp,pn
out
fldenv
idiv
jnp
popl
mov
gs
movb
xor
aad
nop
sbb
xchg
xor
loopne
xor
mov
faddl
or
scas
lock
daa
pop
notb
bound
fsubrs
mov
aas
stc
loopne
push
push
adc
mov
int3
add
xchg
rclb
fistl
leave
jle
movsl
cmp
pop
lahf
adc
mov
pop
mov
mov
movsl
in
push
pop
push
xor
testb
xchg
dec
push
xor
leave
sub
call
xchg
push
test
shl
adc
xchg
into
lcall
dec
mov
data16
mov
inc
xor
lea
sub
out
shll
dec
sbb
rcrl
mov
lcall
xor
in
mov
cmc
das
sbb
mov
add
fucomi
in
dec
add
popf
mov
and
push
cmc
inc
ja
cmpsb
lea
mov
sbb
xchg
push
es
mov
ret
xlat
add
or
cmc
arpl
xchg
int3
dec
popf
test
add
gs
pop
test
loope
popf
push
mov
movsb
cmp
out
addr16
aas
and
mov
xchg
mov
add
jae
mov
inc
call
mov
cltd
adc
jno
jno
adc
adc
inc
stos
sbb
mov
mov
fpatan
imul
testl
daa
xlat
push
xchg
adc
inc
sbb
jg
dec
stc
cmp
in
mov
xor
divb
mov
inc
ds
movsl
ja
xchg
cmp
cmc
fsubl
cmpb
shrb
sub
lcall
sub
add
jbe
jmp
cmpsb
mov
mov
das
jp
insl
dec
mov
pop
jns
adc
lret
or
ret
sub
pop
nop
and
lods
not
in
movsb
cvtps2pd
jnp
inc
iret
aad
mov
sbb
je
insl
xchg
cmp
mov
insb
sub
inc
inc
out
add
add
pop
and
js
cmp
or
mov
lret
fstpt
pop
movsb
js
lock
out
or
fisubs
cli
mov
in
inc
stos
ret
push
sahf
into
int
mov
and
lret
mov
std
enter
pop
mov
addb
mov
daa
iret
aad
mov
mov
shlb
dec
test
mov
and
nop
lahf
ret
iret
xchg
push
lret
fwait
xchg
push
sbb
jecxz
fcmovnb
cmp
insb
mov
jecxz
inc
cs
or
pop
mov
in
pop
sub
jns
test
aam
addr16
loope
loope
call
divl
fldcw
icebp
ljmp
mov
es
fstl
push
dec
cmp
cmc
mov
cltd
xchg
push
subl
pop
leave
pusha
lahf
loop
std
clc
test
inc
ret
dec
lea
dec
jbe
pop
in
insb
ss
js
cltd
mov
cmp
add
stos
mov
rorb
or
pop
movsb
mov
sbb
inc
loope
cmp
fwait
xchg
mov
mov
scas
fs
cmc
mov
jns
push
mov
mov
sbb
pop
add
push
in
daa
mov
shlb
xchg
mov
adc
fisubrl
ljmp
fisubs
dec
lea
notl
push
out
and
ja
nop
add
push
and
inc
and
jo
ret
sub
shrl
and
pop
dec
daa
sti
dec
mov
or
addr16
jl
inc
sub
sbbb
cld
fbld
lods
es
inc
popa
inc
fidivl
xor
add
adcl
dec
mov
mov
mov
mov
mov
daa
jl
xor
je
lds
mov
lods
xchg
lcall
jo
in
fcomps
data16
les
filds
mov
call
popa
lret
pushf
push
roll
loopne
nop
idivb
int
je
movsb
push
mov
rcll
jo
mov
js
xorb
rolb
movsb
or
push
iret
fstpt
pop
hlt
stos
inc
mov
clc
mov
mov
sbb
fisubs
xor
dec
dec
cmpb
or
fistpl
pop
add
xchg
inc
dec
add
in
and
adc
pop
push
out
adc
enter
repz
xor
decb
xor
xchg
fildl
sti
fcompl
mov
or
cltd
fiaddl
xor
pop
out
sbb
cs
jno
stos
test
addb
or
pop
leave
push
or
dec
stos
lret
mov
sub
adc
mov
ss
dec
xchg
cmpsb
popa
pop
sti
mov
in
loop
dec
and
lods
or
lret
pop
stc
lcall
js
dec
js
outsb
fsubrs
dec
out
addr16
outsb
cmp
cmpsb
das
mov
ja
lahf
ss
cwtl
scas
dec
and
sub
xor
les
pop
fmull
lahf
add
dec
aaa
jb
push
add
mov
mov
sub
jg
add
insb
mov
push
mov
sbb
shrl
xchg
int3
push
or
or
ja
mov
mov
es
aas
and
dec
mov
fimull
add
je
or
mov
and
jmp
xor
addl
xor
push
xchg
pop
rcll
push
cmp
jp
into
xchg
sbb
repnz
das
xor
ss
and
sbb
xchg
std
rclb
mov
enter
pop
fst
mov
in
adcb
fdivrp
hlt
jp
lcall
xchg
jns
mov
cmp
popa
or
xchg
das
mov
test
inc
movsl
and
cwtl
lds
inc
add
mov
popf
pop
fnstenv
jge
lea
mov
jmp
add
mov
les
pop
or
inc
frstor
mov
cs
push
mov
daa
xor
mov
add
rol
xlat
dec
jb
or
and
or
rorl
out
xchg
cld
iret
adc
clc
addl
add
daa
pop
mov
xor
push
ja
inc
hlt
clc
add
jne
xor
fldenv
mov
cltd
mov
div
mov
and
data16
inc
dec
idivb
cltd
fsubrl
mov
xlat
in
add
and
mov
int
stc
adc
mov
and
lret
or
mov
cmpsl
int
and
and
jns
imul
sub
jne
ret
sub
or
pop
push
cmp
jns
inc
xor
inc
js
sbb
sbb
in
inc
sbb
jnp
lock
adc
mov
push
push
and
iret
pop
sub
cwtl
jl
mov
fdiv
sbb
ficomps
mov
mov
scas
inc
scas
add
ds
push
repnz
jb
xor
pop
into
ret
jl
cmp
xor
mov
pop
out
shl
fcoml
ja
sub
aas
jle
add
pop
xlat
out
scas
or
test
cmp
adc
xor
loope
lcall
pop
xor
roll
fwait
pop
mov
add
mov
sbbl
iret
sbb
hlt
adc
loopne
sti
nop
mov
aam
adc
in
scas
lahf
sub
scas
mov
mov
dec
cmpl
cmpsl
mov
out
fsts
das
sub
daa
mull
insl
lahf
push
insb
in
cmc
repnz
xor
andb
into
pop
mov
add
mov
cmp
mov
or
mov
mov
enter
adc
pop
incl
movsl
icebp
adc
fsts
in
push
out
inc
xchg
mov
jmp
mov
mov
cs
daa
xchg
je
mov
xlat
jmp
add
mov
rol
jo
dec
sub
dec
cmpsb
out
inc
jb
stos
push
enter
jl
aas
daa
popf
cmp
fs
repnz
jns
sahf
jno
jns
aam
and
aas
lahf
push
pop
mov
scas
lret
fprem1
popw
inc
lods
ss
movsl
fstpl
pusha
adcb
mov
outsb
push
sbb
sbb
push
rcrb
stos
movsb
jmp
orb
push
jne
ljmp
int
mov
mov
shll
push
test
add
ret
test
dec
fs
rolb
dec
stos
pop
or
cmpsl
ss
pop
ja
sbb
imul
fsubrs
mov
js
pusha
push
push
loope
adc
arpl
scas
inc
loop
call
imul
std
clc
daa
cmp
ja
jae
gs
add
inc
scas
inc
nop
leave
fwait
adc
sbb
arpl
popf
or
xchg
adc
addr16
pop
test
push
ja
jns
imulb
out
mov
sub
xchg
jl
mov
inc
sbb
loope
gs
xlat
xchg
outsb
cmp
test
ljmp
jg
inc
mov
add
xchg
adc
push
jmp
sbbb
notb
or
loopne
ljmp
mov
push
mov
jmp
dec
xchg
push
lcall
adc
in
pop
pop
imul
loope
cmp
xor
movsb
jmp
not
fdivr
and
xchg
clc
adc
orl
dec
test
ljmp
push
lret
mov
adc
enter
shrl
add
xor
mov
jg
test
cli
sbbl
pop
aad
hlt
arpl
sbb
popf
rorb
add
test
mov
jp
imul
fs
lods
inc
adc
int
icebp
mov
sub
icebp
push
in
shrb
mov
push
pop
jns
xlat
lahf
xchg
or
push
xor
inc
in
mov
gs
push
test
or
pop
cmp
popa
sti
ficomps
outsl
jmp
aad
enter
jmp
sub
pushf
pop
mov
xchg
sbb
sbbl
jmp
mov
xchg
inc
scas
push
ja
sub
jbe
bound
mov
cld
cmp
repnz
in
sub
sub
push
lds
dec
and
ficoml
outsb
pop
mov
cmpsb
fs
push
int3
aam
rcll
lds
ja
cmp
push
jecxz
and
pop
cmp
xor
adc
popa
pop
add
jb
int3
pushf
push
mov
pop
ret
xchg
repnz
cli
jbe
sub
mov
ljmp
jns
push
adc
mov
pop
sbb
xor
fs
and
ss
add
popl
in
movsb
push
iret
xchg
and
cmc
test
jnp
xchg
lds
mov
sbb
cmp
push
sbb
add
jecxz
add
repz
push
xor
leave
xor
adcb
inc
push
test
fcompl
cmp
sarb
inc
fmull
test
cli
insl
xchg
loopne
rclb
test
or
in
aad
repnz
scas
shlb
pusha
cmc
add
pop
push
por
imul
adc
inc
mov
rcr
sahf
cld
jno
sbb
loopne
push
mov
xor
aad
and
xchg
popf
add
out
gs
jae
pop
lods
sbb
dec
outsb
and
mov
test
jp
into
add
repz
pop
xchg
sub
cltd
adc
dec
aaa
xor
int3
cmpsb
fisubrl
xchg
mov
and
push
xor
pop
icebp
repz
imul
mov
outsl
push
inc
test
jbe
lret
xchg
cli
mov
push
stos
negb
es
sbb
inc
rorl
or
ds
in
jbe
mov
mov
cmp
jge
les
lcall
lcall
icebp
push
dec
test
shr
fsts
mov
fldcw
jno
jecxz
in
std
or
adc
push
sub
adc
push
mov
int
pop
push
xchg
mov
daa
jns
push
sub
xor
dec
push
fstpt
fidivl
scas
lods
sbb
jg
fldcw
nop
xchg
sahf
aaa
enter
int3
cmp
jae
and
call
mov
mov
jbe
adc
xchg
mulb
and
mov
fs
rcrb
and
mov
insb
jg
xchg
out
adc
sub
add
aam
hlt
sub
loope
xchg
add
je
adc
jp
pop
enter
mov
enter
dec
xchg
iret
test
push
jmp
mov
add
fwait
sub
push
add
mov
nop
inc
jnp
adc
cmpsb
sti
leave
nop
pop
pop
in
arpl
and
mov
daa
xor
mov
mov
push
dec
push
out
pop
mov
cmp
and
xchg
gs
stos
sbb
lret
push
lcall
jo
xor
loope
and
push
fistpl
inc
sahf
sub
mov
adc
mov
int3
dec
push
xlat
in
test
and
jo
in
dec
arpl
jecxz
cli
mov
xor
jns
and
data16
sub
test
lods
pop
out
xor
fxch
addr16
and
mov
js
sbb
fisubrl
ljmp
shlb
jae
lahf
adc
inc
iret
jbe
sti
dec
or
call
mov
sbb
aas
mov
out
push
rcrl
xchg
pop
push
xchg
dec
clc
push
je
inc
hlt
cmp
sbb
imul
enter
out
sub
mov
or
imul
dec
das
fdivs
push
jmp
or
fstps
hlt
dec
inc
nop
jns
outsl
dec
arpl
pop
ljmp
rclb
loope
or
js
imul
gs
fnstsw
adcl
ja
xchg
mull
or
add
cltd
pop
mov
and
add
ffreep
xchg
into
mov
ja
enter
fimull
fiadds
adc
fwait
mov
roll
scas
cmpb
push
repz
cmp
movb
and
cmpsb
mov
cs
pop
sahf
sub
jbe
or
xchg
aad
ljmp
push
test
arpl
lret
dec
push
and
jo
nop
imul
ret
xor
decl
nop
mov
mov
adc
filds
scas
push
loope
mov
rcll
sbb
loop
pop
dec
ss
js
sbb
and
add
outsb
fbld
cmpsl
mov
mov
and
out
mov
inc
aas
jle
push
pop
or
xor
lock
mov
push
mov
shr
lds
fstpl
xor
xor
xchg
aad
jbe
icebp
xchg
and
or
add
loope
loope
stc
mov
mov
jne
out
adc
int3
cmp
out
mov
sbb
sub
int
pop
xchg
mov
push
adc
cmp
mov
adc
popa
fidivl
cmp
incl
inc
pop
ret
sbb
insb
js
pop
in
insl
or
sbb
les
adc
iret
add
scas
xchg
push
lcall
or
sbb
fsubs
and
lods
mov
add
xor
mov
jno
mov
test
sbb
mov
js
push
movsb
stos
push
cmp
inc
push
pop
or
cmp
in
arpl
negl
inc
sub
inc
mov
jle
or
push
repnz
stos
roll
push
cmc
into
jg
and
leave
movsl
lahf
lock
and
xor
imul
ja
mov
mov
mov
les
inc
jbe
lret
cmp
pop
mov
mov
lock
cli
aam
sti
in
sub
stos
sbb
jno
jl
adc
xchg
inc
push
stos
lea
insb
and
insl
lcall
pushf
jl
rolb
int
rcrb
mov
stos
lock
and
idiv
add
or
adc
inc
push
xor
mov
add
mov
inc
mov
cmp
or
nop
add
outsl
sub
std
and
fldlg2
shr
notl
adc
stos
sub
aaa
stos
iret
or
sbb
popl
push
leave
add
inc
aaa
inc
xor
cld
cmc
mov
inc
dec
jnp
iret
jl
mov
testl
and
push
in
out
ret
js
pop
in
arpl
sub
mov
repz
mov
ss
loop
or
xor
and
mov
push
scas
cmp
cld
hlt
adc
dec
ja
icebp
sub
xor
dec
sub
lret
jecxz
mov
pop
xor
jl
sbb
repz
cmpsb
sub
imull
pushf
mov
sbb
mov
push
cltd
rorl
dec
lahf
in
loopne
push
divb
loop
cwtl
sbb
rcrl
mov
push
mov
cmpsl
repnz
cmpsl
dec
or
je
mov
push
jnp
dec
push
mov
in
mov
mov
add
and
xor
adc
lahf
and
test
enter
out
xchg
call
or
test
inc
ret
fldcw
dec
fs
push
gs
pusha
repnz
adc
or
add
lahf
mov
mov
push
sub
sbb
mov
jl
roll
add
shrb
loope
mov
int3
ljmp
dec
jne
ds
lahf
fwait
sub
enter
lds
xor
shl
fnsave
lret
pushf
jl
shl
outsl
sbb
sub
push
outsl
jns
mov
subl
mov
pushl
dec
push
mov
xchg
dec
push
dec
shl
addb
out
and
jnp
xor
aad
dec
test
pop
xor
push
in
xchg
push
adc
push
pop
cld
push
inc
daa
fwait
test
mov
in
das
ret
hlt
mov
push
ljmp
cmp
push
fstpl
mov
sbb
jb
mov
daa
cltd
insb
xor
lods
xor
pushf
fwait
divb
test
mov
pop
fadd
mov
fwait
or
lcall
rcll
inc
loopne
add
inc
mov
or
scas
scas
sub
mov
jne
jno
mov
inc
jnp
pop
mov
gs
or
mov
push
bound
add
dec
shll
ja
mov
sbb
mov
inc
push
sbb
xchg
jne
int3
mov
ret
add
faddp
pushf
cmp
clc
xor
shrb
jae
push
test
inc
aas
jge
arpl
loope
adc
fisubs
cmp
scas
std
mov
mov
mov
or
ja
aas
test
jp
xor
les
scas
xor
cmpsb
jnp
fisubs
cmp
inc
loopne
add
popf
mov
cld
push
bound
int3
into
dec
push
lahf
xchg
sub
outsl
jg
jne
mov
and
and
mov
out
inc
push
std
shll
mov
cmpsb
lahf
js
leave
pop
dec
xchg
xor
cltd
aam
rcl
xchg
mov
add
pop
mov
adc
or
jno
inc
inc
jo
sub
or
dec
push
inc
mov
sub
movsb
loop
outsb
fsub
bound
pushf
cmp
or
rcr
cmp
nop
je
jae,pn
dec
movsl
iret
popa
add
lcall
add
jecxz
jp
lcall
sbb
sbb
push
xor
xchg
scas
cmpsb
les
adc
shl
loop
jae
adc
sub
pop
ljmp
in
dec
roll
out
or
popw
das
add
xor
mov
mov
test
lock
data16
fidivrl
sbb
jecxz
call
adc
outsb
insb
push
sub
jb
inc
dec
inc
mov
adc
xorb
cmc
hlt
pop
cld
or
dec
xchg
rcr
mov
out
or
stos
cmp
pusha
adc
lea
dec
faddp
in
rol
xchg
stc
xchg
jne
jbe
sbb
movsb
add
ljmp
sbb
mov
fwait
das
xchg
nop
scas
add
rcll
dec
ja
aaa
imulb
pop
mov
lock
std
or
ret
cmp
leave
repnz
dec
pusha
xorl
enter
cmpsl
dec
mov
ret
adc
popa
jp
mov
pop
mov
movsl
popa
push
add
pop
mov
sub
js
and
cmpl
clc
push
mov
scas
push
or
push
push
aam
adc
popf
jnp
pop
mov
dec
jge
imul
mov
add
sahf
or
jge
movsb
mov
mov
xchg
popf
je
push
and
cmc
push
and
nop
out
sub
outsb
cwtl
ja
inc
inc
pop
iret
mov
repz
hlt
loop
xchg
push
stos
add
mov
or
adc
cli
adc
jb
and
push
jnp
jge
in
js
push
ja
daa
push
arpl
or
adc
lods
out
lods
push
add
rcll
xchg
jp
loopne
cwtl
dec
dec
js
fistl
data16
cmc
push
sbb
sahf
jg
xchg
push
shrb
and
shll
push
lret
daa
mov
sub
call
push
lcall
mov
fs
shlb
sbb
bound
je
dec
and
xor
mov
jp
xlat
lock
inc
fisubrs
call
push
mov
fdivrl
notb
mov
inc
jle
imul
in
xchg
jecxz
mov
test
sub
pop
scas
push
push
cmp
enter
xchg
mov
mov
sbb
out
add
mov
jbe
cmp
adc
xchg
in
adc
nop
std
rorl
ss
sbb
mov
icebp
fists
cmp
cs
fsts
push
cli
test
mov
hlt
jae
popf
shr
sub
scas
push
pop
pushf
pop
xchg
fprem1
pushf
jl
cmp
leave
add
das
or
iret
pop
popa
popf
mov
mov
lock
fisttpll
es
xchg
add
xchg
sbb
pop
ret
lods
jmp
jecxz
jno
cwtl
xor
xor
mov
das
fs
mov
cmpsb
fcompl
out
or
cmpsb
in
inc
cmp
xchg
adc
mov
jg
mov
cmp
adc
jns
add
push
push
dec
pop
fwait
xchg
mov
test
js
popa
sub
push
sub
in
mov
addr16
or
push
imul
pop
cmpsb
or
scas
cmp
rcr
mov
inc
mov
xchg
adc
sub
repz
dec
movsl
pop
cmpsl
add
sbb
xchg
push
pop
xchg
iret
mov
mov
push
dec
ss
jl
xchg
mov
repz
arpl
and
jb
test
test
popf
xlat
sbb
movsb
push
icebp
xor
mov
in
cmp
cmpsb
test
or
mov
push
pop
sub
inc
dec
inc
lds
ds
cltd
fistpll
pop
add
testb
sub
test
ds
xlat
ja
icebp
testl
rorl
clc
and
lahf
add
add
sub
insl
addb
pop
adc
mov
adc
xchg
in
rcl
jo
std
xor
adc
dec
shl
scas
mov
sbb
xor
cmp
mov
pop
dec
dec
add
lret
push
add
and
insb
push
and
xor
mov
mov
mov
inc
test
pop
scas
test
and
push
mov
xchg
xor
lods
push
sub
push
rcrb
or
inc
stc
or
sub
mov
push
dec
imull
cmp
mov
pop
mulb
push
outsl
ja
mov
xor
push
aam
sub
jle
lds
lret
out
mov
xor
dec
jns
fdivrs
out
dec
and
testl
pop
xchg
jb
jl
out
cwtl
je
inc
icebp
mov
insb
jp
mov
inc
jne
popf
outsw
dec
inc
jmp
rcl
cmp
cmp
or
rolb
and
sbb
into
push
cld
mov
add
testl
cmpsb
xor
imulb
mov
lds
pop
aaa
add
test
mov
cltd
pop
inc
xchg
mov
int3
inc
or
adc
imul
add
retw
rorl
sarb
in
xchg
push
dec
or
into
das
mov
cld
or
cmovno
xlat
ret
repz
gs
pop
adc
pusha
ss
sti
sbb
and
out
xchg
jl
por
pushf
out
fwait
shl
adc
shll
mov
idivb
lret
and
adc
repnz
xchg
xor
lock
lods
mov
dec
mov
sahf
or
inc
cmp
fldl
mov
inc
push
cmp
lods
insl
mov
mov
inc
leave
rclb
ja
and
or
cld
stos
and
jno
lcall
scas
sbb
mov
jbe
sbb
sub
lods
inc
hlt
jae
pop
sbb
inc
clc
push
pop
fcmovnb
adc
out
fiadds
pop
xchg
outsb
into
lcall
orl
cwtl
aaa
inc
add
xlat
movsb
adc
jbe
fldcw
lret
pop
sbb
outsl
sub
sbb
jnp
das
push
adc
mov
push
mov
lret
pop
ss
test
nop
cmpsl
fcompl
test
loopne
sbb
rcrl
js
out
adc
arpl
insl
lods
jo
negb
ret
stos
mov
pop
cmc
sub
pop
jne
lret
fs
mov
jae
lods
mov
jne
ud0
sub
shr
std
push
lret
iret
adc
std
add
dec
jg
jmp
stos
lods
push
subl
cli
sbb
mov
sub
popa
jge
or
js
sbb
push
fcom
cwtl
jle
iret
movsb
inc
and
and
or
sub
push
aaa
fstpl
inc
pop
aad
jo
mov
pop
pop
sbb
fbld
xchg
cmova
xlat
xchg
fistl
jnp
xchg
arpl
not
test
fs
mov
inc
insl
jo
stos
imul
stos
mov
pop
sahf
sahf
and
aad
mov
outsl
jno
adc
aas
test
loopne
inc
int
in
pop
dec
jo
pop
jg
jp
fwait
inc
push
stos
jecxz
insb
scas
inc
or
stos
test
inc
loop
and
mov
push
push
xor
sbb
xchg
cmp
out
sbb
add
testl
jmp
mov
jb
jno
adcl
scas
cs
pop
aaa
mov
mov
inc
addr16
jl
xchg
mov
mov
leave
lea
aad
push
aas
push
push
mov
dec
mov
jns
pop
jg
or
sbb
dec
xchg
sar
fisttpl
int3
add
sti
stc
daa
or
in
aam
js
xchg
das
xchg
sub
xchg
mov
test
lods
enter
push
adc
jl
push
jbe
lret
jnp
pop
pop
cmp
call
in
jns
lcall
push
add
add
iret
inc
jp
aaa
xor
adc
jno
mov
jecxz
add
test
or
jb
sub
std
xchg
mov
mov
mov
pop
or
insb
cmp
xor
and
cmp
xchg
mov
shrl
fucomi
jnp
inc
outsb
lret
jle
out
cwtl
add
sub
inc
push
pop
out
push
xchg
movsb
sbb
sub
adc
sbb
add
sub
popf
xchg
jns
fisubl
lea
ret
ja
cmp
or
mov
sbb
xchg
fsubl
fs
mov
rcll
jnp
push
lea
push
cmp
sbb
test
int3
pop
sti
push
roll
inc
push
pop
push
jmp
or
rorb
and
int3
jle
movsb
cmp
mov
pop
push
mov
mov
dec
cmpsl
stc
int3
mov
out
mov
inc
sbb
nop
bound
fstpt
in
mov
ficoml
pop
imul
cmp
out
sbb
in
movsb
push
or
or
jle
lcall
aad
push
dec
or
dec
add
jnp
es
fs
and
in
jle
cmp
ret
cmp
bound
jecxz
mov
lret
test
into
stos
and
leave
cmc
sub
imul
and
add
dec
dec
lahf
lods
lahf
sahf
imull
push
ret
enter
sbbb
inc
mov
rcrb
ja
pushf
fists
call
pop
std
stc
xor
add
subb
stos
cmpsb
cmp
jge
mov
sbb
and
andb
add
mov
nop
jo
push
dec
addr16
pop
mov
dec
sahf
outsl
fxch
cmp
adc
scas
hlt
rcll
add
mov
stc
ret
jge
adc
repnz
gs
fdivs
ret
bound
inc
bound
mov
addl
sbb
push
pop
adc
sub
lods
sbb
mov
aas
cli
rcll
and
insw
mul
pop
test
xor
mov
cmp
and
and
addb
fistpll
call
gs
sub
aad
xor
jmp
inc
or
cli
sbb
cmp
and
mov
nop
hlt
pop
and
in
je
stc
pop
mov
mov
and
in
mov
adc
adc
xchg
dec
cmp
jnp
dec
fld
sub
mov
in
cmp
pop
push
std
ret
out
lcall
je
sbb
jg
movups
add
cltd
mov
mov
lds
shlb
xor
jmp
ficompl
add
push
popa
sub
sahf
fidivl
inc
lahf
mov
enter
pushf
mov
dec
leave
dec
sub
nop
xorb
jo
in
out
mov
cs
push
stos
lcall
in
pop
cmp
add
mov
cmc
add
aad
jle
push
out
dec
idiv
mov
jae
hlt
cli
sti
pop
jb
leave
arpl
cmp
pop
cli
lcall
push
iret
sahf
xor
pop
mov
enter
pop
inc
sbb
dec
into
cmpsb
aad
aaa
xchg
in
and
test
int3
sub
push
add
jmp
mov
pop
jo
shll
shrb
enter
cltd
out
mov
bound
test
pop
inc
idivl
out
adcb
sahf
lods
pop
js
adc
add
daa
xor
bound
mov
push
in
adc
mov
mov
out
adc
inc
out
mov
andl
popl
mov
inc
dec
jg
mov
jge
add
jns
call
loope
popa
gs
rcr
std
and
rcrb
xadd
divl
pop
je
push
dec
in
cmp
or
outsl
xorb
inc
pop
fldcw
push
adc
inc
cmp
test
adc
call
and
sub
cmp
pop
add
push
outsl
scas
jecxz
movl
fsubrs
arpl
fucomi
or
enter
sti
leave
jge
add
mov
jno
fsub
sub
imul
push
cmova
push
aad
dec
xor
lahf
mov
sbb
pop
dec
mov
mov
stos
mov
mov
dec
cmp
and
nop
aaa
cmp
int
fucom
push
test
jmp
aam
xchg
pop
pop
ss
sbb
rcl
outsl
loope
jb
pusha
subl
sub
xchg
imul
scas
cmp
add
in
bound
xchg
dec
gs
push
andb
xor
sbb
insb
shrb
jne
and
mov
jecxz
adc
cmp
cld
add
aam
loopne
and
daa
cmpsb
or
idivb
in
stc
sub
mov
imul
mov
fdivrp
cmp
std
pop
test
cmpsb
mov
test
les
xchg
lcall
xor
mov
pop
fcmovb
dec
adc
rcrl
repnz
stc
pop
push
fsubs
ds
xor
data16
lods
lds
fisubrl
mov
fmull
in
pop
xchg
adc
push
mov
jmp
mov
popa
fiadds
xor
hlt
sub
add
ss
lds
ret
rcl
loop
inc
pop
adc
lock
aad
xchg
lret
push
inc
insb
jle
lea
sbbb
fdivrs
cli
sbb
push
cmp
and
push
iret
adc
mov
ffree
fldcw
lods
jae
inc
xchg
fdivrs
testb
cmp
sbb
das
xchg
loope
jbe
xor
jbe
pop
aad
fiaddl
test
rcr
xor
sub
test
into
mov
and
pop
daa
or
std
jae
test
insb
mov
stos
pusha
sar
leave
inc
or
mov
jecxz
inc
jb
push
add
push
mov
cmp
push
scas
sbb
xchg
outsl
dec
push
repnz
push
cwtl
in
push
push
fisttpl
ss
fwait
or
imul
mov
aam
jp
cmc
lcall
push
jo
mov
jb
divb
mov
mov
mov
mov
iret
jmp
fisubl
sbb
stos
or
xchg
into
dec
je
jle
or
push
rclb
and
and
call
cmp
jp
stos
push
mov
ficompl
inc
mov
bound
sub
outsl
jmp
lahf
xor
push
dec
sub
enter
int3
dec
mov
cmpsb
inc
xor
push
adc
add
jge
aam
xchg
aas
push
xchg
push
push
and
jg
xchg
mov
dec
inc
adc
jecxz
cmp
ss
sbb
cmc
flds
mov
in
ljmp
mov
and
ret
push
sbb
test
mov
or
jnp
aad
int3
jp
in
push
mov
sti
test
test
sub
push
ret
sbb
sbb
xor
cmp
shll
jp
xchg
push
jae
ficomps
push
call
xchg
lods
sti
pusha
sub
jo
popa
cmp
mov
test
dec
popa
loop
push
sub
pop
jg
mov
jbe
iret
test
push
imul
orb
inc
push
sahf
xlat
lahf
in
ret
jnp
les
or
xchg
and
push
in
arpl
mov
or
popa
jmp
repz
mov
ret
xchg
jmp
add
add
stos
adc
rcrl
sub
popf
or
mov
push
xchg
lods
adc
out
adc
or
loope,pn
dec
mov
andb
loope
and
insl
loopne
shr
adc
pop
fmuls
inc
push
mov
popw
jecxz
xor
dec
xor
lcall
gs
stos
out
mov
mov
sahf
je
daa
js
cmp
jno
mov
add
aas
orl
jo
fidivrl
adc
mov
lret
sub
rcll
subl
cmp
and
aam
pusha
pop
outsl
xchg
jge
popa
imul
icebp
dec
das
mov
add
dec
scas
or
sbb
cs
filds
sbb
and
and
addr16
dec
mov
jle
and
xor
jecxz
aam
sub
popf
lock
jmp
sarb
push
fists
sbb
sbb
pop
xor
and
cmp
add
xchg
repz
and
loopne
add
out
pop
or
iret
dec
mov
jb
jmp
jo
mov
inc
or
fmul
jne
mov
or
enter
mov
sub
daa
loop
mov
dec
jo
pop
dec
mov
fcmovnu
push
out
in
imul
fldln2
mov
fdivs
inc
and
and
inc
jp
iret
fcoml
in
mov
aas
xchg
test
mov
ficomps
cmp
jge
cmpsl
mov
roll
adc
in
aas
or
and
inc
ret
xor
clc
add
jne
int
dec
mov
xor
les
mov
push
push
mov
std
test
jns
stc
loopne
adc
negl
idivl
aam
dec
inc
fiaddl
lock
ljmp
addl
insl
mov
adc
in
jnp
sbb
loopne
test
mov
inc
pusha
pushf
shll
push
out
pop
stc
mov
vsubps
loopne
lods
test
mov
sub
loop
outsb
fmuls
and
loope
xor
inc
xchg
push
mov
pop
cmp
dec
and
mov
mov
rcrl
movsb
mov
xchg
testl
in
popa
fs
outsb
inc
movsb
push
mov
pop
jbe
mov
dec
pop
test
imul
xor
icebp
incb
gs
push
xchg
fdivrl
pop
jp
jb
mov
enter
add
pop
jl
pop
mov
sbb
test
ret
push
movsb
xchg
fadd
in
sbb
cwtl
or
mov
dec
sbb
cmp
push
int
sbb
pop
pusha
je
jecxz
cmp
enter
cltd
mov
sub
decl
mov
aad
leave
push
jo
loope
rcr
mov
dec
inc
cli
push
fcoms
shll
gs
outsl
stos
xchg
add
push
or
sti
data16
adc
push
stc
or
pop
and
popf
bsr
repz
add
clc
mov
or
imull
sub
hlt
jns
fisttpll
in
leave
js
out
xlat
fcmovb
add
xchg
and
stos
mov
iret
add
push
shlb
adcl
ret
lea
mov
pop
pop
scas
mov
icebp
fisubs
pusha
mov
xchg
jle
ljmp
in
sbb
js
cwtl
jne
mov
push
adc
aad
movsb
add
inc
lds
inc
int3
lahf
loope
xchg
xchg
shr
icebp
cmp
sti
sbb
mov
ja
push
daa
lock
push
lods
aas
xor
test
ret
jmp
sbb
xor
pause
jmp
adc
jl
pop
rcll
adc
negb
divb
pop
mov
fstpl
aam
pop
jmp
dec
mov
roll
mov
push
jnp
add
jne
nop
push
sti
mov
and
jbe
xchg
xor
sbb
sub
into
mov
stos
adc
cltd
mov
lock
and
xchg
jbe
pop
lcall
add
inc
pop
and
loope
lret
addl
pop
out
aam
hlt
xchg
push
lret
aam
es
arpl
push
clc
cltd
or
ret
and
sbb
mov
or
cmp
adc
pop
notl
push
fiaddl
andl
pop
ret
inc
pop
push
clc
mov
testb
mov
scas
jl
imul
cmc
inc
pop
enter
ja
jb
cmp
mov
es
test
out
xor
mov
mov
mov
out
imul
add
push
mov
xor
add
sbb
in
dec
inc
popf
mov
and
cmpsb
or
mov
cltd
push
xchg
xchg
jo
dec
xchg
aaa
push
xor
sub
dec
iret
cmp
mov
jno
lods
les
mov
sbb
mov
enter
rcrl
mov
xor
mov
fmull
scas
js
or
insl
dec
out
inc
mov
jmp
pop
mov
hlt
test
cs
out
imul
loope
out
ljmp
stos
jl
popa
loop
mov
adc
adc
dec
or
bound
mov
test
movsl
ret
push
stos
lahf
cmp
or
adc
pop
cli
dec
xchg
jmp
insl
and
dec
or
fcmovne
mov
dec
gs
call
in
addr16
movsl
push
btr
adc
add
cmp
sbb
mov
push
dec
cmp
mov
and
add
icebp
push
jae
push
ds
arpl
adc
jb
popf
loopne
and
and
sar
mov
out
and
xchg
popa
in
push
insb
and
or
outsb
pop
lcall
and
dec
subl
cmc
sbb
call
jns
mov
vmovhps
xor
xor
sbb
and
insl
rcr
add
pop
and
out
sti
into
mov
or
sub
sub
icebp
sub
xor
nop
cmp
or
nop
pop
leave
call
sub
std
sub
mov
gs
jne
insl
pop
popa
sub
mov
shrb
add
inc
mov
sub
mov
outsb
inc
imul
jnp
sub
xlat
pop
mov
or
sbb
movsb
test
jle
xchg
out
push
addr16
and
sbb
or
mov
test
or
sub
mov
cmpsb
pop
and
add
mov
push
xchg
jo
cwtl
xor
shrb
loope
scas
jno
jae
pop
push
cld
or
xor
aad
mov
enter
pop
or
nopl
mov
xor
cmp
mov
adc
cs
add
aaa
pushf
sti
dec
xchg
mov
jmp
mov
outsb
lods
lock
inc
pop
fstps
push
scas
cwtl
and
sbb
je
pop
jg
xchg
mov
mov
sbb
test
xchg
or
icebp
test
outsb
into
fwait
es
sarl
mov
mov
insb
mov
pop
das
scas
mov
mov
bound
or
add
or
push
xchg
lret
insb
in
add
xchg
xor
xor
add
dec
dec
xchg
pop
sti
cmp
dec
hlt
not
cmp
xor
mov
inc
lcall
mov
cwtl
mov
mov
push
fwait
and
mov
pop
jecxz,pt
pop
lahf
push
stos
pop
pop
mov
int
xchg
mov
add
inc
orb
and
lcall
stos
je
es
adc
xchg
ljmp
mov
dec
fnstsw
dec
test
cmp
inc
sbb
xchg
in
mov
int
cs
shl
add
push
jne
stos
inc
aas
mov
xchg
stos
fdivs
xor
jp
cwtl
nop
sti
cmc
sbb
xchg
mov
push
push
inc
lods
cli
mov
fiadds
out
call
sub
jno
inc
push
add
test
loope
and
hlt
icebp
or
xchg
dec
lds
jae
test
addl
ss
xor
xor
ficompl
and
fs
pop
sahf
mov
xchg
jb
mov
popf
cli
inc
xor
adc
lret
mov
imul
rcll
jmp
sbb
lods
add
clc
inc
int
mov
pop
in
fcmovb
xchg
out
test
cld
sbb
dec
aas
cmp
and
and
outsl
cmpsl
ljmp
fwait
dec
enter
mov
lret
bound
subl
sub
adc
adc
or
pop
test
sbb
movsl
arpl
add
ret
pusha
push
dec
ja
sbbl
scas
decl
std
mov
add
punpcklwd
js
loopne
mov
adc
outsl
out
bound
clc
jl
int
outsl
cmpb
dec
push
scas
mov
xor
popa
gs
jle
ret
jge
cmpb
adc
call
rcll
adc
dec
pop
std
jecxz
clts
jl
pop
std
mov
icebp
mov
adc
push
shlb
outsl
mov
fimuls
push
or
adc
jbe
repz
std
push
fadd
dec
ss
idivl
mov
fisubrs
movups
out
or
pusha
mov
add
ret
xchg
push
add
lret
clc
cmpsb
je
mov
jno
into
sub
jo
daa
xchg
pop
push
inc
loopne
dec
faddp
sub
cmp
mov
mov
iret
pop
les
xchg
xchg
and
mov
mov
sub
sahf
test
push
jo
push
xor
enter
aas
in
mov
fcomip
loop
inc
lret
pop
mov
xchg
adc
sbb
lahf
pop
push
stc
xor
or
add
and
jg
std
in
xchg
inc
adc
dec
jl
aas
mov
test
mov
fsubl
loop
pop
in
bound
push
jge
test
xor
mov
mov
pop
adcl
dec
cltd
ljmp
icebp
cli
push
pop
xchg
lcall
das
out
adc
jp
ret
xor
aas
iret
das
shlb
ljmp
xor
and
mov
leave
scas
mov
push
adc
adc
data16
filds
pop
in
mov
shl
jge
int3
hlt
mov
mov
iret
lock
lahf
mov
imul
cmpsl
add
popf
fcmovu
push
loopne
mov
cli
lcall
ljmp
insl
in
mov
arpl
cmc
jno
in
aas
dec
pushf
xor
popa
push
imul
xor
pop
push
xlat
psubq
sub
dec
cmpsl
sub
lea
out
lret
repnz
test
dec
fwait
aad
push
stc
js
hlt
mov
or
or
mov
mov
jl
fdivl
cmpb
ss
cmc
and
std
test
add
add
jle
jg
imul
pushf
jno
xchg
sbb
xchg
inc
subl
xchg
mov
mov
popa
call
enter
stos
pop
lds
stos
cmp
mov
or
ret
leave
cld
imul
rcpps
aas
xchg
fcoml
sub
sub
test
push
and
inc
jo
jge
mov
jb
inc
add
roll
das
push
hlt
aam
sbb
sub
rcrb
fdivl
mov
push
pop
stos
xor
test
xchg
je
mov
mov
push
cmp
rcr
xchg
scas
lahf
repnz
dec
stos
out
adc
fcmovnu
sahf
xor
neg
pusha
add
add
jbe
jl
mov
and
or
cmp
icebp
xor
inc
loope
and
jbe
cmp
imul
ljmp
sar
sub
adc
push
sahf
ja
dec
mov
enter
dec
adc
push
ds
lcall
mov
aaa
pop
jecxz
sbb
scas
push
shll
mov
push
cli
inc
mov
fisubrs
and
or
sbb
sbb
in
lret
fstp
out
adc
push
scas
std
lods
mov
lock
and
movsl
push
cmp
inc
sub
fsubrl
jg
mov
loope
adc
mov
nop
test
jae
in
loopne
adc
sub
push
jp
imul
mov
std
xchg
loopne
sti
sti
fnsetpm(287
or
and
test
xchg
pop
sub
shrb
out
or
adc
xor
pop
pushf
add
clc
call
lock
adc
ds
sub
cmc
push
mov
call
xchg
cmpb
aam
hlt
pop
es
jns
push
sbb
sub
clc
test
mov
pop
add
js
stos
inc
pop
adc
in
pop
inc
xor
das
mov
xchg
adc
out
testl
and
insl
xorb
testb
insb
mull
cmp
fwait
and
stos
mov
lods
mov
adcb
cmpb
repz
xchg
dec
mov
test
xorl
adc
mov
repz
jno
and
loop
test
out
shlb
add
cmp
xchg
mov
imulb
add
fadd
and
adc
pusha
sub
sti
push
imul
xor
mov
mov
cmc
lahf
push
lret
iret
lds
out
fisubl
xchg
pop
insb
inc
ljmp
sahf
xchg
test
subb
fcmovnbe
sbb
cmp
lock
and
adc
mov
mov
sti
or
push
xor
mov
scas
ror
lods
lahf
incl
mov
bound
rcr
jge
mov
xlat
scas
mov
adc
jo
lcall
into
adc
sub
mov
scas
repnz
dec
xor
jb
and
stc
popa
sbb
mov
lret
inc
js
shl
push
popa
sbb
pusha
scas
cmp
fcmovnbe
xchg
mov
test
pop
or
xchg
hlt
cld
mov
mov
sub
xchg
push
adc
in
stos
movsb
jmp
mov
scas
dec
imul
aaa
cmpsl
cmpb
repnz
out
adc
in
push
loop
cmp
pop
fisubl
leave
imul
jno
mov
rorl
stos
mov
mov
outsb
lret
scas
inc
sbb
sub
das
das
add
subl
cwtl
add
test
test
ja
mov
mov
in
gs
adc
cwtl
push
xchg
sub
cmp
ja
xor
in
push
push
flds
cld
out
pop
inc
fnop
std
xchg
jecxz
scas
push
mov
stc
scas
add
cmp
sti
cmp
pop
ja
xor
or
and
xor
bound
mov
lret
daa
mov
mov
mulb
pop
or
inc
ret
add
jno
gs
pop
jnp
adc
or
mov
push
movsb
test
popa
jnp
mov
into
add
test
fisubrs
adc
enter
jg
fsub
mov
xor
push
and
int3
mov
mull
std
iret
test
push
mov
jmp
rolb
in
and
mov
in
cli
or
cmp
xor
xchg
dec
popa
push
inc
shll
mov
lcall
cmpsl
sbbl
and
andb
ror
adc
jg
inc
pop
push
mov
add
repz
inc
gs
addl
dec
mov
stos
in
and
xlat
sub
stos
stos
add
sbb
addr16
mov
insl
in
adc
mov
shrl
lods
sahf
ficompl
jmp
inc
pop
xor
jp
jne
aas
iret
jno
ret
push
pop
pop
xchg
cli
sbb
popf
mov
es
jl
pop
xchg
repnz
rcrb
testl
xor
mov
dec
mov
mov
push
pop
cltd
imul
cli
sub
dec
push
aad
into
jmp
pop
jo
out
repz
out
jns
loope
je
movsl
jbe
and
jo
je
jne,pn
dec
lock
push
mov
or
mov
rorb
xchg
and
mov
lea
xorl
pop
jbe
ss
dec
mov
addps
jbe
ljmp
vandps
fwait
xlat
repz
movsl
cmpsl
push
aam
lock
xor
andb
cmpsb
mov
fnstcw
mov
mov
lock
push
mov
xchg
rclb
add
movsb
add
das
jns
fstl
loop
push
aas
cwtl
adc
cmp
cli
mov
lds
cmp
dec
nop
lods
xlat
mov
bound
jg
rcrb
fdiv
bound
fnstenv
loop
and
jg
sub
dec
jg
test
xchg
sti
jmp
and
aad
inc
pop
scas
xor
arpl
adc
in
movsb
enter
outsb
push
cld
and
mov
loope
and
dec
ljmp
cmp
mov
fimull
push
lcall
js
jns
pop
mov
pop
orb
je
cmp
loopne
push
xchg
fldenv
iret
mov
adc
out
xlat
lcall
jge
push
mov
test
cltd
cmpb
or
test
int
sub
sub
add
pop
mov
mov
jmp
cmc
xlat
loope
mov
lret
mov
mov
cmc
cmc
mov
pushf
dec
fcomps
sbb
mov
imul
into
fldt
in
inc
ljmp
mov
cmc
sar
xchg
pusha
stc
sub
adc
nop
ret
jae
push
int3
jo
sub
cli
jg
scas
jmp
daa
pop
inc
iret
pop
pop
negl
pushf
nop
cmpsl
add
xor
in
insl
fistps
pop
in
push
mov
pushf
push
push
das
scas
jmp
or
sbb
mov
push
arpl
popa
mov
sarl
ds
fdivrs
sbb
jg
clc
loopne
inc
mov
mov
bound
jns
sub
mov
xor
push
gs
das
xchg
ret
sbb
leave
aam
dec
aam
test
out
pop
mov
xor
stos
inc
adc
mov
shll
push
orl
cmp
pop
add
cmovbe
mov
cltd
xchg
add
sbb
push
cld
ret
push
out
or
mov
scas
xchg
dec
inc
mov
mov
mov
lock
enter
and
push
in
dec
push
sub
mov
popa
or
jmp
out
push
rcrl
mov
sahf
mov
push
int3
cmp
push
push
divb
add
fnstenv
dec
outsl
or
inc
cmp
lds
std
jecxz
sbb
inc
dec
into
cltd
dec
xlat
lods
add
in
rcl
inc
in
add
dec
sbb
in
adc
imul
cmp
call
mov
mov
mov
jbe
xor
lret
mov
xor
test
hlt
xor
xor
insl
push
pop
cmp
fcoms
test
mov
movsb
rorl
andl
inc
push
iret
xor
popf
dec
fidivrs
loopne
mov
adc
mov
push
xor
or
push
inc
xchg
popa
pop
xlat
mov
cmpsb
loope
scas
js
inc
out
and
adc
xchg
sub
or
int
fcompl
inc
fdivr
test
xor
inc
mov
cmp
rclb
aad
sbb
ds
jne
mov
push
jb
and
push
out
pushf
mov
sub
lods
in
call
xchg
fdivs
inc
leave
nop
mov
aad
js
jns
shll
sbb
adc
icebp
jle
lods
lock
mov
repz
mov
cmp
aas
xchg
jge
mov
add
ja
ljmp
test
adc
sub
push
jmp
push
out
repz
xchg
jno
enter
pop
mov
push
xchg
loope
xlat
mov
jne
push
cmpsb
pop
std
int
loop
cwtl
mov
pop
repnz
jne
aam
mov
jge
test
rclb
dec
outsb
std
mov
jno
ljmp
clc
xor
add
mov
jno
sub
xor
push
stos
mov
xor
push
jmp
es
xchg
xchg
fdivs
mov
ljmp
lea
mov
inc
out
in
mov
outsb
fistpl
shrb
sub
mov
and
repz
int
fcompl
fsts
xor
jb
jecxz
rclb
insl
cwtl
pop
addl
mov
mov
or
pop
sahf
xchg
jae
test
dec
push
das
test
dec
add
pop
dec
adc
mov
adcb
adc
adc
rcll
jb
std
fists
xchg
shrb
mov
adc
sub
mov
jl
adc
aam
mov
aad
ss
cltd
fwait
lahf
pusha
into
imul
mov
test
dec
and
xchg
dec
enter
sub
cmp
add
pusha
jge
in
rcrl
js
mov
mov
imul
mov
fs
loopne
pop
jp
adc
add
sahf
inc
outsl
sbbb
fists
rcl
divl
ss
xchg
iret
pushaw
outsl
or
call
xchg
pop
sar
push
jo
mov
mov
ljmp
lret
mov
out
push
inc
iret
mov
push
cs
cmp
repnz
int
fistpll
mov
lret
arpl
outsb
int3
or
js
es
pop
xchg
stos
sbb
jnp
jae
jmp
and
and
xor
out
cmpb
mov
cmpsl
push
daa
add
mov
or
sbb
and
sbb
cltd
int
pop
dec
mov
dec
mulb
aam
sbb
or
pop
int
orl
inc
jo
lods
push
bound
test
sub
aas
jp
shlb
jno
shll
inc
stos
mov
mov
test
shrb
and
cmp
aad
pavgw
cmc
scas
mov
mov
add
xchg
lods
inc
popa
frstor
adc
outsl
je
test
cwtl
aam
enter
shr
pop
sub
inc
iret
or
push
iret
add
out
add
sti
add
push
shl
es
loope
mov
mov
pop
mov
pop
aaa
or
pop
dec
idivl
movsb
lret
pop
shlb
aam
jb
sbb
jecxz
mov
hlt
sarb
lcall
inc
mov
and
push
add
in
out
adc
sbb
mov
push
jnp
xchg
jmp
pop
clc
lcall
pop
dec
insb
in
cld
add
cltd
cmp
lea
cmc
test
inc
nop
and
imul
jl
dec
and
lds
and
cli
cltd
adc
test
fistl
popa
add
in
push
push
push
lret
insb
nop
cltd
das
mov
xchg
jl
in
sti
adc
fiaddl
xchg
mov
pushf
cmc
stos
mov
jne
cmpsb
jb
push
icebp
mov
sbbb
sbb
out
dec
and
pop
pop
ds
add
mov
shll
pop
sub
ljmp
sbb
xor
sub
push
push
sti
arpl
push
cltd
sbb
subb
jae
mov
pop
in
js
lea
ljmp
leave
pop
popf
dec
sti
pop
paddsb
mov
dec
and
daa
bound
sbb
jge
scas
mov
ret
dec
push
mov
lret
mov
inc
popf
out
sti
not
loope,pn
test
mov
pop
adc
sbb
sub
stc
push
repnz
mov
loope
cs
js
divl
int
das
insb
add
cmpsb
xor
jp
push
sub
fldenv
dec
or
xchg
addr16
sub
mov
mov
cmp
bound
cmp
out
push
bound
outsl
mov
and
lahf
rcr
jne
mov
fimuls
dec
push
call
cli
dec
shlb
mov
rorb
jns
lret
inc
fcmovnbe
int
push
ret
mov
call
aam
or
mov
rclb
cwtl
jne
mov
lret
aaa
mov
add
sub
in
rorb
pop
mov
push
push
imul
test
bound
dec
mov
mov
stos
inc
sbb
aaa
inc
and
rolb
fisubs
notl
dec
jne
dec
push
push
dec
inc
inc
fwait
add
and
outsl
cmp
mov
nop
mov
out
push
pop
xor
scas
les
loop
fdivrs
out
pop
jo
cli
mov
call
xchg
push
sub
stc
js
push
sbb
dec
cmpb
mov
mulb
clc
xchg
mov
cmp
cmpsb
lods
lahf
scas
push
push
pop
loopne
sub
cmpsb
fmulp
test
inc
mov
test
cwtl
mov
leave
add
pop
push
test
mov
and
lods
sbb
decb
mov
sbb
mov
xchg
aas
cmp
mov
pop
add
rcrl
lret
out
cmpsl
fs
jecxz
xlat
adc
push
inc
cmc
sarb
mov
jae
inc
outsb
in
adc
and
fs
mov
xchg
sbb
push
mov
lods
or
lock
aad
in
stos
dec
repz
int
mov
jecxz
fcoml
xorb
rcr
jge,pt
dec
xchg
mov
sub
xor
lea
push
nop
push
andl
pushf
imul
sbb
test
cmp
pop
sbb
jo
cmp
std
lahf
mov
add
dec
loopne
fldenv
js
push
pop
mov
dec
jno
mov
arpl
imul
in
jmp
and
cmp
or
outsl
or
daa
push
push
mov
mov
pop
jns
ret
lahf
shl
sub
sbb
popa
imul
jo
sbb
fdivrl
ss
cmp
pop
hlt
lods
andb
in
jle
cmpsb
faddp
sbb
insb
cmpsb
mov
jno
loop
add
mov
cmpsb
mov
push
jae
pop
cmp
jl
test
inc
add
adc
push
mov
xor
jo
lret
push
mov
leave
scas
xlat
dec
fmul
orl
add
mov
test
loopne
push
xchg
lock
mov
mov
sbb
in
imul
or
andb
push
nop
repnz
inc
fldenv
push
outsl
push
or
pop
pop
testl
out
nop
sub
adc
xlat
std
pop
pop
dec
adc
cmp
cld
xchg
insb
fcomps
mov
jbe
leave
pop
push
out
pop
call
loop
push
and
fdivr
test
lret
imul
ds
push
test
shrl
jmp
lods
lods
mov
push
jmp
fisubl
sbb
rep
nop
push
mov
adc
jmp
test
std
clc
insb
inc
add
je
in
cmpb
sahf
sub
pop
xchg
inc
jp
jo
pop
xlat
xor
lret
push
dec
mov
sahf
lahf
out
ds
std
out
push
cmp
aam
imul
nop
cmp
cs
cmp
cli
lods
sbb
loope
xor
mov
xchg
add
test
xchg
pop
sub
ljmp
push
pop
mov
lea
sahf
pop
mov
out
adc
nop
clc
stos
add
add
mov
pop
popf
or
mov
cwtl
clc
aaa
fistpl
add
cmp
xor
pop
push
mov
mov
mov
cmp
jb
push
cld
sub
sti
add
scas
fwait
sub
shll
or
popf
cltd
jmp
sub
push
dec
xchg
out
and
testl
out
mov
sub
cwtl
push
cld
sbb
clc
push
pop
sub
mov
jo
dec
adc
or
out
not
int
jg
pop
out
jne
push
sub
jecxz
or
mov
dec
sbb
loop
push
rcrl
fwait
sub
mov
adc
push
imul
inc
arpl
sbb
aaa
sub
mov
data16
imul
sub
xor
scas
inc
pop
rolb
rcll
pop
mov
dec
jecxz
mov
subb
pop
fwait
ds
and
out
dec
les
clc
stc
cltd
and
lret
mov
shll
idiv
adc
nop
fwait
cld
adc
mov
xchg
addl
divl
cs
xor
fiadds
pop
push
xchg
lret
inc
and
and
mov
insb
adc
pushf
push
out
xchg
out
stc
lahf
int
push
imul
push
push
shll
xlat
add
ss
inc
nop
sbb
cld
inc
loope
fisubrs
insb
aaa
adc
nop
and
add
sbb
xor
or
popa
pushf
clc
dec
mov
jae
mov
sub
dec
rcrb
cmp
xor
leave
dec
popa
out
adc
xchg
add
js
inc
jo
out
jecxz
sbb
aad
jg
push
sbb
inc
dec
incl
jae
enter
test
inc
sub
mov
fdivrl
cmp
mov
push
xor
dec
or
sub
jle
xchg
int
and
clc
cltd
mov
xlat
dec
ret
or
xchg
mov
loop
jp
mov
pop
pop
dec
adc
mov
inc
push
testl
les
in
dec
cltd
in
dec
add
or
push
in
hlt
jne
ljmp
fsubrs
mov
push
das
mov
sbb
insb
mov
xchg
and
ja
push
jns
ja
jmp
int
sub
jecxz
cmp
or
sbb
mov
xchg
jae
sahf
xchg
js
pop
pop
popf
mov
or
iret
sub
enter
movlps
or
lret
or
repz
hlt
push
xchg
bound
sbb
rol
xor
jle
sbb
cltd
add
loopne
jp
ficompl
pop
jmp
adcb
inc
xlat
jb
mov
pop
cmc
adc
sub
arpl
inc
mov
pop
pop
push
loopne
jbe
jl
dec
dec
ret
mov
leave
cs
jle
les
adc
lock
xor
add
int3
mov
insl
scas
dec
out
or
cmc
xchg
jecxz
push
into
lcall
push
test
sbb
xor
test
aam
ja
mov
cli
jne
push
movsb
pop
bound
std
mov
sub
inc
jo
jne
test
mov
jecxz
or
cmpsb
fldenv
adc
data16
mov
in
xchg
push
lret
dec
pop
rorb
xor
cmp
xor
loope
dec
mov
dec
int3
push
push
call
repz
es
fdivl
inc
dec
inc
lret
lds
mov
inc
mov
cmp
pop
push
int
jo
shl
mov
cli
cmp
ljmp
sti
mulb
fidivrl
push
mov
rcrl
movsl
fdivrl
mov
mov
jge
jbe,pt
adc
cmp
shll
inc
or
loop
out
xchg
orl
and
arpl
and
lret
sbb
or
sub
rclb
in
inc
cmpsl
add
pop
into
in
sub
jle
loop
push
orl
lahf
xor
xchg
lcall
push
cmp
or
mov
or
je
and
repnz
aad
mov
fisubl
insl
jmp
xchg
cmpsl
inc
fstl
fsub
lret
in
adc
lock
add
ret
cltd
jge
pop
pop
jns
cmc
push
and
sbb
es
mov
xlat
out
push
add
sub
daa
inc
repz
mov
insl
mov
addl
stos
loop
jle
or
jge
xor
and
leave
dec
mov
xor
jle
stos
data16
or
xor
call
nop
outsb
stos
das
das
popf
scas
fistpll
xchg
add
dec
sbb
mov
add
mov
jb
std
scas
push
fs
clc
adc
cltd
mov
aam
fsub
ret
fwait
iret
adc
outsb
dec
jle
repnz
shll
cs
movsb
push
lods
inc
push
clc
aaa
xor
push
ds
jns
push
fisttpl
sub
adc
int3
orb
xor
xchg
adc
in
clc
outsl
testl
shll
pusha
mov
ss
imulb
jle
je
lea
jp
add
pop
or
push
sbb
or
ljmp
pop
xchg
add
push
xlat
mov
add
pop
fbstp
lcall
fcmovu
das
pushf
enter
add
cli
jbe
cmc
or
sub
into
xor
xchg
out
loope
cmpsb
mov
dec
outsl
out
repnz
pop
push
mov
sub
movsl
cmp
push
mov
push
jo
adc
or
pop
sahf
adc
adc
sub
negl
cmp
clc
jne
cmp
lods
lods
test
aam
xchg
out
push
xlat
or
mov
es
mov
jo
jle
mov
push
lretw
movsb
xchg
cmp
rcll
xchg
cmp
dec
push
das
lock
jo
mov
test
inc
push
and
pop
adc
sub
mov
dec
mov
adc
fistl
mov
push
push
cmp
mov
andl
out
movsl
call
dec
lret
das
das
out
mov
lahf
int
and
fildl
push
lahf
or
outsb
dec
add
xchg
add
aas
lods
mov
jp
cli
ret
inc
jge
cmp
push
pop
xchg
sbb
js
jo
jnp
sbb
aad
jae
fmul
mov
subb
leave
and
test
mov
cld
fmuls
mov
out
popf
adc
mov
pop
add
xor
jnp
ds
je
cmp
lret
outsb
test
mov
dec
sbb
subl
pop
push
xor
sar
adc
ja
jnp
cmp
ret
inc
pop
pop
outsb
xchg
sub
ret
into
jecxz
stc
xchg
push
sbb
xchg
sti
js
push
add
mov
enter
mov
push
add
adc
xchg
mov
iret
mov
pop
pop
fidivs
dec
int
lods
int
mov
push
fwait
out
lods
dec
repz
outsb
xor
mov
add
mov
rorb
inc
cmp
mov
fwait
cs
movsl
cmp
push
cmp
add
or
xor
outsl
dec
iret
and
neg
xchg
lds
or
cmp
push
aas
pop
std
aad
out
cld
xor
fstps
push
and
add
loop
pushf
mov
sahf
lds
shl
mov
pop
data16
leave
inc
rorl
cs
cmp
push
dec
pop
dec
push
aas
jg
fisubl
xchg
in
xor
mov
scas
lret
imul
adc
das
pusha
fdivrs
jns
cs
lods
out
sub
jge
or
jne
push
jae
pusha
lcall
mov
inc
mov
fcomip
jns
rcr
push
fnstenv
mov
fcomp
out
mov
in
xor
out
sub
cmp
ds
out
nop
or
adc
imul
jae
es
ret
jecxz
mov
inc
in
andb
daa
or
xchg
mov
pop
mov
xor
sub
xchg
or
and
jp
clc
and
cltd
dec
mov
out
dec
adc
lret
add
jno
movsl
testb
fdivrp
push
push
idivl
push
fwait
lret
sbb
pop
and
popf
mov
ja
ret
xor
pop
in
push
jmp
mov
cmp
mov
pop
xchg
rcrb
les
mov
imul
pop
xchg
adc
and
data16
repnz
orl
cli
cmp
popf
cmpsb
add
les
cltd
ja
jb
popf
push
push
and
and
and
sti
fnstenv
push
leave
pop
sarl
sub
dec
inc
test
xchg
and
pop
push
divb
js
xor
es
shll
daa
sbb
ljmp
mov
dec
mov
cltd
and
out
or
pop
push
dec
xchg
popa
push
pop
in
pop
xlat
adc
mov
adc
mov
lods
xchg
test
ret
lret
cli
mov
mov
icebp
stos
dec
adc
ret
push
cmp
movsb
and
xchg
push
jecxz
bound
mov
cltd
cmc
sbb
sbb
rorl
aas
addl
jae
adc
sub
insl
sbb
sahf
mov
mov
test
ror
out
xchg
add
or
js
rcll
sbb
mov
leave
jns
push
mov
adc
dec
jge
pop
jno
jnp
and
add
mov
pop
fs
xlat
ss
scas
pop
test
es
sbb
inc
xor
cmc
push
lahf
mov
test
dec
mov
imulb
aas
inc
cmpsb
sbb
aad
mov
movb
mov
faddl
shlb
add
jno
adc
jecxz
and
and
daa
outsb
ficoml
cmpsl
xor
sub
xor
xlat
gs
add
sti
pop
out
out
imul
cmp
pop
popa
jecxz
or
and
gs
lret
jnp
data16
sub
push
out
lods
inc
pop
mov
pop
mov
sbb
divb
popa
jmp
jmp
nop
or
add
scas
and
dec
mov
push
addb
sub
xchg
push
mov
lahf
mov
insb
cli
push
push
mov
loop
js
push
or
dec
push
arpl
sub
xlat
or
test
or
mov
addr16
jle,pn
cli
loopne
icebp
jle
lcall
pop
mov
mov
push
adc
xlat
loop
add
push
and
add
rcl
xor
fdivrs
fbstp
aas
rcl
mov
sti
add
dec
cmp
jecxz
add
pop
idivb
in
jp
mov
into
sub
in
les
rolb
dec
xchg
flds
scas
das
in
mov
int
int
out
clc
push
add
sbb
pop
adc
cltd
xchg
mov
aad
push
lahf
mov
negb
push
sbb
jp
rolb
sub
pop
sub
sub
loop
jecxz
das
lret
js
push
push
push
cmp
cs
and
push
hlt
lods
lea
test
fisubs
sbb
cmp
mov
xlat
jae
into
lea
sbb
lock
xor
in
mov
jae
cmp
lods
or
or
cmp
xchg
push
adc
out
sbb
int
mov
pop
adc
dec
testl
or
mov
imul
sahf
jno
popf
cmpsl
xor
mov
int
push
ret
call
adc
cli
sub
and
pop
setge
scas
out
sar
jmp
dec
mov
sbb
mov
adc
push
or
pop
or
inc
scas
xchg
add
mov
ret
rcr
add
lret
sbb
mov
loope
sbb
jg
iret
mov
hlt
mov
sbb
aam
mov
pop
rcrl
jns
mov
and
vpsrld
in
xchg
movsl
mov
iret
or
int3
mov
icebp
in
mov
jg
adc
stos
push
fs
loope
and
je
aas
pop
adc
cmp
test
cmp
out
shrb
mov
mov
mov
jo
pop
movsb
scas
out
cmp
sub
jne
mov
inc
stos
jo
test
hlt
js
push
ljmp
inc
sti
repnz
cli
lret
jp
xchg
fwait
mov
pop
je
adc
xchg
dec
adc
rclb
push
or
andl
arpl
dec
fnstsw
andl
add
fcoml
enter
idivl
and
push
hlt
ja
arpl
jmp
pop
push
or
andl
xor
fisttps
mov
sub
fmuls
add
xchg
mov
sbb
nop
loope
mov
shlb
loopne
lret
inc
or
xchg
test
out
mov
testl
cmp
mov
xchg
jb
pop
mov
mov
inc
mov
dec
mov
adc
and
push
xchg
loop
pop
push
andb
int
mov
lahf
xchg
lods
sbb
mov
sbb
xor
in
iret
adc
out
add
pop
rorl
into
lea
cld
aas
xorb
paddusw
and
mov
cli
test
roll
push
inc
repz
cmp
sbb
mov
inc
aas
cmp
xor
adc
sbb
lea
inc
jmp
sub
pop
ficoms
sub
cwtl
test
test
in
xchg
fidivrs
cmpsb
cmc
xchg
dec
fwait
mov
out
js
gs
mov
das
negb
test
mov
cld
lahf
test
jbe
jge
insb
cltd
dec
and
test
xchg
xchg
or
hlt
adc
stos
and
sbb
mov
adc
xchg
cld
sub
pop
mov
xor
mov
sbb
popf
cmp
lods
out
out
dec
inc
mov
or
push
push
mov
movsb
dec
mov
push
mov
mov
in
cmpsb
cwtl
inc
mov
cmp
mov
icebp
xor
xor
imul
repz
inc
or
je
les
jmp
aam
das
cld
jne
andl
pusha
gs
add
mov
aad
pop
jbe
push
xor
lods
test
popa
cmp
adc
xchg
paddq
pop
jp
xchg
xor
fisttps
nop
stos
ret
xlat
stc
rclb
sbb
sub
je
insl
dec
scas
adc
aam
int3
push
loope
sub
leave
inc
xchg
jo
int3
movsb
repnz
ss
mov
ret
les
pop
add
lret
popa
inc
hlt
cmp
xor
pop
pop
pop
mov
movsb
push
mov
pop
or
fs
xchg
fwait
movb
repz
mov
sub
adc
imul
mov
test
add
je
bound
jbe
repz
ljmp
popf
enter
cwtl
push
pop
rcrl
aam
stos
xorb
push
pop
mov
or
out
lret
pop
push
mov
push
dec
jno
and
jl
jo
dec
push
inc
pop
fbld
mov
fdiv
inc
and
call
test
enter
pop
and
adc
loopne
xchg
cmp
sbb
dec
mov
push
pop
out
in
call
pop
and
lock
adc
add
xorb
xchg
add
aaa
sub
cmp
mov
adc
mov
adc
jl
pusha
cmp
mov
xor
hlt
test
mov
mov
mov
lock
cmp
dec
clc
xlat
sub
sbb
in
insb
sahf
das
sub
imul
xorl
ret
loope
xchg
addr16
bound
daa
adc
lods
leave
xchg
loopne
add
call
in
cli
push
sbb
pop
inc
sbb
mov
pop
adc
xchg
popa
push
push
push
imul
fs
lret
mov
sti
and
mov
loope
cmp
sub
sbb
outsb
lods
mov
fisubrs
cld
cmc
mov
push
ljmp
gs
dec
shll
cmp
nop
and
addr16
cmp
ret
adc
jnp
push
sbb
sub
sbb
leave
pop
adc
sub
shll
daa
add
lock
or
jl
dec
mov
cld
push
movsb
lock
xchg
cmp
cmpsl
lds
roll
inc
in
fstps
imul
xlat
out
enter
xor
pop
outsl
andb
pop
pop
push
mov
nop
pop
cmp
mov
jns
divb
fxch
inc
arpl
jmp
lds
inc
add
jp
es
cli
dec
pop
ds
scas
adc
mov
add
push
cmp
repnz
in
shlb
jp
lret
jno
xor
mov
and
cld
bound
fistpl
push
mov
in
or
in
test
cmp
jge
js
pop
sub
dec
pushf
out
sahf
xor
cltd
ret
xchg
movsl
idiv
je
sbb
loopne
nop
jo
subb
imul
cwtl
xor
push
test
or
cmc
lahf
mov
pop
pop
imul
int3
imul
int3
cwtl
les
inc
mov
push
pop
mov
cmpsl
jo
mov
jno
push
push
add
mov
test
mov
xor
fadd
mov
cwtl
sub
subb
push
into
lahf
cmc
mov
jae
pusha
adc
aam
sbb
imul
sbb
push
push
ret
sub
xchg
out
xchg
jmp
lock
jg
gs
push
adc
rolb
jp
xor
lds
gs
imul
sbb
daa
ja
testl
jb
fcomp
add
push
ss
inc
mov
and
jp
cmp
push
sub
loop
or
movsb
cmp
scas
add
push
rcrl
popa
pop
mov
inc
dec
push
xor
cwtl
loopne
dec
or
dec
or
out
dec
orl
push
sbb
loope
leave
test
into
bound
repz
in
stc
pop
rep
enter
fcompl
imul
int
mov
sbb
inc
mov
test
push
cmp
xchg
sub
jnp
cmpsl
lds
aam
in
in
call
pop
ljmp
sub
or
es
sub
xchg
les
mul
push
sub
push
dec
sarl
sar
out
inc
les
mov
call
and
xchg
push
sub
cmp
xchg
pop
leave
mov
movsb
xlat
jno
jb
outsb
das
inc
aaa
adc
insb
jb
js
dec
lock
mov
pop
test
sbb
dec
adc
cmp
lods
sbb
addl
sbb
xchg
xlat
xchg
mov
dec
mov
pop
sub
fsubr
xor
dec
jmp
lea
pop
js
xchg
sub
push
popf
ret
popf
mov
or
scas
inc
stc
shlb
out
cmp
cli
or
jp
in
pusha
xchg
in
sbb
subl
sti
int
mov
out
jge
out
popa
mov
fisttpll
das
dec
mov
call
xchg
mov
mov
ss
xchg
fisttpll
pop
mov
jg
pop
idivl
cmpsb
dec
hlt
cltd
mov
cmp
xor
sti
dec
mov
add
sahf
dec
fmul
push
les
adc
sbb
mov
ret
sub
std
popa
xor
in
xchg
jbe
ja
psubusb
popa
cmp
adc
das
in
lock
add
arpl
aaa
arpl
sub
xchg
movaps
pop
lea
nop
inc
test
stc
lret
fsubs
in
notl
out
xchg
sub
jns
dec
xor
cmp
inc
adcl
add
or
mov
cmp
data16
sti
pop
jp
test
jecxz
aas
jp
cmp
mov
mov
xchg
pop
test
push
fs
sbb
outsl
loope
and
push
mov
fmul
ljmp
mov
idivb
in
sub
push
cld
dec
lret
addb
inc
or
shl
stc
pusha
popf
fsub
daa
adc
out
pop
icebp
mov
mov
repnz
cmc
pop
push
ljmp
cwtl
adc
aaa
call
fs
push
lods
ss
jno
sahf
aaa
dec
sbb
mov
pop
jp
and
js
outsb
movsl
icebp
jne
pop
xchg
aam
decl
push
fcomps
andl
mov
imul
mov
or
jle
loope,pn
lahf
lock
rorb
je
outsb
adc
fsubr
pop
mov
dec
adc
clc
out
cli
cltd
mov
rcr
pop
mov
pusha
pop
das
das
mov
shrl
cli
sub
movsl
mov
xlat
movsb
aam
jp
loope
and
loop
push
cwtl
fs
cmp
movsb
jne
ret
cwtl
adc
in
sub
mov
out
sub
jo
and
inc
adc
rcrl
imul
cltd
xor
adc
push
and
icebp
ljmp
sbb
idivl
cmpsl
sub
sbb
sub
lcall
dec
inc
daa
inc
bound
dec
aaa
mov
dec
cmp
stc
insb
pop
sub
push
xchg
rorl
aaa
mov
in
pushf
jns
in
mov
dec
lahf
sbb
arpl
out
lods
xchg
cltd
icebp
loop
xor
adc
aaa
sbb
lahf
mov
pusha
popa
por
xchg
mov
call
xlat
frstor
out
imul
xchg
pop
stos
fwait
jp
test
and
jl
aam
loopne
add
xchg
lret
cli
jo
pop
imul
mov
adc
add
add
pop
shrl
out
sub
xchg
test
bound
aad
outsl
pop
ja
and
ret
pop
add
fwait
jae
jg
jle
xorb
pop
cmp
pop
add
std
cmp
fisubrs
or
cmp
bnd
add
xchg
cmpsl
mov
xor
fisttps
out
rcrl
add
and
dec
leave
ss
push
sub
sti
add
mov
gs
sbb
imul
out
hlt
dec
aad
mov
addr16
fucomp
repnz
jge
sbb
mov
xchg
arpl
mov
mov
sbb
mov
rcrl
lret
inc
add
ficoml
sbbl
mov
cwtl
popa
inc
pop
ret
add
aaa
int
jne
pop
and
cltd
xor
lret
add
mov
in
pusha
stos
cs
int
add
mov
out
jg
adc
mov
negl
adc
test
daa
inc
or
push
and
insb
in
jmp
or
sbb
pop
int
push
push
jno
adc
jbe
sbb
or
shrl
push
mov
mov
xor
lcall
cmp
push
mul
mov
dec
mov
mov
dec
xor
pop
fxam
out
xchg
mov
dec
loop
xor
dec
orl
sbb
cmpl
cmpsb
sub
in
cmp
inc
push
fimull
rcrl
xchg
gs
loop
pop
mov
testl
pop
sbb
sub
xlat
scas
lret
int3
add
xchg
jnp
fimull
add
xchg
xor
ret
jmp
shrb
stos
je
sub
bound
jmp
cmpb
clc
aam
orl
cwtl
or
into
mov
mov
lret
xchg
lret
mov
mov
xor
pop
mov
xchg
not
movsb
cli
jbe
fisubrl
dec
loop
inc
lret
scas
dec
les
xchg
cs
vphaddwd
xchg
out
push
out
push
rolb
int
xchg
rol
jo
cmc
push
sbb
xor
movsl
mov
add
xor
and
mov
cltd
ljmp
cli
in
icebp
es
jno
xor
arpl
popa
pop
xchg
xchg
rcrb
test
jno
loopne
mov
push
and
outsb
inc
ffree
mov
popa
sub
pop
das
or
mov
jbe
and
sbb
test
mov
das
js
push
ret
sub
cmp
sbb
add
test
xchg
pop
aam
sbb
mov
sub
call
and
and
test
stos
fidivrl
cs
add
sbb
adc
sbb
push
mov
sti
test
out
fcomi
sub
push
sar
subl
inc
ljmp
pop
aas
fstpl
lret
or
sub
mov
stos
cmp
and
cwtl
adc
lock
adc
mov
stc
mov
lahf
lods
inc
test
pop
fwait
add
test
or
add
pop
cmp
sbb
push
or
xchg
add
jge
adc
lahf
clc
mov
lret
jae
mov
sbb
pop
inc
push
bound
dec
in
in
xlat
fildll
in
cld
pusha
loopne
cmp
vxorpd
mov
add
test
sub
mov
inc
fistl
inc
jecxz
jae
fs
add
sub
push
sub
in
cmp
sbb
mov
inc
or
xor
jns
push
fistl
cltd
lret
test
inc
in
sbb
in
nop
pop
xchg
scas
pop
xchg
adc
test
mov
lret
push
in
ja
scas
dec
mov
mov
and
push
or
pop
ljmp
xchg
mov
inc
fsts
out
leave
cld
outsb
mov
mov
aam
cs
clc
je
repz
faddp
dec
popa
popa
mov
je,pt
mov
jno
mov
mov
cwtl
dec
lds
adc
push
clc
xchg
stos
xchg
inc
and
sub
xor
mov
das
push
sti
mov
or
iret
lock
dec
and
or
xchg
jb
sub
leave
add
pop
es
dec
mov
pop
and
cmpsb
fsubl
aaa
cmc
mov
cmp
xorl
or
sahf
leave
jno
test
sbb
mov
dec
push
sysret
gs
fiaddl
aad
inc
jne
jecxz
outsl
lea
cltd
inc
lcall
xchg
lea
mov
dec
mov
jp
fwait
cwtl
or
xor
or
sub
pop
not
inc
imul
mov
aas
push
cmp
xlat
mov
cmpl
xor
cmp
std
xchg
ret
cmp
and
sbb
push
push
push
lds
sahf
cmc
jnp
sbb
cmp
cmpsl
inc
mov
cmp
lock
dec
cmp
push
inc
push
mov
aam
mov
shlb
dec
aaa
lret
xlat
sub
es
jne
sub
bnd
repnz
xlat
stos
aam
pusha
inc
iret
iret
push
dec
fdivs
sti
lcall
mull
aas
stc
notb
cmpsb
inc
add
xor
out
mov
xorps
and
and
daa
mov
mov
jmp
dec
in
and
ret
in
mov
cmp
scas
call
adcl
and
repz
scas
and
adc
insl
mov
fwait
xchg
das
lret
jnp
cmc
jbe
push
mov
popa
scas
cmpsb
inc
mov
pop
cmpsb
in
adc
hlt
outsl
aad
mov
add
cmp
sub
sub
ret
inc
adc
or
out
mov
push
out
inc
cmp
mov
xor
inc
aam
je
xor
rcl
jmp
mov
xor
or
cwtl
je
das
test
or
cld
push
adc
nop
stc
mov
in
xchg
sub
hlt
jo
or
daa
in
push
int
add
xor
outsb
mov
xchg
insb
inc
out
mov
enter
push
scas
cmp
rol
clc
loope
insb
sbb
jge
or
push
fldt
jb
push
add
sbb
push
adc
xchg
jg
in
pusha
movsb
in
mov
cmp
int
xor
jge
test
adc
push
enter
movsb
std
popf
call
fs
ja
fnstsw
and
ror
sbb
mov
dec
dec
fcmove
xor
fistpl
and
ja
imul
and
clc
or
or
sbb
cmc
movsb
or
lret
and
lahf
fldenv
test
sub
dec
test
fbstp
xor
test
cltd
jecxz
mov
sahf
nop
in
pop
xchg
add
dec
fwait
addr16
push
add
lahf
negl
ds
adc
cli
push
sub
cmp
roll
mov
test
stos
sbb
cmp
loope
mov
in
shll
or
mov
outsl
xor
sti
dec
mov
inc
cltd
fs
cs
inc
pusha
lock
sub
in
stos
je
ret
addb
inc
jnp
adc
stc
enter
fidivrl
and
jo
add
adc
jmp
push
mov
popf
sbb
mov
xor
in
push
lcall
scas
and
jecxz
sar
ljmp
sub
push
popf
jp
gs
xor
mov
pop
inc
ljmp
ss
xchg
aam
stos
inc
mov
push
xchg
mull
sbb
mov
or
pushf
inc
cmpsb
xor
dec
fs
in
pop
aas
pop
cmpxchg
nop
fisubs
mov
push
jne
jp
fsts
jns
jnp
xor
into
insb
aam
pushf
out
rcr
fisttpll
lods
je
subb
cltd
pop
aas
mov
add
jnp
lods
ret
jne
mov
inc
dec
incl
shll
outsl
andb
sar
xor
jnp
jne
dec
repz
push
xchg
pop
int
push
leave
xor
in
lods
enter
push
arpl
fisttps
lret
mov
push
je
sub
and
pop
cld
adc
jo
test
ds
adc
test
movsl
fnstenv
sub
imul
fnstcw
cmpsl
and
dec
stos
orb
adc
adcl
enter
iret
adc
fucomp
adc
sbb
lcall
aad
lahf
iret
mov
and
sub
push
sbb
add
mov
fwait
push
sbb
loopne
fidivrs
mov
mov
pop
mov
add
push
sbb
repnz
sahf
sbb
inc
mov
icebp
das
dec
flds
fisttpl
cld
ret
lods
clc
sbb
cli
mov
fiadds
mov
push
test
subl
push
lods
imul
inc
inc
cmp
and
insb
fildl
in
adc
mov
inc
jae
roll
repz
and
call
clc
bound
adc
mov
addr16
fistpl
mov
inc
mov
fs
sbb
in
dec
fidivrs
mull
scas
stos
jmp
ss
jo
in
dec
inc
xor
shlb
mov
mov
inc
mov
xchg
xlat
pop
inc
and
jne
movsb
xor
int3
jne
je
outsl
dec
push
push
aad
or
mov
pop
inc
std
xchg
imul
adc
push
inc
adc
add
fsubs
pop
dec
inc
adc
stos
idiv
xor
shlb
cld
jne
aad
les
fs
push
adc
cmp
mov
ja
adc
aaa
xchg
mov
cmp
jecxz
adc
sub
cltd
dec
adc
sahf
add
sub
inc
lahf
mov
nop
xchg
dec
notl
sbb
lds
push
push
ljmp
dec
pushf
xchg
in
aaa
clc
mov
mov
rep
push
cmp
add
data16
ss
add
movsb
shlb
cmp
mov
jbe
jecxz
test
adc
push
xchg
inc
into
jbe
and
ret
cmp
shlb
push
pop
repnz
repz
mov
mov
ds
loop
cwtl
test
std
push
ret
sti
shll
sub
lods
adc
lret
add
stos
jecxz
das
in
dec
jne
mov
jge
in
sub
pop
dec
or
scas
sub
mov
jl
pop
push
sahf
les
dec
test
mov
call
mov
inc
inc
loop
mov
xchg
mov
cltd
insl
xor
mov
push
pop
mov
push
xor
mov
pop
push
daa
xchg
or
in
fs
cli
cmp
lods
lods
add
jp
in
or
fs
imul
clc
xchg
ja
sbb
lret
mov
aam
adc
jo
push
addl
sub
sbb
je
mov
movb
pop
jmp
movsb
xchg
push
inc
stos
aam
movsb
add
int
mov
in
or
push
int
pop
insb
xor
and
inc
mov
mov
adc
adc
gs
jae
xchg
sub
fs
xor
ljmp
sarl
sub
inc
dec
inc
stos
mov
dec
adc
clc
lret
mov
mov
xorl
ljmp
dec
xor
mov
inc
jns
adc
push
fucomi
mov
xor
pop
insb
pop
std
jle
xchg
xor
ljmp
pop
lods
lret
mov
cli
insl
sti
in
dec
xchg
in
fs
test
outsb
js
movsb
push
es
cmp
pop
cmc
jecxz
fnclex
sub
das
nop
fcmovnu
daa
jmp
mov
hlt
push
outsl
cltd
sahf
xor
and
orl
mov
in
pop
mov
push
stos
pop
jns
repnz
shrb
or
pop
fs
pop
jmp
jge
insb
sub
pushf
push
or
pop
insb
lea
mov
mov
add
adc
leave
divl
lcall
add
lods
dec
int3
or
shll
ds
ja
rclb
ljmp
out
data16
mov
sti
push
stos
inc
hlt
test
aad
mov
xor
addb
adc
sub
mov
jmp
jecxz
imul
lcall
fmull
insb
mov
call
cmp
lock
mov
cmp
lea
xor
push
xor
mov
bnd
jle
movsb
jmp
test
insb
rcr
sarl
out
fimuls
mov
sar
inc
xchg
ljmp
mov
mov
sub
sub
push
jl
ja
cmp
ret
xchg
sub
mov
push
jnp
arpl
pop
imul
insb
dec
sub
movsb
push
sub
imul
push
push
dec
icebp
mov
ja
in
pop
xchg
aad
xchg
pop
test
mull
scas
test
lock
sub
shll
sub
xor
repz
mov
mov
daa
cmp
mov
xchg
int3
jge
lds
aaa
push
pop
pop
push
push
add
add
icebp
cmp
lods
pop
xor
rcl
call
stos
iret
push
adc
inc
push
movsl
inc
fisttpl
sar
cmp
popf
mov
inc
mov
jnp
cmp
out
or
loop
repz
int3
mov
push
loop
bound
mov
daa
shrl
mov
insl
dec
or
mov
push
push
xor
inc
inc
lock
lds
cmp
cmp
bound
daa
dec
sti
std
and
das
imul
lds
dec
xor
popa
pop
mull
ficomps
add
data16
lods
pop
pop
ljmp
push
jno
mov
dec
outsb
and
or
cmpsl
enter
cmpsl
jge
push
outsl
popa
shrb
pop
jbe
cmc
xlat
data16
aam
xchg
pop
add
mov
lret
jge
in
pushf
xor
inc
pop
ljmp
dec
in
pop
enter
lods
movsb
into
sub
mov
jmp
daa
mov
das
ficomps
push
imul
and
fcoms
xor
shll
cld
fadds
leave
cmp
jne
js
push
mov
in
movsb
inc
notb
mov
jmp
imul
lods
pop
and
lret
lret
mov
jns
sub
add
imul
xor
hlt
cmp
dec
lcall
jns
pop
or
pop
mov
sbb
lods
iret
out
lds
in
push
out
lahf
scas
daa
cs
or
xor
in
repnz
daa
jo
fs
cmp
push
icebp
cmc
mov
out
data16
cmp
xchg
adc
lahf
fimull
jmp
jg
stos
or
mov
sbb
fmuls
mov
pop
cmp
shll
mov
adc
pop
outsl
push
in
dec
out
loop
imul
dec
cltd
xchg
es
xlat
in
insb
fistpll
lods
popa
imul
inc
pop
lea
xor
es
ret
popf
cmp
orl
mov
dec
ret
mov
roll
adc
cmpsl
movsl
adc
stos
or
dec
out
xor
inc
xor
iret
xor
lret
inc
pop
push
and
int3
push
cmp
sahf
push
cld
sbb
dec
jmp
jle
in
ret
pop
xlat
dec
push
ja
mov
leave
push
ret
mov
xor
es
iret
stos
mov
scas
cmp
mov
pushf
cli
hlt
lods
or
rcll
adcl
cmpsl
popa
mov
dec
sbb
and
int
push
inc
cld
lret
dec
popa
lret
aaa
cmp
frstor
pop
hlt
fidivl
or
dec
imul
add
rcrl
hlt
cmc
nop
mov
int3
xor
dec
push
and
mov
and
adc
mov
dec
test
sahf
loopne
pop
popl
data16
adc
mov
adc
cmpsl
pop
mov
push
mov
sub
jmp
daa
out
pop
cmp
mov
push
sbb
cwtl
movsl
or
inc
jno
std
dec
mov
bound
arpl
pop
push
rorl
pushl
or
leave
xor
mov
push
pop
cli
dec
adc
outsl
and
idivb
mov
mov
fistl
sbb
pop
mov
aaa
inc
mov
lock
scas
mov
lods
jns
bound
xchg
arpl
sub
dec
add
sub
lea
das
lahf
xchg
push
mov
repz
scas
cltd
inc
gs
cmpsl
imul
in
dec
sub
movsb
into
in
cmp
xor
ljmp
add
lods
out
jb
mov
dec
and
inc
mov
jae
aaa
xor
hlt
add
ror
add
frstor
add
sub
ds
or
cmp
sub
and
imul
push
adc
and
fsub
jge
jp
mov
loopne
pop
scas
outsl
mov
xchg
jo
cld
pusha
push
and
and
mov
movsl
sarb
cmpsb
inc
mov
xor
loopne
rcll
jo
xchg
cmpb
add
jmp
popf
jno
mov
outsb
adc
sarl
sti
xchg
scas
jnp
mov
xchg
sub
jae
fldcw
movsl
cmp
cmc
xor
adc
pushf
shl
and
pop
test
mov
xchg
xor
call
sub
pop
push
or
xchg
push
aam
idivl
mov
sbb
loop
mov
jns
adc
sbb
arpl
push
ss
inc
scas
loopne
add
dec
cld
and
daa
and
call
pop
cmp
dec
or
pop
roll
sub
pop
push
call
xchg
clc
repz
mov
aad
push
pop
mov
sahf
mov
pop
dec
add
out
jbe
mov
movsb
cmp
js
fwait
mov
divl
adc
in
loope
pop
jnp
lahf
imul
inc
sbb
sub
mov
aaa
mov
mov
sbb
push
dec
cltd
andb
cmp
fdivr
in
inc
lret
divl
or
mov
jecxz
outsb
mov
jp
add
jmp
or
pop
or
nop
sbbl
cmpsl
mov
push
push
mov
sub
cltd
add
add
mov
imul
jno
inc
add
adc
iret
cmp
imul
repnz
sub
cli
iret
lret
sbb
in
adc
rclb
movsb
mov
divl
cmp
cmp
or
or
js
push
inc
mov
and
inc
lret
jl
add
repnz
mov
popa
pop
pop
in
cmp
jns
adc
mov
xor
xorb
adc
sbb
push
xchg
into
loop
jb
sbb
enter
ret
das
xor
gs
pop
clc
adc
sbb
push
xor
sub
and
andnps
lods
ret
stos
jbe
mov
mov
fildl
mov
out
sti
bound
adc
mov
add
dec
scas
stc
or
lods
iret
inc
ja
adc
dec
cmp
adc
gs
sbb
imul
inc
xchg
jns
lock
cltd
cli
cmc
push
pop
add
and
sbb
fucomp
scas
popf
jb
mov
sub
push
dec
scas
sub
and
aas
test
mov
fldcw
mov
pop
mov
xchg
jae
jo
fstps
nop
mov
adc
mov
daa
pop
jbe
imul
mov
sub
ficoml
pushf
xor
idivb
ljmp
stos
nop
dec
je
mov
cld
cmp
cmpsb
inc
mov
mov
sub
mov
adc
vrsqrt28pd
sbb
decl
or
das
cs
int3
xchg
mov
mov
fcomps
jbe
loop
stc
adc
xchg
int
push
test
sbb
sbb
rolb
repnz
ror
test
in
sbb
mov
adc
loop
data16
std
ljmp
mov
sbb
jmp
mov
mov
mov
int
sub
pusha
mov
or
loopne,pn
jno
clc
sbb
adc
mov
repnz
loopne
sub
pop
out
pop
mov
pusha
js
int3
arpl
push
cmp
ja
jp
das
fldenv
data16
divb
lock
pop
jl
inc
movsl
adc
stos
aas
inc
insb
ror
shll
jne
shlb
aam
xchg
cmp
rcll
aas
jb
testb
data16
frstor
lea
dec
and
cmpsb
inc
xor
lock
jle
jl
add
jecxz
sub
jae
jne
jbe
leave
int3
cwtl
jnp
fisubl
jb
mov
push
xchg
mov
stos
repz
and
push
push
nop
or
jae
cmp
ret
call
pop
cli
cmp
clc
bound
outsb
and
outsb
and
cmp
sub
sbb
sub
sub
push
sbbl
cwtl
mov
mov
loopne
pop
mulb
sbb
xchg
lcall
in
sbb
lock
inc
cmpl
mov
mov
jo
int3
add
push
lret
jl
mov
xchg
mov
addr16
jne
xchg
push
xor
test
fildl
dec
aaa
mov
sub
shrl
fs
pop
push
cmp
cmp
fisubrl
push
shll
jo
mov
or
sbb
in
sub
ljmp
shl
adc
add
dec
xchg
test
jnp
test
scas
mov
shrl
and
mov
scas
xor
ret
rolb
sbb
addb
imul
pop
jae
pop
mull
repnz
adc
dec
lock
inc
test
test
or
out
jne
shll
scas
pop
sub
xlat
add
xchg
aam
xchg
inc
frstor
xchg
dec
xchg
andl
movsl
outsb
pop
sbb
jge
pop
inc
xchg
jecxz
mov
push
loope
mov
sbb
in
sbb
cmp
insl
cs
mov
lds
int3
add
outsl
rclb
pavgb
stos
xor
push
mov
pop
insb
in
xchg
lock
xchg
dec
dec
push
in
or
stos
xor
insb
lds
dec
ficompl
mov
inc
js
bound
mov
add
add
int3
mov
jo
bound
dec
push
and
cmp
pop
sub
pop
push
xchg
mov
call
sub
movsb
enter
push
into
lock
pop
sub
imull
inc
jno
scas
ret
shr
ret
adcb
xor
xchg
test
mov
xchg
mov
xchg
repz
cmp
pop
jnp
cmpsl
rorl
imul
stos
mov
inc
movl
sarl
mov
addr16
push
jae
xchg
push
jo
or
jg
sbb
ljmp
sbb
mov
push
mov
movsb
or
sub
mov
ss
es
in
nop
xchg
pop
aas
notb
leave
add
jl
les
dec
fwait
scas
and
int
add
xor
mov
fstpl
dec
push
es
push
dec
jnp
xchg
loope
mov
in
int
mov
push
xchg
and
mov
jnp
imul
icebp
mov
rolb
mov
rolb
loope
xchg
incl
sub
inc
loope
clc
dec
imul
stc
cwtl
cmpb
push
pop
subb
lret
xorl
jl
imul
jns
cmp
mov
push
aas
jl
je
inc
sub
ret
xlat
fldt
mov
sbb
adc
jmp
popf
aas
jns
nop
mov
sarl
out
add
daa
mov
mov
fisubrs
adcb
sahf
les
cltd
inc
lcall
ss
insl
cmp
dec
push
push
mov
jmp
pop
les
fnstcw
mov
syscall
push
or
aam
icebp
jge
jmp
leave
leave
jno
cmp
jae
int
sub
or
sbbl
jg
add
xor
int3
adc
xor
sahf
clc
mov
call
nop
shll
sbb
ret
xchg
out
cmp
ss
mov
in
mov
jnp
ja
or
pop
out
bound
aad
scas
repnz
pushf
arpl
push
inc
pop
shll
pop
mov
xor
add
jmp
xchg
xor
and
sahf
movsl
sbb
mov
outsl
jmp
gs
pop
pop
dec
stc
lret
dec
pop
xor
dec
mov
xchg
cmp
cmp
cmpsl
pop
int
pop
dec
dec
hlt
and
xor
ds
mov
pusha
and
push
sbb
cmp
cld
sbb
shr
sub
into
push
bnd
cld
and
jecxz
les
xchg
xlat
jno
outsl
inc
fdivl
cmpsl
pop
and
movsb
dec
jns
jo
mov
loopne
dec
mov
mov
dec
dec
sbb
je
jne
cmp
outsb
push
movl
xchg
out
pop
inc
outsb
pop
cli
pop
stos
mov
cs
inc
es
arpl
jns
sub
movsb
xor
jno
es
push
fstpt
cmp
add
sub
xchg
bound
and
jnp
mov
fisttpl
push
fwait
mov
adc
inc
mov
cmpsb
in
push
inc
push
sti
jbe
dec
cmp
pop
xor
cmp
add
popa
sub
ljmp
pop
jb
ljmp
add
jl
iret
xchg
add
cmpsb
adc
daa
xchg
xor
pop
xchg
sbb
mov
icebp
sbb
scas
dec
movsb
sbb
pop
sub
push
push
push
fs
rorl
iret
and
data16
adc
insb
test
cs
xchg
sbb
gs
stos
cs
adc
cmp
inc
cmp
sbb
stos
mov
sbb
lea
jecxz
lods
pop
insb
jmp
subb
push
mov
cmpsl
lahf
movsb
sbb
mov
bound
mov
sti
mov
out
sub
scas
xor
inc
or
imul
jp
mov
mov
or
in
test
jle
clc
add
sub
push
into
subb
in
insl
cs
sbb
or
into
pop
shrb
xor
xor
out
test
inc
aam
mov
mov
cmpsb
jns
pop
repnz
int3
fdivrl
mov
push
jnp
xor
rorl
xchg
cmp
adc
shll
repz
push
mov
inc
inc
add
jne
out
cmp
cwtl
push
xor
insb
inc
add
test
dec
add
mov
or
movsb
mov
mov
jecxz
jne
insb
and
pop
les
dec
mov
repz
outsb
adc
dec
fcompl
jb
sub
into
xor
outsl
xchg
out
ljmp
xchg
cli
lret
mov
lods
insb
xlat
ja
ret
adc
xor
fisubrl
inc
add
stos
repnz
xchg
mov
and
jo
out
mov
packsswb
in
shrb
sub
shlb
cmp
insl
loop
jmp
mov
push
inc
push
in
add
in
adc
cmp
or
js
xchg
bound
negb
fistps
jno
inc
aad
in
sbb
outsb
and
sbb
sub
fsubrl
ljmp
mov
inc
xor
mov
dec
cmc
scas
movsl
sbb
push
std
in
lahf
sub
push
dec
popf
gs
mov
push
inc
adc
and
aad
mov
and
add
into
dec
pop
or
dec
sub
push
mov
test
add
xchg
push
pop
jle
iret
add
icebp
mov
xor
cmp
dec
xchg
sbbl
or
jl
loope
fstpl
dec
inc
pop
pop
jmp
dec
adc
push
jno
mov
cmp
xor
je
shlb
sahf
sti
mov
je
dec
in
in
cwtl
add
arpl
push
push
mov
cs
addr16
xchg
lods
icebp
or
repnz
push
lods
xchg
mov
sahf
mov
fnsave
push
loopne
insb
movsl
jge
fisubs
mov
inc
cli
in
or
loope,pt
pop
xor
mov
push
loope
or
repnz
inc
mov
cmp
mov
pop
sub
icebp
xor
pop
fwait
cmpsl
js
sub
xchg
adcb
and
pop
sbb
imul
rcrb
in
sahf
jle
sub
dec
xorb
pop
out
notl
loop
ss
das
cmp
sarl
xchg
shrb
inc
adc
ret
cltd
test
sbb
lahf
repz
outsl
lahf
xor
xchg
xchg
lods
xor
nop
imul
leave
add
lahf
xchg
inc
adc
pop
mov
add
imul
xchg
dec
test
push
movsb
call
sbb
mov
les
out
jp
int3
mov
rcrb
push
dec
push
sub
js
inc
in
adc
pop
popf
test
scas
jle
cmc
pop
adc
add
xchg
shrb
mov
das
shrb
int
es
xchg
insb
inc
add
or
sbb
loope
pop
fdivr
mov
cmp
lahf
xor
hlt
fabs
addl
popa
in
insl
sbb
push
imulb
sub
and
dec
nop
dec
dec
sbb
or
mov
sub
push
or
and
jae
xor
mov
mov
pop
in
shll
pop
sub
iret
mov
mov
xchg
cmp
xchg
xor
mov
rclb
dec
push
adc
mov
out
push
or
mov
dec
insl
scas
cmp
rcll
mov
pop
rclb
ljmp
scas
cs
mov
test
adc
cltd
mov
and
testl
dec
sbb
mov
sbb
rclb
and
push
add
iret
inc
or
adc
push
call
cmp
imul
jmp
mov
pushf
push
push
pop
cmpsb
int
je
add
fisubrs
inc
es
pop
push
cmp
inc
push
ficompl
adc
ret
add
inc
icebp
cmpsl
add
jp,pt
jo
shrl
jb
xor
add
clc
mov
sbb
mov
xor
stc
fstps
lcall
sbb
push
movsl
dec
lret
aam
addr16
arpl
call
stos
fsubp
xchg
nop
cmp
jno
add
adc
roll
pop
xchg
adc
jo
dec
ja
cmc
push
out
or
mov
mov
add
loopne
pop
adcl
arpl
call
mov
ror
subb
test
out
or
js
inc
insb
cmp
inc
push
pop
mov
xor
pop
jl
ret
nop
cld
into
cmp
jnp
std
cli
ret
idivl
push
scas
loop
push
push
inc
ds
inc
loopne
cld
inc
jb
loop
std
je
xor
lock
lcall
mov
inc
add
push
aaa
add
imul
inc
mov
sub
xchg
mov
xchg
mov
mov
pop
insl
out
sub
fldt
or
or
sub
pop
mov
dec
mov
ss
ljmp
adc
jnp
push
jb
in
mov
dec
pop
rclb
jle
and
shr
xor
ret
fidivrl
jno
ret
and
inc
flds
sub
mov
cmp
data16
stos
dec
push
dec
or
xchg
or
cmp
sbb
rcr
cltd
mov
arpl
sub
mov
and
cltd
fsubrl
aas
dec
xor
inc
sbb
mov
sub
cwtl
fcomps
dec
and
sbb
mov
loopne
cmc
ret
call
lock
daa
adc
fs
sub
nop
lods
fnstenv
out
divb
insb
bnd
push
ds
int3
adc
ret
enter
xor
mov
push
sbbb
scas
leave
pop
sbb
cmc
mov
add
fnstsw
adc
iret
icebp
cmp
add
mov
pop
fisubl
mov
lret
add
dec
add
mov
jg
dec
push
ficompl
ja
xchg
andl
lock
inc
pop
push
sbb
out
sbb
shl
test
shlb
pushf
sbb
mov
sub
fldenv
xchg
mov
outsb
pushf
popf
push
into
push
xchg
mov
daa
sbb
outsl
mov
test
xor
xor
mov
ds
les
mov
and
jle
mov
mov
sbb
mov
fdivrl
xchg
clc
iret
addb
jmp
js
adc
cmp
dec
jg
xchg
xchg
dec
sahf
movsb
or
cmp
pop
jecxz
lea
jl
jb
fs
add
cmp
mov
sbb
xchg
and
mov
add
pop
mov
jecxz
call
and
vpsubusb
repz
mov
outsb
sar
fbld
mov
insb
lods
adcl
shll
sbb
xor
je
les
sahf
mov
dec
jl
data16
lret
jl
sahf
jo
movsl
inc
rcll
sub
push
lcall
pop
fbld
push
jmp
xchg
fs
outsb
sub
mov
test
loope
rcrl
test
jl
mov
sar
or
hlt
test
mov
sbb
pop
stos
mov
mov
mov
arpl
int3
dec
mov
sub
pop
xor
adc
mov
sub
inc
loop
pop
and
push
lret
aad
and
cmpsb
lret
mov
pop
or
out
loope
outsl
ret
adc
jg
xchg
test
addr16
xor
mov
sbb
mov
sbb
xor
jne
movhps
imul
xchg
test
test
into
shrb
mov
sub
stos
lods
lods
dec
cmp
shlb
iret
pop
out
jns
xlat
xchg
or
jmp
push
pop
data16
sbb
pop
rcl
dec
gs
cmp
and
sbb
ffree
loope
push
mov
lcall
insl
sub
and
in
push
push
rorb
cltd
insb
mov
jge
pop
les
add
insb
jne
add
inc
push
or
xchg
inc
loope
sbb
cmpb
sti
jmp
jo
or
mov
pop
lea
sbb
call
pop
insl
pushf
xchg
cmpsb
out
ja
popa
call
in
les
mov
sahf
loop
sarl
fwait
dec
lock
test
repz
fwait
push
lods
sbb
sub
dec
mov
lds
insl
xor
gs
jecxz
int3
inc
dec
mov
stos
cld
aas
sub
stc
leave
lret
pop
dec
hlt
adcl
loope
mov
sub
and
xor
scas
xchg
test
sbb
loope
mov
movsl
mov
push
and
sbb
shll
pop
daa
rorl
xchg
sub
push
in
sub
cmp
aas
das
inc
and
mov
jmp
mov
xor
and
outsl
scas
push
out
pop
and
pop
dec
call
rcrb
fcoml
xchg
rolb
adc
pmulhuw
or
outsb
call
scas
neg
and
xchg
jns
adc
and
inc
cmp
ljmp
add
inc
sub
fidivl
mov
popf
loop
or
out
and
movsb
rorl
daa
andb
add
movsl
cli
inc
in
push
or
call
sahf
mov
out
sarb
lods
jo
out
inc
mov
bnd
arpl
std
jl
insb
daa
std
andl
stos
out
mov
or
cmpsl
mov
shl
and
out
or
outsb
int3
xor
jg
inc
push
adc
sbb
or
mov
shll
out
and
loope
js
xchg
jp
in
stc
mov
dec
or
cmp
xchg
jl
les
xchg
shll
es
xorl
adc
inc
fsts
mov
nop
and
fimull
xchg
mov
iret
gs
xor
das
or
mov
mov
xchg
xor
mov
add
adc
pop
push
add
mov
xor
adc
fucom
inc
or
jmp
push
nop
das
jmp
arpl
add
loop
mov
cmp
std
jno
mov
pop
mov
and
icebp
bound
ljmp
cld
mov
add
leave
push
iret
fidivrs
adc
inc
or
cli
push
dec
xor
push
mov
cli
inc
movsb
ja
scas
push
cmp
out
sbb
pusha
jmp
mov
jle
iret
adc
inc
or
das
fwait
xchg
cmp
add
push
mov
mov
xor
test
hlt
nop
sti
jmp
out
test
rol
adc
cmp
pop
jge
or
mov
cmp
dec
out
mov
mov
lahf
lcall
or
dec
loope
cmpsb
adc
jle
push
shll
aad
sbb
mov
mov
insb
shrl
mov
iret
xor
dec
jle
mov
cwtl
mov
xor
push
int3
cmp
testl
or
pop
loop
or
jg
cmp
pop
sub
in
push
pop
add
icebp
int
mov
xchg
pop
loop
fsubrs
or
jb
movaps
fs
xor
xchg
loopne
pop
stc
hlt
add
fcoms
pop
pushl
shll
shrb
mov
ffreep
sbb
divl
push
add
addr16
adc
imul
pop
aaa
mul
scas
in
fdivl
xchg
mov
pop
mov
add
pop
add
mov
sub
cs
sti
lcall
ret
sub
lock
shrb
lock
inc
push
mov
imul
push
push
inc
dec
and
notb
inc
mov
push
pop
ljmp
xor
xor
fdivs
aad
mov
lods
pop
pop
pusha
mov
mov
mov
push
fldcw
or
adc
paddsw
popf
jns
or
inc
and
cld
sbb
bound
pop
pop
call
ficompl
jo
dec
pop
push
jp
mov
mov
sbb
cmpsb
xchg
adc
lahf
cltd
dec
loopne
cli
stc
xchg
mov
pushf
stos
xor
or
cmp
mov
loop
ret
ret
repz
into
jno
dec
pop
mov
test
cmpsb
and
push
hlt
fst
pop
lock
and
and
aas
dec
scas
enter
mov
sub
iret
addb
mov
xchg
jle
dec
out
lds
sub
cmc
add
add
mov
and
ror
loop
or
idivb
pushf
jno
xor
sbb
stos
mov
loopne
jns
push
stos
jge
out
xchg
test
dec
or
cwtl
lret
add
cmp
dec
and
mov
leave
les
pop
mov
stos
and
jo
call
ds
addr16
call
sti
pop
sbb
in
add
fisttpl
xchg
sub
ds
xchg
loope
out
cmpsl
out
cmpsb
repz
adc
loop
movsl
cmpsl
add
test
in
leave
add
xor
pusha
fsubs
mov
sbb
mov
orl
imul
cmp
adc
insb
xchg
pop
in
mov
fiaddl
push
call
cmp
ror
mov
in
inc
sub
xchg
bnd
subb
ss
jb
and
jecxz
mov
cmp
mov
dec
or
xor
lds
push
jp
ret
xor
std
sbb
or
push
adcl
mov
sbb
scas
sub
call
push
addb
adcb
roll
aam
prefetcht2
popw
adc
loopne
stos
pop
cli
scas
stc
and
jns
xorl
int3
adc
xor
fistpl
push
inc
icebp
mov
out
inc
add
inc
cld
je
and
inc
lea
and
mov
fcomps
in
mov
mov
sub
push
js
pop
in
lahf
mov
cmp
in
shl
mov
mov
xchg
jp
repnz
add
popf
ret
xchg
dec
mov
push
dec
stc
push
pop
xor
loopne
imul
mov
or
and
and
cltd
iret
icebp
cmpsl
xchg
dec
std
jb
mov
jle
adc
shr
or
pop
enter
sbb
test
xchg
xchg
xlat
sub
out
xchg
and
fs
adc
hlt
repz
push
int
in
xor
dec
outsl
clc
mov
repz
stos
jb
jae
shll
dec
movl
push
clc
sti
pand
mov
jle
nop
add
or
jae
mov
mov
adc
lahf
push
jnp
call
lret
cmpsl
out
sub
cmp
xchg
xchg
jbe
sbb
dec
out
emms
lahf
jmp
mov
jns
xchg
mov
jne
xor
arpl
int
or
mov
adc
in
int3
aaa
cmp
mov
and
dec
cs
push
xorl
call
mov
out
or
xchg
or
fldcw
mov
cmp
int
scas
cltd
jge
push
mov
xchg
add
js
imul
mov
xor
dec
outsl
dec
pop
push
enter
xor
fisttps
sub
fs
in
add
ret
nop
and
bound
push
ja
mov
in
sub
mov
fsubrl
ss
add
push
aam
mov
mov
loope
xchg
or
mov
fnstenv
push
sbb
pop
in
push
daa
inc
cmpsl
pop
xchg
repnz
pop
mov
cli
and
mov
push
push
jo
shl
dec
adcl
mov
fdivl
aad
data16
sti
inc
cltd
push
gs
and
int3
fdivrl
add
pop
pop
sub
push
dec
fisubrl
stos
mov
aas
filds
mov
add
jle
mov
popa
jmp
mov
mov
push
and
cmp
pop
push
xchg
loop
push
or
mov
insb
hlt
into
cmp
jb
and
cmp
mov
cs
dec
fimuls
mov
or
shrb
arpl
shlb
dec
sbb
fwait
dec
dec
std
out
lods
sbb
mov
dec
test
sub
sub
xchg
shll
sbb
imul
add
or
mov
jp
repz
jns
mov
cmp
pop
dec
inc
loope
lods
fucomi
xchg
pop
push
or
aaa
push
addr16
arpl
mov
addr16
fidivs
lods
mov
xor
mov
inc
cs
pusha
sbb
fisttps
pushf
push
push
push
jo
mov
lods
pop
sarb
aas
inc
xlat
js
sub
cli
leave
scas
inc
dec
lock
adc
test
pop
rcr
pop
mov
shrl
loopne
imul
push
dec
xchg
mov
clc
jnp
ds
ljmp
sbb
cmp
jnp
bound
sti
and
and
int3
sbb
sbb
stos
inc
adc
cltd
dec
lcall
sbb
pusha
gs
test
sbb
xchg
cmp
iret
sbbb
lahf
gs
sub
hlt
inc
push
int
dec
lret
adc
lock
pop
lods
cmp
lea
pusha
cs
push
test
and
lea
cmp
ja
clc
push
mov
movsl
inc
and
int3
dec
fsubrp
mov
mov
mov
in
xchg
push
subl
jle
mov
sub
data16
insl
lods
out
xchg
add
sti
jge
imul
add
inc
xchg
or
js
xchg
dec
jmp
lds
es
movsb
xor
mov
push
ja
add
push
add
aad
pop
sub
stos
mov
mov
inc
mov
xchg
int3
in
cli
sub
fstpl
or
loopne
lcall
cmp
push
mov
pop
mov
xchg
roll
in
xchg
cld
and
mov
mov
insb
es
pop
pop
pop
sahf
jg
jmp
inc
enter
fdivl
xor
push
sub
or
jecxz
daa
sub
fidivrs
popa
push
push
data16
es
das
int
xorl
repz
sub
insb
mov
push
adc
push
scas
push
cld
repz
pop
lock
sarb
xchg
pop
popa
xchg
js
cmp
je
scas
shl
lds
inc
test
sub
push
stc
ret
mov
lcall
dec
mov
cwtl
mov
push
jnp
xchg
ret
out
cmp
add
mov
call
dec
jg
add
pushf
cs
sub
jbe
fmuls
adc
and
call
lods
jmp
out
inc
data16
mov
cld
sub
xor
push
fcompl
ret
inc
test
push
push
arpl
repz
dec
fstpl
mov
xor
popf
pop
fstpl
adc
cmp
insl
fcomps
xchg
jns
mov
fwait
test
and
test
jp
adc
aad
jb
xchg
add
arpl
out
arpl
pop
sub
and
aam
push
adc
outsb
lret
sbb
addr16
mov
lods
fistps
sahf
rorl
mov
lret
scas
sbb
jecxz
mov
test
into
sub
daa
pop
add
outsb
notb
cmp
add
lret
aaa
push
or
cltd
mov
pop
mov
shl
cmpsb
loop
fildll
adc
fdivrl
cli
mov
add
sub
push
in
scas
sbb
xchg
mov
xchg
sti
mov
rcrb
mov
fldcw
out
pop
cld
xor
xor
adc
and
jg
lea
cmpsb
push
xchg
rol
jg
gs
in
and
hlt
xchg
lods
sbb
inc
mov
pop
add
icebp
aad
push
cmp
movsb
shrb
inc
inc
lcall
das
push
insb
adc
xchg
mov
fisubrl
mov
add
aaa
mov
inc
clc
iret
addb
loopne
lock
cmpsb
cld
dec
cli
push
xchg
xchg
icebp
fcmovbe
divb
cmp
negl
fwait
rorb
rolb
nop
mov
rorl
mov
pop
out
pop
cmpsb
jp
jmp
mov
or
sbb
cmp
cli
jmp
inc
mov
mov
fwait
rcrb
in
pushf
and
into
and
outsl
imul
dec
sar
sbbl
mov
add
mov
mov
fists
inc
sbb
orl
dec
xchg
clc
aaa
sbb
icebp
aam
mov
aad
mov
push
aas
test
xchg
add
faddl
lret
mov
aas
enter
mov
icebp
xchg
xor
adc
sub
lahf
cmp
dec
mov
cld
enter
jnp
repnz
fcmovb
jns
pop
pushf
in
dec
mov
xor
stc
pop
ret
lret
mov
xchg
inc
sbb
fcmovne
cwtl
push
mov
add
outsl
jg
js
loopne
or
leave
cmp
andb
jnp
inc
mov
and
enter
ja
inc
in
jp
push
fcmovbe
jbe
lock
pop
push
pushf
cltd
push
scas
aaa
mov
sbb
push
and
inc
stos
ljmp
outsl
les
sbb
xchg
shr
fidivl
nop
call
inc
pusha
jmp
sbb
ljmp
jg
mov
cmp
mov
in
lock
mov
mov
push
je
cmpsl
lcall
pop
or
dec
rol
mov
dec
movsb
xor
or
shr
mov
xchg
push
pop
iret
fstl
pop
sub
pop
inc
js
mov
pop
adc
push
imul
push
xor
jns
jge
pop
out
aad
inc
fdivrl
pop
iret
adc
jns
arpl
jb
jge
mov
dec
xor
stos
loop
jns
inc
in
je
xor
lds
imul
mov
add
in
add
sbb
inc
pop
hlt
xor
shll
fsub
pop
add
sahf
jp
dec
mov
jne
loopne
sahf
xor
js
xor
jp
lret
test
adc
or
xchg
ljmp
repz
stos
pop
sahf
dec
mov
aaa
sbb
vpunpckhdq
loopne
pop
xchg
dec
sbb
mov
inc
or
jl
std
add
sub
mov
cmp
push
jae
dec
and
setnp
movsl
cltd
sahf
or
cmp
pushf
jb
xchg
popf
sahf
jmp
clc
xorl
inc
pop
jle
cmp
push
sbb
andl
inc
lret
and
popa
inc
xchg
mov
ret
push
or
cmpsl
mov
mov
sbb
mov
sub
fld
pusha
mov
mov
dec
clc
mov
cmp
outsl
das
rcl
negl
push
mov
adc
xchg
pop
enter
mov
mov
lret
and
jge
jne
js
mov
jecxz
dec
loop
ss
jp
jl
or
xor
sub
fstp
mov
fwait
jbe
lret
xchg
xchg
and
or
push
pushf
addb
jle
sbb
in
dec
xchg
aas
mov
mov
dec
repz
addr16
in
pop
aas
and
pop
test
adcl
aas
and
xlat
pop
in
imul
and
inc
mov
rcll
addl
adc
or
fsubl
adc
jb
in
push
sbb
arpl
jne
sub
add
cli
and
clc
js
out
jl
pushf
sbb
inc
xchg
ljmp
inc
jae
pop
xchg
pop
jne
xor
jecxz
cmp
ds
xchg
jb
movsl
fs
in
or
aaa
sti
das
pushf
xor
and
insl
add
xor
out
scas
xor
pushf
push
adc
repz
les
sti
mov
enter
xchg
dec
clc
jg
pop
push
cwtl
arpl
or
mov
xor
push
arpl
dec
loopne
push
or
and
push
adcl
clc
cmc
adc
mov
and
aaa
ja
fsubrl
mov
int
rcl
xchg
test
adc
push
in
imul
stos
add
fnsave
call
jo
subl
pop
jb
test
jae
xchg
daa
es
leave
cmpsb
jnp
test
out
stos
jno
and
stos
scas
xchg
imul
in
cmp
sbb
xlat
add
bnd
rcll
cld
xchg
outsb
pop
popa
popa
repz
xchg
mov
push
mov
shl
sbb
loopne
pop
pop
inc
or
mov
sbb
adc
cmp
rorl
sub
das
cmpsl
push
mov
adc
sbb
pop
ss
and
sarl
movb
test
shlb
inc
and
add
jne
xorb
mov
addr16
cmp
ja
sti
xchg
push
nop
mov
cmc
loopne
cmp
xor
dec
insb
add
sbb
dec
stos
fsubl
aas
iret
in
dec
mov
cltd
in
cmpsl
dec
xchg
call
inc
aaa
fcoms
xor
cmp
sub
sub
cwtl
outsb
or
add
int3
addr16
cli
mov
test
push
clc
imul
outsl
in
mov
ret
xbegin
xchg
leave
jl
xor
adc
pop
outsl
imul
xor
add
xor
dec
mov
cmpsb
jecxz
sbb
ret
sub
gs
mov
imul
jb
or
jns
popa
fmull
das
and
ss
les
nop
push
movsl
mov
and
scas
int
xor
sub
stos
sti
movsl
aaa
jp
fnstcw
sbb
lcall
xchg
ljmp
shl
or
test
imul
xchg
push
adc
scas
repz
adc
mov
imul
lret
sub
leave
sbb
leave
fwait
inc
xor
sahf
fsubs
aam
ret
lds
les
frstor
push
test
and
sarb
pushf
in
aad
pop
pop
xchg
ljmp
cmpsl
sbb
mov
mov
and
insb
add
adc
cmpsl
cld
mov
adc
iret
out
les
pop
out
add
scas
inc
out
or
jnp
jno
mov
or
and
int3
test
xor
xchg
sub
cmp
or
jbe
ds
add
xchg
push
cmp
fs
and
dec
xchg
inc
pop
cmp
dec
dec
xor
outsl
or
dec
bound
arpl
adc
rcll
scas
pop
pushl
clc
sbb
scas
adc
movsl
cmp
andl
add
pop
cmp
repz
aas
inc
pop
sub
cmp
xchg
mov
adc
cmpsl
bound
rcrb
push
xchg
fisttpll
sub
por
mov
mov
call
cwtl
mov
insb
pusha
sahf
mov
test
pop
mov
xchg
das
inc
push
lret
popa
pop
out
outsl
outsb
sbb
insl
pop
cld
mov
mov
mov
lods
push
in
cmpsl
jnp
addb
jne
add
scas
cmpsl
out
iret
mov
leave
fimull
ds
iret
push
jns
cmpsl
sti
mov
mov
hlt
or
and
mov
fcmovnb
stos
cltd
das
repnz
lods
or
dec
popa
add
jle
pop
lock
sarl
stc
push
xor
inc
jb
fisttps
clc
and
andb
bound
sbb
leave
mov
cld
loop
subb
pop
sbb
outsl
mov
jmp
mov
mov
lcall
sub
pusha
inc
test
movsb
loope
jg
jae
xchg
jecxz
push
ljmp
dec
pop
sub
mov
mov
pop
ss
mov
cmpsb
in
repnz
popf
cmp
lret
mov
scas
cmp
leave
xor
xchg
ljmp
cmp
das
rcr
leave
push
sti
and
mov
test
mov
ret
mov
xchg
icebp
jle
out
test
push
les
sti
sarb
mov
test
into
dec
xchg
fidivrs
mov
jae
sub
xchg
push
dec
pop
cmpsb
push
push
fldcw
jle
pop
stos
mov
repnz
int3
xor
sarl
pop
pop
fstpt
out
inc
add
mov
inc
imulb
cmp
pop
mov
xchg
cmc
adc
iret
pop
xchg
sub
add
aas
mov
pop
push
out
and
lea
sub
sub
sbbl
ret
les
mov
sahf
inc
hlt
adc
push
iret
decb
add
sub
and
out
add
out
mov
test
mov
xchg
orl
sub
int
sbb
mov
rclb
addr16
xchg
jmp
mov
cwtl
mulb
ds
lock
inc
sub
inc
out
pop
clc
cmc
sarb
mov
fcmovnb
sbb
sub
or
push
or
xor
les
mov
movsl
fwait
mov
sub
testl
push
lcall
xchg
pop
das
cwtl
add
lods
pop
mov
test
and
mov
push
push
xchg
ret
pop
fsts
and
or
cmp
xchg
clc
les
imul
xor
imulb
xchg
addr16
cs
sub
mov
fwait
add
shrl
or
sub
outsb
mov
cltd
mov
fcoms
mov
or
mov
sub
aaa
mov
dec
lahf
lods
test
imull
xchg
pusha
and
fldenv
int
mov
xor
out
mov
pop
into
mov
aad
xor
leave
mov
fbld
and
shrl
lret
out
dec
cmp
pusha
into
mov
mull
stc
push
pop
lahf
jp
hlt
mov
sarl
lock
lods
push
jo
push
or
ss
and
sub
addr16
mov
xchg
xchg
lock
push
jb
mov
stos
mov
jnp
int
sub
out
in
in
fcmovnbe
xchg
sbbb
lock
and
call
xor
push
sbb
cld
lret
rclb
cld
mov
rcrb
aaa
xor
dec
js
push
ficompl
add
dec
mov
inc
out
xchg
pushf
int
sub
outsb
rclb
pop
and
xor
xchg
jecxz
dec
mov
xor
or
negb
ds
movsb
xchg
scas
xchg
jnp
popf
push
div
and
lret
loopne
mov
push
sahf
int3
add
rclb
inc
mov
or
dec
and
and
stc
scas
and
dec
lcall
andl
cltd
cltd
and
cmp
in
fiadds
mov
push
int3
xor
sub
cmp
not
add
test
lods
xchg
jbe
mov
jge
adc
int
fs
aas
fisubl
lret
add
sarb
outsl
stc
mov
mov
jns
popf
das
cmp
shll
into
in
mov
push
adc
lret
mov
inc
sbb
xchg
ja
cltd
add
lods
cmp
pop
jecxz
out
mov
rolb
idivb
mov
sbb
dec
cmp
pop
adc
inc
jns
imul
icebp
pusha
jmp
mov
mov
idiv
inc
jb
loope
pop
pop
int
aas
or
jne
icebp
int3
push
rcrb
test
adc
in
push
outsb
lret
mov
dec
lret
notb
bound
push
pop
cmp
push
cmpsb
lea
pop
int3
test
test
outsb
mov
movsb
and
subb
stc
addb
cwtl
cmp
ljmp
fsubl
pop
cs
inc
mov
adcl
sub
xchg
gs
dec
aam
mov
mov
js
add
hlt
fidivs
mov
fisttpll
lock
int
dec
std
iret
xchg
xchg
ljmp
stos
lods
fdiv
dec
jbe
test
out
pusha
lcall
cmp
mov
out
xor
sbb
out
testl
jecxz
xor
arpl
lock
jmp
mov
fcompl
mov
fsubs
add
jno
push
std
inc
scas
adc
cmp
or
clc
push
fwait
mov
in
call
xchg
fs
inc
ljmp
fdivrs
sahf
push
loop
cli
jo
add
in
jge
mov
sbb
or
push
daa
fstps
mov
fcmovb
mov
and
mov
pop
shlb
sub
jbe
sbbb
inc
stos
xchg
ljmp
mov
push
pop
lock
dec
mov
aaa
xchg
mov
fldenv
inc
cmp
daa
sbb
mov
or
jl
add
stos
push
js
dec
and
cli
pop
cltd
inc
jb
pop
ret
jp
cmpps
jecxz
fldenv
ret
lods
xor
mov
or
insl
xlat
pop
cwtl
fistps
mov
mov
or
lahf
ret
mov
les
jp
sub
inc
std
rclb
jae
shrb
pmulhw
cwtl
mov
jno
pop
mov
rorb
into
xor
in
bound
test
fbld
lahf
adc
dec
cmp
inc
shlb
mov
pusha
shll
adc
subb
push
pop
sti
pop
mov
ret
add
gs
cli
ja
jmp
xchg
push
ds
repz
int
add
stos
clc
jnp
and
and
sbb
push
xchg
push
in
out
sub
mov
push
sub
push
mov
cmp
test
aam
fstpt
mov
fidivl
add
ljmp
popf
repnz
sub
adcb
in
rclb
xchg
repz
ds
daa
adc
std
pop
pop
or
into
push
adcl
or
cmpsl
pop
sub
dec
pop
jo
adc
imul
add
ljmp
push
rorl
xor
push
loopne
lahf
push
aad
dec
ja
div
inc
dec
add
xor
sub
xchg
in
xor
cs
fsts
inc
addr16
jbe
mov
xchg
fs
sarl
je
pop
clc
xor
int
aad
enter
dec
inc
mov
mov
push
cmp
jae
bound
mov
fcmovnb
sub
cli
imul
jmp
add
cmp
movsl
hlt
xchg
imul
pop
mov
jno
jno
test
aad
imul
sub
add
fld
jg
pop
push
fidivs
mov
adc
movsl
fsts
test
sbbb
or
hlt
sbb
push
mov
adc
xchg
testl
push
shlb
popf
cmp
test
push
negb
fcompl
dec
mov
adc
or
add
pop
inc
push
cmp
loop
nop
pusha
xor
jmp
cld
cmpsl
sti
jecxz
js
scas
add
dec
push
pop
cmp
or
lea
pop
push
ljmp
aaa
jmp
xchg
jp
jp
test
mov
mov
pusha
lods
mov
mov
add
adc
or
sbb
push
sub
and
sub
pop
lock
sub
jecxz
xchg
out
mov
sub
shrb
insl
fnsave
lcall
mov
or
add
cmp
fnstsw
xchg
int
pop
sbbl
scas
fstpt
popa
mov
jnp
arpl
aad
and
es
sbb
or
adc
push
mov
add
pop
adc
sbb
inc
testb
dec
sbb
fsub
xor
jmp
or
scas
das
mov
cld
inc
push
stos
fistpll
pop
xchg
fdivs
pushf
sbb
fisubs
pop
les
cmp
inc
xlat
test
loop
mov
mov
lret
jo
xchg
nop
push
jno
jp
jne
enter
xchg
loopne
jecxz
test
aad
push
or
je
jle
sub
sub
lret
in
mov
call
cmpsb
sbb
dec
incl
adc
push
nopl
mov
push
ljmp
mov
int3
xchg
incb
xchg
sub
out
jl
sbb
icebp
repnz
popa
dec
rcll
scas
adc
cmpsl
cmpb
sbb
xor
sbb
dec
add
lahf
dec
and
jge
xor
inc
cs
inc
pusha
loop
mov
cmp
loop
aad
dec
ja
and
push
and
add
js
sbb
adc
imul
lret
jns
jle
rcl
loop
lds
sub
mov
lds
repz
dec
push
adc
cmp
mov
pusha
or
pop
out
rorb
xor
cmp
fsubrp
or
movsl
mov
jns
or
out
pop
push
mov
cmpsb
out
aam
sub
cwtl
and
mov
push
and
aam
stc
push
mov
sub
inc
out
or
cmp
xorl
rolb
cmp
bound
roll
notb
pop
imul
subb
push
cld
mov
mov
pushf
stos
mov
loopne
adc
cmp
xorb
ret
or
enter
in
leave
lods
push
lahf
xchg
test
or
xor
mov
mov
adc
mov
push
push
xchg
rorl
loopne
adc
mov
stos
pop
push
movsl
data16
adc
pushl
pop
inc
out
mov
dec
repz
adc
clc
pop
push
jl
hlt
jmp
data16
test
jmp
dec
in
push
outsb
xchg
sbb
mov
aad
mov
testl
xchg
jbe
imul
pop
cmp
pop
mov
into
mov
popa
cmovge
add
insb
cwtl
cs
inc
cmpsb
call
das
pop
lock
outsl
jne
mov
les
add
fsubs
or
loop
push
dec
mov
daa
or
mov
sbb
stc
xor
xor
xchg
sbb
adc
jmp
dec
sti
xor
lock
xor
pop
dec
outsl
jo
sahf
cld
and
jo
mov
xlat
inc
std
xor
xor
mov
outsl
fs
stos
mov
pop
bnd
add
dec
mov
inc
cmp
push
lret
mov
mov
sbb
repz
mov
out
imul
push
adc
int3
jmp
mov
dec
loopne
stos
outsb
xchg
add
pop
aad
cwtl
fldcw
push
xchg
push
mov
jns
icebp
out
das
imul
cli
sbb
or
xor
ret
ds
sahf
xchg
stc
sub
pusha
lcall
sbb
cmp
ret
jnp
roll
or
mov
outsb
jnp
sbb
icebp
sub
xor
arpl
cli
jmp
cmp
jo
sbb
ja
adc
sub
popf
out
adc
pop
xchg
pop
rorl
enter
mov
subb
aam
clc
test
sub
rcll
sub
sub
scas
cmpsb
adc
scas
pop
lret
pop
push
push
fxtract
dec
in
outsl
adc
outsl
pop
jae
push
pushf
mov
mov
into
call
mov
sub
inc
push
movl
setns
pop
mov
rcll
sub
xlat
push
insb
mov
xor
test
mov
sti
cmp
dec
ja
cmp
pop
out
lods
jbe
add
push
lret
mov
jno
fwait
cmp
pop
push
jl
shl
mov
pop
jg
test
outsb
arpl
ret
xchg
lods
sub
adc
popf
notl
lods
push
pop
jb
push
movsb
pop
data16
mov
movsb
les
mov
cmp
lcall
cmp
movsb
dec
fwait
xchg
push
fdivrl
enter
pop
jl
out
jge
xor
repnz
mov
mov
push
test
ss
adc
inc
push
pop
xor
cmp
or
aam
cmp
enter
pop
jle
sub
icebp
imul
and
and
out
out
push
stos
lods
dec
loopnew
dec
mov
cld
int
inc
outsb
shll
pop
es
loopne
out
mov
lods
push
xchg
inc
loopne
adc
xchg
adc
jno
cmpsl
test
jo
adc
icebp
push
dec
pop
inc
pusha
addr16
sub
fistl
sti
shl
popw
stos
sbb
outsl
adc
aas
test
jmp
out
mov
sahf
mov
jne
pop
sub
cwtl
aam
aam
xchg
or
mov
ret
andl
sub
loopne
dec
adc
inc
std
js
dec
add
adc
mov
dec
jo
insl
cmp
mov
add
fadd
mov
jge
idiv
in
popf
xor
dec
mov
ror
outsl
ret
test
jae
jno
fsub
aam
nop
mov
jns
mov
dec
int
scas
push
or
xchg
aaa
xchg
pop
pop
adc
inc
shr
mov
mov
iret
adc
sub
push
cmp
cmpl
adc
fs
call
sub
jnp
or
cmp
daa
jo
mov
and
mov
and
pop
cmp
sti
sar
das
jmp
and
movsb
pop
pop
xchg
jecxz
inc
push
icebp
cltd
enter
loop
inc
in
test
xor
daa
sub
inc
mov
xchg
mov
push
cmp
aas
dec
ja
mov
scas
jmp
out
stos
divb
push
xor
xchg
rol
cli
adc
mov
test
jae
aad
cmp
pushaw
das
mov
add
scas
inc
ror
icebp
push
push
sub
mov
gs
push
aad
lods
lret
cwtl
daa
mov
inc
loope
mov
cmp
imul
sub
mov
inc
mov
mov
divb
jne
or
fsubrs
push
cmp
xchg
shll
cmpsl
cmp
mov
out
negl
jne
hlt
gs
jno
stos
stos
movsl
ret
pop
or
push
cli
mov
lods
cmp
stos
clc
int
sub
stos
jno
add
fldenv
mov
xlat
and
and
hlt
sbb
in
imul
mov
cmpsl
mov
scas
pop
test
mov
lret
xor
stc
jp
sti
adc
addr16
inc
push
cmpsl
aam
pop
or
sub
jbe
mov
std
fstpl
loope
shlb
mov
test
stos
xchg
bound
pop
es
add
je
sub
jmp
aas
sub
ds
ret
sbb
mov
out
sbb
jns
pshufw
or
push
int3
mov
icebp
dec
cmpsl
rorl
mov
push
fwait
and
cmp
sbb
and
add
fcompl
subb
jne
jmp
xchg
xor
leave
pusha
xor
je
sar
or
into
insb
push
ss
in
pop
sub
test
or
push
xor
stc
loope
int
push
sbb
sub
pop
aaa
mov
sub
out
push
fnstcw
xor
ficoml
arpl
aam
lcall
mov
fcomp
xchg
dec
mov
push
mov
pushf
out
shl
arpl
cmp
xchg
push
dec
jg
lret
jo
mov
inc
fcomp
mov
jmp
dec
xchg
scas
pop
adcb
pusha
es
shll
pop
dec
dec
or
fwait
dec
push
fimull
lcall
mov
add
dec
lds
pop
stos
cld
mov
adc
pop
test
cltd
or
lea
and
outsb
and
lock
jmp
push
xor
sbb
adc
stc
mov
cmpsl
inc
mov
cld
insb
mov
xchg
cmpxchg
push
aaa
test
out
jne
jle
sub
adc
stos
dec
cltd
fisubrs
xchg
mov
push
xor
repz
xor
jg
mov
pop
js
mov
bound
enter
jns
sbb
pop
or
dec
pop
lock
mov
xor
mov
jg
xor
xchg
popf
mov
cmp
push
dec
mov
call
jno
ja
iret
cmp
jo
push
sarb
mov
mov
enter
push
les
gs
stc
and
sbb
adc
pop
add
enter
push
subb
clc
std
mov
cwtl
fcmovne
jne
pop
addr16
pop
pop
add
pop
mov
cmp
jo
dec
xchg
in
in
aam
in
popa
pop
imul
xchg
in
sbb
shll
loop
stc
cmp
icebp
imul
fwait
push
int3
testb
jmp
mov
push
rorb
push
sub
inc
push
push
sbb
sar
jns
jge
js
xor
out
pop
ficoml
push
ss
push
jnp
and
mov
push
mov
clc
int3
xor
and
rorb
sub
pop
test
push
lahf
repnz
adc
stos
xchg
mov
jmp
clc
xor
jae
push
jno
ret
push
rcrl
push
movsl
adc
pop
je
ds
adc
setl
fs
inc
xchg
cmp
dec
mov
inc
push
lret
pop
into
adc
sbb
or
mov
mov
jns
mov
cmp
and
mov
sub
adc
dec
pmaxub
lcall
sbb
in
or
or
aam
fisubl
stos
pusha
leave
mov
sbb
xor
jne
adc
jns
jo
jg
push
jo
mov
mov
jl
nop
push
jae
andb
push
mov
mov
in
xchg
mov
mov
out
cmp
clc
xor
push
cmp
int3
cmp
imul
in
sbb
stc
testb
loopne
inc
rorl
roll
insl
cld
cmpsb
mov
pop
inc
fxch
jp
test
mov
repnz
cmpsb
rclb
xor
xorl
stos
es
pushf
gs
cmp
mov
cmp
mov
push
test
mov
shl
dec
clc
popf
cmp
hlt
xchg
mov
jmp
stos
stos
adc
push
fnstcw
loop
jae
movsb
add
sub
pop
movsb
cli
dec
and
loope
mov
cltd
xchg
adc
cltd
xor
hlt
insl
in
add
add
mov
pop
inc
adc
loop
xorb
push
cwtl
decl
fldt
inc
or
outsl
and
sahf
leave
loopne
cltd
cmp
add
push
push
dec
sar
jge
adcl
xor
bound
jp
mov
rcrb
movsl
sbb
push
dec
lods
mov
dec
xor
xor
add
addr16
mov
notb
mov
or
or
xchg
gs
leave
xor
fcoml
inc
lds
shrl
lods
push
adc
xlat
shr
jne
adc
das
mov
subl
pop
shl
add
aam
jge
sarb
pop
test
add
cmp
adc
arpl
push
out
mov
sub
xor
lret
xchg
addr16
inc
sar
add
adc
fidivrs
mov
xor
push
adc
xor
jmp
sbb
stos
repnz
mov
lahf
xchg
mov
fistl
sub
leave
push
jne
inc
xorb
dec
push
icebp
je
leave
out
jmp
lods
dec
fsubs
subl
pop
stos
in
out
bound
cmpsb
fnsave
add
or
pop
enter
inc
aad
jmp
nop
adc
xor
push
cmp
xor
jecxz
or
bound
cmp
int3
mov
or
pop
enter
push
ja
or
popf
add
out
push
iret
jb
jb
test
fucomi
fs
cwtl
xor
xchg
ffreep
pop
adc
lea
ss
fs
stc
test
inc
in
xor
sarl
ja
shl
xor
mov
pop
cmp
pusha
out
pop
mov
adc
mov
stc
cli
imulb
push
lcall
and
lock
push
rclb
xor
rclb
je
fwait
inc
insb
popl
lahf
pop
jl
aaa
lods
dec
pop
loopne
mov
add
aam
lods
xchg
push
bts
push
mov
mov
xlat
loope
add
mov
xor
ja
das
movsb
in
xchg
stc
mov
popa
lods
in
outsl
xor
pop
invd
test
rolb
and
pushf
mov
add
sbb
sbb
int3
iret
or
mov
scas
push
stos
sub
lds
add
adc
push
sub
xchg
xor
jbe
insb
imul
test
cwtl
mov
jge
rolb
in
fadds
repnz
fdivrs
ds
jno
or
dec
and
fninit
jbe
pushf
clc
sbb
mov
idivb
out
out
cmp
mov
cmp
mov
mov
dec
loope
cmpsb
jge
out
xor
fildll
dec
mov
cmpl
scas
out
and
cmpsb
aas
mov
pop
add
divl
add
fs
inc
mov
inc
or
xchg
jge
and
xor
lahf
imul
jecxz
cltd
psllw
sbb
or
jnp
lret
push
aas
xchg
ret
popf
bound
mov
fbstp
xchg
sbb
adc
mov
sub
push
pushf
push
adc
jecxz
xor
pop
scas
popa
push
push
pop
ret
mov
mov
dec
fwait
push
das
or
pop
pop
idivl
push
sbb
mov
pop
jmp
jo
xchg
clc
iret
int3
mov
push
out
negl
aam
test
orb
cmpsl
mov
es
mov
cmp
sub
cli
and
adc
xchg
sahf
stos
sub
pop
inc
add
cmpsl
lret
push
adc
movsl
lods
or
les
mov
lds
xchg
push
nop
rorb
sub
adc
loope
aas
mov
mov
mov
arpl
int3
cs
adc
mov
ss
in
cltd
out
pop
iret
and
push
xor
jecxz
pop
xor
or
sbb
lret
mov
sub
frndint
test
outsl
xchg
in
outsl
or
sbb
add
ds
xor
mov
mov
push
push
lea
pop
mov
mov
xchg
add
test
pop
mov
mov
mov
and
fdivs
movsb
mov
sbb
xor
sbb
mov
pop
test
mov
mov
and
inc
cmove
adc
les
gs
jle
out
mov
dec
push
dec
sbb
icebp
cmc
jg
push
inc
or
fdivl
cld
lock
jg
sahf
int
fs
push
out
sbbl
lea
sti
loop
pop
push
ret
push
and
push
movsl
jle
jg
loope
and
cmc
inc
sbb
inc
push
shlb
into
lret
lahf
in
push
dec
pop
dec
cmp
ret
jno
lock
or
pop
mov
inc
insb
in
dec
rclb
mov
pusha
gs
je
fistpll
xor
outsl
or
and
adc
and
fsubrl
daa
lahf
sbb
sub
imul
jecxz
incb
xchg
mov
movhps
test
jle
mov
jne
and
pusha
arpl
xchg
fwait
and
shrl
fnstsw
aas
push
das
movsb
shll
sbb
jle
jnp
hlt
dec
or
leave
xor
data16
stc
sbb
cltd
cmp
fstl
mov
scas
repnz
push
pop
cmc
sbb
mov
dec
cmpsb
call
adc
sub
nop
data16
loopne
es
fwait
mov
repz
jp
lods
mov
sahf
jp
inc
adc
pop
add
cltd
in
in
iret
sbb
hlt
sub
jbe
in
xor
adc
inc
enter
std
adc
or
sub
pop
lcall
sub
mov
fisttpll
sbb
lcall
stc
jle
js
les
or
sbb
xor
into
loopne
mov
js
dec
sarb
bound
jp
repz
fcompl
leave
js
pushf
movsb
sub
pop
xor
pop
pusha
mov
andl
insb
mov
cltd
inc
pop
push
and
or
popa
xor
inc
adc
scas
cmp
mov
in
test
jl
addr16
cld
popa
icebp
sub
sbb
or
roll
pop
push
cmp
xor
and
sub
imull
pop
int3
iret
sbb
pusha
or
pop
inc
enter
jb
faddp
leave
add
lahf
jno
fadds
push
or
adc
xor
repnz
mov
mov
imul
in
into
sbb
in
push
ljmp
out
fisttpll
add
cltd
mov
and
es
xchg
jge
dec
aam
sub
lahf
das
cmp
xor
jp
adc
ficomps
push
js
jae
sub
loopne
lods
imull
pop
mov
arpl
jmp
mul
mov
movb
jbe
test
jno
jp
scas
aaa
not
mov
insl
cmp
mov
loope
mov
mov
xor
xor
in
jg
sbb
fdivrl
xchg
je
scas
xor
and
mov
xchg
outsb
jmp
pop
out
ja
imul
loope
scas
sbb
ret
lcall
repnz
mov
adc
jno
nop
push
rorl
mov
fisttpl
movsb
add
xchg
cmp
addr16
and
inc
fucomip
sub
add
roll
mov
cld
push
xchg
mov
loop
shlb
xchg
xchg
inc
in
das
enter
xchg
or
cli
aas
xor
jl
nop
lods
push
and
nop
testb
add
inc
in
adc
push
sbb
loopne
pop
jmp
lahf
sub
dec
lods
insb
adc
cmp
push
push
cmp
call
mov
test
int3
imul
fistl
mov
xor
pop
or
notl
xchg
lcall
and
and
in
mov
cmp
mov
lds
movsb
mov
push
fidivrs
pushl
mov
ljmp
cmp
test
iret
cmp
inc
sbb
add
imulb
or
dec
mov
push
xchg
out
xchg
inc
aas
outsb
in
mov
mov
or
adc
mov
addr16
loop
int
daa
jns
mov
ds
les
inc
ja
sub
adc
ss
jg
sub
rcrl
gs
roll
dec
xchg
add
ficompl
aad
pop
fsubl
mov
mov
add
dec
xor
ret
cmp
arpl
loopne
outsb
mov
testb
mov
jns
fcomi
ret
movsl
stos
push
xlat
out
mov
push
pop
rcll
adc
cli
loopne
dec
jbe
mov
nop
pop
push
repz
add
jmp
in
imul
cmp
pushf
ljmp
movsl
mov
cwtl
repnz
mov
mov
pop
and
dec
xchg
loop
fcomps
xchg
jle
rcrb
mov
cmp
std
or
cs
pop
and
jne
jo
push
test
sub
arpl
lea
or
mov
mov
or
outsb
pop
xor
mov
andl
je
sub
lds
pusha
roll
sub
push
xor
loopne
stos
insl
dec
shrl
ja
and
and
repnz
into
sbb
fisubl
test
fldenv
stc
ja
and
mov
mov
stc
shlw
mov
loopne
test
inc
aam
pop
pop
mov
insl
stos
jb
push
dec
popf
repz
ret
cmp
ljmp
inc
push
cmpsl
ror
jae
inc
fcmovu
or
push
mov
mov
jae
push
mov
cmpsl
mov
adcb
repz
xchg
mov
lret
ror
dec
test
fdivl
popf
rcr
jns
gs
push
popf
mov
mov
add
test
adc
pushf
jno
repnz
addl
push
xchg
jecxz
arpl
stos
clc
xchg
es
xchg
jne
xor
pop
fidivrl
mov
js
loop
shr
mov
js
and
sahf
inc
call
or
cmp
fbld
ja
dec
fdivrs
sbb
sbb
jno
inc
push
mov
inc
cli
add
pop
stos
dec
dec
pop
push
push
xchg
ja
nop
aam
mov
and
call
jns
inc
rcll
in
mov
jecxz
xor
xor
pop
and
shr
cmp
jmp
rcl
dec
pushf
or
lahf
jae
gs
int
mov
sub
mov
xor
inc
gs
mov
xor
loopne
leave
mov
outsb
scas
cwtl
xchg
xchg
cli
push
test
arpl
fistl
sub
shll
push
enter
scas
adc
mov
or
jecxz
ficoms
push
mov
mov
adc
lret
push
std
test
clc
sti
sub
fsub
inc
bnd
or
add
leave
lock
xorb
sbb
cmp
cmpsb
stc
mov
inc
movsl
adc
mov
mov
shlb
mov
hlt
data16
mov
int3
sbb
jmp
add
xchg
sub
add
and
es
pop
lret
sbb
and
push
adc
sarb
jmp
mov
mov
and
cmpsb
push
data16
adc
pop
mov
pop
fs
repnz
testb
mov
fwait
js
or
notb
adc
xor
cmp
add
loope
jecxz
fwait
in
inc
sub
std
sahf
gs
lret
orl
sub
cmp
jb
data16
jle
xchg
nop
data16
push
test
dec
push
in
mov
subb
mov
xor
add
adc
cmc
mov
pop
and
mov
in
mov
adc
mov
cmc
pop
inc
adc
jge
sbb
xchg
sub
out
jle
sub
xchg
mov
xchg
mov
cmpl
lret
into
mov
adc
push
inc
cmpsl
fsubl
sahf
into
faddl
cmpsb
dec
xor
addr16
in
dec
daa
arpl
rcll
jo
cs
lods
mov
xchg
mov
pop
and
test
sahf
or
int
mov
jns
aas
in
in
or
lods
lret
into
xchg
sahf
adc
stos
pop
add
push
push
pop
imul
repnz
cmp
sub
addr16
xchg
iret
push
mov
mov
icebp
mov
xor
lods
test
push
sub
jns
fisubs
dec
stc
test
subl
je
mov
lea
sti
cmpsl
mov
stos
pop
push
repz
je
pop
mov
or
movsb
dec
in
loop
dec
push
movb
jno
dec
in
sub
rcr
cmp
fdivs
inc
into
jmp
jecxz
andb
mov
fs
clc
movb
cmpsl
ret
and
mov
fucomp
mov
xor
mov
push
cwtl
inc
fs
data16
xor
test
jle
jae
dec
push
dec
ret
bound
inc
test
gs
mov
mov
cmp
lahf
push
stos
mov
lcall
out
dec
mov
cwtl
mov
push
adc
xchg
and
dec
enter
push
and
scas
jno
call
jg
das
sub
adc
jb
pop
adc
enter
setg
enter
fwait
dec
jl
mov
mov
lahf
and
aas
orb
adc
adc
cld
push
lret
mov
add
and
mov
sbb
push
fiaddl
call
rol
nop
int3
push
lds
jno
sbb
jmp
imul
int
mov
ret
lock
jo
xchg
or
mov
push
pop
les
test
popf
adc
test
adc
jmp
jno
push
imul
jno
dec
sbb
pop
dec
ret
xchg
or
adc
pop
imul
aas
sbb
push
xor
sub
pop
lea
mov
inc
leave
int
fimull
leave
fcoml
jno
test
sub
divb
mov
std
arpl
or
sbb
in
lcall
adc
ds
xchg
xor
fildl
outsb
pop
mov
mov
xchg
inc
sbb
push
xchg
pop
jne
lcall
xchg
dec
std
js
arpl
mov
xchg
lods
loopne
dec
daa
lret
push
lea
arpl
or
jmp
cli
inc
lahf
mov
bnd
movb
add
add
adc
adc
dec
mov
lods
inc
add
add
add
out
pusha
push
jge
xor
sub
rcrl
sbb
leave
mov
ret
mov
sub
mov
imul
dec
xchg
jne
std
cmp
sbb
je
push
incl
sub
mov
mov
add
sub
cmp
into
or
jmp
pop
stc
shrl
dec
or
aaa
mov
push
dec
popa
inc
into
addr16
push
adc
daa
nop
loopne
pop
xchg
cmp
insl
sarb
dec
jns
add
mov
cmp
aaa
and
insl
fsubrs
cmpps
sbbb
js
inc
jl
in
add
inc
cmpsl
lcall
jnp
pop
in
rcrb
insl
aad
mov
sbb
or
adc
sarb
imul
jne
out
jl
insl
inc
sub
sbb
mov
stos
mov
lret
cmpsb
cmpsb
mov
jbe
ret
int3
pushf
lods
stos
add
cmp
mov
jl
dec
pop
and
xor
aad
mov
push
xchg
out
xor
ja
mov
push
jnp
fwait
adc
mov
jnp
xor
sbb
das
dec
jo
icebp
mov
in
pop
sar
cmp
ja
mov
fistpll
mov
loopne
xchg
aam
mov
mov
cli
jmp
push
stc
call
cmp
outsl
xchg
add
pop
or
daa
jle
jno
mov
mov
clc
xchg
dec
scas
fstp
add
mov
xchg
push
push
jp
lahf
xor
mov
mov
call
cmp
outsb
scas
sahf
cmp
into
sbb
insl
push
bound
inc
call
inc
adc
jnp
repnz
or
sbb
mov
js
xchg
pop
push
sahf
push
mov
shl
loop
sbb
add
jg
xor
sahf
xchg
pop
sbb
push
inc
mov
arpl
popa
pop
xchg
xorb
sti
rcrb
fdivs
sarb
pop
jecxz
or
xor
dec
addr16
movsl
icebp
xor
in
loop
and
push
bound
ja
jb
movsb
xchg
jp
std
mov
jnp
pop
mov
cli
cmp
iret
arpl
push
xor
insb
add
add
sbb
ret
sub
mov
xchg
cld
jl
add
xlat
ret
mov
std
mov
xor
dec
inc
lock
into
mov
cmp
dec
push
xchg
add
lcall
pop
jge
movsl
jg
push
sub
les
push
jnp
subb
push
adc
and
dec
sub
jbe
mov
fwait
imul
std
inc
dec
repnz
enter
add
xchg
imull
dec
adc
imull
xor
in
add
sbb
and
cld
inc
mov
fdivl
cmc
xchg
rolb
push
int
outsb
out
dec
popf
fs
pop
jecxz
aas
cmp
inc
pop
mov
loopne
jae
shlb
jnp
and
out
xchg
adc
xchg
jecxz
sub
pop
fnstcw
fucomi
sbb
mov
dec
xor
aas
ret
sub
cwtl
addr16
jmp
add
cwtl
jno
mov
sbb
jecxz
cmp
mov
imul
in
lret
aaa
add
adc
testb
fldt
aaa
in
pop
xchg
sarl
and
pop
sbbb
pop
push
lret
push
orb
sub
aaa
cmp
or
sub
mov
sbb
fs
cmp
scas
ret
cmc
incb
cmp
lock
push
outsb
inc
and
in
mov
adcb
std
mov
push
sarb
call
sub
iret
js
enter
ficomps
jo
ret
loopne
ret
or
sahf
add
into
nop
out
movsl
cmpsl
fstpt
dec
inc
mov
jg
cmp
ljmp
gs
mov
cmp
jle
into
movsl
jge
jbe
mov
aaa
jl
jecxz
test
sub
adc
mov
adc
xor
insl
outsl
xorl
outsb
xorl
xchg
dec
sbb
pusha
mov
pushf
cmp
mov
sub
mov
dec
add
jbe
xor
xchg
shl
add
inc
mov
and
jmp
and
jne
mov
pop
cmpsl
pop
mov
rcr
xor
ja
or
jnp
sbb
into
xor
xorb
loop
xchg
fwait
lea
loopne
ja
pop
jg
loop
inc
pop
mov
mov
inc
pusha
iret
leave
cmc
sbb
mov
addr16
daa
iret
ljmp
sub
adc
fsubr
add
push
cmp
fcoms
leave
clc
pop
xchg
das
enter
mov
push
enter
mov
mov
mov
sahf
lea
mov
dec
out
lret
out
add
shrb
insb
ret
rol
incb
pusha
jp
mov
jp
dec
orl
jne
mov
add
jg
loope
rclb
xor
imul
push
adc
sub
subl
pop
mov
hlt
ljmp
ja
pop
inc
pop
xchg
sbbl
mov
fidivrs
cmp
int
cmpsb
mov
loope
jbe
js
pop
sahf
and
jge
mov
and
jno
mov
das
scas
in
xchg
fwait
stos
out
lods
ret
loope
sbb
cmpsl
rolb
orb
cmp
jb
movsl
add
roll
jne
rcrl
pop
clc
mov
pop
rcr
jns
adc
push
xlat
nop
inc
push
lods
xchg
push
loopne
xor
ficomps
gs
pop
add
mov
jne
sub
test
icebp
mov
scas
mul
out
mov
notl
inc
or
mov
adc
ror
hlt
and
lods
int
dec
mov
pusha
lea
xchg
lret
iret
call
dec
xor
and
outsb
push
loopne
addr16
aas
mov
cmp
data16
popa
push
dec
adc
fistl
in
movsb
sahf
stos
test
lret
aas
repz
popa
negl
mov
sbb
jl
andb
hlt
nop
lock
and
repz
or
in
sahf
and
addr16
sub
mov
sbb
int
jnp
fildl
mov
push
push
xor
mov
or
dec
add
jg
xchg
cmc
dec
popa
loope
imul
lcall
cmp
stc
inc
popa
movsl
das
rorl
xor
lds
js
pop
xchg
addr16
lret
xor
jmp
jno
lock
nop
and
and
mov
inc
fsts
movsl
dec
mov
mov
mov
shll
popf
mov
or
add
sub
cli
jo
or
and
sub
out
mov
xor
mov
and
adc
scas
popf
adc
loop
mov
imul
or
mov
cmp
and
loope
xchg
repnz
movsl
inc
test
xor
adc
decl
xchg
popf
xchg
cmc
jle
les
pop
push
mov
in
pusha
jmp
mov
dec
data16
div
xor
fmuls
push
inc
loop
mov
jecxz
push
xor
popl
and
stos
fldcw
in
sti
mov
loope
lock
push
sti
add
mov
mulb
sub
test
dec
xchg
out
xchg
push
push
outsb
sahf
mov
jno
in
lcall
insl
ret
mov
ret
enter
sub
dec
stos
cmpsl
push
mov
pop
sub
jmp
mov
leave
lcall
mov
jne
push
psrlw
push
test
shrl
jle
call
dec
daa
or
inc
jp
adc
push
outsb
test
shrl
pop
dec
jge
xchg
cmp
leave
jbe
fidivl
mov
leave
lahf
adc
mov
adc
jns
rcrl
out
pushf
pop
insl
adc
leave
das
int3
mov
int3
call
in
mov
pusha
mov
and
into
lret
addl
cwtl
clc
das
shlb
call
jge
scas
ret
fbld
cmp
push
movsl
or
std
and
pop
stc
push
int3
rolb
ret
mov
shl
pop
cwtl
ja
push
jo
data16
sarb
repnz
mov
xchg
push
pusha
movsb
cmp
jl
cltd
jg
fldt
pop
stos
mov
mov
ret
add
popa
pushf
add
jl
sbb
stos
je
xor
movsl
cs
repnz
xchg
mov
sbb
bound
push
inc
sub
fidivrl
mov
lahf
mov
pop
jecxz
xor
cmp
cmp
and
sbb
int
insb
or
out
fsubrl
xor
aam
cmpl
sarl
push
in
pop
fs
cs
mov
idivl
shlb
in
and
cmp
addb
sub
mov
stos
xor
out
sub
sbb
mov
jecxz
lock
aad
sarl
std
sti
jne
mov
sbb
outsb
movsl
push
outsl
and
mov
mov
cmp
movsl
test
dec
add
mov
push
out
xchg
rcrl
pop
sub
jg
fisubl
hlt
inc
mov
xor
add
in
sbb
mov
cmpsb
into
bound
and
add
sti
cmp
mov
push
hlt
push
fcoms
jmp
maxps
jno
push
int
subl
mov
jp
inc
push
popf
lea
mov
stc
imul
mov
repz
mov
push
dec
imul
div
xchg
mov
sub
sarl
call
sbb
out
sub
mov
into
mov
out
insl
orl
cmp
pushf
gs
fdivr
mov
test
adc
jp
loopne
sbb
leave
addr16
or
shll
lea
jecxz
repnz
xchg
fistpl
scas
int3
inc
fdivrs
mov
mov
mov
cmp
inc
adc
or
push
outsb
fiaddl
mov
add
xchg
push
jp
les
ficomps
sub
ss
enter
mov
jb
nop
addr16
jbe
mov
ja
test
xchg
sahf
inc
jno
orb
lds
push
inc
sbb
pop
xor
testl
inc
jbe
mov
lret
imul
fs
subl
xor
cmp
jae
negb
data16
push
push
adc
mov
test
dec
mov
sbb
in
flds
xchg
pop
mov
and
sub
inc
mov
inc
hlt
test
repz
test
xchg
pop
sub
stc
mov
scas
sub
aaa
xor
or
mov
pop
fwait
xchg
imul
bound
rcr
lahf
dec
sbb
mov
ficomps
jno
sbb
push
pushf
pop
hlt
sub
cmp
and
jge
jns
mov
adc
hlt
aam
shrl
xor
sbb
inc
jnp
hlt
loop
inc
lea
add
push
lds
insb
popf
cmp
rcrl
xor
repz
pushf
cmpsl
rorl
cltd
mul
cmc
xor
push
jp
in
ret
sub
pop
movsl
lods
in
in
cmpsl
fistpll
sub
call
pop
mov
and
jb
ret
clc
push
repnz
fidivl
fnstenv
enter
scas
mov
std
inc
jns
psrad
jl
movsb
xchg
daa
add
push
clc
iret
sub
mov
std
pusha
das
mov
dec
cwtl
and
inc
hlt
gs
ds
pusha
or
mov
mov
sar
inc
mov
subb
mov
mov
sub
cmpb
hlt
loop
sub
pusha
rcrb
addr16
idivl
inc
inc
mov
rorl
xor
or
pusha
stc
push
or
mov
fs
ds
add
pop
dec
push
xchg
mov
rorb
outsl
ret
out
inc
mov
iret
and
mov
xchg
shl
mov
xorb
mov
xor
pop
cmp
mov
xchg
mov
mov
xor
das
cwtl
imul
stos
cmpsb
push
cmpsl
mov
push
sbb
mov
pop
mov
inc
mov
inc
and
rcll
loope
fistpll
push
lcall
mov
mov
pop
std
cmp
jno
mov
jbe
add
std
jo
xchg
mov
sub
loopne
or
push
cmp
and
jle
enter
test
flds
or
repz
ljmp
mov
push
outsb
pop
lea
inc
loopne
sbb
push
das
daa
fbstp
xor
inc
fstpl
jo
lea
mov
imul
xchg
je
mov
imul
and
dec
xlat
inc
mov
mov
data16
jmp
push
in
add
ret
inc
dec
pop
xor
push
mov
fisubs
push
push
clc
scas
sub
xchg
lahf
mov
adc
mov
mov
xchg
dec
push
ljmp
sbb
out
lret
and
roll
in
fidivl
lahf
sbb
jge
push
shll
push
adc
or
dec
es
xor
xchg
mov
mov
xchg
jmp
mov
out
jo
shlb
sub
lock
jb
push
cmp
cmp
pop
sbbl
jnp
ds
shll
add
and
push
mov
stos
cmpsb
push
hlt
in
xchg
mov
retw
movsl
mov
jnp
rcrl
pop
mov
cmpsb
cs
mov
inc
and
fwait
cs
scas
arpl
pop
mov
inc
imull
popf
cli
or
xchg
popf
sar
cmp
imul
mov
jo
addr16
inc
loop
ret
add
mov
push
push
xchg
pop
jno
jbe
adc
mov
aam
fbld
mov
add
add
fiadds
mov
xchg
adc
lods
sbb
cmp
sahf
je
int3
jae
lret
fwait
jo
jge
jb
loope
cmp
pop
or
mov
daa
sbb
in
out
ja
push
jb
call
into
adc
xchg
and
lahf
das
in
cli
stc
leave
or
cs
cltd
add
jns
jecxz
pop
jge
lock
repz
sbb
push
dec
mov
repnz
fisubrl
mov
sub
in
cmp
insl
mov
daa
xlat
or
mov
or
stos
jmp
into
mov
inc
adc
int
data16
pop
cwtl
adc
adc
insb
sub
jmp
inc
arpl
or
pop
pushl
xchg
xchg
test
inc
add
push
nop
dec
sub
push
or
pop
ds
cmpsl
orb
xlat
dec
or
cld
sti
and
ror
movsb
ja
repz
out
imul
cmpl
inc
inc
enter
jg
enter
sub
jae
cmpsl
sub
out
mov
mov
loopne
mov
aam
dec
add
in
cmp
or
mov
xlat
or
lds
movsl
jbe
adc
roll
loop
cwtl
push
bound
mov
fwait
bound
inc
cmp
or
mov
cmp
add
nop
lods
xlat
push
pushf
loopne
xor
stos
pop
cmp
push
mov
ss
lret
sbb
testb
and
pop
das
fsubl
je
fsub
add
fidivrl
dec
fcomip
adc
clc
mov
and
xchg
xor
fwait
pop
mov
and
mov
jb
ljmp
jne,pn
xchg
repz
xchg
mov
popa
sbb
mov
inc
pop
cmpsl
pop
push
mov
or
adc
and
js
push
movb
inc
aad
xor
mov
push
and
std
and
add
cltd
jecxz
cmp
rcrl
and
pop
sbb
lret
adc
xorb
loope
dec
sarb
cmp
popf
mov
dec
cmp
int3
or
adcb
add
fiaddl
fcomip
or
out
insl
scas
inc
jmp
cltd
jae
add
fcmovb
stc
dec
lods
insb
sbb
shlb
xor
pop
cmp
push
sbb
lret
jp
jne
mov
inc
dec
inc
cld
out
arpl
stos
pop
iret
xchg
imul
adc
lods
cmc
dec
xchg
dec
adc
pop
jmp
les
cs
rcll
push
in
and
pcmpeqb
mov
arpl
jp
ss
int
xor
and
xchg
icebp
sbb
stos
dec
pop
and
pop
out
loopne
sub
and
repnz
inc
jp
das
pop
pop
mov
or
cmp
jecxz
inc
xchg
push
and
push
outsl
xorl
in
push
mov
stos
daa
scas
mov
mov
fs
jge
adc
xor
jne
mov
sbb
adc
mov
push
cmpsb
daa
arpl
iret
inc
sub
gs
or
lea
pop
mov
mov
gs
cmp
repz
es
stc
sub
outsl
mov
dec
cmp
adc
jge
mov
out
loope
jle
mov
popa
and
mov
test
or
push
mov
pushf
mov
jo
and
xchg
add
and
cmp
arpl
ret
ja
icebp
sbb
mov
and
mov
movsb
loop
adc
mov
cmc
subl
insl
ret
mov
lahf
popa
out
jbe
push
xchg
add
add
roll
pop
adc
push
jno
sub
lods
inc
data16
adc
push
xor
cmpsb
insb
hlt
ret
outsl
pop
push
and
rcr
rolb
sbb
in
dec
inc
pusha
sahf
repz
outsl
clc
xor
fucomp
jge
test
lcall
add
pop
mov
lock
sti
mov
addl
cmp
rorl
dec
push
push
jmp
xor
ret
cmp
outsl
jecxz
adc
push
in
cmc
cmp
int3
xchg
xor
inc
and
sti
and
push
cmp
outsb
pushf
dec
jl
sub
repz
cli
aaa
repz
aam
sti
xlat
and
es
xor
mov
pop
pop
lahf
nop
mov
mov
inc
loop
xor
shlb
cmpsl
add
arpl
pop
cmp
jg
adc
add
insb
mov
test
stos
ret
loopne
adc
dec
xor
pop
pop
sbb
ret
push
xchg
ljmp
mov
cmpsl
dec
dec
xorl
and
dec
pop
cmp
pop
dec
mov
outsb
cs
mov
and
test
mov
shll
fsubrs
cltd
xor
repnz
nop
push
pop
lods
mov
mov
or
and
leave
scas
ss
test
je
ja
mov
rcrb
in
sbb
push
or
dec
data16
test
shrl
aam
dec
pop
je
adc
ds
mov
test
ret
and
or
test
mov
cmpsl
sub
lret
or
adc
icebp
cld
pop
dec
mov
sahf
lea
mov
xchg
scas
fsubl
lret
insb
sbbb
mov
mov
movsl
dec
push
jecxz
cmp
add
fsub
mov
and
dec
cmp
fincstp
arpl
cmp
ret
sbb
cmp
and
fimuls
xchg
out
mov
outsl
push
cld
out
lea
and
andb
enter
icebp
fadd
ss
stos
push
mov
mov
fadd
jae
dec
ret
sahf
jl
mov
xor
out
mov
aaa
pop
pop
jmp
nop
repnz
jecxz
pop
push
test
push
push
mov
cwtl
mov
lret
and
dec
push
hlt
jb
add
push
movsb
xor
lock
pop
outsb
pop
fstpl
inc
sbb
cmp
or
in
aad
inc
mov
jae
xchg
jb
adc
cmp
rcll
pusha
and
ret
clc
add
dec
mov
pop
sti
jmp
mov
in
mov
movsl
fldln2
push
scas
pop
aas
inc
dec
jb
inc
in
xchg
lahf
push
inc
or
gs
xchg
mov
sbb
int3
call
mov
xlat
mov
cld
int
push
sbb
push
and
mov
lret
lds
dec
pop
iret
cmp
mov
lea
js
scas
enter
add
lret
dec
mov
jg
mov
and
xchg
push
xchg
ja
push
xchg
repz
std
jo
fstps
dec
adcb
popf
jbe
jne
std
in
push
movsb
test
movsb
shll
loopne
jno
xchg
dec
sbb
and
lret
insb
push
pop
scas
mov
pop
ret
iret
stos
stos
push
or
clc
mov
es
mulb
xchg
push
mov
adc
xchg
in
sahf
outsl
and
xor
stos
xchg
mov
pop
adc
out
mov
pop
sbb
std
rorl
cmc
mov
int3
adc
popf
cmp
xchg
call
sarb
in
std
xchg
ret
shlb
rcll
iret
jb
push
pusha
xchg
xchg
mov
mov
dec
cld
loope
imul
add
push
adc
lea
fadds
frstor
mov
xor
ret
push
cltd
inc
mull
icebp
mov
pusha
gs
gs
cmpsb
data16
fldcw
push
mov
xchg
xchg
leave
cwtl
cld
xchg
mov
push
aaa
in
add
sub
add
mov
stos
mov
es
lods
scas
sbb
insb
insb
dec
scas
les
mov
out
mov
mov
sub
xchg
push
sbb
rcrl
pushf
ret
leave
pushw
lds
mov
fs
lcall
insl
jge
pop
loopne
fstps
test
xor
adc
pushf
cmpb
push
ss
add
lcall
pusha
jbe
sub
sub
inc
mov
dec
shrl
ffree
aam
and
aam
push
adc
push
pop
push
and
cmp
repz
call
inc
aad
cmp
or
pushf
push
xchg
aaa
movsb
dec
fdivr
outsb
add
fbld
into
jge
lods
insb
rolb
mov
xor
xor
clc
pushf
lods
stos
mov
cld
jns
adc
dec
add
insb
sbb
pop
sahf
dec
pop
mov
mov
or
cmp
push
mov
imul
dec
movsb
sub
inc
imul
push
repz
push
ret
inc
aad
js
out
cmp
add
andb
fistpll
jno
test
popa
mov
pusha
sub
dec
in
sbb
cmpsl
mov
dec
adc
imul
fs
cwtl
push
inc
jp
mov
lea
test
cmp
aaa
jo
push
sahf
cld
lcall
fidivrs
jnp
sbb
test
inc
sub
addr16
lds
out
rorl
mov
mov
notl
mov
call
inc
ljmp
test
es
repnz
dec
test
jnp
rorb
clflush
leave
into
mov
dec
jle
aam
push
push
out
cmc
xor
lock
imul
pop
mov
sub
fdivp
arpl
mov
inc
icebp
jg
jecxz
jg
rcll
out
xor
push
aas
xor
mov
nop
nop
outsl
add
enter
arpl
stc
decb
fmul
fcoml
sub
mov
jns
mov
sbb
push
lds
adc
add
mov
push
jo
xor
push
dec
xor
pushf
lods
fucomip
sub
insb
pop
enter
stos
cmpsb
dec
repz
mov
dec
les
mov
pop
sub
insb
xchg
inc
push
sub
xor
lahf
cs
cmpsb
es
pshufw
iret
inc
sbb
lods
push
push
mov
scas
jo
leave
dec
inc
mov
test
mov
add
add
adc
lcall
mov
pop
dec
adc
add
push
mov
sbb
adc
imul
adc
mov
sbb
shl
roll
sub
out
or
pop
out
push
icebp
or
cmp
cmp
fists
adc
xor
cmpsb
lret
pusha
mov
ds
stos
pop
mov
sbb
sub
jb
mov
and
pop
xor
mov
dec
pop
xlat
jg
xchg
out
inc
jbe
incb
sbb
clc
xchg
mov
fidivrl
mov
dec
or
adc
aam
scas
inc
mov
gs
mov
mov
leave
pop
call
adc
stc
lock
loop
dec
jo
mov
imul
dec
hlt
jp
xor
inc
mov
sub
dec
lds
xchg
ficompl
mov
leave
adc
jae
js
sub
and
insl
and
out
out
pop
mov
rcrl
cmp
xor
mov
test
or
add
sbb
shll
jle
inc
pusha
add
push
push
out
call
xor
mov
test
fildl
jg
xchg
xor
fnstsw
pop
jnp
cmp
pop
xor
mov
js
inc
push
mov
mov
fs
xchg
scas
shlb
cwtl
daa
sar
xchg
sbb
ss
and
ds
jae
cmp
test
or
cltd
hlt
xor
sub
and
addr16
push
mov
push
jp
pop
add
dec
int
jmp
shl
mov
pop
pop
dec
stc
dec
out
push
xor
jmp
xchg
xor
pop
sbb
jo
pop
test
bound
jl
and
lock
adc
stc
pop
or
test
jne
test
and
xchg
inc
test
push
mov
add
testb
ja
xchg
push
pusha
sub
cmp
out
mov
cli
push
add
sub
push
push
shrb
pushf
xchg
cwtl
outsw
cld
test
stos
mov
mov
push
sbb
xchg
jp
xchg
inc
ljmp
mov
mov
fimull
lds
fcmovnb
sbb
jge
vminss
fidivs
fs
mov
shll
lahf
outsl
pop
xor
lahf
sub
cmp
dec
cs
add
in
test
jo
inc
lds
rcll
add
shll
cmpl
and
cwtl
mov
cwtl
cli
adc
push
lods
mov
push
mov
xor
out
ficoms
daa
and
cmp
add
ljmp
lcall
cli
inc
inc
jae
push
mov
popa
mov
shlb
push
add
sti
jmpw
inc
xchg
int
movsl
jle
hlt
jl
push
and
test
bound
aam
dec
fs
out
jne
push
cmp
not
stos
ret
inc
pop
push
aaa
and
pop
jne
cmpsl
inc
xchg
lcall
inc
dec
jge
out
pop
push
fstpt
sbb
mov
push
std
xchg
and
aad
mov
fwait
push
xchg
dec
roll
mov
sbb
or
mov
sub
dec
fadds
mov
movsl
add
xchg
dec
xchg
lahf
and
inc
xchg
idivb
push
std
add
mov
push
pop
xlat
mov
and
imul
mov
aad
xchg
xlat
ljmp
add
push
ljmp
incb
mov
jle
cmpsl
push
lret
mov
pop
pop
cmp
mov
fldenv
call
mov
imul
lods
mov
mov
gs
and
sbb
hlt
sub
ret
addr16
icebp
jo
xor
xchg
push
aad
push
stos
aaa
cs
jl
xor
mov
sbb
test
aad
call
mov
adc
insl
mov
outsb
cld
adc
daa
inc
movl
sahf
fwait
jns
xor
inc
push
add
mov
scas
dec
inc
sbb
pop
cmpsb
fdivl
jns
ja
adc
pop
je
and
jne
mov
adc
inc
out
sub
mov
sub
pushf
test
outsl
pop
and
inc
bound
add
sahf
dec
sub
pop
jge
inc
add
inc
sbb
sbb
pop
xor
pop
int
jg
movsb
popa
nop
sub
push
jl
and
add
mov
ja
inc
lea
xchg
mov
jae
cltd
cmp
fldl
push
pop
out
fwait
icebp
dec
ficoml
jmp
pop
js
mov
add
dec
cmpsb
js
jg
and
fchs
and
xchg
pop
dec
fadds
inc
lret
mov
pop
mov
and
test
jns
shll
push
insb
imul
dec
fisttpll
ret
test
lret
out
push
loopne
mov
fs
adc
in
push
sarl
mov
jns
dec
inc
roll
mov
jbe
xchg
and
mov
loop
jmp
fdivrs
xchg
aam
xchg
mov
sbb
pop
cs
aaa
int3
cmc
pop
jl
idivl
inc
test
pushf
cmp
sub
jp
adc
jns
repnz
lods
xor
sub
filds
cmp
jle
xor
pop
cli
dec
xor
les
cmc
insl
jmp
jecxz
pop
mov
nopl
popa
out
xor
xchg
mov
lret
mov
popa
icebp
inc
loopne
test
mov
inc
cmp
arpl
sahf
push
lea
sbb
push
stos
mov
dec
cld
pop
enter
push
cmp
stos
adc
mov
pop
push
jae
test
test
nop
cli
xchg
adc
inc
xchg
or
idivl
pop
in
dec
sub
insl
insl
in
movsb
lcall
lea
mov
sub
data16
cwtl
aam
push
xchg
xor
adc
dec
cmp
pop
shrl
inc
push
mov
js
cmp
mov
les
push
adc
out
mov
mov
lret
testb
jle
inc
xchg
sub
xchg
loop
ss
movsb
scas
data16
push
rolb
dec
pop
ja
adc
popa
adc
adc
test
les
sbb
cmpl
dec
pop
in
inc
add
or
sbb
pop
fcoms
les
push
sbb
aas
cmpb
ret
add
fsubs
or
rcl
cltd
sbb
std
and
adc
mov
mov
cmpsl
jmp
jb
adc
sub
in
xchg
cli
cmpsb
fs
insl
repz
jne
pop
sbb
lahf
inc
ds
lcall
sbb
pop
addb
fstpl
in
pop
sbb
stc
ss
add
lock
cli
mov
mov
and
xchg
outsl
xor
dec
lods
sbb
lods
cmp
sub
and
pop
int3
enter
xor
orb
movsl
jg
adc
inc
add
mov
jo
scas
pop
inc
sbb
and
mov
inc
aad
ja
sbb
es
pop
or
sbb
mov
push
leave
sub
pusha
cmp
xchg
jmp
cltd
push
ret
xchg
xchg
fimuls
ds
andl
mov
cmp
imul
jecxz
push
addr16
mov
and
mov
ss
jmp
negl
int
out
lods
into
mov
and
mov
mov
out
aad
or
xchg
sub
dec
mov
xor
sbb
outsb
nop
jno
cmp
test
dec
cld
test
outsl
jo
mov
cmp
pop
cmpsl
testl
js
sbb
add
dec
lods
and
cmpsb
loopne
add
jbe
cld
push
xor
jbe
test
cltd
xchg
ds
outsb
jae
ret
xor
push
rcl
sbb
sahf
in
shrl
fmull
push
add
dec
daa
mov
jmp
pop
xchg
dec
mov
sub
iret
mov
mov
jae
or
es
mov
jge
roll
dec
int3
mov
sub
fidivrs
push
in
movsb
xchg
adc
rclb
xor
xchg
ror
stos
std
adc
cmp
mov
adc
jecxz
rcpps
in
aaa
sub
push
jnp
popf
push
push
xchg
lods
idivb
test
lds
addr16
pop
pop
mov
clc
mov
jbe
movsl
pop
xchg
outsl
fadd
cld
jnp
shrb
test
imul
or
rorl
and
dec
mov
mov
pusha
dec
cli
dec
aam
lods
push
inc
push
dec
cwtl
ss
addl
leave
or
stos
pushf
cmp
or
repnz
enter
clc
sub
cld
cltd
loop
in
in
sbb
lods
jb
xchg
scas
sub
jo
insl
sbb
ds
roll
cmpsb
jmp
dec
cmp
inc
movsl
es
push
or
aas
lcall
pusha
sub
in
xor
and
out
jmp
fldt
add
mov
mov
or
add
dec
inc
and
pop
pop
xchg
out
pop
test
push
xor
cmpsl
stc
pop
xchg
nop
jl
pop
das
push
lods
int3
fsts
jge
lods
adc
mov
jmp
orl
das
jnp
cmpsl
out
ficoms
cmp
sub
lret
mov
push
mov
fsub
mov
pop
pop
and
out
rolb
arpl
sub
fisubrl
cmp
mov
int
je
push
loop
sahf
lret
inc
add
mov
mov
into
jp
push
and
adc
mov
jmp
mov
ljmp
push
xchg
sub
inc
and
test
push
and
xor
out
sbb
cmp
testl
icebp
lahf
pop
insl
add
cmp
push
inc
and
inc
clts
ljmp
adc
adcl
insl
cltd
sub
test
fwait
pop
mov
push
mov
and
pop
push
dec
xor
jg
xchg
lcall
mov
filds
movsl
inc
xor
and
repz
mov
mov
add
mov
or
nop
repnz
enter
push
pop
cs
lods
pop
fmull
cmpsl
enter
xor
push
jg
xchg
pop
dec
push
sub
cmp
sti
inc
div
mov
std
add
dec
jecxz
lea
inc
xchg
xchg
push
mov
cmp
sbbl
xacquire
and
dec
mov
pop
ss
adc
mov
fstpl
rcl
sbb
pmuludq
cmpsb
std
cmpsl
inc
or
and
stos
add
cmp
das
jbe
and
adc
repnz
dec
movhps
jecxz
sub
sti
jmp
addr16
into
lea
iret
jno
fsubp
mov
sbb
sti
lahf
les
aas
inc
hlt
stos
aad
pop
scas
cmp
inc
mov
lahf
mov
inc
cmp
lock
xchg
mov
inc
out
gs
test
fucomp
push
add
sbb
jb
ss
adc
mov
loop
repnz
jmp
mov
push
movb
sti
loop
xchg
or
mov
sbb
les
rcrl
sub
std
dec
cmp
jo
pop
sbb
jmp
clc
fidivl
mov
leave
cs
popf
or
pushf
dec
imul
sbb
xor
add
mov
add
mov
sub
cli
stos
dec
iret
pop
in
mov
fimuls
movsl
jae
aas
ret
movsb
and
clc
movb
std
push
pop
movsl
jns
nop
mov
enter
mov
or
testb
xchg
lds
inc
cmp
cmp
out
popa
sbb
push
cmpsl
jg
sarl
mov
into
push
or
pop
loope
mov
jbe
or
ja
or
jne
sbb
stos
data16
xchg
mov
push
aas
decb
xor
jge
inc
lea
pop
scas
ss
cmp
push
fcompl
inc
mov
sbb
jecxz
xor
inc
xchg
nop
sbb
cmp
cltd
movl
push
mov
push
test
jne
mov
jp
aad
mov
in
sub
lods
push
pop
push
cmp
out
mov
sbb
insl
push
mov
xor
sbb
stos
sbb
sbb
fs
adc
and
jne
and
ljmp
and
aaa
js
hlt
fldcw
or
cld
jp
stos
jmp
push
loope
mov
dec
stos
pop
fcmovnb
fdivrs
sbb
pop
outsb
lods
add
sbb
outsl
adc
loope
push
jb
xchg
jb
push
adcl
push
inc
fnstcw
mov
pop
or
dec
push
sub
mov
mov
rol
stos
jmp
jne
or
testl
and
test
xor
dec
stc
mov
pushf
dec
or
jg
icebp
mov
cmc
cmp
insl
inc
mov
inc
test
aaa
orb
cli
in
jmp
repnz
cmp
jle
mov
mov
mov
add
cmp
add
pop
sub
mov
mov
jne
scas
push
or
jge
mov
jle
push
jl
popa
inc
and
mov
aas
scas
sahf
shrl
les
mov
cltd
aas
cld
adc
push
xor
lods
ja
cmp
or
aad
pop
jp
mov
fstp
cwtl
xlat
ret
dec
sub
push
test
xchg
movsb
mov
divb
mov
out
movsl
mov
or
mov
lret
stos
push
xor
clc
xlat
dec
lcall
sub
mulb
movsl
pusha
jae
mov
pop
pop
imul
mov
nop
arpl
push
ja
ror
rorl
sbb
xchg
loop
imulb
mulb
mov
jge
fcoml
insb
pop
out
mov
popa
xor
cwtl
bnd
mov
sbb
mull
pushf
movsb
sarb
fidivs
dec
adc
and
call
loopne
test
jmp
inc
loopne
lahf
movsl
sahf
orb
push
inc
test
add
cmp
ja
insl
mov
cli
int3
dec
inc
sahf
or
inc
and
addr16
stos
cmp
or
fxch
add
test
cmp
jnp
cs
mov
daa
xchg
lock
jb
scas
mov
lods
movsb
lahf
xor
aas
mov
cmp
add
inc
inc
sbb
shll
add
pop
icebp
mov
mov
jmp
loopne
mov
clc
xchg
mov
or
outsl
adc
cli
nop
xor
jl
call
mov
mov
push
pop
jae
sbb
push
mov
out
or
mov
mov
adc
xchg
pushf
push
loopne
sahf
mov
xor
push
push
sub
and
or
out
mov
dec
fwait
loopne
hlt
aaa
dec
enter
sti
or
testb
ds
std
mov
negb
fs
mov
out
xchg
mov
xor
movsb
icebp
test
pop
loopew
dec
push
cmp
iret
or
inc
dec
jp
repz
enterw
pushf
in
jg
jmp
dec
or
or
loope
into
and
jl
lds
out
mov
loopne
push
orl
mov
xlat
jbe
xor
add
adc
push
loop
xor
imul
imul
mov
and
outsb
push
pop
add
add
hlt
cmpsb
out
aaa
adc
push
sub
int
jecxz
loope
ss
fadds
mov
lcall
nop
dec
lods
je
push
cmp
inc
push
imul
xchg
inc
and
mov
mov
js
sbb
sbb
mov
iret
xchg
into
cmc
adc
cmpb
inc
movsl
mov
push
test
in
or
xchg
adcb
sub
jg
pop
xor
pop
out
arpl
ja
mov
jl
in
sub
dec
xchg
mov
cs
iret
int3
inc
adc
in
sahf
cld
or
stos
xor
es
test
sub
push
rcrb
inc
rorb
dec
les
xchg
sub
jno
mov
cmpsl
aam
cmpsb
popa
xor
lcall
inc
or
jg
stos
call
push
sbb
fidivl
sub
test
mov
mov
mov
in
das
adc
add
fnstsw
aam
pop
adc
icebp
sbb
imul
xchg
out
or
xchg
jno
mov
adc
mov
dec
cli
jmp
sahf
push
call
movsl
inc
cltd
or
jnp
add
in
cmp
int3
ds
xchg
cwtl
cmp
inc
xchg
pop
or
outsl
mov
out
push
xorl
mov
mov
lds
sar
sub
cmp
cmp
arpl
popf
enter
imul
push
ja
fcompl
bound
bound
push
jl
ljmp
sbb
sbb
push
test
adc
jb
xchg
or
adcb
cli
pop
xchg
sub
loop
ds
ficomps
push
adc
add
sti
rolb
lret
push
sub
inc
jns
lea
mov
xor
cmpsl
xchg
popf
mov
inc
dec
mov
inc
mov
stc
mov
or
popl
outsl
push
and
clc
aad
jno
insb
and
es
iret
push
mov
stc
ret
lret
clc
loop
jbe
fldcw
xor
addr16
adc
dec
pop
stc
xor
pop
repz
xchg
mov
test
xlat
call
shrb
or
adc
add
xchg
outsb
jg
lods
aam
lcall
gs
ds
mov
jg
mov
sti
ret
jl
arpl
in
pop
mov
aad
int
fcmovne
ljmp
rorl
lahf
stos
or
leave
and
and
pop
adc
jno,pt
test
pop
rclb
scas
jecxz
cmp
repnz
push
adc
insl
hlt
sahf
fbstp
jb
cltd
mov
pop
xchg
mov
xchg
xorl
imul
sub
dec
ret
xchg
cmp
cmpsb
sub
xor
test
push
stos
les
jecxz
data16
or
sub
stos
pop
mov
mov
or
subb
cmp
mov
xor
add
push
push
insl
loope
push
outsb
int
stos
dec
cld
pusha
popf
pop
fwait
test
and
cmp
cwtl
and
ss
dec
xor
inc
cli
jle
mov
outsb
fwait
push
jmp
pop
addr16
loop
stos
push
mov
jmp
xchg
sub
mov
into
cs
daa
ret
sub
in
jno
mov
in
movsl
sub
roll
data16
push
jbe
inc
and
and
out
scas
xchg
out
lahf
aam
int3
push
adc
scas
stc
orl
mov
mov
mov
xlat
push
xor
xor
jae
into
and
xchg
push
cltd
mov
dec
pushf
cs
pop
shrb
lret
gs
lds
mov
imul
lahf
sbb
mov
ss
xchg
mov
enter
pusha
mov
push
mov
ror
mov
cmp
arpl
mov
cmp
in
int
jne
pop
push
ss
pop
stc
or
inc
insl
mov
jo
inc
mov
fisubs
inc
fldt
dec
fstpl
sahf
sti
outsl
fcoms
mov
sbb
adc
lock
cmpsl
js
loopne
lods
push
add
cltd
jno
push
inc
mov
and
cmp
mov
rolb
jno
pop
mov
cli
lods
adc
cld
cs
fldl
out
xchg
mov
addl
add
inc
fdivs
stos
xchg
mov
cmpsb
leave
or
pushf
mov
nop
int3
scas
push
xchg
dec
xor
adc
lret
push
mov
scas
movlps
imulb
cmpb
ror
push
sub
fyl2x
lods
push
sbb
xlat
adc
add
xor
leave
inc
xor
cmp
dec
lahf
sbb
or
lods
ljmp
mov
mov
xchg
addb
jns
sub
xchg
inc
mov
out
sbb
or
fs
xor
push
or
cmp
xor
add
sbb
call
aaa
cld
sub
adc
or
movsb
mov
sti
lods
aad
jmp
cld
repnz
mov
hlt
sti
call
shr
mov
movsl
es
and
jb
jo
out
enter
jns
lret
mov
movsb
sub
xchg
test
sbb
push
enter
out
jmp
sub
pop
in
pop
pushf
inc
cmpsb
cmp
gs
fadd
movsb
mov
iret
insl
sahf
into
test
xor
cli
jmp
add
mov
out
xor
push
and
mov
mov
gs
shl
jp
adc
out
xchg
leave
loope
movsl
xchg
popf
lahf
lock
ret
negb
mov
inc
jns
xor
inc
ds
pop
jmp
cltd
ficoml
js
popa
push
adc
jno
fdivrp
inc
arpl
cmp
nop
rclb
fsubrl
fiadds
aas
aaa
sub
push
das
decl
pushf
push
sti
mov
mov
push
and
pop
ret
enter
lds
aam
inc
out
add
xchg
inc
inc
cmc
mov
pop
push
lea
stc
lock
xor
jne
push
dec
cmpsl
fst
in
test
cmpb
icebp
xchg
xor
sbb
sbb
or
test
xor
ficompl
repz
sub
js
mov
mov
jle
and
pop
xlat
jmp
dec
xor
push
or
pop
pop
loop
fstps
cli
inc
clc
mov
dec
mov
add
pop
aas
sbb
mov
cmp
and
mov
and
mov
fsubl
ror
inc
or
sub
xchg
js
pop
cli
mov
xor
push
mov
aam
jno
fdivrs
jae
cld
lock
xchg
dec
test
mov
pop
and
jbe
mov
inc
ficoms
or
cltd
jae
fadd
ljmp
adc
mov
js
ficoms
test
mov
es
push
je
or
dec
push
and
outsb
loop
clc
xchg
jae
and
mov
sbbb
xor
xchg
mov
fwait
pop
fcompl
test
push
jg
nop
sbb
test
pop
adc
mov
fldenv
push
dec
and
mov
xchg
pop
mov
std
cmc
in
cmp
adc
sahf
mov
sub
or
rorb
add
outsb
dec
push
iret
sbb
movb
and
test
push
jnp
push
fst
das
into
jbe
lcall
dec
arpl
xlat
outsl
insl
and
inc
lcall
or
push
sub
clc
inc
lds
mov
mov
cmp
subl
jmp
mov
test
xlat
push
in
fdivl
imul
push
gs
dec
or
imul
pop
xor
in
jp
xlat
adc
add
jbe
nop
xchg
xlat
jl
mov
or
cmp
outsb
cs
push
pop
gs
nop
add
mov
and
jl
cmp
in
inc
push
nop
out
arpl
sbb
sub
push
mov
cmp
in
push
daa
xchg
adc
out
stc
je
lock
xor
xchg
mov
jno
dec
leave
xor
imul
mov
cmpb
adc
inc
ret
cwtl
mov
xor
std
and
push
push
mov
xchg
bound
inc
les
adc
xor
add
movsb
push
push
jae
aas
jp
add
cli
icebp
outsb
iret
inc
mov
sub
lods
movsb
or
arpl
cs
out
lret
push
lret
cltd
xlat
xor
fisubl
mov
lods
jbe
nop
rcrl
or
mov
or
xor
leave
sbb
cmpsb
scas
js
fwait
call
cmp
xor
fcompl
mov
mov
adc
jo
outsb
mov
xor
data16
stc
stc
push
jno
sbb
xchg
push
les
jne
add
outsl
cld
push
push
xchg
or
inc
xchg
xchg
lret
mov
pop
pop
fcoml
cmp
out
or
xchg
xchg
sbb
adc
push
sti
inc
jl
cld
add
in
jae
or
jb
inc
shrb
rorl
daa
loope
pop
pop
lea
ret
shll
xor
stos
out
push
mov
dec
dec
out
jmp
and
hlt
insb
arpl
xor
ret
jge
mov
xchg
pop
pusha
jns
mov
out
sub
jb
sar
xchg
add
icebp
xor
cli
mov
fdivr
cltd
xor
pop
sbb
or
shlb
dec
sub
dec
xor
arpl
imul
and
fiaddl
mov
daa
test
cli
or
push
lods
ljmp
aam
pusha
pop
in
xor
adc
jae
lea
jmp
xchg
out
sub
cmpl
not
dec
in
int
cmp
xchg
outsl
push
imul
jmp
ljmp
aam
lods
stos
xor
xchg
add
xor
or
das
scas
jbe
icebp
inc
mov
pop
sub
mov
enter
push
inc
imul
or
jno
clc
data16
adc
scas
fdivr
add
pop
sub
xchg
lds
jecxz
in
mov
push
xor
test
jae
mov
cmc
ss
ret
imul
or
push
or
mov
gs
sbb
sbb
call
sub
mov
xchg
mov
push
call
in
cmp
lret
pop
sbbb
xchg
ret
push
sbb
call
adc
xlat
subb
js
cmp
lods
test
lock
jb
mov
test
fidivs
mov
mov
imul
mov
cmpl
int3
mov
adc
add
pop
cmc
in
loopne
hlt
xorl
je
cmpsb
cmp
aaa
or
sbb
out
pop
mov
sbb
mov
das
scas
aam
jbe
or
ficoml
mov
adc
imul
fwait
inc
inc
pop
pushf
sub
mov
pop
mov
std
cwtl
mov
aas
inc
rclb
jle
push
jae
mov
add
sbb
int
sub
addr16
rol
jne
aam
xchg
test
cmp
cli
jbe
cltd
xchg
xchg
push
adc
jmp
imul
nop
sub
or
andb
inc
inc
out
fisttpll
jno
cmp
fistps
aas
js
dec
ja
add
dec
repz
fstl
mov
mov
enter
jb
rcr
jl
cli
mov
mov
stos
dec
push
add
aaa
lods
into
push
inc
mov
push
adc
cwtl
stos
mov
dec
js
lods
cmp
xchg
shr
xchg
out
lds
xchg
shrb
loop
jo
cmp
xor
sub
dec
cltd
xor
bnd
push
sub
out
xchg
aas
leave
or
cltd
cmc
fwait
in
pop
sub
and
enter
push
outsl
push
dec
cmp
and
jmp
xchg
pop
ljmp
stos
jbe
xor
cld
push
cmc
adc
add
inc
and
scas
sbb
je
mov
scas
cmp
sbb
icebp
ds
mov
data16
push
push
push
and
lret
cmp
insl
dec
es
hlt
les
cli
adc
jle
cmpsl
enter
mov
cmp
cs
xchg
adc
test
jmp
mov
test
adc
add
nop
std
xor
ss
pop
xchg
loopne
push
popf
pusha
jmp
push
ss
dec
shll
xchg
aaa
scas
adc
in
out
adc
pop
inc
mov
and
lret
gs
jg
add
adc
add
icebp
mov
xchg
jl
adcl
mov
lret
sub
movsb
jae
jecxz
push
clc
mov
in
pop
lret
roll
sub
fwait
call
pop
jl
mov
arpl
gs
lods
mov
inc
jp
pop
sahf
xor
inc
test
testl
inc
xchg
filds
dec
imul
push
or
sbb
jb
scas
mov
push
jne
and
mov
outsb
xor
inc
ss
loope
outsb
test
ret
aas
pop
rorl
scas
inc
lock
adc
imul
mov
inc
or
cwtl
inc
loope
jl
rcrl
push
into
cmc
mov
repnz
mov
sarb
jns
sbb
sbb
mov
sub
lea
cmp
rcrl
std
test
inc
neg
jg
add
bnd
test
inc
aam
loop
loope
ja
push
sub
sbb
hlt
mov
and
lahf
lahf
test
mov
aad
pusha
insl
pop
decb
popa
jmp
xchg
inc
pop
mov
inc
sbb
call
test
and
cs
lret
cmpsb
ja
mov
mov
insb
sub
das
ss
sbb
and
lret
mov
add
lock
stos
in
jne
cmc
cmp
testl
jne
and
inc
fisubrs
push
fidivrl
adc
rol
xchg
js
and
adc
or
fistpll
push
xor
add
out
push
cltd
dec
flds
loop
inc
and
sti
repz
or
iret
push
mov
test
xchg
xor
cltd
out
cs
push
cmp
mov
mov
mov
prefetch
add
push
into
aas
xorb
stos
inc
cmp
ret
pop
push
inc
sub
popa
mov
xchg
lock
mov
lahf
movsb
fsubs
leave
sub
les
mov
test
xchg
jge
mov
jmp
fwait
int3
data16
repz
adc
shlb
popa
shl
jmp
and
cmp
cmpl
mov
fwait
push
push
mov
les
xor
push
xchg
movsl
jle
in
push
shl
push
jle
adc
ljmp
or
out
dec
mov
fisttps
imul
cs
lock
fmull
ss
out
pop
jno
fsubl
pushf
sbb
push
dec
scas
call
imul
and
or
dec
pop
leave
and
add
add
jae
pop
sub
jns
roll
jg
cmpl
mov
sub
dec
inc
mov
jnp
fwait
dec
mov
bound
mov
std
dec
jl
sbb
fsts
mov
and
dec
push
sub
sub
add
mov
lcall
cmovle
repnz
jmp
notl
mov
jae
jo
int
mov
cmp
arpl
jp
inc
push
jbe
out
mov
ss
rclb
fcoms
fdiv
inc
or
in
dec
ljmp
bound
rcl
jg
movsb
cmc
mov
andl
xchg
pop
push
push
pop
pop
xchg
mov
adc
daa
xor
add
pop
mov
xchg
adc
dec
and
pop
insl
mov
mov
pushf
push
into
lret
jne
iret
hlt
jno
pop
add
xor
mov
sbb
push
cmp
negb
cmc
cmpsl
sti
xor
test
inc
dec
xchg
sbb
xlat
lret
fcom
stc
and
sbb
push
and
cmp
lret
clc
sub
loop
and
inc
cld
mov
lret
mov
cli
sbb
jl
xchg
adc
push
lods
and
call
jge
addr16
push
jge
imul
cmc
or
pop
or
lock
in
cmc
pushf
insb
or
fsts
jo
mov
pop
pop
jp
pop
xchg
dec
por
push
out
inc
push
in
xchg
cmp
popl
mov
dec
cmp
rcrb
jmp
fidivrl
push
mov
js
out
jo
pop
jmp
sahf
out
cmp
xlat
bound
outsb
jp
dec
xor
xchg
mov
daa
das
mov
push
addl
xchg
stos
dec
sbb
enter
mov
jl
fsts
cmp
movsl
loop
insb
push
sbb
sbb
pushf
sub
mov
mov
std
ret
arpl
aas
stc
inc
loopne
clc
xchg
imul
fisttps
scas
out
mov
in
in
and
test
mov
imul
fcoms
lret
in
push
aam
pop
inc
xor
test
inc
imul
hlt
adc
adc
lcall
insb
test
fsubs
sub
jo
adc
jb
rol
push
or
stos
movsl
repnz
inc
add
pop
push
or
std
pusha
jecxz
rorl
sub
imul
lea
dec
xor
add
mov
dec
mov
push
sub
scas
shrl
xchg
dec
data16
add
adc
dec
sbb
scas
sbb
push
cmpl
mov
loope
inc
mov
mov
push
test
dec
xor
movsb
shll
repnz
hlt
or
ficomps
xchg
or
jp
pop
out
sub
rclb
sbb
int3
add
xchg
fstpl
insl
xchg
mov
cmp
repnz
js
or
jae
nop
pop
dec
xchg
mov
scas
mov
cmpsl
cmp
aaa
cmpsb
sub
xor
lret
or
mov
adc
mov
push
sub
add
pusha
js
scas
loopne
push
iret
push
mov
jno
outsb
xor
nop
xor
mov
insl
insl
add
mov
out
nop
lret
test
cmp
sbb
xor
and
xor
push
push
in
leave
lahf
mov
or
cmp
cli
mov
mov
inc
je
mov
imul
jo
sti
push
test
xor
push
sub
fisttpl
out
cmpsl
adc
mov
aas
sti
jle
jecxz
adc
adc
push
popa
out
and
repz
add
fsts
cmp
pop
cwtl
jo
mov
xchg
add
push
and
push
inc
sbb
xchg
int3
mov
dec
nop
mov
add
inc
sbbb
cli
aad
shll
jl,pn
shr
xorb
adcl
mov
loop
push
xor
int3
cmpsb
cmp
mov
ja
imul
and
fcmovu
negl
xor
mov
out
nop
stc
add
xor
sbb
das
out
fsincos
mov
sbb
repnz
out
adc
js
push
push
push
xchg
push
and
mov
aam
call
sbb
lcall
addr16
jl
fnstsw
in
cld
add
inc
clc
rorb
out
xor
xor
sbb
push
dec
cmpb
mov
pop
sti
icebp
xor
dec
movsl
adc
repz
loope
push
xchg
mov
and
js
jno
ljmp
mov
bound
push
das
out
xchg
or
cmp
or
xchg
cmp
fistpl
sbb
xchg
sub
das
pop
rcl
push
test
popf
jle
jg
mov
in
lret
sub
cmp
xor
cmpsb
addr16
test
mov
lret
shll
mov
push
and
ja
jno
or
xlat
andl
add
fbstp
xchg
fidivrl
pop
or
movsb
add
push
jg
sub
test
cmp
adc
scas
mov
or
arpl
pop
mov
and
mov
add
enter
js
test
jbe
or
test
lahf
ret
stc
xor
cmp
pop
int3
fisubrl
mov
cmp
dec
sub
lods
jp
dec
test
ret
add
orb
jg
mov
xchg
les
push
sti
mov
icebp
loope
orb
in
andb
popa
leave
idivl
cmc
mov
mov
out
xchg
jg
dec
daa
testl
test
dec
arpl
and
leave
popf
sahf
jno
outsb
cltd
shlb
sbb
lcall
and
pushf
sar
out
cmp
cmc
inc
mov
hlt
test
or
push
sub
xor
mov
repz
adcl
mov
or
shrl
jnp
cmpsl
or
adc
jmp
in
inc
mov
mov
pop
push
bound
insb
pusha
push
ret
popf
add
mov
pop
dec
xlat
outsl
push
lods
mov
add
dec
add
push
data16
cmp
push
fstpt
add
jbe
and
and
add
ja
in
cmp
dec
jle
int3
std
stc
daa
fcomi
push
push
addps
mov
fucomip
sub
inc
mov
negl
scas
inc
lods
mov
mov
mov
in
stc
xchg
cmc
cmpsl
xchg
sahf
pushf
ja
shrb
add
or
pop
arpl
pop
pop
imul
test
sbb
xchg
test
push
outsl
arpl
leave
adc
cltd
enter
xor
jge
mov
xor
call
dec
xchg
sbb
mov
in
dec
cmpsl
jnp
std
cmp
in
js
xor
mov
fstpt
xchg
cwtl
xchg
insl
sbb
out
in
icebp
mov
cmpsb
fstps
pop
push
and
int3
dec
cmp
jne
pop
xor
or
xchg
cmp
sub
cmp
lret
hlt
sub
outsb
rorl
ss
popf
dec
mull
pop
jp
pop
into
mov
sub
cmpsb
insb
dec
mov
jae
addr16
int
pushf
jge
jge
repnz
das
sbb
sub
insb
xorb
shrb
sub
outsb
jb
repnz
mov
shll
cmp
cmpsb
shrl
xor
sbb
movsl
shlb
subl
dec
aaa
pop
mov
push
cmp
mov
out
in
not
sub
cmp
jne
xchg
mov
xchg
flds
jp
dec
xchg
scas
stos
lea
ja
test
sub
in
sub
mov
xlat
test
inc
cmp
xor
or
addr16
cld
add
push
pop
jae
cltd
dec
ss
out
jo
xchg
mov
sub
mov
pop
add
jbe
cmp
call
rorl
nop
fildl
xor
loopne
lea
and
add
cmp
and
aaa
jne
xor
mov
inc
test
inc
ret
les
test
xor
or
cmp
outsb
adc
repz
lret
in
push
mov
mov
in
fisubs
mov
fsubl
mov
jmp
cs
in
cmp
mov
popa
adc
cs
sbb
cwtl
int
cmp
fwait
aad
add
push
in
es
rcrb
adc
sub
in
dec
leave
mov
popa
ds
dec
pop
add
psubusw
test
add
add
lds
push
data16
mov
out
cmp
sub
mov
imull
idiv
cmp
dec
and
pusha
shrl
cmpsb
add
hlt
pop
fiadds
test
clc
adc
repz
popf
stc
in
bswap
rorl
scas
fbstp
imul
jo
mov
fdivp
cwtl
dec
aaa
jp
imul
xchg
pop
test
mov
adc
aad
lds
jo
lods
mul
add
xor
push
sbb
sbb
andb
shll
inc
ret
je
mov
dec
clc
in
add
stc
fwait
mov
push
pop
imul
mov
movsl
mov
repz
xchg
sbb
aaa
aam
hlt
stos
faddl
ja
icebp
xor
jnp
add
jns
in
lcall
push
fldenv
sarl
mov
mov
cwtl
cld
mov
fisubrs
xor
or
pop
adc
cltd
sub
lock
iret
rolb
pop
xchg
cmc
bnd
es
mov
mov
addr16
es
lods
aaa
push
popf
jae
sti
addr16
or
push
std
xor
cmp
inc
subl
icebp
fistpl
fdivs
sub
shlb
lds
fimull
pushf
cmpsl
xchg
push
cld
aam
push
fbstp
mov
xor
xchg
xchg
mov
mov
xchg
pop
cmp
mov
add
jp
clc
xchg
in
lods
dec
push
pop
in
insl
rcr
lret
push
push
sti
pop
sub
scas
cmpsb
sub
mov
sub
fdivrl
cmc
daa
mov
addr16
fwait
lock
cmpsb
call
add
into
aas
pop
mov
jmp
hlt
dec
xor
xchg
cmp
dec
dec
out
pusha
adc
ret
fsub
jne
jmp
negl
fisubl
jp
mov
addl
std
lods
mov
pop
int
dec
shl
jg
xchg
and
aas
inc
mov
pop
mov
inc
std
mov
mov
aaa
nop
cltd
fnsave
push
jno
lods
mov
mov
jo
xlat
mov
lret
pushf
push
cmpl
fcmovnbe
shlb
and
cvtps2pd
adc
mov
in
enter
movsb
lods
cmp
cmp
add
cmp
jge
xchg
and
pop
pop
hlt
out
in
xor
adc
out
sub
mov
xchg
xlat
mov
sbb
sbb
xchg
ja
loope
xor
sbb
mov
dec
jo
xor
pop
in
in
push
out
into
xchg
lock
xchg
pop
movsl
fstpl
jo
es
pop
mov
mov
jbe
leave
adc
or
loop
or
xchg
cmpl
mov
mov
xor
test
push
ds
outsb
lea
in
cmp
ds
negb
in
and
testb
mov
jmp
xchg
sub
cmp
dec
lahf
aam
out
mov
sbb
jp
lods
pop
cmp
cmpsb
stos
mov
push
loope
fwait
and
inc
xchg
inc
mov
sahf
shrb
pop
shlb
scas
lahf
js
inc
ja
add
movsb
dec
movsl
jge
jle
jnp
jne
adc
outsl
xchg
daa
add
and
push
mov
jl
push
hlt
fcomps
fcompl
inc
jne
push
push
das
test
mov
fs
cwtl
rcll
xchg
lock
aas
and
pop
loop
sbb
js
sbb
loopne
adc
sbb
pop
std
orl
cmp
and
dec
daa
sub
adc
jmp
ret
push
out
fld1
lcall
out
mov
fwait
pop
pop
xchg
addr16
ret
testl
arpl
ret
push
mov
cltd
mov
push
loope
or
cmp
pop
das
sbb
sbb
sub
les
loop
rol
retw
push
popf
ss
cmp
ss
stc
adcb
aad
jns
push
dec
ret
mov
jp
xchg
lcall
push
inc
cmp
lahf
push
dec
fiaddl
mov
jmp
push
adcb
popf
cwtl
ret
or
cmp
sub
push
cmpsl
es
jno
movntq
repnz
and
push
mov
add
icebp
aam
inc
mov
push
xchg
pop
lds
sahf
daa
jp
mov
call
out
sarb
clc
xadd
popa
cmp
ljmp
in
mov
add
and
xchg
sbb
ja
ja
inc
sahf
loop
fsubrl
mov
lods
lods
dec
sub
stos
mov
imulb
or
push
repnz
mov
cmova
inc
shrl
xor
push
sub
std
fnstcw
aaa
nop
lods
test
aad
shl
frstor
xor
gs
cmp
gs
ret
mov
and
jg
int
leave
pop
loop
hlt
ja
das
fnsave
dec
cmp
mov
push
sub
les
mov
sbb
jmp
repz
dec
mov
mov
in
addr16
cmp
test
xor
jae
xlat
gs
push
popf
jecxz
or
lds
cmpsb
out
icebp
push
fnstenv
scas
mov
mov
fsubrs
lret
dec
adcb
orb
mov
and
insb
pop
pop
sbb
stc
ret
inc
les
mov
imul
rolb
xchg
inc
aam
mov
mov
pop
jae
push
lock
scas
je
int
je
sahf
fcmovnu
daa
ret
jmp
pop
xchg
adc
insb
xor
mov
mov
rclb
adc
xchg
out
movsb
jl
mov
pop
cwtl
dec
adc
outsl
xchg
fcmovb
shr
movsb
mov
xchg
adcb
test
subl
icebp
cmp
call
lret
cmp
cs
lret
push
mov
cmp
int3
shl
jne
es
xor
mov
jne
lock
repnz
push
cmp
rolb
push
stos
es
int3
incb
and
fstps
in
enter
pop
mov
pop
lret
sbb
push
pop
gs
push
in
jle
imul
pop
mov
or
je
mov
imul
cltd
inc
popf
adc
int
hlt
sbb
and
aam
and
mov
or
mov
in
inc
imul
mov
or
ret
hlt
mov
rcll
pop
or
imul
mov
mov
mov
push
imul
loop
cmp
add
lret
inc
add
jbe
adc
add
popf
sbb
rolb
fcoms
add
cmp
cmp
clc
subl
scas
inc
or
cli
and
inc
divb
pop
movsb
in
cmp
stc
jae
cli
inc
inc
inc
push
xchg
adc
pop
sub
insb
ret
jo
das
adc
imul
in
insl
clc
sti
pop
test
lds
out
andb
mov
loop
dec
addr16
repnz
lods
xchg
add
mov
mov
std
xor
je
fistl
arpl
pop
aas
outsb
rclb
sub
insl
pusha
imul
cli
in
xchg
push
repnz
xchg
popa
xchg
jmp
jo
cmp
mov
cmp
jmp
sbb
addr16
add
jns
xor
push
dec
ret
and
xlat
popa
inc
pop
sbb
in
addr16
mov
mov
jmp
out
fists
aas
adc
sub
scas
and
dec
dec
xchg
or
icebp
lret
pop
fimull
test
filds
and
mov
cs
mov
push
les
xchg
or
add
popa
sbb
loopne
xor
xor
lahf
int3
mov
jbe
push
fmuls
jo
repz
xchg
xchg
jbe
mov
mov
cmp
ret
es
ja
arpl
dec
lret
sub
dec
mov
jle
push
and
adc
repnz
nop
repnz
cmc
test
ds
and
std
cmp
icebp
cmp
lods
mov
or
daa
push
enter
scas
out
aaa
pop
cmc
stos
inc
adc
dec
cmc
xchg
xchg
js
xorl
cs
test
adc
cmpsl
xchg
xchg
aaa
aam
adc
enter
stos
fnsave
pop
sbb
xor
jp
in
xor
xchg
push
jno
jmp
shll
ret
pop
xchg
montmul
cmpsb
push
mov
ds
cs
sbb
loope
out
push
pop
bound
jo
fwait
jecxz
loopne
loope
fistpll
push
sub
mov
orl
imul
pop
dec
inc
xlat
push
push
jl
mov
sbb
fsub
mov
push
inc
fbld
push
repnz
inc
sbb
add
xchg
cmpsb
jbe
lcall
push
mov
scas
aas
iret
sbb
pop
jp
std
dec
jle
push
loop
imul
jbe
push
clc
push
orl
cmpsb
pop
sub
mov
js
mov
out
pop
shlb
out
jb
mov
mov
push
arpl
mov
jle
mov
jns
adc
push
shll
jg
or
fcomps
les
negl
push
aad
aad
fcoms
sahf
or
in
rcr
nop
sbb
inc
negb
fidivl
sbb
in
jmp
rclb
fwait
pop
rclb
or
mov
jle
mov
cmc
cmp
xchg
xchg
fisttps
cmpl
xor
inc
mov
mov
adc
out
insl
das
mov
mov
loopne
mov
push
cmp
xchg
sti
jp
mov
sbb
mov
adc
rclb
fs
jl
and
cmp
loope
cs
push
arpl
lods
ja
inc
mov
shlb
xchg
pop
jne
and
into
xor
popf
repnz
pop
cmp
lret
xor
xlat
push
sub
adc
add
dec
inc
inc
sbb
out
mov
jo
aaa
mov
jl
lds
rcl
scas
push
xor
into
xor
push
cmc
cs
and
scas
fsts
pop
insl
inc
and
sbb
xchg
and
jp
add
xor
cmp
dec
push
push
popf
repnz
in
lea
mov
in
xchg
sub
daa
mov
in
xchg
inc
out
jge
mov
jns
jecxz
es
call
enter
int3
sbb
xchg
fcomps
or
enter
or
imul
mov
cmp
inc
orl
sbb
into
pop
das
das
lds
imul
aas
test
scas
dec
mov
cmp
gs
hlt
xchg
adc
push
rclb
sbb
lcall
jp
loope
lds
mov
push
lahf
rcrb
and
mov
inc
jg
xor
les
outsb
sarl
push
dec
mov
in
xchg
inc
sub
push
cmp
jmp
int3
mov
push
mov
ja
add
xchg
jne,pt
mov
and
xor
fldcw
pushf
je
aad
sub
dec
pop
dec
leave
movsl
add
mov
je
leave
sti
lods
cld
fbstp
int
popa
out
int
aam
mov
mull
nop
adc
push
fldt
and
mov
mov
and
loop
int3
enter
mov
ja
decl
jno
or
mov
jno
fadd
dec
ss
push
test
out
mov
hlt
pop
das
das
ljmp
sbb
mov
aam
ret
inc
jp
mov
jno
aam
popf
imul
movb
mov
fwait
jp
push
nop
jl
icebp
outsl
repz
test
call
mov
mov
xor
sbb
jl
call
push
xlat
ds
push
cltd
mov
xchg
testl
sahf
push
xchg
scas
xchg
jnp
icebp
cs
jge
imul
int3
xlat
iret
cs
dec
cltd
mov
push
jg
dec
push
mov
daa
gs
push
dec
les
cli
lret
jecxz
xchg
jmp
test
jo
push
sti
xor
repz
cmpsl
jmp
jmp
das
and
nop
or
mov
fisttpl
rclb
dec
mov
js
dec
jg
or
adc
mov
test
dec
xor
lea
xchg
out
jno
xor
subb
add
dec
rcrb
cmc
dec
fldcw
jecxz
dec
push
or
jbe
jp
jbe
mov
popf
pop
fists
sbb
leave
dec
mov
and
add
sub
or
pop
cmpsb
push
pop
sbb
mov
pop
std
or
pop
cmp
lock
je
add
mov
push
out
xchg
add
add
sahf
mov
addr16
not
cmp
cwtl
push
or
movsb
mov
jbe
pop
xchg
lds
lods
lock
movsl
push
loope
xchg
and
lds
mov
mov
pop
mul
loopne
scas
shll
shlb
fdivs
loop
jnp
adc
dec
mov
mov
xchg
dec
pop
mov
and
ja
and
jg
mov
push
push
fadd
inc
sahf
sub
inc
xchg
push
jl
out
pop
and
cs
sti
sahf
mov
jo
sbb
ror
and
mulb
pushf
ret
int
push
out
fsubl
es
fwait
pop
sbb
xchg
aaa
jns
in
cmp
int
cmpsb
cli
arpl
js
mov
or
xchg
nop
jmp
int3
and
iret
jbe
xor
int3
add
test
pop
ret
mov
mov
push
imul
lret
data16
test
inc
sub
shrb
pop
lret
adcb
sub
cmp
subl
sbb
mov
or
sub
dec
subl
std
xlat
inc
leave
movsl
mov
movsl
adc
cmp
jne
mov
fistps
hlt
pop
push
mov
outsb
scas
fsts
xchg
mov
stos
xor
test
inc
inc
inc
cmpsb
out
or
lea
mov
dec
rcll
lret
push
push
mov
cld
shll
jmp
aad
dec
sbb
xor
mov
js
enter
les
and
jae
lret
cmp
mov
xchg
negl
popf
adc
bound
mov
mov
xchg
xlat
out
jp
stos
fcoml
mov
add
sti
mov
adc
xchg
test
mov
inc
and
adc
or
sub
push
push
add
dec
mov
or
mov
push
movsb
xor
pushf
mov
cwtl
adc
and
mov
out
test
ficoms
or
outsl
xchg
jbe
mov
les
into
lahf
push
cmp
scas
adc
xor
mov
pop
pop
adc
mov
dec
cld
enter
clc
mov
sbbl
out
cwtl
push
jl
pop
sbb
cmp
or
mov
mov
fmuls
mov
mov
data16
dec
mov
mov
mov
push
mov
adc
add
test
pop
and
test
add
nop
pushf
pop
mov
call
fisttpl
or
in
jg
test
sbb
jecxz
mov
mov
jmp
jp
lcall
cltd
jp
aad
loopne
lock
stos
dec
xor
out
xor
xchg
xchg
xchg
nop
jge
int3
push
lret
cmp
push
dec
cmp
dec
jae
dec
pop
sbb
jge
inc
les
in
test
outsb
mov
int
push
mov
fwait
pusha
stc
cmp
xchg
js
repnz
pusha
data16
mov
shlb
jg
rorl
pushf
mov
mov
aam
dec
scas
sub
mov
mov
jmp
imul
dec
cmpsb
insb
inc
cmpsl
jno
dec
ret
in
adcl
mov
or
cmp
jb
jmp
lahf
outsb
das
mov
cltd
fbstp
lods
xchg
push
aas
subb
dec
in
int
dec
and
inc
sub
stos
out
or
xor
je
push
or
mov
out
xchg
or
jmp
xor
iret
cmp
jnp
cmp
out
pop
jne
jno
adc
loop
add
pushf
or
es
dec
pop
inc
adc
jecxz
insl
or
xchg
mov
jge
adc
inc
imul
or
push
aaa
fs
jb
aam
jg
and
or
into
mov
aaa
cmpsl
lods
jg
mov
inc
xchg
imul
rcrb
sbb
stos
sbb
mov
cwtl
adc
std
xor
mov
fldt
popa
sbb
xorl
es
pop
mov
add
mov
shlb
inc
popf
nop
mov
mov
push
dec
and
or
sbb
movsl
insb
xlat
or
movsb
sbb
jp
fsub
mov
rcrl
bound
fdivrl
hlt
pmulhw
adc
and
add
jecxz
data16
xorb
jmp
clc
inc
aad
mov
xchg
into
test
fs
and
arpl
in
jno
mov
hlt
mov
bound
sbb
mov
addr16
test
in
jae
shll
shlb
cltd
movsb
leave
cmp
lret
aaa
test
sub
lcall
andl
jns
jg
repz
pop
inc
std
xchg
and
icebp
stos
inc
int
add
push
dec
test
out
sub
xchg
rol
leave
movsl
repnz
lods
add
loop
decb
and
fnstsw
mov
and
insb
stos
pop
js
cmp
clc
inc
iret
mov
sbb
outsb
or
mov
mov
orl
sbb
loopne
mov
cltd
dec
imul
add
sti
fsub
jne
imul
loope
ret
loopne
dec
mov
cmc
in
test
dec
outsb
pop
testb
sub
xor
mov
rcrl
arpl
js
fisubs
mov
push
inc
inc
cmc
lock
push
xor
aad
sbb
xor
xchg
pop
insb
mov
cmp
or
ud0
or
pop
lock
add
jno
lea
inc
push
xor
dec
sbb
add
aas
or
fbstp
xor
ret
mov
addr16
lock
jno
sub
adc
ficoms
pop
add
cs
sbb
lret
dec
sarl
divl
inc
jmpw
and
sahf
push
cmc
sti
jg
or
mov
inc
sbb
sti
lcall
cmc
es
adc
jne
mov
pushf
outsb
push
insl
out
dec
cwtl
sub
adc
out
inc
cmc
add
loopne
dec
out
push
mov
ret
insb
pop
push
jge
xchg
dec
pop
xlat
scas
clc
xchg
fsubs
mov
pop
fsub
sbb
dec
lcall
fldl
imul
mov
and
lret
ret
divl
mov
lret
fsubs
daa
adc
jge
imul
out
mov
outsb
dec
adc
add
or
fwait
mov
inc
imul
xor
cmp
mov
ret
mov
data16
ret
and
mov
repnz
aas
std
mov
sub
fwait
push
sti
int3
pop
inc
loopne
pop
sub
dec
and
mov
popf
pop
jmp
scas
push
sub
mov
cld
in
cmp
inc
mov
xchg
push
fdivs
icebp
add
rolb
sub
or
push
jge
adc
and
or
pop
mov
mov
popf
scas
iret
inc
fmull
cs
fistpll
aaa
mov
daa
or
mov
pushf
decb
aad
xor
loopne
sti
leave
add
fsubrs
or
cwtl
std
movsb
repnz
sub
or
int3
push
lods
push
lock
dec
stos
cmpsl
out
cmc
or
adc
jne
les
mov
lea
rolb
test
imul
testb
push
or
dec
test
sub
mov
dec
xor
in
xor
mov
adc
adc
imul
stos
pop
in
cli
dec
dec
jno
fs
mov
inc
into
leave
jle
icebp
jle
xor
xor
sub
mov
sbb
push
repnz
scas
push
in
and
es
mov
cmp
pusha
ljmp
cmp
push
jns
mov
cwtl
cmp
and
push
divl
lock
in
orb
aaa
shll
lea
add
js
popa
add
repnz
loopne
or
test
pop
out
inc
mov
push
pop
in
mov
pop
out
or
push
lods
int
imul
stos
mov
addr16
inc
jns
or
xchg
imul
add
xchg
inc
mov
lds
cli
imul
and
mov
mov
imul
jle
sub
jmp
mov
decb
idiv
sub
mov
dec
adc
pop
sti
sub
add
push
movsl
cltd
je
sub
cld
movsl
xchg
shll
in
icebp
in
mov
inc
inc
xor
push
pop
mov
add
add
inc
add
pmulhuw
pop
dec
loopne
into
pushf
jae
aad
loopne
ficompl
daa
call
pushl
dec
push
loop
arpl
lods
mov
push
inc
punpckhwd
test
mov
and
push
mov
test
mov
push
mov
dec
mov
lock
call
movsb
and
and
dec
and
xchg
cmp
dec
ret
xlat
imul
cwtl
mov
or
jge
mov
and
test
adc
add
cltd
sub
aad
out
dec
es
mov
movsl
xor
inc
mov
scas
es
out
daa
mov
ret
mov
mov
jb
gs
inc
dec
jne,pt
add
xor
ror
adc
jle
sub
mov
pop
nop
mov
negl
xor
add
mov
push
sub
in
push
sub
mov
movsb
les
rolb
pop
imul
cmp
jno
arpl
mov
aad
dec
xor
xchg
mov
test
inc
xor
mov
imul
clc
xchg
adc
mov
dec
arpl
mov
adc
lods
std
pop
jb
xor
sub
mov
xor
cwtl
and
addr16
xchg
sbb
int
in
mov
and
out
and
xchg
and
adc
inc
sbb
xor
shrl
sbb
jp
cmpsl
mov
movsl
dec
addr16
mov
icebp
sarb
xor
repz
inc
fwait
pop
adc
lods
shl
dec
jl
cmpl
popf
add
es
push
or
xor
enter
mov
jo
loope
add
jns
cmp
add
jns
subl
xchg
inc
dec
push
pop
incl
inc
fistpll
ja
loope
jecxz
xchg
or
add
fs
stos
arpl
ds
ja
inc
dec
inc
hlt
fidivl
jae
aad
add
stos
cmp
cmpsb
imulb
shll
mov
ss
movsl
and
mov
mov
dec
test
insl
mov
jae
cmpsl
add
subl
add
xor
sahf
push
fidivs
cmp
mov
and
sub
mul
loope
pop
or
pusha
cltd
mov
mov
dec
mov
cmpl
aaa
adc
lea
sub
sti
cmpsl
fcoms
cld
dec
xor
lret
out
aam
dec
sbb
sub
push
cld
pushf
out
push
out
loopne
loopne
popf
or
push
jl
or
or
js
push
xlat
js
sbb
and
stos
jns
pushf
sub
fldt
ffreep
sahf
and
mov
add
imul
ja
fimuls
inc
mov
and
and
sbb
loop
mov
loope
arpl
and
jo
ret
sbb
mov
adc
xchg
into
xchg
mov
movsl
out
sub
shll
dec
xor
sbb
mov
scas
cmpsl
aad
inc
push
xchg
fists
cmp
xor
add
xchg
xchg
sub
aas
pop
dec
movsl
ret
or
jge
cmpsl
jg
and
dec
imul
clc
rep
pushf
cmp
imul
mov
lahf
pop
int3
leave
clc
aaa
or
or
clc
out
mov
sbb
push
cmp
mov
add
pop
mov
cs
call
jge
cmc
mov
mov
or
ret
mov
pop
xor
or
cmp
cli
add
les
fwait
cld
mov
pop
add
nop
xchg
in
mov
inc
mov
out
sbb
jbe
pop
rolb
adc
mov
test
fwait
test
lock
push
sbbl
inc
sub
mov
jle
lods
imul
icebp
ja
imul
or
sbb
jns
daa
push
jle
sub
outsl
lret
mulb
pusha
in
mov
lock
inc
icebp
jbe
lret
dec
jbe
ret
inc
push
push
out
sbb
or
xchg
lcall
mov
ss
adc
inc
int
mov
push
sub
out
int
jg
and
cmp
sub
vphaddbq
fwait
scas
iret
mov
xor
cmpsl
lods
fisttps
scas
xchg
dec
jbe
fimull
inc
cli
iret
add
sub
outsb
popf
sub
iret
les
inc
outsl
jmp
clc
sbbb
fwait
rclb
mov
andb
fisubrl
repnz
sbb
cli
jae
add
insl
scas
mov
pop
xlat
das
xlat
popa
dec
clc
fsubl
sti
scas
mov
je
jno
mov
les
mulb
ds
sbb
jae
imul
cld
arpl
pushf
xchg
add
xor
or
lret
es
mov
lods
mov
std
lahf
cmp
call
and
mov
push
gs
repnz
add
add
xor
jae
jge
xor
cltd
mov
mov
adc
icebp
lahf
test
mov
dec
insl
out
or
mov
stc
xchg
sub
push
or
sub
iret
mov
pop
ficoms
push
dec
call
cltd
insb
push
int
lret
sti
xchg
filds
mov
lods
jl
cltd
js
pop
push
cmpsb
sbb
or
sahf
iret
mov
jp
dec
adc
push
mov
int
mov
sub
repnz
shlb
out
nop
and
or
outsl
and
sub
fidivrs
sahf
add
mov
push
pushf
and
or
or
fsub
je
inc
frstor
scas
pop
jno
jecxz
lds
outsl
clc
jae
jmp
cs
test
loop
push
cmp
rcr
std
add
bound
mov
fs
pop
in
sbb
inc
addr16
ret
jo
aas
inc
aaa
cmp
stos
mov
jge
mov
xor
in
hlt
mov
repnz
sbb
push
rorb
fisttps
test
sahf
lcall
ret
cs
sti
scas
into
div
out
mov
cli
lds
in
in
dec
mov
pop
or
rcll
jecxz
xor
push
cli
push
dec
repz
inc
icebp
les
movsb
add
cmp
cmpsl
lods
ss
ja
pushf
repz
pop
outsl
scas
rcr
sub
mov
mov
or
leave
jbe
arpl
push
push
test
mov
mov
xchg
mov
xchg
push
mov
or
push
inc
scas
mov
push
movsb
mov
xchg
mov
push
add
sbb
stos
loop
mov
xchg
gs
cmp
loop
pop
aad
xchg
mov
inc
mov
lods
rorl
lahf
jne
push
fldl
pop
out
in
es
pop
dec
call
sbb
dec
test
lods
inc
adc
adc
repz
cmp
add
sbb
add
movsb
mov
sbb
sar
inc
repnz
out
sbb
fucom
pop
jbe
or
jecxz
dec
or
mov
push
stos
jl
aaa
das
push
mov
sar
or
ljmp
mov
cmc
in
lcall
mov
mov
mov
aas
std
pop
mov
lret
cs
dec
push
shlb
pop
ficompl
scas
rol
subps
xor
cmp
cmp
into
testb
cmp
mov
mov
test
pop
arpl
inc
cmp
mov
pop
scas
add
mov
es
lcall
xchg
add
enter
mov
sub
sysexit
pushf
xchg
testl
ret
xchg
icebp
imul
inc
sub
int3
lahf
cli
jl
cld
in
jecxz
mov
and
ret
cmc
rorb
bnd
mov
add
jp
pop
or
xor
imul
lock
pop
pop
pop
jmp
std
mov
iret
or
pushf
mov
ret
sub
xchg
fs
push
xlat
and
mov
cli
dec
pop
js
inc
lods
std
addl
xor
out
jp
fcmove
cli
inc
sti
shrb
cmp
call
ss
std
cmp
pop
jmp
mov
mov
and
jbe
icebp
push
xor
mov
daa
jo
out
cmpsw
push
jo
hlt
movsb
fldl
and
andl
aad
nop
inc
lock
decb
xlat
test
jnp
mov
mov
fs
sub
jo
gs
lds
add
cwtl
sbb
push
test
xor
xchg
jmp
cs
cmpl
xchg
pusha
divl
mov
xor
ljmp
pop
add
outsb
inc
loopne
test
cmp
push
push
push
xchg
pusha
addb
repnz
jecxz
xchg
lock
je
test
fs
aad
cmp
or
test
sbb
out
shlb
jp
test
testl
imul
les
ds
adc
insl
push
pop
fcmovnu
pop
fisubl
mov
sbb
xor
xor
adc
fnsave
enter
inc
popa
push
jmp
subb
not
sub
and
add
cld
inc
out
or
pop
sbb
pop
or
mov
in
xor
int
pcmpgtb
cltd
add
push
iret
negb
xor
jae
and
fisubl
enter
pop
dec
and
cs
movsl
jge
mov
pop
hlt
in
push
fsubl
out
inc
cmpsl
push
cld
ljmp
mov
cmp
and
jae
add
arpl
adc
sub
aaa
leave
dec
data16
popa
mov
inc
shll
xor
stos
jge
jns
or
into
imul
add
ss
mov
sbb
sbb
out
inc
fbld
test
idivl
push
mov
pop
dec
cld
aas
sub
jbe
cs
imul
movsb
jmp
xchg
add
lcall
fcmovnu
sub
dec
mov
add
leave
push
hlt
cmp
std
pusha
arpl
mov
in
pop
push
gs
testb
sbb
xorl
sub
out
adc
cmp
mov
fimull
out
inc
sti
push
push
sub
ret
cld
or
call
pop
icebp
sbb
jns
lea
inc
adc
mov
sti
mov
sti
das
cmp
rol
push
insl
jecxz
movsl
fldenv
add
in
ja
lock
or
mov
and
push
sahf
fstpl
pop
mov
hlt
outsb
or
adc
ret
add
push
nop
and
mov
test
dec
sub
scas
nop
rorl
and
cld
cmpsb
lret
aaa
add
leave
js
decb
ljmp
inc
cld
mov
mov
mov
dec
dec
lcall
int
xlat
xchg
insl
test
fsub
inc
jl
add
into
pop
std
inc
daa
mov
shlb
or
mov
sub
ret
idiv
or
add
int3
ror
and
jecxz
fisttpl
rorl
popf
in
cli
fidivrs
pop
aam
in
mov
add
cmpsb
jmp
in
shlb
inc
shr
dec
add
jbe
lcall
stos
fldt
push
lock
mov
mov
adc
test
int3
jmp
jle
xchg
incb
call
xchg
pop
aad
test
jmp
das
adc
je
ret
sbb
mov
out
movsb
push
out
jne
sbb
dec
ja
lds
add
scas
cmp
aam
push
cltd
jne
dec
das
adc
ret
cs
out
jle
dec
mov
leave
inc
mov
adc
pop
add
rorl
pop
cwtl
lods
es
sub
loop
lods
xor
push
bound
stc
cmp
repz
aam
insl
or
add
xchg
mov
aas
push
fisubrl
adc
add
sub
adc
sbb
mov
mov
or
int3
mov
cmc
inc
ljmp
dec
jo
and
scas
jns
int3
inc
dec
inc
dec
dec
js
mov
notb
lock
jns
and
jb
or
xchg
push
cld
adc
mov
jmp
pop
xchg
push
push
xchg
adc
into
jne
data16
mov
jnp
sbb
add
mov
aaa
xor
push
sub
mov
mov
rcl
push
jecxz
push
mov
inc
and
add
dec
jmp
insb
or
adc
in
push
cmc
test
ljmp
push
sti
and
push
sbb
cmc
jl
das
cwtl
sub
push
sub
int
xchg
mov
and
mov
sbb
out
in
test
ds
leave
push
fisttpll
popf
rolb
lret
dec
out
cmp
xchg
xchg
push
call
fistl
cmp
or
pop
pop
fidivl
xchg
iret
mov
call
add
and
call
je
cmc
test
mov
inc
mov
dec
or
and
ds
iret
les
movsl
sbb
push
mov
mov
shrb
stos
in
lret
loop
add
stos
sbb
cmp
aaa
lret
pusha
push
scas
mov
inc
scas
stos
adc
mov
loop
jmp
dec
aam
les
popf
add
xchg
es
jmp
xchg
push
mov
cs
cmpsb
cli
sbb
add
add
daa
or
lahf
jecxz
inc
outsl
fsubrl
popf
loopne
dec
sub
fs
aad
cs
out
xchg
xchg
mov
xor
call
mov
pop
jae
test
gs
loopw
push
push
out
mov
hlt
fiadds
mov
gs
xor
rcrb
aad
dec
loop
dec
and
jb
out
aad
xchg
xchg
lock
pop
inc
lds
in
add
test
xchg
dec
ljmp
in
imul
mov
pop
ret
push
mov
inc
jns
mov
push
das
lods
push
or
mov
fiaddl
jl
mov
mov
push
std
std
jge
mov
add
int3
je
hlt
and
in
icebp
inc
sti
push
idiv
xor
pop
push
pop
mov
and
lcall
mov
sbb
push
lcall
add
cpuid
mov
movsb
inc
cmp
frstor
roll
mov
sbb
fistps
pop
ss
stc
xorl
inc
pusha
dec
mov
xchg
test
cld
sti
push
ret
xchg
jno
repz
cmpsl
pop
lcall
jb
jne
fiaddl
out
test
call
cmc
dec
xchg
mov
dec
sub
pop
es
fcomp
imul
sbb
dec
cmpsb
xor
cmp
or
xchg
push
shlb
into
in
call
or
mov
sahf
idivb
outsb
test
fsubl
ss
es
dec
int
outsl
scas
inc
rclb
xchg
or
add
mov
push
fsubs
sub
lea
pop
rolb
lea
mov
ljmp
outsl
pop
in
lahf
push
outsb
mov
push
jg
pop
dec
ljmp
push
inc
and
lret
push
mov
mov
ret
mov
inc
mov
jl
inc
rolb
fildll
rol
or
inc
ret
addr16
call
xchg
xlat
jno
jmp
data16
xor
inc
jmp
jecxz
mov
jno
xchg
int3
adc
jmp
push
push
pushf
dec
jbe
das
xor
popf
icebp
jo
iret
gs
dec
sub
in
sbb
arpl
cmpsb
mov
xor
cwtl
into
cmp
jb
lods
out
or
lods
ficoms
lods
mov
arpl
pop
es
pop
pop
lock
mov
pop
iret
cld
in
sbb
or
mov
lcall
xor
sbbb
lock
insl
ret
pop
mov
sahf
clc
in
jnp
dec
mov
push
jnp
add
imul
mov
xchg
jns
call
mov
push
cmpsb
mov
lods
imul
pusha
push
sarl
mov
mov
pop
ja
mov
lods
fdivs
mov
out
popf
xchg
sbb
fbld
std
and
aaa
push
pop
or
mov
test
ss
idivl
mov
lods
adc
sbb
xor
je
cmc
cwtl
repz
cltd
or
imul
lods
lea
pop
enter
mov
pop
fs
test
push
outsl
mov
xchg
adc
xchg
push
adc
sbb
data16
and
lds
flds
sbb
test
mov
or
mov
cmc
inc
aad
out
nop
pop
ja
mov
stos
lret
repnz
dec
xchg
mov
cs
popf
inc
mov
add
mov
cmp
iret
mov
sub
push
add
jae
pop
pop
punpcklwd
nop
rorb
mov
add
cld
negb
jae
jo
or
daa
sub
sbb
add
lock
or
push
loop
and
mov
xchg
mov
adc
addr16
xchg
jg
rcll
mov
mov
arpl
repnz
popf
xrelease
pop
and
jg
mov
sub
divb
out
stos
adc
adc
out
movsb
cmp
enter
inc
inc
data16
cwtl
and
mov
xchg
sahf
sbb
or
call
jb
out
and
mov
lret
pop
mov
cli
call
aas
adc
sbbl
imul
out
mov
lahf
imul
pop
insl
ret
cmp
inc
sub
jle
pusha
mov
adc
xorl
cmp
cmp
cltd
inc
mov
je
jbe
add
jg
inc
test
or
adcb
sahf
sahf
pusha
cld
std
fildl
jne
ss
test
mov
repz
clc
push
lock
and
js
sbb
cwtl
cmp
rolb
scas
cmpsl
cmp
xchg
adc
add
movsb
sbb
cltd
inc
inc
xchg
fidivs
pop
cmpsb
xchg
scas
cwtl
or
rcrb
xor
cld
xchg
orl
adc
sbb
bound
mov
enter
ja
jnp
adc
aam
sub
lock
test
insb
adc
movl
and
xchg
enter
push
outsb
imul
mov
in
cltd
ret
neg
pop
xchg
insl
inc
cmp
lret
dec
push
int3
mov
out
out
repnz
scas
inc
imul
data16
loopne
add
add
push
add
push
in
aas
xor
in
sub
mull
addr16
xorb
mov
fisubs
adc
cmp
pop
mov
std
push
add
jb
xor
divb
mov
movl
pushf
test
sbb
aas
push
test
ret
stos
lea
mov
notb
mov
or
mov
and
icebp
mov
mov
sub
xor
or
mov
lcall
pop
inc
or
xor
xor
lret
jle
pop
loop
adc
sbb
pop
push
dec
out
pushf
dec
rcrl
cmp
arpl
cmp
mov
out
mov
shll
js
cmp
inc
adc
cmp
fmul
aas
cmp
mov
faddp
mov
je
pop
rcl
pop
dec
cmp
adc
int3
out
repz
jl
js
lahf
inc
dec
imulb
shlb
inc
lret
test
mov
js
in
pusha
push
cmp
dec
mov
mov
pop
fnstsw
dec
in
in
sbb
int
xchg
into
jge
jl
push
ja
sub
in
movsl
pop
inc
loope
mov
loope
enter
cwtl
pop
data16
adc
addb
icebp
mov
lcall
lock
shlb
int3
mov
and
cmpsl
jne
pop
pop
dec
fsubrl
dec
sub
adc
data16
add
adc
loopne
xor
fmull
cmp
inc
mov
push
mov
mov
enter
xchg
dec
mov
arpl
roll
mov
adc
push
ret
jno
adc
xor
js
pop
insb
popf
cmpsb
sbb
sub
and
out
mov
sbb
lods
hlt
pop
mov
sub
mov
lods
aad
jge
imul
mov
sbbb
and
scas
jno
popa
icebp
jecxz
lods
push
les
stos
lds
dec
xchg
and
out
rolb
push
inc
hlt
pop
push
enter
sub
scas
push
pop
lret
rcrl
push
subl
push
mov
jl
push
mov
shl
mov
arpl
push
call
fwait
popf
cltd
xchg
xor
shlb
pop
je
push
or
cwtl
mov
xor
std
pop
cmpsl
inc
aas
fstl
pop
cs
ss
jg
dec
mulb
xchg
lahf
movsb
push
jmp
out
testb
aaa
inc
ljmp
add
sub
call
cli
dec
sbb
cld
aas
into
xchg
fbstp
jnp
insl
and
push
push
push
inc
mov
in
adc
lret
xchg
sbb
mov
sahf
mov
mov
pop
cli
mulb
cmp
dec
adc
push
rorl
fnsave
repz
adc
mov
mov
cld
xchg
inc
repz
divb
lods
dec
aas
sbbl
jmp
push
ja
das
jp
mov
or
nop
sub
ret
jle
and
xlat
data16
or
mov
sub
and
and
in
shll
in
outsl
mov
sub
inc
movsb
daa
xchg
pop
imul
mov
aam
and
mov
dec
jl
mov
push
add
dec
pop
testl
sbb
test
mov
notl
sbb
sub
pop
loope
scas
inc
cmp
jle
repz
inc
xchg
mov
jg
add
push
cmp
adc
and
and
mov
sub
es
cmp
fstpt
pop
push
and
adc
mov
call
add
xchg
mov
nop
xchg
int3
sbb
push
jg
pop
stos
popa
aad
imul
pop
mov
xchg
pop
add
ret
xor
into
xchg
pop
xor
aas
sub
int3
dec
inc
mov
rol
mov
addr16
mov
cmpsl
and
cli
sahf
hlt
mov
imul
add
call
clc
das
fs
addb
sub
sub
jnp
outsb
xchg
sbb
loopne
sti
inc
insl
dec
test
mov
mov
popf
mov
bound
mov
push
sarb
cmp
push
jmp
sub
pop
lahf
cmp
enter
lret
test
ficompl
xlat
negb
jbe
xchg
iret
loop
arpl
push
popf
dec
fldln2
cld
sub
dec
dec
and
push
or
stc
and
popa
les
loop
cmc
pop
fstps
rorb
hlt
mov
lret
mov
into
mov
mov
rclb
leave
xchg
lods
dec
jb
and
pop
cmpsl
sahf
jae
das
xor
lock
mov
mov
sub
pop
dec
mov
ljmp
jns
dec
xor
test
or
mov
sub
in
dec
mov
sub
mov
add
pop
les
mov
sbb
fwait
rol
insl
mov
mov
mov
xchg
dec
adc
mov
adc
or
enter
jmp
push
fdivs
ret
sub
test
and
mov
ds
pop
adc
adc
into
mov
mov
mov
imul
in
ret
or
fisubrs
push
xchg
add
xor
dec
xor
aam
les
out
jb
mov
jne
add
xor
sbb
sub
dec
scas
lods
sarl
pop
pop
popf
rclb
shl
rclb
jge
andl
jo
enter
ljmp
stc
int
out
jp
pop
lea
stos
cmpsb
into
jmp
mov
cmp
push
popa
push
or
sahf
pop
sbb
loope
push
insl
sub
cmp
push
xchg
add
and
cmpsl
mov
lods
scas
fmul
mov
and
insl
into
cmp
dec
push
xchg
rep
xchg
stos
shr
out
es
fcomip
push
mov
or
pop
in
icebp
dec
add
adc
mov
gs
inc
pop
sti
add
nop
imull
dec
jae
xor
mov
in
shrb
xchg
pushf
hlt
jb
ds
lods
xchg
movsb
dec
mov
sub
adc
or
jle
and
outsl
xor
sbb
and
inc
pop
test
iret
sti
inc
fdivl
sbb
ss
mov
jno
movsl
cmp
es
dec
adc
pop
out
mov
jne
cmp
xchg
repnz
pop
dec
call
dec
pop
pop
test
shrb
sub
popf
jecxz
stos
lcall
xor
arpl
xor
push
repz
push
addr16
adc
mov
xchg
push
lods
mov
jle
out
or
mov
fldt
les
pushf
lcall
ds
je
je
popl
lods
imul
add
loope
dec
dec
xchg
sub
fwait
mov
ss
andl
lahf
je
push
or
lds
pop
jae
int
lods
dec
lods
xchg
adc
lea
pusha
das
push
setge
fstp
adc
imul
mov
out
idivb
int
cmp
loope
addl
dec
sub
inc
cli
dec
inc
jns
jae
xchg
lds
or
dec
stos
mov
sub
iret
xchg
ds
push
pop
xchg
push
push
sbb
popf
cmp
jae,pn
jae
add
repz
add
sbb
jge
mov
xor
test
bound
mov
movsl
fwait
cwtl
insl
or
mov
loopne
sub
jbe
ficomps
or
xorb
jo
movsl
vpminub
sub
push
and
leave
lcall
cmpl
push
fucom
jae
jge
ljmp
and
rclb
lcall
adc
mov
xor
dec
loopne
mov
imul
inc
sbb
popf
cmpsb
shlb
idivl
sbb
push
cwtl
dec
lods
in
icebp
xor
sbb
mov
shlb
mov
and
sub
in
shrb
mov
cmp
orl
imul
mov
imul
mov
insl
pop
sti
and
out
and
xlat
stos
cmp
out
into
jg
stos
xor
imul
jge
test
cmp
adc
inc
repnz
xchg
clc
pop
push
inc
pop
dec
loopne
in
mov
in
dec
mov
ret
icebp
popa
inc
lcall
iret
add
cmp
les
pop
es
or
jne
shlb
out
xchg
xlat
fwait
or
loop
push
sub
jl
in
mov
add
out
arpl
cmp
sbb
rol
popf
cmpsb
test
push
xor
and
and
mov
adc
rolb
xchg
repnz
scas
int3
add
push
mov
ret
and
sbb
or
int
mov
xor
stos
lcall
mov
outsb
xor
hlt
fwait
test
pop
jle
fwait
repz
xchg
xchg
jbe
mov
lds
push
mov
push
pop
testb
sub
rcll
xor
xor
popa
in
push
js
stos
and
cli
xchg
xchg
push
add
repnz
mov
add
adc
in
cmpsb
cmp
ret
and
jno
mov
dec
add
ret
pop
inc
inc
ret
jmp
sub
adc
mov
sbb
or
stos
sub
shll
jbe
pop
cmpl
xchg
sbb
dec
or
adc
gs
mov
add
fdivrs
add
daa
fdivrp
enter
sarb
cmpsb
mov
insb
imul
pop
sarl
mov
xchg
pop
or
add
pop
inc
lcall
or
mov
je
mov
xor
sbb
sbb
testb
push
adc
fstpt
in
mov
fwait
cmpsl
and
movsl
ds
xor
mov
lods
rolb
scas
es
mov
sub
jle
mov
in
js
jns
dec
sbb
punpcklwd
pop
stos
pop
test
frstor
cld
add
outsb
into
jo
push
pop
add
or
outsb
bnd
sahf
mov
mov
xchg
bndldx
or
xchg
push
dec
adc
addr16
je
sti
inc
bound
imul
cmp
dec
notb
and
rorb
shll
xor
mov
lahf
add
aam
adc
add
mov
mov
mull
sbb
lds
or
popl
arpl
push
outsl
sbb
iret
push
push
mov
jl
mov
repnz
shlb
les
aad
rorl
cltd
shll
sbb
jmp
mov
or
testb
icebp
cmc
add
jno
sub
sub
ds
cmpsb
outsb
ret
jmp
es
lea
pop
clc
sub
into
nop
mov
xchg
in
pop
into
add
fscale
shlb
mov
call
mov
sbb
mov
pop
fidivs
adc
popf
mov
ds
dec
out
clc
stos
dec
out
mov
mov
pop
repz
jb
daa
cmp
sub
aaa
jecxz
cmp
push
push
clc
add
push
jo
mov
fadds
fstpl
jns
mov
fwait
and
cmp
cltd
pop
imul
mov
cld
je
push
in
and
sbb
inc
cltd
and
fisubrs
pushf
pcmpgtd
and
mov
lds
mov
mov
or
mov
cli
mov
mov
daa
ja
jmp
xchg
repnz
sub
lcall
xor
es
test
jno
rep
cmpsl
pusha
leave
and
pop
pop
std
ffreep
ds
movb
loop
dec
das
adc
sbb
sub
popf
testb
loopne
sarb
sbb
lahf
out
ret
fwait
jne
cmp
dec
pop
mov
imul
rcl
pop
aas
test
jecxz
imul
in
mov
ret
gs
inc
xor
push
shlb
adc
inc
test
imul
or
push
in
cs
sbb
xrelease
jmp
cwtl
jo
mov
pop
sub
xlat
cmp
or
mov
pop
dec
daa
dec
cmp
push
mov
in
loope
or
sarl
enter
pop
das
pop
data16
stos
int3
xor
aam
imul
bound
cli
std
popf
popa
insb
ficomps
shll
lods
push
push
scas
mov
cltd
cmp
or
scas
mov
pop
cmc
shlb
testl
test
pop
mov
jo
or
cld
stos
rcrb
popa
cli
xchg
add
xchg
inc
and
sbb
mov
sub
dec
push
mov
dec
icebp
pop
and
sarl
sub
adc
bound
test
test
ret
repnz
aaa
lods
inc
das
movsl
shl
jmp
mov
cld
push
popf
cmp
add
push
or
add
inc
ret
or
fs
xor
testl
lret
call
sbb
mov
or
stc
mov
and
mov
mov
sub
mov
fidivl
or
pusha
sbb
pop
stc
popf
fists
sbb
leave
daa
add
xchg
mov
pop
cmp
repnz
xor
cmpsl
push
lahf
adc
fdivr
sub
or
mov
and
mov
aas
aad
xchg
mov
or
or
fadds
movsl
loopne
pushf
sbb
pop
and
jb
add
pushf
xor
adc
cmp
mov
int
mov
pmulhw
sbb
shlb
frstor
stos
jo
adc
push
lods
jne
rcl
sbb
cmp
xchg
push
jnp
xchg
sub
cmp
sub
or
test
pushf
mov
popa
push
jbe
mov
dec
jmp
push
je
hlt
sub
mov
stc
add
xchg
mov
movsb
push
dec
clc
out
sbb
dec
or
cmpsb
dec
xchg
mov
mov
dec
dec
pop
and
dec
jo
mov
ja
add
pop
lea
pop
lcall
adc
and
or
cmp
cmpl
xor
dec
fildll
cmp
out
cltd
push
inc
and
xchg
test
ror
mov
imul
fstpl
lods
mov
rclb
das
aaa
xlat
orl
or
ja
aas
add
push
mov
sub
call
push
mov
jmp
mov
data16
adc
insb
pop
dec
and
ret
pop
dec
mov
adc
push
rorl
jmp
push
cmp
sbb
in
insb
lcall
adc
or
adc
es
jnp
push
and
in
jp
dec
lods
hlt
mov
rcl
mov
mov
mov
movsb
out
das
in
cmp
dec
adc
mov
int3
sbb
stc
es
mov
and
mov
pop
cli
mov
adc
and
or
int3
sub
ljmp
xor
dec
scas
sbb
xlat
inc
xchg
scas
jl
xchg
test
fwait
insb
sub
jg
mov
mov
jmp
shlb
dec
adc
mov
adc
sti
aam
xchg
inc
mov
cli
not
sbb
adc
xchg
pop
add
hlt
je
jae
pop
mov
push
outsl
and
popf
push
clc
adc
and
cmc
inc
dec
mov
mov
nop
fnstcw
cltd
hlt
ja
add
xchg
out
sub
leave
mov
das
in
movsl
mov
lods
mov
in
inc
pop
sbb
loopne
int
push
in
scas
xchg
pop
or
jbe
mov
jmp
je
test
insl
pop
adc
repnz
pushf
jno
sti
push
sbb
pop
loop
lock
cmp
cmp
mov
lcall
jp
mov
std
sub
jg
jle
call
das
and
jl
push
pop
xlat
pop
nop
jae
test
enter
and
daa
call
push
push
mov
js
adc
outsb
push
stos
aas
or
cmp
mov
leave
outsl
dec
loope
fisttpll
idivb
xchg
aam
rcl
fs
imul
mov
imul
fcom
add
inc
aad
pop
pop
test
pop
push
testb
iret
dec
pushf
push
add
loop
inc
rorb
mov
mov
int3
ss
test
mov
mov
sbbl
dec
in
popa
fwait
push
mov
inc
lret
gs
fstpl
mov
mov
inc
loope
cmp
rorb
add
cmpsl
sub
or
cmp
xchg
cmpsl
adc
xor
orl
mov
fcomip
nop
jnp
cli
push
pop
add
dec
mov
fcomp
mov
xchg
cmp
std
xor
pusha
mov
outsl
scas
push
push
orl
aas
dec
mov
test
out
adc
ret
fs
cltd
pop
loop
lea
imul
sub
enter
mov
dec
sub
pop
ljmp
jo
cs
or
lcall
push
push
ret
dec
and
push
xorl
mov
repz
lahf
gs
sub
ss
rcrb
jmp
ffreep
mov
movl
aaa
fsubl
insl
or
cmp
and
rcrb
lret
gs
scas
push
lds
cmp
hlt
je
jbe
jecxz
dec
js
fmull
xchg
jge
push
or
leave
and
js
sbb
mov
stos
bnd
lahf
ds
inc
mov
movsb
xchg
ret
pop
and
dec
lods
enter
stos
in
paddq
mov
ret
in
jp
mov
stos
add
iret
inc
mov
xchg
mov
push
bound
push
cmpsb
dec
repz
mov
adc
icebp
test
mov
lret
push
sub
mov
sub
and
lcall
out
lds
fstl
or
in
ja
and
gs
mov
jnp
add
jnp
jbe
les
push
and
mov
xchg
ret
mov
mov
stos
mov
adc
cwtl
leave
fistpll
and
fs
xor
mov
stos
ja
cltd
sbb
adc
mov
sbb
cmp
lret
add
neg
cmp
sub
das
push
push
idiv
sbb
rcrl
das
loope
pop
jne
xor
adc
loop
and
cmp
push
mov
or
popa
shl
lea
cmp
xchg
mov
and
mov
mov
push
push
in
lock
push
test
lods
loopne
lock
popf
mov
dec
mov
pop
jnp
dec
push
inc
xor
push
mov
xlat
xor
fistps
jmp
out
out
mov
dec
fsubp
push
mov
and
push
xor
sub
xchg
mov
jnp
push
ret
mov
sahf
mov
push
or
mov
mov
je
enter
sbb
add
pusha
fdiv
loopne
xor
hlt
push
pop
cwtl
mov
ja
mov
xor
in
mov
push
sahf
and
xchg
add
lahf
mov
sub
push
lret
loop
sbb
negl
xor
sbb
imul
mov
cmp
loop
loop
jne
sub
scas
xlat
pop
inc
lcall
mov
mov
sub
sub
test
in
es
adc
cltd
sbb
shll
jbe
mov
pop
inc
push
add
shrl
in
addr16
mov
inc
stos
test
and
movsl
inc
mov
jae
jmp
ds
mov
add
aaa
in
jp
mov
or
movsw
mov
rclb
sub
cmpsl
or
mov
cld
outsl
shll
aas
mov
xchg
and
rcl
fld
dec
push
dec
cltd
nop
sub
mov
jns
scas
test
shl
push
add
dec
dec
fcompl
adc
or
jmp
xchg
and
and
push
stc
add
mov
push
mov
cmpb
jmp
movb
sarl
test
sub
or
mov
ret
lea
or
sbb
bound
mov
scas
rclb
mov
xor
adc
movsl
push
sub
sub
adc
fucomip
pop
adc
out
testl
add
cwtl
andb
ret
cmp
rcl
hlt
ret
cmp
daa
js
jno
lahf
popa
lcall
cltd
sbb
adc
or
clc
sbb
loop
fwait
or
xchg
xchg
and
ja
test
and
add
gs
cli
gs
shr
jle
testl
xor
add
adc
add
sbb
mov
into
and
aaa
dec
fucomp
push
in
adc
lods
pop
movsl
push
loopne
xor
shll
xor
sub
inc
loope
repz
inc
adc
add
fxch
int3
in
push
lret
in
orb
test
cs
pop
lods
cmp
ret
scas
clc
jo
ret
sbb
repnz
xchg
mov
rol
sub
stos
out
stc
rcr
xchg
inc
sub
push
push
lds
neg
pop
cld
mov
ds
fwait
loop
push
mov
rclb
jae
cmp
mov
pop
ljmpw
or
imul
incl
xlat
or
or
inc
adc
mov
jge
sbb
mov
push
pop
sbb
cmp
shlb
cwtl
cltd
jo
jno
pop
push
jl
in
sub
cwtl
test
jg
lret
loope
adc
pushf
cmp
push
out
add
cmp
and
outsl
pop
cld
cmp
add
mov
imul
mov
scas
jno
cmp
jmp
inc
add
dec
mov
xor
lcall
loop
or
mov
xor
lods
xadd
cmp
scas
stos
push
movsb
add
ret
jno
push
icebp
sbb
gs
jno
and
stos
adc
out
jnp
inc
xor
or
or
add
icebp
mov
xchg
jmp
push
insb
sub
push
fcomps
in
pop
fstpl
data16
cmpsb
or
or
notl
cld
cwtl
icebp
inc
push
jnp
mov
add
out
loop
ret
movsl
test
ret
mov
dec
jp
ss
fadds
pop
in
fwait
adc
fidivs
cmpl
data16
in
and
stos
sahf
cmp
pop
ja
enter
dec
jbe
pop
jle
insb
inc
shll
add
repz
mov
pop
decb
enter
mov
test
jge
inc
cmp
lahf
andb
rorl
mov
movsb
cmp
mov
add
push
mov
jmp
sbb
mov
js
fs
ss
jae
fsts
jnp
pop
or
subl
or
adc
lret
push
inc
adc
and
sti
and
sbb
ss
add
out
mov
sub
add
cmp
mov
mov
aad
rolb
push
or
lret
dec
jnp
sub
movl
insb
movsl
lahf
call
mov
cmp
inc
adc
mov
cld
xor
fimuls
stos
xchg
push
sti
pop
gs
ret
or
jmp
fisubrl
sbb
mov
mov
imul
mov
cmp
insb
push
ss
cmc
cs
jle
pop
add
outsl
jmp
add
sub
pop
and
push
add
jne
sbb
mov
out
mov
lds
jle
sbb
and
cld
xchg
test
rorb
cs
scas
arpl
out
lea
in
and
das
jp
imul
fs
test
and
pop
mov
pushf
aas
js
lock
dec
cld
xlat
lea
jmp
adc
xchg
enter
rclb
mov
fmuls
sub
jge
out
mov
out
mov
fdivl
cmp
pop
popf
and
mov
and
pop
stc
cli
fmul
push
push
mov
jg
xlat
mov
jns
ret
inc
mov
pop
xor
dec
fcoms
jle
mov
lock
pop
push
mov
push
xor
int3
xchg
ret
jb
mov
sahf
lcall
cmpsb
pop
add
add
into
sub
mov
inc
lods
lea
push
push
jl
ss
jp
scas
movsb
arpl
jbe
pushf
imul
lods
add
lcall
imulb
jp
mov
mov
pop
popf
cwtl
outsl
adc
xchg
jne
sub
mov
cmpsb
pop
mov
ja
xorb
push
pop
or
outsl
ljmp
mov
xlat
cmp
stc
insb
mov
jns
cmp
adc
lods
ljmp
in
outsb
lock
in
cwtl
and
leave
popf
dec
out
xor
ja
mov
inc
add
xchg
nop
cmp
jno
cmpsb
fadds
icebp
jo
das
pop
mov
enter
je
mov
xchg
sub
dec
adc
gs
lret
dec
mov
popa
div
adc
scas
aaa
lds
xor
adc
mov
pop
and
leave
test
scas
adc
add
negl
ds
into
test
scas
xchg
inc
fdivrl
mov
daa
cmp
xchg
lret
mov
mov
fwait
xor
add
dec
mov
test
mov
pop
sub
push
mov
add
or
stos
sub
jo
add
and
jne
daa
outsl
dec
sahf
push
enter
call
mov
mov
out
scas
data16
sbb
rcrl
fildll
push
sbb
cltd
pop
cmp
push
out
push
mov
push
jl
outsb
ss
inc
das
cmpsl
inc
test
jnp
aad
push
cltd
cmp
subl
push
insl
inc
stos
pop
or
ds
push
add
pop
jnp
adc
lret
xchg
pop
imul
push
lcall
or
imul
sub
jg
and
pop
cmc
cmp
mov
in
fsubrs
pop
push
imul
mov
pop
pop
stos
sbb
xor
fdivp
fidivl
decl
pop
fmull
sub
data16
pop
ret
lds
cmp
stos
push
cmp
lock
push
push
inc
mov
mov
dec
jecxz
iret
int
sub
xchg
jmp
ljmp
jae
lock
leave
adc
xor
cmp
push
push
fwait
sbb
inc
add
or
mov
stos
imull
xchg
sub
xchg
pop
popf
xchg
adc
pop
dec
aam
int
mov
popa
add
cmpsb
pop
mov
pop
out
xchg
mov
mov
ljmp
pop
lahf
cmp
stos
pusha
outsl
mov
sbb
push
jb
xchg
xor
xchg
xor
and
sbb
inc
hlt
lods
mov
int3
dec
lret
mov
jnp
push
pop
add
hlt
dec
in
test
add
sub
popf
pop
adc
push
bound
or
lods
xlat
divb
movsl
leave
cltd
frstor
and
frstor
xchg
sbb
sub
sbb
cmpl
fists
fcomps
add
loope
call
leave
hlt
in
mov
ficoms
mov
out
cmp
pop
lcall
icebp
in
jmp
add
repz
xchg
aam
gs
fsubs
and
pop
ret
or
pop
pop
stos
sub
lcall
push
and
xor
pop
pop
popa
stos
sbb
lock
dec
adc
out
push
jb
push
adc
int
idiv
inc
jnp
outsb
add
imul
hlt
jae
push
roll
push
dec
cmp
or
in
pop
inc
sbb
jmp
push
nop
push
fidivl
pop
aad
adc
test
clc
scas
mov
and
in
test
rclb
cmpsl
xorb
push
repz
test
into
xchg
sub
mov
mov
jl
mov
pop
pop
lods
or
sbb
xchg
popa
std
jecxz
inc
imul
inc
mov
inc
loop
lret
lcall
push
rcrb
and
xchg
pop
adc
adc
dec
mov
adc
mov
mov
roll
dec
cltd
popa
iret
xchg
jmp
mov
mov
andb
cltd
leave
jnp
cmpsb
imul
aaa
jg
jnp
dec
hlt
nop
cltd
cmp
cmp
and
rcll
lahf
mov
stc
xchg
cmpsb
inc
push
push
fisubrl
loopne
hlt
daa
ljmp
cltd
xchg
dec
xchg
cwtl
jno
sub
or
inc
pop
test
dec
hlt
test
push
sar
jae
mov
repz
sbb
js
xchg
movsb
test
jge
mov
sbb
or
add
jns
jl
gs
add
jno
cmpsl
sub
dec
mov
pushf
mov
and
icebp
xor
mov
xchg
xchg
fdivs
cltd
jns
push
mov
or
mov
lock
jo
pop
cmp
push
inc
cmc
ret
jns
adc
aas
shrl
xor
inc
inc
clc
fadd
push
imul
push
push
push
adc
add
dec
xchg
mov
push
ss
jge
lods
mov
and
movsb
and
je
jp
pop
push
inc
sub
pop
pushf
fstpt
jno
icebp
jnp
repnz
cli
push
or
pusha
rcr
sub
aad
jne
cld
shufps
imul
dec
fcmovnbe
sti
push
pop
hlt
insb
lock
push
sbb
and
mov
pop
cltd
and
popa
roll
jns
or
inc
repnz
imul
lcall
xchg
jg
sub
push
push
jae
call
push
iret
adc
add
addr16
repnz
test
loopne
jle
iret
push
repnz
dec
xor
ret
adc
in
mov
cwtl
out
pushf
sub
mov
sub
cmp
mov
aaa
std
mov
mov
pop
stos
in
mov
jns
dec
inc
inc
lret
push
add
sub
add
xchg
cmp
stc
pop
and
repnz
test
cmc
sub
cmp
rorl
push
movsb
lock
lret
mov
pop
inc
rorl
and
cmp
push
test
lds
ss
iret
push
ss
clc
ljmp
push
mov
mov
cmp
mov
sti
je
int
je
sbb
lret
repnz
or
jle
adc
loope
push
loopne
data16
add
mov
rcrl
hlt
arpl
and
popf
std
movsl
dec
mov
sub
outsb
lock
mov
cli
or
pop
aad
mov
mov
adcl
xchg
les
mov
mov
add
inc
ja
pop
jbe
pop
pop
lods
rol
and
call
scas
jl
inc
inc
insb
loopne
loope
and
lahf
loopne
push
adc
push
jns
xor
push
lods
adc
cmp
js
cmp
cmpsl
mov
mov
push
and
jns
push
popf
enter
fildll
out
and
dec
xor
ficomps
and
fucom
aas
mov
cmp
cmp
stc
divl
push
mov
xchg
mov
test
enter
and
mov
sbb
sbb
lahf
lcall
in
in
in
sub
loop
bound
and
or
jp
and
cmp
mov
cwtl
fmuls
mov
cltd
or
pop
clc
fsubrs
test
and
sub
sbb
popf
out
mov
nop
pop
sub
aam
adc
mov
aam
dec
pop
push
dec
push
mov
mov
ret
cmp
imul
and
xchg
pusha
add
inc
bound
push
and
mov
jb
jne
or
mov
popf
mov
dec
xchg
enter
ffree
jbe
pusha
cltd
pushf
push
mov
pop
loopne
popa
pop
aas
mov
cmp
fs
sbb
scas
or
adc
lods
xlat
push
fistps
jmp
seto
cmp
aam
in
or
mov
rcll
loopne
pop
jo
mov
addr16
push
popf
pop
popa
jo
lea
out
int3
in
imul
fmull
mov
xor
mov
in
bound
dec
lret
jne
mov
mov
push
sarl
cmp
mov
and
aad
dec
pop
and
mov
jb
dec
lcall
xchg
pusha
xor
add
mov
cmp
rorl
mov
push
fdivl
mov
cmp
pop
daa
adc
and
lock
sahf
mov
testl
repz
xchg
ds
mov
adc
sub
lret
sbb
push
jnp
pop
inc
syscall
mov
rolb
and
mov
pop
mov
mov
ret
or
sbb
out
inc
cmc
int
dec
add
lds
fdiv
sti
jb
fstl
clc
fimull
movsb
and
jg
inc
ret
ljmp
sbb
mov
xchg
sbb
jg
insb
insb
pop
es
and
daa
scas
je
mov
stos
sbb
mov
xchg
shll
subl
inc
repz
mov
push
hlt
rorb
mov
lea
ds
ror
ds
test
jp
loope
sbb
bnd
adc
dec
filds
xchg
cmc
or
int
inc
or
push
push
mov
pop
push
mov
sbb
jbe
pop
adc
add
inc
lock
lcall
and
inc
loop
adc
stc
pop
xor
dec
dec
or
mov
pop
pop
imul
dec
in
ljmp
aam
cmpsb
or
and
imul
sub
fst
adc
les
push
sub
mov
mov
push
inc
mov
push
mov
fstp
cmc
push
lods
andl
mov
mov
push
xchg
cmpl
inc
xor
jnp
mov
cli
jge
inc
push
imul
pop
fcoms
pop
clc
push
push
lahf
add
pop
mov
arpl
hlt
test
sbb
shll
test
ficompl
sub
shl
adc
mov
or
pop
dec
roll
idivl
xor
cmpsb
pop
dec
into
cmp
arpl
inc
daa
divl
and
repz
inc
popa
xchg
daa
lret
outsb
lods
mov
adc
and
and
cmp
stos
in
add
out
das
scas
jecxz
sub
jle
jmp
jae
mov
mov
adc
push
outsb
cmp
inc
test
jns
and
out
adc
jecxz
sub
arpl
and
imul
dec
inc
jnp
movsb
in
stc
repz
aam
loope
ja
push
ret
jecxz
ds
add
jne
xchg
mov
pushf
mov
jmp
jno
movb
cli
sub
pop
pop
andps
ss
sbb
sub
xchg
add
and
mov
adc
bound
xor
aad
lahf
dec
mov
sbb
inc
push
xchg
mov
mov
rorb
push
dec
jbe
inc
jle
int3
xor
pop
dec
cmp
mov
dec
or
xchg
lret
cmpsb
xor
dec
sub
decb
inc
mov
fnstcw
inc
sub
bound
fistl
cmp
sbb
jne
jb
and
insb
ret
dec
or
out
aad
xchg
fmul
mov
pop
ljmp
nop
mov
cltd
out
fisttpll
dec
fbld
xchg
fwait
pop
push
mov
add
mov
mov
lods
sub
jge
ret
stos
push
adc
jno
lret
pushf
add
inc
lea
mov
mov
pop
test
lock
jo
fucom
sbb
mov
pusha
lea
std
cld
cmpsb
test
repnz
add
pop
xchg
rorl
sub
xchg
int3
mov
stc
xchg
pop
stos
sub
pop
and
jg
add
dec
push
jnp
mov
mov
loop
test
movsb
int
xlat
lret
sub
fidivl
sbb
mov
or
and
add
and
and
xchg
test
lret
ret
push
and
das
cs
sbb
adc
xor
add
in
xchg
mov
push
lods
in
push
ret
jl
sbbb
out
clc
pop
pop
sahf
ss
pop
sbb
movsl
cmp
sbb
mov
lods
xchg
push
mov
push
data16
and
scas
pop
xorb
mov
fcmovnu
or
pop
fsts
mov
adc
loope
xchg
out
jns
mov
cmp
pop
cld
inc
pop
iret
arpl
inc
jne
xor
jecxz
into
mov
cltd
in
xlat
push
cmpsl
xlat
fsubp
fnstenv
and
addl
lds
adc
sbb
repz
icebp
pop
mov
test
and
and
out
pusha
mov
test
lret
cmp
cmp
mov
mov
inc
dec
insw
mov
add
xchg
jne
push
setae
cmp
sti
loope
addb
mov
jecxz
adc
dec
sbb
xorl
mov
pop
loope
cmp
mov
jge
sbb
xchg
sub
mov
ror
sbb
mov
jle
mov
or
mov
leave
movsb
mov
dec
adc
call
adc
mov
push
fidivl
cmp
call
js
fisubrl
mov
enter
or
mov
push
movsb
mov
rorb
repz
dec
rcr
aam
sbb
ror
dec
flds
lds
inc
lret
jp
add
sub
and
ljmp
jl
lahf
pop
xchg
fnsave
leave
cmpsb
sbb
clc
aam
ljmp
pop
ss
pop
daa
push
push
jl
sbb
imul
xlat
mov
scas
shlb
push
jge
adc
jl
and
movsl
mov
stos
xor
cs
xchg
jmp
jnp
movsl
scas
push
mov
pushl
push
lahf
das
dec
push
add
imul
and
jmp
mov
push
cmp
cltd
cli
dec
sub
repnz
sahf
xchg
je
pop
xor
addr16
sub
mov
test
mov
add
and
mov
leave
sub
or
lds
sahf
sub
lret
xor
fwait
into
mov
xchg
testl
adc
xchg
and
pop
jl
jae
add
xchg
lds
lods
jge
int
jns
es
sbb
cmpsl
ds
mov
sub
into
xor
cmp
call
xor
in
sbb
cmp
push
aas
inc
jno
cmpsl
push
fcoml
ljmp
adc
divl
push
lds
loop
cmp
stos
mov
xor
xchg
les
pop
xchg
aad
push
inc
aaa
icebp
ds
movsl
sbb
adc
pop
jns
jno
ret
fs
xchg
mov
pop
outsb
jge
aam
aaa
sub
pop
pop
dec
push
std
push
lret
or
arpl
out
sub
sbb
dec
pushf
nop
and
cmp
pop
enter
jne
dec
shll
pop
ljmp
outsb
popf
movsb
ret
lahf
or
fsub
inc
dec
mov
mov
xchg
cmp
bound
pushf
lds
jle
mov
add
mov
xor
xchg
fisubrl
iret
dec
sub
jb
adc
aam
int3
xchg
jl
fwait
in
xor
sahf
decl
negb
aad
or
dec
test
fsts
ret
test
lods
andl
leave
scas
rcrl
std
pop
movntps
hlt
cmpsb
insl
adc
xchg
and
lea
lods
sub
sbb
es
lcall
xchg
jg
pop
xor
mov
aad
xchg
xor
imul
jne
icebp
mov
shrb
sti
inc
cmp
mov
loopne
or
pop
shrb
push
ret
pop
cmp
push
loopne
ret
mov
add
mov
xor
mov
test
mov
pop
mov
imul
jg
jns
in
push
mov
push
dec
mov
mov
cs
xchg
int
les
push
shrl
adc
stos
popa
out
loope
pop
in
repz
adc
push
and
sbb
jle
mov
sbb
and
fs
cmp
sbb
pop
mov
dec
js
dec
filds
push
pop
push
mov
and
sbb
sub
aam
cmc
out
mov
out
sub
out
mov
sub
lea
flds
adc
aam
insl
dec
xchg
icebp
add
fisttps
pusha
cwtl
or
inc
icebp
cmp
cmp
inc
add
or
sbb
loope
or
sbb
xchg
mov
adc
add
outsb
popf
addr16
ror
sub
push
inc
xor
cmp
and
jmp
sahf
and
pop
jne
in
jecxz
addb
push
jnp
sub
dec
mov
add
repnz
adc
sub
jg
lock
and
out
or
sbb
out
jb
dec
test
arpl
cltd
xchg
inc
mov
jmp
out
dec
imul
lods
push
idivl
xor
lret
push
loopne
jl
lods
mov
fbld
fstl
iret
out
cmp
leave
jno
not
jae
imulb
sub
in
call
xchg
inc
pop
aad
and
xchg
sub
sbb
andl
fisttpll
cmp
pop
lods
adc
mov
mov
fwait
inc
les
cmp
jae,pn
xchg
xchg
dec
push
nopl
sti
leave
sbbb
sub
sub
mov
push
leave
and
stos
xor
sub
xchg
sub
fsts
ret
lret
insl
clc
roll
inc
jno
jp
push
and
adc
dec
fnsave
xchg
clc
stc
add
clc
subl
mov
mov
lret
cmp
inc
aas
sbb
mov
push
rcll
and
lret
add
dec
sub
pop
subl
ficompl
or
lods
insl
outsb
pop
jno
mov
sahf
fisubrl
bswap
and
or
std
in
ljmp
sbb
mov
sub
push
mov
xlat
jecxz
push
xchg
les
loop
pusha
push
lahf
dec
push
mov
inc
jl
pop
out
ljmp
dec
ficoms
lcall
jg
or
sub
add
xor
sub
adc
xchg
cmp
cmpsl
mov
add
pushf
ret
jp
cs
pop
jno
loopne
dec
fdivrl
jmp
popl
jg
push
jne
outsl
pop
out
vpmadcsswd
sub
push
fisubs
pop
mov
sub
out
dec
rorb
push
mov
test
pop
loop
push
movsl
xchg
inc
dec
jmp
mov
push
xor
dec
neg
jae
aaa
jg
jb
mov
icebp
shll
cmpsb
lods
loopne
jns
les
std
rcr
sub
or
repz
pop
sahf
stos
lahf
iret
mov
mov
dec
in
jbe
aaa
dec
xor
test
mov
out
mov
repnz
add
aad
push
add
cld
mov
xchg
clc
xor
jge
push
mulb
add
xchg
sbb
cmc
out
cmpsb
outsb
xor
sbb
imul
bound
repz
mov
cmp
std
xor
test
addl
push
test
aad
mov
push
cmp
lea
and
cmp
pop
aad
mov
jbe
lods
add
loop
and
gs
or
loope
rcll
mov
push
test
lcall
sbb
add
gs
popa
test
ret
insb
xchg
jp
out
int
out
lret
das
lret
cmp
jnp
ds
pusha
or
cmp
daa
imul
dec
enter
inc
js
packuswb
dec
mov
fwait
xchg
xchg
push
shll
and
adc
fucomi
sbb
jmp
je
adc
xchg
adc
scas
test
ret
add
xorl
sbb
filds
out
in
push
icebp
cmpsl
cmp
mov
daa
addr16
mov
and
mov
nop
pop
jecxz,pn
xchg
scas
push
out
bound
and
div
or
cwtl
lods
in
cmc
mov
cmpsl
add
pop
imul
push
sub
and
cmp
push
fcomp
ret
or
inc
mov
lock
outsb
data16
jno
push
movsl
adc
btr
push
mov
sub
inc
clc
mov
mov
mov
pop
mov
xchg
inc
mov
loop
lock
lea
and
xchg
mov
add
stc
fsubs
pop
daa
mov
sub
add
and
test
ja
xor
xor
and
test
aam
es
lds
jae
adc
loope
mov
nop
pop
xor
rcll
dec
inc
pop
xchg
push
jmp
adc
test
in
mov
movsb
ds
add
imul
add
rolb
push
jb
or
push
pop
dec
fimuls
and
xchg
adc
lods
out
loope
jmp
fwait
movsb
stos
dec
dec
insb
icebp
push
xchg
add
sbb
xchg
jnp
in
sti
push
fadd
jl
xchg
fsubl
adc
dec
push
jle
sbb
lock
and
sub
test
stos
in
xchg
dec
movsl
mov
cmp
xor
imul
into
sbb
and
loope
pop
int3
push
add
pushf
xchg
and
out
lret
mov
rcrl
adc
test
cwtl
aas
jl
aad
and
js
cld
ret
or
lret
jnp
jno
mov
add
cmp
lahf
inc
inc
in
inc
xor
adc
dec
into
je
push
test
loop
stos
scas
xor
mov
lea
xchg
rsm
mov
jbe
mov
xchg
add
rclb
shr
or
loop
xor
ret
cwtl
js
adc
sbb
mov
cmp
push
sbb
lret
int
ret
or
dec
into
daa
cmpb
dec
push
mov
mov
cwtl
ret
cmpsl
dec
scas
ret
jno
add
inc
enter
sub
fistl
fists
jns
cmc
cs
mov
inc
add
xchg
or
xchg
pop
sbb
mov
inc
scas
stos
ja
add
or
sti
mov
xchg
jno
or
inc
xchg
cmpsl
sahf
push
fisubs
cwtl
push
cmp
and
out
popa
sbb
and
cmc
dec
cli
pop
pop
iret
lods
idivb
out
pop
aad
and
cmp
shl
aam
je
test
mov
mov
mov
rcr
mov
jb
and
xchg
mov
mov
das
or
addr16
cmp
mov
and
sbb
movsb
and
adc
fidivrs
add
or
push
pop
cltd
ja
adc
xor
lretw
stos
jg
sbb
je
cltd
sub
cmpsl
stc
dec
ja
inc
adc
popa
outsl
out
cmp
es
mov
cmp
cmpsl
add
aaa
push
jae
cmpsb
call
inc
pop
shrb
pop
pop
mov
out
iret
xor
in
dec
sub
xor
lcall
decb
mov
add
xchg
fidivs
sub
xor
mov
je
call
hlt
dec
jp
xchg
loopne
bound
mov
adc
mov
es
lea
inc
jle
imul
pop
les
clc
sub
jecxz
push
jnp
sarl
test
xor
push
add
fidivrs
test
std
sbb
sets
push
loopne
les
push
iret
xchg
mov
aaa
xchg
jg
push
jae
mov
cmpb
inc
orl
sbb
ret
in
push
sbb
xchg
or
lahf
fstps
orb
jbe
test
cmp
add
xor
cwtl
pop
sub
push
or
mov
cltd
jbe
stos
popa
jne
scas
pop
out
aam
adc
fs
pop
sbb
cs
hlt
mov
lret
pop
loopne
push
sbb
fidivrs
mov
pop
push
xchg
jmp
xor
icebp
into
xchg
rolb
loopne
pop
add
sbb
ljmp
cmp
sbb
call
aam
ds
sbb
or
sarl
or
bound
jns
jns
push
and
mov
mov
out
cmp
cmp
push
test
jg
push
or
clc
mov
sub
jle
ds
inc
and
sarb
mov
imul
lret
enter
sub
sub
push
notb
pop
mov
leave
into
mov
mov
mov
cltd
ja
mov
and
loope
and
or
hlt
jge
mov
push
mov
add
mov
add
imul
pushf
xor
js
cmp
mov
add
ss
or
cmpsl
mov
cmpb
pop
xlat
insl
mov
enter
stos
ret
xor
lret
mov
out
imul
xchg
arpl
bound
test
adc
in
mov
mov
push
push
xor
call
add
adc
das
arpl
sub
add
inc
out
sub
adc
add
scas
ljmp
int3
or
mov
inc
fildl
test
insb
dec
push
call
aam
bound
and
movsl
jno
pextrw
mov
int
lock
fs
hlt
mov
inc
aaa
xchg
xor
ds
clc
test
jmp
dec
fwait
adc
rcr
std
sarl
pop
ljmp
cli
xchg
inc
xor
fwait
and
sub
add
shlb
mov
es
jle
jbe
enter
js
faddl
jmp
cmp
out
dec
push
cmp
aam
jbe
imul
movsb
mov
int3
ds
mov
sti
fwait
shll
ds
sub
rorl
sbbb
mov
dec
lret
xor
mov
lods
rcr
pushl
mov
aad
popf
lret
and
or
xchg
aaa
xor
ljmp
aad
fwait
xchg
jb
js
push
aam
pop
jbe
aas
scas
outsl
ret
push
sbb
inc
add
mov
push
sbb
lea
cmc
dec
sahf
ret
imul
mov
fstl
andl
inc
sbb
cmpb
or
test
dec
mov
xor
mov
push
dec
xor
push
xchg
xorb
stos
inc
mov
popa
jl
and
mov
cmp
outsl
inc
fwait
and
call
movaps
aam
inc
mov
pop
push
repz
pop
xlat
stos
or
ds
mov
xchg
das
xor
call
cwtl
stc
mov
dec
add
mov
add
sarb
and
lret
insl
mov
sbb
pop
jle
jle
mov
xor
cld
std
outsl
mov
dec
hlt
ds
ret
in
daa
loope
jle
fcmovnbe
stos
aas
push
push
dec
xorl
or
fisttpl
lock
mov
and
int3
outsl
cmp
lcall
pop
pop
mov
int3
mov
sub
cmp
out
mov
jnp
cmp
in
jge
addr16
popa
notl
mov
xor
lret
or
pushf
loop
xor
stc
in
add
inc
push
or
or
fistpll
jno
movsb
dec
ss
clc
jg
mov
mov
cmp
dec
inc
jl
cli
or
dec
mov
lret
jns
fcomip
lret
mov
jecxz
xchg
cmpb
xchg
notl
sarb
dec
imul
cld
mov
add
outsb
mov
fildll
addr16
inc
mov
bsr
leave
push
pop
inc
imul
mov
leave
mov
movsb
jne
or
xchg
jle
inc
sahf
jo
cmpsb
fisttpl
lea
adc
sarb
pop
fmuls
sbb
lcall
into
clc
cld
dec
inc
mov
test
sbb
sbb
sub
push
iret
dec
int3
testl
pop
xchg
out
xor
jae
icebp
les
pop
gs
addr16
mov
in
imulb
jmp
adc
push
out
pushf
int
push
push
insl
sub
and
js
pop
and
jg
ljmp
pop
inc
mov
add
jnp
dec
xchg
repz
cltd
add
push
dec
out
mov
sbb
pop
push
cmpsl
mov
mov
cld
or
ds
decb
sbb
test
test
into
outsb
sbb
add
andl
xlat
iret
or
jnp
add
cmp
scas
jp
fwait
aas
sbb
iret
mov
fistpl
ror
dec
sub
pop
cmc
jbe
mov
and
mov
mov
scas
hlt
out
xor
push
lock
stos
scas
sbb
pusha
int
cmp
lahf
movsl
sbb
sar
mov
mov
into
pop
into
incb
xchg
iret
dec
push
or
mov
cmpsb
pop
imul
cmpl
out
idivb
insb
jnp
push
mov
dec
ret
mov
out
lcall
jno
fdivs
mov
pusha
gs
mov
sub
sbb
fstpt
out
sbb
dec
stos
negl
rdpmc
rol
jo
out
fbstp
cltd
hlt
shl
scas
jnp
out
push
add
sarb
or
cli
mov
xor
cli
daa
sbb
push
cs
idivb
sub
notl
cltd
fstpl
test
fsub
mov
lahf
cmp
cmp
or
mov
hlt
mov
xchg
add
cltd
jge
push
add
add
insb
lcall
mov
stos
out
xor
cmpb
popf
xlat
hlt
roll
xchg
pop
lahf
or
lods
pop
in
fcmovnbe
mov
rorl
sahf
xchg
pop
cmpsb
push
jl
jp
jbe
jle
mov
rorl
js
push
stc
cmpb
fwait
and
inc
and
imul
adc
test
and
mov
test
out
pop
lds
inc
push
loop
and
test
loopne
insl
daa
test
js
imull
movb
xor
test
sti
xchg
jmp
jmp
push
jae
aaa
push
mov
inc
push
cli
fildll
mov
adc
test
push
popa
pop
xor
xchg
and
pushf
sub
imul
jae
mov
pop
fcmovnb
or
xor
stos
out
inc
popa
xchg
cwtl
stos
leave
js
cmp
mov
divl
cmp
cmp
data16
ljmp
aas
or
jl
mov
and
ret
push
call
sbb
bound
shrb
into
cwtl
xorb
and
fidivrs
mov
test
sar
dec
dec
xor
mov
mov
or
fcmovbe
push
jge
fcompl
addb
jg
adc
xor
mov
adc
jge
mov
imul
loopne
mov
mov
insb
sbb
inc
xor
fimuls
rorl
xchg
pop
pop
inc
aad
rclb
inc
xchg
inc
icebp
jl
pop
inc
test
mov
jle
lea
fnstcw
mov
testb
imul
fildl
pop
pop
sahf
or
shrl
les
les
jge
and
cmpsl
or
or
cwtl
and
dec
dec
mov
imul
jns
inc
out
test
out
in
sbb
mov
adc
inc
sbb
call
mov
mov
lcall
jnp
imul
mov
mov
lret
or
and
mov
mov
mov
std
mov
stos
push
push
xor
and
jae
adcb
mov
loopnew
adc
rcr
outsb
pop
sbb
cmc
ljmp
and
jbe
and
pop
pop
sti
nop
jmp
jb
xchg
into
xchg
jnp
cmpl
pop
and
dec
fcompl
popl
pop
and
sub
repz
jns
sub
xchg
stos
mov
movsl
push
jb
fidivrs
iret
data16
bnd
inc
mov
test
test
fs
dec
xchg
imul
xor
cmp
fistl
cmp
js
inc
xchg
add
ret
cmp
cmpsl
cmp
sbb
adc
shrb
fwait
xor
lcall
inc
xorb
or
shl
scas
orb
leave
ret
cmc
cmpsb
mov
push
pushf
ret
dec
cld
sbb
fimuls
cli
into
mov
loopne
pusha
scas
out
mov
sbb
incl
mov
xor
sahf
xor
daa
sbb
xchg
mov
push
adc
mov
movlhps
add
lods
mov
and
cld
dec
cld
cmp
jge
nop
mov
mov
sbb
addr16
int
mov
je
pop
jno
insl
lds
in
pusha
mov
xor
jmp
and
cmp
ljmp
mov
rclb
add
adc
fildl
les
jae
mov
jno
pushf
lock
and
iret
add
mov
icebp
pop
imul
gs
pop
mov
out
test
flds
sub
inc
adc
aad
stc
es
jmp
mov
lret
out
sbb
dec
test
sub
mov
and
inc
push
std
pop
adc
addr16
popl
data16
cltd
adc
sub
nop
add
dec
mov
ss
xchg
push
sub
mov
icebp
inc
int3
pushf
enter
cs
jbe
inc
inc
or
ljmp
out
enter
sub
push
pop
adc
or
mov
and
inc
inc
add
sahf
in
cld
nop
pushf
xchg
pop
sbb
mov
in
pop
fcmovne
sbb
dec
arpl
lock
and
mov
scas
imul
test
lret
into
sub
frstor
xlat
mov
add
fcomip
scas
ficoms
fstpl
fistpl
repnz
pop
push
ss
cwtl
rorb
leave
in
in
enter
ds
movsb
sub
push
bound
and
jg
es
ljmp
cmc
out
pusha
in
cmp
inc
jnp
fisttpll
cwtl
sbb
xor
dec
lea
jae
fimull
xchg
add
dec
push
jmp
repz
shll
mov
jnp
data16
xor
adc
nop
lods
push
out
iret
mov
outsl
mov
add
sub
jae
pop
add
lods
dec
fsts
adc
out
add
out
and
in
jb
mov
mov
popf
sbbb
add
fdivrs
and
add
pushf
sar
stc
add
test
dec
pop
push
mov
jmp
or
sbb
in
mov
gs
out
mov
jl
mov
xor
out
lods
test
popa
lcall
sbb
mov
ficoms
sti
xchg
ret
push
lods
jno
test
push
push
add
cmp
push
pop
out
mov
lods
bound
or
rcrl
in
and
popf
dec
xchg
adc
adcb
es
push
popf
xor
insl
psrad
lret
jns
sub
xor
cmp
xor
cmp
popa
jg
cmpb
sbb
cwtl
mov
sub
jg
and
mov
adc
and
rcr
rcll
outsl
xor
mov
jne
sahf
outsl
lock
imul
fwait
mov
push
xor
sub
add
mov
cs
insb
or
jg
xorb
les
aaa
jbe
pop
pop
xchg
xlat
pop
dec
jg
test
insb
mov
vpaddb
in
cmp
out
push
sbb
push
xchg
pusha
mov
dec
fidivl
xchg
ja
jae
lcall
jne
shrb
push
scas
dec
add
cwtl
and
inc
mov
mov
and
sub
gs
cwtl
lock
lods
dec
add
insb
popa
pushf
dec
movsb
bound
pop
push
mov
xchg
ss
out
inc
out
bnd
je
dec
es
xor
test
frstor
sahf
inc
sarl
out
movsl
icebp
fsubl
iret
lret
xchg
mov
jp
dec
mov
cmp
ficoml
xchg
cmp
adc
orl
int3
and
mov
sub
add
or
lock
pop
lahf
lea
rorb
movsb
inc
mov
ljmp
mov
push
sub
pop
push
dec
and
jp
test
in
push
sahf
stos
inc
jg
cmp
fisubl
sbb
scas
outsl
jnp
adc
fadds
sub
loopne
cli
xchg
enter
aad
int
mov
xor
mov
inc
pusha
mov
mov
lods
int3
addr16
subb
adc
arpl
mov
bound
adc
xor
mov
adc
adc
pop
mov
adc
sti
adcl
inc
outsl
sbb
dec
cmp
insl
addl
pop
aad
pop
sub
push
mov
ret
mov
out
sbb
mov
xchg
mov
fsubr
mov
repz
in
popa
xchg
dec
push
aad
dec
les
pop
inc
mov
inc
loopne
cmpsl
cmpsl
test
arpl
mov
cmp
pushl
or
dec
push
cmpsb
outsl
andb
xor
cltd
sub
data16
fidivrl
rol
movsb
loop
mov
repnz
sbb
fadds
and
lahf
push
test
popf
cwtl
je
xor
push
mov
loope
test
xor
jae
into
nop
pop
movsl
mov
mov
lea
push
lds
leave
ljmp
std
push
pusha
sub
xchg
mov
cmc
ffree
xor
shr
mov
xchg
sbb
sub
push
or
lds
cmpsb
push
add
jmp
faddl
lea
and
and
or
mov
dec
into
je
outsb
test
jb
and
leave
push
xor
xor
mov
push
aam
and
pop
stc
lea
dec
mov
test
pop
adc
ds
lods
pop
mov
imul
faddl
fisubs
enter
sbb
loop
in
leave
add
rcrb
sub
fsubs
stos
cmp
ja
jmp
mov
repz
jecxz
repz
xor
add
jns
jno
gs
jo
xchg
mov
pop
push
and
jg
hlt
and
into
xchg
icebp
add
xor
and
jge
push
fmull
or
and
or
js
xlat
xchg
loop
inc
orb
and
gs
cmp
sbb
jno
in
pop
dec
inc
dec
push
movsl
fisttps
adc
ljmp
daa
addb
imul
pop
xor
mov
lcall
pop
imul
ret
jle
pop
push
into
movsl
mov
dec
insl
ja
jnp
std
inc
aaa
add
out
or
adc
mov
xor
xor
dec
and
bound
dec
in
jmp
cmp
imul
push
sbb
push
xor
pop
sbb
mov
cltd
sarl
dec
lods
stos
imul
mov
push
adc
mov
inc
mov
scas
je
jb
cmp
jne
push
mov
or
int
cltd
jp
pushf
std
aam
fdivp
sbbl
mov
rorb
jecxz
lcall
fsubl
and
addr16
sub
stc
xor
pop
rorb
outsl
fmuls
and
shl
xor
loop
xor
inc
pop
or
lods
cmp
sbb
mov
xor
pushl
dec
shrb
cli
push
dec
mov
mov
push
cmp
inc
int
emms
insb
mov
mov
cs
push
cltd
mov
jmp
repz
fs
ss
xchg
in
cmp
sbb
ret
lcall
inc
adc
cmpsl
push
or
cmp
cmp
sbb
pop
repz
movsl
scas
gs
push
add
mov
lret
fbld
cmp
pop
or
mov
mov
sub
test
mov
push
mov
jne
aam
jge
pop
jno
sar
ja
lock
pop
rolb
mov
outsb
or
in
push
negl
bound
xchg
push
ljmp
pop
out
addr16
jbe
adc
mov
stos
jecxz
push
mov
or
imul
push
inc
lea
aas
pop
cmp
dec
mov
or
xchg
and
jle
add
movsl
mov
dec
sub
pop
push
pop
daa
scas
das
in
inc
mov
dec
std
xchg
imul
sub
pop
jecxz
xchg
cltd
andb
add
xchg
mov
aas
ja
leave
out
mov
push
push
push
addb
rclb
sbb
movsl
or
test
js
mov
stos
mov
insb
cmp
push
mov
sub
hlt
add
inc
fimull
lahf
jne
mov
inc
jmp
ror
xchg
and
int3
sbb
mull
movsl
out
cmp
insl
mov
ret
repz
aam
sarb
stos
sbb
nop
ret
dec
and
fcompl
cwtl
gs
gs
insl
cmp
std
dec
shlb
jl
mov
dec
call
int3
and
pushf
imull
dec
divb
repz
nop
push
xchg
test
sub
lret
scas
inc
in
push
insl
xor
mov
shr
mov
stos
cmpb
rclb
addr16
cmp
movsb
lret
dec
dec
adc
pusha
idivl
cmpsl
xlat
pusha
scas
ret
jns
jge
es
rorb
lcall
clc
xchg
imul
inc
mov
or
rcrb
dec
rcrb
or
das
shll
out
dec
les
adc
dec
repz
sbb
fcompl
mov
mov
in
and
dec
pushf
and
and
popf
clc
pop
mov
int3
bound
jno
jae
mov
inc
mov
lods
push
scas
push
jmp
jne
push
in
inc
mov
inc
xor
push
cmp
pop
fcoms
xor
jae
popf
cmpsl
mov
cld
jge
adcl
fs
xor
shll
jp
cmp
or
pop
bound
push
enter
shlb
adc
sbb
mov
jle
inc
sti
mov
mov
ja
mov
out
sbb
inc
jbe
cwtl
dec
fpatan
hlt
mov
aaa
and
lds
fs
jl
mov
xchg
sub
and
popf
testb
out
push
pop
insb
bound
dec
cmpsl
testb
gs
jl
repz
sub
add
xlat
into
testb
mov
add
lahf
or
loopne
mov
jbe
or
ljmp
xor
jge
faddl
push
dec
and
inc
cwtl
jg
in
mov
ret
ja
clc
sbb
push
fnstsw
add
jne
and
testb
pop
imul
testl
out
ret
scas
xchg
subb
ficomps
lds
inc
push
call
xor
ds
nop
and
mov
shlb
sti
cltd
mov
in
mov
mov
adc
push
mov
xchg
mov
in
mov
loop
hlt
lds
test
adc
dec
ret
sahf
mov
test
sbb
jg
lar
movsl
jge
fistpll
into
sub
adc
arpl
int3
push
rolb
in
aad
mov
in
repnz
test
rorl
mov
data16
adc
movsl
sbb
arpl
lahf
data16
sub
sbb
push
pop
cmpsl
insl
cmp
into
insl
fs
lods
xchg
pop
mov
push
xchg
push
cmp
adc
in
sarl
pop
sti
jbe
dec
push
fnstcw
adc
cltd
ds
repnz
sbb
jbe
mov
and
sbb
xchg
mov
ret
or
mov
fistps
xorl
jmp
in
and
push
mov
imul
xchg
div
shl
xor
popf
mov
or
xor
pushf
and
fmuls
push
lods
push
adc
insl
and
jge
rcrl
in
push
push
xchg
iret
mov
pop
jl
mov
das
sbb
sbb
sbb
xor
test
mov
lcall
das
sbb
sbb
rcrb
out
lods
cmp
inc
mov
inc
shl
xchg
mov
xchg
cld
pushf
mov
lock
icebp
cmp
iret
insl
mov
mov
mov
add
out
dec
outsb
into
mov
push
cmp
sarl
push
daa
lea
mov
sub
pop
test
int
and
xchg
dec
xchg
data16
aaa
jae
aaa
popf
adc
xchg
jbe
mov
jecxz
push
push
inc
push
inc
fstpl
mov
mov
add
pop
into
adc
loop
pusha
push
adcb
jns
sub
or
repnz
jg
sub
repnz
popf
and
dec
mov
jno
lahf
repnz
ds
cmp
imul
mov
sbb
sbb
dec
das
jne
xchg
jmp
jae
sbb
pop
xlat
addb
call
in
push
stos
int3
mov
test
dec
cmpsb
lahf
mov
mov
aad
mov
cmpl
fstpt
outsb
ret
inc
outsb
push
imul
shl
sub
repz
sub
aas
shr
nop
addb
lods
mov
jmp
aam
and
imul
jle
dec
jno
and
std
push
in
test
hlt
add
lods
ja
sub
add
xchg
gs
addr16
pushf
pop
fmuls
mov
loopne
shll
add
mov
loopne
push
mov
xor
mov
rcll
xchg
jle
add
jbe
out
xor
push
pop
push
push
sahf
mov
jmp
je
std
xchg
jle
push
sahf
mov
dec
mov
lcall
mov
jmp
lods
sbb
clc
jp
jno
adc
xor
cmp
out
pushf
mov
sti
dec
in
rorb
cmp
cmp
push
testb
lcall
out
ret
or
fwait
repz
rcrb
add
adc
xchg
jge
xchg
and
inc
sti
sarl
loopne
jne
jb
in
push
jmp
rcrl
mov
std
les
push
out
adc
and
shrl
push
dec
adc
mov
inc
mov
rcl
jecxz
xchg
es
out
xor
pop
out
xchg
jmp
shll
ljmp
scas
mov
outsl
add
cmp
test
popa
xchg
adc
mov
sbb
mov
imul
into
call
xchg
lea
dec
xor
in
dec
xorb
inc
adc
inc
shlb
arpl
scas
cmpsb
pop
mov
or
fldt
xor
test
inc
les
pop
aaa
sbb
and
jle
fs
ja
clc
xchg
repz
lock
pop
jae
lds
jno
daa
outsb
loopne
xor
cld
xchg
inc
dec
lret
test
fsubrp
hlt
sbb
cs
dec
nop
js
push
jg
xchg
shl
push
cmpsb
adc
xor
leave
sub
scas
jne
cmc
inc
mov
push
jl
test
sbbl
jg
jg
inc
push
outsl
sti
in
mov
into
or
jae
sub
fstps
popa
aaa
inc
xchg
ja
mov
iret
add
xchg
mov
add
sarl
clc
fnstsw
push
mov
aas
nop
xor
notl
jl
adc
jo
fidivrs
les
mov
sti
mov
popf
adc
rol
and
outsl
pop
int
int3
aad
lds
push
sub
scas
nop
mov
in
lds
adc
sbb
dec
mov
std
pop
jecxz
cld
add
and
icebp
iret
loope
mov
adc
sbb
push
push
sbb
ret
daa
sbb
mov
fwait
stos
fnstsw
scas
nop
dec
daa
out
sub
mov
pop
sub
xchg
mov
insl
lods
lret
ret
sahf
lds
stos
stos
loope
repnz
fstl
mov
xchg
lds
insl
inc
xor
inc
std
imulb
insb
js
mov
xchg
adc
ds
mov
js
sbb
aas
xchg
fsin
loope
pop
imul
cmpb
lea
inc
add
mov
mov
xchg
push
and
mov
sub
cmp
test
add
jp
popaw
jmp
xor
bound
shr
in
fcmovb
dec
test
ret
cmp
icebp
sub
clc
or
or
ret
push
or
dec
and
addb
pop
add
sub
shl
cmp
icebp
cli
pop
outsl
adc
mov
cmpsl
js
or
push
pushf
cmp
xchg
arpl
fucompp
and
xor
mov
pop
jecxz
xchg
rcll
mov
xlat
jecxz
xchg
sarl
pop
mov
or
mov
push
cmpsb
jmp
pop
lea
mov
mov
idiv
pop
sub
andl
mov
mov
jecxz
xchg
lock
fcompl
lea
push
xchg
or
sbb
lea
dec
mov
stos
push
das
les
inc
clc
or
inc
ds
in
aas
or
xor
push
mov
inc
mov
cmp
call
jnp
scas
mov
mov
fwait
sub
in
leave
dec
or
out
sub
xchg
sbb
or
jp
hlt
pop
cmc
out
into
pop
fdiv
imul
fcomps
add
mov
fldcw
out
and
dec
pop
adc
stc
cmpsb
adc
cmp
xchg
das
mov
xor
push
arpl
pushf
jge
mov
lret
popf
pop
xchg
sub
dec
repnz
push
stos
and
ja
lret
pop
jmp
out
push
jp
stc
inc
loopne
mov
pop
push
sub
mov
cmp
dec
push
dec
out
xor
aaa
push
daa
jg
movsl
cmp
ljmp
int3
xor
sti
popa
cmp
pusha
popf
into
addl
mov
xor
clc
pop
imul
ficoml
add
in
sub
sub
sahf
dec
sbb
fistl
cld
outsb
xchg
in
and
mov
iret
imul
stos
cmpsb
dec
shrl
and
repz
int3
ljmp
sub
mov
sub
mov
outsl
out
mov
dec
fcom
popf
je
mov
jb
popf
push
cmp
and
and
jecxz
ret
fsubl
mov
pop
mov
and
inc
mov
notb
inc
sbb
out
sbb
je
lds
or
push
lods
call
mov
mov
iret
das
jno
mov
dec
add
scas
or
and
jo
push
mov
or
shl
cmpb
fmul
xchg
nop
negl
cmp
sbb
lret
out
mov
je
scas
add
rclb
jae
cmc
ljmp
fisttps
mov
leave
jp
mov
loop
icebp
push
jmp
mov
mov
insb
fwait
ja
add
mov
cmp
push
inc
lods
aas
push
mov
pop
aad
psrad
repnz
xchg
pushf
xor
aaa
xchg
sbb
pusha
mov
cltd
mov
xor
fistl
jg
outsl
add
pop
iret
jmp
and
into
push
xor
sbb
imul
mov
jno
enter
jg
call
pop
sub
add
add
in
push
and
subb
or
mov
ret
out
cmc
orb
mov
test
lock
ds
xchg
leave
mov
pop
lret
mov
pop
push
sbb
sbb
xchg
in
out
jle
addr16
sarb
adc
fwait
cmpsl
xchg
xchg
mov
or
mov
mov
dec
pop
xor
scas
rolb
xor
inc
adc
aas
out
pop
aad
insb
push
outsb
sub
popf
iret
cmpsl
mov
pop
loope
xor
cwtl
mov
lods
sub
add
sbb
lods
and
aad
jge
mov
or
inc
sub
cld
ljmp
jecxz
mov
xchg
push
enter
mov
aaa
jecxz,pt
js
jns
jbe
push
pop
inc
mov
rcr
arpl
jnp
aaa
cmp
imul
push
or
ret
mov
pop
dec
mov
sub
mov
push
push
push
pop
test
dec
rorb
push
sbb
ret
xor
enter
mov
mov
add
jge
cmp
aas
dec
sub
push
sub
das
pop
push
dec
xor
dec
imul
and
in
or
cld
cs
rolb
mull
flds
in
ljmp
push
aas
out
push
pop
cmp
cmp
or
or
out
add
inc
or
jmp
lea
mov
xor
aaa
pusha
roll
das
sti
push
cmp
cmpsl
cli
cwtl
push
add
jo
int3
loop
or
int3
sbb
aaa
cmp
xor
out
cmpsl
or
movsl
xor
mov
push
fsubl
xor
mov
mov
les
mov
push
and
pmaddwd
sahf
or
sbb
imul
out
aam
jae
seto
cmp
inc
push
pmaddwd
popf
jbe
std
test
cmpsl
fs
dec
or
fmul
lods
ljmp
xchg
jne
call
mov
mov
or
jns
dec
into
push
mov
fists
loopne
mov
pushl
outsl
mov
out
push
sub
rcrl
daa
mov
icebp
xchg
mov
sti
cmpsb
pop
fdivrl
mov
std
lds
ret
push
orb
imul
jo
cmp
xchg
add
das
or
negl
movsb
mov
inc
cmp
inc
dec
push
or
ss
repnz
push
lock
mov
xor
jb
je
cmp
aam
mov
and
mov
sbb
lods
cwtl
sub
pop
dec
and
jge
adc
repz
aaa
mull
test
jns
inc
dec
lods
fs
int3
shll
jae
push
xbegin
iret
cli
dec
jp
or
or
dec
jecxz
sub
sub
push
outsb
cli
pop
icebp
cld
lds
xchg
and
in
push
out
das
ret
lret
repz
in
les
imul
ljmp
enter
rolb
cmpsl
xchg
jp
add
mov
cmp
lods
mov
test
adc
pop
mov
jg
shrl
mov
out
mov
ja
mov
push
or
xor
aas
loope
mov
push
mov
lock
aas
cwtl
aas
push
subb
out
pop
pop
mov
or
push
inc
packssdw
mov
outsl
lcall
cmp
push
xchg
test
xor
data16
mov
mov
sbb
mov
cmp
mov
sub
enter
xchg
cmc
inc
cmpsl
js
call
dec
jns
cwtl
outsl
push
es
js
dec
mov
inc
fwait
inc
mov
insl
add
cmpsl
std
lods
movsb
xchg
fdiv
gs
xor
sbb
pop
in
push
push
mov
fisttpll
repz
xor
pusha
lcall
adc
testb
lods
sbb
cmc
adc
lret
push
lahf
lock
nop
pop
inc
mov
fwait
add
popa
jp
mov
pop
shl
sbb
inc
xchg
jmp
lcall
sub
cmp
pop
push
clc
ljmp
or
enter
popa
sbb
dec
and
sub
lds
out
ss
notb
sar
aas
fldt
jbe
pusha
inc
mov
push
loop
inc
ret
ret
or
out
add
push
push
test
or
add
mov
fdiv
pop
push
mov
enter
int
daa
xlat
mov
xor
lds
dec
movsb
inc
lcall
scas
push
add
cmp
in
std
pop
xchg
jne
stc
xchg
ja
mov
into
sub
pop
inc
push
xor
iret
inc
dec
sub
mov
mov
pop
sahf
push
mov
mov
leave
xchg
cwtl
into
insl
out
bound
and
cld
or
add
mov
mov
sbb
dec
mov
sub
in
pushaw
fs
pop
mov
jl
frstor
pop
push
rorb
jnp
bswap
sub
in
cmp
les
adc
fildl
and
mov
sub
aad
xor
loop
dec
add
test
mov
adc
repz
cmpsl
dec
icebp
mov
sbb
lret
sbbb
mov
inc
lods
mov
test
cmp
jge
dec
arpl
push
and
sbb
sbb
lds
push
sub
pop
mov
nop
jecxz
inc
add
mov
lods
clc
sub
fucomip
test
insl
push
and
aaa
or
leave
jle
push
xchg
jae
xlat
mov
xchg
xchg
xchg
push
xchg
xchg
push
adc
movsb
add
lods
sbb
cli
push
scas
mov
pusha
cmp
xor
test
mov
imul
inc
cmp
push
mov
pop
scas
cmc
in
inc
sub
iret
push
out
in
xor
out
cmc
mull
sub
adc
mov
lcall
loope
jb
dec
mov
fdivrp
fdivs
clc
mov
pop
insb
pushf
sub
sub
xchg
enter
adc
add
sub
repnz
mov
cmp
adc
and
push
push
push
adc
push
jg
inc
loope
das
fcoml
adc
xchg
xlat
jl
hlt
sbb
jno
out
inc
fistps
cmc
pusha
adc
lahf
lea
ret
mov
fxch
inc
repz
sub
cmp
cmp
cli
decb
pop
test
loopne
sub
xor
mov
jecxz
movsb
mov
add
mov
lea
fstpl
in
jnp
mov
push
call
lods
inc
aas
sub
jecxz
fcmovnb
pop
inc
jb
mov
mov
cld
outsl
sbb
xchg
dec
mov
mov
jae
push
xchg
jns
inc
push
and
hlt
ds
mov
lods
mov
cli
out
pop
lfs
shll
insl
sub
mov
fstl
push
xchg
fmul
dec
mov
push
stc
push
addr16
inc
xchg
cmpsl
sub
shrb
int
cmc
and
jb
fs
push
nop
jne
cmpsb
adc
icebp
mov
mov
cmp
push
shrl
mov
xchg
add
out
xor
lea
mov
pop
mov
or
add
sar
sti
scas
mov
cmp
xor
add
and
sti
sub
imul
mov
mov
mov
mov
negb
xchg
push
fdivrl
sarb
decb
inc
mulb
push
mov
jge
cmpsl
push
adc
jns
pop
fmulp
fucomp
xor
in
lods
cwtl
xor
mov
inc
jnp
sbb
iret
mov
xorl
in
shll
push
lcall
lock
sub
dec
dec
fiaddl
jb
hlt
mov
lods
clc
cmpsb
std
les
out
in
pop
out
int
pop
jmp
in
scas
out
fldenv
sarb
adc
xor
leave
lahf
dec
sub
ss
jno
out
dec
fmull
add
or
and
cmpsl
cmpsb
and
jb
push
mov
test
or
ret
cmp
jle,pn
loop
lods
jge
imul
faddp
mov
jo
ds
push
into
out
out
mov
pusha
xchg
xor
xchg
push
cmp
insl
out
popa
in
mov
push
repz
or
pop
into
into
xor
sub
xchg
sbb
test
xchg
jge
out
add
push
and
in
lcall
ret
sarl
ror
jge
pop
add
insl
movsl
loopne
mov
add
jne
sbb
inc
jns
fbstp
xchg
daa
cmp
add
int
sbb
outsb
dec
roll
jo
pop
and
insl
add
pop
arpl
push
dec
shlb
and
addr16
dec
pop
xor
jne
in
sbb
mov
das
xchg
js
in
into
into
scas
imul
sbb
test
sbb
mov
out
xor
push
cmc
mov
add
int
sub
scas
out
sbb
xchg
in
mov
fmull
cmp
sti
add
fcompl
sub
stos
stos
insb
dec
mov
cmp
jns
jecxz
cwtl
push
adc
je
xor
sbb
in
inc
std
scas
and
xor
out
int
pop
clc
dec
mov
add
xchg
add
vpslld
pop
inc
sub
sub
push
jmp
insl
lock
or
or
sub
jp
inc
iret
test
xchg
or
fwait
cmp
out
or
adc
test
lds
xchg
loope
pop
inc
imul
sbb
sub
lods
push
mov
imul
pop
push
repz
jge
inc
and
popa
jne
adc
add
lret
jle
repnz
xchg
jecxz
call
push
insl
pop
mov
pop
dec
push
mov
ss
mov
xor
mov
je,pt
pop
roll
loop
push
pop
or
mov
lahf
pusha
aas
mov
sti
fcoml
mov
dec
dec
repz
push
lret
call
xchg
dec
sub
and
dec
dec
clc
pop
mov
add
daa
orl
mov
in
dec
negb
mov
dec
call
andb
cmp
negb
push
dec
mov
xchg
mov
cmp
mov
dec
mov
xchg
pop
or
jb
xchg
sbb
sar
sbb
aad
xchg
in
mov
gs
pusha
repnz
xchg
add
mov
mov
xchg
mov
add
out
ss
cld
jge
or
pusha
data16
jl
xlat
adc
push
adc
push
out
cmc
jp
cmp
inc
jge
push
int
xlat
pop
mov
mov
repz
xchg
std
push
clc
mov
sub
aad
cmp
mov
push
jg
clc
pop
frstor
cs
movsl
add
push
mov
xor
push
add
jno
or
add
adc
inc
fisubrs
adc
xchg
int
cli
sahf
sarb
pop
add
test
push
jne
mov
cltd
or
jp
cmpsb
xchg
mov
fst
js
jo
mov
lods
scas
das
mov
fstps
xor
mov
and
sbb
out
dec
inc
test
das
addr16
sub
jge
pusha
xchg
test
pusha
and
mov
xchg
sub
daa
push
add
and
or
dec
xor
xor
sub
loop
fildl
ret
lock
jno
inc
xchg
adc
in
mov
push
insb
add
push
enter
inc
xor
fcompl
jns
xor
pop
sbb
nop
mov
test
cltd
adc
in
mov
ljmp
dec
mov
jle
aam
push
popf
mov
stc
and
dec
adc
insb
mov
orb
mov
inc
in
xchg
imul
mov
xor
jb
sub
xchg
movsl
insl
jg
sub
lcall
lret
add
and
adc
cmpsl
gs
in
jecxz
pop
in
lret
add
aad
mov
mov
test
and
xchg
ds
sahf
int3
cmovbe
movsb
mov
push
gs
insb
out
push
xor
popa
rcrb
aam
roll
mov
shl
out
mov
fs
scas
lcall
mov
fimull
pop
std
xchg
push
fldcw
aad
js
in
gs
xchg
in
iret
jmp
pusha
jo
add
out
cmp
cmpsb
cmp
movl
std
inc
push
jg
test
xlat
xchg
fimuls
repz
mov
lret
xor
lret
iret
adcb
popf
ljmp
mov
mov
je
xchg
test
fildl
jge
push
cs
mov
inc
test
jle
pop
inc
scas
and
mov
jecxz
inc
out
lret
jbe
ja
inc
rorb
test
cld
mov
sti
das
shll
jecxz
sub
icebp
cmp
mov
inc
fists
add
fildl
xchg
popf
repnz
gs
xor
cs
cmpsb
jnp
ss
cmp
push
push
jbe
jp
leave
fidivl
pop
sarb
pop
xchg
scas
push
push
iret
push
rep
push
lea
imul
xchg
fs
in
cmp
or
pop
pop
inc
add
pushf
pop
pop
xchg
and
xor
in
jle
adc
cmp
xchg
adc
out
xchg
push
ja
adc
xor
sub
xchg
push
ds
fistpl
fs
hlt
aas
fistl
xchg
xchg
jbe
add
lods
pop
cmp
ss
iret
in
add
sbb
inc
mov
adc
mov
mov
xchg
lcall
std
mov
and
jnp
cmp
push
push
enter
jo
hlt
mov
add
push
insl
rclb
mov
mov
dec
std
adc
int3
add
fxch
sbb
pop
inc
std
push
and
adc
repnz
notl
or
inc
xchg
sar
mov
daa
or
outsb
ffree
mov
sbb
xor
daa
mov
inc
adc
lret
in
sbb
push
cwtl
dec
cmp
xchg
in
mov
loop
mov
xchg
sub
psubusb
xchg
imul
push
pop
lret
and
and
push
mov
pop
rolb
inc
jno
std
push
push
adc
add
addr16
push
mov
cltd
icebp
adc
rorb
movsb
jmp
add
add
jb
and
aaa
mov
and
cld
sub
imul
mov
mov
push
and
in
cs
sbb
and
cmp
inc
cmp
add
dec
mulb
les
lods
jbe
inc
in
mov
fsub
js
mov
imulb
push
adc
les
lret
adc
xchg
or
test
mov
out
fmull
add
pop
dec
push
dec
cli
pop
sub
test
mov
mov
cmp
pushf
fldcw
mov
sbb
das
and
xchg
lret
aam
mov
rol
push
data16
sub
sbbl
in
addr16
ljmp
xchg
sub
dec
ljmp
or
xlat
cmc
das
jno
jl
fistpll
out
inc
push
dec
loope
add
xor
xor
aas
cmpsb
or
icebp
lret
loop
mov
push
cmp
in
push
jnp
dec
in
xchg
dec
test
inc
push
popf
mov
jp
inc
lods
xchg
scas
or
inc
sbb
xor
ret
push
in
lods
outsl
insb
xchg
loop
cmpsl
and
mov
clc
inc
inc
pushf
scas
lcall
xchg
ds
scas
push
in
cmp
gs
lret
jl
icebp
xor
fstp
jge
call
xchg
mov
out
inc
int3
insb
ds
adc
arpl
ljmp
mov
push
daa
scas
push
enter
cmpsl
loop
cmc
xor
mov
notl
push
out
dec
inc
xchg
mov
and
or
dec
and
and
adc
call
sub
sub
fdivl
enter
andb
mov
and
js
outsb
pop
leave
lea
pop
xchg
pop
jle
or
sbb
aad
pushl
shlb
incl
lret
stos
sbb
xchg
cmp
mov
adc
js
push
repnz
cmp
les
inc
adc
popf
sub
fsts
cli
jo
setns
jmp
stos
testb
mov
mov
xchg
adc
mov
ljmp
xor
sbb
cld
lret
sub
data16
aam
push
or
push
mov
mov
out
sub
loope
adc
je
insl
fildll
jmp
fisttps
adc
dec
cli
dec
rorb
icebp
cmp
scas
out
xor
aad
popa
fcmovbe
out
out
ror
push
scas
imul
pop
mov
add
test
loop
xchg
jle
fbstp
lahf
mov
lahf
push
mov
rcll
pop
and
pop
sbb
push
cld
aad
xchg
in
jb
roll
insb
scas
lea
xchg
leave
lahf
sub
and
sbb
inc
aaa
pop
mov
adc
xor
movsl
outsl
test
inc
and
sub
sbb
jge
bound
pop
mov
xor
mov
add
insl
cwtl
mov
dec
es
mov
movl
fsubs
ret
pop
outsb
lea
popf
inc
fs
lods
repz
and
leave
dec
fidivrl
shrl
dec
mov
add
ljmp
jmp
mov
or
bound
adc
mov
sbb
out
mov
or
js
mov
add
out
inc
push
addr16
movsl
adc
into
stc
cmp
ljmp
mov
sub
lahf
aaa
movsl
fistps
pop
in
dec
and
or
ret
adc
xchg
out
or
dec
aam
cmp
cwtl
ret
icebp
pop
and
mov
push
sbb
sbbl
push
fwait
inc
or
xchg
out
mov
dec
pop
pop
inc
in
hlt
pop
js
mov
xchg
cltd
add
fs
arpl
mov
mov
imul
movsl
inc
dec
sub
inc
mov
scas
jmp
mov
adc
mov
aas
test
fwait
out
pusha
je
add
pop
pop
adc
mov
mov
fadd
dec
stos
fstpl
test
push
aad
or
add
js
add
test
pop
pusha
les
mov
pop
ucomiss
data16
jl
rorl
add
xor
hlt
add
xchg
or
cs
add
ss
jp
ja
insl
lods
jl
push
std
xchg
jb
leave
aas
xor
lods
and
std
out
jnp
jo
pop
cmp
mov
subl
lock
fsubs
loop
insl
loopne
popa
lret
dec
pop
mov
into
mov
push
mov
add
jle
mov
push
jno
test
and
out
jnp
test
and
and
push
mov
imul
lahf
mov
cmc
mov
cltd
fisubrl
ficoml
frstor
shrl
mov
xchg
scas
imul
pop
pop
sub
add
dec
outsl
movsb
sub
mov
outsl
js
xlat
fbstp
and
mov
aaa
in
and
repz
pop
pop
movsl
push
sbb
roll
push
sbb
pop
jno
inc
lock
arpl
rcrb
dec
jb
in
xchg
add
fadds
xor
mov
sbb
ss
xlat
xor
lahf
outsl
dec
mov
add
xchg
push
ret
cmp
insb
stos
push
mov
xor
add
lods
lods
jp
loopne,pn
test
daa
icebp
aad
cmpsl
dec
adc
flds
sub
push
imul
mov
ret
out
pop
dec
adc
fildl
out
shlb
cld
dec
je
jnp
clc
negb
cli
jns
push
jmp
in
push
push
shrb
add
inc
jl
fcmovne
inc
dec
pop
jo
rorl
add
mov
insl
inc
push
push
fnstsw
outsb
fsub
sbb
mov
xchg
ret
pop
push
pop
dec
fadds
shlb
dec
adc
cmc
int3
jp
mov
add
movsl
or
fs
nop
jb
adcb
or
inc
jbe
and
popf
xlat
cli
mov
test
mov
fwait
mov
lret
inc
mov
call
lock
popa
mov
lods
jg
pop
and
pop
mulb
inc
les
test
dec
add
test
jo
cmpsb
jae
dec
mov
mov
data16
jnp
jbe
adc
xchg
push
int
scas
arpl
adc
outsl
mov
cltd
aaa
adc
and
fistps
jecxz
hlt
pusha
sbbl
mov
fwait
jg
arpl
sub
or
xchg
fistpl
pop
test
add
pop
xor
sub
cwtl
jbe
xchg
incl
cwtl
mov
xor
adc
push
xlat
mov
cli
cltd
sub
lods
mov
cmp
bound
mov
stos
adc
push
xchg
test
daa
pop
adc
jae
push
pop
fsubs
and
loop
ss
lds
imul
mov
out
sbb
jns
movsl
inc
lea
addr16
add
adc
jecxz
mov
add
jmp
jno
and
xchg
leave
shlb
sub
adc
fnstsw
iret
cli
data16
loop
ds
das
addr16
add
shl
out
shrb
xor
dec
sub
xor
stos
xlat
shrl
out
xchg
mov
xchg
push
ljmp
lcall
lea
sub
lahf
hlt
ret
fadd
out
adc
xor
arpl
lds
mov
mov
fisubrs
add
adc
xchg
int3
push
mov
jmp
xchg
int3
sub
inc
inc
or
test
mov
adc
sbb
cmp
or
in
adc
mov
pusha
mov
or
dec
dec
mov
dec
cmpb
sbb
inc
adc
loopne
adc
das
sarl
movsl
or
mov
cmp
dec
and
dec
mov
inc
push
enter
adc
adc
gs
int3
orb
sub
sub
movsb
lret
xchg
mov
into
jno
nop
test
xor
xorb
loope
cltd
dec
fwait
fwait
inc
data16
lods
repz
pop
andb
mov
mov
loope
mov
cmp
cwtl
jmp
out
aad
jmp
roll
pop
fisubrl
hlt
inc
xor
clc
dec
arpl
xor
and
gs
and
test
in
xor
rorl
loopew
lods
inc
jo
lods
adc
push
ficoml
sub
add
cli
jle
adc
popl
outsb
loopne
scas
push
fidivl
dec
inc
fwait
nop
loope
int
xchg
jle
mov
nop
xor
inc
push
in
and
mov
stc
aaa
push
xchg
jo
clc
dec
gs
movsb
out
sub
test
inc
addr16
jae
call
loopne
xor
xor
lock
or
enter
ljmp
fisubrl
mov
jne
sub
or
std
cmp
adc
int
movsb
int
cld
aad
xchg
jnp
add
repnz
or
and
or
cmp
aad
jbe
and
mov
pop
test
push
je
cld
xor
es
xchg
repz
xlat
mov
mov
sub
sbb
and
stos
fimull
outsl
mov
fnstcw
outsb
es
pop
dec
xchg
mov
mov
stos
xlat
mov
dec
adc
sub
mov
in
and
sar
test
test
xor
cli
je
shrb
push
adc
aaa
push
sti
push
or
test
and
out
test
mov
mov
mov
das
or
mov
sub
mov
jle
and
andl
insb
pop
xchg
sbb
jo
and
cmpsl
sub
aad
xor
incb
sbb
xorl
out
test
dec
addr16
pop
add
ljmp
sub
adc
mov
and
xchg
mov
sub
je
xor
cwtl
mov
lods
repnz
hlt
in
jns
xor
push
cltd
repz
inc
loopne
stc
in
lcall
xor
xlat
xlat
inc
fadd
and
jl
rcrl
or
inc
ret
pop
clc
imul
cwtl
je
push
and
enter
jle
loope
add
mov
mov
mov
cmc
or
xor
test
ja
data16
daa
mov
lcall
xchg
test
xchg
push
shl
data16
pop
xor
popa
fildl
pop
xchg
call
test
jae
push
sbb
mov
loopne
je
dec
icebp
rcll
xchg
xor
loope
pushf
mov
cmc
mov
addb
xchg
or
roll
add
jle
or
add
mov
pop
add
jno
pop
sub
mov
sbb
mov
push
mov
lcall
imul
xor
adcb
ljmp
lea
mov
push
stos
xchg
xchg
add
fnsave
add
negl
stc
adc
cmp
movsb
jno
add
add
out
outsl
mov
dec
leave
lea
push
stc
lods
leave
arpl
pop
add
mov
insb
mov
mov
xor
repz
adc
mov
into
jmp
lea
sub
pop
cmpsb
or
cwtl
or
out
sbb
add
mov
loope
xchg
pop
shl
test
sub
push
pop
xor
dec
out
arpl
push
or
and
pandn
push
pop
fs
data16
nop
fs
push
out
dec
dec
sti
pushf
mov
xor
inc
push
xor
and
add
stc
cmp
icebp
testl
sbb
push
inc
mov
aas
dec
mov
scas
shll
loopne
pop
xchg
pop
aas
repz
pop
jmp
shl
mov
fdivrs
mov
movsl
js
sbb
mov
ret
or
mov
xor
jmp
inc
stos
push
ret
test
imul
push
lahf
shlb
mov
nop
jae
aad
in
mov
mov
inc
icebp
jl
ret
lods
xchg
aad
jmp
dec
and
sarl
iret
jge
lds
pop
fidivl
cltd
int3
dec
in
pop
ja
sti
mov
and
cmp
mov
jmp
inc
inc
ljmp
mov
mov
sbb
and
dec
fst
and
xchg
arpl
xor
imul
dec
inc
mov
out
sti
jle
aas
cmp
push
shl
pop
push
faddl
mov
out
sarb
je
in
lods
pop
aad
outsb
sti
pop
inc
repz
ss
cwtl
pop
jne
ret
scas
int
in
outsl
sub
mov
cmp
mov
int3
ret
vmulss
xchg
sbb
in
sahf
test
adc
sbb
add
loopne
popa
inc
pop
cmpsb
stos
cmc
movsb
icebp
iret
pushf
pushf
sbb
cwtl
cld
mov
scas
pop
pop
cmp
jp
sub
inc
xchg
ret
mov
fwait
add
inc
stc
jl
sbb
leave
and
lock
fistpl
fisubrl
xchg
xor
popf
mov
mov
mov
xchg
dec
xchg
or
jne
cmp
mov
pop
push
lock
or
sbb
loopne
push
int
outsl
mov
push
push
cmp
jbe
dec
int3
pop
imul
cltd
dec
xchg
push
or
and
or
adc
lret
mov
push
negb
aad
fstpl
and
test
loop
in
mov
fst
adc
xorl
lods
cld
cmp
push
icebp
inc
push
jbe
and
dec
adcb
lods
mov
fwait
clc
sbb
cmp
addl
int3
fisttpl
rol
sbb
xchg
mov
pop
stos
pop
adc
sub
sub
cmp
xor
lcall
gs
loopne
scas
pop
cmp
xor
sahf
popf
arpl
roll
movsb
or
mov
inc
mov
popf
jge
jg
ret
add
cmp
sub
jns
lea
inc
enter
lahf
outsl
xchg
jns
rorl
aad
cmp
repnz
cmp
mov
sub
mov
repnz
mov
pop
ret
push
or
stos
mov
mov
lahf
jae
jne
iret
neg
mov
jns
xor
rorb
fwait
jns
xchg
fs
mov
hlt
rclb
hlt
popf
mov
jbe
ja
mov
gs
int
cmc
cmp
xchg
add
lock
xchg
dec
push
xlat
lret
sub
mov
shll
mov
and
or
imul
or
or
shll
sub
mov
mov
pop
add
je
xor
mov
xchg
rcrb
gs
aaa
out
xor
push
mov
nop
jne
mov
and
adc
push
out
lods
adc
pusha
mov
jae
outsl
sbb
clc
jae
mov
ja
or
sub
lcall
into
shlb
xlat
cld
ja
jl
push
xor
sbb
outsb
sbb
xchg
rcrb
adc
lds
inc
clc
adc
pop
out
adc
andb
xor
xchg
mov
enter
push
enter
movl
push
out
adc
inc
mov
inc
add
lods
mov
cltd
inc
das
popa
ja
and
sub
or
js
pop
xchg
ss
in
push
movsb
sbb
addl
gs
in
sbb
fwait
cmp
pop
add
adc
push
pushf
and
dec
std
pushf
out
cmp
xchg
roll
inc
mov
scas
in
xchg
scas
out
nop
jne
sbb
xchg
jge
inc
leave
aas
jno
inc
add
sbb
repz
jge
punpcklbw
frstors
sbbl
add
pop
or
adc
rolb
addr16
ja
mov
adc
lods
dec
imul
dec
add
lock
sti
dec
pusha
add
andb
leave
imull
aas
aam
test
jbe
mov
pop
icebp
popf
dec
sbb
mov
fsub
stos
idivl
inc
inc
das
popf
in
adc
pop
rclb
pop
jecxz
ds
mov
cmp
pop
push
fidivs
mov
clc
fildll
in
sbb
adc
jae
inc
pop
outsl
lcall
push
fists
into
fnstenv
gs
jmp
push
cmpsl
xchg
inc
int3
sub
adc
cwtl
pop
adc
add
mov
jmp
adc
popa
popf
adc
or
test
daa
or
pop
addr16
dec
mov
push
test
lock
lcall
xor
xchg
jg
cmp
add
int3
int
clc
mov
xor
push
add
dec
mov
cmp
xlat
lea
mull
and
xor
fstpt
mov
int
sub
inc
jne
add
das
sbb
movsb
add
dec
cmp
pop
jne
cmp
push
sar
cmp
cmp
pop
pusha
arpl
jmp
mov
xor
push
xchg
es
xlat
popf
sarb
repz
mov
adc
and
stos
dec
leave
jp
sub
lds
inc
sub
and
mov
aam
clc
out
cmc
jl
dec
push
je
popa
mov
mov
cmp
jno
cmc
add
adc
jp
mov
mov
cltd
jb
inc
sbb
divl
pop
aad
and
addr16
mov
jns
repz
add
faddl
hlt
mov
loope
push
xchg
and
xchg
and
sbb
cmp
adc
mov
pop
or
sbb
mov
pop
pop
sbb
dec
repnz
shl
leave
int3
adcl
mov
inc
push
fs
imul
aad
sub
cld
add
sbb
int
sbb
leave
jge
in
rcrl
test
ljmp
xchg
adc
cs
add
out
or
or
call
lods
or
clc
adc
les
and
test
and
loope
inc
aaa
jle
data16
data16
pop
xor
mov
and
loop
pop
push
xchg
and
les
xor
jb
out
jmp
push
sub
jo
xchg
adcb
test
les
pop
push
jo
dec
mov
or
jo
adc
sub
lock
adc
rep
ds
add
and
aas
in
aaa
cmp
cs
mov
sbb
mov
jnp
imul
jecxz
xor
icebp
xchg
add
stos
lret
addb
adc
lret
sub
pop
jp
dec
mov
pop
sub
mov
cmpsb
mov
mov
xchg
fisubrs
push
add
dec
and
inc
sti
jne
cmc
inc
jne
lret
shrb
mov
sbb
lcall
and
test
mov
stos
add
pop
sti
push
fmuls
cwtl
in
adc
mov
stos
mov
pop
shrw
pop
mov
hlt
jbe
in
jp
mov
sbb
mov
sbb
enter
loopne
sbb
or
sti
push
icebp
add
out
pop
pop
loope
lret
jbe
mov
aad
jns
pop
push
dec
movsl
jbe
xchg
lcall
push
mov
out
orb
jbe
mov
loopne
jne
test
mov
lret
pop
push
and
adc
lods
dec
add
cmc
cmpsb
into
xchg
inc
and
insl
pop
mov
mov
and
pop
ja
push
fs
pop
or
data16
in
push
jnp
ds
fisubrs
xchg
into
shrb
mov
lods
add
inc
mov
aam
rolb
mov
and
adc
sahf
cmp
xlat
repz
loop
dec
shlb
inc
add
add
arpl
nop
push
mov
jne
cli
or
fnstcw
das
mov
adc
and
popa
pop
lock
push
inc
pop
mov
loop
ret
mov
push
je
inc
cmp
push
fbstp
inc
dec
icebp
addr16
test
jns
sub
sti
loopne
xchg
cltd
push
filds
int
idiv
or
push
push
xchg
into
mov
cli
fimuls
lahf
jnp
inc
cwtl
rcll
cmp
jns
lret
push
inc
and
and
loope
mov
push
xchg
push
andl
fdivl
jge
aas
inc
std
mov
mov
int
insb
fmuls
stc
add
scas
xchg
nop
pop
sub
dec
mov
aas
movsb
pop
mov
sbb
stc
mov
xor
scas
or
mov
jmp
daa
cmpsb
xchg
adc
mov
gs
mov
rorl
and
push
jg
and
outsb
cltd
fs
pop
out
mov
add
cs
add
int3
jl
jmp
and
xor
lahf
dec
icebp
movsl
or
sar
dec
icebp
xor
adc
sbb
xchg
out
jmp
pop
mov
jmp
ljmp
movsl
mov
mov
pop
xchg
add
hlt
int3
push
shlb
test
dec
imulb
push
outsl
lock
aam
or
sarl
sub
sbb
cmp
gs
fsubs
adc
sub
xor
lods
arpl
outsl
pop
dec
int
dec
mov
xchg
inc
dec
pop
inc
mov
and
xor
mov
iret
sbb
mov
fstps
out
jle
jnp
adc
imul
xchg
test
jl
dec
cmp
je
in
add
addb
aas
jge
xchg
xor
lods
das
add
stos
xchg
adc
in
nop
insb
pop
outsb
push
loope
test
push
call
pop
push
test
scas
mov
sub
addl
cmp
icebp
mov
fdivs
xlat
aas
push
mov
mov
push
les
cmp
sub
sbb
stos
jmp
lret
push
bound
inc
push
aas
das
xor
cmp
mov
cmpsb
sbb
adc
xor
iret
stos
ret
test
fistpl
das
cmp
vcvtss2si
stos
aad
inc
xchg
aas
mov
stc
pop
add
rclb
outsl
xchg
and
dec
dec
std
gs
inc
ret
ficompl
mov
sub
jb
push
cmp
mov
les
xor
lods
insb
daa
jb
cs
ds
data16
jnp
cmp
sbb
int3
test
jecxz
lcall
movsb
cvtdq2ps
and
cmp
pop
iret
dec
or
sub
ljmp
lahf
mov
mov
imul
cld
adc
xor
jno
cmp
push
push
or
xchg
and
insl
in
xor
popa
mov
scas
mov
les
daa
daa
xchg
fstps
mov
loop
cmc
pop
jns
clc
xchg
testb
mov
fisubrl
imul
mov
inc
iret
mov
mov
hlt
fucomi
inc
dec
add
mov
xor
push
aad
jge
adcl
inc
xor
push
aas
pop
mov
ja
pop
cmp
adc
xlat
mov
mov
sarb
andb
jmp
mov
js
add
iret
sub
outsb
push
pop
test
and
mov
mov
cmp
je
bswap
outsb
pop
mov
jb
dec
ss
push
int3
dec
pop
mov
push
adc
cmc
fwait
pop
lcall
mov
fucomip
lcall
jp
enter
aas
mov
pop
push
jns
insl
inc
fadds
push
insb
scas
imul
in
cmpsb
dec
ljmp
mov
das
in
rorl
cmpsl
shll
pushf
xor
std
inc
test
mulb
iret
xor
sbb
loop
xor
clc
movsl
leave
xchg
sbb
sbb
jecxz
jbe
test
insb
push
iret
adc
pop
cli
mov
icebp
push
repnz
mov
mov
test
clc
fistl
pop
lret
pop
or
call
cltd
mov
repnz
imulb
push
cmpsl
or
pop
rcll
sarl
mov
loop
inc
ffreep
bswap
aam
dec
inc
cmp
dec
les
cmp
outsb
pop
mov
shlb
test
push
fsubs
add
cmpsl
imul
inc
rcll
roll
call
sbb
adc
push
inc
lods
bswap
adc
sub
or
inc
dec
inc
data16
std
and
push
jmp
pop
out
sahf
out
and
fdivp
movsl
add
mov
ret
movsb
sub
sub
pop
push
jp
or
sbb
lods
scas
pop
adc
int3
inc
add
jge
jo
out
inc
pop
jae
jae
sub
fistpl
stc
xchg
leave
pop
xchg
repnz
sbb
jle
fs
movsl
push
sub
pop
scas
femms
xor
pop
mov
and
cmp
xor
mulb
or
nop
ljmp
mov
lods
ret
push
cmp
dec
test
add
dec
add
scas
jg
inc
push
mov
or
mov
pop
and
cmpsb
jle
test
inc
adc
out
sub
clc
push
sarb
les
fstl
out
in
dec
jnp
out
int
sub
out
hlt
pop
call
repnz
dec
stos
loop
mov
cmp
enter
insl
and
mov
in
cs
push
mov
int3
xor
sub
adc
xor
pop
cvtps2pi
fisubl
mov
push
movb
fisubl
daa
iret
les
jns
shlb
xchg
add
loope
inc
mov
fstpl
pop
adc
jae
cmp
fdivrl
inc
pusha
mov
sub
sub
aam
jne
sub
and
fistpll
cmp
add
xchg
add
lret
enter
movsb
push
adc
sub
hlt
xchg
or
cmpsl
lods
fidivrl
in
jae
pop
stos
iret
sbb
loope
lcall
aaa
ret
mov
shrl
lahf
dec
fadd
scas
push
imul
call
and
lods
addl
cwtl
pop
dec
dec
mov
fcompl
les
xor
and
adc
jl
and
clc
sbb
in
aas
in
rorb
inc
sub
cmp
cld
loopne
rcr
icebp
jo
pop
mov
mov
sub
jns
push
or
adc
push
or
je
or
fxch
fdivs
push
and
loope
xor
imul
lea
out
sahf
push
dec
dec
repnz
ret
mov
in
insb
daa
rolb
xchg
mov
mov
test
mov
xchg
divl
sbb
cwtl
push
insb
dec
push
mov
xchg
inc
pop
cltd
fsubs
aad
mov
or
jns
and
std
imull
push
sbb
sahf
fnstcw
popa
and
and
sbb
adc
mov
sub
arpl
mov
xchg
mov
fwait
shlb
push
dec
cmp
imul
sbb
in
negl
enter
xchg
int3
jnp
adc
mov
push
dec
shr
sbb
int
je
push
dec
pop
std
inc
scas
outsb
clc
mov
add
data16
add
outsl
push
repz
movsb
xchg
jp
daa
in
jno
cs
cmpsb
pop
adc
jae
sbb
pop
adcl
sahf
jb
enter
pop
mov
loop
popa
jge
push
leave
xchg
addr16
out
jae
add
aaa
add
sbb
dec
fstpl
popf
push
icebp
in
mov
sbb
test
clc
cltd
push
arpl
mov
fwait
hlt
pop
and
xor
inc
aaa
mov
test
mov
cwtl
rorl
iret
jecxz
jmp
lods
xchg
lea
mulb
mov
adc
testl
xchg
cmpsb
fwait
mov
sahf
push
fstl
push
mov
and
lea
insb
nop
call
or
test
push
stos
sbb
xchg
stos
pop
adc
addr16
jbe
dec
aam
jmp
jne
aas
dec
ret
pop
xchg
jbe
aaa
xor
ljmp
lcall
fldenv
inc
mov
lock
cltd
xchg
shl
std
jo
mov
ficomps
enter
jg
loop
push
cwtl
pop
js
jg
es
jns
sti
push
and
jno
and
jno
dec
div
mov
icebp
in
ret
aad
xor
cmp
js
cld
aam
fsubrl
pop
cwtl
add
adc
pop
adc
mov
xabort
loop
outsl
shrl
fisttpll
lds
mov
int
data16
ret
push
loopne
les
push
adc
inc
pop
cmc
cs
dec
cwtl
out
pop
jne
out
pop
add
fsubrs
imul
imul
inc
fnstsw
addb
bound
pop
or
or
add
and
push
iret
andl
insb
insl
ds
adc
dec
pop
lods
cmpsl
dec
insl
mov
cmp
fisubl
rclb
lods
int
or
mov
call
frstor
aam
ds
push
jge
pop
push
jne
jnp
les
push
add
fucomip
ja
fnstcw
dec
sbb
fisttpll
sbb
insb
sbb
xchg
aas
fdivrs
in
stos
in
inc
inc
repnz
mov
and
adc
jae
jle
in
stos
add
arpl
dec
pop
jmp
add
and
sbb
adc
dec
pop
sbb
ja
pop
xor
mov
nop
jo
lret
movsl
dec
lea
or
or
inc
movsl
xor
sbb
mov
adc
jmp
out
push
mov
cmc
fists
test
adc
lds
cmp
sarl
adcl
sub
and
rorl
outsl
xor
mov
xchg
jmp
push
add
mov
jecxz
fstl
cmp
xchg
jb
out
insl
pop
pop
shlb
outsb
jg
add
mov
push
cmp
xlat
lret
mov
and
sti
out
mov
jg
movsl
sbb
call
out
jle
insb
js
aam
xor
cmpsb
movsl
data16
sbb
rcll
mov
fsubrp
andl
inc
jb
cltd
pop
out
push
pop
add
push
fcomps
hlt
and
dec
jl
scas
sub
push
fistps
inc
call
or
xor
lods
divl
test
mov
and
cmp
jecxz
push
sbb
jp
push
inc
pop
jg
pop
repnz
out
cmp
jl
rcrb
add
mov
stc
dec
jno
int
pop
inc
shlb
pusha
push
lcall
sub
pop
jno
jo
pop
inc
rolb
xor
mov
xor
pop
dec
and
push
insl
aas
cwtl
leave
ss
mov
adc
test
sub
outsb
jae
es
pop
xchg
je
jecxz
cmp
lahf
mov
aam
rorb
aaa
push
fbstp
pop
sub
in
imul
and
adc
jecxz
xchg
out
subl
out
jno
in
nop
or
cmc
push
lcall
sahf
inc
adc
pusha
das
sub
add
dec
inc
ds
scas
jns
in
fnstenv
or
mov
sbb
pop
cltd
dec
xchg
push
test
lret
or
cmp
out
mov
cmpsl
fs
mov
and
fcom
rolb
push
sahf
ljmp
dec
sub
push
punpckhdq
insw
mov
test
insl
repnz
jl
aam
scas
mov
das
or
xchg
cli
lods
js
dec
dec
aas
sub
xor
or
clc
push
jle
rorb
shrl
or
dec
push
push
mov
push
movsb
aaa
lea
jb
mov
fwait
sub
xor
fdivl
es
call
int
add
jg
push
or
sbb
jl
jne
popf
add
push
sub
push
xchg
popf
ss
int
not
xchg
out
fidivrl
inc
mov
ret
inc
enter
mov
js
dec
sub
lret
sbb
cmp
cmp
movsb
xor
or
gs
sub
out
bnd
xor
es
sbb
xchg
cmpb
pop
pop
rorl
sub
xchg
out
popf
sub
xor
lahf
dec
or
jp
pop
lock
fisttps
je
mov
xor
pushf
jbe,pn
arpl
mov
fisttpl
mov
not
and
inc
aam
jmp
mov
repz
rcll
mov
aas
outsl
adc
inc
test
dec
in
mov
dec
xchg
sbb
pop
push
add
in
push
mov
mov
mov
enter
mov
push
inc
cmp
dec
pop
jmp
ret
lret
xchg
dec
fisubs
icebp
test
call
lcall
xchg
sahf
popf
test
push
sahf
es
lret
dec
popa
lods
xlat
iret
mov
pop
cmp
sub
inc
lock
add
cmpsl
mov
inc
lret
mov
repnz
arpl
inc
clc
lret
pushl
es
dec
jo
cmc
stos
push
xchg
mov
xor
imul
or
insl
roll
rcl
ret
hlt
or
mov
movsl
out
ja
jge
cmp
adc
mov
and
mov
cmc
add
mov
mov
mov
xchg
or
cmpl
push
cmc
int3
daa
mov
mov
outsb
lahf
push
fildl
add
mov
or
cmc
cltd
xor
jo
stc
cwtl
xchg
adc
lods
adc
jp,pn
or
scas
sub
push
data16
jno
pop
sbb
push
std
fldl
jo
stos
or
hlt
cmp
popa
pop
fists
es
jge
cld
lods
inc
pop
push
jg
out
jne
pop
dec
imul
stos
outsl
icebp
sbb
je
and
mov
repnz
and
sub
aaa
decb
cmp
nop
rcrb
sbb
and
mov
jp
out
dec
rclb
psadbw
mov
pop
mov
push
jl
mov
rolb
xchg
andb
inc
imul
lea
jbe
clc
cmp
sar
lds
loope
outsb
bound
sub
shll
xchg
jae
stc
jae
stc
cmp
std
jge
xor
add
mov
inc
sbb
fldt
into
fsubrs
lds
push
ljmp
sub
outsb
leave
pop
test
sarl
xchg
xor
sarb
in
inc
inc
inc
mov
int
push
sub
lea
mov
cmc
jp
cld
cmp
addr16
adc
int
arpl
into
pop
push
sub
cmp
bound
loopne
xchg
clc
mov
xor
stos
arpl
cmpsb
enter
inc
call
mov
mov
or
push
popa
test
fs
int3
xor
or
mov
jo
in
mov
xchg
xor
mov
ret
ret
inc
fwait
lds
mull
js
shll
mov
int
out
stos
push
sub
pop
outsl
mov
and
andb
ss
je
mov
jge
ds
adc
dec
adc
test
mov
push
xchg
mov
test
xorl
pushf
pop
and
add
jle
add
inc
aaa
lahf
pop
jmp
cwtl
icebp
sub
pusha
fwait
cmp
aad
insb
iret
jno
mov
outsb
adc
pop
shrl
pusha
fistl
sub
iret
inc
dec
mov
call
dec
dec
cmp
inc
push
imul
insb
pop
ror
stos
jnp
sbb
leave
adc
jle
mov
sub
mov
fdivs
aas
aaa
mov
test
fs
js
inc
mov
push
or
jecxz
repnz
push
cwtl
das
leave
ret
aas
psadbw
mov
jecxz
iret
lods
inc
push
push
shrl
gs
sbb
mov
dec
rcrl
test
pop
mov
pop
out
xor
push
stos
pusha
inc
add
add
inc
sub
popf
and
pop
mov
mov
or
mov
mov
sti
cwtl
pop
cmp
dec
scas
cmc
push
mov
or
lret
cmpsb
ficoml
call
arpl
je
loope
call
addr16
adc
gs
mov
rorb
sub
out
jo
hlt
cs
cmc
push
push
and
sub
int3
lret
pushf
movsb
mov
mov
pop
cld
jae
insl
pop
scas
or
outsb
das
fldcw
xor
pop
cld
ret
push
mov
pop
rclb
fldenv
ja
pop
dec
mov
add
std
movsb
inc
push
mov
rclb
xchg
jp
xchg
sub
add
xchg
outsb
addr16
loopne
dec
sub
pop
outsl
in
fwait
push
or
cmp
subps
dec
std
add
ret
roll
out
xchg
sbb
xchg
fidivrl
not
and
push
iret
and
xor
or
repnz
std
push
adc
pop
test
test
stos
pop
pop
xchg
jno
cli
jae
mov
adc
call
mov
in
les
cmp
loopne
or
es
jo
mov
das
xor
int3
jno
sbb
sbb
lods
xor
jno
fcomps
and
and
testb
push
push
arpl
mov
mov
fists
sub
es
add
cwtl
mov
daa
dec
je
mov
dec
sbb
lods
js
push
cmp
jno
out
and
lods
sbb
pusha
add
or
adc
lds
test
xlat
ret
mov
inc
or
or
movsl
out
shrb
cltd
lahf
es
cmp
sbb
cmp
icebp
inc
test
mov
xor
inc
pop
iret
xchg
cmc
in
cmp
fidivrl
xchg
ja
and
cmpsl
pop
sbb
pushf
jmp
cmp
push
jbe
dec
movb
dec
mov
adc
and
sahf
stos
push
mov
mov
inc
sub
fs
pop
lret
aas
inc
stos
shrl
push
mull
inc
pop
out
jns
inc
out
xchg
ds
push
or
xchg
mov
mov
dec
push
lcall
repnz
lods
and
or
inc
rorb
or
outsb
push
pop
mov
jb
jge
sub
sub
sbb
sarl
leave
ljmp
insb
mov
sbbb
cli
leave
dec
stos
push
and
push
xor
data16
sahf
or
xlat
test
cmp
pushf
leave
xor
shlb
das
fwait
ja
rcrl
dec
push
mov
fcoml
pushf
aad
nop
and
rcr
dec
mov
jge
insb
rorb
push
movsb
mov
push
loope
in
mov
movsb
decl
cmpl
adc
xchg
stos
cli
add
aad
add
xor
dec
pop
xor
dec
mov
mov
es
fs
mov
ja
shrl
lea
mov
fwait
stos
out
out
push
inc
jne
rclb
test
test
mov
leave
stos
mov
fs
push
sti
dec
aam
mov
sub
or
aam
mov
pop
out
push
inc
sub
adc
fcomps
scas
cmpl
add
popfw
movl
pop
mov
jp
fwait
xlat
out
adcl
lock
cmp
or
ja
sar
bound
jp
mov
pop
incb
fcmovnb
into
aas
stos
or
lret
mov
ja
mov
xchg
jle
cs
mov
mov
push
sti
inc
xor
lods
inc
push
jl
lret
mov
jne
push
fcomps
cmc
aas
sti
ret
iret
in
ss
repnz
aad
add
aaa
mov
jno
push
push
cmpsl
push
in
adc
pop
shll
sbb
call
shlb
scas
out
lahf
enter
mov
pop
mov
xchg
cli
lret
adc
sti
mov
sbb
adc
ja
call
jne
popf
xchg
call
int3
out
or
shl
aam
xlat
jnp
cwtl
mov
js
cmc
imul
push
mov
jecxz
lret
pusha
cmp
das
xchg
sub
lods
push
mov
cwtl
mul
rclb
neg
add
sub
cmpsb
jbe
dec
jns
mov
xchg
repnz
xchg
and
jno
xchg
mov
loop
and
mov
jl
mov
lods
pop
sbb
leave
lret
mov
adc
mov
push
je
cmp
jge
cmp
or
or
adc
roll
scas
push
lock
icebp
les
jmp
pop
movsl
int
push
hlt
mov
js
cmp
push
lret
popf
add
out
jmp
xor
add
pop
dec
aad
dec
mov
popf
ljmp
pop
jo
enter
jge
or
mov
jle
test
mov
and
ljmp
pop
adc
movsb
fnstsw
push
sbb
jo
roll
shrl
xchg
cmp
dec
add
push
cwtl
ljmp
mov
mov
ficoms
or
clc
enter
rol
scas
data16
push
imul
in
mov
sbb
cmpsl
or
pop
push
orl
cmp
in
test
jmp
pop
int3
inc
mov
fs
lcall
add
in
mov
and
lahf
das
std
loope
pop
xchg
mov
xchg
int
add
andl
outsl
test
mov
inc
or
out
push
xchg
mov
fwait
in
mov
es
jns
into
mov
sbb
pushl
push
pop
sub
xor
sub
out
jmpw
pop
out
out
jecxz
loopne
jne
andb
add
shr
fcmovne
fimuls
insl
xchg
mov
jnp
sub
pop
jo
add
shr
fsubrp
mov
lret
or
xlat
adc
push
sub
out
scas
push
mov
push
hlt
ret
or
imul
aaa
js
push
shr
mov
add
jns
mov
push
fsubr
scas
dec
bound
lods
and
insb
aad
mov
push
jmp
lods
push
adc
es
je
cmp
inc
cmpsb
es
mov
es
jb
sub
sbb
daa
in
in
imul
xorb
sbb
push
popa
mov
int3
push
mov
jl
mov
sub
mov
orl
jae
mov
fucomip
jge
movsb
mov
xchg
pop
sub
adc
ret
ja
mov
xchg
daa
test
lds
xor
mov
cmp
mov
mov
push
push
dec
clc
add
mov
pusha
pop
inc
outsl
test
aam
push
push
faddp
or
clc
testb
and
in
cmp
stc
testb
clc
hlt
lea
clc
pop
xor
mov
and
popa
adc
xchg
das
nop
loope
jno
dec
or
out
movsl
test
xchg
pusha
fisttpl
bound
ret
jne
insl
mov
scas
lea
lds
xchg
decl
lret
dec
stos
mov
jne
insb
fstps
adc
push
sbb
outsl
ret
lds
mov
ret
repnz
aaa
mov
scas
fcoms
or
jl
jl
lahf
lods
xor
stos
jg
orl
push
out
push
out
jne
popa
nop
push
push
xchg
adc
mov
idivb
mov
sbb
push
hlt
pop
push
ss
xor
cmp
sbb
lods
dec
mov
dec
or
sbb
fwait
adc
push
push
mov
lods
fadds
and
call
rcrb
cmp
fwait
testl
in
lods
xchg
mov
adc
pop
loop
les
ja
and
mov
jne
inc
movsb
mov
ss
jo
mov
sub
xchg
and
dec
std
pop
mov
lahf
sbb
sti
stc
shlb
aaa
adc
fwait
incb
mov
mov
xchg
call
out
push
mov
inc
rcrl
mov
xchg
stos
inc
out
cmp
inc
jne
fdivs
or
sbb
lahf
adc
jl
bound
mov
dec
dec
jmp
aas
out
jnp
push
xchg
sub
push
mov
bound
add
mov
push
ret
fwait
testl
push
xchg
xor
jne
pushf
dec
or
pushf
push
xchg
push
out
mov
jbe
not
test
or
int
lcall
sub
pop
jnp
jg
or
call
pop
mov
lods
les
out
mov
xchg
sub
cmp
test
mov
pop
loopne
sub
cld
push
std
fmuls
push
sar
add
add
imul
loopne
sahf
dec
and
jecxz
mov
in
sbb
add
repnz
shl
pop
lea
je
mov
ror
stos
test
lret
enter
push
popf
mov
jae
jno
cmpsl
jle
insl
movsb
dec
mov
lock
add
imul
popa
or
sbb
lea
scas
cltd
hlt
and
mov
jbe
clc
in
outsl
cltd
xchg
rorb
lods
fildl
adc
cmp
jge
ljmp
imul
rorl
pop
or
and
pusha
mov
icebp
mulb
sahf
xchg
ret
lret
mov
insb
inc
mov
es
rcll
out
jbe
lcall
jbe
popa
mov
adc
push
jge
mov
pushf
push
out
lcall
fcmovb
xchg
pop
ret
sub
pop
xchg
data16
xchg
loopne
pop
nop
sub
add
push
sbb
or
iret
call
add
dec
jmp
fsubl
int3
insb
fwait
sub
push
rol
mov
sub
lods
dec
dec
mov
imul
das
sarl
insb
lcall
loopne
xor
es
fstpl
adc
mov
and
cwtl
jp
sbb
mov
mov
lods
xchg
dec
popa
mov
shlb
cld
add
jbe
test
fnstenv
cli
mov
mov
pop
jp
push
aaa
orl
lahf
mov
shlb
rcll
pop
stc
dec
fstps
call
sub
cmp
loop
mov
out
xor
outsl
test
and
hlt
pop
push
xor
pop
sbb
push
out
cmp
push
cmp
inc
test
adc
test
rol
addr16
into
imul
and
jle
inc
popa
call
xor
or
sub
cmp
inc
out
ret
fstpl
dec
cmp
dec
popa
sbb
hlt
out
push
jae
lahf
pop
outsb
ret
push
xchg
lea
mov
sub
pop
add
mov
nop
mov
push
out
movsb
add
decb
data16
cmpsb
test
mov
outsb
outsb
or
bswap
xchg
xchg
aas
aam
pop
cs
adc
enter
inc
jns
lods
xor
into
dec
xchg
mov
mov
ja
lock
lock
adc
fnsave
fldl
xchg
dec
leave
sahf
push
in
mov
push
aam
jge
jno
test
jb
mov
pop
adc
pushf
add
push
cmp
sbb
cmp
imul
or
mov
pop
mov
sub
outsb
or
test
es
ret
jecxz
jmp
xor
jle
ja
out
inc
adc
das
mov
mov
int
push
cld
add
cmp
jae
mov
xchg
loope
push
mov
bswap
nop
fcompl
stc
pop
stos
and
mov
sbb
sbb
xor
scas
mov
test
or
and
neg
fs
sub
movsl
or
sub
das
std
push
rcrb
ljmp
xor
dec
hlt
inc
xor
clc
sbb
outsb
es
test
pop
bound
pop
mov
loope
xor
sbb
mov
andb
sbb
in
loopne
adc
or
jnp
sub
xchg
int3
inc
xchg
insb
add
pushf
bound
mov
add
or
cld
les
imul
push
mov
push
in
push
filds
add
out
sub
aad
sub
loopne
stos
and
cwtl
sbb
xchg
faddl
outsl
dec
or
ss
das
mov
dec
and
outsb
hlt
shr
fnstenv
js
cmc
cmp
lret
and
mov
repnz
fpatan
mov
pop
repnz
sub
sahf
xchg
lret
adc
mov
cltd
rol
xchg
leave
xor
jns
push
push
xor
cmp
mov
jle
outsb
jnp
sti
stos
inc
mull
outsb
out
scas
mov
nop
icebp
pushf
sbb
push
das
fistl
mov
mov
out
arpl
mov
mov
push
out
lret
jg
pusha
mov
scas
lahf
outsb
cmp
pop
xor
sbb
or
fcomip
call
and
push
pop
fs
add
fstps
and
or
mov
orl
xchg
jp
imul
mov
in
imulb
ret
cmpsl
aas
inc
sbb
xchg
or
addr16
xchg
add
xor
add
nop
stos
test
sti
sub
push
fisttpl
pusha
jae
mov
mov
popf
mov
adc
pop
jnp
xchg
sbb
lds
dec
add
ljmp
out
mov
aas
jb
sahf
xchg
dec
mov
pop
test
fld
cmp
fsts
call
cmp
test
add
adc
push
push
in
mov
test
ret
pop
xchg
gs
pop
sub
mov
mov
mov
sbb
scas
fldt
xchg
and
lret
xchg
lods
js
leave
fdivp
push
mov
fmull
sub
sbb
dec
insb
xor
aas
jle
fimull
fdivs
pushf
and
jecxz
inc
add
ret
outsb
sahf
mov
negl
aam
cmp
pusha
rcll
cmp
cmp
sub
in
inc
push
pop
divb
inc
popa
mov
bound
push
clc
mov
inc
loope
xchg
je
loop
push
inc
fwait
lds
cli
rclb
insl
nop
shlb
in
fsts
mov
jne
or
adc
adc
or
inc
bound
mov
scas
mov
int3
sub
adc
jecxz
shl
add
push
ljmp
xchg
aam
inc
sub
std
pushf
mov
ret
addr16
sbb
nop
jmp
ljmp
addl
call
popf
dec
sub
scas
pop
add
in
in
test
push
daa
mov
mov
das
sti
bound
movsb
mov
pop
or
in
pop
inc
jp
call
add
cmpsb
jbe
or
in
in
stos
pop
lret
xor
or
in
adc
decb
mov
pop
adc
nop
sbb
push
cmpl
fdivl
es
mov
cmp
mov
lods
cld
out
movsl
xchg
imulb
cmovg
mov
mov
in
dec
push
jns
out
lahf
sarl
out
call
lds
sub
jg
jle
sarl
fsubrp
mov
lods
adc
cmc
arpl
mov
in
pop
mov
shr
setb
dec
out
movsb
adc
xor
xlat
stos
bound
cmp
insb
mov
cmpsl
jle
test
pop
inc
cmc
fwait
test
mov
adc
aaa
sbb
mov
leave
sub
jbe
mov
scas
stos
or
push
add
mov
jge
ror
dec
aaa
scas
push
and
jmp
es
imul
outsl
scas
jbe
lods
pop
sbb
cmp
orl
out
cmpl
pop
mov
fistps
jle
lret
xchg
iret
incb
sub
jmp
dec
dec
lret
mov
imul
mul
jl
aam
stos
aam
jb
fmuls
lds
cmpsl
and
mov
pop
xchg
test
in
push
sbb
push
xorb
mov
dec
ret
cmc
lds
and
pop
jmp
xchg
shll
push
push
add
lcall
iret
fists
xchg
mov
fcompl
inc
shr
sti
pop
jecxz
dec
pop
mov
mov
bswap
stos
add
mov
mov
movsl
std
gs
cwtl
imul
popf
dec
or
xor
sbb
dec
or
frstpm(287
fstl
and
jne
pop
sbb
xor
and
test
jb
jp
into
aas
mov
mov
int
iret
loop
cs
mov
lret
mov
or
or
sbb
push
pusha
or
push
stos
pop
xchg
xchg
std
mov
repnz
fld
shrl
divl
repz
adc
cli
int
cli
test
sub
cmp
pop
dec
cs
addb
inc
xchg
and
xlat
mov
pop
cmp
sbb
loop
mov
add
ds
push
orb
outsl
aaa
loop
cmp
clc
cld
xor
or
xchg
and
leave
cmp
enter
shll
fisttpll
shr
cmp
push
ja
xchg
aad
mov
xor
jg
in
xor
lea
xchg
xchg
cmp
adc
push
arpl
or
rcrb
adc
pop
int3
mov
mov
inc
mov
dec
inc
les
push
cmp
jb
dec
nop
jge
and
ret
rcl
in
xchg
push
ds
push
mov
hlt
js
cltd
push
push
adc
movsb
pop
add
jge
xchg
cli
pop
lret
push
mov
lock
cmp
push
test
mov
pusha
mov
mull
inc
push
cwtl
inc
pop
push
pop
sbb
je
ret
movsb
jmp
and
and
cs
lret
mov
dec
fwait
xchg
jns
pop
imul
push
or
lret
mov
push
pop
or
shrl
mov
outsl
jmp
fisubl
outsb
sbb
dec
arpl
inc
mov
fsubrl
int
xor
ret
daa
mov
pop
dec
sarl
xchg
xor
pop
pop
xor
out
mov
pop
mov
loope
gs
push
lcall
pop
repnz
in
sub
cmp
mov
aam
push
mov
mov
or
xchg
aaa
lahf
cmpsl
outsl
xchg
cmpsb
jno
lods
push
adc
sbb
flds
outsb
inc
inc
gs
or
mov
sbb
hlt
faddl
or
and
in
inc
xor
xor
test
and
sbb
shlb
mov
loope
das
nop
hlt
lea
fisubrs
jno
or
cli
test
mov
sbb
inc
adc
mov
dec
adc
mov
bound
push
pusha
test
bound
push
sbb
push
mov
fwait
aas
xchg
add
sub
hlt
stos
jp
rorb
jnp
push
and
std
dec
push
add
xchg
xchg
mov
jnp
sub
shlb
inc
xor
cmp
scas
fldt
icebp
pusha
pop
pusha
push
cmp
rcr
inc
fcmovnbe
mov
adc
into
pop
pop
arpl
out
cs
insb
xchg
aas
hlt
call
jp
jbe
cmp
into
jno
push
push
jl
repz
mov
or
ja
xor
or
sbb
enter
scas
decb
fwait
je
inc
addr16
testb
fiadds
outsl
xlat
mov
int
out
roll
xor
add
mov
dec
call
fs
ljmp
dec
or
and
xor
ja
outsl
out
xchg
mov
fmull
mov
aas
sahf
mov
aaa
mov
ljmp
cmp
popa
call
jns
or
sub
test
jns
scas
in
jmp
js
dec
shll
insl
subl
aaa
dec
in
mov
xor
jb
or
inc
dec
ret
inc
movsb
and
lret
mov
xchg
sub
lret
inc
xor
dec
xor
add
sahf
mov
jae
or
push
clc
adc
cmp
fists
std
int3
xchg
sahf
xor
movsl
jg
mov
addr16
push
icebp
inc
cmpl
xchg
insb
rcl
test
and
loopne
clc
xchg
adc
int
es
sbb
loopne
or
fimull
mov
mov
mov
or
aad
push
mov
push
pop
daa
pop
inc
jl
sbb
jle
call
stos
out
push
cmp
popf
xlat
and
mov
inc
stc
pop
dec
shll
call
or
mov
outsl
out
pop
pop
mov
popl
mov
mov
in
mov
xchg
orb
sub
sub
sbb
in
rcrb
in
ss
mov
mov
bound
xchg
push
leave
add
mov
dec
scas
inc
mov
and
hlt
mov
rcrb
in
push
pushf
xchg
aad
and
clc
adc
outsl
sarl
aad
hlt
into
int
jnp
movsb
or
or
enter
lret
push
cmpl
adc
sub
aas
movsl
lahf
xorb
mov
imul
inc
mov
test
scas
lods
insb
rcl
cmp
imul
mov
leave
sbb
sbb
mov
xchg
push
sbb
push
sub
inc
xchg
inc
iret
sbbl
jl
xor
xor
stc
pop
loop
lea
add
mov
mov
adc
push
cmpsl
pop
sbb
and
lods
popf
or
enter
adc
mov
aas
jo
loope
push
call
clc
xchg
pop
fs
push
pop
xor
out
and
sbb
adc
cmp
cmc
in
mov
sub
pop
push
movsl
lds
mov
les
popf
jge
mov
pop
sub
mov
mov
imul
adcb
cmp
dec
mov
fdivrl
or
xchg
mov
push
dec
mov
pop
pop
rclb
insb
cmp
mov
jb
call
cmp
loope
les
cli
xchg
repnz
out
push
cmp
stos
int3
pop
jo
push
jge
mov
mov
xchg
cmpsb
fcoml
popf
dec
sahf
cltd
dec
push
add
jb
cmpsl
repnz
lret
or
pop
inc
sbb
cmp
push
add
aas
pop
pushf
jnp
push
add
cmc
jp
add
out
hlt
jl
fcoms
nop
sub
sbb
les
daa
movl
subb
hlt
inc
addb
mov
out
out
and
sti
or
sbb
out
xchg
mov
rcrl
shll
xchg
lret
lahf
cmp
xchg
add
cmp
and
test
push
jns
sbb
orb
addl
pop
mov
push
xchg
enter
mov
int3
jno
mov
scas
in
pop
scas
pop
daa
outsl
cltd
xchg
cltd
hlt
and
jo
dec
xor
pop
stos
sbb
mov
jp
and
jmp
aam
inc
fsubrl
scas
push
scas
leave
mov
cmp
shll
das
mov
jb
push
ljmp
jle
mov
sti
repnz
xor
push
cltd
stos
addr16
in
leave
cmp
dec
sahf
inc
push
into
fistl
mov
xchg
fs
pop
pop
sub
int3
and
cmp
std
stos
int
aad
ljmp
xchg
nop
es
jno
mov
sbb
pop
dec
jg
clc
mov
fmul
inc
dec
in
cld
scas
mov
ret
dec
push
in
movsb
out
xchg
sbb
cwtl
pop
dec
mov
daa
imul
jnp
adc
cmp
lods
mov
cmp
dec
rorl
fsubp
adc
bound
loopne
iret
clc
int3
nop
mov
inc
jb
int
cli
in
sti
mov
shl
add
mov
incl
jo
cmp
push
dec
cmp
xchg
or
push
and
pop
xchg
and
jmp
loop
or
repnz
dec
rolb
xchg
adc
dec
or
stc
jno
sub
push
adc
add
xchg
cmovs
and
push
pop
jg
int3
cmp
lock
jecxz
pop
push
stc
das
test
dec
jp
pop
inc
into
adc
movsl
rorb
lods
scas
jnp
inc
inc
js
dec
test
or
lds
bound
sbb
sub
lods
mov
in
es
inc
or
pop
or
pop
fistl
and
or
and
addb
mov
mov
xchg
jb
ss
je
xchg
mov
ss
mov
add
lods
iret
push
int3
dec
es
xchg
insl
imul
mov
push
inc
cs
push
mov
xor
enter
sbb
in
gs
outsl
sahf
vrsqrtss
jbe
inc
push
inc
mov
out
subl
mov
push
push
ficomps
add
mov
shrb
dec
pusha
es
xchg
inc
inc
arpl
mov
push
adc
testl
jo
cmp
pop
arpl
sub
dec
test
and
xchg
add
ljmp
push
or
dec
dec
hlt
mov
arpl
inc
push
stos
outsb
outsb
adcl
mov
xchg
xlat
xorb
out
repz
hlt
imul
sbb
and
xchg
loope
aam
xchg
push
push
sbb
js
mov
sub
inc
sbb
or
fsts
mov
mov
add
fs
fs
sbb
pusha
jns
sub
adc
enter
or
adc
inc
ficomps
pop
enter
fst
jg
add
subb
movhps
pusha
and
aaa
dec
add
dec
into
or
ficomps
jge
aad
lods
fs
mov
or
mov
mov
cli
mov
and
push
push
in
imul
xchg
shl
pop
es
cmc
scas
rorb
outsl
adc
das
pop
dec
popa
out
aaa
push
incl
jl
jno
push
inc
fidivrl
or
adc
lock
push
in
and
frstpm(287
and
pop
clc
mov
mov
push
dec
xchg
lret
xchg
leave
pusha
gs
loop
pop
xor
mov
pop
push
into
cmp
ljmp
add
add
push
fnstsw
mov
jl
sub
insb
pavgw
movsl
test
unpcklps
adc
mov
inc
jbe
call
xchg
adc
mov
outsl
dec
fs
xlat
lahf
mov
jmp
fidivs
add
lret
enter
loope
mov
movsb
jecxz
xchg
add
pop
cmp
or
or
cmp
fcmovb
pushw
insl
testb
mov
dec
hlt
mov
mov
test
mov
jge
push
adc
xor
not
loopne
and
cmc
push
movsbl
enter
out
push
fistpl
jb
or
sub
mov
cltd
lea
cwtl
fcmovne
jbe
push
or
addb
jl
bound
cmpsl
mov
das
push
sbb
sbb
popa
dec
push
adc
add
or
in
lods
test
xor
xchg
and
mov
and
into
and
jns
push
movsl
fcoml
cmp
mov
jmp
rcrb
add
sub
popf
addr16
aas
xor
jne
ljmp
imul
sti
push
dec
cli
sbb
mov
repnz
fsts
or
cltd
mov
popa
add
dec
xor
shl
fdivrl
ss
scas
shrl
loope
jo
pop
icebp
inc
in
fsubs
mov
jbe
sub
in
jp
dec
mov
adc
in
aad
fcomi
lds
inc
fs
movsb
shl
icebp
int3
xchg
cmp
js
push
mov
mov
cs
xor
xor
testb
add
dec
xor
daa
mov
mov
xor
pushl
imul
imul
das
call
out
inc
iret
jne
lcall
push
addr16
sbb
cmp
jp
gs
lods
adc
or
xor
mov
movsb
inc
lret
out
pop
pop
sub
addr16
in
push
mov
nop
adc
data16
cmp
addr16
sub
or
or
or
adc
hlt
call
rolb
mov
jns
js
sbb
ret
dec
popa
stos
nop
mov
cmpsb
push
mov
and
and
mov
out
loop
mov
lret
dec
test
shl
mov
cltd
push
imul
or
push
movsb
int3
mov
data16
push
push
sbb
das
movsl
cld
lods
ret
mov
rcrb
sub
pusha
test
in
pusha
test
adc
sahf
sub
mov
xor
scas
mov
clc
repnz
sub
aad
add
test
bound
fs
dec
push
outsb
shlb
adc
das
popa
and
imul
add
sub
sbb
xchg
push
push
mov
pop
xchg
pop
add
sti
sbb
pop
cwtl
inc
nop
test
sub
mov
or
push
loopne
mov
add
out
lock
popf
sbb
cld
mov
insb
in
test
es
pop
jp
jnp
add
out
mov
adc
mov
cmpsb
out
ja
jnp
cmp
cmpsb
notb
mov
inc
mov
cmp
xor
inc
dec
fidivs
pop
lret
fcmovb
cld
cmpsl
testb
cmp
movsb
inc
pop
jle
lret
cli
push
fwait
xchg
push
sub
repz
dec
cwtl
fidivs
dec
lret
mov
cmp
push
sub
cmpsb
aaa
cmp
addl
hlt
push
orl
fcoml
jle
push
xchg
repnz
and
imul
imul
leave
push
sub
pop
xchg
jbe
inc
pop
mov
gs
jge
xchg
sbb
ljmp
test
stc
push
mov
inc
fndisi(8087
mov
pop
adc
and
inc
mov
xchg
xchg
sub
test
dec
js
push
ret
fcomps
push
and
fbld
push
lods
repnz
fwait
mov
jo
out
in
or
jp
daa
adc
add
insl
jne
int
stos
pusha
test
insl
inc
in
fisttps
cmp
adc
sti
cmp
and
fiaddl
es
cmpsb
hlt
out
inc
mov
ljmp
pop
out
dec
daa
roll
aam
arpl
fnstsw
inc
pop
sbb
bound
ja
test
adc
addb
lds
jecxz
shlb
sub
pop
push
push
jns
xor
repnz
mov
outsb
and
push
fsts
scas
xchg
add
cmp
popa
outsb
fidivl
in
cmc
cmc
icebp
popf
int3
pop
inc
inc
adc
or
and
add
movsl
pop
push
push
fwait
add
daa
jne
iret
sub
nop
mov
out
lret
pop
and
pusha
xor
fwait
repnz
push
cltd
roll
insb
xchg
xchg
sub
sbb
leave
aaa
pop
sbb
or
cmp
fstps
mov
adc
ds
gs
mov
jno
mov
aaa
push
pop
mov
pop
out
lea
cmp
push
jg
mov
rcr
push
mov
pushf
lds
test
pop
leave
sub
xor
dec
dec
lret
subl
mov
mov
shr
xor
sub
movsb
ljmp
addr16
xor
movsl
ljmp
and
sbb
jmp
jo
or
adc
out
hlt
cmp
sbb
shrl
daa
xor
arpl
xchg
sahf
out
jb
dec
pop
sti
pop
xchg
fldenv
push
cwtl
xchg
jg
xor
cmpsl
adc
mov
mov
jbe
dec
lods
lret
xchg
lret
data16
inc
sbb
sub
mov
insb
std
push
hlt
add
cmp
inc
sbbl
aad
mov
adc
xchg
adcl
inc
fwait
jne
push
and
gs
jg
mov
fs
arpl
scas
int3
jno
mov
adc
pusha
mov
jge
pop
adc
inc
cmp
mov
jne
gs
xor
lea
inc
dec
xchg
mov
pop
add
xorb
pop
pop
mov
pushfw
int
add
fldt
jae
mov
inc
xor
inc
or
xlat
or
lahf
mov
inc
lock
mov
push
xchg
loope
cmpsb
ljmp
push
loopne
xchg
cmp
mov
call
in
loopne
mov
mov
sbb
dec
and
adc
dec
scas
add
push
clc
inc
lds
sbb
std
mov
lods
mov
jae,pn
lods
push
cmpsl
dec
lea
jg
outsb
ds
dec
and
maskmovq
iret
pushf
into
ljmp
push
pop
xchg
dec
rorb
ja
mov
mov
xchg
fdiv
push
lahf
aad
data16
in
je
in
test
repz
jne
inc
lahf
ds
jae
pushf
cmpsb
xor
push
jbe
sbb
mov
or
jns
add
push
adc
movsl
stc
dec
stc
les
stos
lcall
xchg
sub
fwait
mov
popf
add
xor
mov
and
dec
pushf
hlt
mov
lock
mov
into
sbb
push
or
mov
leave
sti
repnz
data16
loop
jbe
aas
rcl
dec
adc
mov
insl
cmp
xchg
xorl
leave
sub
jns
into
mov
icebp
jge
mov
les
popa
mov
cmp
aas
xchg
jbe
xor
out
add
pushf
jnp
add
xor
mov
jp
mov
fnstsw
js,pn
mov
add
div
loop
adc
test
xchg
mov
add
lea
sub
pusha
xchg
mov
xchg
insb
pop
lea
aas
fstps
imul
cmpsl
adc
jmp
movsb
xchg
push
inc
sbbl
push
adc
idivl
push
and
fadd
leave
out
cmpb
xchg
sbbl
mov
scas
cmpsb
cltd
push
fstpt
ret
aas
fnstcw
inc
bnd
testl
fdivrp
scas
jne
scas
sub
sarl
mov
or
xchg
xchg
cld
push
push
xchg
loop
fistl
test
cmp
shlb
sbb
cmp
sbb
out
mov
in
sbb
test
and
scas
mov
or
loop
and
and
mov
cmp
push
loop
jle
test
addr16
ss
shll
inc
and
outsl
mov
dec
and
in
nop
pusha
idiv
fistpll
adc
pop
dec
pmullw
ret
loopne
mov
pop
out
lods
inc
mov
mov
lahf
jp
ds
xchg
outsb
add
mov
stos
call
pop
mov
rorl
insb
push
pop
call
mov
mov
repnz
push
xchg
push
add
push
adc
ret
or
std
ljmp
je
into
clc
sub
ds
dec
ficoms
jae
mov
jmp
inc
dec
push
pop
arpl
or
int
jp
int3
iret
pop
jge
inc
pop
stc
sbb
push
sbb
pop
xchg
loopne
and
push
aam
ret
cli
jmp
push
test
iret
dec
push
aad
out
lods
sub
cwtl
aad
cmp
pop
fstpl
clc
mov
rclb
mov
lcall
mov
xchg
lret
cmp
inc
cwtl
xor
and
outsb
push
out
mov
xchg
inc
push
inc
jmp
xchg
push
push
dec
jnp
and
ss
jno
dec
shl
das
jle
push
cmp
and
test
icebp
jp
mov
lret
rcrb
xor
lret
imul
cmp
pop
jmp
ret
inc
ljmp
outsb
cmp
xchg
jo
mov
outsl
lds
mov
xor
sahf
push
pop
inc
jg
into
ficoms
addr16
push
nop
iret
out
xor
out
and
pop
add
add
push
mov
cli
pop
fsincos
cltd
inc
int
lahf
jge
leave
ja
cmp
push
les
cmp
xor
dec
push
dec
repz
stos
jnp
sub
jo
xchg
jle,pn
cmp
ret
and
jg
adc
xchg
int3
and
lock
and
pop
aad
lods
pushf
out
arpl
add
test
or
test
jmp
push
cmpsb
pop
mov
or
push
insb
mov
cmpsl
jecxz
fisubrs
xor
fsub
test
mov
cmp
jbe
jnp
iret
dec
add
fwait
mov
push
adc
addr16
cwtl
xchg
push
out
data16
cmp
nop
out
shlb
mov
xor
mov
push
jle
dec
mov
or
lea
push
gs
ret
or
adc
out
nop
es
cmpsb
add
pop
xchg
lods
lea
mov
sti
fs
sar
inc
jno
cmp
pushf
aaa
inc
adc
js
add
xchg
inc
xchg
arpl
sub
fidivs
or
and
stos
test
enter
inc
or
push
les
test
and
jge
enter
adc
movsb
add
sub
sub
xchg
mov
test
dec
call
inc
test
or
pop
test
arpl
dec
push
call
xor
inc
ss
pop
repz
jb
or
and
insl
and
sub
lahf
paddb
fistpll
repz
xchg
orb
push
inc
stos
jb
fisttpll
out
inc
and
lret
pop
enter
outsb
std
cltd
mov
cltd
mov
popf
mov
push
cmp
xor
hlt
enter
aad
xor
out
jle
mov
mov
daa
enter
imul
adc
mov
adc
cmp
aad
shrl
jecxz
imul
outsl
adc
push
push
pop
addl
in
es
into
jp
or
out
cli
lea
nop
out
out
sbb
push
and
mov
mov
movsb
pop
xchg
mov
aad
mov
arpl
or
cmp
insl
and
pushf
call
aam
mov
lods
fadds
inc
je
rcll
xchg
sub
lcall
xor
sbb
xchg
out
sub
pusha
shll
or
int3
xor
arpl
inc
bound
lods
push
popf
fs
mov
xchg
cwtl
adc
jmp
mov
mov
lret
outsl
fs
push
pop
jg
leave
and
mov
int
push
push
pop
mov
fs
adc
test
dec
adc
and
addr16
std
je
push
mov
lcall
fstpl
lods
mov
jl
push
mov
stos
and
jns
sbb
fxam
jge
xchg
mov
cltd
out
repnz
xchg
into
xchg
out
cmpsl
sbb
popa
cmp
lret
push
mov
sub
add
xor
outsb
sbb
sub
aad
pop
inc
inc
cmp
mov
or
lret
jo
insl
data16
xchg
ds
notl
push
dec
jge
ret
jl
inc
mov
rcr
cmpsb
xor
addb
sub
mov
test
mov
scas
mov
outsb
stc
add
aad
dec
ja
cmc
lods
add
mov
jge
mov
add
jmp
out
cmp
fbld
mov
jle
mov
ds
outsb
out
lods
nop
in
lcall
dec
xchg
mov
xchg
sub
xor
lock
dec
mov
jno
mov
xchg
inc
mov
xchg
adc
dec
or
or
decl
fldl
sbb
mov
fs
addr16
cmp
addr16
jmp
push
sub
add
cmp
stos
divl
pushf
push
push
or
imul
xor
or
bound
add
es
out
imul
fisttpll
scas
sbb
js
jbe
jge
test
pop
sbb
cltd
sub
les
jmp
and
adc
xchg
daa
pop
fmul
les
or
loopne
insb
out
sub
fsubrl
sbb
pop
mov
mov
repnz
sbb
or
fsubrs
stos
and
jp
shll
inc
inc
xchg
shll
int
xchg
push
inc
xor
adc
jp
mov
loope
mov
pop
push
pop
cltd
dec
pop
push
and
scas
or
leave
or
rol
mov
sub
scas
fisttpll
aaa
enter
ljmp
pop
stos
lcall
pop
rcrl
sbbl
push
dec
adc
enter
dec
insb
out
sbb
cmp
adc
adc
sub
or
scas
jge
int3
enter
insb
xor
stc
ds
xlat
sub
aas
insl
or
fs
aas
call
mov
outsb
mov
sub
cmp
pop
jmp
fcomip
adc
fmull
js
cwtl
sbb
mov
adc
sub
popf
pop
add
cmpsb
cmpsb
mov
add
aaa
mov
jmp
lcall
push
in
addb
mov
les
pop
jo
enter
mov
inc
in
testb
leave
lock
pop
out
lret
pusha
mov
rcrl
mov
xchg
loope
push
inc
iret
jg
aam
fadds
xor
gs
jne
outsl
fsubp
bound
xor
outsl
and
nop
or
pop
sub
cmc
or
dec
mov
sbb
inc
pop
inc
std
pop
push
movsl
mov
cwtl
ljmp
inc
test
and
stc
mov
push
fs
and
adc
xor
sub
push
loopne
fnstenv
es
loope
fwait
xor
orl
shrl
dec
inc
into
out
cmc
push
push
lods
cmp
or
jae
movsl
fcmovnu
scas
pop
adc
outsb
je
mov
fimull
repz
fwait
jl
std
lods
sti
mov
aas
sub
fidivrs
pcmpeqd
cmpsl
mov
ja
push
dec
movsl
mov
dec
dec
lahf
ret
dec
add
lret
cmp
add
mov
xor
adc
test
xchg
inc
arpl
mov
or
mov
adc
pop
test
inc
sbb
cld
clc
inc
mov
aas
inc
push
jle
cmp
pushf
push
mov
jecxz
enter
mov
es
sbb
mov
ds
inc
xor
xlat
xchg
movsb
shrl
daa
add
and
push
pop
cmp
lcall
inc
arpl
add
jmp
xor
and
aam
sub
jb
insb
das
into
aas
pop
pop
enter
pop
xchg
add
inc
lahf
jecxz
out
push
nop
iret
push
pop
pop
xor
adc
enter
sbb
xor
mov
sub
test
push
jne
scas
fs
pop
cmp
or
into
pushl
incl
mov
mov
ss
cmc
sub
imul
xor
xchg
mov
dec
mov
les
fadd
rcrb
dec
test
iret
xor
xchg
cmp
out
add
imul
pop
lock
sbb
fnsave
testb
push
in
mov
pop
fadd
sub
out
jb
lods
dec
jge
add
hlt
mov
add
jne
hlt
push
stos
cmp
popa
mov
push
sahf
mov
fsubrl
imul
jnp
sbb
loop
and
fidivrs
dec
ret
imul
xchg
aad
das
xlat
out
or
jle
push
insb
repz
mov
adcb
push
pusha
cmc
cmpsl
andl
push
xchg
mov
and
call
dec
out
dec
stc
sbb
imul
inc
jb
or
jecxz
faddl
inc
std
pop
and
lret
and
out
mov
or
scas
mov
mov
jg
negb
mov
fwait
xlat
and
lcall
dec
enter
xchg
cmp
jns
push
adc
xor
cli
mov
shrb
fldl
xchg
fnsave
loope
aam
loop
pop
pop
ret
repz
push
roll
dec
sub
pusha
add
sub
loop
pop
mov
out
or
xchg
push
inc
jle
out
cmp
pop
pop
and
adc
rcrb
or
pop
add
mov
aam
lock
into
jg
sbb
mov
cmp
lahf
shrb
xchg
movsl
sub
adc
or
push
icebp
cmp
push
repz
rorb
sub
xor
bound
int3
mov
lods
aad
and
cmp
jecxz
das
sahf
sahf
push
shlb
add
cmp
xor
scas
jb
clc
mov
pop
daa
mov
inc
mov
push
inc
fwait
xchg
jnp
aam
jno
mov
sbb
leave
cmp
mov
shl
dec
sbb
scas
roll
xorb
scas
dec
and
push
pop
xchg
outsl
lret
adc
push
fcmovne
fstpl
pop
icebp
mov
or
pop
scas
imul
and
insl
push
cs
or
xor
xor
stos
icebp
and
sub
sbb
push
lret
fldl
adc
push
fstl
and
dec
add
mov
repnz
repnz
sti
fimull
or
test
jmp
pop
jo
mov
push
test
fdivs
xor
lahf
xchg
or
stos
fstl
lahf
es
les
lds
add
ss
pop
and
xchg
sub
mov
movsb
repnz
repnz
push
imul
or
mov
sbb
in
fmul
andl
pop
in
mov
fs
mov
iret
xor
cmp
jnp
xor
cwtl
movsb
sti
imulb
xchg
add
out
mov
dec
sbb
pop
sub
lcall
and
pop
and
mov
int3
mov
jae
cmp
inc
pop
cmc
mov
lcall
orb
and
pop
js
adc
clc
int
in
mov
pop
imul
ret
aad
bound
sbbb
imul
xchg
mov
sbb
fincstp
mov
cld
pop
xchg
repnz
sti
stc
das
jmp
add
popa
fiaddl
adc
lahf
inc
jns
xchg
cmpsl
mov
pop
xchg
cld
out
xchg
pop
cmp
xor
imul
test
call
adc
ret
loopne
push
jecxz
push
xor
mov
xchg
push
outsb
push
pop
cld
and
mov
sub
or
ljmp
or
hlt
iret
outsl
push
push
sbb
aam
test
in
out
shl
jno
sbb
xor
bound
inc
imul
test
sbb
add
loopne
adc
dec
sbb
mov
mov
leave
or
pop
jl
daa
sbb
das
imul
add
adc
xor
pop
and
add
cmp
xlat
gs
in
xchg
mov
mov
jne
call
push
xor
bound
xlat
sbb
sahf
xchg
xlat
jb
cld
int
pop
xor
xchg
out
mov
clc
push
jmp
xchg
inc
cmpsl
cli
test
push
pop
das
mov
mov
pushfw
inc
and
outsl
outsl
popa
out
lods
push
sub
add
dec
push
movsb
andl
mov
mov
js
xor
pop
shl
adc
scas
jo
es
das
jmp
popa
mov
jl
iret
mov
lock
mov
ret
movsl
sub
add
jle
out
iret
stos
ret
stos
push
xor
dec
cltd
push
fcompl
scas
clc
mov
ds
outsl
lds
mov
test
pop
cmpsl
inc
adc
dec
inc
and
cmpsl
fs
adc
or
movd
lea
aam
cbtw
lcall
dec
arpl
mov
pop
adc
sub
add
sbbb
pop
rolb
cmp
sbb
mov
aaa
cmpsb
jo
repz
aas
add
xlat
mov
cmpsb
and
dec
sbb
iret
sti
addb
in
cmp
and
cmpsl
mov
ret
push
push
das
sub
clc
xchg
imul
inc
adc
jmp
inc
mov
daa
lock
jbe
incl
inc
pop
cmpsb
sub
fcomp
and
divl
pop
push
inc
andl
das
and
pop
sbb
outsl
lret
fs
mov
or
lea
es
in
lea
or
push
push
mov
xor
xor
mov
pop
sub
sarl
fildl
dec
rorl
jnp
sub
mov
cs
or
stos
or
fnstenv
cltd
mov
adc
jle
les
cmp
dec
mov
scas
testl
sbb
mov
aad
sar
cli
mov
int3
out
cli
add
test
xlat
shlb
jg
add
shlb
mov
call
fs
inc
cmp
mov
push
push
pop
xor
jae
dec
jns
add
mov
inc
xchg
jge
jbe
shr
in
jge
dec
leave
mov
dec
das
sar
in
insb
mov
push
mov
mov
scas
adc
mov
jbe
fsubrs
sub
xchg
sahf
gs
frstor
add
pop
jb
xchg
add
inc
mov
mov
mov
test
inc
lds
inc
adc
cmp
int
andb
dec
add
sarl
dec
shlb
leave
js
into
mov
cltd
add
fbstp
mov
cmp
and
add
aas
test
enter
addr16
push
pop
cmp
jae
jne
out
xor
push
stos
xchg
pop
loope
iret
mov
add
xchg
popa
xchg
cwtl
mov
sub
cmp
push
inc
push
adc
pop
clc
adc
push
add
xchg
movsb
pop
cmpsl
mov
pusha
push
lods
imul
popa
data16
or
jge
leave
jbe
aam
das
movsl
dec
mov
int
insb
jns
push
mov
sbb
mov
push
xchg
mov
dec
test
addr16
daa
inc
jns
fsubl
daa
jmp
test
jo
into
fcomip
pop
pop
outsb
lcall
inc
cmp
adc
or
int3
sti
mov
int3
mov
add
sahf
test
jecxz
dec
or
call
or
xchg
loope
test
adc
jge
out
imull
mov
xchg
sbb
outsl
mov
cltd
imul
dec
inc
mov
mov
in
stos
or
mov
bound
in
std
fdivl
loop
xchg
jp
das
dec
mov
popl
push
int3
sahf
cmp
cmp
rorb
push
sarb
dec
nop
inc
int
dec
adc
or
movsb
mov
subb
sub
pop
pop
push
aaa
lcall
jb
std
xchg
push
cmp
or
outsb
dec
or
sub
ljmp
mov
in
out
xchg
push
and
adc
loop
out
dec
push
jecxz
add
not
insb
mov
repnz
testb
mov
xor
xor
movsl
popa
loop
rol
call
push
outsl
in
and
es
imul
ja
movsl
push
lcall
hlt
daa
mov
add
stc
jo
dec
fisttps
inc
mov
cwtl
mov
or
pop
stos
fstl
lds
xchg
dec
adc
xor
repnz
lods
pop
jp
pop
cmp
cmp
movsb
lds
sbb
das
iretw
sub
or
xchg
stc
fcoms
mov
pop
in
xchg
pop
addl
sub
cltd
cmp
push
cmp
pop
push
in
icebp
cmp
shrb
outsl
pop
adc
sahf
adc
out
fdivs
sub
xor
call
push
pop
cmp
daa
adc
xlat
pusha
adc
adc
sub
mov
or
xor
sub
cmp
jmp
pop
cmp
xor
adc
movsl
addl
or
push
or
out
or
frstor
mov
mov
arpl
loop
pop
shl
jns
icebp
mov
fildl
rclb
dec
cmp
loop
sub
lret
and
lcall
add
xchg
stc
mov
or
insl
jno
and
outsl
jnp
push
daa
cli
in
cmpl
ljmp
jne
out
pop
hlt
iret
cmp
push
cmp
lret
hlt
jae
ds
shll
xor
xchg
cli
inc
shl
dec
xchg
stos
sub
loopne
xchg
push
stc
xor
and
xlat
push
push
add
shl
adc
rcrl
xchg
and
dec
cmpsb
out
mov
sbb
push
imul
jnp
cmp
sub
sub
dec
add
loop
cmp
stos
jl
outsl
bound
sub
jp
push
push
xchg
insl
lret
push
add
jne
pop
push
pop
sahf
and
pop
cli
stc
inc
or
in
test
dec
mov
mov
dec
sub
gs
test
add
clc
xbegin
ficompl
mov
mov
dec
out
ret
push
xor
pop
mov
mov
stos
ret
cmp
fcmovnb
lea
pop
inc
std
rcrl
xchg
jl
lret
inc
push
jnp
leave
leave
sbb
popf
aaa
clc
mov
or
or
mov
add
mov
mov
rclb
inc
push
push
inc
pop
loopne
inc
cmp
xor
sub
shrl
divl
cmp
sbb
mov
loop
enter
xchg
inc
pusha
cmp
jo
inc
sbb
or
mov
push
das
pushf
or
test
sub
inc
jecxz
fcmovnbe
pop
les
inc
push
push
adc
sbb
cs
add
insb
mov
dec
mov
inc
mov
out
into
ret
in
cltd
adc
stc
xlat
mov
push
push
or
lds
pusha
mov
dec
dec
insb
gs
fisttps
xchg
pop
sahf
je
sbb
mov
pop
loopne
push
outsb
inc
inc
fiadds
sub
shlb
and
je
test
and
fistpll
or
scas
minps
sahf
cmp
cmpsb
jl
mov
ljmp
insb
je
or
sbb
sub
in
pop
shlb
das
mov
sub
cmp
fdivrs
xchg
addb
test
push
cld
and
mov
and
pop
cwtl
fsubrl
pusha
jl
mov
sub
rolb
push
adc
cmp
in
xchg
loopne
fcoms
rorl
jmp
and
xchg
mov
lock
or
es
movsb
sub
cmpsl
pop
pop
movsb
xchg
lods
scas
adc
jbe
jne
pop
sub
and
lret
mov
inc
mov
add
enter
adc
call
xchg
dec
icebp
es
jae
jecxz
mov
mov
lods
in
pusha
aaa
mov
out
xchg
or
imul
popa
cmp
les
jecxz
push
sbb
mov
xchg
pop
mov
xchg
sbb
pop
inc
movsb
out
and
mov
ret
jne
mov
fcos
out
cmp
sub
ss
mov
test
stos
mov
dec
clc
decb
icebp
mov
cmp
mov
dec
sahf
ret
push
sub
xchg
adcb
inc
add
and
inc
cmp
outsb
cmc
jae
les
jmp
pop
xchg
jle
iret
push
pop
out
push
in
fisubrs
jmp
cmpsl
pop
jns
jecxz
mov
das
das
fwait
and
lods
cltd
scas
ret
xchg
and
jp
push
xor
xor
inc
xchg
and
mov
cmp
pop
sbb
ret
xchg
inc
dec
adc
add
lds
push
and
sub
jns
stc
dec
ss
jbe
adc
add
lods
and
lret
mov
jge
push
and
decl
mov
jecxz
mov
cmp
push
test
ds
adc
xor
out
adc
hlt
xor
or
popa
jg
sub
xchg
push
cltd
mov
pop
and
mov
push
jmp
gs
mov
cmp
loop
ss
mov
push
sub
adcl
push
sbb
xlat
xlat
mov
push
mov
fldt
popf
sub
or
ret
int3
cs
shlb
and
je
lahf
jne
fwait
pop
sub
divb
nop
add
outsl
sbb
mov
jmp
jb
push
addr16
inc
leave
mov
cs
xor
icebp
pop
hlt
loope
loope
push
xchg
xchg
mov
cs
dec
lahf
sar
orb
sub
stc
iret
aam
jae
add
pop
xor
pushf
and
iretw
lcall
mov
cmp
cmp
lea
cmp
popf
jb
add
push
mov
outsb
mov
mov
testb
and
jae
lret
pop
mov
ljmp
dec
or
jle
es
inc
dec
or
idivb
lret
push
lcall
lret
sub
popa
out
cmp
in
shrl
sbb
or
pop
aad
mov
xor
add
bound
adc
out
insb
push
and
repz
fisubl
out
jo
negb
aas
sbb
cmp
test
test
cmp
addr16
push
pusha
jae
adc
inc
sub
inc
mov
ss
sub
in
mov
mov
mov
xor
mov
mov
cwtl
mov
xchg
xor
sub
jmp
jns
aam
pop
and
sub
call
imul
es
out
and
cmp
jns
lcall
mov
addr16
push
mov
fistpll
push
gs
pop
adc
bound
shrl
ror
dec
xchg
out
int3
lahf
mov
or
push
scas
cld
mov
jp
stc
fwait
and
pushf
mov
lret
fdivl
aam
popa
and
push
add
add
mov
clc
outsl
sbb
fiadds
bound
mov
xchg
dec
mov
and
fsubs
les
add
les
push
adc
mov
push
inc
inc
adc
sub
bound
fcoms
pop
jmp
mov
in
das
clc
push
rcr
xlat
sbb
lea
in
lods
aam
stos
mov
fs
and
fldl
pop
sbb
iret
and
adc
sbb
pushf
dec
push
loopne
negb
mov
pop
in
adc
push
fiadds
sub
ds
jns
lret
cmp
jnp
jmp
sub
fildll
fldt
pop
in
pop
mov
jecxz
cwtl
push
fcomps
jbe
pusha
cld
mov
cmp
jnp
push
or
cltd
in
xchg
dec
sbb
mov
mov
push
les
das
and
mov
sbbb
jnp
ss
imul
lods
adc
bound
jbe
mov
inc
xor
add
into
mov
das
rorl
pop
mov
cltd
jle
imul
pop
add
fldt
cmpsb
xchg
lret
adc
push
out
daa
xor
outsb
rol
pop
loope
mov
test
add
pop
bound
xchg
cltd
lock
fstl
pop
mov
mov
cmp
addl
in
sub
hlt
xor
sahf
adc
mov
mov
nop
int
js
nop
xor
insb
adc
dec
and
mov
adc
hlt
clc
push
les
adc
sbb
mov
mov
pop
lret
scas
lret
sub
or
scas
cltd
mov
iret
dec
xor
movsb
dec
out
push
mov
inc
pop
mov
stos
outsb
mov
jl
in
insb
inc
pusha
or
dec
pop
or
xchg
add
cs
into
inc
dec
lahf
andb
in
psubsb
pop
pop
in
lea
lcall
sub
push
pop
jb
xchg
pop
xor
lds
and
mov
bound
insb
mov
mov
jecxz
sub
mov
jne
aas
add
aam
pop
and
mov
mov
push
sbb
jmp
push
mov
test
mov
adc
xor
xchg
fsub
pop
aam
in
popf
mov
pop
call
sbb
aas
int
arpl
pushf
aaa
xor
je
cwtl
pop
xchg
xchg
lds
push
pop
ret
jp
dec
hlt
and
xchg
iret
es
xchg
jg
sbb
xor
pop
and
addr16
jbe
test
and
jne
cltd
test
bound
add
mov
push
add
xor
or
sub
js
test
into
dec
mov
mov
fwait
clc
mov
cmpsb
sbb
add
push
push
in
scas
cmp
lret
and
dec
loop
lods
jmp
and
mov
mov
sarb
sub
into
or
repz
push
lahf
fisubl
xchg
jg
add
lods
lods
imul
push
nop
mov
insl
xor
pop
pop
imul
leave
pop
int
push
ret
jns
ret
cmp
xchg
imul
inc
out
cmp
sub
hlt
jmp
cmp
dec
inc
xor
mov
loop
int
test
sub
cmpsb
inc
fcomp
xchg
cltd
insl
mov
sub
mov
sub
dec
pop
insl
shl
fmuls
cmp
add
ja
xorl
movsl
lcall
or
dec
xorb
ja
lea
xor
je
add
iret
dec
inc
xchg
gs
das
ret
xchg
cmp
sbb
inc
xorb
push
rcll
mov
adc
sbbl
jne
enter
in
add
insl
sahf
cmpsl
pop
roll
sbbl
sbb
pop
ficompl
test
jl
cmp
das
sub
jl
dec
pushf
std
push
repz
mov
out
sbb
mov
xor
lret
adc
sbb
sub
and
popf
sub
popf
test
cld
add
xor
repz
pop
addr16
dec
loope
pop
mov
jl
dec
lds
dec
idivl
movsl
mov
cmp
ss
mov
popa
ja
in
ret
in
pop
leave
sar
incl
loop
jg
xchg
aam
inc
repz
mov
ljmp
inc
mov
aad
sub
jl
adc
cld
inc
add
cli
lock
push
inc
test
add
inc
push
mov
pushf
popa
in
push
std
popa
cmpsb
test
fs
or
mov
aaa
fldenv
push
mov
enter
cs
movsl
je
imul
rorl
adcb
outsl
fdivrp
lret
in
call
mov
xchg
mov
int3
inc
or
xor
imul
js
adc
or
jl
call
movsl
in
shll
push
loope,pn
lret
sti
scas
addr16
and
mov
iret
dec
add
loopne
pop
sub
lret
adc
popf
adc
mov
inc
test
inc
pop
incb
jae
or
inc
adc
dec
aam
jg
inc
mov
es
jo
xchg
mov
cmc
xor
sbb
sub
outsb
outsl
jo
movsb
push
xchg
inc
loope
pop
sub
ss
fwait
or
lret
adc
or
xor
jne
sub
outsl
inc
sbb
daa
lods
inc
mov
xlat
lcall
dec
out
sub
jmp
push
add
xor
lcall
cmp
sub
imul
scas
sub
dec
xchg
xlat
and
push
in
mov
aaa
lcall
enter
dec
bound
xor
push
andb
iret
shl
popa
jle
cwtl
jbe
xchg
sub
jns
fdivs
jge
ljmp
xlat
in
pop
pop
adc
inc
and
sbb
lret
xor
inc
insl
ds
dec
jne
je
jle
push
pop
pop
das
push
pusha
mov
in
rcr
movsb
xchg
loope
xchg
lret
sarl
andl
inc
jmp
jge
loop
ret
pop
sub
mov
insl
lahf
cmp
push
cmp
xor
mov
mov
sub
cs
ljmp
pop
cmpsb
in
fs
iret
rorl
aam
bound
lods
into
pusha
mov
jl
sbb
cmpsb
mov
pop
xlat
cwtl
add
pop
mov
imul
cld
adc
enter
repnz
push
add
sub
sbb
or
lock
adc
daa
sti
cmp
cmc
and
mov
fistpll
add
js
es
aas
or
sub
ljmp
in
add
mov
cld
addr16
and
adc
loope
aaa
xor
aad
sbb
lea
add
cmp
sub
or
mov
mov
cmpsl
or
xlat
mov
sti
push
push
pushl
test
mov
inc
pop
pop
out
out
push
aam
shr
iret
inc
push
test
pusha
scas
push
cwtl
movsl
jecxz
movsb
inc
jb
in
xchg
fistpll
sub
inc
scas
sub
inc
push
add
fsubs
sbb
fxch
icebp
fsubrp
leave
idivl
cs
inc
xor
push
movsb
xchg
xchg
out
cmp
push
pop
or
shrl
pop
pop
pop
push
outsb
arpl
adc
cmp
std
mov
mov
mov
int3
pop
fwait
sub
gs
out
sarl
push
mov
push
and
mov
add
push
mov
mov
push
ret
cmpsl
jp
pop
and
fbstp
push
jge
mov
loope
stos
xchg
jp
mov
in
adc
mov
clc
inc
call
sub
lods
pop
fiadds
ja
mov
mov
aaa
leave
dec
ret
ret
push
cld
test
enter
dec
sbb
test
adc
idiv
repz
add
jo
fwait
dec
repnz
das
mov
lcall
shrb
mov
sub
addr16
lret
fbld
lret
pushf
dec
push
mov
movsl
jnp
shll
jb
jno
sbb
push
negb
mov
inc
in
jne
and
pusha
cmp
lcall
scas
nop
adc
cs
push
add
scas
sbb
push
pop
sahf
je
cmc
cmp
out
in
fs
sbb
jae
cmp
mov
xlat
imul
cli
cmp
je
mov
xchg
ljmp
movsb
xor
lahf
out
jo
in
in
cmp
stos
notl
call
faddl
ficomps
lods
pop
sub
cld
dec
xchg
jle
and
pop
push
into
lcall
xor
in
mov
int
jae
mov
sbb
add
nop
dec
pop
jns
push
lods
adc
sar
into
ds
cmp
and
xchg
push
enter
ljmp
mov
push
xchg
lcall
jp
imul
arpl
jl
xchg
push
mov
xor
lret
popf
leave
aam
mov
jmp
bound
in
jae
loopne
mov
gs
sub
pop
movsb
loop
adc
xchg
push
test
test
movsb
xor
out
aam
cmp
mov
and
mov
xchg
out
sbb
shrl
stc
or
fprem
outsb
loop
leave
xor
cld
loopne
lcall
adc
pop
jg
push
mov
dec
insb
testb
cmp
xchg
aas
fidivrs
push
loopne
or
sub
lods
test
adc
mov
pop
mov
arpl
mov
in
lea
sbb
pop
pusha
jo,pn
xchg
adc
inc
outsl
push
jb
mov
xchg
outsl
or
mov
cmp
shll
or
cmpsl
shll
jno
sub
xor
dec
jl
push
adc
mov
sbb
aam
xchg
and
mov
lds
fsubrl
pop
es
aam
lock
stos
lods
adc
test
dec
xor
mov
mov
orl
adc
loopne
jle
repnz
mov
xchg
enter
xchg
iret
out
test
jo
push
imul
lcall
jp
mov
push
test
pop
and
or
lea
mov
sub
aas
iret
mull
mov
ja
ror
aaa
pop
outsb
shl
jbe
jno,pt
mov
xchg
mov
jge
xchg
mov
inc
jne
jmp
imul
call
xchg
inc
cmp
and
cs
stos
pop
out
push
insb
mov
dec
inc
stos
push
mov
idiv
data16
dec
bound
inc
adc
cwtl
jnp
mov
jb
xchg
sarb
dec
imul
sub
iret
xchg
lcall
imul
cld
adc
pushf
push
xor
jg
test
sbb
rcr
push
test
sub
xchg
or
sub
dec
dec
in
nop
idiv
rol
std
jmp
inc
xchg
push
jge
dec
les
aam
rep
dec
int3
mov
enter
imul
pop
xor
xchg
sbb
sbb
popf
mov
ljmp
cmpsb
cmp
mov
xlat
imul
sbb
in
daa
xchg
jg
push
mov
jnp
pop
pop
xchg
in
sbbl
test
add
movsb
in
in
add
call
sbb
sarl
sub
loop
cmp
stos
jg
jmp
les
dec
jmp
sbb
gs
movsl
lock
or
push
sub
lcall
xor
insl
or
sub
test
aaa
inc
cmc
enter
add
sub
add
mov
pop
fisubrs
xchg
ljmp
sbb
push
scas
scas
shlb
or
add
pop
gs
inc
mov
jnp
pop
or
pop
lods
sbb
icebp
or
dec
pusha
add
aaa
adc
xor
mov
sub
xor
adc
out
cmpb
shl
pusha
adc
cld
fadd
cs
lret
lds
push
adc
mov
adc
adc
inc
mov
out
ret
test
mov
lods
dec
jbe
push
imul
mov
cld
pop
nop
push
daa
jb
pop
lock
pushf
mov
xchg
fs
and
push
sbb
xor
mov
cli
dec
imul
insl
inc
test
xchg
xchg
jb
popf
and
leave
in
sarl
adc
mov
mov
push
xchg
dec
xchg
std
fstps
out
int3
cmp
push
aaa
into
pop
sbb
scas
jp
jmp
push
mov
sbb
jle
dec
cmpsl
fstps
xor
inc
imul
out
sbb
popa
push
popa
clc
push
xor
add
push
aas
hlt
xor
mov
push
inc
add
out
mov
adc
inc
jnp
dec
xor
pop
pop
cmp
mov
and
aaa
out
out
inc
inc
popf
in
push
lret
jcxz
cmp
stos
lahf
ds
add
mov
loopne
ljmp
int3
mov
xchg
out
cmp
es
fdiv
pop
adc
mov
pop
mov
cmp
pop
cmpsl
push
fmuls
sbb
sub
and
mov
xor
hlt
pop
cmp
cld
adc
cmp
push
loopne
repz
jmp
aaa
lods
aas
jg
mov
fsubrl
push
pop
sub
pop
jl
adc
aaa
mov
in
shll
add
xor
push
mov
rcrl
aaa
loope
enter
pusha
and
cmpsl
cmp
xchg
sbb
dec
mov
sbb
add
ret
xor
rol
mov
xchg
dec
pop
jbe
daa
push
popa
in
xchg
dec
insb
jbe
push
jno
mov
push
jne
mov
jg
aam
cmp
daa
xor
loop
cs
add
arpl
call
movsb
xor
leave
ja
jae
cmovl
push
into
jne
xor
mov
vmwrite
daa
lea
pop
lret
test
cli
sysexit
pop
add
enter
sub
jns
adc
lahf
xor
imul
pop
xor
cmpsl
mov
mov
and
xor
adcl
test
aam
or
mov
into
les
dec
pop
and
push
mov
movsb
push
dec
push
xor
lcall
fs
in
nop
add
sub
rcr
lcall
clc
jg
das
mov
or
movsl
outsb
sbb
aas
iret
dec
insb
imul
movsb
jns
jmp
cmp
and
mov
mov
mov
ljmp
jns
cwtl
out
adc
and
fidivrs
insb
aam
sbb
push
jbe
sbb
jle
ret
mov
xchg
xor
xor
pop
cltd
xchg
pop
cmc
mov
or
adc
adc
loope
push
ss
cmp
dec
idivl
int3
cld
or
ret
stc
xor
push
mov
sub
in
xor
sbb
add
and
repnz
xor
insb
push
mov
fs
pusha
test
rcll
sub
scas
movsl
lock
les
js
sub
mov
cmp
xchg
jo
jnp
or
and
and
ret
leave
xor
cmpsw
push
add
fnstenv
dec
jns
jo
xchg
mov
int
cltd
pop
pop
push
js
and
dec
jbe
inc
movsl
mov
push
shlb
inc
sbb
jl
fwait
popa
jmp
test
mov
or
xor
mov
push
ficomps
rcrl
xchg
mov
scas
fistpl
inc
xor
imul
shl
sub
mov
lret
imul
adc
and
std
inc
jg
xchg
cs
adcb
mov
dec
fisubl
je
int3
mov
mov
nop
xchg
add
cld
cltd
jne
lcall
je
cli
jb
js
cmp
mov
aaa
lods
rol
pushf
jns
call
sti
fcmovbe
xchg
pxor
hlt
mov
dec
xchg
ss
mov
mov
dec
shll
xchg
mov
popf
mov
and
adc
addr16
pop
mov
addr16
shrb
mov
ja
dec
aas
in
int
aam
push
sbb
dec
popa
pop
repnz
ja
hlt
lock
push
mov
sub
popa
rcrb
arpl
es
mov
push
sahf
aad
jl
sbb
push
or
sub
clc
into
adc
mov
xchg
dec
aam
pushf
lahf
adc
inc
out
flds
pop
mov
das
mov
cltd
pop
cmp
and
into
aad
into
xchg
adc
push
addr16
adc
subb
ret
es
imul
mov
xor
and
pop
icebp
out
data16
adc
mov
mov
test
scas
sbb
xchg
loopne
mov
dec
cmp
hlt
int
or
cmpsl
negb
je
jnp
js
fldcw
imul
bound
add
test
xchg
and
inc
jo
leave
inc
stc
movsb
arpl
mov
lret
loope
movl
in
loopne
cltd
js
shlb
push
inc
jmp
xchg
sub
aam
pop
pop
enter
mov
jp
xchg
incb
add
rcrb
cmpsl
pop
mov
int
sti
sub
sbb
jge
dec
adc
inc
push
testl
add
dec
iret
es
push
lea
fdivrs
imul
inc
int3
jb
outsb
hlt
adcb
jle
js
jbe
shll
adc
mov
or
cmp
rclb
xchg
push
faddl
icebp
xlat
rcrl
popf
popf
fldl
add
adcl
hlt
mov
cwtl
mov
lahf
sarb
adcl
loop
and
aad
and
jnp
and
out
pop
sub
sub
rcr
xor
pop
dec
xor
or
hlt
icebp
lret
cmp
pusha
loope
jl
jmp
jge
lea
movsl
ss
sub
add
adc
cs
or
lds
or
jbe
mov
sub
test
fdivrs
mov
jb
dec
fwait
cmpsb
es
mov
loopne
fucomi
xchg
cmc
sti
test
pop
je
add
les
lret
inc
je
mov
scas
sti
mov
enter
adc
inc
pop
cmpsb
fsubs
mov
icebp
sbb
lds
mov
cmp
lahf
enter
in
mov
arpl
cltd
movsl
in
ret
cmp
mov
movsl
out
mov
rolb
push
push
add
fdivr
push
push
loope
mov
xor
push
mov
xchg
pop
pop
cld
ret
fcmovnbe
cmovs
popf
into
into
loopne
or
rcrb
mov
mov
imul
xorb
xor
out
out
daa
fstps
mov
xor
fistps
enter
dec
ljmp
inc
mov
sub
pop
call
push
sbb
mov
mov
rorb
in
cmpsb
roll
cmp
or
push
cmc
mov
daa
loopne
test
fs
shll
int
lods
fadds
add
fldl
pop
aas
in
pop
xchg
cmpsb
dec
scas
mov
call
popf
and
jae
loopne
call
xor
mov
lock
subl
stos
int3
movsb
jle
and
outsb
subb
and
ss
jns
mov
imul
jb
repz
daa
lods
lret
inc
xor
ret
ret
das
push
test
ret
faddl
inc
mov
jbe
sbbl
xchg
ja
adc
jmp
push
addl
out
dec
imul
mov
dec
mov
in
jb
cmpsl
inc
jle
loope
pop
call
dec
mov
mov
sbb
cmp
mov
pop
test
mov
ds
mov
inc
jp
mov
fnstcw
inc
add
jmp
adc
popf
pop
xchg
push
jb
loop
notb
and
xor
jle
add
xchg
stc
inc
mov
jb
pushf
lcall
repnz
cmpsb
in
sbb
insl
cmc
jae
dec
jno
je
cwtl
jne
data16
cmp
das
mov
popa
xor
mov
gs
cltd
adc
pop
rorl
clc
cwtl
lea
cmp
or
out
sbbb
sub
jbe
in
inc
dec
xchg
push
adc
in
sub
fwait
cltd
or
pop
fldenv
out
and
gs
or
mov
andb
and
xor
mov
sbb
mov
into
mov
arpl
pop
cmp
test
fs
inc
mov
pop
fwait
inc
jnp
sti
fs
mov
fcmovnb
call
lcall
push
stc
mov
jl
aaa
sti
xchg
icebp
popa
popa
stos
mov
push
mov
ret
ret
sub
jno
fmulp
iret
dec
setns
call
mov
movsl
lcall
sbb
pop
mov
add
jbe
cmpsb
divb
sbb
xchg
test
bound
mov
cmovge
add
stos
mov
xchg
mov
pop
out
dec
daa
sti
cli
xchg
out
shrb
gs
je
mov
ret
in
movsb
fmull
mov
lahf
cs
leave
add
ds
int
fstpl
mov
andb
adcl
ds
jle
mov
xchg
enter
inc
sub
aad
jl
sbb
scas
sbb
addl
adc
mov
cld
outsl
jg
jns
dec
mov
or
add
push
push
lods
xor
loope
cmp
push
mov
stos
cmp
rorl
fldenv
mov
repnz
mov
xor
push
add
aam
cmpsl
loop
imul
cwtl
sub
hlt
pushf
xor
lods
push
pop
add
and
add
mov
push
repz
xor
add
js
mov
xchg
mov
aas
inc
mov
or
lret
out
pop
sub
mov
dec
add
dec
xchg
in
adc
dec
or
sbb
jns
loopne
adc
inc
mov
clc
mov
mov
jp
jns
dec
dec
jle
out
pushl
dec
push
jp
test
xor
pop
mov
lds
out
pusha
cmpsb
xlat
cltd
pushf
andb
imul
mov
lcall
mov
mov
test
xchg
cmpsl
jge
sub
cmpsb
nopl
std
test
imul
nop
jg
jmp
xor
lds
mov
aas
stos
cmp
int3
cs
das
jge
ret
pop
fists
cmp
call
push
insl
pusha
xchg
dec
and
cmp
mov
cmp
inc
mov
das
or
mov
mov
repnz
filds
xor
cmc
mov
in
add
sahf
pop
or
rcl
cs
sbb
shll
sub
mov
sbb
sbb
inc
sub
xor
inc
cmpsb
cmp
int
sub
stos
jmp
aas
das
sbb
push
nop
jp
and
repz
loopne
jle
pop
push
pusha
in
adc
std
sub
push
push
sub
fmull
aaa
ljmp
stos
in
aam
push
mov
or
sub
dec
lods
movd
mov
jbe
nop
pushf
movsl
sti
mov
mov
cmp
outsl
inc
fnstenv
dec
or
hlt
inc
fwait
pop
ljmp
adc
mov
arpl
push
jmp
into
test
fldenv
mov
repz
loop
mov
push
xor
rcl
lds
adc
or
push
dec
mov
nop
daa
mov
orl
popf
lods
pop
insb
iret
popl
pop
dec
mov
cmpl
test
mov
sbb
sub
jl
adc
jbe
add
subl
stos
jecxz
inc
adc
das
cs
and
xchg
cli
lds
sti
shlb
push
mov
icebp
cs
sub
push
cmc
dec
fildll
loopne
scas
stos
dec
das
cmp
fs
xchg
cmp
and
in
add
lock
lods
cli
test
sahf
and
pop
outsb
imul
daa
ja
sub
in
add
sub
daa
sub
sbb
pop
mov
cmc
movsl
xchg
sbb
sub
popf
ds
push
dec
inc
clc
xchg
fwait
mov
jns
sbb
out
xor
subl
jbe
add
push
dec
nop
jno
mov
sub
jns
in
sbbl
hlt
add
pushf
rorl
adc
mov
inc
orl
xchg
inc
addr16
das
cmp
test
sbb
in
or
pop
enter
mov
loop
loopne
repnz
add
das
jecxz
add
insl
cmp
xchg
and
shlb
jle
subl
imul
bound
mov
fdivs
sub
mov
add
or
lret
inc
lret
aas
repz
inc
adc
jl
inc
shl
arpl
adc
mov
jbe
jno
shll
push
jl
push
xlat
xchg
sti
mov
sbb
decb
lret
pushf
and
push
sbb
stc
push
add
test
in
add
lahf
dec
or
out
xor
lds
stos
popf
sub
xor
mov
out
inc
pop
cmp
jg
mov
sub
mov
pop
lret
je
mov
sahf
mov
mov
out
repnz
fmul
pop
sahf
cmpsb
cli
bound
lret
and
aas
xchg
es
into
xchg
cmp
arpl
ss
jno
scas
fldcw
bound
popf
sbb
adc
std
int
lret
loopne
mov
mov
dec
dec
idivw
or
push
fcompl
int
cs
cmp
movsb
in
or
cmpb
call
imul
jbe
jnp
inc
in
shll
pop
cmp
cmpsl
jecxz
or
sub
add
dec
or
inc
and
pushf
push
or
or
jne
loopne
and
cmp
mov
out
lret
outsl
fisubs
addl
pop
pop
jnp
lods
sbb
scas
sbb
fistpll
and
imulb
addr16
mov
fsub
arpl
and
jb
in
cmp
adc
je
addb
cltd
or
aas
xchg
cs
jbe
cmc
dec
sub
xor
insb
lahf
mov
and
adc
mov
adc
testl
stos
mov
orb
push
iret
lret
aas
mov
jmp
sbb
xor
push
jg
fwait
js
or
shrb
jb
add
imul
mov
mov
xchg
mov
push
xchg
mov
inc
jne
orl
fbld
mov
add
nop
icebp
jns
sbb
imul
rol
xchg
ljmp
ja
add
stos
mov
cmp
add
mov
sub
jae
cmpsb
xchg
add
mov
dec
outsl
pop
leave
jecxz
xchg
cmp
loopnew
mov
ds
mull
push
movsl
into
xchg
orb
push
imul
outsb
mov
mov
mov
lret
cmp
inc
subb
stos
adc
xor
daa
out
xchg
jbe
xchg
xor
out
jno
mov
imul
icebp
xlat
mov
hlt
mov
arpl
cmpl
xor
jo
jmp
cmp
notl
sub
or
fists
pop
stos
push
pop
cmp
cwtl
adc
dec
out
leave
clc
lcall
arpl
rorl
sbb
xchg
sarl
mov
dec
test
std
cs
mov
cltd
fdivrl
mov
sahf
out
xor
out
je
pop
and
push
jp
ficoms
ret
and
cltd
fldt
and
addr16
inc
jecxz
sub
mov
mov
push
orb
mov
addr16
cmp
mov
sbb
push
lea
ja
pop
sbb
jge
xor
std
call
push
arpl
or
mov
scas
je
dec
enter
fsts
scas
das
jo
pusha
add
arpl
test
stc
and
mov
and
mov
cmp
iret
in
xchg
sub
ret
cltd
or
jle
sbb
cmp
jns
loope
flds
pusha
mov
shll
das
mov
sbbl
std
enter
mov
push
icebp
loope
imul
movsl
leave
mov
mov
imul
ja
cli
jo
mov
imul
movb
jnp
mov
cmpsl
arpl
into
inc
add
xchg
sbb
and
pop
or
test
loope
outsb
cmp
inc
cmp
xchg
int
ljmp
mov
jo
cmp
push
cmp
jnp
insl
cmc
outsb
notb
xchg
aas
sub
and
into
pop
je
xchg
cs
jb
fisubs
popa
mov
hlt
push
sub
adc
cli
xchg
iret
sub
sbb
and
inc
adc
push
pop
lcall
aam
cmpsb
mov
rorl
push
sub
mov
stos
out
cmp
mov
jne
sbb
mov
imul
push
sub
or
mov
outsl
sbb
mov
mov
and
adc
and
addb
pop
repz
cmp
outsl
mov
cmpsb
std
jo
jl
sti
dec
fsubrp
xchg
pusha
rol
aaa
cmp
mov
push
push
adc
lds
scas
fildll
mov
sbb
rcll
movsl
adc
sub
fdivrs
or
int
shlb
bnd
data16
xor
or
mov
dec
sbb
clc
xor
add
cmp
out
loope
sub
popa
jp
imul
jmp
shrl
jp
addr16
or
adc
in
pop
aam
push
adc
int
int
or
mov
rcll
imul
cmpsb
lahf
add
repz
pop
xor
push
ja
add
out
adc
jge
dec
in
inc
lahf
outsl
dec
adc
sbb
jge
stc
cwtl
adc
xorb
arpl
adc
sub
adc
pushf
int3
jb
xchg
cmp
notl
call
jnp
das
mov
push
inc
pop
jl
add
inc
or
popf
xchg
je
mov
or
sub
xor
sub
add
shll
test
cmp
scas
cwtl
adc
popf
sbb
or
das
xor
es
mov
stc
stos
cltd
lahf
cmp
lcall
xchg
xor
hlt
inc
add
add
mov
aam
pop
cmpsb
das
jne
or
pushl
mov
gs
sbb
push
mov
rcr
pop
ljmp
lea
mov
out
jl
test
push
xchg
bound
mov
xor
push
dec
jns
test
lret
jb
add
ret
push
xor
mov
out
movsb
stos
cmpl
or
sub
pop
lahf
lcall
fs
test
pop
push
xchg
ret
mov
or
ja
outsb
ss
fstl
jle
lea
fdivl
push
aam
jbe
in
sub
jae
in
sub
mov
std
push
inc
fcmovne
sub
jecxz
daa
sub
sbb
xchg
lods
add
and
sub
je
in
addr16
push
fnstsw
mov
mov
add
push
mov
fists
pop
push
loop
pushf
test
sub
sbb
lea
or
test
sbb
inc
push
pop
outsb
inc
addr16
inc
cld
and
mov
xchg
daa
cwtl
dec
cmpsl
xlat
ret
cli
push
sub
cltd
stos
ja
iret
pop
ret
inc
mov
lahf
inc
and
sti
cwtl
mov
mov
cmp
iret
mov
stos
xchg
push
movb
test
testb
mov
sarl
fidivrs
sbb
inc
and
sbb
stos
push
sbb
sbb
ficoms
arpl
lcall
dec
in
out
rolb
mov
jae
xor
imul
add
mov
lock
dec
in
xchg
movsb
pop
mov
xchg
jle
jecxz
in
roll
jo
outsb
les
ss
mov
stos
jmp
mov
aam
aaa
push
jnp
add
xor
push
notb
dec
xchg
in
mov
fistpl
aaa
sbb
dec
lret
jns
test
dec
adc
divb
mov
push
adc
lea
mov
fsubp
insl
out
lret
rcll
add
dec
mov
lcall
dec
cmp
test
imul
pop
popf
xchg
cmp
nop
scas
movzbl
pop
mov
pop
cmpsl
jge
and
notl
outsb
xor
push
xor
stc
hlt
add
xlat
inc
sbb
and
push
nop
sbbl
int3
aam
ret
iret
xchg
shll
scas
fcoml
push
mov
imul
scas
stos
scas
xchg
add
mov
sbb
cmp
mov
or
dec
push
out
std
jo
outsb
scas
cli
repz
xchg
cmp
dec
push
mov
in
or
xchg
adc
cmpb
dec
out
sub
jb
cmp
push
sbb
lret
ss
or
je
push
mov
je
in
pop
sub
push
sub
aam
or
push
push
mov
mov
cwtl
jmp
cmp
rclb
addr16
sbb
cmpsb
cli
sub
mov
sbb
leave
das
sbb
pop
mov
dec
push
dec
mov
mul
mov
jo
cmp
push
cltd
mov
dec
push
add
jmp
add
pop
cmp
nop
jmp
sbb
xor
and
divb
movsl
mov
lods
sbb
pusha
pop
mov
insl
test
ja
dec
sahf
jo
outsb
js
bound
jle
daa
cs
xchg
test
mov
pushf
repnz
into
mov
out
mov
out
cmp
jl
jmp
mov
lahf
mov
orl
clc
test
out
imul
out
or
das
mov
scas
shll
mov
and
xchg
fcoml
mov
sbb
hlt
xlat
inc
xchg
push
ljmp
sbb
movsb
jns
in
insl
insb
inc
gs
imul
cmp
fcomps
sti
mov
imul
iret
and
pop
pop
ljmp
pop
add
dec
test
push
iret
loope
xor
jmp
add
imul
adc
mov
push
das
repnz
testb
cmp
jg
or
sbb
enter
add
lcall
clc
lods
into
jae
shl
les
cmpl
adc
mov
and
pop
add
cmp
stos
sbb
repnz
push
ss
pop
jno
popa
popf
xchg
lods
push
sbb
adc
cmp
xchg
pop
pop
fs
cmp
iret
dec
and
in
mov
xor
mov
aas
into
push
pop
fistps
sub
and
leave
popf
rcrl
idivl
xchg
nop
add
xchg
or
xor
inc
add
xor
das
and
sbb
stos
testl
and
push
mov
mov
mov
daa
add
arpl
mov
mov
cmp
sbb
mov
sub
fidivrl
xchg
push
frstor
jecxz
xchg
push
cs
jle
or
cwtl
cmpps
jmp
stc
sub
xchg
scas
aaa
cmp
inc
push
repz
and
adc
subb
daa
vpminuw
movsb
js
adc
mov
inc
xor
arpl
imul
outsl
std
rol
push
rorl
inc
aaa
icebp
idivb
out
sbb
push
test
in
cmp
pop
mov
sahf
dec
test
jg
mov
adc
jbe
mov
inc
test
push
jp
jg
cmp
leave
xor
nop
cmp
add
fwait
pop
stos
mov
insl
sar
repz
int
mov
mov
mov
sbb
lds
xchg
lahf
or
adc
push
jns
into
pop
lods
jae
pop
cmp
push
dec
sahf
and
ja
pusha
in
and
inc
imul
adc
inc
outsl
push
repz
pop
ret
inc
je
movsb
ljmp
sahf
sti
push
pushw
cltd
sbb
rcr
out
jnp
mov
push
aad
addr16
movsl
and
mov
in
jecxz
xchg
adc
mov
mov
lahf
pop
mov
jne
lret
mov
cmp
push
hlt
gs
fimuls
es
das
outsb
out
cmpb
jbe
mov
xchg
pop
loopnew
and
pop
mov
xchg
out
push
push
cmp
ret
inc
testb
mulb
in
inc
push
mov
cmp
leave
or
lret
sbb
orb
mov
fildl
add
mov
aaa
cmp
mov
loop
movsb
inc
inc
lcall
add
or
push
xor
lds
sub
lret
push
push
cmpsb
int
movsl
jge
cs
push
aaa
popl
notb
sbb
sbb
push
fs
dec
ret
cmpsb
shll
or
xlat
stos
negb
mov
iret
pusha
repnz
es
push
out
stos
xor
mov
xlat
les
pusha
jp
shlb
inc
cmc
mov
xchg
cmp
out
xor
jno
sbb
or
pop
push
cmp
pop
xchg
sbb
adc
jns
dec
sbb
pushf
fwait
test
sub
ljmp
mov
xor
mov
ret
inc
inc
xor
fyl2xp1
pop
out
and
arpl
lahf
mov
hlt
clc
dec
outsl
jae
jl
arpl
sbb
mov
pop
push
inc
sbb
sbb
push
fstpl
pop
stos
out
xchg
sub
rep
sahf
test
inc
sub
jmp
dec
pop
cmp
xlat
mov
xchg
dec
hlt
es
dec
test
ret
xor
xchg
mov
pop
andl
add
mov
das
mov
sbbb
mov
push
and
sbb
rorl
movsb
add
push
lret
imul
or
adc
dec
int3
jle
iret
mov
xlat
xchg
mov
or
pop
gs
mov
mov
lar
notl
scas
jnp
stos
adc
repnz
mov
adc
ret
push
rcr
sbb
mov
xchg
jl
clc
arpl
jne
int3
outsl
lret
xchg
mov
scas
and
sub
pop
xor
jbe
out
dec
jp
fistl
xor
cmpl
mov
adc
push
dec
cmp
sbb
pop
pop
aam
mov
lret
cmp
sti
icebp
clc
cmp
or
pop
imul
movb
or
aas
mov
sub
imul
inc
shrl
test
inc
push
mov
fsubs
insb
out
xor
fists
imul
insl
jno
sbb
push
dec
pop
xor
ja
xchg
pop
sub
dec
jno
xlat
cld
add
aas
in
mov
sub
cmp
mov
mov
cmp
lret
push
in
lahf
jne
aam
mov
pop
sbb
xchg
out
mov
sar
mov
sti
cmp
pop
dec
shll
jmp
arpl
mov
mov
lcall
fildll
jbe
push
dec
test
inc
sub
mov
adc
lcall
int3
dec
push
jne
test
ss
push
mov
iret
mov
cmpsl
daa
fmuls
and
xor
push
bound
pop
pushf
cmp
call
je
adc
cmp
aaa
and
pop
imul
sbb
cmp
inc
mov
fildll
ficomps
sbb
sub
push
jle
pop
in
jae
cmp
or
nopl
inc
push
sbb
inc
xchg
or
scas
aam
adc
jmp
not
arpl
jno
fidivrs
cmpsb
fldenv
inc
movsb
or
out
xor
popa
mov
jmp
pop
arpl
mov
sbb
insb
fisubrl
or
xchg
sub
and
xor
repz
outsl
dec
xchg
loope
cwtl
mov
xchg
mov
mov
outsl
inc
pushf
sbb
mov
inc
sbb
pop
cwtl
repnz
mov
xchg
outsb
sub
add
sahf
pop
or
pop
fdivrs
or
xor
cmp
or
prefetch
enter
mov
jp
test
stos
fsubs
fcmovnu
je
xor
dec
ljmp
lods
pop
mov
leave
dec
jmp
and
sahf
rep
andb
in
stos
lret
inc
jmp
clc
and
xchg
out
mov
pop
xchg
jmp
dec
ret
iret
add
sub
jns
gs
sbb
jne
scas
seta
add
xchg
sub
movsl
andb
sub
mov
xor
add
or
paddsw
jl
sbb
dec
sbb
sti
cs
jb
xor
notb
mov
cmpsb
push
out
pusha
mov
pop
outsl
dec
add
mov
xchg
push
push
or
add
cli
inc
aad
and
xchg
sub
icebp
rorb
aas
cmp
and
sub
jns
int3
xor
lods
pop
daa
orb
out
es
data16
loope,pn
repz
jno
lds
int3
sub
add
cmpsl
push
sbb
std
cmpsb
mov
jmp
fistpll
js
fildll
inc
add
ja
js
stos
pushf
xlat
mov
rcrl
dec
adc
cmpsl
mov
mov
xchg
push
in
jnp
mov
inc
jl
scas
jno
mov
xor
jp
adc
stos
mov
pushf
aaa
cmp
adc
dec
xor
stos
dec
shrb
or
fs
int3
inc
mov
mov
push
mov
jns
mov
cmpsl
nop
sti
inc
push
sti
add
xor
mov
ja
cmpb
xor
jmp
insl
lret
fiaddl
movsl
sahf
mov
add
sti
and
les
pop
dec
mov
sarb
int3
call
jmp
and
shl
stos
pop
xor
das
sub
cli
jb
push
dec
and
notl
mov
mov
xchg
aaa
or
test
add
in
sub
ffreep
cmp
test
cmpsl
push
adc
lea
sbbl
dec
cmp
js
andb
inc
adc
shrl
inc
mov
adc
ret
xor
cmpsb
cwtl
fimuls
int3
cmp
adc
dec
jmp
xchg
push
adc
cmp
add
push
push
jge
adc
mov
cmp
mov
and
into
test
sbb
inc
es
sbb
lahf
add
bound
cmp
add
enter
addb
jp
jecxz
cmc
aam
dec
into
cmpsl
fwait
jno
int3
into
fs
xchg
int3
stos
or
scas
mov
cmp
les
pop
inc
gs
std
aaa
adc
dec
inc
mov
sbb
inc
movsb
jo
fimull
pusha
mov
push
xchg
jo
sti
jge
xor
cli
cwtl
dec
mov
pop
roll
inc
push
fs
iret
dec
and
push
sti
sbb
popf
pusha
orl
mov
inc
mov
inc
es
mov
cmp
pop
lahf
pop
and
outsl
dec
add
lret
or
in
xor
leave
jb
xchg
scas
sbb
repz
pop
test
incb
push
and
inc
insl
jecxz
pop
in
and
or
push
and
movsl
pusha
xchg
repz
sti
test
fnstsw
movsb
mov
outsb
xchg
repz
inc
inc
jns
xchg
xor
repz
outsb
sti
and
mov
ss
out
dec
add
in
sub
int3
cltd
inc
rolb
xchg
xchg
pop
loopne
inc
clc
dec
xor
ret
dec
shlb
and
std
dec
adc
mull
dec
popf
jmp
aaa
ret
or
mov
movsl
and
les
scas
dec
fistpl
mov
jne
mov
adc
push
clc
negl
and
addr16
adc
fxch
cwtl
es
dec
fs
aaa
mov
dec
jmp
test
mov
and
add
and
and
das
jge
mov
addr16
mov
fdivr
add
dec
ja
pop
pusha
imul
mov
loopne
test
lock
add
loopne
dec
xchg
xchg
or
push
push
dec
jl
cmp
pop
cltd
cmpsl
ljmp
or
xor
dec
push
lcall
scas
dec
subl
icebp
jge
jno
mov
int3
sub
lds
shll
cmp
decb
fwait
push
sbb
add
out
or
inc
pop
add
stc
cmpsl
and
ds
mov
ss
les
stos
push
jo
push
ret
popa
xchg
int3
dec
test
outsl
int
bsr
mov
loop
jl
or
xchg
mov
loop
dec
or
pop
pop
xchg
iret
push
fstpl
pop
inc
clc
and
dec
loope
enter
mov
and
xchg
xchg
insl
test
mov
popa
dec
rclb
js
js
inc
js
cwtl
mov
dec
inc
imul
pop
or
lods
repnz
stc
xchg
adc
aaa
jb
cmpsb
outsb
cmp
xchg
add
add
cmp
les
call
pushl
add
mov
popa
sub
push
add
popa
or
cltd
stos
insb
pop
xlat
add
or
or
xlat
jns
in
inc
pusha
cmp
jbe
mov
pop
jb
pop
cmp
or
es
mov
mov
jne
pushf
addl
fcomip
push
mov
inc
call
and
in
not
ja
mov
out
loopne
pop
fwait
bound
shll
xor
jp
mov
pop
pusha
das
popa
das
add
pop
or
loopne
add
pop
and
push
cld
pop
fsts
imul
mov
or
push
or
data16
mov
iret
fldenv
cltd
mov
cwtl
fstps
test
in
or
mov
icebp
test
shrl
push
daa
jbe
sbb
sub
jp
dec
insl
pop
int3
addr16
loop
mov
xor
ss
addl
fnstsw
push
add
mov
xor
xor
cmp
rorl
sbbb
push
pop
loopne
cli
pop
sub
mov
test
add
mov
jge
xchg
inc
sbb
rcll
repnz
cmp
mov
shl
mov
inc
popf
out
pop
jmp
mov
add
sub
and
test
lds
push
lahf
mov
scas
repz
sub
xchg
mov
cmp
out
xorb
mov
idivl
and
ret
loope
cli
test
mov
push
add
dec
sbb
mov
lock
fcompl
mov
add
lret
dec
pop
mov
push
mov
fwait
sbb
andb
cmc
or
jge
and
adc
int
or
or
daa
push
movsl
and
ljmp
jp
lcall
int
clc
and
rcrl
push
mov
lret
sub
lds
int
mull
add
imul
mov
fsts
mov
push
push
aam
pop
mov
cmpsb
std
or
lret
mov
cwtl
mov
pop
push
sbb
not
adc
mov
xor
test
aam
ret
aam
mov
mov
loope
fdivrp
or
and
out
push
sahf
lea
or
adc
push
dec
push
push
stc
or
jb
push
sub
lahf
pop
xchg
xchg
pop
jae
inc
rolb
daa
push
movsb
sub
frstor
cmp
jnp
push
and
dec
sbb
arpl
adc
sbb
aad
cltd
push
xor
push
mov
lods
push
gs
adc
push
mov
jecxz,pt
loop
cmp
pop
dec
xchg
mov
enter
mov
add
lret
mov
mov
inc
lret
adc
adc
mov
pop
cmp
sti
xor
jge
pop
movsb
or
adc
push
inc
imul
xor
out
cmpsb
ret
hlt
cmp
mov
outsb
pop
ret
incb
dec
xor
or
lods
not
push
or
sbb
and
or
das
fistpl
fdivrs
in
fldt
adc
and
stc
outsl
mov
nop
and
mov
stos
add
js
fwait
jbe
push
adc
out
push
xlat
sarl
das
push
adc
sbb
je
hlt
hlt
jge
test
jecxz
jl
cmp
mov
mov
fucomi
mov
notl
clc
insl
cld
leave
mov
mov
test
in
mov
frstor
sbb
outsl
fld1
sub
aaa
mov
lods
test
sbb
adc
cltd
in
roll
pop
pop
mov
jne
jno
ja
cmpsl
popa
and
cmc
out
xchg
mov
jmp
xor
cmp
mov
lret
in
pop
push
jmp
stc
mov
enter
fistl
inc
add
ret
cmc
orl
adc
mov
int
push
cwtl
mov
imul
sub
stos
adcb
push
ret
test
sbb
shll
mov
gs
or
push
push
out
imul
fdivrp
popf
inc
in
subb
and
mov
andl
inc
flds
mov
and
xchg
cmp
jno
bound
icebp
cltd
adc
xlat
mov
incl
divl
jmp
aam
lcall
jns
and
sub
ret
xchg
div
inc
aaa
mov
lret
addr16
push
mov
pop
sbb
jne
ret
push
stc
jge
and
inc
push
dec
fisubs
pop
cld
outsb
sbb
mov
ror
pop
addr16
das
or
fsubl
mov
xchg
sub
fs
jmp
jb
push
call
imul
fs
sub
mov
push
xchg
inc
in
incb
repnz
fdivrs
push
sar
movsb
and
test
cwtl
call
sub
and
add
out
lea
ret
in
add
dec
loop
inc
into
xlat
push
adc
rcr
jg
jno
mov
and
lds
aaa
push
lds
loopne
mov
movsl
test
fnstenv
push
test
ss
jmp
fstpt
cltd
test
negl
add
mov
pop
add
and
dec
mov
pop
add
imul
jno
lret
add
lahf
aad
and
pusha
and
std
mov
insb
ss
xchg
hlt
push
sbbl
add
fmulp
inc
and
xor
xchg
mov
ret
cmp
lods
imul
lret
push
mov
in
jne
sar
out
nop
int
ljmp
daa
mov
inc
cmc
and
negl
cmpsb
pop
xor
negb
mov
mov
add
xchg
rol
lds
xchg
mov
inc
ljmp
pop
inc
cwtl
xor
jno
ljmp
sbb
mov
imul
or
push
rorb
lods
fcoml
adc
aaa
cmpsl
and
sbbb
push
and
into
enter
mov
sahf
movsb
and
loop
lahf
aad
adcl
or
rclb
repz
or
inc
push
push
push
mov
scas
adc
insb
dec
xchg
aaa
in
call
mov
imul
in
notl
mov
mov
testl
sub
cmp
push
inc
dec
mov
or
jmp
sbb
rcll
inc
ds
sbb
add
addl
or
pop
xchg
lea
xchg
sbb
stc
xchg
fcmovb
daa
sbb
sbbb
ss
cltd
in
cmpsl
jmp
pop
out
cmc
incl
outsl
inc
shll
je
jl
sbb
adc
jge
cmp
inc
push
and
cwtl
sub
xlat
inc
add
and
dec
lcall
ss
sbb
xchg
push
add
mov
into
inc
jl
aam
or
mov
sbb
or
sub
push
movsl
xor
cmpsb
outsb
fstps
dec
inc
stos
mov
mov
imulb
add
loope
jbe
rcll
dec
jne
jbe
cmp
in
sbb
mov
jge
pop
pop
loope
mov
in
jne
fldcw
sub
fs
addr16
cltd
mov
lret
xor
icebp
pop
in
adc
popf
mov
pop
jmp
and
test
in
jo
repnz
xor
add
andb
cs
cmp
mov
fnsetpm(287
jecxz
rorb
mov
js
lods
sub
add
mov
dec
cltd
adc
add
xchg
ret
clc
pop
mov
pop
mov
addr16
cmp
ljmp
cmp
sub
xchg
pop
lock
fisubrl
es
pop
nop
push
lods
clc
mov
jg,pn
push
lods
mov
andl
xchg
test
inc
cmp
in
push
repz
out
decb
inc
mov
iret
cmp
ds
mov
shrb
jb
cmp
test
test
aaa
jp
mov
shrb
pop
dec
popf
insb
inc
add
push
inc
mov
push
out
adc
pop
pop
sub
repnz
cmp
in
ret
or
xlat
add
inc
cmpsl
sub
push
push
adcl
mov
scas
push
cmp
xor
cmpsl
icebp
cmp
push
aad
mov
in
or
popa
jmp
std
dec
fists
test
cmpsl
add
fadd
mov
xchg
add
scas
xor
jmp
fwait
ret
add
in
stos
gs
inc
fsubl
push
test
jmp
lea
jge
or
mov
lods
imul
int
mov
ds
dec
mov
push
xorb
ds
clc
mov
sti
es
fxch
sub
sub
mov
jp
stc
mov
in
push
cmp
in
popa
outsl
jo
mov
mov
xlat
xor
push
and
call
jge
pop
jmp
or
pop
je
and
push
inc
call
scas
ret
cmc
leave
xchg
or
movsb
sbbl
ss
pop
dec
push
ret
mov
inc
clc
mov
out
js
mov
dec
pop
faddl
and
js
sbb
sbb
andb
out
imul
or
int3
shrb
inc
cmp
out
and
sbb
dec
add
sbb
pop
out
dec
out
pop
iret
sbbl
rcrl
inc
in
sub
sub
add
addl
js
cmp
js
ret
leave
ret
sahf
mov
mov
out
pop
negl
adc
test
rcrb
xchg
ror
add
xchg
mov
rol
mov
je
negb
inc
cld
jecxz
pop
dec
pop
ljmp
xor
leave
inc
lock
push
les
mov
jge
jb
jb
pop
mov
imul
shrb
sub
shrb
push
mov
ljmp
mov
jnp
jne
outsb
xchg
jl
ret
popa
mov
and
mov
xchg
gs
cmp
cmp
inc
sbb
pusha
mov
les
clc
fldl
mov
or
mov
les
jno
xor
fists
push
jb
cmp
hlt
or
cmpsb
fimuls
andb
xchg
repnz
dec
push
nop
pop
mov
pop
xor
sub
xchg
fdivrs
xor
pop
mov
or
xchg
in
xchg
mov
into
dec
sbb
and
mov
test
jno
xor
jmp
loope
mov
xchg
mov
sub
mov
or
adc
dec
lret
mov
push
mov
rorb
jecxz
fsubl
add
push
jle
ja
sbb
jl
push
pusha
cmp
ficompl
cmp
jbe
mov
add
xchg
mov
adc
or
add
push
shll
in
out
sub
int3
into
add
aas
iret
mov
xchg
jle
cmc
cmp
and
scas
addr16
pop
xchg
fldcw
nop
aas
push
sti
pop
lret
loop
roll
cmp
add
push
aam
cwtd
inc
jmp
mov
data16
jno
fdiv
shlb
mov
push
int3
pop
jp
sbb
arpl
xchg
sub
stos
je
xorps
jns
sahf
inc
pop
jmp
xor
rcll
and
mov
std
jmp
dec
out
and
sub
add
push
shlb
mov
dec
cmp
adc
mov
lcall
jae
and
mov
addr16
outsb
jp
cwtl
or
test
cmp
cmp
sahf
cmp
lahf
sbb
aaa
jb
bound
dec
les
inc
pop
adc
adc
add
outsl
mov
xchg
jae
cmp
add
test
xchg
sbb
jge
xchg
xor
int
or
mov
push
js
inc
xchg
mov
insl
fisubl
loope
iret
mov
push
jo
xorb
xor
lea
inc
imul
movsl
imul
xchg
sbb
pop
cmp
cmp
stc
mov
sub
rclb
bnd
cmp
pop
pop
jno
jbe
testl
sbb
std
icebp
pop
addr16
jl
fs
push
lods
outsl
lahf
and
mov
inc
sub
out
ds
loop
inc
lea
mov
test
lcall
cld
in
stos
push
cmc
outsl
fsubs
nop
pushf
push
pusha
std
js
sbb
add
xchg
sbb
repnz
fcomps
adc
int3
jp
sbb
xchg
sub
insl
scas
push
subb
push
lock
xchg
xor
push
fdivs
je
les
leave
pop
clc
mov
adc
pusha
inc
inc
pop
mov
inc
jmp
jle
sbb
imul
cmp
mov
pop
cmp
outsb
fiadds
mov
xchg
mov
fiaddl
pop
sbbl
jecxz
adc
xchg
es
lds
sahf
lea
test
fwait
mov
test
imulb
into
movsl
pusha
cmp
jp
xchg
sub
xchg
xchg
or
xchg
rolb
pop
hlt
xor
outsb
loopw
repnz
ror
mov
jns
adc
adc
daa
test
out
loopne
stos
pop
sub
pop
adc
daa
mov
push
and
cli
sub
pop
les
mov
cli
notb
jnp
mov
fnstsw
loope
daa
movsb
js
push
icebp
or
cs
aad
cmp
xchg
daa
inc
push
fcomp
or
lret
cmp
and
cld
out
cwtl
fisttpl
sbb
jge
lea
test
nop
inc
mov
pop
add
in
jmp
dec
out
inc
inc
add
sub
jp
leave
inc
je
test
mov
inc
dec
jmp
mov
xchg
jmp
inc
std
jge
xchg
adc
jo
mov
enter
xchg
mov
into
and
mov
hlt
add
pop
sbb
xor
adc
jae
sub
std
xlat
lahf
and
sahf
lret
jmp
mov
int
add
push
jg
loope
into
cwtl
stos
add
jecxz
popa
cwtl
adc
pop
imulb
enter
outsl
or
mov
lea
sbb
dec
xchg
fsubp
sbb
faddl
cld
xchg
inc
jo
mov
std
test
inc
xchg
xchg
sbb
rorb
fs
in
scas
xlat
imul
je
fidivl
cltd
mov
xchg
pop
in
xorb
jae
addb
es
ret
and
in
roll
cmc
or
cmpsl
fiaddl
out
mov
cmp
jne
sbb
mov
out
push
cltd
sbb
mov
shll
lahf
test
jl
inc
fsts
mov
sbb
pop
jg
hlt
les
add
mov
push
mov
push
out
or
push
pop
sub
jnp
xlat
inc
add
int
mov
mov
int
mov
adc
push
hlt
jecxz
clc
js
mov
shl
mov
dec
shll
dec
das
pop
cmp
lahf
pop
jne
es
movsb
insl
mov
stc
jns
sub
les
iret
shll
dec
sbb
addr16
pop
dec
push
mov
push
imul
in
xchg
js
lret
pusha
clc
mov
xchg
lods
out
out
ret
popa
movsb
push
and
xor
stc
adc
data16
mov
out
popf
mov
inc
cmp
mov
pop
ss
mov
xor
mov
xchg
dec
hlt
adc
mov
adc
out
add
or
xor
xor
xor
loop
mov
mov
rcrl
out
sahf
cmp
sbb
rcrl
and
mov
mov
pop
lods
cmp
shlb
ret
sbb
adc
imul
fs
jge
xor
add
xchg
push
mov
scas
ss
push
cmp
mov
ja
xlat
nop
pop
sbb
lret
or
add
call
imul
nop
test
push
mov
cmp
push
sbb
dec
add
sbbl
sti
icebp
test
std
shlb
push
push
and
dec
call
mov
jmp
add
sub
lds
mov
imull
lea
push
sbb
jmp
lods
xchg
xchg
movsl
mov
cmp
mov
movsl
int
and
imul
push
sbb
mov
out
cwtl
mov
dec
jl
scas
outsb
cmp
add
into
sti
pop
jae
pop
fidivrl
inc
jp
jmp
push
ja
jg
daa
stos
dec
sub
xor
sbb
cmp
lea
js
or
mov
inc
inc
jp
sarb
rolb
cmp
push
bound
popf
dec
rclb
andb
jge
daa
dec
pop
xchg
das
pop
xor
lods
aam
mov
bnd
adc
lret
cmpb
mov
inc
add
fs
cmp
inc
sub
ret
sub
xchg
notl
pop
sub
inc
jg
inc
mov
add
inc
sbb
fsubs
movsb
lds
mov
adc
dec
xchg
aas
dec
loopne
lcall
pmullw
mov
mov
leave
ss
adc
push
stc
inc
xchg
clc
xlat
repz
call
xchg
sub
or
mov
push
es
cmpsb
sarb
pop
testb
inc
jge
add
sub
adc
jnp
popa
mov
cmp
ljmp
push
out
mov
mov
icebp
mov
sbb
xchg
orb
mov
sti
insl
adc
mov
or
data16
cmpsb
add
fidivl
inc
dec
push
push
ds
test
mov
popf
in
outsb
ja
cmp
mov
aas
sub
icebp
dec
gs
dec
cwtl
pop
mov
cmc
repnz
xchg
mov
pop
sbb
push
fs
mov
dec
movsl
rorl
dec
lds
sbb
dec
dec
idivl
leave
outsb
in
jno
sbbb
push
push
sub
ret
lret
mov
xor
repz
adc
sbb
outsl
gs
fs
test
jg
adc
mov
push
ja
out
cmp
push
inc
pusha
mov
jg
aad
fwait
out
dec
std
ljmp
xchg
lods
xchg
cmpsl
mov
dec
pop
ds
push
lret
fs
icebp
outsl
sub
test
mov
jecxz
mov
loope
js
call
test
mov
xor
push
fs
stos
jl
andb
push
lcall
jbe
mov
lahf
sub
call
inc
aaa
lds
add
jg
inc
push
popa
jle
call
mov
jge
fistpll
repz
dec
mov
and
inc
and
or
js
jmp
or
sti
cmp
adc
in
call
mov
loope
pop
inc
xlat
cmpl
lea
aas
scas
sbb
adc
and
iret
mov
jmp
push
push
pushf
jl
fists
sub
xchg
cmc
loope
mov
xlat
in
rol
cmpsl
mov
int3
shrb
mov
jnp
mov
movsl
xchg
loop
jg
popf
iret
jge
jnp
pop
sbb
mov
int3
pop
out
test
add
adc
cltd
fstl
pop
iret
inc
push
cs
insl
inc
mov
push
mov
addl
mov
inc
call
pop
xchg
addr16
rol
shlb
mov
mov
iret
sahf
out
mov
sbbl
inc
repnz
dec
insl
ret
loope
or
fisubl
dec
lret
imul
nop
lret
push
int
ret
inc
xchg
xor
jae
pop
jge
das
pop
xorb
jmp
and
xor
mov
out
xor
add
jae
cmp
ja
insl
std
jecxz
test
mov
sub
scas
add
or
es
loopne
int
insl
es
dec
pop
xchg
cmpl
mov
jb
push
insb
jmp
sub
mov
adc
mov
loop
int3
mov
xor
shll
rolb
arpl
dec
mov
mov
cmp
gs
ret
mov
ror
and
pop
shll
sbb
xor
lods
inc
jp
bound
insl
rclb
repz
mov
and
je
cs
mov
or
inc
in
call
push
pusha
mov
and
and
lcall
mulb
push
int3
frstor
sub
pop
aaa
sub
lods
sub
dec
movsb
cwtl
mov
mov
and
push
push
lret
fldl
xor
pop
mov
popa
cs
cmp
adc
pop
add
shrl
dec
push
push
mov
cli
sbb
decl
adc
lds
add
imul
popa
jg
pusha
loope
bound
aaa
jl
jg,pt
push
and
xchg
test
les
adc
jg
push
repz
inc
jl
push
pop
inc
loop
rorl
stos
push
fwait
cld
fdivl
add
pop
adc
fcoml
sbb
cltd
cmp
adc
sub
imul
jmp
les
pop
stc
sbb
jecxz
adc
mov
mov
cmpsl
mov
mov
xchg
pop
fs
push
cmp
test
jecxz
push
mov
icebp
xor
ror
ljmp
idivl
int
inc
test
in
push
cmp
mov
pop
and
adc
jno
in
js
imul
js
adc
xor
dec
aaa
jbe
rcrb
xchg
out
stc
xchg
pop
mov
jge
mov
cmp
pop
les
out
out
jno
test
gs
int
fsubs
gs
ja
jne
jb
inc
lock
cli
lahf
ret
loope
in
sub
pop
jno
dec
jl
pop
sub
xor
or
scas
outsl
sub
sub
mov
call
lahf
add
test
dec
aad
imul
in
sub
adcb
mov
jns,pn
cmp
pop
xlat
lods
fdivs
sahf
enter
and
cmp
dec
pop
cmp
push
mull
mov
stos
mov
jp
mov
mov
das
or
add
imull
mov
cmp
dec
xor
mov
and
jp
filds
xlat
shll
lret
shlb
mov
mov
pop
ljmp
aas
or
dec
das
mov
jns
jne
pusha
out
inc
into
jmp
xchg
arpl
adc
in
or
aam
aad
insl
xchg
ret
rcl
imul
out
lret
or
jge
mov
dec
xchg
scas
xchg
mov
insb
int3
mov
push
mov
jns
in
pop
jbe
aam
inc
adc
lds
xchg
leave
mov
pop
inc
jle
std
lahf
push
push
xchg
mov
imul
dec
in
xchg
cli
fsubrp
xor
xchg
pop
test
adc
inc
outsb
data16
insl
mov
pop
add
mov
xchg
cltd
std
inc
mov
shlb
rcrb
jnp
and
cmp
dec
scas
push
xor
shrb
add
cmpsl
pop
xchg
insl
ljmpw
mov
outsl
push
jno
inc
dec
lahf
sahf
invd
mov
cmc
xchg
cmp
ljmp
jmp
dec
in
in
adcb
sar
insl
and
sti
inc
push
sbb
sbb
mov
aam
jo
lock
repz
cltd
cmp
add
mov
or
inc
aam
lock
jb
gs
push
repz
mov
lret
jb
iret
push
pop
xor
jo
fwait
in
or
sub
icebp
sbb
fs
aas
in
mov
cmc
xor
data16
std
dec
cld
jmp
cmp
cmp
mov
mov
lea
push
jmp
sbb
inc
mov
push
or
jmp
and
push
jo
fsubrl
scas
movsb
insb
xor
push
pop
sbb
jmp
daa
push
cmovl
push
mov
cmp
loop
sbb
loope
add
push
sub
xor
lret
lcall
sbb
rclb
out
xchg
mov
clc
cltd
out
js
dec
leave
shll
subl
lahf
sbbb
sbb
das
sbb
or
mov
in
dec
call
inc
pop
inc
sub
sbb
cmp
xchg
push
mov
lods
dec
sahf
sti
pop
js
aam
outsl
xchg
mov
movsl
in
negl
pop
dec
jns
push
loopne
enter
dec
and
mov
sti
inc
xchg
icebp
divb
dec
sbb
jbe
cmc
push
enter
mov
bound
and
sti
orb
int3
insl
rolb
jnp
pop
inc
popl
push
jmp
or
ffreep
push
add
sbb
test
sti
icebp
jo
pop
and
sub
fwait
push
cmp
in
cli
orl
lahf
test
jbe
push
in
push
inc
shrb
ret
std
xor
inc
out
push
mov
sbb
pop
xchg
cmp
incl
xchg
jp
call
shrl
jle
std
in
lods
repnz
pop
inc
dec
rcr
push
stc
lahf
adc
mov
sbb
mov
testl
dec
shrd
mov
std
pop
mov
xchg
pop
decl
xchg
mov
rcrb
sti
leave
lock
fisttpll
mov
ds
add
dec
rorb
ret
je
xor
or
and
repnz
mov
pop
jb
aas
cmp
int3
xchg
das
adc
push
out
hlt
and
or
into
push
scas
iret
add
adc
mov
mov
add
dec
dec
sub
and
mov
pop
jle
cmp
aaa
inc
lea
pop
and
mov
jp
xchg
mov
cmpsb
mov
mov
into
inc
out
xchg
fxch
das
pop
test
in
imul
mov
stc
mov
sbb
jne
adc
push
scas
cmp
or
push
xchg
pop
sbb
stos
pop
adc
test
sub
inc
add
in
jno
fwait
cmp
rorb
mov
imul
nop
mov
lds
sub
test
loopne
xor
fcompl
push
mov
in
jo
cmpsb
jl
iret
mov
jg
lcall
cmpsl
js
mov
out
and
sub
or
out
int3
lret
mov
cmp
pop
inc
into
sbb
loope
fistpl
mov
or
add
int3
add
and
xlat
loope
mov
xor
addl
mov
dec
repnz
mov
jns
push
inc
bound
es
fnsave
sti
jmp
xorl
leave
dec
push
outsl
movsb
sub
cmp
insb
push
fsubl
data16
sti
xlat
inc
out
outsb
lods
mov
push
mov
stc
xchg
movsb
push
ret
ror
out
dec
inc
mov
loopne
xor
ja
jmp
jp
mov
daa
push
push
jae
jno
inc
les
outsb
xor
push
je
popf
mov
call
pop
and
cmpsb
sbb
mov
cli
jle
lea
mov
mov
data16
and
push
test
xor
mov
sbb
jns
clc
push
iret
popa
pusha
orl
mov
add
cmpsb
sahf
in
push
jno
push
test
das
mov
jle
push
sbb
test
jnp
fimull
out
mov
xchg
popa
pop
jle
adc
or
jnp
lcall
or
in
inc
mov
adc
xor
xchg
outsl
insl
or
xor
xor
jl
jmp
inc
bound
fcomi
arpl
sub
xchg
sbb
xor
test
mov
mov
xor
flds
repnz
jb
out
rolb
jmp
mov
cwtl
jns
call
mov
rcr
push
or
sahf
add
mov
inc
dec
sub
push
sub
outsl
jnp
punpckhbw
adc
jbe
push
andl
xor
imul
mov
pusha
adc
adc
xor
aas
int
repnz
pop
dec
sub
xchg
mov
adc
sti
iret
out
xor
pusha
movb
mov
call
xlat
out
push
pop
jae
xor
lds
xchg
iret
in
sub
addr16
insl
sarb
fisttps
and
pop
or
cmpsb
cmp
lret
add
mov
add
in
mov
jnp
and
jle
mov
push
xlat
aam
jno
arpl
jns
or
mov
push
adc
lds
outsl
xchg
pop
sub
mov
divb
xor
pop
leave
js
jge
adc
test
ds
cmpsb
fwait
mov
arpl
rclb
bound
scas
loope
imul
inc
jecxz
les
hlt
test
mov
call
lods
mov
xor
xchg
les
imul
xor
insl
sahf
mov
push
add
jnp
shr
pop
outsl
mov
sub
cld
fs
idiv
xchg
inc
sub
repz
adc
mov
sub
cmpsb
pop
fidivrs
jno
lods
fisttpl
fcmovbe
test
xchg
ljmp
ror
jnp
aaa
or
adc
dec
shll
push
lods
mov
mov
movl
ret
cwtl
imul
shll
adc
lret
aad
ljmp
dec
mov
sarl
push
cli
mov
repnz
dec
push
sbb
and
stc
push
mov
test
xor
test
xchg
inc
cmp
in
in
scas
xlat
lods
test
int3
clc
dec
xlat
push
leave
loope
pop
push
outsb
cmp
mov
aam
inc
test
mov
cli
cmpsl
arpl
mov
and
adc
xor
mov
pop
daa
jg
sub
ret
stos
in
push
jl
jno
movsb
jg
inc
xor
push
mov
stc
lahf
or
btr
pushf
push
xor
pop
xchg
fwait
lock
popf
xor
fucom
push
add
and
jg
mov
loope
bound
add
xorl
aam
push
lods
shlb
or
int
lcall
jb
jns
test
lret
int
xchg
dec
inc
jmp
gs
or
clc
jle
xchg
popf
bound
out
jbe
jmp
cmp
pop
loope
mov
mov
and
rcr
lock
pop
cmp
cmp
sahf
add
movsl
scas
adc
push
xchg
bound
in
pop
xor
xchg
cmpl
dec
lods
mov
push
daa
sbb
mov
daa
pop
xor
ss
jne
stos
js
fucom
popf
out
adcl
pop
out
bnd
cli
add
scas
mov
fcoml
mov
jno
aad
jno
movsb
mov
lret
lds
push
andl
into
out
cmpsl
aad
sbb
adc
cmp
cmp
add
mov
mov
mov
fildll
xchg
push
shr
insl
jg
stos
ret
cmp
out
mov
or
test
push
or
mov
ficomps
jecxz
jno
sarl
fcomip
jmp
xor
sbb
pop
mov
add
lods
push
insl
mov
movsb
popf
hlt
data16
or
or
mov
nop
hlt
rcrl
vpmullw
mov
adc
lods
adc
jo
sahf
ds
add
adc
ficoms
aas
or
dec
mov
popf
and
lods
cltd
xchg
popf
loopne
popf
jecxz
add
dec
mov
cmp
out
xchg
test
mov
test
cmp
cwtl
sub
rcll
sub
stos
std
inc
jno
add
inc
les
jnp
and
and
call
xchg
and
mov
imul
cli
adc
jno
pop
mov
pop
shlb
and
div
enter
jmp
in
mov
jne
ret
insl
add
or
xorb
int
jb
nop
ret
idivb
push
std
rorl
in
mov
mov
xor
xor
push
cmpsb
mov
shlb
sbb
nop
jmp
rclb
xchg
inc
nop
push
mov
xchg
jo
movsl
insb
and
adc
pop
xchg
inc
sbb
sti
add
in
ret
fucomip
dec
in
adc
insb
jbe
dec
sbb
das
into
dec
cmc
icebp
mov
push
mov
fs
lea
ffreep
mov
xor
fcmovb
inc
icebp
cmp
mov
adc
insb
mov
lods
test
outsb
xchg
fisubl
rolb
stc
jmp
xchg
jbe
or
ja
js
fs
mov
mov
mov
xchg
push
pusha
mov
lcall
ds
fimull
cmp
sbb
inc
mov
and
ljmp
add
and
or
push
mov
inc
stos
mov
test
push
test
aas
pop
popa
cmp
push
push
test
mov
and
cld
fsub
sub
out
dec
push
inc
jns
cli
adc
sub
pop
push
sbb
fs
cs
les
adc
test
inc
faddp
jne
push
leave
inc
out
push
aas
dec
cmp
xchg
mov
mov
es
daa
insl
add
adc
push
push
dec
and
xchg
in
or
jle
insl
mov
imul
jle
cmp
and
loope
std
shl
inc
decl
sahf
push
adc
or
int3
inc
data16
jns
xchg
xchg
nop
cmpsb
fucomi
pop
cmp
mov
xchg
xor
mov
jno
jg
push
cwtl
push
inc
pop
add
mov
aad
mov
cmp
cmpsb
or
pop
push
mov
pop
in
jbe
pop
adc
mov
bound
pop
sbb
gs
mov
dec
imull
repnz
into
stos
mov
mov
xor
pushf
mov
add
mov
aam
and
and
popf
icebp
mov
es
mov
insb
lods
fistps
sbb
jb
bt
cli
mov
or
jno
mov
dec
ret
leave
pusha
lock
xchg
xchg
cli
sub
daa
sub
pop
mov
add
or
cltd
movsl
rolb
aam
mov
sbb
jecxz
rclb
in
enter
or
mov
mov
fs
push
push
mov
inc
adc
ja
jl
xchg
lods
xor
xchg
cmp
mov
stc
les
movsb
out
repz
mov
and
bnd
mov
mov
pop
jge
in
jae
mov
fistl
and
ja
mov
push
scas
mov
jmp
pop
leave
cmp
mov
push
fbstp
test
lcall
sbb
jl
adcb
dec
or
mov
notb
pop
or
ja
lds
push
rorl
mov
pop
pslld
nop
into
icebp
inc
vshufpd
pop
dec
sbb
and
mov
popf
dec
and
ja
fisubl
pop
js
mov
ss
add
mov
and
xor
es
push
rorb
and
repnz
push
inc
sub
aam
loope
inc
lret
jno
scas
pop
sbb
rdmsr
sbb
stos
cld
aas
fmull
sbb
jmp
pop
stos
sti
jns
cmp
xchg
lahf
push
xor
popf
lret
mov
and
test
xchg
arpl
push
push
or
cmp
pop
dec
aas
mov
bound
inc
shlb
loopne
fcoms
or
jle
sub
dec
push
xor
daa
jl
jge
das
mov
push
stos
mov
sarl
push
mov
shll
sbb
pop
jns
movsb
jmp
outsl
sbb
ja
jno
or
push
add
das
ja
adc
pop
or
push
dec
movsb
idivb
or
cmp
or
adc
sbb
push
mov
and
loopne
mov
sbb
xchg
lea
pop
pop
in
mov
adc
fxch
pop
jnp
pop
add
fisttpll
js
push
mov
lock
ret
ss
out
cltd
mov
gs
ss
imul
mov
xchg
cwtl
aas
and
call
xor
pop
outsl
xor
in
lods
pop
dec
or
ja
cmc
imul
imul
dec
ret
mov
adc
mov
xchg
push
or
jge
xchg
lret
lods
xchg
cmc
push
loopne
aad
nop
or
aas
jb
lods
add
mov
mov
lahf
sbb
adc
out
out
add
sbb
sub
mov
xchg
repz
pop
pop
xor
es
pop
cwtl
dec
sbb
sbb
repnz
cmp
sbb
sbb
lods
mov
lods
add
out
ljmp
ljmp
arpl
jnp
mov
sub
xor
mov
inc
out
mov
fdivrs
add
enter
adc
ret
mov
cmpsb
jae
push
jl
push
std
cli
negl
xchg
xchg
pusha
aas
test
mov
sbb
popf
iret
and
sti
test
mov
dec
sbb
add
insb
dec
dec
shrb
cmp
idivb
sub
and
mov
mov
pop
and
out
pop
inc
lret
pop
sbb
inc
in
dec
nopl
mov
lods
mov
jns
iret
pop
mov
or
mov
lods
jae
add
rcl
jl
or
add
mov
or
ss
mov
inc
xchg
mov
fisttpll
ret
xchg
push
stc
mov
xor
dec
fwait
jno
fadd
cmpsl
loope
mov
pushf
mov
inc
jg
test
lret
fistps
lret
imul
inc
test
mov
mov
push
cmp
das
sbb
mov
pop
rcl
and
jecxz
aam
test
push
lods
shl
mov
xor
or
test
pop
inc
sbb
pop
imul
push
orl
sahf
sub
inc
ror
loopne
lret
sbb
inc
aam
push
aad
xlat
test
repz
in
inc
add
pop
sbb
pop
js
js
and
test
enter
lcall
pop
and
fistpl
psrlq
sbb
lods
into
lcall
xchg
xchg
in
or
inc
bound
mov
lcall
sahf
rcr
bound
cmpsl
mov
sub
push
rol
dec
bound
gs
xor
sub
cld
test
mov
sahf
pop
jbe
or
sbb
repz
mov
add
cmp
nop
or
inc
js
push
outsl
fisubrl
mov
stos
lods
pop
fldt
jae
pusha
mov
xlat
xchg
clc
push
push
xchg
or
pop
aad
add
push
rolb
push
and
sarb
orl
jnp
pop
dec
mov
rol
cmp
push
push
and
out
xchg
sbb
inc
xlat
mov
xchg
push
add
inc
popf
roll
sbb
inc
out
imul
sub
xchg
sbb
mov
and
mov
insb
or
and
ss
xchg
std
xor
jge
or
mov
dec
fs
cmc
jge
js
rcrl
adc
or
outsb
inc
rcrl
loop
data16
xlat
dec
inc
sbb
jb
fistl
add
push
sub
xor
mov
in
lods
lods
sti
fstl
fsts
mov
push
mov
push
jne,pn
mov
dec
add
je
push
sbb
fst
sbb
xchg
mov
outsl
mov
int3
mov
ret
xor
dec
insl
dec
mov
pop
sahf
or
lret
adc
shrb
pop
jge
push
xchg
adc
or
stc
jg
sbb
imul
addb
cli
jecxz
std
jl
jo
lock
push
dec
jns
cli
pushl
pop
mov
mov
adc
xor
in
ret
inc
xchg
add
call
and
xchg
sbb
sbb
lods
mov
mov
push
mov
lahf
and
push
pop
pop
outsb
xor
adc
loopne
xchg
idivb
dec
popa
adc
sbb
jmp
movl
scas
mov
cwtl
stos
pop
dec
sbb
sbb
jbe
jns
pop
sub
sub
lods
adc
or
pop
scas
jo
fcompl
mov
adc
push
add
stos
ficomps
mov
pop
inc
jle
and
xchg
add
fmul
into
pusha
pop
push
inc
stos
inc
cs
sti
or
ret
ret
in
fstps
push
adc
insl
jns
outsl
in
adc
int3
push
imul
inc
mov
jae
popa
mov
adc
jge
into
cmc
std
dec
push
xchg
fcmovu
mov
aaa
add
or
loop
jp
shrb
sbb
xor
sbb
adc
push
data16
ja
mov
les
jp
push
jge
mov
orb
xor
stos
add
lods
fsubrp
xchg
dec
cmp
insl
mov
jmp
push
sahf
inc
fmulp
or
dec
pop
xchg
add
mov
pushf
dec
xchg
xlat
cmp
std
loopne
sub
fs
xchg
jne
jnp
inc
sbb
pusha
enter
pop
jb
pop
sub
add
dec
loopne
sbb
cltd
pop
ret
addr16
adc
push
and
test
add
js
scas
addr16
outsb
pop
aad
andb
ds
dec
push
loope
insb
pop
stos
xchg
fs
cmp
mov
mov
sahf
mov
xchg
push
pop
pusha
sub
xchg
and
fucomi
cltd
xor
and
push
incb
inc
cwtl
or
iret
cwtl
mov
xchg
xchg
in
sbb
xor
sub
aas
fcmove
int3
cmpsb
fs
sahf
enter
add
push
shl
pop
xor
sti
ss
lock
push
and
stos
xor
mov
movsb
aad
inc
adc
clc
enter
lret
notl
loope
test
add
pop
repz
gs
mov
pop
sub
mov
ret
inc
scas
std
dec
je
pandn
dec
cmp
js
mov
and
adc
sub
mov
xchg
stos
jl
scas
pop
jp
jbe
lret
dec
enter
add
pop
icebp
in
pop
int3
rcr
pop
shrb
repz
mov
fsubp
pop
sub
cmp
pop
xchg
adc
lock
lea
loopne
pusha
cmp
sarb
add
jl
popa
mov
and
movsb
add
xor
mov
adc
inc
or
ror
aaa
orb
xor
push
fwait
arpl
sarl
mov
mov
loop
adc
mov
insl
mov
scas
cs
jb
cmp
les
pop
fnsave
sub
sbb
and
fdivs
jae
stos
mov
out
repnz
xor
mov
cmp
loop
test
push
fimuls
mov
cmp
push
popa
sub
mov
rcrl
jnp
pop
add
call
dec
loop
imul
das
cmp
test
int3
insb
dec
adc
cld
jnp
adc
add
or
sub
jo
mov
or
pop
cltd
cli
cmc
mov
xchg
sub
rorl
inc
stos
mov
mov
ljmp
jne
sbb
mov
iret
leave
stos
xlat
outsb
adc
scas
pop
ja
xchg
push
imul
sbb
cmp
fildll
cli
lock
ljmp
lret
pop
int3
iret
xor
in
inc
mov
dec
push
jecxz
inc
fmull
jbe
and
imul
cmp
xchg
lods
push
mov
insb
mov
outsl
push
xor
dec
or
movsb
add
and
hlt
xor
inc
push
sub
pop
in
jp
push
fmuls
pop
xorb
sub
dec
arpl
repnz
je
dec
dec
mov
aam
sub
inc
mulb
mov
out
mov
test
cmpsb
js
or
dec
jmp
mov
sbb
fidivs
in
repz
mov
jnp
xor
fisttpl
xchg
cmp
push
push
psubq
dec
jl
inc
dec
ja
push
leave
stos
in
popf
ror
notb
repnz
dec
xchg
outsl
jbe
inc
lret
mov
fmul
jo
fisubrs
xchg
jg
mov
and
fxch
sarl
dec
mov
adc
sub
subb
mov
mov
push
sub
ja
mov
mov
xchg
addr16
push
and
sti
mov
imul
ror
xchg
push
pop
push
jbe
mov
push
rol
in
popf
cld
test
sub
xor
mov
sub
insb
xchg
subb
xchg
and
push
aas
push
outsb
insb
xchg
mov
mov
xor
addr16
nop
dec
xor
mov
gs
add
jle
scas
in
nop
loop
ror
jmp
orb
mov
cwtl
xchg
es
xor
jp
iret
cmpsb
clc
pop
adc
mov
fisubs
lds
xchg
jns
jns
aaa
jg
popa
stos
inc
inc
mov
pushf
rol
xchg
stc
sub
lods
mov
sbb
push
xchg
jbe
les
and
adc
pop
dec
daa
jp
lea
sub
cmpsb
daa
enter
mov
adc
out
orb
xchg
iret
or
xchg
dec
lret
sti
stos
lods
imul
and
push
popa
adc
mov
jg
fcmovnb
ss
loopne
inc
mov
adcb
das
adc
dec
sbb
repz
test
jp
mov
push
out
in
dec
cmp
leave
clc
das
stos
xchg
xchg
out
pop
call
xchg
cmpsb
inc
cmp
xchg
push
fs
sbb
shll
inc
ljmp
enter
repz
mov
ljmp
iret
scas
arpl
test
or
jno
sub
sar
bound
mov
inc
insb
push
pusha
lret
clc
jp
jo
pop
xor
lcall
add
fidivrl
xchg
je
nop
pop
pusha
iret
pop
iret
out
cwtl
icebp
mov
mov
push
and
inc
or
mov
mov
sub
fsubrs
mov
inc
imulb
and
mov
sub
mov
jb
outsl
mov
xor
stos
fs
cmp
push
push
jmp
in
rolb
ss
mov
aas
mov
sbb
lock
in
rcr
push
jp
sti
pusha
jnp
das
out
adc
xchg
loope
cli
andl
xor
int
push
movsl
rolb
xchg
stos
mov
pop
test
xchg
sbb
negb
pop
test
fmull
push
jp
jbe
push
lcall
xchg
sub
addr16
mov
in
es
mov
jo
pop
mov
fcmovnbe
add
int3
mov
xchg
loopne
addl
out
out
inc
fidivs
enter
jne
adc
mov
fidivrl
mov
cmpsl
or
mov
mov
pushf
inc
mov
pop
xor
xor
stc
jns
call
xchg
clc
leave
add
clc
dec
loopne
push
jp
dec
scas
cmp
ret
movl
notb
bnd
or
roll
sub
and
movsb
push
test
fstl
fiadds
loopne
sbb
or
cwtl
cmp
lds
mov
jp
xchg
adc
stos
push
rol
xor
dec
xchg
cmp
xchg
pop
rorl
testl
hlt
xchg
jmp
out
and
dec
test
sahf
scas
pop
sbb
adc
adc
int3
inc
test
jmp
xchg
pop
test
ret
dec
test
sbb
add
iret
ja
pop
add
push
xchg
sbb
hlt
cwtl
sub
setb
xchg
mov
dec
xchg
aad
xchg
cmc
dec
pop
jmp
jb
test
jae
pop
pushf
cmp
ds
and
xor
push
and
roll
nop
test
cmp
cmp
xor
xchg
aaa
jno
sbb
mov
mov
loopne
sub
data16
enter
jmp
pop
call
lea
inc
icebp
or
or
ja
bound
scas
outsb
mov
xchg
xlat
ljmp
movsb
xor
das
outsl
mov
xchg
cld
push
repz
fidivrl
enter
insl
or
cmpsl
imul
push
fisttpl
mulb
sarb
jge
lcall
nopl
or
repnz
sub
clc
gs
xchg
xor
fiadds
bound
mov
cmp
sbb
and
shll
stos
popa
mov
and
or
lahf
cmp
fs
pop
stc
leave
or
sub
and
pop
pop
mov
ret
imul
ret
dec
jne
test
hlt
jmp
mov
push
cld
test
pop
sti
xchg
mov
cmc
jo
pop
dec
lcall
sub
sarl
mov
es
pushf
lods
adcl
sbb
sub
lret
adc
xor
mov
add
sar
faddl
ret
int
dec
add
jg
adc
sbb
jne
mov
sub
dec
int3
bound
pop
sub
cmp
pop
sahf
inc
pop
out
xchg
cmp
outsl
sub
cltd
mov
rorl
pop
sub
push
data16
flds
cwtl
pop
xor
pop
mov
cmc
and
cmp
mov
push
les
in
pop
aas
call
lods
push
ss
and
xchg
icebp
insb
cmc
ljmp
je,pn
bound
add
int3
cmpsb
cld
xor
mov
jl
pop
stos
dec
dec
xor
xchg
mov
cmpsb
movb
jge
adc
rcll
pop
xchg
enter
sti
mov
dec
mov
mov
out
aad
in
dec
int
fnstsw
mov
cltd
cmp
fcmovbe
sbb
inc
sarl
mov
lcall
mov
sub
xchg
fadds
lods
ficompl
mov
fdivr
sub
xor
or
gs
xchg
push
adc
add
xchg
mov
out
mov
mov
stos
and
adc
xchg
push
or
jl
pop
popl
cmp
mov
addr16
xchg
mov
outsl
inc
addb
mov
in
jmp
dec
movsb
call
das
fimull
push
lds
in
stos
or
mov
xchg
iret
fsts
scas
sbb
sbb
mov
enter
xchg
cmp
mov
cli
pop
loopne
sub
aaa
insb
mov
adc
out
add
std
fs
out
ja
addr16
jle
adc
push
pop
into
int
add
inc
notl
call
or
movsb
mov
clc
jp
sbb
and
pop
dec
inc
pop
stos
mov
lcall
aam
add
jno
loop
ja
dec
sub
add
xchg
xor
das
es
in
out
nop
popf
psubsb
jecxz
mov
jae
xlat
pcmpeqb
lods
jp
pop
xor
lret
add
lods
jecxz
sti
jle
xorl
sbb
sbb
les
lret
cmp
sbb
cmp
jbe
jmp
inc
push
mov
dec
pop
or
add
iret
enter
test
and
cltd
push
mov
pop
iret
movsl
mov
push
pop
out
rorb
idivl
jp
sbb
cwtl
or
push
jb
fisttps
sbb
leave
jbe
mov
inc
push
push
push
out
jl
jae
ss
mov
cmc
mov
es
mov
out
adc
inc
out
add
test
push
nop
or
cmp
dec
arpl
fsubr
stos
push
je
xor
dec
fsubrl
and
mov
popa
movsb
jg
push
enter
clc
aam
and
inc
mov
mov
rclb
fs
xor
mov
mov
test
inc
imul
xchg
mov
jae
xchg
cmp
add
and
mov
test
sub
mov
loop
in
xchg
mov
imul
aas
mov
jle
sar
and
sub
pop
xor
xchg
je
sbb
push
push
mov
dec
mov
fdivrl
cmpsb
mov
call
and
xor
push
pop
cltd
pop
fsts
xchg
mov
or
subb
xchg
addl
push
sti
xchg
outsb
sbb
mov
push
mov
adc
je
ret
xchg
fmulp
flds
xor
cmp
daa
push
jge
and
fistpll
mov
lcall
ret
pop
push
lea
movsb
imul
cmp
fwait
scas
mov
dec
lock
mov
data16
xchg
repnz
aaa
das
push
push
out
ret
sub
imul
je
cld
sub
stos
add
sti
lcall
jbe
in
imul
aad
lret
je
adc
push
push
rcl
push
pop
mov
dec
pop
push
lods
sbb
scas
mov
mov
lahf
xchg
in
addr16
add
cmp
pop
fcompl
sbb
out
sbb
fistpl
lds
cmp
and
adc
xor
jne
rorb
ja
cmp
jl
ret
cmc
aad
mov
shlb
lcall
pop
xor
xor
lret
or
stos
mov
add
mov
js
jb
dec
add
sahf
rclb
mov
out
dec
int
int3
push
xor
sub
mov
mov
ljmp
std
push
popf
pusha
cmp
and
in
lock
addr16
mov
sbb
mov
data16
call
arpl
push
jge
mull
sbb
sbb
clc
sub
and
lret
data16
int3
adc
push
sbb
fs
leave
ret
ret
sbb
xorl
push
gs
hlt
dec
fisubrs
arpl
mov
div
fcmovnb
fbld
fstl
cmpsb
fists
sub
sub
test
and
mov
jo
mov
lahf
aad
cmp
test
jmp
xchg
cmp
es
inc
cli
lret
push
add
inc
inc
mov
jmp
dec
shll
or
ret
and
out
aas
mov
popa
movsl
jp
mov
push
push
fidivrs
and
jo
lds
std
mov
pop
jb
pop
adc
push
nop
outsb
stos
test
arpl
aaa
shll
and
in
and
mov
lahf
pop
jns
arpl
pop
adc
insl
and
add
bound
out
pop
enter
xor
sbb
insb
fldenv
sbb
clc
clc
test
jns
mov
aaa
orl
push
addr16
ljmp
loope
mov
jnp
fcomp
adcl
in
clc
adc
lret
rolb
outsb
adcl
addr16
cs
scas
pop
push
scas
insb
pop
xchg
das
adcl
pop
lds
insl
shlb
and
cmp
cmp
mov
and
jno
sbb
cmpb
dec
fs
shlb
dec
mov
mov
movl
pushf
jmp
push
mov
mov
push
pop
xchg
in
lds
pavgw
loop
or
and
das
jl
mov
cmpsl
nop
icebp
rorb
mov
loope
inc
mov
shl
mov
inc
jecxz
popf
dec
lcall
or
mov
jmp
popf
es
call
pop
sbbb
mov
cmp
or
cltd
lock
jne
ss
sahf
arpl
mov
jecxz
popa
aas
dec
sti
in
jl
mul
mov
adc
cmp
hlt
dec
pop
mov
or
ror
aam
iret
push
cli
sahf
movsl
jns
notl
jbe
into
sahf
mov
cmp
push
and
adc
mov
fs
mov
stos
daa
aaa
mov
sbb
xor
and
out
adc
dec
push
jns
iret
aad
or
dec
pop
lds
lock
test
xorl
leave
addb
std
pop
xchg
cmpsb
mov
sub
lahf
lret
pop
daa
adc
mov
out
mov
mov
roll
stos
or
f2xm1
or
cmp
cmp
adc
int
fidivl
and
outsb
movsb
hlt
dec
int3
cmp
jb
sbb
les
sti
cltd
lods
pop
inc
outsl
insb
jb
dec
icebp
cmp
and
cmp
fimuls
mov
push
cmp
sub
test
loopne
adc
test
push
int
xchg
push
pop
or
outsl
mov
xchg
and
pusha
loop
pop
adc
adc
ds
sub
movsl
cmp
xor
stos
lret
inc
xchg
sub
and
xchg
lods
mov
mov
push
jb
inc
push
push
jne
leave
push
fisubrl
out
lds
mov
inc
xchg
ljmp
mov
cmpsb
push
cmc
sub
adc
mov
test
lret
addb
xchg
bound
fdivr
inc
lods
les
adc
adc
mov
push
mov
test
xchg
jbe
and
shll
loop
adc
inc
mov
mov
xor
out
pop
out
dec
lret
inc
mov
mov
push
or
inc
ror
cmp
xor
xor
mov
fs
pop
fnstcw
sub
imul
test
bound
pop
jo
lcall
cmp
jg
cmc
das
push
roll
enter
cmc
sahf
cmpl
movl
pop
outsb
push
pop
in
sub
push
add
stc
lock
jecxz
jl
shl
movb
push
adc
enter
sub
fsubrl
out
insb
fisubrl
inc
test
jmp
inc
xchg
cmp
push
int
in
mov
xor
cmp
jb
add
ja
cmp
aas
pop
hlt
scas
fldcw
cli
ret
hlt
or
sub
fnstsw
jno
mov
inc
inc
jb
xchg
or
jo
mov
push
push
cmp
xor
adc
jp
cmp
mov
jo
stos
or
cmp
mov
loope
inc
jmp
mov
stos
mov
movsb
xchg
cmp
or
and
repnz
inc
ljmp
fs
and
in
loopne
ja
lea
incl
push
leave
in
movsb
mov
inc
cltd
inc
jp
jecxz
mov
adc
test
in
inc
cmp
out
inc
mov
int
test
faddl
xor
dec
inc
xchg
cld
fiadds
lret
scas
and
stos
sbb
xchg
inc
sub
repnz
dec
cmpsl
and
notrack
jno
add
push
inc
jb
cltd
and
mov
lea
xor
cmc
fs
adc
ja
cli
test
dec
mov
push
jp
sub
inc
in
pop
add
push
push
rol
cld
call
cmp
cwtl
mov
mov
iret
fs
leave
pop
sbb
loope
sbb
cmp
cmpb
inc
lods
inc
pop
cmp
jb
nop
in
arpl
loopne
imul
lret
stos
add
psrld
sub
sbb
shr
and
fidivl
mov
and
sbb
aaa
mov
nop
insb
xor
xchg
addr16
scas
add
add
cs
pop
arpl
repnz
sbb
add
popa
dec
push
ja
cld
and
mov
mov
push
popa
xchg
cmpb
pop
shrl
cmp
scas
pop
movsl
ljmp
adc
mov
gs
pop
mov
aam
mov
sar
or
pop
xor
cmp
xchg
test
pop
pushf
sub
clc
jne
inc
xchg
mov
cmp
adc
andb
xchg
in
jne
and
inc
repz
rclb
imul
std
das
xchg
xchg
test
mov
and
or
fcomps
sub
test
adc
loope
jae
dec
xchg
push
mov
xchg
fistps
fcmovnu
hlt
inc
pop
insb
rcrl
cmp
loop
sub
xchg
xor
or
stos
mov
sub
add
insb
cmp
pop
mov
or
lret
cmpsl
mov
jb
mov
dec
add
inc
lods
push
cmp
insb
sbb
scas
or
test
adc
lods
push
mov
sbb
push
mov
aas
push
adc
xor
aad
rolb
inc
add
cltd
nop
mov
mov
mov
pop
xor
xor
iret
mov
fldenv
cwtl
mov
push
mov
int3
push
pop
xor
and
pop
fnstcw
push
and
call
shll
sbb
add
sub
iret
pop
mov
and
sbb
cmp
mov
jb
scas
sbb
sti
in
push
jge
fimull
or
cmp
sub
mov
push
jg
enter
dec
lea
add
lahf
adc
stos
push
dec
shlb
imul
orb
mov
inc
repnz
pop
stc
popf
mov
adc
test
mov
mov
push
push
cmp
or
ja
push
stos
cmp
lahf
fistl
mov
or
add
arpl
adc
and
cmpsb
and
aas
dec
inc
mov
shlb
push
dec
lret
or
mov
das
dec
dec
lods
es
inc
sbb
ljmp
dec
pop
inc
inc
mov
jae
mov
xchg
sti
jg
rcll
shlb
and
push
fwait
icebp
xlat
push
test
xorb
iret
lret
scas
iret
in
addr16
push
int
sub
les
cmpsb
stos
shlb
aam
lcall
sbb
sti
into
imulb
cmp
mov
cmp
sbb
ficompl
je
fmuls
shr
loopne
mov
mov
cld
mov
sub
arpl
jge
out
add
mov
icebp
leave
movsb
dec
cmp
movsl
pop
sbb
out
sub
adc
xor
fdivl
in
mov
test
insb
ljmp
mov
mov
xchg
gs
ss
cmpsl
scas
test
jo
cmp
int3
mov
cmpsl
adc
mov
insb
mov
mov
mov
xchg
loop
add
push
addr16
cmp
je
adc
sub
mov
test
xorb
cs
mov
jge
pop
xor
jne
sarb
leave
push
mov
sub
outsl
insl
aas
inc
cmp
outsl
cmp
cmp
jge
lods
mov
in
jb
pop
lods
fisubs
xchg
shll
pop
test
in
rcl
stos
lea
xor
cwtl
mov
mov
loop
enter
clc
aaa
repz
sbb
xlat
aam
xchg
push
push
lds
pop
dec
or
sti
shlb
sub
add
leave
insb
jge
mov
sbb
icebp
pop
lods
or
xchg
jbe
lret
in
sarl
cltd
sbb
mov
movsb
xchg
adc
sarb
xlat
inc
scas
add
mov
ret
pop
mov
jne
test
add
push
fcompl
fdivrs
or
jnp
scas
outsb
jb
jle
mov
in
int3
mov
sarb
rcr
lods
add
add
push
cmp
testb
rcr
cwtl
xor
mov
fcmovnb
or
sub
mov
adc
gs
stos
ret
dec
dec
and
movsb
aam
fdivr
push
jnp
pop
sbbl
mov
outsb
les
js
mov
enter
mov
mov
orb
mov
out
mov
pop
outsb
andl
repnz
imul
sub
inc
ja
loopne
jecxz
dec
fwait
xchg
push
out
je
sbbl
jb
jmp
mov
pusha
jmp
aaa
js
jae
mov
sti
push
orb
cmp
inc
cltd
xchg
dec
sarb
cmovl
int3
dec
daa
cmp
lahf
lret
mov
cwtl
out
inc
outsl
imul
out
je
adc
or
push
sub
xchg
sbb
les
adc
scas
jmp
jmp
mov
loope
jecxz
idivb
add
nopl
fst
or
adc
dec
div
or
or
and
push
pop
push
mov
jp
mov
outsl
or
dec
pop
in
icebp
dec
cld
movsl
xor
outsb
cltd
dec
jne
pop
xorb
loope
sub
mov
fucomip
clc
cli
dec
rorl
stos
pop
jle
xchg
dec
push
cmp
inc
pushf
add
mov
pop
jg
movsb
inc
adc
jbe
jbe
inc
push
test
nop
aaa
push
push
mov
dec
lea
cmp
mov
inc
and
inc
dec
or
sbb
inc
data16
lahf
out
daa
jne
sub
xchg
dec
es
mov
or
scas
repnz
daa
sarl
arpl
jecxz
push
data16
test
out
stos
cmp
lds
fdivrs
mov
sub
dec
arpl
aam
jb
shll
pop
shll
xchg
xchg
push
and
adc
pop
fists
and
jp
jns
pop
ljmp
ljmp
mov
hlt
hlt
ljmp
out
into
mov
inc
sub
inc
pop
adc
addl
add
lods
inc
clc
jecxz
mov
sbbb
mov
iret
mov
cs
push
shlb
imul
imul
sub
nop
jae
mov
out
mov
ret
fdivrl
scas
dec
dec
fcoml
jns
outsl
mov
push
jge
push
loope
sub
mov
sbb
push
dec
fst
arpl
movsl
xlat
scas
xor
jno
int3
sbb
rclb
repz
jns
notb
inc
pop
test
jmp
iret
adc
xor
mov
nop
push
leave
dec
add
xchg
hlt
xor
out
test
and
imul
lds
or
cmpsb
addr16
xchg
mov
jne
or
adc
inc
mov
jl
xchg
xchg
or
leave
mov
cmpsl
mov
pushf
push
xor
ret
icebp
outsb
jnp
cli
adc
hlt
xor
cli
test
cmp
cmc
rcll
call
dec
aaa
add
lahf
jae
in
xor
cli
push
or
sub
mov
inc
insl
mov
rcrl
xorb
inc
fisttpl
pop
leave
cmc
dec
repz
jmp
mov
dec
dec
add
fisubrs
xchg
inc
imull
or
adc
loop
mov
xor
test
and
pop
mov
adc
pop
jmp
aad
adc
pop
jbe
jmp
dec
sub
sbbb
data16
icebp
or
pop
mov
push
jb
mov
jns
sub
and
test
aam
cmp
fcompl
incb
dec
stos
inc
xchg
mov
xchg
cmp
xchg
jg
pop
ss
es
cmp
jae
adc
imul
repz
push
enter
sub
mov
adc
jg
xor
outsb
rcl
lods
rcr
insb
mov
and
mov
pop
cmpsl
jne
jmp
inc
in
sub
adc
int
cmp
push
je
adcb
fdivrl
inc
xorl
cmp
mov
xor
fs
adc
add
daa
jb
push
enter
ja
in
les
ja
jecxz
sti
fidivs
decb
sti
lcall
lods
fsts
cmp
cmp
mov
mov
sbb
push
jnp
popa
call
sub
into
inc
insl
shrl
test
jne
mov
jae
fmull
xor
push
add
or
decb
fnsave
ja
adc
shlb
cmpsl
js
out
jp
movsb
push
int
jp
loope
aad
xor
daa
mov
mov
icebp
or
enter
fldt
bound
cmp
adc
cs
in
js
iret
out
and
xchg
arpl
xchg
mov
test
dec
in
cwtl
pop
adc
std
cmpsb
test
dec
and
iret
pop
rcr
dec
cmp
mov
xorl
cld
subl
dec
inc
jae
xor
das
in
scas
aad
addr16
pop
cmpsb
rcll
pop
and
cld
jl,pn
ret
inc
out
sub
xchg
test
insl
mov
inc
movsl
fstpt
sub
mov
mov
pop
jnp
mov
dec
and
pusha
inc
insl
movsl
repz
in
hlt
jnp
insl
les
add
jno
mov
imul
int
mov
mov
jbe
cs
inc
out
cmp
sti
fildl
loopne
cmc
movsl
cmpl
ret
push
pop
icebp
cmpsb
lahf
sbb
jnp
imul
out
sub
imul
in
and
movsb
adc
adc
into
add
lea
dec
in
jg
nop
sbb
lods
sbb
mov
push
cmp
clc
mov
dec
xchg
xchg
scas
int
out
and
insl
ds
test
les
xor
not
jbe
verr
fstl
cs
cmpsl
jb
cs
stos
in
adc
push
in
lea
cmc
call
in
cmp
push
ret
addr16
sarl
scas
jnp
dec
fnstsw
test
std
scas
push
mov
xchg
pop
fdivp
sbb
lahf
push
repnz
imul
lods
sarl
sub
test
addr16
pop
sbb
pop
mov
jb
pop
aas
push
lahf
pop
call
dec
inc
add
mov
push
pop
lret
mov
stos
push
fisubrs
and
ds
shrl
in
jb
dec
rclb
aas
or
test
adc
inc
sti
aam
mov
inc
mov
and
mov
outsb
jl
pop
dec
lods
sbb
dec
adc
insb
cmp
dec
loope
or
push
addl
rcrb
repnz
or
mov
les
adc
and
mov
mov
push
push
or
mov
js
stos
inc
push
cmp
imul
das
cmc
enter
sarl
mov
out
mov
sahf
rorb
inc
aad
stos
adc
dec
mov
jnp
dec
cmp
jle
jbe
mov
cwtl
mov
incl
loopne
lods
xchg
inc
mov
push
rorl
xchg
lods
mov
push
cltd
sbb
insb
loop
arpl
fisubl
cmpb
aad
scas
repz
in
mov
ret
mov
adc
dec
sahf
cmp
or
jge
xor
lods
stos
jge
mov
xchg
sbb
jecxz
jno
mov
pop
mov
xchg
lcall
js
sbb
lcall
pop
pop
inc
or
pop
test
and
xor
fwait
lock
inc
or
mov
iret
push
adc
mov
push
xchg
add
rcrl
push
sbb
xchg
scas
adc
or
in
fcmovu
pop
aam
data16
imul
ljmp
test
mov
ror
add
mov
mov
pop
aam
loopne
insb
jecxz
xchg
popf
mov
pop
jo
mov
stos
mov
mov
mov
mov
jns
mov
cmpsl
test
shrb
and
xor
and
nop
xchg
in
cmp
xchg
xchg
insl
xor
push
xor
cmpsw
movsb
mov
adc
pop
movl
dec
aam
push
ja
shll
inc
imul
jb
lahf
inc
xchg
filds
mov
add
dec
fwait
mov
or
dec
pop
jnp
test
push
out
orb
call
add
js
mov
aam
push
mov
inc
inc
iret
loope
sbb
xchg
xor
in
mov
jae
lret
popa
jno
icebp
sarb
js
aad
fwait
jne
repz
lods
idivl
inc
jbe
fcom
pop
in
or
rorb
mov
sub
iret
in
or
int3
cmp
outsl
enter
pop
xchg
and
icebp
out
bound
cmpsl
cld
sbb
cmp
outsb
sbb
mov
fldenv
cmpsl
lods
push
rcll
popa
aad
pushf
popf
imul
sub
push
add
pop
int
cli
test
jnp
imulb
clc
into
add
pop
outsl
push
subl
dec
push
insb
sahf
mov
and
xchg
cmp
jnp
pop
es
shll
aam
aad
and
lcall
loopne
xor
jae
rcl
add
lods
test
aas
pop
mov
mov
es
outsb
unpckhps
in
lock
and
cli
mov
xchg
and
sahf
daa
add
or
jle
out
lcall
addr16
inc
gs
daa
adc
int3
adc
shrb
orl
cmp
les
mov
inc
mov
inc
aaa
xchg
inc
mov
in
mov
adc
cmp
aaa
adc
jo
mov
in
aaa
mov
out
mov
add
in
jmp
and
movsl
pop
xchg
inc
lret
daa
inc
or
out
and
mov
jbe
pop
mov
addl
dec
ret
mov
jae
aad
dec
fsubl
loopne
rol
test
add
lret
test
xchg
test
sbb
test
jns
aaa
arpl
cmpsb
aad
dec
sub
mov
lahf
dec
rcll
loopne
add
lret
xlat
inc
and
xchg
fwait
and
stos
mov
and
nop
dec
ss
fwait
cmp
clc
ja
popa
mov
sub
or
std
add
xor
insl
or
inc
or
mov
fwait
sbb
test
rcll
pusha
icebp
push
daa
sahf
rcrb
enter
inc
testb
lock
inc
stos
or
jmp
fcompl
xchg
hlt
imul
jge
lret
mov
xor
xchg
dec
inc
push
jecxz
std
push
addr16
jecxz
sub
loop
sub
jnp
scas
jo
sahf
stos
jp
bound
pop
pop
repz
sbb
aas
aas
stos
mov
test
out
jo
dec
adc
jno
and
ss
outsb
sti
mov
bound
inc
pop
mov
sub
push
decl
adc
or
xchg
jecxz
mov
xor
sbb
in
cs
hlt
push
push
cmp
mov
inc
mov
pop
sub
or
scas
jo,pt
es
ret
dec
lods
jo
cmp
mov
dec
cmc
repnz
inc
das
dec
cmpsb
pop
ja
movsl
pop
fcoml
xchg
cmp
out
dec
jb
movsb
xchg
xlat
xorl
les
rorl
sarl
scas
jno
std
into
inc
and
inc
addr16
cli
in
out
adc
shl
mov
cld
or
loopne
ret
xchg
repnz
imul
cmp
ljmp
test
jo
cmp
sub
pusha
xchg
or
in
nop
gs
pushl
or
sti
test
lahf
xchg
js
xor
add
fisttpl
or
shll
enter
iret
cmp
inc
shlb
sbb
and
fildl
ret
sbb
nop
fdivp
in
test
cmp
negb
mov
addb
cmp
aad
mov
add
pop
inc
push
sub
imul
out
loope
sbb
mov
or
lcall
cmp
and
bound
subl
std
cs
adc
and
popa
stos
mov
pusha
add
inc
mov
push
gs
xchg
cmpsb
out
xchg
jmp
lret
add
mov
nop
lock
jecxz
insb
test
xchg
sbb
stos
xor
xor
pop
mov
add
cwtl
push
cwtl
inc
sub
imul
cmp
xor
push
or
mov
adc
xor
mov
lret
ja
stc
test
addl
lcall
xlat
jge
int
rorb
push
jl
aad
loope
andb
add
pop
arpl
mov
mov
fiadds
addr16
xor
mov
out
ja
and
popa
sub
in
push
mov
adc
mov
jno
fnstsw
pop
adc
or
out
xchg
push
push
or
and
lock
jl
shl
jecxz
sbb
pop
mov
pop
dec
movsl
mov
mov
out
loope
and
or
add
mov
aaa
xchg
xchg
mov
adc
add
sbb
inc
xchg
mov
dec
jmp
cmc
aad
cltd
movsb
mov
mov
data16
sbb
fs
ret
mov
jl
int3
aaa
rol
mov
es
scas
stos
into
call
jge
scas
addps
adc
popf
xchg
repnz
jns
mov
add
pop
int3
das
fnstcw
fwait
mov
pushf
mov
mov
mov
shlb
movsb
adc
or
inc
add
out
jns
hlt
xchg
addr16
sbb
addr16
dec
xor
xlat
das
les
jns
and
insb
outsl
and
lds
add
push
or
pop
xor
push
xchg
sti
sahf
jbe
cmp
rclb
cmp
xor
and
pop
sbb
xchg
inc
fwait
inc
cltd
outsb
hlt
daa
sarl
or
push
std
cmpb
mov
adc
jno
fidivrs
jle
jnp
xchg
out
jnp
jne
in
add
inc
and
push
test
shrb
jmp
inc
xchg
jb
pop
ret
out
iret
roll
stos
in
insb
xchg
push
fstps
adc
push
push
adc
add
sub
aad
ds
mov
stc
mov
js
in
pushf
xor
xchg
mov
test
insl
mov
cmpsl
xchg
rol
shl
push
xchg
je
mov
leave
dec
js
arpl
std
ss
shl
pop
nop
imul
jns
sbb
mov
les
insb
sub
mov
int3
loop
sbb
mov
push
xor
das
nop
pop
fildll
int3
adc
xor
adc
mulb
xor
int
xchg
push
pop
inc
cmpsb
negl
clc
dec
sub
mov
dec
and
mov
jo
lds
test
fstps
pop
jp
xchg
test
mov
aad
jae
shl
push
out
or
cmp
mov
pop
inc
lods
jnp
cmp
cmp
add
or
in
xchg
mov
fldt
aad
test
and
das
xchg
sbb
out
hlt
cmp
mov
arpl
mov
mov
mov
int3
xchg
in
call
jge
jg
scas
push
mov
dec
sbb
sbb
les
xchg
jg
sub
push
int
xor
mov
clc
aaa
add
dec
or
fsubl
or
jae
mov
add
mov
call
ds
lock
and
hlt
test
cwtl
mov
inc
enter
js
add
popl
aas
add
xchg
push
add
icebp
and
inc
ret
add
or
mov
test
lret
and
sbb
jo
std
mov
fldl
adc
pop
inc
icebp
sbb
out
xchg
push
xchg
dec
sub
ja
adc
scas
rcl
out
and
xchg
rcll
push
adc
xor
in
and
pop
jl
loopne
xchg
ljmp
clc
sbb
adc
es
xchg
mov
loope
push
out
push
jle
lcall
cmc
sub
sbb
pop
mov
adc
add
ret
je
es
pop
and
jmp
jmp
fcmovnu
inc
call
es
dec
xchg
ja
push
test
or
pop
das
xchg
into
sbb
cmp
or
notb
std
or
fwait
and
add
mov
cld
test
and
cwtl
lds
fldcw
call
test
adc
stos
lret
pop
aad
pop
dec
xor
outsb
add
addr16
sbb
cld
sub
hlt
pop
ret
cli
test
call
out
scas
and
mov
cmc
addl
jns
lea
sbb
jmp
flds
mov
adc
pusha
cmpsl
add
add
imul
inc
or
mov
or
int3
inc
push
scas
xor
mov
add
sarl
jb
lea
pop
std
push
stc
inc
insl
sbb
in
les
dec
mov
sub
outsb
fcomp
sarl
fs
pop
sti
adc
pop
jecxz
js
pop
dec
xbegin
and
or
jp
mov
xchg
mov
mov
sub
loop
xchg
push
mov
inc
rclb
mov
arpl
sbb
stos
cmp
int3
mov
movsl
add
testl
lock
cmpsb
ja
enter
sbb
pop
push
sbbl
cld
fidivl
jae
xchg
out
or
inc
dec
jb
repnz
mov
ss
cld
jp
in
loope
or
push
cmpsb
push
xor
out
movsl
pop
dec
mov
sti
test
loopne
in
lret
adc
and
inc
dec
xor
xor
mov
and
popf
enter
fisubrl
jnp
or
inc
cmp
xchg
sub
xor
jae
push
push
arpl
fsubrs
dec
fldenv
xchg
mov
mov
push
aam
cmp
nop
rcll
jae
push
mov
jno
adc
or
push
xchg
cmpsl
enter
cs
xchg
insb
outsb
push
inc
mov
out
mov
adc
out
add
cltd
xor
pushf
js
loopne
mov
adc
dec
test
sbb
out
jp
xchg
test
push
outsb
adc
aaa
lahf
nopl
fdivl
test
adc
push
popa
push
jmp
xor
xor
shll
xor
jbe
sub
pop
out
mov
pop
xor
push
mov
fwait
ss
sbbl
pusha
rcr
push
stos
push
repz
aaa
pop
es
daa
or
lds
mov
ds
jo
fsubrl
mov
cmpsb
add
stos
push
mov
mov
je
add
xorl
mov
out
pop
mov
fwait
xor
jns
dec
ljmp
adc
les
movsl
wrmsr
jb
adc
iret
cltd
test
loopne,pn
sbb
addr16
mov
rcrl
mov
mov
shll
mov
stos
xlat
enter
sub
jl
add
cmpsl
push
cwtl
and
jp
mov
aam
xchg
cli
xchg
loope
test
adc
xor
lcall
iret
out
dec
out
inc
adc
and
cmpsb
adc
aad
dec
pop
and
xchg
fsubs
lahf
xchg
lea
fists
clc
int
ret
cmc
subb
jae
xchg
das
jb
jl
shrb
sti
mov
adc
sbb
loop
xchg
mov
push
fcoml
repz
cmp
imul
lret
aam
add
inc
and
push
shr
pop
fwait
movl
lret
stc
pusha
push
out
dec
and
inc
aam
movsb
inc
and
sub
xlat
add
aam
fwait
jno
bound
push
cs
cmpsb
outsb
sar
mov
sbb
inc
push
data16
push
sub
and
call
cs
pop
mov
xor
and
jmp
je
pop
sti
mov
xchg
mov
es
jp
cmp
pop
push
xchg
lods
xchg
mov
cltd
inc
lret
xchg
mov
sbb
ret
data16
push
jg
popf
insl
in
adc
imul
push
mov
add
cmp
out
loop
arpl
or
xor
mov
hlt
mov
arpl
daa
loope
inc
jmp
mov
fidivrs
lods
push
and
cmp
lock
pop
cmp
shrl
andl
dec
in
dec
lea
cmp
adc
and
and
les
xchg
mov
outsb
out
add
in
movsl
or
adc
mov
movsl
inc
pop
fsubl
pop
aaa
sub
pop
adc
add
fcompl
scas
adc
jp
inc
push
sarl
or
in
leave
scas
sbb
adc
dec
test
jmp
fistl
mov
sub
adc
out
sub
and
cmp
sbb
aas
cmc
inc
pop
add
push
cmp
inc
xor
call
repz
pop
sbb
mov
popa
cmp
and
paddusw
js
loopne
mov
rcr
lcall
scas
xchg
xor
negb
fs
js
jl
je
adc
mov
xchg
mov
pop
into
cmp
push
mov
add
push
mov
and
mov
sbb
ss
mov
xchg
cwtl
test
mov
js
imul
mov
gs
cmp
fisubl
dec
dec
cld
xchg
nop
scas
xor
insb
mov
lods
add
xchg
jnp
dec
pop
mov
insb
out
push
loopne
xchg
push
push
lea
hlt
icebp
fnstenv
inc
sbb
fldenv
ja
jno
movsl
push
pop
xor
cmp
push
out
push
push
mov
and
mov
sbbb
je
mov
js
push
adc
repz
sahf
aam
fdivr
pop
mov
adc
lds
push
imul
add
mov
mov
jns
jge
lret
data16
push
outsb
xor
lret
push
arpl
filds
mov
or
divb
test
in
dec
push
rolb
repnz
xchg
scas
adc
sbb
scas
sbb
ljmp
fisubl
arpl
mov
sbb
fwait
es
dec
aas
push
loopne
dec
popa
cmc
adc
mov
vmread
xchg
mov
cmpsl
and
mov
inc
jo
dec
mov
mov
jmp
popf
sub
pop
sahf
mov
dec
xlat
repz
pop
xchg
push
insb
mov
aam
cmp
inc
jnp
adc
insl
cmp
mov
xor
mov
mov
cmpsl
jne
pop
scas
sbb
test
and
push
pop
and
arpl
es
mov
lcall
cmp
cwtl
mov
imul
mov
pop
out
pop
push
sub
inc
push
pop
rclb
orl
in
out
cld
fisttpll
fld1
mov
mov
clc
fwait
lcall
cmp
sbb
add
mov
or
and
add
fs
jl
sub
mov
cmp
iret
shrb
push
aam
adc
jecxz
in
ror
xor
sbb
mov
or
cli
stos
stc
movswl
xchg
push
xchg
or
adc
jnp
cwtl
jge
jbe
mov
cltd
cmpsl
mov
lods
add
dec
mov
daa
sti
sarl
sahf
xor
scas
dec
xchg
bsr
jge
push
adc
dec
push
cmp
cmpsl
out
lret
add
data16
scas
pop
or
inc
jg
sub
adc
imul
pop
fisttps
ret
push
xchg
jp
outsl
in
jge
add
xor
cmp
xchg
cmpb
xor
pop
pushf
das
jecxz
sbb
or
fisubrs
cmp
in
mov
mov
gs
mov
and
jp
pop
cmp
sti
push
arpl
mov
lods
mov
or
pop
pop
jmp
loop
mov
mov
test
push
imul
rorl
cmp
add
test
outsl
and
xchg
repz
fwait
xor
pop
push
jp
hlt
xor
sbb
mov
fisubl
sbb
xchg
push
add
sbb
add
or
inc
fucomi
iret
inc
jmp
sbb
xor
sbb
xor
sub
push
mov
pop
jns
mov
xor
sub
shlb
push
fidivl
mov
sub
pop
and
rcrl
and
popa
sbb
bound
xor
push
push
loop
jl
cltd
or
out
and
test
in
push
icebp
out
repnz
outsl
or
pop
test
repnz
inc
cmpsb
mov
and
inc
sub
pop
inc
cs
sahf
rcrb
sbb
push
mov
fcmovnbe
or
dec
mov
jb
cli
sbb
lahf
push
insl
jne
or
adc
mov
push
sbb
and
pop
jb
fsubrp
push
insb
into
xchg
xor
xchg
test
insl
xor
xchg
les
jo
dec
jns
cwtl
lcall
cli
push
popa
jno
mov
sbb
je
cltd
cli
into
rcrb
push
cltd
arpl
daa
in
mov
negl
lahf
xchg
movsb
into
and
mov
shlb
push
mov
decl
lret
stos
addr16
daa
push
push
xchg
mov
leave
xlat
mov
adc
stos
add
mov
ja
ss
test
gs
lods
test
movsl
jge
pusha
and
sbb
dec
mov
enter
ds
mov
xchg
adc
sti
rol
xor
cmp
rcrl
cmpsb
stc
mov
fistpl
push
mov
adc
ljmp
jns
or
add
loope
ret
inc
fcos
push
mov
jae
outsb
cmp
push
mov
jp
adc
sub
mov
dec
adc
loopne
outsl
int3
or
jl
imulb
sub
adc
enter
testl
outsl
mov
mov
pop
sub
fistpl
lret
adc
fsubrs
mov
out
mov
mov
xchg
push
push
mov
ret
xchg
arpl
jle
mov
out
lret
pop
pop
lcall
fwait
loope
sbb
xlat
mov
mov
dec
cmp
orb
xchg
pop
inc
lods
sub
out
rorb
or
push
call
dec
adc
es
aad
sbbl
hlt
mov
jb
mov
xchg
dec
push
inc
aam
inc
jns
neg
addb
shll
cmp
hlt
mov
movsl
gs
test
pop
pop
pop
aam
sbb
outsb
adc
inc
fnstcw
stos
adc
mov
push
xlat
in
xchg
cmp
cwtl
pop
leave
mov
jns
clc
sbb
lods
mov
pause
or
inc
pop
xor
inc
mulb
pmuludq
pop
clc
pop
xorl
jo
gs
sti
pop
mov
rcrb
pcmpeqw
lds
and
mov
sbb
jbe
loopne
add
adc
imul
scas
jle
jp
aam
sub
lods
negl
test
ds
stos
in
int3
mov
or
addr16
cmp
jo
push
stos
cli
or
lods
dec
mov
popf
push
sub
pop
and
and
cmp
lock
pusha
addr16
mov
bound
and
jnp
sbb
xchg
lds
sub
adc
stc
cmp
rcrb
sbb
loop
add
cmpl
pushf
in
pop
call
mov
inc
ljmp
mov
or
mov
dec
std
xor
jo
mov
arpl
testb
ret
fmul
in
mov
xor
dec
or
mov
mov
lods
mov
xchg
addr16
mov
xor
cs
mov
repnz
fidivs
push
sbb
out
add
cmp
out
xor
or
add
add
sub
mov
sub
xor
in
lret
ret
xor
divl
push
jb
les
ljmp
jae
pop
mov
or
push
pop
mov
adc
mov
mov
pop
cli
pop
imul
xchg
daa
jle
cmp
mov
cltd
lcall
mov
stc
pop
cmp
neg
sbb
jecxz
repz
add
mov
lret
xlat
scas
sub
clc
mov
xchg
add
jg
mov
xchg
xchg
push
iret
sbb
push
xchg
dec
jecxz
pushf
sti
adc
sahf
or
in
dec
addr16
roll
je
xor
mov
adc
rorb
shlb
lret
or
cld
adc
and
mov
xchg
outsl
xor
xchg
cmp
int3
sub
sbbl
push
insb
cltd
xlat
mov
add
loope
or
sub
push
and
je
and
es
adc
cmpl
fildll
jmp
pop
sub
test
push
ret
stc
mov
push
xor
dec
mov
jae
fsts
jae
ret
in
adc
push
mov
andl
pop
js
sbb
aas
nop
cwtl
cmpsb
and
cld
pop
dec
in
xor
cmpsl
shll
in
adc
jae
and
push
clc
dec
int
loopne
rcr
mov
aam
or
outsl
arpl
xlat
dec
les
test
out
mov
or
dec
rcl
pop
outsl
inc
dec
je
jbe
std
mov
xchg
pop
push
pushf
fnstsw
repnz
xchg
test
sbb
lea
rorb
mov
pop
sarb
mov
xchg
ja
mov
cli
add
fcomps
dec
subl
push
jo
lcall
xor
sub
dec
mov
dec
movsl
ret
rcrb
xor
es
das
jl
mov
inc
mov
hlt
sub
rol
call
mov
jae
push
dec
js
pop
test
dec
sub
aaa
pushf
push
outsb
dec
movsl
and
mov
cmpsl
test
out
adc
hlt
xchg
cli
loop
mov
test
cwtl
mov
popf
andl
cmp
pop
jg
dec
mov
or
sub
fidivs
les
lret
test
lock
nop
xor
inc
jg
pop
and
pop
hlt
mov
xor
lret
xchg
stos
cmp
push
pop
ret
xchg
xor
sub
adc
stos
pop
push
pop
xchg
push
cs
pop
sti
sbb
clc
pushf
fisttps
sbb
popa
pop
cmp
push
repz
popa
test
pusha
sub
jle
in
xor
add
andl
das
ljmp
push
push
jb
push
lret
stos
pusha
outsl
out
pop
push
repz
mov
mov
fcoms
divl
dec
pusha
inc
movsb
jb
arpl
fildl
cltd
ja
outsl
xchg
adc
cmp
adc
dec
sub
jb
ss
jl
lds
dec
lret
in
jmp
mov
mov
int3
imul
arpl
sbb
mov
mov
lods
fidivs
jne
push
and
pop
es
js
loop
je
xchg
mov
das
nop
push
pop
add
jno
lret
add
inc
mov
shrb
popf
test
lret
inc
or
sbb
stos
dec
idiv
div
inc
lret
jg
repnz
and
jge
ffree
mov
stc
pop
inc
jns
mov
and
jb
add
push
scas
fistpl
mov
fwait
or
arpl
mov
xchg
cmpsl
stos
pop
sti
jmp
daa
xor
or
mov
sub
inc
fcompl
sub
pop
addb
ss
push
fsubr
rorl
aas
jl
das
push
aaa
sbb
cltd
gs
icebp
inc
inc
rcrb
cwtl
ror
inc
sub
and
fiaddl
or
notl
sub
pop
push
sahf
sbb
out
lret
out
ds
xor
outsb
scas
adc
cmp
push
gs
lahf
fst
inc
or
scas
pop
fcompl
adc
sahf
popa
mov
jbe
rclb
push
js
mov
pusha
movsb
ljmp
out
dec
sti
or
iret
jb
xchg
gs
mov
and
mov
xlat
insl
shrb
adcb
stos
mov
cmpsl
jns
gs
mov
ds
sbb
movsl
daa
pop
nop
out
and
push
push
in
loope
cs
in
imul
sub
pusha
lods
in
xchg
xchg
jns
jg
mov
std
dec
mov
sbbb
std
mov
int
sbb
push
mov
repnz
sub
pop
inc
cli
and
jnp
test
push
fwait
jo
push
enter
hlt
lods
shll
icebp
mov
jnp
xchg
mov
mov
jmp
in
xchg
loopne
mov
lret
push
enter
test
sbb
in
ljmp
ds
rclb
mov
lods
pop
not
xor
int3
leave
and
dec
add
mov
fidivs
cmp
fwait
scas
faddl
hlt
mov
pusha
adcb
aaa
jne
mov
xchg
in
or
insb
jmp
jo
mov
cmc
xchg
fcmovnu
and
or
rorb
mov
loopne
xor
adc
mov
add
inc
decl
dec
add
std
adc
inc
loope
mov
lods
jo
cmp
pop
push
scas
jb
mov
andl
inc
sub
sub
lds
push
mov
hlt
cmp
iret
decl
shll
sbb
dec
push
scas
shrb
add
dec
dec
xchg
push
cmp
jns
stos
adcb
adc
inc
push
adc
mov
dec
orl
mov
pusha
or
cmp
scas
or
adc
arpl
and
push
push
fisubl
or
fwait
adc
out
inc
or
fnstsw
lahf
out
jbe
add
movsl
test
inc
mov
cli
lret
mov
pop
and
icebp
test
push
incb
pop
jae
shrb
cltd
adc
xor
shlb
mov
int
adc
jae
gs
sub
stc
mov
add
ret
jp
or
sbb
rorb
push
dec
push
incb
xlat
adc
aaa
or
popl
imul
inc
insl
xlat
jl
ret
adc
pop
xchg
dec
subb
inc
andl
addr16
mov
sub
xchg
pushf
ss
cmp
orb
test
xor
and
sub
clc
sbb
pop
cs
ss
sbb
lahf
inc
inc
and
lret
push
enter
js
jo
sbb
and
or
jb
enter
or
dec
fwait
add
jnp
loop
sub
mov
lods
fwait
or
inc
or
fs
pop
add
mov
callw
aad
rorl
int
adc
rorb
inc
ja
sub
mov
and
icebp
fs
notl
push
pop
je
test
jle
inc
dec
loope
dec
fcoml
subb
adc
push
stos
mov
mov
push
lods
in
ds
adc
aam
testl
dec
fldl
jbe
mov
dec
mov
xor
loope
ret
subb
lds
rcrb
lods
mov
ror
push
imul
adc
push
loope
dec
popf
mov
cltd
xor
ljmp
jmp
mov
xlat
loopne
mov
lcall
jmp
daa
inc
mov
aas
out
cs
xchg
orl
mov
imul
and
lods
pushf
aam
jne
sbb
mov
cmp
sbb
rorb
inc
push
dec
xchg
and
out
push
mov
jbe
imul
pop
sub
cld
cmpsl
push
mov
mov
add
cmp
cli
sbb
adc
mov
sub
out
lea
cmp
faddl
in
xchg
pusha
aaa
das
push
adc
xchg
cwtl
clc
dec
les
xchg
mov
inc
push
mov
adc
out
lcall
pop
cltd
push
lahf
or
mov
fadds
push
scas
mov
rorb
mov
mov
andl
sub
cltd
pusha
aaa
sub
jmp
push
notb
in
xchg
push
iret
push
xchg
inc
ja
imul
cmp
loop
cmp
inc
or
call
adc
xor
sub
std
loopne
and
sbb
mov
pop
push
adc
push
xor
fwait
cmp
xchg
xor
stos
add
add
mov
mov
pusha
inc
movaps
mov
cmp
pop
rcrl
ja
xchg
mov
int
movsl
and
xor
mov
je
add
fnstsw
mov
stos
rcrl
in
loopne
test
lret
cmc
cmpsb
clc
lds
xchg
sbb
push
xchg
sub
popa
sbb
xor
loope
lock
jmp
repz
xchg
xor
xchg
repz
call
sbb
addr16
xor
mov
outsl
push
jae
std
ss
icebp
mov
inc
sti
imul
or
jmp
push
sub
xor
add
cltd
or
sbb
pop
jmp
cwtl
dec
mov
movsb
jp
fisubs
test
shll
fisubl
sahf
cmc
dec
dec
call
fsts
mov
jae
loopne
mov
fcompl
mov
cmpsb
xchg
scas
fadd
addb
nop
sub
int
xor
cmc
jnp
xchg
adc
jbe
filds
in
stc
sahf
jp
scas
mov
or
cmpl
push
out
jmp
adc
jg
imul
dec
jnp
pop
outsl
in
xchg
or
test
push
jecxz
and
ds
inc
xchg
mov
sbb
call
test
lods
or
sbb
dec
jmp
or
movsl
gs
pop
hlt
les
cmc
sub
cli
imul
push
cmp
xlat
push
jne
adc
adc
push
sub
jmp
push
add
jne
pushf
enter
dec
add
or
push
sub
xlat
sub
xor
jne
sahf
xchg
clc
cld
push
mov
fdivrs
inc
repz
sbb
mov
cmp
inc
lods
ds
cmp
or
cmp
outsb
mov
stc
lahf
lock
movsb
pusha
inc
mov
mov
xchg
jg
add
jnp
jecxz
sahf
outsl
mov
adc
mov
imul
addb
mov
insb
stos
mov
sahf
lock
xchg
stc
pop
addr16
imul
sub
out
test
enter
rcrl
idivl
pop
pop
les
fbld
sti
es
xchg
add
xor
adc
cmp
mov
xchg
scas
push
jae
cmp
mov
inc
push
out
add
rcll
inc
pop
mov
inc
push
in
lea
pop
pushf
testl
arpl
adc
test
pop
sbb
out
lods
mov
fwait
sub
lods
nop
test
test
in
and
shll
inc
lods
faddl
sbb
dec
inc
add
xchg
sub
mov
jo
mov
inc
jmp
jnp
jnp
jl
pop
aas
fwait
int
in
cs
cmp
cwtl
cli
popf
pop
dec
test
iret
fwait
xchg
ret
jmp
sub
and
push
stos
outsb
or
imul
test
aaa
mov
leave
out
addr16
sbb
popf
loope
shll
dec
add
and
pushf
pop
mov
xchg
sbb
inc
jle
in
notb
into
lea
in
push
jne
push
push
clc
xor
mov
loopne
insl
ret
ss
push
out
mov
dec
mov
and
pop
mov
clc
jmp
jne
les
cld
cli
mov
mov
leave
test
inc
mov
xchg
fiaddl
mov
dec
int3
mov
jle
lea
cmc
in
pop
imul
mov
movsb
loope
jge
jb
int3
daa
xor
popf
pop
push
je
sahf
sub
sbb
into
jge
loopne
xchg
mov
adc
mov
mov
inc
mov
mov
jb
mov
ljmp
aaa
insl
adc
ljmp
dec
mov
insl
or
icebp
sbb
in
pop
mov
push
mov
lods
lea
loope
dec
and
rolb
sbb
xchg
hlt
test
jmp
call
subb
jg
sub
rcrb
cltd
mov
pop
in
sti
mov
ret
add
mov
outsb
enter
jmp
cs
in
mov
mov
sub
add
mov
adc
stos
pop
mov
mov
adc
xchg
ss
fs
aad
add
sahf
mov
mov
xor
out
jnp
mov
dec
xchg
pop
mov
outsl
mov
sub
xchg
xchg
sbb
mov
and
mov
dec
jle
imul
js
xchg
and
cmp
dec
leave
xchg
mov
outsb
in
flds
negl
or
or
dec
outsb
xchg
bound
test
scas
sub
and
mov
ds
ljmp
and
daa
int
push
in
sub
fdivr
push
jns
popf
dec
inc
popa
xchg
int
mov
inc
jnp
or
or
and
stos
fisttpl
test
adc
inc
lret
pushf
lea
lret
mov
push
lret
mov
out
into
rorb
ljmp
jecxz
fsubrs
inc
xchg
aam
inc
inc
test
ds
jnp
lret
movsl
push
test
outsb
data16
and
dec
icebp
lcall
push
xlat
and
lods
jge
add
xor
ret
pop
fisubrl
je
stc
sub
and
cmp
dec
fwait
jge
stos
cmpsl
ret
or
jl
faddl
and
jbe
inc
mov
or
mov
andl
sbb
rcl
fsts
lahf
or
pop
dec
out
shll
mov
imul
push
leave
mov
sti
jg
lcall
jl
rcrb
pop
mov
adc
mov
mov
and
xchg
incl
rcr
xlat
or
ficoms
data16
cmp
cmp
inc
push
stos
sub
cmp
cmp
int3
enter
jns
dec
mov
adc
mov
movsb
pop
adc
xchg
xchg
mov
add
ja
inc
xchg
add
nop
xor
push
mov
cmp
int
adc
rcr
insb
fsubrs
popf
mov
dec
push
addr16
sub
sti
and
xchg
inc
ds
sbb
jno
data16
mov
jmp
push
int3
push
mov
aam
add
dec
jo
popf
int3
stos
xchg
bound
lret
imul
mov
cmpsb
push
loop
adc
cmc
sbb
lea
pop
ret
loop
pop
in
push
test
add
pop
lods
stos
or
insb
mov
sub
mov
jno
adc
movl
out
mov
xchg
repz
or
fsts
movsb
add
cmp
scas
mov
xorb
les
mov
fnsave
sahf
repz
outsl
divb
push
fnstsw
aaa
or
adc
lret
push
push
add
xor
cmp
fbstp
push
or
adc
jae
popa
lock
fs
adc
xlat
mov
test
add
cmp
xlat
data16
jne
sbb
lods
inc
sbb
xchg
cmpsl
mov
pop
jns
mov
jbe
out
fisubrl
push
mov
icebp
leave
shl
and
adc
outsb
lds
dec
xchg
jns
scas
das
loop
stc
adc
shrb
cmpsb
jecxz
ret
or
sub
or
mov
cmp
sub
mov
push
mov
mov
test
jo
cmp
insl
cltd
mov
mov
sti
lea
jns
mov
bnd
test
out
add
mov
sub
push
cmp
sar
and
rclb
xchg
pop
imul
inc
rclb
jl
cmp
fs
jmp
sub
loope,pn
jae
shll
add
jae
out
out
cmpsb
into
subw
loope
fwait
adc
aam
xchg
mov
in
ss
insb
or
out
popf
add
inc
push
rcrb
fcoml
sbb
xchg
mov
push
gs
mov
mov
sbb
jl
fwait
push
test
sbb
movsb
dec
das
fmull
sbb
pop
add
jp
std
pop
mov
push
leave
lahf
leave
mov
push
popa
pop
mov
bndstx
test
test
ss
and
push
push
jmp
das
dec
push
lds
test
ret
dec
xorw
notl
sbb
push
rorl
sbb
sbb
int3
jbe
int3
push
lcall
mov
pushf
sbb
sub
pop
mov
call
and
outsl
test
jae
push
adc
repz
and
add
cwtl
and
add
push
fcomi
cmp
addr16
cmp
daa
add
arpl
insl
pop
lds
sahf
push
bound
mov
pop
inc
shll
cmpsl
insl
pop
inc
aaa
in
cmp
xlat
adc
jle
xchg
push
or
inc
les
in
or
jmp
add
mov
mov
popf
mov
mov
mov
and
and
add
push
enter
sbb
ja
ja
cmpb
dec
test
xchg
add
into
cmp
out
test
and
cmpsl
and
inc
mov
mov
cmp
or
xor
pop
lods
out
pop
rorl
add
hlt
hlt
pop
arpl
sub
adc
jmp
cmp
push
inc
xchg
jle
push
ds
xchg
movsb
or
enter
roll
mov
mov
push
push
hlt
sbb
test
push
inc
sbb
push
push
mov
push
mov
insl
subl
ljmp
js
dec
pusha
repz
mov
fwait
stc
outsb
pop
add
jb
mov
jns
adc
dec
xlat
pop
lock
xchg
pushl
shrl
outsl
pop
push
ljmp
cmp
adc
stos
dec
mov
push
pop
sbb
enter
mov
pop
xchg
push
leave
cld
gs
jno
in
or
arpl
mov
push
fiaddl
or
mov
aas
adc
mov
hlt
stos
and
repnz
adc
iret
es
mov
fdivrl
inc
mov
outsb
sub
jno
adc
sub
pop
cltd
inc
das
aad
repnz
add
pop
cs
xchg
repnz
mov
out
and
icebp
outsb
adc
repnz
mov
int
mov
push
scas
xchg
cmp
sbb
imul
gs
sbb
fstps
aam
fisubrs
addr16
fldl
jo
push
fisttpll
stc
push
jbe
jg
push
xchg
aad
push
lahf
inc
insl
mov
xchg
pop
out
lds
and
jae
push
out
push
aad
daa
nop
in
mov
mov
lcall
mov
and
gs
test
cmp
imul
imul
fbstp
fdivrs
sbb
loop
sbb
loope
ret
push
imul
and
out
inc
daa
dec
data16
out
mov
cmp
and
in
movsb
fistps
or
int
pop
push
cmp
gs
mov
lods
adc
dec
ja
cmp
dec
mov
pop
pop
jb
popa
cmp
adc
pop
aad
jl
jg,pn
loope
mov
cld
pop
jno
insb
arpl
ret
jg
mov
js
sahf
inc
push
iret
clc
jb
lahf
jle
mov
mov
mov
push
ret
ret
xchg
aaa
push
push
add
cli
adc
and
jb
xchg
sbb
inc
scas
out
lods
iret
pop
inc
mov
mov
das
mov
xchg
mov
push
adc
xlat
inc
loopne
lret
cmp
rorb
sub
ja
cld
pop
inc
lret
loope
lock
insb
add
mov
outsb
push
sahf
jecxz
or
lret
pop
lret
and
adc
jmp
aaa
stc
ret
push
sub
sub
pop
mov
jg
xor
dec
adc
push
and
and
add
xor
and
push
gs
and
add
and
mov
sbb
adc
iret
pop
clc
movsb
dec
cs
outsl
jnp
pop
add
out
int
jno
cmp
and
or
xor
cmpsb
lcall
inc
jmp
test
notl
loop
inc
mov
sbb
pop
dec
cmp
jg
lods
inc
xchg
push
js
lods
add
sahf
sub
outsb
sbb
mov
or
mov
sub
mov
jg
mov
xchg
dec
adc
pop
lods
je
mov
add
lahf
mov
inc
push
outsb
or
inc
into
popf
mov
cmc
lret
mov
push
mov
inc
test
sbb
rcr
push
cmpsl
arpl
xor
out
in
or
js
fidivs
call
pop
stos
dec
xor
test
rolb
cmp
test
fmull
fdivs
aam
fdivrl
push
sbb
negl
lea
in
dec
mov
psadbw
sahf
les
cli
sbb
lock
pop
jp
in
add
adc
pop
lods
mov
in
sub
test
into
dec
adc
outsl
xchg
push
clc
lock
test
jmp
jecxz
xor
ret
mov
add
frstor
sbb
cltd
jns
xchg
dec
and
mov
rsqrtps
add
aas
mov
je
or
pop
pop
je
mov
jne
pop
push
in
xor
cmp
sbb
mov
push
enter
sbb
and
mov
out
mov
ss
dec
in
and
or
cmp
rcl
pop
mov
lea
cli
jbe
push
adc
je
mov
xchg
clc
mov
cmpps
adc
movnti
lods
leave
mov
mov
dec
jbe
mov
sub
notl
nop
inc
lahf
ds
lods
sub
subl
leave
leave
ja
dec
scas
sub
push
in
jmp
jae
sub
je
repz
ret
out
pop
je
fdivrs
fldl
test
jg
mov
mov
dec
adc
call
aad
inc
dec
mov
addb
lods
fstps
rcrb
das
mov
cmpl
mov
pop
lret
insl
stos
in
dec
mov
adc
stos
push
mov
sti
cmpsb
fsubl
ret
lcall
mov
pop
idiv
or
sti
dec
inc
sub
loopne
ja
xchg
add
xor
cltd
hlt
js
cltd
sub
test
mov
or
jo
stos
inc
xor
mov
in
xchg
push
push
test
fcomip
mov
or
mov
lret
mov
dec
pop
push
movl
imul
jbe
fcompl
or
sub
add
push
xor
xlat
pop
nop
mov
mov
push
jp
xor
inc
and
sub
dec
cltd
sub
xchg
loop
mov
xchg
stos
and
pop
sbb
movsb
or
repz
insb
mov
pop
push
xorb
mov
sub
aas
pop
inc
enter
test
adc
mov
dec
aas
add
sbb
hlt
cwtl
rcrb
mov
repz
out
pushf
xchg
and
add
mov
mov
test
push
movaps
insl
mulb
or
loopne
push
mov
test
movsb
pop
lcall
pop
int
inc
outsl
jle
inc
sbb
and
push
sub
cli
or
cmpxchg
jmp
cltd
repz
sub
lret
or
xchg
sub
add
and
leave
xchg
ret
jl
cmp
test
jmp
xchg
cmp
pusha
fidivrl
into
repnz
fnstsw
add
push
jl
ja
xchg
inc
ret
popf
sahf
push
push
jge
cltd
inc
add
in
add
mov
ret
aam
fstps
inc
jg
mov
mov
mov
add
bound
mov
stc
daa
inc
sub
push
fsts
jmp
ss
xchg
inc
lcall
das
xchg
and
pop
movsb
in
inc
mov
jb
daa
xchg
inc
jge
mov
cwtl
jne
decb
imul
dec
sub
push
fldl
sub
iret
xchg
hlt
jns
sbb
jecxz
cltd
mov
mov
daa
clc
lods
ss
call
mov
in
test
icebp
test
in
xchg
or
sti
mov
cmp
mov
fiaddl
ds
arpl
dec
mov
cmp
pop
jae
jae
insl
roll
adc
mov
rcrb
mov
or
sbb
stos
f2xm1
pop
imul
add
xchg
ret
push
hlt
inc
movsl
pop
add
add
xor
mov
call
and
dec
and
dec
cli
int
push
imul
es
mov
mov
mov
mov
mov
xorl
pop
jmp
idiv
push
cmc
pusha
fucomi
push
or
repz
push
mov
dec
and
movaps
mov
jg
nop
divl
jl
xchg
xor
insl
mov
hlt
and
stos
in
in
mov
aad
inc
or
test
pop
pop
mov
or
push
xor
jmp
sbbb
sub
enter
mov
xor
jae
rcll
addl
xor
jmp
lret
inc
stos
lahf
push
mov
dec
call
cmpsb
fstl
and
ret
das
daa
xchg
adc
stos
nop
sti
push
push
pop
mov
cmpsb
add
pop
cld
add
arpl
out
and
cld
pushf
fcmovbe
mov
in
xor
insl
lds
imul
fwait
push
push
inc
neg
push
adc
gs
ror
lods
test
scas
inc
and
shlb
push
dec
push
jne
push
mov
stc
push
jmp
xchg
cmp
sbb
sti
pshufw
sub
add
mov
fistps
test
cmpsb
dec
inc
push
ss
aaa
sub
scas
das
int3
rcll
fstps
push
mov
fistpll
jecxz
addr16
and
enter
xor
pushf
mov
mov
mov
inc
pop
mov
xchg
dec
lretw
push
insl
out
int3
jmp
jg
aaa
mov
jp
test
add
mov
rclb
pop
push
or
jmp
ds
and
lock
and
push
sbb
fldcw
xor
cmp
dec
xchg
sahf
inc
stos
cmpsl
out
repz
add
les
aad
movaps
cs
mov
leave
and
dec
sbbl
leave
mov
testb
xchg
dec
pushf
mov
mov
or
mov
jo
push
repnz
js
mov
dec
or
pusha
out
adc
jecxz
inc
mov
cmpb
inc
push
lods
mov
pop
mov
push
enter
inc
test
into
adc
or
repz
jle
out
out
sbb
push
push
cmc
pop
pop
pop
cmc
bnd
jle
rcll
sbb
lcall
mov
mov
sbb
int
repnz
push
xchg
add
iret
sbb
scas
mov
shll
repz
or
ficoms
mov
out
dec
and
sbb
sbb
pusha
sub
or
sbb
subb
aam
in
nop
stc
pop
add
sub
pusha
int
lods
push
out
rorl
adc
mov
jg
hlt
mov
xor
mov
xchg
repz
icebp
jb
or
in
adc
sub
aaa
and
mov
fs
pop
fwait
add
and
aaa
mov
mov
repnz
adc
adc
cmc
sub
psraw
mov
xor
and
mov
inc
or
mov
repz
jmp
aad
mov
outsl
mov
in
scas
sbb
lret
sub
cli
xor
leave
mov
in
push
cltd
or
cltd
adc
cmpsl
adc
call
inc
and
gs
std
mov
mov
add
stc
add
mov
sbb
mov
cwtl
add
mov
pop
and
pop
lea
mov
mov
jle
scas
ja
jo
xor
lret
pushf
ljmp
mov
push
cmpsb
leave
movsl
ja
gs
push
leave
test
add
mov
mov
sarl
jg
nop
inc
adc
arpl
in
cmp
out
std
dec
sbb
loope
dec
mov
mov
cmpsb
add
loopne
inc
filds
or
pop
mov
sbb
or
xlat
sbb
sbb
stc
leave
xor
sti
std
hlt
ss
dec
mov
popa
sarb
in
lds
js
ss
dec
repz
dec
inc
sbb
cmpsb
push
je
jo
add
mov
sbb
jnp
push
imulb
dec
fdivrs
cltd
outsl
sub
jne
jno
mov
arpl
inc
inc
fiaddl
inc
inc
adc
cmp
dec
fists
sbb
and
pop
jmp
xchg
jecxz
leave
push
cld
daa
pop
mov
jmp
cmp
xor
hlt
in
dec
cmp
shl
jbe
and
fwait
lds
adc
inc
jb
dec
cli
out
xchg
adc
fcomps
sahf
sub
fisubrl
inc
dec
add
push
call
and
push
add
roll
jnp
or
or
inc
insl
xchg
scas
les
or
mov
xor
push
sbb
sbb
outsb
dec
push
mull
inc
pushf
jne
movsl
and
and
test
mov
lret
aad
inc
push
loop
stos
pop
cmp
mov
nop
adc
sub
mov
pusha
or
rolb
add
jl
repz
mov
jae
popl
cli
adcl
dec
fidivrs
sbb
cltd
cwtl
inc
xchg
adc
push
inc
pop
and
push
and
cs
lret
mov
cmp
mov
dec
dec
cmpsl
xorl
jno
inc
out
pusha
test
cmpsl
mov
call
sub
paddd
add
sbb
pop
push
rcrl
sub
jl
daa
rcl
cmp
jo
inc
data16
js
mov
insl
jae
mov
gs
dec
sub
cld
fistps
test
adc
int
lods
sub
outsb
lahf
mov
lock
pop
xor
dec
xchg
test
lods
mov
sbb
sbb
lock
jbe
movsl
xor
in
ds
cli
rclb
leave
mov
pop
arpl
out
and
fwait
push
add
test
movaps
or
sbb
xor
xchg
addr16
xor
xchg
dec
ljmp
cmpsl
adc
fldl
mov
out
or
xchg
sbb
mov
lahf
dec
or
dec
imul
call
adc
pop
aad
dec
hlt
lea
imul
xchg
lret
xchg
mov
xchg
or
ficoms
and
popa
sub
push
cmp
scas
cmp
pop
or
xchg
mov
aam
mov
or
lret
inc
push
in
ljmp
adc
icebp
enter
jnp
test
or
movb
mov
ljmp
add
adc
popa
inc
xchg
mov
inc
cmp
lahf
insb
pop
call
imul
jmp
fld
shrl
stc
jge
fadd
ss
sub
fstpt
ret
cwtl
jecxz
sbb
repz
stc
sub
or
rcrb
adc
aas
incl
sti
fisubrs
pushl
enter
sbb
test
xchg
push
xchg
jle
pusha
push
cli
inc
or
and
movsl
cld
scas
mov
fstps
movsl
xor
mov
data16
aad
out
xlat
int3
adc
icebp
cld
scas
icebp
loope
cli
popf
inc
xorb
pop
pop
fwait
mov
imul
cmovbe
xchg
mov
cli
jb
pop
das
movsb
test
outsb
cmp
add
adc
mov
mov
adc
or
sub
dec
inc
xchg
push
stos
xor
xchg
inc
inc
std
push
scas
cmp
popf
loopne
sub
aam
push
xchg
xchg
leave
fisubrs
cmp
cld
xchg
cmp
les
in
and
pop
mov
inc
scas
mov
pop
lcall
outsb
test
fldln2
lahf
rclb
inc
mov
adc
jp
scas
or
idiv
sub
cwtl
leave
scas
shrb
ljmp
fdivl
sti
data16
shl
jmp
cmc
and
in
mov
lret
pop
mov
push
adc
xor
xor
mov
inc
sub
dec
mov
mov
mov
inc
xchg
jne
dec
scas
inc
jmp
inc
push
or
das
mov
or
jle
lret
mov
add
in
sbb
adc
push
aad
jg
jp
int3
jge
shr
test
les
test
fsubl
mov
cmp
fisttpll
int3
dec
lods
lea
pushf
or
rcrl
dec
cmp
lock
sbb
sarl
imul
dec
in
pop
cli
xchg
and
sarb
inc
mov
mov
dec
add
loop
rclb
push
jo
push
jno
xor
cld
lods
jb
xor
les
cmp
push
mov
fwait
xchg
outsl
or
and
push
add
sahf
mov
inc
daa
jp
in
adc
outsl
sbb
push
mov
sub
fmulp
jp
inc
mov
nop
mov
jecxz
clc
mov
push
pop
lods
push
push
add
data16
mov
shufps
out
jo
jno
dec
fimuls
mov
decl
mov
dec
pop
xchg
dec
out
inc
enter
cltd
xchg
imul
je
je
cli
loop
xor
shlb
imul
and
push
mov
lods
inc
icebp
repz
bound
shrb
je
cmp
scas
xor
and
push
bound
scas
mov
push
mov
push
aad
scas
dec
fisubs
lcall
mov
out
mov
sub
cmp
fsub
jl
fsubrl
and
leave
add
push
adc
add
fstp
gs
movsb
mov
mov
mov
jb
les
sbb
fstps
dec
mov
out
mov
mov
xchg
or
push
out
mov
mov
dec
fcmovu
int3
lret
push
out
inc
icebp
cmpsl
orl
pop
imul
fptan
ror
push
movsl
xor
xor
out
and
inc
cmp
adc
std
cmp
pop
adc
cli
adc
mov
les
sbb
daa
pop
xor
jp
and
pop
pop
xchg
stos
imul
xchg
imul
test
and
dec
out
mov
pusha
push
dec
subb
insb
fistps
pxor
scas
in
cltd
test
inc
js
insl
push
sbb
xor
inc
loop
dec
ljmp
push
sarb
ds
ljmp
cwtl
push
fisubl
xchg
int
arpl
inc
jp
aaa
and
jl
mov
js
dec
icebp
or
pop
sbb
cli
shrl
mov
addr16
or
pop
mov
insl
dec
mov
cmp
orb
test
sub
lds
imul
xchg
mov
push
and
test
mov
sub
inc
dec
pop
xor
fdivr
cmp
or
sbb
add
dec
lock
or
addb
in
or
daa
mov
outsl
pop
mov
test
and
inc
mov
mov
jo
sub
adc
sbb
in
aam
movsb
pop
and
cmc
add
cmp
or
or
loope
mov
adc
xor
jb
and
xchg
mov
sti
mov
cli
into
ret
mov
iret
bound
subb
fs
add
lcall
mov
pop
pop
fwait
xchg
xor
rcr
out
adc
fisttps
pop
lret
out
mov
xor
mov
loop
xor
push
je
out
sbb
ljmp
adc
cmpsb
cmp
ret
add
out
mov
push
cmp
and
mov
nop
mov
imul
push
std
int3
sub
test
jge
cmp
and
aam
shrl
fdiv
push
sbb
iret
add
mov
nop
lcall
fucom
rorl
scas
lods
movb
push
jl
shll
dec
int
inc
addl
mov
aas
jmp
ret
and
xchg
inc
in
inc
cld
dec
adc
out
cmpsl
cmpl
popf
xchg
push
frstor
cmp
sbb
xchg
or
test
stc
mov
mov
and
add
adc
inc
scas
sub
mov
fcompl
jp
roll
push
fwait
push
or
repz
mov
xor
outsl
insb
inc
imul
xchg
cwtl
aaa
daa
stos
cli
in
cmp
ljmp
xor
sub
sbb
out
call
out
dec
cmp
inc
insl
lret
dec
in
hlt
push
xchg
repnz
xchg
jle
mov
cmp
mov
dec
inc
push
jle
mov
mov
and
cmp
add
cltd
fs
call
repnz
subb
daa
pop
flds
ljmp
popa
sbb
mov
push
cmp
or
adc
bound
scas
mov
xchg
mov
imul
out
mov
adc
testb
and
fs
push
push
xor
inc
fwait
add
inc
push
push
or
cmpsl
cwtl
dec
iret
cmp
out
popa
lock
sub
push
jno
fwait
xchg
dec
inc
cmpsl
inc
ljmp
je
rcll
mov
cld
jns
scas
notl
inc
test
xor
pusha
rolb
dec
insb
aad
inc
mov
mov
std
inc
pop
jp
int3
sub
pop
pop
lods
dec
mov
test
ret
outsb
sub
xchg
or
movsb
mov
cmp
in
jbe
pop
dec
call
mov
sbb
clc
adc
test
cli
pop
lcall
sub
aas
jge
xor
aam
jp
cmpsb
mov
cmp
inc
add
jae
jl
mov
xor
pop
mov
push
mov
cmp
fstpt
push
xchg
cmp
push
ljmp
repnz
and
ljmp
out
clc
std
sbb
sbbb
sbb
rcll
adc
cmp
out
and
pop
icebp
daa
mov
sub
mov
sbb
xor
stc
sti
mov
cmpsb
stc
int
cwtl
add
sbb
adc
in
add
mov
push
jecxz
in
and
arpl
pop
ljmp
negb
out
dec
add
push
sbb
ja
adc
lds
sub
addr16
mov
jb
adc
fisttpl
jno
mov
push
xor
mov
fdivs
pop
ljmp
or
adc
sub
add
std
call
stos
das
imul
lea
and
mov
adc
mov
jno
dec
testl
movsl
xchg
cwtl
lret
mov
sbb
push
jo
push
outsl
pop
popa
arpl
jp
mov
cmp
dec
lods
add
or
mov
dec
push
cmp
dec
mov
sbb
mov
push
lods
or
test
ret
ja
push
dec
jge
ror
xor
fcmovu
or
xchg
xchg
repz
js
call
mov
pop
mov
push
loope
insl
add
xor
lds
adc
mov
call
mov
cmp
lahf
push
lret
movsl
lods
cltd
cmpsb
or
cltd
push
addr16
or
stos
dec
mov
sub
stos
dec
out
and
or
push
mov
jnp
ror
ss
xor
imul
fnstsw
jmp
mov
xor
outsl
adc
mov
inc
movsb
push
mov
adc
mov
cli
and
in
cmp
cmp
fwait
icebp
pop
sbb
dec
add
add
xchg
jnp
pop
inc
adc
aad
test
jl
adc
xchg
cmp
in
mov
sbb
pop
sbb
popa
push
mov
fistpl
mov
scas
mov
xchg
loopne
push
js
cwtl
sub
xor
push
aaa
ds
lods
jnp
xchg
mov
mov
rcrl
js
sub
fucomip
and
cmp
sbb
xchg
mov
xchg
mov
ljmp
lea
les
insl
icebp
shrl
rep
mov
icebp
adc
pop
in
mov
pushl
fsts
cmp
stos
dec
inc
cwtl
popa
out
int3
jge
notb
inc
pop
xor
dec
or
and
into
mov
enter
push
adc
out
dec
out
test
out
dec
insl
or
jge
sbb
cs
mov
ss
adc
movsl
jg
mov
sub
outsl
dec
mov
fwait
arpl
outsl
push
pop
mov
lret
arpl
pop
out
adc
pushf
inc
dec
mov
sbb
xchg
push
xchg
test
fdiv
pusha
pop
sbb
lods
in
inc
mov
rcrb
fisubrl
xchg
addr16
fisttpll
fucom
push
out
leave
pop
jo
xchg
sub
mov
or
mov
fdiv
push
sbb
out
test
out
roll
sahf
lods
sbb
mov
imul
addr16
out
adc
jecxz
pusha
imul
aas
pop
daa
xchg
xor
in
ja
leave
sbb
pop
inc
jbe
sub
clc
mov
xor
ss
imul
pop
shll
pop
push
clc
outsb
cmp
cli
inc
pop
arpl
addb
jo
scas
int
adc
ss
dec
mov
cmpsl
dec
adc
push
adc
mov
ret
rcrl
fistl
clc
cld
lods
pushf
push
add
cs
dec
rclb
stos
inc
fnstsw
or
inc
jle
lea
adc
test
cmpb
repz
sahf
int3
iret
dec
out
pop
fcmovnb
jg
mov
cmp
push
fsts
dec
leave
aaa
mov
sbb
call
adc
adc
idiv
sbb
mov
inc
mov
in
inc
je
mov
lods
dec
fucomp
push
xchg
shll
adc
aas
jmp
and
repz
cwtl
jno
gs
pop
push
dec
ljmp
jle
notb
popf
pusha
mov
push
jmp
cmp
stos
movsl
xor
jmp
out
mov
in
cmp
sbb
rcll
stos
loopne,pt
lea
outsb
js
mov
inc
dec
push
div
lods
xchg
fcompl
ret
fninit
lods
sbb
lahf
into
repnz
dec
dec
push
sbb
dec
dec
scas
decl
xchg
jl
scas
cmp
push
inc
loopne
hlt
xor
sub
add
lock
lahf
ret
int3
mov
in
jge
idivl
mov
sarb
dec
or
fildll
jbe
push
pushf
mov
cmp
sbb
inc
lock
cmp
dec
pushw
adc
lods
stos
ljmp
dec
pop
pop
mov
fiadds
mov
push
mov
scas
sub
xor
push
push
xor
and
jae
sub
in
inc
movsb
pop
pushf
dec
pop
repz
cwtl
dec
mov
mov
adc
mov
addb
push
lahf
sub
loopne
mov
es
push
aad
xor
repnz
insl
popf
lcall
aas
fistl
add
das
jb
icebp
mov
outsl
addl
test
jecxz
pop
cmp
pop
pop
xchg
test
rorb
jbe
loope
aam
xchg
lret
push
icebp
cmp
loope
into
mov
outsl
popf
mov
ret
out
or
aam
jns
in
cmp
inc
mov
cmp
sub
lock
mov
xchg
sub
sub
push
pop
rcll
xor
shlb
inc
or
dec
and
addr16
lret
adc
or
pop
cmpsb
sbb
nop
mov
pop
aaa
push
fwait
mov
enter
lods
or
test
sub
jecxz
dec
xor
movsb
movsb
shrb
sub
lods
mov
popf
jbe
push
mov
sub
inc
outsb
ret
shl
mov
sub
addr16
int3
mov
gs
in
aad
lock
imul
xor
shll
inc
out
dec
xchg
pop
int
adc
pop
and
pop
lods
inc
push
rclb
push
dec
and
adc
xchg
popa
or
orb
lock
push
fsubl
or
push
call
std
insl
xor
fnsave
sbb
push
jnp
cmp
mov
and
mov
adc
cmp
pop
lret
call
and
iret
fdivs
mov
mov
mull
xor
push
and
into
fs
pop
or
fwait
test
es
push
ret
dec
sub
nop
adc
hlt
xchg
or
jne
imul
adc
push
leave
push
add
xchg
sbb
lret
loopne
inc
mov
xchg
xchg
in
mov
andb
loope
test
dec
shll
cmc
push
aas
aad
push
fsubrl
cli
dec
sub
cmp
mov
arpl
rolb
sti
repnz
clc
xor
xchg
or
int
stc
icebp
bound
popa
push
outsb
mov
addl
scas
mov
out
sub
nop
sub
adcl
pop
das
out
or
insb
stc
fisttpll
jb
neg
mov
stc
mov
jae
dec
mov
and
test
jmp
fsubrs
or
mov
fmuls
in
test
push
push
arpl
sarl
inc
cmp
fimull
push
jecxz
mov
xchg
scas
sub
and
cmp
mov
jb
jnp
xorl
pop
mov
addr16
ret
rol
into
lcall
push
fldcw
dec
push
jp
dec
cwtl
dec
lods
mov
mov
imulb
movsb
sbb
pop
mov
test
or
push
mov
cltd
fincstp
sub
jno
in
jg
es
sub
dec
xor
shr
cmpsb
into
cmp
mov
idivl
lret
lock
pop
mov
mov
icebp
cmpsb
mov
xlat
mov
test
leave
enter
xor
jg
or
int
lock
mov
sub
mov
jge
inc
outsl
xchg
jb
rclb
push
lret
sarb
cwtl
sub
iret
ficompl
dec
loop
lds
rorl
mov
push
out
int
xchg
mov
mov
gs
or
in
pusha
jmp
hlt
jns
dec
loope
imul
daa
mov
test
das
inc
into
adc
push
push
pop
jb
outsl
lods
push
mov
sub
insl
or
sbb
and
cs
fwait
stos
loope
mov
lret
sarl
push
js
sti
les
push
js
cltd
mov
fldt
mov
mov
fstpt
int
cmpsl
adc
adc
add
mov
push
and
sub
vpunpcklqdq
pop
loopne
je
push
xchg
aad
xor
mov
out
test
xchg
adc
xor
aas
and
aam
es
sub
shl
je
lock
add
xor
xor
jns
call
scas
repnz
imul
sbb
push
and
xor
xor
dec
das
dec
xchg
imul
xor
push
pop
in
cmpsl
imul
dec
repnz
push
cmpsb
inc
xor
cmp
iret
outsl
inc
out
add
or
sti
test
jno
push
inc
and
inc
loope
mov
in
xlat
sub
xor
inc
nop
and
int3
cmpsl
lock
daa
sbb
add
mov
in
sbb
les
ja
add
ret
testb
movsb
adc
pushl
adc
movsl
and
jo
add
mov
imul
in
sahf
push
icebp
inc
insl
js
aad
add
xchg
lock
call
daa
decl
daa
test
inc
push
add
inc
xor
adc
jg
inc
cld
movsl
inc
pop
pop
hlt
clc
loopew
mov
lock
push
clc
fcompl
push
jge
fwait
es
addl
idiv
push
xor
push
jp
mov
outsl
pop
ficoms
pusha
pop
add
inc
push
pop
aam
xchg
pop
xchg
fstpl
mov
mov
aam
mov
pop
fstpt
xor
jbe
in
sarl
jns
mov
pop
in
lahf
std
in
testb
in
or
divb
jae
push
dec
iret
mov
loope
cmp
or
adc
fistps
stos
jmp
and
cmp
bound
xchg
cmp
pushf
inc
xor
xchg
aam
popa
enter
dec
jecxz
les
and
mov
pop
gs
cs
fsubrs
data16
cmc
cli
xor
jmp
inc
pop
jbe
loop
xchg
mov
lret
loopne
adc
add
fucom
inc
fwait
inc
mov
sbb
movsl
cmc
addb
ss
imulb
inc
adc
xor
dec
in
cmp
sub
add
lahf
mov
jp
out
inc
test
xchg
xchg
std
xchg
js
arpl
les
pop
shr
xor
outsb
sar
test
fadd
int3
mov
xor
test
cmp
sub
xor
adc
mov
in
jbe
ss
xchg
loop
and
and
cmp
push
int3
xlat
les
inc
hlt
sub
arpl
sub
in
in
jg
sbb
adc
call
push
ds
out
cmp
add
pop
dec
and
into
icebp
mov
pop
stos
fbstp
cmc
or
push
das
cmp
sub
inc
test
repz
lret
lea
add
or
xchg
dec
cmp
fcoms
mov
pusha
rcll
mov
lret
inc
cmpb
imul
incb
inc
sbb
push
inc
dec
test
sbb
mov
aad
push
lret
sub
cmp
movsl
xor
sub
idiv
fwait
xchg
scas
jmp
xor
mov
mov
loop
out
pop
in
dec
adc
jnp
jno
mov
cld
ds
test
mov
mov
sbb
add
lahf
lcall
insb
jge
outsl
pop
out
dec
push
sub
ret
xchg
std
ror
pop
sahf
add
jecxz
popaw
rol
jno
daa
dec
int3
mov
hlt
lret
xchg
adc
popa
lea
sub
and
adc
adc
cmp
pop
fucom
imul
orl
icebp
sub
pop
jg
or
fs
pusha
cmpsl
lods
loop
leave
cmc
mov
sub
dec
decb
adcl
inc
sbbl
sti
add
cmpsl
lods
leave
repnz
mov
mov
rclb
and
mov
mov
fimull
popf
pop
adc
adc
popf
mov
xchg
or
rcrb
jle
jge
mov
lcall
and
je
mov
sti
jnp
jmp
xchg
leave
out
cltd
aas
jbe,pn
xlat
push
xor
dec
mov
int3
push
push
pop
dec
xchg
sub
jg
pop
cmpsb
jno
scas
jl
stos
jmp
and
pop
mov
mov
je
jae
adcb
dec
aas
lret
push
out
outsl
xchg
sbb
dec
mov
es
add
pushf
or
xchg
mov
dec
xor
xchg
shrl
stos
xchg
dec
ret
cli
jno
cmp
adc
push
mov
mov
outsl
mov
aas
mov
adc
mov
dec
leave
sbb
xchg
xchg
jl
xor
mov
push
add
mov
bound
mov
addl
pop
subb
sub
jne
push
pop
lods
scas
add
push
div
shll
cs
repnz
outsb
mov
mov
pusha
mov
xchg
cmpsb
je
mov
cltd
shr
cmp
aaa
inc
mov
imul
inc
mov
mov
test
loopne
pop
scas
jmp
stos
loope
aad
outsb
jmp
lds
jne
enter
xchg
dec
sub
pop
data16
and
mov
andl
xchg
xchg
loope
lret
addr16
cs
xchg
cs
jo
dec
jne
xlat
jecxz
fsubl
jbe
movsl
push
cmpsl
jle
scas
dec
shll
divl
and
jbe
sub
test
arpl
add
outsb
push
mov
clc
ret
xor
lods
aam
push
dec
aad
dec
adc
sub
or
scas
and
popa
scas
out
sarl
push
xor
jle
lahf
sbb
gs
test
psllw
adc
push
insb
aas
pushf
inc
jmp
daa
cmp
lods
sbb
sahf
pop
pop
push
gs
add
and
adc
jle
jecxz
and
and
pusha
pop
mov
add
out
fildl
push
dec
int
xor
jle
fxch
push
int
cmp
fdivl
jmp
mov
and
cmpb
lahf
mov
mov
into
adc
pop
jmp
aam
je
rcr
sub
cltd
aam
ret
or
mov
fisubl
jno
insb
test
loop
aas
pop
jnp
repz
stc
sbb
outsl
je
lock
inc
mov
pushf
push
inc
lods
jl
cmp
add
add
mov
push
xchg
dec
cmpsl
jnp
imul
lds
mov
orl
ja
pop
mov
sbb
push
pushf
push
ds
add
pop
mov
loope
cld
jmp
push
jno
sub
cmpsb
clc
adc
movsb
cmp
mov
shll
jo
leave
and
xchg
inc
dec
mov
out
jb
mov
push
pop
mov
add
loope
ret
lods
sub
pop
sahf
jp
xor
ljmp
jg
nop
lahf
lock
rcrl
mov
scas
test
aaa
iret
sar
jle
inc
push
jmp
jmp
push
jp
cmp
push
dec
cli
movsl
call
mov
jge
mov
lods
in
ss
and
lds
shll
pop
cmp
mov
sbb
cmp
push
je
pop
cli
jbe
ret
push
outsl
imul
dec
test
sub
ja
and
loope
ljmp
ds
push
push
cltd
sub
xor
inc
inc
adc
leave
push
xchg
cmc
fldcw
shll
mov
es
stos
pop
gs
pop
mov
inc
pop
test
fsubrs
dec
mov
lret
jecxz
jle
sub
pop
mov
mov
mov
sbbl
rclb
xchg
arpl
test
pop
int3
out
xor
sbb
call
add
pop
in
ljmp
aaa
xor
adc
movsl
xor
mov
outsl
int
mov
outsl
getsec
adc
test
xor
ficomps
ret
inc
pop
or
popa
xor
xchg
cld
addb
pop
jle
jnp
addr16
lahf
mov
mov
dec
mov
jecxz
mov
nop
sbb
sbb
daa
std
mov
scas
pop
test
das
data16
cmp
jmp
add
and
leave
lds
cmc
pop
out
shll
sti
xchg
adc
scas
and
lcall
mov
bound
pop
dec
in
pop
add
mov
adc
add
mov
dec
lret
fsubl
push
adc
dec
dec
pop
adc
dec
adc
lods
hlt
mov
mov
pop
insb
push
mov
movsl
push
push
and
lahf
push
xor
and
scas
hlt
add
mov
repz
mov
mov
xor
insl
adc
pop
add
sbb
lcall
push
sbb
movsb
dec
in
aam
and
or
shrb
jno
fs
lahf
hlt
movsb
les
insl
and
bnd
pusha
add
out
scas
insl
xlat
push
push
dec
push
lock
push
gs
add
xchg
cli
mov
and
fdivp
rcrb
pop
cmp
hlt
orb
jae
ror
pop
lret
jns
adc
pop
push
xor
subb
cld
sbb
cwtl
lods
pop
xchg
pop
pop
stos
fucomip
leave
lcall
out
shr
jns
clc
pop
push
jg
fcmovbe
or
testl
mov
dec
and
dec
out
jmp
insl
adcb
stos
dec
lock
push
mov
clc
sbb
xor
push
adc
push
and
push
jmp
push
add
into
pextrw
or
sti
inc
enter
push
sarl
test
push
push
ds
pop
lock
sbb
icebp
std
in
jne
and
xchg
data16
xchg
fadd
mov
dec
dec
sti
mov
mov
dec
cwtl
sbb
mov
xor
jp
mov
sbb
cmp
and
addb
xchg
sub
cmp
gs
pushf
xchg
in
or
cmpsl
jne
jmp
cwtl
mov
outsl
lcall
jge
push
rcll
daa
std
pop
lea
rcr
add
into
xchg
pushf
jae
add
cmp
add
xlat
call
lahf
inc
fcompl
stos
push
jg
out
push
or
xorb
jg
mov
inc
push
xchg
inc
scas
jmp
xor
pusha
cmpsb
stos
fiaddl
das
sbb
js
dec
aas
or
or
inc
lret
lcall
loopne
or
lods
ret
cmp
adc
sub
sbb
sbb
icebp
sbb
sbb
mov
repnz
test
sbb
sbb
shlb
stc
jecxz
push
push
gs
je
into
push
in
arpl
pop
jmp
cmp
cmp
mov
pop
xor
cmp
loopne
xor
dec
mov
and
sub
cmpsb
push
sub
sbb
mov
mov
jne
fs
or
loope
sbbb
push
gs
sbb
scas
sub
adc
fnstsw
lods
in
sub
adc
sbb
mov
movsl
inc
adcb
xchg
xor
pop
sbb
nop
fs
ror
cmp
int3
sub
jns
out
aas
and
cltd
jne
clc
and
movl
mov
mov
mov
mov
into
aam
mov
movsb
stos
das
imul
sub
mov
mov
in
push
sub
ja
push
or
fdivrl
pusha
dec
icebp
fistpll
mov
mov
sbb
add
inc
test
movsb
cmp
fidivrs
cmc
xorl
fnstenv
mov
test
inc
xchg
cmpsl
popf
and
movsl
in
dec
sub
sub
inc
add
sub
mov
ficoml
icebp
ljmp
sub
and
sub
mov
cmpsb
jle
dec
cli
in
jge
stos
mov
clc
add
adc
xor
add
fmuls
jno
jno
and
mov
sub
mov
xor
mov
leave
inc
adc
iret
push
addr16
outsb
mov
int
jmp
sbb
xchg
arpl
cmp
mov
mov
mov
add
js
mov
pop
or
std
in
or
mov
pop
push
sbb
cmp
mov
pushf
push
push
aas
unpckhps
mov
xlat
aam
sbb
test
icebp
out
dec
rorl
fnstsw
or
push
ret
push
outsb
mov
inc
sbb
loop
scas
xchg
push
mov
mull
or
in
cmp
lahf
insb
lret
mov
adc
adc
lds
ljmp
pop
fstpl
fildl
inc
adc
pop
pop
es
inc
les
pop
or
mov
pop
jae
pop
in
popa
daa
clc
adc
pop
lock
sub
fisubl
add
mov
les
or
mov
aam
cmp
fisubrs
mov
loope
pop
loop
inc
fwait
data16
test
stos
cmp
fidivl
fs
push
test
push
hlt
sbb
lret
jo
dec
xchg
push
mov
jb
insb
xor
push
or
mov
add
cwtl
bound
inc
insl
mov
add
and
sbb
frstpm(287
push
mov
std
cmc
movsl
icebp
cmpl
leave
push
fs
jle
push
jecxz
test
lret
out
adc
mov
repz
mov
movb
push
dec
inc
mov
lret
pop
mov
dec
or
mov
dec
inc
lret
test
mov
cs
mov
sbbb
mov
pop
sub
imul
shr
pop
mov
mov
sahf
scas
jl
push
sub
mulb
dec
enter
cmpsl
mov
sbb
fmuls
cmpb
incl
sbb
popf
in
clc
dec
mov
pop
mov
std
pop
and
mov
idivb
jl
sub
and
xor
out
xchg
ss
sub
and
scas
mov
adc
and
stos
scas
repz
cli
cld
push
add
js
je
lea
cmp
movb
in
mov
mov
xchg
mov
pop
mov
push
or
cmc
mov
mov
imul
jge
pop
sub
jae
test
pop
mov
fwait
sbb
das
das
and
iret
loope
in
dec
hlt
sub
and
add
inc
or
cmp
adc
xchg
sarb
sub
add
mov
or
in
add
mov
stc
jge
jo
imul
cmpsb
clc
insb
out
mov
ret
adc
pop
lods
sbb
push
dec
fists
insb
rorb
mov
out
arpl
scas
icebp
xchg
mov
bound
imul
lahf
mov
xchg
repnz
mov
add
imul
and
sub
jge
and
jp
jb
inc
lds
adc
imul
jp
pop
sub
and
add
nop
dec
push
pop
inc
sbb
out
stos
rorl
xor
sub
cltd
push
sbb
mov
cmp
rcrl
sub
dec
jae
das
popl
xchg
ljmp
out
dec
pop
cmp
xchg
or
cmp
stos
lods
jp
xchg
jo
xchg
les
lret
sub
xor
in
cmp
push
adc
jle,pt
les
repnz
dec
mov
xchg
mov
pop
mov
jne
loop
mov
loop
mov
xchg
aam
sub
iret
lods
sbb
xchg
mov
xchg
outsl
test
xchg
dec
arpl
and
xchg
or
mov
repnz
test
les
test
loopne
imul
in
pop
mov
insb
mov
mov
mov
push
or
adc
inc
push
loopne
mov
xchg
iret
mov
dec
jb
stos
xchg
movsl
test
leave
rorb
rcrl
hlt
roll
jne
and
push
in
test
inc
inc
pop
xor
adc
xchg
mov
mov
dec
mov
fstl
or
sbbb
mov
into
sbb
ds
and
dec
mov
xor
js
push
push
xor
xor
imul
xor
lcall
fists
mov
cltd
mov
mov
adc
pop
bound
dec
push
cs
add
sti
call
push
ja
xor
mov
jmp
push
jb
test
gs
mov
push
sub
sti
mov
push
aas
xchg
add
adc
inc
cmp
push
roll
adc
mov
jmp
push
adc
stos
mov
pop
dec
ds
stc
rcrb
mov
jo
cwtl
cwtl
rclb
fiaddl
test
mov
mov
icebp
sub
or
adc
inc
stos
pusha
jnp
lds
push
ss
mov
xchg
and
imul
in
inc
adc
xor
mov
xchg
mov
jmpw
cwtl
jae
outsl
sbb
mov
fcmovnu
jne
mov
test
mov
mov
out
jle
jg
cmpb
loopne
scas
inc
pop
jmp
in
push
hlt
push
mov
push
and
and
inc
addr16
sbb
das
shll
cmp
adc
push
out
pop
xchg
mov
je
fsincos
dec
xor
mov
imul
ret
pop
negl
inc
cmp
or
and
xchg
xchg
ds
sarb
nop
sub
adc
jmp
ret
or
jnp
sbb
inc
ljmp
repz
out
mov
inc
jnp
mov
das
sbb
adc
jo
loopne
lds
pop
dec
push
fmuls
push
imul
add
outsl
test
push
arpl
xlat
dec
out
cmp
imul
orb
push
or
jne
adc
cmp
or
outsb
mov
cmp
pop
xor
scas
loope
dec
movsb
decl
mov
mov
jl
or
inc
push
sbb
dec
sub
mov
mov
mov
xchg
mov
lock
mov
int
mov
sahf
or
movsb
add
enter
push
cmp
push
cmp
mov
movsl
dec
test
into
loope
pop
and
dec
pop
icebp
pop
mov
and
sub
dec
sub
dec
add
sti
lds
stos
pop
dec
das
jne
aaa
pop
fucomi
jns
mov
or
sahf
xor
xor
ret
sub
mov
sbb
adc
arpl
pop
fstpt
xor
mov
jno
fnstenv
add
or
cmpsl
test
bound
lcall
adc
inc
xor
sbb
push
xor
xlat
pop
imul
and
stos
cli
inc
pop
sbb
add
mov
add
xor
bound
sbb
dec
and
fnstenv
jae
je
pop
pop
loope
cmp
or
lods
fldt
push
xor
rolb
mov
sbb
or
xor
push
out
xlat
add
xchg
dec
lods
push
stos
pushf
dec
into
test
xor
insb
imull
rcrl
aas
lretw
lds
push
mov
fld
fistl
or
fcmovbe
mov
test
mov
cltd
cltd
sbbb
cli
inc
jb
imul
inc
add
push
cli
inc
mov
sub
aas
lds
mov
aaa
adc
ds
sub
push
xchg
sub
xor
pop
cmp
xor
rolb
ds
pop
push
mov
loope
js
dec
pushf
lea
hlt
sub
movzwl
mov
pop
adc
ret
fwait
js
push
sub
xor
xchg
lods
adc
push
push
movsl
stos
ss
cmp
stc
incb
lds
xor
addr16
daa
add
les
mov
cmpsb
mov
sbb
mov
leave
jo
xchg
mov
hlt
cmpl
popa
sbb
xor
rcll
xor
push
mov
das
iret
mov
cli
pop
test
cmp
pop
lods
out
mov
fidivl
movsl
xchg
dec
inc
push
dec
lcall
scas
push
popa
sti
mov
rclb
xor
rdtsc
les
jns
into
iret
cli
aas
insl
and
xchg
cwtl
gs
xor
inc
push
fwait
or
outsl
insl
mov
or
and
movsl
push
push
mov
stos
push
daa
test
stos
loop
pushf
sub
test
mov
test
push
loopne
xor
out
in
les
cwtl
popf
inc
aaa
cltd
pop
mov
dec
cmp
leave
test
jg
lea
pop
test
dec
movsl
mov
les
fnstcw
cmp
xchg
mov
jb
lahf
arpl
mov
outsl
mov
cmc
cmpsl
sub
mov
push
in
outsl
and
inc
sub
jmp
aad
adc
xchg
imul
jnp
hlt
lcall
divl
pusha
aaa
sub
in
mov
lods
rcrl
cmp
dec
xchg
aam
es
jg
push
mov
push
fcoms
pop
pop
hlt
fcoms
lock
inc
add
subb
lods
and
imul
mov
sub
ficoms
mov
push
jne
inc
dec
adc
cmp
mov
in
and
in
sahf
sbb
mov
paddsb
push
aaa
mov
aaa
out
mov
dec
xchg
jl
sti
fs
fstl
loope
nop
jns
in
outsb
ss
push
and
stos
int
mov
add
pop
cmp
pop
test
fists
cli
ja
mov
sub
hlt
mov
pop
stos
stc
in
mov
ljmp
xor
or
sbb
addr16
xor
ror
mov
push
sbb
jno
mov
inc
mov
pop
test
inc
aad
dec
mov
out
arpl
mov
rorl
jl
fstpt
push
pop
aam
mov
in
and
out
pushf
insb
or
incb
scas
test
mov
fildl
dec
stos
aam
andl
addl
cmp
or
sub
inc
adc
test
and
mov
sub
jne
xchg
ja
adc
add
lea
icebp
sbb
pop
sbb
pusha
pop
mov
jge
jl
push
xor
cmpsb
jle
xor
ja
lea
cltd
testb
and
add
rorl
ljmp
mov
push
add
aas
xchg
pop
jl
lods
icebp
andl
pop
xchg
repnz
push
sub
push
push
fwait
lret
in
mov
jns
icebp
xor
pop
in
pusha
cmp
mov
scas
ret
jecxz
xchg
mov
xchg
xor
cwtl
aas
jle
lcall
fildll
push
fs
test
scas
stos
shl
adc
movl
xchg
push
pop
cwtl
dec
inc
sub
cmp
sti
xor
inc
cmc
cmpsl
mov
aam
xor
insb
adc
scas
cmp
std
outsb
stc
xor
mov
xor
jne
aam
xchg
or
mov
outsb
sti
push
fnstenv
sub
cmpsb
out
sub
lret
mov
mov
push
xchg
push
jb
repnz
add
jae
fidivrs
cmp
xchg
add
xor
jge
lret
mov
inc
int
mov
inc
repz
push
rorl
cmp
push
mov
xchg
cmp
repnz
mov
inc
mov
test
mov
shl
mov
outsb
data16
cmp
mov
and
add
xchg
xor
roll
movsb
dec
test
cmp
pop
stos
xchg
hlt
out
cmp
cmp
call
inc
jle
xchg
idivb
ljmp
test
cwtl
jg
sub
fstps
add
and
sbb
adc
xchg
ja
ljmp
jno
repnz
mov
xchg
fildll
lcall
lret
sbb
out
push
mov
push
xor
sub
pop
mov
stos
inc
movsb
sub
jnp
push
push
shl
stos
inc
dec
cmp
xchg
and
sbb
jno
cmpsl
sbb
into
mov
lea
push
sbb
pop
pop
push
xor
xor
or
sub
cmpsl
and
neg
cmp
push
call
and
arpl
into
sbbl
bound
adc
mov
pop
jmp
std
les
pop
push
pop
outsb
ficomps
insl
sbb
lea
adc
sub
xor
fsubp
jp
xchg
and
ret
jg
jne
popa
jae
bound
sahf
add
xchg
pop
in
jge
mov
jl
int3
lret
lcall
cmp
sbb
xchg
cltd
and
js
lds
inc
push
test
push
mov
xchg
xchg
loopne
cmp
insb
sub
xchg
jge
mov
mov
jo
lods
adc
outsb
sbb
or
insl
jns
cmp
sub
call
cmp
cwtl
out
dec
xchg
lods
rcrl
icebp
cmp
add
push
dec
mov
std
push
pop
push
stc
mov
or
testl
mov
xor
cwtl
and
ror
insb
pop
repz
loopne
ret
dec
in
cmpsl
jecxz
cs
inc
push
int3
pop
push
out
lods
scas
loope
add
ret
pop
inc
dec
movsl
jmp
cltd
fcmovnu
cmp
mov
lock
dec
mov
add
mov
call
cmp
aad
jmp
jno
add
jle
xor
daa
cld
call
sahf
dec
popf
stos
stc
hlt
dec
adc
ds
das
push
imul
mov
leave
mov
iret
cmp
sarl
ret
gs
xchg
addl
pop
cltd
push
lods
gs
sbb
add
jno
rcrl
pop
push
cmp
out
add
sub
lea
and
jae
lret
mov
jl
and
pushf
xchg
repz
pushf
or
sbb
mov
into
pop
fwait
xor
push
xor
out
lods
add
scas
add
adc
xor
add
repnz
loopne
rol
push
cmp
sar
shl
jno
xchg
lods
repnz
ror
out
xchg
ja
div
mov
xchg
and
dec
pop
sbb
and
in
scas
add
int3
push
jg
and
lahf
jmp
xor
mov
jmp
pusha
pop
rorl
stos
in
ja
jo
outsl
test
js
mov
dec
and
cld
roll
lea
jns
nop
mov
cmp
cmpl
xor
sub
xor
mov
mov
jp
adcb
adc
popf
push
xor
mov
push
inc
rcll
jnp
sbb
inc
xchg
mov
ret
addr16
add
shll
cmp
push
leave
mov
lods
mov
push
ds
jle
fmull
xchg
movb
sbb
pop
sub
test
inc
out
mov
xchg
push
out
and
xchg
aad
sub
pop
call
mov
mov
inc
push
outsb
xchg
je
xchg
adc
inc
push
addr16
inc
sub
rorb
test
cli
and
inc
pop
fdivr
jmp
imul
in
popf
push
mov
dec
aaa
imul
cmp
enter
cmp
jbe
mov
cmp
adc
jecxz
shll
jmp
ret
fistpll
push
or
ja
and
das
sub
leave
push
rep
jecxz
das
aad
dec
nop
rcrl
lea
mov
adc
or
mov
std
or
fwait
movl
push
insb
jg
pop
fldt
or
ja
cld
leave
sahf
xchg
loop
jp
push
call
addb
mov
xor
fidivrl
lods
aaa
pop
add
mov
jne
pop
cmp
lds
addr16
mov
ret
push
mov
sbb
and
push
gs
addr16
mov
sbb
mov
pop
sti
and
ss
in
in
in
imul
notl
cmp
xchg
cmp
jl
jp
call
push
mov
push
mov
xor
sbb
jbe
jne
daa
adc
dec
sub
or
stos
push
aad
nop
xchg
pop
out
stos
les
in
xchg
aas
pop
dec
out
mov
xor
jmp
xchg
mov
inc
cmpb
add
aaa
jb
mov
mov
repz
in
xchg
sub
addr16
shrl
jo
pop
test
imul
shrb
push
mov
dec
and
adc
inc
stc
mov
notl
pop
stos
cmpsb
sub
daa
mov
popa
mov
xor
mov
xor
sub
int3
pop
cmp
aad
jle
test
adcb
jno
fs
sti
mov
mov
aam
pop
filds
hlt
or
xchg
imul
mov
aam
in
outsl
jg
xor
xor
mov
and
inc
jb
mov
cmp
pop
stos
fdiv
mov
sub
sbb
adc
fidivs
pop
inc
cmp
pop
push
cmp
jo
or
std
cld
push
pop
sub
mov
scas
mov
inc
cli
mov
sbb
jp
mov
xchg
fsubs
dec
or
pop
imul
jg
mov
jge
xlat
xor
decl
mov
in
inc
xchg
daa
sub
xchg
shlb
add
and
leave
jnp
pop
cs
push
cwtl
mov
push
adc
fs
test
jge
out
shll
push
jno
dec
add
xchg
add
ficoms
std
inc
sub
addr16
lahf
fs
push
cmp
test
inc
rcll
xor
mov
inc
jmp
popa
mov
in
xor
pop
xor
clc
mov
fstpl
stos
jo
enter
jp
shrl
adc
mov
in
test
mov
jb
xorl
pop
and
and
push
sbb
insl
xchg
mov
push
xchg
test
repz
mov
or
push
jo
sbb
daa
bound
adc
jle
in
call
imul
or
jne
jno
cmp
sti
inc
cmpsl
lock
sti
cmp
mov
push
mov
xchg
clc
call
lahf
mov
test
pop
popf
rol
mov
push
daa
sbb
push
test
jmp
or
sbbb
rorb
in
jecxz
sub
xchg
jno
pop
xchg
sahf
cli
loope
popa
xchg
and
mov
popa
mov
adc
lcall
movl
dec
rolb
xor
lds
repz
mov
dec
scas
or
sar
xor
stos
call
test
dec
inc
imul
lock
fcmovbe
cmc
xchg
xchg
nop
js
fcmovnbe
sbb
and
fists
pop
mov
push
mov
dec
scas
mov
test
jecxz
enter
xor
imul
subl
test
int3
and
and
push
jnp
inc
inc
cmpsb
dec
shl
mov
adc
imul
xor
scas
test
and
lea
subb
call
pop
or
out
adc
inc
subl
sub
into
mov
push
push
sub
inc
jnp
push
pop
mov
xchg
movsb
dec
pusha
cwtl
adc
divl
leave
mov
in
cld
loop
bound
jmp
mov
fcmovnbe
ret
pop
cmp
iret
mov
and
test
add
xchg
mov
mov
xor
mov
mov
out
rclb
aas
aam
ja
and
mov
ficoms
xor
lea
dec
bound
mov
xor
out
imul
fcoms
push
mov
jne
fs
into
sbb
loop
stc
int
push
xchg
mov
mov
mov
adc
bound
and
lret
ror
and
pop
xor
div
jecxz
inc
pusha
mov
in
sar
push
lock
enter
icebp
adc
push
fmul
data16
repnz
fbld
cmp
jmp
bound
mov
lret
push
gs
insb
and
and
jp
xchg
enter
addr16
xor
loope
mov
push
push
push
mov
jns
shrb
fstl
mov
and
xor
pusha
cmc
xchg
dec
pop
nop
in
jecxz
out
orb
outsb
add
pusha
stos
rcrb
jmp
idivb
popa
inc
push
inc
jo
sub
jmp
in
mov
lea
xchg
push
jmp
dec
pop
fnstsw
cs
sahf
mov
fxch
xor
cmp
xchg
stc
fistl
and
lods
insb
jno
and
je
cmp
or
xchg
pushl
std
cmp
in
xor
cmp
adc
dec
in
mov
cmp
out
xchg
mov
mov
inc
sub
pop
mov
ds
cmp
aaa
dec
in
mov
dec
push
add
in
shrl
cld
sbb
pop
mov
push
add
add
and
or
mov
aad
pop
inc
in
lahf
and
lds
push
mov
or
in
popf
pop
xchg
mov
jns
lahf
int
mov
je
rol
dec
add
cmpsl
enter
aam
inc
jne
cmp
or
pop
cmpsb
stos
push
mov
fwait
xor
cmp
inc
rcrl
jp
push
pop
stos
sub
jmp
loope
pop
mov
dec
jo
xchg
popf
push
xlat
or
ret
addr16
dec
sti
aam
pop
mov
inc
mov
sub
dec
pop
push
xchg
inc
sub
into
xchg
inc
inc
xor
xor
mov
aad
arpl
jecxz
cmp
sahf
sbb
rcrl
xchg
push
mov
mov
dec
push
imul
pop
test
pop
pop
and
fdivr
sarb
stos
jno
sub
mov
and
scas
dec
xor
and
out
popf
out
cmp
shll
stc
repz
inc
sub
inc
je
and
fnstenv
in
add
or
fcoms
cmc
xor
inc
dec
xor
enter
sub
xchg
les
pop
cmp
out
insb
adc
packsswb
mov
add
push
inc
loop
in
cwtl
aad
push
stos
les
cld
lock
cmpsb
es
mov
cmpsl
push
in
jmp
cld
mov
jo
dec
dec
mov
js
loopne
les
and
rorl
mov
adc
sbb
ret
stos
jno
pop
push
inc
int
xchg
in
je
test
addr16
in
xchg
xor
aaa
cli
push
mov
jmp
sbb
fiadds
add
mov
mov
cmp
fwait
paddsb
jb
cmp
in
ret
jmp
push
xor
dec
in
cmpsb
psllw
or
jo
mov
fwait
inc
int
leave
jmp
add
outsl
jne
adc
and
cmpb
enter
and
inc
inc
mov
mov
out
sub
adc
jnp
arpl
ja
push
call
lea
cmp
outsb
ja
dec
jae
das
data16
adc
adc
and
adc
add
adc
outsl
dec
jmp
ljmp
xor
inc
es
mov
cs
cmp
xlat
pop
lods
hlt
inc
push
mov
in
mov
aaa
push
fnstsw
pop
sbb
cs
dec
test
ds
mov
mov
push
lahf
inc
and
cmp
add
movsb
add
je
jnp
jae
leave
icebp
push
movsl
xor
and
repz
out
lret
or
push
push
push
xchg
fcomp
popa
les
imul
cmp
pop
bound
add
adc
pop
jae
mov
ja
scas
test
cmp
xor
ds
enter
dec
mov
mov
aaa
jl
loop
mov
in
push
es
rorb
cmp
ret
ja
inc
push
lahf
jae
sbb
enter
mov
test
cmp
aas
jmp
push
out
adc
dec
dec
popf
xor
adc
aam
cmp
pop
mov
mov
add
push
mov
pop
jb
out
xchg
xchg
stos
lods
sti
xchg
cld
dec
xchg
les
cmp
mov
add
insb
stos
mov
push
jns
jne
xchg
js
into
or
movsb
adc
clc
jbe
cli
out
inc
ljmp
mov
mov
and
mov
iret
jl
cs
jnp
ljmp
inc
sahf
test
loope
xchg
hlt
inc
inc
jp
and
repz
test
and
sbb
xchg
pusha
mov
xchg
filds
pop
mov
dec
lea
pop
fdivrs
mov
ljmp
clc
and
jno
icebp
xor
fwait
push
inc
fwait
pop
dec
and
aad
mov
js
mov
imul
mov
mov
sbb
xor
je
es
xchg
lds
test
ljmp
ja
cmp
inc
scas
mov
lods
and
cmp
mov
inc
add
sub
int
insl
xor
lea
xchg
sub
mov
ds
dec
bound
out
xor
mov
popa
insl
jmp
sub
mov
add
faddl
scas
mov
mov
add
pusha
inc
addl
jecxz
jmp
xchg
nop
xor
push
rcl
lds
mov
add
test
mov
xchg
cwtl
ds
lods
mov
flds
xchg
rorl
inc
scas
movsl
push
inc
aad
push
aas
out
lds
jns
out
push
cltd
jbe
xor
push
fsubr
inc
and
mov
mov
adc
mov
aam
jno
fsubl
fidivl
js
dec
xlat
cmpsb
leave
mov
sbb
cli
nop
lret
movsl
push
mov
mov
jge
xor
sbb
mov
xchg
inc
cli
popf
jg
lds
cmp
jb
in
pop
xor
mov
nop
mov
jns
mov
xchg
xchg
fs
xor
pop
in
add
or
bound
push
add
insl
cld
stos
adc
test
ficomps
push
jmp
jl
mov
xor
outsl
add
sub
and
xlat
sbb
addb
lods
arpl
push
and
out
xor
xchg
sub
push
xchg
pop
out
ljmp
pop
cmc
dec
sub
nop
orl
popf
iret
sahf
jo
fbstp
xchg
test
in
insl
cltd
iret
push
test
ds
cltd
or
loopne
adc
adc
jmp
cmp
scas
imul
dec
hlt
sbb
and
les
arpl
lret
mov
test
sti
bound
dec
cli
loope
mov
push
nop
movsb
inc
xor
out
imul
aad
fadd
sbb
jg
xchg
into
and
icebp
and
aas
les
cld
inc
jp
jbe
ljmp
jge
ret
popa
jne
ljmp
xchg
or
mov
out
sar
push
cld
mov
adc
pop
jbe
xor
mov
jae
cltd
adc
and
popf
xor
popa
test
mov
lret
ret
pusha
mov
cmpsb
jno
out
lods
ljmp
icebp
cmpsb
jbe
mov
adc
push
dec
rep
loope
mov
jp
fstp
pop
idivb
jmp
ret
inc
enter
jmp
pop
scas
mov
out
sbb
sub
pop
fs
orb
lret
cmc
rol
lock
loop
mov
mov
stc
mov
fs
push
add
push
mov
lods
lcall
add
cmpsl
fsubrl
cmpsb
cmp
jg
repnz
xchg
sbb
mov
fwait
pop
dec
imul
xor
arpl
add
push
testl
movsl
xchg
add
pop
aad
xchg
mov
cmp
orb
mov
cltd
xor
rol
popa
jbe
jbe
inc
inc
add
pop
jb
add
dec
push
or
mov
imul
xchg
pop
mov
stc
mov
into
sub
mov
xchg
pop
cmpsb
mov
test
cmp
and
dec
mov
mov
gs
push
in
and
ljmp
adc
insl
int
xchg
or
dec
gs
out
and
cs
cmc
push
mov
ja
fnstenv
fsubrs
mov
scas
sbb
push
xor
push
enter
and
test
cld
loop
sti
sub
mov
jnp
mov
mov
stos
add
in
pop
mov
gs
pop
ja
pop
push
repnz
jnp
push
mov
cmp
mov
jmp
mov
inc
lret
mov
push
inc
mov
mov
outsb
mov
sub
in
test
call
jns
and
jbe
insl
enter
enter
cmc
xchg
stos
lock
mov
and
adc
push
hlt
xor
je
cmc
fsub
in
lahf
inc
push
add
out
subl
imul
fadds
int3
mov
ror
inc
xor
rcrb
jne
add
mov
mov
push
cmp
adc
xor
nop
xchg
cmc
add
sbb
aad
mov
cltd
inc
cmovbe
sbb
test
dec
pop
movsl
xor
js
pop
std
ret
fiadds
push
mov
adc
adc
arpl
lods
int3
or
std
imul
nop
mov
dec
popa
jp
scas
mov
repnz
outsb
sbb
mov
lret
mov
inc
inc
inc
rep
ss
loopne
pop
inc
mov
sahf
aad
test
test
movsb
dec
pop
mov
imul
mov
clc
sub
adc
pop
sahf
add
mov
daa
shlb
in
sbbl
movsb
test
sahf
cmpsb
fldcw
mov
xor
movsl
fdiv
gs
jb
mov
out
fadds
xchg
or
fistl
stos
mov
cmp
or
pushl
dec
stos
arpl
mov
mov
pop
jmp
sub
mov
notb
rol
add
in
test
mov
sub
mov
movsl
mov
sub
ja
rolb
les
xchg
mov
ljmp
or
sbb
pushf
xchg
repz
ret
cmc
aad
incb
dec
and
add
xchg
roll
mov
jns
and
test
sbb
inc
cs
clc
decb
pop
xchg
and
arpl
push
mov
mov
push
fstl
imul
or
jle
jb
sbb
jno
into
jge
add
sbb
cmp
idivl
dec
cmpsl
dec
or
push
inc
push
xchg
add
sbb
push
test
push
dec
insb
ljmp
pop
and
mov
movsl
sbb
fsubrl
int
xchg
into
and
fstl
mov
sbb
push
xchg
xor
addr16
pop
pop
mov
push
in
inc
dec
rcrb
inc
inc
bound
or
push
lods
fisttpl
mov
ficoml
test
mov
dec
add
out
pop
imul
cmp
jp
stc
test
aaa
cmp
and
jo
xor
pusha
mov
cmp
scas
stos
imul
xchg
jge
aam
lds
mov
inc
je
push
dec
inc
shll
mov
mov
int3
add
mov
fcmovne
movsb
add
cmc
outsb
dec
cmp
test
ds
xor
mov
jle
iret
loopne
cmpsb
es
mov
and
or
ds
mov
add
xchg
popa
add
push
cs
add
fldcw
lcall
lahf
je
mov
addr16
inc
data16
xor
lret
mov
jle
inc
mov
orl
js
push
pop
xchg
sbb
push
lret
pusha
add
dec
out
mov
xor
sub
iret
mov
lret
mov
aaa
shlb
out
insl
gs
pop
jb
pushf
ffreep
in
daa
push
push
mov
das
push
loopne
popa
test
int
sub
aad
std
jbe
orl
sub
lret
cmp
inc
mov
or
push
sbb
lcall
or
out
xor
mov
out
sbb
or
xchg
adcl
jge
mov
bound
dec
lods
rorl
ja
stos
jle
xlat
outsl
mov
mov
inc
push
aam
jae
adc
jg
and
jae
add
rol
sub
pop
jne
xor
out
aas
inc
dec
push
scas
mov
in
sub
pop
gs
mov
sub
cmp
out
and
divb
cmp
imulb
insl
es
push
mov
push
dec
outsl
mov
in
sub
mov
dec
addl
popl
mov
stos
jl
mov
orb
push
add
mov
ret
je
add
fsubl
test
push
in
js
jle
ret
pop
in
pop
fnstsw
in
aad
jo
fnstcw
add
mov
push
cmp
mov
lret
inc
stos
or
lds
mov
mov
inc
lods
test
ret
add
dec
int3
subb
int
jge
or
mov
fisttpl
les
mov
add
movsl
lret
adc
jnp
mov
mov
fucomip
mov
adc
xchg
sub
in
mov
movsb
fs
mov
cs
jae
lods
lods
fisttps
into
cmp
popa
fstl
pop
nop
ja
jno
push
dec
movsl
mov
mov
mov
mov
ror
or
in
or
imul
jne
jg
jmp
cltd
shrl
mov
leave
jl
push
push
mov
insb
sbbl
inc
adc
pusha
jb
inc
dec
mov
js
and
mov
sub
sub
fmull
xor
clc
inc
sbb
dec
sub
adc
sbb
or
pop
cmp
and
add
shll
add
loope,pt
push
jne
xchg
push
mov
in
leave
sahf
xchg
adc
ds
lods
fucom
pop
dec
mov
dec
mov
mov
into
push
jno
and
xchg
test
into
sarl
mov
test
repnz
in
ret
adc
sbb
mov
dec
push
xor
nop
xor
imul
sbb
xchg
inc
sbb
test
aam
loopne
outsb
dec
inc
loop
push
outsb
cmp
int3
push
push
mov
sub
les
lahf
insl
and
cmc
fs
add
xchg
test
int
daa
mov
push
lret
leave
xchg
fstps
std
pop
sbb
xchg
aam
lds
outsl
mov
adc
rcll
gs
or
imul
pop
xor
insl
jmp
lret
sbb
loope
std
mov
xchg
int3
stos
or
push
sub
push
std
jbe
jecxz
push
push
pop
inc
repnz
das
out
in
jg
fwait
xor
mov
lds
int3
fsubs
mov
lcall
pop
dec
xchg
fldcw
bswap
jno
sahf
je
lods
mov
ja
leave
pusha
jns
nop
jae
out
pop
pop
mov
ja
cmp
pop
loopne
test
mov
test
out
jg
fincstp
or
imul
add
call
pop
rcrl
jmp
cmp
jbe
mov
cmpsb
dec
jae
int
dec
scas
loope
jmp
xor
fidivrl
cmp
sti
add
imul
inc
test
sbb
dec
stc
lock
ljmp
sub
or
adc
and
aaa
or
cli
dec
push
inc
xor
mov
mov
arpl
dec
sbb
and
dec
cmp
je
jo
xchg
rolb
dec
push
stos
push
jno
fwait
ja
dec
lds
and
jge
out
adc
rcrb
mov
add
clc
push
repz
movsb
mov
dec
mov
sbb
movsl
jge
mov
mov
xchg
movsl
fwait
cmp
lds
xlat
test
xor
or
std
jl
mov
lret
mov
mov
hlt
jns
cld
push
and
repz
xchg
imul
pop
dec
push
add
xchg
int3
jae
je
sub
lds
and
fdivp
xchg
mov
sarl
add
mov
jb
push
daa
xchg
or
ds
and
daa
mov
adc
pop
pop
rcrl
xchg
jns
cmc
cs
imul
sub
mov
std
xor
pextrw
dec
mov
mov
outsl
orl
stc
cmp
xchg
xchg
icebp
push
fdivrl
push
adc
jl
fs
mov
cmc
push
js
pop
mov
xchg
lock
in
xor
out
loope
mov
mov
roll
and
adc
jne
mov
jno
sbb
mov
test
daa
clc
or
movsb
std
mov
aad
push
fstl
adc
std
and
mov
sub
add
repz
cmpsl
jle
add
add
popf
stos
roll
sub
xor
insl
push
dec
sub
insb
dec
sub
push
shll
je
into
jns
jno
cwtl
ja
xorb
repz
jbe
or
push
jb
inc
xor
jle
xchg
aad
mov
jno
mov
mov
push
arpl
mov
clc
push
ret
leave
test
pop
gs
dec
add
lock
insl
push
or
inc
sub
sub
cmp
and
adc
pop
out
sbbb
inc
les
enter
sar
int
add
mov
test
pusha
sbb
or
arpl
mov
lea
cmp
in
mov
insl
int3
outsb
fdivr
adc
sbb
leave
or
js
or
repz
sbb
xchg
inc
cmp
adc
inc
adc
xchg
dec
lahf
adc
gs
sbb
cmp
adcb
push
dec
outsl
xchg
stos
js
sti
jne
and
jecxz
sbb
pop
stos
mov
sahf
fisubrl
xchg
push
adc
inc
push
xor
mov
pop
sub
jae
out
push
or
jae
scas
loope
sub
push
jbe
xor
inc
pop
xchg
aad
test
push
std
cmp
std
fisttps
jns
xchg
leave
mov
call
or
mov
insl
imul
dec
sbb
je
cmpsb
push
jnp
push
int
es
inc
inc
push
scas
ss
cli
pop
insl
mov
sbb
and
sti
imull
sub
sbb
fdivrl
cmp
sbb
adc
mov
mov
inc
in
push
aas
popf
mov
mov
aam
das
mov
out
mov
pop
lods
es
or
jle
sub
lds
add
imul
in
jo
arpl
add
cmpsl
mov
outsl
jbe
pushf
dec
mov
scas
add
mul
mov
in
mov
inc
mov
cmpsb
jns
jno
jne
clc
jmp
add
xchg
mov
roll
dec
pop
mov
mov
xor
std
sarb
pop
shlb
shll
loope
push
scas
fsubr
cmc
inc
dec
or
outsl
xchg
xchg
cmp
addr16
cli
insb
xchg
lods
add
int
and
lcall
cwtl
and
stos
pop
mov
mov
or
mov
add
jb
cmp
aas
mov
movsb
add
int
jge
inc
mov
addb
stos
cld
xchg
fnop
add
ss
mov
cmp
push
mov
sub
mov
or
mov
adc
mov
insb
fisubrl
rcrb
scas
ret
or
dec
pop
mov
fsubr
pop
sbb
xlat
pop
pop
imul
push
jle
jge
sbb
leave
sbbb
pop
loop
cmp
aad
pop
not
mov
and
ret
lods
mov
popl
dec
sbbl
add
fimull
mov
stos
add
std
adc
imul
pushf
xchg
test
jns
inc
mov
lods
lret
sbb
sarl
cmp
xchg
mov
jge
out
test
daa
cs
inc
mov
jmp
mov
pop
leave
or
out
xlat
and
insb
mov
cmpsl
sub
jbe
fldl
xor
sbb
push
inc
mov
fistpl
arpl
push
push
xor
out
rcl
jbe
leave
pushf
add
jno
rcll
xchg
jg
sub
es
sub
mov
cli
xor
ret
cmpsl
ret
into
shl
jle
test
mov
lret
icebp
ret
stos
cs
icebp
mov
xor
sbbb
movb
dec
test
dec
pop
pop
stc
into
bound
fwait
and
stc
jp
pop
cmp
ficompl
movsl
shrl
sbb
inc
das
mov
sub
cmp
lods
aas
rclb
push
stc
aaa
cli
fsub
pop
pop
lea
sub
and
adc
pop
stc
xlat
mov
xor
test
shrb
pusha
cmp
sbb
test
push
mov
mov
es
rorb
push
and
xchg
daa
push
leave
ja
cltd
xchg
mov
ljmp
jnp
es
enter
aaa
dec
sbb
sub
outsl
jno
pop
insl
cmp
loopne
lods
inc
push
lret
xchg
add
or
lret
cmp
outsl
ss
outsb
stos
mov
push
mov
mov
push
or
out
xchg
pop
push
xor
mov
movb
lods
dec
push
test
sbb
push
xchg
fdivr
and
cwtl
and
pop
pop
adc
ret
repnz
cmp
outsl
push
mov
cli
pop
mov
jns
sahf
dec
fwait
call
inc
pop
push
jbe
fmull
mov
fdivp
pop
mov
loope
mov
es
or
push
xor
pusha
dec
xchg
adc
jns
inc
xor
movsl
fldenv
or
push
cld
lock
adc
xor
mov
dec
pop
sar
mov
fistl
lahf
aaa
ja
jle
xor
stos
pop
adc
jno,pn
loopne
iret
dec
adc
push
and
cwtl
add
dec
jns
mov
aas
dec
cmpsb
or
mull
in
popa
inc
popa
xchg
leave
idivl
cmp
dec
push
sarb
mov
test
inc
push
mov
sbb
out
arpl
pop
in
cmp
xor
xchg
cmpb
aam
mov
add
cmp
int3
mov
sub
repnz
adc
aam
rcrb
addr16
xor
inc
ds
mov
xchg
stos
and
aaa
inc
int3
jbe
dec
iret
push
and
gs
rcl
mov
xor
push
shrb
clc
sbb
fiaddl
ljmp
or
push
adc
xor
aad
andb
insl
sbb
xor
adc
sbb
pop
mov
xchg
inc
andl
js
mov
or
roll
iret
prefetcht1
or
fstps
insl
outsl
mov
into
ja
adc
clc
or
stos
stc
jae
cmp
jp
or
ror
xchg
mov
cmp
les
inc
cmc
sub
sbb
sahf
sub
into
pop
scas
or
test
mov
fbld
jp
repnz
jge
mov
and
lret
imul
add
call
in
xchg
adc
push
and
pshufw
in
inc
cmp
mov
rcrl
lock
mov
jno
mov
out
idiv
fxch
mov
mov
sete
sub
icebp
mov
sbb
fdivrs
fs
sub
jmp
pop
clc
xor
repnz
sbb
mov
scas
add
in
mov
push
adc
nop
insb
xchg
push
cld
addr16
dec
dec
std
xchg
bound
gs
xchg
push
mov
sub
inc
xchg
mov
mov
mov
or
outsb
adc
enter
fsubrs
fcomi
sub
dec
outsl
dec
mov
mov
inc
cwtl
bound
int3
fs
add
rcl
pop
in
mov
cmpb
imul
cmpsb
cs
dec
enter
adc
inc
cmovge
fildl
jg
xor
mov
gs
xchg
loop
inc
cmp
pusha
xor
loop
fwait
test
fnstsw
inc
sbb
or
sbb
loope
scas
inc
jmp
loop
xor
xchg
pop
inc
and
frstor
xor
ljmp
and
out
sbb
and
lods
push
andb
adc
pand
xchg
test
mov
xchg
add
in
inc
adc
loope
add
push
add
out
lea
mov
push
lcall
fmuls
fistpl
dec
fdivr
add
call
into
mov
jg
pop
loope
scas
push
imul
add
cs
push
mov
gs
mov
and
jecxz
sbb
sbb
sub
addr16
xchg
sub
push
cmc
sti
push
adc
xchg
or
sub
aam
clc
test
shr
adc
jmp
cmp
mov
mov
dec
outsb
and
into
cmpsl
push
push
in
push
jp
or
xchg
mov
mov
popa
cmp
leave
lcall
mov
inc
push
cmpsb
dec
ret
sub
mov
call
fadds
push
out
pop
add
mov
or
xor
xor
in
test
push
or
aam
in
int
jle
pop
cmp
lret
push
ror
mov
aas
imulb
into
lcall
push
stc
cmp
jle
sbb
pop
int
fiaddl
mov
call
imul
sub
daa
mov
xor
sbbl
js
into
repz
xor
lcall
mov
pusha
mov
adcb
sub
icebp
ljmp
pop
sbb
xchg
call
cmc
out
clc
cmp
mov
mov
lds
sahf
adc
out
bound
dec
xor
outsl
sbb
sub
inc
pop
jmp
add
xlat
sbb
inc
mov
in
cmp
das
repz
je
in
jnp
in
mov
shr
push
mov
cs
xor
cwtl
lea
fildl
mov
ror
lret
sub
jg
inc
loope
in
sub
inc
xor
gs
add
cmp
mov
sbb
add
xchg
incl
test
clc
adc
push
mov
rclb
mov
lcall
add
pop
cmc
push
test
sbb
cmp
in
ret
mov
mov
fisubl
mov
outsb
sar
sub
das
lock
cmp
adc
outsb
cmp
xchg
lcall
popf
enter
iret
ljmp
fisttpl
data16
pop
pop
and
ret
test
iret
sbb
jp
out
mov
lret
outsb
mul
jge
mov
xchg
pusha
push
mov
pop
add
rolb
sbb
cmpsl
scas
pop
ds
xor
mov
insl
mov
clc
aam
lret
inc
daa
out
sbb
mov
push
adc
push
dec
push
add
xor
in
pushf
ljmp
jo
push
insl
shll
mov
adc
mov
mov
inc
aam
dec
repz
add
repz
cmp
outsb
push
sbb
hlt
push
dec
jl
lds
js
loope
mov
imul
sbb
and
xor
cmpsb
data16
sub
dec
inc
push
cmpsb
xchg
aas
das
adc
loope
fstpl
sbb
scas
push
shll
cwtl
dec
adc
sarb
cmc
push
mov
scas
push
pop
or
notb
aaa
and
lret
push
mov
cmp
add
popf
lods
xchg
inc
add
rcrl
movsb
mov
fcom
lds
jae
push
mov
fadds
add
lds
push
cld
ss
dec
jge
pop
adc
test
add
mov
xchg
int3
jno
cwtl
pop
xor
xchg
mov
sbb
jns
aas
daa
movsb
aad
out
fs
sti
cmpsb
xchg
sbb
sub
adc
insb
push
stos
adc
rcll
mov
push
dec
jno
and
or
adc
fbstp
xchg
out
sbb
pushf
xchg
frstor
mov
out
xchg
dec
andl
sbb
jle
lods
fcoml
stos
int
and
ficoml
stc
or
js
or
sbb
push
xor
jne
in
add
sub
lods
movsl
in
push
inc
adc
test
frstor
dec
inc
fldcw
call
imul
js
fldcw
jnp
aam
aas
aad
pusha
lock
fidivrl
or
pushf
bound
jl
add
data16
and
jne
sti
gs
dec
movsb
push
mov
divb
and
pop
movb
push
loop
rcll
das
dec
int3
jb
pop
mov
ret
sub
outsl
mov
jge
dec
outsl
inc
mov
cmpl
lret
push
sbb
addl
push
outsb
xor
mov
imul
inc
data16
test
pop
pop
add
inc
dec
in
mov
in
les
cli
mov
jmp
jne
cmp
sbb
push
dec
xchg
js
sub
popa
cld
aaa
popa
xor
pop
jmp
imul
jo
gs
clc
or
cmp
push
lahf
outsb
jae
pop
or
dec
popa
inc
xor
inc
push
push
push
jge
xor
jp
into
xchg
pop
jno
adc
jp
xchg
mov
sti
and
movsb
mov
xor
ret
cmp
jl
add
dec
mov
clc
jmp
jne
ljmp
ja
push
and
and
popa
test
mov
fs
addr16
fucomi
dec
xchg
xchg
xchg
fwait
clc
test
clc
into
popa
outsb
mov
mov
push
test
mov
mov
add
sti
jb
imul
inc
leave
lds
ficoml
in
xchg
or
sbbb
in
insl
pop
stos
mov
dec
jmp
aaa
cmp
lods
adc
aam
jle
jns
jecxz
push
jns
in
fimull
sbb
leave
pop
or
ja
imul
inc
int
lea
pop
mov
jge
sahf
and
fildl
jmp
and
mov
in
cltd
push
lock
pop
mov
dec
je
mov
jns
outsb
push
sbb
lea
xor
mov
ja
aaa
adc
mov
testb
cmpsb
fcmove
lret
aad
ljmp
jg
ss
testb
jbe
mov
and
xchg
cmc
lahf
clc
xchg
daa
iret
clc
loop
bound
jno
xor
xchg
subl
aad
pop
sub
int
sub
notl
pop
shufps
cltd
pop
push
out
pop
cmpsl
outsb
or
sbb
loop
mov
mov
icebp
pop
pop
lods
jmp
sub
pop
mov
inc
inc
xor
pop
fcmovb
out
in
inc
pop
fimull
xchg
ds
push
inc
cs
ljmp
stos
mov
cli
pop
stos
rolb
mov
in
inc
mov
push
and
xchg
jecxz
nop
or
adc
aad
enter
adc
jg
scas
into
popf
ret
std
and
adc
fwait
int
or
adc
jbe
or
movsb
arpl
dec
or
lods
dec
lcall
add
imul
cmpsl
push
jno
lea
jbe
push
outsb
push
sub
cmpsb
mov
push
jg
or
int3
insl
add
idivb
pop
mov
shlb
dec
int3
inc
cltd
mov
adc
xchg
jg
jl
movsb
aad
sbb
dec
lods
jbe
imul
loope
mov
adc
lret
test
movsl
pusha
popa
mov
xlat
arpl
xorl
add
inc
loop
aas
fmull
lcall
out
cmp
scas
xorl
sbb
gs
scas
lcall
jecxz
xchg
or
xor
arpl
stc
jge
and
cmp
push
jmp
lods
adc
add
mov
test
mov
jg
or
pop
sbb
out
movsb
enter
idivb
into
jl
and
cwtl
or
insb
into
shll
insl
jne
jge
lcall
xchg
cmp
sub
or
scas
ss
jae
mov
sub
repz
mov
das
sub
je
xchg
cmp
in
adc
and
add
push
or
jnp,pn
pop
andb
cwtl
cmp
lods
xchg
repnz
ja
gs
push
stos
mov
mov
jae
ret
lock
add
aam
lods
in
jg
and
xor
stc
adc
add
popa
dec
pop
test
movl
mov
aas
push
movsl
out
je
scas
and
aaa
inc
leave
sub
gs
add
sub
pop
and
arpl
shrl
cltd
and
out
adc
aaa
mov
out
cli
jle
mov
pop
mov
cmp
push
js
shld
mov
mov
mov
test
pusha
pop
push
outsl
in
outsl
inc
sti
dec
iret
jle
andb
mov
loopne
jge
jae
ss
testl
test
jecxz
movsl
add
sbb
lods
sub
sub
hlt
loop
cld
push
popa
ret
xor
and
repnz
sub
inc
fldl
js
xchg
push
out
pop
outsl
sub
jmp
or
test
sub
and
insb
insb
iret
test
mov
push
push
or
sahf
mov
ss
int
xor
xchg
push
popa
stos
scas
or
stos
movsl
btc
cmp
sub
lret
lock
or
fxch
gs
call
xor
scas
addr16
adc
pop
or
lcall
js
pop
out
jae
fcmovbe
xor
sbb
repz
ds
sub
lahf
cmp
in
lret
sbb
mov
ljmp
data16
out
incl
sbb
shll
pusha
addr16
pop
je
cmp
push
test
nop
fimuls
or
clc
arpl
jno
int
cmpsb
jne
fidivs
hlt
notl
lea
ret
aad
dec
xchg
mov
mov
push
pushf
xor
xchg
mov
mov
mov
sbb
pop
jle
or
jae
jmp
jns
in
add
idiv
repnz
push
sbb
prefetcht2
mov
shl
loopne
fisttpll
int3
jno
in
or
daa
addb
cmpsl
daa
and
push
xor
jnp
test
es
push
sbb
add
adc
fwait
cmp
jb
insl
mov
pop
sbb
mov
mov
not
scas
shrb
out
pop
jns
iret
sub
ds
mov
pop
pop
outsl
dec
lods
addb
and
sub
xor
pop
lcall
dec
hlt
mov
fnsave
test
dec
pop
insl
cmp
cmpsl
stc
xor
jnp
cmp
sbb
lds
adc
mov
inc
fistps
pushf
dec
xor
xchg
xchg
pop
pop
out
jnp
popa
ss
cld
cmp
test
pusha
enter
jp
aam
rcr
dec
lcall
xor
std
stos
jl
xchg
out
xor
mov
loopne
cli
inc
sti
scas
fldcw
sar
sahf
cs
adc
ljmp
cmpsl
mov
push
movsl
in
decb
mov
aaa
lea
xchg
je
cmpsb
jl
imul
movsl
pop
xchg
xchg
xchg
fisubrl
imul
ret
jmp
mov
fs
lods
jns
jmp
jne
cmp
push
iret
jge
into
scas
jno
sbb
ret
jae
sub
test
lods
std
sbbl
bound
pop
push
pushf
jp
jge
loop
or
sub
jae
ds
mov
sbb
cmp
loope
repz
out
pop
pop
or
sbb
sbb
sahf
pop
sbb
out
in
mov
sbb
xor
mov
cmpsl
add
push
sub
lock
out
and
xor
clc
mov
mov
lods
xor
and
mov
xor
mov
dec
cmp
dec
mov
push
sub
xor
mov
jg
lea
pop
rolb
sub
int3
into
pop
aam
cmp
int
cli
cmp
sbb
pop
pop
repnz
test
mov
cmpb
enter
sbb
mov
jne
scas
and
aad
or
je
dec
jge
fs
rcl
adc
test
jno
ljmp
in
andb
add
sarl
or
sbb
aam
push
mov
mov
mov
nop
lahf
jg
sbb
sub
shr
mov
loopne
dec
mov
dec
imul
sbb
outsb
aam
sbb
jl
mov
clc
jle
popf
imul
cli
test
ffree
bound
shl
imul
push
fsubl
in
cli
jbe
xor
insl
and
nop
mov
iret
xchg
sub
aaa
inc
fs
call
out
frstor
popa
jge
inc
mov
popf
insb
dec
mov
push
int3
rcrb
es
mov
mov
pop
push
cmp
jge
mov
xchg
push
out
fisubl
push
dec
data16
jecxz
repnz
rcrb
jae
imul
xchg
hlt
test
lret
jp
insl
sub
or
loopne
lds
test
rcl
inc
or
xchg
push
jp
sub
repz
aam
adc
dec
inc
xor
or
iret
xlat
pop
pop
loope
xor
cltd
pop
inc
sbb
or
fst
cmp
mov
or
sbb
or
subl
test
cmpsb
pop
cs
fstpt
cmpsl
and
xor
lcall
cmp
jbe
fildll
dec
sub
daa
mov
shl
sbb
icebp
dec
hlt
nop
sub
cs
insb
shrb
add
insl
jg
adc
divb
jl
sbb
dec
stos
movsb
xchg
sub
sub
daa
lods
outsb
xor
xchg
mov
sub
mov
jg
inc
jns
pop
shl
outsl
cmp
arpl
xor
int
jle
cmpsb
mov
jg
cs
aaa
sub
fldt
inc
fidivrl
lret
out
and
adc
js
and
outsl
daa
or
mov
movsl
xchg
xchg
or
mov
pop
adcb
in
cmp
push
lret
or
push
in
sub
outsb
cmpsl
sbb
fwait
mov
movsl
out
cmp
nop
jg
lods
jne
rcr
inc
lea
mov
inc
ja
and
inc
int3
mov
pop
outsb
add
adc
bnd
add
dec
push
rep
dec
or
jo
movsl
stc
xchg
mov
push
sbb
aaa
mov
adc
mov
add
xchg
mov
mov
mov
shrb
aam
gs
aas
je
imul
cmp
addr16
dec
inc
testl
xchg
or
cmp
pop
lret
in
mov
vpmacsww
mov
inc
push
xlat
arpl
cltd
mov
xor
ds
nop
in
pop
inc
sub
inc
push
xor
xor
and
lods
xor
mov
jbe
out
jnp
jno
adc
mov
push
int3
jle
fsubrl
adc
mov
jo
and
sahf
lcall
and
add
aas
sti
mov
push
inc
or
imul
repnz
bound
jmp
lods
inc
popa
loope
sub
dec
loopne
dec
decl
jg
jle
cmp
insb
es
cmp
fildll
cmp
roll
mov
xchg
imul
pop
std
loopne
scas
push
mov
shll
inc
jle
icebp
fistl
push
lods
fcmovnbe
int3
std
cltd
sar
rcll
mov
add
mov
cmpsl
movsl
aad
fcomp
cmp
cld
pop
mov
jge
loop
xor
mov
mov
push
stc
aad
lret
gs
into
sub
pop
jp
stos
mov
jmp
push
dec
dec
shlb
mov
sti
and
cs
pop
insl
push
stos
lods
loop
popa
jl
xor
or
sub
adc
push
cli
mov
cmp
int
pop
icebp
mov
sbb
inc
inc
insb
jb
cmpsb
pushf
pop
jbe
cmp
cwtl
or
mov
push
xchg
ljmp
clc
cmpb
les
sub
cmc
pop
cltd
sbb
arpl
sbbb
add
add
push
xchg
add
sahf
jecxz
xchg
bound
loopne
xchg
lret
inc
and
xchg
shlb
add
js
xchg
jecxz
pop
jno
scas
push
push
imul
mov
inc
xor
jecxz
xor
cmpsl
jg
dec
push
movsb
xor
das
mov
push
push
jae
mov
scas
mov
fbstp
sbb
adc
es
push
pop
sahf
int
xchg
movsb
imul
jmp
in
mov
inc
xchg
sbbl
lea
cmp
or
fists
mov
fwait
pop
mov
sub
push
in
imul
sub
push
sub
push
xor
add
movsl
sbb
in
inc
cmp
mov
pop
mov
cs
push
aam
mov
shlb
xchg
mov
fiaddl
pop
daa
jb
push
push
hlt
jbe
mov
add
scas
pop
into
fildl
mov
and
outsb
jl
sub
sti
out
sbb
xor
aas
out
clc
out
ja
jge
mov
add
insl
add
mov
fstpt
add
xchg
outsl
inc
lds
lods
xchg
xchg
dec
ds
xchg
xchg
fstps
sub
pop
jle
mov
or
sbb
or
stc
dec
sub
fsubrs
mov
pop
lahf
mov
and
jp
clc
sbb
inc
pop
sar
inc
sbb
sbb
hlt
dec
aaa
xlat
mov
xorb
aad
leave
dec
mov
and
cld
jns
pop
push
cmpsl
push
jb
fdivrl
lods
lock
mov
jl
add
or
je
dec
push
pushf
in
mov
and
pusha
rol
and
pusha
test
jnp
bound
pop
jge
aad
add
jecxz
fs
inc
call
push
push
cmp
xor
lds
loope
push
push
adc
repz
sub
loopne
cmpsl
add
mov
push
out
call
leave
mov
hlt
push
mov
cmc
test
push
mov
jbe
xor
jl
xlat
ss
lds
lock
mov
jns
lock
adc
enter
cmp
in
or
pop
outsl
pusha
shrl
xor
in
pop
sbb
mov
fs
mov
sbbl
push
loop
mov
xor
adc
dec
idiv
mov
adc
dec
fwait
dec
jne
out
cmp
jbe
fwait
mov
pop
xchg
mov
test
xor
add
mov
sub
mov
jp
and
xchg
xchg
mov
aaa
shr
pop
and
adc
mov
push
push
popf
push
push
int3
pop
jg
pop
cmp
insl
lcall
and
cmp
out
iret
ret
in
sbb
adc
xchg
repz
repz
push
insl
sbb
faddp
mov
push
movsl
sbb
and
xchg
scas
test
jle
ret
pop
jecxz
cmp
sti
enter
sahf
es
mov
inc
fistl
dec
pop
test
pop
sub
data16
movl
imul
stos
pop
lods
push
push
sahf
cltd
xchg
mov
cmpsl
jle
shll
test
xchg
ds
xchg
stos
int
insb
inc
leave
rcrb
push
adc
loop
push
cmc
das
cmpb
loop
in
sub
into
movsb
int3
inc
and
inc
or
mov
add
mov
jle
lahf
int
lret
sub
lds
out
loopne
push
outsb
dec
and
mov
sarl
pop
fcmovu
loop
loopne
test
pop
sahf
sub
std
push
sub
jmp
pop
aas
xchg
int3
jecxz
pop
cmpsb
and
test
pop
hlt
pop
add
xchg
popf
dec
dec
cmp
shlb
dec
sbb
jecxz
jp
sahf
sub
popa
mov
or
pop
push
aad
cmc
sbb
adc
jle
jmp
test
mov
inc
lea
lret
cmpsl
inc
pop
push
das
push
jl
fistpll
push
inc
xor
push
xchg
fsubr
or
and
push
sbb
xchg
xchg
jp
ljmp
push
ljmp
push
stc
xchg
enter
and
in
and
xor
jae
testl
sar
test
pushf
mov
popa
mov
rcl
in
and
cmpb
mov
xchg
xchg
mov
jge
jno
into
in
imul
pop
sbb
cli
cli
jo
jp
cmpb
ss
push
adc
cltd
ret
imul
les
nop
fstl
xchg
xchg
xor
xor
call
movsb
test
jmp
shl
loop
movsb
adc
sarl
addr16
lds
sti
mov
imul
adc
fisttpl
test
jg
test
xor
aas
fisubrl
cmp
shrb
into
pop
xchg
dec
nop
adc
jnp
lods
sbb
sbb
lock
negb
inc
test
mov
xlat
test
mov
out
push
mov
loopne
outsl
push
mov
xchg
jne
adcb
push
jmp
cmpsl
push
ja
sahf
das
int3
hlt
sti
imul
inc
xchg
andl
xor
movsb
dec
sub
in
pop
stc
xor
das
push
jnp
loopne
test
inc
and
mov
xor
inc
cmp
adc
adc
loope
adc
xlat
push
inc
sbb
dec
push
mov
pop
add
and
mov
enter
xchg
pop
push
mov
jecxz
sub
mov
mov
mov
idivl
dec
pushf
js
ja
daa
mov
mov
scas
outsb
push
repz
in
ficoms
adc
outsl
sub
lods
cmp
sahf
push
inc
and
adc
pop
or
cmpsl
into
sbb
scas
call
call
xchg
fmuls
fdivs
pop
outsb
and
lods
std
mov
cmpsb
jo
pop
mov
inc
test
sbb
call
inc
movsl
addr16
jb
or
imul
data16
mov
lods
pop
mov
mov
popa
xchg
or
sub
xlat
mov
loope
std
cmp
jmp
push
jo
pop
and
push
shlb
leave
mov
popf
pmaddwd
fimuls
lahf
adc
es
sbb
or
pop
pushf
inc
movsb
jecxz
fs
dec
inc
adc
mov
mov
sub
sti
mov
push
ljmp
mov
incb
and
scas
repnz
imul
xchg
lahf
dec
xor
jnp
sbb
insl
sub
pop
lret
dec
notb
mov
lahf
out
in
mov
cmpsb
hlt
lods
or
pop
loopne
loopne
shlb
push
cmp
stos
xchg
jl
mov
ret
rolb
cmpsl
jle
outsb
sbb
dec
mov
push
lahf
and
xchg
pusha
clc
add
jl
cwtl
jp
add
xchg
in
inc
cli
test
or
rorl
and
loopne
out
insl
mov
stos
imul
mov
jmp
das
scas
popa
sub
mov
add
mov
loop
aas
mov
mov
dec
sbb
jp
aam
lret
xorl
je
nop
dec
ds
lcall
shrl
cmp
stos
cli
add
sub
int
dec
rclb
xchg
dec
inc
add
cli
mov
les
sbb
in
xor
out
test
xchg
les
lret
outsb
dec
shll
xchg
loop
xor
fidivrs
stos
aad
call
add
mov
lea
jge
outsb
mov
mov
add
movsb
jae
add
sub
and
ror
lcall
jne
outsb
add
and
add
pop
cltd
mov
pop
insl
in
data16
int
push
pop
iret
bound
pop
inc
jb
xor
or
push
push
mov
in
xor
in
outsl
in
rolb
into
mov
or
mov
xchg
sub
xor
imul
sbb
bound
aad
sub
xor
inc
sub
xchg
enter
mov
and
xor
jnp
jno
cmp
cmp
adc
out
inc
jmp
out
sbb
imul
sub
sbb
jns
pop
jb
pop
popa
xchg
lods
das
inc
add
dec
in
decl
outsb
inc
push
add
fsubl
in
jne
in
push
xor
movsb
es
fstps
insb
cmp
imul
lods
jb
cli
jl
and
adc
mov
sbb
lret
nop
fs
ret
cwtl
xor
push
push
divl
push
fstl
ljmp
lds
or
lfs
cmp
cmpsb
fstpl
jno
mov
ret
lret
out
loop
sbb
fwait
ret
sahf
movsb
das
enter
and
adc
mov
inc
and
mov
mov
lods
sub
notb
ja
pop
leave
push
cmp
jbe
dec
cmpsl
int
inc
push
mov
jno
fisttpll
mulb
popf
and
adc
sub
sbb
xchg
cmp
fnclex
pop
cli
and
lea
loope
sub
mov
add
aaa
add
movsl
shll
xchg
cwtl
dec
jo
xchg
xchg
popa
jg
push
test
mov
shr
rorl
xor
jnp
push
xor
xor
ficomps
xchg
insb
ljmp
scas
or
ss
xorl
data16
push
lods
jo
mov
repnz
pop
mov
or
adc
insl
mov
push
xchg
and
pop
push
cs
inc
pop
dec
cmp
out
fs
in
movsl
stos
add
cmpsb
mov
adc
push
movsb
sub
movsl
in
sbb
cmp
add
push
and
ljmp
jp
dec
out
jp
test
push
icebp
mov
cmpl
cmp
mul
insb
xchg
dec
push
jp
xor
scas
pop
in
mov
mov
and
jne
adc
pop
fisubl
mov
xor
mov
pop
sbb
cmp
dec
mov
cmpb
inc
push
cmp
and
ficoml
adc
or
mov
push
rolb
in
imulb
fstps
lahf
cmp
inc
add
int
inc
adc
inc
sbb
loop
xor
cmp
add
les
mov
sub
ds
mov
jns
aaa
cmp
adc
mov
push
mov
mov
pusha
add
cmp
xor
inc
outsl
shl
or
imul
and
sub
scas
add
xor
mov
fistps
test
inc
pop
loope
lahf
das
cltd
adc
fistpll
out
psrlq
stc
and
mov
sti
pop
fistpl
dec
cmp
ja
incb
ficompl
jmp
sub
ret
jecxz
jnp
mov
mov
add
lea
andl
jbe
test
arpl
cmpsb
dec
jmp
and
cmp
jne
push
or
test
cli
daa
insl
lods
iret
add
adc
cmp
sub
inc
xor
rcll
loop
lahf
jl
aaa
es
sar
jne
inc
cmp
push
pop
push
jae
ret
dec
jg
sub
mov
subl
or
sub
int3
mov
cmp
clc
mov
int3
pushf
stos
scas
out
sbb
mov
arpl
pop
sbb
mov
and
push
xlat
sbbb
cli
sbb
sbb
stos
mov
cmp
pop
ljmp
jecxz
xor
add
imul
mov
push
pop
mov
and
jecxz
jbe
gs
dec
adc
adc
push
roll
jno
mov
iret
dec
push
pop
je
sti
cli
std
jb
dec
cld
popa
sub
rcrl
cmpsb
push
jmp
pushf
cmp
test
pop
xchg
sub
mov
daa
add
or
stc
nop
pop
pop
ret
sar
movsb
xor
cs
dec
stos
dec
sub
push
enter
loop
ds
mov
cmp
cwtl
in
shll
mov
mov
shlb
mov
jnp
adc
push
sysret
push
test
scas
aaa
lret
pusha
jecxz
jge
xchg
and
mov
cld
push
inc
xchg
loop
sub
mov
popf
jl,pt
shll
push
sub
add
stc
scas
mov
mov
cmpsl
dec
xchg
inc
lea
sub
cld
add
mov
in
sbb
sbb
jo
rcrl
jp
cld
pop
cmp
lret
lret
xchg
lock
gs
xor
gs
mov
rolb
std
add
jmp
jecxz
fistpll
dec
js
lods
inc
mov
mov
adc
int3
lret
scas
or
bound
pop
add
test
push
pop
pop
or
add
int3
adc
cmc
sub
mov
and
out
in
out
out
or
or
ds
sub
repz
arpl
js
loope
jmp
aad
push
lods
add
mov
lds
dec
ljmp
clc
repnz
add
mov
pusha
in
pmullw
push
push
test
inc
ds
cld
lds
addl
jb
into
aad
lret
imull
rcll
movsl
mov
or
jb
in
sarb
andl
mov
aas
gs
sbb
mov
jle
dec
das
sub
stc
dec
push
sub
repnz
mov
push
nop
lods
or
fnstsw
mov
das
xor
mov
mov
shlb
xor
stos
cs
popf
or
mov
push
inc
inc
loop
mov
shlb
mov
inc
xchg
fwait
xchg
pusha
push
test
mov
add
mov
ja
sarb
shll
pop
xchg
ret
outsb
mov
xor
stc
sti
inc
mov
fwait
jl
pushf
xor
lret
xchg
insl
insb
jns
dec
hlt
mov
clc
dec
les
je
sbb
and
mov
jae
rolb
in
sbb
and
insb
pop
or
pop
add
jmp
xchg
jg
mov
xchg
mov
in
ret
movsb
and
dec
push
outsb
imul
adc
popf
dec
cmpsl
mov
ror
and
dec
outsl
pop
ja
fmuls
push
sub
popa
cs
cmp
dec
test
int
dec
sti
sbb
loopne
in
or
jg
or
pop
and
xor
fldl
shr
cli
loopne
cmp
mov
test
sub
jg
inc
and
jl
cmp
lods
sarb
subl
jl
js
clc
aad
pop
jecxz
lret
and
add
mov
frstor
sbb
mov
inc
aas
adc
repnz
or
inc
loope
imul
xor
jb
cltd
sbb
fildll
cld
add
jle
sahf
mov
inc
sub
shll
dec
fsts
add
pop
mov
xchg
outsl
out
fimull
stos
sub
jecxz
sti
shlb
fiaddl
xchg
dec
inc
subb
sbb
fs
ds
mov
lcall
jne
cmp
push
inc
out
jp
push
xor
aas
lea
mov
cmc
cli
out
add
es
cli
add
add
jl
mov
jne
fcoms
jnp
fucomp
jne
cmp
push
sbbl
filds
sarl
flds
sub
or
cmp
xlat
imul
fwait
xor
adc
cmp
stc
icebp
and
mov
cmp
lock
xor
fisubrl
rcrb
roll
int
add
clc
fucom
data16
aaa
and
adc
and
in
add
bnd
and
sub
pop
jnp
out
lods
cmc
rclb
fdivrs
mov
sbb
into
push
fstps
or
loop
add
cmpsl
pushf
dec
xchg
ds
sbb
jne
jg
push
push
adc
sarb
pop
dec
xor
repnz
icebp
dec
sbb
or
mov
sahf
inc
notl
bound
jl
cwtl
sbb
out
jg
xchg
jns
sbb
add
cmovne
fsubrs
mov
push
dec
adc
cmp
push
jno
iret
mov
jae
xor
xchg
adc
adc
dec
rcrb
lcall
jge
movsl
xor
addb
dec
sub
scas
cmp
imul
outsb
das
push
mov
pop
push
adc
sbb
hlt
lahf
or
stos
sub
and
xchg
push
insb
push
lods
out
mov
test
cmc
dec
cmpb
mov
mov
mov
cmpsb
stos
and
clc
int
jmp
jne
in
sub
push
insb
add
sub
test
cmpsl
push
std
sub
cmp
adc
xchg
out
sahf
into
jecxz
sahf
adc
xchg
pushl
mov
shll
inc
nop
jne
hlt
dec
jns
rcrb
pop
pusha
int
enter
pop
dec
sarl
mov
iret
and
mov
stc
pop
call
inc
cmp
fnstsw
jl
and
aas
ja
movsl
mov
mov
scas
dec
xchg
push
xchg
dec
pop
add
xor
rclb
stos
mov
scas
cs
into
sub
inc
inc
mov
jns
mov
into
daa
lret
mov
popa
es
bound
push
push
outsb
loope
call
xchg
and
repnz
arpl
into
idivl
lahf
addr16
push
mov
add
lcall
jns
cmpsb
push
repnz
cmp
add
mov
add
dec
mov
adc
jns
add
fidivrl
addl
enter
inc
dec
pop
pop
aad
mov
cli
adc
mov
cmp
scas
pop
push
mov
scas
inc
fldt
dec
getsec
ror
in
scas
add
iret
xchg
lret
jl
cld
pusha
or
out
and
mov
xchg
loope
outsb
push
in
jg
out
dec
jns
dec
sbb
repnz
shlb
aad
insb
divb
push
dec
lods
shll
mov
fstl
into
hlt
rcl
in
push
sbb
mov
dec
iret
nop
xchg
jno
jl
sub
aas
lds
cmp
mov
insl
fidivrs
mov
xor
fsubr
fists
xor
stos
add
iret
cmpsl
mov
pop
sbb
sub
mov
les
js
movsb
fsubl
fs
adc
mov
mov
scas
ds
clc
xor
xor
xchg
mov
xchg
aad
lods
negl
and
cmc
jmp
sub
push
cwtl
pop
movsl
int3
cmpb
clc
ljmp
test
and
mov
cmp
es
mov
xchg
or
xchg
cld
into
cmp
ret
iret
push
filds
adc
dec
dec
imul
fcoms
push
cmp
enter
push
outsb
push
repz
and
xor
xchg
push
in
dec
or
ljmp
adc
xchg
ret
xchg
add
mov
mov
and
addl
std
cmp
aaa
jno
idivb
fcmovnb
insb
aas
dec
add
or
push
push
fadds
push
pop
ret
into
inc
into
cmpsl
jno
fisubrl
sbb
pusha
inc
adc
ljmp
or
xchg
daa
mov
push
sub
or
in
scas
negl
sbb
inc
mov
hlt
stos
cmc
ret
in
add
add
ret
outsb
sub
aam
inc
jo
jnp
pop
lds
sub
push
cmp
in
data16
fdivl
scas
mov
dec
and
add
jae
pop
jnp
jo
outsl
into
xor
pop
lock
sbb
test
in
pop
fidivrs
xchg
out
push
cmp
inc
cmp
cmp
jno
ljmp
pop
adc
lret
out
jp
test
cmpsl
test
jmp
cmp
xlat
test
imul
clc
push
fwait
test
push
push
fadds
das
addr16
int
sti
rorl
pop
and
cld
add
xchg
add
mov
outsl
pop
je
mov
nop
dec
push
pop
jbe
and
add
cmp
add
jmp
dec
adc
xor
jb
mov
or
cmp
add
rorb
sbb
xor
test
mov
int3
xor
and
adc
cmp
shll
mov
daa
push
xchg
jbe
mov
sahf
mov
in
bound
mov
loop
jno
imul
pop
ljmp
arpl
arpl
jle
pop
sub
mov
icebp
leave
pusha
inc
cltd
push
enter
pop
dec
leave
pop
mov
insb
scas
mov
push
lahf
xchg
jmp
and
sbb
out
nop
pop
add
add
movsb
lcall
adc
fadds
xlat
loopne
mov
sarb
or
jge
and
test
push
push
or
rcrb
out
es
scas
xchg
sti
pop
adc
jp
cmpb
shrb
hlt
ljmp
push
sub
insb
fsts
sbb
testl
test
pop
push
imull
sahf
or
outsb
jge
loop
or
inc
jae
mov
dec
cld
xchg
imul
das
mov
lcall
push
adc
xchg
sbb
cwtl
ret
mov
push
bnd
loop
xchg
mov
in
outsl
enter
xchg
pop
les
jnp
mov
cmpsl
roll
fsubl
loopne
inc
in
push
loopne
cmp
sub
inc
xchg
dec
mov
mov
sub
adc
cmp
cmp
mov
int
push
dec
xchg
pop
pushf
push
outsb
inc
movsl
xchg
loope
dec
push
nop
movb
pop
mov
dec
movl
mov
and
in
fisttps
sub
inc
sub
mov
mov
mov
xchg
sbb
push
addr16
jae
outsl
test
rol
mov
clts
or
mov
rcr
cmpsb
es
pop
mov
dec
icebp
arpl
sub
jle
pop
call
cmp
in
mov
movsl
dec
mov
mov
jae
xchg
pop
cli
and
xchg
xchg
std
inc
push
mov
shr
arpl
out
dec
mov
sub
push
jo
dec
fs
rcrl
xor
andb
loope
or
movsl
and
push
rorl
dec
inc
jge
pop
repnz
loope
fsubl
rcll
sub
cmp
cmpsl
add
xchg
fsubrl
mov
std
and
or
std
or
clc
cmp
add
push
add
lods
fsubr
pop
cmp
fs
xchg
cmpsl
mov
rcrl
lock
enter
xchg
mov
cmpsl
jmp
xor
icebp
adc
mov
mov
add
dec
dec
adc
cmpsl
call
rorb
std
adcl
icebp
or
aas
inc
adc
inc
lahf
push
inc
pop
sub
pop
or
incb
dec
sbb
mov
inc
lcall
jns
jp
es
dec
sub
popa
mov
xchg
ret
mov
mov
and
mov
inc
and
icebp
int
and
es
pop
pop
es
iret
enter
pop
adcl
fistpl
push
loop
popf
xor
loopne
push
mov
out
repnz
push
add
add
cmp
cltd
jbe
out
lods
cmp
push
jne
ret
mov
loope
inc
insb
pop
iret
scas
cwtl
es
jp
xchg
cmc
sbb
lds
test
sbb
adc
inc
mov
andb
adc
push
dec
xor
mov
mov
adc
sarl
or
test
outsl
ret
add
add
dec
jo
push
int
icebp
xor
sbb
insb
add
fwait
aas
mov
ja
stos
in
cmp
cmp
xchg
data16
xor
es
into
lds
fdivs
int3
cli
adc
pop
adc
lahf
jbe
sub
in
xchg
fcoml
movsl
in
and
inc
mov
pop
sub
fwait
adcl
fisttps
loope
mov
xchg
fstpl
icebp
divb
lods
pop
frstor
sbb
fcom
sarb
add
in
in
mov
or
ss
mov
into
mov
adc
xchg
gs
jnp
mov
das
ds
sbb
daa
aas
adc
sub
jo
and
xchg
adc
inc
sbb
lahf
inc
xchg
sbb
stos
lock
stos
popa
jb
adc
push
jae
je
movsl
mov
inc
add
movsl
shlb
aam
repz
push
mov
imul
mov
mov
inc
pop
mov
push
sbb
pop
scas
or
gs
lret
cmp
ljmp
dec
xchg
mov
mov
ja
test
push
nop
lods
fidivs
xchg
les
fists
stos
jge
out
out
aaa
lahf
cwtl
mov
cli
jl
pop
cltd
arpl
insl
aam
lcall
fmul
inc
test
dec
sbb
sbb
xor
sub
sub
femms
add
cmp
xor
data16
jnp
addr16
xorl
cmp
xchg
rcrl
daa
data16
testl
jb
cmp
ss
inc
inc
lret
add
push
and
pop
in
pop
mov
mov
dec
daa
outsb
in
jno
mov
adc
shrl
and
xor
pushf
xor
iret
ljmp
mov
sahf
lock
scas
mov
xchg
mov
stc
sarb
sub
pop
outsb
sbb
add
in
pop
and
fistps
lahf
pop
and
cmp
mov
std
int
sub
jne
ljmp
loop
fcomps
pop
imul
mov
sbb
lods
out
in
jp
mov
ret
je
push
sub
jbe
outsb
and
stos
inc
cmpsb
sahf
scas
or
and
decb
xchg
mov
or
mov
iret
je
add
pop
xchg
nop
push
sti
sub
loope
mov
sbb
aas
lods
imulb
dec
ja
fsub
jo
sub
cltd
roll
cmp
clc
iret
push
or
sti
pop
xchg
push
push
dec
add
xor
xchg
or
sbb
sub
fbstp
mov
lahf
cmp
dec
push
adc
test
mov
and
or
cwtl
ret
inc
inc
sbbl
cmpsb
jbe
in
fstpt
jle
loopne
ffreep
cwtl
sub
mov
in
mov
cwtl
adcb
adc
jns
sbb
fmul
add
les
inc
in
dec
std
jnp
adc
cmp
cmpsl
rcrl
aad
jns
sub
clc
lock
lea
dec
nop
ret
subb
popf
push
aad
dec
xor
xor
jl
cmpsl
sbb
adc
mov
cli
mov
andb
push
into
fldt
xchg
pop
inc
test
pop
aam
mov
ret
push
and
iret
testl
xchg
sub
cmp
scas
dec
cs
push
gs
repnz
mov
xor
fildll
push
cmpl
inc
test
das
adc
mov
mov
or
dec
or
jo
xchg
add
mov
dec
imul
jp
scas
add
dec
ss
xor
push
ret
or
or
outsl
ret
dec
int3
xchg
xchg
fucom
push
inc
mov
shlb
cmpsb
mov
mov
aad
bnd
mov
mov
sbb
mov
mov
test
jns
adc
nop
cld
aad
jnp
sbb
and
cltd
and
xchg
mov
and
outsl
cmp
push
insl
mov
daa
mov
mov
in
pop
and
insl
scas
jmp
mov
mov
test
jnp
mov
fldt
add
cmpsb
xchg
enter
inc
scas
int
pop
fbld
int3
js
and
std
test
ds
inc
arpl
pushf
inc
inc
es
xchg
in
in
add
inc
mov
pop
sbb
inc
inc
xor
aas
cmc
push
inc
rorl
inc
test
push
jl
data16
mov
pop
aad
cmc
push
pop
insl
ss
cmp
je
lods
and
pop
push
in
lods
scas
loop
jle
lds
sbb
mov
in
addr16
jb
sub
js
dec
pushf
add
mov
clc
imul
fimull
sub
std
sarl
ds
dec
sub
hlt
sub
clc
repz
jbe
fsubr
gs
xor
pop
mov
inc
add
cmpsl
pop
pop
inc
pop
or
push
or
cltd
out
xor
arpl
and
scas
and
outsl
aaa
mov
fmulp
insb
scas
cmp
ror
mov
jp
js
xor
mov
pop
in
popf
xchg
movl
mov
pop
sti
cmp
cltd
mov
cmpsb
call
mov
rolb
std
cs
inc
pop
aas
mov
jne
hlt
push
mov
lds
mov
lds
mov
or
daa
jg
mov
in
xor
stc
scas
cmpsl
icebp
jmp
call
adc
leave
inc
cmovns
push
add
xchg
das
jo
mov
insl
inc
cmp
cmp
jmp
inc
bound
into
lods
push
jo
pushf
subl
dec
cld
push
sbb
mov
imul
leave
cli
pop
mov
pop
aam
sahf
mov
sub
shr
adc
jbe
gs
push
pop
in
and
mov
sbb
sub
cmp
push
shl
xor
adc
sub
fwait
mov
adc
jp
jbe
out
push
in
sti
ret
cmp
sub
cltd
loopne
sub
ja
into
inc
mov
loope
movsb
xor
shrl
clc
jns
enter
mov
test
xor
shl
mov
and
push
orb
test
xchg
pop
js
mov
add
add
sets
inc
xor
insl
lcall
orb
inc
pop
into
test
add
ret
mov
jecxz
loopne
icebp
pop
xchg
outsb
repz
fildl
jmp
dec
push
cli
sub
int3
je
cld
pop
dec
ret
mov
fcmovnbe
jmp
xchg
xor
mov
xor
xchg
add
xchg
and
flds
or
xor
inc
mov
xor
and
adc
int
push
stc
add
or
nop
cld
push
pop
fiaddl
adc
xchg
loopne
js
push
in
pop
pop
ljmp
mov
mov
ud1
and
pop
jmp
in
out
push
fists
adc
sub
mov
mov
add
xor
mov
xlat
jle
adc
pushf
cmp
pop
pop
push
sarl
push
int3
jge
test
loopne
cmp
enter
pop
int3
push
popf
mov
mov
mov
mov
mov
mov
adc
mull
push
cmc
push
cs
lea
push
xor
fs
loopne
dec
sbb
stos
cwtl
shrb
sti
out
arpl
test
dec
jg
sti
cltd
add
seto
fsts
and
ss
pop
popa
dec
mov
movsb
insb
adc
ret
cmp
xchg
movsb
inc
imul
and
lock
cmp
mov
push
xchg
nop
mov
scas
mov
mov
or
mov
sbbb
xor
stos
inc
out
incl
fiaddl
and
out
sbb
inc
push
sbb
bnd
jp
push
jne
js
and
test
imul
xor
jle
mov
imull
mov
js
int3
inc
or
cwtl
jbe
int
dec
inc
sub
mov
mov
ret
sub
pop
pop
xor
jae
or
jno
jb
shr
and
pop
dec
popf
mov
out
cmc
mov
push
xchg
pop
negl
insb
sbbb
jnp
inc
shrb
inc
in
loope
es
inc
pop
rorb
xor
and
icebp
repnz
test
movsl
push
int3
push
push
bound
jg
xor
popf
mov
and
movsl
jl
fnstsw
sub
inc
inc
shl
in
loop
and
inc
jp
into
jecxz
popf
jle
xor
sub
es
jp
push
inc
popa
lahf
jl
mov
jp
aaa
fs
jno
push
push
test
xor
mov
xlat
xor
xor
xor
clc
pusha
mov
sub
andl
mov
mov
fisubl
fstl
cmpsb
jb
cmp
lcall
xchg
aam
jae
loope
sub
pop
pop
fnstsw
mov
out
push
mov
lock
dec
stos
test
sub
inc
fxtract
lods
mov
push
insb
aad
jl
and
pop
dec
jbe
pop
pushf
mov
dec
movsb
repz
lds
or
dec
add
fcoms
mov
and
xchg
xchg
jne
orl
mov
inc
imul
call
jae
test
adc
sbb
xlat
outsl
or
xchg
push
hlt
rcll
stos
sbb
shrb
dec
dec
aam
popf
jns
cmpb
push
fnstenv
scas
loope
push
lcall
aad
mov
int3
mov
and
sub
lcall
jno
fnstsw
dec
jae
mov
sbb
negb
js
flds
push
scas
test
jbe
insl
dec
shrb
repnz
dec
insl
fcom
inc
sub
mov
loopne
dec
push
or
dec
mov
pop
test
cmpsl
and
push
and
cmp
loop
adc
jns
adc
clc
clc
and
push
jbe
pusha
xor
sbb
jne
in
out
dec
xchg
mov
subl
pop
cmc
mov
jb
daa
dec
mov
push
mov
das
lcall
mov
mov
and
lret
mov
add
push
in
loop
jnp
add
ficompl
cmpsb
dec
pop
insb
inc
cli
aas
repz
cmp
cld
movd
addl
int
call
fsubp
add
add
cld
mov
mov
mov
add
sub
in
test
sbb
frstor
pop
gs
jno
outsl
mov
ficoms
jne
stos
sub
jno
push
inc
xchg
aam
adc
dec
xchg
xchg
negl
mov
xchg
fcoms
jb
out
jae
xchg
sub
pop
in
jp
xor
popf
push
sub
rcl
push
inc
std
push
xchg
pop
dec
and
and
push
pop
dec
xor
jecxz
or
fcomp
stos
xor
xor
adc
mov
mov
push
imul
ss
xchg
cmpl
out
data16
frstor
cmpsb
test
push
pop
test
or
jle
inc
mov
rorl
inc
lods
cmc
negl
push
mov
mov
add
inc
xor
add
out
jnp
scas
lock
pop
mov
out
sti
cmp
push
out
dec
xor
fldenv
aaa
mov
repnz
push
repz
sti
cltd
insl
jno
jp
fdivrs
and
xor
enter
mov
jnp
jg
jb
cld
ret
xor
int3
mov
xchg
cltd
rolb
xor
mov
loop
cli
lret
push
xchg
mov
xchg
pcmpeqb
movsb
pop
flds
pop
pop
lods
xor
loope
mov
dec
xchg
dec
push
call
ljmp
mov
dec
sbb
push
or
fwait
mov
loope
and
sub
stos
push
daa
fildl
out
mov
xor
aas
adc
sti
mov
dec
mov
into
mov
dec
shll
inc
inc
imul
xchg
push
mov
cwtl
xchg
adc
cmpsl
ljmp
jle
add
gs
cmp
pop
scas
xor
sub
call
popa
mov
and
sub
imul
pop
and
cmp
push
sub
mov
xor
xchg
js
shr
push
rolb
add
aas
stos
adc
aad
stc
dec
mov
addr16
sub
sbb
stos
mov
sbb
mov
lret
pop
ja
lahf
cmp
dec
pop
mov
testl
xor
fldenv
bound
cltd
es
in
and
jg
mov
lahf
add
cmp
fistpll
xlat
jmp
mov
push
sbb
loop
ficompl
icebp
mov
jecxz
lea
pop
ljmp
jmp
inc
adc
in
ret
cmc
mov
jb
stos
xchg
jmp
cli
lcall
jle
scas
fiadds
jp
ja
xor
xor
xchg
inc
adcl
lahf
push
jl
cltd
aaa
push
jbe
outsb
out
lods
xor
mov
mov
daa
imul
xchg
mov
push
stos
insl
das
inc
jmp
pop
jecxz
jl
mov
mov
xor
add
and
je
cltd
pop
mov
scas
lock
push
clc
xor
pop
ficompl
pushf
mov
fwait
inc
and
iret
inc
movsb
xchg
cld
sub
pop
je
fs
test
mov
fwait
leave
rorl
test
iret
ret
imul
movsb
out
and
mov
dec
xchg
loopne
inc
mov
ljmp
jp
mov
and
adcl
mov
daa
inc
in
jg
fimull
scas
jae
inc
sbb
mov
mov
and
aas
cmp
movsb
and
push
dec
add
icebp
and
adc
daa
jecxz
leave
mov
mov
into
mov
jl
xor
nop
rolb
jmp
pop
fildll
push
cmp
dec
je
push
scas
addr16
push
push
jno
jmp
popa
in
addr16
mov
adc
fucomi
aaa
add
pushf
movsl
cld
fstps
xlat
insb
jb
loop
into
mov
mov
pop
cmp
scas
in
inc
mov
fildl
or
scas
test
add
mov
cwtl
adc
dec
pop
inc
dec
pop
jecxz
add
sbb
cmpsb
enter
sub
mov
out
adcl
sub
mov
fnclex
rol
out
dec
adc
mov
shl
nop
cmp
push
dec
sbb
popa
sub
test
cmp
sarl
std
mov
lea
xchg
dec
xchg
mov
jge
xchg
into
lret
adc
pop
xor
jge
enter
inc
lds
xor
std
movsb
sbb
pop
lock
pop
aad
jp
aam
pop
pop
ljmp
cs
sti
sbb
xchg
sub
lcall
fistpll
inc
mov
push
inc
jmp
icebp
mov
or
cld
push
inc
cwtl
jno
inc
sub
xor
stos
aas
mov
xor
jle
lret
pop
bound
fidivl
xlat
je
pop
add
dec
lret
dec
mov
loop
xor
push
leave
iret
pusha
inc
repz
enter
in
inc
jns
and
in
adc
insb
push
pop
adc
inc
sub
cmp
lahf
cmp
xor
aaa
scas
xchg
push
or
ja
movsb
out
incb
daa
dec
sub
leave
dec
fwait
bound
repnz
and
stos
adc
mov
test
es
sets
daa
add
negl
fldenv
cli
xchg
inc
add
jbe
mov
loope
cwtl
xchg
xchg
cli
push
xor
adc
mov
sbb
fisubrs
jecxz
jmp
nop
addl
mov
adc
mov
jmp
movsl
out
mov
imulb
dec
lock
or
inc
fistps
adc
mov
mov
in
dec
ss
roll
inc
inc
mov
out
notl
cmp
cmpsl
push
loopne
sbb
outsl
mov
mov
cld
adc
sti
sub
hlt
loop
push
and
push
sbb
fs
les
adc
cmpsl
push
clc
push
scas
std
pop
hlt
cmp
sub
iret
and
roll
daa
sbb
cmc
adc
cli
dec
shrb
scas
adc
std
push
lret
outsb
sub
push
jno
fistpl
ds
jge
xchg
jge
or
xchg
sahf
add
lret
xchg
push
movsb
or
lret
sbb
insl
adc
sarb
xchg
jb
cmp
pop
insb
push
xor
inc
jnp
dec
sbb
and
mov
imul
in
mov
inc
daa
xchg
cwtl
or
dec
in
mov
and
out
es
scas
cmpsb
insb
rolb
and
lret
scas
sub
pop
push
leave
out
push
inc
stos
jb
xchg
xchg
mov
mov
test
iret
cmp
dec
incb
dec
inc
sub
push
ret
test
pop
rcll
lret
inc
insb
pop
mov
jmp
mov
insb
andb
je
mov
sbb
fwait
lret
pushf
fdivrp
fstps
enter
and
jno
sbb
mov
dec
insl
pushf
das
cltd
in
push
js
lret
fidivl
ret
mov
xor
cld
mov
das
xlat
call
or
insb
fcoml
mov
or
or
push
sub
pop
shll
ror
movsl
imul
xor
jb
sub
cmp
std
sahf
loop
dec
mov
push
std
addr16
decl
repnz
in
pop
push
xor
dec
jle
push
pop
out
adc
add
jl
mov
or
cmp
test
pop
xor
addr16
paddq
jge
push
or
or
loop
xor
les
mov
std
sahf
or
xchg
cld
lods
scas
jae
out
sub
sti
lcallw
pop
aam
lock
pop
or
mov
sub
jg
jg
inc
add
out
popf
js
add
test
cmp
and
and
sub
es
pop
dec
sbb
push
sahf
jne
rcrb
or
scas
imul
stos
cmp
icebp
xchg
lret
repnz
sbb
fnstsw
dec
mov
pop
cmp
ja
ret
enter
aad
leave
jmp
loope
jo
adc
xor
fcomi
add
inc
and
push
fmul
repnz
daa
xchg
add
inc
lret
push
ja
in
fdiv
inc
push
andl
js
or
lods
adcb
jmp
mov
or
add
cmp
aad
pop
lcall
and
xor
lcall
mov
xor
jae
push
jae
and
inc
stos
mov
fcomps
das
addr16
mov
paddw
movsb
cmp
ret
insl
jge
push
mov
cli
and
aad
xchg
pusha
ret
inc
addl
dec
aad
out
das
lods
sti
lock
mulb
imul
mov
mov
ljmp
mov
test
movsb
xlat
mull
pop
jae
lahf
push
and
jmp
ds
in
stos
lcall
push
xchg
loopne
mov
ljmp
fnsave
orb
movsb
cmpb
test
bound
std
cmp
mov
mov
push
push
rcr
test
mov
dec
jo
mov
adc
dec
push
jnp
prefetcht0
jecxz
adc
jmp
bound
test
pushf
jne
out
sbb
mov
cmp
push
fxch
andl
jno
lcall
cli
add
sbbl
mov
dec
pop
mov
adc
sub
int3
sub
fstpl
idivb
fcoms
out
mov
sub
popa
sub
mov
mov
xlat
loopne
jns
push
push
sub
adc
sbb
mov
dec
inc
mov
insl
mov
sub
jmp
aad
jne
push
shrd
jne
lcall
rcl
adc
inc
stos
jno
punpckldq
sub
and
hlt
xchg
or
popa
dec
dec
nop
pusha
jae
adc
in
lcall
pop
dec
pop
push
out
mov
andb
stos
fwait
stos
cmp
out
repnz
push
xor
jle
cwtl
outsl
dec
lock
jg
scas
or
das
dec
mov
daa
andl
ss
outsb
push
inc
ds
push
mov
cli
in
or
mov
inc
mov
lds
test
jbe
pop
stc
jl
loope
mov
xchg
adc
pop
sbb
mov
movsl
mov
lahf
cltd
nop
dec
adc
loope
es
insb
pop
xor
inc
dec
cmp
fsts
push
jbe
sarb
or
jne
cmc
mov
aas
out
clc
mov
jbe
cltd
loop
rolb
into
shlb
add
outsb
rcrb
xchg
dec
bound
ret
mov
xor
stos
xor
mov
enter
repnz
sbb
dec
test
imul
data16
stc
pop
repnz
repz
daa
insl
js
mov
test
fimuls
adc
cmp
daa
test
push
ljmp
out
pop
hlt
cmp
and
movsb
cs
fbld
xor
mov
fisttps
pop
jae
pop
cwtl
imul
push
adc
iret
mov
ds
test
mov
xchg
jae
icebp
sub
lods
cmp
xchg
and
xchg
scas
lret
mov
popa
push
and
xchg
mov
mov
sbb
dec
lret
sub
mov
lods
pop
mov
in
xorb
mov
loop
xchg
setb
cli
mov
mov
aas
loopne
das
es
and
jns
and
sbb
inc
cli
cltd
mov
in
jnp
xchg
icebp
cmc
mov
jo
and
mov
xchg
hlt
loope
jge
push
test
xor
adc
adc
adc
test
cmc
sub
inc
add
lea
sbb
jne
mov
lcall
ret
out
lods
xlat
jns
les
jp
sub
cmp
pop
pushf
outsb
jno
cmc
std
fs
lret
movsb
or
mov
es
push
push
jg
sub
ljmp
test
inc
and
or
sub
add
mov
mov
shll
push
iret
hlt
cmp
das
pop
sbb
pop
les
enter
adc
out
mov
int3
xor
rclb
xchg
add
or
mov
xchg
in
mov
sarb
pop
pop
xlat
or
xchg
cld
dec
pop
repnz
inc
fdivl
inc
packssdw
verr
inc
cwtl
cld
test
adc
daa
lds
xor
and
add
dec
mov
dec
rorw
insl
lea
in
enter
cld
cmp
mov
jnp
or
fldl
test
inc
sbb
inc
je
jle
imul
push
jmp
push
lock
or
popa
push
cltd
cwtl
aad
outsb
bswap
fidivrs
jbe
add
push
mov
mov
nop
adc
out
loop
pop
jo
cmp
mov
add
pop
aas
xlat
sbb
xchg
and
out
mov
push
stos
mov
sub
cs
cli
cmp
adc
xchg
or
mov
adc
sbb
cmpl
xor
jp
add
jns
mov
mov
sbb
pushf
rorl
stc
enter
sub
jae
aaa
pop
mov
scas
outsb
sbb
cmpsb
cmp
or
outsb
ret
or
test
flds
xor
sti
pusha
jns
stc
ucomiss
cmp
dec
mov
sahf
add
loope
cmpsl
xchg
push
push
push
pop
dec
das
jbe
jmp
pop
mov
xor
lret
in
das
enter
movswl
jecxz
mov
in
cmp
or
xor
iret
dec
jge
aaa
xchg
lock
out
ret
jbe
xor
adc
push
and
call
xchg
sub
aas
rolb
pop
and
mov
mov
sbb
mov
dec
movsb
loop
mov
mov
cld
lret
mov
vpcomub
pop
mov
push
sbb
popf
lods
sbb
and
nop
aas
repz
lahf
lret
les
lods
arpl
mov
and
in
shl
push
aas
dec
movsb
lds
cmpsb
push
stos
pop
jge
sub
jl
push
test
in
or
or
sbb
mov
mov
ret
cld
and
decb
xor
dec
push
addl
fsts
aam
ret
push
out
cmp
stos
aad
jae
sub
adc
loopne
add
call
les
adc
and
out
out
xor
mov
xor
cmp
bnd
cmp
lods
add
cs
add
adc
or
xchg
dec
xor
adc
or
loop
ret
inc
cmp
and
imul
xor
sub
and
cwtl
data16
xlat
lret
xor
pop
popf
inc
lcall
xor
mov
jmp
das
adc
fsub
and
sarb
push
mov
outsb
lret
movsb
xchg
loopne
xchg
in
scas
stos
nop
jne
xchg
adc
mov
js
subl
jecxz
dec
iret
sbb
and
addr16
sub
push
cmp
cmp
xchg
cmpl
cmp
out
fmul
fs
cmp
cmp
daa
or
imul
ss
movsb
mov
sub
int
in
xchg
xor
mov
js
dec
mov
adc
icebp
pop
int
in
mov
sahf
fnstcw
mov
repnz
dec
adc
inc
mov
jae
mov
sub
shlb
test
mov
push
gs
add
xchg
xor
adc
movsb
xchg
pop
cltd
loopne
xor
insl
dec
xor
stos
sbb
arpl
add
divl
fimull
cmp
mov
push
in
xor
and
inc
push
roll
ret
mov
mov
pop
aas
mov
insb
cli
jbe
stc
cli
jne
pop
jbe
das
dec
jnp
rolb
inc
es
xor
adc
sbb
inc
jno
and
xor
pop
inc
ds
lds
fwait
mov
aas
inc
das
es
inc
mov
fldcw
cmp
or
fstl
xchg
ss
adc
mov
mov
fisubrl
arpl
push
fs
push
in
mov
popf
inc
jo
jne
shll
std
int
xchg
stc
xchg
mulb
sbb
mov
stos
insl
cmp
mov
sti
out
out
repnz
mov
clc
and
jl
xchg
mov
cmp
adc
xor
inc
stos
xchg
popf
adc
or
lahf
mov
int
cltd
js
dec
fwait
clc
and
mov
mov
scas
int
dec
data16
outsb
dec
outsl
lock
push
loope
jmp
std
inc
xchg
xchg
dec
jbe
je
mov
cmp
iret
pushf
aad
pusha
lea
mov
adc
add
add
push
mov
mov
xor
adc
gs
cltd
pop
cmpsl
jo
xor
mov
and
stos
daa
sbb
fwait
and
mov
dec
incl
dec
cmc
leave
lock
xchg
jo
or
fwait
cltd
int
ret
addb
imul
outsl
xchg
imul
jnp
mov
pop
mov
lret
orb
clc
dec
pusha
daa
cltd
add
pushf
xor
cli
mov
mov
loop
jmp
aam
aaa
adc
mov
outsl
cmpsl
mov
jo
cli
add
leave
push
push
xchg
stos
jg
mov
js
addr16
inc
xchg
cmp
xchg
mov
inc
mov
orb
aas
xchg
cmp
call
orl
push
push
jo
jae
push
or
fldenv
dec
mov
pusha
cmp
outsl
es
sbb
and
insb
pop
ljmp
xor
sbb
and
pop
shlb
cmp
cmp
push
test
out
sub
xchg
fwait
or
stc
pop
xchg
divl
scas
rcl
inc
add
insb
loope
sbb
mov
filds
cmp
mov
das
adc
pop
ja
aas
mov
addr16
jnp
xchg
shrl
xchg
mov
adc
xchg
pop
cld
adc
mov
ljmp
es
sub
jns
cmp
mov
mov
sub
nop
adc
cltd
in
push
or
push
jg
mov
fsts
jae
sbb
pusha
loope
insb
jo
adcl
and
std
shrl
sbb
dec
fdivr
in
addr16
and
cmp
xor
repnz
nop
incl
push
xor
arpl
test
lcall
fwait
cwtl
xchg
sbb
pop
in
pop
cmp
icebp
pop
mov
cmp
sbb
shll
and
adc
nop
into
rorb
stos
mov
aad
outsb
nop
mov
ljmp
and
xchg
and
fidivrl
xor
push
xor
imul
cmp
int3
xchg
cli
pop
daa
mov
push
mov
dec
inc
sbb
clc
push
int3
mov
lods
lods
sarb
out
outsl
aaa
stos
pusha
fistps
jmp
mov
jae
jne
add
sub
imul
sbb
inc
jo
repz
cmc
xor
push
xlat
nop
dec
enter
pop
daa
pop
cmp
cmp
int
adc
lock
cli
bound
roll
xor
or
xor
hlt
int
mov
xchg
outsb
mov
paddusb
mov
mov
js
sbb
rcr
jg
dec
push
lahf
enter
js
shlb
fdivs
xchg
push
and
mov
bound
xchg
xchg
sub
shl
out
inc
jnp
imul
mov
out
inc
push
sbb
test
xlat
inc
inc
jo
ds
mov
push
mov
outsb
add
movsb
insl
xlat
and
call
movsl
cld
int3
int
fs
mov
loopne
and
mov
mov
jb
lret
lcall
mov
push
lods
add
mov
cmp
lea
pop
push
inc
out
cld
fldt
cmp
mov
jmp
sbb
aas
jp
xchg
xor
and
mov
xchg
mov
imul
cmp
jp
fstpt
sub
js
popa
jae
sbb
ss
dec
add
pop
mov
orb
test
fstpl
cmpsl
inc
aam
sbb
scas
cltd
jecxz
xor
dec
popf
inc
mov
mov
mov
mov
lods
mov
jae
adc
or
jae
fcoms
int3
mov
cmp
stos
ficomps
cmc
adc
sbb
sbb
fs
divb
aas
jl
scas
ret
jbe
push
enter
xor
mov
sub
jp
scas
scas
mov
test
adc
mov
sub
push
outsb
mov
sbb
push
enter
rorb
cmpsl
or
cmp
lods
jo
push
push
jmp
sbb
mov
sub
mov
pop
cmp
fwait
jae
andps
into
jmp
pop
xchg
bound
add
fdivrp
jns
andl
and
in
sti
inc
mov
push
jp
rorb
adc
loopne
inc
adc
and
jecxz
jb
test
adc
sahf
rclb
dec
mov
fwait
sbb
std
dec
popf
add
mov
pop
add
mov
inc
pop
or
movsl
rcrb
jecxz
scas
sub
andl
aaa
xor
mov
out
es
xchg
mov
sbb
mov
jp
es
rolb
dec
addl
inc
lret
adc
lcall
jno
sbb
push
cltd
cmpsb
scas
mov
neg
xchg
push
push
decb
pop
std
std
dec
inc
adc
mov
fisttpl
sarl
and
movsl
mov
dec
xor
repz
je
pop
shlb
stc
repnz
sbb
or
inc
stc
jecxz
loopne
cmp
sahf
inc
sbb
sub
pop
xor
xor
cli
pop
and
dec
out
jle
into
dec
mov
fcmovnu
in
dec
les
shrb
loopne
push
add
cmpsb
xor
in
adc
shrl
iret
lock
out
xor
hlt
movsl
aas
lret
push
les
out
femms
adc
mov
aaa
in
lret
mov
test
sub
fcoml
pop
imulb
push
shrb
mov
and
fisubrs
adc
jb
mov
dec
out
in
movsl
pop
cmp
bound
adc
out
lret
mov
pop
sub
popa
dec
and
push
mov
and
pop
aad
imul
cmpsl
mov
in
mov
cmp
test
scas
test
jae
stc
mov
xor
jle
stos
xlat
jmp
sarl
je
sbb
in
mov
mov
adc
and
cmp
fistpll
mov
mov
dec
stos
out
sti
hlt
dec
xchg
mov
daa
or
sahf
lahf
lds
pop
popf
test
sbb
inc
mov
cmp
es
jp
xchg
sub
pop
push
pop
adc
inc
sub
outsb
xor
mov
ret
lcall
dec
push
imul
pop
dec
mov
cmpsl
ss
cmp
push
inc
mov
dec
aad
sbbb
js
sub
pop
xlat
lods
or
mov
lret
sbb
cmp
adc
outsl
cmp
lcall
addr16
int3
xor
movsb
jl
call
aad
or
fmull
push
lods
ljmp
cltd
push
sub
adc
ljmp
clc
fs
or
pop
and
xlat
incb
int
mov
mov
scas
out
mov
add
rcrb
jecxz
js
jl
mov
pop
add
stos
cwtl
sub
cmp
pop
mov
cmp
addr16
cmp
push
nop
pop
lds
mov
shlb
testl
mov
lcall
imul
test
fdivrs
jno
ljmp
jmp
push
pop
sti
sbb
sub
or
or
cmpsb
dec
mov
mov
mov
xchg
test
fisubrl
js
inc
dec
rclb
adc
cmp
out
jns
sub
push
jns
xor
fisubs
inc
dec
pop
cmp
lock
push
push
cmp
ja
pop
mov
xchg
or
movsl
cmp
jo
les
mov
inc
out
repnz
cwtl
add
js
popa
cmp
mov
stc
std
pop
jb
xchg
hlt
pushf
xchg
fwait
sbb
call
loop
xlat
dec
scas
ret
imul
rclb
movsb
cmp
outsb
jmp
mov
jne
mov
mov
mov
sub
mov
pushf
aas
dec
xchg
cmpsl
jg
add
sbb
popf
aaa
pop
movb
sbb
out
movsb
jbe
mov
icebp
fstps
sbb
rclb
mov
or
test
imul
test
jecxz
outsb
jbe
outsb
imul
inc
push
pop
mov
push
pushf
arpl
dec
and
push
lcall
pop
push
gs
sbb
push
pop
cmp
out
sub
add
ret
popf
pop
fwait
xlat
mov
mov
clc
popa
mov
push
in
sub
dec
xchg
sub
stos
adc
imul
jb
cmp
sti
xor
cs
mov
and
mov
push
movsb
in
mov
lret
stc
mov
mov
mov
adc
call
push
or
xor
lods
xchg
adc
dec
pushf
jne
mov
xchg
popf
dec
ret
hlt
lods
out
inc
push
in
mov
dec
add
lahf
xorb
sti
sarb
pop
dec
push
fisttps
sbb
fnstcw
xlat
inc
cmp
shlb
cmp
dec
add
lock
jge
jbe
mov
ja
or
insb
outsb
jne
lcall
lret
fwait
push
ret
in
hlt
xor
shll
mov
xchg
js
mov
mov
sarl
cmp
ja
stc
cmp
pop
xchg
mov
test
inc
mov
das
jmp
sbb
pop
fs
mov
jmp
int3
push
in
xchg
or
xchg
test
or
fsubs
je
jge
in
xlat
lock
mov
mov
loopne
movsl
inc
test
test
add
add
lahf
add
cs
inc
jmp
out
xchg
in
inc
cld
movsl
or
movsb
fsubrl
pop
cwtl
or
pop
jecxz
xor
dec
and
inc
fisttpll
ss
inc
xchg
arpl
inc
dec
in
dec
xor
inc
sbb
adc
inc
movsl
adc
aad
aad
xchg
lcall
xor
and
sub
movsb
flds
sub
add
pop
adc
nopl
das
or
mov
icebp
pop
sbb
aas
in
add
fwait
xor
jns
xchg
adc
hlt
adc
sub
iret
insl
cmp
ret
in
es
and
je
push
fldcw
cwtl
inc
mov
pop
lea
jns
or
jae
icebp
outsl
dec
je
outsb
mov
sti
add
push
and
fdiv
dec
add
adc
mov
xor
cmp
in
add
xchg
sub
sub
pop
cld
ds
je
loopne
add
adc
imul
fwait
push
shlb
or
cmp
sbb
shll
xor
dec
sbb
lods
inc
pushf
bound
scas
ds
xor
inc
stos
pop
outsb
shrb
jge
sar
adc
pop
cld
fs
in
dec
mov
xchg
sub
out
pop
mov
sbb
popf
or
sbb
dec
inc
enter
test
pushf
and
mov
jnp
lret
mov
subb
jmp
outsb
cld
add
scas
inc
daa
push
loop
cmp
cld
or
sbb
inc
repz
mov
ret
pop
cmp
flds
pusha
aaa
lcall
mov
jnp
sbb
xor
lcall
adc
mov
xchg
inc
sbb
aam
ja
stos
dec
jl
jb
jle
fisubrs
mull
xchg
aaa
mov
sti
adc
fstpl
nop
or
pop
pop
popa
testl
call
pop
push
shlb
shrb
xor
push
les
fs
mov
les
and
int
std
ret
push
pop
inc
xchg
cli
xchg
jecxz
out
in
repnz
outsb
xor
aas
fsubl
jns
mov
test
loopne
clc
sub
scas
mov
jmp
fwait
mov
aad
sbb
je
daa
adc
cmpsb
jne
loop
xor
mov
insl
jle
jl
aas
fs
dec
mull
movlps
jbe
ret
or
imul
inc
dec
adc
sub
cmp
cltd
xor
pushf
call
popa
xchg
nop
std
and
xchg
lret
pusha
pop
mov
push
cltd
dec
and
aad
add
enter
jne
aam
dec
fdivl
lds
jae
hlt
adc
js
xchg
mov
mov
popa
mov
lock
pop
out
cmc
fmul
sub
sahf
cli
xor
and
imulb
cmc
xchg
jnp
pop
xchg
pop
push
cmp
sub
iret
mov
out
movsl
sub
ss
hlt
imul
imul
mov
add
lock
push
daa
xor
and
shr
subl
std
jg
scas
sbb
xchg
cli
adc
fsts
orb
cs
push
rolb
push
push
rclb
movsb
pusha
push
xor
ficoml
dec
sahf
dec
mov
test
std
or
test
fucomip
dec
adc
out
test
cld
jmp
fdivs
pop
inc
iret
add
push
sbb
mov
repnz
out
imul
or
lods
notb
pop
xchg
sbb
das
mov
ret
outsb
fisttpll
dec
cmp
pop
aad
jbe
imul
js
mov
sbb
and
sub
lahf
leave
cmp
or
push
lods
movsl
xor
or
cwtl
gs
int
insl
loopne
mov
inc
mov
mov
cmp
divb
stc
push
fisttps
mov
add
pop
mov
inc
mov
pop
repnz
xor
sub
test
stos
mov
fcmovnb
inc
jne
cmc
cld
mov
cltd
sub
adc
icebp
mov
fwait
mov
cmc
ds
adc
jae
lret
sbb
cmp
clc
shll
dec
push
adc
lea
mov
loope
cmc
push
sub
idiv
sahf
hlt
shld
mov
cmc
shlb
jb
in
cmp
xchg
pop
rcl
add
into
out
sarb
fwait
add
fisttps
push
test
xor
push
cmpsl
pop
clc
mov
xor
mov
popa
enter
mov
sti
aaa
out
pop
inc
pop
test
xor
andl
jmp
adc
sub
mov
cmp
shl
or
pusha
pop
cltd
mov
jo
xchg
mov
pop
jecxz
push
and
ret
inc
xor
data16
lods
ret
mov
inc
in
mov
icebp
es
mov
adc
es
fsubl
cli
push
lods
sub
ljmp
adc
push
test
movsl
cmpsb
int
scas
jle
inc
xor
mov
xchg
call
ljmp
sbb
jbe
and
mov
cmp
mov
pop
sti
ret
addr16
popa
movsl
pinsrw
loope
ret
insb
pop
cmpsl
jecxz
adc
aaa
mov
pop
sbb
jnp
shl
dec
sahf
fadd
adc
mov
loop
ljmp
cmpsb
fisubrs
ds
sbb
daa
inc
cmpsl
insb
mov
inc
fidivl
fisttpll
jbe
inc
adc
dec
add
es
dec
mov
frstor
insb
sub
push
enter
not
mov
fcomps
push
aam
sahf
popf
loope
ficompl
dec
jl
mov
or
fiadds
add
adc
cmp
out
pop
add
call
insl
push
cmp
negl
sub
test
add
xor
shl
mov
add
scas
adc
stos
mov
push
out
jl
xchg
and
adc
add
imul
dec
and
pop
pusha
jno
insl
adc
adc
sub
fistpll
das
repz
divps
test
scas
push
mov
lea
mov
adc
and
jne
jmp
sarb
sbb
inc
mov
sti
pop
cmpsb
mov
sbb
jmp
int
bound
or
nop
and
jae
pop
shrl
popa
or
lahf
ffreep
push
jecxz
cmc
sub
por
les
and
or
xchg
cmp
mov
jg
or
adc
mov
sbb
rcrl
pop
jae
dec
aam
cltd
push
dec
inc
ret
sbb
movsl
xor
aaa
pusha
mov
pop
mov
cld
push
push
cmpsl
inc
mov
pop
lea
sbb
or
pushf
cmp
inc
inc
and
fimull
insb
movsb
popa
mov
sti
fs
cmp
mov
into
inc
fistl
mov
jl
or
cmp
mov
into
imul
push
adc
cmpb
loope
lret
incb
sbb
popa
loope
fcmovne
test
jno
hlt
sahf
jmp
push
lds
je
mov
scas
in
xlat
cltd
arpl
cmp
hlt
adc
jno
fmulp
adc
jno
lea
std
inc
pop
add
pusha
pop
and
pop
push
mov
mov
inc
and
xchg
repz
sub
insl
fisubrs
mov
inc
ret
and
or
test
inc
add
and
mov
push
aas
cmc
lock
adc
push
sub
xor
cmp
jo
leave
inc
fadds
mov
jo
xor
in
sbb
enter
aaa
in
lods
test
sbb
fsubrp
mov
xorl
inc
popa
jmp
inc
xlat
jp
mov
mov
incl
adc
sub
and
mov
sub
inc
add
xchg
outsb
push
push
lret
jae
ja
inc
in
bsr
fldcw
mov
xchg
in
arpl
sub
ret
mov
cli
xchg
add
inc
mov
lea
sbb
jne
cmpsb
getsec
scas
mov
lods
lret
jae
xor
push
mov
mov
add
jmp
popf
push
test
clc
pop
add
das
aaa
cwtl
adc
int3
xchg
sti
das
dec
sbbb
daa
addb
aad
or
hlt
popa
push
out
int
pop
push
lock
mov
xor
je
lcall
icebp
jbe
scas
jbe,pt
dec
inc
push
or
xchg
dec
shrb
jne
add
adc
add
mov
mov
push
push
mov
add
repz
adc
out
into
jb
cmc
jno
out
inc
cmp
mov
pushf
fistpll
mov
xor
and
lds
xchg
cmp
stos
pop
jns
xlat
cwtl
push
push
lahf
mov
xchg
pusha
xchg
repnz
adc
aad
in
sti
out
mov
scas
lods
sbb
rcrl
jecxz
sub
adc
jl
imul
push
jmp
stos
mov
mov
clc
mov
out
stos
dec
push
pop
jbe
aad
mov
sarb
mov
aas
in
push
aam
mov
adc
inc
pop
pop
sbb
inc
fs
inc
sbb
add
adc
fldcw
aad
fcoms
adc
jns
sahf
fcompl
fcomps
cmp
mov
mov
fisubrs
adc
out
push
dec
sbb
jb
add
xor
lahf
in
fdiv
sbb
add
in
inc
inc
test
adc
xchg
cmpsb
sub
sahf
jae
jo
mov
xchg
repz
aaa
iret
and
dec
mov
pop
test
test
cli
aas
call
out
add
fucomp
jo
dec
aas
out
jmp
sahf
add
lret
mov
addr16
shlb
in
push
mov
ljmp
jecxz
and
sti
loop
mov
in
pop
dec
movsb
loop
repz
push
push
daa
add
das
insl
inc
cmp
stc
dec
insl
movsl
ret
popa
sub
aad
xor
nop
aad
dec
xchg
sahf
pushf
jb
mov
insl
mov
jmp
mov
aam
jns
mov
shrb
push
cmpsl
sub
sbb
jle
ds
xorl
sbb
add
sti
out
push
imul
std
and
xchg
sti
popa
cld
push
xor
loop
lods
xchg
fadd
dec
dec
mov
ljmp
cmpsl
lea
jg
jae
xchg
and
sub
pop
mov
mov
lods
sbb
scas
mov
adc
jns
frstor
mov
jge
lahf
or
nop
push
mov
out
add
cmpl
push
stos
addr16
jl
loope
cs
push
mov
sbbl
mov
inc
inc
je
repz
adc
mov
or
cld
push
pop
jl
mov
cwtl
test
push
sub
inc
xor
dec
dec
pop
jge
shlb
push
mov
andl
in
int3
shll
icebp
mov
insl
ja
sub
popa
bound
es
mov
mov
mov
ficoms
xor
test
or
and
ret
es
adc
add
scas
arpl
or
lahf
and
mov
ud1
mov
dec
cmc
dec
cmpb
sahf
repz
mov
jb
or
fadd
lret
enter
sbb
out
jle
insl
push
and
lret
bound
arpl
adc
xlat
jl
movl
mov
lock
dec
add
mov
les
dec
int
and
xchg
mov
movsb
pop
cmpb
cwtl
jecxz
popa
sub
fwait
add
idiv
jge
cmp
xchg
sti
lret
jae
pop
repnz
sti
lcall
mov
xor
push
outsb
add
ffreep
loope
inc
push
adc
loopne
out
fs
jl
sbb
cmp
test
aaa
mov
stos
shll
scas
mov
mov
mov
fmuls
xchg
sub
icebp
fimuls
lahf
test
pop
gs
lahf
shll
fucomp
push
dec
mov
test
sbb
cmpsb
mov
pop
rcrb
pop
push
adc
xchg
push
repnz
pop
cli
mov
and
addr16
mov
adc
sbb
dec
leave
outsl
jo
add
pop
mov
cmp
shrl
outsb
mov
ret
and
sub
push
xchg
push
out
jle
mov
bsr
decl
mov
out
xor
ja
and
stc
xorb
cltd
and
int3
shr
lret
jmp
pushf
mov
mov
jnp
push
aad
dec
pop
fisubs
mov
out
sbb
cmp
dec
in
imul
sbb
jge
push
xlat
sbb
pop
xlat
shl
mov
cmp
fmuls
xchg
cltd
xor
push
fwait
jnp
mov
mov
add
xchg
sbb
pop
sbb
faddl
cmp
stc
repz
jmp
lret
rcll
sbb
mov
inc
daa
add
mov
es
test
cmp
dec
fdivs
jl
pop
xchg
cwtl
mov
decb
std
cs
mov
adc
andl
xchg
int
xor
divb
inc
addr16
pop
mov
cmp
in
pusha
sahf
inc
pop
fdivl
inc
inc
inc
mov
sbb
in
sbb
xor
xchg
add
imul
add
dec
xchg
in
pop
sti
cli
xchg
dec
xchg
outsl
out
fmul
jnp
push
ret
sub
add
in
sbb
insl
xchg
idivl
fcompl
push
rolb
pop
dec
ret
pop
mov
jecxz
dec
fsts
call
cli
push
aaa
adc
jp
sub
push
jecxz
outsb
adc
jnp
xor
jmp
mov
orb
xor
adc
outsl
mov
aad
or
bound
ja
cmp
xor
stos
push
mov
stc
inc
xor
sub
mov
nop
push
sbb
cmpsl
scas
jb
rcr
mov
pop
jle
fwait
loop
idivb
and
test
xchg
mov
jecxz
movsl
jle
pusha
add
imul
andb
jg
cmp
data16
or
mov
sbb
test
push
jae
outsb
adc
addr16
push
fidivrl
ljmp
fisttpl
ljmp
mov
xchg
xacquire
lea
icebp
jnp
rcr
push
pop
ret
sub
ud0
adc
push
jns
pop
and
es
mov
add
mov
js
es
and
pop
clc
popa
and
sub
xor
aaa
jecxz
repnz
mov
data16
mov
int3
inc
and
daa
xchg
sub
jae
cmp
inc
and
bound
jp
dec
cmc
xor
lahf
lds
rcrl
imul
xor
ret
push
mov
sub
and
iret
outsb
mov
add
add
dec
or
xor
mov
andl
cli
pop
or
pushf
aas
jae
ja
scas
lds
mov
sbb
jmp
xchg
int
fdivl
icebp
and
inc
std
push
leave
pop
inc
fwait
shrl
mov
jge
std
mov
decb
decb
inc
out
jecxz
jp
jo
add
lcall
out
cld
jb
repnz
pop
xchg
scas
subb
fisubrl
lcall
and
mov
pop
inc
aam
pushl
mov
movsl
icebp
stos
ss
mov
lods
gs
jns
rcl
jp
dec
insb
or
cmp
fistps
or
jp
stos
sbb
xor
das
mov
in
iret
xchg
iret
and
mov
mov
add
clc
imul
fcomps
mov
push
inc
adc
jb
jl
dec
lea
sub
repz
push
cltd
insb
push
ja
in
dec
sbb
fs
dec
fnstcw
inc
std
and
jmp
inc
in
cmc
adc
sbbl
xchg
mov
xchg
mov
or
test
lods
sbb
insl
cwtl
adc
adcb
outsl
mov
call
xchg
or
mov
xchg
es
xchg
enter
or
or
adc
mov
xchg
mov
gs
xchg
aas
dec
movsl
movsl
movswl
jb
pop
or
lock
test
or
ds
push
mov
pop
add
je
or
mov
les
push
cld
mov
lock
mov
fwait
xor
mov
push
ss
push
addl
insl
ljmp
shlb
sbb
arpl
imul
scas
push
dec
jl
mov
out
and
sub
and
cs
cmpsl
pop
and
add
sub
dec
mov
aaa
insb
mov
mov
lahf
or
lods
leave
inc
jb
cmpsl
pop
or
lcall
xchg
scas
in
fists
jo
jne
call
lret
ret
fmull
fs
mov
sub
pop
fcomip
jnp
pop
inc
or
mov
adc
rol
jne
fiadds
clc
cmpsb
add
imul
in
fdivrl
ret
push
and
sub
mov
xor
add
push
cmpsb
dec
das
cmpl
test
btc
psllw
inc
mov
jbe
cmp
sti
dec
jno
lahf
pop
push
inc
mov
mov
outsl
sub
mov
adc
cmp
push
push
cmpsb
mov
sub
cmp
or
rorl
cs
shr
add
les
sub
sbb
repz
jmp
push
lea
xchg
sub
jne
cmp
mov
adc
and
in
mov
jno
cmp
sahf
sub
es
lcall
iret
cmp
mov
cltd
pusha
fwait
mov
and
pop
mov
cmp
test
int3
mov
popf
mov
in
ljmp
insl
pop
and
shrl
sbb
lea
cmpl
xchg
mov
scas
lret
jbe
addr16
scas
fs
fcomps
dec
push
sbb
xor
fdiv
mov
das
xor
and
and
pop
fstps
fadds
jl
dec
fnsave
int3
cmp
out
and
gs
fs
arpl
inc
insb
icebp
dec
add
push
adc
into
nop
loope
leavew
test
mov
and
and
sbb
int3
sub
adc
cld
xor
mov
dec
cmp
mov
or
imul
or
inc
ss
pop
xchg
cmp
xorb
sahf
add
in
inc
xchg
js
insb
pop
mov
pop
test
cltd
rolb
call
sti
inc
ja
das
out
nop
lcall
mov
clc
jno
fildl
pop
push
jns
popf
movsb
mov
jg
pop
dec
les
jne
movsl
flds
mov
pop
jmp
cmp
popa
adc
js
fmul
out
lret
xchg
mov
outsb
ljmp
and
mov
cmpsb
cmp
adc
scas
push
sbb
inc
and
and
mov
aas
jno
push
jge
adc
or
xchg
mov
punpcklbw
xor
nop
mov
xchg
mov
outsl
je
mov
cld
mov
pop
das
mov
cmp
xchg
mov
leave
int
outsl
dec
adc
dec
mov
adc
mov
outsl
dec
xchg
dec
cli
pop
rclb
or
jne
call
cli
pop
ficomps
dec
inc
mov
sbb
jmp
cmp
xor
xchg
cli
pop
xchg
sub
nop
int3
addb
loope
divb
pop
subl
adc
orb
sub
xor
test
pop
mov
lods
inc
dec
sbb
lods
iret
mov
cmp
jne
or
mov
loop
sbb
push
push
adc
inc
je
popf
cmp
xor
sub
leave
push
iret
out
jge
loope
jno
push
clc
cmp
icebp
outsl
mov
insl
sbb
fs
lds
and
add
mov
jmp
mov
xchg
leave
cmp
fcompl
aam
shll
sub
mov
addr16
inc
sbb
pop
add
push
aas
jle
incl
dec
fists
xor
cmpsb
addr16
ljmp
imul
loope
add
imul
xor
aas
pop
pop
cmpl
jae
mov
push
daa
je
mov
pop
or
cmc
mov
inc
dec
lds
push
fdivl
mov
fisttpl
xor
and
shr
fsub
rorb
in
lock
inc
cmp
ds
jne
mov
and
loope
lods
lods
icebp
fsubs
bound
xchg
dec
std
inc
mov
pop
mov
fstl
ds
dec
lret
scas
inc
fldenv
push
hlt
gs
clc
push
cltd
test
loopne
pop
dec
pushf
mov
sbb
outsl
cmpsb
dec
mov
xchg
faddl
jnp
dec
xchg
les
scas
outsb
and
fcompl
xchg
xchg
xor
cmp
inc
pop
dec
pop
jne
popa
mov
jo
movsl
jecxz
or
sbb
mov
orl
sub
dec
jmp
stos
popa
jo
rcll
add
test
xor
xchg
dec
ds
scas
xor
mov
out
push
push
cmp
in
jle
mov
inc
fistps
and
fcmovne
out
sbb
cmpsl
lcall
cmp
sbb
lahf
sbb
sahf
repz
aas
ja
add
fs
push
loop
push
outsb
pushf
push
and
add
in
stc
mov
mov
and
xor
push
mov
adc
stos
push
data16
andb
lahf
imul
sub
sbb
adc
sub
inc
lcall
outsb
mov
xor
jmp
add
dec
and
mov
mov
orl
sbb
lds
sub
aas
jmp
xorb
adc
xor
push
lea
mov
cli
pop
mov
sub
enter
cmpsb
aad
push
shl
xor
jne
jnp
fildll
lcall
mov
arpl
mov
mov
xor
cmc
add
xor
jl
out
mov
ret
aad
shlb
mov
push
or
out
fisubrs
xchg
pop
aaa
popf
lock
xor
inc
je
jb
sbbl
adc
cmpsb
dec
lods
nop
pop
ror
cmpsb
mov
cltd
je
sbb
dec
dec
leave
xlat
inc
xor
test
jp
je
inc
sbb
fwait
and
pop
pop
aam
std
orb
jns
or
cmc
push
pop
nop
movsl
in
fisttps
sbb
aas
ret
mov
fisubl
push
jle
les
xor
arpl
mov
imul
xchg
arpl
mov
out
andl
or
mov
push
push
loop
mov
lock
inc
fwait
mulb
into
mov
dec
or
sbb
dec
jp
jecxz
jbe
dec
mov
mov
subl
or
int
cli
or
call
sub
loopne
dec
shrb
sbb
jns
testl
aam
and
arpl
cmpsb
test
fs
mov
or
pop
jp
loopne
adc
into
xchg
mov
push
mov
dec
pop
mov
insl
test
and
sbb
jmp
in
daa
cs
jmp
dec
xchg
inc
out
or
imul
into
in
jmp
xlat
push
jno
std
adc
xor
movsb
mov
scas
add
mov
lret
int3
lods
and
add
test
adc
mov
aam
mov
push
adc
daa
push
rorl
sbb
cld
shlb
dec
jo
lods
data16
mov
jo
sarl
xchg
sbbb
rcl
add
sbbl
shlb
cs
imul
mov
fsubp
je
scas
mov
cld
xor
cmp
push
and
jo
xchg
daa
dec
push
add
scas
mov
mov
add
pop
negl
sbb
or
pop
mov
lret
pop
cmpsb
lea
xchg
pop
sbb
inc
popa
push
jne
gs
cmpsl
xchg
xor
mov
fstl
add
push
sbb
dec
sbb
pop
cwtl
popa
or
nop
mov
push
gs
data16
dec
lods
push
jae
xor
mov
icebp
pause
pusha
dec
inc
or
sbb
pop
mov
push
mov
jg
adc
ds
and
test
repz
push
push
xchg
movsb
test
cmp
mov
push
mov
mov
mov
into
int
mov
andl
fldcw
xchg
je
xor
leave
push
cmp
or
xchg
dec
sbb
and
imul
sub
sub
fstpl
jno
cli
dec
into
mov
arpl
stos
jbe
in
in
sbb
cmp
and
lret
push
mov
sub
fldenv
sbb
mov
pop
add
mov
jno
mov
repnz
jb
pop
lods
xchg
comiss
cmpsb
lods
in
ret
in
test
stos
inc
and
dec
mov
jae
xchg
mov
cltd
adc
xor
xchg
test
mov
and
sub
lcall
push
push
call
xchg
xchg
push
sbb
inc
pop
in
pop
cs
add
push
xor
cltd
js
cmpl
int
sub
or
add
lods
push
ds
je
and
sti
nop
sub
adc
or
mov
cwtl
and
xor
mov
das
iret
xchg
cmp
test
and
or
mov
dec
sbb
out
pop
cmp
test
mov
cmpsb
pop
xor
pop
nop
push
cmp
icebp
pop
jno
cmp
fcmove
fcomi
mov
sbb
incl
jmp
test
iret
adc
cmp
pop
call
mov
dec
and
mov
xor
in
popf
xor
movsl
or
imul
sbb
jnp
clc
mov
insb
dec
aad
or
inc
add
lcall
pop
pushf
pop
mov
jge
mov
jecxz
cmp
rcr
inc
dec
arpl
fistpl
rorb
hlt
adc
aas
shl
testb
fisttps
ds
xor
adcb
in
mov
movsl
push
cli
in
scas
pop
sub
adc
push
mov
cwtl
jecxz
inc
movsl
and
and
fsts
repz
push
dec
xor
and
std
orl
inc
rorl
stc
pushf
add
and
test
cmp
insl
fnstenv
fimuls
aas
sbb
dec
inc
xchg
stos
movsl
push
int
mov
and
or
ja
push
ret
xor
insl
roll
and
jp
idivl
in
lret
ret
jnp
dec
xor
jnp
cli
or
mov
jne
mov
push
out
mov
mov
and
adc
and
xor
jne
clc
rcll
movsb
and
in
inc
mov
adc
fsubrs
orl
enter
jae
lods
xlat
fistpl
add
out
and
ret
push
jle
sub
int
pop
push
push
dec
clc
mov
into
mov
aad
imul
sub
sbb
xorl
pop
mov
push
imul
pop
push
pop
test
in
adc
enter
sbb
popf
ret
mov
push
mov
lret
insl
xor
nop
jnp
ficomps
enter
mov
sahf
popf
idivl
jae
cs
cs
pop
mov
fcoms
push
lods
mov
adcl
jge
cs
cltd
push
in
fdivrs
popf
fisttpll
push
cmpsl
or
ret
dec
dec
add
fwait
stc
test
pop
inc
divb
push
das
and
xor
dec
loopne
dec
lcall
xchg
sti
divb
das
movsl
inc
insl
ljmp
nop
lea
pop
jmp
fcmovne
push
aaa
mov
pop
clc
sbb
movsb
mov
jno
imul
xchg
cs
ds
mov
jb
testl
xchg
out
xchg
xchg
pushf
pushf
shll
lock
ficompl
shl
or
xchg
in
shll
add
rclb
sub
test
lods
fsubrs
popf
push
pop
aaa
inc
jl
imul
icebp
xchg
inc
inc
leave
add
repz
cwtl
or
lea
dec
cmp
cmc
mov
or
nop
faddl
data16
xlat
jmp
aam
jo
and
sub
imul
in
jb
mov
jnp,pn
add
lcall
daa
adc
pop
sub
mov
adc
push
mov
jge
cli
push
sti
rol
inc
push
mov
xor
lock
ss
or
add
out
inc
test
outsl
clc
loope
setns
popf
pushf
int3
xor
imul
cmp
mov
shlb
inc
cmpsl
aas
xchg
push
in
leave
mov
push
push
jmp
pushf
mov
les
loope
jne
cs
jns
mov
in
xchg
leave
and
insb
lock
push
fs
lret
cmp
loop
add
mov
rorl
push
cmp
sets
and
sub
adc
and
mov
push
ljmp
inc
lahf
lods
in
aam
and
cmp
inc
or
clc
pusha
sbb
popa
mov
loop
jl
jecxz
fwait
popa
mov
shll
add
lea
daa
cli
scas
push
fstpt
mov
pop
fwait
and
push
push
cmp
cwtl
cld
subl
xor
shrb
jecxz
cli
ja
test
popa
stos
pusha
std
xorl
test
cmp
dec
xlat
lret
push
test
xchg
push
das
pop
jle
scas
mov
add
or
sbb
cltd
in
out
sahf
aaa
ljmp
mov
mov
dec
into
inc
in
and
popf
push
leave
mov
popa
cmpsl
pop
cmpsl
cmpl
in
mov
stc
push
rolb
sub
push
push
outsb
and
pop
js
mov
sbb
js
adc
push
cmp
out
dec
mov
xchg
adcl
and
and
xchg
mov
cmp
add
mov
xor
cmpsb
adc
int
dec
test
addr16
cwtl
xor
pusha
push
pmulhw
div
fiadds
mov
in
mov
jnp
lret
rcrb
jne
mov
mov
es
or
setge
xchg
push
cmpsb
scas
mov
mov
sub
xor
fstp
lret
pop
cmp
inc
sbb
add
gs
push
push
add
pop
adc
adc
or
ss
xchg
mov
arpl
cmp
push
xchg
test
lea
sbb
add
jo
mov
xchg
pop
push
pop
jns
add
add
stc
and
mov
dec
ret
call
pusha
add
sub
jmp
xor
test
push
adc
mov
pop
repz
and
pusha
and
adc
push
push
mov
or
lret
sub
lock
xchg
data16
nop
orl
push
cltd
jl
test
dec
sub
fs
sub
enter
mov
inc
xor
sub
xchg
and
mov
in
cwtl
xchg
jno
inc
and
inc
inc
ret
aam
or
xchg
loop
sbb
imul
push
movsl
inc
jnp
xchg
je
cmp
dec
add
repnz
pop
je
push
xlat
add
sub
jne
mov
icebp
aam
push
shr
sub
xchg
fcompl
orl
jne
lahf
addr16
dec
sbb
lret
imul
jbe
mov
das
xchg
lock
enter
mov
xor
or
jne
xor
outsl
dec
dec
cmp
xor
stos
shlb
sbb
aad
cli
popa
inc
inc
or
iret
jns
add
outsl
add
stos
repnz
mov
add
test
mov
xchg
dec
pop
inc
push
mov
arpl
rcl
loopne
sbb
add
push
and
jmp
mov
idivl
loopne
dec
mov
mov
arpl
add
arpl
inc
rol
in
ret
aaa
or
mov
sub
repnz
sub
xchg
adc
call
rorb
fdivl
inc
enter
add
adc
rcrl
sbb
fstps
shll
jns
pop
iret
jb
inc
aam
cmp
gs
mov
out
inc
sbb
out
aam
cld
in
movsl
test
data16
int
mov
push
sarb
sbb
lret
adc
imul
cltd
mov
and
mov
out
sbb
icebp
jmp
ret
in
cmp
fwait
jne
pop
mov
jo
dec
adcb
adc
push
out
xchg
and
jae
dec
inc
ja
push
lods
inc
packsswb
mov
sahf
enter
dec
cmpsb
sti
sub
push
fsubs
rep
mov
push
xor
jle
sub
insl
inc
aas
xor
dec
mov
cli
lret
aam
call
cs
sbb
mov
repz
stos
mov
xor
stc
mov
lret
subl
aaa
in
lea
scas
es
sbbl
adc
or
std
add
jnp
pop
popa
lea
out
sub
movsb
cs
cmp
dec
rol
in
pop
mov
pop
cmpsb
pop
cmp
adc
lahf
jnp
cmp
adc
in
scas
inc
negb
jg
pop
cli
jne
add
and
jg
sbbb
add
fnstsw
push
sbb
orb
sbb
fs
test
adc
jecxz
add
imul
xor
lahf
and
cmp
xchg
dec
hlt
push
cmp
mov
xchg
mov
sbb
rcr
push
repnz
xchg
jge
or
scas
sub
mov
mov
out
add
adc
movsl
xor
sbb
push
mov
repnz
insl
jge
das
sub
pop
pop
testb
ja
add
push
popa
xchg
jns
fbld
sti
aad
es
js
aam
xchg
test
jecxz
push
xchg
and
or
jns
sub
cmpsl
sbb
stos
mov
sbb
add
xchg
cmpsb
or
pop
push
sub
sbb
arpl
imul
cli
or
or
pop
mov
jns
call
lret
sbb
mov
notrack
push
jne
adc
inc
pushf
or
adc
push
and
mov
nop
fcoml
mov
pushf
out
std
jne,pn
mov
jl
sbb
mov
add
push
pop
xchg
test
jecxz
loop
jnp
inc
or
sti
push
mov
fucomi
les
sub
xor
inc
and
adc
fidivl
insb
adc
sbb
out
jb
and
mov
pop
push
or
ror
cld
push
imull
dec
adc
jg
fiadds
mov
pop
jge
in
mov
fbld
mov
xor
add
push
daa
insl
sub
add
movsl
or
fwait
pop
clc
aad
out
insb
push
sbb
sar
jmp
xchg
pushf
pushf
mov
arpl
in
xchg
enter
stos
add
test
insb
cmpsl
cmp
mov
cmc
out
mov
jge
sub
in
and
sbb
inc
push
adc
push
out
jbe
push
push
mov
lea
decl
mov
and
jge
popf
mov
bound
add
pop
xchg
xchg
mov
pop
out
xorl
xchg
outsl
decl
add
jno
cmp
fisttpl
add
add
xchg
xchg
fsubl
outsl
add
jno
jg
or
cmp
cmp
mov
repnz
push
pop
xor
dec
mov
out
in
iret
push
sub
pop
fstl
xorb
in
popa
and
push
out
or
daa
mov
outsl
pop
add
cltd
outsl
jge
sbbb
scas
je
and
lea
lea
leave
call
stos
mov
sub
imul
in
inc
add
orb
mov
call
cmp
push
pop
aam
int
or
addr16
loope
add
jns
mov
dec
xor
imul
mov
jle
xchg
add
mov
inc
jp
sahf
adc
lods
xor
cwtl
je
int
pop
repnz
push
dec
cmp
loopne
xor
arpl
mov
jmp
lcall
mov
arpl
insl
mov
stc
fwait
xor
cmpsb
hlt
dec
js
lds
fcom
mov
mov
xchg
mov
gs
inc
xor
iret
in
push
jae
hlt
pusha
roll
insl
inc
inc
outsb
push
push
push
add
cmc
inc
popf
jl
xor
push
arpl
rorl
add
xchg
push
add
add
inc
sbb
cld
xor
pop
fildl
aaa
push
dec
movsb
ljmp
and
push
push
test
clc
dec
inc
or
mov
jle
lea
adc
ja
cmp
or
int3
in
xor
jl
jne
and
addr16
push
push
sub
aam
push
rcl
jnp
mov
jle
imul
stos
pop
int
addr16
frstor
inc
pop
stos
hlt
incb
rolb
aam
outsb
and
test
sbb
mov
sub
adc
fnstcw
push
push
arpl
cmp
int
push
test
out
loop
inc
mov
jb
sub
xchg
and
xlat
pop
mov
push
cmp
xchg
dec
and
add
aaa
jg
rorl
mov
lea
pop
pop
aam
sbb
adc
popf
dec
ss
xchg
out
inc
pop
je
pop
jo
movsl
push
mov
cmc
pop
jecxz
clc
out
mov
cld
jns
jb
mov
popf
mov
jo
lret
orl
sbb
push
clc
pop
mov
shrl
pop
add
push
dec
jb
test
or
fsubrp
cmpsl
dec
imul
ljmp
adc
sbb
mov
fcos
sub
movsb
jnp,pn
leave
stc
shlb
sti
dec
and
cmc
cmp
ficompl
jae
ljmp
decl
push
movsl
mov
inc
sub
pop
aad
rcll
mov
test
fnstenv
lret
jb
mov
test
adc
pop
mov
fidivl
pushf
in
iret
mov
ret
mov
or
test
cld
inc
popf
cmp
in
mov
out
dec
stos
mov
adc
icebp
in
mov
sub
stc
jo
aas
lock
sbb
mov
dec
inc
mov
pop
aaa
xchg
popa
ret
movsl
pop
sub
dec
adc
xchg
inc
cmp
push
popa
dec
adc
cmpsb
push
jae
push
das
nop
scas
mov
add
out
in
and
sub
pop
arpl
pop
ss
inc
mov
int
ljmp
scas
out
dec
cmp
lcall
nop
lea
push
mov
cli
mov
lods
pop
sahf
adc
fsts
jnp
or
sarl
movsl
inc
pusha
cs
mov
test
lcall
and
aas
rorl
js
fsubs
dec
aaa
dec
or
scas
aad
cmp
sarb
into
inc
out
sub
test
popf
and
xchg
xlat
arpl
out
xchg
out
test
jbe,pt
ljmp
mov
cmp
adc
int
cltd
push
xor
dec
rcr
ret
ljmp
adc
aaa
push
loop
cmpsb
adc
xchg
sbb
imulb
mov
ja
stos
ljmp
sbb
jg
flds
lods
sarl
arpl
xchg
add
rcl
push
in
fnstcw
jnp
or
adc
xchg
data16
pushf
filds
sub
pop
dec
mov
jg
sbb
rcrl
sahf
loopne
hlt
jecxz
push
insl
gs
ljmp
add
inc
sbb
mul
iret
xor
jle
outsl
insb
test
lea
xchg
adc
aam
or
pop
shrl
out
push
push
fcompl
icebp
jmp
dec
jns
test
add
es
push
dec
dec
outsl
sbb
and
fs
mov
stc
hlt
mov
sbb
sbb
dec
hlt
pop
jae
adc
addb
shrl
loopne
cmpsl
mov
cwtl
aaa
lret
adc
lret
shrb
call
scas
dec
in
mov
pop
inc
call
clc
repnz
and
mov
lcall
mov
lds
mov
neg
in
cmpsb
push
jmp
mov
mov
xor
leave
or
sbb
xchg
sbb
push
out
inc
sub
push
jmp
jmp
rclb
pop
pop
subl
push
dec
divb
cltd
jns
int3
outsl
insb
inc
and
pop
stos
pusha
sbb
loope
sub
in
rolb
add
sbb
roll
sbb
pop
scas
lahf
lods
pop
inc
adc
sbb
stos
xor
test
sbb
mov
ss
int3
jns
pop
aaa
stc
in
js
mov
sahf
divl
jp
adc
cmp
addr16
mov
stos
rorb
push
sahf
pop
or
inc
test
arpl
jne
jbe
mov
js
mov
pop
lret
dec
xor
push
xlat
movsb
loope
sbb
xor
mov
leave
movsb
push
or
add
jge
jbe
cld
movsb
ss
mov
loopne
hlt
jo
fwait
hlt
mov
into
cmpsb
cmp
call
xchg
addr16
gs
out
sub
shlb
xor
lcall
ficoms
add
fsin
jo
sti
xor
outsb
out
dec
jp
xchg
out
in
rcll
mov
adc
sub
pop
jmp
cli
jns
push
mov
push
add
out
pop
or
outsb
add
jb
cmp
ret
into
and
fwait
push
rcl
xchg
test
xorl
jbe
sbb
jmp
pop
xchg
mov
xchg
js
clc
jecxz
test
insl
sahf
mov
and
sbb
sbb
test
inc
sub
sbb
lcall
mov
bound
mov
je
repnz
jmp
or
xchg
imul
mov
mov
popf
imul
sub
out
test
mov
sarb
aad
je
shll
rcrl
movsb
mov
xchg
dec
inc
pop
mov
std
icebp
and
xor
and
sub
and
mov
mull
push
mov
icebp
mov
cmp
in
mov
ret
xchg
loop
roll
jo
popa
clc
adc
pop
xor
enter
jns
test
fadd
and
cs
into
dec
xor
mov
jecxz
lds
xchg
sub
outsb
out
in
insl
arpl
or
dec
jno
xchg
es
jae
sbb
loop
inc
jmp
dec
adc
mov
test
jge
xchg
mov
sub
add
cmp
lret
cmc
mov
xchg
aad
jo
fwait
outsb
sbb
or
jne
leave
lock
xchg
mov
lcall
int
pop
insb
mov
sub
lcall
jg
xor
add
push
sahf
adc
stc
xor
sub
pushf
jg
sahf
jns
or
add
rol
test
call
xchg
js
mov
les
pop
xchg
or
rorl
loop
cmp
data16
mov
inc
mov
mov
inc
in
arpl
mov
in
dec
push
test
pusha
sub
es
mov
adc
or
mov
movups
adc
lock
movups
mov
sub
pop
jmp
fsubp
stc
inc
leave
mov
std
es
imul
sbb
xchg
insb
in
sbb
pop
ss
hlt
mov
bound
add
out
rcrl
call
xor
push
bound
sbbl
mov
sti
jle
movsl
es
inc
aam
jp
inc
cs
jnp
or
mov
sbb
pop
push
loope
sub
lret
insl
cmc
or
fisubrl
xchg
dec
xchg
cmp
out
stos
ret
aam
test
es
push
push
cltd
outsl
xor
xor
pop
aam
out
inc
data16
std
and
popf
js
cmp
adc
or
jg
lea
call
inc
imul
jecxz
sub
jge
jmp
mov
into
rcrl
pop
xor
fsubs
scas
mov
push
imul
scas
xchg
mov
sbb
jb
mov
fwait
push
in
xchg
jp
cmc
xchg
adc
and
jmp
out
rcr
inc
cld
sub
aam
stc
pushf
adc
test
pop
lock
push
inc
sarb
in
enter
inc
repnz
mov
arpl
icebp
ret
leave
lds
fs
dec
jb
out
cs
fs
lea
test
mov
push
mov
int
aad
nop
sbb
mov
mov
cmp
mov
aad
out
mov
ss
fneni(8087
pop
mov
subb
cmp
les
int
mov
mov
sahf
xchg
push
xor
add
in
stos
testb
sbb
add
push
push
push
mov
cmpl
jge
push
ljmp
pop
mov
add
sbb
jl
lahf
test
lods
xchg
pop
or
ljmp
push
imul
shll
rolb
cmc
pushf
adc
xor
mov
push
std
shrb
ret
jb
test
pop
inc
aas
sub
push
xchg
sub
jl
out
lods
pop
sub
mov
daa
icebp
lock
fpatan
mov
mov
jge
jp
push
cld
les
cli
je
xor
xlat
rcrl
repz
fildll
es
out
sub
shll
cmp
pop
in
jo
cmp
adc
sbb
std
dec
incl
imul
pop
adc
mov
mov
pushf
andb
jg
mov
xchg
shr
daa
cmpsl
aaa
adc
xchg
aaa
pop
mov
dec
les
popl
loop
pop
xor
jo
dec
or
call
push
fstps
loopne
dec
call
int
hlt
push
sub
filds
push
popa
mov
ja
pop
adc
sti
xor
ret
and
lock
adc
pop
mov
mov
gs
xor
sub
scas
ds
add
pop
adc
pop
or
add
das
sbb
in
or
xor
shrl
push
mov
dec
cmp
mov
xchg
jns
ss
adc
dec
jb
dec
push
mov
dec
xchg
fmull
out
adc
and
and
mov
in
jecxz
push
insl
push
push
pusha
and
mov
pushf
js
insl
imul
addl
sti
flds
cmp
mov
outsb
add
fistpl
mov
xchg
jbe
fdiv
add
mov
insl
decb
inc
lods
or
add
inc
jbe
jnp
xor
rol
jo
jle
shl
cltd
dec
int3
daa
loope
sub
imul
xor
push
call
xchg
mov
pop
ror
pop
aad
in
stos
xchg
cmpsl
xchg
int
mov
push
sbb
pop
and
jbe
sub
cmp
ret
cmpsl
idivb
adc
int3
dec
sti
popf
sbb
int
adc
fwait
adc
jmp
aaa
xchg
jmp
in
cmc
jp
loopne
push
mov
push
ficomps
jl
adc
mov
dec
leave
scas
cld
imul
cmp
pop
xchg
stos
xlat
adc
xchg
sti
cli
int
sarb
push
imul
push
pop
jg
orb
add
sahf
xorl
imul
mov
and
cwtl
pop
xchg
push
bound
lds
inc
dec
fadds
leave
pop
clc
jmp
es
push
int3
adc
loop
pop
mov
mov
je
lahf
sub
xchg
xor
adc
js
and
scas
or
sub
sarl
out
add
loope
push
fistl
mov
xlat
xlat
out
add
repz
add
gs
ret
xchg
xor
and
sbb
or
xor
lcall
sub
cld
jne
inc
addr16
push
push
and
or
addr16
in
test
xchg
cmp
ds
mov
jge
mov
pop
push
inc
xchg
adc
mov
push
test
xchg
test
or
loope
insb
std
mov
xchg
cmpsl
ret
push
jg
push
jmp
andb
cmp
mov
xorb
lods
bound
aaa
insb
bound
insb
aam
jnp
cwtl
stos
mov
pop
iret
pop
pop
fs
push
xor
xor
jmp
movsb
mov
int3
rcll
xchg
mov
aad
add
push
sub
fwait
add
lock
insb
jle
adc
test
inc
add
scas
cli
and
xchg
lods
shlb
pop
out
lcall
jns
dec
add
jle
mov
inc
sub
fcomps
mov
mov
xor
test
push
xor
mov
sbb
cmc
cld
bnd
xor
sub
xchg
xor
test
mov
mov
cmp
or
int3
movsb
sub
popa
pop
xor
jg
icebp
rcrl
push
add
mov
iret
fcmovnu
int3
push
mov
mov
movsl
xchg
pushf
xor
push
add
addr16
movsl
lret
arpl
sbb
inc
pop
repz
cld
inc
lss
lahf
movsl
xor
outsb
mov
lock
cmp
jnp
mov
jg
mov
ljmp
sbb
pop
int
outsb
out
incl
xor
js
xchg
jae
mov
pop
nop
inc
mov
dec
and
pop
inc
sahf
xor
imul
and
xor
int
cmp
insl
outsb
add
pop
push
call
xchg
and
mov
les
sub
add
fwait
gs
sbb
pop
jne
or
js
mov
test
mov
fsubrs
jecxz
adc
and
push
adc
or
jmp
shrl
adc
pop
pop
mov
js
xchg
les
add
test
ss
pop
mov
movsb
sbb
xchg
mov
push
xchg
pusha
lahf
out
dec
rolb
and
xchg
mov
movsl
popa
stos
add
outsb
clc
cmp
xor
popa
jae
test
xchg
xchg
fwait
into
cmp
pop
or
mov
and
daa
sbb
and
aad
test
adc
jl
mov
xchg
add
xchg
aam
loope
cwtl
rol
push
fidivl
shlb
push
mov
sub
jl
mov
dec
test
movsl
xor
bound
pop
pop
mov
sub
sbb
or
bound
das
sbb
or
fildl
aam
mov
mov
mov
jne
mov
inc
fisttps
mov
mov
jns
call
xchg
add
mov
enter
xchg
out
fcomp
out
xchg
aad
xor
ror
inc
push
in
sub
imul
cmp
sub
add
add
out
mov
leave
inc
nop
jecxz
jle
cmp
into
clc
repnz
dec
inc
subl
mov
stc
mov
rolb
push
inc
scas
repz
and
std
add
sti
jae
sub
mov
jae
aas
cmc
push
lret
rorb
jecxz
je
mov
inc
sub
jnp
adc
xchg
int3
nop
jno
lods
cmp
int
mov
xchg
xchg
ljmp
xor
movsl
rcll
into
repnz
bound
fsub
out
aad
sub
in
dec
aad
xorl
adc
popf
cs
push
inc
xlat
fidivrs
adc
aas
lea
fs
fcompl
testl
cmp
andl
out
mov
add
and
lcall
repnz
aam
popa
mov
sbb
inc
xchg
mov
bound
cmpsb
jl
test
inc
pop
push
add
push
lods
mov
mov
test
cmc
pop
fstpl
mov
pop
or
dec
sub
dec
cmp
sub
push
sti
fninit
out
pushf
stos
inc
xor
data16
push
push
ret
pop
mov
ds
push
push
pop
jmp
mov
push
or
ds
dec
fbld
xor
cmpb
in
sub
adc
push
ljmp
cwtl
jg
pop
mov
sub
movsb
xchg
push
out
stos
test
test
rol
mov
nop
sahf
sbb
sbb
add
pop
xchg
sbb
mov
push
decl
movsl
call
scas
emms
xor
inc
sub
mov
mov
xchg
jno
mov
pop
sbb
dec
push
mov
push
and
inc
sti
push
jb
push
rorl
mov
and
gs
loop
in
xor
lret
cli
jae
icebp
out
xchg
sub
mov
mov
inc
push
mov
insl
sub
sbb
arpl
fwait
ror
loopne
xchg
jbe
imulb
jo
lret
into
cltd
arpl
iret
mov
xor
and
mov
jmp
xchg
icebp
dec
sub
pop
sbb
iret
sub
sti
mov
xchg
jno
sub
ljmp
xor
test
shll
or
stc
cmpsb
sti
adc
add
stos
sub
push
or
jp
addr16
fdivl
addr16
mov
xor
lret
mov
bound
and
push
mov
or
push
sub
xor
jbe
rcr
lds
cmc
out
scas
lods
pop
add
inc
inc
push
daa
jbe
test
out
ds
mov
aam
es
imull
call
pop
outsb
ud1
jle
xchg
pop
xchg
xchg
dec
aam
cmpsb
jp
sub
outsl
dec
leave
and
mov
mov
sub
adc
jge
pop
sub
mov
sub
dec
icebp
xorb
testb
and
jecxz
jns
inc
jge
imul
sarl
inc
imul
jnp
jg
into
push
mov
mov
dec
popf
push
out
frstor
pushf
ja
sub
clc
and
push
push
sbb
mov
cmc
push
testl
in
ss
mov
in
mov
call
add
aaa
jle
mov
daa
jns
sbb
cld
in
sbb
addr16
lods
or
sbb
mov
ret
dec
shll
sub
cmp
sti
rorb
out
stos
insl
cmp
dec
nop
mov
aaa
mov
lock
js
das
dec
xlat
jg
push
hlt
lret
test
xchg
sub
add
leave
addr16
bound
insb
stc
inc
repz
push
lock
sbb
sbb
adc
pop
mov
out
xchg
data16
iret
mov
out
lock
cmp
pop
mov
mov
lods
aaa
dec
sub
pop
fcmovbe
sbb
fidivs
mov
ret
push
clc
lcall
pop
into
mov
test
icebp
outsb
push
pop
or
jo
sub
pop
nop
std
xor
inc
sbb
fs
cmpsl
add
cmp
xor
iret
notl
push
xchg
mov
xchg
jp
fisubrs
icebp
subb
fisubl
aad
lret
cmpsl
bound
sarb
stc
ds
jae
dec
jecxz
pop
lea
mov
inc
loope
sbb
inc
push
test
lcall
lret
fistpl
push
ja
repz
mov
enter
scas
push
gs
lret
test
lret
sbb
in
aaa
shl
movsl
push
pop
xchg
lds
mov
ret
movsb
jno
mov
loop
xchg
cmp
fsubrs
xlat
dec
dec
dec
addb
imull
imul
jno
sub
mov
lods
mov
out
ret
ja
cmp
lds
xor
stos
lea
fbld
sbb
mov
and
inc
adc
mov
arpl
pop
add
lds
ja
stos
xchg
dec
rorl
sahf
fucomp
lret
mov
sbb
lret
inc
xor
loop
addb
ds
test
sub
sbb
inc
fnsave
push
xchg
loop
stos
xchg
mov
ret
loopew
das
lahf
pop
and
or
mov
fstl
rcr
pop
adc
cltd
ljmp
sbb
test
cwtl
sbb
cld
cmp
ret
xchg
or
pop
cmpsb
mov
cmp
les
mov
ret
mov
xor
mov
push
xchg
mull
mov
repz
icebp
mov
jo
mulb
push
xor
xchg
mov
xchg
cmp
mov
adc
xor
inc
scas
add
mov
dec
push
mov
jbe
mov
in
xor
push
mov
cmc
filds
jp
xchg
xor
call
sbbl
xlat
scas
movsl
inc
ret
movsb
add
repz
push
sub
sbb
lret
aas
in
icebp
fdivp
lret
aam
cmp
sti
mov
and
cli
pop
xchg
in
fnclex
push
fcmovnu
xchg
cmpsb
xor
sub
test
cmp
hlt
cwtl
cmp
mov
das
xchg
mov
lods
mov
push
lahf
sbb
mov
mov
xlat
and
lock
sub
mul
xchg
das
int3
loop
and
pop
cmp
out
sbb
xor
daa
mov
xor
neg
inc
faddl
xchg
es
push
test
imul
nop
pop
repnz
mov
scas
jle
or
cli
jl
push
xchg
in
les
add
push
inc
and
cmovs
pushl
sub
daa
jbe
pop
jge
push
arpl
xchg
les
jp
je
xchg
dec
inc
cmp
sub
and
and
repnz
or
notl
push
mov
cs
leave
dec
pop
clc
sarb
aam
arpl
add
adc
stc
xor
adc
mul
push
push
mov
adc
mov
repz
stos
jo
and
into
pop
test
push
sub
add
or
mov
into
jns
dec
cmp
xlat
mov
push
or
add
mov
ror
cmpsb
add
jae
cmp
les
adc
jmp
pop
inc
out
jns
or
mov
mov
mov
mov
sbb
inc
insl
xchg
mov
dec
movsb
sbb
dec
push
adc
adc
cli
lea
xchg
xor
ds
data16
dec
dec
xchg
pop
lods
xor
lahf
adc
mov
jne
jp
mov
sbb
in
push
sub
cmp
push
mov
mov
movsl
jecxz
fnstenv
push
pop
rcrb
dec
mov
in
dec
shll
lds
push
adc
int
sbb
sbb
mov
fs
in
out
pop
xchg
iret
mov
pop
fmuls
mov
movsb
lock
sub
js
mov
push
loope
out
fmul
hlt
xchg
sub
cli
xor
xchg
jae
ror
sbb
loop
bound
pop
jecxz
repz
push
sbb
imul
sbb
add
inc
push
call
repz
ret
xchg
scas
js
into
push
ja
adc
jns
pusha
pop
push
cmp
sub
push
cmp
or
push
xchg
int
mov
cmp
pop
xor
stc
xor
sar
or
xchg
in
in
cmp
data16
roll
roll
inc
gs
mov
lds
xor
pop
les
data16
outsl
mov
mov
loope
imull
pop
cld
xlat
mov
sub
rorb
in
sti
cmp
sub
sub
sub
add
cmp
inc
sub
test
inc
movsb
stc
idivb
lea
adc
fdecstp
mov
andb
push
ljmp
or
or
mov
aam
cmp
orb
push
sbb
push
lods
shr
sub
inc
lock
adc
loopne
mov
xor
adc
inc
xchg
jbe
test
test
cmc
pop
pop
and
cmc
pop
push
jl
add
xor
lcall
addr16
sbb
out
das
call
pop
mov
sahf
mov
dec
ja
cld
pop
inc
dec
icebp
pushf
lea
ret
insl
in
dec
aad
popa
push
adc
pop
sub
sub
out
push
add
or
in
sbb
sbb
mov
lahf
stos
popf
lret
xchg
lods
or
mov
inc
imul
mov
in
in
add
pop
mov
pop
ss
cli
sub
xor
call
xchg
lcall
inc
rcll
mov
and
pop
add
mov
jmp
hlt
inc
shl
mov
xchg
ret
xchg
call
and
mov
outsb
xor
jns
int3
lea
in
js
bsr
orl
stos
repz
jnp
sbb
add
mov
faddl
inc
aaa
mov
or
push
adc
pop
push
les
xor
xchg
out
lds
fdivp
xchg
int
sbb
lock
and
jle
pop
aad
pop
mov
xchg
mov
addb
sbbl
out
adc
mov
or
cmp
or
repnz
mov
nop
jae
sbb
mov
std
and
shrl
pop
pushf
cmp
out
and
inc
dec
dec
sub
jl
and
xchg
cmc
sbb
adc
shll
inc
fstps
dec
sbb
testl
pop
fsts
sbb
add
stos
repz
fisttpll
test
push
dec
mov
fwait
lahf
in
sbbb
test
outsl
push
push
ljmp
rcr
stc
idivb
adc
adcl
inc
int3
clc
dec
fistl
xchg
sub
cli
dec
fidivrl
ret
out
xor
pop
cmp
cli
xor
je
addr16
sahf
ret
cmc
xor
adc
mov
insb
daa
inc
pusha
rcrb
daa
inc
scas
inc
jg
xor
imul
mov
fistps
ret
mov
shrb
dec
test
mov
je
push
adc
push
push
and
incb
shl
out
mov
mov
lods
pop
lock
dec
or
incb
imul
fisubrl
mov
mov
lahf
andl
and
push
dec
and
outsl
pop
jbe
jae
ds
les
aad
xchg
and
adc
mov
mov
dec
pop
inc
mov
enter
nop
add
xchg
dec
repnz
hlt
pop
xchg
je
jnp
data16
xlat
out
xchg
repz
lea
mov
les
addr16
mov
fdivrs
shlb
and
div
jo
es
popa
in
cmp
lahf
mov
das
stos
lds
sub
sbb
xchg
ret
push
lods
push
or
pop
in
jle
aad
or
insb
aas
nop
inc
popf
sbb
pop
popf
xchg
mov
push
xor
pop
xacquire
sub
movsb
repz
push
add
js
cli
dec
out
ret
hlt
outsl
cwtl
sub
pop
loop
pop
jp
xor
bound
test
outsl
sub
sbb
aas
popa
dec
mov
aaa
xchg
jg
sarb
mov
pop
sbb
fcoms
or
adc
xor
pushf
add
std
add
mov
xlat
lea
stos
fidivrl
cld
inc
pop
in
es
mov
mov
xor
clc
loope
leave
mov
ja
and
out
mov
cmp
jbe
xchg
mov
sub
sbb
js
cmpb
add
xchg
lret
je
gs
neg
lahf
adc
xchg
andl
enter
pop
pusha
out
mov
outsl
pop
push
in
ficompl
mov
push
leave
ja
pop
test
call
add
mov
mov
in
cli
pop
xchg
icebp
in
adc
adc
mov
adc
gs
out
mov
adc
insb
mov
iret
cmp
insl
mov
and
adc
aaa
push
ss
pop
sbb
rcll
imul
aas
push
jne
out
add
push
sub
mov
das
rcll
mov
adc
sbb
add
stos
mov
add
inc
mov
add
or
js
out
pushf
xchg
cmpsl
frstor
dec
fisubl
enter
pop
add
jmp
xchg
xor
sub
les
cld
and
xor
push
jle
push
mov
mov
cmp
and
jns
xor
mov
or
or
add
arpl
lcall
push
sub
enter
clc
fldcw
push
mov
addl
mov
ret
mov
outsl
popf
xor
cwtl
jo
jne
push
aas
ds
std
scas
ja
inc
loop
aaa
push
mov
icebp
sbb
cmpsb
push
xor
mov
ljmp
lcall
add
sti
jb
or
cld
fs
cwtl
jg
push
ljmp
mov
mov
test
pop
push
ljmp
cmp
rorb
fistpl
mov
fmuls
in
lret
xchg
cmpsb
sti
mov
jmp
pop
shl
hlt
js
push
mov
xor
nop
repz
hlt
inc
out
lcall
pop
filds
orl
pop
enter
ja
mov
popa
addr16
or
inc
or
cld
mov
movsl
bnd
mov
push
testb
lret
push
rcll
and
outsl
xchg
mov
push
hlt
cld
adc
loope
and
stos
xor
stos
loopne
cmpl
inc
pop
or
fwait
push
push
int3
sub
xor
sbb
pop
outsl
inc
fildll
sbb
lret
inc
mov
mov
mov
mov
push
insb
lret
add
or
lea
imul
adc
test
add
fwait
punpckhbw
rcl
jb
cmpb
push
push
xchg
dec
lds
sbb
pushf
pop
push
cmc
out
cmc
jo
enter
ret
int
dec
push
bound
fisttpll
push
mov
mov
mov
jns
popf
insb
shrl
mov
test
push
xor
xor
rcl
sti
mov
sub
lahf
aam
adc
insl
shl
lds
or
int3
pop
dec
out
add
or
cmpsl
cmpsb
adc
std
inc
mov
xchg
jge
fs
push
daa
xor
and
testl
movsl
sar
aad
pop
cmp
mov
dec
xor
movsb
inc
xchg
out
mov
xor
int3
mov
fadds
pop
iret
and
in
pop
pop
cltd
roll
cli
ss
push
dec
mov
inc
fldenv
fnstcw
dec
cs
xor
xchg
and
fisubs
xchg
cmpsl
sub
aas
mov
inc
xchg
subb
pop
mov
sub
pop
add
mov
addb
and
xchg
std
sbb
xor
icebp
pop
xor
push
fisttpl
adc
xchg
cmp
pop
or
outsl
cmp
lahf
imul
pop
inc
loope
cld
pop
sub
lock
mov
xchg
and
or
push
out
outsb
dec
jbe
mov
push
mov
dec
cmp
jb
in
and
push
dec
mov
and
test
das
test
mov
rorl
aas
gs
push
out
repz
cmpsl
push
xor
pop
imul
pop
sbb
loopne
xchg
pop
sbb
inc
jbe
sub
adc
js
pusha
jg
mov
mov
push
push
sbb
inc
push
cmc
pop
inc
icebp
mov
mov
xchg
mov
pusha
cmp
sbb
sbb
mov
inc
mov
xor
pusha
pop
xchg
cltd
lds
mov
sbbl
pop
sbb
lcall
cli
jg
or
test
outsl
test
jno
inc
xor
sub
call
push
les
test
and
xchg
xor
or
add
subb
sub
enter
mov
ss
adc
enter
cmp
rorl
into
mov
jne
mov
jne
hlt
stos
xchg
xchg
pop
dec
xor
call
inc
xchg
movsb
test
ret
adc
in
aam
incl
push
mov
xor
cltd
pushf
push
dec
mov
repnz
xor
jne
in
dec
shll
lock
mov
rcrl
push
xchg
or
daa
roll
xchg
xlat
add
push
pushl
imul
cmp
and
pushf
mov
adc
cmp
in
fcos
pop
sub
or
in
outsl
ja
inc
mov
movsl
aam
jge
int
cmpb
cld
movsb
bound
test
lret
mov
mov
sbb
lcall
sbb
idivl
out
movl
push
push
clc
adc
cmp
in
and
dec
and
stos
sbb
sarl
es
sub
and
push
jg
out
pop
imull
push
add
scas
je
pop
adc
das
and
xchg
mov
testl
pusha
mov
ds
push
xchg
mov
add
xor
and
cmp
pop
jge
sbbb
fxch
sbb
push
loop
lods
lahf
fiaddl
in
mov
lods
mov
sub
sub
add
popf
rcrl
xor
inc
or
xchg
sbb
cwtl
inc
xor
push
std
add
addl
das
push
data16
mov
push
inc
jb
push
jo
jns
out
nop
cld
fildl
inc
xchg
sub
movsl
mov
xchg
cld
test
out
cmpsb
sahf
inc
push
pop
cltd
lds
and
je
mov
pop
fsubl
ficoml
cmp
aaa
xchg
push
jp
pop
dec
cwtl
imul
push
aad
cmp
or
mov
mov
out
and
mov
bnd
add
icebp
mov
iret
aad
loop
cmp
xor
or
mov
in
lea
xchg
std
mov
pop
cwtl
mov
xchg
adc
fs
dec
xchg
cmp
cwtl
mov
and
dec
jg
xchg
insb
or
cmc
movsl
jmp
aas
xor
sbb
test
push
and
rolb
push
jmp
fldln2
fisttps
out
repz
out
pushf
imulb
xor
add
xor
outsb
lahf
ret
in
xchg
je
cmc
inc
ljmp
inc
lcall
cltd
cld
les
xchg
dec
push
mov
add
cs
test
jnp
jno
pop
bndldx
addr16
push
cwtl
mov
sub
rorl
push
fs
adc
cmp
movsb
daa
ffree
cmc
or
mov
xor
fwait
jmp
cmpb
mov
sbb
or
and
mov
test
in
add
or
adc
jg
xchg
fadds
inc
ds
test
or
adc
dec
std
push
jg
ds
in
bnd
add
push
mov
fisttpll
xchg
or
sbb
unpcklps
fwait
stc
aaa
and
out
subb
jle
mov
test
dec
jmp
sbb
xchg
arpl
mov
cmp
shr
inc
das
in
push
mov
test
mov
xchg
call
insl
pop
imul
jg
mov
stos
popa
scas
inc
shlb
dec
sbb
mulb
sbb
mov
int
sbb
repnz
sbb
mov
cmp
aas
push
xchg
and
adc
adc
int
mov
jecxz
cld
repnz
cltd
xchg
sub
sbb
or
or
rorl
sub
pop
jmp
and
jp
iret
pop
mov
inc
cmp
int
sub
or
loop
sbb
xor
jecxz
add
pushf
mov
divb
cmp
cwtl
jle
jae
out
hlt
sti
aaa
cld
push
loope
xchg
jo
and
fwait
inc
cmp
xchg
push
ret
xchg
int3
xor
mov
pop
push
dec
into
mov
mov
push
mov
or
xchg
jmp
hlt
lods
addr16
dec
jecxz
jns
xchg
and
stc
lahf
mov
in
jbe
lcall
push
mov
into
loope
adc
lods
rorb
push
push
and
lea
dec
inc
test
lock
ret
and
ds
sarb
push
iret
jnp
sahf
mov
xchg
sbb
outsb
pop
xchg
mov
insl
push
xchg
shrb
sbb
frstor
fcomps
jo
mov
popf
or
xchg
add
shll
mov
adc
mov
xchg
pop
imul
js
xchg
pop
cld
arpl
lcall
in
and
xchg
and
xor
or
dec
jns
or
cmpsb
mov
xchg
stos
test
daa
or
jmp
in
fxch
cmc
add
adc
daa
sarl
sub
in
in
xchg
aas
fsubr
idivb
movsl
clc
jne
clc
inc
stos
dec
xor
cmp
movd
sub
or
xor
bound
adc
jge
pusha
or
jmp
pop
add
dec
ja
cmpsb
sbb
pop
sbb
add
hlt
jmp
bound
outsl
imul
fnstsw
fisubl
fnsave
dec
pop
aam
lcall
mov
pop
mov
bnd
or
xchg
popa
movsb
mov
test
aaa
loopne
xchg
les
add
lahf
push
inc
dec
pop
imul
sub
add
adc
mov
in
sti
sub
push
movsl
stc
gs
xor
jle
int3
mov
xchg
push
add
cmp
cmp
dec
add
loope
mov
pop
cli
fistpl
jp
fsubrs
mov
addr16
popf
pop
mov
jmp
cmpsl
imul
leave
ret
in
gs
outsb
and
cmp
and
xorl
mov
fldenv
sbb
dec
jae
rcrl
mov
ds
pop
fs
or
or
ret
outsl
ret
mov
fs
xlat
pop
sub
shlb
mov
enter
push
xchg
ss
push
mov
outsl
inc
mov
mov
xchg
cmp
push
xchg
cli
jne
sub
xor
dec
fsubs
add
loope
xchg
add
inc
xchg
or
lahf
lret
loop
and
add
movsl
sbb
or
xchg
fsubrs
loopne
push
sub
out
hlt
idiv
cmp
dec
icebp
outsb
icebp
xor
push
aas
sbb
dec
fisttpll
shlb
movl
sti
and
rol
pop
cwtl
lahf
xor
push
push
jno
sarb
shll
jns
lcall
imul
jbe
test
mov
xchg
imul
shr
mov
push
js
xchg
mov
lret
mov
sbb
arpl
stc
xor
scas
cmc
aaa
push
mov
add
mov
adc
or
lcall
cmp
cmp
or
mov
test
ja
into
push
gs
mov
xor
rcr
sbb
or
sub
jne
mov
lea
ret
mov
pop
ret
vmovntpd
sbb
adc
aaa
push
ljmp
jnp
push
inc
and
cmpsl
negb
jmp
sub
push
js
dec
cmp
xor
nop
pop
push
nop
jge
xor
or
sub
cwtl
inc
mov
daa
bound
lcall
andb
push
std
sub
icebp
in
xchg
and
xchg
fucomip
push
xlat
pop
ss
cmpsb
mov
out
bound
int3
cmp
nop
cmp
clc
mov
call
mov
mov
dec
js
js
add
and
cmpsb
cmp
pop
sub
pop
aas
int
mov
lret
daa
push
pop
test
mov
test
std
mov
sti
repz
xor
subb
roll
mov
xchg
es
lret
mov
xor
lods
xchg
sar
shlb
push
or
push
cmp
add
cmp
into
out
lahf
jne
cwtl
mov
add
and
xor
sbb
inc
fisttpll
adc
pop
imul
test
xchg
scas
shlb
addr16
aas
push
cltd
mov
cmc
loope
sub
in
jno
repnz
dec
sahf
push
sub
outsl
loop
jo
adc
push
icebp
popa
ds
out
sahf
sahf
mov
mov
in
sbb
mov
xchg
cwtl
cli
xor
ret
sub
jle
jno
sbb
xchg
dec
pop
mov
clc
cmp
push
mov
stos
nop
das
ss
mov
inc
pop
push
daa
sub
imull
sub
aas
xchg
outsb
lock
mov
xchg
out
sub
movsl
adc
and
mov
aam
daa
xchg
pop
xlat
enter
pop
sahf
inc
test
rol
inc
dec
rcrl
loopne
jl
push
cmpsb
cmp
ret
xor
lock
adc
sahf
jae
repz
xchg
stos
addl
jecxz
push
addr16
cmpsb
xchg
cwtl
test
pop
dec
adc
pop
aam
mov
and
pushf
je
add
xchg
pop
outsl
sbb
hlt
sbb
call
notl
mov
clc
gs
pop
push
lahf
push
jns
bound
out
sub
push
push
aad
sar
stc
shlb
pop
rolb
cmp
sahf
jp
pop
cmp
and
push
inc
scas
mov
std
mov
fildll
cltd
aas
jp
cmp
ret
xor
call
fs
mov
mov
sbb
sysret
ds
xchg
lds
ret
push
fnclex
push
xchg
sbb
mov
data16
popa
rcll
pop
cmp
cld
or
dec
cmp
lods
filds
add
sbb
and
jne
pop
nop
es
loope
ja
sbb
pop
pop
ret
sub
push
push
ds
ret
sbb
mov
sbb
out
jae
or
or
jo
pop
ljmp
fsubrs
or
imulb
popa
sti
and
mov
and
mov
pop
push
pop
lcall
je
adc
fs
add
or
lds
aad
sub
stos
mov
push
cwtl
inc
cld
gs
adc
pop
mov
bound
fistpll
adc
mov
sti
or
xor
and
flds
and
in
push
mov
inc
jnp
sub
lods
pushf
mov
in
out
xor
and
jmp
cmp
mov
mov
mov
sahf
das
push
mov
sub
aaa
das
aam
fbstp
and
xchg
fiadds
jmp
pop
pop
mov
insb
jge
ret
dec
das
add
jecxz
lahf
sahf
pop
and
repz
mov
movsl
dec
adc
pop
inc
or
lods
mov
bnd
sahf
mov
enter
xor
das
movsb
push
adc
mov
out
fs
sub
mov
roll
dec
icebp
push
xlat
lret
and
fcomip
xchg
movb
scas
push
cmpsl
pop
sbb
lcall
add
and
jmp
repz
mov
or
push
adc
mov
jmp
xchg
cli
cmpl
mov
jecxz
mov
mov
add
insl
sbb
mov
dec
pop
orw
jbe
cli
in
shll
jl,pt
ja
icebp
ss
in
and
fwait
cmc
cmp
cmpsl
stos
mov
in
dec
bound
cmp
xor
fmuls
mov
and
mov
inc
scas
lcall
dec
das
cmp
jbe
inc
jge
inc
cmpsl
inc
dec
hlt
jp
sti
or
int3
xchg
mov
jl
inc
stos
cmp
push
or
fadd
jmp
enter
icebp
push
lret
dec
fisttps
mov
or
push
push
mov
dec
adcl
fwait
cwtl
scas
inc
imul
ds
pop
aam
sbb
arpl
dec
nopl
cwtl
cmp
push
insl
aam
sbb
add
mov
sub
jo
addl
subl
sahf
push
iret
movsb
and
cld
ficomps
push
sbb
test
ljmp
sbb
sarl
mov
cmpsl
jg
nop
in
sub
popf
sub
bound
jmp
fcoml
lcall
ds
pop
testb
mov
xchg
lds
jle
mov
add
popa
sbb
fsubrp
repz
jns
pop
shrl
daa
sbb
loop
dec
test
mov
cmp
jecxz
push
out
orb
sar
mov
jbe
dec
mov
sbb
imul
aam
movsb
and
imul
in
xor
fwait
dec
lods
enter
in
insb
jno
dec
jne
sub
pop
out
stc
fldz
dec
aaa
sbb
lahf
sbb
jmp
stos
add
pop
xor
lea
popf
cmpb
mov
sbb
mov
adc
xor
inc
hlt
fiaddl
sbb
icebp
mov
js
mulps
mov
mov
push
or
loop
arpl
in
mov
das
cmp
popl
je
imul
dec
inc
cmp
mov
inc
popf
or
sarb
addr16
push
push
mov
pusha
xor
pop
incl
cmp
xor
dec
into
or
je
imul
test
jno
lahf
aaa
or
es
mov
lahf
add
fwait
leave
sbb
add
jg
and
loopne
lret
scas
popf
xchg
jecxz
mov
loope
push
js
adc
or
fmull
fs
jnp
sbb
insl
ja
lods
xchg
and
sahf
imul
iret
into
mov
sub
loopne
test
shrl
cmc
mov
jle
push
cltd
daa
leave
jo
pop
sub
xchg
sbb
ror
xor
mov
subl
pop
pop
xchg
stos
stos
push
jbe
xchg
mov
je
and
mov
repz
xchg
dec
adc
fmull
test
lock
cmp
adc
into
cmpsb
pop
adcl
rclb
repz
mov
fcoms
mov
int3
es
subl
ds
add
dec
mov
arpl
iret
or
stos
mov
lock
fstpl
pop
arpl
xchg
inc
pop
scas
ficoml
in
inc
psrlw
arpl
rclb
mov
jb
cmpsl
dec
icebp
mov
mov
pop
push
mov
loop
repz
stc
jecxz
shll
fdivs
roll
fsubrs
inc
or
jns
rorb
mov
int3
sti
lea
mov
lods
pop
sbb
cwtl
xlat
rcrb
and
or
jns
out
xor
into
jb
push
sub
div
cmp
xchg
subl
fstpt
shrb
popf
jns
adc
pop
int3
daa
fidivrs
inc
jl
subb
lea
inc
in
lahf
add
pop
xor
loop
rolb
xor
jns
jne
scas
mov
jecxz
ret
xchg
add
out
dec
lret
mov
loope
sub
gs
jnp
addr16
idiv
and
cmp
cli
add
sti
jmp
push
orl
aaa
lret
int3
in
adc
es
sub
mov
inc
cmp
sbb
das
fidivrl
cmpsb
sahf
bound
cmpl
loop,pt
test
imul
out
xchg
xchg
cld
jmp
clc
push
arpl
adc
xlat
sbb
fisubrs
mov
das
add
lcall
push
ret
scas
out
scas
lods
stc
adc
inc
mov
pop
rdpmc
cmp
xor
insb
mov
dec
mov
xchg
adc
inc
or
pop
jecxz
fs
mov
mov
lods
sbb
fs
insb
mov
mov
cmpsl
lods
cmp
xchg
stos
je
insl
int3
jp
jne
icebp
out
ficoms
xor
xchg
dec
mov
scas
mov
inc
xor
jp
xor
jmp
xchg
pop
scas
ja
in
int
divl
bound
mov
add
push
cmc
pop
push
add
xor
jp
push
mov
xor
outsl
jge
imul
ljmp
mov
xchg
iret
mov
scas
cwtl
ror
mov
sub
scas
call
adc
inc
faddl
lods
mov
rolb
fwait
mov
dec
mov
fnstcw
jle
outsb
push
cs
adc
out
rep
pop
stos
jmp
hlt
int3
add
iret
in
mov
xchg
dec
dec
fwait
gs
sub
mov
jo
insb
insl
adc
inc
in
lds
mov
test
test
aad
xchg
les
cmpl
mov
clc
mov
or
cmp
sub
fsts
xor
repnz
les
loope,pt
test
cmp
outsl
mov
bound
scas
xchg
push
shrb
add
pop
xlat
jns
cmpsl
inc
mov
cwtl
adc
push
add
or
cmp
imul
lock
mov
dec
test
jo
adc
loope
outsb
mov
dec
out
and
fdiv
stc
fcoml
test
ljmp
xor
push
mov
dec
fisubs
fimuls
push
ds
and
movsl
pop
mov
stos
dec
adc
ret
mov
dec
cs
lret
icebp
loopne
and
mov
sub
pop
inc
idivl
push
jnp
pop
leave
gs
xchg
pop
scas
add
inc
orb
jecxz
into
add
mov
or
fiadds
sub
xchg
shrb
add
cmpsl
cmp
out
rolb
fdivrl
pop
and
orl
sbb
inc
sub
adc
stos
mov
std
mov
mov
imul
cmpsb
scas
inc
ret
in
sub
fidivl
jns
xor
add
push
sub
mov
notb
xchg
add
or
xlat
cmp
mov
dec
imul
mov
mov
xchg
rolb
or
cmp
mov
stc
fistpl
sub
scas
repnz
imulb
jp
jb
ljmp
shl
mov
or
pop
je
or
pop
test
adc
jns
mov
cmpsb
xchg
push
adc
nop
jb
inc
movsb
sub
push
out
lods
loop
push
mov
inc
aam
jle
popa
inc
push
mov
leave
mov
push
mov
shlb
mov
hlt
test
dec
andl
test
or
xchg
mov
dec
sbb
push
ret
fimull
xorl
dec
imul
or
imul
fistps
xchg
cs
adc
mov
push
xlat
test
cmp
xchg
and
cmp
push
rolb
fs
adc
dec
mov
push
mov
sbb
push
xchg
fnstsw
enter
adc
lcall
shrb
lret
movsl
sahf
or
jg
loop
jbe
mov
mov
jg
test
movsb
repnz
push
sbb
cmp
push
ljmp
cmpsb
dec
out
aam
mov
lret
jbe
push
jae
fwait
lret
stos
mov
movsb
cmc
jns
mov
push
test
push
mov
incb
adc
out
adc
lods
repz
cmp
test
and
nop
or
into
and
lods
pop
sbb
jmp
and
bound
xor
js
xor
mov
fcomps
arpl
movsb
mov
gs
pop
push
mov
jb
mov
pop
jmp
shll
lret
and
std
mov
ret
sbb
pushf
sub
or
jecxz
pop
and
test
in
jb
loop
and
insb
pop
pop
jno
inc
imul
test
mov
xchg
sub
ret
mov
and
aad
mov
jg
dec
notl
xchg
out
bound
out
lcall
icebp
push
vmwrite
jg
sbb
inc
cmp
inc
cltd
mov
mov
dec
sbb
push
push
outsb
sbb
sbb
out
pop
fisubrs
pushf
in
jae
xor
mov
push
repnz
loopew
movsb
push
mov
mov
lds
aam
mov
pop
push
xor
jbe
inc
fdivrs
in
pop
ds
int3
sbb
and
push
push
dec
cltd
jecxz
xchg
cmp
push
mov
inc
out
int3
mov
ret
jnp
movsl
cmpsl
dec
xor
lcall
imul
insl
lcall
outsb
ja
cmp
mov
xor
sbb
andl
jle
in
in
jmp
test
ja
adc
data16
push
aam
mov
jbe
insl
cs
in
add
jnp
sub
test
or
jbe
inc
hlt
push
inc
push
outsb
lahf
xor
sub
movsb
mov
xor
cmp
mov
in
pop
mov
xchg
insb
inc
mov
insl
inc
sbb
push
loop
loop
movsl
sbb
mov
mov
xlat
xlat
fs
push
lcall
outsl
add
repz
ja
push
outsb
sub
les
push
adc
mov
insb
in
add
pop
cmp
shl
lret
int3
xor
leave
test
mov
dec
or
aam
lret
mov
add
pop
mov
ss
dec
xchg
add
add
out
cmpl
in
iret
es
push
insl
addr16
xchg
xchg
adc
adc
dec
leave
shll
jno
mov
pop
popa
and
shll
mov
shl
and
sti
outsl
ja
scas
imul
lods
sub
or
ja
dec
xlat
nop
sbb
cwtl
dec
xorl
xchg
sbb
add
out
sub
ficompl
push
sbb
repz
int
cli
dec
jbe
sbb
or
mov
adc
cltd
sub
push
out
into
mov
jbe
clc
xchg
cltd
mov
lods
mov
jl
mov
sbb
je
lock
scas
in
outsl
loopne
mov
shll
xor
out
inc
fwait
enter
sub
je
aam
mov
add
mov
cltd
inc
daa
cmp
mov
insb
mov
mov
pusha
add
ret
mov
test
movsl
sbb
or
mov
sarb
js
adc
scas
out
js
lock
sbb
sub
mov
inc
push
jg
push
add
add
mov
test
push
das
jb
aas
mov
xchg
lret
cmp
dec
adc
cmp
jb
movsl
xchg
inc
jno
clc
mov
stos
nop
clc
sub
mov
mov
pop
jne
pop
inc
lods
pop
add
fs
dec
mov
fcoml
nop
ficompl
xor
lods
bnd
leave
or
adc
push
call
and
idivb
ss
dec
sbb
mov
lret
outsl
add
cmp
aas
int
stos
push
test
outsb
pop
ficompl
movsl
inc
neg
cmc
push
adc
fdiv
or
and
cli
xchg
cmp
push
add
jbe
aas
xchg
clc
test
add
repnz
jae
out
cmc
jno
in
lock
pop
cmp
lret
dec
fwait
sbb
add
insl
mov
add
pop
arpl
call
cmp
data16
out
sbb
inc
or
in
fisttpll
sub
xor
push
add
dec
in
sub
pop
jge
fimull
push
pop
insb
out
mov
or
dec
sub
and
xchg
adcb
xor
mov
lods
out
mov
dec
cmp
scas
shll
pusha
dec
jle
out
imul
cmpsl
add
and
fidivrs
mov
in
xchg
pop
cwtl
lea
out
pop
clc
adc
iret
cmpsl
lret
push
push
imul
jbe
xchg
xor
gs
inc
and
cmc
pop
cmpsb
pop
push
and
sbb
lret
xlat
or
xor
push
cltd
lods
and
sub
loop
sub
lret
mov
cwtl
imulb
jge
adc
xor
movsb
mov
pop
mov
pop
fists
xor
push
dec
jb
jo
ds
lret
aas
jbe
mov
or
shrb
sub
fsts
movsl
push
cmp
outsl
xchg
and
scas
and
fsubs
xchg
mov
std
adc
mov
jo
lods
sbb
cld
sub
test
jno
adc
popa
add
add
dec
jne
in
imul
fisubrl
testl
scas
popf
mov
mov
sub
sub
inc
pop
aad
aam
push
loopne
push
shl
jl
push
out
dec
dec
jmp
cld
pusha
aaa
mov
or
pushf
das
dec
xor
shr
cmpsl
mov
arpl
push
es
pop
sub
cmp
dec
cmp
inc
or
push
shll
in
je
fbstp
mov
iret
jle
or
dec
hlt
and
mov
arpl
xor
mov
fidivrl
in
jae
jmp
stos
mov
iret
dec
and
mov
inc
inc
enter
push
arpl
push
lfs
mov
icebp
std
cld
clc
out
add
inc
iret
test
pop
jnp
fcompl
lods
sar
mov
xor
outsb
mov
sbb
out
shll
sti
test
push
not
insl
fimull
addr16
xchg
fisttpll
pop
mov
xchg
ret
outsl
mul
sbb
sub
jae
mov
cmp
shll
jns
lods
rcl
inc
dec
cwtl
inc
cmp
or
popf
imul
mov
lods
xor
mov
lods
sub
jp
hlt
add
es
in
mov
aas
inc
inc
clc
mov
jne
subl
xchg
dec
xacquire
movsb
mov
adc
ljmp
add
fiaddl
sbb
negb
jae
mull
xchg
xchg
andb
pusha
push
sub
clc
inc
stc
stc
je
std
lods
sbb
and
jecxz
loopne
mov
ss
pushf
sub
push
dec
aas
inc
or
jo
lret
imul
jecxz
test
xor
daa
insl
inc
mov
mov
enter
jle
cmp
loopne
repz
bound
test
scas
xor
cmp
dec
xorl
push
aam
adc
add
lret
mov
cltd
xor
stc
testl
push
cltd
js
movsl
das
jbe
and
out
xor
jle
stos
mov
sbb
mov
add
mov
push
cmpl
cltd
push
cld
or
int3
mov
js
pop
gs
xchg
cli
add
cmpsl
inc
or
sbb
in
push
inc
mov
stos
cmp
adc
xchg
or
in
mov
loopne
loopne
xchg
out
lea
bound
mov
mov
mov
jo
sbb
ja
dec
xchg
push
inc
inc
out
jns
mov
iret
push
xchg
mov
mov
repz
mov
dec
mov
mov
jecxz
pop
cmpsb
fs
shl
mov
cmpsl
cmp
mov
shrl
mov
jne
push
push
ja
insb
dec
andb
cmp
add
cmp
popf
movsl
clc
nop
lea
lret
and
mov
cld
cld
enter
sbb
fisubrl
test
inc
xchg
sub
cmp
in
pop
cwtl
or
std
loopne
push
mov
lahf
inc
mov
les
add
or
push
xlat
jno
jbe
cs
inc
mov
jbe
hlt
add
mov
jb
mov
add
dec
andb
insl
stos
mov
mov
mov
cmpsl
or
orb
mov
mov
arpl
loope
cmp
pop
loop
jb
push
mov
push
jb
rcrb
rcrl
into
cmp
jae
dec
and
fadds
xadd
adc
mov
loopne
in
cs
shr
pop
inc
leave
jnp
pushf
xchg
stos
mov
out
dec
jno
iret
imul
push
xchg
mov
sahf
test
jmp
cmp
and
sbb
ret
insb
aad
add
loop,pn
out
cld
rorb
rclb
xchg
mov
shll
in
sbb
sbb
into
add
sbb
inc
cmc
arpl
mov
add
pop
sbb
rorl
mov
iret
dec
mov
outsb
inc
and
push
rcrl
sbb
mov
xchg
popf
pop
sbb
pop
inc
sub
scas
dec
cmpsb
sbb
pushf
xor
imul
mov
push
mov
dec
test
scas
cltd
scas
cli
xor
cmp
jo
in
aad
fcmovnu
por
pop
bound
scas
push
xchg
jl
cld
cmp
js
jmp
dec
sahf
test
add
sub
dec
std
push
lcall
mov
les
rcll
sbb
or
xchg
or
mov
mov
lods
xor
in
dec
pop
in
inc
push
adc
imul
mov
sbb
lods
push
rol
fs
fisttps
fs
xchg
shlb
or
call
xor
lods
int
push
xor
adc
in
pusha
aad
movsl
mov
rcrl
sub
filds
sbb
add
imul
fidivrs
inc
adc
xchg
cmp
mov
or
mov
or
mov
cmp
arpl
add
pusha
fstpl
int3
and
in
lret
ljmp
add
xchg
imul
push
repz
cmp
gs
mov
xchg
call
ljmp
jmp
stos
lahf
dec
mov
xchg
dec
jnp
mov
cltd
sub
inc
in
inc
call
mov
fbld
pop
mov
sarb
or
imul
ljmp
mov
sbb
cmp
sub
jne
int3
cwtl
sub
imul
int
pushf
sub
orl
xor
cmp
cld
test
outsb
rcll
add
popl
cmc
sar
mov
jns
in
mov
add
scas
leave
pop
dec
inc
es
dec
pop
ja
push
nop
push
test
imul
ffree
imulb
call
les
inc
inc
lods
into
notl
mov
inc
pop
add
and
and
shlb
dec
cmp
sbb
push
sbb
sbb
cltd
xchg
xor
mov
pop
fwait
xchg
mov
and
pop
mov
rolb
xchg
mov
imul
test
cmp
xor
xor
jae
cwtl
sub
lea
fwait
loopne
push
les
xchg
mov
xchg
adc
scas
shrb
ds
cwtl
lock
aas
stc
jo
xor
fnsave
jle
lahf
or
push
jle
mov
std
testb
bound
popf
mov
cld
mov
inc
jge
int
rolb
fsubs
and
sahf
mov
mov
inc
push
mov
imul
sub
xor
outsb
daa
std
xchg
sub
stos
loop
pop
jp
test
push
andb
mov
lret
and
shr
sub
xor
inc
mov
mov
lahf
jle
dec
dec
xor
push
cmp
test
dec
sbb
sub
push
xlat
jge
and
subb
xor
sbb
push
shrb
repnz
cmp
add
push
test
lahf
popf
add
push
loopne
cld
push
cmp
pop
or
test
and
adc
jge
inc
daa
push
pop
push
mov
ljmp
stos
lret
stos
mov
nop
jo
movsb
out
ja
nop
je
mov
push
cmp
aas
jmp
inc
add
dec
xor
dec
rcl
sbb
nop
or
clc
adc
jmp
int3
inc
outsl
pushf
adc
cmp
mov
je
mov
movsl
cmp
call
and
jp
jb
push
push
sti
jge
adc
lock
push
loope
out
fmul
pop
repz
xor
out
xor
push
arpl
repnz
jle
pop
xchg
pop
jecxz
cmp
mov
orb
xchg
add
sub
jmp
cs
sahf
icebp
adcl
mov
sub
in
dec
pop
add
jmp
mov
or
fstpl
sub
mov
ljmp
cld
loopne
repz
push
xor
mov
push
ljmp
adc
stos
and
mov
pop
pop
push
jbe
cmp
adc
xchg
fwait
iret
inc
jp
pop
xlat
pushf
negb
scas
inc
test
xchg
repz
sbb
and
out
add
imul
mov
scas
fcomps
sub
scas
rcrl
mov
xor
add
das
lcall
fists
sbb
mov
outsl
arpl
or
jbe
jg
xor
or
daa
push
scas
pop
add
cmp
mov
dec
jle
outsb
pop
sbb
scas
sbb
lret
sub
pusha
cmp
cwtl
jo
cmp
adc
xchg
adc
fwait
inc
adc
push
xchg
xor
mov
in
das
or
or
xchg
sahf
in
stc
cs
xchg
cmp
lods
loope
inc
js
pop
pusha
add
lcall
fiaddl
add
dec
das
push
arpl
iret
adc
mov
ret
lret
pop
mov
les
rcrb
loop
or
pop
push
imul
rep
fs
mov
sbb
dec
enter
fwait
mov
test
mov
dec
cmpsl
jo
outsb
aas
les
ret
push
jecxz
push
jns
inc
or
xor
in
adcb
mov
mov
xor
iret
lss
jb
jnp
sub
jns
fisubl
push
mov
xchg
lret
mov
shll
movsb
xchg
ja
cmp
sub
imul
inc
xlat
cmpb
in
xchg
js
lret
push
imulb
jg
xor
adc
pop
mov
pop
cmpl
sbb
cmp
jae
fwait
lcall
jmp
js
test
scas
add
push
mov
lock
stos
pusha
fwait
jae
mov
xlat
mov
push
push
jle
add
push
inc
cmp
and
mov
dec
lds
into
and
fbstp
hlt
and
mov
fs
movsl
es
mov
xchg
and
fcmove
add
test
flds
cmpsb
inc
push
fs
dec
test
fcomp
push
movsl
mov
mov
jg
or
mov
push
mov
scas
pslld
xchg
fistps
shl
imul
out
out
stc
jp
jnp
pop
mov
inc
fnstsw
insb
cmp
cmp
test
aam
add
cwtl
mov
sub
xchg
jge
scas
pusha
sbb
bound
fistpll
shll
adc
dec
mov
lret
je
outsb
push
orb
insl
in
adc
test
std
out
push
mov
in
jne
hlt
push
adc
cmp
imul
adc
adc
loope
pop
dec
jle
xchg
mov
cmp
xchg
test
repz
fsts
pop
bound
inc
dec
movsb
ficomps
sbb
jle
dec
and
xchg
sbb
or
aas
pushf
div
and
xor
cmp
out
ja
enter
sub
xchg
imul
fsubs
jg
dec
jge
mov
inc
fld
sbb
jle
outsb
popf
jo
stos
cmpsl
popf
sete
add
mov
jg
ret
pusha
push
mov
mov
decl
xchg
mov
cmp
push
sub
jae
jo
mov
add
mov
or
pusha
in
aad
sbb
cmp
pop
mov
jno
lcall
ja
xchg
pushf
sub
adcl
ror
icebp
fildl
xor
fwait
jbe
cmp
jmp
pop
fcomps
aaa
pop
dec
inc
mov
push
in
arpl
mov
data16
and
je
or
cmpsl
inc
fidivs
rcl
push
jmp
out
pop
cmp
int
push
fwait
cmp
mov
cmp
fwait
test
lcall
into
cmpsb
out
nop
inc
mov
cs
xor
mov
or
fdivl
dec
mov
push
repz
push
push
lret
or
xor
popf
jnp
lcall
fisttpll
adc
and
and
ja
aaa
sub
add
push
insb
sbb
sarb
pop
iret
arpl
xchg
clc
int
fdivrl
jmp
idiv
xor
cld
aaa
or
pop
mov
jl
iret
test
out
mov
cmpsl
sahf
rcll
fdivrl
push
das
or
stc
xchg
daa
pop
xchg
sbb
cmpsb
fnstsw
pop
xchg
dec
testl
jp
movsl
in
push
cmpsb
out
pop
push
and
aam
add
shl
int3
jno
jbe
sahf
jbe
mov
mov
loope
mov
mov
dec
addr16
xchg
push
icebp
aad
mov
push
call
int3
aad
jns
stos
pop
lcall
add
jb
push
lcall
xchg
push
out
sbb
loop
dec
insl
cmp
cli
and
dec
adc
inc
cmpsb
test
arpl
mov
gs
sub
lods
mov
daa
ret
and
js
outsl
xor
mov
or
sub
icebp
mov
mov
cmpsl
in
stos
or
and
test
dec
stos
fwait
push
xchg
loopne
xlat
xor
cli
int3
insb
or
fbstp
ret
cmpsb
dec
push
cmp
lods
test
push
or
loope
test
leave
inc
in
xchg
sbb
repnz
insb
pushf
cmpb
xor
ljmp
bound
aam
cmp
xchg
cmp
popf
jge
jb
loop
sub
ficoms
lods
jp
add
pop
dec
hlt
inc
jb
movsl
add
xchg
dec
pop
int3
lret
divl
inc
orb
push
pusha
xchg
out
stos
and
fisttpll
faddp
xchg
adc
xchg
rorl
xchg
xchg
push
pop
jbe
fwait
adc
push
pop
test
imul
test
push
xlat
out
jnp
and
inc
fs
push
xchg
sbb
imul
xor
pop
inc
fxtract
insb
xor
popa
and
pop
pop
push
cltd
int
dec
repz
in
xor
aas
pop
repz
fstp
adc
scas
dec
or
int3
ror
xchg
cmpb
sbb
or
je
ret
movl
movsb
ret
popa
test
mov
xchg
sbbb
aas
or
lods
push
sti
sub
pushf
push
lcall
std
out
repnz
xor
add
es
add
mov
dec
add
lods
fdiv
es
mov
xor
mov
inc
add
cwtl
add
dec
or
lret
pop
push
daa
cmpsl
xor
and
popa
mov
and
push
push
je
xchg
gs
push
xor
in
xchg
ret
pop
nop
repz
dec
sub
mov
xchg
call
test
daa
enter
add
fldl2t
mov
or
bound
lds
mov
loopew
js
cmc
mov
pushf
add
xchg
inc
push
mov
sub
leave
jge
dec
cld
scas
shll
dec
xor
add
divb
dec
adc
shrb
test
mov
mov
xchg
jecxz
jbe
call
push
add
shl
mov
or
add
fidivl
es
das
sub
popa
push
dec
adc
mov
popf
cltd
shlb
push
loop
pop
cmp
leave
aas
stc
subb
jl
pop
adc
loop
cmpsl
dec
xchg
mov
jle
test
jecxz
les
scas
mov
popf
mov
ds
imulb
adc
jnp
shll
insb
pushf
jo
add
add
pop
cmp
adc
cmpsb
cli
scas
test
mov
imul
jae
sub
or
jp
dec
sub
jbe
shr
pop
jl
outsb
in
mov
aad
or
mov
push
cwtl
xor
cmp
mov
add
aaa
sub
lds
ss
jle
cs
sbb
lret
dec
iret
sti
xor
imul
mov
mov
lret
sub
clc
mov
repz
cmp
cmp
insl
incl
push
xchg
ret
push
js
mov
or
ret
js
sti
mov
mov
loopne
lret
push
xchg
xchg
cli
fldl
loopne
adc
cmp
sbb
mov
bound
sub
inc
xchg
jmp
mov
inc
icebp
push
mov
out
sub
in
orb
inc
out
int
test
xchg
inc
cmp
je
pop
int
fidivl
jnp
add
sub
dec
pop
int
pop
adc
mov
lahf
sbb
inc
add
fldenv
lds
pop
and
inc
clc
or
jg
sti
rcrl
jmp
jge
aas
les
mov
repnz
push
cltd
xor
movnti
mov
sti
loop
bound
lock
pop
cli
movsl
lods
fwait
movlps
shl
jl
cmpsb
lods
stos
adc
jg
jle
aam
fwait
xchg
cmpsb
xchg
and
dec
jp
jl
movsl
sbb
or
outsb
sbb
xlat
pop
lret
add
pop
aam
jno
jge
in
lods
jmp
sub
xlat
mov
mov
and
mov
or
push
push
das
test
or
mov
push
pop
sbb
pop
pop
add
pop
rorl
mov
les
xor
test
das
pushf
stos
jae
pop
iret
je
and
push
pop
insb
adc
mov
or
pushf
sbb
stos
loope
gs
inc
dec
stos
cltd
loop
push
inc
cmpsb
adcb
es
or
xchg
dec
adc
lret
stc
or
mov
ret
loope
pusha
dec
adc
test
push
adc
lahf
push
jne
pop
bswap
inc
inc
inc
loope
jne
add
mov
or
jb
push
or
push
adc
daa
stc
int
fwait
mov
jns
rclb
xor
inc
xchg
out
test
pop
pusha
mov
push
aam
push
mov
add
arpl
cmp
add
mov
in
sar
loopne
dec
pop
mov
scas
in
fwait
mov
stos
pusha
lret
dec
out
in
xchg
add
add
or
xchg
dec
jo
aam
jnp
addr16
inc
cmc
push
bound
ret
lock
not
inc
and
daa
mov
mov
push
and
sbb
inc
and
push
arpl
mov
cli
mov
mul
jmp
out
xchg
mov
insb
shll
fninit
iret
mov
sub
xor
push
xchg
sbb
popf
mov
cld
dec
cmp
in
fisttpll
ds
popa
arpl
xchg
sbb
dec
push
jg
cwtl
xchg
out
dec
push
mov
xor
xor
lds
cmpsb
out
dec
inc
sub
pop
jg
or
rolb
scas
cmp
subb
sbb
mov
mov
sbb
into
mov
mov
xchg
popf
dec
mov
add
push
or
mov
dec
inc
push
xchg
nop
mov
popa
sarl
pop
jl
pop
adc
jmp
jecxz
scas
xor
mov
js
xchg
pop
fmulp
pusha
push
dec
out
push
pop
xlat
add
sbb
cmp
push
stos
test
mov
js
xchg
and
adc
popa
mov
into
and
popa
lds
pop
lret
and
lret
push
enter
jge
dec
jge
ja
fldl
les
enter
xlat
data16
xor
push
cmpsb
pushf
lea
data16
popf
add
pusha
ja
mov
ja
subl
fsubrs
sti
mov
fldenv
outsb
mov
repz
cmpl
clc
jg
pop
push
out
mov
dec
mov
mov
xchg
adc
scas
in
inc
lahf
sahf
loop
mov
fdivl
dec
adcb
adc
xor
add
subb
shrl
push
cli
out
xlat
arpl
mov
cmp
xor
push
jg
mov
rcrl
adc
lahf
imul
cmp
lcall
xchg
or
push
nop
pop
xchg
ljmp
cmc
fstpl
fwait
loop
and
scas
cmpb
cltd
dec
xchg
inc
int
repnz
xchg
cmc
push
cmc
int
out
mov
and
out
sahf
inc
insl
repz
inc
es
mov
mov
inc
inc
cmc
xor
dec
fdivrs
adc
push
addl
arpl
fistps
push
movsb
and
xor
pop
stos
mov
xlat
jg
push
pop
movsl
ret
mov
in
dec
xlat
or
sub
xchg
decl
clc
add
push
and
mov
lds
xor
mov
lahf
out
xchg
mov
xchg
pop
in
sbb
xor
lret
adcb
fbstp
adc
mov
js
cltd
xchg
insb
icebp
addr16
add
addr16
and
dec
fs
jecxz
or
push
jl
jge
inc
pop
jo
inc
push
push
sub
push
aad
ja
mov
test
adcl
dec
adc
pop
mov
aam
xor
lea
xor
cmpsb
add
out
stc
push
sub
ret
daa
or
arpl
daa
fdivl
test
dec
xor
popl
mov
or
sbb
adc
push
int
testl
and
test
push
rcll
js
jmp
pushf
and
loopne
lahf
cmpb
mov
mov
mov
mov
push
pop
adc
loopne
les
shll
out
adc
cli
sbb
inc
push
lea
jb
pop
add
and
mov
mov
stos
xor
sub
nop
sub
inc
subb
mov
add
fsub
mov
dec
lret
pop
jae
push
mov
int
ret
push
xchg
adc
push
add
mov
cmpsl
movsl
sbb
cmp
xchg
fistps
or
sub
repz
pop
out
pop
in
out
outsb
sbb
mov
or
rcrl
sbb
jmp
xchg
mov
cld
push
jp
inc
insl
es
imul
xchg
filds
sub
ljmp
mov
fucomi
mov
jae
jg
loop
inc
sti
es
or
mov
les
jecxz
imul
inc
or
add
scas
out
mov
cmp
sbb
stc
inc
adc
inc
lea
push
mov
stos
xor
fidivs
call
fldt
xor
jno
sbb
cwtl
das
pop
imul
cmp
icebp
and
stos
xchg
sub
inc
xchg
test
aaa
jae
out
ljmp
fcomp
push
mov
add
xchg
movsl
ja
or
ja
dec
in
sahf
mov
sbbb
bound
push
xor
int
and
addl
in
mov
ret
sbb
gs
mov
xchg
mov
mov
mov
nop
shrl
test
idivl
jne
dec
mov
mov
jae
dec
sahf
pop
pushf
stc
push
cmp
push
gs
or
movsb
testl
out
mov
sub
mov
clc
test
fwait
cld
out
sbb
push
aad
fwait
sub
repnz
pop
sahf
iret
jbe
cwtl
push
xlat
push
add
xor
dec
add
insl
loop
lret
xor
and
mov
fdivrl
cltd
fcompl
jb
push
pop
push
movsl
mov
inc
dec
in
sub
fdivrl
or
imul
mov
lods
bound
push
repz
jmp
mov
xchg
and
add
mov
push
xor
insb
out
movsb
jo
pop
dec
cli
sbb
out
mov
xor
fldt
gs
out
jecxz
mov
add
loopne
or
push
cmpl
mov
add
outsl
je
inc
mov
sti
mov
je
gs
cltd
xchg
pop
push
push
pop
pop
std
fcmovne
add
adc
sahf
mov
xorl
std
fwait
pop
dec
or
and
scas
push
mov
test
pop
adc
jns
jns
push
mov
mov
scas
inc
jle
mov
mov
outsl
jne
inc
pop
lret
jae
inc
push
int
imul
inc
jecxz
cmp
pop
andb
xor
sbb
dec
cmp
sub
jno
cmp
sub
xor
std
pop
or
in
shr
mov
inc
mov
jle
add
cmp
jl
in
std
mov
test
cltd
xchg
or
movsb
cmpsb
push
movsl
daa
fwait
mov
add
push
inc
test
jle
xlat
or
jnp
mov
clc
outsb
jns
inc
pop
outsb
int3
popa
mov
movsb
sbb
test
adc
push
test
mov
jmp
dec
shll
inc
sub
cmp
sahf
shlb
pop
into
cli
xchg
loope
cmp
subb
add
cmc
lods
fidivs
mov
dec
sub
push
mov
loopne
jno
lock
adc
mov
mov
mov
push
push
cltd
cmp
movsl
pop
cmp
insl
bound
mov
cs
cmp
or
sbb
mov
dec
int3
xchg
xlat
repz
mov
push
cmp
sub
cmp
inc
testb
rcll
cmp
cltd
adc
sbb
inc
imul
js
jno
and
je
addb
push
or
jle
push
loop
xchg
mov
lds
ret
ret
shrb
pop
pop
into
idivb
sahf
lahf
dec
xorl
mov
pop
stos
lret
out
out
adc
popa
adc
test
dec
dec
jge
xchg
xlat
dec
in
mov
adc
movl
sbb
adc
xchg
mov
rcrl
inc
sbbl
es
sete
aam
inc
test
lea
aam
dec
inc
xchg
in
scas
call
adc
xor
xorl
in
add
mov
in
fcmovb
loop
int3
loope,pn
mov
clc
cwtl
cwtl
in
pop
sub
bound
arpl
sqrtps
mov
add
popf
fiadds
sarl
mov
push
and
pop
ret
orl
xchg
sub
mov
enter
adc
dec
cmp
pusha
sbbl
xchg
push
cmp
xlat
lcall
or
aaa
shll
into
shll
jle
iret
or
adc
jae
and
jae
and
out
imul
repnz
dec
mov
stc
fldt
test
pop
adc
aas
jnp
insb
mov
jp
pop
xchg
adc
dec
push
stc
lret
or
gs
aaa
movb
movb
subl
inc
adc
jmp
fimuls
adc
dec
pop
jb
dec
outsl
inc
adc
push
inc
lahf
gs
mov
jno
inc
push
and
imul
in
hlt
and
test
cmc
insb
stos
cmp
cmpsb
divb
fsubp
fdivrs
pop
mov
sbb
mov
cs
or
xor
push
or
push
loop
pop
adc
ret
sub
jp
push
les
dec
mov
pusha
mov
add
das
sahf
push
cmp
jecxz
sub
js
jns
aaa
aam
cmp
repnz
push
and
push
pop
pop
inc
push
inc
icebp
sub
fldpi
leave
sub
push
loope
in
popa
sbb
add
sub
sahf
outsb
sub
jmp
mov
xor
jl
sbb
js
push
jmp
ljmp
mov
adc
popa
in
jge
cmp
mov
push
lret
ficoml
and
fsubl
mov
adc
cli
dec
push
pusha
arpl
mov
int
ret
jb
sbb
loope
sub
imul
and
das
push
inc
cld
lahf
aam
inc
add
outsb
cmp
aad
pop
clc
adc
dec
add
pop
pop
fcompl
fistpl
add
out
sbb
nop
jnp
out
daa
lock
mov
ss
or
or
lea
push
fists
cmp
and
in
js
push
scas
and
sbb
rorl
mov
jge
stc
shlb
pop
dec
jns
pop
dec
pop
pop
or
sub
aas
push
aad
pop
sub
xlat
adc
cmp
pop
mov
add
lea
jno
or
test
jo
xlat
clc
fbld
sbb
lret
lea
data16
jmp
movsl
lock
fscale
lret
mov
cltd
mov
ret
lcall
fidivs
negb
mov
push
lret
test
fwait
test
and
lcall
imul
xchg
mov
adc
mull
pop
mov
pushf
in
or
mov
xor
aad
jmp
test
je
cli
mov
inc
mov
mov
test
stc
stc
xchg
xchg
les
jle
jbe
rcl
in
mov
loop
push
inc
imul
mov
jns
cmc
xchg
jl
jne
dec
xor
jne
out
or
jge
add
repz
addb
jb
out
jb
inc
pop
pop
es
out
sub
ret
jp
negl
sub
sbb
cmpsb
rolb
dec
mov
dec
lods
and
lcall
nop
xchg
dec
aam
imul
inc
cs
cli
imul
rclb
cmp
jno
je
sbb
fwait
pop
ja
mov
add
mov
out
cmp
aaa
loopnew
fcomip
cmp
cmp
xor
jns
cmp
fisubrl
repnz
dec
data16
xor
test
ret
pushf
icebp
je
xor
sbbb
pop
lret
inc
push
inc
xor
xchg
movb
add
add
dec
loop
cld
push
add
or
insl
popf
inc
out
cmp
nop
mov
clc
adcl
mov
test
mov
stos
add
mov
aad
test
popa
inc
xor
in
jae
cmp
aaa
sub
xor
push
fldl
lods
in
jl
ja
adc
push
loope
mov
jle
cmp
jbe
in
mov
orl
push
inc
mov
cmp
out
loop
or
pushf
sti
dec
and
sub
fs
jnp
xor
cmc
push
sti
adc
adc
pushf
or
cmc
dec
les
paddsb
adc
mov
mov
ret
jl
mov
jb
cwtl
add
ss
dec
fldenv
testl
xor
xorb
fisttpl
or
out
cmc
enter
sub
add
lret
mov
mov
sbb
push
mov
sub
loope
xchg
daa
insl
add
scas
jmp
pop
push
adc
test
add
adc
xor
sbb
jmp
sub
adc
jne
cmp
push
insl
cmp
scas
push
addr16
ret
popl
jnp
aas
sti
dec
push
data16
jle
aad
sub
out
cmp
imul
mov
stc
mov
push
cmpb
into
adcb
lods
shlb
push
cmp
insb
jp
xchg
or
rol
mov
shr
mov
in
cmp
out
arpl
mov
add
cmp
adc
pop
int3
subb
push
insl
dec
loopne
jp
add
sub
push
out
pop
xor
dec
xchg
pop
adcl
test
addr16
add
sahf
mov
sbb
push
xchg
das
xchg
loope
adc
into
icebp
adc
mov
sbb
adc
out
jmp
push
out
mov
cmp
jg
outsb
repz
cli
dec
insl
stos
pushf
inc
insb
in
into
jb
push
push
push
int
pop
pop
push
jp
mov
adc
sahf
std
add
bound
fimull
and
mov
mov
ds
cmp
lods
in
ljmp
xchg
cmp
es
cmp
xor
imul
mov
pusha
adc
pushf
lahf
shrl
sbb
roll
lcall
dec
adc
ret
inc
mov
mov
je
lock
clc
test
shl
adc
icebp
nop
ret
adc
jp
add
in
jne
jp
pop
mov
dec
jmp
int3
adc
fbld
stc
pop
and
int
push
xchg
pop
mov
stos
xchg
sbb
sub
stc
ret
add
dec
shr
int3
fs
and
gs
mov
clc
jo
fadds
and
adc
pop
ret
repnz
or
adc
mov
rorl
in
and
popf
sbb
mov
imul
hlt
rcr
ss
out
out
dec
fstp
mov
mov
outsb
dec
cltd
adc
mov
cld
sbb
sbb
add
xchg
jbe
xor
iret
insb
push
fldt
std
clc
scas
into
sbb
jbe
pop
int3
std
mov
xchg
cmpl
xor
decb
enter
sub
in
movsl
or
incl
cmpl
and
data16
or
test
cli
dec
mov
xor
stc
xor
dec
pop
and
sarb
or
fidivl
js
pop
pop
subb
adc
lds
xlat
mov
cmp
mov
sbb
jne
cmc
jge
xor
pop
dec
scas
jg
out
pop
iret
dec
lret
scas
incl
insl
mov
lret
jp
pop
das
in
xor
pop
inc
sti
and
arpl
jno
sub
and
inc
sub
testb
aam
sub
insb
stos
add
imul
sarl
out
ds
stos
call
rcr
out
stos
mov
xor
enter
and
cmp
pop
add
xor
mov
mov
xorb
popf
addl
daa
jno
xor
scas
jb
sbb
inc
je
sub
mov
ljmp
xchg
repz
jne
lea
push
mov
sbb
dec
push
xor
add
push
cmp
and
mov
inc
insb
rorb
xor
or
push
cmp
mov
aam
testb
xor
test
push
mov
hlt
dec
cmp
subl
lock
jns
sub
pop
mov
xchg
mov
imul
push
mov
lret
fdivp
lds
pop
push
lcall
push
sbb
cmp
pop
sbb
jl
in
loope
xor
mov
inc
cmp
or
pop
outsb
frstor
arpl
mov
dec
insl
bound
aam
or
nopl
xor
or
sbb
and
das
ret
mov
dec
inc
push
inc
and
xor
mov
xor
mov
inc
push
or
sbb
je
sbb
shrb
out
dec
lahf
mov
gs
jg
dec
es
jae
cltd
sbb
xchg
jno
cltd
sahf
pop
inc
cli
dec
mov
mov
dec
or
out
divb
mov
and
push
xchg
push
cmp
xchg
xor
movsl
ficompl
in
out
cmpsl
jns
sub
mov
mov
dec
int
push
and
repnz
cmpsb
xchg
fidivrl
xchg
repnz
sti
sub
in
sub
cs
notl
pop
xchg
lds
popf
adc
mov
fldenv
and
mov
arpl
lea
jecxz
xchg
xchg
cwtl
inc
insb
mov
inc
es
mov
push
add
jp
sub
scas
sub
jmp
adc
adc
push
xchg
loope
xor
mov
add
adc
dec
jecxz
dec
xchg
ret
mov
mov
push
iret
push
clc
pop
stos
jns,pn
mov
jg
dec
and
jle
je
sub
jb
lcall
sub
divb
pop
stos
pop
push
dec
mov
dec
inc
mov
mov
nop
fidivrl
mov
mov
aas
mov
jmp
fwait
dec
stc
es
mov
imul
or
adc
cmp
test
adc
inc
jbe
push
mov
cld
mov
mov
or
out
test
xchg
sub
sahf
cmpsl
daa
and
int
cmp
in
sub
inc
repnz
fcoms
mov
int3
dec
adc
sub
fnstcw
mov
lret
mov
mov
xor
dec
and
inc
int
jns
jbe
fdivr
jns
xor
xchg
jae
xorb
sub
pop
mov
jmp
ret
inc
sbb
adc
add
shll
fdivl
movsb
movsl
js
cmpsl
scas
iret
xor
xor
in
outsb
aam
iret
clc
xchg
cmp
xchg
clc
mov
mov
mov
jb
jae
mov
pusha
xchg
je
add
jge
pop
push
and
dec
lahf
add
lock
ja
js
cmpsl
ss
and
inc
mov
dec
sbb
add
xchg
and
out
adc
jb
insl
lock
pushf
clc
cli
add
fwait
setne
pop
movsb
fsubs
cli
sti
cmp
inc
pop
lea
xchg
pusha
push
repz
cmc
mov
testw
fimull
sub
das
mov
cmp
mov
inc
push
push
and
mov
pop
mov
mov
dec
cs
push
dec
and
inc
je
mov
xor
xor
or
sub
pusha
jne
ss
das
loop
inc
ja
xor
insl
out
adc
push
hlt
iret
shlb
sti
jmp
lret
dec
jns
mov
mov
shl
pushf
fbld
bnd
insb
aaa
jg
pop
mov
dec
ss
jbe
rcr
xchg
lahf
rolb
mov
lea
mov
xchg
sub
popa
mov
inc
test
adc
roll
rorb
add
jg
pushf
div
add
inc
pop
xchg
testl
bound
jne
mov
test
data16
not
dec
ror
fstpt
negl
movsb
adc
push
sub
mov
das
xor
add
cli
pop
or
rcl
inc
data16
mov
mov
and
es
rol
xchg
mov
mov
jge
xlat
sbb
mov
sbb
aam
sub
insb
xchg
or
aad
repz
negb
icebp
rclb
jne
pop
xlat
bound
aam
scas
pop
adc
das
outsl
insb
loope
hlt
divl
divps
loop
out
arpl
sub
push
mov
mov
mov
int
xchg
in
ss
fcom
shl
jae
or
imul
adc
xchg
lock
in
ret
jge
mov
add
xchg
gs
xchg
pop
cmp
fisubs
xchg
dec
lahf
jmp
scas
ret
lea
jl
adc
xorb
inc
mov
mov
fmuls
mov
aam
push
dec
xchg
test
imul
push
out
sub
jl
dec
xchg
das
das
sub
test
xor
movsb
insb
jmp
loop
imul
xchg
pop
push
jbe
inc
fdivl
push
mov
mov
xchg
adc
std
fs
aaa
mov
icebp
das
push
inc
enter
push
orl
iret
notb
jmp
fcmovu
ja
adc
cmp
adc
pop
cmpsb
iret
sub
dec
in
xor
jecxz
iret
test
pop
sbb
scas
or
es
movsl
mov
test
shr
pop
mov
xlat
mov
mov
add
push
inc
fidivrl
in
sahf
mov
mulb
mov
test
fwait
lret
mov
cmpsb
test
mov
pop
push
xor
push
cwtl
movsl
ljmp
dec
mov
dec
insb
jne
imul
stos
push
int3
xchg
fistps
aad
in
jg
imul
imul
dec
push
adc
daa
push
add
pushf
out
jbe
mov
insl
mov
cs
cs
scas
lods
into
daa
lods
insb
jg
mov
xor
or
mov
add
jmp
mov
xchg
hlt
roll
negb
stc
cmp
aad
fmull
xor
outsl
aam
out
cwtl
mov
mov
cmpsl
jb
inc
icebp
jle
popf
mov
pop
dec
xor
jg
out
ss
dec
push
lock
out
lret
xchg
push
inc
icebp
add
mov
pop
rcrb
mov
pop
icebp
pop
popf
cmp
push
fadd
push
je
stos
mov
mov
jne
aaa
mov
std
adc
mov
addb
push
gs
fwait
jnp
call
out
cmp
pop
repnz
lock
push
xlat
andl
daa
or
xchg
sarb
repnz
stos
pop
lods
aaa
sbb
notl
lret
insb
sbb
test
lds
jnp
push
subl
scas
orb
repnz
fstpl
hlt
sbb
insb
mov
inc
lods
je
sbb
out
sti
and
push
insl
sub
adc
sbb
ds
fs
dec
pop
sub
push
pop
rcrb
mov
cmp
push
popa
jecxz
or
xchg
and
fsub
mov
int
sbb
and
mov
dec
shrb
dec
das
stos
or
xor
adc
lret
aas
fs
outsb
inc
sub
imul
ja
jp
xchg
loope
jnp
test
lea
lock
or
add
push
push
adcb
rclb
mov
jg
and
sbb
bound
mov
cld
add
sbb
mov
pop
push
pop
shrl
xchg
sbb
ds
repnz
mov
pop
orb
mov
add
ret
mov
inc
cmp
test
xchg
jecxz
sarb
ljmp
xlat
xor
sub
add
loopne
mov
aaa
mov
cwtl
add
fisubrl
mov
jb
nop
mov
jnp
jl
shrl
imull
sub
in
cwtl
dec
rcll
je
pop
in
enter
clc
adc
dec
es
cltd
ret
lahf
ja
xchg
movlps
mov
jecxz
pusha
xor
adc
dec
pop
mov
sbb
loop
mov
fcoms
add
push
push
gs
jb
xchg
xor
mov
into
lcall
or
mov
add
jo
jge
pushf
movsl
add
xchg
adc
cmp
push
rorl
loop
leave
or
lods
mov
cli
ret
fs
jmp
pop
mov
notb
pop
fcmovbe
outsb
insl
adc
cmpsl
cmpl
inc
dec
push
and
ljmp
mov
pushf
mov
insl
push
cmpsl
cmp
push
subb
lahf
in
cwtl
vminsd
xor
sbb
inc
insb
mov
inc
sti
shrb
fdivr
sbb
test
push
pushf
into
mov
mov
lods
or
loopne
xchg
inc
scas
xchg
xor
pop
dec
pop
dec
mov
dec
je
jnp
push
inc
bound
fstpt
mov
push
pop
cwtl
stos
cmpsl
in
cmp
ds
xchg
aaa
into
xchg
and
fstps
lcall
cltd
and
test
stos
mov
cld
pop
add
push
outsb
sbb
push
xor
and
adc
mov
adc
loope
cmp
mov
das
and
pop
sbb
inc
fs
lret
jl
add
mov
daa
jno
enter
arpl
insl
insl
js
mov
dec
aaa
push
inc
and
insb
lock
pusha
shlb
dec
push
clc
mov
and
mov
cli
push
rclb
shrl
jp
jno
sahf
mov
mov
repnz
stc
push
das
jecxz
arpl
clts
cltd
arpl
leave
cld
mov
cmc
loopne
or
outsl
sbb
and
xor
fnstsw
push
add
inc
in
sub
inc
fidivrs
out
addr16
cmpb
imul
pop
mov
out
inc
or
iret
ljmp
in
xchg
pop
es
cmp
adc
fildll
test
add
enter
push
jae
daa
xchg
dec
shrl
and
pop
mov
mov
sahf
or
pop
cmp
outsb
push
xchg
test
xor
add
jmp
xchg
int3
scas
jg
or
in
pop
xor
and
movsb
push
sbb
or
push
mov
mov
pop
sbb
in
sub
pushf
filds
sbb
lock
ss
add
sarl
dec
cmp
ret
adc
pop
aaa
cmp
stc
popa
aam
cmp
out
add
fadds
out
test
out
inc
sub
mov
sbb
xchg
add
jne
mov
and
inc
jle
icebp
sar
lahf
cmp
jp
imull
cmp
in
scas
addb
cmpsl
aaa
and
decl
repnz
inc
stos
fldt
sti
ret
adcl
fmuls
adc
xor
hlt
jle
inc
not
pop
mov
and
xchg
jns
cltd
lds
mov
nop
adc
jle
push
dec
push
movsl
mov
cmp
push
aad
lods
addr16
mov
addr16
mov
xchg
dec
sbb
and
fwait
roll
jp
lds
lea
arpl
pop
pop
adc
dec
pushf
push
loop
inc
adc
jp
mov
in
lcall
xor
lods
cmc
push
cmp
aam
movsl
and
js
mov
fisttps
mov
xlat
leave
jne
test
jl
xor
in
mov
into
push
mov
stos
ret
or
addr16
mov
mov
stc
insb
sarb
cmc
mov
pusha
push
cmp
mov
push
in
cld
cs
scas
xchg
movsl
inc
inc
popl
stc
push
sbb
jo
clc
pop
and
imulb
dec
hlt
iret
out
add
mov
pop
and
imul
pop
mov
mov
inc
xor
fiadds
scas
push
addb
ret
shll
jns
mov
cmp
inc
mov
add
jge
stos
cs
insl
add
decb
xchg
testb
add
mov
insb
loope
dec
mov
jp
lea
mov
xor
push
ds
cmp
sbb
into
mov
or
les
cs
es
mov
inc
dec
cmp
mov
jmp
xchg
mov
cs
mov
into
icebp
stos
xor
push
pop
hlt
pop
fcmovb
sti
mov
inc
pop
fs
cltd
pop
inc
or
lea
cmp
cmp
loopne
lea
shrl
add
shll
push
adc
ljmp
sbb
fldz
cld
sbb
mov
push
add
add
push
cmc
cmp
add
adcb
sbbl
frstor
jb
inc
fwait
jecxz
push
lcall
sub
popa
insl
rorl
mov
and
mov
nop
orl
in
xlat
repz
push
inc
add
or
xor
into
sub
adc
dec
inc
or
ja
mov
xor
popa
push
push
mov
adc
dec
mov
sbb
add
fwait
xorl
push
mov
fdivl
add
loopne
mov
outsb
or
mov
mov
hlt
dec
mov
mov
imul
jne
clc
orb
or
icebp
fcomi
ljmp
and
or
add
daa
out
dec
fcomp
cli
cmp
loop
fnsave
outsl
scas
das
test
pop
sbb
lret
dec
inc
mov
or
and
push
mov
and
xor
in
insl
repz
cld
das
daa
xor
fucomip
shl
push
mov
cwtl
dec
int3
lcall
test
ja
mov
cltd
rcll
xchg
inc
int3
xchg
pop
and
mov
scas
imulb
pop
in
mov
cli
dec
lds
mov
gs
ss
les
mov
loop
loope
std
out
dec
out
insb
adc
aaa
lcall
ja
fstps
cmpsl
sub
ja
popf
cmpl
daa
pop
add
icebp
sti
in
popf
scas
jb
lea
das
outsl
mov
dec
xor
inc
xor
mov
xchg
or
pop
xlat
aad
test
dec
push
fisttps
cltd
gs
adc
clc
or
dec
fldt
fwait
into
inc
mov
sti
test
sahf
loope
pop
addl
pusha
cwtl
and
in
hlt
xchg
sarl
jmp
add
adc
sub
add
dec
scas
nop
lcall
pusha
mov
or
test
mov
push
addr16
xchg
rcr
test
mov
ror
and
pop
inc
push
pop
sbb
mov
or
add
push
jl
test
roll
jle
scas
jno
push
out
stc
les
mov
and
popf
addb
mov
int3
ds
push
mov
data16
int3
cltd
or
jp
adc
inc
sbb
imul
jno
mov
mov
in
jmp
test
push
jle
fmuls
into
jo
popa
out
in
add
das
jnp
push
cmp
pusha
nop
sbb
insl
jbe
fstl
mov
push
scas
xor
fnstenv
arpl
xchg
and
push
inc
mov
ss
fs
loop
daa
mov
and
push
add
pop
cmp
imul
pop
inc
jmp
inc
push
arpl
adc
xchg
push
imull
jb
mov
and
jo
loope
mov
pop
bound
aas
shrl
inc
add
inc
rorl
movsl
repz
das
dec
fdivr
push
inc
test
xor
mov
inc
jmp
fiaddl
add
xor
mov
inc
pusha
cmp
cmpsl
fimull
daa
sbb
jnp
je
es
mov
sbb
lds
mov
stos
push
xlat
mov
sti
sub
push
jecxz
pop
in
insb
std
push
inc
loop
popa
cli
xor
push
push
das
jo
loope
jl
xor
cltd
mov
imul
int
dec
call
mov
mov
movsl
popa
mov
xlat
stos
addl
adc
aaa
dec
rcrl
inc
fcomp
test
cmpsl
mov
js
loopne
sbb
rcr
add
push
pop
push
sub
loopew
adc
xchg
dec
setge
add
cs
sub
subb
bound
sbb
and
inc
out
mov
add
loope
mov
pop
out
inc
push
mov
add
and
mov
iret
cltd
and
test
lods
out
repz
and
int
add
js
std
in
stc
lea
and
add
out
mov
or
pop
mov
xor
or
loop
push
mov
fisttpll
xor
sbb
lea
pop
jge
push
arpl
pop
jmp
dec
sbb
add
std
int
xor
jp
mov
popa
and
fwait
repnz
cmpsl
pop
xchg
inc
xchg
inc
mov
dec
sub
push
jno
jmp
adc
insb
lret
in
icebp
ficoml
xor
in
sarl
jo
mov
and
dec
or
das
jae
and
mov
push
pop
je
dec
inc
jnp
xchg
mov
leave
rcl
cmp
in
dec
adc
call
jmp
sbb
xchg
lea
dec
in
push
ret
stos
ljmp
push
arpl
iret
in
push
aam
dec
aas
cld
dec
cmp
mov
test
int3
jp
mov
pop
int3
adc
pop
push
push
push
pop
fsincos
add
dec
aam
pop
fdivl
sar
push
pusha
xchg
xor
lret
aaa
sub
xchg
mov
inc
jmp
pop
xchg
mov
lahf
in
cmp
mov
and
ret
push
arpl
aas
mov
fsts
fisubrs
cmpsl
xchg
and
pop
inc
xor
popf
mov
sbb
xor
add
sub
imul
mov
rorl
test
push
imul
inc
out
repnz
dec
and
xchg
jae
lods
sahf
je
leave
adc
aad
mov
mov
pop
aad
mov
dec
aas
jne
push
add
es
cmpsl
and
lods
inc
repz
popa
fsubl
mov
or
imul
cmp
aaa
fcomp
scas
cmp
and
push
push
mov
mov
in
mov
cld
jb
mov
or
xor
mov
repz
xchg
mov
mov
jo
loopne
loop
mov
and
mov
into
push
adc
inc
fcoms
and
dec
jmp
pop
sub
scas
sub
pop
cmp
mov
cmp
imul
sbb
aas
into
cmpsl
das
in
dec
xchg
xlat
rcrb
push
notb
movsl
jle
les
daa
ljmp
pop
aaa
fwait
adc
aad
repz
pop
in
push
addr16
inc
pop
push
idivl
add
or
je
jb
popa
leave
dec
adc
xor
pop
and
sti
xchg
mov
mov
cmp
push
cmpsl
sbb
lods
xchg
stos
fst
jle
xor
data16
out
push
loopne
hlt
hlt
push
rorl
lds
mov
inc
add
add
pop
cmpsb
jns
dec
mov
dec
fmul
cwtl
dec
or
and
cmpsl
xchg
fidivl
in
repnz
insl
pop
lret
dec
pop
mov
aad
fimuls
xor
xchg
mov
mov
xchg
fxam
sbb
mov
xor
jo
pop
sub
xorb
dec
sub
xchg
in
inc
ja
sbb
mov
rclb
ss
or
inc
adc
mov
add
in
int
xor
dec
add
fsub
mov
popa
cs
outsb
repz
pushf
mov
mov
mov
in
mov
mov
and
sar
xor
insl
mov
inc
push
add
mov
sbb
inc
pop
xor
jl
pop
jl
out
test
add
xchg
mov
outsb
xchg
jmp
aas
lods
cmp
ret
in
pushf
sbb
arpl
mov
and
jmp
cwtl
sbb
lret
lock
xor
clc
test
rorl
lods
and
xor
ss
data16
jbe
cmpl
notb
lahf
and
fiaddl
out
inc
mov
dec
mov
aam
pop
mov
fbstp
cmp
cs
inc
stos
stos
outsl
sti
ss
pop
and
ret
into
jne
xchg
outsl
mov
xchg
adc
cs
and
adc
jl
out
or
not
xchg
fwait
mov
and
fwait
mov
std
inc
out
inc
test
in
dec
outsb
cmp
jno
sbb
and
fnsave
in
stos
dec
int3
dec
inc
scas
mov
add
in
sbbb
in
and
cwtl
mov
loope
lret
jmp
hlt
out
pop
mov
sbb
out
or
js
loope
popa
movsb
cmp
stos
mov
imul
mov
push
das
dec
cmc
jo
adc
sbb
in
adc
xchg
xchg
sbb
xor
ljmp
aaa
or
xor
push
shlb
mov
int3
test
clc
ret
jg
sbb
nop
adc
mov
mov
pushf
mov
stos
sub
mov
dec
fwait
mov
int3
lret
inc
sub
ret
aaa
in
jmp
jle
repnz
mov
jae
jmp
rcr
fwait
dec
in
ljmp
call
call
inc
pop
mov
dec
je
lret
pop
mov
lock
inc
jbe
ret
scas
out
out
mov
and
in
stos
fadds
xorl
pop
adcl
jo
jbe,pt
jmp
pop
xor
negb
jbe
add
pop
xor
repnz
adc
dec
cmp
aas
jnp
sub
add
push
mov
cmpsl
pop
loop
and
into
aaa
aad
mov
mov
push
ja
ljmp
or
push
cli
shlb
ret
dec
sub
xlat
ja
adc
idiv
or
cld
lds
push
and
outsb
and
sub
lahf
outsl
and
out
nop
in
cmp
push
jge
lcall
incb
mov
aad
test
out
mov
call
dec
push
push
add
aam
cltd
ss
js
xor
or
sbb
xchg
sti
mov
jle
outsb
aad
dec
lea
outsl
nop
in
sbb
int3
repz
sub
mov
lret
mulb
lods
push
push
in
sar
xchg
rolb
inc
pop
or
data16
mov
add
je
sub
stc
add
sub
push
arpl
scas
xchg
dec
out
pop
pop
or
aas
adc
push
cltd
xorb
scas
std
mov
pop
fnsave
sbb
inc
ljmp
fbld
sarl
popf
or
jmp
mov
xorl
popf
push
mov
scas
aaa
jno
mov
test
xor
ss
xchg
mov
dec
aaa
cmp
testb
xor
or
inc
les
push
popf
and
fwait
xchg
int3
movsb
cwtl
jge
or
sbb
inc
idivb
and
add
and
jnp
in
adc
test
call
cwtl
adcb
jae
pop
mov
jbe
and
fcmovnu
iret
movsl
xor
fisubs
cli
jno
sahf
xchg
sbb
or
pushf
fidivrl
jl
clc
sbb
aam
imul
xchg
mov
and
pushf
adc
mov
or
loope
sbb
pop
es
data16
imul
mov
push
jne
add
aam
inc
pop
xlat
cmp
js
cmp
aad
iret
mov
xor
and
adc
inc
or
cmc
xor
cs
sbb
mov
dec
icebp
mov
in
pop
test
xchg
push
and
cmp
mov
mov
lock
mov
std
add
fstpl
mov
stos
shlb
push
loop
pop
lea
sbb
jnp
jmp
pusha
push
icebp
mov
sbb
jecxz
cvtps2pd
jp
mov
jmp
pop
dec
or
cmp
loopne
pop
pop
hlt
mov
adc
dec
lock
outsl
iret
ljmp
mov
or
jbe
push
or
xor
faddl
xchg
add
push
cmc
jmp
or
ss
jmp
dec
std
sub
jle
arpl
xor
cmpsb
inc
andl
push
aam
pop
jbe
adcb
das
repnz
xchg
cs
ds
jecxz
adc
cmp
mov
adc
aaa
adc
cmp
jno
popf
xchg
ds
push
dec
jmp
mov
mov
push
in
arpl
sub
push
std
jns
push
and
stos
mov
inc
adc
xor
aas
repz
lcall
pusha
clc
or
inc
sbb
add
mov
arpl
mov
dec
jnp
fdivl
imul
pop
out
rorl
add
mov
dec
add
aas
jp
lock
pushl
jg
adc
loope
xchg
or
jae
or
add
imul
mov
out
dec
fiaddl
sbb
dec
mov
adc
ret
and
mov
pop
xor
repz
mov
or
or
loop
xchg
int
mov
sti
xchg
pop
mov
jl
pop
lea
adc
mov
mov
popf
outsl
iret
rcrb
mov
insl
addr16
lcall
mov
inc
lock
rorb
jb
frstor
out
cmp
jge
fadds
cltd
cmc
lods
add
adc
scas
les
popa
push
in
push
out
pop
aad
or
push
int3
add
push
xchg
mov
adc
xchg
fdivl
and
and
clc
lret
inc
call
mov
popf
sub
sbb
cmp
inc
pop
icebp
xchg
roll
sbb
xchg
bound
bound
enter
int
add
mov
ljmp
adc
sti
lods
sar
movups
lea
or
add
cs
add
add
pushf
adc
cld
jb
loopne
aam
in
test
cli
sub
inc
adc
sub
mov
sub
fdivl
lock
dec
xor
jp
xchg
movsb
mov
adc
cmp
xor
xchg
push
fwait
xchg
push
outsb
lock
inc
and
push
lds
lahf
shr
push
mov
fnsave
pop
sub
push
in
scas
sub
mov
test
es
mov
sbb
mov
jbe
lods
cs
out
movsl
int
jle
sbb
push
adc
nop
aad
in
into
xor
mov
lock
mulb
ret
enter
movsl
cmpsl
dec
and
in
xchg
aad
adc
mov
add
mov
mov
in
mov
lods
stos
aas
test
clc
inc
iret
xchg
aaa
add
push
mov
movl
xor
jns
inc
out
push
outsb
mov
jne
idivb
ret
andl
or
mov
popa
in
popf
mov
mov
out
ret
jno
jns
lock
and
adc
mov
and
sbb
push
insb
xor
cmp
jge
je
adc
cmpsl
loop
sbb
sahf
xor
add
stos
add
clc
push
mov
jmp
mov
add
xchg
push
rorl
dec
dec
daa
leave
iret
sbbb
ret
push
repz
adc
sti
in
and
xor
jmp
or
xchg
sbb
jns
inc
leave
mov
in
lret
jae
mov
inc
cmp
out
pop
fildll
jnp
movsb
push
rorb
cld
dec
inc
mov
lea
gs
xor
inc
fdivs
jmp
dec
mov
test
dec
jg
aaa
mov
popa
lea
and
mov
sar
stos
jmp
sbb
ljmp
fcmovnu
add
nop
mov
mov
data16
adc
loope
mov
rorb
mov
out
rcrl
xchg
in
shrb
jne
imul
subl
aaa
not
test
mov
pop
sbb
jge
cltd
and
test
or
add
arpl
or
cmc
sbb
in
stos
cmp
cmpsb
sub
jne
aas
fisubl
cmc
jl
adc
lods
sbb
mov
and
aad
cltd
lahf
sub
and
enter
insb
push
or
cmp
scas
les
add
sub
mov
mov
push
jl
or
gs
sbb
ret
int3
popa
mov
xchg
xchg
insl
and
xchg
add
stc
xor
and
add
inc
push
lock
movb
inc
jl
insl
ror
dec
adc
lret
lcall
stc
jmp
or
xor
cmpsb
dec
lods
xchg
mov
loopne
inc
ds
xchg
xor
mov
movsb
subl
negb
push
push
add
push
and
cs
fidivs
in
sbb
or
sbb
and
pop
mov
dec
and
gs
std
and
js
sbb
popf
sbb
inc
xchg
inc
adc
dec
sarb
sbb
jp
pop
cltd
pop
arpl
add
push
pusha
in
ljmp
sub
imul
ret
cmp
sub
call
xlat
lock
inc
or
stc
inc
pushf
scas
mov
jb
mov
push
sbb
ffreep
adc
les
xchg
cmp
dec
daa
xchg
jp
dec
mov
insl
jmp
scas
mov
loope
push
mov
or
fdivr
and
cmp
push
data16
cmp
imul
icebp
inc
and
int3
jbe
pop
push
je
jne
shl
xor
loop
dec
cmpsl
add
arpl
stos
test
pushf
cld
cltd
jns
or
test
sbb
inc
sbb
pop
in
out
cltd
loop
dec
mov
dec
sub
mov
in
popa
js
arpl
jne
push
test
inc
sbb
mov
pop
scas
cmp
clc
push
sbb
or
cld
adc
shl
mov
ja
mov
mov
cltd
mov
and
hlt
mov
lahf
xchg
mov
push
cmp
adc
or
sub
xchg
or
sub
mov
lret
test
movsl
and
hlt
nop
sub
add
pop
arpl
pop
mov
and
mov
fcoms
inc
add
xchg
inc
or
js
inc
loop
or
push
pop
pop
sub
pop
lret
sbb
mov
imul
subb
std
adc
mov
sbb
ficomps
ffree
cmp
loope
mov
xchg
cmc
movl
lcall
jbe
jo
xchg
int
popa
loop
sbbl
sub
mov
add
pop
xchg
sbb
sbb
sub
sti
mov
push
jle
iret
mov
sub
les
or
std
scas
or
inc
sub
lea
jb
jbe
and
inc
mov
push
imul
call
popf
test
daa
lcall
dec
dec
inc
shl
cli
adcb
dec
push
call
inc
adc
inc
les
sub
outsl
mov
adc
insl
inc
test
jecxz
jg
cs
mov
pop
adc
shrl
mov
ret
sub
push
push
sbb
insb
mov
mov
fcmovnb
add
out
pop
insb
adcb
aas
push
mov
ret
or
xchg
mov
or
jle
mov
inc
sub
adc
pop
cmp
inc
movsb
jg
lods
fistpl
test
push
mov
outsl
out
sar
push
hlt
jno
adc
into
jl
sub
fwait
scas
addr16
frstor
dec
test
jnp
addl
testb
xor
icebp
pop
sahf
mov
mov
jns
jg
push
pop
aad
inc
dec
mov
push
sbb
pop
sbb
push
and
push
sbb
cmpsb
xchg
jle
out
gs
xor
mov
out
pusha
stos
outsb
or
loope
cmpsl
push
push
fidivl
insb
mov
cmp
rcll
xchg
mov
std
inc
mov
aaa
mov
ljmp
pop
lea
data16
jno
pop
pushl
fcmovbe
inc
icebp
insl
das
addl
mov
enter
xchg
pop
push
jno
dec
xchg
sarl
mov
les
mov
loop
sbb
lock
movsl
xchg
call
hlt
mov
adc
dec
out
stc
rorb
imul
rcrl
dec
loope
es
or
jne
xchg
sbb
pop
xchg
out
icebp
push
outsb
xchg
scas
inc
mov
cmp
cmpsb
sub
mov
lods
inc
pop
stos
frstor
lret
and
and
fldt
dec
sub
into
sub
int
pop
les
xor
push
sub
fnstsw
push
out
test
mov
inc
xchg
push
add
adc
adcb
fsubrs
dec
mov
cld
cmp
lds
fcmove
xchg
rorl
adc
jecxz
hlt
or
dec
xor
push
inc
jbe
dec
adc
rorb
mov
sbb
and
pusha
filds
dec
pop
fstpl
and
cmpsl
or
cmpsl
mov
sbb
mov
push
dec
bnd
repz
pop
mov
mov
mov
adc
mov
test
mov
loope
mov
adc
xchg
sbb
addb
inc
jns
cmp
jecxz
fninit
cmpsl
div
push
pop
rcrl
push
sbb
jg
adc
mov
jl
sub
lods
xchg
add
mov
icebp
jb
and
in
mov
pop
sub
pusha
pop
sti
add
pop
jne
mov
adc
jns
dec
iret
in
les
cmp
repnz
pop
ret
mov
lcall
rol
inc
ret
sahf
adc
or
fdivr
jbe
cmpsb
sbb
jns
scas
ret
cmp
stos
push
lret
xlat
insl
inc
or
push
xchg
test
mov
neg
and
push
nop
add
je
push
daa
setle
cmp
cltd
hlt
mov
lock
push
sbb
xor
pushf
cld
add
pusha
or
adc
sbb
mov
clc
mulb
jo
loop
andl
frndint
es
jg
jno
ljmp
sti
push
arpl
test
sub
aaa
push
enter
std
repz
mov
xchg
lahf
ret
cld
fwait
aaa
jmp
adc
mov
cmp
bound
int
and
cmp
dec
in
out
xor
xor
add
shll
mov
leave
adc
xor
ds
push
out
les
mov
mov
add
xchg
sub
fbstp
jl
ficompl
sub
fnsave
test
jmp
mov
filds
push
or
cmp
sbb
and
jmp
push
sub
call
nop
addr16
sub
int
push
repnz
cld
xor
inc
mov
sarl
push
inc
addl
cmpsb
clc
iret
mov
lret
inc
psadbw
shr
stos
push
mov
fs
addr16
push
es
and
repnz
jge
mov
sbb
push
sub
clc
and
cltd
jmp
and
fildll
push
cmp
and
mov
jne
mov
ss
mov
iret
cmpsb
icebp
mov
jbe
ljmp
pop
js
ja
and
mov
cmp
push
stos
cld
pop
test
outsl
xchg
mov
jb
lret
add
int
roll
stos
dec
fs
aaa
imul
dec
adc
ret
mov
cmp
inc
adc
dec
cmp
lock
and
push
in
fisttpll
inc
cmp
aas
lret
fldcw
outsb
push
push
cmpsl
sub
repz
insb
jg
mov
loop
sbb
jns
mov
add
add
cs
andl
xchg
sbb
push
lods
popf
sub
cwtl
div
mov
adc
filds
or
mov
sbb
inc
outsb
daa
fwait
cmp
mov
xchg
lods
in
adc
jns
int3
in
lods
xchg
mov
inc
sbb
xor
add
lock
xchg
dec
lcall
mov
xor
xchg
ret
test
shr
arpl
out
xchg
mov
cmc
mov
aad
lret
and
mull
orb
mov
lret
fidivrl
lret
imul
mov
cmp
cmp
jle
ret
push
mov
arpl
inc
imul
xchg
pop
inc
pop
cmp
push
call
data16
fcoml
movsb
cltd
or
pop
inc
int3
cld
xchg
mov
push
and
mov
adc
aaa
decl
call
movsl
jmp
push
mov
adc
shlb
sti
arpl
xchg
cmp
mov
sahf
sub
pop
jl
jae
xor
push
in
add
cmp
fcmovu
add
pop
sahf
inc
enter
loope
loopne
mov
out
stos
rol
push
test
aad
imul
sbb
xchg
jnp
hlt
rolb
movl
cmp
movsl
cmpsb
xchg
sbb
in
jp
ret
push
sub
mov
cmc
test
jmp
xchg
adc
lret
adc
int
repz
test
cmpsl
pop
lods
sarb
mov
lds
add
pop
jno
icebp
inc
add
inc
loop
inc
jmp
in
mov
popf
cli
cld
push
dec
je
call
movsb
lock
sbb
cmp
mov
aad
imull
push
xchg
add
repnz
cmp
cld
push
sbb
cmp
and
scas
and
repz
lock
out
push
fisttpll
int3
cmp
cmp
push
outsl
clc
push
loopne
sub
fadd
loope
mov
out
cld
movsb
rolb
call
testl
xor
push
jg
mov
inc
mov
call
inc
mov
sub
sti
fsubrs
jno
sub
sub
or
fcmovnb
mov
inc
inc
divb
mov
fdivs
imull
fbld
push
sbb
es
dec
push
outsb
dec
and
movzbl
or
inc
sub
into
mov
mov
gs
stos
pop
jmp
jmp
hlt
sarb
inc
in
lock
xchg
mov
push
mov
lahf
xor
push
out
add
or
lcall
or
outsl
inc
aam
xor
mov
ss
dec
flds
push
out
mov
sub
add
in
xchg
test
fucomp
iret
jl
aad
lock
xor
add
jae
call
dec
mov
cmpsb
sti
cmp
ljmp
daa
call
add
or
imulb
jg
dec
mov
push
outsl
pop
aas
adcb
pop
cmp
pop
inc
cmp
mov
inc
nop
cli
mov
lcall
and
and
paddw
lret
jmp
push
or
rorl
push
gs
push
pop
cmp
or
xchg
iret
add
cwtl
cmpsl
dec
addr16
push
mov
mov
xor
mov
shr
test
xlat
add
or
mov
jle
aas
imul
les
lods
jecxz
repnz
insl
cwtl
call
rep
mov
jbe
insl
out
jno
sbb
push
mov
cmpsl
sbb
cmp
jb
test
js
push
mov
mov
imul
mov
in
fs
adc
out
adc
das
dec
dec
fwait
insb
nop
lods
xor
mov
scas
in
sub
dec
call
xchg
xchg
add
mov
inc
lds
loopne
scas
adcl
pusha
push
cltd
sub
out
or
fldt
addr16
test
arpl
in
mov
jb
xor
ja
xchg
dec
jecxz
rorl
sub
popf
xchg
cmpsb
in
push
imul
mov
sub
lahf
push
mov
lret
and
xchg
push
jb
and
mov
pop
sbb
mov
in
jp
mov
xlat
in
int3
xor
sub
mov
in
aaa
mov
mov
pusha
mov
subl
jle
sub
sbb
lahf
jns
int3
pop
cmp
fidivs
ret
lods
lods
filds
sbb
loope
out
sti
xor
cwtl
inc
test
jb
stc
mov
sub
out
push
cmp
fimull
ds
loope
inc
mov
jo
mov
sbb
stos
push
mov
cld
lods
push
jmp
stos
addr16
mov
push
or
sub
test
hlt
div
add
push
mov
es
in
push
cmp
ds
in
pop
out
addl
int
add
mov
je
lahf
dec
cmp
fucom
inc
js
mov
popf
iret
sub
mov
jg
jo
sub
add
and
js
out
push
ret
xchg
inc
xchg
sarl
inc
sub
or
mov
cmp
daa
pop
out
scas
in
shr
daa
aas
ret
or
mov
loopne
addr16
decl
jle
adc
cld
bound
add
cmpsb
pop
or
mov
and
shlb
xor
enter
insl
cli
cld
push
pusha
mov
adc
jno
out
xchg
sbb
test
xor
loope
and
sbb
xchg
add
loop
inc
mov
aam
mov
nop
cmc
outsl
mov
push
insl
and
inc
incl
inc
fidivrl
jb
push
dec
sub
jmp
dec
popf
jl
jbe
insb
stc
arpl
xchg
in
lret
push
xor
mov
or
mov
mov
pop
jbe
push
adc
pop
aam
in
fldcw
int3
inc
inc
scas
xchg
mov
imul
ja
pop
and
jg
add
jae
sub
pop
xchg
jmp
dec
std
ficompl
xchg
jb
ret
lea
push
xchg
int3
pop
cmp
aaa
add
inc
loop
mov
cmp
ror
loopne
repz
sbb
mov
jb
out
popf
mov
pop
adc
mov
cwtl
fcmovnb
add
mov
int3
cmp
jne
jle
or
aad
bound
inc
fnstcw
push
jno
test
insb
xlat
or
sub
add
lock
mov
inc
aad
jbe
add
and
aad
xlat
pushf
pop
ret
insb
push
aaa
lock
out
pop
sbb
and
jae
imul
sub
pop
adc
clc
in
push
out
pop
lds
sbb
lret
imul
data16
es
fwait
mov
jbe
sub
outsb
mov
add
mov
lcall
lahf
mov
gs
movsb
ja
mov
xor
mov
and
arpl
insl
daa
pop
add
int3
cwtl
or
push
pop
mov
fwait
cltd
cwtl
mov
xchg
add
pop
lret
cwtl
leave
stos
sarb
jnp
test
cmpsl
adc
fmulp
out
jmp
fisttpll
mov
xchg
mov
cmpsb
push
sahf
sub
sbb
fcomps
jge
and
add
flds
cmp
mov
cmp
inc
mov
ss
addl
popf
and
sub
xor
mov
adc
dec
test
xchg
pop
scas
and
sbb
xchg
adc
fcoml
xchg
pop
xchg
in
sub
leave
xor
xchg
movhps
inc
hlt
jns
out
hlt
test
xor
repnz
mov
mov
xor
mov
sti
push
pop
inc
lret
xchg
pop
mov
sahf
mov
mov
pop
or
lahf
insb
int3
pop
jmp
aad
shlb
adc
es
or
fmull
lods
xchg
push
push
insb
sar
or
inc
pop
push
jo
xchg
mov
inc
xlat
xchg
jl
cmp
orb
sub
or
push
pop
scas
rclb
leave
cwtl
mov
dec
mov
inc
cmpsb
sub
jo
cli
dec
dec
clc
rcrb
lret
mov
inc
clc
lods
ret
aad
mov
mov
movsb
outsb
dec
dec
in
cmp
gs
jno
out
sub
stc
push
outsl
and
ret
les
cmp
xchg
push
cmp
std
mov
cli
subb
and
xchg
push
add
js,pt
mov
ud0
xor
push
js
push
fwait
mov
test
xchg
out
xchg
outsl
scas
xor
orb
jb
shll
sub
out
fstl
xchg
psubsb
stos
and
push
leave
jno
pop
add
popa
out
jl
out
clc
or
xor
jae
adc
or
enter
push
leave
mov
int3
mov
mov
hlt
pop
dec
xchg
dec
arpl
pop
xor
adc
or
sahf
int
pop
mov
cli
jle
inc
push
mov
mov
pop
and
movsb
or
mov
xchg
lds
push
mov
push
inc
sti
mov
sub
fisttpll
clc
add
lds
pop
out
sub
xlat
cmpsb
fstpt
sub
jge
add
xlat
fwait
lods
mov
stc
arpl
cs
movsb
mov
lcall
xor
adc
xchg
fs
test
pop
addr16
out
addr16
pop
and
jge
lret
pop
pusha
rclb
mov
pop
push
test
pop
lods
adc
test
jno
fwait
xor
in
shll
and
xlat
adc
lahf
enter
addr16
pop
xor
or
mov
fldenv
rolb
lcall
decl
pop
cmpb
jns
push
or
std
and
push
pushf
xor
adc
outsl
shr
push
loop
das
sub
push
call
jb
push
pop
pop
mov
mov
shlb
sub
addr16
out
sbb
mov
into
dec
fnsave
xor
bound
cmp
sbb
repz
loop
js
cltd
mov
cmp
ja
popf
ret
loope
fidivrl
in
aam
add
cltd
or
out
push
jnp
push
mov
adc
pop
jbe
out
inc
sbb
lahf
xchg
lock
mov
mov
jbe
adc
dec
cmc
clc
dec
ret
test
push
inc
ss
inc
imul
push
dec
push
sbb
jecxz
push
movsb
sub
push
je
cmp
or
sarb
test
xchg
and
push
mov
add
aam
das
xor
mov
inc
jb
cmp
xor
stc
mov
mov
mov
xor
stos
mov
lret
pop
jmp
mul
fwait
or
aas
inc
pop
mov
int
inc
out
out
xor
fwait
int3
sub
mov
and
lret
repz
push
fmuls
adc
xchg
sarl
shrb
aaa
fstl
lods
xor
cld
mov
jl
sub
arpl
push
outsb
jne
ficomps
and
cmp
jle
dec
sub
xchg
sub
mov
das
adc
iret
and
in
hlt
in
scas
adc
fwait
cmp
pop
cmpb
mov
pop
or
movsl
jbe
dec
stos
pop
mov
cmp
call
jecxz
mov
xor
sahf
xchg
test
pusha
outsl
nop
stos
fst
pop
xchg
dec
cmpsb
sub
push
add
popf
fs
inc
popf
lods
icebp
movsb
cmpb
lret
adc
xchg
test
push
adc
aam
jb
mov
add
stc
mov
cmp
mov
shlb
stos
mov
mov
aas
jno
cs
imul
xchg
sbb
pop
repz
shr
bound
out
arpl
repnz
push
arpl
xchg
jl
push
movsb
ljmp
sarl
js
lret
test
les
mov
outsb
add
pop
mov
repz
out
out
in
mov
dec
or
sbb
or
test
iret
dec
mov
mov
loop
out
and
shr
scas
xorb
sbb
or
negl
xchg
jl
inc
xchg
ljmp
jb
imul
out
sub
rorb
sbb
jae
mov
scas
push
xchg
incl
andb
repnz
jg
fisttpl
cmp
and
mov
or
mov
xlat
leave
add
cwtl
xchg
pop
nop
jge
imul
xor
jmp
rolb
mov
loope
out
ror
pop
and
cltd
mov
mov
stos
adcl
popa
cs
popf
push
jbe
movl
rorb
mov
push
pop
nop
jne
lea
push
lcall
mov
test
cld
movsb
mov
rcrb
imul
or
and
push
nop
cli
xchg
sarb
es
into
push
dec
push
fs
push
and
sbb
popf
or
je
adc
pop
xor
jo
icebp
xlat
mov
and
jge
xchg
sbbl
cmp
rorb
fdivl
cwtl
js
and
pop
jmp
das
cmp
or
add
pop
scas
xchg
sub
add
dec
repnz
jo
cmpl
scas
pusha
ret
jg
adc
popa
sub
xlat
jns
pushf
mov
mov
adc
insb
and
cltd
jnp
scas
lcall
mov
addr16
or
sbb
sbb
jne
mov
xchg
sahf
lret
movsb
jnp
pop
xor
push
inc
outsb
fwait
pop
xchg
pop
sub
mov
mov
das
add
or
movsl
pushf
adc
in
loop
ss
and
xchg
test
repnz
sbb
lcall
pop
dec
lea
in
popf
sarb
and
xchg
int
push
or
xor
std
mov
push
pop
icebp
cmp
dec
in
mov
push
scas
aaa
vpshuflw
cwtl
js
mov
out
lock
and
mov
xor
popf
out
aaa
cmp
mov
xchg
xchg
out
fldenv
repz
xchg
adc
mov
sub
rcll
add
dec
or
cmp
or
xor
jo
add
scas
xor
add
and
icebp
jns
or
arpl
pop
int3
aam
or
adc
cld
and
xchg
enter
psubsb
scas
pop
push
sbb
nop
out
test
sbb
mov
pushf
mov
lods
and
mov
mov
add
leave
inc
push
iret
adcl
mov
pop
rcrl
clc
dec
scas
rcll
test
xchg
xchg
xchg
dec
or
jae
mov
sub
addr16
pop
data16
dec
inc
cs
in
stos
aad
lods
fdivrs
test
ror
sbb
or
cmpsb
mov
mov
mov
rcl
mov
add
pop
mov
mov
mov
mov
cmp
ficomps
das
sub
sbb
pop
lods
fucomip
push
gs
push
and
into
mov
mov
stos
test
insl
sbb
dec
cmp
clc
and
mov
ss
mov
and
rorb
test
mov
push
fsubrp
mov
add
adc
add
cmp
sbb
sub
stos
lahf
adc
fs
out
dec
push
xchg
ljmp
sbb
pop
mov
test
xchg
fucomi
pop
xor
imul
sbb
loop
inc
mov
cli
or
hlt
xchg
cltd
mov
mov
xor
dec
add
insl
aaa
pop
jo
xchg
push
dec
stos
push
pop
sbb
mov
dec
imul
cmc
push
es
lret
jbe
dec
jbe
ja
push
mov
xchg
test
and
je
sub
cltd
dec
inc
fs
inc
out
nop
flds
mov
mov
inc
sahf
inc
xor
sub
mov
and
pop
lods
mov
pop
std
cmp
das
ficompl
test
jecxz
popa
mov
mov
fisubs
xor
test
sub
lds
sti
lds
push
inc
push
mov
dec
pop
mov
cmp
sub
sbb
jbe
push
add
adc
lods
cmp
mov
jnp
jl
daa
dec
jae
mov
inc
adc
leave
mov
sbb
inc
push
xchg
out
ret
std
repnz
mov
lret
hlt
inc
cs
push
sub
cmp
dec
jle
nop
sub
out
je
mov
out
cmp
daa
add
loope
xchg
loopne
js
jo
ret
mov
xchg
push
jns
jne
and
mov
cmp
dec
scas
mov
sahf
sub
loopne
rep
andb
ljmp
lahf
sub
outsl
test
shrl
test
or
inc
mov
jb
xor
xor
mov
sbb
jp
xchg
scas
sarb
mov
and
push
sub
sbb
jle
mov
mov
sbb
out
inc
mov
sbb
repnz
andl
push
or
das
xlat
sbb
adc
inc
or
lahf
and
pop
cmp
bound
scas
jnp
arpl
jb
mov
push
pop
dec
and
xchg
jp
push
pushf
pop
in
xor
fcoms
sbb
jmp
nop
sub
pop
testl
push
or
call
adc
les
jnp
pop
bound
icebp
add
pop
lret
mov
lret
inc
cmp
fwait
clc
jecxz
mov
adc
fnstenv
hlt
sbb
push
pop
sub
add
jmp
rorl
or
cli
mov
insl
int3
fsts
mov
aaa
push
fsubl
mov
or
sub
sbb
loop
or
jae
inc
dec
loope
jg
and
into
stc
push
add
mov
mov
xchg
push
inc
and
lods
mov
int3
pusha
rcl
add
ror
pop
adc
lods
cwtl
mov
xlat
scas
ret
sbb
push
in
mov
loopne
pop
push
or
fmul
mov
cmpl
adc
repnz
jl
shlb
loope
fucomip
orb
std
icebp
dec
sbb
movl
arpl
cmp
cwtl
aas
arpl
jae
lea
roll
xchg
pop
xchg
arpl
mov
jg
pop
inc
xchg
cmp
xlat
push
stos
jge
push
getsec
std
in
jmp
xchg
stos
mov
js
xchg
outsb
shrb
fidivrs
shrb
lds
pop
cmpsb
ljmp
adc
or
ja
mov
movl
ds
pop
stc
test
mov
ss
test
les
les
or
loope
in
jp
xor
std
cmpsl
xor
jle
mov
fisubl
sarb
cltd
inc
and
dec
fs
clc
cltd
in
jg
cltd
adc
and
fwait
xor
lods
push
cmpsl
icebp
push
sbb
cmp
dec
cmp
push
ror
xor
pop
fs
mov
fidivrl
push
cmp
outsl
out
sbb
jp
loopne
and
fmuls
insb
mov
sbb
and
fisubrl
cld
xor
adc
fldl
jmp
push
sub
and
sub
movsb
mov
xor
ficoms
in
mov
fstpt
ja
or
inc
pop
cmpsb
push
mov
ret
xchg
pop
jl
ja
pop
xchg
rolb
in
jmp
stos
adc
and
cmp
mov
inc
xor
xor
stos
cmp
jnp
fsts
push
mov
fnsave
xchg
xchg
pop
xchg
dec
fwait
in
add
xor
mov
pop
xchg
sarl
dec
es
daa
test
add
flds
fdivrs
scas
pop
inc
test
out
jecxz
sbb
test
add
inc
flds
idivl
cmp
add
js
into
adc
pop
or
pop
add
or
dec
push
movsl
icebp
bound
pop
mov
fiadds
das
rdmsr
mov
adc
sbb
loope
xchg
test
lea
out
imul
ss
rcr
mov
push
dec
gs
aaa
js
cmpsb
cmpsl
sbb
daa
jmp
mov
pop
test
icebp
and
dec
rol
mov
and
xor
sbb
data16
xchg
lock
lret
inc
jge
cmp
jmp
mov
mov
inc
ret
push
or
sbb
dec
ljmp
inc
xchg
fisttps
pop
jo
decl
es
sub
int3
xor
add
lahf
std
adc
cmp
push
pushf
push
mov
fsubl
fcom
mov
dec
add
mov
lret
push
aad
stos
sbb
cwtl
outsb
adc
test
push
lds
or
nop
sub
enter
jp
ss
divb
or
pop
adc
cltd
pop
fbld
aam
sbb
pop
pop
insl
popf
call
ljmp
test
outsl
fcomps
hlt
pusha
mov
add
pusha
jnp
stos
mov
mov
xchg
fcom
shlb
cmc
aaa
jns
mov
fwait
mulb
test
pop
sbb
mov
hlt
fcmovnb
insl
fs
sarb
ret
mov
xchg
lods
mov
xor
add
lea
addb
dec
xor
shlb
inc
dec
or
scas
lea
mov
pop
rcl
mov
test
addl
pop
xchg
loop
sub
and
pop
fnstcw
add
sbb
xchg
enter
aas
add
xchg
repz
mov
sub
and
mov
push
aam
repnz
jns
stc
lods
hlt
je
mov
enter
xchg
lea
push
in
mov
xchg
or
and
out
mov
fisubrs
cmp
lock
sub
pop
cmp
xchg
xchg
shrb
sub
xacquire
mov
sbb
push
std
loope
test
iret
repz
push
shlb
pusha
jne
sbb
mov
pop
rep
sbb
adcl
data16
mov
popf
xor
int3
cmp
dec
popf
out
add
js
test
fwait
mov
dec
and
sub
cmc
movsl
ret
adc
or
popf
flds
insb
popf
adc
cmc
mov
or
test
gs
xor
jge
cmpsl
cmpsb
ss
pop
cwtl
loop
sbb
pop
jo
movsb
cmp
faddl
movsb
jge
push
sbb
test
push
test
inc
outsb
push
lret
addr16
jecxz
mov
dec
xchg
sub
add
neg
sub
repnz
stc
jne
lods
jb
fcompl
adc
repz
sbb
aad
lods
add
inc
imul
test
mov
psrlq
sub
cmp
add
lret
adc
stos
adc
push
xchg
or
jl
mov
aaa
xchg
loope
aaa
xor
fbstp
jne
mov
mov
test
xor
mov
hlt
cli
in
sbb
cmpsl
icebp
inc
dec
movsb
dec
stos
sbb
cmp
inc
int3
jl
push
add
cli
adc
test
loop
pop
dec
add
pop
scas
push
mov
lret
in
mov
xor
shrb
mov
call
addr16
pop
sti
cmp
add
shlb
dec
mov
int3
jb
sub
dec
sbb
mov
sarb
xor
das
xchg
adc
test
mov
je
jmp
lcall
jmp
dec
mov
cmp
mov
pop
andl
push
push
push
add
into
xor
cltd
sahf
insl
jmp
leave
xorb
stc
scas
cli
push
aam
cmpsl
xchg
xor
lds
jno
xor
xor
sbb
lods
pop
test
jne
fcoml
adc
pusha
ss
stc
sbb
sbb
push
dec
cmp
jb
mov
call
and
pushf
mov
mov
cwtl
mov
je
dec
xor
ss
iret
repz
pop
jecxz
xchg
call
test
stos
mov
dec
push
cmpb
mov
inc
dec
scas
push
call
aam
pop
es
scas
ret
mov
scas
in
dec
fcoml
cmp
jmp
xchg
sti
cmp
insb
js
adc
or
jecxz
aam
mov
shll
fcomip
mov
lret
sti
hlt
shll
push
jge
or
cmpsl
fldenv
dec
fsts
adc
nop
adc
xor
mov
push
pop
or
leave
outsb
pop
popf
movsl
xchg
adc
je
popf
cmovl
scas
mov
xor
test
xor
je
cwtl
test
or
test
adc
and
mov
jmp
int
or
leave
lahf
xor
mov
flds
xchg
mov
xchg
mov
sub
stos
jmp
leave
icebp
pop
repz
movsb
hlt
cli
inc
inc
push
cwtl
sbb
pcmpeqd
rclb
cwtl
mov
daa
lea
cwtl
ret
and
lds
xchg
imul
addr16
dec
inc
adc
push
js
int
sbb
loopne
dec
sti
xchg
cmc
cmp
xchg
jl
sbbb
std
int
je
outsl
xchg
jo
leave
outsb
addr16
jmp
mov
leave
jmp
sub
inc
mov
call
sub
dec
mov
pop
fistl
push
jne
imul
aam
sbb
cmp
lds
xchg
adcb
sub
fdiv
fistl
ret
mov
in
add
cwtl
pushf
stos
push
ja
outsb
int3
jg
sbb
scas
rcrl
mov
fsubrs
out
pop
mov
add
fs
arpl
pop
fs
in
and
popf
mov
and
mov
sbb
pop
aas
movsb
cmpsb
mov
into
enter
jo
data16
xchg
cmp
les
lods
add
inc
adc
xor
cli
ret
movsb
sbb
cs
jp
xor
int3
lds
sub
lods
jecxz
mov
loop
xor
mov
rcr
roll
adc
sbb
push
data16
add
xchg
icebp
dec
add
pop
sbb
test
jecxz
movsl
bound
jae
int3
xchg
je
adc
push
psraw
push
mov
inc
cmpsl
add
fsubl
jmp
std
sub
or
jmp
stc
test
jle
or
jns
int
sub
std
jmp
lret
pop
jbe
adc
xchg
add
jge
cld
test
and
mov
lds
cld
and
test
mov
dec
xlat
inc
add
jl
mov
jo
inc
mul
pop
inc
inc
test
daa
in
mov
test
popa
sbb
std
xor
pop
sbb
push
test
test
aas
iret
push
jb
ss
xchg
push
mov
jp
pop
sub
pop
into
arpl
xor
cwtl
in
push
mov
add
imul
dec
ret
lret
popa
nop
pxor
dec
js
popf
push
or
aam
xor
fs
inc
fdivrl
sub
dec
xchg
sbb
popf
fwait
or
pop
sahf
push
adc
push
xchg
sbbb
dec
fwait
add
movsl
test
fld
inc
lret
add
jg
cwtl
add
sbb
add
add
das
pop
out
jnp
and
pop
inc
inc
and
out
sti
je
test
pushf
xor
fiadds
push
xchg
pop
je
nop
xchg
dec
hlt
and
xor
or
xor
insb
lea
push
cmpsl
add
lahf
push
aaa
movsb
mov
gs
or
shrb
arpl
pop
push
mov
gs
mov
je
adc
imul
fists
add
getsec
js
lds
shrb
adc
inc
cmp
mov
fs
mov
xchg
sub
xchg
adc
xchg
xchg
sbb
int3
into
out
gs
adc
and
fcmovnu
xchg
js
sbb
call
std
out
pop
sbb
scas
and
mov
aas
mov
inc
sub
movsb
insb
or
xchg
mov
jecxz
int
fnstenv
mov
jge
xor
pushf
cmp
repnz
sti
les
sti
dec
or
or
jb
ljmp
and
test
jae
and
push
outsb
push
imul
pushf
loope
inc
lods
insb
mov
iret
xchg
jecxz
cmp
mov
outsb
jecxz
xchg
negl
jnp
mov
leave
mov
roll
nop
mov
sbb
lret
or
push
xchg
and
movsbl
mov
dec
andl
pusha
cmpsb
mov
mov
cwtl
sbb
stc
add
lock
ret
daa
ja
cmpl
js
bound
out
decl
out
sti
jo
fistps
sub
loop
in
mov
test
outsb
cmc
xor
push
lock
pop
sub
cmp
hlt
sub
dec
lcall
mov
inc
je
je
cmp
mov
mov
xchg
mov
dec
mov
sub
sub
ss
jne
fistps
test
sbb
sub
in
addl
mov
dec
jo
mov
jl
lods
data16
adc
jno
addr16
jnp
and
mov
loope
mov
leave
xlat
mov
push
fwait
sahf
sbb
stos
fwait
pop
dec
hlt
dec
mov
rol
add
test
mov
ja
stos
lret
xor
imul
add
jle
std
adc
lock
test
dec
mov
stos
and
mov
fcompl
ljmp
xchg
sub
adc
or
dec
sbb
pop
or
mov
testl
jae
js
movsl
mov
data16
cltd
loopne
mov
mov
cmp
sbb
pop
lcall
call
cmp
push
iret
sub
icebp
and
dec
or
test
imul
cwtl
js
mov
imul
cmp
movsl
or
cmpsl
nop
mov
add
aaa
popa
mov
mov
lods
fstps
outsl
pushf
inc
mov
xchg
lods
push
or
in
pop
shrl
or
sti
mov
test
sub
adc
outsl
gs
outsl
adc
xchg
mov
pop
dec
decl
push
test
mov
inc
insl
xchg
add
mov
fwait
mov
outsl
cmpsl
ds
test
xchg
or
push
dec
push
push
sbb
xor
adc
jno
mov
xchg
or
jle
fwait
sub
jl
add
pushf
into
fwait
mov
or
out
cmc
int3
imul
jnp
xchg
popf
cs
push
mov
lds
out
ss
push
psadbw
fwait
sbb
gs
pop
xchg
cmpsl
xlat
xchg
divb
aad
push
add
out
cmp
daa
inc
push
push
and
inc
out
mov
and
jo
test
cli
arpl
mov
lret
cld
pop
mov
jmp
popf
push
cmpsb
imul
mov
push
adc
pop
push
out
pusha
dec
xchg
mov
imul
lcall
adc
cmp
push
dec
xor
insb
filds
pop
ss
jnp
mov
in
push
shlb
mov
sbb
enter
push
and
test
or
lods
push
cmp
repz
sti
jl
mov
mov
dec
mov
dec
fs
and
call
mov
add
sarl
rdpmc
adc
lahf
add
cmc
sub
ja
and
adc
setbe
mov
cmpsl
clc
in
fmul
or
mov
bound
cltd
and
fcmovnbe
cmp
add
and
jp
or
push
movsl
push
and
cld
mov
push
pop
push
mov
pop
sub
xlat
stos
xor
ljmp
add
outsb
dec
jae
ljmp
in
andb
xchg
mov
dec
arpl
repnz
xchg
and
mov
sahf
aas
cltd
sbb
sub
pop
mov
pusha
xor
jnp
pop
sbb
push
adc
cs
inc
ds
xor
sbb
jle
or
jle
nop
sub
mov
add
js
add
dec
push
adcb
mov
mov
jne
sbb
cmpsb
cmp
cs
pop
mov
lods
lock
cs
dec
js
adc
insb
fs
pop
lds
fimuls
xchg
or
inc
nop
cmp
fmuls
outsl
imul
lock
fstps
cmp
xchg
imul
lahf
xor
ret
push
js
mov
out
pop
cltd
dec
ret
into
inc
addr16
push
dec
lret
mov
sub
jecxz
jp
cmp
push
in
mov
outsb
arpl
jo
imul
adc
rcl
out
xchg
xchg
add
fld
dec
pushf
push
pop
mov
push
std
clc
lahf
dec
stos
rcrl
or
push
in
pop
inc
pop
fwait
cwtl
mov
adc
lock
jl
xchg
pop
sub
xor
in
add
lahf
rcrl
iret
push
cmp
adc
rcrl
test
data16
xor
stc
call
add
movsb
sub
fcom
xor
fwait
sub
lods
mov
cmpsb
hlt
iret
cmp
pop
call
add
cltd
or
cmp
pusha
sub
rcll
fbld
or
inc
push
jne
or
mov
lods
or
push
inc
inc
mov
jne
jecxz
pop
xor
push
mov
in
or
leave
sbb
mov
ss
in
jmp
adc
cmc
lret
cmp
gs
stos
inc
sub
xchg
mov
jp
fldt
cli
ja
dec
xchg
cmpsl
sub
inc
xchg
jge
cltd
out
cli
xor
xchg
pop
repnz
pop
hlt
fdiv
sbb
call
rcll
stos
outsb
test
mov
insb
inc
and
mov
adcl
push
push
mov
mov
movsb
mov
fstpt
cmp
and
mov
je
scas
mov
call
lods
outsb
push
std
movsl
xor
pop
aam
stos
cmp
inc
mov
sbb
scas
cld
xchg
insl
and
fdivrs
cmp
jnp
jb
sbb
fistpl
jbe
je
or
cmc
push
mov
popf
jp
jge
jnp
push
cli
xor
dec
mov
out
or
adc
lds
dec
push
mov
sub
stc
and
mov
imul
inc
xor
jmp
dec
shl
lds
pop
in
imull
out
inc
shll
dec
mov
pop
fs
bound
mov
out
rcrb
bound
test
pusha
xchg
mulb
movl
mov
jns
andl
jmp
subl
scas
jg
leave
jno
xlat
push
movsb
iret
mov
jl
flds
xchg
push
lret
out
nop
cwtl
mov
loopne
nop
in
push
jecxz
imul
and
jbe
fiadds
pusha
shrb
aam
dec
divl
lcall
jno
imul
cmpxchg
pop
jle
mov
dec
insb
xor
cmp
movsb
in
enter
inc
jo
inc
push
daa
fmuls
in
jae
push
mov
jp
pop
add
and
add
loopne
pop
rolb
or
lock
xchg
dec
cmp
pop
sub
inc
testl
nop
adc
jno
cmpsl
out
pop
push
pushf
jbe
jmp
mov
movb
imul
inc
pop
mov
iret
pop
lea
mov
dec
cmp
test
mov
out
add
imul
dec
repz
shr
xlat
mov
jne
sbb
and
or
dec
mov
mov
cli
loop
jns
xchg
rcl
out
into
pop
scas
nop
cwtl
imul
sub
or
pop
das
addr16
fcomp
mov
dec
daa
sub
loop
inc
scas
bound
cmpl
pop
lds
mov
cs
mov
mov
add
fcmovb
lock
mov
fsts
cltd
les
clc
lock
inc
lds
xor
fisttpl
aam
inc
mov
mov
pop
sub
ss
adc
sbb
roll
imul
add
pop
jp
jg
loope
adc
push
inc
pop
xor
lret
aad
jb
hlt
jno
mov
icebp
add
testb
and
xor
fwait
lock
cmp
pop
rclb
icebp
jb
mov
cmpsb
out
shlb
ret
sub
pop
lods
in
sub
push
xor
inc
mov
cs
popf
inc
test
lods
mov
arpl
ret
and
loopne
sub
icebp
jecxz
stos
adc
pop
xor
adc
lret
dec
out
out
and
outsl
sbb
outsb
push
test
sub
push
shlb
mov
inc
inc
cmc
add
addr16
insl
mov
add
or
iret
cltd
jne
mov
add
adc
addr16
pop
inc
negb
xor
fiadds
aam
dec
mov
push
inc
and
lock
mov
mov
fidivs
dec
fisttps
sub
stos
jo
sbb
test
lahf
cmpsb
push
sub
mov
movsl
jnp
nop
rclb
jo
sub
add
cmpl
mulb
mov
push
lock
ret
xor
mov
mov
jmp
and
xchg
jp
in
push
mov
sub
mov
cmp
push
push
inc
sub
adc
cmp
xor
rcrl
testl
out
mov
pop
and
xor
dec
sahf
fbstp
xchg
dec
push
cmpsb
mov
add
outsl
cli
out
pop
mov
cwtl
adc
ret
fwait
dec
and
sbb
jo
mov
rcll
lea
mov
insb
mov
stos
add
nop
cmp
cmp
mov
mov
repz
imull
pop
sub
mov
cmp
insb
jnp
adc
xchg
or
xor
loopne
aas
out
pushf
push
aam
lods
or
std
pop
fs
sti
cmp
add
bound
jno
or
ret
pop
or
clc
xor
push
jp
scas
clc
cmpsl
mov
sbb
xor
add
adc
jae
fsub
jecxz
cmc
inc
dec
lret
mov
xor
das
inc
inc
lds
repnz
dec
mov
sti
jbe
imul
jne
mov
push
pop
cmp
lret
mov
stos
push
adc
rcrb
mov
rol
lods
pop
dec
jge
outsb
andl
shrl
fwait
lods
lcall
jge,pt
add
inc
fnstenv
cli
xchg
cli
xorb
pop
inc
outsb
mov
sbb
adc
ret
mov
std
pop
js
pop
das
jno
jns
jmp
lret
xchg
push
push
mov
mov
sahf
adc
cmp
xchg
imul
out
pop
ss
push
nop
mov
testl
jecxz
xchg
sbb
dec
int
pop
push
sar
ljmp
or
cmp
repnz
adc
nop
jle
fdivrs
mov
xchg
jge
push
xor
xchg
lods
xchg
fcompl
pop
orl
sarl
adc
adc
and
xor
outsb
loopne
or
push
pop
pop
jle
sbb
mov
sub
inc
push
xlat
inc
movsb
sub
mov
js
inc
mov
adc
mov
or
cltd
xchg
popf
imul
jb
daa
aam
inc
jecxz
out
ret
das
movsl
test
xchg
stc
test
mov
cmpl
nop
mov
pop
pop
cmp
ret
into
sti
sbb
or
loop
cwtl
add
xor
lret
push
inc
les
fistl
aas
ss
sti
lods
test
jbe
jp
enter
jns
into
testb
cmpsl
in
sahf
int3
and
sar
mov
inc
icebp
icebp
je
cmp
jne
movsb
ja
andl
adcl
imul
xchg
gs
gs
cmp
xchg
imul
les
in
loop
mov
imul
addl
lcall
sbb
pop
fwait
xlat
adc
mov
push
add
jg
mov
into
xchg
push
bound
push
mov
cmc
inc
and
or
mov
mov
mov
outsl
adc
lods
outsl
jle
cmp
xorb
hlt
push
packuswb
aad
sbb
daa
aam
fs
ficomps
pop
ljmp
ljmp
mov
xor
add
fistpll
les
cmpsl
ficoml
mov
dec
sti
pop
pop
cmp
loop
mov
loope
xor
pop
icebp
pop
loope
mov
sub
jno
ss
adc
cmp
aad
imul
dec
lods
stos
adc
and
jb
jmp
xor
cli
imul
test
inc
jge
jns
aas
inc
mov
je
ret
mov
lahf
adc
lea
pop
shrl
in
jno
mov
cmpsl
les
cmp
stos
push
jmp
pushf
das
pop
jge
mov
push
or
push
das
lahf
xlat
rclb
jge
hlt
push
mov
ds
cmp
cmpsl
pushf
and
pop
clc
jmp
jecxz
sarb
xchg
idiv
fwait
call
shll
rcll
iret
aam
mov
mov
lcall
mov
shll
pop
rcll
cmp
lret
shr
arpl
sbb
leave
mov
push
or
jbe
outsl
lret
jo
mov
push
fldenv
pop
jne
out
loopne
addr16
loop
cltd
sub
jmp
sub
dec
pop
jae
push
xchg
clc
dec
mov
cmp
pop
pop
mov
icebp
arpl
sbb
insb
adc
or
xchg
jno
sbb
loop
jae
add
jns
xor
loopne
sbb
xchg
ljmp
aad
add
ret
daa
mov
sbb
cmpsl
stos
scas
push
cmc
in
adc
lock
shl
lret
cmp
mov
sarb
cmpsb
and
fwait
lods
in
mov
and
cmp
cld
adc
out
push
shr
shrb
push
data16
push
and
sub
pop
inc
testl
insl
inc
sbb
mov
mov
mov
arpl
jns
xchg
mov
js
mov
cwtl
and
pop
addr16
or
push
xchg
inc
jl
in
mov
pop
in
push
scas
cmp
jnp
or
push
push
nop
int3
aam
mov
xorl
jecxz
xchg
dec
fisttpll
fcmovnu
sarb
push
lock
addl
lahf
lea
scas
xor
fs
imul
mov
ret
add
lods
mov
xor
cmp
adc
adc
scas
jmp
test
xor
shrw
adc
std
repz
dec
sub
mov
push
mov
mov
mov
cmpsl
das
mov
push
in
mov
das
sub
mov
or
adc
std
leave
xchg
and
mov
sub
cmp
shrb
loope
push
mov
clc
pop
jno
cmpsl
xchg
cli
test
dec
xor
add
ret
inc
je
cwtl
push
and
mov
imul
inc
aam
icebp
adc
fucomp
cld
mov
inc
stc
push
xchg
dec
sub
pusha
push
pushf
sub
cs
sub
mov
xchg
add
dec
rolb
cld
std
jo
mov
and
adc
ljmp
xchg
mov
or
push
js
test
leave
add
andb
outsl
sarb
fstps
in
push
lret
adc
push
and
inc
fldl2t
and
xor
or
adc
pmaddwd
jle
stos
fistl
cmc
ljmp
daa
fcom
cmp
mov
sub
scas
sub
lods
mov
rolb
dec
pop
test
mov
enter
aaa
fldt
xlat
sbb
js
mov
scas
lock
inc
jne
scas
push
fs
aad
iret
push
jg
js
outsb
sahf
mov
lock
cmp
push
mov
push
mov
xor
sub
sub
shll
scas
push
adc
inc
push
mov
rcrb
push
dec
in
je
stos
sbb
test
dec
mov
in
insl
lahf
out
and
push
iret
shll
lods
scas
or
push
rorb
add
jb
mov
jbe
mov
sub
xor
out
arpl
and
mov
pop
leave
push
fldcw
mov
inc
pop
and
xchg
push
inc
fwait
addr16
shrd
and
jns
xchg
dec
pop
jmp
inc
jmp
mov
mov
and
hlt
or
xor
aam
je
insb
lods
and
bound
cmp
pop
in
ja
testl
mov
stos
fstpl
into
test
lods
jge
cmpb
bound
adc
inc
xchg
shll
push
sub
das
clc
les
repz
cwtl
push
sbb
nop
push
mov
repz
pop
out
dec
push
rolb
jle
mov
call
rcr
test
stos
inc
dec
xchg
or
jecxz
imul
pop
sub
les
or
test
dec
mov
cwtl
repnz
jbe
movsl
daa
mov
stos
inc
xor
daa
push
xchg
jns
test
xchg
lods
inc
out
pusha
cmpb
cmp
popl
jnp
aas
and
lds
mov
pop
addr16
stc
dec
push
jmp
lret
ss
out
pushw
push
xor
jne
pop
jp
cltd
add
pushf
and
lods
pop
adc
orl
decb
orb
addr16
cli
add
sbb
jle
fnstsw
outsl
xor
inc
cmp
push
ss
mov
hlt
inc
ror
rcr
dec
inc
ret
mov
mov
cmp
or
xchg
fldt
aam
lods
pop
mov
push
or
outsb
loope
sbb
xchg
ss
push
jae
cmp
testl
xor
bound
enter
out
call
clc
outsb
test
fdivl
aad
and
dec
sub
iret
in
cmp
fmul
mov
xor
push
or
adc
sbb
xor
add
jns
adc
pop
push
dec
mov
pop
sahf
lahf
lods
es
js
fsubrs
fstl
add
adc
or
lods
and
dec
ret
mov
jg
push
inc
data16
xlat
loope
sbb
repz
mov
pusha
fistl
pop
orb
pop
pop
mov
and
push
xchg
push
pop
loop
lcall
mov
sahf
adc
movsb
jo
cltd
mov
test
and
imul
push
cs
arpl
adc
inc
dec
cmp
pop
shrl
xor
pop
xchg
pop
cmpb
and
push
sahf
mov
inc
jl
xlat
sub
outsl
dec
icebp
outsl
cmc
dec
scas
out
les
sub
dec
mov
mov
mov
subb
inc
ss
push
movsl
pop
mov
or
sbb
adc
and
inc
inc
out
mov
lods
outsl
repnz
stos
push
adc
fistpll
icebp
mov
test
mulb
pop
mov
pop
lods
adc
cli
cmp
jo
and
xchg
lods
jae
push
adc
js
hlt
cmp
scas
pop
pop
je
insl
ret
movsl
jbe
and
xor
and
addr16
les
add
out
jns
jp
sar
movsb
lods
jl
in
in
rorl
inc
xor
jnp
out
aad
dec
fwait
testb
rcll
out
and
out
test
xchg
les
pop
xlat
xchg
das
inc
fistps
fiadds
push
icebp
int3
sbb
or
ja
or
sub
cmp
pop
fcmovnu
jl
dec
insb
or
test
ja
pop
lods
cli
iret
jp
pop
orl
xchg
mov
popf
test
xor
dec
inc
jmp
outsl
shrl
xchg
ja
dec
loope
jg
push
dec
leave
pop
add
inc
mov
jge
rcrb
inc
cmc
outsb
fbstp
test
repz
push
aad
xchg
dec
scas
ja
mulb
sbb
shll
mov
mov
ja
testl
icebp
sub
xchg
subl
pushl
mov
vshufpd
es
xchg
je
hlt
lds
je
or
sbb
scas
lcall
js
iret
fdivrs
cwtl
les
adc
test
jp
add
and
and
adc
dec
pop
scas
imul
push
jge
xchg
or
cwtl
push
mov
sbb
in
dec
push
les
test
mov
pop
outsb
out
jmp
fcmove
sbb
and
pop
leave
ss
stc
popf
adc
add
lock
shlb
imul
push
in
mov
lret
inc
fmull
fs
aad
bswap
jl
or
sub
adc
fcmovb
fisttps
lret
sbb
cs
enter
dec
into
in
jmp
add
jb
mov
jmp
std
ss
dec
bound
xor
cmpsl
pop
pop
mov
and
int
inc
jp
shll
cmovle
cs
add
xorb
shl
dec
dec
pushf
sbb
and
sub
dec
nop
popa
scas
imul
iret
sub
mov
std
cmc
std
jmp
mov
pop
xchg
jb
xchg
stos
outsl
ja
out
sar
test
insl
lods
mov
push
push
add
jecxz
ffreep
xchg
mov
xchg
cmp
lods
jns
loopne
pusha
mov
sti
xor
mov
imul
jle
out
rcr
aaa
cmp
je
pop
adc
call
sbb
jg
arpl
lret
jo
cs
jae,pt
mov
cmp
inc
in
jns
mov
add
mov
cli
stos
mov
insl
or
push
push
dec
inc
jae
fistpl
push
mov
jecxz
add
sbb
add
push
lret
pop
push
imul
mov
icebp
sahf
in
leave
pop
cmp
js
cmp
leave
add
xchg
rorb
out
iret
lock
pop
es
sbb
dec
scas
outsl
cmp
rcll
xor
pop
and
inc
dec
pop
pop
jb
cwtl
inc
cmpsb
mov
lds
inc
ja
and
jbe
stc
dec
push
mov
hlt
sub
pop
iret
push
cmp
push
push
push
cs
dec
arpl
pushf
mov
mov
cld
and
lea
push
or
jmp
outsb
or
cmp
mov
aaa
inc
mov
repz
lods
out
in
push
sbb
in
xor
leave
js
cld
jg
insb
or
jbe
inc
jnp,pn
pop
dec
cmpsb
shll
sbb
dec
stos
lret
test
push
pop
jbe
addr16
lods
fldt
pop
into
dec
std
and
shl
sbb
addr16
mov
incl
sub
adc
adc
mov
lea
in
out
pushl
sub
and
push
mulb
mov
rclb
nop
adc
and
push
rol
sbb
movsl
out
mov
imul
jo
insl
cmp
xchg
shlb
nop
sahf
mov
mov
sbb
fwait
cmp
jnp
outsl
add
testl
and
push
jbe
sbb
imul
mov
lds
adc
xchg
cmp
inc
push
pop
jbe
cs
dec
sbb
cmp
scas
pop
mov
icebp
cmp
sti
sbb
xor
push
mov
gs
inc
adc
pop
ja
out
inc
jmp
cld
inc
cli
and
sub
jb
cs
xchg
jmp
arpl
int3
cmp
mov
orl
lahf
into
xor
stc
aas
stos
loop
jb
or
fisubs
jne
shr
mov
fcompl
push
lret
push
adc
push
insl
out
sub
pop
cmpsl
lahf
lock
cmpsl
or
dec
xor
ret
shrb
cmp
mov
lock
das
lods
dec
jns
lds
je
decb
xchg
xchg
ror
sbb
mov
xchg
add
popf
cld
inc
add
push
sahf
adc
aad
xchg
ja
adc
add
lahf
pop
xor
loopne
adc
lods
enter
mov
pop
inc
call
movsb
repz
adc
sbb
popf
shll
mov
mov
iret
jmp
in
mov
es
mov
xchg
inc
mov
lods
sbb
sub
push
and
push
int3
inc
dec
daa
xor
lahf
stos
mov
shll
xor
decl
test
cmp
clc
lods
or
sub
rorl
xor
and
scas
outsl
lcall
icebp
mov
mov
or
jg
outsl
gs
or
incb
add
add
mov
mov
cli
int
jecxz
jge
das
pop
push
pop
call
daa
fisubrl
sbbb
dec
inc
iret
mov
dec
mov
lret
fucom
shlb
cmp
pop
add
mov
test
cmp
xchg
push
xchg
lahf
add
xor
sub
mov
xor
jae
pop
pop
mov
jae
inc
push
jae
ficoml
insb
or
cmpsl
lcall
cmp
mov
dec
adc
dec
mov
idivb
add
inc
add
inc
inc
add
inc
popa
repnz
andl
ja
cmc
aas
xor
and
in
push
cmp
mov
pop
cmp
push
jno
dec
xchg
push
pushf
mov
outsb
inc
into
inc
mov
xor
fsubl
cltd
and
xor
clc
or
rcrb
mov
insb
dec
loope
push
in
aaa
mov
pop
xchg
test
mov
test
repnz
jnp
into
xlat
test
adc
pop
movsb
pop
cmp
xor
pusha
xchg
pop
je
push
arpl
push
sbbl
jmp
dec
loope
std
out
imul
mov
dec
push
or
xor
or
cmpsb
in
push
adc
in
add
cli
rcll
dec
cwtl
rolb
and
bound
enter
mov
push
aas
xchg
mov
repnz
sbb
adc
inc
lcall
adc
arpl
mov
enter
mov
mov
stos
mov
clc
imul
loop
pop
insl
scas
inc
or
add
test
mov
test
dec
jmp
jle
mov
cmp
or
push
add
mov
rcll
add
sbb
pop
add
pop
fld1
clc
or
inc
int
shll
hlt
orl
lret
scas
xor
xchg
fsubl
dec
xchg
cmpsb
xorb
movsl
and
push
aaa
lock
in
push
test
rep
lcall
dec
inc
push
dec
ret
adc
cld
and
fdivl
fimull
push
sbb
inc
sub
lods
push
and
pushf
out
leave
outsb
inc
rep
into
loopne
outsl
sbb
fsubrl
and
mov
iret
or
aam
insl
pop
inc
lods
mov
lods
pop
jle
sbb
enter
mov
xchg
jns
push
and
adcl
push
and
mov
mov
xchg
mov
movsl
xor
xor
repnz
in
jno
out
mov
pop
mov
sub
cmp
mov
roll
int3
stos
push
adc
cld
incb
popf
stos
sub
jmp
xlat
shl
pop
cltd
pop
outsb
int
out
and
dec
pop
mov
sbb
pushf
mov
scas
inc
sub
push
jge
cs
jnp
or
mov
jae
fs
xchg
add
repz
mov
inc
jns
xor
fwait
gs
push
cmp
xchg
xchg
pop
fstpt
pop
mov
mov
adc
pop
mov
bound
xor
mov
inc
arpl
jmp
insl
inc
rcrl
sbb
cli
push
xchg
sbb
cmpsb
or
faddl
inc
push
aad
or
cwtl
adc
and
adc
jl
push
add
sbb
popf
inc
xor
mov
dec
push
cmp
fisubs
arpl
sahf
pop
xor
xlat
lods
shl
xor
int3
and
in
adc
xchg
push
call
xor
jge
into
fwait
mov
lahf
push
iret
out
dec
push
xor
push
dec
push
aad
leave
das
jae
fisttpl
pop
sbb
out
push
push
and
jbe
mulb
mov
mov
int3
xor
adc
jne
sbb
es
sub
add
xchg
aas
sbb
loope
negb
cli
enter
xchg
shll
push
fnstenv
jb
and
mov
test
mov
stos
inc
mov
stos
and
stc
pop
sbb
sbb
test
fsubrs
mov
ret
adc
pop
add
push
arpl
pop
jns
xor
imull
into
lahf
xchg
or
movsl
jae
adc
shll
out
lahf
pop
mov
lods
add
int
and
into
push
lret
mov
imul
and
popa
pop
push
mov
sahf
fildl
adc
das
sbb
lds
adc
popf
lahf
mov
mov
enter
rorb
testb
xchg
and
xor
fistps
mov
leave
push
xchg
int
mov
xor
sbb
jo
cwtl
mov
incl
jg
lcall
repz
jmp
inc
shrl
popa
in
or
sahf
stos
ret
cmp
pop
pop
or
push
adc
fstl
add
pop
jg
fwait
xlat
mov
data16
jp
test
pop
dec
sbb
stc
ret
subl
sub
aad
sbb
pop
loopne
in
xchg
gs
sub
je
cmpsl
pop
orb
pop
fwait
dec
enter
shrl
mov
loop
icebp
sbb
push
ljmp
popf
call
sub
xchg
cmc
das
xchg
lahf
mov
sahf
push
ret
jnp
push
xor
fdivrl
and
imul
jge,pt
push
fwait
les
sar
sub
jae
and
imul
andl
lds
sub
imul
pop
cmp
xchg
test
cmp
push
cmp
std
xor
loopne
adc
xor
xchg
lahf
and
push
push
add
bound
iret
add
sbb
mov
pushf
xor
xlat
mov
push
stos
stos
cmp
xchg
inc
imul
mov
or
mov
lret
sbb
out
gs
ret
sbb
and
sub
divl
pop
xor
sbb
ja
and
enter
and
jl
jbe
outsl
cmp
pop
popa
sub
outsb
outsb
pop
push
in
pop
mov
cltd
clc
gs
xlat
rorb
scas
lret
jp
stos
push
shrb
jb
xchg
pop
xlat
rolb
add
lret
ja
ret
pop
mov
mov
das
dec
sub
dec
add
xor
mov
inc
jne
xor
xor
insl
jnp
popl
sahf
pop
adc
mov
dec
or
xchg
lea
rcll
call
in
insl
int3
gs
lcall
pop
jmp
cmp
fnop
xlat
mov
pop
pop
rcrb
mov
lahf
popl
fcomip
xchg
lods
mov
adc
pop
xchg
jmp
outsl
outsl
aaa
sahf
lret
adc
sbb
cmpsb
enter
shl
mov
xor
and
push
xchg
aad
pop
fnstenv
jno
mov
mov
lahf
adc
or
fcomps
imul
push
dec
sbb
divb
jo
cmp
andb
adc
push
repz
nop
mov
outsl
daa
pop
rolb
add
in
mov
aas
mov
hlt
sub
fs
orb
test
insb
lcall
addl
xor
in
imul
or
dec
mov
xor
rolb
mov
call
push
test
cltd
and
sub
je
jmp
pop
popa
sub
add
mov
popf
hlt
pop
outsl
lahf
pop
es
ljmp
xor
lods
jp
jae
mov
lret
loop
subl
sti
xor
inc
inc
repnz
xor
out
fwait
addr16
fdivrl
pop
pushf
mov
add
mov
pop
movsb
mov
stos
addr16
and
inc
adc
leave
int3
jecxz
push
frstor
cld
lock
out
sbb
add
jle
inc
mov
and
mov
movsb
push
enter
inc
mov
stc
arpl
repz
xchg
fisttpll
or
add
ret
xor
and
xor
test
and
jno
lock
jo
jp
ficomps
jecxz
or
adc
sub
mov
and
fmull
jmp
dec
sbb
lods
in
enter
stc
mov
imul
sbb
cltd
pop
or
cmpsb
data16
sbb
inc
aas
sub
cmpsb
or
mov
pop
mov
aad
pop
aas
fstl
fidivl
lret
jmp
lock
setb
dec
icebp
loope
mov
dec
sarb
xchg
inc
imul
call
mov
sahf
repz
jg
push
pop
adc
mov
leave
or
mov
jnp
fadd
sub
jbe
test
mov
push
mov
push
iret
mov
jecxz
bswap
in
arpl
daa
sub
jne
loopne
fidivrl
xchg
les
cmp
fistpll
jo
sub
cmp
cmp
xor
sub
mov
lret
or
mov
mov
pop
lods
sub
pop
mov
clc
clc
rcr
enter
lods
bound
int
or
cwtl
dec
imul
loope
arpl
or
jbe
cli
bound
insb
movsb
pusha
push
dec
mov
add
cmp
push
push
shr
cmp
fs
ret
ret
in
jecxz
mov
je
loope
rcll
sbb
xor
cmpsb
pop
pop
jl
stos
fldenv
sbb
mov
scas
jl
les
pop
test
mov
test
ds
sub
sbb
insl
mov
aas
fwait
mov
and
lahf
iret
push
mov
push
mov
test
mov
ljmp
repnz
imul
pop
cmp
jnp
loop
pushf
mov
or
mov
iret
out
je
mov
and
mov
fsubrl
loop
ljmp
outsb
cmc
mov
sahf
mov
jecxz
outsb
loopne
adc
lds
xchg
clc
add
int
xchg
adc
or
out
push
lock
sub
cmp
shlb
sub
mov
lods
int
and
jne
stos
divb
cmp
xchg
aam
enter
icebp
sbb
cld
test
repz
push
rclb
cli
xor
dec
push
outsl
mov
lea
roll
push
ficoml
scas
push
iret
imul
shrb
jb
inc
and
outsb
mov
lds
xor
dec
bound
pop
cmpsl
or
fisubrl
lock
fsubrs
clc
inc
jl
xchg
xor
push
jnp
aaa
pop
adc
cld
push
pusha
xchg
sub
cmp
cmova
push
inc
fwait
sub
jecxz
or
enter
mov
sub
fists
xchg
repz
ficoml
fs
nop
into
inc
mov
add
inc
add
add
inc
aaa
fcoms
xor
sub
cmpl
shll
lds
dec
in
inc
cmp
outsl
push
mov
jmp
pop
cmc
out
fbld
loopne
or
bound
js
or
lret
add
pop
rol
push
into
push
add
adc
aaa
adc
insb
mov
xchg
inc
pushf
arpl
jle
cmp
push
lahf
dec
loop
stos
and
ja
cmp
mov
push
call
repz
xchg
cmp
leave
cltd
push
mov
or
inc
stos
adc
mov
cmpsl
daa
das
lock
bound
jnp
jl
je
out
lret
ret
mov
ret
dec
enter
pop
imul
mov
inc
out
daa
insb
jae
mov
bound
push
jmp
sub
push
lret
ljmp
imul
adc
fcom
rcrl
jp
adc
ljmp
add
adc
add
lock
int3
mov
and
das
pop
sahf
cmc
or
pop
mov
in
jp
jae
lods
hlt
push
add
inc
lahf
lock
cmp
rcr
iret
mov
sti
inc
xchg
and
sub
mov
in
jg
push
mov
fcoml
decl
inc
hlt
or
cltd
pop
push
push
jl
push
pusha
jne
dec
add
adc
ja
sbb
cltd
dec
movsb
aam
adc
adc
int3
pop
mov
clc
cmc
aaa
mov
aaa
je
add
pushf
popf
int3
int
push
jns
jecxz
add
jmp
repnz
sub
lods
loopne
out
mull
andl
call
sub
pop
icebp
cmp
dec
jo
push
test
jns
leave
xchg
shl
jo
xor
adc
pop
cwtl
pop
stos
dec
mov
mov
repz
dec
xor
adc
jp
mov
jb
add
inc
or
push
mov
mov
xor
sbb
ret
int3
push
ret
sub
dec
ret
sbb
in
pop
sbb
push
fistl
cli
fidivrl
and
jmp
and
xchg
jae
pusha
mov
or
mov
and
sub
mov
jne
int3
orl
aad
ds
dec
pop
pop
cs
adc
mov
icebp
pop
arpl
xor
sub
pop
push
repnz
rorb
xor
mov
add
stos
pop
pop
cmp
test
rcrb
cmp
movsl
cmpsl
icebp
push
adc
sub
popa
test
test
cld
xchg
add
data16
jo
dec
pop
cmp
jbe
test
out
push
inc
sbb
mov
and
push
fisttps
sbb
ljmp
hlt
mov
dec
lret
push
mov
jg
inc
fadd
push
int
xor
stos
in
lret
xor
test
add
add
aaa
push
sub
mov
dec
sbb
sub
adc
cli
cmc
cli
ficoml
lret
adc
cli
or
aas
sbb
push
imul
mov
js
leave
jae
dec
pop
pop
push
std
repz
mov
imul
jg
pop
fcoml
xor
outsb
add
ja
insl
test
jb
sti
jo
xor
cmp
movl
je
inc
or
ljmp
sub
icebp
movsb
xchg
xchg
xchg
notb
inc
into
call
sub
ret
ss
test
and
xor
jno
add
pusha
mov
and
stc
mov
mov
in
aam
xorb
jno
mov
push
loop
sub
sub
les
dec
pop
cmc
push
imul
lea
and
or
adc
adc
xchg
adc
pop
push
sub
std
cmp
inc
popa
sub
or
sti
push
inc
push
add
or
push
arpl
lret
jo
lahf
jecxz
test
mov
inc
jmp
push
in
hlt
pop
jmp
and
dec
mov
call
or
mov
idivb
sahf
or
frstor
enter
add
jnp
cmp
outsb
add
popf
scas
addr16
out
movsb
jle
loopne
movsl
and
jo
push
add
ds
pop
popa
lock
mov
into
mov
in
fnstcw
or
aaa
aam
add
mov
sub
imul
mov
cs
inc
arpl
in
cmp
push
cmp
cmc
jmp
sub
popa
adc
out
in
popf
mov
fst
out
sbbl
mov
cmpsl
js
xchg
int3
subb
fadds
ret
push
add
pop
addr16
shl
inc
lret
stc
jae
fmull
int3
inc
push
int3
cmp
push
notl
jns
fdivr
cmp
xor
int3
mov
mov
mov
pop
jg
xchg
xorl
mov
lods
cmpsl
push
btr
inc
daa
inc
or
mov
cmc
adc
fidivrl
pop
jne
jl
ret
iret
push
ficoml
stos
cld
jp
outsb
pop
mov
popa
xor
mov
test
sbb
out
leave
xchg
adc
test
sbb
shll
jnp,pn
mov
mov
insl
inc
fs
les
sub
popa
push
arpl
stos
sbb
pusha
adc
je
sub
mov
inc
mov
sub
inc
mov
add
aas
test
add
mov
push
mov
jne
outsl
add
sub
les
push
jg
call
add
mov
testl
sub
xor
jge
ror
ret
adc
dec
dec
adc
mov
mov
pop
add
inc
lret
adc
push
pusha
push
les
stc
lods
int3
repz
loope
cli
xor
xchg
add
mov
arpl
cltd
loop
add
subb
jmp
int
mov
sahf
xchg
cmpsb
jp
into
gs
ljmp
xor
xor
mov
add
bound
jle
lods
into
sub
mov
stos
and
popf
xchg
es
mov
shrl
mov
pop
pushf
test
push
popf
sahf
inc
repnz
popf
jp
and
add
mov
fcoml
pop
lahf
ljmp
pop
cmp
je
gs
loope
cmpsl
aaa
pop
nop
push
insb
je
in
cli
std
sub
addr16
mov
dec
aas
xor
pusha
ficompl
lds
andl
xor
lret
cmp
das
cs
or
sub
pop
push
inc
push
clc
insb
iret
dec
test
cmp
lock
std
sbb
dec
in
stc
push
pop
xchg
add
jae
push
fmuls
repz
xchg
ficompl
or
cmp
cmpsb
xor
roll
lods
push
movsb
roll
inc
mov
cmp
js
jecxz
adc
and
lret
enter
cmp
mov
jle
stos
add
mov
jb
push
mov
lods
dec
jno
adc
mov
lcall
sub
mov
dec
sbb
inc
mov
adc
add
into
mov
stos
mov
mov
repnz
movb
mov
hlt
js
mov
lret
mov
fstpl
repnz
sbb
bnd
mov
mov
jbe
in
mov
movsb
bound
lret
lea
scas
cmp
cltd
les
ret
ret
push
insb
bound
mov
jns
divl
stos
pop
jns
into
xorl
mov
and
push
addr16
repnz
ret
pop
jg
nop
lcall
in
and
mov
loopne
xor
dec
add
pop
xchg
jbe
sbb
sbb
adc
and
xor
iret
ret
in
das
stos
lcall
xchg
jae
push
adc
xchg
in
jmp
ret
or
test
test
out
ja
mov
ss
jae
ficoml
mov
push
into
pop
insl
ret
mov
outsl
push
adc
dec
and
and
or
pop
fbstp
jns
push
leave
xchg
mov
jae
inc
leave
clc
insl
sub
jg
adc
fisubs
cmpsl
movsb
fldcw
cmp
stos
popf
lcall
cwtl
lret
lock
and
cltd
and
in
jge
jmp
pop
data16
out
enter
xchg
popf
lret
sbb
or
adc
or
call
sub
sbb
cmpsb
outsl
shll
js
lods
xor
push
mov
idivb
iret
cli
cmp
das
mov
mov
dec
stos
mov
cld
int3
lods
test
movsb
sub
das
lods
enter
add
fs
aas
hlt
xor
fs
and
jge
dec
imul
inc
adc
sub
or
or
xor
add
mov
fwait
push
or
or
dec
mov
jl
jae
sub
sbb
inc
sbb
fdivrp
popa
fisubl
cs
cmp
pop
xchg
test
jecxz
and
mov
addl
xor
shl
lret
pop
loopne
pop
push
repnz
in
insb
or
sub
dec
das
in
push
push
mov
mov
cmp
jns
std
jno
jg
dec
lahf
stos
mov
xor
mov
add
cli
dec
ss
leave
or
sbb
imul
cmp
adc
test
out
mov
jmp
mov
mov
sub
xchg
cwtl
inc
mov
popf
rolb
or
xchg
in
lock
andnps
bnd
daa
mov
add
rolb
pop
ss
dec
dec
sbbl
jnp
mov
enter
imul
fwait
jbe
inc
std
pop
cmpsl
pushf
test
jmp
pop
lods
dec
mov
aas
jnp
and
pushf
xorb
mov
inc
jge
testb
jl
aaa
popa
inc
xchg
sub
hlt
inc
pop
mov
stc
fistl
out
fsubs
rcr
arpl
add
xlat
addr16
mov
sbb
inc
call
push
cli
decl
pop
mov
mov
pop
mov
insb
pop
xchg
adc
push
mov
mov
dec
xorl
fisttps
repz
and
bound
jecxz
in
cli
pop
mov
imul
lret
xor
pop
in
pop
sub
adc
shrb
cwtl
sbb
pop
push
mov
xor
pop
cmp
mov
lods
es
cmc
rcll
pop
scas
xchg
iret
push
outsb
jnp
aaa
cmp
pop
test
es
or
mov
ret
scas
clc
dec
rclb
mov
jo
mov
or
or
jbe
xlat
mov
cmp
loope
js
jp
add
add
test
jo
loop
test
pop
jmp
hlt
out
clc
sbb
pop
in
out
mov
jg
mov
daa
mov
arpl
push
adc
adc
inc
mov
repnz
or
enter
out
pop
mov
lea
or
test
sub
xor
pop
cltd
push
add
push
sbb
cmp
xor
test
or
and
js
stos
into
inc
rorb
addr16
clc
sbbb
push
and
in
test
adc
mov
adc
insb
xor
pop
in
gs
fsubrs
int
dec
cmp
sub
xchg
push
jo
jnp
and
mov
outsb
aam
mov
subb
sub
inc
pusha
scas
insl
xchg
push
lcall
out
cmpsb
push
push
gs
ficompl
jno
pop
sbb
shll
fwait
ret
pusha
das
or
ret
loope
test
lcall
mov
push
leave
daa
pop
sbb
xchg
iret
ffreep
xchg
sti
sbbb
fdivrs
fsts
daa
cmp
xor
cmpsb
rorb
xor
push
mov
xchg
pop
jno
adc
sarb
pop
and
std
test
dec
bound
fmuls
and
lea
xor
test
push
pusha
jp
push
lahf
sbb
add
lods
stc
iret
mov
cmp
or
mov
int
cmp
bound
xchg
inc
repnz
xlat
mov
lahf
out
lret
ja
test
mov
fidivrs
pop
ljmp
push
fistpl
bound
mov
dec
or
jne
fisttpll
jbe
xchg
js
orl
in
shlb
popa
aaa
sti
roll
mov
sbb
xchg
jno
cmp
gs
add
into
movsl
cmpsb
enter
adc
into
xchg
xchg
sbb
xchg
push
lret
fadds
sahf
movb
in
fdivs
mov
ljmp
sbb
xchg
push
sti
push
inc
ss
sti
xchg
mov
sub
xchg
jb
sbb
xchg
addb
loope
sub
fstpt
pop
rcll
mov
movsb
into
push
lock
sub
and
fcmovbe
fbld
xlat
or
cwtl
mov
mov
mov
dec
aam
test
inc
dec
jmp
cmp
roll
sub
push
ja
jbe
lods
cmpsb
rcrb
sbb
push
xorb
in
mov
xor
mov
outsb
fildll
adc
push
mov
aas
mov
cld
dec
mov
pop
les
fmuls
lret
adc
stos
xor
inc
mov
pop
rol
mov
test
out
inc
and
jae
or
push
notb
or
jbe
insl
push
leave
add
loopne
loope
orb
xchg
stc
dec
das
sbb
mov
xor
mov
cld
pop
pop
xor
mov
xor
pop
sahf
add
sub
adc
outsb
jb
dec
add
jl
shl
cmp
xchg
aas
leave
mov
aas
push
xchg
rorl
ret
xor
mov
lahf
cs
idiv
in
or
outsl
es
das
pop
mov
push
leave
mov
jp
and
jp
int
in
mov
cwtl
mov
sbb
in
xor
out
mov
dec
xchg
sbb
scas
fisttpll
push
jle
movsb
in
ds
dec
jns
pop
cmp
dec
dec
mov
scas
jmp
pop
test
inc
cmpsb
add
pusha
das
scas
ret
add
sti
or
cmc
push
push
sti
xchg
add
stos
mov
pop
cltd
data16
mov
into
fiadds
mov
icebp
mov
sar
xlat
in
jg
sti
cld
inc
fwait
jno
mov
xlat
dec
fs
rorb
arpl
dec
stc
push
mov
push
jno
xchg
mov
bound
in
and
popf
mov
jno
add
out
dec
jp
fsts
inc
repnz
push
into
xor
test
mov
out
mov
sub
pop
lahf
xor
adc
dec
pop
insb
ret
add
xchg
sbb
or
jl
fst
xor
out
js
aas
sub
into
mov
aas
movsb
push
dec
inc
push
fimull
xor
stos
sbb
inc
mov
mov
insb
call
lea
test
push
cmc
cmc
outsb
xchg
pop
divb
iret
or
lds
jb
sub
push
das
jns
add
push
sahf
push
lods
outsl
out
xchg
xchg
aad
iret
push
adc
stos
sub
outsl
cs
clc
test
mov
xchg
mov
adc
pop
hlt
sbb
subl
fs
xor
jl
cli
pop
rclb
mov
sub
mov
data16
out
pop
pusha
lcall
cmp
pop
popf
add
lahf
popl
fildl
mov
push
icebp
sbb
stos
inc
dec
es
cmp
cld
mov
jge
xor
push
dec
icebp
adc
push
sarb
xchg
pop
xchg
inc
movb
jnp
mov
cmp
and
or
jmp
xchg
test
lods
nop
mov
pop
shl
inc
ret
xor
xor
mov
mov
xor
sbbb
dec
outsb
sbb
aas
and
sub
add
mov
in
lods
push
in
aad
imul
xchg
mov
push
clc
in
pop
xchg
xchg
cmp
cmp
mov
xor
loop
ss
or
dec
cmpsl
test
aad
nop
sbb
and
shll
xlat
jne
fnstsw
cmp
mov
jo
pop
ret
xchg
jle
jb
mov
nop
jns
sti
in
sub
popa
test
ja
jns
int3
pushf
cwtl
jl
fcom
push
jl
mov
lret
add
mov
jge
xchg
ljmp
rorb
sbb
dec
jmp
rorl
repz
sub
out
inc
pop
loope
jle
in
adc
sbb
pmulhuw
push
aad
cmp
xchg
push
outsb
push
sti
sub
pop
lock
sub
inc
loop
mov
ja
aad
sbb
addr16
cmp
lods
dec
gs
push
hlt
push
push
dec
cmpsl
decl
inc
leave
popa
aam
imul
mov
sahf
cmp
out
xchg
arpl
adc
adc
lods
lods
arpl
jno
or
adc
add
leave
ret
in
jge
cltd
cli
or
inc
mov
or
test
push
stc
fisubs
jns
pop
xlat
push
into
pop
pop
stos
push
adc
mov
xchg
jge
in
repz
sar
jb
mov
jo
or
jns
aad
call
lock
mov
mov
flds
mov
push
add
dec
push
sti
sub
cmp
push
dec
mov
icebp
xor
and
jae
mov
rclb
mov
sbb
fucomp
mov
popf
lret
sub
xor
mov
shl
jge
ret
dec
xor
ja
jge
das
sbb
aas
sub
fmull
jge
xchg
xchg
into
ret
cwtl
mov
cmpsb
lret
sbb
hlt
lods
and
xchg
rcr
cmpsl
test
jg
stos
xchg
fwait
comiss
xor
sbb
and
sti
mov
xor
pop
jp
fmul
xor
pop
xor
addr16
mov
imul
pop
add
mov
mov
xor
repnz
xchg
cltd
cmc
rol
sti
imul
push
add
mov
out
or
mov
jmp
push
adc
pop
sub
pop
pop
test
imul
cmpsl
sub
sub
jns
xchg
mov
inc
aad
mov
jle
cmpsl
stos
cmp
xchg
xor
mov
iret
movsl
pushf
sti
xor
pop
ja
dec
in
push
mov
inc
test
cmp
and
pop
ds
mov
push
rclb
mov
xchg
mov
clc
div
and
and
xor
jl
cld
ss
mov
pop
std
xchg
int
pushf
push
cmp
push
and
mov
lcall
sbb
pop
int3
xor
inc
pop
push
xor
decb
scas
mov
jmp
test
xor
pop
fisubrl
cmp
imul
lods
nop
aaa
stos
push
mov
push
mov
mov
or
push
sub
pop
shll
pusha
in
mov
inc
xchg
add
ljmp
repnz
std
inc
dec
imul
arpl
int3
orb
rcrl
mov
inc
jl
add
adc
push
add
lock
rorl
gs
adc
xor
pop
rclb
out
mov
mov
push
add
insb
shll
daa
ja
int
popa
sub
mov
int
out
mov
test
movsl
mov
dec
xchg
dec
add
fs
pop
mov
insb
inc
cmp
cwtl
test
loopne
rorb
lock
outsl
jmp
cltd
dec
lock
push
adc
loope
daa
int
sar
cmpsl
cmpsl
les
jg
or
arpl
out
mov
jmp
xlat
xchg
xchg
and
test
mov
mov
addl
rcr
add
lahf
mov
lahf
mov
adc
add
imul
imul
sub
mov
movsb
inc
pop
inc
or
cmp
imulb
add
cmp
negl
and
add
sbb
gs
cwtl
in
push
jmp
sarb
adc
xor
sbbb
out
popa
test
inc
adc
clc
mov
pop
data16
addr16
in
inc
hlt
mov
jp
pop
js
fisubrs
push
lret
xor
cmp
std
bound
mov
pop
push
out
sbb
int3
jb
fisubrs
insb
mov
inc
cmp
push
jb
and
mov
fwait
insl
adc
addr16
movsl
sti
or
sub
movsb
imul
sub
push
push
cwtl
pop
test
fldenv
dec
fs
cld
shlb
xchg
scas
cmp
fs
mov
iret
adc
aaa
and
test
lock
sub
add
popf
clc
fdivl
out
sbb
inc
out
scas
loop
jg
xchg
mov
aad
mov
jge
out
gs
enter
xchg
repz
data16
jb
out
rorb
or
in
add
stc
mov
adcb
fdivr
push
jns
xor
test
sbb
cltd
test
mov
fmuls
in
shr
clc
xor
dec
adc
outsl
mov
xor
mov
sbb
popl
cmp
mov
mov
xchg
out
sub
push
and
inc
pusha
mov
dec
sti
sub
lods
loop
out
xchg
insl
push
repz
shll
cmp
daa
icebp
mov
xor
lock
outsb
decb
aad
xor
nop
adc
mov
sbb
test
push
loop
push
adc
xorb
addr16
mov
dec
mov
add
cs
adc
mov
add
add
cld
and
pop
mov
mov
repnz
js
popf
pop
cmp
xor
and
pop
xchg
push
repz
aaa
into
mov
daa
inc
mov
fsubp
sbb
xor
or
inc
out
or
jl
jl
rclb
pop
ss
xor
ljmp
sbb
jl
call
hlt
fwait
scas
push
fs
fucomi
pop
cmp
mov
adc
cmova
roll
xor
sti
push
mov
or
dec
sub
movsl
lret
sub
jp
mov
add
cmpsl
push
add
mov
sub
dec
push
loop
icebp
pushl
outsb
out
stos
jb
sub
loopne
push
mov
mov
pop
mov
mov
test
push
add
leave
cmp
mov
push
in
cmpb
or
mov
mov
cld
jp
mov
fcmove
rclb
ss
xor
xchg
mov
xor
and
mov
dec
inc
in
lea
rcll
fbstp
ficoms
mov
and
sbbb
leave
cmc
lahf
rclb
mov
xor
fidivl
xchg
ja
dec
add
pop
out
in
sbb
sbb
pop
inc
pop
mov
lds
ljmp
sbb
mov
js
pop
push
inc
std
enter
mov
push
loope
lea
into
jl
jnp
movsb
dec
push
mov
dec
xor
lahf
sub
dec
sub
mov
xor
or
dec
fsubrl
aam
or
in
bound
push
lret
test
mov
add
scas
sahf
aam
add
dec
mov
jno
cmp
adc
insl
mov
xor
lds
xor
pop
jmp
pop
dec
ljmp
push
mov
pop
inc
ljmp
cmp
mov
scas
xchg
xchg
je
scas
inc
outsl
pop
js
jl
and
pop
jle
jecxz
pop
push
das
cwtl
cwtl
xchg
or
cmc
adcb
mov
xor
push
inc
mov
mov
jnp
lret
jae
insb
mov
cwtl
adc
in
ds
dec
adc
ds
nop
popa
int
push
pop
enter
insl
sub
pop
lret
pop
push
test
js
repnz
pop
jne
std
outsl
imul
das
mov
lahf
add
sbb
jp
xchg
lcall
addr16
gs
dec
sbb
xor
jmp
les
outsl
push
stos
je
adc
inc
cmpsl
jno
cld
repz
daa
hlt
xlat
mov
cmp
mov
in
lock
cwtl
ficompl
les
sbb
pusha
jo
loopne
sub
inc
inc
inc
aam
xchg
pop
xor
fcomps
push
shrb
cmp
rclb
pop
fisubrs
or
dec
cld
adc
inc
sbb
test
inc
ret
shl
pop
ja
aam
jecxz
nop
or
mov
mov
je
jb
fcoms
xchg
sti
push
sub
outsl
or
arpl
cmp
push
imul
xchg
scas
negb
sub
rcrl
lods
push
icebp
mov
lahf
sub
sarl
and
aam
adc
jmp
mov
sub
xchg
xchg
jno
pushf
ss
dec
int3
jbe
mov
mov
xchg
xchg
mov
jmp
xor
imul
mov
into
mov
push
test
mov
jbe
xor
jge
popa
dec
and
fildl
inc
cwtl
subl
adc
mov
fs
xor
xchg
nop
lcall
dec
push
mov
jae
push
popa
mov
jns
dec
add
ret
js
lea
scas
pop
xor
cmp
in
pop
mov
pushf
or
cli
push
sbb
mov
test
pop
call
shlb
push
arpl
cmpsl
jnp
cmp
inc
out
ljmp
movsb
push
lods
and
lods
xor
mov
imull
je
out
mov
loopne
addb
outsl
rcl
adc
les
shl
or
rcrb
test
jns
lea
lods
sub
adc
outsb
mov
jno
jae
aad
push
push
stos
pop
add
inc
mov
mov
imul
aad
lock
and
stc
dec
ja
setge
mov
popa
push
or
aad
ja
lcall
nop
jp
ja
mov
cmp
push
dec
mov
scas
mov
jmp
fiaddl
sub
push
lock
pop
or
push
repnz
sbbb
mov
mov
in
sub
fmuls
fs
xor
xlat
mov
cmpb
js
inc
ficoml
popa
sbb
cmp
sub
dec
cltd
push
adc
repz
movsb
addl
jns
fimuls
sahf
cmpsl
xor
inc
inc
mov
lods
jmp
daa
mov
iret
adcb
int3
mov
cmp
clc
jle
mov
fisubs
mov
into
and
xor
fmuls
sbb
push
add
sub
push
stos
sbbl
adc
fnsave
dec
jno
xor
cmp
stc
cwtl
jne
ret
jg
mov
push
and
dec
xchg
cmp
push
rorl
repz
fistpl
jnp
jmp
mov
aam
xor
jb
mov
mov
movsl
es
aam
sar
jecxz
fidivl
and
xchg
lods
xlat
push
int3
cmp
jmp
int3
inc
outsb
dec
inc
cmp
mov
xor
jbe
xchg
mov
mov
loope
testb
mov
cltd
arpl
mov
out
test
fidivrl
dec
dec
dec
xor
roll
pop
sub
shll
inc
fisubs
shrl
test
sahf
pop
xor
lcall
adc
push
adc
inc
imul
orb
lahf
mov
sbb
jp
jle
lock
cld
test
stos
dec
push
pop
cmp
lret
jl,pt
adc
lret
adc
fistl
test
sub
js
cmp
pop
inc
gs
imul
rcll
or
xchg
xchg
fcoms
xor
cmc
mov
mov
sub
clc
fxtract
or
cld
repz
sbb
jle
mov
mov
insl
ret
push
jl
and
int3
jmp
jmp
or
sub
pop
hlt
sub
out
push
pop
mov
push
mov
xor
xor
stos
inc
cmp
scas
fisubrl
and
fisubs
cmp
xor
movsb
sahf
sbb
sbb
stos
loope
int3
inc
inc
adc
into
push
mov
jae
les
leave
scas
push
test
mov
inc
add
or
xor
push
adc
stos
das
add
xchg
call
push
pop
idivl
lds
sbb
and
stc
xor
dec
ret
mov
pop
ror
add
fstp
mov
lock
leave
sbb
push
ret
dec
adc
jae
js
pop
push
int3
jno
xor
into
add
add
call
stc
mov
mov
and
out
les
sahf
jnp
cmp
fwait
inc
dec
jp
add
into
inc
push
push
push
jl
adc
stos
xchg
outsb
insb
inc
and
mov
loope
imul
xchg
outsl
jae
das
mov
mov
mov
in
test
xchg
mov
movsl
pop
mov
icebp
daa
das
push
add
or
jg
sti
pop
sub
das
stc
enter
jne
xchg
pop
enter
leave
jns
and
add
mov
xchg
std
jb
jg
in
add
cld
xor
faddl
mov
xor
insb
or
sub
and
and
mov
bound
and
cmp
add
cmp
leave
adc
jmp
movl
inc
push
adcb
aam
stc
imul
pusha
leave
pop
in
insb
mulb
xchg
mov
subl
inc
adc
andb
mov
jle
xor
dec
sbb
mov
ss
dec
ja
imul
xor
hlt
push
fwait
outsl
jns
inc
ret
repz
mov
mov
inc
insb
outsb
xchg
lret
ja
mov
mov
rcrl
in
mov
popa
adc
jl
aam
adc
lds
das
inc
ss
nop
sub
ficoms
pop
add
int
mov
int
sub
or
bound
movsl
push
xlat
fadd
pop
dec
roll
lcall
push
fimuls
push
mov
loop
shl
loopne
out
pop
pop
jnp
jl
in
add
mov
cwtl
subl
mov
pop
sub
icebp
cmp
sub
out
sarb
jns
xchg
sti
mov
sub
int3
jg
mov
inc
jle,pn
repnz
iret
pop
pop
mov
xor
xor
sub
test
int
cmp
add
out
jne
or
and
aaa
lods
repz
add
pusha
pop
js
dec
stos
pop
daa
cmp
lret
xchg
dec
pop
pop
test
push
xchg
jbe
push
add
sub
push
pusha
pop
mov
lods
mov
cli
push
ds
adc
in
int3
add
shlb
cld
mov
pop
dec
movsb
xorl
mov
xchg
out
or
jne
mov
stos
xor
add
push
add
test
mov
dec
sbbb
lcall
imul
outsb
and
and
ljmp
dec
mov
sub
push
int
adc
push
int
test
je
hlt
cmp
pusha
std
push
sbb
mov
test
subb
leave
cmp
nop
xchg
jbe
movsl
sbb
movsb
and
jne
pop
js
js
test
sub
sub
sub
pop
ljmp
movsb
add
imul
or
push
clc
push
loop
rorl
cmp
and
or
push
pop
jg
sbb
adc
add
dec
xorb
lds
jo
push
mov
sbb
mov
je
adc
sub
cmp
aam
in
stos
jmp
mov
int
and
movsb
sub
iret
mov
xchg
cmp
insb
mov
or
mov
data16
int
repnz
xchg
out
idivb
xor
xor
and
out
das
xchg
sub
mov
mov
test
mov
insl
mov
mov
push
cmc
or
ret
dec
lds
lret
mov
stc
inc
or
push
int3
xor
push
rclb
enter
xor
push
push
push
loope
shll
mov
dec
mov
sbb
pop
cmc
lock
ja
lds
xlat
ficoml
int
lahf
inc
lcall
ret
jge
in
insb
pop
ret
imul
stos
testb
xor
mov
test
stos
lock
ljmp
mov
mov
mov
lcall
ret
shrl
call
mov
mov
mov
push
cmp
inc
sahf
mov
dec
es
insl
cmp
ret
js
cmp
sub
gs
ret
int3
jbe
push
inc
jbe
xchg
loop
repnz
jecxz
out
icebp
mov
data16
xchg
outsb
push
inc
movsl
pop
fwait
cmp
and
fdivrs
jmp
shll
xchg
fucomp
insl
sub
cmpsl
jb
mov
jge
out
pop
add
xor
subl
out
repnz
mov
repz
mov
jb
popa
jmp
aam
je
out
sbb
repz
pop
fs
negb
faddp
mov
mov
aaa
mov
pop
faddl
mov
scas
mov
xchg
scas
divl
add
jl
cld
scas
in
or
mov
aaa
xlat
in
aas
stc
ljmp
mov
int3
lret
in
mulb
sarl
mov
push
ljmp
fcomps
inc
push
in
roll
lret
lods
pop
jg
lods
jb,pn
clc
test
or
dec
pop
lcall
jns
dec
ds
pushf
sub
cmp
push
xlat
fildl
int3
sbb
divb
lret
xor
call
inc
adc
cmc
fists
inc
aas
jmp
sub
insl
mov
xor
clc
jmp
push
or
lock
sub
dec
or
mov
or
ljmp
push
dec
mov
push
mov
or
inc
faddl
mov
cmpl
mov
jns
roll
in
dec
out
imul
inc
arpl
xchg
clc
mov
jns
push
push
jns
fistpll
dec
add
mov
fisttpl
sahf
mov
ficoml
test
aad
push
mov
push
out
dec
sub
mov
mov
mov
add
mov
jl
stc
adc
dec
ficomps
cmpsb
push
jle
xor
inc
stc
mov
pop
mov
fwait
cmp
mov
mov
or
lock
fwait
pop
push
sub
push
xchg
cltd
xor
cmp
call
aaa
fcmovnb
push
adc
lds
sahf
ja
ret
ret
test
mov
das
mov
in
or
or
push
shll
xchg
add
xlat
xchg
push
jnp
and
arpl
cmp
xlat
push
gs
nop
mov
inc
out
sub
add
outsl
sub
push
fsubs
shll
lods
jne
mov
aad
pop
sub
dec
loop
sbb
mov
cmpsb
call
ret
cmp
jge
lods
sub
sbb
dec
movsl
cld
add
repnz
scas
xchg
test
add
ljmp
push
push
shrb
mov
gs
mov
jle
xor
dec
lea
call
cmp
ljmp
mov
es
loop
ror
xor
push
mov
insb
mov
sbb
in
mov
mov
xorl
lock
sub
dec
jns
jecxz
push
mov
push
out
sbb
pusha
adc
jp
cli
mov
xchg
mov
fdiv
ljmp
scas
sub
dec
mov
in
test
sbb
iret
flds
mov
lret
jp
and
sbb
out
mov
sbb
cli
pop
loope
push
mov
mov
inc
test
mov
repz
ja
sbb
xor
lods
lods
sub
mov
fadd
xchg
leave
sub
lods
push
rol
mov
cmp
sbb
fdivrl
in
xchg
cmp
subl
sahf
inc
bnd
mov
push
adc
fisubs
xchg
in
adc
in
fstp
mov
rol
sub
mov
not
xor
stc
xor
mov
arpl
sub
data16
push
jno
fmull
cwtl
pop
cld
rcl
jge
insb
pop
scas
lret
rorb
lcall
mov
pop
dec
sub
cmp
cmpsl
add
mov
mov
inc
inc
lcall
cs
mov
or
addr16
adc
add
js
cmp
jne
pop
js
andb
adc
inc
pop
jge
adc
test
outsb
ficomps
adc
push
std
mov
out
lahf
add
insl
mov
stos
arpl
sahf
lcall
xchg
imul
outsl
sub
cld
outsl
dec
sub
mov
sbb
int3
push
in
hlt
jmp
mov
dec
addr16
scas
aad
stc
add
or
fwait
add
jns
add
mov
inc
call
sub
push
mov
xchg
sbb
cmc
mov
cs
jo
icebp
enter
push
and
pop
jmp
aam
fidivl
jge
xor
dec
jmp
xchg
jge
xchg
pop
inc
out
cmpsl
dec
ss
in
pop
stos
mov
add
mov
mov
addr16
int3
lds
pop
mov
jmp
mov
cmpsl
jecxz
sbbl
fisubl
outsb
and
rcll
in
lret
push
or
aam
push
xchg
adc
loopne
lock
add
mov
mov
lock
adc
pop
fcomps
jns
sbb
lds
mov
sub
dec
xor
data16
stos
xchg
cmp
les
add
adc
cmp
shr
clc
push
loope
imul
popa
pop
jecxz
dec
scas
push
push
mov
pop
jo
lret
xchg
fsubl
mov
stos
push
inc
mov
jnp
adc
bound
scas
sub
xor
packuswb
aaa
test
test
push
push
adc
mov
xchg
mov
lahf
mov
push
movsl
loopne
and
repnz
sahf
enter
imul
push
inc
adc
dec
icebp
test
dec
inc
ret
rol
dec
int3
sbb
cmc
lahf
mov
xor
call
jno
xchg
adc
in
cld
sub
mov
loope
hlt
jl
add
sbbb
out
or
in
xchg
jbe
in
lret
push
dec
cmp
cmpsl
or
xlat
divb
or
ja
mov
cwtl
les
cltd
dec
loope
sbb
lock
nop
adc
xor
xchg
stc
dec
mov
cs
stc
lahf
mov
or
into
push
pushf
xorb
sub
sub
hlt
adc
shr
insl
mov
xchg
mov
repz
test
sbb
pop
sub
xor
xor
push
sbb
lods
out
shll
out
out
rorl
dec
nop
push
mov
mov
cmp
jg
cmc
or
adc
arpl
jl
adc
push
shl
jge
inc
add
mov
ja
mov
or
sub
sti
xchg
xor
nop
jmp
dec
jmp
bswap
dec
and
add
sub
negl
pop
das
fbld
std
add
test
bound
aas
adc
ljmp
fcoms
mov
jne
ja
or
loope
roll
sahf
dec
lret
jmp
lret
jb
mov
pop
mov
xchg
xchg
cmp
addr16
lods
mov
xor
inc
push
dec
stc
outsl
in
mov
imul
sbb
adc
fs
std
cli
cmp
sub
clc
sub
pcmpeqd
leave
cltd
xor
add
mov
or
mov
mov
inc
bound
dec
clc
repz
out
add
es
jb
cmc
shrb
xchg
xlat
or
cld
ss
movsl
jns
into
dec
push
sub
xlat
mov
xchg
push
sub
frstor
mov
dec
mov
mov
mov
xlat
xchg
mov
cmp
push
inc
pusha
xchg
inc
sub
sbb
jle
push
jb
aas
push
mov
fwait
jle
mov
cld
outsb
cmp
mov
cltd
cmpsb
loopne
inc
lcall
xchg
scas
mov
mov
pushf
sarb
loope
loop
jp
shrb
cmp
sub
xchg
sub
xchg
aas
outsb
hlt
xor
cld
test
pop
cwtl
clc
push
clc
mov
or
gs
jne
testl
or
fbld
jae
pushf
les
push
or
test
std
mov
jae
and
sbb
fcoml
cmpsl
sahf
repnz
adc
lret
dec
sbb
rorb
add
pop
add
rdmsr
adc
es
leave
clc
scas
ja
or
mov
xchg
jle
enter
jne
push
jp
mov
aad
push
pop
xchg
pop
jno
and
fildll
addr16
mov
ja
stos
aas
mov
inc
sbb
fsubrl
rclb
pop
int
cmp
icebp
in
add
test
fisttps
cmpl
nop
jo
into
imul
xchg
lcall
xchg
repnz
enter
or
movsl
jnp
push
jmp
add
mov
std
loopne
fisubrl
test
outsb
popf
push
iret
xchg
test
xchg
push
imul
jmp
outsl
sbb
cld
lret
orl
pop
pop
leave
arpl
dec
mov
fwait
pop
adc
sub
sub
pop
push
lret
jle
fcmovnbe
clc
loopne
mov
cmc
ja
pop
pop
mov
enter
arpl
cld
jge
ljmp
sub
rcll
pop
mov
push
add
sbbb
in
int3
insl
inc
into
sub
loope
hlt
jp
mov
insl
pop
fisttpll
scas
das
out
ljmp
push
loop
xchg
pop
adc
adc
pop
andl
out
add
cltd
dec
in
ja
mov
push
xor
ja
ljmp
je
in
xor
cmp
inc
fwait
jb
call
and
imul
inc
pop
mov
mov
ljmp
mov
lock
push
flds
sbb
ds
aaa
repz
out
flds
int
and
xlat
ljmp
push
lds
xchg
fstpl
jmp
adc
xor
fisttps
xchg
or
test
adc
pop
cld
jo
pop
stos
adc
shlb
mov
jg
or
jl
adc
movsl
aaa
jp
out
dec
rcll
sub
call
add
orb
pop
pop
mov
cmp
imul
add
mov
test
shlb
vmovq
mov
jp
stos
xorl
inc
dec
and
nop
ss
add
test
testb
aad
std
fnsave
dec
ret
out
sub
in
cli
sub
pop
stos
aam
pop
gs
xor
faddl
xchg
repnz
sub
in
xlat
and
pusha
xchg
decl
inc
mov
cmp
sub
mov
sbb
add
pop
test
aas
lret
pushf
sub
int
mov
dec
add
lock
mov
ja
in
negb
mov
add
xor
mov
cmp
xchg
fnstcw
push
sar
sbb
mov
shll
mov
push
movsl
subb
les
and
pop
mov
dec
ds
enter
jl
es
loop
fwait
rcll
imul
jb
arpl
xor
es
mov
das
jg
pop
jns
daa
add
insl
mov
fistps
cmp
cmp
mov
fstl
sub
mov
mov
push
incb
or
fmull
gs
lcall
cltd
fs
and
jl
jne
imul
mov
das
or
cmc
popa
mov
divb
sbb
insb
lahf
rorb
ljmp
push
in
aam
mov
jmp
mulb
dec
pop
imul
popl
faddl
leave
fstp
cmp
ds
pusha
rclb
scas
loope
in
lods
in
sbb
jno
jo
pushf
add
and
subb
call
lahf
adc
add
push
popf
fidivl
add
jo
sub
sub
ret
pop
scas
mov
mov
jmp
insb
inc
jbe
es
xor
fmull
cmpsl
mov
push
pop
dec
mov
xchg
aad
push
push
pop
loop
ljmp
mov
jle
dec
repnz
mov
in
outsb
sub
cld
dec
jnp
pop
in
xor
mov
les
incb
mov
push
add
jle
dec
mov
add
and
pop
aaa
inc
fnstsw
add
push
int3
dec
cmp
push
dec
ja
or
out
rcrb
cmpsl
push
in
aad
cmp
sub
push
mov
jl
movsl
jb
sbb
test
jmp
dec
cmpsb
jno
pop
xor
sbb
mov
push
popl
je
jae
inc
cmpsl
jg
add
mov
sub
sti
dec
dec
fcoml
jo
dec
leave
lahf
xchg
pop
rorl
xchg
pop
sbb
adc
mov
test
push
jb
push
sbb
push
jne
xchg
adc
in
push
arpl
add
xlat
fisubrl
daa
inc
push
adc
icebp
xor
loop
sub
in
repnz
fs
push
pop
and
mov
cltd
and
scas
xlat
xchg
and
out
jnp
mov
lcall
jns
push
cmp
repz
fsubrs
stos
insb
mov
scas
shrl
loope
pop
fdivrl
dec
mov
gs
dec
popa
fistpll
fld1
mov
jns
xchg
test
scas
push
push
sub
xchg
aad
fsubs
or
mov
stos
test
inc
push
pop
scas
loopne
push
flds
insl
clc
ds
jne
clc
dec
xor
xchg
rcrl
mov
push
fcompl
xlat
or
inc
aaa
lds
cmp
fwait
ret
gs
cmp
les
ja
mov
js
dec
mov
add
push
hlt
stos
sbb
mov
shll
xor
addb
inc
mov
cmp
jnp
and
call
mov
rcl
stos
jg
mov
inc
xchg
jmp
aas
jns
ja
jmp
lret
xchg
in
jae
arpl
pop
adc
sarl
ljmp
add
xchg
shlb
in
sbbl
lock
sub
in
lods
sarb
fsubs
sti
fadds
fidivrl
stos
sbb
mov
or
lret
mov
enter
cmpsl
pop
je
int3
mov
mov
mov
hlt
jle
nop
mov
dec
sbb
mov
cmpsb
ss
or
mov
addl
insb
jnp
mov
ljmp
aaa
and
sub
repz
mov
mov
pop
add
mov
lret
or
mov
mov
cmp
cmp
cmovne
jae
add
sahf
test
and
loopne
jecxz
xchg
mov
fwait
or
rolb
lret
pop
out
imul
xorl
push
je
pop
clc
aad
in
fwait
test
inc
inc
sub
dec
mov
lahf
push
dec
mov
sbb
or
iret
mov
or
clc
mov
loopne
cmpsl
or
add
iret
mov
add
inc
mov
push
in
xor
insb
xchg
cltd
out
gs
mov
fsts
push
inc
and
pusha
cli
push
fisubrl
in
cli
mov
xchg
cmp
sub
add
loop
and
inc
mov
xorb
sbb
cs
negl
lret
cmc
in
mov
addr16
pop
pop
adc
add
mov
jo
jns
inc
push
cli
xchg
cld
pusha
mov
add
adc
into
das
loop
mov
xchg
and
pop
inc
icebp
ret
cld
mov
mov
or
scas
or
mov
sti
movsl
or
and
mov
sbb
shlb
cmp
sub
add
inc
mov
xchg
inc
and
sahf
mov
adc
enter
in
adc
sahf
mov
jecxz
lods
lcall
xchg
stos
push
lret
icebp
andb
ret
or
pop
inc
mov
push
mov
sub
ja
shll
cltd
es
cmpsb
pop
popa
cmpl
add
inc
lds
cmp
out
inc
mov
aas
lods
pop
jne
cmp
sub
add
adc
cmpsb
mov
jge
dec
jmp
addr16
pop
dec
or
bound
pop
sarb
out
mov
push
pop
subb
or
adc
push
stos
pop
jle
lcall
insl
xchg
lds
mov
push
fistl
add
hlt
add
or
dec
scas
and
movb
aam
fistps
cmp
into
or
mov
and
insb
dec
lock
mov
inc
out
pop
pop
not
cwtl
stos
das
nop
inc
xor
fnstsw
inc
jb
cmp
jne
subb
test
das
pusha
cmp
std
pushl
imul
addl
jae
dec
xchg
out
sbb
push
lahf
orl
push
sahf
adc
aam
cwtl
roll
xchg
or
insl
stos
leave
daa
mov
sbb
imul
in
adc
pop
jne
or
adc
mov
fsubrs
adc
cmp
lock
mov
pop
jnp
pushf
mov
or
sbb
xchg
hlt
hlt
ds
mov
jmp
xchg
cwtl
movsl
push
data16
jnp
mov
dec
cmp
arpl
jg
xchg
aam
xor
scas
adc
add
mov
pop
push
gs
jecxz
push
call
and
or
daa
add
dec
lock
jge
popl
adc
pop
fs
imul
and
adc
adc
fidivs
lock
sbb
addr16
pusha
push
pop
sbb
xchg
imul
sub
sti
aad
adc
push
cli
adc
fwait
subl
rorb
daa
mov
fisttpll
sbbl
stos
xor
shlb
popf
or
xchg
arpl
shr
xor
or
adc
cli
push
mov
sahf
cmp
aad
pop
pusha
and
ret
mov
xor
mov
fwait
jp
lret
add
shlb
dec
mov
cmp
outsl
add
jns
and
insb
or
hlt
mov
data16
mov
aas
fsubrs
cmp
sbb
pop
lret
adc
loop
sub
push
or
pop
mov
mov
lds
adc
push
fisubl
insb
mov
jmp
sbb
movsl
jb
and
loop
mov
and
jae
ljmp
ja
adc
cld
xchg
sub
aam
jle
lahf
les
xor
call
push
out
or
test
push
push
xchg
add
cld
add
push
pop
imul
call
out
jno
aaa
in
into
bound
mov
test
push
popa
pop
lods
or
cmp
and
xor
pop
rorb
xchg
xor
loopne
or
mov
fwait
cmp
shl
ljmp
in
inc
adc
lea
adc
lahf
push
mov
and
adc
cld
mov
mov
or
cmp
mov
mov
daa
mov
mov
and
jnp
mov
jae
pop
xchg
imul
cmp
gs
es
xchg
jnp
mov
insl
leave
push
or
jg
lcall
imul
cmp
inc
xor
loop
aad
fimuls
lcall
lea
and
stos
and
fs
sbb
jnp
pop
stos
mov
sbb
push
sub
notb
dec
out
add
rcrb
out
jl
imul
orb
fstl
xchg
fdivl
loope
loop
fldenv
stos
mov
pushf
cs
sub
and
jge
js
fnstsw
ja
ret
shll
iret
sbb
cs
loop
push
and
cmp
mov
fisttpl
fwait
sbb
inc
outsl
pushl
sbb
pop
jmp
xchg
lock
push
jl
movsl
not
dec
sahf
and
in
mov
addl
adc
mov
sbb
mov
out
add
sbb
jne
scas
mov
mov
mov
popa
pop
leave
adc
cmp
mov
ljmp
push
movsl
scas
cmpsb
clc
cmp
fidivrs
cmp
push
out
test
sub
call
sbb
sub
cld
push
ffreep
mov
jns
pminsw
inc
arpl
stc
jg,pn
xchg
test
scas
pop
xor
cs
les
ds
or
and
and
icebp
mov
lock
inc
cli
sub
stos
mov
aad
or
mov
cmpb
cld
jno
push
icebp
inc
pop
dec
ds
mov
or
push
sbb
dec
jnp
cli
sbb
mov
xor
mov
dec
jmp
jl
jb
adc
xor
ret
insb
ret
mulb
mov
fisttps
loopne
mov
fidivs
jb
sarb
pop
adc
or
mov
repnz
jle
jb
xchg
mov
sbb
push
out
into
rcr
leave
nop
push
or
loopne
mov
xchg
inc
loop
and
add
cmp
xchg
testl
xor
xchg
pop
sub
scas
ja
and
fcoml
mov
or
sub
lods
mov
jg
lds
xchg
aaa
icebp
incl
dec
mov
adc
cmpsl
pop
xor
mov
sbb
ret
push
leave
push
pop
arpl
sarl
xchg
lahf
sub
mov
aad
or
cmp
cld
scas
or
mov
test
push
fdivl
push
and
jmp
rcr
adc
test
jae
add
push
mov
enter
fistps
scas
xchg
jmp
scas
sub
scas
dec
inc
jb
cs
add
pusha
mov
inc
xchg
out
aaa
lret
ss
int
sub
aad
push
insl
test
pop
divb
inc
push
dec
and
and
sti
loope
mov
sbb
add
push
jo
shl
das
add
fdivl
or
push
jne
cmc
mov
jo
sti
sub
jne
sbb
add
ljmp
xchg
mov
nop
stos
xchg
dec
in
push
fldln2
lock
test
or
aam
sub
sbb
loopne
aam
sub
adc
sbb
sub
or
rcl
cmp
mov
ficoml
in
add
jb
push
cld
fstpt
das
xorb
push
sbb
mov
mov
imul
mov
lret
pop
out
and
pushf
js
mov
adc
mov
xor
jne
xor
adc
adc
lods
addr16
adc
mov
int3
mov
cmp
out
xor
ficoms
test
repz
call
aaa
xchg
pop
jmp
lds
xchg
sub
lcall
add
jns
ljmp
sarb
mov
cmpsl
fucom
xchg
arpl
sti
push
enter
jecxz
pop
les
push
sbb
loopne
pop
mov
lea
fdivl
xor
or
mov
push
or
sbb
add
or
nop
push
leave
mov
dec
in
add
mov
test
inc
mov
mov
jno
push
scas
and
test
inc
pop
ss
fdivs
stos
das
adc
into
push
inc
insl
sbb
xchg
sbb
ds
shll
sbb
mov
fists
pop
add
lods
sbb
mov
mov
icebp
outsb
shll
pop
shrl
ret
mov
arpl
add
and
and
mov
xor
or
jle
fidivrs
mov
mov
jnp
cmp
sbb
cmpsl
xor
cwtl
jns
push
iret
cs
xor
cmp
pusha
insb
dec
inc
jp
cmp
dec
addr16
xchg
loop
sbb
xchg
pop
scas
push
push
and
movsl
out
pop
mov
xchg
cmpsb
into
cmp
cld
mov
je
and
cltd
fisubrl
test
lret
xor
adc
adc
dec
popa
pop
or
mov
aad
pusha
cmpsb
stc
and
xchg
push
and
test
pop
sahf
xchg
pop
add
sub
mov
mov
and
jecxz
mov
fwait
cmp
rorb
jl
pop
fbld
pusha
cli
ss
decl
mov
mov
or
add
inc
sbb
adc
jnp
jle
dec
lea
insb
jp
sub
ret
and
mov
cmp
inc
aaa
pop
insb
cmp
adc
jo
sahf
pop
aaa
and
cli
inc
adc
pop
rclb
jmp
jo
cmp
push
aaa
push
adcb
inc
fs
jae
jne
daa
xchg
add
cmp
jg
lock
rol
mov
sub
out
sbb
loope
mov
jecxz
cwtl
push
dec
js
cld
iret
mov
mov
jg
sub
xor
mov
jne
lea
inc
icebp
out
mov
out
mov
push
sub
add
sbb
sar
ret
lods
cld
andb
xchg
mov
cwtl
adc
loopne
test
ljmp
cmp
jmp
loop
mov
sbb
and
call
andl
jns
ja
aaa
mov
xchg
jns
popa
rcr
std
mov
jb
in
into
bound
into
loopne
mov
push
mov
je
lahf
mov
and
fsts
addr16
out
sbb
add
aam
push
add
xor
or
int3
dec
push
jle
sub
pop
bound
xchg
dec
push
sub
je
mov
rorl
in
es
insb
xor
stos
xor
xor
mov
push
es
leave
and
pushf
cmp
lea
pop
mov
xchg
cli
out
ds
xor
cmp
push
cwtl
inc
lds
popa
ret
inc
daa
or
push
xor
jg
daa
inc
setbe
push
cmp
ret
pop
mov
cltd
andb
int3
or
sbbl
lret
mov
test
out
jmp
fcoml
lea
in
adc
jmp
jae
mov
dec
xchg
and
pusha
fsub
pop
cltd
jns
cmpsb
and
or
dec
cmp
in
popf
sbb
pop
jmp
loope
inc
in
mov
fstpt
adc
daa
popf
pop
pop
loope
mov
je
or
push
push
loopne
mov
push
dec
or
dec
sbb
sti
lods
movb
adc
adc
sub
inc
test
or
call
inc
scas
inc
js
loopne
ja
rclb
lods
mov
mov
xchg
mov
lcall
mov
ds
jg
out
add
mov
adc
inc
jl
cmp
stos
dec
fbld
cli
stc
adc
mov
loopne
call
lcall
std
mov
fdivs
addr16
pop
shrl
xor
divb
sbb
fucomip
mov
pop
sbb
xorb
jo
fldcw
pop
mov
ficoms
xchg
and
or
stos
xor
sbb
out
mov
and
add
or
and
mov
mov
repnz
xlat
sbb
xchg
lock
lcall
push
mov
xor
sub
aad
mov
aad
jle
rcl
fs
dec
sbb
inc
or
inc
in
push
xor
ds
pushf
xor
mov
cld
sub
lds
aaa
pop
int3
sbb
scas
bound
push
adc
or
or
push
sbb
add
repz
aam
adc
mov
jae
sbb
shll
sbb
mov
mov
inc
xchg
jge
add
inc
lcall
lcall
lcall
cs
inc
mov
dec
sbb
sarb
ja
fsub
mov
loope
je
clc
adc
in
xchg
xchg
std
pushf
pop
and
jp
subl
jno
jns
cmp
aad
pop
fdivrl
sub
sahf
pop
mov
and
mov
loop
ror
mov
inc
adc
jbe
cltd
jnp
cmpsb
dec
in
fists
pop
popa
in
mov
outsb
mov
ret
movsb
rcl
pop
loope
add
cmp
or
mov
lret
pop
insb
pushw
or
dec
inc
jo
outsb
jg
xlat
sbb
or
cwtl
addr16
fcomi
stos
inc
int
mov
dec
hlt
cs
jne
aas
cmpsl
push
pop
pop
ss
out
addb
xor
shrb
mov
jge
push
inc
xchg
push
mov
cmp
mov
mov
pop
imul
xchg
xor
or
lret
sarb
mov
mov
stos
or
lcall
out
in
cltd
xor
adc
fadds
pop
mov
add
mov
mov
cs
sarb
push
icebp
or
push
or
int
pop
and
cmpb
push
imul
rcll
movsb
mov
iret
mov
or
mov
in
lret
sub
ds
jmp
dec
mov
addr16
cmp
popf
mov
scas
pop
test
gs
js
and
push
push
mov
enter
jl
xchg
leave
add
lds
xor
cli
xor
jo
xchg
mov
jne
imulb
or
pop
sbb
out
mov
push
xor
mov
aad
sbb
mov
loopne
lret
mov
fucomip
int3
xchg
ljmp
daa
out
aas
push
push
xchg
out
add
inc
sbb
loope
add
cmpl
pop
insl
cmc
jnp
ret
ret
push
mov
test
lret
adc
cmp
xor
and
push
ret
push
jl
mov
jno,pn
dec
push
mov
mov
lret
jo
outsb
push
mov
orb
shl
mulb
pop
ljmp
pusha
insb
pop
mov
stos
mov
mov
mov
sbb
stc
cmp
repz
movsb
mov
cmpsl
ret
clc
fldt
mov
shrl
adc
adc
xchg
add
cmp
mov
dec
sbb
rcrl
lret
loop
and
mov
pushw
mov
lods
fwait
sbb
inc
pop
loope
xchg
mov
icebp
push
pusha
dec
adc
mov
fcoms
mov
sahf
mov
push
push
xor
or
sbb
popf
cmpb
repz
pop
adc
xchg
mov
sarb
inc
mov
clc
insl
xor
adc
mov
fmuls
popa
sub
and
hlt
dec
fistpll
mov
lock
pop
add
int3
fisttpl
xor
je
adc
fnstenv
inc
fdivrl
sbb
cmpsl
mov
cmpsl
adc
addr16
mov
pop
or
bound
mov
push
ja
dec
pop
leave
fcoms
lcall
fidivs
mov
mov
fisttpll
stos
int3
arpl
inc
xor
mov
enter
mov
push
dec
sub
add
jmp
sti
ljmp
push
adc
clc
out
push
fcomi
lea
dec
pop
fcmovb
lods
mov
mov
and
dec
orl
outsl
das
shlb
or
sub
and
mov
jns
pop
mov
enter
adc
rolb
test
xchg
adc
in
mov
lods
cs
nop
icebp
js
shrb
insb
pusha
inc
and
xchg
mov
pushf
xlat
sbb
enter
jl
mov
ret
dec
sub
mov
mov
mov
push
pop
jmp
push
pop
loop
cmc
xchg
mov
idiv
out
or
fisubrs
jbe
push
push
addl
movsl
movsl
or
lea
and
out
cmpsb
pop
sbb
out
stos
lods
outsl
dec
lock
or
stos
adc
inc
subl
xchg
cli
xchg
stc
sub
mov
mov
xchg
rol
cmpsb
movsl
sbbl
xchg
sbb
dec
popf
test
mov
aaa
call
xor
js
cwtl
and
addl
lret
mov
adc
bnd
sub
sub
jmp
enter
mov
pushf
int3
fdivs
dec
cld
imul
fsubs
lods
add
insb
mov
mov
mov
or
idiv
sub
mov
mov
dec
les
push
jnp
iret
movsl
mov
lods
mov
cmpsl
imul
out
inc
pop
dec
mov
out
enter
mov
daa
test
mov
outsl
xor
xchg
clc
push
insl
adc
movsl
ljmp
outsb
mov
add
lcall
add
cmpsb
ss
das
and
adc
bound
pop
shrb
mov
out
and
andb
mov
xchg
jbe
xchg
sbb
iret
daa
push
jecxz
jns
sub
mov
sub
pop
xchg
mov
cli
stos
push
jecxz
mov
icebp
inc
shlb
call
xchg
or
sub
imul
dec
lods
xchg
notb
mov
inc
sbb
fwait
clc
aas
ds
in
pop
in
and
aaa
lods
sahf
add
mov
inc
jns
mov
jbe
pop
lea
or
sub
outsl
adc
and
and
repz
jo
xchg
dec
pop
xchg
xlat
inc
pop
sahf
jnp
fisubs
pop
aad
xchg
pop
pop
xchg
addl
and
sbb
rolb
out
lods
dec
lds
dec
in
enter
dec
inc
scas
mov
aaa
inc
daa
stc
pop
or
add
push
jl
loopne
add
mov
add
or
enter
test
push
outsl
fisubrl
mov
inc
mov
push
imul
mov
jnp
subb
popf
shll
mull
insb
mov
shll
xchg
fistpll
stos
fstl
imul
pop
sub
inc
rep
popa
jo
movsb
adc
loope
mov
sub
cmp
jmp
cwtl
cmp
shrb
xchg
xorb
push
cmp
ja
or
mulb
mov
jo
test
call
sub
push
adc
js
push
pop
sub
enter
add
ds
hlt
test
subb
jmp
mov
int3
mov
rcrl
dec
lock
shrl
imul
mov
shlb
movsl
dec
push
push
inc
push
dec
sub
test
out
xchg
mov
sub
or
push
aam
cs
push
sub
shll
mov
das
bound
out
popf
cltd
xchg
mov
insb
adc
lret
jg
mov
or
cmp
ja
inc
imul
test
sub
fcmove
sbb
psllq
adc
sbb
inc
dec
rolb
add
pop
fbstp
and
stos
pop
cmp
pop
add
xchg
stos
mov
xor
lock
and
add
cmc
fidivl
les
dec
lcall
aaa
bound
mov
and
jmp
arpl
mov
mov
adc
inc
sbb
enter
jecxz
insl
lret
jo
adc
xlat
jge
add
in
pop
imul
push
push
rol
inc
mov
cltd
jmp
sbb
xchg
cmp
leave
repz
or
test
call
push
or
hlt
sbb
leave
sti
sub
push
lock
hlt
test
nop
out
and
pop
inc
add
gs
aad
cmc
dec
mov
push
adc
lcall
aas
jge
jecxz
pminub
aas
sbb
loope
jb
mov
scas
mov
popf
loopne
dec
lods
pop
loop
xor
lods
push
and
pop
and
xchg
dec
pop
inc
cmp
jo
mov
sahf
jbe
jnp
in
or
pop
addr16
inc
call
fldcw
out
les
movsl
cld
pop
xchg
mov
xor
xchg
push
jmp
lods
sub
iret
rcrb
lods
ret
push
xchg
into
push
sbb
sub
jle
push
lds
outsb
rcr
insb
pop
mov
icebp
pop
sub
mov
dec
dec
je
lods
pop
mov
push
mov
test
push
les
cmp
push
movl
pop
mov
jns
ja
sbb
dec
jp
icebp
push
mov
test
outsb
adc
push
push
inc
lret
and
pop
mov
jmp
sarl
or
imull
push
xchg
jmp
stc
mov
dec
ret
push
mov
test
xchg
mov
or
sti
fldl
or
out
adc
and
je
jns
std
ret
jbe
rolb
loopne
ds
jge
sti
xor
fistl
lcall
add
mov
xchg
out
mov
inc
mov
shl
add
stos
xor
scas
dec
stos
hlt
insl
push
mov
arpl
jne
in
sbb
rorl
jo
rorl
jmp
sbb
jno
xor
popf
ja
test
sti
mov
cmp
dec
outsl
push
mov
ja
daa
ja
orl
push
jns
mov
clc
xchg
dec
push
lret
and
jb
popf
fwait
call
stos
jnp
jbe
mov
leave
add
mov
lds
divb
stos
mov
jbe
sbb
jle
popf
sub
mov
push
push
in
gs
ja
or
ja
mov
mov
lods
xor
out
cmpsb
pop
fwait
mov
fnop
clc
and
adc
test
mov
inc
xchg
hlt
shl
daa
mov
bound
mov
popa
mov
xchg
mov
fst
fcomi
movsl
dec
inc
stc
lahf
rorl
xchg
jo
mov
adc
ficompl
sub
xor
popa
jl
aam
jbe
jge
loopne
cli
es
add
adc
adc
sub
call
xchg
ds
push
or
inc
mov
in
push
add
fildl
xorb
inc
jg
and
mov
data16
aad
lret
jmp
pop
sahf
push
lcall
pop
sub
dec
mov
stc
mov
cmp
imul
aas
lods
nop
lock
jl,pn
mov
mov
mov
movsb
xor
and
lods
dec
push
ds
ret
out
jo
jne
lahf
ja
sub
xlat
xor
mov
push
mov
stc
mov
inc
lahf
sub
jecxz
in
sub
xchg
mov
adc
and
loopne
stos
cmp
test
popa
mov
push
cmp
cmpsb
sarl
andb
push
stos
data16
pop
jne
cli
mov
shlb
pop
int3
sbb
mov
es
jb
dec
loopne
xorl
and
fs
xchg
shll
movsl
cmc
ret
mov
insl
and
mov
dec
push
jnp,pt
cmp
fsubrl
ja
inc
sbb
test
mov
mov
loopne
dec
sbb
and
and
adc
sbb
push
mov
les
std
loope
lret
cmp
jns
mov
pop
or
imul
stos
lock
shl
push
popf
test
and
pop
adc
lea
cmp
int
sbb
sti
adc
call
cmpsl
ficompl
cld
into
sbb
add
ja
jno
xor
lea
div
outsb
cmp
subl
xor
das
fldcw
or
lret
or
xlat
aad
jge
dec
es
push
in
lret
pop
jmp
add
fwait
lods
fisttpl
jnp
dec
out
in
inc
mov
xchg
insb
xlat
add
test
adc
dec
popf
insl
scas
into
dec
push
or
sbb
xchg
iret
jl
jmp
cld
adc
dec
jmp
fcoml
cmc
cld
insb
cli
arpl
test
add
fwait
adc
in
loope
jmp
popa
cmpsb
loopne
dec
sub
add
call
in
cltd
or
add
mov
add
xor
inc
add
daa
cli
std
addr16
in
and
and
xchg
push
lds
push
xlat
xchg
mov
dec
test
ljmp
mov
jl
dec
and
xor
rcr
out
in
daa
addb
mov
mov
loope
mov
lods
sub
call
inc
sbb
jg
je
jmp
pop
add
cld
jmp
xchg
xchg
ss
push
shll
sbb
jge
fwait
test
and
repz
stos
mov
test
out
sub
notb
rep
inc
mov
ss
das
jb
mov
mov
jp
hlt
scas
out
into
out
clc
ja
mov
cmp
cmpsl
cmp
mov
push
and
jle
ja
sbb
jmp
adc
mov
ret
outsb
int
into
cwtl
pushf
aad
fmull
dec
cwtl
pushf
jo
add
fwait
sub
push
scas
icebp
imul
lahf
jb
and
out
and
stc
xor
mov
dec
daa
sub
adc
cmp
insl
ret
into
jno
mov
mov
push
or
pop
sbb
mov
mov
sub
into
inc
data16
movsl
xchg
pop
movsl
xchg
pop
mov
mov
int3
incl
adc
fiaddl
aaa
sti
mov
insl
repz
inc
test
lret
ljmp
push
loope,pt
add
cmp
push
cmp
cmpsl
pushl
rorb
mov
hlt
add
icebp
fidivrs
out
mov
mov
movsb
mov
push
les
pop
daa
mov
imulb
fisubrs
in
or
sub
stc
pushf
add
movsb
inc
push
push
scas
cmp
adc
mov
pop
xchg
xchg
inc
aad
ret
sbb
adc
sub
stc
jne
add
mov
je
loop
mov
adc
test
lret
sahf
and
loopne
fcoms
mov
aas
cmp
or
push
iret
cmp
loope
adc
mov
int
lret
bound
mov
arpl
dec
mov
xor
ljmp
jl
bound
or
jl
sbb
mov
xor
dec
xchg
push
in
rcl
out
fcomps
repz
jo
inc
and
sub
movsl
inc
stos
adc
adc
xor
outsl
adc
std
lret
xlat
subb
decl
ja
nop
mov
adc
cmovbe
je
or
cwtl
shr
inc
repz
cmp
leave
ss
cmpsl
add
xchg
pop
mov
pushf
pop
push
mov
bound
pop
divb
push
shrl
call
fdivrl
test
lds
stos
and
push
inc
cmp
push
jb
dec
test
in
int
adc
jo
xchg
imul
sbb
bound
inc
ja
fistps
mov
adc
push
dec
stc
fisubl
inc
cld
add
aas
ja
out
in
pop
add
cld
test
testl
loopne
cmp
mov
cmp
push
sub
stos
pop
cmp
push
cmp
fs
pop
das
cmp
xor
flds
xchg
or
loop
push
sarb
fdivs
outsb
std
jbe
repz
xchg
insl
mov
xchg
dec
inc
call
cltd
push
pusha
pop
jge
lds
jo
call
test
aas
mov
jns
mov
xchg
rorb
scas
in
or
pop
jg
mov
inc
mov
rcrl
jnp
jp
pusha
or
test
xor
cmp
pop
rcll
and
mov
xlat
in
mov
cmc
add
lcall
inc
or
and
pop
inc
sbb
mov
jmp
es
adc
dec
xchg
mov
daa
icebp
cwtl
les
mov
ja
movsl
and
jne
mov
icebp
je
mov
add
pop
dec
jge
dec
rcll
dec
push
xchg
add
cmp
ret
xlat
icebp
xor
int
cwtl
call
pop
lods
jbe
or
mov
addr16
ret
in
inc
shl
call
mov
mov
pop
lret
aad
dec
movsb
cld
aad
out
scas
imul
sbb
push
into
std
xorl
cmp
shl
sbb
lock
shlb
movsb
sbb
cs
xchg
push
jo
leave
cmp
sbb
lret
and
push
push
fidivl
xor
repnz
mov
loopne
fs
loopne
sbb
in
adc
jp
sbb
clc
add
mov
push
mov
insl
mov
jo
xor
hlt
sbb
inc
cwtl
push
inc
test
dec
sub
inc
sahf
jmp
jle
xor
dec
sar
mov
or
scas
dec
xchg
or
lds
ret
mov
mov
cmp
std
add
pop
pushl
jmp
mov
xchg
or
push
or
push
jmp
lahf
add
sub
shlb
js
iret
mov
jbe
mov
ljmp
out
dec
fldt
sub
bnd
repnz
sbb
test
xlat
in
test
pop
lods
loope
inc
cmpsl
je
push
cltd
lods
mov
mov
ficoml
out
or
push
outsl
cld
push
xchg
xchg
jg
mov
or
push
xchg
lcall
push
les
pop
fdiv
jmp
lods
mov
mov
std
jns
les
mov
into
fnstenv
push
jg
outsb
mov
jns
sti
addr16
jb
rcll
sbb
es
mov
call
insl
or
popl
insl
mov
inc
mov
push
xor
outsl
push
jl
jo
push
orl
out
ds
mov
mov
push
cwtl
push
int
xor
pusha
mov
add
daa
inc
outsl
xchg
pop
fs
lcall
push
insl
bswap
lea
adc
push
push
mov
ja
pop
mov
in
scas
mov
fs
idivl
mov
pushf
scas
lea
sahf
test
add
ljmp
xchg
imul
in
rcl
xchg
enter
sbbl
xlat
add
sub
xlat
das
ja
fwait
xor
popf
sbb
xor
cwtl
loopne
or
xor
mov
inc
mov
pop
push
mov
xchg
push
pop
jecxz
sti
nop
imul
je
jbe
cmp
mov
scas
in
jae
push
fnstcw
xchg
push
adc
xchg
shrl
shrl
inc
cwtl
xchg
gs
mov
or
fisubs
add
xchg
shll
mov
ret
sub
cwtl
sbb
inc
push
push
add
sub
insb
not
mov
insl
test
pop
jmp
stos
cs
and
sub
mov
fwait
negb
and
lods
repnz
dec
add
cmpsl
xor
or
adc
jbe
repnz
fwait
xchg
xor
fiaddl
jbe
lea
lods
push
xor
scas
sahf
test
loopne
fcomip
inc
les
test
lret
sub
mov
ja
jmp
dec
mov
scas
das
je
sti
and
add
stos
mov
jge
loop
sub
xchg
or
hlt
xchg
addr16
pop
xor
arpl
cmp
shl
rolb
xchg
jecxz
out
dec
jg
test
mov
and
out
add
arpl
int
fwait
rcr
sahf
push
cmp
decl
jno
mov
mov
into
data16
mov
mov
xor
cmp
sbb
sar
jg
ja
lcall
sbb
mov
jg
in
clc
sbb
cmpsl
call
testb
mov
mov
data16
lret
mov
inc
mov
mov
clc
adc
mov
push
cld
cmp
xchg
dec
jecxz
movsb
or
scas
cli
in
jae
xor
int
mov
mov
inc
lea
cmp
das
sub
mov
mov
cs
out
lock
les
push
xchg
sub
xchg
jle
or
aaa
sbb
xchg
test
push
push
mov
inc
mov
mov
jl
xor
xor
cmp
or
xchg
push
lea
aam
mov
es
nop
orb
lcall
cltd
hlt
lcall
cmp
xchg
out
xor
rcrb
jne
sbb
jmp
xchg
lock
repz
cmp
mov
jg
mov
adc
mov
addr16
xchg
jns
or
mov
rol
xchg
clc
addr16
pop
jbe
lock
jge
and
mov
popf
leave
scas
or
int
ds
inc
pop
adc
pop
and
clc
jb
xchg
dec
notb
adc
stos
sub
arpl
stos
imul
aas
popf
daa
movsb
adc
mov
sub
cltd
inc
inc
mov
push
add
adc
pop
xor
jb
pop
stc
daa
out
jbe
adc
add
adc
add
lods
mov
pop
aad
adcb
dec
and
popf
pop
pop
test
xchg
aad
shrb
aaa
pmuludq
sbb
inc
dec
mov
insl
mov
outsb
xchg
rcll
aad
push
mov
add
loopne
stos
orl
addb
inc
mov
ss
mov
mov
mov
push
adcl
cli
mov
xchg
or
mov
dec
test
add
add
cmpsb
loopne
sbb
push
das
lcall
sbb
mov
rorb
inc
cli
and
cmp
cmc
cltd
sub
xchg
pop
push
repz
ficoms
out
lock
push
popf
push
lret
lahf
popa
cmpsl
test
test
lods
ss
mov
test
mov
mov
add
mov
mov
sbb
pop
cltd
repz
movsb
loope
jl
stos
sbb
xchg
add
loope
stos
aaa
iret
mov
pop
ja
jp
push
js
ret
push
sbb
inc
mov
add
sbb
call
dec
ret
pushf
inc
rcrb
xchg
aas
xchg
popf
icebp
sbb
dec
mov
les
das
push
cmc
dec
sahf
mov
and
sbb
xor
dec
fldenv
cmc
and
cs
leave
clc
rcrl
daa
or
ficoms
scas
mov
fimuls
sahf
add
das
mov
inc
add
mov
and
xchg
cs
jle
mov
push
dec
xor
or
add
pop
ret
fmull
fildl
lcall
push
pop
pop
enter
pop
push
or
mov
mov
iret
lret
js
hlt
jecxz
insb
mov
jle
lea
mov
shl
adcb
push
push
repz
out
sbb
jb
fs
dec
and
dec
cmp
xchg
orl
xchg
enter
xchg
outsb
or
dec
lds
pushf
icebp
pusha
and
sub
sub
movsb
and
mov
in
scas
xchg
sarb
sbb
dec
mov
sub
out
ficoms
and
dec
sub
and
mov
xchg
cwtl
cltd
das
mov
fcompl
adc
mov
dec
rcl
jmp
mov
fdivrl
add
mov
stc
jns
mov
aad
mov
push
sub
push
cs
and
icebp
aas
outsb
inc
pop
lock
nop
call
cmpsb
and
orb
adc
popf
and
cmp
mov
int
cs
ret
mov
ds
inc
js
imul
dec
inc
jo
repnz
mov
and
xchg
and
xor
ja
movsl
fwait
dec
popa
loop
pop
push
mov
jbe
push
cmpsl
popf
inc
push
xor
jns
adc
inc
jnp
mov
dec
mov
ja
adc
nop
mov
xchg
test
pusha
adc
or
das
xchg
je
test
lret
stc
out
mov
xor
test
adc
jg
or
test
jo
mov
add
lods
sub
int3
out
and
jge
lahf
jno
addr16
cmp
jno
test
pop
push
adc
pop
fnstcw
or
xchg
je
leave
repnz
nop
dec
cli
or
mov
out
sub
cmp
push
hlt
ss
add
dec
sti
pop
stos
cltd
jbe
push
mov
cmp
sti
sti
push
ss
arpl
test
ja
inc
sarl
imul
jle
je
jae
mov
cmpsb
jmp
std
add
stos
push
outsb
sbb
inc
out
fmull
adc
popa
cmp
cs
lea
ja
and
xchg
inc
int
pop
add
lret
push
dec
call
push
xor
push
cmp
xor
inc
ficompl
in
xor
ret
mov
in
sub
push
mov
inc
fisubrs
into
xchg
out
mov
mov
and
cmpsl
mov
and
pop
outsb
and
push
test
push
cmp
outsl
xor
imul
int3
cmpl
lret
testl
adc
scas
sub
mov
push
leave
mov
push
dec
aam
cmp
cmc
push
or
std
shll
lcall
and
out
dec
test
xchg
loop
jbe
movsl
repz
outsb
sub
or
xor
adc
adc
movsb
mov
sub
icebp
lock
stos
inc
jge
pop
rorb
in
rolb
aam
adc
out
inc
es
shlb
push
test
ror
out
adc
popa
sub
scas
fistpl
sub
cmp
movsb
push
mov
add
dec
ret
mov
xchg
xchg
xor
test
push
mov
push
out
sbb
mov
dec
subl
pushf
adcl
stos
dec
ja
push
mov
sbb
adc
mov
cmp
dec
fists
and
push
loope
int
inc
or
test
xchg
or
pushf
nop
and
shlb
xchg
aad
sub
iret
lds
xor
sbb
mov
loop
dec
stc
rorb
mov
mov
dec
and
sti
sbb
mov
or
lret
and
es
xchg
mov
ss
adc
stos
push
xchg
pop
push
stos
enter
jecxz
arpl
fiaddl
cli
xor
add
repnz
cs
les
pusha
out
mov
pushf
sub
sbb
repz
xlat
les
loop
jbe
or
out
or
jo
cli
call
mov
inc
outsb
outsl
mov
loope
sub
mov
push
or
xchg
mov
xor
cmp
rclb
or
mov
test
inc
mov
int
mov
not
cmp
rcrl
int
or
dec
filds
addr16
sbb
and
sub
xchg
test
cmpsb
mov
or
add
sub
in
jno
pop
xchg
icebp
inc
sbb
xor
stc
int
mov
pop
jecxz
cli
inc
push
popa
fmuls
add
std
lods
mov
sub
xchg
fs
sbb
aaa
mov
cmp
test
xchg
in
std
push
fmull
or
lea
dec
jmp
mov
mov
loope
xchg
js
push
imul
add
xchg
push
in
push
pop
lock
pop
xchg
add
pop
lret
addr16
pop
lock
jne
pop
out
jnp
stos
loope
push
test
and
add
xchg
push
lock
shl
pop
shll
mov
or
mov
cmp
adcb
stos
mov
sub
jae
fnstsw
mov
das
stos
lds
addr16
sub
mov
xor
mov
aad
fdivp
adc
and
insl
in
addr16
push
je
dec
ja
out
push
rolb
repz
xchg
xor
sbb
mov
loop
cmpsb
mov
adc
and
sbbl
lahf
dec
aaa
jl
sbb
jne
and
in
add
cli
cld
xor
ja
mov
or
add
xchg
xor
push
stc
icebp
clc
push
sub
leave
das
rorb
xor
into
addl
cmp
outsl
cmp
pop
cmp
fwait
aaa
inc
mov
mov
cs
fbstp
ficomps
inc
jcxz
xchg
je
fldenv
fstpt
loopne
push
fwait
adcl
ds
scas
pop
xchg
cmp
inc
push
cmp
stos
jbe
or
daa
data16
hlt
sub
aam
jbe
imul
cmp
pop
jbe
inc
mov
pop
jo
xchg
insl
fsubr
in
fcomps
cltd
pop
lock
roll
in
paddusb
pop
xor
push
inc
stos
dec
out
ret
pushf
out
dec
jge
push
std
sbb
cmp
divb
cmp
out
xchg
out
or
lret
push
push
fcompl
leave
and
ret
mov
mov
xchg
mov
sbb
mov
xchg
cltd
jne
mov
imul
push
bt
jecxz
sti
aaa
insl
sub
sbb
mov
cmp
pop
cmp
mov
lods
rclb
ret
stos
or
add
orb
sbb
andb
bound
cmpsl
out
loope
mov
loopne
pop
into
divb
loope
sbb
fisubs
cli
adc
mov
xor
inc
lock
lods
fildl
xor
jns
adc
mov
xor
pop
or
in
mov
loopne
and
cmp
jge
mov
mov
pop
sbb
xor
sub
jle
or
ss
xchg
jne
dec
or
or
scas
jle
mov
sub
loopne
sub
cmc
push
dec
xchg
pop
pop
add
loope
aam
mov
or
orb
push
into
jge
js
fwait
mov
cld
push
out
mov
xor
stos
mov
sbb
cwtl
in
sub
sub
inc
cs
je
mov
xchg
popa
inc
mov
jae
insl
add
sbb
mov
inc
jno
gs
loopne
ret
mov
jle
jmp
test
adc
jae
dec
xchg
ret
or
cmpsb
negl
dec
push
dec
ja
cmc
push
inc
scas
in
jne
sub
imul
repnz
or
filds
sub
jae
push
pop
add
push
jl
arpl
mull
push
rorb
inc
imul
cmc
sub
push
xchg
out
lcall
mov
mov
adc
aaa
jmp
xor
push
push
push
fnsave
jg
mov
icebp
sub
cmc
scas
sub
cmp
push
test
push
cs
push
mov
xor
mov
pop
movsb
adc
inc
xor
adc
fwait
mov
jae
sub
push
fisttpl
pop
clc
daa
cld
push
push
jbe
xor
lods
loope
xor
dec
lcall
xchg
mov
jae
out
out
or
push
mov
popf
mov
push
mov
decl
xor
clc
ss
aaa
in
cli
test
icebp
pop
and
popf
movsb
sbb
dec
les
in
fidivs
or
inc
push
push
lods
cmp
hlt
jg
pop
jmp
fucomi
ret
in
jns
cmp
or
push
lcall
rorl
fs
add
movsl
push
loopne
sahf
lock
int
jl
stos
push
jnp
xlat
mov
loop
fcmovbe
in
mov
jno
das
lcall
pop
or
fidivrl
or
fisttpl
add
push
shlb
or
js
and
pop
inc
mov
out
push
mov
push
pop
lahf
or
lods
pop
shll
cmpl
std
sub
enter
sbb
negl
adc
add
adc
popa
lahf
push
imul
fwait
pushf
scas
push
loope
sarb
gs
gs
sbb
xchg
insl
pop
jae
adc
add
and
cmp
mov
mov
popa
adc
cmove
cli
out
insl
xor
push
dec
xchg
ret
cli
call
push
push
cmp
rcll
stc
push
frstor
mov
sub
pushf
dec
xchg
fldl
dec
xchg
insb
jne
sbb
jecxz
pushf
ja
mov
shlb
fadds
add
cmp
push
sub
mov
es
adc
jecxz
std
sarb
mov
inc
clc
inc
int
dec
mov
out
test
out
outsb
shr
cli
mov
scas
out
sbb
mov
iret
jo
js
push
add
add
sarl
jecxz
sub
imul
scas
repnz
sub
cli
push
jne
add
mov
mov
mov
mov
add
cmpsb
pop
cmpsb
inc
pop
jb
mov
icebp
pop
imul
dec
sbb
push
hlt
pusha
jne
mov
std
adcl
ja
adc
aas
lods
sahf
xor
dec
add
sar
cmp
jae
and
xor
inc
pmaxub
test
xor
lods
lods
fdivr
inc
inc
shll
sbb
ja
or
or
and
cmp
sub
xor
out
out
ret
cs
cmc
jo
out
lock
addr16
dec
hlt
into
test
pop
mov
int3
inc
xor
push
movsl
testl
in
jle
xchg
and
jmp
mov
jmp
mov
push
or
cmc
adc
lret
xchg
test
insb
or
jl
pop
jne
add
dec
add
lahf
ja
dec
cli
jno
jp
das
jl
cmpsb
fimuls
iret
and
in
adc
jbe
xchg
add
cmp
add
jae
dec
jnp
push
shll
addr16
or
test
lret
and
cmpsl
and
shlb
test
push
mov
in
mov
dec
fildl
sbb
fisubs
or
lret
cmp
call
jl
aaa
outsl
push
mov
in
jnp
outsl
sbb
mov
sarb
rol
xor
mov
and
hlt
mov
push
pop
xchg
mov
mov
xor
loopne
jp
outsb
cmp
into
sbb
les
arpl
lcall
add
stos
mov
gs
lds
test
or
repz
not
cmp
std
aad
insl
loope
dec
lds
mov
pop
mov
or
inc
xchg
pop
push
into
addr16
fsts
jecxz
les
fildl
jecxz
repnz
jae
push
out
test
insl
addr16
mov
or
rorb
into
mov
in
std
sub
aam
adc
insl
inc
leave
pop
xor
jns
xchg
cmpsb
roll
push
jp
out
mov
pusha
sbb
jo
jg
enter
or
push
fidivl
mov
mov
xchg
inc
sub
movsb
popa
loop
lahf
pop
loope
iret
repz
int3
xchg
cmpsl
jbe
dec
mov
nop
fcomi
push
les
and
or
mov
jmp
enter
jge
adcb
in
ja
xor
inc
xchg
or
cmp
inc
imul
icebp
xchg
mov
lcall
cltd
sub
sbb
mov
adc
mov
out
pop
cmp
les
dec
or
mov
xchg
fwait
sti
jno
fnstcw
cs
mull
arpl
stos
mov
jbe
popf
scas
adc
mov
daa
frstor
mov
jecxz
fadd
loope
cmp
add
pop
lea
xchg
repnz
sub
fcmovb
sub
jecxz
mov
cmpsl
pop
rorl
fadds
aas
loop
std
fnstsw
fidivs
push
mov
mov
mov
pop
pop
cmp
inc
movsl
lock
popf
inc
insl
mov
sub
aam
sub
mov
pop
std
xor
push
dec
mov
sti
ficompl
and
jnp
xchg
out
int3
sbb
js
fs
shlb
mov
clc
inc
movsl
pop
push
cld
std
mov
rcrb
stos
mov
and
xor
addr16
fidivrs
stc
leave
mov
mov
in
xor
inc
mov
enter
popa
stos
push
loope
ds
push
sbb
pusha
dec
pusha
notb
mov
insb
pop
and
push
repz
mov
cs
fld
and
cs
out
insl
cwtl
daa
inc
pushf
pop
mov
test
out
mov
xchg
xlat
mov
push
dec
testb
fsubrs
mov
aaa
rorb
movsl
jno
push
mov
cmp
sub
stc
jno
cmc
or
repnz
jge
test
lods
add
fcoml
call
icebp
iret
rcrb
or
pop
into
xchg
divl
dec
sub
or
and
jp
jne
ret
xor
divb
adc
je
mov
and
pop
sbb
dec
jg
bound
push
xchg
push
mov
out
aas
clc
shrb
mov
add
repz
mov
cltd
dec
or
outsb
jo
cltd
dec
fwait
cmpsb
pop
aas
push
pop
jl
lock
lock
mov
in
pop
stos
jne
mov
xor
je
push
je
and
into
mov
push
mov
pop
mov
push
mov
push
and
test
iret
cs
es
dec
add
dec
add
xchg
xchg
xor
jbe
imul
mov
inc
or
mov
adc
leave
pop
aas
sub
repnz
sub
les
xor
push
inc
cmpsb
mov
push
inc
inc
push
jno
dec
ss
dec
dec
jb
add
push
xor
faddl
hlt
or
mov
fwait
pop
sahf
fnstenv
push
sbb
sbb
pop
lods
fs
mov
inc
test
pmulhuw
pop
sbb
sub
add
cli
insb
fidivrs
or
cli
dec
mov
xor
push
aaa
jne
and
cmpsl
xlat
push
pop
push
xchg
push
cltd
imul
fs
mov
pop
incb
xor
pop
or
sbb
jg
sarl
or
int
inc
mov
cmp
sbb
pop
adc
adc
jg
mov
add
pushf
nop
jo
jne
jecxz
inc
cmp
cwtl
ljmp
loope
rolb
and
jnp
add
mov
sub
pop
rcrl
clc
inc
push
das
dec
inc
jmp
xchg
or
mov
data16
repz
fnsave
sbb
dec
fmul
pop
ljmp
jbe
adc
sbb
pusha
inc
cltd
inc
lcall
jno
hlt
and
ljmp
dec
fcompl
dec
movsl
ficoml
jge
ret
mov
push
and
popa
in
push
js
inc
movsl
iret
mov
outsl
div
lcall
xor
int
ljmp
movsb
call
or
stc
mov
dec
xor
loope
push
dec
out
and
orl
lcall
mov
aas
and
call
xchg
in
jmp
inc
out
mov
les
fiaddl
and
and
push
add
add
ss
cwtl
push
or
sub
xchg
cmp
jne
in
shrb
imul
frstor
and
pop
mov
jbe
mov
sub
xor
sti
inc
xchg
rorl
push
sti
daa
mov
sbbb
cltd
std
enter
int
call
int
pop
mov
inc
sub
mov
sbb
mov
pop
add
mov
mov
sub
lcall
cmp
les
push
inc
mulb
dec
cmp
add
fcmovb
sbb
inc
testb
pop
inc
adc
lea
lcall
mov
cltd
dec
loope
sti
cld
jg
lea
daa
jo
dec
sbb
mov
daa
scas
mov
gs
pushf
and
fldl
xchg
push
test
in
mov
aad
js
mov
jp
test
and
push
push
hlt
push
rclb
pop
adc
pushl
sbb
jl
in
inc
push
clc
or
lea
arpl
es
aad
rcrl
inc
push
pop
xchg
push
shrl
insb
and
out
pop
dec
mov
sub
dec
cld
cmp
mov
icebp
mov
test
pop
push
xchg
or
jo
inc
xor
mov
jl
jb
add
ss
xor
mov
dec
repnz
or
and
pop
subl
and
xor
aad
mov
lods
jns
addr16
ret
sti
mov
pusha
shlb
cmpsb
push
leave
sub
push
jg
push
push
dec
arpl
mov
dec
add
insl
dec
es
les
sbb
call
xor
div
jmp
cwtl
xchg
ffreep
mov
jae
push
out
jns
dec
jg
fidivrs
push
icebp
push
pop
mov
push
jmp
into
mov
mov
xchg
out
shlb
push
hlt
dec
sbb
nop
int
lret
jo
lods
frstor
mov
add
call
sub
hlt
jno
jb
fs
stos
dec
dec
je
add
jp
add
dec
add
xorb
push
sub
pop
mov
push
xor
adc
or
lret
scas
data16
cmpsl
in
fs
in
ja
in
push
inc
cmpsl
pop
adc
cmc
cmpsb
or
xor
popa
pop
leave
push
and
mov
cwtl
sbb
push
std
insl
daa
repnz
outsb
jle
pop
dec
mov
jb
ds
bound
mov
cltd
js
jl
pop
pop
mov
mov
mov
jno
arpl
push
xchg
jle
aam
loop
je
dec
scas
xchg
and
testl
cmp
add
xchg
jnp
push
jb
cmp
mov
pop
jecxz
fnstcw
loop
adc
mov
arpl
mov
incb
sahf
insl
ljmp
pop
pop
jnp
xor
lret
xor
roll
cwtl
and
inc
pop
jl
shll
int3
les
adc
lods
lret
stc
inc
fsubrl
sub
push
aam
loopne
mov
adc
js
dec
xor
push
xor
ljmp
fwait
mov
lock
popf
orl
aas
std
cwtl
rorb
cmp
xchg
ret
imul
ss
js
xchg
arpl
mov
insb
push
punpcklwd
out
icebp
loope
outsb
add
and
out
sub
sbb
inc
adc
adc
js
icebp
stc
jge
adc
xor
rorb
jns
arpl
push
mov
mov
cli
inc
lds
ror
dec
sub
outsl
out
dec
fsubrl
outsb
js
and
pop
cmp
xchg
push
popa
xor
loop
fs
inc
aaa
lock
mov
test
xchg
push
sub
jns
scas
cltd
mov
daa
xchg
push
cld
dec
mov
add
out
jbe
push
add
or
aam
and
cltd
inc
mov
or
jne
notl
addr16
inc
lret
dec
inc
fxch
sahf
dec
les
or
gs
js
loop
mov
pop
ljmp
lea
add
inc
sub
shrl
jbe
cmc
in
add
ljmp
mov
inc
xchg
push
fistpl
cmc
or
dec
cmp
inc
cwtl
sahf
rcrl
mov
push
gs
sbb
popl
mulb
xchg
jb
sbb
lock
shrl
push
mov
and
xchg
mov
std
xor
jge
icebp
or
mov
sub
add
popf
int
or
cmp
jne
mov
into
lcall
jg
mov
fwait
push
aad
pusha
mov
lret
jle
aad
fsts
sub
pop
jnp
xor
leave
fnstcw
jmp
lods
or
jns
cmp
and
mov
mov
add
das
jmp
addr16
jo
jl
imul
push
outsb
mov
mov
movsl
jmp
push
dec
data16
iret
cmpsl
inc
adc
imul
pop
xor
fwait
iret
fwait
push
lock
pop
and
inc
xchg
mov
sbb
arpl
lds
cmp
adc
cmp
lods
imul
mov
enter
mov
sub
mov
shll
add
into
out
dec
ret
loopne
xchg
stc
push
shll
dec
aam
scas
add
pop
inc
mov
jne
mov
mov
bt
dec
mov
leave
imul
push
xchg
and
ret
push
sbb
insb
out
andl
enter
mov
mov
inc
mov
sbbb
outsl
add
iret
bound
lock
mov
ds
movsb
dec
insb
xchg
xorb
dec
int
mov
jle
pop
loope
cwtl
and
mov
push
push
rol
icebp
dec
push
dec
adc
into
je
mov
out
mov
dec
sub
and
dec
push
mov
test
xchg
jge
lea
ud1
jns
adc
fsubrl
jae
incb
loop
jne
lret
sbb
jo
jl
adc
fiaddl
push
cmp
dec
in
push
sub
xor
inc
inc
cltd
adc
mov
jnp
dec
pop
sub
inc
mov
cmp
xchg
out
xchg
out
pop
mov
les
les
sub
inc
rorb
adc
lret
test
xor
push
fstl
jb
adc
sub
mov
lods
push
mov
nop
aad
std
adc
lret
cmp
and
xchg
sahf
dec
fbstp
push
repnz
jno
test
cwtl
daa
push
or
cmp
pop
adc
xchg
scas
lea
stc
call
orl
mov
adc
pop
dec
sbb
mov
lods
lcall
xchg
clc
fmulp
xor
fmul
push
pop
mov
rcrl
in
push
pop
js
jge
mov
add
and
mov
mov
add
fmul
sub
inc
cmp
vpmadcswd
and
iret
int
lods
xchg
inc
shlb
mov
ret
mov
add
icebp
stc
xor
xchg
aam
jp
and
sbb
sub
bound
inc
rcrb
jnp
aas
cmpsl
ret
xchg
pop
jo
insl
out
in
sbb
or
inc
nop
cmpl
or
jecxz
mov
stos
pop
les
lods
or
add
outsl
push
mov
sbb
not
inc
andl
mov
cmp
push
mov
into
cmpl
push
mov
pop
es
mov
jnp
xchg
in
pop
or
je
sub
lea
sub
push
out
iret
insb
adc
jae
bound
add
rol
ds
data16
call
loopne
add
dec
je
mov
mov
cmpsb
in
mov
pop
ljmp
clc
loop
leave
adc
fwait
xorb
sahf
jae
or
out
push
enter
nop
sti
pop
hlt
mov
ret
or
je
shlb
aaa
imul
sbb
jno
sub
mov
fucom
cli
push
dec
les
add
mov
loop
cltd
mov
mov
xchg
jp
insb
jecxz
and
push
scas
jbe
ljmp
mov
lods
movsl
dec
inc
ficomps
adc
fwait
cmpsl
test
cmp
cwtl
sahf
push
or
sub
pushf
add
mov
gs
push
cli
fnstenv
push
add
popf
xchg
mov
sbb
dec
push
std
mov
test
test
jle
fistps
clc
and
hlt
sbb
xor
in
ja
hlt
frstor
test
shl
test
and
mov
int3
frstor
cmp
fbld
loope
test
mov
push
jle
xchg
add
mov
fwait
fwait
lea
gs
lds
sub
cmpsb
imul
xchg
sbb
inc
push
or
or
das
and
jmp
popa
fistpll
cli
ficomps
mov
dec
cmp
std
xchg
xor
rorb
xchg
test
cmp
stos
lcall
pushf
or
add
push
mov
jle
aam
cwtl
out
movsl
inc
mov
pop
and
stos
lods
insl
push
dec
mov
push
push
inc
sbb
fsub
pop
daa
mov
adc
lods
mov
mov
ja
cmp
mov
push
fists
and
mov
xor
xor
mov
inc
push
add
jmp
pop
xor
jmp
sbb
fcom
add
lret
lret
cmp
or
sbb
insl
repz
lock
xchg
dec
stc
xor
and
lahf
mov
in
outsl
into
pop
aaa
cmp
cli
jmp
sbb
or
cs
mov
mov
dec
fistps
loopne
mov
icebp
lods
aas
ret
add
call
jg
pusha
daa
jg
stos
imul
mov
shl
lods
cmpb
dec
call
pop
adc
frstpm(287
in
mov
repz
ret
les
adcb
out
mov
add
test
push
les
ficompl
out
xlat
fisttpl
mov
push
xor
cmpsb
jl
faddp
mov
xlat
xor
mov
loopne
push
dec
sbb
jne
pop
push
shll
fldl2e
dec
adc
add
or
mov
call
sub
test
pop
test
push
xor
xor
mov
cmp
sub
pop
popf
inc
xchg
es
mov
mov
cmc
loopne
adc
fisttpll
imul
out
les
into
push
sbb
mov
push
ja
inc
popf
inc
cmp
xor
adc
pop
fdivr
mov
leave
cwtl
mov
mov
xorb
shl
jg
sub
mov
and
xchg
test
mov
lcall
mov
fldcw
jmp
sub
pop
mov
aam
pop
push
movsl
dec
cmpsb
cli
mov
lret
adc
push
push
lds
js
or
lods
int
adc
test
movb
mov
mov
push
and
xchg
jns
sar
jo
dec
cmp
sub
or
xchg
cmpsb
inc
xchg
pop
popf
and
cmpsb
iret
jno
fmuls
testb
xchg
dec
xchg
mov
es
xor
and
into
ret
inc
push
xlat
int
add
and
dec
out
in
lods
jmp
mov
or
es
xchg
xor
orl
test
add
clc
jl
mov
pop
mov
rcrb
scas
push
sbb
xchg
fcomps
shll
clc
call
or
mov
xchg
iret
out
std
mov
cmp
and
jl
lahf
cltd
ljmp
pop
mov
jnp
test
mov
mov
outsl
or
adc
mov
mov
lods
jle
insl
inc
jno
lods
pop
dec
cmp
sbbb
push
pop
sbb
mov
push
cli
pop
out
xlat
fs
sahf
cli
xchg
mov
in
sbbb
jo
test
in
push
aad
mov
xor
lods
std
movsb
clc
out
repz
out
fcmovu
clc
xchg
iret
inc
cmpsl
loope
daa
push
ss
lea
xor
call
push
lods
sub
pop
cmp
jno
ja
xchg
ja
push
out
pop
mov
decb
sbb
inc
sbb
jne
mov
push
mov
jb
out
xor
or
popa
xor
xchg
and
and
bound
mov
sub
jg
js
fisubrl
jae
and
pop
in
in
pushf
test
fbstp
xchg
leave
jge
add
pop
sbbl
push
mov
adc
jae
aas
mov
mov
xchg
and
xor
add
in
xchg
test
inc
add
push
movsb
addr16
dec
jmp
faddp
leave
int3
adc
jo
jp
fcmovbe
pop
cli
lret
adc
jnp
lret
jmp
lock
aaa
push
fstps
loop
or
jns
outsb
outsl
dec
xchg
sbb
and
std
test
in
pop
popa
xor
aaa
pop
fmull
add
push
mov
rcrl
scas
lock
mov
aas
ja
ror
mov
pop
dec
inc
shll
xchg
inc
inc
call
adc
mov
xchg
xchg
nop
dec
addb
ret
xchg
fadd
pop
cmc
movb
cli
add
insl
mov
test
js
in
push
clc
pop
cmp
xor
xchg
out
ret
push
aam
repnz
jno
lds
mov
push
in
mov
imul
gs
leave
or
jns
jno
sub
adc
je
mov
pop
xor
scas
adc
sub
ret
enter
sub
movsl
xor
adc
push
pop
out
mov
cmp
std
add
sbb
and
rcrl
shll
dec
xchg
in
mov
cld
and
mov
xor
hlt
icebp
test
xlat
jmp
fs
out
icebp
mov
aam
outsl
mov
movsl
mov
das
in
mov
pop
movsl
sbb
xchg
pop
sub
adc
cmp
shl
jo
push
aam
sbb
fadds
cmp
push
stos
mov
push
mov
stos
add
or
arpl
dec
fs
fwait
cmpl
xchg
fbstp
test
sub
adc
lret
jae
jbe
out
roll
inc
jecxz
sub
and
pushf
aad
repz
scas
loope
push
push
inc
mov
mov
push
sarl
cmpsl
pop
icebp
adc
cmp
inc
js
insl
inc
orb
mov
dec
add
fisttpll
cmp
push
js
push
insl
pop
sub
push
jae
inc
in
mov
inc
addl
adc
jns
rcr
xchg
dec
jmp
dec
les
daa
imul
movsb
adc
cli
jle
xchg
fildll
and
aaa
jecxz
and
aas
loopne
in
cmp
add
pop
xchg
push
mov
cmp
push
sub
jle
cs
xor
jmp
cmc
cmp
imul
shll
jl
jg
or
insb
mov
add
add
popf
dec
inc
dec
arpl
scas
mov
imul
or
stc
cltd
paddb
mov
shr
add
lret
xchg
xor
cmc
mov
push
mov
xchg
mov
dec
stos
or
add
insl
int
mov
dec
cmp
mov
jo
in
aas
jp
int3
rcrb
fucom
adc
mov
loop
pop
xor
jecxz
leave
push
repz
adc
sbb
add
mov
jb
inc
jb
mov
hlt
dec
loop
and
dec
insb
lahf
cmp
mov
fbld
sbb
dec
push
jne
mov
pop
xchg
idivb
cltd
lret
add
or
or
jg
xor
push
out
push
xchg
adc
repz
push
and
pusha
lock
dec
mov
mov
push
mov
into
sub
cmc
cltd
inc
and
sbb
je
into
popf
insb
fs
les
stos
dec
xchg
add
sub
xlat
int3
scas
and
xchg
and
push
test
dec
cs
push
rcrl
cmc
adc
jo
dec
shr
add
ds
xchg
jmp
aaa
js
and
xchg
sbb
or
gs
xchg
aad
dec
dec
psrlw
call
dec
int3
jg
outsl
xor
stos
pop
adc
enter
add
cwtl
mov
aad
das
add
mov
jecxz
aaa
and
add
das
jg
add
ss
dec
add
lret
pop
outsb
dec
rorb
push
jg
sbb
xchg
mov
enter
ljmp
repz
jnp
aas
mov
in
sti
sub
lds
pop
pusha
cmp
loop
pop
pop
xor
les
outsb
or
fldenv
sahf
stc
ds
pop
scas
pop
mov
or
sbb
pop
std
lods
mov
je
pop
lcall
mov
cmpsl
into
xor
jns
lds
mov
out
pop
shrl
cwtl
fnstcw
cs
pop
xchg
lret
sbb
test
or
mov
and
enter
in
ss
inc
fst
cmp
jmp
repnz
xchg
in
pop
sub
ja
outsl
iret
sbb
xchg
add
xlat
xor
rcrl
or
into
dec
inc
or
mov
push
in
or
dec
pop
push
mov
aaa
je
daa
xor
out
xchg
lods
dec
or
idivl
sbb
hlt
or
cld
push
adc
mov
jnp
fwait
mov
adc
inc
stos
repz
sub
and
test
xchg
mov
fbld
cwtl
fadds
test
ret
sbb
xor
mov
addr16
mov
adc
or
sbb
in
xchg
jl
gs
jl
fsubs
jecxz
lcall
in
aam
subl
add
xor
negb
repz
inc
cltd
fbstp
inc
ljmp
push
aam
cmp
mov
sub
or
dec
lea
fdivrs
test
clc
sbb
jno
ret
mov
lahf
push
lcall
insl
inc
mov
adc
inc
cmpb
cmp
lahf
push
sti
inc
cld
sbb
pop
subl
imul
sbb
pushf
in
enter
in
imul
out
push
add
sahf
orl
loopne
pop
mov
fstp
cmc
xchg
test
sub
test
push
jl
pop
fisttps
scas
icebp
aas
lea
jg
test
push
movsl
push
mov
xchg
fstl
jb
lret
cmp
sub
hlt
fistps
push
adc
fcomip
test
cmp
ror
mulb
jb
inc
and
addb
cmp
mov
xor
jmp
cmp
pop
nop
jb
dec
jmp
loope
xchg
inc
inc
mov
fisttpll
stos
inc
jbe
push
insl
xlat
loopne
out
inc
jae
lds
ret
pop
cwtl
sub
nop
xlat
jae
sbbb
ljmp
add
xchg
addr16
ret
xor
jo
movsl
xchg
adc
push
dec
out
js
sbb
push
ret
andl
cmpsl
mov
add
mov
test
hlt
adc
jo
mov
mov
pop
fdivrs
shrl
pop
jns
in
push
icebp
icebp
lret
movb
imul
cltd
mov
out
shl
mov
aad
pop
push
arpl
lea
and
loope,pt
jo
gs
clc
sub
jae
jbe
pop
or
jmp
cltd
push
data16
popf
insl
nop
lret
call
xchg
xchg
lea
push
into
mov
fs
add
mov
out
sbb
cmp
aad
cmp
int3
dec
insb
pop
pop
xor
xor
xlat
aad
dec
xchg
or
das
cwtl
lret
das
je
sbbb
addr16
mov
notl
mov
cmp
mov
sbb
lret
lods
and
xor
movsb
inc
adc
cli
ss
mov
or
out
xchg
push
jp
sub
int3
push
sbb
arpl
leave
roll
cmp
pop
or
jne
xchg
ret
sbb
rcll
inc
pop
and
mov
test
repz
ffree
stos
xor
inc
xchg
dec
or
fneni(8087
add
nop
jne
sub
inc
mov
sahf
add
mov
insb
adc
inc
stos
jnp
into
imul
insl
insl
leave
cli
pop
int3
and
sbb
mov
mov
dec
cltd
xchg
out
fcomp
and
mov
cld
inc
mov
sub
daa
aas
or
in
inc
xor
add
adc
jnp
clc
cmc
int3
rcl
cld
mov
inc
add
fcoms
mov
cs
push
or
cmp
xor
pop
insb
shll
cmpsl
cli
mov
int3
sub
jns
sbb
in
in
cmp
and
movb
xchg
leave
jnp
ret
fdivl
out
test
add
imul
push
cmp
shlb
fxch
fidivs
cmpsl
std
inc
leave
xchg
and
outsl
mov
shlb
sub
pop
pop
xchg
sbb
call
adc
ss
outsl
inc
pop
mov
mov
std
or
cmc
and
inc
sbb
adc
xchg
mov
inc
pop
lds
mov
std
icebp
and
sub
push
mov
pop
mov
pushf
dec
dec
sub
fistpll
stc
mov
push
mov
out
lret
roll
addl
jl
loop
push
shrb
outsl
pop
int3
sub
lods
int
fldl
sub
inc
dec
sub
lcall
inc
sub
mull
xchg
xor
push
mov
pop
push
adc
jge
adc
outsb
in
js
aas
xchg
xor
dec
idivl
xchg
push
xchg
pop
mov
lods
inc
movsb
lret
pop
loope
adc
arpl
add
mov
int3
es
incb
and
sbb
jle
xlat
dec
nop
test
push
ret
mov
push
xor
std
xchg
push
mov
fcmove
mov
fisubs
lret
ss
ja
push
cltd
jne
mov
ret
lret
pop
pop
adc
mov
xor
inc
sbb
or
in
push
adc
push
mov
mov
nop
outsl
or
jbe
jl
pushf
bound
dec
cwtl
je,pn
mov
adc
leavew
and
inc
icebp
and
lahf
push
mov
adc
xor
push
lods
bound
ss
pop
pop
adc
or
jb
ret
xor
pop
in
andb
mov
mov
imul
jae
cmc
xor
add
push
xchg
and
jbe
or
push
adc
push
movsl
add
jns
sub
sbb
sbb
sti
pusha
jecxz
cld
sbb
jmp
cmp
lds
adc
jge
lcall
and
sar
xchg
or
int
and
mov
cs
dec
into
stos
mov
leave
pop
adc
xorb
sbb
in
loopne
sti
sbb
sbb
push
sub
sti
cmp
inc
shrl
sub
mov
cmpsl
sub
pop
adc
dec
mov
mov
sahf
push
sbb
add
dec
pop
xchg
mov
out
sti
sub
je
mov
push
mov
adc
cli
ljmp
push
sub
icebp
jmp
push
xor
aad
pop
adc
lods
push
out
xlat
mov
pushf
insb
fnstsw
cli
fcmovu
or
popf
shrl
int
inc
mov
cmp
inc
out
xor
ret
inc
sbb
mov
inc
cmc
popf
mov
hlt
rcrl
psrld
andb
call
push
repz
bound
xchg
mov
and
popf
push
scas
outsl
out
and
call
or
xor
idiv
push
jmp
adc
push
dec
fistps
int
loop
pop
mov
cli
cmp
in
in
jns
clc
cmp
xchg
stc
lods
movsb
jo
fmull
mov
inc
inc
leave
adc
shll
test
mov
push
mov
lahf
jle
mov
mov
xor
in
lods
mov
push
and
or
mov
mov
and
adc
mov
out
mov
cld
xchg
xor
jbe
jnp
in
daa
enter
push
add
pop
jns
jp
fmul
push
cmpsl
movsl
daa
pop
sbb
shll
xchg
add
scas
lods
adc
fsts
mov
mov
xchg
fstpl
dec
mov
jne,pn
xchg
test
cmp
mov
clc
sub
pop
add
dec
adc
out
mov
shrl
mov
dec
mov
or
loope
mov
fsubp
jns
out
fidivrs
popf
sub
pop
xchg
movsb
fldcw
mov
das
hlt
sub
je
mov
repz
js
pusha
xor
and
mov
ret
or
faddl
push
je
andb
mov
mov
out
jge
mov
int3
ret
ds
mov
and
into
fs
ja
iret
imul
loopne
xor
push
cmc
loopne
gs
test
jno
idivl
lcall
bound
dec
dec
stos
nop
jle
pop
ja
mull
jl
mov
cs
js
jne
pop
fiadds
movsb
ss
cmp
sahf
mulb
shll
mov
pushf
movsl
cltd
incb
call
fdivrs
mov
push
sbb
dec
imul
jecxz
push
mov
lods
ret
test
adc
gs
xchg
cmpsl
cld
mov
pop
test
lock
mov
jae
cld
sti
sbb
xchg
lds
ljmp
hlt
std
pop
and
das
popf
mov
stos
mov
or
jo
adcl
or
xchg
popa
push
mov
ja
rep
les
or
fdivr
vrcpss
mov
cmp
sbbb
xlat
mov
xor
add
les
mov
and
mov
ja
sub
pop
je
push
enter
out
fisubl
sbb
sti
pop
mov
adc
sbb
in
jg
cltd
cs
jbe
gs
and
or
movsl
cmpsl
jmp
jge
test
lret
adc
or
sarl
xchg
roll
xchg
es
sub
mov
fldt
cmp
add
xchg
xchg
adc
inc
adc
xor
jb
pushf
sbbl
push
int3
push
inc
and
mov
xor
pop
aaa
push
icebp
mov
shll
jp
icebp
cmpsb
lods
pop
push
addr16
out
clc
pop
or
andl
scas
jp
xchg
mov
xor
imul
mov
fisubrs
adc
pop
aam
jnp,pt
les
jbe
jp
jo
adc
dec
lret
stc
cmp
cs
push
lea
sub
xchg
movd
bnd
lcall
inc
lret
add
loopne
pushf
mov
fcomps
fists
sbb
ret
cli
loope
shll
pop
das
dec
in
inc
or
dec
outsb
pop
loop
sub
inc
xlat
out
jnp
lahf
sub
insl
loopne
outsl
jne
dec
hlt
fwait
daa
int3
fimull
int3
cmpsb
xlat
push
jbe
mov
test
inc
out
and
pop
shl
push
add
xor
add
into
mov
cmp
adc
loopne
pop
rcr
push
std
add
cs
xor
in
dec
lock
mov
jmp
cld
ror
cmp
xor
nop
popf
mov
into
out
cwtl
inc
pop
cmp
inc
mov
or
add
or
adc
dec
dec
push
mov
stos
out
cmpsl
es
cmc
or
cli
xor
enter
enter
dec
add
dec
shll
lret
icebp
push
sbb
test
mov
and
jb
mov
dec
add
je
xchg
pushf
push
sub
dec
jecxz
and
xchg
dec
pop
std
test
repz
je
dec
mov
sub
sahf
in
in
jge
mov
sub
testl
icebp
push
and
pop
imul
leave
sbb
mov
xor
adc
andb
mov
popa
std
sub
mov
and
sti
cmpsb
xchg
pop
adc
inc
jge
adc
aaa
leave
fildll
xchg
jecxz
xchg
jae
adc
mov
aaa
push
testl
add
insl
xchg
daa
hlt
push
cmp
sahf
mov
aas
sbb
ret
add
push
push
and
gs
push
sbb
incl
sub
into
adc
loop
adc
inc
mov
and
xchg
push
add
xchg
sub
cld
ret
cmpsb
aam
roll
int3
jecxz
jne
ljmp
hlt
loop
adc
jmp
stc
dec
movsl
push
cmpsb
cmpsb
cld
leave
ljmp
enter
fcomps
and
out
nop
mov
add
mov
adc
or
incl
pop
pop
push
pop
bound
gs
clc
cmpsl
push
pop
add
cmp
imul
lahf
and
cmpsb
or
outsb
dec
or
jg
rcr
pushf
int3
stos
push
mov
pusha
jno
xor
dec
xor
test
mov
lea
lret
into
outsl
lret
sbb
lahf
test
popa
mov
ficomps
outsl
dec
int3
mov
inc
cwtl
add
int
mov
aas
loop
add
mul
dec
leave
push
sub
nop
stos
inc
sub
js
iret
fcoml
jge
cmp
daa
sbb
andb
mov
sub
mov
add
daa
and
aam
mov
insl
pop
shll
mov
ljmp
jo
mov
mov
or
cmpsl
dec
cmpl
daa
pop
or
ja
cmp
mov
loopne
cwtl
jbe
repz
movsb
arpl
add
cwtl
dec
js
sub
lds
std
xchg
add
add
mov
push
mov
jge
add
sbb
int
pop
into
insl
pop
sub
dec
rorb
fs
xchg
or
call
fstps
jg
movsl
xlat
aam
mov
inc
inc
pushf
mov
push
out
sarb
and
lahf
into
mov
jb
je
ret
push
lds
push
or
jbe
mov
mov
inc
and
outsl
adc
ja
scas
loope
repz
xchg
pop
jbe
lods
jns
push
sub
aas
mov
add
xor
add
daa
fcoms
cld
jo
and
fdivrs
cmp
aad
sbb
mov
mov
inc
cmpsl
fldl
mov
testl
or
arpl
adc
xor
call
push
ror
sub
mov
sbbb
iret
jae
dec
sti
outsb
jo
adc
cmp
push
lea
xchg
addb
mov
jbe
inc
inc
sbb
sbb
jne
jb
filds
pop
push
lret
test
pop
dec
xchg
add
and
adc
and
lret
negl
neg
add
xchg
add
xchg
add
jb
mov
out
jge
xchg
sbb
lcall
adc
inc
and
out
cmp
jb
nop
cmp
test
xchg
cmp
pop
shl
mov
sub
call
dec
jp
dec
dec
jg
xor
add
add
xor
mov
cwtl
les
xor
nop
or
mov
mov
dec
sbb
call
pop
mov
sahf
mov
push
cwtl
gs
test
loop
inc
pop
mov
lods
mov
adc
pusha
and
jnp
aad
mov
mov
cld
fcoms
jnp
or
add
lods
mov
ficomps
aad
xlat
mov
scas
cmp
adc
xor
inc
aas
aas
test
sub
cmp
dec
cmp
sub
ret
xor
dec
push
jno
rcl
add
jge
sub
rcll
inc
mov
lods
pop
js
enter
mov
test
add
lods
dec
dec
dec
dec
rcr
jge
xchg
stos
incb
bound
lea
fcomp
mov
pop
pop
cmpl
push
mov
ret
pop
loopne
popf
int
xor
dec
jge
mov
mov
movsb
or
ds
shr
sub
pop
arpl
insl
in
jmp
or
sub
arpl
movsl
xor
jbe
jne
mov
mov
mov
jmp
jge
jnp
out
fbstp
push
lret
rcll
into
scas
or
enter
jecxz
pop
adc
insl
push
jo
mov
pop
cld
sbb
sti
cmpsb
xchg
incl
mov
xchg
test
xchg
stos
test
bound
xor
push
jge
fldenv
outsl
leave
dec
mov
in
and
in
js
mov
jnp
xchg
and
mov
adc
bound
mov
pop
cmp
xchg
pop
or
loope
jmp
js
test
xchg
mov
pushf
mov
lods
clc
mov
jmp
in
sub
mov
filds
sbb
jae
cmpsb
jns
sahf
gs
loopne
out
inc
cltd
test
es
fwait
ds
pop
and
aas
hlt
aas
into
sub
fimuls
xchg
mov
dec
in
inc
jae
inc
bound
lahf
and
add
cmpsb
pusha
je
mov
xorb
jle
or
ss
sarb
pop
mov
xchg
test
insl
jae
xlat
sbbb
das
fwait
pop
pop
jo
cmp
je
lahf
stos
out
sbbl
sbb
push
cs
xchg
xchg
je
lcall
adc
adc
daa
movb
je
pop
bound
fs
and
mov
xorl
repz
add
sub
dec
and
stos
mov
jp
lret
push
sti
in
cmp
rclb
pop
cmpsb
or
adc
mov
jno
xchg
sub
inc
mov
mov
pushf
loop
xchg
pop
std
mov
hlt
arpl
dec
test
jb
adc
inc
cmp
fisubrl
fistpl
call
aaa
pop
dec
dec
std
pop
dec
fistl
add
test
or
xchg
adc
mov
cmp
das
ficomps
mov
in
inc
shr
popf
xor
sarl
in
xchg
xchg
sbb
push
cmc
fadds
popa
dec
jno
jo
pop
push
mov
dec
inc
sarb
outsl
and
inc
pop
pop
mov
jl
aas
icebp
lahf
stc
adc
insl
mov
dec
xchg
xor
mov
addr16
mov
mov
repnz
lds
hlt
xor
and
imul
add
sbb
jae
fcmovbe
or
cmp
lea
xchg
hlt
add
fcomps
test
dec
mov
adcb
jns
mov
push
fsubrs
xor
adc
nop
loope
inc
in
dec
adc
movsb
or
mov
adc
nop
negb
jge
in
clc
adc
push
aad
arpl
sbb
jle
cmp
xor
adc
je
or
fsts
sbb
rolb
or
cltd
sub
xchg
xlat
xor
test
in
sub
cs
sbb
scas
jo
and
jb
xchg
adc
sarb
or
inc
das
out
adc
hlt
in
mov
add
pusha
sbb
hlt
mov
pop
inc
bound
iret
iret
push
iret
xchg
mov
stos
sub
add
xchg
dec
mov
outsb
aas
jno
jae
cmpl
xor
sbb
dec
xchg
add
rcll
jmp
push
pop
insb
or
push
mov
loop
push
dec
or
out
mov
mov
and
je
or
push
rcr
push
stc
and
inc
shrb
fists
test
inc
sbb
das
in
rclb
shll
cwtl
or
lahf
stos
fwait
xchg
enter
jl
por
adcl
xor
xchg
imul
jno
mov
inc
adc
outsb
shll
loopne
mov
xor
jmp
mov
dec
xor
dec
inc
dec
notl
inc
and
jmp
xlat
pop
cmp
stos
add
shlb
mov
inc
rcll
fistpl
pusha
js
bnd
pop
je
pop
es
jo
sbb
adc
xor
mov
push
mov
aad
stos
or
orl
jp
jb
mov
cmp
push
sbb
push
adc
and
fbstp
pushf
jl
pop
loop
inc
adc
or
sysexit
test
inc
dec
scas
dec
iret
sti
sarl
leave
xchg
xchg
into
test
pop
pop
mov
sub
xchg
ljmp
sbb
cli
dec
lcall
xchg
data16
mov
fidivs
imul
adc
adc
cmp
jp
pop
mov
sub
pop
orl
push
insb
imul
ds
add
add
dec
mov
lods
cld
xchg
std
add
std
lcall
mov
mov
repz
std
inc
xchg
loopne
xchg
xchg
decb
addr16
xchg
or
mov
and
clc
mov
jb
pushf
sbb
cmp
jp
clc
sbb
out
pushf
popa
mov
push
lods
pop
std
sub
out
movsb
jle
adc
mov
xlat
cwtl
ds
sbb
add
push
nop
adc
int3
test
lods
xor
sti
call
jle
movsb
cld
test
sub
imul
cmp
push
cmp
inc
xor
aaa
add
push
sbb
push
adc
stos
loope
xor
out
into
mov
rcrl
xchg
jp
fidivrs
mov
or
lret
aas
addr16
arpl
in
lds
dec
jo
mov
cwtl
daa
push
push
lods
mov
jl
jb
lods
rorb
sbb
add
dec
fsubr
pop
arpl
push
lods
jg
enter
out
mov
xlat
add
and
cltd
xlat
pop
add
cmpsl
xchg
mov
adc
loope
jnp
loopne
jg
push
xchg
or
lret
add
mov
scas
mov
pop
mov
popf
mov
dec
stc
imul
faddl
xor
or
xlat
outsl
push
inc
jnp
xchg
aas
in
repz
add
push
xchg
mov
lret
shr
sahf
fmuls
inc
jmp
inc
cmpb
push
dec
leave
cmpsl
clc
bound
push
adc
subl
cld
or
scas
jge
dec
lcall
cli
imul
dec
fimull
leave
shrb
jmp
js
cltd
int
lret
sub
std
aaa
outsb
je
and
sbb
adc
mov
mov
add
cmpl
and
ficomps
ficomps
cmpsl
lock
sub
daa
mov
dec
pop
mov
stos
pop
stos
jp
sbb
in
ret
mov
fisttpll
jb
adc
mov
rcll
fwait
idivb
push
dec
orl
cmpsl
bnd
cli
pop
arpl
ret
sub
cmpsb
or
scas
inc
js,pt
sbb
and
add
popa
mov
sbb
jno
jns
aam
outsb
inc
add
cmp
addl
bound
loope
fcoms
fmul
cwtl
add
and
inc
sahf
scas
and
out
in
stc
push
inc
ficoms
sti
fwait
bts
popw
mov
mov
mov
xor
inc
cmp
and
sarl
cltd
in
mov
pop
test
loopne
arpl
jbe
sbb
movsl
imul
imul
sub
pop
xchg
xlat
jp
jne
cmp
jbe
jno
mov
aam
rcll
jge
dec
cmc
dec
mov
mov
sbb
jg
or
pop
push
leave
push
sbb
jns
push
push
loop
jns
ds
aam
mov
adc
and
lahf
mov
stc
dec
xchg
push
shrb
mov
fs
and
stc
sub
mov
inc
cmc
cmp
std
pop
sub
int
jne
add
cmpsb
jne
aas
xor
fdivr
movsl
lods
lods
push
xor
and
adc
fistpll
fisubrs
cmp
movsl
gs
jmp
and
movsb
dec
dec
stos
cmp
add
ja
pop
jnp
adc
loopne
cmpsb
and
cmp
pop
adc
push
cld
or
dec
stc
insl
push
lds
sub
jns
scas
mov
jno
xor
in
xchg
daa
push
fwait
shr
mov
cmp
and
shll
aaa
data16
outsb
pop
push
xchg
imul
inc
mov
into
adc
aaa
outsl
fwait
cmpb
dec
add
sti
lahf
lahf
or
cs
inc
adc
mov
adc
mov
or
rolb
jnp
outsl
pop
popf
repz
outsb
push
insl
cmp
mov
adc
and
orb
lahf
ja
sbb
std
int
push
cwtl
or
sub
mov
movsb
and
mov
daa
sub
sub
pop
shl
test
bound
sbb
xchg
loopne
les
imul
std
insb
mov
jb
rcr
push
enter
imul
nop
js
jnp
call
mov
je
cld
mov
adc
dec
in
shlb
and
sub
iret
push
cld
inc
sahf
inc
push
loop
sub
ja
push
cmc
lret
adc
int3
jnp
cmp
mov
cmc
mov
pusha
cltd
xchg
in
punpckhbw
sub
stc
jge
xor
cmp
jl
ds
mov
cmp
mov
test
pop
mov
or
push
repnz
pop
sub
fdivrs
les
popa
mov
pop
or
dec
daa
add
lcall
push
or
inc
arpl
out
and
adc
xchg
fsubrp
dec
jno
testl
negl
xchg
int3
mov
mov
jno
in
rclb
out
hlt
lahf
adc
pop
sbb
adc
data16
jge
add
xchg
sahf
sbb
xchg
test
cmp
gs
stos
mov
inc
mov
dec
mov
or
stos
jbe
dec
data16
mov
pop
adc
lret
rolb
dec
neg
lock
jo
popf
pop
in
or
cltd
in
push
ficoms
lods
mov
pop
jecxz
arpl
jne
dec
sub
sbb
std
pushf
outsl
push
inc
pop
loope
js
daa
mov
xor
int
push
lods
ret
gs
push
imul
pop
js
imul
enter
fs
or
push
lcall
stos
mov
sub
or
xchg
mov
push
sahf
hlt
xchg
std
ficoms
mov
sub
pop
cmpb
fnstsw
jns
arpl
push
xchg
cli
jecxz
ds
aaa
xlat
xor
in
mov
dec
xor
mul
inc
lods
cld
xchg
cwtl
and
add
mov
popa
and
mov
push
pop
stos
xchg
inc
dec
das
jge
add
push
int
loopne
fcompl
ret
insb
andl
fdivs
jne
ja
test
popf
jno
or
in
adc
adc
nop
push
jbe
adc
aas
notl
or
pop
add
test
cmpsb
jp
call
stos
sti
ss
out
daa
push
out
inc
add
lret
pop
xor
add
dec
xchg
dec
sub
pop
mov
push
das
dec
leave
sbbl
adc
and
mov
mov
lock
dec
add
push
sbb
bnd
enter
sub
mov
pop
fwait
inc
add
inc
push
xchg
mov
mov
scas
and
cmc
lret
or
popa
dec
clc
imul
arpl
ret
sbbb
mov
shr
test
cmpsb
cmpl
repz
and
pop
cli
jbe
inc
mov
rcll
inc
and
dec
xchg
out
inc
inc
mov
push
inc
add
adc
mov
add
enter
jbe
rorb
pop
add
jb
in
inc
and
cs
gs
xor
cli
pop
inc
add
dec
dec
jo
pop
lock
mov
add
inc
ret
lods
outsl
testb
scas
testl
les
stos
mov
test
xchg
add
fldenv
add
stc
push
sarb
mov
out
lods
lock
lcall
jo
or
jnp
aam
imul
pop
jnp
add
into
sbb
mov
push
into
lods
insb
mov
jae
pop
rep
mov
loopne
out
cwtl
mov
loopne
cmp
data16
push
repz
or
fstpl
adc
ds
xor
pop
lods
rclb
ficompl
add
call
dec
hlt
popl
push
stc
iret
out
cld
mov
imul
js
adc
inc
inc
mov
add
in
shlb
xchg
dec
ffree
or
pop
aam
mov
clc
sbb
fwait
lods
cs
sbb
xor
js
aad
seta
lea
push
call
cmpb
subb
push
js
mov
test
arpl
je
mov
dec
pop
pop
stc
loopne
xchg
push
jo
ljmp
fsubrp
arpl
fdivr
out
cmpsb
das
jmp
in
stc
sahf
loopne
fwait
hlt
sub
std
mov
push
xchg
outsb
stos
xchg
int3
xor
data16
test
rcr
xchg
mov
scas
push
aad
pop
xorl
decl
pop
sahf
xor
push
fistps
push
arpl
push
adc
sahf
jle
or
push
pop
pop
mov
aaa
push
loopne
in
inc
jns
mov
or
cmp
mov
sub
pop
pop
adc
scas
adc
adc
fwait
mov
test
mov
pop
xor
or
jbe
nop
js
nop
cmpsb
imul
nop
xchg
data16
ficoms
sub
popa
push
mov
pop
jl
dec
lods
hlt
sahf
test
lret
sbb
repz
xchg
lret
add
xor
push
sub
xor
jge
jb
pusha
pop
ret
adc
and
outsb
fildll
inc
sqrtps
inc
dec
fildll
arpl
inc
enter
pop
pop
inc
dec
divb
xchg
cwtl
je
std
mov
inc
and
stos
stc
into
addr16
inc
iret
lret
push
mov
adc
push
and
xor
sbb
jns
and
and
cs
sub
xchg
dec
das
add
jbe
adc
icebp
add
fildl
mov
add
fwait
or
mov
adc
pop
mov
inc
sub
add
push
and
push
testb
add
fwait
in
or
pop
xchg
lcall
xchg
lcall
and
dec
std
stos
xchg
icebp
pushf
inc
jno
aas
cmpsl
or
add
loope
dec
sub
hlt
or
sti
dec
push
pop
jecxz
pop
in
rcl
mov
sub
loop
push
jns
test
inc
aaa
adc
pop
fidivs
mov
mov
or
or
xchg
xchg
scas
adc
loopne
cmovl
and
sbb
mov
dec
mov
xor
insl
rcll
mov
in
cmpsb
addr16
push
xchg
sub
sbb
jo
lock
mov
xchg
dec
inc
sbb
or
xlat
and
je
sub
std
adc
jns
icebp
lock
and
fadd
push
sub
xchg
icebp
scas
pop
loopne
push
sub
mov
shll
mov
xchg
dec
loopne
or
rcrb
sbb
repz
mov
dec
popf
xchg
mov
in
and
test
loop
or
mov
aad
mov
dec
andb
pop
cmpsl
add
out
lcall
fucomp
aaa
pop
stos
sbb
cmp
push
adc
cmp
leave
cmp
push
pop
jp
ret
insb
test
adc
xchg
loopne
cwtl
sub
xchg
xchg
aam
hlt
sub
dec
sbbl
mov
push
dec
pop
bound
add
xor
shl
push
dec
jbe
cwtl
sub
xor
xchg
mov
sub
push
xchg
cmp
jbe
mov
or
mov
push
inc
cld
jnp
pop
push
frndint
xor
shr
in
cli
lcall
jo
pushf
stc
ljmp
xorb
mov
mov
fisttpl
jmp
pop
push
xor
mov
inc
js
dec
jnp
pop
sub
pop
out
cmp
sub
xchg
push
cmp
and
cmpsl
aas
loopne,pn
or
mov
sub
bound
or
mov
cmp
ret
dec
or
or
test
dec
sbb
aas
add
out
repz
cmp
insl
in
call
mov
aad
sub
or
xchg
mov
cmpsb
pop
imul
in
mov
mov
or
inc
cmp
shll
mov
jo
jmp
cli
mov
cmc
mov
inc
push
in
test
inc
xchg
out
xchg
inc
or
roll
add
shrb
xchg
imul
push
rcll
pop
jo
aaa
jb
xlat
xlat
fnstenv
mov
ror
or
fidivs
dec
sbb
jbe
mov
cmp
das
cwtl
cmpsl
jne
rolb
jge
push
cmpsl
jl
and
pusha
mov
into
sbbb
shlb
loopne
clc
xchg
pop
mov
loope
mov
lock
push
test
inc
push
push
adc
aam
dec
jae
je
jl
jno
pushf
mov
jl
mov
pusha
add
xor
dec
es
scas
hlt
es
iret
mov
lods
adc
pop
aaa
or
mov
in
outsl
mov
dec
xchg
adc
out
stc
sbb
mov
out
shll
lea
mov
sbb
repz
fnstenv
adc
xchg
or
test
lds
sti
pop
jae
and
adc
cmp
jae
leave
sub
dec
cltd
bound
cld
fsubs
jecxz
adc
push
xchg
roll
and
out
push
rcll
lock
in
and
cli
jle
sub
dec
mov
decl
pop
pop
pop
jmp
roll
out
repz
cmpl
aas
mov
dec
in
add
or
sub
hlt
adc
jp
inc
and
ja
adc
scas
int3
adc
ljmp
push
leave
or
dec
and
gs
inc
arpl
jmp
cmp
int
out
inc
push
pop
jmp
into
enter
js
sbb
jo
mull
xor
mov
ss
sub
jecxz
cmp
push
in
push
cmpl
lock
mov
lock
imul
shl
bound
jnp
fwait
stos
or
or
lea
ja
inc
lock
subl
movsl
nop
lcall
push
jmp
nop
jbe
cmp
fcoms
into
xchg
xchg
inc
ret
push
popa
pop
jp
in
cmp
fcomp
bound
fadds
pop
cmp
push
and
add
sub
insb
cmp
xor
out
fcompl
enter
sarb
shlb
mov
imul
jmp
sbb
lret
fcmovu
pop
pop
or
test
mov
and
inc
lcall
jmp
sub
mov
js
xchg
jp
addr16
daa
jle
sub
mov
loop
push
add
ret
lahf
in
jp
mov
es
sbbl
push
or
idiv
and
mov
out
mov
cwtl
stos
pop
mov
in
loopne
je
cltd
inc
in
sub
xchg
rcr
jle
and
mov
stc
mov
es
xchg
and
sbb
repz
movsb
iret
pop
xor
jp
add
jne
mov
sub
xchg
popf
xor
lods
out
cmp
mov
or
insl
mov
pop
pop
test
and
call
jne
pop
aaa
adc
pop
repnz
cmpsl
jl
lcall
mov
test
adc
leave
sbb
stos
int
fs
pop
inc
xchg
mov
fs
shlb
mov
outsb
mov
pop
pop
enter
jmp
mov
mov
jno
ror
icebp
adc
pop
add
xchg
mov
pusha
cmp
call
ja
fmul
movsl
pcmpeqw
popf
out
lods
mov
orb
sub
stos
pushf
test
dec
repnz
push
mov
div
mov
js
jg
mov
js
mov
add
dec
test
rorl
inc
fstpl
add
arpl
dec
shlb
out
insb
jno
dec
loope
sub
xor
xchg
mov
sbb
push
and
inc
in
testb
shll
insb
inc
mov
xor
dec
sub
mov
mov
sbb
shlb
aas
mov
les
jle
or
call
pop
xor
out
jmp
out
xchg
push
or
or
lret
enter
test
inc
add
dec
xor
je
inc
clc
mov
push
push
add
dec
in
das
jne
es
cld
daa
adcb
push
mov
or
cmpsl
out
jl
jo
pop
and
repz
adc
repnz
jb
int3
fnsave
fs
enter
bound
sbb
mov
mov
mov
dec
xor
adc
mov
aas
mov
jmp
fsubs
adc
push
cs
movsb
sub
mov
icebp
mov
into
xor
out
movsl
adc
push
int
push
jmp
push
xchg
sbb
pop
jb
fldenv
mov
jne
pop
pop
sbb
mov
mov
jo
loopne
test
or
fnstenv
lock
sbb
adc
sbb
dec
sub
int
inc
enter
mov
mov
push
inc
loop
loop
jecxz
mov
cmpsl
inc
nop
stos
cmpsb
inc
fcompp
nop
clc
inc
ret
inc
push
mov
loop
dec
xchg
lretw
andl
pushf
mov
and
stos
fldt
addr16
inc
das
inc
cmp
fldt
jo
clc
scas
adc
or
push
test
outsl
sahf
add
pop
mov
or
xchg
mov
sbb
mov
mov
adc
js
jg
inc
inc
repnz
cld
shrl
scas
icebp
mov
sbb
in
test
orl
or
adc
inc
cmpsb
repz
loop
add
sub
stc
jae
pusha
int3
arpl
jnp
cmp
pop
enter
aam
mov
scas
lods
iret
jp
leave
adc
in
mov
fsubs
dec
popa
or
js
mov
sbb
ficoml
dec
dec
std
pop
cmpsl
aaa
jp
jb
cltd
stc
jbe
jno
icebp
mov
cmp
shll
mov
leave
stc
fldt
and
repnz
cmp
and
mov
jns
insl
push
and
xor
ds
mov
add
jns
cltd
or
mov
pop
jo
sahf
enter
and
dec
mov
sbb
pop
jg
or
mov
sub
stos
pop
push
mov
inc
pop
iret
pop
inc
mov
nop
adc
ljmp
es
std
pop
sti
repz
test
and
or
sbbb
inc
mov
pop
xchg
cmc
xor
test
imul
mov
ss
jae
rcrl
jne
adc
push
ds
jge
add
out
inc
sub
mov
add
in
aaa
xchg
dec
cmp
es
sbb
hlt
pop
mov
int3
cmpsl
push
mov
sti
sub
adc
mov
or
xchg
push
mov
fs
in
mov
sub
add
fwait
push
cmc
xchg
dec
pop
ss
xlat
jns
mov
in
mov
mov
test
sub
mov
outsl
lcall
mov
mov
and
aam
xchg
xchg
adc
cmc
aaa
inc
insl
aad
icebp
dec
pop
mov
jbe
jl
dec
js
das
mov
ret
dec
mov
sub
je
xchg
data16
divl
les
sub
cmp
xor
add
pop
push
cmpl
mov
loopne
test
loopne
out
pop
subl
in
jae
mov
je
movsb
xlat
and
mov
aaa
aad
mov
xchg
add
decl
dec
stos
xchg
and
jle
jo
add
and
loope
jmp
leave
aad
xchg
xor
loopne
xlat
repz
cltd
aam
out
mov
cmp
aaa
mov
and
sahf
pop
dec
sub
xchg
outsb
dec
lcall
ja
inc
push
int
xor
inc
int3
and
aaa
jno
inc
loope
popa
jb
outsl
inc
or
js
cltd
inc
adc
jo
lock
jbe
adc
or
test
fs
les
sbb
sti
dec
cmp
or
sbb
test
in
insl
fcmovb
mov
sti
sbb
cmpl
fld1
loopne
pop
jg
and
loopne
mov
sub
stos
lock
cmp
scas
subb
mov
insb
bound
fs
or
ret
cmp
popa
push
mov
push
adc
nop
and
add
bound
je
call
push
adc
das
stos
cmpsl
imul
pop
fstl
or
mov
ret
out
out
mov
repnz
mov
and
fcomi
cmp
mov
cmp
jg
push
leave
cld
inc
out
pop
cmp
adc
nop
xchg
mov
das
fisubs
inc
call
mov
dec
loop
jmp
cmc
jb
jns
mov
cmp
inc
mov
mov
das
shrl
sti
mov
pop
clc
xor
fisttps
push
cltd
xchg
dec
sub
fcmovu
movsb
clc
dec
jo
xchg
sub
add
cld
outsl
push
mov
pop
inc
std
aad
iret
fldenv
and
test
xchg
sbb
das
lods
sbb
jl
jge
adc
pop
xchg
mov
test
mov
mov
mov
dec
sub
or
arpl
xchg
cltd
sarl
adc
xchg
push
add
dec
xchg
mov
jne
pop
and
push
orb
mov
in
lods
lret
mov
inc
loope
adc
scas
jbe
cmc
mov
dec
mov
stc
add
shlb
xchg
pop
test
lock
insb
jle
mov
push
mov
cmp
push
add
sub
adc
fstpt
mov
and
mov
insb
cvtpi2ps
movsl
inc
leave
mov
imul
pop
cmp
jecxz
dec
inc
in
jbe
mov
xor
jae
dec
jae
addr16
rclb
iret
fwait
cwtl
push
mov
popa
in
mov
mov
int
cs
jbe
les
lods
sbb
jo
xor
jecxz
loop
push
sub
fs
push
xlat
cmpsl
jae
inc
pop
xchg
dec
inc
mov
inc
loopne
insl
stos
push
jp
xchg
call
add
jae
mov
adc
repz
mov
mov
push
jae
or
lret
loop
xchg
pop
push
add
xlat
fistl
mov
insb
inc
sub
pop
mov
enter
pop
xchg
aaa
jno
call
jno
push
cmp
popf
mov
or
cmp
leave
std
pushf
jno
pop
xchg
xor
sub
enter
sub
and
imul
inc
mov
je
test
add
out
sarb
or
jns
dec
and
rclb
dec
mov
xlat
test
stc
and
inc
pop
dec
fsts
and
lret
or
pop
inc
mov
mov
fidivs
test
clc
mov
mov
add
cmpsl
test
push
cmp
jmp
fiaddl
js
sub
bound
sub
stos
pop
inc
and
lcall
xor
cmp
cwtl
adc
arpl
push
jo
jbe
push
nop
or
or
xchg
in
pop
cmp
idivl
imul
leave
jbe
cmp
or
pop
lret
or
lahf
lahf
xchg
insl
jne
mov
scas
dec
mov
icebp
xor
ret
pop
mov
mov
inc
fstpt
loopne
xlat
add
sarl
stos
lea
or
xor
test
and
mov
repz
test
fisubl
push
loop
inc
cmp
sbb
pop
adc
sahf
add
hlt
aaa
push
pop
mov
divl
xor
vshufps
sub
aaa
push
push
mov
or
xchg
cmpsl
mov
sbb
cmp
cmp
int
addr16
mov
cmpsl
int3
dec
jg
fwait
sub
pop
out
adc
adc
pusha
daa
popa
mov
jae
sub
lods
push
sbbb
inc
cld
push
sub
xor
dec
cwtl
xchg
mov
mov
cld
xchg
shl
sub
and
sub
mov
cmc
fsubrs
lret
cmp
movsl
xchg
test
inc
mov
loop
enter
add
mov
sbbl
cli
pop
icebp
push
and
imul
mov
orl
and
add
movb
mov
mov
add
fiaddl
inc
shll
rorb
inc
popa
pop
sbb
test
mov
out
out
cld
inc
stos
movsb
arpl
lock
or
inc
bound
rcrb
pop
xor
test
fistpll
flds
jecxz
outsl
adc
xlat
fucom
insb
les
rcl
cli
xor
pop
test
outsl
leave
addr16
pop
jnp
xor
mov
imul
mov
adc
hlt
or
xchg
cmp
push
xor
das
xor
in
xchg
xchg
jmp
mov
das
movsb
test
aas
cmpsb
jmp
sbbb
add
outsl
pop
push
inc
adc
inc
dec
push
repz
mov
fistpll
add
jp
fbstp
sub
pop
mov
mov
adc
stc
sbb
ret
xchg
sahf
inc
adc
mov
xchg
popf
mov
lods
jmp
sub
pop
shl
popa
and
sbb
and
out
hlt
aam
sub
ficompl
iret
adc
mov
push
idivb
or
test
push
hlt
pop
sarl
repz
outsb
popf
dec
lret
cmp
jle
add
or
je
add
mov
jp
mov
clc
mov
sbb
in
pop
out
xor
addl
divl
jns
adc
lahf
das
cmpsb
cmpsl
in
sti
in
leave
std
pop
sbb
mov
out
xchg
jg
int3
xchg
movsb
push
xchg
xor
xchg
xor
cmp
adc
scas
dec
xor
pop
cmp
push
mov
adc
lea
cmp
xchg
xchg
cmp
ja
cs
gs
insb
fistpll
into
leave
mov
adc
arpl
dec
push
addb
dec
stos
add
mov
insb
mov
in
les
mov
in
fwait
or
mov
cmp
stos
adc
xor
add
jno
fldz
cmpsl
push
sub
and
sbb
pop
dec
push
inc
aaa
sub
cmp
cmp
iret
out
bnd
push
fiadds
in
hlt
push
mov
push
pusha
cmpsl
push
lods
jno
push
in
daa
dec
icebp
dec
mov
lods
cmp
or
test
and
pop
jmp
xchg
clc
inc
cmp
bound
icebp
dec
sbb
xor
pop
xchg
pop
dec
jle
cmp
popf
test
ffreep
daa
aas
and
mov
jge
loopne
stos
dec
je
adc
push
or
stc
or
xor
or
lret
sub
push
mov
jmp
ss
jo
and
out
adc
xor
les
leave
push
xor
xlat
sbb
and
lret
inc
adc
aaa
add
fsubrl
ret
jle
pop
arpl
mov
inc
add
repz
rcll
shlb
int
sbb
mov
in
iret
jecxz
add
adc
das
inc
dec
repnz
push
rorb
dec
jno
mov
push
push
ret
mov
xchg
ret
mov
inc
pop
clc
inc
loop
pop
or
inc
xchg
mov
scas
sub
loope
xchg
jae
mov
ror
sbb
mov
stos
jecxz
repz
adc
mov
mov
add
outsl
orb
inc
and
add
outsl
or
adc
leave
push
inc
sbb
xchg
fwait
mov
xor
dec
daa
daa
adc
jl
sub
mov
jo
outsb
push
xchg
andl
aad
cli
mov
mov
test
pusha
testl
data16
imul
xchg
jno
clc
fldt
add
fimull
mov
ljmp
fcomps
mov
xor
aad
addps
xchg
in
rorl
mov
call
orb
and
mov
cmove
jecxz
adc
shld
and
stos
pop
mov
cmc
incb
xchg
iret
jo
lods
mov
sbb
cli
scas
mov
ret
pop
aam
lods
jno
cltd
loope
call
fs
dec
call
and
pop
push
aaa
ss
xor
adc
push
mov
or
mov
lret
shl
and
mov
testb
pop
sbb
jns
lret
loope
in
add
cli
ja
lods
les
adcb
icebp
out
outsl
jb
outsb
push
movsb
fstl
cld
insb
jp
or
test
jne
xchg
test
mov
mov
loop
outsb
daa
test
dec
addr16
xchg
xor
leave
add
frstor
fnstcw
cmp
cmovs
mov
adc
scas
or
mov
ljmp
out
insl
add
or
xor
dec
mov
js
lcall
jne
mov
sbb
out
sarb
xchg
sub
and
xchg
xor
std
insb
cli
jmp
pop
dec
mov
push
add
out
xor
dec
push
roll
fisubl
mov
adc
mov
lock
jg
loopne
and
fld
mov
outsl
jb
ja
xor
sbb
mov
lods
cld
xchg
sbb
push
stos
and
push
int3
jmp
xchg
mov
imul
fisubrl
in
xchg
mov
push
mov
es
shll
test
pop
jmp
xor
xor
orb
mov
mov
aas
cli
faddl
adc
mov
movsl
in
dec
iret
jne
and
mov
je
cmpsb
xchg
jno
xchg
push
xor
dec
sbb
or
addr16
or
mov
push
mov
dec
stc
cmpsb
insb
lock
popf
jns
es
shr
cmp
xor
jle
stc
pop
xor
outsl
push
pop
outsl
sub
inc
and
push
push
pusha
mov
int3
orl
das
ds
subl
jo
in
mov
mov
cltd
sub
cli
scas
je
addl
inc
stc
cli
jmp
cmpsb
pusha
cmp
mull
mov
push
mov
out
mov
je
in
jge
mov
test
xchg
ret
xchg
lods
mov
sub
jno
lret
xchg
out
sbb
daa
jnp
fldcw
fs
notb
shrb
mov
cmpsb
sub
rcrl
imul
inc
mov
mov
cmp
mov
push
std
jecxz
dec
xchg
adc
repnz
and
fisubrl
ljmp
stos
xlat
dec
pusha
jle
pop
adc
dec
out
adc
orb
jo
popf
in
aad
mov
stos
in
xor
sub
mov
adc
sbb
adc
leave
jecxz
push
or
je
sarl
out
adc
icebp
fnsave
daa
leave
lods
xor
and
shrl
mov
or
adcb
cwtl
ficompl
sbb
mov
jg
loope
dec
sbb
ret
xchg
jae
shrl
popa
int
pusha
cmpsl
dec
lds
lret
or
lock
das
or
sbb
lea
in
or
insb
test
mov
pop
lret
push
push
sbb
mov
lods
add
cmp
pop
imul
sub
dec
daa
inc
scas
pop
daa
aas
pop
xor
mov
sbb
jl
mov
dec
fmulp
imul
mov
lock
sbb
push
xchg
frstor
pop
lahf
in
mov
cmpsb
rep
inc
into
mov
sbb
addb
mov
mov
mov
mov
push
push
out
push
mov
pushf
lret
subb
daa
push
cmpsb
es
cmc
icebp
push
pop
add
div
ja
sbb
pop
std
pop
push
sub
cs
jge
mov
mov
scas
xchg
movsl
fildll
jo
and
fnsave
test
std
fs
enter
test
lods
mov
lea
clc
sub
into
lds
sub
cmpsb
stc
clc
sbb
outsb
insl
ljmp
pop
mov
sti
mov
add
sub
dec
mov
dec
lods
sub
xchg
inc
xor
cmp
je
dec
in
xchg
cmp
sarl
cmp
ror
sarb
sbb
dec
shlb
lods
sub
xor
xor
lock
or
xor
ds
dec
push
jnp
lret
jb
and
cwtl
lcall
mov
cmp
stc
sahf
fldt
mov
movsl
ror
rolb
arpl
lahf
pusha
into
int3
lock
pop
icebp
add
push
std
mov
jmp
stos
push
cmp
xchg
sti
jl
nop
jp
test
cltd
cs
push
inc
or
hlt
mov
xorb
dec
pusha
dec
lock
sbb
xor
ja
inc
sbb
mov
mov
es
stos
popa
ret
fstps
sub
pop
or
xchg
push
push
into
leave
repz
adc
aad
repnz
pop
or
lock
mov
mov
loop
mov
cmpsb
jnp
or
xlat
jne
ret
mov
jns
ss
add
or
lods
xor
xor
add
pop
cmp
cmpsl
fbstp
fsubrs
adc
cwtl
test
xor
mov
cmpsb
dec
and
pop
test
or
idiv
mov
lds
mov
or
adc
xor
mov
into
jns
in
loopne
jo
push
push
xchg
add
aas
bound
adc
lods
push
mov
add
std
aam
jb
sbb
sub
dec
lods
loopne
loope
fisttps
push
add
or
add
les
aas
lods
lahf
mov
pop
into
cmp
sti
cmpb
imul
mov
and
fistpll
pop
rorb
cmp
fisttpll
xchg
in
scas
cwtl
xchg
lcall
rorl
jns
cmp
dec
or
jl
xchg
jne
cmp
loop
mov
lods
adc
aas
cltd
sbb
sbb
xchg
loopne
mov
add
rcr
mov
sahf
xor
mov
mov
sub
adc
test
fwait
stos
rcll
in
xor
in
out
outsl
in
mov
popf
lea
adc
scas
jnp
mov
add
cmp
shll
dec
test
mov
dec
dec
call
rcll
xor
daa
mov
lret
mov
test
int3
das
stc
jle
hlt
pop
hlt
sbb
clc
xchg
clc
cmp
jg
xchg
cmp
sub
outsb
sbb
fidivs
arpl
and
inc
movsb
call
pop
mov
mov
loop
xchg
mov
add
or
sub
cs
mov
fists
xchg
int3
pop
cs
jo
push
add
jne
int
and
aad
stc
dec
mov
cs
pop
test
aas
push
bound
dec
push
sti
out
call
fbld
dec
test
adc
ljmp
and
xchg
jle
pop
lock
iret
cld
test
sub
xlat
gs
inc
pop
mov
mov
and
movsb
mov
xor
pop
mov
lahf
sub
leave
push
pop
cmpl
lods
pushf
inc
cmc
and
in
fiaddl
das
pop
popa
std
add
pusha
xchg
cli
mov
cmp
inc
fdivrl
ja
mov
and
ss
jns
cmp
push
xor
div
sub
js
sbb
add
inc
mov
sbb
inc
mov
arpl
aam
in
lret
add
loop
jo
cwtl
push
je
nop
scas
sbb
mov
out
out
mov
ds
fldcw
dec
mov
jns
adc
jmp
insb
stc
push
scas
lods
lret
daa
sub
neg
mov
imul
daa
jmp
repz
ret
mov
jmp
ja
lret
lock
xor
xchg
mov
pop
pop
xor
adc
adc
aad
pop
jp
dec
stc
jle
jns
mov
pop
subl
or
sbb
stos
sarl
sbb
hlt
jo
or
shl
popa
fisttps
out
ror
jecxz
push
repz
test
pop
arpl
sbb
inc
xchg
loope
outsl
in
dec
loope
xchg
test
lahf
push
int
ds
lods
mov
adc
cli
je
test
pop
sbb
xchg
and
and
shll
inc
jne
add
div
int3
shrl
pop
je
cmpsb
adc
sbb
nop
and
push
sbb
jmp
das
inc
repnz
dec
push
jmp
inc
jecxz
ret
mov
fcomp
nop
in
pop
das
push
inc
cmp
adc
dec
pop
mov
out
xlat
xor
push
mov
xor
mov
lahf
sub
dec
repz
sub
mov
imul
ja
hlt
pop
int
pop
pop
xchg
outsl
scas
insb
sahf
mov
popa
push
cwtl
pop
mov
lock
pop
aaa
sub
les
dec
flds
pop
lds
gs
mov
and
mov
xchg
jne
xlat
pop
sub
sbbb
jne
rcrl
lods
inc
sti
jp
mov
push
out
xchg
cli
mov
leave
popa
adc
jmp
mov
xor
jns
cmp
cmpxchg
or
inc
in
idivl
ss
add
adc
mov
lahf
test
adc
loop
xchg
jp
inc
out
adc
aad
popa
cmovs
repnz
push
jne
mov
mov
popl
movsl
les
pop
jae
dec
push
sub
sub
lahf
lds
pop
pop
stos
inc
dec
sbb
pushf
push
sbb
fdiv
dec
outsb
stos
call
or
lods
mov
pop
out
mov
mov
ljmp
cli
dec
pop
and
outsl
dec
mov
fs
mov
add
xchg
cwtl
sub
loopne
xor
jae
jno
dec
xchg
jg
fucom
stc
call
fildll
xor
out
inc
lret
xchg
aas
and
leave
sub
ljmp
sbb
test
xor
lods
push
dec
jl
sub
xchg
push
dec
ljmp
fstps
mov
inc
cmp
mov
fnsave
sti
hlt
insb
mov
aam
cmp
roll
xor
repnz
dec
pop
incl
cmp
rclb
or
dec
aam
ja
pop
xlat
out
lret
mov
mov
or
test
out
nop
or
pop
mov
mov
adc
ret
aaa
dec
jp
and
cmc
enter
aaa
lods
in
incb
add
inc
js
pop
addr16
out
dec
add
cmp
pop
lar
xchg
mov
out
in
cmpsb
cmpsl
push
ja
ss
movsl
lahf
xchg
ds
scas
arpl
dec
sbb
push
dec
loopne
mov
pop
stos
dec
adc
push
into
inc
sbb
data16
sub
xchg
adc
shr
adc
xchg
fs
aam
inc
adc
add
pop
scas
in
mov
cmp
test
pushl
sbb
movsb
out
jnp
jno
and
cs
cld
sub
mov
ja
sbb
sbb
jp
cmpsb
pop
pop
je
push
es
mov
imul
imul
cmp
push
add
je
mov
inc
out
xchg
push
sub
popf
decb
push
sti
ljmp
dec
mov
add
dec
sbb
adc
add
push
mov
cmpsl
push
dec
fcomps
inc
out
enter
lcall
mov
iret
fstp
repz
pop
sbb
sbb
pop
sbb
push
jle
adc
out
mov
je
dec
movups
enter
loopne
aas
in
pop
pop
cmc
xchg
pop
imul
adc
daa
sarl
shll
xor
fiadds
test
in
repnz
xchg
arpl
xor
mov
fwait
ret
dec
adc
cmc
jl
sti
andw
pop
inc
data16
fadd
push
push
ret
das
sti
addr16
or
fldl
sahf
push
out
add
loope
jmp
push
lcall
or
pusha
pop
cmpsl
xchg
jecxz
push
leave
shl
push
stos
mov
cwtl
ror
sub
fstpl
dec
ljmp
add
xlat
cmp
mov
aas
xchg
gs
jle
mov
pop
repz
sahf
lcall
cmc
and
xchg
jp
arpl
rcrb
mov
push
xor
jmp
mov
add
add
repz
jg
loopne
and
out
test
dec
les
adc
jp
push
leave
call
xchg
outsb
scas
xchg
inc
jb
mov
mov
fldl
push
out
jae
ds
loop
mov
xor
inc
bnd
mov
jo
xchg
push
call
mov
mov
or
pop
sahf
clc
imul
push
xor
daa
pop
xor
ds
dec
fdivrl
and
adc
sub
or
std
stc
fwait
and
test
imul
roll
out
cmp
xchg
cmp
roll
push
iret
xor
daa
jp
jns
mov
lcall
cmp
pushf
popa
and
repnz
dec
xlat
scas
pop
out
push
dec
xchg
dec
adc
push
sarl
sti
adc
aam
in
xchg
xorl
xchg
add
jle
mov
inc
movsb
minps
sbb
cmp
cmp
cmp
sbb
gs
shlb
sub
cmp
jbe
jo
stos
mov
cli
mov
xor
repz
lock
mov
lahf
mov
icebp
jnp
xchg
scas
ss
xchg
fwait
jmp
adc
jno
adc
aad
mov
pop
in
pop
rcr
cmp
repz
rdtsc
xchg
int3
ficoml
cli
fs
add
out
adc
jle
pop
or
in
sbb
gs
add
out
ss
mov
repnz
cwtl
mov
shlb
and
push
outsl
add
int3
push
push
cmpsl
push
or
stc
dec
je
mov
mov
or
and
lret
inc
mov
mov
and
fmull
push
adc
je
imull
jo
dec
gs
iret
sar
push
sub
test
jo
jmp
aad
test
dec
inc
fcmovne
mov
and
mov
jae
pop
add
lea
and
test
into
in
repnz
and
pop
iret
hlt
and
popf
call
out
mov
lret
mov
xchg
cwtl
nop
pop
inc
pusha
or
frstor
icebp
dec
push
into
ljmp
or
addr16
mov
adc
jns
cmp
cld
xlat
or
fldenv
shlb
adc
fwait
ret
test
and
std
repnz
mov
rcll
fnstcw
jge
pop
das
das
lds
xchg
xlat
jecxz
in
cmc
pop
pslld
push
popf
dec
mov
push
xor
dec
out
mov
push
out
js
xchg
popa
cmpsb
jbe
jg
sbb
gs
sti
sbb
aam
aas
and
rorl
ljmp
insl
jmp
xchg
shlb
lea
or
xchg
sbb
push
aad
lea
fisubrs
xor
push
jg
cli
lcall
jo
mov
int3
aaa
aad
push
andl
pop
pusha
mov
mov
out
mov
loop
dec
xchg
inc
call
xchg
xchg
jne
cmp
pop
cmc
jbe
mov
flds
jb
insl
push
and
fisttpll
rcrl
pop
xor
dec
fcompl
jnp
xchg
cmp
andb
dec
push
call
out
cmpb
or
fwait
fs
inc
xchg
xchg
mov
sbb
ljmp
iret
pushf
push
gs
mul
mov
sub
add
jecxz
gs
clc
ret
testb
xchg
ficomps
mov
xchg
popa
xchg
lods
xor
sbb
or
mov
adc
xchg
icebp
lock
in
adc
leave
pop
jge
add
leave
es
fistpl
les
cltd
mov
or
stos
mov
mov
dec
out
nop
ror
lret
cmp
push
xchg
mov
push
add
mov
ljmp
pushf
or
mov
and
push
hlt
shlb
push
pop
pop
std
xor
fs
dec
lret
idivb
jle
pop
scas
in
mov
and
xlat
adc
xor
jo
insl
push
fld
pop
call
addb
loop
inc
cltd
insb
ljmp
dec
scas
ret
mov
push
repnz
sbb
and
jnp
hlt
dec
jl
add
and
add
shll
int
cmp
xor
aaa
pushl
inc
aad
lea
inc
fbld
das
pop
sub
lcall
sar
movsb
add
loope
sarl
test
sbb
add
daa
out
cmpsl
add
aad
sarb
inc
loope
insl
inc
pop
push
test
sarb
jne
std
flds
addr16
popf
scas
scas
jnp
aas
xchg
lods
add
pop
xlat
dec
dec
test
sbb
fwait
xchg
push
mov
jp
cmp
and
push
test
sbb
lods
test
insl
aad
dec
inc
lret
jo
mov
jl
mov
shrb
push
out
enter
clc
mov
dec
cmp
sbb
int
pop
xchg
int3
stc
into
ja
jb
dec
or
lret
mov
hlt
jp
push
rcll
scas
cmp
mov
push
cli
mov
mov
hlt
or
dec
stc
out
ds
cmp
sbb
lret
das
movsb
xlat
mov
ljmp
and
xor
repnz
cli
test
mov
xorl
test
push
push
inc
pop
iret
jo
jb
adcb
mov
gs
movsl
inc
icebp
leave
mov
lods
call
sub
adc
negl
mov
push
fs
decb
shlb
sti
mov
lods
adc
or
std
push
mov
fsin
popa
test
loop
jp
js
outsb
outsb
sbb
xchg
movsl
dec
push
sub
mov
and
aas
insl
movb
idiv
mov
aas
xchg
and
dec
es
xchg
xchg
xchg
mov
sub
mov
pop
push
add
jge
mov
add
addr16
cmp
mov
add
in
jb
es
jmp
inc
pop
shlb
bound
sub
in
jge
mull
inc
jp
nop
shll
iret
sbb
pop
mov
popf
and
adc
dec
or
in
addr16
cmpsb
lods
xorl
pop
push
cmp
mov
mov
cmp
adc
jmp
jae
test
dec
add
xor
pushf
mov
dec
mov
out
fwait
mov
test
mov
jo
dec
rolb
dec
ljmp
add
loopne
mov
and
mov
aad
add
ljmp
inc
adc
push
iret
cld
lds
dec
push
adc
dec
mov
inc
dec
mov
add
lret
js
push
dec
or
ja
out
jo
shrl
add
inc
inc
or
std
pop
loopne,pt
flds
sbb
lods
dec
imul
ljmp
std
pop
jl
pusha
faddl
out
xchg
jbe
outsl
xor
fidivrl
stc
lds
and
mov
adc
or
sub
sub
inc
push
clc
int3
or
jmp
xor
xchg
push
push
pop
push
imul
mov
mov
out
enter
add
sbb
aaa
push
xchg
sahf
mov
cwtl
addb
mov
out
pop
add
sub
push
jmp
or
jle
aas
sbb
pop
add
ret
fwait
mov
aad
fs
sub
adc
cltd
divb
leave
pop
lock
jne
dec
loopne
xor
pop
push
pop
lret
fstpt
mov
daa
addr16
enter
ds
jecxz
cmp
filds
shrb
dec
cmp
call
arpl
cmc
add
imul
call
cltd
iret
fucom
cmp
cmpsb
cmp
outsl
cmp
cmc
pop
cld
pop
xchg
js
jne
jbe
stc
adc
push
mov
pop
dec
jge
add
jp
pop
adcb
ret
aas
pushf
repz
frstor
adc
sub
imul
mov
jle
lods
add
rol
in
or
mov
inc
jl
icebp
jns
add
test
mov
push
stos
inc
xchg
scas
dec
push
push
imul
xchg
mov
mov
cld
mov
dec
jge
jne
in
xchg
xchg
mov
add
add
add
jecxz
xor
push
ja
sbb
icebp
pop
pop
inc
ss
popa
mov
pop
arpl
cmp
pop
push
or
scas
xchg
rcrl
xchg
jle
mov
jae
mov
mov
inc
mov
out
mov
div
adcl
nop
loopne
call
jp
ret
xchg
inc
jo
div
inc
mov
stos
mov
jge
outsb
push
inc
pusha
orl
adc
mov
pop
xor
loop
int3
or
inc
cmpsl
push
int3
shlb
dec
out
xchg
push
pop
shl
cmc
cmp
in
arpl
xchg
sub
enter
lods
or
pushf
daa
int3
ss
scas
enter
in
aas
stos
push
or
pop
xchg
aad
pop
and
push
and
inc
cmpsb
gs
mov
repz
jno
aaa
bound
sbb
sbb
jns
mov
ss
out
movsb
int3
xor
mov
ljmp
xchg
cmp
push
mov
jb
cwtl
push
hlt
test
jnp
fisubrs
out
movsl
xchg
fisubs
xor
mov
in
sbb
dec
repz
xor
sbb
xor
rcrb
inc
js
or
mov
out
xlat
int
gs
repz
cltd
push
fstps
fiaddl
std
push
mov
pop
pop
dec
sbb
shrb
dec
shll
inc
loopne
mov
nop
jo
fprem
in
lcallw
ljmp
mov
xchg
sub
cld
mov
sub
in
lret
movsb
jns
leave
mov
repz
movsb
pop
cmc
int3
fsubl
mov
loop
add
shrl
stc
ficoms
mov
mov
jmp
in
push
jmp
insb
rcll
jle
aad
incb
cwtl
popf
sbb
xor
in
ret
jnp
add
sti
es
gs
pop
xorb
xchg
jge
scas
jge
mov
lods
jmp
outsl
adc
insl
fdiv
popf
jae
push
aad
mov
add
aad
subb
inc
xchg
sti
aaa
aam
dec
stos
mov
pop
ljmp
dec
in
pop
mov
ja
jbe
push
xlat
mov
dec
sub
mov
adc
mov
push
sbb
mov
pop
ficoms
push
data16
add
or
cld
test
lods
xlat
mov
jl
cs
mov
sbb
andb
in
fs
aam
outsl
imul
pop
sub
lods
pop
lcall
pop
clc
int3
push
test
sbb
shrl
mov
sbb
jmp
push
and
push
add
out
add
dec
clc
mov
xor
and
std
mov
scas
out
cwtl
out
pushf
push
repnz
out
xchg
jge
adc
ljmp
ds
inc
xor
fwait
daa
arpl
push
stos
mov
lret
ss
jmp
add
cs
add
mov
rolb
dec
sub
adc
sbb
out
arpl
add
push
jnp
aad
lret
fidivrl
ror
cmp
mov
insl
shll
frstor
mov
xor
or
jmp
ret
push
in
jb
add
mov
add
jle
inc
mov
jle
mov
pusha
scas
xchg
push
cmpsl
ljmp
add
aam
push
into
iret
mov
mov
add
push
pop
push
mov
addr16
ror
dec
test
xlat
jp
mov
sbb
rcrb
push
es
dec
xor
mov
stos
mov
and
sahf
dec
insl
addr16
fwait
enter
iret
data16
fcomp
xor
lea
and
int
sub
adc
mov
ss
mov
mov
addr16
test
bound
lret
outsb
jle
test
in
lods
cmpsb
dec
dec
iret
cmp
dec
cmpsb
lock
xchg
addl
mov
sar
rclb
sbbl
in
adc
cmp
dec
xchg
add
mov
rorl
inc
mov
xor
loope
sub
imul
mov
adc
push
and
adc
pop
popa
cmpsb
xor
pop
sub
sub
stos
push
sub
popa
gs
dec
flds
insb
mov
push
std
push
out
sti
cmp
ja
push
pop
je
or
jg
shrl
jns
stc
xorl
rclb
inc
mov
pop
cs
int3
add
shlb
adc
hlt
ja
or
fmuls
mov
loopne
sbb
mov
sub
les
jb
dec
popa
outsb
add
lcall
jle
inc
fisttpll
ret
mov
into
and
fsubs
repz
popa
xchg
cmp
daa
outsl
or
rcrl
daa
xlat
pop
push
outsb
sub
push
lret
and
in
popf
les
std
xchg
push
fwait
xchg
cmp
jg
xchg
or
or
jo
jbe
jno
out
ret
xchg
icebp
in
shll
jns
movsl
adc
push
out
and
cmp
mov
mov
and
adc
xor
fadds
cmp
xchg
out
jge
fsubs
and
das
mov
and
add
sbb
jg
xorl
lea
lcall
sbb
mov
lahf
sub
push
and
cmc
jno
jmp
nop
rclb
lods
js
push
xchg
iret
sub
out
cmp
dec
mov
sbb
out
or
xor
add
sarb
xor
in
sub
fwait
ret
mov
outsb
jg
in
icebp
test
loop
aad
imul
lods
pop
test
je
bound
sub
pop
sub
lcall
subb
in
mov
xchg
js
ss
aas
je
shrb
mov
leave
ret
sub
notl
mov
jmp
out
mov
jg
and
hlt
gs
mov
pop
flds
cmpsl
aaa
add
or
imul
pushf
sub
xor
sbbl
pop
sub
je
push
add
push
or
lret
negl
das
push
dec
pop
test
mov
jne
jo
xor
addb
adc
lahf
insl
sub
pop
into
sub
pop
push
adc
mov
cmpsl
stos
mov
lods
dec
ror
fsubrs
cmp
int3
mov
imul
sbb
aaa
mov
cmp
sbbb
adc
aas
pop
add
iret
cmp
jnp
in
das
sarl
inc
sub
loop
enter
addb
data16
inc
scas
movsl
xchg
add
and
pop
xchg
je
push
mov
fcomip
lods
fisubrl
sti
push
sbb
adc
aad
mov
jbe
jg
push
ss
push
xchg
push
sbb
sub
mov
push
scas
in
pop
mov
mov
sub
cmc
cmp
and
sub
inc
stos
sub
lret
lret
test
fstp
mov
shrb
sbb
subb
dec
sub
and
imul
sbb
push
cmpsb
sub
clc
int3
cmp
ficoms
into
jb
mov
mov
mov
or
test
into
xor
divb
pop
pop
cmpsb
dec
inc
icebp
rcl
mov
lahf
js
mov
add
fldt
pusha
sub
hlt
or
pop
inc
ja
pop
loope
xchg
dec
jns
cmp
stos
pop
sub
inc
lea
lods
or
xchg
fxch
push
sbb
aad
js
icebp
or
cmp
loope
sbb
mov
inc
cmpsl
mov
leave
ss
lcall
mov
fiadds
stos
test
cli
bound
lahf
jp
sub
mov
loopne
fiadds
jae
pop
dec
addr16
in
jp
xchg
lods
insb
sbb
or
cmc
push
insb
andl
cmp
stc
sbb
mov
sti
push
pop
push
add
ss
movsb
fs
sub
cmp
pushl
fcmovnb
mov
hlt
push
add
sub
inc
popf
sub
and
ljmp
or
addr16
sub
mov
push
mov
mov
mov
lods
outsb
pop
push
dec
cwtl
sub
mov
pop
mov
push
test
mov
or
pop
ljmp
jmp
mov
popa
lds
mulb
sbb
push
rcrl
push
or
dec
push
mov
loope
mov
and
leave
dec
adcl
adcl
push
xchg
jle
shrl
and
jp
xor
xlat
jmp
js
push
notb
sub
pusha
push
fnstsw
mov
cld
add
or
in
ret
jns
sub
ljmp
int
ljmp
pop
or
test
sarl
bound
cmpsb
sub
pop
lahf
and
xor
inc
sub
adc
cmp
test
test
or
xchg
add
outsb
notb
push
data16
sahf
outsb
aam
cmpsb
and
mov
cs
mov
je
lret
dec
sub
inc
add
jmp
arpl
ljmp
mov
push
jecxz
inc
jnp
addl
loop
mov
data16
cld
xor
or
jle
clc
push
sbb
ja
in
nop
repz
pushf
pop
jns
jb
loope
out
mov
pop
jp
xchg
scas
jne
jbe
jle
push
inc
pop
es
mov
or
add
and
daa
pop
in
push
adc
enter
xor
mov
ja
pop
and
sub
ds
push
sub
inc
lret
aad
push
imul
mov
ds
push
mov
push
ja
icebp
cmp
call
fnsave
jns
lods
imul
mov
or
je
add
nop
adc
dec
jle
data16
pushf
imul
sub
push
mov
jns
sub
jl
push
rorb
xchg
roll
pop
loope
mov
test
xor
jno
adc
sbb
cli
movsl
out
sub
sub
ret
add
adcb
cmpxchg
or
xchg
je
fwait
push
push
insb
dec
sbb
out
out
xchg
mov
loop
push
push
add
in
lock
add
je
mov
push
dec
nop
mov
fbld
jle
or
add
pop
stos
ficoms
js
jp
sub
sqrtps
push
repnz
ret
pop
xor
sahf
and
cmp
call
jecxz
aaa
leave
hlt
iret
mov
fimull
mov
jne
push
pop
sub
repnz
lahf
lock
jns
je
repz
xchg
mov
and
fstp
cld
shll
addr16
mov
jnp
nop
xor
fmuls
div
push
shlb
mov
popf
aaa
mov
arpl
inc
add
jo
lret
lock
insl
jb
call
xor
rorl
sbb
pop
loope
into
xchg
jbe
mov
inc
xchg
xlat
cmp
flds
movsb
or
mov
jge
or
outsb
jmp
xorl
sub
mov
rcr
xacquire
cmpsl
push
call
stos
mov
rcrl
xor
outsb
sbb
mov
aaa
gs
aam
xchg
into
inc
arpl
outsl
push
jno
stos
cmpsl
cmpsl
mov
xor
sbb
jecxz
xorl
les
lea
hlt
sub
lods
lea
lcall
nop
mov
xor
fcmovbe
mov
jmp
cmp
sbb
test
scas
jmp
leave
ret
cli
aam
in
pop
mov
cmp
inc
aam
and
push
inc
push
loopne
xchg
pop
loope
sub
cmp
popf
mov
sarl
pop
imul
inc
jp
and
push
fcomps
out
cmp
mov
mov
fs
mov
pop
out
mov
adcb
or
lret
popw
jae
add
pop
fwait
and
xchg
add
lea
jl
cmp
js
or
and
push
and
push
cmp
xchg
push
mov
jbe
xor
fs
lods
cmp
repz
test
xchg
jge,pn
xor
mov
xor
ljmp
lock
sub
sti
vcomiss
scas
lcall
call
cmp
fcoml
sbb
push
in
in
pop
push
xchg
aaa
pop
jp
push
or
push
dec
mov
xchg
sbb
aad
sbb
lea
cmp
mov
ss
push
pop
and
inc
push
stos
imul
daa
in
mov
and
int3
cmp
pop
lock
pop
cli
testl
adc
fldl
sub
sbb
adc
mov
scas
jl
inc
aam
paddusw
stos
cmp
dec
cmpsb
lock
xchg
add
std
in
mov
sbb
cmp
mov
inc
sub
jg
add
jg
stos
lods
inc
scas
xchg
and
jno
pminsw
xchg
pop
xor
out
shlb
dec
adc
jmp
cli
mov
repnz
cmc
pop
jb
subl
inc
mov
push
mov
aas
cli
loopne
sub
loope
adc
adcb
pop
dec
add
sbb
mov
adc
jno
lock
sti
pop
xchg
inc
into
pop
lret
jns
rclb
jno
add
xchg
dec
xchg
pop
nop
std
pop
or
and
push
cmp
test
imul
mov
inc
rol
out
test
fdivs
ret
outsb
push
aas
jnp
sub
xor
cmc
test
sar
clc
inc
cmp
fdiv
stc
out
push
sub
push
mov
or
mov
outsb
jno
mov
xchg
and
out
icebp
int
mov
into
fisttps
dec
aad
jge
shlb
jnp
js
mov
sbb
mov
cmp
inc
mov
addr16
mov
mov
xor
aad
ja
or
lods
add
jae
aam
or
push
andb
jo
push
xchg
enter
ficomps
pop
ficompl
movsb
stos
jno
add
sub
jno,pt
jge
test
add
dec
stos
jp
mov
fcmovu
dec
or
popa
rsm
stc
incl
popa
arpl
cwtl
in
cmp
sbb
mov
push
mov
aas
cmp
and
or
adc
scas
sub
movsl
push
cmp
add
cmp
add
cmpsb
fisttps
test
es
lods
icebp
inc
pusha
inc
xor
dec
add
and
mov
dec
inc
add
rcl
into
push
ret
mov
in
lcall
xor
cltd
stos
insl
pop
leave
rclb
outsl
push
add
aam
lahf
outsb
ss
fisubl
imul
call
ret
add
jns
scas
mov
and
insl
movsl
daa
lret
or
jno
cmp
xchg
scas
cmc
dec
cmp
jnp
xor
pop
cmp
pop
shlb
in
sub
add
jle
jmp
jne
lret
dec
int3
sbb
inc
and
or
scas
add
imulb
scas
lds
xchg
sub
sahf
movl
cmc
lods
cltd
ror
push
popf
cmp
fucomip
sbb
fstl
rcll
cmp
aam
push
icebp
cmp
and
add
cmp
mov
std
cmpsb
loopne
cmpsb
xchg
xchg
lock
xchg
jmp
or
fcmovb
or
ss
pop
add
push
mov
xchg
cmpsb
jae
gs
fs
xor
sbb
sbb
fucomi
add
pop
cld
mov
sbb
xchg
imul
out
xchg
lods
jmp
xchg
aas
insb
ror
test
std
fdivrp
mov
iret
xchg
ret
mov
cmpsl
inc
popa
shl
mov
push
mov
repnz
adc
mov
jle
movq
in
xor
sub
daa
mov
andl
enter
ds
call
pop
pop
cmpsl
cli
ret
loopne
add
push
divl
or
test
pop
push
push
or
jge
adc
aad
adc
fwait
iret
add
ret
dec
jle
lcall
lea
and
xchg
aad
sub
int
gs
leave
popa
pop
add
mov
jle
xchg
push
pop
pop
jecxz
ret
movsb
jecxz
inc
and
stos
cmpsb
jp
es
xchg
dec
daa
lret
push
inc
test
loope
movsb
cmp
adc
int
cwtl
mov
push
stos
loopne
in
add
mov
lret
jne
xchg
ss
and
or
mov
sub
fcmovnu
inc
xchg
cmc
loope
push
andl
and
push
xlat
call
mov
clc
lret
sbb
jbe
rcrb
outsb
ja
ret
push
fdivrp
in
mov
jle
daa
sub
push
gs
outsb
and
xor
sar
addr16
repnz
out
jp
icebp
jle
jb
cmp
adc
cmc
jmp
lock
out
test
loopne
and
mov
bound
push
push
xchg
das
push
pop
jecxz
clc
pop
stos
aad
pop
cltd
pop
jae
xor
aaa
hlt
cmp
jg
jmp
push
mov
push
mov
leave
mov
popa
test
and
push
jbe
div
loopne
addr16
push
mov
push
add
sbb
xor
popa
cmpsl
sub
ljmp
aam
pusha
shll
mov
or
or
in
xchg
pop
jnp
push
rcrl
lods
mov
push
in
out
imul
cld
out
push
push
sub
cmp
nop
call
mov
es
xchg
jae
xchg
loop
loope
pushf
and
cwtl
repnz
fsubr
stos
mov
les
into
push
cmp
lret
pop
icebp
mov
add
movsl
lcall
repz
pop
sbb
jecxz
hlt
out
jnp
push
pop
call
jns
inc
test
add
adc
sbb
xchg
mov
pop
inc
faddl
push
mov
lahf
jno
mov
push
call
outsl
in
aas
call
enter
out
xorb
sub
int3
repnz
shl
mov
inc
test
add
jmp
cmp
push
movsl
shrb
jge
push
jge
fiaddl
xor
out
cmp
and
bound
aad
inc
dec
push
inc
leave
nop
push
dec
into
jmp
es
ds
mov
movl
arpl
sub
jg
xchg
xchg
es
mov
mov
testl
imul
repz
imul
add
jb
addr16
sub
cmp
pop
stc
pusha
fisttpl
popa
aad
addl
jnp
icebp
jbe
mov
xor
mov
sbb
das
pop
leave
inc
push
iret
ja
pop
jmp
loopne
jno
jp
or
add
dec
cmp
mov
sub
and
xor
or
faddl
insl
arpl
sub
sbb
cmp
mov
je
ds
ficomps
sub
inc
jmp
icebp
cmovs
lods
int
aad
in
push
clc
jns
push
or
cmp
pop
std
sub
mov
int
cmp
cwtl
cmp
mov
jp
push
push
repz
push
fcomps
popf
jmp
stos
or
xchg
jge
stos
jbe
cmpsb
clc
mov
aad
ja
mov
dec
cltd
data16
add
mov
scas
jne
push
divl
pusha
fwait
mov
dec
test
mov
jnp
sti
pandn
jmp
ss
push
sbb
push
sub
ret
imul
or
cltd
mov
cmc
icebp
and
test
test
lock
leave
xchg
repz
insb
leave
shl
xor
mul
push
pop
xor
dec
sbb
or
jmp
int
or
cli
sarl
leave
and
mov
push
pop
cmc
pop
hlt
xchg
jo
inc
xchg
xor
popf
inc
mov
filds
jge
adc
jp
push
push
xchg
and
div
arpl
stos
sbb
xor
xchg
lods
icebp
int3
mov
pop
adc
shl
mov
call
aam
push
mov
stos
mov
push
sar
ficompl
mov
lahf
add
roll
sub
or
icebp
dec
repz
adc
mov
and
jmp
cmc
mov
ljmp
cmp
enter
inc
int
mov
or
xor
loopne
scas
iret
inc
out
sub
out
or
sbb
inc
test
ja
cs
inc
cltd
leave
rolb
mov
mov
or
mov
sahf
mov
sbb
jmp
inc
shll
pop
mov
xor
pop
adc
mov
fmuls
mov
jg
imul
sub
dec
gs
cld
cld
sarl
popa
insl
dec
insb
out
jne
popf
push
sarl
inc
cli
sub
test
jb
pop
flds
mov
rorl
jecxz
push
pop
enter
icebp
lock
pop
stos
jg
ret
push
out
dec
mov
shrb
push
adc
popf
incb
pushf
movsl
xchg
out
push
lahf
sahf
lret
add
inc
lret
cmp
sarb
dec
popa
inc
mov
push
test
outsb
mov
lock
or
inc
nop
xor
insl
dec
sti
sub
rcll
sbb
in
inc
dec
push
je
jo
sub
push
movsb
aas
cmp
sbb
and
mov
add
jmp
xor
mov
push
in
mov
dec
mov
ret
lahf
fwait
ret
jns
push
xor
repz
leave
sahf
out
adc
push
incl
ficoms
add
sarb
repz
fs
rcrl
loope
cmp
stc
xchg
adc
mov
jb
mov
inc
mov
pop
cmpsl
test
xchg
add
pusha
inc
fcoml
adc
and
cmpb
adc
sub
push
testl
cmpsl
in
dec
icebp
push
rcr
xchg
mov
jbe
pop
lcall
xor
lock
adc
and
dec
sahf
and
insl
popa
les
lock
dec
test
adc
outsl
mov
je
dec
sbb
lret
je
lcall
push
data16
cld
add
hlt
dec
loope
aad
popf
test
test
rcrl
fwait
outsl
daa
rcll
and
in
xlat
xchg
fs
inc
inc
sbb
imul
xchg
jbe
aam
inc
sub
pop
push
lret
shr
outsl
leave
mov
and
add
imul
dec
sbb
fcmovbe
jl
std
mov
ss
lods
fistl
dec
pop
mov
ret
xor
call
mov
sahf
aad
aam
cmp
rcrb
clc
hlt
cmpsl
mov
in
data16
out
mov
jb
jno
lahf
sbb
mov
stc
mov
xchg
aas
mov
push
jne
arpl
mov
fidivl
pop
or
jmp
sti
or
sub
xchg
in
pushf
dec
inc
int
adc
jle
jb
add
push
xchg
popf
arpl
sbb
popa
cli
lods
and
jge
inc
stc
push
cmp
lahf
idiv
sbb
mov
mov
test
push
daa
jbe
mov
sti
fs
mov
lahf
push
lock
xor
mov
mov
test
jns
and
daa
add
rol
mov
cs
mov
aam
fucomp
sbb
xor
fldenv
mov
adc
imul
and
test
pop
scas
dec
and
das
sub
mov
cltd
mov
rcr
dec
xor
push
xor
add
mov
loopne
pop
mov
repz
sub
test
push
pop
ret
ret
add
lcall
push
loope
cmpsl
fsts
inc
or
adc
pop
or
mov
mov
pusha
imul
sbb
ja
push
xchg
loop
orl
loop
sbb
pop
movb
cli
push
xchg
into
fistl
repz
dec
fmulp
mov
lcall
mov
cltd
push
xor
adc
pop
packsswb
inc
sub
dec
gs
sbb
cld
das
test
decl
cld
jp
lods
push
cmp
sub
ss
or
mov
jnp
scas
sbb
pop
cmp
dec
mov
outsb
and
xchg
mov
inc
and
out
xlat
cmp
adcl
hlt
aas
xchg
inc
inc
push
push
enter
xor
out
scas
and
outsb
cmpsl
out
push
pop
inc
mov
xchg
mov
jge
inc
pop
pushf
icebp
rclb
dec
ss
pop
inc
iret
and
andl
dec
in
ficompl
faddl
mov
mov
sub
cltd
dec
sub
or
cmp
mov
aaa
dec
jg
xchg
push
scas
mov
out
adc
xchg
jne
daa
pop
and
addl
add
lcall
out
sbb
fldenv
and
adc
in
xchg
fsub
pop
pushf
ljmp
adc
pop
xchg
imul
repz
xchg
inc
cltd
or
and
outsl
sahf
pop
pop
jae
sub
sbb
mov
adc
jns
ss
ja
inc
arpl
call
mov
cmp
mov
inc
xchg
pop
pop
test
jae
mov
into
popa
fsubrl
inc
mov
movsl
and
sbb
pop
shrl
mov
mov
push
cs
or
hlt
sub
int3
mov
dec
rcrb
cs
dec
and
inc
loopne
push
and
cmp
jno
add
jl
fildl
mulps
mov
dec
arpl
xor
std
sub
inc
stos
push
mov
fsubp
data16
sbb
mov
sti
aaa
call
loopne
xor
xchg
popf
mov
jmpw
imul
mov
jg
stos
repz
add
gs
adc
fistpll
out
into
lods
add
ss
popa
ret
add
pop
pop
int
add
and
gs
pop
sbb
push
and
mov
xor
inc
pop
iret
cmp
sub
pop
in
stc
and
jmp
cmpsl
insb
sub
flds
out
and
lods
ds
mov
cld
jmp
jns
mov
sub
mov
push
and
loope
sbb
cltd
test
pop
xchg
cmc
push
xchg
mov
cmp
mov
insb
xor
adc
sbb
test
fwait
jecxz
fnstenv
inc
inc
add
aam
or
push
fiadds
movsl
cwtl
out
bound
idivl
dec
pop
sub
dec
nop
xor
pop
enter
cmp
xor
ja
xor
subb
push
lahf
inc
in
in
je
fcmovnb
shll
shl
sbb
scas
decl
enter
lea
mov
dec
mov
dec
push
call
imull
lcall
push
sub
data16
movsl
or
cs
fimuls
pop
xchg
or
sbb
in
mov
cmc
fiadds
xor
mov
xchg
aas
xchg
imul
insl
loop
cltd
sub
or
int3
dec
cmp
jbe
jb
daa
mov
push
aad
jge
stos
add
fcmovnb
cmp
stos
mov
xor
lea
cwtl
pop
fsts
stc
test
push
dec
fistpl
je
mov
pop
mov
addr16
icebp
scas
lods
pop
xchg
in
sub
das
add
nop
in
mov
jecxz
dec
inc
pop
dec
lcall
push
lcall
loopne
das
rcrb
dec
popf
das
lea
cmc
gs
fdivrs
dec
fiaddl
sub
mov
nop
sub
cmpsb
outsb
scas
sub
into
inc
jle
xor
mov
pop
mov
lahf
mov
jne
cmp
mov
mov
sub
imul
cli
ret
out
in
pop
fldenv
test
in
cld
jns
lahf
jbe
xchg
mov
push
popa
repz
sbb
rcr
rorb
sbb
jp
jbe
jmp
jg
xor
aam
aaa
aas
sub
xchg
insl
nop
stos
pop
mov
push
inc
in
inc
or
gs
mov
jb
aaa
jae
cmp
mov
xor
dec
out
loopne
cmc
outsb
mov
cltd
mov
xor
push
cmp
ja
or
inc
out
imul
in
sarb
cmpsb
dec
popf
add
mov
fdivl
subl
leave
or
cmp
add
lods
loopne
or
hlt
mov
stc
push
push
loop
and
jo
mov
std
inc
sbb
dec
fwait
out
fucomp
imul
push
cmp
dec
out
imul
jns
jecxz
push
popf
fdivrl
out
cmc
or
out
imull
adc
sub
ret
jae
arpl
std
loop
push
adc
cmp
or
sub
add
jae
sbb
mov
outsl
pop
test
mov
mov
stos
test
sub
lcall
stc
mov
aad
sub
dec
hlt
out
xchg
xor
adc
lock
test
mov
rcll
test
js
movb
mov
idivl
hlt
push
mov
in
and
ljmp
jmp
cmp
lahf
hlt
mov
aam
repz
adc
mov
mov
xor
lea
test
sub
hlt
push
fstpl
or
enter
jno
shl
sbb
lods
xchg
decb
jg
add
sub
and
and
mov
and
les
dec
add
lock
lea
and
add
jp
fsubr
xlat
pop
sub
cmpsl
xor
and
add
repz
fcoml
inc
mov
fnstcw
out
rcl
iret
push
ja
mov
xor
and
jmp
push
int
lcall
pop
jl
sbb
fldcw
jle
jae
pusha
jmp
ja
xor
mov
insb
push
nop
repnz
mov
dec
mov
and
je
into
add
jle
fidivrl
stos
cltd
icebp
aad
sbb
push
lods
mov
xchg
cs
aad
push
inc
sbb
rorb
and
insb
adc
gs
mov
lcall
popa
inc
leave
push
fwait
outsl
aas
sub
repnz
rcrl
shrl
lods
call
mov
int
insb
jbe
adc
leave
icebp
pop
test
sbb
fs
pusha
test
xchg
sub
cmp
adc
inc
in
arpl
add
pushf
push
adc
stos
std
or
jb
das
jae
lea
arpl
and
out
mov
add
bound
into
xchg
jp
add
inc
std
jnp
lods
insl
sub
outsl
adc
xchg
fisttpl
jecxz
fisubrs
jae
aaa
or
ds
mov
push
jb
sub
jbe
add
mov
and
vpshufd
stos
push
mov
shlb
or
dec
sbb
mov
mov
push
movsb
je
pusha
mov
cmp
pop
or
inc
repz
aam
hlt
add
sbb
popf
mov
cmpsb
outsl
mov
xchg
xchg
leave
in
dec
pop
mov
fistps
jmp
lcall
in
cmp
scas
lods
xor
cld
iret
cwtl
inc
mov
shrb
xor
into
xor
dec
orl
insl
or
xchg
test
sub
mov
and
in
xchg
mov
sbb
decb
outsl
xor
aad
dec
jle
cmp
sbb
sbb
jae
in
int
jae
lahf
addr16
adc
mov
ljmp
inc
or
mov
mov
push
xor
jg
or
jbe
test
cmp
aaa
xchg
jmp
stos
xor
xor
fwait
add
inc
hlt
andl
mov
adc
mov
test
lea
fadds
mov
inc
lods
ja
aaa
xchg
mov
cli
enter
pop
stos
fs
mov
test
jl
cli
cvttps2pi
lahf
and
pop
and
mov
in
les
mov
nop
or
pop
fs
stc
sbb
and
frstor
cmp
hlt
aam
test
insl
mov
aas
out
adc
sub
mov
lods
xchg
hlt
dec
sahf
fcompl
xchg
and
jg
dec
dec
fstps
mov
fimull
push
negl
and
imul
sbb
jmp
mov
loop
xor
add
inc
jmp
sbb
es
sbb
lock
lods
cmp
cs
stos
mov
shrl
cltd
or
repnz
xchg
push
mov
ret
aam
std
stos
fisttps
fiadds
insl
clc
repnz
cmp
sub
sub
xchg
sarb
push
push
insl
lea
xor
xorb
pop
jae
mov
xor
repz
inc
popa
mov
cmp
adc
mov
sbb
out
dec
jle
push
mov
lret
js
fwait
sbb
add
outsl
jns
mov
cmpsb
sbb
push
out
orl
movsb
and
mov
dec
fisubrl
pop
loope
or
fwait
dec
mov
pop
mov
in
cli
out
std
out
loopne
call
call
leave
add
sbbl
pop
sub
cltd
int
lods
cltd
jnp
inc
stc
push
inc
scas
stc
mov
pop
add
pop
add
roll
sub
pop
in
fucomp
insb
sub
jecxz
jl
xchg
popf
mov
mov
mov
adc
jg
jp
out
out
sub
add
dec
jmp
xchg
lods
jno
cmpsl
inc
xchg
loopne
add
mov
pop
pop
dec
jb
dec
push
or
sub
ret
jno
or
jae
lds
add
scas
jb
mov
sarl
hlt
nop
pop
dec
lret
push
sub
sbb
int3
shr
movsb
loope
or
add
sti
fwait
push
mov
mov
adc
out
push
sub
add
add
int
loop
and
aad
das
inc
stos
movsl
daa
loop
pop
arpl
bound
mov
dec
jnp
push
std
jg
jo
cmp
mov
int3
call
jg
loop
scas
fnsave
push
dec
lahf
inc
out
mov
addr16
fwait
inc
mov
add
jge
sbb
rclb
fs
hlt
jmp
jnp
and
push
sbb
mov
pop
test
out
clc
xchg
test
xchg
mov
mov
push
xchg
fwait
xlat
fistl
or
mov
fwait
pop
mov
and
movsb
aam
fildl
leave
jl
decb
into
jge
mov
loope
xchg
mov
scas
mov
mov
and
add
popa
imul
pusha
xchg
push
je
and
ja
mov
sbb
nop
les
movsl
fmuls
jecxz
jmp
in
movl
cli
jle
gs
leave
iret
popf
insl
out
add
mov
xchg
cmp
fmull
mov
ret
xchg
xchg
sbb
aas
push
or
popf
lds
jae
gs
mov
fwait
int3
outsl
mov
push
jne
mov
push
das
cld
dec
fs
xor
mov
outsb
arpl
movsb
inc
push
leave
outsl
scas
sub
cs
and
mov
mov
lret
pop
dec
xorl
inc
mov
jbe
aaa
loopne
mov
pusha
push
push
jbe
adc
ret
add
cmpsb
addb
mov
mov
test
add
sahf
data16
ja
testl
dec
shlb
mov
jge
inc
out
in
pop
sbb
rol
jg
dec
push
dec
lret
daa
pop
cld
loope
sar
pop
mov
ror
in
fsubrs
in
and
or
loop
mov
cltd
cld
outsb
jp
jns
inc
lock
jge
mov
mov
adc
imull
sbb
sbb
pop
and
push
mov
pushf
mov
xor
xchg
aas
les
xchg
int3
sbb
cld
add
jge
sbb
mov
mov
pushl
inc
movsb
xchg
or
push
mov
xlat
int3
mov
mov
inc
add
mov
ja
inc
loopne
ja
test
mov
jg
jge
popa
fsubp
loop
push
outsb
jmp
sbbl
mov
xor
jle
jmp
arpl
repz
inc
gs
mov
adc
or
add
fcomi
loopne
aam
popf
outsb
xchg
mov
add
aad
into
repnz
cmpsl
xchg
and
jns
fs
in
xor
push
icebp
mov
leave
add
add
popf
cmp
jl
icebp
cwtl
push
inc
enter
add
inc
aam
test
dec
and
push
pop
xchg
fwait
mov
out
lret
mov
and
dec
push
dec
je
gs
aas
loope
cmp
sub
jmp
jp
xor
testb
pushf
sbb
jne
cwtl
cmp
pop
mov
in
cs
sbb
push
ja
or
add
pop
addb
cwtl
sbb
cli
xchg
insl
cli
mov
icebp
sub
sarl
loopne
cvtps2pi
and
mov
sub
imul
out
sti
imul
adc
std
test
and
popf
cmp
ljmp
out
or
mov
notb
mov
loopne
add
dec
pop
iret
daa
xchg
inc
cltd
mov
add
mov
jecxz
push
pop
cwtl
jnp
cmc
fisttps
sub
sub
inc
aad
pop
add
dec
fimuls
add
pushf
bnd
dec
dec
cmp
xor
insl
add
sbb
or
mov
out
js
das
mov
xchg
mov
pop
mov
fisubrs
xchg
xor
or
sub
pop
iret
cmp
jb
cmp
or
fimull
negl
jns
jl
mov
dec
loope
bound
mov
xor
divb
lret
fidivrl
mov
fcmovne
lret
in
loop
cld
or
adc
pop
cmc
popf
xor
mov
lods
loope
loopne
jmp
scas
dec
imul
pop
out
fiadds
lahf
pop
mov
mov
adc
outsb
incb
sbb
in
cltd
icebp
sarb
aas
inc
jg
mov
inc
sbb
ljmp
pop
mov
icebp
cs
xchg
shlb
mov
popa
jo
dec
mov
aas
xorl
inc
cmp
pop
xor
jnp
or
jae
push
xchg
push
lods
fwait
lret
xlat
es
fwait
or
or
and
jp
fwait
aaa
daa
lods
cmp
push
mov
in
cmp
fs
sub
pop
mov
fmuls
loope
imul
test
pop
inc
cltd
fmull
cltd
jecxz
cmp
lret
addl
pop
das
addr16
fs
cmp
shl
dec
fistpl
fsub
cltd
xchg
test
inc
cmc
idivl
adc
jnp
xor
mov
cmp
jne
jns
repz
ljmp
adc
scas
movsb
sub
xchg
das
movsl
and
jmp
test
test
inc
jae
mov
jecxz
mov
sub
xchg
dec
icebp
adc
add
ljmp
aad
stc
inc
jmp
adc
pop
repz
icebp
das
pop
rcr
in
sub
xchg
xor
adc
pop
push
aaa
dec
pop
fcompl
shlb
inc
mov
xor
adc
mov
sbb
ljmp
andl
pop
std
sub
mov
idivb
movsl
and
adcb
xor
jle
out
outsb
test
mov
push
xchg
jmp
sub
in
repnz
push
mov
fs
adc
pop
pusha
je
js
xchg
sarl
mov
nop
lea
inc
sbb
mov
mov
fildl
out
push
cmp
aad
xor
mov
add
test
inc
mov
add
xchg
push
xchg
je
int
test
aaa
mov
pushf
sub
pop
xor
sti
mov
sub
fwait
clc
in
dec
sub
xchg
out
mov
mov
mov
into
das
imul
push
or
xor
lods
mov
lret
mov
stc
hlt
popf
dec
rcrb
incl
mov
inc
push
jmp
cli
pop
and
scas
inc
add
add
sub
outsl
std
push
in
fs
adc
fnstcw
inc
mov
fwait
jb
insl
jmp
dec
adc
adc
mov
push
repz
std
adc
popa
add
add
add
or
jo
sahf
jb
in
cld
push
inc
push
add
or
jbe
and
nop
jbe
mov
imul
hlt
jmp
inc
clc
add
outsl
repz
inc
aam
mov
pushf
lock
popf
gs
dec
ja
jg
mov
iret
xlat
inc
lcall
cwtl
dec
cmpb
rcrb
lahf
xor
jecxz
jb
and
int
mov
js
mov
cwtl
xorb
mov
popf
int
movsb
adc
in
es
cmpb
pop
and
addr16
adc
xor
lods
xchg
fwait
jp
sti
mov
push
adc
push
push
pop
add
push
notl
aad
fadd
fbstp
push
mov
bnd
fmull
mov
ficompl
mov
mov
call
in
inc
insl
sahf
jbe
outsl
add
pop
mov
lret
sub
cmpsl
xchg
stos
loop
xchg
rorl
shl
jmp
push
pop
and
ja
or
adc
loop
in
sub
push
or
and
xchg
mov
mov
pop
adc
and
or
cmp
into
jp
lahf
push
adc
pop
push
jmp
je
pop
sbb
mov
pop
sbb
xchg
fdivrp
insl
int3
add
and
lods
dec
jo
adc
sbb
sub
and
and
int3
imulb
mov
ror
add
stos
and
mov
in
fiadds
sahf
scas
cmc
pop
pop
testl
mov
scas
jle
adc
inc
push
aam
xchg
cli
sub
lods
out
push
inc
add
cmp
add
push
push
mov
scas
sbb
cltd
sahf
into
adc
clc
sbb
ds
fsubrl
push
pop
iret
lcall
inc
add
sub
mov
cld
icebp
js
pushf
faddl
in
push
cli
fs
stc
jbe
adc
andl
into
inc
sarl
xchg
pop
pusha
mov
xor
aaa
es
xchg
das
stc
cwtl
adc
mov
xor
dec
inc
sub
push
mov
push
rolb
ja
ret
mov
cs
mov
sbb
push
push
seto
mov
pop
pop
cmpsl
or
js
and
inc
fildll
stos
lods
jne
loope
inc
lret
xchg
sbb
xor
sbb
fldl
ds
sbb
js
pop
dec
xchg
sub
jo
sub
xor
cmpsb
stc
lds
jo
loopne
fdivrl
pusha
sub
pop
jns,pt
mov
cmpsb
out
fdivl
jle
scas
mov
xchg
inc
inc
out
mov
push
iret
mov
scas
lret
imul
daa
cmp
out
xor
movsb
aaa
fisttpl
pop
movsb
outsb
push
push
inc
adc
xor
xchg
fidivl
adc
cmp
fidivrs
jle
add
pushf
hlt
psrld
adc
bound
dec
and
aad
loop
mov
mov
jmp
out
push
movsl
rolb
js
loope
std
push
mov
in
movsl
adc
andb
pop
pop
lahf
loopne
mov
inc
sbb
jmp
cmpsl
sbb
lahf
push
gs
popa
sub
int
nop
cmovs
pushf
mov
daa
ret
shrb
movb
adc
cmp
hlt
iret
pop
xor
cmpsl
cmc
mov
aad
mov
call
orl
and
lea
ja
clc
jnp
jo
out
cmp
in
lea
mov
and
jmp
sub
lret
stos
fdivl
jle
orl
into
test
xor
out
cltd
and
insl
pushl
pop
mov
mov
inc
or
sub
stc
fstps
das
lods
imul
push
sub
lods
xchg
fwait
sti
jp
inc
popf
mov
jg
jo
dec
addb
divl
in
push
mov
dec
bound
test
lcall
pop
cmpsl
mov
xorl
dec
jae
fwait
mov
dec
push
daa
movsb
jmp
aam
mov
in
add
test
pop
mov
push
push
gs
cmp
cld
xor
sarl
adc
push
test
inc
dec
add
pop
jg
pop
sahf
pushf
sbb
sub
inc
rol
cmpsl
jmp
mov
out
xor
addl
jbe
shrb
xor
inc
xchg
xor
out
in
and
xor
jns
ret
mov
loop
and
cli
pop
mov
fwait
sahf
sub
cwtl
push
jp
mov
enter
cmp
out
out
sbb
push
inc
cmc
int3
mov
push
dec
stos
and
or
mov
pop
loope
and
hlt
mov
cmp
shr
sbb
sbb
pop
cmp
jp
das
rcrl
outsl
dec
xchg
popa
xlat
push
mov
jno
or
add
addr16
push
insl
jo
mov
aaa
gs
sub
loope
stos
fwait
push
inc
pop
cmc
mov
pop
mov
dec
and
or
and
push
cmp
js
lds
int
xchg
das
mov
ljmp
jl
es
fcomi
fs
leave
fsubrp
push
imul
mov
dec
jge
insb
aad
enter
push
ss
xor
mov
xchg
imul
mov
out
adc
int3
in
lret
pop
push
stc
mov
add
imul
shrb
adc
cld
jno
dec
test
add
data16
and
cmpl
cs
in
cld
pop
out
gs
push
fsubrp
fsubr
ja
jo
mov
cmp
mov
outsb
add
insb
cmc
mov
mov
ret
and
ffree
or
pop
pusha
cwtl
and
push
idiv
loopne
xor
adc
lret
add
xchg
xor
mov
rorl
sti
mov
mov
icebp
dec
mov
mov
fadds
cli
mov
addb
mov
insb
sti
int
lds
or
aaa
push
push
jnp
adc
sbb
jno
jmp
outsb
leave
pop
pushf
xor
push
cld
jae
loope
jae
jecxz
push
sbb
pop
inc
cmpsb
testl
inc
loope
sub
pop
sub
pop
add
dec
les
movsl
pusha
mov
cmc
add
mov
lods
es
add
or
cld
and
aas
js
push
dec
nop
dec
inc
loope
sahf
insb
scas
inc
and
hlt
enter
cli
push
lcall
in
sbb
mov
and
lods
dec
mov
shll
lds
loope
enter
xchg
cmc
push
clc
cs
xchg
mov
ljmp
fwait
cmp
xorl
je
fbstp
repz
adc
jo
movsl
das
test
sar
test
and
scas
xchg
enter
subb
cmp
dec
mov
out
popf
xchg
lock
sbb
das
aaa
jecxz
cmp
scas
faddl
adc
into
cmpsl
adc
cltd
in
callw
and
adc
push
xchg
adc
sbb
cld
lods
push
cltd
mov
int3
and
xchg
jp
std
outsl
sub
mov
fwait
jmp
xor
sahf
jns
test
popf
shld
sbb
cmpsb
or
inc
jbe
clc
enter
mov
pop
scas
or
sub
pop
push
xor
inc
xchg
jno
mov
loopne
mov
je
pop
xchg
mulb
ret
scas
addr16
mov
ror
xchg
hlt
int3
cmpl
and
clc
adc
test
shlb
jge
pop
cmp
jecxz
fs
and
cmpsb
std
add
leave
cmp
inc
pop
mov
sub
cmp
ret
movb
shll
xchg
in
cli
mov
push
fcmovbe
jne
bound
bnd
dec
mov
pop
fmul
inc
aaa
add
xor
sbb
xor
add
push
lcall
mov
pop
xor
jp
sbb
sbb
pusha
mov
test
push
ret
clc
push
xor
sbb
daa
lret
cwtl
dec
sbb
cmpsl
cld
mov
and
add
cld
dec
jo
mov
adc
and
mov
xor
push
lahf
add
cwtl
into
jae
mov
bound
push
pop
mov
or
outsl
add
jnp
adc
js
ficomps
std
bsr
lods
out
or
insl
orb
out
fnstcw
push
testl
jb
mov
mov
imul
dec
inc
pop
aad
xor
cmc
adc
push
inc
sub
cmp
cmp
insb
sbb
aam
cli
lahf
mov
lods
cs
loop,pt
pop
mov
cmc
xlat
sub
out
xchg
lock
ds
cmp
cmp
fs
mov
nop
xor
sbb
call
mov
or
push
xchg
stos
xor
mov
rorb
dec
insb
fcoml
pop
rorl
mov
and
cmp
jge
repz
jmp
jle
movsb
fdivs
addb
push
pop
daa
shr
jne
mov
inc
sti
cs
in
ret
stc
int
cwtl
jae
ds
fldl2e
sbb
shlb
repnz
add
popl
das
mov
js
pop
push
dec
xchg
sub
jbe
stos
movl
push
int3
mov
shld
mov
xchg
sub
fwait
icebp
pop
inc
out
out
mov
sbb
push
mov
sbb
shlb
jnp
mov
adc
jge
lds
iret
outsl
sub
mov
enter
int
and
ja
mov
ds
mov
sahf
ja
lock
lock
xchg
sub
jne
or
pop
into
scas
aaa
push
or
xchg
xor
rolb
test
jl
push
fsubrl
mov
xorb
jbe
cmp
push
mov
push
and
sbb
xchg
adc
addl
cmp
add
jne
push
mov
adc
rol
int
popa
and
add
cmc
fmuls
shlb
test
push
jmp
or
pop
mov
sbb
rclb
mov
add
adc
pop
shrb
dec
sub
lret
mov
mov
pop
nop
movb
mov
loopne
adc
and
ss
insb
sub
out
outsb
fisttps
cmc
xor
xor
xor
adc
and
sub
aam
dec
mov
mov
jp
icebp
mov
mov
mov
shrb
subb
dec
inc
enter
ds
int
cmpsb
imul
push
daa
push
icebp
imulb
movsl
push
mov
sub
ss
fs
das
ja
movsb
pop
dec
js
ds
stc
xchg
jp
push
xlat
xchg
push
or
sbb
lock
push
mov
sub
xchg
jae
adc
mov
idivb
ror
xor
call
add
mov
fsubrs
daa
xor
or
sub
nop
xchg
fs
or
adc
cmp
movsb
push
mov
adc
loope
insl
sub
inc
xor
fstpt
or
fidivl
outsl
mov
rclb
xor
mull
lret
xchg
adc
inc
push
xchg
ss
in
adc
jno
call
int
in
dec
loope
adc
adcl
cmp
push
mov
xchg
ret
cwtl
imulb
xchg
stc
sub
andb
xor
sbb
xor
jl
ds
or
je
jmp
ss
mov
jbe
in
push
mov
sbb
insb
inc
fstps
ljmp
or
mov
or
pop
push
popf
iret
out
das
inc
mov
xor
or
ret
fstpl
sub
outsb
lcall
jnp
mov
les
jl
daa
sub
aad
test
cmpsl
or
daa
jg
lcall
lret
rcrb
stos
rcr
hlt
add
in
add
dec
popa
cmp
or
les
into
mov
test
fs
xchg
xchg
pop
xchg
jno
out
or
les
lcall
or
mov
insb
sub
and
out
movl
test
mov
fwait
or
es
sbb
int
gs
inc
add
inc
mov
add
cld
add
xchg
aad
xor
mov
sbb
push
popa
repz
xchg
arpl
jmp
test
mov
mov
inc
jg
cmpsb
xchg
and
push
icebp
add
or
sarl
dec
out
aad
cmp
test
cmp
push
into
or
mov
outsb
mov
in
mov
adc
jg
das
lock
and
fwait
jno
sub
xchg
mov
dec
xchg
push
inc
sbb
mov
enter
and
cmp
push
inc
cwtl
ror
jge
dec
push
sbb
mov
leave
and
fwait
xchg
jbe
fldl
pop
mov
je
sub
arpl
jl
xlat
xor
mov
fldt
inc
sarb
mov
fdivrs
mov
mov
inc
stc
fisttpl
mov
fcoms
pop
and
fildll
xor
add
and
das
iret
stc
mov
or
cmp
sti
js
fildll
xchg
lock
sbb
mov
xchg
iret
jno
mov
cmp
dec
and
cmpsl
push
daa
and
add
cmp
js
mov
lret
pusha
pop
push
lock
arpl
pushl
add
sub
sahf
adc
pop
mov
test
add
mov
jne
loopne
outsb
sbbb
sti
ja
test
cld
sbbb
mov
mov
jb
pop
icebp
jbe
sbb
inc
mov
sbbl
push
mov
insl
cld
sub
push
sbb
inc
sbb
sbb
mov
add
adc
imul
or
or
cwtl
pop
shrl
pop
pushf
xor
mov
data16
mov
sahf
gs
and
cltd
push
mov
adc
add
xchg
cli
dec
iretw
jecxz
fisubrl
add
cmc
lcall
pop
das
fistl
sbbb
loopne
std
fwait
add
push
mov
sbb
add
xor
mov
adc
ficoml
pushf
sub
out
cli
pop
outsl
adc
xchg
cmc
xor
dec
mov
push
int3
push
ss
sbb
mov
popa
adc
inc
cmp
mov
ss
paddsw
cmpsb
mov
ret
pop
mov
movsl
stos
dec
mov
cmp
dec
pop
mov
and
push
in
sti
mov
cld
or
mov
bound
nop
xor
pusha
dec
fimull
adcb
fsubrl
sahf
call
hlt
dec
aad
je
dec
lds
and
push
xchg
jns
hlt
push
add
adc
pop
adc
sbb
lods
lcallw
lds
mov
mov
xchg
into
or
jnp
sbb
das
pop
sbb
mov
fsubs
push
jns
fisttpl
in
jl
jnp
loopne
lea
mov
adc
cmc
clc
daa
call
jns,pt
pop
ljmp
jge
mov
outsl
and
and
jle
test
xor
loope
push
gs
xchg
shrb
jne
mov
sbb
bound
pop
mov
pop
rcl
xchg
and
cmp
data16
fiadds
pop
jnp
pop
adc
cmp
jmp
mov
mov
mov
fdivs
or
loopne
mov
adc
push
test
das
pop
cmp
jmp
movsb
mov
mov
fucomp
and
iret
pop
cld
fistpl
adc
mov
stos
mov
outsb
sarl
call
and
push
mov
int3
clc
cmpsb
jo
xor
icebp
insb
jl
sub
cmpsl
loop
data16
loop
jl
dec
lret
add
in
cld
pop
inc
jecxz
push
push
xor
pop
rcll
push
mov
in
pop
ja
push
sti
inc
dec
adc
cltd
pop
in
in
repz
fadds
out
sar
arpl
fdivrl
ja
push
or
xchg
mov
rorl
out
aas
adc
loope
pop
hlt
jns
xor
lret
popa
push
mov
cmpsl
xor
sahf
jle
int
mov
fisttps
std
imul
add
mov
andb
sti
ljmp
pop
ja
in
out
repnz
in
je
cmpsb
push
lods
leave
xchg
mov
sarb
cltd
lods
test
dec
ja
adc
in
mov
out
mov
popf
inc
mov
push
cmc
fimuls
mov
cmp
pusha
jnp
sub
and
jnp
mov
pop
and
jmp
addr16
push
out
out
xchg
cmp
cmp
jo
mov
std
fucomp
in
cmp
inc
inc
sub
push
imull
push
fisttps
ret
inc
ja
push
mov
popf
clc
mov
mov
or
mov
in
xor
hlt
lods
movsb
fwait
push
fwait
pop
lods
in
in
andl
or
out
pop
js
out
xor
popa
mov
add
inc
sahf
cltd
addb
xor
pop
jecxz
push
bound
mov
in
fs
mov
leave
dec
fdiv
and
xor
inc
orb
ffreep
sub
and
in
add
in
in
adc
divl
mov
lock
aad
sbb
fidivs
mov
or
xor
in
rcll
jae
sub
jo
cmpsb
adc
cmpsl
out
mov
out
fmuls
push
pop
mov
out
popa
add
inc
xchg
insb
mov
push
shl
push
sub
int3
into
xchg
push
push
outsb
test
mov
mov
movsb
inc
movsl
js
xor
pop
and
bound
pop
cmpsb
mov
or
push
fsubrl
daa
in
sarb
imul
lret
shll
icebp
push
repz
fstps
pushf
add
dec
sbb
sub
movsl
mov
pop
jne
inc
adcl
push
add
xor
loope
es
dec
mov
loop
aam
lcall
aad
cmp
in
pop
pop
or
dec
pusha
inc
cs
inc
lock
push
out
mov
add
int
cmp
mov
mov
negl
cmp
xchg
mov
cltd
fidivrl
iret
pushf
sub
jl
movzwl
call
ret
push
bound
jl
mov
sub
ljmp
fmulp
aad
mov
jecxz
mov
pop
sub
cwtl
push
out
pop
std
repz
push
pop
out
pop
aad
scas
call
cwtl
ret
pop
movsb
nop
xchg
dec
push
and
test
or
mov
loop
add
clc
scas
sub
xchg
shrl
mov
rcrb
pop
mov
mov
inc
outsb
sahf
addr16
cmc
jno
pushf
jne
das
fs
adc
xchg
xor
push
adc
pushf
xlat
test
aas
xchg
das
mov
push
test
mov
in
rorl
mov
bound
pop
cmpsb
imul
lods
rorb
je
test
negb
addr16
shlb
lock
pop
fs
lcall
cmp
pop
and
pop
icebp
pop
sub
andl
xchg
sbb
sbb
pop
inc
daa
push
das
jo
add
or
mov
push
ss
out
in
les
rorl
push
and
add
ljmp
out
lcall
lahf
imul
jb
into
push
nop
add
mov
repnz
inc
push
jge
push
jle
dec
call
pop
mov
fiadds
fbstp
mov
mov
movsl
out
movsb
xchg
xchg
pop
sub
sbb
rorb
mov
dec
xor
aad
lcall
ljmp
adcb
mov
sbb
push
dec
cmp
sbb
shrl
pop
add
dec
xchg
jecxz
sbb
ss
lods
femms
ss
shll
xor
das
mov
xchg
inc
jnp
sbb
aad
pop
jg
jle
clc
js
sub
js
mov
xor
mov
je
pop
shll
jg
and
mov
cmpsl
imul
xchg
lea
xor
daa
adc
lret
loopne
out
hlt
add
mov
fdivrl
or
dec
pop
pop
cmp
inc
out
or
xchg
shlb
adc
test
fidivs
idivb
jo
out
sahf
dec
loop
sub
jl
xor
js
leave
cmp
out
xor
fnstenv
aam
in
jbe
icebp
outsb
dec
adc
or
mov
pop
movsb
adc
dec
out
inc
add
cwtl
in
je
mov
xchg
mov
xor
jle
sbb
sub
push
aad
jmp
push
or
test
imul
int
cli
cmp
jae
ds
lock
fdivs
sahf
imul
mov
push
aas
out
adc
and
push
inc
out
icebp
add
into
enter
cmp
clc
or
pop
xor
pusha
cs
dec
cmp
push
pop
mov
fld
popa
iret
mov
fwait
jne
cmc
aas
insb
repz
sahf
mov
mov
add
cmp
mov
jnp
xor
aam
xor
xor
neg
mov
imul
repnz
mov
sbb
hlt
stos
push
test
incl
adc
mov
mov
iret
mov
push
jp
rcrb
fs
sbbb
ret
cmpb
js
lret
pop
xchg
pop
aaa
dec
pop
jb
add
cmp
cld
pop
outsb
sbb
js
xor
mov
push
outsb
jp
jl
mov
imul
adc
pop
or
xor
lock
or
pop
jb
pop
xor
inc
mov
ficoms
jno
aad
lret
mov
ret
and
mov
jle
cmc
pop
leave
test
and
xchg
scas
repz
sbb
and
push
popf
push
stc
xchg
aad
jbe
orb
sub
nop
mov
fnsave
cmpsb
cld
and
fnstcw
or
mov
jbe
jecxz
into
jns
jge
pop
std
divb
divb
and
insl
sub
inc
rclb
std
jbe
lock
aad
and
lods
and
xchg
pop
les
push
aaa
arpl
ja
cmp
inc
fisttps
in
loope
push
xor
movsb
mov
roll
out
ss
push
add
or
sar
out
out
jl
adc
or
xor
push
fwait
bound
in
add
mov
aas
mov
and
cli
aaa
jle
mov
dec
pop
adc
icebp
shl
lock
inc
outsb
adc
fcmovbe
pop
aas
push
sbb
cs
shlb
mov
into
mov
pop
jo
adc
mov
jmp
scas
insl
jge
lods
rcrb
mov
xchg
mov
arpl
xlat
mov
cmp
jmp
mov
cmp
adc
cmp
xacquire
loope
mov
sub
xchg
and
imul
and
pop
push
jo
jge
jne
bound
mov
lret
and
dec
ss
sub
cmp
out
les
sbb
and
cmpsb
xor
xor
call
adc
enter
in
inc
std
add
daa
add
add
xor
add
push
jns
sub
sarl
xchg
xor
ja
mov
jbe
lahf
lret
xchg
sbb
jp
test
add
in
xor
cmp
lds
repnz
or
mov
add
push
out
out
aam
inc
addb
gs
and
pop
xchg
test
sahf
mov
cltd
pop
movsl
dec
xchg
ret
icebp
mov
mov
js
enter
dec
pushf
movb
popa
xor
call
sbb
std
out
xchg
xor
adc
std
cmpsb
and
movsw
rcrl
int
js
sbb
jbe
cmpsb
xchg
popf
in
outsb
dec
dec
in
clc
adc
outsb
or
rcrb
stos
jnp
mov
adc
mov
cmc
icebp
les
jmp
ja
xchg
test
aad
jb
cmpsb
out
push
stos
loopne
scas
ljmp
imulw
cld
inc
cmpsb
iret
jle
stc
sbb
outsb
loopne
cwtl
and
xor
das
mov
jl
jnp
xchg
fstp
mov
xor
push
cmp
hlt
sbb
enter
adc
dec
sbb
repz
sti
add
sbb
pop
je
sub
mov
sahf
sbb
mov
ret
scas
insl
iret
sti
pop
sub
aam
mov
add
lods
int3
leave
sahf
pop
cli
movsl
cmp
mov
mov
sbb
test
lds
dec
int
fcoms
sar
dec
daa
mov
mov
imul
test
xor
popf
loope
popf
cld
sbb
add
pop
cmp
jle
sbb
cmp
cmp
add
daa
xchg
icebp
cmp
push
icebp
pop
in
test
and
cli
in
mov
les
sbb
scas
iret
fdivrs
inc
jno
outsb
mov
lahf
fwait
inc
pop
enter
pop
adc
or
inc
jo
add
hlt
scas
sbb
stos
xchg
mov
jbe
pop
dec
jmp
ficoms
int3
push
fwait
mov
scas
rol
xchg
mov
push
xor
arpl
icebp
icebp
inc
shr
jge
dec
loop
lret
xlat
lds
and
dec
in
enter
idiv
out
mov
ret
into
pop
bound
pushf
xchg
mov
cs
xor
lods
pop
bound
cmp
xor
sub
sub
enter
lret
cwtl
jnp
mov
test
xor
insb
out
add
into
xor
adc
push
cwtl
pop
gs
or
pusha
add
out
pusha
jp
in
je
repnz
xchg
xchg
xchg
xchg
aas
addr16
mov
add
cmp
popf
lret
lcall
nop
loopne
popa
in
jb
fwait
in
sahf
sub
vpavgw
xchg
xlat
inc
add
mov
mov
add
insb
and
cmp
dec
mov
push
scas
jo
sbb
mov
push
lods
aam
pop
push
rcr
imul
into
jmp
ja
mov
push
adc
or
lods
jb
out
scas
into
jns
je
and
aam
mov
xchg
testl
fwait
pusha
pop
ret
int3
cmp
rclb
les
leave
jbe
cmpsb
mov
cmp
lcall
aam
sub
ret
scas
sbb
pushf
mov
cmp
leave
sub
inc
lret
cmpsl
in
je
shl
pop
adc
js
repz
xchg
repnz
xchg
xchg
cmp
pop
lods
jnp
pop
push
sti
xchg
mov
enter
lea
mov
test
jg
cmp
fidivs
cmpsb
push
jge
aaa
scas
movsl
pop
cld
mov
jg
pusha
rorl
stos
dec
inc
into
mov
mov
cmp
sbb
mov
outsb
scas
cmp
cmp
loope
in
outsb
ss
push
insb
and
sbb
xor
adc
enter
daa
mov
lcall
stos
in
aam
fmul
test
sarl
scas
das
push
imul
xor
lahf
push
add
out
mov
in
cmpsl
shrl
dec
mov
jbe
iret
jle
imul
test
mov
aaa
ss
xchg
pusha
push
psubusw
xor
dec
add
fcomip
cs
pushaw
rolb
dec
lods
bound
adc
out
jbe
clc
dec
lods
es
add
lods
divl
hlt
cmp
dec
sub
xor
mov
fisttps
mov
pop
add
mov
mov
repnz
push
int
addr16
dec
adc
aam
test
sti
js
xor
inc
mov
jo
pop
jecxz
mov
sbb
pop
out
roll
ja
xlat
test
adc
cwtl
stos
xchg
gs
mov
shlb
and
std
cmc
sbb
sbbl
shll
push
cmp
addr16
aam
mov
gs
add
sub
sub
or
inc
xchg
dec
inc
aam
push
dec
loop
aaa
les
mov
ret
inc
fucomi
xlat
cs
inc
aaa
and
jecxz
sbb
loop
inc
push
push
jae
cld
sbb
push
idivb
mov
adc
dec
leave
aas
push
jo
pop
enter
cmp
or
enter
mov
nop
leave
and
jmp
mov
mov
or
out
mov
mov
jge
jle,pt
adc
xchg
rdtsc
lret
js
push
aaa
xor
mov
xchg
clc
lcall
mov
mov
cld
loope
jo
mov
push
popf
pop
pushf
xlat
je
jge
cld
mov
cmp
and
mov
sbb
xor
int
inc
mov
sti
or
negb
mov
and
dec
sbb
int
sbb
push
subl
ret
and
cmp
adc
adc
and
or
les
jns
aas
sbb
jge
sub
les
and
dec
sub
out
jno
sub
jns
mov
js
cmp
xchg
mov
xor
rcrl
ds
test
dec
cmp
ror
dec
lret
in
cmp
cli
pop
fidivs
push
aaa
or
in
jg
push
ja
out
cltd
mov
cs
mov
push
fstl
sbb
jle
and
into
mov
js
loop
sbbl
dec
repz
fdivrp
nop
pop
adcb
jno
jne
jns
adc
inc
loope
mov
stc
inc
inc
es
add
mov
pop
iret
fnstenv
cmp
ret
mov
add
fwait
mov
js
or
xchg
jae
and
rcr
lds
mov
cltd
xor
or
pushl
adc
xchg
out
xchg
bnd
mov
push
inc
xchg
cmp
adc
test
sbb
gs
pop
sub
cmp
in
mov
aad
inc
loop
popa
stos
mov
and
mov
cwtl
mov
addr16
jo
es
pop
into
xor
aas
dec
leave
and
add
popf
ret
mov
add
out
repz
fwait
jnp
mov
pusha
loop
or
in
xchg
sub
das
cmpsl
pop
loope
mov
gs
mov
and
mov
or
ud0
push
fistpl
scas
inc
inc
mov
xor
xchg
push
dec
into
in
andb
dec
xchg
data16
test
dec
jecxz
mov
adc
cmp
and
mov
lock
aad
push
mov
sbb
lock
mov
pop
jle
push
sub
cs
and
into
fildll
mov
mov
jnp
inc
cmp
and
int
sbb
adc
lods
std
enter
sub
fmull
sub
loop
data16
rcr
cmp
test
pop
out
popf
ficoms
adc
mov
or
loope
jge
lock
lret
lret
ljmp
inc
shll
inc
pop
or
or
int3
cld
lret
mov
sub
xchg
lahf
mov
dec
lret
in
into
dec
sub
sbb
in
stos
jno
int
outsb
add
insl
rorb
stc
in
cmpsl
push
fidivrs
jnp
xor
mov
fidivrs
dec
movsl
lock
jmp
icebp
xor
les
xchg
sbb
sbb
or
fmull
xchg
es
cmp
push
rorb
rolb
fisubrl
jecxz
inc
cltd
ret
movsl
sub
add
out
xchg
xchg
ficomps
iret
push
and
or
ljmp
insl
sarb
or
inc
jle
into
push
loop
cli
push
push
js
pushf
push
in
clc
pushf
mov
jp
xchg
rorb
test
roll
mov
mov
and
daa
xchg
pop
cmpsl
ds
dec
xlat
lea
test
js
out
mov
scas
mov
les
jmp
push
jge
push
dec
push
ja
xchg
cmp
jle
inc
scas
adc
rcrl
push
or
mov
fdivl
aad
loop
lahf
and
out
mulb
rclb
into
sbb
mov
mov
xor
std
push
xor
push
rorb
add
cwtl
fildl
loope
pop
mov
mov
jp
jecxz
setbe
repnz
dec
hlt
iret
and
gs
mov
jg
xchg
mov
adc
stc
add
push
xchg
cmpsl
and
ror
out
movsl
testb
jnp
ficomps
cmp
pop
mov
cmp
dec
out
push
adc
dec
lea
pop
push
sarl
ja
cmpsb
lods
movsl
inc
xchg
mov
or
push
and
lcall
icebp
icebp
popf
jmp
outsb
push
or
dec
pop
inc
into
mov
movsb
push
cli
lock
notl
das
and
mov
dec
push
jmp
or
clc
imul
mov
sub
sbb
imul
or
insb
push
popa
ss
or
xor
jge
bnd
ret
in
jmp
into
sub
xchg
or
mov
push
adc
stos
sub
lcall
rcrl
outsb
adc
or
mov
clc
or
adc
sbb
pop
xchg
xor
out
lea
adc
icebp
push
roll
cs
fidivrs
xlat
test
dec
sbb
aam
mov
sub
xchg
hlt
leave
int3
or
fimuls
adc
cltd
mov
or
or
pop
inc
iret
inc
pop
pushf
or
adc
aad
and
ret
into
hlt
inc
fucomip
arpl
xchg
nop
decb
push
mov
lds
and
jp
xor
gs
xchg
push
inc
mov
dec
or
stos
call
je
inc
lea
jecxz
mov
pop
pop
add
sub
cmp
pushf
ficomps
push
ret
cs
test
xchg
inc
fsts
test
add
pop
inc
cwtl
sbb
or
push
out
lock
loopne
jecxz
adc
fs
add
or
xor
and
mov
push
lret
and
mov
or
ret
data16
scas
pop
rolb
mov
fists
or
lods
cmp
loopne
jecxz
jno
rclb
aad
or
dec
shlb
inc
pusha
insb
fbld
cs
xchg
push
add
roll
rolb
xchg
or
pop
xlat
stos
les
mov
fcmovb
test
imul
call
cmp
push
pusha
leave
ret
and
js
mov
or
je
dec
test
cmp
cmp
sbb
shlb
in
lret
cmpsl
scas
int
sub
cwtl
jecxz
fdivrl
addr16
inc
les
fs
js
xchg
mov
sub
dec
push
mov
sub
xor
cmp
pop
add
mov
ja
xchg
adc
in
add
and
std
mov
pop
or
scas
adc
shll
gs
les
sub
sbb
cmpsb
mov
push
or
cltd
xchg
leave
mov
aam
xchg
les
inc
out
adc
mov
ret
shll
add
jle
fdivl
das
or
fiaddl
out
push
dec
and
test
mov
mov
push
xlat
sub
movsb
cmp
sbb
dec
add
or
dec
js
cmp
ds
fwait
cmpsb
jbe
inc
sub
loope
mov
sbb
sbb
add
add
lahf
aaa
mov
sbb
dec
lret
inc
sahf
inc
or
or
or
ror
sbb
dec
pop
daa
iret
in
push
shll
lock
sbb
mov
dec
xchg
loopne
popf
daa
mov
lret
push
sti
fs
mov
test
adc
mov
xchg
shl
lods
xor
and
inc
into
iret
cmp
pop
in
mov
push
icebp
xchg
repnz
unpcklps
sarb
aaa
inc
mov
lods
test
aaa
mov
mov
xchg
pop
adc
orb
das
dec
xor
aaa
mov
jle
push
lock
jne
mov
push
je
fsubr
fldcw
sub
stos
mov
mov
outsl
mov
repz
mov
push
mov
call
aaa
cmpsb
lahf
scas
scas
sahf
sub
mov
mov
cmpsb
jmp
ds
add
gs
js
xor
xchg
jle
aam
es
lock
fnsave
inc
fldenv
sub
mov
cmpsb
and
mov
xor
push
jo
or
xchg
scas
rcl
clc
lock
mov
hlt
loop
sub
mov
stos
sub
add
int
test
xor
nop
aas
and
cmpsl
mov
cmpsl
adc
push
lods
arpl
dec
or
outsl
insl
or
mov
lret
pop
out
push
popa
push
push
pop
repnz
fnsave
xchg
jmp
adc
test
pop
rorl
lods
lcall
jmp
mov
mov
scas
mov
xchg
pop
prefetch
adc
ret
add
popa
jecxz
clc
xor
loop
pop
in
dec
into
pop
das
xor
xor
fidivl
add
or
mov
loopne
xchg
jb
je
lret
push
dec
sbb
jge
mov
js
data16
sbb
xor
rcll
filds
lods
cmc
popf
cld
dec
mov
pop
outsb
mov
xlat
int3
shlb
add
rorb
mov
ret
push
pop
xor
lahf
mov
add
or
and
loop
sub
mov
push
std
xor
mov
ja
xor
ret
mov
leave
mov
push
div
push
iret
mov
pop
jno
lea
pop
mov
andb
xchg
loop
hlt
ljmp
nop
mov
and
call
lock
pop
push
ffreep
cmp
je
pop
negb
leave
inc
push
pop
xchg
xor
add
out
cld
add
lods
jne
pushf
mov
dec
stc
gs
jge
into
ss
movsb
dec
stc
cs
xor
aas
sbb
mov
cmp
jne
aad
mov
decl
cltd
or
mov
mov
sbb
popf
xchg
or
cltd
cmp
lods
loope
pop
xchg
fadds
stos
xchg
cmc
pop
aaa
pop
fsubrs
aaa
pop
inc
fsubl
das
es
inc
sub
xchg
in
fwait
aaa
in
test
aam
pop
adc
jl
jp
adc
dec
jno
inc
jno
gs
out
insb
mov
and
mov
or
outsb
lea
push
push
jge
das
xor
data16
inc
in
pop
test
subl
popf
add
mov
adc
fildl
pop
inc
and
lret
mov
in
pop
into
or
fdivrs
int3
loope
or
mov
lcall
jo,pt
cmp
mov
mov
add
mov
push
test
cmp
es
sub
sub
mov
jae
in
mov
push
xchg
mov
mov
jg
push
lea
dec
ds
xor
xlat
ja
sbb
cwtl
cmp
negb
jge
add
xchg
les
pop
mov
dec
orl
sbb
cld
cmp
mov
gs
outsb
add
ss
mov
pushl
adc
push
testl
int
lret
imul
ficoms
mov
and
jle
ds
es
or
inc
outsl
lds
mov
xlat
sbb
shrl
push
insb
cwtl
mov
repz
ds
fbld
add
mov
dec
in
rep
fstpt
sbb
xchg
or
or
mov
jg
fdivs
sti
dec
and
cmp
insb
push
jne
inc
and
add
js
hlt
fwait
adc
popf
pop
shlb
icebp
pop
lret
aad
xchg
cmpsb
dec
cltd
push
mov
icebp
push
jp
jge
and
jp
push
fsub
add
and
lock
push
and
testl
push
fs
sahf
cmc
jns
jle
ds
add
mov
xchg
dec
push
push
push
loope
std
push
pop
in
divps
inc
inc
icebp
add
loopne
push
dec
dec
mov
dec
pusha
jae
gs
mov
repz
dec
push
and
xchg
adc
pop
and
add
mov
mov
aad
or
inc
cli
xlat
inc
and
mov
cli
adcl
iret
pop
jg
dec
inc
outsb
lret
adc
int3
inc
push
jnp
mov
lsl
xchg
dec
andb
mov
dec
ds
jnp
xchg
leave
add
pop
push
outsb
out
icebp
jg
jp
xchg
enter
fidivrl
adc
cmp
xor
dec
cld
adc
sti
ret
adc
in
popa
jns
mov
mov
arpl
mov
fstpt
fs
outsb
fisubs
das
faddl
jbe
dec
push
jae
jo
xchg
xchg
lea
into
mov
aas
push
sarb
cs
jmp
mov
fnsave
sub
mov
jo
cmpsb
cmp
add
flds
or
xor
lret
test
cmp
inc
push
sub
jo
mov
mov
fildl
sbb
xchg
fidivl
push
mov
imul
dec
sti
mov
sbbl
addr16
push
mov
or
int
out
stos
adc
push
nop
aad
in
ficoms
and
pusha
or
adc
sbb
mov
stc
jo
sbb
pop
into
inc
ljmp
push
push
push
pusha
fidivrs
pop
inc
and
mov
xchg
ret
outsb
mov
dec
dec
sub
mov
outsl
and
cmp
or
ljmp
add
jne
add
test
xor
push
adc
push
pop
cmpsl
jne
push
jno
sbb
repz
mov
into
leave
pop
std
sbbl
ss
inc
sbb
cltd
mov
je
into
jbe
mov
in
mov
sbb
and
sbbb
imulb
out
fstpt
das
jo
lods
test
adc
sbb
stos
jmp
mov
and
aam
mov
jmp
inc
push
call
cmp
dec
xchg
inc
jg
enter
rcrb
ret
sub
in
add
inc
popf
aam
mov
mov
fisubs
in
sub
mov
add
or
int
shr
cmpsb
adc
lods
pop
daa
loop
add
mov
pop
sbb
outsb
outsl
pop
movsl
pushf
dec
sub
cltd
xchg
xchg
pop
or
std
out
in
aaa
repnz
cmp
insb
std
or
decb
mov
and
dec
adc
popf
pop
mov
iret
lahf
pushf
sub
lcall
lcall
std
jl
stos
push
push
adc
xchg
or
shrl
repnz
pusha
cmpsb
fisubrl
cmp
xchg
pop
unpcklps
cmp
push
fmull
out
pop
addr16
imul
popf
mov
sub
cld
jae
push
mov
push
cmp
flds
mov
inc
iret
cmp
add
mov
mov
aad
mov
push
jb
sarb
mov
mov
jp
fidivrl
mov
sbb
and
push
cmp
fst
sbb
jne
inc
or
in
jecxz
and
out
ss
gs
mov
sub
xchg
jae
scas
or
sbb
mov
popf
dec
cli
cmp
push
out
leave
mov
add
loopne
pop
inc
les
mov
or
mov
pop
test
mov
or
test
popf
push
inc
cmc
enter
lcall
dec
cmp
add
dec
fisttps
push
shrl
cmp
in
jbe
dec
xchg
fstpt
stc
cld
nop
arpl
add
jl
add
jnp
in
inc
lahf
es
pop
jecxz
idiv
mov
test
and
cmp
push
xor
mov
jnp
lock
inc
mov
sub
lret
and
enter
mov
ds
and
into
push
cmc
xor
je
dec
mov
mov
ret
rolb
xor
fs
das
jbe
dec
sub
lods
mov
mov
ret
lahf
fcmovb
dec
push
cmpsb
add
jmp
jno
push
xor
movsb
add
test
add
sub
outsl
xchg
icebp
pusha
iret
lcall
outsl
stc
sub
add
js
inc
push
jmp
stos
cmp
jbe
push
fdivs
pop
push
inc
cwtl
sahf
fcomip
dec
das
mov
dec
xlat
add
cmp
sahf
xchg
pop
hlt
mov
mov
sahf
inc
insb
sbb
mov
xchg
xor
adc
cltd
cld
leave
insl
pop
jmp
mov
push
adc
hlt
test
mov
or
sub
test
jg
ljmp
fstpl
or
sub
inc
rcr
cmp
pushf
shlb
test
mov
sbb
rol
dec
dec
in
mov
repnz
enter
cmp
scas
adcl
popa
jmp
xchg
sub
rcr
arpl
dec
sbb
xor
mov
mov
sbb
lcall
push
test
lahf
sbb
or
sbb
pushf
subb
mov
mov
dec
repnz
icebp
lret
sbb
sub
std
xchg
or
adc
sbb
loop
sbb
cltd
add
mov
push
fwait
push
int
cmp
call
mov
xchg
xchg
adc
add
mov
and
xor
stc
push
jge
les
push
test
push
push
rcrb
fnstsw
aaa
pop
fld
int
loope
push
fldcw
pop
and
xor
aam
mov
les
xchg
subl
clc
test
test
psubusw
arpl
sub
scas
inc
xchg
mov
xor
and
rclb
mov
mov
and
out
adc
add
inc
or
jnp
aaa
iret
push
jo
add
pushf
pop
pop
je
mov
jae
lret
cmp
pop
ret
jp
pop
pop
scas
xor
cmp
mov
and
stos
es
inc
xor
inc
popf
mov
push
out
clc
test
mov
scas
sbb
fcoml
icebp
mov
pop
jp
ss
test
lahf
sahf
stos
pop
add
cmp
mov
mov
fucom
outsb
jbe
cmp
imul
cmp
adc
inc
addr16
loope
lret
cmpsl
mov
and
mov
push
int3
xor
imul
scas
lcall
ljmp
mov
in
jnp
rol
gs
cmc
iret
push
sbb
lods
pop
push
cmp
cmp
mov
jb
lcall
or
jns
inc
dec
sbb
jecxz
iret
test
lea
add
cmpsb
jp
data16
nop
insl
int3
insb
clc
ret
dec
jmp
mov
ja
rcl
aam
push
clc
int3
lds
adcl
mov
pop
cwtl
mov
js
dec
iret
jo
push
sbb
mov
xchg
push
add
test
pop
inc
xor
mov
sbb
call
inc
outsl
push
jne
cli
inc
push
mov
xor
add
lds
popf
insl
in
push
ss
mov
mov
fildll
out
dec
ret
or
movb
ret
mov
ret
lahf
clc
adcl
jp
inc
push
ret
outsb
xor
jne
adc
mov
inc
sbb
add
jne
mov
sarb
jbe
mov
les
in
adc
or
mov
or
mov
fwait
pusha
sub
push
fwait
pop
shl
enter
movsb
out
fs
push
test
sub
shlb
pop
xchg
ficoml
cmpl
mov
loopne
cwtl
in
cltd
mov
cmpsl
jmp
js
mov
data16
mov
fnstcw
in
and
pop
popf
loope
dec
stos
je
add
push
js
sub
push
sti
imul
fs
inc
add
outsl
and
mov
imul
lods
ja
jns
pop
add
cmp
mov
adc
and
into
sub
out
sar
inc
pop
pop
mov
call
stos
adc
dec
movsl
inc
data16
cwtl
imul
xor
or
dec
lods
cmp
mov
int
lcall
or
addb
push
sbb
dec
bound
inc
jno
or
lret
xchg
adcl
xor
dec
jae
sbb
push
pushf
or
jbe
dec
out
pop
ret
cmpsb
dec
outsb
xchg
xor
sbb
jne,pn
popa
pop
call
cli
jne
jge
sti
stos
dec
push
mov
lcall
xchg
push
adc
cld
stos
pop
mov
hlt
mov
mov
push
test
in
sub
icebp
in
or
jl
jle
test
fidivl
push
jb
jnp
sub
xchg
mov
stos
pop
test
sbb
mov
aas
xchg
les
or
call
adc
mov
iret
test
mov
jp
jne
xchg
jmp
mov
and
stos
sarl
lcall
xchg
mov
ftst
xchg
out
and
in
mov
in
xor
xchg
pop
in
subb
jb
dec
mov
pop
cmpsl
cmp
fisttpll
push
sub
push
pop
xchg
dec
ror
push
cmp
movsb
pop
movsl
adcb
adc
jmp
adcb
add
xchg
loope
or
mov
std
shl
sub
mov
fcmovnb
ficompl
cld
add
jns
xor
adcl
dec
or
lret
shlb
mov
jecxz
dec
in
cmp
pop
test
addb
cmc
inc
xor
xchg
push
mov
adc
bound
pop
pop
mov
and
outsl
push
jp
pop
repnz
fsts
lret
call
icebp
or
mov
imul
jl
cmp
xor
jo
mov
dec
mov
or
int3
fwait
and
mov
mov
frstor
mov
sub
xchg
bound
sbb
pusha
sub
cmpsb
bndldx
lret
les
sarl
ret
stc
and
js
inc
pop
jl
incb
std
push
jl
add
ror
dec
jle
jb
dec
scas
mov
jl
aas
pushf
jmp
and
cmp
pop
adc
dec
out
jle
xchg
inc
sub
fcmovne
jb
xlat
dec
sbb
movsl
pop
sti
cmpsb
and
and
aad
filds
std
xor
dec
and
in
icebp
sar
xor
shll
mov
pop
in
movsb
and
push
cmpsl
lea
or
pop
es
mov
cltd
lods
test
imul
rcrl
dec
lret
lods
pop
mov
cmp
adc
cmp
fsubr
je
dec
notb
enter
mov
in
or
arpl
xor
pop
notl
sub
jp
outsb
dec
bound
jle
or
aas
fdivl
cwtl
or
cmp
mov
imul
xchg
xor
sbbb
cmc
push
sub
inc
pop
xor
mov
mov
js
or
loopne
push
adc
sbb
insl
les
mov
cltd
fiaddl
add
fdivr
lret
lea
adc
and
pop
out
daa
arpl
push
push
in
and
bound
cmp
test
and
mov
test
outsl
sbb
ja
and
xor
adc
cld
inc
ss
sub
andl
call
mov
dec
push
mov
fnstenv
fwait
dec
mov
stc
jno
add
xchg
add
sub
popa
stc
rolb
dec
jle
jle
adc
ljmp
daa
xorl
jl
pop
scas
push
fwait
daa
jne
insb
or
xchg
fwait
out
pop
pushf
stos
xchg
dec
mov
les
xor
idivb
shl
add
dec
pop
jo
aad
mov
pop
adc
call
jl
cmp
enter
dec
fcmovnu
movsb
shlb
pop
das
fwait
std
push
test
push
and
ror
mov
mov
pop
cmpsl
cmpb
push
loopne
pop
ljmp
stos
jnp
movsb
sbb
dec
arpl
cwtl
jno
mov
mov
pushf
adc
pop
outsl
lock
scas
inc
mov
xor
or
sub
enter
dec
shlw
push
in
lret
lock
mov
ret
nop
mov
loope
adc
xor
jb
jge
pushf
dec
imul
bound
cmp
paddsw
jns
jle
xchg
or
or
ret
fyl2xp1
pop
das
cmp
mov
mov
dec
sbb
or
fnstenv
in
adc
ljmp
xor
test
cmp
cmp
rcrb
xor
fiaddl
push
dec
pushf
scas
rorb
fdivl
add
in
cmp
dec
repnz
imul
ss
mov
add
xor
movsl
imul
push
mov
xchg
or
scas
daa
cs
bound
dec
int3
sbb
fstpt
call
pop
cmp
es
pushf
sbb
inc
sbb
js
je
and
sti
add
outsl
jmp
dec
jne
xor
and
cmpsl
sbb
cmpsl
xor
inc
enter
out
inc
mov
loop
cmp
jno
loopne
arpl
leave
jae
cmp
jno
push
loopne
sub
jg
mov
cltd
xor
shll
add
dec
fucomp
jmp
popa
jmp
pop
add
repnz
imul
adc
push
bound
mov
jae
in
stos
sub
mov
insl
test
mov
xor
xor
mov
adc
dec
and
push
mov
dec
popa
jnp
jae
lcall
lcall
fmulp
test
sti
pop
repz
out
rclb
xor
leave
mov
pop
movsl
and
sbb
int
je
push
dec
adc
mov
mov
lcall
rcr
mov
jae
pop
add
pop
dec
fidivrs
sub
push
mov
inc
pop
popf
pop
pusha
aam
fs
leave
loope
pop
ret
xchg
dec
xor
pop
aas
pop
inc
xchg
or
sbb
push
mov
ret
and
shlb
cli
cmp
jns
dec
loopne
xor
fsubrl
mov
jo
stos
jl
aaa
cltd
and
mov
inc
leave
repnz
rol
jg
jecxz
cmp
sbb
xchg
cmc
cmp
pop
sbb
lret
xchg
inc
lock
stos
repnz
outsl
std
mov
mov
idivb
mov
xchg
fcomps
les
pop
test
xchg
sbbb
fs
jmp
insl
jmp
ljmp
inc
mov
dec
xor
cmp
lret
les
sahf
mov
idivl
into
pop
push
push
xchg
inc
popa
sbb
leave
lcall
push
dec
int
mov
or
mov
inc
aaa
jmp
add
dec
loop
scas
clc
arpl
lret
sahf
xchg
shll
xchg
xchg
aad
or
les
jb
mov
push
push
mov
cmc
outsl
xchg
cltd
aaa
jp
fldl
aas
fs
pop
add
xor
test
add
push
mov
movsl
and
int
ds
xlat
data16
mov
mov
xchg
iret
outsb
jecxz
ss
stc
jne
jo
lds
mov
js
mov
out
inc
cltd
std
lcall
aam
jae
or
sbb
cmp
and
stos
xorl
cmpb
sbb
mov
es
xchg
shrl
mov
pop
pop
adc
lock
insl
lds
pusha
in
or
or
adc
std
mov
ret
mov
fwait
aaa
scas
fbstp
repz
out
pop
adc
movsl
sub
pop
adc
sub
mov
cmp
dec
cmp
add
pop
jp
cmp
pop
fnstenv
cmp
and
push
add
arpl
cs
fs
fisubs
sub
pushf
mov
dec
mov
xchg
pop
incb
dec
sarb
mov
lea
or
movsl
in
lock
push
add
cmpsb
int
pop
aad
sub
dec
fsubrs
jb
out
jmp
insl
inc
imul
mov
jge
insl
repnz
out
notb
push
ret
jns
ds
pop
mov
mov
aad
jecxz
xchg
push
jae
dec
jg
pop
add
mov
pop
fsts
dec
lods
les
dec
xchg
cmpsl
pushf
out
lret
cmc
push
pusha
sbb
int
cs
xchg
pop
xchg
mov
add
push
mov
push
mov
bsf
mov
and
and
pop
or
xchg
dec
clc
and
inc
mov
mov
mov
lea
cmp
xchg
fnstcw
fwait
xchg
aas
sub
sub
test
sub
pop
mov
les
aas
lcall
cmpsb
test
lcall
lret
mov
or
sahf
inc
aam
lock
inc
xchg
ror
data16
push
adc
repz
imul
test
sbb
pushf
pusha
popa
repz
cmp
sbb
shrl
es
xchg
stos
imul
cmp
sarb
lock
pop
mov
xor
pop
enter
cmovnp
scas
xor
ret
adc
mov
mov
mov
adc
sahf
inc
and
pop
mov
add
inc
sti
mov
cmp
lock
dec
mov
push
lahf
sbbl
pop
lret
push
push
rorl
sbb
sti
or
mov
or
pop
pop
ret
sbb
int3
xor
int
lret
rcr
repz
adc
jge
sub
rcrl
push
lds
and
icebp
lock
lods
push
pusha
cmp
adc
sbb
jnp
cmp
mov
cmp
jbe
sub
call
aas
fwait
jle
fstpt
mov
jae
stc
add
mov
adc
loopne
cmp
mov
fdivrl
movsb
or
fistpll
movsb
sahf
mov
pushf
insl
jp
or
push
sahf
fstpl
test
aas
mov
xchg
out
les
jg
xchg
ret
mov
jnp
sub
xor
aaa
jle
outsl
les
push
fxch
add
sub
push
and
xchg
fs
lret
push
inc
mov
fimuls
sarb
dec
aad
xchg
or
movsl
lock
mov
sub
fistps
pusha
mov
mov
xchg
ds
jae
mov
xchg
mov
add
gs
dec
push
mov
xchg
adc
jae
icebp
xchg
add
test
je
aaa
xchg
call
inc
adc
incl
xor
stos
xor
stos
jecxz
inc
push
mov
jb
xor
adc
mov
add
fcmovb
mov
fnstcw
mov
bound
aaa
stos
pop
imul
sub
loop
push
xchg
cmpsl
cmp
leave
jo
pop
jbe
addr16
add
imul
popf
xchg
fnstenv
or
push
mov
pushf
push
sahf
stos
push
inc
add
test
scas
mov
lret
or
jge
xor
popf
gs
xor
xchg
inc
adc
test
dec
fdivrs
or
mov
and
pop
stos
stos
cs
stos
and
push
outsl
ds
outsl
fucomi
mov
lods
popa
xor
test
prefetch
or
xor
aas
jae
popl
cmp
lods
push
stos
daa
push
inc
mov
add
into
pop
mov
insb
xchg
push
cmp
aas
dec
lock
push
jmp
and
pop
dec
pop
call
ret
jbe
ss
scas
stc
or
inc
iret
dec
nop
and
mov
mulb
ret
inc
sarl
cmp
aam
das
lods
hlt
repnz
roll
cmpsb
loope
test
mov
sbb
icebp
bound
rclb
into
ss
fiadds
add
scas
sbb
loopne
pop
ja
xchg
mov
test
loopne
pop
or
aam
fsubr
dec
fsubs
push
xchg
clc
mov
test
sub
mov
xchg
dec
cmp
sub
jno
inc
cltd
and
jns
stos
mov
pop
dec
in
out
test
xchg
popa
sub
pop
mov
jns
dec
addl
pop
cmp
fwait
mov
out
push
add
mov
sbb
sub
inc
cmp
or
insb
mov
ljmp
sub
xchg
xor
fidivl
xchg
dec
pop
outsl
shlb
mov
add
repnz
or
ss
insl
mov
add
fsubs
test
lcall
inc
inc
imull
adc
adc
test
and
push
stos
in
hlt
pop
lret
jecxz
xor
jg
les
nop
adc
pop
insb
push
enter
dec
xchg
mov
and
adc
fsubl
dec
dec
sldt
scas
xchg
jnp
hlt
call
repz
jns
icebp
cmp
jmp
xchg
lret
lea
or
fwait
leave
out
fimull
mov
out
insb
mov
xchg
push
je
mov
add
shrb
rolb
stos
ss
mull
js
mov
or
push
cmc
mov
stos
enter
icebp
bound
mov
push
test
dec
mov
cld
jne
cmp
mov
jno
pushf
add
pop
mov
pushf
sahf
add
addb
or
cmp
inc
mov
push
fistps
sub
in
pop
fldl
fistl
iret
mov
push
cmp
insb
ds
cmp
xor
test
adc
ljmp
cmovns
jle
movsl
xchg
push
pop
rorl
cmpsb
ds
out
cmp
std
add
rcrl
push
xchg
adcl
int3
sti
mov
inc
out
clc
fildll
cmp
adc
mov
pop
pop
lahf
jbe
jecxz,pt
mov
inc
stos
fcmovnbe
mov
inc
jmp
loope
xchg
jg
mov
lods
cmp
dec
shll
xor
jns
fs
cmp
push
push
lcall
mov
mov
xchg
cs
clc
sbb
pop
ds
les
out
sbb
std
mov
mov
jbe
stos
aaa
fmulp
dec
fisttps
aas
sarb
mov
dec
xchg
jo
clc
popa
sbb
das
loop
in
add
dec
test
lock
xor
cmp
out
jbe
fisubrl
les
loope
fsts
pushf
pushf
jo
mov
mov
pop
sbb
test
test
insb
push
mov
scas
jbe
lret
xchg
jecxz
dec
addr16
dec
fnstcw
push
stc
and
ljmp
loopne
adc
imul
repnz
xchg
cwtl
loopne
inc
clc
xchg
movsb
push
push
mov
je
pop
lea
sub
xor
out
add
mov
jl
scas
mov
mov
aaa
std
push
pusha
movsl
and
divl
insl
loop
mov
test
jecxz
xor
adcl
fwait
lods
adcl
mov
sub
cwtl
pusha
in
add
add
xor
jb
mov
fldl
or
cmp
jno
add
jne
or
push
scas
jnp
inc
add
or
into
incb
lret
sarl
adc
jge
shlb
inc
adc
stos
dec
jmp
xchg
sub
in
mov
push
int
insb
cwtl
frstor
outsl
lret
sbb
jmp
adc
cli
shlb
mov
data16
out
xor
or
call
sbb
les
iret
mov
mov
hlt
pusha
scas
push
lret
push
adc
sbb
jno
js
clc
push
adc
cltd
and
test
mov
sbb
or
inc
or
xor
or
jecxz
or
jg
loop
fildll
aad
lahf
sbb
and
or
sub
daa
inc
ja
add
cs
and
arpl
fcomi
imul
mov
jg
push
dec
shr
sarb
cwtl
ret
das
jne
xor
ljmp
inc
sub
add
aam
xchg
mov
mov
cmpsl
fidivs
adc
test
adc
and
xchg
sub
add
cmc
mov
add
dec
loop
mov
mov
sbb
inc
mov
lock
jno
cs
testb
sub
jle
jae
mov
ss
sbb
cli
push
inc
hlt
xor
mov
repz
mov
sti
jle
push
stos
in
ret
cmp
out
add
lret
mov
or
imul
cmc
lock
sub
push
jae
inc
lret
pop
in
sub
loopne
sbb
mull
hlt
incl
into
inc
jae
jmp
fisttps
push
lock
adc
cmp
push
hlt
sbb
mov
lahf
adc
xor
jbe
ret
sbb
cmp
and
ja
dec
sub
xorl
movsb
cmpsl
pop
nop
int
sbb
in
ja
pop
xchg
lea
notb
adc
adc
sub
sub
mov
out
scas
shlb
rclb
sti
popa
push
cltd
sbb
stos
fs
jns
push
dec
sbb
or
xchg
inc
loope
and
ret
cli
xor
ja
out
push
sub
mov
xchg
gs
sbb
dec
jmp
sub
movsb
outsl
and
sar
ret
mov
push
sub
mov
adc
iret
in
subb
ljmp
sub
fs
mov
xor
fistpl
xor
jle
jne
mov
jns
and
aam
es
in
insl
cld
or
pop
push
movsb
xchg
mov
and
or
push
mov
or
mulb
scas
imul
inc
fsubs
mov
stc
add
mov
cmp
testb
hlt
push
cmp
pop
fstpt
dec
mov
mov
loop
jo
out
icebp
sbb
ss
jle
cmpsb
adc
jo
and
gs
clc
imulb
enter
add
and
lds
cmpsl
call
stos
mov
sbb
jge
daa
pop
xor
xlat
inc
cmp
mov
rol
push
mov
xchg
and
sbb
xorb
sbb
rolb
andl
fidivrs
mov
icebp
stos
or
stos
adc
cmpsb
xlat
jo
and
and
adc
lds
enter
push
push
mov
xchg
sbb
ret
fidivs
lods
cwtl
adc
enter
sti
nop
imul
xchg
sub
adc
mov
in
xchg
jo
mov
outsl
xor
or
data16
jno
imul
aad
pushf
popa
pushl
mov
jg
adc
xor
xor
pop
adc
mov
jbe
mov
nop
dec
outsl
sub
in
fsub
dec
mov
enter
push
pop
test
jbe
jb
ret
hlt
hlt
inc
xor
aas
mov
sub
sub
push
inc
adc
jle
lods
lret
add
cs
jecxz
xor
in
gs
test
or
mov
add
ds
inc
xchg
das
xchg
psubusw
xor
or
mov
jne
hlt
jno
mov
lock
inc
daa
rcrl
testl
fidivrs
push
sub
inc
add
jg
stc
jg
mulb
fwait
cltd
and
push
cmpsl
addr16
pop
movl
or
xor
mov
scas
lahf
mov
add
mov
sbb
add
les
fistl
cwtl
push
lahf
lock
adc
pop
dec
adc
daa
pop
or
push
cmc
push
test
xchg
cmp
sarb
adc
and
fldcw
andb
fsub
pop
cmp
popf
pop
mov
scas
fistl
aaa
inc
test
and
or
push
jmp
push
mov
or
jo
inc
add
hlt
data16
movsl
popa
add
sarb
or
and
aas
movsl
sahf
fs
jbe
into
push
or
or
sbb
inc
pop
mov
push
xchg
in
das
push
xchg
mov
mov
and
insl
loopne
xchg
insl
insl
out
les
jecxz
jge
pop
leave
pop
ljmp
lahf
out
jp
sub
xor
sahf
aaa
xor
and
mov
cmpsb
imul
cmpsb
jno
pop
pop
rcll
out
jbe
dec
mov
and
xchg
jmp
push
rolb
add
jmp
sti
xlat
movsb
repz
adc
and
add
mov
pop
adcb
xor
adc
in
cmp
dec
std
repnz
inc
lods
xchg
into
imul
pop
sbb
aad
hlt
push
test
movsb
fsub
dec
push
inc
daa
imul
mov
pop
hlt
adc
mov
test
mov
mov
add
popa
aas
cmpsb
fisttpll
pop
out
js
nop
mov
fidivs
call
ss
inc
outsb
mov
and
jl
sub
mov
jno
and
mov
dec
rcl
sbb
xchg
jecxz
dec
push
call
int
aam
stc
icebp
clc
pop
out
dec
xchg
out
inc
cli
test
bound
imul
shll
rorw
xchg
sbb
gs
push
fldlg2
std
pop
sbb
mov
dec
mov
mov
mov
adc
pop
sub
inc
jno
sub
sub
mov
mov
pop
mov
mov
ds
push
and
jecxz
pop
ds
insb
xchg
dec
sbb
xor
mov
bt
iret
cmp
mov
xorl
mov
sub
push
push
lahf
loop
jo
fisubrs
repz
push
cmp
push
pop
push
lcall
lock
fisubrs
and
sbbl
inc
mov
lret
jne
mov
jo
mov
pusha
fimull
xorl
push
aam
xchg
movsl
and
and
int3
xchg
mov
lea
sub
jg
lcall
pop
add
fidivl
cmc
test
cmp
push
jp
fdiv
lret
inc
mov
push
jmp
adc
js
xchg
mov
orl
xor
sub
xchg
in
xor
das
xchg
xchg
in
cmp
sub
jle
lods
dec
mov
sub
popf
jle
and
inc
aaa
std
ret
pusha
repnz
and
pop
push
out
je
cltd
mov
adc
out
dec
pop
cmp
sti
ja
stos
cwtl
cli
dec
scas
and
cld
pop
loop
pop
jl
xchg
mov
mov
fimuls
bound
add
fildl
inc
lods
gs
mov
cmp
mov
out
addb
jle
ret
fstpt
imul
mov
out
mov
adc
das
outsb
mov
and
in
pop
lret
cmp
cli
into
push
mov
xchg
cli
pushf
sbb
pusha
popf
push
aas
rorb
pop
fcom
mov
or
adc
inc
or
rcll
or
pop
out
in
or
cmp
movsl
and
push
push
lock
inc
pop
sub
sbb
push
jo
or
xchg
push
jecxz
or
push
inc
or
ja
or
pop
cwtl
sti
dec
or
push
ja
scas
es
cli
stc
fcoms
dec
sub
pop
cmp
adc
ljmp
jbe
push
fsubl
and
int3
pop
lret
repz
xchg
push
cmp
lahf
hlt
dec
dec
mov
filds
or
sbb
inc
dec
dec
sub
mov
pop
xchg
mov
lret
lcall
xchg
add
adcb
sub
sub
push
jg
inc
mov
pusha
stos
pop
or
sbb
xor
sahf
in
cs
cmpsl
test
ror
fcom
mov
cwtl
lds
push
in
call
addr16
out
testb
push
leave
je
inc
or
adc
add
jge
xchg
adc
ror
rorl
adc
pusha
pop
rcl
sti
mov
jle
push
pop
and
xchg
outsb
dec
outsb
pushl
jecxz
mov
insl
sbb
sub
std
jp
mov
mov
ret
push
out
fstpl
pop
and
rcrb
addb
repnz
rol
pop
jl
mov
aas
mov
mov
sub
fst
push
aam
jne
and
into
push
int3
mov
add
test
mov
push
jge
std
mov
jno
jg
cmp
std
push
sbb
adc
or
rcrl
mov
mov
lock
xchg
or
push
add
int
mov
xor
mov
xor
std
adc
dec
mov
scas
das
stos
xchg
and
imul
push
mov
cmp
sbb
or
imul
mov
scas
mov
cmp
mov
sbb
mov
mov
add
mov
arpl
xchg
jle
das
rolb
inc
xor
iret
jnp
rcll
adc
ds
mov
xchg
jmp
cld
or
mov
sbbl
ret
jb
or
popa
mov
push
scas
push
fnsave
outsl
lods
pop
ljmp
lret
push
in
icebp
jmp
cwtl
cmp
lock
and
scas
jmp
ret
pop
push
jo
mov
sbb
xchg
aad
sbb
in
xor
pop
outsl
mov
pusha
fxch
sub
dec
hlt
and
xchg
mov
and
sbb
hlt
fists
mov
jnp
add
out
leave
cltd
fisubs
or
sub
ljmp
xchg
sbb
or
mov
ljmp
mov
aam
inc
aaa
cld
sbb
les
jo
xchg
pop
int3
pusha
stc
ja
xchg
jne
adc
cltd
xchg
pop
pop
adc
pop
icebp
repnz
adc
xchg
clc
repz
sbb
pop
xchg
bound
push
sbb
xchg
lea
rorl
and
lods
cmp
and
lds
jp
out
hlt
mov
outsl
xor
jae
outsb
imul
push
repnz
outsl
mov
adc
cmp
outsb
cmpsl
pop
pop
jnp
jne
add
ret
inc
imul
inc
inc
jg
add
fwait
dec
lret
loope
cmp
add
into
shrl
stc
or
add
cmpl
xchg
fcmovbe
aas
mov
ds
xchg
pop
in
rol
sbb
sub
dec
xchg
jns
loop
dec
jg
in
jbe
movsl
dec
cld
and
loop
jns
mov
mov
lods
cs
stos
sqrtps
adc
aad
ja
sbb
xorl
and
jne
sub
movsl
xor
out
add
push
xor
mov
xacquire
xor
popa
stos
cmc
ss
xchg
cli
cli
test
dec
jmp
and
aam
addr16
lods
mov
repz
in
sbb
out
lcall
lods
in
mov
mov
aad
xor
pop
or
or
ss
pushf
cmp
gs
fidivl
push
pushf
flds
leave
gs
cmp
dec
push
adc
cmpsb
cmc
punpcklwd
xchg
inc
inc
ret
or
aam
sbb
test
out
cmp
dec
mov
lods
adcb
mov
int
rorl
mov
adc
dec
rol
cwtl
mov
sti
pop
aam
lock
movsl
mov
adc
enter
repnz
mov
jne
inc
icebp
cmp
mov
in
test
std
or
pop
sbb
lds
mov
popa
inc
pop
add
inc
lods
xchg
jecxz
cmp
rcll
icebp
sub
imul
into
lods
fbld
and
cmp
imul
cmc
cmc
sbb
test
inc
sbb
xchg
mov
jmp
jecxz
lds
and
test
lods
jge
inc
adc
adc
xor
or
xchg
ficoms
adc
in
movsl
sub
in
sbb
mov
push
mov
cli
out
and
mov
gs
cmc
mov
pop
push
mov
dec
cld
in
fwait
mov
mov
adc
pop
cmp
test
jl
inc
fidivs
cmp
or
and
dec
fs
leave
push
pop
add
add
leave
push
ret
repz
lock
call
and
xchg
es
data16
addl
jl
leave
xor
xchg
jmp
sbb
sbb
add
sub
lret
sbb
or
shrl
inc
mov
jnp
push
imul
call
mov
adc
mov
pop
xor
or
cwtl
cmp
jnp
xor
or
rcr
jb
std
sub
fcomi
cli
sbb
or
cli
or
and
lret
pop
xor
leave
lret
lahf
mov
xor
xor
jge
cmp
ds
xchg
orl
in
push
ss
jbe
add
xor
adcl
mov
dec
sub
cmp
pop
aas
push
bound
push
idivl
jmp
jo
daa
xchg
nop
ret
and
dec
or
pop
adc
lret
xor
dec
and
enter
faddl
jae
outsb
xorl
pop
addr16
mov
inc
mov
or
xor
add
mov
popf
arpl
sar
push
push
cvtpi2ps
push
inc
cwtl
repz
test
pop
sbb
into
and
sbb
sub
xor
les
mov
loopne
in
hlt
sbb
inc
mov
or
btr
mov
lcall
movsb
mov
cli
call
pushf
cltd
popa
xchg
stos
jge
xor
sub
mov
or
xchg
adc
ror
iret
xchg
mov
lcall
call
push
cmp
sub
test
ret
ret
sub
mov
shlb
popf
lea
icebp
mov
test
daa
fsubrs
dec
stos
jnp
adc
and
cmpsl
sub
jl
dec
leave
mov
pop
jbe
inc
jmp
stc
stc
mull
mov
sub
pinsrw
lcall
fcomip
fs
lret
inc
or
and
mov
cmpsb
push
ja
lcall
outsb
dec
fucom
stos
mov
arpl
xchg
shrb
push
or
xor
out
or
push
shlb
and
push
add
scas
xchg
orb
mov
clc
ret
push
pop
pop
mov
pusha
xchg
push
xchg
jno
dec
push
xlat
xchg
das
in
imul
aam
cmp
add
nop
es
xchg
push
mov
push
shlb
push
fwait
cmp
pusha
xor
ds
cmpsl
pop
ss
pop
pop
fnsave
mov
pop
std
arpl
addps
and
fildl
scas
cmpsb
cmpsw
mov
jo
in
adc
mov
ss
shrl
push
outsl
out
add
ljmp
js
out
scas
mov
in
loope,pt
and
push
out
loope
roll
pop
push
nop
cmp
push
ret
movsl
pusha
in
mov
inc
es
bsf
cmp
mov
xchg
adc
and
loope
pop
pop
fadd
cmpsb
jnp
lock
and
into
loop
add
or
jno
add
mov
xlat
or
dec
jecxz
ret
in
popa
dec
mov
loop
test
mov
ret
popf
lods
xchg
fldenv
adc
ja
add
pop
push
iret
sbb
inc
rcll
and
movsb
xor
sub
cmp
adc
sub
fcoml
repnz
or
add
cmp
add
mov
lea
sbb
xchg
cmp
pusha
stc
sbb
pop
xchg
jae
mov
scas
push
insl
aam
pop
pushf
pop
scas
push
inc
hlt
popf
dec
jge
repnz
shrb
es
out
add
sub
pop
add
test
out
jnp
xchg
out
rcrb
loope
scas
lret
xor
fstpl
lcall
cwtl
or
cltd
shrb
mov
add
push
jo
jmp
test
sbb
ret
loope
adc
mov
mov
jns
popf
dec
pushf
or
outsb
les
jae
mulb
pusha
pop
out
adc
enter
pminub
jns
sub
and
xchg
stc
jecxz
inc
push
jge
dec
push
in
mov
mov
mov
mov
vmulps
push
popf
mov
fildll
dec
inc
inc
push
mov
jae
xor
mov
mov
sub
xchg
imul
jno
and
jle
push
cmp
add
add
sub
dec
mov
in
sti
jns,pn
add
ss
jno
pop
mov
and
dec
call
sub
sub
leave
lods
mov
mov
out
xor
fcoms
enter
or
ljmp
sbb
mov
push
pop
xchg
dec
adc
pop
push
in
daa
cmp
cmpsb
das
ret
xor
cmp
pushf
jge
adc
jle
dec
fs
fstpl
lods
jne
dec
into
and
sub
fwait
imul
cld
xor
xor
ss
pop
sahf
sub
sbb
mov
xchg
jb
jecxz
pop
dec
sub
pop
aas
add
les
mov
jl
decl
cli
mull
cmp
fcmovnb
jbe
js
sahf
clc
jle
stos
arpl
or
mov
outsb
mov
cmp
jno
push
call
cmc
xorb
movsb
enter
xlat
scas
pop
lahf
mov
cmc
insb
lods
add
xor
popa
add
int3
sbb
xor
jle
xchg
int
pop
into
imull
popa
mov
pop
push
xor
imul
inc
mov
adc
aad
sbb
push
popa
gs
jae
das
push
cli
enter
push
sub
popa
mov
bound
jl
push
push
repz
xlat
xchg
mov
stc
fs
scas
neg
pop
loopne
jo
cmpsl
adc
fldenv
add
or
mov
xchg
adc
lea
pop
js
ds
out
xchg
mov
iret
jp
mov
adc
add
mov
add
icebp
sahf
fnsave
imulb
and
leave
or
dec
add
xchg
pop
sbb
xchg
cs
call
repnz
push
fmull
mov
xchg
daa
stos
jge
pop
outsl
sub
cmpsb
mov
dec
cmp
stc
pop
push
cwtl
mov
and
xchg
filds
dec
imul
jge
iret
xchg
pop
dec
out
cmp
cmp
xchg
mov
inc
adc
mov
fldenv
data16
sarl
movsb
out
add
roll
test
test
cmpsb
outsl
mov
inc
add
push
lock
cwtl
mov
or
std
mov
lcall
sub
pop
or
imul
test
jl
jle
jmp
jmp
enter
sbb
lcall
fs
les
mov
movsb
sub
jge
push
iret
push
ret
cli
jb
push
lret
pop
push
stos
ss
pop
shlb
push
sbb
pusha
cmpsl
mov
cltd
iret
dec
adc
jnp
loope
call
jno
mov
mov
mov
mov
or
pop
rol
leave
xor
dec
lahf
jns
pop
lea
int3
inc
dec
mov
into
xchg
sub
mov
mov
push
cmp
repz
push
out
add
xor
cmp
aam
addb
and
push
mov
sbb
bound
sbb
xchg
push
outsb
insb
xchg
push
mov
scas
lods
and
jmp
sbb
xchg
mov
sub
dec
stos
aam
push
ret
cmpsl
das
out
out
lods
pushf
mov
loope
imul
or
sub
adc
xor
mov
dec
mov
jle
loopne
stos
in
push
push
sub
es
aam
clc
mov
cld
xor
jmp
pushf
popa
outsl
dec
test
lods
add
inc
jge
sub
fstps
mov
push
jmp
add
gs
cmpsl
aad
shlb
fs
jae
sub
mov
push
movsl
out
dec
sub
and
push
jno
cmp
outsb
scas
fiadds
rcrb
ljmp
mov
jecxz
ret
mov
push
xchg
add
pop
ss
hlt
inc
jbe
mov
cs
icebp
test
add
jb
out
test
scas
ret
paddd
aam
inc
repnz
pop
rcrl
add
popf
stos
sbb
js
sbb
mov
pop
mov
mov
adc
add
and
push
pop
add
fcomps
xor
repz
push
fwait
cmp
sub
push
pop
mov
cmp
mov
inc
aam
movsl
xor
lods
adc
sbb
jp
rorl
or
xor
ret
insb
jae
test
sub
fsubs
pop
pop
imul
clc
adc
and
fldt
jo
das
adcl
cmovb
sbb
ret
out
xchg
xlat
and
xchg
cwtl
xchg
jae
xchg
pop
add
andb
mov
cmc
add
pop
in
ljmp
adc
out
test
cmp
mov
leave
lea
out
inc
push
cmp
pop
lods
sbb
dec
imul
xor
pusha
fldenv
daa
out
in
sub
cmp
mov
out
sub
add
hlt
xor
sbb
inc
fnop
dec
mov
mov
xor
pushl
loop
mov
sti
je
stos
xlat
shlb
stc
clc
cs
mov
fs
popa
or
jne
pusha
rcrl
loope
fisubrl
loope
rol
loop
out
push
pop
push
xor
test
dec
stos
mov
sbb
rclb
addr16
cmp
add
rcll
imul
dec
mov
sub
inc
xchg
lret
cmp
ja
inc
sub
mov
adc
mov
cmp
lret
rol
pop
stc
xchg
pop
jns
mov
adc
jnp
xchg
loop
outsb
jns,pn
hlt
add
sti
imul
mov
or
xchg
repnz
faddl
subb
cwtl
and
rclb
cwtl
inc
inc
pop
inc
pop
mov
je
cmpl
out
xor
jne
int
and
pop
push
sub
inc
sub
hlt
mov
fwait
jns
sarb
das
dec
jo
leave
jl
popa
xchg
pop
repnz
xor
gs
mov
fistpll
or
scas
push
jmp
repnz
sti
ljmp
sbb
stos
or
pop
cmp
lods
scas
pop
xchg
out
repz
fidivrs
fucomip
pop
cs
aad
jno
out
adc
add
mov
pop
lods
cwtl
xor
ds
mov
js
pushl
mov
sbb
inc
mov
pop
dec
outsl
jae
add
adc
add
or
cmpsb
cmp
repnz
cmp
jne
mov
in
stc
mov
cmp
and
mov
aam
xchg
dec
ret
mov
fildl
xor
inc
pop
int
sub
sub
iret
lea
gs
pop
mov
bound
jp
jmp
shll
js
ds
add
test
pop
and
xchg
std
xchg
addr16
cmp
mov
negl
mov
jnp
aad
xor
inc
fbstp
sahf
iret
and
or
bound
mov
rcrb
das
mov
sub
xor
xchg
pushl
lods
in
push
sub
mov
sbb
sbb
movsb
cltd
mov
or
ds
idiv
addr16
loopne
arpl
in
cmp
xor
pop
cmp
dec
mov
lret
rcrl
into
sbb
addb
aad
fs
lcall
jbe
test
outsb
int3
xchg
pop
divb
jp
xor
add
mov
bts
lods
cmp
lret
xor
popa
pop
stos
rcll
jb
mov
jmp
cwtl
mov
push
push
testb
divl
lret
aaa
push
jbe
aas
rcr
pop
popf
adc
icebp
dec
sbb
dec
sub
std
leave
lret
xchg
aas
mov
dec
inc
loope
rcl
sti
xorl
idivb
sbb
subb
pop
add
lahf
leave
lret
xor
aam
xor
insl
sbb
mov
push
dec
xchg
push
push
orb
cld
sbb
xorl
mov
scas
ja
push
jbe
push
int3
je
ret
xchg
mov
sti
jbe
hlt
mov
cli
andl
push
lds
and
adc
push
inc
les
mov
inc
testb
faddp
xor
adc
and
ret
jb
imul
out
js
jns
clc
sahf
adc
inc
popf
inc
sub
shl
mov
hlt
mov
dec
mov
push
push
xor
xchg
sarl
cld
xor
mov
fldl
leave
xchg
dec
dec
push
repz
mov
jg
dec
sahf
out
push
iret
gs
lret
push
jle
test
outsb
aas
cs
loope
cmp
in
push
sub
outsl
clc
daa
ja
mov
cmp
out
sub
add
dec
xchg
inc
dec
sbb
shlb
mov
enter
xor
rclb
cmp
aad
rcrb
popf
push
mov
adc
leave
ljmp
inc
add
js
loop
cmp
mov
xchg
enter
mov
out
or
mov
push
and
xchg
adcl
pop
mov
mov
arpl
out
imul
jg
mull
lock
out
and
mov
or
inc
das
adc
adc
addr16
mov
call
xchg
adcl
loop
xchg
push
ja
mov
js
push
out
cmp
ret
mov
dec
pop
mov
or
push
sbb
adc
and
sbb
lds
scas
iret
int
out
xor
lods
popa
adc
xchg
scas
insb
fmuls
xchg
add
or
cmpl
xor
push
outsb
fnsave
out
ds
adc
jge
sub
leave
pop
xor
xor
les
sarb
jne
mov
arpl
repz
pop
jle
sub
test
lods
fisubrl
mov
iret
mov
test
or
cmpsl
jp
and
or
fdiv
pop
cmp
pop
out
xchg
xchg
xor
movsb
xor
mov
sbbl
int
mov
adc
mov
loope
cmpsb
scas
sub
insb
inc
mov
mov
push
jecxz
cmc
mov
adc
mov
dec
mov
push
mov
pop
inc
adc
push
ret
cmp
add
or
fistps
out
jecxz
adc
clc
cltd
in
mov
push
rcrl
push
jmp
hlt
pop
inc
inc
mov
sub
or
mov
aam
cmc
lret
rorl
dec
test
pop
adc
cld
jne
mov
jbe
xchg
push
jbe
xor
lahf
xchg
pop
adcl
push
loop
repnz
xlat
test
add
cwtl
test
add
test
shll
loope
shlb
sbb
xor
and
push
sub
stos
xor
jne
pop
adc
loop
aaa
mov
inc
aas
loope
scas
xor
cwtl
outsl
push
divb
rolb
push
adc
add
cmc
and
cmpsb
sub
enter
inc
xchg
add
flds
pop
mov
or
mov
mov
xor
ljmp
loopne
stos
and
scas
int3
call
fidivrl
cmpsl
in
int
adc
pushf
popf
inc
leave
ds
out
stos
mov
in
jecxz
addr16
scas
xor
jno
jmp
inc
stc
xchg
and
stc
sbb
xor
pop
lods
in
jns
cmp
in
jle
nop
hlt
push
push
outsl
push
je
push
test
fistl
jmp
into
bound
rcll
out
xor
mov
xchg
xor
sar
xchg
sbb
mov
sub
stos
dec
mov
pop
dec
add
or
mov
mov
stos
dec
sub
xor
add
dec
xorb
sbb
or
ss
xchg
xor
test
out
mov
push
inc
insl
sbb
popf
inc
rcll
adc
pop
jle
sahf
aad
jecxz
push
sbb
loopne
jae
xor
out
lret
xor
mov
lea
xchg
inc
mov
vcmpss
fiaddl
rcll
shlb
into
repnz
lret
jns
mov
jl
sub
mov
cmp
les
sbb
add
cld
sbb
mov
mov
out
in
add
jnp
cli
xchg
je
outsl
inc
es
push
adc
and
repnz
xchg
ret
or
in
sahf
std
xchg
mov
mov
aad
jmp
push
sbb
dec
ret
push
mov
or
test
push
inc
mov
pushf
add
or
adc
aam
inc
rorl
pop
push
pop
int
jbe
lcall
repz
in
aad
or
xchg
movb
sbbl
push
mov
xor
icebp
data16
icebp
enter
dec
negb
in
mov
insb
push
jnp
gs
jecxz
leave
test
jbe
loope
les
push
enter
and
mov
jecxz
insl
or
iret
mov
jmp
dec
xor
out
out
or
sbb
mov
inc
negb
push
fwait
mov
ja
mov
mov
adc
int3
pop
adc
mov
jp
mov
stos
jmp
testb
cmp
jecxz
add
xor
sub
pop
ficompl
stos
xor
cmp
push
mov
jo
imul
fcmovu
ja
adc
in
mov
ret
pusha
outsb
cs
lea
fwait
xchg
addb
lcall
fsub
cwtl
add
es
shlb
mov
icebp
adc
jns
pop
and
add
pop
sbb
jge
ret
push
enter
addl
inc
ds
jnp
cld
adc
mov
inc
xlat
jns
mov
rcll
mov
mov
inc
pop
add
testl
filds
mov
xchg
inc
out
pop
mov
lods
inc
sub
jno
jge
ds
insb
decb
aas
sub
lret
sbb
mov
sub
int3
pop
mov
andb
xor
dec
out
dec
jae
cmovno
mov
bound
leave
lahf
cmpsb
mov
dec
sub
pop
push
sbb
inc
pop
dec
mov
andl
or
addl
push
scas
fcompl
in
push
shrl
iret
xor
fidivl
bound
ret
xchg
pop
fstl
int3
push
mov
mov
leave
sub
or
pop
jge
test
mov
push
push
push
imul
gs
nop
cwtl
xchg
sbb
or
pop
insl
frstor
loopne
decl
int3
popa
sbb
stos
fs
lahf
test
pop
add
fwait
movsl
xchg
mov
fldcw
jnp
mov
dec
in
xor
ret
test
push
push
sbb
mov
xor
jle
and
sbb
jp
mov
out
jae
inc
jle
stos
pushf
cmp
enter
adc
inc
in
xor
jnp
sbb
push
pop
push
and
inc
fidivl
subl
dec
aam
jle
dec
adc
adc
in
nop
outsl
pushf
sbb
or
mov
mov
iret
and
sbb
pop
scas
add
sub
pushf
rol
adc
inc
pop
jbe
pop
xchg
xchg
sub
fildll
ja
adc
mov
or
sub
fnstcw
imul
mov
xchg
inc
inc
test
fidivl
mov
fadds
lods
mov
and
pop
mov
iret
roll
lods
into
hlt
push
xor
mov
and
scas
pop
xchg
xchg
pop
mov
push
dec
popf
pop
out
lock
cmp
in
or
int3
out
xlat
cmp
fwait
pop
shrl
jb
dec
push
xchg
test
icebp
mov
aad
mov
fisttpl
ret
inc
mov
lods
sub
sub
dec
sub
aas
jecxz
jns
jb
repnz
pop
jb
and
hlt
roll
ljmp
sahf
inc
inc
rcl
cmp
inc
sahf
lods
sbb
adc
stc
std
test
adc
jmp
xor
push
test
aad
mov
or
dec
js
push
ss
repnz
push
xor
in
cwtl
add
and
mov
xchg
sub
inc
xor
push
pushf
nop
mov
jl
data16
sahf
je
mov
imul
inc
je
sbb
testb
addr16
and
dec
push
jle
enter
push
push
int
data16
sub
insl
jmp
into
xor
movsb
or
add
mov
add
sarl
in
cltd
aaa
into
stos
mov
xor
and
lahf
dec
jnp
mov
xchg
mov
sub
bound
xorl
mov
les
fimuls
push
stos
lcall
lret
mov
sahf
sbb
dec
add
inc
popf
data16
repnz
movsl
int3
inc
das
call
xor
arpl
popa
mov
dec
cltd
sahf
popl
or
xor
dec
inc
xor
xchg
mov
xor
cmc
add
xor
sbb
jno
out
imul
jb
bound
pushf
mov
mov
addl
jmp
popf
rclb
inc
imul
xor
push
mov
ljmp
push
int3
ljmp
push
jmp
in
jmp
cmp
inc
movsl
cmpsl
enter
cmp
test
inc
pop
pop
fimuls
sti
arpl
jecxz
popf
stos
into
and
orl
mov
jl
cmc
mov
adc
fldenv
sbb
movsb
ss
pop
and
adc
dec
jle
jmp
data16
icebp
mov
xor
sub
and
mov
add
rcl
fs
xchg
mov
push
stos
fmuls
mov
scas
add
mov
iret
shlb
test
and
adc
lods
daa
cmpsb
repnz
lret
sti
fwait
lahf
ffreep
mov
dec
sub
xor
xchg
pusha
test
cwtl
roll
mov
clc
loopne
cmp
add
inc
xor
call
aaa
adcl
fbld
xchg
pop
cmp
push
mov
mov
push
adc
jno
sti
and
sarb
movsl
pop
movsb
loop
gs
xor
and
lds
sbb
or
or
ljmp
dec
xor
dec
into
or
push
les
mov
pop
fdivrl
jg
stc
cmp
dec
inc
push
ss
repnz
push
incl
cli
mov
lock
cmp
and
cld
aad
mov
out
lret
cmc
jno
xchg
mov
sbb
imul
adc
divb
or
lods
inc
gs
push
or
bound
aad
loop
jne
and
push
loop
xchg
pop
les
fbld
test
scas
xor
daa
pop
imul
pop
jns
iret
jmp
hlt
in
add
add
xchg
ret
pop
ja
fs
adc
inc
iretw
fiadds
jns
mov
call
sbb
push
inc
dec
sub
sub
push
jo
lcall
mov
test
or
imul
ja
mov
mov
dec
mov
push
sub
mov
mov
xor
out
clc
xor
add
sub
mov
jg,pn
cmpsl
lock
orl
mov
cld
cmp
mov
mov
lea
push
mov
xor
add
and
sbb
out
clc
test
push
inc
mov
out
mov
adc
stos
je
out
loopne
mov
nop
sbb
push
cld
nop
or
pop
clc
jmp
shl
movsl
xor
cli
fcomps
mov
mov
icebp
and
fisubrl
add
pop
mov
sub
out
imul
out
out
movsb
loop
inc
mov
das
fwait
dec
insl
push
xor
cmp
adc
stos
inc
mov
sti
push
jne
mov
lret
pop
or
push
push
adc
xchg
dec
adc
sar
ret
fdivl
jmp
sbbb
mov
call
cltd
lret
lret
stos
jnp
lods
push
adc
dec
loop
lahf
mov
jle
je
fdivs
fisubrs
shll
sti
jg
inc
filds
divb
inc
add
or
fistl
clc
jae
gs
mov
sbb
pop
jmp
aas
inc
add
sbb
lea
in
lods
pop
pop
cs
mov
ljmp
add
dec
es
sahf
popf
lea
lret
mov
or
add
push
pop
xor
jmp
das
fcomps
pop
lods
sti
inc
into
icebp
stc
pop
imul
idiv
call
fidivl
call
scas
dec
lret
pop
aaa
jp
and
or
lahf
negb
out
aas
loopne
lock
xor
imul
push
mov
fistpll
push
idivb
mov
in
pop
inc
mov
dec
mov
jg
leave
lret
loopne
pop
jmp
cwtl
leave
sbb
hlt
jmp
sbb
xchg
das
fistl
sub
mov
jp
push
ret
scas
sbb
mov
push
sbb
mov
pop
cmp
repnz
mov
pop
testl
xchg
inc
xchg
jae
jl
es
sbb
sub
sbb
jbe
mov
movsl
add
jo
ret
jno
inc
mov
aad
imull
inc
shll
popa
adc
popf
cmpb
test
aaa
bound
std
addr16
jb
cmp
push
imul
repnz
loopne
aam
incb
lods
mov
fisubl
loopne
adc
sahf
jp
mov
xor
lahf
pop
data16
stc
ficoml
popf
addr16
insb
stc
mov
xchg
in
mov
xor
add
xor
mov
bound
outsl
cmpsb
mov
jmp
sbb
bound
cmp
push
sbb
andl
enter
sti
pop
push
add
gs
push
sub
orb
movsl
lods
jns
ret
scas
or
shlb
loope
cmp
mov
loope
sbb
out
pusha
js
pop
and
and
jae
push
nop
cli
iret
push
push
or
cli
xchg
cs
mov
rorb
gs
pop
pop
imul
push
and
inc
xor
roll
and
loopne
cmpsl
jp
jne
nop
lods
push
dec
add
push
fsubrl
mov
rolb
ret
adc
mov
shlb
mov
neg
xor
cmp
outsl
add
insb
fldl
mov
sbb
mov
xchg
push
shll
in
xchg
es
inc
jno
xor
and
cmp
dec
arpl
xlat
loope
adc
xchg
rcrb
and
bound
test
inc
cmp
pop
jg
jbe
imul
push
and
xor
ds
cmp
lods
jae
leave
mov
cmc
pop
mov
xor
pop
ljmp
mov
cld
stos
add
loop
pop
out
push
sub
mov
pop
stc
pusha
fbstp
es
fs
dec
dec
mov
mov
fmul
int
call
mov
sub
fcom
cmp
inc
xchg
inc
imul
jbe
inc
pop
add
dec
out
sub
mov
int3
add
out
mov
sahf
mov
inc
mov
dec
cmp
mov
sub
std
data16
roll
inc
je
cmpsb
inc
inc
sahf
xor
push
out
and
mov
pop
ss
pop
mov
faddl
nop
mov
cmc
aad
sub
xor
cmp
mov
das
push
push
cmp
out
ljmp
mov
jns
sbb
mov
mov
xor
repz
cli
inc
int3
popa
push
xchg
icebp
jb
mov
test
pusha
int
roll
mov
lea
adc
lods
sbb
imul
decb
rcrl
xchg
jne
enter
inc
pop
int3
aas
lret
repz
jnp
cmc
enter
fidivrs
leave
sub
push
adc
mov
jb
and
mov
cltd
insb
jae
mov
es
ljmp
lods
loop
in
pop
insl
push
lea
mov
test
sub
xchg
xchg
enter
pop
ss
cmc
mov
popf
pop
pop
mov
mov
sub
int
jge
arpl
stos
jae
insl
out
cmc
stos
jge
jb
lods
ja
movsl
dec
rol
ror
pushl
inc
sub
xchg
iret
jne
add
jl
jecxz
jae
aaa
mov
dec
ret
xchg
lahf
add
inc
push
nop
sub
mov
lods
xchg
inc
inc
jae
in
rorb
mov
psubusw
nop
roll
in
cmp
inc
pop
imul
mov
aad
pop
mov
arpl
fdivl
pushf
jno
stos
jb
pop
adc
xorl
stos
or
dec
add
pop
arpl
add
mov
hlt
add
xchg
rolb
repz
xor
imull
dec
pushf
mov
mov
xchg
sub
cmpsl
stc
lods
mov
sub
enter
mov
add
out
lahf
inc
mov
mov
add
pop
or
pushf
insb
cltd
push
jo
cmpsb
inc
dec
jno
clc
call
lea
ds
push
xchg
pop
xchg
inc
dec
xchg
push
adcl
sbb
or
cmpsb
scas
pusha
adc
push
stos
rcrb
push
in
push
sub
dec
or
xor
in
xchg
or
in
mov
xlat
and
adc
out
jg
std
lcall
xchg
jle
pop
adc
and
add
cmp
push
out
add
pop
aam
das
jmp
ljmp
cmc
jecxz
jbe
ljmp
es
dec
jl
rcrl
sbb
ret
pop
mov
pop
jno
pop
test
dec
sub
out
add
mov
bound
xlat
inc
enter
inc
sbb
jmp
dec
sbb
fisttpl
push
stos
cmp
sub
adc
testb
addl
mov
jno
sub
push
fcoml
mov
clc
jo
cmpsb
xchg
push
adc
ja
or
pop
orb
mov
mov
push
aaa
or
cld
add
and
add
int3
rorl
ljmp
pop
cmpb
sub
inc
leave
push
movsb
mov
shr
mov
fwait
jecxz
and
shrl
loope
sbb
mov
or
push
or
xchg
push
lock
cmp
and
dec
jns
xchg
inc
stos
push
jl
aad
push
push
xor
sbb
dec
cmpsb
jb
cwtl
jne
lea
lock
pop
mov
pop
pop
out
pop
mov
sti
mov
fs
or
mov
shrl
xchg
out
ljmp
add
test
lea
push
mov
xor
add
addr16
xor
dec
std
int
or
cmpsl
pop
bound
repnz
lcall
adc
xor
mov
mov
mov
and
rorb
das
sub
xor
inc
inc
int
in
lds
int
mov
cltd
jno
xchg
add
mov
loopne
cltd
imul
ret
cmp
and
mov
rcr
jnp
andb
ja
inc
fisubs
into
add
ret
lret
pop
sub
pushl
cwtl
xor
or
pop
shlb
mov
andb
adc
jo
jo
jl
cmp
mov
or
cltd
ret
int3
cmpw
andl
loope
mov
ss
ret
repnz
inc
push
sub
test
movsb
out
fcomip
mov
pop
movsb
and
pop
mov
mov
add
jge
sub
popa
xchg
rcll
mov
ds
test
or
std
add
ds
mov
mov
rcrb
mov
cli
ret
sub
jecxz
mov
push
das
mov
inc
jle
push
add
xchg
xorb
stos
sub
movsl
pop
push
arpl
pop
xor
or
bound
cltd
int
inc
das
mov
mov
test
rcr
jbe
iret
adc
sub
lock
or
scas
adc
push
mov
adc
mov
aam
xchg
test
inc
loop
cltd
test
out
xor
mov
jmp
faddl
ljmp
cmp
inc
xchg
push
and
sub
arpl
add
add
adc
sub
push
icebp
lods
mov
pop
hlt
or
dec
mov
ss
mov
cmpsb
adc
push
mov
adc
jge
shll
mov
add
hlt
push
pop
dec
push
sbb
inc
clc
mov
pushl
push
adc
aaa
or
pushf
or
xor
mov
inc
jne
sbb
nop
mov
add
or
cmp
adc
into
push
jge
daa
pushf
lret
pop
cmovno
test
leave
cmpsl
out
enter
inc
les
aam
fcoml
dec
hlt
cmpl
aam
adc
xchg
and
call
cli
popa
add
jmp
aas
mov
and
fcoms
jo
cli
inc
pop
ljmp
inc
in
push
loop
mov
fldl2e
adc
pop
sbb
jl
xchg
enter
pop
push
mov
lock
inc
or
clc
and
sbb
and
cli
push
xchg
add
aaa
sbb
es
mov
sbbb
pop
rcr
lret
in
int3
xchg
jp
hlt
cmp
fistpl
lret
cmpl
shlb
dec
jae
loopne
shlb
imul
setno
sub
cld
movsb
fcoml
add
ss
xor
jle
cmpsb
jo
cwtl
insb
xchg
addr16
aaa
cltd
test
jno
push
and
and
in
daa
add
scas
cmpsb
fucomp
inc
inc
loope
aam
fistpl
les
lock
jecxz
inc
aad
xchg
cmp
fdivr
je
add
je
std
and
mov
mov
cs
jge
repz
sub
and
fildll
mov
sbb
movsl
add
pusha
xor
push
ror
mov
pusha
jno
jb
jge
loopne
mov
imul
fildll
into
jno
xchg
jl
mov
lahf
mov
fidivs
aas
adc
jb
sub
mov
sbb
mov
in
push
cmpsb
xor
out
xor
rorb
sub
arpl
int3
pop
pop
fwait
bound
rcll
sbb
mov
stc
movsl
push
sub
push
in
fnstenv
insl
fdivr
mov
mov
out
jl
pop
xchg
mov
push
xor
fwait
aas
jo
pop
fisubrl
aad
out
push
cmp
ja
pop
push
push
push
mov
lahf
lret
pop
pop
sbb
cs
and
mov
push
lret
mov
addb
icebp
out
sbb
movsl
leave
test
ljmp
rcl
xchg
cmp
xor
push
sbb
push
out
cmpsl
bound
xchg
pop
xor
mov
cli
sbb
bound
sub
or
or
push
les
mov
xchg
lret
push
insw
adc
or
push
gs
dec
fcmove
push
sub
mov
fcoml
lods
jmp
adc
cs
aas
push
out
divps
int3
idivb
in
lret
mov
fcoml
int
mov
xor
frstor
cwtl
dec
outsl
jno
lock
clc
enter
ljmp
cmp
jl
insb
jmp
push
loopnew
jecxz
sbbl
adc
push
cwtl
movsb
shl
les
call
lock
ss
popf
cmp
into
dec
andl
ret
jl
push
movsb
push
dec
mov
aas
das
xor
push
pusha
lret
mov
adc
mov
and
sbb
jge
xorb
ret
shl
into
mov
inc
addb
mov
das
out
dec
js
pop
sub
mov
lcall
pusha
test
mov
jae
into
sbb
sbb
sbb
pop
sbb
xor
shrl
xlat
dec
inc
cld
imul
inc
ss
fistl
add
mov
xchg
aaa
mov
fsubr
push
addb
scas
insb
push
inc
cmpsb
mov
dec
cs
or
fistps
mov
data16
lcall
fdivp
jo
xor
push
arpl
push
ret
ret
test
ret
in
bound
ret
inc
test
enter
aad
popa
cmpsb
sbb
jne
fnsave
jo
cmp
mov
aad
push
out
xchg
push
xor
out
push
leave
sti
pop
imul
push
aam
fisubrl
test
jmp
xchg
mov
popa
std
inc
icebp
jl
mov
montmul
cmpsb
lds
jecxz
lds
div
add
cmp
cmp
movsb
addr16
inc
jmp
xchg
cmp
pushf
push
jge,pn
and
js
into
jle
mov
je
push
inc
xor
push
adc
mov
pop
lcall
jb
pinsrw
outsl
fwait
jmp
xor
enter
in
jle
jl
and
imul
cmpb
cld
inc
roll
dec
ljmp
and
outsl
add
ret
incl
sub
jno
leave
xchg
out
mov
lret
and
imul
xchg
mov
mov
in
pop
cmp
cmpsb
lock
test
xchg
xor
jb
addr16
scas
mov
push
fimuls
mov
xchg
push
daa
jl
mov
jno
adc
inc
lock
jp
adcl
mov
gs
iret
sub
ljmp
jo,pt
repnz
cmp
adc
xor
clc
inc
scas
mov
aad
sbb
in
les
loope
jmp
loop
loopne
lock
mov
in
mov
mov
cmpb
adc
bound
gs
fistl
xchg
mov
mov
jle
xchg
mov
cmpsb
loope
mov
in
sbb
ljmp
pop
dec
cli
push
clc
aam
popf
insl
jbe
mov
hlt
add
pop
ret
leave
jno
mov
je
call
aam
ret
xchg
popa
add
cmp
xor
pop
sbb
leave
xor
fldl
push
inc
sahf
adc
sahf
xor
dec
cmp
xchg
sti
scas
cmpb
dec
push
push
mov
sbb
insb
test
cs
or
imul
jmp
sbb
jecxz
push
js
lods
add
fcompl
xchg
test
xchg
scas
xchg
adc
mov
cmpsb
daa
cmp
push
push
add
das
roll
out
push
and
sbb
pop
into
divl
xor
mul
addr16
mov
mov
mov
mov
incl
pop
nop
mov
cmp
and
rcl
inc
jne
xchg
fistl
cmpsb
sub
xchg
lods
push
pop
jno
inc
sub
and
pminsw
and
aam
adc
sbb
xor
addr16
mov
adc
add
incb
call
lods
mov
arpl
daa
mov
ss
aad
adc
cs
or
out
rcrl
pop
pusha
push
and
and
repnz
popa
jge
lcall
push
add
push
in
mov
sbb
ds
outsb
xorb
fimuls
lret
pop
jp
cmp
insb
and
adc
sbb
mov
mov
lock
jb
mov
rclb
sbbb
inc
fiadds
aas
test
xchg
fldt
adc
sbb
jmp
sub
and
es
xor
cmp
add
mov
fcoms
aad
sti
xor
add
and
jmp
adcb
xchg
mov
call
fisttpll
mov
nop
add
movsb
scas
inc
jb
or
icebp
flds
jb
in
push
outsb
xchg
inc
sbb
pop
dec
outsb
xchg
sbb
cmp
cmp
data16
jmp
loope
or
call
or
ds
es
xchg
push
je
and
adc
mov
and
lock
cmc
loope
adc
dec
add
lods
lds
sbb
mov
outsl
push
push
inc
pusha
popf
cmp
repz
jb
mov
lret
xlat
clc
lret
mov
outsl
pop
rclb
movsb
loop
shrb
pusha
push
jmp
jo
stos
stos
mov
sub
sbb
lods
int3
leave
inc
sub
inc
and
pop
ret
rcrl
add
cld
fwait
ljmp
daa
cmp
repz
add
inc
lahf
aaa
sbb
push
mov
xchg
fwait
pop
stos
rcll
add
sub
mov
adc
push
mov
sub
sahf
nop
jmp
fldcw
sub
pop
fmuls
cwtl
fisttpll
lret
jne
add
sti
aam
jb
pop
sahf
dec
pop
add
pop
fwait
pop
scas
cld
daa
or
and
push
mov
das
in
push
mov
in
rol
pop
dec
mov
pusha
dec
or
xchg
pop
dec
sti
fwait
mov
pop
sub
add
call
adc
xchg
xchg
pop
notl
sbb
push
fsts
inc
xor
out
fs
call
xor
jmp
lahf
pop
das
int
frstor
inc
push
dec
shl
icebp
dec
inc
dec
and
lock
mov
add
or
shr
jbe
shr
fisubrl
les
fnstsw
int3
aas
add
add
xchg
sbb
mov
ficoml
dec
xor
stos
lock
mov
test
mov
cmp
pop
loop
or
movsl
daa
sub
push
xor
prefetchw
or
aad
add
aaa
ljmp
loopne
pop
in
leave
sub
scas
mov
movsb
adc
ja
stc
mov
inc
out
test
dec
mov
dec
cmc
scas
xor
sub
sbbb
movsl
inc
xchg
adc
ljmp
dec
and
subl
mov
lock
inc
les
sbb
fs
sub
mov
push
adc
push
mov
fiaddl
jmp
add
sti
push
test
adc
scas
or
cmp
call
xchg
aad
pop
xchg
pop
xchg
inc
pop
outsl
pop
fsubl
mov
stos
dec
jp
adc
aas
dec
pop
and
add
enter
push
fwait
push
movsb
popf
adcl
cs
shl
xchg
lods
pop
mull
addr16
clc
test
push
pop
mov
lods
shlb
sbbb
xchg
push
bnd
lret
pop
mov
inc
xchg
addb
pop
mov
test
je
push
add
int3
cmp
out
jno
vpsubusw
cmpsb
pop
cmpsl
jp
add
mov
test
adc
je
adc
dec
loope
dec
adcl
nop
add
xchg
cmp
push
add
out
sub
mov
cmpsl
push
js
mov
test
lret
xor
sub
aam
div
push
sarb
and
out
fistps
fwait
cltd
jg
xor
and
sbb
int
outsb
imul
pop
lods
out
xor
jle
lcall
cmc
sbb
pop
sub
dec
fnstsw
add
aam
sbb
je
fsubrl
push
sub
movsl
jmp
push
cmp
add
xor
pop
rol
sbb
std
add
dec
imul
xchg
jbe
test
dec
push
sti
jo
adc
dec
lcall
scas
mov
xchg
repz
xchg
adcb
sbb
cli
mov
cmp
cmp
sub
add
stos
out
jp
sahf
push
cmp
call
jge
pusha
ret
mov
cmp
pop
and
pushf
or
loope
out
and
rep
pop
es
leave
sahf
in
ja
inc
and
sti
fwait
push
outsl
aaa
faddl
add
push
xor
jg
jbe
mov
lret
dec
loop
jge
mov
cld
push
mov
pop
pop
das
xor
cmp
jno
push
mov
and
sbbb
sub
rcrb
xchg
sarl
cmp
cs
inc
dec
cmp
mov
xor
mov
cs
or
push
cmp
xor
sbb
clc
pushf
cmp
mov
je
mov
push
push
test
inc
or
stos
test
xor
jmp
mov
stos
xchg
dec
test
loop
mov
add
ret
leave
cwtl
inc
sti
sub
sub
scas
pop
lods
divl
fbld
loopne
sub
aam
push
push
rcr
lea
rcrb
loopne
sub
sub
add
mov
dec
xor
jecxz
call
inc
sbb
test
inc
add
dec
sbb
icebp
out
inc
fyl2x
je
lret
jne
cs
adc
sbb
lock
stos
movsl
loope
mov
arpl
popf
push
cmp
adc
xchg
popf
sub
test
cwtl
outsb
mov
jno
ja
xchg
aas
ja
mov
pushf
insb
call
cmp
sbb
xor
lds
movsl
in
pcmpeqw
pop
sahf
add
xchg
daa
daa
sub
mov
push
jae
loop
cltd
lea
or
push
inc
xchg
shlb
icebp
mov
jb
jnp
mov
test
xorl
ja
dec
mov
sbb
xor
das
jle
push
jb
mov
std
lcall
mov
lcall
stos
sahf
mov
push
aaa
sbb
jp
and
jge
lods
push
mov
or
xlat
push
jno
outsl
jo
test
jg
fwait
clc
jb
pop
into
cmp
push
jl
aam
inc
outsb
leave
pop
cmp
and
or
std
inc
hlt
icebp
in
pop
mov
push
test
enter
inc
in
out
rorl
stc
out
and
push
aam
out
dec
cs
inc
out
int
xlat
pop
xchg
or
xchg
push
add
test
xlat
fwait
inc
out
push
shrb
mov
xchg
test
xchg
xor
jno
jbe
jl
aaa
adc
aas
jbe
mov
iret
xor
outsl
pop
dec
xor
cmpsb
int3
sbb
push
lods
and
push
cwtl
in
sbb
mov
enter
fstp
mov
call
dec
push
push
sub
adc
lret
out
aam
push
ds
mov
lods
std
sbb
xchg
cltd
in
mov
test
push
push
xor
push
lods
jp
ss
shlb
mov
mov
push
mov
cmpsb
addr16
arpl
fistl
aaa
imul
shll
out
dec
loop
jne
pop
jnp
aam
int3
shl
aaa
cmp
shl
mov
sbb
mov
or
adc
mov
sub
jp
push
push
inc
xchg
and
pop
subb
mov
dec
mov
mov
stos
outsl
ret
shlb
xchg
dec
lds
call
and
gs
xchg
enter
dec
cltd
or
pop
add
mov
stos
rcl
das
leave
xchg
sub
push
lret
pop
sub
fidivs
lock
cmpsb
repnz
xchg
mov
ret
insb
sub
adc
dec
mov
je
movsl
and
incb
fldl
sub
mov
aas
xchg
in
xor
pop
mov
jmp
not
shll
aaa
add
jp
mov
mov
lcall
jle
xchg
scas
mov
cwtl
or
add
xor
dec
loop
addl
clc
std
test
in
and
loope
repz
rclb
push
lods
sbb
sub
inc
xchg
or
or
sub
out
in
stos
fildll
insb
xor
jbe
adc
ficoml
jecxz
ja
loope
lock
xchg
cmp
or
xchg
movl
shrb
xor
inc
mov
ret
jnp
aas
mov
mov
lods
stos
shlb
sub
push
enter
xchg
xor
aas
mov
push
mov
mov
scas
subb
loop
loope
mov
mov
mov
cmpsl
xor
xchg
jl
outsb
or
mov
or
lea
and
xor
movsl
push
sbb
and
adc
adc
cmp
out
xchg
cmc
rcrl
pop
ret
rdpmc
stos
sub
pop
xchg
loop
roll
int
fimull
push
out
adc
rcl
jae
cwtl
push
push
cmp
adc
out
clc
hlt
les
test
xor
lods
or
pop
leave
mov
inc
inc
xchg
mov
mov
pop
push
push
gs
add
mov
mov
pusha
fmuls
cmp
pop
cmp
lds
pop
lret
cmp
push
cmp
jae
popa
testl
data16
lods
mov
orl
cmp
lahf
adc
pop
stos
rcr
or
push
mov
dec
fmul
jns
cmp
mov
test
sub
dec
or
scas
mov
jae
cli
fistl
insl
test
cmp
mov
lret
xor
loope
cmp
push
pop
mov
dec
int
outsb
xor
and
or
push
pop
mov
ss
cmc
xchg
std
dec
insb
cmp
jns
cmp
enter
push
cmp
inc
pop
add
imul
mov
lods
outsl
out
leave
pop
inc
xor
ret
sub
addb
jge
cmp
sbb
or
xchg
leave
into
pop
jmp
int
int3
enter
mov
pop
stos
fdivp
dec
dec
sbb
shl
arpl
dec
les
pop
fsubl
xor
pop
and
push
jns,pn
mov
jecxz
out
push
leave
mov
subl
sub
aaa
aaa
in
aas
fisttps
push
fs
fcmovnb
les
popa
scas
or
jae
mov
cld
std
cwtl
fwait
jecxz
xchg
dec
daa
movhps
fcoms
mov
cmc
sti
add
pop
or
aaa
sbb
cmpsb
popf
enter
mov
jno
scas
in
lods
mov
pop
xchg
or
and
call
movsb
rorb
lods
out
xchg
test
aas
repz
mov
inc
inc
shlb
push
pop
and
ret
jl
jne
xchg
add
pop
sub
lcall
sbb
pop
mov
mov
adc
sbb
pop
add
jne
jg
adc
and
xor
cmc
sub
repz
sti
mov
lret
or
fcmovnu
xchg
aad
push
leave
stos
or
lds
in
pop
sarl
lea
xchg
xchg
mov
mov
add
inc
dec
mov
roll
cmp
jle
mov
out
add
pushf
dec
push
in
leave
xor
fcoml
cmpsb
jg
jmp
ljmp
xchg
scas
das
inc
insb
and
lock
outsb
fcompl
push
pop
mov
mov
adc
scas
push
int3
les
movsb
cmp
jb
popl
add
in
push
mov
pop
sub
outsl
in
mov
jl
cli
mov
xor
pusha
cmp
pop
aaa
fsubrp
fxch
int
sahf
sub
fsubr
call
xchg
jge
cli
pop
xchg
mov
mov
subps
inc
nop
cltd
loop
test
call
adc
fsts
or
xchg
push
scas
mov
or
pop
negl
push
aaa
sbb
fidivrl
lock
mov
cmp
insl
push
aas
subb
mov
fs
lea
popa
fsubrl
insl
sub
rcr
cmpsl
cmp
jns
xor
lret
das
inc
and
daa
xchg
pop
movsl
jno
movsl
jl
sbb
sbb
pop
jb
sbb
aad
jbe
push
cmp
xchg
and
add
popa
movsl
je
lahf
std
jle
push
lret
scas
insl
hlt
xchg
or
mov
pop
ja
outsb
jge
iret
cs
cmc
lret
and
aaa
js
addr16
aas
push
and
int3
fnstenv
pop
inc
arpl
fs
xor
push
loop
mov
add
leave
xchg
shrl
mov
push
loopne
inc
push
sbb
fcompl
lds
and
popa
insl
cmc
xor
into
out
jge
shll
inc
shll
jg
rolb
xor
js
loopne
mov
xchg
in
push
jbe
xchg
add
jo
paddd
lret
jo
imul
add
xchg
rclb
jmp
int
lahf
loopne
xchg
push
addr16
push
push
add
mov
inc
mov
cld
jne
icebp
or
shll
jg
je
dec
sub
push
dec
arpl
repz
adc
inc
and
outsl
cmp
imul
xor
mov
and
cmp
xchg
pop
sahf
xor
pop
ja
lods
sbb
inc
loopne
dec
jmp
mov
sbb
xchg
jp
mov
and
cmp
out
ret
push
shll
add
fsubrs
add
fisttpl
xor
mov
add
push
test
scas
mov
push
mov
das
dec
adc
loopne
adc
mov
mov
imul
inc
fs
push
lret
push
stos
inc
cmp
in
jmp
out
mov
push
mov
es
xor
push
and
sub
push
imul
stos
xchg
clc
fildll
iret
ja
or
add
and
frstor
call
jae
adc
pop
sub
repnz
xor
xorl
inc
loopne
cli
cwtl
scas
and
pop
xchg
rep
hlt
shrb
in
mov
mov
jmp
js
mov
push
xor
iret
push
dec
xor
ljmp
sbb
mov
es
pop
cmp
jmp
popa
cs
nop
in
or
sub
fnsave
push
mov
or
out
mov
iret
popf
sbb
mov
adc
int3
inc
fstpl
or
sbb
push
adc
nop
movsl
or
lret
jnp
imul
add
dec
leave
push
fxtract
xor
ds
shll
inc
lret
je
dec
addr16
shrl
fcoms
adc
sbb
cmp
test
out
out
add
popa
push
cmp
mov
std
nop
and
inc
nop
aas
lock
sbb
inc
enter
iret
push
and
pushf
arpl
sbb
icebp
shr
pop
cmp
and
sub
push
out
xchg
loop
and
xchg
xlat
xchg
push
gs
and
cmp
fnstsw
movsb
int
int3
movsb
cwtl
repnz
ficoms
pop
cmpsl
mov
pusha
pop
dec
or
xor
mov
inc
sub
cld
iret
fimuls
mov
or
or
adc
push
push
in
push
inc
ljmp
mov
int3
sub
repnz
sarb
stc
sub
push
adc
dec
xor
inc
iret
repz
jg
pop
das
push
repz
xchg
mov
rcr
xor
test
sbb
add
ret
into
arpl
and
stc
fsubs
or
pop
mov
mov
adc
lahf
js,pt
inc
jae
xchg
insb
mov
cmp
ss
testl
mov
stos
call
add
popa
add
pop
push
lret
add
int3
xchg
movsl
call
jl
mov
cmp
jnp
clc
popf
xchg
or
push
pop
aam
dec
or
add
mov
fdivl
lret
mov
out
xlat
jnp
push
loop
cltd
cltd
andb
dec
pop
mov
iret
mov
adc
push
dec
mov
cltd
and
mov
inc
std
push
xchg
jg
adc
loope
push
push
jl
push
jmp
cmp
popf
fisttpl
sbb
aad
cs
pushl
stc
add
jecxz
pop
mov
in
andl
mov
scas
les
push
pop
test
or
mov
and
mov
fchs
std
stos
jmp
mov
dec
mov
xchg
inc
xchg
cs
cld
cmpsb
cmpsb
mov
scas
or
mov
ljmp
cld
arpl
aad
cs
ficomps
push
fs
call
mov
mov
pusha
fstpl
fnstcw
push
add
add
mov
jecxz
shrb
sub
xchg
btr
stos
scas
push
cli
cmpsb
cwtl
imul
xor
in
inc
mov
add
ja
stc
fcompl
jae
and
sarl
push
or
fwait
pop
pop
dec
xchg
imul
addr16
popf
pop
test
xlat
mov
add
scas
mov
aaa
mov
mov
cmpsb
cmp
bound
cli
out
dec
mov
iret
daa
mov
mov
or
or
ret
into
insb
out
push
mov
out
xor
and
js
mov
add
inc
sub
push
pop
popf
sub
jle
xchg
push
cld
inc
addl
or
movsb
lea
or
mov
scas
lock
dec
dec
and
and
pop
shll
fsubrs
inc
sbb
xor
ret
sbb
push
stos
mov
and
cmpsb
and
imul
xchg
sti
xchg
pop
insl
pop
jl
jecxz
repz
sub
cmpsb
xchg
adc
cmp
and
push
push
data16
nop
mov
enter
fidivl
and
cmpsb
and
mov
push
cwtl
xchg
jmp
cmpsl
mov
adc
dec
repz
xchg
sbb
and
mov
shr
in
and
mov
and
ret
xchg
fsubr
fiadds
cwtl
aam
leave
ret
pop
or
mov
rclb
cmp
cmpl
push
xchg
cwtl
popa
shl
push
add
xor
inc
sbb
cmp
cmp
jmp
call
inc
decb
jae
xlat
int3
out
andb
sbb
shlb
daa
in
rcl
fmull
and
test
xchg
aaa
lods
or
pop
fdivl
mov
or
pop
mov
sub
lds
enter
icebp
mov
push
cmp
inc
ljmp
xor
inc
sti
add
pushf
jle
stos
dec
mov
pushf
ds
mov
sbb
ficompl
push
imul
pop
adc
pop
adc
add
mov
and
sub
mov
xor
sbb
popa
cmp
incl
mov
or
sti
cli
mov
jns
adc
inc
and
sarb
test
cltd
inc
and
imull
jbe
ja
std
push
clc
sub
mov
lret
imul
je
jp
repnz
mov
aaa
xor
outsl
cwtl
arpl
cltd
scas
jge
test
or
jg
inc
sub
pop
pop
or
xor
sbb
push
or
mov
xlat
out
psubw
ds
push
push
inc
push
shrl
mov
pop
push
inc
loope
fidivl
insb
add
and
xor
into
aam
xchg
jnp
and
dec
call
ja
mov
loopne
rcrb
xor
mov
int3
imul
xor
in
out
mov
cs
jae
xchg
insb
in
stos
cmpsl
aas
pop
pop
fidivl
out
inc
jl
cwtl
xchg
cmp
fdivrp
pop
int3
cmp
xor
xlat
jmp
out
lcall
push
in
and
push
xchg
mov
test
xchg
in
idivb
cmp
dec
add
aas
fistl
inc
pop
out
and
mov
push
orb
cwtl
push
scas
mov
ljmp
push
or
shr
xor
sub
mov
repnz
mov
xor
daa
sahf
mov
cmp
add
and
lods
cmp
xor
xchg
sub
or
push
ds
pushl
imul
push
cmp
test
outsb
out
or
jo
push
aas
movsb
mov
push
mov
jns
add
addl
pop
xchg
jle
lods
xor
idiv
js
flds
idiv
dec
xlat
fs
movb
insb
push
fidivl
int
in
jb
aaa
push
and
xchg
test
daa
push
mov
dec
clc
mov
inc
mov
xchg
sub
cmp
adc
xor
fimuls
jge
dec
or
leave
adc
mov
sbb
xchg
add
mov
mov
mov
push
cmp
mov
out
or
fmuls
popa
or
push
mov
orl
push
inc
and
or
stos
jg
mov
subl
xchg
and
std
rorl
in
xlat
call
nop
sbb
stos
dec
xor
adc
loope
mov
dec
divl
xchg
adc
cld
xchg
repnz
mull
test
cmpsb
cmp
push
fistpll
movb
sbb
cmc
enter
mov
outsl
adc
xchg
leave
sbbb
dec
jecxz
push
repz
enter
or
cmp
sbb
or
cli
lea
cmpsl
cmpsl
pusha
inc
inc
popf
in
fxam
das
mov
mov
push
icebp
es
mov
jno
fimull
sarl
mov
iret
pop
inc
xor
push
sub
cwtl
insl
es
adc
faddl
push
lret
adc
jae
cs
ret
clc
sbb
mov
outsb
movsb
in
pop
lret
mov
dec
jnp
cmp
mov
pop
mov
inc
es
stos
or
pop
lret
push
jne
xchg
push
adc
outsl
vucomiss
xchg
add
stc
sbb
dec
sbb
mov
iret
mov
loopne
lock
and
sbb
and
or
insb
insb
loope
ja
rolb
sub
cmp
push
add
fimuls
call
stos
aam
inc
xchg
loop
lret
into
xchg
mov
cmp
xor
dec
or
popaw
jne
jl
mov
shll
and
lret
out
in
cmp
mov
icebp
aam
push
repz
or
sarl
stc
jecxz
ja
mov
out
push
add
pop
mov
mov
xchg
jae
mov
push
xor
mov
test
and
add
mov
mov
jp
test
dec
lds
bound
sbb
in
jno
jo
ficompl
bound
aad
pop
hlt
jp
les
fs
add
sbb
pusha
or
jae
imul
pop
push
mov
sub
add
push
or
pop
arpl
cmp
insl
pop
shrb
shlb
outsl
xor
mov
mov
jae
sub
sti
loop
mov
dec
shll
ret
mov
aaa
js
sbb
sub
push
ret
popa
jl
daa
loopne
mov
pop
ret
xor
add
add
ret
shll
das
push
outsb
dec
lds
mov
ret
mov
sub
lock
adc
sub
imul
push
jb
xchg
jle
mov
jae
mov
add
and
std
adc
xchg
xchg
fisttpll
mov
cmp
fprem
fcompl
lahf
inc
sbb
cmp
dec
icebp
in
adc
sbb
inc
jecxz
inc
dec
mov
bound
pop
shrl
lea
cmpsb
cmovge
add
sbb
jp
or
ja
xchg
fbstp
jl
test
push
mov
mul
adc
mov
stos
movsl
lods
cmovno
push
imul
sub
imul
daa
or
inc
lods
stos
mov
in
or
push
movsb
dec
ja
ljmp
inc
add
testb
push
cs
rcrb
inc
inc
stc
jae
mov
mov
bndldx
sbb
or
cmpsb
adc
or
fiaddl
lock
inc
stc
neg
das
pop
jg
popa
add
mov
xchg
cmp
mov
mov
xchg
mov
adc
add
jecxz
adc
sbbb
inc
xor
cmp
test
inc
xchg
movsb
pop
das
fisubs
or
bound
xchg
inc
inc
xchg
fistpl
loop
xor
pop
shlb
outsb
lock
mov
pop
ss
mov
push
ljmp
dec
ja
adc
add
push
in
push
jg
data16
aad
mov
repz
decl
scas
push
mov
cmpsl
pop
pushl
add
xor
rclb
scas
xor
sub
mov
mov
test
pushf
imul
lock
fdivs
inc
fimull
outsl
aaa
jmp
sub
adc
je
pop
ja
pop
call
push
mov
add
jne
jno
dec
movsl
dec
and
pop
je
dec
lahf
push
fs
pop
decb
jl
mov
jmp
dec
and
cmpsb
cld
pop
jo
in
pop
lock
cmp
je
inc
enter
popf
mov
xchg
pop
les
dec
xor
stc
jmp
test
adcb
mov
popa
push
sbb
mov
sub
hlt
cmpsb
cmp
sub
mov
test
mov
push
adc
aas
dec
mov
mov
out
daa
adc
fnstsw
aaa
add
dec
mov
call
cld
bound
es
sub
cmpsl
andb
pop
hlt
fsubrl
mov
mov
adc
jne
fwait
lock
mov
gs
cli
mov
enter
xchg
push
mov
repz
inc
cmc
fnstcw
sub
pop
xor
popf
xchg
rclb
pop
sahf
sub
aaa
pusha
dec
dec
lahf
testb
or
mov
mov
in
jl
in
inc
popl
stc
addr16
in
scas
ficoms
test
das
incl
mov
mov
sbbl
xchg
in
push
sti
in
repnz
dec
decl
mov
mov
pop
cmp
sarb
jae
or
adc
adc
js
cmp
jmp
enter
lcall
enter
fnstenv
stos
and
es
adc
pop
adc
add
mov
pop
cmp
sbb
int
jo
in
pushf
test
pusha
imul
int3
dec
dec
mov
fnstenv
fimull
stos
movl
mov
sbb
push
loopne
test
or
inc
aas
loope
xor
jbe
arpl
jmp
pop
inc
xor
sbb
lret
or
out
stos
pop
imul
push
and
add
mov
insl
in
mov
mov
leave
xor
movb
test
push
leave
mov
test
rcll
sub
jle
stc
scas
je
mov
dec
and
aam
or
add
inc
insl
call
mov
lds
add
mov
and
bound
lods
lahf
out
jge
inc
sub
jge
mov
inc
push
sub
cmpsb
sti
cwtl
cmc
lret
sbb
mov
repnz
mov
loope
lds
or
data16
and
movsl
jne
push
inc
fimuls
fimuls
pop
bound
setge
outsb
inc
lods
stos
inc
mov
mov
fs
xchg
or
cli
in
orb
xchg
popf
aam
outsb
add
cld
leave
ja
xor
lret
xor
sarb
push
int
push
mov
stos
xchg
mov
lret
fmuls
fcomi
mov
lds
stos
outsl
lods
add
cmp
jge
jae
adc
xor
cmp
mov
aas
and
je
jmp
movsl
movsb
in
push
repnz
decl
sbb
ftst
pop
mov
push
mov
pop
pop
pop
rorl
inc
xor
add
jle
pop
popa
jmp
jl
aas
cmpsl
aaa
push
test
fldenv
rcll
push
xchg
lcall
leave
in
lods
mov
repnz
iret
or
test
mov
int
inc
fincstp
aaa
mov
nop
pop
sbb
sbb
sbb
pop
lds
xchg
mov
cltd
sub
cld
insl
dec
test
add
shrb
jae
push
rclb
movsb
push
inc
mov
cmp
pop
pop
outsl
xor
mov
pop
ret
lret
stc
cmp
add
subl
dec
pop
xchg
jmp
or
or
jmp
andb
jo
in
cmp
mov
je
and
mov
cmp
jne
inc
shll
pop
mov
xor
call
lret
mov
ja
nop
aam
push
das
popf
notrack
and
xchg
test
push
adc
lret
scas
mov
sub
push
sahf
outsl
dec
xchg
sbb
push
inc
aaa
loopne
cmpsl
cwtl
test
adcb
cmp
sbbb
pop
loop
sahf
movsl
pop
in
inc
lods
dec
loopne
and
dec
jb
or
xchg
into
sub
push
xchg
pop
and
popf
pop
pop
sarb
ret
lahf
fwait
int
into
enter
mov
mov
sbb
mov
or
jmp
xor
jge
cld
sbb
ss
inc
cmp
or
imul
pop
xor
lock
mov
add
jae
jae
fstpt
call
jp
inc
pop
icebp
and
jmp
or
jle
or
pop
sbb
jns
leave
pop
aaa
loop
fnsave
dec
arpl
ret
dec
sub
xorl
loopne
add
out
cltd
lcall
cld
pusha
popf
mov
es
rcrl
xchg
jb
test
fildll
mov
mov
push
jns
and
loope
shll
mov
daa
sbb
dec
mov
inc
push
rcl
or
pusha
push
lcall
int3
fsubp
and
lret
outsl
fdivs
repnz
jo
xor
bound
cmp
adc
add
add
mov
je
test
in
mov
jo
xchg
jns
cld
ljmp
lahf
mov
mov
fbstp
out
jne
mov
aas
in
push
adcl
sti
jl
fldt
gs
mov
push
dec
sbb
mov
dec
cs
mov
popf
imulb
push
sbb
push
addr16
outsl
or
dec
or
pop
ret
xlat
fcomps
inc
ds
lcall
lcall
xchg
pop
xchg
lcall
mov
lds
mov
aas
int
xchg
sbb
inc
adc
mov
dec
jo
pop
mov
jno
int
scas
adc
pop
outsb
sbb
test
xor
cli
xor
mov
sbb
mov
int
arpl
cmp
lahf
dec
push
pop
xor
add
mov
xchg
ds
mov
push
testl
in
popf
in
sti
xchg
or
lods
fmull
clc
fcomip
aaa
jmp
repnz
pop
aad
outsl
movsb
ret
mov
fs
push
xchg
faddl
dec
add
sbb
jl
push
and
mov
cmp
pop
popa
mov
push
mov
pusha
sbb
in
add
sub
mov
test
sti
imull
lods
orl
mov
xchg
ret
xor
pop
cmc
lds
inc
lret
inc
push
les
aam
add
mov
sub
shr
adc
shr
arpl
cmp
lret
jbe
mov
inc
mov
adcb
sub
mov
aas
cmp
fisttpl
sbb
inc
jne
jmp
insb
dec
xor
pop
jl
ljmp
mov
or
dec
push
or
adc
inc
fadds
in
jns
xchg
lods
pushf
jecxz
in
mov
xlat
sbb
adc
pop
mov
adc
cwtl
mov
sbb
cmp
and
sar
imul
push
push
jne
cltd
psubq
push
mov
lods
mov
sbb
fsts
adc
mov
xor
add
or
pop
je
addr16
sbb
stos
xor
mov
filds
push
dec
add
das
xchg
add
xor
lret
ja
push
in
cmp
das
push
rcr
enter
nop
pop
fs
faddl
jb
push
mov
bound
mov
fiadds
fxch
mov
xchg
pop
and
mov
cmp
cmp
mov
mov
jg
lds
lea
loopne
fmuls
cs
adc
test
xchg
iret
fisubl
call
and
push
jg
das
rol
or
stos
xor
xor
cs
xor
std
mov
in
loop
pop
jns
sub
pop
mov
dec
inc
pushl
push
fs
testl
and
fisttps
imul
cmp
mov
push
mov
mov
fists
cmpsb
aaa
xchg
mov
popa
imul
cmpsb
pop
push
fstpl
jnp
or
or
pop
repz
fld1
or
lods
add
sbb
pop
out
ret
jne
es
enter
test
clc
xchg
les
xchg
jns,pn
int
arpl
jg
fndisi(8087
and
repz
pop
cli
push
xchg
jmp
movl
sbb
adc
aad
and
sbb
pop
andl
and
insl
aad
aam
mov
mov
jae
ss
xor
inc
ds
mov
out
jl
in
jmp
jg
or
insb
sarb
loopne
scas
ror
push
mov
mov
inc
push
ds
ficomps
xor
xchg
mov
adc
sub
sub
inc
test
sbb
testb
test
jae
jo
out
xchg
pop
rcrl
hlt
enter
mov
rcrb
push
dec
leave
xchg
clc
sbb
enter
mov
aas
mov
mov
bound
imul
insb
sbb
inc
mov
inc
mov
pop
and
jg
adc
pop
outsb
mov
mov
xlat
xchg
cltd
pop
xlat
cmpsb
lahf
or
or
cld
sub
test
sub
into
adcl
jns
fdivl
cmp
xchg
stc
push
pushf
xchg
jo
call
dec
movb
mov
sahf
jmp
xchg
movsb
mov
stos
pop
mov
repnz
add
mov
dec
enter
addr16
cmp
pop
jmp
call
enter
ds
dec
out
adc
pop
loope
inc
cmc
popa
loopne
negb
ds
out
cmp
jno
jle
into
mov
cmp
test
jnp
fidivs
cli
mov
stos
or
add
jmp
push
mov
mov
xchg
jb
and
imul
or
cmpsl
push
rorl
es
notl
inc
cmpsb
addr16
cltd
push
and
cwtl
jl
sub
pop
inc
sub
cmp
and
xchg
pop
dec
xchg
lods
dec
jp
mov
push
push
push
sbb
push
cmp
mov
aad
push
test
pop
imul
aas
mov
scas
jne
lds
mov
imul
mov
fidivs
mov
mov
popa
add
fidivl
mov
pop
pop
xchg
push
jge
loope
popf
bnd
xchg
jge
rorb
mov
bound
nop
and
incl
jp
out
in
dec
add
fxch
loop
cmp
xlat
or
inc
xor
and
jns
mov
xchg
daa
cmp
push
enter
lret
xchg
aad
jno
jmp
fs
dec
sub
filds
sbb
xchg
adc
lret
mov
cmpl
dec
sbb
iret
mov
imulb
aas
cmpsb
clc
mov
xor
mov
push
push
shrd
jns
sbb
push
jno
idivb
pop
cli
mov
mov
xlat
sbb
jp
repnz
repz
imul
pop
or
inc
shll
pop
je
lret
jmp
mov
fisttpll
subb
clc
cli
inc
mov
std
jo
sti
mov
fwait
dec
outsl
cmc
dec
jne
int3
fsubrs
out
rcl
fwait
ficompl
sub
scas
push
mull
or
sbb
arpl
popf
sbb
fimull
and
into
inc
mov
in
dec
loop
loop
xchg
aad
pushf
push
loopne
dec
insb
cwtl
clc
pop
pop
hlt
inc
add
dec
cwtl
dec
movsb
and
daa
jne
inc
int
hlt
outsl
pop
or
mov
lahf
and
or
fisttpll
mulb
popf
mov
add
stc
test
xorb
and
adc
lcall
mov
dec
sbb
xchg
mov
jb
push
jp
cmc
lea
push
jl
jns
lock
filds
sbbl
jmp
test
pusha
cmp
loopne
xor
aaa
inc
mov
xchg
sbb
test
jmp
fisttpl
cmpsb
mov
jne
push
jns
xlat
mov
jge
rcrb
mov
inc
push
and
xor
xor
pusha
dec
xchg
clc
adc
mov
and
fildll
xchg
ret
mov
jg
adc
imul
int3
push
jbe
push
push
aas
call
in
push
loopne,pn
push
data16
mov
insl
xchg
jg
ljmp
inc
mov
ret
sti
dec
gs
adc
mov
in
mov
or
repz
mov
push
push
ja
pop
and
push
cmp
jp
jno
addl
mov
loop
and
pusha
ja
fnstcw
pushf
fldt
mov
aad
addr16
adc
sarl
and
enter
fisttpl
loopne
rorb
xchg
out
popa
cmp
add
aad
bnd
add
dec
or
testb
sti
stos
jle
cwtl
adc
mov
movsl
daa
xor
or
dec
std
mov
mov
lea
cmp
sbb
in
inc
add
inc
ffreep
enter
sbb
stos
jmp
je
pop
dec
and
and
jae
xor
dec
iret
xchg
adc
ret
pop
add
icebp
dec
stos
imul
icebp
add
and
rcr
xorl
push
xchg
push
pop
inc
sbbl
inc
rcrl
cwtl
jbe
insl
jnp
inc
loop
dec
or
inc
loopne
in
xchg
std
pop
dec
aam
ljmp
es
dec
jle
in
mov
xchg
mov
iret
xchg
sub
fsubr
xor
mov
fsubrl
scas
xchg
mov
push
lds
loop
fs
mov
insl
pusha
jmp
dec
into
mov
mov
adc
jg
addr16
cld
sti
int
sahf
sbb
jne
popf
jne
nop
or
outsb
scas
add
ds
jg
push
into
enter
negb
lods
out
push
out
rcrl
inc
rcll
cltd
dec
xor
inc
xor
iret
mov
loop
fidivrs
add
cld
leave
andb
mov
aaa
sbb
push
test
test
push
lcall
sbb
xchg
ds
xor
and
inc
mov
aas
shrl
movsl
lods
jle
jns
inc
lods
sbb
scas
xchg
jg
mov
and
mov
insb
fistpl
sbb
jo
mov
pusha
push
xchg
mov
mov
or
in
arpl
adc
bound
mov
sahf
dec
sub
and
stos
adc
and
insl
cs
fsts
sbb
push
sti
or
mov
bound
push
xor
or
jb
jae
and
movsb
mov
fimuls
fsubrs
mov
cmp
popf
jnp
pop
jnp
push
cli
sbb
jecxz
jno
add
sub
ljmp
and
mov
dec
leave
or
pop
dec
xor
jno
sbb
inc
pop
cmpb
pop
push
mov
clc
mov
pop
jp
jle
push
xor
into
mov
jecxz
data16
shlb
mov
cmp
cmp
dec
loope
fsubs
jge
mov
aaa
pop
inc
cmp
cwtl
loope
mov
in
adc
mov
push
shl
xor
mov
ficoml
pusha
pusha
cmp
or
or
int
incl
sbb
jmp
mov
add
dec
outsl
insb
add
mov
mov
mov
int
and
cmpsb
mov
into
or
pop
mov
cmp
adc
dec
and
inc
stc
int
es
std
pop
add
mov
jp
test
xor
out
sub
jae
hlt
push
mov
push
lret
jne
pop
movsb
push
mov
stos
into
js
ja
sub
out
movsl
in
push
ja
in
es
jl
pop
sbb
add
scas
add
pop
popa
hlt
cmp
pop
mov
dec
mov
xchg
shrl
add
pop
jne
pop
scas
mov
lcall
xchg
stc
mov
xor
jl
clc
dec
mov
adc
gs
xchg
je,pn
movsl
shl
add
pop
inc
jge
imul
sbbl
fmuls
mov
lods
inc
jecxz
sub
fwait
sub
lret
sahf
popa
sub
daa
mov
dec
jge
js
arpl
ss
xchg
loope
mov
xor
subl
test
xor
xor
call
int
sbb
subl
inc
push
fwait
loope
fnsave
push
cwtl
jno
call
inc
movsl
insl
ss
push
pop
xchg
and
scas
sahf
pop
pop
cli
leave
sub
sbb
inc
insl
icebp
jl
test
es
sbb
call
enter
push
mov
mov
adc
lret
addr16
stos
or
dec
xor
mov
inc
adc
fists
stos
cld
mov
mov
iret
lcall
inc
lahf
mov
mov
xchg
cli
jo
test
in
add
add
shll
or
int
xchg
add
mov
push
outsb
je
call
cs
or
jmp
inc
sbb
dec
in
sbb
xchg
dec
leave
mov
cmp
stc
push
pop
lcall
adc
data16
jp
pop
addb
adc
cmp
adc
out
pop
mov
jmp
mov
jp
cmp
pushf
lahf
jno
adc
jp
or
push
fidivrs
repnz
dec
or
popf
lods
add
sbb
lods
movsb
mov
and
push
xor
divl
mov
adc
dec
bound
or
or
mov
add
stc
or
scas
xor
insb
outsb
jo
mov
lods
sub
in
out
aad
int
daa
das
lcall
inc
mov
fadds
pop
add
lret
lret
out
pop
xor
out
push
pop
rol
jne
movsl
lahf
xchg
cmc
pushf
rolb
adc
adc
cwtl
test
lock
mov
dec
sub
sbb
test
cmp
push
mov
int3
jns
lea
lods
dec
lods
mov
loope
jo
dec
fldcw
fs
sbb
lods
fidivrl
pop
mov
adc
jae
cmp
push
xor
xchg
adc
pushf
jle
inc
out
ja
out
loop
in
fs
mov
jne
out
hlt
push
popf
daa
push
push
fistps
iret
roll
sbb
movsb
loope
addr16
xchg
out
data16
das
add
mov
movsb
or
stos
jae
xor
cmp
fisubrs
jge
adc
or
sbb
push
sbb
es
ret
aad
xor
xchg
xchg
enter
and
dec
jo
dec
sub
ja
fcoml
jno
fisubrs
jns
inc
push
es
mov
mov
push
cmpl
ja
out
es
nop
pop
scas
repz
add
int3
mov
jp
inc
mov
mov
and
pop
cmp
out
insl
fwait
aaa
aaa
stc
scas
mov
jns
cmp
dec
movsl
kortestw
fidivl
decl
testb
flds
sub
xor
movsb
cmpsb
mov
pop
mov
push
sbb
imul
sbb
cmp
mov
jb
stos
push
mov
sbb
cmp
rclb
jge
test
stos
stos
dec
fadd
push
and
xor
lds
mov
idivb
mov
lods
mov
jmp
mov
cmpxchg
out
les
les
xchg
mov
lods
rclb
mov
rsqrtps
and
lds
inc
lret
jne
shll
mov
cmpl
sarl
ss
aam
jge
mov
cmc
or
test
shl
out
inc
popa
push
jmp
mov
xor
cltd
adc
xchg
xchg
xor
xor
out
push
dec
adc
xchg
mov
das
jmp
mov
add
push
sti
shlb
sub
xchg
stc
pop
ja
push
mov
push
cmp
xabort
mov
iret
pop
test
push
pop
push
push
call
mov
cmp
sbb
xchg
jge
divb
sti
pop
mov
nop
or
lods
fmulp
rcll
int3
inc
inc
int3
cmp
inc
iret
mov
test
pop
xchg
mov
pop
ja
test
lock
ror
xchg
loop
outsl
jg
sti
lds
add
les
dec
test
cmp
inc
xchg
hlt
sbb
addb
sbb
mov
sbb
add
loope
xor
faddl
aaa
cmp
cmc
insb
loop
mov
es
sahf
movsl
shlb
movsb
jne
mov
shll
fs
mov
shrl
gs
xor
lds
xchg
cmc
dec
repnz
das
xor
mov
movsb
out
add
addr16
scas
or
pop
dec
mov
dec
ja
jae
or
in
or
cld
inc
cltd
dec
in
lcall
lea
push
xchg
mov
jl
movsl
and
icebp
outsb
mov
insb
push
xchg
or
sbb
xor
movsb
cltd
xchg
movsb
or
outsl
imul
mov
mov
ja
ja
movhps
push
push
xor
and
push
outsb
jno
cmp
ljmp
dec
push
and
ds
sbb
fsub
mov
push
subb
popf
cmovae
lock
sbb
aaa
push
das
mov
cmp
jecxz
mov
cmp
aad
xlat
popa
xor
push
aas
push
mov
jbe
mov
or
xor
fwait
je
pusha
lret
frstor
pop
jecxz
pop
insl
mov
lcall
jnp
or
loop
in
jns
or
rolb
mov
leave
popf
sub
or
dec
fwait
push
aas
cmp
cmp
in
mov
xchg
push
loope
dec
sbb
lods
insb
lods
xor
xchg
mov
inc
push
pop
add
mov
ret
sub
es
stos
pop
icebp
stos
into
push
into
jb
pop
add
mov
jne
mov
lds
outsl
cmp
sbb
lods
jecxz
xchg
and
cltd
add
pushf
dec
sbb
out
addl
mov
inc
ja
mov
mov
jl
cld
pushf
pop
iret
ret
adc
mov
mov
into
pusha
mov
pusha
repz
inc
data16
je
jns
sbb
jmp
ja
imul
sub
inc
inc
dec
clc
clc
jo
stos
es
lret
fistpll
inc
or
shrl
pushf
andb
jbe
dec
es
mov
mov
cmp
and
add
rolb
xchg
sti
jne
mov
stos
ficomps
test
mov
cltd
sub
xchg
pushf
mov
pop
inc
out
cld
mov
loop
test
cmp
sar
enter
xor
xlat
adcb
push
cmpb
lahf
movsb
testl
pusha
push
cmp
cld
pop
out
aad
fildll
out
xor
sbb
mov
cwtl
nop
fnstsw
xor
mov
jo
out
and
push
adc
loope
mov
jo
inc
icebp
jb
pushf
push
cmovo
aaa
dec
adc
jbe
mov
jmp
or
push
sti
jle
pop
call
jb
bound
sbb
adc
sub
stc
icebp
loope
lret
fbstp
add
pop
cli
test
popf
mov
mov
sub
in
xchg
inc
imul
test
and
lods
hlt
push
cmpsb
dec
jnp
std
mov
jmp
jg
mov
adc
movsl
jge
pusha
mov
ss
and
inc
and
das
fistpl
dec
cltd
sarl
adc
out
icebp
adc
arpl
mov
testb
add
clc
push
stc
cmp
dec
jno
scas
push
rolb
dec
test
mov
outsb
xchg
sahf
cmp
into
push
popf
push
cmp
or
cmpsb
fistpl
xor
lahf
std
loope
in
sub
repz
xchg
enter
sbb
in
and
push
cmp
add
lock
pop
aaa
xlat
sbb
xchg
or
cmp
push
inc
inc
or
pop
sub
in
stc
dec
jae
push
mov
add
jge
adc
mov
sbb
jl
ss
stos
call
xor
mov
fidivrs
leave
mov
fnstenv
xor
adc
cmp
imul
jne
mov
mov
lods
mov
xor
mov
loope
mov
clc
xchg
outsl
jmp
in
sub
adc
jg
aam
scas
sarb
call
add
aam
test
fidivl
sbb
es
cmpsb
lods
add
lcall
and
mov
and
pop
nop
cld
hlt
cmp
jb
fistpl
inc
leave
into
int3
or
xor
faddp
add
and
scas
push
cli
fcmovnu
shll
push
shlb
mov
jb
sbb
in
cmp
mov
xor
jg
jb
scas
test
jecxz
mov
jecxz
cli
sbb
daa
rorl
dec
and
sub
jno
ret
pop
arpl
mov
jae
ss
push
fmulp
fidivrs
adc
into
add
fs
fimull
hlt
cmpsb
loop
roll
xchg
jo
pop
mov
jae
inc
fcoml
push
and
pop
or
stc
mov
xlat
jge
add
pop
es
ds
in
pop
adc
lods
cld
mov
aad
jo
shl
mov
xchg
sbb
fwait
or
sub
rcll
cltd
in
jge
dec
push
loop
cmovae
stos
jge
jp
call
das
jo
jg
inc
pop
fmul
loop
divl
cmp
scas
outsb
negb
enter
mov
pop
lock
popf
adc
outsl
test
push
adc
adc
push
pop
pop
push
and
int3
ret
popf
xchg
roll
jmp
inc
pop
outsb
xor
cmpsb
and
mov
ss
mov
aad
outsb
fidivl
mov
xchg
cmp
push
mov
adc
ds
cmp
sub
cmp
sbb
jno
or
sub
rclb
mov
jp
mov
daa
aad
lahf
mov
rol
mov
mov
cmp
and
push
mov
repnz
xor
les
inc
inc
mov
or
dec
sub
inc
sbb
aam
fwait
mov
in
add
sub
popf
pusha
push
push
push
and
dec
lcall
dec
lods
push
and
or
or
cs
imul
addr16
addr16
mov
ret
push
ror
mov
mov
lds
push
adc
scas
jb
ds
out
sub
int3
aam
jo
popa
cmpsb
mov
dec
jae
xchg
shlb
lret
ret
mov
or
push
repz
sub
movsl
jo
and
jns
xor
inc
mov
pop
test
in
pop
xor
movsb
or
adc
das
sarb
aaa
stos
adc
rcrb
idivl
jb
pushf
lcall
cmp
push
inc
sbb
xor
mov
js
mov
movsl
nop
pop
cmp
adc
enter
repnz
mov
push
pop
adc
xchg
inc
cmp
jns
lret
push
mov
loope
adc
testl
jmp
std
pop
and
jl
push
and
xchg
or
inc
sbb
xor
xlat
hlt
push
rcrl
and
jmp
mov
mov
push
xor
push
test
icebp
add
cmpl
pusha
cmp
xchg
sti
jno
je
pop
sub
mov
add
repnz
push
insb
jl
mov
xchg
mov
test
fsubp
repnz
add
test
sbbl
mov
sub
and
xor
mov
pop
and
or
lock
aas
push
mov
push
lods
jne
out
mov
sti
cmp
insb
adc
ret
rol
test
mov
rorb
fsubp
fimuls
int3
fcoml
enter
push
enter
jnp
ljmp
leave
sahf
dec
add
repnz
sub
mov
sub
int3
mov
aad
sub
pop
mov
push
and
call
mov
mov
lcall
js
jge
rcr
push
mov
dec
cmp
xchg
or
add
xor
stc
ljmp
adcb
lcall
or
inc
out
int
dec
jb
jno
and
xor
push
or
lods
test
lret
mov
fcmovnb
push
imul
rorl
inc
andl
mov
jns
mov
aas
je
jbe,pt
jl
in
fst
test
xchg
or
lea
ljmp
cmp
push
push
scas
fmulp
flds
inc
add
jg
lret
popa
lret
test
cmp
cmp
xor
xor
push
fs
outsl
add
out
push
pop
pop
loopne
fninit
cmp
pop
cmp
les
sub
loop
cs
scas
push
push
out
push
mov
jecxz
aam
xchg
mov
cltd
mov
jle
clc
xor
scas
loopne
insl
mov
test
xchg
mov
pop
mov
sarb
pop
or
cmp
jbe
ret
sahf
adc
sbb
ljmp
aaa
push
xor
and
jae
mov
add
push
jmp
inc
and
sbb
push
dec
dec
mov
repnz
jp
les
lods
rcr
cltd
push
jp
loopne
aaa
nop
push
neg
add
sahf
pop
lock
pop
sub
icebp
pushf
dec
repnz
call
inc
mov
call
jnp
call
jl
xchg
push
mov
or
in
negb
test
mov
sub
mov
movl
scas
xchg
sbb
lea
js
xor
lcall
dec
lahf
or
cmp
inc
xchg
pop
insl
cmp
cmp
negl
mov
cmpb
loop
xor
sub
jg
sbb
and
out
sub
pop
dec
inc
ror
inc
out
xchg
cmp
and
pop
fsts
dec
jb
push
cld
pop
sbb
xchg
gs
mov
jmp
push
add
pop
test
mov
mov
mov
inc
sub
xorl
rclb
and
clc
xchg
jmp
inc
arpl
and
push
cmp
in
roll
loop
adc
lods
pushf
lds
xor
jmp
rcrl
test
and
mov
lds
dec
bswap
and
add
movb
popf
mov
push
aad
add
pop
cmp
test
arpl
js
std
xchg
dec
into
nop
push
mov
jae
lods
imul
ficoml
pop
mov
movb
flds
adc
imulb
jl
iret
lret
cs
mov
mov
call
sbb
mov
jge
adc
shl
sarb
dec
pushf
fsubl
call
dec
fnstcw
test
pop
inc
xchg
hlt
out
test
icebp
test
daa
inc
pusha
fldcw
xchg
mov
inc
inc
lods
inc
enter
adc
movsb
mov
arpl
repnz
mov
pop
push
and
xor
scas
les
xor
fs
adc
gs
or
icebp
inc
into
add
sbb
sub
jb
mov
in
enter
mov
scas
bound
jne
add
ds
pop
in
in
pop
lret
adc
jnp
movsl
pushf
mov
xchg
add
fwait
mov
repnz
test
xchg
testb
sbb
inc
xchg
mov
out
andl
call
dec
dec
lds
jnp
adc
outsb
sub
negl
cmpsl
add
adc
sub
pop
icebp
pop
mov
outsb
sub
shll
pop
repnz
xchg
jle
stc
mov
das
cmp
repnz
jecxz
sub
sbb
mov
inc
aas
xor
enter
jbe
push
aas
ret
leave
ja
scas
adc
inc
popa
mov
sbb
loopne
pushf
xor
sbb
iret
inc
sub
mov
xchg
jnp
push
or
je
cmp
and
mov
dec
ret
pop
or
nop
into
inc
mov
mov
jge
mov
loopne
data16
sbb
sub
arpl
mov
clc
scas
xchg
sub
mov
lret
sahf
inc
std
sub
fidivrs
xor
sbb
xchg
pop
push
gs
movsb
sbb
jns
test
call
push
inc
push
ret
fcompl
xor
mov
dec
lds
jge
xchg
add
daa
push
in
out
sub
jne
push
sbbb
shl
js
jnp
gs
dec
sub
mov
scas
lret
out
inc
adc
jl
cmp
scas
ret
into
aaa
dec
jecxz
jae
test
push
mov
pushf
imul
push
lret
rorb
lret
rolb
sbb
xor
div
add
mov
and
jle
mov
jbe
mov
dec
bound
push
xchg
into
mov
rcl
xor
outsb
or
add
or
sub
xchg
in
mov
stos
in
and
mov
rcl
ss
fistpll
bnd
scas
ret
xor
sbb
dec
fcoms
add
andb
xchg
fcmovb
inc
js
leave
xchg
cs
push
nop
add
iret
notl
sub
dec
rcrb
fwait
cltd
jmp
imul
pop
sbb
xchg
or
sub
sub
push
pop
mov
shrl
nop
dec
insb
lahf
add
lods
jo
add
int
xchg
vmwrite
std
push
pop
xchg
arpl
dec
insl
xor
std
and
testl
push
mov
dec
in
push
push
mov
gs
mov
cmp
outsl
dec
cltd
xchg
cmp
jae
and
in
ret
fdiv
pop
jo
daa
jle
inc
xchg
dec
inc
cmp
leave
and
or
jo
iret
push
andb
xor
cmp
insb
jo
jo
sbb
cmpsb
jg
test
sahf
mov
jge
js
cmp
inc
aaa
xchg
popf
xlat
jle
sbb
and
mov
fcoml
lods
mov
leave
dec
ljmp
xor
pop
sbb
push
jnp
and
scas
std
or
jge
sti
mov
inc
aaa
lods
xchg
ss
push
fistps
jmp
cmp
out
loopne
push
je
add
xor
cmp
or
fistps
jg
ror
frstor
jbe
mulb
sub
adc
adc
mov
popa
xor
loopne
or
sarb
fcoml
out
mov
lcall
pop
xchg
leave
xchg
xor
outsl
repnz
nop
dec
fsubs
lods
jl
cmp
sub
adc
cmp
rolb
and
inc
std
jle
and
cmc
push
aam
inc
mov
pop
cmp
out
fwait
mov
xchg
jb
adc
add
or
inc
sub
push
cmp
push
ja
adc
or
ret
lret
fsubrs
lret
push
sbb
lret
cs
add
cwtl
xorl
mov
pop
fiaddl
hlt
pop
mov
lods
pop
aas
loopne
push
imul
mov
cmp
das
in
arpl
shlb
pop
test
aad
sbb
xchg
shlb
repnz
aad
adc
int
mov
xor
data16
aam
xorl
xorl
data16
cmp
inc
cmp
iret
mov
lret
mov
pop
mov
arpl
cmpb
leave
js
dec
ficompl
and
push
xchg
testl
pop
sbb
sarb
lods
inc
sbb
xlat
imul
mov
mov
pop
adc
dec
jmp
mov
leave
cmp
std
xchg
popf
loope
jb
dec
dec
in
repnz
and
xchg
aas
fidivs
pusha
andl
push
add
inc
out
fistl
sbb
pop
jne
scas
fstps
cmpsl
push
jbe
push
inc
and
repz
push
inc
je,pt
loopne
cmp
inc
push
insb
pushf
jo
sbb
sti
shrl
fcomp
aam
xchg
push
sahf
and
je
mov
lret
pop
fwait
or
dec
push
adcb
mov
add
xchg
push
or
sahf
ds
pop
loope
and
dec
rorl
dec
pop
shlb
push
pusha
es
fnstsw
pop
testb
mov
dec
jge
mov
pushf
dec
sbb
sbb
scas
fucomi
mov
int3
add
xchg
gs
jle
and
adc
dec
jns
mov
mov
rolb
push
pop
dec
mov
push
or
jb
adc
mov
out
push
call
jo
repnz
imul
orl
jae
fs
mov
and
out
scas
inc
mov
insl
pop
lret
xchg
jmp
je
xchg
in
add
pand
cmp
pusha
pshufd
inc
cmp
mov
pop
xchg
clc
mov
pop
movsl
xor
pop
in
push
cmp
pop
fisubrs
cwtl
inc
incl
roll
push
xchg
push
aam
cmc
nop
fiadds
lock
test
mov
test
push
jle
out
shl
pushf
je
dec
xlat
aas
mov
xchg
xor
pop
push
fcomps
jns
in
sub
repnz
mov
sub
lahf
cmc
or
cli
rcll
bound
inc
movl
xchg
push
adc
jp
xchg
xchg
call
loopne
push
cwtl
icebp
xlat
inc
push
push
aad
scas
pop
jae
mov
jp
test
movsl
mov
lret
subb
imul
sarl
jle
or
aas
mov
sbb
mov
sti
test
mov
loop
in
repnz
jge
pop
xor
xlat
adc
cli
push
loope
test
xor
pop
cwtl
dec
nop
jae
or
fimuls
mov
add
jmp
stos
dec
daa
mov
xchg
or
xchg
icebp
inc
loopne
jae
adc
pop
call
push
sbbl
outsl
call
mov
fistl
lods
daa
test
xchg
test
add
ljmp
cmp
out
add
int3
sub
jno
push
cltd
arpl
and
push
inc
mov
jle
nop
push
mov
adc
xor
sbb
fbld
sti
add
xor
sti
call
cmp
pop
mov
mov
test
mov
clc
je
and
popf
add
jbe
ret
cmp
mov
mov
pop
loop
aaa
fisubs
js
cwtl
xchg
aad
cli
push
pop
pop
ret
add
rcrb
lahf
mov
test
lcall
fcmovnbe
push
add
pusha
push
aam
mov
xchg
mov
aaa
mov
cld
cmp
sbb
call
ret
scas
adc
mov
mov
fcomps
mov
push
sbb
mov
scas
pop
mov
mov
add
xchg
mov
test
lods
rolb
or
aaa
stos
jne
popa
adc
iret
pop
sahf
or
adc
sbb
outsb
xchg
data16
and
dec
dec
sbb
lods
sahf
mov
xor
xor
sub
sub
outsl
jp
jbe
cmp
pop
loop
dec
mov
jno
dec
sahf
mov
inc
add
mov
pop
scas
repz
jae
ljmp
xor
bound
notl
mov
outsl
xor
xor
cmpb
out
xor
or
add
xor
sub
cmp
adc
cli
jns
into
xchg
and
scas
jo
fnsave
xor
pop
pop
pop
xlat
ds
cld
shrb
outsb
ja
rorl
or
mov
ret
ljmp
xchg
mov
mov
xchg
sbb
xor
mov
es
xchg
loop
pop
inc
push
pop
mov
sub
push
mov
inc
lret
add
xchg
dec
call
rclb
jno
push
repnz
sbb
push
outsb
lret
push
cs
mov
pop
sub
cld
addr16
out
add
sub
icebp
inc
pushf
call
aad
out
out
imul
mov
adc
pop
test
and
mov
popf
push
xchg
call
in
popf
jge
div
int3
adc
push
mov
mov
in
into
fsubp
aaa
mov
jno
scas
testb
pop
add
sub
cmp
cmc
cs
xor
mov
xchg
sahf
cld
decl
sahf
inc
data16
loopne
daa
cmpsl
ret
mov
lret
lods
fsubrl
les
inc
mov
mov
cld
ja
mov
js
ret
xlat
gs
mov
rcr
dec
push
mov
out
cwtl
add
jns
inc
push
mov
pop
jmp
or
sar
xchg
or
mov
cmpsl
adc
mov
mov
and
mov
push
sbb
mov
push
jg,pt
into
mov
adc
sbb
sub
je
sbb
dec
cs
xchg
shrl
into
mov
jmp
dec
das
sti
flds
mov
mov
adc
dec
cmp
adc
getsec
in
das
push
xor
pusha
pop
lret
add
shlb
xchg
inc
stc
or
nop
pop
jl
fdivr
ret
cmp
pop
dec
scas
or
pop
push
jg
into
imul
xlat
dec
dec
jl
xchg
push
sub
mov
and
add
cmp
cli
fnsave
push
loop
pop
mov
out
call
mov
mov
cmp
aam
xor
cmpsb
loopne
mov
sahf
xchg
mov
mov
enter
push
test
jle
cmp
xor
fcoms
pop
inc
faddl
into
stos
jno
or
imul
leave
int3
adc
mov
leave
shll
aaa
sbb
sbb
and
int
adc
clc
popa
jle
mov
and
mov
mov
negl
push
mov
dec
mov
fsubr
push
rcll
and
test
cmp
inc
sbb
add
pushf
sarb
je
push
mov
jecxz
cmp
inc
je
add
mov
and
pop
pusha
inc
pusha
and
mov
mov
cmpsl
or
in
mov
int
mov
movsl
push
js
imul
jne
lret
jne
fimull
sahf
int3
call
imul
inc
out
ret
outsb
mov
mov
add
push
lret
ret
mov
mov
in
xchg
jecxz
mov
mov
and
push
mov
dec
pop
push
pop
jmp
inc
or
mov
push
mov
in
cmp
lcall
pop
int
test
adc
repz
aad
add
push
jmp
mov
rolb
pop
aad
movsb
cmp
sti
test
mov
xor
ret
jecxz
lock
cmpsl
xor
notb
mov
dec
jmp
xor
repnz
adc
sbb
out
and
in
nop
mov
cwtl
sbb
mov
insb
dec
fmuls
aad
imul
loopne
sahf
add
jg
dec
mov
push
subb
js
sbbl
mov
cmc
xchg
xor
lret
mov
pop
cmp
push
mov
sub
pop
xor
pop
and
jae
dec
iret
push
mov
mov
adc
jne
sbb
in
pop
mov
sbb
xchg
jp
jle
mov
movsl
mov
inc
fisttpll
cmp
jge
sub
mov
out
inc
pop
imul
ds
fbstp
lods
sub
in
ficompl
mov
loopne
or
sbb
mov
adc
lret
lods
jno
daa
das
inc
fists
or
cli
inc
add
fildl
insl
imul
aaa
mov
dec
imul
xlat
out
jl
sti
scas
pop
outsl
sahf
shrb
ss
into
gs
dec
arpl
imul
out
cld
pop
popf
inc
pop
in
dec
push
cmp
rcr
repnz
orb
out
sub
sub
jbe
ja
inc
inc
inc
test
shrb
xor
rep
mov
testl
xchg
ds
mov
inc
out
xor
mov
xor
out
pop
xlat
xchg
aam
pushf
cwtl
sub
ret
add
jns
ret
sub
int
sbbl
mov
ss
leave
mov
cmp
enter
inc
mov
push
les
ljmp
cli
or
cs
or
cld
je
sbb
subl
sbb
addb
stos
std
xor
lret
rclb
dec
int3
cmp
insb
jnp
pop
cltd
adc
aad
fsubs
fnstenv
add
adc
sbb
imul
xor
jl
mov
adc
test
fdiv
shll
aaa
jl
jecxz
mov
test
mov
ja
jmp
lods
pop
clc
aas
clc
push
and
or
mov
sbb
lret
fs
adc
cmp
nop
jb
insl
lds
pop
nop
insl
es
jbe
adc
stos
xchg
in
popf
xor
shll
cld
sub
push
pop
add
dec
jne
xchg
add
and
mov
jb
mov
shlb
fcmove
push
popa
dec
aas
inc
jne
mov
nop
lock
sbbl
dec
pusha
mov
js
out
out
mov
inc
mov
pusha
fwait
dec
pop
dec
cwtl
xchg
mov
ret
and
adc
xor
es
pushf
lret
cmpb
sti
daa
jecxz
cmp
pop
inc
lods
pop
shr
mov
xor
xor
mov
lods
cld
and
pop
iret
mov
inc
shrl
movsl
pop
and
inc
sbb
xor
jbe
sbb
mov
sahf
fsub
xchg
pusha
daa
xor
and
icebp
das
test
push
and
cmp
inc
gs
test
and
jbe
jno
and
sbb
stos
mov
fldt
addl
mov
dec
xchg
out
push
int3
lret
sub
hlt
adc
sbb
popl
sub
inc
xchg
cmp
sub
lret
or
repnz
cmp
ret
fs
push
test
push
jg
dec
jns
adc
mov
ds
pop
ds
or
mov
mov
lcall
cld
jl
and
push
shlb
push
in
gs
clc
push
sub
faddl
mov
dec
sub
lds
inc
fldenv
lahf
jns
inc
int
ljmp
in
rclb
push
jnp
or
and
je
popl
daa
mov
andl
mov
lock
fwait
loope
jmp
leave
xchg
jge
outsb
call
dec
jl
lods
or
enter
mov
out
data16
in
mov
lret
inc
test
cmc
loopne
test
cwtl
xchg
lods
sbb
ret
inc
inc
inc
sbb
js
test
imul
pop
sbbb
adc
dec
dec
jg
ficompl
inc
sub
iret
and
cmc
xor
mov
stos
jg
mov
mov
xchg
or
inc
sub
xchg
lods
bound
daa
pop
push
out
jp
adc
aam
int3
cmp
lcall
jl
in
inc
jle
inc
loop
jno
pop
orl
imull
xchg
ret
mov
inc
xchg
dec
ss
aas
lret
outsb
je
repz
cmp
je
pop
pop
test
add
pop
fisttpll
dec
pop
xchg
pop
jbe
lds
cmp
cmp
add
incb
scas
stos
push
addr16
pop
cmp
or
xor
mov
fcompl
push
sub
push
rep
sahf
push
jbe
add
jb
subb
shll
lea
xchg
aaa
mov
movb
repz
mov
in
leave
bound
push
adc
sub
jns
out
outsl
sub
in
in
out
scas
cmp
orb
shll
sar
or
cmpsl
pop
call
pop
mov
lods
fistps
pop
movsl
inc
fcoml
push
sbb
popf
lcall
sbb
jmp
inc
movsl
repz
scas
lahf
pop
fwait
mov
mov
push
jns
fstp
push
fsubs
aam
xor
mull
add
hlt
adc
pop
pop
jmp
ret
jg
outsl
shll
push
mov
mov
jmp
out
add
std
mov
outsl
xlat
mov
push
addr16
xlat
in
mov
jbe
movsl
mov
inc
cs
stc
lret
out
es
dec
inc
lock
arpl
lret
test
sub
sbb
das
push
icebp
mov
xchg
jno
push
cmc
add
lret
aaa
mov
add
adc
inc
xchg
mov
and
xor
push
out
in
repnz
into
sub
mov
pop
ljmp
dec
fnstenv
pop
mov
xor
lcall
arpl
aad
xchg
bound
adcl
or
mov
stos
cmpsb
inc
scas
fisubrs
mov
scas
pop
shrb
rcl
xchg
push
stc
push
and
and
sub
or
hlt
ret
loopne
and
lods
mov
mov
sbb
ret
mov
incb
aad
data16
outsb
pushf
sbb
inc
leave
adc
and
movl
lcall
dec
dec
sti
je
movsb
push
test
fldcw
ljmp
call
and
gs
mov
sbb
pop
das
fucom
adc
scas
scas
cmp
xchg
mull
inc
dec
in
pop
and
icebp
movsl
loopne
jne
mov
jno
into
mov
je
xchg
sub
add
inc
add
in
sub
push
popf
pop
es
and
mov
dec
bound
fs
js
adc
pop
jae
sar
lea
daa
or
cmp
and
fbld
adc
jp
dec
daa
inc
add
imul
sbb
mov
jnp
cltd
inc
dec
mov
pop
mov
fcoms
inc
test
dec
or
pop
out
inc
stos
mov
sub
fwait
mov
out
xor
inc
xor
test
mov
dec
shrb
in
add
stc
shll
jae
stos
in
loope
xchg
adc
xlat
into
adc
daa
call
xchg
or
adc
lahf
xor
scas
pop
ja
cmp
ljmp
push
xchg
imull
xlat
jp
rol
jmp
lea
push
sbb
gs
shll
popf
out
cmpsb
stos
ret
stc
dec
jns
test
sarl
daa
dec
mov
xor
dec
std
insl
dec
out
adc
mov
leave
fiadds
push
das
repz
cmp
loop
pop
mov
sbb
inc
les
das
repz
daa
sahf
adc
jnp
popf
dec
and
mov
xchg
out
jnp
mov
test
cmc
or
sub
repnz
sti
vrcpss
pushf
je
and
push
imul
fs
lea
ret
fcos
out
loopne
imul
mov
leave
xchg
lcall
les
mov
repnz
test
sub
or
adc
xor
inc
flds
cmpsb
jne
sub
pop
loope
mov
push
leave
cltd
imul
mov
jecxz
sbb
sbb
and
packsswb
daa
jp
xor
push
and
jne
jecxz
xor
and
jno
pop
adc
and
adc
cmp
push
add
dec
sub
outsb
inc
jl
lahf
inc
loopne
addr16
lods
mov
mov
add
call
xor
addl
pushf
jae
and
popf
jg
iret
pop
push
xor
jb
jb
outsb
and
into
aad
testl
mov
adc
sbb
filds
mov
leave
and
cmp
test
mov
cmpsl
daa
jo
shlb
pop
enter
or
jae
or
jmp
ljmp
mov
push
adcl
notb
cmp
pop
push
mov
sbb
mov
repnz
das
xchg
fistpl
pop
lahf
dec
mov
ret
call
mov
or
cld
std
popf
das
cmp
pop
xchg
push
les
cmp
pushf
mov
mov
int3
dec
out
lods
inc
add
std
sbb
scas
mov
pusha
nop
ljmp
movsb
fcomps
mov
cmpb
fadds
int
out
and
rcll
jmp
and
daa
mov
inc
or
bound
push
sbb
cmpsl
cld
fcompl
or
sbb
or
inc
movsl
adc
xchg
or
cmp
dec
xorb
outsb
xor
mov
pop
pusha
adc
lret
stos
pop
frstor
aaa
repnz
xchg
inc
inc
mov
incb
fildl
add
ret
out
xchg
xchg
mov
out
xor
les
insb
or
jmp
dec
jle
ljmp
inc
pop
mov
inc
in
les
xchg
std
je
leave
stc
push
imul
dec
dec
repnz
inc
lods
dec
push
clc
add
xor
jne
ror
xor
add
add
call
jle
cmpsl
es
aam
and
sbb
or
cwtl
sbb
jne
jo
push
sbb
sbb
lods
or
cmpsl
adc
ficompl
in
push
inc
sub
dec
mov
jp
popf
fdivr
or
cmp
pop
imul
fsubrl
movsb
popa
jns
mov
add
xchg
xor
add
xchg
popf
inc
mov
in
cmp
sub
iret
lret
stos
out
inc
inc
push
mov
xchg
inc
mov
adcb
pop
out
push
lock
mov
mov
inc
jmp
loopne
out
test
stos
mov
push
test
jb
popa
or
and
in
and
mov
cmp
js
ljmp
sub
mov
jae
loopne
pop
in
lods
dec
dec
adc
fwait
outsb
les
and
xchg
icebp
mov
cmp
pushf
lret
and
xor
pop
jnp
imul
inc
and
int
lret
insl
jge
xlat
lahf
call
pop
xchg
in
adc
xchg
sub
xchg
pushf
mov
cld
test
movsb
out
shr
lahf
aaa
fsubs
ror
cmp
mov
add
xor
stos
xor
pop
frstor
sti
mov
popf
and
sbb
fiadds
shll
ret
mov
add
pop
sarb
mov
test
mov
mov
leave
shlb
scas
enter
push
xor
in
clc
addr16
pop
cmpsb
pop
mov
add
dec
xchg
hlt
cmpl
mov
xor
push
xlat
xchg
enter
js
jg
lret
movsl
pop
adc
orl
rolb
mov
mov
or
inc
add
cmp
inc
hlt
inc
ficomps
mov
popl
inc
jno
ljmp
and
sub
lods
movsb
js
fimull
sti
pop
jae
sti
cmp
in
imul
inc
idivl
pop
xchg
mov
mov
sahf
dec
inc
js
adc
xor
sub
in
in
mov
add
xchg
cmp
ss
test
adcl
xchg
imul
sub
frstor
mov
lds
push
js
rolb
aam
xor
mov
inc
pop
pop
mov
adc
and
jne
sbb
cmp
xor
adc
aam
jnp
ret
test
inc
xor
fistl
loopne
cmpsb
sbb
aas
or
and
into
dec
sub
in
fwait
insl
lahf
lds
es
shlb
push
mov
and
push
dec
aas
push
push
dec
int3
mov
subl
push
pop
jbe
pop
lea
push
add
dec
and
mov
rolb
int3
test
xor
fwait
sbb
ret
dec
stc
add
pop
push
jle
jle
jno
cld
out
in
lahf
add
jg,pn
mov
mov
scas
mov
xchg
aaa
sub
ds
bnd
ret
sub
dec
mov
arpl
pop
dec
sub
push
stos
loope
push
mov
cli
cmp
or
jle
aad
jmp
loopne
mov
or
cmp
cmp
add
cltd
mov
jg
ja
ret
xchg
pushf
inc
mov
adc
repz
push
mov
arpl
lods
scas
std
sub
sbb
jle
jge
xor
popa
data16
ret
repz
insb
cmp
std
adc
xchg
pop
ret
cmp
xor
lds
pop
push
in
imul
mov
roll
gs
mov
dec
daa
xchg
xchg
fnstenv
fcmovu
pop
add
adcl
add
mov
subl
mov
arpl
push
xchg
jl
push
mov
mov
push
mov
lock
sahf
lds
and
xchg
dec
sub
insb
mov
dec
cmp
push
lret
adcl
ret
mov
mov
add
sbb
jnp
sbb
mov
out
das
xchg
out
or
mov
sub
xor
fsubrs
and
mov
ret
insb
lcall
push
shl
add
lea
inc
aaa
sbb
push
out
jb
cmp
or
mov
xor
dec
xor
add
jl
jbe
and
mov
rcrb
jae
jbe
or
pop
gs
mov
lea
lock
inc
js
bound
mov
mov
mov
and
mov
sub
push
pop
and
jae
jecxz
pop
inc
adc
adc
mov
xor
and
ss
jne
popa
jb
lahf
cs
add
clc
push
dec
adc
mov
mov
adc
pop
push
xchg
and
ss
cmc
adc
inc
ljmp
ret
mov
lock
fists
or
incb
and
jne
and
flds
les
mov
repnz
enter
mov
test
inc
scas
push
inc
ret
dec
cmp
jmp
xor
test
es
mov
push
imul
push
mov
mov
add
or
into
inc
lock
dec
mov
push
mov
adc
add
xchg
lcall
cld
dec
shlb
cmovp
inc
sub
xchg
stos
sub
aaa
pop
sti
loop
jmp
jmp
je
sbbl
mov
inc
or
pop
xor
out
sahf
push
add
dec
xchg
popa
rol
dec
push
fisubrs
and
mov
in
mov
call
push
jp
frstor
push
bound
pop
push
movsb
sub
fisttps
stos
inc
in
push
inc
cmpsb
mov
and
movl
movsl
inc
jmp
rcrl
fisttps
fimull
mov
pop
mov
test
pop
lret
fsubrs
inc
lods
mov
scas
scas
xchg
in
sbb
repnz
and
lahf
pusha
call
mov
shlb
or
insl
and
jns
lea
lods
into
fldt
out
xchg
out
pop
or
inc
pop
jno
outsl
inc
repnz
mov
cmp
leave
push
push
out
shr
xor
adc
loop
xchg
dec
hlt
cli
push
fnsave
sahf
sub
jp,pt
adc
aad
xchg
ret
xor
sub
inc
fmul
out
dec
das
inc
sbb
rcrb
mov
stos
dec
iret
mov
aaa
sub
push
cmc
fwait
test
in
push
sub
lret
aad
pop
leave
cmc
add
mov
pop
adc
pop
push
ja
jae
test
pop
inc
icebp
xor
hlt
repz
divb
fmull
pop
ss
pop
test
fildl
sbb
dec
mov
and
loopne
adc
xchg
scas
and
cmpsb
and
xchg
sub
push
rcll
and
nop
add
fisttpll
push
icebp
out
iret
cmp
out
pop
bound
addr16
fcmovnb
jg
push
jae
pop
mov
push
or
out
mov
scas
sbb
push
add
je
imul
out
cmp
adc
je
push
stos
xorl
adc
xchg
mov
movsb
scas
nop
pop
sub
sbb
inc
fiaddl
dec
ss
pushl
and
aad
mov
mov
es
outsl
roll
xchg
inc
andb
dec
dec
mov
outsb
lret
cmp
lret
dec
sti
mov
arpl
jl
ljmp
add
xchg
dec
mov
adc
or
repz
repz
xchg
scas
dec
idivl
cmc
add
fmuls
mov
xor
inc
push
dec
fwait
lods
dec
inc
push
xchg
push
jge
dec
cmpsb
pushf
mul
adcl
pop
es
mov
pop
sub
xchg
push
cmp
inc
cmp
xor
aaa
js
pop
push
or
xor
stos
add
push
call
pop
push
dec
pop
xchg
shll
pushf
js
lock
jne
jno
xor
inc
stos
sbb
scas
ret
jle
xchg
adc
and
pop
or
sti
mov
aad
mov
inc
push
ret
mov
adc
jl
mov
testb
scas
or
aaa
jle
pop
or
int
out
lea
or
jnp
dec
hlt
pop
jnp
aam
in
mov
jl
cmc
in
mov
xor
cld
cld
adc
jl
jne
and
mov
add
dec
dec
cltd
mov
inc
adc
ss
fcomps
sbb
inc
cmp
jle
sub
push
cs
hlt
sbb
xchg
out
rcrl
pop
or
push
jecxz
repnz
movsb
jl
cld
outsb
cmp
pusha
ljmp
add
cmp
sarl
ja
xchg
movsb
adcl
cltd
outsl
mov
pop
add
fistl
add
out
je
lahf
adc
int3
cwtl
push
push
out
push
loop
xor
push
in
inc
pop
loopne
popf
and
subl
jns
inc
sub
push
pop
xor
add
mov
repz
enter
nop
clc
notl
mov
add
aas
shlb
je
xchg
adc
cld
lret
sub
fcmovu
je
cld
or
pop
pop
push
je
loopne
pop
push
and
push
sub
jmp
in
lret
sbb
xchg
mov
rcrb
mov
mov
pusha
push
cwtl
ljmp
add
cs
jecxz
adc
jge
mov
rcrb
fnsave
add
mov
sub
sbb
dec
mov
adc
orl
fmull
jmp
int3
fs
push
insb
imul
xorl
aam
mov
ficoml
in
cmpsb
pop
mov
adc
or
jg
and
jle
loope
sahf
outsb
jo
call
sbb
jb
ss
pop
scas
adc
mov
rol
jo
or
pop
out
add
pop
and
aad
push
sarl
mov
test
xchg
shl
nop
add
out
push
add
pop
jp
test
push
and
jno
lds
in
int
ss
xor
and
sahf
das
lods
mov
test
add
out
xor
call
dec
cmpsb
dec
movsb
cmc
fs
or
lock
mov
test
jae
mov
xor
inc
sarl
xchg
repz
es
pop
xchg
testl
cmpsb
mov
iret
sub
lock
clc
push
adc
xor
fdivr
sbb
sti
lcall
pop
xchg
arpl
lock
shll
mov
and
push
inc
iret
dec
notl
rol
mov
dec
xor
test
pushf
sub
pmuludq
jge
push
iret
dec
and
or
scas
rol
test
ss
gs
es
dec
add
add
push
push
and
icebp
dec
incl
gs
aaa
das
jp,pn
cmp
shrl
inc
pop
cmpsl
ror
ds
push
sbb
int
xor
inc
out
das
mov
xchg
push
push
into
push
mov
sbb
xchg
pushf
popf
fisubrl
into
in
cmc
fwait
cmpl
aas
hlt
push
xor
dec
int
loopne
into
icebp
sbb
inc
cltd
jmp
or
xor
fdivs
xor
les
jle
aam
sbb
inc
fstl
popa
dec
mov
push
mov
aaa
lret
pop
cli
dec
sub
mov
arpl
int3
push
fcomps
les
jnp
sbb
mov
jo
cmpsb
imul
outsb
divl
cmp
xchg
dec
sub
push
imul
ret
xchg
xor
enter
or
test
fsubl
and
mov
inc
pop
int
lock
mov
sub
js
dec
push
in
icebp
cmp
sti
mov
push
mov
cmpb
sub
mov
shll
cmp
dec
sbb
fwait
test
repnz
in
aam
stc
adc
mov
sarl
push
xor
into
fnsave
popf
sub
sbb
jp
mov
sbb
jp
hlt
lahf
fstps
pop
adc
push
ljmp
jl
inc
outsl
xor
cmpl
jo
lods
mov
lea
cli
rcl
cmc
or
push
mov
mov
lods
je
add
lcall
push
mov
fcomi
bound
lcall
scas
js
xchg
mov
mov
cmpsb
jb
inc
pop
and
andb
push
sub
sub
dec
jb
mov
sub
lahf
ja
cmpb
or
mov
push
jno
or
in
sbb
add
adc
fsubs
in
loopne
mov
push
dec
fidivrs
lcallw
addr16
ja
cmp
ret
sbb
adc
xor
mov
xorl
mov
js
adc
mov
nop
push
imulb
fisubl
sti
stos
cmp
inc
mov
adc
out
cwtl
xchg
cmpl
roll
sub
lock
push
gs
fidivrs
dec
rcrl
daa
push
cmp
cmpsl
out
aad
xlat
icebp
inc
loop
inc
adc
out
cld
mov
jns
jge
or
mov
push
arpl
jmp
cmc
lcall
sbb
mov
rol
lea
icebp
or
mov
cld
jb
mov
cld
popa
mov
clc
dec
jbe
mov
je
and
pusha
xchg
mov
aas
lock
repnz
mov
jae
out
ss
push
das
mov
ljmp
call
jge
in
notb
dec
lock
je
dec
dec
or
fildll
xchg
sub
and
inc
add
pop
rcrl
lods
add
call
and
jecxz
setne
imul
enter
stos
push
stos
ret
inc
dec
movsb
xchg
test
loope
mov
mov
mov
test
lret
mov
xchg
and
popa
test
xchg
xor
lret
sub
inc
dec
jge
cmp
shr
inc
pop
sbb
jle
int3
xchg
or
push
mov
call
mov
cmc
cmp
fstpl
mov
out
and
movsb
leave
fsubr
aam
out
or
push
out
xlat
std
fidivrs
cmp
mov
lods
pop
call
rolb
inc
inc
cld
movsb
and
pop
loopne
cmpsb
jns
cmp
jmp
cli
mov
mov
pushf
sbb
mov
mov
data16
mov
and
je
push
js
in
jo
adc
daa
call
mov
jge
push
cli
rclb
sub
fwait
out
jp
loopne
dec
imul
lods
out
jb
cmp
pushf
popf
test
mov
xor
fmuls
sarl
push
add
mov
movsl
pop
jno
jecxz
sbb
sahf
cltd
les
add
iret
add
stos
mov
inc
out
pop
push
jg
aaa
sti
mov
loope
mov
sub
push
push
cmp
cmp
fsubl
into
pop
jbe
mov
cld
xchg
nop
mov
hlt
adc
test
flds
pop
repnz
or
sbb
cmpsl
and
xchg
mov
js
fcoml
lds
jnp
out
repnz
idivb
add
mov
idivb
jl
xor
fisttps
jnp
bound
inc
aaa
jo
cmp
pop
xchg
loope
popf
mov
jnp
mov
das
or
and
mov
sarb
or
inc
push
jge
push
mov
pop
adc
xor
and
negl
mov
in
sbb
cld
xchg
inc
das
mov
or
dec
cmp
sbb
rclb
mov
inc
rclb
fcomip
je
test
jnp
push
mov
in
stos
cmp
cmpsl
lods
ds
rol
in
or
out
ja
cs
pusha
add
fadd
jmp
rclb
jo
push
sbb
mov
lea
stos
jle
jb
pusha
je
xchg
std
lock
push
fwait
js
rcrl
lods
insb
push
out
sbb
mov
rcll
xchg
push
dec
pop
adc
xchg
sti
addr16
xchg
xchg
cmp
or
sbb
adc
jmp
sbb
mov
jle
xor
inc
add
sbb
rclb
repnz
loop
mov
inc
movntps
rcrl
flds
lds
cwtl
xor
mov
fsubs
dec
jne
add
jo
push
sbb
and
ret
or
mov
fs
icebp
test
cmpsb
test
mov
push
xchg
inc
dec
dec
mov
jg
insl
sub
negb
mov
jmp
sub
sub
lret
jle
imull
xor
stc
cmp
pop
xchg
cltd
inc
orb
rcrl
push
rcrl
xor
lahf
mov
mov
movl
mov
jecxz
gs
pop
or
mov
sub
movsb
jo
jno
inc
mov
xchg
mov
fimuls
daa
test
or
jb
hlt
pop
mov
cld
orb
xchg
cmp
xor
dec
inc
inc
xchg
jb
jmp
das
xor
mov
arpl
ds
inc
scas
rcr
call
push
les
iret
sar
pop
jns
jmp
xor
xor
add
les
jg
movsb
jecxz
push
pop
mov
xchg
cltd
or
popa
jae
in
test
mov
or
iret
inc
scas
fwait
arpl
fnstcw
push
inc
add
push
ret
cmpsl
mov
test
mov
pop
popa
cwtl
loop
nop
adc
js
iret
pop
cmc
mov
mov
mov
adc
inc
jmp
divb
lods
pop
leave
xchg
jmp
pop
call
sahf
stos
notb
inc
fsts
push
stos
xchg
or
cmpsb
cmp
sub
xor
ret
js
cli
inc
test
or
xor
mov
mov
rolb
outsb
pop
aaa
jmp
outsb
or
xchg
call
insb
push
dec
push
ret
cmp
and
inc
cmp
sahf
pusha
test
push
push
xchg
pop
cmp
scas
pop
fcoms
loopne
imul
mov
pop
fsts
mov
xchg
cmp
inc
popa
rcll
cmpsb
dec
orl
repnz
cld
lcall
repnz
pop
sub
add
daa
jno
xchg
fdivrl
decb
jns
fidivl
xchg
push
inc
inc
cmc
jbe
repz
fdivs
push
jne
test
mov
pop
and
iret
jg
push
testb
push
inc
push
or
in
xor
push
mov
mov
fwait
cwtl
push
call
xor
pushf
jbe
bound
stc
sbb
push
addr16
xor
mov
bound
cmp
lahf
popf
push
ficoml
jb
es
dec
sahf
mov
aam
mov
cld
or
xlat
cld
roll
dec
push
lods
scas
pop
pusha
lret
fidivl
lret
mov
test
or
fisttps
test
int
mov
fisubl
xor
jmp
dec
repnz
jmp
data16
ss
mov
loope
stos
arpl
xlat
hlt
jno
mov
stc
movsb
jo
cmp
leave
rcrb
fcmovne
push
sti
std
sti
into
jle
mov
into
je
xchg
lods
push
ret
gs
adc
or
fisubrl
sbb
sub
mov
mov
fcmovbe
cld
out
in
scas
xor
js
mov
adc
lds
add
mov
push
adc
lahf
pop
jge
mov
cmpsl
js
in
js
push
xor
aam
enter
outsb
fisubl
cwtl
sbb
sarb
mov
ret
cmc
sbb
aam
jecxz
and
dec
xrelease
fsubr
inc
cmp
inc
sbb
mov
adc
shr
and
adc
enter
xchg
testl
je
push
or
in
push
sbb
add
and
push
test
loope
cs
cwtl
inc
xchg
cmpsl
sub
int
lret
push
fs
inc
sbb
es
decb
mov
js
loop
je
dec
xchg
in
mov
inc
and
loop
fisttpl
test
and
gs
sub
jg
jo
aam
mov
sbb
sub
sub
movb
pop
ret
repnz
out
push
stos
iret
into
sub
aad
push
out
and
cmp
mov
lods
mov
sub
sbb
lea
or
rorb
add
pop
push
nop
sbb
ret
sbb
or
mov
cmp
sbb
mov
sarb
adc
rcl
mov
movsb
xchg
repz
xchg
add
dec
movsl
pop
inc
scas
insb
shrl
sti
pop
jl
add
cmp
in
ret
lret
jecxz
iret
jb
push
in
fdivs
loopne
cmp
popf
loopne
aaa
or
and
xchg
jno
shll
xchg
mov
sbb
es
lret
jg
lds
clc
loopne
insl
mov
das
leave
ljmp
aam
xor
aad
sub
mov
xor
mov
adc
mov
push
push
cmp
xchg
mul
into
adc
out
je
stos
gs
cmpsl
sti
mov
jmp
jne
inc
mov
lcall
lods
dec
aam
stos
lea
xorb
push
xchg
xchg
das
mov
ja
mov
cmp
std
mov
adc
hlt
sub
rcl
jae
jle
cmpsb
fsubs
mov
xorb
pushf
push
lret
js
ljmp
cs
jo
aaa
add
inc
cmp
lret
gs
pop
mov
es
in
insl
fidivrs
add
sub
mov
adc
jp
and
fcomps
lods
popf
jae
push
jno
aad
push
mov
fbstp
push
and
jge
inc
or
adc
idivb
roll
ljmp
jle
hlt
sub
je
inc
leave
repz
fcompl
pusha
xchg
addb
jl
xor
movsl
jb
pop
dec
lret
xchg
jp
xor
in
loope
sbb
sbb
dec
sub
enter
out
dec
icebp
xor
xchg
pop
lds
push
mov
mov
das
scas
sahf
add
cmp
incl
scas
mov
fwait
cmpsl
pop
movsl
test
daa
popa
mov
pop
pop
cli
or
xchg
aam
push
add
clc
add
or
cmp
or
pop
mov
ret
cltd
jbe
lods
jb
movsb
fwait
lods
aad
notl
fsubrl
mov
lods
xchg
mov
fsubl
xor
in
imul
nop
stc
iret
fwait
addr16
sub
jb
mov
or
mov
loope
mov
mov
sbb
xor
test
jae
push
into
jno
addb
cmp
aam
mov
mov
std
aam
subb
mov
or
insl
outsb
in
mov
movsb
inc
rcll
movsb
mov
pop
and
inc
xchg
xor
pushf
jne
mov
fbld
sub
and
xor
and
movsl
cld
call
int
out
enter
adc
js
push
dec
mov
jo
popa
push
les
addb
cmp
sub
sbb
je
sub
cli
sub
sub
sbb
sbb
jmp
push
roll
sbbl
jbe
xchg
cs
orl
std
shll
push
stos
hlt
pop
daa
call
lea
call
andb
jo
or
push
sub
and
jecxz
push
push
mov
and
shll
sub
pop
xor
add
sti
push
jbe
mov
in
fs
neg
xchg
pop
in
adc
dec
mov
sub
mov
and
imul
mov
out
xchg
add
aas
out
or
lcall
repz
cmp
aam
movsl
cwtl
jbe
mov
xchg
adc
xor
int3
inc
popa
cli
xchg
mov
inc
xchg
lcall
test
cwtl
sub
inc
push
sbb
push
inc
mov
test
sbb
mov
int
sub
gs
addb
aad
xor
sarl
outsl
dec
mov
or
loope
mov
pop
stos
or
add
xchg
sbb
add
push
push
xchg
mov
dec
xor
repz
mov
sub
cmp
sbb
int3
pop
push
aam
aam
push
cmpsl
mov
sbb
jne
jnp
cmpsl
mov
cltd
andl
daa
push
pop
shl
ficomps
pop
mov
cmp
xlat
icebp
jae
aam
dec
in
dec
aad
dec
fcomip
addr16
ficompl
sahf
out
pop
aam
mov
push
in
xchg
bound
call
fstl
ds
xor
cltd
gs
sahf
jge
int3
lods
add
sbb
xlat
mov
out
sar
int
lcall
push
adc
jecxz
dec
loope
aad
sbb
iret
sti
pop
outsb
jge
cs
xchg
pop
mov
js
sbb
aad
mov
jg
add
hlt
or
icebp
xor
loop
pop
imul
lds
adc
ljmp
xchg
push
mov
mov
pop
and
jle
and
cld
sarb
cli
mov
je
out
pop
loope
pop
insb
aam
push
cltd
adc
xlat
pop
out
adc
lods
hlt
xchg
int
int
adc
adc
jecxz
out
je
sbb
pop
jb
mov
hlt
fistl
daa
or
add
or
inc
adcl
xchg
push
add
lahf
aad
jg
test
std
jb
add
ljmp
add
mov
xchg
dec
dec
lods
push
inc
adc
or
jge
ficomps
mov
cmc
xor
incb
mov
aad
jb
push
lods
jnp
cli
je
ss
jp
sbb
imul
jge
cmp
and
test
or
dec
sbb
sbb
cmp
dec
orl
xchg
stos
dec
xor
movsl
add
addr16
lret
push
cwtl
fwait
mov
into
mov
inc
sub
rclb
stos
nop
jno
out
addl
pop
cmp
cld
pop
xchg
or
jp
test
mov
push
push
aad
arpl
sbb
pop
rorb
adc
mov
and
bound
add
xor
xchg
lock
int3
push
mov
pop
xor
sbbl
jle
ss
mov
add
popa
adc
sbb
ljmp
rcr
mov
mov
cld
jb
jo
mov
and
cmp
pop
mov
inc
pop
neg
adc
cmp
add
xchg
jns
enter
push
lods
cmpsb
push
cli
shlb
les
xlat
out
loop
xor
xlat
mov
repnz
stos
ret
in
repnz
incb
add
mov
and
cltd
mov
xor
ss
fwait
nop
push
and
cmp
psubd
loop
clc
mov
push
out
pop
test
inc
jge
sub
arpl
fidivs
dec
ret
xchg
lahf
je
xlat
addr16
orl
pop
addr16
rcll
mov
loope
mov
lahf
mov
pop
cmc
push
daa
jle
out
fs
sbb
cmp
leave
mov
testl
xor
cwtl
push
and
jno
inc
dec
orl
or
sub
fmuls
adc
loop
mov
inc
clc
aaa
mov
test
mov
enter
nop
push
add
push
mov
mov
sub
mov
xchg
jg
sarb
aaa
fisttpll
loopne
movsb
lcall
fucom
pop
adc
popa
xchg
testb
cltd
pop
xchg
jg
sti
or
xchg
push
fdiv
cmp
cmp
jmp
jle
insb
addb
lods
sub
xchg
mov
out
mov
cltd
in
int
loop
fmulp
pop
mov
adc
cmp
imul
mov
pop
push
jecxz
in
mov
mov
fwait
outsb
inc
sbb
dec
jne
cld
jbe
sub
push
scas
je
popf
fdivrp
mov
outsl
push
scas
sbb
jb
mov
outsl
sbb
int3
insb
sbb
in
mov
dec
fdiv
mov
jl
dec
enter
jmp
cmc
mov
loop
or
add
dec
sti
jns
divl
fmul
aam
testl
pop
ret
sbb
sti
lret
inc
sbb
pop
lahf
xchg
movsl
dec
xor
mov
push
and
xor
insb
inc
mov
aad
and
mov
xchg
adc
enter
repnz
jae
aam
cmpsb
add
cmpsb
cmp
xor
push
jb
sub
fiadds
adc
aaa
lock
mov
insb
stos
xchg
sub
lret
in
jle
lods
in
inc
dec
cs
jecxz
push
mov
std
ss
adc
sbb
xlat
push
xchg
pop
cmp
dec
mov
sbb
dec
shll
mov
ret
jno
das
cs
mov
inc
push
rcll
stos
lahf
adc
mov
push
test
lret
gs
mov
adc
pop
std
cmpb
lcall
jl
popf
sub
pop
dec
in
data16
xchg
jp
xchg
jb
and
mulb
dec
popf
je
jno
stc
cmpsl
movsl
jge
jmp
clts
pop
sti
jne
clc
pop
shrl
lods
push
cmpxchg
cli
nop
jp
leave
out
pop
in
enter
jge
jbe
ds
and
pop
sub
daa
sbbb
cmp
mov
out
pop
cmc
scas
sbb
xchg
addb
aas
cmp
and
mov
sbb
jmp
xor
push
adc
outsb
pop
push
push
stc
xor
sbb
data16
jae
mov
add
dec
jmp
lret
out
shrl
jne
fnstsw
push
pop
push
roll
push
or
xchg
out
sub
push
insl
cmp
mov
mov
cs
mov
es
mov
cmp
jnp
cs
pop
sub
ficomps
es
out
out
scas
adc
mov
in
jno
lods
pop
cmpsl
test
mov
sbb
cmpsb
mov
adc
cmp
rorl
shll
in
mov
test
xor
jmp
jae
push
popf
lahf
ret
cmp
mov
aad
cli
xor
cmp
or
loop
mov
or
lret
leave
scas
push
fcmovu
icebp
lret
scas
sahf
xor
jmp
ficoms
ljmp
arpl
aas
xchg
pop
fcomip
ljmp
sbb
pop
loope
mov
imul
push
xor
sbb
lea
cmp
jecxz
rcll
ret
pusha
aaa
jno
and
inc
and
adc
add
adc
mov
outsb
sbb
shll
faddp
aas
faddp
ss
sbb
movsl
inc
nop
fcompl
lock
xlat
pop
adc
mov
mov
mov
adc
jecxz
shrb
inc
inc
mov
xchg
inc
xlat
push
jmp
ja
mov
sbb
data16
mov
mov
icebp
xchg
jno
dec
mov
es
pop
inc
jb
roll
aaa
hlt
xor
fwait
cli
dec
push
popl
cmp
lea
or
mov
in
mov
xchg
andl
push
and
test
inc
shrb
pop
push
sbb
push
out
dec
add
rcl
stos
outsb
cmp
jne
out
sbb
mov
popa
inc
je
jo
sti
pop
add
ja
ss
pop
jge
and
push
fnstsw
fwait
add
test
mov
cld
cmp
insl
mov
gs
inc
int3
scas
xchg
mov
inc
and
add
sbb
scas
push
push
cmp
push
inc
addb
sub
cmp
cmp
ror
mov
mov
stos
xor
xor
mov
int3
movsb
sbb
dec
inc
mov
js
rcrl
cmpsl
jl
insb
cmp
mov
addr16
sarb
xchg
imul
pop
test
outsl
push
ret
adc
in
cmp
cmp
ljmp
repz
loopne
stc
bound
bound
aad
add
out
inc
filds
int3
or
inc
add
mov
or
fstcw
cmp
stc
movsb
push
ficoms
sbb
mov
mov
mov
loope
js
pop
repnz
push
fsts
push
stos
pop
xor
pushf
ret
sub
das
inc
xchg
xor
fnstenv
test
pop
jg
cmpsl
gs
jmp
stos
sub
test
std
icebp
sub
push
dec
jecxz
hlt
out
inc
data16
popa
xor
dec
and
pop
jp
xchg
mov
jmp
mov
jmp
jno
call
ss
sbb
js
mov
insb
dec
clc
sbb
stc
sbb
scas
and
pusha
pusha
and
fldl
mov
push
std
out
stc
sub
test
imul
pop
gs
out
cwtl
dec
scas
dec
sub
mov
ds
cmp
mov
fimuls
sbb
xor
ss
adc
popf
sti
ja
nop
inc
repnz
int
pop
shrb
add
mov
adc
sub
and
or
fs
push
shlb
repnz
dec
push
sbbb
lock
cmpsb
stos
sub
mov
inc
jecxz
shr
mov
data16
xchg
and
andl
movsb
jle
cmp
sbb
lret
mov
xchg
mov
mov
movsb
xchg
cmp
orl
or
xchg
xchg
or
mov
repnz
fs
js
push
sub
orb
mov
inc
lods
decl
mov
popa
mov
cmp
imul
sahf
sbb
pop
mov
into
cld
dec
out
out
fucomip
adc
dec
lret
add
cmp
cld
lods
xchg
jecxz
out
or
or
cmc
insl
popa
and
outsb
inc
roll
xor
cmpsl
cmp
movsb
scas
leave
inc
push
cmp
pop
js
stos
iret
dec
lea
push
push
cmpsb
xchg
js
testb
imulb
jp
shll
shrl
jge
aam
in
sbb
inc
sbb
xor
xchg
andb
mov
mov
shll
inc
out
cmpsb
ror
mov
push
faddl
sahf
sub
mov
add
test
call
sbb
out
jge
inc
adc
rorb
jnp
inc
pop
mov
or
into
push
fstpl
add
outsb
or
xchg
out
jle
outsb
lret
lret
in
inc
push
out
imul
jne
cltd
pusha
int3
addr16
pusha
sub
subl
mov
je
push
xor
jmp
push
aas
pushl
adc
jo
dec
dec
mov
push
dec
push
xlat
mov
jbe
in
mov
ret
dec
push
rcrb
push
scas
xchg
jge
lods
out
jmp
testb
xchg
mov
out
mov
sub
cmp
xchg
imul
xchg
test
popf
mov
insb
cmp
and
mov
repnz
xchg
dec
or
or
xchg
les
fcompl
mov
insb
imul
fwait
mov
mov
cmp
push
int
pusha
les
and
add
cmp
int
out
mov
dec
js
dec
ss
add
pop
sbb
notl
cli
or
jmp
mov
fiaddl
sbbb
push
mov
xchg
fstps
fcomps
mov
imul
jns
or
push
mov
loope
das
mov
pop
push
pshufw
dec
jne
or
xchg
cmp
sbb
and
loopne
jge
lods
jge
sub
dec
fldt
test
pop
les
xor
enter
jns
lock
jle
mov
je
mov
fbld
pop
jb
test
jmp
pop
loop
jae
loope
sbb
cs
stos
lcall
push
outsb
hlt
movsb
adc
movsl
push
mov
jnp
cmp
iret
mov
jb
lods
lock
inc
das
cmp
xchg
inc
and
stos
jl
xchg
push
or
aaa
push
or
loopne
in
fdivr
push
jle
xlat
pop
inc
dec
scas
decl
pop
or
jg
jbe
jns
jo
pushf
add
pop
mov
lahf
mov
xchg
cmp
xor
xchg
fwait
adc
mov
push
js
clc
jno
cltd
cmc
xchg
sbb
ds
mov
cltd
adc
pop
push
pop
mov
or
push
jmp
daa
adc
fcomps
adc
add
dec
int
mov
mov
test
mov
in
pop
mov
and
jp
popl
rcll
jnp
inc
test
in
pop
push
dec
push
jb
xor
or
push
mov
add
cmp
fsubs
aaa
nop
inc
shl
mov
and
xor
outsb
inc
mov
cmp
mov
std
sub
mov
mov
mov
dec
mov
out
movsb
jl
dec
cmp
and
sti
push
pushf
out
movsb
add
add
xor
adc
jg
mov
cmpsl
out
in
inc
cltd
decl
add
roll
fs
sub
in
test
incb
mov
push
dec
repnz
jne
xchg
jp
fwait
jl
gs
imul
cmpsb
inc
and
or
jp
sbb
xor
mov
ja
or
lods
test
lret
pop
out
mov
sbb
loope
addb
lods
and
or
cltd
call
adc
sar
lods
sub
cld
outsb
mov
mov
aad
testb
fdiv
cmp
dec
mov
enter
or
mov
push
in
sbb
lret
jle
xchg
stc
loope
lret
mov
fwait
sbb
and
sahf
xchg
lods
push
ja
mov
insb
push
incb
xor
fs
cmp
and
into
jo
or
imul
lds
scas
lock
mov
xlat
shll
lahf
insb
fldt
rorl
push
repnz
jle
add
and
sbb
jb
and
dec
stos
inc
xor
jo,pt
push
push
int
leave
jns
dec
stos
rcll
sbb
adc
imul
push
popf
rcll
cltd
or
fsubrl
xor
es
rcl
add
sub
js
lcall
jge
into
mov
stos
loope
pop
ret
fidivrs
js
int3
sub
stc
mov
jno
fwait
inc
and
jp
sbb
inc
pcmpeqb
adc
cmpsl
sub
arpl
xchg
in
sub
xchg
lret
popa
ret
xchg
mov
test
push
lods
sub
loope
ret
test
sbb
in
xchg
mov
jnp
add
inc
inc
xchg
pop
loope
pop
add
es
pop
xchg
ret
and
sbb
ret
xchg
adc
or
arpl
xorl
lock
push
mov
shll
roll
cmp
jmp
push
addl
sub
mov
pop
dec
push
divb
ss
lds
cmp
lock
add
ja
or
loop
leave
ret
pop
dec
ret
pop
shll
inc
scas
adc
add
fs
shlb
xchg
rclb
inc
mov
cmp
mov
mov
pop
jmp
outsb
xor
dec
dec
add
mov
mov
test
mov
pop
xchg
sbb
and
sahf
hlt
or
xchg
push
push
jge
ss
cld
mov
imul
xchg
iret
addr16
out
or
arpl
jo
mov
fimuls
loopne
cltd
movl
push
cltd
mov
adc
mov
jecxz
shll
lcall
sub
jns
push
jp
cmpsl
sahf
out
ret
imul
cmp
xchg
fnsave
lds
jmp
jo
js
push
sti
out
es
mov
movsl
xchg
push
scas
outsb
pop
cmp
in
mov
adc
sbb
cld
mov
subb
movsl
sti
push
mov
sub
xchg
sub
jbe
inc
pop
jg
mov
push
mov
roll
dec
mov
sti
out
hlt
and
adc
mov
push
fs
repnz
int3
sub
daa
xor
jae
jo
jnp
fldt
es
add
orb
add
push
push
cwtl
in
mov
cwtl
lret
mov
cmp
cmp
out
std
icebp
fwait
add
es
cmp
push
rcrl
inc
loope
stos
cmpsl
sahf
cld
jbe
iret
fbstp
imul
dec
add
pop
nop
std
inc
fcoms
dec
int3
dec
out
je
ss
fwait
mov
pop
lret
jno
loop
pop
and
sbb
adc
sbbb
xchg
jno
std
cld
gs
bound
xchg
dec
cmp
movsl
pusha
je
dec
cmp
sub
or
and
push
sti
cmc
scas
iret
shlb
and
cli
je
stos
int3
cmp
inc
and
push
cmpsb
mov
xor
test
cmpl
mov
rcrl
data16
pop
movsl
bound
adc
push
fisubs
cli
or
add
push
bound
sub
jecxz
addr16
cmp
jle
mov
mov
repnz
and
cltd
stc
repnz
add
dec
push
cmp
je
inc
cmpsl
xchg
fldenv
es
dec
lock
mov
mov
mov
push
data16
rorl
mov
movsl
stos
or
push
xchg
test
aam
push
mov
sbb
sarb
jnp
add
cwtl
stc
push
cmpsl
faddl
test
call
pop
push
aad
add
inc
dec
rcr
cltd
adc
xor
pop
call
cmp
rclb
xchg
std
mov
out
dec
mov
mov
fwait
pusha
xchg
mov
mov
cmpsb
jmp
ret
loopne
iret
push
xchg
adc
in
cs
cmc
mov
les
shll
nop
cmc
fcom
mov
pushf
mov
into
push
data16
fisttpll
mov
xchg
adc
cmp
inc
sbb
mov
insl
xor
xchg
ss
leave
jne
cmp
mov
rclb
mov
aas
loope
fst
add
scas
sub
adc
or
jecxz
xchg
mov
js
sbb
jmp
mov
outsl
test
inc
stos
pop
mov
in
pop
pop
sbb
jo
js
arpl
jns
jns
sub
repz
in
popf
mov
sti
loopne
and
lea
lcall
cmpsb
inc
lds
testb
push
sub
roll
andb
loop
push
sbb
out
scas
push
hlt
push
fs
iret
ficompl
mov
call
cwtl
mov
jecxz
mov
mov
xor
or
leave
mov
add
xlat
inc
mov
and
mov
in
sub
gs
pop
sbb
mov
repz
sub
xlat
inc
call
sub
shr
loopne
xchg
fs
xchg
popa
jae
adc
pop
ds
mov
sub
fnsave
lods
cmp
xchg
mov
sub
sbb
and
mov
ss
pop
pusha
fwait
adc
bound
push
jl
push
outsb
xchg
shl
push
jg
mov
mov
icebp
jb
push
lahf
adc
sub
mov
xchg
inc
sbbl
mov
xor
cmpsl
or
jg,pn
inc
inc
adc
mov
mov
mov
ss
sub
mov
push
fisttps
scas
cs
rcrl
mov
je
and
pop
neg
sbb
ljmp
mov
fcoml
ficoms
insl
pop
ja
or
movsbl
or
push
push
and
mov
mov
sub
aad
pop
mov
cmp
out
xchg
or
dec
cld
push
and
test
repz
cmpsb
imul
or
jge
mov
test
inc
jb
lret
adc
cmpsb
inc
mov
ds
cmp
sub
push
xchg
sub
or
imul
into
cmp
xor
add
add
or
or
sti
xor
or
cmp
ret
lods
loope
and
push
sbb
xlat
scas
jecxz
hlt
in
mov
sub
jle
jecxz
hlt
add
or
loopne
pop
mov
jae
test
xor
out
mov
ret
xlat
dec
pop
pushf
xor
test
xchg
arpl
inc
test
icebp
adc
les
aam
stos
fldcw
sub
push
jmp
push
sub
pop
adc
andl
out
cmp
test
test
shll
aas
mov
xlat
into
adc
xchg
pop
xor
mov
daa
jne
popa
inc
cmc
pop
dec
sahf
push
jge
push
repnz
int3
jo
shll
xchg
mov
sahf
jecxz
fistps
pop
je
add
xchg
js
cmp
xlat
pop
jmp
mov
pop
xor
orb
inc
mov
flds
add
out
sbb
addr16
mov
jae
aaa
minps
stos
xorl
movsb
icebp
outsl
mov
pop
ljmp
xor
fisttpl
mov
push
adc
push
or
adc
jle
lahf
mov
fistps
jmp
jle
add
adc
lock
aaa
or
mov
xchg
jbe
cmp
mov
push
ljmp
mov
dec
jns
popf
and
out
rcr
popf
sbb
pop
fsts
inc
scas
sbb
cmp
sub
dec
dec
or
xchg
push
cmc
frstpm(287
push
test
jae
pushf
in
stos
sub
dec
jb
fs
adc
push
pop
jb
aas
xor
dec
jnp
mov
dec
jae
jl
gs
pop
ret
push
daa
das
adc
mov
clc
fildl
mov
loop
pop
call
xor
repz
mov
mov
vpshlw
push
jb
movhps
jae
int3
lods
pusha
fcompl
push
xor
and
fbld
mov
xchg
cmp
adc
and
scas
shll
xchg
or
mov
hlt
cmc
inc
test
mov
cmp
push
insl
and
arpl
adc
xor
push
mov
fsub
dec
out
or
int3
cmp
scas
xchg
test
shrb
notl
fwait
and
in
cmc
sub
mov
sub
xchg
in
push
mov
jno
sbb
xor
cmp
repnz
sbb
shlb
mov
addb
lahf
xchg
popa
popf
xor
xchg
jnp
scas
sti
mov
push
or
xchg
lds
inc
sahf
inc
push
push
dec
fistpl
cmpsb
pop
jne
pop
in
xchg
mov
scas
adc
cmp
fs
inc
mov
sahf
push
dec
jo
add
fdivrl
push
enter
xor
or
xorb
add
hlt
in
push
dec
je
test
and
lods
gs
loope
test
aaa
sbb
decb
lds
dec
pop
mov
aad
fs
add
addb
pop
mov
mov
test
mov
add
jb
incl
inc
cs
int
mov
push
xor
jl
decl
cld
int3
cmp
push
sub
stos
cmpsl
mov
scas
push
cmp
imul
pusha
dec
out
loop
xchg
cld
sub
icebp
out
add
aaa
js
test
fisubrs
enter
pop
in
xchg
pop
cmp
shrl
dec
cmpsb
das
mov
dec
fnstsw
pushf
addr16
stos
cmp
sbb
mov
mov
loopne
repz
inc
lock
and
lret
sti
push
dec
shll
rcl
push
enter
push
adc
leave
adc
fs
jle
add
fimull
jg
fwait
mov
fs
lock
xchg
xchg
mov
call
jae
scas
enter
or
sbb
mov
cmpsl
add
in
xor
xrelease
xchg
push
in
aaa
jle
push
jae
mov
mov
mov
xchg
adc
fistpll
out
rcl
stos
gs
outsl
cmp
test
popf
repz
adc
sub
mov
mov
or
loop
cli
stos
add
dec
xchg
inc
movsb
addl
adc
in
jne
mov
jns
and
jecxz
into
or
cmc
adc
fidivl
out
dec
aad
sbb
sbb
out
pop
pop
stos
rcll
cmp
rolb
mov
incl
call
jge
cltd
ljmp
jge
sbb
dec
lods
testl
jbe
sub
dec
push
inc
stos
lods
and
mov
bound
and
xchg
mov
and
mov
scas
adc
pop
mov
push
add
adc
mov
scas
and
jp
push
in
pusha
mov
push
ja
icebp
sub
dec
scas
jbe
cltd
mov
inc
xor
test
or
and
mov
dec
mov
push
mov
sub
pop
push
pop
shlb
dec
das
cmp
sbb
dec
cmp
mov
sub
push
lret
or
mov
mov
dec
es
mov
shll
jns
add
push
jbe
cmp
pop
and
cmp
xchg
out
imul
arpl
fs
pop
in
test
add
imul
jmp
or
loop
cmpsl
lods
pop
insl
push
jne
in
fs
cld
mov
test
xor
pop
aaa
aas
cltd
and
cmp
dec
loop
push
mov
adc
pop
pop
insl
xchg
cmp
fbld
call
xor
adc
and
rcrb
xlat
mov
enter
lahf
fcompl
fsts
cltd
imul
fbstp
sub
int3
addr16
shrl
sub
add
mov
sbb
sarb
or
loopne
and
mov
pop
add
stc
or
sahf
psadbw
aam
cmp
cmc
dec
xlat
je
insl
movsl
hlt
or
add
jbe
rclb
repnz
jb
popa
mov
mov
push
test
loop
loope
and
movsb
lret
mov
and
ljmp
addr16
cmpsb
sti
push
inc
out
shlb
mov
or
pop
test
mov
jge
rcl
sbb
cld
xchg
adc
or
jb
dec
lret
jbe
push
xlat
jns
push
imull
imul
mov
add
mov
adc
and
fdivr
sub
cli
xchg
sub
jns
lds
ficomps
xor
mov
arpl
pop
add
enter
push
xor
aad
cltd
pop
mov
hlt
pop
jne
rol
sbb
add
xchg
popa
or
pop
sahf
bound
imul
andb
ljmp
adc
pop
inc
sub
addr16
jl
cmp
jecxz
push
bound
inc
cmpsb
pop
mov
inc
sbb
or
sarl
cmc
popf
adc
cwtl
xchg
mov
bound
push
shlb
scas
stos
ret
lds
dec
sarl
rcll
dec
pop
jne
cmc
inc
xor
adc
in
pop
addl
fnstsw
cmpsl
cwtl
ret
jg
or
sbb
push
test
mov
push
pushf
test
aad
cmp
add
fadd
jge
cmpsl
out
loopne
cwtl
sub
adc
js
ficoml
outsl
cmpsl
pop
out
sbb
addr16
hlt
push
push
cltd
loope
ja
movsl
into
add
mov
loop
mov
and
adc
ss
xchg
mov
daa
pop
subb
adc
pop
push
push
add
xchg
lret
push
popa
pop
and
mov
mov
mov
int
xchg
fs
mov
jmp
mov
sub
push
mov
into
loop
or
xlat
cmpsb
rcr
or
idivl
andl
jno
rclb
sub
dec
scas
jp
test
leave
pop
add
stos
iret
cmp
inc
cmpps
adc
aad
loopne
add
jl
mov
xchg
enter
rcll
adc
xor
pop
lret
xchg
mov
ljmp
pop
cmp
gs
lds
xchg
jge
aaa
cmp
mov
arpl
icebp
lcall
and
sub
mov
and
hlt
jmp
jmp
movsl
inc
sti
lods
and
jge
sbb
or
in
sbb
sub
ret
cs
enter
iret
fiaddl
icebp
dec
xchg
cmpsl
test
loopne
mov
outsb
mov
pop
and
stos
jp
and
mov
and
jns
popa
push
insb
mov
xlat
mov
adc
sub
xchg
jo
mov
shlb
fidivrl
pop
das
pushf
dec
cwtl
in
cwtl
cmp
insl
adc
mov
mov
or
pop
fmul
pop
aam
out
mov
clc
shll
and
adc
ret
mov
pop
das
mov
imul
jb
das
inc
cmp
inc
push
jns
inc
insl
jle
cmp
mov
mov
adc
dec
ret
push
in
jb
xchg
les
push
dec
adc
ds
test
fdivs
dec
ja
test
fdivs
cmp
adc
sub
or
sbb
add
sar
pop
gs
pop
out
xchg
cmpl
lock
sarb
dec
or
adc
sbb
fcmovbe
int
push
shlb
loopne
fsts
lock
mov
or
add
sub
push
sarl
les
xor
sahf
pop
pop
sub
mov
and
arpl
mov
mov
jae
pop
jne
das
ret
xchg
xchg
fprem1
stos
inc
push
xchg
cmp
arpl
movd
sbb
std
not
ja
das
aas
rorb
pop
inc
xchg
inc
notl
out
ret
inc
add
std
mov
mov
adc
xor
cmpb
xlat
push
and
add
je
addr16
or
dec
pop
sbb
dec
cmc
pushf
xchg
sbb
or
lret
jle
mov
ljmp
mov
push
mov
dec
xor
add
adc
mov
enter
inc
dec
scas
sbb
loop
inc
ja
mov
dec
mov
test
or
popf
jg
mov
aaa
aas
shlb
hlt
mov
sti
pop
scas
stos
pop
fiadds
cmp
sbb
pusha
stos
cltd
push
rcrl
jae
push
fstpt
fdiv
xchg
lods
pop
xor
jl
push
ret
xchg
or
xor
pop
mov
scas
adc
xor
cmc
addr16
push
sarl
push
cs
mov
repnz
pushf
jns
mov
ss
lcall
jb
repnz
iret
stc
cs
mov
push
mov
mov
push
inc
dec
sbb
cmp
arpl
sub
das
shrl
fdiv
out
sub
push
sub
mov
stc
mov
pop
pushf
outsl
aaa
faddp
insb
cmp
ds
outsb
insl
cld
testl
push
loope
jno
pop
mov
and
mov
int
or
xchg
cmpsl
adc
xor
and
or
mov
inc
shlb
pop
fcmovnb
mov
and
adc
imul
add
and
mov
or
aaa
add
xchg
bound
cltd
mov
cltd
daa
sahf
fs
shrl
inc
imul
dec
adc
pusha
std
pop
mov
xchg
int3
pop
pop
fadd
dec
or
mov
and
xor
sbb
loopne
add
pop
mov
and
adc
cmp
jns
cmp
lret
clc
imul
cmpsl
mov
push
fs
jecxz
pop
cltd
sahf
cltd
sbb
insl
in
into
mov
jecxz
jg
test
sub
mov
adc
and
scas
sbb
imul
popf
cwtl
mov
xor
test
pop
fwait
daa
mov
sub
fwait
in
in
xchg
pop
out
push
test
push
in
fldt
cmc
cld
inc
test
pop
in
fldl
xor
lcall
pop
mov
xchg
imul
cmp
leave
xchg
dec
or
xor
test
adc
add
xchg
dec
mov
pop
inc
push
cmp
ror
pop
sbb
stc
jmp
daa
in
sub
push
sahf
mov
xchg
stos
in
add
in
imul
or
dec
pop
ret
jle
cmp
loop
std
scas
js
inc
mov
xor
sar
sbb
into
hlt
icebp
cs
mov
or
jecxz
stos
xor
adc
out
lods
lret
inc
loop
jo
jno
inc
mov
cld
jl
orl
enter
cli
iret
jecxz
out
icebp
xor
icebp
les
imul
push
daa
xchg
jae
int
jp
pusha
adcl
dec
hlt
push
jne
inc
xchg
repz
jns
nop
add
sub
pop
out
mov
cwtl
out
jle
insl
dec
leave
test
lcall
xchg
int3
xor
imul
or
sbb
push
ljmp
mov
mov
cli
jno
mov
ret
mov
daa
jns
pusha
or
inc
mov
stos
into
lods
or
ljmp
xor
mov
fsubs
pop
jae
adc
test
inc
daa
fmull
inc
andb
lahf
gs
cmc
ja
jae
mov
adc
fisubrl
push
mov
jne
cltd
int3
mov
cmp
or
mov
lea
mov
xor
jno
dec
sti
pop
xchg
iret
sub
pushf
aam
mov
icebp
repnz
test
mov
dec
out
mov
cmc
ret
cmp
sub
xor
arpl
sbb
fisubrl
loop
in
scas
inc
jno
pop
dec
push
mov
stos
pop
test
push
cmpsb
stos
fwait
pop
push
mov
outsb
mov
push
ss
jns
aas
sub
std
push
test
inc
add
scas
out
js
mov
flds
fcomps
xor
dec
int
test
dec
cmc
xor
mov
rolb
fs
jle
mov
iret
pushf
popa
movsl
repz
xor
or
ret
push
or
adc
repnz
shrl
mov
stos
addr16
pop
sbb
test
pushl
rcpps
jge
lock
in
imul
lret
out
cli
jb
negb
in
dec
jecxz
je
mov
fldcw
adc
inc
mov
xchg
xchg
dec
and
dec
xchg
inc
push
mov
push
insb
pop
loop
addl
notl
or
mov
pop
pop
flds
testl
gs
std
sbb
insb
test
jae
test
sahf
pop
loopne
das
adc
push
jns
addl
inc
inc
cmp
fcmovb
dec
pop
add
mov
xor
sbb
stos
flds
aad
negb
das
mov
adc
xor
lds
jl
les
btr
sbb
arpl
ret
test
rcll
inc
fdivl
pop
pop
mov
fildl
inc
xchg
movsl
dec
aam
or
mov
mov
je
sub
gs
adc
mov
testb
loop
sub
lods
mov
xacquire
xchg
ja
jl
stc
fmul
inc
jo
mov
jp
insb
pop
dec
mov
sub
or
sbb
inc
into
sbb
jp
sbb
add
dec
push
lods
mov
aas
jae
cltd
xor
fdiv
inc
mov
fwait
cmp
repnz
repz
clc
loop
push
cmp
aas
iret
les
jnp
pavgb
jne
test
stos
mov
imul
mov
cmp
cmc
mov
rcll
mov
cmp
xchg
push
lcall
xchg
mov
xchg
mov
add
pop
add
jo
mov
fcom
cwtl
test
dec
out
xor
loopne
or
push
cmp
addl
pop
push
mov
xchg
cwtl
sahf
jmp
add
pop
jo
daa
shr
xchg
mov
and
inc
fstps
add
cmp
flds
push
cmp
dec
and
sti
ss
adc
pushf
jl
push
movsb
int3
pop
iret
jge
pop
lods
sbb
hlt
and
xchg
push
test
fwait
in
xor
cmc
mov
mov
repnz
pushf
outsb
outsb
pop
out
adc
inc
jnp
cmc
movsl
lret
add
xlat
ret
adc
pop
pusha
pop
xor
pop
fwait
or
mov
mov
test
insb
iret
pop
fldenv
push
scas
iret
ret
mov
push
lret
push
pusha
loopne
clc
insl
fcompl
jl
call
fucomp
sahf
mov
push
push
inc
mul
popf
sbb
aad
pop
push
ja
daa
fdivrl
cs
sahf
repz
sbb
pop
inc
xor
lret
mov
push
in
or
sahf
jbe
xchg
fidivrs
decb
jo
ret
xchg
and
jae
cld
roll
add
out
add
out
xchg
mov
sub
aam
pop
int
push
int3
push
popf
clc
xchg
aad
movsb
or
inc
repnz
mov
jb
jns
loope
mov
mov
jecxz
sub
ljmp
daa
push
cmp
cltd
inc
lds
nop
push
filds
jae
arpl
inc
inc
icebp
movsb
sti
les
incl
ret
rorb
mov
xchg
push
rorb
icebp
xor
fcompl
xor
pushl
rep
cltd
into
jb
insl
out
add
inc
cmpsb
mov
or
push
imul
in
sbb
lret
popa
push
sub
bnd
imul
pop
inc
fsubrs
rorl
push
dec
cli
mov
in
add
cli
insl
push
mov
mov
pop
push
xor
popa
and
mov
or
xchg
int
mov
cmp
pop
es
cmpsl
lds
mov
insb
and
es
xor
sub
fiaddl
jbe
jge
xor
lock
test
inc
jbe
je
dec
shl
adc
jo
mov
cmpsl
aad
ljmp
pop
inc
fdivr
jns
test
aaa
subb
adc
cmpl
into
ss
std
and
add
in
and
sarl
stc
xor
les
add
mov
xchg
ljmp
xor
dec
pop
lcall
nop
test
lahf
aam
lret
pusha
jp
jp
pusha
inc
mov
jo
push
mov
add
repnz
adc
aam
mov
mov
jecxz
cld
push
aas
js
inc
inc
mov
dec
scas
jl
jno
mov
mov
loope
jnp
cmp
sbb
jl
inc
or
cmpsl
push
dec
out
mov
xlat
xchg
adc
leave
xorl
or
mov
mov
adc
loope
push
jl
mov
sbb
enter
ret
dec
cmp
inc
inc
fs
loope
cli
dec
pop
insb
dec
jl
cmp
pop
daa
test
movsb
dec
mov
ja
mov
sub
fld1
mov
sbb
mov
push
ja
cld
stos
loope
in
mov
sub
test
into
mov
andb
shr
rclb
pop
sub
push
adc
jecxz
jg
adc
les
mov
insb
cmp
mov
rcrl
mov
lods
fildll
pop
lahf
test
fcoml
fisubs
inc
sbb
popa
cltd
mov
jmp
adcl
rolb
push
lea
xlat
adc
inc
or
xor
adc
addr16
dec
popa
notl
scas
jns,pt
xchg
push
jne
mov
loop
add
jae
push
cmpsb
sbb
aaa
pop
sbbb
xchg
pop
into
mov
pop
repnz
ljmp
in
rorb
pushf
sbb
fisubrl
and
ret
ds
testl
sbb
mov
repnz
push
mov
jb
out
push
sarl
push
add
push
push
xor
jae
cmp
jge
test
and
data16
cmpsl
dec
sbb
outsb
xchg
cwtl
xchg
xchg
inc
sub
je
sub
lds
test
cs
mov
in
sarb
pop
test
cwtl
xor
js
into
xchg
pusha
push
fbld
jb
xor
push
pop
sbb
addl
pop
arpl
cmp
sbb
dec
cmp
fidivs
int3
pop
loope
test
and
sbb
inc
dec
push
sbb
test
arpl
faddl
insl
add
int3
xchg
mov
cmp
push
mov
cmpsl
jbe
xchg
gs
daa
loope
or
mov
pop
enter
or
repz
shlb
pop
add
xor
ljmp
mov
in
std
fcmove
pop
inc
in
jb
bound
mov
inc
data16
lret
adc
jb
mov
push
sti
xchg
fdivrs
push
mov
inc
lods
sbb
mov
aam
andb
movsl
mov
add
divb
mov
jo
out
outsl
std
mov
pop
popa
hlt
cmpsb
out
mov
adc
popa
test
or
cmpb
les
jnp
adc
pop
xor
xchg
inc
cwtl
xor
push
test
idivb
pop
jl
mov
lret
pop
dec
cmp
add
adc
mov
repnz
mov
out
imul
ljmp
jmp
loope
lret
jno
pop
add
pushl
js
stc
jle
ss
stos
pop
sub
mov
xchg
sub
inc
dec
shlb
das
or
cmp
mov
jmp
fisttps
xor
pop
add
jno
in
notb
movsb
addr16
xchg
xor
push
loopne
add
sbb
cmp
in
jmp
mulb
cld
aas
cmp
pushf
adc
jb
ja
mov
ret
mov
xchg
mov
push
or
stos
push
mov
cs
shrl
push
sub
inc
push
aaa
imul
ja
fsub
add
jle
nop
rol
mov
rolb
fidivs
mov
cltd
push
dec
loope
inc
imul
mov
xchg
in
call
das
lds
xchg
cmc
pushf
sub
mov
les
xchg
adc
loope
into
add
ret
std
clc
dec
incl
push
push
sbb
add
adc
push
adc
mov
dec
shlb
dec
pushf
jb
pop
outsb
or
jno
stos
cmp
sub
mov
lods
cwtl
inc
leave
push
mov
repz
adc
xor
jnp
je
xchg
insl
xor
jl
lcall
mov
cwtl
xor
mov
push
das
xlat
add
jb
jne
fdivrp
sub
mov
push
lret
mov
out
sbb
dec
xor
inc
push
adcl
sbb
xchg
mov
push
pushf
mov
and
inc
push
mov
add
or
push
aas
push
in
add
pusha
andb
adc
inc
cmp
mov
cwtl
in
jl
sub
inc
das
or
sbb
push
or
lods
int
or
push
mov
mov
cmp
mov
pop
dec
dec
push
ret
or
mov
fmulp
pop
mov
mov
je
lods
sub
or
insl
inc
pop
xchg
mov
mov
mov
setp
cmova
lcall
cmp
stc
in
adc
mov
adc
mov
in
and
add
push
shll
scas
sub
out
imul
fsubr
mov
pop
dec
call
mov
stc
test
add
std
fwait
sub
and
fldl
out
adc
or
jmp
in
jns
and
add
pop
pop
jmp
das
hlt
jne
sti
mov
cmp
inc
outsl
cmp
adc
mov
mov
and
or
adc
xchg
aad
lods
movsl
pop
jle
mov
push
xchg
and
push
scas
sbb
mov
pushf
cmpsb
mov
xor
rorl
ja
adc
cs
into
add
pushf
jb
inc
lcall
xor
pop
imul
sarb
lods
fcomps
insb
icebp
inc
xor
inc
loopne
jb
lds
or
lcall
out
mov
fisubrl
data16
dec
pop
ja
mov
fsubrl
pop
and
stc
je
cpuid
into
int3
lret
jg
mov
sub
xor
and
jb
pop
mov
ja
test
jp
shll
add
fsubl
in
mov
cmp
adc
lret
rcr
xor
femms
jo
cwtl
in
popf
icebp
lcall
inc
pop
xlat
jge
stos
addb
jno
mov
out
jb
daa
xor
div
add
sub
mov
ss
fdivl
cs
vmread
pop
cmp
jb
test
push
out
jecxz
mov
ret
lahf
adc
cld
mov
fnstsw
sub
stos
ficoml
cli
subb
int3
int
pop
outsl
add
sub
mov
cmp
lret
inc
lods
pop
jno
rcll
nop
adc
cmp
pushf
or
jp
cmp
add
jg
fildll
cmpb
arpl
ljmp
fcmovnb
mov
cmp
push
das
cmp
or
and
out
hlt
xchg
push
and
xor
daa
xchg
dec
ret
or
lods
cli
cmp
push
pop
notb
in
dec
lahf
setp
js
outsb
xchg
mov
test
out
movsl
roll
lods
jmp
rcrl
mov
add
gs
jne
loop
or
ja
adc
mov
movsb
adc
jbe
cmc
lods
mov
and
jle
xor
mov
or
test
cmc
int
imul
subl
pop
sbb
imul
xchg
fwait
lea
or
test
decb
mov
xor
sub
mov
inc
cwtl
or
or
ficoms
cmp
add
dec
loop
cmp
std
jns
jnp
cs
xlat
fimull
adc
rcll
and
and
mov
lock
iret
mov
add
push
stos
add
sub
aad
lahf
fsubr
or
imul
shl
into
leave
and
int
jmp
xlat
adc
pop
xchg
loop
mov
ds
mov
mov
into
sahf
jo
in
sarl
and
adc
popf
ljmp
and
je
cmp
mov
pusha
out
xchg
fstps
cmp
pop
call
out
pop
xchg
push
inc
movsb
arpl
adc
add
cmp
jns
ja
sbb
dec
in
psubusb
test
stos
outsl
pop
sbb
push
push
xchg
jne
hlt
fidivrs
mov
pop
inc
pop
pushf
pushf
dec
mov
movsl
into
mov
sbb
add
pop
lods
ljmp
xor
sti
fcomp
cmp
loope
clc
adc
and
les
push
aas
repz
sub
out
xor
mov
imul
lret
int3
icebp
in
inc
dec
xlat
pushf
lods
or
jnp
lcall
pop
add
mov
sub
xorb
sbb
std
lock
mov
call
dec
stos
sub
int
movsl
ret
add
shrl
jo
cmp
mov
pop
dec
int
xchg
xor
inc
imul
jne
out
pop
ret
sbb
pop
imul
pop
add
fldcw
addr16
outsb
insb
std
leave
ds
lods
fcoml
dec
dec
call
test
pop
cmp
mov
and
jo
ljmp
aaa
sahf
push
sbb
mov
push
pushf
jge
scas
hlt
mov
pop
push
mov
mov
or
int3
cltd
out
mov
insl
outsl
mov
inc
pop
jecxz
in
outsl
mov
outsl
cmpsb
mov
insl
popf
rol
push
sbb
mov
mov
mov
enter
and
outsb
mov
jno
divl
xor
sarl
adc
pop
hlt
push
pushf
lds
iret
mov
push
pop
dec
adc
rcrl
jns
mov
fsubl
sbb
or
xor
or
lret
sbb
xchg
sub
adc
sbb
fisubrl
adc
hlt
int
movsl
cmpsb
popf
scas
xchg
mov
add
inc
cmovl
and
mov
add
add
pusha
sbb
lahf
ljmp
mov
jno
dec
xchg
mov
mov
sbb
xchg
mov
lock
pusha
repnz
xor
sti
jmp
mov
mov
inc
jp
xchg
sub
dec
ljmp
sub
in
ficomps
neg
test
test
data16
fidivrl
popa
int3
ret
iret
push
mov
xchg
push
adc
xchg
pop
dec
and
fistpll
lcall
or
mov
mov
scas
and
or
jnp
fldt
mov
scas
push
mov
pop
lret
jae
jmp
lret
mov
fdivl
sub
inc
imul
mov
sbb
mov
js
jbe
in
ds
cmp
cli
pushl
loopne
mov
push
aas
push
pop
and
repz
pop
push
fsubs
in
enter
shl
sub
stos
sub
add
pushf
xchg
adc
or
repnz
or
imul
cwtl
enter
xchg
aas
jp
pop
inc
in
cmp
sbb
das
push
ds
pop
cmp
std
scas
and
inc
mov
test
lea
mov
cmc
jg
mov
loope
mov
shrl
mov
fcmovb
mov
push
out
add
pop
loop
jecxz
pop
les
inc
test
xor
pop
sbb
outsl
mov
mov
shl
pop
out
xchg
mov
push
pop
scas
jge
clc
cltd
out
jp
push
push
sub
orl
call
add
hlt
test
sbb
or
mov
sbb
lods
add
mov
icebp
push
cmpb
pop
dec
loop
pop
ljmp
repz
es
pop
add
or
aaa
cmc
push
stos
bound
pop
repz
sub
test
and
lock
inc
shlb
xchg
fwait
xor
fidivs
lods
jmp
mov
fidivs
loopne
inc
in
adc
sbb
mov
inc
pop
mov
in
and
insb
out
test
xchg
mov
hlt
pop
sbb
fcoms
mov
inc
adc
pop
int3
sub
insb
dec
push
cmpsl
dec
dec
cmp
inc
cmp
or
fxch
ret
addps
not
das
fs
jmp
hlt
insb
faddp
out
sarl
addl
xchg
add
xor
fimuls
jbe
iret
xchg
andb
dec
aad
push
mov
jbe
std
push
arpl
movsl
inc
jmp
pop
int3
xor
das
mov
jae
and
inc
shrb
and
mov
mov
outsb
jl
jbe
and
cltd
jmp
rcr
imul
fs
imul
push
das
mov
cmp
ja
push
xchg
xchg
shrl
lock
les
roll
dec
imul
dec
mov
cmp
mov
mov
jp
es
mov
fildl
nop
push
sbb
ret
insb
mov
imul
adc
mov
scas
out
loope
clc
push
dec
std
rclb
fdivp
sub
jge
jb
ret
dec
mov
sub
pop
scas
fiaddl
or
cmpsb
mov
repz
fbstp
rep
xchg
ja
cmp
xchg
je
in
incl
jno
sbb
pop
mov
rcl
mov
in
out
out
mov
loop
repnz
mov
inc
cmpsl
xchg
out
fwait
scas
dec
jle
lock
push
or
nop
dec
out
addb
fdivs
mov
jmp
sbb
jle
dec
or
sarb
xchg
and
push
adc
or
or
stos
add
and
jb
cmpsb
or
ljmp
insl
push
or
in
and
push
xor
shll
das
jg
cmpsb
inc
pop
pop
popf
inc
loope
jmp
cmp
sti
cmpsl
jg
lahf
inc
inc
xor
orb
stc
adc
dec
scas
dec
mov
or
mov
bswap
addr16
pop
sarb
lret
mov
ds
adc
mov
xlat
stos
xchg
lret
mov
out
jne
iret
punpckldq
inc
imul
add
ja
jp
inc
lcall
mov
and
pop
shrb
sahf
and
mov
add
xor
movsl
jge
xor
stos
data16
jno
fisubrs
in
and
in
cs
jbe
mov
clc
test
dec
jb
inc
subps
sub
aam
mov
sbb
pop
add
cmpsl
sahf
adc
fs
test
mov
cltd
fimull
fcoml
int3
mov
jecxz
je
xchg
xor
cmp
lcall
repnz
in
mov
mov
imul
cmp
hlt
daa
mov
jb
ds
cmp
stos
jmp
addb
cwtl
es
mov
push
push
aas
call
adc
enter
cld
adc
or
cmp
push
icebp
adc
into
addr16
pop
mov
fdivr
adc
jbe
cmp
add
lods
lahf
push
std
dec
fsubrp
mov
xchg
leave
repz
push
in
call
mov
cs
or
sbb
cmp
push
pop
xor
leave
sub
rorl
std
fcmovnb
movsl
lahf
push
push
imull
sahf
xchg
or
xchg
cs
mov
aad
pop
push
cmp
sbb
insl
xor
sub
mov
arpl
adc
push
out
mov
mov
cmpsl
pop
js
xor
dec
rcrl
pop
ret
jnp
add
dec
jne
nop
call
jge
ja
inc
inc
shll
xlat
test
adc
mov
rcl
xor
imul
cmp
mov
xchg
out
std
or
popf
dec
ljmp
mov
out
fbstp
adc
pop
adc
insl
mov
jno
add
movsl
and
rclb
dec
xor
add
aas
inc
popf
and
jp
shl
lods
sub
cmp
js
jge
sbb
adc
gs
bound
lock
int3
cmp
push
dec
add
and
jp
pop
sub
cmp
out
adc
daa
movsl
xor
daa
mov
jne
adc
mov
mov
push
sub
push
lock
push
and
push
and
jo
shll
cmpb
int
push
cli
push
mov
shlb
mov
push
stos
xchg
outsb
in
xchg
jge
mov
xorl
inc
leave
test
test
cmp
jb
sbb
jp
outsb
inc
jmp
jmp
mov
inc
adc
loop
mov
push
or
and
icebp
inc
xchg
outsl
pop
cmp
jmp
outsb
mov
jns
push
mov
arpl
dec
dec
xchg
scas
mov
mov
and
inc
inc
mov
adc
pushf
sbb
fnstsw
rcr
adc
jnp
sahf
loope
push
mov
xchg
test
cmpsl
std
stos
insl
in
jl
loop
sbb
pop
push
icebp
mov
ret
xor
repz
and
mov
out
aam
add
push
imul
add
mov
std
out
fidivs
cmp
gs
stc
aad
dec
aas
add
cmp
incl
test
les
sti
stos
or
sbb
leave
stos
stos
push
loop,pt
pop
movsb
je
ljmp
test
fs
aas
jg
xlat
jo
nop
pop
test
in
loope
inc
out
sbb
dec
mov
mov
nop
inc
in
adc
sbb
cld
hlt
lods
outsb
idivb
xor
adc
push
adc
lcall
cwtl
xchg
repz
cltd
xchg
mov
dec
mov
aaa
pop
shrb
js
xchg
xlat
mov
cmp
xchg
adc
mov
movsl
lea
mov
jb
xchg
mov
repz
cmpsb
sahf
cmpsl
inc
test
call
ficomps
sbb
mov
mov
adc
sbb
xchg
inc
inc
shl
sbb
pop
enter
cmp
iret
addb
mov
leave
mov
xor
xchg
push
cmpb
ret
nop
push
notb
sbb
xchg
int
out
xchg
push
pop
outsb
test
sti
movsb
aam
js
lock
xor
imul
mov
and
push
int
push
addb
dec
pop
mov
jnp
sub
jns
cmp
fsubrs
fs
mov
xchg
push
fsubrs
jp
imul
sbb
pop
mov
stos
dec
inc
adc
adc
or
orl
outsl
test
ficomps
fs
mov
imul
jb
mov
roll
mov
mov
or
shlb
mov
pop
sbb
dec
dec
ds
mov
inc
jecxz
bound
ret
mov
add
lcall
repnz
popf
das
data16
and
mov
and
ss
sbb
es
ds
test
and
lock
mov
pop
in
jo
cli
or
movsl
mov
sub
das
adc
sahf
enter
mov
mov
cs
cmc
out
mov
mov
sbb
push
hlt
or
clc
call
cwtl
out
nop
scas
or
ficoml
stos
popf
push
xor
mov
push
sub
jg
pop
lcall
adc
inc
xchg
mov
cmpsl
js
out
mov
xchg
xchg
shll
call
nop
cmp
lea
add
mov
cmc
add
fs
cmpsl
sti
stos
cmp
mov
das
add
jne
or
mov
dec
mov
movsb
mov
or
repz
mov
addb
enter
data16
dec
push
popf
sar
jno
cmp
ficoms
pop
cmp
ficoml
lods
call
jl
jg
rcll
mov
shlb
aad
cmc
clc
push
add
lret
dec
mov
xor
pop
cmp
jnp
xchg
pushf
rolb
ljmp
outsl
insl
sub
sbb
and
pop
daa
push
cmp
push
jg
ljmp
xchg
push
sub
ja
nop
das
dec
idivl
fistl
adc
test
xchg
or
hlt
adcl
shrl
fildll
mov
loop
mov
jmp
dec
lods
and
sub
sahf
insb
int3
js
fs
xchg
gs
pusha
in
push
das
int
xchg
sub
movsl
fisubrl
sbb
shlb
or
inc
in
in
xchg
jns
repnz
xchg
dec
rorl
lock
js
into
inc
cmp
ss
lock
repnz
push
push
mov
xchg
lret
ret
loop
xchg
aaa
mov
test
sar
or
dec
pop
or
ret
cmpb
pop
mov
xchg
push
ja
mov
mov
jecxz
in
mov
cmp
loope
xor
sub
in
or
out
push
mov
and
dec
dec
and
arpl
arpl
jno
and
add
push
movsl
adc
dec
insl
jb
pop
ret
dec
stos
lea
movsb
pop
fnsave
out
push
fwait
sbb
jns
xor
arpl
xchg
add
push
inc
stc
bound
add
cmp
call
repnz
rol
xor
fwait
mov
xchg
cmc
jbe
iret
dec
icebp
popf
inc
out
mov
imul
fdivl
pop
xchg
or
dec
xchg
ja
imul
out
xchg
or
into
push
inc
mov
rclb
add
dec
mov
mov
lea
cmp
stos
add
add
and
jl
outsb
pop
stos
lea
ds
sub
jl
sub
xchg
ja
lods
out
add
orb
mov
xchg
inc
jmp
sbb
loop
loope
out
lahf
jmp
out
mov
or
in
stos
daa
out
cmp
mov
loope
mov
jecxz
xor
scas
std
iret
cmp
jp
lds
pop
sbb
mov
in
mov
mov
jo
movsl
mov
mov
jb
pop
imul
jo
sub
mov
in
adc
pop
jecxz
push
push
inc
sub
mov
sbb
jmp
aas
inc
cmp
cs
dec
adc
test
dec
pop
fdiv
cmc
mov
aad
mov
mov
pop
std
xor
js
or
mov
in
adc
aam
cmp
shr
push
test
ja
jnp
mov
insb
loop
js
lock
ds
sti
outsl
in
inc
ds
dec
mov
and
cmpsb
mov
xor
sbb
cld
in
fnstenv
les
mov
adc
dec
push
aam
cmpsl
push
js
add
adc
rcr
imul
ret
outsb
pop
or
push
add
pop
leave
xchg
out
in
mov
outsl
jbe
push
xchg
xchg
nop
xlat
sbb
cwtl
mov
cmpsl
sub
cli
out
xchg
xor
mov
insb
mov
inc
xchg
out
sbb
bound
out
repz
cmp
repnz
jecxz
out
pushf
lods
cmpsl
arpl
aas
push
and
fidivrs
repnz
nop
or
fsub
fcoml
movsl
mov
mov
or
repnz
mov
ja
or
loopne
lahf
dec
pop
pop
loopne
dec
cs
mov
aad
out
out
in
mov
mov
shlb
les
mov
in
mov
push
cltd
mov
mov
xchg
xchg
mov
lock
xor
imul
pop
notl
mov
inc
jle
inc
les
mov
lods
in
jns
scas
gs
sbb
in
lock
shlb
sbb
loope
xor
mov
push
sbb
cmpsl
add
dec
popf
xor
cmpsb
mov
cmp
out
daa
lds
insl
mov
icebp
add
jge
scas
sbb
jns
inc
push
lcall
movsb
daa
dec
push
add
adc
cmp
daa
int3
lret
pop
adc
pusha
popa
or
in
cmc
loopne
push
in
push
dec
stc
xchg
arpl
jmp
mov
sarl
or
cld
jge
add
jne
xor
push
ss
testb
aaa
pop
inc
lods
je
pushf
rcrl
sub
mov
add
loopne
push
mulb
dec
js
pop
mov
push
js
clc
dec
mov
bound
xor
push
pop
or
addl
sub
xchg
cmp
pushf
xlat
sar
jl
gs
inc
inc
adc
adc
jno
jle
push
push
push
adc
test
push
push
add
mov
inc
jns
mov
inc
add
pop
xchg
int3
mov
int3
icebp
inc
rolb
arpl
dec
insl
ds
enter
addr16
rcrl
mov
push
or
cmp
das
icebp
in
xchg
pop
cmp
cs
js
in
adc
push
loope
test
pop
mov
outsb
mov
cwtl
fcomp
loopne
jle
add
fwait
lea
sbb
int
stos
xchg
mov
bound
add
fsubrl
inc
push
loope
mov
lahf
es
pop
mov
loope
xor
cmp
jl
and
sub
fdivp
stos
outsl
jns
dec
les
in
filds
sub
dec
fidivl
mov
sar
or
xchg
jg
aam
xchg
mov
lret
inc
aam
les
push
jne
hlt
arpl
mov
lea
lret
out
lcall
mov
push
mov
inc
cli
imul
in
lret
call
outsl
movsb
pop
add
pop
adc
cmp
mov
icebp
js
mov
push
out
sub
mov
and
nop
push
push
das
cmp
dec
mov
sbb
inc
jmp
pop
or
mov
idivl
xchg
lret
dec
jo
fsin
data16
stc
mull
add
xlat
mov
jmp
push
mov
push
sub
add
sub
push
clc
ret
push
and
cmpl
out
out
sar
js
add
push
and
mov
cmpsl
mov
adc
lods
mov
pop
aam
iret
cwtl
icebp
push
pop
repnz
push
dec
push
add
mov
repnz
push
mov
push
push
push
pop
loopne
mov
sbb
std
ljmp
mov
icebp
or
pop
lock
pushf
jb
cltd
mov
dec
clc
mov
sbb
pop
sub
xchg
dec
loopne
aad
sub
cmp
in
cld
aam
push
mov
leave
shl
out
push
add
dec
int3
in
nop
das
in
xchg
inc
adc
fdivr
dec
add
sub
jno
inc
fimull
popf
bound
cmp
stc
cmp
test
pusha
lret
sub
lods
gs
fidivl
add
adc
test
inc
and
push
sub
inc
sbb
lods
add
xor
frstor
dec
fdivl
movsb
pusha
in
loopne
out
push
enter
sub
inc
dec
cwtl
test
sub
lret
ljmp
pop
pop
cwtl
xchg
repnz
clc
pop
clc
add
addb
popa
xor
pop
lds
repz
mov
push
and
pop
fs
add
inc
arpl
jno
mov
int3
xchg
sbb
jbe
jb
rcrl
das
mov
mov
pusha
jle
mov
mov
pop
fs
sub
rolb
xchg
iret
mov
movsb
mov
push
fsin
xor
push
cmp
sub
ret
mov
xor
lahf
xchg
push
lods
mov
sbb
mov
int3
xchg
lcall
cli
push
sarl
and
int
repz
sti
mov
adc
add
ret
pop
sahf
popf
mov
iret
adcb
add
es
scas
hlt
xchg
mov
movsl
inc
inc
pop
adc
pop
pop
ds
imul
out
xor
lret
or
mov
jns
push
test
mov
xor
xor
dec
sub
or
mov
xor
in
fadds
mov
rcrb
sbb
fs
and
add
shl
fisttps
inc
push
mov
popf
out
xchg
dec
in
cmp
jp
mov
pushf
push
and
push
sub
jo
jbe
aaa
and
in
aaa
mov
mov
or
nop
pushf
pop
jmp
jle
mov
pop
mov
je
xchg
in
dec
int
shll
daa
int
mov
xchg
mov
mov
pop
and
jecxz
adc
mov
sub
pop
xchg
add
adc
nop
xchg
push
jnp
aad
sahf
mov
loop
xchg
ror
dec
cmp
fstpl
xlat
fbld
cmp
pop
fidivl
stos
pop
rcr
cli
mov
push
clc
and
xlat
mov
cwtl
mov
or
jb
daa
add
stc
push
mov
inc
ja
push
jp
repz
cmc
xchg
outsl
xchg
int3
jmp
mov
popf
jnp
pop
dec
clc
loopne
cmpsb
cli
jle
mov
xchg
scas
and
icebp
fiaddl
mov
fwait
cmp
xor
xchg
ljmp
aaa
xchg
sub
imul
out
test
xor
arpl
out
cmpsb
sub
mov
mov
mov
xorl
pop
mov
push
xor
mov
sub
mov
negl
enter
cmp
push
imul
gs
mov
push
or
add
es
test
inc
mov
and
jg
rolb
adc
sbb
ss
push
movsl
shlb
xchg
dec
fimuls
aam
dec
shlb
pop
xchg
cmc
dec
jne
xchg
test
mov
cmp
mov
xor
xlat
lea
pop
mov
or
jbe
out
mov
or
cmpsl
lret
fs
mov
imul
jnp
push
adc
push
rorb
xor
call
or
adc
cmp
xchg
fidivs
dec
mov
mov
mulb
jnp
adc
rorl
jae
shlb
dec
and
mov
lret
and
in
cmp
push
mov
mov
cmpsl
push
mov
lahf
sub
xor
std
mov
pop
fiadds
sub
fldenv
loopne
jns
sbb
pusha
sbb
lods
loopne
mov
jmp
aam
into
push
adcl
in
fwait
out
nop
dec
decb
jmp
pusha
dec
shrb
push
and
mov
xor
addr16
cmp
sbb
pop
push
lahf
pusha
or
mov
shll
cmp
xchg
into
and
cltd
cmc
xchg
mov
insl
pop
int3
dec
out
mov
dec
mov
mov
frstor
imul
gs
js
lock
lcall
pop
mov
lock
adc
mov
mov
xchg
dec
out
mov
dec
cmp
rcrb
fdivrl
inc
xorl
insb
inc
scas
add
ss
jb
or
fcoml
in
cld
cltd
cmpsl
mov
mov
mov
mov
cmp
shlb
out
popa
dec
xchg
jbe
adc
push
jl
cltd
xor
lods
push
push
dec
xor
add
jne
xchg
xor
inc
jne
jae
stos
outsb
in
pop
or
lods
dec
or
cmp
sbb
pop
icebp
clc
and
jg
add
popa
and
pop
dec
xor
sbb
sub
and
test
xchg
mov
cmp
jge
sar
pop
pop
push
cmp
mov
in
pop
push
cmpsb
stos
add
fiadds
repz
mov
sbb
or
jns
dec
test
ljmp
aaa
pop
xchg
add
and
xchg
mov
sub
not
and
sahf
js
sbb
xchg
pop
push
rcll
sbb
lret
out
ljmp
aad
std
jae
mov
mov
jl
xchg
outsl
jo
or
and
lock
xchg
push
ret
sub
out
ret
mov
movsb
cmp
mov
lahf
stos
jle
sbb
xor
dec
jg
and
jns
mov
mov
aad
sahf
pop
mov
xor
xor
shr
inc
adc
imul
mov
sub
sub
movsl
push
filds
rolb
mov
mov
mov
sti
lods
fcomp
cmp
cmp
xchg
xchg
cmpsb
scas
and
xchg
adc
mov
in
and
mov
ljmp
jbe
push
adc
scas
mov
jnp
call
addr16
je
xor
repnz
sub
push
fidivrl
jns
add
and
or
cmpsl
mov
mull
jno
xchg
lret
cmp
adc
outsl
jl
sub
push
sbb
jo
cs
aad
push
xchg
sti
jno
gs
lods
out
insb
sub
dec
fs
ficoms
cmp
xor
push
ret
add
mov
dec
adc
inc
loop
inc
sub
jle
lret
pop
inc
mov
cmp
and
cwtl
cs
add
iret
hlt
repnz
faddl
stos
xchg
roll
repnz
fisttps
insl
xchg
stc
inc
ret
mov
into
jne
bound
scas
lcall
adc
iret
lahf
popl
add
jb
and
xor
std
outsl
movaps
sbb
xchg
sub
and
inc
sbbl
inc
mov
mov
jmp
call
outsb
rcrb
nop
jne,pn
scas
inc
jg
cld
add
fidivrs
lret
add
xor
adc
push
dec
je
pushf
into
repnz
push
push
xchg
fists
loopne
lret
lock
into
in
sub
push
sbb
jne
test
cmpsb
lret
dec
push
cwtl
les
mov
pop
test
movsb
xchg
mov
shll
movsl
dec
sbbl
ror
xchg
mov
loop
fimull
or
mov
cmp
adc
popf
fs
add
jecxz
stos
shrb
mov
sub
xchg
test
mov
scas
imul
xor
ss
not
xchg
and
aad
push
loope
sub
mov
aas
mov
sbb
std
rcll
push
mov
xor
mov
and
mov
es
jns
xchg
dec
fcomps
outsl
add
push
xor
mov
out
push
push
pop
cmpsb
mov
sti
addr16
addr16
push
pop
and
mov
xchg
sub
push
dec
push
mov
mov
daa
sub
gs
in
or
jecxz
test
mov
cli
mov
call
es
cli
int
sti
cwtl
ficoml
mov
daa
dec
xchg
and
fidivrs
mov
clc
or
aad
movsl
xlat
add
dec
xchg
mov
arpl
rolb
and
jmp
in
xchg
int
mov
dec
ja
mov
out
xor
dec
mov
lcall
push
mov
imul
mov
fwait
sub
pop
ds
mov
fstpl
xchg
sbb
jmp
dec
cmp
in
sub
enter
and
mov
pop
pop
popf
arpl
add
jnp
mov
sbb
sub
fisttpl
aam
cmp
push
hlt
jmp
shll
imul
or
inc
dec
fisubrs
repz
int3
loopne
sbb
mov
lcall
mov
fsubl
jns
pop
mov
fisubs
sti
ss
sub
lea
xchg
cld
inc
adc
les
push
rcll
inc
pop
out
jg
in
pop
inc
jecxz
repnz
jge
add
mov
cmp
scas
sub
movsl
sarb
sbb
push
loop
inc
sub
hlt
int3
out
test
jb
mov
mov
sub
icebp
call
push
sarb
mov
popa
cmp
pop
adc
push
push
movsl
aas
xchg
mov
dec
mov
lret
daa
popa
pop
lods
pop
push
xchg
gs
sbb
repz
scas
dec
clc
lea
clc
mov
aas
sbb
cwtl
movsb
fwait
push
into
mov
inc
addr16
outsl
fnstcw
inc
into
loopne
test
cld
std
ficomps
adc
scas
inc
ret
push
or
rcrb
es
int3
inc
add
sbb
or
pop
call
repnz
mov
xchg
movsl
lods
mov
cmp
cli
ficompl
push
mov
repz
push
pop
dec
inc
out
cli
fnsave
mov
loopne
or
in
int3
sub
stc
and
pop
jo
cli
ljmp
notb
adc
mov
scas
mov
mov
pop
stos
and
imul
das
adc
aad
movsl
mov
movsb
xchg
jl
xchg
cli
sahf
scas
scas
mov
clc
inc
jo
shr
mov
or
outsb
popa
xchg
mov
and
lret
xor
cli
ss
push
push
cli
adc
or
pusha
enter
sahf
ret
jnp
xchg
int
pusha
jle
xor
fcomps
sbb
sub
xchg
sub
loop
arpl
bound
mov
jns
clc
test
mov
or
outsb
pop
imul
pop
ja
rclb
cmp
xchg
cltd
mov
scas
xchg
dec
xchg
lret
pop
shll
sbb
popf
mov
iret
mov
insl
mov
push
rcl
cli
and
test
and
cli
or
dec
adc
les
xchg
cmc
cmp
popf
testl
and
leave
cmp
mov
pop
pop
std
inc
popf
int3
xor
add
xchg
push
and
pop
mov
sbb
and
dec
sbb
out
xchg
jle
rolb
out
xchg
fisubrs
inc
xchg
cltd
ret
or
mov
shll
fsubrp
lock
imull
sub
push
push
xchg
fisttpl
mov
xor
fmull
loop
les
mov
orl
or
aaa
mov
mov
popa
ljmp
int3
movsb
jecxz
lods
pop
out
fbld
sti
pop
dec
out
negb
in
aaa
add
push
mov
dec
or
or
xchg
in
outsl
cmc
push
sarb
nop
jno
pop
mov
lds
push
cmp
pop
xchg
testb
adc
sbb
push
ljmp
lcall
push
lods
dec
fcomps
mov
adc
out
lea
lods
jno
push
mov
push
hlt
das
icebp
rcrl
inc
jnp
loop
inc
mov
mov
shr
std
fistpll
push
mov
mov
addl
cld
sbb
jne
sub
lcall
mov
mov
and
fbld
xchg
adc
mov
xchg
loopne
pop
inc
jmp
test
jbe
ljmp
xchg
call
into
add
shl
imul
xchg
add
cmp
cmpsl
cmp
clc
pop
lods
stc
xchg
lods
inc
push
ss
in
jle
jnp
popa
jns
pop
popa
popf
pop
leave
mov
inc
iret
aam
addr16
pop
fwait
cmp
jle
ds
aaa
shlb
mov
or
jle
sbb
ds
idivl
xor
arpl
jg
cmp
vshufps
dec
pushl
js
push
mov
stos
add
mov
mov
add
mov
pop
int3
cltd
inc
jae
aad
push
mov
inc
cmpb
lock
sub
test
push
push
jecxz
test
das
cwtl
rcr
add
pop
add
adc
in
stos
inc
mov
mov
adc
fldenv
push
mov
sbb
cli
sub
pop
inc
fsubrl
sub
jae
dec
ret
ds
push
add
loopne
rcrb
mov
aad
std
or
icebp
enter
sbb
xchg
in
je
dec
jecxz
fldt
dec
push
and
mov
adc
testl
cld
pop
mov
cmp
mov
data16
clc
and
mov
jle
mov
pop
mov
mov
test
add
push
inc
les
dec
push
aam
xlat
clc
testl
jp
and
popf
mov
cli
and
mov
addr16
jge
xchg
cmp
cmpsl
jmp
test
dec
mov
iret
inc
pop
sbb
xor
mov
xchg
repnz
fdivl
xor
mov
mov
rclb
iret
out
addb
cmp
sbb
inc
test
sbb
sbb
xor
mov
xchg
mov
push
je
fisttpll
lds
dec
cmp
or
movsb
lock
out
fistps
add
iret
xchg
inc
mov
mov
mov
xchg
add
xor
mov
mov
aam
or
gs
pop
fimull
in
push
add
cld
sbb
xchg
cmpl
popa
inc
test
inc
cmp
int
push
clc
data16
inc
lea
xchg
dec
andb
ljmp
sbb
js
hlt
push
lret
xor
ds
sbb
daa
mov
fisubs
je
lret
or
adc
je
movsb
push
inc
inc
dec
jbe
sbb
out
ja
loop
imul
sbb
jae
jmp
inc
addr16
cwtl
iret
out
xchg
sbb
in
daa
pop
mov
loope
pop
push
repz
packssdw
loope
insl
lret
bound
pushf
divb
pop
jmp
mov
sub
and
call
ja
mov
insb
jmp
loopne
cli
mov
sub
cmp
imul
loopne
insb
out
and
sbb
fistl
dec
rclb
xor
out
sbb
xchg
jmp
xchg
outsb
in
ja
jmp
movsl
and
out
xchg
cmc
andl
cmpsl
stc
mov
and
sub
test
stc
mov
xlat
mov
test
loope
aaa
pusha
aas
lock
int3
rorb
xchg
push
sub
shr
mov
in
mov
mov
cwtl
into
mov
cmpsb
add
mov
outsl
iret
lcall
pop
ss
jp
xchg
xor
push
mov
pop
mov
cmpsb
rclb
mov
lods
push
xchg
cmpsl
inc
dec
rorb
outsl
pop
sub
int3
push
ret
jmp
adc
pop
jge
arpl
dec
mov
stos
gs
push
pop
sbb
lea
inc
loop
jle
xor
test
roll
jb
std
testl
icebp
mov
in
add
clc
ds
push
in
test
sub
imul
cmp
jb
xor
xchg
xchg
cmc
mov
and
lods
in
call
cli
jbe
add
sub
fisttps
inc
mov
inc
popf
sub
mov
mov
ret
xlat
scas
inc
in
jo
lret
pushf
mov
and
mov
xlat
mul
mov
fcoml
test
and
add
dec
lcall
out
cmp
bound
inc
xchg
adc
mov
loope
pusha
mov
and
and
dec
test
xchg
test
mov
and
fwait
adc
aas
mov
mov
test
loop
jge
xor
je
scas
pop
push
cli
test
dec
jle
lock
hlt
out
jne
sbb
fwait
loopw
aas
cmp
nop
test
loop
in
outsb
mov
xchg
add
xchg
je
out
dec
sub
cld
xchg
ss
int
cmp
test
cmc
mov
cmp
xchg
or
in
aam
mov
sbb
aam
push
shll
ss
push
aam
in
mov
fcoml
add
lock
test
dec
jl
jp
xor
push
add
cltd
adc
pop
stc
bound
mov
mov
inc
bswap
inc
shll
popa
ret
out
jp
icebp
or
and
add
pop
pop
mov
jl
fnsave
jbe
inc
mov
fisttps
clc
inc
push
aaa
out
dec
xchg
lcall
cs
or
js
aam
jne
pop
cmp
add
sub
in
pop
mov
bound
sub
mov
mov
outsb
ficompl
outsl
imul
jl
inc
lds
pop
add
sti
sti
mov
mov
xchg
jbe
cmp
mov
and
dec
std
hlt
clc
fimull
pop
dec
nop
nop
mov
out
in
int3
repnz
stos
ss
ret
cmpl
pop
cltd
lret
lahf
popf
mov
jg
fadds
push
add
xor
cmc
subl
scas
mov
inc
mov
and
mov
aaa
adc
inc
notb
and
sub
mov
lea
outsl
jge
jns
test
cld
aam
fwait
imul
xor
scas
mov
or
and
cmp
jge
int3
adc
orb
das
shlb
test
std
dec
or
cmc
insl
movb
pop
in
test
cmp
pop
push
insl
repnz
pop
sahf
outsb
arpl
dec
mov
dec
sti
divb
lcall
xchg
outsl
mov
cs
ljmp
mov
push
jl
imul
xchg
repz
in
pushl
pushf
iret
es
dec
stc
push
add
sbb
rclb
in
push
dec
test
fcompl
imul
in
test
pushf
sti
dec
sub
into
insl
popa
lds
test
ret
sub
arpl
hlt
sbb
mov
cmp
pop
inc
inc
xadd
lahf
es
jge
push
js
insb
movsb
mov
mov
and
es
fiaddl
cmp
xor
sub
stc
jb
adc
push
addr16
sbb
mov
jge
jg
dec
jg
imul
lahf
dec
testb
or
or
push
aam
jge
ja
cs
loopne
repnz
mov
test
adc
push
sahf
cmpsb
or
push
cmpsl
inc
ljmp
test
add
cmc
mov
dec
loope
arpl
into
in
or
out
xchg
mov
mov
fstps
mov
aaa
div
dec
xchg
jnp
add
and
and
or
stos
mov
pop
mov
imul
xchg
push
pop
cmp
inc
imul
add
pop
dec
rcl
mov
jecxz
nop
mov
push
sub
loop
push
sbbb
pop
repnz
push
mov
cmpsb
and
jae
fildll
rcr
fistpl
ror
lock
in
ror
idivb
pop
addr16
sbb
adc
int3
les
push
lods
xchg
and
stos
and
gs
ret
movl
jmp
clc
fcoms
addr16
sbb
or
lods
mov
push
dec
rcrl
movsl
push
mov
scas
notb
cmp
xor
fidivs
shl
inc
push
mov
dec
pop
and
leave
cmpsl
mov
or
jle
mov
in
icebp
ljmp
scas
aas
es
pop
xchg
pop
jp
bound
mov
lret
dec
xchg
and
and
jl
and
xchg
adc
notb
mov
pop
jmp
dec
testb
sarb
pop
push
loopne
outsl
adc
mov
mov
ret
and
sti
iret
les
nop
dec
add
lock
mov
mov
sbb
and
push
ret
add
pop
mov
enter
enter
push
add
enter
adc
dec
in
in
jge
add
mov
rcrb
loopne
add
mov
rorb
push
sub
mov
push
aas
aad
icebp
mov
bound
mul
or
xchg
adcl
fadds
xchg
incl
setge
push
or
mov
stos
mov
lcall
cltd
mov
loopne
sub
arpl
or
sbb
push
lea
ja
jmp
mov
jl
aad
mov
aad
pop
arpl
movsl
push
pop
push
iret
rclb
cmp
mov
test
dec
push
loope
dec
loop
lret
dec
inc
add
or
je
stc
lods
stos
daa
dec
sub
add
sub
mov
lods
cltd
in
dec
fdivrl
jb
mov
xchg
out
and
xchg
jl
in
xlat
movsl
cmpsb
jecxz
sub
mov
nop
mov
jnp
ds
push
aas
and
xchg
mov
shr
xor
and
into
sbb
sub
mov
aaa
dec
test
mov
lea
fistpl
cld
mov
inc
arpl
arpl
push
shlb
jge
xor
aaa
fcoms
rolb
mov
jp
jmp
dec
incb
ja
sub
push
roll
pop
sub
mov
cmpsl
shrl
pop
ds
enter
clc
mov
cltd
mov
sub
jo
add
test
sub
imul
sbb
test
xor
jnp
in
pop
movsb
xor
mov
jb
cmp
cmp
in
rcrl
dec
les
das
pop
out
mov
loopne
hlt
enter
pop
les
mov
add
sub
iret
jnp
push
adc
cmp
sbb
sub
movsb
cmpb
push
and
mov
daa
xor
mov
mov
mov
movsl
clc
dec
test
pop
dec
dec
dec
inc
mov
pop
cmpsl
sbb
sbb
repz
inc
push
sub
inc
lock
sbbl
sbbl
cmp
mov
push
les
or
bound
sbb
push
push
and
leavew
je
adc
lcall
repnz
leave
std
sub
mov
iret
aaa
mov
sbb
or
gs
jmp
pushf
arpl
shll
jno
mov
xchg
scas
and
std
push
push
sub
jmp
dec
fbld
js
sbb
xchg
pop
push
xchg
out
cmp
test
xchg
push
ficompl
mov
ret
shlb
cmp
repz
mov
xchg
push
push
add
fxch
xor
adc
cmpsl
sbb
in
and
mov
jo
sub
inc
test
andb
in
mov
and
add
adc
mov
lcall
nop
push
jmp
fadd
and
or
add
sub
mov
push
push
lahf
pusha
sub
add
iret
stc
loopne
xor
add
mov
mov
test
pop
adc
and
stos
jb
jae
fwait
jmp
fwait
push
xchg
sub
sub
and
daa
mov
sub
mov
loope
std
mov
call
pushl
loopw
mov
xor
mov
popf
jns
add
xor
dec
or
add
into
lods
lret
sti
sbb
and
xchg
pushf
repz
add
lahf
dec
std
loope
lcall
std
cmp
and
lret
fldt
adc
mov
es
out
popf
inc
add
bnd
cmc
adc
sbb
cmp
insb
shrb
sbb
pop
js
ljmp
mov
xor
rorb
mov
or
repz
fdivs
adc
sarb
cld
sbb
mov
fisubrl
or
stos
inc
mov
dec
sbb
es
test
cmc
jecxz
xor
pop
imul
cmp
insb
gs
push
mov
mov
push
das
arpl
cmp
xchg
jbe
mov
testb
call
dec
fbstp
xor
lcall
enter
in
mov
testb
icebp
jmp
fsub
sub
inc
adc
in
push
std
adc
sbb
mov
int
push
pop
dec
scas
movsl
jmp
xlat
idiv
lods
sub
pop
mov
out
pop
outsb
mov
bound
xchg
fwait
data16
sbb
xchg
mov
add
push
cmp
out
enter
push
or
cmc
popf
pop
push
jl
movsl
and
sub
leave
lret
in
add
adc
outsb
mov
movsl
fwait
cmp
dec
xchg
les
hlt
and
inc
cld
pop
mov
push
or
push
ds
jno
xchg
outsb
dec
mov
lods
mov
adc
icebp
jae
pop
jne
jne
pop
aaa
push
bound
dec
into
lea
movsb
insl
ljmp
add
dec
sub
enter
pop
pop
cld
imul
js
in
cmp
mov
pop
inc
mov
sub
add
push
int3
aam
mov
jns
sbb
movsl
in
das
pop
or
push
pop
dec
mov
ss
lret
pop
cmpsb
sbb
push
incl
pop
adc
push
push
xlat
adc
add
pop
cltd
cld
sahf
adc
inc
test
sub
pop
andb
dec
dec
incl
sbb
and
adc
lods
cmp
sbb
push
fmuls
xor
inc
mov
dec
mov
dec
cmp
inc
ret
xor
cmp
jge
push
xlat
mov
pop
out
stos
push
sub
lods
inc
sub
movsl
push
xchg
test
pop
xchg
int
lds
cmp
hlt
cltd
imul
pop
repz
nop
xchg
sub
repz
imul
addr16
cs
lcall
enter
lahf
nop
jp
xor
cmp
cbtw
xchg
leave
shrl
aam
mov
inc
push
mov
adc
movsb
cld
jbe
repz
les
cs
pop
fsubrs
sub
fistl
dec
mov
mov
mov
gs
dec
xor
sbb
push
aam
sub
gs
out
lret
adcb
mov
inc
jbe
xor
mov
jge
fistpll
or
stos
lcall
notb
shll
push
dec
inc
jb
sub
or
add
lret
xchg
andl
out
mov
or
add
add
out
mov
xchg
insb
ja
addr16
fstl
les
lahf
fists
jbe
ljmp
jbe
cmp
jge
sub
pop
dec
jg
leave
sbb
dec
cld
or
mov
inc
into
push
sub
sub
loop
mov
shlb
imul
lahf
fstps
and
xchg
push
shlb
call
mov
cld
jno
xor
mov
std
loop
rorb
mov
fs
imul
lret
popa
popf
push
dec
ret
cld
outsl
sbb
xor
outsl
mov
ss
inc
mov
fs
mov
sbb
loope
mov
dec
jmp
mov
cmp
xlat
enter
cmpb
rclb
test
sub
sahf
scas
adc
mov
aam
aaa
sarl
inc
sarl
fidivrs
cmpsb
lret
aad
in
or
into
pop
popf
and
inc
cmp
mov
fs
and
hlt
adc
fidivl
pop
push
lea
sbb
lret
stos
and
xchg
xchg
xorb
cwtl
mov
test
add
ja
jmp
mov
shrb
lods
loop
sarb
mov
shrb
nop
idivb
mov
xor
and
enter
mov
push
mov
mov
fcomi
sbb
leave
sbb
lods
xor
jp
cmp
out
mov
inc
xchg
pop
adc
jp
inc
sbb
movsb
mov
jg
mov
stos
out
mov
mov
pop
fwait
sbb
jns
es
push
mov
lahf
lds
mov
movsb
jno
das
and
outsl
xchg
fdivrs
lret
jl
pop
jne
push
cld
stos
add
dec
lret
cmc
addr16
adc
flds
pop
mov
push
sub
xor
dec
or
imulb
or
sarl
push
arpl
inc
testl
push
sbb
int
mov
cmp
lods
inc
repnz
mov
lret
xlat
fnstsw
shll
insb
gs
mov
fstpt
xchg
sbb
cmp
imul
test
xchg
clc
cmp
iret
pop
mov
orl
movsl
fs
inc
jge
ret
sar
lahf
jo
lret
movsb
leave
mov
shlb
inc
add
fwait
sarb
mov
cmp
or
dec
mov
scas
xor
aam
xor
lea
or
ficomps
xor
mov
mov
rol
adc
in
out
into
rol
and
jbe
push
shlb
movsb
pop
push
js
push
cld
bound
xchg
or
xor
mov
aam
inc
loop
rcr
outsl
sub
in
push
notl
sahf
xchg
aas
lods
sbb
cmp
xor
test
add
rcrb
dec
cltd
push
ja
jl
cltd
sub
lcall
loop
mov
xchg
stos
rolb
fimull
mov
pop
jl
ret
xchg
mov
repnz
inc
gs
aaa
popa
sub
mov
push
xchg
pop
sti
nopl
adc
pop
stos
adc
in
mov
jle
movsb
xor
xchg
mov
cmpsb
andb
sub
lea
push
jg
movsb
mov
or
out
sub
cmpb
add
sub
dec
jge
jg
aad
dec
push
repnz
aaa
inc
mov
push
shl
sub
ja
cmpsb
cmp
dec
cmp
xchg
cli
mov
roll
iret
dec
call
push
push
cwtl
and
xchg
dec
dec
jp
cs
or
jle
jbe
xor
test
aaa
xchg
cmpsb
cli
push
or
mov
sti
mov
jo
mov
imul
xor
fwait
sbb
lahf
cmp
jg
loop
movsb
out
sbb
adcl
jle
jbe
cld
jne
cwtl
out
xchg
mov
test
aas
addr16
bound
mov
jne
mov
imul
cld
repnz
icebp
cltd
out
icebp
dec
rorl
movsb
inc
sub
sbb
cmp
int
test
adc
fs
fisubrl
xchg
daa
lahf
pop
icebp
push
mov
mov
jl,pt
fsub
or
ljmp
adc
fs
shlb
sub
sti
cld
cmpsl
pop
scas
add
add
adc
sub
pop
jns
subb
xor
lds
and
shrb
adc
insl
iret
fistps
pop
pushf
xchg
mov
mov
xlat
sub
xchg
fildll
insb
das
sub
add
sub
js
adc
lods
pushf
mov
mov
loopne
into
movsl
cmpsb
ret
cmp
mov
stos
mov
jmp
movsl
mov
adc
inc
lea
sub
or
movaps
aam
rclb
sbb
xorl
xchg
test
js
mov
adc
into
stos
ret
orb
stos
icebp
mov
mov
jp
xchg
into
leave
cltd
fdivrl
mov
out
push
xorl
inc
jne
jae
inc
cmp
push
sbb
pop
fs
push
add
xchg
int3
jne
xchg
and
out
ss
or
ljmp
jmp
fwait
test
push
jb
popf
mov
repnz
out
imul
pop
sub
mov
nop
scas
jne
mov
push
fmul
leave
aam
dec
insl
jl
test
xchg
sbbl
fstps
sbb
inc
cmp
xchg
mov
sub
xchg
lahf
push
mov
roll
pop
rorl
rcll
mulb
push
fcomps
fcomp
inc
in
jmp
addl
mov
lret
clc
jne
aam
and
clc
aas
mov
mov
pushl
pusha
adc
loope
mov
adc
xchg
jne
stos
and
shl
sarb
or
subl
jbe
push
jno
stc
add
jge
cwtl
cs
pop
ficoms
popa
fnstsw
dec
into
mov
and
add
or
je
dec
int
push
imul
les
mov
add
bound
cmp
hlt
fimuls
pop
pop
sub
push
push
sub
push
mov
or
jl
push
ja
mov
mov
in
fstpt
imul
sub
push
sahf
xchg
das
icebp
stos
lahf
push
or
mov
std
jmp
imul
fsub
andl
sub
out
dec
jmp
mov
outsb
sbb
rcr
cld
mov
mov
xor
push
push
cmp
leave
pop
dec
ljmp
jb
je
xor
cmp
loopne
fisubrl
test
leave
push
cmp
mov
adc
fs
pop
clc
lret
sub
sbb
roll
push
mov
stc
sub
fisttpl
mov
cmpsl
or
fs
cmc
cmc
jno
mov
adc
sbb
and
daa
pusha
cltd
add
dec
outsl
xchg
lret
movsb
jbe
dec
fwait
sub
fst
xor
mov
mov
add
sub
mov
fbld
xor
xchg
into
jbe
pop
sub
or
or
xlat
lods
clc
push
sub
cmp
push
ret
scas
mov
mov
popf
push
test
jl
cmp
movsb
jno
jo
das
in
es
and
fdivrp
jno
lahf
sub
data16
adc
mov
sub
subb
mov
push
push
sbb
fxch
ret
js
xor
push
mov
add
mov
inc
out
dec
push
add
cld
pop
in
test
mov
cmp
mov
adc
fisttps
cmp
sbb
ja
mov
pop
jbe
popf
cmp
in
pop
mov
scas
clc
cmp
cmp
or
push
movsb
pop
sahf
orb
jg
shll
aaa
jmp
andl
sbb
mov
shl
mov
jmp
dec
and
sbb
fisttps
push
insl
into
ljmp
mov
sbb
andl
ret
jmp
addr16
or
shll
repz
test
jecxz
inc
xchg
sbb
pop
dec
int3
jmp
pop
push
and
lods
adc
adc
xlat
pop
xor
lahf
or
mov
cmp
inc
lock
jp
outsb
or
cmp
mov
int
lretw
inc
ljmp
pop
cmc
std
push
sahf
js
cwtl
out
cltd
or
mov
insb
dec
out
cli
mov
dec
gs
inc
rcl
add
in
cmp
mov
dec
push
push
lods
sub
pop
and
movsb
out
dec
add
pop
aad
push
mov
lock
jg
jecxz
xor
or
jns
test
lcall
inc
mov
loop
repz
mov
ja
push
sub
movsl
mov
mov
rol
out
test
pusha
or
sub
lods
jle
cmp
aam
jmp
int
xchg
push
push
adc
or
xchg
stos
pop
sbb
outsl
sti
dec
xor
fwait
mov
dec
cld
lods
rolb
or
dec
mov
cmc
xor
sahf
jl
ja
adc
sahf
rclb
push
dec
out
inc
addr16
xchg
sti
pop
or
out
popa
add
push
inc
cmp
in
movsl
mov
es
testb
xchg
inc
lahf
clc
imulb
xchg
sti
xchg
in
fnstenv
lcall
and
scas
push
xor
xor
add
pminsw
mov
jl
add
les
jl
xchg
mov
mov
xchg
adc
sarl
sahf
lds
and
outsl
mov
jmp
xor
jo
sub
jns
ja
call
push
push
xchg
push
mov
push
push
or
out
out
mov
stc
pop
mov
shrd
jecxz
push
ret
divb
fisubl
fnstcw
adc
rolb
adc
in
xchg
fidivrl
jnp
add
mov
out
cmp
clc
mov
aaa
xchg
push
rol
cli
mov
dec
xchg
iret
xchg
jb
pushf
xor
xor
inc
inc
psraw
call
add
jg
pusha
add
pop
lods
sub
divb
mov
addr16
notb
add
call
jl
lahf
mov
jge
mov
sub
and
sbb
xlat
or
imul
imul
mov
ss
cwtl
movsb
ret
cltd
adc
sbb
pusha
dec
lods
pop
mov
sub
ljmp
pop
jbe
sub
int3
mov
ret
mov
imul
dec
and
adc
xchg
mov
mov
dec
dec
xchg
icebp
sub
ss
pop
push
pop
loop
adcb
dec
jg
cmp
andb
push
imul
js
pop
scas
cli
sub
enter
fldenv
jmp
mov
mov
inc
jmp
hlt
jmp
xchg
lahf
in
stos
push
fmuls
mov
mov
jg
into
push
bound
xchg
jno
enter
aaa
jnp
rcl
sbb
daa
lods
xchg
inc
mov
dec
rolb
or
int
mov
xor
pop
jl
push
das
loopne
negb
stos
out
iret
imul
push
dec
xor
cmpl
cs
add
fdivl
stc
fistl
push
insl
jno
icebp
pop
mov
lret
dec
out
jnp
xchg
xlat
push
inc
pusha
sahf
fists
test
nop
inc
jae
jbe
fwait
imul
cltd
mov
div
mov
and
xchg
cmp
xchg
jne
cmp
ret
outsb
dec
test
scas
dec
popl
loop
pop
int
dec
loop
fcomps
scas
fmull
loopne
or
add
push
inc
dec
lcall
mov
push
and
sub
aam
xor
inc
inc
jmp
lret
inc
movsb
add
daa
imul
rorl
stc
pop
stos
loopne
and
fxch
jbe
mov
jge
sub
pop
mov
mov
aam
inc
cmp
arpl
xchg
test
push
adc
push
and
inc
pop
out
test
popf
add
das
inc
addb
pop
add
jge
push
cmp
incb
stos
push
cltd
mov
movsb
lods
imul
pushf
fwait
dec
xchg
push
pop
jecxz
adc
sbb
or
push
add
push
test
out
and
mov
pop
aam
in
gs
out
jae
cltd
mov
adc
sub
xorb
xor
cmp
outsb
dec
inc
or
rclb
lcall
aaa
pushf
arpl
push
pop
nop
mov
wrmsr
fs
jmp
xchg
ds
xchg
fstpl
push
test
cmc
mov
aam
cltd
push
lcall
gs
repnz
cld
icebp
mov
loopne,pn
push
out
xchg
mov
cmp
fsubrp
xchg
pop
imul
aaa
jmp
or
adc
dec
inc
adc
jg
push
jo
repnz
lds
addr16
jp
dec
cmp
in
pop
jae
sbb
sub
push
mov
lcall
mov
or
mov
adc
pop
or
jmp
push
clc
or
out
pop
aam
movsb
pop
cld
xchg
adc
mov
lods
mov
mov
loope
push
or
sahf
add
loopne
jno
jnp
outsb
pop
xchg
dec
jmp
sbb
push
ror
andl
frstor
fimuls
xor
push
sti
rolb
mov
lds
cmp
loop
mov
stc
jnp
out
and
aad
rcr
or
adc
pusha
mov
or
fldenv
mov
ret
push
jge
cs
enter
popl
daa
in
cmc
pop
dec
test
jne
dec
sahf
xor
js
inc
adc
add
xchg
jae
add
iret
sub
cmpsl
jo
xchg
sti
xchg
push
mov
jp
or
in
inc
and
add
jle
add
into
pop
faddl
rcll
and
scas
dec
mov
jnp
stc
sbb
sub
call
mov
aad
mov
xor
int
aas
adc
pop
into
cmp
xchg
or
mov
xor
adc
test
mov
lret
movsl
pushf
mov
enter
stc
lahf
lret
lcall
out
or
xor
pop
push
test
call
push
repz
cld
mov
pop
movb
jle
lods
mov
setbe
jno
ljmp
out
and
das
ljmp
leave
loopne
and
mov
jae
jp
movl
jecxz
jbe
and
jns
js
mov
pop
daa
dec
lahf
jno
push
jns
mov
scas
mov
mov
cltd
sbb
repnz
jle
add
jle
xor
ficoms
aaa
mov
cmc
fwait
dec
xchg
in
mov
lret
stc
xlat
mov
push
mov
cmpl
lods
mov
rep
sysexit
sbb
ja
adc
sub
mov
jnp
lahf
jbe
or
movsb
ss
cli
mov
or
lret
push
inc
in
repnz
insb
mov
cmp
mov
cwtl
cli
frstor
sbb
subl
push
mov
sti
mov
or
sub
std
jp
add
mov
sarl
mov
jg
inc
aas
dec
and
sbb
in
mov
sub
cmpsb
xorb
sub
push
out
sub
and
push
movsl
bound
dec
nop
dec
iret
xchg
inc
fs
daa
sub
imul
lods
pop
sub
lret
and
xor
lock
cmp
push
mov
imul
xor
xor
data16
push
fwait
inc
js
fsubs
and
ss
imul
mov
mov
xchg
mov
jbe
ljmp
loop
in
insb
cld
out
lcall
cwtl
ljmp
cs
fistpl
jae
jl
pop
sbb
andl
ror
mov
stos
dec
mov
mov
icebp
push
pop
cmpl
in
outsl
or
adc
xor
shll
ds
pop
mov
mov
push
out
jmp
dec
negb
sub
mov
push
xor
xchg
push
sub
pop
add
out
and
popa
sub
test
jo
mov
adc
jno
in
and
cmpb
xchg
xchg
cmovnp
movsl
push
bound
int
mov
cmpsl
or
pop
and
fstpl
inc
push
xor
test
and
xor
cwtl
pop
ds
xor
adc
shlb
sbb
sahf
sub
ja
add
mov
loopne
xlat
ret
fisttps
add
adc
stos
xlat
cwtl
jns
mov
pusha
mov
loop
xchg
inc
imull
enter
je
and
inc
jge
dec
loop
pusha
into
cmp
inc
daa
mov
sub
and
data16
pop
sub
or
sti
out
test
imul
cmp
imull
and
mov
scas
sarl
pop
xlat
repz
leave
dec
mov
mov
test
inc
nop
jns
aam
pop
imul
mov
xchg
push
insb
mov
jecxz
inc
mov
lret
jp
test
ja
daa
ljmp
dec
mov
ret
stos
inc
jl
lcall
xchg
push
daa
test
cmp
mov
jnp
xchg
xchg
shll
inc
popa
pop
sub
mul
icebp
mov
icebp
mov
mov
ret
mov
pop
shll
sub
test
sbbl
cmp
andb
test
and
stc
fistps
xchg
and
xor
sarl
cltd
sarb
ret
jl
std
inc
in
jb
jmp
pushf
pop
cmp
fsubs
cmc
ja
ret
mov
data16
lds
scas
mov
in
ficoml
mov
mov
jge
lods
pusha
adc
test
mov
leave
lahf
pop
out
fwait
adc
mov
adc
jmp
xchg
js
outsb
loope
jno
arpl
test
insl
xor
fisttpll
fmuls
insb
out
cmp
inc
mov
pop
addr16
jno
call
or
cmpsl
push
out
add
adc
sbb
fmuls
xchg
or
mov
rcr
xchg
in
push
lods
jne
icebp
cmp
sbb
pop
neg
xchg
pushf
aas
testb
or
jae
pop
out
ret
pop
cld
jns
mov
stc
and
add
fcoms
or
xor
push
sub
dec
and
add
popf
cmpsb
mov
inc
jnp
xor
stos
frstor
repnz
movsb
outsl
mov
jecxz
ss
ret
test
fld
sbb
shll
dec
mov
cmp
mov
imul
inc
and
mov
daa
push
push
dec
ret
sbb
push
data16
mov
mov
push
fs
push
jnp
mov
jp
push
iret
fcomip
mov
rclb
cmpsb
xchg
sbb
scas
cmp
push
ret
out
adc
sbb
cwtl
lcall
into
pop
cmc
add
dec
jbe
das
mov
je
les
xor
jbe
cmpsb
out
fidivl
aad
sbb
xor
leave
jno
insl
loopne
push
das
dec
mov
les
inc
getsec
fimull
in
arpl
cmp
xlat
ret
jnp
cltd
sbb
push
xchg
push
fs
jp
pop
pop
sbb
das
push
ss
pop
sahf
pop
sbb
and
jge
sub
gs
rcll
movsb
or
xor
inc
hlt
add
fwait
das
ja
xor
jae
cmpsb
inc
or
push
push
test
jp
sbb
sub
cmc
mov
test
aas
cmp
xchg
sbb
es
ja
xor
mov
lahf
fdivrl
sbb
sbbb
and
imul
aam
lahf
xlat
sbb
aas
mov
dec
scas
stos
das
or
ret
stos
inc
aas
cmp
adc
adc
int3
sbb
adc
sbb
adc
imul
xchg
adc
test
nop
cmp
push
pop
addr16
hlt
xor
and
cmp
mov
faddp
in
jecxz
out
dec
daa
or
push
and
adc
lds
cmp
or
and
out
inc
xchg
add
jnp
shl
mov
push
push
or
aaa
push
inc
jne
aaa
cmpsb
add
repnz
xchg
popf
inc
mov
pop
xor
ljmp
stos
and
subb
insb
scas
test
jnp
cwtl
mov
xlat
sarb
ds
sbbb
shlb
or
jge
out
jg
inc
es
sub
jne
cmp
movsl
rorl
dec
jecxz
clc
mov
xchg
movsb
data16
out
add
inc
lods
ja
jo
cmp
les
pop
jb
fcmovnb
xchg
stc
mov
push
sti
repnz
loop
ljmp
pushl
sbb
enter
les
test
cmp
xchg
clc
popf
jmp
mov
mov
sbb
jnp
call
mov
sti
pop
jnp
cld
fdivl
adc
aad
lds
stos
ret
jg
add
out
sahf
jecxz
popa
xchg
or
sub
mov
clc
ss
or
out
jmp
or
sbb
in
jo
movsb
pop
dec
mov
arpl
lods
cli
dec
pop
push
push
xchg
mov
inc
jns
inc
fiaddl
xor
aad
or
cmp
mov
mov
mov
imul
xchg
mov
cmp
jle
inc
fadds
insb
inc
std
xor
aaa
lea
inc
or
arpl
pop
sub
std
mov
jecxz
lds
jae
mov
cmpb
cmp
div
add
cmp
push
jge
and
or
or
dec
sahf
mov
neg
push
rcll
ljmp
mov
ret
les
arpl
cmp
sbb
repnz
add
sub
xor
sbb
or
and
jb
mov
pop
push
xchg
aad
dec
fwait
mov
movsb
icebp
or
sbb
dec
lds
cmp
test
push
imul
push
jns
scas
adc
test
hlt
sbb
cmp
inc
jo
test
fidivrs
mov
rcrb
xchg
jbe
out
dec
call
jl
inc
adc
xchg
loope
inc
insb
adc
loope
std
mov
mov
fsubs
pop
outsl
cmp
popf
fstps
mov
sbb
mov
sbb
and
pop
mov
xor
jmp
cli
test
add
aaa
sti
mov
xchg
cltd
cmp
mov
in
cs
xchg
cmp
into
rorl
push
xor
leave
into
rorb
orl
inc
lea
adc
jle
pusha
pop
fdivp
cld
insl
jp
in
mov
mov
pop
repnz
cmc
xchg
push
xor
int
jl
jno
js
mov
sbb
jnp
int
jp
cwtl
and
cli
and
jcxz
iret
das
push
rcr
push
push
push
ret
mov
fs
je
dec
insl
fstp
and
xchg
testl
sahf
fdivrl
ja
ss
and
mov
mov
fwait
loope
adc
rcrl
push
sti
fstl
push
movaps
insb
push
mov
xor
inc
out
xor
lock
pushw
pop
testl
dec
or
insb
mov
gs
inc
lock
mov
sbbl
js
cwtl
sub
sub
gs
repnz
sub
dec
mov
imul
adc
mov
mov
mov
adc
push
sub
cmp
mov
aam
xchg
or
mov
adc
jge
je
mov
in
sub
loop
notl
inc
sbb
xchg
sub
int3
shrb
mov
jb
lock
int
out
sub
pop
les
popf
dec
mov
inc
mov
adc
mov
pop
loopne
lds
jns
sbb
in
jp
sub
mov
xlat
sub
push
cmp
pop
pop
fsubrl
xor
out
call
fimuls
aam
ss
test
mov
mov
adc
scas
mov
jo
cmp
pop
pop
test
in
mov
sbb
jno
popf
mov
aas
sub
daa
cmp
jmp
and
sbb
push
cmp
add
sbb
lahf
xchg
dec
ds
loopne
fiaddl
aam
mull
rcrl
pop
ss
out
mov
push
push
pusha
divb
xlat
adcl
insb
scas
out
adc
adcl
xchg
aaa
fdivrl
lahf
leave
adc
insl
inc
punpcklwd
adc
data16
sub
shlb
clc
add
and
enter
and
sub
xchg
add
adc
in
dec
lret
push
xorb
pop
lahf
cmp
aad
xor
je
mov
sub
enter
data16
xor
sub
fldcw
in
daa
mov
stos
and
stos
dec
mov
adc
sti
outsl
int3
xor
mov
mov
rcrl
mulb
cmp
sti
mov
jg
ja
cmp
push
xchg
push
inc
sub
dec
jl
loopne
add
rcpps
pop
adc
sub
mov
and
jne
cmpsl
cmp
stos
sbb
inc
movsb
in
mov
xlat
xor
xchg
and
lret
and
mov
shlb
mov
dec
mov
xor
rclb
pop
sbb
mov
out
push
fmuls
pop
fldt
lds
xchg
xor
cmp
dec
fnstsw
mov
sub
mov
dec
inc
and
dec
adc
ja
cld
inc
rorl
and
sbb
iret
fidivs
js
testb
or
dec
push
xchg
enter
rcll
or
fisubrl
icebp
sub
dec
mov
pushf
and
pop
pop
and
insl
stos
mov
xor
mov
mov
mov
outsl
jmp
rol
cmc
mov
adc
adc
enter
xchg
std
xchg
mov
add
sahf
xchg
jge
or
test
js
fcomps
lds
shlb
inc
test
sub
xchg
je
xor
lret
mov
sti
lods
or
mov
fsubl
lret
inc
movsl
xchg
xor
push
cs
das
sub
jb
stc
push
lret
iret
push
pop
dec
pushf
in
test
push
xchg
sub
roll
jg
xchg
add
nop
iret
xchg
inc
hlt
out
icebp
lods
jmp
loop
aaa
pushf
pop
add
pop
and
inc
lret
pop
das
lock
fbstp
movsl
lock
mov
mov
sub
jbe
add
call
and
cld
mov
int
cmpsl
and
stos
jb
and
mov
pusha
inc
outsb
push
pop
pusha
repnz
mov
enter
xor
fwait
xor
aaa
aaa
imul
shlb
rolb
das
and
mov
cmp
jo
xchg
xchg
es
lea
pop
iret
push
icebp
ret
out
test
insl
xchg
jns
adc
rol
mov
push
mov
lods
sar
mov
adc
lret
pop
shlb
addr16
sbb
dec
pop
adc
mov
std
pop
inc
sub
arpl
inc
nop
inc
int
rcl
mov
jne
fisttpl
cmp
adc
fs
test
gs
jbe
cmpsb
and
jge
jb
xor
dec
dec
jmp
leave
pop
mov
ret
push
pushf
dec
cmp
dec
sub
xchg
jne
add
inc
xchg
out
jmp
cmpsb
push
fdivl
inc
test
insw
ljmp
notb
pop
mov
xor
insb
fldl
jae
jne
fs
gs
pusha
sarl
mov
sub
mov
aad
aas
inc
aad
pop
push
mov
hlt
jno
popf
stos
cmp
push
daa
jnp
les
cmc
push
sub
data16
or
jns
inc
xchg
add
add
jns
aas
popa
or
mov
pop
pop
gs
in
std
pusha
inc
cmp
inc
out
pop
mov
adc
mov
in
dec
push
mov
mov
cmp
pop
dec
adc
pop
bound
idivl
adc
rorb
nop
stos
adc
add
jno
jns
xor
outsl
fwait
int3
pushf
gs
nop
push
mov
aam
adc
sbb
ljmp
pop
add
add
add
mov
jle
push
sarl
add
paddd
mov
lcall
stos
cmp
inc
call
mov
sbb
pop
andl
repnz
clc
xor
es
mov
jno
iret
or
mov
mov
jecxz
cmp
repnz
daa
popf
out
mov
pop
ja
inc
xchg
cmp
jb
or
out
repnz
fisttpll
and
in
mov
pusha
add
add
or
jbe
jge
mov
test
mov
sahf
fmulp
adc
dec
loop
lahf
ret
xor
push
cmp
push
xchg
hlt
inc
icebp
je
add
cmpsb
sti
push
iret
cmc
lea
adc
iret
pop
push
imul
sahf
and
xor
cmc
mov
mov
test
dec
jnp
lods
push
imulb
sub
mov
or
jp
popl
add
loop
xor
mov
dec
enter
xchg
jp
push
fisubs
ret
xchg
ljmp
cmc
daa
rcr
jns
push
xchg
aas
or
cmp
outsb
pop
jno
std
movsl
fbld
xchg
das
mov
dec
inc
cltd
xorb
pop
das
xor
push
outsl
cmpl
xor
adc
int3
fdivrl
mov
cli
xlat
das
inc
xor
das
jmp
push
sub
mov
insl
js
xchg
testb
in
in
das
jmp
mov
adc
arpl
xor
jl
pop
xchg
sub
jo
mov
lods
daa
inc
adc
in
pop
rolb
push
int3
ret
pop
andl
pop
mov
xchg
xlat
jle
sub
aaa
ffree
outsb
popf
sub
or
or
push
mulb
stos
jp
mov
aad
jge
inc
jbe
sbb
lret
mov
gs
orl
lcall
or
js
inc
jne
pushf
cmp
add
sbb
pop
push
ljmp
out
aam
std
adc
jg
xor
jns
sbb
call
jg
push
jmp
mov
mov
test
push
leave
inc
icebp
mov
adc
imul
addr16
popf
jo
cmpsl
jmp
rcr
mov
sti
sub
daa
mov
xlat
mov
dec
daa
in
in
cmp
aaa
gs
arpl
cmp
stos
or
cltd
daa
or
fstpl
adc
mov
mov
xchg
mov
lahf
fstps
call
mov
loopne
in
scas
ljmp
or
push
add
dec
fisttps
inc
int
aam
es
enter
dec
shrl
sub
cmp
clc
popa
pop
mov
das
imul
pop
mov
add
jne
fbstp
mov
ss
fldcw
lahf
ss
sub
dec
in
mov
pop
sub
ja
ds
out
insl
push
xor
lock
in
xlat
dec
arpl
out
mov
and
ljmp
dec
xchg
inc
fwait
sbb
jne
add
ret
int
cmp
lret
mov
fs
lret
mov
cmc
cli
aaa
ljmp
jmp
inc
jl
lds
cmpsb
int3
adc
sbb
push
les
ret
xchg
push
lods
bound
xlat
inc
or
inc
pop
inc
fxch
loopne
sub
inc
loopne
inc
mov
mov
into
gs
pop
jle
adcl
shlb
pop
mov
sbb
sbb
mov
test
xchg
mov
mov
mov
cli
inc
mov
xchg
test
jo
pop
data16
push
or
pop
aad
mov
ds
mov
js
or
in
mov
add
sbb
sub
mov
js
test
in
js
sahf
scas
cmpxchg
lds
data16
and
shlb
hlt
mov
dec
xor
sub
inc
jge
mov
push
cmc
movsb
je
lcall
shlb
push
enter
insl
fsts
imul
mov
and
xor
cli
push
adc
cs
daa
mul
mov
insb
pop
pop
scas
leave
lcall
andb
jecxz
std
loopne
sub
xchg
sub
icebp
mov
sbb
mov
es
mov
inc
jecxz
xchg
movsb
lcall
js
inc
lods
adc
inc
xchg
cmpsb
jns
push
popf
mov
lods
imul
pop
lcall
lock
sub
mov
sub
pop
lret
mov
jns
fdivrl
push
xorl
insl
aam
mov
test
out
cmpsl
sti
push
gs
mov
mov
insb
sbb
fwait
aas
jp
scas
mov
pop
daa
test
xchg
ja
movsl
lcall
and
decb
and
mov
jp
add
mov
mov
les
sahf
sub
test
sarl
stos
inc
scas
outsb
dec
push
stos
in
testb
daa
mov
jl
lcall
adc
jne
sahf
mov
or
stos
cmpsl
push
dec
push
push
insl
call
jecxz
dec
and
aaa
adc
data16
ret
cwtl
sbb
test
lcall
mov
xlat
push
movsb
inc
mov
mov
xchg
aad
and
icebp
loope
out
rorb
xchg
dec
add
lds
xchg
fnstsw
clc
pop
xchg
xor
xchg
dec
ret
sbb
jo
popa
jo
mov
sbbb
cli
or
cmp
push
lock
repnz
je
in
pop
fucomp
cli
mov
mov
sub
jmp
imul
and
ljmp
add
sub
repnz
or
bound
xchg
jne
pop
jns
lea
in
pop
xor
outsb
mov
mov
push
dec
neg
push
sbb
xor
mov
out
ret
or
xchg
loopne
cmpsb
aas
fisttps
mov
mov
nop
pop
sbb
xor
xor
mov
jl
icebp
in
mov
sbb
mov
fs
jnp
fisubrs
xor
lcall
aas
xlat
lret
shrb
std
mov
xchg
movsl
lods
xorb
mov
les
sub
jbe
jmp
fmuls
mov
mov
in
cmc
push
xor
mov
sub
pop
inc
adcb
aas
inc
icebp
mov
jnp
push
cmpsb
mov
pop
rcl
pop
mov
or
jl
xchg
fsubrl
mov
or
cs
gs
xchg
xchg
pop
jp
jns
jle
test
add
jecxz
out
push
rcrb
repz
add
rep
xor
push
in
mov
popa
xor
inc
fsubl
pushf
or
xchg
and
inc
inc
sahf
shr
mov
lea
jbe
xchg
movsb
jle
shrb
mov
stc
mov
dec
js
jae
jge
repnz
mov
fcoml
addr16
inc
inc
jge
pop
inc
xchg
or
fisubrl
pop
repz
push
fnstsw
and
sbb
sub
mov
aaa
repnz
enter
and
lret
mov
add
sub
and
xor
xor
xor
insb
cmpsl
scas
filds
jae
push
jne
fldcw
add
push
in
cmp
or
out
mov
mov
mov
fs
mov
ja
mov
adc
int3
adc
test
xchg
sbb
dec
pop
mov
jbe
add
dec
xchg
push
jbe
mov
popa
jns
push
jnp
outsl
leave
xor
sub
pop
out
sbb
cmp
mov
xchg
in
mov
xchg
push
fiadds
xor
pop
cmp
pop
sbb
stos
icebp
iret
jne
or
pcmpeqw
orl
sbbb
jne
loop
sub
fwait
add
lcall
ja
mov
jle
clc
dec
imul
out
jne
ja
std
mov
add
out
push
repnz
dec
mov
cltd
xlat
mov
das
shrb
dec
lahf
add
push
out
test
nop
adc
xchg
fwait
lret
jo
pop
popaw
xchg
leave
sub
push
clc
add
bnd
jg
mov
pop
mov
sbb
out
pop
inc
dec
mov
sbb
pop
mov
pop
xchg
test
lock
sbb
pushf
and
fdivrl
sub
adc
push
sarl
hlt
repnz
out
and
fstpt
out
push
add
xchg
in
ljmp
in
inc
sahf
add
test
repz
xlat
and
test
fistl
jnp
mov
fcoms
jge
hlt
sub
pusha
in
push
inc
bound
les
mov
mov
xlat
outsl
pop
jae
mov
cmpsb
cmp
pop
xchg
sub
in
sbb
xor
jmp
clc
mov
sbb
sub
jecxz
and
rorb
xchg
mov
dec
fcomps
mov
inc
adc
dec
mov
cmpsb
mov
inc
jno
addr16
stc
ljmp
nop
dec
aam
lods
data16
jp
aad
outsl
fimull
xchg
in
nop
addr16
das
jns
subb
mov
sbb
aad
arpl
pop
fnstenv
jbe
push
mov
fiadds
jg
mov
or
test
mov
sbbb
sub
daa
out
testb
scas
push
inc
pop
cmp
sbb
mov
add
test
js
push
ja
jae
ja
lock
mov
sub
dec
sub
or
movsb
jnp
mov
dec
sbb
lret
pop
mov
mov
push
sbb
and
sbb
jmp
cld
out
sbb
sub
xlat
push
inc
mov
stos
in
lahf
xor
dec
adc
adc
andl
es
pop
loope
ficoms
adc
pop
push
fstps
inc
test
in
imul
out
add
lahf
dec
je
push
dec
xor
stos
jecxz
gs
ja
jg
xchg
loope
sub
jnp
sbb
mov
aad
sub
or
pop
shll
sarb
jl
xchg
out
sub
push
pop
push
xchg
idiv
imul
pop
dec
stc
pop
dec
ds
sbb
fwait
scas
popf
jg
in
xlat
movsb
sarb
lret
mov
xchg
lcall
lahf
sub
rcrb
push
push
cmp
lahf
xchg
call
adc
pop
sahf
cmp
into
nop
mov
and
push
cwtl
cmc
loopne
imull
mov
pop
repnz
insb
cmp
test
and
jnp
or
xlat
add
shlb
pop
outsl
repz
sbb
or
push
daa
clc
ljmp
xchg
jmp
jp
ret
gs
mov
into
add
jge
orl
xchg
inc
mov
mov
in
ror
push
mov
aas
xor
lods
test
cs
dec
xor
lret
das
xchg
jne
in
mov
stos
xor
xor
lret
scas
lock
cmp
dec
inc
pop
or
clc
arpl
lods
into
xchg
fcmovbe
sbb
ficomps
rolb
mov
adc
daa
jne
shrl
dec
test
add
mov
stos
lds
fs
sub
repz
out
fs
or
leave
ja
xor
fwait
xor
inc
lcall
fsts
jmp
push
adc
dec
xorb
jne
or
add
stc
push
stos
inc
sub
gs
arpl
xor
daa
mov
fcoml
xchg
cmp
dec
insl
cmc
insl
xchg
add
and
jge
nop
adc
rorb
test
test
std
insl
jl
pop
mov
cld
sub
mov
dec
add
mov
in
es
jnp
push
xchg
inc
imul
outsb
cmp
leave
push
inc
sbb
mov
popf
sbb
push
mov
lods
inc
mov
ret
mov
shlb
mov
fbld
inc
adc
pop
adc
dec
adc
lds
sbb
repnz
xchg
insb
cld
loop
cmp
pop
mov
jne
cmp
jb
int3
pop
cmp
iret
jle
inc
sbb
cmp
push
inc
push
add
sti
test
push
pop
decl
mov
pop
mov
sub
imull
push
sub
jg
imul
jp
jae
xchg
and
rcr
jnp
adc
push
mov
sub
data16
sub
scas
jae
sub
mov
pop
push
imul
in
test
jno
pop
inc
mov
mov
fdivrs
jb
je
enter
imul
pop
cmp
je
inc
or
push
cs
in
std
inc
cmpsl
out
mov
pop
push
loope
dec
jnp
inc
lock
push
hlt
dec
add
xchg
js
cwtl
xchg
pushf
into
data16
cmpsl
rcrl
sbb
xor
loop
mov
loop
imul
mov
mov
add
cmp
xchg
jo
cmc
aad
lods
test
scas
inc
adc
loopne
dec
push
scas
adc
cli
ljmp
out
lret
shrl
das
dec
mov
dec
xchg
mov
rorl
inc
test
push
push
bound
imul
outsl
sbb
xchg
sbb
mov
xlat
mov
jmp
xchg
push
mov
js
insb
out
mov
xor
shrl
pop
pop
aad
lds
ficomps
add
dec
dec
mov
gs
mov
je
mov
push
out
sub
xchg
fiadds
or
mov
in
cmpb
jae
push
xor
repnz
imul
or
ds
push
xchg
or
dec
stos
cmp
cmpsl
mov
jnp
loope
subb
fs
enter
cld
mov
inc
mov
fxch
push
cmpsb
ret
fwait
jge
popf
test
leave
inc
dec
jmp
ja
push
jnp
jb
cmp
pop
mov
jle
fmul
popa
jg
loop
mov
xchg
mov
push
ret
stos
mov
repnz
add
jae
nop
outsl
push
fs
mov
inc
outsl
cmp
daa
pop
rorl
cmp
loope
xor
inc
push
or
adc
push
add
mov
gs
pop
add
das
pop
aad
cs
test
xchg
mov
sbb
inc
fs
lods
jmp
add
mov
dec
push
lret
fnsave
stc
lods
push
and
mov
mov
icebp
fcom
ret
ret
push
mov
mov
insl
cmc
notl
xor
stos
addr16
sbb
sbb
lock
pop
push
dec
xchg
stos
push
push
mov
jecxz
pop
movsb
arpl
pop
mov
mov
in
insb
jo
cmp
xchg
test
test
cli
or
xchg
test
xor
stc
pop
into
add
or
out
dec
fs
cli
fisubs
adc
jns
bound
mov
inc
pop
cmp
jbe
add
mov
insb
xchg
push
lret
xor
cld
lcall
in
cltd
sbb
call
inc
cmpsl
les
rcrl
call
movsb
inc
mov
mov
xchg
push
out
mov
dec
lahf
imul
aas
les
bound
fmull
sub
ja
loope
xor
ss
insb
or
push
cmpsb
out
pushf
jmp
mov
jl
stos
shll
decb
test
cmp
imul
jecxz
sbb
push
insl
int
test
insb
test
movsl
cwtl
mov
lea
jge
push
cmp
inc
xchg
jecxz
jg
popf
mov
mov
cmc
stc
fcmovnu
ficoms
nop
daa
in
sbb
pop
or
push
push
xchg
xor
adc
mov
lahf
hlt
sahf
movsb
pop
adc
nop
inc
mov
sbb
out
mov
in
imul
repz
push
je
fdivrs
popa
cmpsb
movsl
jge
sbb
cmp
push
pop
mov
pop
enter
add
dec
mov
jnp
dec
addr16
movsl
out
cld
fwait
ljmp
push
inc
negl
sub
fbstp
enter
push
jae
inc
movsb
scas
adc
ljmp
sbb
push
push
iret
sbb
push
lds
and
mov
pop
mov
fsubs
and
mov
mov
xlat
mov
fmul
adc
mov
rcr
hlt
adc
push
dec
clc
das
vandpd
arpl
sub
sbb
pusha
fsubr
les
addb
push
fpatan
out
lods
stc
push
mov
dec
imul
repz
pop
adc
mov
rdseed
mov
dec
popa
mov
cmp
mov
push
jnp
cmp
out
mov
popf
xor
mov
enter
push
ffree
xlat
sbb
and
int3
popa
fnstcw
inc
add
mov
push
and
ljmp
mov
mov
cmp
movsb
sub
in
jnp
sbb
cli
int3
dec
mov
push
cltd
pop
loop
and
leave
add
mov
lods
fsts
xor
mov
sub
addr16
adc
cmc
in
popa
les
jg
sub
pop
or
ficoms
mov
aad
in
stos
jmp
mov
or
jecxz
add
dec
cmp
test
imul
les
inc
cmp
push
and
sub
push
loopne
push
loop
add
jg
int
inc
shrl
sbb
pop
mov
sbb
dec
lcall
xchg
jo
cltd
mov
mov
jnp
insl
aad
ljmp
or
lahf
xchg
ja
dec
jnp
push
loop
mov
cmp
fisubl
sbb
dec
mov
in
jp
or
cld
xor
imul
cmp
add
mov
pop
cmp
sbb
scas
repz
adc
mov
int3
ret
enter
fistpll
xlat
mov
dec
imul
or
in
popf
loopne
jns
in
fmuls
push
pop
arpl
and
and
lahf
out
mov
stos
dec
in
push
jnp
sbb
outsl
push
ss
add
or
addr16
test
fildl
push
mov
sqrtps
mov
imul
shll
int3
and
mov
push
shll
inc
jb
movsl
dec
and
sbb
push
aad
outsl
push
dec
test
mov
outsl
cmp
mov
scas
sub
loop
loopne
dec
testb
jne
mov
jge
les
pop
hlt
jle
sbb
mov
outsl
ja
add
push
mov
enter
roll
inc
loop
call
js
cmp
fldenv
imul
aas
in
jmp
mov
icebp
pop
inc
lahf
inc
inc
mov
fisttpll
pop
mov
leave
cmp
fmull
mov
pop
jmp
add
adc
xchg
outsl
adc
jge
fwait
push
mov
scas
mov
imulb
lahf
movsb
mov
adc
or
lods
mov
sarb
adc
lcall
jbe
dec
ja
sarl
into
cmp
les
jbe
data16
subb
inc
ss
dec
in
cmc
xor
add
cmp
xchg
sbb
push
inc
ja
or
and
js
out
sti
and
imul
and
xor
popa
mov
jne
or
lret
adc
fistps
and
inc
fisubrs
cmp
pop
pop
cltd
gs
daa
push
std
rcrb
clc
fstps
or
negb
jne
xchg
shlb
call
lds
shlb
shlb
sub
pop
loop
sub
and
test
add
lahf
jnp
sub
xchg
jp
movsl
inc
fs
std
add
rorl
jl
sub
mov
cmc
pop
jmp
add
pop
pop
cmpsb
or
sbb
iret
pop
test
xchg
mov
gs
push
dec
aaa
sbb
and
loope
ret
repz
mov
xchg
dec
test
mov
cmc
das
add
xchg
popf
lcall
imul
and
and
out
mov
mov
adc
pop
dec
pop
aas
adc
imul
vsubss
push
push
or
sub
stos
insb
and
aam
movsl
or
sarb
add
sub
in
stos
xchg
stc
pop
xor
ret
mov
or
mov
jmp
movsb
dec
push
add
xor
pop
movsl
mov
xor
xor
cld
icebp
insl
pop
ja
mov
mov
mov
addb
inc
cltd
in
das
xor
push
jl
fucomip
fidivs
sti
jecxz
pop
sbb
mov
mov
and
cli
cmpsl
cmp
cmpl
iret
jnp
rol
mov
loopne
loop
sahf
xchg
push
push
lock
pop
lds
pop
ret
mov
xchg
pop
sub
jle
add
and
je
out
hlt
pop
xchg
clc
mov
pop
fldl
popf
add
fldcw
xor
nop
push
lds
in
loope
or
test
cmp
pop
nop
sti
out
mov
xor
outsb
out
ds
lahf
cmc
mov
mov
loopne
add
dec
inc
rcl
stc
stos
pop
sub
outsb
mov
push
and
cmp
push
repz
jg
sbb
push
sbb
hlt
pop
loopne
pusha
push
test
cmpsl
scas
mov
sub
cwtl
mov
enter
lds
pop
jo
jmp
aaa
or
out
cwtl
push
push
adc
dec
mov
jge
adc
jb
inc
or
inc
pop
xchg
adcb
stc
ljmp
in
mov
pop
jmp
dec
fimull
scas
mov
cmp
inc
inc
dec
into
repnz
push
mov
in
iret
repnz
pop
cmp
mov
test
cld
mov
pop
mov
ss
and
push
or
fisttpll
push
orl
out
mov
push
dec
add
adc
insb
pop
sub
popf
fsub
ficoms
cmp
fwait
std
loop
sbb
or
ss
add
cli
jmp
and
cmc
fstpl
lret
inc
or
fcomps
stos
mov
and
sub
mov
xorb
sbb
jb
jp
fs
mov
outsb
xor
rcll
xchg
mov
fldcw
cwtl
out
inc
ss
ret
lds
xor
jno
ja
add
bnd
movsb
mov
xchg
lahf
mov
call
call
scas
sbb
in
mov
jb
bound
adc
adc
jne
ljmp
push
mov
divl
divb
hlt
adc
dec
or
mov
fs
xchg
or
xor
pop
add
xor
jmp
mov
hlt
loope
lcall
iret
mov
lds
sbb
pushf
push
mov
imul
mov
fdiv
inc
enter
test
pushf
adc
xor
fnstsw
test
push
dec
push
sbb
sub
lods
push
xchg
jnp
fldenv
std
inc
lret
dec
data16
cs
cs
pop
push
push
out
mov
test
sbb
sti
data16
sbb
ret
xchg
mov
mov
mov
xchg
test
mov
inc
ret
int3
push
jmp
push
dec
aas
in
mov
mov
ror
daa
sbb
cli
jl
jns
pushf
pop
into
fisttps
filds
imul
push
js
xchg
lret
hlt
cltd
mov
xchg
or
pushf
xor
test
or
jl
sub
adc
das
repnz
pop
push
hlt
add
fwait
aad
out
inc
add
in
andb
jecxz
cmpb
pop
add
cld
jne
adc
fdivl
add
pop
mov
mov
pop
mov
mov
ja
cli
mov
mov
fsubrs
jmp
mov
mov
adc
jmp
cld
pushf
imul
dec
lods
and
test
xor
push
in
add
sub
push
rcll
int3
xor
nop
std
and
cmp
jo
mov
lret
insb
lret
mov
mov
cmp
test
stos
ret
test
pusha
mov
prefetchwt1
test
rolb
add
or
pop
cmp
int
rcr
lods
pop
add
inc
ret
test
sbb
je
xor
inc
xchg
cli
xorl
inc
orb
mov
pop
js
jne
repz
cmpsl
sub
out
inc
test
ret
sahf
push
jecxz
icebp
cmc
dec
mov
pusha
ds
dec
add
fisttpll
lock
lret
push
cld
rcrb
cmp
mov
fldt
loopne
adc
lret
pop
cmp
or
leave
jle
pop
inc
xchg
dec
pushf
ljmp
repnz
dec
bound
mov
jbe
push
movsb
clc
mov
add
iret
inc
push
xor
inc
lods
das
test
fnstsw
out
mov
jg
xchg
lcall
jnp,pn
mov
jnp
test
cmc
add
stc
and
xchg
push
cmp
lea
inc
pop
jno
int
inc
aas
sbb
lods
rcrb
lds
pop
sbb
punpcklwd
in
or
push
mov
add
sbb
js
bound
test
mov
and
xlat
cmp
dec
les
sbb
shll
sub
sub
mov
pop
pop
xchg
ret
outsb
push
ss
lret
loopne
mov
and
cmp
cmp
addr16
adc
adc
inc
fistpl
and
jne
xor
add
mov
repz
pop
sbb
fcmovb
adc
sbb
cmc
dec
shrb
pop
inc
push
cmpsb
rorl
sub
sub
inc
sub
add
nop
js
orl
movsb
mov
inc
or
test
cld
and
jne
test
jge
std
cmp
stc
sar
imul
jbe
inc
xlat
jl
mov
repz
ss
cmp
xor
fmul
ja
add
stos
fwait
sub
shl
test
js
jge
pop
adc
rcl
xchg
lods
xchg
sbb
cmpl
ja
out
daa
loope
xor
mov
mov
std
ret
mov
fnstsw
mov
fbstp
inc
nop
sbb
sub
ds
inc
cld
scas
lods
int
decb
dec
stc
cmp
aad
add
jmp
pop
stos
and
or
xlat
imul
adc
sbb
iret
daa
mov
outsl
and
adc
adc
das
dec
sbb
lahf
sub
xchg
jge
add
stos
clc
sbb
xor
dec
push
mov
insl
xchg
mov
jmpw
xorl
imul
mov
fisttps
lods
adc
push
pushf
rolb
xchg
in
stos
jo
sub
mov
push
mov
rclb
repnz
fs
fwait
ss
pop
ret
repz
shrl
rcl
aad
dec
addr16
popf
sbb
shll
adc
or
add
aad
in
pop
cld
shll
fiadds
int
xlat
mov
dec
iret
daa
adc
scas
jmp
cmc
cvtps2pd
das
in
inc
lods
and
insl
out
lods
pop
hlt
dec
mov
jl
cs
mov
mov
jno
mov
jb
dec
movsb
mov
repnz
xor
data16
sbb
or
xchg
sbb
add
xchg
mov
jnp
in
xor
int3
inc
out
mov
inc
mov
orb
shll
stc
test
jg
jno
fs
and
jbe
push
test
or
lret
fldpi
xor
cmpsl
mov
adc
sub
lods
jb
imul
sub
pop
outsl
dec
mov
mov
xor
sub
dec
mov
int
mov
mov
push
aad
lret
loopne
leave
mov
iret
outsl
scas
mov
sbb
test
xchg
loopne
inc
stc
sbb
add
rorl
ja
out
imul
xor
pop
popf
add
pop
js
inc
cltd
nop
test
aaa
daa
pop
jecxz
popa
add
fwait
je
enter
fbstp
imul
mov
pop
xchg
enter
inc
loopne
ror
xor
or
add
adc
sahf
fs
push
and
out
jb
addb
sbb
insl
fistpll
pushf
pop
inc
shlb
insb
clc
add
cmp
in
or
jmp
lods
jne
bound
xorb
stc
in
addb
lods
xor
or
jbe
mov
in
sarl
lods
fstpl
dec
mov
add
ret
push
dec
jle
or
loop
cmp
in
filds
lret
fdivs
mov
mov
fdivrl
jmp
fimuls
dec
shrl
sbb
mov
or
fwait
cltd
inc
xchg
mov
pop
cmpb
fwait
shrl
pop
loop
xchg
dec
sub
imul
add
hlt
add
inc
fistpll
enter
test
and
jae
adc
cmpsl
xchg
add
loope
out
mov
xor
repnz
jnp
add
popf
out
mov
or
mov
and
mov
aas
insl
mov
push
in
mov
sub
fstl
sbb
test
adc
pop
out
clc
popf
and
in
fidivs
xor
push
insl
ficoml
sub
xlat
or
pushf
hlt
mov
xchg
add
lea
lods
arpl
shrb
imulb
popa
dec
jg
test
or
xor
cmp
ret
mov
fistpll
jg
mov
adc
push
cwtl
mov
inc
inc
cmp
sbb
sbb
xchg
testb
add
loop
cmpsb
dec
loope
mov
es
stos
mov
nop
sbb
mov
push
fwait
push
out
imul
out
das
loop
or
fldenv
pop
stos
pop
aam
cmp
fcoml
pop
inc
mov
stc
cmp
push
and
push
or
popf
jno
dec
mov
lcall
mov
sub
lret
push
jmp
repnz
mov
fildll
pop
push
loope
in
dec
xchg
into
inc
stos
xchg
cld
cmpsl
dec
mov
push
es
push
stc
dec
es
clc
lods
sub
fcom
or
scas
dec
sarl
push
inc
ret
pop
sub
sarb
mov
loop
sbb
in
adc
sbb
shll
mov
aaa
sub
out
sub
push
push
loop
push
repnz
pop
mov
mov
mov
dec
cmp
iret
mov
test
les
fstl
cmp
stos
fdivl
dec
cltd
lahf
repz
xchg
scas
sbb
rorb
mov
or
cli
pop
in
cmp
pushf
pop
movsl
aas
dec
adc
repnz
xchg
imul
and
scas
test
or
or
and
mov
mov
mov
shrl
cmp
rorl
imul
cmp
in
aam
gs
adc
andb
cli
sbb
fwait
ds
int
mov
sbb
sub
push
ds
cmpsl
fldenv
cmpsl
mov
nop
xchg
cli
fmull
addl
in
push
fsubl
fwait
pop
shl
out
push
imul
fs
or
fcomps
test
stc
jno
or
mov
sbb
xchg
push
jnp
inc
fidivrs
fcoms
icebp
sub
ds
test
icebp
das
andl
pop
mov
sub
sub
lods
icebp
rcl
movsb
decb
aad
jecxz
dec
loopne
mov
cmpsb
xrelease
mov
cmpsl
adc
sarb
outsl
rol
fsubl
and
xchg
or
aad
loope
std
and
adc
lret
addb
ret
cmp
add
sbb
dec
ret
in
arpl
xor
or
outsb
push
dec
or
dec
in
mov
xchg
sbb
sbb
fucomi
sahf
bound
dec
icebp
jecxz
sub
jecxz
jle
int3
lds
dec
pushf
je
shl
and
js
xchg
push
mov
mov
flds
cltd
mov
test
in
in
lea
mov
adc
fnstcw
int3
add
icebp
pop
pop
ja
jnp
ret
xchg
popf
sbb
cmpsb
pop
cmpl
insl
lahf
outsl
jb
jg
xchg
mov
mov
xchg
xor
loopne
cmp
int3
xchg
test
repnz
sub
xchg
pop
dec
xor
rcll
xchg
push
shlb
pop
xor
and
testb
pop
movb
pushf
lds
lret
pop
pop
add
add
sub
insb
hlt
adc
stos
rolb
icebp
xor
dec
dec
push
mov
cmp
cmp
or
call
inc
lds
push
add
fldl
sbb
or
cmp
pushf
mov
aam
jne
jle
test
in
int
and
jl
sbb
push
shrb
xchg
mov
push
out
cmp
fstpl
and
je
nop
lret
cwtl
pop
add
loopne
cltd
inc
inc
into
xchg
sub
push
fistpl
sbb
pop
fcomps
fisubrs
push
arpl
js
out
push
or
sub
sbb
lods
push
sti
lret
sub
cmp
sti
xchg
stc
iret
and
adc
adc
idivl
pop
repnz
mov
mov
imul
shll
inc
test
rcll
fcoms
cli
aad
xchg
adc
pop
xchg
xchg
pop
mov
aam
adc
fcmovne
gs
push
mov
outsl
adcb
ss
shll
fmuls
mov
hlt
stc
imul
in
in
sti
mov
fadd
orl
packuswb
push
es
add
cmp
inc
xchg
imul
adc
or
lods
dec
repz
sti
xchg
sbb
sub
cltd
sbb
test
xchg
in
and
out
pushf
rcll
cwtl
out
stc
push
enter
adc
mov
idiv
ret
inc
dec
jmp
adc
fcoml
icebp
push
hlt
clc
dec
xchg
dec
sahf
ja
sub
fcoms
and
dec
out
loop
stc
pop
call
mov
mov
xchg
movsb
repnz
stos
mov
mov
call
cmp
mov
hlt
popf
inc
push
jmp
xor
mov
pop
in
popf
jbe
cli
cld
add
mov
aaa
jmp
xchg
loop
call
xchg
bound
adc
cmp
fsubrl
pop
mov
cmpsl
push
jmp
out
lret
or
push
sbb
mov
pusha
push
bound
mov
mov
push
mov
xor
adc
sbb
inc
insb
adc
mov
std
sbb
cmpsl
mov
scas
cmc
cmpsl
imul
addr16
dec
nop
or
out
mov
push
daa
sbb
loop
push
jo
add
sbb
inc
cmc
pop
pop
in
cmpsl
loop
mov
dec
xor
cltd
xor
cmp
decl
fsubs
out
outsl
push
xor
mov
sbb
outsl
stos
adc
adc
in
mov
mov
inc
push
mov
jge
sbb
inc
add
pushf
aas
jmp
jb
pushf
repnz
pop
cmpsl
push
test
adc
test
aad
sub
stc
mov
dec
jp
mov
xchg
sarl
push
xor
xchg
adc
inc
addr16
leave
push
fisubl
daa
mov
cwtl
mov
mov
movsb
adc
mov
mov
mov
xchg
and
mov
mov
outsb
push
leave
int3
cs
test
inc
xchg
inc
mov
std
sub
push
cwtl
push
fs
fbstp
js
shlb
adc
push
inc
aaa
sub
insl
xchg
pop
push
push
cld
out
dec
dec
mov
lahf
mov
adc
xor
push
mov
push
lock
xor
sar
jb
push
sbb
jmp
dec
lcall
cmp
cmp
inc
out
dec
pop
and
out
jge
mov
sbb
aam
and
adc
sahf
test
cmp
sahf
cld
ret
pop
jle
mov
sahf
xchg
stc
lock
jne
scas
ljmp
sbb
fstl
or
ret
dec
call
push
sbb
jecxz
jle
sub
in
jecxz
adc
lcall
arpl
leave
or
dec
fsts
imul
clc
shr
pusha
cmpsl
pop
pop
cs
sub
and
cmp
out
xchg
pop
movsb
bound
je
push
xchg
stos
add
xor
dec
out
xor
fisttps
sbb
cs
in
xchg
std
or
sub
fisubrs
imul
rclb
loope
shll
in
in
lret
jl
insl
scas
push
fs
fnsave
imul
testl
mov
aas
push
push
xchg
fcomip
xchg
and
outsb
dec
orl
lret
mov
outsb
insl
xchg
sahf
out
test
sub
lods
push
jo
scas
jns
inc
sub
cwtl
fs
lea
add
gs
repnz
scas
lahf
ds
pop
sub
inc
mov
mov
cld
fimull
jo
aad
cmpsb
std
mov
jnp
add
mov
imull
pop
out
jno
pop
iret
mov
enter
fnstsw
mov
sbb
xor
sar
xchg
inc
mov
loopne
sub
push
es
addb
in
jnp
lock
add
inc
lock
xorb
mov
dec
jp
lahf
jnp
sbb
jl
jb
into
mov
cmp
push
notb
test
idivb
pop
and
pop
inc
sub
test
ret
xor
test
shl
fcmovnbe
cmpsb
push
xchg
addb
inc
shlb
pusha
pusha
in
lea
mov
sbb
mov
call
and
add
mov
out
shlb
shrb
in
inc
push
cwtl
cs
inc
jge
fcomp
in
out
rcr
pusha
jae
xor
fsubrl
xchg
mov
fbstp
adc
sbb
cwtl
sbb
lock
push
inc
xchg
inc
mov
in
cmp
cmp
pop
arpl
gs
push
jnp
inc
lret
sub
psubb
mov
push
xor
jne
mov
inc
out
gs
out
repz
mov
cmpsl
sbb
or
xchg
lcall
mov
jmp
sti
roll
pop
add
or
mov
std
mov
mov
rcr
xlat
jne
dec
mov
daa
push
loopne
push
mov
orl
xchg
cmpsl
icebp
mov
push
adc
jl
pop
xchg
jecxz
lods
cmp
in
mov
fsin
js
jns
imul
and
sbb
mov
and
push
sahf
sub
mov
or
mov
imul
je
mov
out
les
cltd
push
ja
dec
rcr
addr16
mov
movb
mov
add
fnstcw
add
js
adc
sbb
mov
sbb
mov
and
stos
mov
xchg
ja
jmp
nop
xor
push
iret
mov
mov
inc
into
adc
lahf
and
lea
xor
insl
xchg
sub
repz
jg
fdivl
flds
pop
out
into
fisubrs
mov
cltd
fs
push
call
imul
fidivs
mov
mov
and
push
mov
pop
pop
lret
pop
imul
inc
jnp
movsl
gs
movsb
orl
pusha
cltd
and
mov
sub
insb
sbb
xor
mov
add
push
in
xchg
cmc
cli
mov
in
push
inc
cmp
sbb
sbb
subb
sbb
insl
or
lods
dec
in
movsl
sub
stos
outsb
aas
dec
mov
mov
scas
andl
xchg
jnp
into
sbb
stos
imul
xor
mov
push
mov
test
out
jp
imul
mov
jge
je
jp
sbb
fidivrs
pop
and
aaa
or
mov
loop
shll
les
xchg
mov
jp
mov
and
ljmp
or
inc
sbb
enter
imul
sub
push
fptan
cmp
dec
jo
lds
iret
jo
xchg
cwtl
ja
not
ljmp
subl
jle
lds
aaa
pop
out
push
pushf
imul
das
jl
xor
mov
pop
pop
aam
xchg
pop
movsl
insl
push
cmp
pop
mov
in
pop
cld
mov
mov
jbe
xchg
xchg
or
popa
sub
fisttps
inc
xchg
or
fcmove
or
iret
push
add
xchg
addl
clc
sbb
mulb
aad
outsb
mov
inc
xchg
mov
movb
adc
nop
daa
sbb
cmp
and
jg
sahf
lea
cmpsb
sar
fisubs
jno
or
mov
lret
pushf
dec
push
or
inc
mov
dec
cmp
mov
inc
sub
int
and
push
repnz
xchg
pop
xlat
fcomps
rol
sbb
leave
jo
test
sbb
inc
fwait
into
adc
rol
sub
xchg
in
jmp
adc
adc
pushf
pushf
leave
or
addr16
dec
lock
or
fwait
aaa
or
roll
imul
mov
aaa
push
xor
dec
xchg
lret
adc
data16
or
cwtl
ret
xor
imull
nop
outsl
jae
cmp
sahf
pop
pop
pop
div
xor
mov
lahf
es
adc
arpl
cwtl
imul
ror
mov
in
mov
pop
mov
jmp
pop
setg
mov
xchg
int
insl
add
es
out
add
mov
enter
inc
imul
dec
jbe
fwait
arpl
xchg
enter
mov
aad
mov
add
xchg
es
rcrb
xchg
pop
inc
cmp
push
inc
jnp
jae
out
popf
inc
pop
jle
enter
out
fistps
adc
mov
ret
cld
mov
xor
xchg
pushf
jb
mov
add
movb
ja
adc
fstl
push
cltd
and
jg
andb
or
jno
sbb
push
loopne
mov
mov
sar
cmp
xchg
adc
pop
pop
pop
mov
push
mov
lods
jp
mov
bound
adc
call
push
lea
test
adc
sti
mov
inc
fistpll
jge
movsl
data16
popf
jle
push
xor
test
negl
sub
jne
cmp
sbb
icebp
fsubs
lahf
cld
lahf
test
mov
adc
pop
hlt
aas
mov
dec
shl
cmp
sbb
les
mov
cmp
adc
pop
aad
in
pop
or
ja
int
arpl
lods
mov
xchg
add
add
popa
aam
xchg
shl
js
aad
push
and
test
lock
or
xor
lcall
and
mov
lods
out
dec
call
rorl
cmp
inc
ror
fdivl
mov
ja
xchg
xchg
daa
das
int
imul
cmc
mov
xlat
test
insl
stos
jnp
lods
sub
cmp
cltd
fdivp
pop
mov
sbb
les
or
jno
ret
xchg
orl
fs
stc
sub
xor
lods
cmp
sub
mov
xchg
xor
push
jnp
aaa
cmp
dec
mov
push
pusha
xor
sti
jmp
inc
jp
popa
mov
xchg
mov
mov
adcb
int3
and
movsl
jle
ljmp
out
fidivrs
dec
inc
mov
pop
sub
cmp
xchg
and
xchg
cmpsb
push
jo
jle
rcrl
xchg
push
adc
int3
sub
addr16
and
lods
mov
sbb
test
jp
cli
movsl
enter
loope
mov
lret
adc
push
push
addr16
out
popa
out
loop
pop
fs
mov
cmp
xchg
or
mov
pusha
mov
jbe
jns
clc
lods
call
add
scas
lret
dec
jecxz
aas
icebp
mov
or
lds
jbe
pop
add
in
mov
mov
test
fadd
bound
incb
inc
xor
loope
jge
imul
and
xchg
add
bound
jo
sub
enter
sbb
fiadds
shll
lods
mov
push
pop
push
xor
loop
insl
sub
clc
cmp
jecxz
mov
sub
inc
jge
sarb
cmp
inc
shrb
dec
sbb
mov
push
sbb
aaa
inc
jecxz
jmp
int
jae
cmpsb
icebp
sbb
and
cwtl
ret
mov
insl
lcall
push
or
push
imul
scas
insb
inc
lea
mov
push
sub
sbb
fldenv
cmp
idivl
mul
mov
ds
inc
inc
rol
mov
mov
ret
push
push
sub
ret
and
dec
fcom
or
loope
dec
cmpsl
stc
dec
xlat
jno
int3
out
shl
jnp
icebp
loope
insl
subl
je
jle
sub
push
inc
push
cld
sub
stos
nop
or
imul
push
test
dec
dec
lcall
test
mov
inc
notl
gs
js
add
push
in
pusha
popa
jb
sbb
add
ds
bound
hlt
mov
icebp
or
jns
ret
sbb
aad
fcmovb
std
lods
xchg
ljmp
mov
fbld
jp
lds
pusha
sub
adc
nop
cmp
lods
jmp
lods
rorb
add
inc
mov
sti
mov
into
popa
scas
xchg
jp
aam
add
adc
mov
test
cmpsl
lret
xchg
leave
out
cmc
mov
faddl
mov
or
and
fcmovnb
xor
ja
repz
outsb
xchg
dec
mov
push
cmp
mov
push
sarb
or
inc
std
sbb
sub
inc
loop
insb
add
enter
sti
xchg
sub
fisubrl
mov
sub
xchg
out
jle
fld
jg
add
cmp
pop
mov
sub
xor
mov
jbe
cs
adc
sbbl
scas
scas
fcompl
fcmove
pop
mov
add
inc
fdivrl
and
ret
xchg
push
or
xlat
int3
sbb
inc
and
imul
js
or
in
mov
gs
cld
outsb
xor
mov
rcrb
icebp
cmp
popa
xchg
orb
inc
dec
adc
leave
add
in
jmp
jae
jbe
stos
sub
shlb
sbb
mov
dec
popf
mov
xchg
cmp
imul
shl
dec
and
mov
push
xor
aaa
pop
add
arpl
mov
aaa
fs
filds
fsub
dec
inc
mov
cmp
cmp
ja
aaa
xor
and
sbb
xor
push
pop
pop
push
ljmp
jle
ret
mov
adc
or
repnz
aam
jne
inc
dec
xchg
cs
fisubrs
or
mov
xor
out
mov
outsl
outsb
cmpsb
cmp
hlt
lret
push
js
test
mov
lcall
int
push
scas
push
mov
dec
insl
lods
andl
and
push
insb
aam
rclb
lcall
push
cmp
dec
lcall
sub
and
sub
ficoml
xchg
inc
popf
lret
insl
sti
pop
xchg
add
ret
mov
dec
pop
rcr
adc
in
push
add
aam
mov
pop
lods
in
and
add
jmp
push
cmp
ror
pop
aam
and
pop
into
push
jae
ficoms
les
lahf
push
sarl
lods
inc
add
adc
inc
xlat
pop
js
icebp
add
mov
test
lahf
or
int3
lods
sub
inc
xor
mov
pop
push
fwait
xchg
and
jg
adc
jbe
sahf
decl
sbbl
push
push
dec
pop
or
rorb
addr16
mov
int
pop
ss
dec
push
sub
fwait
sub
mov
daa
adc
xchg
std
jle
daa
mov
lret
mov
mov
mov
pusha
insl
lcall
sbb
das
test
test
adc
ficoml
pop
jns
or
push
push
xor
push
or
cld
dec
outsb
dec
push
push
testl
sub
js
push
push
pusha
jg
repz
add
mov
mov
imul
inc
subb
stos
mov
lret
out
repnz
rolb
xchg
fnstenv
cmp
mov
and
cmp
push
in
in
push
mov
push
inc
lods
adc
outsl
sub
or
adc
andl
ret
in
adc
das
cmpsl
pop
mov
xlat
sbb
push
movsl
lahf
cli
call
outsb
scas
lods
lods
jb
and
fdiv
xlat
adc
xchg
mov
cmc
nop
std
push
aaa
adc
adcl
stos
jno
cmp
test
cltd
jge
cmp
aaa
dec
adc
mov
add
xor
nop
inc
fchs
fldcw
ljmp
jecxz
pop
xlat
fcmovnu
inc
pop
pop
inc
and
ds
call
ja
xor
xlat
xor
aam
mov
add
push
jle
mov
pushf
pop
roll
mov
in
je
mov
sahf
xor
cwtl
loope
test
mov
mov
xor
or
iret
jp
adc
outsb
or
xchg
cs
call
sti
repnz
xchg
ja
out
sahf
inc
fisttps
lds
lahf
push
xchg
repnz
inc
xchg
jmp
je
dec
sti
push
test
cmpsl
ss
adc
and
fcompp
or
mov
into
push
sbb
addr16
popf
pusha
cmp
adcl
mov
push
rcr
mov
xchg
repz
push
into
cwtl
negb
jl
movsb
mov
ret
testl
adc
fucomi
or
xchg
mov
loop
and
pop
inc
call
push
and
call
mov
fdiv
sub
mov
cwtl
iret
ret
stos
mov
fsts
mov
mov
mov
xchg
out
adc
das
sub
sti
push
push
mov
ret
xchg
ljmp
mov
into
outsl
sbb
xlat
cmpl
loope
mov
push
inc
cmp
pop
shr
and
sbbb
test
and
jle
lea
adcl
aam
sub
jg
mov
push
sub
xor
pop
or
mov
mov
pop
movl
jnp
jns
cmpl
mov
jo
push
popa
add
in
into
xchg
jmp
xchg
in
adc
add
sub
aad
xor
insb
xor
xchg
hlt
std
fwait
subl
negb
push
cmp
or
mov
in
mov
push
add
repnz
adc
les
adc
cmp
sub
mov
cld
bound
jmp
clc
test
cmp
orb
popa
cmpsb
xchg
cli
in
jmp
add
add
orl
jmp
push
sub
and
ffree
and
fwait
push
sub
push
and
sbb
lahf
daa
sub
scas
fistps
int3
sarl
inc
add
cld
dec
lret
or
mov
mov
aaa
dec
rolb
xchg
incb
nop
stos
jg
jge
pop
ret
insb
test
cmp
jae
mov
scas
and
mov
push
mov
lret
adc
lret
sbb
sub
push
clc
mov
gs
xlat
into
pop
cmpsl
lcall
dec
mov
cmpsb
jmp
cmp
out
insb
js
outsb
mov
repz
cmp
in
cli
cmp
cltd
pop
add
mov
ret
or
mov
cmpsb
sub
hlt
push
sbb
push
std
lret
push
cwtl
pop
cmp
push
cltd
jp
inc
xchg
sub
inc
xor
gs
jp
std
test
add
addr16
cmp
mov
or
imul
and
repnz
sar
das
loope
mov
xchg
aad
pop
rcl
sbb
shl
fidivs
cli
pop
rclb
test
test
cmp
xor
ja
gs
mov
lfs
sbb
push
popa
xchg
jmp
sub
and
lea
fisttpl
bound
xorl
call
jne
into
mov
repz
lea
pop
data16
es
sbb
or
dec
insl
ljmp
xor
add
xor
mov
push
adc
int3
and
jg
in
aas
cmp
ja
gs
divl
int
xchg
mov
xorb
mov
iret
fs
mov
push
xor
fld
sbb
rcl
lea
jp
or
xchg
gs
ficoms
push
xlat
jo
arpl
add
mov
and
dec
stc
push
fdivrs
aaa
mov
jle
push
xor
push
add
mov
sti
and
mov
out
pusha
dec
push
lods
or
or
stc
sub
stos
inc
sub
xchg
mov
adc
cmp
sbb
nop
cld
pop
add
fwait
dec
inc
pop
fwait
in
push
std
xchg
add
mov
sbb
sub
and
or
int
lods
sub
jp
lret
xor
xor
pop
icebp
push
push
std
insb
test
adc
dec
jmp
inc
scas
add
or
sub
ljmp
pop
push
push
inc
push
inc
mov
rolb
sub
cmp
fnstenv
pop
xor
push
lahf
ss
cmc
adc
cmp
int3
rcrb
scas
xor
ljmp
cmp
inc
jae
mov
inc
icebp
bound
mov
and
jge
lods
or
push
inc
sti
loop
addr16
arpl
jns
scas
inc
mov
xchg
nop
or
and
cmp
mov
adc
pop
lods
fsubr
adc
mov
outsb
je
shlb
arpl
push
pop
pop
mov
inc
ds
push
push
icebp
pop
push
adc
add
fldl
or
mov
jecxz
pop
push
out
clc
xchg
inc
pop
negl
shrb
nop
xchg
dec
mov
shll
pusha
mov
mov
sbb
push
out
jbe
jae
fsubrl
sti
insb
jle
sbb
cmp
mov
cmp
xchg
lcall
cmp
sahf
jns
xlat
sahf
inc
imul
mov
sti
dec
inc
aas
and
pop
dec
dec
loop
mov
mov
enter
ja
les
dec
shlb
sbb
or
jns,pt
sbb
jb
fimuls
jo
or
sub
mov
add
mov
fldl
scas
mov
mov
dec
jo
cmpb
mulb
or
cmp
push
or
xchg
hlt
outsl
push
xchg
and
cmp
sbb
push
leave
movsb
in
and
mov
xor
iret
jmp
jo
ret
stc
shll
into
mov
jno
cmp
push
mov
pop
sub
stos
pusha
dec
addr16
adc
xchg
lahf
dec
xchg
push
xchg
outsb
mov
sbb
shr
jbe
rorl
pop
and
shl
arpl
xor
sub
stc
add
lods
mov
mov
hlt
or
push
ret
or
xchg
push
in
js
addl
sbb
bound
loop
loop
jbe
jmp
add
mov
stc
push
xchg
cmp
or
pop
test
mov
push
insb
or
idiv
lock
or
mov
or
mov
mov
andl
stos
aas
dec
adc
pop
add
shrl
xor
fsubr
pop
push
xor
fsubp
imul
xchg
mov
add
sbb
outsl
cmp
sbb
mov
addr16
scas
repnz
fidivrs
rolb
fbstp
cld
in
jp
xchg
xlat
call
stc
mov
mov
push
xchg
add
xor
inc
adc
aam
sub
in
add
jae
out
aad
pusha
rcl
pop
jne
mov
mov
icebp
mov
sbb
sbb
out
push
adc
push
mov
sub
sub
aas
aam
cmp
mov
adc
pop
aaa
mov
push
mov
int
test
fcompl
insl
sub
clc
push
push
std
jle
dec
cs
aas
dec
cld
xchg
pop
adc
jae
push
mov
xchg
sub
xor
xor
ret
sub
lods
test
sti
clc
icebp
leave
fnstcw
pop
jns
test
mov
aam
shr
cmp
mov
jo
shrb
or
jp
ds
mov
inc
and
lods
xchg
fwait
adc
int3
push
out
and
mov
imul
pop
lcall
push
adc
and
sbb
mov
pop
stc
pusha
and
test
int3
sbb
xor
mov
xlat
cmp
les
lods
inc
nop
sub
insl
out
push
andb
int
xchg
lea
test
adc
xchg
loop
mov
cmpsl
sbb
rcll
jns
add
add
shlb
cld
jb
adc
std
mov
or
jle
adc
jmp
xlat
test
imul
in
mov
in
sub
xor
mov
pop
filds
fdivl
xchg
and
into
repz
sarb
mov
rolb
push
or
xchg
in
and
cltd
pop
add
mov
pop
scas
popf
push
or
shrl
jg
cld
iret
lcall
xchg
jecxz
ret
and
or
jge
adc
pop
xchg
xchg
shlb
sbb
icebp
mov
mov
or
or
inc
int
and
hlt
xchg
mov
out
jmp
aaa
loopne
cmp
adc
jecxz
in
sbb
js
sub
out
jb
out
loopne
xchg
test
add
out
xchg
or
jmp
cmp
add
sbb
out
dec
xchg
pop
inc
push
push
or
dec
xchg
lock
lods
outsb
inc
add
hlt
fsts
jecxz
scas
adc
adc
insb
pop
subb
sbb
ja
xchg
sub
repz
xchg
cld
pop
out
mov
sub
add
sbb
xor
or
fcmovne
pop
lcall
pop
and
es
mov
dec
aad
movsb
lret
adc
lsl
stos
add
mov
in
mov
bound
mov
mov
loopne
mov
fsubrs
xchg
bound
dec
mov
cmp
ja
sarl
adc
mov
or
add
rclb
gs
xlat
mov
adc
jnp
or
pop
add
stos
cmpsb
shlb
pop
movsb
or
and
lret
push
das
out
sbb
cmp
or
xor
mov
idivb
js
ljmp
xchg
mov
jne
sub
mov
xchg
push
xor
xor
fsts
hlt
mov
in
mov
jmp
pop
xor
mov
jnp
pop
mov
pop
xor
out
add
or
aad
inc
inc
xchg
add
jl
pop
dec
pop
sbb
adc
lods
and
aaa
push
fdivrs
test
test
or
push
es
adc
jb
rorl
fadds
je
pop
scas
addr16
push
ret
xor
fists
pop
sbb
scas
mov
loop
adc
mov
xchg
out
bound
and
sbb
mov
pop
lcall
dec
and
cmp
callw
int3
dec
or
xchg
or
mov
xor
fsubl
xor
inc
xchg
add
maxps
jmp
sbbb
xchg
mov
je
fwait
push
xor
int
call
cwtl
repz
lock
add
add
gs
stos
cmp
cmpb
push
pusha
cld
mov
ja
dec
pop
inc
mov
xorb
or
add
mov
mov
loop
pop
xorb
sarb
arpl
jp
push
jbe
xor
xchg
fildl
dec
out
sub
sbb
mov
adc
pop
in
out
test
ljmp
js
xchg
daa
out
jle
sub
into
scas
xlat
jl
push
inc
dec
or
in
and
jb
repnz
xor
inc
or
xor
aam
outsb
xchg
pop
cmpsl
add
add
pusha
js
add
adc
sbb
mov
sbb
cltd
dec
je
aam
imul
addr16
les
pop
adc
outsl
mov
sbb
and
pusha
cmc
mov
popf
xor
fidivrl
rcrb
int
lret
test
iret
int
lods
jg
shlb
pop
movsl
mov
ret
push
xchg
out
adc
push
cmpsb
shll
arpl
dec
inc
pop
enter
mov
lods
movsb
sbb
ja
pop
imul
mov
mov
mov
cld
bound
inc
cmp
cmpsb
aas
cmp
ret
pop
mov
xchg
push
push
std
and
test
xchg
rol
out
enter
fs
fs
insb
sub
popa
fsts
add
lcall
and
in
mov
xchg
dec
push
pop
scas
or
mov
sahf
mov
mov
pop
cli
imul
and
scas
jno
pop
cs
lods
cmp
jns
push
push
inc
mov
pop
inc
movsb
repnz
sbb
pop
add
mov
mov
loop
clc
repz
jge
out
imul
pop
call
cmp
incl
jmp
nop
daa
out
and
fwait
popf
testl
outsl
push
insl
cmp
adc
pop
das
fs
ja
sub
cmpb
mov
addl
dec
enter
daa
dec
push
jecxz
fstps
inc
and
xchg
lcall
dec
scas
push
lea
daa
jge
ret
cmp
or
xor
sub
out
test
jp
or
pop
xchg
test
dec
push
ret
mov
stc
jg
enter
mov
xchg
inc
leave
jb
push
mov
sbb
mov
sbb
xorl
cmpsl
xchg
dec
test
xchg
jbe
or
sbb
xor
aad
in
lret
out
mov
pushl
sbb
scas
aaa
ror
mov
shlb
fidivrl
lret
cmp
mov
push
xchg
movsb
sbb
cmp
push
fs
mov
xor
cmp
out
xchg
sbb
dec
mov
ja
cmc
ljmp
push
cs
dec
inc
ljmp
mov
sub
pusha
mov
pushf
sahf
push
stos
cli
mov
cmp
mov
imul
xor
add
cmp
dec
lods
xchg
repz
pop
sub
xchg
movsl
pop
loopne
cmpsb
lods
sti
xchg
or
nop
sub
cld
or
stos
mov
shll
add
pusha
pop
xchg
into
dec
push
je
mov
push
sbb
test
lret
cmp
and
addb
pmuludq
and
cwtd
sbb
xlat
mov
ret
std
push
xor
dec
lahf
add
push
or
pop
adc
push
dec
mov
out
mov
cmp
lcall
mov
fidivs
and
push
jge
sub
cmp
insb
in
push
pop
adc
test
daa
repz
adc
xchg
lea
mov
or
dec
test
pop
or
mov
bswap
out
mov
aas
sub
xor
dec
lds
pop
negl
xchg
ja
or
sbb
aad
test
push
inc
or
and
and
add
fcmovnb
out
das
mov
test
iret
push
jns
mov
sub
jnp
adc
mov
xchg
add
mov
mov
enter
mov
icebp
mov
ret
pusha
inc
sbb
pop
notb
mov
jne
movsb
adc
jnp
cwtl
loop
pop
sbb
fsubl
enter
ret
js
out
push
std
clc
jge
mov
mov
jecxz
bound
addr16
pop
in
enter
loopne
dec
rcrb
cli
divb
mov
and
aad
jle
sti
mov
faddl
fisubl
xorl
repnz
mov
insl
mov
insl
insb
cmp
push
movsl
xchg
loope
scas
mov
shr
sub
mov
test
dec
stos
add
mov
xchg
cli
ja
xor
pop
outsl
leave
mov
push
test
insb
mov
lock
test
push
mov
sub
fstps
cli
ret
mov
ret
jmp
dec
loope
das
jae
and
insl
ret
addr16
test
sbb
inc
aad
xor
outsl
icebp
adc
es
lock
xchg
inc
mov
icebp
cmp
adc
jl
sbb
clc
adc
fidivrl
pop
mov
fcomps
sub
pop
jnp
int
mov
xchg
sahf
enter
mov
lcall
xchg
inc
add
jg
cmp
lds
xor
xchg
sub
je
cmpl
sub
sarb
xor
mov
hlt
pushl
nop
push
pop
sahf
mov
aad
jns
xchg
jmp
mov
adc
and
fs
mov
push
cmpl
jge
push
aas
cmp
sbb
sarb
mov
inc
xor
ret
lahf
icebp
test
add
std
aaa
ss
and
aam
enter
lods
mov
mov
repz
add
faddl
xchg
movsl
fimull
dec
pop
xorl
hlt
sub
lods
cmovbe
mov
sub
jl
fildl
in
scas
outsl
pop
sbb
cmp
out
mov
pop
adc
jp
sbbb
xor
or
movsl
mov
add
ss
std
loope
xor
out
imul
mov
insb
movsb
faddl
inc
push
add
push
mov
mov
pusha
jl
add
imul
jecxz
mov
jo
das
in
out
loope
cli
or
mov
cmp
repnz
mov
jle
cld
dec
fcmovnbe
push
push
mov
sbb
dec
xchg
fs
inc
jae
rcll
inc
call
outsl
jl
jb
sub
enter
bound
into
hlt
jl
jne
subb
cmp
lods
in
aaa
js
xorb
mov
jb
jmp
mov
mov
sar
ljmp
lds
inc
fsubrs
or
test
sbb
aas
dec
push
mov
out
ss
or
out
cwtl
and
mov
cmp
nop
cld
jmp
mov
fcmovb
xchg
xlat
fwait
scas
inc
movsb
pop
in
pop
sub
in
xchg
insl
fst
stos
cmp
rcrb
in
jb
jg
pop
loope
out
and
insl
lock
sbb
test
pop
mov
pop
std
push
inc
xchg
xchg
cs
push
rorb
movsb
loop
cmp
andl
bound
leave
sbb
fidivrs
into
jae
push
fs
dec
jo
cmp
pushf
inc
iret
les
js
cmc
pop
inc
mov
xchg
repnz
and
pop
negb
jle
add
inc
xor
inc
lods
push
adc
adc
dec
push
enter
push
neg
test
movsb
inc
mov
rol
and
mov
add
cs
cmp
cmp
jg
lods
mov
and
mov
lahf
sarl
rolb
mov
xchg
enter
lock
adc
xchg
lret
ss
push
loope
mov
pop
cmp
mov
shll
xor
bound
test
sbb
adc
lea
lods
xchg
jge
mov
lcall
pop
lds
mov
repnz
sti
xor
add
sub
and
cmpsl
mov
das
pushf
loopne
in
push
and
pop
and
adc
enter
negl
xor
subl
xlat
dec
movsl
adc
push
inc
adc
shll
jno
jnp,pt
xor
push
cwtl
push
mov
out
add
ds
sbb
and
mov
add
cli
dec
mov
adc
mov
hlt
sub
outsl
and
lahf
cmpsl
and
xchg
xor
cli
adc
popf
and
aad
add
aaa
clc
lret
popa
pop
cld
lcall
testb
cld
icebp
push
mov
xchg
sbb
xchg
push
jb
lock
cld
fildll
lods
cmp
lcall
cmp
jo
mov
subl
cltd
xor
mov
push
xchg
mov
hlt
push
repz
jecxz
inc
adc
leave
mov
mov
pop
add
mov
loop
jg
add
mov
mov
jmp
daa
inc
fwait
mov
cs
dec
aas
cmpsl
les
push
fldenv
mov
inc
and
mov
orb
stc
or
das
pushf
mov
inc
xchg
mov
and
jb
add
dec
fldcw
mov
add
xor
es
mov
jae
mov
pop
push
jo,pn
pushf
ja
sbbl
dec
into
mov
or
lods
je
xchg
outsb
mov
xchg
inc
fldt
mov
pop
mov
cmpsb
dec
popf
xchg
pop
xor
int
inc
jnp
lret
int
ds
fsub
mov
sahf
das
enter
jb
push
loop
mov
in
jl
dec
xor
out
das
inc
mov
popa
inc
push
dec
out
inc
and
filds
flds
dec
xorl
pop
rcl
mov
dec
les
sahf
and
cmpsb
xor
xchg
leave
test
adc
mov
data16
lods
mov
rcrl
push
and
dec
sbb
test
cltd
add
mov
cld
jmp
xchg
pop
xor
test
jp
push
data16
out
adc
hlt
xchg
mov
mov
sub
xchg
push
imul
and
cmpsb
push
mov
sbb
xor
jl
fiaddl
jnp
cmp
mov
rcrl
mov
mov
adc
ret
pop
push
sahf
out
lods
sbb
dec
stc
test
pop
movsl
sbb
pop
cmp
loope
xchg
ljmp
or
mov
scas
jl
xor
and
je
or
aam
jg
or
mov
movsl
std
sbb
jle
add
roll
add
scas
xchg
pop
fadd
insb
mov
icebp
jl
popf
std
or
push
xlat
adc
mov
leave
jne
movsl
out
jne
mov
or
outsl
sbb
mov
out
push
push
aad
and
mov
and
xchg
out
inc
inc
jg
or
or
out
cmp
jmp
jmp
add
mov
jnp
xsavec
gs
adc
rcrl
push
ds
dec
sbb
mov
push
icebp
mov
jno
cltd
sbb
lods
adc
lds
mov
push
push
stc
lods
sub
stos
push
mov
xor
je
inc
fwait
lret
sub
jnp
mov
mov
test
xchg
xor
jne
push
imul
out
aas
js
sbb
mov
jmp
outsb
mov
jb
add
fbstp
mov
mov
ret
sub
imul
outsl
imul
int3
nop
les
dec
call
aas
je
aaa
notb
in
out
push
xchg
jge
mov
pop
adc
repz
repz
sub
clc
dec
ljmp
loop
jmp
mov
push
mov
mov
adc
nop
cmp
aaa
sbb
xchg
mov
call
or
cltd
inc
lar
xchg
ficoml
or
pop
cmp
dec
enter
ret
pop
dec
jnp
jmp
neg
fwait
leave
adc
sbb
xor
mov
test
adc
pop
sbb
mov
fldenv
add
jp
loop
or
mov
cmp
mov
jnp
lea
pop
inc
jg
out
sti
arpl
or
inc
ret
sbb
xchg
jmp
pop
fistpl
xchg
out
es
push
jne
jbe
mov
sbb
lcall
adc
inc
mov
inc
es
pop
idivb
inc
outsl
xchg
loope
cmp
dec
mov
mov
inc
testl
in
lea
pop
movb
stc
push
xchg
and
stos
sbb
xchg
daa
push
xchg
xchg
fidivrl
push
push
adc
or
xchg
pop
push
dec
dec
imul
dec
xchg
aad
lahf
out
rcrb
or
jle
mov
sub
dec
cmp
aaa
shl
mov
pop
sub
add
ds
pop
pop
test
mov
imul
lock
lock
leave
push
pop
stos
int3
les
in
mov
xchg
cltd
mov
movsb
popa
pop
aaa
jecxz
pusha
jmp
mov
popf
cmpsl
in
subb
jbe
inc
hlt
push
xchg
sti
fimull
push
push
movsl
hlt
insl
lret
iret
int3
cmp
push
pushf
mov
mov
lahf
fbld
push
out
xchg
cmp
jb
mov
sub
xor
and
js
mov
es
jno
in
or
jp
loopne
roll
pop
push
jecxz
adc
dec
sbb
dec
shr
shr
fildll
push
popf
in
mov
sub
lcall
in
sahf
jmp
lds
out
imul
testl
out
adc
int3
push
xor
sub
mov
ror
push
and
stos
sbb
lcall
lret
cs
cld
adc
stc
out
jae
std
in
cmp
out
and
aam
mov
cmpsl
xchg
add
jno
lea
adcl
sub
mov
movsb
pop
mov
ret
add
pop
movsb
test
mov
stc
jne,pn
psllw
ja
ja
pop
xchg
mov
xor
popa
pop
imul
adc
mov
ret
stos
inc
push
add
mov
shl
adc
xchg
cmp
in
aas
or
mov
test
or
pop
fsub
cmp
addr16
test
pop
fs
mov
sub
scas
push
imul
outsb
lret
xor
jae
sbb
or
cmpsb
jnp
ja
dec
scas
xor
and
mov
inc
sub
mov
mov
mov
push
pusha
popf
xchg
movsb
xchg
addr16
sub
call
push
scas
ljmp
add
test
push
cld
imul
dec
push
imul
repz
pop
fs
adcl
pop
std
sbb
xlat
mov
sbb
leave
ss
loop
fistpll
and
or
adc
js
divb
add
mov
icebp
sub
dec
pop
adc
jle
dec
xchg
imul
popf
ds
popf
pop
dec
test
jge
fcompp
fdivs
or
mov
repnz
call
inc
ja
sbb
mov
jg
popf
jle
or
roll
pop
pop
push
xor
sbb
xchg
add
sub
mov
dec
jbe
mov
inc
mov
cmp
push
out
add
adc
shl
push
dec
push
gs
jecxz
mov
nop
fs
add
adcl
nop
stos
jp
jmp
cmp
and
test
es
mov
call
cld
cli
pop
iret
nop
rorl
pop
and
pop
popa
adc
inc
sbb
adc
fmuls
and
dec
add
ss
icebp
push
ljmp
inc
xchg
xchg
push
pop
rcll
ja
jmp
orb
icebp
js
cmp
in
cmpl
push
mov
stos
sbb
jo
int
xlat
sti
or
pop
lret
sti
arpl
dec
test
fstl
mov
add
shll
jecxz
mov
inc
cltd
in
hlt
xchg
les
mov
jno
in
dec
sahf
loop
scas
aam
movsl
outsb
xor
pop
pusha
call
int3
jo
cwtl
xlat
nop
xor
xor
jle
lods
mov
fwait
push
pusha
enter
xchg
push
push
adc
mov
aad
cmp
pop
jmp
mov
mov
mov
cmp
shrb
gs
jle
mov
xor
popa
out
dec
ss
iret
ret
and
sti
sbb
jbe
jbe
jecxz
in
sub
rolb
dec
lret
movsb
mov
or
test
cmp
rclb
call
inc
ror
insb
in
jg
xor
loope
inc
jmp
lock
xchg
fld
mov
rolb
out
scas
xor
push
push
cltd
and
mov
repz
frstor
ljmp
outsl
xorb
dec
inc
push
jmp
inc
or
pop
lcall
ss
je
repz
mov
adc
cmp
hlt
adc
jle,pt
xchg
sahf
loopne
mov
dec
repz
dec
xlat
in
dec
pop
pop
xchg
fs
xchg
jle
and
dec
mov
scas
cmp
pushf
cwtl
mov
loopne
xchg
loopne
or
addr16
cmp
push
adc
push
ret
mov
call
mov
jae
out
inc
ss
in
pop
dec
sahf
into
pusha
mov
outsb
pop
mov
and
inc
pop
xchg
mov
dec
or
dec
into
into
push
mov
loopne
inc
jg
inc
addr16
loope
sbb
sti
mov
mov
xchg
clc
sbb
mov
push
out
adc
retw
mov
mov
cmc
in
adc
dec
stc
lds
ds
leave
sub
cwtl
jne
ljmp
pushf
insb
mov
inc
clc
stc
pop
and
scas
test
cmp
stos
adc
outsb
mov
ror
sbb
sarl
aas
cmp
std
xchg
jbe
shl
std
scas
mov
xchg
xchg
fstps
dec
mov
negl
mov
jge
xlat
out
lods
sti
aam
jae
andb
sti
add
lea
pop
ljmp
add
mov
mov
mov
inc
inc
clc
adcb
cld
xor
pop
cmc
insl
or
stc
std
xor
stos
in
push
pop
or
test
adc
dec
aam
pop
cmp
stos
sbb
xchg
filds
dec
loop
loop
outsb
fwait
xchg
enter
aad
gs
push
cmp
xchg
int
ficomps
cmpsb
mov
mov
xchg
pushf
int3
and
cmp
sub
sub
cld
mov
loop
in
push
enter
hlt
cmp
arpl
push
pop
aas
std
add
mov
jb
push
js
push
ficompl
sbb
sub
sub
imul
push
inc
add
mov
mov
inc
inc
mov
xor
jno
inc
cmp
pop
inc
lds
mov
popf
or
cmp
pop
xchg
in
cltd
fs
mov
cltd
cs
pop
and
mov
jp
add
jne
push
mov
cltd
fisubs
stos
pusha
cmc
xor
int
bound
pop
ljmp
jp
icebp
pusha
pop
xchg
sub
dec
fisubs
arpl
sub
loope
mov
inc
dec
addr16
fwait
loope
and
pop
aas
mov
movsb
jl
js
dec
jo
or
and
push
je
mov
mov
or
ss
jecxz
jb
mov
xor
mov
mov
sti
cmp
popf
pushf
sarl
dec
in
jne
push
fld
jne
jns
sahf
test
lahf
pop
test
push
jecxz
jmp
aad
mov
lret
cmpsb
add
xchg
jnp
push
sbb
aas
pop
or
andb
sub
aas
jns
out
pop
inc
shl
cli
ret
sub
rorb
ret
out
cmpsb
sbb
mov
dec
mov
fistpl
jnp
mov
jae
push
pop
popa
adc
js
loopne
mov
int3
dec
mov
mov
inc
rorl
dec
lret
jbe
stc
data16
push
popa
jns
gs
pushf
sub
dec
movsl
iret
js
into
mov
pop
out
int3
pop
hlt
dec
push
ret
mov
mov
sarb
push
push
xchg
sbb
addl
ret
imul
mov
push
test
js
out
push
xchg
mov
jmp
fnop
push
xor
sbb
lcall
mov
jne
cmp
sub
jmp
movsl
das
out
popl
test
and
es
cmp
in
popa
and
xor
sbb
inc
fistpll
sti
jle
es
xor
rcr
add
push
mov
push
rcrl
lret
pop
jecxz
mov
or
sbb
mov
clc
xlat
xchg
sbb
push
sbb
outsl
pusha
mov
rorb
leave
xchg
or
inc
fdivs
hlt
inc
jg
int3
fisttpll
call
adcl
int
and
inc
dec
add
cmp
inc
xor
in
mov
lret
leave
test
or
mov
or
out
add
xor
roll
inc
fsubl
jb
adc
clc
cmp
loop
add
mov
mov
repz
mov
and
mov
outsl
jno
cmp
sbb
cwtl
es
jecxz
scas
sbb
cmpsl
stos
jl
xor
push
mov
outsl
jnp
sub
adc
mov
mov
or
in
pushf
arpl
and
inc
incl
jecxz
sub
dec
push
loop
jmp
cmp
adc
cmp
lds
add
std
insb
lods
push
or
mov
pushf
inc
add
xor
in
jmp
fdivr
cmp
ljmp
in
push
mov
addr16
out
sub
lcall
and
into
lcall
ljmp
mov
cmpb
ja
dec
inc
ds
cmpsl
sbb
push
dec
aaa
jle
fildll
fwait
mov
cmc
inc
leave
push
sbb
lret
sub
jb
dec
sahf
pop
rorb
mov
mov
mov
call
xchg
dec
and
sti
jae
bound
fs
mov
add
xchg
daa
hlt
xor
inc
hlt
lret
pusha
mov
sub
adcb
pusha
jge
xor
jbe
jnp
enter
adc
xchg
pusha
xchg
dec
test
mov
stos
push
mov
inc
scas
fs
mov
hlt
movsl
and
cmp
jne
movb
ja
xchg
mov
sbb
or
sbb
jbe
push
push
jnp
shrl
gs
imul
and
test
fs
test
outsb
mov
lods
xchg
enter
imul
loopne
and
sbb
cmp
mov
xchg
xchg
faddl
mov
push
mov
inc
xor
jnp
mov
fistl
mov
es
mov
out
mov
mov
jnp
and
sub
adc
mov
into
insl
movsb
sbb
es
ss
jns
adc
xlat
xlat
mov
xor
or
cld
ret
inc
mov
jp
jge
jae
cli
das
call
xchg
mov
adc
sti
mov
xchg
fdivrl
cmp
mov
xchg
sti
cmp
dec
mov
dec
cmp
dec
mov
popa
fs
mov
dec
jecxz
ficomps
pop
jnp
adc
out
movsb
ljmp
xor
les
xchg
adc
dec
jb
or
pop
hlt
ret
sbb
sub
outsb
adc
sbb
fwait
testl
xchg
add
js
jnp
nop
rcrb
shlb
cli
mov
dec
pop
stc
sub
shll
leave
fisubrl
add
lods
ret
push
mov
adc
ss
fsubrs
adcl
and
lods
sub
clc
inc
sbb
mov
jnp
lahf
lret
ljmp
pop
xchg
scas
jle
mov
movsb
adc
push
cmp
xchg
mov
dec
loope
insl
js
jmp
push
push
cmc
mov
in
or
je
sarb
push
flds
inc
lods
cltd
mov
arpl
test
xlat
pop
or
add
push
lcall
sarb
rolb
cmp
mov
jmp
pop
mov
xor
and
push
fistps
test
loope
leave
mov
leave
mov
fbld
jge
rolb
push
lret
orl
scas
jmp
sub
mov
mov
and
cmpsl
sub
outsb
imul
and
pop
inc
xchg
xchg
and
es
dec
dec
stos
in
in
mov
repnz
mov
hlt
and
insb
int
lods
pop
mov
es
xchg
dec
js
test
sub
rolb
arpl
insl
sbb
xchg
sti
mov
inc
mov
rclb
fwait
sahf
mov
jns
cmp
pusha
loope
adc
sbbb
push
or
lods
jecxz
enter
jmp
fnstsw
ss
aaa
jne
lods
out
insl
xchg
xor
ljmp
cmp
iret
test
loopne
shr
push
push
xchg
xchg
pop
sarl
inc
aaa
push
cmp
rolb
pop
add
xor
pop
or
sti
iret
popf
stc
leave
lock
shlb
gs
sub
call
adc
cltd
popf
xchg
les
nop
pop
pop
add
dec
sub
mov
sub
jns
sbb
add
add
fxch
scas
pop
sahf
mov
aam
jg
push
mov
movntps
mov
fisttpl
in
ret
popa
out
mov
pop
xchg
lods
loope
loope
leave
jmp
rcll
push
loope
lcall
fucomp
mov
testb
movsl
mov
int
push
arpl
xor
xchg
mov
fidivrs
sub
adc
mov
les
mov
in
jmp
repz
mov
cmp
mov
movsb
out
in
mov
xchg
pop
push
in
outsl
sbb
aad
jne
ja
pop
movsb
cltd
xchg
ret
jns
mov
or
lods
nop
lods
mov
bnd
pop
sub
iret
pop
les
add
fwait
sbb
mov
dec
sub
test
scas
pop
jnp
mov
or
cltd
pop
paddb
fcmovnbe
jae
pop
mov
add
popf
in
adc
rclb
jae
test
mov
cmp
out
sub
push
add
and
les
nop
fsts
pop
adc
add
xchg
aaa
dec
bound
out
test
fwait
or
in
clc
ret
out
test
in
lret
data16
xor
cmpsl
sbb
and
cmp
push
stos
cmc
cmp
add
lds
es
int
mov
cmpsb
mov
out
imul
sbb
xchg
mov
fnsave
inc
jo
daa
dec
pop
cld
hlt
sub
in
in
popf
dec
aaa
and
mov
dec
xchg
imul
mov
cmpb
jecxz
ret
mov
mov
mul
inc
rcrb
das
push
push
call
popf
mov
ret
push
push
cld
sbb
filds
je
stc
cmp
lcall
mov
xor
popa
frstor
popf
inc
movsb
adc
jae
in
xor
mov
cmp
xchg
out
hlt
fisttpll
dec
push
ljmp
int
push
adc
mov
mov
jae
enter
add
rorb
fsubl
ljmp
nop
inc
ljmp
or
dec
inc
sbb
imul
test
dec
test
lcall
jb
jb
xchg
fs
sbb
and
xchg
ret
adc
outsb
shll
loope
cmpsb
and
lahf
adc
sarl
flds
xchg
inc
pop
shrl
adc
ds
outsb
pop
repz
jl
icebp
jg
xlat
xchg
pop
dec
lea
test
insl
dec
fldt
mov
push
sbb
mov
mov
hlt
inc
sbb
lcall
push
xor
xor
testb
xchg
aam
mov
push
or
xor
and
jno
clc
out
inc
je
dec
pop
inc
movsb
inc
mov
cmc
adc
xorl
push
mov
ja
mov
mov
push
mov
inc
mov
cld
in
push
out
push
cmpl
jb
jne
cwtl
in
int
pop
push
push
mov
jb
pusha
aam
std
insl
test
insb
jno
mov
iret
aaa
cs
mov
sbb
into
push
xchg
adc
filds
sahf
sub
jle
pusha
jo
icebp
shll
push
test
sbb
cmpb
popf
dec
xchg
mov
xchg
jno
xchg
mov
movsb
out
rorb
incb
adc
dec
ret
call
dec
cltd
hlt
xchg
pop
inc
mov
imul
cmp
aaa
fcoml
and
and
lcall
xchg
test
add
mov
sbb
fsub
dec
lods
and
or
xorl
adc
jp
in
roll
fstl
mov
daa
adc
out
ficomps
out
or
sar
jmp
nop
aaa
lret
xor
mov
int3
inc
adc
dec
mov
adc
stos
repz
sti
xchg
test
and
insb
test
adcl
adc
or
jo
frstor
in
rcll
xor
pop
sub
cmpsb
mov
cmc
and
push
mov
pop
sub
fcoml
shl
in
xchg
xchg
sahf
push
ds
xchg
mov
xor
cmp
sub
push
imul
cli
sbb
sbb
adcl
add
sbb
leave
push
push
push
mov
fwait
loop
in
pop
and
ljmp
aas
xchg
das
dec
jo
inc
inc
ds
dec
scas
mov
and
inc
inc
pushf
and
cs
loopne
scas
mov
jecxz
lea
mov
int3
xchg
sbb
scas
mov
xor
lret
add
xchg
cmp
je
jg
mov
fadds
jp
adc
inc
mov
xchg
je
dec
fisttpll
fsub
movd
mov
dec
or
lahf
ljmpw
cli
add
enter
xlat
lahf
das
xchg
cmp
out
mov
push
mov
dec
jle
dec
jno
arpl
aaa
call
fcoms
jp
in
popf
xor
loope
dec
loopne
pushf
hlt
aam
shlb
lock
loop
jae
repnz
jnp
xor
stos
leave
lcall
jbe
hlt
cltd
inc
mov
aad
out
cltd
xchg
mov
in
jmp
push
xchg
push
aaa
arpl
inc
in
mov
mov
out
add
mov
call
popf
ljmp
stc
push
mov
and
int3
mov
shll
jb
into
sti
sub
inc
mov
jne
stc
test
fistpll
aas
sahf
cmpsb
daa
aas
xchg
rcll
lods
test
push
push
mov
shl
jnp
pop
cld
mov
int
xchg
repz
fwait
cltd
les
jecxz
icebp
push
jbe
mov
roll
inc
das
in
psllq
pop
pop
jmp
out
cli
popa
fs
mov
mov
sbb
out
test
or
pop
das
cmpsl
cmpsl
in
push
pop
gs
sub
jbe
je
mov
and
fs
and
or
pop
cwtl
int
addl
cmp
hlt
out
cmpsb
mov
jne
sbb
dec
jo
push
dec
gs
mov
sub
pop
and
xchg
icebp
jae
inc
adc
xchg
enter
jge
xchg
popf
xchg
mov
push
inc
jecxz
lods
movsb
xor
jb
lret
pop
push
std
gs
pop
not
sbb
jo
lods
push
xchg
or
push
ret
and
jp
xchg
pushf
stc
aad
xor
ja
jg
mov
push
or
mov
push
pop
adc
in
sub
dec
mov
xor
dec
and
lcall
aaa
mov
and
add
jo
push
fdivs
shlb
fisttpll
mov
data16
sarb
push
shlb
cli
xchg
xor
cli
or
adc
clc
pop
mov
jecxz
xor
lret
push
jge
sbb
cwtl
movsl
daa
fcmovnbe
loope
pop
fistl
sti
andps
dec
ret
pop
ss
jmp
fprem
leave
fs
repz
cmp
clc
pop
hlt
dec
mov
je
insb
cmpsb
mov
jnp
xor
or
aam
insl
fwait
xor
scas
cmp
inc
dec
popf
lret
loope
jo
movsb
jle
insl
lahf
dec
push
pop
cmp
and
cmp
xchg
or
sahf
inc
push
push
pop
or
push
dec
test
dec
xchg
test
arpl
aam
and
sbb
pusha
push
sbb
xor
lods
fldl
out
sub
mov
mov
xchg
pop
sub
fwait
mov
sbb
and
xlat
sbb
adcl
aad
or
ss
sub
push
aaa
dec
cmp
out
fs
jmp
inc
fucomp
push
add
stos
sub
adc
pop
pop
stc
cmp
lcall
mov
cwtl
jo
les
repnz
lret
fisubl
push
bound
xchg
fwait
xor
add
sub
ret
inc
xchg
out
push
movsl
scas
and
xor
pop
or
add
add
shrd
movsl
out
jp
stos
mov
push
lret
jo
movsb
push
cmp
idiv
ret
sbb
sbb
cs
push
adc
cmp
mov
test
mov
xchg
mov
sbb
popf
or
inc
cwtl
mov
stos
cmpsb
daa
iret
and
cmp
lods
call
shr
sbb
and
adc
jnp
and
add
loop
push
and
movsl
lods
popa
imul
pop
push
xchg
test
mov
push
push
xor
dec
test
mov
inc
lds
aad
inc
dec
mov
movsl
loop
inc
outsl
cmpb
lock
sbb
iret
sahf
jb
movsl
xchg
jns
mov
add
jne
pusha
test
mov
push
int3
sbb
mov
mov
int
or
insb
imul
addb
aas
fs
mov
cmp
shlb
rorl
add
lret
mov
dec
and
jl
push
pop
and
iret
cltd
cmpsb
xor
popf
push
mov
pop
popw
in
mov
addr16
jecxz
call
xchg
pop
mov
sbb
jb
mov
lods
movsl
and
inc
cmpb
lock
and
outsl
fistpl
lret
in
jl
and
dec
push
adc
rcrb
cli
ljmp
add
ds
push
mov
subb
ret
shll
orb
mov
inc
mov
dec
push
pop
jp
test
pop
insb
xchg
pop
jg
imul
add
pop
xchg
sbb
pop
push
pop
sub
pop
dec
ljmp
push
and
add
js
cltd
xchg
pop
xchg
adcb
xor
inc
jns
lea
add
adc
rol
inc
js
add
movsb
nop
pop
fnstsw
sbb
mov
jns
lock
loopne
jmp
mov
mov
js
sbb
cmp
stos
sti
movsb
rcl
mov
loopne
icebp
mov
test
and
or
mov
mov
shll
arpl
fldenv
cmp
add
rcll
xlat
into
cwtl
fwait
pop
push
dec
loope
in
push
js
sbb
sub
xchg
scas
mov
adcl
pop
sub
xor
inc
push
dec
outsl
or
lds
jne
xor
sub
mov
stos
add
lea
dec
ja
fwait
pop
xchg
dec
insb
xchg
xchg
and
pop
jmp
lock
ss
loope
push
lahf
or
push
push
test
shl
daa
leave
jmp
shlb
add
jge
je
jp
nop
rorb
fsubrs
xchg
test
sub
sub
mov
cli
clc
xchg
decb
jo
gs
in
push
insl
lahf
mov
sbb
sbb
xor
adc
test
leave
mov
xlat
push
punpckhbw
cmpb
inc
dec
mov
inc
inc
or
sub
inc
cmp
pop
fsts
in
leave
mov
rorl
sarl
addr16
out
aam
cmpb
pusha
sub
adc
cmp
add
repz
mov
shrb
jnp
mov
xchg
inc
mov
adc
fimull
mov
xchg
lods
sub
ss
shlb
data16
arpl
jns
and
out
mov
sub
jge
jbe
movsb
sub
xor
in
cmpsl
arpl
scas
daa
mov
and
sbb
les
mov
push
and
ret
cmpsl
jns
inc
lahf
fidivrs
out
pusha
jmp
loop
mov
mov
mov
clc
push
mov
add
xor
packssdw
insb
push
fs
add
mov
cmp
pandn
cmp
fstpt
xor
orl
imul
testl
outsl
inc
subl
in
push
mov
inc
ss
sbb
xor
sub
xor
fs
mov
jne
imulb
jmp
add
xchg
mov
in
xor
in
dec
xchg
lods
cmp
sub
xorl
mov
mov
lods
push
test
iret
addr16
sub
loop
and
enter
fdivr
sub
repnz
test
pop
mov
xor
data16
je
pop
lods
loop
jns
sti
fidivrs
or
lods
je
adc
aaa
into
rorb
jo
rcrb
mov
jo
push
dec
mov
insb
lcall
outsl
and
aaa
mov
in
popf
lods
xchg
cs
mov
push
fadds
insl
xchg
movlps
jg
xchg
lock
fildll
rcr
sahf
xlat
roll
int3
nop
jbe
or
mov
pop
inc
arpl
dec
push
jl
lea
in
xchg
dec
aas
add
sbbl
mov
sti
rcl
cld
jmp
insb
adc
add
dec
pop
or
mov
lock
push
xchg
ljmp
dec
out
or
add
in
outsl
lret
cmp
or
inc
popa
jbe
icebp
rcr
jg
jle
cmp
in
sub
add
sbbb
adc
lods
aad
sub
pop
aaa
jmp
sub
je
dec
repz
mov
jmp
xor
or
push
lods
js
movsb
add
xor
imul
xor
enter
popaw
adc
aas
lcall
adc
jmp
arpl
imul
add
rcrb
pop
inc
shr
lret
outsl
push
ret
cmpsl
adc
push
pop
pop
pop
sbb
nop
sbb
arpl
dec
pushf
push
mov
cmp
sbb
pop
mov
mov
cmpsb
lock
inc
cli
and
and
xor
mov
cmc
mov
stc
xchg
mov
stos
inc
jge
push
push
mov
mov
mov
mov
push
lret
inc
xor
subb
xor
clc
lret
or
pusha
pop
sti
fbld
clc
dec
xchg
jb
xchg
fsubs
lret
or
xchg
dec
mov
je
dec
jle
js
jbe
inc
pushf
outsl
mov
fstps
imul
sub
ret
jns
fildl
int
lret
mov
sbb
outsl
pop
add
xchg
fisubrl
push
int3
mov
push
fwait
jecxz
sbb
loop
int
sbb
cmpb
jnp
or
jnp
sub
lret
ja
sbb
mov
mov
bound
jne
xchg
push
data16
bnd
inc
das
in
inc
int
jbe
mov
jbe
test
ror
mov
mul
push
and
inc
mov
and
cltd
jns
popa
xor
decb
mov
ds
hlt
mov
push
inc
or
or
push
into
cld
sarb
ret
xchg
lahf
xor
sub
leave
ret
lods
or
dec
lods
push
cmc
bound
adc
cmp
popa
ljmp
pusha
sbb
test
push
aad
cwtl
sub
add
cmp
inc
or
mov
jp
cmp
std
outsl
adc
add
jg
sbb
sbb
add
xchg
mov
mov
scas
rclb
out
pop
fisubrs
popa
dec
sub
or
bnd
and
mov
push
dec
out
es
fstpl
shrl
inc
xchg
aas
adc
lds
mov
adc
push
sbb
pop
int3
sbb
roll
rcrb
imul
cmp
push
jno
mov
adc
clc
dec
push
sti
mov
out
ljmp
pop
mov
jno
fsubs
add
js
shll
andb
mov
nop
sti
add
dec
jge
push
pop
mov
lret
xchg
fimuls
out
jnp
dec
mov
pop
imul
lock
imul
lret
push
clc
lcall
aam
lahf
push
push
mov
cltd
shr
faddp
mov
push
sub
int3
shrb
push
jecxz
in
cmp
in
push
or
jg
aas
xchg
sbb
mov
cmp
popf
mov
and
or
adc
insb
das
fistl
and
mov
mov
or
xchg
insl
fisttpll
subl
xchg
ljmp
lea
lret
fistpll
dec
testl
push
mov
cwtl
insl
iret
fcoml
sub
cmpsl
daa
mov
enter
mov
ljmp
pop
pop
lock
mov
cli
in
into
pop
dec
adc
sub
mov
push
fs
iret
lret
insb
orb
popf
mov
sbb
iret
cmpsl
fldt
negl
xor
lock
add
ds
cmp
mov
xchg
inc
xor
push
addr16
bound
fwait
leave
add
negb
test
je
xchg
mov
rolb
inc
arpl
jae
and
xor
xchg
in
jle
pusha
push
pop
mov
adcb
cli
aas
jecxz
clc
js
insl
inc
popf
ljmp
incl
jge
sub
pop
call
pusha
sbb
into
mov
dec
lock
add
test
cmp
imul
cld
xchg
in
imul
cs
sub
lods
xchg
fdivrs
shlb
test
ja
sbb
mov
mov
dec
test
bswap
mov
push
bound
jmp
cwtl
dec
aaa
mov
fld
js
adc
mov
jbe
sarl
ficomps
or
test
pop
mov
sbb
mov
push
or
imul
out
int3
cmpl
repnz
mov
aad
adc
ret
ret
xchg
adc
hlt
mov
mov
pusha
jle
push
popa
pop
dec
mov
cltd
fadd
dec
add
fldl
add
xor
repnz
fisttpl
push
lcall
dec
mov
sbb
inc
aas
loopne
aad
lahf
mov
xchg
xor
sbb
scas
imul
outsl
xchg
pop
add
pop
push
cmp
mov
jae
inc
xchg
inc
popa
inc
jnp
or
pusha
shll
sub
or
jl
push
sub
and
rcrl
mov
xor
adc
xchg
jno
imul
push
jge
push
stos
xor
add
adc
mov
and
xchg
jmp
jecxz
pop
stos
adc
inc
pop
cmp
ret
pop
mov
into
mov
shlb
sti
fidivrs
pop
xor
insl
add
push
xorb
dec
dec
mov
daa
jae
idivl
addr16
fabs
mov
xchg
mov
es
bswap
dec
mov
cmp
rcll
jp
rcll
loopne
adc
inc
mov
pop
adc
inc
mov
rol
mov
les
xchg
dec
inc
mov
inc
cmp
add
pop
inc
out
not
xor
sub
sbb
and
sbb
incl
cmp
je
xchg
push
adc
push
mov
rcrb
jb
xchg
fmul
jo
test
pushl
xchg
push
adc
mov
test
add
inc
ret
push
add
out
fwait
push
sub
sbb
pop
jnp
jb
jnp
cmp
cmp
int3
jmp
adc
fisubrl
adc
xchg
test
hlt
in
add
movsl
push
sub
xchg
rclb
dec
mov
jae
scas
lahf
xchg
in
aas
inc
dec
fidivrl
popa
pop
call
pusha
icebp
or
bound
inc
dec
addr16
ret
jl
dec
dec
nop
fistl
dec
pop
aad
sub
inc
mov
call
and
jbe
mov
pusha
fbld
lret
imul
aaa
inc
sbb
stos
leave
movsl
fistpl
mov
or
mov
inc
inc
js
arpl
call
inc
int3
movsb
test
inc
lcall
sbb
push
xchg
xor
outsb
mov
sub
pushf
addr16
hlt
out
daa
pushf
cmp
fstpt
mov
jmp
jb
mov
loop
or
mov
add
xchg
jno
fisubrl
inc
add
dec
adc
pop
jbe
push
cmp
pushf
ret
pop
mov
leave
mov
mov
gs
das
cmpb
lods
fidivs
xor
mov
fstpt
ss
ret
xchg
arpl
loop
rcll
andb
and
orl
inc
mov
pusha
xorb
jle
and
jns
cltd
mov
fnsave
lcall
mov
enter
mov
das
out
sub
mov
and
mov
lcall
call
sub
lahf
daa
xchg
dec
ss
insl
scas
dec
xchg
fldlg2
insb
xchg
stc
iret
out
and
and
cmp
scas
inc
aam
xchg
ja
dec
jge
push
sti
add
sub
xlat
cmp
shll
sbb
pop
fistpl
add
aad
mov
push
out
stc
lcall
cmpsb
dec
lds
je
ds
das
pop
cmp
jmp
mov
jne
loope
jns
jle
push
enter
lret
push
and
shl
fmul
stc
jecxz
mov
std
lcall
mov
adc
pop
pop
movsl
rolw
movsl
sbb
addb
rcrb
lret
loope
andb
cmc
inc
and
pop
js
lret
les
mov
lcall
add
xorb
mov
lock
jae
fcmove
outsl
fsubl
data16
cmpsb
inc
stos
pusha
add
push
loop
into
ljmp
jmp
add
insl
xchg
mov
lahf
mov
mov
pop
dec
push
push
mov
jle
xchg
mov
mov
jge
stc
add
or
mov
nop
mov
imul
pop
in
push
jb
jp
fidivs
loop
sarb
mov
cmpsb
xchg
pop
in
fisttps
lods
cwtl
push
enter
dec
test
mov
arpl
in
cmpsb
arpl
add
aad
arpl
fdivrl
outsl
jg
sarb
lret
mov
cli
mov
xchg
js
jp
add
pop
into
int3
lds
clc
imul
mov
sub
sub
push
outsl
negl
pop
enter
setle
cmc
jecxz
outsl
sub
sub
sbb
lcall
int
jnp
xor
aas
hlt
jb
xor
mov
mov
ja
imul
mov
jo
mov
lea
dec
test
fwait
test
popa
lods
imul
adc
in
cmp
dec
in
adc
inc
inc
jl
shl
xchg
pushf
cmpsl
jp
xchg
mov
push
and
cli
stos
xchg
inc
fistps
mov
and
cmp
jno
mov
outsb
xor
repnz
lods
arpl
pusha
adc
inc
jecxz
mov
add
cmpsl
push
lds
xchg
or
andl
gs
arpl
out
mov
mov
test
enter
sub
subl
loop
insl
cli
mov
dec
inc
cmc
inc
in
rorl
mov
adcl
cmp
icebp
cld
out
mov
lock
adc
mov
or
or
jge
push
movsl
test
scas
outsb
or
outsl
push
out
inc
fmull
test
shll
mov
or
jb
mov
insl
and
pop
scas
jl
xchg
dec
shr
mov
repz
bound
push
sbb
or
dec
stos
push
lock
lods
dec
sbb
cmp
mov
inc
xchg
imul
daa
test
outsl
sbb
push
sbb
inc
push
or
mov
lds
lods
adc
in
pop
roll
mov
or
xor
add
add
mov
sub
xchg
aaa
sbb
xchg
pop
mov
cmpsl
add
pop
into
iret
out
enter
add
neg
or
inc
aam
or
and
adc
jno
sub
addb
mov
cmp
test
xchg
pop
fs
sbb
and
pop
mov
shll
or
fstpt
scas
push
addr16
imull
fcoms
pop
call
adc
cmp
addr16
jge
loopne
xchg
mov
mov
mov
sbb
adc
mov
pop
push
dec
ss
mov
call
or
pop
sub
push
mov
icebp
push
mov
call
int
into
jb
adc
pop
pop
pop
sub
dec
cmpb
ret
inc
add
enter
into
or
pop
dec
sub
pop
sbb
mov
pop
lahf
cwtl
arpl
fildll
mov
push
repz
outsl
adc
test
leave
cmp
test
daa
cs
dec
adc
add
push
sahf
pusha
lock
repz
sar
and
push
push
movsl
addr16
jae
stos
mov
or
das
js
pop
mov
adc
or
pop
or
dec
subb
ret
dec
imul
iret
jmp
enter
pop
mov
pop
mov
mov
lods
mov
cmp
cmp
xor
popa
adc
mov
and
and
push
addb
int3
ss
jo
xchg
jmp
into
jb
int
push
jg
sbb
mov
movsb
add
repnz
movsl
repnz
rorl
lock
loope
adc
mov
and
fsubrl
shl
fucomip
lret
sbb
or
cmp
movsb
inc
cmp
fs
std
addr16
add
jmp
pop
je,pt
mov
jg
lahf
xchg
xlat
les
or
jo
inc
inc
push
pop
inc
cmpsl
xlat
push
inc
or
xchg
mov
int
push
loopne
sbb
mov
ret
cmp
pop
xor
cltd
rcr
lds
notl
stos
cmp
pop
xor
mov
push
jb
xor
dec
xchg
in
add
pop
xchg
push
pop
fs
cmp
mov
xchg
jge
shll
mov
cmp
jnp
push
xchg
out
rcll
int3
repz
gs
jo
inc
aas
icebp
mov
dec
mov
mov
ret
jmp
fsubrs
idivl
movsl
mov
aam
outsb
mov
cmpsl
js
filds
sti
adc
push
lret
pushf
fcoml
pop
in
cmp
add
lret
mov
sub
subb
insb
repz
movsb
mov
stos
push
fcmovnu
and
or
pushf
sbb
mov
int3
add
push
xchg
jecxz
mov
add
out
rcrb
rcrl
aas
push
inc
cmp
inc
push
xor
movsl
insb
fwait
xor
lea
push
fldl
adc
scas
mov
inc
mov
sarb
push
ja
hlt
and
sti
mov
mov
add
rcl
arpl
dec
jecxz
std
repnz
sub
sbb
orb
jmp
or
pop
xchg
mov
fnsave
cli
pop
and
repnz
lcall
inc
cmp
dec
jle
fistpll
in
repnz
cmp
sub
imul
jo
add
ret
cmp
ret
imul
xor
sub
mov
jle
cmp
lret
push
dec
mov
stc
ss
mulb
clc
ret
cld
dec
mov
testb
xchg
dec
dec
jo
imul
xchg
shrb
inc
jno
in
mov
inc
push
lea
sub
cmp
adc
int3
and
mov
rclb
repnz
xor
sbb
pop
outsl
push
lret
js
gs
push
insb
je
cmp
sub
stos
js
xorb
push
and
push
jmp
fs
push
push
mov
sub
in
and
push
push
xor
mov
cld
nop
mov
shlb
in
lods
mov
cs
or
xchg
xor
sbb
sub
push
xchg
add
lcall
shrl
mov
and
loop
sub
push
mov
lret
inc
ror
mov
filds
iret
inc
add
xor
inc
aad
adc
jo
jl
mov
mov
push
sbb
scas
ficomps
fwait
xchg
mov
lds
pop
sbb
lret
adc
and
push
pushl
in
sub
pop
sbb
fnstsw
or
adc
xor
or
jo
fisubl
addr16
xor
lds
push
inc
insb
insb
mov
stos
cli
xchg
sub
movsl
xchg
jns
jecxz
popf
pop
xlat
shll
push
mov
popa
pop
pop
es
into
insl
xor
sub
sub
fistps
iret
aaa
fcmovbe
xchg
stos
or
rcll
mov
loopne
into
push
mov
stc
or
and
mov
icebp
test
xor
popf
sarl
sti
push
fsts
lds
jp
je
xchg
fwait
pop
sbb
in
sahf
xchg
test
jecxz
negl
lret
sub
pop
in
lock
out
or
daa
pop
repnz
mov
mov
mov
adc
addr16
push
xchg
popa
shlb
dec
push
lret
imul
xor
sti
loope
cmc
imul
xchg
jmp
int3
adc
jp
push
in
cmpsl
push
pop
aas
ret
sbb
out
mov
outsl
mov
bound
push
adcl
mov
fs
pusha
fimuls
jnp
mov
or
sub
inc
pop
xor
mov
and
xorl
mov
dec
arpl
lods
xchg
mov
scas
cmp
mov
enter
mov
repnz
sbb
cmpsb
mov
iret
mov
mov
outsb
xor
pop
mov
lahf
stos
adc
out
loop
rol
push
push
xchg
xchg
inc
xchg
and
aaa
and
mov
adc
push
dec
push
stc
sbb
dec
lcall
push
pop
stos
lahf
das
pop
rcrl
gs
bound
add
adc
mov
add
xor
test
add
or
lods
subl
orl
shrb
push
fwait
pop
das
cwtl
movsl
sbb
add
loopne
inc
out
ds
dec
std
imul
cmpsl
xor
fdivs
mov
and
dec
push
sub
inc
and
data16
sbb
mov
sub
inc
arpl
xor
cld
roll
imul
nop
in
or
push
inc
mov
ficoms
clc
stos
shll
fdiv
sub
pop
xchg
jl
cmp
cmp
mov
bnd
and
je
lock
cmp
les
test
sarl
jp
inc
sbb
push
xchg
xchg
sub
lcall
pop
sub
leave
add
je
faddl
imul
jg
xor
inc
je
mov
mov
push
push
dec
in
push
shlb
jmp
or
test
shl
push
cmp
cmpsl
daa
adc
pop
pushf
movsl
loope
push
mov
fs
ss
push
mov
push
mov
inc
cli
cmp
and
aaa
add
mov
fldenv
pop
pop
out
or
int
pop
shll
adc
xchg
pop
or
fbld
shll
xchg
test
push
cmpsb
xchg
xor
pop
mov
mov
cmp
addr16
adc
cmp
mov
insb
mov
shlb
pop
inc
xor
inc
ds
imul
mov
jmp
dec
adc
out
out
stc
sbb
mov
mov
popa
repnz
out
jb
xor
push
movsb
push
jl
mov
mov
xor
inc
xchg
repnz
dec
cs
mov
inc
in
sub
int3
adc
bnd
adc
sub
add
out
jno
enter
xchg
sub
lock
mov
and
cmp
push
imul
mov
les
arpl
mov
int3
xchg
int
clc
test
dec
inc
out
out
cmp
mov
and
mov
xchg
and
mov
lds
or
jg
jmp
xchg
cmp
mov
fwait
or
enter
mov
xchg
cwtl
adc
pop
fldcw
ja
dec
mov
xchg
xor
cmp
mov
ret
mov
leave
ja
ret
dec
pop
outsl
cmp
stc
lods
sub
xor
sub
inc
int3
xchg
jnp
adc
jl
mov
push
movsl
lods
adc
cli
or
xchg
out
cmp
mov
in
fildll
fs
aaa
lods
or
mov
test
into
insb
mov
cwtl
lock
jnp
add
test
pop
fcomps
movsl
icebp
lret
shr
jae
or
in
mov
pop
inc
sbb
push
insl
shll
imul
jae
sti
jae
dec
cmp
mov
mov
or
adc
inc
push
cmpsl
iret
cmp
sti
fcmovnb
jl
jae
mov
sti
xchg
leave
ds
inc
xchg
pop
mov
cmp
jmp
shll
add
push
xor
add
call
dec
push
in
nop
push
icebp
jg
adc
out
cmp
sub
js
cltd
xchg
xor
inc
dec
or
fs
lcall
pop
icebp
adc
dec
dec
and
ja
cmp
popf
cmp
push
shll
xchg
in
gs
cmpsl
das
jo
push
adcl
inc
out
rolb
adc
leavew
add
and
dec
cmpsl
mov
inc
ret
rcll
sub
inc
add
imul
nop
sub
fs
push
mov
dec
jb
jnp
adc
mov
movsb
cmpsb
mov
fwait
xchg
dec
mov
fldl
ds
insl
add
jne
jl
mov
sti
fld
mov
xor
pop
scas
add
adc
mov
add
mov
dec
sbb
fcmovu
cmp
inc
nop
movsb
rcr
repnz
push
into
fldl
pusha
jp
pop
push
mov
shr
je
mov
call
dec
adc
in
xchg
fisubrl
mov
lods
xor
push
repz
jecxz
lods
popa
pop
xor
cltd
in
inc
add
je
dec
or
lea
loope
or
lret
cmp
push
jno
push
shll
gs
js
pop
clc
xor
test
arpl
pop
or
or
stc
cmp
pop
das
and
jl
pop
inc
inc
mov
add
xor
aad
aaa
jno
call
stos
push
xlat
lret
pop
sbb
aad
dec
popl
xchg
dec
sbb
pop
and
pop
repnz
sub
es
pushl
and
mov
sub
xchg
dec
xlat
push
in
in
outsb
repz
ja
push
mov
mov
or
mov
xchg
fistl
add
sti
pop
xor
mov
cli
flds
sub
call
mov
out
out
cmp
mov
adc
test
jbe
pop
call
in
out
out
push
lock
xor
dec
sbbl
call
sysret
inc
and
cmp
lods
inc
adc
mov
sahf
sbb
pop
shrl
and
std
sub
arpl
test
std
xchg
push
pusha
mov
dec
hlt
dec
mov
xchg
loope
mov
sar
divb
dec
sub
jl
inc
or
enter
push
or
stc
pop
dec
xchg
cs
jg
daa
hlt
dec
cmpsb
into
sbb
jmp
jmp
inc
sbb
mov
xchg
aas
imul
rclb
test
or
outsl
mov
scas
mov
push
push
shll
push
dec
xchg
pop
xchg
in
inc
out
xlat
test
adc
cmp
fs
mov
pop
cmp
rcrb
in
add
es
jecxz
dec
adc
jg
mov
sub
test
arpl
mov
inc
int3
aad
and
mov
das
test
jg
cmp
loopne
jp
adcb
jns
dec
rorl
inc
add
bound
sbb
ds
cmpsb
inc
push
test
mov
leave
mov
subb
mov
cwtl
imul
rorb
fdivrl
cmp
and
movsl
add
inc
xor
and
or
nop
addl
mov
xchg
out
push
scas
pop
sbb
out
add
jbe
fidivrs
fidivrs
jbe
data16
in
sub
inc
lea
adc
mov
add
popa
lock
pop
test
mov
shrb
fildl
pop
divl
or
mov
repz
dec
push
mov
mulb
lea
push
lock
sub
dec
mov
and
std
cmpsb
and
push
scas
adc
in
and
jecxz
lds
hlt
xchg
adc
js
das
push
fldcw
nop
repz
es
nop
sbb
or
sub
pop
dec
dec
das
mov
popf
xchg
dec
cmp
ret
sub
jnp
cmp
and
sbb
notl
xchg
daa
inc
adc
mov
push
cmpsb
mov
mov
cmp
cwtl
cmp
lahf
sub
das
icebp
xlat
jle
inc
jo
push
lock
pop
inc
cs
in
mov
fwait
dec
lods
push
fldl
mov
sbb
aam
aas
ljmp
dec
push
lret
fbld
mov
push
push
adc
mov
iret
enter
jmp
loope
pusha
gs
adc
pop
push
inc
cmp
pop
inc
daa
sub
mov
mov
dec
adc
inc
xor
push
pop
cmpl
xor
xchg
popf
mov
stc
outsb
adc
idivl
xchg
and
push
dec
push
popf
lods
fsub
imul
dec
add
test
out
push
mov
in
and
add
and
mov
sbb
cmp
xor
fs
filds
add
int3
mov
cmp
push
stos
arpl
stos
pushf
scas
inc
xor
mov
arpl
jl
mov
test
pop
lret
cmp
push
push
inc
leave
out
push
fidivs
rcrl
loope
pop
out
push
pop
push
mov
inc
or
lock
js
dec
xchg
aas
loop
xlat
in
mov
cmp
out
out
and
and
adc
inc
test
sbb
nop
push
sbb
sub
dec
mov
add
jb
xchg
dec
std
inc
sbb
mov
jge
mov
in
mov
stos
aaa
jnp
dec
daa
pusha
cmp
mov
xor
loopne
sbb
cmpsl
test
adc
xlat
push
pop
ss
fs
es
scas
cmp
jle
sub
add
je
sub
out
and
sub
div
int3
int3
or
cmp
push
mov
mov
ret
mov
mov
js
scas
add
push
pusha
clc
les
inc
sub
adc
sbb
inc
cmc
ret
push
dec
dec
jo
jmp
enter
jmp
sub
inc
jg
adc
sahf
loopne
mov
ja
dec
xchg
mov
mov
jnp
mov
test
mov
int3
dec
pop
mov
inc
jmp
lods
adc
cs
into
push
shll
inc
sahf
data16
mov
xlat
mov
insb
xchg
jle
mov
add
sbb
sbbl
push
xchg
sbb
fldt
add
mov
mov
sbb
and
and
or
dec
jecxz
jl
sub
mov
sarl
dec
and
sub
dec
addb
inc
mov
xchg
lret
pop
xchg
adc
das
subb
cld
and
push
pop
jecxz
mov
inc
cmp
or
int
or
fsts
nop
gs
fildll
sbb
dec
jp
or
aaa
subb
js
adc
cmp
out
xor
cmp
push
push
and
sub
dec
loopne
mov
sti
cmpsl
loope
ficoms
lock
xchg
mov
ljmp
and
call
fistl
out
negb
xchg
dec
cld
ljmp
hlt
cltd
dec
mov
add
cmp
lahf
jmp
pop
aam
mov
lea
inc
jb
pop
ret
inc
dec
and
jp
jle
ljmp
adc
ja
aas
push
cmp
mov
test
or
and
dec
les
xchg
jbe
sbb
fnsave
inc
pop
mov
jno
gs
add
jae
scas
mov
stos
lods
xor
cmp
and
pop
test
sbb
loop
jmp
ret
mov
jmp
cmp
and
js
xchg
pop
mov
int3
out
dec
and
and
aad
jo
sub
mov
dec
scas
xor
jbe
mov
and
adc
mov
movsb
pushf
xchg
mov
imul
aad
xchg
aad
neg
test
pop
fs
jns
push
pop
orb
pop
outsb
xchg
sub
sbb
loope
jne
sbb
jmp
fisttpll
and
cmp
and
popf
sub
add
lcall
test
xchg
push
jns
out
ret
bound
andl
push
shlb
cmp
loopne
sub
inc
mov
xchg
enter
mov
in
sti
ret
cwtl
adc
add
shll
mov
fcomps
aaa
outsb
xor
lret
dec
mov
cwtl
andl
enter
adc
xchg
out
mov
cli
imul
mov
sahf
rcr
sbb
out
sbb
data16
scas
cmp
mov
mov
lods
daa
mov
xchg
xor
out
jge
dec
movsl
insb
sbbb
jo
jg
add
add
and
out
test
test
pop
aad
lea
loope
sub
push
pop
inc
nop
jb
sbb
inc
mov
lret
fdivrl
xor
mull
insl
dec
loop
test
xor
test
pop
mov
enter
stos
fidivs
call
std
mov
adc
icebp
mov
and
pop
jg
or
push
and
or
xor
and
inc
lcall
icebp
xchg
sub
adc
out
mov
mov
fdivrs
mov
fisttpll
dec
push
outsl
fdivr
or
fidivrs
imul
inc
data16
test
jle
pop
imul
jg
or
push
sbb
scas
out
in
je
mov
fnsave
imul
iret
sbb
pop
nopl
xchg
cmp
imull
data16
adc
call
fildll
push
loope
push
test
pop
adc
ss
in
movsl
fwait
mov
sbb
jg
aaa
sahf
in
inc
cwtl
xorb
pushf
pop
cmp
imul
or
imul
push
insl
iret
push
lods
rclb
cld
jmp
cld
int3
fdivl
stc
cmp
mov
push
rclb
sub
addr16
loope
lods
test
jle
mov
iret
or
sub
dec
jp
mov
sahf
dec
xchg
mov
adc
pushf
add
test
cmp
mov
int3
add
not
rcrl
and
sub
adc
test
add
add
adcl
mov
pop
cmp
push
hlt
in
mov
pop
mov
leave
mov
ret
push
lds
inc
pop
mov
in
outsb
imul
push
or
push
cmp
sbb
jp
ss
int3
call
andl
unpckhps
adc
pop
in
adcl
popa
mov
push
add
sahf
sbb
push
rcrl
cwtl
mov
in
pusha
cmp
dec
xchg
jb
fcomip
jg
data16
sahf
call
test
mov
dec
aam
test
dec
pop
std
mov
mov
jmp
aad
imul
pop
scas
mov
call
scas
pop
ds
aad
sbb
inc
imul
adc
into
xchg
mov
push
cmp
and
ja
loope
and
jg
popf
clc
pop
lods
add
pop
adc
pushf
jecxz
adc
pop
mov
mov
sbb
xor
test
pop
and
xlat
daa
sahf
mov
dec
ret
mov
inc
lret
jmp
ljmp
aad
shrl
sub
mov
ret
mov
lcall
cmp
sbb
mov
adc
outsl
arpl
and
adc
test
das
clc
inc
fdivl
xor
inc
scas
inc
jl
inc
mov
mov
xorb
inc
inc
dec
push
push
fcmovbe
outsb
pop
dec
and
inc
xchg
jb
rcr
xorb
addr16
push
cmpb
xchg
cmp
or
ret
xchg
test
aaa
add
lods
fs
test
adc
mov
mov
pop
jne
decb
mov
fistpl
mov
fiaddl
mov
pop
data16
push
mov
jne
fmuls
jns
cmp
in
ss
cltd
pop
sub
adc
mov
lcall
call
cld
mov
pop
nop
xchg
loop
cmp
shr
stos
jb
in
mov
js
mov
cmpsl
iret
outsl
adc
push
mov
mov
pop
cs
xor
cmpsl
dec
loope
add
ja
and
shrl
xchg
adc
mov
inc
or
or
mov
push
lock
clc
outsb
pop
stos
cmpsb
sbb
pushf
push
mull
xchg
clc
mov
ds
fcoms
hlt
jp
jne
leave
dec
xchg
int
dec
jne
imul
jge
lds
aad
iret
addb
cltd
pop
mov
cmpb
enter
add
xchg
xor
adc
incb
cs
fdivs
cmp
dec
hlt
pushf
insl
fcmovbe
inc
ffree
rcll
adc
cmpl
jl
mov
insb
ror
fcmovu
daa
daa
jo
xor
mov
push
in
xlat
sbb
mov
lock
or
adc
popa
xchg
xor
push
xchg
lret
adc
pop
sbb
rcrb
sbb
mov
js
ljmp
mov
fninit
jae
aas
jg
out
cmp
aas
cmp
pop
outsl
dec
dec
or
cld
fwait
dec
cwtl
push
imull
pusha
jne
inc
sub
pop
lods
getsec
fwait
xchg
fs
inc
pop
addr16
mov
leave
shll
push
lret
jecxz
mov
repz
sahf
lahf
inc
adc
shr
mov
in
pop
cwtl
cmp
sti
es
sbb
mov
pop
test
pop
fdivrs
into
mov
enter
rclb
pusha
add
mov
xor
mov
arpl
inc
mov
pop
and
or
mov
scas
clc
xchg
push
arpl
aad
dec
ja
and
dec
mov
mov
add
outsb
mov
mov
jne
cs
mov
adc
or
into
subl
sbb
hlt
xlat
mov
jg
push
insb
out
imul
fdivrl
sub
add
add
das
in
scas
int3
sub
mov
mov
fidivrs
mov
push
popf
inc
rcr
insl
inc
dec
ret
sbb
xchg
lcall
cmp
xchg
in
std
data16
lods
push
stos
add
mov
dec
adc
lret
int
std
mov
notb
into
and
or
mov
sahf
pushf
imul
or
inc
out
pushf
mov
into
push
mov
mov
mov
jl
push
out
or
pop
jb
xchg
inc
cli
rcl
push
add
fcoms
js
aad
lcall
aas
sbb
hlt
push
jo
subb
mov
popa
lret
mov
cmp
xchg
jo
pop
adc
loopne
dec
dec
mov
add
xor
ss
cmpsb
lock
movsl
cmp
ds
xchg
icebp
imul
inc
scas
icebp
icebp
mov
lcall
decl
push
push
pushf
adc
ljmp
adc
je
xor
movsb
sbb
adc
mov
scas
adc
mov
mov
fstps
xchg
push
popa
cmpsb
sub
sub
dec
nop
hlt
nop
rorl
lret
cmpsl
shrb
ret
into
inc
mov
repnz
xchg
shlb
mov
es
xchg
leave
icebp
cld
icebp
test
aas
xchg
gs
push
lea
rcrb
stc
nop
mov
sub
xchg
into
or
cmp
lcall
mov
in
push
push
sub
mov
xlat
out
mov
mov
jo
insl
add
mov
mov
mov
shrb
and
repz
jns
dec
cmp
adc
xchg
dec
aam
mov
pop
inc
imul
push
fsubs
aad
cli
cmpsl
int3
out
xor
and
fwait
scas
mov
add
mov
das
xchg
pusha
out
dec
xor
cmp
fmul
jge
cli
stos
scas
lds
cld
hlt
inc
and
fidivrs
movsb
cmp
lret
mov
pop
or
shrb
cli
mov
iret
inc
cmc
es
jnp
into
fimuls
scas
ds
movsl
stos
dec
aam
ret
push
inc
pop
daa
xchg
xchg
cmpsl
lock
ja
ret
cli
pop
sbb
mov
pop
ds
mov
notl
dec
es
in
popa
push
shl
xor
dec
movsb
aad
ja
sub
dec
or
jbe
xor
push
mov
and
inc
fwait
mov
dec
mov
aam
enter
fisttpll
mov
jmp
mov
push
sbb
sub
xchg
stos
mov
push
pushf
lea
mov
insb
icebp
push
adc
mov
nop
cmp
scas
dec
sahf
inc
jmp
cmp
xor
stos
dec
cltd
pop
xlat
push
fisubrl
insl
mov
jo
push
jbe
push
mov
mov
cmpsb
adcl
ret
inc
stc
fsts
hlt
mov
xchg
ficoms
sbb
jae
and
jge
add
inc
push
mov
mov
pop
sub
fimull
cwtl
negl
mov
in
sub
mov
and
sbb
fdivl
cmp
std
popa
aaa
lods
push
mov
dec
jle
and
loope
fs
inc
dec
xchg
rcll
sbbb
xlat
cli
mov
mov
lcall
dec
mov
cmp
into
dec
orl
repnz
and
shrl
sub
xor
sub
xchg
sbb
dec
in
inc
out
pop
je
cmp
mov
nop
pusha
inc
cmp
jb
cmp
jg
divl
or
ret
sbb
push
divb
call
mov
jae
pop
rcr
push
jmp
adc
mov
jg
push
data16
sbb
push
mov
jmp
in
xlat
es
jnp
cmc
daa
add
dec
or
mov
inc
incl
pop
jmp
inc
out
addr16
add
push
nop
repnz
ljmp
dec
mov
movsb
xchg
and
fcoml
mov
jg
jne
pusha
lds
sbb
push
ret
js
cld
adc
sub
xchg
lret
movsl
adc
add
je
cmpsb
and
push
cltd
cmp
sub
scas
popa
sarb
sti
inc
dec
mov
ret
sbb
pop
add
sbb
xchg
aaa
mov
frstor
sub
into
pop
neg
pop
and
add
mov
loope
xchg
out
outsb
inc
jb
icebp
or
pop
sub
and
or
je
pop
add
mov
int3
sub
cld
lds
data16
mov
adc
jp
cli
sub
xchg
jns
negl
mov
dec
sub
cwtl
and
mov
cmc
cld
testl
and
inc
mov
jmp
push
shlb
stos
insb
movsb
add
push
mov
pop
or
out
lock
fwait
mov
cmpsl
cmp
mov
cli
lret
in
adcl
dec
xor
dec
fs
add
jge
pop
outsl
sub
ret
sub
out
cmpb
rorl
fmuls
push
cmpsl
jmp
cwtl
sub
cmp
mov
rcl
fsubs
ljmp
shrl
insl
jmp
ror
rcll
dec
inc
cmpsb
pop
push
xchg
inc
mov
nop
hlt
pop
hlt
test
adc
sub
mov
outsl
arpl
outsb
scas
aas
fwait
adc
push
xor
hlt
das
xor
push
mov
xchg
pop
push
sub
mov
mov
fadds
insl
or
lahf
subl
dec
icebp
pop
ss
movsb
popl
push
xchg
adc
push
mov
adc
imul
insb
xchg
insb
js,pt
cli
scas
xchg
daa
movsb
adc
fdivp
js
xchg
stos
mov
test
or
shll
fwait
inc
dec
dec
jb
bound
pop
pop
int3
mov
cmp
mov
lods
das
push
xchg
push
xor
rorb
jae
jns
cld
aad
bound
scas
out
mov
cmp
hlt
jecxz
aam
push
clc
push
jle
and
jecxz
xchg
jbe
push
in
lret
cmp
push
push
cmp
pushf
xchg
lods
sbb
lds
movsb
sbb
movsbl
cmc
icebp
sub
jo
fists
xor
mov
sub
xchg
dec
xorl
push
bound
imul
sbb
cmp
mull
jle
cmpsb
push
movsl
cmp
sbb
and
shll
cmp
call
in
lret
xor
fbld
add
divb
sub
rorb
das
pop
adc
cmp
jns
sub
outsb
mov
mov
icebp
int
lahf
add
sbb
rclb
pop
in
adc
fldcw
jmp
arpl
les
pop
inc
dec
cs
add
inc
rcll
aam
sub
arpl
inc
cmc
out
jno
sbb
scas
lret
jo
call
imul
jmp
pop
cs
fisubs
inc
inc
andl
call
cwtl
mov
or
pop
mov
jg
fldt
pop
test
rorl
clc
stos
cld
mov
mov
adc
sub
ljmp
cli
cmp
xor
lahf
imul
and
stos
rol
fstl
dec
pop
mov
fdivrl
filds
add
mov
scas
mov
pop
mov
test
ret
out
adc
jge
rcrb
shl
lret
xchg
inc
scas
nop
call
mov
add
jecxz
into
and
add
fisttpll
cmp
aaa
xchg
jb
lret
mov
mov
sub
mov
fs
inc
loopne
jmp
pop
mov
dec
ret
insb
mov
jne
aam
jae
jmp
xchg
es
into
fldt
fwait
cmp
and
shll
mov
arpl
lret
movsl
inc
and
push
dec
pop
call
sub
jecxz
incl
ss
xchg
ret
or
in
dec
rcrb
enter
pop
adc
cmp
or
insl
stos
or
adc
mov
nop
or
roll
jl
mov
push
call
rolb
cmp
or
rclb
mov
mov
mov
push
out
and
cli
in
and
cmc
cli
es
je
mov
scas
xchg
fcoms
out
xchg
jnp
jp
aaa
nop
cld
jnp
cwtl
sub
inc
or
test
imul
mov
sti
inc
in
aas
fs
dec
lock
mov
test
arpl
jle
add
add
lods
sub
mov
int3
lea
icebp
xchg
xorl
cmp
sahf
cld
jns
xchg
or
mov
mov
mov
mov
jns
cmp
lea
nop
in
and
jecxz
ds
push
cs
pop
scas
push
cmp
xor
jp
cmp
loop
sbb
cmp
imul
cmp
and
stos
fldl
fiadds
popa
sub
sub
es
outsb
scas
push
andps
in
pusha
sbb
repz
stc
push
push
pop
jl
lea
loope
into
nop
popf
or
mov
push
dec
lret
add
sub
daa
lret
aaa
fldl
pop
das
es
xchg
out
mov
push
mov
sub
adc
and
mov
and
inc
cmp
pop
jge
mov
add
mov
dec
aad
gs
arpl
pop
fidivrl
dec
sbb
stos
and
loopne
mull
pop
mov
movsb
pop
mov
ds
add
and
fldcw
outsl
lcall
cs
mov
movsl
scas
xchg
mov
push
push
mov
push
mov
cwtl
xchg
pop
mov
stc
dec
cmp
and
dec
cmp
pop
pop
mov
jecxz
out
mov
fdivs
pop
adc
movsl
sub
ljmp
jne
lods
pop
sub
jge
pop
incb
mov
inc
out
ret
lea
hlt
negl
cmp
dec
jp
xchg
or
sbb
movb
into
ja
in
adc
sbb
enter
call
pop
mov
sbb
xchg
and
sahf
push
sarl
popa
insl
subl
sub
mov
pushf
pop
and
lcall
rcrb
imul
test
flds
jmp
inc
aaa
ss
xor
ret
xchg
inc
push
sbb
mov
cmpsb
test
pop
lcall
mov
xor
das
adc
sub
mov
adc
push
pop
fbstp
je
cli
lahf
cwtd
push
lds
xor
and
hlt
push
mov
and
mov
pop
loope
push
jge
adc
bswap
pop
pop
pop
lods
push
or
dec
pop
inc
in
mov
out
je
stos
std
sbb
jmp
sub
hlt
push
jae
pop
jne
lock
movsl
faddl
cmp
movsl
fmul
add
xor
lods
stc
adc
dec
xchg
cs
icebp
sub
mov
pusha
into
movsl
insb
inc
jg
in
daa
arpl
fcompl
pop
xchg
icebp
and
mov
push
dec
cmp
pop
xorb
inc
cmp
mov
outsb
push
add
outsb
xor
sub
mov
or
stos
fmull
xchg
sub
insb
lods
cltd
loope
sub
mov
sbb
imull
je
add
mov
test
fimull
and
loopne
popa
cli
mov
mov
and
mov
mov
seto
insl
imul
aad
pop
imul
adc
jge
fsts
iret
fwait
sbbl
sbb
adc
pushf
adc
mov
adc
std
mov
mov
insl
jb
aad
xor
in
lock
call
lods
and
aam
xchg
add
mov
scas
fsubrp
shr
sti
jge
or
hlt
sti
cmpsl
mov
pop
pop
pop
daa
lock
je
out
adc
cmp
xor
shll
xor
or
cli
dec
xchg
in
xor
inc
cmp
shl
cwtl
test
shrb
loopne
mov
clc
sbb
and
jno
dec
je
rcl
adc
and
add
pop
hlt
stos
cmp
outsb
xchg
inc
dec
jmp
and
fsts
cmpsb
arpl
or
cmp
sub
out
add
xchg
les
jecxz
lret
xlat
mov
xchg
or
mov
add
sub
mov
jae
and
int3
stc
mov
rcrb
test
test
dec
ret
leave
or
cmp
inc
dec
loope
jecxz
push
out
push
stc
js
sbb
popa
mov
ret
int3
enter
push
out
fiadds
outsl
cwtl
jb
inc
sahf
push
cmp
das
stc
xchg
mov
fwait
xor
adc
movsl
cmc
xor
test
push
pop
pop
mov
mov
es
js
divb
into
jne
adc
lods
sub
popa
mov
fadds
test
sysenter
in
cli
nop
mov
add
mov
mov
sub
inc
xchg
mov
sbb
push
push
stos
fstpt
pop
test
inc
sbb
popa
sub
adc
cltd
notb
cmc
lret
mov
jle
shrb
and
sub
xor
pop
ja
mov
out
jmp
cmpsb
imul
rorb
rcpps
push
ds
and
in
jp
push
and
fldl
test
sbb
pop
push
xor
push
std
sahf
fwait
pop
sbb
dec
sub
dec
and
movsl
int
lret
movsl
je
adcb
pop
cmp
adc
mov
sub
xchg
xlat
aaa
inc
or
aam
jp
add
pop
lret
lret
outsl
icebp
xor
cs
mov
xabort
iret
sar
jo
cmp
mov
pusha
xchg
dec
push
ret
jmp
fwait
jno
daa
push
ja
cwtl
push
stos
and
decb
out
cld
add
rorl
dec
es
fs
popf
dec
xor
call
add
jne
inc
adc
lock
ret
movzwl
ja
push
push
popa
mov
push
jbe
pop
or
mov
mov
js
arpl
lds
xchg
out
and
loope
xor
dec
faddp
pop
add
cmpsl
mov
mov
pop
stc
sarl
and
xchg
fwait
xchg
in
icebp
fnstenv
mov
lods
loopne
jns
push
fildl
sahf
loopne
pop
sbb
popa
mov
xchg
cs
enter
xor
sub
mov
push
sbb
mov
xor
lock
sub
push
mov
jo
mov
xchg
aam
cltd
dec
pop
dec
sub
lcall
and
or
jb
sbb
pop
add
cli
cmp
push
dec
push
inc
push
sbb
loope
pop
in
stc
sub
ret
or
aas
movzwl
or
adc
lods
mov
xor
xchg
jmp
daa
xor
testb
or
les
in
adc
adc
lock
cmp
sbb
les
cmpsb
mov
jg
imul
mov
mov
es
inc
push
aad
popf
jae
cs
sub
outsb
mov
out
xchg
popf
mov
icebp
arpl
addr16
in
xchg
inc
xor
movsb
pop
scas
pop
gs
adc
rcrb
sbb
and
call
shrb
dec
ds
lahf
mov
add
lock
pop
sbb
subl
int3
mov
mov
loop
test
loope
dec
cltd
dec
fsts
pop
aaa
lea
cmp
push
fs
xor
mov
push
aad
lcall
orb
inc
mov
jecxz
mov
cs
imul
fldenv
cmpl
popf
pop
fildll
iret
test
aaa
sti
mov
dec
and
subl
adc
add
mov
das
and
inc
dec
popf
jle
adc
lods
in
pop
out
imul
inc
xor
add
dec
cmc
push
daa
xchg
das
adc
inc
stc
jnp,pn
stos
mov
mov
jno
xchg
push
mov
and
lock
dec
adcb
repz
add
add
lahf
pop
test
cmp
in
cwtl
arpl
insb
ds
fbld
inc
sti
or
mov
mov
scas
repnz
fiadds
pop
or
adc
arpl
and
push
les
push
mov
mov
mov
xchg
push
mov
insl
adc
filds
test
adc
mov
xor
cltd
cltd
scas
push
mov
std
sub
in
pop
ljmp
or
inc
inc
test
push
mov
daa
hlt
rclb
inc
fldcw
push
push
jmp
jmp
pop
jae
aaa
mov
xchg
mov
lds
push
or
fisubrs
movsb
xchg
pop
xlat
divb
pop
xor
xchg
subl
mov
clc
xchg
popa
lds
pop
std
rorl
sbb
xlat
in
push
lret
lret
into
adc
xchg
push
imul
sub
imul
push
mov
push
sarb
rcl
shl
test
xchg
sub
ret
popa
sub
cltd
dec
xor
mov
lahf
fidivrl
fwait
xor
loope
pop
mov
lret
lcall
and
xchg
jb
lret
ret
and
fiaddl
shll
xchg
mov
outsb
cmp
lcall
adc
out
bound
mov
sar
inc
aaa
sbb
aam
data16
popf
and
or
shll
nop
gs
repnz
fcoms
mov
pop
in
iret
mov
xor
jnp
mov
clc
cmp
add
ret
dec
jl
cli
es
dec
jle
out
jp
mov
stc
cld
pop
ret
les
and
cltd
xchg
std
aad
leave
cmp
hlt
mov
sar
int3
hlt
and
add
aaa
das
pop
sub
cmp
iret
inc
pop
pop
scas
idivl
lods
shll
sub
push
dec
xor
or
jmp
call
and
mov
add
inc
dec
dec
mov
jp
xor
sbb
leave
stos
adc
cmpsl
xor
ret
call
xor
or
xorl
popf
or
out
test
scas
and
pop
ljmp
dec
xor
imul
cmpl
dec
sahf
mov
push
mov
leave
adc
mov
jbe
or
lcall
sbb
cmpsl
pmuludq
nop
mov
add
aas
int3
or
arpl
push
pop
xlat
mov
addr16
and
addr16
loop
cwtl
xchg
push
pushf
scas
popf
jbe
ljmp
mov
mul
movsl
nop
push
pop
loopne
dec
pop
dec
mov
lods
call
add
cmpb
jl
addr16
aam
call
outsl
lcall
mov
jl
lret
push
rcl
cld
int3
sub
sub
enter
add
test
xor
sti
xchg
or
js
jae
cld
inc
js
sbb
cmp
jno
in
or
pop
jnp
insl
or
inc
test
fwait
mov
les
in
or
adc
jp
xchg
repnz
lock
cld
adc
loope
cli
aas
loope
es
push
push
lahf
insl
mov
and
fimuls
mov
setne
adc
out
xlat
sahf
movntq
out
pop
stos
xchg
fimull
add
inc
or
orb
xchg
aas
ss
or
ret
das
xchg
outsb
scas
xchg
aaa
sti
inc
mov
sub
sub
imul
xchg
pop
gs
mov
adc
dec
add
push
das
sbb
dec
pushf
daa
stos
inc
lods
push
ss
ret
das
pop
push
iret
mov
jg
push
inc
push
or
jmp
out
sahf
mov
adc
push
mov
mov
sub
jne
es
add
pop
push
call
rcl
int
push
popa
lcall
dec
sbb
or
xchg
int
add
xchg
aas
rcr
andl
xor
inc
push
mov
aam
pop
jl
push
arpl
in
add
jb
in
xchg
inc
shr
sub
jo
ds
dec
jl
bound
cwtl
fstl
adc
adc
cmpsb
int3
js
pop
ficomps
mov
mov
aad
sub
xor
sti
pop
jno
ds
iret
inc
sbb
addr16
testb
jae
xchg
fs
std
or
filds
push
lcall
and
inc
cmp
push
test
rorl
lods
xchg
or
xor
aas
ret
mov
fwait
push
in
ljmp
inc
xlat
psrld
add
cmp
repnz
xchg
or
aaa
enter
and
lret
or
sbb
cli
push
lds
add
jns
fldln2
add
and
iret
in
mov
pushf
rorl
mov
push
insb
mov
inc
add
out
sub
cmp
test
xchg
inc
idivb
push
xchg
lods
inc
mov
in
imul
pushf
and
fcompl
or
dec
cmp
inc
jmp
and
push
movsl
rcrl
and
js
pop
cmp
pop
xor
fimull
mov
cmc
aam
pop
test
popa
imul
mov
xchg
hlt
xor
fadds
daa
or
cld
cwtl
mov
push
mov
push
push
pop
xor
pop
jge
aad
stos
scas
lock
out
icebp
cmp
in
popf
lock
outsb
cmp
movsl
fs
lds
repz
inc
pop
mov
dec
ds
int
mov
scas
xchg
leave
and
movsl
enter
fwait
popf
xor
mov
test
int3
mov
inc
sar
and
pop
xlat
cltd
jge
cs
fldln2
inc
push
sub
fst
shll
adc
sub
icebp
daa
or
bound
test
aaa
sub
cld
xchg
aaa
lods
mov
jne
xchg
into
divb
inc
aas
stos
fldt
sbb
or
rolb
xchg
xor
into
stos
mov
pop
test
mov
lea
sti
add
inc
sub
fdivs
push
out
js
loop
push
xchg
adc
inc
stos
sbbl
add
push
inc
mov
iret
cmp
in
pusha
push
popa
fs
loopne
das
stos
adc
push
jp
push
pushf
pop
or
add
mov
mov
incb
popf
std
inc
mov
iret
or
dec
fimull
push
and
cwtl
and
xchg
inc
cltd
jbe
imul
mov
xor
or
aad
push
dec
mov
jo
popf
push
add
mov
cmpsl
pop
call
xchg
icebp
lcall
adc
scas
in
orb
sub
inc
imul
sub
push
fisttpll
xor
cmp
cmp
fstpl
dec
sahf
pop
lds
fcoms
push
iret
pop
inc
iret
gs
fistl
xchg
in
sub
and
ret
mov
add
fsubl
subl
ljmp
mov
jb
aas
mov
out
push
sbb
and
sbb
gs
adc
fidivl
fsubl
adc
fisubs
jne
xor
hlt
xchg
int
sub
mov
leave
in
lahf
lods
in
pop
push
inc
mov
pop
lds
addr16
movsb
pop
sub
cld
jge
xor
pushl
dec
jl
dec
sahf
data16
mov
ljmp
lea
push
popf
mov
cmpsb
mov
test
test
repnz
pop
mov
jns,pt
pop
mov
mov
aaa
add
daa
fs
or
jle
stos
or
xor
div
cmp
lret
mov
jbe
scas
fs
push
in
lea
cli
dec
push
and
xchg
imul
push
and
clc
xchg
fs
divb
sbb
cmc
movsb
xchg
addb
add
sub
movsl
jns
and
lea
xor
sub
jmp
xchg
adc
xor
mov
add
mov
rolb
ja
and
into
test
mov
arpl
popa
pushf
loop
xor
dec
jl
sub
sahf
sbb
sbb
cwtl
sub
ss
or
dec
mov
gs
out
adc
mov
push
clc
repz
movb
mov
and
pop
sahf
jg
add
movsl
adc
sub
stc
sub
cmp
sbb
push
repz
mov
faddl
xorb
mov
mov
dec
in
cmp
lret
and
loope
sub
sub
popa
adc
test
xchg
test
ljmp
fsubrp
push
call
pop
sahf
les
addr16
outsl
int
hlt
push
jns
inc
push
mov
in
mov
xchg
adc
inc
in
jmp
icebp
rol
inc
adc
and
mov
test
jle
fsubrp
lret
stos
mov
in
subl
enter
fsub
imul
movsl
mov
insl
clc
cmp
imul
adc
aad
pop
dec
lods
push
jb
add
add
insl
out
jbe
sub
mov
or
jecxz
mov
adc
push
push
test
mov
popf
insb
xor
sbb
mov
lock
in
adc
sbb
or
loopne
xor
add
mov
and
jb
sbb
xor
push
add
add
out
push
popa
dec
xadd
jnp
out
repnz
cmpsb
scas
sbb
add
push
xor
jge
dec
jnp
fwait
jnp
out
je
hlt
cmp
aaa
lods
fwait
jl
outsb
pusha
dec
xchg
lea
lahf
dec
sbb
push
xchg
mov
pushf
or
sub
add
in
scas
xor
dec
int3
das
fucomi
push
ror
inc
mov
js
mov
pop
lret
insb
leave
ficomps
in
mov
inc
mov
add
dec
inc
jnp
and
push
cmpsb
xchg
sub
out
push
das
xor
lods
xor
sub
jge
pop
xor
xchg
pop
insl
pop
sbb
cmp
mov
xor
jecxz
jecxz
mov
inc
out
gs
fiaddl
roll
rcrl
mov
xchg
leave
xchg
scas
jnp
jp
and
jecxz
add
dec
out
cltd
mov
insb
adc
mov
dec
sub
add
adc
clc
jbe
cmp
test
jns
xor
lock
adc
xchg
shlb
add
std
out
repz
sti
and
jb
xlat
scas
addr16
inc
test
aad
or
mov
xlat
aam
mov
int3
adc
js
into
out
mov
cld
fcomi
inc
aad
jb
push
jle
and
add
xor
scas
xor
mov
pop
fistps
mov
pop
xchg
mov
sbb
mov
or
movsl
and
lods
xchg
sahf
push
and
ljmp
mov
movsb
mov
sub
out
filds
xor
inc
cld
dec
push
pop
clc
xlat
xor
insl
test
jne
inc
cmpsl
mov
jno
adc
adc
jmp
mov
stc
mov
hlt
push
dec
jl
out
leave
push
fwait
push
dec
mov
add
imul
insl
inc
test
inc
and
fidivl
fcoms
pop
dec
jl
xchg
mov
sub
ss
addr16
in
test
and
mov
cmpsb
das
mov
jle
push
lcall
mov
out
sbb
mov
andl
jae
sub
dec
addr16
adc
aam
imul
cmp
test
test
scas
cmp
insl
jg
rclb
pushf
scas
and
cmpb
add
mov
cmp
call
mov
and
in
call
xchg
dec
out
std
sub
pop
pop
enter
movsl
sti
mov
scas
lahf
jno
fstl
inc
mov
loopne
insl
or
push
enter
in
test
push
outsb
imulb
jo
lret
add
clc
int3
ljmp
orl
and
dec
xor
sbb
test
sub
xor
jbe
outsl
stos
inc
xor
mov
dec
in
sbb
push
roll
fsubs
dec
int
inc
outsb
popf
pop
sahf
imul
push
hlt
cmp
and
jle
in
and
mov
xchg
xor
je
clc
cld
jno
cmp
push
pop
stos
inc
pusha
or
push
mov
jmp
int
mov
xchg
add
add
pushf
loope
pushf
or
jb
cmp
out
mov
push
sti
test
js
jmp
jbe
fistl
jne
imul
push
adc
cli
xlat
mov
dec
out
ficoms
rorl
fwait
and
imul
mov
push
jecxz
cs
sub
push
mov
jo
inc
cli
imul
les
out
test
fistpl
jo
fidivrl
cld
hlt
clc
mov
inc
repz
ja
repnz
push
adc
mov
inc
jmp
push
xor
sub
inc
bound
xor
xor
in
fldenv
push
fstpt
clc
gs
xchg
icebp
cmpsb
lea
repnz
mov
outsb
pop
jmp
imul
into
rcrl
xchg
cli
add
and
xor
dec
xor
js
xchg
cmp
es
ret
mov
mov
sbb
insl
mov
mov
stos
adc
lahf
dec
cmp
mov
fldt
fs
push
jae
call
adc
lds
pop
in
idivb
inc
push
icebp
push
or
inc
jb
scas
fimuls
enter
lret
xchg
cwtl
fidivl
inc
sbb
and
sti
ret
xchg
xchg
leave
mov
repz
dec
in
pop
vpavgb
das
jl
lret
or
sub
dec
adc
mov
mov
nop
mov
mov
adc
push
mov
pop
jno
inc
popf
cs
divb
movsl
xchg
sub
loope
repz
lahf
call
mov
jb
popa
adc
cmp
lds
inc
mov
imul
mov
cmp
push
add
jae
mov
ja
mov
inc
test
inc
sti
leave
sbb
mov
mov
push
lahf
pop
pop
cmp
lahf
fisubl
mov
leave
push
lcall
cld
dec
jle
adc
lea
fldcw
int3
fisttps
pop
ljmp
cmc
cmpsb
xor
sbb
into
lods
mov
stc
xchg
filds
dec
scas
insb
push
pop
mov
fdivl
jb
push
sarl
ficoms
mov
mov
push
push
dec
andb
call
mov
lcall
lea
cli
push
jns
jno
test
divb
add
in
adc
fwait
cmp
jae
mov
sub
dec
jl
mov
pop
adc
push
std
mov
jo
adc
mov
popa
fisttpll
insl
daa
sub
loop
cli
popa
inc
pusha
lods
or
sub
bswap
pop
mov
inc
int
rorb
lahf
imul
adc
fsts
jmp
repz
lret
or
jno,pn
or
rorb
add
je
pop
dec
lahf
imul
or
pop
int3
add
lret
xchg
and
jo
aas
lea
shlb
enter
xchg
jns
lods
inc
mov
pop
cmp
add
mov
or
aam
push
dec
jmp
fisttpl
leave
aaa
sbb
sub
les
push
leave
les
cld
mov
shll
ret
ss
and
rorl
jne
xor
popa
mov
xor
add
cmp
xchg
lahf
lods
adc
lret
inc
xchg
mov
loopne
lods
movsb
test
popa
pop
pop
enter
mov
into
pop
icebp
cmp
repz
xchg
pop
mov
and
call
mov
fisubs
pop
xchg
cmp
dec
shrl
lea
addb
lahf
jp
cmpsb
lret
stc
sub
divb
int3
clc
adc
test
mov
sub
push
sub
dec
sti
inc
push
push
or
or
and
jo
xor
lahf
test
dec
mov
lock
xor
dec
bound
xor
add
jne
push
sub
mov
sub
jnp
in
mov
lret
xchg
clc
outsb
out
cli
sbb
add
shll
pop
add
jle
imul
sbb
in
mov
cli
cld
cmp
pop
inc
imul
adc
mov
aad
dec
in
inc
sbb
xor
push
adc
jg
inc
add
in
vprotd
jecxz
pop
xor
push
jge
int
sub
xor
leave
stos
aaa
lret
pop
sub
bound
adc
test
xor
sbb
ljmp
cwtl
mov
out
in
in
movsb
jge
imul
push
nop
int
sub
jecxz
fstps
loope
aam
sub
cld
icebp
mov
mov
cmpsl
pop
jle
dec
int3
scas
stos
jns
nop
cmp
sub
sahf
nop
sub
pop
loopne
std
sbb
std
sbb
xor
int
lret
jp
inc
jbe
mov
lcall
adc
inc
pop
push
jge
filds
das
test
aad
test
dec
mov
repnz
iret
xchg
inc
scas
out
xchg
add
xlat
sub
sub
xchg
mov
adc
mov
xlat
and
pushl
xchg
divb
add
mov
icebp
aaa
subl
lods
or
pop
stos
cld
add
ss
int
dec
sbb
fstpl
sahf
cwtl
outsb
xor
and
sbb
push
in
xlat
pop
fisttpll
addr16
xchg
mov
fs
ret
test
sbb
out
fcmovne
xor
ja
mov
fwait
pusha
ljmp
mov
scas
cli
or
adc
mov
add
pushf
add
lock
or
bound
jg,pt
jb
sub
push
test
out
push
pop
sbb
pop
addl
hlt
mov
cmp
je
inc
inc
outsb
fadds
jle
push
xor
fdivp
pop
scas
cltd
iret
cs
js
in
aam
push
sub
fwait
aaa
cmp
inc
mov
jno
cltd
in
inc
mov
inc
dec
lea
push
pop
sahf
mov
pop
scas
cmp
cld
add
arpl
leave
sub
sbb
addr16
fmuls
adc
mov
cvtdq2ps
pop
mov
inc
ret
int
jmp
mov
xor
popf
es
and
outsb
push
xchg
dec
add
out
jmp
sbb
cli
push
xlat
cli
addb
push
xorl
add
ss
or
test
jmp
mov
push
sarb
lahf
mov
outsb
out
mov
add
mov
xchg
ja
out
xchg
subb
inc
dec
pop
cmc
jno
inc
mov
clc
cmpsb
inc
pusha
xor
roll
pop
cltd
lds
sbb
inc
lahf
or
mov
mov
cli
arpl
sbb
xchg
repnz
mov
mov
bound
mov
push
scas
clc
sbb
dec
sbb
popa
dec
dec
or
xor
ret
inc
mov
inc
stc
push
addl
mov
ffreep
and
sbb
mov
add
or
mov
out
gs
cli
inc
imul
loopne
jecxz
iret
loopne
jnp
or
in
xlat
bound
aam
or
out
mov
pop
lahf
in
fdivrp
jno,pt
aas
xchg
gs
mov
shrb
jnp
inc
push
ss
mov
popa
mov
xchg
es
jmp
fnstenv
pop
sub
fwait
insb
fdivl
adc
xchg
lahf
pop
cli
cld
sbb
xchg
aas
cld
inc
daa
jl
cli
cmp
repz
xor
jno
push
shll
jecxz
cmpsl
mov
inc
loopne
js
ljmp
push
subl
xchg
and
push
jno
push
int3
pop
insb
sub
inc
adc
lea
aas
xor
xchg
lret
push
mov
mov
ljmp
cmpsl
pop
push
movswl
in
fsubp
cld
in
ret
jne
jo
cwtl
jge
push
pop
and
push
cmp
dec
inc
in
loope
push
insb
out
cmp
push
cmpsb
push
addr16
fs
jne
hlt
mov
jmp
jb
aas
push
pop
xor
mov
clc
mov
sub
lds
mov
out
or
adc
lods
test
or
jg
mov
insb
or
and
jmp
pop
xchg
or
test
mov
data16
mov
pop
or
cmpsl
pop
dec
fimull
lods
xchg
xor
mov
add
mov
imul
sbb
xchg
sbb
pop
test
iret
loope
scas
push
test
movsb
sub
repz
mov
pop
gs
shl
or
lods
cld
outsb
cmp
add
dec
xchg
sahf
stc
xor
or
xor
ss
lcall
add
lds
mov
jmp
ja
bound
neg
insb
sbb
addr16
and
xchg
pushf
dec
xchg
rcr
popa
out
push
ficoml
fisubrl
mov
jge
sti
stos
add
cs
or
ja
sbb
xor
adc
aad
js
pop
sbb
mov
stos
add
enter
mov
int
mov
inc
outsb
pusha
outsb
dec
pop
aaa
je
fnstsw
jge
push
and
scas
inc
mov
lret
stc
stos
cmpsl
cwtl
imul
jg
aad
mov
mov
cmp
aad
sub
aad
mov
lock
das
jg
shl
or
mov
inc
aaa
sbb
add
inc
mov
or
dec
lods
add
inc
dec
and
and
out
mov
jbe
lods
scas
insb
cmp
xlat
cmc
fisubrl
cltd
out
adc
repz
dec
fsubrs
adc
test
decb
inc
jae
dec
dec
insl
mov
fwait
dec
sarl
pop
jl
jo
lock
ljmp
xchg
aas
int
out
fs
jp
inc
pop
pop
jnp
shll
aad
pop
call
cmpsl
or
mov
icebp
clc
outsb
aad
out
sub
xchg
mov
pushf
bound
jo
stos
in
aas
mov
and
cld
test
sub
dec
das
inc
jbe
sbb
push
lret
sbb
push
test
xor
hlt
sub
pop
cli
mov
lock
aaa
mov
adc
cli
fwait
jmp
or
sti
jnp
dec
fnsave
xchg
insb
adc
lret
adc
jo
repnz
push
test
or
lods
dec
pop
push
pusha
jmp
dec
mov
ds
pop
or
xor
ret
and
mov
shrl
out
andb
mov
fwait
jp
mov
iret
or
or
adc
cld
sub
jae
cmp
sarl
lods
ds
mov
enter
lods
jecxz
adc
dec
push
int3
cli
fistpl
xchg
mov
push
sahf
lahf
pop
cli
cmp
cld
push
ret
nop
add
and
jo
xchg
jne
fldl
add
repnz
lcall
push
fstl
lahf
lock
imul
xchg
es
adc
out
jmp
fbld
loop
movsl
std
js
imul
pop
jle
rolb
and
mov
mov
push
scas
fwait
mov
xor
out
mov
mov
pop
xor
aaa
pusha
and
add
sahf
add
jecxz
insl
cmpb
lds
mov
jno
xor
iret
aas
dec
call
add
cli
gs
fcom
fmull
call
shr
subl
pop
cmc
outsb
or
inc
adc
out
inc
std
rorl
gs
test
push
hlt
mov
fimull
int3
sub
cmp
pop
jge
int
aaa
shrl
or
data16
sub
or
js
imul
ljmp
pop
mov
stos
mov
adc
data16
fildll
lret
in
popa
pusha
jno
push
mov
pop
into
pop
mov
sarl
cmpsl
xor
dec
jp
aad
outsl
data16
lock
aaa
sbb
das
sub
dec
mov
movsl
js
mov
dec
pop
cmp
xor
lods
sub
fnstcw
scas
mov
pop
nop
mov
xlat
in
arpl
pop
stos
dec
loope
mov
sub
gs
test
ja
mov
jmp
addr16
push
lahf
daa
out
jl
mov
push
in
adc
cmp
jp
loop
mov
or
dec
pop
dec
call
fcomps
mov
scas
js
jae
bound
imul
push
sarl
cmpsl
jge
inc
jo
fstl
mov
outsb
or
lcall
jb
xor
imul
inc
jl
jmp
adc
cmp
aaa
js
push
cmp
aam
call
fs
add
addr16
xor
stos
jle
insl
icebp
mov
mov
mov
pop
inc
ret
inc
bound
test
and
jp
dec
pop
int3
mov
mov
dec
iret
push
mov
repnz
push
daa
sub
fxch
shr
in
pop
cmp
or
push
out
xor
or
and
lock
push
sub
frstor
inc
sbb
pop
lahf
and
in
and
xchg
dec
leave
cmp
les
cmp
mov
stc
push
call
pop
clc
sbb
jae
jg
sub
sbb
in
sub
xchg
es
sbb
pop
add
loopne
xchg
ja
xchg
in
or
jo
scas
arpl
mov
or
pop
sbb
loop
cmc
popa
mov
dec
mov
lret
rolb
pop
lods
push
sahf
lock
adc
call
xor
nop
adc
jno
testb
push
fisttps
cld
or
inc
movsl
cmp
jl
xchg
dec
rcr
int
lahf
jno
mov
imul
pop
rolb
and
xor
test
outsl
push
mov
iret
xor
cmpl
push
enter
stos
cmc
imul
jno
cmpsl
fwait
call
push
ret
rcl
add
stc
scas
sub
fidivrs
jae
lock
inc
data16
mov
jns
mov
jl
into
mov
insl
into
dec
into
bound
pushf
movsl
cli
mov
ficomps
idiv
push
inc
or
or
pmaddwd
sub
aaa
decl
loop
add
lcall
xchg
outsl
subb
pop
leave
and
mov
mov
pusha
mov
ret
dec
dec
push
std
xor
scas
cs
mov
jmp
and
cli
xchg
mov
dec
pop
iret
mov
sbb
or
push
ret
and
cmp
xchg
xor
cmp
xor
push
or
das
ss
mov
clc
loop
xor
dec
lods
std
mov
popf
mov
adc
pusha
fisubrl
push
repz
cmp
xchg
cmp
mov
pop
mov
sbb
mov
push
or
inc
sbb
push
orb
cmp
sbb
in
imul
xor
ljmp
dec
fadd
cmc
dec
mov
out
xlat
push
hlt
sahf
sub
and
push
xchg
mov
jecxz
outsb
add
xchg
iret
jb
adc
push
loope
arpl
inc
jno
or
repz
inc
inc
les
cmc
int
sbb
ljmp
leave
jae
lcall
test
stos
ja
pop
stos
std
loop
inc
xchg
icebp
jo
mov
lods
movsl
subl
pop
cmp
mov
sbb
outsb
sbb
mov
cmc
jb
push
mov
stc
pop
mov
repnz
sbbb
jno
sarl
dec
stc
xchg
gs
mov
mov
clc
lods
cmc
cmp
jne
test
adcl
add
stos
gs
mov
jecxz
addr16
sbb
cmp
pop
call
sub
push
and
or
push
call
jecxz
xchg
mov
mov
fldenv
sbb
jl
cwtl
fwait
jg
outsl
cld
cmp
cmpsb
or
mov
jp
or
pop
out
cmp
inc
cvttps2pi
xchg
sub
and
mov
popa
push
test
jnp
and
rcll
add
add
xor
jmp
mov
leave
mov
ds
fldenv
sub
sbb
xor
in
movsl
dec
dec
int
mov
xchg
call
xor
xor
push
dec
mov
xor
shl
add
pusha
cli
pop
lea
sub
cmpsb
xchg
subb
add
ret
outsl
int
mov
std
mov
das
adc
sub
cmc
ret
es
push
and
jmp
and
test
mov
sbb
jecxz
xchg
sarb
iret
je
lcall
pusha
outsl
or
mov
in
dec
inc
sub
push
aad
or
and
mov
outsl
add
sahf
inc
sub
pop
out
test
iret
sub
jae
inc
shrl
jno
mov
push
je
push
mov
pop
shll
dec
enter
and
insb
movsl
gs
mov
popa
enter
mov
test
push
or
mov
insl
cwtl
sbb
mov
enter
mov
dec
and
pusha
dec
shll
or
push
xor
clc
stos
mov
add
iret
jl
int3
push
repz
mov
or
xchg
inc
iret
repz
prefetch
or
jne
test
aas
mov
ret
add
pop
sarb
mov
or
xchg
inc
adc
sub
and
data16
mov
movsb
rorl
sbb
xchg
aaa
or
xchg
and
cmp
into
jg
rorb
fnstcw
push
arpl
push
lds
ja
xlat
mov
pop
rcrb
dec
adcb
dec
popa
test
fidivrl
stos
loopne
mov
lds
es
jmp
aad
loopne
iret
divb
inc
xchg
imul
and
sub
dec
test
inc
sbb
jp
dec
inc
fwait
pop
pop
inc
pushf
loop
mov
mov
add
stos
xchg
mov
sbb
jbe
sarl
les
jmp
mov
movsl
adc
insl
adc
test
addr16
push
lcall
jg
fadds
gs
loopne
jo
clc
ror
xchg
andl
loopne
call
inc
xor
sbb
push
aam
rolb
mov
divl
dec
mov
roll
ljmp
testb
mov
lret
xchg
push
enter
pop
aas
xchg
or
dec
cmpsl
mov
xor
mov
push
inc
sbb
shll
ss
mov
push
imull
cwtl
adc
ficompl
ret
dec
xor
dec
jbe,pt
inc
sbb
inc
popf
int3
mov
mov
lods
je
adc
sti
testb
std
or
mov
das
push
enter
cmpsl
and
fstp
mov
mov
push
lods
imul
ret
cmp
int
loopne,pt
jp
push
jne
inc
push
repnz
mov
ds
dec
xchg
add
insl
push
xor
fprem1
sbb
xchg
pushf
test
adcl
or
and
jno
sub
ret
outsb
cmp
stc
jbe
mov
pushf
and
icebp
cmpsl
ret
daa
into
shlb
xor
cs
pop
ret
mov
mov
pushf
push
fbstp
sub
mov
push
das
movsb
add
in
and
xchg
mov
cmpsl
xor
sbb
dec
loope
lods
sub
adc
lea
aaa
lods
sub
aaa
lock
cmpsb
mov
movsl
cmp
xor
mov
and
cli
stc
stc
test
fwait
cld
fidivrs
mov
scas
fsubs
cmpsl
data16
xor
lods
in
data16
jnp
mov
jmp
out
push
imul
rep
sti
dec
ljmp
xchg
ljmp
das
xchg
jo
sbb
test
lcall
frstor
mov
xor
cmp
jo
in
mov
imul
mov
stos
in
stos
mov
test
roll
cmpsl
rcll
clc
cmp
sbb
mov
inc
xchg
pop
test
gs
push
mov
pop
mov
mov
sarb
lods
fstpt
mov
pop
int
leave
out
fcompl
adcb
jg
jecxz
adc
sub
ret
jge
push
sbb
xor
repz
or
outsl
add
mov
push
sbb
int
pop
repnz
xchg
xchg
lock
adc
into
imul
adcl
jle
adc
in
mov
in
jecxz
mov
mov
scas
cmp
pop
shrb
sub
jae
pushf
arpl
xchg
inc
add
scas
adc
sbb
dec
adc
out
push
pushl
dec
jge
aam
xchg
push
jbe
arpl
inc
add
fistl
cli
lret
mov
aad
gs
les
xchg
jb
outsl
or
shr
in
lahf
das
jmp
mov
or
outsb
pop
mov
das
repnz
mov
add
mov
in
pop
jmp
xlat
shrb
rcrl
bound
mov
add
movsb
sbb
sbb
cmp
jno
lock
pushf
xchg
inc
mov
nop
cmp
mov
mov
xor
out
rcrl
cwtl
sbb
inc
out
outsl
mov
adc
lock
lcall
and
pushf
push
test
dec
mov
imul
jle
cwtl
fstps
mov
add
in
test
dec
sahf
cltd
cmp
cmc
inc
jns
roll
scas
dec
pop
inc
jno
outsw
inc
mov
mov
xchg
jmp
and
xchg
cld
cmp
dec
push
testl
sti
jp
jg
pop
orl
clc
jnp
xor
inc
dec
addr16
and
out
sbb
in
pop
sti
rcr
mov
xchg
mov
xchg
adc
sar
mov
lods
loopne
stos
or
vmovaps
pop
inc
cs
dec
push
push
jle
or
outsb
inc
cmpsb
sbb
push
out
jb
popa
adc
pop
notb
pop
xor
ret
or
jge
ja
loop
mov
push
in
ret
dec
mov
cmc
ja
cli
xchg
jne
shrl
pop
leave
in
shl
shl
add
pop
xchg
cmp
mov
sub
sub
call
decb
mov
push
test
push
push
cmp
test
mov
and
sbb
aaa
cmp
jne
inc
jnp
aas
hlt
imul
jnp
push
pop
dec
xor
inc
aaa
test
ret
test
cmp
pop
adc
pushf
pop
pusha
xchg
gs
push
xchg
popf
sarl
stos
inc
and
cmp
pop
and
jle
jp
jno
pop
icebp
fidivrl
outsb
insl
mov
lret
in
pop
fucom
push
call
xchg
adc
lahf
jge
jle
pop
mov
mov
mov
add
shlb
je
xor
sub
xchg
gs
xor
push
sbb
xor
pop
mov
jp
cmc
shll
lcall
add
and
xchg
mov
push
aam
jg
jae
inc
cmp
andb
lret
mov
sub
shl
adc
imul
xchg
xor
cmp
adc
jecxz
jmp
xorl
jo
popa
loope
add
ja
jmp
mov
jmp
test
push
lret
cmp
lret
rol
cmp
adc
xor
pop
andl
mov
das
jmp
in
sbb
ret
or
cli
jmp
jae
inc
cmpl
fadd
daa
in
xor
jb,pt
scas
nop
outsb
jg
lret
add
mov
jle
xor
mov
dec
inc
fcompl
fxch
leave
jecxz
jecxz
icebp
mov
push
orl
or
out
push
ret
addr16
iret
mov
scas
mov
daa
adc
das
lret
cld
loopne
das
imul
rclb
lret
popa
jmp
ljmp
lahf
cli
movsl
push
add
mov
out
jo
adc
cmp
jo
fdivp
adc
push
adc
outsb
mov
sub
test
or
loopne,pt
movsl
pop
mov
inc
movsb
jnp
js
mov
out
ret
fwait
sub
jg
rcrb
pop
lds
push
dec
insl
and
in
xchg
imul
mov
insb
pop
mov
sbb
enter
js
lahf
mov
pop
insb
cld
scas
sbb
sbb
jecxz
in
lea
fldt
and
mov
mov
adc
push
iret
imul
mov
and
aas
dec
aaa
in
pop
mov
in
cli
dec
movsb
insl
inc
movsl
hlt
bound
imul
shl
shll
repz
clc
bound
lods
add
cmp
fmuls
dec
scas
fwait
cmp
stos
jb
outsl
or
imul
mov
mov
fcoml
mov
mov
daa
inc
call
ds
pop
dec
mov
test
or
push
test
js
pop
ror
adc
idivb
push
aaa
lea
mov
mov
or
mov
lcall
xchg
iret
inc
pusha
cld
mov
lods
je
lea
cmpsb
xchg
in
xor
out
sbb
jg,pt
cmp
int3
mov
xor
es
jno,pt
jp
sahf
sbb
lods
hlt
mov
inc
adc
test
xchg
cwtl
push
or
adc
arpl
push
push
fwait
test
ja
stos
cli
aas
popa
adcl
mov
add
xor
push
std
push
push
in
adc
dec
mov
sub
scas
push
inc
lods
pusha
add
test
mov
jp
xor
or
adc
push
jmp
push
les
xchg
or
fistpl
push
fs
subl
jge
mov
mov
divps
cmp
shrb
out
cmc
jno
ror
sub
cmpsb
xchg
xchg
addr16
pop
jbe
in
xchg
jns
sbb
cmp
xlat
cmc
jmp
dec
dec
jns
out
fstps
inc
movsl
or
stos
arpl
jne
xchg
pop
subb
das
std
sub
sbb
dec
mov
and
sbb
adc
jp
out
inc
mov
xor
mov
jmp
xcrypt-cbc
cmpsl
adc
test
jbe
arpl
mov
jp
xchg
sub
loopne
loope
stos
xor
pop
lods
mov
cmp
xorl
movsl
pop
rcrl
fistps
mov
push
scas
jb
cmp
jp
mov
stc
sub
xor
jl
in
fisttps
movb
add
cmpsl
pop
jp
push
mov
testl
cmp
fiadds
mov
and
movsl
orl
rcll
jecxz
call
cld
daa
add
fucomp
inc
hlt
dec
mov
push
sub
xchg
enter
xor
cmp
dec
pushl
jae
add
mov
mov
and
and
out
mov
les
ds
scas
idivl
inc
dec
dec
pop
stos
pop
lahf
lcall
leave
aad
inc
enter
adc
ja
outsb
fistpll
push
aad
jmp
pop
dec
xchg
inc
mov
adc
mov
pop
popf
add
insl
mov
push
xor
dec
jg
and
jge
cld
outsl
popa
icebp
jns
pop
mov
push
and
test
xchg
mov
push
sub
xchg
mov
adc
roll
int
data16
scas
loop
jbe
inc
ffreep
shl
mov
out
test
sbb
bound
test
sbb
imul
mov
mov
or
bound
lods
push
add
sbbb
call
insl
mov
sub
push
mov
fld
lcall
cmp
iret
xor
lret
xor
xor
aam
cmp
sbb
mov
testb
ds
mov
xor
add
xor
cwtl
scas
out
adc
xchg
aam
pop
sub
xor
or
xlat
mov
sbb
jecxz
test
dec
sub
sahf
cmp
jbe
and
mov
cmp
jno
stc
jecxz
push
lock
sarb
cmc
mov
out
dec
leave
lahf
pop
mov
mov
cmp
xchg
cmpsb
fnstenv
and
push
pop
shlb
gs
xchg
and
loope
dec
inc
cmpsb
dec
lret
push
cld
stos
mov
cmpsb
push
inc
xlat
dec
imul
inc
pop
subb
std
lea
jb
stc
jbe
loopne
addl
adc
out
and
into
jmp
ret
mov
pusha
insl
insl
or
inc
xchg
mov
and
or
adc
dec
fwait
adc
loopne
pop
and
fld
and
dec
add
push
mov
lahf
push
aaa
xor
mov
ds
rcll
cmpsl
cmp
movsl
pop
jns
rcrb
pop
and
fistpll
xchg
sub
dec
xchg
jae
pop
fs
mov
xchg
rol
popf
xlat
sub
in
adc
sbb
enter
popf
std
jo
pop
and
mov
mov
xchg
mov
mov
inc
test
fld1
jecxz
mov
in
es
ret
adc
rorb
sarb
nop
arpl
push
gs
jne
jae
leave
test
adc
dec
stc
ficompl
outsb
insl
jge
lock
xor
or
or
add
stos
int
xchg
scas
popf
mov
push
sbbl
movsb
add
aaa
inc
lds
jo,pn
loopne
cmpsb
fistps
mov
add
sub
jbe
xchg
add
inc
enter
add
loop
hlt
cmpb
inc
fsubp
jle
les
movsl
inc
mov
jb
dec
cmpsl
cwtl
test
daa
pushf
cmpsl
mov
mov
test
push
lods
sub
jns
pop
movsl
cmp
leave
xchg
or
cmp
xor
xor
inc
psubsb
in
lcall
push
mov
xor
lea
sub
dec
jae
mov
mov
icebp
enterw
mov
pop
cmp
inc
and
or
lock
sar
clc
push
pop
out
sbb
cmp
xor
inc
pusha
loope
into
jno
les
push
push
gs
mov
xor
or
push
test
js
ds
data16
push
and
inc
push
pop
jno
in
cmpsb
push
and
mov
sbb
test
fchs
in
sub
fwait
imul
aad
popa
pop
fildll
inc
ds
add
iret
lahf
aas
into
dec
in
jp
pop
and
xor
ret
je
xchg
icebp
pushf
out
mov
mov
aad
jl
jns
pop
mov
mov
stos
je
sti
jb
aad
addr16
cli
cs
mov
cli
lahf
mov
mov
cmp
adc
lret
stos
inc
ret
push
out
rcll
xorl
jnp
inc
pusha
push
orl
out
ret
ljmp
bound
dec
ret
jns
pop
roll
push
sarb
insl
xchg
pop
mov
push
stc
insl
jae
test
cmp
movsb
mov
push
outsb
push
jo
pop
fstp
stc
xchg
dec
shlb
sbb
jecxz
xlat
mov
mov
cld
or
sub
scas
movsb
lods
mov
mov
dec
sbb
sub
outsb
push
inc
mov
cmp
das
jg
jp
mov
xor
sub
enter
jo
pop
xchg
roll
sbb
js
movsb
sub
push
cmpsb
mov
cmp
push
lret
xchg
mov
insl
inc
stc
fs
cmpl
cmp
test
push
mov
pop
adc
dec
or
je
in
les
cmp
push
add
mov
jbe
pushf
jp
sbb
xchg
mov
out
and
orb
daa
xchg
leave
inc
add
jno
inc
test
add
test
pop
push
pop
dec
lret
inc
dec
inc
in
nop
xchg
es
out
add
loopne
mov
fadd
out
jmp
iret
lock
cltd
call
pop
cmc
outsl
adc
cltd
sbbl
outsl
lods
xor
cld
and
and
mov
xor
in
mov
popa
ficomps
fs
out
hlt
pop
and
mov
pushf
cmp
mov
dec
sbb
push
outsb
mov
pop
mov
jb
xchg
repnz
stos
sbb
lea
dec
cmp
adc
cltd
aam
lds
stos
cwtl
inc
es
ja
push
jl
xor
sbb
mov
pushf
fnstenv
xor
jb
sub
in
movsl
stos
adc
shlb
xchg
arpl
inc
out
cmc
loope
cmpsb
aas
pusha
ss
mov
or
xchg
jle
xchg
sbb
pop
test
and
xchg
dec
cli
jnp
xchg
rcl
mov
into
mov
sti
or
std
pop
xor
ja
push
mov
js
roll
orl
ss
sub
or
out
sahf
xor
cmp
mov
icebp
test
jle
and
xor
shr
cs
jns
cmpsl
aaa
out
movsl
and
lods
fdivrp
jns
mov
insb
xchg
scas
sbb
push
shll
out
xchg
fwait
xchg
clc
and
ret
xchg
jg
fs
pop
aad
pop
repz
pop
mov
sbb
add
adc
push
add
out
jb
pop
mov
incb
int3
add
in
les
adc
push
ss
push
mov
in
xchg
and
rcl
movsl
cli
sub
in
cmp
inc
jbe
roll
xchg
idivb
mov
das
jecxz
inc
pop
sub
aad
pop
mov
arpl
rcr
mov
mov
cmp
mov
push
pop
sub
and
iret
insb
in
xor
ret
pop
and
jl
mov
sub
bswap
and
lds
inc
add
pop
dec
push
mov
jp
dec
push
push
adc
mov
fsts
ds
lds
dec
push
div
mov
jl
pushl
inc
push
jb
stc
push
lcall
data16
out
mov
icebp
outsl
and
loopne
out
jno,pn
inc
dec
sti
jne
sub
imul
jg
sbb
or
insb
filds
mov
jle
and
mov
testl
fisttps
jmp
std
loopne
mov
fcmovne
dec
js
adc
mov
mov
pop
push
add
rorb
push
lahf
jbe
or
adc
cmp
ds
add
sbb
mov
incb
and
dec
les
xchg
ret
out
push
pop
jbe
pop
pop
pop
push
out
pop
inc
mov
ljmp
pop
sbb
mov
mov
fldt
iret
arpl
cmp
out
enter
pop
insb
in
adc
repz
test
popf
fistps
mov
jbe
mov
lods
dec
pop
out
mov
xchg
lret
movb
mov
cltd
pop
lods
int
cmp
pushf
nop
xchg
mov
jns
xchg
xchg
push
cs
jecxz
enter
xor
or
dec
xor
sbb
push
fbld
mov
push
jle
mov
jle
dec
sub
fwait
lock
movb
xorl
lret
sbb
add
ja
cs
jecxz
or
shlb
out
sbb
sbb
and
andb
fcmovnbe
mov
inc
mov
aam
lods
mov
loope
pop
ret
xchg
incb
imul
aam
add
xchg
add
rcll
xor
mov
stos
je
pushf
mov
int3
pop
repz
repz
jl
lret
nop
push
fimuls
mov
cmp
fsubp
rorl
inc
insb
je
and
add
cmp
inc
in
cmp
fnstcw
jae
pop
add
jae
mov
pop
inc
jnp
mov
add
adcb
hlt
xor
popa
pusha
pop
jl
mov
jmp
jl
mov
sbb
mov
lret
adc
sub
mov
mull
pop
aas
mov
xchg
xor
xor
pop
lret
fmull
pushf
or
leave
add
xor
inc
xchg
call
jge
mov
fnstcw
cld
lea
pop
in
lea
jb
fistpl
stos
push
and
dec
xchg
stc
add
add
push
and
cld
lret
lods
movsb
fdivl
xor
lret
add
dec
sub
out
pop
and
rol
jge
xor
fs
dec
add
inc
add
js
call
xor
lcall
lds
jge
inc
add
data16
jmp
sahf
jbe
out
js
pop
sarb
xor
cmpsl
xchg
mov
lods
jne
push
jb
push
in
ret
mov
mov
loop
ds
fcomps
mov
or
ficomps
push
in
cld
mov
iret
fisttps
test
scas
je
cmpsl
scas
jmp
mov
cmp
sbb
arpl
jnp
inc
inc
aaa
lret
and
mov
mov
sarl
std
cs
mov
pop
mov
jb
jge
testl
aaa
inc
sti
test
shlb
pop
jmp
or
lret
fdivrs
mov
sub
mov
xchg
sub
mov
pop
and
push
sbb
rclb
xor
ja
xor
inc
js
mov
fcomp
push
pop
ds
ds
test
mov
xchg
dec
cmpl
sti
pop
jbe
xchg
addr16
sbb
repnz
movsl
into
xchg
dec
lock
mov
jg
mov
and
in
xor
xchg
or
std
in
pop
mov
sahf
xchg
aaa
add
dec
out
loope
mov
push
jnp
fisubs
jbe
stos
iret
divb
jb
or
addb
xor
adc
mov
insl
int
int3
loop
mov
insl
sub
add
in
add
xor
push
repnz
ja
fiaddl
cs
bound
fsubrl
popf
in
push
imul
add
std
sbb
mov
or
outsb
mov
xor
pusha
les
vmread
sub
xchg
aas
mov
xor
shlb
sbb
or
test
mov
mov
jno
std
and
or
sbb
cltd
and
fcoml
pop
pop
mov
rcrb
addl
mov
cmp
negl
imul
or
sub
divb
imul
test
test
xchg
dec
in
loope
push
push
sub
push
sub
aaa
clc
das
xchg
lds
jns
or
mov
inc
jne
cmp
lock
push
jne
fsubl
test
inc
in
xor
xlat
repz
adc
jecxz
jae
jne
mov
repnz
pop
add
inc
or
sahf
test
xor
stc
mov
or
dec
test
dec
xor
int3
ljmp
sbb
adc
lea
mov
add
mov
dec
lcall
mov
or
xchg
jmp
fcomps
jg
mov
mov
outsb
cwtl
inc
or
xor
xlat
cmp
ret
mov
lea
ret
sub
faddl
xor
jno
inc
and
sbb
fmuls
movsb
test
add
mov
lret
fucomip
dec
mov
out
repnz
inc
sarl
and
lcall
push
mov
jle
jmp
test
clc
call
xchg
std
mov
inc
repz
test
clc
mulb
iret
mov
js
sar
inc
enter
nop
or
in
mov
inc
outsl
cmp
int
or
mov
test
push
or
jmp
sub
fiaddl
jo
sahf
inc
js
lret
push
add
mov
cltd
ret
pop
xchg
push
das
and
lret
adc
sub
jle
in
xlat
call
out
out
stos
push
in
or
dec
push
test
pop
pushf
push
sbb
pop
div
dec
cld
and
add
jne
mov
lods
push
cmp
ss
add
cmc
lock
pop
stos
fcomps
movsl
ficomps
sbb
fdiv
jns
stc
mov
mov
sub
jo
mov
sbb
pusha
sub
xor
sub
daa
fldcw
cmp
sbb
adc
in
mov
insb
loopne
sub
cmp
xchg
push
lea
cli
call
xor
mov
and
subb
fwait
call
ret
or
cli
xchg
jecxz
mov
sub
lods
jecxz
inc
loop
dec
mov
in
dec
fcomip
cli
push
jne
mov
xor
pop
dec
push
adc
xchg
xchg
shlb
cltd
jns
adcl
mov
insb
push
subl
jb
pop
push
xchg
ja
xchg
testl
imul
sahf
cmc
mov
fisubrs
out
lret
sub
loop
dec
cs
outsl
sbb
lcall
pop
ja
mov
mov
xchg
and
add
aad
int3
cmp
mov
es
fcomi
or
ss
cmp
xor
test
insl
test
xor
call
mov
jns
fstl
jns
add
test
xchg
adc
mov
mov
mov
aam
cld
mov
in
outsb
icebp
int
ficompl
dec
fwait
ljmp
arpl
jno
sub
stos
stc
pop
cmpsl
clc
lea
roll
int3
sbb
mov
pop
loop
dec
sbb
mov
push
xlat
inc
aaa
ret
adc
mov
cmp
lret
loop
out
out
pop
lock
cmp
cmp
arpl
dec
aaa
xor
test
push
jo
insb
daa
sbb
cmc
andl
push
imul
shlb
xor
lock
or
hlt
dec
or
mov
enter
and
adc
or
aam
jmp
aam
push
das
sti
adc
outsb
pop
add
sti
enter
jmp
cwtl
imul
fistl
or
xchg
cltd
mov
push
testb
jae
and
xchg
mov
in
daa
fisubl
lahf
mov
cmp
pop
imul
arpl
daa
push
testb
cltd
xor
scas
sbb
push
movsb
sbb
arpl
lret
lret
lcall
mov
enter
fldt
hlt
movsb
in
lods
inc
cmp
faddl
and
jnp
push
je
adc
fstps
jmp
and
sbb
sub
inc
inc
cmp
aaa
inc
lret
insb
push
mov
testl
ds
rcrb
lret
sti
pop
sbb
nop
sahf
imul
pop
mov
pop
and
push
inc
pop
call
fs
dec
mov
fisubrl
mov
inc
sub
divb
xor
cs
cwtl
lds
jno
movsb
shrb
pop
or
jbe
js
int3
movsl
xor
scas
adc
stos
mov
xor
lock
out
add
out
fs
fmull
jno
push
sbb
loop
ret
movsl
cmpb
adc
outsl
ss
mov
push
arpl
lock
jae
lods
xor
insl
iret
icebp
mov
adc
xor
push
ficomps
adc
hlt
mov
or
cld
jns
pop
push
mov
clc
or
cmp
fs
mov
out
dec
mov
xchg
xchg
aaa
ljmp
int
test
inc
adc
adc
lock
push
cs
dec
pop
xchg
inc
adc
fisubs
bound
idivb
js
push
add
addr16
sbb
sub
jecxz
sub
xor
ljmp
shlb
jp
lods
pop
jno
xor
or
orl
ret
sbb
sub
sti
mov
test
rep
jmp
rorb
mov
mov
test
aam
pushf
dec
mov
cmp
imul
cmpsl
cmp
mov
enter
xor
addr16
aaa
adc
fwait
mov
outsl
daa
jle
push
in
pop
mov
sub
adc
lea
test
stos
push
lods
mov
mov
adc
sbb
and
orl
loope
dec
mov
test
test
push
mull
pop
pop
and
js
in
inc
push
adc
dec
mov
jns
in
lds
outsl
call
and
mov
or
pop
mov
cs
stos
test
and
xlat
outsl
mov
mov
mov
repz
loopne
xchg
push
adc
sti
fcoms
or
stc
aam
popf
rclb
cmp
popf
arpl
jae
rorb
outsl
add
push
cmpsl
divl
jge
pop
inc
dec
adc
pop
push
xchg
mov
adc
push
push
repz
cli
stos
cltd
adc
loopne
sbb
push
xadd
bound
or
call
sti
xor
jmp
in
lahf
jnp
aas
and
lahf
lret
stc
mov
nop
jmp
push
mov
roll
loop
loopne
imul
push
and
sbb
lds
cli
fnsetpm(287
les
arpl
cs
dec
lahf
xor
jmp
test
pop
popa
dec
sahf
clc
dec
sbb
sbb
cmpb
xchg
fisubrl
lret
jl
call
shll
sbb
cmp
dec
jp
jp
add
aas
mov
jne
sbb
pop
pop
dec
jmp
fisttps
adc
inc
jg
movsb
mov
imul
mov
mov
mov
ja
cmp
in
addl
mov
mov
mov
sub
mov
iret
dec
xor
mov
cmp
inc
or
pusha
sbb
roll
mov
adc
sbb
jns
or
out
or
jmp
negl
dec
repnz
mov
stos
or
pushf
popa
xlat
inc
sets
mov
jecxz
mov
jno
fisubl
ret
lahf
pop
stos
das
mov
aas
sti
insb
test
lret
aam
test
movsl
pop
cs
inc
imul
add
fdivs
inc
xchg
and
xchg
push
pop
iret
pop
test
mov
xchg
jmp
shlb
pop
fiaddl
out
fldt
sub
xor
jge
inc
idivb
push
iret
xor
cmp
stos
xlat
out
ljmp
into
add
or
testl
ljmp
or
cld
sbb
mov
out
jnp
mov
push
or
data16
movsl
jp
mov
sub
in
xchg
pop
push
insl
shl
icebp
icebp
cli
rclb
fs
sarl
clc
adc
mov
mov
mov
xchg
cmp
fnstsw
xchg
pop
pop
loop
cwtl
je
aad
push
fstp
cli
or
or
arpl
pop
lahf
leave
inc
clc
movsl
stc
inc
mov
jmp
jb
push
in
cltd
out
sub
inc
movsl
lods
sti
dec
hlt
cmp
sub
mov
out
xor
fstpt
imul
push
ja
loopne
push
test
mov
sub
rclb
in
outsb
movsl
pop
and
pop
cwtl
mov
add
cmp
pop
xlat
inc
subl
mov
mov
addb
jle
lcall
mov
test
pusha
loop
outsl
mov
aaa
jmp
lea
icebp
and
xchg
jecxz
and
fidivrl
jae,pn
cs
daa
dec
cmp
cli
push
jl
or
sub
xor
lcall
jb
daa
jnp
fbld
mov
pop
xor
pushf
mov
xchg
add
rcrb
ss
dec
clc
pop
pop
pusha
pop
sbb
xor
xor
jl
add
ljmp
jmp
ja
adc
scas
add
mov
jmp
nop
sub
cli
or
ljmp
add
mov
fldenv
mov
scas
sbb
cmp
adcl
mov
loopne
imul
pushf
sbb
mov
pop
test
cmp
bound
fisttpll
inc
mov
mov
in
fmul
pop
sbb
arpl
repz
dec
mov
sub
cli
push
repz
xlat
leave
or
push
inc
adc
out
push
test
fdivrp
bound
mov
push
fcmovnbe
adc
bound
adc
bound
sub
add
sbb
jno
sbb
adc
sbb
filds
cmpsb
jg
mov
fisubl
jle
jmp
jbe
popa
mov
imul
pop
in
lret
dec
ljmp
inc
push
sbb
sahf
mov
ljmp
xor
and
out
sbb
sbb
dec
and
pop
sar
cmp
fcmovne
sahf
lea
jge
je
mov
push
mov
mov
xchg
leave
out
loopne
ret
lcall
in
dec
out
add
ja
dec
sub
sbb
je
jle
out
mov
shll
rorl
sbb
mov
inc
adcb
add
xor
ret
jnp
cmpsl
fwait
cmc
test
imul
fwait
lret
xor
cmpsl
jnp
hlt
les
loopne
outsb
mov
js
in
xor
sbb
xchg
aad
add
repz
mov
pusha
adc
mov
aas
pop
leave
mov
push
mov
test
scas
mov
jno
das
mov
or
mov
and
xchg
or
bound
push
sbb
les
mov
stc
hlt
cmp
xlat
cld
gs
out
mov
cmc
out
push
dec
aaa
push
jg
icebp
push
cwtl
cmp
loopne
dec
fstpl
add
adc
pop
jbe
push
or
dec
dec
mov
inc
movsl
lret
imul
or
movsb
dec
jns
sub
mov
leave
aas
xor
es
sbb
ja
and
push
add
mov
jb
imul
stc
movsb
cmp
sbb
ljmp
xchg
sahf
bound
dec
push
test
push
pusha
cmpb
in
mov
and
push
ret
mov
mov
push
mov
bound
fsubr
pop
fcmovnb
push
sbb
adc
lret
cmp
xor
fmuls
xlat
mov
jp
add
lcall
mov
sub
inc
pop
popa
std
lods
push
and
adc
lahf
nop
xor
or
cmpsb
pop
ret
lds
pop
inc
lods
mov
mov
in
out
sarb
mov
inc
mov
dec
les
fidivrs
and
inc
rol
cmp
adc
sub
fldl
jne
pop
cmpsb
je
mov
mov
stc
mov
hlt
add
mov
adc
mov
push
sub
adc
loope
in
xchg
cmpsb
mov
popf
mov
cwtl
xchg
int
dec
shlb
add
addb
xchg
test
aam
repnz
insb
leave
scas
fsubs
xor
out
or
repnz
das
rorb
mov
mov
inc
fldl
mov
xchg
into
add
add
sub
pop
adc
mov
jl
sub
repnz
cmc
jecxz
lahf
rcl
pop
aas
push
xchg
movb
scas
and
push
fsubs
ja
cs
sub
daa
push
cwtl
mov
shrb
hlt
push
int
ss
adcb
mov
and
mov
mov
adc
inc
jl
or
fdivr
scas
int
shll
mov
jp
cmp
test
xorl
adc
mov
mov
and
sub
outsb
movsl
loop
fs
pop
xor
leave
add
std
addr16
rorb
cs
icebp
inc
addr16
sbb
arpl
mov
push
fs
pop
cmp
out
test
add
shll
sti
adc
add
jnp
xor
sbb
and
or
inc
or
cmp
mov
daa
mov
xchg
mov
xor
mov
cmpsb
push
test
pop
lods
cld
add
repz
fxch
mov
mov
shrb
jbe
lods
adc
xor
push
sub
or
dec
mov
test
je
and
popa
cld
cld
jno
lahf
in
mov
cli
xchg
jmp
nop
lock
ret
je
cmp
sbbb
sub
sbb
ret
lea
rcl
out
cmp
sbb
outsl
sub
aas
ss
xchg
jns
jle
arpl
lahf
sub
push
ret
xorl
inc
sbb
or
subl
pop
out
cltd
test
mov
inc
sbb
lret
pop
adc
push
enter
lret
add
sbb
add
fidivrl
repnz
dec
sbb
cld
test
dec
dec
adc
jg
xor
jmp
inc
pop
sub
stos
leave
sub
xor
push
popf
push
imul
orb
push
add
ja
loop
jae
pop
dec
inc
in
mov
inc
shrb
mov
sbb
sub
add
ljmp
mov
jg
add
clc
aas
cltd
jno
xchg
inc
push
outsb
lcall
xor
pop
push
push
int
test
xchg
movsl
push
mov
loopne
sahf
out
jns
mov
ret
mov
js,pt
mov
rorb
push
call
push
xchg
sub
sub
add
mov
decl
aaa
jne
arpl
stc
nop
xor
idivb
lcall
push
arpl
xchg
bnd
fs
sbb
jl
psubusw
pop
jo
ljmp
jne
fiaddl
clc
mov
rorb
xor
jo
jle
hlt
push
sbb
stc
test
add
sar
mov
not
push
popf
ret
inc
add
mov
jle
jl
dec
arpl
stos
lock
fdiv
push
mov
xor
test
pushf
out
or
dec
mov
cmp
jno
mov
loop
mov
adc
hlt
gs
les
xchg
and
das
imulb
push
jecxz
cmp
mov
pop
fdivr
pop
in
mov
pop
movsl
std
insb
push
pop
push
cs
mov
gs
sbb
addr16
push
inc
push
insl
jle
rcl
sahf
test
dec
mov
jnp
cmpsb
cvtps2pi
lret
gs
out
fwait
sub
sahf
push
xchg
and
mov
ljmp
cmp
cmp
xchg
mov
add
gs
sbb
mov
flds
mov
repnz
sub
push
aam
and
add
fs
clc
insb
push
xor
popa
xchg
stos
data16
and
lds
loop
test
rorb
or
mov
int
in
pop
push
cmp
pop
xor
imulb
and
dec
mov
int3
add
fidivl
in
mov
push
mov
stos
fwait
adc
jns
push
push
in
add
mov
mov
inc
inc
push
dec
arpl
js
push
mov
daa
mov
push
sub
or
loop
pop
jle
add
cmp
mov
mov
push
cmp
dec
jno,pn
stc
pushf
and
cmp
sbb
dec
mov
test
xchg
mov
cwtl
dec
dec
xchg
dec
mov
sarl
rcl
xor
inc
xor
lock
jnp
ss
jle
lea
bound
dec
mov
cltd
fbld
stc
das
in
xchg
jnp
mov
pop
sbb
aad
hlt
mov
mov
mov
and
shrl
dec
stc
xchg
mov
cmp
bnd
outsb
das
sahf
repz
mov
push
cmpsl
outsb
dec
and
mov
ja
jbe
inc
test
sub
daa
ret
fwait
lods
leave
idivl
test
jnp
lahf
sub
movsl
sbb
movb
pop
arpl
shlb
or
jno
mov
outsb
out
aam
cltd
xor
in
mov
push
test
pop
cmc
push
aad
popf
mov
mov
sar
addb
out
xlat
mov
into
inc
jp
dec
xchg
mov
jno
or
jo
pop
out
push
test
dec
leave
std
xchg
cmp
aam
shr
in
jno
xor
cmp
rcl
xor
stc
jmp
lahf
int3
fldcw
test
adc
or
lcall
xchg
popa
pushf
nop
mov
mov
dec
outsb
testb
add
pop
xor
test
pop
fs
push
stos
mov
scas
std
xchg
mov
and
mov
nop
cmpsl
scas
dec
xor
sub
inc
test
pop
rol
pop
xchg
or
jg
cmp
mov
test
ja
aad
pop
in
or
xlat
shrl
add
sub
sub
fwait
popf
cs
lahf
adc
inc
ljmp
jno
fists
ja
mov
imul
xor
dec
jae
jge
iret
mov
out
fsubr
pop
popf
push
stc
movsl
dec
and
jmp
mov
ds
pop
pusha
dec
stos
add
cwtl
jle
and
gs
repz
or
mov
jns
cmp
cmpsl
xlat
push
sahf
push
ret
das
aas
mov
nop
mov
lock
and
andb
mov
push
push
testb
pop
jb
mov
out
sbb
stc
xor
sbb
div
iret
out
add
mov
in
dec
je
cmpsl
mov
xlat
fisubl
jg
in
mov
xor
repnz
test
xor
dec
push
shl
fimuls
sub
and
shl
mov
mov
out
lods
push
aam
mov
dec
adc
adc
ds
popf
cmp
inc
cmp
ja
cmp
out
or
lock
sub
fsubrl
cld
shlb
push
insl
fstpl
mov
xor
mov
rolb
mov
pop
roll
dec
and
lock
add
mov
inc
repz
imul
pusha
pop
sub
shlb
addr16
cmp
lock
jb
lods
testl
jno
jmp
in
pop
mov
xchg
scas
push
push
lods
and
out
outsl
sub
imul
inc
lcall
dec
mov
adc
in
lods
cli
out
sahf
ljmp
das
lcall
inc
mov
lods
data16
mov
cli
sbb
loopne
mov
pop
push
mov
lahf
outsl
jl
mov
jg
mov
testl
xlat
jg
mov
jno
sar
push
bswap
mov
dec
pop
dec
jmp
jae
add
clc
movsb
sbb
inc
sub
add
in
sarl
ret
fstl
sahf
lret
mov
inc
push
gs
and
or
sub
mov
mov
dec
adc
and
das
sarb
inc
and
dec
push
xchg
sub
and
sti
ja
std
sbb
push
mov
fsubrp
repnz
add
jmp
jp
enter
adc
out
xor
cmpsb
push
mov
or
aaa
jmp
lahf
xchg
and
cmp
dec
popa
xor
sbb
ds
mov
mov
int
jne
mov
mov
and
gs
jne
jno
stos
test
aam
and
cli
hlt
das
pop
inc
mov
out
out
adc
hlt
cs
cmp
lcall
pop
sbb
ja
push
mov
arpl
adc
out
clc
clc
ret
loope
in
or
jp
js
bswap
mov
mov
aad
in
mov
stos
push
sti
imul
jns
test
ds
iret
ljmp
pusha
mov
and
jl
pop
fmuls
pop
push
push
mov
xor
nop
cmp
les
and
cs
sbb
lahf
lahf
jl
adc
pusha
inc
xor
dec
xlat
jns
lods
loop
jno
push
add
fstps
das
popf
lock
jno
lds
lods
arpl
pop
ret
cmpsl
xchg
mov
gs
mov
sub
inc
inc
lock
push
push
mov
adc
sub
xchg
pushf
cli
xor
dec
into
imul
push
mov
shrl
push
mov
pop
out
pop
push
adc
fs
sub
pop
push
outsl
jns
or
testl
outsb
jns
stos
nop
rcrl
mov
mov
aaa
ret
push
out
cmpsb
add
pop
sub
arpl
mov
jge
push
mov
stos
test
jb
fisttps
push
mov
pop
mov
scas
jecxz
add
ja
sub
stos
cmpsb
mov
mov
cmp
or
dec
xlat
das
aaa
sbb
mov
mov
and
test
fbld
push
test
in
pop
adc
mov
rclb
and
pop
push
data16
mov
pop
mov
mov
or
pop
inc
outsb
inc
out
loope
push
or
inc
cs
sub
sahf
test
addr16
pop
and
das
iret
mov
mov
ljmp
sti
js
ret
sbb
or
fnsave
sub
xchg
cltd
jo
scas
fmull
mov
add
test
jge
jle
les
stos
push
ret
or
inc
inc
scas
fnsave
add
adc
stos
jne
jmp
xor
lods
les
cltd
sbb
movsl
jne
xchg
lcall
dec
sbbl
pushf
shr
xchg
xchg
push
sbb
sbb
or
mov
rorb
pop
or
scas
sbb
dec
cli
dec
insb
ret
lods
dec
adc
and
lds
daa
inc
out
shl
cli
stc
cltd
mov
loopne
inc
movsl
dec
or
dec
push
pop
pop
mov
scas
sub
inc
dec
xor
cld
push
jl
push
jecxz
outsb
ret
movsb
pop
sub
dec
mov
dec
sub
rcr
mov
aad
cmp
cmp
faddl
in
popf
cmp
inc
sbb
dec
adc
repz
ret
inc
in
xchg
ret
fwait
mov
pop
loope
sub
adc
or
out
shlb
imul
xor
sbb
loope
adc
mov
orb
sti
lret
jl
sbb
dec
mov
jnp
addr16
out
es
xchg
mov
imul
pop
jnp
iret
lea
inc
es
test
add
aad
aas
lods
out
mov
pusha
pop
out
pop
pop
js
leave
stos
jmp
fisttpll
loopne
sbb
cmp
pop
sbb
or
rclb
je
fnsave
mov
adc
ljmp
pushf
mov
sub
push
out
test
leave
pop
js
inc
cmc
idivl
imul
test
jne
loope
rcrb
repnz
into
xchg
jmp
aaa
addr16
pop
inc
push
in
mov
jp
cmc
addr16
push
push
or
dec
mov
sub
call
jae
jo
mov
imul
sub
inc
sub
lods
cmc
xchg
dec
loopne
mov
loop
cmpsb
and
jmp
cmp
pop
mov
or
aas
adcb
mov
and
lcall
mov
pop
pop
test
sahf
pop
xchg
scas
popf
inc
xor
stos
push
setbe
jae
mov
pop
test
cmp
jnp
mov
outsb
add
fwait
cwtl
push
add
ja
cmp
lahf
push
push
fistpll
lahf
add
push
nop
xchg
or
sbbb
mov
mov
lcall
fstpt
lcall
nop
loop
jae
sub
jo
cmp
add
shlb
shl
pushf
add
lods
fwait
test
shlb
mov
pop
sahf
xor
and
test
push
cmpsl
inc
aaa
loope
mov
clc
imul
in
jbe
sub
fs
out
mov
push
jns
mov
cwtl
sbb
push
out
push
pop
xor
lods
sub
xor
insl
or
cmp
ret
jnp
call
pop
xor
lcall
mull
push
adc
cwtl
add
lods
divb
xorl
sub
mov
push
mov
xchg
add
test
stc
test
sub
repnz
popl
cmp
xchg
mov
sub
imul
in
cmp
shlb
cld
pop
mov
scas
les
jno
lods
xor
xor
shlb
shrl
jmp
fcomps
sub
fists
icebp
lock
cmc
add
cld
xchg
out
and
imul
push
mov
xchg
rorb
sti
or
decb
jecxz
hlt
jp
mov
fsubs
adc
insl
dec
ja
jg
in
mov
xchg
cmp
jo
lods
movb
push
xchg
les
jb
scas
mov
sar
pop
dec
mov
inc
arpl
std
push
and
push
dec
icebp
psubb
aaa
popa
mov
add
sub
inc
mov
shrb
cwtl
pushf
leave
cmp
jge
iret
lret
scas
iret
call
mov
arpl
xlat
sbb
mov
push
push
pop
ret
xchg
mov
test
cli
bound
sub
jge
out
or
dec
pop
iret
lods
out
test
xchg
sub
test
mov
scas
mov
fabs
pop
mov
or
cmpsb
mov
repz
inc
sub
iret
sarb
xchg
js
pushf
inc
mov
subb
push
fdiv
mov
sub
pushf
xor
mov
or
dec
out
or
inc
fadds
mov
mov
fsts
push
shrb
jb
mov
mov
xchg
jg
add
inc
xchg
addr16
xchg
fs
xor
test
jb
dec
inc
mov
jo
mov
adc
fs
int3
cmp
loopne
push
dec
sbb
xor
mov
cmp
flds
js
push
xchg
mov
pop
fnstsw
push
xor
fs
aaa
pop
push
bound
adc
xchg
push
xlat
sbb
pop
fildll
test
xlat
fldcw
mov
mov
xor
pop
fwait
sahf
mov
pop
adc
jb
add
xor
cmc
pop
int3
sarb
data16
sbb
icebp
or
loop
add
mov
cmpsl
push
sub
sub
sub
sti
addr16
adc
mov
add
dec
pop
lret
in
sbb
xor
roll
and
pop
das
mov
jg
fwait
shrb
mov
dec
scas
idivb
jg
jne
fwait
test
insl
and
sub
movsb
push
mov
jl
call
out
push
dec
inc
jp
ja
mov
inc
push
jb
das
jns
pop
inc
adc
test
push
test
sub
or
mov
test
pop
shlb
mov
and
mov
fisttpll
push
stos
and
add
mov
inc
pop
adc
ljmp
mov
xchg
into
jnp
es
mov
sub
pop
cmp
jmp
loope
and
and
movsb
inc
pop
jmp
idivb
in
ss
inc
adc
cmp
pop
mov
jb
jecxz
jp
cs
pop
and
fsubrs
jo
mov
test
shrb
stos
stc
jg
out
xor
add
out
inc
add
push
cltd
push
loop
pop
add
jg
and
arpl
popa
nop
in
inc
lock
mov
rorl
mov
gs
out
mov
orl
xor
cmp
mov
mov
sbb
std
mov
pop
aad
aam
dec
xor
mov
mov
jecxz
mov
movsl
jge
xchg
sbb
mov
xorb
loopne
and
mov
jl
mov
jle
xchg
call
inc
xchg
notb
mov
leave
mov
jno
dec
xchg
lds
or
fiadds
xor
shl
xor
jp
adc
movsb
nop
cmpsl
fidivl
mov
mov
fwait
xor
out
adc
xchg
test
cmp
mov
and
negl
imul
pusha
rorl
aad
out
dec
jnp
cli
sub
rorb
xchg
push
or
or
lret
testb
pop
mov
inc
test
stos
jno
lock
inc
stos
outsb
add
sbb
sbb
xor
paddusb
test
cmp
xor
fbstp
dec
xchg
imul
mov
test
adc
jb
es
jns
pop
jg
lcall
sub
xchg
mov
rcll
push
aam
test
add
clc
mov
rorb
or
cmpl
mov
dec
mov
out
and
xor
xchg
lods
addr16
fbld
jo
and
sbb
add
jbe
aam
testl
xor
ret
loop
jno
jo
mov
push
cs
mov
scas
jmp
andl
into
lods
lds
loope
test
mov
push
push
cmc
and
ret
jge
lahf
mov
and
sbb
mov
xchg
xchg
loopne
ljmp
les
aam
jnp
sub
cmpsl
pop
pop
mov
sbb
jb
and
cmp
inc
addb
icebp
call
loopne
leave
push
mov
and
mov
jbe
jg
cltd
cltd
fdivl
cltd
xor
scas
ds
leave
fisttpl
fnsave
mov
cltd
dec
stos
push
call
jl
movsb
pop
lds
inc
inc
jnp
adc
xchg
lock
pop
scas
mov
mov
fwait
push
pop
bound
mov
add
out
lahf
stc
in
test
js
and
gs
inc
inc
jb
jmp
repnz
mov
push
stos
and
xlat
lahf
stc
jmp
mov
jnp
sub
sub
pop
pop
test
ljmp
jecxz
mov
loope
or
addr16
pop
fists
rolb
and
pop
hlt
dec
ljmp
rorb
loope
mov
repz
jae
fdivs
mov
fsincos
sub
mov
shll
adc
shrl
lahf
push
sbb
dec
pop
mov
add
cmp
push
and
add
cmp
dec
xchg
mov
mov
imul
ficoms
enter
mov
ror
mov
xchg
icebp
pop
ss
mov
mov
std
test
xchg
mov
xchg
addr16
jl
xor
loopne
and
fbstp
push
mov
pop
cmovg
adc
push
gs
pop
fsubs
mov
stc
dec
sub
in
hlt
dec
pop
aaa
test
cwtl
add
imul
xor
mov
and
jbe
std
cmc
test
inc
mov
dec
and
sbb
data16
inc
out
push
adc
push
and
dec
fwait
mov
out
cmpsl
cli
adc
pop
fmull
lods
mov
into
or
pop
repnz
insl
mov
adc
popa
add
insb
lret
xor
pop
mov
test
in
out
xor
movsl
lods
mov
or
pop
mov
rorb
xor
jl
push
icebp
pop
xchg
scas
add
addr16
insl
loop
into
or
fmul
outsl
inc
pushf
cmc
shll
push
mov
mov
xchg
pop
dec
inc
push
push
iret
cltd
add
insl
out
dec
adc
int
stos
mov
popa
scas
inc
jbe
cmp
loope
lods
jp
dec
push
pop
jge
and
insl
xor
popa
fs
fcmovb
sbbl
mov
movb
loope
mov
out
xchg
stos
repnz
and
cmpsb
and
or
fnstcw
out
loop,pt
sti
mov
xchg
leave
ror
sbb
or
push
mov
adc
arpl
dec
fldenv
leave
mov
loope
mov
aas
or
mov
iret
hlt
mov
mov
stos
add
xchg
test
in
test
mov
cmc
push
and
pop
add
pop
jg
push
test
leave
lock
into
in
ljmp
push
xor
lahf
xchg
cwtl
jp
sbbl
jl
jnp
pop
test
mov
movsl
insl
mov
mov
jl
imul
sub
mov
sbb
in
mov
mov
cs
aaa
imul
mov
popf
xchg
out
arpl
hlt
test
push
or
push
lods
pop
jge
jo
jne
xchg
mov
mov
ss
dec
dec
call
xchg
testl
clc
mov
cmpsb
mov
dec
ss
arpl
ljmp
fstl
int
push
leave
inc
push
insl
push
adc
popf
sahf
test
insb
in
push
fstpt
lock
pop
xor
pop
mov
fidivs
mov
aas
mov
mov
insl
je
leave
mov
ret
push
gs
shrb
pop
sbb
sub
sub
mov
std
loopne
xor
sbb
jl
repz
hlt
stos
subl
and
jmp
or
adc
mov
sbb
mov
inc
dec
int3
or
es
sub
mov
jl
movsl
xchg
xor
sbb
jb
sbb
call
and
pop
rcr
lea
pop
outsb
dec
pop
sbb
jp
adc
or
jb
scas
cmp
fnstenv
inc
outsb
enter
cmc
cwtl
jecxz
dec
enter
fbstp
xor
shl
mov
fdivrl
loope
xor
adc
pop
out
adc
push
insl
mov
cwtl
popl
pop
sti
std
mov
add
stc
mov
shl
pop
inc
shlb
ficoms
leave
mov
sbb
and
or
xor
lret
sub
jmp
dec
push
test
sbb
cmp
fiadds
dec
fidivl
mov
mov
cwtl
sbb
push
push
jle
insb
push
xor
adcb
daa
cmp
sarl
adc
in
xor
stos
call
cmp
xchg
push
push
test
dec
mov
cmpsl
je
and
cld
lock
leave
je
mov
dec
insb
jae
lds
das
jb
pop
into
xor
mov
pop
mov
adc
add
loopne
aaa
sub
lahf
rolb
sarl
pop
ja
out
mov
gs
xchg
daa
xchg
sbb
and
cmc
nop
notb
rorb
dec
movsb
aaa
scas
push
add
je
cmc
js
mov
push
clc
add
pop
jecxz
mov
call
add
xchg
call
xchg
loope
cwtl
jns
or
mov
insl
andl
dec
cs
adc
jns
in
jae
adc
inc
push
mov
adcb
xchg
and
stos
mov
repz
addr16
sbb
pusha
inc
scas
cs
loop
xor
mov
mov
pop
lock
push
push
repnz
cmp
push
fldt
add
cmp
xchg
lret
les
out
ljmp
sub
cmp
mov
add
sub
shlb
mov
cmp
adc
mov
mov
xor
sbb
and
sub
sbb
xor
in
pop
sbb
push
jmp
cld
js
cmp
push
adc
mov
out
aam
loopne
push
fdivrs
mov
ljmp
cmc
and
lahf
pop
push
aas
pop
mov
ret
push
loop
mov
fst
mov
push
pop
out
ss
fcmovnb
stos
dec
lds
ret
mov
testl
mov
aad
push
pop
sub
fidivl
int3
mov
jo
mov
or
lods
jnp
stos
fistpl
and
and
cs
inc
jp
mov
lahf
sti
clc
repz
jg
xchg
push
test
fdivr
rorl
push
xchg
frstor
lods
xchg
je
mov
inc
imul
adc
adc
imul
xchg
ss
test
ja
rcll
mov
sahf
inc
in
jo
fwait
shlb
jne
or
es
sahf
pop
xchg
lds
nop
xor
inc
ror
jmp
add
jne
jno
pop
lock
jp
jb
call
xor
rorb
ljmp
out
jnp
loope
inc
movhps
cmpsb
loope
cmp
xchg
mov
sub
sbb
or
addb
out
xchg
decl
xchg
xchg
and
push
add
sti
jo
mov
out
sub
xchg
cmp
neg
insl
sub
or
push
lret
lods
popa
dec
mov
pop
jl
pushf
xlat
or
and
lahf
adc
imul
pop
inc
adc
sbb
fiaddl
xorl
int
cmp
push
in
popa
clc
in
loope
aad
pop
add
and
jge
dec
pop
mov
cmp
insb
sbb
idivb
inc
mov
mov
cmp
mov
stos
pop
jo
and
xor
cmp
fmul
out
and
mov
or
sti
xchg
push
push
cs
ss
ss
scas
mov
pop
rcll
ffree
dec
mov
test
cmc
jnp
push
sbb
in
jmp
or
mov
fdivrp
mov
pop
adc
xchg
push
jmp
popa
push
rcr
xchg
rorl
mov
repz
push
mov
dec
aaa
mov
mov
in
and
add
adc
pop
test
stc
pop
dec
notb
mov
or
add
pop
and
js
ret
popa
cmpsl
test
add
pushf
inc
mov
cmp
mov
hlt
pop
and
rcrl
aam
cmpsb
sbb
fidivl
pop
mov
cmpsb
jae
mov
shlb
dec
scas
sarl
mov
xchg
fimull
jb
inc
sbb
or
cmp
xchg
shll
push
cmp
inc
int
mov
les
clc
ljmp
jno
out
sub
shlb
sbb
mov
lahf
mov
jo
xlat
addr16
test
xchg
aaa
icebp
shr
sahf
sub
mov
or
loopne
in
sub
ret
iret
push
lret
dec
jbe
lods
push
test
xor
stc
add
jmp
push
or
loope
xchg
pop
fwait
js
pop
or
pop
cmc
loop
xchg
loopne
ljmp
enter
jl
popa
ret
sbb
popf
add
in
cli
mov
insl
in
sar
out
mov
push
add
xor
sbb
jnp
jae
fsub
shlb
ret
js
xor
inc
aam
insl
inc
cmpsl
aam
push
sar
dec
dec
xchg
fcoml
mov
decl
pop
test
adc
xor
das
iret
sbb
pusha
lahf
repz
or
mov
leave
dec
ss
xor
movsl
mov
into
mov
cli
pop
mov
sar
push
rcrb
mov
sbb
dec
xor
add
mov
dec
js
inc
mov
bound
int
sbb
sbbl
push
cmpb
vsubsd
sbbl
scas
jo
sbb
add
gs
mov
sub
sub
push
pop
mov
decb
inc
paddd
insw
rorl
pop
inc
scas
xchg
xchg
cs
scas
ficoml
into
inc
adc
popf
data16
mov
js
xchg
jne
jecxz
sub
insl
xor
icebp
arpl
incl
loope
fistl
mov
adc
into
out
addr16
xchg
xor
jnp
fstps
cmp
repnz
std
subl
cmc
in
fwait
cmp
ja
push
xor
inc
mov
mov
sub
jp
or
cli
sbb
andb
mov
leave
int3
subb
sti
or
in
loope
mov
mov
sub
sbb
or
mov
scas
jbe
ret
in
daa
je
cld
sbb
mov
sbbl
push
movsb
outsl
sub
fisubs
fildll
pop
pushf
faddp
jmp
sarb
dec
push
mov
dec
dec
cli
ljmp
pop
xor
add
cwtl
xchg
and
or
dec
sbb
push
jp
iret
out
push
push
xorl
scas
imul
in
inc
shll
lods
test
enter
inc
cmp
lock
cli
leave
pop
dec
pop
je
popa
inc
xchg
cs
inc
inc
push
dec
and
pop
jmp
sub
leave
or
xor
std
int3
or
test
sbb
addr16
mov
sahf
xchg
cmpsb
cmpsl
inc
outsl
pop
mov
mov
ljmp
xchg
sub
bound
inc
push
mov
sbb
test
in
sahf
jmp
cs
cmp
adc
and
outsl
sbb
cs
xchg
push
shll
cmc
jecxz
add
mov
js
xlat
or
jmp
stc
sbb
cmpl
jbe
repnz
mov
mov
adc
jle
xchg
lods
pusha
cmp
fmull
mov
hlt
or
mov
test
sbb
gs
scas
cld
filds
fwait
inc
xchg
popa
fmuls
dec
shrl
loop
out
popa
sub
cmpb
push
mov
pop
push
cs
sub
subb
movsl
lds
std
mov
movsb
outsl
cmpb
lahf
ja
mov
pop
ret
xor
xchg
clc
clc
jbe
push
pop
xchg
adc
jbe
stos
in
cmp
mov
adc
clc
ret
lea
sub
mov
dec
imul
jl
sbb
push
es
adc
ret
jge
or
xchg
cmpb
int
icebp
icebp
stos
stc
mov
bound
adc
je
ret
pop
pop
mov
mov
test
lods
mov
pop
jnp
jmp
jne
and
gs
loopne
imul
or
imul
or
cmp
dec
cld
out
sub
cmpsb
test
cltd
shlb
jp
iret
outsl
pop
mov
jae
pop
jg
lea
mov
lock
test
push
mov
adc
sbb
pop
lcall
mov
cmp
data16
in
add
and
clc
push
jbe
pushf
int
pop
lock
sbb
sti
rcl
dec
loopne
iret
lods
aad
and
push
or
push
add
out
sahf
lret
dec
add
xchg
nop
and
call
xor
pop
je
lods
mov
fwait
rcrl
mov
dec
cmp
enter
push
ret
ret
daa
cli
les
lret
mov
and
imull
cmpsl
mov
adc
addr16
pop
js
mov
test
hlt
mov
popa
sbb
cli
jecxz
cmpl
adc
cmp
in
sbb
mov
or
jns
nop
add
sub
cli
popa
push
popa
mov
scas
movsl
call
mov
adc
pushf
hlt
lret
or
shll
fcmove
ss
ljmp
mov
push
jo
adc
ret
lea
sub
push
or
mov
ja
ret
rcrl
fwait
cmove
leave
aad
movsb
shrb
mov
mov
call
call
and
insb
sbb
inc
pop
dec
cwtl
das
push
aaa
add
jge
outsb
fcomip
daa
mov
mov
inc
cmpsb
es
mov
lea
sub
sbb
roll
loop
or
icebp
add
shr
push
xorb
scas
inc
sbb
stos
push
lret
cmpsl
mov
add
nop
pop
xor
mov
pushf
xor
and
pop
pop
push
inc
imul
shrl
cli
cmp
push
stos
pop
loopne
dec
or
mov
add
fcmovnbe
leave
scas
ret
jno,pn
movsb
ja
repz
push
push
iret
add
push
jns
jo
ljmp
mov
xlat
dec
mov
xchg
pop
lcall
jno
scas
sbb
push
mov
cmc
insl
mov
xchg
jp
call
push
push
out
mov
mov
nop
insb
out
cli
arpl
jp
cmp
dec
in
or
ss
rolb
sbb
adc
faddl
mov
into
scas
cmp
iret
adc
jns
mov
sbb
mov
push
out
in
dec
jmp
cli
mov
xor
xchg
std
pop
cmpsb
xchg
shl
mov
lods
sti
jp
lock
xlat
ss
mov
sahf
call
dec
rolb
mov
xlat
cmp
mov
je
pop
jae
popa
add
fstpt
out
and
aam
mov
push
jge
test
sbb
les
sbb
add
subb
aaa
push
inc
lea
inc
mov
cmp
test
into
pop
sbb
imul
and
jb
add
cmc
xor
test
push
xchg
mov
cmp
push
add
out
cmp
xchg
out
push
mov
shll
inc
push
test
xlat
sbb
xchg
daa
pusha
stc
ja
push
ror
shrl
outsb
shll
mov
and
ljmp
jmp
mov
pop
cmpsl
iret
add
aad
in
int
jg
pop
and
shll
test
xchg
in
mov
adc
mov
add
or
ja
mov
add
cltd
movsb
cmp
fisubrs
andb
cmpsl
into
std
pop
imul
cmp
pop
add
adc
testl
xor
sbb
fwait
or
jle
mov
sbb
sub
pop
das
dec
push
push
push
mov
jo
negb
notb
ja
vpperm
add
xchg
add
out
repnz
add
mov
mov
jae
mov
out
frstor
adc
sub
xchg
pop
mov
inc
xor
test
push
fistl
int3
xchg
inc
mov
mov
fmul
mov
inc
cwtl
cmp
adcb
mov
adc
push
loopne
push
or
bswap
adc
and
stos
cmp
sub
sarb
fwait
lock
outsl
xchg
and
jb
pop
push
jne
jb
lret
mov
stc
mov
pop
sub
xor
mov
loopne
jmp
outsb
push
inc
mov
xor
jecxz
imul
xchg
add
jge
ds
inc
sub
adc
lret
sub
jp
aas
push
movsb
mov
xor
repz
sbb
addr16
out
into
jbe
ja,pn
add
mov
into
fadds
xchg
scas
pop
clc
fwait
cwtl
mov
xlat
jge
movsl
inc
xchg
push
mov
mov
mov
or
mov
sub
jle
es
mov
nop
addl
scas
and
lcall
pop
scas
add
push
ret
push
mov
int3
mov
mov
sub
lock
push
mov
movsl
inc
jecxz
mov
xor
push
test
jne
mov
jp
push
dec
sbb
pop
frstor
or
sahf
pop
mov
not
sub
cltd
adc
cmp
sbb
push
xor
push
test
insb
cmp
jge
push
notl
pop
lods
shll
xlat
sbb
mov
dec
pop
and
mulb
jp
pop
lret
lret
add
adc
addr16
mov
mov
inc
inc
test
cmp
pop
add
sbb
lds
scas
jl
or
fnstsw
and
jno
leave
aad
int
xchg
mov
int3
fidivl
sub
addb
jmp
and
and
loop
push
hlt
pushf
sahf
dec
pop
sub
sub
ja
jnp
sbb
cwtl
test
incl
pop
inc
pop
jns
lcall
scas
icebp
add
int
pop
sub
pusha
lret
ret
xchg
or
jbe
lret
sbb
mov
ja
cmp
pop
sar
ljmp
xor
fcom
add
lcall
sbbl
and
fwait
inc
lret
mov
or
fabs
in
mov
sarb
xor
or
mov
lea
mulb
loop
pop
test
cld
adc
call
push
inc
out
in
sbb
sub
adc
push
sarb
test
adc
mov
aad
fdivrl
adc
repz
sahf
dec
push
sbb
dec
jg
mov
xlat
and
leave
clc
lods
lods
cld
dec
data16
push
pop
loop
pushl
int
adc
out
loopne
jle
mov
and
dec
pusha
int3
mov
xor
dec
and
add
mov
mov
lahf
jmp
cmpsl
push
adc
fld
fdivs
inc
mov
lock
mov
lods
mov
rol
out
or
lahf
sub
divb
mov
dec
mov
es
fs
out
xchg
dec
pop
addl
out
cmpsl
mov
cld
inc
fisttpll
xchg
adc
sub
push
cmpsl
lcall
mov
sbb
xor
ljmp
push
mov
add
or
push
addr16
xchg
xchg
ficompl
jnp
cmp
paddw
enter
lret
not
cmpsl
pop
push
inc
addr16
jmp
xor
shll
xchg
enter
inc
jnp
adcb
push
sbb
mov
mov
add
sub
dec
xchg
push
cmpsl
sbb
mov
pop
insb
mov
xchg
and
jns
pushw
aas
les
int3
mov
mov
push
data16
xor
movsl
cmp
inc
jle
push
inc
push
inc
inc
mov
std
insl
loopne
ds
cmc
dec
pop
outsb
and
dec
addl
and
aad
dec
test
xchg
pop
jecxz
push
or
inc
sub
adc
scas
pop
in
cmp
popa
sbbl
shll
fs
mov
shll
lahf
loopne
sbb
shrb
inc
jle
sub
ja
pop
out
lahf
xor
cltd
sub
mov
test
inc
push
xor
into
cmp
push
lcall
iret
movsl
es
ljmp
sbb
cmp
insb
jbe
loopne
aas
sub
xor
scas
push
std
in
dec
in
arpl
fisttps
mov
sbb
dec
fucomp
loop
mov
gs
scas
dec
out
stos
ljmp
int3
rcrl
xchg
jne
xor
push
cwtl
adc
or
data16
mov
ljmp
repz
stc
in
jo
mov
mov
lds
xchg
js
aam
push
cmp
xor
loopne
in
int3
push
outsb
scas
cmpsb
ret
es
push
mov
inc
test
es
fsubs
loope
lock
icebp
sbb
std
cmp
and
mov
mov
cmp
adc
loop
subb
mov
std
xchg
mov
mov
add
push
ljmp
insl
fstpt
mov
mov
es
clc
sahf
sub
mov
call
test
push
mov
push
add
add
xchg
and
fiadds
pop
jae
ja
das
std
repnz
lret
test
test
mov
shlb
hlt
push
or
out
jg
jl
xor
inc
jo
faddl
or
sarl
and
push
pop
adc
jae
jns
sahf
mov
push
cs
jb
xchg
out
data16
jmp
lock
cmpsb
pop
add
lods
ficoml
mov
jo
pop
mov
mov
xor
jb
xchg
ja
add
and
rol
aaa
out
vpsubq
mov
es
aad
pop
out
jp
or
fcompl
insb
repz
xor
sbb
in
push
test
out
add
aaa
int
aam
mov
in
scas
mov
push
inc
sahf
and
aam
fadd
pusha
lods
inc
dec
divl
jo
in
cmp
push
loop
cld
dec
adc
adc
test
cmp
iret
pop
aaa
mov
mov
sbb
sbb
sub
push
cli
pushl
outsl
sub
fstl
lret
fadds
fadds
or
add
mov
ror
gs
inc
push
scas
cmpsb
cmp
insl
xchg
push
fisttps
outsl
cmp
mov
shlb
jp
int
pop
mov
adc
pop
xor
aad
loope
stc
pop
jg
jne
mov
ret
cmp
mov
dec
addr16
daa
mov
and
in
lds
mov
jp
outsb
jno
cmp
fnstsw
jmp
outsb
cs
icebp
sbb
fdivrp
cmc
push
xchg
jge
or
popa
mov
mov
orl
and
push
popa
fcmovnu
or
or
rcl
and
mov
jns
hlt
aas
popa
fsts
xor
inc
pushf
xchg
ret
es
fwait
lods
xchg
mov
cmp
inc
shrl
test
jp
or
push
mov
leave
jbe
xor
stos
test
adc
or
xor
push
rorl
add
sub
pop
dec
xchg
mov
arpl
push
sub
loop
cli
mov
or
testb
mov
les
lock
adc
shll
jecxz
push
add
stos
orb
mov
jne
mov
hlt
stos
int3
repz
mov
push
adc
idivb
les
push
cmp
dec
mov
nop
cmp
mov
negl
xchg
mov
inc
adc
mov
mov
loopne
lahf
fs
mov
icebp
jge
scas
inc
lcall
inc
add
or
stc
sub
xor
cmp
jne
sbb
mov
movsl
outsl
jns
stos
sahf
pop
jae
in
inc
lods
daa
out
push
add
scas
pop
xchg
pop
lcall
mov
mov
cmp
sbb
mov
mov
push
rcr
mov
or
pop
add
dec
not
inc
pop
nop
mov
mov
jne
mov
mov
gs
ljmp
dec
sbb
sbb
mov
cltd
mov
repnz
inc
es
fidivl
push
mov
pop
lock
nop
les
xchg
add
mov
cmp
roll
xchg
imul
sub
idivb
push
out
loopne
pop
or
mov
jns
inc
jb
pop
mov
stos
mov
psubusw
sbb
jle
xchg
clc
jns
mov
inc
cmp
mov
jmp
movsb
pop
jle
adc
xchg
subb
out
dec
jae
aaa
adc
fadd
jge
aas
adc
add
sbb
push
or
cwtl
push
jns
push
das
adc
xchg
inc
inc
sbb
loopne
cmp
add
pop
xchg
xchg
jne
xor
xchg
lea
shll
daa
mov
inc
mov
pop
inc
adc
aaa
add
ja
jnp
jg
ss
or
in
idiv
mov
iret
fstl
mov
xchg
movsb
inc
sbb
movb
les
lods
adc
fcomip
inc
push
mov
jecxz
mov
adc
cmc
cmp
je
push
mov
lea
push
sti
sbb
inc
mov
scas
inc
or
or
sbb
pop
sarl
jnp
insb
pop
pop
int
outsl
mov
int
mov
push
sub
jmp
in
mov
xor
in
in
test
sti
inc
out
mov
mov
adc
push
cmp
outsb
dec
xchg
add
fstpt
mull
ror
mov
js
iret
loopne
push
outsl
lahf
pop
inc
and
cmp
fidivrs
adc
movsl
adc
js
int
inc
sbb
outsl
iret
cmp
in
jno
or
sbb
inc
loop
outsl
add
xchg
sbb
testb
cmp
pusha
clc
in
mov
rolb
lret
dec
mov
and
mov
loope
sbb
push
movsb
les
pop
in
jae
shl
pop
jne
pop
incb
pop
mov
jbe
ret
push
inc
or
xor
imul
cld
bound
inc
out
mov
and
in
mov
mov
int3
xor
fildl
or
insb
je
jae
fadd
cs
adc
or
outsb
lret
out
adc
insb
ds
fmuls
sub
out
mov
mov
jbe
push
or
outsb
rclb
in
push
xchg
xor
lahf
or
inc
fldl
pusha
in
test
inc
inc
pop
mov
aas
ret
in
mov
lret
mov
add
pop
and
cli
test
sbb
xchg
mov
mov
fwait
movsb
add
cld
jg
inc
std
add
mov
fldl
call
sahf
and
out
mov
jle
jo
mov
pop
jno
jg
add
andb
movsb
xorb
xor
xchg
and
cmc
pop
sub
lods
sub
inc
aas
push
pop
mov
enter
ljmp
js
int
imul
sub
int3
loope
mov
mov
cmp
push
les
and
jecxz
pop
stos
in
inc
inc
mov
cs
addr16
lea
clc
or
pushf
pop
push
sahf
cld
in
int3
inc
mov
inc
jns
and
push
movsb
or
mov
push
jo
xor
mov
dec
loopne
jge
mov
stos
adc
divl
insb
rolb
adc
ss
call
sub
lods
out
psubb
add
jl
xchg
jo
scas
mov
inc
test
jne
add
cmp
fdivs
cld
loope
movsl
dec
or
mov
xchg
lods
push
or
jne
insl
dec
inc
jae
adc
outsb
lcall
mov
out
sbb
and
je
xor
mov
outsl
xchg
add
dec
adc
popa
sub
adc
inc
les
les
mov
jl
repz
stos
lret
sbb
rorb
stos
push
test
aaa
rorb
mov
adc
mov
pop
fsubr
out
sbb
aaa
dec
jno
roll
push
outsb
outsb
in
cltd
pop
dec
aas
push
mov
jns
fistpl
mov
dec
ds
dec
mov
outsb
dec
jl
mov
pop
xlat
mov
xchg
pop
mov
cmp
mov
xchg
dec
jbe
xor
mov
pop
fsts
cmp
xlat
vunpcklps
jl
cmp
jo
repnz
xchg
mov
mov
cs
jp
inc
xchg
ret
imul
or
aas
pop
stos
push
int3
inc
imul
lds
ljmp
adc
sti
inc
mov
into
mov
inc
add
pop
lea
mov
mov
push
cmp
mov
push
das
mov
pop
je
sbb
mov
dec
das
or
xlat
dec
pop
xchg
xor
sbb
sbb
stos
sbb
dec
std
lods
mov
mov
push
xchg
inc
jmp
les
divl
jecxz
in
test
jno
in
into
xlat
xor
xchg
clc
movsb
cmpsl
loop
ja
push
hlt
shrb
ss
pop
inc
inc
cwtl
fs
iret
xor
dec
ret
push
xchg
fbld
jmp
jae
je
or
and
mov
mov
xor
pop
add
sbb
cltd
pop
rclb
cld
iret
rcrb
pop
sarb
aas
cltd
popa
arpl
xor
and
mov
pop
mov
cmp
lea
mov
inc
cmpsb
lahf
mov
arpl
popf
adc
xor
test
lahf
cld
fwait
sti
jb
push
push
insb
stos
or
sbb
loopne
sbb
daa
jecxz
pop
mov
sti
cmp
cmpsb
push
mov
sub
lahf
pop
pusha
shl
push
pusha
sbb
and
ja
pop
push
aas
imul
dec
mov
push
xor
push
les
cmp
pop
add
sbb
add
mov
xor
test
push
cltd
movsb
lret
mov
inc
jbe
adc
push
mov
fbld
sti
mov
insl
aam
mov
sbb
lea
int3
jae
adc
rorb
dec
xchg
fidivs
shr
pusha
std
cmp
sahf
ret
andb
push
fsubrl
adc
jp
cmp
nop
adc
enter
pop
aas
pop
push
cmp
pop
jge
int
inc
and
push
cs
inc
jp
fdivrl
je
pop
daa
in
daa
ss
es
mov
fldt
ljmp
into
in
popa
xchg
jno
insl
movsb
cmpsb
jp
fcoml
mov
notl
scas
adc
push
jle
xchg
daa
mul
aaa
outsb
cmc
faddl
mov
mov
and
cmp
sub
jo
andl
sbb
mov
push
push
push
ds
lahf
fisttpl
pusha
jl
mov
cmpsl
test
pop
in
ret
sub
test
fstl
sahf
dec
mov
inc
inc
mov
cmp
popa
adc
in
lret
jg
jae
adc
xor
inc
lods
xchg
and
arpl
icebp
leave
or
lahf
repz
pop
fcompl
jns
sbb
push
push
sbb
jnp
cmpb
cmp
sbb
das
test
inc
jle
scas
xchg
sub
jnp
and
outsl
mov
fstpl
jp
mov
add
mov
sub
xchg
or
mov
inc
cmc
popf
or
sub
loopne
cltd
mov
mov
pushf
cmp
cmpl
cmp
xchg
inc
orl
pop
test
and
and
popa
shl
or
jecxz
xchg
xchg
sub
in
mov
inc
sarl
dec
xchg
sub
movsb
push
xchg
and
jecxz
or
xchg
je
mov
addr16
cmp
ret
add
addl
pop
subl
mov
hlt
inc
lcall
pop
push
cmpsb
mov
scas
je
das
sub
mov
inc
loop
jecxz
insl
sbb
rcrl
loop
call
or
push
pop
bound
sbb
loop
jecxz
pop
sub
sti
xchg
xchg
data16
and
push
mov
mov
dec
xor
stos
dec
pop
mov
mov
sub
movsl
xlat
and
mov
push
mov
arpl
xor
jle
mov
xchg
in
fsubrs
push
shl
iret
adc
cmp
add
aas
bound
sub
add
lea
xor
mov
gs
es
inc
repz
test
js
out
cli
ds
push
mov
lods
xchg
push
jo
mov
sbb
daa
add
jnp
negb
dec
outsl
jmp
arpl
and
xchg
push
outsb
lds
hlt
push
mov
aaa
xchg
stos
filds
sbbb
dec
push
pop
lea
call
in
inc
push
pop
jno
cli
pop
or
daa
ljmp
cmp
jns
lds
inc
cmp
imul
outsl
jno
ret
push
mov
cmp
outsb
dec
fwait
and
adc
out
or
test
je
inc
fwait
mov
andb
mov
cmp
xchg
inc
mov
aam
sub
cs
clc
popf
adc
subb
mov
mov
cs
cmpl
xchg
push
sahf
mov
movsl
adc
int
std
jne
data16
das
pop
dec
iret
fwait
scas
pop
stos
xchg
outsb
lock
data16
adc
aas
xor
lods
dec
sub
adc
ds
push
dec
insl
mov
js
or
push
mov
lds
push
adc
xchg
jle
mov
dec
push
incl
cmpsb
mov
sbb
cmp
int
push
fsubrl
in
fistps
jp
jbe
dec
outsl
dec
xchg
shll
mov
fildll
xor
inc
mov
push
lods
pusha
mov
or
adcl
rcrl
fldz
mov
sbb
mov
xchg
mov
outsb
or
insb
inc
outsb
pushf
xchg
inc
and
ret
in
pop
testw
icebp
mov
pop
and
aaa
aam
loope
fnstsw
push
sub
inc
mov
push
aas
icebp
mov
leave
push
imulb
inc
icebp
leave
xchg
adc
pop
pop
or
or
data16
loop
aad
jae
cmc
imulb
je
mov
fwait
mov
testb
aaa
add
pop
mov
push
xor
and
pop
xchg
data16
imul
sub
sar
ret
clc
ss
and
repz
xchg
cs
mov
pop
xchg
aas
adc
in
es
stc
insb
xchg
outsb
clc
loopne
xchg
insl
mov
hlt
test
add
and
fwait
into
out
add
jns
inc
outsl
xchg
mov
addl
cmpsb
jl
sbb
jmp
add
int
shr
jbe
daa
rol
jp
xlat
xor
lock
mov
out
repnz
and
xchg
outsb
outsl
sub
jl
call
jecxz
or
jg
in
sbb
ret
add
sub
test
xchg
mov
dec
add
pop
pop
rcr
daa
sub
or
adc
mov
add
ret
jg
inc
xchg
bound
push
sub
mov
xor
lods
leave
and
pop
push
gs
aas
je
sub
std
scas
push
cli
push
cmp
push
lcall
mov
pop
push
iret
dec
outsb
in
arpl
mov
or
mov
cmp
out
das
rorb
add
dec
sub
or
pop
push
mov
push
add
mov
jae
mov
scas
dec
lcall
xchg
jl
jecxz
lds
jmp
mov
jg
nop
lock
sbb
cltd
xor
mov
push
and
icebp
jae
hlt
sbb
insl
push
push
stos
cld
lahf
imul
xor
xor
pop
cmpl
inc
xor
dec
fcmovnb
test
fimuls
or
std
mull
xor
jno
xchg
insb
push
mov
call
adcl
femms
into
sbb
xor
fbstp
into
testl
testb
sqrtps
out
pop
sub
push
push
idiv
fldcw
mov
popf
inc
fisubrl
or
incl
outsb
add
pop
or
xchg
mov
into
repz
jp
in
adc
lcall
pop
leave
call
adc
les
movsb
repnz
sub
popa
sbb
and
out
mov
cmp
pushf
je
fs
mov
rolb
or
in
scas
inc
mov
das
scas
popf
in
mov
lods
xchg
pop
or
mov
leave
int
pop
pop
sahf
test
nop
movsl
mov
test
xlat
adc
sahf
mov
lds
sahf
inc
lcall
lret
mov
mov
rcr
xor
pop
jno
and
rorl
adc
push
sub
loop
outsb
dec
std
push
or
out
mov
pusha
cli
cli
fidivl
gs
jecxz
dec
mov
mov
mov
outsl
std
jecxz
in
mov
rorl
xor
rolb
rol
fwait
loop
inc
cmc
lock
jp
out
scas
jbe
test
rclb
xor
xchg
pop
adc
rcll
fadds
lret
ja
sahf
lods
das
pop
sbb
out
or
xchg
out
mov
and
lods
stos
fsubr
aaa
jnp
jne
repz
or
loop
inc
fisubs
push
mov
sub
cs
inc
dec
pop
rcr
pop
jbe
loope
lret
loop
sub
nop
add
cmp
adc
and
nop
ljmp
mov
cvtpi2ps
lock
mov
push
shl
fstl
cmpsb
xlat
and
xchg
lods
add
inc
jne
or
adc
or
data16
cmpb
inc
imul
out
dec
inc
ret
clc
sahf
push
xchg
jecxz
or
orb
lea
repz
xchg
mov
and
insb
jns
jge
add
push
and
cmp
mov
sahf
shl
inc
lret
inc
and
int
push
mov
jp
sub
mov
mov
mov
pop
rolb
jb
push
sbb
loope
push
filds
and
out
and
xor
nop
dec
mov
xchg
pushf
inc
or
jae
and
xor
add
shll
jno
ud1
xchg
icebp
movsl
adc
sahf
and
ja
scas
lahf
pop
rcr
cmp
ss
inc
addl
lcall
pop
mov
aad
cld
and
mov
push
mov
and
pushf
xchg
jge
mov
and
lahf
out
adc
rorl
dec
xchg
lock
out
stos
das
sarl
ret
cmp
sbb
adc
push
jle
lods
xchg
push
cmp
fcomi
push
push
roll
xchg
or
mov
into
fs
xchg
cmpsb
mov
ss
ret
fcmovbe
mov
decb
lds
xor
orps
or
add
add
push
incb
add
dec
outsb
xor
clc
mov
pop
add
fsubrp
adc
sbb
dec
iret
in
repz
loop
cmp
stos
loop
jnp
mov
cmp
shl
loope
dec
lret
js
jg
push
mov
stos
pushf
dec
fdivr
ret
lds
pop
mov
pop
gs
cmp
push
fldenv
insb
sub
fisubs
pop
push
rclb
xor
and
call
push
std
aad
cmp
loopne
arpl
jmp
and
push
and
mov
pop
fsubrl
test
lcall
lock
xor
inc
cli
mov
xor
daa
sahf
xchg
sub
xchg
mov
mov
xchg
das
lods
adc
movsl
push
xor
data16
dec
loop
dec
jle
cmpsl
adc
xchg
fwait
in
and
into
xor
popf
pushf
shll
fwait
pop
cwtl
movsb
push
mov
xor
xchg
data16
enter
inc
sub
sahf
insl
cmc
notl
adc
push
filds
adcl
mov
scas
xor
sahf
mov
pop
mov
sarb
lahf
lahf
push
jo
add
push
sbb
enter
out
in
cmp
iret
xchg
adc
cs
jno
iret
cmp
into
shl
mov
adc
dec
xor
or
or
loope
bnd
popl
cmp
sbb
andb
loopne
mov
dec
movsb
test
mov
jbe
dec
and
into
rorl
pop
js
and
add
sbb
push
adcb
or
sbb
shl
movsl
stos
xlat
dec
cmc
mov
stos
lret
ret
cmpsb
inc
jb
adc
xchg
xor
mov
mov
inc
les
int3
and
out
imul
xchg
or
lret
fmull
mov
call
call
and
push
pusha
jns
sbb
jmp
test
repnz
popf
mov
bound
cltd
mov
xlat
jno
pop
fisubs
adc
fstps
fnstcw
out
into
mov
push
mov
in
fistps
xor
iret
push
dec
and
cmp
inc
inc
out
jb
fs
push
mov
movsb
cmp
stc
stos
adc
or
mov
jge
leave
aas
or
and
idivl
mov
movb
dec
in
dec
xchg
mov
in
inc
aaa
js
jns
push
int3
bound
cwtl
or
jae
es
jnp
aam
push
addr16
jge
add
fsts
pop
enter
cltd
mov
shl
repz
and
test
mov
or
or
enter
ficoms
fwait
jmp
jp
xchg
cli
mov
ret
adc
addl
stc
scas
and
mov
ret
cmpsb
push
rcll
jmp
in
push
inc
aas
into
nop
pop
jecxz
outsb
ret
jne
jl
into
xchg
xchg
movsl
outsl
mov
cwtl
pop
in
out
lret
ds
fbstp
das
mov
lcall
lcall
xor
adc
out
mov
mov
cmpsb
scas
mov
loopne
call
insb
int
leave
push
mov
cmp
cmp
outsl
imul
movsl
jnp
faddp
into
mov
mov
enter
add
bound
daa
mov
sbb
mov
mov
in
sahf
sub
xchg
pop
pop
sbbb
sahf
imul
cmpsl
mov
test
add
fstp
andl
xor
jae
pop
lret
push
dec
in
jns
fisttps
mov
xorl
xor
jno
gs
jecxz
pop
je
mov
sub
lds
std
je
imul
pop
cmpl
scas
add
lock
js
in
sub
xor
jno
les
xor
js
ret
mov
pushf
daa
lea
lods
xchg
rclb
xor
cmp
arpl
es
mov
xor
cmpsl
sbbb
fiaddl
pop
faddp
ds
test
and
cmp
pusha
mov
test
mov
orl
cmp
mov
cmpsl
and
or
xchg
and
and
daa
movsb
out
cmp
mov
jmp
popa
sub
pop
ret
push
mov
adc
sbb
je
jnp
shll
mov
cli
add
stos
mov
insl
scas
clc
subl
mov
pusha
rcll
push
in
repnz
fimuls
leave
pop
push
rorb
dec
je
ja
pop
stos
push
mov
sub
mov
ret
sbb
lock
jmp
lcall
ds
mov
mov
std
push
sub
dec
xchg
popa
cmp
cmpsl
mov
int3
into
pop
dec
dec
pop
pop
dec
jmp
pop
idivb
and
mov
and
mov
outsb
mov
gs
lret
adc
jo
inc
or
mov
test
dec
mov
inc
cmp
inc
sub
icebp
stc
xor
lds
sub
pop
lcall
inc
jnp
scas
add
out
test
fwait
call
pusha
ljmp
cs
fnsave
sbb
or
cmpsb
adc
sub
mov
mov
cmp
jge
es
test
stos
dec
mov
mov
fildl
das
pop
in
push
insb
dec
mov
push
lcall
lea
pop
xlat
lods
mov
inc
outsb
aaa
out
pushf
call
sbb
dec
mov
jp
jo
inc
mov
movsl
and
xchg
jb
push
daa
loopne
mov
shll
popa
push
fistps
and
movsl
jp
mov
in
minps
inc
mov
sbb
jge
popa
jg
push
push
cli
fisubl
lods
and
push
add
ret
or
cmc
shll
pushf
pop
xchg
xor
push
xchg
adc
or
lret
jle
lock
repnz
mov
dec
nop
and
pop
cmp
sbb
shr
jb
stos
test
push
pop
pushf
sub
movsb
or
or
loop
icebp
mov
jg
inc
push
jb
sahf
lds
testl
test
scas
enter
out
scas
xchg
sbbl
lahf
movsb
out
arpl
insb
dec
pop
xchg
in
les
cmc
mov
imul
inc
lret
testl
and
pop
ret
mov
xlat
call
pop
sahf
outsl
cmp
xor
cmp
cmp
and
std
add
in
testl
std
sbb
push
stc
mov
xor
push
adcb
and
cmp
std
mov
out
sbb
push
scas
mov
repnz
in
mov
adc
outsb
das
shl
push
ja
mov
cli
aad
or
clc
jle
add
push
pop
std
or
xchg
dec
xor
jl
pop
push
jnp
inc
push
or
les
cltd
add
lea
add
pop
std
iret
xor
cltd
xor
fdivl
adc
sarb
fsubrs
inc
sbb
test
pushf
dec
cld
mov
js
fs
dec
jmp
es
add
or
imul
iret
xchg
pop
add
cmp
push
data16
xchg
dec
sti
scas
lcall
rol
push
sub
mov
push
jle
inc
inc
mov
pop
inc
push
rcll
mov
insl
xor
scas
cltd
mov
pop
in
aam
jmp
add
lret
in
js
ret
cltd
or
add
pop
es
jmp
mov
scas
les
lret
pushf
sbb
mov
loope
out
scas
xlat
fwait
inc
jmp
push
fisubrl
push
inc
inc
and
stos
adc
test
pop
lock
sbb
test
pop
icebp
pop
pop
fs
lds
fildl
jmp
add
cmp
push
call
jge
add
fnstsw
cs
mov
in
filds
je
repz
pop
cmp
dec
mov
das
outsl
xchg
xchg
cwtl
out
lods
jb
test
push
js
sub
fwait
cmp
sbb
in
mov
int3
and
iret
jmp
lret
push
je
cld
jge
rcr
aas
stc
enter
shll
push
and
jne
daa
sub
sbb
fst
dec
push
push
push
adc
lret
dec
and
mov
mov
sbb
fnstsw
sti
mov
stos
mov
lret
aas
pushf
inc
pusha
je
imul
mov
idiv
xchg
inc
repnz
out
push
and
inc
sub
mov
jmp
pushf
mov
and
or
xchg
mov
cld
leave
or
test
iret
mov
imul
push
out
and
mov
pop
jne
sub
cmp
pop
mov
fmul
cmpsb
roll
pop
add
ret
sub
cmp
inc
push
cltd
and
jbe
pop
test
cmp
push
stos
shlb
in
jno
xor
sbb
or
jp
xchg
adc
adc
popa
xchg
fildll
adcl
sbb
mov
mov
hlt
arpl
cs
lea
lcall
lock
aas
ret
sbb
cmp
imul
jnp
dec
mov
jmp
jp
adc
out
and
sbb
movsb
testl
jl
xor
or
xchg
int
subb
movsl
insb
fs
mov
test
add
dec
push
inc
add
and
lret
push
mov
je
pop
out
inc
jne
int3
fnstsw
jp
and
or
stc
dec
cmpsb
add
and
mov
xchg
insl
ljmp
pop
add
fidivs
mov
and
orb
dec
int3
pop
hlt
aam
pop
out
cmp
movsb
mov
ja
jg
add
add
movsb
sbb
fcoms
aaa
pop
stc
inc
shll
and
popf
call
popf
shl
lods
xchg
out
mov
test
jmp
pop
push
add
cmc
push
or
data16
dec
test
or
pop
push
pop
inc
fstpt
imul
mov
jns
sbb
in
fcomi
and
test
and
xchg
sbb
cld
das
pushf
stos
mov
mov
addr16
adc
insb
jb
xor
and
leave
jns
loope
add
movsl
imul
add
fiadds
faddp
loop
ffreep
and
mov
adc
cs
dec
add
sti
test
ja
ss
and
pop
enter
lds
sub
in
pop
into
xor
cmp
sub
je
gs
test
push
mov
add
pop
sub
lods
mov
cmp
je
adc
pop
negl
call
insb
lods
repnz
ss
mov
stos
mov
or
jno
mov
bound
xchg
mov
in
xor
add
call
or
sub
ret
xor
rorl
sbb
dec
xor
int3
scas
and
call
sub
repnz
inc
sbb
pop
push
lock
push
mov
mov
dec
cld
xor
push
out
xchg
fdivs
add
push
inc
fistpll
sahf
sub
aas
daa
das
mov
mov
pushw
push
cli
dec
push
xchg
rolb
in
add
add
sarl
scas
rcr
or
cwtl
ss
xor
cmp
loope
gs
or
jmp
push
sub
call
nop
cmp
fs
pop
add
push
xchg
mov
js
jle
daa
repz
pushf
lods
cmp
mov
hlt
jnp
dec
xchg
mov
dec
sbb
std
or
mov
pop
push
pop
adc
lahf
cmpsb
cmp
lods
aaa
ror
popf
sti
ja
loope
xchg
and
push
sub
push
dec
and
test
jecxz
movsl
push
jg
adc
insb
iret
dec
dec
mov
add
mov
iret
push
xchg
lea
bound
aad
push
xor
pop
mov
mov
push
icebp
xor
insl
dec
pusha
cli
fadd
imul
xchg
cmp
in
add
les
mov
in
ret
repz
daa
mov
sub
inc
sub
cmc
shll
fldcw
or
push
mov
xor
andb
fndisi(8087
jecxz
stos
xlat
pop
jnp
or
mov
pop
stos
xchg
and
sub
stos
movl
mov
jbe
sbb
mov
ficomps
mov
push
push
in
push
mov
push
icebp
add
fnstsw
mov
pop
cvtpd2dq
cwtl
rcll
xor
inc
arpl
mov
aam
outsl
out
mov
push
and
in
out
paddusw
xchg
mov
jecxz
sbb
sbb
pop
mov
aas
movsl
mov
rcrb
mov
sbb
inc
adc
sub
pop
xlat
sbb
popa
fsubrp
xor
les
ret
inc
in
mov
xlat
mov
shll
mov
push
push
mov
adc
or
inc
xchg
inc
fsubrs
mov
mov
sub
les
jnp
lods
test
xchg
lahf
xchg
pop
push
lock
gs
push
sub
push
mov
add
or
add
pop
mov
dec
inc
not
mov
fwait
sbb
jne
scas
in
arpl
shl
loopne
pop
insl
int
sti
stos
daa
push
mov
sub
in
and
insl
xor
pop
mov
jnp
pusha
jns
pop
movsl
xchg
sbb
std
mov
jmp
int3
out
add
bound
pop
jnp
xor
das
sub
jbe
addr16
shll
mov
das
fs
repz
roll
arpl
push
inc
mov
jne
push
sbb
sub
xchg
cmc
fs
ret
mov
popf
mov
loop
in
cmc
or
je
iret
push
dec
call
stos
push
stos
mov
pop
jecxz
mov
out
inc
mov
out
test
xchg
cmpsw
mul
xor
pop
scas
test
iret
shl
cs
dec
inc
ss
movsl
sbb
lds
pop
mov
into
push
or
andl
dec
push
std
call
ds
ljmp
mov
sarl
dec
and
je
sahf
fdivs
in
inc
adc
cltd
decb
fcmovne
into
jle
cmp
mov
int3
xchg
adc
jl
jo
jge
sub
les
stos
stos
mov
xchg
cld
mov
xor
sub
adc
das
pop
xlat
xor
shll
dec
jge
push
and
mov
and
in
cmc
test
lock
mov
clc
or
shll
jl
cmc
cli
insb
das
cmp
xchg
push
jl
outsb
sahf
pop
nop
pusha
arpl
adc
pop
lods
mov
xchg
inc
cmp
out
xchg
cli
or
hlt
insb
shlb
test
fwait
sbb
mov
int
cs
jmp
stos
or
sbb
lcall
or
push
add
mov
ficompl
xor
mov
inc
mov
mov
mov
out
int3
stos
rorl
lahf
call
hlt
in
roll
mov
fs
mov
imul
dec
mov
push
dec
pusha
xchg
xor
cmp
movsb
xor
ja
push
xchg
cmp
mov
jmp
sbb
dec
push
pop
jg
ficoms
xlat
mov
inc
jmp
jg
gs
mov
pushf
inc
nop
dec
mov
pop
nop
inc
xchg
cld
or
popf
mov
loope
or
cld
push
pop
rcrl
in
addr16
rcll
jp
je
xchg
dec
pop
into
cwtl
xchg
sbb
test
rorl
add
je
mov
insb
sub
add
inc
dec
call
pop
xchg
mov
fisubrs
outsb
jl
mov
inc
xlat
leave
adc
test
arpl
addb
mov
cld
or
and
inc
push
ret
dec
mov
jmp
sbb
xlat
xchg
rol
js
mov
mov
mov
test
mov
mov
jmp
or
mov
jmp
clc
add
or
mov
imul
jnp
xchg
fistpll
fisubs
xor
inc
std
popa
pop
xor
outsb
mov
xor
movsb
ss
test
xor
std
mov
shlb
fwait
mov
pop
mulb
mov
into
rclb
or
or
dec
imul
clc
arpl
pop
and
dec
mov
jmp
jle
leave
cmp
scas
rcr
adc
pop
addr16
mov
hlt
fsubl
xchg
add
adc
movsb
mov
popf
insb
out
scas
popa
out
xchg
out
mov
popf
lods
dec
imulb
daa
dec
int3
jle
insb
mov
outsb
inc
sahf
fs
insb
jge
push
mov
out
pop
push
and
sbb
lret
cwtl
jo
add
and
cmpl
mov
popf
xor
inc
pop
sub
add
and
mov
add
mov
leave
cmc
les
xchg
mov
inc
data16
xchg
sbb
cmp
cli
out
out
out
loopne
pop
adc
add
loop
cwtl
sub
pop
in
and
sarb
mov
xchg
cmp
jns
nop
and
cmpsb
mov
xor
aam
adc
sbb
aas
outsl
adc
shr
test
int3
test
ficompl
and
repz
ficomps
call
notl
mul
mov
repz
aaa
sbb
sub
movsl
movsb
pop
push
pop
mov
js
test
loop
cmp
or
mov
pop
pop
insl
xor
orb
iret
mov
sbb
mov
ret
push
push
shlb
mov
stos
cltd
xor
sahf
imul
pop
xchg
mov
mov
addr16
cmpsb
mov
iret
adc
clc
jb
mov
pop
and
mov
subb
enter
aam
cmp
jge
push
nop
or
mov
int3
repnz
in
or
icebp
mov
pushf
rol
push
hlt
add
stos
sbb
mov
pop
lods
xchg
lret
lret
mov
inc
inc
rorb
mov
push
sub
mov
out
lods
insb
aas
ljmp
adc
lret
dec
mov
inc
or
bound
repz
jge
fs
mov
jae
loop
pop
data16
aad
and
aaa
mov
bound
pop
push
mov
mov
push
jecxz
mull
xchg
mov
ljmp
mov
cltd
shll
int
and
adc
es
insl
sarl
cld
add
nop
mov
push
aad
jmp
mov
mov
jnp
jae
pop
sbb
fnstenv
mov
pop
cwtl
mov
xchg
and
push
mov
in
inc
mov
imul
jmp
xchg
mov
inc
mov
sbb
out
push
xchg
icebp
out
clc
fisubrl
cmp
mov
cmp
test
xchg
jb
sahf
or
adc
int3
cld
in
shll
repnz
out
inc
orl
and
out
and
push
adc
lods
mov
mov
ficoml
psubusw
hlt
pop
adc
mov
into
inc
pop
xor
jl
fcomps
sub
or
sub
mov
js
pop
dec
cvttps2pi
insb
stos
imul
rclb
les
es
ljmp
repnz
xor
ss
sub
out
mov
cli
fsubs
divl
test
lret
jge
test
in
ret
cmpsl
sub
fcoms
leave
popa
add
push
cmp
scas
ja
stos
adc
pop
pop
xor
ret
mov
sub
dec
mov
aaa
mov
stc
sub
into
jmp
xchg
sahf
cmp
addr16
push
adc
out
call
loopne
inc
mov
rcrb
or
test
ret
sahf
rcrl
aad
inc
mov
sbb
and
xor
sbb
inc
and
pop
inc
mov
enter
mov
icebp
out
xchg
scas
jg
push
and
xchg
push
jle
fisubrl
stc
or
sbb
subb
and
movsl
add
jmp
dec
inc
addr16
shr
sbb
mov
ret
mov
dec
subl
into
add
lods
jmp
and
scas
jb
divb
sarl
mov
fnop
jl
and
mov
jmp
imulb
ret
sbb
and
cltd
test
or
mov
movsl
add
add
mov
mov
shrb
push
frstor
xchg
jne
add
mov
leave
out
sarb
int
lret
pop
scas
sub
movsb
and
fildll
mov
aas
dec
xchg
ds
pop
mov
xchg
call
js
mov
jno
out
loope
imul
push
shll
outsb
mov
xchg
xor
xchg
push
shlb
sbb
loope
mov
inc
iret
xor
xchg
mov
mov
call
rcrb
popf
cmp
xchg
inc
push
mov
mov
cmp
test
pop
test
adc
jae
pop
add
mov
push
or
ja
cmc
fs
cmp
lret
inc
sub
xor
ljmp
out
jge
mov
sbb
xchg
mov
adc
dec
out
add
ds
mov
popa
mov
jbe
in
rcll
and
adc
fistpl
and
mov
push
in
jp
lret
cmpsl
push
jae
imul
sbb
aam
andb
mov
xchg
sbb
cmp
sub
rorb
gs
sbb
or
jecxz
or
sbb
dec
add
arpl
push
ljmp
or
and
xchg
pushf
inc
xor
sbb
movsb
mov
inc
xor
pop
push
out
xor
aas
iret
xchg
jne
inc
out
clc
jge
adc
mov
int
int
cmp
test
imul
movsl
lds
imul
mov
repnz
js
cmp
pusha
loope
mov
cmp
into
outsl
xchg
hlt
out
lahf
dec
pop
test
cltd
in
dec
dec
xor
nopl
jge
push
xchg
out
mov
loope
push
gs
into
mov
sub
xchg
fmul
add
fucomp
pop
xor
movsb
lods
mov
imul
push
add
jb
orb
add
fldenv
stos
in
stc
xchg
pop
sbb
jnp
lret
fbstp
adc
shr
les
xor
mov
lret
adc
xchg
enter
cmovge
fdivrs
pushf
cli
push
inc
xor
cmp
mov
pop
clc
mull
inc
outsb
sbb
pop
mov
mov
mov
or
mov
into
sub
sub
int3
push
imul
fisubl
dec
mov
clc
sbb
dec
xor
into
xchg
or
fxch
in
or
mov
mov
push
push
mull
jg
pop
jnp
rcr
cmp
incl
mov
dec
sbb
inc
dec
imul
mov
adc
adc
fcomp
push
in
lret
repnz
jno
les
push
mov
out
adcl
test
pop
add
push
push
jp
jl
ret
jns
mov
jno
in
mov
jmp
out
incb
dec
scas
repnz
inc
lods
adc
mov
loopne
pop
es
and
ds
push
daa
adc
ja
inc
xchg
push
mov
mov
in
add
jge
jo
sub
mov
dec
lea
pop
cmpsl
decl
hlt
cwtl
xor
repnz
jle
xchg
add
push
ret
mov
dec
cmp
cmp
jae
add
jno
lea
testb
scas
sti
sarb
adc
push
mov
mov
jp
cmp
jl
ja
mov
aas
cltd
arpl
push
fbld
mov
adcb
mov
filds
mov
jbe
js
or
inc
dec
xchg
loop
cmpb
mov
jmp
sar
xor
xchg
shrl
shlb
imul
push
aam
adc
inc
mov
dec
sub
mov
jno
and
mov
mov
out
sub
sahf
stc
sti
int3
jbe
ss
je
fiaddl
inc
sub
hlt
pop
xchg
addr16
cmp
pusha
inc
cwtl
mov
insl
xor
pop
sbb
adc
popa
pop
test
in
push
pop
shl
imulb
aaa
mov
aas
add
cmp
jmp
cli
mov
add
jne
into
pop
sub
jnp
and
sub
push
sub
test
sub
lds
neg
sub
inc
scas
jae
lret
loope
int
sbb
push
push
mov
test
dec
xchg
outsl
jbe
es
sahf
outsb
fwait
sbb
or
jno
push
mov
into
lods
jmp
addr16
xchg
incl
mov
pop
or
addr16
sbb
mov
or
out
mov
mov
xor
mov
int3
inc
shll
jb
and
inc
clc
test
jns
sub
xchg
inc
rclb
scas
add
mov
lcall
cmp
dec
fwait
jno
sahf
adc
xchg
dec
or
pop
adc
out
cs
outsb
gs
add
xchg
lea
stos
sub
out
rcrl
mov
add
xor
push
inc
dec
mov
jl
sub
cli
add
psubusb
cli
pop
es
insb
sub
shl
push
sbb
sbb
decb
arpl
lds
dec
inc
and
movsl
lcall
insl
rcll
int
or
pop
mov
pop
loop
loopne
sub
sbb
call
or
mov
jle
inc
sbb
and
sub
add
loope
js
jae
cmc
cs
jb
cmp
fisubs
push
adc
into
imul
push
test
xor
cmp
push
out
and
pop
add
sub
jbe
das
mov
enter
mov
add
jae
mov
stos
lcall
aam
push
xchg
cmp
aas
hlt
nop
jnp
out
push
xor
loope
hlt
ret
fiadds
jl
jl
scas
test
lods
jo
pop
inc
in
popa
movsl
stos
cmc
add
mov
pop
pop
cltd
es
sbb
mov
xchg
mov
cmpsl
push
pusha
sub
cmp
outsb
loopne
mov
ljmp
cmpsl
push
push
pop
pop
xor
cmp
daa
pop
incl
mov
or
adc
cli
xchg
inc
loopne
jo
sbb
cmp
cmpsl
push
jbe
in
test
xchg
or
cli
push
mov
pop
pop
lcall
sub
insb
and
ror
mov
cmp
xchg
adc
xorb
and
push
lods
add
xchg
mov
adcb
adc
xchg
mov
clc
sbb
gs
and
cwtl
xchg
cmp
lds
fmull
mov
movsl
int3
mov
ljmp
ja
jmp
fsub
jns
xor
fcompl
push
cmpsl
jns
dec
in
scas
das
sub
shrl
or
xchg
mov
inc
cli
pushf
and
leave
dec
mov
cmc
cwtl
dec
mov
mov
fnstenv
rorb
clc
fidivrl
xchg
ja
lret
hlt
ror
or
mov
jnp
add
jno
fistl
and
add
push
scas
ja
xor
in
cwtl
cmp
popf
test
mov
mov
xchg
jbe
xchg
jne
repz
pop
inc
sahf
loop
push
aaa
gs
movsl
enter
mov
push
pop
push
pop
or
pop
mov
pop
cmpsb
push
xchg
jge
lahf
and
mov
sub
call
jle
or
mov
mov
xor
or
dec
popl
sbb
insb
mov
xchg
mull
mov
ds
cmc
fnsave
mov
xor
jle
iret
stos
clc
mov
ljmp
or
or
mov
cmp
roll
rcr
call
aad
mov
adc
xorl
dec
mov
popf
mov
fists
stc
jb
push
add
mov
jmp
fs
sbb
popf
sbb
mov
repnz
xor
xchg
lret
adc
cmp
sub
rclb
gs
dec
or
in
stc
decb
jno
cmp
add
jl
xchg
and
inc
or
add
fs
mov
pop
je
mov
add
inc
iret
rolb
or
dec
sub
movsb
mov
insb
pop
aaa
mov
push
lcall
iret
jnp
dec
add
mov
aaa
sti
cmp
data16
pusha
loope
adc
sbb
xor
nop
xlat
push
mov
mov
push
daa
xor
clc
in
jns
popf
leave
mov
es
cmpsl
adc
repz
xchg
dec
repz
mov
or
mov
inc
jns
xor
cld
push
roll
arpl
and
mov
int3
stos
add
add
adc
and
or
xchg
test
and
aaa
mov
shlb
dec
orb
cmp
xchg
test
sbb
pop
fdivrl
mov
test
stos
lods
ljmp
outsb
mov
addr16
add
cld
sbb
pop
out
lock
push
mov
cs
mov
je
or
fdivl
cmp
subl
aaa
and
std
mov
jno
popa
enter
cld
pop
jbe
mov
outsb
test
insl
imulb
jg
fwait
ljmp
sahf
fs
and
or
dec
addb
push
call
lret
sbb
push
negl
or
scas
int3
mov
mov
push
mov
or
les
or
push
daa
es
test
adc
xchg
jge
adc
dec
lcall
push
dec
sarb
push
add
mov
imull
jnp
iret
mov
sub
push
lea
mov
jae
nop
ficomps
inc
sbb
outsb
pop
int
push
sbb
cmp
mov
pop
mov
mov
out
in
inc
jae
popf
jp
ret
clc
pop
push
lret
int
ja
sbb
push
xchg
data16
mov
sbbb
add
sti
lods
lea
into
xor
sub
push
push
mov
in
scas
popa
outsb
xchg
lods
pop
iret
mov
in
ljmp
mov
jl
jae
jno
bound
js
loopne
dec
pop
and
cmp
notl
mov
adc
and
add
pop
out
jecxz
int3
fwait
clc
push
test
daa
or
cmp
rclb
mov
add
push
in
cltd
mov
sbb
enter
in
fisubrs
lods
outsb
sbbb
fistl
mov
scas
jno
jl
arpl
adc
lock
or
jp
fisttps
push
jo
insb
jo
xchg
sub
jno
jecxz
xchg
lret
lock
pushf
std
push
mov
insb
je
push
xchg
cmp
mov
fwait
shll
scas
ret
addl
cmpsb
mov
push
int
roll
out
adc
xchg
mov
js
test
mov
nop
mul
lods
pushf
mov
fistpl
cmp
mov
or
add
fimull
mov
aaa
jae
insb
je
xchg
and
mov
arpl
push
cld
dec
push
fcmovbe
mov
xor
mov
xchg
mov
or
xor
or
adcb
pop
leave
in
cmp
imul
dec
loopne
sti
pusha
cs
lcall
mov
rolb
adc
bnd
sub
dec
fcmovnu
adc
push
pop
mov
sbb
aam
jmp
xor
pusha
insl
push
leave
and
je
cmpsl
aas
inc
fcmovne
push
mov
imulb
je
lahf
fadd
add
pop
jge
out
aaa
lods
xchg
ja
or
mov
repz
in
call
hlt
dec
shr
enter
clc
cmp
in
loope
loop
stos
and
in
rorb
and
add
iret
ljmp
sbb
jne
cmpsl
repz
xchg
ds
rcr
ja
add
hlt
push
das
sbb
sub
mov
add
cmp
mov
sbb
imul
and
mov
sbb
mov
sbb
sub
bound
dec
lods
cmpsl
push
jne
fsubp
popf
xor
lret
jne
lods
cmp
scas
cmp
and
lret
adc
xor
or
sbb
push
sbb
fstpt
enter
les
add
int3
pop
dec
pop
testl
jno
arpl
xor
jns
in
mov
call
push
lret
arpl
fstpl
hlt
cmp
aad
xchg
repz
push
push
rorl
ds
imul
lcall
cmp
ljmp
cs
popf
dec
xchg
sbb
cmp
lret
fwait
insl
pusha
pop
cmp
xchg
hlt
xlat
mov
inc
fcomp
les
lods
or
xor
rorb
mov
nop
out
movsb
movsw
mov
and
dec
or
xchg
and
sub
inc
sbb
clc
stos
mov
jb
mov
sbb
out
cld
mov
mov
sub
mov
adc
repnz
push
cmp
push
inc
lret
in
scas
and
clc
rcl
sub
mov
jmp
sar
mov
mov
and
ret
fisubl
mov
mov
sub
inc
cmp
loop
xor
mov
xor
push
pop
add
pop
mov
cli
ljmp
cwtl
dec
adc
aam
das
cmp
mov
sub
das
mov
mov
inc
aam
push
jl
cltd
inc
cli
and
pop
mov
scas
jecxz
mov
add
push
pop
rcll
inc
sub
xor
fs
imull
stos
iret
cmp
push
sbb
jecxz
pop
add
mov
mov
mov
les
sbb
rolb
jmp
pop
add
push
hlt
ljmp
pop
inc
popa
mov
and
sbb
adc
jae
andpd
lahf
sarl
adc
jnp
mov
mov
push
cld
in
cld
rcrb
xorb
cld
mov
loop
jecxz
fwait
repnz
test
pop
xor
iret
xchg
mov
sub
push
pop
outsl
inc
lahf
out
cmpsb
aam
pop
push
lret
mov
xchg
and
lahf
enter
mov
inc
mov
push
xchg
xchg
test
push
loopne
xchg
cmpsl
insl
sbb
jae
pusha
adc
pop
add
add
outsb
pushf
mov
out
out
xor
inc
push
dec
aas
imul
rcll
pop
or
fwait
cmc
or
outsb
push
lods
or
add
mov
sbb
and
insb
cmp
pop
push
cmp
cs
push
xadd
pop
test
xor
ljmp
jnp
push
stc
fidivs
out
nop
addb
fwait
addr16
into
mov
ss
mov
jns
xchg
pop
push
lock
loopne
push
sahf
sbb
xor
lret
orb
mov
aaa
into
scas
mov
inc
sub
push
adc
mov
push
or
ja
pushf
jnp
negb
xchg
mov
sbb
fcom
popa
dec
scas
push
lock
xchg
pop
stos
shr
mov
or
xor
loop
addr16
mov
mov
les
xor
repnz
pop
mov
lcall
sti
rcll
cld
mov
je
mov
test
es
sbb
jo
stos
in
fcmovnu
nop
jl
xchg
jnp
ror
imul
pop
and
jmp
rclb
push
popf
and
loope
call
cmc
sub
dec
mov
add
mov
jb
popf
jbe
push
fsubrs
insb
fildll
add
inc
mov
mov
mov
adc
jb
sbb
pop
jle
mov
add
pop
xor
or
xchg
jo
push
fs
jb
daa
xchg
notl
enter
mov
fwait
push
mov
mov
dec
fiadds
insl
adc
jge
out
xor
mov
out
movsl
test
jle
cwtl
mov
sti
pop
push
out
data16
in
or
in
pop
cld
outsb
ret
mov
scas
fadd
outsb
sub
mov
lods
adc
imul
outsb
imul
hlt
add
scas
push
sahf
jae
jl
repz
mov
popf
mov
int
lcall
pop
pop
mov
adc
cmpsb
and
mov
push
ret
mov
lods
xchg
repnz
aad
mov
sbb
or
xor
xchg
pop
cltd
stc
sti
xor
jae
pop
ffree
aam
mov
ja
sbb
xor
int
test
sub
jno
testl
xor
hlt
mov
repz
loop
pusha
cmp
std
mov
imul
aas
mov
jmp
mov
push
sbb
cltd
ds
xor
mov
xor
andb
push
shr
sarl
addr16
pop
jne
xchg
adcl
push
inc
ds
adc
xor
icebp
sbb
lock
les
mov
sub
cmc
cmp
ret
punpckldq
pop
mov
jg
std
dec
ljmp
pop
jge
xor
xchg
dec
jp
nop
push
cld
pop
mov
fiadds
imul
loopne
fmul
inc
mov
ds
adc
push
sahf
jne
testb
in
imul
sub
cwtl
dec
xchg
mov
adc
and
das
cmp
lds
je
mov
movsl
push
out
lret
cmp
cli
cltd
lret
daa
lock
mov
mov
mov
out
dec
pusha
mov
imul
lahf
lahf
cli
lea
cld
push
in
dec
and
rolb
xor
leave
mov
aad
sti
jns
and
jecxz
xor
sbb
lock
push
movsl
lahf
mov
mov
incl
sub
or
cmp
sub
and
dec
mov
mov
movsb
scas
and
out
insb
mov
xor
shrb
fistl
pop
insb
ficoms
mov
mov
xchg
jp
mov
inc
fimull
sub
mov
fdivs
mov
rorl
dec
das
dec
xchg
mov
xchg
mov
outsb
ficompl
pop
sub
es
stos
xchg
scas
jg
pusha
or
lods
addr16
xor
inc
test
je
add
int
or
mov
gs
pop
dec
cmp
mov
mov
div
or
mov
xor
frstor
adc
int3
pop
mov
mov
pop
stos
pop
mov
add
adc
enter
inc
shlb
and
cmp
inc
hlt
insl
sbb
cltd
mov
pop
pop
ja
aam
and
cmc
dec
nop
clc
sub
outsb
cli
push
add
sbb
sub
cmp
addr16
ficompl
pop
int
sbb
int
dec
jle
mov
jecxz
rolw
enter
fnstsw
nop
bswap
bound
lds
xor
jbe
inc
push
inc
test
push
pop
inc
mov
into
xchg
xor
pop
nop
sub
insb
xor
loop
cmp
int3
sti
pop
adc
jg
mov
push
cmp
repz
mov
movsl
pusha
jmp
imul
icebp
scas
sti
dec
inc
ss
sbbl
push
fmul
aam
cwtl
montmul
cmpsb
pop
lods
pop
mov
add
and
jns
xor
dec
loop
mov
out
jg
shrb
fdivrp
adc
mov
mov
test
out
mov
add
testb
in
in
loopne
jge
jmp
push
and
adc
lock
mov
lods
dec
jg
mov
stc
mov
add
fcomp
cs
or
mov
mov
scas
push
push
sahf
xor
inc
pop
cmc
out
sysexit
cmc
leave
in
mov
daa
xchg
in
inc
icebp
nop
ja
push
call
or
and
xchg
jb
sbb
or
sbb
test
adc
loope
sbb
bound
jp
sub
pop
sub
add
mov
or
dec
mov
cmpsb
and
scas
movsb
add
pop
push
xor
pop
jle
lret
lds
sbb
mov
shlb
cmp
clc
jb
sarl
movsb
test
jno
cli
in
cmp
call
jp
dec
dec
fwait
xchg
cmpl
test
jnp
sbb
leave
ja
in
es
pop
push
jns
mov
rclb
or
imul
mov
aas
out
enter
rclb
iret
jl
scas
pop
push
fisttpl
and
push
and
imul
nop
ljmp
rorl
sub
test
popa
push
jb
call
pop
xchg
push
sub
repz
ud2
test
shll
sahf
ret
mov
lock
les
lcall
fildl
cmpsl
mov
loop
add
add
and
push
push
faddl
and
cwtl
xor
and
add
test
push
lods
cmpsb
ja
ret
mov
stos
mov
std
lds
cs
jo
clc
ficomps
in
xchg
jp
push
xor
dec
dec
iret
sub
jno
cmp
push
fcomps
hlt
xchg
lret
lret
std
mov
pushf
or
pop
and
leave
int3
es
push
vmovlpd
sbb
mov
iret
dec
lret
push
scas
add
test
add
pop
jne
popf
les
js
rcrl
xor
sahf
mov
jl
pop
jg
les
dec
sbb
or
fldl
sub
rep
fs
sub
ljmp
push
hlt
daa
mov
rorb
es
pushf
add
repz
lahf
sti
movsb
push
xchg
pop
fcoms
aaa
adc
push
test
popa
arpl
fisubrs
lock
or
jnp
adc
es
call
xchg
fistpl
popa
fsubrp
loope
xchg
aaa
jne
lock
rcr
mov
call
mov
bnd
push
jne
cmpsl
and
lds
jmp
cmp
nop
dec
push
cmp
mov
fildl
inc
test
sbb
pop
mov
jmp
sub
cmp
imul
pop
dec
xorb
mov
sub
mov
outsl
test
and
mov
push
add
and
sbb
mov
dec
loop
mov
test
in
xor
icebp
daa
mov
insb
hlt
sub
stos
push
and
pop
divl
pop
add
add
and
cwtl
fstp
sbb
cmp
fcmovbe
lret
push
jge
push
push
test
mul
loope
xchg
mul
scas
imul
cmpsb
xchg
mov
cmpl
stc
icebp
es
fwait
cmp
push
push
and
int
mov
dec
lcall
mov
fildl
adcb
mov
neg
or
loop
arpl
pop
mov
mov
mov
jns
sbb
repz
jne
add
cmp
or
and
xchg
ret
fisubs
insl
das
sub
rorl
pop
mov
pop
out
jmp
xchg
mov
cltd
sbb
scas
pop
jnp
jns
lret
imul
fcomps
jne
push
bound
adc
jmp
mov
inc
icebp
mov
dec
pop
and
scas
sbb
mov
xlat
mov
pop
add
jbe
ret
add
sahf
jp
outsl
push
push
int3
ljmp
jb
and
imul
mov
popa
cmc
pop
mov
xchg
sbb
cmpsb
cmc
sub
mov
xor
sub
xlat
iret
dec
repnz
sbb
cmp
popf
pushf
daa
leave
dec
jp
cmc
inc
sbb
sub
in
jle
movsl
inc
daa
jl
push
or
sbb
add
nop
xor
adc
lcall
inc
add
ja
inc
pop
popf
daa
mov
mov
lcall
lds
sub
into
js
insb
cmp
pushf
dec
lret
lock
sub
dec
pop
insl
add
and
ret
cmp
xchg
dec
push
imul
push
add
into
dec
mov
stc
ja
mov
int3
and
or
sti
in
add
mov
mov
sub
outsl
test
cmpsb
push
xor
cmp
push
iret
sbb
scas
lods
nop
sub
jle
push
mov
ss
pop
sti
push
push
dec
hlt
cmp
dec
cli
xor
push
pop
and
arpl
nop
cwtl
sahf
gs
outsb
xchg
sub
addr16
arpl
push
push
xor
ljmp
outsl
lret
sbbb
imul
es
fcos
adc
jnp
adc
outsl
cmp
divl
loope
adc
shr
or
adc
fiaddl
iret
and
mov
xchg
clc
sub
cmc
xor
mov
mov
cmpsl
or
mov
sbb
movsl
lock
jl
push
adc
je
sub
xor
jne
test
pop
je
and
dec
pop
cmp
push
adc
hlt
leave
fiadds
test
xor
lea
subl
lock
gs
stos
scas
or
das
das
cli
pop
cmc
add
jb
mov
repz
inc
popl
push
jno
add
in
cltd
cmp
jne
aam
lcall
pop
push
imul
ja
push
repnz
pop
insl
loop
leave
xchg
dec
lret
cmp
push
jl
sub
data16
mov
lods
fdivrp
loop
adc
push
es
xlat
sbb
push
inc
je
outsl
push
scas
push
mov
fcoms
pop
es
jno
and
sbb
xchg
mov
imul
xchg
adc
cwtl
mov
arpl
and
test
rol
jne
xor
fisttpl
pop
icebp
cmpsl
imul
jne
sub
ret
incb
jg
lcall
out
pop
inc
adc
fdivl
ret
sbb
cmp
and
jne
mov
mov
adc
hlt
imul
mov
push
in
pusha
scas
xlat
mov
dec
sub
mov
dec
fsubrl
out
pop
mov
mov
dec
sub
inc
and
clc
mov
mov
pop
movsb
out
xchg
cmpl
clc
xor
adc
and
in
dec
in
cmp
insl
clc
fwait
lret
inc
jb
shlb
or
pop
outsl
inc
addr16
jae
xchg
xlat
sub
pop
ret
pop
ljmp
adc
popa
add
insl
xor
mov
mov
into
mov
inc
jae
dec
jns
lods
sbb
jge
pop
in
inc
dec
add
push
sub
pop
insl
adc
es
mov
pop
lock
cwtl
inc
inc
and
xchg
pop
dec
mov
sub
push
outsb
sub
jp
jne
xchg
mov
pop
sub
gs
sub
push
insb
jnp
ds
lock
cmp
arpl
test
mov
add
xlat
adc
inc
test
das
imul
sbb
and
jne
xchg
dec
jno
das
stos
jg
ja
mov
jb
pop
in
dec
imul
pop
xchg
xchg
adc
stc
push
jmp
adc
pop
jmp
dec
daa
sub
dec
dec
divl
mov
dec
jo
imul
out
bndldx
fs
dec
ret
shrb
sahf
push
lds
push
fsubr
insb
xchg
cmp
roll
out
ljmp
into
dec
cmp
xor
mov
sar
adc
jmp
xor
loope
mov
mov
mov
xor
sbb
mov
add
fstps
xor
inc
add
xchg
aad
mov
dec
jmp
or
imul
cwtl
fistpll
add
mov
lds
push
jo
adc
sub
xchg
mov
sub
fdivs
pop
clc
pop
cltd
push
loop
into
and
xchg
adc
inc
shlb
xchg
adc
orl
bound
hlt
xchg
pusha
cmp
sub
pop
mov
jp
and
pop
fimuls
mov
adc
es
sub
adc
push
je
push
inc
sub
ss
ljmp
cmp
loop
xor
cmp
mov
adc
sbb
and
xor
addb
sub
push
mov
push
inc
ret
push
sbb
mov
inc
mov
leave
push
mulb
add
inc
jae
sbb
je
hlt
popf
dec
aam
adc
cmpsb
or
js
arpl
mov
mov
sbb
dec
popa
push
jecxz
or
int
test
xor
popa
out
into
mov
sbb
xor
aad
push
jg
pop
sub
jns
mov
jmp
sub
call
fwait
and
inc
push
aaa
cmpsb
rcl
push
insl
inc
dec
pop
jge
inc
fwait
data16
mov
or
jge
push
pusha
mov
cmp
mov
loope
or
push
push
punpckhdq
inc
or
pop
mov
mul
cs
hlt
add
sbb
or
adcb
repz
sub
divb
inc
pop
ror
push
cmp
enter
cld
cmp
imul
les
js
rorl
dec
mov
pop
mov
out
sbb
stc
sub
in
shlb
movsb
das
daa
jle
jnp
push
shl
mov
sahf
lods
push
inc
mov
loop
and
test
or
mov
jge,pt
cmp
xor
cmc
push
inc
outsb
insl
int
insb
or
jle
ljmp
adc
roll
rolb
aam
movsb
push
jne
mov
mov
jecxz
xchg
and
or
addr16
outsl
hlt
scas
inc
jge
cmp
mov
sbb
push
dec
aaa
or
jae
in
ret
cmp
xor
cmpsl
ret
repz
add
jecxz
dec
and
gs
in
mov
adc
push
icebp
out
popa
mov
dec
cld
mov
inc
popa
xorl
aas
dec
das
fsqrt
pop
lahf
mov
imul
cmp
out
inc
add
loope
push
push
data16
adc
sahf
fnstenv
lret
pop
dec
imul
dec
mov
add
fisttpl
fwait
lahf
jae
jno
sub
push
movsl
stos
cmp
pop
insl
xchg
sbb
into
mov
faddl
out
test
pop
ds
adc
sub
push
addr16
jg
das
iret
push
pop
mov
jns
xchg
pop
sub
inc
mov
sar
xchg
xor
inc
mov
shlb
jno
out
rcl
sub
xor
arpl
pop
xchg
add
or
icebp
push
popl
sbb
and
xchg
dec
ljmp
push
scas
ds
ss
fiadds
nop
inc
push
mov
idivb
bound
push
popa
inc
or
mov
xor
adc
add
jmp
pusha
jno
mov
jae
xor
dec
rcll
cmp
popf
test
jo
inc
xchg
mov
in
pop
fucom
scas
xchg
sbb
lods
dec
or
fbld
xchg
push
notl
cmp
call
or
cmp
adc
inc
push
mov
xor
jecxz
xchg
loope
enter
in
cmp
mull
pusha
repnz
mov
daa
or
sbb
pop
push
cmpsl
test
jbe
std
mov
adc
pusha
push
lahf
popf
test
fldcw
xor
dec
mov
testl
mov
dec
xor
add
push
aam
js
lret
jbe
movsb
dec
lods
xlat
pushf
addr16
enter
xchg
jbe
jns
push
in
cmp
sub
inc
scas
xor
fwait
test
mov
cs
mov
adc
jmp
inc
adc
popf
mov
cli
pusha
mov
mov
xchg
cltd
scas
pushf
mov
neg
ljmp
loop
mov
inc
xor
mov
in
mov
pushw
fdivr
xchg
hlt
ret
mov
adc
pop
imul
int
fstpl
cmpsl
push
xchg
jae
loope
ljmp
lret
nop
insl
les
bound
mov
sarl
mov
icebp
xor
cmpsb
jae
dec
lds
push
mull
mov
fbstp
dec
add
xchg
inc
lock
adc
and
mov
mov
sti
push
inc
inc
in
and
add
mov
mov
test
mov
or
pop
std
inc
dec
cmp
push
data16
jl
out
leave
mov
jecxz
or
out
jmp
sub
cmpsb
adc
xchg
arpl
shlb
aas
and
mull
inc
lret
out
out
cmpsl
jmp
mov
lods
push
sti
sub
testb
or
sbb
cs
mov
adc
nop
int3
inc
popf
sbb
dec
xor
pushf
repnz
mov
call
ja
cmp
test
ret
lds
dec
loope
xor
mov
pop
pusha
mov
es
std
loopne
fdivr
mov
in
push
adc
test
fwait
add
in
mov
hlt
pushf
bnd
aaa
test
jp
leave
leave
xor
cli
je
xor
pop
addr16
mov
jne
add
pop
mov
ret
mov
pop
or
leave
sqrtps
pop
dec
mov
cld
imul
sbb
add
shr
addr16
out
jne
rclb
or
xchg
in
mov
sbb
stos
mov
test
scas
pop
pop
cmp
cs
xchg
sub
arpl
cmpsb
or
fists
mov
mov
out
jbe
jge
inc
cwtl
rcrl
or
push
arpl
xor
push
xlat
rolb
mov
xor
inc
xlat
arpl
pop
cld
ds
mov
jecxz
movsb
cmp
cmc
jg
cmpsb
lods
xor
jno
jge
sbb
xor
test
cs
push
inc
stos
jmp
jns
pop
in
cmp
outsl
mov
and
out
popa
js
push
cmp
std
std
fsubs
repnz
fstl
push
push
mov
xchg
mov
xor
inc
jo
adc
pop
jbe
test
jmp
push
sub
push
pop
mov
inc
mov
aaa
cmp
cmpsb
cmp
sbb
jle
xorl
mov
inc
out
xor
and
push
test
dec
outsb
popa
addr16
push
loope
dec
aad
mov
sub
int3
pop
add
cwtl
xchg
mov
int3
push
inc
inc
mov
mov
or
xlat
xor
mov
loope
pop
mov
mov
and
xchg
outsl
sti
xor
jnp
jmp
or
jnp
hlt
xchg
adcl
dec
fmuls
mov
xor
outsb
aas
and
cs
and
inc
cmp
or
xchg
out
call
push
inc
push
add
test
jns
pop
insb
lret
inc
imul
jbe
mov
jle
add
mov
das
aad
ds
cmp
repnz
jge
or
sub
cli
dec
push
cmp
add
fwait
dec
mov
mov
sub
hlt
dec
fs
into
add
dec
push
movsb
fldl
lcall
jbe
or
mov
fimull
mov
dec
sbb
add
icebp
lret
in
jl
into
xchg
mov
mov
fwait
xacquire
inc
inc
push
adc
dec
cmp
inc
fwait
cltd
adc
in
aad
and
into
sarl
in
testl
pop
inc
inc
in
adc
fcomps
adc
mov
xor
and
jmp
lahf
and
xor
jae
jns
push
dec
or
adc
dec
or
pop
lcall
inc
push
xchg
imul
enter
repz
aaa
clc
mov
pop
rorl
cmp
mov
pushf
movsb
sub
and
cmp
cld
imulb
data16
in
jmp
movsl
stos
and
mov
jl
bswap
lds
data16
mov
mov
jbe
cmp
cmp
outsl
in
jnp
add
enter
fdivrs
or
clc
cld
add
int3
bnd
or
ret
add
lfs
or
daa
push
jae
scas
sahf
push
fimuls
sub
shl
push
add
aam
jae
or
cmp
mov
fisttps
inc
pop
cmp
mov
lret
dec
scas
mov
test
and
cltd
mov
lods
push
add
mov
aam
aaa
jns
push
inc
pop
add
push
push
dec
ficoml
adc
add
mov
mov
mov
stos
pop
lahf
mov
sub
lods
inc
cmp
or
and
jp
fsub
push
loop
pop
xchg
jb
inc
enter
je
ljmp
adc
pop
test
xchg
test
xor
dec
pop
mov
ljmp
push
andb
stos
jne
aaa
inc
mov
test
inc
data16
mov
insl
in
test
dec
sbb
push
pop
xor
negb
stos
aaa
add
mov
xor
lds
into
lcall
sbb
nop
gs
mov
push
pop
jmp
pop
push
lods
jnp
cwtl
out
lea
and
pop
adc
jb
xchg
mov
mov
xchg
arpl
mov
mov
movsb
movsl
mov
cwtl
pop
mov
xchg
push
pop
inc
sti
ds
add
xor
mov
sub
test
push
inc
adc
sbb
or
sti
addr16
cmc
aad
mov
imul
sar
test
outsl
pop
ret
jnp
xor
pop
inc
dec
cmp
fdivr
repnz
push
ja
xor
cwtl
inc
adc
mov
add
idiv
dec
lods
pop
mov
fnsave
mov
enter
scas
faddp
xchg
out
scas
cmpsl
stos
adc
aaa
inc
mov
add
test
lock
cmp
sub
push
pop
cmpsb
add
inc
mov
xchg
data16
xor
pop
and
adc
call
loopne
ja
inc
repz
movsb
int3
je
adc
and
fnstcw
cmp
fstpl
fidivrl
imul
movsl
sub
push
pop
sub
test
sbb
mov
enter
inc
adc
and
and
mov
push
lahf
xlat
fs
out
adc
sbb
pop
sbb
and
adc
adc
cmp
popf
in
mov
pxor
out
in
mov
xor
data16
movsb
xlat
and
inc
or
ret
adc
xor
dec
cmp
xchg
xchg
insl
fstpl
inc
mov
jb
ja
outsl
jecxz
and
push
lcall
cwtl
cmc
lea
fsubl
inc
iret
lahf
les
and
xchg
cmpsl
cmp
outsl
fnstcw
insl
clc
sahf
mov
adc
or
shll
fs
jb
mov
push
lret
push
addb
jmp
xlat
mov
sub
sub
ficompl
pop
or
dec
mov
or
aas
ja
aam
sbb
mov
jo
repz
adc
enter
testl
fsubrl
je
adcb
xor
idivl
pop
dec
inc
data16
mov
add
sub
clc
cmp
add
cltd
jmp
mov
mov
dec
pop
mov
mov
dec
popa
mov
loop
insb
mov
push
es
xchg
and
adc
ja
mov
adc
cmp
jae
into
sub
sub
pop
stos
mov
or
jle
clc
dec
cmc
push
iret
sbb
adcl
data16
and
mov
leave
and
mov
lretw
shlb
stos
rol
popf
push
dec
sti
push
lret
add
fsubs
jge
xor
cld
dec
dec
cs
jle
pop
mov
dec
pop
iret
mov
lahf
push
xchg
cmp
out
pop
ret
lods
negl
xchg
add
ret
nop
fxch
sub
add
das
daa
inc
loop
adc
dec
pop
pop
add
cmp
or
stos
inc
insl
mov
cwtl
xor
mull
cmp
outsb
notb
mov
lret
jecxz
mov
pop
push
orl
mov
jb
xchg
dec
jb
lahf
push
mov
dec
mov
test
inc
adc
lods
stos
icebp
ja
inc
int
std
flds
xchg
dec
xchg
jae
jmp
pop
pop
mov
add
ljmp
scas
xchg
notb
jmp
mov
or
cmpsl
mov
pop
pushf
add
icebp
push
ja
xor
and
or
aad
addl
xchg
xor
mov
inc
inc
add
mov
aam
ret
enter
mov
jb
test
cmpl
jno
stc
push
inc
cltd
xchg
push
hlt
je
loop
inc
xchg
loop
bound
mov
adc
sub
das
sub
inc
dec
aas
ja
or
mov
pop
xlat
push
pop
xchg
lahf
imul
xor
test
les
es
lods
or
inc
sbb
sbb
adc
inc
push
lods
push
es
mov
insl
scas
leave
jno
add
repnz
and
cmpsl
sub
shlb
pop
repz
or
xchg
sbb
lods
lods
int3
aas
repnz
pop
dec
ficompl
movb
sub
jno
cli
push
sub
pop
jge
mov
imul
add
mov
mov
xchg
int3
lock
nop
and
dec
dec
je
test
mov
dec
push
clc
std
ja
lret
cmp
adc
mov
cli
cli
add
jne
ret
jne
fildl
insl
inc
sub
ficoms
or
arpl
mov
in
and
adc
shll
out
call
les
mov
test
mov
fstps
aad
inc
push
lret
leave
dec
jnp
cli
push
mov
cmp
or
dec
rep
lahf
je
popf
mov
popf
push
adc
je
int
jp
sbb
sub
popa
mov
inc
cmp
adc
push
push
shlb
fsubrl
mov
repnz
cltd
mov
loop
mov
in
dec
mov
push
mov
outsb
xchg
and
adcl
les
loopne
mov
push
andl
and
in
mov
bound
jae
adc
je
push
pop
mov
outsl
les
and
shr
push
mov
and
rcrb
mov
popf
or
push
push
test
rcll
out
in
pop
loopne
and
cmpsl
mov
xchg
sub
dec
jno
sbb
mov
mov
adc
add
sbb
aad
jmp
mov
xor
push
addr16
insb
or
mov
mov
ja
rclb
imull
push
mov
or
movsl
dec
xchg
sahf
cwtl
dec
rcl
xlat
push
stc
inc
std
or
add
dec
fcmovne
mov
pusha
lcall
nop
aaa
inc
ret
jo
mov
adc
loop
jecxz
add
xlat
rclb
mov
lods
lods
sbb
insb
stos
ljmp
adc
test
fdivrl
mov
loope
xchg
inc
push
add
into
cwtl
aas
xor
aaa
test
std
ss
jle
or
mov
ds
dec
push
sbb
xor
loopne
mov
das
scas
popf
dec
test
and
hlt
pop
jne
fwait
pop
inc
gs
add
scas
adc
xchg
or
pop
xchg
icebp
subl
mov
or
shlb
adc
jp
add
add
adcb
aad
int
mov
inc
xor
and
inc
mov
sbb
cmp
lret
enter
or
mov
stos
mov
pop
es
push
das
sub
daa
mov
mov
arpl
insb
stc
and
inc
pop
mov
pop
xor
insl
cmp
push
mov
push
xchg
push
mov
outsb
inc
mov
js
xchg
add
jae
jnp
ja
sbb
inc
ljmp
xor
icebp
mov
pop
call
push
lock
data16
movsb
cli
nop
cld
lcall
or
test
push
mov
fstl
mov
jnp
movsb
mov
out
mov
pusha
hlt
sti
inc
cmp
sahf
and
std
fmulp
sbb
pop
fimuls
lahf
mov
mov
fs
adc
testl
xor
fldcw
jae
or
cmp
in
cmp
sbb
inc
jns
dec
mov
pop
pop
lret
push
frstpm(287
ret
adc
test
fcoms
lock
nop
inc
loopne
insb
jns
call
add
cwtl
scas
push
mov
js
aad
push
add
repz
jecxz
xor
orb
insl
push
aaa
add
jl
push
pushf
inc
scas
mov
xor
pushf
mov
test
mov
ret
dec
adcl
fcmovb
adc
xor
cmc
inc
jnp
push
mov
mov
xchg
cwtl
idivb
mov
in
pop
adc
int
inc
outsl
cmp
pop
les
daa
sub
lret
mov
xor
lea
add
sbbl
xchg
test
sub
sbb
jbe
cltd
sbb
cs
fadd
jbe
and
push
xchg
adc
out
push
xchg
mov
pop
sbb
cmp
mov
dec
mov
and
and
movsl
sub
mov
jns
outsb
push
adc
push
cmp
push
dec
mov
push
xchg
push
xchg
fnsave
pop
and
jae
and
xor
xchg
loopne
outsl
addl
xchg
or
ja
incb
sbb
popf
ljmp
jmp
rclb
mov
push
lock
adc
outsl
arpl
pop
inc
int3
in
jno
sbb
adc
clc
movsb
aam
insb
arpl
pop
jmpw
push
lods
js
nop
push
scas
loope
jae
lret
sub
mov
xchg
pushf
sbb
and
sub
mov
mov
call
sub
inc
xor
lea
and
scas
sbb
sub
jl
jle
dec
test
out
gs
dec
xabort
ss
jb
lock
mov
shrb
dec
mov
sbb
movsb
push
or
popa
daa
mov
cmc
fldt
mov
sbb
in
mov
fwait
ds
lret
lea
test
inc
xchg
sbb
jg
cmp
push
out
into
cmpsl
mov
mov
dec
mov
mov
cmp
xorb
add
mov
cmp
push
push
add
rorw
jae
and
lods
lds
std
or
andb
in
jmp
and
dec
mov
aam
push
mov
add
fistpl
sub
sub
xor
mov
outsl
lahf
imul
lret
push
or
xor
je
inc
push
dec
dec
jnp
pop
mov
subb
mov
mov
sbb
mulb
cld
shrb
aaa
jge
push
sti
push
lahf
je
rorb
aas
insl
mov
das
jg
in
sub
cmpsb
xorl
hlt
hlt
jae
mov
cmpsl
subl
pop
fsubrs
in
test
pop
sub
mov
adc
mov
pop
and
les
fimull
fwait
arpl
or
in
leave
popf
xchg
lods
and
add
ds
daa
mov
jne
outsb
imull
lock
xchg
pop
jne
mov
pop
fisubl
out
sbb
into
push
cmpsb
cmp
mov
jns
les
out
pop
adc
mov
mov
int3
and
movsl
pop
pop
sti
cld
js
shr
mov
jne
popa
int
out
stos
mov
or
stos
jmp
out
data16
pop
push
mov
cmpsb
cmpsb
xor
adc
sbb
sub
jmp
pop
pop
mov
pop
push
cmc
xchg
xor
push
imul
pop
rorl
xchg
pop
xor
clc
adc
adc
adc
mov
out
imull
cmpsl
fdivl
mov
iret
jge
add
addr16
icebp
jg
dec
xchg
movsb
pop
mov
add
mov
imul
mov
subl
pop
icebp
sbb
out
in
std
sub
lds
push
mov
outsb
pusha
add
add
mov
inc
hlt
popf
outsl
adc
jl
negl
mov
sahf
inc
daa
arpl
jbe
vmovupd
xor
mov
shl
iret
cmp
fistpl
add
adc
mov
adc
jne
sbb
mov
gs
mov
outsb
insl
mull
and
fs
jnp
jp
rcrb
adc
jb
pop
mov
jecxz
sbb
jle
inc
xor
popa
cmp
clc
shlb
mov
bound
cwtl
sbb
test
pusha
mov
xor
push
cld
mov
cltd
and
sub
fwait
aam
inc
mov
insb
xor
cmp
mov
adcl
and
mov
sbb
jg
in
cmpsl
scas
cwtl
insl
xchg
stos
and
pop
inc
cmp
jno
sub
or
aad
add
mov
ret
popf
lcall
pop
mov
insl
pop
imul
and
mov
pop
mov
gs
pop
sti
jl
test
cmc
xor
test
sub
lods
scas
jbe
negb
inc
aaa
sbb
mov
data16
dec
and
into
sub
sbb
leave
cmp
fs
jge
mov
mov
stos
pop
insb
adc
mov
imull
ljmp
into
repz
mov
ss
shrb
data16
sbb
dec
push
arpl
push
jmp
jb
lret
xchg
stos
mov
mov
fcmove
dec
sbb
xchg
mov
jo
ror
cltd
loopne
mov
inc
das
clc
rclb
cmp
mov
sub
shrb
push
inc
test
scas
dec
in
or
into
mov
jne
sti
pop
movsb
insb
sub
cli
mov
mov
xchg
clc
inc
xchg
cmp
frstor
repz
mov
xchg
out
repz
outsl
push
add
daa
xor
dec
rcrl
cmpb
insl
incb
sub
mov
inc
xchg
lea
gs
mov
sub
dec
outsb
dec
loope
cmp
shrl
rorl
and
aaa
lock
flds
inc
fs
mov
mov
idiv
sub
lea
and
pop
adc
adc
int
mov
repnz
lret
cmc
loope
fimull
jae
pop
push
mov
mov
jnp
xchg
mov
loope
outsb
pop
rol
sub
inc
mov
mov
fsubrs
add
fcmovne
in
repz
jne
dec
loope
lret
and
jle
lods
xchg
sbb
mov
orb
repnz
xor
popa
mov
rcrb
and
mov
clc
mov
insb
popf
nop
mov
add
in
xchg
jecxz
aaa
and
sbbl
mov
xchg
scas
dec
ret
loopne
jg
mov
ficoms
sbb
rolb
ret
push
dec
jae
and
rep
cmp
nop
addr16
lahf
insl
pop
add
or
notl
push
jb
lahf
movsl
outsb
dec
push
fcoml
iret
add
jmp
lea
mov
inc
negl
pop
aas
jp
push
adc
test
lret
sbb
mov
fcompl
in
push
cmpsl
mov
addl
loope
push
cld
xchg
xchg
mov
adc
addr16
jnp
dec
jl
loopne
inc
pop
mov
jmp
addl
mov
jae
pushf
ljmp
adc
fcos
or
sub
pop
sub
adc
pop
pop
dec
imul
add
mov
pop
mov
es
cmpsb
and
nop
push
xor
aas
or
enter
dec
cltd
fnsave
jmp
pop
xchg
xchg
int
mov
movsb
dec
mov
jb
jl
and
aaa
out
js
sub
scas
mov
mov
test
push
xchg
fwait
pushf
and
pop
das
and
mov
mov
fidivrl
sbbl
mov
dec
into
in
fidivl
cmp
jo
dec
or
call
pop
adc
mov
dec
cmp
or
fisttpl
lret
jl
or
mov
movsb
pop
sub
mov
jmp
or
mov
mov
pop
add
movsb
push
bts
jno
roll
rcll
and
fiaddl
stos
outsl
push
in
jo
jle
adc
call
sbb
xor
int
inc
enter
pop
out
out
sub
and
icebp
add
imul
pop
cmp
jbe
movsb
jl
pop
fwait
and
sahf
cmp
imul
add
add
add
pushl
push
shr
sub
lret
insl
nop
push
adc
xchg
mov
test
jno
cmpsl
dec
sbb
fists
outsl
aaa
jb
insl
enter
pop
sbb
dec
fwait
xchg
mov
mov
dec
adc
pop
inc
movsl
out
cltd
sbb
jae
push
aas
pusha
in
and
xchg
jmp
test
and
imul
cmp
iret
xlat
push
add
and
rcr
and
in
aaa
adc
pop
adc
cmpsb
pop
dec
push
inc
addr16
mov
mov
mov
add
int
mov
inc
bound
imul
aaa
fsubrp
mov
mov
jno
lds
jns
inc
lods
lds
ljmp
fcmovnu
shrl
jg
xchg
mov
jb
mov
push
mov
incb
loopne
or
mov
and
scas
or
mov
jge
xchg
fisubrl
jns
xchg
xlat
dec
gs
roll
push
and
push
adc
mov
cmp
sti
cld
mov
arpl
mov
aaa
jns
in
shlb
sub
mov
jg
pusha
pop
test
pop
jg
xchg
nop
xorl
adc
jb
cmp
fstl
jae
divl
sub
int
mov
cmpl
mov
xor
mov
push
cmp
das
cli
jle
icebp
xchg
std
rolb
mov
jb
js
or
xchg
jb
fstpt
jge
sbb
or
hlt
mov
mov
push
pop
push
int3
sbb
cli
mov
jae
xor
mov
jmp
test
jp
sub
scas
aaa
stos
aas
fimuls
dec
push
fwait
ds
mov
std
cld
xchg
mov
add
push
mov
std
jmp
aaa
or
dec
popf
lods
pop
xor
lock
out
repz
ds
lahf
cmp
inc
sub
xor
jns
dec
cmp
inc
sbb
cltd
jecxz
sub
xor
out
mov
pop
jmp
inc
sahf
mov
pushf
sbb
sub
cmp
imul
sbb
sbb
sub
pop
mov
ljmp
sub
in
iret
add
inc
rcrb
pop
stos
lods
inc
pop
xorb
ret
and
shlb
in
mov
clc
add
cmpsb
pop
lock
xor
mov
mov
ja
rorl
sbb
test
dec
ja
insb
aaa
fwait
repnz
push
dec
mov
stos
or
jnp
movsl
addr16
cmp
pop
aaa
fdivrl
sbb
xchg
clc
xor
jb
fisubrl
jb
or
add
push
test
xchg
push
pop
mov
movsl
aas
jmp
int3
pop
xchg
ss
mov
lret
mov
ror
jae
inc
lods
mov
cli
inc
mov
pop
mov
insb
je
mov
gs
fldenv
jns
cmp
inc
lret
ret
fiaddl
aas
int3
rclb
add
mov
test
scas
add
les
das
jmp
pop
hlt
inc
cld
stos
sbb
std
adc
mov
xchg
sarb
pop
mov
sub
popa
hlt
mov
inc
cmp
mov
fldcw
or
arpl
rcrb
xor
pop
or
push
pushf
aaa
push
pop
jb
ja
jmp
add
stos
dec
in
mov
pop
pop
in
iret
sub
push
cmp
ljmp
jecxz
pop
inc
mov
aaa
lds
xor
test
call
es
push
movsl
mov
lods
inc
insb
les
mov
imul
mov
inc
sbb
repz
dec
into
mov
inc
adc
mov
loop
insb
push
fwait
push
sub
xor
lret
cmp
ds
aas
pop
inc
out
ljmp
push
xor
cmp
dec
xor
push
fcomps
adc
lcall
leave
lcall
gs
mov
idiv
sbb
inc
pop
fs
icebp
dec
adc
xchg
fwait
xchg
incb
test
pusha
inc
xchg
outsl
dec
or
aaa
and
xchg
in
xor
repnz
andb
push
mov
mov
pop
inc
les
hlt
pop
adc
and
cli
fldenv
stc
nop
test
mov
pop
movsl
add
sahf
lcall
mov
movsl
hlt
cmp
cmpl
add
xchg
xchg
lret
or
bound
xlat
enter
mov
sahf
outsb
jno
fcompl
adc
ds
aas
mov
cmp
stc
push
pop
mov
add
mov
insl
adc
cmc
rcl
jge
out
lods
xchg
mov
jle
test
pop
out
imul
cmpsl
insb
pop
mov
iretw
fcomp
js
ss
xorl
andb
pop
sbb
outsb
or
dec
xchg
cmp
leave
orl
dec
adc
aas
pop
iret
das
in
adc
dec
mov
aas
add
cmp
xchg
sarb
mov
mov
jle
inc
nop
xor
sub
xchg
fs
dec
imul
inc
add
jp
popf
into
lret
add
cwtl
push
jmp
je
pushf
inc
aas
pop
dec
mov
mov
push
loopne
and
das
rorl
xor
stos
loop
popa
dec
push
dec
cmpsb
outsl
jne
fcmovne
mov
filds
and
stos
lret
in
es
inc
negl
adc
lea
pop
inc
in
xchg
negb
stos
pop
mov
cltd
ss
push
xor
sbb
push
fidivrl
and
pop
adc
mov
adc
sbb
sub
mov
jno
sbb
jp
fisubs
jl
fs
stos
lcall
dec
ljmp
add
rorb
out
push
cmp
and
je
cwtl
or
adc
jge
cmp
sti
int
div
xchg
enter
popf
ret
sub
outsl
mov
popf
push
gs
inc
xchg
sbb
push
mov
outsl
out
mov
cli
in
jae
mov
imul
xchg
inc
sub
pop
addl
push
jno
rorb
xchg
fimull
pop
inc
std
lock
mov
inc
into
pop
dec
lea
jb
xchg
mov
test
movsb
xor
pop
sub
mov
imul
ret
adc
pop
xor
clc
mov
repnz
ficoms
add
fcoms
int3
mov
cltd
ret
lods
mov
sti
jb
inc
pop
mov
aas
popa
fptan
cmpsl
cmpsl
mov
rdpmc
jg
mov
insb
leave
cmp
test
das
sbb
pop
fildl
insb
enter
call
test
aad
dec
mov
mov
imul
ret
or
xor
aad
adcb
loopne
out
or
test
movsl
aas
push
outsb
sub
mov
add
push
jo
xchg
cmpsl
mov
hlt
fidivs
daa
or
mov
sbb
add
xchg
out
pop
lret
rclb
cmp
jg
dec
je
into
push
pop
inc
push
xchg
mov
jno
xchg
inc
push
adc
mov
xor
jmp
sbb
xorl
cmpsb
fsubrl
inc
sub
dec
nop
jnp
sarl
pusha
fiaddl
add
jns
test
push
sbb
out
in
xchg
mov
xor
into
fs
mov
sbb
push
ret
rorb
test
and
leave
mov
mov
pop
inc
lcall
xchg
insb
push
inc
cmp
or
jno
or
xor
std
jno
inc
mulb
loopne
or
popa
mov
sbb
icebp
adcb
and
xchg
adc
std
cmp
outsb
rcrl
cltd
je
sbb
test
jecxz
mov
pop
movsb
adc
lock
mov
aad
ds
aas
mov
imul
stos
push
xor
sbb
xchg
je
lret
in
or
pop
jae
inc
pop
push
jl
icebp
dec
jns
imul
out
inc
inc
jbe
cwtl
add
or
rcrl
sbb
inc
int3
stos
xchg
jb
aam
mov
jo
out
push
out
repz
clc
dec
push
and
andl
mov
ja
int3
mov
clc
out
pop
cmp
lret
jmp
mov
cld
aad
arpl
movsb
or
pop
xlat
dec
test
xor
pop
dec
daa
and
repnz
js
lds
xchg
call
insl
inc
js
ret
mov
sub
inc
push
lods
xor
popa
and
in
sub
mov
arpl
iret
adc
xchg
xchg
imul
ret
pop
jge
shll
lret
rol
cmp
dec
int3
pop
or
push
xchg
pop
jo
or
rclb
test
cmp
sbb
cmp
and
push
js
stos
jns
jno
mov
add
dec
ljmp
pop
inc
xchg
mov
fnsave
pop
popf
pushf
dec
bound
shll
mov
or
push
lock
pop
cmc
jns
sub
insb
loope
push
pop
mov
les
jae
pop
adc
dec
push
out
mov
icebp
lahf
jno
inc
xchg
iret
movsl
test
lahf
dec
jnp
movsb
and
cli
jno
sbb
popa
mov
test
sub
sar
jne
ljmp
mov
sub
fucomi
xor
aaa
andl
sub
sbb
pop
inc
jecxz
fucomp
fwait
mov
or
and
or
mov
sahf
sbbl
inc
movsl
xchg
cltd
loope
mov
cltd
mov
mov
mov
and
mov
loop
sub
insl
fcmovu
test
je
aaa
fldt
and
lea
xchg
lret
sub
pop
mov
cmp
jecxz
cmp
icebp
and
jge
mov
mov
jnp
sub
add
inc
dec
loop
je
jp
stc
jecxz
rcrl
cs
inc
push
lods
and
mov
popa
add
dec
test
test
push
addr16
push
and
mov
call
nop
inc
stc
addr16
sbb
jo
imul
das
push
mov
push
ss
xor
push
icebp
mov
sbb
insl
jb
lret
mov
xor
sbb
adc
js
jp
mov
mov
lods
add
aam
jmp
mov
push
inc
aas
sti
xchg
mov
lds
mov
loop
push
ljmp
fcmovne
cld
xchg
xor
lahf
rolb
lahf
outsb
push
pop
pusha
or
mov
xor
bnd
rolb
mov
dec
add
enter
push
mov
inc
scas
loopne
add
fmul
dec
mov
jno
imul
and
pop
outsl
popa
icebp
or
xchg
imul
inc
inc
scas
sbbl
lahf
test
ss
push
push
ret
outsb
movsl
cmp
pushl
imul
pop
cmpsl
jbe
rolb
aad
int3
insl
add
cs
cltd
mov
pop
scas
lea
adc
pop
aas
fnstsw
pop
xor
in
mov
fiadds
or
lods
fwait
pop
xchg
pop
xchg
mov
adc
movb
sbb
cs
std
shrb
sbb
and
mov
fs
xchg
ljmp
inc
lret
test
lahf
aas
sbb
mov
mov
xor
fwait
sahf
cmp
push
mov
xchg
jbe
lea
fistl
mov
xor
lea
pop
ds
jp
int
sarl
push
leave
xor
jns
add
inc
movsb
loope
mov
movsl
mov
xlat
sub
lea
fistps
in
dec
xchg
xorb
mov
push
mov
test
sbb
in
loopne
std
or
push
in
cmp
loop
jae
into
repz
pop
sbb
xor
movsb
fisubrl
les
cld
iret
ljmp
nop
in
mov
mov
push
xchg
aaa
cmp
sbb
xchg
gs
sbb
adc
popa
or
mov
cmp
xor
cmp
out
das
sbb
jmp
and
sub
xor
jb
aad
in
test
inc
xor
loop
gs
mov
icebp
add
mov
mov
repz
jl
mov
test
jp
shl
mov
pop
ds
adc
cmp
repnz
stc
stc
dec
inc
test
into
mov
sahf
ds
mov
fdivrl
inc
mov
cmp
out
cmp
scas
loope
push
enter
aad
test
cmpsb
lods
push
cmp
in
or
sbb
or
shll
sarl
mov
or
xorb
in
aam
cmp
popf
incl
jge
scas
mov
sub
mov
inc
xchg
in
mov
iret
imul
mov
cmp
push
stos
mov
jmp
cmpsb
lds
jo
and
jle
inc
incl
pop
jecxz
scas
pop
pusha
mov
inc
inc
outsl
in
and
dec
xchg
hlt
jmp
cmpsb
and
mov
jp
jl
sub
cs
sub
lret
cmp
xor
adc
and
xorb
xchg
std
lea
imul
jnp
jo
aaa
pushf
leave
pop
stos
sub
int3
movl
inc
push
cmp
pop
leave
rol
and
ss
add
jae
sub
lods
sbb
and
mov
mov
movl
into
cld
pop
aas
mov
and
aam
push
cmpsl
cmp
ss
or
addb
enter
mov
add
xchg
inc
shlb
ds
addr16
or
lret
cmp
idivl
add
cmp
mov
push
mov
lock
inc
lret
or
sub
and
ret
push
lea
rep
scas
add
fildl
loope
jnp
mov
lcall
jl
mov
push
inc
clc
fs
pop
xchg
lcall
push
repz
mov
jb
jno
push
pop
cwtl
fistpll
xor
hlt
jnp
xchg
xchg
adc
sub
push
xor
pop
mov
mov
jbe
gs
fdiv
pop
out
sub
xor
adc
js
shlb
pop
jbe
xor
test
dec
mov
mov
xor
gs
out
pop
sub
and
call
fsubs
shrb
incl
jecxz
cmp
sub
cmc
movsb
ret
and
push
out
sub
mov
xchg
pusha
xchg
push
mov
aaa
xor
lods
das
jne
cmp
pop
shlb
pop
or
ds
push
mov
inc
bound
mov
lds
aam
movsl
lret
fildll
xor
pushf
lcall
movsb
cmc
mov
lcall
out
inc
aaa
sub
cltd
lds
add
dec
scas
cmp
sbb
jb
push
aas
mov
in
mov
jae
aas
xchg
cltd
addb
aaa
xchg
dec
pushf
or
add
iret
rcrb
clc
movsl
dec
push
in
xor
push
jns
push
in
cmp
pop
jmp
adc
mov
ss
and
insl
or
xor
rorl
loopne
enter
pop
les
push
push
icebp
gs
je
mov
stc
mov
jae
es
aad
test
pushf
dec
popf
cmp
lret
repnz
testb
jb
lahf
filds
pop
push
lea
adc
sbb
inc
xor
cs
test
cmc
neg
jge
lret
or
xor
xchg
cli
popa
ss
and
mov
rorb
cmp
pop
and
aam
daa
jae
movsb
add
sbb
mov
in
sbb
sti
adc
outsb
cli
lock
movsb
xor
orb
xor
outsl
mov
add
addb
addr16
sti
clc
fsubr
ficompl
int
jl
dec
cmp
mov
xchg
and
cmc
push
cli
add
clc
xor
mov
test
mov
inc
rep
addr16
loopne
cmp
add
jmp
inc
fs
repnz
sub
jae
rcll
fucomp
xor
adc
push
lock
push
jg
push
xor
pop
mov
jp
push
adc
push
jecxz
jmp
push
sarl
ret
mov
enter
push
mov
mov
and
imul
mov
mov
adc
addl
sbb
gs
pop
pop
mov
push
xor
adc
je
repz
mov
add
pop
popa
or
cmp
sub
jmp
test
lea
movsl
sub
mov
inc
out
cwtd
aas
sbb
mov
inc
pop
jle
sbb
inc
add
jbe
push
lock
lods
mov
in
inc
lcall
aaa
fwait
insb
mov
add
enter
gs
js
jnp
cmpl
sahf
sbb
add
aam
stc
mov
or
add
out
push
stc
xchg
sbb
aam
cli
pop
enter
adc
iret
orb
cmp
cmp
lret
mov
jb
test
push
push
cmc
shrb
insl
aad
call
mov
mov
andb
sahf
jne
pop
pand
inc
outsl
push
push
cld
dec
or
pop
es
push
mov
mov
and
les
es
int
cmp
xor
lea
cmp
lods
mov
cmp
dec
es
cs
push
push
push
push
xchg
in
lahf
xor
fdivrl
add
in
push
push
push
mov
jbe
and
xor
insb
ljmp
jbe
mov
in
movsb
adc
arpl
movsl
inc
in
jmp
push
dec
daa
dec
inc
in
mov
into
jg
loope
mov
push
testb
jnp
cli
fs
test
xor
jns
pop
fdivrs
in
insl
div
mov
cld
adc
lret
or
and
lods
test
cmp
adc
ja
pusha
mov
mov
adc
inc
int3
add
pop
xchg
repz
insl
not
test
icebp
adc
xor
push
inc
push
sbb
mov
xlat
sahf
mov
leave
pop
sbb
cmp
outsl
mov
mov
inc
out
push
or
jle
mov
adc
or
jnp
stos
ss
xlat
jo
fimuls
arpl
icebp
cwtd
xor
jo
push
sbb
fisttpl
gs
lds
mov
cli
aaa
adc
inc
add
lcall
je
in
pop
mov
inc
rol
jno
enter
pusha
ret
push
in
or
addr16
test
ljmp
and
and
push
push
pop
pushf
push
dec
mov
push
mov
xor
iret
jmp
jl
jl,pn
adc
popf
inc
cld
xchg
cmpsl
lahf
mov
push
xchg
loope
cmp
arpl
sub
ret
jg
leave
cs
movsb
mov
push
cmpl
lret
stos
jbe
hlt
adc
add
ror
sub
push
cmp
in
push
dec
jge
test
mov
xchg
stos
sbb
mov
cltd
loope
mov
enter
jne
pop
test
sub
and
fsts
lea
inc
leave
dec
in
jl
std
insb
or
lret
hlt
lret
js
popf
jae
mov
aad
push
or
mov
mov
push
test
addr16
sub
ror
icebp
addr16
mov
insl
outsl
and
hlt
pop
leave
xchg
pop
out
lret
mov
and
mov
jb
stos
lret
mov
mov
xchg
les
out
aam
sahf
mov
les
aaa
bound
push
gs
sbb
inc
aas
push
and
jno
mov
sbb
in
push
jns
jae
push
imul
or
sub
lods
mov
cmp
pop
fidivl
push
inc
mov
outsl
cmp
popf
mov
push
ret
out
push
sbb
out
popa
fidivrs
or
dec
add
add
loopne
lods
sbb
je
lahf
sbb
leave
and
mov
push
cmp
add
mov
or
fcomps
imul
call
mov
es
iret
es
es
xchg
push
xor
sbb
bound
incb
inc
and
fucom
repnz
adc
pop
mov
push
int
adc
sbb
xchg
and
js
inc
pop
int3
mov
mov
and
js
sub
mov
push
mov
sub
in
jecxz
sbb
mov
mov
adc
addr16
test
fsubs
sbb
pop
mov
daa
fdivrl
rclb
push
fimuls
pop
flds
pop
xor
xor
icebp
jns
or
lods
xchg
lcall
movsb
mov
popf
pushf
xchg
js
cs
xlat
mov
jne
out
lods
subb
mov
pop
and
cmpsl
dec
cld
icebp
sub
add
mov
push
loop
pushf
adc
mov
add
inc
inc
cli
push
gs
stos
lea
cmp
lcall
mov
sub
stc
ret
loope
mov
test
mov
pop
addl
or
in
xor
lock
scas
fsts
sbb
mov
xor
pop
adc
mov
push
leave
loop
push
rclb
lods
arpl
popa
jle
push
push
test
inc
fisttpll
push
cmpsl
dec
xor
out
sbb
repnz
jnp
dec
shlb
xchg
sub
push
mov
int3
movsb
cltd
out
cli
lahf
pushw
sahf
jbe
or
inc
aad
or
xor
and
jae
addr16
imul
int3
int
push
popf
fs
mov
pop
sbb
xchg
jbe
lret
dec
xor
mov
xchg
sahf
ret
cmp
mov
divps
push
or
test
por
jg
and
repz
lods
fs
in
mov
add
or
jbe
sahf
aam
lods
pop
fcoml
jl
jecxz
movsl
cmp
jbe
pushf
add
scas
xor
ret
dec
cltd
mov
lcall
jnp
push
adc
push
dec
xor
enter
adc
scas
sbb
imul
das
cmp
arpl
pop
pop
leave
inc
pop
mov
and
mov
jmp
push
push
punpckhbw
fs
lea
ds
xor
inc
adc
sbb
push
sbb
movsb
test
testl
out
fnstenv
mov
sbb
sub
test
das
ja
xorb
daa
pop
icebp
aam
rcr
sahf
bswap
lahf
push
mov
sbbb
lea
div
ds
jle
in
sbb
pop
test
dec
es
fs
cs
adc
cltd
aad
in
cmpb
mov
cmp
sbb
mov
cltd
aam
std
push
stos
jne
lock
popa
repz
sbb
jbe
pop
jno
setg
notl
pop
testb
push
sub
arpl
mov
jmp
cmpl
push
sbb
cli
xchg
push
mov
mul
outsl
inc
jb
cwtl
into
add
lret
fcmove
dec
int
jecxz
divb
xchg
push
mov
jae
push
ljmp
jmp
movsl
cmpsl
sbb
add
adc
jmp
insb
lret
rclb
je
mov
imul
mov
push
jl
mov
pop
out
popf
outsl
mov
push
insl
xlat
xchg
aas
scas
push
mov
xchg
call
jbe
push
enter
out
popf
jle
jl
sub
fcmovnb
mov
jo
push
aad
sub
pop
mov
insl
mov
push
sbb
mov
mov
jno
iret
cmpsl
fisubl
xlat
pop
les
jge
add
adc
add
imul
movsl
imul
inc
aaa
sub
pop
xchg
jno
nop
rorl
out
into
mul
pop
add
ret
bound
imul
sub
jne
mov
jp
aad
out
in
mov
add
iret
fldl
pushf
cmc
shlb
gs
or
mov
cmpsl
adc
mov
mov
xor
or
mov
ficompl
push
ret
cmc
xorb
or
nop
xchg
push
shrb
add
mov
mov
dec
mov
xchg
rorb
dec
sbb
jbe
notb
shrl
test
and
std
out
jno
imul
cmp
dec
adcb
dec
add
sbb
ss
int
mov
gs
cmp
sub
jne
icebp
out
andl
imulb
sar
mov
pop
jnp
out
adc
cli
pushf
pushf
sub
mov
push
scas
mov
xor
ss
sti
cmpsb
ret
mov
rcrl
cs
jae
xor
sahf
xchg
out
jge
dec
stc
fsubrs
hlt
mov
jmp
mov
or
adc
in
sub
ss
xor
inc
and
decb
xchg
cli
fadds
std
mov
sbb
mov
out
call
mov
pop
dec
xor
sbb
popa
mov
es
ja
nop
sbb
int3
mov
dec
addl
cwtl
mov
mov
ret
push
adc
adc
addr16
lods
push
in
mov
xor
adc
or
lahf
mov
pop
daa
cmp
cmpl
adc
sti
add
sub
fisubrs
dec
pop
int3
testb
sub
adc
stos
rolb
pop
enter
mov
xor
lds
js
cmp
outsb
int
lahf
adc
jae
loopne
orb
push
jmp
jmp
add
adc
add
pop
fwait
push
push
and
xchg
jp
mov
stos
fnstcw
ret
fcomp
jnp
pop
pop
sub
and
xor
xchg
mov
jmp
push
dec
xchg
dec
out
cmc
bound
and
xchg
jnp
test
js
push
daa
rclb
insl
and
xlat
fcoms
mov
sbb
sub
mov
sbb
imull
sbb
cmp
add
fs
push
incl
stc
out
rcl
mov
cmp
outsl
mov
dec
or
push
pop
lcall
add
lcall
push
push
std
xchg
ret
pop
out
xchg
repnz
sbb
shll
repnz
xchg
xchg
pop
in
jo
ja
xor
xorl
mov
les
popl
sub
mov
cltd
xchg
out
lret
dec
adc
imul
add
and
mov
sub
into
push
inc
loope
sbb
cmp
xor
jnp
arpl
pop
sti
fdivrl
scas
movb
out
sbb
jo,pt
lods
pop
mov
mov
mov
cwtd
aas
icebp
mov
push
or
push
inc
incl
mov
out
mov
jae
push
jmp
pop
xor
mov
mov
std
repz
cltd
push
mov
sub
pop
insb
cmp
mov
popa
push
addr16
pop
jg
xor
pop
test
or
add
push
and
xor
and
inc
fs
mov
jp
out
mov
nop
xchg
dec
test
cmp
ds
push
or
add
xchg
cmc
pop
and
popa
pop
out
mov
stos
push
fnsave
leave
call
hlt
insl
add
pop
xchg
lods
insl
jp
fnstenv
in
hlt
int
stos
or
daa
adc
cmp
mov
mov
mov
js
ja
cmp
mov
sbb
mov
test
mov
adc
movsb
xlat
ja
bound
sahf
or
sub
mov
push
mov
or
test
in
not
outsl
in
jb
icebp
movsb
and
mov
aad
xor
mov
shlb
cmp
cmp
nop
and
imul
mov
jne
mov
sbb
xor
stc
cmpsl
add
int
cmp
mov
fidivrl
dec
icebp
cld
mov
fwait
arpl
das
mov
je
mov
fisubl
mov
lods
ret
xlat
ret
sub
mov
adc
xchg
test
xor
jmp
js
xchg
addr16
cwtl
std
inc
xor
mov
or
imul
jb
push
push
sub
mov
pop
cmpl
mov
sar
out
or
dec
dec
lret
inc
jmp
adc
shl
sbb
shl
push
int
div
cmc
dec
loope
lds
fwait
cmpsb
aam
pushw
inc
jmp
nop
ss
int3
out
lock
in
add
and
xor
je
rcrb
cmp
imul
aas
sbb
test
xor
and
push
ficompl
lods
insb
stos
daa
mov
clc
sub
push
push
jmp
cmp
stos
lods
sbb
iret
in
fwait
and
rol
dec
aaa
add
addr16
addr16
jl,pt
xchg
cmp
sub
cs
cmp
lret
push
mov
test
inc
test
sub
and
push
mov
jl
call
je
mov
mov
popa
clc
cmpsb
lret
out
xchg
pop
mov
js
add
xchg
mov
inc
call
mov
fnsave
pop
les
or
push
shll
daa
icebp
imul
sbbl
cmc
add
xchg
orl
fwait
cmpsl
sub
push
xor
dec
cmpsl
sahf
jne
xor
dec
addr16
push
std
outsb
jecxz
push
icebp
mov
and
out
xchg
movsl
in
cmpsb
dec
dec
lds
hlt
dec
inc
sub
shl
dec
out
daa
loope
add
xor
cld
imul
xlat
cmpl
jp
add
mov
sahf
cmp
cmc
and
fistl
lock
fimuls
ljmp
mov
xor
jl
sub
adc
loop
push
sub
or
xchg
xchg
jmp
jb
cmp
cli
xchg
mov
sbb
jns
xchg
insl
pop
fsubs
push
xor
lcall
jbe
push
aaa
loop
jne
dec
lret
es
sti
dec
or
jmp
push
push
icebp
sbb
stos
cmp
xor
in
sbb
or
push
add
fistpll
and
cld
mov
mov
cmpsb
xchg
sarl
shl
lahf
popa
rol
cmpsb
and
loopne
test
jmp
cmp
jecxz
mov
sbb
ljmp
adc
daa
es
push
test
jg
mov
sub
cmp
hlt
sbb
jns
or
pop
push
pop
flds
and
shlb
mov
mov
xor
stos
xlat
add
and
cmpsb
mov
or
mov
add
pushf
test
xor
repz
in
aad
scas
lret
out
cmp
pop
add
push
out
faddl
and
mov
lret
adcl
daa
test
pushf
imul
push
push
xor
jle
enter
adcb
jae
cli
or
sub
js
loop
jecxz
pop
adc
inc
out
mov
shrl
mov
mov
call
xor
jnp
nop
mov
jl
xchg
adc
popf
inc
imulb
imul
xchg
dec
sub
sbb
test
adc
mov
dec
divb
cmpsl
into
add
sarb
push
adc
data16
push
lret
mov
rcrl
lret
and
or
idivl
and
add
hlt
or
into
add
cld
add
xlat
pop
test
adc
or
and
push
xorl
or
xor
mov
sub
lods
stos
add
pusha
xchg
sbb
mov
dec
test
or
aaa
imul
xchg
and
lock
jns
jbe
subl
stos
ficompl
sarb
out
or
dec
jbe
cmpsb
test
xor
es
xchg
int
and
cmpsl
test
lods
mov
or
inc
push
insb
add
inc
in
sub
xor
pusha
in
sub
and
mov
cmpsl
or
jno
lods
push
ror
fnstenv
add
adc
stos
imul
jo
stos
data16
mul
cmpsl
push
xchg
mul
lds
lods
aas
lret
inc
xchg
in
adc
ret
jno
or
mov
mov
cltd
sarl
ret
sti
mov
xor
data16
push
es
pushf
jo
cmpl
jns
inc
pop
std
lret
cmp
and
rcll
mov
in
push
push
scas
rcll
mov
mov
pop
and
lds
pusha
inc
pop
movsb
jg
sub
mov
cwtl
sub
add
or
cmpsb
stos
inc
mov
push
mov
push
scas
xchg
adc
and
push
mov
in
mov
sahf
js
jae
xor
imul
mov
sbb
loopne
test
mov
lcall
rorl
daa
mov
popa
bound
lret
inc
addb
jae
adc
push
pusha
jno
icebp
sub
cltd
in
fwait
mov
inc
push
jle
shrb
popl
dec
xor
call
popf
cwtl
dec
mov
jo
pop
mov
xchg
das
adc
jb
jmp
sahf
sub
add
adc
rdtsc
jg
pushf
add
jle
in
and
loopne
cmpsl
and
mov
sarl
sbb
test
icebp
addr16
out
jne
mov
hlt
inc
adc
je
call
dec
mov
and
cld
mov
or
push
add
mov
iret
js
pop
jo
xchg
mov
popa
xor
popa
call
mov
pop
sar
push
shlb
dec
adc
inc
or
mov
shrb
mov
jp
cmovo
arpl
adc
imul
insb
push
mov
cs
inc
scas
cmp
cld
cli
stos
ljmp
mov
outsb
mov
cld
adc
aad
call
je
jmp
out
xor
adc
mov
idivl
and
cltd
adc
andl
mov
pop
push
repnz
gs
jns
outsl
push
dec
cmp
cmp
aam
loope
jno
mov
sbb
scas
loope
add
jbe
mov
mov
xchg
push
xchg
rcrl
push
mov
cltd
jb
sarb
jg
cmpsb
out
ds
pop
jbe
lods
sbb
aas
hlt
cld
mov
mov
call
idivl
mov
mov
push
inc
lret
ljmp
sbb
out
inc
add
pop
nop
cmp
cwtl
fwait
scas
test
loopne
insl
in
imul
and
xor
call
rcrl
inc
ljmp
push
aad
and
jbe
push
xchg
push
push
jbe
cld
mov
xor
mov
lahf
xchg
ss
inc
out
out
cltd
aam
sub
das
punpckhwd
dec
push
xor
int
ror
fdivl
out
sbb
xchg
or
pop
cmp
xlat
jbe
fwait
mov
or
sub
lds
push
inc
jmp
sbb
ja
test
mov
xor
arpl
pop
das
ret
sarb
jg
inc
or
dec
out
rclb
sub
int
xor
sti
dec
sub
adc
popa
mov
mov
adcb
xor
inc
mov
sub
mov
xchg
adc
dec
fsubrs
pop
es
stc
adc
pop
gs
cltd
iret
ret
inc
mov
mov
imul
stos
repz
push
std
pop
cmp
add
shr
je
jg
std
xor
add
imul
sub
pop
jp
ret
pop
xor
addl
xor
mov
scas
hlt
out
mov
mov
push
subb
dec
inc
jnp
push
and
aas
mov
out
sbb
adc
dec
and
mov
sub
repnz
mov
stos
out
int
dec
sbb
loop
ja
sbb
xchg
mov
in
mov
xchg
movsl
push
sbb
cld
clc
inc
pop
jecxz
jb
and
dec
aam
into
mov
aam
sub
and
mov
lcall
ret
scas
aam
das
sbb
jns
test
sarb
int
sub
mov
je
in
inc
out
mov
bsr
jb
xchg
test
and
adc
lcall
mov
mov
arpl
jno
sbb
or
cmpb
dec
dec
mov
push
je
pop
adc
pop
xchg
sbb
dec
sti
lcall
lea
inc
mov
jno
jg
mov
fcomp
xlat
jge
sub
dec
mov
bound
xor
pop
insb
push
int
mov
mov
pusha
fstpt
jl
xor
addr16
mov
out
xchg
mov
cmpsb
rorl
movsb
ja
sbb
jno
cmp
pop
inc
sbb
fidivrl
push
mov
bound
pop
inc
repnz
cli
dec
add
imul
rolb
cld
jbe
mov
pop
mov
je
xchg
dec
pop
sti
cli
loopne
out
cmp
or
and
pop
sbb
add
sub
mov
rcl
jb
leave
fists
repnz
cmp
adc
aas
in
adc
push
or
dec
dec
xor
adc
into
jnp
mov
dec
jle
xchg
aam
adc
and
insb
adc
es
testb
testl
add
test
sbb
push
jg
push
aaa
adc
sarl
sub
mov
insb
popf
stos
or
sti
es
clc
es
mov
sub
sbb
xchg
ret
xchg
pop
in
mulps
shll
lcall
decl
inc
add
jne
negb
push
icebp
dec
and
fst
mov
repz
pop
inc
sub
xlat
pop
sar
add
cmpsl
cmp
or
les
cmp
shll
inc
lahf
test
mov
loope
movsb
xchg
cmp
movsb
cltd
cmc
insl
insb
xchg
fcoms
es
mov
xlat
cmp
adc
mov
cmpsb
aam
cmp
stos
rcrb
add
out
enter
cld
sub
jbe
js
cmc
adc
out
pop
push
out
fistpll
add
dec
fisttpll
cmpsl
mov
das
xor
jecxz
scas
out
xchg
adc
jp
xor
into
das
sarb
cmc
outsb
pop
pop
mov
pop
mov
mov
ljmp
push
add
xlat
sub
fsubp
stos
shlb
and
lahf
psubd
and
notl
cltd
sub
mov
xor
mov
fstpt
addr16
imul
fldt
adc
mov
add
mov
insl
nop
rcrl
mov
pop
ja
lea
idiv
mov
addb
adc
jb
cmp
pop
and
subb
xor
adc
enter
cmp
pop
push
cs
adc
mov
jno
loop
dec
aad
stos
pop
dec
and
xor
repnz
jbe
movsb
push
push
sub
cmpsb
xor
imul
mov
scas
insb
dec
add
sbb
jge
xor
mov
arpl
lcall
ret
movb
js
stos
jo
rcr
inc
jno
fadds
sub
leave
ret
test
jnp
imul
cs
xchg
sti
dec
jb
mov
adc
leave
dec
lcall
stc
inc
insl
ret
jne
aam
or
enter
js
lock
dec
std
test
jl
in
mov
jge
pop
enter
xchg
rcrb
repz
ja
lea
notb
inc
mov
flds
iret
jg
pop
test
cmp
daa
sub
das
int3
loope
jns
inc
jo
insb
into
int3
addr16
rcll
ds
in
imulb
add
pop
nop
jle
mov
or
mov
outsl
mov
icebp
push
jmp
shlb
into
push
nop
pop
pushf
scas
inc
sbbl
inc
mov
mov
pop
fsubrs
hlt
mov
subb
pop
je
imul
js
data16
sbb
mov
test
inc
adc
out
lds
push
movsl
or
pop
outsb
sub
iret
dec
sub
mov
dec
push
lea
push
pop
sarb
and
pop
sbb
xorb
xorb
pop
fs
mov
call
stc
in
pop
jl
inc
insb
adc
mov
out
xchg
addr16
mov
push
jge
mov
jbe
xor
lahf
pop
cmp
push
loope
mov
stc
push
test
xchg
mov
mov
xchg
loope
jne
leave
and
sbb
ret
fstpt
push
jge
int
adc
loopne
xchg
cmpsb
fcomip
adc
sub
mov
cmpl
popl
dec
je
cmpsl
dec
popa
dec
cmpsl
fisubs
in
mov
xor
adc
arpl
rolb
jno
xorb
dec
mov
addl
mov
call
mov
or
pop
push
sti
fnstsw
pop
es
xchg
leave
ret
cwtl
movsl
sahf
inc
aam
pop
cmp
push
jbe
xchg
mov
add
jmp
lcall
inc
rcll
shrl
mov
into
bnd
nop
ficoml
push
adcl
and
xchg
enter
mov
dec
pop
dec
fnstcw
pushf
or
stos
aas
jmp
xchg
cmp
adc
sub
fstl
xlat
and
int3
fs
sub
add
mov
sub
lret
testb
pop
xchg
dec
xchg
ret
arpl
js
hlt
loop
icebp
cmpl
jno,pt
test
popa
aad
js
inc
insb
aam
inc
addr16
sti
data16
inc
imul
mov
cmp
push
gs
xchg
ja
lods
mov
or
sahf
gs
repnz
nop
sub
jge
xchg
cwtl
push
mov
aad
nop
adc
mov
push
ret
in
pusha
daa
popa
ret
pop
lods
or
jmp
mov
loope
mov
push
test
add
int3
jbe
jbe
arpl
ljmp
add
mov
pop
mov
adc
mov
push
push
and
adc
jb
jp
vpunpckhdq
ljmp
inc
or
ret
leave
cmp
dec
pop
mov
ljmp
sbb
inc
cltd
inc
out
mov
mov
cmpsb
ret
into
fbstp
cwtl
mov
inc
dec
popa
ss
pop
repz
mov
inc
addb
inc
mov
add
loop
sbbl
jae
jno
mov
out
fistpl
sbb
jno
dec
jb
push
adc
clc
aad
andl
dec
xchg
sub
test
cmc
sub
stc
ss
jg
and
push
sahf
inc
scas
loope
fcmovnbe
xchg
inc
xchg
sahf
div
mov
flds
xchg
push
or
mov
mov
jbe
js
iret
jge
pop
or
pop
repnz
into
push
lahf
scas
mov
mov
sbb
scas
data16
shlb
popf
faddl
mov
lahf
pop
pop
jns
adc
sbb
dec
or
enter
inc
popf
scas
jae
sbb
add
jns
xchg
incb
and
inc
jle
mov
jl
xchg
mov
pop
xchg
shrl
lds
stos
lds
and
pop
push
in
leave
ret
sbb
mov
jbe
and
dec
sbb
sbb
inc
mov
gs
add
out
jge
push
shrb
mov
sbb
stos
or
jns
sub
jl
jns
sub
fdivrp
mov
test
mov
sahf
pop
and
mov
out
divl
pop
icebp
adc
and
or
mov
add
popa
stos
aam
xor
cs
dec
sub
pop
negl
mov
fs
fidivrs
xchg
es
aam
pop
jl
iret
out
out
pop
xor
js
add
xchg
rcll
cmp
inc
rorb
mov
rcll
div
sub
xorl
mov
dec
cmp
ds
leave
cli
hlt
mov
out
jge
jle
sbb
xchg
mov
aas
push
jecxz
andl
stos
or
rcrl
sti
sbb
mulb
pusha
xchg
lret
ja
mov
test
and
mov
push
insb
xorl
mov
ss
push
outsb
xchg
imul
push
in
dec
into
push
push
cwtl
pop
mov
add
lods
popf
adcl
jne,pt
mov
pusha
jp
mov
call
cmpl
sub
loope
nop
lret
clc
pop
stos
ficomps
subl
fstps
aaa
icebp
loopne
lock
inc
mov
push
es
aam
popa
std
stos
mov
cmpsl
mov
leave
out
sub
clc
add
out
jb
sub
xchg
mov
aam
mov
out
add
in
iret
fdivrs
fldenv
jecxz
lahf
xor
fs
addr16
dec
fwait
hlt
mov
and
cs
pop
clc
lods
push
dec
xor
jge
add
andb
sub
mov
adc
push
popl
shrb
test
popf
jb
loopne
mov
in
pop
sahf
xchg
push
fisubl
lahf
push
mov
jl
push
inc
xor
fdivs
or
sahf
lcall
jp
push
xor
ret
stc
loope
ja
test
ret
cltd
lds
mov
adc
jnp
sbb
negb
push
dec
sbb
test
sbb
aas
popa
cmp
and
pop
test
push
sbb
shl
mov
sub
outsb
into
in
aam
jmp
jns
je
or
pop
push
sti
outsl
xlat
xchg
loopne
mov
fwait
pop
mov
pushf
cmp
out
arpl
lods
popa
lcall
mov
xchg
inc
cmpsb
sbb
shl
aam
pop
stos
es
mov
mov
call
pop
icebp
inc
xor
scas
ret
mov
add
mov
dec
push
lcall
jo
and
mov
sub
pop
jno
clc
jl
push
out
ficoms
test
sti
test
fwait
push
sub
sub
dec
jmp
xor
loopw
mov
fsub
mov
test
jecxz
xor
loope
adc
pop
mov
and
lret
inc
dec
lds
call
push
dec
mov
jae
adc
imul
cmp
jg
jp,pt
sub
dec
inc
movsl
dec
push
fildll
sbb
cwtl
dec
cmpsb
pop
int
jl
inc
or
mov
mov
and
ss
push
dec
adc
push
xor
mov
cwtl
jl
mov
mov
sbb
loope
outsb
loopne
dec
mov
inc
in
fcomps
xchg
lret
mov
xlat
out
push
mov
cmp
repz
and
adc
mov
stos
xor
popa
mov
mov
pop
dec
leave
repz
push
test
xlat
pop
push
lds
clc
out
or
cs
or
mov
in
hlt
lods
icebp
jb
cmpsl
pop
ret
jl
nop
cmp
imul
pop
jg
inc
shlb
pop
in
in
repz
and
movsl
outsb
inc
out
push
test
jae
jle
push
mov
cmp
bound
mov
cmp
mov
mov
jb
inc
pop
adc
ret
sbbl
imul
push
sahf
or
das
or
adc
out
inc
imul
add
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
and
daa
cmp
inc
xchg
fistpl
scas
dec
cmp
imul
jle
bnd
popl
lcall
lahf
sbb
cmpsl
mov
movsb
test
adc
les
mov
adc
pmulhuw
sbb
out
movsl
mov
ja
rcll
mov
movsb
cli
push
jno
lret
enter
add
lahf
enter
jb
out
gs
cmc
cmp
in
mov
pop
mov
loope
dec
pop
ljmp
cmp
out
fdivp
scas
dec
iret
js
leave
dec
xor
inc
lods
cmp
bound
orb
mov
lret
sub
div
ret
pop
jae
fldt
xchg
cmp
mov
aaa
xchg
shr
jge
in
jg
call
outsl
rcrl
lahf
cs
outsb
and
push
ror
cwtl
or
jb
cwtl
push
js
bts
mov
out
in
je
pop
xor
jecxz
mov
roll
in
xor
sub
push
jle
push
jbe
loope
sbb
fcmovnu
mulb
test
push
mov
adc
sti
sbbl
jge
in
xor
cltd
rep
mov
out
sbb
les
mov
inc
out
jne
outsb
inc
cmp
pop
int3
push
in
lods
rcll
jle
cmpsl
mov
dec
mov
push
adc
divb
cld
fsubrs
push
adc
mov
shrb
push
inc
push
sti
mov
aas
cld
out
pop
or
insl
xchg
jns
scas
cmpsb
test
mov
or
cmpsb
xlat
jbe
xchg
stos
cmp
jne
cwtl
inc
push
std
jmp
cwtl
inc
jecxz
repnz
icebp
sti
jmp
aam
loope
lock
jp
fisubrl
lcall
inc
jmp
sti
cmc
gs
pop
sub
mov
mov
mov
lds
in
fdivl
mov
pop
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
insl
add
insl
add
