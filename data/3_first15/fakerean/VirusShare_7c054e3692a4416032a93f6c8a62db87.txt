add
jne
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
mov
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
cmp
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
testb
je
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
mov
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
pushl
mov
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
pushl
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
call
mov
push
call
pop
mov
call
push
mov
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
cmp
jne
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
cmpl
je
pushl
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
pop
xor
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
andl
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
xor
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
sub
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
cmp
je
cmp
je
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
mov
push
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
push
lea
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
lea
call
lea
call
lea
call
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
movl
movl
movl
cmpl
jge
cmpl
jne
mov
test
je
push
call
pop
mov
mov
push
call
lea
lea
movl
call
lea
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
mov
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
lea
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
push
push
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
mov
lea
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
pushl
movl
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
call
mov
pop
ret
push
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
cmp
lea
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
lea
lea
call
test
je
xor
cmp
mov
jne
mov
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
jne
mov
mov
mov
push
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
jmp
mov
jmp
mov
push
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
jne
xor
cmp
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
mov
test
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
lea
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
call
mov
mov
mov
add
mov
add
mov
fildl
sub
mov
fildl
lea
fxch
fstl
fxch
fstl
fxch
fstpl
fstpl
call
lea
push
lea
push
lea
call
fldl
mov
fstpl
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
mov
test
je
mov
fldl
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
and
mov
mov
mov
lea
push
lea
push
call
add
push
lea
mov
call
lea
call
test
jne
mov
mov
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
push
call
mov
add
add
add
stos
add
add
xchg
xchg
add
add
push
add
add
add
add
lcall
popl
icebp
xchg
mov
cld
push
test
stc
cld
add
mov
add
add
jmp
icebp
int
mov
add
addb
add
push
push
push
push
push
push
push
lea
push
push
call
mov
jle
add
add
jmp
loopne
mov
add
shrb
call
jb
jne
add
test
add
add
imul
push
push
gs
add
sub
pop
popl
push
lea
push
push
push
push
push
call
ja
push
add
add
add
cmc
test
push
add
fwait
add
add
rclb
out
add
add
add
add
roll
fisttps
ja
pop
add
add
pop
mov
add
push
sub
pop
push
push
push
lea
push
push
push
call
add
test
int3
add
push
out
in
add
imul
stos
add
add
add
mov
add
in
in
pop
push
push
push
lea
push
push
push
push
push
push
call
pop
ja
add
add
mov
add
int3
aad
addl
outsl
arpl
mov
js
rolb
vcvtss2sd
incb
add
imul
pushf
add
pop
imul
pop
add
add
add
add
add
push
push
lea
push
push
call
add
popf
add
out
loope
lcall
out
loopne
mov
ljmp
add
add
jmp
out
add
test
lcall
push
push
lea
push
push
push
push
call
add
push
add
loope
add
add
add
pop
add
ret
add
sahf
leave
cwtl
push
add
add
rolb
rolb
jecxz
lea
mov
mov
test
sub
pop
call
push
lea
push
push
call
add
scas
add
in
sti
roll
cmc
call
add
mov
add
push
add
lock
add
cli
add
out
ja
in
hlt
lcall
add
push
push
push
call
add
add
int
add
roll
mov
int3
add
test
add
add
rolb
aad
imul
add
add
jno
ja
movsb
add
sub
pop
call
jmp
push
push
call
add
out
add
add
add
jno
cli
js
lret
xchg
add
push
outsl
rcrl
xchg
push
push
push
addr16
add
push
mov
pop
fxch
mov
pop
jne
popf
mov
jbe
add
test
roll
add
add
jnp
mov
lcall
push
push
push
push
call
add
add
out
add
lret
imul
hlt
add
add
enter
andb
mov
imul
add
test
add
mov
subl
addl
lock
mov
push
push
push
push
lea
push
push
call
in
add
movsb
add
gs
mov
test
mov
push
mov
mov
push
jp
add
testl
shlb
add
mov
jp
fnsave
int3
add
xchg
in
add
loopne
mov
add
call
mov
add
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
push
add
xlat
pushf
lods
add
test
push
rcrb
add
clc
pop
sahf
jo
in
add
add
popa
pop
add
xchg
add
sub
pop
add
add
push
push
lea
push
push
push
lea
push
push
call
jle
add
add
pop
add
xchg
data16
lret
add
loop
fiaddl
add
stos
add
add
test
fs
pop
add
jge
mov
lcall
pop
add
repz
insb
xchg
lods
push
lea
add
add
sub
push
sub
add
not
sub
shr
shl
pop
dec
rol
pop
push
push
lea
push
call
mov
mov
mov
jo
cltd
add
add
mov
lds
mov
add
add
jne
push
push
push
push
push
push
push
call
adcb
add
out
xchg
mov
sti
subb
nop
mov
add
push
push
je
xchg
mov
repnz
addb
lock
add
sti
imul
push
jle
add
outsl
aad
rcr
pop
cmc
add
add
jnp
roll
icebp
add
fadds
lcall
add
lea
push
push
call
pop
add
jo
lahf
push
mov
add
add
shll
mov
add
push
mov
add
add
mov
add
add
add
add
push
jae
outsl
pop
lcall
repnz
mov
add
sar
lcall
pop
mov
push
push
call
add
add
push
add
in
add
hlt
add
andb
js
mov
loopne
out
nop
add
pusha
jbe
cmpsl
add
movl
push
push
lea
push
lea
push
push
call
cmpsb
push
jns
add
mov
jl
pop
add
add
cld
data16
add
add
mov
add
add
add
jecxz
rolb
pop
fistps
popa
icebp
nop
out
js
add
jnp
loope
jle
push
icebp
cltd
cmpsl
add
add
lcall
inc
call
xlat
pop
push
lea
push
push
lea
push
push
push
lea
push
call
xchg
add
jp
xchg
mov
jecxz
mov
add
icebp
add
add
mov
imul
jno
rolb
sub
pop
push
push
push
push
push
lea
push
call
fistl
add
add
jmp
loopne
mov
add
mov
add
pop
rolb
mov
add
add
fadds
add
add
add
xchg
add
clc
mov
imul
add
test
mov
loopne
add
icebp
stc
sub
pop
pushl
push
push
push
call
add
in
ror
adcl
cltd
mov
pop
xchg
stc
cmpsl
in
pop
add
in
jp
add
shrl
jne
add
add
in
out
nop
jmp
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
push
call
add
add
jmp
insb
add
add
sarl
lods
test
roll
sub
pop
call
pushl
push
push
push
push
lea
push
push
push
lea
push
call
push
add
add
push
lds
fsubrs
add
ret
shll
jb
rolb
push
add
imull
add
add
aam
add
add
add
mov
in
add
sarb
loopne
pushl
push
push
push
push
call
mov
push
mov
add
add
lds
mov
mov
mov
jnp
fildl
jl
sub
pop
call
push
push
inc
push
sub
add
lea
sub
sub
inc
sub
xor
add
pop
pop
push
lea
push
push
push
call
movsb
add
enter
lahf
add
imul
add
addl
add
stos
test
push
add
xchg
hlt
pop
leave
filds
jb
add
lock
popf
push
add
test
sub
pop
pushl
push
push
push
push
lea
push
push
push
call
mov
aad
in
add
mov
mov
push
iret
add
add
popl
jmp
add
loop
clc
stos
loope
add
mov
mov
xchg
xchg
lahf
jmp
sub
pop
call
push
push
push
push
push
call
add
ja
xchg
mov
mov
cli
mov
push
call
add
add
arpl
pop
add
pop
aam
add
fsin
cmc
add
lods
add
stos
cltd
sahf
pop
stc
add
push
push
bound
repnz
fiadds
mov
popf
jae
add
add
xchg
scas
jo
add
add
imul
rolb
lcall
inc
push
push
dec
inc
shl
push
and
add
xor
sub
shr
pop
add
sub
pop
push
push
call
mov
out
sarb
add
lret
test
xchg
push
xchg
sahf
add
mov
pop
xchg
fwait
mov
add
sub
pop
push
push
lea
push
call
mov
xchg
mov
data16
add
arpl
rcl
cwtl
add
mov
ja
push
add
jnp
add
add
add
fadds
sub
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
add
xchg
outsl
adcl
lahf
jecxz
jns
add
add
imul
add
je
add
add
shlb
mov
lods
mov
js
add
pop
loop
fs
jnp
out
addb
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
add
push
mov
pop
add
add
mov
mov
outsl
imul
xchg
into
push
mov
add
add
xchg
mov
iret
add
mov
push
push
push
lea
push
push
push
push
push
push
push
call
push
jp
fdivp
add
add
jno
jne
push
clc
add
add
add
add
scas
movsb
jmp
add
mov
sub
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
test
add
out
pop
enter
add
add
lods
cmpsb
je
push
movsb
mov
add
mov
aam
in
add
mov
add
add
pop
add
test
mov
rcl
add
add
in
jmp
pop
push
mov
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
jle
mov
add
mov
add
add
les
in
add
mov
add
add
push
add
add
add
in
xchg
std
add
fidivrl
sub
pop
add
push
lea
push
lea
push
push
push
push
push
call
cltd
add
nop
add
fiadds
mov
mov
cmp
add
add
out
push
add
mov
add
xchg
xlat
pop
add
mov
add
fldl2e
add
in
lcall
ret
add
add
add
push
push
push
push
call
add
add
add
pop
add
je
add
mov
subb
in
jno
add
pop
push
test
add
push
mov
pop
mov
popl
pop
add
out
pop
pop
mov
pusha
mov
add
push
lds
xchg
add
pop
mov
in
lock
mov
push
push
push
lea
push
call
lahf
pop
jl
add
push
xchg
scas
hlt
out
add
jge
jnp
add
push
rcl
lahf
scas
out
jmp
lds
add
popa
add
add
jbe
add
lcall
xor
push
lea
push
push
push
call
mov
lcall
jo
xchg
add
push
call
jnp
jne
add
jmp
add
fsub
jo
out
mov
add
add
push
call
jae
add
mov
in
lock
lcall
les
push
call
add
pop
lahf
add
sahf
stos
add
push
add
into
add
add
mov
add
add
cli
mov
pop
push
fiadds
pop
add
mov
aam
call
mov
in
clc
lcall
jne
push
push
call
lods
xchg
add
add
jle
pop
cmpsl
add
arpl
popa
mov
add
add
mov
add
add
add
cmpsb
add
add
in
sahf
add
cld
roll
pop
mov
fidivl
lret
loope
in
clc
lcall
push
push
push
push
push
call
jne
add
add
add
mov
add
aam
mov
add
add
mov
mov
loop
fisubs
add
pop
repnz
mov
mov
mov
into
loope
add
push
fwait
push
scas
jb
out
ja
enter
add
inc
or
or
mov
push
push
push
push
lea
push
push
push
push
call
popf
add
xchg
add
jmp
xchg
pop
add
fld
lcall
add
jl
add
add
repnz
add
rolb
mov
nop
rolb
addb
ljmp
mov
add
sub
pop
xor
push
lea
push
push
call
movsl
xchg
add
add
add
lock
popa
test
jbe
jo
xchg
add
icebp
faddl
icebp
xchg
mov
les
add
push
push
push
push
call
cwtl
mov
mov
push
xchg
mov
add
ficoml
in
cltd
push
mov
lahf
mov
add
add
add
stos
push
lret
pop
popf
fildl
outsl
insb
jmp
movl
lahf
pop
roll
add
sub
pop
add
push
push
push
push
call
rol
add
add
pop
add
mov
push
add
jmp
xchg
mov
jne
add
repnz
popf
scas
shl
add
mov
in
add
xchg
mov
mov
pop
rolb
mov
add
add
rolb
imulb
in
lock
pop
push
push
push
push
call
mov
je
add
add
add
push
in
enter
add
add
mov
lods
test
fldl
add
add
filds
pop
push
cwtl
roll
add
mov
add
add
popf
add
mov
add
xchg
aam
add
xlat
add
add
insb
sub
pop
mov
xor
push
push
push
lea
push
push
call
add
add
nop
testl
add
add
add
pop
aam
add
add
mov
scas
add
add
xchg
add
pushf
add
into
jecxz
add
add
xchg
sub
pop
push
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
call
iret
mov
jns
mov
icebp
lahf
pop
add
xchg
outsl
mov
jo
mov
enter
xchg
mov
mov
add
add
fwait
jl
mov
xlat
lock
pop
xor
push
push
lea
push
push
push
push
push
push
push
push
call
les
push
mov
add
mov
pop
push
mov
mov
jb
add
push
push
add
test
faddl
add
add
cmpsl
add
add
xchg
mov
add
std
mov
scas
push
sub
pop
add
push
push
lea
push
call
fldl
mov
lds
cmpsb
insb
mov
add
outsl
int
jns
cwtl
push
fistps
xlat
gs
mov
loopne
fldenv
jbe
push
add
add
fistps
add
add
add
add
add
add
add
cld
sub
pop
sub
pop
push
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
cmc
mov
push
jmp
mov
testl
std
fiadds
clc
add
cmpsl
mov
add
add
mov
pushf
mov
add
add
lea
call
add
add
push
fdivr
lcall
movsb
push
lea
push
push
lea
push
push
push
push
push
push
call
pop
mov
mov
add
add
loop
roll
add
push
fists
pusha
pop
movl
fdivr
lcall
push
pop
mov
push
push
push
push
call
imul
pop
add
loope
cmpsb
addb
mov
add
add
in
pushf
jmp
jnp
xchg
push
add
add
je
out
mov
cwtl
add
push
fildl
add
lods
flds
movl
add
add
cld
rolb
out
add
jnp
int3
lock
pop
add
push
inc
sub
xor
pop
add
push
push
lea
push
push
call
add
mov
add
mov
imul
mov
shrb
add
lods
leave
sarl
add
push
adcb
mov
loop
in
add
cmpsb
ficomps
test
add
add
sub
pop
add
push
add
not
sub
ror
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
mov
mov
in
cmc
out
rolb
fwait
add
add
add
add
aad
add
add
add
test
add
xchg
mov
mov
add
add
out
jmp
lods
add
cmpsl
add
popf
add
imulb
in
lds
in
lcall
add
push
lea
push
push
push
lea
push
call
add
popaw
addl
add
in
add
add
scas
add
mov
fisubrl
sar
test
ret
cwtl
add
mov
add
pop
add
test
cmpsb
pop
jmp
roll
lcall
les
add
push
push
push
push
push
push
lea
push
push
call
push
add
push
out
pusha
pop
mov
add
stos
int
pop
imul
add
add
jne
add
iret
mov
mov
mov
jmp
add
mov
mov
add
loop
mov
imul
add
into
loop
clc
movsl
fcompl
mov
add
hlt
mov
loopne
lcall
push
and
cmp
xor
imul
lock
mov
add
add
add
mov
lahf
add
roll
fiadds
cld
add
pop
into
in
sbb
nop
in
push
ljmp
pushf
add
add
add
in
lock
xor
push
lea
push
push
push
call
add
add
push
xchg
jnp
add
std
add
js
fistl
test
add
add
in
add
addl
int3
data16
xchg
add
mov
stos
add
sub
pop
add
push
ror
ror
pop
mov
xor
push
lea
push
push
lea
push
call
sahf
addl
ret
add
add
adcl
add
mov
cltd
add
pop
sahf
testl
pop
lods
add
add
push
add
frstor
jne
add
stc
add
ret
repnz
sub
pop
add
push
shl
lea
sub
add
pop
mov
push
push
add
shl
add
shr
push
sub
add
ror
sub
sub
sub
pop
add
pop
push
push
push
lea
push
call
cmpsl
add
xchg
rolb
jbe
lods
push
add
xor
jns
add
mov
add
add
data16
cwtl
into
fucomip
mov
fiadds
lret
add
bound
add
mov
fcomps
mov
add
cld
add
add
add
enter
mov
js
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
call
add
xchg
jmp
add
add
mov
add
mov
sti
xchg
add
sbb
aad
sahf
cld
jbe
mov
pusha
negl
add
popa
imul
add
inc
push
add
push
lea
push
push
push
lea
push
lea
push
call
add
test
pop
add
enter
xchg
enter
add
cli
add
pop
add
lods
in
add
add
add
loop
add
stos
mov
imul
lret
ficoms
add
lcall
add
stos
pop
or
push
shr
sub
push
push
pop
add
not
sub
inc
pop
add
lea
pop
push
add
lea
not
pop
push
push
push
push
push
push
lea
push
call
fdivl
add
lret
cli
fst
jnp
push
pop
add
add
add
add
pusha
add
ffree
jb
scas
add
mov
add
int
lret
in
pop
call
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
jnp
int
add
add
add
mov
movsl
xlat
jge
mov
jle
add
mov
popf
xchg
fdivs
push
leave
scas
addb
stc
add
rcrl
int
loope
add
popf
add
add
stos
mov
mov
add
add
imul
fdivr
lcall
clc
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
ret
add
scas
mov
add
jb
add
push
pop
addl
movsl
in
cmpsl
cli
xchg
mov
add
add
add
add
lret
test
sub
pop
push
push
push
push
lea
push
push
push
call
add
mov
pop
add
add
lahf
pop
add
jo
add
mov
xlat
std
pop
add
xchg
fs
add
pop
flds
mov
add
jp
add
mov
jne
mov
add
out
out
add
sub
pop
mov
push
rol
lea
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
int
js
shr
add
imull
jmp
scas
add
rorl
cmpsb
xchg
push
add
movsl
add
clc
fldl
ja
jge
jne
hlt
xchg
mov
add
lcall
ret
add
add
add
push
push
lea
push
push
push
push
push
push
call
add
ret
lcall
mov
jl
xchg
les
sahf
int
les
add
js
in
out
scas
out
mov
add
add
xchg
jbe
xchg
andb
xchg
shlb
rolb
add
scas
addr16
add
add
mov
popl
add
add
add
xchg
jae
xor
push
push
lea
push
push
push
push
call
insb
add
add
icebp
add
add
pusha
xchg
jle
add
mov
xchg
push
add
add
add
mov
fs
rcrb
add
add
add
loop
pop
push
mov
add
faddl
call
add
push
push
lea
push
push
lea
push
push
push
push
call
stos
add
out
add
out
add
jne
add
scas
cmpsl
add
add
mov
mov
add
ja
bound
mov
into
add
add
add
add
add
xchg
mov
xor
push
push
lea
push
push
push
lea
push
push
call
add
fcom
test
aam
add
add
lock
add
push
add
in
imul
rol
mov
mov
add
sub
pop
add
push
rol
ror
dec
pop
pop
mov
xor
push
shl
pop
rep
mov
xor
push
lea
push
push
lea
push
push
call
mov
jp
stos
sbbb
mov
jo
out
pop
jae
add
les
mov
mov
mov
add
sti
pushf
jnp
lock
mov
pop
add
repnz
add
arpl
add
push
push
add
lcall
leave
je
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
cli
clc
iret
push
pushf
popf
test
add
add
add
pop
push
xchg
fdivrs
mov
movl
andl
add
out
loopne
popf
add
mov
add
pusha
in
test
add
fstl
add
rol
outsl
mov
jnp
add
lcall
xor
mov
dec
xor
pop
mov
xor
push
pop
add
add
push
xor
not
pop
push
push
xor
xor
pop
mov
xor
push
shl
shr
dec
pop
add
pop
push
not
sub
shl
add
pop
rep
mov
push
push
push
push
push
lea
push
push
push
push
push
lea
push
call
push
mov
add
bound
out
pop
cltd
push
fldl
xchg
jmp
add
add
call
xorl
lock
add
add
add
ret
add
add
jnp
addb
add
call
loop
add
or
push
push
push
push
push
lea
push
lea
push
push
call
in
addl
int3
push
faddl
lret
jl
in
mov
mov
add
movsl
push
add
xchg
mov
in
loopne
add
push
sub
dec
pop
or
je
mov
push
add
shl
pop
add
add
push
push
push
call
xor
rol
fldl
add
cld
imul
fdivrp
roll
xchg
add
mov
add
add
xchg
fcmovnu
mov
push
roll
loope
add
mov
call
stc
sub
pop
rep
pop
push
push
add
push
sub
add
ror
sub
not
pop
add
add
pop
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
call
add
ja
add
rol
jno
xlat
add
mov
add
mov
cmpsl
mov
add
add
add
mov
mov
xchg
add
sub
pop
pop
push
push
push
push
push
push
push
push
call
add
add
add
repnz
hlt
stos
push
je
xchg
add
mov
add
add
add
mov
hlt
add
add
loopne
lcall
jne
mov
push
sub
rol
pop
mov
jmp
push
push
push
push
call
sarl
add
leave
mov
fnsave
jae
bound
push
xchg
add
mov
lea
mov
jne
mov
in
lock
lcall
push
add
sub
lea
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
mov
add
add
popf
insb
add
lret
fadds
add
lds
add
mov
flds
fmuls
bnd
lcall
pop
lcall
int
mov
add
lcall
std
add
mov
mov
add
push
add
icebp
in
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
jl
imul
add
jns
add
xchg
add
mov
in
stos
jbe
cld
add
add
add
mov
pushf
mov
orb
add
cld
add
sti
decb
add
repnz
sub
pop
push
push
push
push
call
pop
pop
mov
add
add
add
int3
scas
jecxz
add
fildl
pusha
out
pusha
imul
rcrb
xchg
add
add
cmpsl
stc
add
sub
pop
push
push
pop
push
push
push
sub
add
shr
pop
mov
push
push
lea
push
call
add
lret
pop
add
roll
lods
lods
mov
movsb
add
stos
repnz
mov
mov
add
popa
add
out
ja
add
sub
pop
pop
pop
push
lea
push
push
call
pop
lahf
jne
add
hlt
loope
add
add
fucomip
add
mov
les
add
mov
add
mov
mov
add
mov
jmp
add
shrl
nop
icebp
testl
loope
xchg
std
test
mov
xchg
lods
add
xchg
movsb
hlt
mov
push
push
push
call
movsl
lcall
xchg
mov
imul
stos
mov
pop
jns
repnz
jnp
add
mov
push
mov
int
pusha
pop
add
push
add
out
add
mov
push
add
push
xlat
jne
lods
add
push
add
add
fwait
lock
mov
push
mov
pusha
not
add
lcall
leave
push
shr
shr
inc
pop
ret
push
inc
add
xor
pop
push
push
push
call
in
push
push
add
add
jp
int
add
addr16
add
mov
clc
xchg
cmpsb
add
xchg
mov
in
clc
pop
mov
add
push
shl
ror
pop
push
push
inc
not
lea
pop
push
push
lea
push
push
push
push
push
push
push
call
in
xchg
shrl
movsl
clc
xchg
push
jl
iret
add
cmpsl
xchg
aam
add
add
movl
add
popa
add
les
xchg
popf
std
hlt
sahf
clc
cwtl
test
cmc
fwait
hlt
out
add
add
add
add
mov
add
pop
shr
add
lret
add
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
call
xchg
test
add
ja
int
arpl
sbbl
icebp
add
add
lds
jl
jp
hlt
mov
in
fdivr
lcall
push
push
lea
push
push
push
lea
push
call
add
add
pop
mov
xchg
scas
add
pushf
add
lahf
add
xchg
mov
add
xchg
test
add
add
lea
add
in
call
movl
addl
push
not
pop
test
je
mov
push
xor
pop
pop
pop
push
push
push
push
lea
push
call
loopne
add
out
mov
mov
jmp
subb
fmul
add
xchg
add
add
add
add
pop
in
roll
mov
sahf
pop
je
sub
pop
pop
push
push
push
push
push
call
scas
out
add
add
add
out
add
add
js
rolb
cwtl
add
mov
in
test
add
sub
popf
in
jl
incb
push
ror
ror
sub
pop
leave
push
inc
inc
xor
pop
ret
push
sub
pop
push
mov
push
shr
shr
pop
add
push
push
push
push
call
xchg
hlt
fmulp
add
add
add
add
cld
scas
add
fldcw
cwtl
lock
cmc
jmp
fstl
add
mov
lds
jo
add
roll
mov
in
add
add
add
cltd
mov
add
xlat
sub
pop
push
push
add
inc
pop
push
push
push
pop
push
push
not
pop
testl
push
push
push
push
push
push
push
push
lea
push
call
mov
add
pop
add
mov
add
lock
add
cmpsl
add
in
add
sahf
out
add
les
popa
add
in
add
scas
mov
add
jo
xlat
scas
notl
mov
mov
lahf
sub
pop
addl
push
push
lea
push
call
add
aam
mov
add
insb
jne
add
add
bound
jno
cld
mov
jge
in
add
xchg
mov
outsl
add
jbe
in
hlt
lcall
add
fisubl
addr16
call
sub
lahf
push
lea
push
push
push
call
add
add
mov
fsubl
add
add
add
adcb
loop
test
aad
fisubl
scas
outsl
add
xchg
add
add
add
add
pop
cli
mov
addb
rolb
sub
pop
mov
pushl
push
push
push
push
push
push
push
push
call
incb
negl
mov
testl
add
pop
add
ja
add
add
mov
rolb
pop
movl
add
add
add
pop
fcompl
mov
mov
xchg
add
hlt
out
sub
pop
push
push
shl
dec
pop
push
push
push
push
push
push
push
push
call
enter
add
or
add
push
add
add
add
xlat
push
mov
stc
add
fst
add
push
cld
mov
add
out
jne
add
add
add
je
mov
mov
hlt
stos
jge
addb
pop
call
push
lea
push
call
fdivrs
in
add
flds
add
mov
add
test
test
xchg
add
popl
call
mov
jge
add
test
lea
push
push
push
push
push
push
push
call
mov
roll
testl
cmc
add
add
imul
pop
push
sbb
je
shr
leave
add
ljmp
add
mov
push
inc
pop
pop
push
inc
pop
pop
pop
push
dec
rol
pop
leave
push
push
push
lea
push
push
push
push
push
push
call
stos
add
stc
stos
mov
add
data16
test
add
mov
arpl
aam
add
add
jl
add
sti
faddl
add
mov
aam
add
mov
out
add
add
in
fcompl
add
push
add
lea
pop
push
mov
push
dec
not
add
sub
pop
add
push
lea
push
push
push
push
lea
push
call
lea
pop
lock
addr16
jae
add
mov
lock
jae
add
add
push
mov
addb
add
lock
fldl
arpl
mov
mov
jno
add
fcomps
pusha
andb
pop
push
push
push
push
push
push
push
push
call
in
cwtl
add
pop
pusha
hlt
add
shll
add
add
add
add
popf
add
xor
add
fbstp
enter
sarb
xchg
xchg
mov
push
popa
add
add
add
add
lcall
push
add
shr
pop
push
push
push
shr
pop
movl
push
push
push
push
push
call
add
mov
fwait
jne
lock
lahf
stos
add
out
mov
xchg
subb
add
incb
enter
fwait
shrl
add
add
lcall
int
call
pop
push
call
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
sarb
xchg
jmp
xchg
add
cwtl
mov
add
add
push
in
jae
pop
add
cld
in
sub
pop
subl
push
push
push
call
ja
add
movsl
add
out
pop
add
add
mov
cwtl
flds
add
add
add
xchg
test
mov
movsl
add
add
push
fs
cmc
lret
xlat
lahf
out
add
stos
mov
int3
add
add
out
add
sahf
cli
xchg
add
add
jge
add
test
call
inc
sbb
add
add
adc
call
lods
je
loop
push
out
nop
add
add
add
les
add
add
add
les
mov
xchg
ret
add
sub
pop
pop
pop
push
sub
rol
pop
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
movl
sarb
add
add
xorb
lahf
add
sti
je
add
xchg
fsubrp
jp
add
jnp
add
pop
add
add
add
int3
pushf
mov
leave
push
not
add
inc
inc
pop
ret
push
push
shl
pop
mov
push
push
call
divl
rcl
add
aad
out
mov
enter
in
add
into
mov
in
add
dec
loope
add
push
push
scas
add
add
add
fs
mov
mov
add
xlat
add
jo
add
in
clc
pop
add
push
inc
inc
pop
push
push
push
push
lea
push
push
push
push
push
call
mov
repnz
push
add
jle
add
add
add
lret
mov
add
add
add
out
fldl
cld
cmc
add
test
pop
add
add
lcall
push
push
add
inc
pop
mov
push
push
lea
push
push
call
roll
add
add
fiaddl
add
add
jle
push
mov
data16
push
add
sti
mov
add
add
mov
out
mov
add
add
add
movsb
mov
push
add
add
add
push
push
sub
pop
lea
push
push
push
lea
push
lea
push
push
push
call
jle
pusha
repnz
add
add
ja
add
add
in
add
mov
jecxz
add
pop
in
push
bound
add
bound
push
insb
movb
add
add
mov
mov
add
push
xchg
add
add
mov
add
add
pop
mov
sub
pop
sub
push
sub
dec
add
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
mov
add
faddl
rorb
roll
add
mov
jmp
test
hlt
call
add
addb
hlt
in
mov
add
push
add
jbe
add
add
add
add
add
add
stos
add
add
push
jno
push
add
shr
add
push
shr
xor
pop
mov
push
sub
pop
mov
push
not
pop
add
push
shr
pop
add
push
push
push
push
push
call
lods
rolb
push
stos
add
xchg
mov
xchg
data16
int
jmp
divb
or
mov
push
imul
fiaddl
pushf
add
test
nop
add
pop
jl
add
fwait
int3
add
add
add
enter
fucomi
stos
add
lahf
out
add
add
inc
add
add
push
lea
push
push
lea
push
push
push
call
add
pusha
cmc
add
nop
add
lret
popa
add
jmp
add
iret
fiadds
xchg
in
in
cmpsb
add
mov
add
add
add
mov
add
jne
xchg
add
add
add
in
call
jne
push
lea
shr
pop
cmp
jne
push
add
shr
shl
not
pop
mov
push
sub
lea
pop
movl
push
push
call
add
mov
add
stos
lock
in
jno
call
pop
fbstp
add
lods
cmc
add
add
lods
xchg
add
pop
add
add
cmpsl
add
jnp
add
addr16
add
mov
mov
arpl
lcall
imul
add
test
movsl
pop
mov
push
lea
shr
pop
mov
push
add
pop
sub
jne
push
not
pop
mov
push
lea
push
call
jge
mov
into
mov
stos
mov
stos
pop
add
call
add
add
fiaddl
add
flds
arpl
sub
pop
movl
push
add
pop
jmp
push
push
call
loope
icebp
add
clc
add
add
int3
loop
pop
mov
push
sti
add
add
add
scas
fst
push
add
stos
add
add
sub
pop
mov
mov
push
lea
xor
shr
sub
pop
cmp
jne
push
push
push
push
push
push
push
call
mov
lcall
addl
les
stc
lea
push
mov
add
int
jo
int
add
xchg
leave
add
rcr
mov
add
add
add
lds
add
jo
add
iret
add
sub
pop
mov
push
push
lea
push
lea
push
push
call
lock
add
jne
jle
rolb
lahf
bnd
xchg
add
popa
popa
mov
popf
cmpb
imul
add
push
add
xchg
add
addb
in
add
jmp
pop
sub
pop
movl
push
ror
pop
jmp
push
push
push
push
lea
push
push
push
push
call
stc
shll
mov
enter
push
mov
add
incb
fcom
xchg
jne
add
push
hlt
popf
pop
add
add
add
cli
roll
in
push
or
loopne
mov
movsb
into
nop
lret
xchg
aam
add
xchg
add
in
mov
add
xchg
test
sub
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
add
mov
push
push
test
mov
lds
add
add
test
adc
shl
hlt
add
add
push
cltd
jb
test
add
stc
out
jbe
add
lods
push
add
repnz
jb
arpl
xchg
jno
ror
lea
in
fdivr
lcall
cmpl
jne
push
shr
sub
add
dec
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
call
jbe
subl
mov
stc
xchg
fwait
add
add
shlb
mov
add
shll
push
cld
imul
add
out
nop
nop
add
add
add
cli
xchg
cmc
add
ret
xchg
push
rolb
mov
pop
frstor
add
sub
pop
movl
push
add
inc
dec
pop
jmp
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
jae
xchg
add
add
xchg
add
add
add
push
add
shrl
loopne
add
mov
nop
add
push
add
fildl
bound
jns
stos
sub
pop
pushl
pop
push
shl
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
pop
ja
loope
mov
hlt
add
movl
nop
add
in
out
add
add
mov
stos
jo
cwtl
addb
mov
add
pop
add
xchg
in
add
mov
xchg
add
scas
add
add
add
xchg
in
fcomps
inc
sbb
xor
rol
pop
mov
push
push
xor
sub
push
sub
add
sub
sub
rol
sub
rol
rol
pop
ror
pop
push
pop
push
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
bound
add
ret
add
into
fiadds
add
pop
decb
add
add
lea
in
lds
pop
mov
mov
nop
add
push
iret
sub
pop
cmpl
je
push
push
rol
add
push
xor
add
sub
not
xor
sub
sub
sub
sub
pop
sub
shr
pop
push
lea
push
call
mov
data16
add
add
sarl
mov
pusha
ljmp
xchg
test
add
mov
add
sub
pop
push
push
inc
pop
call
push
push
push
push
push
push
push
push
call
add
add
mov
add
jb
test
add
push
in
add
mov
test
add
stc
outsl
add
add
mov
mov
lret
add
lret
mov
cmpsb
pop
sub
pop
cmpl
je
push
push
sub
lea
push
or
not
add
add
shr
add
add
sub
rol
pop
sub
dec
pop
push
xor
shr
dec
pop
push
call
push
sub
rol
xor
shr
pop
cmpl
je
push
push
inc
sub
rol
shl
push
xor
add
sub
add
shl
pop
ror
pop
push
shl
lea
pop
push
call
push
push
lea
push
lea
push
push
push
push
call
addl
add
in
fbld
mov
jmp
add
add
add
push
mov
leave
int
sub
pop
cmpl
je
push
push
dec
add
add
push
or
inc
add
lea
sub
ror
pop
add
inc
dec
pop
push
lea
push
push
call
add
loopne
test
loopne
scas
ret
cmc
loope
add
leave
out
mov
js
bound
push
lods
add
filds
add
test
bound
mov
add
add
sarl
add
add
push
stos
add
push
test
mov
push
xchg
add
lcall
call
push
ror
sub
pop
cmpl
je
push
push
shl
push
and
add
shl
sub
sub
xor
sub
xor
pop
rol
pop
push
push
push
push
lea
push
call
add
lcall
add
out
add
cwtl
add
rcll
ja
add
stc
add
add
mov
add
add
cld
mov
in
in
lcall
push
push
lea
push
push
push
push
lea
push
call
insb
add
add
mov
addr16
stos
fcoml
popl
add
add
add
scas
add
add
sahf
xchg
pop
out
outsl
out
mov
js
add
insb
arpl
pop
add
andl
stos
mov
add
add
add
adcl
call
push
push
push
lea
push
push
call
adcb
rol
add
add
jo
int3
fimuls
sahf
sbbl
add
add
add
in
jle
xlat
xchg
in
in
in
pop
cmpl
je
push
push
ror
shl
ror
push
or
not
add
add
sub
rol
lea
add
xor
pop
pop
push
rol
lea
sub
ror
pop
push
push
push
push
push
call
cmc
xlat
hlt
mov
add
add
add
add
fildl
add
faddl
test
out
add
mov
fiaddl
mov
in
lock
call
push
push
lea
push
push
push
push
lea
push
call
add
ljmp
mov
add
enter
mov
popf
mov
jmp
xchg
fadds
faddp
add
jge
add
rcr
add
add
fstl
lcall
cmp
or
int3
je
push
push
sub
push
or
inc
add
sub
sub
sub
not
sub
pop
pop
push
xor
shl
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
push
jo
add
mov
cli
mov
aam
mov
xchg
add
add
in
add
xlat
outsl
add
pusha
lea
test
faddl
lcall
add
add
xchg
add
sub
pop
call
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
pop
add
add
test
add
add
add
jmp
add
lret
out
test
jle
mov
add
lock
loop
add
add
popf
pop
adcb
add
cmpl
je
push
push
push
push
pop
add
sub
sub
xor
add
lea
pop
shr
shr
xor
not
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
push
add
pop
push
mov
scas
xorl
pusha
add
les
pop
add
jge
dec
gs
mov
add
lods
mov
lods
repnz
add
add
add
mov
add
pop
add
fists
bound
mov
lcall
push
add
pop
call
push
push
push
push
lea
push
push
push
push
push
push
call
cmpsb
add
add
add
add
fmul
add
sti
iret
mov
je
add
rolb
stc
test
iret
sarb
mov
cwtl
add
int3
nop
add
mov
fwait
add
add
push
test
push
xchg
add
test
add
add
pop
cmpl
je
push
push
shr
push
sub
add
inc
xor
inc
add
sub
shr
add
pop
add
pop
push
push
lea
push
call
ljmp
leave
int
sahf
lcall
addl
push
test
add
add
add
imul
movsl
gs
add
push
scas
add
mov
pop
push
push
push
lea
push
push
call
cld
mov
je
add
add
test
xchg
add
out
add
imul
add
mov
popf
add
fwait
xchg
jge
fdivr
jo
push
add
add
mov
jecxz
loope
test
add
add
je
into
mov
in
add
xchg
iret
add
add
add
add
fcoml
js
movb
sub
pop
call
cmpl
je
push
push
lea
push
sub
add
xor
sub
sub
xor
pop
xor
rol
pop
push
push
call
fidivs
popf
add
js
pop
aam
mov
cltd
add
add
add
ja
loopne
add
add
icebp
loopne
add
mov
test
lahf
jns
add
push
add
icebp
pop
pop
add
sub
pop
push
push
push
push
push
call
mov
mov
xchg
add
mov
shrl
add
in
fldenv
add
rcrl
icebp
push
add
push
add
mov
add
pop
pop
add
mov
call
cmpl
je
push
push
sub
sub
shr
push
xor
add
add
sub
xor
sub
shr
pop
pop
push
shr
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
add
add
sarb
loope
add
lods
movsb
test
add
add
push
lods
add
add
popf
or
out
jo
in
fcompl
call
js
jmp
les
je
push
push
rol
push
and
add
add
lea
add
sub
shl
shr
pop
xor
pop
push
lea
push
lea
push
push
push
call
mov
jecxz
fdivrl
mov
mov
loopne
add
add
mov
fldl
out
add
rcl
add
sub
pop
push
push
rol
inc
ror
pop
call
push
ror
pop
cmpl
jne
push
push
push
push
push
push
push
push
push
call
add
loopne
add
xchg
in
out
add
add
xchg
sti
mov
add
mov
sahf
xchg
addl
mov
mov
add
pushf
andb
push
lods
rclb
push
test
in
cmpsl
mov
xlat
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
push
call
push
movsb
lret
out
aam
add
imul
cli
mov
addb
add
popa
add
fsincos
popf
add
jle
icebp
add
add
add
lcall
add
add
add
xchg
push
xchg
mov
mov
push
push
push
call
add
add
add
mov
add
pop
ret
add
imul
mov
mov
in
out
pusha
add
xchg
je
add
cld
lcall
mov
scas
add
std
add
add
sub
pop
jmp
push
pop
xor
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
out
add
movsb
xchg
fldl
mov
add
fwait
mov
jmp
add
push
xchg
add
popa
mov
xchg
lcall
push
ror
not
shl
sub
pop
pop
push
lea
push
push
call
in
mov
mov
mov
aad
add
add
add
cltd
lcall
jb
in
in
add
add
std
imul
cwtl
add
ja
ficomps
jl
add
loope
xchg
stos
iret
roll
fsub
lea
fadds
lcall
leave
push
inc
pop
ret
push
sub
not
ror
pop
push
push
sub
rol
pop
mov
push
add
pop
add
push
push
push
lea
push
call
jp
incb
add
sahf
add
add
addr16
movsb
pop
rol
add
add
xchg
jnp
add
pop
leave
lret
movsl
add
mov
lcall
jge
add
test
add
add
dec
xlat
push
shr
sub
lea
push
xor
add
shl
ror
sub
shl
shl
shr
pop
not
shl
pop
push
pop
pushl
push
push
push
push
call
add
xchg
add
cltd
stos
add
xchg
testl
mov
mov
addb
jecxz
jbe
clc
mov
add
mov
xor
mov
mov
loop
jecxz
add
add
add
jno
in
in
stos
imul
pushf
enter
sub
pop
call
push
push
push
lea
push
call
int
pushf
cltd
add
add
in
jns
add
std
add
mov
popf
add
add
enter
add
mov
rclb
movl
mov
lcall
call
ror
pop
call
push
lea
push
push
push
push
lea
push
lea
push
call
stc
pop
mov
lcall
add
add
cmc
add
add
add
mov
add
sti
test
push
out
add
add
lret
pop
lds
ffree
xchg
in
in
jmp
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
bound
xchg
mov
testl
arpl
fdivrp
jno
push
pop
add
hlt
int3
pop
mov
mov
add
add
clc
jno
add
add
iret
add
enter
flds
push
addb
add
add
add
loopne
int3
sub
pop
cmpl
je
cmpl
jne
push
shl
lea
pop
mov
push
lea
push
push
lea
push
push
call
pusha
jno
lret
popf
push
mov
pop
add
add
add
xchg
scas
add
imul
add
add
mov
mov
add
addr16
fidivrl
add
add
vmovd
add
movsb
add
popa
jnp
add
in
ja
xchg
addl
lcall
test
adc
push
push
push
push
call
shll
add
js
test
mov
add
add
nop
add
add
mov
jecxz
add
add
in
stos
mov
add
loopne
lcall
jmp
push
push
push
push
call
mov
add
jns
movsl
lods
out
les
jbe
add
add
add
outsl
add
mov
jmp
add
add
pop
mov
add
cmpl
jne
push
push
dec
not
ror
push
sub
add
inc
dec
lea
not
sub
add
pop
ror
inc
pop
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
add
add
pop
mov
js
sahf
ljmp
pop
pushf
clc
les
mov
leave
int
incb
flds
push
data16
xchg
push
add
lret
in
in
pushl
push
lea
push
lea
push
call
aad
mov
bound
roll
faddp
jle
push
bound
in
add
add
in
add
jb
add
andl
xchg
add
cmc
sub
pop
call
push
lea
pop
push
push
lea
push
push
push
call
pop
add
test
ljmp
add
rolb
hlt
mov
addl
push
popf
mov
mov
mov
rclb
add
jl
add
add
mov
fadds
add
jae
imul
add
pop
fwait
jb
in
lock
call
push
xor
pop
jmp
push
inc
pop
cmpl
jne
push
rol
sub
ror
pop
mov
push
sub
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
call
int3
add
loop
add
mov
pop
add
mov
mov
push
add
add
iret
repnz
mov
add
in
push
push
push
inc
push
push
pop
add
inc
add
ror
sub
rol
add
rol
pop
dec
sub
pop
push
push
lea
push
push
lea
push
push
push
call
pop
rcl
mov
add
adc
fists
push
add
rcrb
add
imul
add
loopne
mov
hlt
test
in
in
pushl
call
push
lea
push
lea
push
push
push
push
push
call
mov
cld
roll
add
add
lock
pop
add
jno
add
add
jae
test
into
add
add
lret
add
sahf
cli
add
add
call
push
push
shl
inc
add
push
push
pop
add
dec
sub
lea
pop
not
add
pop
push
add
sub
pop
pushl
call
push
add
shr
pop
call
push
push
shl
dec
lea
push
sub
add
sub
sub
add
sub
add
inc
dec
pop
pop
push
push
push
lea
push
lea
push
push
lea
push
call
add
enter
add
add
push
addb
fwait
add
add
add
mov
insb
sub
pop
pushl
push
inc
add
pop
call
call
push
push
sub
push
sub
add
shl
add
dec
shr
sub
pop
xor
sub
dec
pop
push
add
pop
pushl
push
lea
push
push
push
lea
push
push
push
call
cmpsl
mov
cmpl
les
xchg
xchg
add
jbe
add
ljmp
jge
add
add
add
fcmovbe
outsl
imul
add
add
gs
add
push
add
xor
pop
call
push
push
shl
rol
push
push
pop
add
dec
sub
sub
sub
dec
rol
pop
rol
sub
pop
push
push
push
push
lea
push
call
rcl
fidivs
add
pop
add
icebp
outsl
add
add
std
mov
les
add
push
outsl
add
enter
add
mov
ror
add
out
sahf
mov
scas
int
lcall
je
push
ljmp
pushf
push
popf
rol
fwait
test
add
out
in
in
pop
pushl
push
add
not
pop
call
call
push
push
add
sub
push
sub
add
ror
sub
ror
pop
lea
shr
sub
pop
push
push
push
push
push
push
call
fs
divl
xchg
pop
add
add
add
lock
add
mov
mov
in
push
push
jecxz
lds
popa
in
movsb
popf
jbe
add
add
add
arpl
cld
je
movb
add
add
mov
add
add
add
add
loopne
in
call
push
push
call
mov
add
add
out
mov
aam
fdivr
add
lret
add
jo
pop
fcoml
jo
xchg
add
call
call
push
push
ror
rol
push
sub
add
sub
xor
lea
shr
pop
ror
xor
lea
shl
pop
push
dec
pop
pushl
call
push
lea
push
call
mov
addr16
add
imul
xchg
int3
add
add
add
andb
mov
add
add
scas
add
add
add
add
add
add
mov
jb
in
clc
pop
call
push
push
sub
not
push
xor
add
add
sub
shr
add
pop
inc
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
add
jb
iret
add
nop
add
scas
call
cld
divl
les
add
mov
mov
add
add
fsubr
add
push
jno
jge
add
fdivr
lcall
jne
call
push
sub
pop
call
push
push
shl
shl
shr
push
sub
add
sub
xor
dec
sub
inc
pop
xor
pop
push
lea
push
push
call
add
test
out
jmp
rolb
add
add
mov
add
pop
in
jl
cltd
mov
push
mov
icebp
scas
loope
in
hlt
lcall
jne
call
push
not
shl
pop
call
push
push
xor
sub
push
or
not
add
lea
sub
xor
dec
add
pop
sub
pop
push
shl
shl
add
pop
pushl
push
lea
push
call
mov
xlat
add
add
jecxz
pop
add
les
pop
add
add
fwait
mov
add
mov
push
add
lret
add
stc
xchg
call
stos
mov
add
add
call
push
push
push
lea
push
lea
push
push
push
call
add
sahf
mov
cmc
roll
bnd
mov
iret
add
mov
insb
add
cwtl
add
add
add
out
mov
mov
add
lcall
pushf
and
call
push
call
push
push
dec
push
push
pop
add
shl
sub
sub
shl
shl
sub
pop
ror
pop
push
xor
dec
pop
pushl
push
ror
add
dec
dec
pop
call
push
push
call
add
add
stos
add
add
add
enter
add
mov
xchg
add
mov
add
add
shl
add
jae
iretw
cltd
mov
jo
add
jae
add
fwait
out
lret
add
add
add
loop
jp
add
add
add
in
clc
pop
call
push
push
not
lea
push
or
not
add
not
dec
not
sub
not
xor
sub
pop
sub
not
sub
pop
push
xor
rol
shr
add
pop
pushl
push
push
call
pop
enter
add
fldenv
add
add
add
sahf
add
pop
lcall
lock
add
push
sti
add
add
fdivrs
mov
jns
in
clc
pop
call
call
push
push
add
push
or
not
add
ror
sub
add
ror
pop
not
pop
push
lea
pop
pushl
push
add
not
pop
call
push
push
push
push
push
push
call
mov
mov
loop
add
jno
stc
in
movl
neg
add
iret
pop
pop
add
popl
add
add
add
call
add
push
add
fwait
jb
add
add
add
aam
add
icebp
push
lahf
flds
lcall
shrb
adc
xor
push
sub
add
xor
dec
inc
sub
xor
pop
shr
pop
push
inc
xor
pop
pushl
call
push
push
ror
add
sub
push
or
not
add
sub
ror
sub
shl
dec
add
dec
pop
ror
pop
push
push
inc
push
or
inc
add
shr
add
sub
ror
inc
inc
pop
lea
ror
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
mov
out
lcall
xchg
mov
faddl
mov
lock
xlat
mov
add
in
shl
je
in
add
add
add
push
sahf
mov
sub
pop
call
push
xor
pop
pop
dec
jne
push
push
call
sahf
xchg
mov
mov
roll
sahf
pop
add
add
gs
int
insb
push
shlb
mov
roll
add
adcb
lcall
incb
add
push
lea
push
lea
push
push
push
push
call
add
roll
ja
imul
insb
xchg
int3
mov
add
mov
scas
fsubr
add
add
shl
bound
add
add
sub
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
rcr
add
gs
mov
lahf
int3
fldl
sahf
add
add
add
cmpsb
add
add
mov
add
mov
jae
out
in
mov
jl
scas
mov
push
sahf
mov
pop
int
lea
push
push
shl
add
xor
push
or
inc
add
sub
xor
sub
add
sub
inc
pop
lea
add
pop
push
push
push
push
push
push
call
stc
mov
add
add
add
push
add
add
add
xchg
fadds
add
jge
jo
add
add
add
sti
add
fistpl
call
pushl
push
rol
shr
rol
pop
call
push
sub
sub
add
sub
pop
push
call
push
push
add
sub
not
push
push
pop
add
lea
ror
add
sub
not
xor
sub
pop
sub
pop
push
sub
pop
pushl
push
dec
sub
shr
pop
call
call
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
call
fisubrl
rolb
add
add
ret
add
lret
out
lcall
add
add
add
add
mov
add
ja
pop
movsb
aam
add
andl
mov
fwait
xchg
pop
in
cld
gs
fcompl
inc
cld
push
push
push
lea
push
push
call
mov
add
push
sti
lock
stos
add
pop
add
icebp
add
in
lods
add
mov
rcll
aam
add
xchg
hlt
ret
add
rclb
add
clc
mov
add
je
mov
add
push
sub
pop
lea
push
push
not
push
or
not
add
add
shr
sub
shl
pop
not
add
shr
pop
push
xor
pop
pushl
push
sub
shr
pop
call
push
push
push
call
cltd
icebp
add
cmpsb
ljmp
add
fwait
neg
adcb
out
fstl
mov
add
pop
add
shlb
pop
test
add
jne
cld
jle
rcr
add
scas
add
add
mov
add
lahf
fmull
sub
pop
lea
push
lea
push
push
push
push
push
push
push
call
mov
add
add
into
in
rorb
lret
test
push
roll
add
enter
mov
call
add
sahf
mov
add
push
xchg
clc
jge
pop
js
pop
call
add
fwait
mov
lcall
push
sub
pop
push
push
lea
push
call
add
add
push
add
clc
ljmp
add
jo
add
add
pop
mov
jmp
aam
in
pop
fiaddl
sub
pop
push
push
shl
pop
pushl
push
push
dec
shr
shr
push
push
pop
add
sub
lea
shl
sub
pop
inc
shl
rol
pop
push
push
push
push
push
push
lea
push
call
lret
in
mov
fwait
imul
add
rcll
ficoms
add
mov
xchg
xchg
gs
jb
mov
add
jnp
mov
add
mov
test
add
enter
in
repnz
imul
cmc
test
stos
test
in
in
lcall
push
push
call
test
add
mov
sarl
push
xchg
int
jno
mov
fucomi
add
add
out
xchg
rcl
mov
ficomps
ficompl
push
add
pushf
jae
mov
add
jno
xchg
add
pop
add
push
add
clc
lcall
shrb
scas
out
push
not
push
or
inc
add
xor
sub
sub
add
pop
add
pop
push
xor
sub
pop
pushl
call
push
push
push
push
lea
push
push
lea
push
push
call
test
fwait
shl
mov
fiadds
xlat
add
mov
mov
add
add
add
add
push
imul
mov
call
fldl
call
push
call
pop
je
sti
mov
add
jne
xchg
lahf
xchg
add
in
jge
add
adcb
mov
push
add
push
add
cwtl
pop
xchg
pop
pop
clc
in
add
mov
test
data16
shll
pusha
fiadds
shrb
lea
jmp
test
not
push
xor
add
sub
lea
xor
sub
dec
inc
pop
lea
lea
lea
shr
pop
push
inc
pop
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
sahf
fs
add
les
add
add
add
mov
lds
jne
filds
add
cli
push
add
pop
jbe
add
popa
add
add
roll
scas
stos
mov
sub
pop
call
push
inc
add
add
pop
call
push
inc
shl
pop
pushl
push
add
pop
mov
jmp
push
push
add
dec
add
dec
push
push
pop
add
shr
dec
add
sub
inc
add
shl
pop
ror
rol
xor
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
in
jge
pushf
add
xchg
call
roll
out
add
mov
loope
add
add
jl
test
pop
mov
pop
cmpsb
add
add
outsl
lret
add
cmc
add
jl
lret
imul
add
add
popl
add
mov
add
call
loope
sub
pop
pushl
push
sub
lea
pop
call
push
push
push
push
call
add
mov
push
add
clc
cmpsl
stc
jne
testb
sbb
add
ret
lods
add
add
xchg
out
add
add
mov
iret
fldl
faddl
add
lahf
add
add
pushf
xchg
mov
data16
add
pop
mov
pop
push
push
rol
shl
xor
pop
call
push
push
lea
sub
push
xor
add
xor
sub
lea
inc
sub
pop
sub
pop
push
add
add
shr
pop
pushl
push
lea
push
push
push
push
lea
push
push
call
lahf
add
addl
mov
test
lods
add
roll
rcrb
add
add
scas
add
jbe
cli
add
lcall
out
add
push
push
shr
ror
pop
call
push
add
inc
pop
leave
push
add
dec
inc
lea
pop
add
push
not
shr
pop
pop
push
add
pop
pop
push
lea
push
push
call
add
jmp
js
add
rcrl
mov
add
add
repnz
movsb
add
int
arpl
sub
pop
pop
push
sub
pop
xor
push
lea
push
lea
push
push
push
push
push
call
addr16
data16
pop
add
add
add
add
push
gs
pop
jge
push
add
add
add
add
loope
add
enter
shl
add
mov
mov
jns
pop
add
add
add
lcall
push
push
push
push
push
push
call
fiadds
mov
mov
add
add
add
push
into
jecxz
nop
mov
mov
lods
add
add
addb
lret
testb
add
test
scas
ljmp
add
cltd
add
fiadds
mov
add
add
add
mov
add
sub
pop
ret
push
add
add
inc
pop
leave
ret
push
lea
push
push
push
push
push
push
push
lea
push
call
outsl
push
scas
ja
rolb
cwtl
add
arpl
add
add
movsb
add
jmp
xchg
jae
add
add
lahf
roll
push
mov
add
mov
push
scas
iret
ljmp
lods
add
add
add
test
imul
xchg
sub
pop
push
push
ror
dec
add
pop
mov
push
pop
cmpl
jne
push
lea
push
push
push
lea
push
call
add
rcr
add
jae
in
add
add
add
mov
rcrl
pop
add
pushf
sti
repnz
sti
pop
mov
jecxz
add
mov
cmc
fcoml
test
add
ljmp
lcall
inc
and
push
sub
inc
pop
jmp
push
push
lea
push
push
push
lea
push
push
call
jmp
imul
mov
mov
jne
mov
push
add
xchg
add
jle
imul
imul
add
add
pushf
mov
add
addb
addl
pop
mov
push
sub
pop
and
xor
push
rol
xor
pop
xor
push
push
push
push
call
add
fdivrs
pop
xchg
pushf
add
xchg
std
ja
mov
add
push
add
push
push
sbbl
add
add
add
push
add
sub
shl
pop
xor
push
inc
sub
inc
inc
pop
dec
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
fldl
shl
jo
push
add
xchg
mov
into
add
add
mov
data16
pop
add
mov
add
int3
jle
jno
out
add
iret
add
popl
cmc
je
jae
fnstcw
fiadds
sub
pop
sub
push
ror
pop
jmp
push
push
push
lea
push
push
push
push
push
push
call
add
add
out
xchg
fldl
xchg
mov
add
je
add
mov
lret
scas
ja
add
hlt
add
add
fstl
cwtl
mov
mov
cmpsl
ret
jge
lea
lcall
add
add
pushl
push
shl
sub
pop
pop
push
add
pop
sub
cmp
jne
push
xor
pop
mov
lea
push
push
lea
push
lea
push
push
push
push
call
bound
jecxz
call
pop
add
add
je
add
int
jb
jp
mov
add
in
les
aad
xchg
add
add
jp
jnp
in
in
lcall
jmp
es
pop
mov
shr
push
add
pop
add
push
push
call
add
add
cmpsl
add
mov
scas
mov
loope
fldl
lahf
add
mull
lods
add
add
mov
add
add
add
mov
popl
add
add
data16
add
mov
add
add
fs
pushf
jecxz
test
filds
add
stc
jns
jl
pop
xchg
loopne
jl
in
clc
pop
sub
pushl
push
push
push
call
gs
xchg
lods
add
orl
jl
add
mov
xchg
lret
pop
mov
mov
mov
add
rolb
pop
pop
shr
push
dec
shr
add
pop
and
push
shl
pop
sub
push
push
push
push
lea
push
push
lea
push
call
mov
add
in
add
add
add
mov
pop
shll
add
fisttpl
add
mov
xchg
call
add
push
add
cmp
jne
push
push
push
push
push
push
lea
push
push
push
push
call
jnp
bnd
add
ret
add
pop
mov
roll
mov
divb
add
cltd
xchg
xchg
nop
imul
movsl
mov
fadd
add
add
test
xchg
call
mov
fnstenv
xchg
add
mov
les
mov
lret
mov
push
movsb
call
sub
pop
leave
push
pop
ret
push
ror
pop
push
push
lea
push
push
lea
push
push
call
jecxz
add
loope
jnp
jmp
add
je
mov
push
popf
rolb
mov
add
in
in
lcall
in
push
push
call
add
add
add
add
add
xchg
fnsetpm(287
mov
pop
xor
xchg
ja
xchg
add
push
loop
add
pop
scas
xchg
add
mov
jl
lcall
stos
out
stos
stos
add
jns
add
negl
jl
arpl
add
push
push
push
push
call
add
nop
ffreep
repnz
bound
xchg
jecxz
add
add
lret
pusha
jecxz
pop
add
loop
fs
add
add
outsl
std
xorb
add
cwtl
add
add
sub
pop
push
push
push
ror
ror
dec
pop
push
push
push
add
inc
shl
pop
push
push
lea
pop
mov
push
push
call
mov
add
test
add
add
add
pop
loope
fmul
mov
add
out
add
stos
add
fidivl
faddp
mov
add
add
add
add
xlat
add
fiadds
iret
je
in
popl
lcall
push
cmp
push
push
push
lea
push
push
call
test
ret
hlt
xchg
add
push
cmpsl
faddl
test
in
enter
rcl
std
add
add
outsl
fwait
iret
xchg
pop
xchg
add
push
add
add
in
call
sub
push
push
push
push
push
push
lea
push
call
mov
ret
cwtl
out
nop
add
add
add
out
movsl
iret
add
in
push
fs
jle
pop
mov
mov
add
out
xchg
add
jecxz
pop
roll
andb
stc
shlb
shl
pop
add
add
add
add
adc
ljmp
xchg
pop
add
push
dec
xor
not
pop
mov
push
sub
sub
pop
add
mov
push
sub
sub
pop
add
push
shr
lea
pop
xor
mov
push
inc
xor
pop
and
push
xor
sub
pop
rol
push
push
push
push
push
lea
push
lea
push
push
push
call
jecxz
xlat
lret
testl
xorb
pop
scas
add
ja
add
cmpsl
testb
push
in
add
fwait
mov
sahf
add
add
push
cli
pusha
sub
pop
rol
push
sub
dec
add
pop
xor
push
rol
pop
inc
cmpb
jne
push
push
push
push
lea
push
lea
push
push
call
add
fs
jb
mov
mov
pop
add
add
add
push
add
add
add
popl
loop
add
mov
sahf
add
addl
cmp
je
push
push
push
call
add
repnz
xchg
bound
add
xchg
add
enter
add
int
aad
pusha
jmp
xchg
add
lcall
ret
adc
not
add
shl
add
pop
cmpl
jne
push
dec
sub
pop
xor
push
lea
push
push
push
push
call
leave
push
xchg
add
add
stos
cld
mov
out
xchg
movsw
jno
add
int3
ljmp
mov
add
bound
add
add
jle
add
addl
lds
mov
into
sub
pop
pop
push
add
not
pop
pop
push
push
lea
push
call
add
add
cld
xchg
mov
add
lret
jae
jns
add
fcomps
out
stc
add
lds
add
pop
push
lea
pop
pop
pop
push
sub
add
pop
leave
push
push
lea
push
push
push
push
call
xchg
pop
mov
add
xchg
stc
stos
mov
aam
fidivs
add
add
call
jnp
add
addl
jno
roll
add
aam
pop
add
arpl
cld
stos
test
add
idivb
scas
add
in
add
adc
stos
xchg
add
sahf
add
jge
lahf
add
stos
stos
sub
pop
ret
mov
push
lea
push
push
push
push
call
loopne
mov
divl
std
pop
stos
popa
mov
fcoml
cmpsb
rcr
lods
add
mov
add
add
cmpsl
add
int3
fiaddl
add
fiadds
mov
add
out
push
aam
movsl
add
add
add
add
lcall
push
or
add
dec
add
add
in
mov
lahf
add
insb
jne
les
pushf
mov
mov
mov
xlat
pushf
addl
cmpsb
sahf
add
add
mov
add
add
call
add
rcll
mov
mov
lcall
add
push
push
lea
push
push
push
lea
push
push
push
push
call
insb
stos
add
cmpl
bound
add
fldt
jne
cwtl
xchg
je
shlb
movsb
jmp
jmp
xchg
pop
mov
xlat
into
movl
mov
sahf
test
pop
push
call
mov
mov
addl
push
pop
add
add
ja
rolb
add
add
pushf
stos
nop
out
addb
add
add
notb
jns
mov
movsb
mov
jbe
add
add
push
mov
cltd
cltd
mov
mov
mov
jmp
in
lock
pop
push
lea
pop
call
push
push
lea
push
push
push
lea
push
call
loopne
xlat
jge
add
mov
je
mov
lods
add
add
mov
jns
jge
cld
xchg
bound
add
shlb
add
in
mov
cmc
add
jle
icebp
popl
mov
add
mov
mov
test
add
pop
add
lcall
push
xor
pop
call
push
pop
xor
pop
push
push
push
lea
push
push
lea
push
lea
push
call
popf
rorb
jnp
add
add
add
pusha
add
xchg
imul
iret
fs
xchg
bound
xchg
mov
in
in
lcall
push
xor
inc
sub
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
jne
ja
mov
add
insb
add
pop
icebp
sti
add
mov
pushf
lock
jno
scas
add
addb
xchg
pop
push
push
push
push
call
enter
add
shll
lcall
add
add
jmp
xchg
add
add
mov
add
movsl
mov
add
js
testl
sub
pop
leave
ret
push
shr
add
lea
pop
push
push
push
push
push
lea
push
push
push
call
test
nop
mov
mov
add
add
add
add
mov
add
repnz
cld
lcall
movl
out
add
lods
push
mov
push
lret
add
call
in
in
mov
push
dec
pop
add
push
rol
pop
push
push
push
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
call
addb
movsb
push
jno
scas
sahf
insb
mov
push
add
shrb
scas
jns
add
jbe
add
add
aad
add
xlat
pop
add
add
add
loopne
lcall
pop
or
lea
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
repnz
loop
lahf
outsl
add
add
call
lods
leave
add
add
add
jp
add
add
cld
mov
mov
js
jmp
add
add
lods
add
mov
add
lcall
lea
push
shl
pop
sub
push
add
add
dec
pop
mov
push
push
call
aad
std
into
add
add
xchg
pop
add
lods
add
add
add
add
clc
xchg
add
sub
pop
shr
push
rol
ror
pop
add
mov
push
shl
pop
add
push
push
lea
push
lea
push
push
call
in
shrb
add
add
add
loope
add
loopne
add
cli
add
in
lret
add
mov
add
stc
mov
lret
add
add
mov
outsl
loopne
add
add
cld
mov
mov
sub
pop
pushl
popl
push
shl
pop
mov
push
rol
ror
pop
add
push
rol
xor
pop
xor
push
xor
sub
dec
pop
lea
push
push
call
negl
popl
fidivs
add
cltd
iret
cltd
add
add
add
add
add
mov
add
or
cld
add
cmpsl
call
add
sub
pop
mov
add
push
sub
inc
pop
xor
push
ror
pop
rol
push
add
sub
pop
nop
push
sub
shr
inc
add
pop
nop
push
push
push
push
push
push
call
jno
pusha
add
in
add
add
add
add
jae
jge
add
add
add
fists
push
jp
mov
add
addb
lret
add
add
adc
add
mov
stos
xchg
add
add
mov
mov
add
push
andl
pop
xor
push
dec
inc
inc
xor
pop
nop
push
lea
push
lea
push
push
lea
push
push
call
add
add
mov
add
pusha
add
add
stc
xchg
into
add
add
add
lock
in
add
add
sub
pop
nop
push
lea
push
push
push
push
push
push
call
add
add
fiadds
add
icebp
add
push
xchg
mov
int
add
jnp
popa
nop
mov
testl
insb
test
add
shl
xlat
add
add
add
mov
add
jb
add
add
nop
add
xchg
jne
pop
add
lcall
nop
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
adc
or
mov
rcr
push
jp
mov
mov
add
xchg
mov
ljmp
add
add
nop
ljmp
loopne
nop
push
add
xor
shr
pop
cmpb
jne
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
push
add
mov
jo
hlt
add
add
fcmovnbe
add
rclb
ficompl
nop
add
fld
add
add
add
faddl
fistps
pop
add
mov
cwtl
push
mov
add
xchg
xchg
add
mov
mov
in
loopne
lcall
inc
pop
ss
nop
push
not
rol
dec
rol
pop
nop
push
push
lea
push
call
add
cmc
shrb
flds
add
mov
gs
add
add
loop
lea
add
push
aad
flds
add
add
mov
mov
add
add
test
add
mov
negb
add
orb
lcall
inc
or
test
add
add
out
dec
pop
nop
push
sub
pop
nop
push
sub
pop
inc
push
add
pop
nop
push
rol
shl
add
pop
nop
push
push
call
popf
xorl
add
lahf
int
loop
add
mov
add
movsb
add
out
int
insb
rol
test
gs
roll
je
xchg
pop
ljmp
xchg
xchg
add
lcall
jne
jb
push
sub
ror
shl
pop
xor
push
push
push
push
lea
push
push
lea
push
push
call
add
add
insb
add
imul
pop
add
mov
pusha
fadd
push
add
add
add
stc
mov
mov
xchg
add
lock
add
add
in
leave
shll
rolb
jae
add
push
add
movsb
add
push
add
mov
fs
sub
pop
jmp
mov
push
push
push
push
push
push
push
push
call
out
add
add
in
add
jge
mov
sarb
add
add
pop
add
add
xlat
add
addl
add
insb
repnz
mov
push
jp
jb
add
lods
add
js
ljmp
loopne
lcall
rorl
mov
jb
push
lea
push
lea
push
push
push
call
xchg
ret
mov
add
jp
stos
mov
mov
add
add
fwait
add
add
add
mov
add
cmpsl
mov
movb
mov
mov
lcall
inc
sbb
push
push
push
lea
push
push
push
push
push
call
pop
add
mov
cli
add
pop
jl
add
jb
cld
out
add
sahf
filds
xchg
add
add
jnp
leave
cmc
add
lcall
add
out
jae
call
add
add
movl
add
mov
test
test
add
pusha
add
add
jle
mov
lcall
rcll
push
lea
push
push
push
lea
push
push
call
add
pop
out
add
add
add
cltd
add
add
cli
add
test
mov
xchg
jb
add
add
push
std
sahf
lahf
add
pop
add
xchg
addr16
addb
scas
addl
addl
les
add
mov
add
push
add
lcall
dec
hlt
xor
push
add
shl
pop
xor
push
push
push
call
int
add
add
add
sahf
add
fwait
mov
add
add
cltd
cli
mov
add
mov
shrb
movb
add
lahf
jl
jecxz
xchg
add
add
xchg
mov
in
hlt
pop
shl
push
lea
push
push
push
push
push
push
lea
push
call
add
out
out
add
mov
add
scas
nop
lcall
xchg
push
fstpl
int3
mov
outsl
mov
add
roll
pop
push
add
add
jnp
add
hlt
add
mov
add
in
loopne
lcall
dec
nop
add
pop
sbb
xor
xchg
call
add
lods
jp
shl
mov
mov
mov
rolb
add
add
test
add
jl
push
add
add
add
jno
add
mov
int3
jns
push
add
jbe
jecxz
jbe
out
add
xchg
xchg
add
aam
add
lcall
loope
push
xor
pop
xor
push
lea
push
call
lods
sahf
shlb
bound
add
je
lcall
xchg
movsw
movsl
ret
lods
subl
push
add
mov
add
push
xchg
add
fwait
mov
mov
testl
jmp
ret
in
clc
lcall
loope
push
not
pop
xor
push
push
push
push
push
lea
push
call
test
sahf
shl
movb
add
add
add
add
jb
pop
xchg
mov
leave
add
js
add
jo
add
out
test
add
mov
movsl
add
jne
sub
pop
mov
add
push
lea
push
call
add
jbe
push
jns
lcall
cmpsl
add
mov
add
jl
add
add
sahf
movsl
add
mov
add
add
iret
lcall
clc
lcall
push
push
push
push
push
push
push
push
push
push
call
add
scas
insb
sahf
add
andl
cld
lods
loop
add
fsubl
mov
xchg
push
jbe
loop
add
mov
add
lea
lret
jne
add
sahf
out
pop
cmpsl
andl
add
add
add
lcall
push
inc
xor
rol
pop
pop
push
shl
shr
pop
pop
push
shr
sub
sub
pop
leave
push
shr
shr
ror
pop
ret
push
not
pop
push
push
not
ror
pop
mov
push
push
push
push
call
add
add
sbb
add
add
in
test
popa
lock
in
xchg
push
cld
mov
ret
add
lods
imul
movsl
loopne
mov
mov
lcall
add
add
cmpsb
shl
lods
mov
lea
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
out
add
imul
pop
add
mov
jno
mov
add
add
fistl
pushf
imul
jnp
in
pop
add
mov
add
add
add
test
pop
add
stos
add
arpl
filds
movsl
jecxz
addl
imul
add
pop
push
push
push
lea
push
push
push
push
push
call
add
test
gs
lea
clc
lahf
fildl
add
add
add
push
jb
add
ljmp
mov
lcall
dec
or
adc
jns
push
lea
push
lea
push
call
mov
mov
lret
in
add
add
add
addr16
add
add
lds
scas
mov
jns
ror
push
add
mov
push
ljmp
imul
lcall
jge
test
je
push
ror
pop
mov
push
not
pop
test
je
push
push
lea
push
push
push
call
add
rolb
popa
loop
jge
push
test
add
bound
in
cwtl
add
add
add
clc
add
mov
cltd
test
scas
mov
scas
push
xchg
xchg
xchg
in
test
add
add
stos
add
ja
popa
hlt
mov
xchg
add
add
in
add
notl
ljmp
dec
jle
sti
lea
push
push
push
push
push
push
call
test
mov
add
mov
mov
addb
mov
out
cli
push
insb
pop
xchg
popf
mov
xchg
movsl
add
add
add
lea
mov
add
shl
push
imul
add
add
add
jp
popa
movsl
bound
add
add
add
add
in
push
add
push
add
addb
or
pop
push
lea
pop
inc
push
shl
shr
pop
cmp
je
push
ror
pop
test
je
mov
push
lea
push
push
push
push
push
push
call
pop
cmc
cli
jle
orb
fildl
add
scas
xchg
sarb
add
add
add
in
mov
int3
jns
in
in
lcall
cmp
je
push
add
pop
test
jne
push
rol
not
pop
xor
pop
push
push
push
lea
push
call
mov
add
mov
jbe
idiv
add
xchg
mov
lahf
add
imul
rcl
add
scas
into
xchg
bound
add
add
add
enter
jmp
stos
mov
add
sub
pop
pop
pop
push
rol
lea
pop
pop
leave
push
push
call
add
cmc
pusha
pop
add
add
movsl
add
add
add
jno
add
add
jbe
push
add
add
in
out
jmp
lods
out
loope
clc
pop
in
outsl
loope
int3
add
add
add
clc
lcall
or
mov
push
push
call
mov
rclb
clc
add
stos
add
arpl
add
call
pop
xchg
jb
add
add
ja
add
into
add
roll
in
clc
lcall
push
dec
pop
cmp
jne
push
shl
inc
pop
lea
push
push
push
push
push
call
add
leave
add
jbe
mov
lock
js
sarb
add
mov
push
add
outsl
in
add
add
mov
lahf
test
movsb
sub
pop
mov
test
je
push
add
rol
pop
mov
push
shr
pop
add
push
push
push
push
lea
push
lea
push
call
pusha
add
jmp
add
push
add
add
stc
leave
ret
add
add
popa
add
xchg
in
add
lea
mov
lcall
loopne
test
std
call
aad
adc
xor
adc
add
add
in
std
add
push
add
add
ja
add
mov
xchg
push
add
in
mov
add
add
movsb
add
add
test
loop
imul
add
add
push
add
add
lret
push
outsl
add
fmuls
pop
mov
push
lea
push
call
add
jb
outsl
xlat
imul
add
sar
xchg
leave
ja
xchg
fisubs
loopne
add
mov
scas
data16
ja
icebp
mov
stc
add
lret
clc
pop
test
je
mov
push
sub
pop
add
push
add
rol
pop
cmp
je
jmp
push
push
lea
push
push
push
push
call
add
lea
stos
add
cmc
std
xchg
mov
xchg
pop
add
add
fs
negl
mov
test
fdivl
push
add
cmpsb
jmp
pop
js
add
add
lahf
loop
test
fadds
mov
add
in
call
xor
pop
push
rol
dec
pop
pop
pop
push
shr
lea
pop
pop
push
rol
pop
leave
ret
push
add
lea
pop
lea
push
lea
push
push
push
call
add
aam
pusha
mov
adc
jno
add
xchg
xlat
lds
add
add
sar
mov
add
add
add
push
incb
add
sub
pop
pop
pop
push
push
push
push
lea
push
push
push
call
jge
add
movsl
add
add
mov
xchg
pop
imul
mov
add
push
les
jp
add
jo
jp
ret
add
fdivrl
sti
add
add
testl
add
in
pop
pop
push
push
push
call
shl
add
add
lods
push
fdivs
xchg
xchg
mov
mov
ja
mov
add
popf
lods
cmpsb
add
add
roll
add
addl
mov
jle
andb
add
add
out
jbe
add
popa
mov
add
into
jae
bound
out
push
add
pop
leave
ret
push
sub
sub
pop
mov
push
shr
pop
pop
push
push
call
add
test
add
mov
add
add
in
jl
push
les
add
add
fstpt
add
in
mov
stc
fisttpl
insb
add
shrb
xchg
add
faddl
iret
scas
pop
faddl
sti
mov
outsl
incb
frstor
jo
mov
jmp
stos
gs
add
clc
lcall
push
push
lea
push
push
call
pop
rolb
add
add
rclb
stos
imul
xchg
mov
out
add
call
test
add
add
add
rcr
mov
add
add
lcall
pop
push
lea
not
pop
leave
push
push
push
push
call
add
out
cmpsl
lahf
add
in
jl
pop
jns
add
add
lods
add
add
cld
add
pop
jl
jl
aad
add
mov
mov
lret
add
flds
loope
shlb
bound
xchg
mov
add
add
addl
loopne
jnp
shrl
sub
pop
ret
cmp
mov
inc
lret
mov
into
mov
ror
mov
mov
mov
repz
dec
mov
xchg
lret
or
mov
in
xor
and
mov
lcall
sbb
and
dec
fnsave
or
cmpsb
sub
mov
les
outsl
nop
test
lahf
and
and
mov
gs
out
mov
test
mov
mov
repz
scas
lock
push
into
fcmovne
xor
aad
cwtl
push
loope
fwait
test
xchg
push
scas
iret
mov
cmp
scas
sbb
inc
jecxz
and
jno
mov
adc
fs
push
out
fwait
xor
mov
hlt
adc
sbb
adc
add
and
ret
inc
lds
or
adc
push
insl
xor
gs
mov
sbb
sub
pop
jbe
insl
adc
cmpsl
cli
and
or
xlat
sub
adc
push
repnz
push
in
lcall
lea
cltd
ds
pop
jle
lret
gs
inc
les
sbb
xlat
test
gs
dec
orl
jle
jmp
pop
popa
cmp
jle
out
xlat
data16
addb
mov
shll
rclb
sub
pop
mov
push
or
lock
shrl
adc
xchg
int3
mov
fstps
in
jo
mov
popa
push
aaa
inc
xor
sbb
mov
sahf
add
fisubs
pop
xchg
xor
sti
push
shrb
dec
out
pop
cmpsb
shr
push
aas
jb
jnp
jne
mov
xor
jg
sar
mov
lock
adc
jle
cld
sbb
and
push
mov
adc
cwtl
inc
aad
mov
push
and
out
je
jns
in
inc
imul
cli
int3
sti
fildl
fucomp
fidivs
jb
rcrb
ficoml
out
mov
les
push
xchg
out
xchg
jp
es
loopne
and
xchg
adc
or
jp
mov
cli
or
insl
clc
inc
fdivs
adc
jmp
jb
cmc
lret
push
repnz
jp
sbb
dec
dec
bnd
jge
jo
mov
or
xlat
lock
in
or
xchg
inc
mov
pop
loopne
test
lahf
mov
stc
ss
mov
into
mov
movsb
loopne
dec
pop
inc
cmpsb
pop
enter
fiaddl
iret
cmp
arpl
jle
rorl
clc
mov
sub
fidivrl
ficompl
mov
mov
and
add
inc
pushf
inc
lds
and
adc
inc
nop
and
dec
push
fists
lock
pop
and
and
lods
loopne
push
inc
and
fstpt
dec
loop
xchg
xchg
and
mov
xchg
pop
mov
xchg
adcl
sbb
add
xchg
mov
xor
mov
cmpsb
mov
stos
mov
imul
ss
in
jp
ret
in
jne
jnp
dec
ret
es
sub
scas
add
jge
xchg
loope
add
adc
cmp
xchg
ljmp
inc
std
xlat
loopne
push
xor
sub
mov
in
dec
sub
jb
mov
fdivl
lret
and
or
pop
das
jbe
stc
sub
pop
lods
pop
aaa
cmp
mov
mov
add
pop
adc
or
jo,pt
aas
push
push
mov
rclb
int3
outsl
jmp
int3
ret
inc
pop
int
data16
sbb
xor
mov
push
ficoms
sbb
pushf
jns
cwtl
xor
sti
mov
mov
cmpsb
pop
cmp
repnz
push
push
dec
in
fwait
cs
add
dec
xorb
pop
cltd
addl
movsl
dec
sub
fwait
je
dec
or
ds
push
insl
or
mov
or
pop
int
popf
mov
mov
mov
mov
stos
and
fsubrs
sub
call
rorb
scas
mov
inc
dec
xor
and
jb
dec
cmp
call
repz
jp
out
fisubs
jae
xor
xchg
or
sub
or
jle
or
pop
mov
sub
xchg
pop
shlb
fcmovnu
out
dec
inc
pop
adc
mov
test
and
xchg
fstpl
loopne
and
sbbb
inc
in
cmp
lahf
cmp
rclb
mov
adc
cmp
sub
pop
and
or
push
lock
dec
shlb
push
rolb
push
sbb
jmp
into
lock
add
imul
stos
pminsw
inc
enter
repz
test
push
sbb
inc
mov
mov
or
jg
sbb
jo
aaa
inc
insl
stos
inc
rcrl
jge
push
mov
mov
push
mov
loopne
je
and
mov
mov
xor
pop
mov
bound
push
shll
lret
and
gs
xchg
popa
xchg
sub
test
popa
fs
lea
cmp
sbb
cmp
and
movsb
rolb
pop
mov
aam
pop
dec
mov
imul
mov
inc
cmc
push
and
mov
sub
rorl
or
push
inc
xchg
call
test
setns
sbb
movsb
cmpsl
sti
mov
in
inc
into
ret
mov
repnz
pop
jle
jmp
scas
adc
popf
fs
leave
mov
data16
xor
inc
in
lds
cmpsl
imul
fstl
adc
sbb
cmp
cmc
jbe
test
orb
xchg
xchg
shrl
mov
inc
push
pushf
jno
testb
pop
mov
stc
es
out
lret
sub
push
ret
dec
fidivl
enter
scas
or
sub
in
or
jmp
pop
pop
pop
hlt
mov
enter
das
enter
dec
pop
shrb
cwtl
add
pop
rcrl
in
pop
cmp
adcb
int
fildll
mov
subl
mov
aas
mov
mov
subb
arpl
movsb
jg
mov
dec
adc
enter
push
cmp
lock
and
sarl
sub
add
dec
ss
nop
jmp
loope
iret
cld
in
push
rcll
pop
fucomip
ret
jbe
sub
mov
ficoml
inc
cmpsl
fstl
mov
mov
aam
and
dec
mov
dec
jnp
cmpsb
xor
addb
inc
bound
rcl
inc
sub
mov
xor
insl
mov
out
in
jge
push
insl
dec
add
push
movsl
add
adc
aam
jge
psubsw
push
in
mov
sbb
push
xchg
scas
into
sahf
pop
sub
lahf
xlat
push
ret
adc
pop
lret
push
dec
mov
add
push
arpl
push
xchg
ret
mov
sbb
hlt
jmp
sti
cmp
push
movsb
push
popf
sub
jmp
movsb
daa
jb
stc
clc
loope
lods
pop
and
jne
xor
mov
enter
roll
mov
pop
in
leave
mov
cmp
mov
pop
jb
xchg
clc
cmp
jg
push
cmpsl
scas
adc
cltd
ljmp
xchg
dec
shl
dec
enter
or
test
cmp
jmp
sbb
popf
pushf
mov
imul
daa
xchg
mov
jp
cltd
xor
jle
fs
mov
xchg
insb
add
test
mov
hlt
jmp
mov
lcall
loopne
nop
dec
dec
sbb
sub
leave
dec
xor
adc
cmp
mov
jb
jmp
push
mov
ret
mov
loop
adc
xor
nop
inc
xchg
jb
imul
push
adc
gs
into
ja
ret
xchg
sahf
fistpll
and
enter
fwait
in
mov
mov
cmp
cmp
add
ljmp
push
xchg
xor
add
and
aam
hlt
test
mov
mov
push
pop
lahf
fsubs
pop
xchg
es
call
mov
xchg
jle
aam
leave
push
push
jecxz
or
addr16
or
add
cmp
mov
jns
out
pop
mov
into
lods
enter
jp
orb
and
cmp
mov
test
inc
ja
rcrb
sbb
sub
and
imul
out
in
je
sub
fists
dec
sub
push
loop
pop
cs
lods
push
je
mov
lret
inc
push
loope
adc
imul
sbb
cmp
mov
clc
aaa
inc
out
nop
or
loop
fiaddl
fcmovnu
cmpsl
mov
lds
add
xchg
cmp
push
pusha
aam
add
lods
cmp
push
aad
ret
mov
push
adc
lea
rol
lods
sbb
cli
ret
outsl
push
out
addr16
jg
push
ret
int3
add
sbbb
dec
jo
call
rolb
rclb
sbb
adc
fisubrl
push
and
jo
js
inc
leave
test
fisubs
js
mov
xchg
mov
and
add
sub
jge
adc
lods
jbe
shrb
mov
nop
adc
ret
inc
cmc
and
iret
mov
inc
jnp
scas
or
notl
cmp
sarb
aaa
scas
dec
xor
sbb
fwait
int
jae
push
pushf
shlb
cmpsl
or
loopne
icebp
nop
xchg
dec
insb
xchg
pop
movsb
out
aaa
cmp
ret
fsincos
and
pcmpgtb
pop
lcall
push
xchg
in
inc
ljmp
push
xchg
cmp
mov
jg
std
cs
adc
jbe
push
mov
mov
mov
sub
daa
and
lods
fisttps
mul
andb
in
cmp
inc
mov
sbb
xor
mov
jno
pop
mov
pop
mov
lods
aam
std
ret
add
or
push
lcall
ret
nop
and
imul
jae
fdivrl
fwait
add
ret
outsb
mov
adc
lock
nop
ja
xchg
mov
jl
mov
sbb
push
pop
mov
fucomip
jmp
jbe
cwtl
imull
sub
lret
cmp
cmc
aaa
sbb
rcr
push
les
sti
and
mov
daa
push
sti
loop
iret
repz
loope
mov
fisttpl
sbb
xor
scas
adc
rcrl
scas
cs
movsb
adc
leave
outsl
lcall
je
mov
fadd
or
adcb
xchg
push
xor
add
pop
cmp
aad
popa
into
out
loop
bound
dec
add
stc
cmp
daa
mulb
rcll
mov
dec
stc
add
xlat
and
sti
test
adc
test
pushl
jnp
xchg
mov
sti
cmpsb
push
dec
xlat
repnz
pop
mul
ds
into
sahf
jle
jne
jle
call
mov
and
rclb
and
std
mov
popf
sbb
sub
xlat
xor
leave
scas
or
pop
aam
push
inc
nop
mov
cwtl
add
sbbb
cmp
out
add
ja
ljmp
and
jmp
mov
ljmp
loop
sub
fldl
ljmp
or
loopne
adc
bound
call
sbb
je
xor
call
scas
enter
fmull
popa
and
mov
dec
inc
cmpsl
jp
fidivrs
inc
popa
aas
in
push
dec
pop
fcmovne
xchg
inc
inc
or
push
mov
fucom
movsb
xchg
sub
dec
xchg
popf
jo
loopnew
sbb
sub
fldl
rol
lret
lds
cmp
ret
mov
pop
divb
or
cmp
jp
xchg
aad
cmp
adc
or
dec
mov
ss
popa
ficompl
mov
ficoml
fsubrs
jbe
in
add
lahf
shlb
adc
adc
js
push
inc
xor
je
iret
push
xchg
jb
jle
aas
in
stos
cmp
test
in
push
cmc
movsl
adc
or
adc
pop
das
adc
hlt
jne
lods
hlt
jae
cmpsl
scas
inc
lods
push
mov
fsubr
pop
imul
pop
xchg
push
adc
mov
dec
cltd
inc
push
inc
loopne
incb
jnp
mov
pop
xor
in
sbb
inc
jp
mull
lock
jnp
xchg
les
adc
mov
cmp
popa
pop
jmp
push
sarb
xlat
sub
fxch
inc
push
rcr
sub
out
loopne
ja
sub
lret
and
sarb
pop
xchg
push
leave
popa
pop
lock
pop
std
sub
mov
xor
lds
cmc
xchg
fucomp
call
rcr
pop
or
adc
decb
pop
ljmp
cld
jecxz
inc
mov
and
sub
xor
add
xchg
ja,pn
cmp
sahf
dec
jae
mov
cld
nop
sub
stos
enter
and
sbb
xchg
dec
adcl
add
mov
and
stos
jbe
or
push
sbb
cltd
fdivs
sbb
sbb
shrb
ja
int3
shl
ficomps
lock
mov
loope
js
mov
push
push
jb
cmc
mov
sbb
sahf
cli
or
pusha
xchg
out
cmp
je
stos
mov
loop
dec
stos
add
subl
testl
inc
push
sarl
pusha
roll
call
ja
leave
sbbl
push
xchg
out
fidivrs
leave
fld
pop
call
das
ds
dec
imul
xor
pop
movsl
neg
push
je
add
cmpl
rorl
lods
in
popf
and
fdivrs
sti
mov
cmp
add
or
aas
fwait
mov
scas
pop
fwait
push
sahf
scas
sbb
aaa
mov
mov
enter
push
push
mov
mov
dec
cmp
sbb
fsubrs
push
mov
and
or
and
scas
aam
in
pop
mov
scas
sti
xor
dec
stos
pop
mov
add
inc
jge
dec
shlb
xchg
lahf
jmp
push
sbb
dec
lahf
xor
popf
lret
incl
popf
cmp
jbe
and
sbb
jmp
sbbl
lret
cmc
cmp
and
fstp
sub
adc
sbb
or
int3
lret
push
adcl
arpl
push
jae
sahf
cld
sti
not
jno
iret
mov
stos
adc
sti
adc
fistl
cld
push
andl
inc
loope
pop
loopne
out
sahf
mov
inc
sub
xor
mov
pop
push
repnz
cmpsl
jnp
in
aaa
data16
scas
int3
add
adc
into
sbb
cmpsb
dec
xor
sbb
mov
xchg
xchg
xchg
jnp
lods
adcl
cld
push
dec
and
pop
push
adc
loope
sub
mov
andl
push
fadd
roll
orps
pop
loope
fdiv
xor
mov
mov
int
sbb
mov
mov
mov
movsb
mov
xchg
and
ljmp
mov
mov
iret
and
out
in
and
in
lret
push
jnp
xorb
jo
and
popf
add
rcrb
xchg
loop
pop
push
lods
js
es
dec
push
push
mov
lret
sarl
aam
movsb
cmp
pop
nop
add
mov
iret
mov
jmp
xorb
mov
cmp
out
jne
dec
pop
jl
pop
addr16
iret
loopne
imul
bound
lods
nop
clc
sbb
and
add
sub
icebp
adc
cmpsb
jle
test
rclb
dec
stos
mov
mov
adc
subl
lock
shl
mov
cwtl
ret
orb
or
pop
loope
inc
cmp
fists
out
cmp
gs
cld
stc
nop
dec
stos
inc
in
outsl
aad
sbb
nop
bts
and
mov
mov
das
aam
xor
push
rcrl
scas
loopne
ret
cmp
sbb
loop
sbb
jl
adc
push
in
mov
das
cmp
lods
ret
and
cld
dec
rcll
mov
vzeroall
xor
bsf
lret
inc
jmp
inc
addr16
jnp
mov
lea
cmp
daa
cld
daa
jb
fs
sub
out
enter
cwtl
adc
sub
inc
adc
ljmp
fstps
into
sbb
jg
loopne
into
inc
mov
fs
out
rorl
jmp
psubq
sbb
adc
cmp
daa
dec
mov
lcall
and
cltd
jno
js
out
or
mov
push
gs
call
enter
pop
in
xlat
movsl
cmc
daa
subl
js
and
sub
repnz
idivl
xor
popf
test
jg
inc
mov
aad
movsl
adc
aam
jecxz
loopne
and
cmpl
mov
std
ss
add
ds
dec
imul
enter
push
lods
cmpsb
std
aas
scas
int
inc
or
sub
sub
imul
repnz
lret
mov
test
and
pop
dec
and
je
outsb
and
push
pop
inc
loopne
mov
out
or
mov
int3
cli
xchg
adc
es
repnz
inc
adcl
xor
fistpll
lods
pop
sub
dec
sbb
pop
out
sbb
mov
xchg
xor
test
adc
mov
ja
inc
adc
imul
pop
pop
sbb
xor
mov
cmp
insl
xor
fnstsw
test
std
int3
xchg
insb
sahf
xor
mov
out
push
in
sub
dec
mov
in
sbb
push
inc
scas
jecxz
cld
std
cmp
inc
or
shl
push
xor
mov
int3
xor
jae
xchg
sbb
jp
test
push
outsb
cmp
dec
int3
xor
enter
inc
mov
call
jmp
loopne
lods
dec
out
test
add
insb
fistps
enter
hlt
mov
dec
xor
pop
and
les
sbb
dec
nop
cmp
addr16
xor
out
je
leave
inc
loop
mov
xchg
aam
fldt
test
inc
divl
push
xor
into
dec
xor
test
scas
sub
sub
cmpsl
jle
push
inc
cmp
cld
push
push
addr16
sbb
jmp
lods
sub
xor
test
push
shl
xor
iret
cld
add
and
jl
lahf
fcoms
lods
test
mov
cli
lods
xor
aaa
pop
xor
aas
push
mov
dec
dec
popf
repz
lcall
test
adc
sbb
insl
lahf
push
add
fwait
roll
jnp
cmp
mov
add
lret
js
or
nop
jmp
daa
xchg
popa
shll
mull
push
push
xor
mov
in
mov
insl
mov
pop
aam
mov
es
cmc
mov
jnp
mov
int
test
test
jns
or
push
xor
and
jp
jno
push
jnp
cmp
test
or
xchg
loopne
ljmp
fwait
negb
inc
je
les
or
push
pop
xor
xchg
call
sub
lret
ljmp
mov
and
adc
fmuls
jecxz
and
push
cmpsb
and
mov
push
enter
dec
loope
ficoml
and
adc
adc
mov
pop
pop
std
andb
ja
int3
xor
mov
call
test
insb
lea
inc
cs
mov
lcall
leave
movsb
arpl
in
mov
pop
js
sub
sub
push
js
or
push
mov
out
mov
sub
fadds
insl
adc
mov
out
es
ret
scas
jg
mov
dec
sub
lds
cmpsl
dec
mov
cmp
push
imul
mov
xchg
jne
call
sbb
fcmovnu
mov
mov
fwait
jge
mov
sub
out
xor
stos
dec
jl
dec
leave
fiadds
in
pop
mov
lods
cmp
adc
dec
ljmp
cs
cld
jno
aad
cmpb
fcomip
lret
mov
testb
adc
push
in
sub
mov
cwtl
movsb
add
mov
push
test
cmpsl
pop
sbb
mov
out
shlb
movsl
aaa
aam
mov
xor
loopne
dec
into
ljmp
cmp
insb
sti
pop
sbb
push
pop
repnz
mov
orl
sbb
jne
fnclex
out
sbb
sahf
mov
mov
scas
cmpsl
hlt
jle
nop
push
pop
jb
xchg
jne
sbb
lods
fdivrl
mov
mov
mov
leave
add
mov
mov
mov
pop
movsb
test
cld
mov
push
pop
or
cwtl
jp
negl
push
pop
cli
push
sbbl
add
mov
pop
aas
test
ficoml
jne
lret
or
push
and
and
lods
pop
pop
in
in
sbb
loopne
push
or
lods
cmpsl
sub
dec
ss
jp
bound
pop
pop
pop
aam
jo
cltd
sbb
jg
fdivrl
mov
loopne
push
adc
ret
jle
icebp
sbb
lds
les
outsl
sub
cmp
jno
insb
xor
inc
in
iret
mov
outsl
addr16
mov
xchg
clc
dec
ror
cmpl
pushf
addr16
xchg
xchg
insb
and
xor
sub
imulb
std
jmp
data16
stos
sti
sbb
fcomps
and
add
lahf
xchg
cmp
jne
insl
jp
push
jne
add
inc
push
sti
xchg
mov
mov
pop
sub
jl
mov
mov
aam
xchg
push
mov
jp
xor
out
mov
lods
movsb
mov
cmpsl
out
bnd
lret
setl
cmp
fdivs
pop
push
mov
nop
cmp
pop
lds
fnsave
add
jp
inc
roll
leave
call
jle
pop
rorb
dec
dec
iret
sub
mov
movsb
xlat
push
fcoms
stos
xchg
cmpsl
movsb
ljmp
push
out
jmp
jo
pop
aaa
sub
jo
hlt
jle
aaa
push
add
lret
xchg
fcomps
jmp
ljmp
shr
in
push
iret
adc
push
movsl
cld
popa
jp
push
xor
sbb
cmpsl
pop
mov
repnz
jl
mov
and
movsl
push
pushf
mov
fsub
mov
xchg
jp
lret
cli
xor
adc
aas
scas
loopne
mov
sbb
xchg
stc
mov
arpl
sti
dec
push
fsubl
testb
sti
andb
xchg
dec
jmp
and
mov
push
popw
in
rclb
inc
mov
cli
inc
repnz
sarl
push
cmp
add
cs
in
sbb
js
jp
add
xchg
sbb
int
mov
pop
in
mov
dec
and
pop
iret
jbe
cwtl
mov
xor
nop
mov
mov
mov
pop
daa
mov
test
sbb
xor
lcall
cmp
pop
cltd
or
xor
sbb
js
addr16
inc
scas
cmp
xlat
xchg
imul
cmp
sub
push
fdivr
loope
fisttpll
push
xor
push
test
out
aaa
sub
and
outsl
lods
dec
out
out
xchg
pop
inc
cmp
pusha
lock
arpl
inc
or
sub
ret
add
xor
jle
or
fcomp
xchg
dec
mov
inc
mov
cwtl
test
sbb
pusha
lds
dec
imul
adc
push
xchg
ret
and
test
mov
cmpsb
adc
sbb
dec
or
sub
jae
pop
cli
xor
or
popa
dec
jne
pop
ret
and
and
aas
es
sub
int3
push
push
sub
pop
fisubs
lock
cmp
cld
pop
cs
dec
mov
mov
gs
sbb
daa
jmp
add
test
push
repnz
and
lea
xchg
cmp
pop
ja
aad
rorl
push
sub
lret
mov
xor
add
lahf
test
lcall
mov
pop
js
hlt
jb
sub
push
roll
dec
bound
cmp
cmp
subb
adcl
outsl
push
jns
or
scas
sahf
cmp
pop
imul
shll
jl
cmc
adc
clc
addb
movsl
iret
popa
jecxz
push
push
or
jb
mov
and
arpl
jmp
aas
movsl
pop
pop
adcl
push
jno
push
outsb
inc
dec
lahf
jb
add
outsb
pushf
stc
inc
loopne
ret
or
jp
cld
mov
das
cld
test
fs
xor
fistpll
cmove
fidivs
xchg
outsl
jo
push
push
pusha
add
xchg
or
jge
data16
repz
clc
add
xchg
jnp
je
mov
add
test
dec
cmp
mov
dec
imulb
or
mov
aam
inc
push
adc
mov
fisubs
ret
and
and
lods
rcrl
pop
xor
xlat
mov
pop
mov
loope
dec
jecxz
pop
dec
xchg
mov
mov
in
lds
rolb
outsb
xor
cmp
lahf
push
loope
repz
clc
or
add
ljmp
pop
push
xor
stos
ljmp
mov
cld
lretw
mov
mov
pop
sti
push
aas
pushf
out
adc
lcall
push
test
fldcw
aad
scas
int
inc
dec
pop
xchg
pop
dec
xchg
mov
in
scas
push
fldl
hlt
pusha
fadd
hlt
stos
loopne
or
dec
pop
push
cwtl
test
jecxz
addr16
push
ret
iret
aad
xlat
jl
cmpl
sub
enter
mov
insb
adc
movsb
push
stos
inc
fdivrl
rol
pop
scas
cltd
cmpsl
scas
mov
cltd
mov
lcall
pop
imul
xor
push
out
add
fisubl
xchg
jae
stos
lcall
sarl
dec
fwait
jl
inc
addr16
cmp
lock
setle
adc
scas
pop
fwait
loopne
addb
fwait
push
cltd
in
cmc
and
cmp
inc
pop
xchg
xchg
movsb
in
adc
push
mov
jmp
mov
and
dec
in
das
push
loope
into
lcall
lods
jg
mov
or
leave
decl
push
clc
sbb
cmp
repz
mov
xchg
pop
pop
scas
stc
adc
adc
fwait
in
testl
popa
lea
xchg
jbe
cld
add
jne
sub
js
cmp
jns
mov
cmp
call
sub
xchg
add
into
jmp
popa
dec
int3
mov
mov
pop
push
and
push
lahf
dec
xor
sub
les
inc
lahf
or
out
add
mov
mov
inc
inc
lds
fwait
sbb
xchg
mov
or
inc
and
in
adc
or
ja
push
mov
leave
in
mov
dec
ljmp
das
mov
enter
out
pop
jnp
rclb
pop
loope
dec
lock
int3
or
hlt
or
mov
not
or
fbld
stc
cmp
test
push
jmp
out
xchg
mov
cmpsb
daa
push
in
or
out
ret
dec
jns
pop
cmp
movsb
pop
jns
or
sub
sahf
mov
and
divb
and
cmp
xor
cmpl
mov
sub
gs
xor
add
or
push
sbb
lods
push
clc
fdivrs
sarb
stos
mov
lret
daa
sub
cmpsl
in
std
leave
movq
cmp
inc
ret
das
scas
int
call
push
push
inc
or
cli
sbb
fiadds
cltd
or
mov
or
das
test
stos
adc
ds
cltd
mov
loope
push
out
push
stc
sarl
cli
adc
stos
mov
push
incb
push
inc
xchg
lea
arpl
iret
xchg
add
aas
std
mov
sbb
xbegin
cmc
inc
mov
jle
mov
push
mov
mov
push
mov
aas
test
jecxz
xchg
call
mov
sti
cmc
push
add
push
test
fstpl
mov
cmp
cmc
xchg
push
inc
aad
push
popf
xor
adc
mov
xchg
fmuls
mov
adc
cmc
movsl
mov
dec
mov
xor
aad
xchg
test
jnp
jp
dec
add
es
and
cwtl
lahf
or
adc
lods
push
sub
lret
pop
nop
mov
add
mov
insl
jg
cmp
dec
shl
xchg
aas
mov
cmp
xor
sub
jmp
popf
ljmp
xlat
or
and
sub
inc
inc
sub
dec
push
pop
mov
jle
and
sub
sbb
fimull
mov
xchg
or
sub
sahf
int
clc
or
pusha
into
aaa
and
pop
les
jae
and
and
leave
in
call
addr16
lcall
cmp
sub
fmull
cmc
loope
out
aaa
aad
fisttpl
cwtl
adc
or
xchg
test
push
test
pop
jmp
mov
push
call
les
adc
dec
insl
inc
push
or
fnsave
rolb
pop
xlat
pusha
imul
push
stos
aad
mov
and
pop
and
inc
icebp
imull
jmp
add
leave
mov
imul
mov
repz
pop
in
push
xorl
jnp
xchg
mov
mov
insl
std
mov
and
push
mov
loope
pop
imul
imul
inc
add
mov
dec
imul
movsl
xor
or
adc
fildl
push
ret
dec
mov
bound
push
les
jecxz
sub
mov
pop
roll
or
xchg
dec
pop
fs
sbb
aas
fidivrs
jge
lock
aas
mov
movsl
mov
adc
test
mov
mov
shl
jns
jp
lock
jge
cmp
movsb
inc
mov
xchg
xor
inc
shlb
xor
in
lock
mov
sbb
jno
orl
xchg
mov
mov
push
daa
or
mov
mov
add
push
dec
fs
pop
aas
adc
dec
xchg
lock
popf
push
xchg
xor
push
jno
jp
fimuls
inc
xchg
ds
push
mov
xchg
popa
in
push
inc
mov
icebp
cli
sub
cld
jne
mov
xchg
xchg
aam
movsl
adc
bound
mov
imul
fwait
insb
fistl
inc
push
sub
sahf
lret
loopne
je
fdivrl
xchg
hlt
test
pop
xchg
mov
push
pop
jo
rclb
sub
jge
push
pop
in
jb
daa
add
mov
pop
mov
xchg
or
jne
dec
sbb
pop
mov
cmpsb
das
pop
incl
aam
mov
shr
sub
ds
push
ss
loopne
mov
jo
mov
in
mov
addr16
sub
push
pop
inc
cmc
mov
mov
std
push
sub
insl
cmc
mov
cmp
out
iret
gs
lea
enter
xchg
in
jne
rcl
shrl
in
ret
mov
lock
dec
adc
loope
pop
jbe
jle
je
ret
aaa
jnp
out
cs
mov
cmpb
cmp
xchg
mov
pop
rol
mov
loopne
fmull
xchg
stos
fcmovb
cmpsb
outsl
mov
sbb
lret
sub
jo
cs
mov
fistpll
into
jns
fucomi
mov
inc
data16
fisubs
xor
push
add
inc
ficomps
test
sub
ret
mov
js
lods
sbb
out
imul
in
pop
dec
adc
test
es
scas
and
adc
fsqrt
lret
xor
gs
test
mov
push
fmul
gs
loope
leave
in
leave
dec
inc
and
data16
jnp
cld
adc
add
inc
std
rclb
cmc
push
shr
leave
gs
cs
pop
jecxz
adc
stc
or
jecxz
inc
mov
aam
repnz
in
cmp
jecxz
pop
inc
add
sbb
lcall
popf
jbe
mov
loope
mov
clc
mov
xchg
enter
xchg
das
insl
lods
out
ja
jmp
mov
inc
into
xor
push
ljmp
arpl
and
xor
fistpll
push
xor
inc
inc
xchg
lahf
mov
fsubs
and
test
loope
adc
mov
rcl
dec
jb
xchg
scas
sbb
mov
fmulp
gs
lret
push
scas
push
push
jb
cmp
shrl
outsb
jmp
in
sbb
jb
xchg
xor
pushf
dec
ja
pop
push
lret
andb
pop
sub
std
and
sar
fcoms
fnsave
pop
pop
in
fldenv
adc
inc
pop
and
orb
cmpsb
cwtl
mov
cwtl
stc
add
mov
push
repz
iretw
repnz
pusha
jle
mov
addr16
sbb
and
sub
lods
lods
mov
add
push
popa
push
cltd
fwait
xor
repnz
jmp
pop
xchg
clc
inc
xlat
mov
dec
xchg
xchg
mov
cmp
jo
cmp
and
push
inc
cmc
push
icebp
icebp
mov
pop
cs
mov
ret
push
movb
clc
pop
test
push
add
and
rcrl
mov
mov
pop
insb
pushf
jle
add
add
mov
adc
leave
or
stos
mov
inc
xchg
lods
inc
fwait
ret
pop
stc
out
add
xchg
movsl
lcall
xchg
xor
rcr
inc
imul
mov
jne
popa
orb
int3
xchg
cmp
rcl
mov
sahf
mov
mulb
pop
mov
cmp
pop
pop
in
add
or
addr16
aam
sub
and
mov
sbb
mov
bound
ret
ret
jecxz
aam
mov
insb
mov
inc
bound
ret
pop
sub
push
xor
mov
loope
ss
cmp
cmp
pop
js
xchg
sub
test
aas
lods
jmp
or
ljmp
aas
shll
lret
aaa
jno
jmp
lret
sbb
dec
jl
cmp
insb
movsb
push
xchg
mov
push
inc
js
call
and
outsb
imul
test
cmp
and
addr16
loop
leave
outsb
xor
jo
sbb
mov
add
push
add
loopne
xchg
lods
out
inc
lahf
ret
nop
mov
leave
std
movsl
clc
flds
xchg
jmp
in
aam
popa
push
lock
sbb
fsubrl
lock
mov
and
mov
add
or
pop
lcall
mov
add
add
add
loope
test
loopne
fsubs
add
push
arpl
cli
mov
cwtl
movsb
cli
mov
icebp
test
int3
pop
xchg
je
cmpsl
and
cwtl
rclb
shlb
cmp
movl
gs
iret
cmp
push
test
pop
idivl
lret
mov
and
cld
mov
push
add
insl
mov
das
enter
stos
mov
sbb
popa
dec
mov
fidivl
shlb
insl
std
mov
fdivrs
pop
lret
scas
das
add
sbb
in
mov
mov
les
flds
jle
jle
sahf
ss
mov
mov
lret
dec
fisttps
cmpsb
cs
enter
sahf
xor
call
inc
int3
and
iret
ljmp
daa
hlt
movsb
sub
out
jae
push
call
shrl
dec
mov
pop
jle
fildl
sar
mov
imul
inc
jno
movsl
xchg
cmpsl
or
es
scas
movl
push
cltd
pop
nop
out
mov
data16
cmp
mov
sub
mov
in
pop
pop
cs
sahf
sub
lahf
push
mov
push
xchg
cmp
mov
push
insl
outsl
aam
and
ds
movsb
bound
aad
stos
inc
jp
divb
add
orl
aaa
push
je
xchg
repnz
mov
pop
xchg
pop
scas
stos
jmp
mov
xchg
pop
adc
sub
sbb
add
lods
in
jno
test
stos
sub
fstpt
mov
xor
ljmp
cmc
mov
aam
psllq
pop
lods
jnp
iret
xchg
fwait
mov
ljmp
das
dec
call
loop
dec
sub
neg
cli
mov
cmc
sarb
orb
xchg
or
in
jecxz
lret
adc
out
mov
cld
mov
gs
dec
arpl
push
jl
loopne
mov
cmp
or
jecxz
stc
push
add
in
scas
add
test
fisubl
into
fisubrs
pop
or
aad
add
es
aad
sub
mov
ja
dec
hlt
popa
mov
cld
mov
cmp
aaa
in
scas
test
sub
in
out
les
dec
fldl2t
jbe
mov
pop
clc
mov
in
xchg
sbb
sahf
sub
cli
xlat
enter
ss
pop
inc
and
mov
test
aad
sbb
imul
pavgb
pusha
mov
adcl
inc
mov
or
mov
add
mov
data16
xlat
cld
movsl
pop
inc
sub
mov
loop
cwtl
ljmp
mov
dec
das
xor
lock
jns
out
ret
xor
daa
sbb
sbb
mov
push
xchg
js
inc
mov
insb
dec
rcll
cmp
add
sbb
imul
jbe
popa
xchg
xchg
or
or
jne
push
or
jno
mov
mov
sbb
add
lock
jo
mov
hlt
lret
or
dec
ret
sub
push
xchg
jle
out
and
cli
push
repnz
push
in
aaa
or
clc
cmp
pop
rcrb
and
pop
or
pop
xchg
inc
xchg
sub
lret
lds
xchg
mov
cwtl
sub
pop
push
lds
lret
cltd
lret
repz
scas
dec
and
pop
int
and
movsb
aas
mov
repnz
scas
scas
das
loope
or
fcmovnu
imul
cmp
aad
jnp
mov
jle
push
dec
in
fbstp
sbb
fs
sub
push
xor
push
or
pop
sahf
sti
cmpsb
popf
inc
loopne
outsl
add
jo
sub
outsl
jp
ds
jns
mov
sub
int
addl
or
sbb
insb
loop
sbb
xchg
pushf
pop
mov
lahf
xlat
shlb
popa
shrl
mov
testb
stc
addr16
hlt
push
testl
or
sbb
push
sub
into
gs
xchg
mov
mov
testb
jg
daa
jge
lret
inc
pop
sub
inc
mov
hlt
dec
sub
sub
out
or
aam
push
movsb
das
lods
js
push
fsubrs
mov
adc
push
pop
insl
data16
pop
or
hlt
loope
add
out
fdivs
push
mov
cmp
data16
jmp
pop
repz
dec
shl
add
jle
hlt
mov
jl
pushf
mov
fmuls
lahf
mov
inc
mov
mov
mov
mov
sbb
in
xor
xor
out
cmc
pop
jne
mov
lock
icebp
enter
sarb
insb
inc
fs
and
or
insl
or
cmc
sub
xor
dec
push
hlt
icebp
mov
in
xchg
or
dec
pusha
and
mov
xor
loop
in
lret
inc
into
jle
lea
mov
outsl
lahf
push
cmp
mov
sub
push
and
push
or
add
bound
scas
int3
add
sbb
mov
add
dec
inc
ret
adc
enter
mov
lea
push
dec
cs
out
xor
jge
fimull
jno
testl
xor
mov
xlat
ret
shlb
and
push
rcl
jecxz
mov
mulb
loope
stos
fdivrs
je
mull
ljmp
pop
jae
lds
jmp
mov
jnp
out
loopne
or
stos
inc
xor
sub
pop
sbb
test
cld
ss
mov
add
aas
sub
sub
jle
mov
imul
pop
dec
sar
pop
std
mov
repnz
repz
jp
mov
jo
xchg
lods
stc
push
xor
sbb
cmp
sbb
pop
ret
mov
ret
mov
jo
and
aaa
sahf
fstps
mov
andb
add
pop
jo
fwait
divb
xchg
int
mov
outsl
inc
xchg
push
or
imull
leave
adc
jno
in
inc
or
inc
cmp
push
test
arpl
pop
lods
lock
fsubl
int3
xor
mov
xor
sub
mov
sbb
dec
adc
push
inc
outsl
xchg
mov
jae
std
push
xchg
inc
addr16
fcomps
test
jo
insl
jae
clc
fisttpll
push
push
outsl
push
rcrl
add
push
mov
xorb
jnp
int3
jmp
mov
cwtl
push
std
mov
sub
mov
xchg
pop
or
push
lea
lret
dec
and
mov
push
and
popf
int3
in
or
pop
pop
and
shrl
pop
loop
xor
daa
cwtl
not
push
mov
jle
or
jge
mov
jns
push
mov
dec
mov
push
repnz
mov
jb
inc
test
add
mov
mov
fwait
xlat
pop
jae
xorl
push
sub
jp
sub
xchg
adc
cltd
loope
rclb
cmp
bound
pusha
adc
xchg
dec
fsubrl
bound
std
inc
sbb
dec
xor
adc
sbb
lock
insl
lret
mov
pop
lahf
enter
xchg
fisubl
cs
lret
adc
fwait
sub
xchg
ret
cmp
cmp
sbb
pop
sahf
mov
mov
cmc
fists
je
test
dec
xchg
inc
test
sbb
call
mov
add
nop
push
ds
vpslld
mov
addr16
jno
sahf
ret
std
arpl
mov
call
test
lds
pop
sarb
or
xor
xchg
sbb
adc
andl
loop
mov
sub
repz
sbb
pop
mov
lods
push
mov
das
xor
nop
enter
test
ret
xor
push
and
in
std
mov
sbb
xchg
data16
inc
in
sub
cltd
cltd
mov
or
inc
mov
iret
frstor
out
add
push
xchg
push
in
stos
cmp
pop
push
stc
jne
inc
sub
mov
cs
and
test
sbb
test
mov
orb
push
into
xchg
mov
rol
sub
aad
mov
push
mov
test
mov
add
add
scas
js
cli
jns
inc
jno
dec
fs
arpl
cmp
jge
repnz
ja
insl
xor
cmc
mov
aad
mov
arpl
pop
sub
lret
mov
je
inc
and
push
fistpll
cli
jns
xchg
sbb
filds
imul
scas
not
push
push
xor
and
xor
mov
push
inc
in
add
scas
inc
jmp
mov
sub
jge
sub
pop
jo
push
imul
xchg
pop
or
mov
lea
imul
mov
cmpsl
push
fiadds
jecxz
enter
nop
lds
jnp
push
add
inc
pop
jecxz
es
dec
lcall
mov
sbb
jnp
push
and
jmp
and
push
cwtl
ljmp
jge
lock
or
scas
aad
repnz
int3
popa
int
lods
jg
repnz
xchg
fwait
cmp
cmp
in
aam
and
sbb
fs
enter
jmp
inc
jecxz
cmp
scas
cmp
push
fs
es
pop
int
xor
add
imul
inc
sbb
xor
inc
inc
stc
rorb
sbb
cli
mov
mov
lea
adc
mov
fs
xchg
js
enter
je
mov
xchg
in
xchg
bound
jecxz
mov
outsl
andb
pop
pop
jbe
add
mov
dec
push
cmpsb
cmpl
leave
push
mov
dec
arpl
into
jno
sbb
adc
add
clc
jnp
movsl
int
iret
push
rorl
sbb
cmp
fstpt
pop
cmp
mov
cmc
stos
int3
std
inc
fwait
sbb
mov
sub
xor
xchg
icebp
jnp
sub
mov
add
out
jns
dec
adc
jle
fstps
pop
dec
out
out
outsl
pushf
dec
xor
jbe
sti
mov
mov
add
stos
pop
mov
push
stc
inc
imul
sarl
jno
jp
xor
test
or
divb
cmpsl
sti
jp
das
mov
test
out
xor
fisubrs
cmp
xor
adc
dec
push
jl
sub
push
test
ds
lret
inc
jmp
ss
mov
pushf
mov
addr16
mov
cmpl
stc
lea
push
jmp
andb
out
shll
mov
dec
mov
cmp
pop
mov
mov
rolb
dec
out
movsb
orl
call
jge
test
xor
sti
mov
and
dec
pop
and
loop
push
je
outsb
mov
outsl
pop
inc
mov
mov
sbb
mov
aam
clc
fcoms
push
push
mov
popf
xor
inc
mov
cmc
sti
sub
je
xchg
xchg
cwtl
sub
cmp
inc
mov
test
cmc
roll
lea
xlat
sbb
push
cmp
xchg
xlat
mov
push
repnz
or
les
fcomps
in
ds
sub
mov
or
movsl
sub
sub
adc
jno
lock
add
negl
mov
pop
inc
or
loope
rcr
pop
ljmp
ficoml
fisubs
fsubrl
aad
xchg
repz
cmpsl
out
cmpsb
xchg
cld
cwtl
inc
push
mov
pop
or
mov
sub
adc
push
enter
cmpsb
sub
ljmp
mov
jns
pop
sbb
hlt
and
in
adc
stc
push
in
clc
nop
sahf
insl
mov
cwtl
inc
fdivl
movsl
stc
mov
adc
jae
pop
sub
xchg
mov
push
jmp
and
mov
xchg
inc
aaa
jle
dec
pushf
xor
adc
test
into
ss
inc
ljmp
jb
or
ret
sti
in
dec
mov
ljmp
jns
insl
mov
lretw
imul
sub
out
cltd
daa
ss
cwtl
adc
push
mov
inc
pusha
loopne
push
pop
shld
jns
out
inc
mov
loop
cli
mov
xchg
cli
mov
push
out
int3
pop
sub
sub
xchg
adc
add
and
mov
inc
ss
sti
add
xchg
adc
out
jns
outsl
pop
clc
sub
mov
and
or
pop
or
dec
and
sbb
inc
repnz
push
test
imul
dec
jp
inc
imull
dec
xchg
jns
mov
bound
js
lret
sahf
inc
movsl
xor
neg
ss
mov
xor
sahf
xchg
mov
lea
xor
sub
xor
fmull
aas
cmp
and
adc
pop
inc
lret
push
cmp
out
pop
pop
lea
xlat
mov
sbbl
sub
xor
adc
jae
loop
stos
sbb
aaa
repnz
test
insl
imulb
dec
mov
sbb
jmp
dec
xchg
xor
push
stos
lret
jne
nop
cmp
dec
loope
push
inc
and
jmp
test
xor
pop
jecxz
push
sbb
mov
add
xor
loopne
jne
cli
fidivl
push
test
testl
mov
dec
out
push
inc
vpmacsswd
and
out
push
pop
das
or
push
fmull
cmp
movsl
ret
lock
inc
adc
neg
mov
hlt
mov
inc
pop
jnp
fstpt
cmp
jge
pop
ljmp
jg
ljmp
test
xor
xchg
jp
mov
xor
or
out
or
aam
inc
mov
xor
push
push
movl
xor
orl
clc
push
cmp
push
dec
imul
jnp
mov
je
inc
pop
js
jae
es
movsl
movsl
or
mov
cli
scas
or
pop
and
push
xor
hlt
add
sub
push
xor
mov
inc
add
mull
pop
arpl
xchg
adc
cmp
xchg
add
in
je
mov
xchg
jns
aam
in
mov
movsl
jmp
mov
mov
sbb
outsb
aas
lods
inc
cmp
adc
iret
mov
test
dec
inc
in
jb
test
insb
icebp
pop
mov
pop
out
cmp
lds
inc
jle
sarl
out
ret
xor
jmp
arpl
dec
adc
addb
stos
dec
jbe
push
cmp
add
pop
cmp
repz
xlat
jecxz
xor
mov
out
iret
gs
repz
cmp
add
int
jns
lock
aad
cmp
xchg
in
rcrl
out
jns
add
mov
shrl
xor
sub
out
cmp
cmpsl
pop
mov
sbb
xlat
dec
lret
push
xchg
jno
mov
add
ret
xor
mov
test
pusha
aaa
stos
pop
sub
and
mov
fidivl
scas
lret
aad
jb
mov
xchg
mov
dec
pop
mov
or
mov
jnp
adcl
aam
or
lret
stc
xchg
xchg
dec
sub
cmp
jne,pt
jp
idivl
xor
adc
jno
cmc
lods
xor
mov
mov
cmp
inc
loop
jmp
pop
mov
sbb
push
subb
add
test
aas
xchg
mov
int
jae
mov
lahf
or
push
mov
fidivrs
shl
adc
test
cmp
jns
inc
scas
into
adc
push
sub
or
arpl
addb
loopne
xchg
inc
mulb
or
out
es
sarb
inc
loopne
jmp
add
js
shr
test
fdivr
cld
aam
jle
mov
insl
addr16
mov
cmc
dec
ss
jno
mov
and
aam
in
jecxz
dec
fimull
mov
cli
mov
lds
xlat
mov
mov
sbb
imulb
imul
push
inc
es
adc
fdivrl
imul
mov
sbb
fisubs
xchg
movsb
js
lods
pop
and
dec
mov
push
fisubs
lret
lods
dec
rclb
add
out
mov
gs
adc
loop
push
outsl
jp
aad
inc
mov
lods
xor
dec
cld
dec
push
push
shr
repnz
aam
push
mov
sbb
int
cmpsl
ds
bound
pop
cmpsl
out
cs
inc
ljmp
fbld
lret
jg
les
ljmp
mov
scas
and
sti
cmc
push
dec
cltd
jge
mov
xchg
arpl
pop
lods
xchg
cmp
or
sarl
jnp
testb
cmpsb
jg
xchg
mov
imul
pop
xor
or
outsl
xor
fwait
push
lock
into
and
mov
inc
fnstsw
or
lock
imul
fimull
push
sub
jl
lods
loop
lcall
rcll
inc
push
push
mov
lcall
ja
jb
or
mov
dec
add
mov
ret
popa
sub
xor
xlat
dec
notb
aaa
jno
xchg
fwait
pop
fwait
inc
test
std
mov
jnp
sarb
lods
sub
push
add
enter
push
daa
js,pn
loopne
aaa
jmp
fidivrl
in
mov
add
push
ds
fiadds
push
and
cmp
lock
cld
cmpb
dec
jmp
mov
aad
lahf
sahf
mulb
ret
xor
cltd
outsb
inc
pop
cwtl
add
sub
icebp
idivl
popa
incl
push
insb
mov
adc
inc
adc
lret
adc
leave
loopne
push
loop
sub
jo
enter
inc
inc
int
ds
jl
shlb
inc
daa
push
clc
cmp
sub
jecxz
pop
cs
push
xchg
stos
or
inc
fimuls
lods
cmp
mov
cli
or
cmp
and
nop
push
ja
lock
adc
cmp
hlt
arpl
dec
push
cwtl
mul
scas
fnstsw
leave
push
out
cltd
je
aaa
xchg
mov
jnp
rcrb
jns
mov
es
lock
push
js,pt
out
pop
test
push
jg
dec
xlat
js
inc
cld
in
sub
aad
shll
hlt
movsb
or
ret
filds
mov
mov
adc
lcall
js
subl
pop
dec
movsl
and
and
push
inc
out
mov
pop
test
in
scas
loopne
xor
jmp
sub
lcall
dec
jg
or
mov
jne
jnp
mov
jns
jmp
mov
mov
mov
mov
pop
jne
push
sarl
stc
sar
jge
mov
cltd
add
xor
fidivs
insb
pop
jbe
pop
loopne
out
adc
mov
mov
pop
cmpsl
enter
mov
scas
pop
lods
xchg
lret
sub
mov
lea
jno
inc
addr16
gs
xor
xor
sti
sbb
adc
out
aas
jmp
rol
xor
add
int3
xchg
cmp
enter
push
cmc
ljmp
cmp
inc
aam
arpl
xchg
and
xor
mov
int3
dec
jbe
ret
addb
adc
mov
mov
fldl
cltd
pop
xchg
mov
mov
pop
push
scas
jmp
add
inc
jo
rcrl
jno
sti
add
pop
pop
stc
shll
cmp
lret
cmp
fsub
cwtl
adc
inc
das
and
and
jno
cmovnp
iret
xchg
xor
std
or
add
fldl
mov
push
lods
mov
jb
xor
mov
jb
addb
cmc
popa
mov
ror
xchg
je
repz
ret
insl
or
and
shrb
sti
inc
cwtl
jge
ret
sahf
sbb
cli
mov
xor
mov
mov
daa
pop
vdivss
stos
cmc
clc
icebp
aaa
pushf
mov
cmpsl
out
mov
push
mov
lahf
jmp
mov
cmc
pop
addr16
lahf
push
adc
pop
mov
pop
dec
adc
xlat
sub
ja
mov
hlt
mov
lea
lock
fdivl
or
ljmp
sbb
daa
jbe
movsb
xchg
stc
xchg
push
sbb
frstor
cld
and
repnz
lods
jp
and
jnp
fwait
ja
mov
mov
rcr
out
jecxz
xlat
or
mov
in
jg
inc
popf
ds
xchg
adc
jb
ret
inc
jp
inc
rcrb
jg
inc
and
into
jno
rcrb
iret
xor
sbb
js
call
stc
mov
mov
sbb
jge
repnz
lods
mov
dec
mov
sbb
inc
sub
adc
sti
jae
sbb
mov
push
jb
dec
outsl
movsl
mov
mov
pushf
adc
sub
adc
adc
icebp
inc
mov
adc
outsl
jmp
clc
iret
loop
sub
jmp
dec
sbb
ret
adc
sub
xchg
iret
cwtl
jmp
or
into
inc
mov
popf
std
cmpsl
jb
adc
call
stc
pop
leave
pop
jns
loopne
sub
xchg
aas
andb
dec
je
jno
mov
and
pop
into
cld
mov
jp
test
cmp
hlt
mov
xchg
ljmp
filds
das
lret
mov
rorl
xor
dec
inc
test
mov
lods
dec
mov
or
in
lret
lock
jb
ljmp
movl
mov
gs
and
ss
scas
jb
xlat
inc
jge
cltd
imul
fdiv
stos
xor
mov
push
xor
inc
iret
push
xor
lea
notb
dec
test
adc
jo
mov
sub
into
mov
push
outsb
xor
std
je
jne
pop
outsb
aad
push
fnstsw
inc
adc
aam
jnp
adc
pop
leave
xchg
mov
push
ja
or
cmp
iret
or
in
mov
cmp
push
sub
ret
and
mov
movsl
jns
xchg
adcl
xor
or
add
xchg
lcall
add
jae
ljmp
and
ljmp
pop
iret
adc
int
and
cmp
cmp
push
fidivrs
and
push
inc
jns
xor
mov
jp
andb
add
push
data16
xor
enter
pop
xor
jg
fdivl
scas
popf
mov
in
push
scas
adc
xchg
or
outsl
xor
mov
add
jne
icebp
push
add
or
sub
or
or
mov
jmp
stos
lea
push
mov
sub
mov
clc
xchg
imul
xor
jl
dec
loope
mov
xor
xor
or
hlt
bound
mov
mov
std
ss
add
lock
dec
mov
ljmp
dec
cwtl
scas
icebp
sub
adc
mov
test
js
or
loopne
xor
das
xorb
scas
mov
cmp
or
pop
or
in
sbb
inc
pop
push
sbb
push
push
mov
movsl
lock
imul
imul
repnz
fsubr
fists
shrl
lret
jae
pusha
cltd
popf
inc
dec
out
and
push
mov
fcomps
lea
ss
dec
lds
push
in
adc
cli
orb
mov
test
call
ror
mov
subl
mov
outsl
xor
push
mov
sub
or
cmc
fnstcw
int3
je
scas
out
add
mov
add
mov
sub
push
out
add
in
popa
js
cli
insb
inc
clc
adc
pushf
jbe
lcall
inc
or
adc
pop
cmp
mov
aam
out
sbb
xor
jae
mov
jns
sahf
shrl
jmp
imul
out
aad
mov
aam
jp
js
std
pop
es
int
add
push
push
push
ljmp
mov
roll
push
pop
sub
mov
dec
adc
pop
jne
mov
gs
lret
sti
test
xor
outsb
pop
xchg
xchg
pushf
loop
pop
vmovhps
mov
movsl
mov
pop
and
lret
lock
xor
lret
xor
je
addr16
push
outsb
scas
lock
sarb
mov
sbbb
insl
or
inc
shlb
inc
lret
loope
mov
xchg
push
lcall
rolb
inc
xlat
cmp
sbb
test
xchg
pop
ret
icebp
call
or
fmull
out
sbb
ja
jns
adc
jne
xchg
cmc
and
xchg
push
shrl
out
cmpsb
cwtl
xchg
xchg
push
lret
jae
adc
ret
xchg
or
stos
call
xor
sub
lods
das
jne
pop
das
mov
xor
cmp
imul
push
jns
sub
cmc
xchg
sbb
xor
ror
mov
add
mov
inc
add
sbb
into
push
out
mov
pushf
push
adc
mov
aam
adc
aad
sub
rcrb
arpl
enter
pop
mov
dec
jae
adc
sahf
add
sbb
inc
xor
add
xlat
dec
xlat
jle
clc
dec
popa
push
add
aaa
inc
call
notl
shll
xor
je
cmp
aaa
xor
jle
jbe
cmpsl
pop
mov
movsb
fimuls
jecxz
dec
xchg
adc
je
mov
mov
add
stc
inc
adc
lds
mov
dec
cmp
dec
lods
arpl
mov
scas
pop
fwait
pop
faddl
cli
xor
mov
bound
int3
sbb
lahf
jo
fs
jns
iret
sbb
cld
jg
sbb
scas
add
movsl
mov
add
hlt
mov
mov
fidivrl
pusha
in
repz
add
mov
aad
idivl
outsb
lock
cwtl
inc
or
and
int
lock
push
push
jp
std
pushf
push
push
jecxz
mov
loope
lahf
test
pop
loope
add
je
xor
pushf
sbb
cwtl
js
js
cmp
scas
xor
xor
pop
mov
push
addr16
mov
sahf
xor
sub
mov
loop
je
outsb
lret
shrl
sub
mov
inc
mov
xlat
aas
xor
xchg
dec
fidivs
dec
jbe
mov
dec
xchg
and
and
loope
jne
cli
outsb
mov
xor
das
adc
mov
sub
inc
lret
sti
push
sub
inc
cwtl
repz
xchg
dec
dec
mov
or
pop
or
xchg
testb
adc
test
mov
pop
mov
popl
mov
dec
or
call
ljmp
or
xchg
add
out
dec
xor
cmp
push
outsb
xor
mov
popf
xor
loop
sub
mov
rcrb
rcr
jbe
popa
inc
jb
jge
popf
push
or
push
jecxz
pop
mov
push
pusha
mov
adc
dec
lods
or
jne
idivl
jne
inc
dec
lret
leave
pop
cmp
pop
aaa
push
mov
or
adc
adc
rcl
adc
div
fildl
jg
adc
add
pop
sub
and
popf
mov
push
imul
cltd
jns
lods
outsb
imul
sbb
lods
test
and
loopne
arpl
sub
lea
jo
seta
out
pop
notl
loope
test
sbb
ret
jne
mov
fnstenv
scas
adc
sbb
shl
mov
jns
sub
jmp
jmp
sub
in
mov
test
test
repz
lock
add
inc
mov
xlat
sbb
je
test
sub
jbe
repz
stos
insb
inc
in
jle
cmp
in
daa
in
out
pop
jge
cmp
fdivp
push
push
add
repz
jnp
mov
insb
cli
nop
mov
add
lock
mov
adc
dec
add
cmp
dec
dec
mov
flds
xor
add
and
loopne
add
sub
icebp
sub
dec
cld
adc
xchg
orb
enter
push
push
push
jae
in
sub
sub
lods
xor
addr16
pusha
or
pop
cltd
cwtl
pop
add
or
sub
sbb
std
xor
and
loop
cmp
mov
fisttps
xor
loopne
in
xor
mov
push
and
ds
sbb
cwtl
in
sbb
ljmp
dec
arpl
adcl
sbb
jmp
sbb
cmp
add
pop
sbb
inc
and
mov
loop
sub
rsm
or
adc
jmp
cmpsl
jmp
int
sub
and
adc
add
mov
mov
jecxz
incb
cmc
adc
addr16
or
push
inc
nop
fsubl
or
ljmp
rcrl
mov
xchg
gs
js
insb
mov
jns
pusha
es
xlat
test
loop
push
dec
outsl
mov
outsl
cmc
not
inc
add
and
adc
dec
pop
sti
pop
divb
jmp
lcall
pop
shll
ss
in
enter
enter
push
xchg
data16
xchg
mov
cmp
xchg
jo
icebp
lods
xor
xlat
pop
sbb
les
and
int3
mov
repz
sub
scas
inc
cmpsb
mov
in
mov
ljmp
and
addr16
dec
stos
pop
mov
sub
mov
mov
loopne
adc
dec
cmp
sbb
xchg
cmc
aam
inc
dec
xchg
insl
and
fistpll
push
mov
xchg
dec
cwtl
jge
daa
push
xor
daa
dec
sbb
pop
testl
outsb
pop
sbb
cmp
adc
push
and
std
and
or
aaa
or
dec
push
mov
cmc
push
mov
mov
pop
es
ret
outsl
fbstp
adc
inc
insb
cmp
cmp
out
call
cmpsb
xchg
arpl
pop
cmp
sarb
fst
rcrb
push
stc
sbb
xchg
push
outsl
sub
pop
cld
and
jb
fcomi
sub
aaa
sub
mov
ss
imul
mov
pusha
aam
dec
mov
test
push
add
js
and
adc
popw
pop
stos
daa
xchg
adc
pushf
cmp
fildll
dec
pop
cmpsl
push
cmpsl
add
xchg
popf
inc
dec
pop
pop
pop
mov
sub
hlt
jno
mov
lret
pop
xor
mov
mov
xor
dec
jp
movsl
movsb
int3
jg
iret
testl
pop
add
xchg
ja
sub
stos
cld
ret
sarl
fcoms
fmulp
push
push
ss
out
sub
in
adc
jnp
adc
mov
pusha
jg
xchg
xchg
xchg
clc
pop
loopne
stc
pop
pop
pop
fistps
add
cld
dec
push
in
mov
lahf
inc
movsb
mov
xor
cmpb
test
pop
or
out
aaa
movsl
fcomp
sbb
sub
mov
inc
inc
shlb
fidivrs
scas
test
jne
adc
out
add
rcrl
mov
int3
and
in
or
or
test
std
ror
pop
out
mov
inc
cmp
incl
sbb
push
inc
or
mov
out
lret
stc
add
sub
incb
mov
cltd
jno
pushf
mov
test
pop
stos
outsl
xor
popf
aam
lods
inc
xor
sbb
stc
sub
push
mov
xor
xchg
mov
ss
lods
cmp
aad
push
daa
mov
mov
popa
push
ss
jl
in
dec
sti
addr16
into
and
jns
jne
repnz
mov
lea
adc
and
xchg
mov
xchg
jno
repz
inc
icebp
mov
call
int3
jmp
jecxz
addr16
pop
lock
or
in
push
and
xor
shr
push
xor
data16
das
add
push
dec
ret
mov
decl
and
mov
bound
dec
cmp
jae
fmull
mov
add
xor
dec
sub
dec
testl
ss
insl
mov
mov
mov
notb
xchg
stos
test
or
push
in
pop
mov
and
pop
ljmp
mov
or
js
add
add
adcb
ret
shll
cli
fcompp
mov
mov
gs
notb
pop
mov
adc
push
cmp
jne
adc
aam
push
mov
pushf
gs
stos
roll
lahf
ret
lea
dec
push
mov
jae
inc
sub
sub
shl
cld
pop
incl
pop
xor
xchg
lahf
scas
mov
les
push
dec
addr16
lea
jl
in
sub
jb
hlt
fidivrs
mov
mov
pop
popf
or
fmuls
pop
fucom
inc
add
lock
jae
xor
mov
std
outsb
mov
add
or
shll
jmp
push
sub
sbb
jbe
sti
sbb
sub
sbb
adc
js
mov
addb
mov
rol
mov
xchg
push
adc
aad
dec
fchs
sub
test
ret
and
jnp
js
and
and
mov
arpl
xchg
not
fcoms
mov
or
sbb
rcrl
int3
push
xchg
mov
movsl
add
pop
mov
int3
sub
inc
and
or
cmp
pop
je
int3
test
shrb
add
pop
push
mov
or
xchg
mov
imul
movsl
sbb
es
adc
push
add
ljmp
or
push
pop
mov
jg
sub
pop
test
pushf
xor
ss
pop
pushf
repnz
push
pop
jmp
call
inc
inc
dec
xchg
mov
sub
lock
dec
jae
jae
cmp
adc
and
loopne
je
mov
xor
and
or
mov
dec
xor
test
push
daa
fs
jo
pop
fs
stc
insl
and
xor
aam
sbb
xchg
cwtl
xor
das
outsb
movsl
movsb
fdivrl
add
cmc
mov
icebp
addr16
sbb
lret
cmp
inc
mov
sbb
out
jns
lcall
es
roll
jg
and
push
sti
push
sbb
jae
cltd
push
ret
cwtl
mov
mov
and
xchg
ret
aad
rorl
mov
mov
fwait
inc
xor
mov
nop
aad
sbb
jg
mov
push
lcall
adc
mov
cmp
pop
cwtl
sarl
insl
cmp
fwait
hlt
rep
stc
icebp
sub
cmpsl
enter
mov
repnz
adc
sbb
aam
hlt
arpl
stos
imul
sahf
add
fiaddl
sub
sti
je
add
xor
jl
mov
adc
and
sub
add
sbb
jo
fists
lock
or
outsb
or
adc
loop
or
cmp
cli
xchg
test
mov
pop
lods
xor
sbb
or
push
and
stc
inc
cltd
xchg
add
xorb
icebp
add
pusha
jo
jle
xlat
in
cmpb
fisubl
lods
out
insb
push
jo
cmp
sub
pop
fldenv
and
adc
sub
and
mov
aas
fidivl
iret
jnp
pop
sub
outsb
imul
mov
mov
pop
icebp
push
roll
xor
sub
add
and
pushf
fnsetpm(287
mov
dec
aam
inc
in
test
je
jl
lret
pop
dec
lret
fstl
xor
leave
push
inc
push
or
in
jp
mulb
insb
xor
gs
nop
ret
ret
pop
jecxz
popf
stc
jl
mov
add
inc
pop
add
xchg
mov
inc
xchg
push
push
jecxz
dec
call
fnsave
sub
mov
sarl
sbb
int
fcomp
in
cmp
mov
movsb
in
xchg
stc
sbb
adc
lret
dec
jecxz
js
or
adc
pop
or
outsb
add
pop
xchg
pushf
jge
clc
and
pop
mov
adc
ss
rol
loope
or
iret
inc
out
sbb
add
es
inc
or
jns
sbb
mov
mov
outsl
inc
leave
fst
mov
push
cwtl
shrb
std
insl
pushf
movsl
movsl
stos
cmp
add
and
movsl
enter
jmp
fistps
sbb
ret
shlb
into
sub
stos
push
lds
in
lock
adcb
sbb
jb
mov
xor
sti
mov
rolb
push
mov
or
mov
push
icebp
adc
jg
leave
xchg
sahf
inc
insb
cmc
jbe
mov
lret
lods
inc
sbb
inc
arpl
sub
add
outsb
xor
ret
push
sub
clc
mov
es
cld
push
ret
jb
imul
aad
jnp
pop
push
movsb
and
sbb
clc
cmp
popf
in
xchg
mov
icebp
hlt
sbb
push
sub
fdivs
ret
mov
jecxz
pmulhw
cmp
rol
std
arpl
push
xchg
aad
xchg
or
es
hlt
xchg
xchg
add
mov
mov
pop
xchg
inc
add
testb
or
mov
cltd
mov
out
insb
jecxz
push
and
sbb
arpl
rol
sub
insb
lahf
es
ret
inc
pop
int3
or
pop
mov
jmp
clc
out
pop
inc
mov
mov
rcr
jmp
jns
sub
les
mov
adc
xchg
leave
call
imul
jno
jns
mov
push
fwait
popf
jno
fimull
pop
fimuls
add
dec
decl
cmp
mov
xchg
sub
addr16
pop
je
scas
jge
shr
cmc
stos
lods
jne
lods
sar
add
mov
push
xor
adc
mov
out
repz
cld
pop
jae
ret
insl
jbe
add
sbb
mov
dec
dec
fwait
imul
mov
pop
rcrl
sub
lods
inc
jo
paddusb
orb
inc
inc
mov
sub
in
sbb
adc
loope
stos
sarl
insl
cmpsl
sub
dec
dec
push
xor
inc
aas
rolb
call
out
push
test
adc
cmp
inc
xchg
ret
in
jmp
jecxz
adc
push
loopne
xchg
aam
gs
pop
stos
subb
sbb
xor
pop
cs
jle
dec
lret
xor
sub
repz
add
or
clc
pop
shlb
add
inc
cmpsl
js
or
mov
cmp
jbe
rorb
mov
jo
mov
mov
imul
xchg
stos
rcrl
jb
test
push
outsl
cmpsl
fwait
sub
rorb
bound
int3
cmp
mov
xlat
inc
outsb
pop
xchg
xchg
push
test
cmp
jmp
mov
aas
or
inc
mov
movsl
mov
out
out
and
jae
test
je
adc
mov
das
xchg
and
xchg
mov
or
dec
loopne
es
xlat
jno
cmp
imul
push
push
xchg
jo
out
pop
and
lods
arpl
iret
enter
mov
fmull
loopne
aas
jo
pop
icebp
push
ss
fmull
mov
xor
jmp
or
mov
inc
cmp
scas
sub
push
mov
out
fisubs
sub
pop
adc
imul
orl
xchg
stos
ja
stos
dec
pop
push
in
rcll
push
inc
cmp
cmp
mov
mov
movsl
inc
test
popa
sub
add
push
in
jmp
addb
test
mov
fldcw
lds
and
jnp
or
add
mov
xor
mov
ss
popf
leave
mov
cs
pushf
mov
shrb
and
adc
mov
pop
and
jmp
push
ret
push
mov
test
xor
faddl
mov
gs
inc
dec
and
mov
xor
addr16
test
mov
gs
imull
stc
scas
sbb
add
inc
out
aad
sub
dec
pop
xchg
sub
add
sub
xor
pop
bound
das
ss
adc
stc
or
daa
test
mov
lea
cmp
cmpsb
sarb
in
jg
js
sbb
xor
stc
andb
xchg
pop
xchg
outsb
test
outsb
dec
mov
pop
std
push
insb
arpl
outsl
dec
mov
push
jbe
nop
rcl
imul
aad
add
test
xchg
scas
jnp
xor
or
enter
das
in
rcr
pop
bnd
scas
mov
inc
pop
lcall
mov
insb
cwtl
fistps
cld
iret
arpl
or
stos
sbb
xorb
test
pop
mov
call
dec
push
ljmp
or
out
idivb
adc
xor
insb
out
adc
dec
outsb
mov
jge
std
dec
push
ss
sbb
pop
add
push
push
movsb
dec
mov
or
sahf
lock
inc
jl
push
jnp
out
rep
ds
inc
push
std
sub
pop
loop
fnstsw
insb
dec
fwait
cwtl
add
cltd
jg
lea
mov
call
lcall
adc
jp
and
fnstsw
xchg
add
xchg
rolb
ljmp
dec
push
jl
lahf
rorl
jge
ret
xchg
cmp
bnd
popf
outsb
jb
inc
push
pop
push
or
testb
push
stos
faddl
pop
sti
loop
sahf
insb
inc
lahf
arpl
or
xchg
cmp
loop
inc
pop
and
or
add
stc
xor
mov
fwait
outsb
push
iret
jecxz
mov
or
jp
rclb
rorl
lahf
cs
and
mov
mov
cwtl
fs
xchg
arpl
in
lahf
xor
scas
call
inc
cmp
imul
repnz
jp
cmp
cmpl
shrb
mov
sbb
fnsave
push
push
scas
xor
leave
nop
aas
mov
sub
das
jl
aas
adc
sti
retw
xor
jnp
lcall
rorl
sub
enter
filds
push
pop
scas
lds
jp
jge
push
sti
mov
outsl
jmp
push
jo
adc
sahf
or
jbe
cltd
lds
aaa
ds
loopne
push
aas
add
and
fldcw
lds
js
jae
sbb
inc
bound
pushf
jle
or
mov
fisubs
cmpsl
cmpsb
test
jb
int
js
lret
push
mov
inc
loopne
add
cmc
add
fwait
ljmp
pushf
push
jecxz
adc
mov
js
mov
inc
out
adc
test
repz
adc
push
insb
sbb
ror
cmp
push
imul
pop
mov
jne
push
lcall
cmp
jae
push
xchg
or
pushf
or
inc
push
sbb
jmp
das
mov
aaa
mov
adc
sbb
xorl
or
pushf
in
mov
popa
fnstenv
in
push
sub
add
pop
mov
xor
push
fwait
pop
in
jno
int
pop
loope
xchg
jg
aaa
test
insl
and
xchg
jecxz
and
mov
fsubl
jecxz
clc
test
dec
cli
int3
dec
mov
or
sbb
inc
loope
fisttpl
lahf
pop
jp
out
mov
lret
cmp
jl
lcall
mov
xor
push
and
pushf
adcl
mov
lods
lahf
cmp
push
jp
fcomp
out
dec
or
sbb
dec
popa
ret
stos
ficomps
lahf
jmp
rolb
xchg
push
lods
ljmp
pop
or
push
sahf
int3
push
xchg
mov
pop
pop
push
ficoms
pop
pop
loopne
repz
jbe
mov
icebp
fisttpll
mov
adc
mov
and
mov
fsubs
ja
loope
mov
inc
icebp
pop
lcall
mov
or
out
jecxz
psubb
rcl
mov
pop
negb
xlat
dec
sub
popa
cmpl
sub
rolb
jo
mov
xor
xchg
cld
insb
jnp
adc
aaa
pop
cs
xchg
ret
cwtl
pop
hlt
add
cmp
sbb
dec
dec
cmovle
jle
xor
loope
push
stc
lds
call
pop
mov
xor
gs
ds
mov
leave
cwtl
xor
mov
fdivp
push
lret
and
cwtl
cmpl
mov
xor
xor
cmp
lods
add
sarl
ds
jnp
jno
xor
adc
popf
minps
sub
sahf
pusha
jo
pop
xlat
jae
dec
call
and
ds
fstps
enter
mov
test
dec
sub
fcoml
lret
fcomip
cmc
mov
xchg
pusha
aas
xchg
xchg
mov
dec
rcl
outsb
xor
lods
xorb
mov
xchg
sahf
sub
sti
clc
jecxz
subl
cltd
push
stc
fisubrl
jns
pushf
xchg
data16
repz
call
stos
jns
add
mov
jnp
clc
jno
jp
in
aam
mov
outsl
sbb
lods
lods
mov
and
xchg
sbb
push
jnp
or
in
adc
aas
outsl
outsb
sbb
pop
sub
fadds
cli
sub
leave
out
or
aas
sub
pop
stos
xor
or
fsts
lcall
imul
mov
mov
outsb
cmpsb
jge
inc
js
rcrl
loope
mov
jnp
sub
xor
popl
add
ja
mov
mov
sbb
out
bound
jae
lods
jecxz
inc
arpl
cmp
cld
sub
cwtl
lcall
jg
out
cwtl
jge
iret
aad
aaa
je
mov
adc
sbb
mov
sbb
daa
pop
cltd
stos
dec
stos
aas
inc
dec
xchg
outsb
imul
out
mov
mov
loope
push
das
sbb
enter
push
jnp
gs
dec
call
sbb
jmp
bound
cmp
test
mov
jmp
xchg
les
mov
dec
dec
shlb
mov
adc
in
sbb
popf
pop
sub
test
sbb
dec
xchg
leave
sahf
test
jl
jo
mov
out
dec
aam
jb
sub
je
mov
jbe
sub
mov
xor
pop
adc
adc
shll
xor
pop
jne
jns
cwtl
inc
jg
cmp
cmp
pop
fs
pusha
rorl
xor
movsb
rdmsr
inc
insl
sbb
xor
jmp
add
dec
adc
jbe
dec
push
jns
jb
ret
pop
jl
push
xchg
mov
jp
mov
inc
enter
push
adcb
cmp
mov
fsub
inc
xchg
fnsave
adc
and
mov
jp
xor
xor
cmpsb
lret
dec
test
xor
cmp
cmp
adc
stos
push
addr16
rcll
pushf
pop
ret
ror
fcoml
adc
test
xor
sub
cmp
pushl
inc
jmp
pop
jb
inc
xchg
pop
mov
pop
jge
cltd
mov
mov
and
adc
and
popf
icebp
outsl
aaa
sbb
int3
jmp
mov
dec
and
ljmp
sahf
jmp
cmp
xchg
sti
jb
clc
aaa
pusha
lret
in
pop
adc
add
gs
pop
scas
xor
ljmp
fsin
xor
fmuls
cmp
cmp
push
into
ja
and
repz
loop
adc
or
lock
divb
pop
lds
xchg
adc
sarb
lock
pushf
lret
es
ficomps
lock
lret
lahf
mov
data16
xor
sub
out
pusha
clc
mov
lock
push
mull
push
addr16
sarl
mov
std
orb
and
insb
fnstsw
dec
push
jmp
jle
loope
lods
jbe
xor
cwtl
movsb
rol
out
jb
mov
jbe
test
test
call
mov
dec
mov
sti
lahf
mov
scas
or
cmp
aaa
negl
push
hlt
adc
or
fstp
outsl
jne
pop
enter
dec
test
jge
sti
leave
popf
ret
mov
adc
imul
lods
mov
dec
add
inc
stos
lahf
cwtl
dec
push
sub
jnp
loop
lock
les
scas
cmp
or
push
jmp
sti
mov
icebp
stc
je
or
xor
mov
dec
mov
imul
mov
bound
mov
adc
mov
jge
adc
cwtl
fcomi
in
push
sbb
scas
mov
mov
sti
mov
dec
cld
push
sub
iret
adc
aas
or
xor
mov
gs
mov
dec
hlt
mov
sar
and
mov
push
adc
pop
fbld
es
push
sub
dec
xchg
loope
fbstp
pop
and
pusha
inc
bound
aad
inc
leave
out
lret
pushfw
test
hlt
nop
mov
cmpsl
or
dec
xchg
jae
test
jmp
lods
iret
out
pop
leave
add
mov
push
ss
enter
push
jno
cmp
adc
sti
mov
aaa
add
pop
xor
fcoml
cmp
insl
push
pushf
popa
cli
cmp
int
and
adc
push
lahf
or
ret
imul
out
push
cmpb
lcall
jge
outsl
mov
adc
jnp
lret
in
pop
dec
dec
push
lock
push
mov
imul
je
jno
push
cli
ds
add
push
jmp
clc
add
out
insb
ret
mov
cmp
ss
or
lahf
aam
sub
or
mov
shrb
push
rcrl
pop
adc
sbb
or
xchg
lcall
mov
mov
xlat
out
or
pop
lods
aaa
sbbb
inc
fcoml
cmp
leave
pop
pop
lea
les
pop
fiaddl
and
lahf
lock
scas
mov
jnp
ret
fs
add
sub
cld
iret
cmp
inc
push
push
dec
ds
jmp
mov
lcall
das
pop
cli
daa
mov
inc
mov
icebp
scas
adc
fldt
adc
pop
pusha
xchg
and
push
cmp
xor
inc
cli
and
pop
push
mov
xor
and
test
and
insl
and
shl
sub
clc
or
das
xchg
mov
ds
scas
lds
ss
lret
mov
xchg
movsl
jg
je
insb
mov
sub
inc
shlb
daa
cltd
add
pop
inc
fwait
adc
in
jnp
in
xor
mov
jnp
add
lahf
fnstenv
push
movsl
sti
push
je
inc
xchg
insb
outsl
mov
add
mov
sahf
test
std
leave
movsb
popa
and
adc
jecxz
add
pop
jl
push
mov
jb
xchg
vprotb
adc
out
and
add
xor
sbb
push
jne
scas
lock
jl
stos
mov
mov
mov
ljmp
lahf
rorb
sub
andl
jae
ss
fisttpll
or
mov
aas
in
rcr
adc
daa
jge
sub
dec
addr16
aaa
dec
mov
jl
xor
jp
inc
mov
rcrl
sbbl
mov
mov
aad
fimull
outsl
fcoml
push
xchg
inc
xor
loope
ja
lea
or
push
sub
into
int
dec
xlat
xor
adc
mov
inc
sbb
pop
push
pop
inc
jbe
jmp
add
fmul
scas
mov
adc
dec
imul
lods
add
rorb
mov
and
mov
ja
js
dec
or
pop
imul
mov
adc
jae
inc
jns
sti
nop
xchg
and
ret
sub
aas
hlt
xchg
scas
dec
es
test
lret
aad
daa
push
jne
xlat
fsubs
xlat
sbb
jae
je
sub
cmp
out
or
xlat
xlat
scas
xlat
push
insb
mov
sub
mov
mov
neg
push
fwait
mov
jne
call
mov
cwtl
mov
fldpi
je
inc
pop
dec
in
jb
test
jecxz
ss
bound
dec
jno
xor
sbb
xlat
and
or
outsb
mov
lcall
roll
cmpsb
adc
lcall
dec
inc
jo
lret
in
jge
xchg
inc
out
jle
leave
sub
mov
insl
sub
xchg
dec
xor
lock
outsb
sub
aam
or
xchg
outsb
enter
xor
xchg
or
aam
or
pop
inc
pop
mov
mov
and
inc
rclb
out
adc
sbb
xchg
xlat
out
sub
mulb
stc
push
ss
pop
mov
insl
jns
stc
imul
ret
cltd
or
ja
inc
and
lds
mov
or
jbe
or
stc
movb
xchg
jb
test
push
loope
mov
addr16
hlt
and
dec
push
inc
in
sub
and
aam
mov
sahf
adc
repz
test
mov
pop
mov
std
inc
lods
loope
mov
ret
rcrb
andb
xor
sub
push
enter
mov
mov
mov
push
orb
add
adc
sbb
das
xlat
mov
or
adc
sub
cmp
ljmp
in
or
sti
ljmp
or
xlat
mov
rcll
loopne
out
mov
mov
aaa
sbb
push
sub
cmpsl
mov
loop
rdpmc
and
popf
and
dec
addr16
jnp
add
xchg
dec
mov
adc
fld
out
aas
mov
fnstcw
inc
xor
lock
addl
popf
sahf
add
xor
pop
cmp
cs
dec
mov
mov
lahf
sbb
mov
jge
pop
mov
dec
xor
js
into
cs
jecxz
pushf
jg
fistpl
test
mulb
fmuls
adc
sbb
ret
data16
mov
xchg
test
aad
idiv
sub
rcll
xchg
shlb
stos
pop
loope
pop
xor
inc
mov
pushf
push
setge
push
icebp
and
lods
outsl
jp
ja
sub
imul
test
xchg
cld
xor
es
xchg
stos
adc
cmp
xchg
shr
in
push
pop
shlb
mov
aas
jo
xchg
out
mov
pop
add
nop
and
or
mov
daa
jbe
ficoms
push
shlb
add
adc
or
lds
xchg
or
notl
mov
pop
out
nop
sub
sub
xchg
push
inc
cmp
push
fistpl
call
repz
mov
push
xchg
mov
fldl
mov
jns
dec
and
xchg
add
mov
clc
sbbl
mov
push
pop
loope
xor
or
ja
subl
or
cmpsl
push
outsb
dec
or
js
in
xchg
and
js
out
push
jne
std
mul
dec
std
xor
dec
ds
lds
xor
xor
gs
sbb
pop
iret
stos
enter
loope
repz
dec
cs
add
sbb
cmc
sub
inc
test
cmp
lods
mov
sbb
sbb
es
mov
mov
xor
mov
aaa
mov
es
imul
loope
fdivrs
mov
jnp
test
mov
roll
mov
mov
inc
pop
and
add
push
mov
dec
sub
stos
mov
xlat
push
inc
fcoml
test
in
xchg
sar
pop
rol
xchg
jl
sahf
pop
mov
call
jge
in
sbb
stos
cwtl
mov
in
mov
dec
pop
and
mov
and
xchg
xchg
dec
outsb
sbb
dec
xchg
movsb
sbb
fistpl
pop
cmp
in
fiaddl
cmp
xlat
jno
in
jne
popl
jno
ret
enter
xchg
inc
add
out
test
mov
xor
fdivl
cmp
jle
andb
mov
jle
in
aaa
sub
ficomps
aas
and
add
je
mov
xor
mov
push
pop
adc
fstps
lds
dec
jmp
aad
xchg
scas
in
xchg
dec
or
mov
mov
js
aas
mov
push
inc
jp
cmp
fadd
or
and
rorl
fs
adc
cld
das
imul
sbb
stc
lahf
add
icebp
xchg
aas
pop
mov
outsl
pusha
imull
into
test
roll
xor
jmp
pop
adc
jns
sub
xchg
icebp
sub
xchg
mov
in
mov
adc
mov
dec
in
xchg
inc
xlat
hlt
push
icebp
push
add
insl
sar
mov
push
fisubrl
dec
and
xor
cmc
xor
popf
enter
xchg
mov
push
mov
movsb
xchg
sub
lret
add
adc
lock
inc
push
test
push
add
fsubr
lods
push
dec
xchg
iret
popf
xor
lds
dec
fiadds
dec
dec
jnp
lcall
push
mov
cmp
rorl
jle
add
xor
inc
add
mov
loop
ljmp
adc
xchg
push
outsl
cwtl
lret
mov
or
sub
inc
loope
jmp
insl
loop
mov
aaa
fsubs
cmpsl
sbb
jbe,pt
call
data16
addr16
mov
fisubs
xor
xor
fmul
mov
dec
scas
icebp
jbe
push
or
xchg
pushl
add
mov
pushf
xlat
test
dec
adc
daa
sbb
xor
fcoml
gs
mov
sarl
dec
idivl
movsb
ljmp
out
addl
addb
pop
lock
adc
mov
lock
mov
fwait
pop
add
iret
xchg
dec
gs
ja
in
scas
lret
and
dec
sub
add
or
mov
mov
lds
inc
sti
dec
or
aam
jno
mov
nop
xchg
or
mov
stos
lahf
ds
or
into
jl
xchg
enter
push
cmp
movsl
sub
jecxz
loope
fadd
nop
aaa
cmp
stos
jnp
pop
adc
mov
lret
scas
mov
imul
insb
dec
test
mov
pop
sbb
or
pop
inc
pop
lahf
push
xchg
cld
fndisi(8087
pop
ret
rol
fs
mov
aas
shl
outsl
jbe
je
push
mov
lea
pusha
lret
or
push
mov
mov
adc
enter
mov
nop
sarl
cmp
xor
adc
mov
mov
scas
or
lock
ja
pop
jecxz
les
jg
mov
xchg
xchg
jge
add
push
movsb
cmp
mov
xor
pop
out
mov
out
test
xchg
push
leave
sti
or
addl
ljmp
add
xor
lods
cmpsb
clc
sbb
dec
sbb
push
xor
cmc
int3
jb
sub
dec
dec
scas
xchg
lret
pop
adc
inc
rclb
or
lcall
dec
mov
push
imul
into
bound
inc
popa
filds
testb
cs
inc
ror
lcall
hlt
jecxz
iret
mov
mov
jle
out
push
adc
inc
mov
sub
inc
mov
adc
mov
repz
mov
adc
push
loopne
loopne
mov
repz
aad
ja
pusha
cli
call
sbb
jg
sbb
mov
test
xchg
mov
push
jae
cmp
test
mov
popf
xor
mov
xchg
mov
addr16
inc
sbb
pop
sbbb
aas
xchg
add
jle
mov
jbe
or
imul
push
popf
adc
sub
jns
fyl2x
jl
jbe
arpl
insb
xchg
test
jns
inc
inc
in
and
pop
push
cmp
inc
sub
icebp
bound
bound
cmp
scas
lcall
lods
loope
cmp
lods
xor
das
clc
jbe
dec
push
push
inc
fistpll
sbb
mov
loope
and
int3
lock
cmpsl
adc
clc
jle
das
mov
and
cmp
ficoml
xchg
sbb
or
call
loopnew
sub
push
cmpsb
aad
mov
scas
ficompl
push
movsl
jmp
sub
sbb
add
cwtl
jmp
loop
and
pop
in
test
inc
push
xor
mov
cmp
or
loope
and
ljmp
push
jbe
adc
xchg
adc
leave
pushf
hlt
sbb
xchg
rcrl
roll
mov
fcoms
icebp
jne
push
jb
roll
and
cli
sbb
lcall
cmp
jb
je
and
mov
cmp
mov
mov
cltd
arpl
scas
sub
arpl
mov
icebp
adc
repz
push
mov
dec
cmp
adc
fsqrt
pop
jecxz
dec
sbb
out
or
add
sarb
ljmp
das
sbb
test
xor
xchg
filds
aaa
lods
rol
cmpsl
mov
xor
movsb
push
adc
js
cmp
mov
and
push
or
pop
mov
lock
pop
jp
sarl
ljmp
inc
jg
out
in
filds
dec
sub
xchg
jbe
adc
stos
xor
jl
lock
fdivrs
mov
mov
loope
in
mov
lcall
pusha
add
into
dec
test
rolb
out
and
mov
push
ljmp
push
adc
notl
loope
lret
sub
scas
and
faddl
lret
aaa
xlat
inc
dec
xadd
xchg
sbb
or
mov
xor
add
mov
cmp
imul
lods
mov
dec
lret
das
sbb
push
and
push
fcoml
push
pop
jno
fsts
mov
push
repz
int
jmp
jmp
loope
xor
or
aam
pop
fildll
arpl
sti
popf
xor
data16
into
into
leave
rol
xor
lret
jge
dec
sbb
mov
push
in
pop
outsb
aas
imul
inc
xor
pop
inc
xor
lret
inc
adc
jmp
pusha
aaa
repz
std
clts
jnp
pop
and
test
aad
insl
pop
lcall
insl
movsl
add
shrb
sbb
sub
or
ss
dec
push
push
adc
or
or
mov
pop
jno
or
test
fdivrs
pop
or
in
das
inc
lods
out
cs
xor
and
aad
xor
jmp
and
cmp
add
imul
int
mov
ds
cmp
ljmp
mov
pop
sbb
mov
leave
das
mov
orl
jo
test
call
cmc
imul
xor
pop
mov
icebp
jno
push
push
cwtl
in
mov
fwait
aad
cmc
cmpsb
mov
cmp
jle
outsb
and
adc
push
cmp
lret
dec
jecxz
jg
pop
mov
pop
aam
fidivs
mov
cmc
jns
cwtl
cmpsl
jge
outsb
andl
pushf
and
and
xchg
and
mov
xchg
stc
outsl
xchg
adc
adc
push
enter
inc
incb
movsb
js
andb
mov
insb
xor
xlat
push
aaa
popf
push
push
ret
psubd
cmp
stc
xor
in
adc
xor
mov
ja
je
mov
inc
fs
cmp
adc
xchg
and
mov
cmpsl
data16
ds
movsb
iret
outsb
mov
xchg
lret
aaa
cltd
into
or
cmp
outsl
movsl
in
hlt
sub
jp
or
and
mov
mov
or
nop
enter
add
in
inc
in
scas
jmp
iret
cs
repnz
jbe
push
push
stc
xchg
arpl
ljmp
mov
fs
pop
call
and
or
and
xacquire
ret
jl
jbe
int3
jae
aad
sub
jecxz
arpl
aas
inc
fcoml
lds
lods
divl
and
inc
xlat
js
jmp
loopne
and
les
je
push
js
icebp
mov
movsb
jge
leave
in
dec
and
stc
jo
and
inc
mov
ret
sub
jmp
pop
imul
push
push
bound
mov
pushf
cmpsb
and
cmc
or
fimuls
mov
add
scas
aad
push
test
in
inc
adc
repnz
aad
xorb
rcr
mov
dec
pop
movsl
lret
js
and
mov
mov
push
out
inc
push
mov
adc
movsl
add
imul
sti
ficomps
inc
mov
adc
push
sub
stos
test
arpl
dec
jnp
in
inc
and
xchg
cld
scas
and
jne
xor
push
lcall
mov
cmpsb
mov
sub
jmp
pop
xor
xor
aaa
jge
add
sbb
je
cmpsl
push
loop
clc
mov
pusha
adc
sbb
fsubs
inc
pusha
push
call
push
dec
xor
mov
sub
cmp
in
adc
push
leave
push
pushf
test
inc
shll
insb
insl
pcmpeqw
push
dec
outsl
xchg
jae
jg
mov
dec
test
push
xor
mov
notl
pusha
pop
mov
sub
jecxz
out
mov
mov
mov
mov
arpl
lcall
adc
fstpt
cmc
mov
inc
sub
cmpsb
sahf
fs
xchg
xlat
push
stos
aaa
mov
sbb
cmp
icebp
mov
iret
push
aaa
repnz
cmp
lds
rcr
xor
adc
xor
adc
sub
push
rcrl
pop
pusha
add
mov
fbld
or
or
lock
lahf
pop
imull
push
inc
aam
inc
test
jmp
inc
mov
sub
in
push
xchg
mov
inc
jl
pushf
jmp
pop
fsubrl
and
mov
in
push
and
sbb
shl
sbb
test
mov
pop
jg
sub
and
repnz
insl
mov
insl
mov
and
xor
popf
ret
int
fsubrs
stos
nop
sub
xchg
dec
hlt
xchg
test
std
hlt
mov
add
cltd
jecxz
push
loop
lcall
and
cltd
fildll
outsb
sbb
inc
mov
popf
fsubs
sti
sahf
je
and
cmp
push
mov
icebp
popa
test
mov
sbb
sub
fcomi
fprem1
mov
mov
sbb
xor
pop
ss
cmp
fldl
ja
add
ds
sbb
dec
ficoml
fmull
jmp
push
dec
jmp
adc
or
xor
insl
cmp
cmpb
jle
ss
jo
cs
adc
adc
es
cvtps2pi
cs
sbb
inc
test
xor
sbb
sbb
repnz
dec
hlt
fcomps
dec
rclb
out
ret
inc
lcall
iret
imul
dec
push
xor
popf
ja
fs
aaa
jb
lea
jo
push
push
sahf
leave
addl
or
xchg
das
mov
xor
sbb
gs
jb
mov
lahf
xorl
fistpll
mov
stos
xchg
push
dec
pop
mov
ja
aaa
push
push
mov
dec
sbb
or
addr16
mov
nop
sbbb
inc
and
mov
icebp
xchg
lods
std
push
mov
mov
adc
call
dec
popf
pop
js
fcompl
and
dec
sarb
dec
mulb
daa
dec
test
and
lret
or
jge
out
sbb
cmpsl
repnz
clc
call
mov
mov
sub
cld
lahf
push
adc
adc
jne
std
movsb
or
jge
lds
popa
jmp
mov
mov
imul
movl
dec
push
mov
scas
out
xlat
pop
popa
adc
sbb
cmp
fsubrl
iret
dec
mov
jne
mov
and
stos
mov
xchg
and
jns
mov
jns
mov
pop
sarb
lcall
scas
xchg
lock
nop
dec
pop
imul
imull
mov
js
push
adc
mov
out
push
cli
mov
pop
rcrl
ret
ss
mov
sti
lods
dec
sub
jae
jmp
fwait
stos
jmp
lds
iret
in
shlb
pop
pop
imul
ficoms
xchg
push
adc
sarl
cmp
sarl
scas
adc
in
inc
inc
or
repnz
cmc
fyl2xp1
insb
fiadds
xor
dec
mov
cmp
inc
push
add
cmpsl
aaa
inc
cmp
aaa
pop
cmpsl
mov
psubsw
movsb
pop
je
outsb
dec
lahf
movsl
fildl
dec
ret
xor
add
adc
ret
rorb
add
and
and
ljmp
mov
loope
test
lcall
lret
xchg
add
loopne
arpl
icebp
xchg
xchg
insl
sbb
rorl
push
ja
jnp
add
push
pop
rol
sar
xor
mov
outsb
mov
sarb
aas
dec
jnp
mov
sbb
mov
cmp
lret
mov
mov
call
cld
pop
jbe
jns
test
cmpsb
and
jecxz
xor
xchg
bound
cli
repnz
jbe
outsl
neg
lea
add
or
pop
dec
mov
call
sbb
cmc
sahf
fistpll
subl
or
add
push
das
push
in
pop
lods
sti
xchg
and
adc
push
push
xchg
sti
stos
out
push
mov
xor
cli
scas
adc
add
fwait
xchg
in
mov
jecxz
push
mov
out
adc
lret
sbbl
pop
jne
lock
cmp
clc
stc
andl
or
jbe
lret
cmpsb
dec
inc
sbb
aam
jo
cmp
jmp
sbbb
xchg
adc
push
movsl
enter
cmp
cmp
sub
or
lret
push
mov
out
xchg
mov
dec
ds
and
inc
in
inc
dec
sub
pop
fsubl
ljmp
push
in
lahf
mov
shlb
std
cmp
push
mov
jle
aas
xchg
out
hlt
out
mov
cld
sub
pop
not
clc
roll
xchg
adc
jno
test
xchg
and
sub
outsb
iret
nop
in
lds
sub
clc
inc
add
test
out
pushf
mov
add
scas
stos
sub
mov
cmc
imul
std
stos
jecxz
mov
adc
inc
leave
ss
mov
scas
fsubrs
push
outsl
mov
pop
test
stc
xor
adc
dec
jg
sbb
cmc
test
cmp
inc
fmuls
xchg
scas
inc
lcall
push
nop
cmp
dec
jmp
push
popa
std
cltd
add
stos
fnstenv
repz
push
aas
lret
push
stc
loope
xchg
popf
shr
push
inc
loop
cmc
dec
lret
testb
je
lods
popf
and
xor
es
das
jmp
mov
xor
mov
sub
stc
fisubrs
pop
xchg
nop
add
imul
je
cmp
dec
jge
cmp
ljmp
movsb
outsb
or
fiadds
jl
cmpsb
push
inc
and
add
adc
ljmp
sahf
negb
pop
movsl
cmp
sbb
sub
push
fwait
loop
inc
push
xchg
and
sahf
add
xchg
mov
sar
mov
test
test
loopne
xor
cmp
sub
lret
lret
insb
adc
dec
adc
mov
inc
mov
shrb
std
mov
ret
xchg
rorl
sub
dec
out
repnz
call
push
test
nop
pop
stos
inc
repz
mov
cmp
in
ljmp
jae
mov
pop
xlat
xchg
flds
cmc
sub
xor
inc
es
movsl
jnp
inc
pop
roll
jge
cmp
and
dec
lods
xchg
mov
orl
imul
dec
xor
hlt
test
or
aas
sub
jmp
adc
cltd
sub
adc
daa
sub
push
xor
ret
sub
cs
jecxz,pn
movsl
adcl
mov
sbb
popa
inc
jb
fldenv
adc
and
mov
addr16
inc
jp
jnp
mov
mov
sbb
inc
inc
test
pop
cld
sbb
dec
xor
jmp
cli
fldl
sahf
cltd
in
cmp
fbld
lret
out
xor
add
pop
jns
int3
pushf
pop
ffree
mov
lahf
inc
cmp
mov
mov
dec
loop
sub
sub
enter
pop
push
sub
dec
jl
lret
add
cmpsl
pop
mov
cwtl
mov
sub
inc
lret
sar
cmc
push
xchg
add
xor
fimull
lret
and
sbb
cmp
sbb
data16
aam
cmpsl
int
adc
addr16
pop
pop
fisttps
jmp
sub
cmc
aaa
jmpw
test
icebp
mov
and
mov
aad
push
std
rclb
push
lcall
pop
adc
mov
jp
ret
mov
cmp
xchg
fxch
scas
in
sbb
icebp
nop
pop
push
push
lret
test
ss
fnstsw
sub
inc
inc
cwtl
sub
xchg
test
out
jge
sub
mov
adc
push
inc
fdivl
push
call
add
fsubl
scas
in
or
mov
xchg
add
in
and
and
jae
hlt
add
in
pushf
clc
dec
sbb
add
fisttps
fidivl
mov
arpl
aad
pushf
cmp
aad
dec
lds
or
cs
test
xor
mov
dec
add
addr16
scas
inc
push
in
mov
cmp
fidivl
rcl
mov
sub
addr16
dec
push
js
mov
xor
cmpsl
adc
mov
ljmp
std
push
mov
jbe
in
fiadds
in
push
push
inc
cmpsb
lcall
imul
xchg
aad
scas
pop
jb
jl
outsb
shrb
lcall
mov
sbb
and
ljmp
sub
fwait
cmp
test
mov
shl
lock
les
nop
and
push
dec
pop
pop
xchg
xchg
fists
adcb
inc
jns
out
push
shl
jbe
mov
lahf
shl
sbb
cmp
cmpb
shrb
enter
inc
out
xchg
pop
ja
jg
fidivl
mov
into
int3
nop
mov
or
outsb
nop
lcall
cmp
rcrb
cmpsb
add
inc
popf
fistl
ljmp
ficoml
in
imul
out
int
mov
push
push
sahf
jne
hlt
xor
mov
leave
fs
mov
fnstcw
mov
mov
mov
pop
out
je
aaa
push
and
stos
rcrb
in
insl
sbb
andb
hlt
shrb
mov
loope
lea
insb
mov
ljmp
xor
dec
in
mov
cltd
lds
mov
inc
sub
int3
push
jb
xlat
jns
sub
arpl
sub
inc
icebp
cli
scas
call
xor
movsl
and
inc
test
mov
jo
das
ret
cmp
or
jg
stos
inc
dec
iret
aaa
movsb
sbb
call
pop
cmp
sbb
xchg
dec
inc
sub
push
inc
adc
decl
pop
scas
and
jae
ret
movsb
dec
sub
mov
pop
inc
pop
jne
dec
or
sbb
sub
pop
adc
jecxz
jecxz
rcl
xor
xchg
inc
or
jno
popa
mov
loop
jp
mov
mov
sub
mov
or
mov
int
jbe
xchg
shlb
mov
sbbl
test
out
sbb
shlb
cmp
inc
jae
test
stc
mov
sub
es
fidivs
adc
gs
add
xchg
jno
rcll
sub
imul
dec
dec
pop
sbb
lds
push
outsl
enter
and
push
dec
dec
aad
push
push
mov
les
fstpt
adc
and
sahf
imul
aad
push
adcl
jb
repz
in
push
mov
aaa
add
or
xor
leave
popa
dec
out
mov
imul
and
cmp
gs
mov
xor
add
movsb
mov
mov
and
andl
lea
iret
mov
mov
cmpsb
popa
dec
filds
rclb
jo
mov
je
mov
loop
inc
pop
push
jns
movsl
fsubrs
shr
cmp
scas
fxch
fxch
jmp
out
inc
mov
jle
push
cwtl
cld
out
lods
inc
mov
xchg
or
xchg
in
filds
mov
fidivl
stos
add
stc
mov
and
jecxz
out
mov
pop
mov
jmp
sbb
mov
add
loope
or
iret
jae
xor
in
sahf
dec
jmp
test
xchg
out
pop
push
push
in
sub
pop
ss
add
in
pop
test
lods
cmp
es
fistl
mov
adc
shrl
dec
xchg
mov
dec
xor
popf
mov
push
cmp
rcl
mov
mov
pushl
xor
cmpl
xchg
mov
test
mov
push
data16
enter
jns
stos
push
add
push
push
mov
mov
xor
inc
or
sbb
inc
inc
cs
xor
cli
or
jno
in
sti
mov
out
ret
insl
sahf
xchg
clc
dec
aas
je
insl
add
xchg
jmp
and
sbb
jbe
sbb
ss
cmp
sub
sub
aas
rorl
adc
int3
imul
push
dec
add
cmp
adc
out
out
das
pop
or
pop
ss
lret
out
int3
mov
sbb
out
les
mov
popf
stos
lahf
and
mov
leave
rorb
cs
fdivr
cmc
addb
or
jge
and
xchg
mov
scas
jle
int
idiv
lret
loopne
hlt
dec
dec
adc
lock
or
xor
xchg
jmp
orl
sbb
jae
lret
jbe
sbbb
mov
jmp
rcl
gs
lods
or
push
cmpsb
insl
mov
lods
dec
lock
test
cmc
sbb
push
and
push
inc
and
pop
out
mov
fst
div
or
adc
cld
cwtl
mov
jae
add
mov
cmp
notb
xor
andl
adc
cmp
push
mov
dec
cli
push
xchg
insl
push
push
sbb
or
and
outsl
and
mov
inc
aad
add
mov
push
pop
mov
leave
dec
pop
mov
rorb
cld
xlat
push
sbb
shrl
push
cmp
xor
and
scas
shlb
cwtl
dec
xchg
rorl
dec
mov
inc
dec
in
mov
add
push
xchg
xor
in
adc
mov
adc
sti
cmp
stc
jp
xchg
std
mov
aam
mov
das
mov
arpl
push
into
pushf
dec
jge
cmp
and
xchg
xchg
sub
fidivl
push
in
adc
sub
test
scas
pop
adc
sahf
je
addr16
imul
and
mov
sbb
push
mov
repz
mov
dec
out
mov
hlt
and
adc
call
clc
add
xor
cmp
dec
jnp
cmpsl
enter
test
add
call
mov
das
inc
cmp
pusha
test
mov
mov
mov
jae
and
stc
in
mov
cmp
xor
nop
daa
ljmp
gs
lahf
shld
aam
pop
insl
pushf
js
add
sub
lret
xchg
sbb
nop
add
idivl
notb
in
push
daa
out
ds
dec
aad
sbb
ss
loop
ret
outsb
xor
cmp
pop
pop
xchg
add
ffree
ret
mov
int
push
sub
stc
ret
xchg
jb
pop
add
inc
add
xchg
xchg
inc
push
adc
xchg
xor
cmp
sar
jne
out
nop
mov
add
sbb
jecxz
notb
mov
addr16
push
pop
add
add
ja
sbb
inc
cs
inc
push
jo
mov
sbb
stos
mov
cltd
insb
or
or
jns
nop
ja
sti
addr16
andb
jnp
js
jle
insb
sbb
lds
push
in
pop
add
cmp
nop
stos
arpl
mov
roll
push
dec
push
dec
mov
insl
pandn
push
mov
push
cmp
test
and
push
stc
inc
std
pop
lahf
sub
cmp
aas
test
adc
and
dec
shlb
mov
jno
pop
daa
shlb
sti
ss
adc
mov
inc
add
das
mov
movl
and
fs
mov
test
mov
dec
test
sub
je
or
movsb
add
sub
lret
cmpsl
movsl
dec
andb
push
xchg
or
popf
pop
adc
insb
jbe
pop
pop
jb
jp
mov
jl
stos
pop
orb
movsl
mov
dec
aas
cld
jle
or
xor
cli
jmp
mov
sub
daa
lcall
and
inc
sbb
std
inc
xchg
jmp
sbb
pop
or
lret
pop
jg
push
sub
pop
pushf
inc
push
pop
loopne
pop
jbe
arpl
pop
lds
popa
or
mov
imul
cmp
rolb
fbstp
out
incb
fmuls
inc
inc
mov
notb
stos
clc
inc
push
cmp
fstl
cmp
leave
mov
scas
lret
and
dec
push
inc
addr16
jge
nop
sbb
xor
mov
outsl
xor
xchg
jb
insl
or
js
and
jae
mov
and
mov
inc
xchg
inc
sarb
test
mov
xor
hlt
xchg
and
pslld
shll
scas
out
jns
aaa
jle
lods
insb
sbb
push
imul
xor
std
hlt
addr16
ja
xchg
mov
cmp
ficoms
inc
das
dec
pop
inc
in
inc
stos
stc
les
add
movsl
fidivs
imul
xchg
nop
aad
adc
xchg
into
in
jge
addr16
xor
pop
int3
mov
inc
data16
lods
sbb
sub
cltd
ds
push
pop
arpl
add
sbb
jo
loop
scas
adc
cmpsb
mov
scas
inc
sbb
ljmp
push
mov
fnstsw
js
jmp
lret
fwait
jne
pop
insl
testb
inc
and
dec
out
cmp
sti
mov
leave
sbb
xchg
mov
cmp
mov
repz
sub
addr16
mov
sub
jmp
out
es
aas
sbb
jp
mov
rcll
hlt
add
nop
orb
xor
jmp
lds
mov
lret
sbb
int
sub
fdiv
push
mov
dec
icebp
jbe
sub
ja
or
add
pop
and
xchg
sbb
cli
jge
mov
mov
test
std
bound
dec
lcall
and
loopne
xor
dec
jl
inc
nop
xlat
push
mov
ficoml
sbb
sub
add
push
xchg
mov
jg
fistl
dec
mov
shrb
inc
push
notl
lret
lods
mov
je
sbb
jl
push
pushf
lret
jo
out
sahf
enter
add
fnstcw
shlb
ss
inc
inc
mov
mov
or
pop
test
pop
push
cs
jg
ret
sbb
mov
pop
mov
xlat
mov
repz
inc
cli
sub
xchg
test
mov
xor
cmpl
ret
add
into
lret
cltd
fs
ja
jl
and
fstps
push
inc
sub
outsb
pop
cmpsb
test
jg
and
sti
arpl
cmpsb
xor
fstpt
mov
hlt
stos
inc
jl
xor
sub
ljmp
outsb
sub
sahf
and
pop
leave
add
sbb
mov
mov
vpcmpeqb
lods
xchg
inc
mov
push
xchg
mov
xchg
xchg
inc
inc
test
lock
push
jnp
jno
out
subb
mov
cmp
test
mov
mov
jbe
popf
outsl
inc
jnp
mov
push
jo
jle
fisttpll
sahf
mov
dec
movsl
adc
popa
popa
int
lret
popa
fcos
fistpll
lret
jl
cmp
iret
add
adc
sbb
and
arpl
in
lcall
xor
adc
jmp
stc
in
jle
enter
jnp
push
pop
loope
insb
cwtl
pushf
push
popa
imull
xchg
sub
mov
ficomps
adc
xchg
inc
iret
mov
inc
mov
sbb
js
xchg
dec
nop
mov
ja
sub
test
pop
inc
jg
cltd
hlt
ljmp
push
stos
sbb
and
adc
mov
lret
add
mov
in
int
inc
and
shlb
push
xchg
cmpsl
sbbb
shlb
push
cmp
roll
cwtl
xor
lods
fucomi
sub
push
and
mov
insl
add
sti
outsb
inc
clc
pop
push
lods
sub
jmp
mov
xor
pop
lcall
push
call
sub
and
std
nop
ja
jmp
mov
or
stos
push
sbb
outsb
jmp
test
or
fucomi
and
add
push
sub
jge
push
jmp
cmpl
cwtl
xchg
cmp
stc
jae
in
and
in
xchg
test
pop
std
jne
cmp
push
jl
mov
std
scas
mov
inc
xor
ret
add
xor
and
mov
std
sarb
ror
int
bound
or
xchg
mov
inc
mov
xlat
mov
or
aas
fistpl
loope
pop
dec
xchg
sti
xchg
push
aad
mov
dec
dec
jns
call
mov
push
sti
dec
daa
in
int3
mov
push
mov
imull
sbb
push
aam
and
lret
ja
loope
push
loop
mov
mov
push
cwtl
cld
and
mov
or
ljmp
xor
cwtl
and
inc
ret
mov
or
mov
movsl
aas
jmp
xor
lods
cmp
mov
cmp
jb
push
jmp
mov
test
or
sbb
shld
and
out
xchg
cli
pop
imul
and
das
dec
fdivrl
inc
shrb
xchg
leave
push
movsl
push
jmp
dec
mov
outsl
fiadds
push
xchg
gs
sub
cs
cmpsb
xor
xor
int3
add
cltd
hlt
out
outsb
outsb
aad
mov
push
pop
pop
lds
mov
jno
ret
test
aad
push
cmpb
add
lret
sbb
push
cmpsb
pop
jl
lcall
hlt
and
stos
pop
xlat
stos
xlat
in
jecxz
loop
loope
xor
mov
inc
stos
mov
add
imul
dec
mov
pop
aad
fisubrs
pop
test
and
cs
je
sub
aas
scas
into
cmpsl
xor
or
cmpsl
aas
jp
das
sbb
cmpsb
dec
fsubl
inc
aam
test
add
or
pop
les
out
and
ret
insb
or
cwtl
inc
dec
je
xchg
not
cmp
dec
gs
stos
pop
pusha
bound
jae
jl
xchg
dec
inc
sar
insb
aas
dec
adc
rorl
aas
mov
sbb
cmp
inc
add
xchg
cmpsl
jg
mov
dec
mov
dec
pop
push
mov
js
or
mov
or
flds
mov
shlb
jmp
loope
stc
xor
cmp
cmpb
mov
jl
sub
mov
test
mov
cwtl
adc
cld
dec
ja
mov
push
xchg
in
insl
subb
lods
xchg
push
cmp
pop
xchg
in
jne
stc
aas
xor
mov
sub
xchg
nop
jns
hlt
pop
pop
sbb
ret
xchg
mov
pushf
jecxz
pop
or
imul
rol
clc
push
mov
and
mov
cli
ds
pop
rcrl
cmpsb
fisubrl
shrl
xor
fsubs
push
xchg
and
add
mov
mov
mov
stos
ficomps
imul
adc
andb
xchg
aad
popa
stos
std
inc
add
and
es
push
xor
lock
rorb
sub
jge
cmpsb
out
add
jecxz
dec
insb
adc
xchg
mov
mov
pop
cwtl
inc
push
data16
sti
imul
inc
fsubrs
xor
std
test
das
push
sub
jo
data16
xchg
in
push
lahf
loope
add
xchg
xchg
dec
xor
ss
and
inc
dec
mov
xchg
dec
cmp
lea
outsb
and
push
outsl
adcl
rorb
fistpl
dec
scas
and
fdivrl
or
lret
sti
jo
push
push
lcall
loopne
mov
sub
or
mov
imul
insb
jae
leave
cmp
or
insb
out
mov
add
jp
outsb
cmpsb
cli
ja
vpshlb
add
call
sub
dec
and
inc
mov
pop
inc
add
sti
mov
mov
movl
dec
fs
sub
subb
sub
jno
push
je
ja
adc
or
jmp
mov
push
out
aas
jmp
adc
test
std
pop
jo
cld
xorb
xor
arpl
sarb
pop
adc
sbb
in
push
shll
mulb
mov
inc
jbe
mov
in
lret
adc
and
imul
xor
or
dec
mov
pop
int3
push
mov
cmpsl
lea
xchg
sub
popf
jne
inc
pop
aad
data16
call
fnstsw
aam
mov
adc
mov
xchg
icebp
in
repnz
pop
iret
fwait
lods
cltd
sbb
mov
notl
ss
aas
jae
mov
iret
add
and
ljmp
mov
ret
in
cmpsb
stos
and
aam
or
jle
in
pop
inc
hlt
fsubrs
mov
fdivrl
int
test
mov
std
bound
mov
clc
shll
pop
cwtl
repnz
movsb
mov
pop
jno
cltd
inc
lock
stos
mov
loope
ljmp
dec
pop
test
stos
dec
mov
adc
mov
jmp
fists
dec
aas
sbb
fs
out
ficoml
fmuls
add
inc
adc
loop
scas
pop
and
jae
jb
cmp
sbb
or
push
jmp
nop
push
shl
inc
pop
ds
insb
in
mov
mov
adc
neg
fidivl
clc
jmp
pop
sub
repnz
inc
iret
inc
pop
popf
aad
pop
fs
repz
mov
movsb
and
pushw
jo
in
sub
je
dec
or
sub
adc
imul
cwtl
mov
aas
clc
lock
jb
xchg
sub
fwait
adcb
inc
rolb
xor
push
mov
jmp
jno
in
mov
pop
gs
pushl
lret
adc
test
lods
stos
xchg
sub
lret
fwait
andl
in
push
xor
stc
dec
inc
shl
lret
fdivr
jo
sbb
rclb
in
cmp
push
addr16
cmp
mov
sub
ret
lahf
mov
push
xchg
sub
movsb
js
mov
aad
nop
jg
jecxz
xor
shrb
test
sbb
jnp
add
or
mov
lret
leave
inc
clc
wrmsr
dec
movsw
stc
jne
pop
pop
cmpsl
and
push
lcall
mov
mov
lret
xchg
loopne
jnp
adcb
sbb
out
test
negb
inc
mov
pusha
mov
outsb
mov
xchg
sahf
call
mov
or
ror
add
insb
aad
jmp
and
cmp
push
fcom
mov
sub
ljmp
mov
in
sbb
lea
mov
inc
ja
sub
aad
pushf
xor
stos
sbbb
shr
push
add
adc
dec
dec
xchg
rcrb
lds
loopne
int
jg
imul
mov
xchg
xor
nop
flds
stos
xor
icebp
dec
rorb
adc
mov
in
jp
aam
xchg
xor
aam
sub
ret
roll
push
call
sub
dec
mov
sbb
insl
loop
mov
push
in
xlat
jae
push
insl
or
js
repz
faddl
push
movsl
pop
scas
nop
or
cld
std
fsub
in
loop
xor
xor
fisubrl
cmp
cmp
jge
aaa
sbb
push
push
andl
fwait
iret
mov
ficomps
xchg
inc
push
add
lahf
jnp
inc
gs
fcomps
mov
mov
clc
aam
int
ljmp
sbb
lcall
lock
xchg
std
or
adc
fldcw
push
nop
out
aam
dec
pop
inc
fmuls
nop
dec
popf
pop
dec
push
les
pop
imul
clc
and
cmp
fists
fistps
xchg
xor
clc
dec
mov
and
xchg
pop
xchg
ret
dec
lret
cli
inc
fcompl
cld
mov
push
adc
push
fidivl
mov
aad
mov
inc
pop
lds
test
sbb
les
fcoml
outsb
in
int3
push
int3
xchg
imul
pop
jl
outsl
repnz
xchg
or
mov
mov
ret
clc
pop
xchg
enter
or
sahf
adcl
or
subl
pop
and
ret
lahf
push
test
jl
mov
mov
les
push
imul
pop
sub
sub
pop
test
jae
pop
or
rclb
xor
jmp
dec
movsb
and
cmp
cltd
cmp
call
jp
fsubrl
ljmp
add
adc
push
pushf
cld
or
ret
daa
arpl
insl
mov
scas
loopne
mov
es
ljmp
sub
and
xor
pop
repnz
ljmp
in
inc
sti
sbb
addr16
dec
pop
cltd
cli
jbe
sti
mov
inc
inc
je
jne
add
mov
rorb
mov
out
mov
push
roll
notl
loop
pushf
fs
push
cmp
call
mov
pop
push
imul
js
shlb
xor
mov
dec
ficoms
inc
outsb
fadds
push
lahf
subb
add
or
insl
adc
js
mov
jns
or
nop
into
mov
push
inc
push
inc
enter
xchg
cmc
xor
sub
push
mov
fwait
push
cli
fistps
push
adc
mov
adc
outsl
pop
cmpb
mov
jo
pop
aad
and
jmp
lcall
xchg
push
clc
das
mov
inc
pop
nop
push
sbb
mov
cli
mov
cmp
lcall
cmp
jl
mov
movsb
inc
jb
sub
pop
inc
push
insl
and
lea
push
aaa
mov
push
mov
pop
adc
outsb
sbb
jno
mov
cltd
add
in
mov
in
add
jae
jnp
rcll
and
mov
dec
js
adc
push
sbb
scas
rolb
in
xchg
shrl
nop
out
in
lods
sbb
xor
sub
xchg
mov
mov
adc
xor
mov
shll
dec
and
sub
mov
xchg
imul
sub
pop
stc
inc
scas
idivb
shl
inc
pop
or
cwtl
or
pop
js
icebp
sub
fdivr
lock
scas
jo
xor
mov
sbb
cmc
lahf
sub
xchg
xchg
xchg
mov
pop
or
xor
inc
inc
aas
push
pop
cmc
adc
lock
in
fcomps
repnz
fsts
cmp
push
lea
jecxz
jo
jle
push
jns
add
lea
dec
or
jbe
xchg
and
loope
aam
pusha
das
cli
inc
jmp
les
cmp
gs
test
adc
notl
icebp
sub
jb
sbb
or
jbe
fmul
stos
outsl
and
test
sti
jle
pop
cld
mov
nop
icebp
dec
aad
cmp
jbe
imul
adc
movsb
jp
out
dec
es
xchg
or
xor
mov
jecxz
mov
shr
sbb
fistps
mov
or
sbb
push
xor
adc
jns
xor
cmp
and
ja
pop
pushf
out
stos
loop
incb
dec
ja
loop
mov
sub
pop
dec
test
mov
dec
xchg
hlt
jmp
adc
and
fnstsw
clc
add
jbe
lahf
sbb
jae
addr16
jbe,pt
cmp
pop
pop
pop
push
cmp
inc
stc
xor
cmpl
add
jp
xor
mov
lret
mov
pushf
add
add
add
xor
push
adc
mov
cld
stc
fdivrl
data16
add
fisubs
lcall
insb
cmpsb
sub
jecxz
adc
ret
mov
leave
scas
inc
dec
std
js
mov
popf
xor
idivb
das
jne
sub
movsb
push
lea
push
cmp
aaa
lods
mov
es
mov
fwait
pop
jo
sbb
jae
cltd
repz
xlat
add
jge
mov
cwtl
pop
inc
xor
test
je
pop
rcl
fldcw
and
fidivs
push
test
push
movsb
xchg
call
out
dec
inc
dec
ds
dec
adc
xchg
iret
enter
push
sti
jne
aaa
mov
mov
negl
jae
aad
int3
lods
jbe
mov
mov
and
scas
call
sub
lock
lock
cld
cmp
jno
je
or
mov
sub
aaa
pop
xor
ss
ja
xlat
fnsave
pop
or
fidivl
and
mov
inc
in
xor
lahf
mov
xor
pop
sbb
ret
mov
popf
arpl
sbb
lahf
into
mov
in
and
adc
lods
test
push
pop
cltd
or
push
in
add
addr16
cwtl
shlb
or
jmp
cmp
inc
sbbl
xchg
mov
std
push
popf
popf
sti
jp
fsubs
call
or
push
hlt
aas
addb
movsl
pop
stc
rcll
and
lret
mov
push
leave
fwait
enter
adc
push
flds
or
mov
and
and
les
sahf
in
push
push
pop
inc
sbb
push
popa
inc
inc
mov
push
fs
mov
test
je
shl
push
jmp
pop
or
aad
sbb
xchg
lret
adc
mov
mov
mov
jbe
testl
sbb
mov
sub
add
ss
lret
pop
lcall
pop
imul
adc
jge
les
cmp
pop
jae
push
outsb
xor
leave
mov
loop
cli
mov
out
cmp
push
jl
pushl
rcrb
jge
xchg
cmpb
mov
add
mov
ss
cwtl
mov
in
iret
cmp
cli
and
shlb
inc
popa
outsb
enter
fiadds
add
dec
xor
mov
test
mov
push
cwtl
add
ljmp
lods
sbb
dec
jg
jnp
cs
icebp
pop
nop
fstpl
sbb
sbbl
std
add
pop
dec
inc
ss
add
stos
push
ficomps
aad
gs
in
xor
xchg
jo
dec
jp
cmp
lcall
ret
mov
push
repnz
pop
stos
jns
xlat
jp
rcrb
inc
leave
mov
push
sub
das
addl
jo
ljmp
pushf
adcl
lret
or
add
jle
lcall
xor
add
bound
and
cmp
fdivrp
enter
negb
push
pop
call
sti
sbb
daa
xchg
test
inc
fiaddl
inc
jbe
lret
scas
lea
lods
sub
out
sub
adc
inc
mov
ficomps
xchg
adc
fidivs
test
add
xchg
pusha
push
mov
aas
mov
push
mov
imul
fstp
xchg
in
pop
jmp
adc
pop
or
imul
mov
push
cwtl
fisubl
sbb
jb
aaa
popa
mov
add
test
ret
stos
test
adc
out
scas
shl
inc
cld
aas
inc
cmp
push
mov
push
dec
jmp
ljmp
lea
dec
pop
xchg
cmp
mov
popf
or
scas
mov
test
mov
cmpsl
mov
mov
add
mov
push
mov
arpl
call
arpl
js
gs
stc
lahf
mov
sti
mov
inc
push
push
cmc
inc
add
sub
imul
pop
and
mov
and
addr16
mov
int
push
adc
call
call
lret
sub
lods
lcall
insl
sub
push
popa
jmp
inc
sub
insl
out
les
arpl
leave
lret
jbe
dec
lret
inc
push
push
xor
fwait
popa
pushf
cmpsb
inc
mov
mov
mov
add
dec
jmp
mov
arpl
jle
cmc
cmp
fistpll
and
fwait
aam
in
jo
imul
mov
imul
popa
xchg
imul
adc
das
insb
and
fldt
movb
and
push
push
xor
fidivs
pusha
pop
fbstp
jo
popa
or
pop
aam
push
loope
daa
ret
dec
fidivl
loopne
int3
cmc
pop
adc
test
mov
lret
ds
xor
int
sbb
and
arpl
adc
addb
mov
outsb
inc
sbb
xchg
into
stc
addl
push
insb
or
inc
in
cli
rol
das
inc
fidivs
pop
mov
int
nop
in
mov
pop
hlt
dec
push
call
arpl
fimull
push
xchg
subl
inc
fcom
sar
movsl
pop
std
imul
out
or
imul
clc
inc
xchg
enter
cmp
pop
cmpsl
adc
lods
bound
fisubrs
ja
jae
loop
out
add
or
out
xchg
jne
repnz
xor
dec
fdivs
push
pop
les
xchg
dec
jg
xor
hlt
xor
adc
cpuid
xor
sbb
dec
or
rcrb
jge
adc
imul
inc
int3
repz
inc
xchg
addr16
sub
and
outsl
pop
inc
bound
jg
xor
mov
xor
icebp
stos
jne
fstpl
imul
push
mov
mov
iret
stos
testb
add
push
mov
sub
jl
addw
rep
subl
sbb
lock
sti
and
pop
cmp
nop
inc
lds
cli
stos
out
popf
xchg
push
cmp
lds
pop
sahf
dec
xor
or
lods
pop
lds
push
jg
and
aas
imul
sbb
lods
push
pop
mov
aad
cmp
fimuls
imul
xor
jo
movsl
mov
mov
jl
pushf
fisubrl
pop
mov
pop
sbb
nop
jne
adc
mov
inc
inc
jno
insl
inc
inc
inc
mov
push
jb
push
je
test
jg
in
inc
out
jb
mov
cwtl
outsb
dec
decb
subl
cmc
jl
imul
pop
stos
scas
clc
lret
adc
scas
fldt
dec
mov
push
cwtl
add
fwait
inc
bnd
xchg
inc
es
jmp
imul
add
xor
mov
sub
push
stos
lea
fwait
and
xchg
cmp
rolb
xchg
inc
xor
dec
dec
jmp
pop
out
or
inc
ljmp
jne
sbb
mov
test
jmp
jno
pop
jp
mov
mov
pop
repz
mov
xchg
mov
test
sub
adc
cmpsb
movsb
in
fisttpl
and
sub
or
jg
adc
push
fisttps
mov
lret
lret
mov
pop
inc
mov
scas
mov
mov
sub
or
xchg
adc
pop
pusha
xchg
cmp
mov
mov
xor
pop
bound
mov
call
pop
sbb
pop
mov
fidivs
aad
sbb
push
fs
lea
adc
or
enter
enter
pushf
xchg
push
imul
xchg
sbb
es
jg
jbe
mov
lret
stos
pop
or
ds
sahf
cmp
dec
xor
pop
mov
sahf
push
iret
and
test
fwait
rol
sub
fcomps
jmp
mov
lret
fnop
adc
pushl
stc
ss
das
and
mov
movsl
je
mov
outsb
and
fnsave
mov
test
or
popa
jo
andl
or
dec
sub
roll
sbb
rcrl
std
mov
fists
clc
loop
aam
or
push
in
jmp
aam
mov
inc
sidtl
jnp
mov
cmc
fstps
jecxz
pop
jnp
jns
push
mov
popf
insb
sbb
push
mov
cmpsl
pop
pop
or
mov
mov
push
lds
inc
inc
sbb
ret
adc
test
xor
dec
out
dec
in
cmc
aam
mov
jg
cmp
push
dec
cmp
gs
imull
ffree
sub
push
pop
jns
xor
cmpsb
fcmovnu
test
bound
sbb
cmp
add
jo
fsubs
mov
mov
jne
dec
mov
insl
pop
mov
push
rorb
jbe
cmp
fnstenv
int3
int3
stos
inc
cmpsl
ret
aad
mov
inc
lret
inc
cmp
pop
out
test
cmc
in
push
push
aad
adc
jl
sbb
enter
jb
sub
or
fmull
mov
mov
aaa
push
test
pop
jnp
outsb
addl
dec
testb
mov
jge
and
push
adc
pop
bnd
out
mov
push
mov
mov
addl
inc
push
test
fimull
and
sub
leave
fdiv
imul
popf
in
add
loop
xor
mov
sarl
fcom
jns
push
xchg
push
mov
cmp
rol
xor
ljmp
fidivs
push
inc
daa
sbb
jg
cmpsl
fidivl
cmp
out
mov
enter
cmp
adc
jne
out
pop
add
mov
lea
cmpsl
mov
inc
push
xor
mov
repz
nop
lds
mov
pop
mov
or
daa
mov
pop
or
imul
aas
ss
pop
mov
fidivrs
sbb
popf
jns
adc
xor
mov
xor
daa
imul
xor
inc
dec
les
imul
lcall
xchg
mov
clc
jno
jno
jbe
xlat
and
push
dec
movsb
adc
sahf
push
mov
xchg
loopne
and
cmp
pop
test
aas
stc
insl
movsl
fs
data16
or
inc
dec
add
mov
add
lret
repnz
pop
pop
cmp
out
movsl
pop
sub
jecxz
out
insl
adcl
pop
pop
lcall
cli
fisubl
test
mov
popa
cmp
insb
aas
movsb
jge
cmp
and
leave
jp
cmpb
cltd
rorl
and
data16
rorb
jg
test
int3
pop
push
outsl
xchg
loopne
add
nop
xor
fwait
roll
xchg
xorl
outsl
leave
imul
mov
jle
or
push
xor
xlat
addb
cmp
lret
mov
jp
and
xchg
call
sarb
in
push
and
sahf
stos
mov
jmp
adc
fs
jmp
ljmp
out
mov
sbb
dec
je
addl
push
out
xchg
scas
mov
lods
sub
cmp
sbb
fs
sbb
or
int
mov
inc
imul
mov
ja
sub
push
push
cmp
out
cmp
dec
in
cmp
xor
aam
sub
pop
cmp
mov
xchg
mov
cld
movsl
ja
mov
stos
add
adc
ljmp
out
fs
jmp
out
shlb
mov
or
repnz
pusha
and
mov
scas
push
ss
fcoms
push
cmpsl
inc
xchg
adc
incw
jne
sbb
inc
jo
adc
mov
cmpsb
jae
push
bswap
push
test
int
out
cmpsl
lods
mov
stos
dec
lods
push
scas
inc
push
jp
push
hlt
adc
pop
jo
jp
mov
imul
xchg
cld
fs
adc
shlb
or
push
lret
dec
aaa
and
sbb
pop
in
dec
stos
mov
fistpll
les
fcos
jb
insb
je
or
jg
lcall
push
mov
inc
and
outsl
jno
or
inc
mov
xchg
cmpsl
push
lahf
roll
test
rol
rorb
sbb
out
cmpsl
add
jge
inc
in
xlat
stc
and
mov
add
push
dec
mov
iret
push
cmp
das
in
mov
adc
xor
jno
nop
jae
aam
bound
out
pop
clc
jne
mov
lods
jmp
lods
add
xor
adc
orb
repz
adc
add
movsb
or
cmc
ror
push
repnz
jecxz
sbb
popf
adc
dec
mov
mov
dec
sub
cmp
iret
xor
pop
ja
push
movsb
mov
sbb
sub
neg
cmpsl
and
lock
or
mov
mov
int
test
mov
outsl
roll
push
call
in
sbbl
ficoml
fs
jo
cltd
enter
notl
xchg
cli
sbb
mov
xchg
imul
les
and
fidivl
gs
and
push
repnz
inc
mov
mov
outsb
adc
jno
testb
es
pop
adc
stos
jmp
ds
sub
roll
xor
loop
jne
mov
pop
cwtl
das
flds
mov
mov
in
add
pop
inc
ret
push
mov
cmp
or
mov
mov
les
jmp
mov
sub
sub
stc
fisttpl
movsb
or
mov
int
mov
or
adc
jae
push
add
cmpsl
mov
cwtl
dec
jg
cmp
std
aad
vorps
sub
bound
xchg
ret
fcompl
mov
inc
sti
mov
iret
movsl
imul
add
cli
adc
arpl
imul
xor
daa
sub
jl
pop
andb
notl
loope
idivb
movsl
call
popf
lret
pop
roll
xor
test
sbb
lret
mov
adc
in
mov
mov
add
pusha
cmc
lods
repz
and
and
xor
pop
sub
sbb
jbe
dec
mov
push
bound
packuswb
push
scas
mov
sbb
popf
fisubrs
push
cmp
pop
leave
pop
and
add
mov
or
add
pushf
lcall
and
cmp
outsb
je
out
jg
adc
test
inc
sbb
mov
xor
mov
or
sbb
lret
out
aam
daa
jo
add
adc
inc
jb
mov
xor
jle
insb
out
jae,pn
pop
mov
jns
loopne
pop
add
xor
out
xchg
stos
pop
fisubrs
push
fucomip
std
add
das
cmp
jns
sbb
fsubrs
stc
dec
lret
xor
adc
jae
sarl
shrl
jl
sbb
or
cmp
mov
xchg
es
enter
jo
fwait
cld
fidivrs
cwtl
adc
mov
inc
sub
cmpsl
call
repnz
pop
hlt
imul
call
call
pop
push
test
mov
faddp
adc
fisttps
pop
nop
cli
in
adc
outsb
out
mov
cmpsb
js
aas
xlat
bound
xchg
filds
pop
or
mov
cmpsb
xor
xchg
insl
mov
inc
ret
add
ss
and
pusha
dec
out
jmp
in
sbb
mov
push
sbb
cmp
inc
popa
adc
inc
push
scas
movsb
lods
cmp
mov
in
mov
and
mov
sbb
in
imul
cmp
bound
ljmp
or
mov
cmp
call
xor
or
sbb
fs
cli
and
mov
shrl
inc
pop
xchg
in
adc
fadds
jno
mov
add
and
or
sub
je
and
xor
push
xchg
pusha
sub
and
mov
jae
adc
push
sahf
sbb
and
dec
inc
stos
das
dec
cmp
pop
cmpsb
aad
pop
mov
mov
stc
inc
jbe
inc
dec
xchg
xchg
pop
out
mov
and
stos
xor
and
dec
data16
and
int
adc
ror
or
dec
enter
enter
loop
jae
test
ss
aaa
mov
sarl
push
mov
shll
inc
aaa
les
sahf
and
push
loope
sub
add
and
iret
clc
mulb
pop
popa
sub
cmpsl
mov
enter
mov
dec
lock
aas
cmp
cmp
ret
sub
jge
mov
ficoml
pop
lret
pop
pop
push
xchg
not
and
int3
sbb
jne
and
std
and
jmp
xor
add
push
dec
outsl
inc
cmp
testl
out
xor
in
push
rcll
push
mov
sub
js
push
push
add
push
fcoml
inc
jb
dec
sub
pop
and
xchg
mov
mov
sub
outsb
mov
aaa
stos
xorl
push
sti
mov
popl
dec
cmpsb
xor
shlb
clc
lcall
mov
jo
fiadds
jb
xor
jns
sahf
out
iret
mov
pop
add
imul
repnz
sub
pop
pop
scas
mov
push
lock
mov
outsb
sarb
xchg
imul
adc
jb
scas
or
pop
cmp
add
pusha
mov
sti
mov
loope
fsts
scas
cmp
leave
jmp
jne
dec
dec
jmp
hlt
loopne
popa
lea
mov
cmp
sbb
xor
xchg
cmp
pop
faddl
cltd
sbb
stos
inc
cmpsl
and
ret
sub
pop
or
scas
and
mov
cmp
sbb
imul
pop
cmc
sub
outsl
pop
mov
movsl
mov
cmp
lods
mov
and
out
outsl
fs
dec
fstl
inc
push
mov
sahf
and
adcl
rorb
pop
fidivs
andl
sbb
add
push
mov
out
pop
popf
cli
add
cmp
xorl
jg
shlw
and
sub
rolb
jae
int
or
or
fs
negl
lods
xchg
jno
mov
sub
lret
in
inc
outsb
shlb
jb
stos
sub
cmpsb
movsb
out
stos
sti
add
push
jle
roll
push
arpl
ror
cmp
push
or
add
mov
or
and
pop
add
gs
xchg
jl
dec
movsl
std
inc
scas
adc
lods
cmp
mov
dec
mov
push
mov
adc
enter
icebp
and
xchg
pop
fbstp
or
inc
nop
cmp
test
or
jmp
adc
and
mov
sti
jae
jl
test
push
push
addb
mov
xchg
adc
add
stos
add
mov
movsb
sarl
jle
xchg
leave
outsb
out
ror
cmp
sahf
out
and
in
incl
or
imul
lock
sbb
mov
add
fwait
inc
dec
pop
pushf
push
mov
xchg
rorb
or
mov
mov
pop
stos
data16
mov
icebp
mov
add
xor
mov
push
fidivs
repnz
stc
inc
push
push
out
data16
sbb
imul
fadd
pop
incl
push
or
pop
mov
pop
repz
ds
lret
mov
outsb
sub
mov
and
xchg
sbb
rcll
mov
push
and
adc
testl
lret
mov
xor
lret
jns
lea
dec
jnp
aaa
mov
das
ss
js
lods
mov
or
outsl
mov
xchg
xchg
ja
pop
outsb
mov
inc
jns
xor
add
mov
orl
jg
movsb
mov
iret
ss
mov
cmpsl
or
and
test
je
xchg
ret
dec
jl
rorl
test
aam
xchg
adc
pop
call
xor
mov
dec
clc
cmp
inc
and
sbb
sub
adc
sub
sbb
xchg
test
dec
repz
loope
faddl
sub
stos
pop
xchg
mov
enter
push
adc
mov
cs
lret
jle
jecxz
daa
sahf
sarb
add
dec
fnstenv
mov
mov
add
mov
xchg
insb
lods
in
xchg
add
adcb
jo
jmp
push
into
js
add
dec
insl
fimull
push
xor
repz
adc
mov
xor
xor
out
and
shl
jnp
add
xor
mov
jnp
leave
and
clc
shrl
add
cmp
add
pop
sbbb
adc
add
push
pop
pop
outsl
pop
pop
add
inc
scas
les
ja
sub
fbld
or
and
cmc
insl
cwtl
jae
xor
iret
sti
xor
out
loop
lock
dec
rorl
jecxz
addr16
jecxz
mov
xor
xlat
push
sbb
sbb
lea
inc
test
push
or
lods
gs
cwtl
adcl
cmp
and
dec
xor
mov
mov
nop
loop
ficoms
popf
pop
in
movsb
sub
fs
xor
pop
mov
pop
mov
stos
xor
pushf
dec
fbld
xor
adc
f2xm1
insl
push
cmp
ss
sub
lds
and
add
mov
xor
mov
pushf
adc
xor
std
mov
aad
sbb
imul
sbb
out
push
test
or
fsubrp
mov
jle
ljmp
jns
push
fiaddl
jmp
jg
and
lods
pop
iret
int
lahf
jnp
movsb
sahf
roll
cmp
push
pop
stc
test
sahf
imul
and
sti
push
movsb
sub
sbb
scas
push
pop
sbb
out
jns
test
and
sahf
movsb
into
icebp
mov
adc
lods
or
mov
sub
shrb
adc
inc
clc
orb
ljmp
jnp
sbb
fsubrs
clc
mov
jo
adc
andb
pushf
outsl
push
xor
mov
fsubr
dec
fstps
mov
scas
mov
jge
popf
clc
imul
cs
push
fistps
sbb
dec
test
fnsetpm(287
in
sub
andl
dec
mov
fnsave
cmc
iret
push
mov
out
divb
push
xchg
inc
add
mov
or
sti
mov
loopne
loop
out
pop
insb
mov
mov
xor
fisubl
cmp
fisubs
xchg
out
push
pop
pop
cmp
push
cwtl
call
xchg
cmp
pop
xchg
mov
sub
fcom
icebp
or
ss
mov
push
or
repz
leave
popa
sahf
jge
pusha
mov
lock
mov
outsl
push
mov
lods
arpl
xorb
or
mov
push
mov
cmp
or
scas
inc
and
inc
pop
lock
push
dec
lret
out
xchg
or
jb
sub
adc
xchg
scas
sub
xchg
pusha
pop
xor
cltd
jmp
mov
push
lods
sbb
or
es
stos
dec
push
pop
lock
and
popf
jo
int3
int3
add
notl
dec
push
loopne
adc
stos
mov
push
mov
test
jg
movsl
movsb
adc
gs
imul
in
mov
add
repz
adc
loop
loop
cmp
inc
jbe
in
loopne
daa
or
dec
loope
or
xchg
insb
push
cmp
sub
ret
push
nop
jl
jns
into
add
mov
lret
add
adc
inc
push
subl
xchg
or
imul
inc
jg
adc
and
and
loop
bound
jl
dec
mov
mov
adc
mov
pop
adc
mov
pop
lds
in
mov
jl
pusha
sbbl
es
fimull
push
dec
or
aad
notl
lock
xchg
push
in
sub
sti
mov
test
cli
mov
mov
adc
notl
mov
popf
mov
jb
xchg
ss
sbb
cltd
dec
xor
sub
sub
es
dec
sbb
jge
inc
lds
dec
cmp
push
out
insl
out
mov
icebp
mov
or
fwait
out
xchg
mov
in
aad
adc
adc
push
jbe
jmp
xor
cmp
jns
jl
adc
loope
pop
mov
or
adc
and
pop
xchg
pop
mov
leave
idivb
les
int
lods
xor
decl
push
and
fstl
fucomp
movsl
xor
mov
js
mov
daa
sbb
xor
in
adc
pushf
mov
roll
pop
jle
shlb
mov
js
std
jge
iret
fcmovbe
mov
pop
sbb
data16
xor
mov
gs
lret
lahf
rorb
inc
jae
sbb
lcall
in
lcall
jecxz
das
xor
pushf
out
push
push
or
in
sar
idiv
int3
or
stc
scas
flds
dec
mov
dec
pushf
mov
mov
scas
andl
inc
movsl
mov
in
notb
add
xchg
add
xchg
loop
adc
enter
cmpsb
scas
xchg
xor
pusha
mov
lahf
sub
lea
push
lods
sbb
sub
rcl
pop
jo
dec
add
sarb
and
loop
leave
xlat
xchg
out
adc
repnz
daa
nop
mov
je
movsl
or
call
inc
sub
xchg
dec
scas
out
stc
lock
insb
daa
cmp
and
or
popf
jg
sub
js
cmp
mov
mov
pop
add
mov
mov
xchg
aaa
xchg
pop
fnstsw
stos
pop
jecxz
stos
dec
mov
xor
dec
jb
sbb
mov
jo
mov
mov
adcb
int3
cmp
cs
enter
aaa
insb
cmp
xor
addr16
mov
jp
dec
push
popl
loopne
sahf
push
cmc
nop
outsb
adcb
jp
mov
inc
sti
mov
adc
repnz
xchg
clc
lods
test
loop
and
xchg
cmp
jnp
push
dec
or
gs
rcll
imull
cmp
insl
and
into
add
mov
fs
add
repz
inc
rorb
stos
les
pop
arpl
sub
or
arpl
lock
les
rcl
fs
scas
cltd
cmp
les
pushf
sbb
xor
xchg
lret
out
mov
push
negl
ucomiss
adc
out
outsl
addr16
push
xor
xlat
fildll
ret
xchg
push
push
clc
test
js
das
notb
mov
jl
pop
or
cmp
ja
scas
xchg
fwait
add
popf
in
fiadds
push
orl
mov
imul
icebp
dec
dec
cmpsl
outsl
push
or
cs
jnp
aad
push
ss
es
mov
sbb
icebp
add
popa
out
iret
cmpsb
call
loop
and
adc
icebp
lahf
cld
mov
mov
repz
push
xchg
cmp
sbb
push
test
stos
xchg
jae
imul
add
xchg
xchg
sbb
cmp
pop
jle
nop
mov
xchg
adcb
stos
push
xchg
hlt
sbb
fiadds
testl
lea
mov
pop
cmc
mov
pop
xchg
repz
jae
push
cmpsb
data16
ret
add
cmp
pop
mull
lods
inc
fsubrl
decl
push
dec
adc
lea
stos
das
jecxz
dec
test
lahf
cmc
fdivl
call
call
mov
je
jbe
add
and
icebp
pop
sbb
dec
jno
test
sbb
clc
lcall
push
dec
or
xor
mov
cmp
leave
ret
js
pop
adc
out
icebp
mov
sbb
pop
mov
cwtl
mov
ret
ljmp
jle
fsubrl
dec
ret
push
mov
rcr
imul
fbstp
std
inc
lods
test
aaa
mov
std
and
push
xor
repz
clc
and
pushf
ljmp
push
pop
mov
pop
out
sub
jmp
mov
addr16
ss
and
leave
repnz
dec
sarl
add
sub
push
pop
loop
xor
and
pusha
mov
jnp
ret
inc
mov
xchg
daa
les
and
flds
jns
push
xchg
and
sbb
mov
adc
mov
in
and
add
inc
stos
xchg
xlat
mov
push
testb
push
xor
movsb
mov
cld
jae
fbstp
jge
jbe
insb
cmpsb
xor
fldl2e
int
popa
or
lcall
dec
adc
sub
mov
andl
ret
lret
in
cmp
mov
jecxz
scas
jecxz
popa
ss
leave
push
mov
inc
stc
repz
jp
or
popf
adc
xchg
es
mov
pop
mov
sbb
push
mov
sub
in
cld
pop
js
xor
push
mov
into
daa
xchg
fldenv
mov
loop
dec
loopne
mov
jne
mov
push
sub
cmp
dec
pop
adc
test
jmp
sti
pushf
jb
repz
popa
std
and
jno
adc
sahf
pop
cli
adc
cs
pop
jmp
add
xchg
lcall
scas
mov
faddl
notl
cltd
mov
inc
out
loopne
sub
enter
jmp
lock
push
repnz
or
xchg
mov
xor
sub
dec
dec
sub
xor
clc
inc
dec
jmp
jl
outsl
jns
mov
in
xlat
shll
mov
int3
cltd
adc
mov
add
test
sbb
mov
cmp
insb
pop
pusha
sub
jbe
sbb
mov
adc
dec
pop
mov
iret
adc
insl
movb
mov
addps
pop
sub
jno
fst
dec
xchg
cltd
mov
fmull
jne
mov
pusha
out
sub
das
popf
push
test
jae
dec
stc
arpl
cmc
stc
xor
mov
ret
stc
rclb
movsl
frstor
out
shr
push
enter
pop
push
push
movsb
test
sbb
pop
mov
pop
mov
icebp
stos
xor
add
rorb
jb
push
mov
push
xor
gs
dec
xchg
and
mov
add
mov
arpl
jle
outsl
cli
test
pop
loop
aad
or
into
jecxz
or
jne
nop
sbb
mov
xor
std
pop
fmull
outsl
xchg
mov
popa
cli
out
test
fsubrl
or
pop
or
mov
cmp
shrb
dec
xchg
in
ror
xor
push
push
add
add
je
icebp
fistl
pop
or
mov
movsbl
sbb
fiaddl
dec
imul
cmpsb
xchg
fists
mov
jge
movsl
and
popf
sbb
and
stos
xchg
xor
jnp
fwait
and
fstl
jge
mov
dec
mov
int3
or
jle
push
lcall
mov
ja
push
sbb
bound
data16
jae
pop
jp
lea
imulb
sbb
pop
cmpsb
xchg
and
fildl
movsl
repz
subl
adc
rorl
inc
roll
mov
fsubr
into
mov
mov
lahf
and
lcall
pop
mov
pop
addr16
or
inc
fadds
pop
xchg
insb
push
lock
dec
fwait
xchg
jl
jae
repz
xchg
dec
movsb
add
pop
inc
inc
icebp
popf
insl
pusha
fstl
sti
aas
aam
or
pop
je
int3
sub
lods
aas
jmp
fildll
lock
dec
lcall
imul
add
out
je
mov
xchg
ret
xchg
movsb
dec
clc
inc
and
jge
cmp
pop
lock
push
int3
xchg
and
push
push
out
clc
jb
mov
repz
mov
loopne
adc
orb
jl
sub
fsubs
lret
jge
sbb
lret
in
das
mov
pop
and
sbb
test
dec
movsl
fcmovnu
cmp
ret
fistps
stc
mov
dec
xchg
pop
addr16
das
cmp
in
pop
testl
or
lods
xchg
sub
stos
scas
dec
and
cmp
shrl
mov
or
repnz
adc
repz
ss
xchg
ds
mov
in
leave
ficomps
mov
pop
movsl
pop
aaa
icebp
daa
inc
pushl
mov
mull
xchg
int
dec
adc
inc
lcall
out
pop
insb
cmpsb
movsl
dec
inc
lods
rorb
rorb
cli
or
std
jecxz
pop
jno
xchg
div
sbb
in
in
dec
mov
or
xorps
jg
mov
xchg
fmuls
dec
pop
out
mov
push
jno
add
and
or
pop
cmp
lcall
or
je
sub
imul
cmp
fisttpll
movsl
fs
hlt
fcompl
or
in
mov
pop
cmpsb
mov
push
clc
pop
mov
mov
fwait
mov
or
daa
test
popf
pusha
call
cmp
adc
faddp
das
sub
inc
pushf
and
vpmacssdd
mov
test
mov
aas
and
call
js
test
mov
push
shlb
cmp
flds
icebp
mov
shlb
aam
push
frstor
mov
push
xor
inc
or
out
dec
push
mov
push
ds
push
xchg
sbb
push
std
test
in
inc
lret
xchg
test
in
mov
mov
mov
popa
aas
lret
add
xor
sub
leave
leave
push
add
add
jo
cs
rcr
xor
push
cmp
pop
and
mull
out
loope
mov
ds
xor
xlat
xchg
ljmp
mov
pop
dec
outsl
mov
orl
add
fstpt
ljmp
xor
inc
aaa
insw
adc
ss
mov
je
mov
and
push
movsb
ss
cmp
mov
fsubrs
and
and
mov
sbb
mov
xchg
jno
sahf
add
loopne
push
data16
out
push
or
cs
jno
out
stos
pop
adc
pop
jo
ds
out
nop
icebp
sub
pop
ror
pop
mov
push
pop
adc
xchg
xor
iret
mov
das
cmp
jbe
bound
lock
jle
xchg
mov
pop
inc
test
outsl
jg
adc
notl
cld
push
mov
mov
and
arpl
pop
cwtl
push
sarb
lock
insb
sub
ja
bound
das
cmp
cwtl
call
adc
stc
cli
arpl
mov
test
repnz
fisttpll
fcoml
mov
shlb
or
nop
mov
or
dec
sbb
out
scas
aam
xchg
insb
inc
in
test
jbe
pop
mov
je
fiadds
test
cmc
popf
jns
ja
mov
xchg
out
push
xor
mov
fnstsw
out
mov
int
out
enter
cs
decl
aam
fisubrl
sub
sub
repz
pop
fucomip
push
mov
out
rcl
mov
movsl
cli
pop
dec
mov
and
xor
cmp
scas
mov
push
inc
pop
leave
sahf
iret
mov
repz
add
aaa
lcall
mov
xor
mov
nop
mov
cmp
xorb
xchg
and
or
sbb
mov
add
ficompl
sbbl
mov
sbb
dec
js
push
adc
pop
aam
adc
dec
sub
xchg
jp
and
xchg
cltd
les
mov
imul
sub
dec
imul
cmp
cmp
push
fcom
jnp
lahf
int
js
das
popf
fwait
and
out
cmp
xor
cltd
jo
push
mov
repnz
or
stos
inc
mov
std
add
push
cmp
jle
sbb
or
jp
out
xorb
aas
clc
out
nop
es
enter
jb
mov
jge
add
ljmp
push
stos
push
incl
pop
lods
xchg
push
fwait
mull
xchg
mov
mull
fdivl
cld
testl
add
pop
cmp
push
scas
lea
stc
iret
dec
out
lock
popa
imul
mov
fnstcw
in
fisubl
popa
rcll
fcmovu
inc
rcrb
lods
dec
sbbl
cld
lret
mov
dec
push
dec
mov
and
cli
mov
pop
movsl
push
add
add
xchg
sbb
mov
inc
repz
lahf
js
mov
pusha
faddp
cwtl
adc
nop
adc
ljmp
sbbl
aas
adc
add
ja
ljmp
in
jl
xlat
test
sbb
iret
sbb
aad
dec
jmp
rcrl
push
aad
mov
in
imul
and
lods
fidivs
dec
mov
sub
pop
or
mov
rorb
outsb
repnz
jno
mov
mov
jmp
dec
mov
ficoms
fst
sub
sbbb
lret
mov
ficoms
add
test
stos
sbb
xchg
and
lods
loopne
adc
mov
push
pop
lock
ficomps
pop
lods
push
sub
ljmp
fwait
mov
jnp
js
jl
lock
mov
das
or
mov
lret
ret
lret
xor
fs
rcl
mov
cmpsb
test
adc
cmp
xchg
orl
push
mov
pop
andb
pusha
or
ja
xor
push
pop
jns
cmp
ja
lahf
arpl
popf
pop
xor
out
cmp
lcall
or
test
sub
cmp
sbb
mov
pop
cmc
and
and
fildl
fwait
aad
mov
popa
add
and
daa
cli
sub
enter
arpl
xor
pop
jne
aas
mov
xchg
aas
cld
not
pop
inc
xor
test
leave
sbb
addl
test
gs
lock
mov
pop
popa
pushl
add
stos
arpl
and
sbb
pop
divl
sub
push
jp
enter
push
mov
andl
inc
and
xchg
ljmp
and
adc
inc
vcvttpd2dqx
jbe
mov
adc
jl
dec
inc
or
das
dec
mov
pusha
test
or
fistps
push
in
mov
aam
add
lods
insb
decb
insl
pop
mov
jnp
xor
or
mov
subl
inc
aas
dec
test
popa
ds
sbb
xchg
insb
pop
lock
sti
inc
call
mov
repz
mov
out
lods
pop
xor
jecxz
fcos
sbbb
iret
adc
fwait
sbb
ret
cmc
jl
mov
ja
into
cli
leave
push
addb
fcomip
xor
scas
ja
sbb
or
out
mov
or
sub
sub
mov
cs
ljmp
popf
sub
shrb
mov
sbb
out
cld
scas
ljmp
pop
pop
mov
lods
mov
mov
popf
fidivrl
add
xchg
mov
mov
jno
pop
jp
or
xchg
fcmovnb
jg
and
xchg
mov
imul
inc
xchg
dec
ja
mov
mov
mov
popf
lea
push
push
jae
pop
call
xchg
xlat
test
xor
imul
dec
cmp
push
ds
or
lods
stc
lcall
mov
scas
or
sti
inc
sbb
sub
pusha
jmp
mov
sbb
mov
cmp
in
outsl
loopne
repnz
jb
sbb
mov
cmc
inc
scas
jne
out
dec
jg
add
mov
fcoms
xchg
xchg
jle
jle
daa
add
fstp
adc
mov
push
cmpsb
bswap
mov
out
test
decl
dec
filds
repnz
pop
add
clc
xlat
cmp
fldcw
notl
sbb
dec
out
inc
sub
add
jne
add
sbb
lods
rcrb
fistpl
xchg
cld
pop
test
cmpsb
mov
ficomps
inc
out
jno
arpl
loope
xor
xor
iret
stos
push
add
xchg
mov
inc
add
jmp
aam
fcoml
cmpsb
cmp
adc
icebp
add
mov
leave
insb
dec
test
subl
push
out
or
dec
sub
mov
pop
push
cmp
xchg
jo
aad
in
repz
hlt
cs
in
dec
jecxz
dec
dec
add
dec
add
dec
pop
cmp
addl
fldln2
ja
dec
push
loope
cmp
xchg
mov
xchg
stc
dec
sbb
lcall
and
out
xlat
lret
call
cmp
rcrl
sarb
out
jnp
push
scas
push
test
pop
sarl
sbb
sub
jecxz
jp
xchg
pop
mov
add
es
rcrb
add
dec
push
mov
mov
mov
out
mov
outsb
outsb
in
dec
rorl
ret
cli
mov
sub
push
hlt
add
scas
loop
xchg
and
mov
add
test
cmpsb
pop
add
divb
std
pop
cmp
pop
sub
pop
mov
sub
fs
xchg
pop
dec
outsl
mov
test
xor
sub
stos
jmp
dec
mov
push
and
or
hlt
cmp
adc
int3
sub
dec
repz
repz
movsb
aaa
lahf
leave
push
aad
mov
repnz
jae
adc
repnz
jb
cltd
mov
and
mov
pop
adc
xchg
mov
or
add
jg
fucomp
je
andb
js
cmp
pop
adc
mov
mov
aad
push
xor
js
call
xchg
leave
pop
pop
clc
jle
pusha
dec
out
mov
aaa
cmp
mov
fcoml
mov
das
or
in
out
out
dec
cmc
imul
push
pusha
push
or
mov
mov
push
test
loop
or
and
push
outsl
or
add
pusha
sub
cmp
sub
xchg
jae
xor
sub
jno
lds
sub
scas
jge
dec
cmp
or
mov
push
push
addl
xchg
popf
xchg
mov
cmp
mov
fidivrl
dec
cmp
inc
xchg
nop
xchg
je
adc
lock
jmp
mov
sahf
stos
mov
pop
mov
push
sbb
pop
test
outsl
push
xchg
cmp
mov
inc
stos
dec
mov
mov
out
fldenv
stos
push
aas
lahf
inc
jnp
out
or
in
cmp
xchg
cwtl
pop
adc
fbstp
cmp
icebp
cld
sbb
jp
pop
cli
push
dec
mov
sbb
rcll
out
mov
mov
in
fisubl
xchg
sbb
sbb
push
sub
dec
xor
orb
lea
imul
mov
adcl
mov
sbb
pop
adc
mov
push
sub
xchg
mov
xorl
mov
push
std
adc
loop
jnp
std
xchg
bound
faddl
cs
test
or
add
xchg
ss
dec
inc
cs
ret
push
jg
xchg
xor
inc
pop
mov
pop
in
loope
sub
jmp
iret
add
inc
loop
movsl
inc
imul
mov
pop
push
sbb
pop
pop
push
mov
movsl
cmpl
add
incb
push
shl
loop
dec
pop
data16
xor
or
cmpsb
std
repz
mov
cli
cmp
adc
ljmp
adc
jge
in
dec
adc
adc
mov
add
xchg
jo
dec
sub
repz
inc
iret
dec
push
push
mov
pop
pop
dec
sahf
inc
andl
xor
pushf
push
push
stos
imul
insl
jo
rcll
xor
mov
xchg
push
add
xchg
jb
sub
mov
mov
inc
in
cmp
imul
dec
mov
lret
enter
add
mov
push
flds
dec
bnd
jae
arpl
rolb
xchg
mov
cwtl
stos
inc
repnz
cwtl
mov
shl
mov
xor
std
lods
ss
jmp
xchg
mov
push
bound
jp
dec
fildll
out
pop
xchg
lret
outsl
add
add
daa
cmp
ror
push
mov
push
ss
cmp
adc
mov
push
das
aas
mov
mov
enter
mov
and
cmp
in
jmp
xlat
out
decb
xchg
mov
test
clc
or
dec
jb
into
das
push
xchg
jmp
dec
in
call
popf
mov
mov
add
in
cs
xlat
jle
jo
inc
in
sbb
inc
mov
adc
jo
xor
pop
repz
cmp
js
sbbl
mov
add
push
mov
dec
sub
sbb
mov
into
stos
push
mov
outsl
jp
xchg
jns
xor
pop
add
lods
sub
push
sar
or
cs
add
dec
scas
xor
nop
cwtl
ret
fs
rorl
movsb
ss
fisubl
lret
hlt
je
xchg
cwtl
jne
mov
test
das
mov
inc
add
mov
aaa
mov
ds
adc
or
popf
jno
fnsave
not
imul
adc
jae
push
xchg
jge
add
xchg
jbe
daa
mov
xor
inc
and
dec
jb
ljmp
mov
dec
jnp
test
popa
aaa
testb
movsb
xchg
adc
or
inc
ja
call
add
sbbb
into
jbe
mov
ss
movsl
cmc
test
jl
push
ljmp
xor
or
mov
daa
cld
pop
jno
out
insl
mov
push
inc
xor
or
adc
mov
lret
jae
push
cli
cmp
in
das
sbb
inc
imul
std
jecxz
sbb
cmp
xlat
pop
stc
mov
xor
cmp
cmpsb
inc
xor
inc
dec
pop
or
or
push
sbb
fnstcw
sahf
add
mov
dec
mov
lock
addb
cli
pop
rclb
test
out
das
imul
push
in
xlat
adc
insb
xor
jbe
xlat
mov
pop
lea
mov
or
lea
pop
leave
fimuls
and
fcomp
sub
loopne
push
sub
dec
mov
fwait
data16
enter
mov
scas
adc
repnz
inc
in
mov
addr16
aam
stos
rclb
or
fsubs
inc
movsb
lahf
push
xchg
flds
fdiv
insb
stos
mov
lea
or
loopne
icebp
xor
iret
pop
xor
aad
inc
pop
adc
aad
rorb
fdiv
cwtl
pop
cmpsl
mov
xchg
lds
xchg
mov
cmpsl
pusha
mov
or
push
fstps
fists
clc
xchg
jecxz
xor
push
pop
lods
popf
test
mov
enter
pop
iret
shl
divb
imul
sbb
addb
ljmp
orb
in
sahf
mov
pop
and
sarb
jg
jns
lret
sti
dec
imul
scas
or
cld
add
add
lock
xchg
outsb
idiv
loopne
lods
sahf
mov
fisubl
push
adc
aas
cwtl
inc
push
inc
adc
sub
outsl
mov
mov
inc
mov
and
movsb
and
mov
call
icebp
lods
push
and
int3
inc
in
fcoml
fisubl
mov
stc
rorb
ret
daa
pop
sbb
pushl
data16
push
inc
pop
in
dec
daa
popf
jge
cmp
je
shll
push
push
pop
sti
sub
jle
mov
sub
call
mov
dec
add
pop
mov
adcl
add
pop
pop
fbld
sbbb
adc
jns
jno
sub
pop
sbb
hlt
push
pop
int3
inc
lcall
mov
push
mov
mov
mov
cld
call
inc
daa
push
addr16
mov
subb
sahf
sbb
lock
push
cmpsb
pop
adc
dec
xor
lahf
jp
addr16
fisubrl
pop
and
jns
les
out
jecxz
shrl
fcoml
mov
mov
imul
jmp
rcr
mov
test
xchg
xor
repnz
sbb
testl
std
sub
fcoml
jno
les
pop
cmpsl
pop
fistpll
out
pop
int
mov
mov
fxch
xor
cmpsb
addr16
sbb
xor
shll
push
pop
sahf
push
in
push
add
or
jae
mov
bnd
scas
mov
jbe
movsb
inc
adc
ret
stc
pop
jmp
xor
pop
cmp
add
fadds
icebp
jecxz
dec
sub
inc
xchg
or
jmp
sbb
mov
jnp
lret
test
and
xchg
fwait
ss
sbb
sub
push
push
repnz
lods
add
in
in
cmp
aam
cld
insl
imul
adc
sub
sub
add
push
out
jne
dec
insl
pop
pop
sub
jbe
mov
jb
aam
lret
mov
cld
jns
jae
jo
sub
cmp
mov
lret
aaa
nop
das
cmp
cltd
mov
inc
call
pop
ret
push
mov
adc
sbbl
jno
cmp
and
loope
xchg
imul
jg
int
adc
cmp
jns
js
enter
or
jb
adc
sbbb
inc
mov
mov
push
mov
out
add
fcoms
pop
xchg
pop
cwtl
cwtl
lods
sbbb
or
mov
add
push
dec
adc
fldt
in
lods
dec
fistps
xchg
shl
or
xchg
daa
sti
mov
mov
pop
arpl
push
and
cmpsl
jb
mov
int
insb
nop
dec
idivl
out
and
popf
jne
pop
aaa
xchg
sbb
dec
out
add
mov
enter
add
mov
or
mov
lock
push
and
pop
inc
mov
xchg
in
sbb
aaa
adc
jno
outsb
fcomps
xor
cmp
or
movsl
fstl
adc
loop
push
dec
jp
mov
and
jmp
and
jge
cmpsb
pop
cmp
ret
jns
mov
add
push
insl
ds
aaa
movsl
shlb
sbb
xchg
flds
shlb
insb
hlt
push
scas
lcall
js
mov
push
add
mov
and
loopne
das
pop
js
cmp
xchg
cmp
jp
sbb
arpl
movhps
or
data16
mov
test
dec
adc
xor
int
inc
adc
leave
push
xor
xchg
cmp
jp
cmp
sbb
cld
pop
add
orl
and
outsl
pushf
or
xchg
push
sub
fidivs
test
cli
jae
stos
std
fidivrs
xor
and
dec
fldz
xlat
aaa
push
lret
fiadds
imul
loop
mov
sahf
cmp
inc
incb
push
pop
fists
outsb
sbb
rcll
jl
cmc
add
push
pop
loop
mov
fsubrs
out
push
adcb
mov
xchg
jmp
jns
xchg
mov
ret
pop
cmc
push
ret
cld
fs
sbb
cmp
jb
iret
mov
out
ss
jae
xchg
or
in
loop
call
mov
inc
cmpsl
cmc
inc
xchg
sub
outsb
ljmp
andl
push
js
inc
inc
fcomi
in
js
lods
inc
adc
int
mov
mov
rorb
jmp
pop
push
adc
and
imul
and
mov
sub
fsubrp
jmp
aaa
jb
jb
cmp
stos
add
xor
ds
pop
insb
push
mov
sbb
es
and
push
mov
nop
stos
loop
sbb
dec
pop
mov
dec
out
shrl
or
mov
sub
pop
cwtl
adc
out
cmp
ljmp
sbb
sub
pop
inc
ret
jns
cld
inc
pop
push
and
sbb
cmp
mov
pop
loope
arpl
inc
push
pop
inc
mov
and
test
stc
rorl
push
fs
jnp
push
mov
cmpsb
jmp
popf
fsincos
out
mov
ss
mov
push
adc
lea
pop
cmc
xchg
movsl
test
loope
dec
xor
dec
jo
xor
jmp
sbb
es
xchg
into
lods
push
cmp
lea
les
sarl
jae
xor
in
xor
and
fadds
insb
jp
sarb
frstor
fdivrs
sub
pushf
shl
mov
sti
xor
lcall
sbb
mov
jg
out
or
pop
das
xchg
mov
jmp
out
out
sbb
test
imul
pop
dec
bound
mulb
cmp
adc
pop
pop
cs
xor
orb
testl
mov
inc
jbe
inc
insl
mov
outsl
push
cwtl
enter
mov
push
test
push
aam
rol
fistps
mov
mov
repnz
or
or
jns,pt
mov
push
test
gs
xor
pop
addr16
mov
divl
mov
adc
sub
pop
jg
int
cmpsb
lea
gs
lds
inc
cmp
sub
sub
lret
mov
cmp
or
ficompl
in
dec
pop
mov
sub
popa
add
sub
xor
clc
inc
sarl
scas
push
push
enter
movsl
cmpsl
scas
xchg
aad
out
cmp
jge
cmp
xor
cltd
and
cmp
sbb
cmpsb
leave
insb
mov
xor
data16
xlat
mov
loopne
lea
aam
or
stos
jno
and
fstl
in
add
pop
je
test
dec
cltd
pop
rorb
mov
sbb
in
scas
add
loopne
sub
movsb
dec
mov
ljmp
inc
imul
dec
daa
in
jae
sbb
cltd
cmp
pop
mov
cwtl
dec
fldln2
push
out
inc
add
daa
js
faddl
shlb
mov
add
lcall
fs
mov
inc
pop
xor
repz
jl
adc
pop
mov
ret
mov
sbb
inc
adc
dec
es
xchg
in
jg
stc
pushf
test
das
xor
cwtl
adc
pop
mov
dec
arpl
scas
push
mov
jo
mov
popf
cmpsl
mov
ja
add
pop
mov
jb
into
xchg
xchg
pop
in
inc
movsb
push
fdivp
push
pop
shl
push
mov
xor
add
scas
call
push
sbb
jg
mov
sbb
xor
lods
or
lret
pushl
fiadds
jae
inc
je
jl
pop
pop
rcll
jae
hlt
pop
je
add
mov
mov
test
ja
xchg
and
push
dec
add
roll
add
inc
pop
mov
inc
ret
xor
std
push
sub
imul
rorb
repnz
ljmp
clc
sbb
addb
movsb
mov
xor
push
gs
mov
sbb
iret
pop
push
pop
mov
cmp
mov
fwait
shl
jl
or
adc
xor
stos
mov
movsb
fstp
sub
mov
mov
outsl
aad
mov
dec
push
xlat
rcrb
test
loopne
movsl
cmp
lcall
sbb
pop
sub
xchg
ds
leave
mov
orb
inc
or
mov
test
popf
xchg
ss
mov
mov
into
jbe
xchg
stos
cltd
inc
in
cli
inc
cmp
jb
pop
add
sbb
nop
mov
enter
andl
dec
xchg
fdivrs
fimuls
xor
jbe
mov
ljmp
xchg
pop
rol
lea
pop
push
popl
out
jnp
repz
popa
adc
jg
dec
in
xor
icebp
pushw
shll
and
fsubrp
mov
push
or
mov
cmp
mov
cld
dec
bound
test
arpl
cmp
fcmovbe
sub
push
gs
jge
mov
test
mov
add
xchg
mov
inc
pop
call
xchg
mov
add
imul
mov
pop
pop
pushf
or
jecxz
jb
mov
xor
push
push
aad
jmp
fs
sub
test
int3
mov
jno
lock
sahf
mov
sahf
inc
int3
mov
iret
pop
les
test
fmull
dec
adc
fmuls
pop
inc
std
add
daa
scas
xor
repnz
cli
jo
outsl
push
cmc
sub
fdivrs
sahf
insb
inc
andb
cmpsl
or
xor
xor
cmp
lret
push
iret
rorl
mov
test
jns
mov
fistpl
lods
lock
dec
stc
insl
dec
ret
mov
mov
and
and
loope
mov
imul
dec
shll
add
nop
daa
test
in
icebp
mov
addr16
dec
nop
clc
inc
inc
xchg
cwtl
mov
negl
popa
aad
sahf
fcmovnb
arpl
adc
jg
xchg
mov
inc
daa
stos
and
js
nop
sbb
ret
ljmp
mov
cmp
mov
daa
repnz
ss
mov
and
push
outsb
fldl
mov
push
and
dec
sbb
movsl
and
fld
lcall
bound
xchg
sbb
iret
movsl
push
dec
lds
nop
xor
and
movsl
scas
sbb
cld
pop
dec
inc
fldcw
xor
jecxz
add
sarl
push
sbb
fisubrl
inc
pop
call
inc
dec
adc
mov
sub
mov
xchg
push
mov
ret
or
out
mul
inc
pusha
loope
xor
pop
loopne
int3
and
xchg
ret
shl
inc
arpl
mov
mov
imul
inc
shlb
inc
adc
sti
mov
cwtl
mov
ja
dec
jb
test
and
push
jge
dec
pop
push
es
pop
icebp
jnp
mov
icebp
bnd
cmpl
fidivl
es
mov
and
in
jo,pt
mov
xchg
mov
lea
sub
xor
push
ret
and
push
push
movsl
ret
daa
mov
mov
clc
dec
ja
popa
cmp
jp
pop
xchg
lret
mov
xor
mov
pushf
imul
mov
dec
or
inc
daa
shll
scas
insb
stc
sub
pop
stos
or
dec
mov
add
sbb
push
cwtl
cli
mov
sbb
xor
decl
imulb
rcrl
push
mov
scas
in
in
xchg
daa
mov
int3
int3
xchg
aam
or
cs
testl
jb
pop
insb
inc
mov
sub
cmp
sbb
and
nop
mov
dec
xchg
xchg
lahf
int3
adc
sbb
dec
pop
push
and
pop
outsb
out
out
cmp
or
xor
test
cltd
cmpsb
shll
and
mov
xor
add
xchg
pop
xor
das
push
fmulp
lods
ds
arpl
scas
ret
cmp
sub
in
pop
ja
push
jl
out
pop
pop
out
fdivrl
dec
jbe
sub
arpl
pop
out
dec
mov
add
sar
push
push
ljmp
nop
xor
cmc
ljmp
lds
mov
ds
pop
daa
cmp
xor
pop
ficoml
sbb
sbb
adc
mov
test
or
pop
lods
std
fnstsw
in
inc
aas
xchg
pop
pop
jg
jnp
and
ljmp
fstpl
mov
test
icebp
add
add
xchg
push
jae
pop
je
add
pop
cmc
push
xor
rcrb
dec
lea
xor
lods
inc
adc
cmp
fnstenv
mov
jp
filds
inc
stos
pop
pop
mov
push
xchg
pop
fists
loopne
leave
push
ljmp
repnz
inc
push
or
lahf
out
fmuls
or
fdivs
movsl
test
stos
fistpl
dec
add
cltd
jl
pop
push
push
mov
fistps
dec
sbbl
add
sub
cmp
icebp
xor
push
cli
scas
mov
lods
mov
sbb
jno
cmp
sbb
xor
cmp
cwtl
add
or
lret
pop
pop
mov
sbbb
jne
frstor
imul
leave
mov
xchg
cli
mov
lods
inc
flds
jle
sar
test
push
and
lahf
imul
enter
jns
into
pusha
jg
shrl
mov
jmp
test
stc
inc
inc
cmp
xchg
mov
push
repz
ret
aam
push
cmp
dec
dec
jnp
addb
movsl
ds
lret
mov
in
orl
in
xchg
mov
xor
shl
dec
pop
mov
pop
out
pop
hlt
cmp
lret
xor
test
test
jmp
and
jmp
test
fsts
inc
xchg
jp,pt
repnz
outsb
sbb
jg
imul
cmc
jno
mov
je
stos
jno
push
loope
sahf
dec
cld
push
int
hlt
rcll
ljmp
mov
xchg
inc
mov
and
push
orb
push
lea
xchg
mov
mov
repz
mov
and
mov
bound
imul
sub
xchg
popf
mov
mov
shrb
sti
lret
mov
xchg
xlat
imul
sbb
jo
lods
test
or
enter
test
xlat
pop
pop
mov
cmp
add
fwait
int
repnz
test
mov
pop
lret
inc
push
inc
xchg
mov
jne
push
mov
pop
add
aad
and
dec
mov
rolb
sub
mov
dec
cmp
repz
inc
add
test
ret
sub
into
adc
sub
inc
or
cmc
xchg
inc
sub
popa
adc
xchg
je
pop
lret
cmp
int3
pop
push
fwait
lea
arpl
decl
pop
inc
xchg
mov
loope
add
cmpsb
xor
test
lahf
push
enter
ret
addr16
fdivl
xchg
ds
mov
faddl
sub
mov
mov
push
mov
sarl
cmp
lea
je
cmp
cwtl
xor
aas
dec
sarb
ss
loop
int3
cmp
mov
test
mov
fildl
or
pushf
sub
mov
lcall
xchg
pop
push
mov
push
xor
or
insb
dec
ret
xor
pop
cld
call
nop
push
sbbl
addr16
add
cmp
ret
add
and
sub
fs
pop
test
in
sub
xchg
xor
push
lcall
xchg
or
cwtl
mov
enter
shl
int
jg
push
enter
imulb
fdivrl
cmpsl
sub
pop
and
mov
add
popa
pop
push
repz
int3
or
pop
pop
jle
mov
mov
pop
mov
mov
inc
cli
ljmp
jle
pop
test
in
mov
inc
fs
cmp
pop
aam
xchg
sub
loop
jecxz
mov
test
xchg
sub
or
movsb
orb
mov
scas
iret
push
repnz
hlt
push
cltd
jge
dec
in
sub
jle
enter
test
jmp
mov
fdivr
pop
notb
mov
or
jae
mov
mov
ds
mov
int
leave
xrelease
adc
add
pop
test
dec
add
sbb
outsb
int
mov
lret
hlt
or
mov
loopne
cmp
shll
test
cs
fsubs
sbb
fwait
dec
lcall
push
sarl
shlb
call
sbb
cs
cmpl
sub
imul
das
sub
popf
aam
sub
push
fimuls
mov
popf
dec
xchg
mov
popa
andb
dec
loopne
rcl
stos
mov
mov
repz
sarl
pop
bound
out
notb
nop
mov
xor
jle
dec
or
mov
add
adc
and
sub
lods
mov
adc
jge
fcmovbe
mov
inc
cmp
adc
xchg
jg
sarb
lods
outsl
int
dec
push
rcrb
push
enter
divl
jb
enter
cli
mov
mov
lods
roll
imul
jg
adc
adcb
mov
jo
es
jbe
and
mov
sub
es
mov
jmp
jae
cmp
iret
mov
mov
xchg
push
cmp
lods
cmc
xchg
hlt
in
sbb
imul
xor
into
bndldx
into
and
sub
out
aad
int
comiss
pop
outsl
jge
dec
fidivrs
test
xchg
icebp
not
xchg
push
cmpl
xchg
shl
test
sti
jns
jne
adc
push
mov
call
sbb
iret
les
mov
sub
sub
inc
inc
jmp
idivl
repnz
roll
sbb
push
and
xlat
or
insl
outsl
push
sahf
mov
push
or
push
xchg
ret
sti
rcrb
adc
fmull
sub
nop
dec
lret
mulb
outsb
inc
movsb
adc
fldz
push
xor
and
inc
inc
xor
outsl
mov
outsl
sbb
xchg
mov
std
add
pop
adc
aas
xor
les
xchg
in
inc
jl
mov
jnp
fmull
popa
and
mov
mov
xchg
add
insb
addr16
and
xchg
mov
or
movl
popa
enter
or
icebp
bound
inc
cld
sahf
insb
ja
jle
sti
sub
sub
addr16
push
push
sarl
push
sbb
in
cld
les
inc
movsl
jle
mov
jno
movsl
adc
rcr
gs
cmc
pop
enter
bound
gs
jmp
mov
cmp
bswap
ror
jp
and
sahf
inc
xor
pop
arpl
jae
push
xchg
push
cmp
xchg
pop
cltd
xor
int3
bound
in
fldt
stos
sbb
pop
lret
sbb
outsl
xchg
insb
dec
cmp
push
int
and
sbb
cmc
test
jle
xchg
repz
daa
pushf
ret
or
pop
call
inc
adc
inc
shrl
jne
mov
nop
mov
enter
mov
cmc
mov
comiss
adc
sar
or
mov
dec
jne
cmp
jne
roll
loope
adc
pop
dec
lret
push
addb
push
test
jae
shll
lcall
in
pop
repnz
mov
push
cmpsb
cld
imul
and
sbb
fnstsw
lahf
stos
adc
mov
adc
mov
sahf
in
shrl
movb
pop
mov
sbb
mov
aaa
sti
cmpsl
dec
mov
mov
lret
push
jp
fs
pop
pushf
jle
pop
jecxz
insb
aas
and
cmp
mov
ret
sub
mov
cwtl
mov
mov
js
mov
icebp
xor
cmpsl
sbbl
pop
fisubs
adc
fs
or
pop
jp
leave
outsl
jge
add
je
inc
xchg
mov
add
gs
pop
xchg
sub
out
adc
push
lods
push
lcall
dec
and
mov
fdivr
sub
sbb
nop
fstps
dec
and
int
stos
add
add
adc
cld
sub
popa
cld
aad
lret
xchg
fucomi
sbb
in
inc
mov
adc
cmp
into
or
mov
out
xchg
adcb
cwtl
shr
test
xor
ret
cmp
ja
inc
mov
cmp
inc
cmp
pop
sub
sub
test
inc
push
insl
mov
inc
xchg
cs
pop
test
sbb
xchg
or
bound
mov
lret
lds
les
adc
mov
xlat
cwtl
pop
adc
scas
ret
add
insl
xor
lods
fmul
imul
sbb
xor
pop
push
push
mov
and
jge
mov
push
push
fisubrs
push
xchg
fstps
nop
gs
jmp
add
and
adcl
rcl
xor
out
mov
mov
dec
adc
stos
sub
cld
subl
scas
jle
loop
dec
push
testl
or
nop
shll
mov
inc
addl
xor
ss
in
insb
mov
cltd
or
jg
push
push
inc
frstpm(287
stos
pop
jnp
push
ljmp
fcomps
dec
out
je
loop
lahf
jbe
cmp
mov
imul
mov
cmp
std
cs
pop
jle
out
int
dec
imul
mov
js
in
loopne
mull
inc
mov
pop
lret
gs
aad
and
push
imul
add
sbb
jg
sub
ja
aas
cmp
sar
in
pusha
pop
pushf
mov
int3
pop
ds
out
jo
cmpsl
add
dec
sub
call
out
pop
test
outsl
std
jno
sbb
push
mov
adc
push
inc
sbb
into
rep
push
cmc
out
ror
mov
cmc
test
lock
xor
sbb
xchg
leave
cltd
out
push
dec
lahf
inc
in
dec
lds
rcrl
mov
movsb
jp
ljmp
es
shl
inc
fldl
fwait
es
and
jb
fsubl
scas
xchg
adc
adc
jbe
shlb
or
mov
sbb
out
jecxz
sbb
adc
xchg
lret
ret
xchg
dec
mov
add
inc
lcall
and
daa
ret
mov
mov
mov
xor
and
add
movsl
fldl
cmp
lret
add
shll
notl
lret
mov
mov
and
sbb
xchg
mov
add
daa
xchg
movups
lret
insb
mov
cmp
hlt
sub
arpl
or
and
mov
movsb
xchg
or
cld
inc
nop
and
or
add
fmulp
movsl
lock
out
pop
or
adc
das
add
push
mov
mov
jne
pop
pusha
lret
inc
fisubl
mov
aad
outsb
fwait
fwait
int
adc
pop
add
inc
xchg
loopne
mov
push
mov
push
out
ret
iret
dec
mov
rcrb
lea
mov
shlb
inc
divb
iret
mov
mov
mov
xchg
stc
bound
sub
aas
ss
and
clc
or
in
das
pop
xchg
pop
and
ss
data16
inc
jo
faddl
pusha
pop
pop
subl
es
loopne
pop
push
orb
ficomps
stc
pop
sbb
sub
lret
xchg
jle
jae
push
jmp
pop
adcb
push
push
mov
adc
jle
pop
xor
inc
sbb
lret
and
cltd
call
imul
jg
std
enter
cmp
sbb
mov
mov
jg
push
jae
addr16
mov
cmpsb
dec
xchg
xor
stos
mov
fnstcw
mov
push
int3
mov
popf
clc
add
js
add
rolb
and
or
mov
in
pop
push
mov
int
nop
inc
cmpl
insl
mov
adc
dec
inc
popf
ret
out
fwait
pop
fdivrl
ffree
cmp
cmpsl
xlat
rorl
push
and
inc
inc
and
or
fwait
xchg
insb
mov
and
push
pop
or
dec
or
add
xchg
dec
pop
sbb
scas
scas
push
mov
lret
pop
inc
das
rcl
and
jno
testl
cmp
repnz
push
cmpsl
xlat
mov
dec
imul
sub
cwtl
and
mov
enter
cmpsb
insb
lds
clc
and
lret
fbld
call
jp
inc
mov
cmp
cli
fwait
dec
cmpsb
push
dec
daa
popf
mov
cmpsb
test
mov
outsl
ror
jp
mov
aad
xor
adc
jmp
outsb
les
leave
push
clc
aad
test
sti
inc
inc
ret
shrl
out
imul
or
daa
stos
std
add
outsb
popf
enter
jns
testb
fidivs
loopne
dec
jmp
test
in
fldenv
jl
xor
mov
xchg
das
insl
dec
inc
mov
into
jb
jl
jl
aad
pop
adc
mov
ljmp
sbb
call
adc
add
or
mov
lret
loopne
movsb
cmc
out
jnp
xor
outsb
mov
fsub
lret
mov
lcall
test
jnp
push
inc
aas
adc
das
loop
push
fnstenv
push
sbb
jecxz
xchg
mov
in
sarl
aaa
mov
aaa
lock
jmp
test
ljmp
das
add
xlat
push
jecxz
call
imulb
push
jle
adc
xor
in
mov
pop
adc
dec
or
loope
xchg
dec
xor
lock
outsl
popf
xchg
jecxz
call
sbb
rcr
rcrb
sbb
jne
mov
lea
mov
sbb
adc
test
std
loope
insb
inc
pop
lcall
xlat
pusha
pop
jp
push
xlat
test
fldenv
dec
imul
mov
add
xchg
and
inc
dec
test
lahf
dec
pop
sbb
clc
or
std
cmp
jp
cmp
shl
out
inc
adc
jo
mov
shll
ja
fmull
outsb
cmp
cmpsl
push
xchg
mov
movsb
ret
pop
push
fildl
test
mov
mov
xchg
repz
dec
out
adc
shl
cmp
lcall
cmp
cmp
out
cmp
test
dec
cld
sarl
lret
cmp
sbb
inc
addr16
es
es
push
mov
jle
and
loopne
loope
test
enter
and
or
jl
inc
mov
mov
mov
cmp
or
xor
and
jbe
popf
in
les
cmp
xchg
mov
fsubrl
pop
test
inc
pop
lods
gs
mov
fistpll
xchg
movsb
cmp
inc
inc
dec
inc
mov
jne
mov
ret
popa
lock
bound
int
pop
add
loope
lcall
lods
std
cmp
xchg
add
fdivp
loop
pop
dec
iret
mov
test
adc
jo
jmp
in
push
pop
xor
xchg
dec
jno
popa
adc
rorl
lcall
insl
xor
sub
cmp
cmp
pushf
add
mov
aam
jo
repnz
xchg
pop
je
imul
cmp
sub
jl
call
scas
testb
pop
mov
cmp
mov
inc
loopne
cmp
xor
pop
fmull
lret
pop
xor
test
scas
cmpsb
aam
clc
lret
test
fs
mov
cmp
in
int
push
dec
ret
adc
stos
sub
xor
xor
or
mov
lret
inc
mov
inc
pop
pop
scas
jb
bound
xchg
or
addr16
jne
mov
outsl
xor
shl
mov
clc
shl
stos
inc
xchg
dec
test
pushf
adc
fwait
xchg
push
orl
push
pop
mov
pop
jle
dec
cli
pop
pop
sbb
xchg
test
add
push
je
enter
mov
mov
and
data16
scas
mov
scas
inc
ss
pop
ja
sbb
shll
jne
cltd
cmp
fwait
out
rcr
pop
mov
dec
pop
cmpsb
es
inc
push
xchg
push
std
pop
or
mov
adc
lds
pop
xor
dec
dec
pusha
std
ja
cmp
jne
bound
cmpsl
loopne
push
aad
cs
fdivr
mov
in
andl
shl
mov
jg
fsubrs
mov
mov
or
jl
in
scas
orl
mov
push
xor
in
enter
mov
insb
jle
insl
push
xlat
mov
mov
cmp
and
std
jno
cmp
mov
outsb
sbb
fsubl
stos
cli
nop
push
xchg
adc
test
fcmovnu
movsb
int
pop
xor
push
sub
iret
dec
enter
cmpl
and
test
cs
les
out
cmpsb
adc
int
push
mov
xor
jo
pop
mov
mov
jecxz
cmp
cmp
movsb
call
push
into
mov
jno
pop
xchg
adc
clc
scas
pop
mov
lds
pop
add
lds
xchg
aad
xor
into
addr16
mov
inc
aad
cmp
xor
mov
lret
stos
adc
and
mov
xor
jl
popf
loopne
inc
test
inc
dec
pop
out
int
out
das
shll
xchg
stos
xchg
cmp
shrl
push
mov
sbb
push
mov
mov
dec
cli
pusha
nop
loope
jge
pop
je
xchg
loope
sub
jno
push
inc
lods
mov
adc
scas
in
das
mov
and
and
test
mov
outsl
cmp
pop
ret
and
xchg
mov
mov
mov
mov
movsl
mov
mov
ret
scas
mov
jg
jg
pop
mov
push
cmp
push
mov
jge
sbb
shlb
and
lcall
test
xchg
adc
pop
xchg
scas
adc
sub
fldenv
adc
push
mov
push
arpl
push
int
sti
andl
shll
bound
dec
mov
xor
in
sbb
test
mov
rclb
aaa
fwait
adc
icebp
fdivs
mov
pop
mov
fstpt
mov
daa
dec
inc
das
ss
dec
mov
mov
out
fdivr
out
mov
mov
popa
inc
mov
orb
test
or
pushf
adc
adc
stos
in
or
flds
hlt
sbb
mov
ja
cmpsb
stos
in
into
mov
dec
mov
divl
sti
sti
gs
or
and
sub
add
movsb
pushf
pop
cmp
push
in
adc
mov
jne
dec
icebp
cli
push
lods
mov
push
xchg
mov
sbb
scas
inc
push
inc
rorb
mov
jno
jmp
outsb
int
mov
arpl
mov
pushf
xchg
xchg
mov
sub
sub
sbb
mov
push
or
or
jp
sub
push
lcall
stc
movsl
je
xor
or
stc
add
lock
int
inc
push
push
mov
jp
mov
mov
xchg
and
jl
mov
xchg
mov
add
jle
cmp
dec
imul
hlt
jge
pop
or
push
in
out
jne
pusha
cmp
and
aad
dec
loopne
sub
jg
repnz
pop
or
sbb
jmp
sub
ss
fcompp
fidivs
imul
cpuid
xor
fisubrl
jl
mov
push
fistpll
mov
dec
int3
dec
xor
jecxz
imul
insl
sbb
cmp
in
adc
imul
or
les
cmp
add
jge
das
jg
mull
cs
push
popa
adc
cmp
mov
cwtl
xor
mov
scas
push
pop
test
out
shrl
inc
sub
fnstsw
jecxz
sbb
gs
mov
xchg
jae
adc
aad
pusha
pop
and
xchg
iret
add
jno
pushf
adc
mov
or
scas
das
adc
jbe
mov
add
dec
sahf
scas
or
lods
pushf
bound
jge
in
push
aaa
test
pusha
sbb
cmpb
inc
xchg
cltd
in
mov
dec
lret
pop
xor
push
in
mov
dec
mov
out
pop
cmp
divl
dec
sub
xlat
adc
mov
jle
adc
add
jb
mov
mov
fidivs
jns
movsb
mov
push
out
aas
je
nop
jp
xchg
ficomps
orl
jmp
out
jp
stos
lea
in
pop
mov
loopne
push
push
dec
mov
xchg
add
into
in
out
xor
nop
jle
and
push
cmp
addl
mov
sbb
cs
cmp
fcmovu
and
xor
loop
ffree
ja
sbb
cmp
fxch
gs
int
lock
cmp
or
jge
inc
cmp
mov
cmpb
pop
push
cmpsl
lds
lcall
dec
rolb
xchg
pop
or
icebp
dec
adc
push
test
cli
loop
push
jns
adc
cmpsl
movsl
dec
mov
jle
pop
je
sub
pop
sti
pop
cmp
mov
pop
mov
lret
loope
inc
jns
es
xchg
pop
push
push
jp
inc
icebp
jmp
push
sti
push
mov
add
or
cld
gs
mov
mov
int
aam
sub
mov
rcll
pop
aad
adc
xchg
jae
adc
cmp
push
push
call
jmp
inc
out
in
stos
daa
pop
dec
add
je
outsl
push
or
mov
andb
jecxz
aaa
enter
jns
in
int3
pop
stos
xchg
call
lods
jl
jno
sbb
lods
mov
mov
popf
adc
push
pop
sti
cld
arpl
mov
ja
incl
roll
jno
in
fdivl
fsts
bound
in
or
adc
enter
jne
pop
je
dec
mov
xchg
mov
jl
xchg
sbb
stos
pmaxub
inc
imul
fiaddl
inc
add
jnp
fcomp
cmp
sbb
mov
repnz
imul
ss
fbstp
xlat
push
ret
addr16
in
dec
jns
jg
rclb
int
push
cmp
divps
add
les
jns
aad
cmc
and
stos
mov
jb
mov
push
pop
loopne
jmp
lret
repz
into
clc
imul
ss
mov
sbbl
mov
jle
movsl
dec
dec
ret
cmovge
addr16
push
xchg
insb
pop
lds
std
imul
bound
jle
jbe
mov
add
out
push
pop
movsb
and
es
push
mov
or
int3
aam
add
pop
push
outsl
mov
jne
out
popf
pop
movsl
dec
stc
int
cld
push
out
repnz
jb
push
jl
int3
cmp
jecxz
test
inc
cmp
xchg
dec
push
ret
ja,pt
pop
ljmp
out
stc
aam
or
lds
pusha
test
mov
aam
andl
cmpsl
aad
mov
mov
sbb
or
scas
pop
cmc
push
push
mov
xchg
jns
pop
mov
xor
aam
jbe
sbb
out
mov
std
push
inc
xchg
xchg
cs
inc
mov
mov
jb
pop
sub
inc
cwtl
out
shrl
or
pop
lods
lods
mov
data16
je
jmp
stos
sub
fnstsw
das
jno
test
stos
adc
dec
push
push
mov
mov
hlt
inc
inc
cmp
jmp
cmp
cs
jb
xchg
fnsave
inc
jae
pop
sbb
pop
call
sub
rcl
scas
xor
mov
outsl
mov
je
mov
imul
fldcw
mov
dec
fstps
std
dec
js
ljmp
arpl
addr16
adc
stc
pop
call
xor
data16
je
sbb
lret
xchg
xor
and
and
test
xor
dec
mov
mov
pusha
ret
ja
dec
xor
xor
xchg
das
fnstsw
shlb
inc
out
sbbl
cltd
inc
pop
mov
pop
sbb
xlat
jae
or
loop
enter
or
or
and
je
popw
shlb
cwtl
ja
pop
sub
hlt
ljmp
xchg
shrb
adc
add
arpl
cmpsl
test
xlat
icebp
inc
mov
xor
dec
pop
sub
mov
idiv
jne
add
inc
sbb
push
pop
cmp
push
jmp
std
cmp
jno
loope
xor
andb
bound
xchg
aaa
inc
lret
mov
mov
xorl
xor
pop
add
data16
dec
dec
sub
icebp
mov
sbb
loopne
adc
pop
bound
push
add
pusha
push
xchg
in
sub
pop
adc
adc
loop
inc
movsl
push
mov
jle
jno
in
mov
aas
aad
sbb
push
ret
fidivl
sub
sahf
pop
lds
ja
push
jecxz
xchg
outsl
dec
jne
xor
adc
sub
sbb
mov
sti
mov
repnz
in
ret
out
cmpsl
daa
cmp
pop
cltd
pop
loopne
push
xor
aad
sti
cmpsb
fdivs
and
xchg
xor
dec
loope
adc
pop
test
or
jo
and
jne
jle
outsl
stos
jns
or
push
sub
lret
mov
inc
ja
cld
clc
fmull
jle
jb
add
repnz
jge
pop
in
mov
or
int3
pop
jb
pop
xchg
xchg
jmp
daa
sbb
fcoml
pushf
cmp
jo
mov
in
or
jns
cld
cld
rcll
lods
xchg
mov
je
xlat
rcl
pushf
adc
adc
add
aad
add
cld
mov
cmp
mov
xchg
or
dec
inc
loopne
cltd
jno
insb
lea
mov
and
fistl
fmuls
cmp
cmp
pop
pop
in
pop
fdivl
fcoml
clc
xor
xor
iret
pop
inc
adc
int3
sub
jmp
xor
mov
fdivrl
stos
rcrl
mov
xchg
ljmp
xor
loope
pcmpeqw
rolb
mov
xor
dec
xlat
pop
mov
out
adc
faddl
cmp
pop
jecxz
sti
out
xchg
inc
mov
push
or
and
aad
xchg
lret
test
mov
xchg
jbe
ficomps
inc
test
xchg
sbb
rorl
out
xchg
loope
out
out
in
loope
inc
shl
in
idivb
xchg
xchg
lea
sub
cs
mov
ja
xor
xor
pop
xchg
sbb
mov
xchg
sbb
add
fdivl
mov
inc
mov
dec
xchg
faddp
dec
lock
in
add
clc
dec
scas
rcrl
test
pop
dec
cli
fwait
jmp
or
xchg
std
xchg
int3
dec
or
dec
sub
add
jp
stc
jge
inc
inc
movl
stc
pop
xchg
repnz
mov
aas
pop
xor
ret
mov
dec
mov
adc
cmc
hlt
jle
pop
rcl
xor
sbb
jg
out
lret
dec
push
movl
je
pushf
nop
cmp
sub
inc
sbb
jmp
leave
lcall
inc
and
out
sbb
push
or
jo
imul
and
and
xchg
sub
lahf
ds
adc
bound
mov
jmp
popa
sub
xor
lahf
xchg
jae
mov
mov
xor
int3
hlt
aas
rcrb
pop
sbb
inc
dec
movsb
lods
outsl
in
xchg
in
inc
sub
pop
loope
add
cwtl
mov
test
mov
ja
cmp
mov
hlt
scas
add
cmpb
mov
fiadds
out
icebp
rcrl
dec
sub
mov
sbb
xchg
ja
xchg
cmp
addr16
sub
push
jle
popl
in
sahf
pop
test
adc
test
mov
and
adc
div
cmp
and
xor
adc
inc
lret
fwait
xchg
enter
lock
lea
data16
out
lock
xchg
jb
dec
xchg
mov
cmp
loope
mov
fadds
xor
mov
ret
push
std
or
dec
jbe
inc
fcmovnu
fiadds
ret
jnp
cwtl
aam
shrl
into
daa
in
dec
add
or
pop
outsl
mov
dec
cwtl
jne
call
xchg
bound
movb
shlb
or
mov
enter
and
cmp
inc
add
xor
sub
pop
lret
shll
ror
jmp
sbb
mov
ss
dec
sub
ret
test
test
sub
cmp
pushf
lock
push
inc
xlat
pop
sub
mov
push
cmc
inc
ljmp
je
je
decb
sub
add
xchg
or
outsb
cmp
or
xchg
ja
into
ror
cmp
add
pop
hlt
in
aam
cmc
mov
or
stc
or
gs
or
out
mov
pop
scas
push
pusha
add
pushf
or
outsl
adc
jne
icebp
out
push
mov
icebp
pushf
rcrb
clc
xor
fldl2t
adc
add
sahf
cs
mov
daa
push
int
loop
call
stos
dec
pop
clc
imul
pop
je
xor
bound
dec
mov
movsl
lcall
mov
cmpsl
aas
rcrl
lods
mov
sti
and
arpl
and
mov
lock
jbe
test
or
popa
xlat
test
loope
lea
sub
mov
test
js
cmpsl
pop
dec
aaa
mov
or
sub
add
sarl
mov
cmc
aaa
out
loope
ret
or
and
lahf
mov
int3
xchg
mov
sbb
xor
add
es
lods
xchg
jne
jle
xor
mov
into
aas
lock
fldcw
js
jnp
mov
in
sub
adc
cmp
mov
test
cmc
aam
test
mov
nop
pop
pop
ret
dec
in
cmp
xchg
jmp
fs
ss
sub
imul
daa
xchg
stc
push
enter
sti
out
pusha
leave
out
gs
cmc
push
pop
cmpsl
and
out
icebp
mov
aam
or
and
jne
sub
mov
stos
pushf
andl
push
cmp
fs
fmuls
cmp
mov
sub
adc
ja
sbb
push
mov
imul
rcll
add
adcb
jns
and
decb
sahf
mov
inc
xor
jle
cmp
push
push
sub
ljmp
icebp
push
jge
shlb
pop
sbb
and
fildl
popa
rorb
shrl
xor
jo
rcll
test
iret
es
outsl
and
inc
iret
adc
iret
add
movsb
jns
std
outsl
fisubl
lods
mov
lods
cld
add
and
pop
cmpsb
push
repz
mov
insb
xchg
jo
cmpsl
outsb
ljmp
cmp
lock
add
jns
push
pusha
out
mov
stos
sbb
out
jb
movsl
aad
aaa
negb
push
sbb
test
jle
ss
into
bound
push
dec
lcall
pop
push
and
ds
movsb
rol
xor
out
mov
jb
pushf
scas
hlt
in
scas
cltd
rorl
cli
test
jg
jle
scas
hlt
inc
mov
adc
call
add
or
aam
inc
dec
mov
jle
inc
and
lods
pop
loope
mov
xchg
cmovl
bound
sbb
push
or
fldenv
test
dec
call
test
std
nop
lea
sbb
and
aas
xor
lahf
xchg
aam
jecxz
push
je
inc
lcall
mov
mov
aaa
inc
out
cmpl
lods
push
jmp
xchg
test
cli
stos
pop
sub
orl
mov
lea
test
mov
lods
mov
fadds
and
push
jle
push
xchg
das
adc
and
and
sarl
dec
dec
sti
mov
leave
test
ja
dec
sarl
inc
adcl
outsb
push
cmp
adcb
clc
push
fstpl
add
jecxz
cmp
shll
testb
lock
xor
cli
mov
cs
xchg
pop
daa
sub
ja
je
adc
inc
adc
out
add
dec
scas
xchg
insb
inc
pop
loop
jp
mov
in
xchg
in
pop
mov
in
push
sub
xchg
jo
flds
out
cmp
inc
pop
repnz
sbb
jmp
nop
sbb
xlat
dec
ret
lret
mov
stos
pop
dec
cmp
adc
push
xchg
dec
adc
mov
and
pop
inc
daa
inc
mov
cmp
lods
sub
pop
in
sti
cli
scas
sbbl
push
lods
gs
xlat
cwtl
insl
mov
js
mov
outsl
and
mov
stos
inc
bound
xchg
hlt
outsb
mov
int
fiaddl
pop
negl
jecxz
cmp
add
sub
out
mov
inc
push
or
push
scas
or
inc
mov
jl
scas
xchg
jns
mov
mov
mov
insb
jle
sbb
xor
arpl
mov
ret
pop
out
int
popa
cli
decl
jle
xor
adc
or
sti
mov
or
hlt
mov
add
loope
mov
dec
push
out
jmp
pop
mov
dec
dec
mov
push
adcl
in
or
sbb
or
imul
lcall
movsb
add
insb
dec
movsb
popf
push
repnz
leave
cmp
clc
cld
or
ret
jns
add
sub
fwait
addl
insl
pop
mov
into
hlt
sub
iret
sbb
into
jbe
ds
in
dec
dec
sub
shr
mov
testb
dec
gs
lds
cmp
ljmp
fabs
xchg
rcl
outsb
cltd
jno
ret
loopne
sbb
pop
call
int3
mov
push
fistpl
pop
das
add
ss
jle
jecxz
inc
int
mov
xchg
sbb
cmc
gs
sbb
pop
cmp
mov
rorl
sub
sub
dec
out
test
in
loope
xchg
inc
mov
cwtl
xlat
cmp
push
test
into
hlt
cwtl
in
cmp
pop
xlat
jle
outsb
mov
scas
jg
xchg
test
iret
jp
push
xor
fistpll
xor
pop
or
stos
pop
dec
add
jae
repnz
scas
sub
repz
adc
loope
push
fisttps
xor
mov
mov
in
repnz
mov
cmpsb
loope
pop
dec
loope
ds
int3
sbb
cmpsl
ret
in
in
and
ret
rcr
in
test
jae
fnstcw
loopne
dec
cmp
sar
mov
mov
cltd
and
imull
hlt
adc
and
stos
fcmovnu
in
add
gs
in
cmp
roll
sbb
inc
or
shl
dec
jbe
or
sti
sub
xchg
lret
icebp
pop
cmc
test
xor
cmp
pop
add
stos
into
out
arpl
pop
ja
insl
in
and
sti
mov
sbb
fisttpl
lcall
inc
xor
rcr
jbe
jns
mov
cmpsl
xor
jb
imul
shll
push
xchg
ret
xor
enter
out
or
sbb
int
out
notb
and
xchg
jno
mov
mov
daa
loopne
into
lock
std
pop
mov
or
scas
pusha
xor
adc
dec
mov
loop
mov
jg
cmc
nop
push
inc
stos
push
or
inc
fisubs
mov
and
mov
jmp
and
mov
loope
jmp
dec
sub
push
stc
xor
imul
and
lock
push
bound
lods
xchg
stos
ljmp
jg
cltd
incl
outsl
and
icebp
jae
stos
clc
hlt
mov
or
dec
sbb
push
xchg
sbb
fidivrl
leave
cltd
sbb
insb
xor
xor
stos
push
outsb
cmpsl
addr16
daa
imul
shrb
mov
andb
sub
and
inc
mov
hlt
xor
push
inc
call
push
cmpsl
xor
fstpl
aas
sbb
add
push
sbb
scas
mov
mov
cltd
adc
xor
test
inc
fwait
xor
inc
add
dec
fmull
push
inc
mov
lret
clc
cmc
inc
cmp
mov
mov
js
mov
sbb
adc
sahf
lahf
sub
stos
inc
sahf
ret
into
outsl
inc
lcall
lahf
sub
sub
dec
mov
pusha
pop
ljmp
xor
jno
inc
lret
and
xor
pop
cmc
ds
pop
daa
push
outsl
mov
dec
xchg
aas
lret
incb
or
outsl
and
cmc
push
cs
loop
or
dec
mov
fucom
negl
push
subl
pusha
daa
scas
xor
hlt
repnz
out
and
mov
mov
shll
adc
sub
adc
outsl
fldcw
sti
sub
loope
popf
pop
jb
fnstcw
cmpsb
jle
jne
repz
lock
pusha
aad
fwait
and
adc
mov
jbe
sahf
pop
sbb
movsl
cmp
jbe
mov
sub
movsb
out
dec
xor
mov
std
insb
jns
cltd
cmp
mov
add
mov
or
iret
imul
leave
mov
inc
mov
fisttps
movsb
or
mov
add
cwtl
aas
ficoml
xchg
adc
mov
mov
inc
imul
pop
rol
xor
cld
or
addl
xchg
dec
das
pop
pop
movsl
stc
leave
cmp
test
sbb
jle
xchg
lock
cmp
fdiv
enter
outsb
int
icebp
scas
cli
sub
xchg
pop
addr16
xlat
xchg
jle
aam
popf
adc
addl
mov
push
out
xor
xor
cs
adc
sub
in
pop
xor
push
dec
pop
pop
pop
sbb
push
cmc
or
or
aad
stos
clc
cwtl
lds
push
xor
es
inc
inc
cmp
jmp
nop
jp
sbb
lahf
inc
in
sub
aaa
lahf
loopne
and
aam
or
repnz
mov
cmpsb
test
hlt
jne
inc
push
cmp
divps
xchg
dec
sbb
push
loop
ret
cmc
ja
or
hlt
jge
and
mov
inc
inc
push
push
xor
push
ds
flds
das
mov
jg
adc
icebp
out
in
xor
repnz
jno
jmp
push
pop
and
pushf
mov
cmpsl
jl
int
adc
sbb
mov
cmp
add
xchg
and
js
inc
xchg
outsb
inc
lods
push
inc
imul
xchg
mov
js
xchg
pop
push
insb
shlb
xchg
or
inc
pop
scas
fsub
cs
cmpsl
and
add
xchg
mov
add
cmpsl
shrl
jbe
es
mov
jle
add
rolb
xchg
xchg
inc
test
sub
jg
or
push
mov
outsb
shll
ficoml
xor
or
push
xchg
ret
mov
xor
out
movsb
jbe
clc
fisubrs
shlb
pop
cmc
mov
jne
lcall
jnp
push
imul
and
xchg
call
fsubrp
mov
dec
jmp
sbb
or
scas
mov
push
push
cmpsb
es
arpl
test
lret
aaa
das
call
sbb
mov
xchg
dec
push
inc
into
pusha
mov
cld
sbb
ss
jmp
mov
pop
jmp
test
and
fsub
and
fnstenv
je
in
jns
xor
cmp
inc
dec
pop
adc
mov
test
mov
sub
les
lret
jmp
pop
test
push
jmp
arpl
sbb
mov
insl
mov
push
imul
fs
cmp
adc
pop
add
clc
push
movsb
sub
xchg
fs
cwtl
jg
mov
sub
popa
icebp
stos
out
inc
out
mov
xchg
fs
test
push
cli
adc
fwait
push
push
sarl
sub
ds
or
adc
gs
int3
jmp
out
cwtl
enter
sub
lret
iret
xchg
cs
decb
ja
movsl
xchg
je
filds
push
movsl
je
in
fucom
lods
push
je
sbb
pop
lods
out
mov
inc
aam
nop
lods
aas
aaa
push
dec
int
iret
or
ret
cltd
pushf
jnp
addr16
mov
pop
inc
dec
rcrb
mov
fldcw
test
mov
ljmp
imull
ret
mov
cmpsb
fdivrp
cltd
fwait
mov
cs
test
pop
movsl
jge
stc
aad
int3
mov
add
inc
repz
cmpsl
push
push
int3
sbb
dec
movzwl
ficomps
repz
mov
movsb
xor
and
mov
icebp
xchg
sbb
stos
out
movsb
movsl
pop
pusha
das
sbb
cmpsl
test
sub
sbb
mov
imul
daa
fwait
xor
jg
xchg
loopne
or
jg
ljmp
loop
stos
mov
stc
push
jl,pt
rcll
testb
bound
push
lods
insb
ficompl
ss
int3
jecxz
ror
cmp
mov
aad
inc
or
push
and
pop
gs
outsb
leave
adc
mov
idivl
js
ljmp
div
or
sar
jle
sub
sub
add
je
and
inc
xor
imul
cli
popf
testl
or
mov
imul
ret
js
cmp
mov
or
and
pop
inc
mov
push
mov
dec
imul
aaa
cs
fcmovnb
and
lret
pop
aad
dec
cwtl
iret
arpl
gs
or
sbb
mulb
jbe
fwait
jo
movsl
js
repnz
dec
xchg
cld
scas
cwtl
std
test
mov
adc
inc
test
out
xor
cmc
out
dec
adc
sub
in
jmp
mov
xlat
cmpsl
xor
dec
addr16
test
jl
pop
rcrb
mov
aam
pop
xor
push
sbb
lods
cwtl
sub
xchg
mov
sbb
out
inc
in
stos
inc
xor
cmp
jbe
push
outsl
icebp
pop
test
xor
xchg
aam
in
les
lahf
stc
adc
cmpsb
lods
ljmp
inc
jae
cmpsl
out
arpl
push
mov
mov
push
xor
shlb
mov
ret
jg
xor
scas
popa
gs
repz
sub
xor
xor
adc
ret
leave
xchg
sbb
das
imul
lcall
insl
mov
into
inc
pop
inc
inc
add
das
dec
leave
xchg
mov
fcoml
gs
xor
push
cmpsb
xorl
or
arpl
aad
mov
xchg
sbb
pop
repnz
xchg
mov
jle
js
xchg
aad
and
or
ljmp
jns
inc
pop
mov
mov
jbe
aam
xlat
lods
loope
shrd
jb
xchg
xchg
insl
std
repz
js
xchg
lds
pop
jl
adc
iret
loop
sub
jae
bound
loopne
xchg
and
cmp
fs
jg
mov
aas
jno
pop
inc
cmp
sbb
push
imul
fwait
iret
lock
jl
mov
pop
aaa
sub
aad
mov
enter
into
gs
sbb
mov
pop
rcrl
and
lods
test
adc
mov
test
inc
stos
js
mov
sub
es
ret
imul
mov
xchg
aaa
jp
stos
mov
mov
out
out
loopne
adc
pop
das
lods
aaa
add
jbe
les
repnz
mov
dec
adc
pop
push
mov
push
dec
or
mov
mov
int3
inc
push
inc
inc
test
insb
fwait
jmp
mov
cmp
std
xor
pop
sbb
dec
int3
call
jns
bound
fidivs
cltd
push
sub
movhps
xchg
test
dec
ficoms
lock
inc
fdivs
sahf
and
lds
sub
clc
ljmp
rorb
out
mov
push
xor
lock
sub
sbb
mov
out
cmpsl
fcoms
push
cmp
xor
xor
icebp
mov
pushf
mov
xorb
stos
call
ret
mov
dec
adcb
cmpsl
lret
or
jns
stos
adc
outsl
lret
popf
sahf
ds
mov
subb
add
fwait
adc
mov
js
cmc
push
pop
mov
movsl
das
gs
add
ret
xchg
mov
xchg
cltd
ret
ss
xchg
orb
stc
cmp
sub
push
lods
ljmp
pusha
jo
frstor
cwtl
mov
adcl
xchg
jo
xor
sub
adc
leave
cmpb
push
insb
pop
imul
dec
xchg
xchg
das
fs
add
or
out
mov
ds
push
sbb
dec
pop
nop
dec
sahf
xor
les
jo
cmpsb
ja
mov
iret
mov
or
sub
arpl
mov
aam
xchg
clc
iret
mov
jno
mov
mov
or
adc
xchg
adc
push
sub
adc
es
ja
cmpsl
int3
bound
mov
mov
push
cmc
enter
aaa
decb
mov
pop
sarb
and
add
cmpsb
scas
sub
adc
fsubrl
add
mov
sbb
and
pop
mov
cmp
fnstsw
shl
ds
jecxz
hlt
nopl
jne
mov
cwtl
add
dec
dec
dec
push
inc
arpl
lods
mov
in
lods
adc
sbb
add
sbb
mov
xchg
mov
xchg
out
sar
mov
dec
dec
imul
cmp
sub
inc
std
adc
fs
xchg
cmc
xor
or
cmp
pop
xchg
mov
lods
cli
fucomi
jmp
and
mov
xor
jecxz
fwait
dec
mov
call
es
stos
mov
push
test
adc
scas
hlt
xor
mov
jae
dec
imul
fmull
jp
ja
lock
insl
and
in
dec
std
shlb
mov
ja
call
pop
pop
sbb
pop
mov
fsubrl
es
and
xchg
in
jns
lods
cwtl
add
pop
jge
dec
scas
adc
adc
sub
or
and
jmp
scas
repnz
cs
and
add
xor
test
lods
aam
lods
sbb
aad
loope
sub
cmp
out
dec
sub
sub
fcomip
imul
sar
es
and
arpl
lcall
rol
outsl
jge
or
jo
mov
ds
icebp
es
jg
push
bound
dec
jne
xchg
add
les
cmp
push
jae
mov
sub
fisttps
dec
or
loopne
stos
lock
movsb
ljmp
rcrl
xchg
jns
xchg
adc
sbbb
pop
out
and
pop
jnp
cmp
aaa
cmpsb
test
mov
jne
mov
nop
cmc
and
in
mov
inc
and
xor
and
rcll
leave
rolb
jge
mov
call
rclb
push
xor
pop
in
sbb
cmp
es
sub
push
push
pusha
jo
mov
pop
pop
sbb
int3
cmc
mov
divl
clc
jne
mov
pushf
mov
dec
stc
out
lahf
push
jg
mov
sbb
jae
sbb
hlt
adc
or
nop
xchg
scas
dec
test
add
dec
repnz
mov
adc
lods
cmp
mov
and
dec
roll
ljmp
sub
cmp
pop
pop
xchg
clc
xchg
lcall
or
gs
outsl
pop
bound
in
mov
xchg
sbb
stos
mov
adc
and
call
fs
xchg
test
dec
cmc
mov
sbb
call
push
sub
pop
cmp
mov
std
cmpsb
cltd
push
inc
pusha
mov
cmc
cmp
or
xorb
outsl
adc
fs
imul
jle
pusha
xor
out
sbb
dec
pop
outsb
add
cmc
sbb
cmpsl
jecxz
sbb
mov
imul
xchg
pop
sbb
mov
outsb
inc
fidivs
test
cmp
daa
outsb
mov
addr16
mov
clc
xchg
arpl
cmovp
cmp
inc
popf
lods
dec
cs
sti
notb
loopne
fcoms
cmp
pop
cmpb
push
mov
cmpsl
cld
cwtl
lods
cvtps2pi
and
movsb
lahf
mov
push
push
insb
jl
rorb
jmp
mov
push
fwait
jbe
aad
fisttps
dec
movaps
mov
imul
mov
lea
sbb
fbstp
lcall
dec
iret
mov
in
inc
or
cwtl
add
cmpsl
test
jg
lss
stos
jne
jmp
imul
fisttpll
adc
jmp
mov
out
stc
or
fisttpll
lods
pop
repnz
repz
or
xor
scas
inc
sbb
cmp
inc
lret
push
mov
dec
out
push
fsubrl
or
pushf
xchg
andnps
sahf
mov
imul
pop
sahf
in
push
xchg
and
push
pop
dec
arpl
mov
push
shrl
sub
loope
aaa
divb
arpl
stc
scas
inc
test
jne
stos
sub
shrb
xchg
dec
rclb
lcall
or
cmp
icebp
fptan
cmp
or
gs
adc
fcoms
pop
test
sub
jp
jmp
jbe
inc
mov
int3
mov
fisubrs
inc
jge
scas
rorl
jno
mov
and
and
inc
dec
movsb
inc
roll
std
out
ret
popa
pop
imul
dec
pop
addr16
sbb
repnz
roll
lods
sub
pop
jp
mov
js
lcall
mov
popf
sbb
add
xor
aam
repnz
rcrl
mov
cmp
jp
dec
notb
jmp
test
call
pop
jnp
and
sahf
cmp
xor
movsl
mov
out
pop
fmulp
shrb
jp
sbb
pop
push
xchg
inc
mov
rcrb
or
dec
jg
loope
scas
in
push
add
out
cld
cmp
adc
pop
push
mov
push
pop
ss
mov
sub
push
shr
cmp
pushf
cld
popa
testb
add
ja
fiaddl
dec
leave
sbb
xchg
cmpsb
sbb
pushf
and
pop
aaa
out
bound
ds
inc
dec
subl
add
out
notl
mov
sub
xchg
rclb
jnp
sbb
mov
stos
aad
out
imul
fnstcw
addr16
xchg
xchg
push
lods
xor
xor
mov
xchg
ret
xchg
std
sub
pop
jns
xchg
push
je
call
adc
leave
pop
lods
hlt
lods
xlat
addb
stos
mov
loope
xchg
imul
adc
mov
jmp
cld
jns
cli
loopne
cmp
mov
and
sbb
imul
loope
rol
je
pop
call
jbe
int3
fildll
pop
lock
push
scas
pop
adc
inc
mov
fdivr
into
mov
fdivl
adc
divl
shlb
pop
jl
mov
loope
fisttpl
adc
or
bound
add
stc
icebp
add
jge
xor
ret
shll
adc
jb
jae
shlb
jmp
pop
scas
ds
push
ja
arpl
mov
fidivrl
lock
and
dec
add
dec
pop
mov
push
out
popf
xchg
scas
adc
inc
test
mov
jno
leave
ljmp
lret
mov
fbld
mov
mov
clc
jle
and
sbb
sub
inc
add
outsb
cmp
push
xchg
mov
cmc
sbb
inc
jnp
and
mov
loope
mov
ficompl
jge
adc
aad
and
iret
xor
mov
mov
data16
sbb
mov
dec
out
inc
das
loope
inc
xchg
mov
data16
pop
inc
sbb
addr16
nop
pop
xchg
push
jg
rcrb
pop
out
mov
xchg
xchg
enter
mov
fsub
sbb
add
imul
movsb
mov
cld
and
mov
sbb
sub
inc
mov
mov
scas
sti
push
js
mov
cmp
cmpsl
jl
aad
outsb
fmul
mov
js
pop
loope
inc
push
movsl
cmp
or
xor
into
pop
sbb
pop
fisubrl
sub
xchg
lahf
int3
mov
in
fcoml
popa
cmovge
shl
or
rol
out
xchg
data16
jmp
or
xchg
in
adc
inc
xor
loopne
mov
cli
insb
or
sar
push
adc
push
xorl
scas
mov
xchg
mov
cmp
pop
aad
out
stc
mov
jmp
js
xlat
push
jb
enter
cmp
ret
fildl
cmc
aam
push
out
or
xchg
xchg
out
cmp
mov
bound
imul
dec
mov
push
adc
loop
push
ret
mov
mov
mov
pushf
inc
xchg
sbb
loopne
sbbl
into
aaa
mov
shl
pusha
xchg
push
dec
jae
and
mov
and
sub
mov
movsb
fldenv
adc
mov
sub
mov
cmp
cltd
adc
insb
and
call
dec
in
sub
pminsw
icebp
fisttpl
lahf
push
hlt
sub
or
cmpsb
rorl
lea
jo
imul
cmp
push
adc
imul
sbb
pop
mov
inc
ret
ja
shlb
scas
imul
mov
sbb
mov
adc
push
sub
jo
mov
orb
cmc
push
pop
sub
lcall
adc
and
sbb
pop
dec
push
jp
scas
rolb
adc
adc
sbbl
into
jge
push
lea
adc
mov
xchg
andb
inc
mov
lods
push
in
mov
inc
test
lea
out
mov
xor
shrb
xchg
fucomp
and
fcomps
test
pop
mov
push
xchg
scas
add
mov
incb
mov
lea
pop
xchg
std
push
repz
mov
fcom
pop
in
pop
dec
std
mov
popf
addl
scas
jmp
lcall
in
xchg
cmpsl
xchg
pop
cmp
idivb
pusha
in
dec
cld
repnz
cli
lahf
inc
cmp
jo
mov
sbb
testb
mov
gs
mov
adc
adc
mov
jle
or
cmp
loop
dec
ljmp
sbb
test
mov
aad
push
aaa
pusha
fs
in
lds
inc
insb
pushf
ja
or
jno
lret
orb
imul
dec
je
add
fisubl
push
int3
inc
cmp
testl
pop
jmp
ss
adc
lods
mov
repnz
xchg
add
xchg
and
push
sti
sarl
pop
pop
xchg
fs
xchg
jb
cmp
pop
xchg
fistpl
jle
mov
mov
stos
xchg
mov
pop
aam
sub
cmpsl
dec
int3
or
sbb
mov
vpminub
sub
shrl
orb
jl
inc
mov
mull
insl
mov
leave
jnp
xchg
push
js
pop
and
mov
cmp
jae
icebp
loope
iret
out
sub
and
pusha
inc
jns
sub
adc
dec
cmc
push
push
xchg
ss
fcmovbe
sarl
add
dec
cmpl
imul
dec
mov
loope
test
mov
cs
xchg
xchg
repz
pop
das
scas
sbb
xchg
jno
lret
cli
repz
cmp
mov
bound
xor
shlb
es
dec
js
pusha
mov
cltd
aam
mov
mov
movsl
pop
inc
outsl
addr16
adc
sub
pop
inc
xor
or
rcll
add
push
imul
push
pusha
inc
js
xor
es
adc
das
jl
cmp
fimull
adc
clc
cld
and
jge
lds
arpl
push
std
hlt
jg
std
js
ss
xor
mov
jb
sahf
xor
mov
popa
mov
das
shr
push
jp
mov
lea
adc
sbb
or
gs
insb
cs
sub
aam
push
ljmp
int3
scas
fwait
mov
adc
jb
xor
pop
lea
iret
fwait
jecxz
je
mov
inc
mov
add
test
push
dec
lahf
bnd
out
dec
push
mov
fidivs
test
sbb
add
push
cli
xchg
xchg
push
imul
push
pop
inc
subb
por
clc
stos
jg
mov
sti
js
fmull
lock
mov
clc
jbe
or
mov
mov
or
push
lds
add
loop
rolb
sbb
pop
subb
ja
and
or
pop
sahf
shlb
or
ljmp
jp
push
insb
or
les
inc
mov
pop
sub
nop
movsl
insl
ja
sub
or
stos
stos
mov
sbb
movsb
bound
adc
adc
roll
popl
je
and
leave
xchg
test
movhps
sti
imulb
dec
cs
push
adc
movsl
push
xor
pusha
xor
xchg
adc
call
in
or
push
loop
sub
push
adc
fimull
or
push
dec
jecxz
xchg
scas
lock
pop
dec
or
jne
shrb
call
inc
mov
test
loop
movsb
ds
sub
mov
pusha
inc
cld
mov
js
fdivl
cltd
sahf
add
xor
and
data16
fadds
aad
or
daa
iret
in
mov
les
aaa
lods
cmpsb
jp
dec
or
jle
dec
pusha
shll
movsb
inc
pop
insb
cs
adc
pop
movsl
int
pushf
test
leave
cmp
sbb
and
mov
xor
xlat
es
add
sbb
xlat
jl
sti
adc
jmp
xor
enter
jne
rorb
lods
jb
sti
lods
mov
mov
rol
jmp
xchg
movb
dec
pop
out
sbbb
add
inc
push
sbb
xchg
dec
and
and
scas
out
push
dec
cli
nop
into
scas
mov
in
mov
xor
les
mov
add
neg
mov
shl
jmp
jge
and
into
sub
call
push
xor
cmpsb
bound
test
aad
lret
mov
pop
sbb
push
imul
cmp
push
clc
pop
jo
xchg
shl
dec
pop
mov
dec
pop
mov
xchg
iret
mov
stos
mov
call
xchg
xchg
aam
xorb
adc
push
dec
inc
data16
lretw
les
mov
adc
lea
dec
in
and
hlt
shll
or
jo
push
jae
adc
aaa
adc
mov
adc
mov
sarl
pop
ja,pt
xor
push
jae
mov
mul
push
xor
test
push
mov
inc
ja
mov
fldt
xlat
cmpsl
repnz
xor
fucomip
je
iret
loop
jbe
pop
pop
or
sbb
inc
mov
mov
add
cmp
adc
cli
lock
push
dec
jo
sbb
mov
movsb
scas
dec
push
or
loop
adc
mov
aas
fisttpll
xchg
sub
add
jecxz
inc
sbb
sbb
push
lock
push
mov
loop
push
dec
lret
and
mov
imul
jo
fiaddl
movsl
cwtl
sbbl
mov
mov
sbb
xchg
js
and
cmpsl
shlb
and
inc
fmuls
push
lcall
add
mov
fdivp
xchg
cmp
out
add
lahf
pop
cmpsb
jge
jmp
roll
push
xchg
dec
aaa
sbb
pop
dec
pushf
add
cmp
in
cwtl
jp
and
cmp
dec
and
mov
inc
jne
popl
mov
pop
aad
cmp
ja
lock
daa
xor
stos
int
outsb
ret
ljmp
jno
or
test
lock
inc
in
pop
add
iret
xlat
and
sahf
push
sbb
mov
pop
lret
sub
imul
inc
andl
ja
push
and
jae
out
push
push
xchg
push
jo
and
aam
mov
cmp
je
cmpsl
jecxz
pop
nop
call
lret
out
cwtl
gs
aaa
pop
decb
xchg
jo
xlat
clc
mov
outsb
outsb
call
fcmovnb
sahf
mov
jb
mov
jle
clc
mov
push
testb
pop
repz
mov
daa
test
insl
fidivrs
dec
adc
or
sbb
dec
les
jb
sub
sub
inc
mov
push
sbb
and
int
sub
mov
xchg
sbb
int3
aad
push
call
test
test
cld
daa
cmp
push
fisttpl
mov
pop
and
push
test
lcall
inc
and
js
push
shll
out
add
sbb
ret
call
loope
test
push
sbb
inc
hlt
in
jo
in
nop
ljmp
xlat
or
adc
lret
ss
jnp
fcmovu
fistps
aam
les
pop
push
sbb
xchg
mov
push
pushf
push
pop
test
or
iret
out
sbb
insl
outsl
mov
rorl
lea
add
repz
add
cltd
sbb
xchg
jb
loopne
stos
push
insl
scas
jge
mov
jg
es
push
push
addr16
in
testl
nop
jecxz
add
sbb
test
cmp
and
jp
test
lods
daa
inc
push
clc
mov
cmp
sub
test
std
call
and
xlat
add
int3
rolb
mov
or
fcompl
outsb
loopw
sarl
dec
out
xchg
pusha
and
and
aad
adc
mov
inc
fwait
aad
adc
jle
cmp
data16
ja
jbe
insb
pop
pusha
pop
xchg
push
scas
push
cmp
mov
cmp
xor
mov
pop
mov
mov
filds
rcr
xor
cltd
jnp
push
mov
and
and
push
fst
dec
clc
inc
stc
dec
jo
sbb
es
outsl
outsb
ljmp
leave
stc
pop
insl
es
idivl
jne
pop
jle
and
sbb
nop
movsl
sahf
sbb
cmp
and
cmp
cmp
push
mov
lods
jns
dec
mov
pop
add
scas
call
jae
daa
pop
mov
ret
mov
pop
jg
aas
mov
xchg
ja
xchg
cmp
aaa
lea
push
sub
push
cli
add
lahf
test
js
shlb
jg
and
out
push
mov
sbb
ret
mov
decb
addr16
jb
cmpsb
xchg
pop
dec
push
addr16
cmpsl
lds
jle
outsl
mov
mov
jo
cwtl
pushf
jae
cmp
pop
movsb
jp
cmp
xchg
loopne
push
pop
ret
std
fnstenv
pushf
pop
mov
js
into
inc
outsl
fidivrl
gs
sub
jns
fisubs
stos
fstl
ljmp
arpl
lods
sbb
subb
mov
mov
jmp
fsub
iret
js
out
sbb
adc
adc
mov
or
cs
sbb
mov
in
pop
inc
mov
sbb
jge
cmpl
mov
inc
fcmovne
shrl
add
cmpsb
cmp
pop
jp
dec
add
pop
sbbl
sub
call
push
cmp
in
mov
xchg
and
shrl
scas
icebp
xor
mov
pop
mov
mov
mov
cmp
mov
mov
mov
or
lds
xorl
xchg
add
xorl
insl
stc
jge
insl
push
test
adc
je
fs
fdivrs
pop
test
xchg
std
adc
mov
lds
movsb
mov
mov
sub
leave
or
adc
cmc
in
test
push
cmp
push
in
out
stos
add
aas
jne
mov
sub
push
pop
dec
mov
xchg
xlat
ja
push
outsl
mov
inc
cmp
sahf
cmp
jecxz
cmp
fists
adc
add
shll
xchg
mov
pop
sub
jne
stos
aad
fldcw
pop
cmpsb
fwait
test
rcrl
mov
cltd
inc
xchg
push
and
xchg
pusha
cmp
js
ror
jns
adc
xlat
lcall
movsl
test
and
mov
or
inc
mov
das
addr16
aas
mov
nop
test
and
clc
popf
mov
sarl
mov
int3
xor
mov
mov
in
sbb
cmp
mov
rep
std
addr16
test
mov
inc
lods
das
shll
sahf
push
push
decl
rcrl
xor
and
adc
lea
jae
int
mov
ja
and
push
add
pop
cmp
push
mov
sub
adc
xchg
pop
js
mov
std
or
mov
mov
mov
test
cmp
sbb
cmp
xchg
add
insl
mov
jae
xchg
mov
incb
mov
loopne
out
stos
lock
dec
and
xchg
dec
pop
popa
mov
push
outsb
inc
and
push
pop
xchg
in
push
pop
and
inc
int3
shl
cmpsl
sbb
fldln2
mov
dec
dec
pop
pushf
aam
pop
mov
sub
mov
scas
mov
outsb
aad
mov
mov
aad
push
jae
shlb
jns
mov
loopne
push
mov
cltd
clc
mov
movsb
ds
popa
and
test
and
das
daa
and
mov
mov
dec
pop
loopne
mov
or
pusha
jo
out
cld
addl
cmc
gs
mov
movsb
push
lock
enter
or
sarb
inc
and
adc
lret
into
xor
icebp
shl
xchg
inc
std
fildll
cli
in
outsl
cmpsb
inc
insl
testl
das
dec
dec
pusha
adc
push
adc
lds
pop
stos
fcoml
mov
aad
ret
gs
mov
dec
sbb
jbe
adc
aas
add
iret
xchg
lock
adc
mov
test
std
lds
insl
bswap
lods
subb
sbb
or
dec
jl
pop
rorb
in
dec
int3
sti
mov
pop
cltd
inc
dec
pop
mov
nop
jo
test
in
xchg
xor
aaa
shll
aaa
divl
clc
sub
sarl
iret
lods
mov
mov
mov
and
mov
mov
clc
sbb
push
aas
sar
xor
add
xor
inc
mov
mov
ljmp
or
addr16
add
mov
jnp
clc
jb
icebp
mov
mov
mov
adc
inc
sbb
rolb
cmp
or
outsb
push
sahf
loope
inc
ret
add
out
inc
or
pop
mov
xlat
dec
out
sub
push
pop
in
lods
dec
ljmp
adc
enter
sbb
fmul
idivb
adc
pop
adc
pushf
xchg
jnp
adc
xchg
inc
mov
stos
add
shlb
ret
les
pushf
jl
fisubrl
pushf
mov
inc
cmpsb
rorl
inc
add
fdivrp
xor
xor
xchg
inc
sbb
scas
or
dec
sub
loopne
jae
push
repz
or
add
lock
push
into
loop
fsubl
loope
lahf
xchg
gs
dec
sbb
std
clc
mov
addl
int
sub
ss
out
ret
enter
xchg
mov
in
stos
lods
inc
dec
imul
or
cmp
mov
push
mov
sub
ret
xchg
push
hlt
pop
sub
and
pop
lcall
adc
inc
cli
xchg
out
add
js
in
adc
repz
pop
inc
mov
or
jbe
sbb
mov
jb
div
leave
sub
mov
jae
jb
loopne
stos
pushf
pop
outsl
lcall
inc
addr16
or
aas
icebp
jne
push
sub
addr16
enter
dec
mov
push
jnp
sbb
xchg
push
jnp
mov
xlat
fdiv
addr16
fldt
mov
mov
mov
lods
es
jbe
or
in
xchg
je
xchg
daa
shl
movsb
and
fwait
imul
xor
and
cmpsl
cs
pop
mov
leave
lret
xchg
imul
add
addr16
lods
adc
cmp
dec
sbb
xchg
popf
push
stc
in
int3
jmp
mov
test
mov
jmpw
cmc
mov
mov
xchg
cld
fildl
das
mov
xchg
aad
add
push
out
sub
xor
pop
xor
pop
pop
test
jecxz
jmp
ja
xor
xchg
popf
lock
dec
outsb
test
jmp
mov
push
cltd
push
lret
mov
test
sub
popa
js
jle
pop
lds
or
fs
mov
xor
adc
aas
xchg
addb
into
or
sbbl
test
pop
idivl
adc
fcom
out
popf
push
pop
pop
shlb
inc
sbb
stos
or
inc
gs
mov
inc
inc
lret
cmp
xor
cmp
fstpt
testb
sbb
pop
mov
xchg
cmp
gs
out
pop
adc
sub
cmp
lods
jge
xchg
scas
mov
shrb
add
stos
xchg
push
andl
sbb
push
sbb
rorl
pushf
stc
cmpsl
aas
bound
cs
cmp
jbe
ja
jnp
xchg
adc
push
dec
pop
outsl
jno
add
data16
fs
xor
and
xor
xor
jnp
pusha
and
mov
pop
test
testb
ja
and
shlb
inc
jecxz
pop
in
pushf
das
pop
push
mov
sub
cmc
jns
push
push
leave
inc
enter
popa
fstl
lea
pop
and
mov
test
and
jmp
push
pop
inc
mov
mov
addr16
pusha
xchg
push
xchg
add
lds
and
sub
adc
push
jl
mov
mov
shrl
push
fsubr
andb
jo
xchg
loopne
mov
jle
add
movsb
and
inc
push
dec
aas
cmp
mov
xchg
mov
into
xor
jo
stos
nop
roll
mov
adc
fisttpl
and
imul
shrl
andb
or
and
scas
pop
sbb
pop
dec
ror
sbb
fisubrs
div
xchg
es
push
xchg
cmpsb
sahf
aam
cmpsb
popf
cmp
stos
orl
dec
mov
in
jg
push
pop
cmp
in
xor
lret
jae
pushf
push
pop
jae
sbb
jo
sti
lret
cld
mov
mov
mov
xchg
mov
or
xor
subb
ret
into
cmp
and
sbb
loopne
and
push
adc
mov
dec
mov
nop
fstpl
imul
fcmovbe
and
dec
iret
sub
cld
mov
lret
clc
xchg
dec
push
repz
add
and
xchg
push
jle
jno
aad
fwait
and
in
push
pop
jb
or
inc
cmp
popa
mov
add
stos
addl
pushf
decl
clc
sbb
out
jg
ljmp
test
or
stos
lods
jmp
sbb
dec
pop
pusha
mov
mov
or
adc
and
mov
lods
mov
mov
push
pop
icebp
lret
mov
sbb
mov
push
sbb
aaa
push
aaa
mov
movsl
pusha
loope
loopne
fimull
fisubl
mov
fcmovbe
scas
cmp
ret
sub
out
jnp
enter
push
adc
jl
in
loop
inc
enter
xchg
dec
sbb
out
sub
xor
and
rcrl
push
pop
push
pop
pop
ret
in
inc
test
add
sbb
push
sub
add
aad
xchg
or
jae
test
ss
ss
dec
push
sahf
or
mov
or
insb
xchg
sbb
inc
jecxz
sub
and
int3
ret
jbe
int
push
fidivrs
loope
sbb
xchg
jae
sub
dec
mov
cmp
mov
je
cmp
orb
std
insl
mov
hlt
mov
ljmpw
ficoml
fs
addr16
test
xchg
xchg
out
adc
sti
mov
cmpsb
rolb
and
push
xchg
ds
jns
push
jno
arpl
push
mov
sbb
add
or
mov
clc
mov
mov
and
dec
mov
jnp
adcl
ja
fs
and
jmp
inc
lods
jecxz
push
pop
pop
icebp
mov
sub
hlt
ficoml
insb
js
fcmovnbe
mov
cld
push
jo
mov
fwait
cmp
cmp
insl
fs
jecxz
xchg
out
leave
les
cmp
js
sbb
mov
and
mov
jae
sub
add
enter
out
adc
pop
test
xor
mov
dec
lock
stc
pop
mov
aam
inc
aad
push
pop
shll
sbb
imul
popa
enter
arpl
sbb
jmp
mov
push
lahf
xchg
adc
stc
jbe
int3
cwtl
adc
push
or
ret
into
pop
mov
sub
stos
int
add
pushl
mov
pop
loope
cmp
inc
mov
hlt
fistps
popa
aad
adc
cli
add
xor
test
je
push
sbb
dec
addr16
xor
adc
leave
fnsave
push
rcrb
adc
jnp
sbb
addr16
mov
xchg
sbb
fidivrs
mov
sub
jbe
add
sub
mov
notb
lret
loope
and
xor
in
xor
scas
pop
insl
cmp
add
out
jae
pop
jb
dec
and
mov
jg
iret
hlt
lods
popa
je
fidivrl
in
js
push
jp
fldt
sahf
sbb
jle
enter
cli
add
adc
les
loope
jne
test
sub
push
icebp
sub
push
test
insb
and
jge
adc
insl
sarb
imul
sbb
cmpb
mov
dec
out
xor
punpckhdq
add
outsb
push
push
pop
sbb
push
les
stos
add
xor
outsl
push
lcall
sarl
dec
lahf
fcompl
or
jecxz
pop
mov
lods
pop
pop
mov
in
mov
mov
xchg
adc
inc
int
out
cmpsb
or
xor
ljmp
sbb
popf
rolb
push
imul
sub
mov
out
and
xchg
test
popa
push
cld
leave
jl
mov
push
push
popa
lods
fnstcw
pop
adc
int
push
sub
push
sbb
in
mov
pop
dec
xor
jge
mov
subl
and
mov
testl
hlt
scas
aaa
dec
jae
adc
or
mov
xchg
rcll
lret
mov
gs
adc
push
jmp
jno
stos
xchg
popa
mov
push
pop
call
stc
lcall
cmp
xor
out
cmpsb
sti
xor
jecxz
repz
dec
push
fldenv
dec
les
inc
xchg
xchg
aaa
mov
xchg
xchg
jb
jge
or
cmpsl
xor
xchg
loop
addl
jecxz
jge
nop
bound
dec
lock
ds
jle
push
jg
xchg
jmp
repnz
jge
or
pop
sbb
arpl
adc
cld
pop
xchg
ret
dec
fld
clc
jb
cmp
hlt
cmpsb
in
jbe
push
test
aaa
jne
js
les
or
xchg
cltd
add
xchg
into
pop
sbb
xchg
and
push
xchg
add
repz
test
and
out
mov
sbb
jnp
fs
mov
xlat
jns
mull
outsb
pop
inc
push
or
adc
push
or
in
insb
mov
lret
aam
popa
push
ret
add
mov
pop
cli
pop
sub
enter
add
ror
not
aad
test
aad
jmp
dec
dec
fldcw
and
ds
pop
test
fs
xrelease
fmuls
and
pop
faddl
add
scas
xor
mov
cmp
mov
in
pushf
das
xor
fstp
subb
xchg
sub
add
rcll
iret
aam
and
jge
pop
sub
push
loopne
icebp
scas
and
pslld
add
repz
xchg
jb
clc
push
adc
js
push
pop
scas
dec
pop
xchg
stc
gs
cmpsb
ret
fnstenv
mov
cs
cmpsl
push
jl
mov
imul
cmp
hlt
leave
and
jecxz
aad
jo
std
or
fwait
pop
lods
bnd
pop
or
jle
jne
mov
scas
dec
dec
push
pop
add
dec
ret
outsb
add
jp
jae
bound
jmp
dec
ja
dec
xchg
mov
sarb
jecxz
and
test
fsubrs
lea
cltd
mov
sbb
lock
add
mov
adc
mov
adc
test
fmull
arpl
outsb
movsb
dec
cwtl
jb
fistps
inc
pop
ljmp
aas
repz
push
out
andl
aad
rorl
int
xchg
andl
fistps
dec
popa
dec
test
shll
push
cmpsb
pop
inc
clc
ret
notl
pop
pushf
adc
scas
fwait
mov
and
push
mov
adc
data16
hlt
je
mov
cmp
mov
lods
or
cmp
scas
dec
shr
cmp
push
jp
xor
add
std
cmp
jo
lret
xor
or
add
mov
pop
xor
enter
cmpsb
xor
add
mov
adc
test
push
int3
xchg
push
pop
les
jl
sub
sub
cmc
test
or
push
push
xchg
adc
and
xchg
inc
iret
into
jecxz
mov
add
push
jo
rorb
cli
clc
inc
imul
in
cltd
jne
add
mov
xor
js
jecxz
jnp
cwtl
data16
or
fs
call
stos
pop
mov
insl
inc
cs
cmp
enter
pop
lods
push
mov
loopne
popa
xlat
ret
push
xchg
add
addr16
pop
scas
dec
sbb
rcll
cmpsl
push
mov
clc
add
cmp
mov
ret
cmp
jnp
mov
push
pop
pop
xlat
cmp
call
and
int
mov
sbb
fcompl
pop
in
mov
jp
cmc
cmc
fiadds
movl
xor
rclb
fisubl
insb
mov
lds
aas
out
jmp
sub
push
dec
pop
sub
mov
aas
lods
andb
sbb
daa
push
pop
or
add
in
stc
into
lcall
jmp
ss
pop
cltd
xlat
cmpsb
xor
adc
cmc
lds
fwait
xchg
lods
popa
in
cld
adc
ret
xchg
or
loop
xchg
push
sahf
lock
inc
xchg
dec
cmc
repnz
jle
mov
movsb
mov
test
cltd
pop
and
add
fildl
jae
dec
inc
iret
pop
dec
inc
jns
dec
mov
sahf
arpl
cmp
jmp
sahf
push
pop
pop
repnz
orb
mov
sbb
and
popf
add
cli
or
subb
mov
outsl
insl
ja
cmp
jno
push
pop
xchg
movsb
xchg
lea
xlat
nop
stos
adc
outsl
push
jne
sub
sbb
fdivp
xchg
xor
out
mov
xchg
cmp
xchg
fmulp
or
sub
lods
pop
out
sub
js
xor
sti
fadd
lods
push
inc
jnp
xor
xchg
pop
jge
cmp
test
adcb
mov
mov
out
pop
in
cmp
pushf
out
mul
lock
inc
push
add
mov
xchg
jb
js
sahf
cmpsl
and
push
xor
push
cmpsl
mov
hlt
leave
push
adc
dec
xorl
scas
push
mov
mov
fwait
cwtl
es
pop
ljmp
or
sbb
adc
cwtl
xor
aam
add
js
push
jp
imul
lods
stc
jo
popa
mov
add
popa
nop
xchg
adc
nop
imul
push
add
icebp
jno
mov
sbb
roll
and
sub
sub
xor
and
lret
inc
test
negl
and
nop
or
pop
daa
add
sbb
insb
mov
out
sub
rcrb
push
mov
xchg
push
sbb
xchg
decb
sub
adc
jmp
push
pop
mov
sarl
pusha
addr16
sub
xchg
daa
call
push
mov
inc
mov
push
sarl
mov
dec
mov
cltd
mov
lods
pop
mov
push
push
nop
ds
push
add
sahf
cmp
or
sub
neg
sbb
or
add
mov
pusha
jecxz
dec
leave
mov
mov
sti
adc
add
gs
dec
lea
and
nop
and
mov
jmp
cmpsb
testl
ljmp
repz
and
adc
fldl
lahf
in
das
xor
and
gs
fldt
xchg
mov
xchg
xchg
inc
jae
jo
jbe
test
jle
or
out
or
scas
into
push
inc
lods
pusha
or
lret
jp
leave
outsb
xor
xchg
lret
test
cs
mov
fsts
xchg
test
jnp
les
js
fdiv
jne
mov
fisubs
and
jmp
jo
test
shrb
repnz
ret
lds
adc
sarb
mov
mov
or
movsl
hlt
dec
scas
js
xchg
repnz
nop
and
adc
jecxz
mov
enter
pop
mov
imul
mov
pop
push
and
inc
test
cli
mov
adc
in
subb
push
cld
mov
std
bswap
test
dec
jmp
xchg
data16
fidivrl
mov
pushf
and
faddl
loopne
xor
jnp
sub
mov
out
mov
sub
jmp
mov
push
fistps
call
and
dec
les
scas
addl
xchg
test
enter
mov
loopne
std
fldcw
inc
mov
lea
sti
jge
pushf
sub
scas
std
mov
ret
bound
mov
mov
int3
cs
pop
js
mov
xor
jecxz
mov
int
cmp
dec
nop
jno
shrl
and
xor
out
jbe
jg
fimull
insb
sbb
mov
inc
fdivl
pushf
sbb
inc
imul
daa
fcomp
bnd
pop
mov
dec
xchg
insb
push
fs
xchg
lret
sub
lds
scas
mov
pop
mov
ljmp
xchg
mov
int3
les
fiadds
into
out
cmpsb
mov
je
addb
enter
dec
sbb
rcrl
xchg
lods
xor
push
mov
test
bound
lret
xor
daa
jge
mov
arpl
xchg
test
push
dec
add
dec
add
inc
fiadds
inc
pop
mov
mov
jae
rcrb
nop
ret
outsl
jo
gs
xorb
sarl
ret
xor
sub
push
mov
push
out
test
adc
aas
inc
cltd
adc
clc
dec
int3
fldcw
std
cmp
inc
lret
cmc
call
mov
in
test
fwait
mov
inc
rcr
gs
sbb
xchg
out
push
ja
push
cli
movsb
mull
dec
jne
lds
pop
cld
mov
jne
pusha
xchg
jne
cs
mov
aaa
negl
xor
pop
mov
sbbb
mov
fwait
mov
stc
sub
cmp
jp
outsb
sub
pop
cltd
in
shr
lret
mov
nop
xor
push
lds
cld
sub
or
xlat
mov
aad
icebp
and
sbb
cmp
adc
mov
dec
ljmp
dec
iret
es
fldt
out
bnd
iret
cli
cli
scas
add
mulb
cmp
in
cmp
pusha
cmp
jmp
cmp
pop
js
xchg
rol
int
lock
mov
jae
ja
xchg
pop
idivl
inc
in
mov
fildl
inc
mov
or
shrb
jno
fucompp
into
shlb
andb
or
push
xchg
gs
out
xchg
xchg
inc
pop
aaa
push
add
insb
fisttpl
push
scas
cmp
dec
xchg
and
mov
jecxz
loope
out
loope
sub
gs
xchg
xchg
mov
in
mov
mov
into
xchg
pop
add
ds
sub
push
push
cltd
stos
mov
js
xchg
cmc
int
cmc
ja
test
pop
and
out
cwtl
loope
lret
mov
mov
xor
loopne
gs
iret
loope
mov
out
daa
push
sbb
dec
push
or
dec
ror
call
idivl
dec
aas
jo
mov
icebp
add
cmp
sbb
xorb
or
jno
sbb
lea
mov
movsb
jg
fcoms
push
jge
test
or
in
testl
les
aad
and
jno
out
scas
shlb
pop
dec
gs
iret
cli
inc
loopne
dec
cli
mov
repz
lods
xchg
push
sbb
test
inc
enter
or
je
mov
push
mov
jecxz
xchg
add
mov
or
jge
push
outsb
cltd
in
mov
inc
xor
rcll
outsl
xor
rolb
mov
insb
push
aad
imul
int3
xor
adc
or
or
mov
mov
flds
mov
into
inc
sub
jl
ret
or
xchg
fadd
xor
andl
lds
or
jle
add
rcr
push
push
pop
sbb
jne
in
adc
xchg
movb
test
scas
add
in
add
push
xchg
xchg
fstpt
aam
cmp
push
mov
jne
fs
xchg
lret
imul
sub
mov
inc
addb
cmp
pop
inc
in
mov
bound
shlb
mov
xchg
xor
mov
stos
lock
pop
fnstenv
sbb
mov
adc
fsubrs
mov
aad
sub
out
jb
adc
movsl
test
clc
cmp
es
decl
inc
pusha
inc
out
xchg
jg
and
pushf
shlb
scas
iret
popf
cmp
jl
sub
addr16
in
not
lahf
or
pop
icebp
add
pop
insl
dec
or
orb
pop
push
arpl
stc
fwait
add
lods
push
or
jne
pop
pop
hlt
xor
cmp
incl
jbe
mov
ret
jge
aam
orb
push
pop
enter
mov
xor
outsb
push
fcompl
nop
cmp
push
fidivrs
dec
mov
or
std
mov
out
clc
xchg
cs
mov
sbb
lock
add
sbb
xchg
cmpsl
lods
cmp
scas
mov
jmp
rcrb
inc
jnp
repnz
adc
sub
xchg
pop
inc
pop
inc
lods
push
fcmovb
in
daa
hlt
popl
pop
dec
adc
movzwl
and
into
xor
test
jo
and
cwtl
mov
imulb
mov
movsl
sbb
dec
pop
xor
fcoms
xchg
mov
cmpsl
pop
inc
test
sbb
push
mov
xchg
jge
pop
shl
pop
nop
mov
int
arpl
xchg
push
and
jecxz
adc
jmp
popa
pop
test
das
mov
in
aas
xchg
mull
sub
sub
icebp
loope
xchg
inc
xchg
jmp
movsl
fisubl
xchg
cmp
adc
ret
xchg
mull
xchg
fld
hlt
stos
pusha
adc
call
cltd
inc
lock
and
xor
insb
pop
scas
mov
dec
jns
mov
jae
inc
or
std
fnstcw
stos
push
shr
adc
pushf
xor
jmp
dec
fwait
dec
stos
aam
push
push
repnz
mov
in
jnp
aaa
mov
mov
insl
sbb
lock
inc
andb
aaa
dec
stos
adc
and
dec
add
decb
adc
mov
insl
push
xchg
xchg
repnz
pop
and
jmp
pop
iret
daa
nop
inc
xchg
xor
fstp
sub
pop
leave
or
es
mov
sti
and
lds
push
pop
sbb
stos
push
mov
push
xchg
jge
cmp
popa
pushf
add
sbb
xchg
imul
clc
mov
lea
mov
jp
fmuls
and
push
push
loop
mov
adc
jae
je
imul
imul
btr
jp
enter
add
andl
fstl
mov
cmp
and
push
inc
jne
or
sub
mov
add
sti
icebp
dec
inc
mov
adc
andb
nop
pop
adc
mov
jg
decl
push
scas
push
test
mov
jnp
push
mov
adcl
pop
in
jnp
or
scas
cwtl
sub
sti
xchg
mov
push
insl
cmp
sub
push
sbb
mov
adc
xor
fwait
imul
jge
sbb
hlt
inc
insl
sub
divl
scas
in
sub
stc
in
mov
lods
mov
stos
mov
sub
mov
sub
leave
cmpsl
outsb
test
cmp
jge
push
inc
sbb
cld
sarb
pop
test
add
jae
jge
repz
ret
xchg
ret
jge
jno
jnp
jge
xor
sub
mov
jae
inc
sarl
shll
cmp
or
push
imul
dec
sbb
add
je
push
push
in
cli
add
lcall
into
sub
inc
repnz
aam
cli
stc
dec
rcll
sbb
cmp
mov
jo
dec
daa
mov
mov
push
outsb
push
cmpsb
push
xor
jb
scas
cmp
fnstenv
cmp
xor
mov
fcoms
call
mov
jmp
dec
adc
je
xchg
adc
int3
popf
popf
cld
jns
dec
popf
mov
sub
out
aam
push
lods
lret
xor
fadds
sbb
repz
insl
or
adc
mov
out
jle
leave
or
imul
dec
jmp
mov
mov
bound
inc
cwtl
mov
xchg
jp
mov
aas
add
push
movsb
or
add
icebp
ja
cmp
xlat
mov
pop
ret
sbb
jo
fisubs
outsl
sub
add
sub
les
sub
inc
pop
jae
lcall
push
xorl
mov
dec
inc
mov
jg
or
adc
mov
xchg
dec
adc
fstpt
jo
mov
add
mov
or
pop
dec
or
jle
repz
inc
cmp
rcrb
dec
iret
xchg
cmp
idivb
lock
repnz
mov
loop
pop
push
daa
fs
iret
fisttpll
shll
lods
ljmp
out
or
and
je
xchg
pusha
test
loope
adcl
mulb
ja
lcall
inc
mov
cwtl
pop
js
repz
dec
jg
mov
dec
ljmp
pop
aas
mov
xchg
mov
std
dec
add
loop
test
lods
mov
sti
adc
jns
mov
ficomps
sub
mov
sbb
adc
movsb
jge
aaa
jb
pusha
add
roll
not
pop
pop
mov
pop
pop
add
dec
pop
arpl
jecxz
jne
sub
push
mov
or
or
jle
repnz
in
inc
fxch
addl
xor
addr16
cmpsb
pop
mov
sti
push
ret
lret
inc
dec
fldl2e
fldenv
mov
dec
arpl
imul
sub
lcall
rcrl
or
je
fcompp
adc
mov
pop
mov
push
push
inc
mov
sub
or
andl
les
xchg
add
popf
pop
xor
push
les
inc
xchg
aad
lahf
or
sarl
sub
fcmovne
fsubrl
mov
sbb
in
les
nop
pop
inc
xchg
andl
sub
les
dec
mov
scas
dec
cmc
add
add
jmp
xchg
mov
in
add
jae
and
sub
imul
fsub
cltd
mov
mov
mov
stos
ror
jae
and
bound
int
addr16
mov
test
insl
mov
sbb
fldt
adc
mov
sbb
xor
cmp
ds
inc
xchg
adc
mov
push
mov
lret
pop
inc
sub
stc
enter
insb
lret
les
or
dec
jo
xchg
xlat
in
popa
shrb
dec
popf
popf
ja
pop
enter
sti
cmp
std
inc
add
fcompl
in
push
add
fisttpll
addb
pop
cmp
ucomiss
jbe
test
push
xor
aaa
gs
jo
adc
push
lds
add
inc
mov
cmp
filds
ljmp
outsb
or
xchg
stos
jg
mov
dec
mov
das
pop
inc
xchg
and
sbb
stc
lock
jne
jmp
mov
mov
add
ja
sar
xchg
pop
cmp
jge
les
mov
xor
mov
fmuls
sbb
mov
pop
cmp
xor
xor
push
push
popf
ficoms
mov
insb
cmp
out
adc
ds
in
mov
mov
cmc
mov
fsubrs
fnop
test
xchg
mov
sbb
call
pusha
mov
mov
shrb
cmp
dec
mov
inc
xchg
add
push
and
lahf
mov
in
es
ljmp
rolb
hlt
mov
sub
mov
and
push
ficomps
ljmp
fs
sub
jbe
out
shlb
rolb
insb
mov
mov
xor
xlat
dec
inc
cmpsb
mov
cmp
loop
ror
ret
jbe
sbb
ret
mov
mov
mov
jge
fidivrl
sahf
lods
add
insb
pop
mov
sti
mov
mov
pop
xlat
mov
mov
and
out
std
fmull
ja
leave
pop
lock
adc
ret
mov
sub
outsl
inc
dec
fwait
pop
adcb
leave
inc
ljmp
dec
adc
jne
outsl
mov
inc
adc
sub
sub
jge
enter
sbb
repz
jae
or
enter
dec
push
or
sbb
cmpsb
or
loopne
test
shl
fsubrp
lock
imul
add
cmc
aas
lods
sub
xor
xor
push
imul
iret
sbb
sti
inc
mov
test
adc
sub
jne
pop
pop
cmp
cmpsb
or
sbb
mov
cmp
dec
pop
jbe
loop
test
sar
icebp
js
insl
xorb
scas
dec
inc
int
jae
jl
aad
icebp
ds
pushf
xchg
mov
and
push
jmp
pop
xchg
ja
in
mov
stos
loop
pop
ret
rdmsr
or
cmp
ret
mov
sub
mov
bound
into
jns
jg
fstps
and
inc
push
mov
mov
dec
inc
jp
pop
es
add
push
sub
jmp
xchg
push
cmp
xchg
iret
jmp
mov
jmp
xor
out
dec
add
leave
push
imul
rcr
pop
je
andb
jp
push
xchg
pusha
mov
bound
cmp
lods
mov
aaa
mov
mov
das
sbb
mov
int
push
movsl
les
and
jmp
dec
add
or
lcall
scas
dec
iret
dec
xchg
fcom
mov
movsl
imul
adc
jo
push
pop
sti
xor
lcall
movsl
cmc
jno
or
test
cmp
mov
stos
dec
inc
insl
or
dec
mov
shrb
shl
cmpsb
mov
mov
repz
std
mov
sbb
ret
fidivl
push
fcoms
jg
mov
xlat
inc
jo
jno
cmpsl
sahf
pop
ljmp
jmp
mov
pop
ret
cmp
shll
mov
scas
scas
into
inc
rcl
rolb
adc
add
inc
adc
in
cmp
ds
out
into
out
mov
mov
outsb
push
or
dec
jmp
add
or
adc
mov
add
rcl
mov
lret
mov
cli
sub
xchg
mov
dec
movsl
sbb
lods
adc
inc
shr
mov
cli
sub
mov
cmpsl
iret
or
jb
clc
sahf
leave
mov
pop
jne
lret
outsb
cmp
push
add
push
push
fbld
sub
and
mov
lahf
loope
fdivs
cmp
in
mov
sbb
notl
jno
ljmp
push
aad
xchg
xchg
scas
sbb
dec
pop
jb
mov
dec
xchg
push
pop
xchg
fs
push
arpl
in
mul
dec
dec
push
inc
cmp
push
mov
and
daa
sti
sbb
shlb
std
lods
and
jne
sub
xchg
wrmsr
outsl
inc
dec
push
cmp
enter
push
rorl
add
lods
or
in
jl
ljmp
add
sti
sub
xor
pusha
rcrl
xchg
adc
xchg
push
inc
popa
mov
jge
fiaddl
test
inc
sbb
out
ret
lahf
fcmovne
or
mov
mov
lcall
mov
std
clc
sbb
fbld
je
fdivrs
fs
in
xor
adc
stc
push
dec
ret
push
xor
sar
cwtl
sarl
cmp
outsb
in
lahf
sub
jg
sti
test
mov
jg
pop
and
pop
cmpsb
aas
repz
xor
mov
pop
xchg
fldcw
out
sub
jge
jge
and
mov
mov
mov
fwait
ljmp
add
mov
and
sub
out
lahf
push
dec
int
jnp
data16
pop
mov
fists
shlb
and
xchg
jmp
mov
mov
arpl
push
or
data16
cld
mov
out
xor
fistps
sbb
push
push
call
mov
mov
push
xor
mov
and
and
nop
aas
dec
cmc
push
pop
pandn
sarl
enter
jecxz
sbb
rorb
rcll
fcmovnbe
lcall
adc
mov
sbb
stos
arpl
sbb
hlt
insb
xchg
mov
stc
cmp
adc
leave
ffree
add
mov
push
jg
add
ficompl
jg
iret
out
bound
lahf
jmp
loopne
sub
lret
xchg
inc
jo
mov
jne
push
xlat
stos
jecxz
push
mov
xchg
jo
dec
shr
push
js
xor
xchg
jo
inc
loope
mov
inc
into
cmp
add
test
mov
sbb
xchg
test
mov
lods
push
jmp
data16
fsts
test
adc
pop
xchg
xor
hlt
mov
fs
das
repz
push
in
movsb
pop
mov
ljmp
idivb
rolb
jbe
jo
in
iret
add
sub
jne
xor
jb
shl
lds
pop
xchg
cmp
xchg
pop
and
ss
cmp
sub
push
xor
out
ret
add
sub
mov
mov
setle
adc
insl
imul
std
sub
push
mov
mov
fldt
hlt
adcb
dec
mov
lahf
mov
lret
cmp
pop
data16
adc
cmp
sub
xor
repnz
loop
rorb
popa
cli
ja
inc
dec
mov
ds
jne
std
fistpll
mov
cmp
insb
bound
mov
jb
hlt
pushf
push
sahf
xor
je
inc
mov
xor
cmp
fsubs
ss
fmul
mov
inc
xchg
mov
repz
mov
cld
in
lock
jmp
mov
subb
mov
insl
or
pop
inc
cmpsb
inc
pop
add
stos
rcll
gs
and
jmp
pop
sbb
lahf
push
pop
insl
mov
ljmp
inc
insl
pop
sarl
in
in
mov
data16
xchg
push
jge
push
mov
adc
xor
mov
sub
push
js
cmpsb
cmpsb
cmp
pop
push
popa
fsubl
push
adc
xor
lret
push
xchg
mov
add
adc
out
aas
dec
movsb
xchg
xchg
inc
sub
mov
mov
push
fwait
pop
fstpt
xor
cmp
push
movsb
dec
aaa
ja
add
xchg
icebp
out
pop
ret
sbb
je
mov
push
lds
hlt
ret
cs
or
push
and
outsb
pop
inc
gs
mov
das
xchg
daa
xchg
fisttpl
je
sub
fisubrs
mov
mov
dec
lahf
xchg
das
repz
adc
mov
mov
inc
or
mov
loopne
push
orb
xchg
xchg
fistl
insl
mov
mov
xchg
cmp
outsl
repz
cs
or
lret
leave
jmp
fcomi
aam
cld
push
sahf
jae
mov
mov
inc
xchg
mov
sub
jb
cmp
mov
mov
cmp
out
icebp
movhlps
movsl
fisttpll
pop
mov
loopne
sti
rolb
fdivr
adc
jge
sub
sbb
clc
stc
sub
out
outsl
fwait
imul
dec
popf
sub
mov
in
inc
es
mov
sub
test
mov
push
fidivrs
mov
pop
lock
gs
aas
mov
jne
push
pop
addr16
or
mov
loop
out
push
inc
ret
fstl
and
lcall
pop
dec
sarb
rorb
lock
fsubrs
xchg
cmpsb
outsl
js
or
adc
xchg
lods
xchg
fdivrl
int
jnp
dec
div
mov
push
cmp
add
leave
xlat
enter
dec
fs
push
jnp
gs
add
pop
clc
or
jl
xor
cmp
push
out
push
jl
cmpsl
aaa
ljmp
and
adc
cmp
xor
insb
adc
and
sub
sar
cltd
lods
lret
movsl
lea
jno
mov
je
mov
mov
scas
mov
xorb
pop
and
and
inc
shlb
cmp
sub
adc
cmpsb
and
loop
push
rolb
outsb
xchg
mov
dec
das
push
push
fwait
arpl
jle
mov
bnd
clc
stos
int3
sahf
into
lahf
lds
mov
imul
mov
scas
icebp
jno
subl
int3
aad
mov
adc
popf
xor
ficoml
ficomps
xchg
outsb
jl
mov
aaa
adc
in
xchg
ret
aad
jle
fdivs
sub
push
xchg
push
or
pop
pushf
jmp
pop
xchg
pusha
inc
lahf
shlb
xchg
outsb
add
sahf
dec
add
and
inc
outsl
test
rol
cli
mov
xchg
rolb
mov
or
rclb
cmp
pop
mov
popf
inc
adcl
or
mov
flds
mov
dec
fdivp
adc
or
or
push
push
out
push
loop
fdivp
js
ficoml
sub
int3
add
ret
mov
loopne
push
aaa
xchg
imul
dec
pop
bound
push
std
sub
popa
jnp
inc
rolb
in
cmpsb
in
dec
or
sub
xchg
movsl
add
in
mov
sarb
cmp
cli
push
push
fs
gs
pop
dec
or
out
addr16
call
cli
inc
cwtl
cmp
in
sub
nop
ficomps
xchg
sub
bound
nop
fsubl
loope
clc
dec
pop
adc
xchg
int3
mov
inc
addb
hlt
mov
dec
fsub
push
lods
sbbl
leave
mul
pop
cmp
testl
and
fsub
dec
pop
mov
lock
clc
stos
loope
insb
pop
jl
jp
sbb
pop
or
stos
lret
nop
fiaddl
test
mov
push
push
insl
push
mov
xchg
adc
sub
lods
out
out
arpl
rclb
mov
fdivrl
imul
push
xor
pop
jmp
clc
int
into
fld
or
mov
das
fisttps
loopne
gs
push
inc
daa
pop
addr16
loope
shrl
int3
mov
jmp
ret
jns
jge
lahf
sub
gs
cmovge
mov
clc
icebp
ret
mov
into
aam
jmp
int
nop
incl
lret
imul
outsb
ss
push
mov
in
mov
cltd
ss
dec
xor
and
or
push
jmp
adcl
or
inc
std
push
mov
jg
pop
sub
inc
xlat
inc
repz
loope
lods
mov
ds
repz
test
jp
mov
and
pop
cwtl
and
aad
inc
cmp
les
jle
mov
inc
sqrtps
cmp
pop
push
ja
loopne
mov
xlat
ucomiss
fldl
mov
into
xchg
xor
jmp
test
loopne
push
in
cli
or
test
daa
shlb
xor
mov
sbb
pop
xor
pop
out
enter
pop
sbb
pop
xchg
mov
inc
inc
out
push
and
sub
mov
fs
jne
out
push
ds
ficomps
mov
jmp
dec
xchg
add
or
les
sbb
adc
js
in
enter
pop
and
in
shrl
pop
fwait
fldt
scas
push
push
stc
test
xor
and
out
mov
sarb
add
in
adc
enter
jbe
stos
xor
sbb
int
test
add
loope
dec
mov
cmp
lods
out
lret
int3
cmp
dec
cmp
pusha
xchg
adc
adc
sbb
push
xchg
orb
inc
mov
repnz
iret
jo
and
shlb
fadds
or
test
push
sbb
inc
inc
mov
rorb
ret
addr16
shll
mov
scas
ds
pop
insb
or
sub
pop
sbb
xlat
add
sub
out
mov
sbb
push
call
xor
iret
out
cmpsb
mov
out
pop
int
test
daa
cmp
ds
adc
inc
cltd
and
pop
loopne
push
mov
in
test
jge
add
nop
cltd
mov
dec
arpl
mov
dec
rclb
imul
repz
loope
fidivrs
adc
mulb
es
out
push
sub
pusha
inc
cmpsl
daa
adcl
mov
pop
mov
mov
pop
mov
pop
xlat
sbb
inc
push
push
mov
inc
mov
add
sarb
sti
xchg
mov
out
mov
insl
xor
mov
cmp
dec
fnstenv
inc
test
mov
outsl
mov
pop
adc
faddl
pop
aad
or
stos
jno
xor
fidivs
xchg
or
cmp
cs
inc
fs
xor
jl
xor
jg
pushf
and
dec
addr16
loopne
jle
hlt
mov
xor
es
movsb
or
arpl
inc
in
jbe
lds
mov
xor
mov
jo
push
into
call
sub
cmp
test
pop
or
xor
cmp
loopne
ss
inc
jl
cmpl
and
xchg
insb
ljmp
inc
mov
sub
dec
fsubrl
xchg
test
cwtl
in
hlt
mov
sbb
sub
nop
cs
pop
mov
ljmp
xor
jg
jge
cmp
push
fldcw
mov
pop
lods
jecxz
xor
and
data16
cli
loope
xchg
mov
push
ja
pop
adc
sbb
mov
push
adc
or
int3
cmp
js
mov
pop
add
pop
shrl
aad
repz
fldcw
mov
std
out
inc
adc
mov
loop
xchg
bound
fwait
cmpb
cmc
adc
jne
jne
lock
mov
shl
sti
cmp
cmpb
jne
xchg
pop
dec
jne
or
sub
mov
and
dec
sbb
addb
cwtl
imul
stc
jo
loopne
imul
cld
lods
adc
testl
ds
sub
aam
inc
cwtl
es
add
fldcw
inc
xor
add
out
lock
aad
test
xchg
lcall
inc
into
dec
xchg
rorl
ds
inc
ret
add
mov
dec
mov
imul
enter
mov
pop
cmp
xchg
lret
movsb
add
addb
xlat
std
add
xor
fcomps
ds
jne
int
mov
out
adc
jle
jmp
fiadds
mov
sbb
shl
inc
cmp
or
popf
insb
int3
jno
push
shl
shlb
in
or
and
pop
dec
dec
xor
mov
xor
jecxz
xor
add
xlat
adc
push
shll
out
pusha
adc
mov
pop
and
clc
imul
mov
push
mov
mov
jg
pop
aam
das
sub
push
fs
mov
aad
inc
enter
mov
jnp
mov
cli
es
test
pop
jo
test
or
pop
inc
loopne
rorb
push
in
or
or
icebp
out
sub
pusha
or
cmp
inc
shr
rclb
popf
test
xchg
pop
enter
push
add
or
pop
push
nop
cld
xchg
pop
jp
jmp
fdivs
lea
lea
std
pop
mul
shlb
fs
push
jg
fsubp
jbe
sbb
hlt
fnstsw
nop
sub
lods
enter
sbb
stc
loope
sbb
scas
and
sbb
cltd
cmp
push
mov
sbb
jbe
mov
xor
xchg
push
or
je
sub
jbe
xor
and
lods
inc
jp
jne
push
mov
jle
fiadds
sahf
push
imul
ss
mov
xchg
ja
inc
scas
mov
adc
jne
mov
insb
leave
and
mov
in
push
sbb
es
cwtl
jp
outsb
aas
push
ficoms
push
sti
sub
enter
and
mov
out
adc
outsb
pushl
jne
xlat
aaa
xchg
mov
in
test
stos
std
sbb
lahf
jbe
cmpsl
mov
leave
pop
mov
icebp
icebp
mov
mov
repz
shll
xor
pop
jo
dec
mov
mov
fdivs
mov
sbb
adc
test
cmp
and
mov
daa
add
pop
and
jl
or
mov
jo
mov
test
out
movsl
mov
sub
mov
enter
sbb
nop
in
addr16
leave
xor
push
push
popf
cmc
sub
lock
xor
xor
push
fistpl
push
xchg
int
cli
xchg
rorl
mov
xorb
mov
push
stos
js
repz
dec
cld
pinsrw
mov
mov
outsb
adc
push
adc
sub
cmp
inc
lret
scas
aam
jns
sbb
mov
loope
jb
add
dec
and
add
xor
cmp
das
insb
pop
push
push
cmpb
lcall
das
xor
ljmp
jnp
mov
adcl
pop
jge
pop
fucom
add
sub
xchg
mov
test
data16
xchg
sub
mov
add
fstpt
sub
cmp
addr16
sbb
sub
sbb
mov
jbe
repz
mov
js
es
inc
sbb
loope
lret
sub
jecxz
push
cwtl
lods
pop
int
or
mov
cmpsb
js
mov
mov
arpl
pop
outsb
gs
add
pushf
mov
adc
jmp
rclb
out
mov
in
and
addr16
addb
xlat
stos
mov
repnz
pop
int
xchg
jecxz
popa
lret
jg
mov
test
leave
int3
add
rcr
outsl
sbb
stos
aad
mov
mov
xchg
in
push
inc
popa
push
push
movsl
fdivs
mov
inc
inc
scas
xchg
in
ds
cmpsb
data16
mov
lds
cmp
stc
in
mov
sti
mov
in
lret
dec
inc
out
inc
clc
and
adc
and
dec
mov
jp,pn
and
lods
cmp
mov
xchg
sub
addr16
daa
insb
popf
adc
aas
jl
dec
popa
jge
outsl
pop
or
jno
push
mov
sbbl
adc
dec
mov
stos
xchg
xlat
push
adcl
lret
scas
mov
cmp
xchg
ja
enter
roll
push
inc
mov
push
add
int3
dec
jle
icebp
call
inc
jns
cmp
xor
dec
inc
mov
jo
in
ret
sub
sbb
mov
fisttpll
jg
gs
xchg
leave
xchg
add
fidivl
sbb
fucomi
sbb
and
xor
sub
add
pop
add
inc
sbb
loopne
pop
inc
dec
lods
outsb
jcxz
sbb
adc
add
in
jne
fimuls
scas
outsl
into
mov
and
add
aad
push
pop
sarl
xor
xor
mov
inc
lods
hlt
push
filds
inc
pop
into
repz
adc
lret
sbb
pop
lods
cmp
outsl
clc
inc
mov
stos
mov
inc
int3
cmpsb
pop
hlt
cmpsl
cmpsb
mov
ret
sar
shrb
pop
rolb
lods
rcrb
jbe
jno
cmc
pop
jmp
xchg
rcrb
sbb
push
and
stos
jmp
jge
and
test
pop
jmp
pop
cmpsl
sbb
addr16
sbb
sub
mov
or
inc
clc
orl
pop
js
inc
mov
xchg
int3
inc
cli
negl
sbbl
pop
jns
inc
fs
idivb
add
push
add
je
sti
cmp
push
mov
ja
leavew
or
jno
movsl
loope
setg
pop
lret
xchg
dec
push
test
xor
ss
xor
out
js
xchg
adc
and
call
cs
daa
or
push
xorb
pop
daa
or
loop
mov
jno
inc
stc
hlt
arpl
jbe
inc
xchg
mov
or
xchg
cltd
inc
jmp
jmp
mov
sbb
in
dec
ljmp
pop
push
outsl
repnz
add
pusha
sbb
int3
addr16
jne
mov
jecxz
mov
mov
add
test
jne
sub
push
es
xor
pop
iret
add
out
loopne
cs
loop
inc
aas
mov
pop
or
loop
scas
shrl
sub
or
scas
jecxz
stos
cmova
push
sbb
insl
pushf
fdivrl
pop
xor
fcmove
popa
push
push
mov
mov
mov
add
rcrb
adc
dec
incb
mov
pop
or
ja
fisttps
cltd
or
xchg
jbe
xor
xchg
out
inc
ret
lods
sbb
sub
icebp
daa
out
sub
mov
lods
push
and
xor
push
xchg
jb
and
in
fadds
push
cmpsb
scas
mov
xchg
aas
loop
mov
push
jbe
push
sub
in
jnp
jns
loope
stos
xorb
push
pop
mov
mov
in
or
js
push
notl
cwtl
adc
cltd
enter
pop
idivb
sahf
test
fisubrl
call
mov
call
pop
sbb
mov
dec
jge
lods
popl
mov
push
or
je
loope
and
out
loop
stos
sbb
xor
mov
leave
enter
adc
test
js
or
popf
mov
arpl
fmuls
dec
pop
xor
xchg
fs
sbb
dec
enter
inc
enter
mov
aam
and
inc
dec
jbe
outsl
sbb
jge
in
movsl
xchg
mov
dec
jae
je
push
pop
data16
lea
nop
scas
scas
aam
jg
fists
xchg
test
sub
mov
icebp
sbb
push
sub
inc
stos
loopne
dec
out
dec
mov
jae
into
adc
push
jne
sahf
pop
into
xlat
imul
cmp
cs
sub
arpl
or
ja
mov
inc
jmp
fwait
imull
fimull
jnp
xor
xchg
outsl
mov
mov
mov
xchg
pop
jmp
lret
in
mull
jmp
fwait
jl
push
and
jle
pop
sub
fwait
scas
pushf
and
rcrl
cmp
mov
sub
xor
mov
mov
xor
test
cmp
pop
adc
sahf
mov
movsl
cmp
xchg
in
xor
in
jb
imul
cmp
sbb
inc
push
cmp
repz
lcall
mov
sub
mov
inc
sbb
push
ja,pn
out
mov
iret
call
cwtl
and
or
stos
xor
mov
jo
in
lods
xchg
mov
pushf
enter
cmc
pushf
stc
mov
sub
cmp
fdivs
add
sarl
xor
pop
pop
pop
scas
sti
lods
scas
jb
mov
addr16
adc
and
mov
ret
shlb
hlt
lret
call
mov
fwait
cmp
jg
jns
jne
mov
leave
out
test
pop
jmp
daa
je
mov
aad
incl
xchg
push
cmp
push
std
adc
fisttpll
les
add
out
rcrb
mov
rcrl
leave
dec
mov
pop
push
addl
sbb
jb
pop
fneni(8087
popf
add
data16
sbb
jg
ret
nop
and
outsb
push
mov
loope
incb
add
andb
imul
int
xor
pop
cmc
mov
adc
push
inc
lea
inc
outsl
sub
xchg
and
jecxz
js
mov
fidivl
push
push
in
icebp
int
pushf
cmpsl
iret
jecxz
hlt
lods
insl
xchg
subb
test
pop
dec
xchg
adc
xor
inc
out
sub
pop
mov
out
fcmovb
fstl
cli
adc
inc
jno
cmp
dec
mov
aam
sub
inc
xlat
sbb
mov
jb
add
insb
pop
and
popa
aad
and
shl
sub
xchg
gs
enter
add
or
test
xchg
fbstp
jg
movsl
fwait
in
sub
mov
dec
dec
push
in
cltd
dec
arpl
mov
dec
lods
test
adc
ljmp
pusha
js
hlt
test
dec
or
dec
fimull
movsb
mov
int3
mov
add
dec
jg
pop
or
push
inc
pop
lret
cmc
cmp
cs
jnp
stos
inc
ljmp
mov
lods
jp
dec
xor
pop
mov
rcr
dec
jnp
divl
divb
ret
test
decl
ljmp
insl
in
loopne
pushl
rorl
addl
lahf
add
dec
add
cmpsb
jg
in
mov
pop
cmp
insl
stc
popf
iret
add
push
jnp
mov
sub
repnz
fdivrl
adc
mov
fisubrs
imul
push
push
push
shlb
cmc
jp
mov
addr16
mov
into
mov
leave
xchg
das
add
stc
call
or
stos
dec
sbb
lret
outsl
or
scas
pop
fisttpll
orl
cmp
mov
xchg
pop
pslld
jl
les
int
inc
sub
pop
dec
movsl
mov
ret
sbb
scas
mov
scas
addr16
jo,pn
pop
xor
lods
jbe
push
inc
loope
cs
popa
loop
lret
xor
pop
ret
lcall
adc
fsubs
push
cli
mov
imul
pop
popa
sarl
lret
cmp
sub
push
xchg
jle
pop
xlat
xor
aam
js
mov
vaddss
and
pop
addr16
lea
incb
repnz
push
and
nop
mov
adc
pop
cs
mov
adc
push
jle
lcall
rol
cmp
jmp
inc
loopne
jecxz
fisubl
pop
testl
in
dec
movsl
add
mov
dec
mov
js
adc
rcrl
clc
push
decb
jbe
call
mov
outsl
ss
xorb
jo
xor
fdivr
mul
dec
cmp
mov
cmp
test
test
xchg
dec
jecxz
sbb
rcr
stos
test
cmc
push
or
push
divl
and
xchg
push
icebp
sub
mov
add
mov
inc
push
test
fst
push
xchg
scas
mov
lret
xchg
pop
cmp
sbb
xlat
xor
xchg
mov
cld
pop
add
arpl
jne
xchg
fwait
js
jnp
mov
sar
pop
inc
xchg
xchg
xor
aam
rcr
dec
mov
cmp
add
xchg
push
imulb
xor
add
lret
sbb
jae
adc
mov
in
push
cmp
icebp
add
inc
add
mov
sub
cli
adc
push
mov
fsubp
scas
mov
pop
push
add
xor
lret
or
or
sub
cmp
add
xor
xor
xor
xor
test
out
mov
stos
mov
pop
icebp
jno
xchg
mov
outsb
inc
xchg
adc
test
mov
lock
inc
adc
mov
loopne
xor
jno
or
repz
f2xm1
cmp
repnz
sub
int3
dec
mov
fmull
lret
cmp
sub
call
fildll
jne
sub
pusha
and
push
add
dec
pop
sub
cli
mov
dec
push
fnstcw
lahf
mov
mov
xor
dec
pop
push
cwtl
xor
add
mov
in
inc
xchg
mov
jp
aam
add
pop
imull
mov
mov
into
jns
movb
insb
xchg
aas
push
dec
push
inc
movsb
idivl
jg
sub
push
mov
jecxz
mov
sbbb
mov
push
test
rolb
loopne
clc
addr16
sbbl
fisubrs
mov
push
xor
mov
xchg
gs
pavgb
cltd
insb
xchg
std
test
or
lock
pop
push
ja
jp
fisubrs
lret
ret
jmp
xorb
jbe
jmp
push
int
cwtl
cli
xchg
xlat
sub
xor
or
les
xor
in
mov
pop
jnp
xor
lock
orb
inc
mov
scas
into
dec
popf
inc
mov
cmpsl
lods
mov
cmp
push
in
pushf
clc
in
ljmp
push
xlat
repz
xor
negb
stos
lret
lcall
mov
jmp
push
test
inc
test
mov
mov
in
mov
mov
imul
mov
cmp
add
aam
mov
lret
jp
ljmp
insl
fidivl
xchg
or
xor
stos
rorl
mov
inc
dec
jne
mov
jecxz
enter
mov
xchg
push
lret
popa
sub
lret
movsl
mov
jg
inc
pop
pop
cld
lods
cmc
cld
sbb
imul
inc
shl
push
xorl
loope
push
fs
in
jmp
int
lret
mov
pop
dec
imul
cltd
inc
inc
lds
add
mov
popa
mov
insl
cmp
cmpsb
adc
mov
pop
cld
cmp
and
mov
daa
movsb
pop
and
push
xor
repz
je
fisubrl
jg
cmpsl
inc
cmp
dec
jmp
in
pop
push
mov
jne
fdivl
push
or
mov
and
pop
into
xchg
ret
mov
aad
xchg
mov
aam
jl
mov
lods
int3
stos
loop
and
add
mov
push
mov
in
dec
fldenv
stos
xchg
fists
xor
push
addr16
bound
pop
xor
fdivrl
mov
sbb
jmp
aam
pop
xchg
push
mov
mov
shrl
jno
into
or
mov
pushf
loop
cmp
pop
sub
in
push
mov
push
sbb
jb
sbb
jl
dec
xchg
mov
or
dec
sub
mov
out
adc
cmc
jb
or
int
dec
std
sbb
push
mov
push
mov
add
outsb
aas
test
aaa
popf
aaa
insl
int3
mov
xchg
add
add
sub
rcrb
sub
fiaddl
push
jbe
repnz
push
jno
mov
push
pop
mov
repnz
ds
pop
std
cmp
mov
int3
add
fcos
push
and
test
neg
cmpsl
or
mov
xchg
or
mov
mov
cmp
dec
sbb
test
repnz
decl
ds
mov
lock
mov
hlt
jbe
imul
ficompl
dec
clc
pusha
jmp
mov
mov
sbb
js
add
lods
mov
movsl
sti
mov
xchg
outsb
push
repz
push
lock
adc
lcall
fisttps
in
add
push
fidivl
jno
xor
int3
jl
xor
cli
icebp
invd
or
fstpt
push
call
or
lds
sbb
and
cmp
cmp
iret
fs
lahf
sbb
fnstcw
fisubrs
mov
xorb
mov
mov
push
jae
jae
inc
cmovg
sub
pushf
sarb
add
notl
cmpsb
stos
lods
fcompl
pop
or
pop
int
test
clc
mov
cmc
adc
push
add
jo
push
cmp
or
subb
dec
addl
cld
repnz
sarl
cmp
jl
sbb
jmp
into
fwait
aad
adc
push
add
enter
lsl
mov
mov
notb
add
or
mov
stos
dec
arpl
adcb
mov
mov
ja
cmp
nop
pusha
mov
insb
xchg
jo
icebp
push
bound
lahf
insl
in
je
in
mov
test
mov
xor
xlat
pop
lret
and
out
push
dec
data16
outsb
cld
lea
cmc
test
xchg
in
pop
ss
repnz
mov
pop
jecxz
fwait
and
cmpl
and
pop
jg
mov
rcll
xor
cmpsb
xchg
adc
or
mov
dec
cmp
fwait
cwtl
cmpsl
adc
xor
and
mov
inc
addl
pop
cltd
ljmp
mov
add
adc
neg
jae
and
add
push
jmp
push
sub
addl
loop
arpl
ja
js
mov
sub
cmp
clc
mov
cmp
ret
mov
sub
xchg
movsl
repz
xor
test
les
cld
les
adc
or
add
std
push
adc
mov
mov
das
lods
inc
out
int3
xor
inc
in
jecxz
push
lods
add
mov
mov
jmp
lahf
ret
add
enter
pusha
in
cmp
shr
push
inc
push
ret
fs
std
mov
fdivr
inc
inc
shlb
add
pop
into
sbb
xlat
out
cmpsb
leave
xchg
int
hlt
fnstenv
jbe
fiadds
mov
pop
mov
inc
pop
mov
lds
cmp
mov
addr16
in
data16
or
arpl
jns
mov
or
jo
jnp
lds
repz
xchg
shll
sahf
icebp
nop
vpaddd
fidivrl
inc
xchg
subb
iret
out
mov
repnz
adc
mov
or
and
mov
pop
jae,pn
dec
dec
mov
lods
mov
xchg
sahf
fisubs
and
enter
pop
push
cld
and
jnp
mov
das
scas
mov
push
in
mov
jg
sub
push
loope
cmpsl
pushf
sub
repz
aas
sub
arpl
es
fbld
mov
repz
pop
les
xor
aaa
lret
sbb
push
xor
fcompl
jbe,pt
jle
enter
mov
insb
ja
sub
shlb
xor
add
call
sahf
fnstsw
cmp
dec
xor
xor
add
dec
mov
pop
ret
push
jp
xchg
pop
xchg
mov
js
inc
shlb
sub
push
sahf
pop
loopne
mov
or
arpl
cmc
pop
pop
push
jns
fcomi
dec
pop
aas
mov
pop
js
add
add
pop
mov
dec
push
stos
test
jbe
addr16
pop
fldcw
inc
or
lahf
adc
dec
xchg
popa
movsb
lock
sti
push
iret
push
lods
lock
dec
cld
test
pop
push
leave
push
xor
mov
movsl
outsb
or
pushf
ds
adc
shrl
aaa
mov
mov
pop
rcll
sti
sarb
cmp
mov
inc
in
sub
fsubrs
pop
sbb
push
shlb
push
xor
mov
mov
into
add
adc
leave
out
enter
popa
in
mov
in
dec
jp
mov
inc
push
test
adc
hlt
js
fstps
sbb
xlat
xchg
shll
and
out
std
add
lret
jns
ret
fldln2
ljmp
mov
loopne
aam
fistpll
xchg
and
cmc
inc
mov
pushf
pusha
repz
ret
insl
xchg
or
stc
int
jl
pop
push
mov
jns
dec
inc
jmp
mov
dec
mov
inc
push
push
adc
fwait
loop
ds
hlt
mov
add
repz
cmc
cmp
mov
add
jmp
jge
cmp
or
ja
shll
mov
cmp
jbe
stc
std
ljmp
lods
arpl
mov
push
in
pop
ds
stos
mov
jmp
stc
nop
sub
out
push
test
inc
mov
imul
aad
pop
ja
aas
sbb
cmp
pop
jge
int3
frstor
push
jmp
mov
mov
insl
outsl
rol
imul
inc
lods
jb
and
popf
or
cmp
inc
ret
inc
jmp
xor
enter
push
repz
and
mov
test
sub
daa
bswap
jl
in
and
and
addr16
leave
xor
loope
inc
cmc
lock
mov
add
xchg
jle
imul
clc
adc
in
pop
roll
int3
inc
mov
cwtl
aas
sti
cmp
inc
mov
adcl
xlat
xchg
int
or
jnp
stos
xor
dec
loop
fadd
repz
popf
xorl
fimuls
push
dec
dec
fcomps
jmp
movsb
loop
sbb
inc
lea
lods
push
movsb
mov
fistl
call
push
pop
sub
cld
cld
fisttpll
repnz
push
aad
call
and
pushf
lret
jg
test
int3
iret
insl
mov
mov
add
test
lret
pop
dec
imul
mov
adc
rclb
gs
dec
jmp
test
inc
lcall
fsubp
gs
outsb
mov
daa
scas
add
adc
ja
mov
imulb
repnz
pop
pusha
xlat
jne
mov
sbb
lea
lods
int
pop
and
mov
repnz
shrl
adc
jl
sub
mov
jnp
out
aad
jp
or
sub
fistpl
add
inc
stc
push
and
push
and
ljmp
les
adc
cmpsb
out
dec
sbb
mov
jmp
or
jae
psrlq
push
add
fwait
pop
adc
icebp
and
jno
xlat
jl
sbb
add
add
imul
dec
pop
push
mov
fdiv
inc
xor
das
fstpt
vmulps
mov
or
or
scas
fstpl
movsl
ja
and
sbb
add
lcall
shl
inc
orb
lock
jno
xor
push
sub
or
data16
pushf
ds
and
adc
popf
orb
ds
adc
aam
inc
pop
imul
or
out
inc
in
xchg
subb
movb
lahf
fwait
pop
mov
mov
ljmp
leave
test
dec
outsl
add
adc
roll
sbb
mov
push
dec
add
cmc
mov
shrl
mov
dec
or
inc
pushf
subl
subl
shr
inc
and
stos
push
movsb
rcl
and
out
ja
ss
jl
inc
mov
sbb
push
mov
leave
call
mov
ss
jo
xor
gs
and
test
outsl
mov
scas
mov
push
out
mov
xchg
push
test
and
fldl
lret
pop
fiaddl
ror
addr16
cwtl
ret
ret
adc
cmp
inc
jle
xor
mov
mov
sahf
xor
sbbb
in
sub
test
stc
addr16
leave
outsb
scas
jmp
sbb
pop
sbb
xor
insb
add
shl
push
mov
mulb
cmp
xchg
stos
fs
mov
jnp
fidivl
pop
inc
sahf
dec
addr16
pop
pop
and
adc
or
cmp
mov
cwtl
adc
sbb
repz
out
push
inc
xchg
mov
aas
push
pop
sub
outsb
insb
das
pusha
xchg
adc
and
out
clc
inc
xchg
xchg
popf
pop
mov
pop
ret
add
sub
sub
imul
xlat
inc
dec
inc
inc
jae
sbb
and
xchg
sub
repz
sbb
jle
in
out
jo
outsl
fnstsw
sub
idivb
movsb
ss
and
gs
cli
enter
stc
out
stos
xchg
mov
pop
adc
dec
add
pop
xor
xor
mov
mov
jg
add
shlb
mov
inc
mov
fmuls
outsl
scas
mov
lock
and
aas
fisubrs
jbe
into
push
jl
push
gs
pop
mov
outsb
xor
jg
insb
sub
insl
mov
sub
mov
dec
mov
lds
sub
adc
mov
js
pop
or
insl
inc
adc
gs
pusha
ljmp
js
and
add
andb
xsavec
in
jo
cmp
stos
push
mov
add
rolb
cmp
adc
sbb
popa
aam
ja
loope
mov
mov
sbb
mov
and
cmp
cwtl
mov
xor
sub
movsl
or
jmp
lret
out
cmp
push
pop
pop
dec
rcrl
pop
mov
xchg
icebp
test
push
mov
lcall
add
and
out
subb
cmpsl
mov
xlat
mov
fisubl
inc
pushf
mov
xor
cmp
add
rcl
gs
cmc
xor
sti
lods
call
imull
outsb
pop
jbe
or
jg
call
mov
je
sub
xchg
repnz
inc
sbb
aam
cld
lock
dec
std
inc
lret
in
jmp
cs
pop
inc
es
aas
dec
jbe
int
fistpll
add
pop
cwtl
cmp
std
jns,pt
test
adc
xchg
enter
jecxz,pn
inc
mov
inc
mov
xchg
repnz
and
pop
test
mov
pop
mov
cltd
pop
xchg
jbe
sahf
punpckhbw
iret
jbe
push
sti
and
dec
jnp
ror
sbb
imul
imul
movsl
push
ficompl
inc
dec
xor
xor
jbe
jg
insb
fstps
adc
fidivrl
push
cmp
inc
or
test
ljmp
dec
sbb
lods
and
hlt
mov
pop
push
fmuls
leave
lahf
repnz
add
jl
add
mov
add
push
mov
fadd
xchg
pushf
add
cmp
sbb
mov
test
pusha
and
and
mov
adc
mov
sbbb
outsb
lea
xchg
movsb
jecxz
sub
bound
negb
fists
cwtl
push
rolb
push
jno
in
xchg
sarl
inc
pop
xchg
push
jmp
xor
icebp
add
repz
push
mov
xchg
test
pop
cld
mov
mov
js
push
cltd
sub
push
inc
loop
adc
adc
out
movsb
push
mov
jg
int3
rcr
pushf
movsl
insl
xor
jo
imul
adc
iret
mov
and
xchg
push
rol
cmp
mov
fistpl
idivb
or
cmp
js
dec
or
into
mov
lahf
sub
push
movb
pop
push
int
sbb
mov
sbb
and
cs
aaa
mov
into
cmp
xchg
mov
dec
and
mov
mov
push
inc
int3
push
gs
push
inc
fcomps
dec
cmp
cmpsl
xlat
dec
fwait
sub
mov
lds
dec
inc
dec
in
mov
add
add
test
xor
jl
sub
cmpb
les
ret
push
add
cmp
inc
ljmp
mov
ja
das
scas
dec
jecxz
ja
subb
int
fsubs
xor
xor
push
mov
push
mov
xchg
xchg
and
iret
shrb
fmuls
mov
and
cld
push
xchg
ja
icebp
ja
pop
arpl
push
test
enter
mov
imul
and
cs
pop
repz
jmp
jae
sti
and
mov
push
out
mov
jmp
and
pop
or
adc
aad
movsl
pushl
pushf
inc
or
cmp
in
into
cltd
mov
jle
pop
idivl
in
movsb
sbb
ret
cli
icebp
andl
jecxz
mov
outsb
or
push
repnz
adc
cmp
scas
inc
jnp
push
push
sbb
in
gs
sub
jne
mov
mov
push
push
adc
and
shlb
les
sub
popf
addr16
test
outsb
mov
int3
js
sub
mov
sub
icebp
ret
push
sub
push
in
sbb
sub
out
insl
mov
lods
dec
outsl
cmp
outsl
xor
adc
pop
inc
fldl
jns
ss
icebp
xchg
ret
pop
mov
jmp
fs
lea
jge
js
adc
push
hlt
jmp
xchg
movsb
cmp
scas
and
pusha
cmpsl
sbb
xor
stos
in
ljmp
pop
mov
out
insl
fnsave
negl
inc
lods
dec
ret
jl
fmuls
inc
sti
fists
xor
mov
xchg
clc
pop
mov
mov
push
int3
dec
jae
pusha
movsb
ret
loopne
mov
and
inc
fs
enter
jno
jns
aaa
std
mov
xlat
mov
sbb
dec
or
repnz
scas
in
adc
in
in
ret
push
push
lea
add
jno
jne
icebp
test
mov
fdivp
iret
popa
xor
adc
das
mov
inc
mov
push
nop
out
and
sbb
mov
inc
sbb
push
and
ret
and
xor
or
cmp
mov
xchg
popw
pop
fs
push
div
fwait
jb
or
adc
fbld
xor
imul
mov
in
mov
loop
and
insl
push
jns
cmp
mov
ret
xchg
movsb
aam
adc
test
xor
arpl
mov
cmpb
mov
data16
sbb
cmp
nop
in
out
sbbb
xchg
lea
sbb
mov
cmp
sti
pusha
mov
aam
pop
sbb
pusha
or
or
add
imul
mov
cmpsb
mov
pop
mov
jp
xchg
add
popf
jecxz
pop
push
enter
and
stc
dec
shrl
mov
cmp
cltd
and
outsl
xor
scas
rcrl
dec
lea
xor
movsl
lcall
jae
mov
les
inc
push
aaa
jl
xor
das
push
test
add
jo
cmp
inc
jl
jo
psubusw
pop
imul
dec
pop
push
sbb
jl
dec
sub
iret
rcr
bound
adc
push
add
dec
mov
je
adcl
pop
and
mov
shll
scas
ja
ret
popl
test
gs
mov
push
pop
or
outsl
jge
pushf
cmc
mov
dec
out
cmpsl
fistpll
push
mov
cmpsb
push
addr16
insb
sub
stos
sbb
mov
cmp
in
or
jg
xchg
aad
mov
cltd
adc
test
sub
ss
mov
outsl
sub
or
hlt
icebp
and
jl
mov
sub
pop
push
push
or
pop
fnstenv
or
enter
lock
sbbl
sbb
fldcw
iret
pop
sbb
inc
test
inc
mov
jnp
fdivrl
leave
dec
mov
movsb
push
cwtl
addb
jecxz
movsl
pop
xchg
insl
mov
mov
out
mov
dec
adc
dec
jp
xchg
rol
sarl
xlat
ds
pusha
out
outsb
adc
call
ds
movsl
pop
jnp
xor
les
xchg
fidivl
sbb
adc
movsb
adcl
in
negb
xor
mov
shlb
test
cmpsl
mov
push
clc
mov
out
pop
test
or
lret
pop
nop
push
or
cld
and
sbb
xor
add
lret
push
dec
enter
test
jecxz
pop
push
xor
cmp
jge
imul
in
and
adc
and
mov
call
and
adc
mov
adc
inc
sub
xchg
fbstp
push
sbb
cmp
mov
out
bound
and
or
cmpl
cmp
rol
test
test
cmpb
dec
mov
push
sti
xor
cmpsl
stc
fucom
or
jne
stos
push
sub
xchg
fimuls
sub
cmpsb
add
adc
loope
push
insb
inc
sahf
lea
xchg
mov
inc
mov
mov
adc
repz
cmp
or
inc
cmp
inc
inc
sti
nopl
and
jp
aas
fcmovnbe
pop
bound
jle
popl
fdivrp
jecxz
push
adc
addr16
mov
inc
jbe
ds
sarl
leave
fdivl
daa
adc
out
rorb
mov
fistpl
push
pop
rorb
sub
lds
aaa
lods
dec
mov
popa
in
jg
mov
jp
aam
xor
out
jne
lods
mov
jae
std
hlt
push
jae
inc
lcall
hlt
gs
je
sub
mov
or
and
js
inc
dec
lods
pop
mov
push
sbb
pop
and
dec
jns
push
mov
inc
dec
adcl
fidivrs
insl
testl
fildl
test
jmp
mov
xchg
push
test
std
fcoml
mov
cmpsb
mov
je
outsl
repnz
data16
push
or
pop
push
repnz
mov
rorl
mov
fisttpll
mov
sahf
adc
outsl
test
pop
pusha
fisubl
fdiv
sub
outsb
enter
jbe,pt
jb
insb
mov
dec
iret
and
stos
popa
add
push
cmp
mov
inc
testb
test
or
xchg
out
mov
cmp
test
lea
dec
popa
cld
inc
mov
repz
jo
cmp
stos
sahf
push
cmpl
push
mov
fs
enter
imul
mov
enter
sbb
sub
and
fstpl
and
mov
mov
sub
cmp
jae
push
pusha
lock
lock
jne
push
loop
pusha
and
fimull
sub
pop
mov
inc
out
arpl
je
fs
and
add
or
mov
or
ret
dec
aad
sbb
dec
cltd
pop
jbe
cmp
or
sbb
lahf
cmp
hlt
rolb
cmpb
roll
pop
je
or
lret
fldenv
into
shll
pop
mov
push
and
inc
push
mov
push
mov
mov
aam
mov
cmp
insl
jle
jl
jo
push
ret
fwait
inc
ret
popf
lcall
mov
mov
and
mov
mov
repz
xchg
cmp
fistpl
push
xor
sbb
cmpsb
dec
xor
mov
and
stos
mov
fistpll
mov
sbb
iret
push
shlb
push
dec
mov
ret
rcll
mov
iret
pop
outsb
pop
aas
push
and
outsl
lds
enter
xchg
sub
inc
stos
inc
push
call
cmp
fists
mov
out
mov
or
movb
lds
arpl
or
mov
xchg
add
aaa
in
daa
repz
push
pushl
cld
jmp
cmpsb
ds
stc
inc
cmc
dec
inc
cld
mov
add
push
std
inc
add
ja
jno
int3
lret
das
mov
jg
mov
sub
andb
aas
and
mov
cmc
inc
lahf
inc
adc
movsb
aaa
insl
mov
cmp
andl
push
jg
test
ljmp
push
fbld
lahf
ds
int
lock
xchg
or
lea
jbe
mov
cld
sub
es
or
dec
mov
js
sub
lret
cmp
mov
dec
push
jge
rol
fmull
pop
hlt
adc
fidivs
or
mov
ljmp
int
ds
lret
push
xor
jp
pop
repnz
sti
push
and
out
mov
imul
xorb
pop
inc
adc
mov
lds
jle
xchg
scas
das
or
pushf
fisubrl
xlat
fsubl
rcrb
xorl
lcall
mov
xchg
push
pop
insl
loope
cmp
lahf
jno
sub
dec
orb
xlat
popa
roll
add
shlb
loope
mov
std
fwait
daa
fsubl
lods
inc
lret
cmp
jg
aam
orl
push
push
lock
popa
scas
add
lahf
push
insb
mov
xchg
hlt
hlt
adc
lea
jl
cmp
jo
mov
pop
fistps
pop
dec
out
std
mov
divb
mov
lret
cmp
clc
jbe
lock
dec
sbb
sub
in
sbb
movsb
cmpsl
push
add
xchg
es
subl
xchg
sub
cmpsl
stc
mov
addr16
adc
cmp
in
sub
clc
inc
lea
cmpsb
add
movsb
dec
sti
leave
cs
sub
mov
aaa
sub
outsb
adc
sti
jg
mov
loopne
mov
in
xor
xchg
push
pushw
loope
lock
mov
cli
loop
mov
aaa
in
inc
gs
dec
call
imul
sbbl
jl
dec
inc
idiv
jnp
sbb
jno
or
lcall
mov
or
push
jbe
test
mov
popf
nop
xlat
fwait
stos
fildll
stc
rcrl
sub
dec
jecxz
push
fcomps
in
ljmp
loope
mov
arpl
mov
jb
out
fisttps
stc
sub
xchg
je
das
jp
mov
outsb
cmp
arpl
in
int3
sbb
sbb
cli
subl
sbb
xor
xlat
mov
or
cmp
fisubrs
and
fwait
adc
xor
jbe
int
sbb
inc
cmp
cmpl
xor
mov
add
mov
scas
push
xor
mov
xchg
or
ret
outsl
ret
adc
sbb
cld
sub
ret
fdivrp
mov
imul
inc
shr
shrl
inc
jo
gs
pop
stos
pop
xchg
flds
stc
cmp
jg
dec
ljmp
movhps
mov
mov
mov
or
mov
imul
inc
rcr
clc
fs
not
sub
mov
rolb
and
jle,pt
jno
cmp
jne
xor
fwait
adc
pop
inc
sub
mov
das
shrl
fwait
push
aaa
sarw
repnz
push
dec
and
ss
cltd
mov
push
xchg
mov
in
lcall
add
add
lahf
test
iret
jmp
sub
leave
add
dec
cltd
pusha
xchg
jp
adc
mov
sbb
out
mov
pop
stc
mov
aam
cmp
pop
call
test
push
or
mov
stc
aas
fs
sbb
cwtl
and
cltd
cmpsl
mov
push
sbb
jp,pn
aaa
iret
adc
imul
mov
shlb
xor
in
hlt
jge
mov
popa
pop
insb
jmp
into
sub
sub
sub
in
js
push
leave
divb
sub
dec
insb
and
popa
xchg
icebp
inc
xchg
loop
push
push
xchg
push
test
jmp
ljmp
mov
jbe
iret
je,pn
ljmp
xchg
mov
mov
push
mov
and
loope
xchg
lods
jae
loopne
cmp
xor
jne
out
xchg
testb
jge
fidivrl
sub
jmp
roll
jp
insl
inc
adc
jbe
lods
dec
cmp
inc
and
adc
cmp
or
mov
mov
xor
push
sti
out
addr16
sti
das
pop
loop
dec
mov
add
mov
inc
pop
pop
subl
xchg
inc
adc
xlat
jmp
mov
pop
lcall
pop
pusha
push
aas
out
adc
add
shll
or
into
pop
insb
add
popa
mov
insl
jb
arpl
jmp
push
movsl
pop
xor
lock
imul
ss
xchg
xor
mov
sub
scas
adc
lock
xchg
mov
push
or
adcl
les
aas
mov
xchg
fmuls
xchg
out
test
push
mov
lds
push
cmp
mov
dec
mov
mov
push
testl
push
repnz
add
sahf
inc
jl
push
dec
mov
lcall
mov
mov
out
fcomp
adc
push
or
and
inc
and
push
cmp
sub
into
sbb
cmc
sbb
adc
rorb
sub
test
ljmp
adc
aas
bound
notb
mov
jo
addb
cmp
jl
jnp
jns
adcl
repnz
stos
mov
inc
scas
lret
movsb
push
add
xor
mov
mov
mov
scas
xor
jbe
sub
push
stos
rcl
cwtl
adc
xchg
fwait
sub
inc
stos
jbe
test
xchg
xor
test
xchg
hlt
inc
lock
jbe
and
jg
pop
loope
sbb
out
ss
out
pop
gs
test
sbb
lods
push
xchg
dec
cmpsl
cmp
loop
ret
pminub
shr
ljmp
jo
xchg
xchg
inc
sub
xchg
lods
jnp
insl
imul
inc
les
mov
icebp
cmp
test
mov
ret
rcl
cmp
mov
xchg
ja
xchg
in
ret
mov
adc
dec
jbe
out
nop
ret
sbb
lahf
or
pop
std
pop
rorl
push
pop
aaa
dec
jno
mov
out
test
pop
dec
mov
and
mov
enter
push
or
in
mov
pop
sub
or
js
das
ficomps
inc
inc
movsl
mov
push
dec
push
mov
lods
outsl
in
shr
cmp
les
in
sub
dec
mov
sbb
adc
lret
xchg
push
lcall
cmpl
test
mov
xchg
pop
xor
dec
mov
aaa
subb
ret
mov
test
mov
bound
lods
mov
mov
gs
in
ret
mov
adc
in
push
je
or
mov
jns
or
cmpsb
stc
pop
ja
enter
fdivrl
sbb
std
jb
pop
sbb
mov
cmp
and
ret
add
and
loop
or
xor
push
jle
imul
ret
cmpsl
les
push
mov
jmp
dec
int3
sbb
je
fiadds
adc
clts
sub
push
xchg
lods
push
jae
or
xchg
bnd
clc
fnsave
loope
jns
dec
btc
repnz
push
mov
cmc
xlat
and
int3
jbe
sahf
jecxz
mov
fadd
inc
test
std
test
push
fdiv
mov
sbb
lcall
cmp
enter
adcb
lods
pop
xchg
xor
mov
jle
jl
mov
xor
mov
ret
push
aam
ficompl
pushf
rol
jmp
pop
mov
sub
inc
xlat
jecxz
loope
cmp
mov
pop
sub
push
stos
mov
leave
sar
jmp
mov
mov
mov
push
xchg
jle
cwtl
mov
mov
mov
xchg
inc
les
push
mov
lds
in
in
enter
repnz
push
mov
scas
inc
sbb
sbb
jne
jb
mov
add
adc
mov
repz
xor
push
leave
lds
add
xchg
push
push
push
test
mov
and
jno
loopne
cmp
cwtl
pop
lret
sbb
sarl
popa
fidivrs
xorb
mov
mov
mov
in
push
mov
dec
enter
sub
leave
das
scas
jno
cmp
nop
adc
aad
or
sti
imul
fstl
sarl
test
jns
xchg
fsts
in
ret
rcr
xor
int3
push
rolb
scas
and
inc
jno
rcr
mov
and
push
jo
adc
pop
out
ljmp
int3
add
leave
push
out
jo
and
dec
xchg
inc
cmp
or
pop
sub
push
or
mov
and
add
and
nop
xor
push
lds
divb
insb
popa
gs
ret
iret
sbb
insl
mov
add
adc
test
popf
inc
push
xchg
fbld
rclb
mov
arpl
pop
jae
loope
jl
imulb
stos
xchg
jecxz
stc
sti
ret
dec
cld
loopew
xchg
dec
jecxz
jne
lret
sub
mov
jns
sbbb
xchg
orl
add
or
mov
dec
jne
cmp
outsl
data16
cs
mov
sbb
jns
inc
jecxz
adc
shrl
xlat
outsb
mov
inc
mov
adc
fisubrs
dec
or
dec
out
push
mov
pop
mov
lret
das
stos
mov
pop
ds
jg
jl
mov
std
fsubr
mov
jbe
repnz
cli
pop
mov
mov
sbb
nop
xor
and
mov
pop
mov
cltd
cmp
sbb
pop
cmpb
dec
in
std
es
push
push
mov
pop
test
dec
pop
adc
mov
inc
outsb
loop
std
sub
out
mov
pop
and
push
cmp
stc
mov
jge
lods
rcl
jno
adcb
sub
mov
mov
fwait
in
iret
imull
add
inc
cmpsl
fidivrl
sti
shlb
dec
mov
loopne
inc
add
imul
push
cltd
inc
stc
adc
mov
roll
cmpb
jge
sub
fwait
hlt
mov
fildll
mov
lea
and
xor
push
adcb
mov
push
cli
mov
add
loopne
gs
push
adc
aas
inc
shrl
jge
push
lahf
je
nop
scas
repz
xchg
ja
xchg
cmp
jle
out
into
sbb
push
mov
lahf
outsb
dec
xchg
inc
jp
or
mov
pop
es
jle
xchg
cmp
pushl
fwait
roll
push
xor
adc
arpl
fsubrp
js
leave
std
aad
stos
rcrb
ficoms
stos
lds
push
mov
mov
sbb
daa
je
or
scas
mov
pop
inc
dec
bound
mull
cmp
adc
add
jge
cmc
lods
jp
outsb
mov
pusha
push
stc
aaa
fmul
xchg
shlb
push
cmpsl
shlb
mov
aas
movl
inc
jge
jne
mov
iret
lods
and
mov
xor
test
cmp
add
std
add
sub
cmpsb
in
aam
pop
adc
and
xor
add
stc
and
mov
std
out
jmp
xchg
mov
cli
xchg
jae
or
ljmp
outsl
mov
aaa
sub
mov
lock
rcrl
rcll
rorl
add
cmp
pusha
fimull
rcrl
inc
sub
sub
clc
rcl
lock
mov
shlb
mov
bound
ret
sub
jns
popa
pop
dec
stos
sbb
jmp
mov
pop
notb
cltd
aas
ret
pop
sub
sbb
lock
ljmp
ret
add
fdivl
clc
dec
and
or
popa
add
repz
call
in
jb
inc
mov
or
jl
scas
inc
mov
xchg
stos
fcompl
dec
add
sub
in
filds
mov
xchg
cmp
rolb
add
lret
inc
test
ds
xor
js
cli
daa
scas
cmp
xor
arpl
sub
and
push
lods
movsb
jo
xchg
stos
imul
inc
shrb
stos
cmpsb
icebp
vmovaps
les
or
cmp
pusha
jns
ss
adc
and
push
add
inc
frstor
sbbb
ret
fcomps
push
jmp
fdivp
rcrb
push
xchg
rolb
js
test
ljmp
mov
fwait
and
les
fstp
test
scas
scas
cltd
test
hlt
jmp
dec
or
lea
ljmp
out
inc
sub
lock
das
flds
sub
cli
adc
sar
sbb
pop
xchg
add
and
jecxz
sahf
fisttps
lahf
mov
mov
pop
push
cmp
outsl
sub
sti
loopne
adc
aas
inc
iret
lret
add
jno
loope
xchg
outsl
inc
pusha
jno
enter
jg
mov
mov
decb
xchg
inc
xor
pop
pusha
movsl
into
inc
aas
xor
sub
insb
test
insl
dec
fdivr
sub
fmulp
dec
imul
mov
nop
inc
lea
and
in
sahf
pop
pop
adc
dec
and
in
pop
lret
mov
scas
es
idivl
sbbb
pop
xorl
test
cmp
orb
jae
pop
rcr
stc
add
int
sub
stos
clc
cmp
js
dec
xlat
push
cmp
outsb
push
ret
call
mov
lahf
adc
pop
cmpsl
mov
pop
insl
outsb
popf
dec
mov
outsl
push
fcmove
sub
pop
jmp
or
in
test
sbb
daa
rorl
adc
ret
stc
in
pop
mov
cmp
lahf
ds
lock
lds
into
jbe
push
das
std
sbb
lock
add
sti
addr16
ret
inc
mov
ficompl
adcl
jb
and
out
mov
xchg
xchg
xor
and
insl
xor
movsb
lods
dec
and
dec
jle
in
or
fucomip
xchg
loopne
cld
sbb
fisubrl
lock
or
mov
bound
mov
leave
iret
dec
jns
iret
push
mov
sbb
or
imul
push
cmp
data16
dec
lret
mov
xlat
xchg
xor
xchg
push
dec
sub
inc
sub
subb
push
inc
dec
xor
ficoml
push
jl
test
cli
popf
sub
sub
popa
fcmovbe
dec
add
push
movsl
mov
fcmovnbe
dec
dec
inc
in
les
je
mov
and
mov
lds
and
dec
mov
fsubs
push
jmp
clc
inc
dec
mov
movsb
pop
adc
lret
sub
sti
xor
iret
xor
mov
cmpb
imul
outsl
lods
xor
xchg
sarb
jp
sbb
lret
stos
icebp
push
lds
adc
jne
movsl
dec
push
jb
pop
adc
mov
add
inc
sub
iret
lcall
out
ficoml
and
cmp
leave
add
xchg
mov
addr16
cmp
enter
clc
ss
mov
or
jo
mov
fwait
xor
mov
fmull
push
cmc
mov
addr16
xchg
jns
clc
subb
jle
mov
sub
movsl
aad
cmp
fildll
cmp
loope
or
fwait
into
rcl
into
bound
adc
inc
fsubrl
mov
aad
mov
jmp
sub
pushf
andb
add
inc
mov
inc
test
lret
andl
sbb
bound
xor
pop
out
repz
mov
leave
add
pusha
push
and
xor
outsb
adc
shlb
jo
xor
data16
das
dec
xchg
ret
jnp
dec
cmpsl
andl
xchg
pop
lea
nop
test
push
sub
nop
test
or
insl
and
shrl
xchg
pop
xchg
or
jbe
jno
mov
pop
pop
push
or
mov
inc
les
hlt
shrl
clc
inc
ret
pop
int3
pop
add
cmp
jge
mov
cwtl
cmp
stos
xor
jmp
cmp
mov
lret
scas
vmulpd
mov
incl
and
cmp
inc
hlt
arpl
in
movsl
adc
pop
test
out
inc
inc
popf
inc
mov
ret
scas
xchg
ja
and
pop
in
xchg
scas
das
mov
and
ffree
adc
dec
lret
xlat
add
jb
ret
stos
mov
mov
mov
adc
sbb
mov
cmp
sarb
fistps
add
add
popa
inc
subb
pop
mov
mov
push
mov
mov
mov
stos
lret
repz
int3
sub
inc
sbb
iret
je
fs
mov
or
jecxz
mov
test
inc
decl
xchg
in
xchg
shr
and
mov
mov
lret
mov
aam
lods
push
dec
stc
push
adc
sti
stc
scas
lcall
lea
pop
cmp
push
sub
pop
jmp
shll
mov
pop
dec
int
movsl
sub
or
clc
sbb
flds
iret
or
mov
dec
push
xor
pop
jg
pop
das
mov
aas
dec
jb
sbb
sub
fs
fs
leave
jnp,pt
add
dec
lock
push
loop
cmp
mov
lock
xchg
pop
push
ret
int3
xor
xchg
testb
xchg
fisubrl
hlt
push
lcall
out
xchg
stos
fsub
fisubs
mov
pop
das
outsl
shll
movsl
add
jo
test
cmpsl
pop
popa
cli
xchg
call
mov
push
xchg
sbb
scas
sbb
lods
das
cmp
cmpsl
in
pop
loope
loop
inc
sti
mov
rcll
and
jb
pushl
mov
xor
jnp
les
dec
push
xchg
cmpsb
dec
and
or
out
sub
jg
and
cmp
or
jnp
ret
xchg
or
sub
js
in
js,pn
pop
sarb
lods
leave
and
dec
test
cli
rcrb
or
pop
pop
mov
idiv
sbb
pop
lods
ficoms
sbb
xchg
test
sub
adc
push
xchg
or
imul
aaa
sahf
push
data16
imul
jp
cmp
test
stc
jns
mov
cmpsb
push
aas
mov
inc
mov
daa
and
mov
cmc
rolb
mov
cwtl
ja
add
inc
push
outsl
xchg
cmp
sub
jns
mov
mov
cs
lock
daa
icebp
cmpl
lea
push
add
push
addr16
pop
lds
push
imul
xor
stos
mov
sub
dec
sbb
cmpsl
mov
dec
add
inc
inc
sbb
pop
test
outsb
cmp
div
add
dec
pause
pop
cmp
ss
ret
adc
fmuls
mov
inc
push
cmc
fwait
push
mov
add
lods
aaa
xchg
mov
mov
jmp
pop
icebp
cmp
in
jbe
mov
stos
and
loope
icebp
roll
dec
fisttps
fwait
pop
lcall
jl
addr16
dec
daa
add
pusha
push
test
rclb
pop
rcl
push
dec
pop
jge
sub
leave
fwait
push
pop
push
sub
xor
ret
insb
and
xorl
add
push
jmp
pop
push
ret
sti
test
fimuls
icebp
jnp
cltd
pop
jo
loope
into
lds
pop
test
dec
or
mov
mov
daa
cli
mov
ja
shlb
add
imul
aaa
push
and
pusha
out
cld
lock
hlt
andb
or
or
xlat
sbb
jb
mov
fstps
pusha
cwtl
loopne
pshufw
aaa
nop
imull
loopne
jge
bound
sti
xor
divl
adc
mov
les
das
and
add
test
fnstsw
xor
lds
lahf
subl
nop
cmpsb
dec
popf
sahf
dec
insl
cld
inc
dec
xchg
in
cmp
pop
or
jg
pop
movsb
cmp
out
sbbb
fidivl
pop
jg
cltd
or
dec
xchg
rolb
push
xor
mov
loop
pop
cs
call
push
clc
rorl
and
aam
mov
test
cmp
cwtl
push
ror
dec
lret
fstps
dec
push
dec
jg
push
jle
pop
stc
repnz
mov
fidivs
les
cwtl
pop
stos
dec
cmp
pop
outsl
cmp
sub
outsb
pop
mov
mov
mov
aaa
repnz
inc
mov
xchg
xor
out
xchg
and
pop
mov
mov
sbb
stc
mov
jno
mov
loop
xorl
hlt
dec
scas
dec
daa
ljmp
lds
jmp
mov
movsl
call
dec
xor
and
pushf
out
dec
inc
or
in
mov
xorb
mov
fcmovu
mov
mov
push
lret
push
push
out
cmp
add
and
adc
push
pop
and
push
scas
divl
add
test
testb
subl
mov
sti
add
xchg
xor
mov
leave
pop
dec
repnz
ss
mov
adc
in
and
pop
std
stos
rcrb
mov
rcl
nop
mov
cwtl
dec
arpl
xorb
mov
jo
mov
mov
clc
arpl
fmulp
out
sub
xor
sub
mov
ret
sub
cs
scas
cmpsl
add
pop
shrb
dec
adc
into
repz
sub
mov
mov
push
pop
and
shll
fwait
xchg
in
ljmp
xchg
add
emms
inc
cmp
adc
les
enter
jl
sub
ljmp
jne
pusha
xchg
scas
adc
orl
inc
push
nop
cmp
or
es
test
pushf
inc
jae
xchg
cmpsl
cmp
je
sub
sbb
xchg
clc
adc
cmp
inc
mov
andb
lret
mov
and
inc
xchg
xchg
xor
fstl
arpl
lahf
mov
cmp
nop
cmp
sub
cltd
shlb
or
loopne
outsb
mov
push
inc
out
sbb
iret
fmuls
add
data16
pop
jae
fnstsw
mov
cmpsl
pop
jb
dec
push
out
ja
jne
sbb
xor
mov
add
in
cmc
out
xor
xorl
shrl
movsl
xor
fldt
shld
cmpsb
negb
push
sbb
or
in
dec
scas
in
cmp
fdivs
mov
xchg
fistl
shl
pop
je
stos
outsl
push
aam
inc
lods
stos
pop
clc
adc
mov
mov
jmp
push
std
sub
inc
jb
aad
jg
xchg
jmp
fs
call
and
jno
cmp
loop
jg
sahf
or
xchg
rcll
dec
pusha
aaa
adcb
inc
call
xchg
cmp
out
cs
and
aas
sbb
lret
push
xor
adc
and
movsb
sbb
das
jnp
jbe
ljmp
mov
inc
sbb
loop
dec
xlat
jno
call
cmp
fdivrs
je
push
jg
fstpt
int
fldl
cmpsl
and
sub
sbb
xor
es
loopne
mov
jo
lock
cmpsl
ds
sbb
pop
imul
cmp
pop
dec
popf
std
cmp
jg
sub
dec
sub
jbe
mov
pop
ljmp
fwait
out
add
repz
clc
jmp
andb
shlb
push
cmpsb
jnp
mov
push
stos
lods
into
test
push
sub
iret
mov
js
je
mov
pop
iret
int3
pop
std
fdivrl
mov
ret
jge
xor
sbb
dec
sub
je
clc
xlat
jmp
inc
testb
das
sbb
inc
mov
cmp
mov
iret
pop
arpl
pop
jno
ret
adc
jp
adc
sub
add
push
into
cs
or
nop
inc
bound
adcl
gs
and
std
loopne
cmpsl
scas
cmp
repz
stc
or
stc
aas
jnp
xlat
and
mov
mov
insl
lods
cmp
push
decl
fidivl
clc
pushf
mov
test
insb
bound
in
loop
fstl
xor
cld
cltd
js
lahf
das
arpl
mov
inc
clc
out
out
add
pop
xor
pop
inc
mov
xchg
mov
and
add
mov
mov
jne
mov
cld
and
dec
jmp
js
adc
or
lea
dec
imul
dec
sahf
dec
mov
mov
stos
into
lock
lahf
int
addr16
mov
xor
cmp
loop
lahf
stos
insb
int
popf
jge
mov
mov
out
out
mov
lock
stos
mov
mov
add
inc
enter
pop
jmp
dec
rcl
mov
addr16
cwtl
movsl
mov
insl
mov
mov
inc
in
xchg
icebp
fs
cmp
into
in
shll
je
xor
adc
adc
jbe
pop
imul
rolb
sbb
sbb
push
flds
jle
mov
adc
mov
jae
test
cmc
or
int
push
bound
push
inc
sbb
or
lcall
mov
inc
notw
rcr
jmp
aam
pop
dec
out
fmuls
push
xchg
insl
movsl
test
add
xchg
mov
mov
sbb
mov
add
xchg
xchg
adc
mov
cmovno
outsb
call
stc
sti
mov
outsb
les
push
aas
xchg
sbb
dec
mov
out
je
pushf
cmp
dec
sti
lods
mov
repz
jno
rolb
mov
jb
das
adc
jnp
shrl
jecxz
out
ror
xchg
in
push
jl
loop
adc
fcmovbe
inc
test
test
mov
cmpsl
dec
lods
inc
cmp
xchg
sbb
push
dec
mov
mov
pop
pop
xor
sbb
add
mov
pop
addb
cvtdq2ps
or
jl
sub
and
pop
rorb
fisttps
std
movsb
xlat
cmp
and
dec
xchg
sti
outsl
out
ja
push
sbb
out
push
lods
xchg
push
jge
std
out
fisubrs
push
mov
in
push
mov
cs
cmc
and
mov
daa
dec
and
shl
lods
adc
mov
and
shl
loopne
data16
into
inc
fdivr
jne
ds
jo
movb
inc
push
mov
jno
cmpsb
popf
cmp
ja
lds
or
xchg
mov
out
adc
cwtl
mov
fsubrl
out
adc
push
sbb
pop
dec
test
xchg
scas
das
and
test
push
sub
sbb
cmc
cmp
mov
nop
inc
xchg
mov
and
data16
cmpsl
dec
jecxz
and
pop
inc
loope
sti
sti
sub
xor
outsb
testb
test
repz
jg
mov
lock
ret
and
imul
xchg
mov
or
leave
fisttps
ljmp
ja
cmp
popa
jge
xchg
jns
mov
jae
adc
mov
int3
push
sbb
push
ret
rcrl
jle
pushf
xor
lret
pop
lods
popf
mov
mov
sbb
mov
pop
fs
add
push
xchg
out
outsl
cmpsl
stos
xchg
push
hlt
dec
add
add
jb
cmp
lahf
adc
movsb
xor
xchg
ljmp
adc
push
in
mov
inc
jno
sbb
ret
pop
sub
dec
jno
leave
adc
loopne
aad
inc
outsl
pop
fcomps
mov
enter
dec
pop
popf
jnp
and
ja
insb
cmpb
cltd
sub
mov
dec
insl
scas
mov
push
pop
add
ds
or
ficoms
inc
jp
nop
jae
jb
mov
shlb
mov
in
jp
cli
inc
sub
xor
movsb
add
mov
arpl
fldcw
pop
sub
sub
and
test
cmpsl
push
pusha
inc
outsl
in
es
arpl
sti
movsl
fcmovbe
mov
xorb
loopne
flds
or
movsl
out
lahf
sub
mov
mov
cmpsl
stc
popa
jno
out
or
sub
pop
mov
mov
xchg
push
jb
sbb
push
add
addr16
repnz
lcall
dec
mov
arpl
into
shr
in
out
out
sbb
sub
pop
cwtl
lahf
mov
sub
and
cmp
xchg
les
aaa
std
sahf
ret
rclb
loope
mov
leave
jne
shll
mov
pop
out
rcr
ret
jg
push
mov
mull
jle
test
and
test
adc
outsb
into
lret
inc
mov
sub
movsb
mov
cmp
shlb
popl
mov
in
rorb
sub
and
dec
lods
push
mov
lock
inc
dec
fisttps
outsb
pop
aad
shlb
imul
and
mov
or
imulb
rcrl
ds
test
clc
imul
mov
pop
faddp
hlt
or
mov
ja
fidivs
pop
pusha
cmp
push
cli
imul
and
xlat
sub
notl
lret
mov
xchg
popa
cmpb
mov
adc
mov
lods
std
jle
adc
mov
jae
mov
test
or
ret
dec
loopne
mov
daa
stos
addb
ret
sahf
xor
pop
test
das
insl
cmp
xchg
dec
outsl
xor
repz
aaa
mov
loope
sbb
mov
sbb
or
shlb
xchg
pop
xchg
loopne
scas
xchg
sbb
cmp
sub
inc
insb
xchg
inc
dec
scas
xchg
mov
nop
cwtl
movsl
shrb
addl
loopne
lea
mov
sahf
sbb
icebp
in
shrb
add
in
pushf
lret
push
or
add
dec
lahf
push
xor
xor
popa
mov
in
push
xchg
sahf
pop
cmp
je
das
insb
lcall
push
jp
loopne
adcl
jbe
les
pop
xchg
lods
pop
pushf
in
sub
in
loop
adc
push
lahf
mov
test
jecxz
sub
stos
mov
cmp
std
pop
mull
frstor
lret
aas
rorb
add
ds
mov
jge
scas
rolb
push
hlt
add
les
movsb
rorb
lahf
jnp
repnz
es
lock
xor
popf
push
pop
jne
out
push
stos
mov
cmp
outsl
and
popf
shrl
fdivl
adc
push
adc
push
lret
addr16
mov
mov
insb
push
cli
jecxz
add
inc
shl
mov
xchg
fstps
out
add
test
jbe
rolb
cld
scas
or
popa
ljmp
call
arpl
pop
loope
jp
inc
fidivrl
mov
mov
xor
lock
xchg
xor
mov
sub
sbbb
lret
add
stos
enter
mulb
cmpsb
lods
adc
into
insl
adc
mov
in
cmp
jo
sub
push
add
add
lret
cs
mov
xchg
jle
dec
mov
data16
mov
cs
jmp
mov
fstps
and
xchg
dec
out
mov
ja
dec
aaa
pop
mov
fcoml
inc
xor
pop
stos
adc
dec
jns
mov
xlat
and
mov
mov
aas
push
dec
into
js
rcrb
enter
adc
notb
pop
xor
loopne
fimull
push
mov
fstpt
pop
mov
xchg
in
sbb
fucomp
adc
dec
sub
aas
dec
les
cltd
lret
outsb
pushf
in
and
in
cmp
adcl
dec
mov
jl
or
loop
cmpsb
inc
ret
fmull
mov
xchg
jl
pop
clc
pushf
fs
loopne
dec
pop
mov
pop
inc
orb
xor
jne
cmp
mov
xchg
insl
js
mov
inc
cmp
and
sub
lock
xor
mov
ljmp
mov
fcomps
stc
std
inc
aaa
jo
mov
and
jmp
xchg
sub
adc
lds
outsb
mov
push
mov
pop
ja
sub
sbb
les
mov
xor
andb
push
pop
arpl
fcoml
dec
dec
add
pmulhw
fs
sbb
stc
repz
push
or
cld
adc
adc
xlat
ljmp
int
mov
jl
jmp
mov
sbbl
sub
mulb
mov
add
ljmp
ja
xlat
testl
push
mov
lret
idivb
loope
bound
xchg
out
pop
push
icebp
lcall
jecxz
jb
outsb
mov
lods
mov
testl
mov
fucompp
adc
cmp
cs
push
nop
add
in
cmpsl
or
mov
jmp
inc
sti
test
push
clc
loop
scas
movsb
mov
push
cs
fstps
rcrb
adc
sbb
pop
and
nop
mov
dec
bound
sbb
fbld
push
ljmp
or
outsl
xorb
mov
cmp
in
xchg
push
lods
test
lcall
sbb
mov
sub
scas
stos
sahf
lcall
xchg
and
fdivr
out
stos
dec
sbb
fildl
pop
pop
cmp
ss
jo
insl
addb
dec
insl
jo
dec
stos
pop
in
or
cltd
ja
scas
lcall
test
push
jmp
sahf
loop
dec
mov
mov
push
or
jmp
aam
icebp
sub
pop
stos
scas
jnp
push
std
daa
mov
xor
xor
push
pushf
mov
pop
mov
mov
loopne
mov
push
and
push
sub
and
fdivrl
pop
sub
adc
sub
ret
xlat
dec
setnp
or
push
pop
movsb
pop
sti
lods
aad
scas
ds
add
push
push
stc
movsl
call
bound
mov
scas
add
test
outsl
fnstenv
sbb
xor
stc
add
sub
call
push
mov
andl
arpl
xchg
les
inc
ret
sbb
add
in
mov
mov
sahf
jmp
flds
mov
cmpsb
dec
xor
cwtl
pop
push
pop
cmpsb
sub
and
mov
les
fldenv
mov
lahf
jge
and
jg
shlb
aaa
mov
and
ja
arpl
jnp
jmp
aaa
rclb
mov
mov
mov
jno
or
inc
dec
push
rorb
mov
pop
repz
popf
pop
and
cli
pop
jns
mov
xchg
dec
test
xor
imul
aad
mov
mov
xor
mov
mov
shl
out
in
into
lahf
push
rol
xor
xlat
testl
outsl
mov
and
add
imul
lcall
imul
in
bound
inc
jge
mov
mov
pop
and
mov
jb
stos
inc
jbe
xchg
cli
push
sti
xlat
mov
rcpps
and
mov
dec
loop
popa
mov
lock
push
pop
cmovae
sti
les
mov
push
popa
xchg
stos
and
cwtl
jnp
mov
xchg
mov
mov
cld
push
jp
fimull
pop
cmp
jle
sahf
xor
sub
sbb
ret
test
arpl
mov
divb
enter
sahf
push
sub
adc
mov
pop
sub
in
or
lcall
cmpsl
lock
inc
xor
lods
jo
jne
arpl
mov
mov
stc
jg
pushf
sbb
jle
pop
push
inc
insb
ja
ror
icebp
sbb
fdivs
mov
or
cmp
cwtl
cmp
push
int3
push
push
andl
inc
cltd
jae
in
jo
add
dec
push
std
jg
mov
ret
jle
out
out
cmp
push
push
stos
xor
pslld
or
cmp
xchg
push
pushf
ret
lock
shll
inc
push
fistl
xchg
mov
out
jecxz
inc
loopne
jo
mov
push
push
cmp
cwtl
dec
js
mov
adcb
pop
lret
ret
pmaxub
es
cmp
cmp
shlb
in
and
dec
inc
frstor
ss
adc
fcmovbe
out
mov
or
enter
inc
xor
ret
cli
repnz
loope
add
pop
popf
call
or
mov
addl
mov
add
sub
rcrb
xchg
mov
adc
into
push
mov
add
inc
cmpsl
rol
paddsw
rorb
sbb
xor
add
in
movsl
ficomps
int
inc
or
mov
cld
pushf
xchg
cld
mov
inc
popf
outsb
add
popf
inc
inc
mov
inc
out
test
fcomps
push
jp
scas
xor
mov
into
push
inc
adc
jmp
add
test
xchg
test
cmp
lret
sbbb
jbe,pn
fcompl
mov
rcll
add
rcrl
xor
xor
xchg
push
and
gs
dec
and
add
cmpsb
jbe
ljmp
out
sbb
fildl
out
mov
push
push
mov
pop
stos
push
pop
and
test
outsl
jne
nop
pop
xchg
loopne
add
inc
mov
xchg
cmpsl
sbb
xchg
pop
or
movsl
push
out
jle
push
sbb
mov
mov
pop
js
mov
jae
mov
test
js
mov
insb
fwait
popf
imul
ss
mov
lods
cwtl
pop
mov
lock
icebp
data16
lods
imull
push
rorb
and
inc
into
jg
xor
sub
cmp
xor
inc
xchg
loope
adc
and
popf
sub
mov
fmuls
sbb
add
push
mov
loopne
xor
or
les
ror
js
xchg
xor
xchg
sbb
push
pop
mov
xchg
inc
add
nop
mov
inc
sbb
lock
imul
lret
fdivrl
sbb
inc
jo
push
nop
jbe
push
push
inc
aas
cmpl
sub
fdiv
cmp
xor
or
out
test
mov
and
fcmovnu
loopne
cmpsb
mov
fst
hlt
out
daa
jmp
pop
xchg
call
outsb
lea
fsubs
loop
call
cmpl
outsb
loope
xchg
push
cmp
jecxz
in
push
inc
into
mov
mov
sbb
inc
data16
adc
jbe
iret
push
jmp
xchg
out
jno
in
sbb
call
and
mov
cld
aas
gs
ficoms
and
and
sub
pushf
jp
insb
cmc
dec
imul
cmc
stos
and
leave
inc
or
mov
push
out
xor
cmp
cmp
cmp
inc
and
pop
adc
insl
call
inc
or
and
out
fucomp
outsb
sub
cs
outsl
test
ficoms
repz
sub
rcr
pop
mov
mov
mov
mov
js
adc
xlat
push
cmp
data16
add
adc
sbb
mov
cmp
xchg
cmp
or
repz
aaa
or
out
sub
ror
shl
add
sub
out
lds
lea
clc
inc
jl
push
imul
adc
hlt
push
jg
mov
inc
sub
aam
ss
ds
pop
aas
loopne
mov
jecxz
mov
arpl
cwtl
mov
push
pushf
cmp
mov
iret
sub
and
pushf
aad
cmpsb
inc
fdivrs
outsl
jno
cmc
mov
imul
pop
imul
lret
sbb
stos
cmp
pop
ret
pop
inc
pusha
mov
fdivrs
shl
cmp
int3
pop
mov
cmp
popf
fsubrs
pop
sub
hlt
lods
and
and
fmul
sbb
imul
fmuls
out
addr16
fisubrl
mov
xor
cld
int
mov
push
outsb
cmpsb
jl
push
jbe
push
mov
push
cmpsb
adc
out
jmp
test
mov
dec
setb
sbb
adc
xor
add
into
push
inc
shrl
push
sub
mov
cmp
push
sahf
cmp
pop
rcrl
dec
pop
inc
and
pop
xchg
nop
dec
mov
ret
mov
mov
repz
addr16
push
xchg
aam
mov
shlb
rorb
sbb
mov
cmp
jno
push
pop
and
mov
push
outsl
cs
test
mov
ds
or
adc
add
mov
dec
adc
addr16
test
mov
or
xchg
mov
sti
mov
addr16
inc
repnz
daa
clc
sub
and
mov
mov
jo
adc
loop
gs
stos
loopne
ja
lret
dec
rcr
sub
fs
outsb
repz
push
dec
sar
dec
jp
push
sbb
push
and
xor
adc
mov
ljmp
adc
lea
daa
and
xchg
pusha
repz
cmp
ds
cmpsb
insb
loop
mov
jns
imul
out
cltd
lcall
pusha
lock
rclb
xchg
fsub
or
int
inc
in
or
jnp
adcb
inc
jo
xchg
or
adc
mov
sbb
mov
fs
les
inc
mov
je
lret
std
jmp
fwait
add
stos
movsb
clc
xor
pusha
pop
outsb
cmp
arpl
cwtl
aam
mov
push
mov
sahf
ret
ret
mov
ret
inc
sbb
jp
fnstcw
jle
xchg
fisttpll
lods
and
sbb
inc
sub
dec
jnp
inc
pop
outsl
push
fidivs
repz
push
xchg
mov
scas
xor
aad
scas
sarb
or
mov
push
mov
jno
das
push
sub
iret
repnz
fidivrs
mov
cmp
pop
inc
mov
aaa
and
fcoms
in
sub
cmp
je
mov
mov
push
insb
out
movsb
mov
sbb
xor
shrl
adcb
cwtl
std
push
jo
fwait
mov
and
mov
int
adc
mov
sub
and
repnz
and
fldcw
jmp
xchg
addr16
lcall
call
push
pop
addb
nop
xor
insb
orl
icebp
mov
xchg
sub
sub
push
ds
fs
in
jo
cmp
mov
cmc
sub
mov
xchg
iret
ffree
je
ss
daa
pminub
fdiv
lods
sub
jns
js
cmp
dec
lea
imul
scas
xchg
aam
mov
loopne
dec
xor
sub
pop
sbb
shld
xor
mov
mov
mov
cmp
sbb
cmp
mov
xor
add
icebp
jne
in
sarb
shll
test
or
test
jo
test
mov
addr16
xor
loopne
js
int3
mov
sub
jp
inc
dec
stos
mov
popa
jge
insl
leave
ds
xchg
cwtl
std
inc
rcr
je
aad
cs
and
xchg
fwait
aam
adc
out
in
cmpsl
js
push
mov
push
hlt
mov
mov
lock
mov
sbb
cmpsb
stos
push
test
dec
out
sub
jo
icebp
js
and
or
sahf
xchg
insb
mov
sub
inc
push
fidivs
adc
or
mov
add
xor
add
mov
push
inc
fnstenv
xor
xlat
es
icebp
mov
pop
out
movsb
lods
call
xchg
inc
jp
xchg
sub
repnz
xchg
movsl
pop
mov
cmpsb
xor
adc
cltd
push
dec
lock
outsb
pop
cmp
push
cmp
je
mov
loopne
or
dec
and
test
pop
rorb
push
ret
inc
call
jbe
addr16
xor
ret
and
xchg
push
jb
cli
int
mov
mov
je
adc
add
inc
leave
mov
cmpsl
int
loop
mov
xchg
pop
movsl
movsb
cwtl
jl
pusha
jl
sub
mov
inc
imul
pop
clc
pop
pusha
fwait
xchg
jae
in
dec
adc
and
and
in
xchg
popa
jecxz
mov
jmp
cmp
les
pop
cmp
jb
fldt
pop
xchg
pop
adc
mov
cli
fbld
stos
jg
ficompl
inc
rcr
insl
addr16
sub
movntq
out
lods
ficoms
ss
xor
mov
mov
adc
dec
shrb
mov
cli
adc
dec
lock
jb
mov
ret
inc
scas
pop
or
in
mov
mov
jmp
mov
inc
dec
dec
sub
notb
movb
movsl
repz
push
fnstenv
pop
orb
xor
push
mov
cmp
jb
add
daa
mov
dec
shll
mov
addr16
adc
in
jmp
cmp
mov
cs
push
xchg
dec
sub
inc
dec
insb
int
notl
add
popf
rolb
cmp
mov
jns
leave
inc
jge
popa
jl
mov
aad
ljmp
mov
test
adc
jbe
pop
pop
inc
mov
inc
ret
imul
mov
pop
test
orl
add
mov
mov
mov
inc
pusha
pop
std
push
push
jne
xor
push
ss
rcr
cltd
imul
jne
es
or
mov
ss
jnp
roll
je
and
sahf
adc
insl
cmp
adc
add
sub
mov
out
lahf
test
inc
rdtsc
push
lret
cmp
fwait
xor
xchg
inc
jae
iret
repz
ret
adc
movsb
inc
ficoml
xchg
mov
popa
frstor
pushf
push
out
dec
jbe
jmp
inc
ds
xchg
out
cmpsl
xor
pop
movl
push
inc
mov
insb
sbb
jg
data16
test
loope
cli
and
scas
hlt
fdivp
jno
ds
pop
adc
dec
lcall
imul
and
cmp
pop
add
and
sub
sbb
pop
xor
sub
dec
insb
mov
mov
fwait
popf
mov
sbb
jne
pop
add
movl
lods
in
pop
mov
test
test
sub
jle
and
mov
out
pop
decl
xchg
xchg
pop
mov
inc
sbb
daa
mov
mov
sbb
pop
lods
sub
insb
push
outsl
in
jmp
enter
lret
xchg
pop
pop
lret
cmp
pop
insb
and
pop
sbb
insl
adc
js
aas
jne
pop
jae
jmp
ret
fdivs
dec
lahf
in
and
and
adc
cmpb
mov
repz
insb
ljmp
or
add
sbb
aad
add
in
adc
xor
adc
mov
dec
pop
push
sbb
jne
add
lods
inc
scas
lods
mov
fucomip
test
inc
hlt
test
mov
add
mov
dec
cmc
xchg
add
mov
jge
scas
lret
daa
cmpsb
mov
lahf
loopne
test
mov
sub
mov
jl
jmp
psubd
add
out
pop
xchg
dec
mov
mov
lods
std
jne
jns
and
out
xchg
rcrb
jmp
ljmp
bound
addr16
je
cmp
rclb
fwait
adc
cmc
mov
jb
js
ss
ljmp
jae
xchg
mov
mov
cmc
fstp
inc
or
cmp
inc
scas
imul
dec
sbb
mov
loope
sbb
inc
pop
addr16
pop
int
sbb
jecxz
or
mov
repnz
fdivr
test
pop
arpl
push
inc
rorb
push
pushf
into
ret
in
outsl
or
clc
addr16
stos
add
push
sub
orl
inc
mov
and
pop
xor
mov
shr
push
jmp
test
mov
in
sub
mov
dec
sti
adc
ja
inc
stos
test
mov
adc
jnp
sub
mov
inc
mov
cmpl
xor
pop
pop
mov
mov
icebp
shll
pop
aad
push
pop
hlt
cwtl
repz
add
inc
popf
mov
add
ret
insb
xchg
adc
jge
loope
cwtl
or
fnsave
nop
add
loop
push
loopne
or
repz
cmp
pop
or
lods
sbb
xor
sbb
movsl
inc
mov
jp
push
jge
inc
xor
js
shll
inc
insb
adcl
xorb
xor
iret
xchg
ljmp
jae
daa
pop
xchg
or
fucom
icebp
add
mov
sub
imul
cmp
or
nop
mov
inc
cmp
mov
in
push
pop
iret
cmp
incb
jl
or
jp
mov
sti
sub
sub
add
test
out
arpl
int3
sbb
sti
adc
rcll
imul
jecxz
cmpsl
and
faddl
cmp
add
hlt
mov
jp
fwait
arpl
mov
cmp
or
test
outsb
push
inc
hlt
inc
mov
sub
inc
adc
dec
fidivs
cltd
push
pop
lods
adc
add
pop
in
add
cmp
sub
inc
daa
cmp
cmpsl
add
cmp
scas
adc
jbe
scas
ds
adc
push
pop
dec
negb
xlat
int3
sub
xchg
gs
dec
test
data16
sarl
jae
or
sbb
fdivrl
iret
imul
mov
in
fwait
mov
sub
or
stos
or
loope
mov
fdivrs
push
sub
pop
leave
push
or
mov
stos
and
loopne
cmp
jge
mov
lcall
xor
or
arpl
enter
ss
xchg
fmull
jp
push
dec
pusha
mov
xchg
rorb
aad
xlat
sbb
pop
enter
mov
cmc
cltd
mov
and
dec
push
mov
mov
xor
push
xchg
fmul
push
xor
lcall
jecxz
and
fadds
jo
cmc
adc
and
fistpll
sub
adc
mov
repnz
ja
sbb
sub
sub
jecxz
cmpsl
mov
rcrl
lds
sbb
sbb
dec
push
data16
adc
jmp
aad
xchg
pop
mov
rorb
pop
imul
das
sbb
xor
icebp
hlt
xor
je
pop
and
repnz
xchg
dec
into
mov
insl
inc
sahf
or
xchg
add
jo
dec
lods
inc
push
inc
inc
sbb
jns
sbbl
not
push
jbe
pop
inc
fimull
clc
ret
push
cmc
sbb
mov
pushf
movb
mov
shrb
sbb
sbb
lods
shl
or
sub
pop
and
and
xchg
test
cltd
stos
cmp
dec
pop
dec
pcmpeqb
sbb
xor
xchg
not
xchg
xchg
aas
out
jo
stc
adc
xor
jg
or
pop
xchg
stos
cld
arpl
mov
pop
or
rol
sub
loope
sub
shll
dec
pop
add
addb
in
mov
sbbb
or
ds
hlt
cmp
fisttpl
and
inc
dec
jns
aas
xchg
cmpsb
add
popa
pop
sub
seto
movb
mov
das
xchg
je
mov
int
sub
insl
fstpt
push
movsb
cmp
ret
ret
lret
adc
ficoms
fwait
and
pop
inc
callw
dec
cmp
cmp
shlb
sub
inc
adc
pop
add
les
mov
jp
and
xor
mov
mov
in
adc
dec
data16
bound
push
adc
popa
jle
inc
inc
jg
mov
xchg
dec
dec
lret
shll
sbb
mov
andb
sahf
inc
frstor
xor
inc
pop
ret
clc
inc
les
or
adc
mov
cmp
sub
mov
mov
xor
pop
xor
test
fiaddl
dec
inc
js
pop
push
xlat
ret
popl
dec
stos
bound
leave
aas
js
popa
inc
outsl
jmp
insb
sub
ljmp
mov
aad
int
jp
cwtl
dec
or
movsl
imul
bswap
aad
xor
lret
rcrl
fdivp
lea
xlat
out
add
test
arpl
in
push
cmpsb
negb
xor
push
jg
cmp
orb
les
mulb
rcrb
and
pop
sub
sbb
imul
mov
inc
ret
push
mov
mov
pop
or
mov
push
fsubr
cmpl
dec
rcrb
enter
push
xor
mov
dec
add
mov
andl
inc
lods
bound
xchg
xchg
xchg
mov
cmp
adc
pop
lock
popf
out
adc
mov
rorb
arpl
out
sub
push
in
es
jecxz
in
mov
xchg
inc
in
clc
clc
xchg
cmp
outsl
clc
std
push
dec
mov
mov
sub
xchg
inc
cli
lahf
ss
pop
in
sar
shll
adc
mov
cwtl
pop
hlt
and
inc
negb
lods
cwtl
aaa
test
aad
push
pop
test
rcll
mov
jae
xchg
enter
adcb
mov
jp
push
or
incb
outsb
fsubp
sbb
addr16
lret
mov
daa
scas
and
or
je
push
cmpl
clc
sbb
stc
mov
repz
adc
sti
jno
pop
mov
or
xchg
in
pop
shl
inc
cmc
dec
jne
cmc
pop
out
mov
ja
and
inc
addr16
jne
ret
loop
imulb
xchg
cmp
push
add
rcl
shrb
xor
lret
or
xchg
aaa
add
sub
inc
clc
mov
mov
sbbb
sbb
adc
popa
testl
jne
lods
mov
pop
stos
jmp
mov
adc
ljmp
adc
and
adc
insl
mulb
jp
add
mov
mov
add
xor
push
pop
cs
fwait
jbe
dec
aad
add
add
pop
pop
fildl
adc
mov
dec
pop
in
decb
add
mov
mov
out
arpl
daa
add
inc
out
loope
mov
adc
out
mov
nop
lds
xchg
jle
pushf
jecxz
mov
ret
xor
pusha
adc
dec
fwait
cmp
scas
test
add
in
ror
ss
test
adc
xchg
fsubr
xchg
sbb
out
jle
sti
arpl
cmp
cmc
xchg
sbb
push
testl
jbe
test
dec
fs
inc
data16
sti
adc
xchg
arpl
dec
adc
add
dec
fwait
data16
xor
and
sub
dec
mov
pop
lea
mov
fs
test
and
mov
sbb
push
mov
cmpsl
mov
or
adc
xor
decb
out
jbe
jae
test
out
push
pop
or
movsb
mov
xchg
xchg
push
dec
addr16
aad
lds
pop
std
insl
mov
dec
push
mov
inc
outsb
gs
xchg
mov
aam
dec
clc
sarb
cmp
push
pop
aad
mov
scas
jle
js
pop
idivb
dec
xor
xchg
movsl
mov
add
icebp
out
pop
rol
ffreep
cmp
mov
mov
lock
jno
adc
test
lret
fs
sbb
jg
mov
xor
and
jecxz
mov
cwtl
mov
adc
ljmp
push
adc
dec
pop
pushf
dec
mov
sbb
mov
xchg
test
lahf
fldl
pop
add
or
loop
inc
xor
outsb
mov
jg
xchg
or
xlat
jmp
out
pushl
loope
xrelease
mov
jb
cmpb
stc
call
insl
in
push
xlat
pop
lahf
sub
cmp
jne
fidivrl
in
in
imul
mov
addr16
arpl
push
xchg
inc
shrl
lods
cmp
jbe
leave
pop
xchg
sub
repnz
cmp
adc
fdivrl
pop
mov
mov
bound
jns
or
and
dec
jp
dec
mov
sahf
xchg
lods
mov
or
pop
pop
mov
ja
mov
xchg
push
lea
leave
ret
imul
xchg
sbb
inc
hlt
sti
aad
lea
lds
cld
test
and
int
adc
push
xchg
leave
mov
ret
mov
and
cmpsl
dec
sbb
mov
out
in
movsb
mov
or
push
pop
scas
cwtl
jg
addl
add
test
pop
xor
inc
jno
cmp
or
jmp
pop
stc
gs
cmp
lods
xchg
xchg
in
pop
xchg
adc
out
jbe
fdivrl
sbb
nop
cli
rcr
inc
and
in
adc
lahf
in
pushw
xchg
and
add
and
jno
fmul
xlat
pop
xchg
mov
sub
clc
xor
repz
mov
loope
push
out
je
cs
xor
cmpsl
mov
xchg
cmc
test
pop
ficomps
in
orb
dec
stc
movsl
jmp
mov
inc
and
addr16
cld
sub
aad
mov
js
jl
pop
andl
test
jle
pusha
xor
cmp
in
xchg
daa
fninit
cmp
adc
notb
shrb
ljmp
cwtl
ds
mov
in
and
cmp
mov
popf
xor
or
daa
dec
inc
outsb
aad
xchg
test
or
inc
bsf
sar
xchg
ljmp
int
lods
jae
push
loopne
rcrb
or
pop
sahf
push
ljmp
js
imul
in
mov
xchg
xor
sub
push
orl
lcall
cmpsb
push
dec
ret
xchg
addr16
pop
inc
mov
call
outsb
dec
mov
jg
cmc
test
or
ss
adc
stos
das
cs
imul
ficomps
in
cltd
mov
lret
add
xor
dec
rorb
lcall
outsb
jecxz
icebp
ficomps
lds
or
mov
jno
mov
mov
xchg
js
lret
ljmp
mov
fwait
adc
dec
sub
js
sahf
imul
jnp
pop
repnz
jo
clc
test
lea
mov
mov
leave
movsl
rorl
mov
lods
pop
out
mov
xchg
ret
inc
cmpl
add
adc
repz
cmp
in
jbe
or
xorl
sbb
and
mov
call
push
mulb
arpl
test
add
pop
xchg
fcoml
jae,pt
push
ret
imul
aam
mov
add
lcall
or
sub
mov
fwait
lcall
cmpsl
out
xchg
or
in
and
fisttpll
es
adc
sub
adc
mov
sub
pushf
xor
cmp
mov
in
movsb
data16
bound
inc
into
les
aas
out
lds
push
fwait
mov
cld
xor
push
and
xor
ds
jns
test
clc
cmc
iret
jmp
scas
stc
fsubl
ds
pop
mov
pop
and
jmp
inc
sti
clc
aam
mov
icebp
dec
fwait
xchg
fs
sti
rol
ss
sub
push
ds
leave
jge
cltd
jg
or
scas
mov
mov
dec
mov
pop
cld
mov
xchg
lods
add
aam
pop
ja
cld
ss
and
cli
stc
es
dec
mov
sub
mov
lcall
arpl
add
pushf
sub
or
mov
scas
push
xlat
sub
arpl
es
mov
mov
or
fs
subb
in
jne
mov
mov
add
pushf
cs
movsl
pushf
dec
jge
mov
sarl
adcb
sub
adc
adc
enter
insl
std
rcr
cmp
gs
add
int3
adc
or
pop
mov
mov
mov
cmc
cmp
or
rcl
and
hlt
outsl
aas
add
mov
aas
pop
out
push
pusha
in
jge
mov
xor
pop
repz
xor
adc
iret
adc
push
xchg
je
ss
fcomp
jb
sub
repz
popa
xor
add
mov
jg
orb
in
arpl
lret
insb
mov
inc
arpl
or
mov
outsl
imul
mov
repnz
pop
lret
jae
mov
mov
xchg
jle
movsb
xchg
sub
cld
and
es
push
pop
faddp
test
xchg
pop
inc
movsl
sub
call
inc
test
adc
je
pop
inc
jnp
jnp
push
mov
lods
adc
outsb
pop
mov
push
sub
pop
cmp
mov
mov
mov
fistl
fldt
dec
push
cmp
xor
test
pop
imul
inc
xor
stc
rcr
sar
mov
and
cwtl
sbb
and
mov
movsb
xchg
mov
fwait
pop
ss
and
cli
mov
test
andnps
sub
and
mov
push
aam
push
ret
imulb
pop
cwtl
shl
inc
cs
add
fisubrs
and
and
xor
push
scas
jecxz
insb
push
adc
lock
push
cmp
push
lods
mov
xlat
out
xchg
jge
outsb
shrb
scas
push
dec
and
xchg
mov
sub
insl
call
cmp
jg
inc
sbb
lret
sti
pop
add
inc
sbb
ret
mov
and
fwait
ljmp
pop
mov
iret
mov
and
pop
push
sub
sarl
test
lahf
cwtl
and
adc
pop
loopne
xchg
jno
fildl
sub
insb
dec
xlat
adc
repz
cmp
push
leave
js
aam
mov
jg
xorb
mov
int3
add
out
xchg
gs
pop
imul
sub
iret
jl
lret
iret
lea
popl
into
sbb
jecxz
push
mov
jge
pop
add
and
aad
dec
jno
push
dec
lret
subb
inc
loope
fidivl
mov
xchg
jp
cwtl
cld
aad
sbb
sub
into
cmp
jmp
popa
cld
dec
subl
clc
mov
leave
jge
sub
lret
pop
and
pop
je
cmpsb
sub
xor
adc
mov
inc
ret
aas
cmc
lcall
add
jge
sar
add
es
imul
dec
sub
loope
fdivrs
xor
dec
jbe
in
sub
mov
dec
aam
add
push
sub
incl
scas
in
xchg
mov
shl
push
dec
iret
dec
scas
fstps
addr16
jno
int
loop
mov
scas
jb
sahf
out
mov
xor
inc
jl
pushf
and
sub
ror
ljmp
cmp
ljmp
ljmp
xor
jbe
test
mov
dec
xor
bound
pop
jp
mov
xor
pusha
or
divps
mov
aas
jge
inc
lods
xchg
or
jns
push
shll
pop
fwait
rorl
pop
lahf
jne
xchg
pop
mov
lret
cmp
mov
pop
aam
into
cld
pop
jmp
bound
mov
cmpsl
sbb
or
pushf
out
sbb
roll
mov
add
ljmp
cvtpi2ps
stos
sti
fwait
push
inc
aaa
test
mov
sub
shrb
jecxz
rcll
cmpsb
sbb
pop
xlat
frstor
cmp
into
ss
sar
inc
push
mov
ffreep
fs
in
dec
inc
dec
inc
ss
mov
aas
shll
xorl
in
dec
gs
and
inc
xor
jmp
sub
mov
into
and
decl
or
xchg
add
pop
push
cmp
dec
xchg
xor
idivl
cmp
ljmp
cmpsl
jle
add
sbb
mov
jno
loopne
fstl
add
adc
mov
mov
fidivs
jnp
add
or
pop
jb
dec
xchg
push
shlb
sbb
lock
ret
dec
cmp
cmpsl
fdivl
mov
pop
rcrl
jmp
cmp
mov
lea
enter
out
inc
pop
jae
pop
shll
or
xchg
clc
sub
imul
cmp
aas
pop
das
aas
shrl
bt
xchg
test
cmp
push
pop
xchg
push
aam
sti
lods
nop
mov
loope
jne
xor
sbb
pop
add
out
inc
push
sbb
and
sti
fistps
cmp
lea
xchg
xchg
test
mov
or
dec
mov
inc
mov
loopne
fisubrl
mov
push
xor
dec
add
xor
and
sub
jo
pop
cltd
pop
fadds
scas
arpl
sti
dec
outsl
lock
shr
loopne
cmp
push
sbb
push
std
loope
push
cmp
in
sub
adc
dec
and
hlt
pushf
cmp
xor
xor
adc
movsb
adc
xchg
imul
jnp
mov
std
and
cmp
into
inc
or
jns
imul
dec
addb
ucomiss
sbb
mov
lret
adc
pop
mov
incb
jo
ficompl
mov
jo
sti
stos
xor
popf
xchg
jbe
xchg
mov
xor
std
sub
sbb
adc
cld
inc
dec
sub
inc
lar
and
sub
xor
in
cmp
imul
pop
add
or
std
xchg
cmc
fwait
and
mov
sub
lret
in
insb
dec
xlat
pusha
insb
mov
jne
bound
aad
scas
jne
cmp
out
or
lret
sub
adc
movsb
xchg
cld
les
fcoms
ds
sbb
xchg
push
jne
lods
jmp
jle
ret
or
mov
lods
pop
movsb
call
sub
scas
xchg
pusha
sbb
aaa
jns
xor
jmp
push
jb
lahf
shlb
bound
xor
ret
je
in
popa
loopne
mov
sub
xchg
xchg
xchg
js
out
inc
imul
xchg
dec
fcoml
fisubrs
add
sub
push
test
dec
fsub
aam
cmpl
ffreep
fldln2
xchg
adc
in
or
test
movsb
xor
cmpsb
inc
mov
cwtl
push
xor
mov
mov
add
xor
int3
movsl
shrl
fistpll
pop
pop
cmc
mov
jmp
pop
mov
cld
pop
sbb
lret
data16
std
fsubrl
gs
shlb
addb
mov
mov
je
push
and
ret
inc
push
mov
sbb
push
in
cld
push
push
mov
or
mov
frstor
repz
cmpsb
orb
out
rolb
setne
jno
sub
jecxz
gs
lret
jo
stc
gs
pop
fwait
pop
repnz
mov
inc
jle
mov
adc
sub
insl
adc
data16
into
repnz
popa
push
jne
push
mov
xor
dec
orl
cmp
movsb
jge
fadd
adc
cmp
fisttpl
cmp
ret
sub
sbb
pop
std
dec
shlb
or
jle
scas
push
rcll
movsl
and
sub
xor
sub
and
or
or
push
or
in
or
and
js
imul
cwtl
cld
cli
lahf
shlb
jbe
shl
popf
repz
sbb
ds
shr
bound
call
sub
faddl
cwtl
sbbl
fwait
mov
cmp
xchg
mov
xor
xchg
aad
xchg
jmp
jmp
leave
or
dec
xor
mov
jle
sarl
adc
mov
orb
mov
fsubr
mov
cmp
imulb
sub
xchg
adc
rolb
scas
call
std
pop
sbb
mov
filds
sub
mov
stos
xchg
dec
fldenv
add
xchg
mov
sub
jns
xor
call
mov
mov
add
nop
push
shl
add
cld
add
int
lea
xchg
xchg
lea
push
outsl
out
push
enter
pop
sbb
lods
inc
sub
call
mov
push
out
push
stos
fildll
into
cmp
lret
push
stos
lds
push
mov
rcrl
dec
sbb
push
ret
xchg
enter
icebp
sub
add
push
xor
adc
lcall
mov
mov
mov
add
cmp
dec
lea
push
sbb
jl
enter
mov
push
scas
lds
mov
cmp
popf
hlt
adc
cmpsl
xor
aam
mov
inc
sub
xor
stos
sbb
mov
mov
jbe
mov
cmp
gs
cmpl
adc
xor
pushf
call
sbb
addb
inc
xchg
mov
push
sbb
aam
cltd
pop
pop
or
imul
inc
fnstsw
sub
sub
aad
ds
mov
lea
and
jnp
movsl
lds
into
lds
ss
xchg
dec
cld
ds
int
test
xor
sub
in
jmp
adc
or
pop
or
add
mov
stc
mov
jo
push
lret
mov
cli
insb
movsl
ret
lds
mov
fisubl
cld
mov
push
mov
sbb
lahf
push
inc
add
adc
xchg
sub
les
push
ret
mov
or
mov
sti
pop
mov
mov
inc
jb,pt
mov
xchg
add
add
jo
add
ret
cmp
xchg
mov
jecxz
jle
cmpsb
sub
and
mov
dec
cwtl
je
mov
pop
cmp
gs
or
imulb
daa
loope
out
mov
jb
cwtl
sub
and
jmp
test
mov
pop
adc
icebp
pusha
inc
jp
ret
scas
push
sub
mov
ss
cltd
sbb
push
ret
mov
ffreep
push
sub
xor
mov
mov
sub
adc
push
adc
xor
loopne
adc
mov
test
lret
out
lods
jle
call
adc
dec
popf
cmp
inc
int3
push
in
lock
add
sub
andl
inc
jbe
call
lods
jo
push
push
push
lcall
je
or
jbe
cli
push
dec
cmp
mov
push
jb
xor
sub
or
and
sub
sub
rorb
add
add
int3
ds
pop
push
jno
ret
incl
inc
out
sub
mov
in
ss
xchg
jge
add
fs
pop
sbb
loopne
add
repz
push
pop
mov
inc
xchg
mov
xlat
cltd
pop
lret
sub
adc
fcomps
xchg
xchg
jns
adc
gs
testl
inc
inc
mov
stos
sub
push
mov
fdiv
sub
pop
jae
push
pop
push
fwait
loope
mov
xchg
jns
pop
in
shrb
inc
fnstcw
scas
and
xor
imul
testl
or
jnp
subl
fisttpll
orl
out
in
inc
loope
out
insl
dec
sahf
jp
mov
cmp
ljmp
movsb
insb
and
mov
test
add
enter
mov
lret
mov
dec
into
xor
push
pop
mov
fs
lret
jb
test
test
inc
les
jecxz
das
cmp
add
mov
mov
xlat
push
mov
outsl
sbb
pop
jno
or
flds
mov
jae
jecxz
add
daa
sbb
and
xorl
fistl
outsb
lea
lret
xor
popa
push
js
inc
sub
in
xchg
es
jmp
sub
or
xchg
inc
mov
inc
and
pop
sub
std
jge
xchg
xor
dec
test
adc
insl
aaa
js
and
dec
ds
push
scas
jecxz
stc
mov
push
nop
and
sbb
movsb
sbbl
pop
divl
fisttpl
sar
mov
scas
outsb
mov
loope
stos
out
sahf
and
dec
mov
sub
pushf
inc
fcmovnbe
jle
xchg
ja
sub
sbb
and
or
push
push
mov
and
test
xchg
and
popf
pop
add
call
and
dec
test
jne
or
pop
cmp
add
dec
sahf
mov
mov
jnp
pop
icebp
lahf
insl
sarl
pop
fs
adc
cmp
mov
push
decl
insl
movsb
cmp
mov
or
data16
je
adcl
dec
inc
cltd
ds
pop
xor
sub
sbb
es
cwtl
pop
fistl
loopne
push
leave
xchg
sub
lcall
push
xchg
add
cld
aam
adc
or
decl
test
pop
mov
adc
ret
aad
insl
ja
fiaddl
jge
xchg
cmp
adc
bound
pop
sarb
push
mov
cmp
xchg
mov
add
xchg
jp
pop
lods
xchg
cs
jmp
jecxz
jo
imul
scas
testl
rcll
outsl
ljmp
cmp
xchg
test
and
fstpt
clc
pop
sbb
or
cmpsl
and
pop
sbb
insb
push
or
or
xchg
push
enter
movsb
adc
pushf
mov
mov
jl
sub
mov
sbb
pop
add
subps
mov
jle
jno
push
xchg
adc
stos
into
test
jo
jp
scas
xchg
push
mov
pusha
addr16
dec
inc
pop
pop
xchg
sbb
mov
inc
sub
adc
and
inc
stos
mov
pushf
divl
cmp
fiaddl
orl
or
pop
fisttps
int3
das
cmp
daa
divl
adc
scas
rcr
xchg
rcl
aaa
rorl
xchg
cltd
xchg
sbb
cltd
mov
mov
lods
ljmp
mov
add
int
adc
add
pop
arpl
ds
lock
lods
out
pop
roll
leave
and
test
mov
jo
pop
daa
mov
ljmp
and
and
sub
iret
add
xchg
pop
pop
mov
test
call
mov
into
aam
insl
test
ret
and
rcll
cli
add
int
add
jno
subl
das
outsb
jecxz
mov
dec
adc
jge
xor
mov
mov
jbe
add
cmp
lret
adc
lds
mov
cmp
fdivrl
jge
aaa
push
and
push
in
xchg
xlat
pop
lds
add
add
xor
lret
in
or
sahf
xchg
xorl
lods
mov
cmp
inc
adc
int
pop
test
cmpsl
mull
pop
mov
dec
jl
mov
loope
cmp
rorb
mov
movsb
lds
sbb
sub
mov
addr16
xchg
push
cmp
cld
jb
rol
mov
repnz
pop
push
mov
pusha
movsb
aas
in
pop
dec
test
incl
sub
xchg
push
cmpsl
dec
lods
pop
or
pop
mov
repnz
outsl
or
insb
mov
dec
lods
xchg
repnz
adc
pop
ljmp
dec
dec
gs
imul
lods
jg
push
or
loop
imul
or
mov
mov
loope
addr16
mov
sub
pop
mov
fmuls
adc
jecxz
jle
mov
addr16
fdivs
rorb
dec
movsb
lds
gs
push
adc
nop
in
mov
mov
adc
jge
lea
inc
xor
cmp
xor
into
add
mov
mov
sub
pop
cmp
stos
adc
mov
inc
loopne
fbld
cltd
leave
aaa
fisubrl
popa
fisttpll
pop
filds
xchg
xor
cmpsl
xor
lock
pop
or
and
lret
push
mov
mov
push
and
nop
popa
and
push
cltd
push
adc
adc
inc
push
xchg
outsl
adc
orb
shlb
pop
mov
ficompl
push
cmp
or
mov
push
into
adc
sub
cmp
iret
cmp
fadds
fisubrs
jge
frndint
pop
clc
sub
aas
jl
jne
scas
sub
jns
je
mov
enter
clc
in
xlat
jecxz
mov
mov
imul
jg
pop
sbb
rcrl
cmp
pop
or
mov
and
adcb
push
cltd
pop
out
sbb
jb
and
mov
lea
mov
es
mov
push
adc
test
repz
adc
sbb
movsb
popa
and
aaa
fmull
jle
xchg
sti
sbbl
mov
sbb
pop
test
add
jl
adc
cmpsl
mov
jns
or
pop
nop
in
fdiv
test
sub
push
pushf
mov
pushf
mov
xlat
adc
inc
out
mov
mov
xor
mov
lods
div
lods
push
lret
push
jo
or
fisubrs
test
pop
inc
sbb
lods
clc
xchg
fwait
push
push
fwait
fwait
cmp
lret
sub
xor
adc
fxch
adc
pop
fldt
repz
sbb
xor
loop
in
mov
mov
or
xchg
xchg
push
push
add
scas
or
push
mov
rorl
pop
dec
jne
aas
push
sub
dec
add
cli
fs
inc
pop
pop
cmpsl
xor
test
fmul
lret
out
dec
mov
mov
inc
pop
dec
jae
xor
pop
js
pop
addl
mov
dec
mov
push
cmp
xchg
mov
notb
mov
push
dec
imul
inc
mov
mov
mov
push
mov
sub
arpl
pop
mov
mov
xchg
jno
sub
pop
pop
arpl
mov
ficomps
mov
dec
xchg
popf
nop
xchg
jno
cmp
rcrb
mov
ret
iret
and
jmp
jp
popf
mov
push
addb
pop
push
sbb
enter
mov
cmp
ret
sbb
mov
enter
cmp
test
push
xchg
mov
xlat
add
pop
lcall
vpmaddwd
mov
aad
dec
push
xchg
mov
dec
testb
add
xor
popa
ret
in
leave
loope
pushf
jns
dec
mov
adc
es
aam
adc
cmp
aad
sarb
negl
int3
mov
loop
mov
jno
leave
into
mov
mov
cmp
sub
das
subl
test
inc
sbbb
sbb
pop
and
pop
mov
sbb
add
mov
jno
sub
cmp
in
sbb
aam
lahf
aaa
dec
int3
or
jbe
or
xor
std
and
pusha
cs
xor
mov
sub
pop
pop
pop
nop
pop
inc
int
adc
cmc
adc
pop
cmpsb
adc
ret
es
pop
out
in
jmp
adc
lahf
xchg
push
cld
pop
mov
jmp
mov
cmp
pop
mov
add
fldenv
jb
aad
and
add
inc
loop
sbb
imul
sbb
loope
leave
filds
push
cmp
out
add
lret
mov
push
jno
sbb
repz
mov
popa
cmp
pop
imul
dec
sahf
xchg
mov
shlb
add
ds
ds
push
packuswb
adc
dec
jns
sbb
daa
jle
subb
aad
movsl
xchg
sbb
mov
fsubrs
pop
je
clc
out
mov
mov
inc
xchg
xor
pushl
dec
add
ret
push
dec
cmc
push
iret
addb
add
int
fists
xchg
push
or
stc
or
mov
popf
push
cmp
inc
mov
cmp
xor
outsb
out
btr
push
push
push
lcall
xor
dec
and
jg
dec
loop
data16
cmp
dec
pusha
add
xor
xchg
mov
mov
inc
and
or
xchg
mov
test
adc
outsb
mov
out
or
cmp
sub
mov
lds
lods
push
ret
mov
push
lret
andb
pop
gs
add
xchg
dec
pusha
adc
add
sub
xor
mov
pop
sbb
fwait
cmp
lds
je
popa
inc
mov
mov
clc
imul
fisubl
movsb
mov
lahf
fildl
stos
add
out
and
xor
xor
push
cmp
jle
fimuls
leave
dec
sbb
xchg
xor
ret
push
hlt
cmp
out
inc
pop
xchg
pop
push
ds
jmp
mov
xchg
pop
jmp
daa
das
enter
fsubl
sub
add
xor
test
loopne
xchg
push
lret
lahf
ret
push
or
mov
out
xchg
insl
jle
or
and
sbb
or
repnz
negb
nop
filds
and
pop
mov
cs
lret
je
jo
dec
ffree
lcall
inc
xor
xchg
ja
lret
leave
sub
nop
gs
sub
pop
lea
aad
jno
ret
xchg
push
mov
shll
std
into
lea
sarb
mov
mov
sub
out
out
push
stc
lret
addr16
adc
sarl
pop
fistpl
mov
or
sbb
mov
push
mov
xor
in
xchg
jbe
fimull
out
mov
pop
lea
sub
outsl
imul
js
int
sub
test
add
hlt
and
adc
and
rcll
push
push
out
sbb
movsl
jge
sub
ret
aas
into
mov
out
lds
adc
in
cmp
xchg
pushf
xor
xor
and
scas
pop
pop
mov
push
flds
mull
sahf
mov
and
adc
mov
jbe
addr16
jne
jns
out
push
out
shl
adc
movsb
pop
inc
adc
std
jne
push
and
outsl
out
mov
fwait
mov
add
add
inc
push
add
pop
xchg
in
xchg
inc
pop
scas
popa
xchg
dec
xlat
and
jecxz
push
call
aam
xchg
ja
lods
stos
insl
sub
dec
iret
loop
push
sub
nop
scas
repz
gs
movsb
faddp
in
stc
mov
dec
gs
out
and
pop
sti
dec
pop
cmpb
adc
xor
fcompl
ret
mov
leave
movsb
rcll
loopne
jg
and
push
pop
out
xor
aam
rcrl
xchg
test
sub
mov
lea
cld
ss
dec
js
movsl
lahf
xor
jbe
dec
xchg
fstp
cwtl
or
enter
pop
pop
int
jmp
add
cmpsw
add
cmpsl
or
cltd
lret
arpl
pop
mov
ret
popa
sti
fmulp
inc
fiadds
push
sub
fldcw
push
pop
inc
in
xor
lret
and
scas
or
jl
and
std
sub
lret
rcl
cmp
ljmp
movsl
leave
mov
shl
mov
dec
inc
mov
rcll
push
sub
sub
not
sub
jbe
gs
cmp
adc
loopne
xor
daa
push
dec
lcall
dec
mov
pop
or
jnp
sub
mov
stos
dec
fs
out
aad
cmp
sarl
mov
adc
dec
mov
adc
mov
and
and
fs
mov
aam
leave
cmp
aas
push
mov
cld
imul
test
or
mov
lods
or
cli
sbb
subb
data16
jle
jne
outsl
test
out
sub
gs
pop
ds
or
pop
sbb
popf
fcompl
mulb
roll
std
inc
mov
push
int3
inc
mul
adc
repz
jg
leave
cltd
xchg
dec
fmuls
xlat
ret
outsb
movsb
pop
hlt
or
clc
idivl
test
and
ljmp
fdivr
sbb
sbb
mov
xchg
pop
push
hlt
lahf
test
cs
push
js
gs
pop
pushf
mov
mov
sbbl
add
sbb
movsb
scas
cmpsl
xchg
out
in
jo
pop
lret
mov
mov
stc
xor
push
outsb
xor
cmpsb
aad
pop
add
sub
add
fidivs
mov
pusha
inc
inc
sub
fidivrl
in
stos
bound
xor
xchg
lods
out
jl
icebp
sahf
cmp
sub
adc
and
mov
xchg
pop
in
xchg
loop
bound
mov
fprem1
mov
adc
mov
cmpsb
scas
pop
mov
lds
rorb
idivb
call
mov
mov
shrl
lods
dec
out
and
sti
rorl
push
mov
scas
adc
dec
xchg
pop
sbb
inc
jbe
testb
std
int3
test
int
ds
movsb
mov
inc
pop
add
aad
loope
cmp
aas
pop
fs
popf
adc
adc
arpl
ja
or
cld
int
arpl
loope
in
iret
insl
std
mulb
stc
and
adc
inc
bound
out
data16
jecxz
hlt
mov
jg
out
cltd
testl
mov
into
test
icebp
pop
imull
inc
clc
push
cmp
cmp
push
cmpb
mov
or
xor
lahf
fnstenv
ss
inc
jl
jnp
js
scas
or
sti
fstpl
rol
or
pop
or
loop
addr16
stos
xor
xchg
test
mov
icebp
mov
jno
iret
lock
cwtl
sbb
daa
bound
popf
mov
stos
dec
pop
sbb
sub
int3
pop
aad
sbb
fstps
ror
and
repz
sub
push
cmp
lock
les
mov
pop
in
jmp
mov
mov
subb
pop
out
jo
xor
pop
mov
mov
cmp
mov
fcmovnu
cmp
popa
add
mov
cs
clc
ds
cwtl
in
std
in
push
cmp
push
xchg
fidivl
lods
repz
gs
cwtl
jmp
mov
lods
inc
bound
or
mov
sub
push
loopne
jnp
or
roll
out
add
les
sbb
and
push
aaa
pop
or
arpl
outsb
gs
mov
and
pop
xchg
push
loopne
cwtl
push
into
jl
cli
jns
jmp
pop
aad
xor
sahf
push
inc
ds
sti
cmp
mov
insb
mov
cmp
mov
out
xchg
aaa
xor
push
sti
mov
shlb
fstp
int3
inc
jl
in
jmp
in
xchg
add
add
push
jmp
ljmp
or
ss
add
sbb
mov
popa
and
mov
callw
inc
xchg
dec
xchg
sbb
inc
imul
das
test
lahf
adc
jo
out
sbb
testb
adc
xchg
xor
mov
push
lahf
cmp
pop
rorb
inc
dec
movsb
imul
jnp
adc
add
mov
es
sub
push
xor
adc
mov
xchg
jl
push
fsubrs
lcall
inc
dec
inc
int3
popf
xor
outsl
jne
popf
pop
arpl
lds
pop
aad
push
push
dec
pop
and
adc
inc
cmp
push
xor
lret
push
cli
mov
sbb
fwait
hlt
xchg
scas
mov
nop
pop
ds
in
xor
and
mov
jmp
add
ss
push
ja
scas
push
or
mov
cmp
jg
addb
push
cmp
iret
sha256msg1
or
jle
dec
sub
cltd
cmpsb
adc
rcrb
and
int3
subl
sbb
mov
mov
out
aaa
mov
push
pop
ds
shrb
iret
out
pop
push
pop
and
in
mov
or
sbb
mov
sbb
mov
pop
in
push
inc
inc
add
jmp
and
cmp
mov
mov
jecxz
mov
daa
aam
push
cmp
pop
push
imull
div
mov
fmuls
mov
jmp
push
mov
adc
xchg
cmp
xor
sub
xor
imul
test
ss
sbb
icebp
sub
int3
ljmp
scas
out
inc
aam
fs
sub
or
xor
xchg
aas
call
stc
dec
adc
sub
hlt
mov
or
int3
aad
jg
lcall
pusha
dec
cwtl
stos
mov
mov
aas
jp
lock
inc
or
rcrb
sarb
pop
jg
xor
in
insl
idivb
sbb
add
xchg
clc
test
jb
sub
sbb
xchg
outsb
push
pop
popa
adc
insb
jle
lods
outsb
repnz
cwtl
aas
repz
and
pop
fstl
sbbl
cmc
mov
inc
out
enter
into
mov
pop
pushf
mov
mov
mov
imul
outsl
enter
push
push
bound
mov
repnz
ja
gs
movsb
add
mov
jle
scas
jbe
lahf
or
andl
mov
mov
lock
movsb
add
or
mov
jecxz
sub
cmp
mov
sub
test
popa
jne
jo
adc
loopne
shrb
je
call
outsb
inc
cwtl
rcrb
inc
adc
repz
test
rcrb
xchg
pop
jge
sbb
xchg
jecxz
cmp
call
sub
ss
xchg
nop
daa
push
jl
cmpsl
cmp
xor
bnd
jg
jae
mov
fadd
cmpsl
scas
inc
ljmp
adc
push
rclb
xchg
cli
addb
loopne
jle
clc
cmp
pop
loope
xor
pushf
mov
sub
mov
ljmp
cwtl
fstl
out
imul
andl
aaa
xchg
sub
fcoml
js
daa
notl
clc
sbb
push
inc
mov
and
cld
pop
aad
push
jecxz
test
aam
test
push
fstl
adc
sbb
jge
aaa
sub
outsb
lcall
jo
cmp
xlat
jne
cmp
add
outsl
adc
out
in
inc
lock
sbb
enter
sbb
inc
mov
jb
jbe
mov
insl
sub
xchg
sub
pop
and
mov
mov
outsl
dec
inc
cli
xchg
int
mov
test
adc
jmp
pop
clc
dec
xor
dec
cmpsb
fs
mov
add
mov
add
pushf
push
es
lret
pop
mov
fwait
adc
mov
dec
cmp
xchg
mov
and
cmp
xchg
inc
repnz
mov
sbb
lret
dec
pop
mov
loopne
inc
sbb
inc
pop
test
rcll
sub
in
call
inc
fwait
js
mov
ljmp
les
fs
stc
js
sbb
sti
adc
push
dec
insl
push
xor
mov
dec
xchg
cmpsl
outsl
call
jp
popf
jecxz
ljmp
and
pusha
xlat
adc
inc
nop
jmp
sbb
inc
popf
movsb
repz
push
pusha
sbb
jl
and
mov
mov
dec
out
out
xchg
xor
hlt
fisubl
scas
adc
sub
jno
pop
stos
jmp
xor
xchg
push
ja
roll
mov
bound
jl
cmc
hlt
mov
lea
pusha
out
xlat
inc
movsl
ljmp
xchg
stos
gs
sti
mov
jmp
mov
aaa
pusha
cwtl
mov
fdivrl
pop
xchg
sub
pop
lret
cmpl
out
ret
jp
int3
mov
cli
cmpb
fcmovbe
insl
hlt
push
push
ss
andl
popf
jb
dec
cli
jge
fadds
imul
inc
add
pop
inc
lahf
xor
repnz
xor
loop
test
repnz
push
xlat
jae
dec
xchg
cmpsl
in
sub
add
mov
xchg
clc
shll
out
push
or
xchg
push
in
cmp
xor
dec
js
and
and
mov
ficompl
jne
xor
sahf
xchg
cmc
adcl
push
cmp
cmp
push
divl
mov
es
inc
iret
push
mov
pop
lcall
xchg
xchg
pop
push
sbb
sub
add
shl
pop
push
enter
push
pushf
adc
cmpsb
ja
bnd
mov
lret
loopne
std
mov
and
push
cmpsb
lods
ret
mov
sub
sbb
xchg
idivl
push
lods
and
xor
fildll
mov
jp
cltd
cmpb
or
adc
fwait
test
shll
test
jl
lods
call
arpl
popa
and
roll
mov
xchg
pop
cld
mov
inc
out
dec
loope
jns
dec
insb
cmp
out
idivl
aam
jg
mull
lret
loopne
fldenv
popf
mov
pop
mov
inc
clc
out
mov
mov
mov
cmc
aas
incb
fistpll
les
cmp
cmp
test
cmp
popf
fbstp
lods
push
das
in
sub
loopne
out
add
dec
push
aad
repz
mov
dec
or
and
mov
jecxz
popa
fstpt
jns
lret
push
in
movl
mulps
mov
dec
mov
pop
jno
aam
jnp
popf
icebp
pusha
sub
rcrb
in
pop
clc
sbb
hlt
scas
ds
ret
dec
hlt
test
nop
add
cmpsl
pop
jecxz
adc
push
adc
flds
sahf
adc
ss
push
jecxz
shll
sbb
mov
inc
jmp
callw
push
xor
sahf
cltd
sub
iret
mov
dec
mov
add
adc
stc
es
pop
push
daa
out
add
or
lds
or
fldl
dec
xor
icebp
push
pop
cmpsb
sbb
jmp
sbb
cmp
jae
aam
jecxz,pn
outsb
adc
sub
push
cmp
rcrl
arpl
lcall
cmp
cmp
or
int3
push
mov
pop
shrb
cmp
inc
arpl
add
and
out
mov
jnp
lods
push
cmpsl
xor
adc
enter
test
mov
inc
subb
pushf
dec
aad
pop
add
aam
enter
pop
cmc
jno
dec
jns
mov
add
or
andb
and
shr
ja
out
sub
mov
loop
jmp
not
xchg
inc
test
cld
xchg
mov
mov
cwtl
in
adc
clc
sub
sub
or
jge
test
je
adc
jmp
mov
dec
and
mov
je
lcall
dec
in
push
loopne
xchg
pop
xor
jbe
jle
out
sbb
inc
outsb
or
cld
test
mov
in
or
jle
pop
sub
insl
out
cli
cmp
es
mov
cmpsb
lods
push
daa
vxorps
adc
neg
mov
jno
lret
sub
idivb
and
mov
xchg
enter
stos
sub
or
loop
hlt
dec
test
cmp
fcomi
fiaddl
subb
mov
aaa
jns
jae
cmpsl
mov
jmp
mov
popfw
jns
jecxz
mov
sbb
stos
adc
pop
iret
xchg
push
in
mov
fdivl
gs
out
out
dec
test
mov
and
add
in
cmp
sarl
jp
xchg
add
inc
loope
ja
lahf
lock
cmp
out
loope
cmp
lods
cmc
fsubl
stos
pop
add
jne
fdivl
std
jl
dec
out
dec
push
xchg
in
xor
les
xor
mov
jmp
data16
and
add
popf
outsb
sub
les
test
lret
or
sti
mov
cmc
mov
mov
push
jbe
and
push
cmp
cmovb
mov
inc
daa
or
ret
lcall
inc
dec
cmc
mov
sbb
inc
and
adc
imul
outsl
inc
rclb
je
or
xchg
xchg
pop
cmpb
add
inc
fcmovu
mov
popf
gs
call
push
mov
pop
pop
mov
das
pop
and
mov
out
mov
imul
movsb
add
xlat
pop
dec
cmp
stos
adc
cmpsl
pushf
popa
subb
and
es
cmpsl
filds
cld
xchg
cmp
mov
lock
and
cmp
push
stos
int
jne
sahf
les
ljmp
cwtl
inc
mov
loop
xchg
push
or
pop
or
or
lods
inc
cli
jb
clc
sbb
fimuls
cwtl
daa
mov
stos
shr
or
jl
and
movsl
jecxz
es
pop
out
repz
add
inc
imul
imul
testl
ficoml
les
fidivrl
leave
push
cmp
or
mov
or
mov
push
fstl
iret
loope
orl
cmp
ret
cmp
push
pop
inc
test
test
push
xchg
notl
ret
push
stc
sbb
imul
lahf
int3
test
pop
test
stc
fldl
adc
shrl
pop
insl
cld
lods
loope
rorb
or
faddl
xchg
arpl
add
int3
int3
imul
jge
in
ret
fistpl
lcall
paddd
or
xchg
and
daa
pop
les
call
jmp
inc
xor
jecxz
fiaddl
ret
inc
jns
dec
sti
dec
mov
rcll
pop
insl
sbb
sbb
lods
adc
cld
mov
cltd
and
xor
lahf
les
xchg
lret
mov
cld
push
les
jecxz
imul
or
and
jns
int
mov
loop
aas
ret
data16
out
pushf
in
pop
dec
clc
mov
data16
xor
add
pop
xor
adc
nop
outsl
or
add
imul
outsl
pop
add
inc
xchg
dec
scas
jb
mov
lock
and
sarl
and
sarb
lods
xchg
bound
inc
in
stos
scas
repnz
shl
cltd
jo
cmp
pop
clc
push
pop
cli
xlat
mov
and
stos
inc
inc
push
ja
jnp
jnp
push
imul
xor
or
clc
test
jo
pop
pop
std
mov
mov
insb
jg
imul
xor
bound
mov
mov
leave
adc
push
push
call
loopne
repnz
rcrl
xchg
jnp
mov
mov
cmp
in
and
adc
mov
xchg
xchg
cmp
gs
jnp
cs
lods
mov
xor
and
mov
xchg
out
sub
inc
sub
clc
or
sahf
push
mov
adc
dec
mov
jecxz
xlat
lcall
scas
inc
das
lahf
adc
fst
add
mov
lods
in
imul
add
or
sbb
addr16
cmp
dec
push
cmpsl
jge
cs
sbb
mov
clc
cwtl
mov
mov
dec
sbb
fisubl
mov
lahf
xchg
push
xchg
inc
leave
fs
cli
adc
jns
movsl
push
rcll
pop
dec
js
push
cmpsl
xlat
cmp
add
mov
jmp
xchg
gs
imul
or
lock
imul
pop
std
push
push
jbe
outsl
lods
leave
iret
lahf
sub
in
add
loop
pusha
push
push
cmc
jnp
xor
push
fnstsw
xor
cmp
or
scas
mov
sahf
adc
cmpsb
add
cmpsb
fcomip
enter
aaa
mov
jnp
dec
scas
sahf
pop
mov
pop
sbb
orl
xor
imul
hlt
mov
pop
mov
popa
aam
lahf
aaa
jg
ja
and
lret
jecxz
fwait
es
sbb
loop
mov
push
mov
pop
lods
call
jnp
push
loope
lds
aam
ja
mov
dec
sub
sbb
jbe
stos
add
rclb
aaa
add
or
pop
outsb
and
in
and
ret
jmp
lcall
gs
enter
mov
movsb
je
data16
push
les
ret
rorl
cmp
sahf
clc
xchg
stos
pop
leave
aam
push
into
call
aas
xchg
lret
add
movl
pcmpgtb
xor
in
out
mov
loop
fiaddl
and
dec
ret
jnp
ror
test
mov
jne
and
sbb
sbb
xchg
dec
cmp
popf
int
sbb
xor
jle
inc
sbb
enter
lret
js
aas
je
arpl
dec
les
loope
sbb
cwtl
dec
or
pop
imul
or
pop
js
insb
int
inc
xor
cld
jo
cmp
les
je
aad
adc
sbb
loop
mov
push
call
outsl
pop
icebp
mov
or
js
call
lods
lcall
adc
int
sub
xor
and
movsl
add
pminsw
mov
sub
add
leave
jle
call
mov
and
lahf
adc
out
jnp
imul
or
mov
in
dec
cmp
cmpsl
or
mov
test
je
shrb
add
sub
jl
je
dec
push
and
xchg
mov
xorb
push
xor
bnd
mov
pop
jno
sub
xchg
rcrb
inc
adc
jne
dec
sub
loopne
jmp
adc
lahf
cld
mov
fwait
cld
arpl
popf
sub
pop
jl
call
in
jnp
cmpsl
cmp
mov
das
push
loop
je
mov
adc
ret
aad
jo
cmpsl
jp
jae
fs
movl
fwait
int
adc
fistpl
mov
ja
psrld
enter
dec
pushf
or
pop
js
adc
cmp
lock
xchg
xchg
xchg
les
push
fs
repz
inc
lcall
shlb
data16
orl
push
or
sar
lods
add
pop
je
lds
test
jmp
pushf
jae
ja
icebp
pop
pop
xor
pop
lret
andb
js
out
mov
ret
mov
repz
jmp
ljmp
mov
out
mov
aam
shll
iret
and
fsubrs
pop
fimull
shll
rcrb
hlt
dec
arpl
xchg
scas
ss
mov
fwait
bound
les
in
mov
and
pop
dec
push
rcl
outsl
pop
mov
or
mov
cmp
jbe
push
xchg
data16
or
mov
inc
push
popa
cmp
jle
pop
cmp
stos
jne
or
pop
jmp
xchg
inc
xchg
clc
int3
mov
mov
or
cmp
jp
xchg
pop
mov
jno
es
out
mov
pop
xchg
ljmp
ret
inc
fmuls
inc
cwtl
movsb
dec
mov
popf
stos
add
push
push
fsubrl
popa
out
xchg
test
cmp
imul
lds
push
sbb
adc
out
out
mov
or
ret
and
fsubrl
push
xchg
inc
dec
adc
adc
fidivs
mov
fildl
xchg
pop
and
lock
xlat
pop
xchg
ret
sahf
pop
jo
sbb
mov
lock
test
movsl
test
inc
sub
mov
xchg
sub
cmp
xchg
xor
sub
jp
sti
push
inc
jl
lcall
flds
fcomps
aas
add
stos
add
xchg
jnp
xchg
jl
push
popf
push
adc
dec
cs
xchg
out
in
repnz
jl
mov
mov
call
mov
add
xlat
mov
loopne
call
sbb
fninit
sti
insb
cmpsl
mov
mov
lea
popa
scas
inc
fnsave
hlt
fnstcw
pop
fsubr
adcb
xor
adc
pop
pop
jge
pushf
sub
pop
cld
adc
push
dec
jle
adc
or
adc
pusha
enter
addr16
shrl
xchg
nop
aam
test
arpl
mov
stos
and
xor
aad
push
mov
divb
jge
xchg
test
jae
dec
xor
incb
hlt
pop
mov
call
out
iret
mov
sub
daa
aam
lahf
lock
cmp
and
jne
notl
jo
test
jl
inc
test
ret
add
ljmp
enter
loopne
jbe
je
sbb
out
fidivrs
ss
adc
stos
call
scas
out
push
add
xchg
outsb
shl
and
icebp
push
popf
rcrl
xor
cwtl
out
cmp
inc
mov
rcrl
push
push
scas
sbb
push
push
inc
fdivl
aaa
adc
test
xlat
in
and
xor
push
jo
pop
mov
fdivrs
add
mov
xchg
jp
inc
sbb
inc
xlat
push
test
mov
inc
and
daa
clc
aaa
rcrb
cmp
adc
ja
and
enter
mov
add
push
dec
push
mov
dec
pop
jo
bound
int
mov
stos
cmp
and
mov
popa
or
and
mov
xlat
sub
mov
xchg
jmp
sbb
adc
push
mov
sahf
ljmp
inc
cltd
or
pop
insb
mov
outsb
jnp
push
lds
mov
and
in
jg
repz
jo
pop
xchg
xor
push
iret
hlt
xor
ret
test
sarl
fmuls
aas
fdivs
iret
cmp
jns
into
xchg
pusha
sub
lret
push
int3
pop
and
aas
lahf
inc
cli
dec
sub
enter
popf
arpl
fdivrs
push
inc
loopne
fs
mov
jb
jle
das
cmp
dec
dec
insl
mov
lods
loope
add
js
and
scas
add
mov
push
push
fs
adc
inc
stos
cld
xor
cld
inc
test
xchg
test
cld
movsb
and
xchg
aaa
rcrb
aaa
daa
or
int
or
jne
pusha
adc
nop
shlb
jne
and
popf
das
sarb
out
and
cs
outsb
or
jle
outsb
mov
inc
push
xchg
mov
das
pushf
mov
adc
or
test
add
inc
aas
mov
xchg
std
mov
jns
js
shl
push
icebp
mov
jmp
pop
add
lock
fcoml
mov
cmp
repz
arpl
lods
adc
or
dec
popf
mov
int3
repz
cltd
pop
ds
push
iret
ja
mov
ja
xor
and
outsl
xchg
dec
scas
negl
xchg
xorb
mov
enter
add
jp
test
testl
inc
movb
data16
pushfw
jmp
enter
jo
cmpsb
xchg
or
pushl
scas
jnp
push
sbb
add
pop
in
stos
jl
rorb
cltd
xchg
and
lods
mov
and
mov
pop
out
push
stos
lret
dec
repnz
scas
xor
mov
stc
imul
jae
push
mov
inc
test
jmp
aaa
icebp
mov
insb
pop
fdivrs
fs
mov
jnp
push
dec
das
pop
cs
cmp
jl
add
fldt
ja
shlb
push
test
jns
cmp
dec
int3
andw
mov
test
inc
jle
mov
hlt
and
sub
pop
sbb
add
adcb
data16
adc
mov
test
repnz
mov
cld
inc
xchg
mov
add
add
inc
adc
xchg
cld
divl
adc
mov
ja
inc
xchg
push
mov
cwtl
pop
inc
fldenv
mov
push
add
into
push
jle
inc
cs
clc
xor
test
cs
xchg
sub
pop
push
mov
dec
sar
lea
pop
inc
insb
jge
or
sahf
outsb
pop
mov
or
mov
pop
adc
jb
sbb
xchg
adc
idivl
dec
inc
std
sbb
cmp
in
insb
adcl
scas
insb
push
inc
icebp
adc
es
call
out
mov
fcomp
aas
mov
mov
cmp
adc
xlat
jne
shrb
sub
mov
fdivrl
out
inc
out
adc
push
jmp
int
mov
push
xor
fs
sub
mov
aas
mov
pop
mov
mov
push
test
jg
lea
inc
xor
dec
cltd
pop
adc
lret
xchg
push
adc
mov
dec
enter
push
pushf
push
dec
test
test
sbb
mov
inc
push
nop
push
outsb
imul
xlat
lcall
nop
lea
xor
insb
ret
andl
sub
lods
imul
in
push
sub
push
and
jno
cwtl
cmp
xchg
sub
jae
cmc
stos
sub
mov
sub
mov
test
mov
aad
xor
mov
mov
stc
dec
sub
es
cltd
je
cmp
std
jg
data16
call
cli
femms
jp,pt
not
xchg
xor
cmp
std
mov
imull
mov
sub
sarl
dec
xchg
and
inc
ljmp
lcall
xor
adc
mov
repz
rol
dec
mov
mov
sbb
movsl
or
mov
lods
push
inc
add
xorb
or
stc
cltd
ja
addl
xor
xchg
fxam
das
sub
add
sbb
lcall
out
ja
insb
jb
mov
jecxz
lock
mov
pushf
sarb
jmp
xchg
pop
clc
jae
in
test
lods
sbb
js
fsubrs
pop
stc
mov
js
xchg
pop
pop
aad
and
sbb
jmp
popl
adc
insl
xchg
inc
pop
int3
fildll
pop
jbe
aas
adc
outsl
fcmovne
mov
jge
and
adc
test
std
pop
decb
in
sub
mov
sub
or
dec
pop
push
jnp
inc
stos
inc
adcl
push
push
xchg
cmc
add
push
daa
lret
or
xchg
int3
repz
push
push
xchg
sarl
insl
fidivrs
cwtl
cmp
jb
or
cmpsl
sbb
addr16
push
cmp
addr16
movsb
sub
inc
ds
cmc
xor
jmp
scas
ret
mov
push
lcall
test
xor
js
push
lods
mov
add
ljmp
inc
clc
test
stos
sbb
incl
lret
pop
shrl
jp
int3
jb
add
push
jp
or
dec
es
in
test
sbb
arpl
push
out
pop
cmp
xchg
into
xchg
push
add
int3
adcb
cmpsl
push
in
int
scas
bound
adc
mov
sub
pusha
pop
xchg
pop
das
loop
call
int
pop
xchg
ljmp
dec
push
mov
call
ret
mov
xchg
inc
sub
mov
out
scas
clc
jg
and
sti
aas
dec
hlt
leave
js
stos
scas
sub
loop
mov
cmp
rcr
xor
je
cmp
lcall
addr16
push
mov
insl
sub
push
adc
fldl
and
nop
jns
pusha
fwait
nop
jo
bound
cwtl
and
nop
push
xorl
nopl
inc
push
rclb
mov
ss
xor
divl
sub
aam
ja
and
vmaxpd
adc
adc
mov
dec
sbb
dec
cltd
mov
cmpsl
data16
das
cmp
mov
icebp
out
pop
rcr
cmp
test
popa
js
dec
jbe
push
in
cli
aaa
clc
and
xchg
addb
add
aam
pop
jecxz
stc
pop
mov
cmp
rcr
xor
aaa
or
out
dec
mov
push
fsubl
add
repnz
cmp
roll
xchg
out
sbb
inc
and
cmc
cmp
jb
dec
xor
adc
mov
js
push
xchg
rorl
xchg
sbb
mov
sub
jo
push
mov
dec
mov
int
imul
gs
or
xchg
or
push
fisttpl
pop
cltd
add
repz
mov
inc
orb
push
and
or
sbb
xchg
fnstcw
dec
decl
mov
scas
into
mov
xor
push
enter
pop
imul
sbb
xchg
rcrb
mov
and
cmp
mov
insl
mov
shl
cmpsl
pop
fcoms
mov
mov
ret
shl
sbb
es
mov
mov
jp
sbb
pop
lcall
sub
pop
aas
push
fadds
mov
mov
adc
cwtl
push
int
cwtl
mov
inc
pop
mov
mov
inc
into
push
dec
cld
cld
jecxz
out
xchg
adc
push
pop
popf
bound
adc
jb
nop
mov
adc
lea
sarb
mov
shrl
std
and
sub
mov
mov
lock
repz
jbe
movsl
lea
push
pop
fstl
mov
rolb
fsubs
pop
and
jnp
and
cmp
adc
sub
mov
aad
mov
inc
subl
sti
pop
jmp
or
inc
mov
jge
xorb
adc
frstor
loopne
push
out
mov
sbbb
leave
rclb
sbb
mov
outsl
negl
cld
or
xchg
dec
pop
mov
int
loopne
arpl
dec
pop
adc
jle
js
sti
outsl
std
add
call
sub
xchg
add
inc
inc
jne
fsub
pop
mov
mov
int3
jae
ret
in
mov
mov
add
adc
lret
stc
inc
int
insb
cltd
enter
fdecstp
cmp
ret
mov
lcall
dec
ret
inc
int3
lcall
mov
mov
mov
into
out
sbb
shrb
popa
cs
mov
lahf
jl
push
idivl
mov
mov
jns
in
scas
push
lret
cmpsb
stc
mov
insb
scas
mov
iret
cwtl
mov
pop
lock
data16
sub
dec
sbb
aas
xlat
fwait
mov
xchg
data16
and
xchg
dec
xor
cmp
pop
leave
lret
in
and
insb
jl
push
movsb
pushf
test
xor
jne
xchg
cmp
or
js
cmp
and
mov
xchg
fdivr
add
sub
and
or
inc
repz
in
mov
add
and
negb
lret
and
scas
mov
xor
push
or
inc
push
mov
pop
sbb
and
pusha
jne
or
imul
stos
sbb
mov
xchg
mov
sub
sub
xchg
cwtl
adc
xor
daa
out
and
arpl
xchg
hlt
push
sahf
mov
out
mov
leave
or
in
add
inc
daa
cmpsl
daa
xchg
add
pop
xchg
test
push
push
in
mov
mov
setns
or
loop
outsl
adc
leave
imul
sub
cmc
cmp
gs
cld
push
in
lahf
push
inc
pop
push
ljmp
imul
outsl
mov
into
and
jge
mov
cmc
push
sbb
aam
inc
xchg
stos
pop
bound
jmp
jns
fcoms
cmp
pop
xchg
insl
adc
stos
mov
ror
pop
insb
mov
ljmp
movsb
xlat
pop
daa
repnz
bound
xor
ret
add
or
or
pop
xchg
bound
iret
shrl
mov
add
mov
mov
es
jae
fwait
pop
add
add
ds
or
or
mov
int3
fs
js
mov
testb
sbb
movsl
loopne
mov
pushl
mov
push
sti
and
ret
adc
jno
pop
lods
or
sbb
rcll
cmp
addr16
lcall
jmp
cmp
or
mov
mov
add
std
iret
in
jecxz
push
xor
lcall
xor
pop
dec
js
movsl
lahf
std
inc
and
add
cmp
mov
jecxz
mov
test
push
dec
inc
push
dec
mov
mov
in
shlb
mov
jo
adc
pop
push
xor
jmp
and
mov
stos
ret
les
enter
pop
in
es
fildll
loopne
das
or
push
ficomps
pop
sbb
push
xor
out
jnp
call
je
or
arpl
adc
movsb
ret
xchg
sbb
jmp
jle
xor
test
out
stos
jae
xor
sub
mov
push
mov
lret
popa
orb
fisubl
add
inc
std
adc
xorb
inc
gs
sub
xchg
and
sub
dec
cmp
mov
fcompl
mov
cli
push
xchg
filds
cmp
imul
xor
cmpsl
sub
daa
call
ret
stos
cmp
or
shlb
test
add
int3
push
sub
cmc
cmp
int
or
add
scas
add
stos
aaa
aad
sti
in
pop
nop
lock
scas
mov
sbb
add
add
fstps
ds
cmp
fs
rolb
shll
sub
jnp
mov
push
loope
xor
or
mov
jmp
push
ja
lea
arpl
cld
in
mov
mov
xchg
add
lahf
imul
jbe
ljmp
cs
or
aam
dec
scas
fwait
pushf
cld
mov
stos
or
adc
fbstp
jb
sub
and
mov
pusha
xchg
and
cmp
push
loop
in
sub
jecxz
gs
sub
mov
sub
or
imul
jnp
jg
sub
cmpsl
daa
loopne
into
nop
rorb
mov
mov
outsl
push
mov
fsubl
sbb
xchg
loopne
out
fld1
xchg
loop
sbb
add
ss
xchg
mov
lret
adc
test
mov
out
stc
push
xor
add
aad
jne
inc
push
imul
stc
aam
add
xchg
loop
lret
jns
sub
cmp
adc
jle
dec
xchg
out
enter
dec
lahf
push
and
push
dec
sbb
fnstenv
jns
and
movsl
and
addb
sbb
mov
adc
gs
test
ds
hlt
push
imul
pop
jg
imul
adc
ja
jnp
es
nop
or
jle
jo
pop
cmp
jo
sub
pop
aam
cld
test
stos
or
dec
fcmovne
cmp
scas
fistps
and
jo
call
stos
lret
mov
add
jecxz
add
jb
hlt
insb
test
fwait
pop
xchg
add
les
add
idiv
cld
jge
pop
rcl
sbbl
mov
dec
jno
mov
subl
mov
mov
and
mov
mov
hlt
mov
out
sahf
scas
cmp
push
sbb
insl
xchg
popf
inc
jo
pushf
sub
inc
fimull
xor
push
jns
jno
xchg
leave
adc
jg
sarl
mov
pop
push
ficomps
mov
inc
xchg
inc
and
imul
push
xchg
dec
shlb
pusha
cmc
mov
inc
outsl
pop
add
adc
push
or
insb
je
mov
dec
test
sbb
xor
sbb
mov
scas
adc
test
je
bound
cmp
mov
pop
imulb
je
ja
arpl
mov
out
out
mov
fs
fstpl
mov
pop
mov
jge
adc
cmp
fstps
int
pop
addr16
push
jp
mov
add
aaa
push
enter
cltd
mov
dec
push
mov
call
push
lret
dec
cmp
jns
pop
js
jbe
mov
dec
mov
insb
pusha
push
dec
pop
inc
movsb
fmulp
push
sbb
push
addr16
movsl
xchg
loop
andb
mov
fdivrp
rcrl
movsb
aas
repnz
mov
fcoms
daa
add
adc
mov
sarb
ljmp
insl
push
mov
aam
lahf
or
fucomip
imul
popf
jb
sub
je
loopne
and
roll
mov
push
notl
sbb
xor
dec
mov
sar
aas
jae
adc
mov
xchg
lds
mov
add
inc
call
in
mov
push
dec
fistpl
insb
aam
mov
rorl
fists
pusha
les
xor
loop
mov
arpl
jne
bound
shl
not
movsl
or
or
fcomps
repnz
mov
lret
adc
test
into
fstps
ja
mov
scas
mov
leave
jg
sbb
push
cmpl
push
dec
fsubrp
fs
xchg
fnstsw
es
imul
dec
scas
mov
rcrb
test
xlat
movb
inc
es
mov
xchg
roll
and
loope
xor
ds
jne
sbb
push
icebp
mov
pop
mov
fsub
popa
ds
int
addr16
ret
gs
arpl
imul
and
dec
jbe
jmp
ds
stc
lcall
mov
cmc
xchg
mov
clc
mov
hlt
data16
imul
xor
outsl
sbb
imulb
adc
cmc
jnp
out
addr16
fisttpll
add
sbb
ja
pop
jbe
stos
mov
mov
cli
insb
adc
sbb
aad
push
add
sahf
push
dec
mov
adc
jo
fistpl
mov
pushf
jne
imull
cmp
push
test
jp
out
sub
leave
cmp
cmp
and
rcrw
mov
cmpsl
call
fwait
sub
rorb
sub
ret
insl
fdivs
inc
leave
xor
rorl
mov
pop
mov
xor
scas
gs
pop
in
pop
inc
int3
xor
mov
xor
int
call
add
cmp
cwtl
int
xchg
cmp
leave
mov
hlt
pop
adc
in
sarl
push
out
push
cmpsb
ss
jae
imulb
orb
rcr
std
push
dec
das
test
outsb
shl
add
push
fisttpll
cmp
das
enter
loope
xor
ljmp
xchg
inc
dec
add
push
scas
divl
clc
movsb
stos
ljmp
adc
jns
push
inc
shll
lea
mov
push
dec
inc
mov
daa
push
or
fbld
dec
fs
mov
lods
sbb
jge
ja
in
insl
lcall
push
movsb
neg
enter
cmp
push
adc
dec
sub
lret
repnz
test
and
js
mov
mov
in
aas
cmc
mov
xchg
sti
or
ret
inc
sub
dec
addb
jl
in
pop
and
shrb
mov
sahf
mov
push
sub
mov
jno
add
fcomp
jl
mov
mov
loopne
incl
fcmovb
jne
pop
out
ret
daa
dec
xor
cld
xor
popf
xor
ds
mov
stos
iret
jbe
mov
fs
mov
mov
decl
jo
out
xchg
aaa
and
xchg
movb
cmp
push
sbb
push
pop
pusha
and
jnp
cmpsl
jns
mov
cs
and
movsb
and
pop
pop
jle
pop
mov
rcrb
in
nop
push
outsb
sub
sbb
add
jae
xchg
scas
jbe
fucomp
cmp
push
or
mov
or
filds
push
cmc
gs
xchg
or
out
push
cmpsl
decl
sub
fadds
stos
adc
in
jl
aad
mov
popf
imul
sub
pushf
hlt
aas
outsl
mov
adc
jno
mov
call
out
or
push
inc
xlat
and
fadds
sbb
adc
test
fdivrs
xchg
cmp
sbb
clc
imul
push
jmp
adc
push
mov
or
sub
cmp
int3
or
sub
jmp
fdivl
sahf
jae
sarb
xor
shl
lret
aaa
pop
lea
mov
cmp
enter
std
mov
sub
jmp
sbb
js
push
les
push
shlb
orl
cmp
cmpsb
fcoml
xor
pop
inc
inc
push
push
cmp
outsb
iret
shrl
add
and
lock
inc
mov
push
adc
sti
inc
int3
cltd
jl
fldenv
lock
xchg
loop
fbstp
icebp
sbb
sbb
cmpsb
adc
dec
inc
pop
jb
stc
jmp
icebp
mov
test
pop
dec
inc
xor
popf
jbe
dec
xor
lahf
aad
cmp
decl
push
sahf
outsl
popa
daa
adc
icebp
inc
insb
add
adc
sahf
xchg
mov
sbb
in
sub
out
movsl
jno
mov
dec
fstpl
dec
inc
mov
scas
dec
xchg
add
popa
jle
inc
sbb
mov
sub
add
push
iret
jo
mov
ret
mov
arpl
push
mov
sbb
iret
lcall
sub
sahf
inc
mov
test
dec
mov
sbb
fldenv
js
push
into
leave
jns
addr16
push
leave
xchg
roll
roll
mov
jp
popa
push
adc
loop
cmpsb
stos
idivl
out
cmc
push
gs
rcl
jge
incb
and
xchg
imul
fadd
xchg
add
test
mov
cli
lods
sbb
or
mov
push
mov
adc
fcomp
fs
dec
xchg
mov
out
arpl
xor
adc
out
or
add
cmp
test
push
idivb
adc
mov
subl
mov
jo
aaa
mov
jb
jns
mov
mov
dec
stc
in
mov
scas
notl
mov
mov
and
subl
dec
hlt
mov
add
data16
push
mov
aad
pop
jle
cmp
adc
je
stos
imulb
jg
and
cs
bound
mov
cmp
jo
popa
jl
push
xor
mov
shrb
add
jbe
push
inc
jnp
mov
add
pop
adc
inc
in
mov
mov
add
add
xor
and
faddp
clc
cmp
push
mov
pop
lret
pop
mov
repnz
mov
repnz
mov
pusha
in
inc
hlt
inc
xlat
in
call
test
out
xor
add
jae
enter
xorb
sub
fsubrs
push
outsl
jle
test
inc
pop
cs
imul
adc
out
adc
or
xchg
xor
lea
add
and
inc
je
pusha
fwait
pop
fmull
mov
mov
into
jnp
shrb
rcrb
imul
sub
mov
ret
loop
cmp
in
sbb
jg
ds
sub
insb
jmp
xchg
ss
xchg
mov
outsl
addl
xchg
aam
mov
clc
and
xchg
inc
xchg
and
inc
lea
xor
cld
mull
enter
inc
pop
iret
and
int3
or
jg
addb
push
out
mov
hlt
mov
inc
dec
jle
xchg
mov
mov
data16
dec
jmp
fldt
sbb
mov
pop
push
pop
stos
sub
and
push
inc
jo
mov
inc
loop
aas
mov
mov
cmp
add
push
cmpsl
shr
les
or
and
jmp
xchg
pop
adc
xchg
lret
es
sbb
leave
sahf
or
pop
add
inc
dec
dec
test
aad
fstpl
xchg
add
or
xor
and
in
in
icebp
mov
inc
add
xchg
mov
dec
mov
jns
dec
push
push
ja
out
imul
flds
mov
jae
sub
rclb
sti
mov
cltd
std
inc
ss
cwtl
cltd
psubq
cmp
ja
mov
mov
jp
mov
gs
push
add
pop
outsl
xor
xchg
dec
mov
pop
icebp
cs
xchg
dec
or
gs
imul
jecxz
js
adc
lea
inc
pushf
mov
repz
jge
loop
repnz
js
jo
push
aad
sbb
call
xchg
and
les
push
push
test
ret
leave
sbb
and
xor
arpl
pop
jmp
addr16
pop
arpl
data16
aaa
jl
aad
test
movsb
insl
cmp
jp
push
fcmovu
fldcw
pop
adcb
xchg
sbb
adc
sbb
pop
add
leave
push
pop
mov
adc
jl
nop
add
imul
sahf
pop
loope
clc
in
cmp
divl
mov
es
add
jo
or
ja
ds
movsb
pop
ret
or
dec
dec
mov
lods
adc
js
push
jbe
repz
out
xchg
mov
push
sub
adc
cmp
mov
jbe
into
mov
cmp
mov
sub
sub
xor
divps
jl
gs
adc
jne
inc
test
mov
sahf
jg
daa
popf
lock
dec
dec
pop
loope
jae
sbb
sbb
lock
shlb
out
in
sub
inc
push
sbb
pusha
pusha
jp
pushf
lea
andb
shl
mov
shlb
push
das
mov
es
sub
mov
ds
pop
pop
sub
dec
push
or
addl
mov
jg
jno
mov
or
aad
ret
popa
pop
test
data16
test
popf
and
jno
pop
lea
lret
shlb
stos
inc
enter
aam
jno
push
push
in
icebp
enter
push
mov
scas
rolb
pop
pop
sbb
or
das
adc
ret
jns
into
fsubrs
pop
dec
mov
sub
mov
scas
mov
ret
add
jbe
iret
pop
dec
add
cmp
adc
js
dec
sub
adc
movl
dec
out
jmp
push
sub
repz
sub
xchg
imulb
sub
aad
ja
dec
orl
inc
sbb
mov
inc
push
loope
inc
mov
dec
popf
pop
cwtl
jnp
jl
or
out
sub
cmp
pop
arpl
mov
aad
mov
pushf
stc
pop
sar
shr
daa
mov
inc
cmp
aam
fidivl
and
fistpl
push
ja
test
add
push
loope
jae
jp
inc
ja
dec
in
mov
test
and
test
ja
xlat
cltd
arpl
sar
out
cmp
add
mov
shll
out
pop
jmp
push
lret
shl
xchg
xor
dec
mov
pop
icebp
xchg
daa
repz
sarb
sti
and
jno
cmp
push
jo
dec
mov
fidivl
ss
pop
xor
lea
push
popa
fs
inc
imul
dec
sbb
pushl
fadds
dec
push
outsb
gs
push
add
add
in
cmp
es
jns
shrb
jbe
mov
xor
in
out
cld
stos
mov
addb
dec
sahf
and
xlat
insl
mov
mov
jg
outsl
xor
xchg
dec
or
and
arpl
pop
jmp
pusha
cmc
imul
sbb
lds
inc
cmp
mov
dec
fcomi
mov
pop
mov
roll
push
mov
cli
repnz
sbb
mov
mov
lods
mov
sti
fucom
imul
fmul
lret
mov
in
and
cmpsb
js
into
mov
je
lods
and
cmpsb
ljmp
mov
lods
loopne
js
xor
movsl
out
pop
xchg
loope
and
dec
jns
cmp
xchg
push
dec
aam
pusha
push
mov
test
je
xchg
sub
jb
jp
mov
xchg
xchg
xor
push
xor
xor
in
clc
mov
sarl
sub
cmp
sbb
sbb
test
pop
mov
cltd
stos
scas
repz
pop
mov
xchg
add
mov
cmpb
sarb
add
sub
ret
mov
xor
jns
xchg
iret
mov
inc
scas
jne
jg
add
xchg
aam
push
or
bound
les
cmp
pop
cmp
fisubs
in
scas
xchg
nop
ljmp
clc
push
mov
ret
int3
sbb
sbb
xlat
mov
mov
mov
sbb
sub
sarl
lret
das
aam
push
pop
pop
ret
imul
mov
fwait
sti
and
inc
les
mov
or
sbb
or
xor
loope
adc
xchg
leave
or
lods
push
subl
mov
mov
out
xchg
push
aam
addr16
add
cmp
lds
xchg
mov
inc
scas
pop
cmc
lods
jmp
test
scas
cmp
fildll
stc
adc
mov
lret
mov
int3
adc
jge
ja
mov
dec
shll
jl
sub
es
ficomps
push
lret
je
push
mov
xor
push
test
sti
jecxz
dec
shrl
mov
and
and
rorb
jge
xor
repz
cmp
rorl
aad
lods
das
jp
rcr
hlt
cmp
mov
xorb
ret
fidivs
push
push
stos
mov
sub
iret
push
lea
cmp
lds
mov
call
cmpsl
xchg
cmpsb
jae
int
ret
jno
mov
addr16
pop
testl
addr16
mov
mov
push
mov
sti
cwtl
jge
sbb
pusha
and
gs
dec
xlat
test
pop
testl
mov
add
dec
dec
push
das
pusha
aas
push
sarb
imul
stc
sar
ds
sub
cmpl
enter
sub
lods
dec
in
adc
lret
negl
in
xor
stos
fs
inc
test
sub
int3
xchg
mov
outsl
xor
in
scas
sbb
sbb
ljmp
stos
lock
pop
aaa
icebp
shlb
cmp
sarb
xor
jmp
pop
jge
sub
dec
inc
add
sub
xchg
sub
pushf
ret
addr16
out
fwait
add
mov
push
sbb
in
lcall
sub
les
xchg
enter
pop
aad
rcrb
inc
xor
in
mov
mov
insb
imul
jae
and
mov
lcall
xchg
mov
shr
repz
sbb
xchg
test
mov
out
mov
andl
clc
dec
lds
stos
das
nop
test
fdivrs
push
scas
or
adc
mov
sub
sbb
xchg
and
stos
mov
test
push
jge
fmull
ja
fadd
mov
pop
movsb
fcomp
inc
dec
push
mov
mov
dec
insb
xchg
mov
ret
sub
imul
insb
mov
and
cmpsb
test
lret
push
mov
add
dec
clc
aaa
mulb
mov
inc
lods
add
lds
ficomps
lods
push
mov
push
xor
pusha
xchg
jo
xor
scas
test
cld
jle
xlat
push
lock
negl
rcr
gs
lods
jae
adc
sbb
shll
aas
mov
test
stos
fdivs
outsb
cmpsl
fldcw
cmp
testl
or
jnp
push
jb
jnp
pop
xor
push
leave
scas
mov
les
stc
lcall
ret
jae
loop
pop
xchg
pop
fcmovbe
xor
sbb
mov
vphaddwd
add
push
adcb
popa
xlat
pusha
push
je
cmp
mul
rcrl
adc
aas
rcll
ficompl
addr16
sahf
jb
adc
pop
cmp
fsubr
mov
ds
nop
pop
jae
and
addr16
jnp
mov
es
sub
fdivrl
jo
insl
mov
mov
shrl
cltd
popf
inc
push
push
sahf
dec
jae
in
and
push
out
fcmovbe
and
inc
xchg
jge,pn
cmp
mov
or
mov
or
ja
adc
adc
enter
jns
mov
jmp
pop
or
inc
and
ret
lock
hlt
mov
adc
add
nop
or
pop
inc
and
adc
lds
xchg
jl
sbb
and
pop
sub
add
movb
cltd
rcr
inc
movsb
inc
bound
pop
in
mov
jne
test
inc
mov
adc
test
xchg
inc
dec
cmp
sub
insb
cli
xor
insl
aas
xor
scas
xor
outsb
scas
in
stos
jnp
dec
mov
imul
data16
sub
sbb
lret
aam
xor
jnp
push
push
andb
cmc
inc
loop
pop
adc
mov
call
lea
add
rcl
movsl
push
jecxz
sbb
lods
movsb
xchg
cmp
rcll
cmp
sti
test
push
hlt
cmc
fwait
pop
shrb
arpl
test
inc
sub
popa
add
cwtl
fadd
push
push
hlt
jle
pop
movsb
pop
sbb
ficoml
jne
lock
cli
and
add
repz
cmp
xchg
add
xchg
enter
cli
mov
adc
jge
in
fcoms
loop
lock
inc
mov
lret
cmp
andl
push
popf
or
hlt
mov
mov
lret
pop
jae
add
cmpsl
inc
inc
xor
mov
cld
into
mov
imul
test
shll
popa
cmp
jne
sub
xchg
iret
push
adc
push
dec
jno
jle
mov
lock
push
pop
nop
lods
das
pop
mov
jb
adc
lret
cltd
add
imul
repz
fimull
mov
pop
jl
gs
dec
sar
inc
jbe
imul
and
movsb
add
mov
xchg
lret
les
xor
xor
cmp
mov
movsl
inc
out
or
or
add
pusha
add
add
fidivs
push
ret
test
push
cmc
lret
push
fcoml
pop
mov
jp
cltd
cmp
adc
dec
pop
dec
mov
flds
mov
sbb
fwait
jno
cmp
mov
iret
xchg
jle
fcmovnu
gs
xchg
ljmp
xor
push
decl
inc
lret
repz
shlb
and
jp
js
repnz
movsb
push
jb
sahf
jo
cld
sbb
xor
mov
xchg
pop
mov
cmp
mov
cmp
lods
sbb
mov
xchg
loop
jecxz
bound
mov
sbb
jg
pop
adc
into
fwait
jl
cmpsb
fistpll
sbb
mov
ror
push
out
pop
stos
sbb
cmp
lods
outsb
mov
jmp
repnz
jo
ret
pop
cli
cltd
aad
out
sub
and
add
and
ret
cmp
rep
xchg
xor
cli
cmp
das
fs
clc
push
data16
shlb
push
dec
lret
pop
dec
std
cs
mov
and
or
test
jbe
fisttpl
or
xchg
add
cmp
add
xor
je
lods
in
push
imul
mov
js
fsubs
hlt
sbb
nop
cli
pop
roll
sbb
les
movsb
testl
pop
and
in
das
fdiv
xlat
lock
adc
inc
inc
lods
inc
adc
aam
cmp
mov
cwtl
pop
inc
stc
in
test
and
dec
inc
jp
out
pushf
fwait
push
and
fistps
pop
push
movb
adc
test
pusha
sub
lods
pop
cmp
lock
mov
iret
ret
adc
jae
test
cmpsl
cs
xchg
int3
out
push
mov
mov
mov
insb
stos
mov
popa
pop
int3
cmp
loope
jmp
or
sub
adc
inc
in
dec
pop
popa
jo
test
inc
fldenv
fists
ficompl
pop
rorl
imul
fldt
aaa
mov
sub
sbb
aaa
mov
and
dec
mov
cwtl
notl
add
popa
mov
sub
test
xchg
call
jbe
mov
ss
popa
jne
pop
cld
in
sbb
sbb
fistpl
mov
add
jecxz
ds
xchg
jnp
mov
notb
movsb
jl
loope
jmp
fnstsw
ret
cs
loop
leave
cltd
psadbw
xor
push
call
movsb
add
xchg
mov
dec
out
pop
movsb
les
xchg
jne
pop
mov
lods
xorb
pop
sub
cwtl
add
jne
fisttps
mov
fiadds
mov
dec
jnp
lds
adc
in
add
in
xor
in
xor
fcomp
roll
xchg
hlt
adc
mov
add
mov
in
icebp
jp
mov
mov
in
mov
icebp
cmc
or
add
out
mov
hlt
push
mov
mov
jge
inc
test
pop
enter
sahf
repz
mov
add
mov
stos
rcrb
shl
push
mov
popf
cmpb
popf
out
call
jl
push
push
lcall
fistpll
or
arpl
mov
popf
mov
xor
mov
adc
xor
jge
daa
mov
stos
test
les
into
mov
aam
push
sub
clc
sbb
push
in
mov
push
push
xchg
add
das
pop
es
sbb
cltd
mov
ss
call
inc
dec
cmp
ljmp
mov
dec
fadds
cltd
dec
jnp,pn
mov
pop
push
mov
outsb
jecxz
fmul
clc
mov
ret
les
cltd
jae
imul
and
aad
pushf
inc
in
lret
add
pop
jno
std
or
test
cli
sub
pop
jmp
enter
cmpsl
dec
adc
loopne
mov
mov
ja
push
popf
jno
stc
in
jnp
xchg
mov
jge
mov
fstps
inc
sub
jnp
or
loope
fsubr
pop
jge
push
insl
int3
cltd
jecxz
lcall
inc
mov
pop
shrl
jnp
pop
xchg
or
lahf
xchg
sub
call
jecxz
iret
mov
adc
leave
cmpsl
pop
cmp
inc
loopne
mov
ss
sub
fs
add
cli
lds
fisttps
xchg
out
xchg
fcmovb
insb
cmp
repz
sub
jo
addl
ss
adc
dec
fsubs
inc
loope
pop
mov
addr16
or
loope
jo
int3
or
xchg
sbb
dec
out
pop
addr16
adc
fcoml
sbb
mov
mov
xor
in
xor
mov
jge
mov
in
push
cmpb
mov
inc
jp,pt
cmp
sti
and
jecxz
aad
xchg
mov
xlat
adc
ficoms
in
shll
push
dec
mov
sahf
lcall
inc
adc
add
xchg
cmc
gs
mov
mov
pop
std
pop
mov
sub
or
mov
cmp
mov
mov
dec
push
imul
sbb
xor
out
ds
arpl
jge
shl
lods
fincstp
mov
stc
xchg
lret
dec
enter
mov
ljmp
cmpsb
push
mov
data16
mov
add
fiadds
nop
shrb
lods
sbb
mov
pusha
and
dec
cmp
push
xchg
push
dec
arpl
aam
sbb
pop
lods
adc
adc
shrb
push
imul
mov
repz
and
pop
cmpsl
ljmp
xor
cmpsl
int
inc
inc
test
sahf
imul
int
enter
mov
pushf
xchg
sub
xchg
add
adc
repz
mov
xchg
mov
and
push
in
inc
mov
dec
sbb
pop
dec
xchg
jbe
push
mov
das
outsb
jb
jno
out
int3
mov
inc
or
scas
mov
filds
imul
or
into
and
fstpl
xchg
cmpsl
test
cld
push
add
aad
call
in
mov
out
xchg
sbb
je
adc
cld
jae
sbb
sbb
push
inc
fistpl
mov
adc
nop
pop
or
add
or
clc
and
cmp
jle
loope
ss
fstpt
lcall
push
mov
pop
jmp
jae
out
jne
arpl
outsl
divl
ljmp
mov
hlt
shll
pop
orps
inc
insb
or
sbb
mov
jle
repz
in
leave
xchg
add
lahf
in
add
fcmovnbe
ljmp
pop
cmp
add
rcr
xchg
xchg
pop
or
testb
hlt
fdivrl
dec
int
lahf
push
push
adc
insb
pop
icebp
cwtl
out
sbb
icebp
pushf
or
push
lea
mov
sahf
mov
test
insl
in
imul
jmp
xchg
movsb
rsm
lea
add
popf
jp
sub
mov
jp
mov
cmp
lock
lods
leave
out
jnp
or
inc
and
pop
sub
xor
lret
call
out
mov
orb
mov
movsl
inc
add
imul
dec
movsl
push
inc
push
cld
scas
jne
push
push
sbb
jns
sti
call
mov
aaa
movsl
dec
jl
jg
lods
gs
xor
xor
stos
add
repnz
pusha
fcoms
xchg
outsl
cmpl
mov
cmp
inc
int3
scas
push
fnsave
imul
push
out
cld
lods
movsb
and
cmp
jns
pop
pusha
into
jmp
das
cwtl
insl
inc
into
js
add
mov
jecxz
mov
fwait
dec
xor
inc
fildll
pop
push
inc
dec
xor
stc
insb
fildll
stc
test
lea
ds
mov
aam
sbb
scas
ja
jae
into
xor
sub
fisttpl
aaa
xchg
aas
mov
mov
lea
xlat
cmp
cld
jnp
rolb
filds
repnz
sahf
sub
adc
adc
inc
jne
sbb
fcmovne
test
bound
mov
mov
pop
and
clc
testl
stc
sub
stos
jns
sahf
push
add
sub
cld
fnstenv
inc
daa
insl
icebp
cli
ret
insb
adc
jp
mov
test
shrl
fsubs
pop
cwtl
out
push
inc
movsb
fcom
ret
adc
lahf
fwait
pop
adc
pop
adc
loopne
bound
mov
repnz
lret
adc
cmp
xor
bound
xchg
mov
push
ficompl
pop
test
mov
xor
dec
aaa
filds
imul
mov
sbb
push
jl
jae
mov
orb
lret
stos
xchg
push
xchg
fistl
inc
mov
int3
ficoml
xor
stos
lods
add
popa
pushf
push
push
scas
push
sub
frstor
ja
iret
xor
lret
jo
icebp
arpl
imul
or
adc
add
int
andl
out
mov
rcrb
xor
vmovntpd
fdivl
stos
sbbb
scas
mov
xor
adc
pop
lahf
jp
aas
xor
push
stos
sbb
scas
adcb
roll
fmulp
stos
jl
jecxz
out
pop
push
jo
mov
mov
mov
mov
jno
sahf
pop
stos
mov
fdiv
insb
jno
lods
in
lods
pop
push
add
pop
pop
call
pop
fs
fxch
jbe
inc
ja
pop
lcall
shlb
shll
cmpsb
sti
cli
push
in
xchg
xchg
stc
mov
jbe
pop
xchg
mov
bound
pop
into
inc
mov
pop
repz
push
enter
cs
dec
mov
lahf
sti
mov
stos
cmp
sahf
xor
xchg
ret
adc
mov
movsl
addl
and
or
mov
stos
xlat
out
xor
rcr
iret
lcall
jns
loope
test
in
pop
lret
dec
xor
xchg
sub
mov
inc
inc
mov
push
xor
repz
pop
add
add
into
mov
repz
sub
add
or
repnz
pushf
xchg
int3
sbb
cmp
ja
dec
adc
cmpl
arpl
sub
sub
xchg
addr16
ds
icebp
stos
mov
scas
into
sub
movsl
lds
add
sti
jne
mov
lcall
sub
pusha
push
pusha
push
add
mov
lret
jo
outsl
out
icebp
xchg
jmp
fldcw
adc
mov
arpl
fmull
rorb
xor
jno
test
or
shrl
lret
popf
mov
addr16
dec
fildll
sbb
jnp
push
pop
add
cmp
cmp
or
and
push
adc
imul
ret
and
push
mov
jle
fstl
daa
xorb
test
addl
in
add
gs
shll
cld
jmp
out
mov
sub
xor
xchg
daa
lods
and
out
mov
out
fdivrs
sub
dec
cmp
in
ss
ss
sahf
pop
cmp
pop
xchg
pop
je
fistpl
ja
xchg
popf
int
pop
push
int3
mov
out
into
jae
inc
fstl
das
das
push
dec
sbb
push
das
out
inc
xchg
sub
sbb
push
mov
xchg
sbb
test
clc
clc
pop
mov
hlt
adc
hlt
xchg
xor
mov
xor
stc
repnz
pop
and
lahf
fmull
js
out
jno
ret
pop
xchg
stos
enter
test
mov
or
and
out
loope
cmc
out
xchg
mov
je
mulb
xor
in
xlat
sti
and
push
data16
adc
sub
sbb
lret
movsb
add
fcmovb
jmp
loopne
jno
test
imul
jl
lret
sbb
hlt
inc
in
loope
pop
in
sarb
hlt
mull
cmp
mov
and
sub
pop
sub
mov
push
rolb
push
push
and
pop
mov
stos
fisubs
test
nop
ds
inc
dec
stos
nop
js
mov
sub
cwtl
dec
jp
jmp
call
and
xchg
psubw
push
push
scas
push
out
jnp
rolb
ret
jne
mov
mov
std
mov
mov
fnstcw
mov
mov
mov
test
lods
xchg
pop
mov
lods
scas
ja
pop
lret
std
outsb
jns
fnstcw
xor
out
adc
inc
sarb
fcomip
es
fsub
or
push
loope
pushf
xchg
adc
mov
inc
imul
std
or
mov
adc
jp
sub
fistpll
push
shlb
push
pop
rcr
je
rol
ss
mov
scas
test
fcomi
dec
insb
int
std
adc
in
adc
jmp
fwait
js
mov
scas
xchg
cmp
add
xchg
fxch
jbe
enter
call
sahf
subl
int3
das
cmpsb
sbb
jge
cmp
push
sub
xchg
add
adc
adcl
bndstx
sbb
mov
dec
jle
ffreep
fbstp
mov
fwait
and
xchg
push
jg
sub
pop
cli
scas
arpl
cmp
mov
pop
cli
inc
and
lds
mov
xchg
pop
add
and
inc
sbb
mov
fistps
out
or
nop
inc
add
lods
xor
xor
daa
mov
push
xor
icebp
pusha
xchg
mov
xchg
cmc
push
and
xor
movsb
add
out
mov
mov
rorb
mov
ljmp
dec
std
and
cmpl
cmc
jb
jnp
dec
ljmp
cwtl
call
lods
mov
hlt
cmp
push
lret
lret
cmp
lcall
xchg
and
subl
jmp
xor
xchg
add
icebp
jmp
into
dec
jmp
sbb
shrl
and
ja
inc
cltd
lds
movsl
arpl
mov
pop
jae
cli
cmp
insb
jne
fsubs
mov
aaa
sarl
dec
xchg
andl
in
out
pop
pop
cmp
ficoml
popf
mov
pop
mov
pusha
cmp
adc
lea
enter
or
xor
push
sbb
push
adc
ljmp
in
cli
and
arpl
loop
xchg
sbb
ds
ret
and
or
pop
sbb
das
rclb
or
aas
hlt
push
xor
add
bound
arpl
xor
insb
mov
test
sub
not
sbb
cli
cmp
mov
mov
fstps
bound
inc
roll
out
movl
rolb
push
xchg
jne
push
vmovlpd
push
lods
lods
outsl
sbb
sbb
push
mov
gs
stc
gs
test
jge
iret
lcall
into
pop
call
jae
adc
or
imul
or
movsl
inc
xchg
adc
and
or
filds
cmp
pop
test
xchg
call
jo
jbe
cld
stc
mov
fxch
inc
scas
test
loop
xchg
in
adc
pop
sub
push
arpl
ficoms
outsb
mov
je
in
jge
sub
orb
cmc
push
bound
jbe
cltd
jecxz
lds
dec
jge
out
dec
loop
cmp
and
into
pop
mov
inc
dec
mov
adcl
inc
in
mov
movsl
lret
rcrb
mov
hlt
outsb
ljmp
ret
cli
xchg
sahf
sbb
stos
sbb
jge
jb
xchg
outsb
repz
inc
dec
mov
fmulp
xchg
test
sarb
mov
pop
cld
outsl
adc
in
or
cmp
pop
in
scas
mov
dec
out
mov
mulb
addr16
push
lahf
inc
out
int3
mov
xchg
jecxz
xchg
mov
lock
dec
stos
mov
mov
pop
cmpsl
cmc
lods
cmpsl
cmpsb
sbb
mov
inc
sbb
mov
xor
int3
jl
xor
loope
pop
arpl
xchg
sub
xor
cmp
pushf
cltd
inc
xchg
add
pop
mov
inc
ret
xchg
data16
jp
jmp
lods
mov
jnp
cmp
repnz
push
cmp
stos
mov
mov
push
mov
scas
lret
mov
and
fwait
mov
rclb
inc
mov
pusha
jnp
inc
decl
lret
push
adc
push
xchg
jne
fwait
xor
cltd
xchg
sbb
mov
andb
nop
fs
cmp
std
gs
jmp
or
sbb
jo
mov
sbb
jnp
inc
pop
sbb
cwtl
inc
fptan
outsl
je
sbb
cld
jl
lods
pop
xor
cmp
outsl
mov
inc
popf
cmpsl
fmull
jae
xlat
addr16
movsl
fcmovbe
inc
xor
data16
mov
mov
and
push
js
sub
sbb
cmp
mov
or
call
or
shrl
push
xchg
mov
addr16
sbb
push
cmp
push
mov
push
xchg
cs
pop
aas
xor
stos
sti
repnz
cmp
sbb
bound
outsb
out
in
mov
adc
in
or
orb
sub
ficoms
ja
push
jne
das
fists
iret
vmovd
jns
pop
cld
out
test
stos
cld
aad
mov
sub
xor
das
sbb
repz
push
lods
pop
add
outsb
inc
inc
cmp
lock
mov
lret
cltd
test
mov
out
xchg
mov
or
dec
movsl
jno
xchg
xor
jg
mov
popf
xchg
mov
adc
dec
dec
xchg
int3
cmpsb
das
rcrb
jmp
cmp
sub
aam
xchg
sti
xchg
cli
out
pop
clc
xchg
xchg
cmp
mov
inc
cmp
sbb
aas
cs
imul
dec
popl
fdivr
fisttpll
cmpsl
enter
xchg
dec
cld
adc
call
pop
sub
pop
push
sbb
dec
leave
xor
cli
add
jae
dec
sub
sbb
pop
pop
scas
pop
or
scas
mov
jae
pop
cli
jecxz
movsbl
lret
inc
mov
mov
cmc
mov
jmp
cwtl
adc
mov
dec
cmpsl
mov
test
cli
shlb
test
cmp
fnstenv
loopne
jno
xchg
icebp
fldl
sub
out
call
push
out
cmpsl
mov
fldcw
cmp
test
out
movsl
cwtl
xchg
dec
sub
nop
ret
cmpsl
cmp
xchg
scas
jnp
out
das
std
pop
adc
jnp
mov
ss
outsb
xor
loopne
mov
aam
push
outsb
lahf
movsl
mov
outsb
mov
loop
sbb
and
pop
or
test
aad
loopne
mov
insb
cmp
data16
xor
out
or
push
jmp
xchg
dec
push
mov
and
cltd
das
daa
movsl
mov
icebp
outsl
add
dec
adc
xor
ret
and
xor
hlt
xchg
dec
nop
imul
cwtl
sub
cmpsl
jbe
mov
out
push
decl
sub
adc
lret
jbe
add
sbb
fmuls
mov
popf
jg
xchg
or
fistl
or
xchg
stc
push
jnp
xchg
jle
in
rcl
int3
mov
out
add
cmpb
mov
mov
sub
sub
into
ss
push
in
pop
pop
daa
pusha
popa
pop
mov
pop
addl
jns
popa
xor
push
dec
dec
and
and
dec
push
fimuls
dec
sub
add
pop
or
pop
fcoml
outsb
fildl
inc
or
xor
sti
pop
loope
sub
push
mov
jl
movsb
sahf
mov
push
into
sub
and
rclb
addb
pushf
enter
mov
loop,pn
jnp
incl
fsubs
cmpsb
jle
mov
enter
jns
push
insl
cmp
ret
pop
lock
int3
imul
imul
sahf
jle
push
pop
fwait
clc
scas
movsb
mov
loope
shlb
xor
loope
add
mov
jge
insl
mov
cmp
push
ficomps
jnp
xchg
cmp
shrb
sub
cld
push
push
sub
int3
xor
rcll
mov
mov
lret
cmp
mov
prefetch
cmc
push
test
stc
xchg
pusha
cmpsb
cmp
in
ljmp
cli
and
xor
lods
repnz
loopne
lods
push
xor
repnz
in
push
cmp
and
push
xchg
lret
loop
mov
dec
add
enter
into
cs
inc
arpl
dec
dec
mov
fldcw
pop
mov
jp
in
xor
pop
inc
sbb
add
dec
inc
jnp
jbe
pop
movb
test
pushf
mov
adc
sbb
pop
repz
mov
shrb
shlb
dec
sub
out
stos
insl
cmpsb
scas
inc
fcomps
cwtl
adc
and
adc
lods
mov
push
pushf
inc
aaa
xor
mov
push
push
sub
popf
lods
dec
add
sti
and
add
lahf
mov
mov
add
dec
dec
xor
sbb
cs
xchg
and
dec
das
loope
sbb
inc
mov
out
mul
adc
outsl
push
arpl
push
cmp
ds
cmp
mov
mov
push
jno
mov
sub
jns
push
mov
fstpt
fnstsw
push
push
les
add
adc
cmp
sbb
jl
sub
ret
mov
orb
call
sbb
incb
fcmovbe
mov
movsl
rcl
jno
rcrl
dec
xchg
rdpmc
mov
xchg
jmp
xchg
and
lods
or
out
sti
shrl
dec
sbb
adc
jb
cmp
jl
or
or
cmp
mov
shll
mov
push
in
adc
push
movsb
lahf
xchg
enter
adc
fisubrl
rclb
inc
jecxz
lcall
add
jge
cltd
dec
test
hlt
inc
daa
es
mov
les
xor
xchg
leave
mov
ret
mov
lret
adc
nop
mov
push
pop
pop
dec
sbb
ret
add
bound
test
lock
push
cmp
or
inc
mov
jb
jp
push
jb
mov
cs
mov
or
cmp
pop
push
cmp
xchg
bound
inc
lods
adcl
xchg
pop
fsubp
ffree
pop
imul
pop
pop
sub
dec
lods
mov
shlb
int3
outsb
push
xlat
fwait
inc
out
push
mov
pop
fnstsw
sti
test
xchg
pop
pop
cltd
or
inc
pop
loopne
aas
jge
mov
lahf
cltd
ret
lret
jno
das
inc
lock
arpl
and
ret
jb
xchg
stc
add
add
and
inc
mov
push
movl
xor
sbb
loop
fisttpl
dec
int
jb
mov
inc
cs
cmpsl
cli
ret
mov
or
push
andl
add
xchg
orl
in
scas
outsl
adc
adc
adc
sbb
gs
stos
jge
mov
inc
ret
lods
iret
inc
js
ja
cmpsb
xor
fistpl
mov
inc
xlat
push
pop
jo
dec
stc
push
mov
lea
aad
jb
jae
pop
jb
mov
insb
jecxz
orb
and
push
lret
loopw
icebp
push
xchg
mov
lahf
rcll
xchg
inc
in
push
or
mov
into
lods
fldl
sub
or
jmp
mov
subb
or
pop
lahf
pop
push
loopne
ds
sbb
or
lret
dec
out
imul
cmp
jbe
mov
gs
xlat
insb
and
sub
sub
ret
fnstenv
outsb
insl
dec
lods
enter
test
js
adc
push
add
fwait
out
lods
and
leave
sbb
fisubs
xlat
aad
jmp
rorl
push
mov
mov
test
lret
mov
bound
inc
imul
xor
in
sub
mov
dec
inc
inc
aas
mov
vmovsd
test
adc
inc
dec
inc
and
adc
sub
mov
xor
cmp
xor
pop
cs
mov
or
xchg
aas
push
outsb
or
sahf
scas
and
fdivl
xor
xchg
flds
push
cmp
nop
je
inc
cld
imul
stc
xor
mov
scas
cmpsl
jmp
push
mov
push
fisttpl
and
mov
add
fidivs
jne
and
in
xor
xchg
bound
pop
das
movsb
adc
pop
and
fcomps
mov
rorb
or
add
stos
mov
ror
xchg
and
sbb
mov
mov
push
rolb
imul
sbb
jae
insl
das
pop
fwait
lea
or
adc
push
shrb
push
fsubrs
iret
jle
fsub
stc
adc
gs
loop
jb
xchg
arpl
mov
or
dec
mov
xchg
psllq
inc
or
repnz
popf
push
cmp
mov
or
out
pop
cli
or
cmp
int
xchg
dec
mov
repnz
loopne
inc
das
sahf
shll
mov
push
aad
xorb
sub
jno
aaa
movsl
cwtl
push
lret
mov
add
dec
mov
mov
mov
cltd
and
mov
push
es
mov
and
leave
insb
xchg
cmp
adc
push
lods
pop
jbe
sub
fadd
xchg
pop
jae
mov
aam
in
or
adc
addr16
ss
and
or
ror
adc
mov
loop
mov
mov
dec
lock
sti
insb
or
fsubr
in
rcl
pop
roll
sbb
lea
cli
imul
clc
jnp
inc
arpl
mov
adc
fidivl
adc
push
fldt
sbb
dec
outsb
sbb
dec
fidivrl
shrb
dec
cmpsl
int3
jo
xor
dec
scas
gs
data16
in
ds
mov
push
in
mov
nop
jmp
adc
jle
push
push
adc
fwait
sbb
aad
add
movsb
ljmp
mov
cli
pop
enter
push
rclb
outsb
cmp
or
cmp
add
and
xor
push
int
loop
in
ret
mov
mov
mov
jns
mov
das
sbb
and
sub
lods
and
lea
adc
mov
cmp
fimuls
xchg
sbb
pop
je
pop
xor
addr16
mov
mov
lods
fbld
orb
shll
iret
hlt
stc
lret
and
lcall
hlt
sub
jo
dec
ljmp
cmpsl
pop
jle
je
cmpsb
add
sbb
lods
mov
add
loopne
imul
sti
jne
xchg
mov
imul
cmc
divl
aas
inc
outsb
add
cmpsb
jb
nop
repnz
mov
jmp
xchg
mov
jp
movsl
ss
pop
addl
cs
aaa
adc
mov
cmc
je
adc
jo
data16
sub
push
aas
movb
fwait
and
ds
mov
test
das
jo
jno
icebp
pop
lret
lahf
or
fnsave
mov
inc
push
loope
cmp
inc
inc
into
add
cmp
inc
pusha
into
loope
push
sub
lret
xchg
add
mov
mov
or
cs
sahf
xor
pop
and
inc
mov
mov
sti
cld
mov
pop
rcrl
aaa
xor
stc
mov
mov
xor
adc
aas
and
cltd
shrl
or
adc
fcmovu
into
jno
divb
xchg
inc
pop
icebp
inc
loope
mov
inc
decl
sub
pop
push
sub
jbe
sub
and
stos
int3
push
mov
sub
or
gs
xor
sti
xchg
pop
dec
push
mov
inc
mov
int
movsb
sub
pop
iret
cmpsb
popf
call
movsl
adc
cld
cld
mov
out
jge
add
into
jne
test
inc
and
imul
xor
scas
add
repz
ss
mov
aam
lds
pop
jns
inc
or
add
push
nop
mov
jbe
pop
push
pop
aad
hlt
cmp
movsl
xchg
cmp
in
lods
bound
mov
add
mov
in
sbb
mov
mov
ret
inc
push
loop
pop
mov
rcr
incl
sbb
icebp
and
cmp
mov
xor
adc
ljmp
add
adc
int3
inc
push
pop
dec
lock
ret
out
or
push
mov
jns
cltd
rol
add
jae
sbb
jno
mov
arpl
aam
jle
les
scas
dec
push
sub
dec
test
arpl
inc
lods
aaa
mov
cmpsl
xor
enter
test
scas
lods
sub
cmc
sub
ljmp
shlb
jl
mov
jp
mov
cmpsb
fwait
popf
jl
pop
mov
imul
ja
stos
add
nop
jmp
adcl
mov
cwtl
iret
dec
or
iretw
aas
outsl
popa
mov
roll
negl
in
and
enter
pop
lods
leave
fsts
xor
in
mov
shrl
movsb
xlat
pop
mov
pop
xor
xlat
inc
scas
les
sti
testb
stc
dec
imull
pusha
xchg
mov
xchg
mov
push
mov
sbb
popa
aas
das
xchg
mov
dec
or
adc
shlb
leave
gs
arpl
loopne
mov
or
cltd
addb
mov
pop
jmp
add
sbb
mov
push
cmpsl
and
pop
inc
mov
add
cmpsb
sbb
push
adc
pushf
daa
xor
or
adc
cli
or
sub
fwait
adc
add
ficompl
inc
and
mov
xchg
pop
out
sbb
pop
mov
scas
fistl
outsl
push
adc
sbb
fmull
xor
rorb
or
test
lahf
ret
fsts
je
arpl
inc
mov
mov
fstps
repz
jl
push
jp
out
test
and
icebp
jno
jo
insl
std
cmp
cmpsl
cmpsl
aaa
and
xlat
pop
pop
inc
std
xchg
stc
cmc
jo
inc
rcll
dec
popa
jb
jg
mov
fistpll
and
mov
sbb
fwait
inc
call
jns
movsb
sub
adc
dec
mov
mov
pop
dec
mov
mov
das
xchg
std
jp
dec
sbb
js
ds
or
add
jb
in
shll
dec
push
mov
jne
stc
mov
stc
imul
push
cmp
test
add
mov
lds
mov
rcl
mov
popf
xchg
cmp
and
in
mov
push
mov
sysexit
mov
add
out
inc
popf
mov
aaa
pop
jmp
xchg
xchg
push
aas
cmc
fidivrs
inc
push
mov
push
dec
loop
in
iret
hlt
mov
popa
in
imul
pop
push
test
mov
loop
jne
inc
stc
push
dec
lahf
fiadds
fwait
into
mov
mov
lds
test
mov
inc
mov
or
mov
inc
rcr
repz
cld
sbb
js
jmp
loop
fisubl
or
lock
mov
xor
sarb
leave
call
mov
mov
dec
sahf
insl
sarl
int3
xor
int
sbb
pop
xchg
adc
lcall
jecxz
ror
mov
inc
mov
cs
in
pop
push
fcomps
mov
cltd
sub
rcr
imul
iret
popf
repnz
aaa
jecxz
push
push
scas
push
into
xchg
pop
test
dec
sub
push
sbb
pop
adc
and
jo
movsb
xor
mov
lahf
lods
call
mov
dec
push
inc
sbb
pop
fwait
dec
mov
inc
or
xor
inc
xchg
mov
xor
cli
mov
pop
imul
cmp
mov
stos
mov
sub
sub
and
jne
movl
mov
inc
dec
mov
mov
lds
push
push
mov
jne
rol
sarb
iret
sub
fists
std
pushf
inc
pop
ljmp
stos
dec
sbb
xor
cld
inc
jg
scas
pusha
cmc
out
pop
lods
icebp
leave
out
insl
sbb
mov
imul
call
push
aas
imul
lods
mov
xchg
xchg
btc
push
cmpsl
adc
mov
and
rolb
loop
adc
testb
jle
fistpll
hlt
ja
xchg
push
jl
add
fcomp
call
cmp
out
xchg
out
and
sarl
or
push
push
mov
dec
jmp
shrb
add
decl
mov
xor
fwait
jb
es
inc
push
inc
repz
mov
jmp
or
cmp
fisttpl
jge
dec
mov
mov
aaa
xor
jecxz
rcl
sbb
add
mov
popf
push
out
pop
jl
add
jae
nop
mov
cmp
leave
or
push
repnz
push
add
lret
lods
dec
inc
rorl
lret
jnp
subl
popf
mov
mov
int3
repz
dec
leave
mov
inc
test
and
stc
xchg
mov
mov
in
or
dec
inc
mov
dec
sub
js
pop
and
push
push
fidivrl
inc
ficompl
push
pop
mov
aas
jno
repz
out
cmc
adc
leave
div
or
data16
xor
push
add
inc
add
mov
jo
push
test
or
arpl
in
push
mov
pop
xor
sub
inc
add
mov
les
and
shrl
and
loop
sub
sbb
xchg
lods
movsl
pop
jecxz
add
jnp
nop
adc
das
lock
leave
data16
inc
sbb
xor
jae
xchg
mov
xchg
xor
test
and
fs
jne
xor
xchg
cmpsl
es
aas
testl
roll
outsb
ja
cs
sti
insb
and
sahf
dec
and
clc
pop
push
out
dec
xlat
sub
adc
lcall
mov
std
inc
bound
into
gs
fxch
and
jge
pop
stc
mov
cmp
inc
xchg
insl
add
jg
cmp
or
or
mov
cmp
testl
cmpsl
add
cmp
push
mov
enter
jge
and
pop
jle
sbb
shrl
or
jnp
push
test
cli
out
cmp
sbbb
cmpsb
dec
repnz
adc
cmp
xchg
jno
lods
pop
jnp
loope
outsl
rcl
orb
pop
orl
pop
test
xor
jnp
shrl
jns
inc
mov
dec
outsl
cmpsl
sbb
sbb
push
add
add
ss
push
cwtl
out
outsl
in
mov
or
pop
dec
push
mov
fwait
popl
jp
dec
and
lahf
mov
aad
add
int
jl
jb
outsb
push
aad
or
ret
das
ds
mov
mov
dec
pop
das
cmpb
sahf
lretw
or
imul
push
test
mov
pusha
out
add
pop
lods
arpl
xor
pop
fidivrl
negl
fiadds
inc
lods
dec
add
icebp
mov
in
adc
nop
pop
sbb
scas
lahf
sahf
leave
xor
lret
and
inc
add
mov
push
pop
push
mov
mov
pop
cld
ds
inc
sbb
das
jl
xchg
jecxz
mov
jbe
movsl
out
in
jecxz
div
xor
sbb
sbb
cmpsb
lret
mov
xor
pop
loop
mov
mov
or
data16
xor
sahf
int3
or
std
fwait
inc
loop
and
enter
aas
cld
fwait
int
cmpsl
test
cmp
out
inc
ljmp
adc
push
scas
bnd
jl
adc
xchg
pop
jb
mov
add
aas
xchg
or
xor
repz
pop
adc
test
test
shll
mov
stos
sti
mov
in
and
iret
xchg
fldt
add
jae
sub
fldenv
xorl
add
imul
push
and
daa
push
mov
adc
lds
pop
sub
push
sbb
test
mov
pop
dec
mov
loopne
mov
arpl
jl
fmull
and
aas
movsl
sbbl
bnd
addl
mov
pusha
mov
adc
add
cmp
mov
push
in
mov
into
stos
in
call
push
sbb
nop
jmp
push
add
cmp
in
cmp
pop
jb
imul
cmp
mov
pop
inc
dec
sub
fdivrp
push
sbb
jbe
outsb
mov
popa
cmp
mov
xchg
push
cmpb
push
adc
xlat
hlt
mov
sbb
mov
sbb
inc
xor
rolb
fiaddl
xor
mov
sahf
mul
sub
aam
mov
jno
mov
repz
push
repnz
bound
out
jns
sbb
fdecstp
or
int3
movb
sub
cmp
and
sub
les
xchg
idivl
call
scas
test
stos
jb
or
int
xor
lret
jmp
and
decb
mov
dec
mov
add
sub
inc
jbe
pop
imulb
dec
mov
dec
cmp
mov
enter
sarb
es
decb
pop
mov
mov
pusha
mov
dec
sahf
fiadds
mov
loopne
sub
ret
mov
push
inc
or
popf
cmpsl
fldl
cwtl
sbb
ret
imul
rcll
sbb
bndldx
repnz
xlat
cltd
loopne
mov
in
lds
aad
sub
out
cld
jmp
outsb
mov
lcall
shll
inc
aad
jbe
or
xchg
mov
cmp
dec
cltd
adc
in
js
mov
in
push
jb
jmp
inc
sbb
orl
xchg
xchg
in
mov
sahf
scas
cmp
pop
lret
mov
xor
xchg
pop
push
xor
dec
xchg
add
enter
ficompl
pop
pop
es
test
imul
add
call
test
cmp
leave
sub
push
jmp
mov
outsl
mov
pop
mov
push
sub
pop
lods
sbb
jl
jo
sub
mov
push
add
loope
je
xchg
push
push
fxtract
mov
add
clc
lods
pop
inc
mov
mov
and
or
jo
mov
jg
dec
in
addr16
test
iret
pop
pop
dec
pushf
loop
aaa
add
pop
jg
shll
adc
fisubl
and
std
out
clc
add
sub
loopne
rcll
push
cmp
sti
pop
cmp
sub
pop
int
xor
stos
aam
xchg
push
arpl
inc
outsb
inc
loop
jg
in
fwait
loop
lret
lds
aad
cmp
dec
lret
in
pop
mov
popf
ficoms
jnp
mov
lret
jp
pop
sub
cmpsl
and
dec
push
cld
mov
mov
scas
addl
inc
add
mov
cmp
rolb
adc
sub
and
call
push
nop
xchg
in
cltd
shr
movsl
cmp
sbb
xor
dec
xchg
add
movsb
jmp
inc
jl
push
push
xorl
cwtl
outsb
mov
ja
ja
enter
call
ss
iret
test
dec
dec
jmp
filds
stos
imul
push
sub
inc
loopne
repz
jbe
lods
aaa
pop
arpl
imul
dec
lods
jmp
mov
push
shl
or
jl
mov
outsb
pushf
rcrl
lcall
daa
idiv
mov
dec
bound
in
and
stos
and
mov
mov
cmpl
xor
in
jg
pop
outsl
jl
sbb
test
sbb
data16
and
mov
push
rcll
ror
shll
pop
ja
add
or
and
xor
xor
mov
jle
xchg
push
and
outsl
xor
enter
xchg
mov
std
les
aas
out
mov
mov
into
inc
scas
xor
mov
mov
rorb
cmp
cmpb
jl
fs
movsl
test
or
mov
add
sub
push
xlat
mov
movsb
rorl
sub
lock
cmpsl
dec
mov
lods
clc
mov
cmp
cltd
arpl
xor
hlt
les
ror
dec
in
enter
jmp
sub
jle
push
or
cmp
and
and
int
outsb
inc
adc
fs
aas
cmpsl
stc
cmpsb
push
dec
sub
add
inc
push
push
xchg
xlat
into
rorl
lcall
mov
add
inc
fstl
jecxz
sahf
ljmp
in
and
jb
pop
inc
scas
loopne
icebp
jnp
out
fisubrs
add
xchg
push
pusha
cmova
es
nop
call
roll
psrlq
jge
mov
adc
call
nop
scas
pop
fsubl
push
fs
sarb
pop
cmp
outsb
cmp
adc
pop
sbb
daa
cmp
cmpsl
out
mov
mov
cmc
dec
scas
cmpsb
xchg
mov
lcall
ret
sub
insb
in
ljmp
cs
call
dec
pusha
dec
hlt
mov
xor
gs
in
cmp
test
add
lods
sbb
mov
mov
hlt
xchg
xor
xor
adc
inc
mov
jecxz
cmp
sahf
xchg
mov
pop
scas
pusha
test
lds
mov
jo
decb
or
xor
xlat
sbb
ret
mov
out
test
xchg
ret
or
inc
outsb
dec
mov
pop
fldt
in
push
cmp
out
arpl
xor
loop
and
mov
mov
push
push
cld
and
sbb
lods
mov
movsl
inc
scas
sbb
pushf
push
pop
xor
cmp
out
imul
enter
push
repz
aad
add
sub
mov
popa
fbld
xor
inc
inc
sbb
outsl
shll
nop
fistl
xor
movsl
or
pop
in
mov
iret
mov
adc
mov
cs
xchg
cmp
adc
les
adc
push
lock
cmpsl
loop
bound
pop
cmp
dec
ljmp
sub
or
test
push
es
jne
mov
push
sub
das
cmp
aas
push
cld
loopne
in
mov
or
or
cmp
xor
inc
rdpmc
daa
movsl
outsl
xor
push
push
cmp
data16
jo
pusha
dec
cmpsl
outsb
jae
out
ljmp
pushf
cmc
xchg
dec
lret
inc
mov
fwait
movsb
in
mov
jo
insb
push
pushf
jp
pop
into
add
xchg
incb
fcmovu
es
fsubr
sti
add
test
sbb
ja
mov
stos
lock
jnp
adc
popa
out
mov
testl
shll
cmp
dec
lea
sbb
movsl
and
rcr
sub
jae
adc
mov
mov
and
mov
repz
lahf
jp
mov
sub
push
adc
cmp
sarb
out
xchg
lods
inc
test
js
or
and
dec
cmp
pop
and
jg,pn
cmp
popf
pop
rorb
add
bound
mov
mov
ret
dec
inc
xchg
dec
jecxz
cwtl
out
cmp
ret
sbb
cmp
fdivrl
inc
adc
jb
inc
bnd
and
pushf
out
mov
pop
inc
mov
jnp
adc
sub
fldcw
jnp
lret
pop
movsl
or
ljmp
push
jo
out
sub
enter
rcrl
mov
leave
mov
pop
sbb
push
inc
cmpsl
and
jne,pn
mov
jl
jle
mov
inc
inc
xchg
jbe
pop
pop
add
mov
pop
mov
incl
mov
add
mov
cmpsb
and
dec
mov
lahf
xor
in
xchg
fiadds
mov
jmp
xchg
leave
pop
mov
xchg
jecxz
ret
ja
pop
fistl
mov
scas
movsb
dec
cltd
test
pop
call
inc
xlat
inc
in
cmp
popf
ja
loop
popf
lret
ss
sbb
xchg
fnstenv
sbb
mov
mov
mov
out
mov
and
and
mov
xchg
lea
jecxz
fsubs
sub
movsl
icebp
mov
push
dec
stos
cli
out
xor
bound
cmp
cs
push
shr
or
les
mov
mov
mov
scas
and
aam
je
pop
jae
mov
lds
sub
adcl
xor
sbb
cmp
cmp
insl
lock
lea
subb
sub
xlat
fidivl
das
sub
xchg
or
inc
sub
in
dec
mov
shrb
mov
xchg
lcall
pusha
add
xor
cmp
jg
push
push
aas
pop
add
pop
pextrw
sbb
sbb
repnz
sbb
sub
inc
test
shll
in
out
inc
pop
pushf
mov
push
jnp
fldt
aad
mov
in
cmpsb
push
adc
or
popa
adc
push
xlat
or
cmp
mov
jecxz
fnstenv
es
push
frndint
ror
lds
cmp
push
cmp
out
loop
xorb
or
xlat
pop
scas
lret
adc
call
cli
out
xchg
test
sbb
inc
pop
sub
lods
int
cwtl
xchg
pop
scas
idivb
adc
push
mov
js
jge
dec
or
nop
add
jmp
xor
fisubl
aam
nop
jns
lcall
imul
jp
add
std
std
adc
mov
rclb
shrb
sbb
sahf
push
pop
sarl
mov
push
push
push
dec
iret
imul
sub
or
xchg
jp
ds
push
xor
jmp
sub
out
sub
movsb
stos
fwait
int3
fs
leave
inc
adc
pop
add
add
mov
das
clc
imul
test
and
mov
je
add
stos
mov
dec
out
pop
xchg
jle
pop
fxch
into
aam
lock
xchg
frstor
fstl
movl
cltd
push
push
fdivrs
sub
cwtl
out
mov
xor
loop
push
jmp
jo
add
adcb
sub
mov
std
movsb
cmp
mov
mov
push
mov
adc
xor
and
rol
jle
and
rcl
adc
jge
dec
cmpsl
cltd
fisubs
pop
cmp
in
sti
jle
inc
xor
clc
jl
lds
rorb
sbb
pop
xchg
sub
gs
pop
push
data16
inc
lret
mov
add
sbb
mov
xchg
iret
lods
sbb
stos
add
call
jno
add
out
divb
xor
pop
cld
cmp
data16
jbe
xor
lods
in
cltd
sub
xlat
sub
xor
cmp
pop
adc
mov
mov
mov
in
fidivl
sub
jbe
mov
mov
push
ja
dec
subb
test
sbb
push
shlb
pop
inc
cmc
push
xor
add
imul
jne
mov
cmp
fs
adc
cmp
mov
ret
addr16
dec
rcrb
push
sbb
cmpsl
mov
js
jo
push
jns
xchg
arpl
out
mov
or
pop
mov
cwtl
and
popf
sbb
xor
inc
jne
outsb
rcll
out
pop
lock
pop
mov
ret
in
jl
into
sarb
jmp
mov
cmc
icebp
test
push
xor
xchg
repnz
jg
sbb
xor
in
mov
xchg
and
ja
fldl
movsl
add
out
push
lcall
push
adc
cmpsb
in
cmp
fistpll
or
lea
and
mov
test
adc
cli
inc
sub
mov
cmc
in
and
rclb
hlt
add
add
in
sbb
push
mov
cmc
mov
sub
dec
mov
imul
outsl
push
mov
ds
sub
bnd
sub
outsb
fwait
scas
clc
sahf
lods
or
repnz
lret
xchg
and
movsl
js
xchg
cs
addl
jp
jbe
xorb
add
add
ret
xor
shll
or
loopne
insb
test
sub
cld
mov
lods
dec
dec
daa
ds
cmp
daa
enter
shl
and
rolb
ja
cltd
adc
mov
mov
in
push
mov
mov
sahf
push
dec
enter
rcl
inc
inc
sbb
rcrb
cmp
xchg
sbb
xchg
shl
stos
popa
pop
or
mov
test
sub
lret
xor
jno
sbb
xchg
add
int3
xchg
in
sbb
jmp
cmp
xor
aam
call
mov
daa
xchg
stos
sub
adc
testl
imull
cmpsb
xor
mov
jbe
add
inc
sbb
add
lret
adc
mov
aam
push
sub
in
in
arpl
adc
lret
add
sahf
xlat
cltd
push
mov
fld
mov
push
or
insb
push
pop
orl
push
inc
sbb
jns
inc
mov
or
sub
je
shl
rcr
or
push
inc
add
arpl
out
test
dec
aam
int
loop
xchg
cmp
fimull
aaa
pop
out
xor
xor
jo
imul
sbb
out
lahf
mov
int3
lds
imul
test
and
ss
pop
sub
out
dec
mov
ret
cmp
sub
xor
or
fcoms
push
jae
mov
outsb
test
jb
adc
scas
mov
fdivrs
jmp
xor
sarb
xor
add
push
test
aas
pop
mov
mov
movsl
jne
jge
bound
rorb
inc
push
cli
mov
jo
mov
rcrb
hlt
and
pop
test
fiaddl
ret
das
cmp
cmp
inc
mov
stos
or
dec
dec
sub
mov
imul
cmp
dec
sbb
inc
and
sub
ret
repnz
dec
push
imul
out
int
mov
insb
pop
cmpsb
mov
out
mov
mov
cmc
out
ljmpw
push
aaa
mov
sahf
or
pop
cmp
cwtl
jle
mov
and
rcll
mov
adc
cs
add
and
push
xchg
mov
mulb
mov
adc
out
sbb
push
mov
addb
jae
cmpsl
dec
dec
mov
pushf
push
test
std
pop
flds
cmp
lods
or
aad
cmpsl
popa
arpl
rorb
or
andl
xchg
je
out
iret
xchg
fnstcw
xchg
and
data16
xor
jno
mov
jg
int3
sub
leave
lock
and
cmc
in
push
icebp
pop
cmc
addr16
or
in
pop
mov
sbb
sti
stos
cltd
ja
fdivrp
add
rcll
or
lea
clc
push
inc
mov
int
loopne
xchg
arpl
or
or
divb
xor
pop
mov
clc
cmp
and
xchg
jnp
add
fiadds
xorl
pop
push
aaa
insl
das
push
dec
fs
cmp
dec
fimuls
mov
orl
test
clc
xchg
adcl
mov
jl
cs
mov
adc
lret
fimuls
inc
add
popf
xor
idivl
and
dec
sub
jmp
mov
test
lods
fistps
and
add
inc
imul
mov
jl
andl
popa
movsbl
pop
pop
fnstenv
xorb
test
sbb
jg
adc
ljmp
insb
pop
inc
pop
push
sti
xor
jns
ret
in
mov
lret
es
adc
push
and
pushf
and
mov
call
xchg
push
sub
cmp
adc
xchg
sbb
or
test
subl
ljmp
out
adc
mov
ja
dec
das
outsb
xchg
fists
and
inc
jle
push
frstor
test
arpl
pop
hlt
pshufw
pop
add
fidivs
ss
inc
pop
pop
fwait
cmp
pop
xchg
jg
loope
imulb
cmc
cmp
iret
or
jecxz
pop
or
xor
movsl
cmp
ds
jno
dec
leave
outsb
cli
and
xchg
call
ror
inc
add
pop
xorb
xchg
and
cs
andl
xlat
test
shr
insl
pusha
xor
xor
popf
pop
scas
xchg
nop
dec
pop
cmp
aam
aaa
pop
push
add
xor
outsl
and
inc
push
lods
sti
cs
mov
sbb
pusha
int
xor
fsubrs
cmp
xchg
fdivrs
xor
cld
inc
mov
push
xchg
dec
cmp
or
xchg
lret
aas
loopne
xor
pop
xor
nop
push
add
xchg
sub
jno
popf
mov
ret
in
pop
mov
mov
mov
mov
inc
fstp
inc
outsl
pop
inc
push
push
sub
sub
jge
mov
pop
and
inc
mov
call
int3
dec
cmpsb
ja
mov
scas
ds
in
sub
push
and
xchg
sub
mov
push
iret
inc
lret
imul
jae
pop
stos
in
pop
or
sahf
pop
cli
push
mov
mov
cmpsb
cs
fsubs
ja
mov
rorl
aas
fiadds
jecxz
ja
cmp
xor
test
push
sbb
xchg
inc
ffreep
mov
cld
test
or
mov
inc
cmp
mov
pop
sub
push
or
or
stos
mov
mov
push
scas
xchg
sub
mov
and
es
into
int3
outsb
push
xchg
cmp
sbb
xchg
mov
ss
push
dec
jp
sar
inc
leave
adc
inc
cmp
push
hlt
adc
stc
int3
outsb
xlat
or
out
addr16
xor
or
xchg
jae
xchg
cmp
mov
adc
inc
mov
roll
jo
cwtl
sbb
push
cld
arpl
out
pop
adc
push
and
in
lcall
dec
sbb
mov
or
addr16
into
loopne
js
and
nop
js
push
cmpsl
sahf
stos
xor
inc
mov
dec
out
sub
fwait
xorb
jne
addl
mov
fwait
jo
les
cmpsl
push
test
les
pop
xor
inc
push
jb
mov
cmp
xchg
pop
stos
mov
aad
cmpsl
cltd
and
sub
clc
jne
adc
aas
mov
in
pop
dec
lret
pop
cmp
jne
ljmp
idivl
adc
icebp
and
jo
cmpsl
fmull
cltd
mov
nop
repz
or
inc
jmp
pop
repz
or
sbb
rcll
and
out
dec
bound
add
pop
add
push
lea
popf
outsb
je
jp
cmp
mov
and
int3
popa
dec
in
dec
sbb
frstor
into
ljmp
mov
mov
push
inc
cmpsb
add
jne
sbb
ljmp
ja
ss
addr16
scas
mov
push
or
cmc
jb
cmp
out
movsb
xchg
jns
xor
adc
push
and
pop
ror
xchg
cli
fistpl
and
xorl
stc
cmp
cs
popf
fildll
jmp
call
outsl
popa
sbb
shrb
inc
xchg
pop
jae
aas
insl
adc
movsb
das
scas
mov
add
cmpsl
or
dec
into
adcl
and
push
lds
cs
movsb
inc
or
ret
jnp
outsb
xchg
pop
inc
cmc
es
push
outsb
js
mov
xchg
into
shll
mov
sub
add
sarb
dec
cmp
inc
inc
scas
enter
iret
cli
cwtl
and
mov
add
pusha
push
sbb
sbb
inc
cmp
andl
call
int
pushf
sub
adc
sub
push
mov
outsb
sarb
es
add
mov
pop
mov
inc
push
mov
pop
mov
push
jge
pop
mov
outsb
pop
inc
mov
push
sub
imul
mov
sbb
jnp
xor
push
in
mov
pushl
arpl
inc
out
repnz
dec
aad
and
bnd
dec
mov
sbb
mov
jle
int
add
jle
xor
push
movb
jle
adc
push
div
in
fld1
in
cwtl
jo
fiaddl
or
mov
jne
jg
xor
sub
cmp
fs
movsl
sub
ja
sub
inc
xor
inc
test
xlat
jg,pt
inc
cmp
jb
inc
icebp
add
xor
jo
lock
test
bound
add
mov
mov
cwtl
call
out
ljmp
clc
insl
jns
sub
dec
repnz
idiv
dec
mov
call
sbb
mov
xchg
jl
test
pop
xchg
sti
sub
test
test
pop
cmpsl
jno
mov
jbe
shlb
xchg
xchg
or
rcl
std
mov
mov
mov
sub
jne
popf
xor
stos
inc
and
das
das
mov
lods
lds
dec
add
out
adc
shll
fwait
push
pop
bswap
push
pop
iret
mov
jno
cmpsb
aam
into
and
jl
hlt
icebp
cmp
fdivr
fdivrs
push
gs
out
out
mov
inc
imul
xor
cmpsl
sub
stc
push
lods
call
jle
fstpt
leave
add
cmpsb
mov
jno
pavgb
movsl
clc
test
sbb
fisttps
dec
ret
aam
bound
sbb
jge
cmp
dec
mov
xor
push
sbb
insb
cmp
or
mov
jbe
cmpsl
in
loop
aas
mov
insl
xchg
pusha
out
enter
jno
in
outsb
or
or
jge
xor
add
movsb
aad
cmc
out
mov
push
fyl2xp1
xchg
xchg
dec
out
mov
cmpsb
pop
add
test
xchg
sub
lods
aad
test
and
jbe
jl
inc
dec
fidivrl
or
jecxz
push
out
xchg
test
push
je
repz
sbb
into
insl
sbb
cmovnp
inc
inc
push
test
lcall
inc
ja
sub
adc
ret
fcoml
test
dec
icebp
pop
add
das
lods
jae
cmp
xor
xlat
sub
sub
push
jns
xchg
inc
int3
icebp
lcall
dec
popa
popf
inc
xor
sub
add
push
push
mov
out
xchg
mov
pushf
xor
scas
popa
jp
sahf
shr
repz
or
sbb
or
xor
inc
xchg
fwait
hlt
mov
mov
scas
cmp
or
dec
cmpsl
mov
sbb
jbe
xchg
jge
inc
outsb
mov
in
daa
cmp
scas
je
xchg
repnz
das
mov
cld
push
rcll
hlt
popf
in
aaa
xadd
notl
lea
push
and
lock
inc
arpl
push
pop
fnstsw
les
push
jbe
roll
mov
xor
and
dec
ja
leave
fwait
mov
fninit
rolb
xlat
xor
xchg
cmp
and
or
cmp
cmp
xchg
mov
cmp
cmp
out
dec
sbb
fsubl
cmp
dec
outsl
test
xorl
pop
arpl
and
testb
jmp
enter
mov
or
jecxz
pop
or
xor
arpl
jo
adc
dec
or
add
xor
cmpb
adc
lods
pop
sti
stos
sti
mov
orb
sbb
fisubs
jge
or
shll
xlat
test
add
sbb
inc
xchg
xor
mov
fwait
xchg
frstor
mov
sub
cwtl
imul
add
popf
jg
enter
mov
les
bound
enter
and
mov
add
mov
cld
pop
cmp
ds
vpmadcswd
lcall
or
push
nop
mov
adc
mov
dec
jecxz
mov
lahf
lea
sub
push
push
mov
push
or
sbb
insb
rorl
js
aas
loope
fs
jmp
add
lods
rorb
cmp
sub
adc
lods
push
jmp
jmp
out
xlat
outsb
lea
cmpsl
dec
lock
pop
mov
adcb
psubd
add
shlb
sarl
jg
sar
cwtl
clc
mov
stc
dec
push
xchg
insb
ljmp
loope
cld
mov
lahf
out
sub
cmp
sub
xchg
scas
iret
xchg
repnz
outsb
loopne
mov
sub
jno
mov
repz
sub
mulb
in
cmc
imul
inc
fwait
dec
sbb
pop
dec
bound
into
pop
inc
aas
mov
es
stc
xchg
jbe
xor
gs
mov
pop
cmp
cmp
js
pusha
sahf
ret
imul
stos
mov
std
jle
les
rol
roll
jmp
xor
mov
stos
sarl
int
inc
pusha
popf
cmpsb
divb
lea
sbb
mov
jb
clc
clc
in
out
cmp
in
fwait
add
jge
cmp
jp
mov
scas
shll
xchg
xor
add
roll
sbb
fidivl
sahf
xor
add
insl
out
scas
out
mov
lods
dec
sub
mov
xor
inc
add
jno
leave
fmull
cmp
int3
out
xor
cmp
loopne
sbb
aas
push
sub
ljmp
stos
insl
mov
inc
fldenv
mov
pop
test
repz
and
mov
aad
jl
hlt
inc
mov
int3
push
mov
mov
push
ja
cli
mov
scas
inc
ljmp
shll
pavgw
or
aam
cmp
and
loopne
push
out
jp
mull
test
mov
test
push
out
fs
fs
lods
push
stos
jne
stos
sub
insl
add
scas
mov
and
pop
xchg
sbb
jb
mov
decl
iret
sbb
adc
test
push
pop
adc
mov
mov
enter
xlat
rolb
icebp
rep
jnp
dec
jp
in
mov
out
jnp
pop
daa
xchg
icebp
fdivr
lret
ljmp
mov
andb
xchg
ljmp
pop
adc
xorl
ds
stos
add
push
cs
jnp
aam
aam
sbb
mov
and
das
mov
jns
sub
xchg
jb
cmpsb
and
cmp
btcl
inc
fcoms
cmp
add
fdivl
inc
outsb
sbb
adc
aad
mov
xor
sbb
inc
jbe
ljmp
pop
or
leave
movsb
push
adc
jb
xchg
cmp
ljmp
cmp
lock
inc
test
mov
dec
push
and
jbe
mov
xor
sub
out
insb
add
test
dec
xchg
add
sar
lret
out
repnz
cmpsl
cmc
fwait
cmovle
xchg
mov
lods
push
xorb
je
jns
addr16
std
test
gs
pop
pushf
xchg
cltd
mov
push
or
aaa
xchg
sbb
adcb
ljmp
bound
cltd
inc
insl
fmuls
add
into
jl
fcomps
testl
sbb
jmp
xchg
aas
test
mov
fists
adc
add
adc
and
xchg
push
mov
call
sbb
cmpb
repnz
pusha
push
mov
inc
inc
mov
push
ret
cs
cmpsb
jl
push
arpl
cli
inc
push
out
xor
mov
repz
xor
icebp
and
adc
cmp
imul
sarb
mov
and
in
fxam
pop
mov
cmp
int
xor
inc
xor
cmpsl
mov
in
test
imulb
out
mov
mov
inc
cmp
cld
cmpsb
push
aad
iret
iret
cmova
jbe
in
add
cs
inc
in
in
jle,pt
icebp
xor
push
fisttpl
sbbb
push
add
inc
inc
ja
xor
push
xchg
dec
mov
xchg
adc
push
adcb
xor
fisubrs
cmp
cmp
mov
mov
cltd
adc
lcall
dec
cmp
mov
adc
xchg
stc
std
movsl
xor
cmc
push
or
xchg
dec
lcall
dec
imul
icebp
jo
mov
inc
iret
mov
pusha
out
add
stc
ret
or
fsub
sub
sub
mov
test
loopne
add
rcrl
daa
out
imul
xchg
loopne
gs
in
inc
jo
mov
fcomps
testl
in
lea
xor
daa
dec
insl
rorb
xchg
mov
lods
popf
dec
test
fildll
jl
mov
pushf
or
mov
arpl
sbbl
stc
lret
fdivs
insb
pop
outsl
mov
fwait
lock
mov
shrb
pushf
add
clc
int3
add
cs
inc
pop
add
xor
sub
mov
gs
pushf
sub
out
repnz
inc
inc
jb
repz
add
fdivrl
es
mov
or
pusha
sub
xchg
dec
ficomps
and
and
test
add
imul
pop
pusha
cmpsb
rclb
xchg
int
push
mov
and
xorl
imul
pusha
mov
clc
movl
cmp
in
insl
mov
dec
das
test
sbb
fstp
mov
sbb
cmpsl
mov
xchg
push
mov
fisubs
push
into
rolb
inc
in
fsubl
mov
xchg
push
outsb
ds
adc
flds
sbb
divb
dec
movsb
and
rcrb
pop
jl
adc
mov
je
and
lret
scas
out
mov
cli
and
mov
or
imulb
cld
dec
movsb
nop
dec
mov
in
xor
in
adc
and
lahf
call
stos
out
out
daa
inc
ficomps
inc
mov
xchg
xor
xchg
mov
shr
fwait
mov
scas
mov
pop
mov
stos
add
sti
mov
mov
pusha
shrb
mov
gs
popa
es
cmp
insb
dec
loop
xorb
cmpsl
sub
dec
add
cmp
mov
inc
lods
adc
pop
jae
sbb
mov
sub
imul
sbb
aad
data16
pushf
push
cmpsb
xchg
dec
sbb
sub
lret
popl
mov
and
je
push
sbb
fsubs
push
inc
pop
lods
in
dec
sub
mov
jecxz
mov
popw
sbb
xchg
pop
cmp
aaa
dec
rorl
mov
inc
fwait
adc
push
mov
call
iret
int3
mov
mov
dec
mov
jge
pop
xor
add
jmp
pop
cltd
or
rcll
mov
adc
inc
inc
xchg
fdivrl
push
in
pop
filds
adc
jp
lret
dec
xor
inc
xchg
adc
ficompl
pop
jg
lods
popf
cltd
rcl
outsb
lret
push
loope
xchg
stc
loopne
inc
out
aas
sbb
jns
sbb
push
test
jne
and
xchg
lret
cmp
pop
aas
test
orl
xchg
add
jecxz
push
mov
and
xor
iret
mov
pop
add
inc
test
inc
or
in
adc
outsb
mov
js
das
test
pop
or
icebp
in
in
sub
loope
out
imul
mov
or
imul
and
enter
int3
jnp
mov
xchg
jns
cld
cmp
pop
dec
xchg
cli
dec
rcrl
pop
data16
popa
mov
sbb
xchg
js
and
jb
jl
in
add
pop
jmp
sub
ja
scas
jb
cld
jae
repnz
cmp
push
dec
lahf
fimuls
dec
mov
ds
mov
into
xchg
xor
imul
cmp
ret
xor
mov
loope
stos
push
data16
movsl
jge
jl
sbb
lods
cmpsb
or
test
and
mov
xchg
sub
xchg
inc
mov
std
popa
push
and
dec
ret
push
lock
cwtl
call
jbe
pop
lret
adc
shrd
daa
xchg
shlb
pop
cmp
leave
cmp
sbbb
mov
ja
scas
nop
sbb
pushf
jns
xchg
mov
pop
or
shll
imul
push
sar
stos
loop
rolb
frstor
jle
shll
faddp
xchg
inc
add
mov
inc
cmp
pop
pop
xlat
call
mov
xor
push
scas
inc
cmpl
adc
mov
clc
data16
fnstenv
add
stos
mov
adc
inc
test
pop
dec
stos
cld
sbb
xor
jns
ds
inc
pop
dec
push
mov
cwtl
insb
pop
mov
push
inc
daa
xchg
inc
dec
cmp
mov
ljmp
push
icebp
and
inc
loopne
cmp
das
jne
lcall
gs
ficoml
gs
repnz
xlat
mov
dec
adc
add
mov
jl
arpl
or
xor
or
out
xlat
mov
insb
inc
xchg
xchg
out
arpl
dec
dec
js
aaa
out
pop
mov
cld
cli
pop
xchg
scas
cmpsl
pushf
movsb
hlt
adcl
pop
int
int3
lret
sbb
or
ja
mov
fnstsw
dec
add
loop
mov
push
fs
sub
jg
sbb
mov
cmpsb
jo
mov
enter
inc
and
jmp
adc
std
mov
sub
rcl
fs
stc
popf
xchg
into
arpl
cwtl
cmp
clc
cmp
inc
add
jecxz
and
and
mov
aas
rcll
pop
sbb
loop
pop
dec
mov
outsb
add
add
push
pop
push
pop
int3
int3
pop
fdivl
mov
test
insb
xorl
inc
mov
mov
popf
adc
cmpsb
cwtl
rorb
push
shrb
adc
in
sti
pop
movsl
nop
mov
popa
cmp
les
xor
lock
fsubs
call
arpl
cmp
xchg
jno
out
pop
jbe
mov
test
iret
insb
and
out
pop
xchg
adc
xchg
pushf
jg
fdiv
lahf
aas
push
push
rorl
gs
xchg
addr16
or
in
sub
out
test
stc
pop
in
dec
xchg
xor
push
sbb
mov
jle
cmp
cwtl
popf
xchg
cmpsl
push
hlt
rolb
pop
mov
or
out
mov
ret
enter
test
outsl
mov
add
adc
ja
bound
adcl
mov
xchg
les
jae
call
and
dec
fstl
clc
jmp
adcl
fldl
jge
mov
or
mov
fsts
lret
je
add
iret
mov
add
dec
fistps
aaa
xor
lret
and
cmp
mov
in
popf
mov
lret
push
mov
xor
sub
or
xchg
cmp
jns
cmp
rclb
into
mov
addr16
or
or
pop
loop
test
mov
daa
or
aas
jmp
je
inc
push
inc
in
xor
inc
lret
andb
pop
xchg
insl
nop
stc
pop
and
xchg
sbb
xor
inc
or
or
lcall
aad
aad
loop
iret
ljmp
lahf
pop
mov
sub
lcall
out
push
add
cmp
imul
lock
xor
xor
fimull
dec
push
jle
xchg
xor
add
sbb
loopne
push
push
addl
lods
jns
mov
sbb
dec
xchg
dec
aaa
cmp
add
ss
pop
mov
xor
nop
rolb
jo
sub
les
adc
negl
aad
mov
jo
clc
rclb
pop
fisubs
stos
pop
push
roll
or
rcr
adc
cmp
jle,pn
fsts
xor
enter
xchg
in
stos
xor
xor
push
push
rcrl
loope
push
ja
mov
inc
lock
mov
jp
test
xor
lods
fdivrp
jl
adc
sahf
sub
stc
fsubl
test
push
std
fcomps
mov
mov
xchg
scas
mov
jg
jge
out
aaa
dec
inc
ljmp
adc
pop
out
xchg
sbb
icebp
jns
cltd
and
sbb
daa
std
xor
mov
outsb
mov
pusha
mov
push
movsb
cmpsl
dec
mov
xorl
das
cwtl
mov
push
push
popf
push
cmpsl
popa
add
outsl
test
pop
popa
addb
pop
sbb
sarb
and
sbb
movsb
lock
cmp
test
dec
push
or
insl
push
lods
xchg
loope
test
in
fwait
pop
inc
add
xchg
paddd
dec
stc
out
pop
scas
jp
icebp
mulb
stc
lcall
cmp
fcom
movlps
cmp
sub
dec
fcoml
jns
inc
lahf
xlat
xchg
test
pop
cmp
es
and
pop
daa
ret
lcall
gs
adc
movsl
cmpsl
scas
rorb
lea
jne
in
call
cmpsl
sahf
jmp
stos
push
dec
pop
add
pop
xor
insb
sbb
out
fsub
sub
pushf
mov
ret
cmp
cmpsl
mov
scas
xchg
cltd
mov
outsl
mov
pusha
mov
push
mov
push
xchg
jg
xor
mov
or
sbb
cmp
mov
cld
int3
lods
or
push
and
and
mov
inc
dec
jbe
xor
and
pop
aam
dec
ds
popl
adc
insb
sub
fidivrl
add
mov
setae
cld
add
inc
sub
movsl
jae
or
test
dec
mov
push
cmp
dec
pop
sti
and
rcrl
lods
xchg
shlb
daa
ds
lods
mov
insb
mov
cli
sbb
mov
mov
push
fsub
sbb
or
loopne
cs
xchg
jo
stc
add
inc
scas
or
xor
xchg
dec
jnp
push
fs
rclb
dec
loopne
inc
mull
cld
inc
sub
adc
andb
jno
adc
call
cli
dec
pop
mov
adc
sub
sbb
jecxz
in
daa
icebp
mov
nop
rclb
mov
into
clc
push
jns
sub
cmpsb
aam
pop
push
clc
mov
ja
mov
rclb
js
sub
push
mov
popa
cltd
jge
or
push
sbb
aad
cmp
shrl
pop
cs
daa
sbbl
inc
add
jnp
mov
test
xchg
or
pop
jmp
xchg
jg
mov
push
pop
push
shrb
ss
insl
out
mov
arpl
mul
sub
cwtl
xchg
arpl
dec
aam
pop
jle
fsubl
adc
push
jecxz
add
sti
xchg
stc
sub
in
in
mov
mov
jp
add
mov
add
jmp
push
rclb
push
in
pop
mov
popa
jecxz
pop
and
loope
add
pop
jecxz
sbb
push
pop
rcl
cmpsl
mov
into
loopne
insl
cmp
sbb
pushf
mov
popa
mov
lret
mov
or
add
xchg
cmp
insl
xor
cmp
adc
xchg
and
dec
enter
in
addl
adc
dec
mov
xchg
imul
push
mov
imul
jmp
repnz
lds
cmp
sub
or
jecxz
xchg
popa
int
mov
adc
dec
jge
push
mov
xor
lds
cmpsb
lods
mov
push
rclb
pop
adc
adc
lret
inc
loop
mov
daa
movsl
into
xor
push
test
lods
and
loope,pt
inc
in
ret
jmp
dec
jne
inc
mov
jno
mov
or
loope
cmp
dec
in
mov
fs
subl
movsb
test
mov
out
shll
outsl
dec
je
lcall
dec
xchg
outsb
mov
adc
jns
call
pop
jbe
fsubs
pushf
cli
sarb
xchg
mov
imul
mov
add
adc
inc
bnd
push
inc
mov
push
add
mov
xchg
mov
fcmove
pop
jp
and
push
iret
ret
inc
pop
imul
inc
rol
cmp
out
sbbl
add
mov
push
push
insb
push
jnp
cltd
sbb
add
jle
mov
test
fwait
mov
add
and
xor
mov
mov
cwtl
xor
movsl
adc
je
enter
sbb
jns
dec
dec
gs
pop
popf
mov
xchg
xchg
fsubrp
pop
sahf
sub
mov
mov
je
inc
mov
pop
or
mov
shlb
jno
outsb
push
push
add
sub
sbb
repnz
jmp
pop
and
fwait
leave
in
rcrl
imul
lret
in
and
popa
jmp
call
mov
leave
add
mov
adc
loope
jno
jg
test
sti
imul
int3
test
test
out
dec
outsl
test
dec
je
in
jns
imul
rclb
inc
pop
int3
daa
orl
cs
sub
and
pop
cli
dec
in
cmpsl
and
or
cmp
xor
adc
xchg
mov
jl
ja
cltd
or
jp
roll
in
adc
insl
lcall
mov
outsl
dec
iret
fs
out
cltd
jp
xor
gs
nop
mov
sbb
mov
nop
mov
adc
fldcw
mov
inc
negb
mov
inc
push
ret
inc
jmp
adc
stos
lahf
jg
mov
cmc
js
pop
fcoms
pop
sbb
addb
lea
pushf
sbb
dec
gs
xor
mov
push
mov
js
mov
xor
xor
cltd
psubb
sub
xchg
push
fistpl
fadds
xor
popa
sub
or
clc
push
sub
pop
xchg
lcall
dec
int
mov
inc
jae
xchg
push
bound
clc
adc
cmpsl
arpl
jg
mov
mov
roll
sub
aam
movsl
push
mov
add
mov
or
aaa
cmp
mov
das
jbe
test
sbb
dec
testb
mov
fnsave
rcr
testb
lret
sbb
clc
jmp
enter
ljmp
xchg
icebp
shr
shll
mov
loopne
adc
fcoml
xchg
or
xchg
sbb
outsb
push
fstpl
jmp
out
jne
mov
adc
mov
mov
or
mov
and
fwait
push
iret
and
mov
inc
xchg
hlt
fcmovne
jg
nop
js
insl
dec
xor
and
bnd
imul
add
ret
xor
out
pop
xlat
int
adc
icebp
xor
fcoml
ret
jns
inc
stc
push
loopne
jo
fwait
mov
adc
mov
mov
add
out
mov
test
mov
inc
cmp
imull
xlat
pop
or
add
xlat
xor
shrl
inc
mov
add
lock
xor
xor
fwait
insb
fldenv
mov
mov
hlt
in
out
fs
loope
stc
mov
xor
sub
fmuls
js
inc
cli
in
sahf
push
add
and
cmp
cmpsl
jo
inc
add
xchg
xlat
and
dec
add
jno
leave
je
out
pusha
push
mov
scas
xchg
js
and
ds
bound
dec
out
add
es
imul
fcmovu
mov
xor
jmp
sbb
dec
jl
mov
out
pop
fcmovne
push
rcrl
rolb
inc
ja
mov
jp
xchg
ret
inc
xchg
mov
es
or
movsl
dec
adc
adc
fwait
lcall
xchg
aaa
div
push
sti
sti
hlt
jmp
sub
addr16
fwait
jecxz
mov
in
hlt
jecxz
fsubrs
insl
notb
cmp
xchg
out
mov
pop
aam
mov
repz
clc
mov
dec
adc
or
and
push
mov
cmpsl
aam
pop
xlat
mov
or
adc
pop
mov
pop
mov
out
ja
aam
rorb
in
fcoms
repz
fdivrs
sbb
pop
push
popf
xlat
repnz
inc
ja
filds
insb
aaa
jmp
mov
xchg
cmpsb
adc
in
negb
lea
lea
loopne
sbb
cmp
mov
aad
es
fwait
into
sbb
cs
xlat
or
outsl
xchg
inc
jne
xor
cmpsl
fildl
aam
lea
pusha
sbb
decl
ret
notl
cs
push
popa
lcall
insl
fimull
dec
dec
sub
push
movsl
fstl
das
push
add
cld
je
loope
andl
ret
dec
push
mov
cld
ljmp
rcrl
sub
push
push
pop
inc
in
fwait
jb
in
and
jb
gs
in
and
mov
negl
inc
stos
aam
pusha
cmp
dec
jmp
mov
mov
rorb
insl
add
lea
gs
insb
add
or
or
fcomps
push
lods
rcll
dec
daa
xchg
adc
enter
xchg
dec
and
nop
lods
js
jne
arpl
xchg
xor
add
mov
mov
mov
xchg
adc
push
mov
cmp
pop
call
pop
test
mov
out
pushf
bound
pop
jbe
int3
push
adc
es
sar
shll
jge
in
int3
add
push
fs
iret
dec
mov
xchg
paddw
loopne
jmp
xchg
cmp
add
into
test
inc
cmc
xlat
fwait
push
xchg
cli
ret
cmp
push
fstpl
lds
xlat
cmp
lock
outsb
lea
aaa
lcall
inc
xchg
jp
dec
popf
inc
push
jmp
roll
icebp
jge
repz
mov
and
fidivl
inc
ret
pop
ljmp
jb
push
and
mov
ljmp
outsl
je
nop
and
inc
inc
sbb
mov
lret
aam
fisubrs
mov
cltd
lahf
cmp
mov
sub
shrl
sub
aaa
ss
mov
xor
or
stos
and
mov
inc
jne
xchg
adcb
and
inc
xor
scas
push
mov
xor
sahf
and
xor
jns
cs
loopne
leave
and
sub
mov
std
jmp
xchg
pop
ret
fistl
cld
sbb
insl
subb
test
pop
cmpsb
mov
xor
sub
push
or
add
push
mov
push
jne
xchg
inc
mov
std
mov
sahf
js
sub
inc
xchg
xlat
hlt
loop
jno
imul
mov
mov
push
in
xor
jl
push
or
inc
sub
out
or
test
cli
fldl
jns
inc
add
pop
mov
in
insb
stc
mov
pop
mov
pushf
xor
sub
mov
sbb
inc
jle
mov
inc
rcll
jnp
jg
jmp
adc
mov
sbb
pop
mov
pop
icebp
rcll
inc
adc
sub
pop
stos
int3
cld
adc
stos
test
push
cmpb
lds
inc
out
jne
jecxz
mov
ljmp
inc
jo
push
xor
jmp
inc
push
xor
ret
mov
inc
jne
and
imul
cmc
clc
bound
sbb
fisubl
inc
jle
cltd
rolb
dec
decl
outsb
mov
test
js
test
js
stc
fcomps
add
mov
mov
xchg
mov
push
mov
dec
add
mov
xchg
ja
sbb
cmp
mov
add
push
inc
addr16
lock
test
adcb
or
pop
incb
mov
movsb
xchg
outsl
mov
mov
mov
push
mov
pushl
into
adc
push
dec
or
sub
jmp
push
dec
add
cmpsl
icebp
and
fsub
mov
icebp
sub
ret
cwtl
inc
in
push
stc
lcall
jb
inc
icebp
jns
in
sbb
test
int3
shl
cwtl
and
xor
mov
jmp
imul
mov
mov
mov
mov
inc
mov
mov
int3
inc
loop
stc
lret
mov
inc
es
inc
sbb
pushf
dec
dec
xchg
and
adc
jmp
jmp
mov
pop
add
cmpsl
adc
sub
ret
push
movsl
or
ficoms
loopne
or
movsl
mov
out
jmp
lea
sbb
cli
pop
in
repnz
adc
es
sub
test
insb
rol
lds
add
xorps
and
fisubs
cmp
shll
lcall
inc
lret
mov
cmp
cmp
aam
add
fimull
dec
add
ret
dec
mov
or
and
das
icebp
push
test
ds
cwtl
mov
test
nop
ret
pop
fstpl
call
push
mov
movsb
or
movsb
in
dec
push
test
mov
repnz
mov
adc
or
insb
loop
lods
fldenv
int3
add
or
cmc
push
lret
adc
ja
or
and
notb
lcall
loop
cmp
repz
xchg
outsb
and
sub
add
adc
imul
repnz
aaa
int3
and
pop
sub
or
xchg
jl
pop
cmp
pop
enter
test
dec
ja
mov
pop
sahf
mov
rcrb
mov
repz
jb
stos
negb
mov
or
inc
and
pop
xchg
jb
lods
or
inc
pslld
dec
enter
push
mov
popf
dec
jo
dec
sbb
fimuls
mov
adc
or
les
or
test
xor
push
add
inc
xchg
cmc
mov
orb
call
les
cmp
adc
and
xorb
imul
aam
sti
or
push
lods
mov
and
or
cld
popf
xchg
push
lret
jmp
test
and
or
ds
pop
stos
popf
cs
xor
mov
inc
das
add
jle
gs
repz
aad
and
pop
nop
aaa
mov
sbb
stos
fs
fsubs
adc
and
push
lods
or
xor
mov
loop
mov
insb
dec
in
add
dec
pop
adc
clc
test
mov
montmul
cmpsb
xchg
jnp
enter
fld
into
push
iret
movsb
mov
out
mov
subl
popa
xor
out
ss
xchg
mov
xchg
cli
ret
or
inc
adc
push
push
aad
stos
adc
mov
in
dec
fmul
inc
sub
cli
cmp
cmpsb
nop
popf
mov
orb
add
cmp
fdivr
ljmp
mov
xchg
ret
fists
rcrb
ds
fidivrs
fs
push
sbb
inc
dec
cmp
dec
movsl
xor
or
push
dec
xor
cmp
loopne
idiv
or
xchg
movsl
movsb
add
add
mov
push
sbb
lods
int3
idivl
stos
test
cmpsb
out
cmc
xor
leave
icebp
inc
cld
fcmovnb
cli
and
arpl
pop
mov
imul
jg
xchg
cld
sbb
sbb
mov
pop
orl
stmxcsr
roll
xchg
jmp
mov
aam
mov
aam
pop
call
inc
mov
mov
mov
mov
dec
cld
cli
xchg
push
jbe
xor
in
sti
sbb
or
push
insl
xor
movsb
sub
xor
xchg
add
icebp
test
leave
mov
dec
sub
dec
cwtl
pop
out
fwait
mov
sub
push
lcall
inc
dec
rcrl
outsl
mov
test
mov
test
add
shr
jo
jno
sbbb
add
lds
xchg
int
sub
inc
movsl
jge
jle
jne
cmpsl
add
data16
das
test
out
adc
xchg
sub
inc
rol
push
dec
add
mov
fwait
test
divb
jl
ret
clc
xchg
sub
xor
lcall
or
xchg
xchg
insl
faddl
rorb
loopne
jne
xchg
out
ds
fadd
mov
dec
lea
ljmp
jg
jb
jno
or
mov
sub
mov
into
sbb
ja
popf
xor
push
cs
sub
out
and
aas
dec
fsubs
jns
sarl
lock
push
imul
pusha
and
lock
jne
pop
insb
inc
lret
sbb
repz
enter
fpatan
inc
inc
mov
pop
mov
mov
ret
outsb
fucomp
adc
jmp
pusha
sub
daa
adcl
mov
dec
lods
add
cltd
ljmp
xchg
push
aam
push
movsb
in
push
cmpsl
dec
test
push
test
jo
lea
loope
dec
test
sbb
jo
add
aad
call
mov
enter
mov
aas
arpl
sbb
jnp
popf
lods
popa
leave
push
scas
sbb
jne
lock
je
out
orl
pop
dec
imul
les
dec
jg
xor
and
je
call
jbe
int
push
decb
mov
push
jp
cmp
fwait
iret
clc
movsb
jl
mov
ljmp
mov
xor
xchg
xchg
lahf
xchg
js
sbb
pop
cmp
push
arpl
add
sbb
enter
cmpsb
sar
lea
data16
jnp
mov
and
push
or
push
cltd
push
adc
clc
lret
cmpb
scas
fdivrl
movsb
mov
xchg
or
cld
and
in
push
cld
mov
jle
movsl
insl
rcrb
cmpsl
arpl
inc
call
aam
adc
dec
imul
fmul
test
xchg
fisubrs
int3
lret
das
lret
push
lret
fnstcw
push
popa
movsb
sbb
xchg
mov
iret
inc
loopne
push
push
ljmp
adc
mov
out
scas
hlt
lea
pop
call
out
jp
repz
push
and
and
pop
neg
add
test
lret
mov
lret
imul
pop
xor
mov
push
sub
loopne
inc
jge
stos
hlt
adc
roll
fadds
popf
mov
or
pop
ljmp
mov
aas
lahf
sub
insb
inc
lret
mov
popf
mov
xchg
and
ljmp
or
xor
xchg
lret
cltd
add
bnd
loop
push
loopne
mov
stos
xor
scas
adcb
inc
mov
sub
fwait
psubusw
push
mov
cmp
xlat
out
cld
push
rcrb
insl
pushf
outsb
dec
dec
decl
lret
and
mov
push
xor
std
push
loope
pop
lahf
rorb
or
clc
mov
mov
push
sbb
fdivr
pop
jecxz
adcl
stc
cwtl
repnz
into
add
dec
out
insb
mov
mov
fmul
loope
or
cli
andb
adc
add
mov
stc
mov
fadds
or
lods
movsb
dec
pop
mov
add
inc
mov
mov
in
pop
lea
push
adc
push
xor
and
cmc
push
out
aam
or
sub
inc
and
rorb
jl
jno
inc
dec
or
aam
lods
sbb
and
leave
push
in
leave
lcall
loop
or
dec
fldt
pop
lahf
pop
loop
push
push
cmc
mov
fstpl
sub
adc
push
push
in
fstps
inc
mov
add
out
mov
push
aad
sub
mov
jo
pop
pop
std
cs
adc
scas
mov
nop
sbbl
push
loope
es
sbb
test
pop
imul
iret
push
push
or
out
cmp
add
enter
mov
xchg
in
movswl
in
pop
fs
sub
cmpsl
push
mov
cmp
les
xor
enter
sbb
cwtl
stos
adc
sbb
lds
cmp
sbb
and
mov
rclb
jg
das
jne
mov
mov
sarb
mov
jnp
loop
inc
or
push
mov
lret
fwait
ret
inc
xchg
cs
stos
cs
mov
xchg
jns
mov
jo
add
es
lea
sub
mov
aad
dec
lahf
xor
lret
cld
stos
in
pop
cmpsb
mov
inc
scas
pop
cld
push
scas
mov
ficomps
xchg
inc
cmp
lcall
cmp
sub
cwtl
and
aas
imul
loop
out
test
sub
adc
pop
xchg
in
jne
mov
pop
sbb
in
jl
icebp
rorb
popa
fstpl
pop
into
pop
mov
push
mov
dec
ss
adc
mov
pushf
inc
test
xlat
movl
nop
xchg
loopne
cmp
cmp
dec
sub
add
imul
mov
inc
and
pop
jp
pop
push
jae
push
subl
mov
dec
dec
loope
roll
out
iret
cmp
xor
lcall
pop
jmp
das
fs
sub
cltd
dec
jg
repnz
mov
imul
or
pusha
mov
xchg
jl
cmpsb
jne
dec
xchg
jle
std
jb
push
out
popf
xlat
cmp
sbb
inc
enter
iret
push
rcrl
jmp
imul
fs
mov
jle
mov
movsb
push
inc
pop
popf
call
mov
sub
loopne
mov
mov
mov
pop
call
lods
in
imul
cli
push
outsb
insl
add
xchg
int
ljmp
jecxz
adc
mov
xchg
sub
hlt
cld
cmp
ljmp
mov
ret
push
call
hlt
test
cli
cmpsl
sbb
hlt
repnz
inc
int3
xchg
es
pop
in
xchg
std
out
out
pusha
dec
hlt
push
fadds
mov
sahf
in
nop
pop
movsb
mov
ret
mov
sub
das
ret
and
pop
aaa
push
and
inc
dec
out
and
cmp
mov
push
aad
jecxz
and
mov
cld
outsl
jns
icebp
sub
cmp
pop
mov
inc
mov
jge
xor
dec
orb
dec
inc
cmp
or
xorb
sbb
xchg
inc
dec
sbb
mov
sub
fnstenv
cmp
daa
test
ret
dec
clc
mov
or
sgdtl
nop
cmp
cwtl
js
rcll
mov
xlat
clc
mov
nop
daa
ds
cmp
mov
loop
fwait
cltd
cwtl
mov
adc
stc
mov
xchg
mov
test
rcll
mov
ja
idivl
xchg
andb
lret
lahf
inc
push
ficoml
mov
lahf
adcl
jno,pt
cmp
and
bound
stos
jp
cld
pop
fwait
popf
cmpsl
shrl
je
jl
gs
mov
aad
enter
insb
loop
and
test
popa
out
mov
test
cs
mov
inc
lcall
jns
mov
mov
shrb
sbb
sarl
gs
repz
sbb
pop
in
mov
arpl
sbb
fisubrs
mov
mov
daa
out
sbb
fists
add
nop
jmp
paddsb
imul
jge
pop
push
jns
xchg
scas
and
jmp
add
jp
cmp
mov
pop
or
call
cld
test
mov
jae
cmc
out
je
fisttpl
shl
push
xchg
gs
ret
pop
dec
fistps
dec
mov
or
xchg
fmull
inc
sbb
aam
jp
aad
popa
outsl
movsl
popa
cmp
jle
div
addb
imul
push
mov
leave
pop
sub
lock
out
push
in
les
inc
and
je
jmp
cmp
jno
pushf
test
frstor
sub
mov
and
fsubr
mov
add
xor
rorl
js
aad
lods
pop
aas
adc
aaa
push
lods
xchg
fbstp
push
roll
ja
and
or
adc
add
aas
nop
mov
les
pop
test
arpl
aam
dec
lds
xchg
sbb
adc
dec
lds
jb
dec
lods
mov
mov
negb
loopne
and
sub
popf
lods
pop
lret
sub
inc
mov
xor
push
sahf
or
mov
ja
out
cmp
das
fidivs
jnp
sub
xchg
std
clc
pop
dec
xorl
and
add
dec
mov
mov
jl
adc
mov
pop
into
and
bound
sahf
jne
bnd
daa
jno
adc
sub
push
dec
push
lret
lods
aam
insb
pop
inc
cwtl
cli
push
in
pop
sahf
int
loopne
sahf
push
cmpsb
xor
mov
and
call
adcb
or
cwtl
jns
loopne
je
xor
sub
fwait
push
aad
dec
ficoms
add
xlat
and
fisttpl
xor
mov
insl
icebp
xchg
mov
test
sbb
cwtl
xchg
out
mov
shl
mov
cmp
xchg
stc
jno
xchg
jns
nop
push
test
cwtl
xlat
mov
bound
data16
mov
mov
mov
sbb
mov
sub
cld
mov
sbb
out
pop
idivl
ljmp
mov
loopne
cmp
pop
cmpsl
pop
ljmp
aad
add
mov
daa
inc
push
cmpsl
sbbl
clc
ret
cwtl
add
div
jp
or
test
mov
mov
es
cwtl
ror
fdiv
fistpll
cmc
xchg
xchg
pop
mov
push
push
dec
jae
hlt
pop
fsub
dec
mov
sub
addr16
andl
mov
xlat
les
dec
mov
fidivs
xor
lods
hlt
push
out
push
js
dec
fsubp
cmp
mov
ss
ret
jb
ret
jno
imul
mov
pop
add
jae
scas
mov
outsb
test
inc
sbb
repnz
or
test
pop
pop
pop
fstpl
je
jne
rclb
cld
cmp
icebp
adc
or
scas
jmp
jmp
mov
jmp
pop
mov
xchg
sub
in
in
fdivr
fbstp
pusha
pop
jbe
jns
add
sbb
xorl
mov
or
cmp
push
dec
sbb
push
andb
mov
jl
xor
sub
stos
ljmp
in
out
xchg
aam
ror
dec
jnp
push
xchg
dec
test
xchg
dec
add
and
fnstcw
lret
jge
rorb
imul
mov
leave
scas
or
mov
xor
mov
data16
stos
scas
andb
rorl
in
jnp
je
cmpsb
inc
mov
cmpsb
inc
xchg
mov
imul
insl
test
cmp
aaa
lock
sub
in
xor
int
rcll
xchg
push
dec
jecxz
xor
lock
and
imul
sbbl
push
jmp
dec
dec
insb
gs
mov
adc
mov
lahf
shll
addr16
lods
pop
xor
lahf
lret
imul
cmp
dec
outsl
mov
xor
or
dec
in
mov
xchg
test
add
xchg
push
and
xor
mov
cmp
inc
adc
std
and
and
dec
mov
cwtl
lret
add
xchg
or
sub
mov
lahf
sti
mov
mov
clc
fs
dec
or
sub
or
stc
mov
test
dec
imul
fisttps
fnsave
jae
lcall
jge
jne
call
in
mov
add
dec
test
dec
lods
push
adc
push
cmpsl
pop
incl
dec
jl
out
push
pop
inc
xlat
cmp
or
add
pop
lar
pop
loope
jmp
xchg
aam
xor
mov
cmp
mov
mov
inc
push
and
cld
inc
rcll
push
aam
dec
in
loop
daa
iret
repnz
mov
ss
cs
je
int
adc
jmp
mov
pop
dec
stos
add
and
test
jg
push
push
sbbl
push
push
jne
les
mov
and
dec
mov
das
subl
add
or
clc
pop
fmuls
or
sarl
test
mov
test
pop
stc
cli
dec
cmp
xchg
sub
andl
mov
xor
mov
imul
mov
repz
pop
pop
mov
leave
or
imul
jne
aas
vmulpd
cmpsb
pop
mov
jnp
inc
pop
lcall
notb
enter
mov
sub
mov
sbb
sar
daa
out
imul
cwtl
sub
movsl
inc
jnp
test
outsl
sbb
sbb
test
xor
dec
addl
je
ret
ljmp
xor
das
xor
push
xchg
inc
sub
mov
mov
or
jecxz
adc
cwtl
jns
xor
add
cmpsb
xchg
stc
or
sbb
sbb
jae
mov
cltd
insb
hlt
cwtl
adc
dec
and
fiaddl
lahf
jb
pop
divl
clc
or
enter
cmp
imul
jo
scas
xchg
mov
xchg
mov
jae
sbb
jno
mov
loope
xor
mov
shr
or
nop
add
pop
sbb
bound
ljmp
pop
xor
push
loopne
movsl
adc
ja
or
lret
adc
xor
ficoml
icebp
iret
sub
mov
mov
and
pop
xchg
jb
mov
out
call
out
sbb
xchg
push
loop
aam
xchg
icebp
or
cmp
xor
movsb
add
mov
outsb
js
xchg
cmp
adc
rcr
andb
les
jl
addb
std
mov
mov
add
scas
cltd
pop
mov
pop
mov
mov
sub
push
cli
insb
push
jb
mov
xor
sysexit
in
sub
mov
adc
divl
inc
push
sub
dec
mov
cwtl
and
or
es
jo
push
xchg
and
sbb
push
sub
or
aad
popa
xor
pop
pop
xchg
loopne
and
mov
mov
je
xor
lcall
jle
and
sub
dec
mov
nop
je
or
fildl
cltd
test
fidivrs
or
mov
lret
sahf
adc
pushf
xchg
pop
fmuls
jge
fwait
into
fs
lods
test
mov
fnstcw
xor
stos
xchg
jo
vpextrw
lds
sbb
scas
inc
cli
sbb
out
loope
mov
je
xchg
sahf
fsubrp
mov
adc
int3
loop
inc
inc
int
imul
aad
inc
xchg
pop
test
mov
shlb
lds
call
pop
int3
sub
mov
pop
and
mov
pop
pop
sbb
xchg
das
loope
mov
dec
xchg
movsb
pop
jmp
sti
push
sbb
mov
scas
adc
cmpb
jl
fs
mov
cmpsb
xchg
pushf
cmp
outsl
flds
jp
bound
sbb
mov
and
out
jl
inc
or
lods
or
movl
add
arpl
pop
fsub
idivl
les
push
fldt
jle
into
add
fdivrs
sbb
adc
sub
pop
sbb
shll
ret
leave
sub
outsl
push
sub
lcall
test
mov
mov
mov
stc
arpl
sub
mov
jl
pop
insl
cmpsb
inc
sbb
jnp
fsubl
fiaddl
mov
pusha
imul
adc
mov
popa
jp
dec
add
push
fcoms
inc
insl
add
lcall
dec
sbb
adc
mov
pop
lods
rdpmc
xchg
dec
xor
jmp
sbb
xor
jl
sbb
fs
mov
adc
xchg
sbb
mov
call
add
add
cs
xor
cmpsb
fcompl
sub
mov
or
adc
jbe
dec
out
mov
mov
addr16
cmp
lock
pop
pop
js
nop
shll
xchg
pushf
lret
mov
mov
inc
jae
adc
xchg
jmp
push
out
stos
loope
pop
cmpsb
cs
jae
addr16
pushf
test
repz
sbb
outsb
sbb
push
shl
hlt
ficoms
sub
pop
push
rclb
jl
sub
out
sahf
pusha
inc
lods
inc
enter
into
dec
sbb
mov
ja
sub
push
jge
cltd
test
inc
jg
repz
adc
cmp
jnp
mov
inc
cmp
loopne
or
push
mov
loope
scas
or
push
sbb
ljmp
mov
psubsw
mul
lcall
adc
cmp
xchg
pop
mov
and
data16
iret
mov
or
pop
insl
stos
adc
cmpsl
mov
sbb
pusha
aad
sub
xor
push
daa
adc
shlb
xor
mov
jge
and
pop
nop
inc
sti
sub
sti
jp
mov
pop
xlat
inc
sub
sti
in
adc
adc
vpmaxub
out
inc
mov
or
incb
loop
mov
lret
fwait
mov
cltd
into
std
and
adc
fildl
into
fmull
mov
sub
leave
cmc
xchg
mov
push
push
xchg
aaa
xlat
jae
sub
jmp
xlat
fists
mov
push
sbb
stos
pop
inc
outsl
shlb
movsl
jb
cmpsl
gs
sbb
pop
repnz
cmpsb
or
xor
lret
dec
cltd
call
inc
lock
dec
aaa
xor
and
into
cmp
daa
adc
mov
aam
sbb
imul
xor
cmp
ret
js
jae
xchg
jnp
pop
or
in
mov
mov
jge
push
jne
int
fstpt
add
fnsave
imul
mov
jne
cwtl
add
outsl
mov
stos
push
or
push
cmp
shrb
das
ja
mov
mov
mov
movsb
lcall
jle
cmp
jle
loope
mov
and
fld
inc
hlt
mov
mov
test
mov
in
add
rolb
inc
cltd
xchg
sti
shll
shl
loop
xchg
inc
fdivrl
rolb
xchg
mov
xor
sbb
or
xor
movsl
pop
sbb
in
orl
push
push
push
sbb
sarb
mov
mov
mov
cmp
std
xor
dec
mov
or
lcall
aad
subl
outsl
fxch
sahf
ret
fistps
in
jo
cmp
es
outsl
inc
rorb
mov
dec
clc
jmp
nop
or
mov
push
mov
shlb
iret
ljmp
cmpb
mov
pop
test
xor
and
inc
mov
shrl
int3
adc
les
push
xorb
mov
xlat
sti
shlb
cltd
mov
mov
cmp
sbb
inc
mov
xchg
mov
xlat
or
pop
bound
add
mov
lods
xchg
mov
jo
cmp
inc
xor
cmp
flds
loope
and
fwait
push
data16
push
cmp
sub
xchg
sub
xor
xchg
aam
inc
jne
lods
jnp
daa
xchg
push
addl
dec
mov
out
cmp
ret
pop
in
addb
xor
aad
test
daa
outsl
aaa
mov
and
rcll
add
movsb
test
lea
stos
adc
insb
fidivl
jmp
pop
jl
das
out
mov
hlt
lret
jp
in
jb
jmp
jne
jns
call
movsl
ds
insl
inc
mov
xor
loopne
xor
aad
xor
imul
cmpsl
movsb
xchg
test
frstor
mov
addr16
cmc
fsubs
jp
jnp
popa
mov
and
pushl
lcall
jmp
or
stc
aad
subb
imul
lea
sbb
fstps
repnz
mov
test
push
sarl
insl
cmp
pop
push
sbb
sbb
jg
sahf
fiadds
adc
fimuls
mov
jmp
fbstp
les
pop
scas
and
lods
movsl
or
cwtl
repnz
sbbb
pusha
jo
xchg
and
or
mov
xchg
mov
nop
and
dec
jecxz
icebp
adc
pusha
xlat
ds
jmp
cmpsl
pusha
mov
or
jnp
sub
jle
jae
mov
filds
xchg
inc
std
das
push
ret
cli
inc
xchg
repnz
into
jl
test
ds
jns
mov
lds
mov
add
push
and
push
and
cmp
movsl
movsl
aas
jns
mov
jns
xor
add
fldl2e
cmp
and
cli
mov
push
and
dec
fnstsw
stos
test
jl
lods
test
mov
mov
movsb
insl
stos
dec
push
cmp
cmp
pop
push
mov
jo
mov
ljmp
mov
push
lods
sbb
cmp
push
xchg
dec
adc
jno
in
pop
jae
mov
push
out
mov
test
shlb
jo
lea
cmp
or
pop
daa
push
call
lods
sub
xchg
imul
and
add
mov
jle
dec
call
scas
sar
or
stos
lods
lock
add
loop
or
sbb
jo
in
fisubs
lods
xor
dec
pushl
pop
xchg
mov
lret
mov
dec
icebp
decl
or
dec
cwtl
jle
push
iret
lret
pop
xchg
dec
or
movsl
push
jmp
cmc
lret
sbb
iret
xlat
lret
mov
dec
xchg
dec
dec
push
cmp
mov
adc
ja
xor
aam
popa
nop
or
sbb
js
lcall
push
adc
sbbb
dec
jl
push
out
mov
add
mov
or
xorl
mov
jg
out
xor
mov
iret
pushf
mov
xor
hlt
sbb
stos
sbb
dec
insl
adc
add
das
add
das
sub
inc
enter
pop
repnz
xchg
sub
in
data16
xor
in
push
jl
cwtl
pop
test
jge
ret
pop
pop
inc
fucom
in
push
push
mov
xchg
or
mov
pop
inc
popf
loopne
jns
stos
pop
negb
push
ror
dec
cld
stos
psubw
ret
in
dec
cmc
out
scas
inc
arpl
sbb
and
adc
in
pop
mov
xchg
push
cs
jo
mov
test
xchg
and
inc
popa
in
cmp
mov
mov
xor
mov
insl
fidivs
out
dec
mov
pop
sub
out
lcall
xchg
inc
insl
lock
and
push
mov
fdivr
jecxz
bound
leave
mov
xor
add
lods
pop
fcoml
in
negl
stc
mov
std
rcr
sub
push
stos
jne
scas
cmpsl
jg
adc
push
xchg
sub
pop
push
dec
test
xchg
lret
cmc
js
popf
mov
inc
jb
movsl
xor
outsl
push
xchg
push
mov
addl
lcall
aad
and
push
add
push
mov
pusha
arpl
mov
ss
in
or
xchg
xor
rorb
mov
lahf
push
sbb
rorb
sbb
cmc
cmp
in
mov
sti
mov
mov
roll
scas
push
lods
mov
mov
or
mov
fcomip
cld
pop
pop
mov
mull
sub
or
jle
packssdw
data16
jle
lods
shl
and
dec
inc
std
and
jl
orl
push
mov
sti
and
sti
fmul
rclb
adc
ja,pn
int3
gs
pop
std
or
xor
cmp
xchg
dec
mov
test
jo
test
gs
shr
nop
sub
in
pushf
bnd
imul
loope
test
jmp
dec
xor
gs
fmuls
pop
icebp
je
dec
aas
mov
xor
pop
lcall
test
repz
lcall
adc
xchg
fbld
cmp
icebp
arpl
jnp
inc
leave
rorl
scas
insb
xchg
or
jnp
sahf
imul
sub
inc
xor
dec
mov
aaa
test
inc
xor
inc
mov
xor
aam
cld
lea
mov
jge
cld
add
pushf
lods
xor
or
int
push
bound
outsb
fcmovbe
and
mov
sub
data16
clc
inc
jno
pop
jl
repz
dec
mov
pop
lret
movsb
stc
xchg
mov
cmp
mov
push
scas
cmpsb
or
dec
ds
daa
pusha
lahf
push
mov
test
inc
push
insl
push
inc
stos
movsb
aas
pop
es
lret
popf
call
in
push
fistps
adc
bound
mov
pop
lea
jne
fdiv
inc
fdivl
insb
sbb
push
and
xchg
xchg
cmp
inc
mov
push
popf
mov
icebp
mov
sbb
sarb
rcrb
lret
push
fsubp
scas
add
jp
jae
xlat
mov
push
and
cmp
inc
push
pushl
jmp
testl
or
orl
jne
stos
js
aaa
dec
push
int3
ja
iret
xor
jg
and
mov
push
mov
std
mov
add
or
bound
das
and
push
int
adc
jb
mov
xchg
cli
das
pop
dec
xchg
lock
jns
add
jo
or
aaa
out
inc
xchg
xchg
cmp
test
xchg
rolb
jne
push
xchg
or
enter
inc
push
inc
jae
fidivs
xor
sub
xchg
mov
lds
bnd
jmp
dec
stos
ljmp
xor
mov
sub
filds
xchg
or
cmp
add
pop
loop
jmp
out
imul
jmp
shll
sti
inc
xor
into
cmp
mov
cmpsl
and
xor
add
enter
cmc
nop
popa
movl
sub
rcrb
movsl
insb
cmpsl
iret
in
repnz
scas
and
sub
sti
push
and
and
sub
pop
test
or
cwtl
cli
insl
xlat
mov
out
pop
and
repnz
addr16
xchg
mov
mov
int
rol
adcb
or
inc
int3
nop
cmp
xlat
mov
mov
out
xchg
movsb
jg
out
mov
push
add
pop
nop
stos
sbb
das
sbb
lods
test
cli
call
xor
sub
outsb
sub
cmp
ficoms
arpl
mov
mov
pusha
int
and
subl
cmpsb
lea
jg
mov
sub
add
and
popf
lahf
fs
cli
adc
sbb
fmuls
mov
add
sbb
xchg
test
scas
xor
adc
jns
xchg
xor
pop
nop
fcompl
loope
bound
mov
and
jnp
das
inc
inc
jg
loope
dec
xchg
adc
mov
adc
dec
fstl
cmpsl
adc
insl
sub
stos
and
and
inc
ds
movsl
fcmovnu
aaa
push
in
push
cld
push
in
inc
pop
outsl
mov
arpl
cmpl
pop
aam
jle
in
sub
cmp
push
jg
and
int
jp
addr16
inc
inc
addr16
dec
outsl
jb
aam
xorb
cmpb
sub
add
out
addl
add
add
stos
inc
xchg
imul
or
gs
mov
xchg
imul
movsl
ja
pop
stos
test
adc
pop
xchg
mov
inc
sbb
adc
testb
jp,pn
xchg
inc
mov
leave
add
aad
mov
loop
loope
or
nop
sbbb
push
push
push
cmc
movl
add
pop
rcll
push
js
int
lds
mov
and
jns
and
inc
jge
push
sbb
psubusb
adc
stos
imul
sbb
lods
fisttps
iret
pop
add
dec
push
adc
aas
fdivr
xlat
mov
fcmovnbe
jge
xchg
or
mov
in
shlb
pop
pop
ss
sbb
pop
lcall
leave
into
pop
xor
mov
bound
fcmovne
mov
ds
mov
xchg
mov
fildl
aaa
repnz
pop
sahf
leave
or
inc
mov
sub
inc
push
sub
or
mov
push
icebp
jbe
jbe
int3
ret
mov
mov
add
or
lds
mov
lahf
int
stos
xchg
mov
cli
repnz
lods
movsb
sbb
dec
in
pop
dec
int3
call
push
in
test
xor
jmp
pusha
dec
push
inc
dec
test
sbb
scas
pop
shlb
mov
out
mov
add
push
cmpsb
pop
enter
sbb
sub
push
lahf
roll
insb
jno
imul
popa
fsubr
adc
adc
aaa
push
add
imul
leave
cmpsl
cmc
sub
or
test
jne
pop
ret
mov
mov
sub
xchg
and
push
jbe
cmp
pop
ret
aas
sbb
xlat
xor
insl
cld
dec
add
rcrb
std
les
js
fstpt
ss
pusha
inc
xchg
xchg
jg
add
inc
test
jle
out
pop
insl
test
jle
leave
add
push
dec
fldcw
shl
addb
sbb
push
jecxz
das
add
xchg
in
push
push
negb
sbb
jmp
push
repnz
add
dec
pop
mov
rcrl
jae
sub
rcrb
shl
shr
rclb
bound
dec
repnz
call
and
icebp
jle
stos
test
sbb
mov
or
fnstenv
repz
arpl
pop
push
fnstenv
dec
mov
sbb
push
stc
mov
hlt
or
pop
add
lds
and
jo
push
ret
add
subl
mov
fldcw
in
cmp
ds
mov
or
testl
xchg
xchg
push
popf
idiv
vpsubd
xchg
push
addr16
ftst
pop
bound
mov
xor
icebp
insl
dec
es
dec
pop
aad
int3
ret
aad
pushf
mov
pop
and
jg
sub
test
pop
faddl
cltd
imul
sbb
push
arpl
mov
cmp
loope
rolb
add
push
shlb
cmpb
mov
out
jne
and
or
pop
xchg
iret
sub
out
lret
in
lret
sub
and
mov
cmp
add
mov
or
lahf
xchg
aaa
mov
gs
mov
repz
inc
cmp
mov
cmc
shlb
cli
ljmp
add
xchg
inc
sub
lret
mov
mov
and
in
decl
and
pop
stos
pushf
dec
pop
sahf
pop
adcb
mov
cmp
jle
sbb
fdivrl
inc
rorb
dec
jno
test
out
nop
aaa
mov
rcrb
data16
sub
sbb
es
or
sbbb
in
shrl
leave
mov
add
aas
mov
dec
mov
mov
ret
pop
paddusb
call
out
cmpb
xchg
pop
rcll
inc
lock
inc
cmp
lock
cmp
mov
aas
jno
mov
xchg
decl
xchg
adc
imul
repnz
fwait
repnz
pop
xchg
out
xor
dec
mov
mov
mov
test
add
cwtl
push
stos
jno
js
sbb
ja
shll
mov
and
push
fs
push
ret
pop
jbe
cwtl
dec
fnstenv
cltd
and
ss
dec
pop
das
sub
mov
outsb
add
or
imul
mov
mov
xlat
or
push
push
in
xchg
dec
push
in
stos
lret
mov
insl
adc
inc
in
cltd
aam
movsb
xchg
outsb
sub
mov
mov
fwait
in
xchg
xchg
mov
mov
jae
pop
pop
ljmp
scas
inc
fimull
adc
cmp
push
mov
xor
cltd
dec
xchg
pop
addr16
mov
mov
lock
movsl
cmc
add
or
inc
das
cs
je
fadd
ja
loop
push
sbb
mov
popf
sbb
pushf
cmp
mov
xchg
icebp
fidivl
add
pusha
add
mov
out
loopne
or
jmp
xor
cmpsl
push
int
aas
jl
mov
and
mov
sbb
imul
data16
movb
sbb
jae
andl
repz
ficompl
xor
movsb
pushf
and
and
in
mov
cwtl
std
loop
stc
test
test
jl
push
rcr
cmp
or
outsb
and
mov
mov
rcll
mov
jnp
jns
sub
sub
inc
cwtl
ror
stos
dec
xor
loopne
lret
fdivp
sub
sbbl
fidivl
loopne
sub
lahf
arpl
sahf
dec
movsb
xor
es
mov
mov
push
jne
enter
and
xlat
and
push
es
rolb
loop
inc
lcall
jge
sbb
dec
xor
loope
lar
pop
xor
pop
push
movsl
movsl
lea
call
sub
pop
add
sbb
out
rcrl
sti
mov
data16
pop
or
jo
ret
or
mov
xor
jl
xchg
push
orl
adc
jns
je
movsb
cmp
lret
hlt
jg
xchg
es
jg
sahf
frstor
sti
mov
pop
add
xchg
add
xchg
les
ds
clc
out
push
pop
rcll
xchg
sbb
ljmp
cmp
push
push
popf
adc
les
inc
cmpsb
xlat
nop
sbb
fidivs
out
les
sbb
pop
mov
bound
push
xchg
inc
and
shlb
sub
cld
dec
mov
mov
scas
lds
dec
adc
cmp
add
movsb
test
sbb
mov
dec
push
cltd
pop
push
lret
or
add
xor
adc
sub
or
movsb
fs
std
sti
jecxz
test
fcmovnbe
inc
and
js
xchg
outsb
pop
xor
jg
popf
jge
mov
loope
cs
push
insb
xchg
adc
jno
add
jae
add
xchg
ds
sti
lret
decb
imul
dec
push
fs
loop
and
insl
jno
adc
call
test
sti
rcrl
inc
jb
negb
dec
cmp
dec
push
incl
xchg
leave
sti
loopne
hlt
fs
popa
out
push
cli
out
es
out
or
jp
adc
cmp
and
mov
inc
pop
xchg
adcb
int
decb
mov
enter
xchg
xor
lods
push
mov
ss
push
sub
cmp
pop
mov
add
dec
lahf
cmp
stos
test
xorb
lods
cmp
inc
call
out
xor
std
std
fcmovbe
mulb
dec
arpl
xor
cs
movsl
orl
ljmp
pop
mov
xor
push
xchg
jl
xor
in
lret
call
push
mov
xor
sub
sub
adc
ds
in
pop
loop
movsl
mov
lods
js
aas
insb
and
test
add
fsubp
cld
pop
enter
les
cs
fisubs
fsubrp
jne
xor
insb
int3
jmp
cmp
add
cli
cli
push
pushf
fcomip
lds
ds
add
lret
outsl
test
dec
fsubrl
mov
add
jnp
flds
mov
pop
mov
adcb
das
pop
out
inc
mov
sbb
outsl
or
dec
sub
aam
cmpsb
lea
xor
xchg
sarl
jns
pushf
int
shlb
jg
pop
push
aam
into
add
mov
sub
ret
adc
scas
mov
xor
mov
xor
xor
in
icebp
sbb
jno
fdivrp
push
scas
jb
shll
cmc
push
ss
mov
dec
stos
cmp
fcoml
es
add
push
stos
rol
sub
ret
mov
dec
addr16
add
mov
dec
pop
push
lea
fldl
mov
push
ja
mov
test
mov
cmp
jne
inc
dec
jecxz
out
rol
pushf
in
cmc
fs
sub
sahf
inc
sbb
and
dec
or
cmpsb
loop
dec
lock
jp
dec
pusha
push
lds
out
rolb
xchg
push
sub
pop
das
outsb
cmp
movl
jnp
xchg
dec
inc
push
cld
leave
incl
jo
cmc
pop
insb
les
movsb
pop
mov
nop
shlb
sub
das
mov
cmp
lock
xchg
jae
mov
add
mov
mov
jecxz
and
inc
or
sbb
xor
cmp
jns
gs
pushf
cmpsb
fisttps
adc
cmp
roll
imul
cli
push
cmp
dec
push
daa
add
lret
imul
js
xor
xchg
aad
jae
or
shlb
dec
sarb
jp
sub
cltd
adc
mov
shrl
xlat
call
or
ds
xchg
dec
int3
test
fistpl
lret
jl
insb
in
addr16
pushf
repnz
roll
sbbl
and
xor
clc
test
push
out
outsb
mov
aas
mov
loop
shll
scas
jno
adc
aas
mov
xlat
push
fucomi
lcall
xchg
mov
xchg
ret
push
gs
lds
mov
arpl
jbe
xchg
mov
push
pop
mov
mov
loope
pushf
cmp
jbe
in
or
mov
push
mov
shrl
andb
pop
lds
scas
push
lcall
sub
pop
daa
xchg
mov
fs
push
mov
mov
jb
dec
add
cltd
or
hlt
leave
js
rolb
and
sbbl
sbb
jbe
push
dec
mov
xor
rcrl
into
push
adc
out
fs
mov
jb
fsubrs
jge
fimull
repz
xor
out
dec
xor
mov
push
jmp
lods
sub
stos
test
xchg
aad
lock
pop
loopne
das
mov
cltd
test
mov
nop
pop
fimuls
aas
lock
nopl
outsb
jno
fmull
jb
out
push
dec
mov
mov
mov
add
mov
pandn
xorb
xor
sub
or
in
mov
inc
rol
sub
push
stos
jo
xor
stc
cmpsl
push
pop
stos
subl
mov
or
adc
repnz
jb
adc
in
hlt
pop
dec
and
dec
or
jns
push
ss
jno
fisttpl
das
pop
xchg
out
xor
addr16
rolb
add
in
jmp
pop
les
mov
or
aam
mov
mov
xor
pusha
dec
dec
insl
cmp
in
fildll
pushf
jmp
cmp
or
cmc
adc
mov
xor
xchg
cmp
mov
xchg
loope
jb
cmp
rcll
popa
push
inc
flds
cld
insb
jae
cmp
fstpl
test
jne
int3
cmp
addr16
jo
bound
jge
xor
loopne
xchg
dec
dec
mov
push
pushf
bound
scas
sub
jge
and
out
call
call
lcall
addr16
int
mov
mov
jnp
cs
in
mov
lods
ss
sysenter
testb
mov
and
aam
cmc
push
xchg
loopne
jbe
xchg
cli
or
jmp
xor
xor
outsl
cli
mov
mov
sub
call
jp
outsb
scas
or
aaa
shlb
pushf
test
add
add
inc
cld
sub
pop
insl
leave
add
cmp
cmpsb
in
iret
jp
adcb
cld
sarb
gs
int3
fists
scas
and
cld
inc
mov
xchg
xchg
jge
mov
int
mov
inc
pop
inc
sbb
enter
xlat
js
cli
pop
jecxz
jnp
mov
adc
inc
es
add
ret
sbb
dec
subb
lea
xor
ja
add
mov
jmp
push
sbb
loop
enter
jge
cmpsb
push
lcall
in
adc
pop
mov
and
clc
inc
adc
sub
adc
mov
clc
subb
sub
add
jae
ret
mov
push
sahf
pop
sub
mov
fisubs
shll
adc
mov
dec
test
and
cs
repnz
cmpsl
movsl
mov
jno
daa
jl
push
lock
js
lret
dec
add
aas
fidivrs
add
add
add
pop
pop
sub
jecxz
lds
pop
mov
dec
mov
add
dec
cmp
out
cmp
test
arpl
mov
loop
mov
lods
rcl
sbb
repnz
mov
inc
shlb
call
xor
adc
clc
sbb
jge
mov
rol
or
cmp
dec
mov
fwait
andb
outsb
or
xchg
test
mov
cmp
or
push
arpl
fs
pop
out
xchg
enter
out
xchg
loope
cwtl
and
adc
lahf
adc
sbb
cmp
repnz
idivb
adc
out
call
popa
push
push
and
js
push
xchg
popl
xor
test
xchg
jne
sti
or
movsb
jb
sti
xchg
sbb
or
shrb
dec
mov
mov
and
xchg
leave
data16
jge
dec
mov
pop
pop
lcall
inc
jecxz
sbb
mov
pop
sbbl
mov
call
insb
sub
pushf
stc
movsb
subb
cmp
push
lcall
call
ret
push
mov
or
mov
cmc
into
and
mov
dec
jecxz
negl
xchg
sbb
pop
jne
arpl
out
rorb
aas
mov
jmp
loope
mov
push
fisttpll
xchg
add
adc
xor
decb
sbb
jns
sub
jmp
add
sti
xchg
aad
sbb
add
jmp
push
lods
sbb
xor
aam
mov
lock
or
xlat
adc
pusha
fisubs
negl
push
dec
mov
pop
or
inc
mov
movsb
mov
pop
cmc
shrb
sbb
sub
fwait
cmp
rol
pop
mov
pusha
cmp
stos
mov
loope
das
repnz
iret
jne
imul
pop
out
lcall
aas
pushf
dec
fiadds
leave
out
mov
inc
jns
orb
clc
pop
test
mov
rcll
add
mov
mov
jmp
insb
mov
cmpsb
lods
add
rcll
cmp
shrb
in
push
shrb
rcrl
loope
inc
movl
jmp
cmp
fisttpl
and
pop
ret
mov
ss
dec
fwait
xchg
clc
jmp
mov
cmp
imul
test
js
adc
mov
mulb
rolb
push
pop
enter
enter
mov
fwait
mov
or
inc
stos
or
jo
fidivrs
or
sbb
repnz
loopne
inc
lahf
sti
inc
mov
data16
out
cmp
jle
in
int
lahf
into
cli
lcall
lods
and
xchg
jecxz
and
sbb
add
inc
ja
pop
pop
add
test
jmp
or
push
das
ds
imul
imul
push
lods
mull
mov
sahf
addr16
test
mov
out
pop
xor
bound
clc
jnp
scas
into
or
clc
cmp
add
xor
sbb
pop
cmp
dec
mov
lea
jne
in
loop
sbb
xchg
sti
movsb
enter
lock
cmpsl
xor
pop
push
pop
icebp
xchg
push
ss
jno
cmp
enter
sbb
lods
mov
aad
dec
jg
jecxz
mov
outsl
jb
add
push
test
popf
movb
and
mov
inc
mov
out
out
ret
test
add
in
mov
loopne
pop
and
nop
mov
lahf
inc
pop
lods
inc
sub
out
adc
cmp
mov
pop
mov
shufps
inc
loopne
loopne
push
fsubrl
je
das
mov
pop
cmp
mov
inc
cltd
bound
pop
pop
dec
pushf
addr16
adc
data16
xlat
imul
mov
and
xor
repnz
mov
mov
add
in
inc
push
mul
pop
cli
ss
out
pushf
mov
rclb
sub
rcrb
clc
xor
mov
xor
repz
mov
push
add
repz
xor
imul
dec
sbb
dec
mov
jg
les
xor
push
movsb
fcoms
fisttpl
mov
mov
out
adc
dec
xor
jle
out
ret
inc
testb
outsb
cmp
mov
fnstcw
mov
orl
push
xor
decb
sbb
inc
sar
iret
xchg
push
dec
sbb
mov
lahf
scas
push
cmpsb
subl
push
in
pushf
dec
fprem
shr
hlt
outsl
mov
and
dec
adc
cmp
inc
fdivrl
roll
aas
cli
cmp
and
xchg
add
icebp
jle
roll
clc
jg
arpl
imul
cmc
out
loop
inc
pop
fisubrl
sub
inc
xchg
out
sbb
mov
dec
or
inc
mov
xchg
add
add
add
mov
test
xor
dec
xlat
or
xchg
sbb
roll
pop
sti
decl
pop
add
push
mov
out
imul
outsb
push
xchg
shl
sub
test
mov
cmp
es
mov
sbbl
out
jo
sub
xor
icebp
add
rclb
adc
out
sbb
mov
loop
pop
outsl
inc
in
mov
mov
dec
cwtl
loop
gs
push
rclb
inc
bound
sub
fsubs
mov
std
push
ror
jo
mov
js
in
pop
pop
push
inc
add
scas
rcr
xlat
frstor
jmp
inc
inc
sahf
scas
or
cli
xor
les
dec
enter
insb
roll
jne
sahf
xchg
jmp
lods
ss
xor
jecxz
popa
insb
cmp
cld
or
pushf
xor
imul
cmc
xchg
jl
xchg
outsl
sbb
adc
sub
stos
mov
stos
push
cwtl
addl
sbb
bound
adc
adc
icebp
mov
push
addr16
mov
mov
jecxz
std
mov
jl
lock
inc
xor
pop
and
mov
in
pop
popf
jmp
xchg
add
push
jbe
clc
cmp
cs
dec
dec
dec
insl
jbe
imul
pop
daa
incl
mov
sub
cmp
imul
ret
out
cmpsb
mov
mov
mov
inc
call
in
pop
jmp
cmpsl
add
scas
jp
lret
sbb
sbbb
outsl
pop
jae
lea
push
call
test
cwtl
and
cmpsl
pop
mov
fs
mov
out
xchg
mov
cltd
lcall
