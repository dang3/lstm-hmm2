sbb
add
inc
into
fidivs
ret
movsl
les
dec
mov
pop
scas
inc
popa
mov
sbb
in
movsl
inc
and
sbb
xchg
movsl
mov
and
bound
xor
dec
inc
pushf
mov
fwait
and
outsb
iret
gs
push
adc
xchg
subl
iret
and
jmp
aaa
lods
dec
pop
and
es
pop
jecxz
cmp
ret
dec
push
pop
and
or
mov
pushf
cmp
and
in
cmp
pop
and
lea
mov
rcrl
xlat
mov
pushf
sbb
cli
fcoms
xor
loop
mov
clc
xchg
popa
jne
ja
js
call
sub
ret
sbb
scas
std
push
jmp
lods
and
mov
pop
mov
push
and
ret
sbb
adc
test
mov
add
in
mov
jmp
std
xor
les
push
add
fcmovu
cmpsl
lock
lret
jae
pusha
nop
inc
testb
movsl
lds
cmpsb
lock
test
jmp
jge
repz
sbb
and
cmpsl
and
cmp
mov
sub
in
inc
mov
lock
adc
cmp
outsb
fstl
mov
sbb
cli
inc
ret
mov
imul
inc
or
je
and
lods
out
subl
vpavgw
mov
inc
pusha
jg
loopne
xchg
lea
pop
loopne
pop
lahf
cmp
into
mov
in
xor
ss
lods
mov
pop
pop
push
push
inc
adc
jecxz
sbb
xchg
and
jmp
jmp
enter
movsb
cmpb
mov
ret
loope
fwait
out
pop
mov
imul
das
xor
aam
jmp
xchg
and
loope
adc
mov
stc
imul
xchg
lret
xchg
dec
mov
sub
ljmp
sub
mov
mov
xor
mov
jecxz
ljmp
call
sti
mov
inc
xor
fiaddl
mov
in
and
stos
ljmp
cmp
aad
je
jp
imul
sub
sbb
push
mov
adc
stc
daa
cmc
enter
xor
notl
cmp
adc
xor
push
rcr
ret
js
mov
add
dec
xor
inc
add
std
imul
xlat
fnstenv
xor
and
xor
mov
add
inc
nop
js,pt
and
sbb
movsb
call
loopne
arpl
fistpl
xorl
jns
ret
mov
scas
stc
les
das
outsb
mov
hlt
cmpsl
adc
and
inc
lods
or
pusha
or
rcll
cld
dec
jle
daa
jno
enter
seto
lods
es
xor
stos
ret
aaa
dec
dec
lcall
dec
add
movsb
icebp
sbb
bound
mov
popa
iret
dec
push
sbb
ljmp
jne
xor
push
lds
mov
test
adc
ret
inc
push
push
xor
aad
idiv
mov
js
addb
push
mov
rolb
ja
fistl
es
jns
fbld
push
fadds
bnd
cmc
jno
fimull
test
mov
pop
fisubs
sub
cmc
cmp
call
mov
bound
add
pushf
pop
or
push
in
inc
mov
jmp
negl
dec
push
divw
and
shlb
jo
in
stc
int
pop
hlt
rcr
out
jecxz
addb
xchg
adcl
cmp
int3
icebp
jns
or
rcr
add
mov
ljmp
xor
frstor
and
sahf
adc
je
stos
jmp
out
push
iret
add
cmp
cmp
cmpsb
dec
addr16
and
aas
add
cmp
and
push
xor
add
adc
lock
mov
sbb
push
or
loope
jp
adc
lods
jg
mov
push
js
lcall
push
fcoml
sti
add
jbe
xchg
and
imul
scas
sub
sub
xchg
xchg
addr16
pushf
jae
and
lcall
push
push
leave
mov
pop
lret
mov
cmc
nop
test
adc
xor
out
mov
out
push
pop
stos
pop
cwtl
fistps
mov
fucompp
xchg
pop
les
in
mov
mov
popa
test
and
xor
mov
xchg
mov
test
mov
ret
arpl
xor
cs
cwtl
mov
in
mov
xchg
addr16
lcall
stos
pop
testb
sub
sbb
jnp
outsl
mov
jns
push
jbe
push
dec
mov
inc
les
lea
jne
mov
push
xor
outsb
pop
cmp
lret
sub
dec
stos
or
pop
dec
jne,pt
add
or
add
cwtl
add
inc
lods
imul
pop
rorl
adc
lahf
stos
call
xchg
add
mov
mull
or
sbb
xor
movsb
or
inc
addl
add
mov
xchg
imul
loope
fidivl
push
add
sbb
xor
fildl
sbb
add
mov
inc
sbb
add
add
rorl
loope
sbb
xlat
cmpsb
sbb
push
ljmp
add
movsl
push
dec
push
sahf
sbb
lret
adc
pop
out
mov
icebp
jns
stos
data16
daa
insl
adc
inc
jnp
test
into
sbb
int
aad
stc
push
pop
dec
sti
pushf
jg
sbb
push
loop
std
xchg
aam
jae
xchg
mov
push
dec
adc
stos
outsb
mov
bound
out
aaa
stos
daa
jnp
or
jge
push
xchg
outsb
adc
pop
dec
push
add
and
pop
mov
add
adc
out
jbe
cmp
gs
lods
ljmp
xchg
jnp
lahf
lcall
sbbb
fs
mov
hlt
ja
test
cltd
adc
pop
shll
jns
pusha
cmp
ds
mov
fdiv
add
inc
lea
xchg
repz
mov
fwait
mov
xor
test
xor
lds
sbb
xor
dec
cli
fsub
test
ret
out
mov
xor
fwait
pop
cmp
leave
inc
jecxz
out
cmc
pushl
and
insl
jmp
pop
jae
adc
insl
popl
xlat
and
loop
mov
push
jmp
push
gs
out
rep
fbstp
jmp
or
xchg
outsl
imul
jg
xor
cmp
ret
out
clc
pop
andb
les
add
or
aam
xchg
xor
lock
mov
sub
cmp
movsl
outsb
jmp
data16
inc
pop
in
pop
int
insl
adc
jp
mov
cmp
into
movsl
pop
repz
jo
and
fcoms
ret
pop
lds
fsubr
mov
xchg
int3
pop
mov
movsb
roll
xchg
mov
popf
inc
mov
icebp
sbb
sarl
mov
aam
stos
repnz
push
mov
repnz
test
imul
ror
lods
stc
jae
rcll
test
or
mov
into
std
cmp
sahf
cmp
jp
outsb
es
mov
jae
push
mov
jl
mov
daa
rcrb
xchg
sub
leave
mov
int3
in
cmp
push
fldl
loop
and
mov
cmpsl
mov
sbb
sti
out
or
adc
xchg
gs
jmp
cs
jno
cmp
add
cmp
or
clc
test
cltd
movsl
sub
fcoms
ss
xchg
icebp
sbb
jge
xchg
cmpsl
rcr
dec
and
imul
push
sti
mov
xchg
xor
add
fmuls
daa
jp
into
jmp
stos
imul
out
mov
xchg
jg
push
or
insl
ja
adc
sti
inc
mov
mov
xchg
daa
rolb
pop
cmp
je
out
ja
pop
xor
inc
sarb
inc
stos
adc
inc
mov
jle
xchg
bound
fwait
mov
hlt
pop
push
mov
dec
cmp
sbb
les
std
fisubrl
das
or
mov
or
js
orb
cli
mov
stos
je
push
push
pop
popa
cmp
fimull
sbb
inc
out
movsl
inc
fwait
fwait
or
aad
test
rclb
add
cmp
cmp
dec
mov
nop
cmp
adc
or
sbb
xor
pop
jo
xchg
shll
bound
xchg
out
rolb
xchg
or
fs
movsb
sbb
cmp
add
mov
mov
add
gs
fs
adc
aam
lahf
push
test
jg
pushf
xchg
jp
jbe
sbb
ror
mov
int
bound
arpl
inc
loope,pt
mov
fs
pop
mov
mov
or
movsl
add
lahf
loopne
bound
xchg
push
loope
inc
clc
and
add
mov
jbe
ja,pt
test
or
mov
fdiv
or
xchg
test
ret
mov
scas
sbb
ror
imul
jp
int3
sub
hlt
and
dec
mov
dec
ja
xchg
mov
sub
add
push
jle
xchg
clc
cltd
jge
cwtl
jmp
jl
sub
stc
mov
push
pop
nop
jmp
cmp
daa
fdivs
mov
rol
lret
aas
sub
pop
jmp
mov
into
cmp
cmp
xor
cltd
std
lcall
inc
shll
xor
mov
inc
nop
jg
sbb
fcomps
call
cmp
aam
dec
sbb
mov
cmp
push
push
jle
cmp
jbe
call
dec
ja
xchg
jae
sbb
adc
lret
ds
xor
imul
mov
cld
inc
pop
addr16
lds
addl
xorb
cld
dec
inc
leave
sub
xor
inc
push
mov
inc
sub
shrl
aam
ret
lock
rcrl
repnz
nop
adc
outsb
add
lock
cmpsl
loop
leave
push
sub
test
sbb
sbb
sub
push
bound
cmp
jmp
mov
out
imul
dec
jp
add
jg
dec
cmp
pop
faddl
popf
push
dec
sub
adc
lcall
xchg
cmpsl
mov
lea
std
cmp
adc
leave
lahf
aaa
fs
mov
and
jb
loop
pop
in
insl
loopne
inc
loop
sbb
mov
sbb
push
cltd
jp
enter
xchg
cmc
pushf
inc
test
lock
xchg
xor
push
int
ds
movsl
sbb
mov
fisttpll
loope
and
fidivs
ss
cmp
sarb
cld
in
ja
push
add
sub
jae
mov
mov
cltd
or
stc
imul
fwait
pop
movsb
push
jl
xor
pop
pop
or
jle
fmuls
cmp
jbe
lds
dec
data16
or
fnstcw
test
repz
lret
cmp
xor
mov
mov
lds
rcrl
xabort
scas
fsub
std
dec
adc
cmp
xor
inc
lcall
inc
fidivrs
insb
insb
test
stc
out
int
rclb
mov
out
xchg
mov
mov
jmp
loopne
lahf
mov
adc
loop
dec
push
aam
push
push
nop
int
icebp
cmpsl
mov
test
std
xor
cmc
leave
aam
xor
push
inc
jns
lcall
cli
inc
pop
pop
ja
icebp
xor
xor
mov
xchg
movb
jns
fwait
push
aad
and
rep
add
les
cld
pop
ds
add
repz
mov
sub
jmp
inc
aad
andl
rcll
sbb
in
mov
adc
add
jae
je
rcl
out
testl
std
hlt
movsl
iret
adc
sbb
xor
xchg
icebp
mov
ret
mov
pop
xchg
cmp
fcmovb
xchg
jge
and
sub
in
hlt
xor
js
outsb
dec
out
sub
add
imul
push
gs
jae
bound
fistpll
cmpb
sbb
cs
push
out
xbegin
cmpb
pop
pop
dec
mov
push
scas
cmp
repnz
fcmovne
aad
inc
push
push
inc
scas
mov
xchg
arpl
sbb
pop
into
sti
cld
adc
stos
pop
sub
xchg
xchg
push
ror
fwait
shrl
pop
insb
sub
daa
mov
aas
mov
sbb
dec
push
sti
xchg
daa
or
sub
pop
test
iret
mov
in
addr16
jmp
sbb
xlat
adc
lods
push
jne
loopne
in
repnz
aam
fwait
lret
and
and
jne
icebp
movsb
mov
dec
push
xor
out
mov
push
popa
stc
ret
jo
cmp
cld
mov
lods
jp
in
push
fimull
aad
in
fcomip
fisubrl
xor
fs
ljmp
call
and
mov
dec
int3
test
les
int
lds
mov
pushf
out
dec
daa
jle
std
mov
ror
enter
daa
movsb
add
scas
push
and
pop
out
mov
sahf
cmp
lret
out
mov
dec
cmp
mov
rcr
inc
pop
rorl
paddusb
mov
or
inc
sbb
hlt
pop
rcrb
loop
std
mov
mov
mov
bound
inc
add
movsb
push
in
cwtl
cmpsl
xor
xorb
dec
loope
xor
in
in
jp
std
enter
ss
add
and
fistl
push
scas
cmp
pop
mov
jle
dec
xor
fmull
sbb
jbe
ret
and
push
sbb
mov
jbe
fisubs
leave
sub
insl
mov
add
scas
rolb
jle
mov
or
mov
inc
jbe
mov
repz
jg
sub
aas
push
add
mov
divl
ds
mov
popa
stc
and
sti
cmp
jle
and
add
sbbl
adc
pop
jge
jg
test
arpl
cmp
dec
es
push
cld
shrb
stc
frstor
push
push
fstpt
loopne
sub
dec
repz
je
out
adc
orb
pop
fsubr
or
push
mov
add
lock
stc
jle
scas
iret
ss
push
sarl
hlt
arpl
addr16
mov
lds
mov
arpl
iret
lahf
wbinvd
rcll
dec
je
pop
cwtl
jg
aaa
adc
mov
cmp
xor
or
or
cmp
or
leave
mov
leave
rolb
push
push
cmp
out
adc
xchg
movsb
pushf
lcall
cmpsb
push
in
shrb
add
out
mov
es
xlat
and
sbb
dec
cs
add
movsb
mov
pop
jno
and
add
aaa
add
jecxz
and
mov
in
movsl
inc
adc
out
daa
stos
iret
mov
rclb
mov
outsb
jl
mov
lcall
push
cmp
and
cmc
testb
jl
popf
cli
adc
mov
xchg
or
bound
lret
je
ret
scas
mov
lods
leave
insb
cmpsb
mov
fcompl
fldt
mov
sbb
xchg
inc
adc
fnstsw
dec
mov
mov
pop
dec
test
add
pop
push
dec
hlt
mov
jo
adc
and
push
bnd
imul
scas
je
mov
mov
aam
push
mov
imul
lock
cmp
orb
sbb
scas
das
stos
das
mov
pushf
sahf
lret
mul
js
or
inc
cltd
pusha
sbb
test
pop
pusha
mov
arpl
jns
stos
call
xchg
push
fstps
pop
sbb
dec
sbb
mov
inc
pop
xlat
ja,pn
jno
mov
icebp
stc
add
push
scas
bound
cmp
pop
stos
xor
mov
lock
addr16
imul
rcrb
jg
or
stos
movsl
push
inc
and
in
push
nop
jp
mov
lcall
xor
sarb
gs
xchg
or
fcomp
cmc
sbb
sbb
push
xchg
inc
inc
lcallw
cmp
stos
sbb
test
loope
xor
push
jo
mov
jecxz
scas
call
enter
in
out
cwtl
xchg
xor
mov
test
rcl
pop
xor
xor
cmp
icebp
shlb
sub
mov
icebp
xor
mov
push
pop
mov
out
enter
pop
jae
xchg
mov
test
push
jns
sbb
arpl
fcomps
loop
jns
out
push
lret
pop
ret
pop
insb
add
mov
loope
sub
outsl
inc
lock
mov
add
dec
shlb
rcl
dec
mov
lahf
push
xorl
or
movsb
push
leave
push
fcompl
shl
inc
mov
jmp
mov
adc
mov
or
sarb
mov
int
les
divl
mov
adc
je
bndstx
jnp
nop
outsb
dec
fwait
loope
xor
pop
mov
jno
cltd
push
aaa
shr
xchg
mov
fnstenv
jne
into
fidivrl
fs
test
jge
ljmpw
popf
fsubr
rcl
sub
mov
mov
aaa
xor
jecxz
push
clc
pop
push
cmp
inc
je
lock
xorl
movsl
out
sbb
xor
dec
jl
addb
fstpt
out
roll
jecxz
cmpsb
pop
and
xchg
xchg
mov
xor
push
ss
pop
data16
mov
ds
push
fimull
sub
jnp
fwait
xchg
jo
andb
inc
add
iret
dec
movsl
aad
fmuls
mov
push
pop
mov
dec
stos
sub
pop
add
sub
mov
add
sbb
or
stos
rclb
inc
push
mov
push
std
clc
mov
data16
psrlw
sbb
lret
adc
lods
in
push
fcom
pop
cli
insb
jno
xor
imul
inc
in
cs
fcomps
push
mov
inc
or
mov
jo
loop
inc
mov
loop
scas
popf
xor
sti
pop
orl
stos
and
inc
popa
ljmp
arpl
cld
mov
xor
movsl
xchg
test
pop
enter
sub
xchg
shll
mov
cmp
adc
inc
scas
int3
xlat
push
dec
adc
push
sub
lcall
dec
sarl
ss
jle
fistpll
fisubs
mov
pop
xchg
fucomp
test
lret
push
mov
inc
mov
mov
mov
xchg
cmpsl
subb
dec
testb
dec
xor
imul
stc
xchg
notb
imul
test
cli
push
test
jbe
push
mov
adc
sub
dec
jecxz
mov
cs
pop
in
jge
test
sub
leave
inc
mov
fstl
or
pop
mov
xor
scas
xor
imul
pop
cmp
dec
dec
loopne
bnd
fldcw
push
xorb
push
rcl
and
fisttpl
mov
lret
mov
mov
cwtl
dec
or
jle
out
loope
inc
idivl
add
inc
push
gs
ja
lods
loop
dec
push
jl
adc
xchg
rcrl
xor
insl
dec
add
and
or
xor
je
loopew
jl
out
add
xlat
xchg
push
pop
pop
pop
push
jne
xchg
aad
sub
adc
jo
cmp
dec
and
test
push
mov
cld
sbb
push
lret
loopne
enter
iret
push
sbb
enter
fldenv
mov
ds
mov
jno
or
divl
and
mov
or
mull
pop
sub
cmp
inc
out
addr16
lods
cmc
ljmp
fsubs
sub
leave
adc
sbb
mov
push
out
lret
fdivs
hlt
testl
sbb
loopne
pop
dec
mov
mov
dec
das
rorb
in
ljmp
lahf
hlt
mov
nop
vandnpd
pop
je,pn
adc
or
insb
cmpb
sbb
xorb
pop
mov
push
cmp
cmp
xchg
je
dec
jno
add
or
lret
sub
sbb
dec
inc
aam
in
push
mov
imul
xor
lea
adcb
xlat
dec
lcall
in
cld
loope
add
test
nop
mov
jecxz
rcr
mov
rorb
in
pop
jne
fstl
in
pop
sub
fwait
insl
dec
jbe
aaa
adc
lods
outsl
loop
sub
pop
adcb
shll
push
ret
bound
xor
pop
xchg
sbb
jae
cltd
js
push
test
dec
repnz
push
mov
pop
movl
pop
cmp
mov
pop
adc
mulb
cmp
adc
mov
mov
xchg
fdivl
pop
fnstcw
mov
jp
arpl
jo
dec
and
mov
add
divl
mov
add
add
adc
stos
aam
test
ds
cmp
and
mov
pop
lea
mov
xor
pushf
data16
or
imulb
and
mov
mov
out
push
xor
jne
cmpb
sub
or
fnsave
cmp
hlt
cmpsb
jp
stos
pusha
push
outsb
push
orb
mov
pop
and
sub
sahf
sub
or
pop
decb
xchg
inc
or
and
ja
out
jo
pushf
push
push
shrl
pop
cs
lods
imul
mov
mov
or
aad
fdivl
mov
pop
orl
mov
imul
sbb
mov
dec
add
int3
scas
sub
adc
lret
pop
out
and
push
mov
out
mov
inc
push
sbb
enter
add
pop
loop
loopne
fxam
dec
xchg
imulb
mov
adcb
xor
dec
in
pop
arpl
mov
inc
lock
sub
jg
pop
push
into
call
ds
fucomip
loope
adc
adc
in
cmp
lea
push
mov
sbb
jo
adc
inc
xchg
pop
subb
inc
cld
mov
and
mov
jns
xchg
mov
js
jp
fsts
and
xchg
std
xchg
mov
inc
lods
mov
mov
xor
bound
and
icebp
inc
cmp
and
fistpl
mov
stos
pop
xchg
ljmp
xor
push
cmp
dec
dec
outsb
out
and
punpckhdq
adc
inc
pop
xchg
cmp
mov
add
lahf
lods
cmpsb
xchg
add
mov
sarl
mov
repz
out
out
and
pop
xchg
mov
and
mov
cmp
fistpll
xor
jo
mov
loope
das
inc
xchg
popa
push
push
movsl
out
ds
leave
das
xor
test
add
out
repnz
xchg
jnp
fnstcw
sub
pop
xchg
incb
mov
mov
xor
sub
in
adc
aas
in
cltd
inc
out
jnp
mov
lods
ret
pop
adc
jb
stos
pop
pop
shll
push
and
xor
fsubl
add
ficoms
xlat
jl
sbb
addr16
xchg
pop
push
inc
aad
jmp
adc
xor
inc
jae
out
lds
inc
jno
sahf
cmp
cs
sahf
mov
inc
mov
pop
mov
and
add
dec
xchg
mov
jae
mov
push
sbb
popa
mov
out
aam
fs
mov
or
dec
dec
mov
jb
jno
addl
pop
out
gs
mov
xor
push
push
cmp
cltd
cmp
into
lds
adc
add
inc
iret
xlat
ret
sbb
jnp
jae
iret
pop
lock
adc
push
xor
xchg
cltd
clc
or
nop
lret
inc
iret
cld
mov
sarb
pop
mov
xchg
movsb
and
pop
adc
fwait
stos
popf
icebp
repnz
adc
jns
mov
cmp
mov
cwtl
jb
mov
insb
sarb
or
lds
or
into
cmp
sub
pop
clc
fs
rcr
sahf
or
fimull
jb
cltd
and
mov
xlat
add
add
test
jbe
jg
stc
push
je
xor
push
mov
lea
movsb
jge
aas
mov
cwtl
mov
push
inc
push
mov
test
ficomps
movsl
lea
stos
sbb
hlt
or
inc
out
xchg
into
cmpsl
jle
dec
icebp
cmp
mov
nop
inc
subb
je
test
xorb
jnp
pop
mov
iret
sahf
xor
je
das
aad
in
gs
pop
mov
stos
adc
xor
pop
mov
inc
push
sbb
push
fwait
in
ret
and
lcall
dec
inc
sub
inc
shl
pop
roll
add
dec
cmp
sub
movsl
jl
cld
sbb
mov
mov
shrb
or
add
adc
lock
shr
xor
in
incl
push
lods
scas
out
inc
test
mov
nop
nop
fwait
mov
xor
fistpll
lret
mov
aaa
cmp
push
and
das
mov
shlb
jmp
jb
js
jmp
fwait
orb
sbb
cmp
inc
cmp
outsb
mov
adc
repnz
push
faddl
jne
add
sub
pop
sti
cmpb
fwait
movsl
add
clc
cld
addr16
sbb
pushf
push
fwait
in
push
sub
adc
ljmp
decl
sbb
sbb
jo
pop
pop
inc
imul
or
mov
mov
adc
inc
jle
cmp
test
jns
inc
mov
dec
into
jns
sub
cli
js
inc
mov
cmp
mov
fistps
pop
mov
sbb
sbb
inc
inc
sbb
cmp
mov
sbb
or
mov
into
mov
mov
and
xchg
jmp
push
and
call
dec
push
loope
mov
lret
pop
cmc
aad
stc
dec
sbb
mov
dec
mov
mov
rorl
mov
lret
pop
subl
ljmp
das
dec
sti
add
or
sbb
lret
decl
add
dec
out
inc
and
xlat
gs
pop
lea
popf
icebp
sti
loop
loopne
mov
push
mov
or
out
js
iret
mov
mov
pop
int
icebp
xchg
add
push
scas
int
add
mov
ja
clc
mov
mov
xchg
iret
sbb
mov
fs
sub
xchg
push
shrl
pop
inc
cmp
test
dec
ja
out
jmp
rorl
test
xor
pop
jl
test
push
mov
cmp
mov
xchg
sbb
jb
outsl
add
jg
dec
je
jp
je
lods
call
aam
ss
in
icebp
inc
fwait
lods
lea
hlt
inc
jge
sub
add
movsb
daa
pop
push
sti
test
iret
insl
push
fildll
inc
lret
adc
enter
add
inc
jg
mov
jbe
shlb
jns
dec
add
jmp
mov
inc
dec
jne
in
dec
movsb
stos
inc
or
mov
fucompp
sahf
push
pop
pushl
xor
dec
enter
imul
in
mov
pop
mov
fbld
movsl
jmp
mov
aam
into
pop
adc
or
mov
std
pop
mov
cmp
sub
mov
es
lea
jmp
sbb
int
dec
jecxz
popa
cmp
pop
cmpsl
loop
jae
mov
ficompl
outsb
lods
fdivrs
cmpsl
pop
test
and
sbb
enter
idivl
push
pushf
rorl
scas
mull
and
pop
outsl
cld
xchg
gs
xor
imul
out
or
test
test
pop
outsb
mov
dec
xor
enter
dec
mov
and
jmp
repz
ja
adc
scas
das
and
jno
xor
movsl
sub
fildll
adc
push
pop
int3
pop
xor
movsl
xlat
xor
sub
jo
push
or
adc
test
fwait
dec
and
lahf
dec
lods
fdivrp
movsl
bound
xchg
jne
cmp
xchg
xor
sub
adc
and
gs
inc
jnp
cltd
in
cmc
cmp
or
xlat
roll
scas
das
shll
rcrb
mov
cltd
jnp
mov
pop
fidivrs
mov
push
cld
mov
call
scas
iret
push
les
mov
sbb
sub
adc
mov
adc
sbb
pusha
gs
lahf
and
inc
lods
fdivl
xor
faddp
sub
cmc
in
in
jns
mov
loope
mov
sub
lea
dec
stos
js
test
add
lcall
jbe
arpl
cs
inc
dec
jo
fs
dec
sub
cwtl
mov
and
lods
mov
negl
stos
leave
dec
inc
testb
cmpsb
inc
out
movsl
arpl
popf
bound
inc
and
jne
mov
cmpsl
fs
inc
adc
les
jo
cmpsb
popa
mov
enter
and
inc
rcr
adc
andl
js
mov
insl
mov
sbb
fstps
js
imul
int3
mov
xor
xchg
push
mov
lods
aaa
fisubrl
push
sub
and
inc
xor
mov
aam
mov
add
lcall
daa
repz
push
stos
mov
xor
pop
sub
sub
fimull
jae
xchg
dec
es
mov
test
jbe
add
pop
inc
mov
in
inc
insb
hlt
push
fiadds
and
addr16
add
mov
pop
ds
aam
sub
lahf
leave
iret
push
movsb
out
jb
mov
ficoml
mov
pop
push
out
out
lret
or
jge
imul
dec
jge
jle
ret
pop
fnstsw
cmc
cmc
sub
push
xor
xchg
push
adc
pop
lret
loope
scas
adc
dec
adc
jge
xchg
fmuls
int
mov
pop
fabs
xor
jmp
movsl
sub
pop
inc
mov
daa
pop
or
adc
out
dec
insb
shlb
cmp
negb
xchg
push
popf
mov
and
xlat
inc
push
imul
cltd
shll
test
jnp
dec
or
jbe
fists
mov
inc
and
add
outsl
mov
dec
mov
pop
push
jl
ret
loope
outsl
sbb
call
push
das
push
dec
xchg
insb
pushl
adc
xor
xor
xor
pop
mov
fucomip
push
or
mov
repz
add
and
stos
imul
sub
sbb
add
jns
ja
push
dec
aad
xchg
or
sti
ja
pop
les
sbb
divl
data16
js
mov
lea
aad
in
fwait
xor
rolb
data16
lock
sub
sbb
pop
jne
xchg
stos
xchg
push
rcr
std
push
dec
dec
xlat
shrl
inc
dec
mov
lods
adc
xor
bound
es
js
lods
mov
scas
jbe
or
imul
mov
xor
xor
into
test
jns
fwait
or
in
xor
int3
or
mov
addr16
sub
sub
loope
sub
dec
pop
jmp
arpl
int
out
fdivr
test
lahf
movsl
push
lret
add
fdivrp
jbe
jg
roll
xchg
test
and
mov
jo
ja
mov
orb
push
popa
mov
sti
lds
xor
mov
addr16
sbb
mov
test
test
shr
out
lret
cs
adc
mov
rorb
mov
pop
notb
imul
and
icebp
movsl
jns
jns
adc
xor
fistps
rol
mov
cmp
jg
jge
mov
in
aam
pop
ret
pushf
mov
in
ret
mov
mov
jmp
xchg
push
mov
dec
sub
mov
je
mov
rclb
fucom
stc
mov
sub
cmpb
sbb
add
addr16
gs
or
push
jg
push
les
ljmp
jecxz
out
jo
movsb
jae
add
js
test
mov
jo
sbb
popf
fwait
sarl
or
rcrb
sbb
daa
mov
js
sub
scas
int
push
pop
mov
into
and
add
mov
lods
jge
scas
xchg
jmp
pop
pusha
stos
cli
cld
xor
inc
bound
into
dec
cmp
aad
cmpsb
hlt
sarl
mov
sbb
push
xor
pop
lods
das
jle
fninit
mov
cmp
fistps
mov
sbb
and
inc
pop
sub
adc
jg
arpl
test
fsub
stos
fcoml
in
jae
push
pop
movsb
sbb
das
cmp
cmpsl
xor
aaa
icebp
and
mov
cwtl
or
in
gs
fs
sti
outsl
arpl
jno
loop
lahf
xor
gs
test
nop
sub
dec
test
stos
fstpl
sbb
mov
cmp
cwtl
imul
sub
xchg
or
cmp
push
cmc
ss
sub
mov
scas
cmp
gs
test
push
sub
jmp
dec
mov
pop
pop
mov
push
ja
xchg
out
lds
cmc
lods
push
arpl
and
jmp
lods
push
fdivrl
addr16
imul
shll
and
ja,pn
mov
mov
mull
imul
stc
pop
negb
cmpsl
mov
add
int3
sub
inc
mov
outsl
cmp
lea
jno,pn
jle
add
js
jg
mov
aas
mov
mov
fs
in
xor
xchg
push
lret
pop
mov
xorl
popf
sbb
dec
lods
shrb
xor
sbb
pop
xchg
pop
test
pop
mov
jge
imul
cmp
mov
int3
mov
sbb
and
xor
pop
pop
movsl
adc
and
popf
or
pop
add
sub
xchg
js
add
jno
adc
cmp
add
push
xor
jge
cvtps2pi
push
lock
mov
mov
push
add
clc
sub
push
mov
mov
outsl
lcall
xchg
push
clc
test
enter
mov
xor
sub
mov
sbb
in
adc
inc
leave
inc
xor
orb
jle
mov
clc
and
test
je
in
dec
pop
cmpsb
es
cmpsb
out
movsb
lds
and
aam
cmpsb
jo
push
xchg
jg
xor
pop
mov
mov
push
out
cli
faddl
out
inc
outsb
or
fwait
mov
fs
xchg
sahf
dec
mov
pop
and
sub
lcall
outsl
mov
insl
xor
xor
in
lea
push
lahf
xlat
mov
push
fdiv
adc
xchg
pop
xor
dec
push
loope
lret
pushl
dec
push
cmp
sbb
daa
lds
subb
mov
xchg
int3
je
pop
adc
xchg
aam
aam
fisttps
mov
sbb
call
ljmp
out
jns
iret
scas
ja
int
jp
xor
mov
jb
and
sbb
lcall
rcll
xchg
and
cld
push
and
imul
in
subl
cmpsb
sbb
ss
pushf
divps
push
xor
mov
jne
imull
btr
mov
dec
fwait
mov
pushf
or
shlb
mov
loopne
fsubr
mov
fwait
lcall
mov
outsb
jge
jl
add
cli
outsb
cld
leave
inc
insb
mov
test
sub
loopne
popf
repnz
jnp
cmp
out
std
sbb
das
push
clc
sbb
fsubrs
imul
jge
xlat
mov
lret
push
mov
cmp
jb
push
mov
scas
into
out
out
inc
xchg
mov
push
inc
mov
xchg
xchg
inc
or
inc
jbe
xlat
dec
adc
sbb
cmp
enter
sbb
fnstsw
test
data16
lds
lds
jbe
roll
cwtl
xchg
xchg
lock
jno
fsubrl
mov
push
test
or
into
js
outsb
push
gs
cmp
fcompl
pop
jno
in
mov
jbe
xchg
fidivl
retw
inc
xor
in
push
jo
test
mov
pop
dec
in
in
jno
push
pmaxsw
cmp
jne
or
loope
dec
pop
add
cmp
lea
fiadds
das
sbb
dec
shrl
xchg
lcall
scas
stos
je
insl
adc
cmp
aad
add
dec
cmp
or
rcrb
das
mov
inc
repnz
addr16
dec
mov
fidivrl
lea
pop
jae
mov
dec
cwtl
pop
jl
pusha
sti
jo
xchg
jmp
dec
mov
inc
popa
jmp
cmp
lcall
clc
outsl
push
lret
pop
ljmp
dec
and
cmp
add
adc
dec
and
push
sti
mov
jbe
fs
xor
daa
rcrl
push
xchg
sbb
test
mov
rcl
fildll
jg
sti
std
ret
sub
xchg
fbld
sbb
xor
jle
and
push
push
mov
mov
jp
nop
push
outsl
pop
sbb
sub
fnstsw
xchg
aaa
repz
mov
pop
sti
out
jae
push
jg
cmp
and
jnp
outsl
or
hlt
and
mov
mov
sti
jg
test
mov
rcl
hlt
andl
and
stos
rcrl
xor
mov
inc
jbe
xchg
les
mov
out
rcll
mov
dec
scas
jmp
fwait
mov
in
adcl
mov
jecxz
pop
cmp
cmc
mov
sub
lcall
aas
pop
in
insl
mov
call
daa
imul
push
mov
mov
inc
test
adc
cmp
lods
adc
sbb
lahf
add
mov
mov
call
mov
jnp
push
int
sub
dec
jb
dec
adc
push
pushl
jmp
mov
decb
test
cltd
in
add
fcoms
add
popa
std
std
movsl
cmp
dec
jnp
addl
ss
push
jge
nop
pop
cmp
icebp
mov
mov
mov
xchg
jb
and
push
cld
fs
daa
lahf
cld
div
and
subb
xchg
ret
cmp
dec
cmp
adc
lahf
sub
out
push
in
repnz
jle,pn
mov
pop
jl
repz
mov
mov
push
mov
jp
movsb
in
rolb
outsb
or
mov
mov
ja
dec
push
adc
jge
jg
pop
jl
rcll
mov
hlt
arpl
adc
sbb
cmpsl
inc
adc
xlat
imul
ret
pop
imul
movsl
out
mov
xor
popf
adc
dec
js
scas
push
cmpsb
popf
test
adc
addr16
dec
jl
cmp
xor
mov
mov
fistl
push
push
push
test
mov
sub
aaa
and
aad
cmp
adc
jb
outsl
cmp
in
mov
int3
jle
push
xchg
ret
insl
push
cmp
leave
loop
sti
dec
int
xor
shll
sub
add
dec
icebp
and
pop
dec
xlat
int
push
pop
js
imul
lea
es
or
adc
fadds
jg
sbb
mov
push
push
gs
cmpl
imul
dec
jo
mov
xor
sub
push
pop
and
sub
push
dec
and
call
insl
push
ficomps
adc
insl
idivb
pushf
or
repnz
cld
mov
scas
out
jp
jae
faddl
das
push
nop
fstpl
xchg
adc
pop
sti
cli
push
dec
pusha
sub
jmp
jnp
inc
js
movsl
addr16
lods
inc
fildl
sbb
jns
xor
jnp
pop
cs
cmc
lods
andl
insl
adc
ret
pusha
lods
xchg
test
sub
lods
daa
dec
cwtl
in
ljmp
loop
xchg
sbb
sub
adc
fwait
test
or
mov
jecxz
cltd
adc
jmp
decb
lods
cmpsl
mov
or
test
ret
ret
jns
xor
test
cli
cmp
pop
adcb
shll
addr16
sti
inc
xor
cmp
clc
push
hlt
jae
lret
insl
out
push
repz
mov
fdivs
arpl
scas
fildl
cmp
mov
mov
pop
fstl
ljmp
mov
stc
sub
push
iret
ja
or
pop
das
jbe
push
push
inc
xchg
sahf
cld
adc
int
push
jle
xor
push
adc
lods
mov
mov
mov
icebp
and
out
mov
es
jl
shlb
js
inc
adc
push
es
pop
mov
fidivrl
rcrb
ljmp
prefetch
or
ja
xchg
lea
push
dec
mov
mov
call
add
dec
xor
jl,pn
imul
out
nop
ljmp
xchg
in
jnp
mov
push
or
jnp
icebp
pop
cmp
jp
cmpsl
mov
rorl
out
mov
push
sbb
mov
jo
mov
notl
aam
aaa
sbb
in
mov
xchg
mov
outsb
mov
or
popf
lods
fstpl
sti
pusha
jb
inc
into
push
in
jp
and
dec
dec
leave
movsb
rcll
mov
push
pop
or
xchg
push
fwait
sub
outsb
call
fildl
jno,pn
out
adc
cwtl
xchg
leave
sub
dec
loop
push
cmp
orl
xor
push
imul
pop
push
scas
or
inc
cmp
pop
inc
xchg
sub
in
push
sbb
sbb
mov
pop
inc
jle
inc
rcrb
inc
dec
dec
push
in
adc
ret
repnz
inc
sbb
sbb
jge
lret
cmpb
lret
test
inc
jo
cmc
add
dec
aad
or
jmp
inc
and
sub
in
add
orl
sub
out
sub
shl
bound
dec
mov
loopne
daa
sub
pop
inc
scas
pop
push
and
cmp
shl
cmp
mov
and
outsb
stc
pop
pushf
repnz
popa
lock
mov
call
stc
push
dec
arpl
outsb
stos
xchg
scas
jp
popa
loope
mov
mov
leave
mull
paddd
xor
les
mul
push
dec
sti
mov
cmp
sbb
es
fiadds
lcall
or
cltd
repz
and
cmp
hlt
icebp
push
jg
mov
inc
and
mov
pop
and
bnd
aaa
ljmp
addl
push
or
dec
insl
andl
in
int
std
popa
dec
or
mov
xor
mov
loopw
sti
loop
outsb
enter
jbe
cli
sub
mov
pop
add
cmp
xchg
mov
aam
sbb
mov
and
push
test
stc
fcomps
enter
xchg
inc
mov
inc
fmull
or
mov
sti
sub
fcomi
call
hlt
cltd
mov
mov
mov
negb
out
pop
fcoms
cs
lahf
ret
shll
out
mov
es
and
mov
sahf
mov
test
scas
or
mov
adc
adc
mov
dec
bound
addr16
scas
and
and
loop
jmp
hlt
lahf
repnz
xorb
shll
and
sub
inc
xchg
mov
mov
xchg
xor
pop
push
movsl
stos
add
dec
cltd
lea
add
arpl
inc
in
ret
mov
mov
push
es
dec
jbe
int3
cltd
xlat
test
dec
push
pop
loopne
inc
jmp
test
cmp
lods
xchg
pusha
das
repz
popa
jae
mov
loop
and
mov
jae
sbb
call
cli
fcmovne
clc
mov
lcall
mov
hlt
pop
and
insl
jns
jne
lcall
mov
cmpsl
dec
and
lods
pop
xor
es
addr16
push
mov
adc
mov
inc
cmp
cltd
cmpsb
dec
stos
das
ret
push
mov
dec
fwait
sti
fwait
mov
xlat
cmp
leave
mov
pop
sti
pusha
mov
or
arpl
mov
lods
cmp
les
mov
jl
aas
popa
cli
adcb
push
mov
pop
cmpsb
push
imulb
mov
mov
cld
mov
loope
stos
testl
adc
add
mov
dec
jnp
cld
fidivl
push
ret
insb
rcrl
or
outsb
inc
andl
xchg
aaa
sub
clc
inc
lret
into
xchg
insb
xor
outsl
icebp
cmp
sub
mov
and
rorl
hlt
mov
xor
sarl
dec
pop
in
ljmp
test
popfw
gs
ds
push
cmp
dec
lods
ds
inc
xchg
shlb
and
iret
pop
and
jle
sub
jp
and
mov
adc
add
jb
in
and
repnz
stos
ljmp
in
or
ud0
add
mov
lds
stc
fsubrs
sub
mov
notb
and
sbb
xchg
popf
jge
sbbb
pop
inc
in
shrl
test
lods
stos
inc
sub
iret
jb
fstps
test
fcoms
scas
mov
popf
testl
xor
inc
das
sbb
mov
pushf
ret
test
mov
pop
xor
mov
cs
jnp
cmc
push
shlb
add
in
fistpl
adc
push
dec
lods
in
and
lahf
add
mov
test
mov
ja
jle
push
lods
enter
inc
scas
rclb
out
jp
outsl
adc
push
pop
aas
mov
jno
popa
outsb
xor
adc
andl
push
mov
push
daa
xchg
fnstenv
rorl
insb
push
out
nop
testb
pusha
adc
cmp
and
arpl
je
and
scas
dec
js
mov
xchg
push
lret
test
stos
bnd
mov
xor
ret
sbb
out
sub
rclb
adc
and
outsl
in
cmpsb
mov
sahf
sub
mov
xchg
cmp
nop
addr16
fnstsw
call
sub
int
sub
mov
scas
cli
pop
jo
iret
and
leave
sbb
pop
add
pop
sub
call
fsubr
sub
mov
mov
bound
jecxz
jg
xchg
push
sub
cmc
dec
push
cltd
mov
loop
sub
cmp
mov
pop
push
xchg
mov
or
lock
cmp
int3
aas
dec
pop
clc
lret
out
inc
and
movsl
pop
bound
mov
mov
int
or
imul
out
dec
aad
ficompl
repz
cltd
push
inc
cmp
repz
lds
adcl
nop
ss
pop
aas
dec
add
mov
cmp
hlt
mov
je
into
dec
cmc
lret
cwtl
pop
ljmp
cltd
mov
addr16
push
and
sarb
cld
xchg
mov
sub
pop
std
pop
fisttpl
xchg
sub
mov
sub
mov
in
push
or
jle
fistpl
aas
push
out
push
fsubrs
test
daa
loopne
shl
push
inc
leave
mov
mov
xorl
mov
ja
sahf
test
adc
fcoml
or
mov
mov
ja
cmp
mov
cmp
aam
or
jo
repnz
jp
xchg
aas
call
inc
dec
hlt
xor
jns
xor
adc
mov
mov
into
pop
sub
lock
push
jmp
pusha
jg
mov
xor
lds
mov
cmpsb
pop
add
mov
lret
insb
add
lods
loop
jns
jle
adc
cmp
insl
xchg
lods
adc
mov
testl
mov
xor
fistps
xorb
jle
pop
ljmp
aad
sbb
jb
aas
xchg
pusha
pop
inc
or
sub
pop
test
dec
imul
dec
movsb
and
sbb
adc
es
and
pop
xor
loopne
cmpsb
push
mov
sbb
sub
cmpsl
adc
insl
xchg
mov
fsts
je
xor
ret
aam
data16
ret
adc
in
out
mov
adc
rcrb
inc
push
xor
fldl
rcr
popf
push
inc
xlat
mov
int3
cmc
sbb
and
lea
mov
push
jno
dec
adc
push
repnz
jg
push
jg
repnz
icebp
fcmovnb
outsb
cli
ds
in
cmpsl
mov
dec
push
popf
dec
pushf
aas
rclb
jo
cltd
xlat
dec
fnstenv
mov
mov
sbb
xor
inc
fcomps
cs
and
in
insb
push
inc
xchg
add
xchg
xchg
mov
mov
mov
sbb
cmp
test
subl
mov
mov
cli
adc
loop
fwait
jo
popf
cwtl
daa
cmp
xlat
pushl
pop
and
jo,pt
mov
loop
das
mov
xor
push
cmp
ret
xchg
push
test
xchg
cmpsl
fsubl
and
inc
or
dec
fidivrs
sbb
sti
pushf
and
sti
std
fwait
sbb
out
out
out
xor
data16
in
sub
aaa
std
jns
xchg
jl
and
and
cmpsl
popf
imul
cmpb
mov
clc
mov
adc
push
in
loope
adc
pop
jmp
push
outsb
mov
xchg
int3
loope
fwait
xchg
inc
inc
or
fiadds
adc
inc
movsb
xchg
lret
lock
push
insl
jle
imul
mov
mov
add
mov
push
adc
adc
mov
dec
in
xchg
fisubrl
or
jg
mov
sbb
fwait
cmp
xchg
es
or
inc
fildll
push
adc
fs
int
jno
dec
xor
mov
pop
test
ja
mov
mov
test
add
jno
xchg
xorb
sub
stc
mov
mov
mov
test
popf
dec
mov
mov
jo
xor
or
add
lahf
je
into
push
inc
cmpsb
mov
mov
adc
sbb
sar
scas
mov
ljmp
jl
stc
xchg
leave
push
xor
popa
ds
add
popa
in
push
push
pop
cmpsb
je
stos
loopne
dec
xor
paddq
fwait
cmp
xlat
jae
sbb
dec
jne
lret
pushf
sub
jbe
mov
mov
idivb
iret
push
cld
js
push
push
jne
repz
dec
xchg
push
inc
mov
add
test
clc
testl
jp
jp
lcall
das
add
lret
push
mov
or
js
jnp
sbb
cmp
in
inc
pop
jl
popaw
loopne
cmc
xchg
cmp
std
sahf
es
lahf
jnp
pop
push
mov
fnsave
and
mov
ja
pop
mov
sarl
aam
imul
dec
movsb
in
cmp
mov
das
push
scas
icebp
fsubrs
push
push
xchg
cwtl
mov
daa
test
insl
insb
out
xchg
aas
push
jmp
pop
rolb
mov
sub
std
xlat
xchg
imul
xor
into
inc
loope,pn
mov
fst
adc
stos
cmp
mov
cwtl
push
cmp
pop
mov
mov
sub
cmp
scas
in
inc
cwtl
in
rorl
dec
mov
dec
dec
lods
fiadds
and
xchg
jnp
leave
leave
mov
sub
callw
outsl
test
je
pop
cmp
rcrb
stc
into
adc
jo
jno
inc
sti
sbb
addb
pop
or
or
xchg
out
hlt
dec
test
and
lret
lods
or
sahf
fsubrp
iret
dec
adc
and
xor
mov
cmpsl
out
negb
outsl
add
outsl
mov
addl
andb
xchg
pop
loop
xchg
aad
cmc
js
xlat
popf
or
cld
jne
mov
loopne
mov
or
shrl
leave
push
aad
pop
push
push
and
hlt
jmp
add
nop
or
adc
movl
mov
stc
jo
adc
int3
nop
sub
lds
xchg
or
and
stc
shrb
lds
loopne
mov
xchg
xor
idivb
xlat
jne
or
das
add
pop
and
and
push
jne
mov
stos
xor
sub
mov
xchg
rcrb
in
out
mov
fisubrl
imul
fists
xchg
xor
mov
negb
xor
ljmp
ficoml
fidivrs
out
jecxz
incb
pop
or
mov
dec
fwait
push
call
sbbl
sub
repnz
xchg
jns
jb
ret
rcll
sub
jecxz
ja
adc
lahf
sbb
cmp
sbb
iret
adc
in
jno
and
lahf
imul
and
dec
cmp
lahf
mov
mov
mov
sahf
leave
inc
xor
mov
insb
sti
cmp
sub
into
aaa
xchg
lds
and
lods
aad
pushf
mov
cmp
pop
cmp
mov
add
inc
jno
rorl
scas
clc
rcrl
xchg
stos
sahf
lahf
sub
sbb
sub
shl
scas
lea
in
mov
jl
push
inc
xchg
dec
and
push
daa
dec
mov
daa
movsl
and
xor
push
jecxz
add
xor
aam
dec
ret
pop
inc
lret
dec
push
mov
jecxz
sub
dec
jmp
add
mov
sub
adc
dec
mov
gs
test
iret
idivl
iret
imul
jp
jo
pop
cltd
mov
lds
mov
and
clc
popf
sbb
ljmp
shll
pushw
popf
aam
pop
inc
xor
mov
lahf
stos
sub
mov
pop
adc
mov
or
inc
nop
je
dec
xchg
inc
outsl
rol
push
mov
dec
ljmp
sub
int
fsts
fildll
sub
loope
insl
mov
or
mov
mov
rcrb
xor
jo
repz
mov
cwtl
ss
outsl
jl
jp
aas
xchg
dec
inc
push
add
mov
push
push
mov
outsb
cmp
repz
call
leave
inc
fnstcw
in
push
scas
jo
ja
push
push
mov
xchg
mov
xor
jge
mov
inc
mov
mov
aad
call
adc
mov
cmp
pop
adc
in
pop
mov
insb
ret
push
in
push
leave
lret
mov
hlt
mov
stos
int
rolb
cmpl
adc
das
mov
sbb
rclb
cmp
jge
out
aam
std
adc
lods
clc
pop
cli
jp
loop
ret
cwtl
mov
push
inc
sub
fwait
in
ds
mov
cltd
cmp
sub
cwtl
jg
inc
and
leave
repz
fcomps
mov
push
jle
xchg
push
rol
arpl
call
int
mov
in
fisttps
inc
jle
out
movsl
push
xchg
in
nop
lock
xchg
pop
int3
xor
mov
xor
cmc
fimuls
sbb
jns
iret
enter
data16
inc
xor
pop
cmpsl
xchg
mov
cmp
xchg
sub
mov
repz
nop
lea
test
inc
add
sbb
das
and
push
movsl
sbb
sbb
push
rcl
shll
out
xor
in
mov
push
pop
xlat
jmp
fsubrs
jo
jmp
ja
inc
nop
push
cmp
cmpsl
xor
mov
sub
test
pushf
icebp
insb
out
mov
test
xchg
sbb
cwtl
mov
subb
pop
ss
mov
push
lock
pop
xor
fstps
out
jns
jge
fistl
inc
enter
dec
and
cltd
sbb
mov
jo
mov
fdivr
xor
enter
ret
mov
cmp
stc
imul
cmc
lcall
pop
xchg
sti
scas
stos
cmp
xchg
out
mov
fwait
mov
ret
es
int
xor
mov
les
leave
lea
mov
es
andl
mov
sub
or
dec
add
pop
scas
or
inc
dec
jae
mov
adc
add
inc
and
cmc
cmp
dec
ds
cmp
adc
jb
ror
xchg
icebp
jmp
fildll
push
or
dec
jno
stos
mov
daa
aas
pop
hlt
decb
aas
xchg
pop
lcall
xchg
sti
mov
hlt
dec
push
btsl
sub
sbb
xchg
lds
push
and
add
dec
mov
fwait
mov
int3
mov
or
push
add
ja
lret
std
je
icebp
out
in
loopne
ljmp
add
mov
push
fnstsw
mov
sbb
mov
xor
cmpsl
push
sti
inc
fs
cmp
std
and
or
leave
cmc
mov
mov
jecxz
dec
jo
or
pop
jp
dec
in
xchg
lock
dec
mul
pop
sbb
push
inc
and
outsb
stos
adc
daa
fs
je
mov
or
mov
outsb
lods
fnstsw
sbb
or
pop
push
jmp
iret
sbb
sub
test
xor
test
sahf
test
jb
mov
dec
das
fimull
leave
dec
jo
clc
aas
push
inc
push
xchg
sahf
fstps
cwtl
daa
sarb
pop
xor
ror
notl
mov
xor
jmp
icebp
fs
jecxz
mov
lcall
push
jge
in
lret
and
push
loope
iret
mov
enter
cltd
jne
je
xor
pop
sbb
add
imul
add
push
push
sbb
js
lret
insl
dec
push
inc
sbb
ljmp
adc
sti
dec
sub
outsl
xor
push
dec
imul
out
cmp
sti
pushf
mov
jecxz
add
lcall
dec
sti
clc
orb
push
lods
and
add
hlt
xor
mov
sbb
or
xchg
jbe
jp
mov
inc
jbe
rcrb
cli
jo
daa
arpl
cmp
idivb
jnp
push
xchg
in
in
pusha
or
sbb
push
jbe
adc
outsl
sub
xchg
pop
mov
mov
add
lock
and
cltd
and
fisubl
das
mov
cmpsl
mov
std
les
jne
stc
xchg
xchg
testb
push
jmp
and
adc
adc
xchg
inc
sub
jne
xor
imul
je
in
sbb
xchg
scas
mov
mov
stos
lods
lds
adc
int
out
popf
sub
jmp
pop
stos
and
inc
inc
hlt
mov
adc
repnz
negb
arpl
movsl
jge
xor
cld
push
xchg
inc
in
cs
push
loop
jno
loop
jae
shlb
mov
loope
insb
mov
insb
jb
movsb
or
add
cmpsb
and
mov
xchg
and
jbe
imul
in
fsubl
js
xchg
lcall
icebp
nop
mov
push
xchg
xchg
sub
cmc
mull
aam
sbb
or
sub
inc
testl
rolb
xchg
fcomps
mov
adc
mov
gs
lods
add
test
sti
sub
fisttpll
lret
inc
add
pusha
mov
and
hlt
and
and
std
push
mov
repnz
popa
repnz
maxps
mov
mov
dec
dec
push
mov
xchg
mov
cmovle
xchg
test
addr16
aas
clc
sahf
jno
jb
stos
bound
jbe
pop
fs
mov
mov
push
xchg
and
loopne
test
gs
in
xchg
push
xchg
lret
pop
in
inc
fs
test
out
test
pop
xor
dec
jecxz
cli
xchg
xor
ss
xchg
push
stc
xchg
aas
sbb
sar
push
xor
mov
adc
push
mov
adc
sbb
jnp
in
out
push
push
inc
add
jmp
shl
mov
pushf
cltd
mov
xorb
jmp
or
insb
xor
movsl
pushw
add
out
into
add
mov
mov
jl
sbbl
adc
mov
sub
pop
leave
shll
dec
add
jo
negl
sub
notb
ljmp
sub
adc
adc
cmp
cmp
test
dec
xor
jbe
test
popa
xchg
movsl
rcl
or
mov
clc
movsb
mov
jge
push
cmp
jns
lea
push
fwait
adc
xor
add
cli
roll
pop
fmuls
ficoms
dec
mov
daa
cmpsl
xor
bound
or
les
into
jns
fdivl
popa
sub
clc
loop
js
shrb
mov
jg
std
mov
xchg
aad
jg
mov
jle
and
dec
add
rcrb
jp
mov
sbb
aam
pop
push
int3
dec
mov
pop
sub
add
pop
xlat
cmp
out
dec
pusha
xchg
scas
cli
add
push
fsubl
dec
pop
into
add
and
sub
pop
out
sub
inc
lret
xorl
mov
sbb
addr16
scas
or
sbb
mov
arpl
jmp
pop
ret
jne
je
push
or
jne
shlb
xchg
dec
fstl
sarb
jmp
cltd
mull
push
push
mov
mov
outsb
xchg
and
jge
les
aaa
cmc
push
stos
inc
mov
cmp
gs
adc
sbb
pop
or
pop
push
movsl
jl
and
addr16
xor
fiaddl
loopne
rcll
inc
clc
adc
icebp
sbb
or
sti
out
test
adc
ss
sbb
cli
adc
pushf
loop
in
jbe
jl
xchg
loop
scas
inc
roll
adc
cltd
xchg
or
push
and
in
sbb
sbb
cmp
cmpsl
fdivs
sahf
cmp
test
fsubrs
inc
test
insb
inc
mov
mov
mov
push
ret
adc
fwait
leave
int
leave
pop
cmp
sub
shll
and
and
subl
cmpsl
pop
test
pmulhw
xor
mov
xchg
adc
jb
inc
repnz
xor
cmpsb
cmp
xor
mov
pop
cltd
test
cmp
scas
add
xchg
js
jno
lds
cmp
jmp
jno
sahf
ret
cltd
fcmove
or
cmpsb
loope
bound
retw
mov
pop
dec
popa
pop
xchg
cwtl
loope
inc
leave
pop
mov
jmp
push
ljmp
rclb
xchg
roll
cmpsl
pop
dec
mov
int
dec
in
xchg
mov
sar
sbb
mov
sbb
mov
pop
inc
shlb
inc
sub
repz
mov
sbb
adc
jb
add
loope
lret
inc
dec
jecxz
add
mov
adc
xor
adcb
adc
in
jg
andl
xchg
and
pop
out
test
test
jge
std
and
sbb
fsub
loop
pop
sahf
pusha
shll
roll
repnz
mov
jecxz
sub
out
push
sub
push
adcb
push
cmp
sbb
and
inc
orb
mov
adc
or
mov
pop
ret
lret
cwtl
sahf
jnp
aam
and
fwait
sub
cmp
inc
sarl
das
jg
mov
jns
ljmp
lret
xor
vpunpcklqdq
jmp
inc
jmp
movsb
gs
pushf
mov
jnp
aad
dec
jge
mov
fwait
cmp
xchg
fistps
jnp
push
push
mov
testl
aam
push
js
xor
stos
inc
push
add
inc
and
mov
dec
mov
or
and
test
fs
pushf
lret
jg
jl
xchg
dec
xor
std
into
cmp
adc
mov
jmp
stos
add
xlat
jns
repnz
inc
neg
add
xchg
movsb
and
and
fisubrs
mov
mov
addb
xchg
pushf
push
and
pop
inc
scas
cld
jbe
jns
lods
dec
flds
es
inc
in
ror
push
dec
lds
pop
sub
rcl
pop
cmp
scas
adc
jg
stc
test
jo
mov
adc
xor
clc
and
mov
mov
push
ror
cli
push
pushl
adc
and
pop
dec
adc
pop
movsb
push
gs
push
mov
in
inc
adc
cmp
mov
mov
in
and
pop
movsl
iret
aas
mov
sub
dec
xchg
or
inc
add
popa
fldt
in
push
ret
lds
cwtl
repnz
fisttpl
push
sub
outsb
call
sub
lcall
mov
or
xchg
pop
jae
gs
push
bnd
mov
ret
repnz
pop
arpl
imul
insb
adc
aas
ss
push
push
cs
jmp
outsl
or
xchg
xchg
dec
bound
cmp
xor
out
add
jb
test
cmp
sub
cli
and
jnp
mov
pop
out
rcrb
mov
push
lcall
lds
not
stc
pop
mov
into
rcrb
xchg
aam
xchg
sar
fsubp
cli
lds
sub
xor
cmc
mov
sbb
test
fwait
jnp
loope
stos
mov
movsb
mov
and
xor
imul
fsub
jb
xchg
jle
adcb
jnp
xchg
or
pop
push
inc
rcll
mov
xchg
xchg
popf
fwait
nop
sbb
jnp
and
cs
fwait
cmp
lahf
sbb
cld
inc
dec
dec
cmp
or
xor
jns
jge
pop
jp
mov
invd
jmp
push
daa
jecxz
out
mov
out
test
and
sub
and
pop
repnz
add
fnstenv
cmp
jo
repz
xchg
idivl
push
inc
pop
xchg
mov
sub
mov
pop
add
ljmp
pshufw
adc
sbb
cmp
fisttpll
adc
adc
or
into
test
in
or
dec
and
sub
xchg
out
sarl
fcoml
mov
or
jp
xchg
iret
pusha
testl
mov
lcall
push
mov
aas
mov
jecxz
fmull
mov
daa
insb
push
adc
fistpll
scas
adc
adc
mov
lock
std
sub
call
test
pop
test
stos
lcall
shlb
dec
lds
xorps
in
mov
cmp
dec
cmp
push
cmc
push
lcall
mov
push
sub
or
jae,pt
loope
jb
mov
push
xor
ljmp
jg
into
movsb
outsb
mov
in
adc
fdivl
lahf
push
ss
pop
scas
add
push
jns
jmp
popf
mov
adc
daa
test
or
xor
mov
sbb
add
push
pop
dec
out
xor
push
xlat
leave
pop
add
jo
sub
loop
inc
cmc
jmp
js
adc
add
mov
jb
test
mov
popa
shll
leave
lods
pop
mov
sub
shlb
fmul
sbb
syscall
push
mov
cltd
cmpl
movb
mov
push
cli
add
stos
push
aas
adc
mov
push
add
ds
xorl
push
jb
popa
orl
rcl
loope
mov
mov
pop
into
pop
mov
sub
lock
mov
pushl
sti
push
cmp
mov
and
sbb
sbb
inc
std
mov
shl
xor
out
std
fnsave
rolb
daa
push
and
push
daa
not
or
mov
sub
dec
mov
call
push
mov
adc
cli
mov
mov
xchg
push
jb
push
leave
cli
loope
mov
sbb
cmp
or
push
popa
daa
pop
popa
aas
mov
jbe
jmp
stc
pop
mov
cli
xchg
clc
in
fs
adc
or
mov
sbb
push
pop
out
xor
test
or
rorb
pop
insl
jno
mov
xchg
hlt
xchg
cmp
mov
jg
mov
loop
fs
cmp
cmp
jnp
mov
cltd
sub
xchg
mov
frstor
xor
jge
dec
dec
sub
inc
loopne
sbb
cmp
jbe
inc
popf
shll
xchg
mov
ljmp
inc
jb
fmuls
sub
mov
inc
mov
pop
xlat
insl
mov
jp
xor
push
xor
bound
leave
add
and
and
shll
sbb
movsb
into
pop
arpl
mov
xchg
pop
cmpsl
lcall
outsl
adc
adc
xor
jae
popf
inc
sbb
mov
int
xchg
jb
repnz
loope
punpckldq
inc
lods
leave
sbb
inc
mov
test
sahf
cmpsl
aad
jecxz
push
not
cwtl
mov
jns
pushf
daa
mov
fildl
leave
lock
inc
dec
and
jp
ret
rcr
es
das
es
add
popf
push
rorb
cs
and
mov
popf
add
mov
repnz
arpl
push
in
cmp
cmp
lea
ficoms
add
dec
mov
out
inc
inc
shl
aaa
subl
xchg
mov
jo
aad
sbb
insl
ret
mov
cwtl
cmp
inc
lods
repnz
xor
sbbl
sti
jno
into
mov
inc
mov
cmp
repnz
xchg
sub
add
jg
fstpl
pop
movsb
xchg
ret
ret
add
adc
push
clc
mov
enter
inc
mov
pop
jg
push
or
and
popa
push
xchg
int3
mov
cltd
ss
jmp
movsb
test
rol
lds
int3
xchg
lock
dec
pusha
test
push
mov
enter
cld
add
into
xchg
sahf
rcl
loopne
movsl
add
pusha
or
mov
lods
sub
inc
add
inc
dec
xchg
loopne
popa
dec
leave
sahf
lods
neg
popa
int3
or
add
cmp
sbb
mov
stc
repz
jae
jl
enter
leave
sahf
pop
and
adc
xchg
jnp
jmp
cmpsb
in
cmc
inc
pop
movsb
jle
dec
aad
ficoms
call
std
daa
ljmp
mov
arpl
and
or
adc
lret
xor
push
repz
cmp
jo
or
add
sbb
aas
lea
sbb
or
scas
xorb
cmp
sbb
add
push
insb
mov
and
jge
inc
push
cld
xchg
cwtl
dec
std
jp
xor
sahf
test
cmp
mov
mov
ret
xor
mov
push
out
cli
push
aaa
sub
pop
negl
jnp
cwtl
test
das
mov
mov
push
ja
sti
add
movq
cmpsb
xchg
mov
push
mov
xor
jp
jbe
lods
fcom
js
pop
pop
testl
ja
push
sub
cmp
jecxz
push
lods
pop
push
loope
or
xchg
icebp
out
scas
es
pop
scas
ds
lods
jo
sarb
mov
aaa
and
adc
cltd
cli
hlt
mov
add
push
out
test
sub
fcompl
arpl
push
pusha
xchg
xor
mov
aaa
cmp
sbb
adc
cmp
test
mov
inc
xor
leave
nop
std
mov
stos
insb
outsl
sahf
mov
movsb
mov
icebp
out
pop
mov
push
outsl
pop
out
emms
mov
test
inc
and
adcb
fidivl
mov
xchg
jae
shlb
out
or
and
rcr
addl
or
test
mov
shrl
flds
sbb
xchg
cmpsb
clc
test
inc
fs
push
orl
lret
out
inc
dec
jmp
in
std
adc
cmp
inc
sbb
xchg
shlw
data16
out
insb
je
std
clc
js
push
test
inc
xchg
mov
sahf
int3
mov
mov
fnstenv
ljmp
jecxz
dec
xorb
icebp
test
test
lds
repnz
mov
icebp
jp
dec
jmp
add
cmpl
rorb
mov
stos
dec
push
out
lods
fbld
mov
ds
scas
cmc
mov
arpl
out
dec
negl
dec
lea
lock
jo
out
jne
dec
mov
cmp
ja
clc
mov
cs
mov
and
inc
mov
in
and
xchg
xor
repz
shll
xchg
jmp
sbb
rol
stos
adc
dec
push
iret
add
rolb
std
cmpsb
pusha
sub
dec
lcall
add
imul
nop
pop
sbb
xor
cmp
out
test
pop
adc
mov
xchg
jl
mov
loop
cmpsl
sub
loopne
subl
je
jge
dec
mov
push
cmp
push
lods
or
scas
insb
or
push
int3
test
ljmp
insl
inc
lea
gs
dec
repnz
insl
mov
dec
mov
mov
fisubs
or
adc
or
loopne
shll
and
sbb
push
sbb
hlt
cmp
fcoml
sub
mov
jge
adc
ficoml
xchg
pop
inc
subl
das
cwtl
rcrb
mov
and
push
add
popf
mov
fimuls
push
inc
sbb
fwait
ds
sbb
std
mov
jae
pop
mov
insb
pop
pop
enter
vpabsd
lea
mov
fwait
mov
lods
sarl
pushl
xchg
xor
inc
inc
jb
inc
mov
mov
mov
stc
xchg
pop
js
leave
jp
mov
flds
mov
sahf
stc
call
ss
nop
push
test
push
icebp
mov
repnz
jle
insl
imul
bound
imul
jo
xchg
leave
adc
addr16
loope
sbb
xorl
in
add
les
clc
pop
cmp
mov
xchg
pop
dec
or
je
shlb
push
xrstors
pop
add
sti
out
dec
enter
ljmp
sbb
push
xor
xchg
daa
mov
jne
data16
stc
dec
cmp
repz
push
and
add
lahf
ret
testb
xor
push
jne
and
mov
into
ret
mov
shll
jno
cmpsb
aad
xchg
pop
scas
dec
jnp
fcomi
xor
dec
inc
adc
add
pop
fildll
jbe
movsl
jnp
cmp
scas
call
roll
repnz
loope
mov
lret
sbb
add
clc
nop
pop
hlt
ss
out
push
iret
adc
lret
in
xchg
adc
movsb
cmp
mov
pop
or
inc
aam
mov
xor
xchg
jl
flds
and
jb
pop
add
jae
pop
into
mov
test
aas
and
adc
call
jbe
dec
je
ret
js
sbb
es
add
mov
in
add
in
leave
xchg
bound
mov
scas
adc
icebp
pop
sbb
dec
xchg
shll
outsb
fimull
ja
xchg
jecxz
mov
pop
pushf
mov
xor
xchg
mov
call
dec
sbb
mov
push
incb
jmp
xchg
jmp
loope
rcl
jmp
pop
ret
in
sbb
mov
adc
xchg
lret
jbe
push
or
mov
sub
inc
xchg
cld
mov
in
stos
jl
icebp
mov
roll
add
xchg
andnps
or
ret
sub
mov
ja
push
test
pop
xchg
data16
test
aaa
sbb
add
in
xor
xchg
push
xchg
xchg
pop
clc
xchg
jbe
aad
divb
xor
test
adc
push
mov
dec
adc
pop
aam
mov
rol
int3
in
repnz
dec
jle
pop
test
mov
or
int3
pop
imul
or
inc
bnd
cmpsl
in
pop
loop
or
sahf
pop
lahf
adc
push
hlt
or
pop
ljmp
imul
and
loop
adc
aaa
pop
ss
jnp
fisttpl
jns
sti
mov
and
iret
mov
adcb
and
jno
xlat
xor
bsr
pop
sub
lret
cmpsl
push
int3
pop
adc
std
in
fcomip
cltd
cmpb
mov
out
out
fildll
mov
faddl
popa
fstl
outsb
xchg
jae
ret
xor
cmp
sbb
mov
testb
adc
fldl
push
mov
scas
adc
mov
mov
scas
out
push
js
push
ljmp
add
scas
mov
aam
mov
popf
dec
fwait
orl
fnstenv
push
test
add
mov
test
adc
inc
or
push
lret
mov
ret
ljmp
std
cmp
adc
or
hlt
pop
push
std
adc
or
jae
fimull
add
out
outsl
fsubrs
dec
and
push
xchg
insl
out
testb
adc
int3
xor
stos
xor
dec
xor
frstor
jle
sbb
pop
cs
or
mov
inc
cmp
mov
lods
jbe
sub
pop
das
pop
pop
pop
pop
addb
repnz
adc
mov
inc
gs
fiadds
xchg
add
push
loop
mov
pop
in
rcl
sbb
sbb
jo
jb
fdivs
push
repz
jge
mov
inc
subb
sahf
je
cmpb
lcall
rorl
pop
fs
roll
std
mov
imul
cmpsl
mov
rorl
mov
pop
xor
test
cmpsl
sub
xchg
mov
or
mov
je
lods
mov
pop
pop
cwtl
pop
or
cmp
bound
pop
ljmp
in
inc
push
mov
psubusw
ucomiss
mov
das
ljmp
push
stos
xchg
orb
out
mov
clc
jecxz
mov
jnp
and
pop
inc
cmp
addr16
xor
or
dec
loop
jne
mov
iret
xor
adc
lret
cmp
push
and
pop
mov
addr16
out
cmpsb
sub
ret
push
ljmp
lret
stc
stos
xchg
jns
mov
push
mov
dec
jns
loope
sbb
in
insl
jb
inc
lea
cltd
in
adc
les
daa
jp
cmp
daa
fstpl
jecxz
stos
adc
lahf
xchg
sub
lea
ret
dec
mov
pop
mov
in
les
cmp
fisttpll
adc
push
fildll
sahf
or
mov
mov
into
call
jae
add
setb
inc
pop
roll
inc
notl
dec
das
adc
and
sub
push
or
jo
lods
ficoml
cli
xor
lret
mov
lcall
mov
sub
jp
and
adc
xchg
xor
lret
ret
mov
lret
call
imul
outsl
out
dec
gs
xor
xchg
sbb
inc
mov
dec
sub
and
jle
and
mov
das
push
bswap
jg
dec
std
cltd
test
jmp
pop
mov
fnstcw
idivb
cmp
sbb
pop
jnp
pop
inc
cmc
mov
xchg
sbb
fs
es
or
in
aaa
js
aaa
inc
je
and
and
mov
mov
sahf
shrl
inc
cmp
mov
stc
fmuls
paddsw
stc
jle
jmp
inc
dec
aaa
pop
mov
lods
push
and
rclb
mov
in
popl
test
das
mov
fnstcw
push
and
lret
and
or
xchg
out
xor
inc
sbb
sub
inc
push
cwtl
push
lcall
enter
push
loop
xchg
sbb
jmp
imul
into
out
dec
in
add
scas
addr16
xchg
cmp
test
hlt
mov
cmpsb
imul
sti
in
mull
sub
mov
sub
loope
movsb
pop
jmp
add
dec
fimull
hlt
cmc
lods
jb
outsl
add
jno
push
hlt
movl
sub
ja
int3
cltd
push
push
rcr
adc
cmpsb
lret
js
dec
jmp
stos
dec
ss
scas
or
fcomps
push
test
daa
imul
xchg
loope
les
pop
iret
iret
test
jle
test
xchg
xor
or
clc
cmp
and
push
push
bound
push
sbb
push
iret
xor
or
and
aad
and
and
das
jns
shlb
mov
aaa
add
out
cmpsl
mov
nop
mov
mov
ljmp
inc
repnz
rorl
sbb
add
iret
repnz
das
andb
lret
andb
fcmovu
es
or
mov
loop
imul
mulb
addr16
pop
adc
out
mov
test
sysexit
cmpsl
mov
mov
out
aad
stc
adc
sbb
sahf
fists
mov
mov
sbb
mov
stos
dec
or
int
xchg
cmp
jns
lcall
jb
mov
xchg
and
or
imul
sub
inc
jo
fs
push
jp
scas
pop
int3
xor
sbb
jge
sbb
xchg
ljmp
outsl
int
ja
loope
sub
repnz
imul
cmp
add
lcall
popf
jbe
arpl
push
cmp
pop
sub
xor
sbb
mov
push
cmp
dec
movsb
inc
cwtl
sub
lods
dec
das
cmp
enter
sbb
and
inc
or
out
andb
jns
subl
movl
sbb
cmp
xor
xchg
sti
push
sub
mull
in
mov
pusha
pop
sbb
push
mull
push
xchg
ret
cmp
aas
insl
test
and
cld
push
in
xchg
xor
sahf
adc
dec
xor
add
cmp
in
mov
out
insb
cld
repnz
subl
repnz
mov
lods
jmp
adc
jmp
xchg
inc
ss
loop
pop
ret
aaa
jns
jl
pop
mov
inc
test
xor
lea
or
insl
fcmovu
xor
stos
ss
xor
jmp
cmc
xor
in
out
pop
loop
das
outsl
add
dec
pop
inc
shlw
cltd
push
push
imul
xlat
pushf
ds
adcb
mov
add
pop
jg
mov
cs
add
mov
out
repz
pusha
ss
and
mov
out
int3
dec
loopne
mov
adc
jo
or
call
inc
call
cmp
imul
push
dec
outsl
rolb
stos
jecxz
cmovo
add
inc
dec
inc
push
xchg
jecxz
stos
jbe
jecxz
cmpsl
mov
adc
push
or
movsb
inc
pop
add
pop
sbb
dec
sub
dec
out
addr16
cltd
push
mov
dec
pop
shl
mov
pushf
icebp
push
cmp
fisttpll
inc
pop
testb
rcl
loope
mov
cli
ficoms
mov
lret
repnz
sub
push
pop
and
push
dec
inc
sbb
jb
push
or
pop
adc
sbb
push
fcmovbe
lods
loope
fucomp
push
add
inc
push
cmp
fidivrl
mov
das
gs
pop
hlt
jge
push
adc
subl
lods
jno
mov
xchg
or
in
je
mov
and
jo
jg
xor
repz
push
pop
xchg
xchg
mov
adc
movsb
xchg
xlat
add
and
dec
jnp
jno
call
pop
addr16
pop
lods
xor
add
aad
pusha
mov
xchg
mov
jge
ja
icebp
xchg
shr
jbe
add
jmp
lret
inc
and
mov
dec
xchg
jg
xchg
sbb
in
xorb
push
push
xor
pop
jge
mov
loope
sbb
xchg
mov
ja
popa
sbb
sbb
nop
or
xorl
push
aas
mov
idivl
mov
fildll
jmp
inc
fsubs
xlat
jno
ss
sbb
cmpsb
cmpsb
cli
in
mov
iret
insl
les
push
movsl
loope
popa
mov
fdivrl
inc
addr16
gs
andl
aad
test
loopne
in
add
adc
dec
jo
adc
or
clc
lods
and
sub
in
or
or
cmp
push
mov
adc
stos
cmp
mov
jg
dec
sbbb
or
test
jle
or
dec
insb
inc
mov
push
jecxz
or
mov
xor
bound
xor
sbb
std
jl
in
out
xchg
mov
adc
mulb
mov
sahf
out
xchg
cli
jmp
shlb
mov
sarl
std
cmp
push
dec
out
xchg
mov
rcll
outsb
inc
push
mov
insb
add
mov
clc
add
cmp
insb
or
subb
jno
mov
adc
cmpsb
adc
push
int3
or
and
jae
add
lret
sub
xor
xor
adc
das
dec
les
pop
gs
in
outsl
test
std
jbe
imul
inc
leave
outsl
xchg
xor
sub
test
pop
out
jbe
xchg
lods
pop
pop
mov
lds
pop
pop
sbb
push
sub
imulb
mov
sbbl
call
adc
lcall
jne
fs
sarl
mov
cmpsb
hlt
xchg
fcmovb
mov
inc
mov
mov
inc
jge
int
and
mov
addr16
pop
and
cmc
mov
or
or
sahf
xor
loopne
cmp
ljmp
ret
in
push
scas
xchg
aas
fnsave
test
xor
loop
mov
push
dec
xchg
mov
jmp
popf
jle
jns
sub
adc
jns
lea
mov
int3
daa
dec
jecxz
js
and
les
inc
adc
movsl
pop
lock
outsb
inc
cmp
mov
movups
mov
dec
lret
jp
mov
and
aam
fs
fnstcw
xchg
rorb
std
push
push
mov
mov
movsb
inc
lds
mov
and
or
gs
fsubs
mov
mov
inc
add
gs
lods
and
or
mov
sbb
push
jg
insb
or
cld
in
in
repnz
rolb
call
jb
outsb
ljmp
pop
sub
sbb
mov
xor
cld
sub
push
mov
fidivs
rolb
pop
outsb
repz
adc
stc
cmp
repz
pushf
hlt
icebp
js
add
int
fdivrp
es
mov
mov
outsb
xor
jmp
sti
test
xchg
dec
ss
and
sar
cwtl
cmpsb
pop
jge
dec
jne
ret
adc
inc
jg
mov
push
lret
cli
xchg
das
and
dec
movsb
pop
aaa
adcl
inc
in
mov
add
dec
into
divl
mov
iret
mov
popf
mov
pop
pop
add
cli
mov
mov
roll
push
pop
pop
cmp
and
lret
pop
loope
mov
dec
sbb
add
aas
jns
cs
xchg
stos
scas
imul
imul
mov
push
mov
aam
arpl
mov
fdiv
or
scas
ficompl
outsb
das
repnz
adc
nop
sub
inc
sbbl
ljmp
cmpsb
mov
pushf
cwtl
or
cmp
cwtl
test
ret
orl
out
cld
dec
dec
lock
addr16
adc
mov
lret
and
xor
pop
mov
int3
dec
fucomi
add
mov
leave
faddl
cli
jae
cltd
call
cwtl
lods
ret
inc
test
push
sbb
pop
xor
mov
rorb
inc
in
in
mov
pop
mov
sbb
xchg
dec
mov
insb
dec
addr16
mov
mov
icebp
xchg
dec
fistps
fldenv
mov
movsb
push
adc
mov
cmp
jp
push
lcall
cmp
and
int3
stos
je
ret
mov
pop
cwtl
jp
add
jno
psubb
out
fcoml
clc
xchg
aas
and
inc
cwtl
or
lods
pop
mov
mov
xchg
lret
xor
xchg
jnp
mov
data16
jmp
jge
sbb
mov
jne
sbb
xchg
xchg
push
fisubrl
out
push
lret
mov
ret
shll
aaa
cmpsb
js
inc
push
sbb
mov
test
fbstp
stos
inc
xchg
daa
mov
dec
roll
nop
or
lret
insb
jmp
dec
push
cld
loop
jne
iret
scas
pop
jp
rorl
inc
rolb
cmpsb
repnz
cmp
mov
movsb
test
mov
cmp
pop
adc
ret
adc
push
push
sub
cmpsb
shr
sub
sahf
std
push
js
je
fmuls
pop
mov
push
mov
aas
mov
and
or
js
xchg
pop
sbb
call
inc
int
stos
aas
or
dec
mov
jnp
fdivl
mov
movsl
or
cmp
lock
int
shll
subb
iret
inc
cli
fimuls
test
adc
cltd
xchg
popa
cmp
xor
imul
lahf
pop
cmovp
push
jb
aam
push
sahf
aam
sbb
jnp
jp
jle
or
mov
mov
mov
icebp
movsl
out
cld
loop
sahf
cltd
and
test
mov
pop
mov
sub
jae
imul
shll
mov
stos
adc
stos
and
stos
xor
js
ret
mov
or
fdivl
cmpsl
sahf
imul
movsb
inc
test
bound
xor
and
ljmp
ljmp
outsb
jmp
ficoml
ja
mov
xchg
pop
xor
and
subb
xchg
pop
es
outsl
mov
mov
sbb
adcb
loope
sarb
repz
adcl
movsl
out
stc
cmp
jb
rcll
fs
ljmp
or
mov
inc
icebp
xchg
out
cmp
imul
dec
cld
outsb
scas
xor
pusha
add
jnp
fsubl
jmp
ret
dec
imul
inc
lods
push
insb
fs
sti
xchg
out
jno
ja
adc
rol
addl
cmc
dec
or
lea
lret
cmp
jl
lds
dec
fsubrs
mov
xchg
mov
xchg
sbb
pop
jg
jge
stos
cmpl
pushf
nop
mov
scas
inc
jl
sbb
push
outsl
add
xor
cltd
jns
test
out
jl
out
leave
loopne
repnz
cmp
xchg
daa
cmp
mov
addr16
jns
sbb
in
loop
sarb
cmp
pop
into
sbb
adc
push
addl
fiadds
or
sbb
nop
neg
mov
outsb
pusha
out
aaa
inc
into
stos
inc
mov
ucomiss
mov
xor
or
xchg
dec
popf
int3
xchg
xchg
push
dec
loope
and
mov
xchg
mov
ss
je
mov
movsl
jecxz
popf
xor
testb
movsl
add
xchg
mov
jne
sti
movsb
arpl
adc
push
lock
inc
mov
jnp
shrb
es
adc
jmp
ret
cltd
and
xlat
imull
xor
pop
insb
sub
aad
jle
sbbl
jge
push
and
stos
mov
mov
push
push
mov
pop
in
mov
imull
mov
mov
lea
push
adc
cmp
test
sbb
dec
stos
adc
push
xchg
hlt
popf
jecxz
lahf
ds
jne
xlat
cmpsl
mov
test
dec
loope
cwtl
sbb
inc
aas
jo
orl
rcrb
mov
aas
ret
lds
imulb
cmp
dec
test
lret
xchg
jbe
sbb
filds
daa
or
mov
or
addr16
fucomip
mov
add
test
pop
dec
enter
dec
jae
lret
push
lcall
sub
cmp
aam
or
push
es
adc
inc
inc
clc
mov
in
cli
pop
pop
inc
or
jae
sbb
cmc
xor
jne
pop
in
sbb
sbb
jg
sub
lock
loope
sub
leave
dec
add
jl
fs
mov
rorl
add
movsl
sbb
shlb
sub
mov
dec
stc
jb
jge
sub
push
mov
nop
lods
dec
into
mov
orl
push
mov
jbe
movsl
test
ret
lds
cmp
sbb
xlat
lahf
jno
adcb
adc
loop
fidivl
aaa
add
or
xchg
out
out
ds
mov
and
jg
mov
fmuls
ja
fmuls
cmc
pop
lods
adc
fisttpll
cmp
ja
cmp
xchg
fistps
test
inc
hlt
ljmp
push
ret
inc
dec
or
in
mov
inc
sbb
int3
inc
shlb
mov
dec
jecxz
imul
scas
std
outsb
push
sbb
lods
cmp
push
dec
pushf
jns
pop
add
rclb
enter
rorl
popa
fiadds
inc
std
xchg
je
sbb
mov
xchg
pop
sti
cld
mov
adc
push
jmp
pop
data16
scas
mov
mov
push
push
cmpsl
insl
in
mov
mov
push
jnp
mov
adc
jg
jmp
aas
sub
mov
pushf
xor
push
pushf
mov
sub
push
loop
cld
jae
mov
and
sub
je
dec
pusha
subb
jne
pop
lahf
dec
shr
call
jnp
mov
test
xchg
lea
rcrl
mov
push
adc
imul
stos
push
cmp
addr16
je
xor
lahf
xlat
push
out
cmpsb
sahf
daa
jecxz
push
ret
scas
in
mov
sub
dec
aad
mov
mov
js
leave
pop
add
rclb
pop
loope
cmp
inc
imul
scas
push
inc
or
xor
popa
xorl
pop
cld
and
out
jno
jmp
mov
bound
dec
or
xchg
jl
mov
sbb
fildl
pushf
mov
mov
cwtl
xor
pop
stos
xchg
cmpsl
test
jo
imul
mov
push
out
xchg
sub
addr16
bound
xlat
push
xchg
fnstcw
fcmovu
loope
xor
push
pop
cmpsb
push
hlt
inc
adc
dec
enter
push
test
call
xor
lahf
inc
or
mov
mov
addr16
fsubrl
addl
pop
lds
inc
xor
mov
out
stc
xchg
and
dec
ds
rorb
add
nop
inc
add
mov
aas
movsb
dec
jne
cmp
lret
cld
push
inc
lock
cmp
dec
mov
addr16
add
in
into
cmp
push
aad
inc
cs
xchg
orl
and
push
fs
adcb
mov
sahf
mov
rcr
push
cli
fwait
fs
insb
jae
dec
popa
cltd
jb
push
add
rol
ffree
mov
dec
add
jg
pop
loope,pn
mov
pop
add
pop
mov
pop
xor
fwait
scas
and
daa
inc
mov
cld
test
pop
sub
and
call
mov
jg
inc
adcl
jae
adc
js
das
push
das
inc
aad
movsb
mov
inc
sub
in
leave
and
outsl
inc
in
mov
sbb
mov
xlat
dec
or
cmp
cmp
pop
xchg
xchg
test
sbb
jns
and
das
scas
enter
int
cwtl
or
dec
out
shlb
mov
inc
mov
subb
lret
fwait
cmp
pop
mov
and
daa
in
rolb
cli
lret
mov
push
mov
fbld
push
adc
lods
subb
mov
imul
jmp
push
cmp
fistps
loop
mov
ret
cld
stc
dec
mov
insb
xor
mov
outsb
fsubl
mov
xchg
shll
es
sub
mov
hlt
sbb
sahf
ljmp
and
in
cmp
js
dec
pop
pushl
mov
mov
mov
fists
out
bound
mov
xchg
insl
ret
pop
scas
cmp
or
dec
dec
fdivrl
fisubrl
xchg
xor
call
mov
arpl
popf
das
jae
shrb
adc
test
nop
mov
pop
aaa
lea
incl
mov
mov
dec
cmp
sbbl
inc
cltd
add
mov
insb
mov
cld
jb
adc
outsb
in
xchg
pusha
mov
mov
cmpl
inc
int
ljmp
insl
data16
pop
mov
add
fidivrl
insl
test
loope
enter
sub
fistpl
gs
ret
icebp
inc
jnp
jge
inc
jne
rorb
dec
sbb
adc
insl
and
andb
imul
cmp
cmp
jle
outsl
shrl
sub
or
mov
mov
adc
inc
cmp
das
jl
jnp
jecxz
and
js
fidivl
jb
xchg
xor
cwtl
test
repnz
scas
inc
ret
sahf
popf
push
pop
aas
add
mov
or
pop
out
cltd
and
sub
inc
lods
movsb
addr16
test
les
mov
push
cmp
insl
sbb
sub
out
mov
test
out
jne
ljmp
mov
jo
popf
divb
movsb
adc
fldl
loopne
insl
mov
icebp
push
sbb
and
sbb
movsb
push
bnd
ds
sub
outsb
dec
ds
pop
pushf
je
mov
add
mov
shll
cwtl
mov
test
aam
out
std
jnp
dec
mov
xor
jae
push
mov
sbb
das
dec
pop
adc
xchg
arpl
jo
rcrl
int
add
sti
mov
and
in
in
xchg
loope
fisubs
lods
fwait
clc
xorl
push
pushf
leave
sbb
cli
fcompl
ja
pop
lock
ficoms
popa
iret
sub
pop
into
or
mov
leave
dec
pop
dec
pop
mov
xor
ret
inc
dec
lahf
and
push
mov
dec
out
mov
shrb
imul
sub
repnz
push
mov
jnp
das
inc
rorl
lret
mov
and
push
push
rol
in
push
pop
and
test
dec
shl
sub
mov
xchg
dec
daa
xchg
rcrl
movsb
sub
sub
xchg
xor
lea
sub
fnsave
out
sub
insl
sbb
cmp
hlt
jne
sbb
mov
sbb
adc
sbb
inc
std
ja
scas
pop
dec
inc
adc
inc
shlb
jnp
pop
sti
ret
fwait
je
enter
test
sbb
lods
pop
dec
int
add
mov
sbb
xchg
in
cmpsl
rcrl
sub
jb
fdivs
std
mov
leave
inc
pop
mov
nop
mov
jnp
ret
loop
imul
rclb
cmp
mov
adc
hlt
xor
mov
out
fs
push
pushf
push
mov
outsb
std
je
into
dec
push
push
sahf
xchg
xchg
jnp
pop
sub
mov
outsb
mov
out
cli
cmp
xchg
nop
xor
sbbb
xchg
push
jns
jl
mov
movsl
xor
data16
adc
ss
sbbl
movsb
ds
xor
stc
add
test
mov
ja
lds
add
push
loopne
dec
sbb
dec
daa
and
cmp
stos
std
icebp
add
push
ja
fsub
aaa
add
addl
insl
add
mov
stc
faddl
xor
mov
push
jmp
add
leave
outsb
xor
ds
cld
push
inc
mov
inc
ret
pop
xchg
adcb
add
adc
into
dec
pop
and
daa
idivl
jle
pop
xchg
pushf
push
sbb
or
sti
push
dec
pushf
inc
daa
out
inc
sbb
cwtl
sub
call
scas
mov
shrb
cmp
fistl
push
insb
jnp
aam
in
sahf
dec
sar
pop
dec
cwtl
fsubrl
test
jecxz,pt
ret
pop
cmp
or
xchg
xchg
nop
lret
ja
cwtl
ret
aas
stos
dec
mov
jne
mov
je
mov
outsb
dec
pop
iret
adc
inc
cmp
pop
fnstcw
mov
loope
mov
cmp
adc
mov
jp
fcomp
or
aas
sub
jne
and
neg
insb
addr16
mov
jp
sbb
cmp
sbb
int3
ret
push
sub
cltd
xchg
mov
lea
mov
push
js
cli
fsubs
sub
adc
jge
sbb
lods
mov
shlb
adc
fidivl
imul
fidivl
fstl
cmpsl
ret
xor
mov
xor
pop
mov
adc
jp
es
push
test
pushf
lret
push
cmpsb
insb
add
sub
rcrl
xchg
mov
pop
mull
jns
test
insl
rcl
outsl
add
sub
and
shll
test
rcrb
push
cmc
repnz
ss
xor
mov
jno
stos
push
mov
add
popa
test
lret
stos
and
addr16
pop
scas
mov
jmp
mov
pop
xor
sub
leave
xchg
ret
mov
add
sbb
lods
dec
js
sub
mov
dec
cmpsl
orb
nop
ja
jg
jnp
jb
scas
xchg
xchg
xchg
les
mov
xchg
cmc
cmc
dec
cld
xchg
lods
out
xor
cmp
or
and
lds
fimuls
inc
bound
ss
xor
and
adc
hlt
leave
or
inc
inc
stc
mov
push
and
xchg
loope
pop
or
test
pop
aas
popf
cmpsl
mov
mov
push
movsl
rclb
mov
add
mov
sbb
mov
mov
fnstenv
js
jo
or
pop
jns
shll
fwait
loope
or
je
and
stc
jg
imul
ja
pop
adc
shrb
jno
add
in
pop
mov
jns
jle
mov
mov
iret
dec
cmpsb
fdivp
scas
mov
dec
sbb
lcall
dec
ret
add
les
adc
ss
adc
fildl
enter
sub
adc
adc
inc
les
nop
sub
jae
add
dec
mov
dec
push
fiaddl
in
pop
aam
fldl
ret
shrb
mov
outsl
mov
xor
cs
sbb
mov
outsb
test
pop
sub
shrl
loop
aam
pop
pop
sub
fsubrl
cmp
add
stc
lahf
and
sbb
andl
bound
cmpb
scas
lret
jg
push
or
add
mov
inc
or
jbe
mov
mov
mov
and
lods
pop
mov
push
add
inc
cli
fcoml
pop
loopne
subb
pop
fldt
adcb
pop
lea
movsb
fwait
das
lds
shlb
adc
xor
pop
pusha
pop
outsb
out
jne
decl
mov
xor
insb
sbb
int
popf
push
mov
push
cli
data16
or
je
mov
add
push
xor
loop
push
jae
ljmp
loopne
popf
mov
push
sbb
imulb
aam
add
test
or
hlt
or
sbbb
push
mov
mov
loopne
out
mov
push
outsl
jnp
into
repz
mov
int3
inc
cwtl
scas
iret
xchg
jecxz
lds
push
adc
daa
lahf
ficoms
mov
mov
sbb
jecxz
jb,pn
dec
xchg
jae
movsl
gs
xor
sub
dec
pop
push
inc
fdivrl
mov
cmp
mov
or
pop
mov
mov
mov
xor
cwtl
jge
adc
xlat
pop
sahf
adc
inc
outsb
cmpsl
cmp
aaa
dec
mov
sbb
mov
jp
sub
out
mov
jl
jl
jnp
or
xor
xor
sarl
xchg
lds
pop
inc
jns
jle
xchg
push
mov
cmpsb
push
cmc
outsl
mov
xor
fs
lea
out
push
sbb
or
mov
iret
inc
xchg
es
test
push
push
into
mov
xchg
movnti
or
int
call
xor
push
jno
cmpsl
fs
scas
push
idivb
xor
dec
cmp
movsl
pop
inc
jnp
ffree
ljmp
cmp
push
movl
addl
test
sbb
sub
mov
mov
cmp
es
incl
ss
fldl
xor
out
jge
lret
in
pop
outsb
inc
orl
push
mov
sahf
pop
loop
jbe
sbb
jo
cli
outsl
cmpb
cmpsb
mov
pop
mov
add
das
test
jno
jo
in
sahf
xor
rorl
ds
rorb
push
inc
push
imul
je
stos
gs
popf
pop
lods
shl
imul
movsl
enter
pushf
xchg
andl
push
push
insb
and
xchg
push
add
repz
mov
hlt
shll
adcl
leave
test
scas
jbe
adc
inc
adc
and
cmp
adc
insb
pop
imul
cmc
lcall
mov
movsl
movsl
push
push
sbb
inc
popf
cwtl
aas
ja
inc
lods
dec
addl
pop
xchg
cwtl
push
mov
cld
or
rclb
bound
jne
sbb
fstpt
push
inc
sbb
ret
xor
popf
add
xchg
in
ret
fcom
inc
test
shr
shl
lock
jae
inc
into
and
and
orb
stos
sbb
adc
out
lret
cld
into
popa
addb
lods
in
xchg
scas
pop
sbb
rcl
addr16
xor
mov
popl
sbb
repz
jo
cmc
aas
int
mov
imulb
mov
xchg
enter
loopne
addr16
ds
push
mov
adc
lret
push
out
ficomps
lret
adc
dec
push
cmp
xor
inc
jmp
xchg
out
sub
cmpsb
push
or
cmp
xchg
push
nop
sahf
push
xchg
xor
jl
insl
adc
pushf
mov
aam
xor
push
stc
jge
hlt
rcrb
fdivrs
inc
ficoml
mov
clc
movsb
subl
jb
push
and
dec
adc
mov
and
or
testl
lahf
push
mov
xor
ret
pop
jmp
inc
loope
jg
jae
add
add
or
push
and
js
ret
mov
mov
outsl
or
rolb
xor
xor
pop
rcll
add
stc
inc
mov
daa
pop
pop
and
popa
jbe
lahf
and
lds
mov
fldt
pop
and
add
loopne
adc
push
dec
mov
loop
insl
push
dec
lock
ljmp
pop
xchg
mov
insl
mov
loope
movsb
out
xchg
push
sub
out
mov
iret
xchg
xorb
pop
int
loop
xor
pop
inc
arpl
mov
dec
inc
jb
inc
push
lods
int3
sub
add
hlt
mov
dec
sub
nop
mov
add
mov
push
mov
pop
push
jg
repz
fldcw
jnp
sbb
push
loope
and
sbb
lahf
push
jno
mov
push
bound
cmp
inc
outsl
push
stos
sbb
jmp
xor
inc
dec
ret
imul
push
sbb
jecxz
mov
clc
push
adc
sbb
jl
dec
adc
mov
push
je
cmpb
and
cmp
imulb
imul
stos
es
nop
insb
or
int3
pop
inc
or
insb
cmp
cltd
sbb
cmp
cwtl
sbb
push
sub
insb
mov
icebp
je
mov
std
cwtl
or
mov
xchg
fstps
mov
repnz
cwtl
add
rcrb
popf
leave
inc
and
sti
inc
lret
pop
mov
inc
mov
and
bound
clc
and
lret
mov
xchg
sbb
jno
fimull
insb
mov
xorb
clc
ret
xchg
aam
cltd
ss
push
or
mov
out
mov
sbb
mov
rorl
ja
sub
arpl
mov
repnz
int
mov
in
imul
test
push
ja
dec
scas
outsl
outsb
mov
xchg
and
icebp
inc
mov
push
js
add
jle
ret
nop
push
rcll
jae
inc
push
xor
xchg
push
xorps
xor
out
dec
leave
mov
pusha
rolb
ret
push
and
movsl
jecxz
stos
not
pusha
loop
fwait
adcl
xchg
pop
dec
js
test
inc
test
add
mov
mov
mov
ret
shlb
shlb
pop
mov
xor
push
xlat
pop
outsl
test
and
repz
aad
repnz
add
mov
pop
das
mov
add
outsl
lods
call
fisubrs
pusha
daa
and
sub
push
sub
and
cmp
and
fwait
mov
pop
cmp
sbb
inc
mov
pop
sbb
ja
lahf
pop
jp
mov
lret
sbb
sub
mov
inc
mov
jb
inc
xor
cmp
rol
add
add
push
stos
lahf
jb
movsl
jecxz
jl
jb
adc
fcmove
mov
rorb
adc
outsl
shll
sub
lea
xor
sarb
addr16
cmp
mov
xor
pop
adc
test
lods
enter
sbb
sbb
mov
sub
mov
shrb
icebp
daa
cmc
xor
and
movsb
jl
push
imul
int
movsl
jge
xor
ret
dec
dec
pop
sub
sub
xor
lcall
aad
dec
cmpsl
mov
and
cmp
out
jnp
popl
pop
test
popf
std
mov
push
dec
fwait
xchg
xor
notl
ret
and
xor
fs
ljmp
cmc
jecxz
cwtl
pop
fcoml
scas
insl
addr16
pop
pop
jle
mov
stc
push
dec
aaa
inc
pop
sbb
push
movsl
test
jae
push
adc
nop
lock
cmp
movsb
scas
and
adc
adc
mov
outsl
addr16
mov
and
jle
outsl
push
push
jae
push
rorl
int
lds
fsub
push
push
jg
sub
imul
and
xchg
jecxz
jno
cmc
in
flds
aas
xchg
xlat
pop
lea
lret
aas
pushf
xor
jmp
imul
sahf
frstor
ds
mov
add
sbb
add
pop
cmpsl
push
leave
push
fwait
or
and
sahf
cmp
inc
and
js
mov
rorb
mov
xor
mov
dec
lods
shll
jle
mov
int3
or
pushf
packsswb
and
inc
lret
or
and
fwait
adc
xchg
enter
out
mov
fdivl
mov
lea
idivb
sbb
push
xchg
push
fisubrl
xchg
and
jl
sbb
std
adc
push
cmp
mov
addb
ss
testl
xchg
sti
adc
or
push
pop
inc
in
pop
mov
sbb
sbb
mov
imul
lds
inc
push
outsb
push
sub
stos
pop
mov
jno
imul
js
push
xchg
add
cmpsb
cmp
push
int3
dec
test
xchg
fildl
into
jge
lret
in
cwtl
sahf
push
jbe
xchg
mov
dec
dec
inc
stos
cmp
ss
aas
sub
in
in
push
js
inc
loope
mov
cmp
aam
xlat
stc
cmp
loop
push
cmp
jnp
mov
out
xor
pop
ret
fwait
xchg
jl
sub
or
test
push
in
or
vmaxsd
adc
jns
mov
xchg
dec
imul
cmpsl
inc
xchg
cwtl
lret
sti
fwait
jnp
xor
xor
push
subb
imul
jge
xchg
pop
pop
sub
xchg
js
insb
sub
mov
ja
push
dec
xor
outsl
or
lea
mov
push
pop
pop
push
enter
in
sahf
mov
xchg
repnz
push
xor
mov
adc
add
or
divl
out
pop
mov
mov
mov
in
sbb
and
dec
nop
mov
xchg
sbb
mov
out
sahf
data16
mull
bnd
dec
jmp
stc
push
popa
bound
lret
jno
jl
insb
out
ss
xor
dec
das
pop
int3
fwait
add
movsb
mov
inc
lcall
jno
jecxz
xor
adc
inc
and
xor
sbb
add
sbb
test
jge
jle
out
dec
arpl
dec
aad
dec
popf
mov
cltd
test
insl
lock
shlb
stc
xchg
mov
test
xor
pusha
cmpsl
psrlw
jge
sub
cmp
jno
call
mov
imul
add
dec
mov
cmpsl
pop
jns
movsl
out
mov
js
sub
test
add
mov
cmp
pusha
xlat
bound
jbe
std
aaa
lea
in
or
insb
mov
out
out
mov
imul
xchg
gs
aad
mov
inc
mov
leave
pop
xor
popa
outsl
add
mov
int
pop
mov
xchg
xchg
mov
lods
cmp
pop
jns
loop
incb
cs
loope
and
pop
push
adc
aaa
insb
cmp
sbb
sbb
leave
adc
div
lret
daa
or
orb
ror
xchg
jno
lret
and
popa
ja
adc
stos
movsl
repnz
xor
xor
mov
or
mov
cmp
pop
jb
sub
sti
jecxz
and
ret
loope
mov
mov
and
cli
mov
popa
adc
popf
nop
rcrb
dec
add
add
push
das
mov
xchg
mov
inc
jmp
iret
xchg
sbb
insb
sbb
pop
fimull
cmc
xor
stos
and
gs
insl
stos
lock
and
fsubrs
cld
addr16
mov
sub
aas
sbb
xchg
xlat
push
mov
test
jo
add
ficompl
push
jno
cmp
add
adc
sub
lock
insl
addl
and
out
xchg
imul
nop
stos
push
add
xorb
div
cwtl
insl
jno
mov
dec
push
loope
jge
stos
rclb
outsl
into
push
adc
sbb
cmc
cld
inc
mov
cwtl
push
push
sub
xor
andb
aad
sbb
fwait
add
xor
adc
push
and
jns
js
aas
xor
dec
stc
jb
call
and
movsl
out
jle
jge
push
xor
imul
lods
inc
ja
xchg
and
movsl
add
mov
sub
xchg
ja
or
xor
pop
push
repz
jb
mov
out
or
scas
jnp
in
std
push
jecxz
dec
insl
call
sub
mov
std
rcrl
nop
xor
push
ret
sbb
sub
mov
addr16
dec
cwtl
mov
dec
and
jbe
mov
cmp
lcall
nop
fucompp
add
mov
jg
xchg
ja
mov
imul
mov
jae
adc
pop
sahf
stos
cmp
dec
mov
lods
cmpsl
cmp
push
fcoms
sub
sahf
out
insl
sbb
jge
dec
aas
push
loopne
jb
scas
cmp
popa
sbb
cld
mov
jne
add
clc
ja
xchg
cltd
pop
xor
cmp
cmpb
pop
gs
push
cmp
loopne
push
fcomip
dec
mov
les
inc
out
xchg
imul
push
mov
push
adc
jnp
fnstenv
pop
mov
enter
xlat
pushf
ret
imul
shrb
gs
mov
add
cli
jbe
jo
pop
cmc
sbb
rcl
jno
stos
lahf
testb
dec
push
cmp
mov
stc
mov
out
ret
fldenv
mov
add
sbb
psubusw
je
sub
jb
rolb
fs
aas
repnz
sbb
fcomp
cmc
mov
hlt
mov
mov
or
mov
ds
push
jns
jns
cli
pop
es
test
pop
sbb
rorb
jl
add
shl
adc
push
leave
addr16
jbe
loop
jbe
jle
das
and
cmp
fiaddl
clc
push
jmp
push
outsl
push
movsb
mov
rorb
add
xchg
cmp
ljmp
iret
lahf
stc
fldt
rcll
jp
jp
jno
mov
sbb
add
jae
leave
and
sbb
notb
xor
push
mov
mov
leave
shl
or
testl
mov
fisttps
out
sbb
add
mov
pop
pushf
cmp
fbstp
push
push
fs
pop
mov
mov
xor
pushl
mov
repnz
subb
push
mov
addl
stos
movsl
xor
inc
ret
out
nop
les
mov
out
cmp
add
imul
pop
lds
jp
nop
push
popf
fists
push
and
xchg
subl
insb
cltd
test
sbb
pop
loop
mov
fwait
xor
inc
call
mov
inc
pop
je
sub
pop
stos
mov
cli
test
and
xor
inc
sti
mov
push
leave
int3
mov
push
lea
fcmovbe
sbb
sbb
mov
mov
xchg
pop
push
mov
inc
enter
ss
aad
fcoms
lds
xchg
push
test
je
xchg
push
icebp
imul
mov
inc
or
or
jo
adc
pop
insb
inc
push
cmp
cmp
cmp
sub
es
inc
xor
jmp
imul
mov
movsl
mov
pop
test
cld
mov
loope
divb
enter
adc
dec
push
data16
jle
mov
push
push
out
stos
and
cld
xlat
adc
std
ss
jb
pushf
filds
push
pop
push
jbe
rol
test
gs
xlat
sub
int
cmp
mov
ret
push
xor
sbb
mov
lret
in
lds
insb
shl
inc
or
dec
xchg
cltd
movsl
add
mov
and
roll
xchg
pop
inc
ljmp
sti
mov
pop
adc
andl
inc
xchg
and
mov
or
mov
mov
imul
movsl
scas
test
fs
pop
pop
stos
arpl
shrl
sub
stc
and
pop
lds
jb
nop
xor
jbe
hlt
ret
stos
mov
push
jne
fstps
inc
sti
fidivs
pop
out
out
mov
loope
dec
out
pop
mov
push
int
test
imul
sbb
aaa
mov
push
cmp
ret
sub
cmpsb
or
mov
jg
pop
clc
add
das
or
hlt
pop
aaa
dec
cmp
test
fs
scas
sub
mov
arpl
xchg
push
ror
notb
xchg
jbe
mov
dec
lods
outsl
test
and
push
arpl
adc
pop
and
dec
gs
mov
push
fnstsw
cmp
out
xor
aaa
sub
cmc
insl
fcomp
xchg
add
pop
jge
scas
icebp
xchg
rol
in
negb
mov
rolb
jle
sub
pop
adc
xlat
inc
adc
and
movsl
dec
jnp
pop
dec
push
fsub
fstpl
xchg
mov
mov
scas
das
out
in
pop
cs
in
or
mov
insl
fldt
iret
ficoms
fists
call
mov
nop
ja
sahf
or
adc
lods
sahf
decb
leave
xlat
and
or
pop
incb
shlb
mov
dec
das
pop
ss
or
or
jnp
jns
push
push
cli
mov
add
das
cmpsb
aas
enter
dec
inc
push
aas
cmp
cmp
in
inc
and
addr16
xchg
ja
es
dec
in
pop
and
sub
and
sub
xor
pop
lcall
repz
xor
xor
cmp
xlat
lods
lock
fstpt
das
pop
sbb
push
lret
sub
mov
shl
test
push
xchg
mov
sbb
or
and
out
pop
adcl
adc
ret
aaa
jmp
adc
jns
testb
imul
int
jno
dec
repz
out
mov
xchg
sub
add
ss
push
fwait
mov
jne
ret
sub
rcl
jbe
sbb
cmpsl
in
cwtl
or
cmpsl
imul
xchg
arpl
mov
jb
loopne
imull
movsb
incb
pop
add
add
cltd
aaa
scas
into
push
sbb
inc
loopne
dec
inc
sbb
xchg
dec
pop
mov
push
push
popf
pop
mul
je
icebp
xchg
daa
test
loope
xor
inc
loop
mov
enter
adc
inc
jnp
jo
clc
fistps
insb
mov
xchg
sub
aas
cmc
in
mov
sub
and
xor
or
sti
mov
jl,pn
enter
xor
xchg
xor
push
aam
xchg
jecxz
shlb
test
cmpsb
inc
lock
push
clc
inc
enter
add
mov
test
dec
mov
pop
lock
out
jns
cmpsl
mov
incl
jecxz
in
and
stc
inc
aam
shl
nop
rcr
sbbb
lret
hlt
inc
mov
cmpsl
lcall
rcrl
dec
mov
xlat
push
in
and
xlat
lds
imul
jno
scas
sub
int
xchg
push
lods
int
mov
ret
aad
lock
and
ss
pop
test
adc
mov
filds
jnp
nop
push
outsb
or
cmp
mov
xchg
cs
mov
push
mov
jb
out
adc
sub
adc
jmp
jnp
cmp
lret
pop
sarb
jne
sub
lret
hlt
xlat
xchg
cmpsl
mov
pushf
pop
jb
and
inc
adc
pop
cmp
pop
mov
xlat
inc
fsubr
rorl
out
cmpsl
test
loopne
clc
clc
das
adc
repnz
mov
fcomps
cwtl
cmp
ja
test
xlat
jge
ja
add
mov
sbb
fs
stc
sbb
push
insl
mov
pop
cli
push
cmp
loope
dec
mov
jb
add
xchg
jp
cmp
fsubrl
ss
lods
push
sbb
lods
xchg
pusha
aad
sti
arpl
out
loopne
in
leave
out
call
jg
add
mov
jle
aad
andb
fwait
lock
push
imul
xor
push
jne
cs
cmc
xlat
jge
xchg
jecxz
out
test
outsl
lods
inc
inc
ds
pusha
jb
loop
jle
cmp
push
out
pop
lds
cs
mov
lret
pop
add
mov
lret
fistl
jmp
inc
fsubp
xchg
enter
jns
inc
repz
scas
call
inc
lret
adc
lds
sbb
jnp
pop
loopne
pop
addr16
jp
jecxz
sub
movsl
adc
xor
push
or
inc
ja
xchg
xor
jecxz
xchg
testb
je
sub
mov
push
xor
arpl
test
aad
adc
inc
test
in
push
or
mov
imul
data16
mov
mov
fdivr
aas
add
data16
and
lock
das
lret
es
and
push
scas
cmp
test
push
lods
xchg
out
and
xchg
jge
cwtl
push
pusha
jp
lock
fidivs
push
and
jg
shrb
push
or
xor
clc
pop
sbb
pop
stos
mov
jbe
mov
cltd
fnstcw
xor
rolb
fcmovu
mov
in
in
jl
pop
pop
loopne
repnz
push
popa
sahf
int
lahf
xchg
jp
aaa
adc
cmp
add
xchg
mov
inc
dec
popa
dec
jb
mov
mov
dec
push
inc
mov
lcall
mov
pusha
pop
je
sub
push
sbb
jo
test
mov
jmp
or
xchg
push
jbe
lock
xchg
fdivr
dec
inc
mov
ljmp
mov
imul
sbb
clc
and
mov
pop
pop
mov
or
in
sahf
or
repz
mov
imulb
pop
push
and
sbb
and
push
sub
fcoms
fwait
rep
jge
js
aas
popa
mov
pop
in
sub
mov
adcl
push
ss
int
fistpll
mov
mov
inc
push
push
xor
and
sub
lds
lods
jecxz
fmulp
enter
lea
cmp
cmc
addr16
jge
movsb
insb
loopne
push
orb
adc
or
sub
mov
push
faddl
rclb
in
int3
mov
mov
jbe
xchg
arpl
jns
addr16
jle
inc
xchg
cltd
jnp
in
lods
ret
in
mov
inc
lret
and
xchg
push
psubb
mov
pushw
mov
jnp
loop
mov
test
xchg
sub
dec
jecxz
pop
ljmp
push
sahf
test
jno
aam
pop
mov
pushf
test
pusha
cltd
dec
fcmovne
stos
repz
lahf
xchg
int3
inc
or
sub
push
fldcw
add
mov
inc
mov
xchg
aas
adcb
sbb
movsb
mov
jmp
fnsave
mov
push
neg
daa
test
cmp
pop
out
dec
scas
test
jb
jno
aaa
and
call
das
cwtd
addr16
fidivs
xchg
mov
pop
add
and
repz
testl
sub
cwtl
int3
mov
movsl
pop
push
dec
mov
mov
stos
pop
or
push
sbbb
ss
js
mov
xor
add
loopne
aaa
push
jae
out
dec
movsb
inc
xchg
dec
popl
mov
sbb
aam
and
cli
sub
mov
negb
push
and
sbb
pop
cld
xchg
or
adc
rcrb
call
inc
xchg
pop
push
in
jnp
cwtl
cmp
fidivs
xchg
mov
adc
dec
imul
out
jne
lret
in
push
imul
adc
xor
sahf
test
fmulp
mov
xor
fstpt
and
sbbb
mov
xor
mov
push
sahf
and
jb
push
scas
out
add
cmp
cmp
outsl
push
push
add
fildl
cmp
fistpll
push
jmp
lea
lahf
xlat
das
sbb
aas
loope
jge
adc
das
and
push
je
mov
xlat
xchg
sub
inc
and
lret
nop
xchg
std
out
sbb
pop
test
fwait
jg
xchg
lock
decb
loope
in
sbb
inc
push
data16
jb
mov
in
daa
orb
jne
xchg
adc
inc
cmpsb
in
das
dec
insl
mov
lret
push
xor
rcl
out
jb
test
mov
xchg
add
shr
fucomi
sub
aaa
nop
push
jge
lret
outsb
xlat
pop
push
rorb
dec
jp
mov
add
push
ss
push
ljmp
jnp
jl
jecxz
ret
ret
inc
mov
pop
aas
cmp
jmp
in
bound
outsl
or
xlat
pop
xor
sub
mov
lret
pop
out
lret
ficoml
es
fstl
aaa
repnz
orb
loope
push
pop
xchg
out
jmp
or
lods
mov
clc
sti
xchg
leave
jbe
xlat
cmp
and
sbb
pop
xor
xchg
mov
fistpl
push
movsb
dec
cmc
mov
sbb
scas
dec
clc
dec
hlt
cmpsb
mov
sahf
dec
jns
stc
cmp
cmp
and
push
cwtl
ja
cmpb
sub
cltd
pusha
loopne
jne
mov
xchg
dec
sahf
inc
or
ret
jge
add
ja
aaa
dec
adc
mov
cmpsl
xor
jmp
outsl
outsl
out
les
mulb
push
lock
xchg
fwait
mov
rep
and
addr16
mov
frstor
je
mov
mov
push
popf
sbb
outsl
dec
iret
cld
push
ret
rcr
jg
or
sbb
rol
stos
xor
push
jp
test
inc
mov
jne
in
mov
xchg
sahf
sub
sbb
or
lahf
mov
inc
jle
xchg
lahf
xchg
mov
fwait
mov
mov
and
shll
lea
lahf
imul
test
test
fucomip
adc
mov
outsb
jb
inc
int3
loopne
mov
pop
enter
insl
dec
cmpsl
nopl
mov
insb
or
fdivr
sub
shlb
add
xchg
cmc
xchg
test
mov
or
xor
in
mov
mov
icebp
pop
insl
xor
lods
sub
ret
dec
push
cwtl
pop
aam
mov
and
push
pop
add
mov
jmp
push
pop
out
dec
inc
dec
mov
sub
jmp
pusha
cmp
pusha
add
cmp
cli
pop
xchg
pop
jnp
outsl
inc
fimull
popf
pusha
cld
xorb
mov
mov
outsb
movsl
arpl
mov
lret
cli
data16
dec
arpl
cmp
inc
pop
dec
mov
fdivs
nop
push
pop
cmp
xor
push
push
testb
cld
cmp
mov
jle
mov
outsl
jmp
inc
cmp
hlt
not
insb
cmpsb
cmp
insl
std
push
push
cmpsb
ljmp
cmp
push
pop
push
mov
repz
mov
lock
push
sti
pop
daa
add
repz
hlt
pop
add
mov
xlat
push
fldl
adc
mov
dec
dec
cmc
push
add
mov
sarl
nop
adc
out
cmpsb
sbb
sbb
cld
jmp
cmp
mov
pop
test
sbb
xor
int
outsb
adc
daa
adc
jnp
inc
repnz
fisttpl
xlat
cs
pop
or
filds
push
out
pop
aam
xchg
mov
testb
in
je
xor
xchg
sbb
daa
dec
inc
das
push
aas
in
enter
xchg
mov
mov
sbb
xor
cmp
test
cli
jno
test
mov
fsubrp
dec
jo
sarb
lret
inc
jle
push
es
mov
sbb
arpl
outsb
mov
call
jo
mov
sub
push
fcomps
mov
push
call
push
push
cs
popf
push
pop
and
fdivs
and
std
jp
mov
int3
fistps
imul
ja
insl
push
sbb
xor
cmp
adc
fs
cmp
mov
xchg
pop
data16
dec
jmp
add
push
lds
jb
fucomi
repnz
mov
sub
stos
ret
cmp
mov
push
adc
insl
sbb
xor
xchg
clc
and
add
or
aas
adc
sub
int3
lods
mov
adcl
push
pop
mov
cmpsl
add
stc
call
test
push
sti
xchg
pop
or
mov
sbb
dec
sbb
fists
push
outsl
mov
imul
pop
aaa
and
pushf
int
rcrb
sbb
pop
mov
xor
lock
jo
in
lret
imul
pop
ds
or
nop
stos
in
adc
or
sbb
sti
imul
sarl
xor
jae
lea
mov
and
in
mov
mov
jmp
sbb
jo
dec
and
or
inc
pop
gs
xor
cs
mov
sbb
sub
divb
stc
es
fimull
scas
xor
repnz
mov
push
mov
mov
es
xchg
outsl
xchg
xchg
mov
sub
out
mov
xchg
xor
sub
push
pop
pop
in
xchg
sbbl
jecxz
xchg
scas
pop
test
test
enter
call
dec
push
int3
mov
mov
outsb
sub
popf
shrl
imul
jb
movl
mov
sarb
sub
xchg
xchg
popf
ficoml
pop
popf
gs
jp
sub
imul
inc
inc
lds
sbb
pop
mov
mov
fs
and
cli
fs
repnz
push
mov
push
jae
int
jg
mov
mov
pop
sbb
add
stos
lcall
addb
movb
pop
cmp
fistl
xchg
pop
pushf
jmp
mov
add
pop
in
mov
out
in
mov
sbb
xchg
adc
fidivl
jecxz
in
icebp
add
jb
mov
je
imul
sbb
adcb
xor
sub
xchg
xchg
fimuls
ret
addr16
push
inc
ret
jne
xor
pop
fiadds
cmc
dec
popa
movsb
inc
insl
jl
cmc
ficoms
gs
nop
push
rorl
and
add
add
inc
mov
out
add
das
and
and
imul
insb
es
jl
push
mov
into
daa
add
mov
xlat
xchg
sysret
inc
fs
mov
xchg
cmp
cmp
xor
lods
push
imul
nop
stos
xchg
pop
rclb
f2xm1
jno
jecxz
xchg
in
mov
mov
je
popf
xor
adc
cli
fcoml
jno
and
inc
inc
dec
sub
arpl
lcall
jge
dec
or
mov
xor
mov
pop
fs
test
subb
add
sbb
push
enter
xor
ret
pop
mov
mov
shl
ljmp
add
int
shlb
faddl
mov
arpl
adc
test
or
fldcw
dec
sub
mov
push
rep
mov
fistpll
mov
xor
cld
jge
mov
pusha
shrl
adc
mov
mov
inc
mov
add
xchg
adc
adc
push
sbb
aad
sub
add
ja
mov
ss
rclb
and
and
xchg
jne
out
pop
mov
or
sbb
pop
scas
inc
mov
jb
mov
fstps
sarl
arpl
out
test
scas
je
mov
jecxz
dec
xor
data16
push
cmp
negb
nopl
outsl
and
sbb
inc
mov
xchg
dec
scas
adc
insb
and
cmp
imul
inc
sbb
outsl
jb
dec
mov
jp
std
js
dec
mov
fnsave
sbb
pop
ja
aad
stos
loope
pop
addr16
ja
enter
loope
maxps
xor
lret
or
and
into
sbb
aad
xchg
jecxz
cmpsl
fistps
jmp
fldt
negb
jae
dec
pop
fwait
nop
adc
mov
adc
inc
xorl
in
and
mov
adc
lea
sahf
fs
cmpsb
scas
mov
pop
cmpsb
xlat
in
cmp
sub
cbtw
pop
mov
mov
mov
mov
lds
push
mov
test
inc
sbb
pop
sbb
sub
push
cmp
iret
stc
adc
mov
dec
sub
nop
imul
pop
jb
lret
sarb
add
cmp
push
or
divb
jle
push
push
insl
xchg
lcall
fildll
rorb
sarl
jne
int3
rcrl
pop
aad
sahf
mov
mov
mov
dec
mov
sub
test
in
scas
push
std
xchg
fsub
sti
mov
xchg
mov
jb
stc
mov
dec
dec
out
or
les
mov
out
fiadds
pop
jne
ds
add
mov
and
cs
push
stc
cmp
inc
inc
mov
imul
mov
movsb
sub
inc
rol
pop
in
test
push
sub
cmpl
jno
mov
arpl
lock
dec
ljmp
insb
cltd
xchg
push
nop
mov
mov
jo
mov
enter
xchg
push
adc
shrb
inc
push
rcrb
stc
pop
stc
ja
fmulp
movsb
add
mov
std
scas
cltd
dec
out
jge
shlb
adc
ret
into
out
mov
lods
jmp
fimuls
pop
sbb
std
cltd
jecxz
push
mov
pop
aam
jbe
and
int3
cmpsb
idiv
rol
pop
shlb
push
jo
jg
shll
lds
jmp
cmp
inc
dec
mov
inc
std
js
sub
inc
cld
lods
movsb
jg
daa
cmp
out
mov
movl
into
mov
xor
xor
fs
pop
sub
ds
dec
pop
or
or
sbb
dec
xchg
mov
dec
sub
pop
idivb
xor
xorb
add
sbb
out
xor
xchg
imul
imul
sbbb
test
shrl
or
and
iret
leave
add
bound
scas
push
mov
addr16
mov
cmc
sti
scas
fcoms
mov
out
insb
insb
stos
bound
insl
lea
push
mov
xchg
out
fisubrl
nop
cli
cmp
cld
dec
insb
pop
mov
adc
testb
sub
dec
or
adc
mov
out
test
jge
jb
ficompl
mov
ret
nop
add
cmp
mov
fisttpl
push
mov
add
fs
stos
and
and
lcall
and
mov
push
push
xor
push
push
and
jl
mov
pop
fisttps
loopne
lods
call
cmp
pop
fucomi
inc
mov
rcr
jnp
mov
sub
cmc
lods
clc
sbb
cmp
ja
orl
and
mov
ja
outsl
xor
inc
les
sbb
shll
pop
pop
xchg
jmp
xor
adc
mov
clc
jle
insb
xchg
popa
dec
jnp
mov
add
and
ljmp
adc
cmp
push
jae
cmp
dec
xor
jbe
or
push
dec
stos
mov
push
and
bound
cmp
lcall
cmp
inc
inc
lar
cmp
xor
mov
int
push
lret
xchg
mov
push
pop
sub
mov
pop
je
mov
pushl
jp
mov
jne
aas
rorl
fs
rclb
test
xchg
addb
cmp
pop
jns
jae
cmp
mov
jnp
adcb
int
dec
andb
les
push
adc
sbb
sbb
in
add
add
cmp
add
jecxz
inc
lcall
push
mov
add
movsl
jecxz
jg
pop
push
mov
ljmp
push
xchg
lahf
popa
jnp
dec
xchg
xorb
sbb
cltd
and
lods
xor
mov
aad
fldenv
or
dec
popa
mov
jl
sarb
iret
inc
push
mov
aam
sub
lea
mov
cld
xchg
jle
xorl
orb
xor
sahf
arpl
xchg
xor
mov
push
jae
jge
push
std
lods
repnz
xor
cmc
jbe
pop
mov
outsb
call
mov
lods
daa
stos
lods
mov
popf
pop
movb
add
sub
adc
mov
cmc
mov
into
dec
dec
les
fcomi
inc
sbb
lahf
and
mov
js
inc
fistl
sahf
ljmp
lcall
xchg
cmp
fadds
sbb
fistpl
add
mov
hlt
in
mov
rclb
hlt
xchg
xor
xchg
sti
push
ds
mov
or
or
ds
inc
cli
and
popf
test
xor
adc
xchg
inc
and
adc
add
ljmp
popa
mov
mov
frstor
sbb
cmpsl
adc
stos
add
sbb
ss
xlat
scas
daa
loopne
dec
xlat
iret
add
xor
mov
arpl
movsb
cltd
js
int3
push
dec
jge
add
dec
fs
and
mov
mov
mov
sub
cmp
jge
sub
sub
inc
jae
out
jmp
push
and
cs
das
pusha
jmp
xchg
and
sbb
fidivs
out
or
iret
push
mov
pop
push
push
push
jl
movsb
ret
mov
ficoms
mov
rclb
ljmp
popa
loopne
sub
popa
dec
push
mov
xchg
push
sbb
out
mov
stos
into
xor
addr16
mov
mull
and
adc
sbb
xor
mov
and
ljmp
cld
push
cmp
jb
insl
jbe
rol
dec
mov
jne
push
dec
das
fsubrs
inc
xchg
mov
icebp
and
mov
hlt
dec
inc
mov
fmull
mov
inc
int3
adc
adc
push
adc
xchg
popf
add
paddb
or
ds
inc
mov
testl
rcr
adcl
cwtl
push
fbstp
shlb
loop
dec
fmuls
out
sub
inc
in
cli
test
pop
adc
ss
inc
outsb
aad
cs
pop
mov
fistpl
gs
pop
inc
cltd
les
push
xchg
xlat
jnp
inc
mov
mov
jo
dec
mov
dec
fiadds
pop
sbb
ud1
dec
lret
xor
mov
lods
in
push
inc
pop
pop
scas
adcl
loop
outsb
or
aam
jge
repz
push
movsl
test
jmp
clc
sub
inc
pop
jb
mov
jae
lds
jp
mov
cwtl
sub
dec
int3
cmp
fimuls
out
dec
pusha
shll
xchg
mov
fchs
insb
test
fmul
aad
adc
jae
fidivrl
jmp
loop
mov
mov
cmp
xchg
push
mov
test
inc
popa
repz
pop
jmp
rcrb
addr16
add
inc
imul
aas
inc
out
test
int3
sub
lods
sbb
jo
mov
xchg
xchg
dec
jge
les
cmc
cltd
enter
push
add
fdivrl
addr16
sbb
fldcw
dec
mov
pop
out
dec
jmp
lea
mov
push
push
lcall
and
mov
fmuls
inc
int
das
nop
jne
mov
imull
xor
shlb
in
xchg
or
push
stos
and
jmp
dec
lret
adc
add
in
sbb
xor
ljmp
in
push
shl
cmp
adc
lods
mov
sbb
loopne
xchg
fidivrs
and
sub
stc
lock
push
je
sub
lcall
lods
in
int
in
mov
inc
pop
inc
lret
in
xor
cld
sub
sbb
test
aaa
int
xor
jge
stos
incl
ficoms
les
jl
add
lcall
cmpsl
scas
stos
mov
or
insl
jl
rcl
mov
rorb
cmp
xlat
clc
rol
enter
arpl
mov
mov
or
cmp
inc
sbb
test
cmpsl
in
ret
inc
xor
adc
ror
fsubrl
mov
lret
ja
cld
mov
inc
sub
push
xchg
adc
and
data16
mov
dec
fnsave
movsb
int
shl
cmp
sahf
sbb
loopne
sbb
mov
fprem1
xor
mov
insb
sbb
inc
fwait
adc
sub
jl
in
and
sahf
jmp
push
adc
mov
ljmp
test
pop
pushl
cmp
ljmp
addr16
jle
push
pop
sbb
add
cmc
popf
pop
mov
stos
pop
dec
out
mov
xlat
int3
ljmp
mov
pop
push
in
adcb
outsb
or
arpl
subl
mov
push
bound
imul
mov
xor
push
dec
xchg
fstpl
test
rcrl
les
pop
push
in
call
inc
sbb
cmp
aad
adc
cmp
idivl
sub
leave
mov
jbe
add
add
push
pop
push
pop
xor
pop
lds
sub
fstpt
rclb
push
xchg
mov
xor
mov
cmc
sub
pop
add
lcall
flds
cmp
jl
xchg
notb
jb
mov
and
cmpsb
pop
xor
int3
xor
iret
and
stc
mov
fdivr
mov
dec
xor
ret
nop
sbb
xchg
fsubrl
jp
fstpt
mov
aas
mov
cmp
iret
rolb
sti
add
aaa
int
jge
jnp
roll
negb
testl
stos
xchg
adc
adc
stc
lock
cmp
arpl
cltd
cmpsb
movsl
push
in
xchg
push
pop
jno
mov
lea
decl
pop
lret
fbstp
mov
gs
fs
add
push
sti
sbb
sbb
inc
repnz
cmpsw
call
adc
jo
xchg
das
movsb
xchg
and
cmpb
or
mov
jb
xor
xlat
mov
xor
and
out
nop
jl
mov
lds
mov
mov
pop
repnz
add
jnp
fildl
inc
pushl
inc
pushf
lods
xchg
std
and
xchg
push
aaa
mov
je
loope
jo
lcall
aad
mov
cmp
mov
cld
or
aas
inc
adc
or
cltd
in
inc
fidivl
mov
lcall
inc
jle
cli
subl
ds
jae
adc
je
jmp
fistpll
inc
jecxz
cmpl
dec
fiaddl
cltd
movsl
mov
inc
nop
cmp
outsb
mov
and
lcall
mov
cmpsb
lcall
aaa
aaa
test
mov
add
jl
imul
adc
loop
loopne
mov
int3
xchg
incb
sbb
lea
out
pop
cmpl
rol
add
aam
dec
pop
mov
fadds
pusha
idiv
das
pop
adc
push
ljmp
popf
mov
mov
imul
dec
dec
xchg
inc
push
out
adc
faddp
push
fmuls
lods
dec
cltd
mov
ja
aad
sbb
sbb
hlt
xchg
inc
mov
sub
pop
stc
sub
ja
aad
xchg
es
xchg
mulb
insl
cmp
in
adc
outsb
push
inc
adc
inc
mov
mov
pop
sbb
in
shl
push
outsb
sbb
jmp
scas
int3
mov
popa
push
sarb
sub
mov
push
sub
roll
sbb
orl
shlb
xchg
jo
jmp
leave
dec
stos
xchg
cmp
loope
ffree
test
imul
inc
cmp
jmp
xor
push
xchg
movsb
lret
or
jne
lidtl
mov
sub
mov
test
mov
add
pop
call
push
insl
and
in
int3
add
insb
mov
push
xchg
ret
popa
lds
imul
mov
mov
inc
adc
movsb
lret
inc
pop
push
push
push
mov
ss
fsubr
sub
mov
es
fldz
adc
movsb
out
inc
addl
lret
aam
sbb
cmc
sahf
call
dec
sbb
loope
push
cwtl
dec
imul
adc
sti
hlt
test
mov
in
xor
adc
into
movsb
cmp
clc
pop
or
dec
outsl
inc
out
push
pop
xchg
fisttps
iret
xlat
scas
inc
movsl
or
mov
ja
cmpb
call
test
push
xchg
add
sub
dec
test
sub
sub
ficoms
rcl
xor
bound
cld
xor
mov
xor
inc
push
jecxz
inc
xchg
cmpsb
cmpsb
daa
push
add
mov
rcl
and
mov
call
push
ss
pop
in
cld
and
sub
xor
repnz
es
clc
std
push
mov
sub
inc
mov
cltd
and
pop
data16
mov
jp
daa
push
and
jno
in
orl
in
notb
jge
cmpsl
in
or
xor
mov
lret
jmp
scas
lret
mov
and
and
mov
stos
gs
rolb
fsubrs
rorb
pop
sub
decl
mov
rcl
rcr
aas
ja
or
fiadds
jge
lcall
or
pop
ja
ljmp
pop
pop
add
aas
clc
stc
cmpsb
xlat
jne
fs
adc
aad
mov
popa
repz
aam
adc
pop
loop
add
in
xchg
inc
cltd
sahf
pushf
adc
fwait
xor
sbb
scas
insl
popf
divb
clc
lock
mov
inc
mov
js
dec
dec
pop
cmp
addl
into
cs
dec
mov
out
aas
pop
pop
scas
xor
xor
sbb
sub
jmp
shll
and
dec
or
lds
lods
push
sub
pop
inc
mov
adc
in
xor
aad
jbe
and
cmpsb
roll
aaa
push
push
in
das
or
push
sbb
mov
push
in
cwtl
ds
xor
rorl
xor
mov
mov
sbb
cmc
in
jmp
and
mov
pushf
aam
in
aad
mov
subb
std
xor
inc
jbe
fadds
es
int
aam
pop
push
repnz
addb
scas
out
adc
pop
lcall
das
mov
std
flds
xlat
outsl
jmp
jg
inc
test
dec
or
cwtl
outsl
in
mov
dec
fildll
mov
mov
mov
iret
cli
sbb
iret
xor
mov
and
je
ret
cmp
gs
std
adc
jns
arpl
inc
add
cmp
movsb
cwtl
cmp
mov
or
mov
adc
add
jne
dec
pop
and
loope
lcall
cmp
stos
jno
push
aam
push
sti
xor
adc
mov
push
sbbb
jg
dec
pop
rol
rclb
int3
lret
fdivrl
aas
and
sti
hlt
ja
xor
sbb
push
jmp
mov
out
mov
cmp
repnz
lods
repnz
cmpsb
cmc
cmpsb
pop
inc
addr16
in
addr16
sbbl
testl
sbb
cmp
rcrb
pusha
lds
xchg
mov
fwait
pop
mov
cwtl
xchg
fisttpll
cmp
mov
push
jge
sub
xor
mov
cltd
imul
and
pop
movsb
out
mov
outsb
imul
lret
cmp
popf
popa
gs
sub
aad
sub
int3
scas
repnz
mulb
subl
enter
add
sub
add
jg
movsl
in
das
dec
cmp
or
inc
pop
xor
fs
inc
mov
out
and
ret
loope
addr16
out
dec
adc
in
xlat
lcall
pop
mov
mov
lock
mov
inc
push
adc
mov
loopne
and
test
xchg
or
mov
rdmsr
clc
dec
mov
scas
dec
icebp
js
jp
inc
push
lret
pop
inc
in
enter
dec
ljmp
mov
xchg
xlat
add
adc
pop
add
bswap
rolb
add
add
dec
cmp
mov
or
outsl
jo
mov
jle
and
push
imul
or
mov
or
adc
cmpsl
ss
std
addr16
je
mov
sbb
cmc
or
frstor
jno
pop
jno
in
jle
or
imul
sti
std
xor
cmp
shl
pop
aas
push
push
mov
xchg
xor
xor
dec
cmp
imul
dec
stos
xchg
and
divl
pop
das
enter
into
cmpsb
imul
dec
push
aad
in
fmull
and
cwtl
or
jge
mov
add
cmp
aam
imul
lahf
cltd
and
sub
or
rorl
add
cli
stos
pop
or
lret
push
in
addl
bound
imul
imul
sbb
aad
jg
sbb
mov
das
mov
push
mov
movsl
shrl
sbbb
or
mov
cs
icebp
dec
mov
pop
insb
es
rol
stos
ds
add
sbb
jno
scas
cmpsl
and
mov
pop
test
push
mov
dec
dec
add
pop
mov
fnstenv
mov
pop
adc
dec
inc
scas
aaa
add
mov
jb
les
ror
jo
mov
clc
jbe
cmp
shlb
mov
mov
mov
mov
das
sti
rcrb
or
out
mov
pop
push
fldcw
mov
push
pushf
lock
and
push
test
dec
fnstsw
or
xchg
or
lret
or
inc
and
insb
push
mov
sarb
into
push
adc
mov
lods
lahf
and
out
sub
repz
pop
cs
sub
adc
out
xlat
jns
stc
insl
sub
jb
and
jmp
enter
ds
push
jne
out
lods
sub
js
jle
shll
pop
rolb
leave
das
jnp
dec
imul
jge
xchg
shll
jb
mov
mov
sbb
and
ljmp
xlat
cmp
pop
ljmp
pop
aam
gs
xchg
or
mov
mov
ss
dec
xchg
popa
sub
out
mov
mov
mov
scas
or
mov
js
pusha
lret
fstl
flds
mov
daa
cs
bound
sarl
mov
sbb
add
in
dec
sbb
inc
movsl
mov
dec
jg
fdiv
xchg
es
cmpsb
aaa
pusha
ret
cmp
scas
jp
adc
mov
outsb
cli
xchg
lods
dec
stc
movsl
pop
mov
sbb
xor
ds
cmc
pop
cmp
push
xor
stc
scas
jns
filds
lret
sbb
ficoml
push
xchg
mov
mov
imul
fcompl
xor
rcrb
popa
mov
jbe
stos
iret
shrl
movsb
adc
loop
aaa
cltd
repz
cmp
mov
gs
or
mov
xor
mov
imul
add
inc
and
sub
jno
and
inc
insl
aad
aas
notl
mov
in
faddl
mov
pop
jmp
xor
cmp
sbb
idivb
lahf
jne
shll
lock
mov
je
stos
nop
xchg
jnp
outsb
mov
lret
incb
stc
xchg
aad
jns,pt
jmp
cmp
ficompl
xchg
call
add
lcall
pop
lock
push
xor
inc
mov
push
enter
les
jo
push
cmpsl
adc
push
push
sti
jge
mov
ljmp
rcrl
adc
out
into
fidivrl
sahf
addr16
mov
mov
fiadds
movsl
inc
imul
call
movsb
sbb
repnz
lcall
xchg
push
fnstsw
jno
mov
inc
mov
in
xchg
adc
mov
in
cwtl
mov
pop
iret
inc
cmpsl
mov
arpl
or
mov
imul
cmpsb
cmp
arpl
dec
arpl
mov
dec
push
lahf
add
cwtl
or
negb
movsb
mov
mov
fldl
fcmovu
leave
sti
lds
cs
or
sti
push
ficoml
cmp
mov
bts
inc
push
xchg
mov
pushl
adc
das
shll
mov
xchg
mov
xchg
mov
fs
aad
and
jl
inc
out
inc
push
sbb
push
loop
cltd
jns
sub
stos
jne
xor
ljmp
xlat
jnp
lods
mov
jle
push
pop
adc
repz
cltd
jb
test
sub
jae
shr
mov
and
fisttpl
jecxz
hlt
mov
out
inc
jp
sub
add
jmp
in
adc
sbb
pusha
jge
push
mov
rolb
adc
mov
push
aam
jae
mov
imul
push
lods
cltd
adc
ss
lret
pop
mov
jae
addl
imul
cmpl
jne
add
hlt
xor
idiv
ret
data16
cs
dec
shlb
fwait
push
sub
mov
aad
add
outsb
mov
cs
push
in
xor
fisubl
inc
mov
data16
movl
sub
mull
xor
pop
pop
ret
dec
aaa
xor
adc
fadd
loop
sbbl
popf
cmpsb
jg
cltd
fildl
or
dec
pop
mov
jae
cmp
push
fldlg2
dec
sbbl
xor
push
adc
cmp
es
xlat
filds
push
loopne
cld
js
xor
push
and
movsb
icebp
inc
es
xor
in
adc
adc
shl
mov
add
mov
insb
lahf
push
rcrb
aad
fstpl
orl
lods
jns
shr
rorl
and
sbb
add
sub
push
enter
test
rclb
mov
mov
gs
stos
popa
cmpsl
lea
addr16
xchg
jecxz
cli
lea
dec
mov
jo
or
mov
dec
sub
clc
add
icebp
into
and
xchg
lcall
sub
mov
ljmp
mov
xchg
repnz
fildl
mov
addps
sbb
mov
adc
push
js
inc
test
ss
fnstenv
and
inc
and
and
dec
in
adc
aad
stos
inc
cmp
insl
push
int
or
in
repnz
push
inc
inc
sbb
or
xchg
push
into
jmp
pop
leave
test
mov
mov
sub
lcall
clc
xchg
pop
es
rcll
das
xor
bound
pop
fmulp
xchg
stc
inc
scas
rol
push
int3
loope
xchg
bound
push
mov
imul
lret
adc
jmp
sbb
xchg
adc
ljmp
jns
lahf
xor
mov
jg
pop
pushl
cmp
jl
mov
push
test
add
mov
enter
fisubl
sub
push
cmp
pushl
pop
movsb
xchg
xor
lock
sahf
sub
jno
clc
fwait
and
pusha
fsubrl
jecxz
aam
or
pop
cwtl
loopne
xchg
mov
iret
nop
inc
sub
pushf
rcl
adc
out
push
mov
and
and
push
mov
adc
sbb
pop
inc
adc
dec
jp
fldenv
clc
or
cmp
mov
or
sti
popa
xchg
fcompl
mov
addr16
jbe
jp
and
mov
fwait
adc
test
fcoms
cmpsl
test
lea
ljmp
or
rcll
cmpl
rcll
sub
add
jp
cmp
and
sub
add
xchg
in
push
cmp
pop
loope
push
mov
and
imul
adc
js
mov
mov
mov
imul
fs
mov
fs
sahf
add
add
cltd
xor
ret
inc
sub
mov
in
hlt
das
and
and
push
rcl
test
enter
xor
daa
subb
popa
dec
rolb
and
mov
pop
dec
and
int
add
repz
lret
stc
ljmp
push
out
aas
mov
movsl
ret
sahf
mov
popa
cmp
push
push
popa
cwtl
fstpt
pop
lret
fyl2x
test
popf
inc
xchg
push
push
stos
dec
fs
inc
imul
aad
movsb
fsubl
xor
pop
mov
inc
daa
push
repz
push
test
or
insl
adc
cmp
gs
mov
mov
pop
insl
adc
mov
imul
shll
jb
add
or
shlb
jbe
call
xor
mov
pop
shlb
add
sub
shlb
je
push
xchg
insl
cmp
aas
hlt
fwait
pop
fimull
pop
xchg
nop
inc
sbb
fwait
adcl
cmp
or
rclb
xchg
inc
add
sbb
inc
int
mov
aam
xchg
stc
mov
cmpsb
jbe
mov
cmpsl
push
icebp
inc
mov
inc
addr16
out
test
lods
insl
pop
stos
cmp
or
imul
dec
stos
push
icebp
fcoml
or
ljmp
lea
jo
dec
cmpsl
aam
sbb
icebp
jmp
mov
adc
adc
xchg
sub
mov
lock
pop
jno
xchg
fbstp
sub
in
lds
mov
inc
negl
jo
mov
sub
stos
pusha
inc
shlb
or
mov
inc
jo
jnp
pushf
rclb
cwtl
stos
aad
popf
repz
arpl
aam
popa
shll
pop
mov
fwait
cld
pop
mov
icebp
repnz
add
sub
popf
outsb
call
in
sbb
push
dec
hlt
scas
xchg
shll
sbb
mov
add
xchg
pop
xor
fs
xchg
jae
xchg
add
sahf
xor
push
sbb
jmp
filds
cmp
jle
xchg
xor
lcall
or
lahf
jecxz
or
sub
int3
test
fimuls
mov
lods
jge
jg
fdiv
mov
imul
xchg
xchg
mov
int
mov
or
jnp
in
in
sbb
add
adc
loope
dec
dec
in
shll
ljmp
adc
fcoms
rcrl
xchg
mov
cld
das
sub
sbb
aam
xor
inc
push
adc
loope
or
lahf
pop
inc
loop
xchg
lock
mov
sub
ljmp
add
sbb
data16
inc
sti
repz
mov
call
pop
fmuls
and
adc
outsb
sti
movsb
lret
fmul
push
add
xlat
inc
repz
jp
rclb
mov
data16
add
xor
movl
inc
sbb
mov
stc
cli
jbe
or
js
ds
dec
cmp
cmp
dec
push
pop
inc
out
xchg
cmovg
pop
xorb
imul
popa
cmc
divb
dec
jle
sbb
or
cmpsl
stos
and
fisubrl
mov
mov
int3
xor
sahf
mov
sbb
inc
cmp
sar
aas
add
dec
cmpsb
push
pop
imul
test
adc
cwtl
loop
flds
cmp
cmc
cld
enter
adcb
mov
into
inc
idivl
xchg
in
mov
jp
add
inc
popf
fwait
js
push
sbb
and
add
arpl
mov
popa
aaa
jmp
push
push
fisubl
jmp
test
repnz
imul
or
push
jmp
xchg
in
pop
sbb
push
repnz
xchg
insb
jns
aad
mov
pop
inc
or
mov
jg
pusha
mov
mov
adc
jae
loopne
lret
jno
pop
leave
mov
push
dec
mulb
imul
test
jnp
push
cmp
ja
push
mov
and
dec
add
mov
in
enter
lods
mov
pop
xchg
divb
pop
js
xchg
xchg
nop
ja
out
aaa
xchg
test
ss
jb
daa
loope
aam
je
cmovl
mov
dec
aaa
cs
adc
xchg
stos
add
pop
loopne
sub
fcmovnb
aam
fwait
jns
aas
and
lds
addr16
lock
icebp
sti
rclb
xchg
fucomp
sub
cmp
lea
jns
pop
ss
cld
sub
jle
mov
in
sub
xchg
dec
cmpsl
sbb
inc
out
cmp
fnstenv
sub
and
pop
je
bound
popf
sub
arpl
mov
insl
and
les
arpl
cmp
rcll
movsl
mov
movsb
xor
sbb
push
jne
add
jecxz
pop
mov
cmp
aam
cld
xchg
insb
fisttpl
pushf
pop
imul
push
das
das
imul
shlb
ss
jae
sub
cmp
add
daa
in
add
mov
sbbl
lods
int
mov
dec
pop
cmpsb
xchg
out
aaa
cmp
lcall
in
rcrb
out
push
push
mov
ja
loope
sahf
addb
sub
and
mov
stc
add
iret
ret
clc
mov
sub
incb
das
out
and
inc
push
push
pop
shrl
pop
orl
paddusb
inc
jmp
xchg
mov
test
stos
mov
push
and
lret
pop
pop
jns
mov
cld
push
or
sbb
fcmovu
mov
inc
mov
cmp
push
jo
fucomi
push
jns
add
ja
and
lock
dec
xorl
jmp
addr16
mov
mov
pop
testl
xor
sti
adc
movsl
xchg
rcr
cli
into
pusha
in
mov
int3
adc
mov
inc
and
andb
hlt
mov
sub
xchg
inc
push
stos
pop
out
inc
add
sub
js
movsb
adc
jne
sbb
out
mov
in
je
dec
inc
or
mov
push
imul
or
cli
in
clc
push
sub
xchg
lret
pop
pop
jmp
aaa
sub
sub
loop
movsb
push
or
lahf
sti
mov
push
and
aas
xor
inc
and
sahf
xor
pop
cmp
push
icebp
out
sbb
lock
sub
loopne
test
ret
shrb
cpuid
add
mov
xchg
stos
push
in
sbb
int3
std
shrb
ror
or
pop
aaa
push
push
inc
or
mov
mov
lret
or
push
jno
ror
ds
xlat
mov
mov
ss
push
adc
sbb
mov
sub
jg
int3
pop
addb
pop
pop
mov
mov
aam
aaa
insb
mov
lods
movsb
push
xor
cmp
dec
aaa
cmc
repz
xchg
add
push
repnz
mov
push
mov
jl
cvttps2pi
lods
sbb
les
cmp
out
mov
or
mov
and
in
lea
test
adc
rolb
mov
in
xor
in
pop
pop
sahf
dec
or
pop
add
insb
pop
fisttpl
mov
mov
nop
fisubs
popa
cmpsb
repz
mov
mov
sbb
test
test
nop
xor
jecxz
mov
push
mov
stc
adc
mov
icebp
cltd
outsl
xchg
lds
imul
mov
clc
push
jb
lea
pop
jbe
mov
hlt
push
fdivrs
jp
gs
popa
add
cmp
inc
mov
jne
inc
or
or
bound
aas
xchg
cmp
jle
sbb
pop
jnp
movsl
mov
out
out
pusha
int3
cltd
ds
cli
popf
jmp
nop
pop
adc
loopew
loope
xchg
cltd
or
dec
adc
lds
and
jno
mov
sbb
sbb
push
test
sbbb
ljmp
dec
dec
cmp
mov
movsb
adc
lahf
sti
push
and
lcall
pop
push
lods
hlt
fadds
fldenv
mov
cmp
addr16
ret
inc
pop
in
int3
sub
or
inc
cmpb
pop
pop
movsl
jbe
ljmp
inc
cltd
jae
mov
mov
dec
jae
pop
add
in
sahf
pusha
test
es
xor
jns
push
int3
loop
push
fsts
movb
xlat
mov
lods
or
pop
jp
push
subb
stos
inc
mov
cwtl
jne
jge
mov
orl
aad
cltd
cmp
sti
jge
jne
jle
jmp
xchg
mov
xor
sbb
data16
push
in
daa
popf
dec
add
push
and
mov
mov
mov
sbb
popa
sbb
scas
xor
xchg
xor
mov
mov
xchg
out
pop
ret
repz
fs
push
mov
rcrb
or
loope
adc
out
adc
icebp
or
lea
xchg
out
clc
or
xchg
out
cmp
mov
rolb
repnz
cmp
cld
push
addr16
mov
mull
sub
dec
sbb
es
push
xorl
push
icebp
sbb
imul
pop
adc
or
lds
sbb
pop
sbb
jbe
xor
fwait
popf
sbb
mov
fimull
test
mov
gs
dec
je
stc
jp
inc
sub
lods
scas
pop
and
scas
in
xor
int
pop
and
inc
shll
out
in
mov
or
hlt
movsl
and
lret
pushf
or
lahf
sub
std
pop
loopne
xchg
pop
ds
fisubrl
aaa
adc
idiv
xor
dec
rclb
scas
and
pop
lahf
mov
adc
in
gs
call
jge
cltd
test
stos
jecxz
fldt
scas
mov
mov
add
test
mov
cmp
dec
into
push
insb
jle
pop
push
and
xchg
divb
push
stos
fs
cltd
adc
stos
stos
imul
insb
cltd
loopne
mov
dec
fildll
mov
mov
xor
push
inc
adc
js
adc
dec
jne
and
lcall
sub
jge
stos
out
fs
cli
leave
cmp
push
jmp
rorl
popf
push
loopne
dec
mov
out
mov
out
cmp
adc
inc
xchg
ds
fwait
push
or
clc
jnp
cmc
pushf
cwtl
ljmp
xor
mov
fucom
cltd
ficompl
imul
fwait
pop
insl
jmp
push
sarl
test
sahf
push
mov
dec
adc
andl
in
repnz
mov
je
cmp
jp
pusha
pop
mov
fs
mov
enter
cwtl
clc
mov
imul
mov
je
mov
mov
or
cld
cmp
add
clc
dec
leave
mov
bound
outsl
aas
dec
sub
sub
cmp
or
sub
jp
adc
jae
push
adc
dec
inc
out
add
pop
sub
fists
jg
add
loop
sub
cmp
aaa
jne
fmul
jnp
cltd
mov
cmp
pop
mov
pop
push
pop
pushf
movsb
sbb
cmp
pop
std
das
cmc
fmuls
test
push
sti
lods
lods
call
stos
imul
pop
je
cltd
outsl
pop
in
jae
scas
pop
ret
push
push
rcll
dec
xlat
iret
adc
add
lahf
fiaddl
enter
sahf
jp
sti
xchg
mov
fwait
push
lock
and
sub
pop
rcl
movsb
fst
es
and
sbb
aad
in
pop
fbld
test
imul
sbb
ss
cmp
movsl
fyl2x
outsb
mov
fnsave
inc
xchg
sbb
dec
cld
mov
jg
mov
mov
aam
push
sarb
xorb
mov
sub
movsb
sub
fs
sub
fbld
adc
dec
in
lret
cmp
lds
and
push
stos
sahf
outsl
dec
mov
or
test
push
aas
xchg
cli
data16
dec
insb
dec
pop
mov
fcomps
inc
insl
push
nop
orb
repz
push
enter
lahf
test
and
cli
mov
mov
rorb
call
std
xor
cmp
dec
insl
xor
xor
lret
outsb
cli
mov
sbb
test
mov
or
xchg
adc
dec
pop
cli
imul
and
les
add
jl
cli
dec
pop
mov
add
in
arpl
ret
xor
test
inc
xchg
shll
xor
mov
and
xchg
insl
imul
mov
xlat
xor
call
mov
fdiv
jbe
int3
movsb
push
pop
xchg
addl
inc
test
bnd
sbb
adc
or
cld
jp,pt
jge
mov
rorb
mov
jg
inc
insb
adc
mov
popa
out
adc
shlb
test
mov
fisttpl
xchg
mov
faddl
lret
mov
gs
or
aas
pop
inc
push
mov
add
out
add
pop
mov
dec
ja
test
pop
out
and
dec
aaa
pop
and
mov
mov
pop
xlat
je
pop
xor
cmp
lock
pop
fstl
add
xchg
jns
or
or
pop
cmp
inc
add
push
das
push
dec
pushf
pop
nop
mov
scas
aad
lods
faddl
out
adc
movsl
mov
jns
mov
pushl
popa
data16
gs
testb
pushf
mov
jae
mov
arpl
xchg
stos
clc
push
mov
push
dec
inc
jg
and
mov
imul
cmp
and
sahf
jmp
jl
repz
test
sbbb
aas
mov
pop
mov
cmp
mov
jmp
insl
mov
mov
and
push
jbe
cs
test
add
jecxz
sti
das
popf
in
jns
into
ds
movsl
cmc
mov
xchg
sub
shlb
pop
cmp
and
dec
test
add
jo
jge
cmpl
fsubrl
cmp
in
fnsave
xor
sti
xor
xchg
clc
mov
sti
test
arpl
push
testl
out
mov
ja
jecxz
pop
loopne
cld
mov
sbb
cwtl
repnz
stc
mov
mov
adc
stos
subb
movsl
jmp
dec
bound
cmp
push
pop
adc
cld
dec
jp
jl
test
bound
stc
enter
and
xor
jmp
sti
xchg
cmpsb
pop
adc
and
jno
movsl
mov
dec
jmp
mov
sub
gs
std
psadbw
push
push
fmull
dec
mov
imul
or
fisttps
repnz
out
outsb
aad
ficoml
scas
cmp
mov
es
adc
cwtl
add
jae
lcall
stos
or
mov
lea
dec
push
mov
bnd
dec
in
xchg
mov
mov
mov
cmp
inc
pop
shlb
xor
inc
dec
cmp
mov
jae
or
sub
jmp
mov
pusha
test
mov
inc
mov
sub
xor
shr
xorb
pushf
dec
xchg
rolb
mov
aaa
dec
test
ficomps
xchg
mov
cmp
mov
icebp
imul
and
test
adc
pop
test
adc
mov
sbb
jne
xlat
out
testb
inc
mov
or
mov
out
pushf
jge
mov
in
jecxz
cli
xor
adc
push
jbe
or
mov
in
mov
cs
pop
rcrl
bnd
ljmp
cmp
sub
test
aad
mov
daa
jnp
in
shrl
pushf
into
cmp
insb
add
sbb
cmpsb
add
dec
cmp
in
pop
cmpsl
jns
xchg
int
or
movsb
cmp
inc
int
jno
stos
hlt
das
clc
sti
sbb
ds
rolb
mov
pop
fwait
les
cld
and
jle
mov
push
cmpsl
nop
imul
cmp
into
loop
ret
cmp
push
mov
movsb
push
imul
in
pop
add
cld
push
into
ret
mov
aad
mov
leave
pop
loop
jmp
lea
or
ds
jbe
out
mov
mov
xlat
mov
add
sub
xchg
stos
sbb
imul
jns
sbb
adc
fmulp
adc
in
mov
aam
pop
xchg
test
iret
push
cmpsl
pop
push
mov
fistps
aam
cli
sub
or
sbb
push
mov
cmpsl
out
sub
mov
or
bound
lods
dec
insl
test
lods
cmp
adc
dec
xor
push
or
out
xchg
push
sbb
ss
out
xorb
test
adc
aam
gs
mov
adc
das
inc
add
enter
mov
mov
adc
and
add
cmp
push
adc
sbb
push
xor
push
inc
test
pop
pop
scas
orl
xor
jmp
pop
enter
jns,pt
dec
jbe
jbe
js
jp
cmp
add
sbb
add
and
cmp
lds
popa
adc
pop
outsb
push
mov
and
fsubs
lods
or
mov
push
mov
mov
lds
sarl
jb
cmpsb
inc
xor
cmp
outsb
jnp
mov
call
rorl
arpl
cmp
xor
in
push
in
test
mov
mov
jecxz
push
lods
xchg
add
mov
pop
ja
adc
adcb
mov
and
scas
sbb
sahf
adc
aaa
cmpsb
jg
adc
cmpsb
mov
dec
aas
aas
jne
cld
orl
ss
or
insb
xchg
je
in
or
mov
mov
les
cli
in
stc
sub
inc
mov
nop
mov
inc
jb
xrelease
or
fistpll
orb
test
dec
pop
push
repnz
fs
push
nop
scas
and
daa
ret
lcall
sbb
pusha
mov
jnp
push
ja
idiv
les
enter
fisubrs
mov
or
mov
out
in
clc
push
cs
cld
mov
xchg
add
sahf
jne
cmp
xor
adc
add
test
bound
cs
jmp
les
dec
les
bound
jp
cmp
mov
ds
fisubrl
inc
xchg
inc
add
aaa
ficoml
dec
adc
xchg
cmp
sub
adc
hlt
lods
rclb
jns
sub
mov
xor
call
aaa
jo
clc
dec
cmc
or
inc
lods
inc
andb
pop
jge
pop
or
and
add
xchg
cltd
fstps
jmp
ret
ret
sub
inc
cmpsl
movsl
sti
test
adc
pop
stos
data16
xchg
push
add
push
insb
rcr
lock
add
outsb
add
jle
xchg
cmpsb
push
xor
out
adc
mov
add
xchg
std
cltd
sbbl
gs
sbb
fidivl
aam
fidivrl
pop
enter
enter
mov
addr16
mul
dec
rolb
mov
leave
push
cmp
xor
pop
xchg
loopne
pop
dec
adc
out
jmp
sub
or
push
mov
and
and
push
cmc
repz
mov
mov
mov
cmpl
lods
inc
inc
in
xor
pop
and
jns
sub
jno
fs
xchg
inc
repnz
inc
aam
lods
xchg
mov
pusha
movsl
cld
sub
mov
inc
push
in
push
inc
loop
fistl
popa
aaa
push
mov
mov
push
mov
in
inc
push
fwait
subl
out
sarb
dec
in
cmp
imul
clc
enter
fucom
dec
inc
lret
or
push
mov
mov
xchg
xchg
sti
jo
popf
cmc
test
lea
jmp
push
sahf
inc
adc
push
fbstp
sub
rcr
cmp
stc
lock
mov
in
and
test
in
out
mov
mov
lret
mov
test
in
test
inc
xchg
sbb
or
pop
pop
push
sahf
iret
cli
xchg
jo
dec
and
adc
mov
mov
cmp
test
dec
rolb
sahf
fisubs
bound
idiv
or
lock
xlat
add
inc
dec
jne
mov
dec
lcall
addl
adc
mov
mov
test
dec
test
sbb
lcall
sbb
mov
rorl
scas
adc
inc
loope
jne
sub
push
popa
mov
cmc
dec
inc
pop
xchg
outsb
adc
jbe
mov
mov
and
or
sub
cmp
lods
outsb
dec
cmpsl
or
leave
enter
movsl
xor
aam
ja
lret
ja
cltd
out
or
test
fildll
xor
mov
test
xor
js
pop
sub
mov
jae
mov
daa
jmp
cwtl
mov
lcall
cmpsb
mov
dec
loope
test
enter
xchg
inc
and
and
call
dec
mov
sbb
outsl
push
push
xchg
sbb
jecxz
jne
push
nop
add
and
out
subb
jecxz
popf
cmpsb
cld
mov
or
arpl
mov
mov
pusha
aad
or
iret
and
arpl
lret
or
mov
fcomps
sti
push
into
mov
jle
pop
push
stos
dec
xlat
icebp
lock
lock
push
mov
loop
mov
sti
jl
test
shl
sub
mov
add
jbe
aad
jle
pop
insb
insl
mov
xchg
lds
mov
sti
out
xor
aas
loop
xchg
push
adc
adc
arpl
je
jmp
loop
xor
inc
pop
inc
sti
andw
jbe
pop
cmp
xor
out
cmpsl
mov
pushf
pop
mov
cmc
sbb
pop
in
cmpsb
or
push
das
int3
xlat
ret
and
pop
das
iret
add
mov
mov
shll
dec
mov
inc
fldenv
sbb
jg
lret
pop
inc
push
xor
jbe
ja
inc
cmp
add
out
push
sbb
jle
int3
sub
cltd
jnp
sahf
push
pop
sub
popa
lea
dec
or
das
pushf
arpl
xchg
fcmove
adc
and
out
push
pop
lock
das
mov
add
dec
sbb
test
xchg
sbb
out
mov
test
cmp
or
js
xchg
inc
mov
xchg
test
lret
popf
or
adc
xchg
pop
mov
jae
inc
sub
or
adc
jge
push
leave
pop
insb
or
dec
push
movsl
sub
mov
call
test
mov
std
dec
icebp
mov
sub
push
test
mov
std
mov
inc
repz
jg
shll
rclb
call
lcall
mov
cmpsb
xchg
xor
or
xchg
cmp
and
lret
outsb
jecxz
adc
inc
stc
mov
jbe
cltd
je
mov
movsl
and
mov
sub
aad
xor
push
ja
pop
push
mov
orl
test
inc
icebp
push
adc
iret
cmp
es
or
dec
dec
sbb
dec
lret
leave
cs
pusha
xchg
inc
mov
or
mov
mov
mov
sbb
pop
in
sub
call
jb
inc
fstpl
lcall
jae
out
jle
cmp
sub
nop
movsb
jge
loop
or
dec
punpckhwd
loop
into
clc
sbb
mov
jns
fwait
ljmp
sbb
iret
fcompl
add
push
mov
sti
xchg
int
cmp
rcrb
inc
push
sub
sbb
jp
loopne
add
jmp
lods
je
imul
inc
jnp
mov
sbb
std
sub
dec
pusha
stos
xor
stc
leave
divb
daa
pop
push
mov
movsb
call
sbb
xchg
cltd
mov
mov
std
adc
rorl
addr16
or
adc
mov
add
pop
cmpsl
sbb
lea
rorl
lahf
adc
push
cmp
cli
divb
jmp
pop
xor
loope
sti
pop
xchg
sub
lea
je
out
push
sbb
or
arpl
jl
insl
jl
out
sahf
rol
adc
std
cmp
cltd
mov
xor
sbb
lret
sahf
neg
mov
call
cmp
aad
push
jnp
xor
pop
cwtl
loop
lret
out
pusha
push
add
clc
lcall
mov
mov
sub
lcall
pop
jg
and
jmp
fsubr
mov
cmp
notb
imul
add
add
sub
xchg
or
cwtl
jle
mov
jns
cmpsl
iret
fwait
sti
or
xchg
push
jecxz
inc
jle
imul
shl
jne
nop
cld
sub
aad
jp
ljmp
push
jae
cld
xlat
cmp
cs
cltd
sub
testl
push
dec
imul
inc
cmpsb
orl
push
imul
jo
scas
fisttpl
sub
pop
inc
xchg
dec
mov
xor
mov
mov
adc
pop
cmp
xchg
inc
aad
mov
imul
cmp
sahf
pop
stc
lcall
mov
push
int3
add
pop
push
fisttps
fldcw
jbe
out
outsl
ret
xor
daa
incl
pop
inc
stos
xchg
cmp
xchg
sub
xchg
add
add
dec
outsb
test
mov
stos
ret
mov
mov
sbb
lea
pop
test
cmp
mov
jecxz
xchg
mov
rolb
and
das
sbb
add
xchg
jno
sub
and
ret
adcl
xchg
movsb
inc
xchg
testb
mov
pop
and
lds
mov
sbb
inc
adc
movsb
mov
cmp
inc
mov
std
fcmovbe
push
jb
lods
dec
dec
data16
push
push
mov
and
nop
enter
adc
outsb
out
lds
cmpsl
daa
repnz
out
dec
negb
mov
xchg
xchg
cmp
addr16
das
mov
sahf
jbe
pop
scas
es
int3
or
ljmp
xchg
lock
call
fwait
pop
cmp
or
lret
adc
stos
xchg
mov
inc
mov
cmpsl
push
movsb
adc
mov
pop
test
jbe
insl
cmp
lea
dec
es
ret
lods
jmp
jno
lahf
nop
dec
sub
cltd
adc
jge
in
dec
stos
dec
or
sub
mov
xlat
divl
pop
or
shlb
sbb
xchg
jmp
clc
push
xlat
notl
fs
fsubrl
sbb
and
rcr
mov
mov
cwtl
loopne
cmp
adc
inc
inc
popa
mov
cmp
add
sub
and
sbb
sbb
insb
loop
test
shll
pusha
cmp
std
inc
pop
pushf
push
fstps
cmp
push
mov
fldenv
bound
insb
add
lss
cwtl
mov
sub
jl
pop
mov
jae
pop
mov
adc
cmpsb
rol
mov
sbb
add
xor
loop
flds
cs
fbld
sbb
sub
mov
std
adc
push
jne
push
jmp
push
in
jle
mov
pushf
mov
mov
ja
lcall
out
lret
xor
jmp
popf
repz
iret
scas
dec
outsl
mov
out
cmovl
inc
loope
shl
jecxz
ror
add
inc
push
pop
cmpsl
pop
cmp
xchg
ja
daa
fwait
mov
jae
lods
inc
jge
xchg
cmp
xchg
movsbl
jns
mov
mov
stos
scas
add
dec
fcoml
pop
push
mov
hlt
arpl
adc
push
daa
test
lea
lcall
insb
adc
push
add
and
scas
ljmp
pop
decl
imul
int
daa
decb
push
adc
jae
fildll
call
dec
scas
lret
jmp
ret
sub
add
jge
jmp
pop
pop
xchg
xchg
dec
fildll
pushf
or
mov
orb
xor
and
in
popa
and
inc
bswap
pop
stos
mov
and
ss
nop
mov
jnp
loopne
inc
aaa
pop
mov
js
and
scas
out
mov
filds
stos
fidivrs
push
sbb
cltd
sbb
out
pop
sbb
ret
out
in
push
adc
pop
sub
cs
and
scas
adc
xor
icebp
ss
xchg
mov
cmp
cmpsb
dec
push
add
xchg
cmp
daa
fwait
add
mov
and
push
and
mov
inc
add
cmp
push
pop
ret
push
in
add
adc
lret
push
insb
mov
push
sub
cmpsl
dec
aaa
mov
lods
pushf
sub
sbb
xchg
loopne
mov
pop
repz
insl
sub
xchg
pop
jge
adc
sbb
scas
pushf
fstl
testl
aaa
jl
push
adc
pop
iret
sub
clc
mov
xor
and
and
cmpsb
jl
push
pop
mov
push
mov
xchg
loope
or
stos
cmp
inc
jl
aaa
loopne
xchg
adc
cmpsb
gs
pop
and
std
int
cmp
in
das
mov
cmp
repz
in
and
fcmove
ss
lret
sub
js
orl
ror
popl
loopne
rcl
push
add
jmp
rolb
push
aam
xor
mov
cli
jg
dec
or
ja
lcall
mov
int
fs
hlt
in
test
aaa
in
gs
and
out
jmp
mov
mov
fs
dec
jae
and
add
push
aas
adc
imul
mov
faddl
in
lock
int
cmc
shll
push
sbb
ljmp
cld
call
hlt
dec
shlb
iret
inc
cs
fisubs
mov
mov
dec
loopne
xchg
shll
mov
mov
dec
lret
stc
jmp
rcrb
aas
cmp
lret
fsts
mov
cltd
fwait
xchg
inc
lods
inc
arpl
mov
push
mov
fdivl
lods
insl
add
inc
cld
cmpsb
jno
jne
push
mov
rolb
adc
pushf
enter
fsubrl
xorb
ficoml
pop
ds
clc
pop
sub
insl
lret
div
adc
test
add
pop
movsl
cmp
xchg
jbe
jmp
cwtl
in
inc
push
push
sub
lods
mov
dec
in
fcomi
insb
or
mov
xor
cwtl
inc
fs
push
adc
rolb
js
neg
pop
popa
mov
imul
or
mov
pusha
push
dec
into
test
jmp
inc
fildll
sbb
clc
es
loope
out
data16
sub
popa
icebp
enter
or
sahf
cmpsb
pop
insb
dec
fs
dec
arpl
dec
out
xor
mov
bound
fmuls
mov
xor
jno
sar
jo
and
jbe,pt
rorl
cmpsl
shrl
xor
out
or
push
mov
sub
push
inc
pop
sti
adc
insl
hlt
xor
push
divb
test
push
or
in
pop
std
pop
jne
pusha
in
add
inc
adc
xor
fldcw
mov
repnz
mov
std
fiaddl
fldcw
movsb
sahf
lods
mov
movsl
inc
lds
cmp
cmp
jb
enter
adc
popa
mov
sbb
rolb
pop
jb
jle
cmp
inc
push
add
faddl
inc
ja
xor
cmc
dec
mov
and
aaa
int3
push
and
in
pop
dec
mov
ret
aas
icebp
scas
pop
test
movsl
icebp
mov
out
cwtl
shrl
andl
sbb
stos
sub
xchg
cmp
lods
and
inc
mov
mov
jp
int3
lcall
sbbb
inc
dec
sti
adc
cmp
daa
sub
and
inc
test
push
imul
add
bound
sbb
mov
xor
lcall
les
lea
jp
jnp
mov
push
outsl
and
jg
clc
mov
jno
fxch
mov
push
pop
pop
adc
call
jns
xor
xchg
dec
jmp
shrb
pop
pop
lret
add
pop
je
and
popf
jg
in
pop
inc
add
fcoml
xor
push
pop
call
jp
or
inc
ret
xchg
mov
scas
jns
ficompl
call
jmp
in
mov
push
fdivs
xchg
and
cmc
inc
popf
pop
inc
rol
mov
out
adc
dec
movsl
sbb
aaa
xchg
jnp
lock
pop
ffree
sub
adc
movsb
popa
add
dec
xchg
ficompl
aam
dec
das
cmp
dec
xchg
and
imul
jbe
mov
out
push
push
out
movsl
in
jmp
fwait
adc
xchg
push
cmp
push
mov
clc
cmpsl
mov
inc
mov
push
adc
inc
jne
lods
xchg
jmp
inc
push
add
xchg
jno
inc
inc
fcmovnu
mov
cli
lds
rol
mov
in
sub
cmp
jle
lods
inc
mov
sub
loop
pop
icebp
jns
and
ret
jl
push
jp
jae
sbb
idiv
bound
cmp
pop
stos
inc
in
xchg
nop
push
adc
in
mov
in
cmpl
pop
or
mov
rorl
dec
jecxz
mov
das
mov
mov
mov
mov
xchg
jecxz
cmp
or
pusha
mov
aaa
dec
shlb
enter
out
mov
daa
push
pop
xchg
cmp
dec
mov
bound
jp
jle
bound
jb
ss
mov
fiaddl
jne
add
add
iret
add
xchg
out
rcrl
or
jne
push
cmpb
imul
ds
inc
push
mov
xchg
es
fnsave
pusha
nop
dec
bnd
dec
add
ret
push
jbe
jmp
xchg
mov
movsl
mov
inc
mov
inc
int3
out
ds
pop
rolb
mov
and
add
dec
mov
lcall
lcall
jnp
add
pop
cmp
jbe
mov
in
add
rcll
push
cmp
adc
pop
cmp
or
lods
rcrb
xchg
sbb
insl
sarl
sub
lock
mov
dec
popa
mov
dec
and
mov
mov
lods
push
or
sub
jbe
or
lret
decl
rcl
add
xor
loopne
xor
andl
xor
lods
inc
pop
jge
scas
push
imul
or
pop
or
push
cmp
dec
inc
sbb
subl
sub
mov
mov
fstpt
stos
cltd
repz
ja
aaa
stos
stos
cli
or
add
dec
dec
lcall
xchg
popa
fwait
mov
sub
shll
and
into
repz
cmp
sub
mov
arpl
sub
loopne
in
in
xchg
test
popa
fsubrl
movsb
and
fcoml
std
push
imul
ljmp
jbe
aam
add
movsb
cmp
test
hlt
push
push
in
jmp
xchg
and
ret
pusha
iret
shrl
std
hlt
add
sbb
jp
cld
sbb
and
cwtl
pop
aaa
inc
xchg
nop
popf
lods
loop
imul
rol
es
addr16
out
rol
stos
sbb
rolb
imul
leave
pop
mov
adcl
add
hlt
hlt
stc
xlat
inc
add
jnp,pn
clc
pop
xor
ja
lds
hlt
aas
xlat
push
cli
pop
mov
in
popl
sub
mov
jnp
cmp
mov
cli
and
test
loopne
pop
push
xchg
jle
add
popa
and
jl
xor
lcall
sbb
fdivrl
inc
mov
cld
add
ja
cmpsb
xchg
xchg
addr16
flds
ret
adc
sti
fs
imul
adc
pop
shrl
dec
jnp
hlt
mov
pop
hlt
cli
testl
mov
pop
push
scas
dec
cmp
push
sub
or
jno
and
mov
adc
loopne
mov
ret
xor
add
out
pop
pop
cmpsl
das
and
test
jne
cmp
hlt
pop
icebp
imul
movq
rcrb
movsl
fimull
int
xor
jbe
cmc
lret
insb
lret
jp
sbb
sbb
cmp
xlat
inc
add
mov
mov
cwtl
repnz
je
xor
pop
int
pushf
mov
sub
shlb
data16
mov
mov
add
imul
in
iret
clc
hlt
mov
push
jb
xchg
mov
push
xchg
inc
mov
xchg
push
cli
filds
sbb
or
mov
movb
movsb
sbb
jle
dec
jne
or
aaa
fwait
jmp
jmp
push
xchg
cld
pop
cmp
sub
in
jp
cmp
dec
and
cli
mov
mov
arpl
int
jo
add
aas
jmp
testb
data16
inc
lahf
iret
pop
mov
or
sub
mov
fidivl
shrb
sbb
ret
pop
scas
test
lcall
pop
je
lock
push
in
pop
or
adc
aas
jle
and
xchg
pop
arpl
mov
pop
cmp
sti
jp
mov
je
xchg
scas
jbe
repz
outsl
sub
inc
xor
inc
mov
jno
inc
out
fwait
cmp
push
dec
lock
cwtl
fisubrs
push
testb
cmp
or
pushf
call
dec
cmovb
sbb
and
pop
xorl
aad
mov
push
push
out
rorl
daa
das
test
cmp
sbb
lock
dec
xchg
xlat
in
loope
in
call
test
mov
pop
les
repz
mov
test
lret
out
pusha
mov
enter
jp
sub
mov
arpl
jb
or
xlat
pushf
adc
jle
push
mov
push
push
dec
mov
and
mov
imul
fldt
loopne
aaa
lock
in
fcomi
pop
dec
jno
and
in
dec
sub
sbb
mov
lahf
inc
enter
push
flds
cmc
and
and
testl
cwtl
pop
mov
jo
jnp
mov
lock
push
rcrl
jnp
int3
jno
mov
je
in
shll
mov
lods
fldenv
divl
cmpl
out
iret
mov
sahf
cwtl
pusha
sub
mov
data16
test
xor
mov
jmp
enter
mov
in
enter
add
ror
lahf
sub
in
push
data16
push
xor
jle
lea
cli
fsubr
jno
xchg
xor
ljmp
mov
cmp
int
dec
or
sahf
inc
pop
xchg
test
sbb
testl
jg
mov
xlat
aad
pusha
sbb
lahf
adc
jp
icebp
push
leave
fdivrl
cmp
mov
jmp
ret
pop
jno
cs
pop
xchg
fisttpl
test
pop
enter
addl
stos
mov
cmpsl
jge
call
daa
jb
scas
dec
jmp
sub
mov
and
flds
mov
movsl
adc
std
push
cld
mov
inc
shrl
bound
push
sub
clc
sub
xchg
out
iret
repnz
pop
pushf
mov
push
scas
flds
pop
rclb
fdivrl
rcl
cltd
jl
daa
mov
inc
fisubrl
es
fwait
cmpsl
incl
jl
test
enter
lcall
iret
test
push
int3
fsubrp
lods
addr16
es
in
das
dec
adc
add
loopne
fwait
xlat
mov
data16
mov
cs
cmc
inc
negl
test
sahf
test
xchg
and
scas
test
inc
ja
ljmp
iret
mov
inc
mov
inc
sbb
add
test
cs
dec
dec
inc
loop
movsb
iret
cmp
je
mov
cmp
fdivrl
pusha
adc
mov
push
lds
rclb
fs
daa
mov
fstpt
fdiv
shrl
mov
jnp
xchg
bound
add
fwait
or
mov
fimuls
es
pop
leave
push
fadd
mov
sub
cmp
sub
loop
or
sbb
cmc
ret
adc
fmull
adc
dec
callw
and
stc
stc
cmpsb
bound
sub
xchg
rol
xor
mov
adc
je
hlt
add
aaa
shl
cmp
push
inc
dec
jp
cmp
into
js
jb
aam
test
push
push
out
adc
das
xchg
pop
loope
mov
data16
xor
sub
lods
adc
mov
ret
sahf
xor
enter
push
xchg
into
shrb
mov
nop
cli
imul
xchg
pop
repnz
addr16
out
popf
jg
dec
push
movsb
xor
movsl
adc
mov
jge
jbe
dec
rclb
pop
std
pop
ficomps
push
repz
std
sbb
jns
jle
ss
in
popf
fstps
daa
cmp
mov
mov
xchg
call
insb
push
push
fdivl
mov
xchg
mov
push
icebp
repnz
dec
fcomp
fidivrl
mov
in
cmc
jo
cmp
sub
push
out
jmp
jno
addr16
jmp
out
push
push
flds
int3
mov
jp
leave
inc
lahf
sub
mov
mov
sub
push
push
push
dec
sti
jae
out
popf
shll
push
xor
rcl
es
adc
pop
imul
aaa
or
inc
int
dec
jmp
std
xchg
sbb
or
dec
jecxz
jp
push
xor
jns
es
movsl
dec
subl
push
mov
and
xor
pop
lods
jb
call
inc
incl
inc
cltd
in
nop
hlt
cmpl
lods
in
jge
adc
popf
loopne
or
sbb
js
fdivr
insl
mov
fidivrs
scas
push
cmpsb
shll
aam
cmp
bound
mov
xchg
test
cmpsl
ffree
notb
jbe
stos
sub
xlat
sarb
jle
jl
outsb
and
push
popa
pop
mov
arpl
lds
cmpl
xor
cmp
int3
rcll
pop
hlt
add
pushf
mov
fs
mov
ss
fwait
inc
adc
inc
inc
dec
std
push
push
fdivrl
lods
stos
push
sub
fisttps
popa
stc
pop
es
xor
dec
nopl
push
arpl
outsl
xchg
insl
mov
mov
jo
jbe
imul
out
cwtl
and
adc
fdivrl
dec
out
dec
sarl
rol
cmp
add
mov
push
mov
cld
or
aad
js
mov
fnstsw
dec
inc
sahf
imul
clc
xchg
cli
jnp
fiadds
xor
pop
sub
mov
mov
sarl
cmpsl
mov
add
lds
mov
imul
adc
loopne
jbe
cmpsl
loope
das
xor
popa
xchg
or
stc
leave
out
inc
in
jns
sub
mov
je
cwtl
les
xchg
jns
js
xor
setns
lcall
insb
cmpsl
adc
adc
stos
cmpl
adc
mov
mov
lods
jae
cmp
repz
pushf
and
into
shlb
inc
mov
loop
xchg
xchg
push
push
inc
fisttpl
pop
shr
and
sub
mov
inc
cmpsl
push
push
pop
aas
loopne
or
movsb
pop
xchg
jl
je
pop
cmp
insb
stos
or
js
sbb
popf
es
in
imul
jmp
lretw
fnstenv
sub
xchg
aam
adc
pop
xor
jne
jle
shll
xchg
mov
sahf
add
test
cmc
push
mov
cmp
cmp
call
sub
xor
test
in
dec
insl
mov
loope
pop
std
aas
lds
fdivrl
int
push
xchg
fwait
fcmove
sti
movl
insl
cltd
jge
xor
dec
mov
ss
outsb
pop
jle
in
adc
loope
lret
push
pop
dec
xor
repz
cmovs
mov
lods
pop
cltd
arpl
orl
js
mov
imul
mov
sbb
cmp
stc
dec
mov
mov
add
dec
push
not
and
sbb
sub
push
mov
pop
dec
or
inc
or
push
nop
mov
sub
icebp
mov
fs
mov
mov
mov
xor
xchg
jo
mov
xor
ret
inc
repnz
cmpsb
mov
mov
leave
jecxz
sbb
lcall
fsubrl
idivb
jp
in
addl
sahf
es
imul
pop
adc
sbb
mov
iret
jns
aas
stos
and
test
call
jmp
loopne
sbb
add
jmp
and
mov
lcall
push
movzbl
jecxz
pop
leave
and
stc
dec
dec
jg
inc
pop
push
test
cmp
mov
sbb
jne
stos
mov
inc
rcll
movsl
addr16
imul
push
mov
push
push
test
sub
std
push
push
mov
pop
popl
sub
push
jl
pop
lcall
adc
sbb
shll
xchg
sti
dec
and
adc
jg
add
xchg
clc
xor
out
fidivrl
sub
sbb
jp
in
daa
jbe
sbb
xchg
movsb
sub
test
cmp
shrl
int3
div
test
push
fs
test
divb
xchg
dec
sbb
aaa
pop
sbb
out
out
cmp
fs
or
fidivrs
imul
jo
mov
cmp
test
imul
cmp
rorb
cwtl
loop
dec
sbb
test
bnd
sti
or
loope
pop
jmp
cli
aad
rclb
pop
ja
cmpsl
loopne
mov
jo
and
sahf
in
inc
adc
xchg
xchg
mov
ja
lcall
negb
ret
pop
sbb
cmp
push
fildl
mov
xchg
mov
cmp
mov
or
jo
loope
jg
mov
mov
repz
jmp
push
sti
and
fists
xchg
ret
pop
xchg
cmp
sbb
cmp
xchg
lock
dec
lcall
cld
push
jmp
aas
sti
jl
jg
mov
mov
mov
sub
mov
xchg
xor
dec
jns
dec
mov
in
call
fsubs
push
adc
xchg
fnsave
inc
in
add
sbb
arpl
inc
out
mov
repz
fsubs
sub
movsl
or
xor
mov
int3
cmpsl
add
es
aas
push
ret
pop
outsl
push
lret
ret
sahf
ret
icebp
jb
jp
subl
push
sbb
sbb
je
jmp
inc
dec
pop
ljmp
stos
push
add
push
mov
cmp
adc
push
pop
into
scas
stos
sub
pop
test
pop
lret
adc
add
in
loop
int
in
xchg
sbb
fstpt
push
mov
mov
jg
mov
mov
mov
pop
sub
dec
lret
sbb
inc
test
or
data16
test
pop
shlb
test
sub
jne
lret
cld
aaa
mov
add
movsl
je
lea
add
bound
jns
add
in
push
pop
pop
cli
ljmp
cmp
jns
dec
pop
xchg
add
xor
xchg
sahf
mov
mov
push
jae
push
iret
scas
arpl
movsl
xchg
sub
dec
sub
sub
jb
shlb
adc
or
or
or
cmp
sbb
mov
jno
push
js
out
roll
gs
cmp
add
xor
dec
scas
inc
sbb
dec
xchg
and
xor
rol
mov
pusha
fcompl
push
outsb
lds
inc
pop
cwtl
pop
add
ret
jo
ficoml
mov
leave
jbe
cltd
loop
mov
int3
data16
stos
push
or
pop
xlat
insb
jle
xor
sbb
imulb
iret
data16
addr16
shrb
cld
fldcw
insl
sbb
nop
in
and
and
push
sub
addr16
js
call
imul
ja
dec
aaa
push
sbb
cmp
pause
lcall
mov
das
loope
fcmovu
cmp
sbb
icebp
jmp
sbb
iret
cld
in
mov
ficomps
inc
sbb
ret
test
push
mov
shr
xor
icebp
cmp
into
inc
dec
lea
cmp
jo
and
jge
push
add
shlb
mov
fs
add
lods
js
push
push
cmp
pusha
sub
jnp
xchg
insb
or
lods
or
push
pop
mov
icebp
ficomps
sbb
sti
jno
cld
aaa
add
pop
lock
test
adc
xchg
dec
cmp
repz
mov
cmp
xchg
dec
xchg
les
scas
dec
or
inc
negb
loope
sbb
mov
int3
inc
jne
lea
jl
aad
push
sbb
jmp
test
lcall
aas
test
sub
ljmp
sbb
push
dec
ljmp
or
add
mov
adc
cwtl
ret
jne
aad
mov
dec
hlt
cli
sbb
sub
fidivs
add
dec
inc
movsl
lock
jg
mov
shlb
and
xchg
sbb
hlt
mov
cmp
insb
xchg
dec
adc
out
movups
jmp
in
pop
cwtl
or
clc
in
sub
in
imul
xchg
adc
pop
ret
xchg
mov
fs
ret
add
repz
inc
dec
xchg
xchg
adc
xchg
pop
mov
pop
nop
xor
insb
jg
sbb
xchg
mov
sbb
mov
fs
pop
push
mov
mov
inc
in
popa
leave
pop
sbbl
js
and
out
mov
aad
mov
out
xor
jle
lods
xchg
mov
cmp
adc
sbb
xlat
push
aas
cmpsb
dec
and
aad
mov
add
lods
les
pop
sahf
lds
stos
add
jg
imul
in
mov
mov
insl
lock
movsb
dec
lds
add
push
inc
pop
cmpsb
arpl
mov
dec
or
shrl
pushf
or
lods
sbb
adc
arpl
loop
sbb
jmp
out
mov
push
xchg
sbb
subb
or
imul
aam
dec
cld
pop
dec
lahf
int
loope
idivl
test
scas
fs
sbb
pop
in
inc
fisubl
repnz
xchg
ret
lds
fwait
jecxz
sbb
daa
inc
adc
lahf
lcall
fldt
pop
insl
lret
ja
lods
jbe
xchg
js
roll
sub
into
dec
sub
pushf
ss
orb
sub
or
shrb
sti
cmp
mov
push
jo
push
jp
neg
sbb
sub
jmp
leave
push
pop
cmp
push
fsubrp
out
dec
push
xacquire
mov
mov
out
mov
inc
idiv
cmp
or
mov
fistpl
movl
mov
mov
or
fisubs
xor
inc
sahf
pop
jecxz
dec
push
and
nop
mov
adc
xchg
or
dec
cmp
add
mov
sbb
in
in
ja
adc
sahf
sbb
pop
pop
dec
jl
addl
cmp
frstor
or
decl
rcrl
into
mov
cmp
dec
mov
pop
cs
popa
pop
fidivs
sub
push
dec
es
mov
push
sbb
fcomps
adc
fdivs
push
mov
aaa
dec
adc
dec
jbe
outsb
inc
mov
adc
ljmp
mov
push
dec
pop
cwtl
xor
popf
xchg
pop
test
fisttpl
leave
imull
mov
xor
fisttpll
loope
std
and
shrb
push
push
cmp
repz
xlat
mov
loope
data16
and
mov
dec
imul
cmc
mov
sub
sti
daa
xchg
cmpsb
push
popa
fcom
fnstenv
mov
imul
cmp
adc
cmpb
dec
movl
lock
out
bound
xchg
loopne
push
jl
sbb
out
cwtl
xchg
rorl
dec
or
sub
ljmp
push
pcmpgtb
xor
xchg
addr16
call
inc
sbb
xchg
cmp
hlt
pusha
cli
sbb
dec
lret
mov
lret
cli
mov
xor
cmp
cltd
scas
jae
push
inc
pusha
dec
adc
and
or
inc
add
test
leave
mov
jmp
ljmp
lahf
or
or
mov
adc
push
fwait
sbb
pusha
loop
hlt
xchg
sbb
cwtl
mov
cmpsl
push
mov
movsl
scas
mov
push
pop
iret
ja
and
loope
push
dec
les
ret
lods
inc
pop
cmc
aas
inc
or
test
or
data16
dec
sbbb
cvtpi2ps
jmp
add
cmp
cli
idivb
inc
and
das
push
mov
out
xchg
lret
fisubs
shrl
out
test
aas
lea
hlt
jns
jp
mov
fnstcw
movsl
push
stos
test
push
sub
int3
cmp
sbb
repnz
lret
out
in
pop
mov
scas
push
or
mov
mov
mov
cmp
imul
xor
imul
fsubrs
adc
pop
adc
sub
mov
mov
imul
into
iret
xchg
cmp
or
xorl
pop
mov
jp
popa
stos
cmp
int
mov
call
sub
jle
call
cmp
loope
clc
in
adc
mov
cmpsb
xchg
xchg
mov
lods
jno
pop
int3
imul
mov
adc
pop
insb
cltd
pop
mov
pop
das
sub
mov
jbe
out
fldt
or
lcall
pop
jmp
mov
and
jne
ret
out
sbb
xchg
jmp
stc
stos
cmc
scas
mov
or
mov
out
pop
add
xchg
test
aad
out
mov
pop
add
jo
test
test
lcall
add
push
adc
jae
push
mov
cld
cmp
jae
inc
mov
cli
jmp
adc
xor
test
add
shll
popf
push
push
dec
pop
fsubs
out
push
and
cli
xchg
stc
mov
fwait
mov
sbb
add
and
fistpl
xor
scas
imul
adcl
inc
out
push
mov
mov
or
pushl
mov
dec
inc
fidivrs
data16
fwait
push
repnz
dec
inc
mov
cmp
imul
and
movsl
pop
pop
add
sar
ret
adc
inc
sub
gs
sbb
mov
lds
xor
mov
and
sbb
js
outsl
std
aaa
fsubs
movsb
sahf
scas
dec
cmpsb
cwtl
mov
push
in
mov
sarl
mov
mov
imul
loope
dec
pushf
or
push
adc
in
scas
pop
mov
push
push
inc
dec
mov
xchg
mov
push
dec
les
sbb
ret
repz
mov
fs
and
mov
jnp
mov
cmp
arpl
arpl
mov
push
xor
xor
inc
cmp
or
mov
jns
imul
test
leave
xchg
adc
scas
out
jb
test
popa
loopne
arpl
push
jg
or
ja
icebp
add
decb
push
arpl
jb
xor
enter
and
add
push
sbb
mov
pop
mov
insb
push
test
mov
push
in
mov
lret
jmp
sub
ja
in
sbb
inc
and
mov
xchg
inc
inc
cmp
or
xchg
jp
and
sarb
fcomi
bound
inc
push
cmp
push
cld
xor
cmp
sub
push
pushf
pop
add
lahf
inc
aad
push
cmp
xchg
mov
cltd
outsb
mov
aaa
cmp
popf
das
sbb
jb
gs
fsubrs
test
jae
add
cwtl
mov
sti
add
and
shll
mov
popa
repz
mov
fwait
ret
xchg
sahf
dec
ret
sbb
mov
testl
iret
jae
mov
dec
push
xchg
push
gs
sti
mov
fucom
adc
int3
cmp
push
mov
dec
jp
js
push
push
incl
inc
dec
dec
inc
mov
xor
pop
jecxz
js
lock
mov
pop
push
in
rcl
pop
ret
addr16
inc
lea
fsub
or
xchg
andl
cmp
movsl
pop
std
cwtl
sahf
rorb
mov
cmp
and
fisubl
mov
lock
dec
enter
icebp
pop
shrb
mov
lcall
mov
movsl
lret
rolb
outsl
fnstcw
pop
and
pop
jp
cmp
mov
lods
out
jbe
out
ficoml
sarl
push
out
adc
addr16
orl
adc
mov
jne
xchg
mov
outsb
inc
push
ss
xor
sbb
les
jmp
repz
dec
cli
mov
mov
inc
mov
adc
sbb
lea
lret
mov
mov
in
jecxz
movsl
sub
xor
ss
clc
lock
mov
xor
jne
lods
jmp
insb
into
sub
add
jecxz
cmpsl
pop
dec
dec
cld
mov
idivb
add
fs
jl
fsubl
or
and
push
dec
cmp
clc
xchg
push
mov
fnstsw
jp
jp
xchg
aaa
push
and
stos
and
cmp
xchg
push
inc
push
sbb
bound
add
jmp
mov
lahf
in
mov
and
pop
movsl
mov
insl
mov
jmp
xor
jmp
mov
iret
stos
insb
push
notb
add
andl
adc
roll
sub
dec
enter
aam
sbb
loope,pt
mov
outsl
test
mov
mov
repz
sbb
or
push
pop
ret
shrl
cmp
mov
leave
push
pop
les
sbb
outsl
pop
out
repz
test
push
mov
and
sub
push
lock
xchg
mov
xor
xchg
stc
add
test
rcll
add
dec
and
loopne
roll
dec
mov
std
jecxz
and
adc
push
data16
insb
sbb
std
pop
movsb
rcl
aaa
xchg
pusha
jb
rorb
rcrb
stos
xlat
push
mov
and
out
sbb
and
adc
xor
arpl
icebp
sub
cmpsb
arpl
push
repnz
decb
jle
xor
mov
inc
cmp
sub
in
in
ja
sti
mov
cmp
js
mov
movsb
scas
lea
inc
mov
sbb
sub
or
sub
fistpl
cmp
enter
mov
inc
and
sti
push
add
pop
dec
clc
jp
pushf
push
jbe
fucomi
js
xchg
aam
mov
cmpsl
push
cltd
aam
and
mov
push
mov
jbe
dec
push
je
mov
add
stc
movsb
jge
mov
js
lret
cmp
ret
ficomps
push
mov
ljmp
call
push
rcll
shll
jo
xchg
sarb
insl
pushf
adcl
outsb
lock
lret
mov
inc
mov
insb
cmpsb
ljmp
shl
scas
or
hlt
ja
mov
in
dec
shlb
fdivrs
inc
aaa
lret
mov
mov
adc
bnd
xchg
add
nop
subb
shll
imul
into
gs
cmpsl
out
jp
int
push
add
push
insl
and
adc
sarl
sbb
rcrb
lock
filds
dec
arpl
push
out
adc
and
lret
sahf
movsl
inc
mov
js
sub
test
insl
cmpsb
das
and
lret
pop
in
clc
andl
xchg
loop
add
mov
cmp
xchg
jmp
inc
leave
jo
push
lds
dec
push
daa
mov
int
nop
mov
sub
fnsave
jle
jle
pusha
add
sbb
inc
fdivrs
sbb
arpl
bound
in
add
push
lahf
cmp
insb
enter
movb
sub
dec
je
dec
mov
arpl
mov
xor
addr16
test
mov
inc
sbb
sahf
xor
call
mov
adc
mov
push
insb
sbb
add
inc
shll
dec
nop
or
push
add
daa
adc
xlat
push
sbb
sti
sbb
cmc
jge
inc
dec
jbe
mov
jae
xchg
xchg
lea
popf
es
fs
mov
not
addr16
inc
pop
add
sti
mov
ja
test
xor
fists
ljmp
lret
test
xchg
jl
mov
lahf
nop
adc
xor
sub
clc
or
mov
or
in
mov
push
repnz
ficomps
lods
or
ljmp
sti
jo
aam
pop
mov
test
xchg
cwtl
mov
inc
and
dec
ficoml
or
mov
lcall
lcall
dec
cmpsl
pop
ficompl
jmp
push
scas
mov
in
sahf
loop
mov
dec
jg
out
aam
mov
sbb
mov
push
mov
dec
in
pop
jne
sbb
xchg
movsl
stos
cmp
mov
sub
loop
scas
stc
roll
movsl
sarl
lret
pop
dec
in
popa
sbb
repz
push
pop
arpl
mov
jg
pop
push
mov
adc
ljmp
jae
dec
stos
jl
mov
in
sarb
mov
dec
iret
push
jne
inc
rcrb
stc
out
and
cmp
dec
add
int
mov
xchg
int
sub
or
inc
xchg
movsl
add
out
and
idivb
push
cld
sub
lock
add
fisubrl
sub
sbb
sbb
cwtl
or
jp
xchg
jae
rcl
in
nop
lret
mov
fstpl
dec
inc
jae
shll
cmp
ficomps
dec
pop
dec
cmp
jnp
adc
mov
pop
jae
push
ss
add
in
dec
mov
sbbl
daa
iret
mov
add
push
mov
xchg
jb
iret
movsl
and
cmpsw
pop
sbbl
sbb
movsl
mov
xchg
and
in
movsb
div
lahf
jmp
sarb
cmpsb
push
sahf
cmp
and
fists
push
idivb
js
imulb
mov
pusha
cli
std
pop
cmp
jl
js
pop
mov
in
dec
mov
scas
or
jns
inc
sbb
out
sbb
cmp
inc
cmp
jns
out
test
adc
ficoml
sbb
sub
push
stos
xor
repnz
push
mov
mov
faddl
jmp
rdmsr
out
fwait
xor
nop
out
and
adc
insl
and
xchg
cmp
lret
jl
sub
popa
ds
stc
push
aam
cmp
leave
fdivrl
push
test
push
int3
hlt
into
mov
add
cmp
lods
inc
je
add
clc
sub
fidivrs
add
jnp
mov
add
inc
or
cmpb
lcall
cmp
das
push
rcrl
sahf
lods
and
clc
or
cmp
mov
mov
inc
sbb
bound
jge
mull
insl
xor
mov
lock
pushf
in
sahf
arpl
pop
adc
fisubrs
icebp
sub
scas
cmp
in
pop
addr16
sarl
jge
inc
call
out
add
add
xchg
lret
jnp
daa
sub
lret
push
stos
jbe
push
aad
test
pop
push
out
and
push
xor
add
sub
sti
sub
pop
andb
sarl
sbb
or
push
jae
mov
mov
mov
addb
xchg
inc
push
sub
nop
imul
xor
mov
xor
ret
push
cmpsb
int
iret
ja
ror
sbb
rcrb
in
enter
lea
xor
mov
shrl
ja
xor
sub
xchg
in
ss
pop
xor
int
iret
and
mov
push
dec
sbb
xor
xor
mov
bound
add
inc
lock
xor
mov
inc
roll
pop
aaa
sub
aaa
ror
adcl
stos
cld
test
mov
jne
and
jo
call
bound
adc
fidivrs
cmpsb
xor
ret
int
jb
pop
cmp
add
jle
jae
mov
pop
jbe
lahf
ror
pusha
adc
xchg
push
pop
dec
jns
xor
ror
sub
popa
xchg
scas
cmp
add
rcrb
lock
sbb
loope
ljmp
mov
into
dec
sub
sbb
out
test
dec
and
cmpsl
sahf
mov
lret
out
pop
cmp
mov
sub
inc
pusha
repnz
out
jmp
mov
add
imul
sbb
dec
push
imul
cmc
repnz
jbe
loope
adc
std
add
ret
mull
adc
or
cmp
add
pop
mov
out
repz
outsb
fadds
jb
sbb
push
jecxz
cld
sbb
or
mov
push
jnp
xchg
stos
and
and
dec
lea
jo
pop
sbb
sbb
loop
call
push
push
mov
adc
push
fisttps
lds
jl
aas
mov
lods
adc
xchg
add
imul
push
aad
test
dec
cmp
jo
jae
jne
sub
mov
and
inc
flds
inc
push
xchg
jo
in
push
add
mov
in
cmp
push
adc
out
fsubrs
lea
out
rcrl
addr16
jnp
mov
dec
stc
test
adc
test
or
push
das
add
mov
call
stos
xchg
ss
jbe
enter
fadd
add
bound
test
mov
inc
dec
loop
jo
mov
xor
pop
cltd
test
cmp
adc
jae
inc
insb
gs
lock
xchg
inc
push
cmp
add
push
mov
add
sub
cmp
sahf
ror
mov
pop
cmp
cmpsb
jl
bound
inc
add
add
push
gs
mov
lret
sbb
push
fidivrs
push
mov
cmp
fwait
and
mov
jne
xchg
data16
je
push
add
jmp
iret
add
sahf
outsb
sbb
dec
lcall
xor
mov
das
xchg
cmp
ror
icebp
int
cmc
rcr
push
cmp
bound
lock
mov
push
mov
lcall
and
mov
adc
jl
fstpl
jbe
jns
jb
mov
daa
pop
cmp
cmpsb
aam
iret
pop
add
push
cltd
arpl
xchg
and
sub
shrb
sbb
jb
jp
in
inc
int3
in
loope
mov
mov
test
push
out
pusha
jbe
add
mov
pop
mov
stc
ret
xchg
cli
jg
mov
idiv
inc
mov
fisttps
fwait
aad
dec
sub
test
ficoms
orl
pop
xchg
xor
push
test
out
lods
fs
fcmove
jnp
fiadds
adc
and
loopne
mov
mov
dec
adc
ljmp
jmp
cmovp
les
jne
jg
dec
adc
sub
bound
ret
cs
cmc
push
je
rcrl
shr
pop
or
das
into
mov
or
push
ds
fistl
inc
pop
sub
repz
sbb
push
lcall
int3
negl
add
loopne
mov
leave
xor
sub
dec
push
xor
xor
dec
xchg
mov
dec
pop
mov
cmp
jmp
mov
lcall
nop
lock
or
jp
jecxz
push
sbb
add
out
pop
jecxz
add
mov
andb
sarb
cmp
pop
or
mov
icebp
pop
jl
sub
mov
dec
lock
call
dec
add
adc
data16
aaa
ret
adc
push
dec
je
cld
shrb
loopne
fisubl
out
push
xor
dec
or
mov
iret
adc
jb
call
fwait
cwtl
ret
cli
xchg
push
pushf
hlt
aad
stos
aam
test
fists
inc
lahf
pop
pushl
repnz
mov
loope
aad
and
push
mov
xchg
mov
inc
roll
into
mov
push
aas
jne
jge
lods
sbb
fdivrs
mov
sbb
flds
xchg
in
inc
pop
adc
jbe
sbb
repz
hlt
push
or
push
add
sarl
pop
xchg
imul
fdivl
popf
idivl
mov
repnz
or
or
sub
mov
jne
outsl
xor
push
pop
xchg
addb
jle
and
dec
shrb
xchg
cmpsl
rcrb
loope
cmp
pop
adc
es
mov
rcrb
pop
mov
jo
xchg
mov
fdivl
sbb
and
stos
cmc
adc
ds
pop
std
repz
enter
cmp
xchg
lret
push
xor
mov
or
insl
add
jg
dec
inc
lahf
add
jmp
push
pop
jne
push
imul
pop
push
jbe
fdiv
lods
sahf
and
pusha
or
adc
mov
out
sub
loopne
jmp
fwait
arpl
xchg
into
cmp
addr16
dec
adc
mov
dec
stos
xor
out
cmc
js
jg
loope
add
in
cmpsl
int
push
notl
sub
mov
mov
push
jg
mov
push
ljmp
inc
mov
push
mov
inc
pop
aad
imul
insb
movsl
ja
pop
lahf
or
sub
cltd
jmp
je
fcomip
xchg
les
leave
inc
inc
or
ljmp
sbb
test
dec
mov
dec
adc
cld
imul
mov
in
xlat
xchg
adc
mov
xor
mov
popl
xchg
in
negl
add
or
push
mov
xchg
sub
mov
test
mov
add
mov
jmp
xor
stc
lret
mov
xchg
pop
jo
or
inc
data16
or
cmp
fsubrs
in
lods
or
sub
xchg
mov
cmp
add
xchg
sahf
push
rdtsc
leave
xor
adc
fdivrl
add
fnsave
cmp
mov
shrb
push
xor
mov
sub
in
ficoml
addb
xchg
mov
cmc
jae
daa
adc
dec
mov
sub
ds
lcall
sub
push
addb
jmp
mov
xchg
nop
fists
rol
mov
mov
popf
mov
xor
scas
add
sub
sub
cmpsl
push
push
add
lcall
lea
sbb
pop
mov
sub
and
pop
insl
das
adc
nop
mov
mov
mov
and
shr
bound
in
add
mov
sar
mov
into
sti
aad
adc
das
fsubrp
fcmovnb
dec
and
adc
inc
ret
and
sarl
mov
and
push
push
popf
adc
jae
pop
pop
sbb
rcrl
xchg
ss
sub
test
cwtl
jnp
fldcw
dec
inc
mov
xor
nop
cbtw
mov
sbb
test
xchg
mov
sti
push
mov
push
add
rcrb
push
cwtl
cmp
push
aam
sub
inc
loopne
fmull
filds
push
aas
add
dec
xor
fldenv
sbb
cld
adc
mov
fistps
stc
mov
loop
dec
loopne
loope
or
jmp
and
icebp
push
xchg
icebp
aad
jo
push
push
add
std
or
mov
cmp
int3
ret
je
out
or
xor
mov
repz
in
push
fnsave
pop
movsb
arpl
adc
xor
push
je
ja
jae
jl
sbb
js
les
movsl
adc
int3
xor
adc
push
inc
rorb
sbbl
jae
inc
ja
lods
pop
and
xlat
out
push
jb
push
mov
out
sub
cmp
test
pushf
jb
rclb
loopne
push
iret
or
into
push
fmull
cmp
mov
pop
push
adcl
xchg
add
aam
clc
push
aad
orl
push
inc
fnsave
insl
jo
xlat
cmpsb
es
xchg
test
or
nop
sbb
vunpckhps
push
cmpsl
pop
mov
lods
cmp
cltd
mov
mov
aad
fdivl
sahf
icebp
incl
mov
mov
scas
jge
push
cltd
push
mov
inc
popf
mov
mov
push
fdivrp
mov
inc
sub
cmp
push
jb
xchg
cmp
cwtl
cmp
push
jnp
aas
dec
mov
push
insb
xor
test
movsb
xchg
movsb
ffree
push
mov
fdivrl
fisubrl
dec
mov
dec
xchg
and
mov
and
filds
nop
pop
clc
pop
and
jle
jae
mov
inc
mov
enter
add
lret
mov
cltd
les
mov
jno
xchg
adc
cmp
mov
adc
ret
std
movsb
lock
or
int3
fstpt
ss
dec
jle
sub
fucomi
sbb
cmp
or
clc
test
xor
jb
sub
push
inc
push
je
shl
and
pop
mov
dec
sar
popa
mov
cld
in
jle
dec
sbb
enter
dec
aas
and
movsl
test
in
mov
add
daa
dec
fstpl
xor
adc
repnz
das
fnstsw
mov
jg
scas
inc
adc
dec
sarl
lahf
sbb
fsubp
fs
add
and
mov
scas
shl
pop
fidivrl
adc
ja
sub
idivl
ja
inc
xor
scas
mov
add
jnp
pusha
insl
add
cmp
push
xchg
scas
mov
test
and
out
jnp
addr16
mov
pop
add
popf
inc
cltd
sbb
hlt
decl
push
inc
int
cmp
and
sbb
clc
fldcw
add
icebp
les
jp
daa
adc
outsl
sbb
pop
rcll
in
ja
pop
sub
dec
cmp
inc
xchg
xorl
inc
lods
add
out
pop
mov
dec
cmc
pop
pusha
dec
enter
sbb
imul
lahf
pop
lret
inc
out
dec
test
pop
push
xor
cmp
imul
das
cltd
push
dec
scas
push
pop
scas
lods
js
sbb
das
popl
sbb
adc
and
mov
jge
ja
nop
sbb
sti
push
scas
jno
mov
addr16
xchg
mov
not
std
xor
out
repnz
lods
movhps
mov
ljmp
lods
mov
sbb
sbb
push
aam
jecxz
dec
cmp
cmp
adc
cld
mov
mov
add
add
andb
lret
dec
xchg
repnz
mov
xor
cli
cld
mov
decb
cmp
mov
xlat
push
sahf
and
roll
inc
inc
jmp
outsl
int3
adc
call
enter
add
lret
mov
xor
cmpsb
mov
and
loopne
inc
cmpsb
dec
add
xchg
in
mov
ja
pop
out
sbb
stc
xor
lret
cmp
or
test
pop
jnp
je
outsb
inc
imull
xor
pop
aad
fldl
sbbl
cld
andl
pop
xor
push
xchg
push
cmp
sub
daa
and
mov
rcrb
cmpb
cmp
push
xor
dec
inc
inc
ss
and
adc
or
pop
bound
fdivp
stc
add
mov
js
and
push
push
psrad
cmc
je
jae
scas
rcrl
loope
ffree
insl
push
hlt
mov
fldl
inc
adc
mov
pop
shl
rclb
mov
lods
cmp
test
mov
aaa
loope
xlat
lret
jns
stos
jp
inc
outsl
xor
jb
pop
pusha
pop
mov
ret
push
insb
loopne
je
lock
add
lcall
mov
lds
iret
push
mul
mov
imul
insb
ds
ret
in
push
dec
lock
mov
or
arpl
and
jge
sbb
xor
lock
or
add
add
jg
cmp
out
nop
jnp
mov
xchg
jbe
ds
or
in
cwtl
jle
and
nop
lds
sbb
adc
gs
mov
jae
addr16
popa
mov
cs
call
mov
pop
dec
loop
push
stos
roll
cmc
movsb
jnp
stc
stos
xchg
loopne
frstor
nop
imull
sti
mov
jne
xorl
imul
sbb
aam
inc
jne
imul
ficoms
cmp
jb
or
jp
sbb
add
jbe
leave
scas
push
dec
jmp
dec
bound
lods
xorl
jnp
out
ljmp
xchg
stos
leave
fs
mov
stos
dec
mov
or
call
add
cmp
test
add
in
iret
sahf
mov
ljmp
fdivrl
jae
mov
and
sahf
push
fdivs
mov
ss
je
mov
mov
test
mov
lret
and
mov
inc
data16
jge
xchg
adc
negl
lds
lret
add
push
ret
jne
das
xor
jbe
cmovno
stos
jns
rclb
loopne
lods
mov
push
in
xor
aad
dec
pop
jae
fidivrl
sub
mov
mov
cmp
xchg
lcall
mov
pop
rolb
xorps
clc
int
int
sub
in
cmp
push
out
xchg
sbb
enter
lock
pop
push
xchg
push
xchg
lcall
xchg
and
test
sarb
push
addr16
and
jecxz
sbb
shl
inc
jnp
daa
dec
popa
int
loope
add
fidivrs
and
mov
aaa
xor
dec
leave
or
pop
jl
xor
dec
loope
testl
mov
xchg
pusha
mov
and
mov
dec
outsb
icebp
add
dec
popf
mov
insl
fwait
pusha
add
sbb
outsl
popa
inc
and
aas
adc
mov
cmp
pop
cmc
stos
or
inc
fstps
xor
outsb
mov
pushf
loope
movsb
xor
push
cmp
push
icebp
cs
xor
lea
mov
repz
xchg
mov
jae
dec
mov
dec
add
in
int
insb
mov
xchg
dec
rorb
pushf
push
or
and
or
mov
jnp
sub
movsb
adc
jns
imul
ss
cwtl
cmp
adc
fcompl
mov
inc
lret
sbb
sbb
pop
jp
aaa
inc
fstpt
test
inc
rorl
pushf
sub
mov
or
jecxz
call
outsb
and
in
imul
fdivrl
and
xor
rorl
lods
enter
mov
lret
lahf
add
in
out
das
gs
cld
pop
push
hlt
cmpl
mov
or
iret
arpl
hlt
nop
inc
mov
arpl
and
testl
push
inc
push
and
fwait
mov
lods
add
dec
inc
cli
mov
pop
rcrl
and
jle
pop
add
popa
aad
sbb
xchg
rolb
fidivs
loope
dec
mov
jns
scas
sub
dec
or
insb
jge
cmc
loope
pop
adc
int
out
or
xchg
jnp
rorb
mov
nop
outsl
scas
js
lock
adc
xchg
out
ljmp
pop
sbb
push
mov
loopne
popa
mov
inc
push
sub
jb
bound
daa
int3
jp
icebp
sub
xor
push
iret
cli
mov
loop
jae
hlt
cmc
inc
sbb
jbe
sahf
lea
test
out
xor
jne
test
mov
stos
ret
mov
ja
xchg
fcmovnb
inc
scas
popa
cmp
rcr
test
js
mov
test
inc
jp
cmp
je
loopne
add
cmp
dec
aad
loope
adc
xchg
ja
imul
scas
loop
add
lods
pop
sub
out
add
push
mov
in
ficoms
fisubrl
jno
les
outsl
into
pop
addb
js
lods
popa
in
inc
and
cmp
imul
cmp
xor
lret
push
cltd
mov
or
movsb
sarb
mov
cwtl
insb
xchg
imull
sub
lahf
xor
aam
mov
sbb
jmp
test
insl
jnp
insb
fcomps
xchg
mov
int
repnz
stos
and
lock
mov
insb
mov
fldl
imull
jg
fldenv
scas
xor
jle
mov
add
sub
in
lret
jecxz
push
mov
and
mov
inc
sbb
fsubr
sub
jbe
outsl
popf
jno
loopne
test
sti
pop
push
push
pop
adc
sub
or
adc
out
cmpsl
shrb
mov
inc
sbb
push
cli
pop
ret
adc
lret
dec
scas
inc
bound
sub
push
addr16
jb
mov
add
add
rol
jae
rorb
inc
repnz
pop
dec
imul
dec
sti
jnp
pop
clc
lea
das
adcb
pop
or
xchg
adc
js
fwait
xor
jp
mov
sbb
dec
push
xchg
fldenv
and
clc
movsl
popf
mov
ljmp
jg
pop
pop
clc
adc
cld
leave
inc
fisttpll
sbb
add
add
pusha
pop
jbe
jnp
xchg
xchg
push
fildl
stos
jae
pop
jg
or
daa
les
lret
test
jbe
xchg
loopne
fdivp
jl
and
inc
mov
xlat
mov
mov
ja
jne
cmp
inc
add
test
xchg
xlat
xor
pusha
aas
test
sub
popf
ja
dec
add
int
aam
mov
lea
ret
sbb
sbb
mov
or
xchg
adc
push
lods
dec
cmc
test
pusha
mov
mov
ror
xsave
ret
pop
xlat
push
add
push
cmp
lds
scas
sbb
xor
insl
xor
push
dec
jmp
cmpb
loopne
mov
pusha
lds
adc
push
cwtl
inc
outsb
mov
pop
lea
in
pop
mov
inc
cmp
pop
scas
inc
pop
orb
rol
jmp
cmpsb
push
add
in
adc
push
inc
enter
pop
movsb
mov
imul
cmp
pop
jne
and
test
rcrb
mov
mov
out
scas
ds
and
sub
jmp
shlb
inc
lahf
xchg
jge
popa
cs
xchg
xchg
push
imull
or
mov
ja
cltd
inc
mov
dec
pop
xchg
stos
arpl
xchg
pminsw
ds
lds
mov
and
jae,pn
mov
call
mov
xlat
stos
loop
icebp
scas
xchg
insb
adc
repnz
popl
cmpsl
lock
aaa
mov
xor
or
mov
aad
idivb
dec
mov
mov
sub
fisubs
pop
mov
ja
mov
cmp
push
ret
sbb
push
aad
push
push
fdivs
mov
loopne
xor
xor
mov
sbb
jp
adc
fwait
movb
pop
lahf
push
out
xlat
pop
jb
xor
mov
push
mov
xchg
sti
icebp
jns
in
popa
jmp
pop
lods
scas
pop
sub
gs
hlt
or
mov
cmp
repnz
jecxz
sar
scas
and
pop
enter
add
add
insb
popf
sub
and
data16
inc
aad
gs
rclb
notl
mov
das
popa
incl
scas
dec
jo
or
outsl
shl
mov
mov
dec
sub
clc
push
test
pop
jecxz
fidivrs
out
jns
push
mov
mov
mov
mov
in
movsb
mov
jo
pop
add
inc
sub
bound
mov
mov
jae
mov
jmp
in
inc
in
sahf
imul
std
xor
push
insb
mov
mov
pusha
scas
in
fisttpl
inc
mov
dec
dec
add
sbb
dec
nop
sub
push
clc
pop
mov
cld
clc
sub
and
pop
push
loop
clc
repz
mov
pusha
movsl
aam
jge
dec
cmp
cwtl
mov
xlat
jns
cwtl
rol
push
nop
adc
in
enter
js
push
in
jl
fwait
jnp
ss
xchg
aam
jle
sti
int
aas
xlat
enter
sub
pop
sahf
cmc
insb
dec
sub
dec
and
jae
popa
ret
jb
sub
insb
loop
outsb
ss
push
lret
and
test
pop
je
and
adc
outsb
and
in
repnz
push
mov
pop
sbb
add
daa
shrl
mov
cld
sbb
sub
mov
and
xchg
cli
insl
mov
mov
js
add
cs
xchg
stc
xchg
dec
push
xor
in
add
shll
sbb
dec
jge
aas
cmpsb
inc
fistpll
or
sub
sub
sti
push
enter
mov
in
sbb
add
stos
dec
jo
push
addr16
cmp
outsb
mov
ss
fcoml
lds
dec
enter
pop
mov
loope
test
dec
in
pushf
jl
pop
jge
rcrl
or
gs
and
mov
or
iret
and
aam
cmpl
loop
xchg
mov
cli
mov
xlat
adc
jne
inc
arpl
push
scas
loop
out
dec
mov
fcoms
xor
add
xchg
mov
in
dec
iret
push
jbe
xor
int3
pop
shlb
mov
xchg
dec
lds
andb
aaa
iret
sahf
and
pop
cltd
jl
and
jmp
ljmp
adc
sub
jle
inc
and
inc
xchg
cltd
cmpsb
cmp
cwtl
xchg
jge
orb
mov
cmp
sub
imul
pusha
lods
std
mov
fdivrs
mov
cmp
sub
or
rcrl
sbb
ds
test
inc
lods
popa
repnz
pop
pop
push
push
sub
mov
cs
movsl
inc
add
jbe
lahf
andb
out
inc
adc
in
mov
xchg
sub
popf
dec
mov
mov
mov
push
imul
loopne
int
xchg
add
dec
pop
in
xor
dec
mov
lods
xor
loope
mov
or
ds
enter
xchg
int
or
xchg
xchg
roll
incb
jmp
sub
jg
in
or
mov
mov
add
add
cltd
sub
outsl
insl
imul
cmp
sub
movsl
lcall
pop
addr16
mov
lea
leave
fcoml
and
lret
test
push
nop
outsb
jp
lods
or
aam
jnp
sub
call
loopne
mov
test
fidivrl
rcrb
push
rcl
dec
test
cmc
cmpsb
nop
test
xchg
int
popa
push
cmp
push
imull
mov
and
bound
call
pop
decb
outsb
insl
mov
fcmovu
popf
mov
aam
inc
insl
inc
sub
add
and
push
push
cmp
negl
fimuls
fstps
out
in
mov
and
xchg
xor
ds
scas
addr16
imul
mov
or
int
xor
push
or
call
leave
adc
inc
lea
cs
and
cmp
inc
cli
movb
mov
sarb
or
xchg
cmp
cs
adc
mov
adc
out
mov
cmpsb
add
jle
and
xor
mov
aam
fildll
repnz
loop
insb
jno
lock
and
scas
adc
xchg
addr16
xor
in
jbe
lods
mov
sbb
push
xor
leave
ja
mov
int3
jg
sbb
xor
daa
insb
jbe
inc
movntps
cwtl
inc
stos
jno
pop
repz
icebp
lret
jg
dec
addr16
sbb
movsb
fwait
push
pop
iret
aam
mov
stos
std
bound
out
aaa
out
incb
xchg
mov
in
repnz
and
out
lds
adc
bound
cmp
or
pop
inc
lret
mov
xchg
mov
cmp
imull
stc
and
repz
xor
jge
inc
adc
hlt
mov
aaa
cmpsb
dec
bound
jno
cs
xchg
std
jo
fldt
or
clc
sbb
jno
repz
cmp
adc
test
or
mov
fidivs
sar
jecxz
or
inc
adc
or
cmpsl
stc
xor
xchg
adcb
pop
push
scas
std
sbb
loopne
adc
sub
les
mov
and
mov
mov
and
rcll
cmp
push
inc
test
cs
das
and
imul
and
add
or
mov
lcall
push
and
jb
aam
jns
int3
push
rcrl
inc
repnz
pop
lds
shlb
push
stc
rorb
and
push
xor
pop
cmp
pop
mov
mov
adc
push
xor
enter
ret
mov
incl
pop
cwtl
cld
aaa
sbb
dec
fs
js
mov
movsb
jne
lcall
or
and
test
push
cmp
push
push
pop
call
or
mov
std
rep
dec
xor
jne
push
inc
ret
scas
in
and
ds
add
mov
add
icebp
ds
push
add
movsl
jmp
imul
rcll
mov
int3
inc
jo
test
pop
adc
and
pop
sub
xor
jno
push
dec
mov
sub
dec
lahf
cld
icebp
push
movsb
aad
sub
test
jb
mov
mov
cmc
jno
lds
jbe
xor
jl
fsubs
cmpsb
push
add
push
push
test
andb
jo
divl
xor
sbb
jns
movd
mov
les
xor
outsb
mov
mov
xchg
sahf
cmp
mov
cli
movsl
and
mov
aam
and
lcall
or
lea
imul
mov
pop
and
repz
sbb
lret
sub
in
mov
jle
xor
lcall
pop
icebp
add
dec
jmp
imul
push
fildll
mov
cmpsb
in
sarb
sub
xlat
mov
push
imul
ret
cwtl
sbb
rolb
mov
push
jge
test
gs
dec
mov
pop
jp
pop
xchg
cwtl
cmpsb
fcompl
pop
je
jno
adc
xchg
and
or
jle
jle
repnz
or
jae
and
mov
iret
jecxz
cmp
xlat
add
dec
dec
push
inc
dec
stc
xor
add
sub
xchg
push
xchg
cwtl
lods
add
push
xor
and
ja
cmp
sub
push
sbb
mov
jmp
or
mov
jge
add
sub
dec
dec
mov
cmpsl
and
cmp
fwait
jne
fwait
dec
push
packssdw
lahf
and
repnz
out
lret
inc
insl
cli
mov
xor
imul
jp
jne
sub
xchg
mov
jmp
paddsb
rcrl
sub
xor
mov
mov
loopne
sbb
mov
xor
in
inc
mov
xchg
sbb
and
xchg
mov
outsl
mov
popf
mov
or
or
lahf
cld
idivb
jmp
fdivl
enter
push
mov
jg
lods
ss
xor
mov
pop
mov
bound
inc
and
ja
std
mov
cld
ljmp
lds
mov
jno
mov
pop
gs
jo
pop
aam
add
adc
frstor
ljmp
pop
sub
xchg
dec
aad
pop
mov
incb
push
iret
popf
lds
jmp
push
test
mov
sub
mov
cmpsl
sub
fdivrl
mov
dec
jmp
xchg
loopne
sub
imul
and
sub
popf
enter
add
cmp
les
and
inc
cli
inc
lods
push
nop
pushf
jno
jno
loope
xchg
inc
aam
mov
insb
jnp
mov
cwtl
cmp
cmpsl
stos
or
lods
mov
mov
in
inc
stos
je
jg
add
jg
stc
cmp
insb
xchg
add
les
pop
xor
xchg
mov
dec
popa
lds
mov
and
cmp
ret
shr
mov
push
fisubrl
test
sub
test
cmp
je
pop
popa
js
mov
xor
dec
xor
mov
pop
or
lcall
roll
int
mov
push
xchg
xchg
arpl
fistps
push
mov
pop
lock
or
or
mov
es
lods
cltd
xchg
lcall
mov
adc
xor
aam
mov
lea
scas
xchg
js
jmp
mov
pop
jg
in
pop
adc
push
addl
fcomps
aas
or
sbb
mov
mov
clc
mov
pop
int
inc
jnp
pop
mov
push
sub
ret
inc
push
xor
imul
inc
cmpsb
mov
add
loopne
movsl
pop
dec
and
inc
xchg
test
gs
rol
mov
inc
mov
sub
and
push
outsb
and
cmpxchg
icebp
xor
aad
jl
push
test
loop
gs
leave
lcall
lds
fwait
cmp
repz
sub
dec
inc
ret
cli
cmp
mov
push
inc
sbb
in
movsl
je
scas
ja
or
fcoml
inc
in
jno
push
push
pop
xchg
ds
add
lea
out
sbb
sbb
mov
loope
shll
lock
jge
in
xchg
xor
imul
inc
jne
jmp
shrb
xchg
shrl
jnp
jbe
inc
mov
xchg
mov
cmp
mov
add
xor
xchg
mov
xchg
lea
mov
push
not
xchg
or
cli
and
shlb
jmp
push
mov
xchg
jge
push
das
mov
pop
dec
dec
dec
imulb
dec
aam
call
jnp
push
repz
sub
xchg
pusha
mov
sahf
arpl
nop
and
mov
mov
and
repz
cmp
xor
icebp
mov
test
or
cmpsl
cmp
lods
xchg
xchg
mov
inc
mov
rcll
xchg
cli
mov
subl
and
mov
xchg
xchg
xchg
xchg
mov
bound
mov
lcall
insl
test
lds
in
push
jnp
fscale
sbb
dec
and
xchg
lret
dec
repnz
push
jno
in
mov
out
mov
nop
and
loopne
outsb
sbbb
jl
mov
xor
in
adc
xchg
jno
clc
and
xlat
jno
cli
pop
mov
stos
add
shl
mov
js
std
imul
call
push
outsb
mov
sbb
outsb
sub
test
push
inc
dec
cmpsb
icebp
rolb
sahf
sbb
std
outsb
push
cmc
rorb
fsts
insb
adcb
mov
out
xchg
popa
push
dec
int3
enter
pop
jle
lock
das
nop
icebp
pop
sbb
bound
test
leave
mov
mov
shrl
mov
arpl
dec
pop
cmp
imul
pop
in
movsb
xchg
stc
pop
mov
lock
lods
rcrl
nop
jb
aaa
gs
push
aaa
adc
cmp
ljmp
mov
out
lock
lret
pop
pop
push
xorl
arpl
cmp
xchg
xchg
pop
movsl
addr16
pop
lea
or
pop
mov
xor
inc
int
xor
lret
cmp
daa
int3
jge
gs
sub
inc
mov
cli
adc
outsl
mov
in
call
rolb
xchg
or
and
insl
in
pop
add
arpl
repnz
lcall
pushl
sub
mov
mov
test
test
test
sbb
in
jp
and
ficompl
sahf
jg
sbb
add
fsubs
pop
push
loop
dec
cltd
lds
cmp
mov
and
fbld
sbb
mov
mov
cwtl
leave
adc
adc
dec
insl
lds
pop
icebp
arpl
sahf
ja
popf
aam
push
sub
nop
pop
push
pop
lahf
aad
jb
adc
fs
mov
ss
das
cld
shll
dec
stos
fisttpll
lahf
xlat
cmp
push
data16
add
xchg
pop
ljmp
xchg
pushl
cmp
mov
aad
mov
and
out
pushf
inc
rcrl
jmp
mov
arpl
jne
fstpl
lret
add
int3
pop
cli
sbb
xor
gs
out
sahf
fdivs
jp
pushf
cwtl
cs
imul
fmulp
sbb
cmp
fs
adc
xor
das
hlt
mov
in
mov
xchg
fdivrs
stos
pushf
insb
push
xchg
inc
bound
mov
mov
cmp
cmp
jp
pop
add
je
fcmovnu
in
sub
sbb
lea
cmpl
adc
je
mov
out
mov
iret
push
repnz
mov
ret
test
cld
and
fnstsw
scas
outsl
pop
mov
inc
movsb
inc
jmp
popa
aam
std
dec
push
fistl
ja
cmpsl
cli
or
popa
jbe,pn
mov
pop
and
mov
dec
or
test
adc
fsubrl
fs
push
mov
xor
test
push
xchg
filds
pop
jns
stos
or
and
add
push
lahf
out
fisttps
push
sub
mov
bound
stos
or
outsb
ret
jnp
cltd
sub
lods
test
data16
outsl
roll
sub
pop
jbe
jg
lock
in
into
adc
mov
int3
cmp
mov
push
cmp
push
lret
xchg
in
mov
sbbl
push
push
pop
inc
mov
cmp
xchg
push
and
arpl
stos
xchg
and
gs
in
js
fwait
adc
sbb
cmp
aad
sub
flds
insl
push
sub
lea
aas
lods
addr16
dec
or
xchg
adc
loopne
in
cmp
aas
xchg
bound
leave
sbb
repz
xor
sarb
push
ljmp
repz
inc
sbb
pop
pop
insl
icebp
jmp
out
adc
mov
fiaddl
mov
jle
mov
jl
push
jb
or
shr
pop
mov
gs
lret
movsl
xchg
rorl
adc
fsts
add
loope
and
jecxz
mov
add
cmp
fcmovnu
mov
xor
cli
outsl
ficoml
add
jo
insl
in
lcall
sbb
ljmp
jbe
adc
mov
mov
pop
lea
lret
xchg
notl
sbb
in
cmp
scas
test
into
fwait
insb
xchg
sbb
fcoms
jo
xlat
dec
lods
sub
pop
push
addr16
mov
addr16
outsl
mov
in
iret
dec
mov
or
jnp
mov
mov
jle
mov
inc
adc
movsb
dec
jb
add
mov
pushf
jno
popa
into
mov
stc
mov
stc
jl
scas
in
pusha
push
pushf
pop
iret
jns
mov
pop
ret
ret
push
insl
sub
adc
mov
xor
loopne
push
repz
xchg
lcall
lcall
lcall
pop
jle
out
jne
cmpl
fiadds
std
add
pop
xchg
jno
jecxz
mov
pop
pop
ret
mov
mov
mov
mov
enter
fldl
sar
jae
test
in
movb
stos
pop
adc
mov
ja
aas
mov
inc
out
shll
cmp
pop
push
add
jle
push
adc
scas
enter
lea
pusha
test
mov
out
cmpsb
fs
cmpsb
bound
in
jo
mov
inc
movsl
subb
sahf
repnz
popf
inc
dec
push
ret
in
push
imul
mov
mov
ja
dec
loope
push
inc
add
push
mov
ja
inc
mov
push
out
and
imul
sahf
sarb
cmp
dec
popf
xor
cmc
jae
scas
shl
push
adc
std
and
fildl
xor
aam
out
push
dec
pop
adc
mov
jo
frstor
pop
sbb
iret
sub
dec
push
in
add
icebp
stos
cwtl
stc
jbe
ja
mov
shrl
fnstsw
mov
pop
jl
test
jmp
clc
jecxz
por
outsb
push
inc
mov
inc
ds
arpl
aad
add
ror
cmp
adc
movsb
je
call
in
jecxz
js
lds
lret
sar
pop
mov
push
sub
aas
mov
xchg
cmp
mov
shll
adcl
negb
xchg
push
sbb
xchg
fsubrs
or
pop
ret
aam
loop
adc
dec
push
sub
cli
sbb
loope
lea
sbb
push
mov
iret
rcl
mov
pop
and
cli
adc
unpckhps
inc
fistps
pop
jge
lods
popf
sbb
xchg
fcompl
sub
bound
mov
lock
push
inc
fwait
in
mov
mov
in
adc
aam
pop
pusha
addr16
pop
filds
mov
ja
push
mov
xor
sub
xchg
sarb
rcl
adc
mov
fcoms
add
mov
jns
std
loope
pop
adc
or
and
mov
pop
loope
and
mov
xor
or
cmp
pushf
push
cmp
sysexit
xchg
jns
sub
mov
xor
sbbl
jl
inc
push
iret
fidivrl
mov
aam
sbb
mov
jns
pop
cmp
daa
dec
popa
cmp
push
ret
sub
movsb
leave
insl
cltd
pushl
dec
sbb
xor
xor
and
mov
jnp
jae
inc
or
popa
stos
mov
mov
lret
loop
rorb
lods
leave
mov
lcall
popa
adc
insl
push
cmp
fucomip
add
daa
inc
dec
mov
cwtl
xchg
xchg
icebp
rorl
pop
or
aam
je
aas
jnp
jae
adc
xor
xor
mov
imul
xor
dec
adc
out
lods
ljmp
sub
insb
mov
negl
fisubs
cmp
cmp
jno
test
loopne
cmp
out
outsb
bound
test
ror
cmp
mov
sbb
fs
into
sarl
loope
fs
scas
or
addr16
jp
mov
xchg
adc
add
dec
jp
lcall
imul
add
daa
inc
push
daa
addr16
adc
add
sub
into
aaa
loope
shrb
fnstsw
inc
nop
clc
popa
push
mov
ds
in
add
es
push
aaa
outsl
movsb
jo
andb
dec
push
fisubrs
js
push
fcmove
lret
inc
sub
imul
lret
nop
jmp
fs
mov
cmp
inc
fnstenv
cli
test
fldt
pop
addr16
mov
loop
int
dec
jle
cli
pop
ja
arpl
roll
inc
xor
lcall
and
xor
bound
xchg
pop
clc
jmp
add
arpl
push
xchg
sbb
jnp
xor
cmp
mov
aaa
cltd
xor
pusha
mov
das
or
sbb
pop
push
idivb
cmp
lcall
mov
xor
jmp
mov
cmpsb
cmp
mov
lods
loop
inc
sub
and
je,pt
and
lret
repnz
jnp
ficoml
lods
addr16
sbb
mov
and
imul
xlat
xorl
stos
ljmp
lods
shrb
dec
out
sarb
mov
sbb
sahf
daa
sub
jae
dec
mov
pop
fiaddl
cmpsb
xchg
bnd
leave
je
jg
and
stos
mov
push
sub
loop
and
mov
int
cmpsl
sub
and
leave
or
mov
ret
jae
cmp
xchg
pop
and
jbe
push
mov
jg
adcl
mov
enter
jg
shlb
or
dec
imul
add
pusha
das
loop
fstpl
jp
into
mov
out
xchg
idivl
clc
lods
mov
sub
xor
icebp
mov
or
mov
sub
cs
lock
out
jno
stc
rorb
cmp
inc
and
push
ret
lds
mov
sub
int3
xchg
imull
add
mov
sub
js
lahf
aad
outsb
movb
push
scas
scas
pop
sbb
push
push
pop
xorb
cmpsl
cld
in
adc
sbb
and
mov
clc
push
mov
bound
fdivrl
cwtl
sti
push
lds
lds
dec
add
pop
imul
push
dec
aad
mov
sub
scas
cmpsl
adc
call
mov
stos
and
popf
mov
cmc
lahf
cmp
pop
fidivl
test
pushf
or
jle
lret
sbb
enter
push
pop
mov
xlat
fs
jp
or
mov
cmp
xchg
sbb
mov
outsb
adc
ss
mov
xchg
mov
xchg
cmpsb
movl
icebp
or
aam
outsb
ljmp
mov
imul
mov
enter
jne
in
mov
test
mov
cltd
in
repz
out
push
pop
in
or
hlt
push
mov
cmpsb
sarb
cmpsb
pop
xlat
lahf
add
xchg
dec
cmp
jg
jmp
stos
xor
call
das
aam
enter
lea
repz
int
popl
je
insb
in
cli
aaa
mov
add
mov
mov
ja
and
lcall
lret
mov
movb
jp
pop
aaa
pushf
test
stos
pop
mov
cmp
stos
mul
call
xchg
mov
mov
mov
cmpsl
flds
or
in
out
cmc
inc
int
ja,pt
adc
cmp
lahf
test
jge
jl
loop
or
cmpsl
cli
sub
bound
call
inc
sti
jbe
mov
sbb
jae
subb
cmp
add
cmp
mov
push
lods
mov
jbe
sti
sub
inc
jb
jmp
pushf
out
push
mov
or
lods
sbb
jb
test
xchg
cltd
mov
pop
enter
cmp
mov
fwait
pop
ljmp
mov
sti
xchg
idivb
fiadds
fwait
outsb
mov
jl
xchg
mov
mov
xchg
testl
stos
shlb
out
hlt
mov
in
dec
mov
bound
jl
scas
mov
call
adc
fldt
pop
je
add
std
and
mov
dec
clc
lea
adc
mov
imul
cmc
add
dec
fnstcw
add
jnp
lret
and
inc
jnp
mov
hlt
jecxz
jl
push
stos
inc
pop
sbb
mov
adc
mov
mov
out
rolb
mov
aas
in
jb
pushf
mov
stos
and
js
adc
jno
ret
fdivp
mov
ret
and
dec
lods
inc
imul
aam
and
pop
mov
mov
jmp
cmp
mov
mov
mov
mulb
shl
mov
add
sub
add
xchg
lods
lahf
rcll
push
lods
loopne
push
pop
repz
je
push
movsl
xchg
insb
jge
insl
popa
mov
push
aas
je
js
adc
jp
mov
push
fsubl
pop
jne
leave
jl
xchg
cmp
inc
scas
add
and
sbb
jns
lret
mov
xor
cs
ds
rcr
pop
add
into
dec
jge
cmp
xor
jo
mov
pop
mov
xchg
outsl
push
leave
lea
lea
repnz
mov
inc
enter
outsb
insb
push
clc
lcallw
lea
andb
aas
mov
pop
loope
idivb
mov
imull
test
sub
mov
insl
lods
pop
or
ret
sti
scas
add
in
insl
mov
je
cmp
or
dec
sti
test
push
and
cwtl
iret
push
push
int
add
and
test
stc
fildll
push
dec
xchg
int3
arpl
outsl
adc
dec
xchg
popa
in
outsl
ret
adc
push
ljmp
scas
xchg
flds
mov
xchg
lock
xor
xorb
mov
pop
push
push
adcl
repz
loopne
repz
cli
mov
inc
mov
cmp
or
leave
aaa
gs
divb
cmp
dec
mov
arpl
icebp
pushf
sbbb
aas
xchg
push
xchg
das
and
push
callw
cmp
insl
push
test
dec
pop
pusha
push
fxch
and
icebp
jl
xchg
push
push
stc
loope
jns
cmpsl
jmp
xchg
sub
cmp
inc
ds
mov
dec
jns
rcrb
fcom
addr16
add
nop
sarb
fsubs
aad
scas
xchg
xchg
or
jecxz
add
sbb
cmp
jbe
jle
lods
push
mov
add
das
arpl
xor
mov
push
or
dec
xor
cli
sub
adc
jmp
cwtl
sub
jle
outsb
adc
rcll
sbb
cmpsl
inc
cmp
cwtl
adc
fwait
test
push
divps
adc
dec
xchg
pop
pop
in
or
jecxz
daa
mov
int3
and
add
shlb
sub
sbb
aam
jp
stos
stos
ret
mov
filds
lret
cltd
jns
push
push
pusha
ret
mov
test
pop
das
outsb
fcom
lea
push
in
pop
jl
mov
jg
test
mov
pop
mov
ds
jbe
xchg
shlb
jecxz
mov
xor
insb
adc
addb
fnstenv
mov
pop
insb
pop
scas
jg
loopne
push
adc
loop
sahf
fnsave
cmpsl
jne
push
push
cli
and
sub
adc
pop
in
sub
mov
out
xchg
inc
sbb
mov
xchg
adc
push
inc
ret
fsts
jge
mov
mov
pop
mov
xchg
mov
movsl
inc
push
ja
and
nop
pslld
adc
movq
pop
iret
lods
mov
pushf
mov
xor
jl
popf
dec
pop
clc
aam
jg
sbb
mov
stos
sbb
push
das
lcall
lods
ds
inc
pop
jnp
mov
push
cmp
shlb
pop
das
dec
xlat
push
pusha
lods
xor
out
pop
inc
fwait
adc
mov
fistl
mov
popf
pushf
scas
xor
movb
inc
bound
leave
and
aad
dec
loope
mov
mov
add
gs
outsb
imul
arpl
xor
test
mov
lahf
stos
pushf
cmpsl
and
dec
repnz
jl
push
jle
xchg
and
add
add
sbb
stc
mov
out
sbb
mov
aaa
shlb
clc
movsb
sbb
iret
fiaddl
stc
dec
hlt
outsb
jle
add
aam
pop
push
out
int3
imul
sub
mov
add
mov
data16
sbb
mov
pop
mov
icebp
cmc
sbb
aas
call
cmp
pop
xrelease
in
into
out
push
div
popa
ficoml
push
movsb
scas
jno
movsb
sti
xchg
ss
test
push
test
cmpsl
adc
into
xor
cltd
sub
imul
andb
loopne
loop
dec
dec
jns
jle
add
mov
jb
inc
cmp
ja
fsubrl
in
aaa
xchg
xor
mov
repnz
sub
xchg
ja
adc
jns
mov
stos
decl
mull
movsl
cld
orl
cmp
ret
jo
testb
stos
in
int
or
stos
jb
mov
call
and
add
sbbl
notl
fnstenv
das
inc
fstl
shll
shr
in
dec
imul
rorb
ja
mov
pop
or
sbb
add
push
ja
add
sbb
fadd
lret
xchg
subb
dec
pop
dec
imul
leave
pop
ja
pushf
add
jl
fs
cmp
mov
push
pop
insb
faddl
sub
xor
push
imul
push
vsqrtss
push
mov
xchg
add
fmulp
fincstp
mov
inc
pop
in
mov
in
push
and
and
setne
icebp
insb
popf
xchg
push
stc
cmp
or
fcompl
cld
or
sbbl
and
cmp
jnp
sub
xor
and
filds
mov
iret
sbb
sub
fbld
xor
jl
sbb
sub
ljmp
ficoms
test
aad
xchg
dec
das
cmpl
lea
mov
iret
dec
sub
in
lret
pop
icebp
lock
pop
je
or
call
mov
daa
push
pop
sahf
std
addr16
add
xor
outsl
and
cwtl
and
adc
mov
daa
mov
mov
cmp
cltd
lds
into
lcall
repnz
push
stc
scas
push
adc
jecxz
and
nop
mov
jmp
hlt
dec
inc
sbb
inc
dec
adc
xchg
movsb
cwtl
mov
stos
dec
jbe
orb
sub
xor
sbb
sti
inc
ljmp
mov
pop
in
pop
cmp
insl
imul
sarl
es
sub
xor
scas
adc
sarl
fnsave
fldt
xchg
pop
nop
repnz
icebp
test
arpl
bound
add
xor
push
mov
popa
cmp
ja
aas
dec
mov
push
scas
inc
sbb
enter
mov
jle
lret
push
sbb
ljmp
mov
xor
jae
xor
push
cmc
arpl
cmp
out
or
sbbl
mov
out
pop
daa
sbb
jns
add
incl
stc
addl
popa
loope
adcl
add
add
jnp
popf
mov
repz
std
jb
popa
lahf
jae
fwait
int3
adc
push
test
int
dec
adc
mov
outsb
je
and
or
push
pop
scas
xchg
clc
lods
imulb
cld
xor
aaa
arpl
pop
xchg
mov
aas
mov
jp
and
adc
mov
subl
leave
mov
enter
mov
mov
mov
mov
aaa
bswap
jp
nop
psraw
or
sub
imul
movsl
or
add
outsl
popf
loopne
mov
mov
push
out
ja
dec
and
and
shl
sub
jl
add
pop
mov
push
sub
mov
lods
pop
jle
shll
sub
pop
cmp
imul
pop
ret
jns
mov
bound
popa
xor
jp
add
mov
insb
or
lahf
and
inc
pop
jbe
cmpsb
xchg
sub
das
lods
outsb
lods
sbb
sbbb
dec
out
add
xchg
test
aam
ret
cmpsl
enter
dec
xor
xor
test
in
aas
xlat
jo
or
mov
int
cmpl
sub
ljmp
xorl
jnp
jmp
dec
sbb
imul
stc
jg
adc
rcrl
repnz
int
in
ret
popf
mov
ja
clc
out
xor
outsb
testb
mov
jmp
add
das
fstps
les
repnz
lock
adc
nop
nop
and
clc
jne
mov
xchg
iret
mov
lcall
xchg
es
jnp
dec
inc
jge
sbb
inc
push
es
lahf
jle
mov
cwtl
and
icebp
xor
sbb
mov
notb
and
dec
outsb
icebp
scas
cmp
pop
mov
mov
adc
adcl
aad
xchg
cmp
push
sarl
enter
xlat
aas
nop
mov
push
stos
push
xor
cmp
cmc
cli
xchg
cli
das
xchg
adc
outsb
jb
je
ja
pop
xor
or
popa
ret
mov
ljmp
js
xor
cmp
nop
adc
js
rcr
stos
push
cmpsl
inc
inc
add
mov
xor
mov
nop
jb
loope
jbe
in
pop
xchg
inc
pushf
ljmp
jmp
push
enter
add
inc
xchg
mov
std
add
add
testl
mov
and
add
cmp
or
jmp
out
jp
inc
lahf
loop
clc
fstpl
popf
push
shll
insb
jp
popa
push
push
xor
pop
and
jp
addr16
dec
push
pop
push
xlat
jg
jbe,pn
filds
cmpsl
mov
dec
loop
shlb
fadd
sbb
dec
push
mov
xor
aaa
xchg
inc
clc
xchg
add
sbb
hlt
xorb
adcb
fists
xchg
cwtl
stos
xlat
cmpsl
out
pop
jle
xchg
movsl
adc
cmp
jb
sub
mov
ss
leave
loop
das
outsb
movb
jp
sbb
xor
mov
push
icebp
push
addr16
push
add
cld
pop
jbe
addr16
bound
or
adc
jne
out
dec
lcall
loope
cmpsl
jg
aas
repnz
loope
incl
aam
xchg
sub
test
nop
rorb
push
mov
cld
call
xor
jnp
cmp
mov
push
out
enter
mov
or
sub
test
add
ljmp
int
mov
inc
ret
dec
ss
jle
test
or
xor
jge
dec
jo
das
sub
inc
adc
xchg
jnp
mov
xchg
incb
xor
xor
push
insb
adc
push
imul
jle
inc
xchg
mov
ds
dec
sbb
mov
sahf
insl
cmp
xor
in
rorl
cli
enter
push
cs
ja
mov
std
or
das
out
ret
stc
sbb
pop
xchg
dec
mov
pop
mov
ljmp
hlt
push
push
jno
sub
dec
and
jmp
mov
pop
pop
dec
idivl
sub
pop
inc
jecxz
push
jle
cmp
ljmp
cmp
push
scas
mov
sub
aad
xor
adc
das
jns
xchg
fwait
out
adcb
and
push
ret
xchg
mov
xlat
leave
cmpsb
adc
pop
popa
add
lret
pop
lcall
pop
paddw
mov
ret
call
xchg
pop
scas
pop
movsl
xchg
mov
jmp
nop
popf
nop
test
jne
xor
adcl
repnz
scas
mov
xchg
sub
dec
aas
es
aaa
arpl
mov
push
es
scas
fwait
out
inc
mov
adc
mov
int
mov
negb
mov
pop
sbb
insl
adc
pop
lods
push
daa
iret
rolb
ljmp
pop
mov
ljmp
rorl
cmp
push
fstl
popf
fstps
mov
lods
pop
adc
fbstp
scas
pop
in
push
mov
outsb
dec
ficomps
fs
push
lds
jmp
jp
xchg
popa
push
adc
je
push
lock
std
sbb
dec
pop
mov
and
mov
and
in
test
sub
in
xorl
and
mov
loopne
lret
mov
cli
cli
das
sbb
xor
addr16
cmp
push
addr16
call
in
lods
push
adcl
cmc
int
mov
pop
test
lock
imul
int3
fisttpl
xchg
frstor
ret
inc
jmp
dec
xchg
push
movsb
outsb
xchg
jg
adc
mov
mov
cmc
pop
inc
jp
sub
inc
lods
dec
adc
dec
push
out
in
sbb
outsl
loope
mov
push
jns
stos
sbb
adc
xchg
adc
mov
push
int
add
cltd
addr16
repz
push
lcall
std
sub
shr
pop
mov
fistpl
in
xchg
xchg
idiv
push
jns
xchg
fisubs
iret
shll
push
cltd
jo,pn
mov
data16
call
mov
jp
mov
cmp
add
mov
lock
or
ja
push
mov
lea
mov
and
scas
loopne
push
iret
pop
lods
fwait
out
sti
fimull
push
adc
fcmove
mov
icebp
shrl
addr16
sbb
idivl
adc
nop
mov
jmp
fs
test
mov
push
and
dec
loop
js
sar
xor
int3
test
adc
jne
in
shrl
add
or
rorl
xchg
adc
imul
stos
jg
jmp
movsl
mov
push
inc
jae
pop
adc
shrl
fimull
xor
adc
pop
ljmp
or
xchg
test
lods
mov
lret
addl
jp
sub
sub
or
lea
rcll
mov
xor
mov
push
sbb
sti
jg,pn
push
mov
inc
rcll
dec
jae
xchg
jle
in
push
js
add
add
dec
lea
shl
fwait
add
dec
mov
in
mov
fisubl
pushf
mov
aam
ret
addr16
mov
cmp
or
mov
arpl
fldcw
sbb
dec
xor
mov
inc
dec
push
bswap
push
inc
pushf
cmp
enter
cwtl
mov
or
add
xchg
jp
xor
rcll
mov
sbbl
insb
jno
inc
imul
mov
xchg
push
in
mov
insl
mov
mov
test
or
dec
push
lret
and
out
and
stos
ss
in
adc
mov
sti
and
rclb
mov
data16
xor
jecxz
add
stc
test
int
cmpsb
add
ficoms
out
sbb
add
add
test
andb
es
cld
stos
dec
cmpsb
cmpsb
xor
or
push
divb
mov
inc
pop
fimull
add
dec
out
pop
aam
insl
scas
inc
stos
add
sub
in
inc
mov
adc
adc
insb
movsb
loop
xor
adc
jg
pop
cli
sbb
in
mov
aam
xchg
cmp
adc
insl
mov
pop
dec
js
xchg
mov
fcom
cs
sbb
adc
mov
fsubrp
jne
rclb
dec
mov
out
mov
test
sub
imul
dec
out
outsl
shl
sub
jae
and
jl
adc
add
jge
scas
add
xor
loope
sarb
lcall
test
or
jbe
mov
xchg
mov
movsb
push
repz
daa
call
cmpl
pusha
push
pop
loop
sub
test
mov
or
dec
ret
mov
stc
dec
mov
fstps
xor
add
push
ret
sbb
int3
push
xlat
mov
mov
jl
inc
fildl
ror
pop
cmp
aas
inc
inc
aaa
movsb
pushf
in
ficomps
popf
fdivrs
ret
adc
inc
jns
dec
xchg
xchg
xor
or
jl
test
push
stos
outsl
daa
sarl
sbb
and
mov
add
call
arpl
jecxz
pushf
push
xchg
icebp
mov
stos
adc
lods
or
mov
jl
pusha
ret
adc
adc
fnstsw
push
push
inc
call
inc
add
mov
push
jnp
pop
dec
aam
idivb
xor
or
push
mov
mov
nop
fstpl
jp
jge
test
dec
ljmp
int
add
adc
jb
stos
testl
mov
push
fwait
movsl
xchg
push
repz
aas
adc
mov
pop
bound
xchg
adc
mov
jle
pop
jno
add
gs
call
lahf
adc
adc
adc
or
lret
or
and
test
push
imul
jne
clc
daa
xorl
adc
fnstcw
popa
sub
pop
xchg
and
fwait
adc
sahf
stos
insl
adc
mov
aas
lods
mov
jp
sbb
mov
cltd
aam
pop
lea
in
push
imul
repz
mov
repz
cmpsl
aaa
cmp
inc
xor
lods
xor
push
test
jb
aad
inc
sbb
movl
xor
popa
mov
std
or
mov
test
stos
dec
shrl
iret
fldcw
mov
ds
scas
inc
out
push
cltd
fildll
mov
in
sub
aam
jge
inc
sahf
pop
loopne
mov
idivb
repz
adc
sub
mov
fidivs
dec
ficoms
and
mov
pop
arpl
dec
nop
push
lods
jns
mov
inc
ret
les
add
and
and
pop
mov
outsb
xchg
sub
sub
jmp
xchg
nop
mov
xchg
push
pop
repnz
int3
orb
pop
add
lret
sub
adc
xchg
dec
xchg
jge
xor
aaa
adcb
dec
stc
push
imul
into
xchg
insl
shrb
xchg
dec
stos
outsb
push
mov
xchg
das
mov
sub
jg
lcall
mov
mov
inc
lcall
inc
jecxz
push
in
sub
sub
cmpsl
adc
or
cmpsl
stos
loopne
sarb
mov
mov
and
sub
pop
inc
movsb
in
xchg
mov
dec
loop
pop
arpl
dec
cmp
or
push
xchg
jns
or
in
pop
jo
mov
mov
cltd
mov
cmp
and
adc
pop
lock
lods
fcompl
jp
mov
push
and
or
cmp
loop
inc
xchg
testl
inc
stos
leave
ss
dec
xchg
sbb
and
mov
lods
xchg
mov
pop
dec
mov
ret
sub
jnp
sti
mov
push
jecxz
jg
stc
inc
sbb
out
js
push
mov
xchg
lahf
clc
sbb
mov
mov
or
daa
xor
add
shlb
vpshufhw
jo
or
insl
aas
lahf
lcall
aaa
mov
jmp
lahf
repz
dec
fimull
pop
dec
or
xor
mov
cltd
out
xchg
sbb
sahf
xchg
xchg
push
cmpsl
push
insl
jg
insl
movsl
xchg
cmpsl
inc
cmp
lcall
cmp
testl
fisttps
mov
into
jo
lods
fcoms
stos
mov
ljmp
jmp
pop
xor
in
roll
add
add
hlt
lock
out
cmpsl
mov
insl
cld
nop
add
mov
stos
int
mov
clc
adc
pop
std
xchg
gs
lock
jne
int3
mov
dec
int
sub
push
pop
ret
adc
mov
das
jno
aam
lods
fcompl
mov
test
cwtl
push
nop
mov
out
pop
sbb
out
sub
test
pop
and
gs
xchg
dec
cld
push
jl
fisubs
shrl
dec
cltd
pop
pop
out
inc
out
xor
mov
popf
cwtl
cwtl
adc
push
insb
into
pop
dec
std
hlt
shlb
dec
fildl
into
mov
push
push
shl
icebp
loop
jno
lods
dec
jg
add
mov
mov
jnp
pop
mov
add
push
and
mov
mov
outsb
popa
and
add
push
icebp
inc
jge
cmp
and
jecxz
shlb
pushf
sub
add
jle
xchg
rclb
enter
push
mov
insb
mov
pop
mov
iret
cmp
cmpsl
jmp
popf
sti
adc
adc
repz
sub
add
std
mov
mov
repz
sbbl
mov
pop
mov
mov
mov
xchg
sbb
aam
xchg
pop
outsl
sub
stos
xchg
lret
pop
mov
rolb
mov
loope
fs
cli
rcrl
sar
mov
jp
jnp
sar
mov
mov
sbb
ja
add
fisubrs
adc
outsb
insb
out
xchg
xchg
imul
lahf
cmp
cld
icebp
mov
test
xchg
pop
clc
shrl
in
pop
or
mov
lods
cmpsl
jb
mov
and
inc
outsl
in
outsl
sti
cmp
dec
jmp
mov
inc
fists
push
xor
add
fstpl
sbb
xor
mov
mov
mov
xor
mov
xor
leave
xor
in
aas
push
jb
insl
aam
fwait
jmp
cmp
test
add
clc
jg
rolb
mov
mov
and
sbb
loop
in
int3
movsl
hlt
jmp
ljmp
pop
js
pop
repz
mov
movsl
ss
movsl
stos
dec
sbb
scas
xchg
sbb
mov
cltd
xchg
jae
stos
xchg
sbb
js
mov
pop
or
sbb
sarl
fdivrl
test
stc
into
cltd
mov
push
arpl
xor
mov
pop
lret
sti
inc
mov
gs
pop
adc
aam
repnz
in
xor
test
mov
test
mov
fucomip
out
sub
fsts
nop
scas
push
rclb
ficoms
shll
sub
and
rcll
mov
xchg
xlat
mov
negb
scas
xor
mov
std
jb
stc
scas
add
bound
dec
or
cmp
jnp
jno
hlt
sub
mov
cli
shrl
sti
push
bnd
ss
into
pop
and
sub
mov
loopne
pop
mov
dec
jno
sub
jecxz
dec
pop
pop
xlat
inc
jg
loop
adc
jp
cmpsb
sahf
xlat
push
push
sbb
das
cmpsl
xorb
out
sahf
roll
jmp
adc
dec
lods
leave
fidivs
stos
lcall
jl
cmp
xchg
sbb
lahf
sub
adc
fucomp
sub
add
or
or
xchg
adc
lods
push
jp
or
cs
push
sti
imull
pop
arpl
sbb
int3
int3
js
sub
lret
sub
and
stos
xchg
sbb
inc
push
sub
pop
sbb
push
testb
test
and
mov
xlat
cmp
sbb
xor
popa
push
jge
add
ret
out
into
sub
clc
stos
push
lret
outsb
xchg
sub
adc
jle
jge
mov
fisubl
shll
mov
ds
xor
add
xchg
out
or
or
into
pop
not
sbb
fcmove
xchg
mov
pop
xchg
fildl
or
test
pop
dec
add
rclb
fdivr
out
iret
je
push
nop
stos
cld
mov
dec
stos
je
jno
mov
js
cwtl
cli
mov
xlat
mov
mov
icebp
cmp
mov
call
fcmovnu
test
in
aad
fmuls
sub
cmp
iret
lret
inc
call
cmp
in
sbb
shr
aam
xchg
sub
pop
jle
aam
mov
mov
sub
cmpsl
sbb
repz
int3
and
lret
adc
or
cs
fdivl
fwait
int
je
jnp
cmc
scas
or
sbb
pop
lahf
push
mov
jne
cmp
cwtl
mov
pushf
pushf
pop
push
jae
or
dec
in
xor
in
fsubrl
sahf
pusha
sub
popa
push
pop
add
scas
lcall
insb
cli
pop
mov
loop
dec
jecxz
mov
lods
jne
pop
cmp
mov
pop
cmpsl
cmc
lahf
sub
xchg
jbe
outsl
sti
gs
fwait
sub
aam
xchg
addr16
lock
inc
inc
cmp
jle
jae
pop
aas
pop
lock
in
aaa
jecxz
jmp
cmp
lds
xchg
or
cmpsl
aas
mov
push
imul
inc
orl
xor
shrb
pushf
dec
push
dec
adc
and
add
xor
sbb
jg
sub
rorb
repz
xchg
push
nop
push
test
inc
ja
push
stos
lds
sub
arpl
inc
and
js
shll
mov
pusha
in
cltd
scas
loop
jno
jecxz
stc
rol
xchg
testl
and
push
sti
lret
inc
pop
enter
adc
lret
mov
push
push
xor
imul
stos
lret
jecxz
fistpl
pop
pop
imul
mov
and
int3
add
jg
je
mov
inc
mov
push
cltd
in
mov
mov
loopne
cli
rcrb
sti
test
cwtl
fadd
outsl
jp
mov
cmp
cli
jb
movsb
sahf
outsl
rolb
notl
aas
hlt
jp
arpl
sub
pop
in
mov
movsb
sarl
inc
push
mov
push
int
out
xlat
mov
inc
movsl
pop
lds
mov
imul
xchg
das
ds
and
movsb
jns
push
lret
push
into
ljmp
aas
lods
insl
call
leave
jg
fnstcw
repz
aad
imul
icebp
jbe
mov
pushf
scas
in
test
out
lret
icebp
int
pop
mulb
scas
pusha
add
mov
or
and
loopne
je
aam
add
lods
jo
or
push
cmpsl
add
xlat
fnsave
fcomp
std
inc
mov
arpl
lods
xchg
adc
adc
lock
add
sbb
or
sub
mov
or
mov
lcall
sbb
mov
icebp
cmpl
adc
pop
push
and
push
push
bound
add
imul
mov
mov
test
mov
or
mov
insb
ljmp
stc
out
pop
loop
push
das
mov
ret
adc
jae
je
clc
jno
mov
subb
cmc
imul
jge
mov
insl
aaa
and
xchg
mov
inc
ja
aas
loope
inc
mov
or
xchg
cmp
mov
test
inc
or
add
ss
test
mov
dec
sub
loop
scas
imul
js,pn
fmul
lock
fucomp
or
inc
xchg
add
addr16
hlt
dec
aas
adc
mov
movsb
pop
cltd
dec
sub
rcrb
push
cmpb
jg
adc
mov
add
dec
fwait
jmp
cmpsb
inc
inc
push
fcoml
movsl
dec
jns
dec
jnp
xor
or
add
test
sub
mov
cmp
into
mov
mov
push
add
test
xchg
insl
aas
pop
cwtl
push
sbb
pop
add
or
and
movsl
inc
xor
out
gs
fmull
inc
inc
fldl
vunpckhps
push
fs
cwtl
push
loope
mov
add
fisubrl
mov
jo
push
push
cltd
or
inc
sti
loopne
insl
mov
pop
inc
int3
jle
push
mov
sub
out
jl
fwait
pop
cmp
dec
or
xor
jl
insl
jp
mov
and
jns
outsl
rcrb
imul
pop
xchg
movsb
les
and
int3
popf
xor
mov
cmc
ljmp
lds
push
adc
aaa
idivl
cmpb
dec
test
arpl
jp
sahf
xor
movsl
xor
inc
pop
dec
pop
fstpl
fs
pop
lcall
clc
rorl
mov
out
test
std
mov
push
sahf
jl
lods
aas
inc
sarl
lea
add
mov
pop
pushf
ret
mov
inc
pop
cmp
lods
fdivrs
add
cmp
clc
add
mov
push
movsb
fistl
scas
enter
or
add
mov
jle
pushw
mov
jecxz
in
push
inc
bound
mov
xchg
test
mov
and
dec
mov
out
cmp
imul
mov
lcall
or
jl
jne
cmpb
mov
stc
jecxz
push
aaa
xchg
lahf
ret
xchg
arpl
cwtl
jmp
pop
xchg
jns
ss
push
cmp
int3
inc
mov
push
test
in
mov
xor
test
cs
in
mov
jg
cmp
mov
rol
cmp
loopne
and
xor
xor
push
aaa
in
push
aam
call
mov
es
jo
xlat
xorb
pusha
push
hlt
xor
xchg
andb
rcll
lock
xchg
test
jl
fucomp
mov
xlat
dec
push
into
sbb
pop
arpl
pop
in
push
mov
pop
mov
iret
dec
jno
pop
mov
fcomps
adc
jecxz
repnz
xor
pop
jmp
pop
jp
sbb
push
fiaddl
xchg
and
jecxz
jle
jne
lods
dec
adc
add
pop
adc
mov
add
aam
mov
fcomip
mov
mov
jae
or
ret
pop
pop
mov
pushf
push
rorl
sbbb
lahf
sub
xor
loopne
mov
cli
sarb
xchg
xor
cmp
ds
or
pop
je
adc
sub
mov
out
add
repz
push
mov
sbbl
pop
lea
lahf
adc
jns
out
mov
xchg
mov
dec
jg
testb
test
adc
sbb
push
dec
or
mov
mov
ret
les
aam
mov
rcrl
pop
add
jecxz
ret
cli
push
jl
sbb
sahf
cmp
gs
dec
subl
mov
aas
sbb
gs
not
jae
int
pop
push
xor
lods
dec
or
sbb
and
int
aad
add
rcl
jl
fdivl
imul
push
push
ds
mov
add
and
movsl
mov
and
mov
test
or
sub
sarl
sub
je
dec
insb
push
pop
int
sub
cli
fsts
add
pop
mov
dec
and
out
cmpsb
pusha
push
je
fcoml
mov
mov
xor
push
xchg
arpl
incb
jle
fsts
xor
sahf
imul
test
dec
jp
or
xor
xchg
add
jmp
mov
pop
cmpsl
lret
cwtl
movsl
xchg
arpl
stos
icebp
loop
jbe
pop
arpl
or
pop
and
fisttpl
or
jmp
adc
jle
movl
and
cmp
xchg
push
xor
mov
dec
stc
inc
inc
in
pushf
push
andb
fildll
or
and
add
fwait
lods
out
pop
fdivr
loopne
or
adc
cmp
mov
jns
cmp
jo
cld
call
or
fwait
mov
jl
mov
cmp
cwtl
in
sbb
cmp
hlt
daa
fcoml
popf
or
andl
lahf
cs
cmp
pop
repz
repz
adc
xchg
sub
imul
xorb
xor
xor
mov
je
jl
jmp
mov
cmp
cld
loop
outsb
dec
or
mov
sbb
xor
push
imul
mov
push
xchg
ss
fimuls
dec
movsl
xchg
orl
sub
mov
pusha
add
sbb
xchg
addr16
movswl
mov
sbb
mov
sbb
sbb
xchg
sub
xchg
dec
fwait
pop
xor
and
jmp
dec
jnp
mov
or
mov
jno
pop
and
adc
xorl
sbb
sar
andl
xchg
loope
in
fidivs
push
pop
dec
xchg
and
scas
stos
js
add
mov
or
jb
and
gs
dec
iret
jmp
frstor
pop
push
mov
xor
nop
xchg
jle
jne
mov
lods
scas
jg
sahf
push
sbb
idiv
ss
enter
sub
repnz
and
dec
popf
jecxz
jg
rep
pop
adc
arpl
sub
out
rcrb
push
outsb
jp
xlat
ja
cmp
iret
orl
mov
mov
test
cmp
mov
fimuls
sbb
mov
xor
push
cld
add
into
jmp
sbb
movsb
sub
mov
xchg
icebp
jno
loope
es
les
imul
pop
repz
mov
stos
pop
nop
cs
addr16
rolb
jne
frstor
ret
sub
or
insb
pusha
test
out
shrb
jmp
inc
ss
push
inc
or
jbe
add
push
repz
lret
cwtl
pop
cltd
fmull
mov
jg
dec
rcrb
dec
arpl
push
fadds
dec
es
fisttps
sub
mov
jb
ja
xor
arpl
mov
into
pushf
add
mov
add
pop
dec
mov
idiv
mov
jle
jg
scas
and
jge
dec
icebp
out
shlb
xor
push
push
lret
dec
mov
inc
lds
repz
pop
xor
outsl
stos
icebp
ficoml
repz
or
sti
mov
movsb
pop
lret
and
cli
push
cmp
and
cld
nop
push
daa
lret
cwtl
adc
jne
rolb
mov
fstpl
dec
inc
arpl
enter
outsb
cmpsl
xor
inc
push
lods
adc
ds
popf
jbe
rcrl
jne
rcll
imul
iret
icebp
icebp
push
outsl
repz
mov
cmp
mov
fsub
js
sbb
aaa
fcmovnb
sbbl
add
lods
cmpb
mov
imul
cmpsl
or
cwtl
scas
mov
notl
enter
add
arpl
stos
lock
xchg
ljmp
rcl
inc
aaa
jae
pushf
cmp
test
jne
sub
sbb
fildll
mov
and
xchg
inc
arpl
outsl
cltd
pop
bound
cmp
mov
les
and
inc
mov
fcoml
js
outsb
pop
xchg
shr
inc
daa
inc
test
aad
aas
ja
dec
pop
xor
hlt
jne
push
or
or
sti
cwtl
push
enter
inc
clc
mov
sbb
into
clc
xor
incb
xor
aam
clc
ficompl
loope
movsl
sub
frstor
mov
xchg
pop
push
push
mov
mov
cmp
and
mov
cmp
sub
mov
cmp
mov
shlb
inc
jae
add
pusha
aas
xor
andl
cmpsl
adc
imul
pop
fdivs
rcrb
dec
jg
and
push
pop
mov
pop
stos
fwait
jl
lock
push
mov
xchg
and
jle
fisttpl
nop
sub
push
inc
mov
test
iret
push
mov
pop
dec
jno
add
pusha
cwtl
fmull
and
pop
jmp
pop
xchg
cwtl
stc
repz
add
or
testl
pusha
insl
mov
xchg
dec
outsl
test
jle
int
daa
cs
psubusw
push
repnz
or
lahf
pop
roll
sbb
jl
push
mov
jle
lock
or
pop
add
gs
push
das
hlt
xchg
inc
mov
jmp
mov
test
or
inc
sbb
dec
mov
fisubrs
sbb
divb
or
cltd
test
xchg
xchg
mov
std
pop
jle
pushf
dec
aad
fsts
sub
inc
outsl
daa
add
rcrb
mov
pop
movsb
add
pop
adc
add
fsubl
faddl
push
mov
fbld
or
mov
sub
mov
mov
popa
mov
aad
test
pop
nop
mov
ds
shl
add
mov
std
pop
rcl
push
rclb
sub
test
insl
loopne
xor
add
dec
dec
xor
pop
ret
and
popf
mov
mov
jnp
addb
jb
popa
loopne
xorl
mov
stc
rcrb
mov
mov
inc
xchg
pusha
into
in
dec
adc
rorb
out
add
add
stc
in
push
lahf
mov
adc
int
fs
jo
xlat
pop
mov
inc
mov
aam
stos
in
jl
adc
insl
shl
and
loopne
fnstsw
jnp
jl
clc
in
insb
jge
sbb
mov
xor
pop
push
push
pop
sti
mov
xor
stc
lret
hlt
sbb
jae
and
in
pushf
in
xchg
movsb
jne
push
addb
scas
inc
ficoml
stc
xor
les
stc
mov
mov
aas
mov
repz
inc
mov
imulb
add
in
jno
lock
scas
repnz
pusha
and
pop
xchg
mov
icebp
lcall
pop
int3
xchg
cmp
sbb
call
imul
push
rcll
out
mov
add
je
scas
mov
push
mov
cmp
fwait
sbb
cmpsb
or
rcrb
aas
loope
ljmp
mov
xor
shrl
hlt
in
inc
repz
cld
pop
test
jle
pop
repnz
mov
es
add
in
dec
push
sub
stos
int
ret
pop
inc
outsb
pusha
add
int
xchg
mov
add
cmpsb
push
mov
clc
push
enter
inc
xchg
xorl
sbb
inc
je
shll
stos
iret
test
dec
dec
mov
jmp
add
int
popf
and
out
mov
cmp
inc
mov
sub
ljmp
fiadds
sub
call
xor
mov
mov
mull
std
jmp
jb
sbb
dec
xchg
aad
adc
xchg
push
jle
dec
cmc
xchg
je
jb
je
jmp
xchg
pop
rorl
hlt
adc
stos
pop
popf
and
inc
lcall
mov
lret
mov
adc
imul
loopne
std
icebp
sarl
mov
out
xor
movsb
adc
iret
jo
push
sub
outsl
inc
cmc
out
or
and
scas
mov
mov
xchg
jae
enter
mov
jb
xchg
xor
mov
inc
out
pop
or
push
sub
xchg
mov
mov
jge
jmp
fisttpl
pop
fs
adc
xchg
cmpsb
cltd
repz
sbb
jge
mov
and
aas
nop
mov
out
jmp
cmp
cmp
sub
addr16
incb
enter
cs
and
sbb
jl
and
clc
xor
inc
push
fadds
ja
mov
mov
ljmp
andl
fidivrs
add
out
or
pop
mov
push
xchg
in
and
jb
xchg
and
dec
push
mov
aaa
scas
jg
push
aam
push
mov
pop
js
pop
leave
jecxz
push
xlat
inc
ret
cltd
bound
inc
or
jmp
fdivl
add
cmp
push
jno
adc
stos
fmull
pushf
xchg
pop
mov
and
xchg
lds
shrb
cmc
inc
dec
xchg
cmpsb
out
add
jge
push
dec
mov
jbe
pop
jo
xchg
aaa
xchg
nop
cld
cld
xchg
std
mov
stos
adcb
xor
std
jnp
mov
pop
test
dec
fiaddl
cld
out
repz
in
fisubs
sub
xlat
insl
inc
fisttps
imul
add
in
xchg
xchg
mov
cmp
arpl
orb
pop
dec
in
fld1
dec
dec
jl
or
dec
aaa
cmc
je
xchg
lret
shrl
ret
popa
sbb
inc
sbb
outsb
inc
xchg
nop
xchg
sbb
xor
js
les
cmpsl
jp
dec
xor
xor
cmpsl
push
mov
aam
ret
ficoms
fstl
mov
rorb
call
and
mov
cmp
hlt
mov
mov
push
cmp
insl
icebp
and
lret
loop
faddl
pop
mov
jle
pop
push
push
and
or
jp
push
int
sub
shrb
jno
in
xchg
xor
pop
shll
mov
xor
mov
mov
push
fnsave
push
push
xor
or
adc
or
xchg
jle
leave
lea
stc
xchg
mov
xlat
xor
xchg
push
dec
ljmp
xor
loop
idivb
xor
aaa
and
jecxz
pop
pop
mov
cwtl
cmp
test
xchg
repz
jbe
dec
cld
jmp
loope
mov
push
cmp
fs
xchg
mov
mov
fstpl
ret
dec
push
cwtl
ficoml
ja
cli
adc
stc
in
pop
rcr
sub
mov
mov
les
jle
jno
movsl
adc
and
testl
mov
sahf
inc
sbb
incb
clc
cmp
cmp
mov
psrlq
xchg
mov
xor
cmc
repnz
push
sbb
fxam
lcall
pop
rorl
sti
mov
mov
mov
in
dec
mov
mov
es
ret
insl
adcl
repnz
push
dec
scas
inc
xor
mov
inc
not
daa
mov
idivb
sbb
into
or
or
fistps
pushf
xor
pushf
add
mov
scas
rclb
subl
sbb
mov
sbb
test
cmp
int3
push
dec
push
push
jl
push
test
jbe
dec
js
mov
jl
pop
add
xchg
jge
pusha
jb
mov
js
mov
fwait
adc
fisubs
mov
pop
fistpll
sub
lret
pop
in
insl
add
int3
dec
mov
jno
xor
ret
fadd
adc
push
mov
mov
mov
nop
aas
mov
pop
stc
dec
ljmp
sub
jl
ficomps
pop
jmp
dec
and
or
jl
fldenv
clc
inc
mov
xchg
fbstp
inc
pop
push
js
cwtl
jle
mov
sub
inc
add
sbb
xor
loopne
cltd
daa
sbb
addr16
imul
mov
test
add
stos
cli
mov
repz
jmp
lcall
insl
cli
outsl
lea
push
in
push
nop
or
js
add
xchg
or
cmpsb
xchg
cmpsl
xor
je
xchg
aad
clc
imul
dec
mov
adc
stos
add
lcall
loope
sub
clc
outsb
mov
mov
cmpsb
call
jg
rorl
imul
xchg
add
fisubrl
rcrl
add
xchg
jbe
movsb
sahf
movsl
lcall
inc
cmpsl
shrl
dec
jmp
dec
cmp
push
popf
test
int
mov
jmp
sahf
mov
mov
popf
out
stc
ja
fildl
pop
ret
sahf
xlat
mov
pop
bound
jbe
ffreep
push
out
into
xchg
imul
loopne
sub
das
aam
aad
xor
add
imul
test
shll
adc
or
push
dec
loop
rcrb
add
lods
push
out
adc
push
dec
adc
add
push
scas
sbb
xchg
push
fwait
mov
loop
dec
jecxz
jle
inc
cmp
hlt
andb
mov
mov
lret
dec
jmp
out
add
cmp
pusha
xchg
mov
xor
fsub
jmp
or
push
ret
mov
xchg
repnz
cmp
mov
mov
and
cmp
in
shll
leave
jo
stc
in
pop
into
jle
cltd
xorl
call
sbb
inc
cmpsl
xchg
std
lret
push
sbb
adc
cmp
fisttps
and
lock
dec
ljmp
aaa
shll
mov
xchg
adc
dec
cli
fmuls
rcrl
aad
scas
dec
in
mov
push
outsl
adc
mov
daa
std
push
cmp
sbb
xchg
jg
sub
das
add
cmp
xchg
rcll
mov
push
push
faddl
cwtl
test
lret
lods
push
ret
mov
and
mov
stos
inc
das
out
lea
sbb
xchg
jbe
es
jbe
lret
test
imul
les
xchg
jae
mov
ret
daa
mov
ret
mov
jp
xchg
jl
shll
xchg
test
jne
xor
and
shl
fs
push
xor
sbb
sub
sti
outsb
add
js
rcrl
or
add
scas
cltd
in
mov
test
out
loope
les
lock
and
sub
cwtl
or
mov
popa
rol
push
mov
orl
mov
arpl
lock
jl
push
mov
stos
jl
cli
adc
sbb
xchg
fwait
push
aad
lea
or
mov
adc
mov
aaa
enter
pusha
out
out
xorb
ljmp
and
out
xchg
sar
pop
outsb
sbb
pop
insl
mov
mov
pop
lea
pop
sbb
aas
xchg
push
addr16
js
sub
xchg
scas
mov
pop
jg
xor
fnstenv
dec
adc
xor
mov
insb
sbb
dec
sbb
orl
repnz
stc
xchg
push
push
popa
dec
sbb
addb
clc
add
scas
fistl
inc
adc
ja
push
add
ja
sbb
fidivrl
xor
bound
sub
add
movsb
sbb
les
lahf
ret
sub
sahf
fcoms
inc
adc
dec
or
lods
push
aas
sarl
dec
gs
cmpsb
dec
lods
add
cli
cwtl
fcmovnb
gs
mov
xchg
xor
push
jno
mov
xchg
hlt
jp
lock
xor
out
fsubl
int
or
sub
add
outsb
inc
push
xor
push
mov
aad
fadds
pusha
jmp
pop
lods
mov
pop
cltd
daa
cmpsl
fcoms
out
mov
xchg
inc
jbe
ja
xchg
sbb
ja
pop
pop
cmp
or
test
div
rcll
pop
dec
xchg
stos
aas
imul
push
dec
and
mov
repz
jle
pop
aad
dec
adc
cmpsl
out
mov
mov
and
into
jmp
sub
xlat
arpl
ja
es
ficoms
push
cs
sbbb
ret
mov
or
fsubrp
jmp
aaa
cmc
in
sbb
jno
dec
cmpsl
call
jbe
mov
fdivs
cli
mov
out
insb
dec
and
xor
aaa
mov
mov
sbb
adc
ss
or
xchg
les
adc
mov
scas
lret
dec
mov
outsb
mov
inc
inc
cmp
pop
xlat
mov
push
pop
cli
fidivl
mov
aam
add
push
sub
sbb
fsubp
mov
lock
cmp
loopne
test
test
adc
rcrl
push
or
loope
lods
cs
sbb
shl
cmp
adc
lret
loope
pop
jns
sbbl
or
das
cs
repnz
aas
ficompl
std
mov
rol
gs
ror
inc
sbb
lea
cld
adc
add
insl
lods
out
adc
arpl
jecxz
bound
or
fdivrl
adc
int
xchg
outsb
loop
push
mov
dec
sub
add
jb
jp
jbe
icebp
jge
test
cmp
push
mov
insl
push
lea
jns
inc
jae
popf
out
and
adc
xchg
test
xchg
lret
cltd
into
in
xchg
loop
push
js
jge
popa
and
jl
imul
sbb
std
stc
out
cmp
cmp
loop
aam
dec
stos
sbb
dec
push
mov
pop
daa
cli
xor
pop
add
jne
jge
rclb
rcrb
add
mov
je
pop
sub
cmc
adc
addr16
cmc
xorl
gs
mov
arpl
testb
popa
lock
cli
rep
repnz
shlb
pop
xor
push
fnsave
addb
fmull
adc
fnop
cltd
jmp
mov
arpl
aam
movsl
adc
sbb
mov
jmp
jbe
aaa
and
inc
ja
jns
testl
dec
mov
or
pop
int
lods
leave
pop
cld
movaps
jmp
push
cmp
mov
lods
jnp
and
inc
pop
aaa
xor
clc
imul
dec
pcmpgtw
scas
insl
mov
notb
stc
in
lock
sbb
fsubr
push
lret
cld
fimuls
stc
jbe
aas
and
inc
hlt
ds
jno
add
xor
ds
or
cmp
dec
jno
cmc
fs
aad
xchg
cmpsb
mov
xchg
stos
xchg
jb
xlat
stc
jg
push
add
loopne
dec
inc
leave
mov
mov
fildll
aam
push
add
outsl
sti
xor
add
iret
mov
sub
pop
and
repz
ret
fwait
cmc
or
inc
mov
fucomi
ret
cmp
lahf
jno
hlt
inc
inc
ds
insb
int3
enter
add
dec
mov
cmc
jne
mov
adc
push
push
clc
ret
rorl
sbb
out
or
pop
daa
and
scas
cmp
cmp
xchg
mov
ret
stos
pop
pop
mov
sahf
nop
fmull
xchg
pop
sbb
or
mov
jns
orb
mov
imul
in
inc
lahf
xchg
jp
pop
mov
sahf
xchg
mov
adc
ror
pop
cltd
mov
cmp
js
cmp
imul
out
mov
aad
cmp
pop
sub
nop
mov
xlat
pop
or
sbb
pop
shrb
mov
mov
mov
lcall
or
pushf
enter
sbb
xorl
cli
mov
les
mov
mov
daa
adc
sub
ds
cmc
and
in
cmp
fwait
or
jle
repnz
lock
adcl
sti
inc
xchg
add
or
mov
xor
xor
cmp
mov
sti
sbb
in
or
loope
lods
xchg
adc
sbb
xchg
sub
xchg
loope
mov
sub
dec
mov
push
xchg
out
jne
sub
pop
xchg
shll
jmp
sbb
xchg
fcmovbe
mov
orl
in
cli
dec
and
xchg
dec
mov
call
scas
xor
std
pop
jle
adc
mov
mov
fs
dec
sbb
in
xchg
out
mov
sbb
dec
nop
pop
test
scas
ja
xchg
fldenv
add
push
popf
push
sbb
jne
xchg
xor
out
and
enter
or
aad
cmp
jle
hlt
fisttps
sub
cmpsb
mov
ret
sti
mov
pop
mov
dec
dec
iret
bound
mov
aad
movsl
jle
test
xchg
jmp
jge
adc
mov
cmpsb
jnp
lcall
out
add
loopne
in
imul
das
pushf
sub
ja
mov
push
jge
stos
push
xchg
addr16
fistpll
mov
popa
jg
fnsave
stos
sarb
jl
lcall
xchg
inc
mov
mov
add
pop
int3
xchg
mov
test
add
movsl
out
shr
xchg
or
dec
add
cmc
cs
xor
add
mov
dec
push
add
push
pop
mov
ljmp
pop
ficompl
xor
test
or
enter
iret
xor
add
mov
and
and
arpl
fmuls
mov
xchg
mov
aas
pop
jns
cwtl
pushf
mov
enter
xor
pop
lcall
jge
or
mov
or
inc
fsts
rolb
cld
hlt
stc
lret
xor
popa
xchg
lret
add
push
cmp
xchg
stos
jno
cmpsl
into
pop
xlat
push
sarl
sub
stos
mov
shll
or
mov
fcmove
divl
sub
adc
je
lea
jne
daa
or
fidivrl
stc
shrb
into
cmp
or
mov
jno
mov
adc
lods
push
clc
sbb
sub
jle
fisubl
scas
mov
cmp
cmp
stos
cmp
mov
mov
lods
dec
add
mov
cmp
push
icebp
clc
iret
lock
sbb
sti
sbb
xor
mov
fistps
xor
mov
addr16
cli
test
les
pop
and
les
jle
cmpsl
cwtl
add
mov
mov
sbb
mov
sbb
scas
nopl
mov
out
dec
cli
pop
dec
decl
aad
pusha
inc
int3
push
xchg
idiv
push
adcb
inc
mov
xlat
add
jmp
add
cmp
sarb
and
mulb
mov
cmp
fidivrs
out
jg,pt
roll
pop
mov
and
movsb
loop
cmpsb
icebp
mov
jae
repz
or
sub
outsl
cld
stos
in
insl
jle
rcr
sbb
push
stos
subl
enter
push
lret
insl
sti
loope
out
inc
xchg
mov
mov
push
stc
xchg
out
jp
fildll
mov
aad
jbe
and
outsb
jmp
fildl
cmpsb
imul
inc
jmp
ficompl
test
mov
mov
adc
sahf
aad
insb
aad
sti
mov
ret
or
lea
jno
adc
fmull
mov
mov
jns
mov
xchg
mov
test
mov
sbb
test
ficomps
inc
pop
sbb
mov
gs
xor
mov
je
push
inc
pop
or
add
sbb
mov
jbe
fdivrl
in
xchg
rol
inc
xor
pop
test
aas
cmp
jmp
pop
cmp
out
add
dec
dec
frstor
mov
ds
pop
mov
in
es
push
repz
daa
add
push
rorb
in
adc
cmp
es
loop
cld
inc
sub
and
ss
inc
fisubl
adc
inc
aas
iret
push
fadds
xor
out
sbb
jp
pop
or
xchg
xor
int
psubq
addr16
xor
or
clc
ds
outsb
mov
test
lret
lret
pop
mov
adc
jno
adc
mov
iret
in
fwait
fwait
jae
mov
xor
mov
sbb
in
adc
in
leave
daa
sub
jne
and
adc
movsb
aaa
inc
rorl
adc
frstor
orl
mov
mov
lahf
roll
iret
mov
mov
repz
inc
mov
mov
cmp
push
dec
xchg
and
fisubs
call
inc
add
jo
cwtl
dec
clc
push
or
iret
cltd
loop
xchg
xchg
mov
nop
sbbb
xor
jecxz
inc
sbb
je
jecxz
mov
mov
fcom
aam
mov
iret
in
inc
and
popf
loop
test
loopne
dec
and
xor
repnz
enter
push
mov
mov
out
int
sub
dec
xchg
mov
mov
ljmp
enter
cmp
cmpsl
pop
or
jbe
cmc
inc
lret
in
test
mov
jle
negb
mov
adc
xchg
inc
xchg
push
mov
mov
cmp
xchg
push
jno
and
xchg
push
dec
xor
into
test
push
cmpsl
push
and
add
push
xchg
adc
insb
negb
lret
sub
lret
sub
clc
cmc
ret
pop
add
dec
pushf
mov
xor
pop
movsb
and
jne
xchg
imul
daa
fldcw
lods
std
xchg
push
pusha
mov
inc
ret
clc
dec
or
push
inc
xchg
movsb
loope
std
andb
or
cmpsb
push
stos
jg
sub
repz
cli
push
test
fwait
xchg
fwait
ds
lahf
fbld
clc
xchg
inc
and
xorl
add
pop
repnz
jnp
in
adc
and
or
adc
jl
adc
xchg
mov
orb
loopne
jae
sub
adc
lea
fmul
pop
es
cmp
mov
mov
sbb
inc
xor
xor
rclb
and
inc
adc
cli
clc
ljmp
push
add
mov
or
push
rolb
push
out
sti
xchg
mov
inc
scas
pop
mov
gs
push
cmpsb
test
or
inc
das
pop
out
xorb
aaa
mov
aam
dec
ds
cmpsl
jmp
scas
aaa
cld
sti
daa
xchg
lret
ds
add
jp
xchg
jne
sbb
push
jnp
pop
adc
sarb
jecxz
aam
imull
mov
and
xchg
mov
mov
mov
popa
push
push
and
aas
les
mov
dec
jnp
pop
push
or
pushf
repnz
jb
pop
ss
push
or
in
rol
add
adc
xchg
mov
bswap
xor
adc
insb
ds
push
sbb
ret
iret
and
jg
and
iret
sub
inc
movsl
outsl
mov
inc
daa
jg
das
loope
cld
pop
out
adc
jbe
or
dec
cli
andb
jle
fstps
xchg
pusha
outsl
orb
stos
jecxz
sbb
jns
das
inc
sti
aas
into
pop
sbb
mov
dec
inc
rorb
inc
jo
adc
mov
xchg
mov
ja
call
mov
push
mov
jne
push
cmp
lds
test
pop
icebp
sub
pop
push
daa
jp
mov
and
imul
call
fisubrl
in
mov
inc
fsubrl
mov
mov
mul
addr16
fbstp
ret
lods
push
in
mov
adcb
stc
dec
imul
popa
jmp
loopne
and
xchg
sbb
lods
xchg
mov
jmp
shrl
add
iret
mov
xchg
repnz
cli
pop
clc
das
loope
in
push
xor
mov
mov
imul
fsts
jmp
in
outsb
or
cli
jne
loopne
add
inc
ljmp
dec
pop
out
sbb
jne
cmp
mov
or
sub
sub
jnp
mov
mov
inc
jns
push
lea
pusha
dec
out
ljmp
mov
push
push
ficoml
shll
mov
push
mov
pusha
cmp
pop
adc
xchg
test
mov
inc
or
mov
test
jb
pop
fsts
in
mov
pop
dec
sub
push
mov
xor
mov
loop
movsl
ret
hlt
cmp
mov
data16
mov
lods
je
arpl
pop
jmp
outsl
nop
cmpsb
push
sub
inc
and
out
mov
sbb
or
repnz
rcll
sahf
mov
sbb
sbb
dec
movsl
test
lret
aad
sbb
lahf
loop
pushf
aad
push
cmp
xor
int
xor
aam
xchg
lcall
bnd
in
stos
enter
lea
roll
inc
andl
ss
cmp
mov
lret
ss
out
cwtl
movsl
pop
xchg
mov
mov
xor
out
rcrl
hlt
xchg
xor
adc
dec
aad
fwait
in
mov
or
push
or
xor
sub
scas
jbe
and
push
cmp
adc
xchg
jl
cwtl
lods
xor
in
lret
mov
rolb
out
xor
adc
out
mov
xor
sub
pushf
sub
mov
xor
pop
push
mov
shll
pop
push
faddl
lods
push
stc
arpl
stc
fsincos
jmp
out
add
cmp
mov
in
stos
cmc
jp
cmp
cltd
and
inc
popa
push
pop
pop
flds
pop
jecxz
jne
lds
xchg
xchg
mov
jg
ret
ss
repnz
xchg
test
mov
mov
jl
sbb
loope
sub
dec
or
mov
hlt
push
lret
repnz
jge
mov
cmp
push
aas
loope
adc
xchg
lods
sbb
pusha
push
iret
xor
dec
cld
push
jg
mov
push
fsubrs
and
push
mov
xchg
pop
mov
push
jb
loopne
xlat
add
and
scas
loope
cmp
popf
sbb
jno
dec
mov
sub
jl
mov
pushf
sub
mov
mov
inc
push
cmpsl
insb
imul
or
jp
cmp
jno
fs
add
andl
lods
icebp
sub
mov
add
lods
adc
xor
mov
test
stos
enter
xchg
and
sbb
mov
incl
inc
xor
sti
pop
push
sarl
imul
test
in
jp
icebp
and
add
pop
dec
push
and
loope
lds
fisubrs
popa
cmpsb
rcrb
jmp
add
std
adc
push
cmp
dec
add
pop
sti
pop
nop
imul
cli
orl
ret
dec
dec
cmp
in
out
cmp
lock
lea
fcmovb
jmp
sbb
jle
je
mov
fld
popa
sbb
pop
push
adc
xchg
mov
adc
pop
inc
out
dec
fidivrl
stos
or
icebp
sub
loope
jb
scas
and
pop
and
xor
mov
mov
popw
movsb
cmp
pop
add
scas
push
fldcw
sub
pop
pop
repnz
scas
rorl
push
jp
pop
sub
mov
mov
int
and
push
xor
shl
pop
aaa
xchg
jmp
leave
and
dec
into
sub
push
cltd
shl
cmp
adc
adc
mov
xor
jbe
mov
adc
pop
mov
xor
xchg
lahf
xor
mov
out
or
cmpb
mov
push
imul
adc
rcll
push
cmp
jge
les
sbb
adc
int
cmp
test
les
call
cmc
test
mov
mov
outsb
xor
mov
ret
ja
xlat
jbe
sbb
pop
cltd
sbb
pop
sub
jb
xor
add
dec
xchg
dec
adc
shlb
jnp
and
pop
stos
fdivs
ja
xor
or
shl
mov
int3
gs
cmp
sbb
sub
jno
sbb
fiadds
or
test
mov
xchg
adc
test
ljmp
mov
arpl
subl
out
aad
rcrb
push
mov
cld
cmpb
orb
xor
cmp
mov
mov
pop
repz
lea
xor
xchg
dec
fistps
popa
js
fimuls
sbb
mov
cmp
pop
jp
imul
das
mov
addr16
jg
cmc
xchg
add
pop
int3
es
add
les
jno
jns
sub
and
loopne
sub
mov
pop
push
orb
imul
cli
mov
inc
repnz
xor
push
push
cmp
ror
add
inc
in
mov
out
fildl
and
mov
jnp
nop
in
pushf
in
loopne
mov
je
movsb
mov
mov
fisttps
sbb
repz
lret
or
jns
ljmp
inc
daa
add
mov
popa
mov
mov
fs
inc
mov
mov
cmovbe
and
lock
pop
ljmp
add
jg
aam
cmc
dec
rorb
push
leave
adc
cs
inc
mov
jge
in
mov
or
dec
sbb
imul
xor
ret
mov
dec
pop
js
fisubrs
sub
test
xor
dec
mov
dec
loop
loop
rolb
inc
data16
setbe
mov
das
xor
fs
shll
loop
fistpll
xchg
mov
jno
or
dec
mov
push
pop
mulb
pop
sbb
sub
out
lock
pop
icebp
shlb
fistpll
fcoml
cmp
xchg
inc
inc
and
mov
or
cmp
aam
inc
add
push
dec
push
imul
inc
cli
out
or
movsb
pop
adc
xchg
and
jno
das
call
inc
lds
push
in
mov
sarb
inc
call
je,pt
cltd
xchg
sahf
pop
fistps
stc
out
mov
jmp
jno
pop
push
pusha
jle
pop
pop
fsubl
mov
movsl
jbe
daa
mov
scas
add
dec
lods
sub
and
lcall
iret
loop
xchg
shll
outsb
mov
pop
adcb
cmc
pop
cltd
stc
sbb
lds
push
clc
xor
push
inc
mov
lahf
dec
out
adc
out
dec
inc
rolb
stos
or
or
pop
mov
aaa
push
mov
lret
and
dec
inc
mov
jno
push
mov
or
pop
aaa
inc
cltd
push
sub
jb
ds
or
clc
or
sti
mov
push
je
and
insb
xorb
and
push
enter
jecxz
inc
sbbb
test
jmp
cmpb
popf
sahf
add
jnp
push
xchg
cmp
or
mov
jno
call
cs
call
cmp
cmp
xor
insb
xchg
testl
test
jo
cmp
cmpsl
pusha
pop
loopne
dec
inc
int
mov
xlat
pop
cltd
jp
mov
mov
inc
out
adc
dec
sub
inc
mov
inc
cmp
enter
and
mov
arpl
daa
aas
cmp
adc
ss
idivl
add
loop
cmp
clc
mov
lock
hlt
in
jmp
inc
mov
mov
fs
xor
mov
push
cmc
sahf
fcompl
mov
dec
popf
cmpsl
sub
and
add
in
arpl
ret
shll
sahf
add
loopne
dec
in
out
add
lahf
cmpsb
push
dec
lods
pop
jno
in
stos
push
jecxz
jnp
ljmp
jb
and
sti
js
cli
xor
shrb
inc
cmp
nop
adc
orb
xor
sahf
fisttpll
rcll
repnz
jmp
sti
xchg
mov
adc
jp
cltd
scas
fldcw
cmp
fidivs
mov
lods
mulb
mov
xor
sbb
sub
cmp
xchg
mov
add
pop
test
or
dec
mov
mov
data16
cmpsl
xor
cmp
cmp
mov
jb
mov
dec
or
mov
dec
and
jge
jns
sub
mull
fdivr
adc
xchg
arpl
sub
mov
leave
invd
jge
in
cltd
fwait
daa
cmp
adc
mov
sbb
pop
add
mov
jae
popa
int3
je
test
jle
inc
fiadds
sub
scas
sbb
clc
inc
lea
repnz
xchg
lock
push
and
aad
inc
add
sub
movb
sub
sbb
push
insl
dec
mov
lret
adc
inc
or
fbstp
outsb
pop
mov
push
and
mov
movl
insl
adc
outsb
cmpl
mov
pop
mov
adc
insb
xchg
mov
adc
jae
shlb
inc
adc
pushl
cmp
mov
movsl
jb
rcll
sti
pop
jnp
pop
enter
jmp
aam
push
and
fsubl
inc
jbe
lock
dec
data16
cmp
inc
push
hlt
dec
insl
out
aas
and
aaa
aaa
jg
add
sbb
add
cmpsb
lds
leave
mov
lret
cmp
push
lcall
aad
cs
loope
pop
loopne
jg
dec
pusha
test
lahf
xor
mov
push
ret
cmp
setne
enter
popf
nop
jmp
movsl
mov
into
notl
mov
pop
mov
xchg
push
cld
inc
xchg
dec
xor
clc
call
dec
ss
insb
push
ret
divb
loopne
pusha
nop
pop
ss
and
sub
call
pop
jl
je
mov
fs
in
je
arpl
mov
test
daa
and
sbb
sub
mov
lcall
cltd
movsl
js
scas
jnp
dec
pop
fsts
enter
ficompl
push
xor
jne
cltd
cmpl
ss
mov
mov
lds
pushf
lcall
jle
cmp
sbb
ds
inc
ljmp
add
jecxz
xchg
out
cmc
adc
cmc
or
test
pop
or
adc
jg
add
push
jbe
inc
ds
sti
dec
sub
inc
mov
adc
mov
gs
addb
or
pop
outsb
rcr
movsl
pop
rorb
adc
push
xchg
je
sbb
xchg
cmpsb
jne
es
mov
sbb
sub
add
ret
pop
inc
sbb
adc
scas
stc
mov
add
adc
stos
cs
pop
and
int
stos
shlb
stc
mov
hlt
cmp
push
mov
call
aad
das
xorl
adc
or
xor
add
test
cwtl
adc
enter
stc
mov
xchg
xor
dec
ja
test
xor
mov
xchg
adc
pop
add
or
mov
arpl
notl
dec
cmc
xor
fstps
jle
add
cmpb
fucomip
jge
dec
add
push
push
cmp
or
enter
inc
test
sahf
xor
mov
stos
icebp
add
dec
xchg
jmp
jge
das
push
xor
and
xchg
leave
sbb
pop
or
iret
xlat
ljmp
jl
fsubrp
inc
js
ficomps
mov
xchg
in
adc
pop
arpl
pcmpeqd
test
inc
icebp
xchg
jmp
aam
dec
fwait
mov
cmp
loop
and
adc
int3
pop
inc
mulb
pop
popa
jmp
mov
daa
sahf
push
add
lcall
movq
cmp
pushf
cmp
inc
or
cmpsl
lret
cmpl
das
sbb
adc
adc
jne
flds
inc
inc
jno
sub
or
xlat
or
mov
arpl
mov
into
cmp
pusha
pop
je
add
cmp
push
icebp
adc
out
adc
sbb
mov
inc
cmp
and
sbb
iret
shr
data16
jno
adc
sbb
lahf
mov
loopne
push
xor
sbb
xchg
xor
std
popf
xor
int
filds
adc
xor
ja
pop
jecxz
imul
arpl
jne
out
mov
adc
jne
sub
jae
pop
mov
sub
pop
xchg
movsb
push
pusha
notl
sbb
icebp
mov
push
inc
sbb
adcl
jbe
jb
push
mov
test
mov
add
out
cmp
xchg
dec
mov
xor
shrl
je
xchg
cmp
adc
lret
js
push
xor
jp
pop
xchg
push
xchg
test
repnz
jns
xlat
and
mov
ljmp
test
inc
pop
pop
js
ljmp
adc
jbe
jo
and
cwtl
out
pop
ds
adc
cmpsl
sti
lahf
daa
xchg
jnp
sub
sbb
fsubs
pop
xchg
mov
cld
lret
addl
mov
ret
mov
loope
xor
adc
push
pop
stos
inc
add
cmpsb
stc
in
sbb
push
jle
lret
adc
repnz
mov
and
mov
ljmp
aas
mov
mov
inc
add
jns
sub
je
xor
ret
sarb
test
push
mov
add
loope
fucomip
jnp
mov
pop
or
xor
mov
fimull
test
call
dec
inc
scas
lds
test
cmp
dec
xchg
mov
shlb
or
pop
adc
xchg
inc
sub
cmp
mov
mov
lret
push
inc
sub
repnz
insb
fwait
mov
fmull
xchg
or
sbb
add
out
mov
shrb
fmull
mov
in
arpl
imul
out
ljmp
sub
cwtl
arpl
fidivl
aas
inc
mov
rclb
add
fs
aam
insl
jecxz
push
cmp
sbbb
int
sbb
fstpl
mov
loopne
xchg
std
ret
xor
ss
pop
mov
fidivrl
fstpt
xor
pop
loopne
or
pop
dec
imul
ljmp
sub
add
push
pop
mov
fdivrl
ret
mov
jns
stc
scas
outsl
out
or
ljmp
xchg
fsubrs
and
add
cmp
rcrb
outsb
arpl
mov
icebp
stc
hlt
mov
imul
or
das
sbb
prefetch
or
adc
jbe
or
fcomip
or
inc
xlat
daa
add
xchg
xor
lock
mov
xor
shrb
stc
add
loop
xchg
jbe
inc
sbb
xor
fs
out
dec
mov
mov
mov
loopne
adc
mov
repnz
stos
and
xchg
sbb
pop
aaa
xchg
push
and
mov
fsubrs
sbb
hlt
cmc
das
rorl
cltd
fbstp
mov
sbb
stos
repnz
lcall
xor
sbb
xchg
sub
push
xlat
outsl
push
aas
movsb
fimuls
xchg
push
cld
shl
fwait
aaa
icebp
leave
xchg
and
stos
adc
call
push
lahf
mov
mov
xchg
and
inc
ds
nop
jnp
mov
dec
jecxz
aad
neg
movsb
mov
push
insl
sub
add
fbstp
add
les
push
cmp
push
and
sub
int3
lds
in
pop
jge
pop
ljmp
jb
sbb
ret
std
and
adc
dec
shl
sub
test
cmp
jae
int3
sti
ficoms
inc
sub
mov
jne
stc
mov
or
stos
imul
test
out
aad
sarb
push
pop
jg
leave
cmp
dec
sbb
add
xchg
hlt
sbb
lahf
inc
jecxz
lea
repz
cmp
ret
mov
out
into
out
out
and
xor
jne
aad
cmp
pop
lret
leave
ret
or
aaa
sbb
mov
sub
subl
rcll
repz
outsb
into
cmp
enter
adc
fadds
shll
and
mov
sti
pop
jp
inc
push
in
pop
sub
push
sub
sub
scas
rcl
mov
stos
fidivl
cmp
scas
out
pop
mov
insb
int3
or
in
jge
dec
push
inc
inc
fisttps
dec
lcall
pop
aam
insb
pop
jg
ja
xchg
cmp
pop
mov
push
in
lahf
inc
in
aas
aam
in
fcomps
in
dec
addb
xchg
mov
fsts
adc
add
dec
mov
sub
xchg
es
ss
inc
push
stos
push
mov
mov
inc
inc
int3
push
pop
mov
sub
in
fbld
jp
sub
cmp
sub
mov
xor
fnsave
rcll
clc
mov
mov
neg
mov
dec
add
mov
mov
or
push
int
inc
popa
jl
mov
xchg
loopne
loope
adc
push
mov
mov
sub
ja
icebp
add
adc
pop
jae
or
test
insb
or
or
adc
ret
or
xlat
xor
cs
sub
xor
mov
xchg
repz
scas
inc
xchg
std
add
mov
js
push
popa
bound
push
out
ret
push
lcall
mov
inc
cmpsl
xor
inc
leave
lods
and
nop
xor
stc
mov
cmp
cmp
xor
pop
fistpll
fstpt
xlat
push
fwait
cwtl
jne
cs
daa
lock
pop
fisttpl
jl
sub
rclb
pop
or
cmp
ret
xor
repz
xor
sahf
pop
pop
ret
jmp
gs
push
jae
stos
xor
jo
cmpsb
cmpsb
repz
mov
pop
inc
fldcw
xchg
cmc
and
lds
cld
push
scas
sub
mov
out
mov
push
int3
cmp
jns
cmp
mov
cmc
and
sub
inc
jne
inc
or
cmp
mov
jmp
loope
sarb
xchg
push
and
pop
mov
add
je
movsb
das
mov
pop
add
xor
push
lea
sub
cmp
push
xor
pushf
dec
pop
int3
add
mov
daa
mov
shrb
sbb
xchg
or
addr16
out
jle
jb,pn
xlat
ljmp
cmc
dec
ret
divb
std
push
mov
fs
out
aas
sti
or
js
xor
addr16
int3
sarb
add
cmpsl
stos
xor
xor
xor
hlt
xchg
and
add
or
mov
add
dec
inc
sbb
mov
roll
xchg
aas
nop
mov
xchg
and
mov
sti
dec
sub
pop
or
out
mov
mov
incl
bound
call
inc
mov
js
sub
xchg
mov
mov
faddp
push
pop
outsb
fs
mov
ja
mov
mov
add
js
add
cmp
arpl
sub
fisubs
and
in
pop
adc
fstp
loopne
adc
nop
cmp
movsb
dec
out
xor
add
cli
cmpsl
ja
jne
nop
jb
je
daa
out
jl
xor
js
inc
push
out
rolb
or
pop
cmc
jae
cld
movsb
push
aas
xchg
fiadds
lods
add
insb
cmp
sbb
repz
pop
jnp
adc
roll
sbb
outsl
stos
sbb
clc
int3
xchg
inc
mov
cmpsb
lret
outsb
xor
ret
mov
loope,pn
insb
mov
int3
js
popa
push
sbb
jno
push
repz
shll
out
addr16
fldenv
ret
pushl
imulb
in
rcll
icebp
jl
lcall
inc
jl
in
adcl
lock
mov
and
outsb
stc
xor
pop
jne
movd
loop
filds
and
out
dec
pop
test
mov
loop
in
push
dec
xor
ret
fisubrl
inc
stos
sti
es
icebp
clc
lahf
call
sub
popa
aaa
dec
pandn
cmp
mov
sbb
pusha
in
stos
decb
jno
imul
or
in
outsb
jae
fadd
sub
push
bound
test
dec
fldenv
insl
fdivrl
cwtl
int3
bnd
push
aas
popa
shll
mov
jl
repnz
rcrb
mov
cmp
movsl
inc
xor
mov
and
insl
pop
pop
cwtl
dec
cmp
jnp
mov
lods
jle
xchg
xchg
mov
out
add
addr16
hlt
dec
mov
dec
call
dec
push
mov
and
loop
jmp
mov
test
mov
pop
inc
pop
mov
or
movsb
iret
adc
js
dec
pop
frndint
fucomip
loop
js
out
xchg
nop
lods
out
lock
adc
sbbb
andb
rclb
movsl
add
call
xor
jmp
rorl
push
aam
iret
cmp
cmp
jbe
jno
out
lret
or
or
daa
sub
or
popl
dec
cmp
mov
pushf
mov
xchg
cmp
out
popf
pop
pop
mov
in
rolb
in
mov
or
jae
xorb
sbb
mov
push
loop
push
mov
pop
adc
jae
pop
loopne
out
aas
int
jmp
add
das
test
mov
push
mov
addr16
sbbb
push
out
jg
inc
pop
stos
adc
std
movsb
aad
ss
scas
xchg
pusha
mov
xchg
xor
cli
lds
or
ds
movsl
lahf
jle
xchg
cmpsl
xor
sahf
mov
dec
inc
xlat
rcr
mov
iret
leave
loop
cmp
sbb
sub
inc
xchg
aad
xlat
ljmp
add
repz
jno
push
add
lods
ja
sbb
sti
xor
lahf
popf
ficompl
fmuls
pop
push
stc
sahf
outsl
pop
add
mov
rorb
and
xor
nop
popf
test
aaa
jge
mov
ljmp
je
inc
mov
xchg
or
dec
and
sbb
pop
adc
je
std
mov
mov
sti
mov
push
jle
mov
fnsave
fildl
rcrb
ret
pop
lods
cmp
rclb
sahf
test
push
in
icebp
sub
mov
fisubrl
leave
arpl
out
insl
icebp
and
ret
xchg
aam
push
push
and
out
inc
mov
and
fcompl
add
lods
insl
dec
lret
stos
sub
lock
sti
in
repnz
mov
pushf
jle
push
add
mov
test
int
ret
pop
out
arpl
fwait
pushf
lahf
icebp
rcrb
xchg
and
adc
adc
int
adc
inc
mov
ss
sub
not
jp
sub
xor
icebp
or
enter
jmp
mov
std
mov
xor
sub
sbb
movsb
outsb
cltd
add
mov
ss
mov
pop
into
aaa
daa
nop
lea
push
and
lea
or
push
jl
dec
cmp
sahf
sbb
pusha
sub
inc
sub
push
pop
jns
lahf
mov
jmp
icebp
mov
push
stos
hlt
pop
lret
mov
in
jnp
dec
xor
pop
rorl
sbb
mov
out
dec
popa
or
sub
imul
cmpsl
mov
or
and
lahf
or
lds
jnp
lods
out
fwait
push
test
mov
cmp
xlat
and
stc
popa
add
adc
sbb
jbe
rorl
daa
clc
scas
sysenter
push
lds
sahf
cs
adc
mov
mov
pop
push
ljmp
sub
out
stc
mov
movsl
out
sbb
ret
jmp
jecxz
fdivrs
pop
adc
add
mov
xchg
jl
lcall
xor
sti
ss
leave
rolb
sahf
dec
ljmp
out
and
fimull
xlat
int
push
cmp
dec
xchg
nop
into
imul
loopne
pop
pusha
popf
daa
inc
test
aam
xchg
dec
scas
std
mov
in
xchg
push
lock
cli
dec
dec
loopne
fisttpll
push
fnstenv
lcall
es
clc
mulb
inc
adc
sahf
aad
sbb
inc
mov
inc
mov
cmp
daa
shll
stos
out
adc
pop
mov
xor
jbe
fdivs
sbb
in
and
sub
fnsave
lods
sub
cwtl
dec
ret
lcall
push
xor
push
ror
inc
mov
xchg
out
in
ljmp
pop
sti
in
xchg
adc
cmp
cwtl
je
adc
or
push
adc
pop
sub
cld
insb
daa
mov
outsb
sbb
mov
sub
negl
or
sub
adc
imul
roll
inc
jmp
xchg
aam
inc
and
ficoml
push
out
push
sbbl
sahf
jle
add
fimull
or
jbe
cmpsb
sbb
push
cmpsl
or
push
outsl
in
sti
std
pop
fiaddl
mov
fidivl
imul
jae
jno
sub
jne
lahf
adc
xlat
cmp
mov
sub
jns
and
cmp
pop
out
cwtl
ss
insb
outsb
cld
lcall
or
jl
jnp
and
ljmp
clc
js
loop
aaa
push
in
addps
das
mov
inc
in
dec
push
mov
xchg
adc
sahf
cmpsb
mov
ret
push
adc
movsl
or
out
mov
popa
icebp
icebp
dec
xchg
loope
mov
push
inc
sbb
mov
xchg
push
sbb
push
out
loope
sbb
mov
movsb
mov
mov
in
loope
lret
jecxz
add
mov
mov
daa
xchg
dec
leave
mov
rorb
pop
stos
ret
faddl
and
pop
movsb
ret
jge
test
repnz
and
in
mov
sbb
jl
shrl
xor
cld
enter
aam
aad
adc
into
es
fiaddl
fistpl
sahf
cltd
mul
js
dec
aaa
stos
mov
dec
push
icebp
xor
push
cmp
movsl
or
xchg
sbb
lret
inc
and
aad
or
push
mov
popf
push
lret
pop
scas
or
mov
cmp
xchg
cmc
pushf
pop
repnz
pushf
pushf
dec
pop
imul
dec
hlt
stc
inc
mov
gs
inc
inc
call
push
or
cld
inc
imul
sahf
mov
jo
in
push
fwait
insb
cmp
outsl
icebp
sub
sbb
mov
sub
sti
orb
scas
imul
jo
inc
cltd
sti
arpl
js
sub
adc
cwtl
popa
lahf
jno
insl
mov
mov
shlb
sahf
and
and
pop
dec
mov
sti
mov
pop
push
ja
jae
adc
stos
adc
push
mov
mov
and
aad
insl
xchg
std
repz
sahf
fnstsw
out
lock
and
ret
sahf
stos
fidivrs
inc
leave
fisubrl
test
mov
nop
nop
dec
xor
mov
js
sub
sub
mov
mov
aad
mov
xor
int3
mov
insl
ds
imul
sar
sbb
inc
test
mov
push
subl
nop
imul
daa
in
add
push
xchg
mov
insb
and
and
pop
mov
push
jno
in
test
test
sub
outsb
stc
dec
mov
in
push
movsb
scas
jge
or
fdivrs
gs
sbb
pop
imull
ljmp
jno
aad
mov
xor
stos
and
push
mov
xor
xor
sbb
fcmovnbe
sbb
dec
out
mov
sbb
sub
pop
cmp
cmpsb
add
or
lea
mov
jle
addr16
cmp
rorb
cs
test
xor
jb
lret
loope
das
cmpsl
fcoml
out
loopne
lret
jg
push
jmp
add
outsb
mov
adc
repnz
and
stc
andl
sar
xor
push
inc
and
dec
cmp
cltd
mov
cwtl
insl
andb
dec
push
in
pushf
xor
push
sub
daa
dec
mov
std
add
pop
sub
sti
cmp
mov
hlt
push
cmp
xor
mov
cmc
add
in
mov
sahf
add
and
cmpb
ss
mov
add
arpl
jae
ret
insb
xchg
lcall
pop
add
push
adc
das
rolb
mov
lcall
xor
arpl
scas
fdivl
es
outsl
int3
cmp
dec
or
test
fwait
int3
push
dec
fneni(8087
push
cltd
push
mov
cmp
push
sub
repz
nop
les
test
xchg
inc
test
push
pop
insb
lret
mov
int
sub
sbb
adc
mov
push
push
ss
lahf
xchg
xchg
mov
dec
sbb
in
mov
pusha
and
out
push
loope
inc
shll
dec
adc
xchg
jp
pusha
pop
lods
push
in
orb
in
xor
push
fwait
insb
mov
cmp
setae
push
sbb
pop
imul
test
push
sub
rcl
popf
adc
pop
int3
sbb
lods
add
lock
push
fdiv
lods
xor
jne
mov
and
dec
dec
pop
push
outsl
pop
fsubrs
clc
cmp
mov
cld
dec
mov
dec
fiaddl
scas
outsl
xchg
imull
fwait
pop
out
mov
testl
mov
xor
dec
sub
loopne
in
jecxz
mov
shlb
xchg
cmp
std
sbb
fcomi
aam
xlat
test
inc
lods
jl
mov
sbb
fsubr
fndisi(8087
mov
out
xor
cmp
jg
sahf
xchg
jecxz
loopne
fwait
leave
and
fcoms
cmpsl
sub
in
sbb
in
mov
adcb
test
sti
mov
aas
mov
mov
jne
lret
fmul
or
sbb
arpl
test
mov
pop
loopne
ror
sub
in
fcmovnbe
push
push
in
arpl
mov
hlt
xchg
into
ret
mov
and
dec
pop
dec
inc
dec
popa
jecxz
adc
lret
aam
mov
mov
imul
sahf
mov
add
insb
inc
cmp
push
test
mov
sub
pop
jge
add
out
stos
sub
mov
mov
xchg
xor
dec
bound
jmp
dec
dec
lock
dec
inc
vmovups
pop
or
mov
sub
pop
mov
cld
pushf
mov
sub
jmp
cmpsl
jne
adcb
movsl
ret
xchg
pop
pop
xlat
call
clc
or
aam
dec
mov
cmpsb
mov
xchg
push
xchg
cmpsb
lock
add
dec
mov
imul
out
cmp
shrb
dec
and
mov
xor
outsb
pop
lods
add
ret
cmp
stos
push
dec
inc
inc
add
lods
pop
pop
pop
outsb
fistpl
std
mov
rep
fdivl
mov
js
jbe
lds
movsl
in
lahf
inc
pop
mov
clc
xchg
pop
dec
cmc
aaa
or
and
push
test
jge
push
and
sub
lds
xchg
mov
jge
or
insl
jae
pop
inc
adc
jl
mov
movsb
push
mov
fsubrl
add
push
jae
sbb
sbb
enter
shll
shl
movsl
decb
pop
pop
pushw
mov
cmp
xchg
add
mov
and
ds
mov
dec
insb
aas
repz
roll
xor
and
fdivl
sbb
add
pop
cmp
inc
rorb
in
flds
cmp
rcr
or
fbld
push
pop
mov
aam
lock
jge
xor
test
add
dec
xor
and
lds
popf
or
enter
lret
jg
addr16
out
dec
in
xor
mov
repz
jle
ds
jmp
jae
mov
mov
out
outsl
scas
aas
fs
lds
or
mov
sub
addr16
adc
or
aad
fs
or
sub
xor
idivl
adc
popf
enter
cwtl
jmp
cld
std
loop
pop
or
adc
loopne
jo
ja
push
mov
adc
dec
inc
shlb
mov
jmp
test
mov
aaa
jg
mov
cmpsb
and
jbe
jg
scas
in
xchg
sbb
in
mov
or
fldl
cmp
and
or
pop
xor
jge
lret
out
push
in
shr
push
sahf
int3
cmp
xchg
cmp
and
popf
cmp
test
xor
pusha
stc
jae
pop
outsl
pop
outsb
inc
xchg
inc
push
es
jbe
inc
pusha
mov
mov
adc
cmp
push
add
int3
mov
sbb
jb
cmpsl
xchg
sbb
push
sbb
aas
jecxz
jns
adc
ret
jnp
iret
leave
insl
ret
mov
jg
jae
xchg
lea
je
adc
movsb
lahf
or
in
inc
pop
fs
xchg
cmpsb
fwait
and
jge
lods
mov
ret
xor
fs
mov
jle
js
mov
cmp
hlt
cmp
sub
scas
jae
les
popf
addr16
push
cli
fisubrs
cld
repnz
xchg
mov
pop
add
mov
push
cli
jns
in
adc
sbb
daa
inc
push
add
setns
filds
lahf
imull
jns
ja
push
mov
sub
mov
ja
stc
testb
lret
arpl
outsb
inc
xchg
dec
jmp
fcmovne
push
sbb
test
ja
imul
lods
pop
or
jg
or
repz
aas
insl
sbb
lcall
or
mov
lds
dec
iret
sbb
push
out
jecxz
lock
xor
cmp
fmuls
sub
test
sub
inc
cmp
aam
js
adc
ja
push
std
pushf
pushf
shrb
test
stos
into
out
inc
mov
pop
lock
and
dec
mov
enter
js
test
push
jmp
incl
cmc
fidivrs
push
sbb
imul
jo
ret
inc
adcl
adc
mov
repz
sub
test
test
in
aaa
sub
insl
movsl
cmp
std
into
xor
push
xchg
mov
test
pushf
mov
test
in
mov
sahf
and
mov
inc
addr16
xlat
sti
push
push
shlb
sub
cmp
xor
jo
sub
or
jo
cmp
xchg
fimull
push
pop
divl
pop
imul
pop
testl
in
ret
orl
fiadds
icebp
das
fwait
rorl
mov
mov
cmc
rol
inc
inc
cld
fs
mov
fistpl
xchg
xor
inc
and
movsl
jb
mov
bswap
dec
push
sub
lret
lret
mov
or
xchg
cmpsl
movsb
rorl
push
int
test
addr16
mov
jnp
daa
push
xchg
lds
push
mov
popf
dec
add
ficoml
mov
int3
mov
mov
and
addr16
cwtl
cwtl
push
std
jb
xchg
mul
jae
sbb
lret
ljmp
test
test
cmp
mov
lods
xchg
lods
mov
xchg
adc
adcl
lods
cmp
sub
xchg
jge
and
xor
mov
insb
jl
sti
cmp
jle
jb
inc
rclb
int
jmp
or
out
jge
add
and
push
jbe
xchg
sub
outsl
insl
xchg
jne
mov
int
inc
enter
or
hlt
mov
mov
add
rolb
int3
mov
add
adc
scas
fabs
push
fwait
push
test
jl
sbb
push
out
mov
cmp
imul
lods
jmp
sti
test
into
adc
xchg
incl
lea
pop
xor
fistl
nop
imul
xchg
pop
fadd
add
cltd
das
mov
cmp
ffree
dec
or
jb
stc
and
mov
cmp
scas
xlat
and
adc
cs
insb
mov
jp
shll
xchg
movsb
push
xor
mov
pop
cmc
xor
outsb
add
push
in
outsl
lret
aaa
loop
dec
mov
stos
cmpsb
pop
dec
ss
stos
sti
lahf
sarl
pushf
push
outsl
xor
bound
in
push
aam
or
loop
idivb
scas
sub
into
push
ret
push
aad
adc
hlt
push
les
jno
or
mov
lret
mov
cmp
or
push
call
sub
sub
cmc
js
outsl
pop
sti
adc
xchg
jnp
inc
or
or
ds
jbe
xchg
or
dec
ljmp
inc
fucom
aas
mov
cmp
shrb
sbb
sbbb
div
add
mov
or
xchg
in
outsb
shl
mov
mov
rorl
mov
jecxz
iret
or
sbbb
popf
out
scas
paddw
loope
push
mov
sbb
mov
dec
loop
adc
outsl
push
nop
ret
push
ficompl
repnz
xchg
push
clc
hlt
sub
pop
imul
lods
int
push
adc
loopne
mov
mov
ljmp
cs
jg
inc
mov
orl
loope
fsubs
mov
movsb
dec
sahf
add
mov
add
dec
xor
aas
test
cmp
add
into
insl
into
cmp
push
jbe
stos
imul
push
cmp
mov
push
and
push
mov
imul
in
adc
fstps
lock
aaa
bnd
in
addb
icebp
dec
outsl
sbb
out
xorl
rorl
jo
sbb
inc
fstpt
mov
push
outsl
rolb
jbe
aam
stos
test
popa
xor
sub
jecxz
divb
ss
jns
mov
scas
sub
clc
xorl
or
call
rclb
icebp
push
ds
mov
popf
inc
jl
loop
cwtl
outsb
and
dec
std
xchg
sbb
pop
xor
push
sbb
mov
mov
loop
int
mov
pop
mov
push
popa
push
sub
loop
mov
test
pop
push
mov
adc
and
jle
xchg
imul
dec
roll
pop
mov
int
js
fmuls
shll
out
xor
dec
cwtl
cmpsb
cmp
outsb
push
movsb
dec
jb
out
and
cmp
and
push
push
aaa
cs
push
andl
ds
push
dec
jb
xor
je
loope
lahf
out
adc
mov
sbb
push
out
xchg
jmp
dec
out
push
loopne
mov
std
mov
hlt
stos
mov
mov
sub
in
outsb
sbb
adc
adc
addr16
int
jle
adc
xor
mov
nop
loop
pusha
lods
mov
mov
out
xor
icebp
mov
push
and
and
mov
jae
cs
inc
push
in
arpl
push
gs
pop
mov
testb
xchg
xchg
dec
loopne
cmpb
push
inc
mov
jne
testb
adc
sbb
mov
fcmovnu
push
aas
pop
mov
insb
sub
mov
call
mov
inc
or
xchg
imul
push
popa
jp
icebp
dec
jle
ss
xor
shlb
mov
mov
stos
fnstsw
es
cmp
or
fwait
and
out
and
into
mov
mov
push
es
mov
dec
sub
add
mov
ss
adc
imul
in
xor
push
add
sub
ljmp
movsl
fmuls
ds
pushf
aaa
dec
jnp
jg
dec
add
sub
jecxz
xchg
sub
shl
hlt
loopne
test
fdivl
or
loop
xchg
xor
cmc
push
mov
adc
and
pop
mov
loopne
js
push
mov
push
jns
in
xor
pop
aad
adc
dec
jg
out
ds
sbb
sub
jno
outsl
cmp
fldcw
adc
dec
dec
cmp
mov
rol
or
aas
pop
jecxz
lods
fcmovnu
rcl
xor
add
xor
outsb
cmpsb
sbb
filds
pusha
les
xchg
adc
out
xchg
or
sti
mov
repnz
fcomps
in
pop
mov
mov
out
pop
dec
xchg
mov
mov
in
imul
test
sbb
and
cltd
pop
pop
cmp
into
or
test
add
or
push
imul
push
mov
jl
and
out
mov
dec
adc
mov
pop
dec
xor
lea
mov
jbe
mov
shr
out
cwtl
inc
and
int
push
add
cs
js
fs
fcmovbe
inc
call
pop
iret
enter
dec
mov
adc
or
fwait
inc
scas
mov
xor
cmc
cmp
arpl
adcb
cld
and
rcrb
cmpsb
ljmp
sarl
sbb
fldl
push
mov
jp
dec
mov
outsb
cld
ss
pushf
fiaddl
fadds
pop
lret
xlat
dec
mov
test
subl
inc
cld
outsb
mov
push
outsb
lret
aas
arpl
mov
es
outsl
push
xor
into
push
xchg
subb
inc
xlat
jmp
sub
ljmp
push
in
shr
cmc
int
push
in
cld
mov
push
cmp
xor
gs
adc
insl
jle
jmp
scas
dec
popf
inc
in
inc
push
cmc
xor
mov
and
sub
ret
dec
test
mov
jo
inc
cmc
inc
outsl
sti
xchg
pop
pop
fwait
lret
pop
in
fwait
push
pop
cmp
imul
cmp
shll
mov
outsl
mov
dec
and
mov
add
sbb
call
cmp
dec
into
add
fwait
sbb
out
xchg
jle
fisubrs
aam
sub
jns
push
lea
add
cmp
sbb
pop
sub
inc
icebp
xor
add
aas
or
hlt
jl
test
xchg
clc
rcrb
cmpsl
rolb
test
push
cmp
or
lds
jnp
arpl
inc
adc
cmc
dec
adc
pop
in
movb
je
add
loope
mov
mov
mov
push
jbe
test
adc
cmc
in
mov
addr16
xchg
xchg
clc
cmp
and
jp
jecxz
cwtl
xchg
mov
data16
cmp
hlt
add
and
rorb
ret
out
gs
inc
dec
mov
sub
push
fldenv
test
dec
test
push
pop
imul
mov
adc
ss
imul
ljmp
push
jmp
sti
jae
jbe
sarl
fistpl
call
shlb
sbb
push
mov
iret
sti
and
int3
clc
mov
mov
mov
scas
xchg
push
push
out
std
add
jecxz
out
stc
xchg
mov
cmp
push
mov
adc
mov
xchg
adc
aam
mov
or
add
loop
bound
into
push
xor
sub
daa
xchg
pop
in
pusha
movsl
adc
arpl
mov
jp
mov
std
xorl
or
push
imul
mov
aam
mov
test
and
sub
ret
or
repz
into
sub
adc
data16
push
xor
lcall
or
xor
inc
mov
add
bound
bswap
mov
and
dec
inc
into
push
and
pop
sub
dec
xchg
movsb
movsl
sbb
and
lcall
push
push
ljmp
mov
inc
arpl
insb
push
leave
inc
push
mov
ret
or
bound
push
ret
cmp
xorl
movsb
xor
into
xchg
lods
push
cmp
jg
test
dec
lret
and
rcll
xor
lock
cmp
pop
and
add
ficoml
jnp
add
es
fptan
int
fs
cmp
pop
xor
shll
dec
inc
es
outsb
mov
mov
sbb
inc
jmp
xchg
lock
mov
ficompl
pop
icebp
es
sbb
repz
push
jno
ljmp
sbb
cmp
je
ja
push
icebp
sti
cwtl
aas
gs
divb
sbb
rorl
inc
rorl
ror
rcr
inc
lret
jns
ret
pushf
xchg
mov
pop
insb
jg
rcrb
movsb
pop
mov
add
xor
cmc
mov
cld
pop
xor
lock
pop
pop
push
xchg
pop
inc
cli
sbb
lret
loopne
xor
cmp
xor
mov
sub
adc
js,pn
push
jo
xor
and
jp
out
jbe
cld
adc
ret
aaa
fs
iret
leave
adc
and
int
shr
jg
fldenv
add
pop
sbb
les
js
std
cmp
xchg
out
pop
push
lods
popf
fadd
rcl
mov
jbe
loopne
add
scas
rcr
sub
add
jno
hlt
push
std
mov
pushf
push
sbb
fldl
inc
add
test
mov
xor
cmc
push
sub
xchg
pushf
push
dec
jno
gs
test
jmp
sbb
into
cmp
cmc
out
mov
inc
mov
mov
dec
std
shl
rclb
outsl
push
mov
adc
xchg
outsl
bound
jno
dec
shrb
push
in
test
daa
mov
loop
sub
jb
pop
lea
enter
loope
loope
in
inc
test
add
inc
and
or
push
addr16
and
cmpsl
ja
test
fnstsw
loopne
pop
adc
icebp
loop
xor
mov
adc
sub
ljmp
rcrb
add
and
stos
and
shll
jmp
dec
sbb
or
rclb
pop
adc
pushf
lea
stos
test
xchg
xor
fwait
pop
mov
push
adc
jo
sub
dec
scas
xlat
pop
dec
inc
mov
imul
mov
xor
icebp
popf
out
insb
cmpsb
addr16
push
jne
cmp
cmp
pop
in
push
adc
ret
mov
sarl
jnp
sbbb
imul
mov
and
aam
movsb
sub
push
mov
jl
into
pop
mov
or
jne
push
stos
jo
bound
add
enter
xor
sub
arpl
xchg
xchg
jo
push
sub
pop
clc
lret
aaa
mov
pop
mov
fdivrs
jmp
lret
imul
mov
cmp
sbb
inc
popa
and
in
cmp
cld
out
scas
daa
mov
ljmp
mov
mov
ret
cs
fcmovnu
add
shll
lcall
xchg
mov
or
imul
sahf
xchg
xor
mov
out
sarl
add
ret
cltd
outsl
adc
outsb
sbb
jmp
mov
mov
ljmp
hlt
pushfw
pop
xchg
cld
jb
xchg
jl
add
cwtl
inc
mov
pop
cmp
sbb
ds
inc
ja
jne
pop
mov
repz
sbb
out
dec
inc
push
sbb
mov
mov
sub
data16
fadd
ljmp
enter
orl
aaa
push
mov
jle
out
mov
in
scas
aaa
popa
fistl
inc
mov
xor
xor
dec
and
dec
jg
sbb
inc
rcr
rcrl
popa
cmp
jno
xchg
lock
enter
adc
ficoml
rol
cmp
adc
in
fdivl
clc
mov
add
push
out
aam
lds
imul
cmp
mov
xor
out
inc
lock
cmp
in
test
test
xlat
insl
mov
adc
pop
testl
jp
iret
lret
fwait
add
sbb
inc
pop
icebp
int3
dec
sub
and
sub
cltd
fxch
cmp
mov
jge
repz
jg
jge
jns
pop
xchg
es
ds
andl
xchg
inc
outsb
jb
fistl
aaa
xchg
jno
dec
and
das
add
pop
push
repz
jge
out
lea
push
xor
stc
or
rcr
cld
sbb
stos
in
rcrb
out
jecxz
mov
adc
xor
sbb
cmp
into
mov
inc
sbb
mov
je
sbb
cltd
ret
inc
and
stos
pushf
popa
jno
push
out
sub
xchg
add
imul
add
pop
lea
and
mov
adc
ljmp
mov
pusha
inc
xchg
into
jbe
sahf
xchg
pop
pop
int
mov
inc
cmp
lock
lret
pop
lret
les
mov
push
fcomps
jp
out
mov
out
cmpl
mov
jmp
lret
mov
aas
mov
lods
test
loopne
cmp
pop
pop
jle
and
imul
adc
pop
jno,pt
aas
lock
mov
push
dec
adc
mov
cmp
mov
popf
jg
xchg
jo
sub
lret
mov
mov
xor
mov
call
in
bound
mov
fsubrl
outsb
icebp
hlt
push
lea
add
pushf
xor
lcall
stos
sti
push
xorb
inc
xchg
xchg
inc
xchg
data16
mov
movsl
push
mov
cmpsb
arpl
dec
mov
jge
xchg
inc
sbb
xor
adc
scas
out
fidivl
jle
cld
shll
push
cwtl
loope
sub
push
test
jns
cli
dec
aas
clc
mov
mov
or
scas
dec
xchg
cmp
cmp
and
sub
adc
dec
pop
cmpsl
test
mov
movsl
pusha
mov
insb
ds
cmp
lods
imul
daa
xchg
push
sub
daa
mov
inc
mov
scas
pop
pop
push
jle
gs
sbb
jo
push
push
xor
cmp
clc
or
push
xlat
pop
adc
push
mov
addr16
xchg
and
inc
inc
inc
dec
js
es
movsl
loopne
pusha
xchg
pop
pushf
and
dec
mov
leave
leave
mov
outsb
lret
lods
xlat
ficoml
mov
aad
adc
adc
gs
mov
push
mov
xchg
jmp
cmp
out
or
cwtl
mov
aaa
hlt
mov
ds
call
jle
adc
push
imul
pop
and
insl
mov
jl
mov
lcall
adc
nop
shl
sub
xlat
mov
jge
daa
sahf
mov
cmpsb
sarl
or
enter
bound
jge
sarb
mov
gs
xchg
jns
xchg
repz
mov
mov
das
das
mov
jle
clc
cwtl
das
sbb
pop
es
daa
stos
pop
testl
imul
ja
sbb
cmp
jecxz
xchg
popa
subl
mov
popa
movsl
imul
jns
addr16
das
cli
sub
insb
leave
xorb
lods
jnp
mov
fadd
cli
push
push
dec
jl
mov
or
repnz
mov
cmp
sarl
add
push
lods
rcl
sahf
bound
sbb
and
push
mov
push
mov
adc
sti
in
cmpsl
inc
push
xlat
jmp
cld
jno
dec
inc
lahf
add
dec
pop
aaa
inc
cs
out
pop
dec
dec
add
jnp
xor
or
in
sbb
mov
pop
out
loop
test
ret
int3
cs
lret
stc
mov
add
jmp
inc
jb
int3
das
stos
pop
lock
js
arpl
sbb
cld
jno
stc
inc
loopne
or
or
adc
and
push
add
push
mov
xchg
dec
dec
test
sub
inc
mov
or
jne
mov
inc
jb
dec
add
mov
lahf
mov
push
movsl
adc
xchg
std
add
roll
sub
int
push
sbb
outsb
test
push
ret
andb
cli
cmp
testl
lahf
push
inc
adc
dec
xchg
clc
mov
jmp
out
hlt
adc
gs
repnz
jbe
pop
xor
push
lods
mov
lahf
or
testl
or
leave
lret
push
adc
dec
dec
sbb
xor
aad
sub
mov
je
inc
mov
das
hlt
xchg
shll
cs
or
sbb
pop
pop
dec
push
jg
mov
pop
sub
mov
sub
cli
daa
jb
push
insl
in
xor
ja
dec
outsb
loop
and
pop
push
mov
mov
jmp
dec
sti
je
cmpsb
xchg
stos
push
repnz
mov
pop
aas
jne
push
lods
call
cmpsl
and
jne
jno
mov
lds
call
mov
repnz
call
push
inc
popf
notl
xor
xchg
shrl
mov
inc
adc
sbb
js
pop
xchg
scas
xchg
test
dec
repnz
xchg
jp
inc
jbe
xlat
and
sub
dec
repnz
sub
or
xor
lret
or
add
rorl
fsubr
clc
xchg
sahf
add
xchg
and
testl
fsts
xchg
in
pusha
inc
cmp
nop
aas
pop
mov
mov
hlt
aaa
push
repnz
pop
and
es
outsb
xchg
bound
test
les
imul
loopne
fldt
xlat
ss
les
cld
into
sub
cmp
cmpsl
cli
addl
loop
imul
das
pop
icebp
jle
lea
pushf
rorl
fldt
xor
add
sbb
inc
in
sub
add
out
adcb
jmp
adc
movsl
cmp
lcall
mov
mov
pop
lret
outsb
mov
xchg
wbinvd
xchg
aad
sub
dec
push
movsb
xchg
sbb
jno
sbb
sub
mov
sti
mov
jb
insl
fisubrl
sbb
mov
jae
mov
pop
hlt
jl
mov
or
popf
cmp
xlat
shl
pop
imul
inc
ljmp
and
xor
fcomps
mov
pop
adc
test
sub
cli
inc
out
and
out
sbb
rcll
arpl
cmp
popa
insl
xor
es
sub
jno
jmp
shlb
and
out
dec
sbb
shll
sub
cld
and
test
xor
jne
lds
or
xor
push
scas
outsl
sub
mov
imul
push
xlat
popf
repnz
stc
and
nop
pop
push
cmp
push
mov
loopne
push
cmp
outsb
cmp
lcall
mov
out
jbe
or
leave
cwtl
insl
lahf
xchg
adc
xchg
int3
cmp
pusha
in
in
and
sbb
and
das
mov
lret
lret
pop
push
lods
or
adc
push
cmc
inc
shlb
mov
jno
adc
push
push
ja
jle
fimuls
repnz
ds
or
jno
out
call
and
out
inc
lahf
dec
pushf
movb
int3
imul
xchg
test
repz
mov
ljmp
loop
decl
jl
fistpl
sub
lcall
push
aad
pusha
dec
cmpsl
ds
sbb
cli
ljmp
enter
mov
pop
xchg
das
mov
cmp
push
xor
inc
gs
xor
adc
pop
outsb
mov
loope
push
inc
xor
stos
rorb
add
fistpl
push
mov
push
jmp
mov
push
cmp
lock
movsl
mov
scas
cmpb
aam
les
ds
xor
sbb
mov
dec
fsubrl
cltd
xchg
insb
mov
call
ss
push
sbb
xchg
and
fisubs
daa
jbe
cmc
cmp
sub
icebp
inc
adc
clc
daa
cs
mov
or
mov
xchg
pushf
fistpl
icebp
cmp
xchg
lret
scas
and
int3
aas
int3
pop
add
jb
push
sub
scas
push
daa
das
cmp
dec
cltd
add
out
mov
stc
jo
sbb
fstpt
push
xorl
adc
out
sti
dec
or
iret
rep
jne
and
inc
aam
xchg
jmp
loopne
sbb
outsb
mov
scas
cmp
mov
add
adc
xchg
hlt
lock
in
pop
xor
ss
nop
push
dec
pop
dec
inc
sub
or
and
jno
mov
mov
daa
dec
adc
push
sbb
push
fcmovnbe
into
or
cltd
mov
fldt
flds
imul
in
mov
lcall
outsb
movsb
sub
cmp
loope
inc
stos
iret
repz
divl
pop
or
mov
sbb
mov
pop
mov
int
and
rcl
mov
or
movsl
lea
fistpll
sbb
and
push
lret
mov
inc
nop
bound
push
sub
int
pop
sti
ret
cmpsb
cmpsb
mov
inc
ret
out
es
push
sbb
push
jbe
cmc
mov
lret
adc
pop
jmp
cmp
mov
in
inc
cmc
gs
sub
or
stos
cmp
add
xor
into
lock
xor
xor
xchg
push
vpscatterqd
loop
pop
mov
mov
xchg
mov
fsubs
and
mov
xlat
jae
xchg
jmp
mov
in
cmp
loopne
mov
jge
lds
pusha
sar
pop
fnstenv
cmp
jne
mov
jbe
js
rorb
mov
sub
popa
mov
and
sbb
cltd
mov
mov
negl
xor
scas
mov
andb
xchg
dec
jl
mov
mov
cmp
clc
sahf
icebp
flds
mov
scas
stos
ss
shrb
xchg
fldenv
popa
xlat
jnp
popa
mov
sub
aad
cmp
outsl
push
testl
or
dec
popl
sbbl
fnstcw
jge
cld
xchg
xchg
fcmovbe
jbe
popf
iret
stc
inc
xchg
xchg
andl
popf
fdivrl
xchg
xor
jle
push
imull
mov
mov
cwtl
mov
ljmp
inc
or
and
jmp
pusha
subl
loopne
test
fcom
fistpll
std
scas
lret
test
dec
movsl
out
sbb
dec
inc
arpl
add
int
inc
pop
decl
ja
std
rol
xchg
jbe
sbb
jg
aaa
sbb
jno
push
insb
repnz
jmp
cli
outsl
jbe
cld
inc
mov
ss
cltd
or
outsb
loope
inc
sbb
mov
adc
mov
fst
cmp
pop
cmp
sbb
sbb
shll
iret
sub
fstl
fdivs
xchg
clc
pop
sbb
lret
lahf
inc
test
mov
cld
jge
cltd
sub
scas
mov
aaa
pop
in
in
cmp
mov
ficoml
imul
fwait
test
fcmovu
in
loop
pop
imul
lods
cwtl
mov
lods
and
ljmp
ljmp
jge
cmp
out
pop
les
mov
jecxz
outsb
daa
sarb
mov
bnd
adc
inc
inc
push
into
sub
andl
cmp
push
jmp
test
ss
adc
out
das
leave
dec
push
aam
jb
sub
mov
adc
nop
xor
imul
movsb
xor
pop
cmpb
dec
cmpb
dec
arpl
clc
xor
gs
xor
in
or
sub
adcb
inc
adc
xlat
je
jae
loope
sub
cmpsb
jle
repnz
mov
pop
jp
jb
mov
sub
or
mov
xor
sahf
cs
rolb
inc
xchg
dec
fwait
imul
mov
jle
lret
mov
movb
pusha
xor
out
call
cltd
daa
lds
iret
mov
daa
mov
enter
dec
das
lcall
mov
ret
mov
aaa
or
outsl
adc
aam
add
push
cs
jb
mov
insb
mov
dec
gs
shlb
int3
mov
icebp
push
push
xchg
mov
push
test
and
xchg
mov
mov
pop
adc
in
and
add
lret
daa
sbb
mov
js
dec
mov
mov
das
aas
mov
push
dec
loop
mov
pusha
lahf
add
mov
pop
mov
jae
pop
aad
mov
sub
pushf
fimull
sar
add
inc
lods
xor
inc
pop
je
call
jl
out
dec
movsl
inc
jl
or
push
imul
test
and
add
jge
imul
sarl
movsb
fsubl
or
and
aas
mov
push
rclb
sub
fcomps
sbb
push
xor
mov
push
mov
out
xor
imul
cmp
cmp
jge
sbb
lea
dec
jns
into
jp
nop
mov
call
test
sbb
push
stos
clc
lcall
mov
cltd
scas
hlt
outsl
sub
sbb
out
jg
cli
push
ficompl
addl
push
add
adc
mov
popf
pop
mov
push
aaa
sbb
sub
pop
mov
aas
and
clc
insb
fcompl
sbb
adc
arpl
sub
or
pop
cld
loop
sub
sbb
pop
mov
fcoms
testl
loop
mov
mov
jmp
adc
sbb
mov
cltd
or
push
sarb
mov
es
jnp
cli
jnp
mov
dec
sbb
out
cmp
pop
mov
movsl
jecxz
sub
lahf
scas
js
sub
repz
adc
sub
dec
jb
cld
ljmp
lret
sahf
ja
mov
fmul
orb
ja
xor
adc
pop
sbb
test
pop
jge
out
fwait
pop
xlat
sar
orb
cs
imul
aad
inc
out
movl
std
jmp
mov
es
dec
dec
rcrl
adc
or
cmpsb
call
stc
cmpsl
je
das
mov
lret
aam
cli
std
and
je
mov
mov
hlt
ficoms
pop
out
fldenv
and
and
mov
sbb
sahf
push
dec
sub
mov
cmp
out
mov
in
pusha
cwtl
mov
dec
add
sti
mov
rcrl
jecxz
notb
jge
out
rolb
jecxz
jl
lods
data16
xchg
cmpsb
adc
push
xor
lahf
lahf
out
clc
sbb
pop
ds
dec
out
ss
jo
fcompl
and
xchg
loope
cmp
pop
inc
jns
sub
sub
arpl
push
jg
bound
pop
test
cmpsl
std
jne
out
mov
add
mov
hlt
and
inc
and
arpl
iret
sarl
pop
jne
pop
jno
jl
mov
ss
popl
call
les
and
sub
ficoml
ret
jns
inc
cltd
pop
push
lea
test
test
sub
push
stos
or
push
xchg
pop
pop
popa
mov
or
pop
cmc
dec
cmp
jae
test
adc
and
mov
push
cmpb
movsb
mov
mov
dec
scas
fucomip
add
lock
repz
sbb
outsb
inc
pushf
hlt
cwtl
mov
jl
mov
xchg
adc
inc
int
adc
lret
fiaddl
fs
dec
dec
orl
repz
cmp
jmp
add
repnz
lcall
rcr
call
and
sub
jno
mov
cmp
lahf
sbb
out
lock
cmpsl
mov
pop
inc
popa
xor
dec
add
xchg
addr16
mov
adc
adc
xor
and
mov
dec
popa
inc
cld
dec
mov
loope
mov
adcl
dec
jp
pop
popa
sub
inc
fmuls
ret
and
std
pop
je
dec
inc
sahf
jns
loope
fxch
lods
ja
loop
mov
nop
and
pop
mov
sub
adc
sbb
fwait
jbe
shrb
mov
add
ret
add
fldcw
inc
fimull
pop
sub
stos
popf
pop
jge
jno
dec
cmc
xor
adc
aaa
movsb
test
movsl
test
mov
addr16
scas
xchg
dec
lock
arpl
inc
jbe
movsb
xchg
std
out
iret
pop
dec
mov
adc
xchg
pop
inc
push
int
and
je
enter
out
inc
ljmp
pop
and
mov
pop
lods
scas
imul
sub
mov
aaa
pop
mov
cmp
mov
pop
nop
clc
cltd
xor
sub
xor
test
scas
insl
pop
mov
insl
jbe
dec
mov
xlat
mov
sbb
mov
insl
mov
iret
movsl
lods
fimull
in
fisubrs
enter
fldenv
and
inc
or
daa
cld
bound
or
and
lea
inc
pop
cmpl
std
ss
test
decb
mov
cmp
icebp
and
fildl
popa
xchg
mov
mov
cmp
cmpl
or
add
add
inc
stos
mov
addr16
jae
std
divl
dec
test
add
xchg
add
imul
es
sbb
add
add
sbb
cltd
xor
divb
xchg
add
xchg
push
idivl
mov
icebp
push
lods
or
push
push
sbb
mov
mov
lods
xorl
cli
push
mov
mov
repz
mov
gs
push
in
popf
aad
mov
pop
jns
je
shll
dec
dec
cmp
inc
clc
add
push
insl
jmp
es
shl
mov
out
mov
das
cwtl
shlb
iret
arpl
fmull
lock
add
mov
dec
cmpl
stos
jbe
inc
cld
jne
mov
pop
xchg
push
test
cmp
fstps
sub
mov
pop
adc
pop
call
out
popa
pop
arpl
pop
and
movsb
fstpl
aas
fldenv
inc
mov
arpl
push
leave
inc
xchg
inc
scas
or
or
inc
inc
cld
mov
in
jnp
jge
push
xchg
les
pushf
mov
inc
jp
lcall
or
mov
aam
nop
push
xor
cli
ret
push
leave
pushf
es
inc
xchg
sti
mov
jae
stos
add
fsubr
xor
jecxz
lds
out
adc
inc
and
imull
and
sti
pop
addb
scas
mov
mov
mov
les
sbb
outsb
jbe
addr16
mov
pop
jae
int
ficoms
xlat
mov
hlt
pop
iret
orl
mov
or
repnz
jo
jbe
mov
jp
dec
mov
dec
test
fistl
xchg
subb
ret
sub
rclb
enter
sub
cmp
push
inc
lods
inc
rorl
or
call
push
in
flds
cmpl
pop
out
add
aad
mov
xchg
lret
mov
out
push
xchg
pop
pop
push
dec
das
xor
xor
out
xorl
pushf
icebp
sbb
mov
xchg
pop
inc
ja
xchg
fnstcw
addb
push
mov
jns
rorl
dec
dec
cltd
add
out
sbb
and
xor
and
movsb
cltd
jns
aam
arpl
xchg
mov
test
push
xlat
hlt
fnsave
cmp
xchg
sub
cmc
les
les
or
mov
fidivrl
inc
push
mov
xor
daa
sbb
push
add
dec
cmp
mov
jnp
cmp
cmp
pop
mov
sub
jnp
xchg
in
sub
push
fmulp
sarb
loopne
rcrb
xchg
lea
fsubl
cld
movsb
clc
test
ljmp
test
ds
popl
popa
push
pop
pop
cmp
mov
shll
pop
and
sbb
fidivl
sar
shl
mov
push
sti
lods
jmp
das
bnd
or
mov
mov
push
insl
mov
dec
inc
cmpb
push
cmpsl
add
jg
xchg
pop
not
and
sub
add
jp
xchg
mov
jb
in
iret
popf
push
xchg
gs
les
and
pop
xchg
out
sub
movl
fcoms
shll
mov
sbb
and
test
pushf
adc
lods
pop
dec
fistps
pop
inc
mov
xor
inc
lret
add
in
jbe
fnstsw
ljmp
adc
cmpsb
pop
adc
lret
aam
lret
lcall
es
mov
enter
gs
sahf
inc
dec
xor
leave
push
adc
xchg
addr16
add
push
out
scas
push
push
cmp
push
sarl
out
aam
das
fdivr
or
jns
xchg
bound
in
loop
pop
mov
enter
xor
mov
aaa
jecxz
add
xlat
adc
outsl
or
lret
gs
push
inc
in
push
aas
out
xchg
xchg
enter
add
jno
pushf
or
int
scas
lret
mov
and
hlt
sarb
daa
mov
mov
idiv
test
outsb
or
cmpsb
jno
je
add
repnz
loope
ds
int3
cmp
xchg
jb
dec
sub
dec
xor
push
sub
loope
lret
cmp
pop
insl
cmp
and
add
mov
cld
mov
or
iret
in
pop
adc
push
xlat
ficomps
imulb
cmp
pop
insl
mov
add
pop
sbb
sbb
jge
out
rcrl
add
push
dec
lods
push
clc
jns
push
jge
xor
loopne
xchg
push
mov
push
mov
dec
data16
lahf
jle
in
push
xor
lret
or
or
cmpsl
test
bound
xor
movsl
mov
jnp
push
cmp
pop
shld
fwait
sbb
ret
ss
aaa
jge
mov
cwtl
inc
enter
dec
stc
mov
or
fcomps
fsubrl
out
jno
or
sub
push
gs
repz
push
clc
inc
inc
sbb
or
mov
hlt
and
icebp
xchg
fwait
cmp
xchg
out
jl
mov
test
stos
cmpsl
lcall
pop
mov
mov
call
in
mulb
sahf
jl
lahf
leave
pop
adc
in
mov
xor
push
inc
push
dec
pop
push
int3
and
mov
lods
cmp
movsl
push
pushl
cwtl
repnz
cmpsl
push
and
add
fdivl
mov
fildl
ret
dec
insl
mov
jmp
js
mul
movsb
repnz
and
mov
xchg
push
rcrb
sti
sbb
cld
and
in
lahf
rcrb
xor
and
lret
mov
shr
andl
je
mov
jge
int3
es
icebp
icebp
dec
aas
shl
mov
idiv
push
jmp
leave
jecxz
loop
mov
and
ret
ljmp
jno
inc
scas
cmp
pop
shll
jb
mov
adcl
dec
xor
mov
and
xchg
xlat
in
xor
mov
nop
fdivrs
or
ljmp
sub
fimull
push
jmp
nop
pop
sub
mov
xor
push
imul
std
adc
shrb
in
inc
jae
pop
popa
lcall
fwait
dec
popa
ss
mov
xchg
adc
sbb
fidivs
test
sbb
mov
inc
pop
or
pop
insb
lods
orb
mov
mov
shlb
and
bound
popa
xchg
add
enter
notl
mov
in
mov
jae
sbb
test
insb
and
dec
sbb
cmp
sbb
loop
and
or
addr16
aam
sahf
dec
std
jmp
lods
xchg
inc
ret
out
lahf
shlb
gs
pop
pop
test
xor
xor
fsubl
cmp
push
fsub
add
sub
scas
pop
jnp
sub
lcall
inc
nop
enter
aad
mov
cli
nop
jl
roll
shrb
mov
xor
sarl
enter
cmp
cld
pop
xor
xlat
jno
std
and
stos
test
add
add
imul
shlb
sbb
mov
dec
arpl
jmp
mov
out
sbb
hlt
sbb
adc
mov
mov
insb
and
inc
push
push
arpl
mov
std
push
xlat
add
cli
mov
enter
sub
mov
jnp
mov
sbb
popf
sbb
or
jp
stc
rcrl
aaa
negb
and
sbb
ret
orb
and
lea
adc
push
jle
enter
ss
and
add
fbld
mov
fwait
mov
ja
popf
push
lock
mov
or
lret
loop
std
daa
shlb
pop
push
in
das
add
xchg
mov
shll
and
mov
ljmp
je
and
leave
cmp
out
out
push
dec
mov
jg
pushf
sbb
jl
mov
out
push
sbb
jae
aad
dec
rcrl
testb
pop
and
sub
inc
mov
lret
pop
lcall
xchg
sbb
xor
dec
cmc
ficompl
lret
push
sbb
fisubl
into
addb
je
mov
int
lods
push
mov
cs
clc
pop
cmovge
imul
dec
add
enter
test
addb
and
dec
shlb
jnp
repz
and
inc
lds
push
cmovae
dec
fistps
add
lret
pushf
dec
fs
pop
mov
mov
sbb
push
mov
je
xchg
mov
inc
loopne
add
in
jg
sbb
inc
out
out
stos
sub
scas
xchg
mov
or
fdivs
xchg
in
je
lea
xchg
idiv
mov
push
sahf
xor
rcr
pop
cmp
mov
leave
xchg
push
mov
dec
test
pusha
cmp
loopne
xchg
mov
les
mov
pop
fxch
lods
cs
in
lret
imulb
xchg
popl
out
xor
dec
push
lahf
mov
jnp
out
push
int3
testb
sbb
outsb
sbb
repnz
ljmp
stc
and
or
jns
aaa
dec
sub
out
cmp
mov
pop
or
adc
int
jae
pop
shll
sub
sbb
inc
testb
jae
arpl
push
fpatan
repz
adcl
aad
repnz
cmpsl
xor
insl
rolb
lahf
sti
lock
clc
loopne
in
ret
es
fisubrl
pop
ret
pop
jg
enter
xor
inc
add
jbe
popw
cmc
aaa
cld
jae
pop
and
mov
int
jle
add
sub
add
adc
sub
adc
jecxz
sub
and
shll
xor
or
inc
shrl
in
inc
iret
xchg
inc
fmuls
xor
mov
xchg
fsubrs
in
cmc
dec
cmp
testb
jae
insb
pop
fsub
push
push
xor
xchg
loop
xchg
imul
cmp
or
les
sub
mov
cs
outsb
cmp
push
xchg
xchg
out
je
aad
sub
lahf
mov
sub
cmc
out
ss
leave
daa
mov
aas
ja
mov
mull
sti
aad
nop
sub
mov
adc
or
hlt
imul
inc
clc
jbe
xchg
and
pop
rorl
cmpl
incl
in
sti
jbe
addr16
dec
iret
jb
and
test
push
idivb
scas
out
pop
subl
xlat
aad
mov
xchg
jl
sbb
xchg
mov
cli
push
pop
jmp
clc
arpl
lods
mov
pop
xchg
cwtl
into
hlt
xlat
jae
adc
stos
div
adc
pushf
mov
les
or
adc
fcoms
cmp
pop
dec
jle
push
cmp
ret
xlat
imull
mov
xor
enter
cld
pushf
jecxz
mov
jmp
arpl
stos
into
jb
sub
flds
cmp
repnz
jne
add
movsl
iret
sarb
dec
repnz
mov
fisubl
aam
cwtl
and
xchg
lahf
sub
xchg
mov
push
push
lcall
cltd
adc
sub
int3
sbb
rcl
cmpsl
stos
in
leave
out
fwait
int
out
sti
out
cmc
adc
pop
lret
pop
xchg
push
lods
pop
and
lods
leave
mov
dec
lock
push
clc
stc
stos
add
scas
jl
test
push
das
je
xchg
ret
addr16
into
and
sub
push
xor
jl
testl
xchg
xchg
dec
sub
cmc
fdivrl
cmp
jp
sub
sti
jmp
int3
out
mov
int3
push
jbe
xchg
push
aad
test
jnp
sub
arpl
adc
push
xor
cmp
xchg
mov
sbbb
das
cmp
add
ds
or
vmread
sub
outsl
pop
lahf
hlt
cmpsl
popf
cmpl
ret
add
bound
mov
repz
push
outsb
stos
arpl
push
dec
addr16
xchg
lret
cmp
outsl
push
out
lds
xor
pop
icebp
pop
push
dec
stos
push
bound
test
mov
mov
inc
movsb
dec
push
and
nop
add
sub
mov
adcl
in
fdivr
gs
movsb
lret
fs
scas
loopne
jno
in
dec
popa
cmc
push
jae
mov
sbb
xchg
aam
cmp
mov
gs
scas
pop
push
fisubl
out
sbb
cld
lock
fst
jns
ja
cmp
das
addl
in
inc
fists
push
sti
pop
push
cmc
addl
adc
cmp
add
add
adc
jle
inc
movl
push
lds
stos
and
sbb
pop
cmc
sbb
dec
pop
push
inc
sub
sub
popf
jno
cmovb
add
add
inc
jnp
packsswb
add
jmp
int3
shl
xchg
ret
and
sbb
xor
out
aas
push
int
mov
adcb
divl
xor
dec
xchg
dec
mov
dec
outsb
fadds
lods
addr16
sbb
and
jno
lret
push
ss
push
fstpl
ja
stc
mov
stos
fcomip
mov
xchg
pop
xchg
and
pop
cmp
out
sbb
cs
gs
mov
icebp
in
pop
lcall
mov
adc
aas
xchg
lock
cltd
cwtl
inc
push
adc
test
repnz
or
pop
int
sbb
inc
daa
mov
jg
mov
sub
subl
jle
int3
add
xchg
int3
paddusw
jge
or
jmp
mov
arpl
pop
pop
push
out
or
jl
rclb
ret
mov
cld
xlat
sbb
fwait
pause
pop
popf
adc
inc
xchg
popf
pop
mov
insl
js
adc
push
xchg
fldl
int3
sub
sub
pushf
push
jge
mov
inc
xchg
aad
in
or
mov
leave
aam
jecxz
aas
inc
cwtl
sti
imul
mov
add
call
mov
dec
or
shrb
push
push
in
scas
orb
mov
loopne
inc
cmp
xchg
ret
mov
fmul
push
bound
adc
mov
in
insb
adc
push
in
jecxz
imul
mov
or
in
stos
sub
push
xchg
cli
or
rorb
push
nop
sub
ds
mov
or
cld
jb
decl
movq
pop
lret
addr16
adc
xor
aas
cmpsb
jnp
shl
xchg
dec
idivl
popa
add
dec
enter
push
repz
jecxz
mov
mov
pop
popf
popf
test
lods
add
test
loope
aas
test
sub
cmp
std
repnz
add
pop
inc
into
cli
movsb
fs
sub
push
sbb
notl
ret
mov
dec
add
mov
sbbb
xor
je
bound
stos
je
jnp
cmp
inc
pop
add
cmp
mov
cmc
aad
jbe
imul
gs
out
mov
daa
fucomp
lods
dec
mov
inc
push
testl
je
add
sbb
rorl
scas
repnz
xchg
fistps
and
inc
xor
or
inc
cmp
xchg
push
pop
cli
imul
data16
or
xor
jb
xlat
inc
pop
dec
jp
sub
test
test
mov
jae
adc
les
iret
push
add
push
addb
add
pop
dec
mov
add
insb
mov
cmp
es
je
ljmp
cli
mov
popa
sbb
sub
xchg
push
push
push
jno
lods
push
xor
pop
enter
fincstp
xor
das
lea
sarl
loope
nop
xor
mov
xor
cmp
ljmp
dec
dec
push
inc
leave
fidivl
push
sbb
test
aad
sti
or
sbb
scas
negb
test
leave
push
call
jle
int
inc
in
cmpsb
outsb
test
shl
mov
sbbl
ds
sbb
push
push
fnstsw
mov
cld
mov
into
dec
xor
test
ljmp
push
mov
add
int
mov
and
mov
inc
movsb
adc
aam
jp
lods
mov
shrb
pushf
sub
mov
push
and
outsb
sbb
jmp
in
int3
dec
jg
cmp
icebp
outsl
sub
aad
adc
lret
jge
xchg
and
rcll
add
mov
jo
cs
jnp
xlat
lds
jp
or
popw
mov
mov
sbb
stos
mov
mov
pop
je
repz
jae
jle
xor
inc
shlb
pop
das
push
jmp
mov
popf
ljmp
mov
cmc
sub
xor
add
leave
sbb
xlat
lock
sub
mov
les
cmpsl
jnp
lret
imul
ds
in
aaa
dec
mov
xchg
push
mov
sbb
jb
mulb
sub
xchg
in
adc
pop
pushf
in
jnp
jns
dec
pop
call
insb
in
addr16
pop
cmpsl
add
dec
or
push
adc
dec
sbb
add
enter
and
mov
imul
add
push
sub
daa
and
push
sub
jle
cltd
fmull
xor
xor
jmp
out
lds
sub
xor
mov
fucom
xchg
xorl
lahf
push
scas
out
adcl
pop
cmc
or
mov
adc
stos
test
cmpsb
jecxz
ds
fsubrl
mov
or
xchg
push
xorl
std
add
movsb
add
icebp
jo
mov
movsb
jmp
pop
jecxz
adc
cmp
inc
pop
xchg
sbb
add
rclb
sbbb
push
pop
inc
sub
jl
mov
pop
psubw
cmp
cld
imul
xlat
xchg
and
pop
jp
mov
xchg
mov
shlb
pop
icebp
movsl
fstpl
out
inc
bound
std
inc
repz
out
cmp
dec
add
jno
xchg
ret
sbb
inc
cmp
push
popa
mov
pop
aam
movsl
out
inc
mov
rorl
frstor
cmp
inc
push
jnp
add
inc
cmpsl
int
int3
push
pop
mov
sbb
popf
mov
cmp
push
pushf
mov
add
pop
mov
push
mov
jbe
sbb
dec
nop
cmpsb
mov
or
inc
pushf
popf
lret
dec
pop
repnz
mov
aad
push
scas
xchg
jo
in
orl
mov
sub
pop
pop
out
fbld
enter
lahf
outsl
cltd
xor
jnp
dec
push
out
ds
dec
sub
adc
pop
dec
lea
jno
sub
lods
cmp
adc
pop
lcall
jbe
addr16
adc
inc
cmp
mov
insl
push
xorl
and
je
sbb
inc
mov
loope
mov
push
sbb
jb
imul
fists
out
push
outsl
scas
in
cld
add
lods
aad
push
jne
mov
pop
mov
popf
xlat
dec
in
inc
fsubs
inc
psadbw
in
xchg
mov
bound
push
data16
data16
iret
mov
or
dec
add
dec
xchg
mov
rdmsr
add
push
and
aad
bound
mov
in
test
sbb
cmp
xchg
popf
insb
cmp
jnp
pop
and
cmpsl
mov
mov
jns
pop
jmp
out
fnstsw
arpl
lret
ss
repz
fcomip
popa
mov
bswap
add
lock
xchg
es
xchg
es
xabort
pusha
icebp
inc
int
stos
inc
cmp
lds
les
add
cmp
sbb
mov
mov
adc
pop
pop
add
cmp
es
inc
jle
lea
mov
mov
dec
ja
mov
cld
lret
xchg
call
push
hlt
lcall
jno
dec
divl
call
clc
nop
add
test
data16
lret
and
xor
mov
pop
imul
push
sbb
xor
cltd
push
pop
lods
sub
fidivl
les
jecxz
sbb
push
ljmp
add
and
mov
insb
pop
movsb
cltd
or
jne
jge
sub
out
xor
lahf
in
sub
in
outsb
mov
cmp
insb
push
mov
popf
out
mov
loope
incb
std
lock
mov
xor
mov
inc
dec
std
jl
mov
mov
pop
cltd
ja
es
sbb
xor
fwait
jne
push
or
mov
popl
mov
inc
sub
cmpsb
enter
repz
les
subb
fiaddl
lcall
dec
xor
lock
xlat
mov
aas
sub
xchg
push
out
lds
jbe
ljmp
push
loope
and
add
inc
movsl
pusha
mov
scas
hlt
int3
push
pusha
lods
push
dec
jne
stos
pop
xor
jg
js
pop
pop
and
fldt
xchg
adc
ret
pop
mov
pop
mov
ja
or
fists
and
dec
add
inc
insl
les
imul
inc
jne
stc
ss
add
test
cmp
pop
adc
or
jnp
stc
xor
fucom
xor
mov
add
outsl
mov
xchg
mov
jnp
int
ficomps
mov
push
mov
int
pop
mov
test
ret
aam
imul
pop
push
or
lock
or
fucomip
loop
repnz
push
jg
jno
fwait
inc
or
pop
iret
xchg
dec
lcall
lds
lods
jp
lods
dec
xchg
xchg
add
test
mov
add
push
divb
mov
mov
bound
mov
fs
test
add
push
cld
or
hlt
push
cmpsl
dec
loop
sub
push
xchg
xchg
push
gs
xor
xor
mov
lods
pushf
cs
in
loopne
push
adc
test
push
sbb
mov
jp
js
scas
jg
mov
addr16
xchg
mov
cmpsb
push
add
adc
loope
shl
scas
std
mov
sbb
or
mov
jnp
test
sub
sub
jle
sub
mov
mov
in
lock
jae
inc
push
outsb
dec
idivl
pop
in
xor
mov
in
lcall
shr
pop
hlt
ja
pop
cmp
xchg
ds
xchg
dec
in
rcrb
mov
mov
insl
ja
hlt
aam
push
int
imul
into
aaa
or
movsl
out
sbb
xchg
js
jb
push
pop
jp
cmpsb
jo
jb
ljmp
push
rorl
xor
fsts
sbb
xchg
cltd
pop
popf
cld
outsl
sbb
sbb
repnz
lods
xchg
push
mov
rorl
insl
sub
mov
dec
jne
ljmp
jne
aad
lret
addr16
es
idivl
das
push
add
enter
stos
push
and
int
jg
movsl
add
into
or
mov
and
imul
sub
scas
fdivrs
hlt
pushf
cmp
cmp
in
add
lret
arpl
int3
dec
sbb
fnstcw
pushf
xchg
sub
fwait
je
cmp
mov
xchg
push
mov
in
sub
mov
jmp
or
int3
cld
xor
push
dec
out
and
mov
ds
mov
add
ljmp
mov
and
mov
pop
stc
ret
adc
cmpsl
cmp
jle
lret
jp
push
rclb
or
jp
cwtl
leave
imul
adc
cmp
inc
lods
mov
stos
sub
and
pop
lcall
das
in
fadds
add
and
adc
dec
cltd
cmp
adc
pop
dec
lea
pop
and
iretw
cmp
daa
sub
pop
jnp
or
call
cmpsb
xor
push
cld
adc
cmp
ja
sahf
pop
mov
and
inc
xchg
jle
inc
das
mov
sti
lds
cmp
lea
sub
xor
test
mov
out
aas
add
and
xor
stos
jg
mov
fbld
lcall
inc
stc
mov
std
mov
cmp
fs
out
xlat
mov
adc
in
dec
jb
rcr
sbb
pop
and
jge
clc
sti
hlt
push
push
cmpl
xchg
mov
pop
jb
int
xor
xchg
jb
jl
sbb
pushf
loopne
cmc
lret
stos
push
cmpsl
mov
in
int3
add
lods
and
ljmp
leave
fsubs
jge
xor
lds
push
imul
sbb
jp
sbb
fwait
stc
inc
js
pop
int3
iret
inc
sub
fwait
imul
cltd
in
imul
arpl
lea
mov
int3
dec
sbb
sbb
push
mov
inc
arpl
call
cltd
hlt
pop
cmpl
push
jbe
repnz
dec
outsb
mov
sti
dec
cmpsl
cmp
mov
pop
add
mov
cmp
sbb
cwtl
jmp
aas
xchg
repnz
idivl
sbb
imul
test
cmpl
fisubl
stc
pop
dec
aam
stos
push
mov
cltd
mov
fcmovb
dec
jmp
subl
faddl
or
pop
shll
leave
cmp
sbb
dec
mov
dec
adc
iret
mov
mov
dec
fcoms
xchg
pop
or
in
insb
aaa
lock
fiadds
pop
shlb
in
dec
mov
mov
adc
div
or
shrb
das
test
mov
insl
sbb
int
jo
mov
adc
inc
cs
popa
int
stos
jns
inc
xlat
and
and
add
iret
and
jge
test
scas
jnp
pop
out
pop
insb
cmp
xchg
std
daa
sarb
jge
rorl
test
jb
jle
xchg
rorb
and
mov
xor
notl
sar
bound
mov
sahf
mov
mov
scas
jb
popa
movsb
mov
or
fcoms
xorl
inc
fistpl
jb
arpl
push
jns
dec
bound
out
rorb
int3
adc
inc
mov
and
insl
push
push
movsl
out
mov
xor
movsb
or
xor
idivl
mov
lcall
or
adc
outsb
add
test
dec
xchg
cmp
aaa
daa
cmp
push
cmpsl
mov
enter
test
cmp
aaa
adc
push
xchg
mov
call
dec
lods
mov
mov
int3
and
test
mov
inc
cli
aad
addr16
in
test
lcall
dec
leave
rorb
popf
orl
lret
push
inc
mov
stos
fs
sbbl
mov
push
push
in
xchg
cs
xchg
xchg
pop
or
xor
jge
in
add
clc
pop
dec
pause
pop
cs
sar
ljmp
fwait
mov
pusha
daa
sub
cmp
inc
xchg
push
int3
or
push
pop
adc
sbb
mov
movsl
cmp
lds
push
scas
sub
xor
push
movsl
cli
xchg
sub
and
cs
testl
xchg
lea
fs
mov
xchg
push
rolb
inc
jmp
cmp
in
cmpsb
sahf
push
loop
aas
je
push
rcrl
cmp
sub
sub
scas
movsb
add
fists
mov
sbb
shll
cmpsl
adc
and
lcall
xlat
xchg
inc
jp
or
xchg
call
pop
inc
pop
nop
nop
mov
loope
mov
pop
lods
cli
loop
xor
mov
repnz
shll
enter
jne
mov
mov
cmp
xchg
mov
negb
adc
lods
sub
je
xor
stc
lock
xor
rclb
sbb
out
push
adc
clc
out
xor
push
addb
pop
and
daa
fwait
xchg
or
stc
xor
inc
psllq
je
or
cli
adc
imul
mov
jg
mov
int3
sub
fldenv
fwait
pop
pop
ret
inc
loope
iret
insb
cmc
cmp
xor
dec
sub
and
add
inc
jle
xchg
mov
ss
cld
ss
pushw
nop
loop
shlb
lcall
push
cmpl
ljmp
clc
adc
cltd
cld
xor
mov
out
cmp
jle
inc
push
das
xchg
scas
mov
pop
test
movsb
in
jg
cli
insl
cmp
pop
repz
fwait
hlt
insl
xchg
jg
out
add
mov
pushf
push
out
std
aam
std
sub
pop
out
dec
jl
outsb
lret
test
jle
ret
scas
push
pop
iret
add
add
add
repz
psubw
jmp
daa
push
push
xor
popf
add
jmp
jne
sbb
and
lea
test
mov
sub
out
nop
int3
notl
je
push
xor
pop
jmp
imul
fcomi
adc
in
add
mov
scas
dec
repnz
dec
cmpsb
out
cmpsb
sbb
push
ja
fistps
out
pop
cwtl
lcall
out
scas
insb
xchg
mov
test
enter
jecxz
pop
lret
dec
or
add
repz
cs
pop
hlt
sbb
sub
ss
fwait
cwtl
jbe
cmc
fs
das
ror
or
dec
pop
inc
xor
mov
fcoml
int
inc
lahf
cmp
pop
sub
out
in
testl
in
pop
cmp
stc
push
bound
jle
pop
ffree
add
sub
stc
mov
push
cwtl
pop
fiaddl
ret
mov
test
add
pop
add
adc
mov
adc
jg
out
push
xchg
stc
xor
or
outsb
into
and
daa
mov
out
das
aad
sahf
add
enter
mov
inc
sahf
in
shl
pusha
pop
push
sub
in
arpl
dec
jecxz
inc
cwtl
mov
xchg
sub
bound
cmpsb
mov
out
fbstp
jbe
sbb
cmp
arpl
cltd
nop
cli
dec
ljmp
fistps
cmpsl
add
cmc
inc
mov
stos
inc
out
shrl
xor
pop
mov
pop
addr16
imul
push
xchg
in
adc
add
pop
inc
and
scas
mov
mov
add
sub
mov
inc
mov
das
stos
jb
into
dec
add
pavgb
into
test
pop
mov
mov
int3
jne
lods
pushf
and
fwait
mov
mov
jns
jl
xor
stos
popa
lock
dec
cmc
lret
and
test
mov
mov
add
mov
fbstp
xor
xor
shrb
addr16
pop
mov
sub
jle
dec
shr
cmp
adc
add
mov
adc
testb
call
inc
inc
cmpsb
imul
dec
aaa
shrb
inc
ret
pushw
xor
pop
cmp
dec
lcall
add
dec
in
daa
scas
insb
leave
idivb
cmp
xchg
jb
add
dec
stc
test
lods
insl
mov
scas
adc
inc
push
lods
cli
push
or
sub
gs
leave
mov
mov
cmp
jmp
rcr
fisttpll
and
ret
hlt
mov
subb
push
out
pop
pop
cltd
mov
into
mov
pop
lods
rcll
movb
aas
hlt
sahf
frstor
or
test
cs
mov
and
jecxz
movsl
lss
sbb
call
or
int
push
push
int
jg
ret
xchg
std
mov
add
sbb
add
out
or
cld
imul
test
push
je
sub
mov
mov
push
test
fucomi
jmp
lea
or
sbbb
xchg
imulb
add
sar
or
mov
in
les
or
inc
lds
jnp
add
js
out
outsb
jmp
std
adc
push
sbb
sbb
pusha
mov
fmul
sbb
fs
ret
xchg
jae
js
cltd
aam
lret
mov
fwait
js
leave
sar
fistps
rcll
dec
inc
add
ds
std
ja
mov
jecxz
mov
and
mov
pop
mov
lahf
mov
jb
mov
mov
or
or
adc
mov
sub
sbb
rorb
stos
mov
mov
dec
xor
out
or
lahf
call
adc
adc
mov
sbb
sub
push
cli
outsb
sub
test
test
mov
in
fs
push
and
loope
clc
dec
mov
ret
loop
inc
cwtl
mov
and
mov
and
dec
xchg
sbb
aam
fistl
test
ficoml
ret
mov
push
data16
ja
push
aaa
sub
push
in
imul
xchg
sbb
insl
and
and
mov
mov
sbb
int
push
imul
repz
pop
out
arpl
xchg
andl
stc
mov
inc
push
pop
pop
push
out
inc
xor
rorl
xlat
and
push
lret
out
bnd
push
rcll
cmp
sarb
mov
or
sbb
xor
aam
dec
jne
mov
outsl
and
fisttps
jb
shrb
dec
mov
dec
adcl
mov
imull
cmpsb
pop
das
xor
je
sub
xchg
leave
mov
mov
cmc
mov
popf
or
ret
fisubl
xor
mov
jb
inc
mov
mov
or
stos
enter
jg
push
in
push
mov
out
inc
xchg
call
cmp
andb
cmc
sar
das
sub
outsb
cld
adc
not
pusha
xchg
mov
out
loope
or
and
or
jmp
mov
mov
lock
sub
repnz
xchg
fwait
ja
dec
arpl
xor
bound
push
xor
cwtl
sbb
mull
push
bnd
imul
imul
pop
shll
shl
pop
insb
repnz
inc
ret
xor
aam
or
test
mov
shlb
xchg
cmpsl
xchg
lret
add
lret
add
mov
mov
les
xchg
mov
or
fsubl
lea
push
adc
ret
sbb
in
aam
lcall
mov
and
cltd
sub
pop
popf
pushf
ret
mov
push
cmp
dec
jb
mul
adc
add
xchg
into
push
pop
sbb
icebp
pop
das
xor
data16
call
enter
and
add
xchg
ret
out
ljmp
mov
mov
mov
pushf
cmp
sti
jo
mov
je
ds
sub
into
movsb
aaa
jmp
sub
mov
test
shl
pop
or
cmpsl
dec
jno
jecxz
mov
rcrb
test
xor
push
push
test
jg
push
lock
popf
xchg
dec
pop
push
pop
xor
sbb
nop
jb
lahf
int3
loopne
scas
arpl
loop
in
fdivrp
sbb
pop
out
push
sbb
jg
dec
mov
pop
inc
pop
xchg
aad
mov
mov
mov
sbb
lcall
push
addr16
ds
mov
xchg
push
lds
sahf
jl
pop
jb
dec
push
lcall
cmp
mov
cmp
lock
inc
nop
xor
sbb
stc
adc
rorl
ret
stos
aas
xchg
pop
enter
fsub
pusha
sti
cmpsb
insl
faddl
in
sub
in
subb
aad
inc
pop
sub
push
or
inc
aas
and
cmp
mov
adc
sti
pop
adc
loop
add
push
lret
popf
loopne
jne
mov
mov
lds
bound
mov
jg
mov
xchg
insl
xchg
cmp
xor
fdivs
or
jle
mov
std
fsubrs
loop
sub
add
xchg
cmpsl
orl
out
jb
cs
push
out
pop
fstl
sbb
les
or
dec
mov
ds
loop
les
inc
je
std
cmp
test
or
arpl
aas
mov
lods
mov
or
pop
outsb
or
inc
movb
mov
jns
sub
fildll
aaa
into
sbb
loop
cmp
mov
fistpll
loope
xchg
pop
jecxz
rcl
mov
fdivr
mov
jbe
cmp
pushf
fldl
xchg
fcmovnbe
jno
jns
ret
jno
int
ret
popf
xor
out
mov
or
fwait
mov
xlat
push
mov
cmp
push
sti
aad
mov
add
mov
negb
repz
popf
push
sbb
icebp
imul
ja
cmp
into
adc
jae
mov
mov
dec
push
jmp
mov
cmp
dec
jmp
cltd
push
lods
into
mov
nop
xchg
mov
jmp
pushl
rorb
xchg
mov
or
jg
sti
mov
pop
aad
out
jns
gs
fcmovnb
lret
aaa
les
inc
les
popf
int3
push
mov
sbb
rorl
dec
sbb
addr16
push
fwait
sbb
aad
lods
xlat
jmp
dec
sub
pop
and
int
gs
inc
sbb
push
repnz
setb
out
fisubrs
jne
adc
pop
scas
outsl
or
xlat
lret
xchg
fisubrl
daa
push
inc
xor
mov
add
cmp
icebp
lret
aas
xchg
add
add
orb
push
mov
rcrl
outsb
test
mov
adc
imul
pop
inc
and
mov
std
fbld
jnp
fcomps
stos
xor
inc
int
xchg
out
pop
jmp
mov
rcrl
in
mov
and
clc
pop
shlb
or
inc
jne
lea
xchg
in
xchg
ss
dec
mov
imul
pop
and
add
sti
jae
mov
adc
fs
in
lcall
cmpsl
in
cmp
jge
jge
out
sbbl
dec
xchg
adc
inc
sub
cld
jl
mov
shrb
mov
bound
pop
mov
inc
sbb
or
jle
bound
rclb
or
or
pop
xor
dec
mov
daa
sbb
cmp
nop
dec
cmp
shlb
and
rcl
adcb
fdivr
imul
push
inc
and
mulb
es
add
xchg
int
test
xchg
loop
dec
out
clc
cmp
dec
fnsave
rclb
insb
cmp
dec
subb
cmp
icebp
sub
rorb
jmp
movzwl
cmp
dec
movsl
cwtl
cwtl
mov
cmc
repnz
popw
mov
or
adc
aaa
fwait
mov
arpl
arpl
lret
in
ret
sarb
mov
fiadds
jbe
jecxz
ret
push
icebp
mov
jmp
imul
jnp
push
notl
in
ljmp
fsubp
mov
cs
int
jns
ret
and
xor
xchg
dec
movsl
loop
ret
fstpl
jge
and
fwait
insb
js
cmpsb
mov
test
xchg
and
pop
fistpl
add
jle
sub
jo
out
sahf
mov
pop
pushw
fstpl
aam
mov
jmp
daa
push
into
cld
jne
int3
xchg
mov
add
sub
outsb
xchg
push
inc
adc
iret
mov
mov
lcall
add
data16
int
dec
bound
scas
mov
loop
mov
cmp
xchg
mov
and
adc
dec
xchg
mov
cmp
rcrl
sbb
pop
out
rolb
jbe
cmovle
shrb
jp
out
add
and
mov
mov
or
mov
mov
mov
cmpsb
div
test
icebp
adc
mul
pop
cmc
adc
xor
outsl
adc
push
cwtl
pop
fimull
fwait
jmp
scas
add
push
stos
add
das
rcrb
xor
subl
mov
dec
aaa
sub
ret
imul
stc
shlb
and
test
std
lods
lcall
inc
jb
arpl
xor
das
mov
cli
adc
je
adc
aas
ljmp
stc
in
and
push
adc
cs
lds
cs
sahf
sbb
jb
mov
pop
inc
xor
dec
xchg
adc
dec
cmp
pushf
lock
in
sbb
das
xor
push
cwtl
scas
loopne
ret
push
push
sub
push
insl
repnz
mov
imul
rorl
leave
fidivrl
mov
les
test
notb
mov
mov
repnz
data16
loope
mov
ljmp
and
pop
sbb
mov
dec
push
lahf
mov
ret
mov
sbb
lds
mov
popa
xor
fsub
aad
ret
in
sbb
mov
repz
popa
lret
dec
imul
in
cmp
out
scas
rcl
jmp
pushf
mov
pop
es
in
popf
int
jne
daa
push
dec
in
lock
test
add
pop
imul
lods
xchg
int3
lret
dec
or
addr16
adc
gs
shl
sbb
fldcw
mov
cltd
push
jg
dec
int
add
inc
mov
stos
in
xchg
fcompl
sub
mov
int
xchg
sbb
clc
inc
adc
adc
jo
xor
loop
jp
and
mov
sbb
xor
and
leave
dec
dec
jmp
in
or
je
shl
std
pop
sbb
cmp
cltd
add
adc
jle
das
sbb
out
out
ljmp
repnz
mov
jne
fstl
inc
into
out
aaa
icebp
adc
xlat
les
insb
lods
mov
arpl
scas
imul
pop
dec
test
loop
ret
cmp
insl
cltd
sbb
xchg
stos
scas
push
cmp
and
adc
adcl
repz
lret
push
sarb
adc
pop
push
pop
push
xor
inc
in
xchg
andl
cmpsl
cmc
sub
add
xchg
sbb
mov
sti
xchg
xchg
jo
fildll
mov
popf
psubsw
cmc
jecxz
outsb
jae
push
sub
adc
call
jbe
inc
cld
loope
das
cmp
jno
lahf
lds
push
jbe
or
outsb
lods
push
add
mov
loopne
mov
jb
inc
aam
sub
aam
ljmp
and
rclb
xor
mov
test
fldenv
movsl
ljmp
and
imul
orb
cmpsb
adcb
push
mov
test
pop
scas
pop
dec
sbb
ret
imul
in
ss
xlat
icebp
arpl
sub
pop
xor
jns
clc
lret
stos
push
lock
xor
sahf
mov
sub
add
das
mov
shlb
dec
jnp
fwait
ja
mov
movsb
orb
inc
adc
lcall
adc
sbbl
nop
inc
cmp
ljmp
jge
sbb
fiaddl
inc
dec
stc
or
test
push
jbe
sub
push
jg
jge
in
mov
push
cmp
sub
push
in
repz
sub
in
pop
ss
iret
push
repnz
mov
stc
jnp
jne
lds
add
ljmp
xor
repz
push
jnp
sbb
loopne
inc
and
mov
test
ffreep
mov
adc
inc
aas
std
add
cli
and
pusha
rorl
mov
push
das
fiaddl
or
mov
les
fwait
je
cmp
repz
stc
fsts
icebp
fs
bound
mov
das
sti
jmp
push
pushf
sub
push
jnp
in
mov
xchg
xor
cmp
adc
and
call
cmpsb
stc
jne
aad
mov
fwait
dec
push
mov
mov
mov
dec
ret
mov
je
inc
jmp
adc
xchg
jecxz
jecxz
mov
cld
lds
repnz
aam
and
scas
push
xchg
repz
cmp
js
lret
rcrl
mov
sarb
cmpsl
das
inc
mov
je
push
mov
mov
daa
cmp
sub
loop
in
js
add
sbb
jne
insb
adc
xchg
dec
mov
aas
out
js
mov
movsl
jecxz
sbb
xchg
and
setle
arpl
fiaddl
nop
fnstcw
fs
fs
cld
xlat
mov
cli
mov
jmp
adc
cmp
sti
call
dec
stos
aam
xchg
add
cld
addr16
push
jg
jne
into
mov
pop
mov
jae
sub
pop
stc
movsb
je
push
add
adc
adc
mov
xchg
adc
inc
lahf
je
pop
adc
xor
mov
pop
div
xor
inc
aam
inc
mov
mov
rcr
xchg
mov
shl
xor
std
xor
out
pop
mov
sub
xor
rcrl
shll
xchg
sub
cs
mov
pop
popf
in
cmpsb
push
call
andl
sub
adc
sub
push
in
sbb
xor
or
xchg
jmp
in
or
adc
aam
jo
inc
add
pop
pop
jg
pop
and
mov
insb
sarl
and
pop
inc
mov
scas
and
cmp
jbe
ret
xor
out
test
sbb
sub
mov
xchg
add
xor
cmc
in
testb
aad
add
scas
dec
mov
repnz
push
lahf
test
and
push
mov
sub
add
subl
push
adcl
es
xchg
hlt
xlat
inc
mov
lods
pop
push
dec
mov
fstl
mov
je
testb
out
jo
pop
scas
es
xlat
mov
or
outsl
mov
int
pop
mov
and
filds
repnz
adc
inc
sar
xchg
sub
rcrl
adc
mov
xor
push
bound
xchg
xor
in
dec
push
adc
iret
xor
and
shl
mov
xor
lret
cmp
cmp
inc
and
test
mov
scas
outsb
or
fstp
sub
dec
sub
clc
mov
dec
push
call
dec
fwait
daa
mov
pushf
sar
lock
sub
in
push
xchg
push
add
cli
push
add
sbb
and
sarb
push
mov
cmpsl
scas
daa
fcomps
mov
jg
loope
adc
pop
inc
xor
addl
int3
push
rolb
lahf
cs
lods
mov
pop
mov
dec
xor
jl
cmp
inc
xchg
rolb
mov
xor
fdivs
nop
push
stos
jmp
popf
sbb
aam
sub
rcll
xchg
imull
ret
stos
push
pop
and
pop
fistps
leave
out
xchg
subb
mov
dec
dec
nop
adc
jo
mov
mov
pop
xchg
and
inc
lret
inc
jno
cwtl
mov
mov
jb
iret
pop
stc
into
fs
jno
xorb
push
mov
push
frstor
push
or
div
lcall
xchg
into
inc
ficoms
leave
xchg
cs
andl
sub
xor
or
rol
sbb
xchg
popf
xchg
jns
addr16
push
aad
push
mov
popf
inc
test
jg
jo
pop
jle
mov
hlt
xchg
and
movsb
pop
inc
adc
inc
or
add
mov
fcmove
jae
add
jmp
outsb
adc
into
andl
hlt
sub
inc
sbb
fbstp
push
fistpll
lcall
lds
sbb
or
inc
mov
shrl
mov
sub
mov
popa
cmp
jno
imul
pop
popf
pop
jo
test
add
ljmp
adc
ss
das
dec
push
loope
sti
xor
inc
jle
out
pop
push
fisubrl
movsb
xchg
adc
cwtl
test
cmp
sahf
pop
mov
outsl
int
stc
sub
fcoml
add
or
lcall
lock
mov
testb
fs
insb
icebp
jg
pusha
fwait
addr16
fdivrl
out
mov
sub
or
lcall
leave
mov
lret
lcall
ror
push
stc
enter
inc
sub
inc
xchg
dec
xor
add
pop
add
adc
outsl
dec
cmp
add
call
cmp
inc
jo
pop
loope
push
sub
mov
adc
movsl
and
sbb
lret
pusha
scas
lcall
or
popa
add
sahf
stos
adc
scas
add
cltd
mov
push
ret
stc
addr16
fsubr
push
pop
cmp
and
xchg
lock
xchg
mov
jne
xor
imul
xchg
adc
pusha
and
dec
xchg
xchg
xchg
sbb
addb
js
inc
jb
inc
xor
push
test
bound
cmp
inc
push
test
jo
loope
int3
popf
orl
sub
out
aaa
and
sub
mov
icebp
into
outsb
pop
fsubrs
and
addr16
pop
rolb
in
jnp
jne
xchg
dec
sarl
lock
inc
inc
inc
imul
icebp
push
mov
shlb
jo
int3
ds
out
ja
adc
insl
je
sbb
pop
mov
cmp
lds
adc
scas
sti
inc
cld
mov
push
jmp
cwtl
or
xchg
movsl
mov
movsb
lret
push
mov
outsl
aas
lahf
sbb
add
daa
dec
dec
jnp
xlat
in
push
cwtl
push
cmp
xchg
scas
test
mov
or
jle
pop
pop
icebp
push
leave
fs
ds
mov
cmpsb
xor
jmp
jmp
fildll
sbb
test
xor
mov
xchg
push
or
imul
fadds
jo
test
shlb
mov
mov
cmp
cmp
ret
pop
inc
dec
cmp
shl
out
fdivl
and
cwtl
pop
sub
xor
add
lahf
or
ds
aam
enter
out
mov
jecxz
imul
pop
lretw
rorl
loop
repz
inc
addb
mov
jo
xchg
sub
fadd
xor
add
add
pusha
cltd
xchg
and
movsb
loop
sahf
movb
add
shll
adc
xchg
sbb
jecxz
jbe
rorb
das
std
les
in
dec
push
push
pushf
jb
pop
orb
insl
xchg
add
int3
adc
in
mov
popa
pusha
mov
sub
cwtl
push
inc
or
fcoml
insl
repz
sbb
mov
xor
inc
loopne
and
out
or
jae
add
cmpsb
dec
sti
lock
xchg
daa
test
outsb
lea
lret
sub
pop
sbb
pop
test
sbb
xor
lods
enter
inc
arpl
sub
jne
xchg
jnp
movsbl
mov
es
cmp
xor
scas
sub
or
scas
sahf
push
stos
outsl
lods
pop
and
test
sbb
push
xchg
add
jecxz
and
in
mov
mov
jge
jmp
aad
dec
xlat
call
les
push
xor
inc
mov
mov
enter
test
imul
cmp
lock
push
sbbl
aaa
shlb
enter
mov
mov
add
xchg
fisubrs
pop
cld
shlb
inc
sbb
out
add
int
mov
dec
inc
mov
inc
aas
mov
adc
xorl
aad
lods
jno
lret
pop
mov
je
pushf
insb
fdivrs
xchg
cmp
mov
stos
in
and
bound
push
and
loop
xor
cli
fisttps
sahf
mov
mov
scas
mull
or
data16
sbb
xor
and
sub
xor
and
jp
lock
inc
fdivl
dec
and
test
movsl
movsb
roll
imul
loope
sub
clc
test
xchg
js
cwtl
xchg
push
mov
jne,pt
cld
dec
jge
aaa
sub
mov
sbb
sub
aas
cmp
adc
int3
xchg
lods
clc
push
popa
xor
popf
je,pn
mov
ljmp
sbb
in
popf
int3
pop
lret
jnp
jl
xchg
fcmovnb
fidivl
fs
popa
inc
mov
xchg
ret
shl
xorb
adc
pop
mov
push
mov
clc
dec
lock
int
sbb
insl
orl
lods
enter
arpl
cld
jbe
popa
icebp
dec
mov
mov
shrb
icebp
test
mov
xor
inc
mov
pop
inc
push
push
sbb
xchg
loopne
pop
aad
or
push
mov
push
dec
or
fistps
inc
push
and
mov
push
jae
push
xchg
les
inc
add
adc
rol
ret
add
in
outsl
call
sbb
fsubrs
int3
inc
ret
mov
ret
xchg
shlb
adc
lods
lret
xor
mov
mov
fs
mov
push
cltd
push
mov
xchg
mov
lret
shl
in
mov
or
es
in
loop
inc
mov
cmp
or
push
pop
or
jo
or
fwait
mov
dec
lods
clc
inc
stos
dec
dec
push
sbb
cld
inc
xor
sbb
jecxz
bound
sti
lea
or
in
outsl
jecxz
push
mov
push
std
jle
mov
mov
mov
ffree
aaa
jle
lcall
aam
jmp
les
aas
int
add
outsl
add
repnz
in
adc
cs
int
push
mov
xchg
imul
push
mov
mov
or
arpl
sub
repz
mov
jmp
pop
stos
add
aaa
popf
lret
push
mov
xchg
sarl
jge
push
shlb
cmpsl
adc
xchg
jbe
dec
xlat
cmpl
fidivrl
push
jecxz
jp
mov
fldenv
add
dec
in
mov
aaa
add
inc
push
or
les
jbe
lret
lahf
pop
cltd
xchg
mov
in
aam
dec
gs
gs
jno
or
lcall
insl
and
js
data16
dec
cmp
mov
xchg
daa
aas
jge
sub
jnp
push
aaa
mov
loopne
and
leave
mov
sbb
jb
rcll
test
mov
xor
push
mov
jns
pavgw
aam
loope
insb
inc
cmp
pop
out
add
mov
or
mov
loop
fisubrs
aam
pop
fs
imul
testl
shll
jne
ja
stos
push
clc
adc
inc
int
bswap
or
cli
aas
pop
out
andl
popa
pop
mov
pop
int
and
dec
add
in
fmuls
test
out
mov
cltd
inc
push
inc
aad
cmpb
add
jo
mov
leave
xorl
rolb
mov
sub
aam
nop
dec
in
rcr
and
pop
inc
ret
adc
pop
hlt
mov
cwtl
imul
mov
dec
pop
inc
ror
movsl
scas
ret
xchg
jae
lock
aam
jle
repz
xchg
fwait
pop
adc
aaa
mov
stos
add
scas
nop
mov
jge
xor
bound
pop
test
ds
incl
imul
addl
adc
jbe
cmp
adc
push
divb
fcmovu
aaa
call
out
ljmp
mov
cs
sub
stos
in
cmp
jb
dec
cs
cmpsb
lret
insb
add
ja
lea
cltd
out
movsb
adc
lods
sub
mull
pusha
push
shll
mov
out
icebp
fucomp
mov
pop
sti
lahf
lock
or
jno
sbb
sbb
and
push
mov
fcmovbe
ss
add
inc
incb
and
pop
jecxz
cld
jg
scas
out
xor
push
lret
cmp
divb
cwtl
mov
aas
rorl
dec
add
int3
outsl
call
cmp
lods
fsubs
cmp
les
pushf
add
cmp
stc
dec
mov
mov
shll
daa
push
mov
jae
sahf
sbb
sbb
jg
insb
xchg
mov
sti
inc
jb
xchg
cmp
cmc
jp
push
push
scas
lcall
xchg
xchg
sub
and
dec
hlt
xor
je
push
pop
mov
sahf
or
push
mov
les
movsl
or
lret
pop
dec
xor
dec
test
outsb
stc
pop
ret
xchg
add
dec
test
gs
lahf
pop
sbb
sub
imul
pop
cmp
dec
sbb
mov
gs
data16
and
insb
aaa
cmpsb
sub
aaa
jno
xlat
sahf
mov
lcall
loopne
pop
mov
mov
adc
jl
push
cmpsl
mov
xchg
lcall
pop
in
ljmp
jo
int
xchg
sub
pop
cs
cmpsb
shr
xchg
adc
jecxz
push
imul
sub
mov
lret
cmpb
xchg
fistpll
bnd
lret
sbb
js
xchg
lods
cmc
push
sub
adc
mov
enter
add
xchg
mov
sbb
loop
xor
bound
sub
shlb
cmp
add
call
adc
sbb
imull
jge
shrb
pop
rol
and
ud1
popf
rolb
cmp
push
arpl
cli
ret
neg
mov
fistpl
outsl
leave
shll
mov
inc
ss
push
insb
pop
sbb
pop
prefetch
xchg
lahf
xor
and
and
sub
inc
mov
ret
mov
sbb
mov
xor
cmp
cmp
aad
mov
sti
dec
jecxz
add
loopne
mov
push
int
cmp
and
add
jno
sbb
adc
sti
test
jg
jnp
mov
pop
mov
out
popa
shrl
cmp
mov
xchg
fists
sub
out
fwait
out
lods
cwtl
mull
sarb
pop
adc
stc
jnp
mov
iret
add
mov
aad
cmc
js
sgdtl
adc
in
scas
xchg
scas
inc
jns
in
stc
pusha
cmc
fiadds
jmp
adc
sbb
mov
adc
cmp
add
jne
lock
std
jl
or
in
je
jne
adc
andb
aas
jp
scas
jb
inc
into
push
lock
cmp
stc
xlat
pushf
addl
lahf
xchg
pop
nop
daa
dec
aad
push
pop
lcall
dec
fisubs
push
jae
pusha
icebp
sub
pop
or
hlt
sahf
jmp
sub
test
mov
push
sub
movsb
sbb
iret
mov
std
and
mov
scas
adc
aaa
dec
mov
mov
es
jle
cmp
enter
loopne
or
mov
push
fldenv
insl
or
inc
aad
lods
xchg
sbb
nop
and
les
xchg
push
outsb
or
mov
adc
sti
inc
leave
ret
sub
hlt
mov
lcall
jl
dec
push
push
outsb
mov
in
mov
loop
inc
xchg
jae
xchg
adc
pop
mov
jg
lahf
adc
push
xchg
fimuls
lea
leave
xchg
rolb
xchg
lds
lret
orl
pop
sbb
or
mov
mov
xchg
mov
mov
or
mov
adc
js
decb
pushf
adc
jns
fistpll
sarl
sub
lret
mov
xchg
ret
sub
jg
lret
clc
cmp
cmpsl
and
roll
push
dec
sub
idivl
insb
sti
rcr
sbb
adc
stc
pushf
push
ja
dec
inc
sbb
mov
pop
movsl
fsubrs
icebp
mov
lods
aas
lcall
js
cld
stos
std
and
or
fisubrs
jb
jo
cmp
mov
in
and
fstpt
or
in
or
shrl
sub
call
repz
and
out
mov
jmp
imul
fsub
in
cmpsb
jno
cld
dec
lret
insl
fs
adc
rclb
jecxz
clc
lods
es
and
test
xchg
jns
popa
dec
les
mov
outsb
outsl
lock
aad
sbb
pop
or
push
cltd
pop
popf
jmp
js
cmp
dec
js
pop
cmp
fsubl
mov
sub
nop
clc
mov
jbe
cmp
popw
inc
sub
sbb
inc
iret
cmp
lret
mov
mov
push
rorb
rcl
popa
loop
aad
rcll
fbstp
xor
inc
or
pop
mov
fcmovu
jmp
fsubl
inc
xor
ret
sbbb
lods
stos
jg
icebp
ret
adc
mov
sarb
pop
insb
pop
nop
add
mov
jg
add
lods
or
mov
jae
add
daa
pushf
lods
stos
inc
sbb
cmp
test
test
and
pop
xlat
ret
add
frstor
pop
push
out
pop
push
mov
xchg
pop
lods
inc
dec
insl
dec
insb
in
ljmp
dec
leave
cli
dec
cmp
pop
add
add
ljmp
inc
jae
or
jp
push
icebp
mov
jo
cmp
shrl
popa
adc
sbb
out
nop
xchg
lcall
das
adcb
xlat
std
inc
and
out
push
sub
scas
xor
arpl
mov
je
add
lds
out
adc
or
mov
imul
cmc
inc
ret
stos
movsl
sub
xchg
shl
mov
pop
outsb
aam
scas
lret
out
outsb
adc
dec
rclb
sbb
daa
inc
xchg
jo
or
mov
push
xchg
cmpsl
lock
fsubs
ljmp
dec
and
es
or
or
jl
daa
mov
mov
decl
repnz
inc
clc
aam
data16
and
jns
mov
cmp
fistpll
nop
or
cmp
iret
popa
fs
mov
xor
push
shrb
loope
mov
data16
adc
pusha
out
jle
cmpsb
ret
pushl
pop
or
call
mov
mov
nop
xor
dec
sub
pop
adc
jae
sbb
cmpsb
scas
sbb
sbb
add
in
mov
data16
and
and
jo
out
fsubrs
lahf
xchg
adc
out
js
lds
fistps
mov
mov
insb
fwait
sahf
aad
add
xchg
jb
rorl
clc
mov
lret
xchg
cs
in
mov
jge
add
jno
inc
mov
sbb
and
adc
add
addr16
jle
sub
push
pop
lahf
ss
push
notl
cmc
mov
rolb
mov
je
subl
aam
fcmovnbe
cmpsl
ret
pop
lods
bound
xchg
mov
and
lods
popf
xor
pushf
dec
jbe
mov
jmp
dec
out
outsb
test
inc
dec
fwait
lods
xchg
adc
mov
jo
xchg
push
scas
ret
xor
out
int
popf
aad
pop
repz
pushf
pop
loope
cwtl
jmp
orl
pop
scas
jg
mov
dec
dec
pop
popa
lcall
lea
xchg
lds
xor
es
push
cmp
arpl
mulb
mov
jo
testl
icebp
imul
pushf
lock
addb
push
adc
jnp
aad
daa
aas
cmp
push
and
xchg
ljmp
dec
jl
enter
mov
jmp
lods
outsl
sbb
sbb
rorl
mov
sbb
fs
jmp
cmp
pop
leave
inc
xorl
sbb
xor
rcl
inc
push
sub
subl
dec
sbb
outsl
fwait
mov
jmp
arpl
dec
daa
inc
roll
ret
dec
push
les
mov
adc
xchg
inc
dec
lock
mov
and
inc
push
or
ret
aas
inc
and
aad
imul
dec
shlb
aaa
hlt
out
mov
or
xor
sub
dec
shlb
add
xorb
rcrb
stc
jp
xlat
test
mov
rcll
cmc
pushf
loop
scas
sti
fcmovne
or
sbb
sti
lock
out
call
jge
in
or
out
out
aam
add
mov
cmp
push
imul
cli
xlat
fwait
imul
mov
popa
mov
imul
movsb
cltd
cmp
cltd
aad
inc
adc
pop
aaa
ret
int
cmpb
fwait
mov
aas
jnp
mov
adc
movsb
out
negl
out
testl
cmp
lcall
out
pop
cmpsb
jbe
test
in
mov
scas
mov
shrl
rdmsr
test
dec
scas
dec
movsl
pop
das
jne
xor
repnz
cmc
push
lret
les
out
sub
fsubr
mov
repz
loopne
xor
mov
inc
jle
outsb
in
xor
dec
push
sahf
les
and
js
push
out
adc
pop
xlat
les
stc
stc
hlt
gs
inc
mov
dec
ror
fstpt
inc
sbb
out
cli
inc
and
or
jmp
incb
cmpsb
jg
or
mov
inc
movsb
les
push
pop
or
aaa
aaa
lock
and
test
lods
or
sub
aas
inc
mov
jnp
repnz
sbb
sbb
aam
or
rcrl
jecxz
pushf
xchg
push
xchg
lods
enter
cmc
jb
into
gs
test
jb
addb
inc
es
adc
mov
xchg
cltd
ror
jae
inc
sti
inc
dec
pop
adc
repnz
sub
mov
fs
in
adc
lcall
in
and
xchg
and
bnd
into
mov
cwtl
push
pop
lahf
mov
es
int
mov
insb
call
pop
pop
insb
roll
sub
push
clc
int3
in
jb
cltd
xchg
pop
test
sub
subl
mov
ljmp
dec
jo
mov
mov
pusha
or
cmp
cltd
je
sub
pmulhw
mov
and
incl
out
into
fwait
mov
std
cmpsl
repz
and
push
fisubrl
sbb
xchg
sub
movsb
aas
inc
cmp
ja
popf
xchg
mov
push
push
movsb
ljmp
cli
inc
dec
in
daa
lods
jae,pn
out
stos
js
add
in
icebp
inc
push
xchg
jmp
push
xchg
mov
mov
add
cmp
rol
ljmp
in
mov
rorl
lret
cmp
mov
lds
shr
jecxz
ja
xchg
imul
jb
inc
push
insl
insb
mov
push
push
xchg
pop
pop
mov
arpl
jo
out
int3
inc
dec
mov
fisubs
ret
adc
inc
xchg
or
push
pop
and
lock
inc
leave
leave
xlat
mov
imul
sbb
mov
rcr
ret
cmp
imul
dec
arpl
inc
mov
bsf
mov
into
sbb
jo
inc
cmpsl
jmp
les
testb
and
cwtl
outsb
jge
fcomps
jae
sahf
in
repz
lods
lock
xchg
fsub
movsb
mov
stos
dec
sbb
insb
xchg
fldcw
mov
add
das
lock
jbe
or
sub
lahf
add
in
jnp
out
in
xchg
mov
out
add
cmp
test
divl
dec
xor
test
sub
mov
add
jl
mov
or
pop
jmp
jnp
nop
push
fnsave
cld
lret
mov
sbb
test
arpl
movsb
push
adc
jmp
stos
jns
mov
xchg
lods
paddusb
xchg
lock
sarb
mov
and
addb
sub
mov
inc
push
sbb
sti
lahf
icebp
repz
call
jle
aam
jno
or
xchg
rcrl
and
mov
pop
pop
dec
mov
lea
icebp
fistpll
add
dec
orb
test
pop
push
loop
sub
cmp
cld
lahf
out
mov
sbb
mov
rcrb
adc
xchg
in
ljmp
push
mov
notb
cmc
mov
jge
imul
push
gs
mov
test
lds
push
dec
stmxcsr
mov
jae
repnz
push
lods
xor
inc
jnp
jmp
outsl
dec
jle
test
push
pop
and
aas
sub
iret
aam
sub
cmp
sub
adc
xchg
notb
sub
cli
lcall
or
mov
dec
insb
add
sahf
stos
xchg
repz
cmc
add
or
adc
fstp
jp
xor
fwait
jnp
enter
rep
mov
jne
sbb
lret
pop
pop
mov
dec
lcall
ja
jecxz
mov
in
xchg
hlt
xor
xor
dec
xchg
nop
xchg
test
mov
mov
rclb
cltd
lods
dec
adc
ficomps
mov
add
pop
pop
adc
or
mov
sbb
mov
sahf
mov
scas
fadd
sub
mov
and
xchg
mov
aaa
jecxz
sahf
rorl
sahf
je
lret
sub
mov
push
outsl
xchg
xor
pop
adc
std
mov
leave
add
xor
hlt
fwait
icebp
leave
jbe
mov
inc
aas
mov
loope
add
pop
sub
push
divb
lcall
mov
mov
roll
sub
ljmp
nop
neg
sbb
imul
push
pop
stc
adcl
test
dec
movb
mov
mov
mov
popa
mov
jle
dec
mov
scas
aaa
dec
xorl
sub
scas
mov
inc
movsb
pop
lret
pop
and
bound
test
jb
and
xor
in
cmp
add
aas
push
xor
lods
out
mov
cmc
jnp
and
popf
out
scas
and
aam
sbbb
mov
pop
lret
js
out
push
push
xchg
and
xchg
fsubl
sub
pop
fsts
leave
or
mov
je
mov
leave
pop
imul
mov
enter
cs
sahf
js
xchg
iret
bnd
ljmp
inc
adc
adc
xchg
add
pop
and
ljmp
pop
lods
lahf
xor
mov
mov
int3
xorb
sbb
jl
incb
xor
add
lods
push
and
xor
es
mov
es
mov
pop
sub
scas
repz
lret
es
inc
mov
iret
imul
sub
jnp
fwait
lds
das
add
rcll
sub
ljmp
aaa
je
rcl
test
dec
pop
lock
adc
jge
mov
fisttps
add
cmp
add
iret
test
mov
pop
push
or
pop
movsl
divl
cli
and
cmp
sbb
push
cmp
or
mov
fmull
adc
mov
aas
push
cltd
cld
jp
dec
shlb
jb
pop
add
jne
ret
ror
adc
clc
mov
dec
mov
data16
sbb
xor
lcall
sub
mov
dec
int3
out
fsts
repz
dec
js
mov
xor
jg
sub
dec
adc
mov
push
das
sub
insb
sub
push
mov
push
xor
inc
jae
or
cmp
cmp
dec
push
cmp
add
push
pop
jmp
das
adc
pop
sbb
cmpsl
xlat
shld
inc
xchg
or
xlat
mov
adc
insl
jno
xchg
adc
inc
xor
mov
rol
adc
jb
or
push
dec
fmuls
out
sbb
aas
xor
jg
adc
pop
cmp
test
sbb
push
pop
inc
das
adc
mov
test
jp
js
ror
xchg
call
test
ffree
dec
dec
std
mov
mov
inc
add
xor
xchg
hlt
imul
ret
dec
mov
testl
mov
cli
sbb
stos
cli
xchg
sub
movsb
sub
in
fnstsw
dec
pop
fs
subb
mov
mov
aad
cmc
call
out
jge
mov
mov
push
xorl
bnd
es
loope
cli
jnp
mov
push
cmp
sub
adc
push
aam
sbb
mov
adc
xlat
mov
test
dec
and
ja
addb
mov
les
jbe
lods
xlat
imul
jl
popa
xchg
clc
inc
pusha
imull
cwtl
inc
sbb
and
pop
shll
sub
dec
and
lock
iret
fsubrl
fcomi
push
mov
nop
loope
xorl
mov
adc
mov
pop
aad
xor
loope
movsb
mov
in
in
push
pusha
jge
dec
lret
sub
out
setnp
repz
and
sbb
or
gs
lock
inc
hlt
clc
data16
lock
sarb
rorb
lods
or
xlat
add
mov
testb
cs
xchg
mov
jmp
mov
jne
sahf
pop
mov
pusha
mov
or
push
pop
mov
mov
rol
mov
cmp
xor
rep
mov
cmp
sub
xchg
sbb
push
lds
inc
aaa
mov
testl
add
jg
loope
ja
scas
pop
test
icebp
mov
sub
cli
imul
xchg
int
js
jge
je
int
inc
push
mov
cmp
inc
es
add
pushf
lahf
and
sbb
jnp
dec
iret
sub
jb
enter
out
xor
mov
inc
lret
add
js
add
mov
mov
orl
test
icebp
or
add
xchg
stc
pop
in
inc
dec
sub
sar
jl
and
xor
fildll
xorb
call
cld
pop
mul
jnp
fisttps
xlat
xorb
sbb
aas
lahf
lock
push
test
mov
mov
or
inc
out
and
lods
cmp
cmp
pop
cli
mov
adc
mov
sbbb
cmp
hlt
push
outsb
inc
inc
sti
mov
xor
xor
imul
dec
dec
cvttps2pi
lea
call
bound
in
or
inc
or
pop
dec
inc
jbe
ljmp
sarl
jp
inc
xchg
sbb
mov
jmp
imul
repnz
mov
add
dec
push
pop
idivb
mov
int3
push
jae
pop
push
jne
movsl
pop
jne
imul
aas
cmp
stos
or
test
push
fsubr
inc
jb
jae
and
cs
mov
jae
mov
popa
gs
adc
cmp
in
call
fwait
sub
popf
ret
je
mov
inc
mov
jne
daa
ss
daa
shr
out
jmp
sbb
cmp
fmull
mov
push
sbb
nop
xchg
jmp
jbe
xor
mov
scas
stos
out
mov
jne
mov
sbb
adc
inc
cmpsb
lock
dec
jnp
inc
xchg
and
mov
adc
cli
mov
stc
fistpll
sub
mov
fidivrs
cli
xlat
negb
dec
mov
inc
pusha
out
or
push
outsl
lods
add
mov
jo
mov
mov
push
xchg
push
dec
loop
in
or
shl
fsubr
sbb
loope
imulb
adc
inc
fcmovu
out
popf
daa
add
mov
repnz
dec
xchg
gs
dec
mulb
sbb
sbb
clc
cmpsl
add
int3
rolb
cmc
mov
rolb
cmp
push
jb
xor
push
cmp
add
out
add
push
or
fisttps
adc
inc
or
add
sbb
xor
mov
pop
sbb
ss
push
adc
outsb
inc
dec
aad
jge
movsb
pop
rolb
sub
xchg
ja
jns
adc
cmc
lahf
adc
xor
cld
out
mov
test
push
push
mov
jl
movsb
xor
shl
sbb
pop
inc
or
xor
xchg
xchg
shrl
fisubrs
add
out
dec
mov
stc
xchg
fsts
icebp
xchg
xchg
fs
cli
or
inc
ja
fidivl
push
pop
gs
mov
fsubl
imul
aad
call
push
outsb
cmp
mov
ds
insl
mov
out
pushf
cwtl
sbb
imul
daa
lea
mov
mov
ljmp
inc
repz
sub
jnp
sbb
or
mov
xchg
inc
xor
jl
and
mov
mov
lretw
mov
fisttps
mov
test
mov
xchg
and
mov
jo
xlat
mov
and
cmpb
sti
sbb
add
aam
inc
and
xchg
call
cmpsb
add
inc
outsl
push
or
or
lods
dec
add
hlt
xchg
hlt
fistps
sbb
lock
mov
inc
xchg
pop
dec
imul
mov
lahf
sub
mov
movsb
hlt
xor
icebp
or
and
sub
mov
popf
push
sbb
or
out
jo
xorl
mov
pop
jo
out
push
in
fistps
lock
and
mov
mov
outsb
cmp
dec
inc
fwait
and
sbb
jne
jne
push
lods
test
imul
xor
sub
fildl
xchg
scas
enter
cmpsb
movsl
out
push
and
popa
fsubrs
push
pop
lods
mov
out
jae
dec
pushf
fwait
xchg
sub
jno
pop
clc
sub
scas
sbb
cwtl
mov
xchg
mov
daa
loopne
pop
lods
imul
mov
popf
sub
mov
rcrb
push
js
orl
ds
dec
mov
divb
notb
dec
add
repnz
or
mov
in
sbb
stos
ret
mov
push
push
lret
je
or
insl
add
imul
xchg
xchg
jo
test
stos
sbb
cmpsb
fs
mov
mov
inc
jle
jecxz
je
in
iret
fisubs
cmp
inc
stc
mov
fldt
jae
jb
mov
lahf
mov
xchg
or
jg
adc
and
pop
les
mov
push
icebp
or
cmp
mov
mov
movsl
rorl
or
nop
fwait
push
cld
cld
stos
and
imul
mov
pop
jne,pt
and
movsl
mov
lcall
cmp
movsl
dec
lds
push
sbb
bound
out
stos
notb
sub
fistpl
dec
imulb
out
test
test
stos
fstps
icebp
mov
out
mov
cmpsl
stc
sub
in
jnp
xchg
fsubrp
pop
mov
sbb
and
movsl
loope
aaa
rorl
insb
rolb
sub
jnp
popl
mov
nop
push
dec
mov
int
push
loop
and
cli
dec
push
std
test
cmp
js
int
cli
shlb
jb
cwtl
fcmovnb
insb
or
rorl
enter
xchg
push
or
jno
fistl
ja
jle
stos
cli
xor
insb
loope
pop
push
mov
fcomps
sub
xor
stos
mov
inc
inc
or
xlat
incb
leave
in
xchg
jbe
xlat
push
scas
sbb
stos
jns
imul
sbb
mov
and
sub
daa
pushf
lods
loopne
lds
test
int3
mov
iret
or
testl
fistpll
add
aas
dec
inc
sbb
mov
bound
shl
sub
add
adc
pop
mov
into
push
imul
rcl
cld
imul
xchg
jmp
pop
xchg
inc
or
sbb
cmp
hlt
test
ja
mov
jle
mov
mov
mov
push
lods
int
xchg
fcomi
int3
and
jne
push
inc
xor
mov
mov
mov
add
ds
mov
push
cmpsl
jecxz
sarl
push
repnz
scas
fisubs
std
pop
sbb
pop
and
out
mov
and
push
loopne
mov
push
lea
ja
test
es
jecxz
jo
aam
add
pop
dec
icebp
loopne
push
push
fldl2t
fneni(8087
sbb
mov
sub
dec
dec
mov
fwait
xchg
mov
test
xlat
sbb
les
cli
push
dec
pop
dec
jne
and
dec
out
leave
jo
xorl
xchg
jbe
ds
cld
sub
dec
int3
cmpsl
cs
ja
das
gs
dec
sti
jg
das
aaa
sub
outsl
mov
fbstp
cmc
fdivl
jge
ljmp
daa
push
sub
sbb
inc
mov
leave
jno
cs
in
jmp
xchg
cmc
notl
gs
out
mov
hlt
ds
sti
xor
sbb
sbb
cmpsl
xchg
cmp
mov
jno
fisubs
aas
dec
adc
arpl
ss
push
enter
xorl
jns
jbe
aas
adc
and
adc
test
push
jmp
repnz
inc
cld
lret
jnp
jae
mov
shll
sti
push
add
push
mov
lods
mov
inc
mov
xor
dec
js
std
les
aaa
ja
mov
xor
jae
jns
fdivrs
leave
push
and
jp
in
fsubl
subl
lock
jmp
xor
inc
test
push
int
pop
dec
push
testb
cmpsb
shl
adc
push
out
push
popf
mov
aaa
rcl
xchg
and
sub
imul
je
cmpsb
push
sub
and
jns
lods
xchg
xchg
xchg
dec
leave
sub
inc
xchg
cmp
cmc
mov
popf
sti
pop
xchg
xlat
sbb
cmp
incb
call
xorl
and
mov
xchg
sbb
mov
popa
jge
push
and
xor
jg
inc
call
popf
add
fists
stos
aas
dec
xchg
movsb
xor
mov
pop
mov
lea
adc
mov
xchg
decb
ja
out
int3
inc
push
dec
and
sahf
sub
mov
movsl
jecxz
je
cmc
pop
lds
mov
adc
fwait
jne
divl
icebp
fcmovne
pop
mov
pop
data16
push
xlat
scas
shlb
mov
or
sub
nop
xor
or
pop
mov
mov
mov
scas
add
mov
movsl
fiaddl
xor
sub
lock
mov
insl
adc
jmp
outsl
xchg
xchg
mov
std
mov
adc
aad
add
mov
aad
push
mov
stos
insb
add
inc
inc
aaa
ret
pushf
jg
and
fidivs
clc
sub
mov
xchg
and
mov
aam
sub
aam
dec
mov
jnp
cwtl
pop
fsts
stos
sbb
fidivrs
mov
dec
xchg
sbb
fwait
cmp
inc
stos
stos
out
fisubrs
in
pop
inc
jg
jp
fldcw
xor
jbe
or
inc
xchg
adc
mov
aas
or
mov
mov
or
pushf
and
xchg
arpl
outsb
dec
in
and
test
sbb
pop
add
jge
push
cmp
xor
inc
dec
push
subb
les
sub
add
lcall
lods
mov
xchg
stc
ss
pusha
out
push
mov
pop
xchg
into
lods
aas
jbe
lahf
aas
movsb
pushf
pushf
sbb
sub
add
outsl
or
xor
adc
ja
push
in
mov
pop
fisttpll
inc
jge
sbb
jo
movl
mov
mov
adc
loop
mov
dec
adc
mov
inc
outsl
and
xor
xchg
nop
xchg
fdivl
or
adc
sbb
inc
ror
rcr
pop
mov
fisubrs
sbb
mov
movsl
dec
sub
jne
dec
jae
sbb
hlt
aad
stos
cld
aad
push
shrl
mov
mov
adc
xor
pop
popa
addr16
add
dec
sbb
push
in
add
inc
stos
sarb
xchg
imul
push
dec
jo
popa
and
scas
cmp
int
jmp
adc
nop
fmull
push
inc
ljmp
mov
shlb
add
fucomp
mov
or
mov
push
lods
mov
add
jl
inc
mov
ljmp
movsl
adc
xchg
js
mov
dec
pop
dec
lods
ja
lods
sar
jae
cmp
ss
into
cmpsb
dec
bound
or
in
sub
xchg
into
movsb
add
push
test
or
pop
insl
or
mov
test
shl
je
sti
pop
hlt
adc
cmpsl
mov
fwait
xchg
cmp
mov
adc
imul
and
mov
cwtl
icebp
int3
adc
mov
pop
jp
cmp
adc
mov
xor
adc
dec
cmpsl
arpl
in
pop
push
lds
dec
movb
aam
or
outsl
rcr
ds
or
push
fiadds
and
shl
adc
adc
and
imull
in
mov
lods
sub
add
cmp
sbb
dec
xor
dec
pop
mov
aad
pop
jbe
lods
mov
test
out
xchg
sbb
or
out
jo
dec
out
cld
push
in
pop
js
add
inc
ja
data16
push
repnz
das
mov
sahf
pop
push
push
pop
mov
inc
mov
loope
or
addr16
shlb
xchg
rcrl
cmp
in
int3
mov
out
pusha
xchg
cmp
push
mov
ja
cli
decl
das
xor
inc
jbe
lods
mov
sub
data16
aas
sub
out
lahf
cmc
adc
xchg
pop
add
sub
arpl
cmpb
push
add
ds
cmpsl
shrl
fwait
loop
dec
shld
ficompl
aad
mov
sti
pop
outsb
enter
into
lods
xor
mov
cmp
cmpsl
fistpll
movsl
pop
mov
out
jle
jge
mov
add
or
test
cmpsl
lods
jbe
into
or
adc
mov
lcall
pusha
je
shl
insl
push
test
arpl
jl
push
test
test
adc
sub
dec
stc
int3
and
push
testb
cmp
push
xor
or
mov
int
lea
jg
push
rolb
sahf
mov
push
jno
lock
sub
pop
dec
push
cltd
mov
addr16
arpl
notl
test
insl
jno
jns
cmc
xchg
fstpl
cwtl
cmpsl
scas
mov
shll
iret
xor
repnz
push
xchg
mov
jl
fmul
leave
out
inc
and
mov
repz
test
push
inc
sbb
sbb
insb
test
pop
clc
or
sbb
inc
test
jne
sub
dec
aad
sarb
pop
add
sub
scas
fldcw
mov
out
xor
and
inc
sub
out
xchg
pop
sub
test
cmp
mov
gs
out
nop
rorb
xchg
pop
and
insl
in
mov
fwait
mov
loop
icebp
je
sbb
cmp
jbe
lods
pop
mov
repz
push
xor
dec
push
out
and
xchg
xor
fistps
xor
sbb
dec
in
gs
repnz
sub
or
pop
xchg
aas
call
sbb
lds
jnp
outsl
imul
push
adc
test
sbb
and
pusha
add
shrl
mov
roll
andl
hlt
pop
jl
mov
adc
pop
lods
and
ds
and
les
mov
ds
fldt
inc
cmpsb
test
xor
inc
enter
pop
test
or
pop
xor
pop
pop
in
cmpsb
add
add
shrl
sub
cld
adc
shlb
loopne
andl
test
push
adc
jb
jne
mov
mov
clc
into
adc
hlt
fidivrs
inc
push
xchg
mov
paddb
lea
fldenv
fiadds
or
sub
jnp
std
outsl
pop
mov
in
shr
sbb
pop
mov
shrb
bound
xchg
mov
es
std
pop
sub
push
popa
leave
pop
pop
mov
dec
into
or
cmp
repz
fbld
out
or
push
popf
inc
xchg
fistpll
xchg
ljmp
push
adc
ja
clc
or
out
insb
sub
adc
xchg
insb
in
push
xchg
dec
jb
fstpt
rclb
mov
cmp
mov
fildll
data16
dec
sbb
mov
xchg
lea
push
fs
pusha
lods
adc
mov
int3
iret
jo
imul
push
loope
or
andb
out
pop
and
cmpl
xor
sbb
pop
push
or
arpl
addr16
outsl
rcrb
jns
sbb
push
shrb
jnp
sbb
dec
pop
cltd
jo
push
add
pusha
lcall
loopne
insb
jmp
iret
mov
pop
lcall
push
stos
nop
jno
inc
push
pushf
dec
paddusw
push
jl
push
mov
add
mov
iret
mov
pop
test
pop
xchg
and
lret
push
fistl
rolb
inc
adc
cmpsb
mov
popa
add
call
movsl
pop
pop
adc
popa
inc
adcl
mov
adc
movsb
jmp
shrl
mov
leave
scas
enter
jbe
stos
enter
hlt
and
jg
rorl
mov
or
scas
mov
rclb
out
jmp
int
pop
xchg
addl
dec
loope
pop
pop
xchg
ss
pop
cmp
imulb
sarl
jo
cmpsl
xorl
jno
or
mov
fiaddl
cwtl
fsubrs
mov
repnz
enter
mov
cltd
ret
xor
jmp
pop
lods
out
outsb
pop
test
push
and
or
push
jno
aas
sub
xor
jno
and
addr16
repz
cld
inc
dec
repz
nop
push
imul
mov
dec
fistpll
adc
or
hlt
push
jno
jbe
ss
lcall
mov
dec
push
in
push
push
jne
inc
fidivrl
jp
xchg
lahf
mov
in
push
push
jl
jbe
lods
fdivrp
fwait
in
or
inc
dec
enter
arpl
ret
push
fwait
add
in
xchg
in
push
mov
call
pushf
insl
gs
or
push
and
add
or
lret
xchg
pop
aam
pushf
mov
nop
pop
mov
or
xor
pusha
cmp
inc
sub
jl
sub
cmp
mov
xor
sahf
std
sbb
loope
mov
sahf
data16
and
mov
out
cmpsl
jecxz
xor
mov
in
lret
add
pop
mov
jp
cmp
iret
scas
mov
scas
pop
in
mov
mov
hlt
fisubs
out
adc
out
adc
or
pop
int3
push
lcall
es
fcoms
and
pushf
cmc
xorps
xchg
jge
cmp
mov
pop
cs
pop
rcll
daa
jmp
cld
fisttpl
add
in
sbb
cs
xor
lods
idivb
jbe
push
dec
in
cmp
dec
bound
stc
cmp
cmp
rorb
inc
dec
fdivrl
xchg
je
push
add
aad
mov
mov
sbb
out
cmp
cmp
lods
sahf
adc
rclb
int
loop
fiaddl
loop
add
xor
pop
cmp
jns
xor
sub
pop
ljmp
xchg
test
sub
pop
out
rcrb
jae
xchg
push
icebp
sbb
popf
ja
fnstsw
iret
icebp
mov
rol
movsb
mov
sub
xor
push
dec
ss
sbb
addr16
push
sub
loop
scas
jecxz
sub
cld
xor
fdivs
inc
mov
push
ror
adc
or
adc
in
mov
mulb
xchg
or
lods
jbe
mov
inc
jnp
movsb
movsl
add
jp
push
daa
xchg
inc
ret
rcll
jmp
cwtl
push
loope
std
test
push
sub
jmp
out
repz
sahf
ds
mov
cmpsb
inc
test
es
cmove
inc
pusha
pop
and
arpl
inc
pop
inc
dec
fldl2t
and
ljmp
mov
imul
clc
enter
lret
sub
add
sbb
mov
adc
shrl
dec
out
mov
dec
in
xchg
pusha
ss
and
sub
out
xchg
mov
xchg
cs
mov
loop
addl
cwtl
mov
pusha
xchg
sarb
mov
cld
inc
xor
cltd
xor
arpl
clc
pop
nop
and
mov
subb
js
fsubrl
xor
adc
sub
adc
cwtl
xchg
pop
outsl
imul
popf
mov
push
fdivr
sti
ret
imul
xor
mov
cmp
call
into
pop
addl
lret
or
jecxz
jae
inc
int
stc
jmp
mov
js
jne
xchg
and
ja
fildll
mov
fs
adc
mov
push
jp
pop
les
iret
adcl
push
adc
icebp
fists
stos
cmp
mov
jmp
jge
mov
out
pop
jg
pop
into
xchg
jp
cmp
inc
fwait
mov
push
jae
xchg
mov
enter
add
mov
lea
sub
shlb
imul
pop
aaa
push
pop
movsb
pop
pop
sub
sub
push
or
js
in
push
inc
ljmp
movsb
xchg
pop
popa
test
test
sbb
in
push
xlat
mov
push
cmpsl
xchg
push
pop
sub
cli
jae
rcr
cli
mov
loopne
movntq
cmp
rol
in
xor
daa
insb
ljmp
dec
in
lcall
addr16
fmuls
push
xchg
mov
loope
sub
jae
loope
inc
fdivp
repz
jp
mov
xchg
mov
fldenv
xchg
popa
sbb
jp
sarl
sbb
cltd
cmpsl
inc
inc
imul
movsl
push
jmp
add
sbb
lds
repz
xchg
fstpt
bnd
lahf
pop
mov
insl
incl
stos
lret
dec
ljmp
push
mov
aas
add
fcoml
jae
sub
dec
push
or
aas
sub
stos
aas
fmuls
mov
adc
rcr
repnz
sbb
aad
outsl
aad
xchg
or
sbbb
icebp
sbb
adc
ficomps
lahf
push
out
sbb
jo
mov
and
pop
jp
mov
movsb
in
scas
mov
lret
pop
test
lods
repz
pop
outsb
es
mov
fs
jecxz
imul
mov
jae
xchg
popf
movsb
lods
add
pop
daa
push
xchg
inc
cmpb
xchg
bound
ss
pop
std
out
cmpb
jmp
inc
pop
sbb
cli
push
add
mov
int3
cld
test
push
mull
xlat
jnp
mov
xchg
in
xchg
dec
inc
push
push
nop
mov
mov
mov
popa
pop
into
sbb
and
lock
mov
faddl
adc
fdivr
arpl
roll
mov
mov
lods
add
push
xor
cli
sbb
into
addl
mov
ss
jl
std
jecxz
dec
pop
inc
adc
pop
mov
test
scas
les
pop
pop
jb
ret
cmp
pusha
dec
aaa
sbb
mov
dec
insb
scas
in
daa
jns
test
push
dec
aam
adc
mov
cmp
mov
test
fwait
xor
pop
cmp
and
push
cltd
cmc
aad
or
lods
in
xor
dec
xlat
aas
xor
jp
and
dec
push
aam
or
sub
sub
stos
ss
push
fs
fdiv
clc
push
addb
int
jno
testb
mov
dec
pop
mov
add
sub
sub
jo
adc
jmp
pop
out
push
or
movl
test
cmp
scas
stos
bound
mov
jl
mov
jbe
loop
in
push
adc
not
xor
xor
sbb
test
arpl
lock
out
pop
shrl
das
push
xor
sbb
pop
mov
cmp
repz
jle
inc
jns
loopne
aaa
movsb
sbb
xchg
pop
dec
push
stos
or
lods
test
popf
push
adc
sti
push
fwait
cmpsb
mov
test
addr16
sub
stos
add
popf
cmp
sbb
adc
mov
pop
xchg
jb
sti
pop
outsl
mov
or
mov
scas
cmpsb
add
ret
mov
xor
pushl
sbb
movsb
and
jb
mov
push
or
sub
pop
imul
xchg
mov
ret
xor
cmp
bound
out
leave
call
out
mov
pop
call
insl
pop
ficomps
sbb
test
ja
arpl
repz
scas
inc
out
sub
push
xor
cwtl
les
lahf
xlat
addps
popf
adc
fstl
cmc
pusha
cmp
add
aaa
fsubrl
jbe
and
mov
loopne
mov
stc
outsl
test
es
lret
jae
lods
pop
pop
jb
jecxz
mov
pop
mov
mov
mov
out
pop
or
cmc
push
sub
mov
test
mov
dec
adc
mov
movl
loope
cmpsb
pop
test
adcl
aaa
adc
imul
adc
imul
jae
push
xchg
test
icebp
lret
in
popf
scas
fucom
orl
clc
mov
pmullw
fistpl
in
push
jae
and
rcrb
dec
add
in
aad
push
mov
clc
pop
std
xor
and
add
dec
arpl
xchg
arpl
sub
xlat
jg
mov
jno
stos
or
sub
push
das
jno
out
mov
iret
in
inc
imul
jne
ss
aas
jmp
pop
das
xchg
leave
jge
negb
clc
sarl
shlb
stc
jge
adc
and
lods
mov
jge
and
das
xlat
pop
in
in
cmpsl
inc
fs
test
and
fldcw
gs
out
xor
jo
xor
negb
cmp
xor
cltd
and
fistl
enter
mov
lods
cmp
lods
orb
mov
xchg
in
sub
xchg
dec
dec
jle
adc
and
ret
out
and
mov
mov
cmp
lock
enter
cmpsb
sub
in
aas
jo
movsl
adc
adc
enter
jno
ret
aaa
imul
cmc
hlt
rorb
cli
pop
std
pop
jo
pushf
addr16
xchg
ret
fucomi
enter
test
popw
push
sub
xchg
adcl
inc
xchg
dec
loop
repnz
aaa
lds
cli
lods
sub
mov
dec
int3
jo
fstp
cmp
xchg
sbb
stc
lret
add
cmp
filds
mov
repz
fbstp
mov
push
and
dec
test
nop
and
inc
rcrl
sub
inc
ljmp
addb
repz
fwait
out
xor
cltd
lods
sbb
test
sbb
lret
pop
lock
out
lcall
jne
mov
cmp
mov
push
inc
cmp
or
movsb
arpl
push
sbbl
and
fcmovnb
or
leave
pop
push
mov
int3
or
push
xchg
aam
imul
pop
jns
in
or
cld
inc
call
fs
xor
nop
clc
push
inc
inc
fadd
push
mov
cmp
inc
mov
and
and
repz
push
ja
jmp
cmp
inc
xchg
jp
dec
testb
loope
pop
jo
xchg
add
jnp
in
lcall
and
jo
pop
adcl
fldt
lods
mov
xchg
dec
dec
ss
std
shll
into
mov
cmc
lahf
fstpt
test
push
rcrb
sub
sbb
in
mov
sbb
sub
mov
mov
adc
push
cltd
test
es
or
iret
adc
popa
add
jl
daa
addl
push
mul
cltd
mov
movsl
xlat
dec
cmp
dec
push
xchg
fdivrs
add
pusha
sbb
push
ret
sbb
sub
in
test
loopne
cli
xchg
test
cmc
mov
stc
int
dec
adc
xor
shlb
ret
push
out
roll
lret
mov
or
push
aad
jnp
jo
push
sahf
fnstcw
jb
in
cmp
out
pop
or
sbb
pop
inc
popa
addb
frstor
jns
out
mov
scas
pop
xchg
in
sub
pop
shrb
push
faddp
outsl
and
xchg
or
mov
sbb
xor
jle
out
lods
ljmp
cwtl
lds
push
jns
icebp
and
call
movsb
mov
add
mov
arpl
mov
push
mov
das
in
xlat
out
pop
jns
and
addr16
or
sub
imul
imul
in
js
clc
or
mov
daa
push
jmp
jmp
mov
sub
lahf
aaa
sub
dec
test
aad
jo
rolb
shld
arpl
insl
dec
orb
les
jnp
mov
jbe
xchg
jle
push
pushf
cmp
mov
jb
or
dec
or
dec
repz
jge
faddl
xor
mov
dec
xchg
dec
and
cltd
sar
mov
imul
mov
mov
daa
bound
lds
jne
daa
clc
aam
mov
xlat
inc
shl
iret
aaa
or
in
pop
bnd
iret
xchg
je
adcl
dec
test
cld
mov
jne
dec
mov
jo
inc
imul
inc
cmp
aaa
fmuls
roll
sub
hlt
movsb
pusha
push
cmp
cmpsb
stos
stos
movsb
pop
sahf
xchg
lods
cmp
cli
cmc
decl
in
fidivrl
pop
leave
xchg
rcr
add
sbb
xor
xor
mov
mov
jge
pop
mov
pop
or
inc
cwtl
or
inc
mov
and
mov
sub
lea
jge
sub
or
lods
scas
mov
cltd
push
out
sub
ror
mov
adc
adc
sub
pop
stos
xchg
pusha
fwait
pop
lahf
dec
push
sbb
push
gs
in
int
rclb
dec
push
push
pop
jle
push
test
mov
cmp
jg
pop
fisttps
adc
hlt
movsb
push
or
scas
xlat
xchg
push
inc
xchg
movsl
call
les
push
sub
pop
test
push
push
xchg
mov
adc
pop
mov
sbb
shl
shll
push
lods
rcll
sbb
mov
cltd
out
xchg
ja
or
dec
scas
sub
jns
cmp
js
adc
icebp
dec
scas
and
jo
push
cmp
dec
mull
sub
imul
sahf
pusha
cli
push
sub
add
cld
cld
gs
sti
inc
push
les
fdivrs
ret
or
cmp
xchg
xchg
fmuls
inc
add
inc
sub
mov
add
iret
aad
add
dec
adc
in
shll
repnz
mov
xchg
shrb
and
rclb
mov
pop
aam
push
sarb
divb
movsb
imul
test
out
mov
cmpsb
shrb
or
inc
add
bound
jno
or
insl
stos
push
popf
sahf
adc
sbbb
sub
fwait
fidivrl
stos
or
xchg
mov
and
ss
jle
sbbb
call
mov
dec
loopne
dec
cltd
mov
pop
std
daa
inc
lods
push
lea
lea
adc
std
cmp
mov
stos
daa
adc
insb
frstor
mov
outsb
jecxz
sbb
add
into
push
mov
mov
roll
test
push
mov
pushf
mov
sub
repz
loope
xor
pop
cmpsl
dec
xchg
dec
mov
ja
push
xlat
repz
nop
pop
out
dec
cmp
xor
mov
mov
mov
stos
stc
xchg
sub
mov
repnz
jle
idiv
dec
mov
stc
and
lret
mov
idiv
dec
mov
xlat
ret
stos
mulb
addl
or
xlat
sub
sub
adc
jae
inc
std
ja
mov
sqrtps
ret
filds
test
xor
add
jmp
cld
adc
or
mov
cs
ljmp
xor
push
mov
mov
dec
jecxz
psrlw
mov
clc
inc
dec
shl
inc
adc
or
add
fiadds
shll
ret
sbb
jp
mov
sbb
jmp
sub
loope
push
fistpll
xchg
and
cwtl
into
pop
push
and
repnz
mov
mov
mov
xchg
ljmp
mov
shrb
xor
jp
dec
fldcw
daa
sti
push
jmp
mov
fldl
sub
sti
roll
inc
fistpl
push
test
int3
jmp
movsl
in
daa
je
pop
outsl
push
insl
pop
out
dec
mov
mov
dec
push
movsl
mov
mov
mov
fwait
incb
mov
mov
mov
jge
daa
shll
ljmp
fwait
jb
outsl
add
imul
pop
gs
mov
rorl
out
fs
mov
mov
xor
imulb
push
jns
insb
stos
xor
xor
jno
mov
add
jb
insl
or
pop
push
adc
mov
xlat
lret
sti
fistl
jb
xlat
pop
adc
pop
cmp
xor
mov
xchg
ret
jne
add
add
xor
dec
or
outsl
and
divb
mov
xor
sub
fsubr
lods
push
es
in
pop
jb
in
xchg
push
in
or
cmp
pusha
push
jmp
add
lock
xor
cmpsb
lahf
dec
movsb
inc
mov
push
and
xlat
add
and
es
add
test
movsl
mov
insb
cmp
in
jae
je
xor
insl
in
push
pop
cld
sbb
std
arpl
rcl
and
imul
std
jecxz
pop
and
add
jns
push
mov
lds
sbb
sub
cwtl
andb
popf
dec
sub
xchg
iret
rorl
sub
lock
inc
enter
adc
push
daa
push
pop
loope
lcall
push
rcrl
push
gs
inc
push
in
addr16
cmc
jns
ds
ljmp
push
fsubl
add
fwait
adc
mov
mov
xlat
loope
fldt
pop
sbb
cmp
or
inc
jl
mov
fidivl
add
push
dec
sahf
sbb
jge
dec
and
mov
lods
shl
push
xor
pop
and
mov
xlat
cmp
or
jmp
push
call
stc
pop
roll
add
addr16
push
loop
mov
and
out
je
and
and
mov
cwtl
lea
fdivrs
adc
push
or
addr16
aas
mov
pop
mov
pop
mov
mov
in
int3
mov
mov
std
divl
or
xlat
loope
rcll
test
or
dec
out
icebp
mov
push
adcb
inc
fstpt
inc
fstpl
mov
cmp
loope
pop
or
xchg
cmpsb
insb
sbb
or
add
push
jecxz
and
add
mov
std
mov
das
out
out
mov
stos
jbe
mov
bound
or
fistl
rcrb
loope
sbb
push
push
jne
pop
dec
inc
add
and
lret
cmp
jne
dec
iret
add
test
addr16
sbb
xchg
jmp
or
cmp
mov
mov
pop
jb
lock
jp
or
mov
dec
scas
das
inc
cmp
cli
inc
repz
jmp
pop
xlat
in
das
movsl
mov
gs
dec
mov
lods
sbb
cmc
mov
int3
ljmp
pop
es
and
dec
jg
aas
mov
dec
stos
aad
out
push
or
inc
fidivrs
xor
jne
jge
pop
mov
mov
daa
sbb
icebp
xor
mov
out
in
sbb
pop
pop
loope
popf
test
xchg
out
pop
repnz
or
xlat
mov
in
stos
movsl
jbe
fcmove
leave
js
fcom
cmp
out
hlt
inc
cmp
stos
cli
mov
sahf
idiv
mov
lock
pusha
cs
shlb
loopne
sbb
sahf
xor
shl
fnsave
add
cltd
xchg
sbb
cld
insb
push
mov
cmp
faddl
cmpsb
mov
jno
push
push
rcll
aas
popf
or
jle
popa
shll
repnz
adc
mov
shrl
lret
jge
mov
push
inc
fists
and
jne
fdivrs
cmp
jne
pushf
xchg
cmp
xchg
xor
pop
push
test
or
add
fadd
movsb
jp
push
inc
in
addr16
cmpsl
xchg
cld
push
cmp
shrl
orb
push
xchg
xor
and
fs
push
ffree
add
xchg
test
push
lods
cmpsb
dec
sbb
pop
data16
ret
nop
lcall
incb
xchg
test
mov
add
lahf
lcall
dec
adc
mov
cmp
push
mov
xchg
in
std
mov
mov
pop
add
mov
mov
inc
in
fs
xchg
jae
test
mov
sub
stos
divl
or
xchg
dec
repz
inc
pop
ret
idivb
es
pop
lds
rorl
xchg
lea
mov
jmp
mov
xchg
cmc
cmp
dec
jno
call
xor
mov
jne
pusha
outsb
cld
pop
and
push
fdiv
hlt
or
or
es
mov
aaa
in
int3
inc
add
lods
fnstcw
sub
pop
push
pop
clc
out
ficoms
xchg
imul
pop
push
push
test
fdivrl
mov
or
mov
out
jb
idivl
mov
push
jnp
inc
inc
in
in
repnz
data16
pop
enter
in
cmpsl
and
push
scas
pop
pop
js
ret
mov
xchg
inc
cmp
fdivr
sub
int3
cmp
xor
imul
mov
mov
lcall
into
lcall
sub
mov
mov
shll
test
movsb
and
ss
adc
lock
mov
in
imul
cld
int3
repnz
inc
mov
aas
sti
pusha
call
jbe
xor
in
pop
dec
fs
adc
jb
repnz
shlb
in
jns
imul
xor
idiv
popa
or
es
in
mov
aam
pshufw
push
sahf
scas
mov
dec
jl
movsb
jecxz
ljmp
test
pop
cmp
or
insb
cmp
jno
rcrb
das
xchg
movsl
bound
faddl
sbb
jl
inc
movl
push
sbb
fyl2xp1
scas
dec
shll
xor
and
cmp
add
pop
nop
jb
push
fldenv
jmp
aas
rcrl
or
sub
jae
add
popl
in
xor
lods
mov
mov
notl
sub
adc
flds
mov
adc
imul
das
leave
xchg
dec
enter
leave
jmp
outsl
dec
mov
jb
lds
mov
scas
add
jns
lds
filds
xchg
pop
mov
insl
cmpl
ljmp
dec
mov
fwait
mov
mov
cwtl
inc
dec
out
and
jne
push
rclb
mov
adc
add
mov
dec
xchg
push
jne
mov
mov
mov
lods
loop
adc
xor
add
fcoml
or
jle
out
bound
xchg
inc
fsubs
mov
pop
nop
stos
cmpsl
inc
push
repnz
psllq
dec
in
mov
pusha
adc
mov
pop
mov
sbb
test
mov
lcall
mov
cmpsl
mov
sub
out
dec
xchg
dec
scas
sub
and
push
jecxz
mov
and
aam
hlt
mov
mov
es
call
lds
cmp
les
adc
pop
mov
pop
or
adc
scas
mov
xlat
js
arpl
dec
cmp
xlat
xchg
stc
xor
xor
iret
cli
stos
data16
add
mov
fwait
cli
rcl
dec
sbb
shrb
stos
mov
lods
mov
sub
icebp
test
jle
push
rolb
mov
aas
push
data16
in
dec
lahf
or
mov
fdivl
sub
es
adc
adc
cmp
sub
hlt
fisubs
or
lea
test
mov
rorl
fsub
and
test
pop
aam
rcl
push
je
add
out
out
into
mov
inc
data16
sub
sub
mov
sub
in
cmp
enter
sub
jb
mov
push
ret
xor
jns
ss
dec
ret
push
add
or
subl
popf
push
or
ss
fsubrs
xor
adc
inc
jns
xchg
and
movl
pop
mov
cmp
out
dec
push
rorb
and
or
add
and
int
fcmovb
dec
mov
mov
inc
mov
imul
out
sahf
cwtl
leave
sbb
cltd
addb
dec
or
or
mov
cld
out
shll
push
aad
or
in
push
int
or
xchg
sti
or
enter
push
inc
fnstcw
xor
push
int3
push
xchg
leave
hlt
xlat
jl
pop
cmp
movsb
shlb
loope
xchg
arpl
xchg
cmc
cli
cwtl
fisttps
ja
xor
adc
aaa
mov
pushf
shrl
hlt
out
in
leave
jmp
sbbl
lds
pop
sub
xor
dec
out
adc
ret
dec
jle
rcr
mov
loop
push
jecxz
xor
rolb
push
mov
jbe
xchg
sahf
jne
gs
mov
fs
lret
scas
setg
cmp
bound
or
dec
bound
mov
jl
imul
jne
push
dec
adc
outsb
sarb
fisttps
ret
cmp
repnz
hlt
push
or
fs
mov
mov
cltd
dec
dec
decl
movsb
pop
jb
outsl
mov
xchg
dec
ds
imul
adc
jmp
std
pop
push
inc
jge
mov
adc
lret
xor
inc
in
adc
mov
andb
and
inc
mov
dec
xor
in
or
mov
bound
cmp
and
ss
in
jl
mov
add
in
mov
mov
add
aaa
cmc
idivl
pop
xor
xchg
dec
sbbb
adc
sub
sub
shrl
pop
or
or
fidivs
nop
lcallw
fimuls
addr16
sbb
jle
pop
decb
dec
pop
push
pop
js
outsb
xor
adc
mov
test
xor
adc
fisubl
pop
xchg
jecxz
and
mov
les
popf
and
in
fstpl
stc
jmp
gs
outsb
xchg
incl
movsb
cwtl
push
cwtl
out
movsl
std
add
or
mov
mov
xor
dec
adc
insb
pop
push
dec
pop
jecxz
jne
cld
adc
inc
fstps
inc
pusha
in
out
test
mov
out
lcall
and
das
stos
adc
mov
lahf
cld
rcr
lods
cmp
jbe
add
xor
loope
lea
jnp
in
dec
fsubl
jns
shrl
adc
sub
mov
enter
std
jle
sbb
ret
inc
inc
pop
cld
fstp
inc
mov
push
mull
sarl
test
sbb
adc
jbe
lcall
loop
push
test
lods
sub
das
mov
sub
pop
adc
jecxz
in
xchg
pop
out
or
cld
pop
jb
in
jg
xor
jg
mov
ret
sbb
cli
mov
mov
iret
mov
jne
xor
xor
inc
icebp
add
scas
ja
sbb
mov
imul
repz
int3
ficoml
loop
push
push
and
js
or
mov
hlt
sub
fstl
dec
out
stc
push
cwtl
lods
add
decl
arpl
notb
aaa
pop
mov
pop
aaa
scas
push
nop
sahf
movsl
push
cmc
xor
xchg
fidivs
xlat
fbld
xchg
lahf
sbb
inc
mov
je
jecxz
std
es
pop
or
xchg
test
movsb
out
cwtl
scas
xor
lods
inc
mov
fisubrl
push
scas
mov
cmpsb
pop
mov
mov
call
sti
sub
into
insl
popa
jbe
clc
jg
push
or
stos
pop
sahf
ret
lea
insl
pop
lods
push
cmc
cld
cwtl
xor
or
pop
push
mov
loopne
or
add
notl
dec
das
xchg
and
add
and
add
push
cmp
ljmp
mov
xor
fldcw
sbb
pop
shll
adc
mov
xchg
dec
and
stc
lock
sub
xlat
fdivrl
inc
pop
jge
jmp
jae
pop
outsb
dec
loopne
or
add
pop
mov
mov
jno,pn
mov
inc
pop
fnstenv
jnp
xchg
jne
adc
dec
pop
inc
aaa
imulb
adc
pop
pop
mov
shlb
pop
push
lods
outsl
ret
into
dec
mov
lcall
sbbl
push
ret
jns
adc
out
sahf
lret
push
xchg
test
pusha
mov
repnz
sbb
shl
add
loop
in
cmp
repnz
cmp
push
cwtl
lock
aaa
push
pop
ret
in
add
jbe
fbld
xor
mov
adc
cltd
test
and
jl
sbb
push
scas
leave
out
dec
fdivrl
mov
cmp
or
or
cwtl
sbb
jbe
dec
das
mov
pop
popa
sub
sbb
into
pop
cmp
inc
adc
jae,pt
cmp
mov
std
sbb
loope
jmp
xchg
push
mov
mov
pop
add
outsb
adc
sbb
cmpb
rcrb
lahf
dec
aas
mov
and
inc
xchg
and
mov
dec
repnz
sub
gs
jmp
je
ljmp
jne
xchg
in
stos
inc
into
fstps
inc
ss
sub
jge
xor
aam
out
lret
test
movsl
fidivrs
jne
lods
jg
inc
popf
stc
mov
and
shrb
adc
mov
xor
push
add
das
test
sarb
scas
jbe
imul
subl
adc
mov
mov
add
stos
mov
dec
mov
add
mov
push
cmpsl
movsl
ficompl
popa
add
adc
lods
push
inc
lret
jne
fdivl
or
cli
push
add
lcall
ficoms
lds
sub
scas
add
sub
add
in
jb
ljmp
push
out
push
mov
sbb
pop
dec
es
mov
ret
xchg
pop
cli
enter
lcall
and
pop
enter
testl
jb
mov
cmp
daa
repnz
mov
mov
dec
fistps
cmpsb
lret
dec
pop
push
mov
cmc
dec
je
add
push
rorl
sbb
xor
lea
loop
xor
sub
clc
mov
fwait
and
in
ror
xor
add
push
int
lods
dec
testb
sub
or
gs
mov
pop
sbb
inc
out
xchg
and
enter
shlb
std
pop
nop
outsb
shrl
dec
xor
cmp
loopne
pop
enter
sti
jmp
xchg
fsubs
and
aam
into
shlb
stc
out
mov
lods
pusha
xor
mov
pop
xchg
xor
lret
sub
push
leave
in
sahf
or
mov
and
pop
mov
jb
loop
or
sub
and
loop
push
imul
test
sub
sbb
nop
mov
push
hlt
test
mov
mov
js
out
xchg
xchg
or
data16
and
ret
std
add
cmp
roll
add
popa
imull
enter
push
nop
xor
inc
jne
ret
nop
movsl
push
lods
cwtl
cmp
dec
pusha
cwtl
jnp
push
mov
test
aaa
in
jmp
fdivs
sub
movsl
mov
shl
insb
gs
xchg
out
mov
push
call
sub
xchg
push
std
pop
pushw
or
bnd
pop
repz
mov
mov
test
jg
dec
xor
push
xor
push
je
ret
adc
ja
decb
and
push
push
pop
push
jbe
sbb
pop
rol
pop
push
scas
pop
inc
mov
call
ds
add
jl
in
imul
scas
inc
and
ds
or
xor
lds
bound
dec
pop
stc
icebp
jb
and
leave
scas
sub
mov
mov
sub
test
push
and
imul
mov
dec
sbb
test
adc
and
das
stos
mov
mov
je
ljmp
or
fdivs
je
pop
jmp
pop
mov
mov
mov
popa
out
fisubrs
out
test
arpl
mov
or
inc
mov
jl
daa
jb
adc
mov
sahf
inc
mov
sbb
loop
mov
xchg
loope
jb
addr16
pop
push
jnp
lods
mov
fnstcw
popa
mov
push
movsl
jl
pop
xor
repnz
dec
fyl2x
xor
pop
not
jbe
xor
ja
jmp
mov
xor
movsl
cmp
cwtl
push
xor
movsl
ror
sarl
iret
dec
fstl
call
insb
sti
pop
sbb
inc
mov
dec
pop
xchg
fs
ficoml
pop
sbb
mov
fcmovnb
push
push
in
cmp
or
outsl
sub
mov
sarb
dec
adc
fistpll
sbb
sbb
mov
xchg
xor
xor
loopne
xchg
fcom
int
imul
pop
int3
jno,pt
jl
mov
test
repnz
cwtl
xchg
ds
shl
dec
rorb
lcall
xchg
out
push
iret
or
inc
stos
xor
lcall
sbb
mov
sub
popa
rclb
mov
aad
and
pop
out
insl
ja
popf
jae
sbb
mov
mov
jb
ja
leave
lret
pop
xchg
add
sub
iret
cwtl
push
push
iret
sbb
pop
lret
and
lcall
test
shrl
out
mov
xchg
mov
pop
push
and
adc
jo
fimuls
fisubrs
stos
cmp
testb
fs
pop
jo
ljmp
mov
add
ret
sbb
sub
pop
test
je
dec
out
stos
xor
and
cs
pop
pushaw
push
pop
dec
loopne
cmpsl
insb
stos
inc
lahf
xor
int
push
xchg
jo
test
sub
fdivs
mov
addb
inc
or
add
cmp
int
mov
or
arpl
mov
dec
jns
lret
mov
mov
addb
mov
cmp
mov
mov
push
out
push
repnz
icebp
or
mov
adc
mov
xchg
repnz
adc
das
scas
aas
out
sub
fiadds
dec
insb
dec
outsb
add
out
xchg
jbe
pushf
sbb
xor
inc
xchg
pop
inc
bound
mov
pushl
std
jbe
ror
push
mov
ficoms
sbb
push
hlt
aaa
and
and
mov
loope
lcall
out
test
cmp
xchg
orl
add
not
icebp
lahf
in
adc
cltd
fldt
lahf
jae
adc
fistps
push
lock
shlb
jmp
push
pop
sub
icebp
mov
out
jns
adc
xchg
mul
imul
cltd
cmp
jecxz
jmp
loope
jle
aaa
mov
or
inc
pop
jo
call
mov
cltd
cmp
dec
pop
test
sub
push
jbe
lods
imul
insb
dec
scas
shll
arpl
mov
popa
cmpsb
scas
mov
push
sub
cmpsb
rcrb
xchg
mov
cli
mov
xor
ds
xchg
mov
out
in
leave
subb
cmp
lret
adc
or
sub
mov
pusha
call
pop
cmp
sahf
cmp
and
ret
xor
pop
lea
psubusb
out
cmp
out
pop
shll
divl
or
movsb
in
and
mov
xor
test
pop
jp
subl
jge
repnz
pop
mov
dec
rcll
and
jge
fnsave
out
mov
and
inc
nop
aam
lock
cmc
mov
pop
ss
mov
int
in
out
pop
xchg
mov
mov
lea
or
loop
pmaxub
pop
aaa
popa
sub
sub
jno
sahf
and
dec
insl
inc
jo
push
push
jmp
js
or
iret
fisubrl
and
mov
mov
pop
jae
pop
movsb
pop
lret
sbb
insl
das
inc
lock
in
xlat
fs
insl
outsl
insl
adc
inc
adc
push
and
int3
test
pop
lods
and
mov
sti
imul
divl
jne
sti
enter
add
inc
cmp
test
ljmp
ja
aaa
sub
push
xor
mov
pushf
jp
pop
jo,pn
add
decb
lret
loop
mov
ret
lods
xor
insl
orb
popa
test
incb
mov
xchg
xor
insb
adc
xchg
addr16
sub
js
notl
movsl
inc
mov
movsb
jae
inc
out
ficomps
roll
dec
push
mov
js
jns
or
sub
cmp
cld
rcl
push
js,pn
mov
andl
xchg
fcmove
mov
sbb
mov
pop
jno
in
pop
gs
aad
dec
aad
sbb
add
inc
or
adc
movsl
loopne
ja
imul
popf
ret
mov
mov
pop
jns
iret
xor
test
cmp
sti
ds
cwtl
jae
inc
or
mov
lcall
mov
stos
push
pushf
lret
mov
sti
shlb
sbb
scas
popa
sbbl
push
sti
inc
push
daa
fistpl
adc
xor
cli
shlb
xor
jae
in
outsl
jle
jge
xchg
mov
loope
mov
mov
pop
lahf
jmp
add
push
jae
popa
mov
outsb
imul
sbb
adc
mov
outsl
ds
in
mov
imul
mov
and
mov
stos
jle
clc
jb
xor
mov
jle
aas
dec
jg
mov
sbb
add
cmc
add
jne
cs
mov
aad
mov
stos
testl
fdivrl
sbb
or
xor
push
in
fwait
int
dec
out
or
ja
testl
pusha
jb
decl
in
ret
sbb
lods
and
in
lret
dec
ret
adc
sahf
aad
xorl
or
movsl
push
jns
notl
xor
mov
add
xchg
fs
pop
test
mov
jno
and
and
nop
jge
data16
cmpsl
xorl
clc
jno
mov
hlt
jl
fs
out
adc
das
and
cltd
mov
icebp
push
adc
ljmp
xchg
xor
es
loop
and
lret
je
shll
ror
and
loop
fisubl
orl
lods
in
push
push
mov
scas
jns
or
xchg
xchg
or
scas
xorl
jl
push
cltd
cltd
mov
in
int3
pop
fisubrl
lds
or
mov
xor
or
mov
xchg
or
xchg
loope
aad
imul
add
stos
stos
add
dec
xchg
sbb
xorl
xchg
fadds
aas
into
hlt
xorl
inc
xorl
bound
into
or
mov
cld
pusha
lcall
adc
mov
imul
sbb
mov
out
cmp
loope
jbe
inc
iret
loope
cmc
loope
loop
mov
mov
jle
cltd
hlt
in
jmp
fistl
daa
adc
jge
adc
jmp
stc
loope
movb
dec
jae
cmp
imul
xor
les
xor
movsl
and
adcl
sbb
push
xor
inc
mov
enter
push
std
inc
insl
andl
cmc
jbe
movsb
cmp
mov
fsubr
lret
add
pop
sahf
push
pop
inc
stos
xchg
push
xchg
nop
mov
push
loope
mov
xchg
imul
ret
mov
aaa
into
xchg
loope
jle
in
pop
sbb
jg
or
jae
dec
cwtl
mov
popa
xchg
jp
dec
jg
mul
xor
bts
dec
cmp
push
cwtl
push
dec
pop
call
mov
mov
movsb
dec
and
fnstcw
leave
sub
lahf
jp
stos
outsl
adc
ret
pop
pushf
out
shlb
jmp
add
xchg
popf
les
mov
xchg
loopne
aas
xchg
hlt
mov
and
dec
in
push
dec
or
xor
cwtl
cli
inc
dec
movsl
sub
ret
aaa
push
lcall
mov
stos
test
jecxz
pop
insl
push
xchg
jge
lahf
enter
push
imul
xor
lds
cmp
or
js
sub
add
sub
cmp
sub
fs
sub
fsubrp
cmc
je
mov
scas
lret
and
adc
aas
mov
cli
sub
sahf
hlt
enter
inc
xchg
leave
into
pushf
and
insb
leave
xchg
mov
inc
cmp
jo,pn
rcll
push
xor
pusha
dec
mov
test
xchg
cld
dec
sub
bound
push
aad
mov
fs
dec
dec
dec
popf
js
je
xorb
lods
mov
inc
jge
mov
das
mov
add
xor
sub
jl
movsl
pop
mov
lcall
push
jae
mov
xchg
stos
dec
mov
xchg
das
mov
adc
inc
loope,pt
or
pusha
lods
push
sub
rcrl
pusha
adc
mov
xor
push
lahf
xchg
jne
sbb
dec
test
cli
negl
mov
ret
mov
lret
pop
ja
mov
jae
jo
mov
mov
ret
xchg
inc
cmc
scas
sti
shrb
push
or
arpl
rolb
sub
xor
jge
ret
sub
int3
insl
dec
scas
lret
test
jnp
call
and
das
mov
sti
push
ljmp
sbb
lock
cmp
dec
mov
inc
sub
mov
je
inc
lcall
test
jo
cmp
mov
shr
cmp
lret
sbb
pop
aam
xor
test
in
push
out
mov
jecxz
loopne
and
xor
fs
incb
gs
push
cli
dec
setg
jmp
ret
xchg
add
loope
gs
cmpsb
xorb
inc
rcrl
andb
mov
adc
inc
and
arpl
mov
jb
ret
rcll
dec
lcall
inc
and
outsb
push
lods
xchg
mov
div
jo
add
sarb
repnz
mov
jmp
dec
lea
jmp
rorb
inc
movsl
data16
mov
sbb
push
or
ss
xor
mov
lahf
lcall
in
mov
cld
or
push
les
stc
lods
std
pop
pushf
sub
stc
shll
xor
sbb
insb
jge
test
and
enter
mov
lret
sbb
fildl
ds
pop
mov
iret
push
mov
lods
pop
dec
adcl
and
mov
push
xchg
lods
push
add
lods
jle
insl
push
mov
icebp
sbb
or
add
das
xchg
movsb
or
mov
cmpsb
add
fcomps
jne
pop
sbb
aad
mov
cmp
xor
je
or
outsl
or
xchg
mov
xorb
cmp
inc
cli
cmpsb
daa
pusha
mov
mov
add
cmp
or
hlt
lods
mov
repz
mov
xchg
fiaddl
fnstcw
mov
insb
pop
sbb
cwtl
jmp
outsl
ss
fildl
out
lock
and
mov
inc
lret
cld
xchg
imul
push
adc
ljmp
pop
inc
out
adc
mov
outsl
mov
push
jae
loop
xchg
insl
fs
push
sub
or
loop
mov
mov
stos
pop
mov
xchg
mov
cmp
hlt
jmp
loop
mov
outsb
movsl
add
in
mov
jns
dec
imul
mov
fistpll
jae
mov
sbb
rep
mov
sub
jnp
cmp
bound
test
hlt
mov
or
xchg
and
xchg
idiv
ja
cmp
ljmp
mov
jmp
mov
shr
cmp
mov
sub
add
arpl
xchg
and
pop
mov
and
cmp
mov
mov
ss
sub
lcall
pop
pushf
dec
sbb
jle
or
decl
mov
outsl
rcll
pop
xor
xchg
repnz
fwait
inc
aam
mov
nop
or
jo
push
in
decl
les
sti
lea
push
int3
pop
shl
jmp
mov
into
inc
mov
xor
inc
test
out
cmp
pop
aas
shrl
hlt
mov
push
sbb
mov
icebp
jbe
stc
fstpl
bound
test
xor
adc
loop
sbb
lcall
fdivl
rcrb
inc
mov
stos
adc
xchg
xlat
mov
fmul
fwait
inc
inc
cmp
call
adc
outsl
in
mov
sbb
and
out
addr16
ja
cmp
ss
stc
cmp
std
cmp
call
add
insb
or
shll
cli
pop
adc
pushf
add
and
cmpsl
cli
popf
adc
pop
mov
jl
push
js
mov
adc
repz
fldt
mov
fs
add
enter
fildl
lret
mov
sbb
pop
or
aam
arpl
jle
jmp
jge
sub
sbb
imul
addr16
jmp
out
mov
flds
fisubrl
daa
fs
testb
push
sub
aam
jo
xlat
test
push
dec
or
mov
dec
fwait
clc
and
sbb
mov
mov
cmp
fldl
lret
add
cld
jg
dec
push
mov
mov
jl
jp
and
in
mov
int3
xchg
arpl
scas
push
sbb
and
dec
jmp
ljmp
in
sub
lock
inc
orl
test
push
mov
dec
inc
cltd
pop
in
add
lods
add
lea
xchg
adcb
aam
mov
outsb
mov
ja
fstpl
lock
mov
pop
test
cmpsb
or
jns
add
in
lahf
xor
pop
pusha
loop
in
sti
sub
adc
std
int
sub
mov
inc
imul
pop
scas
pop
bound
mov
scas
sbb
pop
jg
mov
pop
loop
cmp
scas
repnz
cld
call
xchg
sbb
nop
dec
shrl
cmp
mov
xor
ljmp
or
jmp
or
mov
add
sbb
xchg
sahf
jle
mov
stos
lods
push
addl
cmp
cmpsl
addb
pop
push
imul
mov
lock
sub
jo
sarl
inc
aam
jg
mov
test
sub
inc
pop
fwait
or
add
and
pop
rcrl
add
or
test
mov
in
or
adc
test
lcall
fcoms
pop
mov
ds
test
out
add
add
sbb
or
push
fst
push
fsubp
jne
fcmovb
out
jmp
hlt
inc
rol
aaa
loopne
push
or
mov
into
push
pop
mov
repnz
mov
jle
aas
aam
adc
push
mov
mov
add
leave
or
pop
test
add
mov
jmp
insl
outsb
nop
cmp
push
int3
push
int3
add
jp
xor
cmp
outsb
ja
dec
mov
pushf
lock
cmp
or
fisttpll
sub
dec
fmulp
mov
sbb
outsl
sbb
dec
mov
mov
push
pop
das
pop
sub
pop
mov
pop
dec
push
add
lret
lcall
add
sub
sbb
mov
pop
ret
addr16
dec
mov
psubusb
shll
shl
pop
pop
and
and
popa
lock
jp
pusha
jle
xor
push
jecxz
dec
cld
das
dec
iret
sub
imul
iret
push
dec
inc
xorb
clc
and
mov
insb
xor
sbb
imul
cmp
outsl
sub
out
sbb
push
negl
xchg
scas
out
inc
add
cwtl
mov
orb
test
aas
push
xchg
add
dec
cs
sbb
sbb
sti
push
sahf
rorl
lcall
jb
sbb
adc
and
and
xorb
xorl
sbb
or
lods
outsl
popf
mov
and
inc
mov
sub
cmpsb
les
pop
lret
fildll
aaa
adc
popa
movsl
mov
pop
pop
sti
xor
cld
in
cld
cmp
inc
fisttps
sahf
test
dec
mov
cwtl
aaa
shr
int
mov
in
in
sub
sahf
or
xchg
mov
mov
rcr
push
ret
xchg
in
or
pop
xchg
int3
bound
dec
cmp
pop
lds
inc
mov
inc
push
mov
insb
sub
out
movsb
mov
hlt
into
pop
dec
cmp
hlt
jmp
pushf
push
push
xlat
jne
pop
ret
in
fcomi
sbb
cmc
stc
add
shll
sub
jnp
push
jae
sbb
inc
addl
cmp
sub
sub
imul
jle
fnstenv
sbb
scas
push
add
xchg
repnz
add
jo
lods
ds
es
outsl
xor
jp
or
leave
pusha
mov
jbe
das
in
jg
fwait
jbe
jge
inc
es
andl
or
les
rol
jg
push
mov
sub
into
repnz
in
test
xor
xchg
xor
stos
pop
lds
mov
cmpl
jne
jb
fldcw
js
out
decb
push
js
push
daa
dec
sbb
imul
add
movsl
test
cmpsb
xor
cmp
out
mov
cmp
outsb
inc
mov
insl
jle
adc
pop
aam
dec
or
imull
cltd
inc
mov
subb
xchg
xchg
inc
sub
pop
mov
int
fsubrs
xchg
adc
dec
or
push
add
lahf
rol
aad
loope
cmc
scas
mov
inc
test
leave
imul
mov
add
into
popa
or
ror
and
gs
cmpsb
iret
negb
pop
loopne
xchg
xchg
inc
inc
mul
clc
dec
stos
enter
lret
pushf
inc
lret
or
sbb
pop
imul
pop
mov
or
mov
ljmp
test
movsl
xchg
pop
test
and
cld
ljmp
push
adc
cmp
aaa
cmpsb
cmp
adc
and
xor
dec
push
stos
push
xchg
jge
mov
inc
or
fsubrs
cmovb
push
ret
icebp
addr16
push
or
data16
or
pop
ljmp
fs
aam
ja
aad
incl
mov
xor
xchg
push
or
or
sbb
cmp
loopne
js
push
lods
mov
xchg
cmpsl
push
sub
in
faddl
dec
push
or
pause
clc
mov
clc
fwait
inc
aad
jle
add
push
xor
add
out
mov
lea
mov
call
push
add
enter
jbe
stos
cmp
xchg
das
mov
and
popa
sbb
xor
mov
sub
rcll
outsb
add
xchg
cmpb
xchg
sbbb
mov
adc
xor
pop
fwait
add
sahf
mov
cmc
xchg
sbbl
fcmovne
dec
repnz
mov
inc
ss
aad
add
dec
pop
fwait
popa
outsb
loope
dec
jmp
jg
in
or
sbb
jmp
or
cmp
add
hlt
adc
aam
pop
xchg
push
leave
cmp
cmp
fisttpl
scas
xor
scas
xchg
int
addr16
xchg
popa
inc
in
pop
jnp
pop
push
mov
andl
adc
mov
mov
outsl
jnp
arpl
xchg
out
jmp
cld
pop
jmp
adc
sub
jge
outsb
xchg
push
aad
adc
mov
pop
and
fs
rorl
adc
inc
mov
test
pop
fbstp
popa
icebp
in
jp
fldl
fisubl
pop
dec
inc
lret
loop
sarl
pop
dec
add
inc
sbbl
xchg
outsl
jge
fwait
mov
inc
fwait
xlat
jle
push
test
mov
shl
cmp
inc
sbb
daa
jne
mov
dec
daa
out
insl
add
cmp
cmpsb
add
imul
xchg
push
repnz
std
jbe
jp
sarb
push
imul
sbb
fsubs
in
into
cmp
mov
test
push
adc
add
shr
or
popa
outsb
adc
stos
sub
loopne
mov
add
imul
push
and
and
stos
int
cmp
xchg
loope
lahf
loope
cld
mov
push
mov
jns
sbb
xor
sbb
pop
lods
in
aad
das
jb
add
mov
data16
test
aad
dec
data16
sub
mov
mov
xchg
jns
out
and
xor
mov
push
lret
lahf
aas
or
lret
bound
insb
or
popf
and
or
hlt
loopne
das
aam
push
fldt
jle
and
push
ja
into
or
out
sub
loopne
mov
add
cmpsl
mov
jl
iret
pop
rol
int
ds
inc
call
or
andb
sub
xchg
jne
mov
mov
aaa
adc
adc
gs
arpl
xor
xor
cmc
dec
pop
mov
or
pop
leave
sbb
add
jbe
jbe
test
add
mov
push
and
push
lcall
adc
cmpsb
fs
ret
jae
out
jecxz
pop
in
divl
jge
push
xor
loope
dec
xchg
mov
mov
test
imul
rcr
mov
andl
jno
and
mov
adc
mov
xchg
outsl
frstor
jne
jp
jo
fdivrp
je
stos
cmpsb
adc
popa
scas
fs
popf
mov
fisttpl
fldl
jl
ret
scas
push
movsb
xor
into
mov
adc
cmpsl
push
mov
aad
or
sarl
add
adc
in
pop
insb
adcb
in
dec
inc
gs
hlt
add
add
mov
add
mov
es
ljmp
mov
jae
out
sti
push
shll
push
out
xchg
fs
pusha
aas
leave
clc
xchg
xchg
or
adc
mov
icebp
clc
loope
and
ss
cmpsl
mov
lret
insb
and
xchg
mov
sbb
pushf
xchg
mov
cmpb
jle
out
or
mov
pop
xchg
out
out
or
and
shlb
inc
xor
movsb
shlb
js
bound
test
jmp
sbb
sub
cmpsl
xchg
stos
sbb
mov
mov
fistl
sbb
mov
pop
pop
mul
jae
stos
push
fstl
aam
lods
push
dec
in
jecxz
adc
sti
repnz
inc
add
inc
rep
addr16
jmp
into
cmp
ja
fnstsw
jecxz
xor
roll
mov
add
xor
fdiv
or
jmp
xor
or
sub
mull
addr16
push
xor
roll
mov
out
lea
ret
or
cmp
fnstenv
xchg
flds
jne
inc
das
sub
xlat
ret
jno
cmp
jmp
sarl
pop
sbb
fidivl
lods
add
aas
or
adc
push
fiadds
dec
mulb
or
xchg
lds
push
pop
xchg
push
lods
outsb
fisttps
mov
int
jae
dec
lea
inc
jecxz
fimull
stos
push
hlt
sub
nop
xlat
sbb
inc
call
test
jp
test
adc
mov
movsb
pcmpgtd
jae
add
and
dec
dec
cmp
testl
ret
shlb
inc
je
mov
mov
std
das
and
and
outsb
inc
sub
mov
sbbb
call
push
sub
cltd
mov
or
rorl
lods
adc
daa
test
xor
mov
das
push
cwtl
in
cmp
mov
push
incl
inc
adc
data16
push
mov
icebp
icebp
hlt
leave
movb
ret
add
jg
fstps
lds
sbb
mov
xor
sahf
mov
jg
cltd
or
mov
hlt
insl
cli
push
cmpsl
ds
ds
test
add
mov
out
dec
call
stos
pop
out
vhsubpd
xchg
mov
and
push
imul
sub
sahf
xor
inc
add
mov
push
inc
in
xlat
daa
dec
cmp
jp
xor
push
jg
int
mov
cwtl
push
sbb
mov
and
xchg
adc
jns
pushf
ljmp
inc
data16
xor
andb
mov
sub
rcl
jne
jnp
mov
bound
enter
xchg
stos
subb
xor
ds
sub
stos
pop
xchg
push
rclb
fldcw
arpl
ficoms
and
jge
bnd
movsl
push
jge
clc
clc
fsts
ja
sbb
rorb
and
es
fsub
cmp
scas
outsl
or
push
insl
scas
mov
sbb
pop
je
dec
adc
nop
and
adc
inc
dec
aas
and
aad
popf
xor
lock
repnz
jmp
cmp
pop
rcrl
pop
jmp
push
lahf
ror
call
insl
cmp
shl
andps
dec
inc
jns
cmp
and
xor
xor
aas
pop
fwait
or
rsqrtps
shlb
jp
pop
push
sub
xor
fsubs
mov
das
sbb
inc
ljmp
call
ficoms
sub
or
int
mov
lea
pop
pop
xor
rcll
insb
mov
decb
add
sub
jb
or
mov
sarb
sub
lds
dec
test
xchg
push
pop
outsl
add
std
out
inc
and
test
cs
xrelease
loope
stos
dec
dec
cltd
out
mov
fucomi
cli
mov
outsl
pop
adc
cmp
xchg
lea
in
loopne
pusha
outsb
xchg
lods
mov
push
add
push
cli
inc
ret
mov
xor
pop
into
and
adc
les
lcall
xor
sbbb
or
jnp
jo
mov
mov
je
notl
xor
movsb
icebp
aaa
fwait
stc
or
repz
sbb
or
into
adc
les
mov
into
loopne
cmpsb
out
not
sbb
jne
ja
ret
loope
repz
icebp
fdivrs
xlat
loope
call
and
cmpsb
leave
sub
sub
sbb
inc
mov
fcoml
push
mov
pop
mov
add
mov
into
adc
std
adc
or
adc
popa
sti
push
sbb
jecxz
push
popf
lahf
lret
andl
cmp
mov
imul
inc
dec
dec
xchg
fistpl
pusha
data16
mulb
shl
fdiv
inc
fidivs
inc
fwait
lret
rcrl
addl
adc
or
out
ret
push
dec
jmp
adc
loop
lret
rcll
add
lret
adc
and
sbb
es
mov
ss
flds
mov
cmp
push
dec
sbbl
xchg
sub
cmp
ds
jmp
std
int
call
mov
dec
and
mov
aad
sbb
mov
sbb
cmp
stos
jl
mov
and
inc
test
and
push
jecxz
es
xchg
cmp
adc
xchg
adc
sub
insb
test
orb
repnz
gs
jno
mov
cmp
mov
jns
mov
or
dec
pop
movsl
int
ljmp
std
pushf
pop
or
ljmp
mov
sbb
push
add
sub
lock
mov
xorb
fidivl
stos
mov
sub
test
mov
xlat
cmp
cmp
sbb
icebp
push
mov
mov
mov
jbe
mov
mov
mov
mov
imul
cmp
fidivl
mov
sub
jno
lods
push
inc
add
xchg
bswap
xor
dec
xor
nop
imul
dec
dec
cmpsl
pop
movsl
jge
rcrl
adc
or
nop
jnp
adc
lret
mov
push
cwtl
rorb
mov
mov
push
mov
dec
cmp
and
daa
in
sub
cmc
ss
nop
adc
dec
movsl
test
mov
sub
jl
xor
push
cmp
test
mov
xor
scas
jge
xlat
pop
cmp
inc
push
xchg
add
dec
inc
lahf
pusha
and
push
cmpl
loop
dec
clc
mov
sub
scas
sub
inc
adc
out
pop
and
les
push
in
pop
inc
inc
mov
sbb
les
cmp
faddp
int
mov
out
insb
repz
dec
and
adc
pop
and
sahf
jno
and
inc
addb
and
ret
mov
icebp
popf
pushf
pop
mov
gs
push
inc
int3
testb
mov
inc
jmp
icebp
xchg
push
iret
subl
xchg
cmc
jne
call
xchg
xchg
push
xor
cmp
cmp
fldcw
cmp
andb
aad
pusha
aas
fdivl
push
std
fidivl
arpl
in
movb
cs
dec
iret
frstor
sub
pop
sbb
push
ret
add
sarl
xchg
xchg
std
fdivrl
dec
adc
movsb
adc
mov
adc
mov
outsb
call
adc
sbb
rcl
call
flds
and
aas
shll
rcrb
lds
imul
xchg
cmp
fiaddl
dec
dec
add
es
mov
pop
push
stos
dec
or
int3
shll
dec
imul
aam
inc
pop
out
cli
add
cmp
sub
scas
int
cwtl
xchg
sahf
rorl
adc
push
insl
dec
xlat
cs
pop
insb
popf
les
or
mov
cwtl
inc
xor
sti
inc
xor
xor
cltd
enter
outsb
cmp
ss
ja
aas
movl
sbb
mov
cld
lods
inc
inc
loop
rcr
cmc
and
out
jno
roll
mov
aad
je
insb
jbe
fs
ret
mov
das
lahf
dec
mov
and
xor
decl
push
ficoml
mov
jge
add
adc
adc
loopne
xor
xchg
push
cmc
cld
stos
leave
aam
or
imul
mov
dec
add
testl
mov
mov
out
inc
rcrl
xchg
xor
shll
bound
dec
fildll
ja
sub
pop
xchg
mov
jne
daa
add
stos
shll
pop
les
xor
iret
scas
push
aaa
mov
mov
mov
lods
cmp
pop
pop
xchg
xchg
int3
pop
dec
cmpsl
sbb
aaa
imul
scas
xlat
mov
mov
dec
dec
pop
test
xchg
inc
inc
rcll
mov
in
and
in
fdivl
add
push
je
dec
ret
scas
pop
and
xchg
sti
repz
and
aaa
mov
mov
dec
cmp
outsb
xor
fistl
repz
mov
aaa
fisttps
and
incl
sub
cmp
pop
ret
popa
filds
out
outsl
aaa
pushl
and
mov
mov
mov
ljmp
movl
fists
xchg
sbb
mov
jmp
pop
es
mov
adc
inc
mov
sbb
ret
xchg
cld
cmp
arpl
daa
dec
sub
jne
and
pop
xor
psubusb
scas
sbb
and
and
call
sbb
pop
jle
or
and
inc
test
sbb
cmp
int
popf
aad
mov
mov
mov
pop
push
cmp
push
rclb
mov
aaa
aad
xchg
mov
cmp
repz
push
jns
loope
xor
jae
and
mov
pop
aaa
pop
push
cs
daa
mov
testl
pop
mov
mov
push
test
test
pop
sbb
push
loope
jns
aaa
sbb
mov
test
lds
out
dec
lret
enter
subl
add
mov
mov
dec
fadds
dec
or
mov
pop
dec
add
adc
lahf
mov
push
mov
inc
and
sti
jg
jbe
aaa
pop
and
gs
out
xor
sbb
or
arpl
mov
rcr
mov
pop
mov
xorl
or
push
jle
mov
dec
in
inc
pop
repz
rcrb
jno
push
test
jbe
insb
mov
adc
push
popa
xor
sahf
inc
ret
in
xchg
and
cltd
inc
dec
xchg
sub
or
mov
adc
sbb
nop
roll
adc
push
xor
push
jno
imul
and
jg
aaa
cli
push
adc
dec
mov
inc
pushf
xchg
dec
inc
push
sub
rcrl
std
mov
nop
jmp
idiv
push
inc
add
in
and
jp
xchg
lcall
sbb
pop
pushf
pusha
fs
mov
sti
cmp
inc
rcl
out
subb
and
add
je
mov
lcall
sbb
pop
sbb
jo
pop
push
mov
cmp
xchg
xchg
push
in
or
das
fidivrs
inc
rcrb
dec
xchg
or
sahf
shll
mov
divb
mov
cwtl
add
nop
out
ficoms
cmp
or
and
jne
and
int3
push
lcall
mov
xchg
mov
or
sahf
cmp
jmp
jnp
das
fcmove
shll
aaa
mov
or
arpl
cmpl
xchg
aaa
sub
leave
sub
pop
xor
or
lods
jns
shll
add
sbb
mov
adc
mov
mov
mov
lret
ret
mov
pushf
fwait
out
add
mov
call
test
sbb
addb
icebp
stc
int3
sub
sbbl
cmp
pop
aas
sub
or
mov
and
and
sbb
mov
cwtl
pop
icebp
mov
fildl
and
jge
call
pop
icebp
mov
fisttpl
jmp
fnstenv
push
lea
xor
mov
mov
mov
mov
sbb
push
sub
push
popf
xor
movsl
mov
and
sbb
and
jge
roll
add
mov
mov
jbe
lods
test
insl
and
ret
sub
dec
mov
jl
add
das
xchg
push
mov
inc
xor
fmulp
adc
adcl
pop
dec
aam
dec
push
stos
loop
jnp
or
dec
mov
mov
push
call
add
push
and
ret
and
mov
inc
xor
gs
push
push
idivl
mov
pop
sbb
mov
cmpsb
dec
mov
out
lods
or
pop
cltd
jnp
int3
and
sahf
das
push
adc
orl
mov
mov
dec
jbe
jo
push
out
pop
in
dec
xchg
mov
sbb
or
inc
push
push
jo
ret
vmwrite
repnz
add
mov
pop
xchg
sub
fsubs
push
sarb
stos
scas
mov
inc
jns
imul
jno
lret
shlb
jbe
xchg
test
rcrb
pop
aaa
add
add
pushf
fsts
sbb
dec
jp
push
je
std
inc
lea
dec
fdivs
mov
add
or
mov
cs
push
push
loop
cld
or
mov
test
mov
out
es
test
sub
sub
test
push
mov
mov
pusha
push
icebp
popf
inc
ja
jg
sti
add
lock
or
xchg
pusha
iret
mov
pop
mov
rcr
icebp
loopne
mov
out
enter
pop
jns
mov
insl
jp
dec
lcall
push
push
jge
xchg
jne
into
jo
out
xor
fcoml
movsl
pop
outsb
xchg
xor
mov
lods
pop
shll
out
rcrl
fisubs
rorl
test
scas
bsr
push
popf
pop
cmpsb
insb
addr16
jno
mulps
sbb
pusha
xchg
jg
lcall
mov
sahf
cmp
pop
enter
jmp
jecxz
cltd
fs
pop
dec
icebp
in
xchg
jno
out
mov
mov
push
xchg
inc
sahf
test
add
mov
sahf
rcrl
cli
es
out
imul
or
sub
jne
in
mov
sbb
cmp
fdivl
cmpsb
dec
fists
jbe
or
xor
in
jmp
shlb
loope
lods
outsb
inc
and
jge
test
xchg
sub
mov
jae
cmp
mov
in
mov
lret
mov
in
shrb
inc
adc
ret
out
cmpsb
pushf
push
or
test
jae
or
add
pop
adc
lods
insl
test
pop
mov
pop
repnz
adc
mov
jmp
cmp
mov
or
push
in
adcb
pop
clc
lods
mov
or
je
pushf
fsts
xchg
mov
pop
cmc
iret
mov
inc
adc
inc
mov
sbb
aaa
adc
das
mov
popf
ljmp
sahf
daa
and
pop
enter
cmc
inc
lret
xor
rorb
or
add
inc
into
cmp
push
adc
sub
cmp
lret
pop
hlt
bound
lock
dec
cmp
decb
and
out
test
xor
mov
test
adc
les
out
jp
pop
outsb
jnp
insl
enter
cmp
hlt
push
add
xlat
js
out
in
iret
sbb
mov
cmp
lret
in
jb
pop
mov
enter
pop
pop
aad
adc
out
stos
cli
mov
loope
pop
mov
and
mov
fistps
hlt
dec
popf
adc
mov
lcall
or
pop
xor
int3
inc
cmp
sbb
xchg
iret
xchg
inc
test
dec
xchg
or
out
pop
cmp
outsb
push
xlat
sub
lret
push
sub
inc
cmp
sbb
pop
mov
add
je
fstpl
in
mov
cs
fidivrl
clc
dec
push
mov
pushf
xchg
mov
pop
stos
jns
or
push
test
dec
in
xor
test
jecxz
in
jmp
mov
jno
fwait
mov
sarl
ljmp
xor
mov
sbb
mov
ljmp
scas
add
loope
jnp
sbb
cmpl
mov
stos
mov
push
cltd
add
cld
mov
mov
outsb
popa
in
push
jle
pop
aas
adc
fwait
scas
rcrl
outsb
vunpcklps
in
lea
loope
fstpt
std
dec
negb
xlat
stos
stos
aas
cld
clc
imul
and
mov
fdivs
ret
cmp
cmpsl
popa
add
lock
jle
sub
lret
push
lret
arpl
pop
push
xorb
xchg
incl
dec
sbb
mov
int
idivl
imul
fbstp
jno
mov
int
cmp
ret
jne
dec
lods
icebp
test
cmp
fucom
stos
insb
mov
push
fstpt
cwtl
lahf
cmp
shr
mov
fnstcw
xor
ljmp
repz
xchg
call
lods
and
sbb
sbb
mov
repz
inc
pusha
dec
jns
adc
or
cmp
xchg
out
adc
push
int
and
out
mov
xchg
jnp
or
icebp
pushf
std
pop
and
or
add
stos
inc
adc
pop
adc
pop
inc
pop
xor
leave
or
xor
ret
push
clc
repz
ja
jno
xchg
loopne
jg
push
xchg
loope
in
shrb
int3
mov
es
jnp
fs
cmpps
rclb
jnp
adc
sahf
mov
cs
outsl
out
jp
out
sub
pop
push
cmpsl
xorb
fxch
in
call
out
into
mov
leave
adc
mov
adc
gs
xor
ljmp
insb
pop
in
adc
test
mov
test
pop
int
addb
mov
bound
adcb
pop
xlat
out
sub
push
stc
je
lock
xlat
pop
jne
jle
jge
aas
das
or
movsl
jp
xchg
repnz
xchg
jmp
xor
icebp
scas
sub
jmp
imul
jbe
cld
sub
filds
push
test
je
je
loopne
jo
push
scas
dec
jmp
or
loopne
mov
scas
fisubl
gs
sbb
test
movsb
pop
enter
roll
lcall
cs
sub
mov
xchg
inc
xorl
adc
call
push
jmp
shrl
pop
lods
lds
push
dec
aad
add
fucomip
jo
lahf
mov
dec
lea
pop
pusha
jbe
fsubp
cmp
ret
jo
xchg
out
test
mov
mov
inc
incb
sbb
xchg
sbb
out
adc
pop
mov
adc
out
sbb
sub
cltd
push
fsubl
data16
cltd
jo
xchg
in
addr16
out
ret
cmp
cld
fcomi
jmp
int
cmp
fstl
enter
adc
in
or
lea
push
lds
std
sbb
filds
xchg
sbb
cwtl
inc
jno
dec
sub
mov
mov
dec
cmc
lahf
jp
pop
cltd
mov
push
iret
test
and
mov
cmp
inc
xchg
mov
xor
push
lods
mov
inc
push
xchg
adc
push
sbbl
pop
or
andl
and
add
push
enter
fcmovbe
inc
mov
mov
mov
movsb
leave
fwait
lods
xor
pop
fcom
ljmp
sub
movsl
out
lcall
sub
int
repz
push
xchg
mov
mov
mov
ror
loop
mov
arpl
shrl
cmp
shll
mov
outsb
aam
shrb
cmp
sti
lods
jo
dec
das
and
inc
loope
mov
jbe
and
push
stos
fmuls
loop
ja
icebp
mov
sti
cltd
fs
popf
movsl
jg
xchg
mov
bound
mov
and
xchg
stos
bound
lret
push
fwait
mov
push
addr16
std
lret
ss
repz
and
and
push
aas
jmp
mov
fwait
add
push
roll
and
xor
lods
cwtl
dec
movsb
xchg
mov
sbb
pop
in
mov
dec
jmp
adcl
fcomps
repnz
das
cld
sub
stos
loopne
sbb
or
loop,pt
in
dec
stos
xor
push
stos
xchg
jae
bound
xchg
fdiv
dec
push
mov
fisubrs
xor
popf
inc
scas
out
fcmovnb
adc
dec
xchg
xor
jb
mov
je
pcmpgtd
sub
xchg
inc
movsl
xchg
push
jl
xchg
xchg
scas
xchg
xchg
jmp
sub
daa
insb
mov
jp
repz
lods
hlt
pop
inc
jbe
nop
mov
dec
jle
xchg
push
jge
sbb
dec
mov
push
push
imul
imul
mov
push
pop
repnz
pop
lret
ds
enter
lcall
fsub
in
xor
stos
std
xor
or
xor
or
int3
fwait
sbb
jg
ss
push
pop
mov
movsb
subb
push
ret
stc
out
mov
sbb
std
push
cmp
loop
cmp
dec
mov
inc
loop
or
pop
cmp
sbb
divl
xor
shlb
stc
cmp
dec
inc
adc
scas
inc
xchg
stos
or
rcr
push
lock
test
cmp
inc
nop
jns
cmpsl
or
mov
scas
jl
xor
xchg
daa
adc
jl
dec
jg
je
mov
mov
adc
pop
addr16
test
mov
jge
cltd
rcl
and
fidivl
clc
mov
cmp
shlb
xchg
cmp
xchg
cld
aas
push
pop
ds
loope
test
pop
push
cmp
aaa
fsubr
jmp
mov
sarb
sahf
test
push
or
test
je
jb
sbb
adc
push
in
mov
sub
xchg
inc
xor
jne
std
or
or
push
and
sbb
mull
mov
jge
ror
lea
popa
push
repnz
add
into
push
ret
in
pop
add
push
ds
sub
push
testb
jbe
or
mov
leave
dec
loope
mov
xor
cli
inc
push
xchg
mov
mov
and
test
sbbl
mov
dec
icebp
lea
je
aas
xchg
lahf
xchg
push
push
or
aam
jae
mov
jae
outsb
in
or
dec
inc
jne
into
push
or
scas
scas
fsubl
xor
jg
cltd
or
fsubrs
popf
popa
add
fisubrl
cli
or
cvtps2pd
push
enter
sbb
dec
and
imul
lahf
xor
mov
sub
ret
add
lcall
hlt
jnp
adc
xchg
jmp
push
cmp
daa
mov
add
pop
pop
cmpsb
cli
mov
lds
and
test
popa
in
scas
inc
icebp
lods
jge
stos
xchg
call
mov
mov
cmpsb
aas
adc
divb
dec
add
mov
imul
dec
dec
cwtl
jbe
mov
inc
iret
sub
inc
dec
sarl
pushl
lods
lea
data16
out
aad
xchg
xlat
fisubrl
sbb
pop
adc
aaa
aaa
or
mov
xor
pminub
sbb
in
in
adc
mov
dec
add
push
or
in
and
jl
push
jae
ret
adc
iret
les
je
xor
cwtl
sbb
incl
in
faddp
or
sahf
ja
in
mov
xor
nop
adc
lret
jb
shrb
stc
or
xor
loope
pop
movsl
pop
in
gs
movsl
push
ljmp
mov
dec
jnp
ljmp
fldcw
stc
push
bound
add
or
cld
js
jb
pusha
sbb
fs
push
xor
mov
rcll
repnz
lea
cli
push
dec
xchg
jecxz
icebp
inc
pop
lcall
ror
cmp
pop
jmp
pop
ret
and
and
mov
out
push
dec
mov
jb
data16
mov
shll
adc
arpl
dec
sub
rorl
cmpb
js
and
and
inc
lods
aas
in
imul
jne
notb
mov
cmp
roll
stos
sbbb
xlat
push
mov
pop
pushf
push
pop
pushf
popf
add
push
mov
sub
cwtl
rorl
sbb
scas
push
mov
loop
sub
cmp
jg
cmc
adc
out
xchg
push
mov
jmp
mov
add
movsl
push
inc
in
mov
pop
lock
int3
xor
jns
xorl
lret
pusha
imulb
repz
sbb
xchg
stos
push
test
cwtl
sbb
dec
adc
insl
mov
movb
xchg
fsubrs
push
mov
loope
sbb
in
into
imul
pop
int
enter
xor
add
dec
pop
shl
mov
jle
push
mov
mov
mov
mov
push
jb
and
gs
stos
pop
lock
outsb
dec
pop
sbb
pop
test
scas
aaa
jge
adc
pop
fisubrl
or
mov
sbb
fmuls
int
jl
fstpt
xlat
fs
dec
fcmovne
sti
jg
loope
test
cmp
repz
loop
and
sbb
or
into
sub
aaa
stos
fimull
ja
pop
inc
sub
push
test
mov
adc
movsb
inc
mov
push
mov
sti
xchg
mov
std
add
adc
jge,pn
ret
inc
movsl
push
push
or
inc
inc
and
push
lock
or
and
push
xchg
adc
fwait
xor
dec
out
add
cld
fstl
clc
popaw
cld
faddl
xor
lcall
not
mov
adc
cmp
push
mov
lahf
add
or
xchg
insb
jb
xor
frndint
aaa
jl
cmc
mov
jb
lds
cmc
test
push
pop
aaa
push
loopne
dec
xor
jnp
lcall
pop
lret
shll
aas
ret
das
jg
or
mov
test
jo
sbb
pop
push
in
jle
hlt
xchg
pop
mov
stos
pop
int3
scas
popa
in
lds
dec
daa
jae
ror
xchg
mov
repnz
lods
dec
xor
jno
pop
mov
xlat
fmulp
stc
jmp
mov
or
fs
mov
test
mov
inc
jg
mov
pop
dec
xor
jl
mov
mov
aaa
mov
mov
mov
lcall
fstpt
leave
stos
jb
scas
stc
jecxz
inc
dec
nop
xor
fbld
test
mov
xchg
ret
insl
and
jge
xchg
cmpsl
lret
fisttpl
mov
aad
imul
cli
jl
in
daa
push
pop
aam
push
scas
mov
int
dec
stos
mov
push
push
jmp
dec
popa
mov
mov
cmc
addl
loopne
out
adc
hlt
or
and
xchg
mov
xor
sti
lods
pop
and
scas
out
xchg
inc
jne
in
ds
in
pop
sahf
jmp
sbb
stos
push
repz
inc
mov
sahf
adc
fmull
jecxz
aas
mov
pop
stos
inc
dec
hlt
and
and
int3
pushf
cmpsb
mov
jae
movsl
das
jl
xchg
das
push
mov
ljmp
add
xchg
and
scas
xor
xor
jno
enter
js
jmp
push
or
scas
xor
into
sub
xchg
lcall
add
mov
mov
add
adc
pop
mov
lret
add
lods
mov
pop
fidivrs
sbb
nop
sub
jge
xor
out
jecxz
xchg
int
xor
aad
pop
rcrb
push
lock
push
pop
xor
pushf
mov
mov
sbb
push
pop
add
mov
insb
rcr
xor
jle
int3
pop
inc
add
into
pop
jne
push
test
dec
jb
loope
mov
stc
pop
fistpl
aas
daa
inc
mov
in
mov
add
or
fwait
mov
mov
dec
pop
and
cmp
cmc
mov
mov
mov
into
or
pop
mov
push
cmp
xchg
adc
mov
dec
std
out
and
iret
mov
cmpsl
xchg
dec
xchg
or
push
sub
ret
int
jne
xchg
pop
stos
push
jb
cmp
inc
sbb
popf
addr16
xor
pop
in
jle
outsl
stc
xchg
cmp
decb
xchg
dec
fsubp
loopne
mov
adc
or
push
mov
mov
pop
imul
jle
adc
fisttpl
pop
imul
add
out
sbb
icebp
cltd
js
xor
filds
lea
sbb
test
rcrl
mov
mov
ja
adc
jae
cmp
mov
inc
push
or
das
xor
push
add
cltd
jmp
push
jle
out
dec
jmp
movsb
sbb
into
and
dec
daa
ss
push
add
jmp
pushf
rolb
ja
int3
jb
int3
mov
xor
ret
aam
repnz
mov
mov
test
outsb
xor
inc
jmp
icebp
repnz
fnsave
mov
inc
push
xor
dec
imul
repnz
push
fucomp
fsubrs
add
cmp
les
in
xor
adc
adc
int
mov
lret
lock
jge
std
cmp
pop
lea
in
inc
and
cmp
cmp
aaa
mov
test
dec
dec
jno
cwtl
js
jae
mov
fstp
sbb
push
scas
jecxz
repnz
sbb
mov
pop
mov
imul
pop
test
aas
xor
adc
add
cmpsb
call
mov
dec
mov
out
lods
dec
ficompl
or
jb
sub
fs
xor
pop
xchg
test
jns
notl
dec
sub
pop
sbb
inc
iret
mov
xchg
pop
mov
xchg
cltd
cmp
fnsave
lods
orb
jnp
dec
mov
pop
cld
mov
jo
jge
and
inc
and
aad
dec
adcb
push
mov
adc
adc
aas
push
rclb
pop
les
sahf
into
in
stos
sbb
adc
or
mov
mov
xor
jmp
cmp
loopne
pop
xor
popa
sub
out
int3
fimull
test
loopne
aaa
jg
inc
xchg
jmp
pusha
mov
push
pusha
jae
lock
mov
mov
ljmp
jnp
mov
ss
and
pusha
xrelease
jne
push
xchg
clc
sbb
mov
fadd
xlat
xor
xchg
or
jecxz
test
movsb
add
and
jbe
or
jle
pop
inc
cmp
cmc
pusha
es
clc
stos
jg
or
cltd
push
sub
and
pop
sbb
xor
ja
push
push
out
outsl
in
clc
shll
or
stos
lcall
or
jmp
push
mov
arpl
and
daa
dec
xchg
or
in
repnz
std
sbb
sbb
push
jg
xor
outsb
or
shrb
sbb
push
push
lcall
inc
push
ja
sarb
pop
cmp
pop
dec
rol
mov
jle
bnd
arpl
sti
ja
push
cmp
push
in
scas
dec
mov
xor
pop
rclb
dec
jge
rcrl
inc
add
xorl
lock
add
loop
sub
dec
xor
aad
call
add
or
dec
fcmovbe
pop
outsb
test
out
or
mov
push
xor
nop
mov
mov
lcall
mov
jb
dec
rcl
mov
js
push
mov
enter
push
fsubrp
repz
hlt
xchg
es
test
sti
mov
out
shll
xchg
or
xor
and
push
out
shrl
sti
adc
out
cli
in
dec
mov
cmpsl
adc
sbb
stos
xor
seto
sub
mov
dec
fidivs
or
mov
cmp
mov
pushf
das
ficomps
xchg
rcr
pop
push
negb
mov
stos
int
in
pop
fdivs
adc
jno
mov
dec
xchg
jge
lcall
bound
xchg
aaa
xchg
cmp
sub
fdivl
test
add
inc
jle
cmp
inc
mov
push
or
push
imul
loope
jne
stos
ja
mov
jae
je
xor
mov
add
ljmp
mov
ret
es
jmp
sbb
cli
inc
lods
or
pop
gs
xor
int
xorl
jno
cmp
dec
push
pop
mov
call
add
pop
push
test
inc
rcr
and
or
jno
shr
out
js
out
push
xlat
lret
push
outsb
ficoms
xchg
out
and
lret
out
outsl
xor
mov
adc
dec
leave
and
aam
scas
dec
scas
cmp
repnz
rorb
test
mov
sti
shrl
push
mov
push
rorl
jle
inc
int3
insl
movsb
stos
das
push
mov
cwtl
inc
sbb
mov
sbb
adc
cltd
incb
xchg
sub
push
sbb
ret
jle
repnz
arpl
mov
testb
cli
ja
repnz
lds
shr
clc
sub
imul
adc
sbb
cld
gs
jno
push
sub
jmp
push
dec
pushf
pop
ret
mov
aaa
push
pushl
cmp
lea
or
push
mov
lods
dec
dec
push
int
adcb
mov
bound
fwait
mov
roll
push
xchg
outsl
jne
enter
lea
movsb
icebp
dec
fs
sbbl
jle
inc
and
push
outsb
inc
cmp
pop
sarb
mov
push
cmp
xlat
inc
cmp
lock
fwait
jbe
add
xchg
cmpsl
icebp
push
insl
inc
fldenv
lret
or
jae
fs
outsl
adc
cmp
loope
inc
dec
iret
out
mov
mov
jmp
lods
insl
cmp
clc
add
jle
push
sbb
outsl
push
cmp
arpl
mov
jl
pop
clc
jle
inc
xor
popf
xchg
jmp
imul
stc
pop
movsl
in
lret
daa
cs
sbb
lcall
int
cld
mov
lret
pop
outsl
icebp
adc
adc
jae
lret
pop
jmp
xor
ds
push
jnp
and
push
mov
mull
xor
clc
repz
shlb
repz
xlat
xor
adc
jge
fisttps
jmp
fistl
roll
lods
aaa
cmp
jnp
shr
cld
lret
dec
fs
shl
jge
gs
xchg
pop
popa
xchg
aaa
lods
push
hlt
adc
mov
jl
jb
add
sti
shrl
movb
sbb
mov
mov
sbb
xchg
mov
xor
ror
push
mov
fbstp
or
in
pop
scas
sbb
pop
pop
movsl
test
stos
lods
jge
cwtl
sbb
pop
orl
push
cmp
push
cmp
roll
pushf
pop
cli
cmp
pushf
out
add
inc
cmpsl
jg
or
mov
mov
mov
mov
sbb
xor
lahf
sub
dec
push
mov
lods
lahf
fidivl
adc
lds
inc
ret
cmpsb
addr16
in
add
shll
xchg
mov
push
xor
xor
outsl
dec
mov
mov
out
pinsrw
mov
clc
mov
lcall
mov
lds
push
or
imul
test
xor
xchg
adc
or
bound
aas
sbb
iret
pop
push
sub
add
cmp
cmp
mov
enter
int
stos
jbe
push
push
adc
push
xor
hlt
jl
pusha
test
loope
jbe
in
lods
cmpsb
push
xchg
dec
pop
sbb
popa
stos
rolb
inc
sbb
inc
inc
add
add
mov
pop
in
int3
adc
pusha
xor
mov
leave
rolb
sub
add
lock
out
addr16
dec
push
lods
icebp
mov
or
mov
push
lahf
dec
push
lret
inc
test
dec
adc
and
ffree
inc
lcall
mov
xor
mov
push
cmc
ljmp
push
lret
push
push
pop
packssdw
popf
xchg
mov
in
dec
sbb
in
daa
mov
daa
jmp
adc
mov
xor
sub
int3
setae
aad
jo
pop
fwait
mov
cmp
rep
jo
dec
sub
inc
mov
roll
adc
movsb
jmp
das
inc
mov
adc
in
je
pushf
mov
push
stos
and
mov
jl
test
leave
add
mov
inc
pushf
cmpsb
mov
inc
dec
bound
cltd
xchg
cmc
cmp
dec
jge
xchg
pop
jno
xor
push
mov
jae
jmp
pop
jge
sub
imul
popf
aaa
jnp
add
push
pushf
adc
mov
xchg
xchg
shl
cs
callw
ret
dec
fiadds
cmp
or
aas
in
outsb
cmp
dec
mov
imul
je
xor
jecxz
fcmovnu
in
xchg
jl,pn
push
jge
cmpsb
mov
fstp
leave
mov
cmpsb
mov
sub
or
mov
sbb
ljmp
int3
jb
mov
xchg
adc
fwait
stos
pop
jmp
mov
dec
cmp
or
or
xlat
push
roll
in
cltd
stos
lds
lret
hlt
jns
stc
arpl
and
mov
and
ret
rcrb
cmp
xchg
mov
adc
xchg
rep
xlat
or
shrl
dec
sub
daa
sbb
inc
pop
fildl
xchg
ss
sub
aaa
rolb
push
iret
in
test
lcall
xlat
cmp
cmc
or
inc
mov
or
xor
cmpl
pop
push
jne
int3
aas
and
inc
push
cmp
rclb
mov
xchg
adc
sub
outsb
mov
jo
pop
lods
and
and
and
stc
addb
outsl
jge
ljmp
jmp
xchg
test
mov
ret
or
mov
xchg
out
lret
cmc
and
fwait
out
cmpsb
repnz
fidivrl
in
mov
mov
jl
xchg
out
dec
jnp
into
repz
adc
push
jo
push
inc
les
and
inc
aam
arpl
inc
xor
xor
jbe
add
add
dec
in
push
cmp
std
mov
mov
xchg
mov
xor
inc
add
inc
cld
cmpl
xorb
hlt
jge
pop
test
cmp
push
and
adc
ret
repnz
cmp
in
in
jo
ja
dec
into
add
add
xor
leave
call
arpl
decl
pop
inc
mov
fwait
xchg
add
push
sbb
cmc
pop
int3
xchg
cmp
lock
movsl
cld
shll
int3
inc
and
mov
mov
push
pop
xlat
fcompl
inc
cli
jne
orl
cmpsl
or
test
or
fnstenv
into
sbb
sub
ret
shr
mov
fcmovb
ljmp
loopne
mov
and
aam
xor
fidivrs
push
pusha
or
ret
pop
icebp
adc
add
jmp
in
push
pushf
push
das
adc
popa
ja
movl
sbb
xchg
mov
xor
dec
cs
bound
cltd
negb
jecxz
push
sbb
inc
stos
jne
insl
cwtl
fsubp
xor
stos
and
aad
pop
addr16
das
mov
and
cmp
and
ds
enter
and
push
cli
das
test
cmp
mov
mov
cmp
inc
repz
dec
pusha
gs
mov
fisttps
std
xor
test
fucomp
add
mov
add
and
sahf
jbe
shrl
pusha
xor
loopne
cmp
ret
mov
out
pop
mov
call
xor
add
dec
shl
out
out
xorb
cmp
mov
cmpsb
cld
mov
push
idivl
push
xchg
add
out
aas
scas
jl
or
lret
sub
add
jl
jp
adc
sbb
xor
add
leave
cmc
push
aam
sub
in
es
xor
stos
dec
push
ljmp
pop
popa
jbe
mov
es
into
out
xchg
inc
add
push
cli
lods
cltd
clc
lods
pusha
push
in
adcb
pushf
ficompl
pop
dec
scas
dec
jae
mov
ret
cltd
insl
in
andb
loopne
and
sub
xchg
jg
lock
jb
and
mov
popa
loopne
jecxz
mov
push
enter
js
sub
jecxz
xchg
inc
icebp
lret
mov
xor
jecxz
pop
out
fidivs
ljmp
fwait
movb
mov
jb
in
push
cmpsl
fs
push
ljmp
push
pop
in
ret
out
push
stos
sbb
and
pop
jne
jno
lock
mov
outsb
jecxz
repnz
pop
int3
fwait
jno
test
rol
movsl
mov
fidivl
cmp
xor
jmp
push
cmpsl
cmpsl
out
mov
das
lds
shll
idivb
loopne
push
lods
mov
cmc
dec
add
out
sub
or
jb
addb
pop
sahf
int3
testb
cmpsb
jns
icebp
push
clc
sub
cld
cltd
stos
inc
int
xlat
int3
cmpsb
cmp
imul
ret
jo
or
test
mov
fidivrl
cltd
jne
ss
sbb
std
mov
sbb
outsb
test
jecxz
push
in
psubd
cmp
and
jmp
xchg
xor
mov
hlt
jae
sbb
jno
sbb
cmc
fnstsw
stos
outsl
pop
pop
mov
sub
test
shlb
shl
test
jnp
fisubrl
lahf
nop
inc
loopne
shrb
stos
jmp
cmp
je
add
mov
sub
imul
dec
in
dec
mov
push
sub
int
mov
popa
sub
dec
sbbl
fcmovnb
ss
mov
cwtl
pop
inc
pop
add
push
xchg
fmuls
es
xor
pop
rclb
sub
fs
decb
std
cmp
jl
dec
add
pop
xchg
pop
mov
add
push
shrl
sbb
pop
rcl
outsb
mov
mov
xor
sbb
ljmp
mov
mov
add
jne
pusha
rcrb
or
lock
bound
xchg
fsubr
push
fwait
and
aaa
jg
xchg
roll
add
sub
imul
in
addr16
roll
sti
repz
iret
aaa
mov
push
xor
loop
jns
pop
notl
inc
jnp
mov
sarb
sbb
into
cwtl
into
ja
mov
pop
push
out
xor
add
pop
sbb
dec
add
push
mov
mov
lahf
push
hlt
xor
ds
add
mov
sbb
test
xor
cmp
pushf
lret
loope
test
cmp
jmp
push
sahf
add
adc
push
push
testb
add
imul
inc
ds
xor
ficoms
pop
lock
fdivr
push
cmp
mov
arpl
jle
fidivrs
jno
mov
and
sbb
repz
call
and
jno
dec
shlb
sub
cwtl
cld
lds
cltd
sub
push
jge
add
inc
inc
mov
cmpl
add
mov
les
insl
aaa
add
mov
sub
out
loop
jo
sbbb
repz
or
out
fwait
inc
xchg
leave
pop
out
insl
popl
call
sbb
dec
push
jg
mov
in
out
imul
add
stos
or
mov
cld
aaa
cmp
cld
cs
ljmp
push
dec
mov
cmp
pop
or
pop
xor
or
stos
fldenv
add
movsl
sbb
mov
pusha
mov
lds
add
push
and
jmp
pop
cwtl
fisubl
xchg
in
push
xor
fistl
xchg
push
lds
jp
or
adc
jns
or
js
popf
pop
mov
les
or
lcall
ret
lret
mov
lret
sti
xor
pop
andl
pop
cmp
cmp
lea
sbb
lahf
cmpsl
adc
fwait
mov
outsb
inc
decb
in
rorb
or
test
push
xor
fnstcw
int3
and
cmp
inc
mov
jns
hlt
movsb
movsb
pusha
ljmp
jns
das
pop
xchg
stos
sbb
push
loopne
aaa
aas
inc
pop
arpl
xchg
xor
add
iret
mov
push
xchg
adc
jg
aas
in
stos
adc
repnz
mov
or
and
xlat
inc
scas
daa
sub
test
push
mov
into
repnz
add
and
add
pop
and
in
mov
mov
out
jne
xchg
decl
and
clc
movsl
and
fiadds
out
pop
imul
jae
add
xchg
adc
shlb
mov
add
xchg
int
bound
sbb
xchg
andb
mov
pusha
loopne
push
adc
or
adc
or
cmpsl
aaa
adc
mov
sub
bound
cmp
xor
arpl
orb
arpl
enter
dec
xchg
cmp
inc
pop
push
in
cmpsb
lret
dec
push
and
jns
mov
loopne
push
fistpl
inc
pop
fldl
insl
push
jge
push
xchg
jns
test
mov
xchg
fstp
or
pop
mov
xchg
cltd
cmpl
adc
sbb
lret
inc
sub
or
leave
lods
mov
inc
mov
addr16
or
nop
test
jns
test
sbb
mov
repnz
or
sub
inc
leave
pusha
cmp
mov
sbb
dec
fs
inc
xchg
mov
icebp
in
adc
inc
cltd
cmp
sbb
loopne
xor
aaa
shll
push
jecxz
das
mov
movsb
bnd
in
xchg
add
imul
push
mov
stc
jg
add
out
repz
fnstsw
in
xchg
stos
and
lcall
rorb
lock
inc
je
xor
sbb
cmpsl
inc
in
jl
pop
movsb
jae
rolb
push
jo
movsb
packuswb
dec
call
stos
outsb
xor
sbb
xchg
daa
adc
outsl
or
cmp
xchg
fucomip
cmpsb
mov
repnz
push
dec
dec
push
fisttps
mov
ret
cs
sub
aas
in
sarl
lea
xchg
mov
pop
mov
hlt
andl
stos
or
mov
out
cmc
sub
pop
stos
rcrl
or
stos
in
cwtl
imul
movsl
rcrl
sahf
cmp
fwait
jb
xor
lret
push
adc
loop
outsl
orb
in
faddl
rolb
mov
enter
jbe
mov
pop
je
xchg
das
sub
dec
xchg
ret
or
jns
nop
shll
mov
std
xchg
xchg
ret
icebp
pop
aad
sbb
xchg
sbb
cmc
lods
cmc
xchg
int3
insb
inc
push
lock
jae
mov
add
sbb
pusha
nop
lods
mov
sbb
fs
sbb
ret
repnz
cmp
xor
int3
fwait
add
loopne
dec
sub
adc
mov
jg
inc
push
pop
mov
repnz
mov
int
data16
xor
inc
sbb
xor
sar
dec
mov
test
fistpl
sub
add
push
outsb
aam
das
cmp
mov
lret
sub
psubsw
lret
lock
sbb
mov
push
or
je
rcr
or
fmuls
lahf
or
pop
stos
xchg
cmp
and
in
xor
cmc
rcll
pop
add
sub
mov
jbe
std
sbb
loopne
sub
and
jae
xchg
push
mov
xor
add
mov
lock
clc
sub
shll
cmp
dec
scas
enter
aas
lea
in
loope
aam
mov
cmpsl
popa
addr16
or
popa
and
bnd
pop
popf
sub
jmp
movsl
aam
fxch
fistps
xor
and
add
inc
sub
ds
jecxz
test
pop
and
das
ss
in
out
imul
rclb
pop
bsr
push
inc
call
das
adc
sub
or
decl
cwtl
lahf
je
lods
adc
fwait
mov
incb
mov
cld
xchg
fidivrl
mov
jl
ja
add
mov
pop
inc
xchg
xchg
bound
jg
imul
arpl
popa
jmp
jne
imul
nop
pusha
xchg
test
or
mov
adc
stc
adc
push
int3
std
movsl
les
mov
outsb
cmp
sub
dec
sub
xchg
mov
xchg
cltd
rcrl
sbb
inc
loopne
pop
fcoms
and
mov
icebp
pop
jl
je
and
ret
push
mov
and
mov
sub
cmp
jae
scas
pop
xchg
adc
lret
jne
jb
insl
popa
mov
cld
scas
mov
out
dec
sbb
enter
dec
xchg
or
in
or
adc
adc
or
xchg
repz
test
stos
sbb
adc
ret
and
addr16
xchg
push
jnp
gs
ds
sub
push
int
pop
cmp
mov
mov
add
ror
mov
ret
dec
loopne
sbb
cmp
jecxz
cli
mov
andb
ds
int
pusha
test
sub
sbb
jecxz
dec
adc
das
mov
mov
mov
adcb
jno
lcall
addb
xchg
fucomip
ljmp
inc
stc
sarb
sbb
pop
loope
push
inc
pop
sub
stc
test
into
out
push
idivb
xchg
clc
and
loopne
dec
jl
mov
pop
pushf
mov
test
sti
insb
dec
outsb
inc
jl
dec
pop
pop
xchg
sbb
and
into
pop
xor
mov
movsl
bound
ret
pop
inc
es
aad
imul
xchg
icebp
sub
ds
call
xchg
sub
adc
shlb
lds
pop
add
into
adc
dec
addl
inc
mov
and
movsl
filds
aad
movsb
mov
jmp
imul
rorb
les
or
stos
or
insb
add
std
mov
lcall
dec
and
dec
sbb
cmp
and
in
mov
imul
shl
mov
fildll
aad
mov
inc
inc
js
jo
out
mov
repnz
jno
push
xchg
push
ja
sti
les
or
lahf
je
test
cmpps
jb
mov
into
daa
in
shll
mov
push
repz
fidivl
dec
sub
xor
jle
ljmp
mov
std
fs
push
mov
adc
leave
mov
fstpt
jae
jbe
daa
add
fdivrs
arpl
or
push
clc
sub
sub
movsl
mov
cmpsl
andb
jge
scas
inc
mov
adc
addr16
aam
lret
and
dec
dec
pop
sbb
movsl
adc
inc
sbb
jae
pop
faddl
push
xchg
ljmp
xor
inc
insl
or
sar
lahf
or
pop
dec
fwait
inc
js
out
test
mov
push
dec
icebp
mov
xor
mov
scas
scas
mov
lahf
add
aaa
push
add
movsb
mov
out
outsw
into
lret
ficomps
mov
adc
push
aas
out
outsl
sub
ret
shll
call
mov
mov
xor
add
xchg
popf
dec
lret
test
add
dec
dec
xor
cmpsl
leave
dec
mov
dec
mov
rolb
cmc
dec
jp
cmpb
pop
mov
out
fisubrl
pop
inc
mov
aad
fstps
dec
push
divl
loop
cmp
add
popf
adc
inc
pop
stos
jno
and
inc
cmp
inc
jmp
pop
fdivrs
cmp
jp
into
test
andl
sbb
gs
add
jmp
push
mov
rorl
dec
cmp
insb
idivb
dec
sub
jbe
jno
xor
mov
stos
inc
rcrb
nop
loopne
cltd
int
push
pop
jecxz
mov
pop
movsb
movsb
jl
cwtl
mov
lds
xor
xchg
add
into
enter
data16
sub
push
push
pushf
popa
fbstp
pop
in
stc
nop
mov
push
in
or
repnz
cmp
shrl
sub
scas
mov
js
adc
mov
push
imul
pop
les
sahf
les
sub
cmp
lcall
xor
js
icebp
sbb
pop
lcall
sub
mov
fldenv
push
jb
and
add
dec
lahf
cli
mov
loopne
int3
clc
addb
cld
aam
cmp
jne
adcl
int3
fstl
jle
push
pop
cwtl
mov
jns
fistps
inc
pushf
in
das
jo
aad
pop
cltd
fwait
jp
mov
idivb
data16
mov
popa
pop
pop
mov
sbb
fprem1
int
xor
lods
test
pop
jecxz
leave
ret
repnz
cmp
fsts
outsl
sub
xor
pop
add
and
fcmovnu
aas
mov
js
out
pop
decb
xchg
xchg
jle
or
push
pop
lds
adc
sbb
pop
adc
dec
jbe
dec
or
test
test
mov
outsb
test
test
add
inc
sti
ds
icebp
sti
shll
jb
out
xchg
push
mov
jbe
or
movl
fmull
mov
lcall
das
pop
arpl
stos
push
lods
aad
pop
or
into
dec
insl
inc
push
jle
sbb
loope
pusha
aad
sbb
les
cmpsl
cs
popf
sbb
icebp
ja
scas
push
sub
and
gs
lock
jecxz
jp
dec
stc
out
cld
push
mov
not
cmp
sub
push
mov
int3
mov
xor
or
pop
out
add
subl
pop
jge
sahf
lods
dec
mov
add
jno
pushf
mov
inc
sbb
mov
mov
or
jl
scas
mov
add
push
pop
es
ds
test
cmp
popf
mov
mov
push
ret
lret
push
imul
jmp
cmc
jnp
mov
mov
in
mov
lock
aad
dec
gs
sbb
mov
mov
or
dec
xor
and
lock
scas
pop
xchg
xchg
mov
jb
insb
inc
cs
or
sub
mov
repz
mov
mov
cmp
mov
insb
cli
mov
pop
adc
fcmovb
test
pop
fwait
cmpsb
or
daa
xchg
fists
pminub
sub
stos
xchg
ret
xchg
icebp
xchg
mov
imul
mov
sub
push
push
inc
and
pop
aam
push
adc
xchg
repnz
int3
jnp
icebp
pop
enter
test
adc
pop
and
jmp
enter
iret
xor
dec
loope
stc
into
movl
jmp
je
xchg
mov
or
or
into
cmp
push
xlat
jb
imul
es
cmp
aam
fldl
inc
je
sbb
repnz
mov
cmp
inc
js
lea
movb
hlt
inc
add
adc
adc
repz
push
cmpsb
outsl
imul
lret
aad
sbb
in
icebp
mov
jge
sub
fbld
jle
dec
mov
sbb
and
sub
daa
data16
das
es
jb
fistpl
dec
cmp
jle
cmp
je
add
aaa
pop
inc
xchg
xlat
pop
mov
or
sub
adc
nop
dec
aaa
jecxz
subb
sbb
imul
ret
jge
lods
xlat
or
hlt
dec
xor
js
out
fisubrl
add
cltd
ret
push
lods
cmp
adc
ss
mov
xadd
call
hlt
int3
popl
fs
shrb
test
roll
pushf
stos
add
fmul
cld
scas
les
mov
lret
sarl
mov
lret
mov
push
jle
adc
enter
jo
jae
inc
mov
insl
lods
ret
into
pop
push
push
adc
xchg
push
xor
lock
sti
jp
sbb
cmp
ljmp
mov
mul
repz
aas
cs
subb
cmp
testb
jle
fldcw
inc
loop
mov
arpl
lea
push
cmp
jg
out
scas
xor
popf
push
in
imul
mov
call
xor
fwait
lods
test
dec
cli
stos
popa
pop
adc
jnp
repnz
jns
mov
mov
lock
add
lret
insb
mov
imul
dec
cmp
fistps
jl
and
fdivr
cmpsb
loopne
out
jp
iret
xchg
testb
push
in
adc
fscale
jns
clc
ja
mov
rolb
rcrb
sub
dec
insb
stos
int3
fdivs
mov
ret
aas
sbb
inc
mov
or
rcrl
aad
sbbl
adc
ljmp
sub
sub
aam
dec
aaa
add
xor
nop
orb
fidivl
bound
xor
movsl
pushf
bound
lock
repnz
out
mov
in
fs
mov
arpl
aaa
mov
mov
lods
call
dec
inc
leave
xchg
iret
or
mov
ds
loope
adc
and
or
xor
add
jo
inc
sub
mov
fmull
je
adc
push
add
outsb
pop
jp
dec
imul
ret
or
mov
cltd
pop
test
stos
dec
or
and
hlt
sbb
adc
aad
les
jl
daa
test
dec
scas
lds
lods
sub
or
add
fstl
mov
add
adc
aad
lock
mov
popf
xlat
add
les
je
adc
jb
xorb
pop
stos
gs
xchg
es
inc
cmp
jg
jge
sbb
mov
int3
iret
cmp
mov
scas
outsl
stc
iret
aad
call
test
sub
pop
jmp
out
lret
fidivl
sub
je
push
xor
fiadds
push
das
out
cmova
xchg
mov
cld
aas
inc
add
jmp
add
test
mov
cmpsl
aam
int
andb
test
xchg
ret
mov
pusha
push
cmp
and
or
inc
iret
jle
out
mov
pop
adc
mov
in
push
add
mov
mov
jns
not
fs
lds
mov
push
fwait
inc
aad
sub
jnp
mov
xor
cmpsl
push
mov
pop
and
xorl
lahf
cmp
jge
mov
jecxz
pop
lock
test
inc
mov
movsb
andl
inc
sbb
inc
mul
xchg
add
xchg
lods
mov
ficoms
add
pop
enter
adc
cmp
sub
push
adc
imul
fwait
mov
hlt
add
pop
arpl
lret
cld
aaa
mov
loopne
sahf
insb
pop
fidivs
cmp
movsb
sub
mov
inc
mov
inc
cwtl
push
mov
xchg
scas
pop
xor
sarb
mov
or
mov
adc
mov
sarl
push
or
sbb
ret
data16
movsb
cmpsb
icebp
xor
jl
pop
sub
addr16
arpl
fs
insl
int3
mov
push
ror
mov
inc
push
movsb
repz
ds
push
xor
xchg
dec
js
sub
hlt
aad
add
inc
ja
mov
out
ljmp
mov
xlat
test
pop
xchg
out
dec
in
ret
or
imul
sbb
pusha
jmp
sbb
sub
jge
out
xor
dec
mov
cld
ja
es
repz
dec
cmp
xor
jne
cld
mul
push
xor
cmp
movsb
div
sbb
movsl
pop
adc
jl
xor
sub
jnp
add
cmp
fst
pop
sub
pop
cmpsb
out
sbb
jle
rorl
pushf
ja
test
sub
into
and
push
lods
pushf
adc
cmpsb
lods
fisttpl
mov
call
das
shrb
push
sub
popf
loope
mov
cmpsb
out
inc
lcall
jmp
jno
incb
cmp
cmpsb
xor
xor
mov
cmp
jns
cmp
jmp
ficomps
and
test
jge
add
shlb
scas
sub
adc
les
stc
xchg
mov
pop
bound
shl
insb
inc
decl
inc
cltd
xlat
imul
cwtl
mov
cmpl
mov
test
sbb
mulb
cs
adc
daa
test
adc
jnp
push
adc
scas
push
push
out
jp
jae
imul
dec
sbb
loope
adc
scas
fcomps
mov
jne
fildll
xlat
shrb
xchg
lock
repz
movsb
mov
nop
xchg
mov
and
xchg
push
sbb
pmulhuw
sub
insb
sbb
dec
data16
add
push
mov
jecxz
jae
xchg
addl
pushl
jg
mov
xchg
mov
sub
hlt
push
mov
sub
sub
enter
mov
dec
cli
mov
mov
sub
movsb
out
out
iret
leave
and
loop
jg
insb
inc
mov
adc
xchg
les
imul
test
pop
insb
adc
dec
mov
cmp
lods
sbb
mov
mul
mov
mov
arpl
and
xor
mov
jp
and
and
cmpsl
sub
pusha
nop
sub
subb
inc
loop
cs
xchg
mov
mov
sti
sbb
jne
out
inc
enterw
or
movsl
fwait
pop
repz
lret
fmull
inc
shrb
mov
jl
jl
jbe
sti
xor
mov
xlat
cs
loope
and
mov
sarb
movl
adc
xchg
xchg
scas
insl
jecxz
lcall
push
mov
xor
push
jmp
ljmp
sarl
cmp
or
jb
lods
xchg
pop
scas
xorps
mov
jb
int3
dec
or
loopne
sbb
inc
push
lods
fcoms
push
lahf
xor
jno
or
in
hlt
call
mov
aaa
or
push
jo
inc
stos
aas
je
rorl
lahf
adc
imul
push
dec
dec
xchg
xchg
adc
movsl
adcl
dec
add
loopne
lahf
out
fwait
repz
mov
cmp
test
in
pop
jb
scas
outsb
out
jg
bound
pop
and
adc
mov
and
push
xor
cwtl
data16
xchg
push
insl
repz
cltd
fbld
add
notb
sbb
or
lock
mov
lret
jg
adc
aas
push
push
cmpl
and
lods
cwtl
orb
jae
jno
cmp
pop
and
lea
pop
mov
and
and
out
add
in
and
dec
jno
xchg
cmp
and
adc
bnd
adc
jns
sar
jae
loop
push
or
or
pop
testl
in
xchg
dec
filds
sbb
arpl
popf
mov
pop
mov
rcrl
jbe
xchg
lea
repnz
pop
pop
aaa
shlb
in
into
jbe
fisttpll
mov
fcomip
scas
cli
push
bound
aad
fcomp
mov
jbe
movsl
mov
mov
shr
es
test
mov
mov
shl
test
sub
sub
lock
cwtl
out
sbb
and
outsb
push
aam
cli
dec
out
nop
jno
xlat
inc
mov
jno
cmp
jp
jne
inc
dec
sub
and
mov
dec
sbb
mov
incl
sub
sub
nop
mov
xchg
xor
shlb
and
push
in
cmp
xchg
les
dec
add
sub
adc
sar
and
jle
push
cmpsl
adc
int3
fwait
mov
inc
sbb
mov
cmp
dec
cmc
das
icebp
popf
cld
enter
divl
jae
fldpi
les
mov
ja
cmp
mov
xor
arpl
sub
mov
clc
cwtl
mov
shr
sahf
dec
out
mov
imul
inc
add
adc
mov
das
xchg
lret
loope
mul
movsb
lods
jge
rcrb
cltd
mov
cmp
mov
add
cli
pop
arpl
xchg
pop
push
sub
mov
mov
std
popf
inc
cli
push
iret
adc
dec
jle
inc
repz
in
std
xlat
fs
scas
imul
and
pop
daa
dec
ds
lea
call
mov
pop
je
sbb
icebp
andb
push
cmp
inc
jge
lahf
mov
cmp
movsb
hlt
mov
mov
adc
movsb
arpl
int
pushf
mov
negb
scas
arpl
bound
js
mov
shl
jl
fstp
lock
arpl
cli
cmc
lods
inc
test
lea
xor
sbbl
and
or
je
rolb
xchg
das
xchg
and
std
insb
aas
leave
pop
sub
clc
ja
push
inc
ficoms
sub
test
imul
add
in
cmp
ss
or
ds
das
cmp
mov
addb
loop
xchg
push
mov
push
jnp
mov
mov
dec
push
inc
or
sub
push
iret
jns
jns
sbb
or
mov
clc
mov
xor
stos
mov
leave
pop
mov
inc
adc
sbb
mov
std
push
int3
loope
pop
xchg
pop
loopne
out
cmp
test
cmp
fs
xchg
ss
mov
adc
sub
test
jge
inc
dec
inc
stos
mov
iret
aam
cmpsl
adc
sub
mov
int
mov
add
add
arpl
lock
call
mov
xlat
insb
dec
aam
dec
pop
ret
movsb
adc
mul
out
sahf
dec
loop
sbb
dec
pushf
xchg
aaa
mov
xchg
fidivs
add
mov
xchg
mov
rolb
fstl
mov
or
sarb
je
dec
enter
dec
into
clc
and
push
repnz
and
aad
frstor
out
stos
js
ret
pop
adc
cmp
mov
pop
aaa
xchg
jae
cli
call
lods
cwtl
inc
in
pop
leave
push
pop
sub
in
sub
inc
pop
shll
cmp
movsl
mov
aaa
rcrb
cmp
inc
adc
push
or
int3
or
pop
push
sub
push
push
sarb
jl
imul
xchg
dec
mov
cmpsl
dec
pop
pop
je
int
enter
and
cmp
nop
lret
mov
fnsave
imul
xor
cltd
test
xchg
loopne
mov
ficompl
sti
aaa
imul
aad
gs
mov
sarl
mov
cli
or
movl
mov
daa
loopne
push
pushf
lea
cmp
add
insb
ficompl
sub
xchg
mov
mov
int
adc
mov
add
mov
and
dec
outsb
or
repz
xchg
je
jb
aas
or
mov
adc
and
in
and
dec
and
push
nop
aad
shll
repnz
mov
aad
push
or
push
sbb
dec
pop
xchg
jnp
add
aaa
call
test
fwait
mov
in
jmp
mov
push
cmp
xor
dec
lds
mov
ja
sbb
sub
or
rorb
jbe
cmp
stos
adc
fists
imulb
aas
xor
sub
jbe
push
ficompl
inc
sbb
cmp
xchg
leave
int
dec
adcb
inc
nop
es
shr
or
clc
adc
jle
jb
jbe
and
lods
pop
and
ljmp
andl
cmp
xchg
loop
xor
shlb
js
mov
mov
pop
popf
sbb
or
and
les
in
adc
orb
in
mov
jo
jmp
test
push
stos
xor
lock
addl
push
out
sub
nop
insl
dec
mov
jns
push
xor
fs
mov
inc
and
sbb
mov
nop
pop
imul
sbb
icebp
sarl
pop
adc
push
std
addb
cmp
enter
inc
lahf
or
cmp
add
out
test
insl
jecxz
pop
lcall
dec
lds
mov
imul
addr16
cmp
out
mov
stos
std
and
push
add
lock
stos
cmp
loope
inc
cmp
jge
nop
mov
mov
and
mov
and
hlt
sar
mov
lea
lods
inc
or
lcall
sbb
cmpsb
cmp
sti
int
adc
pusha
in
aam
jb
lahf
daa
adc
add
push
xor
lea
cmp
add
jmp
adcb
push
sub
andl
int
pop
outsb
cltd
inc
jno
cmp
xlat
jbe
mov
lret
fildl
jl
mov
mov
enter
mov
cwtl
pusha
push
outsl
cli
jg
cltd
and
and
xchg
push
jne
adc
xchg
ljmp
cltd
insb
int
pushf
ret
mov
push
std
add
in
stos
ljmp
cmp
sbb
cmc
jno
daa
leave
add
cmp
idivl
outsl
mov
adc
jns
add
mov
loope
mov
nop
stos
into
inc
cmp
jmp
ss
push
sub
cmpsl
test
push
lret
loope
lcall
std
bound
insl
push
jl
lock
xchg
scas
mov
xchg
test
mov
inc
pusha
xchg
sub
enter
xchg
mov
out
xor
adc
cli
sub
mov
mov
inc
loope
jbe
adc
sub
jns
stos
pop
or
and
xlat
data16
inc
push
mov
xor
push
and
xchg
out
dec
cmpsl
mov
insl
push
jb
sub
std
dec
mov
cmp
push
insl
imul
mov
adc
in
jmp
inc
sahf
icebp
pop
int
adc
ss
or
and
test
or
mov
int
idiv
cmp
mov
jecxz
cltd
mov
and
and
inc
stos
iret
hlt
adc
xchg
adc
sbbb
loop
hlt
sub
xchg
std
sub
inc
stos
xchg
in
pop
or
loop
pop
pop
inc
mov
loop
adc
mov
popf
jne
movsb
mov
sbb
push
bound
iret
add
iret
sbb
je
daa
xor
sti
add
aad
jae
arpl
dec
test
mov
out
arpl
lea
das
je
dec
insb
and
sti
or
pop
push
pop
in
cmp
cltd
xchg
inc
fistl
sbb
pop
dec
lret
sbb
xchg
test
cmovge
add
mov
aaa
clc
push
adc
test
rol
xlat
or
sti
jp
mov
sbb
jmp
xchg
xor
test
mov
sbb
aaa
sarb
add
sub
mov
fsubr
popf
pop
jmp
xor
pop
inc
scas
insl
pop
cmp
push
push
dec
xchg
mov
xchg
sbb
gs
mov
inc
movsl
test
loopne
cmp
xchg
mov
jo
aam
aas
popf
lods
enter
mov
mov
frstor
notl
call
xchg
sbb
into
mov
out
fcmovb
mov
add
cmp
jb
mov
stos
sbb
jo
add
lret
mov
push
dec
pop
xor
cmp
lahf
aad
mov
insl
imull
mov
mov
inc
sub
rolb
xlat
jecxz
cmpsl
out
fidivrl
gs
pop
stos
mov
add
xchg
das
mov
ret
ljmp
xor
pop
cli
inc
shl
lods
pop
jb
add
cmp
call
repz
pushf
lahf
call
scas
gs
stos
fsubs
imul
enter
ljmp
xlat
inc
cmpsl
into
xchg
shr
mov
jmp
loop
sbb
push
pop
int
outsb
cmp
jl
sbb
lods
inc
adc
enter
lcall
mov
xor
clc
and
push
push
push
mov
and
rorl
lahf
out
mov
mov
sbb
cmp
xor
mov
sbb
aam
dec
leave
push
cmp
add
adc
icebp
popa
jmp
xor
mov
mov
sbb
andb
xor
xchg
outsb
fdivrl
push
aas
sbb
aas
loopne
mov
sbb
dec
xor
xor
hlt
pop
pop
cld
ret
cmp
out
adc
call
or
jge
mov
jbe
sbb
add
lahf
sub
icebp
dec
inc
adc
sub
data16
sub
gs
sub
or
loopne
shlb
mov
movsl
xchg
fs
inc
inc
mov
mov
rclb
popf
call
adc
mov
xchg
adc
jae
mov
scas
sbb
into
shrb
pop
jle
ss
jbe
sub
mov
or
fmull
mov
scas
add
pop
pop
mov
adc
imul
stos
out
scas
iret
mov
stc
jmp
add
inc
mov
mov
add
stos
lock
addr16
or
dec
insl
sub
push
xchg
shl
sub
negl
push
xlat
pop
jecxz
xor
inc
ret
rcrl
adc
add
cltd
mov
cmpsb
popa
out
and
pop
push
loope
mov
jge
mov
shlb
pop
lock
jl
movsl
xor
fisubrl
andl
or
fucomip
push
adc
scas
enter
dec
fwait
into
dec
repnz
jno
xchg
cli
mov
arpl
fisttps
xor
cs
popa
inc
xor
aad
test
js
je
add
cltd
vpunpcklwd
xchg
and
fisubrl
push
sub
sub
xchg
xchg
xchg
loopne
dec
mov
mov
test
jp
or
cmp
xchg
fcoml
scas
and
lods
xchg
mov
jbe
gs
arpl
or
mov
and
iret
les
sti
xchg
adc
cs
gs
jno
cmp
mov
dec
fucompp
mov
jg
jmp
mov
std
jmp
adc
sub
fwait
add
es
and
push
sahf
ret
ss
addr16
mov
enter
sbb
dec
aad
fidivrs
inc
loop
int3
int3
adc
ds
scas
aas
out
mov
and
cmp
or
rolb
push
adc
mov
andnps
push
arpl
pop
jnp
fsubrp
repnz
in
imul
xorb
push
pop
pop
ss
arpl
xchg
and
sbb
mov
addb
xor
adc
jge
add
les
lcall
outsb
loop
jne
imul
dec
aaa
add
int3
lods
mov
cld
insl
push
cmp
jno
jmp
icebp
push
bound
iret
fwait
cmp
xchg
pop
repz
pop
shrl
rorl
mov
add
xchg
loop
jmp
pop
cmp
push
cmp
rol
cmp
push
cmp
cld
cmp
dec
jl
inc
jbe
xchg
mov
xchg
dec
jbe
xchg
mov
and
ret
mov
jbe
sarb
pop
fisttpl
jmp
scas
xchg
fstl
pop
ret
ss
jmp
mov
mov
jmp
mov
cli
push
or
enter
push
add
and
add
inc
push
je
popa
fcoml
rcr
sar
sub
stos
enter
sahf
and
add
test
fisttpl
dec
and
adc
cmp
or
cmp
sahf
nop
out
or
imul
or
mov
inc
or
xor
arpl
mov
scas
mov
ret
lea
push
inc
cmp
pop
or
xchg
cli
inc
jl
adc
dec
in
dec
stos
sub
fldcw
mov
mov
clc
mov
and
dec
ret
pop
push
call
sub
stos
lret
pop
mov
xor
lods
in
inc
lahf
xlat
pop
jmp
sbb
xor
sub
movsb
inc
test
dec
cmc
sub
mov
xchg
mov
jne
popa
out
inc
imul
lds
lcall
cmp
in
pop
fisttpll
lret
enter
mov
int
xchg
dec
rcr
test
mov
imul
cltd
or
dec
pop
test
xor
sbb
enter
sbb
jge
lds
outsl
inc
fs
sbb
adc
dec
and
sbb
and
sbb
mov
and
lods
xchg
call
jae
jae,pn
jecxz
jae
icebp
jns
subl
sbb
ret
xchg
xchg
cli
push
mov
mov
or
add
aas
lods
jl
nop
shl
inc
andb
bound
leave
movl
cltd
rolb
subl
mov
icebp
roll
das
add
jle
flds
jl
sahf
fstps
iret
out
jle
pusha
jge
xor
rcr
repnz
sub
xchg
imul
iret
out
inc
pop
pop
loopne
mov
insb
dec
dec
jno
and
roll
cmc
mov
bound
fisubl
std
xor
movsl
cmpsb
fisubrl
lret
int3
lahf
pop
das
pop
mov
movsb
lea
adc
pop
xchg
insb
push
cs
stc
mov
test
mov
lods
es
xchg
stc
or
jg
xlat
jbe
mov
xor
push
sub
adc
jne
sub
mov
mov
fcmovnu
call
mov
testb
ljmp
cld
lret
mov
jns
movsl
loop
mov
bound
cmp
mov
cmpsl
adcb
std
jae
sub
mov
jmp
aam
std
repnz
scas
mov
mov
push
out
rcrl
jp
movsl
pop
adc
dec
lods
or
push
dec
cld
jle
jns
cmp
data16
imul
pop
mov
add
mov
imul
in
test
pop
scas
outsl
add
and
mov
je
sbb
ret
xchg
rcrl
jmp
repnz
mov
jmp
push
in
cmp
sub
adc
sarl
lods
dec
pushf
adc
test
cld
out
imul
xchg
lods
mov
xchg
inc
sbbl
sbb
pusha
subb
add
cmp
push
or
mov
pop
xchg
jne
iret
ret
push
loope
mov
xor
fcmovbe
out
mov
hlt
and
imul
mov
je
je
add
aam
mov
and
add
mov
daa
iret
push
jecxz
test
xor
ficoml
inc
cwtl
cs
mov
popa
jl
and
sub
pop
repz
inc
std
mov
hlt
pusha
sbb
dec
adc
cmp
xor
je
popf
add
jp
cmpsb
cltd
dec
int
ja
cld
inc
ret
mov
inc
push
or
dec
add
ret
lock
outsl
pop
ds
shll
cmp
ljmp
pop
movsl
xor
std
fwait
or
xchg
jne
bound
xchg
jecxz
and
ret
push
ja
xchg
test
sbb
or
arpl
pop
jmp
out
repz
pop
into
sqrtps
mov
mov
sub
subl
orl
cmp
xor
push
icebp
outsb
jb
push
mov
mov
push
pushf
fldcw
cmpsb
sbb
dec
mov
push
lret
loop
in
inc
dec
xchg
cmp
sahf
adc
dec
and
andl
push
jns
inc
xchg
jb
sub
divb
cmc
mov
andl
fstps
adc
out
dec
fisubrs
stos
push
test
fs
adc
push
mov
and
rcl
push
push
mov
jecxz
decb
notb
push
mov
cmp
aas
cmp
jbe
fstp
test
sbb
imul
adc
movsb
xor
mov
out
lods
fcomps
hlt
jg
pop
out
lret
loopne
sbb
jecxz
stos
adc
call
jb
mov
or
in
jno
mov
pop
xchg
sub
push
je
data16
testb
fwait
xchg
mov
int3
sbb
out
sbb
or
dec
sub
mov
in
push
mov
lock
mov
inc
test
lods
mov
scas
out
dec
xor
sbb
push
dec
sbb
mov
lock
xchg
mov
adc
pop
or
xchg
inc
or
in
jp
das
pop
aam
cs
mov
push
int
and
roll
les
xchg
mov
adc
cmpsl
xchg
adc
and
shll
jmp
mov
test
push
mov
push
cmpsb
mov
gs
imul
imul
cmp
insl
sub
enter
push
iret
jnp
stos
data16
cltd
and
fistpll
xor
aad
movb
xlat
shlb
sahf
or
push
jne
cmc
push
inc
mov
shlb
mov
in
push
mov
xor
scas
adc
out
insb
jecxz
cmp
lods
js
jne
outsb
mov
test
cmp
dec
push
pop
shrl
sahf
nop
mov
pop
cltd
xchg
aam
test
xchg
mov
stos
dec
test
andl
sbb
test
adc
ret
pop
mov
xchg
or
add
and
pop
loope
and
xchg
inc
pop
dec
push
inc
aad
incb
mov
ds
jo
mov
push
ret
fdivrs
push
dec
or
inc
jbe
out
pop
data16
add
cmp
aas
icebp
push
sub
mov
lds
dec
mov
and
cmp
sbb
cmp
addr16
dec
sbb
fcompl
and
xchg
mov
lahf
cld
or
xchg
sti
pop
cmc
xor
lret
push
lods
cmp
pusha
and
aaa
jl
adc
int
call
xor
cmp
or
push
push
fbld
imul
inc
leave
dec
pop
xor
add
loope
sub
hlt
scas
xchg
fs
xchg
dec
cmpsb
std
inc
ret
mov
fistpl
xchg
add
arpl
mov
sub
cli
in
lret
mul
sti
aam
ljmp
aas
jnp
gs
dec
dec
shl
mov
movsb
dec
loopne
movsb
fsubp
mov
sub
cmpsl
rorb
mov
mov
sti
sub
xor
add
cltd
bound
jb
cmp
sub
mov
sahf
mov
pop
jo
mov
inc
jnp
out
xchg
push
out
andb
es
pusha
xchg
daa
push
aam
adcl
ficoms
dec
and
fstp
cmc
inc
lea
imul
cmp
push
mov
js
fmulp
or
bound
jp
test
inc
lods
and
sub
push
ret
xor
push
cmpl
lock
sbb
sub
or
and
xchg
mov
lea
or
xchg
retw
rclb
outsl
fwait
pop
call
mov
push
pop
xor
sbb
sbb
loope
and
lcall
mov
int
test
out
xchg
mov
mov
sbb
sbb
out
mov
outsl
std
aaa
sub
jge
xor
push
cmp
loop
cmpsl
pop
jb
sub
lock
int
test
rcll
cmc
ret
jmp
jmp
leave
dec
dec
jl
cwtl
fisubl
dec
mov
jmp
sub
xor
cmp
mov
pop
fildl
push
addps
push
fisttpll
or
rcrb
mov
jbe
sbb
xchg
test
xor
xchg
ret
xchg
or
ret
mov
fs
or
inc
cltd
nop
push
sub
mov
push
icebp
mov
outsl
or
stos
hlt
test
aad
stos
pop
cmp
jne
outsb
pop
sub
sub
mov
jno
jne
push
lret
push
aam
addr16
cmp
xchg
mov
xchg
outsb
inc
inc
fiaddl
pop
sub
xor
and
inc
sarb
es
jb
call
cmp
call
std
lds
sbb
jne
pusha
repz
dec
push
aas
xorl
cmp
test
mov
inc
in
shrb
cmp
xchg
dec
les
push
mov
popa
in
xchg
dec
jge
cmp
or
adc
fldenv
lret
cmp
xor
stos
and
lds
mov
adc
jl
and
mov
jle
pop
jl
xor
pop
pop
mov
mov
daa
xchg
sbb
fcmovbe
push
jle
cmpsb
add
add
fisubrl
push
xchg
push
mov
inc
xor
sub
stc
data16
jns
subb
pop
or
jecxz
lods
add
addr16
loopne
and
in
outsl
movsb
scas
sbb
bnd
sbb
mov
fmul
movsb
jns
fisubs
push
leave
pop
lds
mov
cmp
add
daa
jnp
sub
cmp
clc
lock
mov
and
addl
cli
inc
pop
aas
cmpsb
lret
call
push
clc
dec
in
pop
cmpsl
into
aaa
mov
popl
and
add
cmpsl
or
data16
in
jp
add
test
inc
adc
mov
jg
rcrl
push
or
andl
or
mov
pusha
mov
lods
jg
mov
push
les
cmpsb
test
adcb
repnz
cmc
inc
lds
xor
pop
sahf
xor
and
inc
aaa
outsb
in
lcallw
pop
popa
shrl
scas
in
mov
and
imul
out
mov
cltd
enter
jge
jo
push
cmc
jp
adc
jge
mov
adcb
cltd
inc
out
sbb
cmc
adc
mov
shrl
push
sub
dec
jo
or
sub
push
mov
negl
adc
dec
xor
fcmovnu
push
jo
sub
jns
cmp
fimull
fisubrl
add
inc
mov
scas
lret
fildll
xchg
jbe
loope
movsl
jl
xor
dec
mov
das
shrl
cltd
add
aaa
push
xor
jp
rorb
fisttps
loop
jmp
fs
loope
pop
add
sbb
mov
jle
std
add
mov
dec
inc
sahf
mov
push
cli
sbb
or
xchg
pop
sbb
xchg
mov
push
loope
inc
aaa
push
pop
std
add
rcrl
sub
ror
pop
in
add
and
in
imul
adc
and
movsl
pop
pop
and
add
mov
pop
xlat
adc
and
ret
adc
mov
imul
cmpsl
cmp
into
dec
imul
scas
sbb
fstps
hlt
sar
iret
push
sub
push
sbb
xchg
insl
sbbb
add
ss
hlt
push
cmpsb
inc
inc
mov
stos
repz
ret
in
in
dec
xchg
enter
cs
adc
mov
sbb
inc
les
sbb
sub
pop
jbe
push
and
xchg
jb
xlat
clc
addr16
mov
icebp
fxch
push
jns
movsb
and
push
xor
xlat
jp
dec
movsl
sub
loopne
sarb
insb
jle
or
dec
sub
imul
stos
xor
push
fistpl
mov
bound
fstl
mov
lahf
mov
je
pop
int3
jp
iret
pushf
mov
mov
mov
or
mov
test
mov
das
sbb
int
cmp
jno
sub
push
pop
popa
sub
daa
jnp
movsb
add
lds
clc
push
mov
pushf
mov
clc
ror
loopne
push
pop
cmp
jns
xlat
inc
push
jl
sti
push
add
fldt
adc
shlb
insl
cmp
adc
cmp
cld
loope
pusha
enter
ljmp
mov
jae
sbb
and
fisubl
and
es
shll
outsb
inc
icebp
arpl
sahf
cmp
gs
mov
mov
or
lahf
sbb
jp
or
repnz
cmp
add
in
mov
jp
enter
jno
jo
cli
xchg
sbb
xor
ret
xchg
gs
in
mov
arpl
xor
mov
ds
add
cld
jmp
dec
js
or
adc
or
push
aaa
mov
sub
jg
loopne
ret
cwtl
add
sbb
cmp
xor
mov
dec
mov
sbb
xor
dec
mov
test
enter
cs
out
rorl
cs
mov
jae
or
mov
pop
mov
in
or
repnz
fistl
popa
into
pop
ja
jg
mov
mov
aad
lret
clc
pop
ss
cld
out
adc
imul
cwtl
cmp
xlat
cli
adcb
push
and
les
cld
cs
pusha
push
push
stc
insl
pop
pop
pop
fcomip
add
jecxz
sbb
push
pop
cmc
xchg
loope
enter
das
lods
adc
mov
loopne,pt
repz
test
push
pop
cmpsb
shll
push
adc
loopne
push
xchg
or
push
or
lds
mov
inc
xchg
pop
or
jnp
in
adc
in
and
jecxz
aaa
andb
shr
xchg
enter
add
xor
push
mov
imul
pop
aam
push
aaa
arpl
fs
xor
stos
or
pop
mov
ljmp
dec
pushf
mov
xchg
push
insl
js
push
adc
imul
cmpb
call
out
rcrb
mov
repnz
pop
push
sbb
pop
into
je
mov
popf
shrb
mov
loope
mov
add
push
mov
fldl
xchg
sub
loopne
ret
or
cmpps
inc
push
pop
dec
mov
lock
daa
popf
pushf
sub
adc
ret
jp
mov
mov
sti
pop
or
insl
addb
out
mov
xchg
stos
or
je
dec
push
test
nop
jae
inc
push
cmp
sahf
test
in
test
adc
jno
and
and
scas
pushf
ds
add
lock
add
or
xchg
mov
mov
pop
fcomps
sbb
push
jnp
inc
inc
xorb
iret
loop
sbb
pushf
lcall
jb
pop
ficompl
push
hlt
cli
aas
sub
leave
cmc
or
insl
in
sub
sbb
jae
or
mov
xor
inc
divb
sub
sti
inc
jle
loopne
mov
mov
in
mov
inc
mov
fwait
or
in
cld
xchg
scas
sbb
scas
gs
mov
mov
iret
sub
add
ds
cwtl
push
gs
sbb
cmpsl
sahf
dec
inc
pop
stos
dec
jle
scas
mov
xlat
cmp
rclb
out
jp
outsl
lret
mov
xchg
push
stos
fsubrl
and
xor
arpl
mov
sarb
imul
cmp
ret
push
repz
pop
push
and
clc
int
pop
imul
jbe
repz
movsb
mov
mov
icebp
stos
cmp
sbb
out
mov
cmpsl
pushf
js
cmp
dec
or
push
ret
ljmp
push
clc
inc
hlt
das
sub
and
std
dec
jmp
movsb
xor
xor
or
out
aas
lock
sbb
and
imul
mov
pop
stc
push
sti
bound
inc
mov
stos
and
sbb
outsl
shl
mov
push
jae
clc
movsl
inc
pop
jns
add
xor
int3
xor
add
dec
cmp
inc
jae
jns
fisttpll
ret
pop
test
ds
sbb
xor
mov
jno
dec
adc
adc
jg
xor
mov
mov
rorl
mov
xor
mov
aaa
out
sar
lahf
outsb
jle
inc
xchg
fimuls
insb
mov
fisubrl
sahf
push
cmp
dec
xchg
cmp
loope
or
jnp
scas
or
ss
loope
aad
scas
push
inc
mov
adc
hlt
jb
push
in
lock
ret
test
testl
das
mov
insl
out
sahf
repnz
mov
push
pop
xchg
lea
add
or
sbb
movsl
fwait
shlb
test
inc
cs
daa
xor
cmc
sahf
lods
ds
loop
insb
jns
outsb
pusha
pop
cmp
inc
aam
xchg
mov
sbb
hlt
cmp
lods
es
xor
xchg
mov
fbstp
mov
movsb
and
mov
pop
xlat
jnp
bound
push
mov
loop
pop
dec
sub
fldcw
ret
call
mov
sub
sbb
insb
jl
cmp
into
xchg
xchg
in
xor
ljmp
fsub
inc
or
fdivs
and
jl
add
mov
std
sahf
mov
add
mov
inc
push
icebp
xchg
insb
or
frstor
add
es
test
cld
or
push
enter
in
pop
jne
out
push
lock
pop
pop
add
ds
xchg
mov
mov
or
add
cltd
mov
inc
iret
mov
rorl
repnz
mov
scas
add
pop
test
sbb
sub
xor
adc
inc
cs
or
pop
cmp
cmpsb
add
pushf
int
and
icebp
inc
rcll
or
add
jl
enter
out
sub
add
loope
les
pushf
cmpsl
fiaddl
sub
xchg
mov
adc
jns
cmp
xorb
int3
mov
fnstcw
add
adc
arpl
cmc
and
inc
ffreep
sahf
rorb
imul
mov
sarl
mov
pop
sti
xchg
jnp
outsl
ret
mov
stos
pop
cmpsl
sbbl
fcomps
inc
daa
push
sub
outsb
ret
inc
push
imul
pop
ret
sub
repnz
cli
loopne
shll
mov
pusha
jp
add
sbb
sub
inc
jge
aad
out
stc
push
lock
sub
inc
and
jb
ror
pop
mov
scas
inc
push
bound
mov
das
push
inc
sub
cmp
mov
mov
ljmpw
in
repz
out
test
sti
inc
adc
fdivr
insb
jl
inc
adc
jmp
roll
inc
and
call
jmp
imul
loopne
fists
cmpsl
daa
add
lea
aas
adc
xor
xchg
mov
testl
in
loope
popf
and
call
out
insb
int
loop
rorb
mov
fiadds
adc
gs
mov
enter
push
fwait
test
jp
loopne
pusha
xor
adc
mov
mov
sarl
push
and
mov
data16
dec
push
jo
add
mov
cmpl
fmull
fimuls
dec
addr16
test
jle
movsl
loope
mov
push
cmpsl
sub
movsb
ljmp
push
pop
stc
int
int3
imul
xor
push
jl
or
dec
mov
shrl
aam
jl
aaa
cltd
es
cmp
and
or
lret
dec
lods
or
dec
cmp
add
mov
cmc
dec
and
loop
ds
adc
aas
rorb
aam
or
mov
xchg
fsubr
and
mov
mov
add
jo
xchg
in
mov
insb
mov
push
out
stc
cld
sbb
inc
fwait
sbb
pop
nop
jb
clc
jle
rclb
pushf
aam
arpl
sub
cmp
adc
ss
jno
ss
leave
mov
or
pop
cmpsb
outsb
mov
mov
xor
mov
jp
jecxz
add
cld
lods
xchg
into
ljmp
cmpsl
movsb
jle
push
add
xchg
sub
and
movsb
jnp
pop
inc
dec
push
mov
mov
sbb
jbe
push
pop
dec
dec
push
inc
outsb
rol
jg
cmp
pop
aam
dec
insl
gs
xor
ret
sub
imul
into
push
jl
aaa
inc
outsb
pop
in
dec
or
or
outsl
insb
test
dec
pusha
xlat
arpl
mov
frstor
jo
push
push
mov
int3
jbe
sub
gs
clc
scas
in
jmp
inc
inc
mov
cld
or
sbb
or
pop
inc
frstor
mov
jmp
stc
or
add
fsts
roll
mov
pop
push
les
cmp
insb
push
gs
xlat
sbb
push
sbbb
pusha
add
pop
cpuid
dec
std
ret
adc
insl
sti
mov
jecxz
pop
stos
lea
fimuls
imul
sar
gs
aam
mov
hlt
jg
cmc
jo
popf
or
jb
sub
lcall
out
nop
sub
mov
push
out
mov
iret
mov
in
push
push
cmc
jns
imull
mov
lods
push
cld
test
mov
shll
mov
mov
out
movsl
sub
push
xor
pushl
and
filds
pop
mov
sbb
pop
negb
mov
lds
sbb
shrb
push
repz
mov
pop
shr
adc
or
call
mov
aam
xchg
inc
pop
pushf
jbe
lods
jmp
fistl
inc
js
xor
ljmp
fildll
sub
and
sbb
hlt
repnz
inc
add
lret
dec
sbb
fcmovu
movsl
fcomps
push
fistpll
inc
mov
jns
pop
outsb
jmp
aas
int
mov
mov
stos
xchg
xor
ret
pop
scas
daa
popw
in
loopne
xchg
loope
xor
pop
inc
jne
mov
es
sbb
inc
sbb
aaa
aad
cvtps2pi
scas
pop
shlb
lret
ja
cmp
sbb
mov
test
add
lds
jecxz
xchg
sbb
push
aam
rorb
icebp
inc
xchg
mov
push
lahf
enter
cld
cld
sbb
repnz
in
ss
push
bound
sub
test
insb
mov
cmpsl
mov
fcomi
xor
rcr
sahf
gs
fcoms
xchg
into
sbb
jl
pop
pop
mov
push
adc
mov
popf
ret
mov
mov
lahf
pop
in
stos
dec
push
ds
movsl
or
mov
lods
movsb
mov
push
sub
push
pushf
mov
daa
decl
enter
jle
xchg
mov
int3
jns
imul
pop
inc
aas
jecxz
scas
in
sub
into
and
outsb
cmpsb
dec
xchg
xchg
test
xchg
sub
shll
pushfw
adc
mov
or
insl
inc
lret
push
decl
add
cli
push
fnsave
mov
sbb
leave
out
loopne
cmp
notb
mov
and
xor
insl
add
cmp
or
shrl
xchg
jp
push
outsb
iret
push
loop
movsl
lock
add
sub
sbb
aaa
push
inc
inc
lods
mov
hlt
cld
inc
fstl
jge
lds
ljmp
cmp
lods
and
sbb
sub
mov
mov
xchg
jnp
jle
and
shll
or
testl
dec
stos
fisubs
fiadds
out
sarl
ds
or
iret
lods
jbe,pt
cmpsb
mov
xchg
push
push
cmp
cmpsl
les
js
jnp
out
xor
or
loope
enter
es
insl
in
je
mov
scas
inc
out
je
fcoms
fsubl
test
enter
popf
popf
in
cmpsl
aam
int
ja
xor
pop
insl
pop
sub
and
repnz
icebp
pop
sti
xchg
lods
sub
push
stos
mov
icebp
int3
inc
xchg
mov
cmp
jb
jp
pop
les
stc
lahf
dec
xchg
pop
test
pop
repz
dec
repz
mov
mov
cmpsb
cwtl
sub
inc
sarb
inc
pusha
dec
mov
shrb
mov
push
push
les
xor
push
pop
ja
data16
int
stos
inc
or
jne
popa
pop
sbb
movsl
lret
scas
sbb
inc
push
or
jae
ret
inc
push
dec
inc
and
xor
pop
add
xorl
sub
mov
rcrb
fmull
fisttps
inc
push
aas
mov
inc
add
out
lahf
fsub
mov
lock
movsb
mov
fcompp
outsl
push
stos
loop
aad
sub
mov
jo
and
out
testb
mov
out
sub
mov
shll
jmp
outsl
mov
inc
icebp
lods
fcmovu
fbld
fidivs
sti
sbb
lahf
pusha
mov
sub
mov
cmp
pop
mov
xor
es
fimuls
cmp
test
cmc
xchg
lods
subb
das
cmpsb
pop
aad
mov
sbb
popf
roll
xor
push
add
inc
js
xor
mov
push
sub
add
mov
insb
addr16
push
jg
jmp
mov
jno
and
pop
ret
call
and
push
rcl
push
ret
mov
push
mov
ud1
insb
pusha
fisttpl
and
mov
inc
into
push
lcall
push
shll
xchg
or
cmpsl
xchg
and
add
adc
gs
imul
push
enter
xor
sar
scas
jg,pn
mov
scas
add
mov
inc
stos
in
sub
test
lds
fbld
and
rcll
mov
cmp
hlt
test
addr16
xor
mov
adc
das
in
jp
sub
mov
ja
pop
rclb
jns
jb
nop
in
adc
mov
imul
sbb
ja
push
mov
js
dec
cmpsb
lea
test
mov
pop
mov
sarb
sbb
dec
push
mov
ja
xchg
loopne
fstpt
rorl
popf
xor
pop
ja
scas
sub
cld
pop
lcall
jecxz
pusha
sbb
add
into
jmp
stc
pop
jo
sub
inc
pop
push
push
push
mov
mov
inc
mov
seta
cmp
rcl
hlt
sbb
repnz
stc
mov
mov
lret
sti
jne
jae
scas
mov
gs
popa
mov
sub
out
dec
or
mov
setne
mov
mov
push
pop
xor
pop
insb
cmp
in
xor
test
or
add
test
adc
pop
pop
roll
and
sub
jle
add
insl
xor
int3
stos
sub
or
lods
add
lret
dec
mov
push
pop
cld
mov
dec
mov
mov
test
adc
cs
hlt
lret
call
push
es
cmc
mov
movsb
pushf
rolb
and
cmp
mov
sub
cltd
insl
movsb
divb
dec
cmp
lods
lods
push
mov
ds
mov
data16
pusha
lret
sbb
jp
in
outsl
icebp
push
xor
movsl
in
cmp
xlat
fldt
aaa
leave
call
cmpl
sub
mov
iret
movsl
pop
lds
int
out
hlt
fidivl
mov
dec
iret
imul
in
pop
jg
xchg
pop
dec
xchg
jae
inc
pop
orb
dec
mov
lods
dec
ljmp
pushf
scas
sub
mov
pop
xor
leave
sub
add
pushf
mov
or
nop
sub
pop
into
lock
popf
das
push
insb
mov
loop
jbe
mov
push
in
cmp
jns
mov
popa
push
shlb
xchg
xorl
movsb
lcall
dec
sbb
iret
insb
clc
jns
cmp
mov
push
js
aad
ret
or
addb
fcomps
xor
mov
ret
jecxz
adcb
sub
or
cmc
lods
jle
roll
jg
hlt
pop
loope
fiadds
mov
sub
mov
in
adc
inc
addb
xor
leave
enter
sub
in
in
js
sbb
adc
cmc
out
cmp
jbe
pusha
cmp
sti
gs
and
enter
fcoms
pop
inc
pop
xor
fldl
xchg
jecxz
popw
mov
test
jle
mov
sbb
call
mov
inc
jmp
ret
mov
in
xchg
in
in
or
or
dec
or
push
cmp
jmp
sbb
inc
rcll
mov
stc
dec
inc
pop
inc
out
add
jno
mov
cmpsl
ja
and
sarl
js
stos
mov
int
fisubl
dec
push
lret
pop
test
or
mov
push
mov
clc
dec
or
fadd
cs
popa
push
movsb
bound
inc
cltd
scas
jle
aas
test
sarb
cmp
faddl
mov
leave
add
nop
andl
jae
sarb
mov
push
mov
shl
mov
add
jl
inc
push
cmpsl
xchg
jg
outsb
loopne
push
and
out
pop
scas
nop
rcr
aas
pop
jo
add
fs
pop
aam
loop
enter
icebp
xlat
sbb
aad
nop
sbb
clc
sbb
pop
sub
cmp
jne
mov
pop
loope
dec
add
pop
stos
mov
push
mov
jno
push
out
fistl
js
jnp
cmp
adc
mov
outsl
cmp
pop
cmc
pop
mov
testb
lds
mov
push
mov
aam
stc
pusha
lret
repz
dec
out
add
push
rcr
sbb
popl
stos
out
xlat
pop
add
mov
in
cmp
loope
xor
lea
mov
add
ja
push
insl
xorl
sub
stc
sti
cmp
mov
pop
cs
out
sub
loope
push
les
ret
xchg
daa
add
aas
lret
and
lret
xor
sbb
shrb
cmp
jns
lret
fidivrl
loopne
test
sahf
in
cmp
adc
popa
xchg
sahf
mov
jg
xchg
mov
daa
out
addr16
pop
stos
aad
leave
ficoml
stos
popf
push
pop
cmp
push
jae
jle
jge
scas
out
pop
movsb
add
sub
and
cld
mov
ret
aas
mov
ds
sub
adc
dec
adc
mov
ljmp
push
dec
loope
decl
cwtl
jae
inc
loope
adc
fdivs
mov
sarb
cmp
gs
in
mov
outsl
sbb
ss
inc
or
lcall
dec
orl
mov
cld
int3
add
xlat
mov
mov
or
dec
fidivrs
jb
sbb
in
es
fwait
add
mov
aas
fnstcw
hlt
lds
loop
mov
jno
cwtl
mov
pop
jo
jle
in
rclb
bound
sbb
xchg
lods
mov
mov
mov
pop
push
mov
push
jp
pushf
in
adcb
mov
pop
cmp
mov
pop
cmp
inc
inc
data16
cmp
sub
xor
ret
xchg
sub
add
mov
jle
push
jmp
mov
fidivrl
pop
and
xchg
jp
out
cli
pushf
out
test
sahf
nop
test
out
loop
xlat
mov
std
mov
sbb
sahf
je
lock
in
dec
dec
xchg
sub
pop
movsl
sub
daa
pop
stos
fidivl
loop
or
rolb
lahf
and
sub
test
mov
jmp
fs
xor
daa
int3
mov
and
pop
push
pop
pop
adc
xrelease
pop
jo
mov
jg
sub
inc
ljmp
mov
pop
pop
fadd
mov
inc
shlb
cli
and
fs
cmp
daa
xchg
sbbl
xor
iret
shl
mov
inc
mov
das
or
pop
pop
jae
mov
lahf
stc
mov
adcb
rorb
rcl
push
sbb
cli
inc
xor
mov
mov
pop
nop
pop
data16
add
push
pop
xchg
cwtl
lcall
and
jo
mov
push
mov
jnp
ja
sub
subb
insl
inc
dec
fcom
sbb
cmp
push
mov
mov
dec
in
ret
sub
ja
cli
jp
les
ljmp
cmp
adc
adc
repnz
dec
lahf
push
inc
sub
mov
xchg
cmp
shr
inc
insb
lods
dec
dec
push
mov
push
lods
xchg
cld
outsl
mov
lds
jecxz
lahf
dec
or
sbbl
mov
jae
or
xor
mov
dec
rcl
int
sbb
jmp
cmp
repnz
add
out
pop
push
push
rcrb
dec
or
inc
jo
dec
je
xchg
negb
xchg
sarl
mov
ror
nop
xchg
push
jge
add
inc
push
mov
mov
leave
mov
jae
pop
in
outsb
mov
mov
icebp
add
mov
mov
jl
or
test
mov
ljmp
push
iret
mov
daa
xchg
mov
pop
xchg
test
repnz
add
idivl
push
xchg
rorl
mov
mov
jo
imul
std
imul
cmp
out
out
mov
mov
adc
daa
loopne
push
divl
insl
int
mov
sbb
lods
fadds
out
fs
sub
mov
cmpsl
pusha
rcrl
jb
scas
lods
gs
fcompl
enter
aam
out
inc
mov
cli
aad
inc
sub
imulb
loope
fisubs
jle
mov
push
mov
out
repz
jl
dec
gs
lods
jno
xlat
xlat
xorb
push
lcall
shll
outsl
shlb
dec
jno
or
inc
cltd
and
sbb
int3
dec
int
lret
aad
pop
fs
jae
cmpsb
inc
jle
fsubrs
cmpsl
outsl
mov
fdivrs
push
shlb
xchg
icebp
out
imul
outsl
cmp
and
pop
cmp
mov
mov
imul
out
sbb
jp
mov
inc
sub
sub
pop
gs
sbb
ljmp
push
adc
orb
sbb
fnstsw
or
decb
or
lds
add
cmp
repz
cmc
data16
shll
mov
pop
cwtl
outsl
mov
std
clc
xchg
leave
jle
aam
jmp
leave
dec
scas
or
adc
pushf
jmp
jmp
fidivrs
andl
inc
jnp
mov
mov
jb
aaa
stos
testb
aaa
cmp
out
add
mov
movsb
out
inc
xor
mov
sub
stc
iret
repnz
cwtd
mov
mov
or
mov
mov
xor
sbb
push
fnstcw
xor
or
test
orb
mov
sbb
push
test
pusha
into
inc
mov
shl
ss
and
add
xchg
cmpsb
push
xor
cmc
in
push
xor
cmp
subl
test
mov
outsb
je
dec
roll
mov
out
xlat
call
leave
sar
sbb
cmpsb
sbb
pop
loop
pop
push
jg
daa
sub
fsubl
ljmp
push
aam
lods
adc
adc
push
mov
enter
and
lds
ja
or
cs
mov
lret
leave
js
pop
mov
inc
test
mov
pop
cwtl
sbb
into
pusha
into
inc
jne
dec
pop
lret
stos
xor
sti
xor
adc
cmc
mov
sub
ja
and
ljmp
or
pop
test
insl
xchg
mov
mov
mov
mov
insl
pop
cmp
data16
idivl
shlb
xchg
ret
call
scas
pop
fadds
loope
scas
mov
ret
mov
lods
pop
fistpl
mov
rcrl
sbb
stc
add
cmp
cmc
push
movsb
out
and
and
and
jnp
sarb
and
inc
sbb
or
push
push
mov
leave
cmovb
into
pop
sub
cmpsb
mov
lds
xchg
sub
rorl
test
mov
mov
cmp
lock
imull
mov
xchg
bound
mov
pop
outsb
cwtl
icebp
sub
xchg
push
cmp
andl
fcoms
mov
push
iret
inc
jl
out
sub
ja
lret
cmp
and
int3
mov
scas
mov
push
or
xlat
xlat
test
inc
mov
hlt
add
shl
cs
sub
cmp
jmp
xor
movb
jmp
sbb
mov
jns
jmp
les
xchg
es
mov
sub
stos
adcl
das
adc
cmp
roll
pop
cld
sbb
pop
xchg
xabort
js
outsb
adc
fmuls
push
aas
xor
pop
jmp
lret
into
dec
shll
enter
pop
xchg
data16
jno
mov
xchg
push
cmp
in
idivl
jge
addr16
ret
mov
xchg
movsb
adc
das
aam
sti
jecxz
cmp
repnz
decl
outsl
ja
or
scas
cld
popl
popa
or
pop
push
xlat
ret
cli
mov
xchg
cmc
mov
cwtl
js
lret
sahf
mov
fistpl
add
jp
das
push
lret
mov
jge
iret
gs
cmp
jne
push
jp
cmp
push
leave
lret
outsb
inc
into
addb
cltd
loopne
bound
mov
ja
call
mov
mov
cmp
ja,pt
inc
xor
or
mov
dec
xor
fcmovne
cld
lahf
lock
cmpsb
jae
inc
pop
or
and
call
pop
sub
add
stos
inc
pop
push
jmp
insb
adc
in
mov
in
insl
and
jbe
lods
cmp
lock
and
sub
test
mov
mov
je
jne
outsl
test
stc
adc
mov
aam
mov
cwtl
dec
imul
dec
and
insl
in
sub
jle
or
aad
mov
adc
or
insb
mov
pusha
xor
jge
mov
inc
mov
sti
jle
push
stc
cltd
xchg
adc
lahf
sub
jno
mov
push
pop
ret
lods
cmp
mov
and
inc
inc
vpperm
push
xor
mov
cld
sub
loope
scas
lahf
ret
jl
jecxz
jp
test
loopne
aaa
repz
push
faddp
mov
es
je
imul
xor
cmpl
lret
dec
jle
cwtl
jmp
aad
addb
stos
insl
in
add
pusha
sub
cltd
je
and
imul
sbb
dec
aad
pop
and
pop
and
jae
enter
mov
or
and
push
mov
pop
mov
mov
lret
mov
fcomps
xchg
pop
dec
pop
jo
insl
pop
pushl
stos
cmpsl
nop
inc
aam
daa
cmpsl
out
pushf
mov
movsl
push
inc
jl
fiadds
cmp
test
dec
sbb
pop
in
ret
or
mov
xchg
outsb
inc
into
mov
sbb
lods
shll
sub
outsl
jl
jl
insl
ret
xor
fwait
pop
jo
inc
gs
and
sub
sbb
xorb
rcr
mov
adc
enter
aad
mov
mov
dec
cmpsl
jecxz
arpl
adc
ljmp
adc
nop
sarb
dec
ret
shll
jae
sbb
imul
pop
in
imul
notl
mov
cmp
xchg
and
jge
mov
pushl
xor
sub
outsl
out
test
sbb
jmp
mov
loopne
insb
out
add
bound
xchg
mov
sahf
mov
inc
lock
mov
in
imul
in
loopne
add
jne
xor
pop
stos
fisttpll
jne
jmp
jb
cwtl
sbb
cli
cmp
push
es
add
jb
xchg
add
sbb
adc
mov
ds
test
outsl
adc
xor
lahf
pop
dec
push
push
fcmovb
mull
je
stos
aaa
xchg
pop
and
xchg
adc
adc
cld
mov
rcr
mov
adc
adc
inc
aad
in
dec
outsl
cmp
xchg
push
in
jl
pop
or
loope
call
xlat
aas
cmp
pushf
pop
and
shlb
lds
out
push
and
pop
or
int3
call
lods
xchg
out
in
mov
cmp
inc
add
and
jecxz
jmp
jmp
es
decb
push
dec
loope
adc
pop
or
hlt
mov
ret
push
std
loope
mov
js
movsl
sub
and
inc
mov
jo
xchg
inc
mov
xchg
enter
stos
inc
jge
and
popl
ss
jno
shlb
sub
mov
inc
adc
xchg
cmp
es
push
js
cmp
cmc
mov
movsl
sbb
mov
or
bound
and
outsl
and
in
outsb
xchg
cmp
lock
inc
aad
repnz
jp
xchg
dec
mov
out
mov
mov
sub
adc
out
jmp
loop
and
sbb
inc
jle
in
sbb
fwait
push
out
push
pop
fisttps
add
dec
lret
xchg
icebp
mov
dec
cmp
nop
pop
or
pop
dec
insb
xor
idivl
push
sbb
inc
out
mov
xchg
and
aam
stos
in
test
test
repnz
jge
cmc
push
shl
cmp
xor
dec
jo
and
jb
sbb
sub
popa
outsb
sbb
jno
and
fnstenv
xchg
in
pushf
lea
push
mov
cmp
push
add
mov
sbb
push
sbb
pop
les
popa
add
shll
push
sbbb
and
sbb
sbb
mov
ret
hlt
pop
iret
cmp
divb
mov
sbb
out
lret
xchg
popf
fsubrs
sarl
ljmp
mov
popf
icebp
cmpsw
add
jge
mov
push
and
std
cmc
sub
inc
shl
jne
inc
std
dec
push
inc
jne
pop
mov
test
imul
jno
mov
iret
je
inc
mov
adc
int3
pop
rcll
inc
insb
vmread
test
and
add
pop
push
push
jg
mov
out
pop
or
pop
jge
loope
jbe
clc
sbb
loopne
inc
jae
stos
clc
lock
popf
mov
out
out
loope
lret
bound
popf
fwait
sbb
add
data16
imul
adc
movsb
movsl
insb
sti
xchg
fstl
add
iret
in
pusha
pop
push
bound
rolb
xchg
daa
sub
fucomi
mov
dec
aas
xchg
iret
dec
mov
cmp
stos
cmp
ds
xchg
xchg
cli
inc
lea
out
xor
stos
jmp
pop
imul
ljmp
icebp
jb
cltd
orb
add
aam
mov
shlb
inc
mov
pop
xor
push
mov
dec
cmp
fdivrl
cli
mov
rcrl
mov
rcrl
xor
inc
int
jno
mov
push
gs
inc
mov
ljmp
subb
add
in
ss
pop
push
inc
imul
sti
in
add
inc
int
addl
popf
add
dec
test
dec
movsb
adc
xchg
push
nop
enter
mov
insb
push
shlb
mov
stc
fstpt
dec
xchg
jno
and
mov
into
pushf
or
pop
mov
mov
cmp
sbb
pushl
arpl
xor
xchg
sbb
add
adc
adc
ljmp
mov
or
and
mov
stos
jno
cmp
into
test
inc
test
cld
orb
cwtl
andl
pop
repnz
adc
cli
xchg
inc
aaa
ret
mov
in
in
lods
paddq
loopne
sbb
mov
xor
sub
or
mov
sarb
jmp
xor
inc
hlt
xlat
dec
mov
popa
pop
fiadds
and
push
lods
pop
in
outsb
mov
js
ss
outsb
in
add
test
inc
lods
lret
icebp
sub
push
mov
lcall
in
iret
out
sub
aad
mov
jnp
and
and
pop
lcall
arpl
and
fcomi
lods
push
movsb
mov
dec
xor
sub
test
pop
sub
fdiv
imul
fmull
lea
push
mov
aas
mov
mov
cmp
in
cmc
lods
xchg
xchg
push
sub
adc
push
int
dec
scas
adc
dec
fdivr
dec
push
rclb
dec
insb
out
repnz
cmp
dec
outsb
inc
arpl
in
ja
inc
lcall
pop
add
xchg
loopne
jl
push
xor
std
lret
lods
jnp
fimuls
repnz
dec
sub
aaa
fildl
addr16
mov
test
add
sbb
arpl
xor
push
mov
mov
sti
sub
pop
and
insl
xchg
mov
aam
xchg
lods
lret
cli
cmp
and
scas
int3
mov
in
mov
cmp
pop
dec
cmp
subl
jge
ret
out
incb
pop
lcall
dec
nop
push
cmp
test
ljmp
add
inc
push
push
pop
out
das
mov
xor
ja
sbb
ret
or
pop
sbbl
das
push
push
jge
xor
fdivr
mov
mov
mov
arpl
push
xor
stc
jb
cmp
stos
jno
xchg
fistpll
outsl
sub
xchg
in
xor
dec
mov
aas
out
push
adc
cmp
cli
inc
jo
xchg
pop
clc
xchg
cmp
push
int3
aas
lea
std
push
adc
dec
adc
and
stos
pop
sub
lods
lods
mov
xchg
push
ljmp
fsts
sti
dec
mov
cwtl
mov
test
hlt
repz
lods
ss
inc
xchg
xor
aam
mov
loopne
sarb
sub
push
xchg
pop
popa
sub
and
and
fs
inc
adc
test
mov
inc
mov
daa
xchg
pop
cmpb
in
cltd
test
push
xor
adc
cvttps2pi
push
movsb
aad
pop
inc
sub
ds
ficoml
mov
inc
jne
jae
jnp
inc
fsubl
inc
xchg
xchg
enter
in
sarb
or
rol
ds
fsubr
lcall
xchg
jb
xor
sar
pop
jg
push
mov
ljmp
dec
sbb
lret
sbb
xor
in
imul
icebp
testl
addr16
cmp
into
adc
test
mov
ja
ja
jmp
into
in
mov
adc
mov
stos
sub
push
test
add
enter
and
cld
call
sub
scas
mov
or
jo
add
sahf
loop
rorb
cmpsl
hlt
dec
sti
movsl
jb
push
pop
mov
ficomps
cmp
xchg
bound
mov
jmp
daa
std
push
in
test
add
dec
sbb
jae
sbb
sbb
mov
xor
sbb
xchg
fildl
pop
fwait
mov
je
psubsw
lret
mov
fdivrs
add
insb
repnz
into
jg
cs
xor
lret
push
mov
lods
fcomp
orb
dec
lret
inc
packssdw
dec
in
call
xor
fsts
fistpll
cli
movsl
xchg
in
sbb
mov
dec
les
push
rcrb
mov
jne
stc
fisubrl
std
leave
cmp
sbb
nop
ficomps
push
ss
inc
inc
push
je
cmp
lahf
mov
test
inc
jno
and
or
pop
cmp
or
outsb
inc
ljmp
lea
and
jae,pt
mov
mov
sub
lods
in
sbb
inc
and
pop
ja
shlb
adcl
sar
fisttpll
jecxz
lret
lock
mov
mov
jecxz
xor
mov
call
mov
lcall
ja
cltd
xchg
cmp
pop
test
xchg
out
gs
push
cmc
lods
rol
test
xchg
inc
scas
jae
xlat
out
in
and
imul
in
lahf
pop
test
test
enter
popa
mov
ljmp
jecxz
dec
idivl
xor
out
sub
add
mov
or
lret
in
adc
test
cmp
lahf
push
push
jle
mov
lock
iret
adc
imul
rcll
aas
insb
mov
push
sub
subl
dec
sbb
xor
leave
shrl
icebp
loop
mov
dec
xlat
call
jne
incb
xchg
mov
xchg
out
pushf
mov
adc
push
and
sbbb
mov
lahf
dec
or
adc
out
clc
cltd
inc
xor
cmp
dec
jae
push
or
sahf
mov
sbb
stos
nop
inc
sub
push
cmp
movsl
adc
lock
scas
pop
xchg
insl
mov
in
push
pop
jmp
cmp
dec
cmp
pop
mov
rcrl
jns
aam
mov
pop
imul
and
add
stc
ret
ss
jae
enter
inc
adc
or
rclb
cmp
lds
jmp
mov
outsb
jle
pmaxsw
mov
inc
mov
mov
flds
int3
jns
sub
test
arpl
dec
sbb
pop
loopne
dec
imul
jo
lea
cmp
mov
xlat
nop
sub
xchg
filds
in
or
mov
stos
xchg
xchg
or
movsb
shrb
and
mov
imulb
adc
aaa
jnp
sbb
jle
sbb
jb
mov
lods
cltd
and
add
mov
mov
cmp
mov
and
decl
xor
mov
lods
dec
xor
mov
iret
std
xchg
or
repnz
sbb
xor
cltd
xchg
pop
xor
outsl
es
mov
sub
testb
adc
and
out
fistl
aaa
pop
shlb
cld
out
sbbl
shll
and
pop
jg
mov
pop
or
lret
daa
outsb
enter
cmp
nop
sar
sub
jmp
or
loopne
or
popa
xor
jnp
scas
lcall
mov
add
sbb
clc
xor
cmp
sub
and
dec
or
push
psubusb
and
int
xor
aas
cmc
rolb
or
testb
clc
pop
jecxz
or
fsubrl
pop
jns
cld
addr16
mov
mov
ret
add
xor
mov
jmp
sub
push
jnp
nop
fwait
jns
mov
pop
push
mov
mov
loopne
outsl
std
into
dec
nop
mov
or
jl
mov
jge
add
and
ljmp
mov
lods
xor
mov
out
mov
pop
mov
pop
mov
icebp
lods
xor
icebp
call
jecxz
inc
or
mov
into
out
test
pop
or
rorb
inc
test
mov
sub
xchg
imul
xchg
dec
or
push
and
fsubrl
cmp
push
pop
arpl
add
lods
lds
mov
push
out
hlt
and
cmp
es
lods
xchg
aas
ret
out
cs
lret
out
loop
pop
data16
cli
stos
pop
hlt
les
int
inc
pop
loopne
sbb
int
popf
dec
sbb
or
push
ss
insb
cmp
outsl
cltd
sbb
jo
push
les
inc
jnp
popl
ret
lcall
insl
mov
ret
dec
in
stc
adc
test
mov
addl
outsb
xchg
push
loop
rcrb
dec
mov
andb
mov
cltd
inc
mov
inc
sub
sub
sbb
xchg
sti
sbb
imul
scas
push
insb
lret
pop
aam
es
and
inc
adc
pop
stc
stc
cwtl
push
shufps
test
call
pop
clc
sti
mov
adc
call
mov
inc
mov
daa
or
jmp
fstpl
mov
or
jae
test
fdivrl
sub
mov
push
insb
int
mov
pushf
mov
mov
leave
int
jno
jno
inc
sub
dec
add
fs
mov
test
subl
lds
mov
jo
xchg
sub
or
popa
mov
leave
xor
cmp
fistpll
repnz
test
jno
and
pop
fnstcw
arpl
jb
addr16
adc
fdivl
das
sbb
pushf
dec
mov
fdivrl
sbb
test
lock
cmp
mov
movsl
mov
insb
aas
jo
in
pop
inc
mov
xchg
jo
pop
pop
enter
xlat
mov
out
adc
sub
push
shl
in
jecxz
push
jno
out
gs
push
push
insb
shr
shrl
lahf
ja
push
rclb
and
mov
js
push
test
push
repz
in
enter
arpl
ss
shl
cmpsl
pop
imul
aas
mov
xor
sbb
js
xor
sbb
jno
mov
pop
insb
add
xchg
mov
aam
xor
sbb
mov
cli
fwait
mov
and
pop
xor
fildl
fidivrl
inc
mov
cmp
test
push
out
mov
insb
push
xor
adc
fistpl
push
xorl
cmp
sub
enter
lods
xor
push
jl
sub
test
aam
mov
rcl
aaa
popa
or
cmp
mov
enter
push
or
fistps
outsl
add
cmovns
push
test
mov
xchg
mov
or
je
sub
lret
jb
mov
and
lock
je
jne
rolb
loopne
inc
jae
iret
loope
push
mov
or
ret
out
jmp
jo
xchg
andl
mov
jge
mov
dec
mov
cld
fs
jnp
pop
jno
nop
push
ret
neg
push
add
add
and
xchg
nop
jg
xor
mov
cmpsb
icebp
stos
das
push
sahf
mov
inc
add
xlat
dec
inc
xchg
andl
stos
movb
push
sarb
movl
jecxz
dec
or
inc
push
rolb
ljmp
lahf
lea
rcrb
jae
lahf
filds
dec
mov
test
iret
mov
lret
cmp
xor
sahf
jle
adc
or
and
lcall
inc
lret
ljmp
dec
lret
insl
mov
sbb
xchg
dec
cmpl
outsb
push
mov
xchg
mov
sub
jge
sbb
xchg
fsubr
imul
lret
in
leave
in
popa
pushf
test
inc
or
mov
test
cmp
and
sbb
movsb
clc
lret
shrb
shlb
jo
ljmp
mov
pop
fistpll
les
or
imul
mov
scas
sub
cmp
xor
push
xchg
xchg
jle
xchg
subl
loop
nop
xchg
push
pop
aam
jp
test
mov
and
cld
add
lods
das
shrl
xlat
popf
divb
cmp
outsb
ret
xor
in
popl
inc
xor
aas
and
jb
pop
push
int3
xlat
fisttpl
shrb
dec
out
sbb
bound
int
lret
lahf
data16
jge
fcoml
add
inc
dec
lret
lods
sub
push
je
fmul
loope
jno
cmp
sbb
mov
mov
push
xor
shr
sbb
fistps
icebp
rolb
jae
test
in
pop
popf
pop
out
orl
addr16
cs
fwait
addb
test
jmp
cmp
jmp
dec
or
add
jno
or
outsl
cwtl
jns
incl
adc
adc
repz
daa
mov
xchg
idivl
loop
movsl
icebp
xchg
das
xchg
dec
ss
clc
xchg
shrl
mov
pop
mov
mov
sub
test
test
or
cmp
imul
icebp
inc
or
and
pop
pop
addr16
or
test
filds
mov
fidivrl
sbb
push
xchg
and
dec
adc
jg
sbb
shll
push
ds
xor
fcoml
cmp
pop
insb
or
xor
cs
add
mov
out
cmc
std
dec
cmp
repz
jg
jb,pn
aaa
push
scas
popa
nop
pop
mov
and
outsl
fwait
es
clc
lock
sbb
push
pushf
lret
xor
js
xchg
data16
add
xor
adc
sub
or
nop
add
aas
and
cmp
arpl
cli
aaa
lods
bound
into
pushf
inc
push
or
neg
add
int
cmp
lret
pop
mov
outsb
lods
mov
sub
je
je
jecxz
fisubrl
popa
cmc
inc
lret
pop
rcrb
jecxz
mov
das
sub
sbb
fdecstp
lds
fwait
push
mov
adc
or
mov
loop
jl
jo
cld
jecxz
mov
inc
stos
test
loopne
and
mov
xchg
dec
rcll
xor
stos
jmp
icebp
mov
mov
mov
mov
lret
mov
decb
repnz
lds
fsts
mov
xchg
push
pop
ss
mov
push
ret
test
and
sti
pop
sub
fdivrl
mov
orl
jmp
pop
mov
out
and
adc
jl
fldcw
mov
mov
jo
inc
mov
outsl
mov
int3
dec
xor
mov
es
rclb
jmp
ljmp
pop
xor
adc
pop
in
jae
adc
pushf
lods
add
mov
pop
dec
xor
hlt
rcll
mov
cmp
and
pop
das
out
adc
mov
mov
movsl
xchg
subl
jae
xchg
clc
bound
lcall
cmpsl
mov
jle
ret
add
mov
sahf
cmpsl
add
mov
mov
andl
xchg
xor
loopne
js
adc
xchg
inc
lds
add
jle
xor
sti
inc
xor
fsubrl
mov
fs
ret
mov
cwtl
push
add
inc
stc
mov
push
inc
mov
sbb
in
xlat
repnz
div
fcomps
fs
mov
push
jecxz
jns
and
dec
lods
test
push
sahf
xor
and
test
mov
and
mov
lahf
fbld
pusha
adc
pusha
mov
jbe
sahf
push
push
mov
xchg
rcll
xor
sub
lcall
stos
or
fwait
and
mov
lock
sahf
add
lret
cmp
outsb
and
in
mov
inc
mov
lret
xchg
add
sbb
sbb
push
imul
pop
nop
cmp
sahf
cmp
incl
cmp
pushf
jo
cwtl
cltd
mov
out
sbb
scas
stc
xchg
in
xor
lahf
loop
cmp
sub
mov
jns
les
stos
inc
mov
cmovbe
jl
arpl
mov
add
imul
and
lock
pusha
xchg
adc
mov
ljmp
push
lods
pop
insl
fprem
sahf
pop
inc
shl
sti
popf
or
inc
out
mov
mov
loop
mov
mov
jge
sbb
cmc
in
fidivl
adc
cmpsb
push
xlat
in
mov
cmp
pop
jmp
cs
jb
xlat
stos
jae
pop
mov
lahf
inc
sub
push
push
jns
or
jle
test
xorb
sbb
mov
daa
push
dec
mov
sbb
jbe
jno
xchg
jle
pop
inc
xor
rol
int3
in
fucomi
imul
mov
ja
push
and
jns
imulb
rcrl
imul
popf
or
les
xchg
add
mov
js
xor
adc
lods
lock
push
add
pop
aas
nop
mov
in
movsb
jge
jle
mov
out
add
xchg
ficoms
xchg
mov
pop
and
lahf
filds
das
cmc
push
sbb
cmp
mov
inc
clc
cmpsl
cmp
cmp
int
sahf
cmp
clc
and
stc
stc
add
cmc
jl
add
lods
js
xrelease
ffreep
insb
or
outsl
js
mov
ret
in
lcall
out
pop
jmp
mov
std
xor
push
out
adc
pop
enter
imul
data16
adc
mov
lahf
std
mov
sbb
in
xor
pop
jae
pop
push
into
mov
daa
mov
lds
aas
in
pop
pop
adcb
repnz
push
or
inc
lsl
xor
xor
jcxz
jl
stos
lea
jne
movsb
sbb
cwtl
inc
dec
jae
sti
sub
cmc
stos
add
jnp
add
mov
stos
data16
mov
ret
xchg
leave
adc
xor
inc
pop
xor
mov
mov
cmpsb
scas
sbb
xlat
pushf
call
add
sbbl
push
jmp
ret
js
icebp
test
cmp
push
pusha
inc
std
ljmp
push
cmp
sub
popa
lahf
fildl
jbe
add
mov
push
xchg
pop
xchg
ja
out
xchg
dec
shl
outsb
mov
ret
data16
ss
adc
nop
std
leave
adc
lcall
ss
push
aas
leave
lret
add
cmc
imul
popa
subl
arpl
pop
cld
ss
cmpsb
pop
sbb
js
push
push
rcll
scas
sti
in
popa
in
pop
sub
sub
mov
inc
sub
sbb
mov
mov
repz
push
sub
sbb
or
jmp
push
push
sub
repnz
push
cmp
mov
push
int3
outsl
push
add
and
sub
xor
ret
aam
sbb
and
test
cmc
inc
pop
lea
aad
lahf
les
dec
xchg
gs
rcl
lcall
xor
sub
out
inc
int3
mov
inc
xchg
adcb
adc
das
add
nop
inc
or
out
sbb
aas
int
test
pushf
adc
add
loop
fwait
out
js
mov
add
dec
rorb
flds
push
fstpt
add
imul
aam
in
outsl
mov
jge
aas
mov
jbe
ret
std
jbe
dec
ja
nop
lods
fbld
test
and
rcll
mov
adc
cwtl
ret
mov
xor
sub
das
pop
jp
mov
push
inc
push
outsb
xchg
pop
xchg
pop
add
and
cmpsl
shlb
ljmp
add
and
push
fs
mov
mov
push
ljmp
push
xchg
clc
push
insb
lods
imul
inc
test
push
or
sarb
and
test
jno
inc
loopne
cld
adc
hlt
cmp
lods
enter
sub
sbb
jns
js
sub
pop
test
dec
ljmp
aaa
pop
repz
es
fwait
inc
push
mov
stc
int
xchg
inc
mov
inc
mov
mov
icebp
sub
lods
into
push
bnd
adc
lret
ds
jmp
stc
imul
dec
sbb
dec
and
adc
imul
xchg
jno
push
je
inc
cmp
push
into
mov
cmpb
aad
xchg
orl
js
aam
divl
cli
movsl
cmp
xchg
imul
xor
js
pop
std
mov
adc
ss
fwait
popf
adc
add
in
andl
push
les
cmp
lret
fisttpl
loop
in
xchg
out
and
mov
das
mov
out
loope
int
jg
add
xor
cmc
and
mov
mov
dec
negl
dec
lret
dec
dec
scas
xor
inc
xor
jle
jge
mov
outsl
cmp
test
add
xchg
sub
inc
sub
xchg
pushf
mov
imul
shlb
cltd
mov
loope
and
dec
fs
jns
popf
dec
dec
push
scas
or
xchg
ljmp
lock
outsl
add
sub
adc
pop
out
mov
mov
adc
mov
and
cmp
push
sbb
insl
or
push
jns
add
dec
cltd
in
xchg
push
xlat
ficoms
or
mov
mov
mov
inc
jno
es
sti
sti
pop
sbb
hlt
ja
sub
xchg
int
movsb
movsl
adcl
pop
insl
adc
xchg
add
mov
push
jns
imul
rorl
in
dec
sbb
repnz
jmp
cmpsb
jb
clc
lret
pop
repnz
cltd
in
lods
insb
add
insb
mov
fldenv
std
out
fs
dec
insl
int3
jns
lcall
rol
pop
mov
aad
adc
push
xchg
and
lahf
roll
mov
pop
mov
push
and
scas
loope
jbe
mov
add
xor
push
jns
ret
push
inc
jae
stos
in
daa
or
ds
dec
aaa
xchg
mov
cmpsb
hlt
pop
movsl
mov
inc
sti
mov
into
adc
ja
push
adc
cli
or
imulb
imul
lret
sbb
cmp
ficompl
xchg
pop
cmpb
fwait
inc
fisubs
icebp
mov
xor
and
mov
sub
popf
xorl
imul
xlat
out
xchg
mov
ljmp
fwait
mov
dec
nop
js
adc
mov
loop
pusha
mov
lret
cli
stc
shlb
mov
jmp
cmp
mov
stos
jp
push
lods
xlat
cwtl
dec
icebp
push
push
cwtl
xorl
fstl
push
mov
js
xor
rcrl
aad
mov
in
push
add
jns
scas
sbb
dec
xchg
jmp
jecxz
sub
in
mov
dec
clc
lahf
mov
fwait
and
mov
loopne
in
adc
lret
push
inc
add
jge
lock
test
pop
xlat
cld
lea
push
fidivl
dec
jns
vorpd
lcall
cli
push
rcrl
xor
mov
addr16
icebp
pop
cmp
loop
enter
ss
cmp
sbb
movl
xchg
jg
ja
lret
cli
cmp
xchg
sahf
push
inc
jp
cmp
inc
outsb
mov
inc
xchg
iret
divb
mov
int
cltd
inc
sub
loope
ret
mov
sbb
pop
ljmp
mov
pop
lret
jo
jle
dec
lods
or
std
jg
push
sub
cmp
push
in
mov
mov
xchg
push
sbb
cli
mov
add
and
mov
xchg
adc
mov
and
mov
out
cmp
ljmp
cmpl
push
out
lahf
or
loopne
int
jbe
std
push
sbb
mov
pop
sub
adc
xchg
test
push
jp
clc
ret
int
icebp
cs
mov
dec
into
sbb
xchg
sbb
icebp
out
ret
int3
mov
jmp
mov
dec
scas
rorb
test
xchg
dec
and
xchg
cmc
jbe
das
mov
adc
pusha
imul
orl
stos
rolb
or
xor
jne
push
or
bound
in
jg
xlat
pop
fs
daa
int
add
push
add
dec
jle
cwtl
or
mov
sbb
iret
jo
sub
jo
out
fldl
pushf
xor
xchg
jge
leave
imul
jmp
int3
or
enter
pop
mov
lods
loop
pop
cmpsb
xchg
mov
mov
call
lock
push
bound
aaa
nop
mov
adc
jb
pusha
dec
mov
sahf
ret
mov
push
mov
fldl
idiv
inc
or
xor
int
stos
popf
das
movsb
jg
add
iret
push
xchg
aaa
into
push
loop
mov
ffree
lds
stos
aad
clc
ljmp
push
xchg
push
out
inc
pop
jns
lods
pop
nop
leave
push
test
pop
das
fisttpl
fcoms
addr16
mov
cmpsb
and
push
jle
push
inc
and
jg
mov
cld
dec
xor
mov
push
or
push
cmp
adc
xlat
cmp
mov
jo
adc
xor
mov
or
test
stos
inc
push
jo
xchg
jb
xor
mov
pop
ret
popa
dec
fdivrs
sahf
push
notl
ds
mov
and
ret
xor
aad
es
mov
cmpsl
scas
dec
fstpl
fmul
mov
sbb
lahf
mov
data16
mov
shll
pushf
pushf
lods
sub
jecxz
dec
jmp
mov
mov
cs
pop
sbb
paddusb
dec
cwtl
subl
test
pop
ficompl
mov
outsb
add
and
push
lea
test
repnz
add
sub
sbb
aas
mov
popf
je
pop
jo
and
adcb
jns
mov
stos
mov
mov
pop
and
fidivrl
aam
mov
pop
or
push
movsb
mov
sti
addb
pop
or
cmp
mov
mov
gs
ret
add
test
mov
idivl
cmc
lods
outsb
add
and
adc
out
scas
cmpsl
shlb
fnstenv
popa
add
enter
bound
pop
pop
xor
jb
stc
jge
sub
mov
out
enter
xor
lcall
cwtl
lret
mov
mov
push
jl
jo
leave
in
jmp
adc
ret
mov
inc
loop
das
mov
sbb
insl
out
fidivrs
shll
mov
cmpl
pop
and
jg
add
rcrl
push
sub
sbb
cmp
mov
mov
adc
and
imul
xor
dec
add
and
ret
mov
push
fmul
cmp
dec
sbb
ficoml
lock
leave
sbbl
mov
pop
lret
mov
push
add
in
cmpsl
push
stos
mov
bound
mov
push
in
xchg
pop
jl
test
add
jne
xchg
fdivrl
push
mov
xor
dec
fwait
stos
jle
rcll
xchg
in
daa
das
rcl
xor
scas
dec
in
push
sbbb
mov
mov
pop
jle
pop
push
jl
mov
adc
fdivs
sub
cltd
and
mov
pushf
pop
bound
cmp
fwait
dec
daa
sbb
adc
loop
nop
pop
push
lock
test
fldt
mov
add
pushf
jno
pop
mov
sub
mov
popa
ja
lahf
ss
insl
mov
pop
cmp
rorb
je
stos
mov
jle
andb
loop
ss
outsl
int
jno
aaa
jl
add
dec
rep
pop
adc
mov
out
outsb
scas
mov
pop
das
cmp
movsb
ja
out
call
adcb
in
xor
cltd
test
mov
xor
pop
data16
imul
cwtl
icebp
int3
outsb
popf
inc
cmp
std
popa
mov
psllq
fwait
mov
outsl
xchg
and
xchg
mov
iret
mov
xchg
ds
cld
xchg
int
sub
ficompl
xchg
cmp
inc
movsb
push
int
ds
outsl
adc
adc
jbe
jmp
xchg
pop
push
clc
xchg
pop
mov
clc
arpl
lret
add
bound
stos
dec
mov
testb
in
out
ljmp
xor
xor
mov
fbstp
xor
inc
ret
insb
stos
jae
xor
stc
imul
jb
push
bound
jno
lcall
into
out
mov
mul
lar
scas
std
mov
into
rep
bound
pop
add
mov
jecxz
or
xchg
fildll
mov
add
sbb
inc
push
cmp
clc
cld
test
mov
and
xchg
and
jbe
cmp
xchg
jl
loop
xchg
xor
test
cmp
insb
mov
js
std
pop
imul
jecxz
sbb
test
dec
xchg
jmp
and
mov
je
arpl
mov
xchg
fwait
pusha
sbb
push
add
mov
roll
shrb
dec
xor
sti
xchg
pop
push
aas
shll
adc
mov
int
xchg
push
das
inc
out
in
push
div
scas
hlt
push
lods
xor
lds
stos
adc
jae
gs
les
push
jns
rcrb
pop
notb
into
mov
std
mov
pusha
sub
fsubs
insl
nop
inc
xor
push
inc
stos
cmc
add
mov
mov
std
sbb
push
or
xorb
inc
mov
jnp
jl
outsl
dec
ret
adc
inc
sub
fsubs
js
xchg
shl
add
outsb
aad
lods
jp
or
imul
push
cmp
stos
mov
outsb
rol
inc
loop
sbb
inc
inc
inc
mov
stos
push
repz
test
addr16
adc
rorb
movsl
scas
xor
push
pop
jb
dec
rcr
sahf
push
fwait
and
fnstsw
ja
and
mov
imul
inc
push
jne
ss
jb
adc
push
push
dec
adc
add
push
adc
push
outsb
push
fldcw
in
xor
adc
scas
adc
pusha
cmpsb
pop
aas
sbb
sar
push
scas
je
das
jg
test
push
mov
jmp
out
inc
adc
dec
jno
pushf
fmul
mov
pusha
xor
arpl
in
push
xor
stc
mov
xchg
mov
or
pop
shll
jb
jb
fstps
lea
pop
mov
jo
enter
lds
or
cli
insl
inc
pop
aam
pop
arpl
mov
push
xchg
scas
lahf
inc
subb
pop
mov
dec
not
sub
ret
push
ljmp
mov
mov
sbb
jae
add
cmp
imul
mov
pop
insl
adc
pop
subl
dec
divl
adc
xor
push
loopne
mov
fwait
sub
popa
dec
pop
lods
inc
aad
lcall
adc
mov
es
pushf
lds
cmpsb
sbb
out
and
cmpsl
add
addr16
test
mov
inc
imul
test
mov
xchg
fcompl
mov
stos
int
and
push
lods
pop
push
call
jp
mov
test
vmwrite
adc
add
punpckldq
mov
add
stc
sbb
pop
add
rcll
ja
aad
stos
std
pop
test
adc
fcmovnbe
scas
mov
in
and
mov
jmp
mov
mov
jbe
jbe
outsb
cmp
cli
push
mov
hlt
sti
stos
dec
shll
mov
in
arpl
ljmp
pop
add
cmpsb
lods
testb
dec
ljmp
dec
sub
sarl
mov
insl
lds
into
xor
xchg
stos
jp
push
dec
mov
insb
mov
fs
movsb
stos
gs
cmp
mov
out
call
mov
aas
ja
leave
pop
mov
and
mov
dec
scas
inc
lcall
insl
in
gs
out
fisubrl
sbb
outsl
rol
fcmovnu
insl
and
stos
sbb
sub
mov
dec
int
ljmp
push
lahf
pop
loope
arpl
mov
xor
popf
into
dec
scas
inc
pop
filds
int3
sbb
sbb
fwait
jmp
mov
add
pop
iret
xchg
mov
aas
lret
lea
iret
push
pop
mov
ja
jno
xchg
dec
aad
cli
or
jno
shrb
sub
xchg
xchg
push
push
cmp
lock
push
xor
adc
fcoms
and
push
scas
arpl
xorb
std
or
lcall
mov
fcmove
jns
out
loopne
fsubr
fwait
je
xor
adc
dec
xor
jp
xor
in
push
push
popa
cs
jno
sub
cs
jb
std
rclb
dec
outsl
scas
ret
ds
mov
sub
ret
loopne
and
stos
mov
xchg
fcompl
andl
mov
cmp
sbb
movsb
mov
movsb
es
daa
cmp
push
pop
jo
sub
insl
adc
and
mov
nop
dec
xchg
mov
inc
adcl
mov
fsubs
pop
pop
fstpl
pop
aad
les
aaa
sub
enter
scas
jnp
adc
lea
ss
dec
mov
pop
jb
imul
inc
mov
adc
lahf
jp
cmp
popf
add
mov
movsl
and
mov
icebp
cmp
adc
ds
cmp
out
jne
lods
add
mov
push
xor
popa
cwtl
cltd
repnz
push
push
outsb
mov
mov
es
mov
ds
push
loopne
and
inc
addr16
xchg
push
and
scas
orl
mov
mov
mov
loopne
es
outsl
out
icebp
push
icebp
out
loope
mov
clc
loope
test
inc
sub
test
jns
pop
aam
cmpl
daa
shr
sbb
cmp
sahf
test
cmp
cmp
mov
aas
stos
push
ljmp
fildll
pop
shlb
aam
out
and
lret
mov
xlat
addr16
or
mov
lahf
les
sub
ficompl
xchg
test
jb
gs
es
cmp
sub
mov
add
push
stc
shlb
test
jle
inc
dec
in
push
mov
mov
sub
mov
fcomi
or
add
xchg
mov
imul
cltd
cltd
push
mov
xor
push
inc
out
lcall
std
mov
aam
dec
ljmp
mov
mov
jnp
leave
xor
jb
in
xor
sub
jo
lret
mov
xlat
adc
pusha
daa
dec
dec
ret
sbb
or
shll
loopne
mov
sub
fcoml
push
fnsave
cld
ds
and
out
xor
outsb
mov
nop
xchg
in
mov
and
aaa
inc
push
push
and
push
add
mov
imull
ljmp
je
cltd
in
adc
outsl
clc
out
pop
push
arpl
push
lods
les
jnp
lea
outsl
cmpsl
inc
inc
pop
lahf
cmp
mov
loop
xor
mov
sbbl
daa
lahf
or
shr
jb
std
mov
dec
cmp
jbe
cld
dec
outsl
cmp
and
popa
addl
pop
xchg
cmpsl
or
dec
cwtl
fstps
jp
add
jl
lods
push
xchg
xor
fsubrs
jae
xlat
mov
stos
or
in
stos
rcrb
faddl
outsb
cmpsl
imul
push
xchg
mov
scas
push
pop
push
out
inc
fsts
dec
xchg
dec
cmpsb
xor
jns
lahf
test
subb
fnsave
push
test
push
sub
out
std
adc
cwtl
mov
in
gs
push
mov
scas
pop
js
cs
cmc
test
iret
mov
testl
xor
inc
jecxz
inc
xchg
mov
loope
cmp
cmp
push
or
scas
xchg
stc
inc
mov
ja
cli
add
fldt
sbb
into
sbb
or
jmp
dec
enter
jge
dec
inc
pop
add
and
or
fs
mov
pop
push
enter
dec
sbb
aas
fbld
in
rorl
jge
into
sarb
lret
adc
cmp
xchg
adc
mov
and
pop
mov
jb
dec
leave
jl
clc
xor
ja
adc
cltd
sub
mul
mov
push
sub
sbb
xor
mov
jl
mov
xchg
lods
or
or
ret
daa
dec
and
or
fildl
movsb
lock
inc
xchg
mov
add
scas
cli
inc
push
sbb
dec
jnp
out
dec
sbb
je
outsl
inc
insl
cmp
sub
xchg
into
cmpl
or
fistpll
fimuls
shlb
mov
popf
dec
xor
lea
orb
cmp
sarb
cld
mov
xchg
sub
pushf
addr16
bound
adc
movsl
rdtsc
sbb
mov
and
xchg
sub
mov
aad
mov
repz
inc
addl
addr16
dec
lods
mov
dec
jge
les
cwtl
mov
jl
lahf
adc
in
std
xchg
or
lret
inc
mov
call
adc
mov
subb
push
mov
scas
or
dec
xor
cmp
arpl
mov
ljmp
adc
test
cli
xor
mov
aam
cmp
sarb
test
mov
aaa
mov
pop
daa
xor
lds
call
movsl
enter
or
xor
movsb
fwait
inc
lock
ja
dec
sbb
cs
imull
aad
into
dec
idivl
xor
pop
rol
fnstcw
cmp
pushf
and
mov
jmp
sbb
icebp
jb
dec
ret
out
sub
addr16
sbb
addr16
sub
addr16
mov
cltd
sub
aas
stc
leave
mov
dec
pushf
outsb
or
dec
leave
add
xchg
movsb
out
add
jl
adcb
cmp
cmc
and
shlb
dec
std
hlt
mov
mov
dec
adc
pushf
adc
sub
stc
xor
mov
popa
pusha
cmp
faddp
or
in
mov
cmp
loopne
cmp
mov
sbb
add
fidivrs
adc
nop
sbb
push
xchg
mov
xchg
inc
out
mov
shll
cmp
ljmp
iret
jae
or
ja
cmpsb
cmc
hlt
ljmp
sub
notl
mov
ficoms
xlat
stc
shll
lods
ss
imull
dec
jl
cmc
int3
sbb
lock
lcall
add
dec
sbb
xchg
mov
test
psubsw
and
pop
pop
pop
je
and
mov
shrl
lcall
test
cmp
iret
add
xchg
mov
sub
add
fsubl
pushf
or
cmc
aad
unpckhps
mov
xor
mov
sub
mov
adc
cmp
xchg
pop
pop
push
pop
insl
lods
fnstcw
stos
adc
dec
jge
fs
sahf
inc
jbe
inc
hlt
jp
push
std
jp
xchg
cmp
and
adc
aad
xchg
es
pop
xlat
pushl
es
push
lds
ret
into
adcb
lcall
call
in
shl
mov
mov
mov
dec
aam
je
xlat
mov
cmpb
ds
xchg
in
out
and
and
mov
inc
hlt
sbb
jno
repz
mov
mov
std
adc
dec
push
sbb
std
xlat
pop
pop
cmpsl
inc
out
leave
dec
cmc
enter
hlt
lods
adc
dec
stc
inc
or
insb
lcall
inc
lods
bound
adc
inc
jb
lcall
xchg
push
test
cmpb
jp
adc
movsb
arpl
sbb
fadd
or
cmp
lahf
xchg
and
adc
lahf
sub
shrl
scas
pop
sub
hlt
and
mov
movsb
cltd
and
lods
jecxz
xchg
cmp
rorl
pushf
pop
imull
dec
or
mov
ds
sbb
ficoms
and
pop
mov
xor
inc
xchg
mov
cmp
scas
lret
scas
adc
lret
mov
pop
mov
aam
lret
pop
mov
leave
cmp
pop
sbb
movsl
sub
js
xchg
jae
cmc
jge
call
rorl
movsb
adcl
fldcw
outsb
push
xor
xchg
cmp
fidivl
jbe
fldcw
sbb
movsb
mov
push
cmp
push
lds
js
icebp
cwtl
fwait
int3
mov
int3
xchg
sub
je
rcll
inc
bound
cld
sbb
addr16
jge,pt
out
pusha
sub
pushf
out
and
rolb
sub
jb
xor
adc
cs
lods
pushf
rcrl
aad
pop
mov
test
jg
push
jnp
loopne
dec
mov
jb
add
dec
cltd
xchg
ficomps
ret
outsb
push
cmpsb
mov
jbe
insl
fsub
rcll
sbb
jns
push
xchg
cltd
loope
push
leave
pushf
push
lods
scas
or
popa
clc
scas
shll
mov
or
push
nop
movsl
sbb
dec
jnp
addr16
adc
mov
xor
into
pop
sub
and
outsl
dec
jecxz
fiadds
loopne
cmpsl
jl
pop
movsb
adc
jp
std
mov
out
xlat
and
mov
adc
mov
xchg
inc
xchg
mov
xchg
mov
lods
pushf
test
fs
stc
sbb
jnp
mov
mov
mov
fiaddl
test
jp
jnp
jmp
or
sarb
push
mov
pusha
xchg
sbb
pop
movb
or
mov
cmpsl
out
in
cmp
aad
push
jae
jns
in
adc
jg
sub
and
sbb
push
in
xlat
ljmp
rorl
and
cmp
xchg
bound
sbb
loopne
adc
adc
ret
and
cmp
dec
adc
xchg
xchg
mov
inc
xchg
and
sbb
mov
insb
push
cmpl
dec
add
fdivrl
xchg
cld
insb
out
roll
shrl
ficomps
push
imul
xchg
add
in
mov
fdivrl
mov
jne
popa
mov
jle
xor
sti
outsb
push
add
push
push
cmp
add
cmpsl
adc
mov
adc
dec
jae
loope
out
dec
cmp
cmpl
adc
adc
in
push
repz
lds
jns
or
dec
push
movsl
lods
lcall
iret
lods
scas
test
addr16
jecxz
mov
mov
jmp
xchg
arpl
push
out
leave
hlt
incl
cmp
into
sub
and
imul
dec
out
rcrl
lock
jnp
imul
or
mov
cmp
mov
cmp
sbb
aad
pop
into
jmp
xlat
xchg
or
jns
out
cs
lea
gs
mov
jne
dec
flds
js
arpl
data16
add
cmp
pushf
mov
push
cmp
sbb
xchg
notb
mov
xchg
ret
add
dec
mov
adc
mov
stc
xor
xchg
ja
inc
sub
aam
lods
adc
jno
mov
fbld
pusha
xor
sub
push
lahf
xchg
fisttps
lea
dec
pusha
mulb
negb
lds
call
xor
fwait
sub
cli
shlb
clc
cmp
popl
or
jp
push
aad
pop
repz
sbb
mov
test
lock
pop
sub
and
stos
xchg
jg
jo
cli
push
add
push
jl
fmull
cs
and
nop
add
jge
rcll
dec
mov
pop
mov
ficompl
cmp
jae
pop
pop
ret
stc
pop
xchg
out
pop
mov
adc
xchg
daa
add
xor
repnz
add
add
mov
xor
aas
ss
jmp
fistpll
lret
fdivs
jns
jnp
push
fcoms
adc
adc
loop
in
mov
sahf
pop
cmp
psubusw
xor
jmp
sbb
cld
hlt
jge
rcrl
mov
lea
mov
shl
mov
dec
push
andb
jl
inc
sbb
loope
test
add
xor
xchg
add
push
lcall
testb
cmp
fstpl
in
mov
sub
adc
mov
dec
test
aad
xchg
xlat
in
inc
xchg
inc
dec
adc
test
inc
xchg
mov
mov
cmpsb
je
xchg
repz
lret
idivb
mov
push
cmp
mov
out
sub
jge
idiv
sbb
or
mov
push
mov
fistl
xcrypt-ofb
cmpsl
test
jge
lahf
lcall
dec
dec
jge
cmp
mov
sub
notl
dec
daa
and
jae
mov
scas
add
sti
cs
inc
ret
dec
mov
repz
adc
dec
inc
add
je
and
push
cmp
stos
sub
aas
add
and
stos
div
inc
jl
mov
ja
data16
or
out
add
cmp
aam
je
xchg
ffree
mov
out
jnp
push
and
push
lret
jnp
pop
dec
pushf
jne
push
lock
enter
mov
test
sbb
push
shl
sbb
bound
inc
mov
sbb
popa
dec
and
xor
adc
xchg
lds
hlt
dec
pushf
mov
ss
adc
movaps
or
xor
lods
in
imul
mov
inc
and
frstor
in
push
lahf
mov
inc
cmp
sahf
iret
jle
xchg
std
loopne
sub
movsl
mov
fs
cli
mov
lcall
and
sar
xor
std
std
ss
mov
or
pop
or
sbb
sub
shll
ss
enter
pop
push
and
sahf
in
mov
lods
pop
in
cwtl
stos
or
out
cmc
inc
mov
ret
incb
push
aas
imul
dec
pop
xchg
sbb
sti
add
pop
outsl
cli
cmp
pop
xchg
stos
mov
mov
push
out
daa
outsl
lea
filds
xchg
cmp
mov
or
jnp
scas
mov
fldl
insl
mov
data16
test
dec
insl
sbb
dec
loope
in
and
and
dec
fstl
inc
fstp
outsb
sbb
icebp
mov
sub
jno
loop
xor
sahf
call
xchg
popa
sub
and
and
addb
call
test
inc
mov
js
jmp
loopne
and
add
ljmp
jns
or
mov
test
jg
jae
add
push
out
loop
xor
loopne
dec
mov
cmp
fwait
mov
or
sti
insl
xchg
fsubrs
lahf
dec
jne
int3
dec
rcrl
inc
sti
push
das
jecxz
jns
aam
xlat
mov
xor
sbb
mov
enter
in
ret
test
cmp
inc
lahf
mov
push
add
cli
and
aas
imul
ficompl
sub
loope
nop
mov
sbb
stc
or
fs
mov
mov
cmp
jl
cmpsl
imul
fs
clc
inc
repnz
mov
lods
inc
in
pop
push
ljmp
in
jl
push
imul
cmpsb
push
or
rorl
popa
pop
ret
in
daa
lahf
ret
jecxz
xchg
mov
ja
int3
xor
cmp
adc
xor
xlat
fsts
das
jo
pop
xchg
aaa
add
in
loop
pop
cmp
pop
push
clc
or
cltd
cli
dec
cmp
ds
rcll
addr16
jb
andl
xor
mov
push
orl
fcoml
mov
mov
lcall
jmp
inc
or
xor
xchg
popf
sbb
loopne
not
jg
push
fwait
sub
je
pop
jo
xchg
sbb
popf
rcrb
pop
or
setp
int3
push
mov
inc
sti
stc
out
cmp
push
push
pop
xchg
xor
mov
mov
push
sub
xchg
jle
dec
in
mov
xchg
popa
sbb
xchg
mov
jg
mov
in
ret
popa
je
mov
cmc
push
js
or
xchg
pop
mov
push
pop
push
mov
ror
sbb
ljmp
jecxz
lods
add
orl
int3
add
es
lcall
test
icebp
or
push
ret
mov
jmp
pop
decb
push
jge
fsubp
mov
dec
leave
mov
pop
stos
loopne
pop
ljmp
lret
cmp
adc
jg
push
mov
mov
sbb
fistps
ljmp
jnp
sub
sub
fcompl
push
bound
outsl
in
fucomp
mov
lcall
inc
sbb
jp
mov
dec
or
dec
mov
or
mov
or
fldt
scas
call
lods
xchg
aad
stc
and
rorl
fucomi
mov
cmp
pop
mov
cli
js
loopne
add
mov
jo
jne
lret
mov
adc
bound
inc
mov
insb
and
das
push
cmp
push
push
test
mov
adc
xchg
das
sbb
push
mov
fsts
into
cmp
sub
in
clc
sub
dec
jns
fdivrs
ficompl
inc
int
lret
inc
lahf
mov
aas
sbb
repz
outsl
nop
cmp
out
sub
nop
mov
in
cmpsb
jmp
sbb
pop
lods
leave
xchg
mov
jmp
dec
mov
shrl
push
fucom
xchg
stos
mov
jne
lret
jo
sbb
pushf
stc
mov
test
jns
push
je
adc
outsb
adc
fisubrs
rorl
sbb
les
stos
pushf
fistpll
cld
stc
sbb
rcrl
rclb
cmc
call
sbb
inc
aas
pop
mov
cmp
inc
jecxz
pop
jbe
and
add
out
sub
and
in
inc
mov
inc
cmp
inc
daa
fwait
lods
outsl
scas
mov
and
fwait
xor
sbb
subl
ret
mov
sub
push
scas
jne
call
mov
adc
pop
sbb
cli
push
int
xor
mov
pop
mov
add
stos
and
call
dec
es
jo
cmpsl
cli
fwait
test
jae
cmpsb
stc
jmp
out
or
xchg
sahf
sbb
inc
jecxz
lds
or
mov
push
in
and
stc
rcr
mov
daa
mov
ficoml
dec
sub
dec
pusha
loopne
mov
adc
loop
nop
add
adc
aad
in
subb
sub
xchg
adc
sbb
mov
mov
mov
out
and
sub
hlt
push
sub
fsubrp
push
aam
fdiv
sub
mov
insb
aas
hlt
cmp
inc
sub
shrb
rorl
sbb
mov
rorb
aad
xor
imul
in
loopne
call
jmp
xchg
sub
movb
and
jle
mov
and
lock
sub
imul
or
or
insl
sub
push
mov
adc
mov
mov
not
ljmp
fcomip
pop
xlat
mov
dec
fistps
imull
out
sti
test
mov
clc
sub
sub
imul
loope
bts
jl
imul
cmp
add
sti
add
jmp
sbb
movsb
mov
test
iret
mov
nop
jl
popa
stos
xor
repnz
bndstx
mov
cmpb
and
pop
sbb
faddl
sahf
iret
enter
jne
clc
sub
fsubl
fldcw
decb
mov
jp
jno
or
imul
push
pusha
jp
shll
mov
sub
inc
and
cmp
mov
cld
mov
sbb
dec
or
popf
xor
fldl
js
push
std
pop
adc
push
call
fildll
pop
mov
jge
lea
jmp
add
sbbl
mov
in
add
cmp
mov
push
cs
mov
jle
out
sub
jbe
xchg
fwait
loop
jns
mov
jo
jge
mov
test
pushf
inc
ja
mov
mov
dec
cmpsb
mov
add
or
xor
or
jns
push
in
or
mov
pop
outsb
push
pop
inc
js
insb
mov
mov
clc
cmp
js
fmuls
dec
mov
xor
ljmp
mov
enter
xchg
vunpckhpd
dec
push
sub
jae
outsl
mov
and
mov
and
and
test
dec
jno
adc
xlat
imul
and
sub
or
inc
stc
lret
mov
loopne
xor
rcl
fsubp
std
lds
adc
fisubrl
push
inc
in
sub
mov
fcompl
in
stos
add
inc
xlat
sbb
enter
dec
cld
adc
std
daa
dec
lock
mov
outsb
inc
mov
out
in
inc
pop
insb
xchg
cmp
js
mov
adc
cmpsl
push
inc
or
adc
enter
lock
sub
jmp
fwait
lret
jne
push
jl
faddl
out
pop
xorb
inc
in
push
int3
fwait
jl
sub
jmp
inc
aam
inc
push
pop
lds
fs
faddp
mov
mov
mov
test
bound
or
into
pop
lret
or
inc
popf
iret
pop
and
je
data16
in
test
inc
push
pop
adc
into
stc
mov
adc
and
pop
cltd
jecxz
movsb
js
sbb
mov
xor
fstl
lock
mov
cmc
aam
or
ss
bound
adcl
or
in
div
imull
fs
mov
mov
in
mov
push
and
or
mov
push
sub
and
ja
pop
inc
adc
nop
movsl
mov
xor
xchg
insb
adc
pushf
popf
imul
pop
insl
dec
in
mov
push
lcall
std
add
out
jle
stos
mov
inc
aaa
and
adc
lahf
rcrl
lcall
xlat
int
popf
dec
imull
xchg
lods
icebp
dec
outsb
das
sub
lcall
sbb
fwait
ret
movsb
stos
imul
out
pop
lods
xor
jo
and
or
insl
rol
mov
data16
xorl
mov
and
jns
jp
push
loopne
popa
xchg
stc
pop
xchg
push
adc
sub
or
imul
stos
push
test
xchg
mov
lret
or
aad
iret
popf
arpl
lahf
dec
pop
adc
mov
aaa
popf
mov
add
jg
movsl
hlt
stos
std
icebp
dec
sbb
sub
cwtl
and
jb
xor
adc
xchg
rcrl
cmp
test
xor
loope
repnz
pop
mov
fistl
inc
jl
sub
or
dec
icebp
lahf
xlat
xor
jo
xchg
rep
mov
fldenv
or
or
add
rorb
add
insb
sti
arpl
enter
aam
rcl
xor
dec
lock
jns
xchg
std
xchg
xchg
mov
cwtl
lcall
sar
imul
pop
mov
orb
test
pop
divb
mov
stos
rcrb
jmp
and
push
mov
dec
mov
fstl
inc
int
out
incb
pop
leave
mov
stc
xor
sbb
cltd
mov
pop
mov
pushf
imul
jge
addr16
xchg
fstpl
mov
mov
inc
jge
mov
orb
mov
cs
adc
xor
sti
in
ja
push
test
loopnew
dec
inc
jecxz
rcr
decl
jl
mov
mov
push
insl
mov
nop
sub
xor
push
fs
or
mov
movsb
push
dec
and
mov
sahf
cltd
mov
pushf
rcl
cmp
and
inc
mov
scas
and
arpl
fisttpll
int3
cmpsl
fs
hlt
int
dec
in
mov
lret
out
mov
add
adc
jmp
leave
call
roll
imul
add
xchg
adc
xor
stos
mov
inc
push
ss
xor
es
jmp
inc
add
lret
imul
xorb
mov
dec
bnd
movsb
mov
aas
or
xchg
mov
movsl
lds
in
rclb
popf
cmp
lcall
jle
xlat
xor
xchg
xor
xchg
or
out
inc
stos
pop
sub
aas
ds
adc
movsl
fldl
fucom
xchg
lds
push
xor
lret
mov
popf
daa
and
mov
das
lahf
jns
cmp
and
or
jle
cmp
loop
stos
movsb
sub
int3
inc
lahf
outsl
sbbb
adc
xor
jmp
fisttpl
leave
imul
jmp
movsb
and
and
fisubrl
adc
cmpsb
inc
loopne
addr16
pop
xchg
dec
bound
rclb
outsl
push
push
bound
test
add
pop
pop
xchg
pop
mov
cld
xchg
lret
push
sub
dec
popf
pop
xchg
incb
daa
push
xchg
adc
jbe
cli
mov
cmp
push
movsb
enter
mov
cmp
push
adc
js
jno
fimuls
scas
scas
push
lret
jl
aad
mov
xor
pop
cld
out
xchg
test
movsl
push
test
gs
aas
scas
call
rcll
cmpsb
mov
jnp
shl
movsl
idivl
mov
dec
outsb
jns
mov
or
popa
sbb
in
ret
das
mov
lret
fists
push
mov
repnz
add
inc
ljmp
xor
mov
pop
fwait
es
xor
repnz
add
dec
aam
int
repz
mov
incb
mov
adc
mov
out
add
xor
test
clc
ljmp
js
dec
ja
xor
lods
mov
stos
sub
mov
je
mov
movsb
stc
jp
adc
cmpsb
push
inc
cmp
es
jecxz
mov
push
stos
jl
aad
and
mov
jb
jle
mov
add
dec
mov
lret
je
insl
nop
mov
loope
cmpsb
scas
icebp
roll
pop
imul
fildl
out
xor
clc
aam
cmp
sbb
xor
subl
fwait
jbe
jns
int3
push
in
mov
loop
push
jl
scas
dec
clc
cmp
jmp
push
mov
inc
mov
rclb
adc
xchg
imul
lcall
aad
ffreep
push
ss
cmpsb
fdivs
sub
mov
into
push
sbb
clc
loopne
cltd
out
mov
mov
cmpl
or
je
inc
push
push
jo
lret
mov
or
pop
push
push
lock
adc
add
jo
imul
xchg
mov
mov
or
dec
adc
xlat
stos
cwtl
jge
fsub
shlb
jle
iret
add
pop
repz
mov
in
in
repnz
jnp
push
pop
lret
xchg
inc
mov
xchg
mov
add
fstpl
repnz
mov
verr
test
movl
fistps
pop
mov
scas
mov
outsl
mov
cmp
adc
sub
mov
add
mov
adc
lods
jl
mov
lret
mov
es
xchg
inc
mov
jne
insl
mov
out
aam
pushf
std
js
ret
mov
xchg
insl
add
stos
jl
jae
das
jmp
ss
sbbl
orl
aam
pop
call
push
sbb
lcall
mov
jle
inc
cmp
pop
mov
sbb
xlat
xchg
cmp
scas
shrl
in
cli
pop
adc
inc
jbe
loop
hlt
push
xchg
push
dec
xchg
mov
xchg
ret
pusha
dec
adc
aad
cmp
insl
mov
test
mov
rolb
inc
xchg
and
inc
adc
jbe
andl
or
push
jno
and
inc
jbe
aas
sub
mov
lret
adc
xor
xchg
test
lret
aaa
adc
lock
jmp
pusha
pop
fistpl
mov
sbb
add
and
daa
jg
fildl
inc
adc
push
sahf
fbld
pop
fcom
inc
sub
cmp
push
mov
jo
inc
push
pop
jmp
imul
inc
and
inc
divl
and
adc
cli
fnstcw
mov
jmp
fsubrl
push
int
loopne
addr16
jle
adc
xor
inc
pop
jecxz
loope
je
cld
lock
mov
lea
sahf
sbb
movsb
add
mov
adc
add
jb
dec
daa
inc
pusha
ds
in
cmp
ja
filds
inc
jg
mov
add
xor
pop
mov
sbbb
bound
inc
jp
mov
in
push
loopne
adc
xor
xchg
pop
mov
fstpl
in
mov
repnz
jns
popa
into
or
out
push
jbe
push
ss
add
adc
lcall
les
or
data16
add
mov
jmp
dec
decl
or
into
or
gs
lock
addr16
fdivrs
dec
xchg
xchg
mov
and
xor
cmp
mov
mov
push
cli
dec
push
mov
xchg
jo
adc
push
ljmp
jmp
clc
jge
int
sub
or
movsb
hlt
fadds
cld
xchg
sub
lcall
clc
nop
iret
push
add
sarl
sbb
pop
in
xchg
inc
data16
push
inc
and
rcr
in
dec
cli
imul
inc
push
das
mov
cmp
dec
inc
mov
mov
or
or
daa
insb
push
stos
mov
stos
or
rcrb
addr16
scas
mov
xchg
imull
mov
mov
and
xchg
sub
stos
cmc
scas
stc
scas
insl
jle
mov
shll
push
adc
lock
or
lea
cmpl
cmp
sub
int3
enter
mov
fcoms
loope
cmp
xchg
mov
xor
xchg
mov
jle
xchg
les
std
loop
sbb
mov
jl
dec
jmp
mov
mov
fnstenv
pop
push
das
sbb
std
cmc
mov
fcmovnb
lods
push
lods
xor
jecxz
adcb
pop
pushf
lods
icebp
push
sar
pop
inc
cmc
outsl
xor
xor
stos
push
mov
popf
insb
int
inc
iret
sub
push
loop,pt
adc
mov
ret
xor
aam
dec
ja
cmpsb
push
insl
jo
adc
aaa
test
push
fnstsw
pop
inc
ror
dec
stos
xchg
pop
arpl
xchg
dec
fucom
and
jbe
pop
data16
xor
das
inc
sub
in
xor
xor
push
lahf
rolb
hlt
push
xor
jle
dec
sbb
insl
stc
xchg
xchg
daa
rol
mov
inc
adc
dec
xchg
pop
ret
jb
xchg
daa
mov
ds
mov
les
lds
cltd
mov
pop
pop
and
dec
and
fwait
jge
int3
leave
je
push
sub
cltd
outsb
ss
or
add
test
cmp
pop
mov
sub
adc
adcl
adc
out
xchg
mov
dec
jmp
lcall
push
cmpsl
mov
jb
or
add
pushf
mov
dec
xchg
shll
xchg
sti
std
out
sbb
out
mov
out
and
pop
sub
fstp
outsl
xor
scas
std
and
dec
or
jmp
imul
cmp
outsl
or
in
push
or
mov
in
testl
sub
jl
es
int
movsb
aas
lea
pop
push
data16
pop
inc
inc
jb
mov
cmp
cmpsl
xchg
and
push
in
repnz
adc
repnz
inc
or
repz
test
mov
outsl
dec
mov
aas
jl
fnstsw
aas
test
loop
div
or
lret
mov
add
or
cmp
pop
adc
sub
or
test
sbb
cli
mov
push
adc
mov
inc
jbe
mov
jns
mov
movhps
push
mov
int
pop
cwtl
sti
popf
lods
test
enter
mov
push
aaa
mov
add
mov
andb
and
dec
hlt
out
xchg
scas
mov
rolb
into
xor
iret
xchg
dec
test
xchg
imull
cmpsb
and
mov
movsl
js
xlat
xchg
jae
push
movsl
cmp
ja
pushf
cmp
repz
push
xor
sbb
cmp
sub
test
mov
aam
insl
out
es
icebp
mov
mov
pop
loop
fstpl
in
push
or
outsl
mov
mov
cwtl
bound
pop
xchg
loope
and
jae
movb
add
test
scas
and
dec
ss
xor
aas
inc
mov
das
testb
jmp
adc
icebp
or
pop
adc
aad
lock
popa
mov
sub
push
inc
inc
xchg
pushaw
ja
leave
push
mov
pop
jae
mov
jae
lods
and
pop
sbb
jecxz
mov
xor
push
cwtl
xchg
mov
xrelease
sbb
or
int3
fsubp
arpl
in
push
adc
add
pop
lret
jae
in
mov
pop
and
push
icebp
pop
cmp
xchg
std
jae
pop
xchg
jg
cld
pop
jbe
sub
arpl
inc
sti
adc
hlt
out
cmp
insl
pop
mov
enter
jle
push
lea
xchg
fdivs
call
ja
mov
pop
dec
push
dec
xor
dec
lcall
jmp
mov
sbb
shrl
data16
add
and
leave
imul
push
push
xor
ljmp
push
mov
pop
hlt
xchg
fidivl
push
aad
pop
inc
push
mov
mov
xlat
ljmp
add
mov
gs
and
push
sbb
fnstsw
add
and
mov
je
ret
mov
cltd
out
outsl
popa
pop
xchg
sub
scas
shl
pop
xchg
adc
loop
push
lret
aam
and
fdivp
push
pop
dec
mov
mov
inc
jle
mov
sbb
lods
xchg
test
andl
inc
ljmp
test
loope
inc
and
xor
pop
repnz
sub
inc
mov
mov
cmp
cltd
vhsubps
das
push
dec
in
je
xchg
ret
pop
push
frstor
in
aas
mov
clc
hlt
mov
push
imul
fdivrl
lcall
adc
dec
int3
outsl
jmp
cmp
pop
inc
in
mov
dec
test
ficomps
out
fidivs
das
leave
push
mov
mov
mov
out
subl
add
scas
sbb
enter
mov
aam
sbb
jne
ret
and
push
es
inc
filds
loopne
mov
test
loopne
subb
sti
jp
adc
pop
jae
jge
insl
ss
pop
test
adc
outsb
mov
stos
imul
sbb
cmp
inc
sbb
shrb
icebp
lahf
out
pop
and
pop
jo
andl
fisubrl
dec
std
cmp
mov
les
lea
daa
sub
dec
pop
js
das
mov
fs
xor
jne
jnp
inc
inc
sbb
adc
inc
dec
or
mov
xlat
pop
adc
xor
into
loop
cld
inc
sti
movsl
push
mov
mov
loop
sbb
inc
orb
xor
dec
pop
jnp
add
imul
arpl
cmc
popf
dec
leave
xchg
jo
jae
mov
cli
pop
int3
dec
stc
mov
ret
mov
pop
dec
push
dec
sub
lods
loopne
inc
jne
cltd
jno
cs
cwtl
mov
ret
sub
cmp
std
das
pop
fsubl
imul
aaa
in
xchg
pushf
aas
cwtl
loopne
cltd
add
enter
ds
lret
adc
pop
subl
fwait
mov
pop
adc
and
test
into
test
shr
cmpsb
je
mov
push
call
pop
mov
sbb
xlat
pop
mov
mov
popa
or
cltd
movsl
lcall
xor
jle
sbbl
out
hlt
fnstsw
mov
or
xchg
sahf
mov
out
out
jns
and
add
lret
loopne
add
or
ja
hlt
add
xor
lock
lea
push
mov
movsl
imull
mov
dec
adc
lahf
pushf
gs
cli
repz
in
or
pop
fiaddl
add
sbb
rorl
mov
adc
xorl
repz
push
xor
into
sub
rcl
adc
jp
mov
mov
out
movsb
xchg
pop
js
lret
pop
xor
shlb
dec
sbb
cwtl
push
mov
mov
jle
gs
jae
dec
and
dec
das
jb,pt
or
out
pop
aaa
in
sbb
sbb
mov
push
subb
movsb
jge
sbb
and
nop
stos
mov
cmpsl
repz
or
test
stos
decl
movsl
sub
push
fs
daa
cmp
popf
xor
and
sbb
push
xor
add
inc
cmp
add
pop
sahf
fists
cmp
add
mov
mov
push
mov
jb
mov
pop
inc
insb
lcall
jecxz
xchg
iret
hlt
loop,pt
in
fs
cli
pushf
fdiv
mov
pop
mov
xor
clc
mov
sti
test
push
jle
cltd
fldt
mov
push
pusha
inc
ret
xor
cmp
in
add
cmp
push
mov
push
dec
flds
lds
sbb
xor
cmp
es
ret
iret
jge
pusha
test
rep
cld
ds
leave
cwtl
in
fidivs
and
aad
and
enter
cmp
pop
mov
jb
inc
xor
mov
js
testb
xchg
dec
adc
icebp
shrl
fsubl
shlb
jo
dec
sbb
add
cmpsb
adc
mov
sub
call
ret
jl
lcall
push
sbb
loope
orb
loopne
jl
add
pushf
inc
xchg
inc
cwtl
push
push
xorb
xchg
test
ret
sub
fistpll
test
add
in
test
loop
jecxz
push
lret
jnp
and
mov
mov
xchg
lock
cmp
inc
repz
jmp
arpl
inc
jo
aad
mov
and
ds
push
mov
and
adc
loope
xchg
add
adc
out
push
push
xchg
test
or
pushf
mov
mov
stos
insb
fldcw
mov
bound
push
xchg
repz
and
divb
andl
dec
gs
movsb
sub
lods
mov
iret
jnp
push
ss
adc
cmp
lods
shr
mov
call
jb
lret
scas
xchg
cltd
jae
sbb
outsb
jmp
lock
sbb
push
fisttpl
xlat
mull
ret
insl
hlt
inc
std
xor
cmpsl
add
push
mov
sub
outsl
push
and
jg
mov
mov
mov
and
mov
inc
mov
cmc
xchg
xchg
sti
sub
cmp
and
lahf
adc
out
sbb
insb
xor
aas
arpl
in
mov
mov
and
jg
and
pop
ret
push
loopne
loop
push
add
pop
adc
repnz
cmc
int
dec
pop
mov
xor
cmp
addl
lcall
jb
into
push
pop
cmp
pop
cltd
ljmp
sbb
inc
jns
push
out
and
lret
sbb
cmp
inc
sub
je
jbe
push
or
out
mov
mov
and
push
jno
pop
div
or
shrb
dec
xchg
gs
inc
adcb
ss
aad
jns
out
and
mov
inc
jbe
inc
pop
scas
inc
out
fidivrs
test
or
xor
daa
decl
pop
inc
repz
xchg
add
xor
ljmp
stc
int
nop
dec
mov
xchg
in
movsl
lods
and
xlat
or
jae
inc
cmpps
sub
pop
xchg
xor
bound
aam
pop
or
sarb
adc
addr16
sbb
aad
lods
jae
fldt
xor
cmp
jae
jecxz
mov
jle
mov
mov
hlt
inc
or
in
lock
xor
clc
add
shrb
mov
stos
inc
icebp
dec
jge
imul
pop
push
pop
mov
mov
outsl
test
jmp
jl
add
dec
adc
scas
loop
sbb
cmp
mov
mov
imul
jmp
rcrl
or
mov
lahf
test
incl
daa
cwtl
std
sbb
aam
mov
call
dec
push
aad
sbb
cmp
dec
adc
clc
sub
jle
xorl
int3
jecxz
mov
add
repz
icebp
push
cld
shlb
fwait
in
cmc
xchg
fstpt
popa
pop
sbb
shll
cld
out
cmp
movsl
in
cmpsb
addr16
jbe
cmp
xchg
fldl
lds
sarl
pop
cli
fwait
jmp
cmp
jbe
aaa
lods
cmc
jnp
iret
mov
scas
fldt
ds
adc
imul
xchg
inc
or
cs
and
dec
pop
shlb
aad
dec
aam
pop
pop
push
movl
pop
jne
sub
and
mov
jmp
push
mov
lods
mov
mov
push
mov
cmpsb
sub
pop
add
rclb
dec
add
push
push
inc
xchg
ret
push
fnstsw
dec
mov
imul
rorb
ret
add
jo
cmp
and
arpl
dec
add
das
aam
sub
or
imul
mov
pop
ds
add
subl
shll
dec
cmp
xor
nop
ret
and
inc
fucomp
inc
adc
pop
lret
mov
or
lahf
iret
sahf
xchg
insb
cmp
ret
jo
mov
int3
out
repnz
sbb
sbb
into
sub
xchg
je
sar
aaa
ds
es
rcrl
sub
and
cld
inc
addl
aad
mov
and
push
cltd
mov
xlat
push
jmp
pop
push
xchg
sub
jmp
xchg
mov
jne
sbb
mov
imul
jnp
sub
js
leave
xor
or
imul
vpcomub
jne
mul
pop
sahf
adc
and
cmp
mov
adc
mov
xorl
shll
jmp
mov
mov
and
stc
out
jg
push
push
jmp
addr16
das
jno
xor
mov
cmpl
ret
adc
shrb
pop
testb
adc
insl
fadd
xchg
and
rorl
dec
pop
in
out
mov
stos
scas
subl
jge
daa
mov
test
loopne
mov
or
sahf
push
imul
push
mov
add
xchg
test
fs
xchg
sbb
mov
pop
jbe
sti
push
cmpsl
pop
dec
xorb
jecxz
push
ss
ja
icebp
repz
mov
xchg
loopne
or
shlb
sub
xlat
xchg
pushf
adcb
xchg
aaa
push
leave
cmp
adc
shrl
pop
fnstenv
xor
xorl
push
xorb
mov
mov
xchg
insl
jne
bound
adc
aaa
mov
mov
lcall
mov
pop
fstpl
sbb
test
dec
dec
rcl
sbb
in
sbb
clc
sbb
fmull
mov
mull
xchg
lret
xor
adc
outsl
mov
fs
aam
add
jmp
xchg
push
sti
stos
dec
inc
mov
lcall
insb
lret
mov
insb
sub
adc
scas
xlat
xchg
and
xchg
mov
ret
pop
stos
into
ret
ret
dec
jns
nop
and
out
idivb
mov
je
push
popa
rolb
inc
adc
xchg
je
lock
outsb
aaa
xchg
xchg
mov
mov
testb
adc
outsb
mov
lock
call
icebp
add
add
xor
movsb
rolb
dec
repz
xchg
pop
xor
movsb
and
mov
movsl
ja
xor
icebp
movsl
push
jle
fsubp
cmp
sub
cmc
test
push
fdivrs
push
sub
int
loop
sub
mov
xchg
in
lea
push
fisubl
push
xchg
aam
int3
pop
mull
push
fwait
stc
in
int3
xorb
fs
shlb
cmp
jl
mov
imul
out
lods
jae
iret
icebp
inc
or
mov
or
test
and
jl
xchg
mov
or
jbe
push
inc
and
xor
jp
dec
pop
rorl
dec
ficoml
cmp
ret
fsubrl
ljmp
rcll
push
push
inc
aaa
loopne
add
mov
jno
ficoml
or
mov
in
add
leave
iret
jl
or
imul
pusha
and
push
imul
or
adc
mov
cltd
and
jns
clc
sbb
aad
sbb
into
mov
fld
movlps
xor
out
loopne
inc
mov
insb
out
jne
ficompl
mov
std
aas
mov
sub
rol
sbb
ss
inc
out
inc
aaa
out
hlt
dec
std
xchg
pushf
jo
dec
inc
mov
in
jo
lahf
pop
mov
scas
xor
loopne
in
cmp
enter
shufps
popa
cmp
dec
jb
and
mov
das
push
jns
adc
and
or
repz
in
pop
stos
lret
push
cmp
mov
stos
inc
push
sub
sar
roll
xor
jge
add
out
aam
xchg
insl
je
das
mov
movsl
or
aad
adc
mov
sbb
es
fsubs
mov
inc
jb
mov
sbbl
sbb
mov
imul
shrl
fldt
sub
int
ja
jl
stc
xchg
inc
sbb
mov
pop
adc
push
test
mov
jge
or
std
andb
mov
push
add
stos
or
and
in
clc
mov
inc
stos
cld
pop
push
mov
jns
pop
pop
xchg
cmp
ljmp
enter
bnd
inc
mov
pop
outsl
mov
pop
fstpt
jbe
lds
jmp
cmp
sbb
stos
jno
pop
xchg
push
mov
push
push
xlat
lahf
mov
cmp
shll
fndisi(8087
mov
add
mov
sti
inc
ret
call
mov
pop
out
add
pop
sbbl
fcmovnb
notl
out
xor
clc
push
xor
dec
pop
lret
xchg
or
xor
dec
or
jge
fidivrs
sbb
dec
mov
dec
mov
popa
dec
push
and
sub
xchg
dec
mov
cs
test
push
and
ficomps
xchg
or
into
mov
loop
adc
insb
out
and
ds
lret
movsb
leave
cmc
inc
xchg
cs
cmpsl
adc
adc
negb
sub
mov
inc
loope
loop
dec
outsb
pop
inc
lret
pop
roll
sti
sbb
mov
nop
and
clc
stos
cs
js
clc
adc
cmpsb
fdiv
cltd
or
es
add
mov
and
in
cwtl
sahf
hlt
shll
mov
ja
je
pop
movsl
sbb
test
mov
adc
mov
jmp
out
mov
int
cmp
sbb
mov
mov
cld
push
pop
and
push
inc
inc
leave
push
inc
sbb
dec
dec
sub
jno
pop
pop
or
xor
mov
or
mov
mov
jg
into
in
inc
sub
mov
mov
cmc
mov
mov
pop
sub
cmp
mov
add
lcall
andb
scas
jmp
xchg
cmp
fsub
sub
addr16
imul
popf
mov
fs
lcall
cltd
or
and
jns
in
fxch
ja
sahf
sub
repz
xchg
xor
sub
mov
push
lock
lods
add
push
bound
pop
xchg
repz
sarb
in
sub
repz
dec
jge
dec
fldcw
mov
jp
sarl
cmp
sbb
and
jecxz
inc
data16
jbe
lock
xchg
leave
mov
dec
or
xchg
fimull
xchg
mov
inc
ljmp
add
mov
movsl
dec
inc
loopne
add
or
jbe
lcall
clc
mov
mov
bswap
sarl
gs
dec
bound
insl
cmp
mov
sub
shr
cmpl
sti
push
cltd
xchg
out
pop
loope
movsb
leave
dec
loope
stos
ret
outsl
scas
ds
sbb
fldenv
adc
and
testl
mov
pop
out
loopne
imul
jle
loope
movsb
loop
adc
pop
cmp
scas
sbb
ret
test
sub
pop
bound
sti
dec
xor
push
test
ficomps
cltd
inc
jge
ja
and
jae
and
xchg
xchg
icebp
cmp
sub
sbb
fmuls
adc
inc
rorb
add
aam
fdiv
xor
sub
std
sbb
loop
imul
push
sub
call
mov
jb
mov
pusha
out
and
fdivrl
insb
shll
or
ficoml
cmp
xor
mov
sub
ds
push
into
outsl
dec
shlb
and
xlat
push
and
jecxz
mov
pop
daa
mov
and
mov
sub
sub
lcall
enter
cmc
mov
dec
repz
shl
outsl
adc
adcl
jle
cmp
repnz
push
and
scas
fldenv
popf
push
lret
movsb
mov
mov
shl
and
cli
cs
mov
callw
pop
inc
jb
lret
mov
aas
push
jbe
loop
mov
sub
and
sbb
sbb
lods
cmp
jmp
jae
out
orl
xlat
cmp
inc
shlb
test
add
jmp
mov
popf
adc
xchg
jge
inc
out
jne
adcb
out
xchg
jbe
xchg
in
sti
sbb
ret
adc
jp
xchg
jg
fs
sub
sbb
fiaddl
ss
xchg
xor
xor
and
cltd
mov
aad
dec
push
or
fists
in
xorb
mov
adc
jae
xchg
dec
insl
fdivl
sti
or
jg
arpl
sarl
mov
jl
out
push
int3
dec
out
add
cmp
imull
pop
in
dec
pop
mov
push
ds
sbb
mov
xor
adc
fbld
out
or
inc
popf
sbb
xor
push
mov
sbb
sbb
push
cmp
popa
js
sub
and
call
imul
loopne
xor
lods
cmp
jle
ret
test
repnz
in
pop
dec
cmp
mov
fldenv
es
jnp
mov
fmul
cmp
pop
mov
int3
mov
loopne
rclb
cmp
mov
xchg
stc
sahf
sub
negb
jmp
mov
lret
mov
js
dec
lahf
fldl
idivb
int3
mov
fwait
jnp
push
in
and
add
std
xor
and
ds
dec
repz
test
xor
std
pop
jne
mov
mov
cmpsb
jo
adc
repnz
mov
push
shr
mov
repnz
test
sti
inc
mov
add
cli
in
mov
enter
es
std
sbbb
add
cs
into
test
iret
in
or
imul
aam
inc
mov
pop
and
push
mov
mov
mov
add
ret
sti
sub
xorb
add
jmp
nop
ljmp
or
mov
xchg
out
and
js
mov
mov
notb
movsl
pop
addb
fucom
cmp
pop
rcrb
xchg
fdivrs
mov
and
pop
mov
mov
fldlg2
add
stos
sub
mov
mov
add
imul
inc
bound
aam
outsl
arpl
ret
adc
xchg
dec
push
pop
jge
iret
mov
push
scas
data16
cmp
push
out
loope
inc
fcoms
push
jecxz
cwtl
pop
jns
xchg
mov
mov
aam
je
cwtl
push
test
dec
es
sub
push
inc
into
mov
fwait
ret
daa
or
or
jo
mov
cs
movsb
aam
mov
sbb
repz
aaa
int
leave
xor
pop
aam
lahf
mov
rcrl
outsb
dec
faddp
je
cli
loopne
dec
cmpsb
xor
mov
icebp
adc
addb
and
jmp
mov
mov
out
in
lea
movsl
cmpb
lods
outsb
adc
movnti
into
inc
adc
push
cs
push
and
mov
pop
xchg
push
jmp
cmp
fsubrs
push
sbb
mov
xchg
cmpb
or
jl
aas
lcall
mov
push
adc
sub
mov
dec
pop
sbb
mov
add
inc
mull
imul
pop
test
gs
clc
add
data16
jecxz
and
sti
sbb
mov
adc
pop
rclb
mov
dec
pop
js
push
dec
ljmp
mov
popf
sbb
popa
mov
cld
jnp
mov
dec
sub
dec
jl
sub
lods
fmul
gs
dec
jne
add
in
subb
jb
sbb
mov
cmp
cmpsl
aas
fwait
pop
int
sub
fildl
pop
add
mov
dec
leave
sub
cld
movsl
inc
lahf
xchg
scas
daa
clc
inc
dec
out
pop
inc
jbe
add
cltd
inc
fs
imul
xchg
sub
cmp
dec
repnz
aam
adc
in
in
mov
out
jp
ss
sbb
add
js
jne
xchg
lret
mov
fbstp
sti
sahf
jmp
jmp
dec
lods
imul
jne
in
fildl
pop
mov
jb
pop
inc
add
addr16
and
icebp
pop
lret
aaa
or
and
ffreep
add
push
push
lods
call
lds
mov
aam
pop
pop
adcb
popf
add
lods
jecxz
mov
or
lods
stos
inc
push
and
and
gs
scas
mov
jg
movsb
sbb
sbb
dec
sub
cmp
or
mov
mov
sti
rcr
and
movsl
mov
std
lods
dec
xor
cmp
data16
clc
repnz
adc
mov
adc
sbb
bound
mov
test
xchg
xchg
repz
sub
scas
push
mov
cli
cmpsb
add
mov
push
enter
adc
or
cmpb
scas
cmpsl
movsb
jne
lret
xor
mov
bound
pop
fidivl
sub
ror
sub
ja
test
xchg
sub
movsb
popl
xchg
fwait
inc
ljmp
iret
and
push
sarl
lock
xchg
int3
mov
xchg
pushf
mov
add
mov
lods
icebp
call
pop
mov
push
inc
jmp
or
int
push
push
mov
cmpsl
dec
pop
pop
add
push
jae
xchg
ljmp
out
loopne
or
xor
iret
mov
das
jg
pop
ja
inc
pop
xchg
es
mov
rcr
cwtl
test
cltd
mov
adc
dec
imul
and
fists
test
orl
mov
daa
push
jg
push
pop
mov
sbb
js
sbb
xchg
lret
and
in
stos
inc
inc
xchg
push
adc
xlat
pop
jnp
or
or
ja
and
jae
fisttpl
or
ret
mov
dec
xor
dec
jnp
or
cmp
mov
jl
dec
fcompl
loopne
jae
movsb
cli
jmp
hlt
jno
cwtl
push
idivb
inc
insl
push
adcl
imulb
lods
cmp
int
fimull
xor
inc
dec
test
ljmp
test
jg
iret
test
mov
mov
mov
cwtl
repz
jmp
xor
movsl
push
xor
adc
jb
add
push
test
outsb
sbb
pop
les
jbe
shlb
jnp
mov
lret
jle
lahf
push
ljmp
and
add
jle
push
out
das
cli
sub
cmc
int3
xor
and
or
cmpl
ja
xor
adc
sti
in
scas
inc
push
pusha
push
sub
dec
xor
xlat
movsl
or
fs
clc
nop
jne
mov
rorl
add
out
das
sub
insl
jl
push
cmp
fistpl
fcmovb
mov
push
sub
ret
and
leave
leave
jp
jmp
jb
push
movaps
xlat
in
fsubl
dec
jae
imul
sbb
scas
sbb
inc
out
data16
xor
adc
pop
lods
inc
pop
cmp
filds
es
and
pusha
cs
je,pt
jne
adc
push
rcr
outsb
pop
xchg
push
and
rcrl
int
pop
xchg
out
or
hlt
xchg
xchg
sbb
mov
aas
mov
adc
inc
dec
jecxz
das
mov
cmpsb
sarl
mov
das
mov
call
mov
inc
xchg
jno
icebp
jp
ljmp
and
push
xor
dec
popl
popf
cwtl
jmp
inc
or
xchg
lret
push
adc
push
or
mov
and
shrb
lea
inc
scas
pusha
mov
hlt
xchg
shl
pop
je
and
sbbb
xchg
lds
pop
sbb
inc
sbb
mov
xorl
xor
lret
xchg
daa
jg
cwtl
inc
cmpb
in
push
pop
push
jne
subb
pop
data16
in
jge
stos
push
and
dec
shrb
or
mov
ret
or
stos
sub
mov
ror
push
xlat
loopne
scas
mov
adcb
sbb
imul
pop
xchg
inc
fcmovnb
push
jp
mov
outsl
cmp
fs
xorl
pushf
fstpt
ret
mov
pushf
push
cs
fcoml
and
adc
imulb
scas
push
push
xor
rep
push
sarb
lcall
dec
cli
dec
jl
push
pop
out
out
push
push
aad
addr16
cs
inc
pop
add
and
aad
sbb
and
sbb
movl
mov
fildl
cmpsl
or
daa
push
sub
mov
addr16
push
inc
xchg
ret
and
dec
push
rorb
mov
jae
mov
pop
jmp
sub
cwtl
in
and
jne
std
mov
inc
and
and
cltd
add
sarl
and
ss
aas
out
rorl
inc
mov
jb
lahf
fs
mov
insl
mov
addr16
ret
insb
push
mov
jbe
repnz
add
inc
jecxz
repnz
jle
or
or
cli
frstor
loop
dec
xor
int
outsb
rcl
mov
jmp
inc
mov
daa
das
pop
inc
aam
xchg
mov
jge
sub
nop
cmp
xor
ficoml
push
xchg
xchg
pop
dec
add
add
orl
arpl
les
bound
jno
loop
mov
cmp
xchg
mov
add
add
bswap
jns
pop
lds
insl
lret
adc
incl
push
push
pop
rcl
nop
dec
or
es
cmp
test
lods
lahf
rcl
cmpsl
outsb
scas
pop
or
or
imul
add
rorl
idivb
pop
ret
out
xchg
imul
adc
pop
pop
movb
adc
cmpsb
add
push
inc
push
dec
mov
sbb
rcll
or
mov
push
jno
ret
jns
dec
adc
test
mov
jle
push
bound
gs
lods
in
pop
jge
add
push
data16
into
pop
and
mov
mov
mov
test
and
push
cmpsw
mov
roll
push
lods
sbb
push
push
pop
inc
sti
or
testl
fmul
stos
adc
or
pop
cmp
pop
hlt
inc
dec
sbb
xchg
xchg
mov
mov
ljmp
jl
mov
lret
nop
aaa
jb
decb
dec
out
lea
iret
movl
mov
std
out
mov
and
xchg
push
add
out
pop
pop
mov
fwait
jp
xor
lds
mov
jg
test
push
shlb
mov
lret
and
inc
add
sub
xlat
push
pop
psraw
daa
cli
fcoml
cmpl
add
ss
fdivp
push
dec
xchg
lods
test
fisttps
add
adc
jle
push
adc
clc
lahf
test
sbb
insb
pushf
cmp
ret
cmp
out
jle
push
lea
test
or
pushf
imul
mov
inc
insb
xchg
inc
andl
and
leave
dec
lock
inc
dec
insl
push
cld
or
lods
inc
mov
imulb
loope
sub
or
push
cmp
idivb
repnz
xchg
mov
push
adc
pop
xchg
rcrl
mov
pop
cmpsl
data16
scas
loopne
xor
dec
adc
scas
pop
jecxz
cwtl
mov
sbb
dec
out
mov
addl
int
cmp
xlat
repz
inc
icebp
clc
into
mov
add
lret
adc
mov
xchg
stos
cltd
jle
fs
jbe
add
les
int3
xor
inc
jmp
fstpl
out
and
int3
dec
hlt
jge
xor
cmc
cmpsl
cmpsw
jo
inc
je
adc
push
jno
negb
cmc
sarl
push
clc
xor
jno
sub
call
lahf
orb
cwtl
sbb
dec
mov
faddp
std
outsb
and
repnz
pop
or
fildll
push
xor
push
and
xchg
jb
add
mull
daa
xchg
ja
in
lahf
hlt
pushf
inc
or
jg
inc
rcl
fadds
mov
and
frstor
sub
popa
dec
jle,pn
inc
or
mov
and
xor
out
xor
cmp
xchg
fisubl
inc
into
lahf
cmp
mov
and
das
xor
aam
mov
fisubrl
inc
shlb
sub
inc
neg
push
ret
popa
pop
cwtl
inc
dec
es
mov
mov
std
insl
ret
test
adcl
dec
testl
jp
push
imul
xchg
in
sub
inc
fld1
mov
je
cmpsl
or
dec
and
sbb
pop
cmpsb
dec
add
mov
sub
mov
sahf
inc
fiaddl
xchg
clc
popa
push
mov
out
sub
jae
mov
sub
pop
cmp
enter
mov
mov
les
mov
hlt
inc
scas
mov
mov
push
xor
dec
ljmp
or
mov
mov
push
dec
push
hlt
stc
and
sti
je
mov
outsb
dec
out
test
xchg
mov
lods
cmc
adc
ja
fwait
pop
cmp
or
insl
cli
out
dec
into
ja
push
subb
xchg
pop
push
mov
push
or
xlat
out
stos
outsl
cmp
mov
mov
jmp
out
add
mov
sub
mov
jecxz
cmp
ret
aas
stos
jecxz
frstor
int3
mov
dec
pop
xchg
mov
or
or
test
popa
fcoml
in
mov
mov
addr16
call
notl
or
hlt
dec
sbb
sti
data16
and
mov
jmp
into
add
in
mov
sub
cmp
or
adc
jecxz
push
dec
popa
mov
mov
repnz
test
jnp
mov
mov
or
mov
jle
sbb
xlat
cli
addr16
lea
xchg
lret
mov
je
ret
mov
lock
test
fcmovb
mov
xlat
fwait
xchg
loopne
mov
aas
lods
xor
cld
pop
cwtl
leave
movsl
adc
sarl
push
fstl
daa
gs
mov
mov
pop
ljmp
imul
fldenv
fidivrs
push
fsubr
popf
cmpsb
xor
jmp
fwait
out
cmp
insl
and
pop
lods
lcall
ja
sbb
mov
cltd
jle
andl
repnz
ljmp
lods
mov
sahf
pop
das
push
aaa
gs
xchg
adc
xchg
lahf
cmc
inc
and
xor
cld
dec
add
dec
lods
xchg
adc
lods
shll
xchg
cmovo
and
mov
pop
out
cmp
adc
pushf
call
rcr
lds
jle
mov
push
inc
push
insl
inc
mov
add
les
dec
test
push
or
hlt
cli
outsb
add
xorl
or
js
scas
stc
dec
or
fnsave
popf
push
loopne
jg
test
mov
cmp
ror
rcrb
pop
and
es
cmp
or
and
cmp
stos
fldcw
mov
add
xchg
push
push
mov
popf
and
daa
dec
cmp
sbb
push
mov
int3
push
aam
jp
call
mov
pushf
shl
mov
nop
shrb
repnz
es
push
pop
jo
hlt
and
jmp
imul
rolb
inc
adc
sti
shr
mov
jg
dec
neg
jecxz
sub
mov
gs
ret
add
jb
sbb
lock
lahf
fistpll
popf
outsb
jg
sub
inc
das
mov
add
call
mov
sub
mov
loope
mov
and
leave
andb
or
fnstenv
xor
mov
pop
jp
idivl
adc
cld
icebp
stos
icebp
adc
loope
out
les
cld
in
mov
jmp
lret
cltd
sbb
dec
sub
xchg
jbe
sbbl
pop
gs
in
mov
pop
mov
lods
push
and
xor
mov
clc
xchg
xchg
mov
push
mov
inc
out
pushl
insb
add
insb
xor
in
and
mov
pusha
mov
rorb
xchg
jmp
popf
xor
xor
cs
add
lahf
sbb
lcall
mov
iret
popa
es
inc
xchg
xor
inc
sbb
fnclex
ljmp
fmul
sub
loope
sbb
mov
mov
lret
jae
lods
aaa
fbld
xchg
test
pop
or
push
adc
sbb
fcom
mov
xchg
jnp
mov
xor
mov
jns
or
hlt
rorl
xor
shl
push
mov
xchg
pop
push
out
push
pop
push
shrl
out
mov
add
sub
push
pop
xchg
and
inc
and
push
in
outsl
lcall
xlat
push
icebp
or
ja
mov
je
xor
out
cmp
xor
ret
jle
nop
rcrl
enter
add
xor
cmp
push
enter
and
in
pop
jae
sbb
mov
jle
jb
mov
push
xchg
dec
cmc
cld
mov
pop
inc
daa
aaa
cmp
aad
negl
sub
imul
sbb
cmpsb
sub
lds
sbb
jns
and
mov
inc
pop
and
cmp
adc
xlat
pop
cmpsb
lret
cwtl
xchg
negb
xchg
fistpll
out
push
push
aaa
jbe
test
gs
xchg
mov
pop
insb
xchg
and
movsl
inc
xchg
dec
xchg
cmpsb
adc
adc
mov
imul
inc
mov
add
pop
xor
stos
or
movsl
dec
sbb
inc
fstpl
ret
add
or
repz
arpl
mov
adc
mov
fwait
stc
jp
rorl
out
sub
mov
iret
pop
and
idivl
rcrb
pop
test
push
inc
lods
jge
mov
cmpsl
and
loop
jl
movzbl
movb
dec
xor
hlt
in
in
pop
xor
xor
cltd
jb
es
gs
jecxz
leave
jl
lret
rdmsr
jle
cmpsl
and
xchg
mov
mov
mov
or
sti
add
jmp
mov
mov
in
stc
xlat
stos
xchg
iret
adc
fsubp
and
lret
push
sbb
dec
fists
out
mov
add
fcomps
aam
call
sbb
fnstsw
jmp
mov
push
enter
xchg
test
psllq
jno
nop
jge
or
sub
pop
mov
jecxz
fcoml
sti
cmpsl
mov
jmp
popf
inc
jo
shl
mov
dec
std
in
xlat
mov
push
mov
sbb
rcrb
add
pusha
or
xor
int
sbb
outsb
inc
mov
fsubs
jle
addr16
push
inc
fstpl
mov
pop
fs
in
xchg
push
popa
add
shr
mov
icebp
and
mov
or
lods
cmpsl
sbb
loopne
sbb
orb
out
mov
xchg
fs
lcall
mov
adc
pop
sub
inc
xchg
or
xor
adc
stos
sbb
mov
sbb
rcr
flds
ljmp
es
add
mov
jle
cmpl
sub
iret
mov
rep
or
sub
ret
push
imul
sti
dec
pop
cmp
xchg
imul
leave
mov
lods
mov
xor
cli
sbb
cmpsb
pop
sahf
outsb
rclb
arpl
rorb
insl
cmp
cmp
pop
sbb
lahf
mov
dec
xchg
pop
seta
pop
scas
fsts
cld
les
in
sbb
mov
clc
int3
sbb
mov
aam
into
dec
mov
adc
clc
ja
xor
ja
lcall
enter
and
repz
sbb
fcmovbe
aam
or
mov
fbld
dec
or
cs
pushf
sbb
shl
adc
mov
mov
imul
int
pop
cmc
pop
arpl
das
mov
and
inc
cmp
lods
fnstcw
imul
mov
push
pop
sub
gs
cmp
subb
add
adc
fstpt
cwtl
dec
lahf
in
in
pop
insl
dec
aaa
push
enter
sub
sub
insl
dec
sbb
push
insl
aas
out
nop
mov
mov
push
and
nop
push
sub
inc
rol
sub
mov
pop
cmpsl
movsb
cltd
fadds
clc
mov
sbb
repz
inc
xchg
lock
aas
jmp
cmc
fsubrl
xor
adc
xchg
mov
mov
push
jg
cmpsb
jg
shlb
and
and
jl
inc
and
jge
and
test
push
xchg
outsb
add
rcll
xchg
cmp
and
cli
int
xlat
xor
shl
add
push
es
stos
xchg
mov
sbb
out
imul
aaa
mov
out
push
fdivl
iret
or
or
xor
call
jle
inc
and
add
sub
imul
mov
mov
jmp
inc
cmc
adc
add
cmp
mov
lods
loopne
mov
ja
xor
mul
fwait
inc
out
or
daa
stos
adc
stos
and
mov
xchg
sub
sarb
adc
add
sbb
lahf
mov
repnz
dec
push
pop
ret
cmp
or
lcall
ja
loope
enter
lret
fimuls
cltd
mov
cld
pop
inc
or
push
sbb
jp
rcl
mov
pop
js
clc
insl
testb
inc
jle
mov
out
lods
mov
shll
insb
add
jo
sbb
push
xor
jmp
mov
fimull
add
or
outsl
push
out
in
pop
sub
or
andl
adc
test
xor
mov
or
enter
out
dec
repnz
jmp
cmp
jmp
sti
in
and
loope
rolb
arpl
mov
mov
call
push
aaa
fdivl
push
ficoms
mov
sub
adc
loop
movsb
dec
dec
push
fwait
dec
adc
mov
mov
rcrb
pop
mov
push
fists
stos
repz
jb
xor
mov
or
cmp
push
add
xor
pop
inc
sbb
mov
mov
mov
push
nop
sti
jmp
mov
nop
mov
inc
pop
mov
ss
xor
popf
push
jmp
mov
add
into
jle
xchg
xor
and
enter
test
sub
and
sub
xor
xchg
xchg
pop
cmp
pop
aaa
jl
jns
addr16
sbb
repnz
dec
pop
sbb
cwtl
xchg
icebp
push
jae
sbb
pop
sub
mov
into
sub
adc
cmp
jge
xor
and
icebp
or
std
pop
xchg
ja
int
inc
stc
sbb
push
sub
adc
sbb
imul
sbb
sbb
adc
push
lcall
cmp
sub
jb
stos
outsb
into
jnp
mov
stos
test
test
sub
flds
int3
ret
ljmp
jns
xchg
mov
imul
insb
shlb
cltd
adc
and
or
jo
cmovp
push
scas
mov
adc
mov
sbb
movsl
or
inc
pop
shl
repnz
mov
mov
imul
jbe
cmp
mov
cmp
mov
pop
cmc
int
mov
jle
cmc
mov
pop
add
mov
mov
loope
sbb
pop
or
movsb
repz
and
lea
sbb
mov
pop
insl
std
push
cwtl
xor
cmp
or
popf
scas
mov
sub
mov
flds
xchg
out
inc
and
das
ds
jp
and
stos
and
xor
add
and
xor
bound
pop
enter
aad
ljmp
sbb
mov
lahf
sbb
std
shll
push
adc
mov
jb
jb
sbb
cwtl
and
mov
rol
in
cmp
mov
aas
icebp
xchg
or
js
nop
cmp
das
push
push
shll
testl
data16
lret
xor
mov
cwtl
mov
pusha
push
sub
stos
sbb
rcll
jle
fildl
test
mov
xlat
sub
pop
push
dec
cltd
mov
add
imulb
add
add
inc
mov
insl
xor
push
sub
stc
out
mov
jp
lret
push
pushf
repz
arpl
dec
jg
inc
cmp
icebp
repz
mov
mov
out
jl
or
or
sbb
sub
loopne
int3
sub
mov
les
mov
jecxz
clc
insb
nop
sub
stos
mov
pop
sub
inc
mov
arpl
cmpsb
adc
sub
sti
jg
scas
pop
xor
out
fisubrl
cmc
xorb
adc
call
mov
rcrl
scas
out
cmp
adc
stos
sahf
lds
daa
push
sub
movsb
rorb
pop
pop
push
mov
call
pop
nop
fisttps
jne
mov
pop
loopne
pop
xchg
or
sbb
lods
dec
icebp
sub
xchg
xchg
cmpsb
push
popa
push
push
js
jge
dec
adc
mov
rcrb
add
cmp
and
mov
rorb
repnz
je
sbb
dec
push
test
out
je
inc
test
xor
mov
mov
or
xor
add
xor
loop
pushf
rorb
cmp
xor
xor
mov
sub
out
insb
test
or
xchg
or
add
cmpsb
popa
sbb
cmc
pushf
add
repnz
jecxz
notb
sbb
and
sahf
sub
cltd
push
out
jbe
mov
ds
shrb
cltd
outsb
inc
sbb
stos
cmc
icebp
dec
push
mov
jmp
fldcw
out
sub
sbb
sbb
dec
mov
in
push
add
adc
fdivl
movsb
test
nop
aas
aaa
inc
icebp
mov
test
pop
pop
dec
sahf
pop
push
jge
mov
sbb
popa
mov
cmpsb
mov
sub
into
cmc
xchg
jecxz
iret
xor
mov
xchg
inc
mov
jl
or
loop
fbstp
fldl2e
fistpll
push
mov
sub
jmp
insl
lods
ret
jg
ficoms
inc
ret
push
arpl
mov
cmpsb
mov
loope
push
add
jg
mov
gs
popa
cltd
pop
cmp
cmp
imulb
pop
inc
shrb
pop
push
push
cli
mov
sti
jecxz
dec
lock
xchg
pop
setle
cwtl
xchg
or
mov
cs
cmp
inc
int
sbb
imul
inc
movsb
xchg
jecxz
sarb
movsb
xor
sbb
pusha
mov
cmp
jle
push
mov
lods
lods
ret
jae
testl
and
mov
aas
insl
test
loope
movsl
xor
sti
dec
lods
inc
xchg
or
and
orb
dec
and
fcoms
push
aaa
pop
dec
aam
xor
aas
mov
adcb
add
sub
ret
or
jle
jnp
addl
iret
jnp
mov
mov
mov
sti
sahf
pop
sub
and
dec
fstl
and
inc
in
es
je
push
jns
lea
out
jb
dec
pop
sub
cld
pop
push
daa
jp
sub
rol
cld
sbb
or
enter
mov
mov
mov
xor
fs
push
hlt
xor
or
cld
cltd
mov
pop
cmp
xor
cmpsb
in
pop
push
dec
int
jmp
loopne
jg
fsubs
outsb
pop
in
dec
pop
and
or
les
mov
cmp
lahf
andb
jbe
repz
add
arpl
in
fsubrp
lret
jbe
orb
in
cmp
push
sbb
push
addr16
fwait
jnp
test
adc
stos
sbb
int
pop
fldl
test
sbb
add
in
cli
xchg
xor
sub
popa
mov
fiaddl
adc
xchg
xor
in
mov
std
aas
sti
dec
scas
jne
jbe
push
inc
pop
sarl
cmp
icebp
cmp
mov
stos
into
loop
xchg
mov
rorb
insl
repz
test
or
jb
mov
mov
out
dec
pop
or
adc
fwait
insl
orb
flds
scas
fstpt
mov
jecxz
xor
xchg
jne
pop
iret
push
fxam
mov
lods
mov
into
call
push
fwait
lea
pop
sub
mov
xchg
repz
push
out
push
pop
pop
xchg
xor
popf
inc
mov
dec
bound
xchg
xor
mov
sub
aam
sbb
fidivrl
mov
push
test
push
popa
dec
inc
test
push
es
sub
adc
mov
mov
lret
jp
sub
adc
pop
push
push
mov
mov
out
nop
lahf
push
cli
jb
sbb
adc
std
cld
add
jo
and
adc
mov
add
jl
mov
mov
popa
mov
or
cltd
int3
lds
mov
dec
xor
in
dec
fucom
call
aas
push
ja
popa
mov
sub
cmpsl
xchg
jo
or
repz
mov
xchg
and
iret
stos
shlb
popl
jo
pop
dec
andb
push
push
jne
push
mov
outsb
je
cli
add
push
gs
into
scas
data16
pop
test
sub
sub
sbb
test
mov
add
mov
push
gs
fsubr
add
add
push
pop
cwtl
aas
sub
pushf
nop
and
cld
cmp
out
inc
cmpsl
mov
std
mov
shll
jnp
pop
sahf
xorl
mov
push
mov
bound
jne
and
shlb
nop
enter
lds
xor
cmc
sub
shrb
mov
jb
loopne
imul
pop
and
addr16
jae
leave
push
scas
ss
lods
outsb
dec
aas
stos
lods
jmp
pop
dec
xchg
ret
cltd
pushf
or
mov
test
jae
test
scas
ljmp
adc
xchg
sub
xchg
loope
shlb
repnz
push
das
jno
into
and
hlt
lret
inc
and
push
mov
loopne
dec
sub
sbbl
lods
adc
fmulp
jno
jno
es
jnp
clc
out
roll
aad
shlb
stos
jne
popf
cmp
lcall
inc
das
add
js
in
loop
sbb
xorb
cmpsb
cmc
adc
xchg
repz
scas
in
lret
sbb
mov
xchg
dec
imul
or
fld
inc
cmp
cltd
cwtl
in
lock
cltd
add
js
mov
fcomp
aas
adc
mov
cmp
aaa
xor
roll
sahf
lods
dec
xor
js
outsl
fstpt
push
call
in
inc
lret
mov
adc
scas
in
push
lods
cli
dec
sub
cmp
push
dec
adc
push
lock
mov
sbb
in
xor
cmpb
mov
mov
mov
push
fcomps
mov
mov
loop
ljmp
push
xorb
inc
adc
xor
imul
stos
mov
mov
xorl
sub
mov
imul
add
fadd
jmp
or
add
adc
in
cmp
std
cs
not
insb
es
jle
xchg
dec
pinsrw
push
call
dec
push
cwtl
repz
or
jp
dec
and
push
pusha
mov
jl
jb
fdivs
fisubs
or
shl
clc
dec
jg
xchg
stos
test
mov
pop
pop
mov
cld
dec
flds
in
mov
cmp
sbb
pop
aaa
imul
jno
add
mov
out
jp
test
sbb
outsb
ret
test
insl
out
addr16
lcall
xor
xor
dec
cmp
daa
rol
out
push
sar
in
pop
mov
and
and
push
push
cmpsb
dec
aas
cld
push
inc
add
push
lret
sub
jecxz
sub
int
add
add
loop
iret
out
cld
push
jns
movsb
and
in
push
mov
inc
mov
es
aaa
mov
cmc
lret
cmpl
cmp
and
lcall
and
sbb
fcom
ret
sub
mov
aam
test
fs
loope
push
mov
mov
lock
mov
aas
inc
sbb
daa
mov
cmpsb
in
jmp
lds
xchg
ret
outsl
imul
jo
jle
xchg
xor
mov
mov
inc
cmp
insl
cld
adc
dec
in
xor
imul
jmp
mov
cltd
push
mov
adc
add
jecxz
loopne
dec
xchg
aaa
sbb
add
js
add
dec
xor
xlat
adc
test
jmp
jle
sti
bound
sti
in
dec
or
dec
aas
sbb
sbb
push
push
in
mov
sub
push
inc
scas
and
add
lds
sbb
int
push
test
enter
lods
xchg
ret
mov
imul
popf
fsubs
cmpsb
jnp
stos
mov
pusha
jmp
push
xchg
test
mov
ja
jo
lcall
xor
outsl
fdivrs
cli
add
data16
loop
pop
mov
push
les
popa
xchg
pop
lret
mov
jg
insb
add
popa
jle
loopne
push
lahf
push
mov
sbbb
sahf
test
and
lea
sahf
fnsetpm(287
cld
loopne
sbb
into
mov
popa
cwtl
ret
nop
scas
fcoml
ret
mov
xor
icebp
mov
mov
imul
lcall
test
mov
xor
mov
xchg
or
repnz
fdivs
dec
hlt
icebp
jmp
pop
js
mov
cld
xor
fisttpl
pop
repz
repz
lods
es
pusha
int
lds
mov
les
subl
sub
jmp
idiv
mov
int3
jecxz
push
inc
cmp
pop
aam
sub
leave
push
mov
popf
paddusw
in
mov
popa
lds
mov
jbe
lret
lds
rcrb
xor
dec
aas
jle
jecxz
lahf
testb
xchg
mov
inc
iret
std
gs
shll
add
in
daa
mov
les
push
ret
push
in
rorb
push
cmp
dec
add
cmpsl
outsl
cmp
mov
ds
sub
les
jge
jno
mov
lret
dec
aas
mov
jnp
xchg
jns
test
repz
pop
inc
push
popa
mov
inc
fldenv
lcall
cmp
jle
cmp
dec
lahf
std
pop
aad
jg
jl
or
stos
adc
stc
repz
mov
movsb
sub
ret
and
test
xor
mov
popa
jge
shrb
xchg
addr16
jnp
cmp
movsb
inc
mov
add
shrd
cltd
mov
out
imul
push
sub
sbb
int
jg
pop
loop
lods
pop
jae
mov
sbb
loopne
pop
jbe
adc
pop
nop
add
sarb
imul
hlt
xchg
call
in
arpl
mov
adc
mov
stos
rcrb
cmp
cmp
cmp
dec
xchg
test
adc
jg
add
insl
sub
sbb
daa
add
mov
sbb
aaa
scas
xchg
inc
lock
pop
cltd
scas
outsb
add
xor
jae
repnz
sub
adc
out
mov
mov
or
jge
or
out
pop
imull
fdivl
lea
fs
xchg
mov
jns
ret
add
fistpl
add
pop
cmpsb
push
jno
pop
mov
xchg
adc
push
aam
fs
lock
lret
enter
xchg
jl
loope
or
outsl
or
jnp
cs
popf
in
subb
xchg
cltd
mov
out
mov
cmp
sub
jg
call
mov
mov
and
xchg
hlt
mov
add
call
push
cli
jmp
or
test
outsl
sbb
mov
in
gs
fcoml
imul
mov
xchg
out
and
inc
xchg
add
scas
out
mov
jmp
mov
dec
nop
push
mov
fmuls
aaa
xor
or
jmp
mov
sub
fld
lret
sbb
test
clc
fwait
out
cwtl
lods
jecxz
test
push
jmp
dec
mov
negl
jo
or
leave
or
fucomip
cs
and
sbb
sbb
and
loopne
pop
dec
or
sbb
xor
jge
pop
inc
icebp
aas
adcb
aaa
mov
aad
xlat
pop
inc
add
mov
pushf
xor
mull
dec
nop
int3
jno
movsb
inc
adc
dec
inc
lahf
sbb
jbe
inc
mov
inc
or
in
mov
sub
mov
mov
lcall
inc
adc
mov
mov
repnz
mov
jmp
js
push
pop
imul
cld
loopne
mov
cmpsb
add
das
repz
std
sbb
cmpsl
pop
fs
daa
mov
call
jl
adc
arpl
enter
sub
jbe
mov
dec
or
ja
sub
out
sub
cmp
pop
jbe
xchg
ret
shrb
push
dec
pop
xlat
pop
and
dec
stos
in
mov
jb
pusha
cs
dec
jp
mov
cld
cmc
sbb
test
jmp
adc
hlt
sub
nop
inc
sub
jl
cmovnp
pop
xchg
lds
sub
inc
mov
ficoml
scas
mov
cmp
cltd
mov
test
sub
xor
inc
into
repnz
sbb
mov
inc
loopne
sbb
cmpsb
xor
pusha
cs
push
aad
mov
jne
xor
or
add
jp
movsb
adc
dec
mov
jmp
push
out
pop
xor
xor
insb
int
out
xchg
movsb
in
push
mov
push
xor
mov
into
inc
push
inc
sar
data16
cmp
lods
cpuid
out
hlt
mov
aaa
repnz
gs
ds
xchg
cmp
hlt
mov
push
fstpt
outsl
or
out
fcom
test
jg
orl
mov
adc
cmp
jne
clc
mov
jno
fnstsw
sarl
jg
cmpsl
add
fstpl
jns
ret
lcall
daa
fistps
mov
adc
push
xchg
pop
push
fldl
add
cmpb
xchg
cmpsl
lods
decl
add
aas
xchg
insl
add
cvtdq2ps
jae
cs
sub
mov
xchg
fstpl
jae
in
loope
stc
loopne
jg
push
hlt
dec
inc
push
push
lods
gs
pop
out
dec
lock
aam
lcall
push
jg
push
xchg
add
jmp
fistpl
jns
sarb
lcall
cmp
and
lock
repz
inc
cmc
mov
jbe
sbb
jg
fs
sbb
push
xchg
mov
movsb
add
or
dec
sub
jmp
mov
jecxz
divl
psubb
sbb
pop
roll
fildl
mov
notl
loop
xchg
xchg
dec
cmp
fimuls
orb
xor
mov
mov
mov
cmpsb
or
add
into
fiaddl
dec
pop
stos
leave
mov
inc
jecxz
stc
xor
inc
xor
rcrl
adc
test
mov
pmulhw
xor
xor
mov
movsl
jnp
or
int3
jns
jl
jmp
add
jg
or
popf
mov
mov
xor
lcall
add
ss
sbb
movsb
hlt
mov
adc
mov
ret
and
mov
add
js
inc
in
pusha
jge
jnp
xchg
push
and
mov
rorl
xchg
and
mov
fwait
clc
pop
mov
je
loop
xor
cltd
outsb
imul
jecxz
mov
fwait
cmp
nop
push
fsubl
cwtl
add
lret
out
pushf
out
mov
fwait
shrl
add
jns
lea
inc
lret
rolb
in
mov
repnz
pop
or
xorb
sbb
fstpl
aaa
and
push
aad
lret
rcrb
jnp
gs
xchg
fstpl
xor
or
imul
sti
subl
dec
shll
pushf
sbb
or
jns
das
xchg
mov
loope
sub
wbinvd
and
add
push
mov
add
xchg
push
aaa
out
inc
sub
shlb
ret
rcrl
inc
mov
dec
lods
pushf
iret
mov
loope
gs
cmpsl
xor
test
cs
push
test
dec
scas
fistps
hlt
cmp
lods
aam
pop
pop
dec
or
add
dec
lret
in
testl
test
and
imul
xor
xchg
fadd
inc
testl
xor
stos
pop
jmp
imul
outsb
lods
add
mov
or
sarl
inc
iret
sbb
lods
notl
xor
inc
mov
or
leave
daa
scas
jne
add
movb
jge
inc
mov
mov
inc
aad
iret
mov
lret
inc
jp
addr16
mov
shll
add
imul
test
cmp
scas
push
add
int
test
lret
cs
ret
adc
popa
imul
jl
cmp
cs
xor
int
mov
jno
xor
lds
les
loopne
sbb
cmp
and
adc
mov
pop
adc
mov
jge
shl
fnsave
mov
sbb
fsubrl
jo
movsw
cmpps
dec
cmp
mov
iret
mov
es
and
mov
cwtl
loope
push
mov
cmp
es
jmp
push
adc
or
enter
out
stos
jbe
int
dec
lahf
aaa
or
and
lods
cli
sub
pusha
pop
jecxz
cld
imul
popa
stos
cmpsb
dec
fcmove
jmp
push
neg
cmpl
jnp
imul
int3
movsb
enter
push
inc
adc
jnp
icebp
sar
lahf
neg
jl
scas
mov
out
xchg
lahf
mov
inc
rcl
xchg
stos
or
jno
insl
sahf
cli
or
out
mov
pop
call
and
dec
cmp
test
fistpl
fs
or
or
sub
mov
pop
rolb
mov
pushf
outsl
cmp
push
and
mov
adc
dec
outsb
out
fidivs
shll
jno
xor
ret
mov
cmp
clc
aaa
xchg
lods
cltd
repz
cmp
xor
xchg
fildll
sbb
and
lock
xor
aas
push
mov
sarl
roll
rcrl
rcrl
cmp
xchg
ds
insb
and
roll
arpl
pop
mov
int3
mov
mov
mov
push
aaa
inc
inc
inc
jmp
mov
clc
nop
mov
or
or
mov
outsl
fadd
test
or
pop
mov
dec
adc
ljmp
cmp
push
int
nop
rclb
loope
aam
in
fsubl
pop
cmp
pop
jnp
cwtl
or
mov
das
ja
mov
scas
mov
xor
lret
pop
repz
or
xchg
push
inc
fs
stos
rcr
mov
mov
addr16
dec
push
xchg
xlat
or
adc
adc
pop
mov
jbe
popa
adc
sub
mov
xor
or
iret
stos
addr16
and
pop
push
push
adc
imul
sbb
cmp
stos
jne
jg
inc
mov
mov
ret
inc
insl
push
int3
mov
sbb
or
pusha
fidivrl
cwtl
cmp
lock
clc
lcall
and
imul
mov
lock
mov
adc
pop
loop
fsubl
rclb
pop
push
out
sub
sub
test
pop
cmp
cmpl
les
cmp
popa
sbb
pop
lods
sbb
mov
lahf
mov
sub
xor
mov
adc
je
fs
cmc
clc
xor
jno
dec
je
inc
dec
rol
ss
add
xchg
jns
push
lahf
into
xor
pop
sub
and
jno
lcall
mov
outsb
lahf
xor
nop
insb
add
cmp
cmp
sub
sub
dec
arpl
and
xor
inc
or
in
pop
inc
out
loop
sbb
arpl
fisttpll
adc
in
mov
or
jge
sar
dec
mov
neg
add
bsf
fwait
nop
cmp
xchg
or
xchg
rcrb
jg
add
jmp
xor
sbb
mov
movb
lret
aaa
test
aaa
popf
xor
adc
adc
dec
and
xchg
outsl
imul
mov
test
and
mov
push
fisttpl
js
sub
cmp
repnz
lods
pop
aad
sbbb
cli
xchg
push
sbb
add
stos
testb
lret
pop
arpl
sub
sahf
push
imul
bound
mov
mov
hlt
mov
adc
xchg
bound
lahf
stos
mov
out
sbb
lret
cmp
out
xchg
cs
inc
mov
and
push
daa
adc
jnp
mov
sub
mov
xor
fcmovnbe
cmp
cmp
fsub
push
andb
ret
jg
cmp
pop
mov
test
lret
mov
cmpsb
mov
or
out
pop
int3
dec
dec
push
pop
mov
adc
mov
sarb
push
pop
daa
nop
fisubrs
or
sbb
or
sbb
int3
out
push
pop
jo
negb
and
push
pop
mov
pop
add
and
sub
adc
enter
lcall
xlat
cmp
xor
ds
jecxz
mov
ja
ja
mov
pop
inc
push
push
push
imul
mov
mov
mov
test
sub
or
popa
mov
push
dec
test
iret
push
clc
lds
es
dec
inc
sub
into
xor
mov
xchg
adc
sub
outsb
loopne
jo
xchg
adc
ret
push
lds
ret
rcll
dec
mov
popf
jns
sub
jne
addr16
xor
jnp
in
pop
int3
lea
mov
loope
loop
imul
dec
xchg
fidivrs
lea
out
xor
nop
xor
sar
rolb
jg
inc
or
in
dec
jno
es
adc
stos
fldt
lods
sahf
cmp
in
sti
adc
outsb
lret
mov
add
outsl
xchg
test
inc
mov
dec
xchg
loopne
fiaddl
fisubrl
lods
aad
cmp
cmpb
jb
aam
push
jecxz
dec
sub
pop
scas
scas
jbe
out
lea
jl
mov
testb
test
xchg
rcll
mov
loopne
xchg
addr16
insb
sub
xor
repz
xchg
testl
mov
pushf
xchg
xchg
outsb
or
cmp
or
adc
pusha
and
mov
insl
mov
arpl
out
jmp
arpl
sub
in
in
dec
jmp
cli
inc
leave
jg
adc
xor
mov
dec
push
shlb
xlat
cmc
mov
mov
stos
mov
adc
push
add
or
or
cmp
fstps
pop
pushf
pop
mov
xor
stos
adc
dec
jno
fidivrl
fwait
xchg
mov
fsubs
rcrb
jo
sbb
pushl
lods
shll
faddl
xor
cmc
fsub
xor
insb
jbe
ss
jne
sbb
addr16
cli
daa
daa
ret
loope
xchg
cltd
xor
pusha
add
sbb
add
mov
aad
cmp
les
push
out
iret
mov
mov
cwtl
in
test
jo
das
adc
popa
jb
ljmp
mov
pop
sbb
mov
sub
lods
adc
shl
mov
pop
xor
jle
or
push
imul
jmp
outsl
aas
mov
cmpsb
cmp
sub
pop
and
mov
sub
cs
sbb
cltd
addr16
movsl
popf
test
cld
insb
cli
push
ds
push
adc
push
pusha
mov
mov
aaa
repz
int
movsl
pop
fsubs
mov
add
inc
mov
sbb
or
addr16
mov
dec
xchg
sbb
mov
test
les
addb
jl
mov
and
leave
mov
inc
jg
cmpsl
xchg
add
xor
imul
iret
int3
outsb
rcrl
pop
sub
push
inc
pop
lods
push
jae
jmp
rcrl
mov
or
xorl
cwtl
fsubr
sub
xchg
subb
mov
adc
pushf
shr
mov
and
lret
dec
jne
sub
pop
jne
push
cmpb
xchg
pop
inc
mov
daa
xor
add
ds
or
sbb
enter
ljmp
push
pop
cmp
arpl
ds
push
ja
mov
inc
stos
fsubr
mov
insl
mov
pop
mov
lods
ss
lods
jle
inc
je
xchg
push
pusha
into
mov
adc
sbb
in
fsubs
ja
mov
imul
fldenv
popa
jge
jb
push
imul
fs
ret
out
es
mov
fwait
inc
fcoml
sbb
xchg
sub
addl
shll
gs
xchg
dec
push
scas
subl
loop
mov
rcrl
pop
js
mov
lods
and
sub
jnp
fdivp
cmp
fs
jne
xor
addb
test
adc
movsb
add
adc
outsl
adc
inc
sbb
aas
cmp
sti
cmpsl
mov
movsl
mov
sarb
jecxz
loopne
aaa
mov
fcmovb
xchg
js
and
roll
dec
xchg
ret
push
push
push
cwtl
jne
jnp
cli
jp
adc
jno
ja
xchg
xor
dec
pop
add
cltd
pop
daa
ud2
inc
daa
xor
push
or
test
pop
or
fiadds
repnz
std
out
jnp
adc
dec
fisubrs
in
jno
jne
in
test
xchg
lods
mov
push
and
clc
and
xchg
js
mov
or
test
jno
xor
xchg
sub
sbb
int
xchg
clc
xor
push
pop
xlat
xchg
sbb
mov
cmp
ja
ljmp
cmp
and
sahf
jns
xchg
lock
lret
jl
imul
les
rorb
fldcw
mov
faddl
test
jmp
imul
dec
mov
test
sti
jge
mov
sahf
fadds
add
pop
int
mov
adc
icebp
adc
push
or
lods
ja
sti
mov
push
shll
lea
mov
out
add
jmp
int
daa
add
mov
lock
lret
dec
lahf
jmp
mov
hlt
ret
fucomip
push
jge
testw
mov
mov
ss
jmp
jne
push
fwait
in
into
add
and
test
mov
inc
clc
cmp
pop
mov
daa
cmp
bswap
mov
mov
xchg
test
cli
add
mov
xor
icebp
les
cmp
jmp
cli
jle
lods
imul
cs
sub
lods
pop
jns
push
ss
push
mov
mov
cmp
call
insl
mov
outsl
jmp
or
jge
inc
xlat
xchg
xchg
nop
sbb
add
xor
daa
jns
add
lods
loopne
repz
or
int3
pop
dec
xchg
ret
jno
lret
sbb
xchg
test
and
push
in
xchg
xor
cmp
stos
mov
pushf
dec
fwait
movsl
dec
inc
insb
out
and
daa
inc
decl
xlat
mov
inc
ret
dec
mov
xor
mov
push
or
rcr
aas
and
mov
rcll
mov
inc
dec
ret
scas
rcrl
imul
sub
loop
ret
pop
jmp
imul
or
cmp
imul
pop
cs
xor
inc
push
std
inc
js
jge
add
push
inc
subl
loope
insl
sbb
xor
subl
ret
test
fwait
pushf
loopne
jno
jp
sub
in
push
jns
outsl
inc
mov
inc
in
mov
clc
push
gs
or
pop
fs
pop
xchg
cmpl
and
je
xchg
push
and
xchg
pop
jle
cmp
adc
pop
into
sub
jae
inc
leave
sub
sub
in
sbb
jecxz
mov
adc
lea
xchg
mov
pop
sbb
subl
adc
mov
mov
adc
aad
movsb
cltd
and
mov
loop
ret
imul
xchg
ss
pop
fstps
decb
cmp
sub
cmpsl
jp
mov
or
pop
test
out
shlb
divl
outsb
test
shll
outsl
adc
out
das
scas
test
stc
gs
lods
pop
das
or
xchg
repz
sbb
push
fwait
cwtl
lret
pop
mov
in
sub
int3
or
aad
xchg
and
push
outsl
push
out
xchg
jno
push
fxch
outsl
icebp
lock
mov
call
jle
pushf
lahf
out
lods
lods
shrd
mov
cmp
sahf
cmp
cmp
bound
xchg
adc
in
and
inc
gs
shlb
movsb
les
mov
push
pop
fidivl
cld
mov
inc
push
cli
xchg
add
loop
mov
push
imul
sti
rcrl
xor
outsb
xlat
push
jle
subl
xchg
cmp
lcall
daa
mov
out
fldenv
xor
pop
xchg
jmp
nop
dec
into
mov
pop
and
inc
popf
mov
push
mov
push
int
test
stos
fxam
cmp
sbb
out
mov
jge
shl
inc
ret
nop
jmp
repz
lock
stos
loop
lcall
pop
adc
dec
xlat
dec
test
lcall
xor
mov
jns
sti
pop
pop
test
push
mov
inc
push
mov
mov
sbbb
out
in
adc
int3
mov
push
call
loope
outsl
dec
xor
mov
test
sahf
cmp
out
or
addr16
mov
ljmp
shr
sahf
cltd
mov
push
jecxz
out
inc
mov
inc
xlat
insl
pop
inc
testb
lds
movsl
pop
and
popf
jo
cmp
cmp
repnz
pop
cmp
and
push
pop
add
hlt
out
cmp
fwait
or
push
push
sub
mov
lret
pusha
push
dec
push
stc
in
xor
push
daa
fiaddl
sub
ja
jmp
cmc
shlb
mov
or
je
sarl
or
mov
roll
mov
sub
jno
mov
mov
lds
mov
dec
xchg
shll
cld
mov
mov
in
shrl
dec
push
filds
sbb
es
mov
div
icebp
ljmp
cmpsb
sub
nop
pop
loop
jl
sbb
dec
lock
mov
xor
jmp
cmp
xchg
push
xor
fs
cmp
int
pop
icebp
and
cwtl
push
or
lahf
mov
jne
into
dec
ja
divb
xchg
lods
iret
leave
sub
xchg
and
cmp
push
xchg
addb
push
jmp
call
lds
fcomps
pushf
mov
mov
push
std
add
add
dec
inc
sti
adc
xchg
mov
daa
out
out
arpl
aaa
cltd
xor
roll
out
dec
sub
jnp
movsb
mov
push
fucomi
fwait
aad
mov
lods
aaa
sub
push
and
mov
popf
fadds
add
das
rorl
ds
mov
sub
xor
lods
sub
mov
jle
ljmp
or
mov
push
jae
cmp
jno
jp
clc
lods
jp
pop
in
xor
sub
ja
jecxz
pop
shlb
add
mov
adc
dec
je
icebp
stos
sahf
ror
xor
ja
int3
mov
cmp
gs
inc
jns
aad
inc
cmp
adc
pop
in
adc
dec
ljmp
sbb
pusha
addr16
mov
pusha
shl
mov
jecxz
push
xor
shrb
xchg
and
push
repz
cmp
mov
out
xchg
leave
sbb
pop
push
test
adc
push
cmp
rol
push
pop
adc
in
add
add
jmp
gs
push
mov
pop
pop
rolb
fistps
je
int3
daa
lods
jo
ljmp
stos
cwtl
imul
rep
mov
dec
cmp
sub
sub
xchg
cmpb
and
add
jno
iret
lods
mov
mov
xchg
mov
add
push
aaa
aam
in
cltd
aas
out
rorb
popw
out
cwtl
arpl
mov
fistl
and
enter
inc
rcrb
mov
imul
imul
and
nop
or
xchg
mov
or
jecxz
jnp
popf
mov
cli
ret
ds
filds
sarl
dec
jns
lcall
es
stos
leave
pop
fdivr
or
in
cmp
das
pop
imul
iret
retw
pop
imul
or
aam
lret
gs
push
push
add
inc
xchg
jp
addr16
or
sub
mov
push
jle
sub
mov
push
test
enter
adc
aam
je
inc
aaa
or
pop
dec
movsb
les
mov
and
loop
pop
mov
shrl
add
sti
xchg
pop
iret
sbb
dec
mov
mov
les
ljmp
stc
clc
xor
push
jl
adc
mov
and
lcall
in
ret
jp
jp
jle
ss
lods
popf
xchg
shl
push
ret
sub
or
adc
jg
mov
and
xchg
mov
jns
xchg
aad
inc
vmovaps
cltd
xchg
aad
cmp
xor
lahf
test
mov
int3
push
mov
sub
sbb
enter
xor
xchg
ljmp
push
ss
aas
sub
ja,pn
bound
enter
outsl
popa
jl
fisttpll
aaa
mov
stos
pop
stos
lret
aaa
in
je
popf
cld
jl
fnstcw
cmc
xchg
dec
arpl
inc
mov
xchg
sahf
cmc
frstor
loope
xchg
loopne
sub
andb
in
cltd
scas
out
adc
cmp
nop
push
stos
jns
jns
xor
and
loope
ret
jle
pop
lret
lahf
notl
clc
sub
mov
insl
cmp
sbb
xchg
and
pusha
sub
jmp
sub
flds
push
nop
mov
int3
dec
cli
adc
xchg
ja
mov
je
shl
lcall
not
xor
pop
in
xlat
sbb
push
lock
out
insb
xor
push
mov
movsl
inc
inc
aad
mov
jecxz
mov
nop
mov
leave
xchg
cmp
add
push
mov
pop
dec
mov
adc
cli
notl
lahf
inc
ljmp
mov
fsubr
add
sbb
dec
out
adc
cmp
call
shl
pop
das
outsl
and
xor
inc
fstl
insl
pop
adc
or
scas
loop
mov
adc
push
inc
out
mov
cmp
adc
pop
aam
clc
jecxz
repnz
push
add
inc
loopne
push
or
xchg
lea
push
and
aad
jne,pt
inc
dec
xor
pop
sbb
scas
mov
jg
out
push
cmp
es
dec
jg
pop
mov
dec
or
sub
cmpsb
enter
push
jmp
mov
push
pushf
sub
dec
rcrb
popl
mov
imul
enter
out
fimuls
push
sbb
jmp
jg
mov
sub
push
movb
sbb
xchg
outsl
es
insl
mov
movsl
jns
in
xchg
cmpsl
adcl
rorl
mov
push
movsb
pop
sahf
scas
mov
adc
ficomps
fidivrl
cmpsb
rolb
je
popf
jo
test
test
cmp
mov
xchg
mov
jns
lret
iret
arpl
into
or
mov
add
aad
and
stos
lock
addr16
dec
pop
lahf
loopne
dec
rcrl
in
popa
imul
xor
adc
ljmp
nop
pusha
xchg
js
imul
sbb
mov
mov
roll
mov
test
jno
aam
das
push
and
cld
jb
inc
popl
jne
add
xchg
push
fs
lds
outsl
xor
dec
int
sub
mov
mov
shlb
jle
push
lods
pop
mov
cmp
dec
int
push
pop
aam
sti
fs
and
iret
mov
jbe
aad
test
jae
xchg
test
test
dec
rorl
pop
data16
adc
adc
ss
addr16
cmp
mov
xchg
inc
ret
imul
mov
push
sbb
inc
mov
jb
inc
into
pop
or
cmp
pusha
loopne
jae
xor
mov
and
sub
inc
inc
push
and
jo
mov
lds
lcall
mov
int3
fdivrs
imul
fcmovu
je
call
xor
sarb
call
mov
mov
pop
lret
ds
push
lods
and
jne
push
mov
pop
or
lea
and
cli
lea
cmp
add
movsb
popa
into
add
adc
xchg
xchg
shrl
jae
pop
push
data16
cmp
sbbb
test
sub
adc
inc
mov
add
pop
mov
xchg
frstor
adc
call
xor
outsb
jmp
mov
mov
and
lahf
mov
mov
jno
fstps
iret
inc
dec
fsubrs
and
ja
push
lods
movl
xor
divl
and
lock
adc
test
cmpl
dec
push
sbb
jg
dec
jmp
push
lahf
add
and
mov
dec
iret
add
cs
das
push
push
mov
jo
push
cmp
cmp
clc
lret
out
add
jns
cmp
pushf
test
sub
clc
dec
loope
rcrl
aas
ret
icebp
nop
mov
mov
push
out
push
aad
push
cld
data16
imul
push
fstps
roll
fistps
sbb
xchg
sbb
popa
sub
or
mulb
mov
addr16
mov
imul
aam
into
fsin
outsb
js
mov
mov
dec
mov
pop
call
add
shlb
shll
push
adc
lods
jmp
out
mov
jl
or
aas
out
pminub
mov
xchg
fdivl
ficoms
lahf
subb
out
data16
dec
in
adc
mov
pop
mov
xor
cltd
movsb
sahf
movsb
or
xorb
pop
in
jb
pop
jge
fadd
xorl
out
dec
inc
pop
lret
filds
sbbl
cmp
sub
in
gs
cmp
sahf
jno
push
andl
jp
inc
or
or
mov
fidivrl
in
push
sti
ja
sbbb
mov
add
movlps
call
cli
sub
lcall
dec
cmp
mov
fwait
pop
add
push
fdivs
popf
cmovb
jge
nop
imul
mov
cld
and
imul
stos
and
push
or
scas
cs
jge
sbb
lret
mov
ljmp
in
dec
andl
fwait
arpl
jl
xlat
loop
bound
movsb
arpl
mov
adc
inc
mov
push
pop
adc
into
lret
test
cmp
enter
dec
pop
xchg
test
scas
pop
stos
test
fisttpll
sbb
mov
rcr
mov
div
out
cmp
push
sbb
and
xorl
rol
push
jnp
inc
mov
and
dec
cmp
and
pop
bound
mov
leave
mov
shll
fisubrs
cmp
cs
int
pop
mov
cmpsl
lods
xor
repnz
ljmp
inc
scas
cmc
mov
imul
gs
xor
divb
jno
frstor
and
jmp
mov
and
test
aam
push
data16
pop
add
and
loop
sub
mov
push
pop
xchg
push
aad
cwtl
cmp
jle
cmc
sbb
push
lea
dec
sub
test
jnp
ljmp
mov
mov
push
mov
movsb
jl
pop
adc
fldl
in
xor
mov
or
cld
xchg
addb
lods
cmp
sub
mov
mov
out
push
insl
cmp
sub
out
js
call
loope
aad
dec
in
dec
mov
call
push
repz
push
pop
andl
leave
mov
dec
xchg
jne
insl
mov
repz
mov
shl
icebp
pop
je
and
fwait
xor
inc
lods
int3
mov
loope
sbb
mov
mov
mov
or
mov
or
mov
push
jns
and
outsb
sbb
stc
pop
push
push
push
adc
les
imul
inc
das
out
imul
icebp
scas
cli
cmpsb
xchg
sub
push
push
xchg
imul
je
fdiv
push
stos
mov
xchg
gs
popa
scas
sbb
and
add
mov
in
xchg
jae
xor
fdivrs
iret
dec
mov
xorb
sub
sub
cld
aas
jl
xchg
xor
and
mov
or
xor
xor
jne
inc
int3
fdivrl
movb
pop
inc
sub
cld
inc
fmull
push
popf
ds
inc
xor
mov
add
mov
in
hlt
mov
into
or
arpl
jge
pop
pop
jbe
frstor
in
mov
xchg
lea
lret
fdivrs
jnp
jg
push
jbe
stc
and
popa
xchg
test
mov
jae
lret
arpl
enter
cwtl
je
mov
and
and
fcmovnu
loop
leave
fwait
aas
adcl
xchg
mov
xlat
in
pop
mov
lock
sbb
ficoml
xor
in
les
ja
mov
and
movb
mov
repnz
int
inc
push
sbb
push
test
sub
pop
in
sbb
in
and
push
sbb
cmp
mov
arpl
xchg
shrl
sbb
insb
cmp
popf
loopne
xchg
xor
or
push
nop
pop
xchg
rcl
or
lret
lahf
mull
fwait
shr
in
and
xchg
mov
pop
cmp
mov
dec
jecxz
mov
mov
pop
into
push
sub
jns
arpl
jae
cmp
dec
pop
mov
out
push
jmp
add
aam
sbb
push
adc
add
or
aad
sub
mov
cmp
add
xchg
fsubrs
add
mov
adc
loope
test
mov
aaa
aam
ret
mov
sbb
les
sbb
xchg
aad
ds
pop
dec
xor
add
lds
pop
loop
jp
imul
add
cmpsl
xchg
jne
xor
clc
aas
push
sub
sbb
add
outsb
mov
fsub
repnz
sbb
dec
xor
and
out
or
test
xchg
nop
dec
jle
out
or
js
dec
loop
xlat
push
das
nop
adc
enter
sub
push
outsb
sbb
cld
ret
mov
sbb
xchg
loop
scas
ds
cltd
push
mov
adc
xchg
in
sbb
fnstsw
mov
mov
jl
lahf
sub
push
jnp
inc
xchg
xchg
cmovge
out
cmp
outsl
ss
add
dec
jns
dec
les
push
dec
cmp
divl
mul
cmp
arpl
xchg
xor
and
mov
pop
push
cmc
stos
mov
add
sbb
ds
jae
and
and
xor
sbb
mov
lea
jl
scas
xchg
pop
add
into
mov
and
lods
gs
ljmp
flds
mov
je
xor
add
popa
jmp
loopne
sahf
stc
add
stc
es
adc
mov
inc
add
fwait
out
jmp
repz
pusha
push
mov
mov
mov
push
xchg
inc
mov
mov
xchg
mov
lahf
push
push
pop
hlt
dec
js
mov
test
jns
mov
mov
fmuls
loope
movsl
cmc
sub
enter
ljmp
sub
repnz
push
cmp
scas
movsl
ljmp
xchg
jl
int3
push
cmp
clc
fld
xor
out
xchg
hlt
sub
icebp
xchg
xchg
imul
cmp
jl
sbb
sbb
fmulp
cmp
addb
cmp
xor
adc
xchg
jbe
pop
das
popf
ja
lock
enter
mov
imul
std
xchg
sub
inc
clc
xchg
sahf
push
cmp
notb
sbb
icebp
mov
adcl
push
fsubr
pop
loopne
xchg
repz
jg
pop
mov
pop
orb
inc
sbb
sbb
aam
or
inc
stos
test
fwait
sub
or
lahf
aad
jl
call
xchg
fisubrl
adc
clc
ret
pop
pop
ljmp
jne
stc
or
js
mov
shl
stos
or
loop
pop
sbb
jl
ret
fstl
add
pop
adc
lods
lock
stos
movsb
cs
js
test
pop
inc
out
and
mov
inc
jl
std
push
adc
je
sub
pop
daa
test
jns
adc
push
mov
es
jne
fcoml
scas
cltd
dec
out
aas
or
or
loop
push
xchg
inc
lcall
adc
scas
push
pop
mov
lock
mov
repz
in
sub
imul
aaa
jecxz
or
notl
shl
in
mov
fnstcw
nop
xchg
ss
in
push
cld
addr16
call
lret
cmp
jge
in
lahf
aad
or
inc
pop
lods
nop
sbb
in
jo
mov
aas
inc
lcall
jp
popf
jge
xor
movsb
cwtl
gs
jg
sub
cmp
cmpsb
idivb
movsl
push
jne
movsl
dec
aam
xchg
and
movsb
enter
aaa
ds
mov
push
xor
push
xchg
pop
inc
aas
jmp
les
cwtl
jmp
inc
sti
in
sub
adc
int
and
lea
pushf
sub
rolb
insb
enter
mov
sbb
das
mov
mov
xchg
push
bound
cltd
sub
mov
xchg
xor
int
nop
negb
call
test
pop
ret
outsl
ljmp
jp
or
sub
test
arpl
mov
push
js
cmc
fdivr
mov
mov
cmpb
sbb
inc
fidivrs
jle
xor
out
push
repnz
push
inc
js
adc
push
push
jl
xchg
out
ficomps
mov
dec
add
adc
mov
jecxz
jecxz
jp
movsl
push
adc
push
pop
sar
push
push
iret
mov
insb
mov
mov
pop
mov
fiadds
stos
and
or
xchg
dec
sub
xor
sbb
insb
mov
push
addb
mov
fnsave
adc
test
cli
jbe
adc
ficompl
or
push
gs
cmp
and
and
adc
pop
fucomip
inc
mov
mov
test
jle
adc
js
xchg
sbb
mov
push
shrb
repnz
and
jb
cmp
xlat
addr16
cmp
sbb
js
sub
or
inc
xchg
js
fxch
lahf
lret
adc
cmp
idivb
pushf
push
push
and
cmpsb
mov
push
push
pop
and
sbb
je
sbb
bnd
out
xchg
out
aam
shlb
mov
pusha
lret
fdivrs
push
sti
jmp
push
test
fwait
sub
mov
sbb
outsb
xchg
into
jns
int3
pop
imul
push
sub
rclb
lods
pop
je
mov
jmp
mov
fnstenv
std
add
int3
and
add
sub
mov
fwait
mov
scas
cmp
jnp
mov
imul
cmp
movsb
mov
icebp
cmp
test
test
mov
xor
pusha
fstl
outsb
popa
mov
filds
shrl
adc
stos
pop
test
dec
xor
test
cs
mov
cmp
shrl
and
pop
lock
loope
pop
rcll
sub
sti
sub
pusha
loopne
stos
test
and
mov
xor
inc
sahf
int3
cmp
cli
out
inc
andl
movsb
ja
aad
rorb
lahf
cld
xchg
mov
push
mul
in
jb
pop
or
cmpsl
js
mov
rclb
fwait
or
jns
addr16
lods
sub
add
mov
in
mov
outsl
mov
dec
in
inc
sbbb
into
loop
hlt
inc
sub
jo
add
dec
dec
xchg
cwtl
sti
and
loop
jbe
ja
xlat
jno
out
out
and
push
loopne
mov
cmp
aam
int3
or
mov
clc
fs
cmpl
push
fcmovnbe
aam
lret
dec
pop
cmp
dec
cmp
dec
in
or
sti
shrb
je
dec
mov
xchg
inc
cmp
cmp
add
or
fs
dec
outsb
adc
jns
inc
ljmp
pop
pusha
sbb
out
cmc
mov
mov
lods
insb
cwtl
adc
xchg
dec
pop
jns
repnz
push
lea
push
aam
pushf
inc
aam
cmpsl
repz
mov
fs
sbb
hlt
imul
sti
push
js
mov
aaa
push
mov
es
gs
push
push
pusha
int
xor
enter
inc
insb
mov
scas
movsb
jecxz
push
jecxz
aaa
test
mov
sub
jne
fisttps
iret
xchg
outsl
pop
stc
rcll
sub
inc
js
sbb
insl
add
rorl
push
lods
xchg
sahf
pop
lcall
lcall
inc
in
dec
dec
cmpsl
lods
mov
cmpb
mov
xchg
std
lea
adc
jmp
sbb
jns
push
jp
popa
leave
jo
sub
jecxz
mov
nop
mov
int
add
sbb
aas
addl
mov
sbb
test
lret
push
sbb
fcoml
dec
pop
fbld
outsl
into
aad
neg
clc
sub
sbb
sti
sub
test
es
sbb
add
ljmp
enter
shrl
push
sub
fcompl
mov
dec
dec
outsb
nop
dec
push
scas
sbb
add
xchg
push
out
fsubs
jae
or
adc
mov
fwait
lods
inc
xor
jl
shrl
push
out
cmp
lds
jbe
jb
ja
mov
push
rcrb
insb
inc
mov
add
or
fidivrs
fidivrs
jne
divb
pop
dec
push
gs
ss
pop
loopne
inc
sbb
ljmp
flds
je
inc
fnstsw
sub
lea
test
lock
xor
adc
hlt
push
ficoms
es
jbe
adc
and
mov
subl
cmp
or
adcb
mov
lods
fadds
and
faddl
leave
adc
div
pop
repnz
mov
inc
add
fldln2
sub
push
jg
test
mov
inc
dec
jb
bound
mov
ja
xor
xchg
jbe
stos
frstor
repnz
clc
icebp
sbb
xchg
repnz
add
push
test
ficomps
add
iret
adc
aaa
xchg
or
cmp
lods
out
in
in
call
add
cld
inc
adc
push
in
cmp
fs
jo
inc
or
rcr
mov
sub
scas
jmp
pop
out
fwait
sub
lock
das
in
mov
mov
mov
ja
xchg
outsb
mov
mov
idivb
xchg
pop
sarl
mov
jl
adc
dec
add
test
lds
pop
and
sub
jl
xchg
inc
mov
das
pop
inc
lock
dec
push
ja
notl
cmpsl
push
rolb
outsb
fdivr
jno
cwtl
push
cld
in
mov
mov
mov
xor
cmc
sub
imul
add
imul
cmp
mov
sbb
add
jmp
push
pop
inc
push
insb
and
sub
enter
shlb
lods
movb
mov
mov
jne
pushf
andb
jle
fldcw
mov
pusha
xchg
das
insl
add
lahf
popa
sub
fs
stos
mov
push
gs
or
inc
jmp
popf
std
cmp
imul
in
pushf
jl
sti
mov
imul
hlt
popf
xchg
lea
mov
lds
mov
lods
js
pop
inc
cmp
test
ret
push
or
xlat
add
push
pop
loop
mov
add
push
rcrl
add
sub
mov
iret
nop
xor
js
mov
insb
int
cmp
pop
divl
push
jne
cmpsb
iret
hlt
xor
push
das
jns
test
jl
repz
add
faddl
divb
jle
xchg
inc
fimuls
outsb
sahf
jns
inc
pop
sarl
jno
dec
add
push
loop
pop
test
mov
movsl
idivb
sub
bound
test
sahf
hlt
cmpsl
iret
and
cmp
clc
into
jl
or
xor
iret
pop
jno
ja
lahf
out
fiaddl
rcr
mov
test
jbe
cmp
into
mov
dec
sbb
add
or
insl
cmp
scas
mov
cwtl
in
cmp
loop
add
sbb
in
mov
and
mov
shl
fwait
aaa
je
idivl
test
inc
mov
lret
sub
fcoms
fwait
arpl
outsl
ret
and
repnz
scas
sub
je
or
nop
fcomip
mov
sbb
mov
daa
sub
mov
movsb
adc
dec
cmc
add
push
mov
mov
jecxz
insb
jecxz
sbb
dec
shl
clc
pusha
adc
jno
push
add
das
icebp
ds
imul
in
cmpl
mov
pop
push
cmc
mov
clc
jle
pop
aam
in
add
fimuls
jl
adc
and
daa
gs
xchg
int
test
and
add
ljmp
mov
xchg
loope
mov
jo
xchg
stos
popa
movsb
mov
xor
repz
adc
add
mov
in
scas
out
sbb
mov
adc
push
lods
sub
aad
lods
loopne
mov
xor
subl
push
xor
pop
mov
push
adc
pop
push
pop
pop
ljmp
cmp
xor
xchg
push
jno
lahf
cmp
movsb
sub
mov
mov
jb
adc
ds
inc
and
xchg
out
cmp
add
jg
shl
xor
cmpsb
adc
aam
aam
cmpsl
out
icebp
loop
outsb
outsl
sub
sbb
dec
aad
jae
jns
fcompl
pop
sub
xor
stos
ja
ljmp
fsubs
adc
insb
popf
mov
sub
jb
mov
ljmp
out
lcall
mov
xchg
inc
xor
jecxz
and
xchg
ljmp
imul
sbb
xchg
int
imul
add
out
bound
inc
out
cmp
mov
jg
cwtl
dec
pop
aad
mov
stos
int3
sub
add
inc
mov
das
cmpsb
cld
jg
pop
sarl
test
test
push
fimull
pop
mov
and
inc
ss
mov
mov
mov
das
js
mov
mov
nop
lods
inc
or
stos
iret
mov
data16
xchg
push
int3
dec
push
pushf
add
and
push
adc
rclb
jo
mov
mov
out
push
sub
pop
pop
mov
inc
out
mov
movsb
and
and
idivb
inc
adcl
into
jge
dec
and
adc
pop
pushf
pop
leave
mov
mov
out
dec
cmc
je
adc
stos
push
adc
rcrb
mov
outsb
jge
jl
mov
or
xor
test
shlb
cmc
push
and
es
bt
inc
add
fisubrl
subl
cld
inc
xor
xor
scas
cmp
xchg
lahf
pushf
push
xchg
jle
jle
movsb
cmp
mov
inc
fsubrs
lods
test
xchg
je
fisubrl
cmp
dec
and
imul
orb
fwait
sbb
sub
cmp
jb
jge
push
pop
cs
jnp
adc
xchg
aam
pop
inc
sarl
add
push
int3
or
inc
std
js
push
les
std
nop
xchg
mov
out
jae
leave
mov
pop
subb
inc
mov
mov
mov
pop
mov
inc
stos
add
mov
in
insl
xchg
xor
sti
jle
mov
lcall
int3
lret
repz
push
mov
sub
cld
mov
stos
fwait
jecxz
sarb
mov
adc
and
push
loopne
int
dec
in
mov
shrl
scas
js
adc
or
and
mov
or
jle
sbb
mov
das
xor
mov
mov
shlb
mov
out
or
push
aad
stos
adc
mov
inc
cmpsl
div
shlb
mov
imul
mov
jb
jb
jns
sub
js
xchg
ret
inc
or
sub
push
inc
sub
mov
test
xor
xchg
leave
rorb
or
push
je
outsl
dec
cmp
mov
shrl
addl
and
adc
mov
enter
cli
js
jl
mov
clc
ret
or
cmp
mov
nop
and
mov
into
cmp
xor
sbb
xor
fildll
fstpl
inc
mov
pop
cmp
rclb
into
outsb
insl
subl
inc
into
push
xor
data16
push
cwtl
cmp
scas
cs
scas
jg
call
ljmp
icebp
iret
subb
mov
add
sub
cmp
inc
add
popa
jg
push
cmc
notb
data16
add
or
cmpsl
addb
sub
imul
xor
xor
in
push
pop
jne
gs
addr16
dec
sbb
ljmp
mov
fstpl
push
sub
ljmp
cltd
cmp
and
ja
les
cmp
aam
xchg
jns
cmp
cld
push
or
cltd
sahf
shlb
xor
sti
and
movsb
pop
mov
inc
jle
add
jo
push
aam
rclb
xchg
cmc
mov
bound
gs
mov
or
sub
mov
or
ret
pshufw
repnz
cmp
cmp
inc
jbe
imul
cmp
aad
std
and
sbb
xchg
cmp
out
sbb
mov
push
adc
addb
mov
xlat
adc
pop
ret
and
add
mov
cmp
rcrb
popa
mov
es
pop
adc
sbb
mov
cmp
fdivrs
pusha
push
xor
adc
push
in
mov
adc
insl
xor
xchg
push
and
std
pusha
aas
and
stc
xor
jecxz
mov
jnp
out
lret
rdmsr
pop
xchg
ficompl
jne
xchg
bound
ficomps
pop
xlat
or
xorl
xchg
inc
stc
xor
in
push
cwtl
or
pusha
xor
or
add
je
fisubrs
dec
je
or
rolb
pop
push
scas
andl
enter
iret
and
test
out
mov
xchg
shll
sbb
fiadds
sbb
mov
mov
js
pop
gs
shll
mov
test
movsl
and
push
pop
ret
andb
mov
dec
xchg
lea
pop
jmp
and
std
mov
out
mov
add
mov
ljmp
arpl
xchg
pop
push
jg
pop
sahf
xor
jecxz
lds
arpl
mov
dec
enter
sbb
popa
in
push
cmp
enter
arpl
pushl
xchg
popl
push
sub
or
dec
hlt
roll
cltd
in
jnp
pop
and
mov
call
lock
lods
movsb
ret
lret
lea
stos
ljmp
rorl
pop
xchg
xchg
cmpl
iret
sarb
pushf
lods
jne
popf
movsl
sbb
mov
fldenv
cld
dec
mov
int3
pop
xchg
or
mov
test
or
fbstp
nop
sti
dec
xchg
insb
fmuls
les
xlat
sub
testl
in
enter
sub
xor
stos
popa
in
jl
andb
add
leave
stc
adc
push
sub
aam
adc
icebp
xor
orl
add
nop
xor
cmp
sub
and
pop
into
push
inc
stos
das
sbb
push
jnp
mov
jns
popa
push
jne
push
mov
stos
iret
xchg
ljmp
nop
icebp
push
cltd
ret
out
pop
outsb
pushf
adc
outsb
call
mov
fsub
push
rcrb
das
ljmp
imulb
mov
xchg
arpl
aas
mov
push
test
imul
and
bound
or
aas
das
add
shl
jg
lret
popf
mov
inc
cld
mov
enter
movsl
daa
shr
or
scas
dec
xchg
mov
jle
adc
mov
pop
adc
mov
inc
aam
rcl
arpl
repnz
test
mov
inc
mov
add
add
mov
sbb
jecxz
or
scas
out
into
jae
lret
jmp
adc
push
movsl
xchg
movsb
mov
imul
int
pop
iret
scas
dec
add
cwtl
mov
inc
add
aaa
cmpsl
insl
lods
mov
sbb
lahf
sbb
into
hlt
pop
outsl
jle
mov
cmp
xchg
mov
push
sub
jle
inc
dec
and
push
icebp
cli
sub
addr16
mov
xor
stos
es
aas
int3
fcoml
int
mov
fists
in
push
mov
sub
ja
adc
shll
clc
adc
pop
mov
lret
rcr
lcall
jnp
jg
imul
mov
sbb
cmpsb
mov
in
xor
mov
lods
mov
jmp
jp
fs
jg
xchg
pushf
popf
xchg
inc
push
lds
arpl
fsubrs
sbb
cmp
push
xchg
mov
popf
int
mov
mov
repnz
js
orb
pop
lods
xor
mov
add
sbb
push
push
fwait
dec
mov
imul
mov
xchg
mov
cmp
ljmp
adcl
nop
push
and
and
jp
mov
xor
in
push
mov
dec
das
shlb
mov
sub
cmc
add
sbb
test
fadds
jo
jnp
mov
dec
xor
push
popf
repnz
xor
leave
xor
cmp
mov
sti
daa
lret
xchg
mov
gs
orl
out
pusha
inc
dec
bound
cmp
and
xorb
cli
test
sbb
call
add
lcall
cmp
js
idiv
in
jecxz
cmp
push
mov
sbb
jbe
in
hlt
cmp
pop
lahf
xlat
inc
mov
and
xor
in
xchg
lret
scas
jle
fwait
js
gs
fistpll
int
insb
adc
ret
repz
arpl
pop
popf
sub
scas
push
mov
in
or
mov
push
cmp
cmp
data16
sbb
les
mov
inc
jb
cmpsb
and
add
cs
sub
out
les
movsl
mov
mov
pop
pushf
and
gs
add
insb
dec
pop
jae
test
lahf
lock
sub
fwait
into
out
push
jbe
jl
outsb
push
push
mov
jo
jae
rclb
sub
inc
test
pushf
loope
hlt
pop
lea
subb
push
jecxz
fistl
fidivrl
jae
divb
icebp
lahf
dec
adc
pop
aas
scas
cmc
dec
add
mov
mov
add
mov
das
aaa
hlt
mov
pop
sbb
cmp
adc
pop
test
mov
sbb
jne
popl
pop
movb
sarb
scas
fcoms
rorl
inc
pop
jne
inc
jg
xor
xor
clc
orl
push
fwait
call
adc
sbb
pop
and
in
or
push
jno
mov
sbb
scas
jle
jo
sub
out
int
imul
shl
push
dec
lret
adc
outsb
add
add
dec
es
pushf
mov
pop
out
test
pop
dec
mov
inc
movsb
lret
fwait
xchg
or
jge
ds
pop
mov
fcmovbe
ret
mov
aaa
dec
inc
stos
fnstcw
sbb
ds
stos
scas
sbbb
add
jmp
jb
sbb
adc
pop
popa
movsl
cmp
dec
push
xchg
and
pop
les
lret
loopne
jne
lret
pusha
aam
cmp
pop
pusha
pop
sub
fwait
call
sbb
dec
aam
adc
cmp
gs
xor
xor
push
rorb
data16
fbld
jmp
loopne
mov
lret
mov
push
sti
cld
mov
sahf
imul
test
or
sarb
dec
fnstenv
push
mov
pop
push
and
mov
movsb
adc
push
xchg
jb
jp
or
pop
les
or
xor
pop
xchg
and
lods
or
shlb
inc
aaa
jns
pop
xchg
int
clc
push
and
orl
lcall
adc
dec
test
adc
dec
test
incb
fdivr
push
cwtl
jmp
int3
stos
fdivr
sbbl
cmp
repnz
mov
loope
cmp
inc
cwtl
xor
cmpsl
dec
adc
clc
xchg
fldl
mov
repz
subb
int3
mov
movsl
pop
out
sbb
sbb
insl
mov
imul
push
sbb
ss
shrl
xchg
out
xlat
adc
push
add
pop
ret
pop
xor
xor
dec
iret
fbld
inc
test
cltd
cmpsb
rcrl
mov
mov
jae
fnstcw
pusha
jae
xor
loopne
aaa
fistpll
in
iret
mov
xchg
mov
rclb
cmp
inc
mov
cmp
vmovhps
pushf
mov
xchg
shl
mov
movzwl
loopne
inc
xor
sarb
sbb
xorb
jge
cltd
imul
fisubrs
sahf
das
adc
aaa
xor
mov
jo
inc
fwait
jnp
outsb
pop
push
test
addr16
fstpt
jge
and
add
mov
inc
dec
pop
mov
dec
dec
test
cmp
movsl
xchg
push
jb
lcall
shrl
fucomp
sti
add
add
push
incb
out
test
cmpsl
or
sub
pop
pushf
push
ds
cwtl
push
push
push
iret
aaa
scas
mov
stos
insl
sub
jbe
jg
and
sub
or
cli
insl
rclb
mov
xorl
or
mov
sub
fnsave
xchg
jmp
int
mov
and
int3
pop
mov
into
pop
inc
stc
out
in
mov
mov
into
dec
adc
pop
rclb
std
mov
xorl
enter
dec
pop
dec
rcl
jg
jo
in
jno
stc
test
lods
jbe
adc
popa
inc
andb
mov
fdivrl
addr16
mov
outsb
out
mov
fcompl
std
in
aas
lods
loope
dec
addr16
dec
and
aaa
mov
sbb
dec
push
cmp
push
out
add
xchg
lock
xchg
mov
ds
je
cmp
sub
sbb
jl
out
push
addr16
divb
nop
add
sbb
insl
dec
decl
cmpsl
add
int
fldl
packssdw
dec
dec
push
inc
pop
xor
add
mov
cmpl
jle
outsl
mov
inc
push
dec
jmp
into
mov
lods
outsb
frstor
pop
push
and
add
push
jge
lret
aam
and
mov
mov
inc
filds
loopne
sub
push
sbb
inc
sbb
shl
dec
lcall
sub
jp
lret
pop
outsb
xlat
lds
push
gs
imul
mov
icebp
divb
mov
mov
lds
mov
add
and
mov
sub
dec
xchg
dec
cmpsl
pop
leave
cs
xor
inc
lods
pop
insb
cld
in
negl
mov
add
mov
clc
popf
sbb
out
cmpsb
mov
lods
ficoml
xor
les
ljmp
and
mov
loope
popf
mov
mov
shl
hlt
leave
imul
je
ret
out
pop
or
cmp
xchg
jb
shl
sti
fcoml
bnd
cmc
dec
dec
lds
dec
pop
call
daa
popa
mull
pop
int
mov
xor
je
inc
pop
or
je
push
dec
mov
mov
std
jmp
mov
mov
push
adc
outsl
sbb
stc
arpl
push
shlb
stc
fistl
and
fwait
insl
leavew
andb
and
scas
push
test
mov
popf
pop
test
nop
aam
xchg
xchg
aaa
sub
and
dec
xchg
jg
jns
adc
loope
mov
pop
std
push
pop
in
push
stos
sub
dec
pop
shlb
clc
mov
cs
bound
or
hlt
js
push
xor
push
or
aam
xchg
scas
aas
cs
jle
aas
stc
inc
xchg
mov
movsb
adc
push
lret
xchg
mov
mov
pushf
push
stos
or
sub
cmpsl
xlat
rcrl
xor
or
nop
pop
dec
es
cwtl
push
je
adc
imul
ljmp
sub
les
jge
pop
pusha
test
pop
fisttps
sbb
aas
cmp
ret
cmpsl
adc
das
incb
jg
nop
pop
cli
sub
add
adc
je
outsb
push
pop
adc
scas
out
fbld
xchg
add
mov
fsubs
mov
and
pop
jp
xor
add
gs
insl
mov
push
xchg
jle
jmp
adc
mov
pop
and
push
push
adc
jb
pop
cmp
pop
mov
cmp
sub
mov
inc
aas
stos
dec
mov
int3
push
leave
jl
sbb
hlt
sti
ljmp
mov
fwait
je
push
js
xadd
mov
mov
hlt
xor
mov
xchg
add
cwtl
shl
mov
pop
into
das
xlat
or
mov
sbb
sbb
pusha
pop
add
inc
rorb
push
fidivl
int3
shrb
push
test
into
cwtl
pushf
movsl
lcall
dec
mov
push
pop
pop
shl
mov
inc
cmp
in
sbb
jo
cmp
movsb
push
dec
in
pop
lods
stos
inc
lret
sub
out
fmulp
ds
push
mov
xorb
cmp
pop
out
inc
stc
push
lret
aas
sub
fistpll
jmp
mov
dec
sbb
and
mov
fwait
js
add
sarl
sbb
add
dec
cmp
int3
jb
leave
mov
subb
jle
mov
xor
mov
xlat
xchg
or
cltd
mov
ljmp
nop
mov
popf
lock
mov
cmpsb
jl
mov
xlat
sbb
xor
stc
rep
dec
repnz
push
jmp
cmp
inc
daa
or
inc
fdivp
dec
xchg
sub
loope
mov
mov
int
fdivl
xor
and
mov
in
pop
cmpsl
mov
in
fcoms
push
add
outsb
push
cmpsl
adc
mov
dec
repz
jg
cld
jae
fsub
enter
adc
xchg
mov
insb
fmuls
add
lds
or
mov
push
push
jge
dec
insl
repnz
push
mov
mov
and
sub
outsl
fisubrl
jle
popf
dec
or
jmp
int
push
test
inc
pop
popf
mov
push
fxch
push
lock
inc
out
push
mov
mov
out
xchg
xchg
sbb
leave
jp
sbb
stc
test
and
cmp
pop
out
into
loopne
aas
ret
sbb
js
fwait
dec
xor
adc
push
xor
mov
aam
lahf
dec
lea
xchg
enter
clc
inc
xchg
jae
notb
scas
mov
outsl
adc
aam
inc
jecxz
sub
stos
add
mov
xchg
push
imull
add
scas
sbb
mov
cmp
in
in
daa
jne
sahf
add
mov
ss
sbb
in
xor
push
int3
mov
popa
mov
test
pop
popa
je
aas
push
or
push
xchg
and
cmpl
mov
cmp
aas
ds
daa
push
outsb
inc
das
leave
cwtl
adc
bound
aad
insb
in
pop
adc
sbb
or
sbb
adc
push
adc
mov
inc
movb
xchg
jl
and
outsl
add
push
stos
push
xor
shlb
scas
sub
test
sub
rcl
xchg
cmp
pop
cltd
lcall
cld
ret
andl
mov
or
mov
or
push
mov
pushl
out
decb
push
aam
jo
repz
add
add
sarl
icebp
movl
test
push
xchg
cwtl
add
or
mov
cmp
pop
ret
or
pop
fisttpl
push
dec
ds
out
js
stc
cmc
dec
xor
xor
outsb
xor
xchg
add
mov
mov
pop
stc
sti
movsl
dec
data16
bound
dec
or
int
mov
jnp
andl
in
pushf
icebp
stos
pop
jmp
mov
cmp
fxch
xchg
lods
bound
je
cs
pusha
cmpsl
xchg
rclb
jle
decb
xchg
jg
paddb
xor
cmpsb
stos
hlt
push
sub
in
stos
loope
movsb
out
pop
test
lahf
clc
mov
repz
out
pop
pop
call
push
sahf
xor
fidivrl
fdivrl
adcb
arpl
in
push
lock
into
shll
imul
mov
fldt
es
test
hlt
out
movsl
push
mov
jl
xor
push
test
test
das
fucom
mov
mov
adc
pushf
mov
jle
cli
mov
pop
jns
push
inc
mov
lock
int3
or
outsb
mov
shr
je
push
mov
std
scas
or
xor
dec
movsl
test
sbb
mov
ds
clc
or
aaa
mov
jle
jecxz
jge
push
jno
sub
push
push
push
pushf
push
out
jl
inc
test
iret
fildl
std
sbbb
adc
in
dec
mov
js
xor
cmp
xor
pop
xor
xorb
sub
scas
dec
cmp
repz
ret
mov
inc
mov
andb
inc
and
movsb
fs
inc
test
imul
rolb
adc
dec
mov
aaa
movsl
lds
mov
out
mov
hlt
mov
mov
mov
and
pushf
cmp
or
fwait
push
xchg
aas
sub
lahf
stc
jl
adc
or
call
xchg
cmp
pop
add
pop
fbld
and
daa
aas
sub
ljmp
test
jnp
jl
push
add
out
outsb
loopne
or
je
xchg
pop
shlb
test
xchg
xchg
jmp
push
inc
movsl
sbb
push
pop
cmp
xchg
movsl
push
scas
das
shlb
das
mov
dec
cmp
ret
fld1
sub
mov
lcall
push
xchg
dec
xor
jo
pop
gs
jns
stos
out
dec
in
jecxz
cwtl
add
and
or
lds
fwait
shlb
pop
and
xchg
xchg
test
data16
jle
push
xchg
cmpsl
or
or
mov
add
sbb
arpl
mov
pop
adc
fdiv
sbb
movsl
adc
add
rorl
pop
sub
lcall
in
bound
outsb
out
xor
int
test
hlt
inc
dec
dec
imul
stos
dec
push
jle
pop
adc
std
mov
popa
sbb
add
xchg
lea
jnp
lock
push
pop
mov
jo
adc
or
push
mov
lds
inc
jp
nop
adc
ret
or
clc
pop
in
inc
mov
sub
xchg
lcall
jecxz
lret
pop
inc
inc
jge
adc
pop
sub
pop
mov
cld
jne
mov
xchg
stos
aas
lds
ret
hlt
stos
sub
pop
add
enter
mov
sti
imul
loope
pop
adc
int
mov
dec
pop
sahf
ret
das
iret
push
mov
xor
inc
ret
push
pop
fdivp
mov
jecxz
test
insb
lahf
iret
jnp
arpl
and
std
xchg
fmull
pop
push
das
push
hlt
xor
aas
pop
jp
add
sahf
and
js
push
xor
cmpsl
inc
push
std
loop
imul
insl
mov
adcb
icebp
in
mov
jae
call
push
jmp
fstps
jl
sub
mov
xchg
add
pop
orb
outsb
inc
lret
cmp
pop
inc
repnz
int3
movl
or
push
test
inc
push
xor
xchg
ljmp
pop
fmulp
mov
dec
dec
inc
jp
pusha
imul
cs
jmp
xchg
into
xor
sub
pop
loop
es
add
movl
aad
lcall
outsl
pop
sbb
leave
imul
ffree
dec
aaa
testl
ret
mov
pop
pop
lock
fwait
jge
dec
xor
mov
js
ljmp
xor
jge
cwtl
ret
imul
push
push
lahf
enter
push
jg
aad
repz
jbe
imul
sbb
pushf
lds
mov
ffree
and
nop
xor
outsl
in
in
adc
in
arpl
mov
scas
xchg
xchg
mov
jae
and
insl
cmp
fnstcw
fidivrl
sub
int3
and
inc
out
rorb
mov
dec
mov
or
notl
lret
lahf
sub
imul
jnp
jns
add
or
pop
xchg
lods
fistl
inc
out
xor
into
sub
jo
add
in
mov
bound
shll
adcl
add
fsubl
into
and
push
lock
sub
fwait
mov
adc
aam
sub
repz
push
in
inc
jmp
int3
sbb
mov
cwtl
stos
test
pop
mov
inc
in
and
dec
xchg
aad
push
or
imul
xchg
jl
add
mov
and
push
xor
out
sub
inc
testl
aas
push
jg
adc
icebp
jl
ds
or
sarb
fmuls
dec
ljmp
in
mov
orl
xor
dec
aad
data16
inc
cmp
pop
test
arpl
lret
or
cmp
lock
mov
or
jl
jb
sbbb
dec
push
addl
js
xorb
xor
int3
orb
adc
mov
arpl
mov
adc
ret
cs
and
sbb
dec
dec
mov
cld
js
and
jbe
mov
lds
pop
ja
filds
jecxz
xor
jo
icebp
in
cltd
xor
pop
ljmp
movsw
lods
std
jg
in
in
push
inc
imul
adc
lock
cmpsb
xlat
xchg
push
cld
inc
int3
andl
mov
std
fisubl
fwait
dec
fnstsw
push
pop
xor
mov
out
mov
dec
jno
xchg
rorb
add
or
cmp
adc
xor
push
jp,pn
xchg
fdivrp
jmp
pop
mov
adc
push
shrb
int3
push
imul
sbb
arpl
cmp
fstpt
fcmovnbe
in
jp
mov
cmp
cmp
push
jno
cs
mov
bound
pop
fstpt
clc
add
mov
fisttpll
xor
rorb
fwait
sbb
aas
jg
pop
movl
pop
adc
xchg
pushf
lods
or
jns
imul
fildll
loope
push
push
mov
je
ds
add
cmpsb
and
dec
pop
test
lahf
or
lock
jp
sbb
inc
adc
sub
loop
mov
pop
int3
xor
sbb
or
ljmp
fistpl
cld
mov
fbld
add
pushf
cmp
adc
mov
or
lock
pop
push
test
adc
test
and
outsb
sti
push
aaa
cmp
fadd
out
push
test
push
or
pop
sbb
add
addl
and
pusha
cmp
adc
inc
push
repz
dec
int
sbbb
push
out
mov
in
adc
mov
loopne
jns
mov
call
nop
dec
add
mov
lea
adc
jle
mov
mov
xor
sub
cmpsb
inc
enter
mov
cmp
mov
mov
and
push
add
mov
cld
push
add
mov
gs
push
xor
out
jge
shrl
hlt
add
mov
fistl
fwait
jo
iret
loope
adc
test
outsb
out
das
push
insl
addr16
inc
icebp
adcb
cmp
sub
push
mov
sub
les
inc
aad
test
movsl
out
pop
mov
js
cwtl
mov
popf
adc
int
insl
jne
xchg
fidivl
inc
jne
sbbl
inc
sete
pop
fwait
imul
push
dec
pop
inc
jno
mov
push
cmp
xlat
dec
cld
xchg
lock
sahf
xor
movsl
xchg
jno
inc
rclb
jmp
sbb
aam
dec
movsb
test
inc
mov
mov
add
xor
mov
inc
inc
dec
push
pop
cltd
andb
mov
inc
xor
fdivl
fdivr
jle
push
dec
push
add
add
cmpsl
bound
loope
leave
or
inc
lret
addr16
push
cmp
cmp
iret
push
outsb
or
mov
repz
adc
sbb
outsb
clc
adc
in
sub
jmp
and
push
sub
imul
into
pop
inc
mov
lcall
inc
mov
aas
pop
push
shl
mov
je
aaa
cmp
ficomps
pushf
rorb
cmpsb
lods
inc
out
stos
xchg
imul
test
dec
int3
pop
out
imul
jle
add
inc
mov
fs
in
mov
shrl
in
jmp
xchg
mov
sarl
and
cmc
je
push
sub
cmp
mov
mov
sub
adc
sbb
inc
icebp
pushf
arpl
mov
loopne
fmulp
ja
daa
and
out
pop
leave
sbb
popf
out
or
dec
adc
adc
aam
xchg
sbb
and
pushf
dec
push
jbe
jo
fnsave
mov
xor
dec
sbb
jne
in
dec
pop
mov
cmp
orb
shr
cmp
add
enter
out
or
cmp
xchg
sbb
js
lock
orl
fwait
shr
mov
xor
lahf
movsb
mov
push
std
and
js
dec
sahf
sub
je
into
mov
dec
fwait
jo
cs
jle
out
cmp
lret
fstps
xor
fisttpll
jge
lret
out
push
lea
sub
jp
sahf
sub
mov
sub
jp
jmp
mov
xor
jecxz
jge
mov
pop
fidivl
cmp
lods
pop
mov
mov
das
test
fs
inc
popl
rcrl
jo
mov
pop
mov
mov
js
std
push
ffreep
mov
mov
add
xor
push
inc
nop
inc
js
or
lea
or
scas
lods
clc
mov
outsl
dec
push
mov
adc
fidivs
in
cmp
mov
pusha
test
pusha
fdivl
jno
ss
fisubl
in
std
push
stos
fnsave
push
inc
fs
imul
sarb
repz
lahf
int
ficoms
rcr
data16
cltd
xchg
cmp
pop
dec
repz
push
movsb
xor
rcrl
xor
sbb
and
das
in
cli
loope
cmp
dec
jo
cs
and
pop
xlat
pop
hlt
bound
sbbl
xor
lock
cmp
xor
push
xor
dec
test
fwait
add
push
lock
shl
sbb
push
dec
aaa
bound
fdivrp
dec
cmpsb
or
fsts
xchg
aaa
mov
pop
call
mov
mov
lret
inc
mov
call
stos
sarl
cwtl
loopne
mov
xchg
sub
test
shrl
mov
jp
adc
leave
fdivs
pop
lahf
cmp
adc
pop
dec
into
clc
adc
mov
int
and
push
inc
adc
std
cmc
adc
jno
sbb
jp
testl
mov
fwait
mov
pop
inc
add
sbbb
test
adc
push
pop
movsl
cmpb
inc
jecxz
test
fwait
mov
nop
dec
orb
pop
dec
lcall
cmpsl
cli
lahf
and
je
outsb
xlat
jns
loope
dec
inc
add
std
sbb
sub
fstpt
jg
cs
sbb
sarb
mov
shl
repz
je
xor
mov
adc
mov
pop
xor
outsb
mov
gs
jmp
sbb
xchg
arpl
and
cvttps2pi
adc
sahf
or
lods
jo
fldcw
pop
mov
icebp
mov
dec
out
sbb
idivb
or
in
in
insl
mull
cmp
or
jae
mov
shll
test
mov
fcoms
add
lea
out
push
dec
out
jne
sbb
mov
mov
add
mov
cs
push
xchg
push
es
gs
arpl
push
adc
aad
lods
nop
test
sub
xchg
mov
popf
adc
fstpl
neg
aaa
rcrb
pusha
or
addl
mov
adc
loope
mov
shll
xchg
xlat
call
xchg
loopne
push
cmp
jle
stc
icebp
lods
push
stc
push
std
jmp
insl
push
mov
nop
ret
pop
cmpsl
mov
sub
call
int3
push
push
and
sbb
cld
push
mov
pop
adc
or
loop
lea
xchg
or
fwait
dec
test
sbb
aaa
movsb
fnstsw
xchg
jo
sub
imul
push
shrb
or
cltd
add
adc
sbb
stos
movsb
push
or
push
fs
mov
out
and
mov
sub
mov
out
cmpsl
scas
test
sbb
mov
cs
movsb
adc
mov
sbb
addr16
mov
push
es
loope
push
imul
xchg
jne
out
mov
popl
int
arpl
int
mov
ss
test
jge
jl
pop
imul
pop
or
lock
jecxz
adc
mov
xor
loopne
enter
adc
and
test
cwtl
xor
push
or
cmp
test
jl
mov
sbb
cmp
aaa
push
pop
mov
lcall
outsl
or
and
aad
int
fcoml
out
or
stos
out
xchg
jp
addl
mov
aam
sbb
push
cltd
pop
dec
fwait
into
test
sub
adc
fwait
add
sti
push
inc
pop
ds
imul
jb
xchg
scas
ljmp
adc
fisubs
mov
jl
cmpsb
sub
dec
xor
jnp
imulb
mov
fstpt
scas
add
xchg
xlat
sub
mov
hlt
and
xlat
or
inc
es
xchg
inc
int
dec
pop
test
mov
jle
pop
and
xchg
fdivp
ds
das
outsl
inc
data16
jno
fadds
iret
mov
jle
and
enter
and
sub
aaa
test
imul
cmp
sbb
cmpsb
out
out
push
jnp
or
addr16
pushf
pop
int
pxor
mov
push
leave
mov
je
xchg
in
lahf
or
cwtl
ss
scas
inc
ss
pushl
jae
inc
mov
lods
mov
mov
add
sahf
xor
mov
std
in
sbb
mov
mov
push
mov
sbb
cltd
andb
rol
nop
ljmp
in
dec
inc
in
add
mov
sub
adc
or
push
xor
loopne,pn
notb
jns
jno
pop
data16
xchg
mov
fadd
lods
ret
in
add
lcall
ds
add
bound
sub
dec
adc
xlat
mov
xor
repz
xor
sahf
adc
cltd
call
jae
notl
data16
pushf
pop
aad
mov
loop
mov
jae
pop
stos
out
mov
add
sti
rcrl
sbb
aaa
xor
mov
inc
jle
jae
cld
test
and
mov
iret
or
decb
push
cmp
push
push
lock
das
jbe
cltd
sub
sub
punpckldq
mov
and
inc
call
add
lcall
cwtl
mov
xorl
xor
dec
rorl
ds
aad
imul
jns
mov
test
pop
xchg
movsl
adc
jl
mov
jge
lods
cmpsl
push
dec
ficompl
dec
dec
jg
inc
inc
popa
inc
mov
add
cmp
das
add
jb
out
sahf
shlb
and
shrb
pop
icebp
xchg
mov
sub
push
orl
push
xchg
inc
sti
dec
sbb
sub
nop
imul
ss
xchg
mov
mov
xchg
insb
loope
divl
call
pop
push
or
mov
cmovnp
push
sbb
lods
shr
adc
ljmp
and
mov
lcall
and
cmpsb
and
leave
fistps
or
xchg
sub
out
in
or
pop
inc
icebp
inc
add
in
ret
push
aam
add
rcl
aas
xor
outsl
testl
gs
arpl
aaa
or
lahf
jae
fs
jp
jg
push
pop
cmc
clc
adcb
stos
in
inc
cmpsb
das
and
inc
sub
je
sub
idivl
fisttpl
mov
and
inc
inc
cmpsl
sarl
sbb
mov
stos
loopne
mov
add
into
add
cmc
out
push
and
mov
bswap
adc
mov
jp
sub
xchg
xchg
push
xchg
fsubrl
test
test
bound
and
mov
xchg
std
sbb
sarb
stos
data16
rcrl
xlat
xchg
outsb
push
mov
movsl
ss
in
gs
aaa
or
leave
adc
int3
les
cmovne
inc
les
out
loopne
jne
lret
call
or
pushf
int3
in
into
inc
fadds
pop
ljmp
popf
xor
clc
fsqrt
pop
mov
call
stos
push
jmp
push
sub
rorb
mov
jmp
mov
ret
es
inc
subb
aad
or
pusha
mov
pop
add
mov
lahf
sbb
mov
mov
jb
enter
ljmp
decl
inc
leave
mov
mov
test
out
arpl
cmc
and
aad
inc
add
fs
xacquire
mov
sti
je
add
syscall
lds
in
sbb
shll
in
icebp
adc
xchg
pop
add
fiaddl
sub
imul
xchg
daa
test
pop
jmp
jb
dec
adc
in
mov
add
mov
pop
inc
inc
ss
mov
pusha
test
jle,pt
sub
mov
das
inc
mov
lea
push
mov
xor
mov
enter
loopne
sbbl
pop
jne
repz
movsb
mov
mov
pop
inc
jl
ficoms
mov
mov
and
pop
fstpt
popf
mov
in
add
jle
add
ljmp
pop
mov
push
cmp
js
mov
negl
popf
xchg
scas
xchg
addl
imul
push
js
jno
xchg
inc
inc
ret
or
inc
sbb
push
lock
int3
xor
gs
into
inc
in
fdivrl
adc
xlat
jb
out
xor
cmpsl
and
rolb
out
dec
add
cwtl
insl
and
cmp
adc
jae
fcmovnb
lcall
addr16
push
cs
nop
arpl
xchg
xor
push
mov
in
inc
mov
sarb
mov
movsl
aas
xchg
sub
pusha
dec
jne
mul
movsl
mov
rcrb
test
pusha
test
in
lock
out
or
push
ss
and
pop
dec
cmp
test
ret
adc
hlt
ret
adc
call
sbb
sti
scas
cmp
loopne
push
adc
data16
jg
dec
aaa
lock
add
aad
push
push
adc
dec
or
add
dec
aam
inc
jmp
mov
pop
in
sub
cmp
pop
sbb
mov
clc
push
xor
loope
push
fdivrs
arpl
outsl
sub
mov
andl
popa
jecxz
adc
jl
int3
xlat
mov
mov
int3
sub
pop
in
sub
adc
push
jg
jb
adc
jbe
cmpsl
xchg
xchg
jl
nop
and
cltd
xor
or
movsl
jbe
jo
movsb
sbb
out
mov
mov
push
sbb
dec
xchg
cmp
and
jecxz
test
inc
mov
xorl
mov
push
fisubrs
jg
cmpsl
mov
mov
test
pop
mov
ds
ret
sub
xor
jne
enter
stos
cmp
cmp
adc
enter
jg
ret
pop
into
xchg
test
pop
or
ficoms
jl
insl
pop
mov
inc
mov
xor
sbb
mov
loopne
mov
and
jns
mov
ljmp
cwtl
xorl
lcall
int3
mov
and
xor
or
imul
mov
cmc
push
mov
jae
add
leave
lret
je
lds
imul
xor
pop
jb
add
in
lds
mov
push
jae
sub
outsl
mov
int
movsl
cmpsl
pop
ljmp
or
es
jg
into
daa
or
push
cmp
add
repnz
sbb
push
pushf
cmpsb
xchg
imul
shrl
andl
inc
jmp
iret
cmpsl
mov
lcall
aas
mov
xor
push
flds
jnp
mov
sbb
sub
xor
ret
mov
and
pop
subb
loop
mov
adc
xor
pushf
cmp
imul
popa
or
sbb
rol
push
stos
push
fwait
push
ss
dec
fcoml
popf
xor
repnz
shl
inc
mov
and
mov
cmp
mov
mov
push
jp
leave
lods
repnz
jb,pn
mov
and
lret
jne
add
lcall
pop
scas
xor
adc
mov
jns
or
or
mov
cs
adc
sub
shrb
jge
inc
out
test
inc
cltd
jnp
inc
test
mov
fs
mov
notb
js
dec
stos
cmc
shrb
cmp
int3
dec
sub
push
fdivrl
inc
push
mov
stos
in
pop
pop
mov
push
mov
jns
or
add
sub
ret
dec
in
add
shll
mov
dec
popa
enter
pop
mov
xlat
cwtl
ljmp
inc
insb
lcall
cmp
imul
sub
cmp
pop
aam
ret
inc
mov
aam
and
mov
subb
stos
push
push
xchg
lret
xchg
adcb
jno
push
ss
mov
unpckhps
mov
std
cmp
incl
mov
inc
jns
ret
lods
into
pop
pop
imul
fbld
testb
sub
xchg
gs
mov
lret
je
inc
adc
ss
xchg
bound
insb
and
mov
adc
mov
sbb
and
aaa
pop
scas
mov
push
aam
cli
mov
mov
fcomi
sarb
fmuls
cmp
fsub
sbb
mov
push
inc
mov
and
pop
fcom
lds
jl
or
and
cli
mov
es
popa
push
mov
popa
insb
fmull
xor
cmpsb
xor
sub
sbb
std
inc
in
mov
mov
adc
sub
push
adc
xor
cmpsl
lret
sti
cmpb
adc
fmull
fistpll
xchg
shll
jg
mov
mov
sti
popf
sbb
mov
lods
shlb
ds
arpl
imul
xor
mov
test
adc
fbstp
loope
push
loope
sub
jg
ret
sahf
xchg
pushf
jecxz
inc
enter
sub
pop
inc
inc
mov
pop
mov
scas
push
xor
cmc
mov
mov
jbe
leave
mov
and
xchg
sub
into
push
imul
out
lcall
push
movsb
push
adc
adc
xchg
mov
dec
popa
aam
comiss
inc
dec
mov
add
add
test
and
cmp
inc
ss
lods
cmp
xor
sub
jo
fbstp
pop
in
push
inc
loop
pop
mov
mov
inc
cltd
adc
lret
xlat
push
push
sbb
faddp
pusha
jae
sub
hlt
push
jnp
out
in
cmc
loope
addr16
add
std
sub
into
std
xor
push
ficomps
mov
xchg
jae
add
fdivrs
in
mov
movups
jae
cld
mov
nop
rorb
lahf
and
cs
sbb
dec
out
popf
mov
dec
es
inc
insb
mov
decl
shr
sbb
xor
out
cmp
cwtl
roll
lahf
xor
rcl
sub
xor
andb
pop
sbb
jle
mov
outsl
and
mov
test
clc
jecxz
pushf
insb
pop
fiadds
xlat
jbe
mov
sbb
pop
dec
add
mov
jne
scas
insl
lea
jbe
jne
and
mov
std
inc
scas
mov
arpl
sub
and
cs
ljmp
adc
iret
fimull
sub
bound
push
nop
jae
clc
sub
push
int
mov
in
adcb
xchg
mov
insb
test
and
out
ret
mov
aaa
jmp
mov
fs
lret
aas
sbb
mov
shr
xor
mov
push
inc
mov
daa
je
jno
arpl
sub
pop
enter
pop
add
pop
jp
add
xchg
push
jmp
xchg
xchg
in
sub
cltd
stc
or
imul
sbbl
iret
popf
cli
lods
in
int3
ljmp
jle
dec
fwait
cwtl
adc
pop
sti
add
adc
push
outsb
ret
out
out
xor
sub
or
cmp
add
adc
pop
out
mov
pop
add
sahf
sub
push
sarb
notl
cs
xchg
ror
lds
xor
jl
lods
lret
mov
push
imul
negb
dec
pushf
jne
fs
inc
mov
nop
mov
enter
mov
and
pop
pop
bound
fidivrs
ficompl
gs
jno
xor
mov
loope
or
nop
ljmp
arpl
dec
dec
scas
imul
dec
stos
mov
jnp
lcall
ljmp
push
dec
sub
adc
push
adc
lahf
push
inc
orb
sbb
std
je
add
aaa
mov
push
cwtl
int
push
or
sbb
xchg
xchg
addr16
and
aaa
mov
mov
mov
outsb
cmpsb
mov
ror
outsb
mov
inc
sub
pop
out
xchg
push
cmpsl
jmp
cmc
or
je
ret
aad
loop
outsl
mov
cmc
iret
fwait
inc
dec
mov
xor
sub
pop
or
das
es
jno
mov
xor
jb
mov
xchg
pop
mov
rol
mov
push
push
mov
fxch
rorb
das
and
jbe
les
mov
xchg
aad
out
cmp
sub
sbb
cmp
icebp
leave
in
sub
adc
xchg
cmp
repnz
mov
mov
outsb
jmp
mov
inc
add
scas
lods
push
adc
pop
inc
fisttps
in
push
xchg
leave
jle
clc
xchg
cmc
aaa
fwait
enter
adcb
push
fisubs
and
ljmp
stc
xchg
cmp
jae
outsb
sub
lret
inc
out
mov
or
xor
sbbb
ljmp
cltd
outsb
mov
push
stos
push
les
pusha
aas
scas
loope
push
xchg
mov
jl
pop
adc
addr16
mov
cmp
jae
push
jne
subl
add
mov
jle
adc
mov
gs
bound
stos
or
fisubrl
jge
aas
je
mov
push
cmp
or
loope
andb
shlb
rorl
call
lods
ds
xchg
sub
cld
xor
das
addb
pop
nop
shlb
bound
and
push
loope
in
dec
pop
imul
push
cmp
addl
jns
pop
stos
cli
insl
or
fmull
sub
or
ljmp
add
mov
scas
push
mov
test
mov
lret
sarb
push
rcl
xchg
in
jge
dec
gs
jl
pop
pop
dec
adc
pop
rolb
movsb
cld
lahf
jno
mov
aam
xor
add
pushf
das
xor
es
mov
iret
mov
pop
outsl
mov
pushf
scas
mov
pop
fwait
pop
filds
adc
pop
ja
inc
das
mov
dec
test
or
mov
pop
std
pop
xlat
sbb
pop
mov
jp
mov
fxam
mov
loop
xchg
stos
push
or
pop
jle
fdivl
cltd
push
test
std
lea
jg
mov
rol
iret
push
movsl
out
jmp
dec
sarl
jl
cmpsl
sub
jle
xchg
flds
push
pop
and
cmp
jbe
jle
push
mov
popf
jne
leave
dec
pop
pusha
push
or
out
in
or
and
loopne
mov
mov
adc
sti
add
sbb
xlat
push
popf
dec
popf
and
aad
cmc
inc
pop
hlt
repz
mull
popf
lret
sbb
enter
fmul
test
fistl
cmp
lods
outsb
and
arpl
pop
pop
mov
jne
mov
pusha
loope
stos
repnz
push
ss
xor
sbbb
xlat
aas
inc
adc
push
xchg
ficoml
jp
mov
or
pop
sbb
add
adc
and
sti
jmp
jmp
cli
pusha
sbb
insb
fiadds
mov
lahf
stos
out
lret
add
add
xorl
xchg
les
cmc
sub
xor
jle
mov
int3
add
mov
sbb
jecxz
seto
sbb
jecxz
inc
pop
rorl
push
lahf
or
insl
mov
xchg
mov
outsl
cmp
mov
lods
adc
add
or
into
pop
add
sub
pop
outsl
jbe
adc
mov
push
aas
mov
ficompl
movsl
lret
sub
test
data16
or
fwait
orl
lods
roll
stos
xor
or
cli
jmp
push
sahf
rcll
xchg
adc
mov
test
or
jge
inc
enter
stc
add
jmp
pop
rcll
mov
in
mov
cmpsl
cld
call
push
add
xchg
lea
mov
push
lock
lret
sti
shlb
cmp
sub
arpl
xor
push
inc
fldenv
inc
add
add
push
add
add
dec
add
mov
sbb
adcb
push
shrl
dec
test
mov
leave
pusha
insl
gs
ja
das
cltd
lahf
or
inc
dec
mov
roll
pop
jns
push
mov
mov
add
repnz
neg
dec
js
xchg
inc
loopne
cmp
sbb
fstps
rcr
in
fisttpll
jbe
daa
cltd
jmp
inc
sti
mov
mov
inc
outsl
jle
ds
xor
jae
and
in
push
mov
sub
push
xor
pop
scas
add
jo
cmp
imul
loop
shll
inc
or
cwtl
insb
rolb
sbb
inc
negw
fsubr
sti
fnsave
js
push
sub
ljmp
ds
or
repnz
and
jb
lds
stc
sbb
mov
lea
aaa
cmp
rclb
or
scas
xor
sub
data16
add
movsl
push
scas
jo
mov
adc
and
mov
iret
pop
xor
jecxz
and
add
mov
dec
dec
dec
ljmp
ja
and
lret
pop
pop
pop
lret
add
hlt
xor
adc
fwait
insl
cmp
mov
in
cmp
push
das
xchg
fstps
movsl
into
clc
dec
lds
or
in
in
xchg
insl
dec
lcall
push
std
mov
push
cmc
ss
loopne
dec
sub
test
mov
dec
jg,pt
sbb
xchg
or
adc
gs
jo
in
popf
jns
adc
cld
mov
cwtl
pop
mov
and
aas
outsl
sub
xchg
int
mov
or
subb
adcb
cmp
mov
adc
jmp
ss
pop
outsl
or
xchg
add
ss
jo
push
mov
xchg
xchg
jl
cmp
cmc
mov
mov
test
in
jb
repnz
mov
mov
in
loopne,pn
test
js
rep
aad
lods
cli
mov
ss
incl
mov
adc
inc
mov
fldl
outsl
mov
lahf
mov
or
int
dec
xchg
jle
mov
xchg
push
out
cmp
lea
loop
dec
or
cmp
xor
icebp
loope
imul
jp
mov
in
mov
pop
into
mov
push
adc
xlat
inc
daa
xorb
push
push
jl
mov
insl
adc
adc
and
gs
mov
fildl
sub
shlb
jg
sub
shll
xchg
aam
add
push
sub
dec
mov
sub
jmp
loope
mov
dec
push
ret
sbb
xchg
fwait
xchg
addr16
xchg
pop
mov
adc
leave
mov
ss
mov
leave
jne
add
in
test
cmc
test
insb
pop
leave
sub
movsl
loopne
xor
cmp
jb
pop
ret
mov
jbe
les
bound
push
push
add
test
rcll
jp
xor
frstor
pop
cld
or
iret
xchg
dec
or
or
cmc
je
cld
pop
xchg
adc
loop
clc
xor
testl
leave
cs
ds
pop
pop
mov
fldt
lea
je
jg
out
jp
lret
lret
stos
outsl
dec
push
loope
ror
push
pushf
jl
addr16
inc
or
das
xchg
cltd
aad
scas
xchg
popf
push
shll
fwait
add
sarl
aas
jle
adc
imul
xor
cmp
movsl
xlat
xor
int
xchg
inc
xchg
inc
push
jmp
arpl
iret
fisubl
int3
in
mov
jmp
les
dec
movsl
and
xor
mov
movsb
out
xor
push
mov
clc
test
pop
test
pop
out
idivb
lcall
xlat
pop
cs
call
in
jge
sti
in
inc
inc
xor
and
push
cmp
hlt
lods
mov
mov
xchg
sbb
mov
jl
cld
mov
cmp
je
or
shl
add
push
outsb
and
add
pop
aas
pop
jg
pop
ds
mov
push
popa
stos
dec
sbb
or
mov
xor
dec
shlb
sbb
pop
inc
mov
and
pop
mov
mov
arpl
mov
push
cmpsl
mov
adc
data16
mov
push
dec
xlat
mov
sahf
jl
pop
hlt
jge
pop
div
cld
mov
jmp
mov
lcall
dec
xor
inc
loopne
ficoms
cwtl
cmp
orl
xchg
imul
jo
jmp
sbb
test
jl
push
sub
push
fcmovnbe
sbb
jecxz
mov
jmp
flds
cmc
xchg
loop
adc
pop
sbb
gs
loop
push
mov
add
je
mov
add
fdivrl
ljmp
icebp
in
mov
sub
dec
or
movsb
enter
or
push
mov
arpl
xor
fmull
sahf
cld
pushf
and
mov
xor
adc
add
cmp
inc
xor
add
mov
or
mov
push
lds
cmp
into
jne
pushf
cmc
aas
daa
adc
push
jo
arpl
in
lcall
fs
or
push
gs
add
jns
sbb
imul
push
sub
lret
pop
ret
mov
aas
and
add
sti
js
lods
sbb
mov
add
mov
dec
dec
fwait
lret
rcl
push
mov
outsl
sub
dec
mov
pushf
ret
push
mov
pop
leave
sahf
xchg
xor
lods
sbb
mov
loope
bound
fsubr
lds
push
cmp
jl
scas
pop
aam
mov
jmp
or
sahf
push
cmpl
pop
ret
sahf
ret
mov
inc
pop
xchg
ss
in
sub
push
or
xchg
cmpsb
in
test
repz
xor
xchg
fsubs
mov
xor
lock
cltd
cld
xor
xchg
stc
stos
xor
and
fidivs
stos
fcomps
fld
clc
ds
outsb
aad
pop
xchg
hlt
loop
gs
mov
mov
dec
jle,pt
ja
mov
sub
and
mov
int3
lods
pusha
inc
jle
imul
push
sti
popa
int
sahf
pushf
adc
lar
repz
out
cmp
xchg
mov
popa
icebp
inc
enter
add
push
shlb
xchg
adc
jne
sbb
stos
ret
stos
mov
imul
xor
and
icebp
ret
sti
mov
les
mov
inc
inc
push
inc
xchg
mov
inc
mov
mov
sbbb
mov
mov
sbb
fisttpll
inc
imul
fists
out
mov
sub
aad
out
ss
and
jecxz
or
and
adc
adcl
das
hlt
xchg
add
xor
shr
jae
jle
jns
cmp
jmp
push
fiaddl
insb
out
lods
mov
mov
dec
js
je
jmp
cmp
lods
push
mov
ret
mov
hlt
xor
mov
or
inc
adc
pop
fwait
inc
test
mov
inc
sbb
outsl
xor
sbb
lret
xchg
mov
shr
xchg
cmp
bound
cmp
mov
mov
inc
hlt
mov
data16
inc
aad
xchg
pop
lret
add
popf
dec
insb
sub
pop
add
xchg
gs
xchg
loop
xchg
incl
fldt
decb
add
push
sub
push
mov
xor
loopne
inc
ficompl
scas
das
test
sbbb
stos
sub
sbb
in
mov
dec
push
xchg
xor
or
mov
int
xchg
clc
mov
repz
cmpsb
stos
mov
lea
loop
dec
jp
pop
mov
pusha
sub
inc
sub
jp
ljmp
je
lret
add
or
lds
push
lods
adc
dec
test
clc
inc
xlat
xchg
fs
add
push
adc
popf
sub
adc
cmp
repnz
lods
arpl
dec
sbb
es
fisttpll
xchg
and
push
cmc
mov
xor
mov
cmc
popa
sub
lahf
orb
out
fs
enter
hlt
jns
cmc
dec
cmc
xchg
push
add
dec
inc
ss
cmpsb
pop
sbb
xor
mov
shll
cmp
shlb
out
jns
jecxz
mov
jp
rorl
mov
fldt
mov
cli
mov
incl
inc
in
dec
mov
popf
mov
mov
xchg
push
lods
mov
xor
dec
inc
inc
push
nop
nop
pop
inc
pusha
sub
addr16
push
daa
cld
push
sub
fnstcw
push
mov
xchg
and
mov
push
test
add
int3
lock
leave
aas
push
imul
cmp
sbb
insb
out
push
push
iret
or
pop
push
mov
lock
lea
cli
mov
loop
call
les
mov
scas
test
add
xor
inc
loop
cmc
je
sub
jb
ret
add
and
shll
leave
sbb
les
or
or
mov
mov
into
dec
mov
dec
ficompl
fisttps
jbe
fidivs
out
add
stos
inc
shr
sarb
add
loop
mov
dec
mov
sub
hlt
jl
push
jae
ljmp
imul
mov
sarl
cmpsb
sbb
lret
jo
jle
int3
xor
push
dec
push
dec
lock
sti
xchg
xchg
scas
outsb
lcall
mov
out
loop
mov
dec
pop
cmp
and
sbb
mov
mov
rolb
adcb
ja
dec
xor
ret
or
addr16
in
adc
mov
push
xchg
sbb
xchg
mov
add
jbe
mov
jge
sub
mov
push
and
mov
ljmp
sub
sub
ljmp
arpl
es
sub
popa
aas
cli
mov
lea
in
fucom
fstps
arpl
sti
xchg
mov
lods
imul
popa
sbb
fwait
jb
ja
inc
enter
fwait
push
shlb
imul
xor
sbb
std
and
pop
cmp
leave
ficompl
add
sbb
lock
fstpt
mov
pop
sbb
out
xchg
or
loop
pop
push
stos
scas
cmp
loopne
dec
xlat
xlat
ret
mov
pop
jg
sbb
jmp
xchg
jbe
cwtl
jne
data16
cmpb
pop
xchg
cmp
sub
add
out
scas
mov
leave
stos
ret
cld
cmp
cmovle
fsubrl
imul
fstps
clc
xor
decb
dec
xchg
sti
ffree
sbb
loop
jne
and
fldt
xchg
das
loope
cltd
sbb
enter
mov
lret
mov
sbb
sub
test
out
push
jbe
add
stc
inc
shlb
loopne
push
rcll
dec
sti
out
ja
loop
and
outsl
data16
push
int
xchg
cmpsl
mov
ret
dec
add
xor
xor
in
int3
cmpl
add
mov
or
pop
pop
frstor
scas
test
imul
fidivs
sahf
stos
cwtl
pop
pop
pop
les
ljmp
test
inc
cmp
cmp
stc
not
icebp
mov
sub
xor
mov
inc
repz
je
add
pop
stc
jae
aaa
or
sbb
lea
aaa
int3
jge
aad
jns
lods
lds
add
dec
push
mov
icebp
mov
mov
inc
xchg
and
mov
add
mov
mov
and
lret
mov
cmp
mov
push
jp
shrb
dec
and
dec
gs
into
dec
sub
imul
bound
cwtl
jmp
xchg
cmpsl
sbb
xor
addr16
xor
inc
sub
scas
outsl
test
addr16
loop
outsb
pushf
push
mov
jmp
and
dec
mov
jo
loope
stc
xorps
sub
xorb
cmpsb
out
cltd
and
inc
push
call
cli
cmp
xor
shlb
push
cmpsl
dec
xlat
aad
xor
sub
and
cld
loop
pop
lret
stos
fsts
push
outsl
xor
or
loope
cmpsb
xchg
repz
cs
in
aam
xlat
iret
add
push
nop
xlat
out
push
mov
xchg
pop
aaa
cmpb
daa
outsb
jle
lcall
stos
arpl
pop
outsl
jbe
fwait
sahf
cld
bnd
mov
sub
sarb
rorl
push
push
icebp
lret
push
ffree
xchg
or
movsb
xlat
add
das
sub
pop
push
sub
xchg
in
mov
out
xor
or
xor
in
enter
mov
nop
pop
fsts
inc
notb
push
cwtl
arpl
pop
adc
or
aaa
dec
xor
adc
mov
mov
jl
xchg
push
jmp
pop
sbbb
pop
rclb
lea
push
push
push
lret
xchg
xor
cld
dec
jnp
mov
sub
adc
adc
jb
in
dec
xchg
cld
sbb
mov
add
adc
ljmp
inc
flds
hlt
mov
nop
sub
arpl
push
js
mov
addr16
mov
xchg
ret
aad
mov
lcall
cmp
xor
push
fcomp
mov
or
xor
sub
insb
stc
aad
pop
std
add
addr16
rclb
aam
xlat
mov
add
testl
clc
inc
rorb
popl
mov
xchg
sbb
out
das
push
stos
stc
xchg
stc
adc
pop
adc
dec
sbb
sbb
xor
dec
xlat
imul
dec
xor
cmp
push
inc
sbb
idivb
inc
fdivr
jmp
adcb
push
jns
cmp
hlt
lret
mov
insl
xchg
arpl
cmp
or
xchg
js
cmp
or
nop
pop
pop
adc
add
jns
push
fucom
pop
imul
cld
into
sbb
mov
mov
cmpsb
adc
mov
pop
ret
mov
sub
mov
inc
dec
ljmp
fdivrs
test
ret
mov
xor
lret
mov
leave
adc
jg
sub
inc
xchg
sahf
sti
inc
lods
hlt
sub
or
outsl
push
mov
mov
pusha
pop
aaa
popf
ds
cmp
and
add
or
lret
insb
pop
push
arpl
movsb
leave
clc
stos
lock
pusha
xchg
pop
cmpsl
movsb
sbb
call
pop
pop
rorl
pop
sbb
and
aas
aas
in
into
mov
daa
loop
and
lcall
sbb
sub
das
fbld
fbstp
jl
jnp
mov
xchg
lds
sub
jg
dec
push
ss
mov
out
sbb
adc
in
mov
pop
push
push
das
mov
adc
cli
adc
or
mov
xchg
ss
repnz
xor
sbb
mov
movsb
addr16
subl
jl
hlt
addr16
mul
scas
push
imul
xchg
roll
xchg
inc
sbb
leave
std
fldenv
sti
or
sub
cltd
add
lock
movsl
rorl
and
aas
subb
test
fs
in
fbstp
clc
add
sahf
push
adc
sbb
outsb
cmc
les
fwait
mov
loop
das
and
add
adc
enter
scas
int
xchg
push
out
nop
js
push
cli
cwtl
xor
filds
loopne
cmp
inc
adc
xor
stos
pop
xor
lds
push
je
in
das
cmpsl
dec
lock
out
xchg
leave
icebp
into
rol
mov
or
idivl
bound
roll
ljmp
sbb
in
lds
sub
jae
repz
and
dec
sbb
and
mov
inc
or
xor
add
sub
cmp
jns
sub
sbb
inc
pop
sub
or
popa
pop
jb
cs
pushf
mov
std
push
aas
shll
jl
int
and
xchg
inc
push
scas
lahf
mov
and
inc
adc
lds
sbb
cmp
jle
call
push
pop
lods
repnz
cmp
push
and
push
and
outsb
mov
pop
adc
ja
push
sbb
lock
jge
add
jns
push
aaa
xchg
and
jno
xchg
push
mov
rorl
add
adc
call
dec
mov
and
gs
lret
std
jb
rorl
cmp
mov
cs
dec
mov
mov
aad
xchg
dec
adc
mov
jge
rep
mov
dec
mov
insb
repz
jbe
fnstcw
out
dec
call
cwtl
je
out
xlat
jge
or
pop
mov
jns
and
mov
out
sub
sub
add
test
enter
filds
in
add
pushf
or
aaa
mov
dec
sub
or
and
into
xor
orb
js
sbb
xchg
mov
sahf
xor
push
xor
fnstcw
pop
mov
jo
stc
mov
rorb
cmp
into
mov
scas
sahf
jge
push
xchg
mov
adc
fcom
push
je
cltd
sub
ret
mov
dec
push
pusha
mov
ret
in
pop
into
fisubrl
mov
sub
jo
lret
xchg
test
rcll
xorb
and
jg
sub
mov
sti
arpl
ljmp
jecxz
cmp
pop
into
ss
fisttps
or
cmp
xchg
je
and
mov
mov
inc
xchg
je
xor
dec
inc
adc
imul
out
or
or
inc
repz
mov
cmp
out
es
dec
xchg
jl
out
mov
cmp
sbb
aam
adc
inc
in
out
sbbb
in
mov
pop
cmc
xchg
inc
lret
sbb
sbb
jl
sti
add
imul
cltd
dec
scas
mov
and
mov
shlb
xchg
mov
push
lds
mov
loop
sub
neg
andl
inc
outsl
sti
pop
add
mov
ffree
dec
stos
clc
or
ficoml
daa
or
out
in
push
stc
add
mov
rorl
xchg
iret
push
js
rorl
pop
je
movsb
mov
sub
fnsave
mov
in
cmc
rcrl
fcmovnb
and
outsl
ja
test
call
sub
push
outsb
leave
sti
imul
sti
xorb
cmp
lcall
jecxz
mov
or
out
mov
outsb
ret
movsl
andb
push
cmp
xor
inc
jp
imul
xor
pop
xchg
mov
rcl
add
outsb
pushf
or
lods
cltd
cltd
test
sub
push
mov
movsl
iret
pop
jmp
xchg
mov
jmp
out
jle
mov
sbb
sbb
fnstcw
lock
rcrl
ljmp
mov
popl
rorl
sahf
sub
pop
add
xchg
scas
cmp
push
inc
cmc
sbb
cmpsl
fwait
imul
jecxz
imul
js
adc
daa
fldl
fimuls
int3
lods
popf
push
ss
push
ss
fdiv
or
mov
xchg
and
pop
subb
or
adc
xchg
cwtl
lods
cmp
mov
pushf
and
pusha
xchg
mov
std
pop
sbb
inc
test
dec
and
xchg
sub
test
xor
sbb
sub
fmul
cmpsl
sub
ret
adc
insb
fnstenv
in
sti
mov
mov
sbb
into
stos
hlt
xor
cmpsb
xor
popa
pusha
xchg
subl
jb
sbbb
xor
cmc
out
in
pop
stos
adc
mov
mov
mov
pop
and
or
lret
in
add
push
push
adc
cmp
out
sub
mov
scas
mov
or
das
movsb
fcoml
sahf
jmp
mov
orb
pop
or
jb
test
add
loope
jmp
rcr
push
dec
enter
in
shl
pop
lods
sbb
insl
fstps
inc
iret
lcall
sub
mov
int3
jbe
add
inc
cld
fcmovu
insb
push
js
pop
fdivr
cmpl
or
pop
mov
adc
xchg
dec
in
cmpsb
mov
xor
mov
fwait
js
cld
sti
dec
ljmp
std
lock
inc
sar
xchg
jne
cmc
addr16
lret
push
jnp
pop
shrl
aam
or
or
inc
mov
ds
stc
stos
jl
mov
pop
outsl
dec
cmp
outsl
imul
into
hlt
lcall
scas
pop
xchg
cltd
insl
dec
cwtl
subb
shll
dec
xor
insl
sub
mov
fidivl
mov
out
push
pop
nop
cwtl
sub
cwtl
movsl
cmp
rcrb
mov
dec
dec
xlat
vpunpcklwd
addl
dec
sbb
push
shr
fldt
pop
ljmp
mov
and
mov
sub
daa
push
add
and
clc
js
push
push
pop
movsb
repnz
push
stos
movsb
mov
dec
inc
hlt
add
ret
cli
pop
or
mov
fs
cmpl
or
dec
sub
ret
insb
mov
filds
add
xor
insb
sar
je
jecxz
jnp
inc
rcll
js
shrl
cld
hlt
jb
dec
jp
stos
push
test
jp
sub
mov
xor
movsb
mov
mov
fistps
call
test
test
xchg
mov
fwait
decb
int
fcompl
adc
sbb
scas
push
inc
popfw
lret
pop
mov
out
xchg
fistl
mov
push
or
inc
jnp
bound
shl
adc
jge
sbb
test
repz
fdivs
push
cwtl
jb
stos
cltd
or
sbb
inc
push
bound
cmpsl
fldt
ret
or
std
adc
add
sub
lods
jmp
jbe
loop
bound
in
in
std
cwtl
cmp
sub
inc
int
pushf
jg
sbb
out
dec
outsb
cltd
adc
cltd
lcall
inc
out
out
js
or
inc
xchg
ss
call
inc
mov
push
xchg
cmp
fadds
cmc
neg
in
push
fildl
adcb
cld
dec
js
inc
cmp
and
add
or
lods
cmp
push
inc
jnp
ret
adc
test
cmpsb
inc
or
daa
int
cmp
adc
scas
cmp
out
adc
je
fs
out
xchg
xor
sbb
inc
bound
pop
pop
lret
push
mov
cmp
subb
fidivrl
rolb
stos
mov
mov
out
sub
xor
pop
outsb
pop
aaa
fidivrl
and
push
std
push
imul
pushfw
lret
fidivrs
aas
out
hlt
inc
aas
insl
in
cmp
loop
xor
push
icebp
cs
push
lods
dec
aas
stc
aam
sub
add
add
notb
bound
test
out
subb
not
add
sarl
mov
mov
test
decb
jo
jp
in
sbb
sbb
aas
or
outsb
push
cmp
pop
pop
add
stos
andl
ds
sti
pushf
repz
es
jmp
jno
mov
add
sub
cs
mov
test
arpl
dec
push
wrmsr
mov
call
inc
shrb
out
lahf
cmc
nop
mov
inc
pop
sar
adc
xchg
arpl
sub
pop
inc
fwait
sub
fidivs
xchg
inc
into
jo
or
rol
sub
add
xchg
lret
jecxz
fimuls
sbb
jb
pop
mov
lcall
pusha
pop
jne
pop
stos
jae
add
xchg
jmp
in
fisubl
addr16
adc
sub
shrl
dec
xchg
xor
roll
shll
sub
xlat
ja
sub
stc
inc
add
and
pop
dec
enter
cmc
cmp
and
or
not
lcall
xchg
sub
fwait
out
fildll
add
aam
jmp
sub
cli
cmp
push
fdivr
sub
dec
dec
xchg
push
mov
and
sahf
push
addb
mov
jae
mov
imul
lock
rcll
std
dec
pop
and
sbb
shll
pop
or
jns
outsb
inc
and
push
pop
addr16
xchg
sub
fs
jg
insl
mov
mov
leave
rcr
aas
sub
pop
xor
ficompl
mov
push
xor
ja
in
mov
rcrl
shl
nop
es
scas
rolb
stc
lock
push
notb
dec
or
shrl
mov
and
mull
lds
pop
mov
mov
push
adc
rcrb
fs
test
in
call
push
ficoml
mov
pop
dec
or
loop
rorb
rcrb
lock
iret
pop
inc
add
imul
int3
dec
fstp
dec
add
jmp
mov
xor
xor
xchg
jno
cmp
rorl
mov
insl
outsb
mov
push
movsb
push
pop
shl
mov
in
or
jecxz
push
mov
mov
in
lcall
cs
arpl
fnstsw
sarb
out
dec
xor
je
jl
arpl
sub
clc
push
aas
xchg
fsubl
sbb
cld
stc
leave
movsl
fnsave
sbb
mov
mov
adc
jae
xchg
insl
int
sti
lods
out
test
lods
addr16
psllw
hlt
popl
inc
lock
cmp
pop
sbbl
data16
aad
xor
test
push
scas
icebp
jmp
in
not
cmp
mov
daa
aam
loop
add
xor
adc
stos
scas
fdivr
push
rorb
mov
and
lret
adc
dec
and
sbb
jg
ds
insb
or
pop
popl
sub
pushf
cld
in
cmc
push
cmpl
ja
lahf
jl
out
mov
lods
add
cmp
js
jl
loop
pop
sbb
pop
mov
ds
cmp
jg
or
xor
aad
cmpsl
je
cwtl
or
out
mov
mov
int
xchg
mov
jl
outsb
jge
pop
xor
or
outsl
js
test
jmp
dec
pop
inc
jae
and
rdmsr
insl
add
xchg
sbb
push
nop
mov
sbb
pop
adc
adc
les
push
cwtl
bound
xlat
das
adc
dec
adc
pop
mov
mov
in
push
lea
pop
cmc
push
pop
xor
rcrb
jno
xchg
loopne
xchg
cs
push
hlt
cmp
jns
lods
jg
xlat
sub
or
jno
cld
out
and
dec
or
jle
aam
aas
jle
xor
cmp
pop
add
xor
imul
sub
xchg
movsb
jmp
and
mov
sub
pop
clc
jl
pop
pop
insb
insl
je
movsb
ss
pop
outsl
fcmovu
mov
jno
cs
rol
out
repnz
dec
cltd
jge
xchg
add
outsl
cmp
mov
jecxz
xchg
cmp
cltd
jne
lahf
cmp
insb
and
test
jne
and
stos
shlb
adc
ret
pop
cmpsb
dec
loopne
mov
adcb
fistps
shrb
dec
add
jmp
lcall
xor
mov
add
mov
xchg
sbb
icebp
scas
adc
sbb
enter
pop
fnstenv
jne
inc
stos
xchg
ret
push
mov
jae
adc
dec
jmp
das
sub
fbstp
jb
insl
or
jbe
lahf
xor
pop
cmp
scas
aad
pop
sbb
mov
lret
adc
xchg
mov
sti
jo
mov
lods
ja
adc
adc
push
cmpsb
iret
add
mov
and
pop
push
cld
dec
fisttps
shll
rolb
add
xor
sub
test
push
icebp
stos
lcall
out
imul
push
mov
mov
inc
mov
iret
sbb
fcom
sub
std
nop
or
lar
jae
jge
dec
js
and
ds
push
jle
cmpsb
addr16
fs
sub
cwtl
xor
add
clc
arpl
imul
insl
stos
or
fs
cmp
aas
lahf
push
fsts
js
mov
loope
cmpb
mov
inc
mov
push
ret
loop
rol
mov
in
jmp
mulb
aam
pop
and
daa
loopne
inc
test
cwtl
mov
xchg
inc
test
lret
cmpsb
adc
jae
sub
pop
xor
jne
pop
push
je
or
fcmovu
divl
scas
mov
cmp
test
incb
cmp
adc
sbb
xchg
sbbl
xchg
pop
sbb
sub
daa
inc
cmpsb
js
and
inc
xchg
stos
push
shlw
in
jb
jns
fidivrl
stos
mov
sbb
mov
data16
adc
std
and
sahf
push
inc
jo
movsb
rcl
mov
push
test
jmp
sti
push
cmc
xor
lret
xlat
push
aas
add
push
inc
ret
dec
ret
movsl
loope
inc
repz
adc
mov
ret
pop
add
fwait
adc
out
xchg
lock
mov
mov
neg
lock
fs
xor
lods
insb
and
mov
test
je
adc
xchg
cs
push
shll
mov
sahf
add
icebp
push
jp
pop
jo
cmp
add
aad
mov
call
or
or
xor
adc
sub
sbb
push
sub
dec
test
fdivl
xchg
sbb
lods
xor
pop
stc
and
ss
aaa
xor
xchg
adc
outsb
in
aas
jns
xchg
push
inc
fld
sub
ret
in
es
test
outsl
mov
mov
mov
and
mov
jg
mov
jl
lcall
loop
fs
mov
and
mov
fmulp
sub
xor
popa
sbb
hlt
mov
or
fwait
xor
cmpsb
std
sbb
cwtl
dec
adc
or
inc
sub
sub
adc
pusha
shrb
das
cli
test
adc
push
bound
dec
and
insb
xor
cmp
stos
test
add
mov
sub
popa
xchg
loop
cmp
and
jmp
sbb
sbb
stc
jge
sbb
aam
mov
out
jl
push
mov
repz
stos
icebp
dec
inc
xchg
bound
mov
leave
loopne
pushf
add
aaa
ficompl
into
pop
pop
pop
invd
and
aad
outsb
xor
jno
adc
inc
cmp
and
jno
push
sahf
jns
sub
pop
fwait
int
add
dec
mov
hlt
test
jmp
xchg
cmp
xchg
mov
ss
push
rcrl
jmp
inc
fdivs
jne
test
stos
pushf
adc
sub
aaa
jmp
cmp
xorb
mov
cmp
insl
mov
xor
mov
xchg
or
jle
jb
push
fidivrl
push
add
sbb
aad
insl
clc
xor
std
pop
add
lods
in
sub
jg,pt
fisttps
jge
xchg
call
cmpsb
cltd
bound
push
out
add
leave
push
inc
movsl
sbb
mov
call
push
push
mov
js
decl
xchg
inc
add
inc
lods
push
cmp
into
nop
popa
xchg
lds
ficoms
mov
and
mov
lret
push
and
ds
icebp
pop
cli
daa
enter
jg
mov
inc
mov
int3
sub
addr16
mov
cmp
pop
shll
dec
imul
add
aaa
jmp
lods
stos
sbb
mov
jne
add
push
dec
inc
mov
xchg
pop
ret
inc
xchg
xchg
jae
inc
insb
push
cmpsl
scas
sahf
js
test
les
cmc
adc
iret
xor
adcb
xchg
mov
sub
push
mov
sbb
loopne
xchg
pop
in
pop
test
mov
mov
inc
ljmp
out
xchg
mov
xchg
arpl
ss
sahf
repz
loope
and
stos
arpl
jb,pt
push
leave
add
inc
xor
cmp
testl
mov
bound
cmp
rolb
cmp
mov
outsb
jecxz
mov
jno
dec
xchg
inc
aam
in
int3
mov
popf
jae
xor
iret
sub
jno
ljmp
xchg
inc
dec
cli
inc
mov
hlt
dec
push
xchg
inc
testb
inc
push
ja
rorl
xor
divb
pop
pop
mov
cmp
lods
add
mov
into
and
push
imul
aas
xchg
test
je
push
addl
loop
xchg
and
std
bound
jg
jge
into
test
mov
lahf
stos
mov
xor
movsl
sysexit
xorl
or
sub
cmc
popf
and
xlat
mov
jle
mov
movsb
sbb
adc
jo
xor
mov
xor
or
loop
insb
push
jns
pop
push
push
inc
dec
mov
aas
cmp
mov
cmp
push
lret
adc
add
ret
mov
cmp
jmp
jnp
cmc
enter
mov
mov
inc
cmpsb
inc
test
adc
inc
xchg
or
cmp
jne
push
inc
test
cld
loop
pop
dec
or
int
loop
cwtl
aad
lret
cs
push
test
out
and
jne
enter
and
xchg
cltd
shrl
xchg
xlat
or
insl
out
cmp
push
pop
fcom
cmpsl
inc
cmp
std
mul
fmull
push
xchg
pop
mov
mov
pop
or
or
push
mov
push
sub
jle
jge
add
sub
leave
fldl
or
cmpsl
pop
jge
jmp
loope
ss
lret
sbb
aad
adc
dec
push
sahf
sub
ss
jl
inc
lods
dec
test
jl
ss
inc
mov
sub
ret
popa
test
sbb
outsl
or
dec
pop
ret
dec
inc
xchg
lahf
jle
or
pop
xor
pop
movsb
dec
loope
ds
add
and
stc
or
push
cmpsb
cmc
out
xorl
stc
out
mov
jb
sub
adc
test
hlt
xor
jo
sbb
fs
jecxz
push
push
sub
lahf
mov
fisubs
pop
sbb
shrb
in
xlat
mov
jl
inc
lods
dec
lock
pop
mov
push
mov
push
jl
insl
stos
repz
jmp
sarl
push
sbb
rolb
pop
and
pusha
sub
push
or
inc
imul
enter
test
std
mov
mov
dec
dec
dec
jne
xchg
fistpll
xor
xor
fwait
mov
out
jmp
cmp
iret
cmp
les
mov
lds
mov
xlat
push
dec
xor
lea
mov
xor
push
pop
pop
sub
into
push
ret
fwait
push
lock
inc
das
fcoms
outsb
outsl
jecxz
lcall
enter
ljmp
rcrl
mov
outsl
test
lret
mov
gs
inc
ljmp
xchg
sub
je
stos
push
add
jmp
outsb
rcll
nop
pop
xchg
push
out
jl
dec
iret
outsl
hlt
push
fisubrl
mov
jg
sbb
xchg
xorb
jle
cmp
mov
push
xchg
dec
cmp
xchg
aam
jle
mov
rcll
cltd
aaa
jb
frstor
cli
repz
cmp
xor
mov
mov
stos
out
sbb
scas
iret
aaa
cs
pop
push
lret
xchg
mov
incb
cli
push
insl
add
jp
outsl
lea
jo
jecxz
ljmp
stos
shrl
rorb
adc
inc
push
xchg
sub
sbb
in
sub
add
mov
inc
and
mov
pop
cltd
movsb
int3
out
cmp
fwait
push
pop
add
testl
push
in
and
shlb
sbb
mov
out
jecxz
mov
lods
push
cli
jnp
sbb
mov
jecxz
cmpsb
lret
xchg
cmp
mov
xchg
das
sub
inc
lcall
add
jae
fcomi
fs
add
dec
loop
out
cmpl
ja
jne
out
sub
add
ret
fsts
sbb
sbb
outsb
inc
jle
ret
pop
adc
in
jecxz
jp
data16
sahf
out
enter
mov
dec
je
fsubp
stos
sub
or
daa
idivb
imul
and
jns
sbb
xchg
jne
push
push
iret
shll
sti
xchg
push
sti
arpl
push
pushf
cwtl
pushf
test
adc
icebp
in
out
push
fcompl
mov
push
push
mov
jae
push
xchg
lret
mov
mov
rcpps
jne
into
cmpsl
cmp
iret
adc
mov
add
cld
call
ret
test
loop
dec
jecxz
or
imul
mov
mov
mov
insb
out
cmp
imul
cmp
sarb
and
icebp
push
and
pop
cltd
mov
mov
fisubl
ret
or
cmp
push
imul
insb
enter
sub
loopne
sub
jp
pop
mov
fstps
jbe
fs
adc
push
call
ret
scas
pop
mov
or
bound
pop
in
addr16
sti
or
in
push
and
jns
mov
sbb
sbb
sub
testl
lret
test
sbb
pop
mov
add
cmp
call
pop
and
jecxz
aam
pop
movsb
sbb
faddp
push
sub
sub
sti
and
dec
mov
scas
rcrb
and
enter
aaa
xor
into
inc
popa
add
xor
adc
inc
imul
ds
leave
sbb
roll
pop
out
movsb
and
jmp
mov
ja
push
das
pusha
sar
test
enter
adc
ds
mov
cmpsb
sbb
fstps
insb
int
stc
mov
pop
push
push
rorl
std
sbb
test
inc
jnp
dec
pusha
pop
jo
cmp
dec
xchg
or
or
fcoms
mov
mov
int3
popf
fcomp
inc
mov
xor
notl
xchg
dec
cmp
lods
sti
notb
enter
fstps
cmpsl
insb
clc
cmp
xor
test
test
cmc
ds
jae
xchg
push
inc
les
and
push
add
test
dec
inc
dec
cmpsl
lods
fdivrl
or
inc
inc
aaa
mov
cltd
sahf
jp
or
lcall
dec
cld
cmpsl
subl
push
xor
xor
out
daa
add
loope
fidivs
pop
inc
lahf
icebp
into
mov
icebp
add
sub
sbb
mov
orl
mov
scas
lods
icebp
adc
hlt
pushfw
cmpsb
aaa
and
shrb
ret
fs
xchg
hlt
push
mov
jae
cmc
test
cmp
xchg
and
ret
les
mov
gs
jns
add
jmp
mov
sub
imul
inc
jp
fs
ret
add
lret
pop
mov
outsb
jmp
dec
sub
addr16
adc
xorb
testl
loope
jb
sub
adc
cmp
mov
out
cmp
enter
xor
xor
negb
pop
out
mov
xchg
bound
and
test
cmp
test
repnz
cmp
movsl
sub
push
adc
fstpt
jno
je
pop
jmp
ljmp
lret
stos
xchg
xchg
loopne
mov
push
test
mov
insl
out
cmpsb
std
outsb
lock
ret
inc
push
xchg
cmp
sbb
in
mov
pusha
fwait
inc
sub
mov
pop
jne
sbb
push
mov
mov
dec
cmpsl
outsl
loop
or
dec
sub
xchg
out
xchg
push
fsts
adc
ret
pop
and
sub
cmpsb
insl
xchg
roll
shlb
repnz
sub
sub
mov
sahf
xor
mov
or
scas
fcompl
cmp
loop
shll
mov
push
roll
xchg
int3
insl
vpmuludq
xchg
push
int
sub
inc
js
xor
mov
xor
adc
dec
mov
cmp
push
dec
cs
pusha
out
mov
mov
add
and
add
sbb
out
ret
sti
cmp
cltd
repnz
lea
mov
andl
lcall
mov
jg
dec
in
mov
jb
push
sarl
pmaxub
sub
mov
push
mov
cltd
cmp
es
gs
ja
sub
xor
pushf
inc
out
sub
cmpsl
jge
outsl
jge
sbb
inc
fisubl
add
push
sbb
test
jno
mov
hlt
loopne
xchg
pushf
pop
push
loope
xchg
sub
lret
or
mov
imul
dec
out
pop
cmp
mov
test
xor
xor
adc
ret
mov
mov
in
push
jg
repz
jp
xchg
mov
push
jmp
aad
push
jmp
xchg
sbb
test
int
sbb
mov
pushf
and
int3
roll
enter
fldcw
movsl
cmc
adc
call
push
push
adc
sub
adc
sarl
lret
adc
mov
push
push
pop
test
jg
cld
push
std
inc
xchg
adc
iret
mov
push
mov
mov
fmull
xor
adc
mov
jb
sbb
fstpt
and
ret
xchg
lods
or
pop
jge
push
xchg
fwait
aad
adc
inc
or
or
stc
test
mov
sbb
mov
or
push
pop
das
jmp
js
mov
pop
lods
icebp
jbe
add
scas
loop
push
stos
mov
loopne
aaa
mov
int3
sbb
fdivr
es
sub
jno
adc
jns
lcall
and
data16
mov
stos
cli
mov
out
dec
in
fisubrl
jo
push
scas
and
cmp
test
leave
in
jmp
ret
cmp
clc
sarl
inc
pushl
xor
fidivrl
loopne
adc
fistl
sub
dec
sbb
lds
or
push
call
and
push
push
rcrl
push
fwait
xchg
fistl
and
les
xchg
mov
mov
aaa
out
fcmovbe
outsl
out
dec
jmp
or
cmc
jmp
pop
bound
add
neg
call
pop
cmp
scas
aas
dec
adc
lods
mov
scas
btr
aad
call
dec
mov
pop
loope
pop
inc
jno
adc
jbe
icebp
mov
sbb
gs
hlt
int3
jbe
sar
adc
pop
out
or
and
test
inc
sub
mov
mov
mov
dec
enter
std
mov
mov
pop
mov
popa
sbb
xchg
mov
mov
sbb
mov
mov
sbb
movsb
stc
mov
push
in
rcrl
aaa
jl
adc
enter
pop
lea
jbe
push
inc
mov
mov
xchg
test
jl
movsl
pop
orb
push
sub
push
sbb
mov
add
sub
mov
sbb
loopne
insl
hlt
test
int3
inc
in
aam
je
xchg
push
dec
out
adc
pop
test
imul
mov
xlat
cmp
xor
and
fsubrs
xor
mov
jnp
adc
xor
mov
dec
push
fimull
lea
adc
inc
pop
xchg
mov
mov
fsubrp
push
lods
cmp
gs
outsb
clc
popf
ficomps
mov
sub
cmp
adc
sbb
stos
sbb
sub
leave
jae
out
aaa
xchg
imul
cmp
popf
mov
push
test
shrb
mov
arpl
push
xchg
sub
inc
jo
cs
test
pushf
clc
lds
xchg
ljmp
jb
in
aaa
or
test
test
inc
imul
pop
jecxz
mov
out
inc
loop
rol
jno
out
jmp
sub
imul
cli
mov
sub
jb
xor
pop
sbb
pop
mov
cld
sbb
scas
jno
or
or
dec
insb
cmp
dec
fldl
jns
push
add
mov
pop
add
xchg
into
or
xor
lods
sbb
xlat
out
mov
out
and
push
xorb
jecxz
xchg
hlt
daa
shll
mov
pop
and
adc
pushf
jne
push
rol
or
lds
and
mov
stos
pop
popf
dec
lret
ds
pop
xchg
mul
lahf
dec
mov
in
xor
cmp
mov
pop
ret
pusha
cmp
call
aad
and
sbb
pop
cs
aam
sbb
push
jno
and
cmp
lcall
fcmovnu
inc
mov
push
sub
call
cmp
cmp
test
repnz
jle
cmpsl
lahf
pusha
sbb
mov
out
data16
cmp
pop
in
sub
inc
cmp
inc
mov
stos
cs
pop
jmp
lret
xor
pop
cmp
std
insb
push
mov
out
add
xor
or
push
insl
pop
mov
xchg
mov
mov
jecxz
sub
lcall
fwait
xor
ljmp
push
repnz
lret
data16
sbb
outsl
and
xchg
xchg
repz
pop
mov
out
jb
mov
int3
inc
lret
cmpsb
fadds
fcmovnu
popa
ds
cmc
in
rorb
fistl
add
shlb
pop
push
es
mov
mov
and
test
in
stos
sub
push
sub
mov
sub
or
lods
mov
push
mov
in
fcompl
enter
xchg
or
clc
nop
mov
adc
fs
sbb
xchg
scas
dec
dec
xor
roll
lret
add
dec
pop
mov
jg
jae
mov
mov
call
dec
mov
sub
pushf
mov
jg
dec
std
incb
inc
and
lret
ds
cmp
push
popa
mov
xchg
enter
insl
mov
xchg
add
sbb
dec
icebp
clc
mov
arpl
mov
js
aam
xchg
dec
nop
cwtl
cmc
imul
xor
leave
or
push
pop
jecxz
adc
adc
lock
sub
ja
cmp
fdiv
inc
aas
icebp
test
imul
fwait
xchg
fwait
idiv
hlt
cmp
int3
xor
jmp
mov
dec
sub
xchg
dec
jnp
roll
daa
in
subb
xor
jecxz
add
jge
je
xchg
je
push
jns
in
jno
lret
mov
fidivrs
js
fbstp
push
sub
inc
dec
inc
mov
mov
add
rep
insb
cmp
popa
out
lret
scas
sbb
aad
lret
inc
cld
mov
push
mov
outsb
or
stos
dec
icebp
pcmpeqb
stos
dec
stos
mov
mov
lret
pushf
fwait
rcrl
ret
xor
sbb
jmp
adc
into
jno
xor
inc
dec
push
add
mov
or
cmc
xor
xor
pop
ljmp
imul
addr16
imul
insb
sbb
mov
dec
push
inc
sti
fs
push
fisubrl
dec
push
stc
stos
inc
inc
outsl
test
dec
sbb
jbe
or
cmp
xor
inc
sahf
js
call
xchg
mov
dec
push
enter
push
sub
js
repnz
enter
xlat
xor
loop
in
xorl
popa
iret
fldcw
inc
sbb
pop
adc
mov
jbe
imul
adc
cmpsb
jmp
pushf
dec
inc
ljmp
push
and
hlt
div
mov
mov
add
sbb
sti
addr16
push
imul
adc
orl
pop
cmp
push
jge
pusha
shrl
or
rcll
pop
push
pop
repnz
pop
int3
fwait
sub
mov
and
lock
add
popf
and
scas
xor
inc
loop
jno
jmp
xlat
mov
cltd
mov
repz
inc
inc
andb
aaa
rclb
push
in
mov
fneni(8087
sahf
adc
cmp
scas
fldcw
fnstenv
inc
in
xor
xchg
or
xchg
xchg
push
clc
push
loope
dec
call
shrb
mov
dec
sub
pop
xor
dec
mov
loop
sbbl
add
dec
add
mulb
mov
jp
mov
push
fstps
xchg
mulb
lcall
mov
popa
movsb
cmpsb
xchg
fadd
cmpl
and
push
test
addr16
jo
push
mov
sbb
arpl
mov
xchg
xchg
ja
fstps
jge
test
daa
fstps
ret
scas
mov
in
and
fwait
push
or
push
test
ret
bnd
ss
into
push
xor
ret
pushf
mov
push
cmp
push
mov
jno
je
fwait
pusha
add
push
lea
xlat
cmp
jae
jle
jle
xchg
and
sbb
icebp
loopne
mov
push
aad
lods
push
add
into
jle
jecxz
xchg
sub
imul
inc
shrl
pop
aam
and
pop
or
sbb
sub
or
inc
and
dec
pop
and
xchg
adc
repz
mov
dec
cmc
repnz
mov
or
int3
mov
div
fcoms
push
insb
sbb
push
jnp
mov
add
mov
inc
jno
cvtps2pd
push
outsb
adc
mov
pop
insb
and
ljmp
sub
mov
in
movsl
ds
int3
dec
pop
pusha
or
ss
imul
dec
pop
out
addr16
popa
jne
and
xchg
inc
aas
or
inc
decb
adc
sbbl
jg
mov
mov
ret
push
xor
adc
aad
sti
es
popa
lock
mov
notb
inc
lcall
mov
mov
call
mov
mov
aad
movsl
stos
jns
lahf
rcrl
dec
xchg
data16
add
mov
cmp
in
clc
hlt
sbb
aaa
adc
mov
lock
mov
jb
sub
insb
xor
pop
xor
mov
add
movsb
xchg
loope
cmpsl
jb
jecxz
adc
int
movsb
mov
push
clc
ljmp
mov
xor
jne
ljmp
movsl
xchg
jmp
push
in
adc
cltd
push
lds
fstpt
jae
repz
dec
mov
test
sahf
sub
and
add
xchg
sub
mov
adcb
es
testb
out
cmpsb
pop
xchg
push
jle
pop
fbstp
fstps
loop
xchg
fldt
fmul
into
in
dec
test
ljmp
sub
sub
sbb
in
push
pushf
scas
mov
arpl
es
fadd
stc
push
test
mov
pop
inc
inc
push
out
mov
repnz
mov
pop
or
cmp
popa
and
clc
icebp
xchg
adc
ljmp
add
and
in
in
jp
cmpsl
in
mov
lea
adc
mov
cmpsb
adc
mov
pop
scas
mov
sub
jo
stos
and
xor
xchg
or
lock
jge
addr16
xchg
ret
and
xor
xchg
mov
inc
xchg
lret
lods
mov
inc
mov
inc
push
hlt
hlt
mulb
int3
mov
repnz
pop
jp
push
add
mov
xchg
add
jl
inc
cmp
dec
lods
sbb
loopne
dec
add
adc
lock
nop
jp
out
and
andl
les
and
mov
mov
xchg
adc
mov
dec
loopne
fdivr
mov
sbb
inc
cld
pop
mov
sbb
divl
or
sar
outsb
aaa
adc
mov
ljmp
test
repnz
fiadds
ds
inc
dec
push
xchg
jle
iret
cmp
scas
xlat
fldcw
jmp
xchg
push
popa
cs
popa
sbb
aam
add
inc
out
push
and
sub
lods
cli
outsb
not
add
sbb
stc
add
aam
mov
daa
mov
mov
adc
je
add
sbb
cmp
mov
les
div
push
addr16
cmp
sahf
jecxz
xchg
cwtl
imul
ret
pop
incb
pushf
adc
and
rolb
shl
aam
hlt
jecxz
test
stos
rclb
mov
loope
mov
rcrb
repnz
mov
lods
sbb
loope
push
bound
jo
xchg
adc
dec
and
fidivl
mov
inc
lcall
test
dec
inc
icebp
fnstsw
ret
lods
cli
repnz
jmp
aam
lods
dec
sub
mov
push
popf
aaa
inc
pop
test
pop
dec
dec
dec
sarb
aaa
mov
test
xchg
mov
std
ja
sub
imul
int
daa
fwait
adc
stos
push
mov
xchg
ss
xor
lea
mov
test
sub
adc
das
cmp
std
xchg
jbe
push
inc
xchg
adc
arpl
jmp
gs
into
jbe
das
sbb
lret
movsl
xchg
mov
dec
ss
mov
clc
jg
push
test
lock
mov
fisttpl
adc
shrb
xchg
ljmp
xchg
inc
sti
stos
sbb
adc
sub
mov
popa
aam
jnp
cld
shlb
cmp
cmpsl
fcoms
xor
xchg
mov
hlt
add
mov
jmp
jbe
push
insl
movb
adc
or
fsubrs
add
lret
cmp
pop
mov
xchg
inc
dec
mov
mov
std
jbe
jge
jmp
movsl
cmc
test
push
das
xchg
jae
mov
mov
jmp
popf
and
jne
inc
mov
stc
jge
ja
mov
fisttpll
clc
neg
icebp
stos
sbb
mov
inc
xchg
sbb
add
adc
adc
imul
sbb
leave
push
iret
mov
or
jle
sub
sbbl
add
data16
xchg
dec
fnsave
push
push
popa
push
jp
or
xchg
sub
ficoms
push
jl
push
push
dec
dec
aaa
cld
jg
icebp
xchg
mov
mov
in
test
das
daa
push
aam
sbb
xchg
es
mov
xorl
jmp
sbb
mov
jae
mov
jns
clc
dec
cltd
mov
xchg
cld
sbb
test
add
leave
cmc
stc
adc
into
xchg
jge
or
jb
jbe
sub
pushf
jnp
mov
outsl
cmp
bound
jmp
imul
xchg
jecxz
jle
hlt
ficompl
xor
lret
cmp
arpl
jl
rcrb
imul
out
cli
in
fistpll
repz
shrb
pop
pop
loop
arpl
daa
or
mov
je
lret
arpl
pop
pop
roll
or
xor
pushl
repz
in
jns
mov
or
scas
mov
sahf
mov
cli
test
out
repnz
push
data16
flds
mov
jae
xadd
sbb
repnz
dec
jl
push
inc
mov
cmpsb
mov
aaa
aas
iret
subb
lea
ds
inc
ja
movsb
mov
sub
in
mov
lret
shrl
mov
push
stos
repz
cld
fnsave
shrb
xor
jne
add
mov
leave
xchg
rorl
mov
decb
or
mov
test
fildl
xor
jle
test
push
jecxz
mov
jge
mov
iret
icebp
test
push
leave
loope
push
popf
mov
add
sti
mov
xor
xor
lock
int3
pop
mov
mov
int3
pop
push
repnz
cmp
mov
and
lahf
mov
jmp
loope
int
subl
jo
aaa
in
xor
incl
and
in
and
lret
addl
pop
enter
jp
je
push
xor
lret
sbb
ljmp
lcall
lcall
inc
jecxz
hlt
and
inc
add
push
adc
cmpsb
xchg
pop
xchg
out
negl
xor
cltd
fdivrl
in
out
shrb
inc
leave
je
jecxz
sahf
inc
dec
cld
jns
ja
test
xchg
enter
jge
mov
mov
loopne
pop
es
jno
mov
jl
aas
sub
mov
rorl
xor
cmp
add
insl
pop
add
lock
rorl
pop
call
xchg
mov
xor
rcrb
sub
cwtl
imulb
repz
add
sbb
clc
cmc
movsb
loop
aas
jae
lret
cs
fs
mov
test
xor
ljmp
andl
sar
xor
nop
inc
negb
or
adc
jnp
push
fcoml
out
in
in
pop
test
insl
rclb
js
stos
loopne
lods
aad
fistps
int
lock
mov
mov
notb
je
outsl
xchg
cmp
lret
dec
daa
xchg
cmp
data16
in
dec
outsl
lret
jbe
mov
and
fnstenv
popf
mov
int3
inc
ret
adc
shld
jge
sub
xor
sub
gs
pop
sub
repz
jo
mov
xor
mov
test
add
sbbl
mov
repnz
mov
mov
sub
sub
push
test
xor
aaa
and
sub
mov
outsb
add
cli
cmp
mov
rorb
sub
xor
mov
test
sub
test
sbb
adc
ret
mov
mov
je
or
rolb
int
lret
add
and
sub
not
xchg
inc
jmp
test
adc
mov
shll
pop
rorb
lods
gs
insl
pushf
cmpsb
add
stos
inc
lret
loope
dec
cmpsb
cld
mov
cmp
adc
adc
sbb
lahf
mov
ret
test
pop
cs
xor
cmpsl
push
mov
or
and
movsb
add
pop
int
mov
outsb
fs
xor
aad
mov
cmp
fcom
shll
in
mov
mov
lock
aaa
cld
mov
stos
sahf
fdivs
out
lods
cmp
sub
lahf
call
insl
mov
xchg
outsb
mov
mov
or
popf
xor
jnp
testl
je
and
xor
negb
or
xor
dec
cld
lods
xchg
stos
inc
addr16
and
clc
in
test
test
jo
mov
rcll
dec
shl
sub
push
xchg
dec
mov
movsb
and
add
pop
jns
ja
rcrl
xchg
jbe
or
ljmp
push
loop
mov
push
hlt
int3
pop
jns
shlb
or
pop
lock
cmp
repnz
sub
shlb
into
inc
insl
repz
shll
add
movsl
push
xchg
or
data16
cmp
cmp
push
inc
and
out
xchg
dec
sub
loop
push
enter
xor
sbb
lahf
leave
stc
mov
and
inc
mov
stos
pcmpgtd
jg
inc
cmp
jl
adc
sbb
loope
enter
xchg
in
fsub
sub
add
xchg
lock
test
jno
push
inc
ror
fs
jmp
cmp
stc
bound
idivb
movsb
push
out
jne
popf
xchg
mov
cmp
outsl
dec
les
sbb
jmp
pusha
push
lods
cmp
sub
sub
leave
xchg
pop
xor
push
pop
jne
sbb
push
fimull
or
int
xchg
and
mov
and
xor
push
xor
mov
loop
sub
cmp
push
xor
sbb
mov
cwtl
inc
dec
push
mov
in
lcall
push
adc
sub
mov
ja
xchg
cmc
inc
test
mov
icebp
je
jg
incl
mov
aas
sub
push
mov
mov
xor
xchg
mov
hlt
in
sbb
push
sbb
clc
pop
jmp
aad
xchg
negb
dec
test
test
adc
xchg
cld
and
mov
stos
mov
in
inc
gs
inc
xchg
dec
dec
xchg
add
std
dec
test
jb
insb
pop
fs
pop
xor
sbb
cwtl
mov
lods
jmp
push
idivb
pop
push
lods
pop
mov
sbb
jmp
insb
push
add
pop
inc
sub
push
jne
xorl
movsl
cltd
xchg
push
sti
mov
mov
cld
in
mov
bsr
daa
adc
jns
xchg
sbb
movsb
cli
mov
scas
cmp
jl
int
push
or
xchg
popf
sbb
cmc
push
sbb
in
divl
xchg
fs
sub
inc
lcall
orb
mov
pop
jg
push
iret
sbb
movsb
lahf
lds
or
ret
testl
adc
bound
movsl
xchg
imul
jo
ds
mov
bound
lea
imul
adc
sbb
mov
roll
movsb
cmpsb
ret
pop
adc
popa
test
fstl
jne
clc
push
jo
icebp
push
iret
add
js
sbb
repnz
fdivrs
push
enter
xor
pop
adc
jne
mov
adc
int
sti
xchg
rcrl
cs
inc
data16
shll
inc
jb
push
fadds
jnp
mov
inc
push
loop
pop
xor
jle
mov
ficomps
sbb
push
in
insb
in
es
insb
les
cmp
ds
imul
mov
lock
jp
xor
mov
mov
ss
mov
movsl
enter
mov
pop
sbb
add
enter
movsl
cwtl
dec
dec
mov
add
data16
clc
test
and
icebp
dec
jle
addb
jg
insl
adc
lods
inc
rcl
lods
sub
mov
xchg
fimull
inc
cmp
jecxz
movsb
lret
lods
mov
movsl
dec
pop
cmpsl
test
jnp
jg
push
push
push
xchg
mov
rcrl
jno
push
xor
and
orl
pop
dec
repz
jg
adc
pop
sbb
dec
dec
xchg
dec
inc
jae,pt
test
sahf
push
pop
shlb
sbb
test
shll
mov
lods
mov
daa
xchg
dec
mov
push
or
mov
cmp
xlat
les
shl
popa
enter
lret
ja
xor
in
aam
aas
add
inc
or
dec
mov
js
ficomps
add
fs
pop
adc
enter
push
jge
cmp
cmp
loopne
ja
popa
scas
adc
sub
imul
cwtl
roll
fimull
xchg
sub
xchg
mov
mov
cmpsb
sbb
sbb
mov
shlb
and
into
mov
or
fmull
xchg
clc
scas
inc
lret
mov
shl
mov
pop
mov
icebp
in
pop
dec
scas
mov
push
inc
icebp
jmp
imul
add
loope
lock
test
mov
cmpsb
adc
dec
scas
cs
sub
xchg
lret
in
cmpsl
push
push
outsl
fidivrs
adc
out
or
jg
mov
add
pop
cmc
xor
add
fcomps
movsl
aaa
jo
lret
dec
mov
adc
imul
sti
add
negl
bound
sti
mov
xor
pop
sbbb
adc
sbb
fwait
das
pusha
lock
pop
loopne
adc
subb
push
imul
xchg
dec
je
sub
xorb
ds
push
imul
mov
mov
sbb
pop
fildl
imul
stc
fwait
mov
cmpsb
adc
mov
push
daa
lds
bound
inc
sbb
and
pusha
pop
sbb
dec
mov
push
pop
insb
aaa
xchg
dec
jmp
xchg
roll
sbb
or
xor
push
sub
mulb
mov
and
jmp
movsl
jb
test
and
pop
aaa
xor
pushf
xchg
mov
push
mov
push
mov
cmp
jo
fisttpl
sti
push
gs
jp
xor
mov
insl
push
lret
rcrl
jmp
fbld
xchg
aam
ds
das
fs
mov
out
xchg
push
fsubrs
and
adc
out
or
add
mov
mov
or
shlb
aas
mov
add
xchg
cmp
push
inc
mov
mov
movsb
mov
or
inc
adc
fmuls
xchg
and
mov
push
ja
ss
lret
inc
sub
aad
imulb
adc
or
cli
stos
pop
roll
or
insb
xchg
mov
test
dec
mov
fidivrs
sti
loope
dec
jg
push
je
pop
hlt
mov
push
js
inc
inc
leave
movsb
adc
les
dec
or
cmp
or
adc
cmp
mov
push
xchg
sub
adc
test
xlat
jo
outsb
ja
xor
or
dec
jb
and
cmp
dec
mov
mov
repz
xor
mov
inc
rclb
js
inc
push
lahf
cwtl
or
mov
jl
xchg
cli
sti
mov
mov
ret
lock
push
test
loope
lret
xor
stos
push
cmpsb
cltd
and
std
adc
test
ds
std
dec
mov
jno
push
out
pop
xor
fwait
ljmp
and
fwait
mov
or
lcall
fisubs
call
orb
or
rcll
daa
or
or
xor
popf
lret
xchg
jnp
xor
out
adc
sub
add
or
push
inc
imul
enter
mov
out
cmp
stos
jle
negb
movsb
cmpsl
mov
adc
cli
adc
dec
and
cmp
push
or
movsb
jl
and
mov
inc
jns
in
imulb
in
dec
pop
push
or
add
fisttps
sub
stos
xchg
push
fidivrs
fiaddl
push
arpl
rclb
sti
mov
mov
xor
adc
jle
cmp
enter
test
xchg
hlt
mov
inc
sbb
dec
ja
cmp
lcall
pop
fisttpll
pusha
inc
bound
pop
mov
orl
jo
push
in
sub
out
or
in
pushf
in
pop
nop
in
mov
push
into
insl
cmp
adc
cltd
sbb
mov
inc
pop
sahf
aad
into
xor
test
push
je
aaa
movsb
test
mov
test
insl
jg
cmp
sbb
test
in
mov
jne
movsb
xor
and
push
jne
jl
mov
in
imul
lds
push
mov
mov
jmp
subl
push
inc
mov
fstpl
out
inc
int3
cld
sarl
mulb
int3
or
repnz
xchg
mov
add
fdivrp
out
mov
jg
mov
add
dec
inc
adc
movsb
xchg
cltd
ds
nop
jbe
lret
divb
inc
movsl
lds
push
popa
mov
sbb
addr16
aad
iret
popa
sbb
in
sub
outsb
jp
int3
dec
jmp
mov
xchg
into
xchg
sub
push
fnsave
add
mov
adc
or
mov
mov
push
mov
inc
cmp
xor
pop
sbb
inc
dec
fnsave
mov
mov
adc
mov
pop
aaa
xor
mov
adc
ds
ja
push
jnp
add
push
mov
or
out
or
jg
aam
push
insl
adcb
sbb
mov
push
cmc
in
mov
dec
lds
dec
xor
sbb
sbb
pushf
dec
xchg
aad
jae
scas
add
mov
pushf
stos
iret
adc
int
repz
jno
jge
push
fstps
faddl
das
sbb
leave
fcomi
das
mov
mov
pop
test
dec
stc
or
repnz
mov
add
pop
ret
cmp
ror
jno
mov
nop
inc
loop
pop
pop
jne
xor
pop
lds
divb
jns
and
adc
cs
cwtl
lods
fidivs
pop
nop
xchg
inc
popf
xor
aaa
sbb
dec
mov
outsb
dec
out
adc
pop
popa
repz
pop
sub
int
mov
cmp
xchg
mov
cmp
divl
cmp
leave
mov
pop
fistps
push
inc
inc
xor
nop
in
jle
xor
jnp
push
bound
cmp
xor
mov
jno
stos
push
xlat
xchg
dec
mov
data16
enter
sti
rcr
cltd
sbb
jne
nop
test
xor
xchg
setns
adc
outsb
mov
fnsave
hlt
shlb
sub
mov
subl
test
out
outsl
cli
pop
scas
imul
sbb
mov
ss
sub
mov
mov
int
xor
jo
adc
and
inc
and
adc
ret
rorl
lcall
xor
jg
jne
mov
mov
iret
movsb
stos
pop
xor
cmp
jmp
and
push
push
or
out
fldcw
fmull
std
xchg
cmp
mov
jmp
in
sahf
movl
push
mov
sub
push
cmp
push
push
jae
imul
pop
popf
xchg
sub
jae
popf
adc
xor
in
mov
or
pop
inc
inc
aaa
xchg
es
jg
stc
in
aas
or
push
pcmpeqb
mov
push
xchg
cmc
std
mov
mov
in
stos
pop
adc
push
rclb
aas
in
inc
mov
stos
out
dec
in
loopne
cwtl
iret
add
mov
mov
jb
int
xchg
jle
and
xchg
sbb
xchg
mov
jmp
and
cmp
mov
or
loope
jg
fisttpl
xchg
push
xchg
and
in
jp
hlt
mov
add
outsb
add
je
push
mov
inc
aaa
outsb
sub
bound
cmpsb
out
js
add
ret
out
sbb
ret
out
jecxz
xor
sub
cwtl
imul
popa
jle
test
jne
jmp
imul
or
mov
pop
fidivrl
sbbl
cmpsb
sub
add
in
cwtl
cmp
data16
and
shlb
das
cwtl
jbe
sbb
adc
add
or
test
popa
mov
dec
test
jb
dec
sbb
in
lcall
sbb
mov
inc
and
pop
cmp
call
jo
dec
out
test
in
insl
loop
dec
pusha
andl
outsl
xchg
sbb
cmpsl
rcr
sbb
and
mov
cmpsl
dec
add
mov
sub
ret
dec
leave
jge
hlt
dec
lea
out
mov
xchg
sahf
sti
hlt
or
fsubs
xchg
and
jecxz
mov
adc
push
data16
out
out
sub
sbb
fcomi
popa
push
pop
sbb
adc
mov
arpl
out
mov
xchg
xor
sub
cmpsb
dec
adc
popa
jno
xorb
les
bound
pop
hlt
dec
mov
jge
cmp
lock
xor
cltd
sub
in
popa
shrb
push
mov
jae
jnp
idivl
xlat
bound
stos
scas
stos
xor
test
insl
shrb
jmp
jmp
es
dec
popf
inc
jge
cmp
out
jns
inc
shrl
popa
shll
sub
outsb
mov
sbb
insb
insl
repz
bound
push
dec
rcrb
data16
lahf
sarl
hlt
xchg
adc
mov
mov
xor
out
pop
scas
sahf
rclb
test
mov
sbb
jecxz
pop
les
fcomps
repz
mov
mov
lea
push
mov
or
sub
or
jmp
xchg
sub
jo
xchg
xlat
push
jl
push
cmpl
add
or
add
std
cwtl
sbb
mov
dec
adc
or
sub
stc
cmp
shrl
pusha
fists
lods
pop
jg
inc
std
outsb
aad
and
mov
movsb
fmull
lret
lahf
mov
xor
fs
shrl
jb
xorb
loop
faddl
inc
sbb
inc
jp,pn
cltd
push
xchg
xchg
jno
mov
jno
mov
inc
les
xchg
testb
loopne
repz
dec
loope
add
add
in
lahf
hlt
or
jmp
adc
mov
xor
jno
mov
outsl
cmp
pop
mov
cli
pushf
add
pop
sub
mov
mov
or
sub
loope
jbe
pop
add
arpl
jb
scas
test
jnp
ret
or
lret
inc
sub
enter
mov
push
loopne
outsl
adc
cmp
cld
jo
leave
iret
xchg
jnp
call
push
mov
clc
or
push
outsl
mov
mov
ds
fwait
cs
or
push
loop
ljmp
cli
jns
or
mov
or
pop
cwtl
bound
adc
outsb
in
arpl
fildll
jae
arpl
and
out
jno
push
push
push
rcl
mov
inc
mov
repz
out
mov
pop
popf
mov
test
and
lods
mov
ret
in
icebp
outsb
xor
or
jmp
and
jnp
mov
dec
dec
dec
cmp
es
cltd
xchg
pop
sbb
loop
push
movsb
mov
fisubrs
jmp
pop
dec
cmp
mov
sbb
fidivs
push
sub
insb
mov
adc
cwtl
outsl
adc
mov
pop
ds
push
inc
jp
in
adc
scas
pop
icebp
xor
test
int
rcl
rcrl
jg
jmp
fsub
xor
xor
mov
pop
and
dec
xlat
or
sub
and
dec
xchg
popf
jmp
andb
mov
push
adc
xor
loop
lcall
enter
ss
adc
lret
bound
inc
dec
mov
testl
add
out
jbe
add
cwtl
stos
xchg
pop
sub
loopne
popf
mov
pop
hlt
rolb
lcall
adc
insb
add
shll
mov
enter
ss
mov
and
dec
imul
and
stos
add
jle
cmp
or
shrl
cwtl
rcl
cmp
out
popa
xor
pop
sbb
test
out
aas
mov
push
inc
jo
or
jge
or
inc
nop
pop
jmp
pop
inc
inc
push
sub
inc
shrb
sbb
mov
lea
mov
call
les
fldl
or
jmp
jmp
inc
push
mov
dec
imul
repz
cld
sti
xchg
in
cmc
pop
cltd
cmpsb
cld
into
mov
loop
and
adc
test
call
mov
pop
dec
ja
leave
and
sbb
js
rorl
mov
xchg
in
mov
test
scas
fldcw
pushf
jae
add
shrb
xchg
insb
lcall
pushfw
bound
or
out
jb
mov
mov
sub
pop
negl
mulb
inc
test
sbb
mov
lods
xchg
scas
dec
sbb
fadds
mov
leave
std
pop
or
mov
rcrb
cld
or
dec
sbb
es
loopne
push
pop
fcmovnu
es
push
adc
lret
std
shl
mov
cltd
inc
outsb
shll
call
lahf
push
sarl
mov
push
mov
xlat
and
stos
jne
sbb
add
sahf
adc
sub
jg
mov
int3
icebp
mov
pushf
mov
pop
repnz
int
lcall
jb
jbe
xor
inc
loope
push
and
push
lea
sbb
shl
xchg
bound
psadbw
sub
mov
roll
stos
in
and
sbb
fsubrs
iret
jns
mov
cmp
mov
adc
cmp
sti
mov
nop
stos
inc
lds
jbe
loopne
rcrl
lds
or
call
arpl
addr16
cmp
pop
xor
cwtl
cmp
sarb
adc
and
sub
mov
adc
outsl
sub
out
jp
inc
in
ljmp
into
mov
mov
inc
int
ds
addr16
add
movsb
sti
fnsave
lret
jbe
insb
addr16
out
fstps
repz
stos
xchg
cmpsl
pop
insl
pop
pop
int
sysexit
lahf
sbb
add
xlat
sbb
int
push
and
cli
div
test
in
xor
outsb
js
lds
pop
movsl
and
jo
jmp
mov
adc
mov
mov
ret
inc
filds
and
test
and
mov
fiaddl
and
imul
mov
icebp
or
xor
mov
mov
loopne
idivl
jo
stos
cmp
cmp
adc
xor
lea
push
cmp
ds
int
fisubrs
or
nop
or
jl
clc
mov
outsl
out
inc
repnz
dec
or
adc
pop
mov
and
mov
sbb
jmp
rorl
push
fs
in
jne
inc
jl
ret
mov
fsubr
pop
sub
or
pop
iret
ss
mov
lret
dec
mov
sbb
lcall
pop
pop
and
imul
jl
pop
and
das
or
loopne
or
xchg
jnp
fsub
xor
loope
xlat
arpl
sbb
mov
stos
mov
mov
stc
popa
fidivl
test
cmp
fs
das
add
sti
mov
add
dec
push
dec
fsubr
incl
push
mov
sub
imul
sahf
data16
xor
leave
popa
sub
push
mov
fs
ficoml
adc
pop
fistl
sub
inc
mov
pop
imul
test
jb
in
inc
insl
leave
les
mov
movsb
mov
mov
fldt
fdivl
xchg
out
xor
sti
das
pop
xor
xor
ror
mov
ret
lock
outsl
push
add
and
sbb
enter
repz
mov
push
push
pop
or
sahf
inc
ret
and
xor
movsb
je
enter
arpl
inc
mov
popf
loop
push
cltd
mov
pop
movsl
xchg
adc
fs
pop
or
dec
test
out
fdivrl
std
filds
sub
jmp
test
iret
sbb
sti
subb
lds
dec
pop
jbe
data16
jno
push
mov
cld
mov
cmpb
sub
leave
cmp
push
or
inc
mov
in
mov
mov
pop
mov
fsubl
es
hlt
mull
mov
enter
es
xchg
xchg
cmpl
sub
dec
neg
mov
or
scas
rcr
mov
xchg
or
dec
xor
int
mov
sbb
dec
imul
in
push
push
into
sbb
adc
jl
jb
mov
loopne
xchg
mov
daa
scas
mov
loopne
xchg
leave
pop
fistpll
out
sub
or
jns
clc
xor
pushf
and
inc
and
insl
jae
jbe
push
outsb
push
xlat
jl
leave
shrl
rolb
jns
movsb
stos
xchg
test
jne
jge
lods
ror
add
jb
cltd
out
add
and
leave
or
xchg
xor
sub
je
arpl
push
test
mov
addr16
mov
lea
rcrl
cmp
call
rol
repz
daa
xor
cwtl
xlat
and
fldenv
repnz
je
jmp
xorb
testb
and
or
dec
and
sar
sbb
mov
cwtl
cltd
xadd
and
adc
xlat
and
lea
mov
pushf
cwtl
jmp
lea
xlat
fxch
loopne
inc
hlt
sub
dec
sti
pop
or
cwtl
mov
sarl
jbe
or
and
pushf
faddl
cld
fdivr
scas
ljmp
sub
xor
ljmp
leave
pop
sahf
sub
xchg
cmpsb
sbb
jmp
icebp
pushf
lea
pop
jmp
or
clc
movsb
and
vcvttss2si
and
aaa
cltd
xchg
inc
roll
cmpsl
iret
jmp
push
insl
jne
xchg
mov
or
adc
out
jl
adc
stos
loope
mov
mov
rclb
or
rclb
lret
test
inc
push
xor
sub
je
lds
mov
pop
mov
push
fcmovne
push
add
pushf
sti
out
and
loope
fcomps
pop
jp
test
or
lret
insl
fadd
push
mov
imul
sub
jns
rclb
rcrb
adc
loop
sub
int3
add
xchg
jl
maxps
fildll
xor
test
pop
out
or
mov
inc
mov
ret
repz
ljmp
ss
stos
or
jecxz
sub
ljmpw
mov
shll
adc
icebp
or
add
cmp
fadd
cli
xchg
rcrb
fs
sarb
push
mov
dec
add
cmp
hlt
push
jnp
and
push
dec
mov
mov
xchg
fcomp
adc
test
mov
ja
mov
push
add
lods
aaa
xchg
cwtl
addl
adc
adc
jge
adc
xchg
into
pusha
pop
xchg
fimull
push
cmpsb
pusha
and
imulb
sahf
std
mov
adcl
dec
mov
imul
bound
lods
adc
xchg
lret
or
inc
or
insl
pop
fcmovnu
pop
sub
addr16
int
inc
xor
inc
test
inc
scas
add
je
and
in
add
mov
pop
cmc
xchg
fldenv
mov
push
aam
adc
daa
das
adc
push
pop
outsl
adc
xchg
popa
mov
push
fcomps
aad
mov
mov
ljmp
mov
mov
push
jb
jae
repz
fisttpll
rol
inc
or
sub
and
mov
pop
sarl
and
rcrl
jns
stos
jmp
sub
cmpps
icebp
in
sub
cmp
pop
out
push
in
int
cmc
mov
bound
sbb
mov
shll
test
jp
loop
lahf
outsb
push
xchg
cwtl
test
pop
push
sub
mov
lock
lock
xor
xchg
pop
ja
mov
dec
inc
push
push
sbb
cmp
int
lret
dec
mov
mov
push
imul
mov
loope
imul
addr16
in
icebp
addr16
addr16
lds
int
or
sti
jb
sbb
bound
stos
dec
inc
lea
lods
cmpsb
cmp
adc
or
sbb
adc
xchg
cmpsb
cwtl
or
loop
jae
je
je
inc
inc
push
jmp
popf
and
xchg
mov
xchg
xor
or
stos
test
cmpsl
mov
jge
fcompl
js
cld
or
ds
pop
add
push
lods
aas
push
sub
sub
jmp
inc
adc
push
mov
pop
pop
subb
imul
push
fcomps
and
mov
pop
fs
loop
mov
mov
xchg
rclb
adc
cmc
mov
lods
fstpt
lock
test
or
inc
mov
dec
stc
mov
adc
aaa
lret
mov
xchg
pushf
xor
repz
call
mov
jbe
xchg
fldlg2
push
pop
test
pusha
xchg
inc
and
cmp
xchg
out
loopne
negb
test
mov
cvtdq2ps
jb
fdiv
mov
inc
push
and
sub
add
call
pop
xor
xchg
cmp
int
rcrl
dec
cmc
mov
clc
sbb
ljmp
test
cmpsb
sbb
mov
add
int
push
inc
dec
inc
mov
jle
movsl
inc
out
decb
xchg
add
pop
jne
dec
jbe
push
add
hlt
lds
or
leave
inc
mov
shll
pop
addr16
dec
fsubrs
and
pop
add
and
sti
ljmp
or
jns
sub
push
cmp
sbb
or
add
xchg
loope
sub
mov
inc
fwait
mov
push
mov
clc
jb
pop
or
fidivl
mov
gs
push
cli
push
test
sbb
cli
jb
in
or
or
mov
pop
push
xchg
cmpsb
rclb
pop
loop
insb
push
fsubrl
inc
sub
jb,pt
jb
and
das
sbb
add
ds
sbb
jl
loopne
mov
add
jecxz
jae
mov
jge
push
pop
test
mov
int
stos
xor
movl
xchg
call
cmp
inc
or
sub
pop
dec
fpatan
in
lahf
mov
repnz
pop
repz
in
out
xorl
mov
insl
dec
or
jp
xorl
push
xchg
or
sub
mov
mov
movsl
andl
int3
or
jae
or
aas
jmp
mov
mov
or
sbb
sbb
mov
sub
jle
in
cltd
jge
and
dec
repz
cltd
movsb
imul
shll
add
or
loop
sub
ss
std
push
cmp
sub
stc
cmp
mov
inc
jle
ljmp
inc
mov
les
pop
mov
orb
mov
or
pop
or
lods
sahf
dec
pop
sbb
mov
mov
dec
or
lret
imul
mov
mov
out
jmp
xchg
push
add
xor
stos
cmc
out
mov
stos
or
dec
pop
testb
pop
mov
mov
inc
fs
lcall
jns
lcall
mov
call
inc
sbb
adc
in
fwait
fwait
mov
rcll
mov
inc
xor
push
jbe
imul
add
stos
mov
sub
lret
jo
dec
pop
mov
inc
mov
stos
fidivrs
sub
cmp
lahf
in
les
inc
ljmp
cs
outsl
sahf
mov
mov
push
and
hlt
mov
imul
nop
sbb
push
jne
popa
cli
add
inc
cmp
sarb
fwait
ret
inc
xor
dec
out
sbb
lret
fwait
test
stos
and
js
or
add
dec
repnz
push
or
daa
jne
mov
pushl
inc
and
ret
movsl
sti
jbe
dec
push
sti
lcall
mov
xor
clc
lods
add
ljmp
insb
shll
call
mov
pop
lret
cmp
sbbb
cmp
dec
adc
push
pusha
adc
cmp
add
std
pop
mov
js
lret
jg
xchg
fidivl
subb
xor
inc
dec
and
fcom
sub
mov
xchg
gs
jne
dec
inc
repz
jnp
xor
sbb
sarb
sbb
pop
push
repnz
mul
mov
and
fcmovb
push
add
xchg
inc
jne
cltd
imul
fisubrl
fcoml
sarb
ja
loope
aam
cmpsl
addb
repz
jl
dec
sub
adc
lods
rol
xor
mov
mov
or
cmp
sub
fucomp
mov
imul
jp
movsl
rcll
mov
notb
iret
adc
sti
jl
lahf
fdivs
push
mov
push
pop
jno
inc
adc
push
test
cmpsl
test
inc
shlb
pop
jmp
lea
out
mov
pop
mov
mov
in
mov
and
mov
jb
xlat
mov
sbb
cld
and
in
xchg
iret
mov
inc
aas
insb
ljmp
mov
lds
adc
frstor
xor
adc
xchg
mov
lret
jl
scas
dec
xorl
sbb
mov
xchg
aad
or
gs
or
mov
lcall
jmp
inc
dec
dec
mov
repz
fldt
pop
insl
imul
xlat
xchg
sbb
test
adc
js
mov
mov
rcll
push
es
jnp
cmp
mov
pushf
call
pushf
dec
jb
jb
add
pop
lcall
jne
add
jbe
in
fcmovnb
pop
test
sbb
test
or
or
int3
sub
jnp
mov
sub
mov
or
jnp
jno
jb
jne
or
incl
xchg
and
icebp
jae
loop
push
out
repnz
ds
or
arpl
cmc
sti
int
jle
cmp
push
fs
cwtl
in
cli
mov
in
xor
push
repz
and
mov
cmp
xchg
ret
inc
sbb
dec
add
or
add
std
xchg
btr
lods
mov
jecxz
xchg
or
mov
nop
rcrl
xor
sbb
fstpl
adcl
int3
test
inc
xor
mov
rcll
clc
or
maxps
fsubrs
repz
cld
lods
mov
sub
mov
xchg
mov
mov
inc
xchg
inc
in
psubsw
bound
aam
pop
fwait
add
aam
lgs
scas
mov
sar
or
dec
movsl
das
fdivl
pop
cs
int3
push
pop
repz
imul
mov
push
lds
xlat
cs
aam
or
dec
sub
daa
addl
push
fs
lahf
je
fwait
inc
out
lds
sbb
push
daa
inc
out
add
mov
jo
push
mov
icebp
lea
imul
xor
lea
cld
sbb
stc
inc
sbb
imul
xor
sub
ss
xchg
lock
arpl
pop
dec
dec
insb
inc
lret
roll
stos
movsb
adc
jmp
shr
sub
xchg
dec
pop
arpl
fwait
out
adc
pop
ret
out
in
imul
sbb
add
test
adc
pop
mov
mov
std
or
push
mov
data16
shrb
sbb
add
cmp
ficompl
xchg
sbb
dec
rcr
jbe
pop
inc
jg
xchg
jae
inc
mov
cmc
pop
mov
pop
sbb
or
push
ds
inc
push
push
add
aas
xchg
push
push
scas
ret
pop
cs
mov
stos
sbb
aam
sub
and
push
xor
and
fstl
cmp
xor
idivl
pop
inc
xchg
scas
sub
jp
movsl
pop
mov
out
cmc
fldt
imul
shlb
xor
add
bound
scas
lret
jg
cmp
cld
sbb
hlt
ss
cmp
adc
jmp
add
popa
mov
and
add
xor
fidivrs
mov
pop
xchg
add
dec
mov
roll
pushf
adc
inc
xor
loopne
mov
aad
or
out
dec
rcr
in
pushf
cmp
or
adc
ret
cs
jle
jno
pop
jecxz
cmp
sbb
cmp
jae
dec
inc
movsl
loop
push
popa
mov
xchg
or
mov
lahf
icebp
inc
jne
push
xchg
inc
stos
into
into
xor
fdivs
inc
xor
sub
pop
jb
and
je
test
enter
cltd
inc
xchg
push
adc
push
and
inc
js
push
xchg
pop
sbb
insl
push
jbe
pushf
adc
dec
mov
fsubs
imul
mov
sub
push
out
in
xor
mov
xor
int3
lea
ja
add
fsts
xor
push
cwtl
lods
out
dec
ja
rol
mov
out
mov
out
stc
mov
sbbl
jmp
rcl
outsl
xchg
mov
mov
sub
call
adc
and
sahf
push
mov
mov
push
jp
ret
mov
fldl
and
fucomip
pop
movsl
lds
daa
sub
pop
adc
pop
outsb
pop
daa
decl
fcomp
xchg
clc
dec
xor
fisttps
and
stos
xchg
cmpb
pop
cmp
and
inc
into
xor
sbb
decb
push
jle
cmpsl
sarl
das
stc
insb
loopne
mov
pop
inc
stos
rol
jecxz
int
mov
fs
add
jo
in
push
shll
mov
mov
dec
nop
cld
cs
dec
add
rcrb
jmp
push
popf
lea
ffree
ss
aam
divb
pop
cwtl
std
inc
testb
push
aad
push
filds
and
push
jecxz
push
sbb
outsb
mov
andb
jmp
cltd
in
jo
push
in
test
and
imul
mov
fcomps
outsl
imul
mov
add
push
or
jns
aaa
addb
cld
add
cwtl
fisubrs
imull
and
jnp
push
add
mov
arpl
daa
mov
inc
std
cmpsl
push
dec
inc
repz
aad
lahf
push
xchg
in
cmpsb
pop
and
jecxz
lret
inc
aad
mov
adc
xchg
scas
pop
and
mov
sub
popl
arpl
mov
mov
mov
jno,pt
daa
jae
repnz
mov
adc
ja
cmp
mov
cltd
daa
imul
pop
in
dec
das
push
inc
fistpl
ret
pop
xchg
adc
mov
mov
pusha
add
enter
gs
adc
xchg
orl
cmc
pop
cmp
xchg
pop
inc
or
ficompl
pop
pop
mov
sbb
sti
and
xchg
cmpsl
jno
dec
into
in
mov
insb
popl
aad
iret
jg
lret
xor
sarb
or
push
je
push
mov
pop
or
lds
test
pop
nop
mov
mov
sahf
sub
cmp
mov
fsubs
push
push
pop
setno
mov
cmpsl
ret
cmp
cli
pop
loope
addr16
xchg
adc
xchg
shlb
mov
in
rolb
jg
out
sub
push
and
in
js
cli
test
sahf
movsl
or
fisubl
xchg
stos
sahf
jp
pop
out
out
xchg
or
adc
inc
push
mov
cmp
sub
out
or
pop
xor
pusha
or
push
pop
adc
stos
cmp
popf
or
xor
test
dec
lods
aam
adc
out
andl
mov
inc
cwtl
lock
and
dec
repz
in
push
xlat
insl
mov
ss
push
ss
push
adc
loopne
outsl
pop
out
inc
sti
lock
je
push
roll
dec
fsubs
mov
pop
mov
xchg
pop
jbe
dec
fimull
push
and
cs
insb
roll
cltd
fstpt
xor
cmpsl
jmp
mov
std
call
xor
pushf
lret
adc
jl
in
test
adc
or
iret
mov
ja
xor
jle
jl
insl
loop
cwtl
inc
fcoml
je
ss
lret
cmpsb
arpl
mov
fstps
xchg
mov
push
or
test
and
mov
dec
adc
mov
xor
inc
or
xchg
ss
sub
mov
repnz
in
xchg
leave
jge
and
in
stos
ljmp
pop
std
inc
adc
mov
jp
xor
xchg
push
mov
push
and
inc
cltd
lods
roll
push
lea
cmp
push
jbe
bnd
jge
aaa
sub
mov
mov
in
test
push
loop
nop
aad
or
out
cld
insb
or
shlb
cmp
and
sbb
out
je
jnp
inc
outsb
inc
adc
and
cmpb
fcompl
cmp
inc
clc
lods
xchg
xor
mov
repnz
addl
and
adc
fsubrs
sbbl
test
lret
aas
andb
fadd
loop
jmp
xchg
in
xchg
and
aaa
cmpl
and
lret
repnz
jle
and
js
mov
insb
or
push
push
lods
pop
call
cli
das
push
repnz
mov
dec
insb
jle
mov
jle
cmp
dec
sbb
sarb
push
xor
sub
pushf
mov
int3
jne
popa
mov
ja,pn
mov
mov
sbb
gs
and
cwtl
push
orl
jle
and
and
outsl
push
push
and
mov
mov
leave
ja
jb
decl
mov
in
arpl
imul
or
sbb
mov
out
add
mov
popa
call
mov
insl
adc
xor
int3
xor
mov
pop
test
push
mov
mov
mov
inc
scas
jb
std
lcall
sbb
adc
sbb
aad
loope
test
inc
addr16
push
mov
cmp
xchg
orb
aaa
push
sub
sbbb
cwtl
mov
std
clc
xchg
leave
push
imul
in
test
in
push
imul
adc
adc
jmp
cwtl
scas
je
sub
mov
idivb
fnstsw
sbb
xor
push
test
push
clc
xchg
lahf
mov
mov
jmp
sar
add
jne
jae
push
xchg
push
cmp
inc
imul
pop
adc
das
scas
inc
push
fisubs
out
lahf
inc
adc
bswap
mov
xchg
jge
ror
adc
or
mov
dec
stc
cld
cld
pusha
xchg
sbb
shll
jmp
push
jecxz
dec
int3
xchg
das
pop
fcompl
xor
daa
and
out
lods
lcall
jno
aam
test
stc
jo
pop
fldenv
ja
add
in
and
lods
dec
es
add
repz
cmp
popa
popa
imul
call
dec
es
and
or
mov
or
sbb
mov
mov
call
or
insb
jge
rolb
adc
lds
xlat
push
mov
or
cmp
lea
xlat
xchg
mov
mov
dec
je
jge
outsb
xlat
add
sub
les
inc
sbb
cmpsl
les
mov
ss
lret
int
adc
and
pop
jnp
jne
loop
add
sbb
xchg
or
push
cmpsl
mov
dec
testb
lret
mov
das
pop
sub
push
cmp
out
addr16
aam
cwtl
movsl
fisubrl
and
xor
fimull
ud0
xchg
dec
xor
jae
jno
hlt
or
mov
xchg
inc
pop
pushf
inc
sub
inc
push
add
adc
insl
stos
imul
mov
lock
xchg
mov
xor
out
stos
mov
test
pop
mov
dec
and
in
jbe
mov
mov
dec
iret
pop
or
xor
out
pop
mov
out
sti
mov
arpl
pusha
sub
jns
ljmp
jge
icebp
and
sbb
xchg
sbb
mov
icebp
sbb
jae
sarl
aas
xor
lret
sbbl
dec
out
and
jmp
xor
std
adc
into
mov
lret
adc
sbbl
jp
lock
xchg
ss
or
scas
test
sub
and
sbb
mov
neg
sbb
ljmp
xor
pop
mov
mov
test
test
or
push
xchg
pop
sub
mov
stos
jmp
mov
cmc
cmp
ds
mov
les
mov
outsb
add
xchg
xor
repz
jbe
add
sub
in
push
mov
out
movsb
xor
std
xchg
into
jp
jle
sbb
addb
out
pop
and
std
cld
fwait
imul
loopne
mov
push
sahf
jo
jns
test
mov
mov
sbb
xchg
fiadds
inc
mov
imul
jne
sub
and
mov
movsb
pop
loop
adc
mov
cli
mov
insl
sub
mov
mov
sub
jmp
adc
pushf
jle
inc
jmp
xchg
shl
inc
or
mov
pop
sar
adc
mov
in
and
jle
mov
xchg
mull
mov
cmp
add
daa
mov
ljmp
addl
xor
adc
xchg
xor
cld
dec
pop
xchg
ja
pop
addr16
cmp
dec
push
add
cmpsb
rorb
xor
pop
mov
mov
out
pop
mov
dec
stos
xchg
xchg
xor
out
sbb
addb
rcll
cmp
sbb
inc
adc
rorl
push
lods
mov
sub
outsl
in
cmpsl
cmp
xor
js
lods
jecxz
cmpsl
cld
lock
push
fbstp
pop
jmp
or
or
inc
cmp
lods
out
mov
inc
jne
test
fsub
push
dec
andb
push
lcall
dec
imul
lahf
sahf
xchg
cmp
test
xchg
ret
pop
jge
xor
nop
and
mov
int
mov
in
arpl
jp
sar
push
sti
insb
clc
mov
in
mov
push
sbb
mov
insb
lcall
mov
and
js
cmp
shr
adc
lret
mov
fcoml
cmp
cmp
cltd
add
cmp
jae
out
dec
popf
iret
arpl
ficoml
or
push
or
int3
cwtl
pop
lret
xor
lahf
inc
in
jno
lea
push
test
cmp
mov
cld
repz
xor
cmp
repz
xlat
dec
dec
insl
cmpsl
xor
iret
fists
imul
pop
inc
add
iret
aaa
mov
jl
mov
sbbl
outsl
or
cmp
sti
test
adc
lods
fs
jbe
loope
gs
add
decb
mov
das
nop
lret
addr16
dec
xor
bound
sahf
adc
pop
dec
pop
sub
lods
hlt
mov
add
aam
lcall
cld
jge
dec
fisubrl
frstor
call
inc
dec
xor
repnz
pop
push
cmpsb
out
nop
push
mov
inc
dec
cmp
lea
out
daa
test
enter
adc
bound
cs
xor
jb
or
mov
pop
or
jae
or
sbb
sahf
ret
jmp
fld
ss
cmp
sbb
mov
mov
inc
in
sbb
jge
push
mov
loope
movsl
lods
mov
cltd
stc
std
lcall
push
mov
mov
dec
loope
mov
jnp
and
or
and
mov
outsl
pop
arpl
sub
mov
cmp
push
ret
pop
jae
bsr
adc
add
add
inc
into
loope
test
mov
or
add
pop
loopne
mov
push
xor
lods
jge
add
xchg
push
shll
lods
std
mov
mov
push
mov
aaa
call
cs
xchg
lods
bound
cmpl
clc
xor
cmp
sbb
lahf
enter
mov
fcoml
and
cmp
nop
jmp
loop
xor
jno
xchg
clc
sub
addr16
mov
ljmp
xor
in
sbb
popl
jmp
bound
xlat
ret
mov
xor
fs
ja
mov
push
into
dec
ret
scas
fsubl
mov
mov
shr
cmp
inc
fisttpll
or
dec
roll
and
cmp
push
test
dec
out
pop
js
loopne
ret
and
mov
inc
and
and
cli
adcb
and
and
sbb
sbb
enter
cmpsl
jne
jl
int
nop
jle
or
idiv
dec
xlat
adc
daa
and
jmp
sub
jg
jae
jno
ret
push
sbb
jne
cltd
jno
push
dec
nop
iret
adc
pop
movl
adc
dec
sub
mov
insb
mov
loop
test
aad
pop
sbb
test
outsb
or
xchg
fstpt
xchg
enter
fwait
push
cld
test
jmp
dec
movsb
adc
cld
or
jo
dec
in
mov
loopne
daa
pop
and
lds
lds
loop
xchg
fcompl
lret
aas
shlb
or
in
cltd
cwtl
lock
lds
aaa
je
lret
add
xchg
imull
std
sbb
or
sbb
fsubrp
lahf
pop
les
cmp
hlt
aam
les
idivl
sbb
lods
add
mov
sub
push
clc
in
outsb
pop
jg
adc
jns,pt
adc
dec
loopne
push
fcompl
mov
icebp
push
pop
stos
mov
and
dec
jmp
xchg
pop
inc
jg
in
dec
pop
sbb
imul
mov
dec
cwtl
jne
or
dec
sahf
lahf
pop
push
fisubs
and
jne
cli
hlt
inc
cmc
sub
scas
mov
es
insl
pop
adc
push
add
lods
sub
pop
push
mov
imul
sbb
call
xchg
mov
dec
push
shll
jmp
dec
mov
rcrl
add
testl
mov
loop
adc
pop
sub
mov
xchg
popa
test
pushf
inc
push
xchg
push
jo
aaa
sbb
fs
pop
cltd
bound
mov
mov
dec
mov
inc
and
lret
out
dec
shl
leave
pop
orl
stc
test
arpl
jno
lock
cmpsb
pushf
lods
add
push
push
fisubs
xchg
pop
dec
loopne
lods
dec
rcll
sbb
pop
dec
push
data16
scas
mov
add
rorb
fistl
int3
ljmp
pop
int
push
je
push
cld
lret
mov
orb
or
push
arpl
ja
test
cmc
xchg
mov
sbb
jg
cs
and
cmpsb
and
mov
jno
xchg
xor
fstpl
cmp
or
or
fistps
sbb
inc
inc
bound
cwtl
das
xchg
mov
stos
test
pop
sahf
mov
repnz
xor
xchg
pop
icebp
popa
or
das
movsb
jno
push
out
mov
test
mov
push
mov
xor
mov
pusha
ss
cmc
jge
jg
fnstsw
sbb
jno
fisubs
cmpsl
lds
inc
outsl
adc
es
push
or
cld
jae
sbb
inc
xchg
adc
adc
in
push
adc
aas
fwait
pop
scas
jbe
push
mov
jns
cli
lea
in
inc
lods
lock
popf
pop
movsb
add
xlat
sub
mov
lahf
cmp
pop
or
out
dec
pop
dec
cmp
pop
push
fldenv
and
and
insb
cwtl
clc
adc
loope
push
push
mov
fs
addr16
dec
mov
sbb
sub
test
jnp
in
inc
mov
mov
orb
cmp
fnstenv
sti
es
cs
scas
popa
fisubl
cwtl
mov
inc
pop
adc
into
xor
dec
cs
cld
ret
ret
and
cmp
cs
adc
pop
jnp
dec
insl
xor
and
jecxz
fldenv
popl
jnp
ret
cld
ljmp
lahf
test
pop
lea
or
fcmovne
rcll
enter
sti
jecxz
xor
shll
into
xchg
inc
dec
add
inc
mov
pop
xor
punpcklwd
adc
dec
int3
cmp
fsubs
pop
sub
cmpsl
in
stc
mov
fs
sbb
insl
les
mov
xchg
xchg
ja
mov
das
in
jne
sub
aam
movsb
shrb
dec
mov
out
jae
std
rolb
xchg
adc
sbb
xor
and
std
dec
inc
lret
lahf
loopne
ss
fwait
and
mov
dec
mov
push
les
adc
in
and
nop
sub
outsb
xor
out
outsb
and
test
pop
fcoml
pop
outsl
hlt
mov
sbb
adc
and
add
out
jae
ret
push
aam
adc
out
ffreep
dec
inc
mov
out
shlb
mov
pop
adc
fwait
sbb
xchg
insl
mov
mov
pop
sbb
inc
iret
push
jnp
das
ljmp
sub
repz
out
in
loope
pop
push
or
hlt
push
cmp
pop
les
cltd
pop
mov
mov
leave
inc
xor
pushl
mov
outsl
xchg
push
or
pop
xchg
xor
push
inc
fstl
cltd
arpl
jg
mov
into
shlb
notb
push
rcl
movsw
mov
mov
and
fdivl
mov
sbbl
sahf
add
push
inc
and
fldt
sub
push
sbb
add
repnz
popf
pushf
in
pop
sub
shll
movsb
xlat
jecxz
inc
push
rorl
mov
nop
mov
pop
movsl
daa
adc
sbb
ja
pop
add
xor
adc
outsb
lds
push
or
scas
mov
and
mov
mov
mov
push
push
lock
sbb
sub
xchg
cmp
stc
dec
sbb
into
int3
in
cmc
mov
mov
jl
jns
inc
js
dec
in
push
mov
cmp
lcall
lret
pop
pop
xor
pop
incl
lods
mov
or
dec
in
rcl
cli
mov
rorl
xlat
jg
in
sahf
nop
fmull
arpl
mov
mov
and
push
addr16
je
sub
stos
jmp
in
or
mov
int
cld
int
push
dec
mov
out
je
mov
mov
les
mov
test
imul
xchg
and
stos
sti
daa
xchg
arpl
ss
sahf
cmp
mov
inc
imul
add
addr16
add
cmc
into
out
mov
mov
fadd
adcb
jge
mov
xchg
mov
push
adc
lret
dec
inc
adc
sbb
jmp
cmp
xor
sub
dec
icebp
pop
push
movsl
hlt
int
dec
jbe
xlat
data16
addr16
or
cmp
dec
and
cwtl
xor
and
mov
shl
es
push
test
int
xor
ss
mov
add
cs
push
lods
loope
orl
roll
xor
sub
jnp
pop
fwait
loop
daa
lods
cmp
jmp
insl
mov
xor
xchg
repnz
add
dec
pop
mov
pop
fdivl
imul
fisttpll
dec
inc
add
adc
lock
mov
push
mov
jmp
push
inc
ja
je
pop
rcr
cs
je
pusha
adc
test
lahf
mov
xchg
pop
ret
movsb
inc
cvtps2pi
je
popf
add
cmp
cmp
popf
roll
dec
inc
inc
add
mov
repz
fisubrs
sbb
sbb
in
fisttps
andl
adc
add
inc
fwait
inc
push
loope
push
jmp
cmpsb
movsl
cmp
pop
jae
push
iret
cli
pop
mov
mov
xchg
hlt
mov
data16
jnp
sub
arpl
cs
lods
jns
xchg
sbb
outsl
lea
dec
lds
inc
or
cmc
das
and
je
xchg
adc
call
lods
mov
lods
add
dec
push
jno
clc
sub
ret
pop
push
mov
mov
cmp
cmc
adc
xor
mov
sub
psubusw
pop
jns
mov
aaa
shrb
push
mov
test
or
lret
icebp
jl
mov
test
imul
jp
xor
dec
pop
or
pop
imul
sbb
mov
movsb
fidivs
mov
xchg
add
leavew
mov
xor
sbb
ret
mov
sbb
jmp
jae
jns
jns
stos
pop
ja
imul
mov
dec
fmull
scas
sub
int
dec
popa
mov
pop
stos
in
mov
fistl
push
les
movsb
fldt
iret
inc
and
jb
imul
sysexit
or
cmp
test
divl
movsl
test
ret
push
cwtl
rolb
cmp
cli
mov
leave
in
add
xchg
ljmp
xcrypt-ofb
cmpsl
sub
xchg
lods
xchg
sub
fists
fdivrs
testb
push
lea
mov
push
push
push
in
and
ja
mov
cmp
and
and
push
mov
fdiv
jno
int
daa
aad
jl
repnz
and
inc
rorb
in
push
aam
fbstp
sar
dec
popa
xchg
icebp
sbb
inc
inc
cmp
movsb
mov
sub
adc
dec
ficoml
outsb
push
mov
aam
push
lahf
shlb
pusha
mov
adc
pop
sbb
pusha
cmp
ljmp
fprem1
lock
rcrb
aas
xchg
xor
daa
mov
cmp
xor
mov
sbb
pop
arpl
data16
xor
sbb
cmp
ja
sbb
or
pop
sbb
mov
adcl
mov
push
and
shl
inc
and
sub
dec
popf
stos
popa
pop
pushf
and
mov
jp
data16
sahf
lock
mov
mov
stos
lds
repz
pop
pop
fistpl
xor
enter
jle
pop
sub
cs
fstps
mov
cmp
in
xchg
loop
cli
sbb
movsb
dec
add
nop
jo
jns
fisubl
add
mov
push
jb
jae
xor
mov
xchg
icebp
cld
dec
sub
insl
xor
fs
mov
pusha
push
add
mov
jecxz
jge
out
into
or
or
mov
je
test
mov
adc
leave
dec
pop
nop
das
outsb
pop
jbe
adcl
pop
and
or
mov
aas
hlt
sub
mov
xor
push
mov
push
daa
ret
sbb
mov
stos
adc
hlt
imul
adc
sbb
and
inc
movsl
add
jbe
outsl
and
and
push
aas
add
dec
jg
rolb
xchg
stc
adc
add
aad
xchg
sbb
stc
test
mulb
mov
and
pushl
mov
sbb
stc
mov
andl
test
mulb
call
mov
into
cmpb
shll
dec
cmpsb
and
and
push
pop
cmpsb
enter
pop
fsubr
or
jno
shlb
notb
mov
xchg
mov
dec
lock
pop
aas
mov
xchg
gs
jle
addr16
dec
push
cmpsl
xor
mov
call
jbe
adc
fstl
mov
fidivrl
or
cmovs
loope
int
mov
clc
cld
sbbb
pop
call
adc
negl
pop
mov
pusha
and
imul
in
lea
inc
cmpsl
cmc
dec
cmp
pop
and
fldt
pop
testb
std
dec
and
movsl
test
stos
jne
dec
cltd
dec
mov
inc
pushf
popf
mov
imul
in
out
test
push
arpl
mov
mov
sub
mov
lds
cmpsl
bound
add
data16
dec
and
mov
leave
add
mov
mov
push
adc
stc
loope
stos
add
xchg
notb
lcall
roll
sub
aas
pop
test
aaa
jne
dec
push
out
mov
cmp
mov
lea
cmp
das
movl
mov
lods
pop
sarb
xor
imul
sub
ror
mov
cmp
mov
dec
mov
aad
adc
mov
insb
popl
mov
dec
fst
hlt
xchg
pop
gs
aas
mov
add
test
not
in
andb
repz
lea
xchg
mov
jae
fstps
subl
repnz
xor
add
add
push
fld
xor
into
fistl
out
movsl
mov
add
lods
push
xchg
adc
test
out
sbb
lods
mov
sub
pop
xchg
xchg
pop
mov
jl
jge
adc
xor
pop
aam
cmpsb
pop
mov
cltd
in
jmp
add
daa
and
rcrb
push
xchg
lcall
shlb
pop
movsb
mov
inc
inc
jp
sub
push
in
lea
push
aaa
icebp
jne
push
out
movsb
pop
jmp
sub
fsubp
jno
and
mov
sub
lock
das
lcall
mov
dec
in
adc
cmpsl
add
mov
loopne
negb
xor
xchg
ja
and
out
push
roll
js
cld
aam
lret
mov
xchg
mov
imul
popf
je
sarl
clc
push
cmp
mov
jmp
jns
jecxz
mov
nop
sbb
sub
add
cmpsl
and
stos
mov
adc
mov
pop
fnstsw
loop
push
adc
adcb
loopne
leave
jecxz
jge
addr16
adc
mov
push
bound
mov
xor
mov
mov
popf
lods
mov
push
or
inc
nop
mov
call
call
push
shlb
jmp
incl
inc
fdivr
mov
cmpsb
in
fsubl
mov
cmp
pop
add
loopne
cli
into
fisubrl
shr
out
in
dec
mov
push
add
rcrb
mov
sbb
test
mov
xor
pop
xchg
xchg
dec
enter
push
js
pop
sahf
js
jp
sub
jb
mov
jns
push
insl
jp
cmc
push
les
imul
mov
std
test
std
mov
inc
lret
std
mov
push
adc
jnp
jge
pop
xchg
addl
ret
pop
xor
sub
dec
mov
xor
sbb
bound
jmp
push
sub
jbe
jae
aaa
push
in
cltd
mov
dec
cs
jle
mov
aad
xor
stos
mov
lock
call
rol
scas
dec
sbb
in
xor
push
test
dec
mov
fisttps
rcr
mov
sbb
xchg
adc
cs
stos
jno
or
insb
shr
jbe
push
cmpsb
clc
jne
cmp
and
sbb
mov
aam
mov
inc
mov
aad
test
dec
add
loope
or
roll
ljmp
xor
lods
in
repz
pop
pop
adc
adc
add
mov
jl
pop
mov
mov
inc
push
movl
aad
loopne
inc
scas
pusha
xor
xchg
adc
xor
adc
fmul
cwtl
mov
dec
xor
in
fnsave
std
or
movsb
xor
lods
or
enter
jg
popf
sbb
lcall
stos
xchg
imul
jge
xchg
adc
add
fisubrs
imul
ljmp
test
int
icebp
int3
mov
ja
push
mov
je
mov
dec
mov
stos
ret
and
sbb
xchg
ja
and
popf
mov
add
xor
pop
inc
xchg
sub
xchg
xchg
pop
pusha
in
mov
loopne
in
mov
fwait
sbb
and
sahf
out
mov
jbe
push
lea
mov
arpl
or
sub
stos
add
cwtl
int
jbe
mov
pop
mov
cmp
sbb
or
out
sub
jp
mov
test
add
mov
movsb
scas
jne
xchg
aad
lret
enter
sahf
and
or
popw
and
ss
stos
jmp
mov
sbb
mov
pop
and
jb
xchg
adc
cvtps2pd
adc
push
pusha
rcll
shlb
clc
in
pop
cmp
pop
pop
or
lods
jne
xchg
ds
das
std
mov
sarl
xchg
dec
clc
daa
ljmp
popa
pop
cmpsl
repnz
add
mov
fnclex
flds
add
dec
jns
rorb
repnz
push
sbb
cltd
daa
mov
or
and
and
sbb
pop
push
add
repnz
or
sub
cmpl
es
out
jg
mov
inc
inc
jecxz
xchg
mov
or
mov
ss
out
mov
and
sub
mov
into
xchg
adc
std
push
cmp
imul
jmp
dec
xor
lret
ss
outsb
int3
es
ss
cmp
mov
andl
cs
movsb
inc
mov
xor
cmp
xor
out
cmc
dec
subl
push
loope
mov
into
dec
or
js
stc
int3
imul
int
mov
push
xchg
icebp
popa
lret
lods
push
cli
xchg
push
xor
sub
loopne
popf
adc
incb
iret
into
sarb
daa
push
in
std
leave
xchg
add
push
sub
xorb
popf
int
add
pop
dec
mov
rcr
xor
sub
stc
pop
pop
cmp
mov
mov
fists
adc
or
inc
jbe
int
int
fs
mov
pusha
push
jbe
icebp
cltd
fstps
bound
push
mov
push
pop
testl
cld
push
or
cmp
loope
aas
mov
inc
lahf
sub
add
dec
sbb
add
xor
pop
push
jae
add
repnz
pop
leave
std
xchg
icebp
nop
jno
push
pop
icebp
mov
push
mov
hlt
mov
mov
sbb
push
sub
mov
mov
push
push
and
stos
insb
fldt
hlt
cmp
inc
lret
sahf
out
mov
push
or
xor
pop
push
jb
adc
scas
ficompl
aam
cmpsl
pslld
mov
xchg
int3
xchg
jmp
jb
lahf
cli
movsl
and
cld
pop
decl
cmp
mov
adc
sub
rcll
mov
pushf
or
shlb
enter
outsb
inc
mov
jns
and
movsl
test
sub
gs
iret
fidivs
add
xorb
cmp
dec
mov
iret
out
cmp
sahf
loop
sbb
mov
lods
out
pushw
or
sub
aaa
sahf
xchg
hlt
push
pop
sbb
or
push
les
mov
dec
lahf
or
xchg
inc
lcall
insl
cmc
shl
xor
out
cmp
xchg
ret
out
adc
and
aas
enter
nop
fldenv
mov
gs
push
mov
shr
sub
in
jbe
pop
shrl
cwtl
stos
and
lea
mov
xor
push
or
out
fmull
push
repz
testl
out
pop
dec
and
inc
adc
je
xchg
xor
mov
or
or
push
sub
pop
inc
test
sbb
pushf
sbb
cs
push
sub
pop
or
dec
sbb
ljmp
enter
and
push
mov
jnp
invd
sub
pop
imul
pop
cmp
or
test
test
ret
xchg
imull
insb
mov
jb
fistl
dec
mov
xor
outsb
dec
fwait
push
and
clc
add
sarl
mov
or
rcrb
ret
jle
xor
cmp
xor
xlat
jmp
mulb
pop
stc
jns
repnz
mov
call
aad
mov
clc
xor
leave
jae
iret
jmp
arpl
pop
movsb
outsl
lahf
in
fnsave
imul
jp
xchg
popl
lds
mov
lods
in
lcall
adc
jmp
jg
sbb
cmp
icebp
cmp
test
pop
pusha
fsubr
dec
int3
iret
jns
dec
cmp
popa
nop
inc
test
xchg
jp
dec
ja
mov
test
clc
jmp
dec
jg
jge
xchg
pop
and
mov
push
out
adc
aam
mov
mov
and
or
jmp
xchg
pop
loopne
mov
mov
cmp
fwait
adc
aaa
popa
filds
mov
and
inc
or
pop
push
xchg
inc
adc
and
enter
lret
sti
rorl
mov
jne
or
xchg
or
fdivrl
cmc
push
int
jo
add
faddl
push
or
adc
movsl
imul
movsb
insl
mulb
add
in
sub
and
inc
sti
pop
add
xchg
js
add
ss
mov
call
sbb
cmp
outsl
iret
xor
add
inc
jae
inc
in
mov
mov
sub
or
adc
mov
scas
dec
addr16
cmp
fisttpl
fs
dec
pop
mov
mov
dec
sbb
pushf
xchg
sbb
cmpsb
data16
or
pop
in
repnz
or
cmpsl
pop
pop
adc
push
xchg
add
fsubrs
arpl
gs
jne
cltd
insl
imul
mov
push
aaa
fistpll
xchg
sub
jmp
out
into
cld
xor
jnp
repnz
pop
jb
push
mov
push
inc
cs
ja
and
xchg
loope
pop
ds
pop
adc
and
clc
out
mov
pop
lahf
rcrl
xchg
sbb
mov
dec
pop
sub
cmp
fwait
jbe
int3
inc
popa
in
mov
pop
popa
mov
inc
roll
js
mov
pop
pop
mov
icebp
movsb
mov
push
xor
out
shrl
push
movsl
adc
cmpsl
xchg
sub
sub
sti
mov
xor
adc
insb
mov
neg
icebp
lcall
into
ja
fbstp
xchg
rcll
scas
shrb
pop
out
in
shlb
xchg
xchg
xchg
inc
imull
mov
pop
cmpb
or
mov
push
addr16
aas
shrl
lahf
enter
xor
push
sub
xchg
or
push
adc
test
in
mov
data16
jbe
push
into
dec
mov
int
cli
aam
sbb
lcall
pop
sbb
mov
lea
fs
and
pop
xor
lods
rcl
dec
add
inc
aas
aam
les
and
sub
sbb
pop
ficomps
out
push
cmpsb
clc
in
add
mov
fs
pop
mov
leave
loop
add
jp
jle
je
pop
cmp
fidivrs
scas
call
xchg
fnstcw
js
cmp
add
data16
mov
out
cmp
in
push
cmpsb
add
mov
and
dec
jno
mov
fdivrl
adc
bound
xor
imull
jmp
psllw
test
andb
movsl
mov
mov
adc
mov
dec
adc
test
into
cmp
jno
out
stos
leave
icebp
sub
in
fwait
add
jge
mov
mov
sbb
data16
adc
fs
pop
mov
inc
dec
push
xor
mov
fistpl
xchg
add
mov
push
add
aaa
stc
xchg
sub
out
call
in
sub
sbb
insl
push
dec
add
mov
sbb
js
push
or
jns
jmp
and
pop
test
nop
fimull
push
fadds
mov
cmp
orb
xor
add
movsl
and
fs
sbb
jnp
aad
push
and
int3
adc
ret
das
test
je
mov
or
push
bound
cld
lea
adc
pop
xlat
jno
insl
jae
stc
imul
push
jnp
pop
lods
arpl
arpl
inc
repnz
pop
dec
outsb
sub
jns
cmp
test
sbb
aad
and
mov
out
push
cmp
shll
ret
inc
pop
xor
or
mov
sbb
pop
sub
scas
jne
adc
cmp
push
adc
inc
subb
mov
bound
das
lahf
int3
mov
fdivl
insl
shlb
orb
pop
ficoms
daa
adc
jl
mov
fcoml
mov
mov
sbb
adc
jo
ret
mov
popf
mov
loop
movsl
jle
adc
and
dec
repz
dec
hlt
mov
push
push
sahf
cmp
repnz
es
lods
ret
mov
jmp
jle
into
adcl
sub
movsb
sub
loop
adc
fs
sub
add
cmp
dec
fimuls
aad
lcall
addr16
jle
mov
add
mov
inc
mov
stos
xchg
pop
push
loop
sub
dec
jg
test
enter
dec
in
arpl
gs
jne
sbb
and
mov
sub
test
pop
iret
pop
and
dec
inc
cld
push
lcall
mov
push
mov
xlat
movsb
inc
or
inc
stc
push
cmc
clc
push
ja
lock
shll
push
movsb
int
loope
inc
call
movsb
sbb
testb
decb
das
daa
inc
push
cmp
jg
sub
jnp
orb
sub
inc
and
daa
inc
inc
mov
icebp
and
in
cli
test
dec
mov
test
enter
xchg
cmp
cmp
clc
shlb
loopne
test
cmc
xchg
xrelease
or
dec
and
shl
mov
shrb
xchg
and
jns
sbb
out
imulb
sub
jg
adc
lret
sbb
inc
mov
sub
lcall
jne
add
das
push
decl
in
and
or
or
out
mov
mov
stos
and
in
inc
push
sub
xchg
lret
fimuls
jb
cmp
mov
rorb
push
aam
cmpsl
lods
mov
cmp
xorl
mov
aam
pop
xchg
aas
in
out
cmp
sub
lods
idiv
jge
loope
int
mov
add
dec
mov
push
loopne
sbb
adc
lock
test
inc
test
jp
pop
loope
mov
mov
push
push
std
inc
fisubrs
lret
fcom
jns
jnp
mov
mov
push
jns
cmpsb
outsl
and
stos
xchg
xchg
mov
sahf
cmc
je
or
ss
cmpl
nop
mov
sbb
dec
or
data16
repz
push
sbb
or
xor
sahf
and
xor
sbb
add
fistpll
mov
popf
sub
repnz
or
imul
lcall
sbb
into
ret
cmp
xor
orb
push
sbb
xchg
adc
mov
xor
and
and
mov
andl
ds
aas
test
dec
loop
ja
jle
dec
jecxz
add
pop
xchg
and
add
ret
aaa
in
push
xor
movsl
out
xabort
sub
ret
rcrb
xorl
fwait
mov
and
dec
mov
sub
xor
imul
loop
ja
inc
fcoml
imul
sbb
add
outsb
sti
jmp
cltd
inc
or
xorl
aas
add
int
and
and
lret
push
push
rcr
and
pop
or
pop
xchg
inc
or
mov
loop
sub
cmpsl
mov
add
xchg
rcrb
imul
mov
or
in
mov
pushf
push
femms
ljmp
loopne
mov
loop
sbb
pop
dec
popf
xchg
push
fwait
push
int3
jae
mov
scas
ja
pop
xchg
out
mov
cld
adcb
and
pop
lods
aaa
nop
push
in
int3
int3
fwait
mov
scas
jg
push
sub
lods
and
sub
gs
adc
sbb
sub
and
insb
pop
xor
call
int
push
inc
jno
aam
mov
aaa
pop
lea
mov
dec
inc
or
push
and
add
mov
xor
lret
adc
lock
jnp
inc
dec
jle
push
mov
imul
add
mov
pop
mov
and
push
and
aam
sahf
in
cld
push
or
pop
fidivrs
inc
jecxz
inc
push
pop
fs
fadd
or
test
in
push
dec
ljmp
mov
fstpt
fstpl
loopne
bndldx
loope
test
bound
fisubl
inc
loop
jb
ret
push
jmp
test
mov
js
pop
gs
sub
adc
mov
mov
mov
mov
imul
mov
cmpsl
roll
mov
cmp
mov
fcmovb
inc
in
rorl
cmp
sbb
dec
xchg
add
adc
lahf
lock
jae
ds
xor
xchg
arpl
adc
mov
xor
hlt
cmp
pop
addr16
test
push
cmp
xchg
and
cli
push
push
jmp
push
pop
scas
scas
in
subb
dec
pop
adc
popf
pop
mov
je
and
test
lods
inc
shlb
mov
pop
inc
add
fadd
in
out
fisttpll
adc
pop
ret
push
jg
adc
jne
or
mov
adc
dec
stos
dec
std
jmp
movsl
jl
fsts
in
fsubl
push
xchg
push
adc
iret
insl
sbb
add
push
sbb
dec
repz
push
jl
or
jne
lcall
jae
shrl
mov
fdivl
popf
push
into
sub
sub
scas
sti
jae
mov
scas
adc
leave
mov
adc
jno
cld
jecxz
and
pop
push
pop
movsb
cld
adc
or
xor
lahf
icebp
dec
and
add
add
xor
adc
sti
xchg
adc
push
cld
stos
test
negb
and
popf
cmp
scas
neg
scas
dec
push
icebp
sub
cmp
jp
sub
adc
repnz
scas
addr16
xchg
scas
mov
imul
pop
rorl
out
icebp
fs
pop
sbbb
mov
cli
bound
push
pop
sarb
push
cmpb
xchg
fwait
xor
mov
lods
cltd
xchg
inc
jno
fwait
mov
enter
clc
jb
aas
out
outsl
add
mov
pop
in
push
lods
repz
out
jae
test
ja
frstor
xchg
adc
clc
in
mov
push
or
mov
inc
ljmp
movsb
mov
fdivp
or
jge,pn
outsb
ficomps
cmp
roll
jp
dec
fsubrs
out
pop
mov
inc
daa
inc
fcomps
sbb
pop
cmp
ror
out
xor
aaa
xchg
adc
inc
cmpsb
daa
sub
sub
xchg
push
add
aad
ret
stos
mulps
iret
or
jge
ja
pusha
or
icebp
mov
movsl
js
mov
xchg
push
ret
pop
pop
pop
pop
cld
jnp
std
fdivrs
pop
test
push
inc
in
sub
mov
rcrl
loope
outsl
pop
inc
and
lds
outsb
mov
andb
ljmp
mov
inc
lea
jl
std
stos
jne
ja
in
xchg
sub
dec
add
and
repnz
shlb
loopne
das
sub
das
mov
shr
mov
xchg
push
xchg
lea
leave
mov
insl
fidivrs
hlt
mov
dec
ret
dec
push
mov
xchg
fsubl
fisttps
dec
imul
rclb
test
popf
mov
rcr
lcall
subl
push
out
lods
enter
outsl
pop
std
js
in
lahf
cltd
outsb
dec
cmp
push
mov
and
cmp
or
xchg
xchg
push
jae
and
into
insb
lods
sarl
aaa
mov
and
loopne
jle
lret
jnp
xor
scas
jg
cld
lock
das
push
negb
mov
outsl
pop
xchg
pop
inc
sub
add
sti
adc
inc
ds
dec
gs
insb
mov
pop
js
cmpl
fcoms
iret
push
icebp
cmpsb
and
dec
shll
inc
std
jbe
inc
or
pop
adc
jno
xor
xchg
loop
pop
inc
in
xor
sbb
and
xor
aad
fsts
jae
jmp
pop
mov
idivl
test
sbb
div
and
leave
iret
sti
lret
pop
push
arpl
mov
adc
cmc
mov
cwtl
push
daa
jb
push
dec
lock
icebp
pop
pushf
jg
push
xor
and
inc
or
push
adc
sbb
add
stos
stc
int3
cmp
sbb
es
aam
push
sub
aad
jmp
push
cmp
cmp
jnp
ljmp
div
out
outsb
pop
push
jno
cltd
cmp
pop
mull
fisttpll
pop
arpl
into
addr16
xchg
inc
mov
ja
or
push
popf
pop
je
xor
or
push
adc
pusha
inc
mov
aad
js
inc
mov
repnz
xchg
mov
jae
insl
push
ror
xor
jnp
add
ljmp
jle
or
jns
xlat
inc
repnz
rorb
and
or
lret
into
and
daa
loop
jp
cltd
jo
int3
pop
mov
push
movsl
iret
cmp
data16
adc
out
pop
decl
stc
ja
push
adc
data16
lea
dec
movsb
or
repnz
pusha
stc
push
fs
fistps
stos
push
js
sub
push
or
fsts
jmp
test
mov
insb
and
xor
mov
in
iret
lods
mov
push
stc
loope
pop
inc
arpl
loop
add
sub
test
loopne
xchg
xchg
bound
ret
fiadds
dec
mov
out
mov
outsl
inc
fwait
xlat
jmp
loopne
push
mov
and
gs
mov
jp
rcrb
fxch
bound
in
aas
frstor
xchg
lret
insl
push
movsb
flds
push
lret
add
mov
ret
sub
ret
fisttpll
mov
push
push
mov
and
xor
cmpsb
and
add
jbe
pop
ret
stos
lahf
rcll
jbe
lods
ret
pop
or
clc
test
stos
mov
les
inc
roll
das
fcoml
sti
mov
push
mov
mov
pop
adcb
xorb
dec
jo
or
xchg
sahf
jp
push
mov
repz
mov
in
scas
cmc
or
gs
add
insb
rcll
dec
pop
mov
mov
sbb
adc
xchg
jnp
out
movsb
jl
cmp
adc
mov
xor
sahf
push
pop
sub
fildll
rdpmc
adc
jmp
add
xor
movsb
push
jae
jns
and
mov
lods
dec
sub
fdivrs
sti
jae
enter
pusha
ds
movsl
fcoms
adc
and
sbb
out
push
out
and
stc
lock
fimull
popaw
imul
mov
push
cmp
mov
cmpsb
ret
aaa
inc
lret
js
xor
mov
push
push
sub
ror
jb
andl
popa
pushf
xchg
jnp
dec
testl
cmp
xor
xchg
inc
pop
xchg
aam
sbb
inc
cmp
shll
lods
scas
ret
inc
cwtl
inc
lret
mul
or
popf
outsb
sbb
mov
mov
out
daa
cltd
ficoml
loope
shl
test
xorl
xor
pushl
inc
inc
pop
cmpsb
mov
ja
push
pop
in
jb
jae
insb
jle
xor
sbb
and
in
mov
cmp
rorb
ret
incl
dec
pop
mov
add
sbb
fidivrl
movsb
int
mov
sub
lret
cmp
mov
xchg
popf
sub
jb
mov
aaa
fs
mov
gs
mov
subb
pop
jp
adc
inc
stos
cld
inc
mov
push
rolb
shrl
movsb
cli
xchg
cwtl
int
mov
add
pop
fbstp
addr16
subl
add
dec
push
out
mov
jns
fldcw
popa
mov
insb
into
or
orb
jecxz
mov
fldl
sub
cmp
testb
loopne
push
jnp
add
push
jmp
sbb
lea
sbb
call
leave
jp
mov
dec
sub
arpl
jmp
popf
xchg
pushf
push
and
mov
push
add
adc
ljmp
push
rolb
sub
aam
push
cli
mulb
mov
xchg
inc
add
push
dec
add
sub
mov
xchg
call
jle
adc
repz
enter
pusha
sub
lds
into
dec
pop
lahf
andb
jb
cli
push
jns
ljmp
gs
fdiv
in
shlb
lds
sub
test
ljmp
or
dec
fnstsw
jnp
cmp
fdivr
sbb
sahf
and
or
pushf
dec
flds
inc
lret
mov
mov
sbb
mov
mov
pushf
mov
cmp
or
inc
int3
xchg
lea
push
or
stos
jb
adc
pop
adc
xchg
sbb
gs
and
mov
jg
mov
mov
sbb
mov
stc
fstpl
mov
int
mov
xchg
fidivs
sub
pop
test
mov
xchg
testb
sub
mov
xchg
sub
pop
jno
lods
rclb
add
xchg
call
mov
sub
mov
lock
loope
lods
jno
push
mov
xchg
mov
aas
and
lock
jnp
and
adc
cmp
push
bound
xchg
in
push
leave
incl
mov
fucom
mov
push
jae
push
sbb
cld
ds
push
push
call
push
imul
out
sbb
or
push
jne
mov
divb
xchg
and
cmp
pop
xor
or
inc
ret
dec
lret
mov
fstp
pushl
sub
test
adc
dec
into
aaa
xchg
xor
mov
outsb
sub
pop
fs
lret
or
jle
int
mov
ja
rclb
mov
push
mov
pop
adc
call
mov
repnz
sbb
rcrl
jge
mov
cmpsl
cmc
cmc
gs
scas
orb
test
adc
outsb
fbld
push
mov
xor
jo
sbb
fs
out
mov
or
int
mov
push
pop
pop
inc
cmp
cmp
mov
inc
push
adcl
sub
insb
pop
or
movsl
push
das
inc
out
movsl
scas
mov
aas
aam
mov
mov
ret
sbb
cmpb
push
dec
mov
test
xor
ret
mov
repz
call
add
sbb
mov
add
or
pusha
divb
mov
or
pop
mov
inc
push
lods
mov
repz
inc
clc
clc
xor
adc
push
movsl
es
hlt
xchg
pop
xchg
mov
or
xor
push
repz
cltd
insb
test
cmp
out
push
in
fidivrl
sbb
rcrb
ss
scas
jmp
imul
in
lret
cmpl
inc
out
push
mov
xor
aas
clc
out
cmp
mov
inc
mov
cmpsb
push
addr16
divb
sbb
mov
hlt
int3
pop
data16
popa
mov
xchg
fimuls
aas
mov
fists
addr16
insl
mov
fucomip
lea
xor
push
push
popa
movsl
cmpsl
push
mov
push
frstor
lea
shrl
pop
jmp
pop
push
notb
xor
leave
scas
aas
mov
pop
pop
mov
xlat
mov
loop
or
lret
mov
mov
stc
jns
mov
mov
pop
lock
or
leave
aad
testb
out
jl
std
das
jge
movsl
ja
mov
push
dec
dec
pop
bound
out
ficomps
add
ret
stos
clc
scas
das
jne
push
sbb
jg
lock
jnp
imul
movq
scas
icebp
adc
xchg
push
shlb
test
out
and
repnz
fldenv
add
jp
mov
int
sarl
mov
iret
sub
sub
cmp
aaa
sbbl
jne
jle
int
loopne
cmp
xchg
cmp
data16
mov
insl
mov
xor
dec
mov
jmp
les
xchg
fldenv
je
out
gs
loop
mov
dec
jle
ret
mov
or
adc
xchg
add
inc
mov
hlt
mov
ficoms
scas
xlat
fdivl
int
iret
repz
push
xor
add
mov
pop
rcr
cmpsb
dec
in
or
lea
lds
cld
cs
xchg
push
sbb
jae
orl
fdivrl
add
es
sarb
dec
sub
stos
sbb
xor
das
into
stos
add
mov
arpl
ljmp
jp
pushf
mov
inc
mov
xor
shlb
adc
pop
cmpsl
xor
push
scas
flds
xor
jne
stc
sub
cmp
std
xchg
in
mov
dec
xchg
mov
bound
sbb
push
loope
mov
test
test
jmp
les
icebp
data16
mov
jge
mov
and
cld
ljmp
mov
inc
add
rcrb
xor
out
xor
std
mov
mov
ffreep
sub
int3
jns
dec
lcall
in
loop
push
cltd
fsubr
sarb
mov
xchg
popf
mov
mov
popf
aas
add
and
arpl
jne
das
cmp
lret
imul
inc
outsb
xchg
arpl
lods
or
and
lea
lcall
and
andb
mov
loope
jp
xchg
push
jnp
mov
adc
mov
stc
push
jp
insb
jb
hlt
push
pop
incb
lods
mov
lds
popa
inc
movsl
mov
adc
sub
adc
pop
shll
ss
test
imul
outsl
ret
cmp
out
popa
jl
xchg
lahf
addr16
stc
and
dec
push
pop
rolb
cmp
sti
mov
jge
cmpsb
iret
lock
xorb
pop
int
add
repnz
testb
outsb
fstl
cmpsb
adc
repnz
xlat
jp
push
xor
cld
xchg
shlb
mov
dec
push
imul
pop
jno
cmp
mov
jbe
mov
mov
adc
xchg
xor
es
inc
inc
add
push
cs
cmp
imul
sbb
popa
addb
stc
jecxz
imul
xchg
or
mov
out
mov
in
je
rorl
fs
popa
and
icebp
std
js
jo
mov
ja
aad
mov
mov
pop
add
rorl
adc
es
icebp
das
sub
mov
xchg
cmp
and
cmp
mov
adc
rorl
sub
jns
dec
test
enter
gs
push
adc
jae
imul
aaa
mov
div
sub
adc
imul
leave
aas
aaa
enter
mov
insb
jne
dec
inc
sbb
data16
inc
mov
adc
jbe
and
in
roll
add
jb
mov
mov
sub
sahf
push
sti
or
xchg
xchg
push
lret
push
mov
mov
lods
out
mov
out
cld
aas
ret
and
stos
sahf
push
inc
dec
mov
xor
cmc
push
sbb
xor
cmp
sti
lret
xor
sub
mov
sub
nop
std
mov
fdivl
inc
pop
mov
fcoms
je
pop
cmp
out
enter
dec
scas
movsl
push
add
sub
int3
jne
pop
cmp
ret
sub
xor
and
sub
sbb
lds
divb
mov
xor
sahf
inc
ret
mulb
jmp
and
pop
or
out
out
cs
mov
adc
and
in
jae
sbb
nop
sahf
scas
mov
dec
pop
or
loope
push
add
xchg
in
out
xchg
shlb
lods
les
sbb
lock
in
imul
cld
repnz
push
pop
jl
movsb
popf
call
or
aaa
or
movsl
fadds
imul
test
icebp
fmuls
scas
jae
scas
and
pop
sbb
std
sbb
out
lock
pop
adc
pop
imul
inc
dec
pop
ret
not
and
pop
cmp
dec
mov
rorl
ja
clc
test
cmpsl
push
adc
pop
test
fisttpl
ret
push
insb
aaa
jae
fsubl
xor
xchg
cmp
out
inc
out
dec
lret
jno
sub
clc
js
pop
in
inc
add
dec
aas
sub
lret
fiaddl
jl
add
add
sahf
pop
fwait
fwait
lahf
mov
test
aam
daa
shll
leave
repnz
mov
outsb
mov
push
les
dec
or
pop
out
sbb
mov
push
jae
and
add
sbb
test
adc
into
aam
jns
testl
mov
rcrl
sarb
insl
das
in
icebp
push
outsb
addr16
push
xchg
sub
fiaddl
out
fcoml
sahf
and
jg
mov
jle
scas
test
xchg
inc
or
inc
mov
push
and
fcompl
mov
sub
pop
or
adc
mov
mov
and
rolb
testl
movsb
cmp
xchg
mov
dec
and
lods
arpl
es
pop
cs
inc
lock
inc
and
out
cmp
pusha
popa
icebp
and
insb
outsl
hlt
mov
movsb
std
mov
stos
xor
lahf
sub
nop
dec
cmpsb
lahf
or
push
mov
fmulp
test
inc
nop
cmp
mov
inc
enter
xchg
insl
xor
cmp
pop
xchg
aaa
insb
mul
aam
xorb
cmp
stc
push
fstpl
dec
or
dec
sar
out
lods
std
and
pop
cmp
loop
bound
push
aas
push
test
and
call
pop
inc
or
mov
mov
xchg
shrl
push
and
pop
in
sub
xor
mov
push
shll
lea
pop
test
add
and
inc
or
sbb
sti
stos
jb
ret
jnp
outsl
das
mul
and
int3
and
out
or
mov
outsb
das
xor
aad
xor
pop
flds
cmp
add
mov
xor
adc
inc
insl
pop
adc
inc
testb
bound
dec
fwait
fwait
jne
arpl
out
inc
ret
mov
push
mov
jecxz
pop
mov
cmp
sbb
and
ss
daa
into
leave
add
inc
pop
aad
xchg
sti
fidivrs
sbb
cmc
jns
cmp
pushf
jecxz
mov
shlb
ljmp
push
jns
ret
icebp
pushf
jmp
cmp
subl
pop
mov
loopne
jae
fnstcw
popf
jo
inc
ret
pop
sub
in
pusha
mov
sbb
mov
sahf
lret
test
sbb
xchg
inc
aad
sbb
jecxz
sub
mov
out
mov
lods
dec
xchg
jo
push
jmp
leave
sbbl
popa
data16
xchg
aas
sub
cmpsb
dec
inc
xor
fbld
fwait
out
aas
adc
jo
into
shll
mov
jo
mov
ficoms
xchg
mov
jne
pop
dec
popf
shl
add
xchg
mov
inc
lock
test
mov
and
jg
pop
push
jl
jmp
mov
pop
dec
cs
dec
aaa
mov
push
inc
loope
xchg
es
packssdw
out
adc
xor
jae
sbb
and
cmp
sub
jecxz
push
jne
shrl
rolb
je
js
rol
movsb
pop
in
push
popl
hlt
xor
scas
sbb
fucomi
sbb
repnz
movsl
jo
inc
into
add
mov
ja
mov
ror
repz
jbe
dec
sbb
sub
jb
lea
mov
push
fcoml
les
add
enter
addb
popf
imul
mov
cmp
dec
adc
mov
ljmp
jg
xor
js
pop
ja
arpl
in
lret
cli
mov
dec
sub
cmp
mov
mov
mov
addr16
mov
pusha
sub
xor
cmp
jp
sub
bound
ja
int3
xchg
xchg
fcoms
and
cmpsb
lcall
push
inc
hlt
jmp
xchg
std
mov
or
add
in
add
jb
int
fstpt
pusha
cmp
cli
pop
xchg
fistpll
scas
cmp
iret
out
mov
and
pushf
jle
inc
and
outsl
push
sti
cmpsb
inc
ja
cmp
inc
rorb
hlt
hlt
lahf
xor
mov
in
dec
cmp
ret
popl
cmc
lret
add
out
push
xchg
loopne
and
xor
stc
add
lods
insb
mov
aaa
jo
xor
lods
insl
loopne
test
lea
mov
pop
dec
fstpl
lret
push
pop
mov
fistl
jae
push
push
xchg
int3
pop
push
jg
cs
imul
adc
sub
push
je
add
sbb
pop
fs
jmp
cmc
xchg
in
or
xchg
jnp
pop
jg
xchg
int3
insb
int3
addr16
mov
or
aaa
stc
and
stos
cmp
cs
or
dec
or
xchg
scas
push
ficomps
movsl
inc
orl
adc
jmp
fisubs
sarl
rcr
push
lods
clc
int
gs
push
xchg
in
fnsave
jge
add
pop
lock
xorl
shll
adc
xor
outsl
sbb
fstl
negb
int3
inc
enter
js
js
push
inc
xchg
icebp
pop
dec
sahf
arpl
call
jecxz
leave
push
mov
in
xchg
and
mov
loopne
and
mov
in
repnz
not
test
std
lahf
out
mov
mov
xchg
lret
xchg
mov
lcall
andl
jns
cmp
sti
pushf
cmpsb
adc
or
xor
dec
fbstp
dec
xlat
and
neg
xor
stos
mov
divb
dec
bound
pop
test
xchg
mov
call
jle
pop
call
xchg
inc
inc
adc
mov
jmp
je
inc
sub
adc
test
in
in
mov
sbb
mov
push
enter
sti
hlt
add
subb
jb
and
mov
or
adc
cwtl
sub
test
jbe
mov
ffree
xor
incb
dec
cld
mov
sbb
shlb
xor
cmpsb
xchg
out
popf
cld
aas
popf
call
cmpsb
push
repnz
cmp
jbe
pop
dec
cmp
scas
cmp
push
or
fiaddl
std
test
daa
cld
loop
pop
jo
ss
xor
mov
add
test
idivb
mov
mov
cmp
js
cmp
mov
pop
gs
fidivrs
and
rol
in
mov
shl
mov
insl
sub
dec
cltd
xchg
or
sub
inc
jl
das
cmp
mov
fiaddl
inc
int
bound
mov
rcl
xlat
dec
sub
ds
scas
int
nop
ret
es
sahf
shrb
test
imul
andb
fidivl
gs
ficompl
or
and
push
push
push
ss
test
addr16
add
lods
inc
fsubp
sbb
nop
mov
sbb
push
divl
adc
cmp
adc
sbb
sti
es
add
add
adc
cmpsl
in
xor
mov
pusha
aad
push
das
gs
lahf
push
xchg
mov
pop
fmull
lock
inc
andl
add
ror
dec
mov
mov
icebp
push
mov
test
pop
mov
add
xor
jle
inc
xchg
cmp
mov
xchg
test
aam
imul
push
push
popl
xchg
mov
mov
call
scas
imul
or
popa
out
cli
out
cmp
lahf
push
outsl
lds
mov
sbb
sbb
cmp
data16
test
xchg
jne
xor
or
mov
sbb
add
sub
and
sbb
fs
pop
mov
push
cmpsb
arpl
fbstp
and
cmp
aad
sbb
das
inc
cmp
and
call
cs
push
int3
ss
cmp
mov
push
int
sbb
push
out
shlb
mov
mov
mov
jge
gs
inc
inc
std
fdivrp
div
push
not
adc
add
lcall
push
into
iret
ljmp
xchg
lret
ljmp
adcb
push
jb
mov
mov
icebp
arpl
add
std
push
sub
dec
pop
xlat
sbb
test
scas
es
xor
push
pushf
hlt
int
dec
test
pop
jo
sub
idiv
in
mov
arpl
xor
xor
push
stos
cltd
mov
xchg
inc
mov
in
xchg
mov
pop
add
dec
xchg
cltd
int3
out
or
loopne
pop
adc
or
pop
cli
jae
lea
scas
adcl
mov
rcl
insl
mov
push
mov
mov
mov
xor
push
aas
out
dec
fcmovne
pop
ret
aam
andl
paddq
add
imul
xchg
test
xor
push
add
adc
insl
inc
mov
mov
scas
adc
cli
pop
mov
add
sti
mov
pop
std
add
or
mov
dec
ret
inc
or
push
add
lret
mov
filds
adc
test
js
xchg
lock
loopne
adc
fwait
mov
and
jge
loop
push
sar
pop
cmpsb
push
pop
push
dec
ret
cmp
jp
jns
popa
test
loopne
pop
push
jbe
les
mov
jo
sub
mov
mov
int
and
lods
testb
ds
sub
pop
push
clc
jbe
mov
cli
shrb
push
mov
dec
outsb
in
sbb
pmulhw
ljmp
pop
movsl
into
lock
xor
mov
xchg
lret
mov
mov
pusha
rcl
dec
div
imul
fadd
inc
sti
aaa
or
std
outsl
adc
sti
stc
inc
shrl
in
scas
mov
lret
lret
xorb
sub
dec
xor
sarb
cmp
lret
pop
out
arpl
jle
mov
ret
jne
inc
inc
orl
imul
stc
popf
mov
popf
adc
jnp
cs
sti
std
xlat
pop
sahf
lock
add
xchg
arpl
cmc
jmp
xor
out
push
inc
scas
adc
xchg
shrl
fnstsw
mov
sbb
dec
cmp
cs
pop
test
popf
scas
in
push
scas
mov
fsubl
mov
loopne
xor
or
sbb
jbe
xor
loop
and
adc
cwtl
call
push
cmp
aam
jns
add
cmp
shlb
pop
fnstcw
cli
mov
out
loop
sbb
es
dec
inc
mov
adcl
jne
sub
cmpsb
shll
xor
mov
je
or
pop
fdivrl
sub
mov
inc
das
es
dec
mov
arpl
int3
loope
or
xor
imulb
xchg
je
in
add
and
dec
cmp
aad
sahf
push
adc
ret
mov
shll
in
in
mov
out
fldt
int
xchg
sub
fsts
pushf
and
cmp
outsl
out
push
out
test
stos
ljmp
lods
inc
xchg
pushf
cmp
mov
mov
jg
pop
ret
push
imul
mov
mov
loope
or
int
jecxz
dec
pushf
xchg
hlt
insb
mov
adc
cmp
imul
xor
push
push
icebp
ss
xchg
pop
addl
clc
es
popa
mov
sub
es
add
outsl
call
mov
lcall
push
cwtl
cmpsb
repz
mov
mov
cwtl
add
dec
shl
int3
cwtl
mov
js
in
aaa
mov
push
fimull
ss
mov
repz
shll
test
mov
test
test
mov
ds
add
inc
push
outsb
jb
sahf
jmp
cmp
pop
mov
insb
xor
jns
ds
pop
subl
sbb
cli
jbe
xlat
es
lods
ljmp
inc
xor
out
jecxz
jbe
andl
ss
push
mov
dec
push
inc
mov
icebp
cmp
or
jne
xor
cmp
or
rolb
mov
in
int3
hlt
adc
inc
std
add
popa
in
xchg
cli
xor
dec
inc
jp
call
popa
push
mov
daa
push
cmp
mov
loope
clc
popa
xchg
in
popa
mov
lret
nop
rcr
sub
test
xchg
or
jnp
addr16
ret
ror
mov
std
out
mov
xor
sbb
add
xchg
pop
rcrb
dec
cmpsb
push
repnz
pop
or
sbb
xor
jo
ret
xorl
cmp
xor
sub
adc
pop
pop
mov
cli
cli
mov
pop
xchg
xor
and
rcrb
push
xchg
movsl
xchg
pop
rolb
mov
push
mov
jp
push
mov
mov
sti
mov
cmp
and
lcall
pop
icebp
incb
dec
xchg
mov
inc
scas
pop
rcll
sti
dec
and
lds
and
xchg
imul
push
dec
xor
sbb
inc
lcall
mov
cmpsl
clc
in
das
arpl
push
fists
insb
push
inc
jne
fsubs
push
pusha
xchg
or
adc
cmp
ret
cs
std
adc
or
xor
pop
lret
jo
ljmp
in
shll
jl
out
ficompl
js
push
mov
jmp
inc
jg
lock
lock
mov
sub
in
out
out
fcomi
pushf
push
jmp
pop
leave
sarl
sub
and
cmp
dec
lcall
mov
sbb
movsl
jbe,pt
std
pushf
addb
ljmp
stos
pop
mov
push
mov
icebp
nop
pop
or
cmpl
cmpsb
insb
xchg
rolb
loopne
mov
mov
sahf
mov
inc
push
cmp
mov
pop
xor
in
jl
ret
xchg
or
dec
cmp
ret
repnz
jae
pop
jl
jl
cmp
cmp
imul
out
in
test
adcl
aad
add
mov
sbb
inc
mov
pop
in
enter
outsb
or
fsubrs
hlt
sbb
inc
mov
inc
stos
xchg
cmpsb
and
ja
in
cmp
mov
jns
cltd
xchg
pushf
xor
stc
cmp
insl
sub
adc
adcl
xor
lahf
aas
mov
dec
xchg
pushf
push
mov
dec
push
out
cli
sar
fisttpl
inc
jns,pt
movsb
andb
pop
arpl
jmp
popa
les
sti
mov
dec
je
stos
lcall
and
rorl
inc
cmpsl
adc
bound
adc
sti
lahf
dec
into
and
ret
jo
popa
cmpsb
and
movsb
decb
push
mov
push
push
or
push
jnp
das
mov
ficoms
mov
sub
daa
and
orl
rcrb
adc
or
loop
int3
enter
push
pop
std
shlb
inc
adc
mov
sub
rolb
mull
lea
push
iret
js
into
add
sub
or
adc
adc
test
ja
pop
into
popa
aas
rcll
mov
outsl
add
rcll
pop
out
rcll
inc
flds
push
lds
sub
add
in
bound
addb
cmpsb
scas
xor
test
es
fsubp
jo
mov
cmpsb
xchg
idivl
int3
and
sub
popa
into
fwait
adc
test
adc
and
out
cwtl
int3
and
inc
je
divl
xchg
lods
icebp
pop
shll
inc
pop
stos
cmp
clc
fstp
enter
sbb
or
lds
fs
into
les
lcall
adc
xchg
imul
xchg
jno
xchg
and
rorb
enter
xlat
xor
popf
xchg
iret
movsb
fsubrs
outsb
ret
or
faddl
cltd
mov
js
dec
mov
fsubr
rcl
pop
xor
inc
xlat
rcrb
xchg
mov
add
mov
sahf
push
xchg
push
adc
xchg
mov
loope
mov
push
stos
mov
dec
imul
ret
pop
fstpt
cmpsb
mov
nop
mov
adc
repz
push
shr
xchg
divl
ja
or
ja,pn
jae
test
xlat
arpl
enter
fsub
stc
mov
or
out
in
repnz
sub
mov
out
cmp
out
ss
jnp
lcall
je
adc
mov
gs
jns
out
inc
popw
pop
icebp
jmp
popa
pop
push
and
sub
enter
and
outsl
data16
xor
lds
pop
sbb
mov
mov
test
mov
jno
mov
jns
jmp
jnp
xchg
addb
xchg
inc
or
jp
fcoml
xchg
xor
inc
loop
cmpsb
loope
fwait
mov
mov
sbb
jbe
imul
pop
add
jg
insl
sbb
mov
daa
lods
int
sahf
cli
in
jge
xchg
sub
pop
popl
xor
sarl
rcrb
popa
sub
out
fdivs
mov
push
lea
cmp
pop
mov
pop
jno
push
adc
test
lea
xchg
lcall
test
rcrl
and
jnp
loope
jo
push
test
adc
add
daa
dec
jns
inc
add
and
addr16
lods
sub
pushf
sbb
repz
into
imul
add
gs
pop
push
roll
jge
adc
dec
test
movsl
ret
nop
and
adc
inc
and
mov
leave
mov
add
pop
cld
mov
mov
insb
aam
jb
push
dec
data16
lret
lahf
dec
cmp
mov
cmp
in
add
addb
mov
jo
cmp
call
ja
pop
int
cmp
lods
dec
xchg
addr16
js
rorb
mov
pop
sti
shll
or
fiaddl
push
test
jne
sub
rcrl
aam
mov
lret
out
mov
mov
xchg
movsb
not
push
aaa
sub
mov
mov
jl
out
xchg
and
fiadds
in
push
std
push
jo
aaa
fdivs
mov
push
mov
xchg
out
dec
xorl
scas
je
cli
cltd
jb
loope
daa
loop
pop
mov
cmp
cmc
xor
loop
dec
mov
repnz
frstor
push
mov
cmp
jl
dec
sub
imul
mov
aas
mov
adc
xchg
mov
inc
jle
or
hlt
inc
inc
mov
sbb
cmpsb
xchg
cld
or
mov
es
mov
fcoml
xchg
lock
das
test
push
icebp
int3
sbb
push
in
ficomps
pusha
jl
cli
add
pop
leave
mov
jl
jns
shll
pop
fldenv
ljmp
popa
push
or
jae
shlb
jbe
push
jmp
dec
bound
fsubs
mov
idiv
push
loop
int3
mov
adc
dec
adc
pop
xchg
cmp
mov
cmp
ror
mov
push
into
mov
cmp
sbb
jmp
inc
mov
mov
xor
test
or
and
and
inc
ret
bound
and
sub
shl
rcrb
std
sti
lahf
fwait
pop
add
and
jb
inc
dec
adc
xchg
stos
xchg
mov
outsl
ret
pop
dec
adc
stc
mov
cld
sahf
and
or
aas
pusha
pop
push
mov
and
sbb
push
cmpsl
pop
mov
daa
aaa
push
push
xchg
push
cmp
pusha
add
mov
int3
lret
aad
rorl
pop
icebp
mov
pop
xor
jp
dec
pop
in
int3
sub
loope
lds
mov
adc
mov
mov
lret
addr16
loope
loopne
outsl
xchg
add
lock
and
or
mov
outsb
mov
add
add
imul
addl
jbe
popa
jbe
mov
arpl
xor
and
sbb
xchg
cltd
sbb
inc
clc
mov
in
pop
in
scas
add
add
mov
pop
mov
ljmp
int
mov
dec
jbe
sbb
imul
pusha
inc
cmp
inc
sub
pop
jbe
push
ss
jp
xor
push
gs
movsl
mov
xchg
repnz
popa
mov
adc
mov
scas
dec
movsl
aam
or
xor
ret
mov
nop
xor
and
push
inc
mov
inc
or
leave
jnp
mov
out
ds
repz
cltd
fimull
pusha
fnstenv
es
cltd
lods
sarb
or
imul
add
jg
dec
cmpsl
mov
jb
rcr
mov
lds
xor
push
stos
jmp
stc
inc
sbb
jbe
out
es
adcl
and
sahf
mov
sti
adc
and
or
sbb
mov
nop
dec
mov
sbb
test
mov
lods
pop
or
icebp
sti
pop
mov
negb
testl
enter
dec
mov
push
or
arpl
mov
adc
loope
lods
push
push
sub
cmp
sbb
sub
outsb
mov
xchg
cmpsb
in
push
cmpsb
cmp
jo
inc
arpl
push
icebp
sub
inc
das
cmp
mov
addr16
push
adc
idiv
outsl
jb
jmp
enter
jp
ss
cld
inc
pop
mov
sbb
mov
dec
sub
mov
call
das
stos
push
pop
mov
pop
sbb
and
pop
sbb
test
inc
and
pop
and
jno
pop
sbb
ss
mov
sbb
mov
popf
or
clc
or
adc
xor
stos
pop
leave
jle
push
jno
out
mov
mov
cli
mov
stos
into
cmc
jmp
sub
lret
jne
mov
lahf
in
xor
push
test
in
sub
ja
xchg
fwait
das
aam
fstpl
data16
call
inc
repnz
mov
dec
add
jnp
mov
push
push
test
mov
add
jmp
adc
aad
push
and
adc
pop
clc
sarl
mov
repz
repz
div
mov
adc
push
lahf
and
loopne
sub
jle
mov
int
jge
daa
jmp
cmc
or
lds
fs
push
xor
jne
loopne
arpl
clc
gs
and
adc
hlt
inc
call
cmp
cmp
xchg
data16
mov
pop
mov
or
or
mull
popl
lret
loopne
aad
jl
js
fidivl
sbb
dec
push
sti
mov
icebp
mov
sbb
movsb
and
lea
cmp
scas
sbb
inc
or
addb
pop
dec
mov
xor
aam
dec
jmp
jbe
loopne
and
sbb
mov
mov
adc
xchg
mov
in
sahf
mov
cld
retw
stos
lods
lret
cmpsb
fxch
inc
mov
push
jmp
pop
or
sbb
or
pop
sar
jnp
fistpl
popa
imul
aas
daa
lahf
cli
mov
inc
jl
repz
pop
lret
lret
jno
popf
fcmove
in
adc
mov
pop
or
mov
imul
lods
jge
sbbl
dec
jp
shrb
sbb
and
sub
jge
xlat
jne
mov
stos
push
andl
xchg
lret
add
sbbl
rcl
loope
mov
fwait
push
add
xchg
or
rcrb
out
lods
imul
daa
xor
jl
fcoms
call
mull
push
dec
xor
jg
add
int3
pop
adc
cmp
std
cmp
inc
lcall
fildl
pop
jmp
and
push
push
adc
add
das
adc
mov
sahf
mov
fisubrl
imul
test
add
test
or
sbb
ss
pop
aaa
sahf
jmp
aam
xor
jp
inc
sbb
lahf
cmp
int3
jp
outsb
movsb
fistpl
mov
sbb
xchg
add
sbb
mov
sub
rcl
xor
sbb
inc
mov
jns
out
int
icebp
sub
pop
mov
hlt
cmp
les
dec
dec
xchg
aad
nop
mov
popa
or
sub
add
cmc
aaa
lahf
and
shll
ret
inc
hlt
and
add
dec
adc
mov
aam
std
daa
xchg
mov
jns
mov
pushf
movl
inc
push
fiaddl
fstpt
test
or
shll
imul
das
mov
pop
mov
imul
pop
adcb
push
aaa
push
pop
icebp
xchg
sbbb
pop
lahf
pop
push
popa
cmp
and
fmull
into
fnstsw
hlt
sub
push
sub
test
mov
mov
dec
inc
leave
mov
dec
mov
daa
js
pop
inc
push
pop
mov
cmp
lods
push
and
push
sbb
cmc
mov
mov
mov
sub
dec
in
jns
in
jb
repz
stos
aas
jns
cmc
add
leave
mov
lods
out
xchg
push
out
xor
xchg
cmp
xor
mov
mov
xchg
jno
gs
xor
into
arpl
cmp
in
mov
cmp
js
jg
call
mulb
jnp
inc
fs
xchg
push
sbb
scas
clc
pop
cwtl
cmp
aad
mov
xor
repnz
scas
sub
fadds
je
iret
int
or
push
fcmovnb
fs
adc
data16
jmp
test
dec
sub
mov
cs
mov
fsub
fdivs
pop
repnz
std
sahf
fidivrs
lods
cmpsl
jmp
orb
icebp
adc
int
nop
movsl
repnz
enter
lods
leave
rorb
stos
xchg
pop
sbb
outsl
imul
mov
cmp
sub
jp
adc
inc
lea
xchg
sbb
xchg
or
xlat
daa
jmp
cltd
lcall
or
xchg
lods
jg
xchg
rol
loope
mov
fwait
sti
sub
lods
jecxz
mov
push
cmp
rcll
imul
or
cmp
repz
mov
movsw
sub
push
add
push
cmc
enter
sub
xor
jo
in
xchg
pop
mov
push
jmp
frstor
xchg
pushf
cmp
icebp
or
push
imull
jnp
out
fdivrl
add
pop
mull
lock
imul
dec
leave
frstor
adc
cltd
lahf
icebp
adc
and
fistpl
sbb
aam
scas
push
mov
xor
cld
daa
insb
and
jp
xor
lds
push
insb
hlt
fldt
stc
pop
cwtl
and
adc
sub
scas
sub
sbb
imul
jp
or
in
aam
inc
outsb
mov
sbb
in
adc
cwtl
loopne
xchg
out
jbe
test
and
fcomip
jge
insl
inc
scas
ret
das
lock
pop
mov
inc
add
mov
movsl
mov
mov
cmpsb
jns
mov
notl
lcall
mov
lods
push
andb
gs
imul
inc
int3
pusha
mov
ds
adc
ja
adc
mov
mov
add
sbb
mov
mov
int3
dec
or
pop
pop
mov
sub
insl
mov
mov
test
mov
push
xchg
pusha
stos
mov
adc
orl
mov
insl
sbb
or
or
into
js
jmp
push
push
xor
push
cmpsb
imul
lret
fildll
sub
mov
pop
call
fcmove
stos
push
xor
add
in
xchg
cltd
mov
mov
test
mov
movsl
loopne
pop
xchg
adc
mov
fldcw
cwtl
loop
push
cwtl
jg
lods
out
loop
inc
ret
pop
inc
stc
cwtl
mov
xchg
mov
fildl
or
sub
fstl
sub
movsb
cmpb
adc
mov
inc
adc
sub
fcmovbe
cmp
push
mov
add
inc
popa
mov
stos
lcall
xchg
andl
cmpb
sbb
cli
movsl
fimuls
lods
xor
sub
out
cmpsb
fistl
ja
push
jae
mov
sub
pop
pop
add
js
jae
push
pop
aaa
push
lea
std
sti
jg
sub
push
ret
pop
dec
adc
mov
je
jnp
stc
lock
sarl
paddw
and
xchg
ret
inc
mov
sahf
lcall
jl
cmp
cmp
aaa
sub
ret
push
in
jg
cmp
push
subb
dec
jp
in
sub
adc
cmc
jne
int3
add
xchg
cmp
imull
inc
ret
add
jbe
sbb
daa
loop
mov
insl
inc
cmp
aam
fwait
dec
arpl
fldcw
xchg
std
add
xchg
rcrb
adc
js
repz
std
aad
xchg
jne
mov
mov
lret
push
jmp
mov
mov
push
js
xor
xchg
cltd
loopne
and
shlb
sbb
mov
inc
mov
sub
xrelease
sub
test
add
aaa
stos
xor
adc
cmp
hlt
in
add
mov
hlt
and
in
and
push
push
push
xchg
mov
pop
xor
insl
cltd
fidivs
jecxz
pop
xlat
aam
sub
aaa
int
xchg
xor
jns
mov
cli
filds
dec
lock
lock
adc
lret
shlb
mov
pop
stos
sub
aaa
push
ret
repz
call
mov
pop
in
jb
mov
mov
popa
addr16
push
cs
jae
fdivrl
mov
mov
or
cld
push
xchg
sbb
cltd
or
dec
mov
cwtl
pop
addr16
cmp
jg
arpl
repnz
outsb
mov
andl
fs
jle
paddd
std
add
and
dec
ja
mov
lea
bound
mov
xchg
aad
clc
adc
xor
lahf
or
adc
pop
and
xor
in
pop
pop
pop
aad
cmp
mov
or
mov
lds
or
and
lret
jnp
push
repnz
mov
jmp
jne
fdivrp
sahf
aas
add
adc
and
push
sahf
add
pop
mov
sub
addr16
push
mov
cltd
mov
push
cmp
mov
push
ljmp
pop
test
enter
leave
push
xor
mov
insb
call
cmp
adcl
or
test
sbb
sahf
cmp
mov
loopne
aam
push
cmpsb
jecxz
xor
outsb
mov
push
or
sti
pop
cmp
mov
mov
fmul
in
mov
inc
mov
fists
jbe
mov
and
push
mov
push
jne
sbb
xchg
loop
and
std
insb
test
call
movsb
cmp
fildl
xorl
insl
sbb
daa
fsts
adc
bound
xlat
fists
sbb
xchg
jp
es
shlb
xchg
xchg
cmp
pop
scas
pop
sbb
out
arpl
sbb
jmp
cmp
fstpl
out
sbb
dec
xor
sub
outsb
jne
mov
ret
mov
xchg
xchg
mov
push
cmp
aad
or
push
adc
dec
in
div
mov
popf
mov
lock
adc
mov
jp
loope
sub
inc
dec
lret
push
xlat
mov
or
inc
outsb
sub
dec
scas
scas
mov
nop
jle
mov
inc
insl
add
or
loopne
pop
and
inc
addl
mov
lahf
pop
dec
mov
xor
aam
cmpsb
and
sbb
dec
dec
lods
dec
test
and
add
imul
adc
pushf
daa
filds
dec
out
mul
loop
nop
add
sbb
mov
inc
jecxz
loope
stos
and
mov
adc
xchg
into
outsb
out
jl
es
icebp
xor
loope
fs
dec
mov
nop
popa
loop
xchg
jnp
stc
add
push
std
sbb
xor
out
lock
xchg
mov
in
sub
mov
idivb
addl
sbb
sub
inc
jbe
cmp
mov
fstpl
inc
xchg
push
inc
aas
sahf
jmp
cmp
push
fs
test
and
push
mov
vmwrite
sbb
sub
sub
mov
sbb
daa
xchg
jae
dec
push
and
push
mov
fs
mov
xor
mov
sbbl
jns
ja
cmp
dec
add
mov
mov
in
xchg
in
push
push
dec
inc
and
out
sbb
lods
jb
scas
leave
data16
test
flds
shl
dec
adcb
in
cmp
in
push
push
aaa
movsb
push
mov
inc
cmpsb
jns
ja
repz
leave
pusha
jle
out
std
sbb
adc
adc
adc
cltd
cmp
stos
pop
inc
dec
loopne
in
stos
cmpsb
jmp
clc
stc
hlt
in
daa
mov
in
imul
in
lret
cmp
popf
add
jae
xor
loopne
icebp
mov
fwait
jnp
cli
sub
pop
loopne
outsb
movsb
lcall
data16
mov
dec
xor
push
je
aaa
mov
and
mov
or
addr16
xor
sbb
in
or
shrb
mov
fisttps
mov
pop
movsb
into
rorl
add
mov
mov
dec
fldl
shr
sub
pusha
jno
xor
push
aam
setbe
pop
push
xlat
dec
cmpsb
fstpt
cmp
arpl
shll
jne
dec
out
inc
inc
push
lret
das
adc
jle
add
pop
negl
fists
sbb
ret
mov
fiadds
mov
sub
mov
sbb
jle
or
mov
xlat
cmp
inc
xchg
arpl
hlt
pop
push
mov
out
mov
das
pop
adc
shl
rorb
rolb
cli
sti
xchg
stos
or
pusha
mul
cmp
sti
std
jge
or
addr16
lds
mov
jg
adcb
mov
jle
push
dec
sti
cmpsl
mov
outsb
ljmp
pop
xchg
std
test
add
inc
jmp
mov
push
fisubs
and
popa
imul
xor
not
daa
jo
or
cmc
aas
or
test
push
rcrl
ljmp
cmp
pop
push
imul
cwtl
shlb
mov
jnp
add
push
push
or
push
test
stos
in
aam
cmp
adc
scas
jge
xchg
fwait
mulb
int
lcall
in
mov
or
and
mov
fnstenv
add
fistpll
insl
bound
dec
or
sbb
test
add
stos
int3
cltd
xlat
pop
das
and
inc
repnz
pop
pop
mov
cltd
in
testl
dec
or
out
movsb
mov
mov
add
ret
std
xor
jbe
mov
out
adc
scas
pop
dec
mov
into
mov
mov
xchg
dec
push
mov
mov
jmp
filds
andl
mov
mov
sbb
cmc
xchg
adc
ret
mov
sub
jmp
jae
mov
xlat
pop
sub
lock
jnp
pop
insl
dec
test
xchg
push
cmpsb
test
push
push
jge
jno
ljmp
nop
adc
or
mov
aam
jp
data16
push
xor
mov
sbb
or
jg
cmp
xlat
jmp
cmovle
scas
enter
in
sti
xor
mov
lock
data16
cmpsl
pop
imul
cmp
inc
je
push
mov
mov
push
movsb
lds
fcmovnu
xchg
data16
aam
mov
fisubrl
push
les
das
mov
inc
aad
sti
mov
cmc
mov
out
sub
call
cmp
mov
nop
jge
rolb
sbb
scas
and
xor
and
or
inc
cmp
dec
push
js
nop
sbb
dec
pop
js
mov
loope
mov
pusha
xor
outsb
jp
mov
into
pop
neg
push
iret
inc
mov
mov
iret
jge
sub
scas
xchg
sbb
das
or
mov
inc
js
xchg
jbe
lret
nop
addb
jb
sahf
or
je
pushl
jmp
add
pop
push
mov
aam
popf
cmpl
xlat
xor
movsb
ja
dec
scas
lret
push
mov
sub
inc
inc
push
movsl
pop
call
sub
out
sub
in
lea
or
or
and
int3
mov
mov
test
cmp
gs
pop
xor
mov
add
mov
dec
das
fs
leave
lret
lods
jg
fidivrl
popa
mov
pushl
loopne
pop
lods
cwtl
push
test
add
dec
in
cwtl
in
dec
jmp
cltd
xchg
or
decl
inc
out
adc
cmp
movsl
cmp
dec
lret
popf
loopne
push
fsts
and
insb
outsb
popf
pop
dec
inc
push
xor
jmp
data16
jge
movsb
adc
imul
cmpsl
jmp
pop
mov
mov
mov
push
insb
jp
movsl
insb
sbb
add
dec
xor
popl
push
lret
jns
jle
pop
in
imul
cmp
jo
pushf
pusha
bound
mov
sbb
jnp
xchg
add
dec
jl
pushl
hlt
dec
ret
cltd
or
cmp
pushf
adc
inc
cmp
sarb
adc
and
add
inc
lods
shlb
movsb
jb
stos
ds
and
adc
je
push
std
mov
inc
out
pusha
push
pop
cmpsl
jb
sahf
push
gs
mov
sbb
in
pop
mov
inc
inc
divb
rolb
sbb
dec
jae
std
popf
inc
jae
or
out
and
addr16
bnd
ret
adc
jo
mov
jl
mov
push
and
mov
mov
dec
mov
into
scas
sbb
jne
movzwl
jno
fs
jmp
out
scas
lret
fcompl
mov
jne
pushl
sub
pusha
and
sahf
cs
test
andb
aad
jns
xlat
aas
jg
push
adc
sub
jb
adcl
mov
outsb
cmpb
fisubl
ja
adc
mov
std
mov
mov
pop
jle
lret
xlat
adc
test
sahf
adc
ss
xchg
fcmovbe
repnz
xchg
mov
rcrb
fcoms
out
mov
std
in
decb
in
add
sub
pop
xor
mov
std
push
adc
sarb
mov
sbbl
mov
pop
sbb
cmp
fbld
jge,pn
inc
aas
xchg
push
aas
mov
xchg
outsl
insl
xor
xchg
jns
rcrb
repnz
sub
cmp
mov
dec
cmp
mov
mov
pop
and
push
xor
mov
push
fistpll
add
divb
xor
mov
cs
lds
int3
adc
stc
and
sbb
mov
jp
mov
cli
adc
sbb
xchg
sub
push
push
test
xor
vmwrite
call
call
sbb
pop
out
jb
adc
and
std
mov
stc
push
popa
sbb
mov
dec
jle
in
je
arpl
sbb
pop
add
adc
fdivrs
cwtl
popa
mov
and
push
test
leave
test
pop
inc
pop
leave
lcall
pop
xor
in
pushf
adc
fisubs
mov
call
subb
sub
dec
xor
add
es
push
not
mov
sub
sub
jmp
mov
mov
add
mov
xchg
aam
aas
and
test
jl
pop
sbb
xor
pop
or
mov
fcompl
jbe
aad
pop
lds
popa
iret
aam
and
pop
pop
pop
insb
xchg
pushf
mov
adc
jne
or
mov
dec
orb
xchg
test
shrl
dec
fcompl
incl
call
sub
add
cltd
test
xchg
cmp
push
jns
mov
pop
lods
push
push
xor
daa
das
jmp
sti
xlat
shl
std
daa
shr
add
sbb
sub
pop
adc
test
push
insl
adc
addr16
je
call
rolb
jae
mov
mov
mulb
fidivs
and
inc
fmuls
testb
inc
dec
popa
pop
inc
movsb
lcall
jns
int
xchg
xchg
jmp
push
fimull
cmpsb
jmp
mov
sub
movsb
lret
lods
xorl
jnp
das
mov
inc
dec
jg
test
xchg
in
mov
std
jbe
cmp
iret
sti
xchg
mov
jne
push
xor
js
test
push
testl
stos
test
or
dec
inc
jg
and
addr16
dec
mov
push
dec
sub
jnp
cmc
cmc
sub
or
subb
or
rorb
cld
in
fmul
mov
and
jb
inc
xchg
outsb
cld
pop
push
xlat
add
out
sti
dec
cli
pop
lock
test
and
movl
pop
sub
mov
repnz
xchg
js
inc
push
lods
daa
cwtl
lcall
test
or
and
aad
pop
outsb
aam
sbbl
and
xchg
pop
andb
jecxz
enter
adc
je
shrb
fsubs
mov
hlt
push
testl
fisubrl
loopne
add
insl
lret
outsl
lods
bound
xchg
inc
mov
sub
mov
bnd
adc
inc
cmpb
call
cmp
pusha
push
or
loope
mov
jae
jmp
inc
fcmovnb
inc
cmp
in
inc
insb
call
and
insl
aam
push
pop
subb
inc
inc
ljmp
and
in
js
mov
mov
inc
jo
sti
push
cmc
iret
inc
rcrb
jnp
shrb
and
inc
in
push
add
sub
pop
adc
mov
dec
mov
mov
push
dec
push
mov
xor
xchg
insw
push
cmp
imul
ljmp
mov
cltd
hlt
mov
xchg
pop
or
stc
cli
sahf
push
and
cmpl
lock
xor
imul
test
pop
loopne
loopne
shr
and
out
mov
imul
or
push
push
dec
loope
mov
adc
or
in
out
adc
lcall
fwait
jb
stc
sbb
mov
addb
adc
or
aad
test
jg
mov
adc
jp
shll
mov
pop
sub
outsl
pop
imul
sbb
sti
sbb
push
mov
out
shr
pop
sub
inc
adc
pop
dec
pop
dec
xor
xor
pop
loope
cmp
or
jmp
jmp
nop
popf
jns
ror
inc
xchg
adc
push
push
shll
dec
es
xlat
pop
fs
mov
iret
icebp
ss
push
xchg
push
jle
fdivl
fwait
dec
sub
decl
je
fmull
sahf
mov
or
scas
rcll
mov
mov
lea
cli
dec
popa
xchg
add
stos
aam
inc
fdivrp
xor
mov
movsl
mov
xor
xchg
pop
dec
or
loopne
les
and
and
inc
adc
or
mov
cmpsl
mov
xchg
mov
jbe
mov
sbb
test
fldl
pushf
pop
ud1
jmp
mov
mov
jecxz
add
ljmp
inc
loop
push
int3
cld
insb
pop
movsw
push
test
add
inc
inc
scas
push
and
hlt
lea
aaa
or
push
les
pop
insb
cmc
dec
stos
enter
sar
jl
jbe
push
outsb
call
lock
sub
dec
cltd
aad
call
or
mov
xor
adc
mov
add
outsb
sbb
aad
xchg
shlb
les
and
jnp
sbbb
mov
mov
pusha
mov
or
and
and
mov
gs
bound
xor
inc
sub
mov
js
mov
call
shlb
insb
jg
rcrb
xor
enter
arpl
enter
adc
jno
je
mov
in
popa
aad
xor
add
lret
std
dec
addb
loopne
adc
mov
sub
shlb
cmp
push
inc
jge
adc
mov
push
or
jmp
sbb
lret
lods
test
rol
and
in
lret
sbb
int3
mov
cli
pop
mov
push
movsl
inc
push
push
pop
loope
nop
scas
psubusw
jbe
cwtl
popl
push
xchg
rorl
pop
pop
in
or
lds
pusha
add
or
cmp
ss
ljmp
bound
push
dec
mov
sbb
xchg
nop
jo
sbb
gs
testb
mov
icebp
lret
leave
jnp
xchg
dec
sbb
pop
add
or
in
xchg
mov
jecxz
pop
sub
test
rep
xor
lret
adc
inc
lock
int
rorb
jle
pop
sub
in
in
jg
and
sahf
test
mov
cmc
cmp
add
pop
sub
jp
je
out
add
add
aaa
mov
pop
pop
pop
dec
das
push
mov
iret
and
inc
insl
cwtl
inc
sub
jle
cmp
mov
icebp
jne
daa
jb
test
xor
pop
cmp
in
xchg
scas
cmp
fsts
ret
sbb
icebp
repz
iret
or
pushw
or
fildl
fwait
push
and
rcr
inc
adc
jo
sub
shrb
push
push
fldcw
shrl
dec
fsubl
pop
and
jne
xor
daa
xlat
mov
mov
mov
sbb
and
cld
out
cli
decl
dec
cmp
jl
fcom
and
xlat
jmp
jmp
sbb
incl
inc
out
mov
rcrb
adc
or
push
adc
jb
stos
add
mov
je
dec
mov
inc
and
enter
cmp
push
push
push
stos
mov
addr16
sbbb
pop
pop
xor
dec
xor
xor
daa
mov
cmp
lods
pusha
imul
push
insb
loop
adc
inc
jne
mov
push
lock
pop
cmp
aad
push
lahf
cmp
pop
sbb
inc
cmp
das
dec
in
adc
scas
scas
push
insl
mov
mov
scas
xchg
xchg
or
clc
xor
das
andl
and
ljmp
mov
mov
int
cmp
shr
mov
pop
leave
cmpsb
lret
lods
and
add
sub
mov
pop
push
xchg
sbb
in
js
shlb
fwait
xor
imulb
in
aad
mov
ljmp
or
out
cmpsl
fld
jne
ret
and
insb
scas
bound
sbb
mov
push
cltd
loopne
sbb
fdiv
cmp
xchg
jmp
pop
sbb
fidivrl
sti
adc
and
stc
cmp
or
adc
lahf
inc
cs
in
sbb
in
enter
cmp
and
aad
out
or
inc
call
adc
lea
in
sub
loope
sbb
subb
mov
lret
sbb
fbstp
push
lret
es
movsl
data16
inc
hlt
into
int
inc
mov
dec
loopne
adc
addb
arpl
mov
dec
test
fnsave
addb
push
ss
pop
cmp
adc
jb
pop
mov
pop
std
shl
sbb
push
add
shlb
outsb
loopne
outsb
int3
xor
movsb
andb
leave
cmp
or
cmc
xchg
inc
je
test
dec
out
xchg
repnz
push
mov
jbe
bound
lcall
outsb
and
adc
in
add
mov
movsb
dec
xor
dec
addr16
arpl
mov
pop
add
jbe
fcmovne
push
mov
push
roll
fcmovnbe
mov
data16
xchg
jne
lahf
adc
cmp
jno
mov
mov
popf
or
cmp
call
loopne
pop
mov
dec
out
pop
cmp
lds
push
in
mov
mov
scas
push
add
xchg
stos
pop
loopne
divb
mov
sbb
sbb
das
mov
mov
pop
int3
jb
cmp
dec
push
dec
out
insl
fimuls
in
andl
cmp
es
cmp
lret
add
ds
rcll
cli
out
push
push
xor
aaa
xor
pop
shll
mov
and
shr
or
hlt
in
movsb
adc
ret
mov
cmp
sbb
std
fadd
and
scas
ljmp
dec
dec
test
push
daa
push
in
mov
shll
popf
dec
hlt
das
into
cmpsb
shlb
dec
out
pop
push
pop
mov
es
jbe
daa
inc
cli
out
lcall
out
cmp
cmp
push
sbb
cmp
into
aam
mov
orb
sbb
pop
push
or
jne
sbb
cmp
add
iret
jb
or
push
testl
andl
movsb
sbb
pop
push
lret
mov
clc
push
push
dec
pop
cmp
jg
jo
icebp
loopne
sub
push
xor
sub
push
inc
cmp
lds
jge
inc
or
lds
dec
mov
fldenv
lret
sbb
xor
fwait
shll
sbb
mov
cli
sbb
fists
cwtl
enter
ja
scas
sub
mov
pop
jnp
in
sbbb
movsl
bnd
repnz
and
push
dec
repnz
dec
clc
cli
mov
sbb
jbe
enter
jbe
sbb
lret
or
mov
pop
lods
sub
xor
mov
cmp
lahf
cwtl
hlt
idiv
add
loope
push
repnz
mov
jmp
push
cmpsl
insl
das
or
mov
push
xchg
jmp
das
jp
sahf
mov
jae
mov
jbe
cwtl
xor
enter
xchg
mov
pop
inc
movsb
lods
outsl
inc
dec
mov
pop
adc
scas
lds
hlt
imul
push
icebp
sbb
mov
push
dec
add
addl
sahf
test
cld
push
fiaddl
pop
push
or
dec
aad
sbb
xor
repz
inc
test
cmp
xor
test
stos
mov
faddl
sbbb
mov
fs
std
fisubrs
lods
rcll
mov
mov
imul
subb
mov
daa
nop
sub
out
out
pop
add
hlt
mov
aaa
pusha
fwait
mov
cltd
push
ja
cmp
mov
push
insb
ljmp
and
xor
insb
jp
or
pop
dec
mov
or
rcrl
cmp
mov
mov
add
jbe
push
hlt
dec
mov
aad
jl
test
ja
mov
mov
lret
fs
movsl
mov
inc
mov
daa
pop
mov
iret
dec
scas
sahf
mov
es
cmp
inc
dec
rcl
dec
mov
ficompl
push
xchg
dec
dec
mov
push
mov
push
test
out
mov
mov
push
ret
faddp
jbe
push
pop
lods
subl
aam
lea
add
clc
roll
jns
subl
push
adc
jmp
inc
mov
das
popf
sbb
push
mov
repz
pop
stc
mov
je
pop
in
mov
in
mov
pop
lods
es
aas
aam
sbb
call
shl
sbb
movl
mov
and
mov
lods
push
xor
popa
arpl
pop
pop
loopne
ficompl
inc
fld
int3
rcr
add
dec
outsl
or
jp
pushf
repz
add
xor
mov
mov
push
xchg
mov
std
xchg
push
outsb
cmc
xor
xor
push
jp
cmpsb
jnp
cmp
mov
mov
sar
xorl
ret
testb
outsb
mov
cli
pusha
xchg
pusha
into
mov
jns
sub
icebp
in
imul
cmp
jne
arpl
jecxz
pop
sub
jns
or
test
std
or
loope
cmovp
bound
rcll
out
sbb
aad
lock
mov
testb
movsl
pop
out
loopne
jmp
leave
xor
push
pop
mov
hlt
fwait
push
lods
xchg
cmp
sub
or
mov
and
pop
and
mov
pop
pop
add
push
push
cmc
push
insb
adc
jp
bswap
dec
inc
roll
lret
arpl
xchg
fwait
out
sahf
insb
das
test
pushf
inc
inc
inc
icebp
fcmovnb
pop
sbb
xor
fs
js
das
jae
pop
inc
adc
out
arpl
inc
and
enter
in
dec
loopne
dec
out
fmull
sub
inc
addr16
mov
adc
mov
push
aaa
ds
jp
jecxz
lahf
in
daa
inc
adc
sub
jg
je
and
or
inc
cmp
pop
push
jno
jae
push
je
and
or
push
fldt
cmp
hlt
dec
sahf
cwtl
sbb
jnp
test
inc
js
mov
pop
loop
test
xor
test
movsb
lcall
adc
mov
leave
and
rol
inc
jns
fstpt
sahf
pop
pushf
nop
incl
push
jnp
mov
mov
adcb
xchg
ret
mov
adc
leave
push
fists
mov
out
fwait
pop
push
mov
roll
push
in
repz
mov
jne
pop
dec
fadd
adc
aas
inc
pop
mov
out
test
shlb
jnp
scas
inc
movsl
xor
pop
out
ljmp
jmp
popa
cmp
repnz
mov
or
iret
sbb
jg
cld
rorl
mov
scas
add
cld
push
addr16
or
and
dec
leave
xor
movsl
js
clc
push
jmp
jmp
cs
xchg
outsb
test
inc
aam
ja
popa
sub
enter
aaa
xchg
push
adc
mov
pusha
xor
adc
popa
sahf
mov
lods
and
scas
sbb
jnp
repnz
dec
jp
fwait
mov
in
stc
lret
mov
outsb
ret
ja
scas
cld
cmp
cli
push
cltd
mov
mov
mov
or
popf
in
ficoml
mov
bound
in
aaa
movsl
cmpsl
push
mov
inc
push
add
in
sub
add
jg
xchg
movsl
adc
push
loope
cmp
or
sub
push
adc
out
int
cltd
mov
mov
bound
shrl
popf
jb
or
rorb
cli
push
mov
lret
jg
push
adc
pop
into
pop
jne
mov
aas
test
rcr
or
push
loopne
mov
movsl
sahf
imul
add
call
or
lcall
mov
xor
mov
push
pop
in
mov
mov
mov
int3
jl
sub
mov
pop
ja
movsb
adc
js
repnz
scas
inc
sbbb
sahf
repnz
ds
jae
jno
pop
dec
pop
icebp
lahf
sahf
shr
fsubr
and
and
xor
fwait
push
cmp
pop
push
xor
pop
xchg
je
sbb
das
xor
mov
das
jp
movsl
pop
or
daa
pusha
cmp
xchg
and
mov
or
hlt
mov
cld
repz
mov
pop
popf
xchg
jne
outsl
pushw
bound
lret
in
loopne
ljmp
jbe
mov
stc
pop
or
mov
repnz
stc
push
lods
pop
xor
jmp
addl
push
push
push
mov
inc
repz
pop
clc
lret
pop
cld
mov
mov
xchg
fwait
push
pop
add
push
repnz
cmp
xlat
sub
scas
iret
cmp
jle
mov
imul
cmc
mov
dec
fdiv
ja
ret
cmp
jg
hlt
dec
outsl
fwait
pop
mov
imulb
and
cs
mov
push
in
scas
imul
insl
push
repnz
movq
xchg
cmc
pusha
mov
int
cmp
int
test
mov
xor
inc
cs
jno
mov
movsb
xor
mov
rorb
push
push
sub
pop
push
add
rolb
sahf
lahf
int
add
push
mov
jmp
and
xchg
lahf
lret
and
fs
mov
add
imul
mov
call
push
test
inc
cs
mov
lock
scas
fisttps
jecxz
push
pusha
and
add
xchg
jno
mov
or
lret
scas
jne
mov
loop
sbb
scas
cwtl
xor
mov
jns
push
pop
lcall
js
jge
mov
xlat
scas
inc
or
mov
and
mov
mov
sbb
mov
sarb
cwtl
cwtl
daa
rclb
mov
jae
mov
jmp
mov
gs
pop
add
addr16
ja
or
adc
jbe
lods
cwtl
into
imul
fdivrl
stos
push
dec
js
dec
fidivl
enter
mov
adc
xchg
cmp
xchg
dec
mov
sarb
pop
ja
cli
add
lahf
xor
push
xor
rcrl
ds
add
sbb
xchg
popa
jne
loop
outsl
lods
pushf
mov
inc
and
xchg
es
loopne
cmp
push
push
sahf
mov
lret
imull
push
fwait
adc
dec
imul
das
push
mov
sahf
mov
mov
xchg
addr16
mov
shr
rcrb
int
push
push
sub
shll
cmpsb
pop
mov
fstps
test
cmpl
pop
sbb
xchg
or
xor
je
sub
leave
cmpxchg
repz
mov
fistpl
pop
bnd
test
js
jo
sbb
pop
and
cmc
mov
insl
aam
mov
mov
ja
sub
adc
jl
nop
repnz
inc
push
cmpl
and
dec
jl
imul
add
dec
pop
xor
jns
push
pop
dec
lea
lds
mov
cltd
mov
call
sbb
pushf
jle
mov
pop
or
push
lock
add
and
loop
cmp
cltd
push
push
pop
inc
pop
rcl
mov
dec
fs
cmp
xor
xchg
fisubrl
adcl
jne
addl
es
xchg
addr16
push
mov
in
fs
rcl
stos
mov
adc
pop
gs
test
sbbl
jns
pop
push
scas
nopl
push
add
mov
subb
mov
outsl
add
cld
lahf
xchg
mov
pop
xlat
and
ror
mov
out
inc
jmp
aaa
pop
test
adc
test
icebp
inc
and
jno
fbstp
repz
jne
xlat
mov
sbb
xchg
mov
jae
adc
aad
aad
jcxz
pushl
gs
xchg
xor
xchg
enter
pop
mov
in
jo
lret
outsl
out
loop
jp
mov
mov
mov
xor
fdivl
add
pushl
pop
lods
cwtl
inc
dec
jae
aaa
push
xor
stos
xchg
das
dec
and
test
adc
les
stos
mov
xor
lret
pop
sub
dec
fmul
sbb
movsb
adcb
pop
mov
sbb
sbb
or
jmp
jp
out
jno
clc
pushl
int
movsl
stc
xchg
fs
ss
int3
xchg
loope
nop
push
imul
mov
mov
and
cmp
sti
enter
fcmove
mov
jmp
push
sbb
out
push
adc
jmp
xchg
cmp
jb
pop
inc
push
sub
in
xor
loopne
add
dec
adc
dec
das
es
push
jmp
cmp
mov
jbe
pop
mov
or
mov
ficomps
lea
fldt
cmp
test
testl
push
in
and
stc
pusha
lods
scas
popw
aaa
test
inc
push
mov
test
and
call
loop
dec
fidivl
lret
test
dec
fdivl
stos
fsubr
lcall
imul
hlt
lock
test
sbb
aam
dec
xlat
sbbl
subl
subl
jle
adc
out
pop
xorl
add
push
fistpll
mov
xchg
sbb
push
loopne
roll
cmpb
jl
scas
clc
push
pop
mov
sub
stos
xchg
out
daa
outsb
or
faddl
out
aas
cld
insb
ljmp
divl
lods
sti
jbe
daa
movsb
cwtl
clc
mov
mov
ljmp
mov
pop
out
add
push
and
cmp
xorb
add
sbb
rorb
notb
loope
jmp
icebp
aad
xchg
jbe
fndisi(8087
push
in
jns
dec
push
cmpsl
adcb
jno
rcrl
cld
push
dec
fldt
fstpl
add
fldcw
push
or
dec
pop
ljmp
adc
in
jne
cld
pop
inc
jnp
xchg
aas
das
xor
mov
gs
push
in
sbbl
mov
add
pop
cmp
aad
lret
mov
loope
adc
xchg
xor
mov
imul
adc
sbb
add
or
int
add
adc
daa
xchg
pop
mov
out
mov
sti
mov
outsb
cwtl
ret
cld
inc
adc
adc
dec
cmc
mov
mul
xchg
test
push
test
gs
sub
adc
sbb
jno
movsb
pop
imul
fdivs
ja
push
sub
and
adc
pop
xor
imul
outsl
lods
scas
ret
jmp
or
ljmp
push
loopne
sbb
mov
cmp
inc
scas
jae
mov
cmp
add
sub
cld
xor
popa
roll
dec
lret
aas
mov
enter
lods
loope
or
js
in
mov
add
fisttpll
pop
jmp
inc
fildl
in
pop
je
mov
mull
cmp
daa
inc
pop
add
cli
dec
xor
pop
cltd
fs
ds
mov
mov
mov
sbb
lahf
pushf
in
xor
adc
xlat
xchg
sub
ds
push
mov
cmp
aaa
sbb
shrb
in
andb
adc
mov
jae
or
cld
push
jne
inc
inc
adc
add
xor
or
xor
dec
xchg
pop
lods
xor
mov
imul
mov
fidivrs
mov
mull
int
push
jbe
in
imul
ret
mov
loopne
clc
mov
loopne
imul
shl
loopne
out
sub
in
sbbl
iret
dec
bound
mov
jecxz
jo
int3
jle
ror
push
in
popa
sbb
dec
jbe
call
sub
fldl
pop
shl
mov
add
jp
inc
movsl
mov
cwtl
les
push
pop
ja
or
pop
xor
ret
hlt
push
daa
inc
xchg
inc
fsts
or
cmp
add
ret
mov
pushf
or
hlt
lods
aaa
test
mov
and
rol
xchg
or
sbb
or
sbb
shrl
xchg
jmp
arpl
mov
cmp
dec
js
push
add
aam
jmp
push
insb
nop
lahf
add
fdivrs
int3
emms
aad
dec
add
lock
sub
mov
mov
out
and
push
sbb
mov
cs
in
push
in
or
mov
fidivrl
jb
jecxz
or
push
or
mov
fs
pop
push
lods
push
test
std
clc
popf
pop
adc
sbb
int3
push
leave
aaa
cmp
addr16
sub
push
or
js
dec
push
lret
mov
leave
mov
clc
push
jne
insl
sbbb
lods
test
or
mov
pop
lods
or
shrl
inc
addr16
jns
cmpb
jle
mov
shr
mov
fistpll
add
pop
mov
test
aam
insb
cmp
pusha
repz
dec
stc
je
icebp
into
jnp
fldenv
jl
push
mov
push
mov
movsb
icebp
fcoms
push
int3
enter
outsb
lods
hlt
sbb
xor
popf
mov
repnz
pop
cmp
aas
lret
xor
in
pop
cli
inc
jle
sub
lock
xchg
jne
xor
jmp
stos
arpl
cmp
in
push
call
and
pop
loop
jbe
pop
xchg
mov
into
mov
xor
or
lret
outsb
or
mov
pop
sub
sbb
ror
mov
inc
pop
xchg
mov
nop
fsubs
rol
push
sub
jp
xor
rorl
sub
rep
xchg
sbb
popw
repnz
sbb
cmpsb
mov
mov
cmpsl
fstpt
push
test
imul
shl
xor
ss
popf
push
mov
push
and
clc
push
jbe
jne
nop
fdivs
pop
cmp
and
push
or
fnstenv
nop
daa
pop
xor
ja
sub
lea
push
fsubs
dec
loope
scas
fldenv
out
jecxz
out
jp
pop
push
cmpsb
inc
and
inc
insb
pop
sbb
mov
scas
mov
incl
mov
add
mov
mov
in
xchg
pop
in
sbb
sbb
lcall
sahf
aas
xchg
pusha
out
cld
mov
cmp
loop
add
test
arpl
out
jbe
pop
jae
push
and
xor
cld
sub
and
or
fmuls
aam
es
ret
popa
xchg
mov
rclb
push
fmuls
pop
jp
jo
int
icebp
and
dec
jo
cmp
test
iret
adc
inc
mov
data16
adc
xor
pop
into
fdivl
rcr
mov
ret
inc
in
in
cmpsl
hlt
movsb
cmp
add
mov
int3
jne
jbe
xchg
xchg
xor
or
mov
mov
mov
les
scas
inc
ret
xor
sbbl
push
adc
jnp
jg
add
adc
push
pop
or
aaa
mov
scas
ja
js
sahf
lods
cmc
adc
cli
cs
fwait
out
notl
cmp
js
rolb
std
jge
loopne
in
lahf
sub
pusha
pusha
mov
pop
sbb
outsl
je
xchg
mov
cmc
xorl
mov
rolb
fbld
addr16
mov
xchg
push
sti
add
xlat
inc
int
ljmp
xor
and
insb
jo
mov
shlb
imul
mov
add
inc
popf
push
xor
pop
dec
dec
dec
push
jge
fmull
ljmp
pusha
sbb
mov
mov
fidivrl
xchg
mov
lahf
in
out
xchg
mov
push
mov
mov
mov
shr
popa
push
mov
fnstenv
add
mov
fs
ss
test
add
test
lods
daa
inc
push
addr16
iret
ja
or
jne
idivl
pop
lods
or
xchg
ljmp
cs
pusha
jmp
cmp
lock
cmp
jnp
loope
cmc
je
hlt
mov
out
lret
lods
call
push
jns
and
roll
sahf
mov
stos
ss
or
jno,pt
ss
mov
push
in
js
mov
mov
test
incl
outsb
daa
sbb
aad
shll
shl
push
cmpl
add
dec
adc
sbb
inc
imul
and
pop
mov
add
aaa
iret
divl
mov
icebp
arpl
cmp
insl
imul
rclb
fucomi
out
jp
jne
xor
jle
int3
dec
add
xor
clc
jge
lret
fmul
xor
add
fmuls
dec
inc
add
lds
add
mov
sub
xchg
outsl
addr16
aad
ffree
xlat
sarl
and
les
dec
push
and
mov
decb
test
push
cli
or
fisubl
iret
out
insb
jmp
mov
int
rcr
xor
shll
xor
add
lds
jmp
test
outsb
mov
hlt
cmp
insl
rcrb
inc
xchg
loopne
mov
leave
mov
outsb
inc
loop
xchg
sbb
jbe
sbb
je
nop
pop
clc
fldl
mov
inc
mov
pop
push
sti
lds
inc
cmp
lahf
dec
popf
daa
xlat
shrb
insb
xorl
xor
lds
cmp
mov
mov
test
inc
cmpb
push
rcrl
sub
sahf
mov
jne
scas
adc
sub
or
pop
xor
insl
std
mov
sti
nop
shr
imul
cmp
sbb
data16
loopne
pop
mov
ret
mov
and
jno
test
lcall
xor
in
pop
push
cmp
fwait
shll
xchg
out
std
pop
test
jecxz
stos
arpl
repz
mov
dec
xchg
sbb
out
mov
scas
ljmp
adc
movsl
push
dec
js
aas
sahf
push
outsl
push
pop
fcmovnbe
add
mov
jecxz
jno
mov
cmpsb
pop
rorl
inc
lea
outsl
jp
pop
adc
push
ds
push
adc
push
xchg
frstor
adc
xchg
pop
lret
imul
adc
pop
in
js
enter
xchg
stos
mov
jp
popl
or
cmp
cmp
cmp
ret
xor
adc
push
pop
pop
push
repz
fsubs
cmpsl
jecxz
dec
frstor
mov
adc
jns
cltd
ret
mov
mov
push
xchg
popa
cmc
adcb
loope
insl
xor
add
pusha
push
mov
subb
mov
pusha
arpl
xchg
cwtl
ret
xor
stos
push
sub
lea
xor
push
push
pop
mov
inc
push
xchg
xor
add
cwtl
div
cmp
mov
prefetch
or
pushf
test
ja
frstor
inc
aas
push
and
mov
adc
pop
ja
mov
cld
imul
test
dec
aam
iret
xchg
jae
or
jbe
pop
fldlg2
pop
jnp
xchg
jp
sbbl
adc
adc
fisubs
lret
sub
andb
xchg
pop
mov
sahf
inc
dec
clc
lds
jnp
jge
stos
jae
js
or
jg
fwait
movlps
aas
xor
sbb
mov
push
pusha
fidivs
cmp
push
inc
push
xchg
in
outsb
aad
call
mov
inc
addr16
bound
into
mov
frstor
sbb
xor
mov
bound
push
into
dec
mov
test
icebp
mov
test
movsb
sbb
pop
loopne
in
notb
push
daa
bound
cmpsb
push
xor
fcoml
jmp
push
jne
lret
outsb
xchg
sub
jns
jge
sub
or
inc
adc
or
cli
stc
hlt
ja
or
xchg
sbb
in
jle
xor
xchg
loopne
jo
pop
dec
lcall
xchg
xchg
sub
mov
dec
js
cmpsl
loopne
and
dec
bound
push
outsl
mov
or
xor
mov
dec
imul
test
mov
movsl
and
es
jbe
ja
sub
push
fs
leave
addr16
clc
cmp
aad
mov
jmp
cwtl
mov
inc
dec
xorb
dec
int
repnz
xlat
mov
xchg
mov
scas
or
pop
pop
sub
daa
in
pop
out
dec
inc
mov
push
pop
mov
fxch
mov
fsubl
fadd
inc
out
lods
andb
fwait
xor
andl
loop
inc
pushf
in
add
jecxz
lods
pop
dec
xor
imul
lods
and
push
jae
jbe
xchg
push
gs
sbb
push
mov
ljmp
xor
cmp
mov
out
or
add
es
add
dec
mov
enter
add
mov
mov
loope
add
and
ja
jle
add
movsl
sub
pop
sbb
icebp
imul
dec
jo
pop
sbb
pop
mov
or
outsl
jmp
fsub
shl
sub
out
fisubrs
or
dec
push
pop
add
xor
mov
jne
xor
xchg
sub
push
mov
mov
mov
scas
fwait
mov
push
adc
mov
mov
idiv
or
mov
mov
mov
popa
aaa
popf
sti
mov
enter
int3
aam
clc
aam
pusha
sub
or
out
outsb
mov
sbb
sbb
outsl
cmpsb
jl
mov
jge
lods
popa
lds
ss
mov
test
testb
ret
sbb
sbb
repnz
or
push
inc
xor
cmp
cmpsb
imul
nop
push
dec
lahf
repz
mov
pop
and
inc
call
mov
test
ja
sbb
sti
or
popa
repz
data16
xchg
sbb
sahf
xchg
and
nop
ljmp
xor
mov
inc
cvttps2pi
pop
clc
mov
xlat
sub
jae
mov
mov
subb
xchg
imul
out
jg
icebp
insl
or
in
and
push
test
adcb
adc
fdiv
aaa
push
cmpsl
xchg
adc
ss
loope
mov
sahf
test
push
les
add
push
pcmpeqw
or
dec
cmpsl
out
cmp
xchg
gs
clc
nop
xchg
pop
mov
and
pusha
hlt
dec
adc
sub
sahf
loope
add
jbe
out
outsb
in
cmp
push
dec
repz
mov
in
clc
cld
and
fisttpl
adc
fbld
aam
mov
rcr
movsb
mov
sub
cltd
in
fwait
mov
popa
adc
mov
jl
adc
filds
and
or
mov
cwtl
xor
push
cmp
out
loope
pop
add
mov
xchg
ja
fnstsw
and
mov
push
hlt
and
push
shl
imul
out
jae
sub
ss
ljmp
out
mov
shll
pop
mov
jg
or
mov
or
sub
pop
inc
mov
jge
add
jae
adc
aad
xchg
imul
popa
add
fnstcw
dec
cwtl
xchg
jb
cltd
arpl
stc
adc
arpl
and
cli
out
mov
sub
pop
popa
rcl
mov
and
lcall
aad
fistps
jae
or
push
and
cmp
test
inc
jecxz
push
or
rdmsr
push
mov
movsb
or
xchg
orl
xor
cld
scas
scas
faddl
or
xchg
mov
enter
popl
out
push
test
shl
add
shrl
leave
lea
cwtl
outsb
xor
push
ljmp
dec
jl
rol
mov
repnz
jl
add
and
outsl
and
jmp
into
iret
inc
andb
cltd
lock
cmp
sbb
decl
xlat
addr16
lret
vmwrite
mov
lods
inc
cli
cmpb
xor
movb
loop
lcall
stos
push
xor
add
enter
add
inc
mov
xchg
pop
push
shrb
mov
in
xchg
es
adc
fucomp
jp
mov
ror
mov
and
sbb
int
and
sub
movsb
xchg
mov
sub
push
shlb
adc
pop
mov
pop
hlt
jl
arpl
outsl
jbe
js
fwait
pop
in
enter
loop
imull
popa
mov
cmpsb
cmpsb
sarl
scas
inc
shlb
pusha
push
inc
insb
stos
pusha
testb
out
cmp
xor
cmp
in
or
push
cmp
repnz
mov
pop
mov
jbe
mov
aas
in
push
faddl
minps
dec
sub
inc
mov
into
push
enter
movsl
js
cmpsb
adc
enter
lods
in
lret
inc
sub
test
adc
or
jnp
adc
mov
and
mov
sub
cld
dec
cmp
push
ret
shrl
es
cltd
clc
jecxz
xlat
adc
and
int
sbb
cltd
mov
and
mov
loopne
mov
pushf
adc
add
mov
lods
mov
jbe
popf
aad
pop
fwait
jg
test
inc
out
xor
test
aas
inc
xchg
pop
daa
mov
sub
mov
ret
imul
mov
push
pop
push
xchg
das
mov
jecxz
push
mov
leave
lock
dec
cmp
push
jnp
movsb
std
cmpsb
test
xor
in
imul
push
decb
inc
sbb
filds
and
mov
push
sbb
or
pop
jns
mov
jnp
xlat
or
sub
lods
repz
out
movsb
push
pusha
sub
lret
cmc
andl
aad
adc
or
lcall
xchg
push
cmp
jmp
adc
or
dec
shlb
mov
outsb
pop
adc
in
mov
sbb
pop
sbb
pop
push
inc
or
dec
das
leave
pop
test
leave
loope
cmpsl
repz
cmp
xor
sbbb
cmpsl
mov
adc
xchg
rolb
adc
popf
push
pop
ss
add
out
mov
push
xor
in
add
cmp
push
mov
jmp
jp
xor
les
ret
and
jmp
jae
insl
sub
imul
or
aaa
inc
inc
lds
lods
xchg
popf
mov
xor
int
mov
sub
inc
cmpsl
mov
or
xor
outsb
xchg
pop
loopne
sub
push
test
ds
out
adc
ret
inc
mov
cmpsl
test
jecxz
sbb
lret
pop
mov
jae
or
mov
fdivl
mov
sbb
cli
ror
ljmp
outsb
lret
push
mov
ss
and
dec
jge
inc
daa
lret
inc
sahf
adc
push
push
push
hlt
push
int3
test
add
sahf
stos
dec
aas
push
sbb
cwtl
pop
adcb
mov
mov
jbe
mov
adc
inc
rolb
insb
sbb
jb
jb
xchg
pop
xor
in
or
pop
rol
loope
ja
xor
and
test
js
add
movsl
mov
in
mov
getsec
mov
mov
xorl
je
xchg
sbb
repnz
fstps
jno
or
lret
popa
push
int3
push
xchg
push
lret
lret
mov
outsb
add
and
loopne
js
mov
jns
or
inc
and
je
lret
test
int3
mov
outsb
nop
pop
mov
or
outsb
in
pop
test
or
inc
adc
or
pop
loope
mov
jg
pop
stos
inc
adc
dec
loopne
mov
sbb
mov
cli
jno
or
dec
add
sarb
sbb
pop
pop
mov
mov
fistps
roll
xchg
repnz
repnz
push
testb
add
ficoml
popf
int
loop
out
popf
mov
jae
cmc
push
out
sub
nop
in
lods
dec
movw
or
add
xchg
aas
loop
jb
jae
dec
out
out
cmpsb
setle
stos
stos
stos
jns
aaa
popa
push
push
cmpsb
and
sub
loop
or
clc
lcall
inc
cmp
stc
xor
adc
mov
das
pop
jno
xchg
pop
dec
cmpxchg
pop
cli
aas
mov
jp
nop
push
fcmovne
xchg
test
inc
dec
out
jne
xchg
xchg
dec
lret
in
push
ds
je
push
sub
adc
xor
cmp
loop
dec
das
jbe
xor
push
mov
add
jbe
aaa
inc
dec
js
jbe
inc
push
fmul
cwtl
test
pop
out
push
lds
pop
lods
add
push
jl
outsl
push
aam
aaa
sbb
pop
mov
inc
js
sub
push
xor
mov
test
jmp
sahf
addr16
int3
std
push
jnp
out
outsl
loope
dec
out
aas
push
lock
jae
inc
sub
or
mov
scas
nop
add
adc
or
mov
shlb
ljmp
pop
enter
loope
xor
xchg
je
stos
gs
in
jl
mov
lret
ss
loope
out
sbb
test
sbb
shlb
pusha
scas
push
je
into
inc
lret
loop
lods
jbe
std
leave
xchg
fs
pop
ret
fistl
negl
jmp
dec
inc
iret
mov
push
and
and
jb
adc
cmpsb
sbb
shll
xor
pop
cmp
int3
push
clc
leave
adc
mov
inc
cmp
loopne
sub
mov
popf
jmp
mov
rcrb
rcrl
cld
dec
inc
mov
mov
pop
stos
nop
andl
xor
or
cmp
push
test
negl
test
cli
xorb
push
jns
scas
pop
out
pusha
outsl
mov
je
arpl
std
jl
fistpl
shrb
add
pop
mov
push
cmp
idiv
and
lea
movsb
mov
aam
lock
and
push
aaa
mov
test
scas
xchg
cmpsl
add
test
jbe
dec
push
add
mov
xchg
mov
fsub
jle
mov
and
cmp
and
jge
push
fwait
int3
ss
jecxz
pop
or
lock
ljmp
mov
pop
enter
mov
leave
adc
es
sub
adc
pusha
xchg
pop
inc
stos
push
adc
rcr
mov
test
pop
or
je
and
cwtl
stos
pop
ret
cld
test
ds
cmpb
jnp
pop
jge
inc
jg
push
xchg
cmp
xchg
ljmp
ljmp
lret
jmp
test
mov
dec
jl
aam
pop
loop
xor
popf
mov
cs
cli
dec
in
fcmovne
push
cmp
mov
mov
mov
lahf
mov
dec
lret
daa
out
cmc
jae
cmp
jl
mov
negl
ds
xchg
divb
mov
shl
ret
cmpl
hlt
cltd
inc
addl
sti
mov
ja
or
cmpsl
insl
mov
sub
cmp
rcr
mov
push
mov
fsub
mov
push
js
iret
sub
adc
jmp
push
dec
mov
aas
cmp
in
movsl
mov
ss
rolb
stc
lahf
movsl
lods
cld
dec
stos
nop
popa
shlb
add
fxch
mov
pop
outsb
into
test
mov
xor
shr
rclb
ljmp
jmp
lret
cmp
aas
cld
mov
push
push
push
xchg
bound
pop
or
popa
inc
iret
ficomps
adc
stc
sbb
push
pop
stos
imul
mov
lods
test
imull
and
iret
xchg
outsb
add
mov
sbb
pop
test
pushf
push
ljmp
and
pop
or
xor
loop
ja
add
cmp
into
jne
mov
flds
mov
aam
sbb
mov
mov
xor
ret
mov
lods
sbb
into
test
test
into
and
pop
je
imul
push
shl
xchg
pop
int3
pusha
mov
mov
mov
rolb
outsl
dec
push
sahf
push
cmpsb
pop
cmp
rclb
sbb
sbb
call
fistpl
cmpsb
pop
sahf
insl
mov
xor
dec
push
add
jmp
std
iretw
arpl
mov
jae
cmc
sbb
mov
aad
cmp
divl
les
in
sbb
adcb
or
or
sbb
ret
arpl
xor
lods
dec
mov
mov
aad
cmpsb
rol
push
inc
xchg
push
cmp
imul
fcoml
sub
hlt
scas
sbbb
daa
repnz
mov
aas
inc
or
sub
mov
or
loope
repnz
js
xcrypt-ecb
stos
es
jns
jnp
stc
int3
xchg
andl
mov
sti
sbb
andb
aad
into
fisubs
shlb
addr16
fnop
es
inc
popa
scas
sub
cmp
in
hlt
outsb
xchg
push
fsts
add
outsb
rclb
fsub
hlt
into
add
xchg
pop
sbb
sahf
scas
xor
sub
cltd
insl
rcl
inc
test
out
fs
movsl
ficomps
ror
xchg
or
rcl
imul
aas
into
and
jp
sbb
hlt
lock
enter
xchg
push
addr16
jmp
insl
test
sti
fldl
fs
in
fs
std
pusha
mov
movsb
fs
cwtl
add
stos
and
loop
out
cmp
loopne
push
in
gs
xchg
test
add
lret
sbb
mov
movsl
jp
int3
enter
fstpt
lcall
aaa
xchg
rcrb
lret
mov
stos
pushf
xlat
mov
out
and
sahf
adc
push
lods
insb
push
or
pop
cmpsb
dec
je
cltd
icebp
lcall
and
and
lahf
out
adc
inc
pop
ds
fsubrl
sbb
mov
xchg
add
and
mov
lret
dec
cmp
xor
or
repz
test
pop
fnstsw
cld
jno
pop
sub
and
into
fadds
mov
lret
mov
sbbb
sbb
pop
and
in
mov
inc
xchg
xor
data16
push
pushf
pop
and
jnp
icebp
leave
lods
cmp
add
pop
mov
jne
sub
stos
inc
cmpsl
shll
in
loopne
jecxz
push
cmp
testl
and
cmpsb
cmpsl
addr16
push
outsl
cmpsb
ss
sub
mov
sete
xchg
jno
mov
lret
add
cmpsb
fs
xor
xchg
dec
insb
jnp
test
push
cmc
mov
cwtl
outsl
adc
loope
jge
fidivl
dec
jbe
dec
inc
leave
sbb
fistpll
adc
jns
mov
push
add
addr16
cmc
imul
in
test
jmp
pop
enter
imul
dec
and
out
hlt
ficompl
andb
cmp
mov
jns
mov
aaa
aam
aas
aas
xchg
fwait
xor
popf
or
shrb
pop
lcall
call
imul
cmpsb
rolb
cld
mulb
xchg
push
ret
inc
test
mov
fs
sub
mov
insb
dec
and
idivl
arpl
repnz
iret
adc
inc
cmp
cmc
loopne
push
dec
mov
cltd
xchg
dec
cltd
lret
call
mov
inc
cmpl
and
nop
mov
fidivrs
push
lock
add
mov
jnp
pmuludq
and
pop
xchg
lcall
lret
test
cli
lret
jge
pop
shll
inc
push
out
sub
sbb
ret
mov
xchg
dec
das
es
add
xor
dec
das
mov
add
push
les
test
push
push
insb
pop
xor
movsl
sahf
pop
push
push
and
decl
data16
stos
lea
iret
xchg
add
cmpsl
cmp
hlt
cmc
into
adc
ljmp
mov
cmp
int3
lea
gs
loopne
adc
jmp
adc
pop
push
add
dec
adc
out
jle
cmc
fdivrl
negl
mov
sbb
test
mov
lahf
cmp
cmp
lods
js
pop
orb
jg
fwait
jae
iret
std
fldt
nop
xchg
or
jp
daa
xchg
and
inc
stos
mov
je
pop
xchg
ror
lret
inc
cmp
call
mov
mov
lods
add
lds
mov
repnz
sub
xor
inc
xor
notl
fnstenv
jecxz
les
add
fists
out
movsl
mov
je
lahf
pop
lret
mov
add
inc
loope
pop
pop
lock
dec
cmp
aam
movsl
imul
into
xchg
and
repz
in
popl
jmp
nop
je
push
fwait
add
das
stos
inc
mov
adc
notb
faddp
cs
dec
jl
pop
jmp
ljmp
mov
lods
dec
push
lock
xor
repnz
sub
int3
dec
push
pop
lea
inc
jnp
into
cmp
cwtl
mov
hlt
dec
pop
lods
je
and
jno
ja
int
mov
mov
sbb
cmp
and
lret
sub
nop
pop
mov
mov
pushf
cwtl
aaa
mov
xor
stos
mov
dec
sti
enter
iret
stc
in
sub
hlt
cmpsl
mov
invd
xchg
ljmp
xor
leave
push
lcall
jno
arpl
pop
adc
lret
dec
rorb
jecxz
repnz
arpl
into
ret
mov
arpl
dec
rcrb
dec
nop
test
in
dec
js
and
push
sti
les
xchg
stc
cmpsb
test
fdivr
pop
idiv
ja
inc
adcb
stos
jmp
adc
mov
inc
adc
bound
sub
ja
xor
mov
dec
jbe
push
scas
arpl
gs
int3
mov
dec
fstpt
push
or
popa
sub
lock
dec
and
into
out
sbb
out
add
cmpsb
adc
jo
mov
mov
mov
or
je
lahf
mov
mov
push
jecxz
sub
lds
mov
push
lret
mov
shll
add
stos
mov
sarb
add
cmp
leave
mov
mov
cs
push
lea
pop
xor
pop
mov
ret
push
dec
mov
out
out
inc
fildll
dec
xor
jb
shll
sbb
inc
out
and
or
mov
je
xchg
xlat
add
pusha
mov
push
xor
jns
mov
jmp
jb
mov
add
nop
mov
and
loopne
push
jl
inc
pop
fidivrs
cwtl
test
aad
enter
test
loop
outsl
or
pop
or
mov
insl
sub
hlt
insb
stos
dec
ljmp
dec
sub
popf
push
adc
sub
stos
inc
pop
ljmp
mov
stc
test
dec
leave
test
mov
mov
adc
pusha
jl
out
int3
or
and
xor
lds
aas
dec
mov
mov
out
ret
fisttpll
jns
pusha
push
sub
xchg
hlt
sbb
add
out
sbbb
leave
xor
xchg
aam
jne
dec
loope
or
inc
push
out
jo
inc
loopne
push
pop
push
pop
mov
test
mov
idivl
and
lock
push
sub
add
test
fimull
or
gs
add
jge
sub
mov
jns
imul
inc
cmp
cmp
adc
fcompl
push
or
fldt
inc
push
adc
aam
mov
push
jo
stos
push
pushf
adc
insb
out
scas
fsubrs
iret
xorl
aaa
sti
pushf
sahf
fbld
insl
cmp
and
out
add
loopne
sbb
rolb
jge
xchg
in
lods
cs
je
pop
movsb
and
mov
dec
sub
ficoms
js
add
dec
mov
pop
cmc
int3
addr16
popa
insb
je
ficoml
mov
mov
and
push
dec
ficomps
hlt
es
daa
clc
add
in
push
pop
stc
lahf
xor
xchg
adc
lods
into
clc
popf
ss
stc
ret
mov
cmpb
cmc
in
or
insl
mov
sub
jmp
mov
add
add
out
mov
movsl
aas
and
jmp
add
adc
jb
cmp
pop
lods
lret
xor
mov
add
lock
mov
jne
int
pop
ja,pt
mov
rcrb
jne
das
sbb
int
push
int3
cmp
loope
cmc
sahf
pop
fnsave
pop
xchg
dec
pusha
nop
sub
divl
cwtl
cmp
jbe
add
push
pop
scas
daa
test
cmp
jge
out
ja
in
dec
in
test
pop
shlb
rclb
fcoms
mov
pop
test
scas
loope
rorb
loopne
jecxz
movsb
mov
pop
movsb
ja
lcall
or
sbb
xlat
jge
lret
dec
xlat
ret
dec
les
adc
bound
fildl
aaa
cld
shlb
push
mov
cmp
xchg
popf
dec
fistps
lock
imul
ljmp
and
fwait
adc
mov
pop
mov
add
add
xor
and
cmp
mov
jo
movsl
sub
movsl
fdivr
cli
cmc
repz
es
rclb
int3
lods
adc
int3
mov
repnz
loop
scas
stos
roll
mov
in
into
xor
mov
push
out
push
sbb
or
icebp
stos
in
cmpl
pop
jmp
jecxz
mov
cltd
xchg
cmpb
ja
inc
mov
pop
scas
and
add
push
sbb
jmp
pop
outsl
enter
and
xchg
mov
push
rorb
clc
lock
das
jge
mov
cmp
in
or
or
sub
jno
cmpsb
adc
jle
cli
push
adcl
repnz
xor
dec
and
pop
jmp
outsb
shlb
cli
mov
sahf
test
in
test
sbb
mov
mov
mov
inc
bswap
lds
shrl
cmp
xor
pop
and
dec
inc
xchg
mov
fs
add
inc
mov
outsl
rorl
push
pop
pusha
pusha
adc
cmp
jb
je
xchg
aam
xor
mov
outsl
pop
mov
ret
shrb
dec
cmp
mov
push
fs
cmp
shll
shrb
cmp
inc
xlat
mov
mov
out
push
or
arpl
das
cmp
mov
adc
test
jb,pt
mov
test
imul
jnp
jp
pop
test
mov
imul
shrl
aas
xchg
cmp
ja
sub
xchg
sbbl
or
and
xchg
shlb
arpl
pop
push
fidivrl
mov
sbb
fcmovne
mov
adc
sbb
pop
push
sbb
ja
add
dec
push
sub
aam
cmc
gs
lock
cwtl
inc
ret
sbb
fdivrl
pop
js
mov
or
xlat
sub
mov
out
shlb
insb
sti
xchg
jb
enter
pop
aaa
in
lret
daa
sahf
xor
mov
add
or
sti
add
lea
repnz
xchg
mov
mov
icebp
mov
push
test
lahf
push
jmp
clc
mov
mov
mov
mov
sarb
inc
int3
mov
test
sub
xchg
jge
adc
mov
lret
jg
push
dec
stos
and
lds
mov
les
cwtl
xorb
outsl
push
int
inc
xchg
popa
sub
outsb
aaa
xor
push
mov
sti
inc
jnp
popf
es
fsubp
stc
out
pop
cmpsb
repnz
cmc
lock
jl
and
out
mov
adc
or
cmp
sub
pop
inc
or
jnp
cwtl
add
fldcw
xor
jl
ljmp
aad
and
js
add
jbe
mov
add
mov
jb
loop
test
ret
lret
inc
dec
imul
and
je
xchg
int
jle
xor
out
rcrb
add
push
and
inc
or
call
int
xor
xor
xchg
fwait
cld
repnz
scas
dec
xlat
add
cmpsl
jecxz
cltd
fisttpl
jns
or
pop
xchg
jp
or
pop
test
pop
push
jne
stos
arpl
loope
aad
mov
pop
pop
adc
adc
and
add
mov
aas
mov
mov
mov
inc
xchg
jno
xor
pop
adc
shl
lcall
cmp
popa
and
push
pop
push
testb
inc
mov
lcall
loope
pop
mov
lea
dec
mov
mov
xlat
jmp
sub
out
ds
leave
jo
jns
mov
xchg
mov
int
fwait
and
aad
adcb
or
ret
inc
or
mov
push
jbe
scas
adc
adc
inc
iret
icebp
out
cwtl
sar
outsb
outsl
fsubl
push
lds
sti
sub
pusha
push
int3
ret
ja
dec
xchg
scas
dec
and
mov
sbb
pop
cmp
xor
pop
test
pusha
pop
pop
scas
stos
and
sbb
mov
cmc
ret
inc
cmpsb
pop
ds
jmp
daa
and
xchg
icebp
push
push
dec
push
inc
aas
xchg
fisttpl
inc
pop
mov
jmp
pop
or
push
xor
mov
in
ret
js
cmp
shll
cmp
out
sarl
pop
sahf
sahf
lock
mov
mov
les
fwait
or
fadd
lret
shll
iretw
pusha
xchg
push
js
insl
and
mov
sbb
shr
ljmp
jg
les
mov
cmp
jb
jp
xor
sbb
mov
loope
jb
movsl
cmpsl
cltd
add
lret
xor
sbb
out
mov
mov
pushf
pushw
bound
lret
cmp
jb
outsl
out
xor
inc
repnz
add
jl
imul
mov
iret
movsb
jp
mov
push
mov
xchg
jmp
pop
dec
mov
in
and
inc
loop
aam
sub
fadds
aam
fsubrs
xchg
jbe
push
mov
jg
pushf
sti
cltd
ret
jge
xchg
lea
arpl
int3
fldl
mov
mov
outsb
xlat
arpl
sbb
scas
push
push
sbb
dec
push
mov
cltd
je
adc
lcall
je
mov
insb
outsb
jl
cmp
rolb
ja
imul
mov
sub
jecxz
jae
inc
insb
mov
lock
sbb
aam
rcrb
push
in
cld
sub
fcomps
repnz
pushf
inc
sub
lods
test
loopne
xchg
stc
cmp
add
arpl
dec
mov
gs
pop
arpl
or
push
lods
in
les
mov
mov
jge
jbe
xchg
sub
mov
jp
cmp
and
jg
xlat
test
cwtl
adc
lcall
lock
adc
cwtl
shll
shr
inc
or
mov
push
es
in
dec
bound
mov
mov
cmp
xchg
jmp
mov
test
adc
sbb
inc
int3
loopne
cld
add
xchg
lds
pop
adc
in
je
push
test
jmp
jg
aas
add
adc
test
mov
mov
and
pop
jp
push
pop
test
insl
adc
sub
out
cltd
xor
push
mov
dec
mov
frstor
mov
xchg
adc
xchg
xor
into
fs
fiaddl
push
lea
cmp
scas
stos
jmp
fistl
lea
aaa
sbb
add
jbe
sub
aas
cwtl
repz
mov
pop
into
push
int
cli
mov
and
push
jb
inc
and
mov
pop
pusha
cmp
add
les
xor
add
sbb
push
xchg
pop
mov
in
mov
and
lds
sbb
arpl
push
push
fidivs
mov
fdivrl
faddp
push
aas
push
jp
gs
ret
icebp
mov
xchg
inc
or
int3
jmp
jp
xorl
nop
and
push
mov
jnp
mov
lea
dec
out
gs
or
or
mov
or
or
xor
repz
into
xchg
adcb
or
loope
loope
mov
lock
lret
mov
add
xchg
mov
int3
nop
insl
pop
int
out
xlat
ficompl
es
sub
dec
cmpsb
inc
aaa
pusha
xchg
fdivrp
repnz
lret
cmp
inc
ret
adc
nop
loope
pushf
clc
fstpt
loopne
add
outsl
in
mov
sahf
dec
ret
jnp
push
iret
cmpsb
push
cmpsl
out
sub
sub
fcmovnb
mov
mov
shlb
mov
jl
rcr
enter
shlb
sub
push
cmpb
sbb
scas
xchg
push
lret
pop
in
daa
jno
adc
inc
mov
rcrb
sbb
sub
stc
dec
jne
fisubrl
pop
sub
aad
mov
fstpt
insb
jle
mov
loope
subl
cs
rcrl
add
mov
fdivl
aaa
mov
fsubs
xor
data16
sbb
jg
cld
stos
and
pop
imulb
mov
stc
cmp
in
test
jmp
adc
pop
dec
cmp
imul
sbb
jge
notl
popf
add
scas
mov
or
or
add
loope
xchg
xlat
xchg
lds
rcl
jg
std
or
xchg
pop
loop
fcmovnu
test
leave
dec
and
inc
add
arpl
push
aas
mov
or
xor
and
cmpsl
cwtl
nop
shrb
xor
call
mov
std
inc
add
aam
pusha
xchg
ret
lret
mov
cwtl
add
dec
stos
and
and
testb
mov
jle
stos
jl
or
jae
js
mov
insb
cld
loop
push
sbb
jmp
adc
js
sbb
outsb
push
outsb
jmp
adc
jmp
out
cli
mov
stos
rcl
mov
cld
adc
mov
movsl
imul
lcall
pop
mov
xor
bound
inc
ret
pop
sbb
add
fisubl
push
fbstp
lret
fcomps
cmp
into
fbstp
fimuls
adcl
je
std
pop
pop
imulb
lods
push
xchg
mov
inc
gs
mov
ss
fsub
inc
push
pop
xchg
push
cli
adc
push
lods
xor
mov
push
std
add
push
inc
push
lret
lods
mov
lods
test
push
mov
scas
pop
psubd
xchg
adc
pop
inc
sar
or
mov
jl
shlb
jecxz
lahf
mov
ds
mov
xor
xchg
sti
ficompl
xchg
inc
test
in
stc
stos
jb
enter
sarb
xchg
push
enter
and
inc
sub
lea
icebp
sbb
into
les
jl
pop
mov
push
and
out
pop
leave
jb
mov
push
jae
popf
cmpsl
mov
pusha
rcr
jns,pt
cmp
fs
int
js
das
xchg
jl
and
std
sbb
xchg
mov
xchg
adc
inc
dec
inc
sarl
add
data16
xor
sbb
icebp
test
xchg
dec
push
pop
mov
fsubrl
adc
cmp
add
in
dec
ret
jne
jg
mov
and
pop
jno
jp
cmp
inc
push
sbb
mov
mov
add
cmp
push
icebp
mov
jne
outsl
addr16
out
cmp
fdivl
fcmovnbe
imul
rorb
aaa
idivb
mov
jle
or
adc
cmp
and
in
add
ds
push
in
cli
mov
stos
jge
sahf
pop
push
mov
adc
jnp
push
insl
lahf
in
test
ds
pop
stos
cmp
jnp
dec
repz
mov
clc
jae
or
aam
mov
fcoml
insb
call
lret
pop
jb
adc
rcrl
cmp
int
test
test
sub
repnz
lcall
movsl
pop
push
dec
xor
push
mov
xchg
sbb
pop
mov
mov
mov
addr16
fs
inc
jno
fst
lds
aas
push
jle
cmp
enter
sub
bound
sbb
fucom
jle
mov
sahf
xor
iret
sub
incb
push
stos
enter
jae
mov
mov
push
mov
stos
addr16
pop
mov
ljmp
mov
rcrb
addr16
arpl
loop
mov
iret
adc
mov
lret
fcom
lret
push
pop
sub
lods
inc
mov
lahf
hlt
mov
xchg
int3
jmp
dec
addr16
inc
xchg
bound
sub
jno
arpl
imul
lret
int3
pop
andb
xor
xchg
lret
fcomip
jb
and
push
jmp
cs
dec
out
adc
ljmp
push
js
add
cmpsl
insb
mov
shll
xlat
jbe
cltd
fxch
pop
fldcw
pop
push
sarb
mov
pushl
movsb
repz
add
popf
push
fisubl
je
test
lock
scas
test
adcl
sbb
pop
add
xchg
and
stos
cli
mov
in
insl
mov
daa
inc
sbb
xor
roll
xchg
mov
inc
push
sbb
mov
jne
mov
inc
xor
cmpb
push
mov
mov
jns
sbb
sub
stos
ds
dec
mov
fxch
add
mov
mov
sbb
xor
xor
jne
popf
jno
sti
mov
dec
add
jl
iret
stos
andb
cmp
into
mov
xorb
push
xlat
and
test
dec
sti
std
subb
inc
and
insb
or
enter
in
jo
enter
mov
sbb
or
outsb
jne
int3
ffreep
sti
fmull
cmp
sbb
test
std
push
mov
xchg
insb
or
aaa
stc
lret
adc
test
lcall
cmc
xor
lret
sbb
push
jle
lret
loope
clc
scas
dec
rorb
lret
andl
dec
aad
shll
or
xchg
into
jle
xchg
fwait
lcall
cli
shrb
inc
out
negb
xchg
push
lret
jns
sub
add
jnp
int
mov
push
xor
xchg
clc
jnp
push
mov
xorl
add
cmc
push
mov
sub
loop
jb
inc
mov
iret
lock
aad
xchg
fistps
push
arpl
push
jmp
lods
out
lret
sub
dec
fstl
mov
or
ljmp
mov
ja
arpl
add
mov
xchg
sub
rorb
ficoms
jo
push
jbe
xchg
dec
loopne
into
pop
icebp
shl
adc
and
stc
xchg
add
insb
imul
sbb
subb
cmpl
mulb
dec
lock
jl
pop
push
pop
jmp
inc
dec
inc
inc
push
in
loopne
aad
sets
fs
add
push
fdiv
movsb
inc
mov
mov
xlat
movsl
xorb
xchg
sbb
jns
shlb
scas
sbb
dec
xchg
adc
push
pop
lahf
bound
inc
and
es
ficoml
ljmp
repz
movsl
push
gs
pop
leave
jbe
sub
fcomp
mov
jecxz
fcompl
pop
rcrl
lds
movd
inc
imul
mov
pop
iret
sub
pop
ljmp
xchg
lds
cmp
cmp
fs
jne
xor
lret
imulb
sbb
mov
adc
push
pop
mov
fwait
jg
rcr
and
shlb
repz
psraw
mov
ss
fnstsw
cmp
jecxz
add
jecxz
in
cwtl
mov
dec
testb
sbb
adcl
cmp
mov
add
or
cmc
stos
adc
mov
cmpsb
push
inc
adc
dec
or
adc
xor
cmp
mov
add
aas
dec
scas
xlat
inc
push
push
enter
xor
sub
mov
aaa
and
sbb
and
je
les
test
mov
pusha
xor
pusha
dec
test
lods
aaa
sub
add
inc
add
data16
push
mov
mov
data16
adc
dec
decl
imul
mov
outsb
stos
and
push
add
push
pop
ret
push
push
xor
jle
fcomi
dec
and
cmp
pop
addr16
scas
test
fistps
sarl
fldl2t
bnd
gs
inc
fldlg2
rsm
aaa
add
loopne
leave
add
mov
xchg
inc
xor
in
inc
shlb
cmpsb
mov
leave
ja
push
cmpb
notl
imul
rolb
push
mov
icebp
mov
and
push
dec
rol
cltd
lcall
and
dec
nop
fdivrp
and
cmp
push
jmp
sbb
shrb
cmc
inc
insb
jno
push
insb
testb
mov
fstl
mov
fwait
decb
icebp
lea
fiaddl
push
push
es
test
dec
xor
sub
iret
lea
pop
jne
jo
lods
mov
out
mov
or
cmp
stc
mov
fwait
pushf
inc
int3
xor
cld
aas
cwtl
add
push
or
out
add
std
jge
loop
and
std
in
push
fisttps
or
xchg
add
andb
and
out
sbb
and
or
jl
dec
jbe
lahf
and
jae
pop
or
jle
mov
mov
xor
mov
mov
xchg
out
inc
andl
jne
sub
xor
adc
icebp
xlat
test
jo
aad
mov
adc
repz
sub
cltd
rcr
add
movsb
jns
inc
fidivrl
int
mov
jle
inc
rclb
xorb
xchg
or
ja
mov
mov
filds
mov
sbb
push
and
mov
loop
mull
enter
mov
mov
jmp
push
test
rcl
sbb
push
in
jp
lds
imulb
mov
mulb
cltd
push
or
pop
cmp
clc
push
adc
enter
cmc
pop
xchg
fs
cltd
pop
test
int
cld
daa
out
mull
dec
xchg
in
mov
pop
pop
push
mov
mov
cmp
or
push
movsl
movsl
mov
mov
sarl
test
push
repnz
and
ja
pop
add
faddl
in
js
fistl
pop
mov
nop
push
andb
loopne
dec
lds
int
lea
inc
scas
add
sarl
dec
es
push
rorb
adc
mov
inc
mov
push
xchg
mov
sub
shrb
mov
ja
gs
das
mov
int3
loope
mov
mov
add
add
sahf
sbb
push
push
sub
mov
dec
mov
pusha
inc
mov
xor
inc
mov
cmpsb
ljmp
out
loope
xor
cmp
pop
gs
push
mov
call
and
sub
in
dec
cli
das
loop
mov
pop
pop
psrlw
or
or
xor
int3
sbb
stos
clc
insb
dec
sbb
nop
test
inc
mov
xor
clc
aad
mov
mov
sbb
or
jge
jno
frstor
dec
out
push
lcall
mov
add
mov
or
loop
add
jecxz
lret
or
add
or
pushl
dec
lock
sarl
and
imul
adcl
fmuls
mov
jg
adc
test
lds
int
dec
sti
add
jmp
mov
addr16
loope
sub
adc
cmp
push
inc
les
nop
arpl
mov
je
cmp
repnz
test
pop
incb
mov
mov
jns
stos
jp
outsl
mov
outsb
movsl
lods
mov
lret
mov
xchg
hlt
xchg
mov
fwait
test
xchg
lea
mov
jne
inc
jecxz
mov
dec
sbb
jo
mov
push
jae
fwait
mov
iret
ret
fimuls
das
ja
and
pop
arpl
mov
stc
enter
test
add
ljmp
test
nop
cmp
adc
gs
cmp
dec
xchg
test
xchg
sub
lcall
popf
add
imul
arpl
lods
cmp
addr16
xor
fwait
stc
stc
into
push
out
aad
or
cs
mov
dec
shl
cmpb
shll
sub
pop
test
sub
cltd
inc
cld
in
mov
mov
mov
incb
cli
adc
cmp
and
aad
pop
pushf
or
rorb
push
push
pushf
outsb
xor
pop
aaa
fcomi
sub
xchg
bound
lea
test
iret
pmullw
adc
loopne
push
sbb
insl
movsl
jmp
fucomip
es
sub
adc
jmp
mov
inc
xchg
push
and
jge
xchg
jge
push
mov
or
sub
out
and
mov
shl
inc
xlat
insb
cmp
lods
jo
jno
fisttpll
aas
ljmp
xchg
jbe
sbb
js
outsb
and
fwait
xor
leave
mov
sub
inc
inc
cwtl
lock
jmp
adc
add
mov
fwait
add
cwtl
mov
ror
inc
sahf
xchg
inc
adc
xor
sbb
push
mov
bswap
cwtl
andb
out
push
lods
push
daa
xchg
mov
scas
sub
mov
cmp
scas
sub
stc
aas
adc
clc
pushf
mov
push
jle
sub
push
cmc
mov
arpl
xlat
push
and
or
xor
in
inc
into
cmp
stos
xor
pop
popf
cmpsl
push
push
fsubl
neg
hlt
cli
pop
cmpsb
aaa
cmp
mov
stos
repz
aaa
xor
lods
xor
setns
push
add
mov
mov
adc
xor
icebp
js
insb
mov
mov
test
mov
xchg
outsb
mov
add
addr16
fucomip
daa
daa
mov
jmp
mov
pop
mov
out
jbe
mov
mov
push
icebp
pop
cmp
test
inc
aam
adc
adc
mov
jnp
dec
xor
inc
inc
ss
ljmp
imul
xchg
sub
bound
mov
aaa
pop
sqrtps
cmovo
pop
cmp
push
jnp
xor
test
jne
in
mov
popf
cld
outsb
test
test
ret
pop
mov
in
mov
xchg
add
sbb
aam
jns
add
movsl
push
pop
push
cmpsb
inc
fldcw
addr16
stc
cmp
roll
sti
test
xchg
cmp
jg
push
jnp
insb
adc
sbb
stos
and
sbb
jecxz
sbb
push
shl
lds
sbb
repz
fidivrl
inc
mov
dec
gs
std
scas
jge
iret
inc
stos
dec
aad
cmpsl
pop
mov
ljmp
lret
cmp
int3
add
pop
push
inc
jmp
fcmovbe
les
jge
fsts
inc
jnp
test
add
test
cmc
fcoms
mov
test
addr16
imul
add
cmp
stos
mov
sub
and
jmp
loopne
loope
insl
pusha
adc
loop
cmpsb
adc
stc
sub
mov
mov
and
test
fdivrl
pop
adc
mov
push
and
push
mov
or
out
dec
aas
lea
or
xor
push
xchg
ret
mov
dec
push
fwait
in
jne
xchg
or
mov
mov
repnz
jl
fsubrs
imul
call
sub
imul
mov
mov
xor
xchg
push
inc
mov
mov
rol
xor
sub
jo
stos
in
sub
insl
jo
addl
add
push
lret
push
inc
mov
or
push
lock
pop
jb
jb
mov
repnz
push
xlat
js
add
xchg
ss
lods
dec
arpl
xor
mov
dec
adc
ficoms
jbe
jmp
adc
mov
pop
push
rorl
lahf
add
xor
sub
pop
xchg
xchg
sub
lahf
out
daa
push
cmpsb
sbb
ja
dec
hlt
daa
sbbl
jbe
cmp
mov
cmp
das
fdivrl
fdivp
cmp
nop
iret
sbb
or
xlat
pop
std
cmpsb
or
sub
lock
daa
aas
xchg
and
push
jecxz
pop
cld
add
andl
mov
in
in
sub
jno
cmpl
jle
or
aaa
fistpl
xor
push
mov
stos
fimuls
sbb
call
adc
mov
lods
pop
sbb
pop
movsl
and
push
das
sbb
mov
jmp
xor
jnp
xor
pop
jle
inc
pushaw
jnp
pmullw
rcr
mov
xor
adc
mov
cmovs
sub
ja
loop
dec
add
pushf
or
add
mov
bound
fs
push
imul
or
pop
imul
stos
stos
mov
mov
loope
push
inc
xchg
push
jmp
addr16
or
mov
imul
je
mov
dec
and
ds
ret
out
call
imul
mov
cli
movsb
cld
pushf
dec
push
mov
mov
jge
icebp
imul
sub
gs
rep
sbb
jp
outsl
inc
cmp
mov
dec
sub
sarb
sbb
lock
xchg
xchg
pusha
movsl
imul
ret
and
sub
movsl
dec
or
out
dec
outsb
xchg
jecxz
ret
int
inc
cmp
mov
cmc
pop
push
adc
push
ret
adcb
maskmovq
fwait
shl
es
out
adc
add
inc
mov
pushf
add
je
inc
push
sub
jns
xchg
or
iret
inc
sub
or
cwtl
xchg
shr
outsb
sbb
or
push
inc
sbb
aad
lret
movsl
inc
dec
xor
cmp
out
mov
mov
mov
adc
and
jge
popf
mov
lods
mov
sub
mov
sti
loopne
movsb
mov
test
dec
hlt
inc
xchg
sti
js
and
add
fsubs
repnz
insl
insl
stc
pop
std
mov
mov
fucompp
popf
fcoml
jmp
jns
and
push
jg
or
cwtl
xchg
sub
push
pop
aad
add
fucom
mov
call
imull
cmp
mov
mov
scas
jae
and
clc
mov
and
cmp
scas
int
pop
int3
jo
inc
fucomi
adc
hlt
and
mov
pop
stos
cmp
mov
sahf
ljmp
add
mov
pop
rcr
nop
incb
inc
sub
sbb
movsb
addr16
push
dec
push
dec
ljmp
mov
sbb
adc
and
push
inc
repz
shll
and
push
sbb
add
faddl
outsl
outsl
sbb
and
adc
mov
scas
inc
push
cmpsb
inc
adc
cli
mov
mov
cmp
int3
mov
out
divb
orb
popa
loop
dec
inc
mov
shl
out
mov
and
pop
js
popa
ffree
sbb
adc
adc
mov
jno
pop
xchg
jbe
cmpsl
jbe
jp
nop
adc
scas
sbb
add
inc
icebp
jle
jg
adc
in
push
fimuls
lock
xchg
lds
push
jle
xor
das
mov
and
or
adc
dec
sahf
jp
enter
mov
imul
dec
repnz
daa
or
lods
mov
imul
jo
and
push
or
hlt
std
out
aam
sahf
sub
lock
mov
xlat
add
push
cld
in
frstor
lret
clc
jge
es
cmp
lds
mov
fdivl
xchg
jg
adc
push
xchg
dec
dec
pop
clc
out
stos
popa
jno
jg
sub
add
adc
dec
pushf
pop
jno
test
jp
mov
repz
daa
into
in
fs
fstpl
call
movb
or
rcrl
xchg
outsb
shll
loope
js
lods
sbb
popl
xorl
f2xm1
and
jb
test
or
jne
sbb
mov
test
ret
cmpl
roll
xor
push
mov
adc
dec
ljmp
cmp
sub
and
adc
push
gs
dec
push
xchg
or
enter
out
xor
fucomp
cmp
jp
xchg
add
lret
in
ret
xor
jb
mov
pop
cmc
fwait
sbb
mov
jp
in
stos
test
int3
push
hlt
dec
push
es
cs
insb
sub
addr16
into
push
inc
call
mov
pushf
jae
out
sti
ret
ja
cmpsb
cmpsl
xchg
xchg
daa
mov
inc
lock
mov
dec
lods
cli
pop
xchg
adc
daa
sub
stc
xchg
aas
lahf
hlt
mov
add
inc
setbe
daa
adc
sub
test
test
dec
call
rcrl
cmp
adcl
sahf
push
mov
mov
xchg
inc
lock
fldenv
shlb
dec
addl
sbb
push
jb
jmp
dec
fmuls
daa
mov
jg
xor
sbb
lahf
mov
jmp
jbe
mov
dec
test
push
or
xor
xchg
popf
insb
cmp
xor
adc
mov
inc
stos
inc
clc
xchg
mov
adc
jns
lcall
out
loopne
inc
int3
and
lds
push
fsubrs
xchg
fs
ljmp
gs
mov
sbb
sub
push
mov
add
aam
sub
xor
imul
and
das
push
inc
push
repnz
sub
mov
test
mov
add
sub
xor
ljmp
arpl
pop
cli
out
into
adc
mov
clc
sti
add
ds
orb
mov
sar
push
push
xchg
add
push
push
jae
lock
pop
cld
dec
mov
inc
movsb
cmc
ljmp
adc
xor
cwtl
inc
cmpsl
outsl
lcall
dec
or
mov
mov
iret
sub
leave
sahf
fs
xchg
movsb
add
shll
cld
mov
jecxz
rcll
fs
cmpsb
insl
cmp
inc
dec
push
in
dec
mov
and
mov
push
pop
fldt
jo
aad
push
lea
iret
xor
aad
popf
pause
jmpw
les
push
add
or
hlt
repz
add
add
mov
ja
out
loop
mov
divl
in
cmc
call
adc
xor
fwait
outsl
sbb
fs
arpl
adc
fwait
jae
fisttpll
mov
sub
int
stc
dec
loope
add
enter
enter
add
mov
jnp
pop
mov
jge
loop
fcoms
or
aam
add
dec
sbb
das
jmp
outsl
xchg
inc
jnp
jae
int3
aad
mov
cwtl
add
bswap
pop
out
sbbb
cmp
outsl
adc
inc
int3
inc
mov
and
sahf
pop
jmp
sub
and
xor
cld
sahf
inc
add
notb
fdiv
inc
mov
popa
adc
dec
lods
gs
in
dec
insl
sarl
dec
mov
adc
stos
inc
sbb
and
jl
jb
xchg
or
andb
mov
cmp
mov
xchg
xlat
out
pop
lret
in
mov
adcb
aad
cmp
mov
addr16
fists
insl
pop
pop
out
imul
int
add
sub
repz
cmpsl
xchg
push
pop
mov
int3
jns
jmp
push
outsb
or
or
pushl
pop
jge
std
fdivrs
repz
enter
dec
and
sbb
cs
sbb
loope
add
mov
add
mov
outsl
call
or
dec
xlat
inc
ret
mov
rcll
adc
jmp
les
push
add
shr
stos
xor
dec
shr
xchg
inc
les
popa
mov
dec
jge
dec
mov
fistl
xchg
cmp
push
inc
push
sbb
hlt
gs
inc
lret
xlat
push
lods
push
imul
cltd
hlt
cmp
mov
cs
dec
mov
add
cwtl
or
fimull
push
mov
pop
jbe
cmp
movsb
jecxz
repz
jp
lods
mov
int3
ror
push
xchg
testl
xchg
and
sbb
fstpt
mov
loopne
add
dec
es
fstps
or
ss
pop
jb
xchg
imul
or
je
mov
add
sub
out
sub
divl
fucomip
push
xor
loop
arpl
mov
scas
out
jnp
add
into
sbbl
push
inc
inc
in
cmc
xchg
inc
jae
xchg
pop
jno
stos
mov
cmp
sub
pusha
mov
fsubrs
jl
incl
adc
daa
aad
xlat
xchg
enter
xchg
jae,pn
sub
mov
dec
cmp
adc
in
and
and
inc
mov
push
mov
push
add
cwtl
push
adcb
cmp
adc
ret
xchg
cmp
sbb
lods
and
ss
sti
jl
cmpb
aas
sub
or
test
push
push
out
cs
lods
rcll
ja
sahf
xchg
jnp
add
and
cli
xchg
cwtl
push
xor
and
lock
xor
jnp
insl
xor
dec
movsb
adc
stos
dec
jo
lock
sub
sbb
aas
fwait
dec
push
lock
cmpsb
add
rcrb
test
or
sub
xor
push
jnp
test
scas
mov
into
scas
pop
dec
jp
inc
cmp
rolb
cmpl
daa
imul
clc
inc
mov
sbb
imul
std
add
fwait
ds
ds
test
mov
outsl
adc
cmp
jmp
jo
mov
mul
test
rcrl
decl
adc
sub
cmp
sub
pop
repz
jg
fstl
xchg
jne
dec
xchg
cmpsb
mov
dec
mov
cwtl
lds
adc
mov
xor
push
inc
jb
add
insl
lods
mov
ljmp
lret
outsl
faddl
imul
call
mov
pop
fcmovne
push
sbb
mov
arpl
jg
mov
notb
div
mov
mov
sbb
cmp
sub
xchg
insb
sbb
xchg
mov
jne
jge
pusha
sub
lret
add
jl
dec
mov
sbb
loope
adc
sbb
xorl
out
cld
jecxz
xor
xor
clc
and
mov
rolb
mov
sub
dec
sub
inc
push
popf
bound
adc
lock
rcrl
insb
push
ljmp
jne
jnp
inc
dec
ja
into
adc
cmc
lods
bnd
in
ds
xor
pusha
fmull
gs
pop
xor
adc
testb
or
mov
lahf
out
pushf
loope
dec
test
loope
lock
xor
mov
cwtl
ljmp
cmpsl
jne
and
jne
shlb
int3
mov
repz
gs
adc
in
enter
ds
ds
rcrl
mov
gs
sub
int3
sub
add
movsb
push
andl
add
cmpsb
test
xchg
mov
out
aaa
inc
push
dec
rcl
out
cmc
xchg
cmpsl
les
lods
pop
mov
mov
jno
xor
adc
mov
lds
cmp
lock
scas
sub
or
mov
sbb
sbb
mov
xchg
add
lock
jns
cmc
push
xor
dec
rcll
addr16
stc
bound
xchg
pusha
aam
ja
cmp
mov
sbb
loopne
je
movb
jno
push
mov
mov
rcrl
fcmovnu
xor
and
pop
stc
push
pop
sub
das
dec
outsl
add
dec
or
scas
sti
push
pop
jns
shrb
xchg
in
arpl
rolb
pop
xor
std
lods
test
xchg
mov
jno
add
inc
flds
addl
xor
orb
out
xlat
push
add
imul
add
gs
cmp
ret
scas
push
cmp
dec
cmpsl
cli
xlat
aaa
int3
mov
pop
call
and
cmp
cmp
dec
repnz
leave
adc
fsubp
sub
cmpsb
hlt
nop
dec
and
pop
cmp
das
es
push
sti
loope
adc
data16
push
mov
inc
jae
lret
fimull
sbb
lea
xchg
stos
pop
inc
sub
std
jno
mov
addb
dec
dec
dec
gs
push
xor
faddp
ret
jnp
inc
hlt
jp
arpl
mov
xlat
out
pushf
clc
mov
dec
lret
lea
js
pop
out
std
cmp
mov
sbb
or
movsl
cmp
sub
sbb
jo,pn
loope
xchg
jl
jnp
outsb
xchg
inc
mov
fdivrl
xchg
push
inc
shll
mov
pop
mov
cld
jnp
stos
mov
xor
rorb
add
push
daa
into
inc
test
inc
cltd
jp
insl
mov
xchg
mov
adc
loope
mov
lods
sarb
mov
add
in
notb
mov
shrl
xor
cmp
xlat
and
nop
ja
cmp
sbb
dec
add
dec
mov
mov
jo
cmp
add
mov
pushl
mov
dec
hlt
push
cmp
lock
scas
repz
ljmp
jno
push
fisttpl
jns
aas
adc
movsb
and
mov
test
lds
or
mov
pop
mov
outsl
or
enter
out
ret
loope
xchg
mov
dec
gs
sub
aam
lods
inc
ret
ja
clc
jno
xchg
or
jbe
popf
daa
addr16
mov
ja
push
data16
sub
push
in
ljmp
xchg
sub
mov
shll
imul
aaa
fcoms
xchg
push
mov
sbb
pushl
pop
test
out
adc
xchg
aaa
sti
mov
jo
fstps
lods
repnz
divb
repnz
inc
dec
std
pop
or
das
aam
jg
incb
and
mov
into
inc
das
lods
pop
cli
inc
icebp
popa
jae
and
push
sbb
xor
push
ret
movsb
pop
or
sbb
fsub
aam
mov
jmp
push
push
mov
cmc
sub
stos
cmp
adc
fsubl
or
fidivs
fdiv
push
loop
sti
mov
mov
add
popl
cmp
out
stos
loop
cmp
xor
xor
fiaddl
pusha
push
add
sbb
call
scas
xor
ljmp
negb
cmpsl
in
mov
in
sti
loop
adc
xor
sbb
jne
aam
lock
aaa
pop
rol
inc
lods
fdivl
adc
inc
push
repz
mov
out
pop
mov
fmul
xchg
lods
push
in
push
gs
loope
or
jno
dec
push
mov
xor
roll
xor
fmuls
sub
jp
adc
clc
xor
adc
mov
cmp
jbe
cli
and
jo
popa
fldt
add
lcall
xchg
mov
xor
ljmp
pop
jl
sbb
call
dec
enter
cmp
sbb
mov
sbb
jo
mov
pop
pop
out
push
insl
jns
sub
xchg
sbb
push
add
loopne
cmp
notb
mov
pop
cmp
push
cld
and
scas
sti
xchg
sub
or
out
xchg
xor
out
xor
dec
data16
adc
pop
ss
mov
mov
add
sub
xor
lcall
mov
add
ror
mov
and
rorl
cmp
xor
cmp
mov
mov
pusha
sub
leave
rclb
sbbb
call
imul
push
jge
fsubrs
cld
or
jnp
sub
stc
fs
xchg
and
fwait
adc
cld
mov
or
push
or
loopne
xorb
xchg
jmp
out
pop
push
or
jno
adc
clc
clc
and
jbe
insl
sub
add
dec
sbb
mov
jbe
fmulp
dec
inc
xchg
mov
mov
sahf
lret
in
nop
jecxz
push
xor
or
push
push
leave
test
pusha
pop
lods
addr16
dec
inc
push
xchg
sub
je
pushaw
xchg
in
pop
push
adc
clc
dec
repz
mov
sub
fistpll
ds
jae
inc
sti
vpcomud
xor
mov
dec
push
push
cmp
cmp
cs
adc
test
sub
sub
lahf
aam
fsubl
fwait
incl
hlt
rcrl
clc
shll
test
roll
adc
rorb
call
or
push
arpl
mov
or
imul
jno
ds
scas
pop
sbb
inc
imulb
mov
jnp
test
cmp
pop
test
ljmp
leave
aam
jg
cli
mov
jle
jae
fidivl
push
stc
jecxz
jg
mov
lock
out
mov
dec
or
push
mov
cltd
andl
fisttpl
xchg
inc
imul
jo
loopne
push
popa
mov
popf
ljmp
dec
ret
mov
mov
and
sbb
xchg
pusha
push
js
cmp
or
add
outsl
xchg
leave
add
jg
loope
test
xchg
repz
xchg
push
dec
ja
adc
xchg
in
jecxz
fdivrp
mov
sub
imul
jmp
popa
popf
fisubl
shlb
test
fistpl
lods
push
xor
leave
test
inc
xor
lretw
aam
inc
inc
mov
rcrl
push
adcl
ret
sub
test
movsb
xchg
jmp
lret
sub
ljmp
lret
loopne
inc
xchg
sbb
mov
and
cli
xchg
cmp
std
aam
and
push
sub
xchg
or
and
cld
inc
sbb
das
repnz
jb
dec
sti
ret
cmc
pop
pop
sub
aas
xchg
push
insl
mov
push
imul
repz
fistps
out
sti
fisttpl
aaa
sub
add
push
leave
stos
jecxz
pop
dec
xchg
pop
ret
je
hlt
xor
mov
imul
pop
shl
sbb
mov
pop
xchg
pop
mov
adc
and
jae
cwtl
push
ds
dec
inc
sbb
sbb
xchg
push
das
pop
and
inc
mov
xorl
sbb
lcall
outsb
xchg
sub
or
or
jno
bound
clc
lahf
xor
or
jmp
scas
orb
icebp
xchg
fs
and
mov
xor
xor
outsl
fwait
xchg
or
xor
outsl
sbb
inc
inc
lcall
inc
cli
pusha
mov
lods
xchg
mov
cmc
xchg
pop
mov
pop
pop
bound
adcb
rolb
cmp
jae
rolb
adcb
cli
aam
push
testl
sub
sti
add
jmp
adc
mov
mov
outsl
shl
dec
dec
push
push
dec
adcb
mov
xchg
sbb
mov
pop
mov
xor
inc
mov
fmul
push
xchg
push
scas
insl
int3
sbbl
mov
jecxz
cmpsl
cmp
jecxz
cmpsl
insl
mov
lock
mov
mov
clc
xchg
push
xchg
xchg
adc
or
and
jp
xchg
scas
inc
fcomp
xor
push
into
ljmp
repnz
mov
loop
pusha
faddp
sub
sbb
lods
or
lret
out
xchg
mov
idivb
test
jl
jb
pop
mov
or
outsl
jle
sbb
int
into
mov
roll
adc
sub
dec
out
push
std
xorl
mov
or
outsb
sti
movsl
outsb
xchg
pop
adc
push
or
dec
enter
dec
iret
sub
dec
stos
hlt
sbb
xchg
incb
sbb
insb
and
dec
scas
mov
push
mov
gs
jg
sbb
jbe
fcoms
int3
add
pop
add
rol
push
pop
xlat
jg
xor
dec
or
cmp
into
jnp
mov
add
and
movsl
sub
lret
clc
and
adc
sarb
xor
jge
mov
fcoml
and
mov
push
mov
roll
xchg
imul
int3
sbb
xchg
xor
fsubl
sbb
scas
addb
pop
aam
es
push
xor
lret
add
in
lret
out
jnp
cmp
or
es
push
jmp
mov
dec
mov
pop
push
jecxz
mov
stos
jecxz
and
sub
sub
subl
fnstenv
mov
mov
sbb
add
push
rcrb
into
mov
ljmp
sbb
sbb
sbb
adc
aas
adc
mov
mov
pop
adc
cmpsb
mov
dec
loop
jmp
aad
xchg
fnstsw
repnz
lds
insl
enter
test
dec
lods
testb
mov
jb
scas
xlat
decl
push
xchg
int
jecxz
adc
adc
enter
add
je
jns
or
jge
hlt
push
xor
mov
mov
outsb
lock
je
adc
insl
pop
jns
dec
jns
mov
xchg
mov
lret
shrl
sbb
mov
int
aam
movsb
addr16
out
popf
sub
dec
xchg
test
inc
sahf
test
jge,pn
adc
sub
ficomps
pop
push
outsl
add
or
js
rol
repnz
jg
mov
inc
negb
fwait
push
sub
mov
faddl
cmp
dec
xor
mov
sub
cmp
mov
push
lock
lea
fs
insb
pop
sti
ds
mov
insl
enter
add
mov
adc
ss
and
stc
js
mov
push
inc
stos
rcrb
in
lahf
push
daa
mov
fists
lcall
add
xor
ds
subb
in
add
fsubr
dec
pushf
xor
inc
pusha
shl
cmpl
mov
adc
sti
pop
ds
mov
adc
out
xor
jae
xor
in
xchg
pop
inc
lods
testl
outsb
nop
pop
bound
pusha
test
repz
pop
mov
add
insb
mov
jo
sub
out
iret
mov
lods
mov
aaa
xchg
dec
xorl
push
push
leave
jle
pop
sbb
add
popa
aam
fwait
mov
dec
sbb
cmpsb
fsubrs
xchg
les
inc
cmpsb
mov
jno
in
sub
mov
dec
pop
pop
inc
dec
mov
inc
fdivl
in
mov
shl
stc
jno
cmpb
xchg
call
jle
stos
scas
movsb
inc
jg
fdivrl
add
cmc
pusha
xor
in
pushf
je
fstp
jne
aad
clc
je
cmp
test
xor
je
lds
xor
out
std
jl
loop
mov
clc
or
pop
stc
rcr
psubd
adc
jp
mov
jnp
mov
add
roll
test
lods
jl
adcb
test
push
data16
mov
or
pop
cmp
sub
dec
out
mov
sub
push
add
pop
push
pop
cmc
pop
pop
sub
lods
stos
fbstp
lret
in
jmp
test
xchg
pop
mov
and
ss
and
clc
adc
inc
lret
push
arpl
gs
lahf
scas
dec
ja
in
mov
add
dec
sbb
sub
fs
push
cmpsb
ret
fcomps
out
cmp
aas
xor
dec
add
mov
xchg
out
mov
or
jnp
or
xor
lock
aaa
mov
adcb
outsl
in
imul
mov
adc
xor
cmc
xchg
jbe
push
mov
add
sbb
les
push
pop
cld
push
mov
sahf
dec
je
sahf
inc
out
das
mov
add
sub
and
jne
fwait
repz
jo
in
out
rorb
shl
mov
call
imul
inc
pop
xor
fwait
push
fwait
dec
decb
xchg
fisubrs
pop
push
sahf
int
xor
cmpsl
xor
push
dec
mov
outsl
test
xorb
loop
cmp
inc
enter
insb
xor
cmovl
inc
inc
inc
mov
shl
fidivl
fbld
iret
idivl
dec
xchg
aas
mov
cwtl
call
ljmp
mov
mov
xor
push
sbb
push
cld
push
stc
stos
popfw
lret
mov
xchg
scas
mov
and
shrl
xchg
gs
add
js
xchg
cmc
scas
bound
push
xchg
test
testb
fldcw
add
push
xchg
mov
jbe
sarl
mov
leave
adc
std
jl
lds
andb
xor
int3
in
xor
std
cmpb
jno
xor
popf
lret
das
in
roll
pop
fisttpl
and
movsl
xor
mov
inc
lcall
xchg
or
mov
not
aas
xchg
sbbl
and
push
outsb
sub
mov
mov
mov
inc
pop
in
xchg
aad
and
ret
jp
pop
lret
push
jg
out
sub
xor
pop
aad
fdivrs
mov
mov
or
cld
popf
sub
push
xor
cmpsb
pop
in
dec
arpl
jae
pop
imul
jae
popf
mov
mov
movsl
mov
lahf
insb
jbe
adc
cmp
fisubs
mov
add
stc
cmc
cmp
lock
mov
or
es
jge
xchg
inc
in
mov
and
pop
and
jmp
xchg
fsts
push
cmpsl
sub
mov
out
mov
lock
mov
popa
or
xchg
sub
jecxz
sbb
es
mov
sbb
lds
pusha
sub
pop
xor
mov
lock
mov
add
mov
cmp
cmc
fisubrl
push
sub
inc
in
cs
cmp
shlb
lock
xchg
cmpsl
cmp
icebp
pop
jmp
pop
loopne
flds
mov
cmp
sub
cwtl
loope
out
mov
sahf
push
cmp
adc
sahf
mov
lods
lret
shl
xchg
sbb
les
sbb
test
and
push
xor
add
xchg
jnp
fwait
lret
xchg
mov
lret
inc
mov
add
ror
xor
or
lods
out
lods
test
push
xchg
or
sbb
inc
lret
mov
pushf
sbb
imul
sbb
scas
jo
mov
aam
fxch
pop
xchg
in
mov
pop
les
add
pushl
scas
xor
mov
sbbb
rorl
and
loopne
imul
lods
or
mov
scas
sbb
mov
addr16
je
inc
orps
fisubl
in
lds
cmp
jne
push
mov
or
mov
lea
inc
adc
out
push
dec
sbb
mov
jecxz
or
push
jle
inc
decb
leave
push
ljmp
scas
test
cmp
xchg
add
and
rorb
popa
push
mov
jo
mov
adc
popf
cwtl
lock
pop
mov
scas
fbld
mov
fdecstp
mov
shlb
mov
mov
loope
out
lret
stos
les
push
out
aas
jp
mov
loopw
fcmovnbe
xor
push
mov
push
popf
xchg
nop
test
sub
lcall
xchg
xor
mov
or
cmp
ficoms
lock
idivl
inc
adc
das
mov
out
lods
and
jo
popf
jecxz
in
out
jmp
push
nop
out
jae
pusha
mov
inc
call
cmp
xor
adc
stc
ss
and
inc
shlb
test
fstps
cmp
stos
rorb
stos
ja
push
adc
dec
arpl
call
dec
push
dec
or
sahf
mov
lahf
cmpsl
push
and
test
out
adc
not
loope
and
adc
sub
sbb
enter
mov
dec
xor
push
pop
xor
in
dec
arpl
adc
push
out
mov
sub
cmp
inc
add
sahf
mov
mov
mov
cmp
insl
lea
mov
repz
dec
int
test
pop
mov
fstps
pop
and
mov
inc
sbb
int
seta
add
pop
inc
xchg
jecxz
xchg
out
jmp
jp
dec
pop
xor
pop
mov
leave
mov
shrb
bound
jmp
lret
and
add
add
xor
out
pop
nop
iret
fcmove
xor
cmp
outsl
pusha
jmp
ds
xchg
push
icebp
push
ja
cld
inc
loop
mov
pop
mov
sbb
pushl
aad
out
sbb
in
int3
repz
pop
cmp
cli
ss
andl
pop
pop
mov
and
jl
bound
xchg
sbb
push
scas
movl
lahf
dec
popa
dec
jmp
xchg
cmp
mov
jo
adc
mov
popaw
mov
aaa
and
lcall
dec
mov
inc
pop
insl
scas
ss
out
jle
xor
sbb
adc
out
push
jne
push
xchg
mov
push
leave
outsl
scas
xorl
inc
jg
int
mov
xor
mov
jg
pushf
fmull
mov
xor
push
cmpsb
push
sub
hlt
push
repnz
lret
call
push
ljmp
add
cmp
or
js
mov
inc
lret
mov
mov
xchg
stos
sbb
lods
mov
mov
pop
test
inc
repz
xor
aam
add
test
sti
dec
xor
fwait
or
sbb
in
das
mov
cmp
add
movsl
test
iret
xchg
cmp
xchg
push
sbb
jae
insl
sbb
and
jo
hlt
fistpl
cltd
mov
push
xchg
add
in
push
into
xchg
jmp
ss
inc
adc
cmp
scas
sub
cwtl
insb
cltd
mov
dec
mov
xor
hlt
int3
imul
mov
inc
daa
push
mov
sarl
and
sbb
adc
pop
push
loope
jp
mov
rep
push
addb
mov
and
nop
aad
scas
cmp
add
add
pop
xchg
inc
lods
sbb
fs
pop
cmp
jb
sub
adc
push
mov
inc
clc
mov
push
add
mov
fs
lods
add
xchg
std
cmp
fnstcw
jmp
repz
sub
or
pop
movsbl
inc
movsb
xor
nop
push
js
dec
sbb
lods
xchg
push
and
jae
and
sub
add
fcompl
sti
in
rorl
hlt
mov
adc
xchg
shrl
lret
cmpsb
aaa
add
inc
mov
xchg
add
pop
jmp
imul
inc
stos
mov
bnd
jmp
icebp
mov
pop
jns
aaa
out
mov
or
cs
fidivrl
fcmove
pop
rolb
fsubr
scas
inc
std
cmp
xchg
inc
in
xchg
mov
mov
dec
push
mov
jbe
ss
cmc
and
cmp
push
rol
mov
inc
adc
test
je
jo
movsb
rcll
sbb
sbb
loop
mov
pop
xchg
je
insl
add
cmp
sub
push
imul
cmpb
pop
sub
cwtl
sbb
lret
push
fs
sbb
push
sbb
pusha
mov
mov
sub
pop
cmp
mov
mov
add
mov
or
add
dec
gs
jge
stc
jb
push
lcall
cld
mov
jmp
pop
sub
xlat
movsl
push
test
pop
sbb
mov
les
mov
push
daa
sbb
xor
push
rorb
pop
pop
subl
mov
and
mov
or
inc
cmpsl
push
loope
sub
out
fistpll
js
pop
adc
mov
lods
jns
sbb
pop
jl
aad
call
pusha
in
mov
jg
mov
inc
add
decb
xlat
push
mov
adc
mov
das
xlat
lods
dec
xchg
jge
dec
shrb
dec
fcmovne
inc
call
xchg
or
shrb
cmp
loope
adc
in
rcll
add
inc
add
jb
shrl
jecxz
push
pop
stc
lret
adc
std
xor
scas
mov
add
lret
insl
cmp
loopne
iret
fsts
cmpps
sub
cs
push
and
sub
pop
pusha
mov
jo
fwait
lret
mov
cmpsw
fwait
in
inc
std
sub
sbb
mov
mov
and
insb
out
loopne
sarl
jge
popf
ret
fnstcw
rclb
push
cld
arpl
push
in
addr16
movsb
and
pushf
pushf
iret
shll
mov
iret
lds
inc
dec
push
stos
pop
lods
imul
add
xchg
punpckldq
mov
flds
and
jge
iret
std
test
nop
or
test
into
lret
sahf
jne
popl
addr16
ret
pusha
mov
jo
jo
adc
jnp
cmpsb
push
pop
fisttpl
adc
test
daa
jns
jmp
mov
imul
daa
mov
mov
push
cmp
lock
adc
sub
outsb
push
or
int
inc
ja
rcr
cwtl
mov
inc
aaa
jl
stos
arpl
data16
mov
add
mov
hlt
mov
out
sbb
add
cmpsl
lock
xchg
out
popa
mov
or
mov
mov
and
mov
jo
pushf
xchg
xchg
mov
leave
cmp
push
jge
mov
fsts
push
das
lahf
cs
notb
pop
dec
push
ds
aas
inc
dec
sbb
iret
clc
test
inc
adc
fs
inc
cwtl
popa
xor
scas
xchg
add
nop
imul
scas
aad
xlat
les
pop
or
cmpl
dec
pop
mov
or
icebp
xchg
in
call
repz
jp
jp
dec
pop
jne
xor
mov
dec
movsl
test
push
aam
int
jg
int3
mov
sbb
push
orb
fidivrs
push
repz
sbbb
push
sbb
adc
sub
pusha
xchg
adc
pop
push
cs
mov
dec
push
jo
sbb
jp
out
sahf
shl
aas
outsl
cmpsl
inc
cmpsb
sbb
mov
mov
std
mov
jb
ret
cwtl
rorb
jecxz
sbb
scas
test
shll
aas
inc
mov
push
sbb
inc
dec
jno
xacquire
or
jmp
mov
lods
xchg
cmp
pop
nopl
push
movsb
clc
and
push
mov
xchg
sub
shll
in
or
es
dec
mov
mov
push
test
dec
test
ficoms
xchg
out
mov
outsb
stos
and
inc
adc
aas
or
sahf
or
in
iret
cmpb
les
cmp
inc
ja
xor
xchg
pusha
jp
xchg
loop
jns
pop
mov
inc
adc
bound
fdivr
jb
pusha
imul
scas
push
clc
jae
mov
pop
repnz
scas
push
sbb
dec
ret
pop
jecxz
cli
sub
or
jge
lcall
cmp
and
ret
pop
jl
jecxz
xchg
insb
mov
and
push
xlat
sub
dec
stc
sub
xorb
push
ss
inc
aaa
mov
push
fimull
ljmp
dec
cmp
inc
push
fiaddl
fs
mov
loop
pop
lahf
fisttps
adc
ja
xlat
sub
iret
sub
sbb
je
pushf
negl
jns
lret
movsl
rorl
out
icebp
lea
ljmp
pop
pop
test
ss
xor
adc
mov
pop
pushl
push
bound
mov
jnp
std
pop
ds
jns
and
lods
aaa
clc
imulb
jns
cmp
adc
sahf
lds
inc
xchg
add
pop
lea
add
xor
ljmp
cs
mov
shr
push
mov
or
push
fsubs
test
and
pusha
jb
sti
xchg
and
inc
popa
test
punpcklbw
xchg
pusha
inc
inc
adc
repz
mov
lods
lock
daa
dec
pop
loop
push
flds
fwait
shlb
mov
mov
int3
cmp
shrl
addr16
pop
xchg
jno
xchg
test
push
and
xchg
je
push
outsb
les
out
jne
in
pop
cmp
pop
xchg
outsb
add
push
outsl
sub
cld
xor
movsb
or
push
adc
add
jns
or
scas
push
push
in
jecxz
jp
test
ret
sub
stos
repnz
stc
sbbb
xchg
int3
or
gs
sub
inc
cmc
movsl
ret
jl
mov
cmp
icebp
fdiv
adc
rcll
push
dec
xchg
jg
out
gs
cli
into
inc
xchg
dec
push
dec
incl
pusha
dec
or
out
outsb
test
es
decl
lods
cs
clc
push
mov
aaa
mov
sub
and
xor
idiv
push
sub
fadd
fidivs
xchg
xlat
sbb
add
add
popa
stc
xchg
test
scas
cli
lods
nop
lcall
push
int3
jp
inc
scas
mov
imull
adc
pop
test
jo
jbe
addr16
jo
push
cmp
mov
add
pop
in
gs
mov
lahf
sbb
lods
sbb
xchg
xchg
lods
aad
mov
pop
ds
in
push
push
pop
pop
loop
cmp
out
dec
cmpsb
pop
bound
and
cmp
dec
jne
sub
clc
jbe
scas
sub
out
pop
cmc
xchg
notb
or
and
adc
adc
outsb
xchg
inc
mov
mov
popa
lahf
iret
lcall
icebp
push
jno
mov
add
call
adc
rorb
inc
ljmp
xlat
outsl
clc
pop
inc
adc
cs
stc
mov
mov
mov
aas
ds
adc
mov
imul
or
filds
je
xchg
dec
mov
fwait
jmp
repnz
mov
int3
adc
loop
ja
sarl
insb
push
pop
cmp
insb
xchg
call
test
pusha
fsubl
sbb
xlat
and
lcall
xchg
jnp
andb
xor
xchg
xor
xor
test
icebp
xchg
add
push
aas
cltd
les
mov
arpl
sbb
cmp
dec
cmp
xor
cmp
cvtps2pd
or
sbb
mov
and
in
pushf
pop
in
shll
inc
xor
mov
std
and
lods
sbb
fiadds
test
loop
mov
pop
rep
push
into
addr16
push
jns
mov
add
in
jb
jl
pushaw
push
push
movsb
jge
sbb
sub
sub
mov
cmp
faddp
push
dec
xchg
and
flds
pop
lret
push
push
mov
mov
dec
in
dec
std
add
cmc
cld
cli
imul
xchg
je
cs
jne
adc
xor
add
jmp
cmp
frstor
xorl
cmp
mull
push
sub
adc
inc
and
inc
jns
jp
pop
add
in
imul
mov
xor
hlt
inc
aad
iret
xchg
lret
or
xor
arpl
lods
xchg
pop
add
adc
fldt
mov
adc
jne
push
cmp
jns
mov
inc
scas
xor
lret
inc
sub
or
and
addr16
repz
jmp
mov
shlb
fcmovnb
cmp
orl
mov
push
ret
inc
int
insb
xchg
ljmp
push
fsubrs
cltd
mov
xchg
xchg
shrb
cmp
push
push
mov
notb
inc
data16
add
dec
add
xor
pop
in
xor
fisttpll
push
lret
data16
gs
pusha
sub
push
jp
pop
pmuludq
into
pop
data16
ret
out
jne
not
inc
fdiv
sub
daa
ljmp
call
lods
hlt
and
cmp
cld
sbb
sahf
push
and
cmp
and
jbe
out
push
pop
cmp
sbb
mov
cmp
sub
mov
aas
repz
test
push
mov
cmp
push
mov
repz
fucomi
push
xlat
js
cmp
test
pop
out
addr16
sub
push
in
push
or
cmp
cwtl
ret
jmp
mov
ret
fistpll
pop
enter
and
mov
rcrb
pop
jge
cmpsb
data16
leave
int
test
inc
or
insb
mov
push
popa
sub
xor
stos
jbe
test
jp
sub
dec
mov
pusha
or
pop
stos
add
sub
ficomps
mov
or
sub
outsb
mov
lea
addr16
pop
arpl
fstl
ds
mov
cmp
fsts
into
and
jno
insl
adc
pushl
out
scas
cmpsl
mov
pop
sbb
pop
gs
js
test
push
add
pop
xor
cmp
push
jae
cmp
cmc
or
les
cli
inc
dec
xor
mov
cltd
jg
in
and
push
mov
out
inc
jecxz
or
rorl
push
fsubrl
in
dec
xchg
imul
sahf
xlat
adc
ficomps
cvtpi2ps
xlat
in
ret
add
test
loope
mov
call
mov
hlt
and
repnz
lcall
lret
or
fcmovnu
mov
je
ja
jnp
loopne
stos
scas
mov
sub
imul
mov
in
xchg
cmp
inc
or
les
inc
mov
mov
fdiv
xchg
cld
add
jmp
test
dec
xchg
xchg
cs
jp
enter
push
and
pop
xor
jnp
insl
lahf
cmpb
xchg
lods
cltd
mov
iret
xor
imull
inc
pop
mov
jbe
dec
dec
sbb
inc
dec
pop
daa
sub
cmp
leave
and
and
mov
stc
pop
loope
cltd
hlt
adc
pop
or
and
fildl
xchg
loopne
xor
jnp
paddusw
fmulp
xchg
mov
gs
push
das
sbbb
fildl
mov
aas
scas
outsl
cmp
add
pop
push
sahf
mov
push
push
jle
ret
dec
mov
leave
jno
xor
pop
mov
jno
test
mov
out
jns
cmc
popf
lret
jp
or
cltd
push
insl
push
mov
push
push
cs
mov
arpl
mov
loope
and
add
adc
adc
sahf
or
jb,pt
mov
mov
cmp
setge
mov
push
xor
push
les
in
cltd
inc
or
inc
imul
lret
in
mov
inc
lea
cmp
push
pop
xor
or
xchg
icebp
ss
pop
or
test
cmp
sbb
push
test
pop
aaa
sbb
jp
xchg
call
xchg
push
in
jo
mov
push
fdivs
or
outsl
mov
or
outsb
sub
mov
push
xlat
in
rorb
cmp
mov
roll
mov
dec
gs
push
gs
insb
movsl
sti
add
cmc
ljmp
jo
dec
cltd
pop
dec
mov
stos
inc
pop
mov
test
mov
cmpsl
cltd
or
mov
jp
bound
in
popf
mov
jecxz
or
lods
mov
push
pop
cmp
pop
push
xor
int3
or
int3
push
lods
add
ja
xor
mov
jo
iret
cmp
cmpsb
loopne
xchg
dec
cwtl
imul
loope
pop
andb
or
cwtl
sub
inc
mov
aad
xlat
jl
imul
aad
lcall
in
mov
fwait
inc
inc
xor
into
xchg
cmp
sub
xor
ret
mov
add
mov
sarl
ds
jne
imul
and
cmp
or
push
mov
mov
push
cli
cmc
pop
adc
fadds
push
push
xchg
repnz
xlat
adc
mov
cmp
clc
inc
and
int
ret
sbb
subb
mov
aad
push
mov
sub
mov
test
jne,pn
jnp
pop
mov
inc
cmpl
push
xchg
sahf
xchg
les
cmpsb
dec
into
sbb
or
mov
and
add
lds
pop
xchg
xor
jae
loop
xchg
shrl
sahf
xchg
push
gs
and
lcall
repnz
sahf
xor
pop
cmpsl
or
and
mov
out
adc
adc
aam
xchg
push
faddl
cmpsb
jne
sbb
js
cmp
stos
add
fidivrs
movsl
or
sub
xor
dec
repnz
lods
mov
sub
repz
jno
int3
cmp
inc
jmp
xor
jno
xlat
pop
dec
loopne
or
addr16
adcl
loopne
or
pop
push
sbb
sub
pop
das
pop
je
adc
xchg
or
adc
mov
push
mov
pop
into
add
xchg
pop
ret
pop
cli
dec
xchg
sbb
js
mov
add
fwait
test
lret
push
xchg
dec
push
cmpsl
stos
jno
jno
into
mov
inc
aas
cmp
iret
popl
aaa
int3
xchg
rolb
aaa
rcll
cs
pop
inc
nop
jbe
and
add
and
ret
sub
mov
and
repz
cmp
jge
sti
std
call
sub
xchg
fsubrl
sbb
stos
fimull
fsub
and
and
es
dec
sbb
or
inc
out
incb
les
jg
and
xchg
sbb
sub
dec
inc
movsb
xchg
loopne
insb
repz
jecxz
dec
adc
getsec
xlat
int3
sarl
push
fstps
insb
inc
shlb
in
andb
cmp
imul
sbb
fdivrs
adc
imul
stos
sbb
jb
sbb
and
xchg
dec
adc
icebp
or
movsb
jle
aam
adcl
stos
test
aad
dec
fistps
outsl
fimuls
rcll
pop
jle
sbb
xchg
jns
jg
fidivl
mov
mov
or
ljmp
pop
rcll
mov
dec
push
insl
adc
xchg
loop
sbb
subl
js
jnp
mov
cwtl
dec
fwait
cli
ja
cli
stc
pop
imul
push
jb
pushf
jns
aaa
and
test
and
scas
cli
cmc
adc
push
push
push
inc
pop
pop
inc
inc
cmp
xchg
adc
out
rcr
test
repz
adc
jle
fwait
enter
dec
jge
cltd
adc
out
in
sub
not
hlt
scas
enter
ret
and
enter
data16
jb
aam
pushf
mov
dec
shrl
mov
cmp
lcall
aad
adc
bound
adc
jl
sbb
dec
jo
adc
pop
push
gs
pushf
adc
test
push
jne
xor
fldenv
add
or
iret
lcall
scas
test
ss
push
pop
sbb
jle
imul
and
push
push
and
mov
or
cmc
imul
dec
pop
sub
sub
std
mov
xchg
lods
or
lret
mov
dec
xlat
jle
sbbb
scas
sti
adc
arpl
push
lcall
cwtl
xchg
mov
pop
pop
cmpb
fstpl
lock
push
shll
mov
repnz
pop
sbb
sub
jmp
adc
mov
lcall
mov
adc
jmp
and
mov
sahf
dec
xor
inc
vpcmpeqd
pop
lea
sub
jmp
subl
inc
stc
std
inc
lods
shrl
test
cli
aas
mov
sbb
jno
add
mov
imul
cmp
aas
fdivs
pusha
daa
push
mov
jle
dec
or
mov
jle
inc
rorb
xchg
cltd
mov
lock
test
or
fdivs
mov
mov
mov
repz
mov
mov
and
mov
cmpsb
mov
fcoms
cmpsl
insl
xor
daa
mov
mov
jecxz
ret
lcall
pop
xor
and
mov
or
add
out
or
or
jl
aas
repnz
fistl
mov
cmp
inc
push
inc
enter
int3
jp
ljmp
adc
les
fidivs
cmp
jne
mov
pop
fisttpll
xor
inc
js
and
enter
fsts
pop
push
xchg
hlt
dec
mov
out
sub
scas
fs
cmp
mov
mov
test
sub
stos
jae
lret
pop
aaa
xchg
cmp
xchg
lock
insl
jge
inc
orl
loope
jecxz
push
push
lea
insl
out
jne
xchg
inc
mov
xor
mov
lret
mov
sbb
subl
scas
push
filds
xchg
repnz
std
fcmove
shlb
jg
push
sub
pop
dec
mov
jno
xchg
pop
daa
push
imul
lret
sbb
dec
push
in
adcl
icebp
mov
in
pusha
int
scas
popf
sub
sbb
testl
cmp
push
mov
sbb
leave
gs
addr16
cmp
int
dec
test
cmc
mov
movsl
sahf
mov
pop
fistpll
and
pop
in
je
lret
push
push
mov
cmp
pop
and
add
push
push
add
fcmovbe
je
test
or
fildll
xchg
adc
dec
jns
or
in
and
cltd
pop
adc
lahf
mov
movsb
pop
push
add
sti
sub
xor
push
sbb
push
fstl
adc
rorb
push
aaa
jne
xchg
lcall
stos
call
insl
mov
jb
sub
ds
aaa
mov
push
mov
adcl
rcrb
and
or
sti
pop
cmpb
xor
mov
cltd
jnp
das
push
pushf
pop
pop
fwait
push
and
push
and
sahf
andl
rorb
xor
cmpsl
jle
or
dec
mov
add
sbb
andl
fdivs
in
dec
pop
sarb
and
xchg
fisubl
pop
outsb
inc
ja
or
ja
sbb
and
popl
sarl
call
data16
jecxz
cmp
cmp
pusha
jns
add
into
imul
dec
push
adc
dec
jbe
addr16
xchg
in
lea
loope
jae
scas
dec
xlat
dec
ss
jg
xor
insb
push
shr
pop
push
data16
add
xchg
in
jmp
daa
cmpsl
mov
fsubl
je
dec
xchg
in
cwtl
les
inc
outsb
adc
jmp
mov
mov
movsl
push
xor
addr16
adc
inc
mov
icebp
adc
inc
push
out
dec
pop
or
jge
lret
xchg
clc
adc
add
xlat
pop
adc
fwait
jno
stos
and
mov
lds
xrelease
mov
cmp
test
mov
fs
sub
fcompl
ds
push
sbb
aaa
das
idivb
shl
cmp
cs
mov
mov
xchg
mov
jne
push
add
aas
lahf
sbb
cmpl
xor
pop
sbb
sbb
hlt
xor
mov
cli
ja
or
cs
mov
iret
push
bnd
inc
mov
jns
xchg
popf
dec
push
test
fs
stos
dec
sbb
mov
loopne
push
enter
jo
aaa
lcall
xchg
ja
add
lret
mov
cmpb
mov
adc
in
push
jmp
and
fsubrp
add
lods
test
lea
mov
pop
and
aaa
fldlg2
pop
shl
loopne
into
enter
inc
rcrb
ja
insb
mov
popf
xor
je
add
leave
aaa
inc
sub
imul
outsb
mov
into
mov
xchg
rorl
das
lret
mov
int
daa
in
mov
out
adc
lret
cmc
mov
push
pop
adc
xchg
xor
xor
pop
pop
outsl
std
into
scas
aad
sbb
dec
jns
xchg
int
pop
mov
adc
dec
aam
mov
in
mov
mov
call
cmpsl
rorb
sub
jl
stc
mov
xchg
xor
popf
je
jge
sti
inc
je
jae
ret
int3
shrb
push
inc
leave
fimull
xchg
cmp
xor
jo
into
in
sub
pop
inc
jbe
filds
sub
sbb
push
dec
lret
es
and
idiv
iret
lret
xchg
xorw
or
jl
aas
call
add
pop
mov
fsubr
dec
movsb
sub
je
mov
pop
jge
ret
fnsave
or
dec
sub
aaa
push
adc
mov
push
dec
inc
sub
jo
mov
fsubl
and
push
sub
xor
aas
scas
mov
adc
movsl
dec
stc
dec
clc
adc
adc
lods
jae
xchg
mov
adc
cs
mov
dec
cmpsl
sub
cmp
sbb
cmpb
adc
pop
popa
jmp
sbb
xor
add
push
adc
mov
cwtl
ret
adc
lret
pop
subb
push
dec
repnz
outsl
pop
pop
xor
lcall
inc
out
rcl
add
lcall
fbstp
jecxz
fwait
xchg
add
mov
sub
xchg
jbe
cmp
sahf
mov
repz
adc
xor
fcoms
std
sub
pop
dec
push
sahf
test
sub
lods
xchg
icebp
cmp
lods
vpbroadcastmb2q
mov
jg
xor
push
pop
push
scas
into
outsl
add
jle
add
dec
sarl
dec
arpl
mov
in
ds
repz
jne
test
cmp
sbb
and
movsb
adc
inc
test
mov
jno
cli
push
sub
push
cmp
shlb
inc
cmpsb
sub
and
mov
adc
dec
mov
xchg
lods
inc
jnp
and
xor
pop
stc
ficompl
hlt
inc
test
ror
in
xchg
sub
fcomps
dec
push
sbb
ss
xchg
xchg
jo
mov
mov
cwtl
sub
in
or
test
jmp
out
mov
ljmp
les
or
xchg
sti
jmp
lds
aam
fcmove
cmp
daa
out
stos
das
mov
aaa
mov
jp
xor
inc
fcoms
mov
xchg
lret
int3
xor
sbb
push
out
lods
loopne
push
ret
dec
adc
fldl
jne
mov
stos
lret
outsl
pop
stc
movsl
dec
aad
shll
jo
jmp
subb
nop
js
in
testw
or
imulb
jle
add
add
xchg
ja
sbb
int
push
pop
incb
xchg
xlat
mov
add
pop
or
int3
in
xchg
aad
cld
pushf
jmp
xlat
xchg
and
fdiv
and
mov
in
or
divb
push
movsb
cmp
mov
jae
push
leave
dec
add
add
call
leave
mov
jp
mov
mov
frstor
dec
ljmp
xor
andl
bound
cmpsb
inc
insb
test
or
mov
leave
add
inc
adc
mov
xor
mov
push
add
add
loop
or
nop
imul
jae
xchg
fcompl
sarl
lea
ljmp
pop
clc
cld
jl
xchg
inc
inc
icebp
jmp
repnz
sbb
xor
jl
jae
mov
xchg
sbb
inc
mov
mov
mov
or
cltd
xchg
andl
xor
push
pop
int3
jne
gs
test
mov
or
je
scas
in
pushf
jno
push
scas
adc
cmp
in
or
jecxz
ljmp
lret
xchg
inc
jae
push
jb
push
bound
mov
push
and
sbb
pop
repz
or
xor
mov
mov
add
pop
popa
test
flds
in
lahf
icebp
dec
cmc
pop
fsubs
pop
in
lea
test
push
int3
push
ja
push
pop
movsb
sahf
or
pop
adc
aas
mov
imul
mov
sbb
cmc
das
mov
jg
dec
repz
sub
imul
es
sbb
xchg
ret
pop
mov
imul
lods
add
jbe
std
jecxz
mov
cli
lds
imul
rcrb
pusha
dec
loopne
inc
xchg
lahf
out
cs
add
call
adc
or
or
imul
push
dec
mov
cltd
loop
ljmp
and
arpl
decb
out
clc
test
out
cld
int
dec
xchg
pop
daa
xchg
loop
ds
mov
cld
inc
dec
mov
or
dec
pushf
daa
adc
xor
sbb
mov
imul
rorb
scas
mov
loopne
mov
cwtl
insl
sbb
xor
or
rcrb
push
pop
mov
aaa
outsl
in
dec
aaa
xor
inc
pop
daa
xchg
sub
dec
test
dec
dec
sbb
gs
je
gs
pop
popa
test
mov
stc
mov
std
and
mov
sbb
sbb
adc
mov
outsl
hlt
mov
add
lock
add
addr16
xchg
and
mov
out
test
jmp
rcl
outsb
or
fcmovnu
mov
fldl
xor
pop
addr16
sbb
bound
inc
fldt
cs
or
loop
xchg
jge
lock
cmpsl
fs
in
int3
jp
and
movsb
jb
jle
outsl
xor
out
mov
fstps
aam
out
ljmp
ret
hlt
inc
and
mov
movsb
dec
jno
pop
push
sbb
outsb
or
xlat
insb
push
jnp
xchg
or
orl
cmp
popf
push
sbb
add
ds
add
cmpsl
fcoms
lret
push
jl
cmp
xor
mov
mov
aam
cli
into
lea
lret
cltd
mov
shr
adc
popa
fcmovb
adc
push
pushf
cmp
xchg
in
jae
or
lret
lahf
push
push
xlat
mov
cmp
jno
test
xor
add
xor
clc
js
adc
pop
mov
push
lock
mov
fdivp
rcrl
cmpsb
xchg
test
enter
pop
fiaddl
out
add
xlat
out
lds
jle
loopne
int
jecxz
dec
add
lods
inc
arpl
jno
mov
ret
call
stc
pop
out
sub
ja
jae
test
lret
adc
hlt
mov
repz
add
lahf
add
mov
rolb
lea
loop
mov
sbb
jmp
inc
test
jmp
dec
pop
adc
lods
push
inc
adc
es
test
jne
ret
ss
decl
add
dec
sahf
outsl
add
aam
sbb
pop
cmp
adc
aas
pop
call
xchg
shrl
inc
xchg
adc
hlt
xorl
pop
dec
inc
je
mov
out
jl
insl
pop
mov
or
out
movsl
dec
aad
popa
jo
push
cmp
push
dec
jo
pusha
mov
jnp
sbb
xor
push
dec
mov
out
inc
clc
push
sbb
sub
fisttpl
rol
mov
lret
mov
sbb
xchg
stc
scas
arpl
outsb
sbb
dec
jbe
cwtl
cmc
sahf
sbb
aad
pop
push
pop
sbb
pop
mov
pop
sti
xlat
int3
pop
dec
lods
jl
pop
lcall
or
fdivs
jecxz
sbb
mov
sbbl
cmp
cli
add
jp
mov
add
xor
add
insb
movsl
push
dec
add
lock
jnp
jno
call
dec
loop
ljmp
pusha
push
cltd
cmc
adc
push
ror
cmpl
xor
test
and
shl
dec
pop
hlt
cmpsl
push
push
cmp
cli
push
add
pop
daa
pop
aas
mov
xchg
cwtl
in
cld
in
and
mov
mov
pop
mov
rcrb
mov
or
push
add
and
out
sarb
push
repz
xor
pop
xchg
enter
fwait
into
sub
adcb
in
pop
pop
sti
or
inc
outsb
xchg
iret
xor
mov
mov
lahf
into
movsb
sarb
or
mov
inc
jmp
mov
pop
jae
push
mov
jge
or
cli
push
and
mov
inc
mov
fdiv
pushf
subb
jno
adc
test
leave
imul
enter
dec
movsl
push
daa
jle
sbb
lret
enter
fcmove
push
into
mov
shll
hlt
dec
or
mov
xchg
iret
sbb
loopne
cmp
and
je
pushf
cmp
stos
jb
pusha
cmpsl
dec
mov
pop
xor
movsb
cmc
fidivs
push
xchg
scas
mov
mov
inc
std
leave
sti
testb
push
jmp
mov
fmul
jae
pop
nopl
mov
add
xchg
jb
adc
push
inc
xchg
fistps
mov
add
or
fwait
ljmp
lods
adc
cwtl
pop
imul
mov
jmp
xlat
xchg
outsb
dec
xor
test
or
adc
inc
lods
cmpsb
out
rcll
jns
enter
fdivr
push
mov
ja
sub
push
xor
lcall
out
cs
cltd
lret
mov
jecxz
test
inc
mov
lcall
or
push
out
movsb
int3
push
jmp
add
push
movsb
and
test
or
pop
ss
loope,pn
jae
xor
xchg
add
add
add
mov
and
xlat
ds
cmp
inc
inc
push
or
movsb
les
mov
mov
sbb
jo
mov
aam
aas
inc
mov
cmp
in
sub
jns
hlt
in
push
sub
aam
jae
movsb
pop
loope
aaa
xchg
jge
mov
mov
and
mov
xlat
jg
inc
sub
shlb
xor
sub
and
arpl
dec
jo
xchg
pop
cmp
inc
xchg
inc
ja
push
mov
lea
fcom
push
pop
iret
push
xchg
push
cmp
push
xor
hlt
arpl
fldenv
dec
adc
dec
add
cmpsl
mov
jns
sbb
shl
stos
enter
and
mov
xchg
mov
sub
test
mov
clc
clc
popf
adc
push
fwait
pop
xchg
sbb
pop
dec
dec
aas
imul
dec
push
sbb
int3
jl
adc
outsl
push
jae
out
stc
jnp
xor
subl
insb
fmul
mov
fisubl
or
arpl
testl
jecxz
cmpb
sub
mov
xor
dec
push
add
push
insl
adc
mov
out
pop
sbb
push
movb
scas
sbb
sbb
clc
cmp
push
xchg
mov
mov
cmpsl
pop
scas
inc
push
jl
mov
es
dec
jg
and
cli
cmc
xchg
mov
jmp
clc
pop
sbb
adc
xor
sbb
lret
pop
pop
cmpsb
test
push
pop
or
sbb
push
cs
add
adc
lret
pop
daa
ret
push
cmc
mov
push
lock
mov
mov
loopne
or
fdivrl
mov
jno
push
in
push
xor
xchg
xchg
mov
adc
mov
mov
fists
mov
or
int3
clc
insl
fidivs
loope
mov
xchg
pop
jmp
in
lods
mov
jns
jge
mov
xchg
xor
adc
sub
pop
mov
jbe
sub
dec
mov
jbe
pusha
into
or
repz
inc
mov
imul
jmp
les
mov
add
push
fwait
dec
aam
shrb
push
out
imul
aad
stc
out
cmp
movsb
push
in
movsl
jl
mov
and
cltd
jnp
loop
aam
jg
and
xor
arpl
xlat
roll
xchg
int3
mov
into
dec
cwtl
add
dec
inc
sbb
and
out
mov
lods
sub
mov
and
sub
insb
xlat
sbb
push
lea
sbb
mov
cli
test
sti
jg
cwtl
ret
hlt
rcll
push
loope
gs
fsubrl
cltd
repnz
lret
or
mov
mov
xor
mov
ss
cmp
stos
xor
enter
ja
inc
lds
xchg
push
mov
push
lahf
mov
out
movsl
gs
cwtl
lret
mov
xchg
scas
testl
testl
dec
fadds
mov
cmpl
popa
fcmovnbe
enter
push
popf
fcomps
adcb
insl
inc
ljmp
stos
cmp
cli
jo
mov
push
roll
dec
fs
ds
test
adc
sbb
xor
sub
xchg
push
xor
dec
jnp
sahf
cmp
loop
push
iret
rsm
pop
addr16
add
mov
adc
ds
xchg
push
and
dec
jmp
inc
pop
ljmp
loopne
push
or
adc
or
js
pusha
push
mov
sbb
mov
cmpsb
jnp
movsb
clc
aad
push
xor
dec
repz
fiadds
in
xor
outsb
xor
dec
stc
push
xchg
jecxz
push
in
mov
and
dec
inc
cmp
inc
roll
bound
dec
sub
and
enter
insl
xchg
cld
add
push
mov
daa
xor
jbe
adc
ljmp
loop
pop
mov
stos
and
je
xchg
sub
data16
xchg
loope
or
popa
adc
push
test
sbb
outsl
push
rcr
mov
enter
lock
mov
dec
bswap
movsl
add
rclb
xor
rol
inc
jmp
stos
sub
xor
andl
sub
xchg
mov
jne
lods
loop
outsl
inc
pushf
scas
inc
in
daa
mov
pushf
lret
sbb
in
fnstsw
cld
dec
lds
and
imul
xor
lahf
lds
lret
or
or
in
cmpsl
mov
insb
fnsave
adc
mov
and
cmova
bound
sbb
sub
loop
dec
xchg
jb
test
lods
mov
jae
sbb
xor
inc
js
sbb
sbbb
mov
cmp
ds
jecxz
mov
xor
clc
mov
testl
lcall
sub
jge
js
jne
sub
mov
or
mov
jecxz
cmpsl
dec
sub
inc
push
mov
mov
shl
rcrb
sub
xchg
inc
in
out
sbb
inc
or
cmp
gs
add
xchg
pushl
cmc
jno
mov
cmp
pop
inc
xor
push
out
jb
rorl
pop
mov
add
mov
jp
ret
or
das
ficompl
dec
add
pop
push
inc
add
mov
lret
fidivs
shlb
cmp
test
cmp
xchg
test
iret
rcrb
rcll
inc
fs
std
mov
data16
dec
xor
lock
xchg
jl
pop
jno
push
fs
rcll
outsb
fcmovne
or
push
outsl
push
popf
in
dec
and
mov
adc
or
xchg
insb
adc
cmpsl
jno
dec
int
mov
add
push
jb
ds
dec
mov
push
jo
sbb
cmp
mov
loop
mov
sub
jge
push
orb
pop
xor
fldcw
add
int3
inc
push
sbb
test
sbb
rcrl
imul
scas
add
pusha
mov
add
std
nop
cmc
gs
int3
ljmp
sbb
push
xor
fildl
loopne
rclb
mov
mov
fwait
mov
mov
sub
les
ljmp
pop
stos
mov
push
xor
je
popf
rcrb
mov
scas
lret
and
adc
adc
lea
cld
or
mov
dec
xchg
gs
jmp
sahf
lcall
nop
cmpsl
cmp
cmpb
scas
xor
inc
xchg
repnz
int
pop
xchg
pushf
xor
jno
ficoml
mov
subb
in
inc
loope
jns
outsb
call
jno
bound
sub
leave
hlt
push
mov
out
mov
cmpsb
stc
sbb
outsl
lods
push
movsl
push
fmuls
xchg
test
in
lahf
mov
outsb
and
shl
ljmp
push
pop
jecxz
jae
sub
fucomip
rorb
push
fidivrl
ror
fbstp
je
jne
or
inc
lods
idivl
fwait
sahf
pop
int3
add
sub
stos
addb
lcall
sar
inc
aaa
pop
inc
std
jbe
int
shrl
outsb
push
sbb
inc
insb
outsl
and
dec
js
mov
rcll
out
pop
pop
movsb
adc
aas
bound
xor
sub
cmc
xchg
cmovge
sbb
pop
lahf
sub
xchg
test
insl
lock
cmp
lock
pmaxsw
push
orl
push
dec
popa
ljmp
rclb
cli
inc
imul
cli
out
or
jb
je
pop
push
adc
cmp
leave
pop
mov
jno
and
jb
lea
stc
dec
popf
ds
insl
aaa
aas
dec
popa
jl
sbb
mov
xchg
aas
pop
mov
or
adc
mov
mov
adc
push
out
cmp
inc
jne
pop
xchg
aas
mov
add
das
sbb
lea
imulb
and
in
stos
imul
push
sub
mov
ds
test
fldl
xor
in
jns
fs
into
sti
sub
push
mov
or
aad
movsl
xchg
ret
pop
mov
pop
cmc
in
mov
mov
push
pop
imul
enter
mov
inc
cwtl
sbb
std
je
sahf
jl
leave
idiv
jns
leave
and
jge
cltd
mov
mov
ja
out
lods
outsl
sub
data16
stos
dec
cmpb
sub
mov
dec
pop
iret
adc
mull
iret
faddl
mov
gs
cltd
out
int
andb
adc
jmp
sbb
mov
sub
mov
jns
or
jmp
pop
push
mov
pop
mov
aas
or
lret
inc
mov
lcall
fsubrp
aad
stos
daa
in
rolb
inc
shlb
clc
fdivr
idivb
xor
xchg
fidivrs
out
les
push
mov
enter
sbb
xor
int
add
rcll
sub
arpl
push
loopne
ljmp
mov
push
int
rcrl
lcall
arpl
or
dec
rcrb
mov
push
jns
adc
out
frstor
fucomi
loop
jnp
adc
incl
sub
fistpll
xor
fbld
pop
pop
jg
stos
dec
jecxz
jg
repnz
pop
outsb
push
sub
stos
mov
xor
dec
dec
xchg
pop
mov
insl
push
in
push
fiaddl
scas
shrl
or
out
mov
and
loope
add
and
mov
push
jnp
sub
adc
pushf
test
lods
inc
ljmp
xor
jl
adc
int3
mov
sbb
sahf
push
and
xchg
out
and
pop
jo
pop
cmpsb
cmp
test
jns
mov
sti
jmp
xchg
add
xor
jns
cmpsb
js
push
rorl
shrb
cmp
bound
enter
or
arpl
or
jle
jb
dec
push
mov
sub
nop
or
cmp
insl
xchg
cmp
inc
or
xor
push
stc
jno
and
addr16
adc
psrad
pushf
ss
repz
lods
pop
or
lds
jne
inc
pop
fildll
sbb
or
ficoml
sub
dec
das
int3
xchg
dec
pop
daa
push
push
xchg
pop
pop
test
cmc
nop
jae
sbb
cmp
mov
rolb
sub
popf
je
ljmp
out
popf
xchg
inc
cmp
pop
popa
imull
xor
sbb
mov
scas
movsl
dec
sub
jle
ror
push
adc
inc
fwait
adc
es
dec
decb
sub
jns
mov
shl
gs
lcall
das
cmpsb
sub
inc
ret
or
push
out
push
popf
inc
xchg
ljmp
loopne
testb
jb
mov
mov
xchg
hlt
push
les
push
sbb
lods
jns
push
jp
shr
add
inc
inc
add
push
cli
add
cmpsb
loop
fdivl
push
cmp
or
clc
pcmpeqd
int
xorl
push
pop
sub
xchg
push
mov
mov
add
out
mov
out
mov
xor
push
mov
inc
push
mov
jb
sub
in
shll
mov
mov
pushf
inc
or
mov
scas
jecxz
cmp
sub
xchg
pop
and
push
inc
addl
inc
adc
out
xor
adc
cmc
dec
call
test
ss
add
ds
pop
xlat
fcmovnu
sbb
or
fists
neg
sub
arpl
stc
push
jl
xor
xor
testb
sub
pop
dec
scas
cmp
pop
test
out
lds
shlb
fsubrl
in
idivl
mov
lea
cltd
sbb
ret
inc
xor
and
lret
and
shll
fldt
jno
fdivrl
mov
pop
cltd
dec
repnz
add
out
inc
icebp
je
push
dec
push
fs
cmp
mov
xrelease
lret
pop
imul
popf
jle
jne
sbb
xchg
push
fs
push
rcrb
mov
mov
loopne
sub
loope
lods
cltd
cltd
test
clc
imul
add
push
add
shll
xchg
dec
sbb
scas
lret
in
out
shl
test
lods
or
test
pop
push
mov
hlt
notl
push
iret
jmp
xchg
dec
std
pop
setbe
bound
jmp
insl
xorb
scas
je
sbb
mov
mov
mov
mov
negb
and
shlb
scas
sahf
psubq
mov
push
dec
mov
mov
cmpsb
mov
adc
int3
pop
sub
sahf
pop
pop
jae
xchg
imul
out
cmp
call
fcomps
notl
lret
movsl
scas
sub
lret
jle
daa
sbb
jns
insb
sub
or
cmp
pop
push
cwtl
loop
mov
lahf
repz
popl
xchg
mov
das
sbb
pop
mov
pop
mov
out
mov
sub
xchg
int3
out
xchg
sbb
in
add
add
mov
lea
out
sub
mov
and
loop
test
insl
imul
cmp
in
jo
cmp
test
and
mov
shr
lds
stos
jns
sbb
fwait
lods
pop
push
arpl
push
inc
inc
inc
cmpsl
loop
push
dec
xorl
repnz
and
rcr
call
enter
sbb
addl
push
mov
lds
xor
sbb
jb
mov
scas
or
dec
cmp
decb
aad
imulb
sub
sarb
mov
popa
aam
mov
sbb
ja
ldmxcsr
enter
lret
and
ret
add
lods
mov
adc
inc
push
fdivs
push
ljmp
pop
cli
xchg
pop
call
push
push
cmp
leave
push
cmp
into
popf
push
jbe
loope
aas
xchg
cs
daa
sbb
insb
mov
jle
scas
aam
test
imul
mov
pop
sub
inc
pusha
adc
dec
cmp
sbb
jb
xchg
or
fdivs
xchg
pop
idiv
jg
out
scas
or
and
inc
sbb
fisubrs
cwtl
push
inc
sub
dec
mov
dec
imul
cltd
inc
int
cli
adc
ret
push
cmp
stc
sub
push
mov
pop
fs
push
into
jmp
les
mov
fxch
pushl
lcall
cli
mov
dec
mov
adc
jno,pt
das
shll
repnz
scas
push
pop
inc
inc
gs
push
cmp
mov
cmp
test
pop
aam
xor
test
jo
pop
cmp
jmp
xchg
or
mov
mov
push
mov
scas
jmp
repnz
xchg
ficoms
pop
sub
or
xor
pop
out
call
push
clc
push
sbbl
mov
ds
dec
cld
cmp
js
popf
pushf
in
jle
mov
pop
cmp
xchg
icebp
pop
cmc
ret
psubw
cmc
aad
and
test
mov
arpl
sbb
clc
popa
sbb
je
shlb
stos
out
and
push
jge
repnz
adcl
mov
inc
mov
adc
inc
fst
arpl
sbb
push
ror
icebp
jle
test
push
and
out
and
adc
enter
pop
nop
sub
mov
mov
dec
ds
cmp
adc
inc
mov
jg
mov
sahf
adc
lds
mov
pop
xchg
push
inc
adc
rcrl
loopne
xchg
movsl
xor
pop
arpl
xchg
mov
mov
mov
dec
pop
fcmovnu
push
mov
mov
jge
bound
or
movsl
dec
jg
jmp
ret
and
xor
push
push
cltd
sub
movl
dec
xlat
xor
movsb
lds
outsb
test
mov
pop
push
outsb
xor
mov
add
cli
fdivrl
mov
xchg
imul
shlb
sbb
mov
fcmovnu
into
mov
inc
jae
jmp
cmc
adc
mov
je
in
mov
ljmp
out
pop
adc
push
test
xchg
in
lock
xlat
push
ja
into
negl
dec
mov
mov
sbb
pop
jbe
pop
push
xchg
pop
repz
fstl
out
cmp
lods
mov
mov
push
cli
dec
or
push
arpl
loop
je
cli
daa
mov
scas
int3
mov
test
out
fs
call
adc
clc
test
repz
rcl
inc
in
scas
and
popf
dec
adc
and
pop
icebp
shlb
jnp
mov
sbb
arpl
fisttpl
jl
addb
jmp
fnstenv
inc
lods
inc
inc
mov
pop
add
mov
inc
add
jge
sti
sub
loopne
nop
or
scas
and
or
and
rcr
mov
push
lods
or
mov
adc
repnz
icebp
jne
mov
xchg
pop
es
xchg
cmp
mov
and
shrb
push
pop
and
cmp
cmp
mov
push
dec
stc
sbb
jg
pop
test
push
popf
push
mov
ds
lock
ljmp
xchg
mov
gs
ret
mov
cmc
dec
stos
les
sub
hlt
aad
cmp
or
imul
xchg
lods
outsl
push
insl
mov
cmp
sbb
cwtl
outsl
mov
es
dec
fmull
mov
movsl
in
popa
fstpl
lret
sahf
lock
jae
movsb
push
js
imul
jp
mov
dec
jno
jg
ret
lods
sbb
xchg
fwait
jge
mov
out
mov
movsl
pop
pop
cmp
adc
push
xchg
out
gs
mov
clc
les
push
mov
insb
iret
cmp
push
or
aam
test
jnp
into
jnp
cmc
add
dec
adc
pop
fwait
ret
loopne
lods
lea
mov
stc
mov
icebp
push
mov
cli
inc
das
dec
icebp
into
test
ja
int3
jnp
jmp
adcl
test
sbb
in
xor
aaa
dec
aas
mov
add
push
dec
fisubrs
shl
imul
rol
rolb
popa
sub
mov
pop
and
nop
lock
mov
xchg
leave
les
or
pop
mov
add
cltd
outsl
mov
pop
arpl
scas
je
rolb
jecxz
lret
mov
dec
cmp
jne
or
sbb
sbb
ljmp
xchg
push
out
je
push
jae
cmp
insb
dec
idivl
xchg
ljmp
test
push
mov
pop
mov
loop
inc
jbe
and
repnz
adc
rolb
insb
or
sbb
jae,pn
fdivrl
xchg
xchg
cwtl
or
xchg
test
push
adc
mov
popf
push
inc
lods
fistps
mov
xchg
insb
pushf
and
and
stc
add
cltd
test
xor
mov
es
and
pop
pop
outsb
cwtl
ja
fists
mov
or
fnsave
ret
xor
fldt
jae
repnz
push
in
lret
iret
shll
inc
pop
test
xor
testl
mov
push
loope
mov
or
dec
ret
call
into
push
repz
or
push
push
int3
div
inc
pop
negl
dec
push
mov
or
ja
mov
mov
outsl
xor
or
scas
or
mov
mov
stc
push
push
fidivrs
and
cld
jne
fistl
mov
mov
rorb
push
leave
test
std
ja
and
dec
fildll
lcall
outsl
jo,pt
mov
notl
mov
imul
lods
std
cli
sbb
aad
scas
pusha
dec
mov
aaa
add
xchg
fdivl
addr16
fdivrl
or
xchg
outsb
dec
mov
out
pusha
pusha
or
das
leave
lds
pop
cmpsl
lea
and
lods
leave
mov
pop
inc
fistl
or
test
dec
inc
les
inc
adc
push
aad
popa
mov
pop
dec
mov
scas
pusha
xchg
cs
xchg
push
scas
push
sahf
inc
xor
ss
das
and
inc
mov
popf
xchg
or
cmp
pop
ja
adc
pop
or
jge
sar
fidivrl
inc
and
imul
in
and
shrl
jecxz
and
push
mov
test
addr16
dec
jo
iret
pop
les
lods
sti
and
pop
rorb
sub
adcb
sub
pop
pop
test
fwait
mov
xchg
pop
xchg
ds
cmp
sbb
orb
inc
scas
shrl
push
adc
imul
jo
nop
test
pop
test
loop
sbb
mov
insl
aad
leave
ja
jnp
cmp
inc
or
xlat
lcall
cmp
daa
add
jns
mov
mov
xor
inc
call
rclb
push
mov
mov
pop
cmp
in
inc
mov
insb
inc
mov
lock
xor
add
enter
mov
arpl
push
cli
rolb
jbe
sub
lret
mov
enter
in
dec
and
lret
xor
fadds
mov
jo
sub
or
mov
aaa
data16
roll
cmpsl
xor
xchg
and
movsb
repz
insb
mov
push
add
insb
mov
pop
xor
sbb
out
mov
jp
loope
ret
loopne
pop
clc
gs
movswl
bound
aas
jo
sarl
in
or
jns
notl
stos
mov
lret
sbbb
inc
ja
mov
inc
shlb
fstpl
shrl
xchg
arpl
stos
mov
sub
shlb
mov
dec
jecxz,pt
dec
dec
mov
enter
jns
bnd
xor
xchg
lret
ljmp
insl
fcomip
lret
push
shl
shrl
dec
scas
loopne
jp
jge
adc
ficomps
cmp
adc
ss
lcall
dec
test
and
ss
inc
and
repz
js
out
and
mov
aas
aad
xchg
jg
xchg
cmpsl
std
test
add
repz
sar
and
adc
dec
pop
xor
jp
loop
cmp
mov
pop
pop
frstor
add
ret
sti
jmp
cmpsl
pop
cmp
push
mov
mov
mov
or
jnp,pt
mov
rcrb
ret
out
lods
cmp
adc
xor
notb
pop
sub
dec
cmp
inc
xchg
movsb
aam
notb
cld
and
cmp
and
push
lods
add
scas
aam
jp
jmp
shlb
aam
loope
test
cmp
dec
into
leave
int
dec
xchg
loopne
sbb
dec
lret
mov
mov
inc
scas
call
cwtl
enter
outsl
mov
dec
and
icebp
sub
loope
fwait
and
ss
incl
mov
add
in
aad
add
faddl
insb
inc
sub
ss
mov
cwtl
insl
jl
jl,pn
std
and
jmp
add
push
clc
jne
or
inc
ret
in
loope
shrl
or
jge
imul
in
and
push
and
div
in
lea
out
jp
mov
jne
stos
in
push
inc
sub
mov
push
in
cmc
out
sub
in
lods
or
adc
imul
dec
mov
shrl
inc
inc
push
jo
stos
repnz
scas
cmc
cli
repnz
push
scas
dec
mov
imul
subb
popf
test
jae
mov
icebp
insb
cmp
out
pop
adc
mov
data16
xor
inc
pop
in
mov
mov
es
hlt
ret
sti
mull
xchg
icebp
iret
mull
dec
mov
xchg
jge
sbb
cmp
jl
cmpb
jge
rorl
lret
cli
push
cmp
hlt
mov
xchg
adc
call
mov
mov
mov
out
push
sub
jmp
or
out
iret
push
cwtl
scas
inc
mov
cld
movsl
ret
aaa
mov
out
test
jl
out
mull
xor
lods
lods
test
jae
ret
leave
int
sbb
and
cmpsl
mov
sbb
bound
fsubp
ds
mov
jle
popa
push
jecxz
cmp
call
add
push
add
loop
test
dec
xor
shlb
sbb
sbb
mov
inc
rcll
push
les
mov
mov
pop
mov
orl
ret
push
push
pop
mov
fmul
or
push
out
jae
sbb
stos
adc
fwait
mov
mov
sub
mov
stos
jmp
pop
sbb
pop
push
xchg
xchg
cmpsb
jle
lret
pop
pop
pushf
xchg
rcll
daa
adc
or
aam
mov
jl
sar
xchg
adc
les
mov
scas
test
pushf
push
mov
je
fnstsw
int3
loop,pt
pop
xor
adcb
push
into
flds
lret
pop
jb
arpl
in
mov
xchg
add
mov
and
cmp
mov
cmp
in
test
ss
and
int
and
inc
es
pop
push
fidivrl
or
inc
mov
push
icebp
push
jecxz
pop
gs
stos
mov
or
les
ret
popa
mov
scas
aad
sub
cmpsb
push
test
cmp
or
cld
stos
push
in
mov
inc
add
ret
imul
lret
sbb
test
push
pop
and
pop
and
inc
jbe
js
add
adcl
dec
add
xor
int3
mov
mov
cmc
or
fisttpll
int
roll
bound
xor
inc
xchg
xchg
out
xchg
outsb
mov
sub
push
mov
adc
sbb
xchg
inc
cmp
adc
add
jge
mov
push
xchg
mov
xchg
inc
and
leave
fists
add
jl
sbb
test
sbb
ja
pop
pop
fmulp
xor
push
cltd
cwtl
sbb
cmpsl
push
pushf
mov
jle
mov
adc
push
adc
sub
cld
lcall
imul
dec
add
inc
sub
aad
xchg
shl
sbb
pop
or
arpl
psrld
out
sbb
call
sbbl
xor
aas
das
mov
dec
fisubs
daa
dec
gs
std
adc
pop
data16
dec
pop
pop
sbb
or
int
sarl
pop
fisubrl
test
pushf
add
or
in
call
lahf
push
xchg
mov
mov
shrb
jle
mov
outsl
movl
dec
cs
aam
js
lea
into
fimuls
push
and
cmp
fstpl
scas
sbb
lods
jmp
lea
add
jl
pusha
outsl
sbb
stos
subb
add
flds
insl
or
inc
dec
push
iret
mov
push
jle
pop
int3
ret
adc
mov
outsb
jo
scas
orb
and
jo
sbb
or
inc
push
jno
jns
stc
dec
push
add
mov
nop
and
xchg
inc
add
das
jl
outsl
push
cmpsb
int
jne
cmp
push
inc
dec
movsb
sub
adc
or
rdtsc
hlt
push
inc
pop
xor
lahf
or
test
dec
sub
push
xchg
jecxz
rcrl
iret
bound
loop
sub
or
out
sbb
push
cmp
or
mov
or
mov
sbb
inc
jecxz
aas
xchg
push
insl
in
dec
pop
pop
inc
fnstenv
adc
ja
sub
cmp
mov
inc
sub
stos
mov
cwtl
test
stos
sbb
jb
mov
addr16
mov
mov
push
jg
pxor
aad
jg
mov
sbb
test
dec
mov
or
pop
adc
mov
or
ljmp
imul
loope
push
out
jmp
cmpb
mov
jl
or
fmulp
and
push
jl
lods
clc
daa
sub
adc
outsb
out
mov
leave
add
inc
testb
push
and
hlt
or
in
pushf
push
sbb
jmp
mov
into
fisttpl
and
jne
pop
es
dec
jecxz
leave
sbb
loope
les
cmc
push
lods
mov
movsl
js
sahf
pop
fst
rorb
add
fdivl
inc
jns
sbb
mov
test
cwtl
xchg
lret
mov
cs
dec
push
mov
insb
test
inc
or
cmp
adc
sti
data16
jmp
iret
cs
popf
ret
dec
test
ret
ss
mov
dec
movsb
pop
daa
insb
add
push
test
mov
adc
cmpsb
lret
jle
mov
or
push
pop
sub
gs
sahf
push
insb
fdivrl
xchg
add
mov
aam
int3
enter
jecxz
push
imul
cld
js
mov
jb
idivb
jg,pt
jo
cli
nop
jle
lcall
das
ret
cwtl
xor
add
xchg
or
or
adcl
icebp
mov
pushf
and
mov
call
pop
dec
sub
push
out
out
bound
mov
in
enter
xchg
xchg
ror
sub
jno
pop
dec
andl
mov
dec
out
das
inc
out
addl
jl
stos
lea
add
add
aaa
out
jno
ss
jnp
stos
xchg
test
out
add
mov
xchg
fcmovbe
in
pop
jno
stos
lahf
insb
or
sub
pop
outsl
push
call
inc
rcrl
je
rclb
pop
sbb
mov
lods
cmc
push
ss
out
jnp
orl
cmpsb
lea
or
movsb
inc
jno
lock
mov
xlat
sbb
out
mov
inc
inc
and
xor
inc
lods
or
inc
push
insb
sub
adc
shll
push
cld
shrl
dec
dec
lahf
jp
lods
arpl
mov
lahf
add
jno
enter
js
mov
enter
xor
adc
dec
lods
xor
mov
xor
icebp
dec
fsts
pop
xchg
rcl
dec
inc
jmp
xchg
sbbl
and
lods
mov
or
pop
sbb
push
push
fmul
imul
xchg
in
inc
test
std
sbb
or
sub
push
and
sbb
or
lods
les
fucomp
or
dec
test
sbb
sbb
pop
xor
adc
jne
jbe
sarb
xchg
pop
jne
xor
das
push
lock
push
sub
lods
mov
mov
inc
std
js
es
mov
fdivrl
push
pop
mov
mov
out
xchg
cmp
sbb
nop
in
xor
lcall
sahf
dec
das
xchg
jle
sbb
daa
popa
into
sub
out
adc
mov
sub
push
fcoml
sub
inc
xchg
pop
movb
insl
imul
les
xor
dec
xchg
insl
sub
arpl
or
movb
inc
ret
ja
loop
sahf
clc
xchg
mov
mov
in
or
and
xor
mov
lcall
sti
push
jno
mov
std
mov
in
fdivrl
loopne
ret
cmp
mov
add
lahf
jmp
pop
gs
sbb
out
jne
push
cltd
fwait
mov
pop
out
lret
movsb
mov
bound
repz
pop
into
jne
dec
rolb
push
sbb
jb
xchg
add
cmp
sub
mov
iret
xor
lcall
cld
cwtl
in
xchg
js
pusha
mov
fwait
sti
into
rol
mov
push
or
mov
ss
pop
test
fldcw
mov
scas
xor
sub
repz
ret
sub
adc
mov
lods
iret
xchg
sahf
push
and
test
push
xchg
mov
ss
jecxz
iret
in
adc
test
xchg
mov
je
push
loopne
push
or
or
adc
bound
xor
inc
sub
jp
into
dec
sub
sub
jecxz
dec
inc
shll
jp
iret
push
sub
xchg
insb
ret
xor
pop
lret
unpckhps
jmp
insl
mov
sbb
jp
pop
jp
leave
lods
cltd
lods
stc
out
adc
and
xor
into
cs
and
jns
inc
scas
addr16
outsb
push
xchg
cld
push
outsl
or
jge
sub
mov
mov
popl
push
adc
jnp
or
in
cltd
mov
es
outsb
clc
and
xchg
mov
fistps
adc
pushf
aam
push
insb
subl
ret
sub
and
xchg
sbb
ljmp
dec
inc
and
data16
sahf
aaa
cmpsb
outsb
jmp
and
popa
dec
sub
out
mov
jb
dec
imul
int
addr16
js
mov
mov
or
or
or
std
cmp
mov
push
xor
jg
xor
and
sbb
fisubl
js
cwtl
inc
mov
sub
xchg
inc
inc
mov
push
rclb
adc
leave
mov
testb
cmpsl
rcll
lcall
mov
roll
pusha
xor
rcl
out
dec
pop
hlt
push
cmp
loope
sbb
push
push
rcl
mov
and
test
push
adc
adc
jns
in
test
les
push
fcmove
insl
adc
jnp
bound
sbb
push
mov
cmpsb
xchg
pushf
push
cli
mov
cltd
loopne
jmp
leave
je
vpshufhw
xchg
jns
mov
inc
mov
ja
push
sbb
imul
inc
pop
pop
bound
cmp
andb
cs
test
push
fsub
mov
mov
loop
push
mov
jecxz
jbe
imul
cld
adc
call
fnstcw
sub
mov
jecxz
pusha
jbe,pt
fdivrs
inc
pop
sbb
pop
and
dec
add
adc
fcomip
adc
add
mov
mov
into
scas
test
dec
cwtl
mov
std
outsl
xchg
fcmovb
incl
ss
mov
sub
jb
xchg
orl
xor
fs
sbb
stc
push
sbb
rclb
push
jle
adc
ret
outsl
sbb
adc
push
fbstp
rorb
xchg
mov
aad
fwait
push
dec
shrb
sub
js
push
cmpsl
test
mov
mov
repnz
cmp
and
rcr
sub
adc
mov
in
daa
ljmp
and
pushf
push
cwtl
andl
popf
push
cmp
icebp
add
jno
jno
xlat
movsl
out
ds
test
mov
mov
inc
pushf
inc
mov
add
cmp
jno
pop
test
fidivs
xor
nop
adc
pop
xor
mov
adc
out
cld
out
fwait
xor
in
xchg
shll
mov
jmp
add
fwait
pushf
loop
mov
sbb
pusha
dec
xchg
pop
lock
push
sub
les
fs
dec
mov
jae
std
lret
fstpl
or
xor
in
pop
add
mov
repnz
mov
adc
xlat
cmp
sub
enterw
jecxz
mov
xchg
enterw
mov
sub
out
mov
sbb
push
inc
call
cwtl
imulb
add
test
sbb
push
dec
cmpsl
jbe
mov
std
pushf
lahf
jmp
mov
cmp
std
adc
push
arpl
xlat
ror
add
inc
lods
pop
xor
insl
add
orb
nop
outsb
and
xor
cmpsl
data16
les
movsb
mov
loope
mov
ljmp
dec
movsb
inc
pop
out
lea
xchg
sarl
add
mov
test
decl
adc
sahf
arpl
lret
cmc
lret
pop
pop
stc
js
cmpsb
cld
cmp
insb
data16
fs
adc
aas
fsubp
cmp
mov
notl
jl
jno
sti
mov
not
mov
push
mov
lcall
xor
leave
stc
jp
mov
jb
pop
sub
rcrb
mov
mov
mov
mov
movsl
clc
lds
std
lahf
and
sbb
ds
xor
ljmp
in
jmp
daa
dec
outsb
and
int
push
shrl
jg
and
mov
xor
pop
cs
fstps
mov
or
mov
mov
or
adc
pop
nop
push
jne
lea
mov
cmpsb
insb
adc
dec
leave
subb
movsl
nop
inc
mov
inc
cmp
hlt
div
in
addr16
stos
fldcw
aad
or
cs
lret
stc
out
jne
int
icebp
jo
cmp
add
jbe
pusha
popa
xchg
movsb
cmc
shr
inc
push
repz
ja
push
xchg
add
xchg
in
in
cmp
push
adc
stos
int
paddsb
cmp
lret
fildll
pop
mov
push
and
push
add
movsb
inc
jae
add
cwtl
cmpsl
shrl
pop
push
shlb
or
data16
sbbb
ljmp
add
inc
mov
jne
jmp
and
inc
loope
mov
outsb
xor
xchg
inc
stos
inc
stos
mov
xchg
cli
xor
loop
test
aam
mov
dec
pop
pop
push
icebp
mov
xor
push
jno
lea
xchg
pop
ja
enter
rcrl
fildll
out
shrb
cmp
add
xlat
push
cmp
je
add
and
sbb
pop
or
xor
fcmovu
test
addl
jnp
xorl
mov
push
sbb
nop
mov
insl
push
mov
jg
jl
sub
dec
push
stos
inc
adc
push
call
nop
ljmp
xor
test
pop
fildll
movsl
push
xor
movsb
aaa
lcall
mov
pop
sbb
mov
daa
cs
fwait
inc
test
loope
andl
push
js
lods
cmp
mov
cmp
mov
mov
dec
cmp
inc
mov
stos
xchg
xor
mov
adc
dec
outsl
scas
in
jb
cmpsb
cmp
outsl
in
fwait
mov
pop
mov
das
cltd
call
push
cmpsl
arpl
xlat
xchg
jbe
lret
insl
sbb
scas
das
mov
cltd
pop
add
in
sub
dec
mov
fwait
mov
pop
iret
jae
fisttps
aam
or
push
mov
adc
fwait
lret
sbb
pop
imul
dec
pop
sub
xchg
addr16
jmp
cmp
mov
mov
mov
lods
jbe
jecxz
cmp
in
leave
jae
xchg
cmp
out
outsl
jl
adc
pop
negl
lret
push
scas
mov
cmp
enter
mov
dec
and
xor
leave
lret
jl
ljmp
repnz
mov
push
xchg
mov
fwait
loopne
pushf
pop
nop
jmp
int
test
enter
into
push
push
dec
out
lahf
adc
mov
add
shll
adc
push
or
mov
movsl
ret
pop
inc
sti
mov
lea
test
mov
or
jp
cwtl
cld
pop
xchg
cld
push
mov
and
mov
add
xchg
push
xchg
aaa
lret
lahf
adc
test
leave
daa
leave
imull
pop
shlb
in
test
loop
movsb
push
pop
sbb
cmp
jbe
mov
jnp
loop
sub
push
roll
iret
popf
jecxz
add
dec
fwait
inc
jb
and
sbb
test
ds
inc
mov
pop
cmp
jae
cltd
inc
jnp
sub
xor
push
movsb
inc
push
push
std
dec
ficomps
insl
test
lods
nop
hlt
mov
jb
jo
gs
testl
pop
out
mov
test
cli
in
or
mov
mov
mov
ja
mov
sub
dec
aam
out
ss
xchg
add
or
stos
out
sub
cltd
cltd
aad
lds
mov
shl
mov
fwait
xor
push
xchg
lea
push
xor
and
cs
adc
cmc
mov
out
insl
ja
mov
pop
mov
fisubs
add
jp
enter
fyl2xp1
movsl
nop
shrl
lcall
shrb
shll
insl
xchg
dec
enter
inc
cwtl
leave
scas
inc
adc
sbb
and
and
fbstp
add
movsb
lcall
jb
into
mov
pop
mov
lods
ret
leave
scas
in
imul
push
mov
in
dec
push
or
pop
dec
push
inc
mov
jns
leave
xchg
lahf
cltd
iret
cmp
cmpsl
cmp
jl
push
push
mov
mov
pop
stc
xchg
cmc
xchg
mov
mov
aad
stos
bound
adc
insb
pop
in
nop
lods
xor
insb
push
jl
mov
dec
out
ljmp
ror
push
imul
gs
test
jnp
lret
iret
sbb
pop
cmp
fcmove
dec
add
sbb
or
mul
add
adc
clc
inc
roll
movsb
repz
push
or
out
xchg
lret
dec
fdivrs
cmpsb
mov
pop
xchg
inc
lret
shl
dec
sub
jne
and
jecxz
sub
mov
pop
mov
mov
fsubl
fucomip
ja
icebp
or
imul
and
mov
cmp
pop
addr16
add
or
cmpsl
loope
mov
dec
xchg
mov
cwtl
and
in
ja
sbb
gs
sub
mov
mov
pop
movsl
cmp
fisttps
mov
inc
sub
pop
outsb
shrl
sub
movsl
inc
mov
add
mov
adc
int3
lahf
lock
test
cmp
mov
jnp
popl
mov
add
lret
mov
and
fidivrs
sub
and
jge
inc
cmp
addl
adc
insb
int
jl
push
or
fdivs
jne
mov
stc
dec
mov
aam
test
mov
mov
cmpb
sbb
lcall
add
cmp
fimuls
add
mov
jg
fldcw
jbe
and
xchg
pop
repz
arpl
mov
lar
sbb
mov
or
fs
adc
ss
mov
stc
sub
lcall
xor
mov
repz
cmp
nop
pop
in
loope
scas
ljmp
sbbb
push
mov
fsubl
sub
call
dec
dec
mov
mov
jge
imul
sbb
movsl
scas
xchg
xchg
std
lcall
mov
in
pop
sbb
cmp
and
adc
xor
and
mov
test
lds
sbb
je
lods
sub
xor
inc
or
adc
and
dec
pushf
aaa
loope
pop
cmp
out
lret
xchg
imulb
data16
rclb
gs
add
lock
and
xlat
popf
mov
mov
xchg
add
mov
xor
pop
push
xchg
sub
push
outsl
xchg
dec
fdivrs
cmp
push
xchg
dec
pop
fdivr
dec
call
jle
inc
push
push
add
adcb
jp
xor
mov
test
or
ljmp
jecxz
lcall
fwait
add
ja
add
out
dec
adc
mov
roll
xchg
movsl
sub
dec
inc
lcall
pop
push
ja
popa
push
jb
dec
cmpb
test
jmp
aaa
lret
mov
subb
int3
adc
dec
sbb
pop
push
add
push
cmp
mov
and
pushf
mov
xor
hlt
mov
xchg
ss
xor
mov
pushl
cmp
repz
hlt
stos
pop
adc
mov
outsb
jae
mov
jns
jns
arpl
sbb
sub
push
add
ficoms
xchg
sarl
test
mov
in
loop
inc
fwait
sbb
stos
jl
xchg
pop
mov
mov
dec
sbb
clc
or
mov
inc
std
cltd
inc
int3
push
mov
je
mov
stos
leave
sahf
fimuls
mov
mov
insl
jbe
dec
fildll
je
shl
pop
roll
std
lret
loope
mov
mov
arpl
pop
cmp
mov
push
cwtl
sub
lret
push
inc
repz
adc
xor
inc
pop
or
add
call
cmpb
sub
push
js
dec
outsl
daa
add
dec
fildll
cmpsb
xor
pop
jl
or
scas
dec
cltd
leave
or
into
mov
mov
sbb
ds
das
outsb
mov
inc
cltd
testl
sub
popf
jecxz
or
int3
test
stc
test
mov
lea
or
out
loope
pop
jge
data16
push
push
ds
ja
xchg
das
dec
js,pn
clc
insb
cmp
push
getsec
scas
or
dec
xchg
fdiv
add
add
movsl
lock
pop
stc
mov
jg
inc
inc
adc
insb
fwait
mov
adc
push
pusha
repz
cmc
je
bound
jns
ret
pop
or
popa
ret
xchg
adcl
lahf
jmp
call
sub
ds
xor
jno
adc
lcall
ja
inc
mov
xchg
xchg
lods
xlat
pop
pushf
adc
xchg
cltd
loopne
adc
push
xor
ficoml
cmpsb
lret
bound
pop
push
mov
xor
subl
in
mov
lret
loope
test
negl
or
xor
xchg
fadd
push
into
add
das
mov
jns
inc
fists
cld
out
mov
sbb
adc
and
arpl
mov
fdivs
sbb
push
out
scas
adc
stos
pop
and
mov
push
dec
adc
cmpsb
inc
xchg
mov
mov
test
fwait
movsb
test
lds
sub
cmp
push
sbb
aam
jmp
cld
adc
inc
dec
std
mov
test
ret
mov
enter
jbe
shll
repz
fistl
pop
xor
inc
or
add
sbb
pop
mov
gs
movsb
or
mov
add
and
lahf
lock
or
mov
aas
cltd
or
xor
andl
cmp
xchg
rcll
mov
xlat
mov
scas
es
loope
push
std
in
xor
jns
test
jl
and
punpcklbw
fisubrs
pusha
jl
sbb
mov
push
test
nop
sub
mov
ljmp
inc
push
inc
and
mov
push
out
out
loop
out
repnz
rol
xor
cmp
aad
mov
pop
pop
cli
jne
adc
dec
inc
push
push
jl
sub
les
lcall
loopne
cmp
inc
test
dec
xor
xchg
add
rorl
int3
push
pop
cmp
rcrb
xchg
pop
jmp
add
push
mov
std
movsb
xor
lea
iret
rcrl
mov
xor
xchg
mov
inc
push
pop
daa
cmp
sahf
push
mov
cmc
xchg
add
sahf
sub
gs
jp
push
or
outsl
xchg
jg
dec
aam
lcall
cmp
lock
in
push
inc
mov
sub
icebp
or
sub
pop
xor
pop
imul
ljmp
jno
das
fadds
push
ljmp
negb
push
mov
push
cs
xchg
jbe
jb
inc
imul
fmul
movsb
aam
sbb
jge
aaa
pop
cltd
aas
arpl
out
push
adc
jp
das
cmp
push
pop
insb
and
jb
movsb
test
dec
and
jne
cmp
mov
shr
in
adc
fs
iret
cmc
sub
clc
pop
xchg
pop
daa
inc
mov
scas
gs
inc
inc
pop
icebp
push
sub
bnd
jns
sti
add
inc
cmpb
divl
xchg
jmp
cs
cmp
arpl
leave
dec
stos
movsl
cmpsb
std
mov
fdivs
xor
dec
sbb
lea
ret
fiadds
dec
lods
out
popf
out
sub
cmp
sahf
xchg
jg
lahf
dec
push
sbb
in
xor
sarl
xchg
push
pop
dec
and
push
mov
negl
push
add
push
bound
adc
mov
cmc
sbb
jb
jge
mov
jge
lods
xor
dec
daa
enter
mov
and
mov
lds
sbb
mov
xchg
stc
adc
jnp
test
sti
and
movsb
aaa
sti
sbb
pop
data16
pop
iret
int3
loop
jge
sbb
xor
inc
jmp
movsl
add
cmp
add
jb
or
pop
xchg
pop
adc
xchg
mov
rcll
sbb
gs
dec
icebp
or
mov
mov
into
jecxz
add
xor
clc
in
test
sbb
inc
ror
sti
imul
pusha
es
jl
or
jne
ljmp
fcmovnu
movsl
xor
mov
mov
je
jle
mov
sbb
mov
cmp
cltd
inc
xchg
scas
inc
mov
pop
pop
dec
aas
or
xor
jne
rcll
cmpsb
out
call
mov
test
cmp
ret
mov
test
test
es
add
sbb
jnp
pop
sub
pop
xor
addb
mov
incb
mov
sub
dec
pushf
mov
xchg
mov
movsb
pop
popf
outsb
or
pop
xor
or
sub
adc
cmc
cmp
add
fs
lahf
insb
stos
pop
scas
test
xor
mov
int3
push
out
mov
divl
fsubl
mov
and
in
mov
hlt
mov
repz
and
rorb
jge
mov
sub
movl
movsb
inc
rcl
inc
dec
and
inc
sub
adc
mov
jle
lods
mov
jp
pop
xor
add
mov
insl
xchg
test
test
or
rol
push
bound
adc
push
mov
sbbb
push
outsl
xchg
movsb
xchg
pop
mov
jae
xlat
push
aaa
scas
xor
pop
or
fistl
fstpl
test
pusha
leave
or
outsl
faddl
imul
dec
mov
int
insb
dec
aam
lret
in
inc
fwait
jbe
int
pop
stos
xor
test
popf
test
xchg
jns
xchg
movsb
cltd
sub
pop
dec
jo
pop
fnstcw
dec
jecxz
aaa
and
xor
or
call
pop
adc
jge
pop
or
outsb
insl
js
or
sub
out
cmp
cmp
lods
mov
out
jp
jp
mov
movsb
aad
adc
cltd
push
add
mov
jle
mov
xor
cltd
lret
adc
xchg
mov
fmul
lods
pusha
pusha
ljmp
fsts
xor
sbb
loopne
aad
mov
leave
fcmovnu
jp
lcall
mov
mov
mov
mov
das
sahf
das
mov
movsb
pop
andb
jmp
mov
cmp
pop
pop
loop
loopne
outsb
pop
lds
sbb
jmp
stos
sbb
nop
pushf
mov
mov
xchg
push
ja
es
js
out
stc
out
repz
stc
pop
push
mov
mov
imul
adc
cli
shll
adc
xor
sbb
movsl
and
test
sbb
cmp
test
pop
or
sbb
cmpsb
mov
cli
aad
jbe
push
lret
xor
enter
pop
rolb
xchg
mov
mov
xchg
or
xchg
leave
jge
sub
inc
testb
mov
cmpb
out
mov
imul
lock
iret
lock
pop
xchg
pushf
pop
sbb
enter
cld
mov
ficoms
test
dec
je
dec
ficompl
fsubl
sub
cmp
inc
push
push
push
test
xchg
adc
aad
sub
scas
sub
pop
push
push
xor
loopne
lret
js
lret
pop
jl
jmp
xchg
dec
lret
inc
cs
dec
xchg
test
mov
sub
sbb
icebp
cmpsb
popw
sbb
es
push
add
dec
jnp
cmp
cs
sbb
ret
lret
cld
mov
ss
and
dec
mov
push
and
in
mov
xchg
mov
mov
cmp
mov
dec
pushl
push
bound
mulb
adc
nop
ret
sbb
jl
xchg
push
es
add
xchg
mov
dec
fildl
xchg
je
push
stos
jbe
pop
pop
mov
and
mov
ret
ret
push
adc
imul
xchg
jns
mov
leave
lcall
fldenv
repz
mov
sub
sbb
shll
xor
sub
xchg
inc
pop
call
cmp
and
adc
mov
pushl
push
mov
movsl
pop
jg
lds
or
xlat
daa
test
inc
push
call
sahf
mov
push
xchg
shrb
repz
xchg
jmp
aas
shl
jmp
pop
sbb
jmp
jns
sti
cltd
mov
push
subb
mov
jno
es
lea
test
outsb
pop
and
add
ret
mov
mov
mov
add
ret
ds
movsb
cmp
lret
sbb
cltd
sbb
xlat
jae
cmp
fnsave
fimull
fldenv
aad
test
pop
imul
add
push
adc
push
pop
inc
mov
and
ja
pop
and
and
inc
outsl
adc
in
pop
xchg
jno
or
add
xor
and
adc
inc
dec
add
pop
mov
fmul
icebp
dec
mov
loop
loop
sbb
adc
ds
mov
repnz
adc
pop
aas
lahf
std
call
mov
sbb
cli
inc
cmp
shrb
test
pop
inc
adc
mov
cli
out
and
outsb
dec
sbb
pop
cmp
imul
mov
jmp
sbb
shlb
and
inc
popa
lods
call
mov
or
xchg
xlat
sahf
inc
and
sub
adc
push
pop
jne
pop
mov
pop
ss
mov
jae
sbb
dec
mov
mov
andl
jecxz
and
mov
pop
loopne
jle
movsb
mov
sti
stos
lock
fbld
icebp
dec
clc
or
jl
cmp
scas
das
fisttpl
add
shlb
xchg
mov
shrb
mov
jnp
sbb
sbb
ss
fidivs
sarl
mov
out
mov
cmpsb
lods
xor
jae
or
fmull
jns
xchg
cmp
test
xchg
arpl
sub
jg
mov
pop
outsl
sarb
lahf
xchg
je
sbb
inc
mov
xor
imul
xchg
xchg
mov
jbe
lea
or
and
cs
adc
cmpsb
pop
shrl
xchg
mov
std
pop
xchg
insl
cwtl
hlt
push
mov
adc
subb
jnp
notl
das
pop
movsl
xchg
mov
out
fwait
vandpd
popa
jp
popf
cli
pop
inc
or
clc
jo
fldl
jmp
dec
inc
inc
ror
inc
in
xorb
push
lret
dec
lret
pop
insb
jle
xchg
dec
sbb
pop
std
sbb
insl
dec
shlb
movsb
jmp
dec
shlb
xchg
mov
push
lahf
bound
mov
pop
repnz
sub
mov
les
sti
loope
push
dec
mov
fwait
dec
ret
mov
outsl
xor
jno
add
insl
mov
jle
inc
mov
dec
pop
dec
pop
in
xor
jno
repz
xlat
inc
adc
test
sahf
iret
lret
jnp
stos
adc
mov
scas
jb
fistps
inc
decl
or
ja
and
sub
jne
ds
mov
dec
jb
inc
aam
mov
push
sbb
hlt
mov
mov
enter
jecxz
add
mov
fidivs
xchg
gs
pusha
sub
out
cmp
sub
cmova
xchg
mov
mov
fsubrl
in
xor
cmp
fisttpl
jns
stos
add
imul
ret
jb
call
es
jne
stos
and
dec
enter
aaa
adc
and
cmp
cmp
push
imul
and
dec
fisubl
test
iret
adc
repnz
push
inc
out
int3
sbb
inc
std
push
nop
test
mov
sub
shlb
pop
adcl
ds
adc
dec
rol
aam
lret
jmp
das
push
clc
add
sarb
ds
inc
inc
inc
sub
scas
mov
outsl
dec
jbe
adc
adc
mov
out
rolb
jns
push
xchg
popf
bound
mov
adc
pusha
mov
repz
sbb
push
hlt
imul
jns
je
test
cmp
dec
mov
cwtl
bnd
dec
cmc
pop
in
push
sarl
inc
fadds
loope
xchg
in
fcomps
daa
inc
inc
xor
add
inc
and
dec
icebp
add
ss
pop
inc
mov
or
fs
stos
cwtl
adc
out
fldl
imul
adc
imul
push
or
ret
cltd
sub
sarl
dec
ja
add
mov
dec
xor
aam
loop
lahf
jg
dec
pop
cli
sub
mov
aad
inc
nop
sbb
inc
jmp
data16
jnp
enter
out
and
push
lcall
sub
xchg
lds
popa
out
ja
outsl
in
insb
test
mov
xchg
sbb
aam
sbb
and
pop
cmpsl
pop
xchg
sbb
lds
adc
xor
repnz
repz
jbe
xchg
bound
pop
addr16
and
testb
cmpsl
data16
push
and
cltd
std
loop
or
jns
adc
jno
mov
jecxz
cmp
dec
in
xchg
push
daa
sbb
ljmp
adc
adc
stc
add
lock
insb
loope
inc
cwtl
int3
fwait
cmc
push
sub
and
decb
insb
shlb
xchg
adc
es
push
ljmp
inc
and
popa
xor
mov
sahf
mov
imul
fistpll
into
mov
aad
lock
fnsave
pop
sti
mov
sub
or
test
jb
ljmp
adc
mov
arpl
add
sbb
xchg
scas
imul
in
testb
pop
adc
mov
movsb
mov
stos
scas
jle
sbb
roll
pop
sahf
dec
cmp
inc
mov
mov
cmpsb
cmpsb
ficoml
push
xor
cmp
mov
outsb
shlb
aas
and
mov
or
ret
sbb
push
cmp
pushf
pop
in
outsl
mov
imul
pop
pusha
xor
ss
movsb
cmp
mov
int3
roll
jmp
xchg
movsb
sbb
mov
aad
and
insl
idivb
clc
jnp
jg
test
jns
sbb
mov
test
or
repz
add
pop
push
clc
cmpb
jb
sbb
lcall
dec
push
sub
stc
xor
aad
and
inc
cltd
adc
mov
dec
mov
inc
cs
mov
mov
enter
mov
lea
rdrand
out
mov
lret
das
pop
stc
scas
les
xor
sub
sub
mov
cmc
cmp
loope
out
pop
shlb
lret
std
inc
xor
fildl
gs
mov
lea
mov
mov
repnz
xchg
sbb
rclb
into
push
adc
mov
dec
pop
rclb
sbb
jbe
mov
cwtl
push
sub
stos
xor
lahf
cwtl
cmpsl
or
mov
cmp
lods
dec
fs
cwtl
mov
xor
cmp
call
repnz
inc
jg
bswap
jl
jg
lret
movl
incl
xchg
loopne
push
or
pop
mov
dec
sub
mov
mov
test
and
cs
loop,pt
outsl
shll
and
sub
adc
fsubrl
ret
mov
xor
mov
xchg
jnp
movq
cmp
stos
insb
push
push
sti
mov
add
loop
cmpsb
mov
fwait
adc
push
stos
push
icebp
cld
sahf
jle
xchg
adc
jae
or
add
pop
les
add
add
cli
les
sub
loop
dec
jae
lds
mov
pop
fstps
mul
xchg
imul
stc
xor
cmp
movsb
mov
rcrb
sub
int
inc
xlat
test
pop
mov
mov
js
cmp
dec
push
lock
jbe
sbb
testb
fisttpll
in
sbb
push
mov
es
xchg
inc
pop
andb
insb
add
xlat
in
and
movsb
hlt
cmp
lock
lea
cmp
hlt
mov
pop
fdivl
cmp
int
fcoms
and
imul
mull
adc
jecxz
mov
test
push
dec
test
shrb
cmp
popf
out
sbb
jecxz
lods
icebp
dec
fldenv
call
pusha
int3
mov
dec
mov
push
int3
xchg
adc
bound
cmpsl
cmp
adc
or
xor
in
insl
inc
mov
or
int3
das
xor
dec
dec
xlat
mov
cmc
push
sub
pop
mov
adc
cwtl
shll
pop
push
in
jl
idivl
stc
ret
jo
and
aaa
sub
xchg
dec
sub
add
aad
sub
lds
fs
cmp
movsl
and
in
mov
xor
popa
cmp
fwait
in
dec
push
mov
out
pop
jl
mov
xor
sbbb
mov
mov
add
jo
add
out
inc
pushl
filds
imul
pop
jns
jbe
push
jmp
aam
dec
pushf
xor
lret
imul
dec
pop
xor
punpckhbw
xchg
in
adc
repnz
inc
dec
xor
xchg
fldt
lret
mov
fwait
outsb
lods
rsqrtps
into
xchg
inc
jb
jp
cli
out
in
popa
popf
sbb
loope
mov
popf
push
ja
jecxz
mov
push
clc
insb
pop
test
lea
xorb
adc
ret
aam
cmc
mov
jg
test
jne
sbb
ret
jbe
or
into
in
pop
cmp
push
cli
sub
sar
jp
adc
sub
push
pop
mov
jl
in
sbb
pop
add
andl
or
scas
mov
cmp
leave
dec
out
scas
add
pop
lcall
jb
mov
sbbl
stc
xor
pop
xchg
push
cmpsl
dec
daa
xor
cmp
cmp
int
test
or
mov
push
dec
push
sbb
imul
fiadds
popf
dec
fwait
and
sub
shr
cmpb
cmp
mov
cmp
js
repnz
aad
stos
add
xor
pop
and
cli
push
jns
dec
mov
jle
cltd
enter
push
mov
js
mov
out
dec
or
cmp
cmpsl
sub
jne
divl
jbe
adc
lods
mov
lods
fadd
sbbb
xor
push
shr
fcmovb
or
or
pop
and
sti
inc
rolb
enter
mov
aaa
inc
out
add
loop
lods
jmp
mov
or
sbb
mov
andb
sub
xor
push
adc
mov
inc
ja
test
or
push
or
adc
fstp
sub
sbb
out
inc
lret
mov
adc
jnp
dec
cld
dec
pop
in
cmp
xor
sbb
mov
out
or
sti
out
imul
insl
push
ja
pusha
pop
scas
out
cmpsl
stc
sti
mov
notl
aam
fwait
sbb
pop
xchg
or
and
ds
cmpsb
adc
ljmp
outsl
mov
test
jnp
sbb
push
or
jae
cmpsl
xchg
cs
jno
cmp
in
pop
pop
push
ja
mov
sub
mov
inc
adc
orl
dec
xchg
mov
mov
loopne
push
pop
popf
cmp
or
cwtl
push
mov
scas
scas
mov
mov
cs
xor
lcall
xlat
inc
imul
hlt
fisttpll
push
fldenv
loopne
fcmovnb
push
std
dec
std
cmp
stos
mov
insl
mov
jae
xor
sub
sub
insl
imul
addr16
cmc
out
popa
lcall
mov
lock
mov
inc
xchg
push
mov
clc
mov
push
mov
push
fucom
push
pusha
adc
inc
mov
fsubs
mov
nop
and
int3
scas
and
sarl
sbb
stos
jns
adc
cmpsb
aam
sub
sbb
xor
jmp
adc
jns
rclb
testl
test
cmpsb
xchg
inc
mov
sbb
es
inc
push
add
or
test
cmp
jmp
push
jl
push
int
jmp
add
jmp
aas
shll
dec
imul
js
pop
cmp
iret
or
mul
test
jle
nop
test
pop
movsl
dec
cli
arpl
add
lods
lods
into
inc
xor
hlt
movsb
lds
sarl
cltd
inc
mov
xor
add
fsubp
clc
fwait
pop
push
add
inc
fidivrs
dec
xor
jne
cli
mov
mov
cwtl
dec
adc
push
jge
insb
mov
and
push
lret
mov
sbb
jns
and
scas
es
lods
int
xor
inc
rclb
mov
stos
pop
flds
mov
hlt
push
mov
faddl
das
loopne
out
sub
in
lahf
push
push
out
mov
jle
add
sub
aaa
push
cmp
xchg
pop
xlat
popf
cmp
mov
cmp
test
icebp
fisubrl
cwtl
and
cltd
jp
in
sbb
pop
test
popa
add
mov
into
push
mov
cltd
xchg
jecxz
leave
sbb
int3
push
inc
mov
neg
or
add
rcll
fwait
jo
inc
je
insl
adc
or
js
mov
cltd
jbe
or
mov
fldl
stc
push
xchg
jnp
mov
shl
hlt
inc
xor
and
xchg
into
fwait
mov
dec
rorb
je
std
arpl
mov
mov
ret
popf
mov
lods
push
adc
aas
leave
dec
inc
inc
mov
add
inc
xor
lea
sbbb
std
inc
jbe
add
add
test
or
pushf
movsl
pop
loopne
mov
push
jo
je
lods
and
mov
cwtl
repz
out
push
mov
out
cmp
ds
push
push
std
cmp
sbb
mov
sbb
out
lods
aas
sbb
jb
arpl
push
xchg
jle
adc
sbb
jb
aaa
and
enter
rorl
sub
shlb
imul
shll
mov
ret
sbb
push
sub
cld
aas
hlt
stos
imul
clc
ljmp
jne
cmp
add
rclb
or
dec
icebp
call
pop
add
pop
inc
call
push
inc
push
jbe
ror
in
dec
and
push
aam
push
shlb
xchg
mov
and
push
ds
pop
jle
rclb
jl
ja
out
pusha
scas
lock
jle
repnz
stc
mov
or
pop
loopne
jp
push
in
repz
jne
ja
xacquire
push
popw
jno
add
pop
bound
xor
repnz
stos
aad
popa
or
or
out
sbb
mov
sbbl
pop
jg
mov
or
mov
mov
cld
sub
pop
inc
xor
jge
xorb
xchg
push
je
pushf
mov
push
cmp
xlat
sbb
ljmp
push
jmp
popf
xchg
jbe
mov
outsb
sub
adc
js
sbb
xor
mov
in
dec
pop
aad
fwait
jmp
ja
nop
xchg
inc
mov
mov
fimull
jo
out
xchg
jge
jne
xchg
repz
mov
leave
cs
xor
mov
dec
cs
push
rclb
and
movsb
dec
xchg
push
cmp
test
and
int3
jbe
sarb
pushf
pop
cmp
sub
into
addr16
push
insl
jb
adc
ja
repz
add
js
leave
in
push
fisttps
test
xor
in
dec
les
mov
sbb
adc
pop
push
adc
aaa
fistpll
cwtl
mov
push
and
out
loopne
push
dec
jb
leave
stos
adc
repz
and
out
jbe
sbb
icebp
push
fucomp
popf
hlt
xchg
lea
cmp
insl
push
mov
sbb
mov
addr16
bound
jle
inc
pushf
imul
mov
les
adc
in
mov
xor
mov
les
out
sbb
enter
or
mov
leave
jnp
lcall
js
rclb
cmp
cld
xor
sbbl
push
inc
adc
fcmovnu
imul
mov
dec
cmc
sub
imul
sbb
adc
stos
movsl
sub
dec
sub
fadd
xchg
push
dec
ja
jmp
stos
adc
dec
andb
idiv
je
cmp
pop
fsubl
scas
shufps
mov
jle
das
in
or
arpl
xor
pop
test
pop
push
icebp
insb
mov
sbb
mov
cmpsl
add
jle
dec
test
add
cmc
imul
divb
iret
adc
push
hlt
pop
jnp
mov
cmp
fdivl
sbb
das
fisubrl
std
aam
roll
dec
fld
ss
int3
addb
adc
dec
mov
das
mov
xor
jl
adc
fsubs
pop
sti
mov
fbstp
inc
cmpsb
or
lahf
daa
clc
push
sti
push
cmp
or
pop
ret
ret
or
data16
hlt
adc
mov
push
jb
push
insb
inc
jmp
aam
insb
cwtl
pop
xor
inc
lea
cmpb
aam
es
xchg
mov
and
aas
mov
jmp
pop
lcall
sbb
mov
and
sbb
fdivrs
insb
bound
aas
sub
add
xchg
divb
or
pop
call
aas
test
xor
cmp
xor
mov
dec
adcb
daa
jne
popa
in
jnp
test
add
jns
push
les
xor
mov
stos
mov
je
das
mov
rclb
pusha
sub
or
pop
insl
std
xor
es
xrelease
sbb
test
pop
xlat
ret
stos
sbb
sbb
adc
cmp
inc
sbb
xor
xchg
and
mov
mov
out
jmp
std
mov
pop
imul
aaa
pop
loopne
sub
jge
lcall
pop
and
test
cmp
ret
mov
mov
and
aad
xor
sub
out
mov
mov
xor
inc
jns
mov
sbb
jo
dec
xchg
lods
sub
sbb
cmpsl
mov
aad
xchg
test
jbe
jp
dec
hlt
jg
aas
push
mov
xchg
lods
lahf
out
shll
sub
jne
out
jecxz
inc
ja,pn
mov
xchg
adcb
movsl
shlb
call
sbb
fsub
cmp
pushf
jno
sahf
jmp
jecxz
mov
imul
fwait
scas
cld
aas
fcomps
gs
cltd
insb
and
sbb
xchg
loope
jno
cmp
xchg
nop
hlt
popf
in
xchg
adc
xchg
inc
mov
mov
mov
mov
hlt
cwtl
into
data16
mov
add
xor
sahf
pop
call
outsb
ja
and
cltd
cmc
aaa
loopne
push
jae
or
push
mov
idivb
sbb
sbb
inc
fldt
sub
xor
aaa
mov
or
mov
mov
pop
mov
sbb
mov
adc
xchg
je
fucomip
movsl
push
cs
daa
scas
and
addl
adc
push
dec
jp
clc
movsl
jp
sub
xor
ljmp
rcl
dec
lahf
popf
stc
scas
xchg
enter
inc
xchg
outsb
loope
je
adc
sbb
insl
js
adc
icebp
outsl
add
lock
jle
fsubrl
inc
aas
mov
pop
dec
shlb
jb
lret
jo
hlt
jo
call
jno
loope
data16
and
lea
lods
sub
jo
cwtl
into
scas
push
push
dec
xor
bound
jmp
cmc
enter
inc
mov
mov
test
add
jg
push
cwtl
das
push
xchg
pop
cwtl
sbb
pop
xorb
cmc
adc
aas
mov
cmpb
in
dec
cld
sub
dec
shll
adc
fmull
and
int3
frndint
push
ds
xchg
cli
xchg
dec
sti
and
xor
push
cmpsl
mov
rcrb
daa
sub
pop
movsb
lea
jns
cmp
leave
jg
aam
insb
sti
fbstp
test
insb
pop
push
in
call
mov
rcl
stos
push
cmp
dec
sbb
scas
enter
dec
or
fsubrl
dec
mov
lahf
bound
push
pushf
fisttpl
jmp
loopne
mov
jp
cltd
and
mov
push
frstor
mov
cmp
add
push
add
dec
inc
fildll
mov
or
mov
and
out
ret
cmp
mov
insb
ret
insb
mov
add
dec
test
mov
push
dec
jb
popf
subl
cwtl
lcall
out
in
aas
xor
jp
mov
in
in
fwait
loop
testl
into
fstpl
clc
sti
lods
cmp
sbb
insb
lahf
gs
addr16
mov
dec
xchg
mov
adc
adc
in
lods
adc
test
xchg
nop
movsb
push
pop
out
and
pusha
fs
in
dec
xor
cmp
inc
add
dec
cltd
fwait
mov
push
dec
mov
out
push
mov
subb
fidivs
cwtl
cmp
stc
pop
mov
into
icebp
andl
xor
shll
sub
push
test
add
push
cwtl
lds
adc
insb
pop
mov
or
enter
in
gs
jp
or
adc
pusha
and
call
das
clc
jg
outsb
repnz
xchg
jg
mov
lahf
imul
repz
movsl
addl
sbb
jbe
xor
into
inc
or
mov
add
dec
xor
push
ss
add
sbb
pop
movsb
xor
mov
or
inc
sbb
add
or
push
jbe
call
loope
fadd
sbb
fs
adc
and
and
iret
sub
out
or
add
cmpl
xor
outsl
push
dec
jle
mov
lret
mov
or
cwtl
mov
adc
cmp
icebp
adcl
add
mov
jnp
ss
out
insl
add
jl
loop,pt
repz
pop
push
push
push
daa
or
rcr
outsb
and
std
dec
inc
cmp
pushf
inc
dec
mov
cmp
shlb
xchg
sar
adc
sbb
notl
fs
nop
sahf
ss
pop
in
out
rcrb
cld
cmp
dec
stos
push
jne
psrlw
aas
enter
movsb
fistpll
mov
out
mov
mov
test
pop
and
xchg
or
jns
and
iret
aam
sub
xchg
xchg
dec
add
lds
jmp
daa
sub
inc
sahf
fbld
shll
lret
out
lock
aaa
jb
mov
cmpsl
or
enter
adc
mov
or
stc
cmc
sbb
pushl
jb
xchg
enter
jnp
jnp
call
mov
sub
cs
mov
ret
or
or
dec
push
enter
add
movsb
inc
into
cmpsl
addr16
lcall
repnz
and
stos
xor
dec
cwtl
popa
sbb
pop
mov
xchg
push
cmp
jns
jl
jmp
and
jo
or
imul
mov
mov
repz
sub
jno
jp
push
adc
scas
xor
sbb
in
shl
or
ds
mov
stos
mov
test
jbe
bound
popf
pop
in
clc
roll
test
mov
inc
push
adc
cmp
enter
mov
jl
ss
push
jecxz
sti
mov
lcall
stc
imul
scas
pop
cmp
mov
int3
sub
std
out
pushf
push
out
ret
lods
add
sbb
imul
movsl
test
cltd
push
addr16
and
stos
loope
loope
call
mov
cli
adcb
mov
adc
pop
inc
or
jl
fcomip
and
or
mov
mov
stc
mov
out
add
sub
mov
mov
dec
aas
jle
add
out
sbbl
cmp
pusha
call
lahf
test
jo
xor
dec
out
push
je
test
xlat
cmp
xchg
dec
pop
ljmp
cs
mov
sub
fmull
nop
mov
push
inc
inc
pop
pop
xchg
sbb
adc
adc
lods
jno
loopne
mov
jne
mov
insb
cmp
repz
nop
stos
sahf
lret
pushf
mov
xchg
mov
cmp
xchg
in
jg
mov
ror
jecxz
xchg
sbb
lods
xchg
push
adc
ja
cs
jmp
call
out
lods
in
cmpb
mov
sub
gs
mov
pop
es
aas
adc
sbb
in
mov
cmp
sbb
insl
xor
adc
fidivs
adc
enter
sbb
cmp
or
negb
xchg
ja
es
pop
or
xor
repz
js
int3
mov
inc
pop
out
mov
cmpsl
push
inc
in
nop
ficompl
and
and
subl
xchg
and
fcmove
push
faddl
cmp
repnz
mov
cs
or
cli
sbb
addl
mov
inc
lock
jg
loop
add
cmp
sar
add
insb
rol
out
insl
test
loope
imul
pop
jo
mov
mov
dec
dec
icebp
dec
jb
lock
popf
sub
shlb
lret
dec
inc
sbb
mov
pop
cld
loop
in
paddw
loop
lds
imul
int3
mov
xchg
cmp
mov
call
cld
fiadds
pusha
scas
pop
mov
lahf
xchg
int3
add
sub
xchg
fistps
fstpl
push
jo
lahf
add
cmp
xlat
arpl
xchg
aas
jp
cmc
xchg
out
adc
ja
test
and
add
rcr
pushf
dec
in
push
subl
nop
leave
dec
test
inc
imul
jecxz
lds
jns
pop
sbb
sbb
pusha
lea
fists
lods
arpl
sarl
or
push
jnp
add
imul
fstps
fidivrs
cli
fs
hlt
aaa
jo
repz
xlat
loope
mov
movsl
xor
movsb
aad
test
mov
test
cmp
enter
and
call
push
aam
insb
orl
jp
movsl
inc
aaa
sahf
ss
es
movsl
xchg
fs
cmp
sbb
negb
loopne
loope
jecxz
in
fiaddl
jl
xor
push
shr
add
cmp
aas
lock
insl
jp
push
and
lods
xorb
jno
cmc
cltd
mov
cmc
rcr
adc
scas
jg
xchg
icebp
add
je
shrl
ret
jmp
jmp
mov
push
jbe
xchg
test
pop
repz
test
ss
lret
ja
sti
adc
dec
and
xchg
outsb
pop
fwait
lods
mov
inc
js
fmul
or
mov
addr16
sti
movsb
andl
int
push
mov
dec
idivl
pop
test
je
adc
mov
gs
stc
nop
inc
mov
adcl
xchg
sub
and
or
stos
jge
mov
pop
adc
stc
mov
mov
sar
push
xchg
ja
mov
dec
adc
add
repz
lret
push
pop
into
cmpsb
inc
push
fldcw
push
dec
sbb
jge
inc
jb
in
push
or
fisttpll
sbb
xchg
push
in
fsubr
fadd
aaa
cmp
dec
scas
mov
cmpsl
insb
mov
imul
push
sbb
lahf
pusha
movsl
inc
ljmp
jne
mov
lds
push
mov
or
push
pop
dec
mov
test
lcall
and
js
add
pop
cmpsb
jo
scas
sbbb
xchg
dec
pop
outsl
mov
imul
data16
mov
mov
add
jbe
or
sti
stc
pop
and
mov
jmp
push
scas
cmpsb
cmp
xchg
hlt
xchg
add
ds
adcl
ds
mov
flds
or
jge
cwtl
pop
pop
ret
cs
rdpmc
insl
lods
notl
stc
dec
add
loop
pop
push
into
mov
mov
fstps
repz
jge
jle
ret
xorb
add
hlt
mov
add
arpl
les
jne
xchg
pop
mov
ja
mov
leave
sub
adc
mov
int3
ret
scas
cmp
idiv
ljmp
std
dec
test
mov
pusha
add
paddd
jae
mov
dec
lahf
xchg
cmpl
movsl
jl
je
adc
push
cltd
ret
rorb
push
mov
idivb
fs
leave
jae
sub
adcb
arpl
xor
inc
push
jnp
sub
loopne
std
icebp
xchg
xor
xchg
aad
pushf
es
sbb
push
and
lods
inc
cmp
dec
and
sub
push
movsl
imul
stos
or
xchg
mov
sub
mov
ds
mov
and
icebp
and
xchg
out
mov
sub
jge
sub
scas
push
fwait
pop
movsb
mov
into
cmp
jae
cmovns
xor
pop
xchg
scas
shlb
fmuls
bound
xor
lea
cs
dec
fisttpll
mov
sub
cmp
and
xchg
sbbl
or
sarb
inc
inc
sub
addr16
mov
scas
xor
lock
and
pop
mov
adc
xor
xchg
pop
rep
and
xchg
iret
mov
and
lret
loope
dec
adc
cltd
shrl
jmp
push
adc
add
imul
fsqrt
sti
popl
push
imul
out
mov
jp
fcompl
loopne
adc
fidivs
cmc
pop
ret
dec
rcll
xor
pop
pop
adc
dec
mov
push
mov
mov
mov
or
sub
or
das
or
loop
les
mov
out
cmc
shrb
sub
push
xor
cmp
or
or
insl
rcll
psubusb
jcxz
lods
or
out
xchg
xchg
lahf
push
es
mov
push
stos
cmp
pop
repnz
js
outsb
loop
aas
repz
fwait
lea
add
xchg
fmuls
scas
jb
sbb
enter
xor
cmc
int3
push
add
sahf
xchg
lahf
insl
and
sbb
in
cmp
aam
ret
mov
stc
inc
das
call
push
shrb
xchg
arpl
imul
ja
push
inc
mov
or
or
lods
fdiv
push
jns
xor
cmp
mov
daa
jns
into
cli
jae
inc
pop
push
fnstenv
pop
popa
xchg
ss
cwtl
mov
std
repnz
mov
stos
mov
icebp
roll
jmp
nop
je
and
dec
test
into
loop
loopne
xchg
pop
data16
in
cmp
dec
mov
adc
scas
xchg
xchg
fisttpl
jo
adc
push
lods
mov
in
cmp
fldcw
or
inc
scas
mov
fidivs
pop
fcomip
ret
or
addb
jo
shr
jge
fisubl
xchg
push
dec
insl
out
lds
mov
idiv
ds
add
dec
dec
aas
mov
xchg
call
ss
xor
mov
out
popa
aas
adc
sbb
cmp
fmull
pusha
inc
mov
mov
rorl
sbb
jb
arpl
push
stos
dec
lods
pop
add
xchg
xchg
insl
int3
fstpt
xor
fcompl
pop
adc
fsubr
std
dec
and
das
leave
sub
inc
pop
mov
std
jno
addr16
dec
loope
push
stc
mov
sti
pop
lahf
stc
cmpsb
dec
and
jle
or
or
and
data16
push
or
or
push
push
push
pop
mov
lea
pusha
pusha
cltd
push
sub
je
das
mov
in
cmp
or
xor
xor
pop
and
cmp
in
add
daa
outsl
sbb
sbb
xchg
sbb
ja
mov
jne
and
push
into
movsb
cld
or
xchg
mov
fcomps
jp
push
orb
sbb
rcr
nop
push
mov
in
dec
repnz
les
shll
dec
lret
mov
imul
xchg
mov
out
add
cs
out
pop
je
in
pop
sahf
cmp
xchg
nop
sbb
cmpsb
loope
int3
mov
pop
mov
cmp
je
inc
mov
sti
inc
mov
das
dec
adc
sbb
xchg
sbbb
pusha
int
or
mov
popa
subl
mov
icebp
call
add
hlt
cmc
nop
dec
sbb
jmp
ret
push
inc
std
cs
in
pop
call
inc
fidivrs
inc
daa
sub
js
adc
dec
leave
je
addr16
shll
xor
jo
cmp
lahf
fcmove
xchg
bnd
or
pop
push
lds
scas
jae
pop
enter
inc
inc
inc
lahf
pop
repnz
cmpsb
or
aaa
pop
lret
sub
jg
xor
push
adc
ret
push
test
and
mov
ss
sbb
jl
xchg
add
test
cld
mov
push
lret
push
sbb
cli
hlt
adc
mov
or
or
test
or
adc
mov
push
jnp
int3
test
fiaddl
test
orl
mov
cli
cmpsl
add
int3
pop
shr
inc
cmp
inc
outsl
or
pop
std
sar
shlb
mov
rcll
clc
setle
rorb
inc
gs
jge
pop
enter
jg
xor
sub
rolb
xor
adcb
insb
jecxz
ffreep
sti
fstpt
ja
loop
repnz
push
and
fs
dec
push
lret
xlat
jbe,pn
icebp
lds
inc
dec
mov
stc
jae
les
pushf
das
lods
push
ret
iret
aam
mov
clc
and
cmp
sub
loope
mov
shll
jg
inc
inc
ja
fidivrl
movsl
jno
inc
pop
cmp
mov
stos
pop
mov
mov
mov
es
fisubrs
loopne
xor
xlat
pop
stos
das
nop
subb
aam
inc
ds
loop
stos
or
xor
fwait
hlt
cli
cmc
jmp
cs
cmp
add
lret
lea
lods
sub
mov
or
outsb
out
push
dec
out
xchg
int3
ret
je
inc
repz
cmp
xchg
js
into
xorl
adc
jns
in
or
push
pop
dec
std
pop
pop
out
adcb
ficoml
mov
sbb
pop
and
jae
leave
movsl
insb
pusha
mov
movsl
cmp
loopne
clc
and
out
movsb
lock
add
xchg
fbstp
xchg
mov
sarb
adc
repz
leave
mov
out
inc
mov
dec
pop
outsl
out
cltd
inc
mov
push
and
or
mov
std
sbb
mov
mov
mov
mov
xchg
lahf
mov
rcl
popl
test
and
xchg
arpl
test
jp
aaa
aad
jns
or
fldl
test
stos
repnz
inc
push
pop
jge
frstor
rorb
js
and
movb
ljmp
xor
jbe
imul
mov
in
cs
dec
mov
fistps
sbb
inc
jns
cmp
mov
xchg
inc
jmp
add
repnz
mov
imul
dec
fbld
mov
fidivrl
test
mov
mov
int3
cmp
sub
inc
mov
cmpsl
test
jge
adc
mov
insb
push
insb
jg
clc
pop
cmp
mov
out
rcl
fidivl
das
ja
int
repnz
sahf
or
add
enter
jmp
leave
sarb
cmp
add
dec
jg
inc
rorl
jl
imul
idivl
fdivl
cmc
rorl
data16
mov
add
daa
mov
xor
mov
jecxz
int3
mov
adc
clc
push
lret
inc
add
daa
ljmp
or
pop
nop
dec
incl
push
xor
insl
stos
loopne
les
sbb
xchg
lret
das
loop
sbb
les
dec
cmp
xor
int3
jne
data16
mov
jmp
push
fnstsw
dec
inc
shr
test
cld
and
cmp
jge
insl
mov
pushf
movsb
push
lret
adc
js
cmc
pop
shll
sbb
jp
testb
mov
js
push
ss
sub
fistps
adc
fsubl
imul
mov
shl
cmpsb
aas
dec
push
loopne
adc
stos
daa
or
iret
pushl
mov
in
aas
pop
mov
mov
daa
mov
dec
mov
and
mov
push
pop
lods
sub
imul
mov
inc
jns
push
ss
je
jno
push
fisubs
shlb
call
orl
pop
pop
add
rolb
mov
dec
pushf
insb
mov
ss
sahf
sub
mov
mov
dec
test
push
cwtl
adc
push
push
pop
mov
and
cwtl
adc
and
prefetch
push
or
push
fbstp
fimull
mov
aas
cli
fnstenv
outsl
mov
or
ljmp
mov
stos
dec
mov
sahf
jl
ja
jmp
lods
xor
cmp
loopne
add
xchg
fs
jns
sbb
push
push
mov
add
rclb
or
je
leave
jns
dec
sbb
push
jle
adc
xor
cmp
insb
fdivrs
pop
stos
int3
mov
add
inc
add
rorb
or
mov
add
call
xchg
repnz
push
cmpsb
stc
sub
addl
adc
pushf
iret
repnz
mov
sub
jns
inc
ljmp
test
and
inc
daa
rcrl
into
mov
fwait
roll
idiv
sub
push
shlb
add
xor
stc
mov
shll
mov
jge
cmovno
std
jge
or
sbb
repz
mov
fiaddl
mov
arpl
mulb
push
lcall
negl
popf
fistpll
popf
sub
cmp
or
jbe
push
xor
sub
adc
adc
fcomip
lods
je
jne
xor
mov
int
push
cmp
pop
arpl
test
movsb
jecxz
lahf
cs
sbb
xchg
cwtl
lock
push
xor
add
imulb
inc
out
jnp
mov
sbb
int
ficoml
cmovg
aaa
push
add
xchg
mov
ret
push
not
mov
cmp
lea
aas
push
daa
outsb
adc
cmp
fildl
xchg
mov
jle
sub
mov
std
push
imul
lock
inc
add
rcll
repnz
xor
jg
xchg
pop
std
popf
mov
pusha
es
jns
mov
fs
test
lds
pop
sub
dec
insl
out
hlt
and
inc
loopne
mov
or
out
sbb
out
dec
rcrl
jnp
push
push
jno
dec
clc
adc
clc
mov
out
push
jg
dec
cld
lods
lods
leave
xor
imul
cmc
or
dec
push
mov
cmc
push
adc
push
inc
je
and
andl
sbb
pop
out
jecxz
out
jo
les
xchg
and
xchg
add
rclb
xor
jo
jns
pusha
aaa
leave
push
imul
lock
rcrl
pop
mov
scas
scas
arpl
hlt
cmp
inc
aam
pop
cmp
sbb
leave
aas
mov
dec
or
int3
xchg
mov
sub
aam
and
shll
pop
push
or
mov
iret
adc
leave
enter
imul
in
pop
aam
mov
aam
call
into
in
dec
mov
daa
and
ss
jge
push
xchg
in
hlt
push
in
jp
xchg
filds
inc
sub
sub
xchg
xchg
mov
clc
ja
jle
jecxz
push
sahf
inc
pop
mov
pop
mov
pop
loop
lea
ja
mov
sbb
into
sbb
sub
dec
sbb
aas
ret
jp
movb
enter
mov
adc
xchg
inc
mov
int3
adc
ljmp
cmp
sbb
xor
pop
mov
sbb
pop
pop
outsb
fsubrs
xor
ja
add
ja
inc
add
cwtl
mov
int3
adc
jno
shlb
leave
scas
push
push
jl
clc
lahf
jmp
popw
xchg
mov
mov
lahf
clc
mov
out
or
pop
fidivrs
aaa
bound
setp
nop
dec
mov
jge
sub
clc
int
sti
loope
mov
addr16
dec
mov
adc
fmul
iret
in
mov
sar
xor
bound
jo
mov
mov
jg
std
sub
mov
xchg
add
data16
pushf
fsubr
cmc
push
pop
pushf
sbb
mov
cmp
jle
push
push
jecxz
push
sbb
pop
jne
dec
bound
jmp
ror
stos
sbbb
jle
loope
mov
mov
sub
jl
cld
dec
mov
je
mov
in
pop
fidivrl
xor
xor
lods
out
xchg
sbb
scas
xor
xchg
mov
pop
dec
lahf
icebp
popa
xor
movsb
shr
inc
out
cmp
pop
adc
add
dec
lret
leave
repz
and
call
out
inc
rorb
jae
sbb
pop
mov
lcall
sbb
cmc
gs
aam
dec
mov
xor
mov
jne
cmp
jmp
pusha
push
mov
loopne
lods
jle
cs
push
sbb
xchg
sub
loop
or
pop
cli
cli
loopne
in
in
cli
shl
push
cwtl
pushf
adc
insl
repz
stc
jo
xchg
fsubp
out
popf
mov
lret
int3
pushf
jo
or
fldenv
in
repz
inc
push
push
outsl
int3
jg
jge
cmp
jo
nop
pop
ret
mov
jmp
std
jg
lret
mov
fs
aaa
fdivrs
lret
fsub
add
jge
popf
or
add
pop
cmpb
lret
jmp
das
aam
push
bound
frstor
aas
sbb
enter
out
adcb
mov
hlt
jmp
xchg
and
mov
inc
push
inc
or
roll
push
aam
repz
pop
fcompl
loopne
xchg
ret
insb
les
cmp
xorb
imul
int3
test
pop
cli
test
int
pop
cmp
data16
and
push
jle
out
or
dec
jb
jnp
adc
mov
inc
popa
sub
fwait
mov
sti
jbe
sbbl
call
int
push
hlt
cwtl
aad
mov
push
fnstenv
jb
dec
sti
lods
nop
outsl
add
and
sub
jo
add
cmpsl
jnp
xlat
mov
xchg
or
jb
jne
testl
loopne
xchg
jo
and
and
jne
cmpsb
mov
sbb
repnz
call
mov
sbbl
pop
jb
negl
push
xor
inc
out
in
sbb
fnstsw
dec
and
xorl
mov
push
xor
jg
aas
repz
mov
xchg
rolb
xchg
pop
jo
and
shrl
nop
mov
sub
xlat
divb
xchg
stos
lock
add
cli
sub
and
sub
loop
psrld
mov
adc
inc
mov
adc
jnp
xchg
mov
sar
mov
sub
mov
lret
mov
mov
pop
xchg
call
insb
test
adc
xchg
icebp
negb
imul
and
ljmp
mov
fiaddl
mov
hlt
jns
stos
jnp
cmpl
inc
cwtl
add
ss
mov
dec
lock
dec
sub
mov
and
or
loope
xor
sti
jecxz
rolb
jmp
cmp
pop
ror
cwtl
dec
std
push
xor
es
push
pop
push
or
rcl
fisttps
push
push
add
repnz
scas
cmc
jecxz
leave
dec
pop
movsl
jle
mov
mov
shll
int3
loope
push
jb
jl
mov
ret
xor
loopne
cs
sbbl
add
xchg
ret
daa
pop
ret
mov
icebp
cmp
stos
sbb
rclb
lahf
mov
or
ret
mov
xor
adc
pop
pop
jecxz
push
mov
add
mov
xchg
cmp
fs
out
dec
dec
push
sub
pop
cmp
dec
insb
mov
clc
lods
xchg
in
pushf
add
mov
xchg
dec
dec
push
insb
xchg
push
xlat
in
sub
jb
cmp
sbb
lds
daa
mov
and
add
testl
imul
sti
mov
inc
or
repnz
mov
cwtl
in
std
adcb
adc
fnstcw
cmp
cmpsl
push
sbb
push
jbe
mov
jp
aad
pop
ds
scas
subl
jecxz
push
cmp
roll
iret
jecxz
sbb
sbb
pop
inc
or
divb
test
stc
push
hlt
xlat
adcb
ljmp
cmpsl
mov
or
and
add
scas
pop
add
add
repz
sub
aad
in
aaa
lock
lret
dec
mov
cli
jae
push
cli
orl
sub
pop
ret
sbb
cmp
fst
mov
out
inc
cmp
sbb
pushf
sub
scas
xor
movsl
and
push
insl
cmp
in
adc
stos
mov
jbe
mov
movsl
adc
jb
xchg
xchg
repz
leave
push
cmpsl
lods
and
xlat
adc
aam
pop
mov
adc
sub
pop
shll
fsubl
jmp
fistl
lahf
jnp
mov
repnz
ret
dec
dec
xor
fnstenv
xor
jnp
mov
jg
or
adc
lahf
rcrb
sti
and
mov
xor
popf
lock
and
cmc
push
xchg
mov
mov
dec
rcl
jo
sub
outsl
jo
adc
aaa
sub
cmp
push
add
lea
cmp
sti
sbb
cs
cmpsb
loop
adc
js
ss
inc
out
and
mov
cmp
aad
imul
pusha
jp
movsb
inc
pop
push
mov
fsubr
shrl
pop
out
in
pop
cmpsl
dec
imul
rolb
lods
es
cmpsb
jmp
fistl
das
cmpsb
insb
es
hlt
clc
ja
mov
movsb
push
fidivs
push
loope
es
idivb
sub
je
mov
adc
repz
fistpll
push
jne
insb
mov
jg
daa
pushf
repnz
xchg
in
clc
insb
test
and
mov
cmp
cmp
mov
pop
lds
bound
lods
imul
push
adcb
sbb
dec
jno
outsl
lds
cmp
add
xor
scas
arpl
cmp
and
in
or
inc
push
adc
in
call
xchg
hlt
adc
repnz
xchg
rcll
push
and
cmpsb
jbe,pn
ljmp
in
dec
dec
icebp
mov
sbb
pop
mov
mov
cmp
mov
mov
xor
jecxz
out
dec
xor
xchg
lahf
mov
jg
xlat
jmp
jecxz
ss
pushf
pop
test
les
sub
ret
jl
pop
mov
lea
and
mov
test
add
jae
mov
ret
lahf
aam
mov
cmp
daa
pop
xchg
dec
rcrb
pushf
jp
imul
sub
dec
push
cmp
adc
leave
push
cs
push
cld
scas
ret
jo
ficoml
popa
dec
push
add
add
fcmovnu
and
mov
ds
pop
lods
xor
sub
inc
cltd
in
cmp
jecxz
lcall
sbb
add
ja
hlt
mov
or
pop
orl
adc
adc
dec
into
xchg
xor
jmp
cmpsb
dec
adcb
lcall
mov
add
fcoms
xor
cmp
pop
hlt
insl
cmp
or
dec
or
test
xchg
mov
push
mov
or
test
int
jg
movsl
pop
scas
insb
lret
push
pusha
js
daa
inc
push
pop
mov
sbb
das
adc
cmp
call
adc
das
fldenv
mov
and
jge
testl
sbb
subb
pop
push
pushf
call
mov
add
out
push
dec
xchg
clc
rclb
lock
xchg
adc
adc
inc
add
cmc
hlt
push
pop
dec
shrl
lds
ss
repz
jbe
adc
dec
test
out
mov
subl
xchg
or
repnz
or
imulb
mov
fldcw
push
pop
xorb
mov
xor
insb
xor
jl
leave
mov
jno
sti
fs
sti
add
adc
xchg
pop
hlt
and
jno
in
xor
mov
shrb
sahf
mov
inc
ret
xor
xor
cmp
adc
aam
pop
jp
leave
setns
fldenv
loop
sbb
inc
add
inc
add
push
sub
mov
test
push
shlb
sbb
movsl
mov
dec
shr
scas
add
xchg
sub
es
pop
xor
mov
sub
pushf
insl
out
xor
loopne
dec
mov
pushf
add
aas
insb
lock
lock
lds
jne
in
aad
mov
dec
mov
jmp
outsl
mov
cmc
in
mov
cltd
pop
insl
xchg
xchg
ficoms
sbb
xchg
movsl
outsl
and
das
jno
ret
inc
sbb
hlt
inc
mov
sbb
fidivl
scas
xchg
adc
scas
mov
xchg
in
leave
out
imul
lcall
pop
ret
es
in
cld
inc
mov
sahf
jl
arpl
or
push
xorb
rorb
sbb
jbe
dec
js
add
xchg
into
pop
sti
pop
test
test
xlat
imul
and
cmp
cmpsl
nop
lods
mov
add
xchg
jnp
lock
inc
or
gs
jge
push
test
push
xchg
sbb
mov
loopne
add
lcall
inc
sbb
pop
aas
add
nop
mov
cmp
int3
data16
inc
fbstp
loope
mov
add
out
sahf
add
mov
or
or
sahf
sbb
cld
lcall
push
cld
cmpsl
adc
int3
jle
fmuls
sub
cmp
outsb
clc
aad
or
pop
pop
pop
dec
mov
jecxz
cmpsl
lods
movsb
add
mov
sti
mov
mov
shl
in
jg
aam
mov
mov
rcll
sbb
addr16
xchg
popa
inc
mov
or
add
rep
enter
es
fnsave
sbb
out
adc
imul
adcb
mov
adc
scas
cmp
data16
call
movsl
xchg
and
mov
aas
pushf
inc
into
and
push
jo
outsl
and
mov
xor
or
or
jae
rcl
insb
std
stos
stc
dec
lahf
sub
fldl
mov
cmp
roll
mov
ljmp
sbb
jnp
aam
je
lret
dec
adc
push
mov
imul
stc
js
xchg
mov
adc
std
or
inc
mov
pop
xor
lods
push
inc
mov
out
lods
sbb
cmp
movsl
not
mov
inc
into
cmp
stos
loope
mov
mov
dec
lea
jecxz
mov
add
cmp
cmp
jb
int
lock
jae
popa
daa
lret
jo
sub
lcall
test
stc
or
and
and
lcall
lret
lret
add
jns
inc
icebp
adc
and
lods
cmpb
aad
adc
pop
sub
add
cwtl
into
or
pusha
inc
ja
in
mov
outsl
sbb
in
xchg
sahf
ret
arpl
enter
outsb
test
mov
dec
jmp
test
test
inc
and
sti
in
ret
or
jge
inc
cmp
cmp
dec
fistps
mov
xchg
mov
test
ret
test
adc
add
cwtl
jo
arpl
add
mov
sbb
sbb
int3
xor
cmp
sub
xor
inc
and
push
mov
sub
popf
movsb
jecxz
sbb
add
and
test
lcall
push
adc
xchg
inc
bound
cmp
call
cwtl
cld
add
fs
fists
aad
in
movsb
add
cmp
jp
lods
loope
mov
cltd
mov
pop
dec
cmp
test
jno
mov
xor
fwait
xchg
ds
sbb
lahf
mov
shl
mov
sbb
mov
mov
adcl
inc
bound
mov
push
sub
fisttps
popa
pop
lahf
mov
adc
stos
int3
push
or
mov
mov
mov
mulb
cmp
js
jb
and
sub
and
in
pop
xchg
jns
mov
aas
sbb
out
xchg
push
add
fisttps
pushf
dec
inc
out
mov
and
pushf
or
lret
gs
ja
mov
decb
and
or
xor
dec
pop
sbb
lods
mov
pop
shlb
and
cmp
lea
jbe
dec
pop
sub
push
mov
bound
js
aas
ficoms
aad
sub
movsb
mov
dec
sahf
daa
cmp
cmp
orb
xchg
dec
inc
sahf
mov
mov
cmp
std
pop
xchg
imul
js
xor
pop
ret
stc
push
shl
inc
dec
xchg
xchg
dec
jmp
bound
orl
pushf
mov
jmp
add
pusha
jb
push
outsl
adc
xchg
push
fdivr
push
inc
pop
aad
icebp
bound
shll
push
data16
xchg
push
out
outsl
sti
mov
dec
and
loopne
xchg
sub
dec
or
mov
xchg
jnp
movsl
cltd
inc
mov
outsl
in
dec
ret
mov
addr16
lock
add
filds
dec
fsubrl
lea
int3
lds
je
inc
mov
fucomip
js
mov
sbb
cmpsl
push
cmp
pop
sub
sub
push
sub
mov
mov
jg
ljmp
xchg
mov
lods
pop
loop
jge
test
mov
lds
repz
and
mov
mov
call
jle
fstpl
repnz
or
ljmp
add
fdivr
cld
clc
lock
jmp
mov
pusha
adc
lock
inc
int
repz
arpl
fwait
push
lar
fidivl
add
and
xor
and
lret
jne
jle
out
sbb
mov
add
and
dec
setle
imul
test
pop
jg
test
rcll
aas
pop
inc
pop
enter
pop
lea
dec
mov
push
enter
adc
xchg
inc
call
and
call
lret
jge
adc
push
lret
mov
std
int3
dec
push
jle
mov
stos
je
push
or
xor
int3
push
sbb
sarb
or
cmp
stc
pop
xor
loopne
add
xchg
mov
fdivs
sahf
mov
push
push
sub
dec
dec
lcall
mov
cmp
scas
xchg
mov
fnsave
insb
or
xor
xchg
xor
dec
jle
js
loop
ja
dec
push
daa
inc
adc
ljmp
dec
inc
add
fidivl
xchg
ds
into
and
cmpsb
mov
jmp
out
fucomip
ljmp
sub
lock
jg
mov
call
loopne
mov
xchg
shr
jle
lods
fisubl
mov
pop
negb
fsubrs
icebp
add
and
aas
mov
daa
push
jne
aad
add
or
cmpsb
adc
cmp
fwait
int
pop
movsl
adc
mov
loopne
cld
sahf
repnz
mov
pop
in
in
gs
push
sahf
push
inc
or
fbld
or
mov
mov
mov
in
outsl
pop
idiv
cmpsl
icebp
add
push
bound
add
iret
outsl
mov
push
or
les
inc
int
mov
lods
sahf
sbb
jo
adc
pop
enter
dec
adc
jle
push
adc
sti
cli
hlt
xor
fwait
mov
or
fbstp
mov
push
aaa
sub
mov
ds
inc
cmp
and
xor
push
stc
sbb
insb
divl
jg
lea
pop
imul
dec
inc
xor
out
mov
push
mov
pop
rorb
inc
pop
pop
subl
orl
jecxz
sub
cmpsb
mov
ret
xchg
nop
dec
stos
popf
push
mov
dec
pop
mov
sub
inc
xor
or
iret
testl
or
xchg
stos
lods
add
push
nop
loop
push
mov
ficoms
mov
std
push
sti
shll
adc
mov
dec
icebp
daa
imul
aad
leave
pop
pop
mov
repnz
aad
setl
std
push
out
jl
and
inc
and
xor
les
fldl
add
add
dec
enter
push
adc
push
shlb
dec
cmp
xchg
test
dec
push
iret
sbb
sbb
pop
mov
bound
es
jno
mov
xor
mull
xor
shll
and
fldcw
add
inc
xor
mov
inc
stc
fildll
xor
jge
jb
imul
bound
xor
sub
fdivrs
xchg
faddp
mov
std
dec
cmc
idivl
xchg
mov
dec
shlb
push
leave
lea
cmp
push
add
ja
lock
xor
mov
push
ret
lret
lock
dec
adc
mov
mov
out
out
ds
imul
std
mov
xor
add
adc
insl
test
stc
out
fld
aam
or
dec
lcall
add
ret
mov
arpl
aam
pop
dec
push
sub
dec
in
test
inc
leave
lea
repnz
test
adc
in
mov
mov
js
in
jne
std
dec
jb
ljmp
rorb
sbb
fdiv
lods
and
frstor
cmc
sti
js
sub
cmp
xor
mull
mov
frstor
jle
cmp
xor
xchg
lods
pop
or
imul
xor
inc
ficompl
inc
insl
sbb
inc
popa
cwtl
mov
mov
lahf
or
test
hlt
push
sbb
dec
jp
fwait
pop
insb
lret
mov
xor
stos
outsb
mov
aam
out
cli
pusha
call
xchg
hlt
inc
popf
push
cmp
jbe
or
dec
in
dec
pop
rclb
movsl
fdivs
add
push
push
je
nop
fdivrs
dec
mov
cltd
adc
stos
test
xlat
cmpsb
mov
mov
add
mov
and
aad
mov
test
jp
inc
aam
incl
or
mov
or
popa
jg
sbb
adc
int3
sub
or
and
jnp
sub
cmp
mov
je
sub
or
mov
lods
add
mov
adc
mov
dec
aaa
aas
aad
adc
mov
add
mov
cltd
pusha
adc
ret
enter
les
inc
inc
fsubs
push
mov
outsl
or
movsb
xchg
fstp
popa
sti
hlt
pusha
and
dec
mov
or
jae
push
mov
repnz
js
shl
push
bound
adc
int
rcr
loop
lcall
mov
sti
lods
sbb
jge
push
inc
ret
mov
inc
cs
lock
mov
lret
dec
imul
add
xchg
mov
test
cmc
enter
xchg
or
mov
mov
sub
std
pop
aam
mov
xlat
and
dec
pop
jp
add
out
adc
and
mov
movsl
icebp
outsb
xchg
or
inc
addr16
jne
mov
cs
subb
outsl
stos
and
mov
xchg
xchg
jo
dec
jne
test
clc
jb
enter
js
rolb
sarl
js
cmpsb
sub
mov
and
nop
ror
call
outsb
test
clc
mov
dec
mov
push
mov
push
push
jle
jo
jns
mov
ss
push
or
mov
lods
out
sbb
push
subps
daa
dec
out
mov
add
inc
mov
jb
stos
adc
cmp
cs
dec
push
pop
fstl
pop
movl
pop
add
xor
mov
inc
ret
jae
mov
xchg
push
mov
cmpsl
adc
mov
xchg
ss
aad
std
pop
inc
fwait
aas
iret
mov
out
inc
xchg
arpl
dec
push
mov
frstor
lods
or
icebp
sbb
repnz
fs
cmp
and
sbb
mov
scas
aaa
mov
scas
lock
out
lds
cltd
lret
cld
mov
mov
add
mov
test
fldl
in
pop
ret
xor
mov
loop
aam
mov
loopne
dec
lcall
aam
cmc
repz
adc
mov
mov
lahf
push
jp
xor
je
rcl
sahf
xchg
adc
push
aam
pushf
cli
mov
mov
xchg
mov
sub
fsubrl
fisttpll
dec
scas
push
loop
das
out
inc
call
inc
out
mov
imul
movsl
push
jecxz
cmp
cmpsb
mov
fwait
pop
mov
lods
js
mov
cli
mov
repz
xor
push
and
repnz
jl
out
cmp
fs
jbe
stc
cmp
daa
test
js
xlat
xlat
cmp
clc
jle
sub
jle
in
sbb
dec
aaa
mov
push
inc
xchg
leave
cmp
out
dec
or
dec
jmp
mov
das
nop
popf
inc
test
rclb
mov
cmpsb
jnp
push
popa
sub
cmp
pop
inc
lret
mov
mov
arpl
dec
andl
sahf
test
xlat
scas
cwtl
and
hlt
inc
lock
scas
cmp
lcall
ja
xchg
adc
iret
xchg
out
nop
dec
loopne
jbe
dec
js
xor
hlt
mov
aad
add
movsl
movsb
push
jle
lds
test
popa
mov
cs
xchg
mov
sbb
mov
dec
inc
adc
int
dec
jmp
inc
ficoml
imul
cltd
loopne
sub
cli
adc
fistl
test
cmp
scas
loopne
mov
das
mov
jl
mov
cmp
rorl
xor
nop
pop
lea
sbb
pushf
adc
dec
and
inc
imul
stos
imul
test
xor
repz
das
std
adc
fldln2
pop
pop
and
or
les
jnp
fwait
pop
data16
push
push
add
push
pop
mov
aad
dec
lcall
movb
jbe
jle,pt
xor
addr16
pop
shl
jg
fucomip
xchg
fwait
out
inc
push
fwait
sub
sub
popf
push
lds
mov
cmp
fs
aas
repz
retw
outsb
add
or
cmp
iret
jae
lcall
sarb
mov
sub
inc
addr16
sub
jle
push
ror
cli
dec
jns
popl
and
mov
jo
inc
gs
inc
repnz
sub
pushl
push
aad
subb
ljmp
std
pusha
push
adc
sbb
dec
add
inc
fdivrs
xor
jns,pn
movl
mov
mov
pushf
pusha
test
push
mov
int3
pop
pushf
jb
pop
push
shlb
sub
sub
lods
push
sbbb
iret
xor
push
sub
inc
dec
int3
cltd
es
push
cmp
fsubs
jnp
imul
jl
inc
fmul
subb
lret
cmc
idiv
xchg
mov
mov
out
popf
cmp
imul
repnz
lcall
adc
mov
popa
adc
cld
or
jge
add
cli
loopne
or
jb
loop
test
je
add
xor
pop
mov
in
sub
arpl
hlt
setp
test
in
addr16
sbb
jecxz
call
in
mov
sti
mov
push
mov
or
cmp
jle
jecxz
in
insb
add
sub
popf
cmpsl
ljmp
jne
mov
add
loop
cmp
sub
movsb
jp
outsl
dec
mov
dec
lods
lahf
xorl
cmpsl
out
mov
pop
aam
leave
loopne
rcrb
popa
cltd
aad
inc
ljmp
fnsave
sarb
xchg
cld
lret
fldl
loop
sub
or
addr16
jbe
pusha
lret
loopne
into
adc
lret
push
leave
fwait
dec
jno
xchg
pop
inc
jb
testb
fmul
pop
pop
mov
adc
xchg
test
cmp
mov
adc
fldt
adc
fs
and
pop
pop
xchg
xchg
lcall
scas
fidivrs
xor
outsb
sbb
clc
push
mov
notb
sbb
fisubrl
pop
sub
inc
mov
hlt
pop
adc
push
sbb
popa
nop
cwtl
leave
bnd
add
cmpsb
mov
push
inc
mov
dec
out
subl
mov
ds
cmp
test
jge
adc
fdivl
jg
into
in
lcall
mov
repz
jmp
mov
jnp
fcoml
dec
sarb
jle
mov
xchg
hlt
fcoms
stc
push
popa
push
bound
inc
shl
cmp
stc
dec
pop
sbb
sbb
popl
add
mov
fistpl
mov
sub
and
ja
add
iret
test
jo
js
push
push
adc
or
inc
sbb
xchg
mov
or
adc
mov
dec
mov
in
orl
sub
outsb
push
mov
or
cmp
outsl
add
ja
movsb
add
hlt
cmp
lods
js
and
fiaddl
nop
mov
and
jne
ret
cmpsb
jg
outsl
aam
add
fwait
iret
enter
cmp
mov
mov
nop
aas
xor
mov
lds
mov
jmp
into
andl
inc
insl
jp
pop
out
sahf
ret
pop
icebp
outsb
push
popa
adc
ss
cld
cwtl
ret
ds
mov
loopne
dec
cmp
xlat
dec
pusha
sbb
adc
xorl
push
enter
and
xor
xchg
mov
xchg
out
scas
shll
mov
popa
dec
addr16
imul
add
mov
call
stos
inc
lret
call
mov
pcmpeqb
scas
shl
cwtl
ss
mov
insb
mov
test
dec
xchg
xchg
push
addr16
lds
out
in
test
adc
push
pop
movsl
repnz
mov
jnp
xor
push
mov
jl
mov
or
cs
les
jp
adc
push
mov
bound
je
jae
dec
jnp
xor
mov
xor
sbb
fidivrs
mov
lock
imul
mov
rcrl
jle
jg
inc
dec
inc
push
xchg
and
ss
push
cmp
mov
and
orb
in
sbbl
or
out
aaa
sbb
imul
push
test
push
sub
cwtl
pop
gs
imul
lods
lods
hlt
imul
ror
jnp
das
movsl
pushf
dec
xchg
cwtl
xchg
leave
mov
sub
pop
push
and
fsubrs
adc
out
or
notb
dec
js
jo
outsl
mov
imul
pop
aam
pusha
xchg
mov
mov
dec
xchg
adc
stc
pop
push
mov
test
adc
imul
sbb
lcall
cmp
and
stos
int3
arpl
sahf
repz
xchg
lret
lahf
push
lods
or
and
stos
mov
mov
shl
outsb
mov
imul
xchg
fs
pop
into
aaa
inc
or
test
rorb
pop
sti
or
jl
aaa
add
lret
inc
das
mov
push
dec
jno
inc
pop
fistpll
xchg
add
das
stc
imul
gs
js
pop
sbb
pop
mov
je
insb
adc
pop
fsubs
adc
or
mov
dec
pop
mov
fsubrl
divb
cmp
sbb
lret
cmp
mov
ljmp
add
or
or
push
mov
and
push
in
stc
inc
adc
imul
jl
pop
and
xchg
adc
xor
adc
test
fcoms
mov
inc
mull
inc
inc
mov
pop
cld
pop
cmp
jp
jp
fimuls
aas
jmp
data16
mov
or
ss
jle
xchg
push
popf
push
cmp
stc
adc
icebp
cltd
mov
inc
push
xlat
jecxz
pop
dec
iret
test
pop
lret
sti
cld
jbe
pop
jno
pop
idivb
jecxz
clc
out
inc
leave
icebp
cmpsl
push
in
sahf
lods
and
leave
mov
xchg
pop
or
jmp
test
pop
pop
in
add
in
cmp
xchg
ljmp
mov
ljmp
gs
and
cwtl
pop
push
in
aas
mov
add
and
mov
and
sbb
jmp
push
repnz
cmp
popa
imul
or
push
add
sub
mov
cld
jbe
sub
jnp
mov
sub
mov
loop
push
pop
sub
add
icebp
mov
dec
add
int
aaa
loop
cmpsl
rorb
incl
dec
xor
sahf
dec
xchg
and
in
xor
inc
outsl
aas
lahf
pop
cmp
js
out
fwait
jp
lods
jnp
outsb
mov
sti
scas
sbb
jb
mov
mov
cmp
mov
mov
popf
test
repnz
or
xchg
pop
and
jb
and
int
js
popl
ret
idivb
push
dec
sbb
ret
push
test
add
jbe
xor
pop
inc
out
mov
dec
dec
loopne
or
mov
mov
ds
or
std
cmp
aas
pop
loope
adc
push
aad
xor
push
pop
add
in
xor
xor
std
and
cmp
sub
inc
ret
dec
xchg
push
mov
sarb
out
mov
sbb
jge
outsl
imul
clc
das
jno
cwtl
inc
leave
addr16
mov
addr16
roll
inc
cmpsb
jg
xchg
push
cmp
sbb
rorl
loope
push
mov
ljmp
in
xchg
ret
in
mov
fidivl
mov
loope
xor
xchg
sub
mov
cmp
xchg
xor
loopne
xchg
inc
sbb
das
fldenv
pop
add
jmp
fnstenv
jge
cmpsb
inc
cmp
pop
js
mov
dec
mov
dec
out
idiv
sub
loope
mov
cli
or
loope
jo
pop
inc
outsl
or
data16
decl
cmc
clc
loop
adcl
mov
rclb
int
gs
imul
andb
and
sub
pop
out
in
push
pop
movb
stos
aas
cmp
into
lret
movb
mov
mov
roll
sub
pushf
shll
sbb
pop
jle
mov
repz
int
out
add
xchg
lahf
ret
fwait
sub
or
cmp
push
sarl
rcrb
inc
jl
xchg
sbb
fs
xor
mov
iret
dec
aad
lret
pop
jbe
es
arpl
or
hlt
idivl
mov
inc
dec
mov
out
fwait
dec
sub
cmpl
xchg
lret
sub
popa
adc
xchg
es
es
in
xchg
pop
lods
pusha
pop
or
enter
dec
push
cmp
dec
nop
jae
fdivs
rcrb
mov
rcrb
cmc
mov
sub
aas
dec
clc
mov
jb
ret
xchg
das
or
fadds
out
cs
incl
icebp
mov
mov
sbb
test
pop
push
xchg
call
lea
lret
fcmovnu
gs
mov
sub
mov
stc
jne
push
enter
mov
push
iret
std
cmp
in
mov
or
and
rorl
sbb
cmp
inc
in
lahf
fbstp
cmc
and
or
dec
sbb
cmpxchg
cmc
cmpb
pop
mov
bound
in
pusha
sub
or
out
stos
dec
out
push
ds
or
imul
jp
mov
nop
daa
rol
ja
adc
iret
jne
sbb
push
pop
pop
inc
mov
dec
lock
cmp
int
adc
outsb
loopne
in
and
dec
mov
rcrb
xorb
cltd
cmp
or
xchg
mov
jge
push
xor
add
clc
js
pop
div
insl
pop
data16
and
pop
and
lods
pop
pop
bound
sahf
xchg
sbb
pop
jp
cmpsl
mov
xlat
faddp
insb
lret
mov
and
sub
pop
repnz
jno
push
lahf
inc
dec
and
push
push
aam
push
pop
sbb
xchg
sbb
push
xor
test
add
ss
xchg
xchg
test
and
dec
fldenv
push
dec
aad
push
xchg
push
jmp
and
pop
in
andl
rcr
dec
xor
test
jae
adc
pop
mov
fistpl
pop
mov
jecxz
sbb
ja
push
mov
ljmp
aaa
out
cmp
add
xchg
mov
sarl
mov
mov
and
adc
lahf
fsubs
dec
pop
mov
lahf
es
pop
std
lea
mov
in
cli
cmp
jge
pop
dec
xchg
pop
sbb
leave
adc
inc
rclb
pop
xchg
mov
or
sub
adc
rcll
outsl
xchg
es
test
bound
and
outsb
sbb
push
xchg
adc
pop
cmpb
rcr
dec
cmpsb
test
aas
jno
lods
pavgw
nop
nop
cmp
jno
mov
xchg
test
push
fld1
dec
mov
mov
shr
popf
jb
insb
pop
mov
sub
nop
push
test
mov
adc
mov
mov
cmpsl
cmp
cwtl
popa
cmp
push
xlat
inc
mov
inc
dec
push
cmp
je
out
das
pop
cmp
xchg
and
push
insb
orb
sub
cli
xchg
jp
ja
ret
dec
mov
xchg
cmp
jb
dec
mov
mul
jo
and
xchg
mov
icebp
test
push
jle
push
inc
into
cwtl
test
call
xchg
daa
adc
sub
scas
xchg
xor
xchg
mov
rolb
notb
cltd
mov
sbb
push
and
dec
pop
ds
sub
xchg
pusha
sub
dec
sub
pop
dec
cld
add
in
lock
js
add
and
fldl
sbb
notb
jns
lds
jne
adc
or
je
sub
push
xor
mov
mov
mov
popa
jbe
lcall
lods
inc
xor
dec
test
pop
fmull
movsb
jnp
sub
sub
in
leave
xchg
rolb
std
movsl
cmpl
xor
xor
rcll
mov
adc
jecxz
sub
std
shl
mov
jmp
cmpb
lods
je
popa
mov
rol
push
or
xchg
xor
push
sti
inc
mov
mov
ljmp
jmp
hlt
cwtl
icebp
mov
inc
in
and
push
popa
xchg
dec
fadds
roll
and
inc
jno
and
je
push
xor
jne
imul
cmp
ljmp
rorb
pop
add
hlt
fwait
ja
rcll
and
sahf
dec
push
pushf
cmpsb
scas
int3
cmpsl
ja
test
pop
ds
in
gs
sti
and
sub
xchg
inc
pop
iret
ret
insb
int
sti
dec
mov
call
stos
inc
sub
cmp
lods
jae
imul
outsb
sarl
xor
rorl
mov
jg
cli
sbb
in
xchg
mov
mov
jl
xor
lock
sbb
push
test
pminub
mov
pop
pop
jg
adc
sub
shrl
mov
into
std
add
cwtl
call
divb
clc
add
push
lock
decb
add
sbb
out
in
pop
sub
cwtl
lret
dec
add
dec
movsl
out
das
movsl
adc
cmc
hlt
mov
es
pop
movsb
xchg
gs
add
in
pusha
int
inc
out
fists
cmp
cmp
in
stc
mov
js
js
outsl
jae
push
enter
sahf
or
mov
mov
lea
add
xor
jmp
sbb
inc
adc
call
mov
push
push
cmp
xor
enter
mov
ss
iret
je
scas
sahf
aaa
jnp
pushf
push
inc
sbb
fsubl
add
inc
fwait
add
push
in
push
mov
div
inc
repnz
jns
stos
mov
mov
cmpsb
mov
and
cmp
sbb
shll
jl
into
cmp
cmp
in
movsb
lea
xchg
adc
jae
xchg
ljmp
mov
jbe
mov
mov
stos
adc
sti
imul
pop
stos
xchg
push
add
loop
pop
or
pop
ret
pop
out
bound
sbb
push
jno
outsb
shlb
mov
aad
mov
cmp
movsl
inc
mov
cmp
xor
xchg
in
and
mov
xchg
mov
add
nop
leave
mov
push
xor
clc
loop
addr16
inc
pop
test
daa
jnp
push
lods
out
ficoml
lods
and
jmp
sub
push
out
dec
lods
jg
call
cmpsl
or
std
daa
movsb
sbbb
xchg
or
js
aad
testb
pusha
cmp
add
test
mov
cmp
inc
hlt
call
add
bound
sbb
sub
stos
push
xor
xchg
inc
mov
dec
mov
or
iret
in
jmp
lahf
cmpsl
cmp
clc
jo
sub
fs
sbb
movsl
shrb
jne
cmp
push
sbb
xor
jne
rcll
in
mov
dec
sbb
mov
xor
shl
inc
arpl
pop
sbb
cmp
cs
pop
ret
pop
je
cmp
fbstp
xor
shll
lods
xlat
jle
add
es
lock
icebp
mov
pop
repnz
mov
push
popa
shrl
dec
imull
and
je
or
pop
fisubrs
xor
ss
lcall
imul
mov
dec
or
sbb
or
mov
pop
xchg
mov
lea
iret
or
mov
dec
cmpsb
inc
and
pop
into
ja
sbb
cli
arpl
push
adc
sbb
xchg
jmp
add
inc
push
mov
mov
jb
push
popf
in
jg
ss
push
cs
mov
push
dec
cmpsl
pop
push
dec
push
dec
mov
sub
std
and
gs
repz
roll
aaa
adc
dec
data16
stc
je
cmp
jmp
lock
icebp
and
cmc
xchg
fwait
pop
lahf
mov
nop
sub
mov
cltd
mull
push
xchg
xchg
sub
pop
cmpb
pop
inc
jl
cmc
cld
fidivs
pop
add
hlt
clc
shl
dec
fdivs
push
call
out
mulb
inc
mov
outsb
in
mov
test
out
lret
mov
daa
push
out
fidivrs
loop
jbe
rorl
insb
sub
inc
mov
jge
cmc
stc
iret
insb
mov
or
sub
add
lods
jmp
arpl
mov
push
dec
inc
scas
and
scas
data16
and
xor
sub
nop
push
js
ss
sub
loopne
into
sbb
mov
mov
jecxz
xchg
inc
in
xor
test
pop
leave
mov
fsubl
jns
lcall
shrb
test
add
cwtl
xor
dec
mov
or
loope
imul
xor
mov
int3
or
sbb
adcl
insb
add
inc
inc
popa
aam
sbb
int3
adc
cmp
lds
rorl
lret
mov
pop
clc
pop
jnp
push
shll
repnz
sbb
dec
lret
dec
sbb
push
pop
cmpsb
adc
xchg
loop
dec
iret
fucom
inc
mov
std
imul
pop
lcall
mov
lret
push
fcoms
push
enter
dec
movsb
xlat
cld
in
pop
cmp
addl
xor
mov
mov
pop
inc
mulb
imul
cld
push
jne
jnp
in
jae
push
push
pop
mov
sub
and
rcr
nop
lcall
icebp
xor
cmp
cmp
ret
xchg
cmp
pop
cmp
in
sbb
xor
push
jo
ret
fs
shll
lock
mov
mov
sbb
shlb
in
aam
imul
lods
stc
test
lods
mov
cld
jae
add
stc
popl
jle
incl
cwtl
mov
add
sbb
icebp
in
or
fiadds
into
dec
inc
xor
mov
stc
pop
sbb
mov
cmp
dec
add
pop
cmp
inc
adc
adc
imul
hlt
imul
mov
mov
adc
mov
in
dec
insl
mov
push
pop
add
push
sub
add
sbb
icebp
add
stos
loope
pop
insb
insl
test
and
jb
pop
imul
mov
xchg
add
dec
inc
lret
push
sti
sub
movsl
leave
insl
ret
pop
or
push
add
jg
fsubr
mov
daa
mov
popa
cmp
ret
repnz
dec
adc
and
push
aaa
jb
push
leave
imul
les
mov
jno
xor
mov
pop
or
inc
push
ret
test
adcb
test
dec
mov
stc
sbb
insl
adc
push
add
jp
out
cmp
inc
mov
cli
lret
pushf
inc
testl
cmp
inc
pop
scas
fsts
bound
jl
int
pop
pop
jno
lds
pop
loop
cwtl
cmpsb
repnz
js
mov
ret
mov
shrb
sbb
mov
out
aam
xchg
stos
and
test
jecxz
movsb
inc
add
and
enter
or
mov
or
sub
cmp
mov
enter
jg
out
and
inc
mov
and
test
ljmp
scas
jge
jae
xchg
popf
jne
addr16
dec
je
mov
sub
mov
jns
mov
jg
stc
push
xchg
nop
inc
shrb
js
das
jmp
xlat
mov
rol
add
push
and
mov
xchg
lret
xor
dec
xor
lret
aaa
or
stc
mov
in
inc
hlt
xchg
jge
cmpsl
fnstsw
sbb
imul
aaa
shll
les
cmp
and
jae
repnz
cmp
sbb
popa
loopne
jmp
pop
int
mov
pop
int
xor
pushf
push
xchg
lret
call
cmp
mov
mov
mov
aam
push
sbb
dec
inc
dec
add
es
push
test
push
scas
mov
mov
xor
cs
dec
in
mov
sbb
jg
int
lds
mov
cmpl
out
test
ret
xchg
cmpsb
fstps
push
inc
pop
mov
decb
mov
mov
push
ss
mov
aad
cwtl
cmpsl
clc
jns
cmc
scas
ja
and
shlb
clc
adc
leave
inc
jle
push
lahf
xor
sbb
push
push
outsl
imul
sbb
add
xor
das
or
sbb
or
sbb
loop
adc
pop
imul
or
jmp
mov
ret
adc
pop
out
pop
in
push
lret
push
ja
out
lea
outsb
cmp
sub
dec
popf
into
ja
insl
add
in
sbb
push
inc
or
xorb
mov
mov
sbb
mov
lea
int3
icebp
loopne
subl
dec
sahf
sub
stos
rcll
pop
daa
dec
and
pop
rorb
sub
xchg
es
imul
xor
loop
test
adc
test
xlat
cmp
or
enter
xchg
lahf
repz
xor
jle
lods
dec
loopne
cmc
mov
js
push
addr16
lds
lret
ds
leave
mov
enter
cmp
fisttpll
int
fisttps
push
aas
mov
jnp
mov
jns
bound
enter
pusha
sbb
jo
ficomps
push
fsub
mov
sub
xor
pop
clc
das
fdivrs
mov
pop
pop
xchg
jae
and
or
mov
repnz
mov
xor
aam
push
mov
scas
cli
mov
jb
mov
mov
sahf
mov
leave
icebp
lds
push
iret
repz
push
push
das
scas
cmp
pop
and
sub
adc
sbb
ja
jle
sbb
sti
add
mov
jo
pop
jp
sbb
or
inc
test
les
rorl
ljmp
and
push
push
scas
loope
leave
adc
jle
sbb
mov
daa
bound
jno
mov
ret
sub
sti
push
or
mov
mov
outsb
mov
cmp
cld
sbb
pop
mov
loope
pop
inc
pushw
or
stos
push
data16
std
ja
outsb
and
xchg
test
sti
or
sbb
xor
out
cmpsb
fcoms
sub
push
pop
jne
outsl
adc
mov
out
xchg
push
arpl
hlt
sbb
jmp
jbe
aam
popf
cmp
daa
out
jmp
movsl
ss
fwait
xlat
inc
scas
mov
popf
add
or
sub
pushf
jmp
cli
add
sub
push
fistps
movsb
int
lret
in
cmp
leave
idivb
lods
lret
aaa
xchg
inc
imull
and
dec
push
sbb
movsb
repnz
enter
mov
test
mov
lret
test
and
adc
xlat
mov
pop
insl
out
dec
jne
aaa
or
pop
sub
sti
sub
or
mov
scas
or
jecxz
inc
dec
mov
stos
lcall
inc
iret
push
mov
dec
ja
xchg
mov
iret
push
sbb
pop
push
dec
shll
and
and
cmpsb
mov
bound
mov
cmp
fcomps
lahf
arpl
add
leave
add
in
and
xchg
or
push
xchg
pushf
inc
inc
xor
pop
mov
insb
mov
xchg
lret
das
lret
das
stc
rcrb
sbb
movsl
loopne
fsubrs
add
je
repz
adc
out
cwtl
sbb
xchg
loope
add
push
bound
mov
pop
dec
test
in
adc
push
ja
sbb
dec
test
cmp
bound
xor
xchg
sub
dec
stc
cltd
xlat
cmp
testb
jne
lods
push
mov
sub
popf
mov
pop
push
or
out
jae
xchg
or
cmp
les
xor
leave
pop
mov
js
movsl
or
dec
jecxz
jle
jno
push
out
popf
jle
add
cmp
mov
jnp
pop
inc
jnp
jne
inc
aaa
fmulp
sub
cmpsb
stc
jl
gs
aam
stc
rorl
push
mov
cmp
mov
enter
cmp
pop
int3
sub
inc
dec
leave
mov
int
mov
sarl
cmc
sbb
insb
mov
out
stc
in
dec
xchg
adc
push
mov
cli
into
out
pop
test
pop
shll
jmp
cmp
jno
sbb
movl
mov
add
mov
test
xchg
jns
cmp
and
jl
pop
push
dec
fs
jge
dec
enter
cmp
cmp
js
cmp
jle
aam
mov
dec
push
cmpsl
into
adc
sbb
insb
imull
call
dec
hlt
mov
fildll
jne
xchg
aas
push
cmp
in
and
mov
cmpb
xor
dec
sbb
aad
adc
cmp
lods
pop
jb
mov
sbb
in
mov
pop
or
frstor
ret
pop
rclb
lret
cmovl
mov
xchg
fbld
insb
aas
or
lock
sub
sbb
add
fldenv
dec
or
sub
in
dec
mov
lock
out
mov
and
daa
aaa
xor
inc
cmpsl
js
lcall
test
ljmp
push
std
lds
adc
test
jae
inc
mov
sub
rol
lcall
push
sbb
popf
adc
decl
test
dec
xor
xlat
incl
mov
into
ret
mov
mov
test
loopne
insb
dec
arpl
jecxz
fisubrl
push
push
sub
mov
ds
xchg
lahf
xor
dec
fs
lcall
iret
into
notb
popa
pop
sub
jne
pop
aaa
ds
mov
imulb
movsb
cmp
dec
decl
inc
cli
add
xchg
push
dec
add
pop
lods
dec
push
push
xor
jnp
loop
jo
mov
nop
fisttpll
data16
adc
jno
js
sbb
cmpsb
sbbb
nop
imul
ja
fstps
cmc
inc
sub
adc
push
gs
imul
jns
fcmovnu
outsb
popf
call
movsb
push
inc
jp
mov
jno
adc
push
push
jbe
das
or
dec
jl
test
add
push
pop
ss
sti
push
out
adc
mov
roll
cmp
mov
push
arpl
dec
dec
ret
or
ds
aad
in
cmp
mov
ja
nop
pop
cmp
jle
icebp
jae
jo
or
sbb
mov
lret
lret
scas
mov
in
outsb
dec
mov
sarb
push
imul
xchg
cmc
imul
stos
add
jae
movsb
lcall
jae
popa
sti
adc
enter
loopne
insl
shl
aad
jp
scas
adc
in
scas
push
or
add
fidivrl
test
xchg
inc
mov
shll
gs
adc
imul
outsl
add
sub
jno
std
xor
in
out
out
popf
out
mov
rorl
mov
lods
mov
pop
pop
dec
cmpl
add
sub
push
jb
repz
test
scas
xchg
fcoms
dec
data16
ret
rcrb
xor
leave
mov
jmp
push
dec
xchg
cli
or
sbb
mov
loope
push
add
sbbb
jns
lahf
inc
fwait
pop
or
subb
and
fwait
xor
sbb
bound
imul
ret
push
out
dec
outsb
rep
rorl
or
push
jo
jg
cmp
fmull
mov
dec
or
pop
mov
xor
in
xchg
fildl
cwtl
call
pop
out
loop
mov
and
loopne
jo
pusha
and
push
xor
adc
addr16
fstl
jecxz
pop
cmc
sahf
and
lock
pop
mov
pop
lods
les
push
mov
enter
or
xorl
pop
mov
push
or
pop
pushf
xlat
enter
aam
iret
adc
insl
mov
pop
insb
mov
mov
fldt
test
add
lcall
sbbl
in
imul
jno
push
in
repnz
cltd
adc
mov
mov
ss
add
dec
in
std
dec
push
cmp
scas
and
xchg
xlat
inc
sbb
loop
stc
or
mov
sbb
pop
in
inc
sbb
in
cwtl
mov
mov
push
mov
cmpb
xchg
ror
pop
inc
cmpsl
dec
in
pop
lcall
or
ret
push
cmc
inc
inc
sbb
shl
lret
pusha
adc
ja
iret
cmp
mov
xchg
iret
mov
out
sarb
mov
xchg
push
ret
in
xor
mov
xor
adc
push
xchg
loope
sub
mov
in
or
ficomps
pop
mov
jns
out
mov
lock
lds
add
jl
cmp
push
in
xchg
push
xor
cmc
or
adcl
hlt
pop
add
shl
aaa
xlat
rcll
into
add
pop
insl
lock
movsl
je
cmp
cmp
int3
jmp
aaa
leave
cmp
push
in
lods
popa
or
popf
or
xlat
mov
xchg
call
or
jmp
cltd
mov
xor
repnz
sti
xchg
out
cmp
fildll
pop
test
out
fldl
sub
mov
in
cmp
clc
xchg
xchg
cmp
sub
lock
dec
mov
xchg
jmp
divl
sub
jle
jp
lds
test
xchg
jp
pop
dec
fsubp
lret
dec
fs
and
ja
cli
dec
mov
mov
int3
mov
adc
push
and
addr16
xchg
pop
jns
out
rclb
inc
jmp
test
and
out
scas
or
fcom
out
inc
mov
loope
test
or
cmp
jecxz
push
mov
mov
mov
sub
scas
inc
xchg
mov
adc
xchg
stos
fs
inc
push
and
xor
adc
aam
shll
push
mov
fpatan
or
out
jb
jl
push
xchg
test
mov
dec
movsl
add
andl
stc
out
push
pushf
mov
push
sub
lds
fs
sbb
fldcw
mov
jns
sbb
jne
and
in
dec
mov
mov
jmp
mov
adc
push
mov
std
mov
bound
xchg
imul
add
or
loopne
cwtl
mov
lea
hlt
es
fwait
dec
or
add
xchg
fs
fsubs
cmp
xchg
push
shll
cmp
pop
cs
shlb
add
inc
inc
daa
sbb
call
dec
jge
jo
sub
insl
cmpsb
arpl
pop
inc
mov
js
inc
cmp
jnp
xlat
mov
loop
mov
and
std
sahf
fisubrs
sbb
push
incl
or
arpl
in
lahf
fadds
xchg
fiadds
mov
pop
cmp
sarb
sbb
xchg
adc
pop
icebp
xchg
push
mov
push
loopne
mov
push
in
fists
mov
push
xchg
adc
stos
rol
movb
inc
sub
aas
or
mov
loopne
or
jnp
enter
jo
dec
mov
mov
push
imul
cmp
xchg
adc
std
pop
int3
jno
xchg
mov
test
bound
mov
jp
movsl
pop
or
pushf
mov
xchg
mov
sub
into
fcmove
hlt
cmc
xchg
push
call
test
int3
xchg
pop
cld
outsl
gs
dec
sub
jb
imul
mov
and
stc
dec
pop
adc
add
mov
mov
cmp
fstpt
cld
fnstcw
xor
mov
lret
ljmp
jg
push
in
xor
ja
inc
je
leave
int3
cs
into
cltd
mov
push
cmp
add
and
jmp
xchg
mov
out
neg
ds
xor
mov
push
add
ret
lret
inc
lds
ljmp
cmc
jo
aaa
je
xor
mov
leave
lock
dec
xchg
or
sub
sbb
mov
sti
outsl
inc
fmuls
adc
lds
jns
jle
iret
cmc
in
lods
mov
xor
push
pusha
and
sbb
and
scas
mov
sub
aaa
js
loop,pt
pop
lds
in
dec
add
lea
das
inc
out
out
mov
mov
jbe
sbb
cmc
xchg
jmp
stc
test
xchg
push
add
pop
jb
or
mov
inc
push
xchg
imull
sar
sti
out
dec
pop
push
inc
mov
lods
sbb
cmp
fstp
sub
cltd
aas
adc
jo
or
push
or
call
scas
push
xor
mov
mov
vpmacssdd
shll
xchg
dec
scas
mov
andl
mov
mov
call
push
fdivs
daa
cmp
ffreep
adc
push
scas
inc
imul
lret
lods
mov
imul
jle
sub
dec
adc
int
insl
inc
inc
je
popa
lahf
inc
adc
jp
push
addb
decl
jno
in
movsb
push
orl
sbb
ljmp
in
or
insb
sbb
mov
mov
jl
xchg
xor
push
mov
jle
jge
addr16
mov
insl
adc
jle
lds
in
test
ret
dec
xor
fcompl
fsubr
stos
sub
iret
mov
add
mov
test
out
jns
sbb
mov
or
addl
test
cmp
xor
mov
mov
jmp
maskmovq
into
or
outsl
es
cmp
cmpl
mov
lock
mov
ret
fnstsw
sarb
lahf
mov
pop
jl
mov
mov
jmp
cld
mov
jmp
mov
ret
push
fcmovu
fs
rclb
sub
js
xchg
push
jne
dec
fnstsw
loope
add
sbb
in
dec
or
push
inc
push
xor
rcrb
mov
xlat
push
or
rcl
enter
pop
sub
data16
repnz
lcall
test
sub
bound
pop
stc
imul
push
push
pop
gs
or
sti
rol
and
clc
ja
sub
mov
js
and
fadd
popf
or
bound
jmp
sub
rolb
div
inc
pushf
mov
push
orb
cmpsl
xorb
and
pop
adc
xchg
add
xchg
sub
pusha
loop
lods
xorb
mov
leave
jns
inc
mov
mov
rorl
and
cltd
movsl
xor
push
fcmovb
js
daa
movsb
test
jmp
icebp
inc
jecxz
in
dec
cmpb
jb
push
mov
testl
push
pop
xor
int
xor
push
stc
lock
and
icebp
popf
daa
aas
push
mov
sbb
or
push
xchg
sub
pop
push
push
or
adc
sbb
mov
in
adc
xor
adc
nop
repz
jno
add
cld
ret
add
push
jo
pop
es
out
rclb
fsubrs
shrb
jbe
cmp
sbb
xchg
addb
jg
inc
dec
imul
push
sbb
aad
adc
xchg
jne
dec
pusha
call
andl
pop
xchg
sbb
test
cmp
imull
lds
arpl
jne
xlat
xor
xlat
rorl
lock
cmc
shrl
loopne
nop
mov
xor
dec
bound
loope
jo
movsb
mov
or
insl
inc
dec
out
sbb
and
rcrb
mov
fdivrp
jmp
aam
lret
outsb
roll
cmp
adc
cmp
fists
add
movntq
add
push
jne
stos
jge
jg
lcall
pop
not
jmp
mov
ret
orl
test
mov
enter
popa
adc
xor
mov
mov
xor
pusha
ret
mov
add
fwait
stos
scas
pusha
mov
xchg
jmp
aaa
movb
ljmp
das
xchg
jno
loop
mov
loope
lods
movsb
ret
ret
int
inc
cmpsb
mov
pop
add
mov
xchg
divl
inc
cmp
outsl
rcrb
divl
sar
pusha
ret
inc
mov
push
sti
sbb
sbb
lea
sbb
std
out
loope
outsl
repz
jo
pushf
icebp
sbb
pop
aad
jl
pop
adc
xor
mov
es
icebp
movsb
test
or
fists
add
inc
fcmove
test
pop
jno
inc
add
pop
addr16
cmc
out
in
cmp
dec
sub
pop
out
data16
push
mov
mov
xlat
cmp
push
pop
ss
sbb
push
adc
push
stc
or
inc
in
inc
fstl
sbb
fisubl
cmpsb
pop
sbb
pop
in
aaa
dec
cld
jo
push
mov
stos
mov
sub
in
ljmp
test
scas
lret
push
shll
adc
movsl
arpl
popa
nop
orb
add
pop
insl
jge
lret
xchg
ss
sub
mov
cli
mov
push
mov
aas
aaa
int
push
mov
adc
dec
loop
fsubp
fimull
call
fwait
aam
jmp
jo
int3
xchg
cmp
xor
push
jae
adcl
mov
enter
cli
daa
xchg
dec
inc
andb
in
lahf
and
xor
jge
mov
pop
fidivs
stos
or
pop
jmp
inc
daa
mov
mov
sbb
popf
test
cmp
js
or
sub
push
call
loop
sub
aaa
rcrl
lcall
pop
adc
xchg
mov
sti
movsl
sbb
stos
loope
lock
cld
out
iret
pop
jo
ds
cld
roll
dec
imul
dec
mul
and
cmpsb
ret
mov
sbb
int3
loope
pop
xchg
jg
mov
jne
mov
loopne
das
mov
add
out
call
mulb
cli
or
jmp
pop
lock
ljmp
xchg
mov
and
mov
cmp
jo
aaa
addr16
inc
xor
dec
enter
fbld
mov
cs
in
scas
shlb
inc
scas
loopne
jae
sbb
aad
test
imul
pop
add
outsb
and
lahf
pop
mov
mov
aad
hlt
pop
pop
add
push
jg
popa
mov
data16
jmp
rclb
and
outsl
mov
sarb
mov
mov
cmpsb
pusha
stos
mov
lods
mov
push
jmp
mov
and
pop
std
fwait
dec
sub
out
mov
and
add
cwtl
jmp
or
sub
push
mov
mov
fistpll
adc
sub
ret
inc
mov
aam
push
jmp
xchg
dec
inc
cmc
sub
push
repz
aas
push
sahf
xchg
inc
movsl
lock
ret
stos
cmp
pop
inc
jle
fdivr
dec
and
jb
dec
test
stos
cmp
cmp
sub
mov
and
lea
sub
pop
pop
dec
sbb
lods
sub
mov
jnp
adc
addb
sub
jnp
dec
jecxz
xchg
rcrb
xchg
jmp
mov
aam
in
ss
test
aaa
das
lds
aas
inc
mov
lock
jnp
lcall
popf
xchg
add
cmp
fimull
or
sarl
popf
push
out
clc
mov
sbb
lods
cltd
scas
jbe
xchg
addr16
mul
in
xchg
and
mov
mov
sbb
xchg
mov
addl
and
enter
xorb
xchg
lds
popf
xchg
aas
outsl
mov
cmc
cmpsb
cli
into
push
mov
pop
cmp
sub
inc
flds
shrl
xor
mov
test
inc
mov
les
mov
imul
imul
imul
scas
ljmp
insl
inc
xor
inc
add
pop
divb
pop
leave
xchg
xchg
cmc
push
sar
cmp
xchg
in
stos
bnd
cmc
mov
add
lahf
xchg
push
clc
shrl
shrl
dec
add
adc
in
scas
aaa
imul
xorl
adc
fwait
bound
sbb
stos
cmp
cmp
nop
jecxz
in
addb
ljmp
int
mov
dec
inc
pop
lods
dec
sub
lds
mov
pop
lods
push
jecxz
lahf
xor
sbb
jbe
fwait
add
inc
repnz
inc
mov
mov
imul
mov
cli
dec
push
loop
outsb
ret
shll
inc
aam
iret
mov
add
push
add
lret
mov
lcall
das
and
pop
sub
out
add
out
inc
lret
adc
pop
stos
mov
aaa
push
mov
int3
push
cs
pop
push
sub
jecxz
rcrl
and
pop
lret
gs
mov
push
addr16
mov
mov
jecxz
jnp
enter
sbb
cmp
stos
and
lods
repz
sbb
out
mov
aad
stos
fs
jno
xor
xchg
pop
in
movsl
sub
mov
clc
cmc
lds
das
ret
lock
jb
insl
imul
das
cmp
mov
or
mov
ss
inc
pop
push
adc
xor
pop
mov
add
lods
inc
and
cmpsb
sbb
xchg
arpl
dec
test
xchg
inc
lea
xor
mov
ds
cmpsl
imul
sbb
inc
int
cmpsb
mov
cmpsl
test
sbb
mov
dec
fisubrl
sbb
in
jmp
jb
lock
inc
fstl
mov
les
xchg
mov
rcrb
jne
insb
sahf
ror
rol
mov
movq
test
int3
out
test
inc
ss
iret
mov
fbld
repz
push
dec
test
jno
sub
push
ljmp
les
xchg
jae
jne
jno
add
js
mov
clc
popa
mov
mov
xor
mov
or
mov
popf
imul
adc
jge
cmp
push
pop
mov
xorl
sbb
jnp
pop
loop
cmp
sahf
push
push
popf
das
ljmp
sahf
nop
aad
popa
mov
testb
frstor
fidivrl
std
test
push
imul
cmpsl
mov
mov
fmul
ret
inc
sbb
les
loop
xchg
nop
movl
push
inc
cli
sbb
fstpl
scas
test
sbb
push
jbe
adc
jmp
push
dec
ljmp
sbb
shrl
mov
test
adcl
xchg
inc
arpl
bnd
jo
int
push
sbb
mov
inc
or
scas
pop
cli
xchg
aam
or
jnp
test
les
add
pop
clc
jp
sarb
dec
pop
pop
dec
xor
mov
aad
dec
push
cmp
adc
fsts
pop
pop
push
jbe
xchg
add
add
outsb
cld
fisttps
into
andb
cs
std
push
insb
idiv
adc
mov
ljmp
test
lock
je
inc
int3
mov
pop
cltd
int
mov
pop
insl
ja
and
arpl
mov
inc
aam
data16
jbe
cmp
lret
jmp
lock
sti
insb
push
xchg
out
sahf
jl
lods
xchg
xor
rcl
jnp
xchg
leave
fistps
ss
sub
mov
into
cld
lret
add
pushf
aas
ja
xchg
xor
in
ds
dec
xor
imulb
js
pushf
dec
out
and
scas
and
into
ror
or
out
aas
pop
dec
mov
nop
aam
jge
scas
testb
stc
and
xchg
mov
lcall
scas
push
add
add
push
mov
lcall
cli
add
std
aas
push
or
sub
jnp
ljmp
js
sub
xchg
fs
push
or
in
push
nop
aaa
shlb
stc
lret
xchg
or
ljmp
jno
das
out
sbb
push
fwait
hlt
outsl
pop
jmp
xor
mov
dec
sub
fcomps
adcl
jp
inc
xor
cltd
jae
fwait
or
cwtl
daa
cld
or
lods
xor
in
aaa
mov
jae
leave
dec
jmp
faddp
push
lret
fwait
xchg
das
loope
inc
fs
xlat
add
sti
add
ja
cltd
lcall
out
xlat
mov
lock
adcb
cmp
cmpsl
and
int
xchg
dec
idivb
jl
out
mov
lock
pop
push
xchg
mov
pop
int3
mov
pushf
push
or
or
mov
ret
movl
scas
daa
dec
add
pop
add
movsb
mov
call
psubsb
inc
dec
fisttpl
sub
jge
and
data16
jns
roll
mov
inc
int
sub
icebp
in
pop
movsl
dec
repnz
jg
push
ret
sarl
xor
jns
hlt
jmp
mov
mov
fdivrs
cmp
fs
mov
xor
insl
mull
fsubr
inc
push
adc
shll
pop
sbb
divl
loope
pop
sub
pop
xor
dec
fcomip
pop
push
xchg
push
clc
int
sub
xchg
mov
fsub
add
mov
mov
sbb
pushl
loopne
mov
sbb
ds
cmp
ret
xchg
cmp
mov
mov
outsb
inc
call
je
mov
xchg
loope
mov
sbb
in
subl
inc
xorb
xor
popa
pop
dec
sub
cli
shll
mov
popw
pop
fwait
sub
call
scas
popf
popf
outsl
lds
xlat
xchg
xor
and
and
cld
inc
loop
push
and
push
and
fs
pop
sub
lods
xlat
pop
push
push
jns
in
aaa
test
sbb
push
fistpl
orb
int
inc
push
in
cmp
out
push
in
xchg
lret
push
sbb
add
in
jno
jb
int3
mov
daa
stc
loope
dec
fistl
cli
xchg
jecxz
mov
or
sub
jbe
sub
repz
push
lahf
sub
mov
pop
sub
pusha
mov
into
jns
test
xchg
jb
mov
xchg
std
mov
mov
scas
jo
mov
mov
aam
shll
mov
hlt
or
sbb
xor
inc
lods
paddsb
in
scas
or
shll
dec
mov
inc
add
leave
and
bound
std
pop
sbb
inc
fwait
inc
adc
or
scas
jae
and
in
loopne
sbb
mov
leave
pop
inc
outsl
pop
ret
lret
pop
jne
mov
dec
adc
popf
mov
add
mov
sbbb
jg
xchg
into
cmp
cmp
xchg
jo
movsb
ret
push
loop
iret
adc
lahf
add
sub
in
in
adc
push
arpl
shrl
jg
cmp
es
sbb
and
in
test
shll
dec
inc
add
sbb
xchg
imul
adc
push
fimull
inc
mov
xchg
les
arpl
sub
xlat
rolb
or
sbb
pop
int3
cmp
sub
pop
clc
insl
mov
xchg
testl
pop
jae
popf
dec
xchg
inc
jns
mov
sbb
jmp
movsb
bound
in
pop
imul
push
fisttpl
sub
cmp
pop
mov
pop
push
add
jge
jp
mov
arpl
sbb
push
test
fildl
xchg
int3
dec
and
ljmp
outsl
and
xlat
stc
out
das
pop
xchg
cmovnp
or
sbb
add
mov
ja
fs
jl
jmp
xchg
in
shlb
pop
xor
das
jmp
movnti
cmpsl
or
add
test
pop
fs
sbb
inc
sub
sub
adc
rcrl
dec
js
inc
dec
mov
fidivs
cmpsl
pop
insb
imul
mov
pop
push
inc
inc
js
movsl
xor
push
push
xchg
aaa
inc
imul
jge
js
or
insl
pop
mov
subl
jnp
inc
sub
sbb
movsb
sti
add
inc
call
pop
jmp
xor
xchg
mov
or
pushl
mov
and
or
sbb
orb
push
mov
add
fs
fisubl
loopne
pushl
dec
ds
repnz
pop
or
mov
and
lock
leave
mov
and
lods
arpl
mov
and
jbe
shlb
mov
or
sub
mov
subb
lods
mov
leave
pop
fidivl
xchg
dec
stos
aam
in
mov
cmpsl
dec
addr16
outsl
or
stc
xor
xchg
sub
or
push
adc
xchg
btc
loopne
xchg
test
pop
test
cmpsl
fdivl
mov
ret
into
shl
sub
jo
adc
mov
inc
ret
lahf
idivb
mov
add
icebp
add
push
iret
movb
mov
jecxz
rol
and
popa
pop
sub
lods
andb
ret
mov
test
adc
lahf
mov
xchg
mov
inc
addr16
push
xchg
and
mov
xor
add
mov
mov
sub
add
mov
inc
pop
cmpsl
jle
inc
xchg
mov
dec
xchg
dec
add
data16
loopne
mov
out
sbb
cmc
cld
scas
cwtl
xchg
adc
into
insb
in
outsb
pop
mov
jecxz
out
inc
in
push
sar
sub
xor
jno
adc
shl
adc
or
fdivrl
mov
outsb
or
cli
out
bnd
mov
mov
jbe
inc
cs
pop
aad
jmp
into
adc
out
mov
xchg
cmp
out
lea
xchg
aam
pop
test
cs
add
push
bound
xchg
dec
pop
pop
fdivrl
das
xorl
jbe
insb
pusha
and
cltd
int3
subl
jge
test
inc
loope
push
lods
ja
jne
mov
out
xor
bound
test
movsb
sub
out
or
repnz
push
cli
call
pop
jne
xlat
gs
stos
cmp
jo
lods
ds
in
shlb
cmp
jecxz
adc
sti
mov
cld
pop
xor
cli
cmp
fnstcw
xchg
addr16
adc
and
sub
cld
lret
xor
std
mov
in
jp
leave
or
stos
xchg
inc
js
adc
xor
mov
or
cmpsl
loop
jmp
out
pop
pop
cmc
sub
ret
sub
inc
dec
mov
jmp
add
pusha
popa
scas
into
xor
mov
loopne
xchg
cld
inc
push
jae
loopne
loopne
sub
popf
xchg
and
loope
fdivrs
adc
inc
dec
push
sbb
inc
jle
and
dec
pop
mov
xorb
cltd
pop
sbb
negl
leave
mov
call
jg
and
jle
repz
scas
outsb
es
fsubrp
adc
inc
fisttps
mov
push
mov
aas
sbb
and
pop
loop
adc
or
testl
and
cmp
bound
lea
lea
inc
test
int
pop
movsb
xchg
adc
dec
ret
add
push
lcall
enter
icebp
int3
test
xchg
int
fsts
cs
xchg
sub
pop
push
ds
add
pop
nop
xchg
outsl
inc
inc
int
shll
cmp
mov
push
fcmovb
mov
pop
ja
or
push
scas
sub
add
pop
push
out
fincstp
orb
jb
and
dec
fstps
push
arpl
mov
sar
test
adc
add
aam
sahf
lret
push
in
jmp
shrl
mov
xorl
test
push
mov
adc
and
cmp
daa
adc
jbe
das
sub
sub
pop
repnz
mov
mov
loop
out
and
mov
lcall
insl
xchg
sbb
sbb
stos
mov
pop
in
adc
out
sbbl
movsb
popa
sub
cmp
mov
sbb
inc
lea
push
aam
sbb
mov
xor
mov
int3
sub
add
fisubrl
out
shll
mov
fisubs
dec
call
add
orb
and
sub
mov
int
sbb
adc
or
test
inc
in
icebp
mov
inc
mov
xor
ffreep
sbb
lret
data16
mov
clc
cmp
or
adc
lcall
adcb
adc
jns
cmp
outsl
xchg
add
cmpsb
ret
xchg
jae
dec
pop
inc
sub
fisttpll
daa
mov
out
pop
jl,pn
pop
fnstenv
sub
popa
dec
push
inc
sub
and
xchg
call
cwtl
into
pop
inc
popf
loop
push
pop
movb
daa
jb
jae
sub
xchg
mov
ds
push
lahf
xor
xchg
push
xor
adcl
pop
pop
into
arpl
cwtl
popa
adc
or
lret
cmp
ret
inc
aam
movsb
xchg
mov
and
jle
mov
or
cmp
inc
jmp
cmp
push
mov
xchg
scas
mov
fidivs
in
daa
pop
pop
mov
xchg
inc
xor
ljmp
pusha
addr16
push
mov
sti
shlb
stos
sub
and
lret
push
pushf
pop
jmp
je
mov
loopne
movsl
pop
lock
outsl
dec
jns
pop
pop
int
out
call
outsl
add
add
fisubl
xchg
jne
and
jae
push
dec
pop
mov
mov
mov
clc
lret
scas
inc
repz
xchg
clc
ret
cmp
and
xor
inc
inc
mov
jns
out
push
outsl
or
fsubrs
sahf
out
xlat
repz
add
or
test
adc
inc
or
pop
fstpt
ret
lock
jl
pop
fmull
loopne
outsl
sub
jp
jmp
shlb
push
adc
cli
sti
lods
inc
sarb
lahf
stos
sbb
test
mov
inc
xchg
aaa
popf
xchg
fdivrs
xchg
je
jp
pop
xchg
das
cld
fldcw
jne
inc
imul
mov
jbe
dec
stos
outsl
leave
arpl
ds
hlt
out
inc
addr16
cmp
xchg
dec
or
mov
push
adc
sbb
test
push
fs
xchg
xlat
mov
loop
add
jb
mov
mov
cltd
add
out
dec
cmc
xchg
mov
dec
push
mov
out
dec
out
dec
dec
movl
mov
roll
jp
jl
out
jae
cmc
aaa
movsl
mov
jns
and
xor
js
xor
lcall
pop
dec
fmull
push
movl
xor
pusha
enter
shll
icebp
and
out
sbb
sbb
mov
pushf
mov
adc
std
ret
jge
repz
negb
mov
hlt
aas
clc
js
push
jge
in
cmp
pop
fidivs
mov
ss
into
sub
stos
dec
rcrl
xchg
sti
mov
scas
inc
ficoms
mov
lcall
dec
movsb
imul
jae
xchg
js
lock
clc
add
ret
or
aaa
adcb
inc
pop
fldl
xchg
jns
leave
inc
sub
test
or
mov
fidivrl
dec
fisttpl
xlat
jmp
gs
clc
or
ljmp
xchg
and
cmpsl
or
adc
cld
outsl
cmc
out
fidivl
loopne
xlat
mov
out
movsl
adc
outsb
xchg
lods
idivl
adc
f2xm1
pop
xor
mov
sbb
and
insb
xor
sbb
lock
stc
mov
jle
mov
adc
scas
mov
scas
mov
pop
das
jge
scas
inc
inc
or
add
adc
and
xchg
test
mov
imul
test
or
popa
xchg
inc
scas
pop
pop
inc
out
mov
subb
mov
fiaddl
xchg
mov
jae
sub
xor
call
int
fisubrl
push
xor
dec
xchg
cltd
daa
pop
add
lahf
mov
xchg
cwtl
cmpsb
aam
add
mov
pop
mov
aaa
stos
adc
add
stos
mov
push
std
pusha
xchg
xchg
mov
sub
cmp
cmpsb
inc
fisubs
lods
and
loopne
imul
sub
test
push
loope
xchg
jae
sarl
and
cmp
loop
in
adc
insl
mov
aad
lcall
leave
dec
scas
out
or
in
ds
cld
stos
movl
inc
ret
daa
xor
jae
test
inc
stos
lahf
push
fs
cmc
push
jg
push
int3
enter
enter
movsb
sahf
sti
int3
mov
testb
or
test
call
xor
xchg
cmp
mulb
enter
pop
dec
jns
pop
jecxz
mov
cmp
mov
into
fcmovnu
les
ja
mov
fidivl
stc
iret
ret
mull
popf
lods
decb
lods
imul
icebp
push
mov
push
xchg
push
fisubrl
mov
imul
fisubs
pop
and
gs
nop
jp
xor
rcr
iret
pop
mov
push
cmp
cltd
sbb
jbe
notl
divb
rolb
icebp
das
add
call
jnp
jae
mov
add
push
jmp
subb
loop
inc
add
stos
into
mov
push
mov
mov
imul
lock
inc
das
lahf
mov
sti
inc
das
repz
add
pop
jno
enter
jns
cmpsb
pop
jne
nop
loop
movsl
hlt
test
pop
pop
add
xchg
xor
sbb
repnz
and
dec
push
cmp
loop
aad
xchg
dec
enter
or
mov
das
cmpsl
cmpl
inc
dec
sbbl
sub
imul
add
addr16
fsin
push
mov
dec
dec
repnz
inc
repz
pop
outsb
cmc
xchg
lcall
mov
fdivl
pop
sti
cmc
ds
adc
xchg
movsb
test
and
int
ljmp
sti
jg
or
adc
pop
jae
xchg
loopne
mov
add
lahf
push
cmp
mov
lcall
scas
cmpsb
add
dec
mov
divl
mov
push
add
cwtl
push
adc
adc
out
daa
push
push
iret
jns
xor
in
pop
fmull
lahf
ret
xor
test
mov
pop
mov
jg
into
sub
popf
nop
push
jb
mov
push
cwtl
rcr
push
mov
out
pusha
loope
repz
mov
sar
dec
mov
das
call
loop
aam
lods
dec
fcoml
xor
xchg
xor
out
pop
lock
jns
pop
cld
in
add
dec
mov
xor
out
outsb
aad
push
loop
jb
ret
and
add
xor
movsb
cmp
add
testl
sbb
negl
dec
ljmp
test
pusha
push
mov
fsubr
jne
popl
mov
sub
mov
ljmp
cmp
cmp
fmull
imul
add
xor
cmp
push
sub
lret
lock
inc
push
cmp
add
jmp
sbbl
dec
sub
sbb
cmc
les
cs
sub
pop
mov
inc
inc
xchg
icebp
iret
lret
call
inc
jge
push
dec
pop
pop
push
or
stos
lods
out
mov
jg
arpl
add
scas
jae
lret
dec
loope
int3
inc
lret
mov
push
xchg
subl
mov
sti
sbb
jg
or
movb
aad
sbb
cld
cmpsl
or
inc
xchg
std
mov
movsl
das
mov
data16
add
int3
dec
dec
gs
jle
or
push
add
testl
lret
fadds
scas
enter
sbb
xor
jle
aas
pop
jl
movsl
fsubs
sub
cmp
std
mov
add
lcall
aas
test
jp
inc
setns
pushf
mov
jnp
mov
in
sahf
and
cmp
add
arpl
xor
shlb
fsubs
push
or
xor
mov
enter
sub
mov
inc
or
cs
jns
pop
inc
adc
push
pop
inc
jmp
mov
dec
pop
xchg
add
push
push
and
mov
inc
dec
pop
push
aaa
in
test
ss
cmc
pop
stos
and
pop
mov
data16
cmc
pop
pop
addb
les
mov
jl
adc
mov
mov
stos
adc
push
dec
sub
jo
cmpsb
mov
rcr
pop
xchg
pop
pop
jp
aad
jmp
or
in
adc
mov
cwtl
cmpsb
dec
mov
mov
or
lea
dec
and
imul
stc
mov
into
dec
inc
addr16
bound
ljmp
sbb
dec
inc
jecxz
xchg
push
out
inc
dec
mov
pop
and
leave
repz
xlat
xor
insl
jmp
and
sbb
sbb
cmp
and
cltd
dec
xchg
aas
cld
and
dec
inc
and
lods
xor
jbe
outsl
gs
lea
push
packuswb
push
sbb
pop
xchg
mov
mov
adc
rol
push
push
fs
test
xchg
xchg
cmp
sbb
adc
lret
rclb
aas
stc
add
addr16
fstpl
arpl
mov
inc
repz
mov
push
test
mov
dec
nop
xor
inc
bound
shrl
inc
jb
adc
mov
ljmp
xor
imul
outsb
into
loope
sbbl
out
push
sbb
mov
popf
shrb
inc
rcrb
xorl
ljmp
mov
jno
imul
and
insl
push
cmp
dec
add
jmp
in
fs
sti
push
cmpsb
mov
sub
lods
gs
jl
xor
sti
pop
mov
aas
pop
jno
into
mov
ljmp
repz
cmp
mov
aas
mov
xchg
testb
xor
fisttps
mov
int
sub
shll
cld
leave
mov
js
pop
mov
xor
push
gs
inc
sbb
pushl
inc
scas
popa
fucomip
xchg
cwtl
jle
mov
push
sbb
sbb
fwait
call
aaa
mov
jno
xchg
lods
sbb
inc
and
clc
jo
cmc
js
mov
aaa
cmp
jo
ret
jb
cmpsb
rcll
fildll
imulb
aam
out
cmp
mov
into
adc
dec
std
cld
xor
sbb
mov
stos
int
inc
outsl
inc
scas
rcrl
fsubrs
push
xor
or
cmp
fistpll
sbb
cmp
push
out
shrb
push
scas
pop
test
xor
push
jbe
rorl
aaa
int
sbb
push
xchg
in
xchg
mov
int
jmp
ljmp
add
in
ds
cmp
ret
cmp
es
xchg
inc
pop
fiadds
push
pop
loope
pop
pop
inc
pop
and
cmp
lods
call
mov
xchg
pop
aaa
outsl
lods
push
and
and
lock
cmp
push
cltd
in
xchg
cmp
jmp
cwtl
sub
sbb
xchg
out
enter
jmp
fistps
mov
sbb
mov
iret
push
test
and
mov
stos
inc
das
lock
shr
pop
xchg
adcb
add
rol
mov
bound
lods
or
shl
cltd
outsl
fnstenv
xor
sub
scas
push
aad
xchg
and
mov
mov
shrb
adc
in
mov
insb
add
pop
cmp
roll
scas
dec
rcrb
sbbb
cmpsl
push
mov
es
pop
pushf
jg
in
lods
pop
or
add
cmp
into
dec
or
pop
mov
push
jne
xchg
addr16
sub
cmp
jb
les
adc
aaa
mov
dec
pop
adc
inc
add
or
jbe
xchg
mov
test
or
xchg
and
add
into
popf
lods
adc
icebp
popf
xor
push
lcall
pop
fs
leave
xchg
xor
shlb
scas
imul
xchg
jg
and
les
test
cmp
sub
lahf
jno
mov
shl
and
fdecstp
cld
and
xor
cmc
cmp
or
add
movsl
mov
and
enter
xchg
mov
pushf
ss
add
in
imul
nop
sub
enter
je
call
ret
test
ja
jl
jb
mov
fcoms
mov
sub
movsb
jg
push
cmp
lahf
mov
mov
ret
fdivl
push
ljmp
stos
mov
cbtw
jmp
test
pop
sbb
out
int
or
out
insb
imul
std
cltd
in
xchg
mov
mov
cmp
js
gs
insb
mov
daa
pop
outsl
dec
xchg
shll
movl
pop
loopne
aad
test
daa
pop
jbe
loopne
test
les
fldenv
lea
adcb
and
mov
cmp
scas
callw
rcrb
pop
xor
or
test
sub
test
mov
sub
adc
or
sarb
xor
mov
out
or
or
pusha
fnclex
cmp
ja
ljmp
out
cs
pop
divl
loope
loopne
or
or
daa
jle
cmp
cmc
push
xchg
xchg
jbe
xchg
or
xor
iret
inc
mov
cmp
lods
test
lds
shll
cmpl
cltd
mov
xchg
daa
mov
imull
pushf
les
or
xchg
xor
or
in
and
push
rolb
or
dec
sbb
xor
mov
and
je
lds
add
and
pop
into
in
adc
repnz
pusha
insb
into
jmp
lods
faddl
iret
or
xchg
loope
push
rcll
repz
into
push
cmc
sub
loope
in
daa
imul
jnp
in
in
popa
dec
out
sub
addb
push
xchg
pop
and
je
push
xchg
testl
test
outsl
xchg
rcll
jle
mov
shl
jne
out
js
push
adc
mov
fmuls
andl
mov
fwait
gs
adc
push
and
js
dec
xchg
xchg
lcall
movsl
jecxz
mov
adcl
lcall
and
ds
push
inc
nop
cs
dec
sbb
lds
sbb
mov
xlat
cmp
mov
or
roll
sub
jmp
pop
js
mov
jne
cmp
push
add
jecxz
inc
sbb
push
push
jg
xor
sub
aam
pop
jnp
push
xchg
filds
pop
shl
icebp
mov
lret
mov
sbb
sub
stos
popa
push
push
das
daa
js
sahf
lds
xchg
addr16
aaa
ja
push
dec
push
sbb
pop
xchg
lds
push
inc
imul
mov
lods
daa
add
jle
push
stc
cmp
push
jg
lcall
jne
and
lods
add
fimuls
cmpsl
movsb
dec
mov
popa
rorb
ror
movl
lods
sbb
jge
adc
leave
mov
addr16
mov
sbb
push
testb
shl
pushf
sbb
lret
push
dec
sub
xchg
jns
xchg
stos
xor
sbbl
mov
fwait
sub
jae
cmp
outsl
jno
mov
cmp
cmpsb
push
jmp
add
jne
or
pop
std
cmpsb
xchg
jne
popa
jmp
loope
dec
mov
push
push
repnz
adc
subl
sub
jecxz
int
pop
xor
call
in
leave
push
flds
incl
pop
sbb
cmp
adc
out
fcmovnb
stos
cmp
mov
jl
movzwl
in
mov
out
sbb
test
in
fimuls
pop
push
mov
arpl
sbb
addb
in
ret
lds
cmpsl
popf
lcall
lock
xchg
aaa
pop
shl
sub
outsl
lcall
xchg
or
inc
pop
mov
je
or
sbb
jle
or
fidivrl
pushf
adc
sti
xchg
fldt
pop
jle
mov
jle
inc
insl
jb
adc
cmp
xor
push
cmp
and
out
jmp
js
in
push
and
sahf
in
push
mov
jns
ss
xchg
sbb
dec
in
mov
cmp
out
ret
push
rolb
ss
sbb
mov
add
int
adc
outsl
pushf
lds
jecxz
add
call
fldt
and
xor
cmp
cwtl
ret
mov
push
cwtl
pop
jae
fsubrl
add
movsl
sbb
jge
je
ret
addb
aaa
fisubs
call
push
aas
mov
mov
and
dec
sti
mov
popf
stos
rcl
xor
fs
rorb
sub
lods
jno
leave
js
adc
std
aam
mov
std
jno
fs
jo
pop
cwtl
sbb
or
xchg
sub
mov
aaa
pop
adc
mov
mov
rcll
jmp
jle
cmp
jp
dec
call
les
in
lret
leave
shll
mov
and
xlat
xchg
dec
cmc
loopne
pop
jp
test
xor
mov
mov
aaa
loop
push
loopne
xchg
out
adc
adc
das
cmp
mov
mull
dec
fdecstp
jmp
hlt
jl
pop
pop
scas
inc
lods
jne
sbb
hlt
add
sbb
xor
push
pop
pop
xchg
repnz
test
jg
xchg
push
jmp
or
rcrb
cmp
xor
xchg
lds
pop
inc
aad
je
lods
inc
insl
add
repz
jbe
shlb
inc
shrl
lret
jmp
mov
shlb
insl
pop
outsl
fisubrl
inc
mov
popf
cld
pushf
inc
repz
add
or
loop
vpmovzxwd
fsubrs
jo
repnz
rolb
daa
push
or
test
jp
jg
bound
mov
xor
mov
fisubl
cmp
in
int
add
test
cmp
add
jae
sbb
sub
xchg
mov
or
mov
lret
add
leave
fcmovbe
adc
pop
mov
scas
jge
inc
aas
cmp
xchg
fnstsw
pop
mov
in
inc
jecxz
mov
call
nop
loope
jle
ljmp
and
rorl
dec
xchg
fwait
pop
jbe
lcall
pop
inc
daa
in
cmp
jae
daa
xchg
aaa
and
push
bound
cmp
popa
adc
jmp
push
out
jae
scas
xchg
sub
push
xchg
out
jle
jl
xor
bound
sbb
insl
jbe
lods
das
sbb
pop
pop
dec
inc
int
pop
mov
pop
test
addr16
imul
cmpsb
das
or
add
xchg
sahf
lcall
mov
ja
push
adc
push
inc
mov
enter
xchg
mov
jne
rol
jmp
call
mov
lods
pop
push
cmp
mov
gs
jg
push
sbb
dec
sbb
jge
adc
les
push
push
sub
or
or
dec
les
cs
fwait
jmp
sbb
sub
pop
push
jle
stos
dec
push
push
cmpsb
loope
sub
arpl
or
and
mov
mov
mov
ficoml
mov
in
xchg
dec
mov
push
and
je
push
xor
push
shll
shll
movsb
fildll
pushf
jmp
inc
add
xchg
dec
jmp
xchg
aaa
insl
ds
adc
fwait
or
loop
out
cwtl
adc
mulb
mov
into
jo
jle
xor
insb
sbb
repz
mov
jecxz
xor
mov
and
inc
mov
leave
scas
cmp
fadd
ret
dec
call
fadds
stos
cmp
or
or
mov
dec
aad
push
repz
jecxz
dec
mov
stos
loopne
xchg
movsl
xchg
cmp
dec
lds
sbb
ret
xchg
repnz
push
push
into
int
jnp
pop
dec
add
xchg
mov
push
cltd
add
pop
hlt
rcrb
les
or
push
jbe
popf
repz
lcall
out
xchg
sbbl
mov
jo
fdivs
pop
inc
aad
jmp
fdivrs
jecxz
mov
rcrb
mov
imul
mov
rol
es
nop
les
ds
out
lock
fstp
enter
fldcw
xchg
into
push
mov
inc
dec
cmp
or
xchg
insb
jp
jns
lods
movsl
das
sar
inc
loope
adc
jb
pop
xchg
push
mov
lock
sarb
lock
icebp
fsincos
call
sahf
and
movsb
leave
and
xor
inc
fisttpll
xchg
in
add
nop
adc
sbb
cmpsl
or
and
cmp
scas
scas
and
gs
mov
add
xchg
lock
cmp
cld
arpl
mov
or
popa
and
dec
call
jno
out
hlt
popf
mov
and
in
mov
fs
sbb
xchg
stc
movsl
stos
mov
sahf
fldcw
nop
sbb
fcos
rcrl
in
mov
mov
fdivrs
push
xchg
and
std
inc
pop
cwtl
or
dec
dec
mov
cmpsl
and
mov
push
shl
cli
dec
pushf
mov
mov
lea
out
sbb
aam
push
ret
pop
add
and
dec
cmpsb
xchg
leave
sbb
int
cli
push
cld
movsl
mov
cs
sti
faddl
test
subb
les
mov
out
xchg
mov
pop
out
and
fisttps
pop
dec
mov
popa
and
cmp
jne
faddl
daa
xor
test
cld
test
data16
lods
xchg
mov
and
mov
movsl
xchg
lock
ss
mov
nop
in
das
push
into
sbb
fwait
cwtl
out
jb
jnp
jmp
das
and
mov
jbe
mov
mov
pop
pop
test
icebp
shlb
mov
out
std
and
xchg
or
mov
lods
pusha
in
psadbw
mov
xorl
in
repz
cld
lods
pop
int
mov
stos
loop
in
cmp
jecxz
push
mov
add
shlb
inc
mov
jo
dec
sti
sbb
ja
mov
mov
xchg
jge
adcb
arpl
lods
push
ret
lea
movsb
insb
ss
fdivs
push
sbb
xchg
sar
xchg
lret
mov
sbb
or
xor
add
mov
push
lahf
movsl
dec
rol
adc
add
mov
mov
or
popf
test
xchg
arpl
cltd
pop
sub
mov
sub
mov
jecxz
and
push
cmpsl
push
mov
packuswb
cmp
imul
jcxz
xor
lds
imul
dec
div
ljmp
and
push
cmp
mov
push
sub
mov
mov
movsb
adc
rcl
lods
cmpsb
jns
lds
test
adc
outsb
or
jecxz
jno
jl
xchg
sub
div
ficoms
les
movsl
push
jnp
or
xor
mov
lea
jge
jne
pop
lods
int3
fisttps
cmp
inc
out
cmpb
or
ret
divb
push
pushf
cmp
ds
pop
cmp
xchg
mov
bound
ret
mov
xchg
scas
add
pop
rcrb
rcrl
mov
mov
xor
mov
adc
mov
shll
and
outsb
ljmp
js
aad
in
loope
push
adc
jle
xor
int3
dec
mov
mov
cs
or
out
clc
push
inc
movsb
jl
adc
les
roll
nop
lds
aad
dec
jbe
mov
jo
pushf
push
imul
sub
loop
jae
mov
hlt
popa
clc
push
mov
lock
imul
ret
add
pop
out
in
mov
inc
or
pop
push
outsb
test
xchg
je
lea
lock
cmp
mov
inc
mov
jg
push
or
xchg
xor
mov
push
push
repz
mov
sub
cli
fsub
dec
stos
adc
pop
xchg
xchg
mov
cld
je
mov
mov
dec
dec
mov
das
icebp
ret
iret
lock
push
adc
xchg
pushf
mov
repnz
test
pop
loope
sbb
hlt
test
cmp
aam
cmpsb
mov
les
pushf
orl
dec
jmp
dec
orb
pushf
imull
add
and
or
jns
push
outsl
push
mov
xchg
mov
inc
mov
adc
xor
frstor
movsl
outsl
jle
imulb
xor
psraw
mov
pushf
jmp
movsb
popf
pop
pusha
sbb
mov
out
cmp
push
repz
adc
clc
test
inc
xchg
mov
xor
mov
xchg
pushf
xor
mov
mov
push
andb
jae
mov
pushf
cmp
push
pop
fs
jmp
lods
outsb
scas
call
jo
dec
rcl
adc
mov
out
in
add
dec
sti
sbb
lret
mov
repz
aaa
cld
fisttpl
ljmp
adcl
adc
and
or
out
fdivrs
bound
idivl
out
inc
loopne
mov
xchg
ret
test
ja
jg
push
inc
in
nop
pop
addr16
cltd
cld
lock
add
daa
jp
mov
cmpsl
loope
and
das
add
sub
pop
fidivl
cli
push
test
lret
dec
push
mov
push
mov
fidivs
fnstsw
dec
adc
push
cwtl
pop
and
dec
and
fidivs
insb
jmp
fimuls
loopne
cmovle
add
ds
mov
push
scas
cmc
sti
cmp
ljmp
cwtl
adc
or
xor
pop
push
fimull
addr16
xor
dec
test
lods
pop
bound
les
mov
or
cmp
lea
mov
pop
gs
mov
xchg
cli
cmc
sbb
inc
inc
push
mov
xor
mov
adc
ja,pt
in
pop
xchg
sub
mov
mov
iret
mov
or
mov
dec
push
inc
cli
push
les
or
repz
es
push
sbb
mov
lret
mov
or
and
fimuls
adc
cwtl
in
jle
push
push
or
call
and
sldt
scas
roll
mov
out
idivl
adc
mov
pop
dec
iret
pop
jnp
xor
dec
in
imul
xchg
push
xchg
in
arpl
add
xchg
sbb
jp
sbb
lret
pop
icebp
mov
jle
pop
push
push
lods
jle
fs
pop
sub
push
lock
js
mov
jl
aaa
stc
xchg
mov
fxtract
sbb
mov
out
sub
sbb
push
or
das
mull
fs
ja
push
stc
nop
dec
shll
cli
pop
dec
test
sahf
mov
ret
mov
push
inc
sub
lret
cltd
hlt
stos
test
or
cmpsb
stos
dec
mov
push
mov
insb
mov
inc
pop
outsl
std
pushf
jo
out
adc
sbb
stc
push
pop
mov
in
sub
push
inc
mov
dec
mov
gs
mov
jp
add
sub
addr16
scas
daa
pop
adc
mov
sub
icebp
orl
mov
int
jno
mov
xchg
mulb
add
add
mov
pusha
sub
movsl
jb
dec
adc
add
inc
enter
cmpsb
jl
cmpsl
xor
xchg
xor
mov
mov
xor
xor
xlat
inc
test
movsb
sub
push
inc
loop
pop
inc
adc
mov
mov
sub
adc
mov
push
jmp
xor
jecxz
xor
pop
lcall
xor
loope
add
fdivrs
and
mov
int
aam
int
pop
mov
and
ffreep
insl
or
sbb
adc
icebp
bound
dec
dec
dec
stc
addl
sub
adc
xor
jmp
lcall
stc
rcrl
jbe
loop
xchg
xchg
insb
aam
mov
xchg
xchg
pop
es
pop
xor
std
cmpsb
ds
inc
sub
stos
jno
hlt
je
fwait
movsl
mov
out
inc
rorl
and
mov
movsb
jns
dec
xchg
jp
sub
mov
xchg
cmpsb
sub
jbe
push
das
adcb
faddl
shrb
pop
mov
mov
xchg
in
stos
cs
shrb
fcompl
push
fidivl
arpl
repnz
sbb
adc
or
hlt
mov
jns
xchg
in
aam
xchg
outsl
or
mov
dec
sahf
enter
jg
test
push
mov
daa
sub
and
out
jle
leave
sbb
pop
jecxz
xchg
lods
dec
loopne
dec
aad
jne
loop
out
sub
dec
sub
jne
push
and
loopne
shlb
xchg
inc
xor
sub
add
loope
in
in
add
mov
iret
mov
addr16
sub
mov
notl
cs
cmpsl
out
add
mov
pop
adc
ljmp
sub
lods
test
xchg
leave
lock
cmp
aam
sub
inc
int3
cmp
jo
push
or
in
loope
dec
faddl
push
ficompl
imul
gs
std
xchg
cmpl
inc
ss
xor
xchg
jle
pop
xchg
xor
xor
icebp
cs
int3
push
sub
arpl
mov
and
push
rorl
cmp
xchg
push
insb
mov
add
mov
mov
addr16
xchg
rclb
movl
jp
and
inc
movb
int
fnstcw
test
insb
inc
lret
mov
xchg
sarb
mov
scas
mov
jne
mov
sbb
arpl
push
enter
das
lods
pop
push
mov
lret
pop
jle
mov
jne
inc
mov
pop
push
scas
xchg
es
pop
insb
xchg
jmp
mov
push
push
sbb
in
cmp
dec
sbb
insb
mov
pop
mov
fistpll
mov
mov
repnz
iret
fsubrl
addr16
mov
call
popa
subl
or
push
xor
cli
rol
mov
fwait
add
cmpsb
rorb
and
or
insl
push
adc
sub
cmp
ja
sub
xchg
inc
pop
xor
addr16
or
jae
xor
and
adc
jge
mov
pop
inc
xchg
xchg
and
xchg
insl
ret
xor
lock
add
pusha
mov
lea
stc
pop
and
and
repz
in
mov
das
lea
scas
addl
sahf
ljmp
das
mov
mov
outsb
push
sbb
push
filds
dec
in
push
out
mov
and
sbb
mov
jno
push
sbb
push
xorl
out
out
ss
pop
xchg
loope
adc
cmp
and
popa
in
mov
inc
xlat
inc
lea
nop
adc
cwtl
adc
lahf
ret
add
or
jle
stos
test
jbe
add
test
dec
adcl
xchg
xchg
dec
add
inc
loope
mov
mov
mov
xchg
ret
pusha
xor
or
inc
push
arpl
or
ficoml
mov
imul
rorl
lods
xor
pop
scas
gs
or
lret
pop
inc
push
insb
or
jnp
pop
sub
jle
mov
xlat
add
insl
and
pusha
cwtl
cli
je
push
out
sub
data16
lods
xchg
cs
in
xchg
sbb
test
pop
sbb
sbb
mov
popa
scas
fists
dec
pop
sbb
cmp
nop
movsb
push
lods
test
inc
shl
push
scas
mov
xlat
or
pop
or
ss
sbb
cmp
add
inc
inc
push
pop
and
bound
repz
aas
jmp
scas
stos
jno
movsb
mov
aas
imul
jp
mov
ljmp
mov
push
scas
out
outsb
adc
mov
adc
loop
mov
xor
daa
jl
into
icebp
testb
shrb
mov
aaa
fstl
mov
orb
adc
sub
ret
or
enter
cwtl
fs
mov
test
push
lret
add
fistps
add
ficoml
mov
add
push
pop
fdivl
sub
adc
les
cmc
adc
push
int
call
pop
dec
pop
and
xor
add
ss
pop
outsb
dec
pusha
out
outsb
dec
push
and
dec
inc
mov
pop
aaa
jmp
pusha
in
mov
adc
int3
fistpl
jge
lret
xchg
pop
in
leave
and
cmpsl
pop
cli
icebp
ret
shl
push
ret
push
cmp
cmp
jno
inc
inc
sbb
cmp
sbb
aas
int3
in
sub
sti
or
mov
shl
stos
insl
loop
jbe
in
jle
loope
and
fwait
push
xor
mov
xor
or
or
mull
add
imul
aad
sub
mov
xor
pop
insb
aas
adc
imul
mov
adc
into
mov
repz
or
sbb
and
xchg
jae
stos
inc
ret
into
mov
mov
addb
lret
icebp
imul
lods
imull
xchg
pop
loop
sbb
push
unpcklps
sbb
hlt
iret
pop
ret
lods
in
cs
push
jb
fidivs
sub
cmpsb
ret
fists
pushf
mov
clc
repnz
dec
jecxz
sbb
mov
int
push
pop
push
mov
ficoml
jl
aas
lock
mov
push
stos
mov
repnz
adc
xor
sbb
jns
and
jno
test
imul
adc
jns
push
add
push
push
loopne
adc
push
fldl
xor
str
push
cmp
aaa
dec
mov
test
iret
sbb
out
stos
div
pop
push
dec
jbe
xlat
aad
sbb
xor
loopne
insb
adc
fiadds
sbb
fistps
scas
and
push
mov
notl
sbb
stos
pop
add
cmp
xchg
pop
leave
xchg
nop
mov
repz
aam
arpl
inc
and
aas
jl
aam
xor
dec
test
push
mov
push
outsb
inc
jle
scas
psubq
ret
nop
jmp
aam
test
add
sub
mov
jnp
push
pop
xchg
adc
pop
xor
scas
stos
inc
loop
insb
jle
into
nop
das
jge
sahf
lock
xor
lea
push
xlat
cmp
push
adc
js
repnz
add
or
das
enter
roll
jae
scas
ret
add
xlat
push
stc
loopne
jb
std
push
shl
scas
cwtl
xor
dec
cld
insb
dec
cmp
aad
das
jg
std
lea
or
push
ret
or
lods
mov
out
in
lods
pop
imul
mov
fdivr
jmp
negl
lea
fmul
or
pop
push
inc
sub
lods
xlat
in
ret
add
int3
pop
fwait
and
fmuls
cmp
faddl
fldcw
rclb
por
jle
inc
or
icebp
sub
fsubrl
or
cwtl
mov
leave
neg
lcall
ficomps
mov
adc
icebp
sub
pop
call
mov
out
or
fistpl
cmp
mov
hlt
repz
and
xor
cmp
xchg
jo
in
ljmp
xchg
nop
mov
aad
pop
sbb
aas
test
pop
jbe
jae
push
cmp
sub
adc
shr
lea
in
add
movb
jne
out
pop
inc
pop
sub
sbb
and
lcall
sbb
sub
dec
dec
and
xchg
xor
xchg
mov
filds
mov
inc
jecxz
pop
divl
sbb
fcom
cmc
ja
jecxz
jb
pop
int3
mov
adcl
adc
lea
sar
add
cmp
jo
cmp
ficomps
xchg
imul
sub
cltd
or
sub
stos
loope
mov
rcrl
cwtl
cmp
dec
adc
mov
inc
loopne
xchg
mov
cmc
leave
mov
jbe
es
pusha
test
mov
nop
mov
sub
test
icebp
bound
push
gs
lcall
mov
fwait
adc
push
pop
jns
push
icebp
dec
aaa
adc
or
dec
cmpsl
jns
andb
cli
jae
mov
or
push
mov
jb
cmpsl
xor
mov
pusha
mov
or
cmp
bound
mov
out
xchg
xchg
rorb
xchg
out
mov
sbb
mov
xchg
lret
movsb
icebp
lock
dec
out
xor
xchg
mov
xor
adc
clc
adc
pushl
xor
mov
popa
or
decl
push
add
popf
sarl
daa
xor
inc
xor
mov
inc
or
xchg
cmp
xchg
scas
data16
shl
out
les
test
dec
bound
xor
into
xchg
adcl
push
push
sub
std
mov
js
movsb
jl
out
jns
sti
push
test
iret
leave
adc
xchg
adc
inc
add
and
loopne
hlt
insb
adc
aas
addr16
ret
insb
lods
mov
add
sar
sbb
pushf
das
aaa
cld
xlat
push
adc
lahf
jp
or
ss
imul
cld
inc
test
xor
int
push
inc
push
mov
in
push
icebp
fwait
jge
mov
push
inc
mov
sub
lcall
mov
cmp
and
and
aad
jg
lahf
rorl
mov
inc
out
inc
cmp
xchg
imulb
enter
push
cltd
sub
mov
hlt
icebp
xor
rolb
or
dec
outsb
aas
daa
sbb
insl
push
dec
sbb
xorb
sub
stos
cmpsb
xlat
inc
adc
rorb
xchg
add
cmp
js
addr16
mov
test
or
das
fiadds
insl
jp
stos
xlat
inc
or
loop
les
mov
push
xchg
inc
fnstenv
xor
lods
int
xorb
pop
and
push
inc
cmc
scas
dec
pop
mov
aad
inc
xchg
inc
std
int3
lods
and
jle
jp
pushf
inc
mov
cmp
cli
mov
fs
fwait
sub
mov
sbb
test
dec
fstpl
sbb
jb
ljmp
into
xor
xchg
adc
xor
dec
and
cmp
jbe
add
adc
mov
jo
hlt
cmp
test
sbb
lds
push
cwtl
xchg
out
lods
int
pop
fisubrl
xchg
or
in
cmp
mov
inc
lret
sub
cmp
push
or
leave
lret
cmp
pop
out
rcrb
mov
xchg
sarb
sub
xor
mov
sbb
adc
cmpsb
cmpsb
xchg
test
roll
jge
leave
mov
js
out
imul
mov
loop
jo
xor
add
or
dec
fwait
push
lods
mov
cld
divl
push
insb
ficomps
icebp
push
les
aam
repz
or
fcmovnu
sbb
add
negb
mov
mov
repnz
mov
xchg
or
add
or
push
cmp
pop
movsl
bound
lods
sti
push
add
jb
vmovsldup
mov
outsb
ss
inc
mov
aad
cmp
imul
jle
mov
mov
pop
xchg
in
mov
shrb
fcom
mov
scas
imul
sub
adc
push
std
sbb
inc
sbb
add
faddl
mov
imul
fiadds
leave
test
sahf
lock
pop
cmp
and
shr
xchg
or
cmp
dec
ds
dec
ret
bound
cmp
pushf
sub
aad
sbb
lcall
push
mov
push
jle
dec
mov
adc
jge
push
mov
adc
lahf
jne
dec
pop
mov
fwait
cmp
sbb
insb
mov
pusha
add
dec
mov
in
call
ret
sbb
sbb
popa
mov
lods
cmpsb
shll
sub
xor
jbe
sub
pusha
inc
add
xor
repnz
xor
outsb
nop
jns
mov
mov
lcall
push
inc
mov
cli
mov
inc
inc
pop
cmc
test
icebp
popl
in
sbb
andb
xor
or
mov
es
sti
sub
leave
mov
jg
jbe
mov
push
sub
out
cltd
insl
aad
icebp
jb
xlat
test
out
jne
inc
ss
adc
push
sub
push
sbb
pop
imul
xor
stos
dec
sbb
lods
movsl
sbb
in
fists
mov
adcb
enter
adc
dec
sbb
mov
push
lock
roll
xchg
xor
adc
xchg
mov
call
cmp
outsb
cmpsb
mov
pusha
fistps
das
fisttps
jns
repz
ja
int3
cmpsl
ljmp
stc
lahf
push
adcb
and
add
mov
adc
or
inc
or
fdivl
test
xchg
lret
cli
fsubs
mov
jno
les
add
stc
nop
mov
mov
ret
push
push
test
adc
sub
adc
inc
dec
lds
or
fs
mov
ret
call
mov
cmpsb
mov
inc
out
test
jge
dec
mov
jne
xor
scas
cmp
mov
stos
or
xor
mov
push
in
cmp
mov
pop
mov
inc
adc
jbe
cmpb
or
fstl
sub
clc
inc
les
aas
movsl
adc
pop
mov
xor
push
into
jb
jp
mov
cmpsb
push
jno
test
nop
jne
and
imul
sti
add
idivl
fs
push
movsl
pop
pop
leave
add
xchg
or
out
pop
insb
addr16
jbe
or
jae
les
stos
popf
test
arpl
adc
jno
xchg
cmp
push
popf
jo
fisttps
jecxz
push
sbb
out
xchg
pop
adc
add
sub
int
rolb
mov
mov
push
xor
cmpb
cmp
lahf
pusha
push
sahf
es
insb
mov
xor
ds
js
mov
push
mov
xchg
and
std
dec
sbb
fisubs
fisttps
adc
and
jle
push
lcall
dec
pop
bnd
enter
xor
ja
lea
or
mov
incl
push
stos
push
lahf
add
xor
and
cmp
lcall
xchg
js
and
inc
shrl
divb
aad
xchg
ds
pop
inc
xor
xor
int
loop
and
lahf
mov
add
outsl
mov
enter
mov
pop
mov
scas
sbb
and
sbb
sub
inc
inc
mulb
push
push
or
or
lock
lds
add
sbb
pop
negb
mov
adc
stc
mov
popa
rolb
push
out
loopne
shl
add
adc
or
mov
inc
out
push
mov
pop
shlb
xchg
inc
lret
or
sbb
adc
stc
mov
sbb
and
sbb
orl
lds
dec
insl
in
lret
jge
sti
clc
test
dec
pop
mov
in
jns
adc
pushf
sub
test
orb
jbe
pop
cmc
imul
fs
jbe
sbb
ja
push
mov
dec
out
addr16
in
jle
xchg
cwtl
aaa
enter
mov
or
ret
repnz
scas
adc
cmpsb
add
lcall
js
imul
rolb
inc
xor
dec
mov
mov
imul
mov
fldl
xchg
pop
scas
andl
pusha
jb
mov
aaa
push
or
insl
shlb
aam
xor
cmpb
sbb
test
ja
pop
pop
or
jp
sbb
cmp
pop
cmp
fisttps
dec
mov
mov
pop
mov
addr16
ja
movl
movsb
mov
fsub
ja
pusha
or
leave
aas
in
mov
cmpsl
mov
sbb
imul
xor
ret
and
mov
push
add
jecxz
call
fimull
int3
xor
push
pop
fisttps
mov
xchg
ret
pop
xchg
sti
push
and
pop
xor
adc
mov
xchg
xor
xchg
xor
xchg
xor
push
push
xor
dec
and
mov
mov
push
jae
sti
jmp
ret
arpl
jno
data16
mov
and
arpl
xor
xchg
mov
jmp
jmp
mov
clc
imul
lret
mov
adcl
lahf
sbb
in
inc
sub
fdivrs
sub
imul
leave
imul
push
and
lea
mov
pusha
pop
push
lahf
pop
jp
cmp
loop
push
mov
inc
xchg
push
mov
and
cmp
outsl
cmp
mov
mov
arpl
leave
adc
and
mov
scas
stc
daa
test
adc
arpl
push
stos
imul
push
add
mov
filds
mov
mov
xlat
data16
arpl
add
cmp
fildll
cs
or
inc
stc
cmp
pop
pop
sub
pop
dec
cli
inc
pop
ret
pushf
mov
mov
xor
push
xchg
fcoml
sbb
add
adc
sbb
int
mov
outsb
in
push
cmpsl
std
mov
jp
cmp
aas
mov
addr16
inc
jp
fwait
pop
xor
lret
stc
ljmp
push
scas
test
jnp
insb
outsb
mov
jno
sub
xlat
rcll
mov
jns
iret
sbb
lods
xchg
nop
nop
sub
int3
fwait
pop
push
arpl
jb
and
cmpsl
xchg
arpl
xchg
mov
dec
inc
flds
jmp
and
enter
xor
dec
mov
dec
mov
jbe
dec
cmp
mov
push
scas
add
daa
push
sub
xchg
and
and
add
sbb
mov
cld
repnz
leave
into
ljmp
xor
mov
fcmovnbe
or
sbb
push
rcl
ret
in
popf
sahf
in
decl
movsb
jnp
add
sbb
mov
push
mov
xor
jmp
jbe
mov
repnz
pop
das
repz
imul
fs
cmpsl
jbe
sbbl
add
ss
pop
mov
lock
arpl
jne
lahf
push
xchg
ds
pop
mov
inc
pop
sbb
jecxz
mov
mov
test
lds
jbe
pop
add
adc
dec
mov
js,pn
pusha
mov
test
lcall
imul
cmp
in
mov
lods
aam
xchg
add
lock
mov
sub
push
jae
sub
push
fsts
xchg
push
out
loopne
popa
ret
lahf
imul
fsubs
cmc
data16
ss
inc
dec
sub
outsl
in
sbb
xchg
push
repnz
notb
dec
mov
mov
fwait
sbb
test
outsb
es
insb
cmp
add
add
inc
push
popa
inc
and
leave
mov
cmp
js
sbb
mov
lea
mov
inc
xchg
sub
addr16
es
cmp
movsb
xchg
xlat
wbinvd
mov
movsl
test
sbb
push
add
insl
or
lods
mov
xor
repz
mov
dec
mov
dec
lds
imul
sbb
push
hlt
movl
pop
jge
aad
pushf
das
ds
jmp
fidivl
push
xor
adc
jbe
adc
fnstenv
lret
sub
and
inc
enter
ja
int
fstl
xchg
xor
mov
adc
bound
jp
sbb
lock
pop
jbe
xlat
push
dec
ret
shlb
cmp
fcomip
test
dec
mov
bound
xor
jb
popa
dec
fs
test
mov
test
lods
movsb
les
and
mov
das
insb
fadds
mov
movsl
inc
or
test
scas
pop
jl
imul
cmpl
add
push
sbb
loopne
inc
mov
mov
add
jmp
in
into
lcall
push
pop
jns
push
aaa
mov
inc
jp
push
andb
imul
pop
and
xorb
in
cmp
jae
or
push
push
jge,pt
mov
rolb
fadd
mov
pop
inc
jp
jle
in
pop
mov
in
dec
or
sub
mov
stc
xor
cli
in
in
enter
jmp
cltd
xchg
sar
enter
push
and
xchg
cld
inc
sbb
idiv
sub
mov
and
xor
sub
cmp
lcall
lods
cmp
fsts
adc
pop
outsb
mov
ret
out
js
lea
cwtl
les
fldcw
cmp
out
outsb
movsb
adc
pop
sbb
roll
and
dec
cmp
rolb
dec
mov
xlat
lret
or
je
lcall
adc
push
push
and
xchg
push
add
adc
popf
pushf
outsl
cld
sub
jmp
testb
notl
scas
in
loopne
outsb
jmp
gs
dec
cwtl
dec
sarl
mov
push
and
in
test
pop
sbb
sub
insl
mov
mov
jmp
mov
std
cmp
cmp
push
jl
pop
fnstsw
push
and
adc
inc
outsl
add
xor
sbb
xchg
stos
inc
xchg
rorb
insl
mov
mov
xor
data16
notl
js
aas
into
pop
mov
jmp
cmp
lods
in
cltd
dec
movsl
and
cmp
mov
or
loopne
out
and
mov
dec
push
sub
shlb
inc
jnp
les
fsqrt
push
dec
mov
in
pop
int
jo
sub
inc
mov
aaa
mov
ljmp
cmp
inc
or
negb
scas
nop
jmp
or
mov
jnp
pop
jb
sti
int3
push
loopne
push
enter
sarl
sahf
inc
add
decb
mov
hlt
ss
inc
lock
ret
mov
ret
aam
push
jp
pop
mov
sahf
repz
push
aam
xadd
aas
aas
sbb
cmp
insb
adc
and
stos
lahf
mov
nop
jae
cwtl
mov
test
xlat
xchg
rolb
xchg
fdiv
jg
or
push
loope
inc
in
pop
xchg
mov
jne
inc
mov
test
push
jo
std
mov
push
ret
inc
add
cmp
cmp
imul
hlt
mov
loopne
ror
or
adcl
sub
loopne
jae
outsb
cltd
mov
sub
sub
bound
fwait
cld
mov
test
je
sub
add
ja
into
fcomps
jmp
push
cmpsl
sbb
jmp
fwait
sub
pop
arpl
or
sub
xchg
sbb
add
xor
mov
jae
mov
push
mov
push
cmp
push
dec
nop
daa
ficomps
add
gs
andb
inc
push
cmp
nop
mov
fstps
lea
mov
sub
sub
test
mov
js
push
pushf
fwait
jns
mov
mov
cmp
int
cmp
add
subl
mov
xchg
icebp
cld
fmull
notb
mov
fs
pop
outsl
jp
pushf
adc
and
jbe
dec
int3
sub
sbbb
and
in
outsl
xor
add
dec
cmp
add
sbb
aaa
xor
pop
add
std
add
fisttps
pop
pop
xor
adc
mov
stos
mov
mov
insb
xor
inc
push
jle,pt
adc
jo
jle
pop
mov
cmpsb
add
mov
clc
scas
xorl
push
fcos
mov
jl
inc
mov
test
cmpsl
mov
cwtl
or
pop
cmpsl
mov
xor
test
cmp
test
xor
clc
or
jae
jo
fwait
aam
repnz
mov
push
jmp
out
mov
pop
arpl
fdivl
imul
in
test
sbb
mov
push
cmp
movsl
and
sub
jne
mov
ss
sbbb
adc
scas
int
leave
dec
or
jge
sarl
dec
inc
cmc
shlb
arpl
in
cmpsb
mov
pop
push
jbe
sbb
lret
lods
rcr
mov
mov
scas
out
push
push
rolb
int3
stos
lods
cmc
sub
mov
decl
shrb
jge
mov
jne
and
stos
imul
ss
sub
and
jns
mov
mov
inc
leave
xor
adcb
adc
xor
jp
push
shll
insl
lea
xor
ds
sub
cmp
mov
mov
mov
es
loop
test
xor
push
out
icebp
cltd
inc
test
test
das
dec
add
lea
addl
pop
pop
adc
pop
add
mov
mov
stos
cmp
add
lods
and
je
ja
mov
sbb
xor
jo
mov
push
fisttpll
mov
es
sub
test
adc
xor
leave
inc
jne
lcall
sbb
mov
push
inc
mov
xor
xlat
inc
arpl
int
into
cmc
ss
adc
xchg
out
sahf
and
adc
pop
cmp
pop
neg
dec
jns
inc
jns
xor
jg
sbb
imul
lret
fidivrl
mov
sbb
test
stc
cmp
not
cmp
ja
pop
and
xchg
sbb
xor
test
das
xchg
fnstcw
aas
sti
arpl
outsb
outsl
push
and
mov
sahf
in
dec
shll
xchg
mov
imul
das
popf
out
push
in
xchg
add
lock
mov
push
mov
inc
je
call
jbe
std
stc
cmp
bsr
xchg
iret
mov
loop
popf
push
sbb
cmp
lret
fcomps
and
push
es
subb
mov
pop
das
cmpsl
pop
insb
mov
lahf
and
out
out
shlb
push
mov
cmp
mov
mov
xor
cltd
mov
mov
xchg
xor
mov
lcall
rcrl
in
in
xchg
sbb
jmp
xchg
idivl
xchg
xlat
ds
mov
pop
push
jge
cmp
pop
lret
cld
jae
pop
clc
sub
xchg
sar
xchg
mov
sub
xor
call
push
xchg
out
inc
or
or
lcall
cmpxchg
repz
jae
in
repnz
and
sahf
xchg
shrl
fists
jns
sbb
mov
jnp
in
dec
andb
daa
int3
jno
pop
push
rol
pop
je
cltd
enter
sbb
mov
sbbb
add
xor
adc
or
jle
ljmp
pop
jg
and
out
mov
push
daa
jmp
pop
js
inc
mov
mov
insl
xor
pop
negl
out
fisttpll
ret
lret
mov
cmp
iret
pop
fisubs
mov
jns
jnp
jle
test
lcall
aad
popf
dec
addl
sub
mov
dec
cmp
mov
mov
pop
xchg
std
mov
sti
push
mov
dec
mov
mov
inc
or
int3
insb
inc
xchg
inc
push
add
cmp
xchg
push
fidivrs
and
add
and
add
mov
mov
mov
fisttpll
add
imul
xor
cmpsl
xchg
inc
test
push
jmp
lret
notb
xlat
js
mov
test
fdivrs
movsl
cli
sbb
sti
push
int3
jmp
cmp
jp
cmc
add
push
push
mulb
js
loope
sub
lea
mov
jecxz
lret
pop
call
sbb
mov
pop
leave
or
mov
push
cmp
daa
jbe
inc
push
and
icebp
out
push
sub
sub
mov
lret
pop
scas
mov
mov
in
mov
daa
lods
aam
in
jns
mov
scas
adc
or
mov
push
adc
inc
cmp
and
add
fs
sbb
sbbb
and
jns
xchg
out
push
ret
pusha
fbld
in
push
xchg
pop
and
inc
or
test
pop
mov
pusha
out
shlb
push
cmp
jecxz
add
cmp
mov
mov
xlat
push
adc
std
imul
in
xchg
in
or
int
dec
adc
imul
cmp
fisttpll
dec
decb
and
xor
xchg
lret
dec
cmp
out
push
add
mov
xchg
test
pop
enter
mov
pop
clc
pop
mov
mov
iret
fcmove
mov
je
jne
test
or
fistps
sbbb
sbb
mov
mov
or
stos
dec
out
ror
fsubrl
cs
arpl
mov
test
test
inc
push
lcall
cmp
pop
mov
push
xchg
out
cmpb
push
nop
push
cvtps2pi
nop
hlt
out
or
loopne
xchg
sub
repnz
xor
mov
jns
xchg
enter
or
push
lds
push
xchg
je
sub
enter
mov
dec
adc
pop
push
sub
pop
xchg
mov
int3
pusha
daa
les
cmp
inc
pop
ficoml
cmp
mov
push
pop
rolb
int3
stc
mov
repz
sbb
push
mov
into
fcomps
cmpsb
adc
dec
mov
xchg
and
mov
in
jmp
repnz
mov
pop
es
push
jl
xchg
fwait
outsl
out
shrl
je
int3
adc
js
add
mov
clc
xchg
test
movb
or
mov
sub
popa
fcomps
ja
xchg
sahf
push
out
or
daa
mov
cld
arpl
in
mov
hlt
movl
into
sti
cmp
in
out
imul
xor
xlat
mov
cmp
and
jl
jle
shl
mov
outsl
dec
shrl
sub
push
mov
add
js
bound
fstl
dec
or
scas
outsl
jecxz
lret
test
and
lret
jae
adc
push
stos
aam
pop
dec
jp
enter
sbb
addl
jnp
repz
xchg
and
add
pop
or
or
ds
mov
and
sub
xchg
mov
cmp
js
jecxz
out
sti
add
js
mov
cmp
mov
xor
jns
or
shrb
xor
sub
xchg
inc
jnp
jno
add
ficoml
pop
gs
dec
outsl
mov
mov
hlt
or
pop
movsb
xchg
mov
xchg
movsb
and
cmpl
lahf
and
sbbl
fisubs
out
test
aad
or
dec
mov
xor
and
adc
push
xlat
xor
mov
xor
mov
cwtl
adc
mov
pop
repnz
scas
sub
test
adc
lret
xchg
fsubp
scas
add
movsb
mov
jns
mov
inc
sahf
sti
rcrb
jno
adc
jecxz
push
sub
clc
adc
sub
popa
dec
push
das
push
jnp
fbstp
mov
test
push
pop
lods
pop
aaa
and
jae,pn
sub
iretw
test
mov
add
popf
sub
imul
mov
sar
lret
in
pop
ret
sbb
push
in
mull
add
sbb
fmuls
dec
cld
adc
sub
cmp
and
fldcw
xor
push
and
inc
cmp
jb
xor
ljmp
lahf
and
cmp
rcll
int3
push
test
es
addr16
movsb
sub
pop
mov
loopne
mov
xchg
and
das
inc
mov
mov
iret
shll
sub
ss
leave
sub
ret
jb
adc
fsubs
mov
add
sbb
ljmp
mov
je
test
sar
inc
add
push
or
add
addb
push
cmp
dec
int
xchg
adc
jno
stos
sub
insl
jp
arpl
mov
xchg
mov
inc
shll
repnz
pop
xchg
jns
push
cmpsb
cmp
mov
aas
adc
xchg
sub
in
rdtsc
mov
clc
jnp
or
push
mov
push
das
mov
insb
fnstenv
dec
sub
jg
je
dec
cwtl
jle
test
sub
pusha
insb
inc
and
ss
icebp
mov
inc
xchg
mov
lds
subb
enter
mov
insb
xchg
adc
add
aaa
mov
jne
mov
call
cmpsl
loop
ficoms
cmp
xchg
sub
push
mov
mov
scas
push
mov
and
bound
pop
imul
enter
and
insl
sub
xchg
scas
outsl
in
mov
jmp
fdivs
sub
xchg
lods
and
loop
jp
dec
lds
sub
mov
aam
jp
mov
push
pop
fs
mov
sub
cwtl
lret
rcrb
xor
inc
sub
out
sbb
ret
not
je
xlat
push
mov
addr16
sub
mov
push
xor
lret
mov
sbb
dec
sbb
xor
lahf
xchg
cmpl
pop
push
popf
data16
lock
cmpl
cmp
inc
in
dec
outsl
out
mov
aaa
sbb
mov
mov
dec
adc
inc
xchg
push
sbb
fbld
mov
and
xor
push
sbb
sbb
mov
das
cmp
mov
xchg
rolb
std
hlt
mov
cmp
sub
xchg
sbb
cmp
mov
and
sub
sbb
pop
add
mov
and
fcompl
lds
cltd
lods
jns
mov
cmp
mov
and
mov
aas
shll
out
sbb
mov
sbb
and
inc
test
fwait
cld
fidivs
int3
pop
repnz
pop
mov
dec
jl
inc
out
pop
into
test
pop
push
xchg
dec
push
insl
mov
mov
outsl
and
dec
dec
pushf
addr16
jmp
sbb
ret
mov
repz
and
fimull
mov
mov
daa
mov
sbb
daa
sbb
mov
pop
push
bound
and
std
pop
push
jle
adc
div
or
lock
lret
fldt
std
pop
pop
lods
int
arpl
std
or
lret
xchg
push
dec
popf
add
fstl
movsb
cmp
stc
jo
out
mov
adc
imul
jbe
adc
pushf
test
sub
aas
fwait
sub
fstp
aaa
inc
jge
xchg
cltd
xor
std
push
push
stos
push
lock
pop
or
jne
mov
sub
push
xchg
test
pop
lahf
add
dec
xchg
icebp
rcr
mov
mov
scas
pushf
sahf
ljmp
mov
push
popf
arpl
int
into
mov
mov
imul
adc
push
mul
rcr
rcll
xchg
or
inc
loop
sub
xchg
mov
push
jecxz
jne
js
dec
mov
mov
jne
bnd
mov
test
xor
fcmovbe
push
push
push
jns
jo
lods
add
nop
mov
out
or
imul
adc
ljmp
pop
bound
mov
bound
xor
out
sbb
out
jae
mov
jge
stc
gs
jmp
orl
lea
mov
jo
lods
jmp
outsl
push
fnstenv
push
test
test
jmp
idiv
in
pop
xchg
dec
jne
jp
movsb
and
dec
fxch
mov
pop
or
popf
aas
sub
into
and
sbbb
dec
cmp
inc
push
mov
rclb
outsb
icebp
int
sub
jne
imul
out
pop
iret
sbb
movsl
loop
mov
jnp
pop
add
ror
pop
xlat
or
incb
mov
lea
inc
stos
ljmp
cli
push
hlt
push
mov
enter
test
push
hlt
jl
aad
and
cld
das
jg
scas
popa
mov
jl
lods
jg
push
inc
pop
mov
out
lahf
js
clc
pcmpgtb
fcomi
ds
xor
scas
int3
pop
pushf
xchg
add
xchg
inc
test
loopne
je
rcll
mov
out
mov
mov
jno
in
mov
aad
lea
ja
add
cltd
int3
addr16
dec
jns
sbb
dec
sub
cmp
push
mov
shlb
cs
adc
or
ja
aad
lods
out
imull
xchg
push
adc
push
mov
movl
jae
and
pop
push
xchg
addl
inc
stos
mov
inc
shlb
inc
out
pop
mov
fisubl
cmpsb
mov
xchg
pop
mov
je
fstl
push
adc
xor
xlat
outsb
inc
push
and
lret
mov
add
xchg
andb
jle
jns
outsl
int
popa
cmp
sub
ror
inc
mov
mov
in
lcall
enter
mov
xchg
bnd
xchg
sbb
andb
ret
sub
mov
dec
mov
inc
xchg
push
popa
clc
and
pop
aad
sbb
xor
jne
dec
dec
adc
inc
es
sub
mov
test
dec
sbb
sbb
or
xchg
repz
and
xor
xor
aas
mov
adc
icebp
sbb
scas
mov
xor
ljmp
mov
lcall
iret
pop
jmpw
jmp
imul
mov
xchg
in
or
ret
cmp
icebp
sub
mov
fidivrs
sub
cmpsb
sti
xchg
push
pusha
mov
fcomi
jge
jae
mov
sub
sbb
sub
add
cld
adc
add
lahf
loopne
aam
mov
enter
xchg
jae
jb
push
push
jp
stos
adc
adc
and
inc
pop
cmp
rclb
dec
lea
and
jbe
in
stc
jecxz
inc
or
sbbb
jo
jg
enter
sub
fisubrs
dec
cmp
pop
push
ss
rcll
dec
sbbb
scas
fstps
rclb
pushf
cld
lods
pop
test
mov
push
or
and
loop
fld
sti
imul
cld
mov
sbb
test
fimull
mov
inc
mov
pop
out
jnp
push
incb
cli
cmpsl
push
jbe
ret
xchg
cld
testb
mov
test
sub
pop
in
push
cwtl
pusha
sub
pop
adc
jmp
xor
and
add
xor
inc
in
das
sbb
fdivl
in
out
jl
stos
pop
lds
mov
test
inc
in
xor
mov
adc
or
out
outsl
mov
repz
lcall
xchg
repz
pop
aaa
add
sbb
cmpl
and
sbb
aaa
xchg
mov
test
cmp
sub
jle
xor
dec
cmpsb
push
out
push
ret
out
jg
aaa
outsl
push
xor
lods
mov
lock
mov
mov
gs
mov
dec
mov
ret
sbb
cli
aas
out
insl
inc
xchg
xor
xor
jmp
pop
movsb
idivb
imul
and
pusha
andl
cmp
adc
inc
in
ret
push
add
out
xchg
jmp
test
mov
or
xchg
fisubrs
mov
sbb
into
stos
sbb
imul
hlt
out
mov
cmp
cmp
roll
aas
push
movsl
nop
js
js
dec
lock
jp
movl
imulb
pop
push
ret
sbb
mov
xchg
mov
cmc
cmpsb
idivb
test
jecxz
call
inc
and
aad
out
inc
pusha
jb
cmp
inc
push
stc
stc
inc
or
cmpsb
and
mov
enter
cmp
loope
add
cmpsb
dec
jbe
ret
or
cmp
lea
mov
xchg
pushf
or
pusha
jge
push
enter
push
pusha
inc
inc
or
mov
mov
mov
mov
cmp
cmpsb
mov
jno
loop
bnd
sub
xor
jae
push
rep
aam
push
push
mov
dec
lcall
fldt
inc
dec
or
mov
add
jae
sbb
jo
and
xchg
sub
sub
mov
ret
cmc
adc
fwait
and
mov
mull
sbb
int3
mov
cmp
test
push
pushf
pop
jno
jmp
lahf
mov
inc
call
or
fwait
sbb
clc
repnz
icebp
sub
test
adc
mov
dec
lret
mov
mov
test
mov
cmp
mov
adc
sbb
mov
pusha
rorb
jle
mov
js
mov
lahf
xor
pop
jo
adc
mov
movsl
out
test
icebp
pop
fsubl
push
push
add
pusha
inc
xchg
xchg
adc
sti
push
xchg
fisubl
inc
mov
inc
call
sti
inc
rcrb
xchg
sub
mov
lahf
loop
lock
movsb
daa
ss
pop
jmp
jle
jmp
jae
dec
cmp
mov
aaa
mov
movsb
pop
leave
insb
adc
and
cs
mov
loop
ret
cmp
lock
inc
lcall
xchg
adc
mov
cmp
sub
rol
mov
mov
enter
xor
pop
dec
mov
xchg
mov
fcomps
xchg
outsb
test
xor
push
addl
stc
mov
pop
nop
pop
mov
in
jno
fisttpl
push
iret
aas
add
scas
jae
jecxz
pop
adc
notb
mov
mov
and
xor
sbb
popf
mov
imul
stos
cmp
xchg
loope
push
xlat
sti
mov
in
les
cmp
push
jg,pn
push
pop
stos
and
cmp
in
dec
lahf
repnz
mov
jbe
movsl
shrb
leave
adc
out
mov
dec
sub
pusha
inc
mov
ds
jbe
dec
add
cmp
testb
popf
lock
jecxz
jle
sub
in
cmpsl
push
or
mov
xchg
or
xchg
mov
imul
call
and
add
cmpsb
int
ds
gs
cmp
and
in
dec
aaa
xor
push
popf
inc
test
insl
inc
sub
cs
stos
pusha
xorl
mov
icebp
mov
pop
xor
cld
cmp
push
aaa
je
hlt
mov
sbb
mulb
out
sti
ret
insl
movsl
push
xchg
bound
mov
push
cmpsb
mov
divl
mov
cmc
ja
mov
adc
std
xchg
xchg
ret
sahf
shrl
pushf
sub
leave
sbb
hlt
movsb
or
jp
sub
mov
rcrl
movsl
int3
in
cmpsb
or
mov
mov
fisttps
sbb
pushl
daa
dec
ljmp
test
fwait
stc
jbe
in
es
int
push
shlb
enter
lock
pop
mov
xchg
jo
sbb
sti
push
lret
lret
notb
adc
push
add
gs
mov
movsb
cmp
or
or
sbb
cmp
add
es
aam
dec
int3
insb
adc
enter
repnz
loope
mov
sub
push
fistpl
aas
pop
adc
loopne
xchg
shrl
xchg
mov
jl
fimull
fistps
xor
fcomps
sbb
or
subl
into
xstore-rng
cmpsl
add
nop
push
loope
fsubrl
int
pop
in
add
sbb
push
cli
sbb
fcoms
lods
and
push
sbb
stos
jge
sbb
lret
dec
gs
std
adcb
and
inc
aam
add
nop
cli
push
inc
scas
out
insb
ret
mov
jno
mov
ret
sub
out
iret
or
mov
mov
hlt
je
loopne
dec
insb
xchg
dec
cmp
outsb
add
aad
in
push
mov
jl
lret
push
leave
je
push
xlat
test
or
daa
add
lret
cwtl
fiaddl
sub
in
imull
mov
push
icebp
stos
pop
jae
push
inc
xchg
jbe
pop
mov
mov
outsb
cmp
push
and
mov
push
inc
adc
in
repz
addr16
add
pop
pop
xor
adc
mov
or
jl
insb
loop
and
inc
in
int
dec
lods
push
jp
push
sbb
push
xor
sahf
scas
sub
aam
and
sbb
and
lret
cwtl
mov
dec
lahf
cli
push
push
pop
es
sbb
data16
stos
dec
mov
jbe
add
test
mov
push
mov
push
jle
cs
sub
and
lret
xchg
imul
jle
sub
inc
popa
push
jno
xor
stos
popa
ret
fs
ljmp
lea
dec
pop
pop
mov
rorl
sub
mov
rorb
repnz
xchg
daa
or
bound
cmp
sub
shrl
in
ja
rol
mov
inc
cs
das
pop
jns
cmc
mov
aam
and
mov
jle
data16
shl
xor
fidivrs
scas
add
xchg
loopne
or
lret
mov
jecxz
xchg
xchg
ja
jnp
sub
and
mov
or
pop
sti
add
outsb
jmp
test
fbstp
jns
jmp
mov
push
addl
bound
push
outsb
or
aaa
pop
and
gs
pop
jmp
mov
lods
popf
insl
call
cmp
xchg
jmp
stc
mov
imul
sbb
pop
xchg
pop
cmc
or
xchg
clc
icebp
loope
cmp
mov
sub
jns
or
sbb
push
ss
out
dec
in
mov
cmpsl
adc
pop
and
push
lea
das
xchg
popf
lea
pop
sahf
jns
add
xor
popf
cmp
jb
test
es
cs
inc
mov
mov
xchg
xchg
add
cmpsb
stc
xchg
pop
xorb
mov
in
xor
mov
in
lods
or
dec
stos
dec
inc
mov
xchg
and
in
test
aad
out
loope
sbb
or
pop
rcll
das
cmc
loopne
mov
ret
sub
cmpsl
inc
call
mov
mov
mov
cmpsb
sbb
in
xchg
test
fwait
push
sbb
loop
or
sbb
xchg
inc
inc
mov
jo
mov
sbb
jae
jbe
mov
mov
mov
fdivr
out
fbstp
push
push
mov
pop
adc
in
xchg
add
add
movsl
mov
add
adc
xor
jl
lds
sub
cmp
inc
rcrb
pusha
dec
xlat
es
arpl
cmpsb
cmc
das
repz
std
cmp
outsl
xchg
pusha
cmp
push
ret
out
sar
lock
jno
inc
daa
inc
mov
fidivs
mov
inc
adc
adc
in
jmp
pop
mov
leave
xchg
xchg
xor
stc
jmp
mov
leave
mov
testb
cld
sub
xor
cmp
xor
lcall
std
mov
std
push
in
mov
xchg
adc
mov
mov
fsubs
mov
xchg
aas
push
xchg
xlat
sbb
mov
stc
fdivs
ss
imul
roll
or
xchg
inc
cs
push
test
adc
mov
sti
sbb
daa
adc
jl
negl
mov
jecxz
daa
clc
xchg
add
stos
aas
and
sub
lods
lret
ljmp
sub
add
incb
ret
jb
sub
loopne
test
mov
pop
imull
jb
ljmp
push
and
push
mov
rcl
add
jecxz
sub
daa
pop
enter
or
insb
lds
and
jp
js
push
jl
notl
and
sbb
rorl
jg
push
sbb
in
and
rclb
imul
cmpsb
mov
daa
mov
addr16
xor
push
aam
add
sbb
cmp
xchg
xor
add
es
call
xor
mov
dec
imul
xchg
or
pop
xor
stos
fildll
mov
mov
xchg
xor
push
cs
push
mov
fimuls
push
cmp
lods
push
insl
insb
inc
ljmp
xchg
cmc
mov
out
ss
and
cmp
je
js
dec
loop
in
aam
shr
push
jbe
aaa
pop
enter
arpl
pop
sub
into
in
push
movsb
mov
push
add
push
mov
fistl
sub
fcoms
push
dec
adc
loope
pusha
fidivl
mov
cltd
fdivrl
push
mov
cli
mov
mov
mov
out
aad
inc
push
pop
aas
rorl
sbb
adc
or
aaa
mov
xor
mov
mov
sbb
bound
cld
shll
pusha
jo
sbb
lcall
mov
mov
and
push
mov
mov
sahf
push
pop
or
push
push
leave
add
adc
inc
bound
sbb
cmp
adcl
jp
cmp
out
das
cld
mov
mov
scas
jbe
imul
add
cmpsb
mov
or
out
movzbl
jns
pushf
add
mov
jge
hlt
mov
mov
data16
loope
call
mov
mov
and
mov
out
mov
pop
mov
out
out
sbb
mov
sub
dec
sbb
std
jle
xchg
pop
test
xor
jl
imul
sbb
and
inc
lret
imul
mov
aas
mov
cmp
pop
movsb
lret
arpl
andb
bound
xor
push
popf
jo
push
push
movsl
stos
out
popa
icebp
pop
lods
std
jmp
pop
sahf
sbb
jl
nop
adc
mov
out
mov
xchg
test
test
dec
mov
sbb
pop
sub
cmc
or
leave
adc
enter
pop
lahf
test
xchg
and
adc
pop
mov
loop
mov
decl
ljmp
cmpsb
inc
in
jnp
or
pop
lods
insb
mov
inc
inc
xchg
ja
jp
and
pop
pop
gs
pop
mov
or
jecxz
sbb
jl
adc
pop
cmp
arpl
int3
and
outsl
push
fsub
add
lods
xchg
sbb
mov
in
mov
inc
push
mov
push
adc
scas
or
mov
mov
or
movsl
mov
in
cmp
mov
lahf
push
and
dec
cld
rcll
xchg
adc
sbb
inc
jbe
add
addr16
repz
xchg
js,pt
sub
push
fs
sbb
add
hlt
out
xor
jecxz
jecxz
sbb
cwtl
jl
adc
div
pop
test
cli
cmp
imul
xchg
mov
xchg
fldl
pop
std
cmp
cmpsb
test
mov
loope
sub
loop
and
or
sbb
xchg
cmpsl
icebp
push
and
inc
mov
js
mov
push
and
pop
jno
jg
test
mov
push
enter
sub
in
pop
mov
cmp
jmp
add
adc
js
mov
aas
mov
and
sbb
push
add
sbb
adc
dec
jmp
sbb
push
mov
mov
movb
lock
arpl
dec
push
lahf
bswap
vpunpckhwd
mov
pop
inc
fisttpll
mov
outsb
das
xor
mov
xor
leave
adc
and
popa
int
xchg
lock
dec
jg
add
imul
insl
xor
inc
xorb
cmp
dec
add
dec
shll
iret
mul
andl
sarb
cld
shlb
and
sahf
dec
fs
insb
push
jo
push
hlt
xlat
filds
add
daa
clc
jnp
pop
cmc
ss
lock
sub
fcom
jae
mov
sub
or
xor
jo
mull
in
push
xchg
cltd
inc
rorb
mov
jbe
in
pushf
arpl
mov
dec
movb
jecxz
lahf
stos
lret
daa
pusha
sbb
dec
xchg
aam
idivl
clc
je
mov
pop
aaa
pop
adc
test
jl
pop
mov
arpl
mov
test
in
into
mov
adc
and
popf
xor
sub
dec
pop
xor
add
movsl
out
lock
inc
rolb
sbb
call
jmp
dec
insb
cmova
sbb
popf
movsl
dec
mov
testb
cmc
push
inc
jmp
and
ret
lea
pop
stc
into
ficoms
push
movb
outsb
lahf
push
mov
inc
jbe
aaa
leave
je
test
or
outsb
mov
mov
xor
push
mov
int
xchg
jmp
shll
jmp
xchg
insb
aam
pop
and
xchg
aam
lret
js
std
xor
rolb
pushf
mov
std
pop
xlat
lods
sbb
jecxz
loopne
add
hlt
mov
test
ds
das
sbb
fwait
lret
cmpl
outsb
dec
adc
int
push
pusha
push
fsubs
mov
imul
mov
push
pop
lret
jmp
orl
nop
pop
stc
mov
xor
ret
xchg
mov
test
jno
mov
or
mov
sti
int
daa
mov
cmpsb
cli
aam
jne
adc
cs
test
fs
xchg
fidivrl
push
pop
daa
xchg
adc
rorl
mov
sub
dec
iret
nop
loop
repz
sbb
push
fwait
aam
mov
pop
int3
arpl
and
cwtl
jmp
iret
mov
add
stos
in
repnz
stos
mov
jbe
lahf
sub
or
rorb
lahf
in
dec
xchg
mov
ljmp
push
mov
int3
rclb
imul
movb
repz
push
aaa
xor
call
cld
fnstcw
scas
and
movsb
jns
xchg
stc
lcall
inc
push
or
and
mov
lock
aas
cmp
les
mov
stc
loope
jnp
add
pop
add
hlt
cmpsl
mov
inc
scas
mov
mov
adc
dec
iret
cmpsb
ffree
cmpb
push
pusha
mov
push
stos
out
icebp
adc
adc
rcl
cmp
push
pop
push
aam
jge
xchg
xchg
push
in
repnz
xor
leave
lock
out
mov
sti
sub
out
add
inc
pop
mov
pusha
xchg
inc
idivl
mov
push
xchg
daa
mov
xor
stos
mov
adc
inc
daa
xor
push
sbb
jnp
and
push
jnp
sbb
sub
mov
jns
popf
pop
inc
inc
xchg
sbb
mov
push
pop
std
pop
jmp
push
dec
icebp
std
mov
mov
or
xor
mov
orb
xlat
xchg
leave
fsubs
std
mov
ret
or
pop
or
js
fwait
int
aas
jnp
jle
test
mov
stos
je
lcall
xor
es
jg
cmpsl
push
ja
icebp
push
or
inc
andl
stc
jb
or
or
lret
lret
mov
jecxz
jnp
scas
addr16
or
sub
fsts
icebp
xchg
pop
sub
cld
pop
pop
or
es
jne
sbb
cmp
rcrl
int
fildll
insb
movl
adc
xchg
push
push
add
jg
mov
insl
and
push
int3
test
loope
cmp
fwait
sub
rcll
lds
mov
bound
cli
add
rorl
jb
add
adc
flds
or
popf
cltd
pop
dec
lcall
add
test
imul
lds
lock
adc
call
das
cmpsl
sarl
jo
mul
push
jae
dec
loope
adcb
add
mov
xor
xchg
cld
dec
adc
add
jns
movsb
cs
lcall
testl
jo
sbbl
push
lcall
lret
ljmp
sbb
ljmp
sbb
xchg
outsb
cmpsl
jae
dec
orb
or
imul
loop
xor
inc
xchg
xchg
pop
adc
pop
xchg
adc
sbb
pop
call
pop
push
push
icebp
flds
xchg
mov
jp
stos
arpl
sahf
pop
lds
mov
add
inc
aam
xchg
mov
add
inc
pushf
movsb
call
imul
sub
dec
hlt
jno
out
sbb
inc
mov
adc
sbb
mov
adc
cmpsb
sub
cmpsl
fwait
pushl
mov
lret
mov
leave
mov
mov
mov
mov
cli
push
push
and
push
shrb
pop
dec
imul
in
cmp
xchg
test
enter
pop
rolb
test
mov
mov
dec
mov
inc
imul
jns
fdivrp
or
repz
mov
lods
cmpsb
call
int3
mov
dec
add
push
xchg
idivl
fisubrl
das
inc
pop
fcompl
test
cmp
sbb
in
mov
xor
aam
xchg
pop
cmp
sbb
mov
repz
iret
pop
xchg
or
ljmp
daa
repz
call
jecxz
cmpsb
jo
jl
adcb
ja
jo
and
js
xor
aaa
xor
pop
pushf
xchg
jecxz
in
lahf
mov
sub
aam
fs
sbb
gs
stos
xor
vphaddwd
push
mov
xchg
mov
cmp
imul
and
adc
dec
mov
mov
push
dec
je
imul
cmp
sbb
mov
shl
adc
push
add
xchg
push
cltd
push
in
push
call
mulb
ss
lods
pop
dec
mov
je
nop
subl
adc
and
repnz
xchg
ret
mov
call
not
cmp
push
jno
enter
out
subl
mov
jmp
ficomps
in
ret
arpl
cli
jecxz
or
cmpsb
in
push
adc
adc
jns
mov
xor
mov
cs
pop
inc
ret
lcall
enter
or
fdivrp
jno
cmc
pop
mov
movsl
js
fisttpll
lods
out
add
cld
scas
jo
stos
call
incl
insb
repz
les
cs
or
shlb
dec
push
orb
jo
insl
jnp
adc
fwait
inc
jb
mov
subb
dec
add
pop
push
mov
in
push
addr16
test
and
pop
data16
outsl
dec
cwtl
fucomip
mov
dec
addb
lods
mov
push
addr16
subb
out
jle
clc
jg
loop
or
sbb
sub
adc
sbb
inc
jp
scas
add
push
cmp
and
mov
mov
push
fwait
mov
add
loopne
or
xor
mov
jno
xchg
sub
mov
mov
sarl
xor
daa
jmp
mov
xchg
jmp
lods
shll
fsubs
cs
pop
loopne
inc
inc
aam
jns
jp
mov
jl
mov
xor
enter
mov
push
or
xchg
addb
pop
outsl
jnp
insb
cmp
in
mov
nop
push
fstps
icebp
sbb
cld
sbb
icebp
repz
call
shrl
ja
and
mov
lods
xchg
xor
dec
inc
xchg
xchg
sub
repz
push
xchg
fldl
pop
inc
mov
or
stos
mov
mov
pop
sbb
push
lret
xorl
test
les
jb
aas
scas
cmc
sbb
lret
mov
stos
mov
cmp
mov
mov
mov
cmp
pop
and
bnd
add
mov
fsubr
fstpt
fsubrs
arpl
rcr
inc
fstl
les
xor
mov
add
inc
imul
mov
inc
outsl
push
xor
enter
sbb
pop
shr
and
cmp
or
dec
mov
xchg
mov
sub
adc
rcl
pop
push
sarl
test
idivb
sbb
insb
xchg
pop
shrl
sbb
push
and
aam
and
xchg
xlat
xor
and
into
loope
inc
aas
push
mov
add
mov
sub
jmp
fcomp
sub
lods
lods
xchg
push
pop
push
push
adc
ja
push
dec
idivl
out
cld
mov
imul
mov
lahf
jb
bsf
adc
add
cmp
mov
add
popf
int
inc
push
mov
mov
lcall
cltd
cmc
pop
stos
xor
cltd
inc
jl
mov
mov
mov
push
int
jp
pushf
mov
dec
or
mov
fs
std
dec
ret
aam
test
push
and
inc
pusha
push
bound
sbb
gs
mov
imul
fwait
dec
pop
mov
loope
push
inc
repnz
pop
notl
cli
push
rcr
or
add
dec
jle
xchg
daa
cmp
or
push
dec
or
lods
add
push
or
mov
mov
inc
je
cmp
repnz
adc
and
test
sub
enter
add
ret
cli
test
dec
push
mov
mov
je
inc
dec
iret
ja
lock
cwtl
fsubrl
out
addr16
outsb
inc
xor
lcall
shll
sub
jb
dec
cmpsb
push
ljmp
out
sbb
into
jae
popa
push
fisubs
dec
les
mov
fadds
adc
push
mov
andl
fdivrs
clc
sbbb
test
or
subl
es
xchg
mov
mov
push
js
sub
popf
call
sub
notl
push
popa
stos
lock
inc
or
lcall
push
lds
push
push
sarb
insb
or
mov
sub
mov
sbb
imul
mov
pushf
jge
mov
shl
push
ja
mov
js,pt
adcl
mov
xchg
lods
push
cmp
mov
iret
rol
sbb
pop
xchg
sbb
add
mov
cmp
sbb
jb
es
xrelease
test
xchg
call
dec
jne
repnz
sahf
into
dec
cmp
xchg
imul
add
cli
insb
bound
adc
mov
stos
movsl
rclb
jl
pop
arpl
enter
pop
scas
test
cmpsl
aas
inc
mov
cmpb
ljmp
imul
cmp
cmp
mov
out
xor
push
cwtl
fdivr
mov
test
int3
cmp
and
adc
lcall
popf
mov
popaw
cwtl
dec
dec
xchg
jmp
jnp
mov
jo
pause
cld
inc
mov
pop
mov
jl
std
std
and
sub
jnp
stc
imul
cmpsl
xor
dec
testb
mov
imul
xor
jae
add
in
push
arpl
and
stc
xchg
enter
ds
gs
dec
test
mov
push
mov
and
cmc
and
js
sub
sub
mov
inc
add
adc
mov
and
and
into
push
sahf
repz
ja
xor
fs
sub
mov
sbb
sbb
or
arpl
divps
jecxz
adc
movl
lret
mov
ds
and
adc
dec
mov
icebp
lds
jl
push
push
push
mov
xorb
sbb
add
mov
lods
inc
push
jmp
fsts
lods
sti
pfrcp
negl
inc
outsl
sbb
movsl
add
scas
xlat
dec
sbb
inc
jns
mov
push
push
sub
add
jge
pop
push
mov
pop
mov
jo
lods
push
and
inc
ds
in
stos
pop
aam
adc
scas
es
cld
adc
push
inc
dec
cmpsb
dec
adc
mov
sub
and
in
inc
cmp
pop
push
mov
cmp
mov
xchg
cmp
mov
adc
mov
cs
imul
std
sti
xor
shrl
and
jne
mov
popf
mov
xchg
ja
cld
pop
adc
out
add
cli
cmp
into
adc
sub
into
fisttpll
pop
jg
into
cltd
or
push
sub
dec
pusha
push
jne
test
jae
xor
add
xchg
shlb
dec
es
pop
push
pushl
xlat
and
int3
cmp
lret
imul
dec
mov
or
inc
adc
dec
sbbl
sbb
mov
pop
sbb
add
mov
dec
jbe
add
iret
fdivs
or
adc
lods
and
pop
out
xchg
push
fsubrs
and
jp
test
loopne
sahf
mov
add
mov
pop
inc
cwtl
out
pusha
or
gs
subb
fildl
mov
jge
and
in
sub
sbb
das
stos
mov
arpl
sbb
mov
sbb
jle
and
jl
pop
aam
outsb
jb
mov
sub
push
and
arpl
test
xor
sbb
inc
mov
pop
fidivrs
pop
cwtl
cwtl
push
outsb
push
pop
mov
cmp
je
add
fisubl
lea
shl
in
xchg
xor
adc
cmp
jb
sbb
inc
mov
arpl
cmp
lcall
pusha
pop
sahf
mov
mov
add
push
push
fwait
or
fisubl
loop
mov
out
mov
mov
lods
jnp
dec
push
xor
and
in
mov
push
push
xor
jbe
shlb
ror
lret
sub
pop
pop
jge
xor
sbbb
jae
loop
adc
cmpsb
fistps
adc
popa
and
pop
cmp
inc
jg
nop
mov
xchg
sahf
or
shr
inc
mov
cmpsb
pop
adc
mov
or
out
lret
nop
and
fcompl
popa
mov
subb
mov
mov
daa
lods
sbb
stos
mov
scas
in
pop
int3
lea
and
rolb
push
or
pop
addr16
jge
mov
icebp
stos
ret
insb
movsl
sub
sub
mov
push
xchg
repz
stos
jmp
setg
lcall
mov
push
sbbl
ss
dec
jbe
adc
sbb
enter
pushw
or
int3
and
add
ja
decl
and
sub
loopne
loopne
cltd
push
mov
insl
mov
out
push
mov
bound
pop
outsl
sbb
ljmp
mov
popf
insl
xchg
jmp
jg
xor
jne
sub
add
fsubrl
ds
or
or
mov
mov
test
out
std
orl
std
mov
iret
push
xbegin
push
test
imul
mov
mov
sahf
adc
jge
inc
popf
pushf
mov
mov
test
stc
xchg
pop
std
xchg
ja
push
or
aaa
fnstcw
mov
stos
cwtl
cmp
bnd
xchg
mov
aaa
adc
jl
fstl
call
cmpb
out
adcl
aam
imul
pop
aas
sbb
aad
mov
clc
jp
adc
out
stos
sbb
jns
int3
mov
or
out
jbe
jecxz
adc
fmuls
sub
popf
jp
sub
mov
mov
push
iret
or
pushf
and
pop
xor
aaa
inc
adc
cli
iret
add
xor
cmp
cli
and
fstpl
not
arpl
clc
mov
push
or
aam
int
or
adc
xchg
arpl
mov
test
inc
and
mov
popl
je
and
mov
pusha
shlb
ja
repz
xchg
inc
cmp
negb
lods
imul
repnz
cmp
pop
mov
jmp
xlat
dec
popf
mov
clc
jle
and
outsb
loopew
testb
or
cmp
push
mov
test
xchg
xor
bound
dec
sub
dec
sub
push
mov
mov
cmp
in
insb
stos
pop
pop
mov
sbb
add
out
lret
pushf
push
xor
adc
inc
inc
pop
xorb
xchg
insb
mov
inc
mov
clc
inc
hlt
fs
loop
pop
lcall
roll
mov
pop
cs
dec
bound
rolb
mov
mov
sub
cli
add
add
cmp
sti
cmc
sub
stos
mov
and
popf
inc
inc
push
nop
mov
or
or
add
call
nop
daa
pop
lahf
mov
stos
movsl
xorb
sbb
lods
sub
pop
dec
xchg
or
icebp
or
aam
sbb
callw
pop
push
xor
cltd
js
sbb
sub
jne
and
mov
aas
fs
and
shl
mov
and
mov
insb
inc
mov
mov
add
mov
loop
pop
rorl
add
fldl2t
lahf
sub
xchg
scas
mov
mov
mov
out
dec
or
sub
out
pop
fisubrs
ss
rclb
sub
fnstenv
xlat
pop
pop
add
xchg
mov
and
cmp
sbb
fldl
daa
loop
insl
popf
adc
fwait
pushl
inc
lret
or
push
lods
lods
loopne
add
pop
add
add
jmp
or
mov
rol
dec
test
bound
dec
xchg
cli
loopne
jns
pushw
jecxz
cs
pop
ror
mov
testl
xchg
leave
pop
mov
adc
adc
test
adc
jns
notb
data16
mov
in
inc
or
push
jmp
xchg
lods
lock
roll
dec
popf
mov
clc
push
popf
pop
pop
rolb
sbb
imul
xor
or
imul
orb
lret
je
pop
lea
xchg
mov
faddl
data16
inc
fwait
or
pop
mov
and
out
xchg
jne
aaa
cmpsl
sbb
pop
jae
outsl
mov
pop
fnstcw
out
adc
pop
adc
mov
xor
mov
pop
and
xchg
int
mov
prefetch
lahf
jl
clc
lods
push
sub
mov
es
mov
pusha
xor
ja
ljmp
shrl
icebp
out
mov
mov
or
fcompl
ljmp
mov
fbld
es
ret
in
xor
fwait
shll
fmull
xor
push
push
pop
loop
inc
scas
cltd
pop
out
std
ja
push
push
addl
or
xlat
movsb
pusha
jmp
mov
pop
xor
mov
or
add
sub
mov
mov
stos
sub
adc
pop
jg
pop
sub
dec
outsb
imul
inc
jbe
and
je
lret
enter
cmp
gs
xor
leave
dec
stos
mov
or
loope
inc
xchg
xchg
pop
sahf
das
inc
push
pop
test
pop
into
shlb
xchg
dec
mov
inc
push
pop
pop
pop
mov
or
ret
cwtl
scas
movsl
jb
dec
sar
sub
pop
fstl
movsl
push
mov
push
movsl
fadds
pop
inc
inc
lods
lock
gs
icebp
or
push
lods
loope
fnstsw
in
fiadds
call
mov
mov
out
int
out
mov
xchg
gs
inc
xchg
nop
push
adc
push
iret
rcl
arpl
les
cltd
dec
das
divb
aaa
out
jg
iret
mov
mov
push
sub
lock
ret
sub
imul
sti
mov
andl
xor
pop
std
mov
cmc
xchg
xor
movsl
mov
lods
in
dec
cmp
xchg
xchg
and
pop
xchg
mov
mov
pusha
mov
sbb
dec
push
enter
pushl
pop
mov
and
in
mov
add
cmp
push
sti
fsubrp
std
jae
sub
xchg
fistpll
mov
ret
pop
push
je
roll
repnz
mov
inc
mov
xchg
pop
or
jmp
add
sub
push
mov
out
push
lret
pushf
nop
int3
jnp
lea
dec
lods
dec
stos
pop
rcrl
mov
xchg
dec
cmpsl
sbb
and
bound
ja,pn
and
pop
movsl
pop
adc
mov
out
mov
fdivrp
or
leave
leave
cmpsb
xor
add
aam
jae
or
add
jl
pop
rcrl
popf
add
sbb
xchg
xor
or
scas
fucom
hlt
ficompl
in
pop
rclb
test
outsl
jns
pop
lahf
fnstenv
jno
inc
inc
push
out
mov
lcall
sub
subb
adc
mov
xchg
xor
loope
cmp
shr
jno
adc
dec
jb
dec
stos
iret
or
xchg
out
enter
jb
cs
and
adc
ljmp
int3
xchg
mov
test
lods
xor
mov
cmp
outsb
or
pop
adcl
pop
mov
iret
push
inc
out
push
stos
or
daa
dec
sbb
lods
imul
fdiv
push
aaa
inc
sub
ljmp
ss
cli
mov
jo
enter
mov
lret
addl
mov
push
adc
pop
add
arpl
fcoml
push
mov
in
ficoml
fwait
loope
imul
push
outsl
loope
jg
inc
dec
lea
dec
jbe
insb
sub
sahf
fbld
push
stc
pusha
pop
inc
add
arpl
dec
xlat
pusha
sbb
xor
push
sbb
sub
pusha
cmp
sub
test
sbb
push
push
jb,pt
mov
cli
icebp
sti
sub
popf
pop
roll
xor
cmpsl
cli
inc
gs
aaa
test
cmp
push
popf
push
testb
aad
mov
nop
lea
mov
loop
call
je
fadd
pop
add
stos
mov
mov
jmp
jne
jmp
add
mov
insl
sbb
push
imul
cli
js
cmp
add
xchg
push
adc
daa
xchg
pop
out
mov
je
fistl
mov
data16
mov
out
test
fildll
test
mov
stc
movsl
cmp
mov
iret
push
outsl
fidivs
stos
mov
outsl
xlat
sbb
test
and
add
out
stos
mov
shl
xor
fwait
mov
inc
loope
test
xor
xorl
mov
xchg
fisttpl
inc
sub
xchg
cmpsb
mov
cmpsl
adc
pushf
and
mov
mov
out
and
push
fwait
jns
es
xchg
cli
add
or
and
mov
negb
lods
lea
push
int3
imul
cld
and
mov
cltd
ret
push
dec
pop
xchg
mov
std
loop
into
fimuls
insl
test
xchg
sbb
mov
inc
or
push
mov
mov
aad
add
popa
cmpsl
insl
push
out
sub
int3
mov
cli
and
add
call
movsb
sub
ret
push
shrb
rcrb
int
mov
sub
fldl
xor
aaa
jp
fnstenv
in
jge
clc
sti
mov
imul
mov
pop
repnz
inc
setg
outsb
or
cmpsl
jl
mov
inc
icebp
std
das
imul
ret
inc
pop
jnp
add
jae
or
in
mov
or
cmp
lock
call
fld1
mov
push
rcll
sub
fxch
mov
xor
xor
cli
inc
xorb
xorb
sbb
xor
jl
lret
and
fcoms
mov
icebp
shll
pop
jmpw
je
dec
std
sub
pushf
jmp
push
out
dec
test
cwtl
out
gs
add
mov
mov
and
xor
xchg
stc
cmpsb
mov
push
xor
sub
fs
std
fwait
in
cmc
movsl
cmpsl
add
jo
subl
adc
xchg
insl
ret
inc
popf
add
cmp
add
or
orl
jge
jl
mov
mov
rcrl
scas
xchg
loop
es
int
cmc
lods
cs
pop
fcomps
nop
mov
fxch
sub
fstpl
lods
dec
mov
mov
test
shlb
jl
sub
cmp
cs
bound
lcall
inc
cmpsl
cmp
dec
push
xchg
cmpsl
cwtl
dec
xchg
fistps
in
loope
xchg
push
push
mov
or
push
xor
clc
mov
jns
int
inc
inc
xorl
push
or
sub
push
or
pop
jl
testl
cmp
xchg
mov
inc
xchg
das
pop
idivb
ror
js
jbe
xor
lock
push
adc
hlt
repz
dec
xor
test
xchg
gs
lods
inc
std
jb
sbb
xchg
das
add
ret
fisubl
rcll
fiadds
mov
add
sahf
pop
sbb
xchg
push
mov
push
mov
push
add
pop
sub
jl
lods
add
mov
orb
pop
mov
scas
sub
jbe
ljmp
daa
push
fs
jbe
lahf
push
imul
scas
cs
xchg
mov
jl
mov
adc
dec
imul
xchg
insb
in
imul
imul
cmpsl
ss
inc
jecxz
pop
decb
rdtsc
pop
sub
jne
pushf
cmp
sbb
aam
rcr
jmp
mov
jge
xchg
and
sbb
cmpsl
mov
push
xor
or
sbb
dec
mov
notb
pop
pop
add
js
push
les
lods
bound
cmp
or
mov
je
sbb
mov
bound
cmp
loop
pop
sub
mov
and
loopne
xchg
jnp
push
imull
cmp
leave
push
jmp
mov
sub
and
lahf
mov
mov
jp
test
sbb
pusha
dec
and
mov
xchg
cmp
cmp
ret
xor
js
mov
pop
nop
mov
popa
and
cmpsl
fdivrp
jl
outsl
add
xorb
pop
ljmp
xadd
jns
aas
mov
mov
or
sbb
xchg
push
jne
pop
mov
xchg
push
cmp
in
jg
cmp
js
call
int3
sbb
das
popa
ret
sbbb
loop
cs
inc
fcmovnb
mov
pop
cmp
mov
or
xchg
fistpl
ret
push
into
insb
adc
xchg
lret
cli
push
mov
insl
test
jbe
lcall
ss
dec
cmp
mov
or
push
data16
mov
xchg
mov
cld
sub
daa
pop
addr16
rorl
lods
push
rolb
push
je
mov
fdivl
ret
insl
lods
inc
xlat
mov
sti
hlt
xchg
xor
push
sbbb
ljmp
call
lods
jbe
inc
or
arpl
mov
in
data16
jle
jb
faddl
in
dec
sti
mov
and
xchg
dec
mov
and
aad
pop
out
aaa
mov
push
shlb
dec
xchg
inc
addb
leave
mov
dec
test
in
xchg
test
shl
xor
call
pop
ret
negl
dec
push
push
adc
ret
icebp
mov
and
sub
ret
dec
test
cmpsl
popf
jge
out
dec
in
not
dec
sub
xor
stos
subb
push
imul
sub
pop
cs
and
sbb
inc
pop
repz
inc
jmp
sub
mov
in
movsl
enter
add
add
and
in
cmp
mov
cmpsb
xchg
imul
in
push
mov
cs
xchg
les
fs
jge
dec
scas
mov
int3
mov
pop
mov
pop
daa
push
lcall
out
adc
mov
fnsave
lret
popa
dec
ret
jno
xlat
and
jg
push
call
loop
lods
jo
and
sub
mov
mov
sub
jp
mov
out
pop
and
aam
adc
mov
nop
dec
push
mov
or
cmp
or
ret
sbb
sarb
rclb
mov
sub
push
push
lahf
lcall
gs
inc
sub
inc
mov
push
cmpsb
inc
loope
mov
sub
mov
pop
sub
mov
fucomip
inc
lock
je
pusha
lea
gs
mov
cltd
lret
dec
fnstcw
imul
dec
pop
jg
bound
repz
pop
add
jbe
push
dec
lcall
les
sbb
mov
cmp
pop
insb
sti
xor
mov
popa
fistl
jb
mov
add
test
adc
inc
outsb
adc
cs
stos
mov
fimull
inc
jge
cmpsl
jg
inc
sbb
inc
es
and
pushf
bound
stos
dec
xchg
insb
sbb
mov
dec
fistpll
stc
stc
out
mov
rcll
jmp
cmp
js
mul
xchg
mov
pop
mov
sarl
or
addr16
fisubl
gs
out
mov
lods
and
data16
push
xor
loope
push
adc
cmp
jo
fistpl
or
out
pusha
dec
shrl
aam
mov
mov
lret
leave
dec
sub
dec
cmp
push
pop
xchg
ss
push
clc
pop
clc
cmp
and
xor
pop
mov
sbb
mov
sbb
xor
jg
jne
repz
pushf
loope
pop
inc
in
cmp
pop
adc
xor
out
xchg
pop
js
std
sub
hlt
test
mov
push
imul
std
aam
dec
lcall
rolb
out
ret
fldenv
jge
ja
xchg
fstpt
xchg
neg
mov
mull
popa
and
pusha
adc
out
cmp
push
in
sbb
sbb
and
adc
lds
sub
stc
repz
cmpsl
push
loope
ja
lahf
gs
inc
sub
dec
pop
shll
inc
out
xchg
sub
xor
sahf
fs
xor
outsl
fcoml
mov
xlat
jl
out
mov
add
mov
cld
pop
pop
xor
fadd
mov
add
dec
into
sbb
jne
test
sahf
or
stos
hlt
xchg
jecxz
push
jnp
ret
jl
rclb
dec
adc
sti
pop
in
rcrb
xor
jnp
xchg
adc
je
jl
dec
dec
out
and
ss
fs
and
inc
mov
adc
jecxz
loopne
push
inc
cmp
pop
aaa
lret
ja
pop
int3
test
inc
clc
push
icebp
aam
addr16
mov
mov
xorl
in
jg
cmp
cmp
adc
jae
repnz
sub
dec
xchg
fsts
lret
and
mov
fistpl
ret
outsl
outsb
xor
mov
mov
popa
and
push
ds
adc
push
ljmp
dec
cmp
mov
sbb
sbb
xchg
mov
cli
mov
mov
flds
aam
fs
jmp
mov
xor
cmpsb
adc
out
imull
int3
dec
and
stc
cmc
or
lcall
mov
mov
shr
lds
js
rcrl
dec
and
lret
pop
xchg
and
dec
loopne
adc
scas
out
dec
push
test
shll
loope
mov
mov
aad
push
pop
call
jl
mov
adc
lock
lcall
das
scas
push
mov
fwait
jg
loop
fnstsw
adcb
decb
shrl
shl
lods
stc
push
jl
jmp
jmp
mov
test
lea
inc
sub
pop
scas
ljmp
loop
push
sti
sub
aad
lods
push
sub
addr16
adc
enter
dec
pop
mov
xchg
inc
rcll
sub
sahf
mov
xchg
test
push
inc
test
sar
cmp
sub
jns
inc
sbb
xor
inc
jns
ljmp
inc
ss
movsb
and
pop
xor
in
pusha
in
push
js
push
cmp
in
in
iret
callw
xchg
fdivl
call
jno
fnsave
aam
push
shrb
mov
aas
fwait
loopne
aad
mov
adc
or
jnp
adc
cmp
xor
jb
or
outsb
jmp
pop
mov
loop
imul
jno
jno
ja
pop
xchg
dec
xchg
fildll
push
adcl
mov
hlt
xchg
mov
pop
aas
pop
mov
fcmovu
or
neg
pop
mov
sub
dec
sarb
std
add
xor
dec
popa
and
loop
repz
ffree
out
sbb
push
and
cmc
inc
jno
xor
mov
and
mov
fiaddl
pop
xor
fcmovnbe
jns
mov
jo
mov
aas
cld
data16
stos
push
push
add
fisubrs
sbb
fcoms
insb
and
pusha
dec
fildll
sbb
ljmp
jb
fsubrl
cmp
adc
push
and
lods
shrb
jo
ss
mov
hlt
mov
ss
xchg
dec
push
xchg
lret
jae
xchg
outsb
and
movsb
fidivrl
and
mov
jecxz
xchg
mov
lret
ficoml
ljmp
cld
loope
cmp
pop
frstor
outsl
dec
dec
popf
aaa
mov
mov
gs
and
js
cmc
in
xorl
iret
pop
lcall
sub
push
ljmp
ds
fcmovnu
imul
cmp
mov
inc
dec
mov
cmp
xchg
je
push
mov
das
add
sbb
mov
cmpsl
jae
iret
popf
enter
rclb
scas
or
out
pop
syscall
jg
ror
je
pop
dec
jae
movsl
mov
lea
sar
fcoms
xor
in
leave
fs
jae
fst
movsl
xor
inc
cmp
mov
mov
or
xchg
push
sub
in
inc
xor
sarl
test
sahf
add
mov
loope
xor
inc
lcall
xchg
jge
sub
js
es
sbb
sub
xchg
dec
mov
fidivrs
cmpsb
add
jae
mov
arpl
and
pop
and
pop
xchg
pusha
xchg
movsl
imul
adc
les
gs
out
add
adc
rcrb
out
mov
in
push
das
xor
cmp
adc
cltd
jg
fucomp
jne
inc
push
out
mov
mov
add
xor
and
popa
xor
repz
pop
push
pop
cmp
imul
jns
cmp
sysenter
mov
ljmp
add
enter
lods
repnz
popl
lock
xchg
xchg
sbb
das
push
mov
or
lcall
shlb
call
mulb
lahf
jo
sbb
pop
out
sbb
mov
or
repnz
addr16
cmp
sti
shll
repz
jp
adc
daa
pop
jnp
jns
mov
lods
imul
js
mov
repz
pop
or
cmc
push
or
add
jae
jne
inc
add
insb
insb
leave
ret
mov
xchg
sub
push
xchg
adc
inc
jp
or
ret
sub
mov
and
pop
jnp
jp
push
sbb
outsl
push
jle
mov
add
lret
and
mov
dec
lods
fs
mov
dec
in
xchg
les
jl
sbb
mov
push
shlb
cmpsb
xchg
pop
aaa
loope
fwait
test
repnz
bnd
or
cmpsb
sti
and
in
push
mov
adc
fildll
fiaddl
fs
adc
loopne
push
lcall
aam
xchg
scas
lcall
jno
aas
mov
dec
ds
cmpsb
outsl
fadd
lods
lahf
ds
test
mov
mov
sbb
daa
cwtl
lret
jb
sahf
call
fistpll
and
fiadds
sbb
scas
mov
adc
adc
sbb
xor
mov
sub
push
popf
test
dec
test
dec
mov
in
and
cmpsl
cmp
xchg
loope
mov
stc
mov
pop
divb
mov
and
mov
lcall
repnz
inc
inc
stc
mov
xchg
jns
lods
xchg
sub
lahf
xchg
icebp
loope
nop
jne
adc
ja
sahf
imul
pop
mov
sub
jle
pop
xorb
push
push
adc
in
out
iret
lahf
les
fisubl
or
cs
pop
je
js
xor
push
jno
cmc
sbb
scas
mov
sbb
pushf
add
lret
inc
je
ss
movl
aam
fiaddl
xor
or
outsb
dec
mov
shrb
mov
sbb
cmp
jae
ljmp
xchg
dec
xchg
fsubrp
jmp
pushfw
and
divl
nop
dec
add
scas
nop
and
xor
inc
aad
adc
xor
xchg
js
and
cwtl
addb
adc
rcll
hlt
mov
push
inc
stos
xchg
jl
dec
out
ja
in
scas
cmp
and
loop
pushf
push
imul
xor
data16
mov
adc
xchg
dec
xor
aad
or
sbb
lret
dec
dec
cmp
nop
jge
movsb
inc
sbb
ret
mov
in
pop
pop
and
cs
push
xlat
push
fiadds
sub
adc
jo
out
adcb
notb
xchg
sbbb
lock
adc
mov
push
mov
adc
mov
inc
test
loope
sub
jnp
in
stos
sahf
dec
test
cli
mov
cmpsl
xor
and
es
sbb
xor
test
add
or
les
xor
add
lea
cmp
xor
scas
sar
add
xchg
mov
aas
fsubl
popa
outsb
xlat
out
sub
jns
or
jmp
mov
imul
dec
outsb
xchg
or
dec
jle
xchg
out
xchg
push
or
xchg
fcmovnu
jns
add
pop
and
adc
jmp
sub
movsl
outsl
lds
scas
push
add
mov
xor
add
shlb
cmp
or
in
in
scas
sub
mov
mov
push
lods
cmp
inc
mov
int
shrl
test
repz
mov
test
xchg
je
dec
adc
and
in
and
sub
push
arpl
outsb
mov
test
and
bound
or
jle
push
lcall
jp
xchg
arpl
rcrl
add
int
push
pushf
bound
mov
xchg
js
sbbb
xor
and
pusha
rcrl
clc
imul
loop
jp
dec
push
cli
std
ret
call
ja
adc
pop
loope
aam
push
add
or
loope
mov
xchg
push
fwait
push
out
sbb
lods
push
jmp
push
enter
inc
cmp
inc
in
cltd
stos
ret
imul
cli
or
arpl
mov
les
in
pop
sbb
jl
sahf
sub
aas
adc
cld
call
arpl
daa
push
lret
xor
addr16
imul
hlt
cmc
aas
stos
int
xor
xor
ja
ret
xchg
daa
mov
out
imul
out
push
mov
fidivrl
adc
pop
test
cltd
adc
add
scas
mov
mov
push
and
loop
imul
mov
nop
out
sub
roll
sub
test
bound
inc
cltd
arpl
push
popf
sbb
adc
cltd
jmp
mov
and
push
lock
inc
dec
dec
into
mov
push
fwait
notl
insl
sub
xor
jb
cmp
dec
lahf
arpl
data16
sub
movb
dec
sbb
cmp
jecxz
lcall
les
lods
jmp
clc
jp
mov
jns
sub
jg
subl
add
dec
lods
leave
or
mov
jecxz
mov
fcmovnb
enter
daa
cmp
sub
mov
xchg
std
and
leave
lret
je
fcomip
mov
pop
pop
mov
jae
out
xor
ljmp
movsl
mov
popa
or
ljmp
add
fcmovbe
push
loope
aam
pop
adc
push
addr16
xchg
mov
cmpsb
out
test
pop
negb
dec
sub
xorb
pop
es
call
push
ja
add
rol
fcoml
sbb
cs
pop
bound
js
push
sub
pop
mov
xchg
out
bound
cmp
in
cmpl
mov
inc
ljmp
cwtl
xor
xor
sbb
aaa
add
cwtl
andb
pop
shl
push
mov
jg
mov
push
bound
gs
insb
pop
imul
cmpsl
cmp
mov
repz
cmp
dec
adc
push
pop
leave
imul
clc
int
mov
imul
imul
or
iret
cmp
adc
or
roll
pop
or
lcall
xor
cmp
sub
inc
push
push
add
lahf
add
rorl
mov
mov
mov
cmpsl
pop
pop
add
mov
inc
aas
repz
jo
pop
inc
enter
inc
dec
fcoms
fwait
das
outsb
inc
adc
rorl
andl
xchg
stc
mov
push
dec
adc
out
pop
push
or
lea
rorb
add
cmpb
jge
scas
popa
or
and
fisttpl
movl
dec
inc
fbstp
ja
test
pop
sbb
mov
mov
adc
loopne
xorb
insl
sbb
insl
dec
or
mov
popa
ret
mov
sbb
push
fcomps
add
fisttps
push
dec
pop
xor
jl
jmp
popa
ljmp
sbb
aas
lret
sub
repnz
mov
inc
dec
mov
out
cli
jb
mov
out
cmp
mov
outsl
xchg
es
lret
fisttpl
sbb
test
mov
lea
imul
mov
cmc
test
jmp
ja
rcll
adc
jle
inc
aas
mov
cmp
dec
adc
add
data16
mov
int3
mov
dec
aad
pop
push
xor
ljmp
lock
mov
sub
aam
push
add
daa
xchg
adc
aas
inc
jnp
fsub
sahf
cld
mov
fdivl
mov
into
push
ds
adc
stc
inc
mov
call
cltd
add
or
fcmovnu
in
push
sub
repz
adc
adc
icebp
sbb
pop
outsl
jb
lods
mov
and
les
out
lods
add
ljmp
in
push
adc
les
inc
jp
lret
or
jl
loop
dec
rolb
cmc
mov
push
jecxz
and
pop
mov
fcomps
or
adc
fstpl
push
cld
stos
jl
mov
cmp
movsb
insb
pop
or
or
xchg
dec
hlt
setae
xchg
jb
inc
sub
roll
fstpl
pusha
sarb
mov
pop
push
mov
inc
push
lret
mov
mov
jnp
sbb
mov
add
clc
xor
ficomps
sbb
test
test
inc
stc
mov
mov
out
dec
fwait
xlat
mov
sarb
cmp
icebp
dec
das
icebp
cmp
cwtl
adc
lea
xlat
push
sub
adc
cmp
lock
pop
inc
push
lret
lds
int3
int3
xor
in
sbb
iret
and
xlat
lcall
fcomip
sub
mov
sbb
test
out
adc
adc
push
or
jbe
int3
js
xor
subb
es
fdivl
cmp
lock
lret
incb
mov
pop
and
pop
mov
xor
fmulp
aad
leave
dec
cmp
orb
in
cmp
jge
xor
dec
or
dec
mov
cmpsb
stos
dec
mov
jno
pop
out
dec
stos
pop
adc
mov
sub
popf
pshufw
out
sub
add
cmp
mov
pusha
pop
scas
push
mov
inc
es
dec
and
leave
dec
add
mov
icebp
ret
sub
jns
xchg
mov
mov
mov
lahf
add
xor
dec
loop
loopne
pop
mov
pop
into
push
fxch
rclb
adc
test
out
outsb
or
popf
dec
aam
cmovb
and
pop
jle
cld
push
out
out
jle
inc
mov
pop
jle
into
xor
int
cmp
pop
cld
lahf
out
fildll
mov
adc
shlb
scas
dec
jno
lds
fwait
xchg
popa
or
cmp
mov
inc
or
jnp
mov
js
sbb
push
loopne
andl
or
push
cwtl
loopne
insl
andb
ficoms
fdivrp
cmp
push
insl
jge
sahf
pop
add
sub
mov
dec
mov
sbb
mov
loope
in
mov
push
sbb
fwait
sub
rorl
or
cmp
add
stos
inc
xchg
jecxz
adc
pop
mov
push
je
cmp
jge
and
jno
xchg
sbbl
test
sbb
xchg
pop
aaa
mov
cmp
sub
outsl
push
dec
shl
mov
or
adc
iret
push
xchg
cltd
cmc
jg
or
test
cmp
loopne
stos
pop
sbb
mov
ss
mov
sub
push
push
dec
call
loopne
mov
inc
fiaddl
push
xchg
call
add
and
rcrl
lods
mov
jbe
enter
aad
mov
mov
hlt
mov
lret
dec
jmp
add
dec
imulb
test
mov
shll
lcall
dec
and
sbb
lahf
lahf
in
fdivs
sub
loopne
std
cmc
sbb
ds
cmp
lahf
mov
xchg
pop
jle
lahf
out
jecxz
xchg
add
push
out
pop
and
cmpsb
das
push
fsubrs
enter
sbb
adc
scas
loope
jno
js
mov
sbb
std
gs
jmp
repz
dec
ss
lods
pop
push
mov
jg
dec
addr16
jmp
add
ret
pop
icebp
inc
outsl
push
repz
int3
xchg
std
xor
adc
fwait
mov
ss
pop
pushf
add
adc
inc
sbb
sub
sbb
lods
add
mov
mov
outsl
and
jb
out
or
dec
add
incl
inc
jne
lods
sbb
mov
mov
mov
mov
push
sub
rcrl
fwait
in
mov
shlb
inc
enter
mov
cmp
arpl
cmc
outsb
mov
call
out
jmp
mov
inc
les
inc
and
dec
into
xchg
sbbl
outsb
int
sti
sub
dec
rol
sbb
popa
jecxz
adc
sbb
sub
mov
mov
xchg
jns
lods
adc
xor
inc
loopne
ret
enter
xor
add
add
or
push
mov
out
adcl
xchg
les
sbb
cs
sbbb
cmc
and
sub
out
movsl
repz
add
test
and
lcall
das
inc
mov
mov
hlt
or
xor
push
xchg
adc
cmpsl
outsb
cltd
aam
add
icebp
sub
xchg
jnp
popf
xor
arpl
in
xor
jmp
sbb
in
fdivp
fxam
push
nopl
in
mov
ret
cwtl
push
cmp
xchg
mov
jae
cltd
test
dec
aas
aad
mov
lods
decl
inc
add
rcrl
cmp
mov
hlt
aam
pusha
es
adc
sub
xchg
pop
mov
test
fldl
xor
jecxz
ret
cwtl
add
mov
daa
xor
mov
dec
lret
lods
fucomi
mov
dec
mov
movsb
pop
xchg
stos
cli
into
push
mov
or
dec
mov
in
movsb
sarl
imul
stos
mov
cmp
pop
xchg
jmp
sahf
push
fcomps
imul
nop
insb
fisttpl
pop
add
jp
test
sub
mov
cli
xor
or
fsubl
push
divb
scas
sti
pop
scas
sar
shll
mov
sub
pextrw
sbb
sbb
insb
sub
dec
jp
icebp
lret
std
arpl
sarb
mov
jmp
out
in
xchg
push
cmpsb
inc
fwait
mov
out
or
hlt
pop
lcall
ret
cmp
ds
xor
jl
out
fsubrs
cmc
and
stos
movb
fadds
fisubrl
and
out
ret
fisttpll
mov
mov
addr16
cld
jae
xor
test
push
xor
bound
divl
sub
mov
jne
mov
jge
loop
ja
bound
out
popf
mov
lods
fmulp
mov
rcrl
mov
into
push
test
xor
xchg
fnsave
in
xor
scas
mov
mov
test
cwtl
jecxz
inc
dec
adc
push
cmpsl
mov
cmp
fisubrs
call
inc
stos
cmp
lock
pop
sub
std
push
add
cmp
pop
je
roll
scas
jb
pop
mov
mov
cmpsl
mov
nop
shrb
ror
push
bound
cmc
adc
adc
or
or
xchg
push
push
out
jnp
out
iret
test
jns
mov
sub
push
int
pusha
mov
cmp
sub
jae
pop
gs
dec
cmc
sub
in
cmp
dec
mov
mov
jp
insb
push
data16
jae
lret
fs
pop
insl
test
ret
daa
sbb
mov
sub
add
inc
cmpsl
push
sbb
cmp
idivb
or
mull
int3
dec
shrl
lock
mov
sarb
pop
in
pushf
push
add
jbe
sbb
xchg
lock
fsub
jp
mov
cmpsb
ja
cwtl
sbb
mov
arpl
jecxz
lahf
movsb
push
inc
lcall
mov
adc
std
out
aaa
bsf
cld
pop
dec
testl
je
arpl
sub
jnp
mov
mov
cmc
popa
pop
roll
cmp
add
rcl
into
inc
loope
test
pop
adc
dec
cmp
aam
cmpsl
dec
sub
jae
ret
or
push
sbbl
pusha
ret
mov
cltd
fisubl
mov
sbb
sub
inc
or
ror
imul
int
ja
mov
pop
pop
push
lds
xor
loopne
stos
data16
sbb
roll
scas
lods
mov
xchg
iret
ret
in
mov
adc
jecxz
fsubl
adc
outsl
lret
mov
add
push
inc
mov
aas
inc
xchg
int3
fstl
cmp
cmp
jle
stc
enter
insb
inc
xor
sbb
mov
mov
jmp
inc
les
les
xchg
ficompl
loope
das
dec
cmp
insb
ja
xchg
sbb
cli
and
pop
fcos
mov
lds
sub
push
bound
jmp
jl
ficompl
inc
call
inc
mov
cmp
inc
and
sub
ds
fmull
pop
mov
dec
push
sbb
xchg
mov
std
jne
xchg
in
test
lcall
mov
mov
mov
das
push
stos
mov
sbb
jl
nop
test
pop
and
ja
icebp
jns
leave
lea
call
shll
dec
push
inc
cmpsl
mov
ffreep
push
int
push
negb
fwait
pop
pop
loope
pop
and
cmpsb
adc
test
pop
ja
mov
das
lea
and
pop
imul
pop
stos
mov
shl
adc
push
data16
pop
dec
mov
sub
mov
dec
int3
addb
jmp
push
adcb
fldz
shll
in
mov
pusha
adc
fdiv
jne
inc
in
sub
jae
adc
mov
icebp
and
stos
cmpsl
lcall
xor
add
fimull
and
dec
mov
sahf
stc
jmp
aaa
int
pop
xchg
mov
loopew
ret
mov
iret
adc
xor
xor
adc
out
hlt
popa
test
ds
xor
jl
and
fcompl
lahf
test
in
mov
fistps
add
out
and
dec
clc
adc
xor
std
hlt
cmp
shl
mov
sub
fidivrl
adc
push
xor
pop
mov
hlt
adc
imul
sub
cmpsb
lds
xor
les
dec
aad
jge
sub
sbb
mov
dec
pop
adc
popa
adc
pslld
loopne
push
jns
or
jbe
shlb
insl
mov
sub
pusha
cmp
adc
not
pop
push
xchg
xor
push
in
mov
cltd
sub
cmpsb
add
and
cmp
iret
pushf
ljmp
gs
fbstp
jbe
add
cmp
and
sbb
mov
cs
add
lcall
pop
jl
cmpsl
pop
jl
insb
ret
ret
fsubr
fcmovbe
sbb
xor
icebp
pop
ljmp
fwait
into
lret
mov
dec
mov
in
push
sub
xor
push
movsb
test
pop
jecxz
stos
orb
cmp
jle
call
dec
xchg
and
imul
pop
push
sbb
mov
pop
or
addr16
mov
inc
ret
or
mov
daa
repnz
adc
es
leave
ret
cwtl
int3
adc
pop
sub
out
movsb
jno
cmp
xadd
sub
xchg
cmp
xor
cwtl
dec
mov
icebp
inc
rclb
sbb
push
iret
sbb
mov
mov
jnp
or
adc
sub
out
idivb
sbb
hlt
sub
cs
subl
sub
clc
stc
aaa
lret
mov
movsb
iretw
inc
cmp
pop
and
imul
fwait
ljmp
push
dec
and
cs
popa
cwtl
push
cmovp
xchg
mov
les
test
out
mov
xchg
adc
leave
sub
push
stos
jae
or
cli
sbb
dec
jp
cltd
xchg
xor
mov
pop
sbb
sub
mov
cld
fscale
out
and
mov
dec
xchg
mov
sahf
dec
and
add
lods
test
jb
xor
jg
nop
inc
inc
mov
scas
jmp
inc
stos
pop
jnp
jns
dec
push
lods
pop
lods
lret
mov
or
cwtl
bound
inc
pop
repz
pop
adc
fisubl
clc
mov
stc
iret
les
inc
xlat
cmp
sbb
cli
pop
xchg
lds
int
pop
cld
cmp
mov
dec
clc
cmp
fcmovnu
shll
push
push
test
xchg
xchg
xchg
sbb
and
mov
nop
mov
iret
jge
jbe
or
notb
or
dec
bound
leave
mov
pop
mov
ret
xor
mov
outsl
lahf
inc
shrl
std
xor
sbb
jns
ficoml
enter
fcmovnb
roll
xor
jg
jmp
jns
sbb
sub
or
ret
insl
jl
or
scas
xchg
repz
lea
jnp
aas
fwait
mov
fxch
sahf
mov
xor
or
out
lcall
xor
lods
add
enter
adc
js
imul
sbb
loope
pop
inc
negl
sti
js
outsb
cmp
movsb
adc
cmp
out
xor
test
leave
pop
std
pop
in
xchg
in
sarb
xchg
adc
stos
fiaddl
js
ret
test
jns
das
test
pop
jb
sahf
aas
cmc
adc
scas
shl
sbb
inc
aaa
clc
in
roll
xchg
dec
xor
push
adc
mov
mov
lds
xchg
rcrb
pop
mov
or
shll
pop
dec
insl
out
sub
arpl
xor
add
filds
out
sub
bswap
mov
dec
dec
in
sub
xchg
dec
sbb
mov
popa
push
cmpsl
mov
lret
mov
rcll
sbb
aad
ret
jle
out
fnstsw
mov
adc
xchg
mov
dec
cmp
mov
lahf
enter
push
or
scas
jge
test
scas
xor
sub
fwait
cltd
shrl
ja
jmp
std
sar
push
cmp
xor
rclb
outsl
jg,pt
in
and
neg
shr
pop
fisubrs
lock
cmp
mov
or
repz
stc
push
imul
adc
inc
fistps
cmp
cmp
test
or
inc
jle
push
cmp
push
lods
pusha
lea
mov
adc
mov
cmpsl
xor
loop
xor
add
xchg
pop
imul
lahf
push
js
insb
or
in
xchg
pop
mov
test
jno
xchg
in
fistps
inc
mov
pusha
stos
cmp
notl
jge
pop
pusha
sahf
addb
ds
fisttpl
sbb
loop
test
movsb
xchg
rorl
and
iret
dec
dec
enter
inc
ror
lea
aam
inc
push
rsm
mov
das
jo
xor
loope
push
scas
jne
pop
std
inc
xchg
ljmpw
cmp
mov
scas
arpl
filds
dec
mov
scas
popf
lds
lea
cmp
cld
cwtl
xchg
idivb
mov
idiv
mov
push
or
or
sbb
push
orb
je
jns
daa
ljmp
mov
jae
jno
or
imul
mov
jl
jne
jns
data16
pop
jae
add
outsb
jp
jno
ds
push
pop
inc
lea
add
add
xchg
jecxz
sub
xor
mov
dec
cltd
dec
push
mov
out
mov
in
cmp
mov
andl
leave
scas
mov
mov
pop
adc
stos
imul
cwtl
inc
cmp
sbb
int
sbb
jg
cmp
push
pop
sub
and
cmp
dec
pop
xor
scas
mov
cmp
and
adc
or
pop
fnstcw
sub
cli
arpl
aam
stos
sub
jp
add
jg
inc
jg
adc
mov
lcall
adc
cwtl
andb
mov
ljmp
mov
roll
inc
std
pop
ficoms
inc
aad
sti
mov
pop
add
xor
das
mov
iret
repnz
shrl
add
arpl
xchg
jns
ljmp
daa
into
and
enter
push
cs
loop
or
std
nop
sub
repnz
enter
fcmovnb
hlt
pop
xor
xorb
mov
lahf
pushf
and
pop
ja
repz
clc
sti
add
pusha
dec
inc
dec
jns
push
push
test
pop
addl
mov
testb
and
pop
test
mov
andps
fs
adc
cmp
sbb
enter
sahf
add
movsl
push
shll
push
ret
bound
pop
sub
fnstenv
vpunpckhqdq
cmpsl
sub
cmp
and
mov
adc
or
push
addr16
mov
in
mov
dec
push
mov
subl
mov
in
jo
jp
cltd
sub
aaa
out
popa
xchg
xchg
faddl
sub
lret
dec
stos
enter
addr16
xor
inc
xchg
fbstp
inc
inc
mov
jl
inc
mov
jge
mov
aas
xchg
add
add
and
xor
pop
js
adc
repz
sub
sarb
push
cwtl
scas
cs
insl
pop
inc
push
insb
sub
xchg
stos
arpl
cmpsb
test
sub
in
sbb
sub
or
push
xlat
hlt
push
adc
das
popf
add
cmp
mov
or
lahf
sbb
into
ret
ja
adc
lret
test
leave
and
or
mov
jae
sbb
sbb
ss
jo
dec
nop
sbb
cmc
push
arpl
pop
dec
test
repnz
xor
pop
loopne
dec
dec
jne
sbb
xchg
push
pop
test
fwait
xchg
mov
add
icebp
test
xchg
loop
inc
sub
shll
xor
xchg
sub
pop
inc
jbe
sbbb
cmp
xchg
test
imul
jl
arpl
mov
mov
pop
or
sar
dec
pop
or
stos
adc
loope
mov
sbb
cmp
call
mov
jnp
loopne
sbb
movsl
lock
lret
or
mov
and
ud2
mov
outsb
jb
pop
hlt
sarl
dec
and
lock
imul
push
mov
mov
cmp
cmpsl
dec
inc
pusha
inc
push
dec
test
clc
fildll
dec
sub
ljmp
popf
ljmp
nop
aas
or
jg
xchg
ret
xchg
dec
int3
dec
dec
stos
es
test
jmp
aas
and
xchg
mov
lods
in
adc
jecxz
testl
xchg
mov
test
adc
dec
nop
push
push
push
sub
arpl
sbb
int3
xorl
xchg
add
scas
and
dec
das
cwtl
sbb
ret
lcall
inc
dec
sbb
xlat
pop
and
push
hlt
pop
dec
adc
popa
xor
mov
xor
test
jne
mov
stos
mov
loop
outsl
rorl
sbb
inc
and
adc
cltd
rcll
xchg
fildl
int
dec
pop
in
lods
sbb
xor
mov
push
test
mov
and
loope
cs
mov
into
mov
lea
push
xor
and
xchg
leave
shrl
mov
pop
sbb
sbb
pushf
aad
adc
sub
mov
fdivrl
pop
sbb
sarb
mov
xor
xchg
shlb
and
sbb
dec
sbb
insl
fisttpl
sub
shlb
arpl
mov
test
push
sti
jno
fcmovu
push
je
nop
push
sti
mov
or
sbb
nop
jp
ret
cmp
int3
aad
cmpsl
cld
jne
repnz
and
notl
dec
mov
and
mov
lahf
outsl
popa
stc
or
lea
inc
ror
adc
jno
mov
sub
cmc
outsl
addl
xchg
and
popf
aad
adc
sahf
adc
aaa
fwait
inc
mov
insl
mov
hlt
orl
roll
cs
or
clc
mov
inc
or
push
or
int
pop
lcall
cmp
jge
cmovb
xor
lds
push
add
hlt
stc
mov
mov
fs
sub
and
addr16
mov
and
mov
xor
andb
and
xchg
aam
subl
imul
add
into
push
pop
test
cmp
xchg
cmc
outsl
mov
add
jbe
mov
loopne
and
jl
test
push
pop
cltd
into
mov
xchg
cmp
cmp
ret
adcb
rcrb
lea
js
fldenv
sbb
jl
test
iret
jne
and
mov
dec
in
lods
xchg
jecxz
test
inc
stos
and
int3
jnp
decb
scas
cltd
cld
jecxz
fsubr
xchg
repz
xor
cmp
jno
fistpl
out
flds
dec
leave
into
add
dec
daa
sbb
popa
clc
pop
test
pop
mov
jae
sub
icebp
jns
aam
add
mov
or
xlat
das
jo
sub
cld
dec
xchg
hlt
cmp
xchg
mov
cmpsl
push
lds
pop
sub
push
xchg
int3
or
les
sbbb
adc
aas
mov
adc
andl
adc
mov
movsl
xchg
push
lods
addr16
les
push
xor
jns
mov
ficompl
mov
pushf
mov
mov
icebp
imul
call
shlb
mov
pusha
adc
xchg
out
ljmp
push
lds
cmpsl
aaa
xlat
andb
push
pop
sub
addr16
push
and
insl
ljmp
mov
dec
notb
sub
xor
movsl
jns
loop
scas
mov
push
andl
xchg
cmc
push
and
in
fcompl
ret
daa
les
push
aaa
scas
je
f2xm1
adc
mov
adc
cmp
je
ljmp
fldt
arpl
movsb
mov
lret
add
pusha
je
jmp
push
ja
leave
jb
dec
aas
fidivs
into
mov
mov
inc
mov
out
dec
push
jbe
gs
push
pop
mov
dec
jae
adc
push
fcoms
push
sbb
aaa
inc
test
mov
pop
xchg
mov
push
out
lea
mov
mov
push
and
insl
xor
mov
mov
ljmp
cmp
pushf
clc
push
adc
js
push
daa
pop
dec
loopne
lcall
out
out
enter
shrb
jecxz
cmp
xor
jl
push
pop
adc
add
jnp
xorb
add
les
imul
jb
test
xor
mov
push
add
dec
pop
icebp
push
in
mov
cmp
imul
add
xchg
pop
sbb
mov
adc
push
and
ja
subl
test
stos
or
scas
mov
lret
pop
aas
xchg
popf
or
iret
daa
push
cmp
add
stc
fcomi
stos
insb
inc
data16
sbb
imul
movnti
aas
mov
push
xor
scas
push
rolb
imul
ss
fcomps
sub
fcmove
testb
repnz
adc
cmpsb
shll
cltd
mov
das
push
movsl
lods
push
scas
push
xor
movsl
lock
cmp
push
bound
sub
in
in
lret
mov
in
jge
in
pop
push
sub
inc
dec
rclb
cltd
push
cmpsb
adc
mov
imul
cmc
icebp
jae
lret
pop
dec
ja,pn
daa
clc
dec
push
int
xchg
je
enter
test
js
pop
pop
and
mov
push
sub
mov
aad
test
cmp
mov
rorb
xor
xchg
jmp
out
cmp
cli
jnp
cmpsl
cmpl
add
jg
cmp
or
jno
pop
cmpsb
ret
in
dec
ss
sub
mov
orl
xor
fs
mov
sbb
xor
push
mov
push
xor
jmp
cld
leave
jle
imul
js
stos
mov
or
rclb
imul
mov
cmpsl
dec
subb
mov
fsubl
and
scas
scas
loop
ja
or
clc
icebp
fcom
mov
jp
in
mov
fnstenv
minps
aas
popf
fnstenv
dec
mov
pop
xor
sbb
pop
lods
jmp
movsl
or
ljmp
adc
sub
xchg
cwtl
pop
testb
pop
mov
insb
mov
loope
jnp
dec
jne
ret
fistps
gs
add
rorl
pop
add
dec
or
lods
jbe
fxtract
clc
push
popa
sub
jb
ds
cltd
mov
pop
adc
xchg
repnz
test
mov
jo
loope
jp
xchg
push
mov
popf
cli
pop
dec
xor
aas
inc
jmp
adc
gs
jle
scas
push
mov
xchg
xor
lds
cmp
sub
mov
loop
sbb
insb
mov
in
push
mov
jbe
scas
lods
dec
enter
out
cmp
adc
jno
in
ret
dec
dec
sbb
adc
lds
mov
xor
mov
mov
fldl
sub
push
test
mov
mov
dec
cmp
pushf
xchg
xorb
push
mov
mov
pop
add
in
adc
jno
loopne
lods
adc
sub
add
mov
sub
xor
xchg
mov
divb
fwait
cmpsb
faddl
jae
xor
inc
test
lods
push
cld
jmp
in
popa
les
mov
loopne
fcomi
jnp
cmpsl
out
and
or
mov
jmp
aas
add
fcmovnbe
and
scas
pop
xchg
icebp
mov
das
sbb
dec
ficoml
js
outsb
movsb
sub
dec
dec
fildll
xchg
mov
or
sub
jne
fstp
inc
mov
lds
sarl
mov
into
lcall
add
jmp
pop
jb
dec
and
enter
sti
mov
int
and
clc
in
push
imul
mov
cmp
xchg
or
pop
xchg
push
pop
xor
jge
push
incb
xor
adc
mov
addr16
jle
add
mov
and
into
xchg
jge
and
fistpll
fmuls
mov
ror
loope
mov
js
gs
aad
ds
dec
pusha
test
dec
inc
sbb
fisubrl
je
fisubl
sahf
daa
in
or
xchg
xchg
sbb
sbb
std
push
dec
mov
aad
xchg
xlat
adc
push
sti
inc
push
jb
or
icebp
inc
push
jmp
neg
shll
or
sbb
scas
add
daa
daa
sub
cs
test
jne
mov
push
mov
lds
pop
aad
xchg
jns
fsubl
and
rcrl
jle
sub
sbb
push
and
test
lcall
popf
shl
and
addr16
test
mov
xchg
mov
jo
jne
sahf
sbb
mov
and
mov
std
mov
and
insl
roll
jg
in
cmp
scas
jecxz
push
mov
push
cmpsl
or
inc
jge
cmpsb
pushf
pop
xlat
and
loope
pop
mov
aaa
push
add
mov
push
mov
ret
fimuls
inc
arpl
rcrl
pop
mov
pop
icebp
xchg
or
jns
mov
sub
push
cmp
dec
xor
cli
mov
je
out
cli
xchg
sbb
lods
xchg
push
stos
rorl
jo
mov
or
std
loope
fsts
loope
xchg
fsts
jbe
inc
out
or
fldl
out
add
enter
mov
rorb
push
mov
mov
or
mov
aad
out
rorb
aam
cmp
push
cs
xor
xor
lret
fcom
ss
pop
add
mov
jo
xor
fbstp
pusha
jo
add
shlb
sbb
test
rcrl
test
cli
jge
cld
or
lock
arpl
test
mov
cmpsl
xchg
push
mov
or
or
fadd
gs
sahf
cmp
adc
pop
jbe
fists
out
scas
jle
leave
lods
enter
clc
insl
divb
fidivrl
dec
adc
leave
inc
out
cmp
icebp
dec
lock
jmp
mov
in
sbbl
pop
test
and
mov
gs
clc
jmp
pop
jg
ret
rolb
fstpt
xor
sahf
test
or
or
mov
lret
sub
jne
push
aas
jne
pop
mov
rcrl
les
call
stos
test
aad
xor
mov
cltd
scas
push
jecxz
cltd
or
or
ljmp
ret
fs
xor
pusha
repnz
sti
mov
pop
repnz
xlat
addr16
xor
cld
cmp
pop
pushf
sbb
jecxz
add
aad
add
xlat
jl
rolb
mov
adc
fwait
push
repz
stc
ret
inc
dec
fdiv
adc
movsl
fwait
arpl
xor
inc
inc
mov
sbb
pop
icebp
and
cltd
pushf
pop
jnp
sbb
mov
hlt
jl
aaa
inc
xchg
notl
cmc
mov
iret
sti
not
pop
push
jp
insb
xchg
pusha
sub
out
mov
jecxz
fidivrs
mov
push
cmp
and
aam
shrb
fmulp
in
pop
and
outsb
loopne
pop
cmp
or
sbb
scas
lds
xchg
ret
mov
or
or
in
cmp
jge
lahf
push
pop
loop
mov
sbb
xchg
cmp
lahf
sub
loop
cs
ss
or
lea
out
lods
aam
test
movsl
mov
imul
lret
adc
sbb
or
decb
xor
mov
shll
mov
push
push
xchg
xchg
push
xchg
bnd
mov
add
push
dec
lea
inc
add
mull
aad
lock
add
xchg
pusha
inc
aam
and
mov
jb
sbb
mov
iret
pop
adc
outsb
lahf
fwait
xor
inc
inc
fidivs
add
sub
push
fwait
shrb
popa
ds
in
xlat
mov
xchg
dec
sub
mov
scas
stos
scas
iret
xchg
xchg
mov
outsl
icebp
leave
jno
mov
xor
dec
stc
or
and
andb
pop
aad
push
ret
popa
loope
fs
in
mov
in
inc
test
jge
insl
addb
pop
push
scas
jmp
dec
lock
pavgw
and
js
popa
xchg
fcomi
fs
lret
out
std
test
cwtl
js
test
or
neg
dec
jnp
popa
sub
data16
jno
sub
push
fildl
mov
and
xlat
ja
scas
jle
sti
mov
in
dec
dec
xor
aad
adc
jl
dec
adc
xor
jge
dec
rcll
inc
mov
outsb
in
out
xor
jp
jae
inc
xchg
push
push
cmp
dec
inc
push
lock
mov
out
std
push
cmp
pop
fiaddl
rsm
inc
popa
cmc
popf
inc
js
movsl
fldl
jl
out
sbb
or
stos
sbb
jno
sbb
dec
sbb
pop
mov
ss
cmp
or
mov
xor
or
dec
fwait
push
subl
das
lods
mov
adc
filds
or
push
fsincos
push
rorl
mov
clc
popa
jbe
cmc
inc
out
repnz
lcall
jae
or
fs
jno
les
test
adc
or
cld
mov
push
pop
clc
and
mov
push
adc
js
fisubrl
dec
adc
pop
or
lret
lods
adc
add
loope
dec
loop
aad
in
xlat
data16
inc
cmp
pop
pop
push
scas
xlat
loopne
sbb
jp
das
mov
lret
in
or
adc
dec
jae
add
dec
cld
push
xor
dec
je
out
add
mov
outsb
sub
push
ljmp
xchg
mov
lock
and
rcrb
les
out
rorb
data16
out
jno
fists
mov
fisttpll
cmp
inc
sub
sub
mov
xchg
shrl
pop
pop
fs
dec
push
jbe
stos
sub
add
pusha
mov
sbb
test
sahf
bound
cld
shlb
mov
mov
mov
adc
sar
push
mov
cmc
mov
loop
lcall
jecxz
fistl
xchg
push
dec
sbb
sti
pushf
cmc
bound
dec
xchg
mov
cld
sbb
pop
dec
cmp
dec
stc
or
xor
lret
mov
mov
and
add
xorb
outsb
vmwrite
scas
push
ficoml
adc
nop
lods
adc
ret
push
test
out
push
pop
push
and
andl
dec
sahf
inc
popf
xchg
outsl
insl
nop
call
jmp
jp
or
popf
les
pop
or
pop
aad
mov
in
dec
and
push
es
jmp
and
xlat
xor
sub
adc
xchg
pop
inc
mov
repnz
nop
and
mov
xor
loope
gs
ret
xor
popa
mov
loope
call
adc
cltd
outsl
mov
shr
mov
push
sbb
test
adc
aaa
adc
pop
sbb
jg
movsl
mov
adc
adcl
inc
insb
loop
jmp
inc
xor
mov
push
push
aaa
add
pop
out
rcr
rclb
cwtl
jmp
sub
popf
mov
mov
pop
sub
es
lahf
mov
loopne
inc
cmp
push
rcl
addr16
mov
add
mov
fcomps
jmp
jb
out
test
and
push
cmp
ja
adc
xor
xor
xchg
imul
mov
stos
sahf
shll
shl
rolb
adc
push
pop
xor
xchg
mov
push
nop
mov
cmpsb
jno
sar
popa
inc
inc
jne
mov
inc
popa
fdivp
iret
ss
jg
mov
mov
mov
pushf
scas
pop
aas
pop
push
inc
mov
jae
jnp
cmp
sub
mov
push
sbb
dec
test
dec
mov
pop
jnp
aad
ret
jbe
mov
pop
incb
in
andb
ficomps
push
inc
sbb
in
jl
fucomi
in
push
adc
cmc
cmpsb
aas
icebp
cwtl
cwtl
sbb
clc
sub
push
and
jecxz
sbb
sarl
scas
jp
fs
push
aas
push
and
push
jbe
add
iret
test
mov
das
sub
push
mov
jne
sbbl
pop
mov
inc
cmp
mov
and
fs
dec
cmp
js
imull
sti
xchg
sbb
add
lods
mov
sar
into
mov
sub
pop
jecxz
ljmp
jae
add
push
addr16
lea
bound
push
test
gs
inc
les
movsl
xchg
lds
xchg
aas
stos
adc
mov
jmp
sbbl
jle
adc
dec
aaa
arpl
or
dec
pop
dec
outsl
xchg
dec
and
mov
lcall
inc
aam
or
mov
jge
inc
xor
pop
jp
pop
cmp
test
insl
mov
and
aaa
shll
scas
iret
orb
xor
mov
mov
jge
movsb
dec
cli
mov
sbb
cmc
adcl
adc
cli
xor
and
mov
imull
mov
shl
sti
int
out
insl
loope
sub
loopne
xchg
jg
adc
and
hlt
push
out
add
scas
push
into
cmp
adc
dec
ds
pop
adc
adc
push
jle
or
repz
lret
mov
cli
movsl
jne
jo
in
das
pop
jp
jmp
push
or
inc
sub
adc
sub
dec
push
push
inc
iret
pop
pushf
or
jl
fbld
rcl
inc
sub
out
xchg
sub
mov
xchg
pop
out
addl
lods
add
loopne
dec
sub
call
jnp
cld
inc
icebp
add
enterw
mov
clc
dec
cmp
subb
and
clc
mov
insb
xor
or
push
fbld
push
adc
pop
mov
adc
jne
fisttpll
das
rcr
mov
test
xlat
lods
jo
js
jmp
jno
popf
mov
mov
dec
jno
mov
in
mov
push
xor
rclb
cld
xor
inc
mov
xchg
inc
inc
shl
gs
pop
stc
shl
test
mov
out
pop
aad
incl
pop
pop
scas
test
sbb
shlb
sar
js
sbb
fwait
mov
pop
push
ljmp
mov
adc
mov
inc
add
enter
cmp
addb
cmpsl
add
sahf
mov
push
push
loope
jns
stc
add
fimuls
push
sub
ss
mov
adcl
mov
test
repz
or
insl
das
sbb
lods
movsb
loope
sahf
lea
notb
movsb
movsb
fldt
shrb
out
xor
mov
mov
xor
bound
xlat
adc
loope
hlt
repz
and
add
xor
repz
fiaddl
stos
adc
std
push
pushf
mov
in
aad
cmp
fldcw
push
sarl
xchg
cmp
fwait
pop
and
adc
stos
push
cltd
dec
pop
xor
imul
xchg
mov
cmp
jmp
fdiv
and
dec
ret
cmpsl
xchg
dec
aam
and
dec
cmp
imul
pop
sbb
mov
mov
enter
gs
push
push
sub
ljmp
cmp
pop
into
cmp
lahf
ret
inc
fwait
cs
rcrl
lcall
pushf
movl
in
push
mov
inc
and
jg
frstor
test
ss
push
mov
pop
and
fiadds
pop
stos
es
inc
mov
or
orl
gs
ljmp
aad
lret
add
and
push
scas
push
divl
sarb
xor
cmpl
adcl
adc
xchg
mov
leave
xchg
nop
mov
cmpsb
mov
in
adc
xchg
lahf
test
xlat
push
or
aas
loope
mov
dec
cld
lods
orb
loope
lret
pop
push
and
sti
int3
bound
test
popa
mov
mov
shr
cmp
push
pop
les
ja
push
in
aaa
aaa
mov
rorl
int3
stos
ljmp
sub
cmpsb
aam
pop
lods
add
and
jb
dec
xor
push
loop
xor
clc
jl
mov
lret
adc
divl
cmp
xchg
jnp
ds
xchg
xor
pop
push
xor
pop
jb
sub
into
adc
mov
lret
adc
outsl
xor
int
lods
nop
push
mov
xor
adc
nop
lcall
mov
pop
mov
repz
push
bound
addr16
adc
sbb
xlat
je
popf
and
imulb
scas
xor
int
lcall
imul
mov
add
lea
mov
mov
or
pop
test
sbb
lds
fnstenv
xor
fs
cwtl
xchg
in
fcmovnbe
aaa
pop
enter
icebp
std
push
test
mov
pop
push
rolb
pop
xor
lret
sbb
xchg
ljmp
mov
std
xor
ljmp
fistl
fdivs
fldl
mov
xchg
jne
popf
xor
dec
jmp
call
dec
jne
lret
not
test
xlat
lock
loop
fdivrs
in
stc
mov
push
cmc
cmp
sub
inc
mov
daa
xchg
sbb
sbb
push
push
lock
and
jbe,pn
or
js
ja
fisubrl
and
lar
mov
enter
rcrb
xchg
bound
pop
into
cs
xor
xor
dec
outsb
xor
sbb
push
inc
dec
inc
dec
out
inc
mov
jae
jns
xchg
shrb
mov
loop
repnz
lret
mov
lcall
cmp
mov
push
cli
notb
sti
cmp
int
cmpsb
dec
ret
shll
fisubrl
test
xchg
shlb
jno
addr16
sbb
iret
loope
movsl
les
scas
out
dec
jge
jbe
data16
jg
fimull
and
xor
inc
dec
xchg
into
mov
xchg
daa
movsl
mov
dec
dec
std
mov
push
mov
inc
pop
cmc
bound
out
xor
mov
fldenv
gs
aam
loope
insl
jbe
and
adc
cmp
test
in
test
push
ds
sub
stos
push
fsubp
mov
mulb
int
into
xchg
pop
bound
sahf
std
adc
test
out
dec
lods
xlat
mov
jmp
dec
inc
ja
out
cmc
xorl
movsb
mov
mov
je
sar
jo
jmp
push
jl
xor
rclb
sbb
les
scas
xchg
repz
in
test
add
cltd
mov
jae
jge
xor
jnp
jbe
sbb
adc
xorl
cwtl
dec
or
xor
lret
pop
or
es
sbb
arpl
paddsw
cmp
fildll
clc
popf
lret
popf
cltd
xor
lret
inc
sbb
scas
ret
outsl
insb
dec
mov
jge
int
sub
daa
push
ds
push
pop
pusha
mov
rorl
inc
pop
ja
test
fucomp
dec
xor
mov
fcoms
push
mov
push
xor
sbb
and
daa
loopne
stos
repz
xor
out
int
inc
cmp
or
dec
mov
leave
add
mov
mov
mov
xor
mov
xchg
and
in
xor
ret
and
repnz
add
xor
mov
jmp
movups
mov
mov
push
fists
cmpl
pop
ret
xchg
jecxz
repz
ja
pop
fsubl
dec
inc
cli
sub
inc
ror
push
push
andb
movsl
or
xor
jns
adc
adc
bound
adc
mov
fcompp
jbe
dec
test
mov
stos
dec
pushf
nop
mov
xchg
fcoms
sub
jge
in
test
dec
aaa
jle
and
pop
mov
jl
clc
scas
aaa
jge
ja
xor
mul
pop
orb
outsl
leave
cmp
les
fisubrl
add
jl
adc
dec
mov
hlt
mov
cs
mov
xor
loopne
adc
nop
std
daa
sar
pop
xor
subb
rorb
mov
in
push
push
pop
xchg
mov
js
fcmovnu
lret
inc
sar
scas
andb
out
jl
mov
add
cltd
pop
mov
mov
fstpl
and
popa
or
cld
mov
mov
dec
sbb
hlt
ror
cmpl
rcrb
and
stc
fisubrl
enter
sub
scas
sub
adc
out
xor
jo
test
sbb
inc
jae
dec
adc
popf
daa
bnd
xchg
mov
xlat
mov
lea
xor
cmp
jns
subl
inc
or
jg
mov
in
ljmp
pop
sahf
mov
lahf
pop
or
push
mov
outsl
scas
push
sub
mov
mov
mov
xsha256
cmpsb
push
or
jp
sub
frstor
arpl
xor
jge
adc
xchg
xchg
cmc
pop
int3
jmp
sarb
in
imul
adc
dec
test
xor
cmp
add
je
test
sahf
xchg
fcomps
jno
jae
jb
shrb
xchg
xor
push
cmp
xor
pop
cmpsl
or
jne
int3
inc
jns
push
pop
pop
in
out
cmc
sbb
popa
loopne
adc
xor
aaa
sub
mov
repnz
sub
aam
dec
lcall
pop
mov
cmpsb
sub
mov
call
ljmp
xchg
mov
dec
mov
iret
jp
cmpb
imul
hlt
sbb
push
pop
mov
pop
icebp
shlb
mov
xchg
insb
lahf
jbe
dec
scas
iret
push
sub
jns
pop
mov
lock
test
gs
jl
xor
sub
xor
inc
sbb
cmp
mov
aam
fdivl
inc
mov
sahf
jp
dec
bound
loope
push
sti
cmp
fimull
ljmp
vdivss
inc
popf
jae
adc
inc
daa
or
add
jnp
pop
sub
jno
rcr
xchg
mov
enter
callw
test
inc
dec
bound
and
xchg
lea
popl
enter
adc
add
and
jl
jecxz
pop
shl
dec
or
mov
in
xor
test
sbb
push
insl
aam
outsl
lods
lret
xor
jb
ds
movsb
inc
mov
mov
out
mov
movsl
test
mov
xchg
and
adc
dec
jp
pusha
outsl
test
sub
xor
hlt
lret
scas
ret
mov
arpl
cmp
sub
mov
sbb
cmp
sbb
push
shlb
or
inc
add
orl
aaa
hlt
mov
daa
xlat
shlb
sub
pop
lcall
sbb
outsb
aam
sbb
iret
dec
das
sub
lea
inc
adc
lock
sbb
mov
jb
pop
cmp
int3
gs
pusha
lahf
std
or
repz
xor
push
mov
mov
jp
std
dec
cltd
pop
pop
jle
nop
jmp
loopne
mov
dec
cmp
sahf
pop
mov
mov
stos
or
adc
jo
jl
jbe
lcall
stos
mov
shll
fisubs
xchg
sub
fimuls
pop
and
je
insl
push
pop
cmpsb
testb
cmp
out
xchg
ror
sbb
dec
test
push
fsubr
adc
mov
mov
dec
and
mov
icebp
push
ret
shll
das
das
add
sub
mov
xlat
and
cltd
fstl
addl
out
lods
mov
aas
pusha
adc
imulb
adc
cld
sbb
push
jg
call
jnp
int
ds
sub
in
xor
jo
aam
push
insl
sub
outsb
cmp
xchg
fdivs
out
fidivrl
js
mov
lods
mov
or
sbb
addr16
adc
out
mov
mov
movsb
cmp
dec
jns
jmp
xor
sbb
mov
leave
xchg
je
push
mov
mov
mov
add
repz
xchg
jno
mov
add
and
add
lret
inc
fmul
inc
cmp
pop
mov
dec
and
mov
std
add
add
or
movsl
iret
push
push
jp
inc
mov
pop
mov
and
adc
and
xchg
jne
push
mov
cmp
loope
fwait
push
fildl
addr16
test
inc
jb
sarl
lods
jnp
adc
pop
pop
bound
mov
lods
fsubrl
std
icebp
and
lret
mov
dec
fucompp
lods
aam
push
mov
sbb
lock
push
or
lock
sbbl
inc
add
fildl
addr16
in
push
inc
inc
mov
cltd
hlt
sbbb
cmp
cltd
adc
jl
sbb
les
push
push
pop
xor
aaa
sub
incl
xor
lods
jle
pop
mov
outsb
cli
cmpsb
rorb
les
xchg
cmpsb
hlt
mov
iret
sbb
and
mov
inc
insl
pusha
mov
repnz
cltd
sbb
xchg
push
add
xor
jae
xchg
shll
cmp
mov
xor
sbb
std
outsb
lds
xchg
jne
outsl
cmpl
lods
dec
mov
and
pop
aam
scas
xor
push
ret
xor
pop
adc
xor
sti
lock
sti
std
jg
mov
call
jmp
jb
in
fnstenv
mov
cmp
push
cli
stos
and
aad
xor
shl
inc
or
add
sbb
movsl
add
gs
fnstenv
loop
in
jecxz
insl
xchg
push
mov
or
mov
and
jmp
mov
into
inc
inc
and
shll
mov
insb
mov
cmpsb
push
jne
inc
push
addr16
xchg
cmp
pop
out
and
jne
adc
mov
cmpl
cmp
cmp
pop
out
cmp
lock
xchg
xchg
mov
rorl
insb
mov
add
cs
aas
ljmp
cmp
cmp
fwait
dec
or
pop
aas
into
pop
cmp
and
scas
dec
mov
pop
jb
jg
and
cs
inc
repz
or
mov
push
add
mov
lcall
xlat
dec
scas
jnp
out
ret
in
or
lods
lea
scas
jg
test
lcall
mov
rcr
jl
xor
add
jg
xchg
insb
and
mov
out
mov
sub
inc
sbb
frstor
clc
mov
jmp
cwtl
lahf
pop
lds
inc
insb
jne
xchg
cmp
mov
add
stos
push
xchg
inc
add
dec
lds
icebp
push
cwtl
or
pop
out
or
das
xchg
push
arpl
sub
sar
mov
adc
aam
pop
inc
mov
push
and
xchg
andl
leave
in
cs
nop
in
xlat
cli
icebp
mov
arpl
shl
and
push
and
adc
xchg
mov
sbb
pop
div
mov
mov
cli
mov
mov
add
cmpl
lods
sub
test
ficoms
into
enter
or
fs
jmp
fstpt
ds
adc
cmp
fsubrs
push
popa
and
gs
jbe
inc
push
sti
dec
stc
fwait
lret
xchg
popa
sbb
dec
lret
adc
out
sbb
and
loope
and
enter
enter
sub
push
fs
cmp
popf
fldt
add
add
mov
push
inc
cmpsl
inc
sbb
push
das
aaa
aas
pop
rorl
mov
xchg
ss
inc
mov
into
fnop
jns
and
ljmp
stos
ret
sbb
outsb
inc
xlat
cmp
loope
mov
sub
out
add
push
imull
push
mov
xchg
mov
bound
mov
cli
ret
mov
xor
int
push
lods
xchg
dec
popa
outsb
xlat
jl
lods
mov
jg
jbe
pop
pop
dec
test
fucomi
dec
cmc
outsb
scas
in
lcall
scas
sbb
xchg
dec
test
xor
pop
lods
cmp
das
popf
cwtl
lret
call
sub
cwtl
out
jg
outsb
or
popa
test
mov
add
outsb
dec
mov
sbb
mov
sti
int3
xor
stc
es
pop
popf
mov
daa
cld
bound
jmp
lock
test
sahf
push
sub
in
and
test
xchg
rolb
mov
add
pop
inc
mov
mov
pop
out
and
pushf
fneni(8087
push
dec
into
push
xchg
or
push
icebp
push
mov
jo
pop
lea
sbb
call
out
and
in
insb
imul
fdivrs
jbe
lea
mov
mov
xor
adc
call
scas
mov
test
xor
out
cwtl
fimuls
test
mov
adc
mov
or
fnstsw
push
loopne
mov
jbe
fsts
push
repnz
sbb
enter
cmp
push
ds
js
repz
mov
fwait
mov
bound
loope,pn
xchg
xchg
insl
fsub
ficoml
xchg
xor
add
dec
shrb
push
call
push
notl
jmp
mov
cwtl
cli
xchg
adc
mov
or
pusha
sbb
loop
mov
outsb
rorl
xlat
or
jl
std
pushf
out
xchg
and
cmpsb
or
cmp
into
jge
push
ljmp
inc
adcl
pushf
leave
inc
jne
mov
xchg
call
jmp
sub
mov
aad
add
cmpsb
insb
out
lds
stos
imul
xchg
mov
shrb
mov
fmull
jno
xchg
je
or
sbbb
and
repnz
or
inc
shlb
jmp
arpl
andb
sub
push
add
lods
jp,pt
inc
or
sub
cmp
out
push
or
outsb
cmp
gs
xchg
bound
push
je
xor
fsubs
or
ffreep
shll
dec
inc
push
push
lret
nop
and
dec
pop
push
movsl
add
out
pop
std
in
add
outsb
mov
xor
fwait
mov
repnz
insb
or
iret
lds
sti
aas
push
sbb
sarb
cmpsl
jmp
and
xor
andb
lock
mov
adc
mov
push
inc
aad
es
fisttpll
pop
imul
adc
aas
jmp
mov
add
or
cld
fimuls
cmpsl
enter
popa
or
xchg
and
xlat
sbb
mov
sub
add
rclb
mov
jae
rcll
in
sbb
fiadds
add
loopne
icebp
pop
lahf
mov
cs
dec
inc
ret
arpl
jae,pt
ficoml
xor
push
iret
cmp
fbstp
adc
cmp
push
mov
scas
mov
icebp
faddp
enter
shlb
xchg
out
ds
add
xlat
xor
movsb
test
stc
push
sub
insl
arpl
xor
push
cld
mov
push
add
mov
xlat
xor
test
and
mov
fwait
adc
push
mov
mov
lea
jge
push
cmpsl
add
sub
push
and
mov
pop
ret
insb
and
and
arpl
sbb
inc
std
push
js
sbb
in
jno
hlt
and
mov
rcrl
sbb
push
mov
or
stc
sahf
sti
shlb
xor
bound
and
mov
rcll
mov
lahf
test
clc
push
pop
outsb
pop
inc
lds
mov
cmp
inc
adc
bound
xchg
push
stc
fs
xor
pop
dec
jp
jne
test
push
stos
rorb
push
out
or
int3
and
enter
jge
lods
das
rolb
inc
roll
inc
push
push
dec
pop
push
sbb
inc
adc
aas
cmp
cli
xchg
inc
push
out
je
push
cmpsl
sub
push
test
addb
pop
mov
mov
jl
mov
xlat
je
fs
cmpsl
test
sbb
mov
lods
and
cld
insb
and
mov
and
add
jnp
popf
xor
adc
xorb
push
or
pop
cltd
xchg
xchg
fnsave
andl
mov
sbb
xor
push
push
mov
adc
push
pop
mov
les
sbb
stc
mov
jbe
mov
lods
xor
mov
adc
ljmp
mov
cmp
mov
push
mov
aam
es
jp
or
inc
je
and
push
inc
popf
sub
inc
dec
dec
lret
je
pop
mov
aam
shll
ret
imul
jo
outsb
mov
cmc
xor
mov
sbb
xchg
std
mov
neg
pandn
mov
iret
xor
iret
loope
cmp
add
and
xlat
pop
sub
cmpsb
mov
mov
xchg
test
iret
decl
inc
sbb
ss
and
lcall
nop
fsts
loopne
in
shrb
inc
fnstenv
sbbb
shrb
jp
jae
push
mov
mov
popa
sbb
call
shll
pop
addr16
mov
test
push
out
xchg
data16
mov
mov
add
mov
cmp
lods
or
xchg
or
lret
mov
inc
repnz
shrl
scas
dec
ds
cmp
loopne
adc
jp
push
jp
adc
in
inc
in
xlat
mov
outsl
std
das
xor
daa
dec
cs
rcrl
into
inc
stos
xchg
pop
nop
fdivs
mov
and
call
inc
test
daa
inc
jnp
add
cmp
mov
sbb
mov
jb
mov
shlb
pop
in
pop
das
pop
cmp
gs
lcall
cmp
mov
xchg
fsincos
jecxz
dec
add
bound
xchg
pop
pop
mov
mov
or
fdivr
xchg
lret
adc
jns
mov
pop
xor
popf
test
mov
xor
xor
movsb
std
lds
movsb
stos
fnsave
enter
fwait
sbb
add
test
cmpsl
xor
cld
bound
in
pop
inc
shrl
cltd
scas
jns
imul
mov
aas
pop
das
inc
rorb
cmc
insb
or
add
jg
lahf
inc
idivb
pop
scas
shrl
add
xor
iret
push
xchg
pop
movsb
cs
mov
movsl
mov
lret
popf
mov
mov
ss
mov
jg
lret
adc
aam
cmpsl
into
and
xchg
mov
fldt
inc
adc
push
mov
aam
outsl
add
push
or
inc
push
pop
sbbb
xchg
push
pushw
mov
mov
icebp
fwait
xchg
inc
outsl
dec
sbb
and
xchg
cmp
fs
iret
lret
in
jge
enter
jmp
cltd
push
dec
sub
in
frstor
les
cmp
add
mov
mov
mov
imul
iret
push
cmp
add
lret
fldenv
or
stc
setae
jmp
test
stos
lods
adc
jle
sbb
iret
inc
les
inc
mov
mov
xchg
cmp
gs
loop
mov
call
outsb
xchg
sti
cmpsb
mov
fiaddl
push
xchg
sbb
andb
inc
add
shlb
aaa
lods
stos
sbb
nop
popa
sub
mov
push
xchg
jmp
sub
jbe
cmp
mov
mov
jno
xchg
daa
mov
pop
in
js
push
pop
mov
jecxz
mov
lahf
out
push
push
pop
cmpsb
into
mov
shrl
fdivr
lods
iret
pop
xchg
mov
jp
fstpt
lcall
lcall
pop
push
mov
addr16
jge
mov
std
andb
mov
outsb
pop
jle
xchg
movsl
int3
sub
inc
ja
add
inc
sbb
pusha
push
inc
stos
sbb
and
repnz
pop
aas
dec
adc
jge
subl
push
or
mov
loop
and
push
adc
jmp
inc
push
fucompp
xor
pop
lds
pop
shll
jne
leave
sub
test
jmp
in
sbb
jg
dec
sub
jmp
arpl
pop
inc
mov
sub
fcomip
jge
cmp
ja
push
fcoms
das
mov
cmp
sahf
push
std
pop
fdivs
lret
jmp
out
stos
pop
test
cwtl
and
ja
jle
cmp
imul
mov
jg
jnp
mov
in
mov
jmp
scas
mov
lret
in
push
mov
pushf
pop
add
push
xor
cmc
mov
popa
mov
inc
cmp
js
clc
sbb
or
cwtl
shl
cmpsb
addr16
mov
inc
popa
jmp
nop
adc
scas
xor
loope
out
mov
daa
aam
mov
pop
out
mov
pop
fldenv
jo
jb
je
in
out
or
pushl
test
arpl
xchg
int3
icebp
mov
lahf
clc
xchg
fstpl
jne
movsb
lret
jle
jmp
pop
pop
insb
enter
fs
cld
ficomps
mov
pop
sbb
xor
shll
cs
xchg
pop
divb
jne
push
ficoml
or
dec
lret
xor
xor
or
mov
popa
mov
lcall
outsb
xor
push
imul
cmp
je
inc
pop
pop
lods
xchg
add
pop
test
inc
call
cmc
mov
imul
xlat
dec
mov
sbb
je
lret
mov
push
add
out
shrb
imul
cmpsl
xor
das
jbe
lds
ret
dec
loop
mov
inc
testb
xorb
out
inc
cmc
fs
popf
mov
adc
mov
jo
adcl
aaa
and
xchg
inc
in
insb
clc
pop
and
cmp
sbb
sub
xchg
inc
mov
fsts
cmpsl
cwtl
inc
and
push
cmp
add
dec
mov
mov
mov
jl
mov
pusha
shrl
jmp
add
cs
or
lods
xchg
pop
int
sub
push
lcall
add
inc
xchg
mov
mov
or
inc
pop
inc
adc
cmpsb
repnz
icebp
mov
ja
xor
sub
fldt
loopne
xchg
out
mov
and
stos
bound
mov
jecxz
test
jo
jns
adcb
xchg
push
sub
enter
push
out
pushf
pop
aam
or
xor
jno
out
dec
jnp
rcrb
xor
xchg
xchg
jno
push
incl
and
lock
pop
aas
in
pop
fisubrs
rcr
pop
aad
ss
int
roll
and
pop
and
hlt
sbb
loop,pn
mov
mov
cltd
dec
push
jmp
and
sub
xor
or
enter
xor
lea
push
sbb
cli
in
jnp
sub
addr16
sub
or
jmp
mov
repz
bound
int
leave
add
leave
mov
cltd
dec
fcmovu
add
enter
ret
fmull
push
call
lcall
pop
xchg
cmp
imul
mov
stos
jno
ss
nop
sbb
mov
bound
mov
or
cs
mov
lret
arpl
mov
jge
lds
inc
cli
rcrl
insl
xor
sbb
popa
xor
xor
sbb
sub
lock
adc
sub
aam
mov
lods
mov
mov
aam
inc
popf
and
pop
cmp
mov
and
inc
or
lods
lock
sub
cmp
pop
into
int
xor
cli
cmp
mov
xchg
lods
daa
xor
push
mov
push
lcall
pop
adc
adc
push
stos
mov
xlat
or
sub
push
mov
and
dec
and
aad
xlat
addr16
repz
jne
sub
aad
and
jne
pop
cmpsl
rorb
xchg
mov
push
inc
divb
ret
mov
push
mov
or
sahf
fsubl
cmp
andnps
inc
push
fildl
dec
iret
xor
and
adc
pusha
xchg
in
cwtl
push
xor
test
cmp
mov
loop
das
leave
pop
mov
in
in
sbb
int3
dec
stos
xor
adc
int
ffreep
rcll
push
inc
cli
in
rcrb
or
lds
cmpsl
enter
push
dec
jno
incb
je
and
int
mov
fwait
adc
mov
mov
adc
adc
mov
stos
xor
jno
cmpsb
fwait
adc
push
sbb
out
cmp
mov
ret
in
jno
mov
test
mov
fxch
push
xchg
stos
fisttps
jp
or
iret
jle
cmp
std
icebp
sbb
inc
addr16
fstp
daa
and
aas
cmpb
sub
jb
xlat
mov
xor
aad
fucomi
aaa
aas
in
aam
adc
and
cmp
lods
clc
enter
nop
mov
loopne
sbb
mov
test
cmp
loop
push
pop
xchg
or
mov
jl
xchg
xchg
repz
int3
sar
not
sbb
fmul
hlt
push
out
xchg
or
ljmp
icebp
test
fsubp
jecxz
push
pusha
mov
outsb
push
push
fnstenv
movsb
xor
and
xchg
in
mov
lahf
sbb
lea
adc
push
mov
mov
test
daa
mov
xchg
std
inc
mov
stos
sbb
pop
pop
arpl
dec
mov
scas
inc
inc
psrlq
mov
cmp
push
repnz
push
jo
mov
jnp
sbb
test
insl
mov
dec
pusha
and
cmp
mov
js
pop
popf
rorb
mov
sub
mov
inc
fwait
add
mov
jge
outsl
or
xor
mov
xchg
inc
sub
stc
ds
imul
dec
lea
push
sub
mov
popa
repz
sbb
xchg
sbb
inc
cmp
cs
adc
clc
test
cmp
adc
sub
mov
out
scas
into
out
jb
pop
xor
shl
inc
int
sub
loop
scas
mov
inc
lea
cmp
lret
inc
sbb
aam
pushf
sub
ret
addl
loope
fsts
sub
cltd
inc
das
je
push
sbb
add
hlt
mov
mov
popf
cli
ret
scas
xchg
lahf
clc
pop
push
test
xor
adc
add
mov
xchg
int3
adc
inc
mov
sub
lock
int3
jnp
push
mov
aas
in
cmp
xor
xor
xchg
jns
aad
rol
orl
insb
adc
jne
or
xchg
sub
push
mov
std
stos
dec
mov
adc
push
insl
sub
ds
jne
lahf
jne
test
xor
lahf
mov
adc
stos
mov
icebp
mov
fs
cli
cli
int3
bswap
int
inc
adc
xchg
push
sahf
adc
loopne
lret
fwait
cmp
js
cwtl
test
pop
scas
out
add
jle
mov
das
xchg
neg
out
sbb
inc
call
mov
sbb
mov
loope
insl
insl
sti
inc
imul
sbb
dec
lock
mov
jmp
cwtl
mov
ret
in
in
cli
jl
inc
iret
jge
lods
xor
and
and
sbb
das
cwtl
jg
add
mov
movsb
ret
outsl
cmp
repnz
stos
xlat
dec
jns
shrl
cmp
fldl
mov
xor
pusha
add
adc
ror
lret
cmp
sbb
cmp
xor
leave
test
lahf
or
push
ljmp
xchg
dec
mov
loope
inc
xchg
jecxz
fs
push
jge
pop
test
push
xchg
movsb
pusha
fsubl
fcmovnb
jle
call
mov
lods
arpl
adc
and
dec
insl
adc
clc
and
fwait
out
enter
popf
in
inc
and
push
fdivrl
sub
sub
ret
scas
sub
outsl
mov
push
jmp
and
push
pop
and
aad
inc
clc
push
mov
mov
into
xchg
mov
or
mov
daa
fidivrs
stos
jecxz
pop
jae
shlb
xor
cmp
dec
jnp
outsb
push
insl
sbb
sub
push
cmp
cmpl
pushf
data16
test
test
lods
mov
pushf
ja
shrb
mov
xchg
mov
mov
cmc
in
sub
inc
lds
and
dec
jb
sbb
jge
pop
and
push
jnp
dec
push
mov
jp
xchg
or
ret
xor
lret
int3
cmpsb
syscall
stos
push
loopne
mov
add
jl
into
scas
xor
pop
insb
sub
mov
xorl
or
push
insb
sub
jp
incl
push
and
and
and
pop
lds
sbbb
aad
lock
mov
push
sub
push
fcomps
and
add
dec
iret
xchg
arpl
add
inc
xchg
sub
ds
stc
cmp
scas
imull
mov
or
fnstsw
xlat
aam
jle
imul
std
adc
xchg
test
shll
insb
aad
out
add
nop
sar
jno
adc
fisubs
ljmp
subb
inc
pop
mull
push
pop
lods
dec
pop
mov
das
xor
aaa
lock
mov
push
in
popf
pop
mov
fcmovbe
mov
hlt
and
mov
data16
ds
pushf
jo
add
fwait
or
movsl
push
cmpsl
fwait
lcall
jne
cmpsl
sub
adc
pop
mov
clc
mov
je
insb
pushf
push
shl
cmp
hlt
or
mov
mov
mov
out
jno
sub
lods
fwait
jb
out
fldl
cwtl
imul
ja
mov
rolb
mov
mov
addb
lret
mov
mov
jge
xor
shl
icebp
in
orb
sbb
xchg
bound
jl
cmp
ds
and
xor
mov
push
pushf
xor
mov
xor
in
lcall
cli
xchg
cmp
test
dec
cmp
stos
jmp
cmp
inc
inc
inc
adc
mov
das
testb
push
push
fimuls
sbb
pop
mov
out
sbb
sub
aad
ret
lcall
in
inc
scas
sub
xor
jp
insb
scas
push
mov
xchg
push
stos
push
dec
shrb
mov
sub
mov
mov
push
push
xor
pushf
hlt
mov
mov
pop
negl
loope
sbb
ret
mov
outsb
mov
and
insb
and
mov
mov
call
out
adc
nop
stos
cmpsb
cld
mov
call
adc
sbb
add
lods
and
jae
popf
aaa
pop
mov
jne
fildl
out
loopne
cltd
lea
iret
adc
stos
int
pusha
fcomps
mov
sub
inc
out
and
or
shll
jae
arpl
push
stos
mov
lahf
stos
jno
and
dec
test
loope
repz
testb
add
sbb
leave
ja
cmp
dec
rcr
mov
mov
sub
sub
std
imul
push
ss
in
or
lahf
out
mov
repnz
sbb
sub
jmp
pushaw
add
inc
cmp
pusha
filds
in
xchg
mov
or
jmp
and
pop
mov
inc
push
imull
outsl
pop
lea
mov
sub
push
mov
dec
movsb
rorl
lds
pop
xor
movsl
clc
lret
xchg
xchg
and
xor
xor
sub
dec
pop
add
mov
add
fists
es
mov
pop
adc
enter
outsl
mov
push
inc
fistpll
lret
lahf
out
frstor
lea
mov
cmc
mov
adc
inc
mov
add
xor
sub
xchg
adc
jge
mov
sbb
inc
mov
fisubs
mov
xor
leave
in
dec
or
cmp
es
stos
int
pop
movb
jmp
inc
scas
scas
mov
sbb
sub
lahf
and
add
mov
sbb
repnz
pop
sbb
and
fcomps
iret
call
add
xchg
jecxz
cmp
sbb
sti
push
jl
or
dec
pop
xchg
sub
sbb
lret
insb
xor
ret
jp
adc
fistpll
add
jl
pusha
test
jno
add
das
push
sbb
or
adc
popl
sub
addb
les
mov
arpl
fnstenv
jecxz
fmuls
push
jne
cmp
iret
lahf
pop
movb
mov
ret
jl
mov
leave
dec
scas
fdivrl
sbb
pop
dec
outsl
sbb
dec
or
leave
and
dec
inc
addr16
xchg
pop
cmp
sub
clc
dec
mov
xor
adc
dec
out
mov
insl
inc
xchg
xor
mov
cmp
andl
test
lret
mov
lret
push
test
mov
cmp
in
in
stc
int3
pop
push
or
and
incl
leave
inc
aad
jle
jmp
push
divb
mov
sub
hlt
jmp
xor
les
shrl
adc
movl
and
sbb
sbb
add
jns
insl
xchg
adc
jae
adc
int
xchg
dec
pop
cld
lcall
sbbb
stos
mov
fistl
pop
fstpl
and
lods
pusha
push
enter
push
ss
mov
sub
loop
pop
add
cwtl
mov
fldt
xchg
bound
pop
cmp
mov
gs
stos
pop
mov
rclb
sbb
outsb
xchg
sub
repz
jns
pop
pop
push
js
sub
orb
jmp
xchg
pop
pop
aad
jge
testb
push
jbe
lret
out
std
cmc
dec
dec
sub
fldcw
test
mov
push
das
daa
test
xor
mov
popa
filds
leave
clc
mov
arpl
xor
insl
mov
jbe
pop
stc
loopne
jnp
sub
out
out
mov
push
aam
lret
stc
jecxz
or
xor
out
xchg
push
cmpsb
fs
jne
icebp
je
std
mov
inc
xchg
mov
push
sti
lods
movsb
scas
shlb
loope
inc
lea
ror
ja
inc
xor
repz
push
out
mov
popf
loopne
bound
jne
mov
xchg
test
adc
mov
or
imul
and
xor
xchg
xor
push
and
dec
or
lret
push
iret
push
cmc
stos
stos
insl
sub
push
add
jne
pop
sbb
pop
popf
scas
in
cmp
fists
inc
aas
mov
sahf
push
or
enter
aaa
popf
adc
xchg
lds
push
mov
imul
ja
inc
sbb
xchg
mov
lods
fs
adc
cmc
lds
sbbb
subb
mov
push
or
push
xor
fs
in
jmp
xchg
mov
daa
enter
sar
push
stos
add
add
imul
sti
dec
xor
mov
dec
sub
xor
add
test
int
jmp
pop
fnsave
push
popa
lods
loop
push
iret
imull
push
rcll
xchg
fwait
lds
loope
cmp
mov
lds
mov
mov
mov
lcall
or
out
push
inc
dec
insl
xchg
cmp
sbb
mov
nop
lret
xchg
xchg
lods
push
dec
sub
jp
and
push
sub
out
std
dec
insl
adcl
aas
sub
push
xlat
mov
aas
and
lea
jb
xchg
pushf
cld
inc
int
dec
mov
xchg
sub
jb
push
roll
add
jno
mov
add
btr
in
dec
push
or
in
popa
mov
and
mov
pop
fnstenv
adc
sbb
lcall
lret
sub
mov
adc
jnp
pop
fcoms
inc
sub
mov
xor
mov
adc
lret
in
push
mov
insl
into
mov
cltd
push
xchg
xor
add
cld
mov
daa
in
call
pop
clc
add
pmaxub
in
fs
xchg
jo
imul
iret
adc
out
pop
xchg
cmpsl
gs
add
nop
mov
insl
add
and
mov
dec
xchg
cwtl
push
push
and
aam
jecxz
add
jecxz
into
pushf
sbb
pusha
sub
sti
ja
jns
in
fsts
js
aad
mov
push
bound
adc
mov
mov
adc
jb
enter
xchg
lahf
sub
hlt
pop
jle
push
pushf
sub
inc
sub
icebp
lea
enter
pop
fadds
movsb
add
jb
xor
xorb
xor
fsubrp
cwtl
and
pop
jnp
mov
mov
mov
int3
or
jbe
xor
mov
lret
push
jmp
rcll
dec
and
or
cld
dec
lods
cmpb
mov
movsl
inc
jae
mov
jo
fsubs
fwait
mov
movsb
adc
adc
jns
lahf
sub
pop
decb
jmp
mov
ljmp
aam
sbb
xchg
popf
sti
jnp
xchg
and
mov
push
fs
gs
ret
decl
jg
mov
and
jp
xor
mov
xchg
fs
stos
push
adc
jmp
aaa
mov
xchg
test
and
test
int3
and
test
jno
mov
mov
mov
ror
pop
push
push
and
xor
mov
inc
iret
add
inc
pusha
rcrl
mov
sub
test
lods
mov
popa
add
xor
fcomi
testb
sub
xchg
and
and
jb
or
jae
aad
push
popf
jle
sbbl
test
xor
jbe
xchg
in
pop
roll
lods
cli
push
mov
mov
sub
testb
pop
movsb
mov
mov
adc
movsl
aaa
pop
adcb
outsb
test
cmp
outsl
aad
lods
into
or
icebp
arpl
jo
iret
inc
push
arpl
adc
aas
loop
jmp
dec
lret
stc
xor
mov
cmp
test
add
nop
mov
lahf
pop
adc
out
fistps
push
adc
daa
xor
lahf
sbb
into
stos
loope
inc
mov
lcall
test
lcall
sub
scas
mov
and
dec
daa
pop
repnz
sarl
mov
mov
mov
mov
add
mov
jnp
xchg
cmc
ret
notb
es
shl
inc
pushl
mov
lods
loop
lret
or
fldenv
inc
push
mov
lea
mov
fwait
gs
cld
in
xor
sub
dec
ds
mov
adc
out
repnz
ret
sbb
imull
mov
roll
lret
test
clc
mov
xor
cmc
addr16
das
or
int3
xor
lret
cwtl
cli
pop
mov
rorb
sbb
shll
adc
pop
xor
sahf
and
cmp
shrl
int
jb
out
jae
pop
out
xchg
jo,pt
test
push
dec
lds
pushf
call
mov
cmc
xor
test
mov
push
mov
and
adc
ds
in
cmc
pop
jl
sub
pop
mov
out
out
or
or
out
movsl
sub
pop
sub
dec
jmp
es
fucom
push
cltd
push
scas
push
imulb
lods
push
in
call
aas
or
xor
lret
cwtl
mov
lret
popf
add
jb
jmp
bswap
repnz
jl
daa
out
mov
jmp
jo
lods
dec
arpl
ud0
cs
scas
and
sbb
jae
dec
xor
pop
mov
sub
cmp
scas
sar
dec
insl
icebp
imull
sbb
popf
and
cmp
enter
pop
push
jl
push
push
add
adc
jno
sub
inc
out
enter
mov
push
in
lock
inc
sbb
dec
jl
loope
sbb
jecxz
repnz
cmpb
cs
mov
sub
sbbl
mov
and
daa
repnz
mov
js
sub
fidivrs
rorl
lcall
xchg
add
pop
inc
push
test
sub
stc
pop
in
in
int
pop
lods
cltd
mov
mov
repz
xchg
jle
pusha
or
ljmp
imul
pop
lahf
imul
repnz
sbb
ret
mov
mov
in
mov
fwait
xchg
aad
in
in
adc
adc
inc
jecxz
sbb
imul
mov
jp
jg
shl
sbb
adc
lahf
xlat
mov
int3
std
sbb
sbb
mov
or
pop
lods
push
stos
in
hlt
stos
lods
mov
jg
addr16
popf
fwait
push
cld
iret
fsubp
or
mov
shrl
fsubrs
mov
sbb
sub
hlt
xchg
or
mov
push
mov
jne
insl
in
in
pop
push
stos
leave
stc
adc
jnp
pop
inc
jle
adc
mov
jnp
in
or
pop
sbb
cs
mov
mov
push
xchg
xchg
fisubrl
fisubrs
or
push
inc
shlb
out
pusha
mov
fisubs
push
cmp
add
mov
leave
inc
ret
push
mov
addb
sbb
fs
cmp
inc
pop
adc
pusha
jg
xchg
push
hlt
jmp
add
and
leave
out
mov
test
pop
loopne
fidivrl
rol
adc
call
daa
lret
jp
imul
xchg
pop
mov
repnz
shrl
mov
sub
xor
jnp
or
pop
sbb
add
jl
add
fimull
scas
test
pusha
imul
mov
sub
int
cmpsl
call
js
xor
jbe
dec
out
mov
mov
mov
jmp
loop
and
js
notb
clc
insb
and
xorl
dec
out
dec
and
aam
cmc
fsubrs
sahf
test
dec
push
mov
ja
out
cltd
cmp
fs
push
or
mov
cmp
ss
sete
push
sbb
cmp
rorl
test
add
test
or
sarb
dec
stos
xchg
push
xor
xchg
pop
sbbb
xlat
and
into
pop
fwait
mov
mov
sbb
xchg
int3
int3
jno
cld
mov
add
int
sub
fists
xchg
popf
lds
subl
pop
cs
mov
test
cli
icebp
push
cwtl
repnz
insl
push
or
adc
call
cmc
jp
fildll
xchg
movsb
jge
ss
dec
push
stos
pop
dec
or
leave
pushf
es
mov
add
dec
dec
adc
inc
mov
out
push
insl
mov
icebp
jns
dec
rcll
or
sub
inc
icebp
lock
or
test
ret
cld
and
and
sbb
mov
movsb
in
aas
push
xchg
and
xor
les
push
mov
loopne
pushf
adc
call
ficoms
pusha
lret
ja
pop
add
mov
imul
jle
push
stos
inc
xor
sahf
sbb
fmul
and
roll
std
sub
mov
jne
shrl
push
loopne
icebp
jne
push
xor
cltd
loop
mov
dec
jle
loope
xlat
and
jo
mov
jne
mov
push
jo
add
arpl
sub
pop
add
ja
inc
movsl
mov
aas
scas
std
xchg
mov
je
push
dec
push
in
jo
into
test
hlt
jne
dec
orl
je
add
mov
loopnew
js
fs
xor
js
jge
xchg
inc
sbb
out
dec
mov
jp
mov
sbb
cltd
lret
loope
std
sahf
xchg
inc
test
push
fiadds
orl
sbb
out
add
adc
dec
js
fs
fcmovb
aas
add
int3
mov
pop
out
mov
pop
mov
stos
mov
popf
jae
out
and
cmp
cld
fidivl
jne
dec
inc
mov
into
sub
movsb
stos
and
cmc
popf
stos
ljmp
addr16
fisttps
push
movsl
sub
in
rcl
mov
fs
pop
dec
xchg
push
sub
pop
aas
out
push
mov
dec
jne
mov
mov
adc
cwtl
dec
push
and
dec
into
loop
mov
mov
and
mov
fstpl
mov
sti
insl
aaa
mov
fchs
sub
xchg
notb
ficoml
and
inc
mov
in
bound
xorl
imul
sarl
pop
sub
ret
lea
imul
fs
repz
mov
addr16
lea
xor
mov
das
xchg
cmp
data16
in
mov
pop
mov
mov
enter
addr16
xchg
scas
or
outsb
pop
popa
push
std
sti
cmp
xchg
test
leave
cmpb
in
push
int
arpl
cld
mov
nop
push
xor
cmp
mov
fwait
cld
xor
inc
cmp
and
xchg
subl
rcrl
cmpsb
fs
lahf
stos
mov
mov
pop
and
repz
jno
inc
push
cli
jecxz
cwtl
pop
stc
or
cltd
and
or
stos
pop
xchg
jae
add
cmp
jae
mov
add
jle
cmp
leave
in
push
inc
lods
jae
sub
icebp
mov
xor
lds
mov
movsb
int
xchg
xor
movsb
cli
imul
mov
pusha
lahf
sti
repnz
push
sbb
inc
or
push
push
mov
dec
xor
adc
inc
in
clc
cs
lcall
movsb
insb
inc
fcomp
sub
push
dec
lods
stc
mov
xchg
in
jle
xorb
sub
adc
popf
mov
mov
xor
shrl
stos
jne
sti
mov
rcrb
cmp
inc
pushf
pop
aam
test
jg
mov
les
insb
test
mov
or
adc
icebp
xor
addl
jge
sbbb
icebp
jo
jnp
clc
in
mov
inc
cwtl
xchg
scas
pop
add
imul
adc
push
xor
mulb
pop
pop
xchg
jb
xor
jp
lret
into
lods
mov
in
fbstp
push
test
inc
xor
mov
iret
nop
xchg
clc
repnz
push
pop
repz
mov
fdivr
sbb
mov
mov
bound
xchg
outsb
jl
roll
stc
fs
les
inc
mov
sub
jbe
dec
enter
jae
pop
mov
dec
mov
popf
ljmp
and
pop
add
xchg
xchg
mov
faddl
or
out
fnstenv
mov
mov
loop
mov
pop
loop
rcr
and
jb
xchg
sub
jbe
inc
add
cmpb
and
test
dec
mov
xor
mov
push
and
mov
push
mov
movsb
movsl
test
loopne
pop
pop
sti
adc
sub
push
outsb
imul
lret
subb
je
or
sub
fisubrs
pusha
cld
popa
mov
jmp
ds
idiv
xchg
and
xor
mov
int3
pop
es
mov
fldt
push
in
andb
insb
dec
pop
push
xor
daa
int
inc
xchg
adc
scas
shll
adc
pop
push
lret
mov
mov
xchg
sti
adc
mov
rolw
es
xor
mov
sarl
mov
adc
popa
ja
out
jne
fs
or
movsb
shlb
push
push
cmp
pop
push
cltd
xor
cmp
test
inc
pop
ret
filds
xor
mov
mov
or
pop
or
xchg
test
pushf
xor
mov
and
adc
sub
xchg
fwait
mov
xchg
mov
les
cmc
pop
fnstenv
dec
fs
sbb
xchg
pusha
pop
enter
mov
xchg
and
mov
mov
andb
repz
or
shrl
pop
jg
jbe
cmpsl
shlb
sub
popf
mov
add
movsl
jns
dec
loop
call
mov
loop
adc
adc
xchg
jle
int
cmp
sti
jge
push
lahf
test
mov
stos
in
xlat
mov
mov
popf
adc
adc
xchg
movsb
mov
bts
cmpsb
inc
lret
pop
sti
repnz
cli
add
dec
xor
pusha
dec
sbb
mov
ret
adc
sti
out
dec
mov
xor
popf
dec
lock
in
xor
cmpsl
mov
test
cmp
hlt
sub
stc
mov
scas
sbb
aam
lock
and
or
mov
lret
push
jg
mov
dec
jle
pop
adc
fidivrl
jle
cmp
mov
sub
push
dec
test
mov
push
sub
mov
pop
pusha
push
or
mov
adc
jge
sub
or
cmpsb
push
push
jae
mov
mov
inc
pop
pop
dec
bound
push
insb
js
addr16
and
js
ljmp
icebp
xchg
out
xor
in
mov
fcompl
jp
jl
outsl
daa
dec
dec
add
sbb
lahf
js
lock
sti
mov
cs
fbstp
cwtl
insl
scas
aam
or
sub
sbb
add
rcrl
add
shr
mov
jno
dec
cmpsb
aad
pop
lret
fsubrs
adc
shrb
sbb
mov
sbb
jne
sub
es
sbb
jbe
mov
and
sbb
mov
xchg
sti
push
xor
aaa
and
jno
xchg
rep
nop
fstl
test
hlt
scas
add
bound
cmp
add
sub
sahf
icebp
pop
addr16
pusha
and
cwtl
push
adc
cmpb
push
sub
dec
gs
cmpsl
shrl
jno
loop
fnstsw
stc
cld
rclb
fstpt
shr
cmp
out
jae
lea
adc
mov
mov
stos
fildl
nop
sbb
fisttpl
pop
gs
sarb
divb
mov
mov
mov
mov
pop
shlb
inc
ljmp
sbb
cmpl
ljmp
push
mov
aas
addl
clc
lods
or
stos
push
loopne
comiss
pushf
clc
dec
adc
mov
or
cwtl
cmpsl
cmp
dec
loopne
lock
mov
lahf
fisubl
cmp
call
lret
push
popf
mov
repnz
movsb
iret
dec
ret
lods
sbb
enter
inc
add
stc
mov
test
loopne
mov
movsl
adc
push
aas
mov
pop
or
mov
inc
sub
int
inc
lds
std
cld
xchg
mov
repnz
adc
mov
inc
push
rorl
rcll
jmp
cmpsl
xchg
jbe
fiadds
testl
daa
cltd
out
cmp
cmpsl
inc
inc
cmpsl
in
nop
out
xcrypt-ofb
cmpsl
jmp
jp
cmpsb
jp
mov
jne
nop
idivb
mov
xor
rorb
xchg
addr16
je
out
jl
push
mov
xchg
jge
mov
mov
test
mov
cmp
or
mov
mov
aad
and
mov
jae
push
imull
adc
push
roll
and
xchg
push
cmp
mov
xchg
sbb
sub
xor
aad
pop
dec
addr16
push
pusha
dec
ljmp
push
cld
xchg
std
push
push
es
and
adc
pop
outsl
add
mov
nop
pop
sub
aaa
and
push
shll
imull
pop
test
lock
adc
dec
in
stos
movsl
xchg
sub
out
sub
sub
jle
and
aad
pop
ret
jecxz
int
iret
lahf
mov
daa
outsl
adc
xorl
imul
mov
push
and
sbb
xor
inc
test
ret
test
cmp
pop
rorl
pop
pop
mov
aaa
cmp
or
push
adc
jae
cmp
movsl
shr
mov
pop
and
hlt
add
sub
lods
ret
popf
cmp
sub
sub
int
in
loope
and
hlt
and
shrl
mov
lret
idivl
insl
mov
pop
add
cmc
sub
arpl
sbb
mov
lock
es
mov
cli
pop
xor
or
or
rcrb
jae
fadd
lds
lcall
sbb
jae
mov
inc
jb
mov
mov
mov
ds
mov
imul
frstor
imul
cmp
mov
dec
sysret
lret
cmc
test
cmc
sbb
cs
dec
stos
push
ss
stos
add
push
in
mov
inc
xor
cwtl
or
mov
pop
sub
push
and
dec
outsb
dec
inc
cld
mov
cmpb
mov
mov
mov
mov
push
cli
cli
push
mov
or
bound
xor
iret
lea
add
xchg
iret
ja
data16
add
xor
out
sub
or
loop
mov
push
pop
mov
in
push
add
jl
jno
xchg
dec
or
xor
lea
inc
inc
out
enter
mov
push
pop
dec
popf
inc
mov
cmp
in
popa
add
inc
out
mov
out
cld
enter
mov
test
sti
in
pusha
push
into
lock
in
mov
push
lods
adc
arpl
out
or
jbe
dec
xor
into
cmp
add
push
addr16
mov
xlat
jno
pop
outsl
jo
mov
repz
ret
fmull
sbb
mov
jo
fisubrl
jno
xor
mov
pop
andb
jns
movsl
push
data16
popf
movsb
lods
leave
jnp
cmc
mov
outsb
imulb
sbb
outsl
mov
push
es
or
mov
pop
push
mov
shlb
mov
lcall
cmp
pop
inc
repz
mov
xchg
push
dec
mov
outsb
mov
mov
stc
mov
inc
nop
sbb
cld
inc
ljmp
mov
cmpsb
insb
cmpsl
jbe
out
cltd
sbb
xchg
int
jns
fisubrl
mov
pop
fisttpl
mov
test
les
out
inc
mov
pop
and
adc
push
sbb
pushf
test
push
clc
pusha
iret
enter
inc
arpl
mov
adc
or
push
push
mov
dec
cmp
pop
jae
adc
enter
mov
xchg
ret
aaa
cmp
sub
jno
scas
in
ja
out
mov
rcrb
inc
cmp
push
jge
push
jno
jecxz
cli
test
int3
lahf
shrb
sbb
mov
je
and
pop
dec
cltd
enter
pop
mov
lret
mov
xor
pop
pop
jl
adc
loopne
inc
jle
adc
mov
mov
bnd
mov
add
sbb
cli
push
adc
mov
xor
adc
test
jecxz
setp
dec
cmpsl
cmp
and
clc
cwtl
jb
push
inc
inc
pop
cmp
pop
add
shlb
ljmp
arpl
jae
clc
adc
bound
sub
iret
mov
xchg
dec
push
xor
push
jmp
shrl
pop
jg
inc
cmp
cmp
sbb
aaa
filds
arpl
movsl
daa
dec
test
mov
push
dec
ds
xor
out
sub
xchg
stc
sbb
mov
movsl
data16
inc
xor
imul
int
lcall
xchg
leave
mov
not
mov
mov
jmp
inc
pop
sahf
popf
sbb
xor
in
imul
dec
lods
dec
aad
ret
push
cli
xor
sbb
into
push
adc
mov
jle
enter
or
mov
sub
pop
mov
sub
arpl
sti
pop
data16
sbb
lods
sub
push
xchg
in
fsubrl
jmp
inc
pop
sbbl
sub
cwtl
push
in
cmpl
xor
mov
fisttpl
lcall
loope
cs
cmp
pop
clc
pop
stos
lods
fs
out
pusha
or
movsl
movsb
leave
mulb
lea
imul
bound
add
pop
push
or
mov
mov
pop
stc
ss
push
inc
sbb
aam
test
pop
clc
in
ss
inc
daa
add
test
jp
jle
jno
inc
xchg
lret
jno
mov
roll
pop
or
aaa
imul
imul
push
sub
lods
cmpsl
push
pop
mov
push
dec
inc
call
cltd
wrmsr
mov
inc
pop
inc
and
lret
mov
mov
dec
pop
sbb
aaa
xor
add
fsubp
add
mov
cltd
in
or
inc
jl
aad
jecxz
imul
push
rcrl
sub
pop
adc
cmp
clc
bound
test
push
test
lods
lcall
and
sbb
test
push
enter
jmp
ret
and
jno
mov
lcall
stos
dec
fsubr
cmp
and
cmpsl
cmp
add
ret
push
cmpsl
movsb
dec
in
add
mov
add
push
dec
xor
sub
sbb
mov
sbb
js
loop
std
std
push
dec
adc
popa
cld
pop
push
pop
loope,pt
outsl
in
movsl
lret
jns
rcr
adc
add
inc
insb
or
inc
dec
gs
dec
jb
mov
pop
cs
jmp
scas
imul
inc
fadds
addr16
jecxz
push
test
loope
jp
and
jge
ja
lock
and
loopne
add
ds
stos
cmpl
cmp
mov
leave
in
or
jge
xchg
cmpsl
ja
xchg
mov
out
int
mov
lods
jns
sbb
mov
mov
rcr
and
clc
cmp
daa
cmp
lods
inc
jl
aas
sbb
pop
repz
hlt
inc
or
in
pop
xchg
cmp
sti
arpl
dec
popf
cmc
adc
pop
rorb
movl
xor
gs
or
or
push
out
sbb
mov
testl
loopne
call
shll
mov
push
adc
sbb
jecxz
mov
inc
shlb
cmp
adc
or
push
sbbl
enter
mov
jbe
sub
cmp
repnz
xchg
out
icebp
enter
xchg
push
add
insl
sbb
jns
lret
outsl
jno
mov
fiaddl
popl
xor
add
stos
sub
inc
mov
xchg
call
hlt
loopne
mov
and
scas
dec
fwait
in
dec
jns
mov
data16
shll
cmc
repz
cmpsb
xor
xchg
mov
dec
sahf
jmp
sbb
lret
in
jo
daa
imul
add
xchg
mov
in
mov
sub
or
jb
jne
hlt
mov
icebp
cwtl
mov
clc
rorb
jae
sbb
lret
cmc
sub
aas
je
cmc
sti
jmp
dec
dec
push
int3
repnz
or
jae
inc
bound
leave
nop
inc
xchg
cld
sbb
stc
xchg
adc
lret
mov
jae
insl
mov
arpl
mov
insb
ror
add
mov
push
lds
out
pop
insb
ret
mov
fistl
pusha
iret
je
xchg
cmp
cmp
mov
inc
es
iret
lahf
iret
jge
insb
mov
fmull
adc
test
inc
lret
leave
into
in
or
arpl
scas
dec
cwtl
add
insb
stos
mov
pushf
in
jg
test
sbb
icebp
rcrl
sbbl
push
inc
bound
mov
sub
stos
ja
jge
ds
nop
fwait
es
fistpl
repz
int3
inc
lahf
jg
mov
lds
out
insb
fimull
jne
mov
jle
jae
push
repz
mov
push
pop
ss
adc
cmp
outsb
out
cmpsb
mov
xor
push
sub
mov
push
mov
fiadds
orb
sub
jne
xchg
mov
dec
cwtl
jae
push
mov
inc
frstor
and
movsb
pop
pop
iret
stc
mov
dec
pop
push
push
dec
lahf
xchg
mov
js
out
xchg
inc
ja
jecxz
dec
sar
dec
pop
xor
les
repnz
mov
mov
pop
rolb
inc
mov
gs
push
stos
dec
lock
cmp
test
xchg
imul
inc
inc
push
xchg
cmp
repnz
es
movsb
inc
mov
daa
ljmp
push
push
mov
dec
test
adc
fwait
aaa
sbb
mov
mov
inc
mov
add
jp
imulb
das
hlt
enter
adc
or
adc
aad
out
jle
mov
jp
push
sbb
sbb
xor
cmp
jle
dec
jns
inc
cmp
lret
adc
out
inc
xor
mov
or
popa
call
movsb
bound
pop
repnz
push
fsubrl
lock
in
aad
jne
scas
xor
cmp
or
shr
fdivs
add
insb
cmpsl
xchg
sti
push
add
ja
xlat
push
cmp
or
cld
sti
add
out
push
cmp
mov
scas
inc
mov
dec
jge
js
arpl
outsl
sub
fs
cmp
cs
in
sub
mov
adc
fld
rcl
cld
leave
cwtl
or
mov
or
dec
movsb
dec
push
fcompl
cmpsl
jmp
mov
dec
push
adc
mov
scas
pop
add
sbb
out
aaa
adc
sub
pop
sbb
xchg
fcompl
add
insb
dec
mov
fucomi
out
idivb
insl
lahf
sbbb
jae
jl
hlt
add
hlt
call
lahf
sub
stos
dec
lret
xor
in
dec
jmp
iret
jbe
rorl
xchg
hlt
in
testl
xor
pusha
loop
movsb
mov
jl
je
and
or
jne
add
in
rcll
addr16
add
mov
fstps
sti
xchg
inc
subl
mov
outsl
iret
outsl
adc
js
clc
pusha
jg
jge
mov
mov
adc
fisubs
cmp
push
xchg
inc
cmc
cmp
adc
xlat
jecxz
shll
sub
mov
mov
fwait
and
cltd
push
cmp
in
pop
sbb
dec
test
sti
mov
add
pusha
dec
ficomps
mov
pop
or
lret
lods
and
dec
int
jo
cmp
lds
sub
rcrb
test
jno
sbb
push
call
popa
enter
mov
xor
js
das
or
and
nop
jbe
ficoml
std
adc
jae
rolb
mov
ja
mov
mov
movsb
push
outsb
jo
insl
cwtl
xor
lock
push
xchg
shll
pop
jbe
xchg
adc
and
xor
pop
inc
fwait
out
repz
out
int
movsl
lret
mov
popa
rcrb
sbb
mov
scas
pusha
lods
pop
jmp
movsl
xor
xor
aaa
xchg
xor
adc
pop
inc
push
cmp
push
or
or
jns
sbb
dec
pop
jnp
cmc
bound
stos
or
push
and
leave
jp
xor
in
call
loopne
jnp
leave
and
xchg
mov
add
rcrb
mov
lret
xor
xchg
shlb
test
fsubs
rcr
aas
push
imul
pop
push
pushf
inc
push
divl
test
adc
inc
repz
pop
dec
sub
and
rcr
into
push
inc
xlat
cmpb
pop
jnp
jge
repnz
or
jb
sub
mov
jg
push
dec
push
pusha
lods
shll
rorl
and
cwtl
and
in
jg
cmpsb
loope
cli
jg
dec
mov
iret
lret
scas
xor
ret
cmp
pusha
push
cmpsb
mov
inc
int3
sub
lahf
andl
adc
and
cmp
push
pop
enter
pop
and
mov
stc
push
mov
jge
xchg
jo
xlat
pop
nop
push
outsl
les
jge
or
mov
push
lds
fdivl
inc
mov
mov
xor
mov
cli
push
and
lahf
outsb
adc
jle
aam
out
xchg
push
popf
les
mov
or
jns
imul
jmp
mov
mov
imul
sti
sub
fs
lock
popa
sti
and
cmc
sbb
xor
ret
pop
dec
out
pop
xchg
ret
shrl
std
loopne
push
push
jns
jbe
repz
adc
sub
enter
mov
stc
dec
jp
mov
aad
repnz
cld
mov
aam
sub
pop
inc
aad
sub
shrb
daa
cmc
shl
ja
dec
jle
add
sub
shrb
stos
mov
fwait
add
test
and
es
sahf
xchg
mov
mov
sub
imul
jge
dec
xchg
xchg
mov
cmp
pop
dec
jb
test
xchg
fisubrl
cli
cmp
lahf
add
cld
xchg
mov
out
gs
cmp
cmp
out
mov
mov
xchg
popl
xlat
and
rclb
push
mov
ret
fistpl
sbb
mov
cmp
sahf
orb
js
mov
dec
mov
jne
insl
mov
sbb
ja
scas
aam
xchg
arpl
or
xchg
addr16
sbb
fiadds
out
dec
cmp
aad
out
fiaddl
ljmp
push
push
inc
pop
cmp
lret
popa
cmc
sbbb
sbb
mov
test
xor
dec
pushf
inc
idivb
pop
jne
lret
push
jl
mov
cli
pop
fisttpll
stc
mov
jp
cmp
push
subl
push
incl
pop
ret
push
ja
shl
mov
std
jno
mov
xchg
lahf
xor
lret
jp
stos
imul
mov
ret
out
adc
loopne
dec
push
outsl
dec
mov
rcll
in
loopne
mov
cmp
pusha
sbbb
loop
fimuls
cltd
dec
fsub
inc
mov
jne
or
xor
inc
ss
add
addr16
repnz
push
inc
xchg
rcrl
cmp
aam
adc
pop
xor
mov
xchg
mov
xchg
call
push
inc
std
sub
mov
adc
inc
sarb
adc
enter
pop
in
in
cmpsl
lret
cmp
fcoms
mov
dec
pop
lods
inc
mov
js
cmpsl
adc
fidivl
sbb
mov
fnstsw
and
mov
out
insl
dec
adc
inc
test
shrl
insl
jp
mov
iret
pusha
je
dec
cwtl
mov
popf
outsb
cmp
inc
xorb
repz
or
sahf
lahf
test
pop
fld
mov
popa
shl
test
inc
push
sub
mov
sbb
ljmp
lea
leave
into
sarb
adc
pop
cmp
inc
icebp
lret
jne
and
cwtl
sbb
add
in
fucomp
hlt
adc
push
jne
inc
cmp
mov
aaa
popf
push
out
insl
pop
lea
inc
in
jmp
test
xor
mov
es
repz
lahf
pop
add
mov
inc
mov
test
std
or
jmp
in
ret
pop
adc
lcall
inc
into
dec
mov
stc
inc
add
adc
fsubl
scas
les
or
cwtl
fildll
insl
dec
dec
jge
jo
dec
loopne
add
out
aaa
cmpl
sbb
std
rep
insb
jns
sbb
jg
push
nop
pop
shlb
adc
or
mov
jnp
pop
cmp
jne
aad
pop
inc
leave
cmp
and
lods
sahf
clc
jle
lahf
test
sbb
aam
out
idiv
mov
xor
rorb
inc
scas
sbb
divb
jp
jecxz
ss
lcall
popa
cld
fs
test
pop
pop
fldenv
add
dec
cwtl
mov
mov
rclb
sar
mov
shl
jns
jnp
rcll
stos
jle
fcomp
xchg
int
mov
loop
out
jno
enter
daa
sti
movsb
das
xchg
mov
push
rcll
cmp
pusha
xchg
sbb
push
xchg
sub
jl
add
shl
jle
dec
sbb
mov
dec
add
fwait
push
inc
das
and
rcr
add
out
inc
shrl
inc
adc
cmp
mov
jg
inc
aam
out
movsb
mov
add
cli
shll
into
cli
stos
mov
mov
pop
jg
mov
std
out
lret
jo
inc
jmp
pusha
xor
push
cmpsl
pop
aam
inc
push
addr16
cmp
mov
xlat
lock
cmpb
je
repz
rep
inc
cmc
cmc
in
mov
add
xchg
stos
insl
je
gs
testl
ret
in
lea
cmpsb
jecxz
sbb
mov
lea
js
loopne
cmpsl
in
lock
std
inc
ret
aad
jae
mov
jbe
les
dec
imul
lahf
jmp
push
jp
enter
or
nop
sbbl
mov
pop
mov
mov
sbb
popa
shll
pop
or
in
pushf
mov
or
pop
adc
fs
std
xor
lods
loop
inc
mov
aaa
scas
test
jle
lretw
inc
or
jp
call
out
lcall
mov
jns
out
mov
and
fs
aaa
rcr
jo
xchg
sub
mov
je
adc
and
shrl
mov
call
inc
cmpsl
inc
xor
sbb
pop
pop
gs
jb
fwait
mov
repnz
cltd
test
fmull
pop
fdiv
sti
and
sub
pop
faddl
inc
inc
rep
aam
inc
pop
outsl
jge
sahf
jp
jae
xchg
shll
sbb
jmp
jp
jg
lds
leave
repz
mov
lret
push
in
cmc
mov
leave
sarl
jne
sbb
sarb
repz
cmp
cmp
ret
lock
or
pop
push
pop
pop
xor
jo
jnp
jbe
adc
or
jbe
arpl
test
ret
std
iret
mov
enter
xchg
scas
cld
mov
vmovlpd
add
or
movsb
mov
jo
jns
or
out
icebp
orl
mov
push
inc
adc
lods
inc
cmp
sub
cmp
sti
aaa
xor
push
mov
loope
jge
flds
jl
push
sti
in
pusha
in
fldt
cmp
imul
les
cmpsl
int3
aaa
out
loope
lds
jne
test
xor
jno
jae
or
sbb
cmc
js
cmp
push
test
addr16
mov
cli
loope
bnd
flds
pop
inc
fdivs
loop
pop
les
pusha
push
xor
mov
icebp
jns
mov
aam
xchg
mov
push
js
in
sub
mov
fstpl
pop
pop
fs
dec
and
jnp
add
hlt
mov
sarl
dec
aas
ss
push
or
loop
div
faddl
pop
aam
jo
lock
mov
js
xchg
popa
icebp
adc
jnp
mov
xchg
adc
and
pop
push
push
cmp
push
cld
fstps
lods
mov
aad
xorb
fcmovne
imul
in
push
mov
loope
lea
clc
adc
jg
mov
decb
push
outsl
lods
les
into
pop
jnp
cmpsl
mov
lods
xor
cmp
lcall
push
loopne
lods
add
pop
lea
inc
roll
mov
dec
pop
or
sub
pop
jge
shrb
jne
push
stos
push
push
or
adc
xorl
cltd
insb
ret
add
iret
or
bound
sub
movsb
xchg
ss
call
dec
jnp
cli
add
sti
dec
pusha
gs
push
mov
dec
outsb
in
mov
fwait
push
xor
sahf
mov
mov
mov
shll
sub
int
repz
add
and
aaa
or
aaa
arpl
imul
in
cwtl
sbb
mov
jbe
sbb
sbb
xor
push
mov
pop
xor
loope
stos
lock
mov
mov
or
loop
aam
sti
pop
add
mov
fmul
jle
jne
jmp
aaa
aaa
mov
shll
movsl
push
inc
cmp
dec
mov
imul
outsb
add
mov
mov
push
add
call
inc
xor
in
pop
les
jo
fdivrs
frstor
push
mov
fnstsw
aad
das
cmpsb
rorb
aam
scas
lahf
stos
jae
lods
push
leave
push
inc
imul
sbb
pop
inc
lret
and
mov
sti
push
sbb
test
sbb
outsb
shrb
daa
sbb
call
scas
jae
push
les
xchg
jb
stc
jbe
push
cmpsb
sti
fwait
mov
outsb
je
xchg
in
cmp
push
xor
pop
mov
mov
out
pushf
sbb
mov
mov
inc
pop
mov
fimull
rcr
mov
sbb
push
sub
mov
push
rol
pop
jmp
push
xor
and
dec
cmp
dec
bound
loop
enter
rclb
icebp
push
cmc
pop
jmp
push
in
mov
mov
pusha
jbe
bound
mov
punpcklwd
scas
jecxz
adc
sub
mov
frstor
pushf
xor
fisubrs
out
inc
aam
push
stos
jg
call
imul
dec
cmp
cmp
nop
lods
fcompl
adc
out
inc
lods
dec
add
inc
pop
pop
insl
stos
or
and
dec
enter
fildll
in
movsl
mov
bound
lret
cmp
mov
popf
enter
xchg
and
jb
dec
inc
lahf
fwait
fwait
add
int3
int3
int3
fcos
or
repnz
clc
push
lahf
out
int
adc
stos
lds
push
aas
decl
outsb
mov
push
fstpl
call
jnp
cld
jle
mov
in
push
xor
adc
rcr
push
clc
loope
ja
ret
add
jge
mov
add
push
mov
add
dec
cs
dec
mov
stos
addl
jae
in
pop
push
aas
fnstcw
fwait
sub
repz
jo
push
or
rclb
lcall
scas
ss
icebp
movsb
jmp
or
inc
push
dec
sbbl
dec
clc
pop
sbb
loopne
xchg
lods
xchg
dec
aaa
idivl
scas
imul
pop
sahf
sub
jnp
push
aas
jmp
mov
movsl
mov
test
cmp
imull
pushf
inc
xchg
je
aam
push
test
add
fstpl
in
jle
adc
adc
xlat
fistpll
adc
sbb
pop
aaa
nop
lcall
rorb
pusha
dec
sbb
mov
mov
shrl
cmp
and
xor
out
loope
pusha
outsl
aad
dec
fmul
in
enter
push
mov
mov
ljmp
push
adc
fwait
ds
inc
add
push
sbb
jns
mov
jns
outsl
add
imul
gs
jns
sbb
adc
push
ja
fsubrl
loopne
outsb
stos
xchg
push
xchg
sbb
xchg
movsb
pop
iret
xchg
fistl
aad
das
cmp
insb
add
outsb
add
sahf
xlat
sbb
push
dec
mov
push
rolb
and
sbb
je
dec
cmpsl
jmp
je
mov
xlat
pop
fmull
xchg
push
les
sub
in
cmp
pop
and
ss
inc
mov
push
cs
mov
ret
dec
sbb
mov
and
shl
fldcw
mov
jbe
jle
cmpsl
into
pop
pop
in
xorb
dec
rcl
in
mov
sar
xchg
mov
andb
mov
fdivrs
push
cmp
jns
and
xchg
scas
cltd
test
jle
sbbb
jl
cmpl
mov
cmpsb
push
jmp
xchg
sbb
sbb
dec
call
pop
sbb
mov
arpl
mov
out
insb
repz
xor
push
dec
fucomp
pop
ds
ja
inc
jg
lods
addb
es
add
cwtl
push
fwait
xor
mov
test
jmp
movl
sbb
repnz
fisttpll
cmp
aas
scas
jge
push
sbb
dec
sub
pushf
pop
int3
xchg
sarl
xor
pushl
lahf
xchg
leave
repnz
js
pusha
js
mov
es
fcompl
push
or
int
push
cmpsb
stos
movsl
ljmp
icebp
jae
xor
aaa
xor
les
pop
scas
cltd
nop
add
dec
lcall
sub
dec
push
inc
mov
enter
mov
cmp
inc
arpl
and
cmp
xor
stos
cmp
bound
jnp
push
push
repz
xor
psllw
in
sbb
int3
push
xor
aam
ja
scas
loopne
cmp
inc
xor
jmp
nop
out
mull
adc
rcrw
mov
gs
dec
xor
inc
out
hlt
pop
sbb
stc
mov
sub
lcall
mov
mov
test
hlt
insb
inc
pop
or
jle
movb
lahf
int3
cwtl
mov
ljmp
rorl
mov
inc
test
fnstcw
repnz
into
jno
repz
call
jecxz
mov
add
enter
pop
add
jno
push
inc
pop
ffreep
xor
addr16
sbb
mov
jl,pt
jne
xlat
ret
out
xchg
xchg
js
sti
and
xchg
push
clc
adc
pop
xchg
jne
jae
lds
mov
js
sti
loope
inc
lods
and
mov
popf
and
or
jno
shl
jb
inc
popa
cwtl
dec
lds
sub
xchg
in
sbb
cmpb
insb
aaa
dec
xlat
movsb
xor
les
clc
imul
cmpsl
cmp
fidivrs
xchg
mov
inc
shrl
repz
inc
pop
stc
push
push
pop
daa
fimuls
das
fisttpll
fidivs
lcall
scas
insb
pop
or
mov
pop
scas
cmpsl
testb
jbe
js
ret
inc
lahf
das
cmpsl
sub
int
fs
adc
xor
shrl
lods
out
dec
pop
popf
cmp
jo
mov
xchg
push
test
add
jno
inc
and
mov
adc
outsl
in
cmovbe
fadds
mov
push
imul
iret
cmp
loop
in
add
add
sub
out
push
xchg
lods
or
inc
or
lods
or
clc
loop
pushf
cli
mov
mov
dec
clc
push
mov
push
mov
rcrl
push
aaa
mov
sbb
jno
into
jecxz
sbbb
jl
gs
addr16
push
mov
cmp
cmp
popa
push
aaa
cmp
mov
inc
add
je
insl
in
push
xlat
push
flds
push
cmpsb
push
inc
sarl
jle
ret
decl
lcall
pop
mov
xor
fdivp
mov
mov
adc
out
cmp
imul
add
cmp
mov
jmp
xorl
daa
mov
xchg
cmp
add
lret
mov
add
dec
adc
movsl
shlb
and
jmp
cltd
xchg
fwait
mov
aam
mov
fsubr
adc
mov
mov
leave
adc
stos
xchg
nop
add
rcl
in
or
push
notl
wbinvd
xchg
adc
ret
adc
shlb
or
xorb
out
call
mov
and
adc
lret
arpl
mov
sub
hlt
sbbb
shrb
sub
shrl
add
loopne
arpl
cwtl
dec
mov
arpl
ss
ftst
int3
push
push
xchg
in
cmc
sbb
orb
or
jp
popf
pmullw
loope
mov
dec
add
aaa
dec
xchg
pop
iret
jo
cld
sar
sub
in
cmp
test
sarb
sbb
inc
hlt
add
pop
add
inc
cmp
ret
push
lock
pushf
xchg
js
sub
mov
lret
adc
sub
sub
jle
pop
inc
pop
or
in
or
mov
shl
lods
add
sbb
or
mov
icebp
push
loop
push
xlat
mov
mov
and
dec
inc
sub
sbb
vsqrtsd
add
and
jo
les
jecxz
andb
pop
stc
cmpsl
pop
and
pushf
sub
divb
mov
in
fs
mov
aam
repz
add
jns
cmp
lods
lock
scas
sbb
inc
sbb
mov
mov
cmpsb
lds
jmp
pop
out
outsl
mov
enter
in
mov
sarl
push
subl
xor
mov
mov
scas
jmp
fs
and
xchg
cmpsl
mov
ja
stc
xor
adc
ss
or
pop
stos
push
jb
gs
sub
push
loop
add
lods
fisubrs
sbb
pop
xorl
lret
jle
shrb
mov
inc
jl
pop
push
jle
out
and
ss
pop
andb
test
xor
mov
gs
lods
data16
dec
push
mov
fwait
std
add
push
fmul
lock
jnp
int3
in
cltd
or
stc
movsl
test
cmp
xchg
fnstenv
in
mov
mov
nop
lahf
hlt
adc
adc
shll
push
lret
out
rorl
push
add
sub
jo
push
loopne
ret
push
in
arpl
sub
inc
mov
push
pop
adc
lods
push
sbb
rol
push
mov
and
jle
daa
sbb
int
loope
jmp
call
sbb
cmpsl
and
sbb
gs
xor
ljmp
stos
add
push
mov
rcrl
lret
xlat
jno
daa
xor
imulb
aam
pop
jle
adc
push
inc
add
imul
inc
cmpsb
mov
xchg
cmp
jne
push
xor
mov
loop
and
mov
pusha
fiaddl
lock
je
xor
addr16
rcr
sub
fistps
xchg
adc
out
mov
jae
imul
jmp
inc
pop
fnstenv
lds
cmp
add
lods
lahf
repz
mov
std
jecxz
fmuls
pop
dec
pop
mov
pop
push
pop
in
push
repnz
fsts
fyl2xp1
lds
ret
jl
cld
adc
sbb
jno
insb
jne
lock
das
std
aaa
shll
aam
jns
pop
addb
push
es
add
dec
cmp
and
je
out
outsb
push
xor
pop
inc
loop
mov
popa
push
lds
sbb
popf
gs
je
xchg
adc
mov
imul
leave
std
stos
cli
mov
push
int3
int3
add
dec
cwtl
out
jle
stos
jmp
or
jl
xor
push
cmpsl
movsb
int
xor
inc
fwait
jo
push
sub
sti
add
mov
int
pop
pop
aas
aam
loope
iret
test
sbb
add
fs
lahf
dec
pop
sub
daa
stos
fwait
jg
jb,pn
sub
fisubs
divl
fs
and
sbb
mov
clc
sbb
sti
sarl
jg
jl
subl
aad
push
cmp
push
xor
sbb
cmpsb
and
add
mov
pop
pusha
mov
add
jmp
fucom
movsb
out
das
enter
je
sbb
jmp
ja
cmp
icebp
jmp
adc
push
js
add
push
daa
xchg
mov
mov
outsb
stc
jecxz
jle
fs
les
sub
sub
lods
lds
test
ljmp
lret
mov
pop
push
incb
push
ds
mov
addr16
mov
inc
out
aas
sbb
popf
popf
sub
lods
popl
pop
addr16
mov
mov
jecxz
outsl
dec
decl
rcrb
popf
cmp
lret
cmpsl
jnp
divl
out
adc
adc
in
push
xchg
dec
mov
lret
mov
insb
es
stos
ljmp
mov
add
pmaxsw
pushf
setbe
mov
cmp
adc
movsl
es
lds
pop
mov
pop
adc
jecxz
dec
ficoms
jae
adc
lret
push
repz
xor
cmp
orl
cltd
push
loopne
cmp
push
or
loopne
mov
test
insb
cltd
inc
adc
fmul
das
roll
test
xchg
push
adc
mov
les
js
hlt
rcr
in
fadds
and
mov
pop
add
aad
add
push
xlat
popf
fnstcw
cwtl
or
cld
or
sbb
pop
add
repz
imul
pop
mov
shll
jbe
mov
test
lret
out
cmpsl
add
fisubrl
and
ss
or
push
sbb
mov
sti
adc
idivl
loop
mov
es
mov
pop
repnz
js
orl
das
mov
movd
xor
lods
mov
addl
inc
aad
mov
rcl
push
jbe
int3
sti
ljmp
add
lret
sbbl
lea
imul
daa
leave
and
pop
sub
in
icebp
dec
mov
push
adc
cli
adc
dec
sbb
cmp
xchg
cld
sub
or
inc
es
jmp
fmul
icebp
enter
mov
pop
ja
xchg
out
adc
pop
xor
dec
mov
or
xor
cltd
or
std
scas
sbb
adc
ret
scas
rorl
dec
xchg
push
pop
insb
lret
popf
jge
xchg
je
xor
cmp
std
add
xchg
mov
popa
cli
and
and
repz
xor
loope
cmp
pop
dec
and
daa
push
and
sub
xlat
jp
and
add
imul
mov
nop
call
enter
xorw
fistl
je
nop
ret
mov
scas
scas
roll
or
mov
imul
cs
rol
dec
clc
or
jae
lds
mov
aaa
pop
cvtdq2ps
mov
rcrb
ret
cmp
addr16
mov
cmpb
sub
xchg
push
adc
lds
sbb
js
cmp
jl
repnz
jmp
test
inc
addr16
subb
adc
out
scas
gs
mov
sbb
mov
mov
mov
fcomps
xchg
sbb
cltd
cmp
sub
mov
jne
es
scas
cli
xor
inc
and
insl
mov
xchg
xchg
adcb
insl
mov
jmp
repz
popf
and
addr16
mov
mov
shlb
mov
repz
xor
mov
stos
test
stos
fs
xor
or
outsb
stos
xor
add
orl
sbb
mov
out
ds
inc
or
and
movswl
xor
cmp
xlat
nop
idivl
mov
into
push
lahf
mov
sub
fwait
dec
add
and
out
lcall
jbe
inc
mov
clc
iret
inc
aas
lds
sti
mov
call
clc
jae
xor
inc
imul
mov
inc
jns
xor
leave
jl
fs
rolb
fisttpll
lea
and
lds
stos
inc
mov
and
imulb
ret
stos
cmpsl
test
stos
mov
ret
ds
or
pop
add
mov
push
das
sbb
dec
lods
pop
cwtl
insb
mov
xchg
mov
lods
ret
mov
push
ja
xchg
jmp
fildl
in
sub
sbb
js
ret
xchg
xor
xchg
xchg
scas
cwtl
in
sbb
dec
xchg
bound
inc
outsb
add
dec
test
stos
mov
stc
in
call
lods
cld
push
iret
xchg
mov
lds
cmp
pop
cli
rorl
sbb
xor
and
fcoml
inc
fs
cld
mov
dec
jl
jl
jle
test
rolb
stc
out
jne
push
iret
lods
inc
mov
mov
mov
mulb
xor
popa
jge
fidivrl
dec
loopne
fisubrs
test
pushf
push
add
rcrb
sbb
pop
sbb
lret
lret
cmp
add
xchg
mov
sub
int
daa
in
lret
into
jmp
jg
inc
push
mov
push
mov
add
int3
adc
sbb
jbe
inc
xchg
sahf
xchg
xchg
aad
testb
push
ss
gs
adc
push
popf
movsl
pminsw
loop
clc
lret
sub
test
sub
inc
inc
lahf
jecxz
lret
lds
rorl
das
push
daa
lods
scas
out
in
and
and
pop
mov
sbbl
ja
xchg
addr16
loope
ja
sub
inc
mov
jo
xchg
dec
dec
aaa
fisttpll
and
cld
inc
jae
mov
daa
into
push
nop
out
or
cmpsl
aas
mov
cmp
xor
cmp
lea
or
aam
dec
movsl
lahf
mov
cltd
loopne
jg
cmpsb
sbb
out
dec
pop
push
fucom
aaa
pop
mov
fldl2e
loopne
je
mov
outsb
mov
adc
add
and
and
mov
or
xchg
cmp
sbb
rorb
in
lea
or
repnz
mov
xor
insl
inc
jle
inc
mov
aaa
or
ja
out
aam
pop
sbb
cmp
mov
jno
mov
dec
in
into
fmuls
orb
xor
aam
ret
in
cmp
fdivs
fs
loop
ficoms
insb
jge
jmp
mov
add
jg
pop
fsub
shl
imul
das
mov
lods
iret
sarb
cmpsb
out
jnp
sti
lea
adc
mov
adc
inc
adc
jnp
push
xchg
and
push
inc
or
std
rcrb
and
fcos
mov
jae
or
inc
push
fwait
dec
mov
xor
movsb
add
mulb
push
xchg
push
dec
pop
inc
jno
fs
repz
test
popa
xchg
jae
mov
sbb
or
mov
das
lret
inc
xchg
nop
or
mov
xor
das
aas
lea
adc
andb
rcrl
out
arpl
rcrl
xchg
mov
push
and
mov
ljmp
loopne
sti
lea
sbb
mov
std
mov
test
adc
pop
and
push
test
mov
outsl
mov
dec
fldl
add
inc
mov
dec
test
pop
cli
mov
daa
lods
pop
jecxz
cs
jp
divb
cmpsb
xchg
and
inc
jne
push
sub
outsb
shlb
stc
mov
dec
cmp
dec
push
dec
fsubs
mov
into
xor
imul
repnz
sub
mov
inc
enter
stos
sbb
and
push
jmp
push
cmpsb
lcall
movsl
inc
dec
xor
jno
fiaddl
pop
push
fcmove
mov
sub
push
mov
sarb
sub
lods
subb
lock
mov
pop
jno
xor
adc
lcall
or
fstpt
sbb
pop
pop
and
and
bound
lds
cmpsl
mov
sbb
xlat
sub
fstps
xchg
rolb
mov
sub
cld
push
and
dec
xor
cmp
xor
xchg
cmp
in
pop
in
insb
cwtl
orb
cld
aad
inc
aaa
sub
in
and
lods
xchg
scas
icebp
fs
loope
arpl
inc
dec
jbe
lahf
xor
lret
cmp
movsb
das
cmc
mov
subl
js
aad
lcall
cmp
push
sub
xchg
push
push
push
shl
pop
stos
les
jge
cmp
xchg
xor
pop
cmp
push
jo
or
pop
mov
cs
es
out
jb
pop
jne
pop
pop
out
pop
cmpsb
pop
cmpb
insb
divb
test
stos
adc
inc
int3
mov
in
inc
andb
pop
popa
outsl
es
xor
xchg
pop
leave
ret
popf
imul
lret
sbb
and
scas
adc
inc
jmp
sub
test
outsl
ret
xor
cmp
cmp
testl
or
mov
inc
fists
fxch
jno
and
cmp
daa
cs
scas
icebp
dec
lret
iret
sahf
lret
loop
and
xchg
cltd
clc
lret
lret
xchg
pop
xchg
stos
inc
jp
or
shrb
negb
inc
mov
addr16
and
call
inc
add
jae
test
pop
cli
scas
push
or
jmp
sahf
adc
inc
out
test
dec
cmp
push
dec
and
jo
mov
mov
xor
insl
jmp
xor
sub
andb
adcb
mov
cmp
pop
push
push
push
pop
fists
js
lea
xchg
and
cs
jp
addr16
xchg
inc
negb
enter
mov
xchg
dec
dec
cmp
add
in
repnz
iret
subb
mov
push
mov
mov
les
jbe
mov
adc
mov
pushf
xor
outsb
push
ss
lea
arpl
dec
les
adc
or
adc
mov
imul
int3
stos
and
xor
ljmp
bound
stos
push
scas
adc
mov
lods
sahf
and
pop
divl
bound
jnp
hlt
movsb
fistps
lea
jle
out
std
sub
into
mov
cmc
mov
xchg
inc
stos
cld
dec
push
cli
jmp
in
pop
popa
inc
inc
in
cld
add
loope
in
vmaxpd
xchg
lea
push
inc
and
cltd
fsubl
sbb
sub
push
sub
loope
or
mov
gs
nop
or
push
adc
lahf
rorl
repz
cmpsb
adc
aad
mov
jno
iret
ret
test
or
rclb
inc
fisubl
out
test
dec
imul
dec
shll
mov
jo,pt
xor
xchg
in
movsb
xchg
jo
adc
or
add
lods
add
shrl
cli
jmp
mov
out
int
js
ret
sub
ret
out
sti
je
les
cmpsb
xor
nop
push
pop
jge
pop
jecxz
and
lea
loope
inc
and
adc
cmpsl
loop
cmp
or
cli
and
in
sub
and
sbb
adc
mov
jecxz
jne
cmc
jbe
pop
adc
fldl
mov
out
mov
pop
mov
cli
leave
fs
jno
dec
pushf
pop
inc
dec
push
ficomps
adc
inc
inc
clc
or
movsl
mov
xchg
repnz
mov
es
sub
sub
lahf
mov
mov
push
shll
fisubs
xchg
adc
outsb
fmul
cmpsb
jg
mov
xchg
sub
enter
dec
lock
lea
shll
fldcw
or
fmul
and
outsl
daa
fwait
adc
adc
ds
test
mov
jb
sub
push
push
push
jecxz
imul
out
mov
and
xchg
mov
mov
bound
sbb
in
mov
xor
mov
push
loop
loopne
aam
push
int3
push
loope
mov
cmpsb
jns
es
pop
hlt
push
lahf
jl
adc
sub
dec
loop
or
cwtl
sbb
cmp
iret
ror
aas
loopne
cs
imul
test
adc
add
or
clc
fwait
fcomps
aaa
xor
jno
inc
inc
fsts
imul
pop
lea
cmp
dec
test
sbb
out
stos
rcrl
mov
adc
std
push
or
mov
and
sbb
loope
aam
mov
jl
mov
mov
inc
cmpsb
fisubl
cmp
lcall
and
or
mov
mov
xor
xchg
lcall
repnz
fsubrl
clc
pop
xor
mov
rcr
sar
popa
ss
shlb
and
lcall
sub
loope
sub
fstl
aas
inc
jne
clc
dec
pop
adc
mov
jp
xchg
dec
fldenv
mov
into
mov
adc
nop
or
call
out
adc
pop
push
xor
xor
xchg
flds
pop
mov
shll
pop
xchg
mov
loop
cmp
cs
mov
jne
test
dec
icebp
shl
enter
cmp
or
hlt
and
testb
loope
repz
call
push
xchg
mov
inc
orb
popf
cld
bound
in
jb
pop
stc
or
lret
sbb
mov
lea
sti
dec
fadds
jecxz
lea
xchg
add
jle
in
xlat
sub
mov
adc
lahf
sbb
outsl
out
scas
adc
sti
in
mov
ret
nop
sub
cmp
stos
jl
mov
pop
sub
add
or
stc
es
mov
sub
adc
or
mov
inc
adc
lret
ffreep
xor
pop
pop
dec
pop
fldcw
push
mov
jnp
add
pop
sbb
xchg
cmp
in
mov
movsl
sub
leave
cmpsb
mov
lea
cmpsl
xchg
scas
jmp
xchg
pop
adc
insl
movhps
push
mov
and
xchg
outsb
xchg
xor
cs
std
andl
adc
push
subl
clc
aam
lea
jp,pn
in
imul
lret
mov
test
cmp
mov
sub
or
fists
sbb
add
aam
cmp
sbb
xchg
cmp
jl
aad
daa
loopne
push
xchg
aam
pop
iret
xor
js
push
dec
mov
cmp
cmp
lcall
sub
cmpsl
sbb
test
pop
mov
mov
jge
aam
mov
jo
loopne
xchg
adc
inc
bound
pop
and
xchg
push
lret
clc
pushf
lea
lret
insb
frstpm(287
popa
lds
lods
inc
jge
lods
xor
add
and
add
and
push
scas
mov
iret
xor
pop
jge
jecxz
inc
cwtl
je
testb
and
int
repnz
push
mov
notl
scas
xor
xchg
aas
lods
repnz
cmp
jb
jb
imul
xor
loop
xchg
nop
xor
les
inc
arpl
or
sub
or
add
shll
mov
lret
iret
pop
lret
sbb
mov
nop
or
or
test
rorl
jmp
add
in
enter
fs
and
fsubl
movsl
push
mov
mov
ljmp
pop
popf
jle
xchg
jge
imul
je
hlt
fdivl
add
mov
add
call
push
mov
push
ja
fiaddl
mov
popf
mov
repz
cmp
rcr
pop
xor
hlt
mov
int
enter
pop
pop
jb
dec
push
jnp
hlt
nop
repnz
adc
xchg
jecxz
xorb
xor
push
pusha
aas
popa
stc
push
scas
mov
push
test
mov
jmp
xchg
ror
mov
and
jle
add
cmp
daa
rcll
jl
xchg
hlt
pop
inc
push
jmp
xchg
out
push
dec
out
push
sbb
int3
les
and
xlat
orb
mov
ljmp
cmp
mov
xchg
enter
shrl
out
ret
xor
daa
stc
jo
pop
pop
ljmp
push
mov
add
and
je
orl
sbb
fiaddl
les
lea
push
repz
in
jbe
aad
inc
gs
sub
sub
gs
add
rol
jne
scas
xchg
shr
jl
xor
jae
push
mov
push
xchg
push
add
out
cmpb
outsl
or
imul
out
cwtl
xchg
adc
sbb
cwtl
cltd
das
enter
mov
inc
cmpsl
pop
jmp
add
push
pop
xor
mov
rorb
jle
xchg
cltd
popf
mov
xchg
inc
and
mov
mov
popf
sbb
xor
cmpsb
sarb
mov
adcl
push
ret
popa
imul
mov
or
mov
cmp
sub
jne
fwait
sahf
add
jge
mov
mov
cmc
pop
movl
adc
je
pop
jo
push
add
jnp
xor
lar
fmull
sub
mov
sub
push
fldl
cltd
jmp
sti
mov
aaa
jg
mov
jmp
insl
pop
adc
mov
out
callw
outsb
das
inc
push
xchg
pop
xchg
js
repnz
mov
pop
pop
mov
xor
and
jb
mov
ret
iret
xchg
or
jg
mov
dec
xchg
and
jecxz
inc
push
cmpl
out
mov
fsubl
lds
cli
loope
pop
lcall
dec
cmpsl
pop
js
ds
adc
xchg
jl
cmp
push
shl
daa
test
pusha
add
movsb
sahf
iret
nop
cli
adc
pop
sub
cmp
lods
out
and
xchg
jns
hlt
mov
mov
fistpl
dec
addr16
cs
shlb
cltd
mov
repnz
cld
xchg
mov
dec
fsubrl
mov
xor
flds
inc
test
mov
pushf
loop
xchg
dec
std
sbb
pop
lods
rcr
pusha
in
popa
int3
ja
xor
dec
fwait
mov
sbb
push
cmpsl
int3
scas
sbb
loope,pt
test
sbb
adc
fldt
dec
xor
xchg
in
add
xor
mov
adc
mov
insl
out
clc
pop
and
rclb
je
mov
ret
sub
mov
or
out
aad
rolb
enter
cmp
scas
push
pop
fs
add
dec
xchg
leave
xorl
mov
xchg
loopnew
insl
dec
inc
adc
pop
rorb
xchg
pop
xchg
pushl
push
dec
mov
mov
lea
jmp
lea
mov
adc
or
dec
push
sbb
jge
lcall
or
loop
mov
jbe
pop
mov
shrl
aaa
ret
xchg
push
std
cmpsl
lock
pop
jecxz
mov
and
icebp
sub
cmp
out
sub
mov
or
vcvttps2dq
xchg
add
jno
inc
push
outsb
and
adc
mov
push
push
clc
sbb
mov
cmp
stos
xchg
in
outsb
mov
xchg
and
push
pop
pop
cmp
xchg
sub
rep
nop
outsl
jo
dec
push
adc
and
mov
mov
or
pop
dec
mov
in
sahf
pushf
cld
or
aam
scas
and
mov
ljmp
cmp
push
dec
sbb
add
jle
add
xchg
sub
and
lds
cli
lret
mov
mov
push
lods
imul
andl
and
lret
jle
mov
rcrl
push
jl
push
jbe
dec
sahf
ret
cmc
dec
dec
adc
adc
into
sub
add
xlat
sahf
lret
or
lcall
mov
sbb
stos
in
popa
testb
mov
insb
leave
mov
test
movsl
jb
stos
cmp
xor
or
push
adc
push
jge
pop
sbb
stc
cmpb
movntps
xor
pop
popf
test
dec
push
sbb
lea
xor
arpl
cmp
daa
jl
popa
xlat
cmp
ret
cs
cmp
lods
inc
sbb
dec
sahf
mov
or
adc
jbe
hlt
or
fwait
cs
mov
mov
mov
jle
es
test
push
lret
inc
call
clc
aas
fstpl
push
mov
adc
ror
mov
stos
sub
cld
cwtl
imul
leave
xchg
add
test
loop
lods
cli
or
mov
push
inc
fwait
mov
sub
mov
mov
das
dec
push
mov
loop
daa
pusha
in
adc
cmp
test
push
mov
sbb
fs
mull
pop
lret
or
rcrb
in
lea
ficoms
dec
std
stos
call
mov
cmp
sarl
mov
and
or
pop
pop
pop
jns
mov
scas
scas
jg
loop
adc
jle
testl
shl
shrd
cli
sub
out
int
je
pop
adc
jne
push
fisttpll
addr16
inc
in
xchg
jo
icebp
mov
add
xchg
js,pn
dec
aas
in
and
test
adc
pop
in
popf
mov
mov
shrl
adc
pop
ret
pop
mov
push
hlt
push
movl
or
pusha
cltd
mov
and
imul
in
pop
stc
js
jbe
scas
xor
shl
dec
and
aam
pop
adc
shll
mov
or
mov
in
out
test
popl
push
aaa
in
and
aam
repnz
loop
inc
fstp
dec
mov
mov
sahf
sbb
imul
sar
jo
test
add
loopne
lret
xor
into
cmpsb
loopne
inc
jecxz
lods
adc
imul
push
roll
inc
mov
rolb
call
mov
arpl
test
pop
sub
out
scas
jg
icebp
fsubrl
insl
scas
jns
sub
lcall
xor
dec
sub
in
cwtl
fwait
adc
jno
inc
xor
icebp
pop
sub
sub
add
cmp
ret
jnp
inc
repnz
pop
sbb
popl
sysret
and
push
rcl
add
dec
imul
lret
mov
imul
or
add
jns
lret
mov
dec
mov
je
sub
mov
push
data16
imul
fwait
sub
shrb
add
outsb
xlat
sarb
mov
jle
mov
repnz
fdivrl
mov
dec
cmc
sub
das
xor
mov
xor
mov
jbe
pop
mov
imul
lock
enter
leave
mov
mov
dec
sbb
push
imul
repnz
cwtl
mov
imul
icebp
push
fimull
sbb
test
pop
sub
add
jmp
test
or
sahf
mov
xchg
cmpsl
dec
sub
fadd
adc
js
inc
or
push
jne
push
int
mov
add
repz
mov
ffreep
loopne
fmull
push
sbb
push
pop
xchg
pop
shll
mov
dec
ljmp
push
ret
mov
xor
or
mov
inc
jge
cmp
sbb
in
mov
add
gs
aad
push
mov
shl
and
xorb
dec
pushf
mov
cs
or
leave
pop
addl
add
test
or
push
dec
dec
cmp
iret
xchg
lcall
dec
mov
jnp
push
mov
mov
mov
xchg
fcoms
lock
mov
sub
push
cmp
push
pop
pop
mov
frstor
push
lret
outsl
jae
push
fcmovne
push
adc
stc
fimuls
push
pop
inc
pop
xor
andl
iret
aad
adc
into
add
xor
in
stos
and
ja
iret
mulb
lcall
jnp
jg
lret
adc
and
js
mov
add
int3
inc
xor
sbb
icebp
adc
pusha
fimull
mov
iret
mov
repnz
cmpl
xor
jnp
loopne
adc
sub
push
mov
addb
stos
add
ret
fsubrp
aas
jae
xchg
jge
and
hlt
or
or
movsl
mov
pop
dec
leave
clc
jbe
adc
adc
mov
and
xor
es
xor
mov
mov
xor
fadd
test
mov
adc
mov
cmp
ficomps
or
jcxz
imul
xchg
jne
xor
pop
dec
icebp
or
into
xor
add
xchg
out
lret
fs
xor
adc
rol
push
out
orl
in
or
mov
fadd
xchg
xor
sub
loopne
add
or
lods
ja
adc
mov
fisubl
mov
cld
cmp
out
shll
mov
int3
dec
push
adc
push
andl
ret
lds
xor
pop
sar
dec
nop
inc
dec
dec
in
pop
lret
mov
cli
pop
inc
or
jmp
xchg
push
sub
es
stc
std
mov
ja
ds
sub
inc
and
push
mov
lret
arpl
rcrb
and
hlt
mov
in
pop
lret
jae
cmp
or
lds
fldl
imul
out
les
movsb
outsl
cs
push
lock
jp
stos
pop
fldl
out
pusha
fnstsw
insb
sub
dec
movsl
fs
pop
mov
out
loop
mov
xor
lds
cmp
imul
int3
fadds
imul
cmp
push
clc
pop
call
out
dec
pop
outsl
call
incl
daa
mov
int
cmp
dec
or
int
call
movsb
scas
xchg
adc
icebp
pushf
sbb
hlt
pop
jmp
movsb
les
add
ljmp
inc
pop
daa
cwtl
mov
or
in
mov
sub
dec
lret
lods
cmp
inc
mov
or
xchg
nop
cmp
jnp
push
test
testl
scas
inc
push
pop
hlt
sbb
lret
das
pop
test
pop
inc
mov
out
mov
mov
dec
sbb
js
cmp
adc
lock
imul
mov
jns
sbb
dec
pop
movsb
push
fdivs
out
es
ss
fadd
in
inc
insb
push
jmp
mov
jnp
cmc
sub
jecxz
add
rolb
add
lock
outsb
push
arpl
pop
data16
and
pop
sub
aaa
sub
stos
jne
push
dec
cmc
pop
shrb
out
hlt
pop
pop
cmp
mov
insl
outsl
bound
sbb
gs
das
mov
jg
sbb
push
fldt
sub
rcr
dec
pop
cmp
icebp
dec
in
stos
scas
mov
push
inc
pop
or
lds
sti
pop
into
mov
orl
sbb
or
daa
jo
mov
call
popa
pop
sub
adc
jb
inc
lods
adc
xor
ret
fsubrl
cld
sbb
mov
repz
dec
add
and
fstps
inc
stos
fwait
fwait
adc
xor
fistps
in
into
mulb
pop
js
out
mov
sbb
inc
dec
mov
mov
dec
lret
popf
adc
dec
int
loope
int3
cmp
cmp
jecxz
add
inc
je
mov
lret
and
mov
sub
enter
repnz
pop
lret
adc
mov
out
jp
test
jl
pusha
cli
insl
setg
mov
jge
add
cli
push
jle
popl
mov
test
xor
dec
test
jg
xor
repz
lods
jmp
les
mov
mov
fildll
jne
mov
gs
jae
push
xchg
insl
add
test
mov
and
mov
out
mov
and
or
arpl
pop
cmp
in
arpl
arpl
icebp
mov
push
jl
push
insb
inc
sub
stc
cmp
pusha
pop
pop
repz
dec
mov
outsb
cli
jae
fisttps
mov
add
cmp
loope
rcl
aam
icebp
addr16
dec
xchg
push
dec
ljmp
test
dec
sub
push
enter
imul
push
adc
insb
mov
out
nop
xchg
mov
jbe
add
ret
xor
aaa
xorb
lods
lods
shr
jge
push
ljmp
sbb
or
mov
xor
in
jnp
loop
dec
jbe
lret
pop
in
fldenv
fildll
movl
jge
mov
popa
jmp
lahf
push
mov
cmp
frstor
xor
fnstcw
sbb
loope
imul
rolb
jnp
repz
dec
into
in
push
cltd
pop
push
mov
sub
subl
mov
mov
push
sub
mov
dec
xchg
call
jmp
adc
aad
jo
push
es
mov
and
ja
mov
int3
mov
add
xchg
jg
test
test
xchg
sub
scas
jns
and
icebp
subb
mov
repnz
cmpsb
mov
and
and
ds
call
jne
cmp
jbe
jbe
cld
dec
jl
loope
mov
push
int
and
test
push
stc
mov
pop
push
nop
jno
sub
mov
fwait
stos
mov
pop
jnp
mov
jns
das
cmpsl
mov
mov
in
mov
outsb
sub
push
jne
fbld
mov
ret
sbb
and
xchg
mov
push
sbb
enter
and
xlat
or
pop
scas
cmpsb
add
jmp
mov
insb
movl
arpl
add
dec
cmpsl
push
idiv
shrb
mov
dec
insl
xchg
pop
mov
push
xor
daa
cltd
inc
sub
fsts
clc
fists
push
sub
shlb
lcall
hlt
loop
aad
lods
fstl
mov
clc
fidivrs
je
pop
push
cmpsb
push
ljmp
inc
dec
notl
push
mov
sbb
lea
push
es
push
mov
mov
xchg
inc
pusha
aaa
aas
out
sub
jmp
jmp
jb
jp
dec
xor
lods
or
add
ret
adcl
xor
inc
sub
aad
jg
out
out
scas
imul
jle
setp
test
or
fldl
mov
jg
stos
xchg
sbb
fcoms
sbb
lods
aam
je
data16
jmp
stos
rcrb
mov
outsb
ds
add
jl
xchg
rcl
jnp
ja
cmp
faddp
dec
and
insb
mov
push
jg
in
ficompl
lods
jae
insl
mov
and
sti
xor
xor
sub
fsubl
adc
test
out
jp
rorl
sub
clc
sti
popa
fwait
xlat
add
outsl
xlat
cmp
jp
mov
mov
cmp
aad
push
and
jp
outsl
cli
andb
ja
sub
ror
push
test
mov
rcr
icebp
cmpsl
xchg
test
push
jns
jno
data16
xor
adc
mov
cmp
lcall
mov
push
push
mov
test
js
or
flds
pushf
in
lds
aas
pop
mov
lea
in
imul
sbb
and
and
xor
sbb
pop
xchg
jbe
out
sti
clc
add
ja
sbb
sbb
inc
jns
add
insl
gs
adc
fs
psubusb
xor
sub
mov
into
fucomip
or
jp
icebp
lock
outsb
sahf
xor
fwait
lret
shll
scas
mov
int3
in
shr
mov
xor
fidivl
push
cmc
sahf
cmp
push
pop
mov
add
testb
jmp
in
sbb
mov
out
pop
lahf
movsb
aaa
je
flds
rolb
push
fcompl
cmp
cld
sbbb
pop
cltd
cli
and
push
leave
dec
pop
aas
jnp
stc
xor
xchg
mov
sub
cli
out
dec
into
adc
mov
fisttps
das
mov
cmp
cmpsl
sub
into
cmpsb
lcall
mov
arpl
or
loop
inc
pop
push
xor
xor
fdivr
jnp
push
mov
les
sbb
xor
mov
sbb
loope
mov
call
int3
add
jns
push
jno
or
cltd
cmpsl
pop
add
jecxz
jmp
inc
loopne
shll
stos
or
mov
and
outsb
hlt
or
aaa
insl
cmpsb
push
andl
lock
xchg
ljmp
add
lds
mulb
jne
fmull
add
int
mov
sub
dec
std
adc
aam
bound
shll
jg
pushf
xchg
sub
aaa
xlat
cmpb
movsb
mov
stc
std
bound
repnz
and
add
jg
and
mov
pushf
jno
push
cmp
in
mov
imul
cmp
sub
clc
out
push
cmp
xlat
add
or
xchg
jno
repnz
cmp
inc
jae
je
dec
and
push
test
mov
outsb
mov
jl
pop
cmp
push
or
or
es
dec
aaa
stc
notl
int3
xchg
das
mov
mov
cmp
jne
int3
mul
xor
jp
dec
cmp
fdiv
clc
push
loopne
cmpsb
jp
jnp
mov
loopne
jne
fwait
mov
movsb
inc
add
insb
add
orb
int3
mul
inc
cmp
inc
loopne
jecxz
in
push
addb
or
mov
ret
call
push
neg
sub
fs
push
in
shll
popa
lods
jle
mov
shrl
fimuls
cmp
movsb
mov
push
decb
js
sbb
add
into
out
inc
arpl
mov
xor
sbb
mov
pop
daa
sarl
movsb
xchg
xor
mov
push
add
mov
xchg
mov
mov
push
pop
addr16
jns
mov
xchg
inc
aas
in
push
call
arpl
fisttpl
xchg
je
sbb
push
cltd
add
or
dec
push
mov
enter
pop
les
scas
add
push
or
mov
pop
bound
loopne
mov
mov
pop
xchg
jp
gs
rolb
add
push
cmp
fstpl
pop
adc
sub
cld
xor
and
outsb
inc
fxam
xchg
into
in
dec
cli
push
ret
push
ds
mov
inc
add
mov
arpl
mov
stc
mulb
aaa
adc
cli
loop
or
popa
fld
xchg
sbbl
pushf
xchg
push
scas
and
js
push
idiv
dec
sub
pop
aam
cmp
and
mov
push
test
xor
cmp
adcb
dec
call
mov
ljmp
repz
jbe
lea
inc
loopw
repnz
and
pop
clc
jnp
mov
test
mov
mov
cmc
loop
nop
jno
lcall
lcall
jbe
icebp
pop
cmp
inc
nop
jne
jb
jmp
or
movsl
popf
pop
push
gs
mov
lods
sub
mov
imul
popf
fisubrl
push
stos
in
movsl
dec
pop
or
adc
xor
mov
add
or
pop
idivl
cmp
jo
adc
cmpsl
rcr
cmp
jb
sbb
dec
mov
test
ds
or
xor
jb
movsl
dec
mov
xor
mov
cltd
or
adc
cmp
fldcw
stos
and
outsb
out
fs
fadds
push
popa
in
xor
push
dec
adc
sub
sbb
inc
push
lahf
mov
in
popf
push
jne
inc
sbb
cmpsl
call
stos
pop
jbe
jge
or
dec
sub
rclb
loop
cmp
rclb
in
or
fst
pusha
xchg
push
adc
pop
out
into
add
leave
ds
lods
xchg
repz
fildll
inc
outsl
add
insl
sarl
fadd
es
push
nop
cld
cmp
mov
cmp
mov
dec
movsl
imul
pop
xchg
adc
xchg
xor
jmp
jae
ret
rol
jle
adc
sbb
mov
in
pop
push
sub
rorl
cwtl
shrb
dec
dec
leave
dec
mov
aas
test
mov
sar
jae
daa
cmp
pop
fs
aam
jecxz
jge
sbbb
pop
jecxz
in
dec
cmpl
cmc
insl
sub
or
jae
xchg
ljmp
adc
mulb
cmpsl
mov
or
push
cmp
cltd
mov
pop
test
test
push
scas
xor
cmpsl
sub
or
push
push
cmp
xchg
pop
pusha
or
fisubrs
cli
sti
dec
mov
mov
test
or
stos
imul
sbb
sbb
sbb
adc
cmp
ret
cmp
aaa
add
adc
iret
xor
in
inc
dec
ficoml
push
jne
mov
add
imul
inc
or
stos
jns
aas
mov
lret
cs
xchg
ficomps
adc
xor
dec
aam
dec
push
iret
push
xor
or
in
adcl
jo
fnstenv
daa
mov
pop
test
cmpsl
sub
out
xchg
clc
rclb
mov
adc
or
jp
gs
add
out
or
xchg
repnz
mov
leave
ret
xchg
enter
pushf
shlb
add
icebp
jp
adc
sub
or
or
mov
fildll
add
push
scas
jo
test
or
push
test
loopne
loope
pop
xor
jb
cmp
push
psubusb
adc
mov
es
loope
and
loopne
ds
js
sub
test
jae
iret
mov
xchg
mov
outsl
sti
outsb
cmpsl
outsl
xchg
sbb
mov
arpl
jae
xor
pop
das
xchg
inc
adc
and
ja
jp
pop
inc
mov
aad
aam
fidivrs
fidivl
sub
and
aaa
testb
mov
sub
dec
out
test
xchg
imulb
stc
je
xor
pop
pushf
stos
dec
stc
inc
push
imul
or
xchg
fistl
incb
enter
cmp
cmp
push
push
adc
lds
pop
jo
ss
mov
cmpsb
push
cld
or
mov
jne
jmp
lahf
scas
xor
ss
pop
lahf
inc
jecxz
js
mov
push
pop
movsb
clc
dec
out
repnz
test
push
daa
mov
jne
std
data16
lcall
aaa
pop
pop
shlb
scas
push
add
push
movsl
aam
imul
sbb
pop
add
jno
pop
call
andps
mov
aad
push
and
frstor
mov
fldenv
loope
std
iret
adc
std
push
xlat
stc
push
fstps
add
ja
test
pop
icebp
das
rcll
sub
mov
mov
cmp
loopne
notb
mov
xor
ds
test
cmp
fstpl
xlat
add
xchg
inc
addl
daa
rorb
mov
sbb
cli
fldl
stos
push
pop
data16
adc
and
push
in
pop
xorl
inc
sub
jecxz
fldln2
mov
xchg
pop
jl
inc
call
sub
push
jne
andb
ja
lods
lcall
in
fwait
jbe
mov
mov
sbb
sbb
mov
cld
ficomps
mov
bound
mov
push
push
mov
adc
jae
jne
dec
jl
sbb
dec
cmc
push
adc
push
push
lods
dec
jl
enter
jno
mov
pop
xor
xor
stos
imul
and
mov
data16
cmc
aas
xchg
scas
dec
add
or
inc
fdivrl
repnz
adc
xor
xor
mov
repz
in
shll
add
das
hlt
cmp
mov
out
jno
cmp
mov
in
hlt
sub
push
iret
iret
test
mov
jecxz
push
xor
hlt
nop
mov
ret
mov
rolb
lods
xchg
inc
dec
jo
mov
push
sbb
fadds
in
mov
sub
mov
sbb
outsb
aas
in
and
cld
imul
orl
and
jge
aaa
mov
push
faddl
push
clc
pop
jb
orl
push
cmp
movsl
push
pusha
jle
insb
dec
push
aaa
cli
cltd
aas
divl
mov
ljmp
cmpsb
xor
xchg
push
xchg
sti
and
jmp
outsl
cli
pop
dec
xchg
xor
movsl
ljmp
dec
pushf
push
clc
out
mov
sbb
call
mov
cmp
adc
shlb
jbe
je
mov
imulb
pop
lcall
aas
and
mov
xor
xor
enter
and
push
sbb
xchg
dec
icebp
sbb
push
push
test
outsl
pop
pop
imul
lock
int
pop
push
loopne
add
dec
int3
imul
daa
aas
sub
or
cwtl
icebp
push
jmp
jp
out
push
fnstenv
xor
mov
xor
stos
or
push
or
cmp
ja
jae
adc
repz
add
lret
dec
sbb
test
mov
lock
xchg
popf
arpl
push
stos
or
mov
jp
sarl
mov
fcmovnbe
mov
and
nop
mov
xchg
mov
cltd
icebp
out
lock
orb
fistpl
popf
andb
mov
shll
xor
aad
lret
ficoms
insl
sbb
mov
loop
loope
push
hlt
pop
or
jbe
push
pop
insb
and
icebp
dec
mov
lea
pop
push
leave
and
pop
scas
in
out
aad
add
scas
leave
sub
xchg
pop
outsl
jns
lret
sbb
fistl
ja
divl
inc
jl
sub
xchg
popf
mov
imul
xchg
popf
xchg
fst
add
in
xor
lods
pop
in
hlt
arpl
cwtl
insl
or
lea
dec
pop
cmp
pop
icebp
add
xor
jmp
push
popa
mov
aas
repz
out
jbe
out
mov
pop
dec
add
xchg
push
daa
insb
fcmovne
or
sbb
out
adc
cmpsl
adc
int3
jae
or
andl
cld
shlb
mov
shll
loop
repnz
popf
in
cmp
test
jb
mov
jno
das
cmp
rcrb
add
jne
xchg
xor
push
lea
cmp
or
add
cld
xchg
mov
pusha
shll
push
out
sub
enter
mov
mov
fdivr
aas
and
push
mov
in
lret
pop
lods
add
push
push
push
std
aaa
outsl
out
xor
inc
aaa
ss
jg
add
cmpsb
ficompl
sub
jbe
add
aad
arpl
adc
je
shrb
add
push
dec
call
xchg
mov
mov
jo
add
or
inc
push
cli
stc
add
cmp
xor
hlt
and
loopne
cmp
sbb
sahf
mulb
inc
stos
imul
xchg
xor
test
sub
popf
in
sub
das
inc
lret
pop
pop
in
inc
push
fidivs
xchg
or
xor
push
xor
loopne
out
mov
jl
mov
into
fnstcw
lcall
loopne
inc
ljmp
mov
sbb
pop
mov
or
fistps
fs
cmp
jmp
aad
xor
push
pop
pop
fsubl
fdivs
xor
jo
dec
mov
mov
mov
ret
mov
out
push
das
cwtl
stc
aam
std
or
hlt
inc
xchg
pop
mov
cli
cmc
popf
sbb
add
jno
xchg
jle
stos
pop
imul
lds
mov
mov
call
sbb
push
das
shrb
add
in
dec
daa
cli
iret
je
xchg
pop
jae
pop
imul
mov
inc
rorl
add
jo
dec
or
sbb
outsl
mov
fldenv
jge
inc
dec
insb
and
cld
sbb
repnz
push
inc
lock
jae
cmovp
sar
mov
adcl
dec
add
jg
iret
push
jbe
pop
nop
mov
outsb
dec
jg
mov
jbe
mov
and
lret
push
movsb
jmp
cmp
jge
mov
jge
shll
xor
loope
enter
pop
add
std
in
shl
cmpsl
dec
popf
lods
xchg
outsb
cld
sub
ja
mov
lods
jg
dec
aaa
add
add
or
subb
pop
lock
and
jge
gs
sbb
stos
shlb
xchg
inc
cld
jge
data16
leave
cmp
popf
dec
mov
dec
fdivrs
lahf
mov
jecxz
sbb
mov
and
jbe
daa
pop
mov
popf
ficoml
popf
jle
dec
movsb
inc
in
dec
icebp
orb
cltd
movsl
mov
pop
aaa
sbb
or
or
cmp
jo
insb
push
jb
or
mov
flds
cs
arpl
sbb
pop
sub
and
dec
ljmp
jnp
xor
push
pop
in
in
mov
dec
jg
pop
in
imulb
fdivrl
int3
fdivs
sub
hlt
shlb
pop
pop
inc
fsts
ret
repnz
mov
inc
out
jnp
pop
scas
sbb
sub
xchg
mov
inc
outsb
jg
jecxz
pop
into
negl
xchg
jbe
adcb
xor
sbb
data16
or
cld
sbbl
pop
rorb
inc
mov
ret
fcoml
push
jae
pop
sub
inc
aad
icebp
push
push
nop
pushl
or
cmp
and
lret
adc
cmp
movntps
sbb
cmc
cmovb
xchg
or
jnp
ja
popa
sbb
rclb
icebp
mov
inc
dec
cmpsl
nop
jecxz
jo
mov
dec
ja
ficoms
mov
les
stos
rorl
daa
pop
xor
sub
xlat
inc
cmc
jns
and
mov
cli
dec
pop
bound
std
mov
mov
icebp
ret
mov
rolb
xor
inc
sbb
pop
outsb
jb
inc
ds
jo
js
cmp
fadds
lret
cltd
imul
ljmp
fsubrl
fucomp
jge
inc
xchg
mov
insl
or
mov
andl
mov
sbb
jmp
iret
inc
lret
and
jmp
jmp
mov
movsl
or
or
sbb
int
mov
jno
xchg
jne
lods
push
daa
aas
mov
into
or
jns
cmp
cs
popa
add
out
or
mov
and
mov
adc
inc
dec
popa
orb
mov
int3
pop
xor
sub
push
les
sbbl
into
adc
shrb
repnz
aad
sub
das
mov
push
fmuls
push
xor
mov
rclb
jae
aam
into
adc
jbe
pop
xchg
cmpsl
xchg
or
pop
push
pop
fstps
adc
sbb
xchg
add
jp
inc
outsb
sub
das
dec
adc
shl
imul
mov
inc
mov
mov
adc
mov
outsb
xchg
add
rolb
sbbb
mov
es
pushw
xlat
bound
insb
lds
aad
adc
sbb
inc
das
inc
sar
mov
insl
flds
sbb
mov
daa
adc
mov
dec
fdivrp
dec
xchg
mov
sub
mov
xorl
sub
sbb
dec
mov
sub
mov
cld
movsl
rclb
xor
outsb
in
les
bswap
xor
inc
shl
pop
and
pusha
int3
int
cwtl
aam
add
sarl
or
sti
adc
mov
push
lret
xchg
gs
xchg
or
add
loopne
sahf
adc
adc
or
fbld
pop
xchg
lods
ret
add
test
lret
jne
pop
pop
sub
cs
rorl
mov
cmp
enter
sbb
push
push
lret
mov
push
mov
mov
cwtl
insl
js
sbb
iret
test
xor
pop
mov
es
loopne
xchg
test
and
les
jne
or
cli
jmp
sub
cld
adc
nop
mov
addr16
mov
pop
lock
push
dec
stc
sub
repnz
fwait
mov
xchg
aas
add
jno
pop
push
outsb
lahf
pop
repnz
push
pop
es
xor
mov
arpl
bt
cmpsb
mov
sbb
lret
xor
fisttps
mov
sbb
jp
lock
mov
mov
jnp
xchg
adc
outsb
cs
lock
fimull
repz
sti
xor
add
shrb
jb
push
inc
in
jnp
in
and
lods
mov
and
or
or
xchg
insl
push
ljmp
add
xchg
cmp
in
or
push
pop
ret
sub
push
cltd
xor
push
cmp
sbb
hlt
inc
pop
jle
daa
insl
cmpsb
jno
or
push
cmpsb
mov
lods
cmp
stos
popa
xchg
mulb
arpl
gs
popf
cmpb
call
outsb
cmp
sbb
or
push
sbb
std
or
out
pop
and
xchg
mov
shl
icebp
les
pop
in
ds
fstp
add
out
out
fists
cwtl
mov
inc
ret
fwait
inc
sbb
testb
adc
cmp
xchg
sub
mov
pop
ljmp
adc
js
dec
in
mov
pop
pop
in
bound
ffreep
cmp
xor
jbe
es
faddp
push
mov
popa
cmpsl
mov
xor
mov
inc
pop
icebp
and
std
in
rol
clc
inc
cmp
ds
call
pop
ja
dec
pushf
movsl
lea
inc
lods
scas
pop
or
es
loope
mov
insl
pop
mov
sahf
push
push
xchg
in
scas
dec
pop
xor
mov
lahf
mov
xor
mov
jp
mov
push
jecxz
mov
in
sahf
movsl
aaa
push
adc
jns
lahf
imul
jl
dec
mov
pop
je
cmpsb
sub
es
xor
inc
int
xor
pop
push
and
mov
fcmovne
cmp
repz
inc
mov
fsts
mov
pop
pop
adc
fwait
repnz
ds
xchg
or
jmp
loope
pusha
aas
ss
mov
adc
push
adc
imul
sbb
add
imul
pop
push
or
cld
scas
iret
push
or
popa
cs
cld
mov
mov
test
or
sbb
sub
cmc
pop
dec
push
mov
aas
lock
inc
cltd
sub
pop
ljmp
adc
pop
xchg
sub
adc
cli
cwtl
aas
stc
add
xchg
sub
dec
lahf
and
les
mov
push
mov
out
sub
enter
mov
push
sahf
cli
add
and
add
pop
jecxz
cmpl
push
mov
std
cmpsl
and
jge
adc
adc
adc
fisubs
add
dec
inc
xchg
fs
sub
into
xor
out
push
add
inc
push
lods
cmpsl
or
outsb
shlb
test
xor
push
xlat
cli
jl
dec
mov
mov
pop
cmp
pop
pushf
fistpll
add
mov
int
mov
gs
mov
loope
jmp
jp
pop
cmp
mov
test
data16
and
add
movsb
push
xor
adc
sahf
sub
mov
inc
into
inc
scas
mov
push
lahf
sbb
adc
lea
jp
mov
inc
in
adc
daa
push
inc
sbb
mov
adc
and
xchg
fisubrl
rcl
adc
call
inc
sbb
pusha
shl
lahf
xchg
scas
aaa
mov
pop
test
call
mov
pop
test
push
and
addb
je
jae
jecxz
pop
hlt
dec
mov
sahf
mov
inc
cltd
sub
or
clc
sub
sahf
cmc
inc
setnp
inc
inc
sub
test
jo
adc
js
sti
scas
xchg
adc
mov
or
xor
mov
aam
xchg
pop
aam
sub
nop
mov
jp
jb
xchg
dec
leave
std
sbb
call
gs
pushf
jp
xchg
dec
mov
xor
dec
pop
je
out
jmp
jno
jmp
bound
dec
out
pop
mov
jbe
into
mov
adc
or
or
xor
xchg
frstor
nop
jp
jl
or
jecxz
div
and
push
mov
aam
push
push
mov
sbb
jp
sbb
sbb
rcll
sub
and
sub
fistl
mov
in
pop
repnz
ja
xor
repz
lods
int
mov
jns
insb
fwait
jae
and
mov
loope
or
inc
push
ret
enter
call
pop
cmpsl
and
data16
movsl
pop
insb
xlat
sub
or
cmc
into
inc
adc
dec
jb
sub
scas
sarl
mov
mov
push
sbb
hlt
adc
in
sub
sub
mov
negb
and
stc
addr16
rorl
lret
dec
ss
push
xchg
pop
into
cmpsb
mov
fidivrs
cmpsb
mov
xchg
push
cs
sub
cmpsl
shl
pop
or
pop
sarb
mov
mov
jae
adc
sub
jg
pop
cmpsl
jp
mov
mov
dec
shlb
popl
jg
dec
xorl
fsts
aaa
mov
jb
add
pop
add
mov
mov
xchg
push
lret
rcll
inc
hlt
dec
fildl
or
adc
xor
or
pushw
shll
dec
into
out
xor
mov
js
xorb
rcrb
push
cmpsb
push
outsb
into
and
inc
and
sub
adc
outsl
in
imul
popf
sbb
dec
jmp
dec
dec
xadd
out
mov
jl
add
imul
xchg
mov
sbb
jecxz
mov
sub
test
inc
jne
nop
je
mov
sbb
add
push
stos
or
out
sub
mov
sub
orl
int
mov
in
pop
sahf
fs
sbbl
shr
sub
popa
mov
mov
in
pop
cmp
adc
pop
and
cmp
mov
mov
outsb
mov
aam
and
sub
xchg
in
mov
addr16
push
mov
cmp
int
pop
lock
jnp
dec
stos
push
out
sub
or
adc
inc
outsl
mov
es
int3
dec
push
push
fwait
cmpsb
icebp
bound
pop
xorb
mov
sbb
fcompl
lea
rcll
jns
or
pop
lods
mov
inc
sub
loop
lret
add
cs
push
test
mov
out
push
xchg
xor
andb
jp
in
cmp
push
cmp
push
dec
sahf
jns
push
xlat
addr16
xchg
lods
and
dec
movsl
cmp
xchg
inc
gs
movsl
in
jne
mov
leave
out
ret
orb
xor
xchg
jmp
pushf
xor
or
sub
in
jge
push
aaa
sbb
shll
sub
je
or
insb
xchg
adc
xor
int
inc
and
lods
scas
add
pop
or
cmpsb
adcb
sbb
and
push
jns
xchg
fnstsw
std
push
das
adc
push
bound
or
stos
imul
mov
sbb
mov
pop
inc
push
fxch
imul
test
imul
push
std
popf
sub
mov
cmp
shll
popa
cmc
ja
push
pop
ficomps
inc
inc
cmp
inc
test
dec
or
xor
jecxz
add
mov
int3
outsl
push
scas
mov
enter
and
rorl
inc
andl
popf
xlat
in
imull
fcoms
fildl
ret
wrmsr
fidivrs
je
jb
cltd
push
mov
loop
repz
push
xchg
mov
insb
mov
mov
xor
pop
and
cmp
or
push
lock
in
cmp
cs
and
js
sub
cli
jle
sbb
enter
xchg
sub
fstpl
inc
arpl
jb
push
push
aas
xor
das
stos
mov
sub
ret
lret
add
aas
mov
pop
loopne
cmpl
addr16
test
std
jle
loope
lock
push
lds
sub
decb
js
jnp
sbb
mov
sub
cmp
mov
pop
inc
clc
lcall
or
fadds
sbb
rclb
sbb
add
pop
das
aam
cmp
dec
repz
mov
shlb
rcr
xchg
push
inc
cltd
lret
sub
and
xor
int
andb
mov
jnp
aaa
dec
xchg
push
xchg
or
mov
push
add
sub
mov
cwtl
jnp
jmp
lock
mov
loop
xchg
gs
bound
js
mov
pop
sub
ret
dec
sti
xchg
fisubl
push
dec
pop
stc
rclb
jmp
lock
outsb
pop
xor
push
cmp
fstpt
xor
jo
and
mov
pop
adc
imul
idivl
pop
mov
inc
xor
lret
and
pop
aas
incl
inc
ss
mov
push
pop
out
pop
push
pop
ret
pop
sub
and
test
mov
inc
xorl
mov
shlb
test
xchg
lea
stos
push
xor
adc
jae
out
pop
imul
add
pop
fildll
xor
jb
fimuls
mov
jmp
mov
cmp
add
xor
mov
sbb
in
inc
test
mov
and
les
cmp
scas
cmp
pop
int3
push
pop
xor
xor
cwtl
lods
push
pop
addr16
shrb
mov
dec
dec
inc
push
aaa
not
push
nop
aad
mov
cmpsl
xchg
push
xlat
add
mov
lods
adc
pop
jb
xchg
dec
xchg
fs
mov
cmpsl
mov
fld
xchg
inc
clc
push
and
mov
jae
sub
notb
ds
pop
call
and
push
jae
test
xchg
mov
ja
push
push
or
mov
orl
arpl
xlat
into
mov
jmp
lock
fstpl
in
push
inc
sti
movsl
leave
dec
rolb
out
and
xlat
in
inc
in
ja
mov
pop
or
inc
adc
dec
mov
in
sub
div
in
mov
inc
hlt
add
lock
fidivrs
ja
mov
sahf
popf
test
or
ja
jno
push
aas
xor
ja
jmp
lods
xor
mov
repz
ljmp
cs
cli
cmp
add
clc
pop
pop
js
lods
sub
push
jno
mov
cmc
stos
pop
cmp
clc
scas
je
shr
std
fwait
add
loope
pop
mov
mov
cmp
dec
sub
incb
outsl
mov
mov
cli
mov
mov
leave
imul
sbb
adc
and
lahf
push
cmpsb
inc
lret
daa
out
mov
loop
sub
aaa
sti
pop
loope
aaa
sub
sbb
adc
mov
dec
jno
arpl
test
and
adc
fdivl
sar
lret
fcmovb
cmp
iret
jae
mov
cmp
mov
dec
outsb
sarl
fwait
inc
cmp
pop
adc
sbb
push
inc
sbb
test
movsl
pop
aam
cmpsb
xchg
cmp
fwait
adc
mov
xchg
stc
loop
lods
shlb
in
xchg
movsb
jl
into
cli
stos
push
into
test
cld
mov
inc
push
adc
cmpsl
dec
and
push
push
nop
cmp
out
sub
sub
dec
stos
fisubl
stc
or
call
mov
xchg
push
adc
or
shll
sbb
xchg
add
orl
jp
sub
sbb
nop
outsl
sub
jl
jg
mov
adc
sub
daa
adc
jno
push
mov
jge
mov
fnstenv
sbb
and
je
insb
xchg
mov
in
sbb
scas
fidivs
pusha
pop
pop
rcrb
cmp
int3
cmc
dec
cmp
jl
fdivl
stc
and
xor
mov
cwtl
test
insl
out
nop
jno
lahf
lods
jecxz
sbb
stc
loop
gs
insl
in
inc
or
sub
into
push
mov
lea
push
rcr
add
popf
outsb
inc
sarl
arpl
fildll
inc
mov
das
cld
push
push
dec
cwtl
lcall
or
hlt
xchg
jbe
dec
inc
push
fwait
adc
mov
ljmp
or
mov
xchg
add
and
xchg
je
push
idivb
daa
xchg
hlt
xchg
dec
aad
test
call
icebp
aaa
int
cmp
cmp
jae
aam
rcll
cs
hlt
mov
pop
pop
push
mov
fwait
xor
cli
dec
mov
jns
jg
cwtl
sbb
push
sbb
imul
xor
sar
cli
rcll
addr16
stos
push
xor
pop
popa
jae
in
jae
mov
add
push
mov
inc
add
cmpsl
push
in
loope
xchg
sbb
cmp
aad
cmp
mov
outsl
lods
lret
fisttpll
dec
mov
mov
cmp
sub
xor
push
add
cmp
sub
mov
xchg
cltd
pusha
jns
adc
xchg
insb
sub
ja
adc
mov
jecxz
arpl
js
xor
das
icebp
jo
lods
jmp
pop
mov
ficoms
mov
sub
inc
cmpsb
imul
mov
or
flds
pop
sub
popa
iret
or
mov
and
arpl
cli
repnz
ret
aaa
mov
mov
pop
ljmp
stc
fsubl
repz
lret
testb
or
cs
sti
shrb
lret
xchg
cltd
xchg
aam
sbb
push
mov
sub
fs
shll
mov
xor
cmp
mov
popf
sub
orb
ret
dec
lock
cli
mov
ret
sbbb
xchg
test
in
pop
incl
push
mov
dec
ss
inc
sbb
cmc
cli
fldenv
imul
stc
pusha
dec
test
pop
enter
outsb
push
fcoms
pop
xchg
pop
mov
xor
cmp
jmp
cwtl
adc
jns
ja
mov
add
inc
in
outsb
gs
pop
test
cmp
popa
dec
test
mov
test
sub
clc
sub
ret
pop
test
add
rcll
push
fildl
mov
dec
fsts
inc
out
in
jae
stos
jbe
pslld
loope
loop
mov
add
aad
stc
jnp
lock
and
xor
shll
test
inc
pop
aaa
sub
mov
cltd
push
loopne
mov
into
push
cmp
and
in
mov
rorb
and
fstl
int
inc
popa
shl
inc
fldenv
mov
je
sbb
nop
pop
xchg
into
test
push
leave
push
mov
rolb
add
pop
lcall
loope
lods
in
jno
xchg
sbb
or
ds
lds
popf
adc
push
cmp
mov
mov
clc
mov
xor
not
or
outsb
push
mov
test
push
jns
jo
add
ds
clc
pusha
insb
frstor
mull
xchg
xchg
mov
mov
or
cmp
repnz
cld
into
add
sbb
cmp
mov
adc
stos
cli
mov
xchg
sbb
pop
jae
je
cs
inc
pop
popa
mov
adc
or
inc
inc
and
jno
and
out
imul
arpl
outsl
lahf
push
jecxz
fldl
inc
cmp
push
adc
mov
push
gs
xchg
cmp
push
xor
enter
add
fmuls
mov
push
mov
mov
cmp
outsl
iret
pop
cld
in
mov
fisubrs
or
iret
lods
mov
or
cs
lods
lods
push
sbb
aas
sbb
lds
shlb
lock
orb
or
movsl
test
js
es
rorb
adc
lret
mulb
pusha
mov
pop
out
or
unpcklps
mov
cli
xor
cmp
and
or
mov
adc
ja
aas
test
dec
out
xchg
sub
test
shll
test
mov
sbb
pop
xchg
stc
dec
movsl
pop
add
stos
lea
out
or
xor
jl
xor
not
and
sti
pop
in
mov
shrl
iret
sarl
out
push
dec
jbe
adcl
jo
lods
out
pop
out
in
add
cld
test
fists
scas
lret
sti
dec
ret
shl
cmpsb
fnsave
rolb
mov
add
fdivl
jae
xchg
cmp
mov
rcrl
mov
xchg
iret
setp
nop
xlat
push
inc
idivl
testl
fst
cmp
pusha
dec
mov
mov
movsb
pusha
mov
xor
int
loopne
aad
and
or
jle
test
lock
mov
or
aad
and
add
pop
subb
test
mov
dec
xor
je
xchg
add
out
add
mov
lock
je
test
mov
pop
insl
cltd
jmp
and
and
call
mov
pop
pop
test
pop
repz
sub
int
sti
in
pushf
lcall
mov
mov
mov
push
aas
call
stc
and
in
into
ret
jge
andb
jg
aas
shlb
adc
adc
dec
and
xor
push
fisubl
mov
mov
roll
popf
shl
or
add
int
add
test
adc
push
and
and
xchg
xchg
inc
add
or
mov
xchg
xchg
out
inc
sub
adc
lds
into
movsb
add
add
shll
ret
jl
mov
insl
and
loop
mov
push
mov
mov
test
fsubrl
inc
or
cmpsb
mov
and
mov
inc
push
mov
xor
scas
pop
jnp
fwait
push
lcall
out
sbb
vpandn
subl
inc
loopnew
lea
scas
scas
or
push
xor
sub
xchg
ja
shll
cmc
xor
int
jae
and
scas
cltd
jmp
jge
popa
push
movsl
pushf
dec
cmp
test
push
lock
mov
xor
cs
jl
xchg
inc
aas
mov
push
jmp
aaa
mov
mov
xchg
mov
mov
cmp
mov
lea
ret
popa
fisubrs
fucomp
orb
jmp
bound
cmp
dec
dec
dec
stc
xor
mov
outsl
mov
push
adc
roll
hlt
push
pop
cli
sbb
add
mov
ret
andl
push
sub
pushf
mov
mov
gs
dec
ss
mov
cli
jmp
inc
mov
cmp
xor
sub
aaa
mov
loope
arpl
xchg
push
loopne
inc
jbe
pop
cmpsb
fs
repz
je
and
mov
sub
lods
xchg
aaa
inc
in
mov
or
pop
out
fists
dec
arpl
mov
push
pushf
mov
mov
adcl
ret
adc
pop
inc
sub
mov
lods
pusha
xchg
test
jle
sahf
imul
imul
pushf
test
stc
call
mov
dec
mov
pop
aam
pop
cli
sub
xor
ljmp
jo
fnsave
xchg
out
push
movsl
pusha
test
aam
xchg
xchg
cmp
cmpsl
rorl
adc
negl
shll
daa
push
xchg
xorl
sti
sbb
inc
cmp
cmp
xor
or
lret
inc
insb
int
dec
sub
push
and
decl
fistps
push
adc
cmc
xchg
cs
enter
dec
mov
in
jae
sbb
pop
into
call
mov
sbb
lret
xchg
lahf
fnstsw
icebp
and
insb
cmpb
add
jae
jmp
dec
loop
sbb
xchg
xchg
mov
mov
arpl
mov
scas
xor
stos
mov
andl
adc
mov
push
add
pop
xor
popa
xchg
pushf
roll
leave
mov
or
rolb
sub
cmp
aad
mov
insl
push
outsl
mov
mov
xchg
nop
stc
sub
out
ljmp
adc
mov
cs
inc
flds
mov
fisubrl
dec
mov
dec
das
sbb
mov
add
icebp
dec
push
in
cld
jae
sbbl
pop
js
stc
popf
inc
arpl
or
mov
lcall
adc
cwtl
mov
push
in
dec
mov
jecxz
data16
cli
pushf
out
ja
xchg
and
pop
test
lods
pop
pop
imul
xor
sbb
cmpsl
cld
jg
push
mov
jae
push
int3
mov
insl
shrb
arpl
mov
push
sub
iret
sbb
inc
xchg
add
icebp
outsb
repnz
clc
push
loop
mov
pop
xchg
dec
mov
mov
mov
loop
push
daa
cltd
jmp
xor
dec
and
fdiv
stc
je
stos
es
adcl
pop
movsl
stc
xchg
adc
notb
lods
stos
pop
inc
das
pusha
push
fists
dec
xchg
adc
leave
fimuls
xor
cwtl
in
popa
divl
sub
adc
or
or
fidivrs
xchg
dec
jno
mov
ror
mov
insb
adc
aam
mov
iret
pop
cmp
pusha
sbb
jmp
ss
adc
or
int
sub
push
xchg
push
pop
out
sbb
outsl
fisttps
ja
mov
ret
daa
pop
call
add
mov
ret
lret
daa
pop
sbb
imul
fstpt
scas
adc
dec
dec
cmp
lock
pop
bound
add
roll
insl
data16
lret
mov
leave
fdivs
cmp
xchg
notb
bound
imul
ret
rcll
fimull
loop
xor
cmp
dec
popf
aam
ljmp
pop
in
add
push
sub
or
scas
mov
add
mov
fisubs
sarb
je
pop
arpl
mov
mov
or
clc
pop
imul
movsb
lock
cmp
mov
test
cmp
mov
cmp
mov
cmp
cmp
jp
loope
inc
mov
cmp
or
outsb
mov
lret
jbe
mov
push
pop
enter
fdivrs
inc
ror
or
mov
scas
shll
cld
cltd
mov
mov
mov
pop
dec
adc
ja
sar
mov
pop
push
mov
ss
xchg
xchg
aad
xor
sub
int
jg
mov
xchg
gs
incb
xor
popf
adc
mov
sbb
mov
mov
andl
fsts
in
lock
fsubrs
mov
xchg
mov
jbe
xor
pop
mov
pop
fimull
pop
popl
mov
mov
cmp
nop
push
mov
mov
push
addl
aaa
call
mov
into
xchg
lods
jns
loope
cmovo
leave
jne
lahf
addb
sbb
inc
test
das
xor
inc
clc
push
arpl
sti
push
mov
sti
cwtl
sub
pop
ficompl
or
jae
or
pop
and
movsl
adc
mov
cmp
push
or
cmp
add
out
rcr
lods
and
ds
lods
movsl
xlat
sbb
stos
rol
fbstp
je
mov
mov
imul
xor
xadd
pop
sbb
sbb
xor
push
fcoml
movb
sub
icebp
adc
cmpsb
mov
inc
in
xlat
dec
int
and
lret
daa
cmp
cwtl
adc
mov
dec
xchg
jae
jecxz
mov
push
pop
adc
mov
xor
in
xchg
sbb
mov
sub
test
mov
mov
data16
adc
pop
adc
pop
xchg
sub
mov
mov
gs
inc
mov
xchg
push
and
mov
loopne
lods
push
or
jl
ljmp
jo
lret
jge
adc
dec
notb
push
shrl
fisubs
jge
shrl
add
mov
leave
pushaw
outsl
cs
pop
in
or
pop
lock
sahf
xor
sti
stos
ficoms
pop
sub
out
aad
fsts
add
sbb
clc
jge
orb
in
clc
and
icebp
scas
nop
adc
in
mov
test
hlt
mov
out
shrl
mov
sbb
ljmp
lret
pop
xchg
pop
sbb
add
push
cmp
pop
pop
push
fsubr
aad
sarl
mov
and
daa
sub
pop
rorb
jle
sub
mov
notb
shl
cmp
push
adc
aad
aam
insl
int
cmpsb
in
sub
xor
lret
in
jno
jge
add
ljmp
rcll
cmpl
xchg
mov
jp,pn
pop
lock
arpl
push
pop
or
mov
mov
cmpsl
cwtl
cli
mov
cld
cltd
xchg
adc
xchg
ja
sub
out
cmpsb
fsubrp
shrl
push
xorl
mov
data16
inc
jg
cld
and
orb
xorl
xchg
nop
jle
pop
leave
insl
or
imul
mov
fisubl
push
in
into
jl
add
mov
mov
adc
int3
dec
adc
gs
adc
adc
mov
mov
mov
test
add
dec
cmp
addb
dec
pop
xor
ds
push
incl
pop
cld
adc
push
xchg
repz
mov
je
out
add
inc
inc
push
adc
xor
xchg
jmp
popf
pushf
lea
inc
push
out
cmp
frstor
dec
cmp
inc
sahf
fsub
add
sbb
clc
xchg
mov
fwait
xchg
ja
je,pn
sub
push
mov
and
femms
and
arpl
xchg
arpl
addr16
nop
dec
cmp
adc
mov
mov
xchg
pop
fistps
push
loopne
iret
mov
xchg
dec
add
movl
or
das
xchg
inc
xor
dec
clc
xchg
mov
popf
xchg
xchg
adc
leave
shll
xchg
jg
or
xchg
loope
mov
cltd
fisttpl
push
adc
sbb
and
cmp
add
out
lcall
outsb
shl
dec
pop
inc
insl
int
pushaw
mov
jp
sub
test
imul
push
lret
decl
fsts
lcall
xor
fdiv
jae
imul
sbbb
sub
or
push
dec
or
ljmp
mov
mov
and
sahf
aam
inc
and
add
sub
pop
jne
es
icebp
jp
add
pop
and
shll
cmp
push
faddl
ja
cmp
cmp
mov
xlat
dec
xchg
lret
lcall
and
pop
insl
inc
dec
pop
daa
out
inc
sbb
pop
lret
dec
repz
out
les
inc
aas
rcrl
jne
adc
and
inc
das
cltd
std
adcl
sar
mov
sub
lahf
pop
pop
neg
out
push
daa
mov
pushf
and
mov
vmovhlps
pop
cmp
jae
xchg
popa
mov
mov
scas
dec
sbb
jbe
ljmp
popa
adc
adc
mov
stos
xchg
fdivrl
in
mov
popf
lahf
inc
dec
inc
sbb
mov
pop
mov
scas
lcall
jb
jbe
enter
dec
sbb
jo
fldcw
dec
lcall
dec
cmp
mov
xchg
or
add
outsl
mov
push
pop
jl
popa
out
or
dec
mov
icebp
sub
mov
int3
adc
mov
xor
stos
cmp
dec
lahf
mov
xor
and
mov
cs
js
pusha
xor
jg
mov
in
pop
test
xor
mov
xor
fs
aam
xchg
adc
mov
divb
out
outsb
jno
dec
test
test
push
js
ds
ljmp
inc
pop
ja
xor
hlt
popa
add
lcall
sub
jno
pop
rcrl
xchg
loop
repnz
mov
mov
loope
scas
jmp
in
ss
pop
test
jbe
xor
rcrb
push
lret
sarb
cmpsl
and
fisubs
scas
ficompl
mov
add
lods
jo
adc
sub
js
xchg
push
hlt
outsb
adc
sbb
mov
add
loop
outsb
adcb
insb
pop
mov
jb
sub
fwait
movl
mov
add
cmpsl
mov
aam
xor
fdiv
xchg
sbb
insl
fidivl
in
mov
jo
int
lock
sub
pushw
loopne
test
sub
pushf
push
add
andl
addb
add
or
mov
mov
pushf
fstl
ficompl
int3
adc
mov
js
fdivr
or
mov
jb
into
mov
sbb
test
and
mov
xchg
xor
test
addl
data16
pushf
nop
sub
xchg
roll
and
push
ret
xchg
cmpsb
mov
sbb
mov
divl
clc
and
xchg
sbb
fcoms
out
mov
xchg
test
testl
nop
sbb
sub
in
popa
imul
cmp
cmp
mov
test
addb
movsb
pusha
loope
test
inc
sub
and
push
fsubrl
int3
shrb
mov
lock
sub
mov
jecxz
jecxz
inc
int3
icebp
lock
cwtl
cmp
testb
sti
jle
push
subb
or
outsl
sub
dec
loopne
jae
cmpsb
mov
mov
mov
adc
pusha
lcall
mov
jno
insb
cmc
movsb
adc
jo
pushf
sbb
call
add
pop
pop
add
iret
or
jp
mov
cmp
push
inc
les
push
orb
or
repz
mov
add
push
xchg
inc
cwtl
jne
aad
xchg
jbe
lods
jge
inc
je
add
cmc
push
mov
insb
movsb
add
cmpsl
push
stos
test
outsb
xor
sbb
imull
xor
cltd
aad
repz
sbb
inc
sarl
jge
push
popa
pop
cmp
les
gs
in
push
out
jecxz
nop
cld
cmp
xchg
xor
shll
mov
and
fiaddl
arpl
imul
out
mov
add
xor
cmp
adc
lret
mov
or
rcl
dec
or
stc
es
rol
mov
push
std
mov
adc
xor
loopne
and
inc
lock
movsb
adc
or
jno
into
repnz
lods
scas
lret
mov
notb
mov
dec
flds
xchg
cmp
mov
das
cs
rorl
inc
sub
adc
xchg
loop
pop
ja
add
mov
sbb
scas
sub
out
popf
xchg
push
xchg
sbb
scas
rcrb
shlb
les
jnp
pop
sub
fs
leave
gs
jle
cmc
add
lock
lods
push
jb
add
pop
loope
jg
sub
or
mov
fsubr
outsb
pop
addr16
mov
std
or
les
mov
mov
test
popw
jge,pn
adc
in
fsubp
clc
arpl
adc
sbb
scas
outsb
movl
jb
push
pop
stos
hlt
fs
fnclex
mov
jle
sbb
fwait
enter
xchg
mov
jl
jbe
cld
mov
xor
data16
std
xchg
fnsave
or
add
mov
loopne
pushf
pop
add
xchg
dec
sub
insl
sbb
ss
adc
mov
xchg
mov
xor
loopne
or
sbb
mov
or
in
js
in
int
imul
mov
sarl
and
jge
add
xor
sbb
dec
adc
adc
scas
dec
pop
mov
push
daa
mov
pop
mov
mov
insl
push
sub
test
dec
dec
mov
and
cld
xor
dec
test
sub
push
clc
dec
nop
push
push
mov
std
sub
cli
aas
jmp
jge
mov
jl
fadds
push
aad
outsl
jns
lock
fisttpl
sar
sbbl
mov
and
xchg
cmp
es
or
iret
arpl
and
cmp
cli
and
sub
inc
or
lahf
in
rolb
stos
adc
add
xchg
mov
mov
rcll
lea
lahf
push
inc
dec
bound
sbb
xor
mov
stc
out
outsb
aad
addr16
scas
nop
cld
mov
push
cli
and
mov
dec
in
add
jne
push
lcall
mov
enter
dec
push
xlat
xor
stc
and
and
push
xchg
fisubrs
cmp
push
jmp
rcrb
rcll
bound
xchg
in
cmp
sub
adc
stos
mov
pop
bound
push
dec
xchg
add
rcrb
push
mov
ds
xchg
and
pusha
fistpll
shll
ja
outsl
aas
js
xchg
xchg
cmp
sbb
push
pop
rol
lock
jmp
bsf
push
out
inc
test
jmp
sbb
mov
aaa
push
cmp
lods
shlb
jno
bnd
fbld
aam
xlat
dec
out
std
cmp
lods
add
add
inc
add
dec
test
in
pop
jne
lods
mov
dec
shl
aad
mov
sahf
cltd
leave
test
push
and
jmp
mov
jns
lods
mov
shlb
bound
dec
sbb
fucomi
test
mov
mov
aam
repz
imul
stos
sbb
xchg
mov
inc
push
lret
into
into
pop
add
out
mov
xor
or
das
mov
jmp
adc
test
mov
mov
call
iret
loope
add
mov
push
and
push
inc
or
or
pop
jmp
xor
cmpsb
xchg
inc
fldt
xchg
fidivrl
sbb
enter
xchg
push
inc
pushf
in
sub
in
lea
dec
dec
test
xchg
push
push
sbb
insb
fcoml
xlat
data16
inc
adc
out
jbe
pop
insb
ret
mov
movsb
inc
rorl
out
xor
popf
inc
mov
stos
cmp
push
test
mov
mov
out
data16
ret
or
out
sub
xchg
xchg
dec
fst
push
ret
in
data16
sub
inc
repz
sub
mov
aas
mov
jg
push
push
insl
mov
jmp
fsubrl
ja
das
cmc
xor
loop
sub
adc
jns
jp
add
pop
repz
sti
xor
dec
cli
loope
jne
and
std
pop
adc
lahf
or
dec
sub
dec
cli
adc
mov
inc
add
xchg
ds
push
pop
push
adc
dec
or
lods
cwtl
push
fnsave
mov
hlt
xchg
insl
in
mov
aaa
xor
lahf
sub
xor
fiadds
xchg
loop
and
push
negl
cwtl
pop
jns
ss
loope
js
adc
sub
stos
test
xor
retw
sbb
cmp
xor
daa
jnp
mov
std
icebp
push
push
xor
adc
cmp
arpl
insl
stc
mov
or
and
shl
push
adc
pop
addr16
sbb
nop
addr16
shlb
imul
or
jo
adc
lock
loopne
rorb
sub
add
fwait
xchg
xor
sub
mov
add
inc
mov
mov
popa
jno
xorl
xchg
jne
cmp
and
mov
das
cmp
outsb
mov
push
subb
stos
mov
adc
je
sti
repz
lods
inc
pop
push
fnsave
mov
out
dec
lock
stc
adc
lods
daa
movsb
dec
sub
div
jne
dec
test
add
repnz
aaa
inc
jae
test
cmp
jo
xchg
or
pop
sub
cmp
out
pop
xchg
pop
jns
sub
rcrl
jae
jecxz
js
dec
frstor
mov
int3
mov
sub
cbtw
ret
and
aam
int
ret
mov
push
into
and
test
ja
pop
or
xchg
leave
xchg
adc
arpl
xor
pop
lods
dec
testb
push
lahf
ds
rcll
or
push
mov
adc
mov
imul
in
cwtl
adc
pop
outsb
mov
icebp
jne
shrl
scas
pop
cmc
mov
fnstsw
push
hlt
pop
jmp
jp
add
jl
xchg
cwtl
or
lret
pushf
shr
add
pop
and
pusha
jmp
into
xchg
out
adc
clc
sub
sub
jnp
decl
push
and
mov
dec
mov
jne
sbb
adc
pusha
andb
mov
lock
mov
icebp
loope
push
jge
jp
inc
repnz
pop
out
scas
fmuls
sub
jl
aam
lock
ja
sbb
xchg
fstps
mov
mov
inc
jecxz
out
stos
xor
icebp
aas
test
pop
lods
scas
jnp
lret
bound
mov
dec
and
and
jg
push
shll
call
push
adc
imul
inc
popf
enter
bound
dec
add
push
repz
xor
xchg
and
xchg
sub
xchg
jns
xchg
cmp
mov
push
in
movsb
and
or
jns
add
sub
int3
fldenv
mov
sbb
inc
fstps
sbbb
sbb
and
mov
leave
inc
out
pop
xchg
jbe
jae
mov
and
sub
or
shlb
gs
and
int3
bound
push
fs
imul
push
sub
mov
sub
jbe
gs
push
push
ret
scas
std
setb
xchg
lock
shlb
and
test
mov
xchg
lods
rep
cmp
and
mov
cmp
ret
imul
fldl
lret
clc
mov
adc
pushf
fsubr
jb
frstor
mov
sub
out
in
push
add
jl
xor
jg
loope
inc
data16
cwtl
aad
pop
aad
pop
sarl
xor
pop
insl
addb
xor
mov
imul
daa
or
leave
fldt
mov
inc
addr16
fidivs
es
adc
jo
int3
xor
adc
sbb
push
adc
cmp
jo
loopne
xchg
xor
push
lret
stos
xor
shrb
push
ret
add
xlat
fcoml
xor
cs
mov
daa
mov
lret
mov
xor
xchg
jg
jecxz
sbb
xchg
mov
cmp
xor
mov
mov
push
cmp
or
sbb
shll
cli
xchg
push
ljmp
sbb
cmp
cld
jnp
dec
movsb
sar
mov
xchg
jg
lret
xchg
fists
aaa
cmc
mov
mov
fucomi
pop
lea
orb
cwtl
loopne
in
inc
bound
rorb
push
movb
or
push
popf
daa
fcoml
pop
repz
push
mov
mov
jne
data16
dec
popa
jbe
mov
and
das
test
sti
or
lods
xchg
lods
insl
scas
mov
mov
enter
es
dec
lods
pop
push
out
mov
adc
sahf
test
loope
and
jns
xchg
pop
mov
push
mov
or
mov
nop
or
mov
cltd
imul
push
sub
xor
scas
pop
cmp
icebp
sbb
push
test
popf
jmp
xchg
addr16
test
sbb
sub
pop
mov
dec
sub
mov
lcall
cltd
mov
mov
cld
sbb
gs
insb
clc
std
or
outsb
jo
xchg
push
jle
stos
ja
out
cwtl
push
xor
out
repnz
jmp
adc
mov
pop
add
jae
inc
jle
lret
insb
xchg
shlb
cmc
fistpll
test
or
cmp
xchg
jmp
xchg
arpl
sub
lret
icebp
or
mov
addr16
xorb
xchg
inc
push
inc
jb
xor
jnp
pusha
dec
ja
sti
sbb
dec
lahf
shll
or
das
pushf
adc
cli
rcrb
repnz
imul
mov
cmc
adcl
add
lods
push
aaa
cmpsb
pop
sahf
add
jbe
xchg
lret
push
cmp
xchg
or
and
repz
int
mov
mov
dec
mov
fdivrs
jns
in
dec
aas
push
test
jge
mov
fcom
addb
mov
xchg
inc
je
scas
inc
pop
shlb
inc
mov
pop
cld
adc
cmpsl
stos
mov
loopne
or
insl
dec
sbb
and
or
adc
or
dec
test
mov
fdivrs
mov
xchg
xlat
out
pop
adc
aaa
or
jg
ret
pushf
ret
les
or
push
mov
mov
mov
push
add
in
xchg
cmp
pop
mov
cmp
push
dec
mov
nop
test
mov
jg
jle
xchg
push
or
das
es
cmp
adc
inc
cmp
push
stos
dec
lret
shlb
xor
add
pusha
and
and
mulb
cmp
mov
cmp
sbb
fxch
dec
lret
push
pop
dec
sbb
push
and
fs
dec
test
jb
xchg
inc
divb
add
sbb
xchg
lods
push
outsl
dec
cs
sub
mov
xor
iret
std
xchg
pop
outsl
xchg
xchg
test
mov
and
mov
fstps
dec
add
aad
mov
es
push
or
sub
cwtl
xchg
iret
pop
jg
out
imul
fnstcw
pop
or
hlt
and
ret
mov
das
jbe
rcrl
cwtl
daa
lret
inc
sub
cmp
jl
jns
add
loopne
adc
ljmp
push
push
mov
loope
lock
add
or
cmp
mov
xchg
or
inc
call
jbe
js
dec
sub
xlat
repz
sbb
cmc
das
cs
fstl
fs
pop
scas
fdivrs
in
jmp
scas
xor
outsl
mov
insb
mov
sub
adc
pop
sbb
or
pop
sarb
jb
std
leave
push
mov
fidivrl
mov
xor
aam
mov
mov
push
sbb
call
mov
jo
lods
xor
jne
adc
insb
sbb
fwait
popf
mov
push
jl
arpl
cmp
in
fwait
imul
pop
add
push
pop
mov
mov
pop
jg
das
and
fimull
push
shrl
mov
pop
cwtl
sub
mov
into
adc
sub
das
std
int3
divb
cs
cwtl
stos
divl
mov
scas
pop
pop
iret
pop
fisttps
pop
test
adc
xchg
sub
out
outsl
shll
mov
jge
in
push
cmc
fistl
cmp
or
mov
enter
and
sub
jmp
pushf
sbb
cmp
sub
push
mov
push
inc
xchg
arpl
rcrb
xchg
and
scas
mov
in
loop
add
ret
in
push
int3
xchg
sub
mov
sbb
lahf
inc
loopne
scas
rcrb
movsb
sbb
xchg
stc
fcoms
cmp
fidivrs
scas
pushf
dec
adc
inc
ljmp
aam
loope
out
int
sbb
sbb
mov
cmp
cmc
cltd
test
lahf
push
adc
lahf
mov
push
enter
push
mov
pop
pop
push
gs
jne
xor
pop
mov
sub
sbb
addr16
adc
push
adc
or
adc
test
fistpll
xlat
add
cs
or
xchg
cmc
imul
mov
fdivrl
pusha
je
fsub
inc
repnz
sub
enter
xchg
mov
test
sbb
lret
int3
hlt
jp
test
pop
divl
mov
xchg
add
mov
jp
and
push
mov
out
cmp
xchg
and
aad
jle
out
sub
push
int
sbb
sub
sub
add
repnz
pop
scas
lret
jg
xor
mov
cwtl
outsb
cs
insl
dec
cmp
xchg
loop
add
in
insl
fst
cmp
lods
fisubrl
mov
sbb
fs
iret
xchg
mov
cmp
inc
repz
inc
das
mov
in
outsl
insl
jb
dec
nop
pop
xor
xchg
outsl
xor
cmp
mov
imul
add
fucom
or
dec
outsl
fcoms
pop
cmp
call
mov
in
in
sub
adcb
shr
movsl
dec
iret
scas
inc
jl
loop
pop
das
cmp
in
mov
mov
push
xchg
sub
mov
adc
in
mov
addr16
es
cld
sbbb
push
pop
out
fcmovu
int3
mov
mov
js
in
jnp
stos
daa
out
loope
or
xchg
sub
loope
orl
repz
xchg
loop
sub
sbb
cmp
cmp
add
repz
jb
pop
cmpsb
inc
adc
ljmp
ret
das
push
xlat
pop
imul
xchg
xchg
fs
or
cmp
mov
data16
aam
xor
aad
stos
mov
outsb
inc
sub
add
mov
pop
clc
dec
adc
rclb
xrelease
mov
cmp
mov
xor
push
cs
xor
jne
fcmovbe
dec
mov
push
dec
fimuls
adc
ds
movsb
sub
inc
adc
xchg
adcb
sub
push
push
lds
nop
pop
jno
popf
jae
dec
popa
bound
sub
and
test
sub
jle
in
xchg
cltd
insb
ficomps
popf
mov
xchg
in
adc
add
mull
jne
aad
fidivrl
test
adc
jbe
scas
in
in
mov
jmp
fadd
cmpsb
sbb
sbb
jecxz
sbb
or
imul
add
jmp
aas
in
adc
sbb
fs
add
cmp
push
stos
ja
and
dec
mov
out
mov
xchg
test
ret
jne
scas
shl
stc
dec
neg
std
sahf
loope
pop
pop
xor
fwait
xchg
dec
es
repnz
inc
pop
inc
test
fcomp
div
or
inc
cmp
ror
imull
pop
push
das
mov
xor
push
jecxz
int
leave
adc
sub
lods
jb
clc
popf
jmp
mov
std
dec
test
rolb
xchg
insl
mov
enter
scas
in
out
dec
pop
in
or
int
lods
lret
cmp
inc
xchg
mov
mov
pop
daa
out
lret
scas
jb
popa
addl
push
xchg
fwait
loop
pusha
imul
fcomip
aaa
pop
sbb
mov
mov
repnz
cli
mov
push
sub
scas
pushf
imul
loope
cmp
outsl
mov
pop
ds
adc
cmp
pop
push
mov
imul
sub
sbb
and
rcr
pusha
enter
nop
insl
out
inc
adc
cli
out
pop
mov
cmpsb
fisubrl
jg
xorl
je
dec
xor
out
xlat
pop
addb
leave
xchg
int3
insl
ds
int
xchg
into
mov
cmp
jp
popf
dec
pushf
out
sub
add
icebp
jge
add
mov
and
fs
leave
pusha
dec
mov
ljmp
je
iret
add
cmc
fdivrp
dec
xor
pop
pop
cltd
jp
mov
lcall
roll
jp
jno
fmull
hlt
sti
imul
imul
pop
mov
or
in
adc
fldl2e
pop
jbe
inc
cmp
and
sar
ljmp
repz
mov
loope,pn
popf
sub
pusha
sub
jmp
mov
and
rorb
rcrb
iret
push
push
iret
lahf
xchg
mov
dec
or
out
mov
loop
call
lahf
iret
fcmove
sbb
ret
nop
testl
pextrw
test
jbe
into
jae
mov
test
loope
shlb
push
aaa
rcl
cmp
sarb
push
shl
push
jp
jle
out
push
out
test
addr16
into
xchg
aam
jmp
mov
push
ja
insb
shr
mov
jno
gs
mov
push
xchg
or
push
push
jno
jl
pop
loope
icebp
stos
jl
fstps
fsubrl
mov
jmp
add
ds
mov
or
xor
fbstp
xlat
pushf
idiv
adc
cmp
dec
xor
repz
lods
adc
cli
stos
bound
mov
and
out
add
push
cmc
push
xchg
push
push
rolb
add
jns
js
sbbl
pop
fisttpll
cld
sbb
pop
dec
jp
mov
inc
push
mov
cltd
test
xor
popf
mov
sub
sub
repz
in
add
test
int3
lret
insl
pop
int
ss
mov
sti
dec
and
xchg
pusha
jne
in
mull
shrb
cmpsb
and
push
loope
cli
sbb
in
ja
mov
push
out
jo
out
ljmp
fisttps
push
sub
loopne
hlt
xor
mov
fnstsw
dec
or
inc
pop
mov
mov
inc
cwtl
stos
aas
dec
xchg
pop
lret
add
adc
out
mov
in
mov
jp
xor
addl
sbb
lahf
inc
mov
push
inc
shr
idivb
rorb
or
flds
pop
jp
push
jno
data16
xlat
push
sub
mov
cmp
mov
int3
push
mov
cmp
js
jno
in
ds
pop
cmc
adc
loopne
xor
loopne
push
xchg
bound
mov
fcoml
pop
or
call
shlb
jbe
xor
push
sbb
subl
repz
outsl
loop
scas
movsl
adc
jo
sub
xchg
insb
mov
add
push
xor
push
push
pop
mov
sbb
shlb
jmp
loop
push
sbb
test
fcoml
pusha
cld
cld
push
daa
aad
jmp
xchg
mov
repz
mov
rcr
cld
shlb
xor
scas
test
sbb
sub
and
push
icebp
dec
push
or
notb
movsl
imul
sti
xor
inc
mov
out
dec
out
inc
or
mov
dec
rcrb
xchg
sahf
jp
rclb
test
dec
aas
push
cltd
jecxz
or
and
test
std
sbb
gs
or
jecxz
iret
mov
iret
sub
mov
into
ljmp
pop
leave
out
push
cltd
ja
aas
int3
push
js
std
mov
mov
es
sbb
xchg
cmpsl
or
cmpsb
sub
cmp
adc
sahf
mov
ljmp
dec
arpl
xlat
bound
arpl
and
adc
add
pop
adc
or
loope
xor
sbb
fnstsw
aaa
test
scas
cmp
adc
or
sub
mov
int3
mov
in
jge
lods
add
sub
fiaddl
push
pop
xor
pushf
shl
sub
jecxz
cwtl
or
lock
and
mov
sub
sbb
mov
loop
cmp
test
pop
add
jae
adc
sti
stos
mov
push
inc
movsb
mov
mov
sbb
adc
push
sar
jge
xchg
xchg
aad
push
and
inc
pop
mov
lcall
leave
test
test
xor
push
pop
int
dec
dec
js
enter
and
sub
fs
out
push
mov
aad
add
pop
push
or
mov
xchg
jae
add
enter
fistl
cmp
jo
outsb
inc
jl
dec
and
test
enter
xor
aas
popf
daa
stos
push
dec
dec
movsl
cmpsb
nop
stos
jns
clc
call
xchg
sub
xchg
fisubs
shrb
push
push
xor
mov
add
andb
das
dec
xchg
leave
stc
sub
push
lahf
das
test
loope
je
imul
push
push
and
jmp
sbb
jnp
xor
jnp
dec
imul
xor
mov
cs
leave
adc
push
es
ja
mov
outsb
enter
ss
mov
jle
mov
in
leave
mov
and
int
mov
adc
insb
cmp
sar
dec
xchg
scas
mov
and
ljmp
inc
or
inc
mov
sub
add
faddl
in
popf
std
wrmsr
pop
imul
xlat
push
shrl
shl
inc
cs
mov
popa
push
push
pop
xchg
pop
ss
leave
fwait
out
out
push
cmp
pop
fstpt
adcl
fisubs
cmp
cmp
lds
in
or
mov
in
nop
int3
push
bound
push
pop
jle
jae
cmp
pop
movb
mov
mov
int
push
cmpb
or
xlat
out
pop
leave
mov
fwait
notl
sub
jbe
fsubrl
push
jge
add
movsb
cli
test
int
and
ret
lds
in
and
jbe
adc
adc
xor
ja
xchg
sbb
inc
inc
test
jecxz
inc
cmp
xor
lret
sbb
inc
jge
ret
out
or
popf
les
inc
bound
mov
or
mov
xor
and
sub
and
out
insb
push
mov
div
push
sar
in
sub
fistl
lret
aad
mov
mov
xor
aaa
ret
mov
mov
xchg
ds
movsb
fmul
in
sbb
in
loopne
rolb
adc
insl
or
mov
aad
pop
or
inc
or
jge
inc
fnstenv
pop
sub
xlat
dec
cmc
loopne
test
or
popa
mov
test
or
repnz
xchg
fxch
test
bnd
cmpsb
push
in
jg
mov
outsl
xor
incl
popa
xchg
imul
ret
jl
rcrb
push
ja
cmp
mov
fcmovnbe
xor
push
mov
cmp
stc
cltd
cmp
xchg
addr16
mov
int3
arpl
repnz
pop
dec
xchg
fdivs
jmp
and
fildll
les
es
std
jge
push
aam
dec
and
ret
daa
mov
add
dec
ret
xchg
movb
test
orb
out
lret
xchg
addb
add
mov
cmp
orb
sbbl
imul
xor
push
pop
mov
fcomp
mov
jns
in
outsl
push
and
dec
mov
mov
mov
sub
xor
jp
or
mov
xchg
imul
fwait
xchg
les
rolb
mov
sti
pop
movsb
cmp
imul
mov
jecxz
mov
jae,pt
jns
adc
mov
shll
daa
repnz
jbe
add
les
inc
je
testb
sub
mov
and
push
lods
je
sbb
and
jne
mov
push
mov
std
idivb
lea
xchg
and
cmp
mov
inc
mov
fwait
push
jecxz
divb
test
pop
cwtl
sbb
loopne
ficomps
das
ds
in
cwtl
sbbl
jmp
mov
ficomps
imul
mov
incl
stos
movsl
sub
cmpsl
testl
and
stos
loope
push
sbb
int3
rorl
jp
jbe
jle
andl
dec
push
in
jl
mov
jle
dec
sbb
stos
cmp
or
bound
inc
popa
jmp
inc
ss
mov
xor
inc
mov
cmp
adc
push
daa
outsl
inc
pop
jo
push
xchg
inc
pop
mov
xlat
or
popf
movb
in
cmp
stc
popf
cmpb
adc
mov
push
pop
test
clc
and
pop
sbb
cmpsb
add
xchg
and
mov
imul
or
cltd
add
adc
jecxz
push
cmp
xlat
xlat
add
push
push
sti
shlb
pop
inc
dec
lods
jno
loope
mov
daa
lahf
sbb
mov
or
pop
jmp
enter
and
push
jo
push
fimuls
or
xchg
shrb
xor
dec
daa
jno
rcrl
add
xchg
orb
sbbl
scas
imul
repz
lret
pop
or
js
pop
sti
xchg
cmp
cmp
scas
fildl
pop
mov
scas
pushf
inc
mov
jnp
pushl
sub
xchg
sub
push
cmp
fs
sbb
or
out
jne
pushf
jmp
mov
and
xchg
mov
mov
ja
jl
js
mov
aad
lahf
lods
cmp
sbb
inc
xor
sub
mov
mov
pop
jecxz
push
mov
xor
jno
mov
jns
scas
dec
xchg
jecxz
dec
enter
mov
andl
inc
outsb
jbe
btr
imul
pushf
jbe
les
sub
xchg
mov
fistpll
xchg
jae
std
cli
mov
mov
fsubs
xlat
mov
push
scas
mov
rcr
add
or
jp
xchg
fsubrl
out
stos
mov
inc
out
outsl
cmp
push
mov
scas
ret
orb
orb
in
fprem
inc
cmp
test
stos
push
mov
out
les
cld
and
les
dec
sarb
dec
scas
icebp
jno
shlb
ja
test
jl
xchg
fidivl
adc
das
fistl
adc
pop
sub
sahf
sub
cmpsb
mov
clc
neg
scas
ret
cli
int3
jge
jecxz
les
cmpsl
sub
lret
nop
das
ljmp
mov
mov
loopne
es
insb
stos
pop
mov
pop
test
sbb
into
xor
jle
and
adc
aad
or
bound
mov
sub
in
jo
jmp
mov
sti
jnp
pop
xor
pop
sub
cli
cmpsb
jns
jl
fnstenv
subb
orb
or
cli
lods
mov
sti
mov
pop
lahf
and
mov
js
fdivrs
mov
xlat
pop
mov
sahf
mov
pop
sbb
xchg
outsb
int
pusha
dec
les
loop
fimull
xchg
fcom
jb
cmp
leave
cmp
dec
jb
addr16
sarb
out
ja
inc
xchg
stc
popa
shrl
and
xchg
pushf
xor
loopne
add
out
loop
xor
adc
daa
sub
iret
dec
adc
mov
movsb
rcrb
fisttpll
ret
push
xor
lock
fildll
or
cwtl
and
push
shlb
aad
push
jb
into
add
outsl
mov
mov
sti
popf
push
pop
sub
and
fistpll
ret
or
push
out
jns
adc
stos
inc
sub
mov
imul
pop
lret
sbb
addb
xor
leave
sub
mov
rcll
outsb
adc
mov
or
ficoms
jmp
pop
sar
dec
jnp
inc
push
mov
push
dec
gs
or
xor
mov
pop
popf
mov
scas
icebp
imull
lds
sti
cltd
xchg
xchg
repnz
add
and
dec
fs
add
out
cltd
mov
subl
mov
lret
scas
lds
cmp
mov
add
out
pop
addr16
cltd
mov
sub
push
mov
push
dec
lret
push
out
daa
adc
mov
loop
jg
pop
push
in
inc
or
int
and
outsb
mov
adcb
icebp
call
enter
add
or
jb
cmpb
sbb
rcrl
popa
test
lcall
xchg
cld
or
and
lea
xor
test
sbb
push
jo
enter
sub
pop
orl
xchg
rorb
sub
enter
into
outsl
cwtl
jnp
iret
pop
pop
out
in
xor
pop
jle
mov
lret
jge
call
push
sub
leave
or
jge
rcll
adc
push
test
jns
mov
add
daa
mov
jecxz
iret
add
inc
mov
into
aad
dec
in
pop
and
xor
jge
xchg
mov
xchg
push
dec
fcom
pop
add
adc
mov
nop
fxch
inc
push
stos
inc
dec
or
ja
cmp
leave
lds
jae
addr16
mov
pop
les
push
pop
or
pop
int3
pop
cmp
fistl
cli
scas
mov
mov
clc
clc
mov
addr16
lods
cld
cmp
hlt
scas
xchg
rol
mov
inc
insl
daa
sbb
cmp
cmpsb
pop
pop
push
mov
cwtl
ss
int
push
shrb
inc
das
in
mov
in
xchg
lods
push
fwait
mov
dec
ss
cmp
add
je
pushf
ds
ljmp
inc
negb
and
add
pop
pop
jl
push
stos
cmp
cmc
ficompl
daa
mov
mov
cmpb
cmpsb
adc
in
pop
lods
sbb
jg
test
jmp
lret
divb
pop
and
loope
lock
cld
push
mov
mov
xlat
insb
push
pcmpeqd
hlt
jge
cli
data16
shrb
push
jmp
das
push
cmpsl
cmp
lods
pop
dec
inc
sub
inc
rclb
out
sbb
mul
lods
cwtl
sarb
aad
jae
clc
test
jnp
push
sub
stc
roll
out
xor
inc
xor
mov
in
push
scas
push
push
pop
add
inc
mov
xchg
ret
mov
jns
jl
inc
mov
loopne
mov
and
outsl
pop
push
mov
and
rclb
shlb
daa
aas
mov
sub
jb
cmpsb
cmp
xchg
and
bnd
xchg
sbb
inc
mov
mov
and
ljmp
inc
sbb
xchg
xchg
sbb
mov
addl
jg
sub
add
jmp
jno
imul
aad
xchg
xchg
cmp
mov
push
out
repz
mov
and
push
fmull
cmp
aad
cld
sbb
lods
shr
daa
adc
stc
fcompl
jecxz
xor
cltd
fdivl
enter
test
cltd
inc
sbb
mov
push
adc
inc
sbb
cltd
push
rolb
leave
dec
std
cltd
ja
fs
gs
xchg
iret
icebp
cwtl
adc
insl
pop
callw
aam
and
push
or
pop
mov
int
add
mov
jae
jge
shr
lret
enter
incb
std
adc
pop
scas
add
jnp
pop
xchg
cmp
xchg
clc
mov
cmpsb
push
sbb
push
cmp
ljmp
xchg
cmp
jb
sti
outsl
mov
inc
xchg
jmp
and
mov
dec
cmp
jge
stos
jmp
cmp
bound
paddsw
inc
repnz
pop
stos
jge
in
jp
or
repz
loope
js
cmp
daa
mov
or
test
stc
adc
jae
aam
shld
mov
cltd
jnp
scas
jge
xor
je
xchg
ss
cmpsl
mov
cmp
and
jae
rcr
xor
adc
and
jne
cltd
in
adc
xchg
lods
cmc
sbb
pop
gs
clc
xchg
cmp
sub
push
push
xor
cmpsl
xor
divl
outsl
adc
dec
cmp
clc
stos
outsb
fwait
movsl
in
mov
addr16
aaa
jb
ja
test
mov
cwtl
jae
subl
pusha
test
je
jl
outsb
sbb
stos
and
push
jle
pop
les
out
aad
aad
push
mov
mov
jmp
test
lcall
dec
call
subb
arpl
lret
repnz
loop
sub
ljmp
rcll
popa
mov
mov
outsl
dec
ret
push
cli
xchg
in
iret
pop
scas
sub
iret
lret
xchg
add
jno
jge
sub
aaa
movsl
insb
and
bound
push
sbb
sbb
mov
imul
mov
push
jl
dec
stc
jle
inc
lret
sbb
sbb
cmpsb
loopne
das
rclb
fisttps
pop
jecxz
enter
cmp
daa
jg
popa
mov
in
xor
sub
or
out
stc
into
dec
adc
xlat
xor
orb
inc
aaa
dec
jmp
loop
push
leave
cmp
sub
int3
roll
faddl
ljmp
pop
bswap
adc
rcl
xlat
ja
adc
shll
fwait
or
pop
lock
and
je
ror
out
xchg
sbb
adc
into
inc
inc
or
daa
cmpsb
adc
in
cmp
das
dec
xchg
loop
mov
xchg
xor
ljmp
cmp
test
aad
in
push
movsl
stos
out
out
sbb
push
cmc
mov
xchg
dec
lret
and
call
jne
outsb
jg
inc
or
adc
mov
sub
into
inc
add
add
sahf
fcoml
or
cld
ja
jmp
mov
mov
or
add
loope
inc
sbb
imul
cltd
inc
add
xchg
sub
push
pop
dec
cmp
ficoms
or
mov
jmp
ffree
xchg
test
addl
mov
inc
jge
mov
inc
jo
lods
lods
lock
imul
lock
cwtl
sbb
iret
and
fsubl
enter
xchg
inc
test
sub
xchg
pop
mov
cltd
aaa
fisttpll
mov
fnstenv
out
cmp
sbb
sbb
out
dec
imul
push
add
pop
icebp
in
imul
outsl
inc
add
rorl
mov
add
rorl
rcl
cld
and
das
icebp
mov
or
push
adc
pusha
test
rcrl
sti
pop
movsl
cli
test
sbb
mull
test
nopl
sub
inc
pop
mov
sti
in
mov
mov
sbb
pop
std
data16
sarb
fimuls
xchg
xor
and
outsb
xor
mov
mov
ja
aam
mov
nop
jg
adc
das
shlb
jno
repnz
xchg
cmp
push
out
lds
or
rclb
enter
out
and
dec
in
fisttps
jbe
cmp
gs
mov
int
mov
or
mov
adc
stos
and
pop
jl
push
fwait
orl
inc
push
push
inc
into
cmc
cmpsl
lret
test
xchg
pop
scas
cmp
inc
hlt
fwait
mov
scas
xchg
sub
sbb
hlt
rclb
mov
shl
dec
sub
rolb
lea
outsl
mov
jge
or
add
cmp
rol
iret
mul
cmp
xor
mov
in
pop
jb
loope
lea
pop
addr16
cwtl
mov
cmpsb
push
arpl
test
inc
out
cmp
inc
mov
test
repz
int
push
sbb
jo
imul
xor
xor
rorl
jmp
inc
fdivrl
stos
pop
inc
outsl
imul
xor
push
dec
lret
and
loope
adcb
xchg
decl
aas
rolb
mov
and
mov
pop
ret
push
inc
cmc
mov
xchg
movsb
xchg
cmpsl
push
js
das
xor
loop
jb
repz
mov
je
int3
mov
enter
outsb
cmc
movsl
scas
call
stos
mov
aad
ljmp
call
fdivr
cmp
mov
lcall
loope
fildl
mov
jp
inc
mov
lahf
dec
ja
mov
xor
jg
ret
in
add
sbb
jno
repnz
push
push
cmp
loopne
add
int3
nop
test
rclb
jle
mov
xorb
int
hlt
or
sahf
movsl
rcrb
sub
pusha
mov
sbb
mov
rorb
add
pop
call
mov
or
pop
and
jnp
xor
push
pop
cmpsl
adc
dec
xchg
psubsb
scas
xchg
xchg
push
mov
into
mov
pop
xor
mov
xchg
xor
inc
xor
or
pop
pop
loope
ficompl
mov
pop
and
adc
mov
inc
aad
push
scas
scas
addr16
add
sbb
shll
nop
es
xor
icebp
push
jbe
or
lcall
mov
shl
add
adc
dec
pusha
cmc
sti
xchg
cmp
or
xor
andb
adc
fsubrl
xchg
cmp
mov
outsl
push
popw
dec
jnp
push
iret
hlt
nop
es
and
iret
push
in
out
and
scas
xor
jge
arpl
push
pop
incb
mov
loopne
mov
daa
xlat
call
fbld
and
sti
stos
jnp
mov
lret
rorb
movsl
xor
imul
cmpl
mov
xor
outsl
or
popf
dec
movb
mov
in
xchg
inc
mov
mov
repz
xlat
iret
cmp
mov
pop
jnp
jae
sbb
jg
popf
dec
ret
neg
sbb
jnp
lret
aas
inc
push
dec
jno
insb
in
sub
leave
not
mov
push
fstpt
out
stc
stc
sti
jno
idivb
sbb
ljmp
aaa
lods
rclb
movsl
js
push
cmc
xor
sbb
or
jno
pop
cwtl
cmpsl
mov
aaa
stos
xchg
movsl
nop
and
jno
mov
jmp
mov
push
mov
shrl
ss
sub
pop
jmp
xchg
mov
xchg
add
xchg
jo
push
xor
sub
std
addr16
int
dec
in
xchg
cmpsl
neg
xchg
hlt
nop
sub
mov
sbbb
out
shll
jecxz
pop
int3
jmp
cld
jp
inc
push
ds
pop
and
dec
stos
pop
loopne
mov
mov
subl
dec
inc
movsb
jne
stos
sub
and
notl
int
movsb
pop
adc
test
inc
lea
mov
or
addr16
push
mov
and
sbbb
push
fcomip
cmpsb
nop
clc
rcr
jge
pop
daa
jnp
push
push
dec
xor
cltd
cld
xchg
lods
jb
pop
mov
out
xor
in
sti
loopne
or
out
mov
fisubl
pop
ficoms
jmp
sbb
push
xchg
push
aaa
stos
lcall
add
or
ljmp
leave
pop
clc
cmp
orb
cmp
jo
adc
dec
enter
push
jmp
stc
test
pop
popa
or
iret
enter
rol
mov
jnp
inc
dec
push
iret
in
pop
das
pop
push
cmpsl
cld
jl
push
cld
jbe
add
je
movsl
push
xchg
ror
sbb
xor
jns
push
pop
inc
fcompl
mov
jecxz
rcll
pop
out
lock
arpl
add
sbb
or
loopne
dec
mov
inc
adc
or
jns
push
insb
adc
cs
decl
inc
or
jns
fwait
ret
inc
inc
jle
call
cmp
mov
mov
cmp
and
adc
pop
xor
mov
cmp
out
or
sbb
fnsave
push
call
and
arpl
and
int3
dec
or
jge
aad
add
js
or
and
repz
push
ret
ljmp
rorb
mov
rolb
jl
xchg
inc
pop
lahf
mov
mov
repz
mov
mov
hlt
sbb
hlt
mov
dec
and
fisubrl
in
sahf
ja,pt
les
jo
addr16
dec
xor
out
push
test
add
ja
pusha
push
jmp
xchg
and
mov
test
sbb
pop
notb
push
xlat
scas
stos
pop
xchg
xchg
dec
cs
push
call
mov
sbb
inc
dec
jbe
mov
add
xchg
push
loop
push
in
sub
cmp
ja
bound
inc
sub
pop
xchg
cmp
cmc
adc
enter
shrb
jge
es
inc
and
mov
cmpsl
xchg
inc
xchg
jl
sbb
mov
xchg
inc
rcrl
push
aaa
mov
sub
jne
loop
jno
fldl
dec
pushf
scas
std
add
ja
fstl
push
mov
in
fsubl
inc
xor
xchg
jmp
stc
es
lods
cmpsl
sub
jbe
xor
lods
push
cli
fsts
sbb
gs
dec
push
test
add
ljmp
cwtl
fdivs
in
sub
imul
mov
shrb
data16
dec
fildl
mov
xchg
push
jns
fucomp
pop
push
push
mov
call
shlb
ja
inc
add
lahf
rolb
fistps
movsl
scas
add
mov
xchg
sbb
and
cmp
or
dec
enter
mov
sbb
jle
pop
scas
mov
lret
pop
push
mov
jecxz
pop
xor
in
shrb
sbb
push
or
mov
add
pop
lret
fildll
pop
mov
mov
bound
es
push
test
andl
adc
movsl
fs
repnz
inc
add
cmp
addl
push
outsb
popa
fists
xor
pusha
es
out
pop
scas
jne
mov
mov
and
jnp
xchg
mov
mov
and
pushl
cs
adc
jg
jmp
xorb
inc
cltd
sub
push
test
pushl
sub
push
jmp
arpl
test
xchg
xor
cmp
cmp
adc
xchg
mov
lock
push
fsubr
sar
popf
mov
les
sbb
cmp
jbe
sbb
push
je
xchg
pop
hlt
pushl
sbb
xchg
pop
cwtl
shll
dec
test
addr16
fs
dec
adc
in
mov
adcl
inc
mov
sar
sbb
or
nop
lea
push
scas
ljmp
push
and
sub
inc
xchg
std
mov
popa
flds
or
frstor
xchg
es
ljmp
data16
loope
dec
xor
xor
push
lea
cld
stos
cmp
rorl
pop
shl
xor
xor
mov
inc
insb
scas
fs
lods
lcall
lods
ja
jg
mov
test
adc
pop
sub
sarb
wrmsr
in
in
arpl
stos
aas
insb
mov
jg
lock
pop
push
inc
outsb
out
imul
push
leave
js
out
jno
add
dec
cmp
jecxz
je
jo
ljmp
in
push
mov
mov
scas
or
inc
mov
out
or
mov
mov
jmp
hlt
int
aas
test
sbb
pop
std
xchg
cli
add
dec
pop
xchg
xor
push
pop
subl
ja
xchg
scas
xlat
dec
lods
or
call
sub
push
and
stc
xchg
out
jbe
sahf
xchg
mov
mov
pop
daa
mov
popa
nop
xor
add
lret
dec
dec
mov
lea
notb
fs
in
inc
enter
aas
cmc
mov
mov
lods
sahf
leave
int3
adc
icebp
mov
pop
test
aas
dec
popf
rcll
cmp
cmp
insl
mov
in
cwtl
ret
in
push
mov
cs
in
xor
mov
mov
subl
lds
jae
cmp
in
clc
ret
pusha
xor
sahf
push
push
mov
push
aad
dec
dec
out
shlb
sahf
fs
dec
jae
sub
pop
dec
dec
bound
sbb
ja
cmpb
inc
and
mov
pop
inc
divl
sbb
mov
int3
inc
in
jg
push
push
add
dec
inc
fisttps
scas
rolb
scas
addb
scas
xlat
pusha
scas
bound
rorl
add
and
leave
pop
inc
ficomps
leave
iret
xor
test
fsubr
div
push
lahf
cli
jns
cmpsl
test
cld
loop
adc
ds
pop
mov
sub
stos
mov
bnd
lea
jp
push
jmp
negb
xchg
and
mov
addl
dec
and
lret
fwait
mov
pop
inc
adcb
sti
popf
inc
inc
sub
cli
mov
ret
int3
push
mov
popa
ret
mov
je
rclb
scas
lret
lcall
ljmp
xchg
xchg
fbstp
test
popf
mov
popf
cmp
pop
and
insb
dec
sub
push
xchg
pop
test
or
xchg
stos
divb
sbb
insb
inc
leave
dec
mov
cmp
subl
jl
andl
fisubrs
sti
imul
cltd
dec
or
fiadds
xchg
jns
sbb
xchg
jl
push
out
fnsave
push
aaa
xchg
or
fcoms
xchg
inc
mov
cmp
cmp
xor
rorb
jb
jnp
mov
stos
add
cmp
mov
sub
push
push
repz
scas
cmp
jno
stc
call
or
aas
cmpsl
in
jb
fs
add
mov
inc
push
les
aad
inc
and
test
inc
cmpsl
xor
mov
das
jecxz
cli
pushf
cmc
lods
dec
les
push
add
rcr
mov
jg
xor
icebp
or
pop
sub
jmp
nop
adc
nop
mov
add
aam
xchg
cmp
sahf
pop
adc
push
mov
scas
sbb
cmp
sub
cltd
mov
sub
sub
cmpsb
lahf
rcr
dec
orl
or
mov
jo
fstl
add
mov
sub
imul
ss
out
icebp
outsl
pop
push
sbb
aas
adc
xor
or
adcb
xchg
mov
mov
pop
push
or
movups
arpl
or
cwtl
dec
sahf
push
push
jae
mov
js
dec
pop
push
xchg
std
mov
push
sub
xchg
jb
xchg
not
out
ds
push
fwait
ds
jmp
idivl
sub
sbb
jnp
pushf
fs
xchg
inc
mov
push
inc
mull
sahf
xchg
or
add
cmp
leave
movsb
xor
fisttpl
mov
fmuls
push
xchg
jnp
test
aam
fwait
sub
xor
xor
neg
mov
sbbb
xchg
pop
sbb
mov
daa
jmp
cmpsl
in
fildl
or
pop
test
fistl
sbb
xor
jbe
dec
xchg
cmpb
and
pop
sub
pushf
lret
xlat
mov
push
mov
dec
xor
add
push
sbb
flds
jecxz
insl
cmpsl
mov
sub
mov
jle
out
xchg
jae
pop
pop
fdivs
lods
dec
xchg
or
jg
dec
pop
push
insl
outsb
ds
addr16
mov
mov
pop
out
add
fs
loope
push
lret
ds
jp
push
lahf
mov
data16
push
sub
cmc
imul
cli
jae
call
xorl
inc
jle
imul
push
push
inc
and
dec
imul
cmp
mov
sti
loop
cmp
repnz
cmp
mov
pop
cmp
adc
icebp
xchg
and
sti
cltd
mov
arpl
pop
inc
sar
mov
scas
fwait
popa
xor
push
imul
jno
xor
fimuls
cmp
mov
inc
mov
xor
clc
scas
and
call
push
imul
cmp
cmc
decl
subl
adc
cs
in
mov
sbb
cmp
xor
in
das
sub
ret
lods
mov
cmp
pop
jno
filds
rcrb
enter
add
push
xchg
cltd
sub
imull
push
jae
fs
clc
jle
jne
mov
les
dec
mov
push
xor
xor
sarb
cmp
stos
cltd
jp
inc
imul
fstps
test
sub
xorb
jo
cltd
push
adc
out
cvtps2pi
test
xchg
lret
fidivrl
mov
cmp
mov
hlt
movsl
mov
push
ret
das
or
aaa
loopne
dec
xor
jno
cmp
into
movsl
sbb
loopne
pop
dec
js
jns
push
flds
xchg
pop
test
jns
out
dec
stos
xor
or
subl
add
push
jle
dec
nop
pop
cwtl
sub
inc
cli
hlt
jmp
imul
mov
aas
cmp
iret
inc
xchg
sti
adc
push
jl
aas
lds
lret
jne
mov
xchg
mov
add
push
addr16
sub
cmp
pop
mov
inc
dec
imul
fwait
xchg
pop
arpl
mov
in
xchg
movsl
ret
stc
dec
xchg
repz
mov
inc
repz
daa
je
test
adc
repz
push
rol
jns
clc
push
outsl
sbb
bound
cmp
mov
inc
out
inc
mov
xlat
mov
inc
push
test
sub
scas
test
mov
or
mov
mov
push
push
add
cwtl
hlt
stos
mov
xlat
lea
mov
mov
adc
push
jnp
repz
xchg
dec
daa
iret
ret
int
shrb
xchg
faddl
cwtl
inc
rorl
jmp
mov
cmp
xchg
stos
ror
mov
sub
int3
test
push
push
es
or
jnp
ficompl
dec
cli
push
cld
sbb
and
insb
inc
mov
rcll
sbbl
add
movsl
jae
jp
push
xchg
mov
lret
pop
or
mov
icebp
mov
aas
jp
or
pusha
aad
jo
mov
enter
inc
mov
cmpsl
ficoml
into
ret
pop
fwait
jecxz
sahf
sbb
pop
pop
cmp
push
inc
push
je
push
daa
mov
push
pop
and
add
iret
fwait
xor
inc
inc
adc
lret
ret
notb
in
fstps
push
leave
sbb
mov
ja
push
sub
outsl
in
out
dec
adc
imul
sub
xchg
sub
or
push
ja
jno
mov
int3
adc
push
dec
sbb
mov
dec
xor
mov
call
dec
sbb
shll
invd
dec
bound
loop
push
cmpb
pop
dec
push
add
pop
jno
test
mov
clc
pop
mov
out
pop
or
test
inc
mov
outsb
pop
mov
scas
adc
loop
loope
jno
pop
pushf
add
jb
icebp
jnp
adc
mov
in
sub
jo
movsl
cmp
imul
or
data16
push
stc
dec
mov
or
neg
mov
mov
xchg
cmpsl
and
mov
xlat
jbe
jmp
and
inc
mov
xchg
push
movsl
jmp
lea
jge
call
adc
xor
or
jnp
fstp
aas
sahf
jmp
ss
push
clc
push
cs
push
sub
mov
fdivrs
fcom
add
dec
or
mov
push
inc
mov
cmp
cli
jns
sub
sahf
jns
xchg
rol
ja
lcall
adc
inc
fisubrs
ljmp
hlt
xor
cmp
test
cs
in
into
scas
pop
dec
jbe
mov
push
jns
jg
test
cmp
add
loop
sbb
pop
mov
rcr
loopne
das
sti
sbb
push
in
fistps
pop
mov
fisttps
adc
adc
jmp
loopne
add
out
jle
mov
xor
fidivl
add
pop
sub
out
cli
mov
int3
dec
lods
dec
xchg
scas
imul
outsl
xchg
adc
push
add
call
sub
push
cltd
orb
push
adc
lcall
and
in
add
jl
cld
fstps
iret
mov
outsb
les
pop
pushf
ja
mov
xlat
cs
jp
xchg
sbb
aas
bound
aam
in
insl
stos
out
int3
loopne
xchg
lcall
xor
xlat
popl
stc
xor
enter
andl
test
jnp
cmc
push
je
mulb
out
ds
xchg
sahf
cmp
jl
push
shl
or
frstor
mov
ficoml
pop
nop
xor
scas
xor
and
inc
mov
dec
mov
add
out
xor
dec
adc
sub
sti
into
int3
xchg
add
dec
sbb
cmpsl
ja
cltd
imul
pop
fadds
mov
jbe
push
jp
push
xor
xor
mov
sbb
fisttps
out
pop
enter
cld
mov
xchg
push
sub
js
jecxz
dec
pop
push
fisttpl
rcrb
in
pop
adc
push
fimuls
xorl
movsb
jo
in
jae
cltd
cmp
lods
divb
clc
mov
in
dec
shll
sbb
and
xchg
add
bound
fmul
adcl
out
loop
jo
xor
loope
sti
ljmp
push
sub
cmc
leave
fcmovnu
and
mov
mov
or
adc
or
inc
scas
jb
es
mov
xchg
pop
cmp
in
pop
loop
mov
and
test
pop
add
push
add
jg
shlb
adc
leave
loop
adc
or
xor
push
mov
mov
inc
push
mov
inc
decb
mov
pop
sub
jae
push
sub
pop
mov
ror
inc
jge
mov
cmc
fstpl
cmp
and
outsl
imul
xor
jns
rorl
lods
mov
cmpsl
pop
out
pop
icebp
and
xchg
jae
fdivl
rcrb
jns
or
push
adc
push
lcall
je
jl
data16
fbstp
pop
xor
push
cmpsb
fsubs
adc
or
cltd
enter
shll
push
or
dec
jl
dec
adc
mov
stc
adc
stc
mov
sub
or
jecxz
ljmp
fidivl
pusha
and
fildl
sub
fwait
jo
outsl
pusha
fdiv
mov
imul
xorl
js
push
mov
pop
jp
ret
xor
sti
sahf
ja
test
push
iret
ds
aam
movsb
pop
pop
in
repz
sahf
insb
xchg
mov
aad
and
imul
dec
jg
and
and
jle
clc
sub
loope
stc
mov
clc
fimull
ljmp
and
aad
xchg
and
mov
in
jbe
xor
pop
adc
fldcw
fdivr
sbb
jle
pushf
push
inc
pop
test
pushf
cmpsl
sti
jmp
loop
popf
scas
call
jbe
mov
mov
rcll
jmp
xor
pop
outsb
mov
or
inc
jmp
push
inc
popf
scas
add
out
mov
ret
test
pop
cmovae
add
or
sti
in
out
adc
cmp
das
pop
into
dec
mov
jb
into
pop
outsb
add
mov
int3
and
mov
sbb
mov
xor
adc
jnp
lret
out
mov
leave
addr16
sbb
sub
testb
das
ja
icebp
mov
push
jnp
adc
add
inc
cmp
daa
xchg
dec
jp
and
les
cmp
clc
mov
aas
pop
in
mov
cmpsl
dec
in
les
fbstp
aaa
aaa
js
dec
mov
shrb
lods
or
sub
mov
cmp
out
push
xor
push
xor
clc
out
pop
ds
rorl
mov
mov
inc
in
sbb
scas
mov
push
mov
insl
pop
sbb
fisubs
lret
mov
jne
dec
add
push
sahf
jecxz
das
add
inc
daa
mov
cmova
rclb
hlt
xor
ljmp
fucomi
icebp
scas
and
inc
jns
test
sub
fsts
jae
xor
imul
shll
pop
fbld
out
movsl
ficompl
push
add
je
lret
in
cmpsl
add
add
jg
add
orb
sbb
sbb
sahf
mov
fadds
xor
jae
push
xchg
vlddqu
sbb
mov
into
jnp
add
leave
subl
mov
inc
inc
out
shlb
mov
fiaddl
mov
jnp
lahf
lds
xor
xchg
inc
sub
adc
outsb
cmp
in
push
xor
loopne
inc
sahf
in
pop
sbb
mov
repz
ret
call
or
jb
mov
jle
pop
sub
cmpsb
fwait
imul
incb
push
xchg
lds
out
add
aaa
adc
cld
fwait
cmp
mov
cltd
xor
int
cs
mov
dec
dec
andl
shll
test
xor
int
lods
arpl
inc
push
add
dec
clc
cmpb
push
nop
push
dec
stc
push
mov
les
test
add
pop
sub
xor
sub
and
rorb
stos
mov
in
mov
push
hlt
push
dec
imul
xchg
shlb
push
mov
mov
mov
out
pushf
or
in
insb
pop
jge
add
adc
push
pop
loopne
sub
inc
adc
dec
movsb
fdivrp
mov
sahf
movsb
shrb
ss
cmp
jae
sbbl
inc
mov
sub
sbbb
mov
test
pop
loop
mov
cmpsl
ret
daa
cltd
scas
adc
repnz
mov
push
and
mov
mov
xor
pop
mov
lock
loopne
pop
fwait
lcall
cmp
stos
pushf
jl
outsb
pop
sub
mov
popf
xor
testl
push
jle
lret
aas
pop
popf
jno
xor
dec
out
dec
or
jmp
push
sbb
gs
cmpsl
push
xor
lahf
mov
out
ss
jp
lock
bound
imul
pop
sti
adc
mov
jle
std
jmp
loop
jl
add
loop
sahf
insl
mov
shl
sub
xor
test
dec
enter
xchg
mov
insb
add
lret
in
popf
or
sub
jge
pushf
mov
insl
mov
pop
xorb
push
push
out
mov
jno
add
imul
inc
sbb
invd
push
pop
dec
and
jp
lock
jle
mov
add
fsub
neg
pop
sbb
jno
in
gs
mul
aas
or
jns
mov
in
xchg
ss
cmp
rorl
push
mov
add
testb
sbb
pop
sti
fs
arpl
fisttpll
repnz
lock
fmulp
pop
mov
in
sbb
flds
outsl
nop
fisubrl
stos
das
lds
lock
jge
pop
xchg
insb
jnp
or
add
fistpl
mov
mov
pushf
aad
mov
xor
lret
popa
clc
rcl
ret
data16
add
xor
sub
inc
loopne
cmp
inc
jp
jne
fisttpll
xor
add
mov
shrb
out
popa
fs
mov
popf
push
cmp
in
or
out
cltd
pop
stc
cmp
push
mov
jecxz
jle
adc
xchg
pop
pop
jg
sub
repz
sub
adc
sub
nop
inc
sbb
dec
or
insb
mov
out
mov
popf
loop
cwtl
mov
or
adc
cmpsl
sub
xor
dec
mov
es
push
add
cmc
sbb
lret
mov
push
lret
inc
jmp
pop
dec
imulb
mov
rolb
rol
xchg
shll
push
test
cmp
mov
jl
and
movsb
inc
mov
popf
mov
adc
sub
sub
mov
jle
pop
sbb
arpl
mov
fldcw
xchg
fwait
mov
cltd
pop
ficompl
sbb
mov
mov
mov
xchg
out
jne
add
mov
sub
out
mov
mov
fmul
xor
cmp
inc
add
fisubrs
and
push
sub
cmp
xor
xlat
cwtl
or
call
xchg
dec
or
test
mov
imul
mov
cmp
mov
fstps
cmp
cs
call
lahf
sub
sbb
xor
or
imul
outsl
cs
xchg
mov
loopne
mov
pop
lock
inc
repz
cld
mov
out
and
in
pusha
dec
loope
jl
push
frstor
or
mov
inc
dec
cmp
push
or
add
dec
jg
movsl
lods
out
mov
jbe
rolb
lahf
fistpll
testb
or
xlat
aad
cmp
sbb
or
add
insl
xor
and
mov
in
imul
enter
and
xor
push
jle
inc
in
iret
and
mov
pop
mov
icebp
pusha
cwtl
jns
jecxz
bound
mov
sub
and
xor
fiadds
mov
sbb
bound
mov
mov
subl
fsubp
add
xchg
jge
adc
out
ret
fidivrl
outsb
int3
mov
pop
decl
xchg
popf
pushf
mov
jmp
ss
sbb
mov
xchg
adc
insl
popf
dec
ret
mov
outsb
daa
fs
in
pop
popf
pop
std
jae
es
jnp
mov
adc
popa
and
mov
or
pop
fimuls
mov
into
sbb
sbb
fstps
jno
mov
cmp
adc
popa
inc
xchg
inc
push
mov
add
mov
lods
out
test
sarb
add
testb
inc
in
xor
lret
mov
jno
pop
sbb
push
pop
aam
mov
fstl
adc
cmp
fmull
add
push
das
sbb
sbb
test
paddq
push
int
and
xor
and
sbb
aam
icebp
lret
in
ret
add
std
or
fsubs
add
popf
xchg
pop
sub
jmp
push
mov
pop
sub
aad
repnz
pop
inc
ss
or
scas
iret
sub
ss
loop
push
add
jae
push
lods
aad
cmpsb
outsl
test
mov
dec
and
idiv
aam
lahf
and
jmp
je
fwait
lahf
cmpsl
mov
xchg
enter
jecxz
test
ljmp
xchg
dec
fildll
dec
rolb
mov
jg
fldt
jmp
ja
and
and
rorl
ret
jmp
loop
test
ja
mov
outsb
ljmp
adc
sub
pop
nop
imull
arpl
adc
out
pusha
sbb
adc
insl
insb
push
sub
mov
jae
cmpsb
cmp
xchg
or
adc
pop
jmp
xchg
mov
mov
pop
mov
nop
in
or
outsb
jmp
lods
xor
mov
dec
call
js
push
jae
xlat
mov
cmp
inc
test
xchg
pop
ret
lahf
loope
inc
xor
mov
or
ret
add
bound
je
cmp
fsts
int3
xchg
nop
das
inc
adc
cmpsl
aaa
fsub
subl
sub
dec
add
xor
aad
mov
mov
or
shrb
cli
cmpsb
test
int
daa
sbb
int3
cmpb
push
jmp
xchg
out
int3
popa
pop
sub
sbb
in
out
jecxz
push
in
dec
pop
test
in
aas
ds
lret
add
and
pop
xor
push
xor
push
push
push
pop
sub
xor
push
std
push
jle
mov
jbe
jb
pop
into
arpl
fcomi
aaa
mov
je
xchg
pop
dec
in
inc
lds
sbb
fmull
data16
sub
out
jae
loope
push
xchg
out
xchg
outsb
lahf
pop
xchg
pop
jmp
in
mov
xor
jne
push
xor
ja
lods
fistps
and
mov
imull
lds
stos
pop
sub
mov
es
mov
rorl
rcll
cmpb
pop
sub
cmp
notb
add
mov
adc
test
lret
jbe
pop
add
mov
mov
stc
dec
lea
pop
dec
das
je
loop
insl
imul
mov
mov
mov
ljmp
fsubs
cmp
xchg
push
mov
je
jmp
out
mov
scas
addr16
or
jl
rorb
insb
mov
movsl
push
dec
pop
sub
mov
insb
pop
cmp
dec
shl
scas
cmp
push
mov
sbb
sub
dec
movsb
mov
ret
xor
lea
rcrb
jnp
mov
inc
push
push
cwtl
lods
dec
test
inc
idivl
mov
call
bound
pop
dec
pop
push
mov
out
adc
repz
nop
ja
cmp
sahf
sbb
pop
arpl
sub
pop
mov
jmp
sbb
xor
or
mov
pop
push
mov
mov
jae
and
lds
mov
sti
sub
xor
ss
iret
jmp
mov
cmp
xchg
cmp
mov
xor
cwtl
mov
iret
scas
in
lahf
push
inc
in
lock
fnstcw
popa
les
add
pop
sti
daa
test
stc
dec
push
lock
dec
cmp
lcall
cmp
out
aam
push
stos
lods
negb
inc
jns
jl
mov
sub
mov
push
dec
stos
test
sbb
cmp
cmp
in
jp
xor
mov
pop
mov
xor
pushf
pop
xor
mov
add
jae
mov
xchg
inc
movsb
push
out
dec
cltd
cmc
jl
popf
xchg
dec
inc
jp
push
mov
cmp
sbb
sti
mov
dec
cmpsb
adc
in
dec
lods
jecxz
add
jecxz
dec
jl
sti
jge
sub
mov
mov
mov
and
and
jl
cmpsl
into
mov
xor
add
cmp
add
in
sarb
push
bound
and
dec
xchg
outsl
mov
ret
xlat
rcrb
mov
mov
mov
pop
hlt
icebp
sub
pusha
jno
decb
aam
clc
mov
fs
inc
rorl
scas
into
shrl
lea
jge
ds
mov
sbb
hlt
cmpsl
pushf
xchg
inc
push
imul
or
out
loopne
add
insl
or
push
lock
cmpsl
mov
pop
mov
lcall
pop
out
add
sbb
xchg
stc
xlat
adc
mov
dec
cmp
jmp
rorb
cltd
xchg
out
ja
adc
push
aas
adc
push
xchg
push
into
sarl
ljmp
fcom
adc
pop
jns
fcmovne
enter
and
pop
adc
fisubrs
inc
sahf
sarl
jmp
sub
xor
dec
ffree
jmp
pop
pop
xor
jbe
fstpl
jno
cmpsl
test
out
jno
rolb
push
cwtl
push
pop
leave
in
jnp
and
xchg
int
add
jmp
jbe
fwait
jmp
adc
imul
and
les
ds
ljmp
fisubl
jne
adc
rorb
cwtl
das
nop
leave
xlat
push
mull
div
jp
xor
mov
mov
adc
or
dec
mov
aaa
test
ja
or
jo
lods
ss
cmp
or
push
adc
imul
add
adc
dec
mov
je
popf
outsb
xchg
mov
cmp
js
adc
adc
inc
cli
dec
icebp
fiadds
jno
push
popf
lahf
xor
sub
aam
int3
cli
cld
jg
enter
ret
repnz
push
jae
jge
imul
rolb
mov
inc
sub
push
pop
adc
or
sarl
jns
dec
dec
rcrb
mov
sbb
pop
inc
dec
sub
flds
lcall
ret
xor
sbb
mov
push
xchg
inc
push
mov
mov
notl
in
cmp
aad
ret
mov
or
shrb
int
xor
in
push
adcb
es
adc
inc
fisubrs
fstl
int
lock
push
jecxz
je
call
push
sub
jbe
adcb
out
and
mov
mov
lret
push
adc
arpl
or
sbbl
ds
add
cmpsb
insl
das
movl
sub
call
mov
js
jno
mov
lahf
xchg
cmpsl
roll
test
fnstcw
pop
jmp
int
pop
and
loopne
int
addr16
in
pushf
int3
dec
sub
sub
sbb
push
xchg
ljmp
xor
sub
dec
aad
cmc
inc
loopne
jne
xor
scas
jns
ss
gs
jmp
mov
pop
add
mov
orl
push
test
jnp
dec
in
dec
mov
in
pop
jg
out
test
sbb
mov
scas
jae
inc
pop
mov
int3
adc
loopne
pop
sti
sub
das
push
daa
enter
adc
loope
repz
les
add
push
mov
cmp
out
adc
mov
je
out
das
aam
adc
sub
pop
lods
std
mov
cmp
mov
mov
data16
setne
test
cs
fnstcw
out
and
cwtl
add
popa
add
mov
mov
in
jmp
in
fwait
outsb
push
xchg
fwait
push
out
xor
mov
ljmp
pop
mov
push
jnp
clc
popa
adc
loopne
std
ds
cmp
xchg
xchg
test
push
add
adc
lea
sub
lahf
mov
adc
out
push
mov
xlat
arpl
or
orl
leave
insl
or
insl
mov
xchg
push
sbb
out
mov
scas
ja
inc
mov
jge
adc
mov
jne
mov
inc
sub
xorb
insl
bound
xchg
inc
out
and
sbb
lds
repz
int
sub
call
or
mov
fildl
xchg
jecxz
cmp
dec
test
push
push
loop
rcrb
cld
push
orb
inc
dec
inc
ss
in
mov
jnp
icebp
inc
bound
mov
and
and
xchg
inc
and
push
cmpsl
fs
mov
pop
lods
jmp
add
sahf
dec
push
shr
inc
mov
iret
cld
mov
movsl
sbb
je
call
jmp
in
push
repnz
dec
xchg
push
jg
jmp
push
cmpsl
in
jbe
pop
and
stos
loop
xchg
sarb
loope
cs
jmp
jp
fs
push
dec
cmp
dec
mov
imulb
cli
mov
push
jge
iret
vcvtsi2sdl
xchg
js
push
ja
sbb
mov
nop
stc
std
rol
pop
mov
mov
push
push
les
xchg
inc
ds
imul
lret
psrad
push
mov
sti
dec
add
cmp
pop
arpl
mov
xor
rorl
or
sbb
mov
ja
out
push
or
inc
pushf
outsl
mov
fists
loope
sbb
shlb
gs
dec
xor
inc
clc
adcb
mov
xchg
test
mov
rclb
push
dec
pop
cli
add
data16
imul
mov
into
int3
dec
call
cmp
mov
push
sbb
sbbl
dec
jmp
or
stc
mov
or
ljmp
mov
cmpsb
mov
dec
and
pop
pop
or
and
in
ljmp
jb
out
mov
call
loope
loopne
cli
xchg
sub
cmp
xchg
fisttps
or
pop
push
je
push
sub
push
or
xchg
call
iret
cld
std
push
cmp
leave
aas
les
pop
ja
movsb
xorl
cmc
xor
or
loop
fisttpll
lret
add
adc
and
lods
insb
lret
bnd
es
and
push
adc
sbb
das
mov
xchg
aaa
pop
push
jle
in
out
gs
mov
adc
cld
or
xchg
jl
lret
test
aam
xchg
in
push
pop
dec
xor
push
xchg
mov
cmpsb
call
mov
lret
push
xor
out
pop
push
pop
dec
lcall
jle
movsl
adc
inc
cltd
filds
stos
out
lock
insl
stos
mov
into
loope
aam
out
xchg
dec
xlat
add
push
push
out
and
add
shll
push
cli
add
xlat
in
sbb
ret
int3
xor
stc
into
mov
and
cld
dec
or
movsb
cmp
jl
das
jo
paddusb
inc
test
mov
inc
push
inc
mov
insl
jle
js
lcall
pop
and
cmp
fnstenv
inc
mov
mov
pusha
dec
sub
jno
push
or
cmp
mov
mov
insb
jns
or
int3
dec
ss
mov
pop
les
lcall
mov
adc
cmp
jg
mov
pop
or
inc
scas
xchg
xor
pop
out
adc
push
pop
xchg
shr
test
pop
loope
jbe
aam
pushf
adc
sub
inc
add
xchg
mov
fs
icebp
call
rcrl
pop
mov
loopne
rorb
lods
adc
movsb
and
sbb
lds
inc
fdivrs
fdivs
pop
idivl
hlt
xchg
mov
mov
sub
cmp
test
pusha
dec
xlat
lds
xchg
mov
insl
popa
addr16
cmp
dec
dec
jg
notb
mov
add
stos
out
rcl
jmp
mov
fisttpll
mov
out
popa
push
add
xchg
cltd
adc
or
ljmp
aas
or
jno
cmpsl
and
dec
push
xchg
imul
pop
sbb
cltd
cmp
test
sbb
into
aad
or
cli
sbb
mov
outsl
dec
int
rolb
add
mov
mov
cmp
push
mov
jge
out
cmp
iret
mov
dec
mov
push
sbb
cmp
mov
cmp
sub
dec
pusha
popa
fcompl
jmp
loopne
out
insl
sbbb
push
subb
fimuls
into
stos
jl
loop
jmp
jg
push
push
mov
inc
add
xlat
pop
xchg
pop
sti
push
cmpsb
cmc
and
aam
mov
sub
popa
push
clc
sub
out
lea
sbb
or
sahf
or
lock
lret
jl
enter
int
jge
div
mov
push
mov
sti
les
jo
call
xor
fnstcw
adc
daa
inc
test
jge
push
repz
outsl
mov
xor
mov
dec
push
mov
aaa
sub
pop
xchg
or
add
dec
pmuludq
lods
cli
sbb
jnp
xchg
rcll
aaa
je
iret
fwait
mov
stc
cmpsl
inc
pushf
shlb
ficoms
push
sbb
jb
mov
and
add
cmpsb
pop
jmp
add
push
test
mov
lea
in
pop
inc
call
fisubs
xchg
push
sar
rep
ds
aaa
cmpb
in
aaa
sub
daa
fcmovnbe
pop
mov
adc
cmpsb
sub
dec
push
lods
cs
xchg
mov
outsb
jmp
xchg
cwtl
push
jnp
das
cmp
mov
fisttpll
ja
orb
push
lock
or
rorb
mov
and
xchg
sub
arpl
scas
or
xchg
mov
mov
or
loope
sub
or
loop
lret
mov
dec
xor
jae
bound
imul
in
jbe
test
xchg
or
inc
add
push
push
push
mov
mov
and
ljmp
dec
mov
dec
add
jb
xor
js
jno
loope
cs
ror
xor
das
xor
xchg
iret
xor
or
cmp
jmp
xor
clc
push
push
retw
mov
add
xlat
fistpll
es
fsubrs
mov
fldenv
jmp
stc
push
incl
xor
stos
mov
in
adcb
fdivrs
mov
lods
and
lret
mov
sub
xor
pop
je
or
pop
notl
jb
push
mov
push
mov
adc
inc
xor
mov
popa
aad
push
test
sarl
into
cmp
stos
or
and
je
add
sbb
shl
xor
mov
push
vmovaps
xchg
sbb
ret
shll
fsubp
orl
mov
sbb
cmpl
gs
test
cs
dec
in
cmp
inc
test
jmp
pop
xor
xchg
mov
ds
mov
int
jge
cmp
insb
push
mov
adc
mov
mov
ret
icebp
sbb
xor
mov
lahf
or
dec
shrb
testl
and
in
shlb
movl
jl
pop
aad
sbb
imul
lcall
push
hlt
aad
pop
gs
std
mov
mov
enter
inc
leave
ror
aam
or
movsl
cmp
std
loop
jbe
xor
mov
into
clc
das
stc
outsb
xlat
fisubrl
stos
adc
cmc
ss
test
fwait
pop
addr16
je
or
fld
fcoms
lds
sbb
xor
scas
popa
push
loop
cmp
push
repz
sbb
add
int3
mov
cmp
push
iret
fldl
icebp
scas
adc
fimuls
dec
mov
fisttps
xlat
test
test
inc
dec
pop
sub
sar
sahf
pop
or
sub
rclb
sbb
xor
adc
cmp
sub
loop
mov
xchg
push
cmpsl
clc
sahf
jno
mov
cli
fdiv
testb
insb
test
popa
adc
sahf
outsb
push
push
fists
or
push
es
dec
push
mov
sub
shlb
push
fcmovnu
ret
fisubrs
cmp
jmp
stc
stos
mov
jns
push
mov
inc
jno
popf
cli
int3
fwait
cld
lret
or
sub
sub
mov
push
shl
jo
mov
mov
insb
cmp
pop
bound
movsb
push
jno
sbb
dec
aaa
mov
cld
mov
mov
pop
xlat
div
cltd
mov
fsubl
jae
mov
loope
jecxz
adc
fwait
movsl
sbb
adc
std
cltd
ljmp
lcall
popl
mov
pop
jp
std
in
out
xchg
adc
push
fadds
push
push
push
adc
push
faddp
cmpsb
stc
ljmp
int3
mov
sbb
inc
sub
popa
je
jmp
mov
cltd
in
bound
xchg
adcb
push
sub
inc
add
fisubrl
hlt
lcall
in
inc
insl
xor
xchg
lahf
clc
inc
mov
xor
daa
cmc
sub
pop
scas
es
jno
fbstp
ja
inc
imul
lahf
clc
push
adcl
cmpsl
xor
aas
cmp
in
mov
shll
xchg
ja
lea
int3
test
ss
pop
idivb
fldcw
scas
cltd
dec
sub
mov
jl
clc
fists
shll
pop
std
ljmp
xlat
rclb
jge
push
stos
mov
outsl
lcall
mov
mov
mov
daa
mov
sahf
mov
jge
out
mov
pusha
pusha
je
add
hlt
stc
arpl
cmpl
ljmp
fbstp
or
cld
cmpl
or
cmpsl
pop
xlat
scas
adc
inc
sbb
sti
inc
movsb
adc
cmpsl
push
dec
or
jg
cs
popf
popf
clc
cmp
movsb
fdivrl
jno
add
sub
cmp
sub
stc
inc
pop
setns
jg
movsb
cmpsl
xlat
adc
jbe
pop
call
xchg
icebp
aad
jg
pop
aam
cmpsl
mov
out
ret
fwait
vandps
push
jp
lahf
leave
in
add
or
jmp
pop
std
add
push
adc
movntps
sbb
jno
jp
cmc
inc
sahf
push
inc
xchg
push
mov
mov
lods
sub
cli
mov
insb
or
jns
sbb
testb
lahf
loope
fs
out
in
lods
jns
mov
insl
push
stos
loopne
hlt
aas
mov
ss
xor
cltd
mov
rcrb
int
cli
and
sbb
xchg
and
dec
jecxz
les
adc
mov
sahf
mov
or
and
sbb
fsubr
add
and
jg
ljmp
pop
mov
xchg
and
and
dec
cmp
rcll
xlat
addl
or
test
inc
jp
jo
std
nop
ds
push
dec
lods
cmp
loopne
add
pop
jmp
jge
sahf
xlat
jne
inc
and
loope
push
sub
fs
jae
xchg
fwait
dec
pusha
xchg
and
stc
mov
jb
xchg
fdiv
or
mov
aam
adc
into
push
add
leave
aam
push
and
into
into
adc
insl
inc
or
push
hlt
ds
adc
aas
loopne
test
or
pop
mov
test
in
mov
add
repz
out
arpl
jle
jno
add
and
popa
daa
or
lret
sub
add
pushl
loop
shrl
or
xor
cmpsb
jmp
je
xchg
mov
add
lods
sub
pusha
mov
push
and
rcrb
lods
fcmove
jg
jg
test
dec
aam
fs
lahf
jg
fstps
loop
add
call
and
mov
mov
push
cs
ljmp
xchg
pop
pusha
cmp
test
cltd
mov
jae
xchg
shrl
leave
and
imul
add
push
jle
cmp
push
lock
push
outsb
callw
pop
and
jmp
roll
ljmp
aam
sbb
xchg
mov
leave
jne
push
push
cmp
addr16
ficompl
jae
push
repnz
jae
int3
les
push
inc
mov
stc
xor
jecxz
or
cmp
sbb
xor
or
push
mov
rcr
out
or
dec
mov
sbb
push
pop
push
repz
pop
inc
ja
loop
lea
scas
xchg
mov
jge
xchg
add
jne
xor
cmp
cmc
jmp
jo
xlat
push
call
daa
add
call
xchg
ret
sbb
xchg
lcall
outsb
dec
xacquire
lahf
pushf
clc
mov
hlt
cmpsb
or
mov
mov
add
aaa
sub
cld
dec
ja
shr
arpl
jbe
mov
mov
add
add
and
stos
or
mov
daa
add
ds
jo
test
xor
in
sub
xor
adc
call
pusha
pushf
nop
out
sub
adc
sarb
dec
rcll
pusha
mov
lods
fisttpll
add
mov
pop
fldl
aaa
inc
adc
mov
stc
mov
scas
outsl
int
test
test
ret
leave
dec
scas
inc
andb
sti
cmpsb
mov
pop
cmp
push
imul
imul
dec
hlt
pop
movsl
loop
fisttpll
push
mov
mov
and
int
jp
mov
mov
arpl
sub
data16
fmulp
in
xor
loope
xor
mov
xchg
adc
repnz
ret
xchg
add
adc
mov
cmp
mov
outsl
pop
mov
and
mov
jnp
int
sbb
in
and
cmc
fimull
mov
push
nop
jp
inc
push
pop
or
rcr
or
jbe
inc
mov
dec
sbb
rolw
xlat
ljmp
adc
sbb
out
xorb
test
dec
lret
xchg
xchg
pop
push
pop
popf
cmp
adc
push
cmp
dec
xchg
xchg
add
fmuls
rol
sub
adc
loopne
or
or
roll
ljmp
add
int3
mov
pop
xor
lds
insl
inc
pop
inc
and
add
pop
sub
imulb
xchg
and
add
int
jmp
sub
enter
jmp
add
push
mov
nop
dec
mov
movsl
imul
xchg
pop
push
movsb
sbb
adc
mov
gs
mov
and
sarb
in
fimull
ret
addr16
dec
test
cmp
lds
fs
popa
xchg
xor
mov
xor
inc
in
push
jno
ror
add
and
xchg
push
ret
mov
cltd
inc
push
inc
fisubl
lcall
fcmovbe
ds
in
insl
in
xor
insl
sbbl
inc
stos
sub
mov
xchg
cld
ds
push
leave
xor
lret
mov
xchg
data16
int
lods
add
out
testl
movsl
notl
pusha
fsubs
pop
cmp
imul
inc
mov
adc
cmc
mov
lret
popf
push
dec
jo
mov
ss
inc
jge
push
mov
inc
lahf
push
bnd
xor
cmp
adc
imulb
incl
fcmovne
sbb
pop
pop
mov
out
out
mov
push
scas
push
or
mov
lret
sub
insb
xchg
fisttpll
jg
mov
cmp
dec
pop
jnp
mov
cmc
mov
dec
xor
jl
int3
ret
das
mov
push
inc
pop
push
in
popa
mov
push
jns
push
std
fmuls
inc
lods
and
addr16
neg
arpl
nop
push
inc
scas
dec
fiaddl
mov
jno
incb
lahf
mov
and
inc
lock
cmpsl
xchg
jne
je
outsl
aas
mov
inc
and
imul
and
mov
shll
out
pop
insb
insl
lods
cltd
push
je
mov
sbb
or
push
fisubs
pop
inc
xchg
mov
add
push
cli
inc
push
jp
imul
negl
call
mov
pop
pop
pop
dec
in
cld
dec
xor
mov
out
mov
in
hlt
paddd
int3
out
imulb
fs
cld
out
xor
movsl
insb
push
fimull
lret
cmp
pop
out
in
sbb
jg
add
fisubrl
sbb
ja
xchg
jle
xchg
xchg
mov
cmc
adc
into
mov
or
xor
das
clc
daa
add
aas
test
or
mov
cltd
jnp
lods
cs
cwtl
inc
sti
xor
cmp
inc
lahf
out
adc
xchg
fsubr
and
popf
adc
or
imul
xchg
push
adc
push
xor
mov
sub
add
adc
repnz
dec
std
ljmp
fiadds
pusha
sbb
fmuls
push
out
addr16
and
ret
xchg
mov
jns
cwtl
cmp
repz
xor
push
push
or
cltd
pop
dec
or
in
mov
out
out
mov
sbb
stc
cmpsb
dec
mov
pop
les
sub
jecxz
inc
inc
lock
test
mov
mov
pop
inc
inc
aad
push
popa
mov
cld
loop
movsb
cmp
xor
mov
sub
lds
or
sub
fistpl
into
xchg
repz
xchg
movsl
inc
mov
pop
fstl
sub
repnz
pop
mov
sbb
add
sbb
add
cmp
adc
add
cvtpi2ps
mov
push
inc
mov
movsb
jnp
jo
sbb
sti
sub
lds
out
push
jo
gs
jae
inc
data16
mov
lcall
icebp
sub
stos
inc
and
cld
stos
mov
cltd
jo
je
xor
and
bound
push
mov
sub
mov
push
and
dec
aas
shl
dec
xchg
jns
xchg
jmp
jo
hlt
pop
sub
inc
mov
sbb
je
sub
ss
push
lods
fsubl
xor
sub
repz
mov
cmp
mov
in
mov
repz
test
pop
xchg
jbe
imul
mov
inc
popf
and
insb
adc
mov
push
jb
xchg
jno
xchg
sub
rorb
xor
push
insb
mov
insb
pop
inc
stos
outsb
mov
push
pop
lahf
push
jb
leave
testl
gs
mov
pushf
sti
lock
fimuls
aaa
and
and
or
lret
clc
push
adc
std
sbb
adc
mov
sahf
test
mov
ljmp
adc
test
testb
movsb
daa
into
cs
lahf
call
cld
push
jae
or
pop
out
jl
nop
popf
sbb
fcmovu
cmp
sub
lcall
pusha
fdivrl
lahf
loopne
enter
cmp
push
mov
or
pop
lock
mov
sub
loop
jp
cmc
ret
push
imul
stos
sub
hlt
fildll
hlt
insl
dec
jnp
idivl
add
and
rorb
in
mov
mov
xchg
dec
and
into
add
mov
mull
xchg
shl
xor
cmp
jge
je
or
xchg
lcall
mov
lock
push
add
int
pop
out
arpl
js
mov
test
cvttps2pi
in
push
and
cwtl
test
in
nop
pusha
mov
xchg
jmp
xchg
xor
cld
mov
pop
cmp
mov
out
rcll
and
push
lock
or
cmp
sbb
push
and
sub
cmc
mov
jmp
lods
push
jecxz
cmp
pushf
jns
jl
sbb
push
push
mov
mulb
fstl
rorb
push
jns
std
xchg
ja
or
push
in
cs
das
xchg
jl
adc
mov
push
xchg
sub
cli
push
add
stos
pop
aaa
divl
sbb
dec
sbb
imul
pop
dec
push
aam
sbb
fs
test
cltd
cmp
cwtl
movsl
aaa
add
xchg
repz
or
fisttpl
mov
testb
in
not
jle
bound
adc
movsb
test
inc
lcall
dec
outsl
push
iret
mov
pop
loopne
xor
mov
lret
sbbb
hlt
jne
clc
repnz
lcall
addr16
mov
gs
cmp
sub
adc
in
or
fs
mov
test
repnz
add
icebp
ret
cmpsl
outsl
andl
rol
cmp
mov
add
sbb
fcoml
mov
in
out
push
sbb
mov
rorb
scas
aad
add
pop
cmp
xor
inc
das
jno
adcl
cmc
ljmp
lret
cmp
xchg
fwait
add
push
cmp
push
lods
in
and
and
and
and
testl
dec
and
xor
adc
push
sahf
cli
sbb
mov
lret
pop
pop
xor
out
cmp
jecxz
ja
sub
aad
stc
fldt
xchg
test
insb
push
jo
xor
xchg
test
sub
insl
cli
scas
lret
nop
int3
inc
mov
push
cmp
sahf
mov
pusha
pop
cs
push
dec
or
adc
push
mov
orl
xor
popa
jne
addr16
jl
lret
lock
je
es
aaa
stos
jb
sbbb
int3
mov
pop
add
mov
mov
mov
pop
adc
pop
cmpsb
xor
es
call
add
mov
shrb
lds
xchg
jmp
popf
mov
movsl
sbb
mov
mov
mov
adc
xor
pop
xchg
int3
mov
xor
fadds
daa
sti
pop
call
icebp
sti
pop
lods
and
cs
jl
cltd
inc
lea
filds
push
out
bound
push
xor
mov
shll
fwait
inc
psubsw
in
and
inc
or
inc
xchg
and
xacquire
pop
jg
mov
sub
sbb
out
mov
inc
cmpsl
out
movsl
xchg
sbb
fistpll
push
std
mov
sub
xor
pop
sti
xchg
sub
cmp
daa
pop
mov
test
jo
mov
leave
or
mov
add
jecxz
inc
xor
pop
cmp
ds
outsb
jns
mov
movsl
and
adc
inc
les
sbb
push
sbb
in
fwait
xlat
loop
je
mov
outsb
push
cmpxchg8b
lcall
mov
cmp
jg
movsb
mov
les
mov
imul
push
mov
mov
rcl
int
sbb
and
xchg
mov
jp
mov
mov
in
popa
nop
ret
mov
pusha
mov
dec
insb
adc
and
cmp
mov
fistpl
sub
pop
xchg
sar
xor
mov
cs
ret
add
pop
jnp
cmpsl
orl
int
js
or
inc
arpl
mov
into
mov
push
jne
ljmp
adc
xchg
gs
mov
push
mov
scas
dec
ret
test
ret
pop
aaa
mov
pop
leave
das
in
dec
lret
fcmovbe
popl
cli
dec
pop
pop
leave
ja
ja
jns
out
jno
push
sub
sbb
leave
imul
cmp
sbb
int3
xorl
xchg
add
fmuls
push
movsb
sub
addr16
push
scas
xor
lret
and
mov
jecxz,pn
pop
stos
pusha
mov
push
mov
sbb
les
adc
xchg
into
js
sar
mov
pop
or
dec
cmpsl
push
outsb
mov
jns
xlat
imul
rcrl
push
jmp
repnz
mov
sub
xchg
xchg
jne,pn
sub
mov
sub
negl
std
in
add
or
mov
or
loopne
push
pop
ret
inc
mov
andl
jb
test
into
xor
xor
aas
lret
mov
and
dec
stos
in
stc
rolb
mov
clc
xor
mov
sti
fs
divb
jno
jno
in
jecxz
outsl
les
xchg
adc
mov
mov
lcall
cld
jmp
xchg
cli
bound
ds
dec
int
cmp
movsl
cmp
pop
leave
ret
pop
push
mov
mov
sbb
mull
pop
push
nop
jns
test
lock
sub
jnp
aas
mov
icebp
sbb
fisubs
repz
divb
jno
shr
fldenv
jb
nop
out
sarb
cmpsb
mov
dec
ja
sarb
add
pop
fwait
in
pop
inc
sub
sub
mov
jae
xor
ficomps
out
fnstenv
mov
add
xchg
shll
aam
mov
insl
mov
pop
sbb
jb
xchg
xor
pop
std
cmpsl
fsub
in
pop
mov
lods
jno
add
into
mov
push
xor
mul
xor
test
dec
jp
pop
sbb
mov
rclb
pop
adc
sbb
enter
pop
cwtl
outsb
pushf
lret
cmp
adc
call
stos
sub
addr16
aaa
mov
jl
cmp
fnstsw
sub
pop
clc
jmp
mov
clc
mov
cmp
test
dec
or
sub
mov
test
mov
pop
sub
fstps
sbb
pop
in
out
popa
nop
jp
mov
or
pop
cwtl
bnd
pop
push
mov
sub
fmull
push
xor
je
rcrb
mov
mov
push
fildl
test
mov
fisubrl
mov
xchg
sti
jo
adc
int
mov
inc
loopne
cmp
pop
and
add
pop
mov
cmp
cltd
fstpt
and
jecxz
add
fs
mov
imul
rcrb
lods
insb
ljmp
xor
arpl
sbb
in
adc
call
addr16
loop
mov
movsl
pushf
dec
xchg
add
push
rorl
addr16
cs
imul
push
xor
cli
sbb
push
push
sub
mov
daa
pop
insl
sbb
inc
fisubl
negb
sti
adc
xor
mov
pop
clc
xor
hlt
cmp
xchg
in
movsb
cmp
dec
xchg
or
push
fstps
int3
hlt
ret
insl
push
addr16
cmpsb
xchg
enter
testl
mov
ljmp
js
test
mov
dec
fstpt
mov
mov
mov
inc
sbb
or
sti
add
in
jo
sar
repnz
add
pop
add
and
pop
xlat
jecxz
imul
dec
lock
outsb
mov
ljmp
pop
or
push
sub
and
insl
enter
jns
push
je
jle
or
sarb
int
jb
lcall
js
xchg
jmp
rorl
or
mov
dec
xor
stos
orl
adc
test
mov
push
dec
adc
mov
dec
xchg
mov
jae
test
or
fisubs
xchg
je
or
imul
cmpsb
push
xor
sbb
dec
mov
stos
sub
push
push
int3
stc
pop
jo
jns
pop
push
shll
mov
cmp
cmp
mov
mov
cmpsl
loopne
cmp
mov
in
mov
adc
ret
and
aam
jae
sbb
lea
sbb
adc
cmp
pop
es
je
scas
add
mov
les
pop
ss
addr16
pop
jns
popa
out
xchg
subb
mov
in
test
pusha
stos
inc
cltd
mov
mov
adc
mov
pop
addl
adc
and
lock
mov
xor
sbb
popa
pop
adc
sub
je
xchg
je
insb
dec
idivb
imul
ja
lcall
clc
inc
pop
cmpsb
jmp
push
div
loopne
cmp
repz
or
rclb
or
les
xor
xchg
sub
push
jmp
test
dec
mov
test
or
mov
fdivrl
push
pop
xchg
orb
pop
cs
adc
mov
cmp
ret
and
mov
cmpsb
or
push
or
xlat
idivl
leave
mov
mov
mov
mov
sub
push
cmp
push
mov
movsb
xchg
aam
xor
mov
add
movsb
inc
rcrl
xchg
xor
sbb
pop
add
and
adc
insb
dec
fcmovbe
in
movsb
sarl
rclb
cmp
sub
xor
xchg
push
sub
clc
inc
scas
sbb
sub
pop
ds
sbb
out
jp
pushf
mov
sarl
mov
jle
sub
mov
jb
out
mov
call
loopne
cwtl
mov
pushf
fldl
push
shll
data16
repnz
shll
loop
arpl
or
xor
fs
push
push
jmp
movsl
test
or
xchg
mov
popa
push
mov
and
stos
les
cld
into
pop
in
sub
stos
clc
aas
xor
and
mov
dec
xchg
cmc
dec
and
sbb
push
push
jg
lock
or
int3
jne
pop
outsl
fs
mov
lahf
and
push
push
sahf
inc
cwtl
faddl
dec
adc
lock
mov
or
and
push
shll
fistl
push
ret
fistl
mov
add
push
jo
stc
std
sbb
add
cmp
add
lods
outsl
mov
push
loopne
sbb
es
xchg
cli
push
lods
inc
xor
dec
dec
inc
or
push
ja
cmp
xor
jge
clc
rclb
sub
fs
in
cli
sub
icebp
cli
bound
or
inc
cld
push
outsb
xlat
xchg
subb
push
imul
adc
jecxz,pn
clc
mov
mov
inc
push
leave
int3
out
mov
add
sbb
mov
dec
mov
jo
out
insl
cli
repnz
cli
push
sbb
adc
and
push
push
sbb
shrb
fwait
push
out
xchg
jge
bound
arpl
cmpsb
or
int3
pop
push
sub
and
jp
xor
inc
mov
insl
fbld
out
mov
sub
orb
add
pop
cltd
pusha
jecxz
ficoms
das
xchg
jne
repnz
fdivs
dec
imul
xor
aam
loope
dec
out
cltd
adc
dec
sti
jno
adc
mov
pushf
cmp
addl
xor
push
xor
push
or
icebp
stos
push
lock
nop
imulb
jg
push
fnstcw
fildll
or
cmpsb
jmp
outsb
iret
inc
popa
inc
dec
outsb
int
inc
js
sahf
mov
adc
test
push
xchg
dec
insl
lret
popa
ljmp
ss
xor
adc
jg
nop
insl
ds
pop
cmc
icebp
xchg
sahf
xchg
and
pop
lods
test
mov
xchg
and
xchg
pop
sub
cmc
push
pop
test
or
cmp
add
and
orl
in
jb
flds
adc
sarl
test
sub
mov
daa
push
push
test
mov
mov
jno
jnp
jle
push
jge
lcall
mov
lea
jns
adc
fs
dec
loopne
lret
sti
or
lods
or
mov
xchg
fsts
cmp
inc
sbb
dec
xor
sub
jg
dec
cmpsl
das
in
stos
cwtl
scas
inc
popf
aas
sub
push
movl
pop
loopne
leave
test
mov
pop
test
bound
xchg
fnstenv
xor
lret
lds
fistps
fstps
fisttpll
pop
jno
cmp
cwtl
inc
in
mov
dec
pop
jp
push
call
das
ror
sub
mov
adcl
and
pop
xor
mov
dec
js
movsl
mov
xchg
cld
xlat
mov
push
jg
popa
pop
adc
dec
testb
mov
lock
pop
xor
leave
stc
fnstenv
call
fldcw
and
dec
or
adc
shll
sbb
inc
push
data16
sarb
adc
add
dec
int
pusha
lcall
gs
adc
cmp
cwtl
mov
push
test
nop
dec
cs
jnp
div
sti
ret
idivb
jp
imul
jbe
mov
arpl
and
pop
ja
shll
jns,pn
mov
fidivrl
jo
dec
cmp
jne
push
and
mov
or
mov
daa
add
data16
ret
xchg
and
sub
adc
xchg
xlat
add
mov
push
dec
or
out
mov
sbb
or
add
iret
add
ss
pop
clc
lods
mov
iret
das
arpl
add
push
and
aaa
sub
enter
mov
mov
mov
popa
mov
out
cli
xchg
inc
pop
loopne
and
add
and
fildl
xchg
mov
daa
pop
sub
ja
lret
stc
into
jmp
inc
push
in
out
adc
mov
test
fistl
punpckhwd
cmp
loope
cmpsl
shr
xor
and
out
fdiv
xor
daa
xchg
lds
aas
pop
add
and
add
pop
inc
lock
sub
nop
xor
adc
fs
sub
mov
and
mov
jnp
adc
fcoml
shl
push
in
mov
popf
add
scas
out
add
adc
cli
pop
aas
push
inc
cltd
sbb
and
inc
int
dec
pop
mov
shrb
jns
inc
pop
inc
pop
inc
fnstenv
cmc
push
nop
xchg
cmovs
lret
push
popf
rcrl
inc
es
xchg
push
pop
aas
adc
inc
jmp
out
dec
lahf
fcmovnbe
xor
dec
adc
mov
or
cmpsl
lret
mov
mov
sub
jae
test
xor
in
jns
lock
and
mov
cmp
cld
fistl
movsb
jb
cmp
sbb
sub
cwtl
leave
pop
lahf
outsb
mov
cmp
pop
scas
data16
stos
mov
test
add
sub
mov
outsl
je
push
shlb
scas
imul
cmpsl
rolb
inc
inc
add
and
sub
jle
cmpsb
ret
xor
push
jl
mov
pusha
sub
in
dec
les
push
scas
xchg
loopne,pn
xchg
push
or
loop
fs
mov
push
and
mov
icebp
or
sub
lcall
jmp
sbbb
popa
ss
fdivr
or
mov
test
in
cmpsb
adcl
pushf
iret
lret
inc
push
in
add
pop
aas
inc
xchg
leave
xorl
jns
mov
push
mul
loope
mov
xchg
inc
call
jnp
or
push
jecxz
mov
mov
mov
fbstp
mov
mov
push
addr16
jnp
or
incb
fdivrp
push
pop
repz
mov
dec
pop
cs
or
in
stos
frstor
pop
movsb
xchg
pop
push
sub
out
addr16
iret
pop
fistpll
aad
push
push
sbb
mov
sub
stos
inc
mov
sahf
scas
mov
mov
push
lahf
imul
mov
jne
xchg
lret
mov
ss
xchg
mov
ret
jge
push
xchg
dec
roll
shll
inc
add
daa
ret
aaa
sub
and
ret
cld
sub
mov
aas
int3
mov
lahf
in
fisttps
lods
cwtl
imul
pop
xor
fdivs
mull
imul
inc
enter
sub
andb
adc
test
jmp
xchg
aam
outsb
or
repz
push
aas
sbb
jg
popf
stc
mov
cld
sbb
xor
mov
cmp
sub
cmp
pop
push
pop
jnp
fstl
arpl
jge
cmp
xor
movsb
test
repnz
mov
rorb
je
and
inc
test
je
repz
inc
xor
or
and
dec
arpl
mov
jo
fisubs
gs
cmp
push
add
je
enter
and
icebp
clc
push
cli
lcall
and
mov
push
dec
test
ret
setns
testl
push
mov
xchg
pop
pand
dec
call
fsubr
popf
fdivrs
adc
in
shl
and
dec
mov
push
pop
add
js
pop
lahf
leave
icebp
repz
mov
xor
iret
push
push
mulps
and
adc
lods
cmp
inc
ficompl
ds
out
imul
test
push
inc
mov
pusha
popa
lock
outsb
out
jmp
mov
lods
mov
push
out
jno
aam
fstl
or
pop
in
xchg
scas
push
ljmp
jb
add
outsl
lret
notb
pop
ss
aam
into
push
cmp
imul
dec
sbb
mov
jecxz
push
das
sub
mov
or
pop
and
repnz
jnp
and
fcoml
enter
cmp
mov
addr16
mull
movsl
or
in
mov
addr16
xchg
push
outsl
ss
push
and
xchg
mov
cmp
push
jl
lret
xchg
adcb
cmpsl
or
sbb
sub
inc
push
pop
mov
arpl
in
and
sub
dec
push
jb
xchg
pop
inc
cmc
fwait
nop
dec
mov
lea
add
and
aad
aad
iret
push
mov
lds
xchg
andl
aad
pop
sbb
pop
mov
decb
mov
out
mov
ds
jg
enter
arpl
popa
inc
adc
daa
mov
lds
lock
push
clts
sbbl
mov
fdivrs
dec
dec
push
into
push
sbb
push
adcl
loop
dec
or
pop
imul
mov
movsb
stos
pop
jecxz
cmpsb
mov
push
fsubrs
jbe
xor
in
movsl
adc
lret
xchg
push
lock
and
sbb
and
aam
pop
lret
inc
pop
jmp
out
es
popl
mov
push
cmp
cli
pop
xchg
pop
xchg
pop
stc
push
mov
mov
loopne
xor
das
sub
jno
in
push
daa
mov
psrad
mov
les
repnz
repz
and
dec
mov
pop
daa
xor
lret
or
cmpsb
sub
mov
add
pop
fwait
cmc
loope
pop
fdivl
cmp
mov
pop
and
clc
stc
js
jmp
loopne
push
jno
imul
loopne
inc
sbb
add
push
jp
inc
xor
repz
popa
lcall
lcall
pusha
out
imul
insl
pop
scas
inc
jge
pop
movl
les
imul
scas
repz
jmp
mov
ss
loope
shrl
movsb
pop
nop
insl
mov
pop
inc
stc
jl
mov
cmp
add
xchg
cwtl
pop
mov
je
sti
fcoml
repz
inc
and
ja
dec
push
cmp
add
lret
call
jge
cs
mov
xor
fstpt
mov
push
mov
popf
aaa
call
adc
cltd
pushf
xor
sbb
inc
scas
pop
test
mov
mov
and
add
jb
inc
sbb
push
xor
xchg
andb
das
mov
sub
xchg
xor
es
cmp
and
fwait
xchg
cmp
cmp
repz
sbb
int
cmp
push
push
jo
mov
movsb
imul
ficomps
nopl
out
rcrb
inc
pop
jo
pop
popf
jmp
iret
and
lcallw
shll
push
dec
in
out
cmp
and
out
cmp
fisubl
jns
push
dec
dec
and
es
xor
rcrl
or
dec
loopne
cwtl
or
mov
inc
scas
inc
xchg
cmc
cli
mov
inc
arpl
fidivrl
mov
jge
xchg
das
add
cmc
mov
xchg
add
loope
sub
clc
mov
subl
inc
mov
js
jge
int
and
adc
dec
stos
bound
ret
imul
cmp
repnz
xchg
mov
pop
aas
fisubl
fnstsw
nop
mov
dec
dec
inc
lock
add
pop
lock
ret
pop
push
in
out
pop
mov
mov
push
mov
gs
inc
push
enter
push
int
adc
int3
pushf
pop
fs
lret
xchg
addr16
pop
adc
and
adc
push
push
addr16
jecxz
xchg
ljmp
fnsave
and
push
push
mov
mov
xor
lock
adc
cmpb
dec
and
push
aam
shlb
jg
xchg
xchg
mov
add
pop
pop
pop
push
rcll
and
inc
jbe
insl
insl
xchg
inc
xor
dec
dec
pusha
sub
in
loope
xor
cwtl
sub
shr
int3
pop
xor
nop
lahf
lahf
test
add
mov
sbb
je
mov
pop
outsl
in
mov
push
stos
inc
sub
mov
jl
mov
push
pop
icebp
jge
dec
mov
push
mov
iret
lock
push
xorb
mov
insb
and
cwtl
cld
xchg
arpl
pop
clc
jl
sahf
push
lds
dec
std
mov
and
inc
aaa
push
fistpl
pop
cmp
adc
lods
and
ja
inc
lcall
pushl
adc
dec
stc
cmp
or
push
loop
lods
jae
scas
jp
mov
pop
ja
cmpsb
js
xchg
jne
test
sahf
jo
lods
lcall
xchg
adc
leave
xchg
pop
sbb
lahf
bound
push
mov
xorb
or
leave
xor
fisttpll
add
inc
movsl
mul
cs
sub
sbb
test
test
data16
dec
dec
mov
data16
or
ja
sub
daa
iret
push
mov
pop
gs
pop
xchg
xchg
mov
cmp
cld
mov
out
push
fnstenv
push
fwait
mov
fldcw
imul
mov
mov
add
push
out
or
aaa
adc
pop
cmpb
pop
aaa
pop
or
enter
out
cmp
adc
add
imul
out
icebp
xchg
cli
push
mov
cmp
xor
xor
lds
cmpsb
sub
clc
in
fwait
add
popf
and
lods
or
cmpsl
mov
push
xchg
into
cmc
mov
fcomps
jns
mov
call
call
outsb
scas
xor
sbb
fsubr
pop
jp
inc
lcall
xchg
cs
sub
sbb
jge
iret
or
rorl
lret
mov
pop
push
jmp
dec
shll
or
xlat
bound
rorb
orb
push
sti
hlt
sti
icebp
or
pop
faddl
cld
cmp
movsb
mov
mov
cmp
add
frstor
stc
mov
adc
or
and
aas
mov
and
inc
out
sub
jo
jl
rcrb
sahf
add
stos
push
mov
jnp
xchg
std
mov
movsl
push
fwait
xchg
xchg
mov
aam
pop
in
push
xchg
push
out
hlt
inc
xchg
pushf
pop
and
pop
andl
push
jmp
xchg
push
push
and
jmp
fwait
push
imul
repz
pop
ret
push
jo
test
or
push
jge
mov
jg
imul
or
mov
xchg
xor
xlat
xchg
imul
sahf
adc
notl
fiadds
dec
shll
fistpl
cmp
stc
cs
outsl
fcompl
in
inc
mov
shlb
lret
scas
mov
push
rorb
xchg
jecxz
mov
mov
or
mov
test
rcrb
cmp
mov
xor
jo
cmpsl
pop
cmp
xchg
cmp
pop
and
shlb
mov
push
dec
add
stos
dec
filds
xchg
int3
jl
lahf
test
cli
arpl
rolb
mov
movsl
in
nopl
gs
call
adc
sub
xor
or
lahf
iret
daa
in
dec
mov
pop
adc
insb
cmpsl
hlt
sbb
adc
cs
cmpsl
push
sbb
push
sbb
cltd
subl
out
or
out
nop
adc
cmc
cmpsb
ret
push
lods
xchg
and
dec
scas
xor
lea
xchg
jge
jns
cld
xchg
lahf
pop
push
xchg
insb
push
sub
cmp
cmp
xchg
test
fwait
jl
sub
aad
mov
pop
lods
xchg
ss
sub
xor
pusha
dec
cmpsb
int3
fs
mov
lcall
cmp
lahf
dec
xor
es
test
bound
xor
lret
jnp
inc
fcomip
jge
add
inc
ds
call
lods
or
icebp
in
or
push
sub
hlt
pop
cltd
outsb
mov
push
jne
iret
sahf
aaa
inc
sarb
mov
hlt
leave
loopne
aam
mov
mov
cmp
gs
xchg
jecxz
mov
movsb
inc
loope
test
mov
lcall
mov
lods
pop
iret
and
sbb
dec
mov
outsl
pop
push
jecxz
addr16
ffreep
mov
lods
cmp
jne
std
das
jmp
sbb
insl
jo
jbe
popf
mov
ss
mov
mov
dec
sahf
dec
pop
xchg
jbe
loop
inc
pop
cmp
xor
pop
jmp
fidivs
scas
insb
sahf
inc
imul
cmc
shr
xchg
sub
xor
xor
xor
outsl
cmpsb
sub
je
jmp
push
into
lds
je
inc
adc
out
js
pop
xor
pop
call
and
mov
icebp
sbb
dec
aam
jno
jb
and
mov
add
adc
outsb
shlb
out
sub
fbstp
jmp
lret
push
adc
cmc
lods
dec
xor
stc
xor
movsb
jmp
sti
cmp
xor
pop
sub
lret
push
scas
sub
ljmp
mov
and
cmp
add
xor
lcall
pop
std
inc
or
lods
test
xchg
pop
and
dec
add
mull
aam
and
sbb
inc
add
mov
xchg
insl
aas
mov
repz
cmp
aad
dec
mov
out
js
jnp
cmpps
subl
xchg
mov
cmc
in
push
or
aaa
notl
xchg
jg
jle
rol
jno
push
ds
add
outsl
mov
mov
rcrb
push
or
cltd
out
sarb
inc
mov
dec
mov
out
push
xchg
jns
das
adc
fidivrs
dec
ficomps
jl
adc
mov
mov
pop
xor
mov
inc
sbb
inc
andl
mov
mov
clc
mov
sbb
les
fwait
popa
dec
or
sahf
cmp
repz
and
xor
mov
inc
pop
out
loop
mov
push
mov
jo
and
test
aad
xor
push
hlt
scas
xorl
mov
aas
push
ljmp
rcrl
add
jle
icebp
and
push
inc
dec
out
aad
lret
cmc
xor
ret
repnz
loope
pop
stos
add
push
test
xor
jo
mov
pop
jecxz
cmpsb
sti
jo
jp
adc
gs
stos
sbb
out
jno
pushf
clc
daa
sbb
cli
cmp
cld
sub
cmpsb
xchg
sub
and
xchg
imul
nop
xchg
in
mov
loop
mov
jp
ret
pop
and
pop
mov
rclb
and
orl
cmp
jg
out
xchg
lds
gs
add
lods
shlb
aaa
js
cmpsb
les
or
imul
repnz
pop
cmp
push
mov
test
cmpsb
sub
cmc
aas
stos
or
add
iret
lret
loop
dec
jb
push
adc
rcrl
mov
or
das
cmpsl
adc
adc
fdiv
lds
or
mov
in
pop
sub
out
loopne
icebp
js
cmp
loop
fwait
loopne
stos
push
out
dec
adc
mov
in
push
in
inc
nop
leave
int3
cmp
out
dec
popf
mov
pop
shl
xchg
sbb
jmp
insb
xor
mov
lds
notb
stc
fdivr
into
rcrl
xchg
clc
in
add
arpl
cs
cmpb
fisttps
repnz
jnp
insb
fisttps
out
insb
jno
lret
sti
adc
repz
scas
lock
mov
movl
or
int
inc
xor
repnz
jecxz
clc
into
xchg
xchg
pop
lock
jns
lcall
addl
mov
add
adc
sub
sub
pusha
jno
mov
jmp
nop
stos
mov
cmp
pop
pop
lods
mov
hlt
das
cmpsb
cmpsb
test
jo
cmpsb
out
add
test
jl
ss
out
inc
fbld
xchg
push
add
sbb
sub
mov
dec
mov
test
adc
xchg
insl
dec
mov
or
xor
jecxz
lret
dec
pop
scas
add
mov
scas
cld
jl
add
lea
dec
sub
enter
xlat
mov
inc
pusha
sbb
icebp
out
inc
push
or
xchg
sti
in
lea
and
lods
inc
mov
mov
lcall
xchg
cmp
jo
jae
or
sarl
fsts
cs
sbb
mov
jbe
mov
mov
jle
add
xor
adc
mov
es
or
test
in
or
aas
mov
xchg
and
xlat
or
dec
push
cmp
cmp
mov
jne
clc
or
jo
out
xchg
sub
adcl
adc
mov
ret
adc
mov
add
daa
pop
movsb
jb
sbb
push
sbb
inc
mull
imul
jb
push
adc
mov
pop
sarl
sbb
testb
pusha
cwtl
jbe
adc
lret
dec
les
push
cld
cmp
or
orl
pop
mov
cs
rclb
es
pop
mov
mov
pop
mov
stos
imul
sarl
es
enter
cmp
mov
lea
xor
ljmp
imul
xor
std
sarl
inc
shl
sub
std
into
sti
jge
xlat
insl
lret
dec
in
xchg
leave
inc
sahf
sub
xchg
das
lods
mull
xchg
mov
mov
hlt
pop
stos
iret
gs
adcb
sub
xchg
jmp
cmp
lcall
outsl
in
mov
cmpsb
stos
adc
or
add
sub
out
fs
xor
add
cmpsb
lods
andl
inc
or
std
xchg
mov
test
in
mov
rorb
bound
mov
adc
inc
scas
add
sub
test
movl
mov
scas
xor
scas
les
push
jmp
mov
rcll
push
sarb
and
into
xor
xchg
jge
jns
popf
popf
sub
mov
out
mov
in
mov
adc
xchg
dec
and
mov
inc
fistl
dec
ds
vmread
jo
in
jnp
push
inc
mov
sub
out
inc
xchg
mov
jno
xor
mov
inc
lret
xchg
imul
mov
mov
push
push
fidivs
es
cwtl
insb
adc
test
aam
jbe
cmp
cltd
xchg
jmp
xchg
rorb
leave
jb
aam
push
fwait
sub
cmp
leave
dec
fcmovb
mov
fwait
cmp
dec
cmp
repz
cmpb
inc
mov
push
mov
fdivrp
and
xchg
push
push
push
psubb
ljmp
lock
cli
mov
test
mov
xchg
pop
mov
push
mov
xlat
filds
loope
std
cmpl
cs
or
dec
dec
xor
in
lea
and
pop
fsubrp
xchg
sbb
pop
add
imul
loope
mov
call
or
shrl
or
mov
xor
xchg
adc
pop
cvtpi2ps
aas
and
xchg
add
out
xrelease
div
adc
out
mov
in
lcall
pop
jbe
sub
test
fstps
dec
dec
adc
fmull
fdivl
sbb
adc
dec
push
iret
ljmp
jmp
out
insl
sub
scas
int
repnz
xchg
mov
pop
dec
xorl
jg
ret
movb
adc
mov
xor
in
adc
push
mov
shr
mov
dec
mov
and
adc
clc
out
sbb
insb
push
mov
sbb
or
and
jmp
clc
test
aad
out
lcall
cmp
aam
sbb
sub
scas
inc
mov
mov
les
lcall
inc
addl
xchg
cmp
ret
push
fs
leave
dec
add
iret
dec
jns
lds
push
call
lods
bound
loope
sub
cmp
cmp
popf
outsb
leave
movsl
add
pop
adc
cmp
mov
nop
jne
fiaddl
jle
jae
pop
or
push
xchg
pop
xchg
adc
imul
adc
movsl
mov
cmp
out
cmpsb
aam
push
std
dec
je
loope
ret
add
pusha
and
cltd
jl
jne
mov
mov
ret
jbe
mov
test
dec
and
mov
lea
lret
shl
nop
cld
mov
push
fmul
stc
or
inc
pop
dec
ret
pop
imul
xor
xchg
xlat
adc
jo
insl
std
xor
lods
imul
test
mov
xorl
fmull
pop
add
sbb
lcall
decb
lods
dec
ja
aaa
aad
push
int3
stc
popf
dec
pop
pop
dec
jle
inc
sahf
jnp,pt
sub
mov
test
mov
mov
out
or
lcall
mov
in
mov
nop
add
mov
mov
mov
inc
add
mov
scas
mov
cmp
jno
inc
pop
int
nop
inc
pusha
or
mov
rorl
shl
sbb
js
out
mov
or
stos
pop
xor
or
adc
mov
inc
lret
jecxz
imul
sarb
or
cmp
aas
add
dec
jge
jecxz
xchg
or
and
jmp
shlb
or
adc
mov
fs
cmp
jae
lea
and
jle
lds
mov
cmpsl
clc
shll
sub
daa
adc
insb
pop
sbb
popf
int3
inc
cmp
adc
mov
mov
cmp
adc
push
orl
mov
and
xchg
pop
nop
jae
jne
cmp
in
mov
aad
or
mov
cmpsb
cmpsb
inc
dec
iret
push
aas
mov
mov
arpl
loop
xchg
imul
mov
pop
dec
sub
add
repz
xor
cmp
jne
mov
push
into
ja
jb
in
push
jge
aaa
lret
jns
and
inc
mov
imul
adc
mov
mov
call
inc
cwtl
pop
mov
add
call
pop
insb
gs
push
fidivl
lret
cmc
fs
inc
scas
shlb
cs
pusha
jl
mov
cmpsb
scas
mov
shll
loopne
mov
cmpsl
and
adc
inc
adc
or
stos
mov
ds
and
sbb
cs
push
out
jne
sub
imul
mov
dec
in
pop
std
mov
add
negb
sub
push
xor
cmp
aas
fildl
fisubrs
leave
inc
pop
movsl
sbb
out
pop
mov
rcll
sti
push
lods
int
cmp
mov
es
in
nop
cli
jge
testl
dec
push
data16
leave
sbb
push
fmull
pop
int3
cmp
aam
gs
ret
mov
int
add
stos
push
stos
mov
pop
add
jo
mov
sbb
pop
cwtl
mov
insb
bound
fsub
cs
push
sub
ljmp
and
inc
fiaddl
mov
fbld
jp
cmp
fwait
outsl
mov
xchg
push
jno
mov
lret
jl
aam
pop
pusha
mov
cmp
hlt
lock
cmp
add
push
cli
cld
dec
std
cmpsb
fsts
sbb
imul
xor
mov
add
fcmove
pop
mov
add
mov
push
sub
orl
ficompl
or
nop
inc
pop
and
xchg
sbb
enter
push
push
push
cmp
popl
stos
adc
sahf
and
hlt
aam
add
cmpsl
fimuls
add
push
push
lock
je
fisubl
jmp
mov
mov
jne
push
outsb
loop
pop
inc
enter
fnstsw
cmp
cmp
push
and
inc
xor
cld
add
popa
mov
out
sub
hlt
movsb
in
push
pop
adc
inc
adc
mov
adc
add
sbb
mov
xchg
sub
test
jmp
out
in
push
jecxz
jnp
in
adc
mov
or
in
fs
pop
cs
jle
jnp
aas
jp
adc
inc
push
dec
repz
out
outsl
jecxz
daa
enter
or
push
sbb
jmp
je
shll
cmp
inc
std
or
ss
inc
mov
test
loope
sbb
push
lret
push
loope
pop
ja
push
mov
clc
xchg
inc
inc
cwtl
push
cltd
adc
xor
sbb
fcoml
fcomip
popf
loopne
std
push
fisubs
cmp
xchg
dec
inc
pop
inc
lea
out
fists
neg
or
mov
jp
mov
lret
popa
sbb
mov
mov
sbbb
scas
push
das
fadd
or
cmc
sahf
xor
xchg
cli
mov
inc
fwait
mov
inc
add
in
hlt
decb
out
mov
push
test
jmp
sets
mov
ret
insb
addr16
push
adc
stc
subl
insl
fs
mov
or
pop
inc
or
push
subb
inc
repnz
test
inc
sbb
pop
push
sub
in
or
pop
and
fs
adc
imul
mov
sbb
and
push
sbb
outsb
daa
lahf
sub
addr16
jl
cmpsl
jb
popf
lahf
cmp
int
pop
sarl
repz
mov
out
mov
mov
in
pushf
and
pop
xor
scas
mov
sub
pop
mov
or
faddp
xchg
dec
pop
push
jne
mov
sbb
xor
xchg
iret
push
fucom
pushl
sahf
sbb
ss
mov
sub
pop
push
bt
mov
enter
rcll
das
mov
sub
mov
popf
es
or
lcall
and
dec
mov
stc
mov
scas
jb
add
call
mov
mov
les
es
cmp
ss
int
rolb
xorl
adc
cmp
and
xor
sbbb
in
pop
mov
adc
rcl
pushf
push
bound
imul
push
iret
mov
pop
jbe
shlb
dec
mov
lahf
mov
xor
lods
fstp
clc
mov
cmpsb
fisttpll
sti
pop
shlb
fdivrs
mov
mov
in
shrl
divl
fsubp
idivb
shrl
sahf
stc
dec
orb
mov
push
cltd
sub
sbb
push
xor
cmp
loopne
in
cmpsl
sub
nop
push
pop
sbb
dec
and
pop
ror
sub
mov
push
stos
cmp
sub
js
jmp
std
shll
push
test
in
in
jg
aad
rcrl
movsl
in
pusha
sahf
popa
inc
cmpsl
ljmp
pop
mov
xor
gs
ss
iret
or
lock
ret
mov
pop
jno
shrb
push
jns
shl
fadd
push
dec
arpl
lds
push
dec
xchg
mov
in
stos
inc
fwait
sbbl
cmp
das
add
les
jmp
xchg
aas
xchg
cs
in
incl
mov
mov
test
adc
das
inc
or
mov
insb
adc
fistpl
pop
enter
es
movsb
add
sbb
push
mov
loope
jae
dec
push
jecxz
aad
xchg
fwait
aaa
aad
out
dec
xchg
xchg
or
movsb
inc
lret
dec
mov
daa
xchg
pushf
cmpsb
sub
icebp
xor
xor
xor
add
cmp
xchg
pop
scas
rorl
sbb
push
cmc
sbb
sub
xor
push
xchg
sub
mov
add
add
movsl
movsl
jb
lods
dec
or
pop
jp
hlt
mov
aas
xchg
dec
pop
mov
jl
mov
pusha
xchg
test
xchg
fcoml
sub
fdivl
mov
mov
jb
mov
int3
dec
push
and
or
stos
inc
mov
psubsw
lods
cmp
mov
out
outsl
cmpsl
sub
aad
outsb
jl
xchg
adc
shrl
lods
insb
out
insl
and
lahf
cmpsl
shr
shl
insb
add
arpl
inc
cltd
addl
arpl
sub
pop
inc
push
push
ficomps
sub
in
mov
cltd
jp
jge
cltd
xchg
lcall
lea
xchg
ret
cmp
or
addl
hlt
test
mov
cmp
bound
or
mov
mov
lcall
stc
cltd
ffree
rcrl
push
dec
jno
mov
jg
inc
aam
lret
mov
mov
lcall
gs
sub
jbe
lret
test
xor
pop
adc
addr16
loop
adc
iret
es
loop
out
movsl
jne
mov
in
push
mov
push
ror
mov
push
in
loopne
fsubrs
stc
sbb
aad
fwait
push
leave
xorl
mov
or
sti
aas
mov
hlt
pop
sbb
in
les
mov
mov
dec
pop
imul
mov
inc
xor
in
xchg
fsubrl
adc
sub
test
fists
jg
fldenv
aaa
dec
lea
loop
mulb
into
and
and
lods
stc
sub
and
adc
add
mov
fs
push
lock
and
sub
fdivs
lock
in
fwait
sbb
jmp
movsl
cmpsb
mov
lods
inc
lret
push
fincstp
jecxz
mov
fisubrl
fnsave
sbb
inc
xchg
daa
insb
inc
jno
cwtl
clc
lahf
lret
xchg
test
add
lcall
or
dec
popa
sbb
sbb
xchg
adc
dec
xchg
xchg
or
cli
xlat
sti
pop
fisubl
jbe
cs
rolb
movb
dec
scas
into
rclb
int
loope
pop
push
movsl
mov
loop
sahf
or
leave
cmp
xor
pop
outsl
pop
sub
xor
ds
xchg
mul
std
mov
push
add
ss
jl
mov
xchg
xchg
fnstenv
test
or
cmp
and
test
jbe
adc
cmpsb
mov
sbb
aad
dec
xchg
cmp
lahf
mov
leave
fcompp
lret
js
xchg
mov
push
dec
jne
test
ljmp
iret
mov
imul
push
addb
push
andl
mov
call
push
mov
mov
push
add
adc
push
das
int3
push
dec
inc
lahf
and
daa
dec
pop
jp
sub
lahf
xchg
fs
stos
in
sbb
pop
cli
fistpl
mov
ds
pop
call
bound
dec
aas
loopne
repnz
cmpsb
mov
popa
imul
jno
rorl
stos
leave
inc
test
rorb
cmp
cltd
add
stos
push
imul
sub
sub
negl
mov
sub
mov
jge
aam
sub
mov
lock
push
movsb
sub
iret
test
jo
testl
adc
into
lcall
jns
in
popa
fisubs
cmp
jo
push
pop
sbb
mov
add
mov
inc
sbb
into
lds
mov
testl
aad
inc
fists
pop
aaa
or
mov
push
mov
loopne
lods
sub
adc
daa
imul
xor
push
adc
fisttps
into
dec
cli
out
dec
mov
xchg
or
pop
popa
push
cmp
andb
xchg
cmp
sub
dec
and
scas
fisttpl
in
rorl
loopne
and
mov
popa
push
mov
iret
push
jp
adc
rcrl
or
sbb
mov
mov
es
jo
cmp
mov
dec
in
pop
adc
adc
jl
loopne
hlt
scas
dec
and
mov
shl
jl
inc
xchg
jbe
dec
sub
into
aaa
inc
cld
cwtl
mov
inc
mov
xchg
gs
fstps
insl
ss
pop
loopne
loopne
cmp
pop
and
cwtl
xchg
xchg
enter
mov
shlb
sub
push
mov
movsb
aad
gs
xor
cwtl
mov
repz
mov
jmp
getsec
cmp
sbb
dec
cmp
mov
je
inc
popf
lret
add
fisubl
sbb
jns
rorl
scas
stos
in
lret
dec
mov
fnstsw
in
pop
mov
lock
cwtl
jle
xor
xor
sahf
inc
xchg
repz
ljmp
aas
push
shll
into
insb
mov
jno
lods
fdivs
xor
sbb
push
or
aam
aas
jg
loop
bound
fistpll
mov
add
pop
fcompl
pop
cmpsb
mov
jo
cmp
fs
out
rolb
pusha
daa
pop
mov
loope
loope
sbb
cltd
clc
aas
fdivrs
adc
sub
mov
sub
xor
xor
in
xor
sar
mov
dec
ret
lret
xor
stos
cmpsl
cmpsl
mov
jo
add
inc
push
push
movsb
leave
cmpsb
sbb
dec
push
test
dec
or
dec
sahf
xchg
pop
adc
aad
cli
orl
mov
sbb
aas
loopne
enter
dec
or
lods
movsb
mov
dec
mov
xor
out
movsb
sbb
fimull
jl
adc
lea
push
lahf
fistps
mov
inc
clc
sub
fsts
lea
imul
mov
lcall
jne
data16
aad
mov
hlt
cwtl
in
or
mov
ss
push
cs
inc
mov
in
lock
arpl
cwtl
ja
push
test
adc
pop
sub
xchg
mov
jl
test
movsl
loopne
lret
repnz
jmp
mov
imul
into
stos
jmp
js
outsb
push
xchg
mov
jb
sbb
mov
adc
in
bound
mov
movsl
adc
jb
mov
and
adc
mov
mov
ret
je
mov
inc
or
cs
jns
jg
pop
mov
pop
sbb
dec
out
dec
sub
sub
pop
mov
and
pop
loop
fs
addr16
push
mov
cmc
inc
mov
push
push
test
push
ret
int3
sub
lds
xlat
dec
xor
jl
insl
pop
das
lret
pusha
inc
in
sub
inc
pushf
out
lods
and
cld
movsl
fnstenv
jbe
aad
inc
ds
sub
out
jbe
sbb
lret
in
ds
enter
pop
mov
out
pop
inc
xchg
xchg
pushf
mov
mov
mov
sub
fcmove
out
call
lods
es
ds
int3
in
inc
cld
test
out
fldenv
pop
and
int
movsl
sti
icebp
mov
sbb
mov
sbb
lea
mov
jle
pop
xor
stos
pop
push
mov
add
shll
xchg
shr
mov
adc
jns
cli
lods
lcall
imul
xlat
dec
rcr
mov
stos
pop
movsl
sbbl
jl
jp
js
ja
test
sbb
mov
lea
cli
in
imul
cmp
jecxz
mov
cmc
insb
bound
je
fcom
lret
mov
mov
aas
repz
pop
fistpll
outsl
pop
push
cmpsb
nop
or
lock
out
mov
mov
push
fsubrl
add
repnz
adc
outsl
cwtl
outsb
lods
stos
addb
pop
push
xchg
add
inc
in
lret
in
jmp
popf
dec
mov
add
adc
push
mov
insb
rcrb
mov
mov
lods
mov
pop
inc
inc
add
pop
pop
dec
jmp
es
fiaddl
sub
cmpsl
push
pop
cwtl
push
pusha
cli
xchg
scas
cmp
scas
dec
jbe
cmpsl
lcall
cmp
pop
and
jnp
into
scas
xor
push
jne
mov
jl
inc
loope
xor
ret
jae
push
or
imul
stos
cwtl
sub
cmp
stos
cwtl
xchg
sub
mov
pop
mov
push
ds
jno
jnp
lods
push
in
popf
clc
push
pusha
shlb
nop
std
gs
ss
leave
icebp
repz
popl
cmp
sbb
pop
or
xchg
push
inc
lcall
pop
jmp
gs
test
push
out
jl
xchg
push
sub
subl
ljmp
or
sahf
pop
adc
push
ficomps
mov
in
sub
adc
int
mov
inc
es
jb
fistps
fsubp
loope
lds
imul
xlat
cmpsl
inc
mov
dec
xchg
out
inc
mov
pop
aas
adc
orl
cltd
imul
test
or
enter
push
loopne
jl
cltd
add
pop
xchg
mov
mov
lcall
cmp
inc
cmp
mov
sbb
daa
or
mov
inc
mov
jp
adcl
ljmp
dec
pop
dec
mov
push
popa
mov
sbb
outsb
jns
shll
ja
push
lret
cli
mov
adc
inc
push
and
mov
int
mov
sti
sti
dec
jecxz
jg
jg
or
xabort
pop
out
add
lea
fnstenv
xor
stos
xchg
jb
stc
sub
aad
ljmp
jle
das
add
inc
in
xlat
sub
or
out
jge
mov
mov
cmp
sub
inc
addb
arpl
inc
ja
inc
pop
mov
add
inc
inc
gs
sub
lea
in
pushl
aaa
scas
arpl
das
je
mov
pop
inc
mov
outsl
xor
dec
pop
mov
popa
loopne
stos
or
imul
xchg
sub
ja
loope
mov
xchg
cmpsl
jl
loope
aam
mov
and
test
aam
xor
jns
add
nopl
jnp
ret
mov
push
mov
sub
out
jae
xchg
ja
nop
fdivl
pop
ret
jmp
mov
arpl
jmp
sub
cmp
arpl
int
jne
and
imul
sub
mov
repz
test
xchg
jmp
dec
push
or
inc
cmp
data16
xlat
lock
int
scas
aad
fistps
fsubp
or
xor
push
jp
lret
xchg
fdivrs
xchg
out
les
adc
adc
and
sbb
subb
repz
jo
lds
fiaddl
sbb
rorb
sahf
andl
imul
les
xlat
test
jmp
enter
rcrl
lods
and
dec
enter
out
xchg
or
fs
ret
lds
int
xchg
test
nop
sahf
shrb
fstps
mov
add
and
out
cmp
mov
lods
mov
mov
movsl
scas
lds
ja
clc
bound
cmp
inc
stc
jo
jecxz
pop
xchg
cmp
xlat
adc
and
xor
xchg
xchg
add
enter
pop
aad
dec
lds
scas
int
push
dec
in
movsl
fcmovnbe
or
addr16
outsb
cmp
mov
xor
sbb
xchg
add
insb
dec
mov
cmpsl
out
mov
xor
jmp
imul
jmp
jg
and
push
inc
pop
fidivrs
jnp
pop
int3
jl
ja
sub
lods
into
push
sbbl
mov
adc
sbb
js
aam
dec
mov
mov
div
mov
xchg
iret
pop
jge
push
adc
xchg
push
ss
inc
imul
push
dec
lret
push
push
int
push
xchg
or
js
dec
mov
adc
mov
and
das
and
ds
dec
movsb
push
lock
hlt
inc
inc
rclb
cs
xor
push
out
call
pop
xchg
sbb
and
mov
xor
sti
add
cmp
push
mov
sbb
pop
or
or
test
jp
or
hlt
mov
jp
push
loop
test
sbb
jle
std
adc
std
dec
imul
arpl
push
daa
lea
fstpt
inc
mov
mov
ror
add
rorb
es
add
in
xchg
mov
jno
sbb
adc
jecxz
jmp
lea
lods
mov
loope
dec
add
inc
sti
jmp
add
int3
call
mov
fwait
scas
mov
mov
int
xchg
pop
rorb
aas
jb
xor
push
jg
push
mov
das
jge
push
inc
push
pop
mov
pop
mov
dec
sbb
pop
repnz
and
andb
add
cmp
push
arpl
stos
mulb
fisubrs
popl
mov
dec
adc
jp
mov
adc
xor
cmc
fwait
pop
lods
mov
negl
or
data16
mov
sub
xlat
cmp
push
mov
std
loope
frstor
arpl
mov
add
sbb
xor
ficoms
cld
cmc
push
fldcw
negb
push
dec
dec
in
push
sub
aad
jb
outsb
fstpt
dec
imul
pop
dec
inc
je
sbb
insb
mov
fadds
xchg
incl
pop
aas
cltd
lods
jne
imul
xchg
lret
or
inc
not
sub
call
push
ljmp
sub
cltd
out
mov
iret
ret
enter
sbb
add
in
lret
popa
mov
aas
xlat
mov
loopne
popf
stos
sbb
mov
xor
push
test
push
rcrb
or
jge
and
and
ret
adc
gs
in
push
lret
mov
pop
add
dec
jle
into
sti
inc
push
lret
add
test
and
cmp
jo
cld
dec
inc
lock
int3
int3
ljmp
sbb
data16
lods
dec
mov
sbb
and
in
xchg
jae
lods
orb
gs
les
and
push
loop
mov
inc
pavgb
cld
mov
shrl
or
sahf
pop
insb
push
push
xchg
xchg
aaa
fwait
jb
aam
cli
inc
ret
dec
cwtl
lock
mov
mov
xor
inc
xchg
xor
lcall
cmc
in
jg
dec
and
arpl
test
jnp
out
aaa
repz
int
cld
hlt
mov
sahf
inc
fnsave
inc
jae
negb
repnz
repnz
lock
popa
pop
or
xor
daa
cmc
ja
jmp
roll
mov
test
divl
sahf
lods
push
fwait
aas
lea
jno
lcall
or
fildl
sbb
jo
cwtl
xor
inc
fdiv
push
xchg
int
es
in
add
jnp
mov
leave
or
cmp
imul
fists
fcoms
pusha
test
icebp
arpl
add
aas
mov
incl
sarb
jno
enter
xor
cmc
sbb
popa
das
or
clc
call
xor
shlb
mov
jmp
nop
jae
mov
xchg
or
pop
jecxz
cmpsl
inc
inc
jecxz
loope
test
sub
lahf
daa
dec
das
lea
jecxz
pusha
sbbl
jge
jge
lret
ja
push
xor
stc
sub
dec
pop
push
shrb
and
add
cmpsb
jo
stc
dec
inc
int
jl
inc
pusha
push
add
mov
mov
iret
xor
xchg
cmp
das
pop
ljmp
insl
xchg
add
push
cmc
or
sarb
sti
aam
mov
dec
lret
je
adc
mov
ljmp
mov
xor
mov
or
nop
mov
mull
jns
mov
mov
outsl
and
int
daa
in
andl
repz
add
mov
mov
mov
add
push
divl
mov
jae
mov
inc
testl
mov
pushf
cld
fs
sbb
adc
mov
push
add
fs
xchg
repnz
cmp
js
andb
imul
add
test
aad
out
cmp
lods
mov
and
add
aaa
push
pop
out
ds
in
or
shl
or
call
jb
cmp
pop
add
call
adc
aad
scas
push
add
aaa
loop
mov
loopne
mov
jl
sub
test
jbe
push
jle
sbbl
cli
add
loopne
std
lret
jle
mov
sbb
jp
adc
pop
aas
push
mov
call
outsl
pop
xchg
fsubr
jae
sub
js
sub
and
loope
push
jns
xor
dec
dec
scas
imul
lea
rcll
iret
pop
push
cwtl
add
xchg
mov
dec
popf
and
inc
fwait
aad
adc
mov
add
insb
or
mov
cltd
jecxz
sub
push
add
cmp
xor
fisubs
std
das
jno
inc
divb
mov
push
bound
adc
divl
sbb
push
mov
loope
dec
xchg
mov
mov
fwait
shlb
push
jnp
lret
aad
sub
xchg
jae
sbb
pop
lahf
jp
addr16
aaa
and
aam
mov
bound
in
inc
mov
jae
xor
sahf
cmp
inc
dec
push
out
clc
pop
or
inc
xchg
xchg
data16
mov
xchg
dec
es
les
pop
or
cmp
call
xor
sbb
cwtl
pop
sbb
mov
fildl
test
clc
pop
ljmp
xchg
push
dec
pop
addr16
ja
pop
call
adc
icebp
xchg
pop
and
xchg
jmp
add
jne
stos
stos
push
data16
inc
inc
stc
ljmp
popa
movsb
xor
cmpsb
fstps
cld
and
dec
cmp
mov
ljmp
push
sub
xchg
add
push
pop
fstpl
cmp
imul
stc
lea
lds
jns
sub
nop
mov
xor
gs
pusha
cmp
outsl
outsb
dec
cmp
adc
xchg
jnp
xchg
out
ret
pop
scas
jl
test
push
in
xor
sub
imul
adc
sbb
adc
push
sarb
sub
xor
jp
cmp
repnz
out
aam
push
xchg
imul
xchg
fnsave
mov
outsl
add
es
mov
xchg
aad
mov
or
lret
fists
mov
sbb
xor
pop
ds
int
les
sahf
add
cmpsl
in
hlt
jmp
sahf
jnp
inc
and
imul
mov
fwait
int3
jo
or
dec
push
jge
arpl
int
stos
sub
insb
daa
sbb
mov
and
lock
rolb
or
jp
and
in
in
lds
aam
imul
bswap
lret
inc
mov
loopne
lock
cmpsb
lock
int
adc
jmp
out
push
roll
std
mov
jle
in
add
pop
dec
mov
mov
push
sbb
and
icebp
cld
push
jecxz
mov
xchg
gs
leave
push
lods
pop
scas
jbe
pop
out
mov
ds
push
pop
mov
bound
imul
cs
std
cld
scas
adc
lret
js
cwtl
mov
sub
push
pop
lret
rcll
sarl
cltd
sub
pop
mov
jo
or
outsb
incl
mov
shrb
lock
in
outsb
mov
sbb
xlat
and
adc
mov
std
add
xchg
or
ds
sbb
jb
mov
inc
jmp
enter
inc
repz
jb,pn
nop
mov
out
xor
enter
iret
iret
jnp
das
mov
stc
in
push
lods
mov
jecxz
mov
dec
pop
shll
insb
jge
mov
adcb
dec
lods
and
int
add
mov
stos
enter
imul
repz
std
push
xor
out
jno
cltd
pushw
out
js
xor
dec
pop
stos
dec
lods
loop
loopne
movl
pop
mov
sbb
andl
push
add
push
jne
fcmovu
adc
insb
xchg
xchg
jmp
out
leave
nop
xor
mov
cwtl
lods
dec
sbb
jae
dec
leave
outsl
xor
inc
xchg
jns
push
test
xchg
mov
xor
mov
inc
jl
test
lock
popa
shrl
cmp
jno
data16
int3
xchg
fwait
in
out
nop
call
into
dec
std
cmp
int
ret
shl
iret
das
iret
jb
pop
inc
cli
mov
add
cli
pop
es
xchg
xchg
cmp
xchg
dec
stos
mov
pop
roll
adc
xchg
inc
cmp
cmp
loopne
pop
ret
bnd
xor
jg
fs
popf
cwtl
fstps
sbb
mov
repnz
adc
test
mov
lock
popa
xchg
ret
or
sub
mov
mov
dec
sub
daa
rcll
xlat
mov
jl
dec
das
ffreep
test
outsb
cmp
movsl
cld
clc
sub
ds
shll
scas
xchg
pop
or
mov
mov
aad
mov
ss
jmp
dec
mov
ret
xor
push
xor
ss
in
cmp
cwtl
movsb
xor
mov
ret
movsl
outsl
sbb
sahf
pop
pop
inc
mov
push
sahf
in
mov
push
inc
rep
cli
in
outsl
loopne
push
inc
lea
ljmp
jmp
mov
push
dec
jnp
cli
arpl
cltd
call
xor
inc
into
mov
xor
xlat
jnp
ds
jbe
mov
pop
cmp
dec
or
push
orl
popf
dec
stc
es
jb
fisubrl
imul
mov
into
ret
jp
outsl
sub
jmp
aaa
stc
mov
popf
int
mov
dec
dec
mov
lock
and
jae
add
inc
mov
dec
xor
inc
dec
xor
iret
sbb
shrb
outsl
mov
lret
rcl
js
imul
adcl
ljmp
push
lret
sub
insb
mov
movzwl
dec
push
push
mov
mov
outsl
push
aas
xchg
aas
jb
cmp
xor
loop
sub
dec
in
enter
xor
int
fbstp
ja
cmp
orl
mov
insb
movsb
mov
je
mov
hlt
aas
push
and
adc
adcb
and
and
adc
inc
outsb
cs
dec
hlt
adc
inc
scas
sub
sub
sub
mov
inc
mov
das
mov
sub
push
std
adc
orl
mov
mov
and
inc
ljmp
sbb
test
nop
lods
sbb
xchg
aaa
mov
cmc
shl
cmp
sbb
mov
mov
jbe
imul
jo
fcomip
inc
mov
push
xchg
sub
pop
int
scas
dec
test
cmpsb
lret
add
pop
add
and
scas
into
and
loopne
cmc
sub
arpl
loop
popl
sub
out
jle
das
sarb
xchg
push
dec
test
popf
dec
xchg
neg
stos
push
mov
push
xor
shr
sbb
test
jmp
jns
clc
dec
pop
lea
mov
out
and
pop
gs
mov
inc
push
out
cmp
and
push
xor
scas
pop
sub
sbb
xchg
xchg
outsl
fdiv
ret
push
pop
xchg
outsb
or
jns
cltd
mov
mov
push
fs
push
add
fildl
mov
xchg
mov
lods
or
or
aaa
repz
lods
sub
push
rorl
ja
and
push
stos
mov
test
fimuls
data16
ret
vsubss
icebp
popa
cmp
bound
jae
out
movsb
and
mov
or
adc
ljmp
in
jb
popf
cltd
rorl
loop
or
sub
push
and
out
jp
xor
call
faddl
fidivrs
in
into
loope
mov
sbb
adc
and
xchg
jmp
rclb
cltd
xor
pop
push
jg
mov
adc
dec
movl
or
inc
pop
bndstx
sub
cmc
push
addb
int
adc
xor
mov
sbb
in
adc
in
inc
ror
jbe
outsl
jne
push
xor
nop
pop
cmp
and
push
pop
fcomps
push
inc
loopne
movsl
ds
pop
jp
mov
or
mov
jg
cli
mov
cmp
xchg
ljmp
cld
inc
pop
sbb
push
in
incl
js
xor
daa
push
ffree
dec
adc
or
sbb
sbb
sbb
mov
mov
bound
fmulp
neg
sti
pop
xor
fistl
add
pop
es
jecxz
push
xchg
xchg
fistpll
ss
mov
divl
mov
lods
cmc
pop
jl
xor
cmp
pushf
pusha
mov
test
push
movsl
jne
imul
push
data16
xchg
imul
push
jbe
push
scas
fcmovnb
imul
popf
fcompl
addr16
aad
sbb
xchg
jbe
xchg
jle
jmp
mul
xchg
fwait
lcall
dec
or
arpl
xor
mov
inc
fs
push
xchg
mov
rcrb
sbb
lret
vpcmpeqd
jp
jg
movsb
mov
adc
sbb
andl
daa
cmpsl
adc
das
mov
mov
dec
add
add
in
pop
movsl
add
loopne
add
cmp
sub
call
shlb
and
loopne
loopne
jb
in
filds
out
rcrb
imul
sub
int
inc
test
xchg
jnp
sub
cwtl
jl
repz
and
je
sub
inc
mov
sti
mov
insl
movsl
call
pop
icebp
mov
push
add
xor
jnp
push
mov
jbe
pushf
jnp
aaa
pop
sarl
xor
pop
sub
sti
loope
mov
fistpl
inc
ss
jbe
and
jb
jnp
cmp
sub
lds
shl
cli
dec
loope
ficomps
fwait
pop
dec
mov
pop
sub
dec
push
mov
push
in
jae
cmpb
pop
jge
sbb
rcll
popf
stos
adc
nop
xchg
dec
mov
mov
mov
idivl
push
and
pop
xchg
enter
int
jge
pop
mov
clc
dec
pop
in
int3
enter
mov
jne
inc
pop
jae
mov
push
and
lods
mov
mov
push
bound
xchg
out
out
ja
mov
sbb
in
enter
xor
push
adc
or
cmp
outsb
cmpsl
loop
popa
clc
push
cli
loope
dec
mov
add
pop
or
mov
pop
push
int3
test
sbb
pop
inc
les
fmuls
inc
jne
cmp
sub
push
pop
outsl
mov
push
pop
shrb
adc
repz
mov
roll
test
iret
sub
push
xchg
cmpsl
test
xor
mov
shrl
sub
lcall
inc
test
dec
popa
movsb
pop
jle
add
pop
add
xchg
add
inc
jb
sbb
ja
mov
jo
xchg
inc
ljmp
out
inc
jle
dec
shrb
inc
fstps
inc
ds
outsl
and
scas
ret
push
push
pop
push
pop
adc
stos
xchg
sbb
pop
pop
mov
in
into
cmp
jmp
je
xchg
jbe
dec
stc
adc
arpl
pop
mov
mov
push
call
loop
add
mov
ja
js
mov
jae
jne
fldenv
or
xor
xor
add
add
push
insl
sti
push
stos
repnz
and
pop
mov
out
divl
lods
push
insl
add
negl
mov
out
xchg
clc
dec
lock
push
push
mov
xchg
sbb
sbb
mov
mov
iret
dec
and
jae
pop
inc
fistps
push
pop
sub
loop
out
lret
sahf
cmp
data16
jge
push
outsl
dec
stc
jbe
push
push
sbbb
in
aam
or
iret
or
imul
add
pop
fstl
shl
or
sub
mov
and
loopw
cmp
sub
mov
xorl
and
into
pushf
dec
aad
sbb
xorl
stos
xor
dec
cs
lods
push
pop
out
jmp
arpl
adcb
push
sbbb
jne
and
xchg
jp
and
push
jle
jg
mov
int
adc
es
out
es
daa
pop
lea
imul
js
pushf
cmpb
push
outsl
dec
mov
cli
insb
xlat
lods
mov
aaa
adc
pop
cmp
push
xorb
inc
les
sub
xchg
dec
gs
push
notl
lods
adc
xchg
cmp
mov
loope
fcmovnbe
inc
ret
xor
rorb
xlat
dec
cmp
aas
test
out
cmp
push
push
aad
rcll
pop
adc
or
xchg
sub
movsl
pop
lods
pop
jae
sahf
lds
into
aam
or
shl
cmpsl
sti
divb
sbb
insb
xlat
aaa
inc
lret
sub
ss
inc
sub
cmp
iret
int3
push
popf
data16
inc
test
loop
inc
fisubrs
cld
dec
mov
incl
sub
pop
call
or
mov
cwtl
add
add
push
cwtl
imul
test
enter
mov
fmulp
fisubrs
ret
lahf
jae
adc
jecxz
stc
into
pusha
xor
dec
addb
xchg
jns
jne
xchg
sbb
rclb
add
orb
imul
shll
push
pop
out
pop
mov
test
xchg
imul
inc
fisubs
popf
push
popa
imul
inc
mov
data16
jmp
sti
add
adc
sbb
aam
mov
and
mov
pop
loopne
out
adc
and
stos
add
and
out
das
mov
push
sbb
test
lock
mov
call
jbe
clc
andb
lea
cwtl
je
ficoml
icebp
sbb
xchg
out
lea
int3
nop
rorb
inc
imul
arpl
aam
jb
mov
dec
or
xor
movsb
pop
pop
or
cmp
icebp
shrb
mov
xchg
sub
pop
loope
addr16
and
mov
idivl
es
adc
lcall
or
xchg
cmp
cmpsb
lea
and
jae
xor
pop
lods
popa
lea
sbb
pushf
sar
jb
divl
and
adc
push
cmp
sti
and
shll
lcall
inc
jmp
loopne
inc
lods
dec
je
xor
add
call
push
mov
mov
outsl
sbb
adc
inc
lods
or
addr16
dec
mov
mov
std
fisubl
es
cmpsb
lahf
inc
xchg
cmp
inc
shlb
lods
jge
sbb
fisubrs
jmp
cmp
sbb
mov
or
mov
jne
inc
cld
or
add
sbb
adc
lret
rcll
jns
dec
mov
pop
mov
test
ret
jnp
roll
pop
inc
int3
stos
insl
fbstp
dec
imul
mov
ja
aaa
in
call
dec
pop
aam
sbb
imul
clc
push
push
ficomps
jns
push
push
mov
int3
add
pusha
stc
rorb
cs
loopne
adc
add
lret
aaa
cmc
dec
sub
mov
and
out
fidivrs
lods
jne
or
repnz
jp
lods
inc
sub
xchg
cmpsl
xchg
aaa
adc
add
cmp
pop
jae
stos
inc
cli
mov
adc
inc
out
mov
mov
in
lock
lcall
or
std
mov
xor
subl
lds
inc
rcr
adc
pop
sahf
imul
pop
aad
pop
ret
fwait
imul
imul
aaa
bound
lock
jge
and
jmp
lds
in
and
jns
out
ds
sbb
push
add
push
popl
add
loopne
cs
add
pop
aam
cmp
in
jo
cmp
inc
data16
in
add
mov
fldl
and
scas
xor
icebp
add
jecxz
mov
and
icebp
sub
inc
movsl
sub
pop
imul
ffree
cmc
push
xor
bswap
cmpb
jbe
and
xchg
cmpsl
jl
loop
mov
cmp
insl
ret
repz
inc
testl
mov
insl
xchg
jecxz
mov
mov
push
cli
out
mov
inc
addr16
jno
inc
cmp
or
sbb
mov
stos
insl
les
icebp
das
ss
xchg
enter
sub
inc
sbb
xor
orb
movsb
std
mov
movsl
test
movsl
inc
adc
movsb
cmc
jmp
sub
lock
jb
jl
cmp
push
mov
pop
push
push
pop
shld
cmp
cmpsb
in
xchg
sub
out
dec
mov
adc
and
int3
outsb
xorb
repnz
mov
ret
data16
into
pop
push
inc
sub
pop
inc
add
insb
das
scas
sbb
les
fsubrl
and
hlt
jp
cmp
insl
pop
negb
or
stos
or
add
mov
jecxz
adc
cmp
es
pop
mov
or
add
es
inc
pop
push
push
jnp
jle
hlt
pop
outsb
cltd
test
aad
pusha
imul
les
dec
fwait
std
cmp
jae
in
push
pop
mov
outsb
mov
sbb
mov
movsb
push
scas
dec
es
cmp
mov
inc
push
outsl
xchg
test
mov
shlb
mov
popa
rolb
cmp
in
inc
enter
inc
pop
lods
lcall
mov
or
jo
shr
adc
test
xor
mov
pop
mov
inc
xlat
pop
mov
mov
lahf
jl
mov
shrl
das
sub
inc
call
nop
inc
add
flds
out
adc
sahf
xchg
in
sub
shll
xorl
or
xor
icebp
out
jecxz
int
jl
jmp
or
inc
addr16
sbb
push
pushf
adc
or
jo
sub
repz
stos
int
adc
aad
inc
lock
mov
lea
pop
scas
movsl
mov
test
and
je
fsubrl
push
xchg
stos
pop
leave
pop
pop
and
xchg
xor
rorb
popa
mov
mov
in
sbb
xor
popf
add
mov
mov
ljmp
stos
iret
jno
shrb
sub
mov
sbb
cmc
lea
jae
or
test
xchg
notb
es
rcrl
jbe
stc
pop
pop
lods
les
cmc
sub
push
call
out
aam
iret
pop
inc
add
outsb
test
lds
pop
push
sti
cmp
mov
adc
xchg
jb
jnp
fsubl
mov
imul
jge
xlat
out
call
cmp
fcoml
add
lods
add
out
fisubl
xchg
arpl
fisttpll
mov
add
clc
sbb
fisubs
cwtl
mov
sub
mov
mov
sub
lds
inc
sbb
aas
int
lea
sarb
out
adc
cmp
inc
and
ljmp
mov
inc
adc
mov
mov
outsl
pop
fcomi
sub
cmp
xchg
mov
sbb
movsb
ss
aas
or
jno
mov
mov
cld
sbb
lahf
push
fcompl
jecxz
pop
push
push
daa
fsubrl
mov
es
ds
jp
mov
pop
pusha
into
enter
vunpckhpd
add
or
shll
and
dec
add
inc
js
push
mov
loop
lods
sub
mov
pop
out
push
movsb
push
sub
mov
fst
mov
push
fimuls
lret
and
xor
dec
pop
add
aas
dec
or
xor
xchg
adcl
addr16
xchg
ss
aas
fdiv
fstpl
push
and
nop
mov
inc
outsl
mov
mov
dec
repz
jnp
mov
mov
sarb
add
fimuls
jbe
icebp
sbb
jl
jmp
bound
xlat
sub
mov
or
adc
cmp
mov
mov
lea
jl
jnp
lods
imul
mov
cmp
mov
sbb
jns
dec
dec
push
fildl
add
ficoms
push
mov
stos
cmc
or
xor
mov
lret
scas
addr16
bound
add
mov
scas
pop
ret
cmc
clc
and
in
inc
fbstp
test
jns
or
add
inc
and
cmp
mov
mov
aaa
into
test
xchg
or
mov
repnz
inc
pop
daa
mulb
jl
sbb
mov
shll
xchg
in
mov
cli
or
out
push
xor
mov
ds
nop
ret
mov
fldcw
movb
xchg
push
lret
push
adc
out
test
pop
sub
sbb
and
nop
xor
mov
jo
aaa
repnz
inc
pop
arpl
jmp
repz
dec
pop
mov
ss
mov
add
and
jmp
mov
xor
rcrl
adc
ja
aam
sub
fld
popf
sbb
mov
xor
xor
js
pop
inc
cltd
inc
mov
fsubl
dec
std
sbb
stc
jmp
pop
fnsave
xchg
jnp
loop
stos
inc
mov
ret
inc
push
lock
cmp
lcall
int
test
shr
add
arpl
pop
adc
xchg
lds
adc
shlb
adc
call
sbb
xchg
sbb
pop
add
or
pop
daa
sub
aad
xor
jg
das
in
inc
scas
or
std
dec
in
mov
mov
mov
into
ja
fst
inc
xor
push
mov
int3
sti
cmp
sbb
jp
pop
sbb
cmp
sub
pop
jno
mov
dec
lcall
ffreep
sbb
movb
pop
inc
push
sub
adc
inc
mov
aas
push
add
push
hlt
in
inc
icebp
loopne
pop
xchg
std
dec
leave
sbbb
adc
test
mov
in
repz
int3
repz
mov
jbe
lret
or
mov
mov
pop
out
pop
shr
sub
mov
push
sbb
sub
shrl
cmpsl
repnz
mov
cmpsb
fs
daa
mov
or
push
or
shlb
pop
jno
les
repnz
mov
sarl
cmp
aad
or
cmp
cltd
add
pop
push
out
or
fstpt
rol
sbb
sbb
lret
popa
jae
ljmp
je
ficoml
lret
sbb
nop
stc
push
mov
int3
or
js
sbb
mov
push
icebp
mov
test
call
stos
sbb
jmp
or
xor
int3
mov
clc
sahf
hlt
mov
rclb
pushf
mov
xchg
sbb
hlt
add
ficoms
jne
sbb
push
cwtl
shl
movsl
inc
pop
inc
jb
mov
stos
or
and
mov
mov
mov
push
or
rep
fmul
mov
rolb
cltd
jo
out
dec
jns
add
les
cmp
or
lea
push
mov
add
jmp
jbe
jbe
xchg
mov
scas
mov
stos
mov
cmp
je
stos
xchg
and
fisubs
mov
hlt
push
push
sub
ja
pop
lcall
mov
push
shll
test
jno
pop
insl
cld
mov
mov
pop
stos
cmp
je
dec
mov
dec
jg
cmpsl
fdivrl
inc
dec
pop
insb
notl
jmp
push
or
dec
pop
jo
push
in
jns
pop
xor
cld
dec
xlat
movsb
or
push
es
ret
daa
pop
pop
in
jle
mov
fstps
push
fisubrl
jecxz
inc
and
xor
mov
cmp
pushw
dec
roll
or
stc
scas
mov
jo
mov
out
jecxz
ja
data16
dec
mov
out
cmpsb
inc
or
push
lods
cmp
push
mov
sti
fcoms
in
nop
inc
jb
jl
std
or
stos
or
fdivrs
lods
sbb
loop
shrl
dec
mov
rclb
fisttpll
or
pop
and
sub
fiadds
ror
mov
fcmovu
lret
std
jecxz
sti
js
adcl
iret
rclb
mov
sbb
rcrb
out
aaa
mov
cmp
cmpsb
xor
pop
jbe
ret
lds
insl
mov
push
add
je
xor
mov
imul
fldl
outsb
data16
sub
ret
outsl
out
xor
lods
aaa
lcall
ret
ficomps
mov
pop
pop
addl
cmpsb
fimuls
jb
lret
imul
mov
inc
lea
dec
jb
and
jb
fnstcw
addr16
mov
mov
pop
lea
out
jg
mov
jne
fsub
into
pop
stos
fisubs
cmpsl
dec
or
pop
outsl
and
push
mov
xchg
jle
out
push
mov
mov
sub
outsl
into
mov
and
dec
cld
movsb
pop
ja
cmpsl
enter
test
cmp
iret
loope
pop
mov
sbb
or
es
loopne
je
lods
inc
mov
cmp
pop
fldt
cld
jne
push
jl
pop
cltd
leave
mov
popf
unpcklps
scas
aas
mov
repz
xchg
aas
adc
sbb
insb
mov
xor
fmuls
jg
push
mov
dec
popa
aaa
cmp
cli
push
or
in
dec
mov
sbbl
mov
cmp
sbb
scas
popa
adc
std
mov
adc
ja
pop
je
mov
sarl
jle
mov
sbb
dec
lret
movsb
movsb
cmp
sub
lds
sub
jnp
add
mov
add
es
adc
cmp
mov
mov
rorb
sub
mov
inc
outsl
push
loopne
std
sbbb
std
fdivrs
dec
push
outsb
lods
pop
movsb
fucomip
and
inc
mov
fmuls
fiaddl
mov
imul
shll
sbb
cmc
push
inc
sub
cmp
jbe
shl
ss
rclb
data16
adc
sbb
push
cmc
push
aaa
into
setg
out
lcall
mov
adc
out
bound
inc
inc
push
std
dec
int
outsl
jb
fadds
xor
clc
rcrb
mov
or
sbb
cmp
in
outsb
popf
dec
or
xor
daa
call
mov
sbb
idivl
inc
xchg
adc
add
jbe
mov
xchg
ja
cmpsl
jb
cmpl
push
xchg
jnp
cmp
lea
je
pop
lods
mov
sub
add
les
rorl
stos
stos
push
cmp
data16
mov
adcb
sti
dec
orl
xor
lock
out
push
or
jle
sbb
mov
mov
in
xor
add
jecxz
sbb
je
out
popa
cmc
or
or
mov
adc
test
pop
loop
inc
fadd
cltd
rcrl
sbb
mov
lods
roll
jge
jmp
push
pop
cmp
orb
iret
mov
push
repnz
jo
imull
shll
or
cmp
aam
mov
mov
cs
mov
insl
jg
or
xor
jb
mov
je
push
adcl
loopne
sarl
frndint
leave
push
cmp
outsl
insl
xchg
shrl
mov
lcall
jnp
adc
lret
cld
mov
push
dec
pop
ret
mov
mov
rclb
mov
push
into
pop
in
lods
into
insb
sahf
repnz
cmpsb
push
jmp
xor
das
stos
clc
push
sbb
mov
mov
mov
push
out
dec
ja
das
sbb
jb
mov
inc
sub
sti
push
leave
add
dec
xor
and
sub
test
mov
out
add
xor
fwait
sub
dec
repnz
xchg
dec
xor
mov
fiaddl
xchg
lret
psrld
test
or
rcr
push
mov
xor
mulb
push
pop
pop
push
mov
mov
addr16
es
popf
sub
pop
icebp
cmpsb
xor
ljmp
mov
add
out
and
and
clc
dec
insb
pusha
push
call
mull
icebp
fbld
cmc
xor
jp
mov
mov
xor
sbb
dec
inc
jne
sub
mov
lahf
cwtl
xchg
lcall
je
add
ret
dec
mov
loopne
xor
lock
cmpsl
fsubrl
push
xchg
push
mov
bound
mov
and
enter
popf
dec
adc
mov
in
movb
mov
xchg
pop
xor
in
mov
enter
mov
cmp
mov
mov
lahf
jne
cmp
inc
jecxz
test
pusha
push
cmp
xchg
adc
dec
xor
dec
xchg
and
jp
mov
sub
sub
push
push
mov
mov
test
test
jo
inc
jae
or
ljmp
adc
shll
push
mov
in
push
mov
arpl
out
adc
xchg
sbb
pop
sub
jecxz
nop
pop
outsb
js
mov
xlat
pop
subb
out
mov
sub
mov
jb
mov
mov
sti
adc
adcb
cmc
sti
cwtl
pop
hlt
and
xor
xor
jno
adc
out
xchg
inc
mov
xchg
sbb
xchg
lods
bound
and
and
mov
shrl
testl
push
fwait
mov
pop
add
mov
in
inc
icebp
pop
nop
sub
decl
ret
out
cli
push
insb
in
les
or
mov
fwait
add
pop
adc
outsb
shl
stos
orb
inc
rolb
dec
push
out
rcr
sub
test
arpl
xchg
leave
stos
adc
lds
mov
cmp
or
dec
push
lahf
stos
adc
inc
cmp
cmp
test
xchg
ds
pop
pop
insb
xchg
pusha
inc
mov
push
call
enter
xchg
xor
adc
fwait
lds
sarb
fistps
mov
jo
xchg
hlt
in
xchg
subb
in
ss
mov
adc
inc
dec
pop
daa
xchg
or
mov
bound
push
aam
pusha
mov
mov
push
xchg
test
lods
movsl
add
mov
jmp
or
pusha
cmp
jle
dec
fcoms
addl
test
mov
sub
xchg
mov
hlt
mov
inc
sbb
push
cmp
or
sub
stc
loope
lret
shlb
lahf
mov
lods
jmp
das
fldt
dec
jo
cmp
push
sub
jmp
pusha
hlt
loop
cltd
hlt
idivb
jbe
mov
inc
ljmp
mov
daa
loope
and
fwait
or
mov
dec
pop
inc
xor
inc
int
jno
movsl
movsb
adcl
or
xor
lret
mov
dec
push
inc
out
xchg
aas
outsl
outsb
adc
xor
stos
std
out
rolb
imul
pop
ret
shrb
xchg
pop
andb
mov
mov
mov
jge
mov
dec
dec
dec
lahf
push
out
add
out
pushf
repz
and
add
or
notb
mov
in
dec
or
sbb
xor
repnz
sbbl
das
rcl
or
sub
ret
es
inc
sbb
pop
cmp
call
stc
push
out
lea
mov
cmpsb
xor
and
xchg
or
sub
psubw
filds
xor
not
mov
push
test
popa
or
cmpsl
jl
mov
xchg
into
mov
js
mov
push
ljmpw
dec
xchg
lea
dec
clc
test
or
jecxz
out
loop
and
negb
sbb
xchg
adc
pusha
fmul
je
nop
fistl
fiaddl
stos
jmp
cld
idivl
cmp
repz
cmc
xlat
ss
mov
ljmp
mov
pop
push
cmp
aad
data16
jmp
dec
ficompl
jp
orl
imul
pusha
mov
jg
popa
bound
jg
and
jb
adc
xchg
fimull
sub
dec
mov
pop
adc
push
icebp
mov
loope
pmulhw
stc
mov
call
lock
mov
cmp
movsb
push
and
out
es
jo
stos
gs
dec
fs
pop
and
daa
mov
roll
fdivl
call
jp
sbb
shlb
mov
iret
sub
mov
fcmovb
sub
mov
mov
pop
stos
push
or
shll
mov
mov
cwtl
aam
ds
insl
fsubl
mov
mov
mov
cs
push
leave
idivb
or
bound
mov
mov
jns
fstpt
adc
cmp
push
shll
push
loopne
shrb
sahf
scas
clc
stos
loop
popf
xchg
aaa
inc
inc
rclb
icebp
add
rcrl
pushl
test
aam
jmp
inc
xor
xor
cwtl
or
mov
imul
sti
rol
mov
bound
cli
orl
and
inc
add
enter
and
pop
sub
pop
xchg
jmp
dec
jbe
insb
repz
pop
movsl
orl
xlat
ss
fs
lea
icebp
push
mov
ret
mov
fisubl
pop
in
pop
and
pop
dec
pop
jno
mov
xchg
xchg
clc
mov
mov
shl
into
mov
leave
pop
in
cmp
sub
pop
loope
dec
int
and
or
std
push
xor
addl
push
pop
stc
mov
out
jne
cmp
add
mov
js
cmp
push
mov
imul
mov
movl
cwtl
mov
add
inc
adc
pop
fisubl
sbb
mov
cmp
rcl
arpl
leave
adc
notl
fnstcw
fisubrl
aaa
repnz
das
sbb
lcall
push
xor
push
out
out
and
sahf
cmp
paddusb
mov
sbb
cli
inc
iret
jle
push
sub
sbbb
imul
sbb
or
sbb
int3
cmp
push
add
xchg
mov
pusha
out
push
jno
cmp
test
nop
mov
push
cltd
stos
lods
orl
mov
out
or
scas
fldlg2
and
xchg
or
arpl
push
testb
mov
inc
push
push
inc
arpl
aas
in
cltd
xchg
pop
mov
sarl
cmp
roll
adc
stos
notb
jecxz
mov
andl
and
lcall
cmp
and
in
jmp
jl
push
in
push
shlb
js
adc
mov
gs
cli
pushf
cmp
mov
cmp
xchg
pop
sbb
xorl
mov
push
sbbl
outsl
jno
dec
lret
and
iret
push
jp
sbb
jg
jbe
fcoms
push
adc
mov
jecxz
ja
xchg
xchg
inc
shrl
fs
arpl
push
mov
pop
sbb
push
xor
insb
xchg
sbb
mov
inc
fidivrl
nop
fldl
or
add
push
out
rolb
push
idiv
fisttpll
xchg
icebp
jmp
fcmovb
dec
cld
mov
pop
cmp
adc
mov
cmp
push
and
jnp
test
jbe
push
inc
mov
mov
outsl
test
jns
xchg
sbb
and
dec
mov
cmp
jno
dec
shl
or
pop
dec
andl
mov
loop
pop
xchg
add
xchg
add
push
or
xor
test
jp
xchg
jg
mov
mov
adc
jg
sbb
xor
cmpsl
les
mov
pop
push
mov
jecxz
sub
imul
push
xchg
adc
inc
inc
mov
aad
mov
pop
sub
xchg
jb
paddsw
mov
int3
cmpsl
lock
mov
out
mov
pusha
adc
mov
xchg
cmpb
sbb
jns
mov
les
xor
mov
jae
aam
mov
xlat
inc
sub
mov
push
ja
fimull
sub
and
xor
add
push
cmp
imul
loopne
sub
cltd
pop
and
mov
and
mov
repz
pop
mov
dec
push
mov
loope
ficomps
and
ds
scas
mov
mov
jle
dec
pop
adc
aas
lcall
rclb
jo
fsubrs
rorl
push
cmpsb
mov
insb
jl
gs
popa
sti
and
jbe
sti
xchg
movsl
cs
loopne
daa
stos
adc
or
jge
cmp
add
lods
jns
lret
negl
lcall
lahf
out
adc
push
in
popf
sub
sub
and
and
and
insl
test
mov
mov
cmpsl
pop
addb
das
add
cmp
mov
ja
sbbl
pop
out
xor
out
and
add
loopne
jne
mov
push
fiaddl
sbb
pop
ficoml
sbb
in
pop
rsqrtps
pop
pop
pop
xlat
das
push
adc
or
add
xor
les
dec
jns
and
pop
rclb
xchg
fcomps
es
adc
rorb
push
xchg
or
mov
inc
sbb
jae
pop
ljmp
pop
ret
cmp
shll
push
dec
sahf
sub
enter
pop
xchg
loope
and
fcoms
lea
adc
mov
inc
aaa
cli
fistpl
inc
jle
xchg
dec
mov
jl
out
jnp
inc
scas
sub
pop
sbb
imul
movl
aam
addl
fdivr
mov
mov
mov
mov
sub
jg
and
mov
movsb
jbe
or
mov
lcall
xor
and
out
jmp
rolb
lds
loope
shlb
lds
xlat
cmp
divb
ja
rorl
fs
push
addb
dec
call
cmpsl
sub
and
xchg
push
add
add
fidivrs
imul
adc
in
xchg
hlt
dec
leave
ror
imull
subb
push
aas
ss
and
pop
ret
pop
pop
inc
inc
inc
jg
out
daa
sbb
mov
scas
sbb
js
cli
popf
jbe
je
mov
pusha
dec
mov
mov
dec
les
xchg
jns
pop
out
add
add
jae
insl
xor
mov
pusha
aad
movsb
jb
out
stc
bound
mov
rcrb
fadd
inc
mov
pop
sbb
cs
cmp
mov
shll
loopne
or
dec
mov
and
mov
jmp
popa
popf
ds
ja
push
sbb
nop
xor
add
movsb
pusha
mov
add
pop
sub
fwait
mov
xchg
movsb
mov
pslld
mov
imul
add
lock
popf
push
inc
mov
cmp
jnp
cmpsb
ret
mov
cmp
add
icebp
jmp
adc
and
mov
sbb
xchg
testl
adc
add
negl
jge
fwait
std
xchg
mov
loop
not
repz
lea
cs
addr16
lahf
mov
outsb
jmp
jo
outsl
ret
sub
cmpb
lds
notb
stos
cld
add
xchg
iret
ret
into
dec
mov
dec
cltd
cmp
sbb
cwtl
call
dec
mov
jmp
and
pop
loop
inc
xor
adc
test
in
dec
dec
mov
sahf
sti
hlt
push
aaa
mov
cmp
sbb
popa
cmpsb
idiv
clc
rcr
ja
lret
test
push
out
pop
and
pop
leave
negb
xchg
sar
in
cmc
loop
nop
cmp
ja
dec
sbb
lods
xchg
hlt
mov
shlb
enter
xor
push
out
sahf
cmp
sbb
movsb
data16
out
adc
or
dec
int
shrl
push
jo
sub
call
push
cmp
add
addr16
daa
jle
or
pop
es
jo
push
jnp
xchg
js
add
insl
leave
xor
scas
pop
dec
lret
lods
xor
push
sub
xchg
js
test
repnz
dec
mov
adc
dec
sub
imul
mov
das
pop
test
adc
or
mov
outsl
xchg
sbb
cmc
adc
aam
loop
xor
adc
sbb
aam
test
das
jnp
arpl
insl
andl
and
adc
jns
xchg
testb
scas
dec
xor
into
mov
mov
or
shl
scas
push
ficoml
dec
das
pop
adcl
into
dec
xchg
rcrb
or
mov
or
xchg
rorl
rcr
sub
pop
mov
sub
cltd
insl
aaa
jo
mov
mov
in
enter
cltd
or
mov
push
orb
popa
or
mov
in
out
test
pop
mov
xor
push
js
xlat
cmp
add
adc
sub
mov
repz
mov
js
lret
dec
mov
mov
sub
enter
out
test
xor
shlb
scas
add
jmp
hlt
lret
jg
adc
fdecstp
pop
sub
outsl
imul
xchg
mulb
mov
jl
sub
mov
daa
add
addr16
sub
cmp
cmpsb
pop
repz
sbb
mov
and
rorl
and
jo
lock
hlt
mov
aaa
xor
jb
push
inc
js
and
pop
test
in
cwtl
mov
xor
repnz
call
mov
add
js
out
ja
dec
jbe
inc
jbe
xor
mov
cmp
mov
insb
outsl
ret
jbe
push
stc
stos
push
lret
inc
or
cmp
testb
lea
or
ret
imul
in
xchg
daa
push
sbb
mov
lret
jae
or
cli
mov
or
jg
and
out
xchg
dec
imul
neg
mov
cltd
in
adc
loope
lods
jecxz
inc
rcr
fdivs
mov
mov
mov
scas
sub
add
mov
test
lret
jae
inc
or
in
test
jno
mov
ret
ret
dec
popf
jne
loopne
mov
mov
leave
int3
cli
out
ret
cmp
int
inc
aad
iret
lods
mov
stos
push
fisubs
call
mov
cltd
fwait
enter
push
mov
mov
jne
sbb
xchg
gs
mov
sahf
push
pop
adc
test
cs
lret
and
xor
inc
sub
xor
jecxz
jne
cmpsl
aaa
and
jo
test
outsb
pushf
push
aad
cmp
pop
loopne
hlt
mov
cltd
adc
sbb
or
jno
arpl
sahf
aaa
pop
sub
int
sbb
sbb
test
flds
cmp
mov
dec
and
rcll
jnp
adcb
inc
repz
adc
inc
or
in
scas
sub
in
cmpsl
jmp
out
dec
or
or
dec
cmp
daa
mov
add
testl
xor
jmp
test
cld
outsb
cmp
sub
xchg
out
jle
or
cmp
cmc
sarb
int3
push
add
jo
lcall
lods
faddp
cli
push
fsin
mov
jb
cmp
push
or
mov
jecxz
cld
out
mov
fadd
xor
arpl
sub
in
push
imul
repz
push
dec
stc
xchg
popf
add
imul
jb
cmp
in
iret
imul
aaa
addr16
mov
adc
les
pusha
jo
jle
mov
adc
sti
pop
adc
stos
cmp
js
sbb
cmp
lods
cltd
xor
xor
dec
mov
call
imul
xchg
test
call
xchg
push
mov
outsw
cmp
js
mov
lods
cmp
inc
mov
xor
add
lock
jbe
fcmovnb
xor
inc
mov
cs
or
fucomip
jecxz
xchg
ja
pop
jmp
daa
mov
adc
insl
add
pop
fimuls
iret
push
mov
pusha
mov
jle
lcall
pop
add
mov
add
loope
jnp
dec
mov
cltd
daa
dec
and
dec
movb
push
xlat
sub
dec
fwait
dec
pusha
mov
and
ret
mov
xchg
xor
xor
add
xchg
push
lea
aam
push
hlt
jg
aas
out
mov
sub
icebp
and
xorb
mov
cltd
sbb
shrl
mov
bsf
adc
pop
ss
jne
fwait
loopne
pop
cmc
mov
arpl
fistps
psllw
mov
in
dec
rcll
xchg
ljmp
test
cltd
lods
das
testl
push
mov
xorl
int
pop
push
mov
cmp
xor
fsubp
push
pop
data16
mov
jmp
stc
mov
mov
mov
xchg
mov
sub
sub
xor
sub
iret
pop
daa
je
int
repnz
xor
sub
arpl
decl
push
xlat
in
push
scas
push
sbb
mov
fnstsw
call
lods
packsswb
mov
cmp
inc
and
repnz
pusha
xor
xor
push
ret
iret
sbb
sbb
inc
in
mov
mov
outsl
jge
adc
fisttpll
sub
dec
shlb
jbe
pop
andb
fs
jg
adc
sbb
in
xchg
roll
xchg
scas
sti
mov
sahf
mov
xor
mov
dec
out
in
enter
add
push
jg
ss
dec
lds
xchg
int3
shrl
pop
jl
jbe
sbb
lahf
fprem
dec
sub
fsub
adc
mov
push
push
ja
sbb
scas
xchg
jns
xchg
stc
mov
ja
into
lods
and
pop
pop
cmpsb
fstl
scas
fisttpl
jbe
into
in
add
mov
push
add
fisubl
shrb
jge
push
hlt
dec
mov
sti
sbb
inc
stc
jns
pusha
imul
aad
mov
mov
arpl
out
jnp
dec
into
dec
cmpsl
fiadds
adc
into
fwait
sbb
aad
jno
sar
test
and
insb
je
gs
add
jnp
adc
or
and
or
loope
mov
pop
aam
inc
and
mov
lret
dec
cs
rcrb
xchg
jno
jno
mov
push
or
adc
das
imul
popl
push
aam
das
adc
inc
scas
inc
push
or
xchg
std
push
add
repnz
sub
mov
push
jnp
je
jp
add
lret
neg
shll
inc
add
test
xchg
faddl
je
pusha
int
xor
in
mov
mov
mov
pop
cld
xor
aad
push
add
xchg
ja
mov
pop
mov
repnz
push
lcall
and
outsb
adc
and
and
addb
sbbb
xor
in
bound
mov
xchg
pop
rorl
clc
cltd
rcrb
jp
xor
cmp
and
mov
filds
mov
jno
inc
out
cmpsb
dec
sub
pushf
fdivl
xlat
ret
mov
lret
cmp
cmc
add
gs
mov
xchg
aas
jns
test
test
and
stos
lahf
pusha
adc
fldenv
lods
into
aam
xchg
test
pop
xor
dec
sub
mov
jbe
fdiv
imul
mov
movsb
lock
cmp
call
aas
cli
clc
aaa
jo
jge
fld
xchg
test
inc
mov
frstor
jnp
xchg
push
std
mov
lret
pop
sahf
pushf
enter
dec
cmp
imul
push
scas
fsubs
pop
int3
add
mov
pop
psrld
cmp
loope
mov
in
insl
in
loope
cmp
jns
add
aaa
int
cmc
and
xchg
fnstcw
jmp
xchg
mov
mov
sbb
mov
mov
cld
repz
clc
std
or
or
gs
lret
repz
xor
nop
cltd
shrl
rcrl
out
sub
jnp
sub
aas
xor
mov
and
dec
push
pop
ret
sub
dec
div
adc
fwait
xchg
call
sub
adc
out
xor
aaa
sbb
jo
cmp
xchg
stos
fnstsw
cltd
cld
sub
negl
cmp
shlb
xor
xchg
sub
lcall
scas
leave
scas
sbb
sbb
dec
xor
jecxz
sbb
dec
imul
repz
adcb
mov
pusha
ljmp
test
add
scas
and
pop
or
pop
lods
aam
inc
xor
daa
test
in
bound
pop
cmpsb
add
int
pop
loope
and
dec
nop
xchg
or
icebp
mov
push
lahf
into
sub
xor
in
sbb
mov
mov
inc
inc
jp
sbb
inc
sub
adc
insl
movl
int
loop
leave
mov
xchg
jmp
ret
mov
sub
loopne
mov
push
leave
sub
sub
mov
outsb
xlat
dec
dec
stos
inc
jmp
sar
daa
xchg
add
js
xor
mov
iret
inc
adc
les
lock
test
cld
lods
cmp
jnp
dec
clc
xor
xor
adcl
idivb
ds
lods
imul
jl
jae
xor
in
inc
and
pop
ret
xchg
add
cmp
popa
push
pop
xchg
push
add
mov
cwtl
stos
lcall
jno
mov
xor
push
mov
jmp
sbb
dec
or
jns
xchg
test
xor
lcall
es
sub
jge
push
push
movsb
insl
mov
fs
out
xchg
dec
mov
xchg
xchg
cltd
mov
test
test
int
xchg
push
sahf
mov
mov
xchg
int
popf
test
insb
les
in
lcall
ss
mov
mov
mov
and
mov
push
call
out
hlt
fidivrl
sub
mov
call
sbb
mull
gs
push
cli
or
xchg
mov
rcr
xlat
fcomip
inc
std
jno
xor
lret
js
pop
sbb
sub
mov
xchg
add
cmp
sub
into
jl
test
es
fs
ret
test
push
dec
or
jb
cmp
aad
xor
pop
out
bound
mov
mov
fs
lretw
ret
cmpsb
orl
adc
shrl
cmpsb
jnp
dec
shlb
test
add
inc
in
mov
jne
aaa
mov
lea
call
xchg
and
lods
or
or
xor
add
adc
cmpsb
es
inc
stos
sub
sti
loop
leave
mov
mov
out
scas
aad
fwait
pop
xchg
jge
mov
repz
movsb
ja
mov
cmp
mov
adc
sub
xlat
mov
mov
mov
popf
xchg
mov
and
inc
aad
fs
std
shrb
movsb
lcall
pop
xor
adc
cmp
mov
xor
sbb
jmp
outsb
sub
repz
jb
arpl
sti
leave
pop
ret
das
push
inc
pop
sahf
aad
mov
shlb
push
cmc
fisubrl
push
mov
jns
inc
dec
mov
cmp
fcom
inc
sub
mov
addr16
in
hlt
jbe
data16
stos
into
push
pusha
dec
fsts
mov
mov
hlt
or
fdivrs
mov
test
xchg
loop
aam
adc
andl
shlb
cmpsb
adc
pop
inc
lods
cmp
bound
mov
icebp
mov
cmpsb
xor
leave
nop
sbb
push
sub
jg
dec
inc
rorb
loope
pop
call
ss
les
mov
scas
mov
adc
cmp
daa
inc
rcrl
das
mov
out
adc
out
jmp
in
pushf
and
or
daa
fnclex
inc
sub
sahf
push
pop
jecxz
fimuls
inc
jl
or
jp
jmp
nop
in
lahf
xorb
mov
xchg
pop
jge
cli
sahf
xchg
xchg
mov
cwtl
call
call
mov
rcll
add
push
movsl
xchg
mov
dec
in
lret
data16
dec
stos
mov
sbb
adc
dec
add
cmp
add
mov
sbb
aad
std
pop
jecxz
sub
dec
das
fmuls
or
add
mov
pop
nop
jnp
push
call
xchg
clc
and
dec
mov
add
int
inc
stc
mov
mov
sub
imul
hlt
imul
adc
testl
ret
movsb
cwtl
cvtdq2ps
pop
ljmp
jge
fsubs
add
sbb
sar
dec
xlat
call
test
lahf
dec
push
pop
jge
lcall
js
jbe
dec
ds
insl
jne
repnz
dec
inc
sti
dec
mov
movb
ja
in
pushf
dec
lret
cs
fldl
pusha
and
cmp
data16
into
adc
and
clc
cmpsl
bound
addb
pop
and
addl
add
xchg
movsb
cmp
testb
outsl
scas
push
orb
push
and
shrl
dec
pop
lods
std
cmp
inc
cmp
xchg
mov
mov
mov
pop
mov
lret
sbb
add
movsl
fnstsw
fs
divb
fwait
js
cmp
jp
nop
in
addr16
mov
pusha
or
jmp
test
lcall
cmpsb
push
into
nop
push
cmc
sarl
outsl
dec
sbbb
lea
repz
adc
and
add
dec
in
ja
insb
adc
xor
push
cmp
xor
sub
cmp
ja
jae
pop
dec
insl
jne
imul
jb
andb
xor
add
or
adc
paddsw
xchg
and
mov
jo
frstor
inc
movsb
ljmp
push
jmp
and
push
mov
adc
shrb
or
dec
and
xchg
scas
nop
fucomip
or
dec
int3
repnz
cltd
cltd
fs
aam
mov
sub
gs
leave
inc
pusha
ret
sbb
jl
xchg
daa
pusha
push
lods
cmp
mov
dec
dec
xor
cmpsb
and
loope
adc
cld
mov
dec
and
outsl
jl
inc
inc
addr16
ret
sub
in
mov
mov
mov
cmp
adc
arpl
icebp
xorb
or
push
test
in
loope
cmc
mov
xlat
pop
mov
push
or
out
mov
int3
mov
nop
xchg
dec
scas
int
enter
adc
adc
fisttpll
inc
fldt
out
jmp
mov
jo
shrb
pop
and
int
cli
outsl
bsf
xor
push
mov
rolb
cmp
rcr
xchg
in
bound
push
fildl
aas
into
imul
leave
pop
pop
in
dec
icebp
hlt
arpl
cmc
out
cltd
dec
dec
into
jbe
push
or
xchg
add
ljmp
mov
fsubr
inc
addr16
clc
push
loope
xchg
lahf
mov
into
adcb
arpl
xor
in
pop
jg
push
stc
dec
dec
xchg
clc
pusha
lahf
je
mov
xchg
notb
dec
imul
insb
aad
ljmp
pushf
xchg
stos
mov
clc
mov
pushf
fcomps
outsl
push
enter
xor
repz
scas
jle
xchg
jle
lds
sbb
je
xor
cmpsl
rolb
mov
fcmovnbe
int
addr16
push
push
aam
inc
inc
and
xor
inc
push
sbb
xchg
push
stos
in
into
mov
sbb
insl
mov
xor
fisttpl
pop
in
cli
cmp
mov
ljmp
jbe
mov
lods
push
jmp
out
xor
ficoms
xor
leave
push
push
and
cmp
dec
loopne
scas
lds
or
mov
or
mov
andl
sbb
rcrb
xor
jge
and
pop
loopne
sahf
jmp
or
jb
mov
ljmp
nop
mov
push
push
pop
scas
xor
ljmp
pop
out
mov
inc
and
fdiv
lods
push
test
lret
push
pusha
pop
xor
xchg
dec
inc
add
dec
pop
inc
cs
and
shll
jae
pop
xor
cmp
ds
in
repnz
lds
xor
je
in
dec
push
and
inc
aaa
repz
inc
jecxz
pop
mov
mov
test
cmpsl
mov
jne
fstpl
scas
mov
imul
jns
pop
ret
push
leave
lret
xor
or
mov
jecxz
mov
ret
pop
pop
cmp
rcll
in
cmpsl
aad
daa
shrl
lods
xchg
jo
mov
jb
xlat
cmp
or
movsl
or
adc
lret
cs
ficoms
adc
lods
or
xchg
clc
fidivrl
push
insb
xchg
jbe
xchg
lahf
mov
mov
das
nop
nop
inc
inc
inc
lock
mov
je
dec
dec
xchg
ret
loopne
adc
enter
push
mov
enter
mov
adcb
movsl
mov
movsb
out
and
dec
and
dec
jl
into
dec
insb
jo
in
gs
mov
clc
ja
mov
push
jle
enter
mov
mov
popf
sarb
mov
andl
xor
adc
mov
imul
movsb
pop
fisubl
outsw
pop
xlat
mov
and
bound
pop
nop
or
jle
mov
imul
adc
div
je
dec
sbb
and
bound
repz
jnp
scas
pop
loope
mov
cmp
sti
scas
sbb
lret
frstor
test
test
and
jle
mov
orl
fstpl
adc
sbb
mov
lcall
mov
push
js
mov
pop
es
imulb
push
in
jl
movsl
xchg
iret
pusha
inc
pop
mov
out
rep
movq
push
imul
jnp
cs
out
scas
hlt
scas
jecxz
pop
jae
mov
xlat
push
dec
in
ss
call
and
mov
inc
fimull
and
lods
jmp
fisttps
jp
out
sub
and
jnp
sbb
jno
mov
stc
ja
lods
int
into
stos
xor
mov
push
add
or
sub
iret
shlb
cli
subl
and
cli
dec
jle
into
fistl
ret
into
mov
push
mov
mov
outsb
mov
cmpsb
sarl
clc
lods
xor
rcll
mov
arpl
sub
fisubrl
mov
mov
add
mov
movsl
pop
add
mov
inc
cld
mov
imul
or
cmp
push
stos
sti
rcl
in
lret
pop
push
addr16
mov
cmp
jno
mov
rcrb
call
cmc
das
lods
daa
shrb
popf
stc
xchg
imul
cmpsl
out
adc
sub
div
stos
pop
js
cltd
stos
xor
xor
cmpsb
cmp
push
shlb
and
xchg
cs
movsb
cmpsb
mov
mov
inc
jl
xor
int3
gs
shrl
push
push
fidivs
mov
sbb
xchg
push
js
aaa
inc
adc
sbb
inc
jno
jmp
xchg
adc
xchg
js
test
clc
stos
stos
cs
movsb
in
scas
jns
clc
popa
sub
mov
in
add
mov
xchg
addr16
xor
stc
mov
sbb
in
gs
push
add
xor
jno
insl
das
ja
jo
cs
roll
add
cwtl
sbb
mov
sub
adc
insl
pop
dec
cld
das
jne
cmp
add
jae
mov
xor
mov
or
invd
fwait
inc
roll
jno
imul
sbb
push
stos
stc
test
mov
or
inc
lods
add
faddp
mov
cld
xchg
add
and
add
aad
movhlps
inc
adc
push
pushf
cmp
loop
jmp
xchg
sbb
and
and
icebp
cltd
adc
cmp
mov
xchg
mov
xchg
jns
ret
dec
push
or
dec
les
jecxz
fbld
xchg
inc
adc
jo
add
repnz
mov
add
mov
jo
or
test
pop
inc
cmp
mov
clc
mov
aas
xchg
in
and
mov
pusha
out
arpl
ja
aad
and
mov
lods
sub
insb
pop
adc
sub
hlt
or
pusha
fs
cwtl
dec
cmp
pushf
aad
mov
ret
xor
inc
jge
ficompl
push
cmpsl
jp
fs
cs
and
lock
fadd
push
or
imul
cltd
or
pop
adc
xor
adc
adc
loope
cltd
fistps
sbb
push
cltd
es
movsl
sub
add
push
pop
call
sarl
inc
add
addr16
mov
sti
stos
inc
aas
dec
nop
lcall
mov
lock
or
lds
in
jg
adc
add
mov
call
inc
mov
dec
fdivl
es
dec
dec
push
pop
lret
and
add
xor
cs
xor
jne
notb
cmp
sbb
gs
hlt
dec
sarl
inc
inc
pop
fisubrl
pop
push
mov
push
pop
sti
xor
mov
test
mov
mov
adc
lret
add
clc
das
push
cmp
inc
cmpl
add
sbb
jae
movsl
pop
jns
lcall
cli
push
daa
hlt
mov
cltd
in
fistl
pop
std
mov
lcall
mov
mov
fwait
or
jl
popf
cmp
sbb
mov
cmp
pop
xor
shlb
push
sub
icebp
jmp
aas
mov
das
les
pop
call
mov
jmp
loopne
xchg
clc
adcl
mov
add
inc
adc
psllw
adc
sti
scas
les
and
outsl
jge
imul
cmc
sbb
push
mov
cltd
rcrb
stos
push
jle
push
jns
mov
insl
dec
or
mov
xor
loope
rcrl
or
add
sbb
add
loopne
lcall
fwait
in
cli
xchg
in
inc
mov
or
pop
push
dec
out
pop
cltd
testb
push
pop
pop
repz
insl
push
mov
dec
es
les
jg
out
mov
je
mov
jecxz
inc
pop
or
add
scas
stos
shrl
mov
sbb
dec
jo
mov
lea
les
fnstcw
xchg
fwait
into
xchg
mov
sub
jp
cmp
xchg
decl
push
in
and
pop
ja
push
daa
inc
test
push
push
and
pop
icebp
sti
mov
aas
loopne
idivl
mov
mov
addr16
add
jmp
in
movsl
sub
adc
sub
adc
inc
xchg
in
jae
in
mov
cwtl
in
inc
popf
mov
or
xchg
int
sahf
sub
cmpl
adc
and
std
jnp
in
adc
mov
dec
out
cmp
in
add
fs
sahf
xor
adc
mov
outsb
pop
sub
push
xchg
and
in
mov
ret
stos
xor
fisttpl
aas
push
pop
clc
loopne
sahf
push
les
push
sub
shll
push
sub
rorl
xor
jge
xchg
rorl
jmp
fwait
or
push
jp
jge
lock
lcall
mulb
add
loopne
cmp
mov
lret
xor
jno
dec
fimuls
inc
icebp
test
jne
jg
loope
sub
push
mov
lods
outsb
inc
mov
mov
ret
mov
data16
loopne
pop
mov
into
add
movsl
or
stos
in
adcb
mov
xchg
lods
fcoml
loopne
icebp
fcmove
hlt
packsswb
or
mov
int
xchg
inc
mov
inc
jb
mov
loope
cmc
lret
rol
dec
jo
aaa
mov
scas
mov
mov
data16
es
lods
mov
popf
lea
inc
mov
lods
and
add
int3
xor
dec
in
inc
out
inc
std
xchg
mov
ficoml
scas
aaa
jmp
inc
jns
popa
arpl
sarb
call
cmpsl
mov
sbb
adc
ss
pop
push
rclb
test
and
jb
aaa
aad
jle
xor
or
push
pop
in
add
popa
std
xchg
inc
and
imul
in
push
adc
lea
mov
mov
mov
pop
mov
pusha
pop
cmpsl
dec
cs
inc
scas
adc
cmp
jge
cmp
push
xor
scas
jle
inc
dec
fldl
movsl
pop
xchg
psubsw
jnp,pt
iret
lods
dec
cld
mov
aas
add
out
adc
xchg
leave
jle
jmp
adc
pop
jg
iret
mov
cmp
adc
sub
mov
js
gs
outsb
sub
pop
adc
jmp
jmp
test
lods
add
mov
adc
dec
inc
xchg
pop
lock
cld
xchg
das
out
dec
mov
arpl
test
jno
pop
in
adc
stc
sbb
xor
cmp
adc
xchg
xchg
mov
idivl
cmp
lea
jae
mov
ret
in
orb
test
cmp
and
inc
stos
fadds
inc
jnp
pop
sbb
ret
loopne
lds
fs
test
pushf
stc
inc
sbb
mov
adcl
push
scas
mov
add
mov
dec
xchg
ds
popa
add
mov
sub
icebp
sub
lcall
test
decl
mov
aas
fwait
add
or
ror
imul
test
fcoml
sub
push
ficoml
mov
jno
dec
in
pop
mov
cmovg
pop
jb
jp
mov
imul
testl
push
fildll
sbb
push
push
insl
int3
xchg
je
xchg
or
inc
rcr
push
jg
mov
andl
imul
sub
dec
inc
fs
inc
pop
adc
xor
sub
fmul
xchg
xor
xchg
mull
aad
push
adc
mov
ss
and
pop
adc
or
lods
mov
mov
pusha
and
andb
sbb
popf
pop
test
mov
pop
pusha
inc
out
testb
sbb
sbbl
lock
shrl
inc
pusha
add
add
push
mov
mov
nop
rorb
add
outsb
jns
aaa
jmp
add
push
push
leave
mov
rcrl
rcrl
lods
mov
sub
repnz
arpl
insl
sbb
testl
les
xchg
mov
xchg
xor
cmp
sub
inc
mov
movsl
pusha
mov
cs
clc
fs
int
xor
ret
push
data16
sbb
mov
pop
mov
sbb
out
xor
lea
jno
popa
add
pop
je,pt
mov
ja
or
pop
test
sub
popa
pusha
xor
cld
mov
mov
dec
in
push
cmp
pop
test
or
mov
sbb
fcomi
pusha
daa
sti
mov
in
fldl
inc
push
sub
pop
insb
subl
or
mov
push
sti
add
fcom
out
jb
adc
ds
push
or
inc
lret
ja
mov
fisttpl
insl
icebp
sbb
push
into
daa
pusha
pop
pop
lret
insb
stos
add
lods
adc
push
jp
jns
in
dec
in
div
xchg
cmp
in
xchg
je
les
add
cs
cmp
imul
or
mov
rolb
adc
xchg
sub
sti
push
cltd
sub
jg
iret
insl
jmp
in
fadd
adc
lods
inc
dec
xor
cmpb
cmp
cmp
pushf
push
pusha
jns
dec
and
dec
rcrl
jae
pop
pushf
loop
mov
mov
or
insl
add
movsb
pop
dec
pop
cmp
push
push
mov
test
rorl
arpl
cld
cmp
out
les
mov
scas
popf
mov
in
out
or
xchg
pop
mov
arpl
addr16
mov
mov
xchg
fwait
cmp
adc
and
mov
leave
pop
xchg
push
cmp
lds
clc
out
lcall
dec
jno
adc
mov
cmpsl
enter
pop
popl
and
xchg
cmp
cmp
js
adc
xor
add
jmp
cwtl
xchg
pop
loopne
dec
xchg
into
xor
xor
stos
mov
cmp
add
push
mov
dec
xor
filds
test
orl
xchg
mov
pop
jle
hlt
xor
pop
and
pop
cmp
es
mov
or
add
mov
inc
in
cli
test
sub
mov
xchg
inc
sbb
sub
inc
das
pop
popf
jnp
mov
mov
add
cmp
inc
lret
cli
mov
cmpb
mov
in
sahf
mov
icebp
addr16
decl
scas
or
inc
pop
cld
popa
lret
xlat
pop
leave
stos
jns
adc
int
clc
addr16
test
in
roll
push
push
scas
lret
cmpsb
outsl
cmp
leave
xchg
outsl
add
cmp
xchg
xchg
jp
cwtl
jp
mov
xchg
pop
jmp
imul
mov
xchg
inc
int3
sub
cmp
stos
jno
int
jl
fbstp
in
aas
in
add
loope
enter
and
push
pop
and
pop
adc
dec
xor
movsb
pop
xchg
movsl
aad
scas
push
cli
mulb
dec
ljmp
add
push
in
mov
add
leave
jne
jle
pop
mov
enter
test
je
and
xchg
into
pop
xor
loope
dec
scas
outsb
mov
jb
pop
in
ds
mov
imul
lds
sub
cmpsb
cmp
dec
pop
pop
add
sahf
insb
dec
scas
xchg
int
xor
sbb
pop
pop
insl
out
outsb
sub
lock
push
mov
fisubrl
out
in
fdivr
pop
sub
add
dec
clc
rcll
clc
sbb
fisubs
mov
fwait
scas
push
into
xchg
clc
xchg
add
or
xchg
dec
sub
cltd
sbb
pop
enter
sbb
xchg
loope
mov
cmp
lock
or
pop
or
inc
sbb
test
sbb
cltd
scas
fwait
mov
add
pop
in
inc
adc
jb
movsl
dec
pop
sbb
mov
cwtl
cmp
aad
pop
out
mov
pop
test
inc
fxtract
filds
lock
stos
mov
fdiv
xchg
or
fmull
insb
lcall
mov
and
daa
ljmp
xchg
jne
ja
mov
pushf
test
sub
cmp
and
xlat
dec
sub
add
fldcw
les
add
push
imul
push
pop
and
xchg
jp
test
mov
xchg
mov
or
push
aad
pop
sbb
ja
pop
dec
dec
stos
and
scas
sub
add
sbb
clc
rcrb
pop
xor
scas
sahf
jnp
cmp
cld
mov
push
xchg
mov
pop
push
or
stc
push
add
sahf
les
push
lds
jae
xlat
xchg
je
rcrl
inc
cmp
insl
mov
xor
int3
jb
daa
xchg
fstp
cltd
fcmovb
stos
mov
fldl
mull
push
enter
or
push
shrb
inc
xchg
pop
in
jmp
fsubrl
fimull
mov
inc
inc
and
and
mov
adc
in
les
xor
je
mov
mov
sbbl
xchg
mov
cmp
xchg
sub
lods
jp
and
mov
add
adc
xlat
or
mov
inc
enter
loopne
jge
lea
cld
out
out
out
arpl
xchg
jae
mov
movsb
push
mov
pop
sub
ffree
les
fs
ffree
mov
sub
xchg
jge
xor
jae
lcall
cli
and
xchg
cmc
mov
inc
or
loop
mov
pusha
fmull
dec
outsl
movsb
rol
in
iret
xor
mov
test
add
dec
mov
mov
jno,pn
stos
lock
out
mov
pop
and
je
fwait
adc
and
sti
mov
pushf
pop
dec
jle
xor
pusha
testb
mov
adc
pop
sbb
sub
test
inc
cli
inc
fwait
add
jbe
add
test
or
pop
ds
mov
aas
pop
fildl
ss
test
adc
jge
cmpsb
test
cmp
sbb
push
shll
shlb
mov
lret
cmc
test
inc
pop
lret
mov
lods
clc
iret
int3
mov
sahf
insl
mov
movl
std
sarl
mov
nop
cld
xchg
movsl
cld
ja
cmp
xor
lret
mov
rcll
mov
int3
dec
add
jb
daa
mov
mov
push
orl
sub
dec
aad
pop
leave
cld
mov
mov
mov
push
cmpsb
adc
insb
xor
pop
in
cmp
jecxz
cwtl
les
push
ret
lret
cwtl
push
push
pop
lods
in
test
addb
push
adc
inc
mov
outsl
out
lcall
sbb
mov
hlt
out
addr16
out
shlb
mov
mov
push
sbb
mov
cwtl
lds
adc
lods
mov
mov
adc
xor
dec
mov
or
lds
mov
dec
lahf
push
mov
mov
lods
jl
adc
ss
sub
std
jno
push
push
xchg
out
dec
inc
push
aas
push
push
xchg
mov
cld
cmpl
adc
mov
jmp
fxch
sub
cmpb
inc
xchg
mov
ret
mov
lret
pop
loopw
add
cmp
dec
mov
xchg
aas
ret
int
mov
mov
xchg
cmovs
stc
dec
sbbb
mov
mov
push
out
or
xchg
sbb
jecxz
dec
adcb
or
and
and
pop
rorb
insl
stos
push
popf
icebp
mov
mov
es
sbb
push
mov
jg
mov
adc
sbb
mov
sub
inc
cltd
testb
daa
clc
movsl
sbb
jo
addr16
push
ja
mov
pop
outsl
sbb
or
push
std
or
roll
ret
cld
inc
sub
shlb
xchg
sbb
jb
mov
movsl
and
ret
mov
shll
xchg
loopne
and
loope,pt
push
loopne
rcll
sbb
test
pop
and
into
scas
test
fs
push
sahf
lds
mov
xor
call
jb
sub
sbb
dec
pop
jl
dec
repz
xchg
test
inc
arpl
out
mov
and
imul
xor
cmpsl
inc
adc
rcl
cmp
jae
xchg
sarb
aaa
imul
add
ret
mov
xchg
dec
xor
and
orl
jl
adc
aas
mov
sbb
loopne
mov
std
push
jmp
fmuls
pop
shlb
push
inc
stos
adc
adc
or
insl
repnz
jno
aam
lea
jl
mov
mov
cli
into
cmpb
out
jp
jmp
push
mov
mov
smsw
out
xchg
xchg
lods
mov
inc
sbb
xor
repz
test
xchg
or
dec
xchg
js
int
addr16
push
xor
test
sbb
push
sbb
aad
lock
mov
jle
add
adc
cmpsl
div
pop
cmp
cwtl
adc
icebp
movsbl
xchg
and
adc
cltd
adc
ds
lds
shrb
mov
test
aam
push
jge
imul
push
and
shl
outsb
xor
inc
push
add
stc
xlat
cs
or
mov
mov
sub
into
stos
fildl
xchg
jge
add
repz
jnp
cmpsb
repnz
push
lock
std
repnz
out
dec
add
mov
xchg
mov
int
cmp
adc
inc
xchg
sub
fcmovne
adc
cmp
jnp
jns
fists
pusha
out
inc
mov
insb
fneni(8087
mov
pop
sbb
jo
xor
mov
fs
jl
pop
movsb
xchg
scas
dec
mov
cmp
push
mov
xchg
sub
sbb
xorb
pop
xor
add
adc
mov
imul
and
stos
dec
mov
pop
iret
sbb
in
sbb
dec
cmp
data16
jp
mov
xchg
movsl
and
dec
orl
addr16
sbb
pop
outsb
sub
js
jp
movsl
sbb
xor
fsubl
insl
popf
lret
pusha
fdivs
dec
sbb
rorl
sbbl
lcall
push
imul
dec
jb
ss
outsl
enter
popa
push
std
push
loopne
out
shll
jp
add
sbb
in
inc
imul
test
ja
hlt
mov
ret
sub
dec
add
jmp
stos
push
imul
cwtl
pop
mov
lea
push
jb
and
dec
subl
xchg
fstl
mov
dec
cwtl
jp
hlt
das
add
leave
mov
sti
jno
add
loop
pop
mov
mov
stos
sub
inc
sub
xchg
or
sti
leave
lods
stos
andb
sub
mov
or
mov
stos
shlb
xor
pop
out
jp
mov
sbb
inc
pop
jge
ret
or
sub
mov
add
pop
sti
cmp
cli
pop
xor
inc
roll
xor
jge
adc
xor
jmp
sub
nop
test
xchg
cmp
iret
jae
mov
and
mov
mov
rcl
or
adc
jle
cli
push
jb
movsl
or
jbe
in
pop
lcall
push
mov
lock
mov
insl
pop
pop
repnz
rorl
pop
mov
into
popf
jns
icebp
loope
cmpps
add
mov
shl
leave
add
rclb
arpl
ja
jp
push
js
and
dec
xor
and
mov
and
mov
mov
std
das
xor
aas
inc
jne
mov
dec
scas
dec
nop
add
mov
fisttpll
repnz
push
sbb
stos
mov
or
loope
xchg
out
gs
dec
or
or
lods
xor
roll
test
repnz
cmp
aad
int
cmp
push
add
cmp
pop
mov
and
fcmovnu
and
or
mov
mov
or
leave
addr16
movsl
dec
and
sbb
jecxz
lock
or
out
lcall
xorb
hlt
stos
imul
xlat
jge
stos
movsb
rclb
cld
pop
mov
jmp
gs
xchg
sbb
loope
stc
out
outsl
adc
ror
fmull
fwait
sub
inc
insb
pop
repz
fwait
mov
enter
pop
mov
cli
push
cmp
hlt
in
mov
push
sbb
adc
adc
fisttpll
pop
xor
xlat
imul
imul
adc
and
pushf
les
cmpsb
dec
imul
hlt
push
xchg
into
dec
mov
inc
xchg
pop
movsl
xor
je
gs
rclb
pop
sbb
lret
or
fidivrs
inc
xchg
neg
pop
mov
xchg
out
sub
test
inc
daa
mov
aad
mov
in
stos
imulb
cmpsl
stc
jp
push
sub
test
jno
enter
xor
mov
pop
subb
leave
cmc
xchg
sbb
repnz
sub
outsb
es
mov
pop
mov
ret
mov
lods
rcr
test
scas
or
mov
dec
adc
add
lcall
pop
faddp
lret
sbbl
dec
push
cmp
cmpsb
popf
mov
xor
hlt
mov
pop
cmpsl
iret
pop
popf
out
add
or
inc
leave
mov
cmp
shr
pop
push
fldlg2
pushf
int
pop
mov
imul
sbb
test
push
mov
fisubrl
pushf
mov
add
test
adc
dec
test
xor
xor
mov
xchg
call
test
pop
or
pop
adc
mov
xchg
jae
iret
adc
mov
xor
stos
mov
adc
adc
outsl
stos
add
xor
mov
mov
inc
aaa
jge
push
rcrl
sbb
push
das
cmc
inc
sub
xor
xchg
popf
icebp
and
cmp
mov
pop
cmp
test
ret
add
shll
in
inc
lret
outsl
out
pop
scas
jns
jmp
jmp
xor
mov
daa
push
ficoms
cmp
xchg
clc
mov
outsb
dec
int3
jnp
into
inc
xor
gs
mov
mov
jl
ret
cli
loope
sbb
cmp
fs
outsl
xchg
stos
push
in
adc
aaa
add
jmp
insl
dec
jno
inc
repz
mov
clc
inc
jb
mov
fsts
sahf
xchg
adc
aas
in
mov
das
lods
push
pop
lock
sahf
pop
inc
into
sbb
cmp
insl
mov
inc
and
jne,pn
imul
xchg
push
xchg
and
daa
fisubl
sti
mov
adc
les
xlat
jecxz
mov
xchg
in
jne
cmovs
sub
xor
cmp
inc
aam
jmp
fstpt
jae
xchg
in
mov
shrb
sahf
scas
xchg
adc
hlt
aad
push
xlat
mov
mov
cli
sbb
cmp
mov
sub
cwtl
lods
mov
xchg
xor
mov
je
push
cmp
out
add
imul
popa
and
pop
in
adc
nop
mov
mov
sub
das
loope
dec
fisubrs
mov
int3
lcall
pop
push
sbb
movsl
sub
push
in
sub
inc
cmp
inc
cs
loopne
or
push
imul
sahf
jb
jg
clc
in
xor
cmpb
mov
add
jbe
adc
jle
sub
lret
add
out
cmpsb
dec
out
pushf
push
out
sub
loop
mov
imul
sbb
fadd
sub
and
cli
rclb
fnsave
push
push
add
jae
test
jle
xchg
imul
xchg
adc
sbb
icebp
dec
into
adc
sbb
pop
movsl
enter
cmc
inc
insl
ja
dec
cmpsb
test
sub
inc
push
in
dec
jmp
xor
push
ljmp
inc
sbb
ljmp
incb
jnp
mov
adc
pop
nop
add
fimuls
std
cld
ss
push
repz
jge
shll
iret
mov
popa
push
lret
leave
jp
rep
mov
popa
pop
mov
std
jno
imul
clc
lcall
in
scas
push
inc
aam
push
fs
outsl
xchg
pop
pop
ret
or
lods
rorl
rclb
lods
addr16
pop
nop
jnp
xorl
pushf
popf
sbbl
or
or
sahf
je
shll
sub
divb
je
inc
test
mov
xor
push
and
cmp
push
and
adc
fmulp
pop
cmpsb
adc
adc
sub
push
movl
lods
in
lock
mov
pop
nop
addr16
int
jnp
jge
push
pusha
js
push
hlt
jb
shll
inc
mov
jb
mov
pop
mulb
xchg
fiaddl
mov
xchg
pop
lea
push
adc
mov
arpl
cmp
add
push
cmc
mov
xchg
sbb
pushf
dec
bound
pop
dec
outsl
cld
stos
inc
push
gs
pop
aad
mov
pop
pop
imul
push
shlb
sbb
in
test
mov
and
sub
out
or
pop
sbb
leave
roll
pop
pop
loopne
gs
aaa
aad
inc
nop
mov
sub
repz
xor
hlt
push
mov
je
jns
sub
ficomps
js
xor
xor
imul
ds
cmp
sahf
mov
in
scas
pusha
xor
pop
cld
leave
leave
dec
fcom
fiadds
pop
sub
scas
push
mov
adc
testl
ljmp
inc
push
push
jnp
cmp
out
xchg
xor
pop
mov
mov
jge
jne
lret
sub
test
xadd
adc
loopne
jb
cmp
add
cmc
fwait
cmp
cmp
cmp
mov
or
mov
sbb
call
adc
push
mull
iret
cmp
pop
xor
pusha
sahf
mov
mov
icebp
cmp
cmp
xchg
fdivl
jmp
scas
lret
pop
ret
add
das
mov
xchg
cmp
push
push
rolb
scas
pop
les
push
les
movsl
jo
adc
sbb
stos
scas
in
fmull
add
repnz
cmp
cmp
iret
or
pop
mov
shlb
pusha
loopne
loopne
into
adc
pop
xlat
bound
out
jl
int
cmp
jnp
adc
test
into
leave
cs
mov
lret
fcoml
push
cmpsl
loopne
cmpsl
test
stos
nop
mov
jne
cwtl
sbb
pop
les
inc
movsl
notb
inc
mov
dec
xchg
lcall
rcl
aas
insl
adcl
sbb
pop
insl
pop
insb
icebp
outsl
cli
imul
test
mov
lock
mov
cld
pop
jno
push
mov
jbe
test
jb
pop
or
outsl
icebp
aad
shrb
mov
pop
aam
out
push
push
jge
adc
clc
dec
out
mov
jae
xor
cmp
aaa
ss
clc
mov
dec
pusha
fnstenv
int
sbb
xchg
ss
das
mov
mov
or
or
loop
test
mov
sub
jl
dec
test
cs
call
movb
jno
sbb
adc
in
fimull
cwtl
xor
add
arpl
arpl
fwait
clc
and
add
divl
adc
xor
adc
pushl
test
push
sbb
pop
push
xor
xchg
lahf
out
pop
inc
cltd
adc
repz
mov
vcvtss2si
ficoml
shrb
enter
in
xor
repnz
pop
mov
mov
fs
xor
sub
and
pop
add
roll
pop
add
dec
fildl
sti
cmpsb
es
fisubs
push
push
ljmp
push
cmp
pop
lcall
into
mov
mov
mov
iret
or
adc
mov
or
lea
xchg
push
mov
nopl
mov
inc
xor
ss
add
int3
mov
sub
or
nop
xchg
ds
cmp
nop
cmp
fwait
notb
mov
and
push
jg
lds
xor
jnp
mov
fnstcw
inc
dec
jmp
jb
dec
add
sub
cwtl
in
es
iret
pop
xor
test
sbb
movsb
std
push
je
insb
aam
ja
and
inc
jno
movsl
cs
roll
cmp
fdiv
pop
jne
mov
pop
sahf
inc
jmp
sub
sub
inc
xchg
pop
test
iret
dec
cli
lds
jp
lods
adc
adc
popa
dec
adc
mov
cmp
imul
mov
fstps
xor
dec
jge
dec
aad
pusha
sbb
cmpsl
lds
out
loope
lret
xchg
pop
sbb
loopne
mov
push
dec
dec
jne
mov
lret
push
mov
sub
ja
out
cwtl
mov
imul
clc
mov
xchg
les
pop
aas
xchg
imul
xlat
das
mull
lahf
pop
stos
mov
adc
rdmsr
ret
xchg
shll
push
mov
dec
adc
mov
pushf
fildl
pop
nop
xchg
mov
add
push
rol
add
mov
pusha
mov
pop
jo
inc
bound
cmp
movsl
dec
test
push
xor
inc
push
in
sti
pop
jno
cmp
jg
xchg
push
shl
and
or
sar
int3
adc
xor
nop
lea
add
adc
dec
jns
inc
sbb
repnz
adc
arpl
adc
icebp
repnz
and
adc
dec
es
movsb
jnp
inc
push
sub
lret
aaa
loopne
pop
push
pusha
out
adc
shrb
mov
jg
in
jns
xlat
cmp
stc
outsl
iret
cmp
xor
daa
loop
mov
jae
dec
out
ret
push
ss
aaa
pop
cmp
and
xor
push
jnp
out
fidivl
cld
into
sbb
inc
xchg
out
loope
cmp
xor
pop
repz
loopne
andb
add
inc
fcmovb
jp
xchg
inc
movsb
dec
divb
dec
and
inc
or
xor
push
add
add
or
fsubrs
cld
ja
pusha
mov
mov
xor
or
jle
ror
int
fs
inc
sbb
leave
mov
adc
add
jle
add
pop
and
push
mov
push
stos
repz
daa
lret
pop
in
xor
arpl
aas
sbb
mov
dec
repnz
cmp
pop
xor
ss
push
das
popa
call
cmp
sbb
outsl
fcompl
movl
mov
push
lods
leave
daa
sbb
mov
adc
xor
loop
jno,pn
and
fnstsw
pop
fs
pop
pop
loopne
cltd
push
xchg
cmpsb
mov
sbb
cmp
cmp
mov
cmpsb
jnp
call
pop
sti
in
add
loop
or
push
mov
aam
sbbl
sbb
ss
mov
jae
xchg
pop
mov
test
stos
sbb
inc
cmpsl
inc
push
mov
xlat
stos
loopne
lods
test
aaa
sub
inc
mov
xor
xchg
sub
repz
lahf
xchg
mov
ftst
jmp
jp
fninit
mov
in
pop
lret
mov
mov
fwait
aam
sub
hlt
popa
inc
jno
scas
test
enter
xlat
ret
push
or
sub
mov
add
dec
mov
push
dec
mov
fisubs
mov
fidivl
pop
fnsave
cmp
cmp
dec
mov
negl
push
adc
xor
inc
pop
mov
cmp
jecxz
adc
movsl
xchg
inc
adc
push
cmp
jp
jnp
je
pushf
cltd
test
xor
add
out
lods
pop
sub
mov
jns
xchg
push
cmp
push
test
gs
push
sbb
mov
nop
mov
and
add
xchg
sub
popf
xor
dec
mov
pop
push
arpl
pop
imul
cmp
inc
sarl
mov
repnz
test
jp
shlb
jbe
adc
jo
fsubl
inc
adc
movsl
and
xor
pop
add
add
out
lea
pop
fisubs
into
sbb
adc
fcmovnb
sub
pop
movsbl
push
xchg
movsl
bound
jmp
jmp
push
mov
cld
cmpsl
fwait
xor
xchg
leave
imul
sbbb
das
push
and
dec
nop
mov
adc
mov
mov
lcall
adc
sub
in
imul
mov
xlat
sti
cmp
pop
add
push
cmp
into
fistps
inc
je
scas
icebp
push
adc
mov
and
test
pop
push
cmp
or
outsl
jge
mov
in
sbb
insw
inc
xchg
adc
test
xor
dec
push
and
outsb
lret
inc
iret
mov
addr16
sub
xchg
ret
or
stc
lcall
cmpsl
mov
sub
mov
pushf
cmp
pop
jmp
lods
pop
loop
ljmp
pop
mov
in
pop
jns
mov
mov
push
mov
inc
xchg
lahf
xchg
subl
data16
sub
add
into
jmp
jp
and
inc
lods
js
jmp
shll
sub
setae
xor
cmp
in
inc
push
dec
test
push
mov
lret
in
inc
xchg
dec
dec
js
or
aaa
adc
in
dec
jp
fidivs
dec
or
cmp
jmp
pop
pop
test
xor
dec
mov
cmp
jne
rorl
xor
imul
jecxz
push
in
sub
mov
cmp
cmp
bound
pop
cltd
pop
jmp
ret
adc
push
cmc
pop
fistpl
or
fs
mov
add
fisttpl
xchg
dec
jnp
iret
jg
mov
mov
cmpsb
mov
fsubr
out
jle
cs
mov
icebp
mov
sub
fstps
scas
std
inc
int3
lret
pop
push
mov
mov
pop
es
sbb
lahf
lahf
scas
addr16
or
mov
cs
sarb
je
cmp
mov
inc
clc
cmp
js
ja
int
cmp
dec
pop
adc
into
out
imul
shll
in
jp
dec
les
movsb
xor
stc
fbstp
jmp
repnz
pop
outsb
lock
aaa
loope
mov
mov
cs
xchg
pop
mov
jmp
hlt
mov
push
xchg
sub
movsb
mov
pushl
sub
mov
sbb
cmpsl
jge
xor
bound
and
jmp
jnp
pop
mov
out
and
repz
mov
imul
int3
in
scas
xor
push
test
repz
outsl
out
xchg
dec
and
mov
xchg
push
adc
mov
add
repnz
hlt
out
or
push
add
out
dec
add
ret
outsl
in
out
sbb
sub
clc
int
pop
ss
lods
pop
xlat
or
sti
adc
mov
sub
dec
cld
cmp
repnz
lock
mov
pop
and
mov
inc
adcl
lock
out
mov
imul
or
mov
insl
mov
loop
xchg
hlt
inc
sbb
xchg
out
mov
pop
jbe
mov
inc
mov
xchg
dec
and
rclb
push
lcall
xlat
inc
mov
jbe
loopne
enter
pop
int
aaa
cld
loop
pop
mov
mov
mov
cld
dec
imul
movsl
push
loopne
cmp
int
jp
lcall
fs
cmp
loopne
jmp
mov
mov
int
pushf
ficoms
pop
xchg
aam
rol
xchg
mov
call
dec
xor
movsl
repz
std
test
pushf
pop
jge
mulb
mov
xchg
jb
out
fcmovne
sbb
imul
xchg
pop
inc
xchg
sbb
shrb
arpl
int
inc
leave
jecxz
fwait
lret
mov
mov
outsl
insb
fsubrs
punpcklbw
fists
dec
insl
jnp
pop
movsb
cmp
adc
push
loop
lock
shrl
icebp
mov
inc
xchg
lret
pop
pop
shrl
push
jle
test
call
xchg
or
and
ljmp
stos
pop
nop
int3
cmc
hlt
push
mov
cmc
xchg
fcmovnbe
jns
lods
push
jmp
cmpsl
sti
xchg
popf
xor
shlb
or
pop
rep
sbbl
stos
add
inc
mov
push
adc
inc
and
adcb
iret
daa
cmp
sub
or
adc
repz
mov
loopne
test
pushf
push
mov
cwtl
xor
cwtl
insb
inc
or
enter
xchg
mov
scas
push
imul
imul
rorb
addl
add
xor
sub
and
je
mov
fcos
dec
dec
add
out
adc
sbb
dec
fisubs
xchg
pop
dec
incb
test
in
test
jecxz
mov
ss
inc
mov
or
mov
addl
cwtl
bound
mov
or
cmp
adc
mov
push
mov
lods
mov
das
cmp
fadd
imul
fisubrs
addr16
mov
in
mov
pop
inc
rol
shl
ss
prefetch
repz
mov
mov
repz
std
int3
xlat
push
fxch
lret
lods
fnstcw
jmp
in
adc
in
movsb
pop
cmpsb
scas
inc
add
mov
xchg
xchg
cltd
push
xchg
jmp
sub
or
fs
xchg
ficomps
mov
loope
mov
xchg
push
sub
test
xor
loope
xchg
hlt
xchg
mov
adc
mov
push
push
fisttpl
xchg
hlt
cmp
repz
cmpl
jp
mov
rolb
enter
shlb
pusha
push
adc
xor
in
les
xchg
je
cli
jg
xor
pop
stos
pop
push
hlt
lods
push
int
fisttpl
mov
loope
pusha
and
lock
iret
jl
inc
inc
loope
jae
loopne
pop
movsb
adcl
mov
jae
leave
rorl
mov
loop
fsubl
adc
jb
shll
clc
out
rorb
push
insb
lea
jo
lret
icebp
fdivrl
pop
ficoml
iret
jmp
cmp
in
bound
jmp
mov
mov
icebp
ljmp
or
sbb
xchg
jo
push
shlb
out
inc
fsts
or
pushf
xchg
push
sub
mov
or
xchg
std
inc
ljmp
sahf
sub
js
repnz
or
add
xor
jno
sub
js
cmc
jns
mov
sub
test
mov
pop
xchg
rclb
enter
sub
in
aas
test
je
lock
sbb
xor
enter
pop
loopne
das
jb
psllw
lret
sub
sub
mov
jb
mov
push
inc
jns
popa
lds
mov
or
sbb
ljmp
adc
jno
adc
aad
sub
inc
pop
stos
push
jb
push
push
std
adc
sahf
outsl
jns
cli
cs
fwait
imul
stc
dec
xchg
cld
cmpb
test
pop
xchg
std
pop
jno
xchg
cs
popf
les
sahf
sub
lret
cltd
rol
xor
arpl
add
xor
int
loop
fsubrl
or
xchg
inc
shl
ja
inc
mov
repnz
cmpsl
push
push
repnz
fisubl
dec
insb
inc
jmp
inc
mov
mov
fcomip
jae
push
popa
sub
mov
stos
int
repz
daa
sbb
add
shlb
xchg
pop
outsb
ss
loope
mov
ret
jp,pt
sti
mov
in
fadds
movsl
mov
addb
xlat
push
sbb
pop
jae
or
xor
scas
repnz
cmp
cmpsl
jmp
es
and
mov
je
test
add
sarl
cmp
mov
cmp
mov
xor
pop
adc
mov
loopne
adc
in
jp
testb
mov
dec
pop
jo
imul
xchg
in
call
mov
lods
outsb
in
push
pop
fstp
sbb
pop
cltd
stos
cli
aad
movsb
ds
mov
jb
add
nop
repnz
leave
mov
imul
xchg
add
outsb
mov
adc
mov
adc
sti
repnz
xchg
rcr
aas
popl
cmc
pushaw
cmp
int3
std
jg
mov
adc
sub
mov
fimull
sbb
cld
xchg
mov
imul
aaa
push
lcall
jmp
pop
jge
movsl
inc
imul
lds
mov
push
xchg
cmp
sbb
les
loop
and
cwtl
or
mov
and
ja
sub
pop
rcl
das
addl
and
sbb
push
in
mov
cwtl
mov
or
jno
shl
fsubrs
ljmp
test
jns
jb
mov
push
lea
mov
aam
rcll
adcl
mov
bound
and
leave
and
or
inc
ret
and
bound
xor
jnp
jg
jb
std
in
jmp
aad
in
sbb
iret
sbb
xchg
xor
jp
mov
daa
pop
lds
int3
inc
data16
outsl
hlt
test
insl
filds
stos
shrl
jno
lret
out
arpl
pop
lods
orl
mov
cmp
jbe
mov
lods
mov
mov
es
scas
cmpsb
iret
jg
scas
adc
mov
mov
mov
lock
xchg
mov
lret
cmp
lcall
add
fmuls
pusha
mov
pushf
pusha
out
adc
sbb
inc
leave
push
je
call
sub
pop
mov
xor
test
xchg
pop
push
cltd
test
xor
fisubs
mov
inc
jle
or
data16
add
xchg
cli
out
lea
mov
icebp
cmpsl
mov
sbb
fnstenv
mov
sub
dec
xlat
insl
fildll
std
adc
pop
cmc
in
add
mov
pop
mov
mov
call
jnp
sbb
data16
jg
pop
and
adc
movsb
cmp
inc
push
pop
mov
iret
test
mov
cmp
inc
and
push
call
cmp
popa
xor
scas
xchg
cwtl
pop
leave
mov
mov
sub
mov
jmp
xor
adc
or
leave
outsl
xchg
nop
or
shlb
push
xchg
push
bound
and
outsb
scas
sbb
cmp
mov
cli
mov
lods
adc
dec
inc
test
sub
pop
jnp
ss
repnz
or
outsl
add
xorl
jo
scas
jl
jge
stos
mov
xchg
int3
test
mov
jo
add
xor
sbb
je
pop
data16
ficomps
jmp
xlat
es
lcall
cmp
aaa
shlb
and
xlat
outsl
push
sub
inc
ret
daa
sbb
and
dec
or
and
aam
or
mov
insl
sahf
out
shlb
xchg
pusha
dec
cmpsl
adc
mov
fstpt
add
mov
fildl
cltd
xchg
lods
and
xchg
and
inc
jl
or
sub
and
shl
push
xor
mov
gs
popa
and
mov
or
shll
mov
sub
lods
movsb
lea
fwait
pop
lods
sbb
test
mov
xchg
mov
out
lea
pop
xchg
shrb
and
sti
vpaddd
push
mov
insl
sbb
outsb
out
dec
sub
cmp
adc
sub
and
cmp
nop
push
cmp
cmp
pushf
sti
sbb
cltd
ret
orb
cmp
mov
fistps
data16
or
leave
adc
stos
js
adc
in
dec
repnz
arpl
xchg
dec
popf
outsb
setl
mov
dec
or
ss
push
cmp
scas
pop
mov
aad
jns
mov
loop
cli
push
arpl
mov
mov
les
shll
pop
nop
pop
cmp
push
mov
ljmp
jg
sbb
test
loope
popl
jp
das
cltd
sahf
stc
aad
and
mov
or
cld
inc
add
les
iret
out
movsl
add
push
out
mov
sub
ljmp
sub
push
pusha
push
lods
pop
outsl
mov
fldl
test
repnz
pusha
jnp
sub
inc
cmp
mov
mov
or
adc
pop
fisttpll
sub
mov
sub
es
adc
fmul
mov
sbb
dec
sub
sub
aaa
add
mov
jns
repnz
add
cs
xchg
popfw
push
or
pusha
data16
mov
movsb
loope
fld
and
test
sbb
mov
das
jbe
dec
lret
mov
lret
adc
imul
fmuls
aad
movsl
xchg
rcll
add
std
lds
ret
lods
push
insl
fsts
mov
shrb
or
xchg
mov
xchg
sbb
push
shlb
rcrb
mov
push
and
out
clc
xchg
lahf
ds
cld
out
sub
and
pop
add
push
and
and
scas
adc
mov
add
cltd
or
das
dec
adc
add
xchg
mov
mov
xchg
scas
lcall
add
push
and
push
subl
mov
imul
outsb
mov
dec
mov
dec
adc
das
hlt
cmp
jae
push
dec
lret
cld
or
out
sbb
inc
jmp
dec
push
and
mov
daa
or
incl
xchg
outsb
xchg
mov
cmp
xor
hlt
in
push
cmc
cwtl
cwtl
jecxz
aam
lds
adc
dec
es
sti
loop
out
sbb
jns
jmp
insb
xchg
pop
push
shl
xchg
imul
mov
scas
rclb
sub
mov
inc
cmp
xchg
inc
adc
aaa
sti
sub
fildl
xchg
mov
popa
iret
cmc
clc
sub
xchg
shrl
mov
and
adc
ret
in
push
xor
inc
sbb
xchg
es
jp
cmpsb
and
fbstp
out
pop
addr16
inc
lahf
xchg
adc
lods
sbb
sbb
ror
mov
insl
jecxz
pop
xchg
pop
cmp
cmp
mov
imul
xchg
cwtd
rolb
mov
xor
dec
xchg
test
fstpl
jecxz
push
fbld
dec
out
inc
mov
icebp
jbe
add
inc
stc
aam
fxtract
pop
lret
and
adc
andb
xchg
shlb
inc
dec
in
dec
fwait
shrl
mov
fs
in
cmp
std
in
nop
sbb
adc
cli
addr16
lret
or
pop
lods
adc
mov
scas
loop
mov
and
xchg
into
aaa
popf
out
aaa
movsb
es
cmc
xorl
push
lret
sarb
jmp
dec
outsl
rol
pop
jmp
in
dec
loop
lods
loope
dec
jle
aas
test
out
pop
or
mov
inc
add
pop
cld
hlt
rcl
les
pop
add
sub
mul
jp
adc
xchg
pop
and
stos
dec
popf
dec
push
rcr
sarl
icebp
in
inc
iret
stc
push
iret
pop
mov
loope
add
sub
xor
push
scas
mov
leave
xor
add
xor
lret
ret
jmp
out
xchg
xlat
sub
je
shrl
sahf
sub
push
pop
mov
lea
sbb
movl
adc
outsb
lahf
mov
cmp
dec
sti
stos
dec
cs
jo
mov
push
add
aam
xorl
outsb
sbb
gs
push
inc
lea
stos
cmp
in
ds
out
mov
lahf
das
incl
scas
mov
mov
aam
inc
or
inc
inc
xchg
mov
idivb
ret
in
test
js
loope
xchg
jmp
dec
idivb
cmp
sub
push
mov
leave
mov
xchg
add
aas
push
ja
insb
jp
push
in
cmp
xor
or
insl
and
mov
aas
scas
add
add
cltd
loop
push
cld
imul
xchg
and
fdivl
sbb
xor
inc
cmpsl
mov
int
rcl
inc
adc
pop
jmp
xchg
ljmp
ljmp
mov
mov
jp
in
xor
xor
mov
jp
sti
pop
mov
fistps
outsb
lods
cmp
dec
sarb
or
nop
push
add
mov
pop
push
mov
loop
out
nop
cwtl
in
push
jle
jecxz
sbb
and
clc
stos
pop
mov
dec
std
aam
cmp
mov
out
pop
lret
and
lcall
stos
jbe
xor
inc
ss
mov
testl
fwait
sti
pop
clc
jb
ja
push
jno
pop
dec
mov
jne
add
aam
cmpsb
xchg
or
sbb
dec
sub
and
ljmp
js
sub
jle
push
xor
and
int
push
in
jbe
push
scas
sub
arpl
scas
jo
jg
aam
das
imulb
cmp
icebp
cwtl
aam
notb
cltd
mov
jg
sub
jb
ret
dec
mov
shl
push
jmp
add
cmp
into
push
icebp
xor
xchg
or
cmp
imulb
lret
loopne
cltd
mov
fwait
xchg
pop
and
mov
jl
dec
cmp
lock
ja
or
fucom
ds
pop
adc
imul
mov
fs
pusha
shlb
ret
insl
test
rcr
or
arpl
das
out
fsubrl
jle
mov
pop
dec
cmp
sub
lods
movsb
pop
fmull
mov
shlb
inc
and
out
xor
jns
gs
outsb
mov
mov
dec
aam
int3
test
daa
mov
das
mov
xor
mov
jmp
into
sub
cmp
arpl
fcoms
sahf
sahf
pushl
push
faddp
into
sub
dec
in
sub
dec
xlat
movsl
mov
popa
sub
scas
pop
pusha
add
or
xchg
cmp
sub
stos
out
idiv
mov
pop
jne
rorl
je
sub
cmp
pop
add
outsb
sub
rcrb
mov
enter
lcall
pop
add
push
arpl
pop
insb
pop
cmp
jns
fnstenv
inc
and
xchg
inc
jno
inc
lods
imul
ljmp
in
addr16
jg
aas
xor
ljmp
daa
stos
nop
nop
xor
andb
pop
sbb
mov
jbe
das
mov
dec
icebp
dec
sub
test
cltd
gs
xchg
sbb
je
push
hlt
mov
or
insl
fnstsw
roll
js
jae
or
daa
or
lret
imul
mov
jae
mov
js
inc
icebp
aas
adc
int3
mov
mov
test
mov
jns
mov
pop
dec
or
inc
xchg
cmp
das
xchg
xchg
out
loope
es
data16
sbb
lret
leave
inc
mov
pop
rcrl
dec
test
and
pop
inc
stc
xor
mov
in
fwait
popf
data16
sti
idivb
fdivs
out
or
pop
jno
or
neg
fldt
lea
dec
cmp
push
inc
or
mov
push
cmp
mov
popf
push
jae
test
daa
sbb
les
pop
and
pop
and
ljmp
push
mov
mov
loopne
aas
mov
rorb
aam
out
je
arpl
mov
sbb
loop
and
sub
add
mov
imul
jnp
dec
clc
mov
or
push
and
lea
xor
ret
mov
xchg
add
out
mov
icebp
stc
jl
enter
or
mov
cmp
pushf
fbstp
hlt
xchg
mov
insl
ret
rorl
lcall
xor
jo
jo
xlat
popl
ja
jmp
stos
inc
jno
or
inc
cmpl
out
adc
xor
or
shl
and
mov
dec
adc
shl
out
add
cmc
movsl
dec
cmpsb
subl
adc
js
sbb
push
insb
mov
jo
call
jle
ss
inc
or
xor
mov
inc
or
or
pop
push
sti
out
js,pn
push
cmp
xor
dec
push
sub
mov
hlt
add
nop
inc
xchg
inc
mov
mov
lock
ds
jae
mov
clc
call
mov
pop
test
pusha
fbld
or
jge
repz
notb
mov
adc
aad
imulb
xlat
push
sbb
mov
js
adc
movsb
jp
xchg
mov
xor
roll
pop
jl
pop
imul
or
jg
cmp
jp
data16
lock
arpl
inc
es
xlat
cmp
jmp
xor
xchg
sbb
jmp
cmpsl
mov
inc
jno
mov
daa
paddd
lods
jns
ret
mov
imul
adc
mov
jecxz
test
cmpb
enter
les
jg
jae
jns
div
test
into
dec
jno
add
lret
add
jl
push
lds
hlt
pop
ret
or
mov
mov
or
xlat
mov
push
cld
inc
add
pop
stos
stc
imul
dec
in
fsin
mov
std
cmc
lods
and
mov
xchg
and
xchg
xlat
add
das
cmpsb
lcall
mov
repnz
jo
add
jp
add
icebp
jmp
test
adc
rolb
xchg
adc
stos
mov
jne
out
mov
movsl
xchg
mov
ret
orl
mulb
pop
in
xor
mov
rorl
jne
ds
in
cltd
jl
popf
push
outsl
mov
mov
push
sub
add
add
adc
xor
ja
cmp
jb
sbb
test
mov
inc
notb
daa
mov
aam
iret
mov
adc
cmp
fbstp
mov
insb
or
out
adc
mov
mov
inc
fbld
test
pushl
add
int
sti
push
pop
movb
jecxz
sti
jne
andl
loope
daa
push
inc
aad
js
xor
aad
mov
iret
lret
in
mov
mov
inc
aas
fstpl
mov
inc
addr16
jl
push
mov
push
imul
dec
inc
pop
jns
xlat
mov
es
mov
push
pop
mov
dec
out
mov
aad
mov
dec
xchg
lret
mov
insb
pop
ds
jp
setbe
pop
dec
in
mov
sarb
out
fwait
dec
subl
push
jae
insl
enter
jo
jle
nop
lods
shr
icebp
sbb
push
dec
das
les
cmp
xchg
push
test
mov
loopne
push
pop
ds
pop
out
mov
shlb
pop
in
cmc
popl
pop
lahf
mov
inc
add
sbbb
test
adc
scas
loop
out
popa
inc
enter
call
mov
dec
and
lock
in
stos
push
decl
sub
scas
or
mov
jmp
rclb
movsb
nop
fsubs
sub
dec
dec
int
mov
dec
rcr
aam
push
fsub
out
mov
xor
mov
sbb
inc
or
sub
faddp
leave
scas
cmpsb
jbe
and
push
mov
je
in
cli
sbb
dec
jg
jp
int
pop
sub
cmp
inc
movsl
and
addr16
ret
xchg
sbb
in
mov
jae
xor
outsl
pop
int3
push
pop
and
imul
cmp
cmp
dec
cli
xchg
jns
mov
mov
mov
icebp
fs
les
xor
xchg
or
mov
dec
lods
adc
push
sti
sub
insb
iret
pop
scas
into
xchg
inc
sbb
xorl
cltd
stc
and
cld
jne
in
shrb
mov
adc
dec
into
pop
jmp
pop
lahf
lods
add
add
mov
pop
mov
push
shll
les
mov
dec
pop
aam
sub
daa
mov
or
inc
leave
or
inc
mov
add
or
loop
mov
and
mov
enter
cmpsb
mov
cld
inc
and
xchg
cld
pop
outsl
iret
pop
loope
inc
and
adc
dec
fsubl
clc
xor
sbb
fstpt
adc
movsl
sarb
aam
movsl
xor
inc
clc
rcl
insl
addl
push
fadd
stos
inc
sbbb
fdivl
sbbb
rorb
mov
in
fcompl
add
mov
in
aam
push
cmp
fdivrl
sti
imul
push
mov
xchg
enter
in
mov
lods
mov
sbb
mov
lahf
dec
cltd
pop
insb
call
lds
jo
jae
stos
enter
pop
int3
dec
shrb
inc
iret
xchg
dec
nop
call
aas
lea
jae
mov
sarb
int3
movsb
mov
mov
xchg
and
adc
mov
dec
cli
adc
mov
mov
hlt
ucomiss
mov
pusha
jb
dec
adc
repz
jecxz
bound
mov
stc
aad
mov
into
adc
and
in
xorl
loope
ds
mov
add
into
inc
mov
sub
xor
rol
inc
sbb
mov
outsl
lods
shrl
mov
mov
std
pop
lcall
mov
sar
cmp
pop
pushf
movsb
sahf
push
push
xor
jmp
into
jo
loopne
movsl
or
mov
test
xchg
sbbl
inc
fmul
in
xchg
push
mov
daa
and
iret
cmp
out
adc
mov
inc
inc
int
icebp
xchg
sbb
jmp
idivl
or
sbb
jno
int
push
xchg
sahf
enter
push
pop
xor
movl
cmpsb
dec
lret
loop
mov
add
adc
pop
lcall
cwtl
pop
push
ds
rcrb
sbb
clc
and
bnd
adc
sbb
push
arpl
sub
enter
and
pop
movsl
and
repz
stos
push
sbb
and
fs
sub
and
push
or
inc
mov
test
mov
jmp
lods
and
inc
std
jnp
cmc
add
push
sub
fldl
mov
inc
jae
inc
cmp
sub
out
test
mov
in
mov
mov
xor
xchg
out
je
push
testb
xor
adc
jne
dec
sbb
lret
rcll
pop
jnp
mov
and
jge
jg
ja
mov
rol
imull
loop
shll
dec
add
sub
mov
mov
cmp
push
mov
outsb
add
xor
shll
or
js
add
or
cmpsl
leave
and
sahf
or
clc
les
ja
out
mov
jp
addl
cmpsb
mov
jo
into
popa
cmc
xor
sbb
sbb
and
jae
and
adc
jmp
inc
dec
lret
sub
test
mov
inc
sub
inc
mov
add
mov
adc
adc
mov
jle
lods
mov
stc
outsb
xor
test
lea
scas
cmpsb
mov
push
pop
ja
jbe
sub
fldt
dec
gs
enter
add
mov
lock
outsb
pushf
and
mov
sub
xchg
sub
jmp
fs
xor
mov
sub
subl
cmp
xlat
sub
mull
movsb
sbb
adc
dec
add
sub
push
sub
jle
cmp
lret
outsl
outsb
dec
mov
mov
int3
sub
cs
mov
add
sbb
aam
gs
mov
mov
jno
or
rol
xchg
push
adcl
xchg
adc
or
insb
dec
inc
fimuls
cltd
cltd
cli
push
imul
in
push
mov
incb
movsb
stc
dec
scas
cmpl
jae
cmc
mov
jge
in
xlat
in
cmpsl
out
dec
loop
and
xor
rorl
dec
sbb
dec
push
ljmp
jo
and
push
adc
jb
jns
test
out
pop
sub
mov
sub
das
in
pop
mov
aad
cmp
xchg
mov
inc
cmp
mov
mov
nop
inc
aaa
shrl
ja
sbb
and
pop
adc
mov
orb
jp
pusha
hlt
stos
and
andl
cwtl
sbb
js
ss
inc
xchg
andl
mov
repz
mov
cmc
sub
jae
cmp
gs
sub
lods
xorl
lods
or
hlt
add
cmpl
int
sbb
stos
pop
out
mov
jno
mov
pop
dec
aaa
divl
daa
addr16
pop
mov
mov
pop
pop
fldcw
or
xor
in
or
xor
imul
cli
mov
sub
mov
inc
shl
jge
pusha
movsl
std
cmp
dec
sub
and
sarb
jmp
jmp
push
lret
mov
pop
into
add
cmp
enter
in
cmp
and
mov
mov
repnz
shll
dec
inc
mov
push
test
inc
pusha
fimuls
cwtl
adc
aam
add
mov
mov
daa
add
sti
sub
push
dec
sbb
jl
pop
adc
cld
xor
movsb
dec
jmp
out
dec
push
lock
jbe
sbb
out
xchg
scas
mul
xchg
aaa
popa
call
fdivp
rcr
arpl
shlb
push
sub
out
sub
jle
xorl
lcall
sbb
dec
orb
mov
cwtl
xchg
out
fs
clc
addr16
adc
arpl
cmp
xchg
xchg
aad
arpl
or
rorl
outsl
mov
sbb
mov
in
dec
lcall
inc
sbb
inc
and
movd
cmp
sbb
inc
repz
mov
xchg
mov
xchg
lds
testl
push
adc
sub
jno
iret
in
repnz
andb
je
repnz
mov
test
push
enter
xchg
cmp
int
mov
repnz
mov
mov
vminsd
push
stc
push
mov
inc
xchg
pop
sbb
mov
cs
shl
jg
lea
and
mov
add
inc
jg
mov
fists
aas
jle
sub
mov
xor
adc
ret
popf
mov
rolb
jle
test
jmp
mov
stos
cmp
sbb
test
inc
pushf
jge
dec
shll
stos
imul
add
inc
cld
xchg
loop
repz
jo
xlat
loopne
movsl
cmp
ret
mov
jmp
xor
pop
sbb
pop
mov
or
dec
repz
lret
loop
dec
arpl
mov
or
rcrb
pop
push
mov
mov
mov
fisubrl
mov
add
mov
xor
push
movsb
shlb
inc
or
sub
shrb
or
xlat
inc
adc
repz
cmp
lods
out
or
stos
xor
mov
loop
packsswb
jae
popf
push
add
dec
or
add
fdiv
sub
xor
int
xchg
adc
dec
inc
pop
movsl
leave
mov
xchg
pop
ffree
xor
xchg
fwait
lock
sbb
fucomip
movd
out
cmpsl
lcall
mov
mov
stos
adc
push
push
or
cltd
and
call
xor
and
insb
jle
mov
cmpsl
dec
adcl
rclb
add
pop
add
repnz
sar
xchg
testb
xchg
out
cli
adc
divb
inc
leave
push
push
add
fyl2x
and
pop
ret
inc
xchg
fwait
imul
test
lahf
aad
jle
loop
inc
cmc
sbb
into
inc
adc
rcrl
xchg
lret
outsb
insb
loope
inc
cmp
mov
lcall
add
shll
enter
inc
shlb
jnp
lret
mov
dec
leave
and
pop
mov
mov
out
pop
pusha
xchg
hlt
sbb
insb
mov
sahf
pop
xchg
test
adc
sbb
sarl
shr
pop
pop
addr16
mov
mov
nop
jo
pop
sub
in
test
faddl
add
inc
or
add
ds
push
stc
nop
xor
insl
sub
mov
movsb
loope
pop
push
push
or
fadd
lahf
mov
lret
repz
adc
es
mov
jb
inc
loope
mov
mov
hlt
or
fmuls
or
sub
sti
push
cltd
mov
stc
mov
lret
xchg
jno
test
sbb
out
xlat
lock
popf
aam
jle
sbb
adc
pop
imul
jbe
add
sarb
aad
stos
ret
arpl
fdivrs
test
push
lock
inc
subl
test
cmp
cmp
jp
or
push
and
test
out
sbb
adc
loop
out
mov
and
cwtl
mov
imul
jmp
jns
jle
push
xchg
cmc
adcl
lret
or
lods
call
mov
sbbb
pop
call
jne
pop
pop
cmpsl
xchg
inc
cmp
push
js,pt
push
rcl
lods
jp
repnz
clc
sbb
and
into
cmp
push
and
sbb
pop
mov
or
xor
lahf
or
lcall
xor
mov
test
mov
mov
sub
fdivrs
flds
sub
out
lret
push
nop
ljmp
xor
stos
mov
pop
xchg
inc
cld
sbb
leave
bound
es
lret
cmpsl
and
adc
ficomps
pusha
jnp
out
daa
jge
mov
xchg
add
mov
xchg
divb
rcrb
pusha
cmc
lea
test
repnz
pusha
leave
loopne
mov
mov
sti
movsb
cli
mov
adc
sub
adc
rolb
jb
xchg
insb
dec
push
adc
sbb
mov
stos
incb
cmp
call
push
pop
adc
mov
jnp
lret
mov
jg
jae
rorb
andb
shrb
dec
stc
imul
mov
dec
aas
ja
mov
jne
sbb
mov
lret
adc
aad
das
arpl
jl
daa
jle
in
leave
mov
xchg
aaa
hlt
jmp
jne
fldl
sti
int
push
cmp
pop
jo
xor
sar
sbb
int
daa
cmp
cld
dec
scas
ret
loopne,pt
out
pop
xor
cli
inc
push
sub
pop
rcrb
imul
repnz
fimull
mov
shlb
shlb
xchg
adc
mov
mov
mov
inc
mov
cmp
or
insl
sahf
mov
push
jbe
test
loopne
jg
push
push
jne
addb
mov
adc
mov
pop
cld
push
jne
scas
outsl
or
ss
test
pop
test
adc
push
add
xor
inc
adc
or
sub
xchg
out
in
and
jo
push
sub
nop
enter
out
pop
js
outsb
or
inc
add
scas
jg
mov
push
pop
sub
jl
sbb
scas
testl
pop
mov
xchg
or
or
andl
das
cld
mov
push
loop
pop
xchg
sub
and
dec
pop
pop
pop
or
pop
stos
push
subl
out
loop
dec
sub
push
int3
jo
or
mov
sub
arpl
xlat
addb
outsb
mov
sub
outsl
das
cmp
scas
jge
or
lcall
and
sub
xchg
push
popf
fisubrs
mov
hlt
scas
cmp
mov
hlt
mov
mov
imul
cs
lea
inc
sub
jle
cmpsl
add
sub
jge
push
pop
mov
aad
stos
repz
insb
outsl
lea
fidivrs
pop
fsubs
out
loopne
cltd
mov
aam
sbb
lret
and
or
inc
ljmp
jp
in
andb
sub
ffreep
lock
jle
insl
pop
mov
push
sbb
test
mov
lret
xchg
movsb
leave
les
aad
jo
cld
mov
sub
cmc
iret
push
mov
push
or
cmp
lods
ds
test
sahf
sbb
jbe
in
xchg
pusha
imul
shrl
int
stos
inc
jne
lahf
out
icebp
mov
mov
shlb
std
ja
shrb
xchg
pop
pop
fimuls
movsl
jns
and
mov
mov
scas
lods
hlt
pop
or
inc
test
jl
int3
andl
jo
add
jb
pop
lods
das
mov
lahf
arpl
mov
sub
mov
mov
mov
je
push
loopne
xor
push
push
inc
cmpsl
push
fdivr
and
aad
ja
adc
enter
add
dec
js
fidivs
loop
push
or
sti
lret
notb
push
mov
xchg
aas
jl
cltd
push
and
jmp
jle
sub
push
jecxz
and
jno
xchg
cmpsb
cli
pop
in
mov
mov
daa
inc
add
adc
int3
xorb
andb
jmp
inc
ss
mov
rorl
add
mov
adc
popl
pop
or
mov
pushf
lock
lods
sahf
ficompl
fwait
lea
inc
lret
xchg
mov
xchg
outsl
pop
push
out
jp
jbe
pop
or
imul
cmp
cmp
and
insb
lods
mov
dec
stos
int3
pop
or
rorb
repz
jle
hlt
push
call
mov
xlat
popf
jecxz
and
aas
adc
push
dec
mov
popf
xor
ljmp
adc
cmp
mov
cmp
mov
adc
xor
sub
movsb
sbb
mov
sbb
stc
sahf
adc
in
sub
js
sbb
cmp
cmp
xchg
int
ljmp
adc
ljmp
jne
inc
stos
or
push
add
pusha
andb
jmp
cmp
push
adc
inc
push
mov
fistps
xor
sub
mov
les
in
cs
leave
cmpsb
jmp
or
add
sbb
es
cmc
xlat
jle
icebp
inc
ret
push
inc
mov
add
pop
daa
fists
imul
iret
dec
popa
pop
leave
sub
into
cltd
or
mov
xchg
adc
push
jmp
mov
mov
push
cli
mov
shll
or
es
push
sbb
pop
loop
xlat
cmp
enter
push
out
stc
adc
shll
mov
sahf
insl
nop
scas
aaa
jmp
fidivl
xchg
jecxz
shr
and
out
adc
mov
mov
push
sbb
pop
add
jne
pop
pop
clc
add
mov
xchg
add
mov
test
push
or
ljmp
add
push
xor
sbb
jl
bound
dec
daa
mov
sub
dec
fmuls
aad
cmc
repnz
sub
adc
mov
pop
dec
lods
lcall
sahf
andl
sub
fisubl
in
idivb
aam
add
cmp
cmpsb
jae
out
xor
pop
andl
fnstenv
push
add
inc
mov
jb
scas
rcll
cli
ret
lret
repnz
push
xchg
mov
inc
push
std
push
jl
mov
fwait
inc
sbb
stos
test
fisubrl
mov
mov
insl
fdivrs
jmp
xchg
decb
mov
test
sbb
cltd
adc
addl
mov
sbb
mov
add
addr16
xchg
adc
xchg
addr16
loop
cltd
push
mov
and
dec
cld
in
enter
int
lret
pusha
sub
in
cmp
fnstenv
icebp
jae
mov
push
or
fcoms
mov
in
pop
add
insb
sarb
fucom
aad
cmp
std
pop
mov
mov
rcll
pop
push
push
xlat
pop
push
cld
mov
jnp
mov
scas
cmp
and
cmp
push
mov
sub
cltd
sbb
daa
lcall
ljmp
mov
and
mov
sbb
cmpsb
or
lret
mov
lock
inc
xor
dec
inc
cmp
sbb
loop
aam
and
adc
int3
neg
mov
aam
jp
arpl
js
cmpb
out
std
ret
jge
adc
dec
mov
jle
mov
or
cmpsl
rdpmc
pop
jbe
out
jmp
xchg
fisttpll
out
mov
shll
pop
dec
loop
es
cmp
mov
ds
out
nop
push
mov
cs
add
orb
xor
dec
dec
into
pop
pop
or
jo
and
mov
mov
xchg
jge
test
xchg
and
cltd
inc
push
inc
ret
mov
pop
pop
les
inc
outsl
inc
in
out
imul
inc
xchg
dec
gs
mov
jmp
sbb
push
push
fwait
dec
mov
cmp
cwtl
out
sbb
bound
or
mov
cltd
adc
inc
sub
jne
and
setle
xor
aas
daa
stos
ficompl
add
fwait
sub
mov
pop
and
push
aad
bound
jb
in
xor
ds
adc
jae
gs
sbb
daa
cmp
testl
and
pusha
out
imul
iret
xor
lock
enter
insb
inc
push
mov
scas
iret
js
insl
insl
aaa
cmp
push
push
jmp
decl
mov
insl
rol
pop
sbb
push
mov
dec
int3
aad
sub
inc
push
out
xchg
cmp
in
push
lret
mov
mov
cmp
sbb
rolb
shrb
or
popf
lret
adc
insb
mov
pop
jmp
es
outsl
and
mov
push
aaa
mov
aaa
jb
les
repz
sti
hlt
dec
je
sbbl
out
mov
sbb
out
fmul
enter
xchg
adc
cmp
ja
js
std
jge
push
mov
xor
popa
push
test
repz
mov
push
lcall
ret
mov
push
out
cli
mov
mov
iret
mov
fs
test
push
mov
fwait
xor
sub
mov
xor
popf
dec
cmpsb
pop
add
clc
test
jo
add
cs
imul
jg
push
lret
mov
mov
xchg
pop
xchg
or
push
jg
out
lock
dec
push
rorl
mov
push
or
arpl
in
jg
das
mov
mov
add
out
test
sub
mov
jo
fidivl
mov
imul
push
bound
movsb
loop
mov
cmp
sbb
lret
in
rorb
sub
and
leave
cld
arpl
mov
push
jge
repz
insb
js
mov
mov
mov
jnp
mov
sbb
pusha
cmp
testl
or
out
jp
out
push
and
sbb
psubd
sub
ret
cmpsb
outsb
xor
sbb
cwtl
lds
jl
jecxz
nop
dec
xchg
enter
pop
inc
mov
and
lahf
mov
dec
sbb
aam
xchg
inc
dec
inc
ja
shl
ficoms
fs
mov
cmpsl
sub
pop
mov
mov
xorb
jl
pop
enter
cmp
and
es
lcall
bound
scas
cmpsl
mov
adcl
inc
mov
and
mov
push
pop
out
movsb
imul
addl
mov
mov
into
jmp
daa
hlt
cmc
shr
push
repz
jb
imul
jns
stos
add
jl
push
mov
and
sbb
jecxz
in
fiadds
pop
add
dec
iret
and
and
aam
in
lock
out
xchg
insb
cmpsb
add
in
add
push
mov
test
push
stos
mov
push
inc
mov
mov
mov
mov
push
or
or
or
push
jle
pop
adc
hlt
cs
int
dec
or
jae
xor
adc
mov
in
push
insl
pop
fbld
sub
rcll
jns
push
jmp
cld
inc
jne
xchg
insl
testb
inc
dec
lahf
popa
push
and
inc
ret
rorb
sub
cwtl
sbb
clc
mov
xchg
mov
mov
cs
add
adc
aam
sahf
dec
fwait
testb
lcall
and
lds
shrb
cmp
mov
cmp
dec
es
xor
or
cmp
mov
out
sti
and
inc
jecxz
ljmp
cmpsb
inc
hlt
test
cmp
push
je
mov
rclb
mov
push
rcll
jno
out
lock
sbb
jnp
incb
push
call
xor
inc
inc
dec
mov
cmp
sub
movsl
inc
push
cmp
sbb
sub
movsb
jl
es
nop
stos
in
mov
call
push
mov
icebp
sahf
loopne
mov
nop
xor
cmc
cmp
lods
mov
dec
cmp
mov
xchg
mov
add
les
mov
call
rolb
mov
pop
add
add
test
mov
cmp
jmp
test
setge
mov
cmp
add
push
and
add
in
mull
ds
jge
in
add
pop
int
ss
xchg
xor
dec
add
push
mov
add
scas
push
adc
popf
std
pop
and
jl
lds
je
sbbl
fs
addr16
push
addr16
xchg
dec
mov
subb
or
test
and
movsl
dec
push
stos
or
jp
sti
out
xlat
jno
mov
xchg
es
lahf
test
aam
sub
push
mov
fs
stos
movsl
int3
mov
loop
pop
add
add
jae
shrb
imul
js
sbb
rclb
hlt
jecxz
jnp
push
or
rclb
and
pop
xor
add
scas
cld
addl
add
fcoml
xor
test
fists
cmpsb
lcall
movsl
pop
cmp
cwtl
mov
pop
push
adc
in
lahf
xor
shll
inc
repnz
js
push
push
sub
shrb
sbb
xor
subb
das
imul
sbb
and
ljmp
mov
test
adc
jae
mov
dec
lods
dec
sub
divl
add
andb
jo
cmp
loopne
insl
inc
addb
lcall
shr
jbe
xor
inc
scas
xchg
sbbb
bound
adc
aas
push
in
add
mov
ljmp
iret
cmp
sub
sbb
imul
or
lret
push
fwait
sub
addr16
and
sbb
sbb
repz
push
and
xchg
test
xlat
sub
inc
pop
je
push
stos
cmp
pop
mov
mov
sub
lock
cs
rolb
scas
mov
mov
ret
mov
sub
fwait
hlt
jle
pop
flds
rorl
and
sbb
into
adc
outsb
inc
inc
mov
cmpsl
icebp
dec
dec
and
icebp
aad
clc
out
sbb
and
cwtl
rolb
lods
xchg
xchg
rolb
cmp
pop
sub
inc
pop
ds
mov
insl
mov
ja
sbb
push
repnz
pop
cmc
jno
out
mov
cmc
pop
jmp
aaa
imul
and
cmp
hlt
push
inc
imul
mov
fwait
adc
aaa
pushf
fldln2
insl
push
xchg
mov
sub
addr16
clc
push
ja
xor
and
bound
cmpsb
cmp
lret
and
jbe
xchg
sarb
stc
dec
adc
inc
into
mov
mov
frstor
fisttps
ret
adcb
mov
dec
sub
test
iret
iret
inc
scas
sbbb
mov
jle
scas
push
push
iret
fsubrl
pop
inc
pushf
into
xor
js
push
leave
dec
mov
lds
fistps
call
pop
inc
gs
inc
xchg
scas
outsb
push
shll
jl
cmp
ds
pop
movsl
lods
aaa
test
and
insb
mov
lret
vpmaddwd
jg
mov
dec
subb
sbb
mov
test
mov
add
addr16
cmpsl
xchg
imul
les
pop
jp
xchg
mov
jp
aas
mov
stos
push
negl
pop
les
shl
cmp
je
paddq
dec
imul
cmc
or
enter
sub
jmp
gs
ficoml
mov
push
ljmp
orb
dec
or
xchg
fs
mov
push
or
xchg
mov
jge
sbb
xchg
jle
push
iret
adc
mov
sarb
subb
push
in
mov
popf
std
fcomps
add
adc
ljmp
xchg
dec
js
mov
arpl
jne
inc
jns
clc
daa
movsb
mov
adc
pop
sti
pop
and
xchg
add
dec
mov
xor
mov
xchg
sub
popa
dec
mov
xchg
fcomps
movsb
lahf
lea
aad
jno
pop
pop
add
je
and
int
adc
jl
pop
insb
and
repz
xchg
pop
cli
mov
pop
ficoms
jge
out
lea
mov
out
shrl
pop
shlb
mov
add
test
gs
adc
and
pusha
sub
mov
mov
sub
les
les
in
jnp
sarb
dec
cmp
gs
xchg
repnz
pop
inc
popf
pop
repz
mov
push
sti
mov
rolb
or
mov
xchg
call
push
adc
cs
xlat
dec
xor
add
cmp
in
filds
lock
push
xlat
sarl
push
les
push
fidivrl
stos
lcall
xor
ss
adc
push
mov
int
push
mov
repnz
mov
popa
adc
subb
je
or
pop
mov
popa
out
ret
test
je
adc
xchg
adc
sbb
mov
movsl
dec
sbb
mov
push
xchg
cmp
out
cmp
lods
in
iret
fidivrs
shlb
xchg
inc
and
dec
mov
inc
cmp
dec
push
pop
xlat
ret
inc
jns
sub
cmp
imul
cmc
lcall
and
mulb
jmp
mov
adc
dec
mov
jmp
mov
jnp
enter
stos
push
mov
ds
shrb
nop
idivl
dec
test
data16
fldt
addr16
pop
lock
adc
addr16
push
xchg
pop
dec
jecxz
movsl
jle
inc
sahf
adc
and
jl
adc
sbb
and
fiadds
scas
repnz
dec
test
cmp
loope
cmpsl
and
sbb
push
sub
adc
test
lret
cmpsl
fwait
sbb
jae
stc
lcall
xchg
mov
add
fcompl
cmp
mov
maskmovq
imull
sti
call
mov
rcrl
sbb
imul
scas
sbb
test
fnstcw
push
pop
mull
adc
imul
push
adc
loope
into
sub
mov
repz
and
int
push
lret
adc
aas
into
in
sahf
loop
inc
shl
test
jb
into
jmp
push
and
mov
xchg
fldenv
mov
repnz
mov
test
mov
cld
xor
jge
lret
aad
sbb
cwtl
adc
repz
mov
xor
shlb
rorl
cmc
jo
orb
push
bound
jmp
jb
inc
mov
addr16
add
mov
jecxz
fwait
repz
outsl
fwait
dec
test
into
les
sbb
xlat
sub
dec
jae
mov
dec
lds
repnz
lods
jmp
lods
cwtl
mov
mov
call
jo
lret
lea
out
jl
cmp
mov
out
out
fldt
add
pop
add
stos
push
inc
inc
jbe
enter
fstpt
inc
out
push
lods
orl
cmpsb
xchg
sahf
add
sbb
in
repnz
jbe
jne
into
dec
xor
out
push
insb
jb
pop
in
aam
inc
push
lea
or
adc
push
jno
cmp
jne
xchg
shlb
and
push
sbb
stos
sbb
dec
ss
rorb
inc
ss
dec
sbb
add
mov
cmpsl
nop
mov
out
cli
jns
jae
add
cmp
xchg
jb
cmpsb
inc
push
xchg
and
mov
xor
add
jl
inc
mov
loopne
shl
pop
leave
shl
iret
jae
icebp
fucom
fsubrs
shlb
sub
shll
pop
jnp
lret
es
or
popf
into
sar
cmpsb
jmp
add
adc
adc
push
dec
adc
fisubs
int
je
lret
add
pushl
pop
scas
pop
sub
jns
fildll
stos
cmc
push
xor
sbb
outsb
mov
xor
lods
xor
jbe
inc
sahf
sub
lret
scas
call
scas
popa
xchg
mov
jne
sarl
mov
jle
fsubrl
das
xchg
and
jg
aad
std
add
sbb
lcall
test
xor
mov
cmc
push
add
into
scas
or
iret
imul
xor
jbe
cmpsl
mov
push
push
outsl
fxch
cmp
cmc
sti
pop
sar
lcall
sub
movl
sub
sbb
mov
push
push
and
notl
lods
out
sub
dec
popa
gs
jg
int
mov
arpl
stos
mov
xchg
sar
mov
adc
stos
nop
xchg
test
mov
push
js
cwtl
jmp
add
push
imul
aas
sbb
fmul
and
mov
les
sub
stos
daa
cmpsb
aaa
call
push
mov
shll
cmp
inc
stos
or
add
adc
sub
pop
fs
mov
push
and
xor
mov
pop
or
rcll
xchg
lahf
mov
and
jno
xor
lret
hlt
mov
jne
orl
ljmp
xchg
fldl
xor
lds
mov
adc
cmp
sub
add
lahf
pop
dec
pop
lcall
or
pop
repz
push
jnp
mov
bound
imul
mov
stos
rorl
pop
test
cmp
mov
sti
lds
sub
cmp
fcmovb
inc
les
loope
rorl
pop
jnp
push
ljmp
mov
lret
mov
out
pusha
lods
dec
mov
arpl
sbb
scas
gs
push
stc
cmp
arpl
sbb
jnp
jg
fistl
fs
fsubr
cmpsb
cmp
mov
rolb
push
incb
mov
aaa
fcomi
push
push
test
dec
jp
lods
test
or
sti
mov
incb
mov
orl
std
push
add
xor
nop
arpl
jecxz
mov
out
std
lcall
fsubr
ficoml
inc
aaa
cmc
inc
mov
mov
call
mov
ljmp
data16
stc
xchg
cmp
pop
fstpl
sub
pop
fs
aam
in
jo
mov
adc
jns
pop
lods
mov
adc
cmp
ss
les
scas
dec
jo
pop
inc
sti
ljmp
jge
in
int
std
test
cltd
gs
ds
mov
ret
push
pop
movsl
adc
inc
mulb
dec
jb
mov
jmp
testl
lds
and
dec
inc
jae
and
mov
jne
repnz
xchg
sahf
xor
jo
iret
mov
adc
sbb
out
not
call
mov
loope
in
mov
dec
pop
into
bound
aaa
nop
lds
addb
xchg
shr
loop
and
sub
mov
add
mov
mov
or
imul
movb
push
test
mov
xor
test
aam
dec
xchg
imul
lods
imul
int3
cmp
xor
and
xchg
fstl
mov
xor
into
aaa
dec
sub
pop
clc
cmpsl
xchg
or
jge
test
push
jb
mov
idivb
and
sub
jno
jae
and
dec
dec
ret
pusha
mov
int3
movsb
pop
pop
dec
add
scas
sub
fwait
pusha
add
sahf
jg
cltd
aam
and
inc
insb
push
aas
and
lock
add
andb
andb
adc
mov
ret
nop
push
mov
pusha
mov
adc
fdivs
scas
outsb
mov
add
add
or
movsb
bound
xlat
push
mov
dec
or
mov
pop
test
sti
pop
loopne
add
das
add
fldl
and
pop
sarl
aam
lcall
stos
inc
push
push
sti
insb
push
jns
push
push
xchg
repnz
dec
push
xchg
in
mov
popf
arpl
lahf
aaa
rcrb
pop
xor
lds
sbbl
pop
push
adc
mov
mov
in
into
sbb
sbb
xor
ljmp
and
push
ret
sub
loopne
fisubs
aad
das
fwait
insb
dec
out
xchg
jg
rolb
dec
scas
loope
mov
dec
jle
sti
pop
movsb
cmpsl
adc
lea
mov
xlat
gs
xchg
dec
xor
mov
pop
loopne
loopne
mov
add
in
mov
push
and
xchg
addr16
jg
jmp
cmp
adc
out
add
int
popa
bound
shr
and
test
pop
pop
add
sbb
push
data16
dec
aam
int3
sbb
sbb
shl
movlps
rcll
test
mov
cli
clc
test
xchg
mov
pop
xchg
shrl
lret
stos
repz
add
fsubl
or
imul
into
ss
push
mov
mov
cltd
gs
divb
pop
mov
loopne
out
sbb
loopne
mov
inc
inc
push
add
push
popf
aam
orl
push
sub
or
push
insb
pop
fiaddl
arpl
dec
sub
dec
xchg
daa
dec
push
jno
enter
in
insl
mov
mov
xorb
mov
adc
cs
cmpsb
dec
fistpll
add
ret
cs
aam
jo
insl
add
and
rolb
dec
push
andb
push
and
mov
popf
xchg
xlat
test
mov
add
adc
push
push
daa
scas
fs
push
negb
mov
or
and
into
testl
mov
dec
push
push
leave
pop
jbe
jo
in
or
mov
mov
sub
mov
out
lds
insl
fstpt
loopne
cwtl
aaa
and
aaa
mov
sbb
xlat
and
and
adcl
mov
rcll
pop
je
aas
repnz
daa
das
rorb
hlt
int3
adc
mov
outsb
fmul
add
dec
les
xchg
pop
lcall
pop
xor
mov
and
add
sbb
mov
fcomps
add
lock
imul
pop
lea
insl
push
dec
push
mov
fsubs
dec
insb
repnz
sub
cmp
jne
popa
dec
sub
push
cmc
xchg
sbbl
stc
xchg
pop
add
cs
or
jmp
xchg
ljmp
inc
in
pop
adcb
inc
pop
ds
and
test
sub
push
pop
xchg
sti
lret
js
xchg
sti
inc
mov
call
xor
xchg
mov
pop
xor
mov
imul
loop
mov
or
sub
loope
dec
popa
and
xor
mov
loop
mov
jp
mov
mov
pop
xchg
sbb
dec
shrb
push
dec
xchg
pushf
cmp
iret
adc
dec
jbe
add
pop
fcomp
inc
mov
cmp
add
cmp
addl
fstps
xor
xor
mov
lahf
data16
adc
int
adc
and
mov
es
jnp
loopne
aad
dec
loope
lahf
inc
aad
mov
repnz
jcxz
jecxz
mov
mov
push
dec
dec
arpl
sub
lcall
jbe
dec
xchg
jmp
in
mov
or
inc
fistl
add
inc
pop
sub
fadd
fwait
lcall
aaa
cmc
lods
fcomp
loop
mov
loopne
push
shll
fs
incl
jp
orl
adc
in
int
jo
inc
and
cmp
jo
push
xor
push
mov
in
push
mov
fcmovnb
mov
pop
arpl
add
jmp
cld
in
mov
xchg
fnstcw
pusha
test
mov
ljmp
cwtl
jge
push
push
cmpsb
mov
cmp
repnz
add
cmp
test
pop
pop
push
push
inc
push
clc
pop
adc
mov
gs
mov
pushf
sub
into
cmp
xor
jo
and
cs
cmpl
std
fistpll
cmp
psubsw
in
negb
jecxz
adc
push
daa
sbb
aaa
fisttpll
cmp
jmp
push
inc
or
repz
mul
mul
les
call
sbb
mov
in
sub
push
pop
mov
adc
jl
inc
out
ret
dec
divl
push
inc
inc
mov
sahf
or
jmp
ret
and
mov
dec
dec
aam
inc
and
cltd
fisubrl
jmp
or
xchg
cwtl
xchg
rolb
pop
hlt
aad
popa
jbe
data16
aad
cmpsb
out
hlt
sbb
repnz
and
stos
sbb
and
out
test
inc
lss
xchg
push
and
cli
xlat
mov
incb
je
rorb
enter
cmp
or
dec
and
jae
adc
mov
sbb
jno
insb
int3
add
jg
frstor
push
out
outsl
xor
lret
aaa
xchg
xchg
jmp
mov
pop
lea
push
cmc
or
mov
outsb
cmp
add
aaa
subb
jl
cld
cmp
ret
test
sub
push
and
xorl
push
inc
mov
xor
sbb
mul
sbb
cmp
mov
pop
mov
scas
mov
add
pop
cmp
push
inc
xlat
clc
movsb
adc
insb
repz
dec
in
cmp
add
out
js
bound
pop
xchg
adc
and
xchg
fucomip
inc
jbe
jecxz
push
fs
pusha
cwtl
movsl
aaa
dec
nop
icebp
pop
or
sbb
jg
in
rorl
jae
outsb
movsl
out
inc
hlt
je
adc
clc
jp
jge
popa
xlat
enter
jns
cmp
or
add
push
cmp
sahf
aam
mov
loope
mov
leave
sbb
mov
adc
enter
sub
adc
push
in
jbe
ljmp
cmp
into
push
xor
cmp
sbb
int
aaa
xor
out
outsb
sub
nop
cmp
push
sbb
push
cwtl
imul
aam
lret
clc
xor
xor
lahf
mov
out
imul
pop
jl
lock
dec
push
xchg
gs
scas
add
iret
mov
dec
scas
push
ret
cwtl
ja
out
lcall
fildl
jne
mov
jle
xor
push
lods
cmp
sub
mov
and
mov
call
xchg
mov
hlt
push
in
cwtl
stos
aad
aaa
adc
bnd
pop
fs
lods
mov
stos
jle
cmp
fsub
jmp
mov
xchg
xor
pop
pushf
jmp
inc
adc
repz
push
mov
add
mov
inc
into
bound
fiaddl
pop
mov
inc
addb
lock
lgs
lock
out
mov
and
out
push
adc
mov
test
add
repz
add
xor
mov
xchg
sub
icebp
add
pop
jbe
mov
and
push
or
xor
scas
leavew
popa
iret
inc
pop
mov
and
cmp
mov
and
call
loopne
icebp
xchg
jb
xor
dec
es
inc
mov
push
jno
test
dec
inc
aam
mov
or
inc
add
outsb
addl
sbb
fisubrs
inc
adc
addr16
sub
test
scas
mov
xchg
cmc
xor
cltd
mov
sbb
sbb
jg
cmp
incl
cld
iret
jecxz
mov
lds
cmc
mov
or
push
sub
out
mov
cmc
dec
mov
push
sub
test
imul
sub
adc
fidivs
gs
aaa
testb
mov
cmp
jo
xlat
jp
and
dec
sbb
icebp
jbe
loop
push
in
dec
add
cmp
js
cwtl
cmp
and
inc
mov
mov
outsb
adc
sar
xor
push
mov
es
cmp
ret
inc
cmc
icebp
stc
addr16
dec
xchg
scas
xchg
jle
shlb
popa
inc
lea
jg
cwtl
lods
outsb
push
dec
fwait
jae
insb
rorb
ret
hlt
mov
fld
sbb
mov
push
ja
mov
mov
adc
pop
das
sbb
push
lods
mov
sti
xchg
dec
sub
sbb
push
fwait
mov
mov
adc
add
cld
cmp
imul
push
push
add
pop
sbb
fwait
push
scas
adc
xchg
or
mov
xchg
scas
mov
mov
cmc
add
int
rcl
mov
sub
inc
stos
cli
mov
mulb
push
std
cmc
les
cltd
pop
out
sub
pusha
sub
jae
xchg
jmp
fstps
pop
jno
jae
repnz
or
scas
je
fldt
push
sub
jo
insl
aas
ljmp
js
or
je
pop
add
pop
mov
add
jg
fld
jno
add
xchg
and
or
gs
push
ja
and
mov
sbb
scas
jmp
addl
std
cmp
loope
push
and
mov
in
mov
dec
aam
jecxz
sub
cmp
imul
imul
push
fbld
lret
jecxz
filds
cmc
jnp
fsubrs
gs
movsl
cmpsb
and
adc
fwait
lods
into
fsubr
push
jno
or
adc
pop
jp
mov
movsb
in
cmpsl
add
xor
repnz
cli
mov
push
data16
orb
ja
outsb
mov
sbb
sbb
dec
mov
lea
pop
lods
add
jbe
xor
insl
sbb
xchg
jae
test
push
faddl
sub
jge
sbb
in
ret
sbb
lcall
loop
ja
call
ja
lahf
lds
mov
mov
pop
repnz
inc
add
jp
clc
cmp
fwait
outsb
mulb
into
roll
xor
jns
cmpsl
mov
mov
or
pop
pushf
fwait
mov
cmp
mov
sbb
mov
mov
out
lahf
pop
mov
inc
pop
sub
inc
fcompl
push
xor
loop
mov
scas
movsl
jmp
inc
sbb
daa
insl
aas
adc
xchg
add
push
lret
adc
dec
pop
cs
hlt
cld
sub
cmpsb
push
xlat
out
mov
push
stos
lds
pop
xchg
sbb
jnp
lods
stc
pop
aaa
push
cld
or
pop
push
push
jp
inc
and
dec
xchg
in
or
cmp
out
xor
lock
jecxz
ja
lods
callw
mov
inc
lods
jnp
shl
popf
mov
movsl
cltd
shrb
sbb
outsb
xlat
cltd
lcall
inc
push
lods
xor
cmp
inc
mov
or
or
cmp
int3
mov
cmp
andl
int
mov
push
mov
sahf
sbb
pop
ffree
subl
imul
rcrl
nop
push
dec
bound
outsl
clc
push
arpl
lods
push
xor
scas
cmp
jne
sbbb
fdivrl
add
rorb
int3
pop
stos
loope
data16
pop
insl
out
mov
fimull
subl
jnp
out
adc
out
sbb
cwtl
in
add
cmpsb
sbb
sub
test
aad
xchg
push
and
scas
push
fidivs
xchg
vphadduwd
pop
int3
arpl
mov
fadds
adc
scas
ljmp
pop
jl
loopne
mov
push
rcrl
xchg
push
adc
mov
or
adc
sub
pop
inc
shrb
mov
ljmp
sub
pop
xchg
insl
gs
bound
jmp
cmp
je
cmc
clc
xor
je
icebp
inc
sbb
cld
mov
stc
inc
cwtl
outsl
or
inc
and
negl
push
fcompl
bnd
arpl
mov
pop
mov
mov
mov
xchg
ljmp
repnz
xchg
jle,pn
shlb
das
push
dec
fbstp
loope
jo
xor
in
inc
add
xor
dec
notb
cmp
jp
cmc
and
lret
ljmp
add
inc
cmp
jb
data16
loopne
leave
incb
cmp
in
mov
pop
jle
js
jl
mov
lods
dec
leave
or
stos
or
mov
je
xchg
cmp
dec
push
shll
pop
xchg
add
push
pop
jnp
add
push
or
out
aam
pop
sub
pop
pop
inc
fsubrl
pushf
rcrb
push
xlat
jg
loopne
dec
sbb
daa
inc
fs
test
sti
mov
jmp
jge
test
mov
in
fstl
push
nop
imul
cmpsb
xor
jmp
pushf
into
aas
inc
xor
mull
fdivrs
rcll
jp
psubusw
int3
xor
sub
fucomp
mov
lea
mov
test
dec
sbb
dec
fcmovu
cs
adc
std
mov
sub
ds
out
lahf
cld
xchg
jbe
dec
mov
adc
adc
dec
aaa
aas
outsb
sbb
test
insb
xlat
ss
inc
sahf
call
out
mov
fdiv
and
push
or
rclb
add
cmp
repz
inc
movsb
mov
ds
or
mov
repnz
inc
scas
nop
push
push
xchg
mov
mov
xchg
add
dec
rcrl
mov
ficoml
cmpsl
es
scas
push
cmpsl
dec
xchg
xor
lea
jne
xchg
cmc
stos
or
and
xor
mov
bound
mov
xlat
mov
inc
jge
test
loope
xchg
mov
mov
add
mov
insb
jae
cmpsb
imul
and
and
push
inc
xlat
cmpsl
pop
hlt
loope
and
jp
add
outsb
js
mov
or
fnstcw
push
pop
add
mov
flds
add
stos
mov
mov
inc
and
jge
sub
dec
mov
fwait
sbb
push
push
or
roll
sbb
xchg
in
xchg
dec
jle
jge
das
mov
cmpsl
add
clc
xor
xor
dec
jb
enter
push
jo
add
or
sbb
and
mov
shlb
lds
cwtl
mov
daa
cwtl
pop
iret
mov
fisubrs
shl
add
mov
or
pop
cli
movl
les
lretw
sti
scas
jl
cmpsb
in
fsub
mov
fisubrs
jb
inc
es
lods
and
inc
dec
and
test
imul
js
rol
xor
mov
mov
in
mov
xor
jno
pop
mov
mov
push
shl
imul
mov
xchg
data16
cmp
pop
sbbb
jno
dec
imull
push
push
sahf
add
mov
mov
xchg
dec
test
cltd
pop
inc
push
mov
into
dec
pop
cmp
add
mov
inc
aad
lcall
cs
loope
sbb
adc
jl
adc
aaa
inc
mov
mov
inc
xchg
pusha
in
push
out
adc
inc
mov
and
inc
lret
ljmp
pop
adc
push
fldlg2
jmp
dec
cmp
lock
js
loope
push
scas
ret
cmp
stos
cmp
mov
repz
xchg
add
push
inc
dec
push
pop
ss
xchg
cltd
addr16
mov
mov
es
lret
cwtl
arpl
xchg
ljmp
or
ret
fistpll
ret
add
imul
jmp
xor
push
ficompl
or
xor
je
test
adc
mov
popa
dec
mov
sub
jg
xchg
dec
mov
fistpl
sbb
pop
insl
bound
adcl
mov
out
jp
sub
adc
sti
cmp
fcmove
popa
fistpl
idivl
cmp
aas
es
cmp
std
xchg
push
jg
je
cmp
add
and
push
or
clc
mov
fildll
mov
out
es
mov
fists
filds
mov
xchg
xor
push
push
xor
pop
pop
jg
mov
adc
dec
jno
aaa
icebp
jl
das
insb
mov
pop
and
fwait
pop
jnp
dec
mov
or
es
lock
and
int
add
sbb
mov
sub
stos
and
mov
das
mov
mov
mov
nop
or
jmp
and
int
in
jno
pop
push
or
add
sarb
dec
push
cmp
adc
cltd
aam
lods
sahf
mov
out
movsb
xor
lock
inc
or
inc
subb
hlt
loopne
pop
dec
orb
push
inc
arpl
xchg
fadds
sti
mov
jno
test
mov
dec
cmp
ja
mov
inc
jg
or
fs
sbb
enter
xchg
addl
xchg
cltd
sbb
sbb
mov
lret
jmp
orb
movsb
and
mov
fistpl
pop
adc
pop
mov
jl
movsl
ret
add
movsb
adc
mov
leave
push
pop
jno
ret
inc
mov
fwait
and
sub
test
call
push
movsb
bound
hlt
cld
pop
xchg
loope
sbb
nop
dec
pop
push
fistl
pop
pop
sbb
inc
mov
mov
pop
addr16
imul
sub
repz
xor
fldenv
scas
xor
test
inc
pop
cmp
sbb
push
stos
mov
mov
fwait
inc
test
cmp
push
cmp
mov
int3
mov
cmpsb
pushf
ret
gs
and
and
gs
jmp
sbb
call
dec
and
dec
pusha
rcrl
mov
sub
les
rcrb
fwait
in
fdivp
pop
cmpsb
fdivrp
enter
cltd
inc
orl
sbb
push
pushf
and
xchg
cmp
cwtl
mov
rcl
mov
push
and
add
push
in
mov
cli
pop
push
ja
insb
subb
aad
cwtl
pop
cmp
arpl
dec
addb
xchg
loopne
lods
sti
repnz
imul
bound
jecxz
shrl
push
cmp
imul
popa
add
fistl
es
cmpsb
out
or
aad
xchg
xor
ss
mov
xlat
sub
cmpsb
and
pop
ror
jle
inc
push
xchg
adc
enter
mov
xor
sbb
sbb
fistl
xor
inc
cmp
scas
add
and
loopne
call
scas
gs
cmp
lock
mov
mov
aad
cmpl
lds
mov
and
hlt
xor
fsubl
mov
aam
xchg
stc
and
popa
xor
xchg
std
lods
fiadds
jae
push
loop
stc
push
out
add
jmp
lods
pop
mov
mov
and
push
sbbb
adc
mov
fbstp
inc
cli
test
in
pop
loope
add
lds
push
add
out
pop
popa
jb
xchg
lcall
mov
fucom
in
repnz
lret
lcall
fsts
cs
cmpsl
add
push
lea
and
je
sub
insl
mov
mov
cmp
mull
and
or
mov
push
lods
cli
fs
xchg
movsb
outsb
lds
jge
ficompl
pop
into
sbb
and
scas
out
notl
int3
and
inc
and
inc
arpl
and
add
mov
xchg
jmp
dec
push
roll
pop
ret
ja
mov
push
mov
sbb
dec
insl
mov
stos
popa
mov
or
inc
mov
loope
cmp
mov
adc
push
aas
icebp
je
mov
lds
mov
mov
dec
mov
xor
mov
sti
repnz
aam
ror
jnp
adc
cs
and
dec
jge
lods
xor
jo
iret
cli
sub
insb
push
add
lods
cmp
pop
mov
and
fcomps
test
pop
sbb
sbb
inc
jp
push
std
fildl
popf
push
fwait
pushf
in
jnp
add
das
outsb
sub
movsb
mov
in
lcall
pop
arpl
jno
divl
sub
out
or
repz
add
cmc
arpl
pop
push
sub
fsub
mov
adc
pop
cmc
outsl
inc
xchg
rorb
dec
loopne
call
xlat
shll
pop
cmp
out
sysret
sbb
sub
push
scas
pop
jle
cli
dec
cli
pusha
sub
lds
cli
jae
pop
lcall
xchg
xchg
cmpsb
mov
jecxz
insl
xor
inc
cmp
shlb
push
push
sbb
add
jo
cld
jp
rcrl
fwait
jbe
pop
inc
data16
lods
cmpsb
xchg
mov
inc
mov
dec
pop
test
push
mov
jg
lds
pop
pop
sbb
lahf
lahf
cmp
int3
ja
pusha
inc
dec
dec
scas
push
test
pop
dec
inc
ds
jns
ljmp
mov
jl
mov
imul
jmp
test
mov
xchg
dec
cmp
and
pop
stos
mov
ret
cmc
aam
pop
xchg
push
ja
push
add
ss
inc
jle
mov
pop
mov
push
movsl
and
enter
lret
cmc
in
stos
aas
aas
jge
push
popa
lds
movsl
mov
fadd
xor
cmp
xor
mov
rclb
out
adc
xchg
jmp
mov
ret
pop
push
loop
imulb
jne
xchg
shlb
push
push
fcoms
stos
enter
fs
jb
lock
shrb
mov
mov
pop
xchg
pop
jnp
cmp
inc
xchg
mov
mov
push
movl
aam
gs
fwait
or
pop
bound
jne
mov
lret
mov
ret
mov
mov
mov
push
rcll
cmp
ds
xchg
shrb
mov
popa
loope
mov
je
stos
cmp
jle
and
mov
inc
popf
imul
lds
pushf
sub
mov
cmp
fwait
xchg
les
das
push
lods
lcall
outsb
xchg
inc
mov
jne
pop
data16
xchg
xchg
inc
fsub
adc
or
push
lods
sub
adc
mov
in
jae
into
dec
jmp
mov
ljmp
ljmp
xchg
pop
rclb
lods
jno
jl
addr16
push
enter
sub
lret
pop
in
fidivl
pop
stos
daa
or
aaa
les
loopne
sbbb
fistl
xchg
mov
nop
popf
inc
dec
lods
decb
inc
jg
push
mov
push
sbb
jmp
ds
hlt
icebp
cmpsl
mov
mov
push
pusha
push
xchg
fs
popf
rorb
ja
sub
mov
jp
arpl
in
push
adc
push
add
lock
arpl
jns
lds
mov
mov
mov
or
repz
jecxz
mov
ds
xor
scas
jno
out
mov
dec
rcrl
les
stos
xchg
adc
cwtl
out
push
out
jmp
lods
mov
sub
out
in
das
pop
jge
cmp
popf
pop
cmp
mov
idivl
dec
mov
dec
out
in
add
jae
popf
incb
pushf
mov
mov
repz
div
xchg
lods
inc
cmc
dec
jle
cmpsb
sarb
dec
test
mov
inc
sbb
pop
iret
pop
dec
movsb
dec
push
or
add
les
aaa
negl
jb
or
dec
scas
xchg
daa
fistps
cmp
xchg
es
mov
pop
mov
pop
fisttpl
ds
sbbl
ds
jmp
mov
mov
movl
lcall
and
nop
xor
push
sub
gs
xchg
push
scas
mov
pop
mov
add
lds
rcl
push
mov
pop
int3
jb
mov
ja
icebp
xchg
push
jb
cwtl
and
ja
inc
push
outsl
sahf
movsb
inc
xor
mov
inc
outsb
adc
and
in
notl
jae
xchg
xchg
jno
jge
inc
pushf
inc
lahf
aam
out
ljmp
mov
xchg
pcmpgtb
mov
adc
scas
dec
fcomip
dec
das
adc
ds
lret
pusha
push
push
aaa
fnstsw
inc
xor
fisubrs
lahf
push
xchg
mov
push
sub
push
sbb
out
dec
sbb
popf
push
scas
xor
test
arpl
xor
nop
push
mov
jle
andl
add
jle
jge
sti
shrb
das
divl
or
pop
fs
jmp
addl
rcrl
insl
cmp
mov
dec
int3
fwait
sarb
lahf
and
les
inc
mov
inc
dec
or
test
cwtl
clc
mov
popf
cmp
push
xor
or
add
or
mov
rol
call
lret
xchg
mov
pusha
xchg
sti
add
rclb
lcall
movsl
push
ss
insb
sub
daa
call
and
lds
mov
sbb
sbb
sti
cwtl
xchg
push
cmp
add
call
movsb
ds
mov
push
jns
inc
ljmp
jb
rorb
aas
test
sub
mov
jl
orl
dec
out
push
scas
adc
mov
jg
fisubs
ror
js
imul
mulb
lcall
inc
rorb
ljmp
jecxz
push
inc
loope
xor
cmp
int3
pop
sbb
cmpsb
sub
loope,pt
icebp
stos
rol
mov
mov
leave
sbb
and
stos
test
jg
mov
pop
nop
dec
outsl
jge
popf
in
or
stc
popa
test
pusha
push
mov
jmp
ror
sub
imul
mov
mov
fs
lahf
test
hlt
repnz
ljmp
jne
and
push
ss
dec
pop
xchg
push
imul
lods
add
andb
adc
ss
cmp
cmp
sar
ret
push
sbb
xor
out
mov
cmp
ja
arpl
pminsw
push
stc
pop
xor
movsl
std
dec
clc
pop
push
outsl
dec
xlat
xchg
addl
jae
cmc
or
filds
pop
mov
out
sub
cmp
cmp
inc
aad
lods
mov
punpckldq
cmpsl
mov
cmp
daa
add
pop
and
ficoms
add
vzeroall
icebp
xchg
movsb
pushf
xchg
rolb
or
int3
filds
test
mov
and
push
repnz
dec
js
rolb
into
mov
cmp
aam
cld
cwtl
jnp
sub
addl
sbb
mov
bound
movsl
ret
ds
addr16
xor
lcall
mov
in
xorl
cmc
adc
and
les
lret
shll
mov
add
lods
ret
dec
adc
mov
es
clc
xor
pop
sbb
push
push
insl
sub
loopne
loopne
sbb
js
loop
repz
pushf
cmp
in
imul
mov
nop
adc
jns,pt
mov
xor
scas
aam
xchg
lods
and
push
psrlq
test
ljmp
lret
dec
push
sbb
jge
cmp
and
in
cmp
addb
out
sub
insl
pop
sbb
push
xor
push
call
xor
dec
int
lcall
mov
push
sbb
push
dec
jb
xor
shlb
hlt
or
in
icebp
lods
mov
gs
xchg
xlat
and
ds
in
lds
shll
je
bound
xor
xchg
ja
hlt
fisttpl
mov
repnz
fstps
stos
pop
adc
shlb
cltd
or
inc
jge
push
das
push
jmp
adc
mov
movsb
inc
iret
or
pusha
aam
sahf
sti
mov
shrb
inc
xchg
add
test
cmpsb
sub
stc
cs
mov
imul
mov
xchg
mov
push
lret
mov
test
scas
xchg
xlat
ljmp
dec
push
in
xchg
mov
xor
fbstp
stos
push
call
inc
loop
xchg
push
or
mov
jg
sub
inc
cmp
lret
fmull
sbb
mov
xchg
cs
ds
leave
jg
and
add
jg
je
adc
xor
movsl
mov
push
jno
ss
push
push
imulb
cld
nop
sub
aad
inc
sub
ss
sub
repz
loope
test
mov
mov
inc
lods
xor
jnp
mov
push
pop
xor
nop
sub
test
fs
out
mov
loope
imul
pop
mov
les
dec
cmp
lods
adc
lcall
mov
lcall
sti
xlat
scas
inc
icebp
pusha
jb
movb
dec
push
out
dec
mov
shlb
add
pushl
push
or
mov
dec
clc
sbb
dec
lods
push
add
pop
push
stc
jo
sbb
xchg
pop
test
das
das
popa
ja
add
test
xor
imul
data16
and
pop
mov
adc
mov
xchg
fsubs
cltd
pushf
mov
sub
fdivp
push
adcb
mov
pusha
fimull
xchg
xor
mov
adcb
sbb
stos
out
lret
lahf
nop
mov
add
js
sub
jl
inc
movsb
pop
sbb
adc
ficomps
inc
sarb
xlat
std
dec
pop
xor
cmp
in
ja
fdivrl
fmull
out
xchg
sub
jle
loop
push
pop
fbld
lret
jbe
mov
adc
bound
or
cmp
mov
cltd
mov
enter
cmpsw
orb
mov
scas
add
movsb
sbb
push
movl
jl
mov
mov
js
dec
imul
subb
hlt
lock
in
and
xor
mov
adc
push
cmp
inc
pushw
push
and
mov
jecxz
adc
pop
nop
or
dec
mov
dec
and
fsubrs
scas
notb
repz
dec
sahf
cmp
push
sub
inc
inc
dec
fs
push
loopne
call
pushf
and
adc
pop
cmp
pop
loope
sbb
mov
jb
jmp
jno
pop
adc
inc
aad
daa
loope
inc
fsubrl
ds
fisttpl
pop
movsl
add
pop
mov
mov
push
sub
ret
in
out
ljmp
mov
aas
sub
ds
scas
mov
das
inc
aaa
or
call
fisubrs
jecxz
lods
fwait
shll
dec
ja
out
test
outsb
mov
or
in
mov
jo
cld
mov
add
and
je
ret
ss
mov
in
jg
insb
dec
ds
test
fstps
adc
sbb
stos
mov
push
mov
add
cmpsl
sahf
lahf
stc
or
and
adcb
dec
lret
call
jle
push
shrb
enter
adc
jg
enter
mov
lods
sbb
mov
mov
dec
leave
pop
jle
lea
pop
push
mov
icebp
aas
leave
xor
mov
test
xchg
lret
xor
pop
test
mov
sub
repnz
cs
xor
push
adc
aad
inc
pop
inc
push
aaa
mov
cmp
lret
mov
in
negl
fcomps
sub
push
pop
mov
fldenv
mov
shrl
div
addr16
jnp
lcall
jle
mov
mov
fimuls
mov
mov
fisubl
std
mov
fsts
int
push
or
sahf
fnstsw
out
adc
pop
scas
push
nop
inc
jmp
xchg
adcl
and
mov
dec
xchg
aaa
push
in
mov
aaa
fs
in
jb
dec
xor
push
and
cmp
mov
mov
sbb
cltd
insl
dec
sbb
cmp
ljmp
hlt
adcl
cmp
orb
inc
jle
fst
mov
inc
test
imul
mov
sub
sbb
push
out
mov
add
or
cwtl
sbb
loopne
mov
xchg
push
mov
xor
mov
adc
hlt
fsubl
xor
and
pop
fsub
or
and
test
scas
xchg
and
clc
subl
adc
shrb
divb
mov
into
jp
dec
out
inc
sti
mov
sub
lahf
das
scas
xchg
mov
int
push
mov
mov
scas
push
cmp
sub
push
push
jae
ffreep
cmp
mov
and
fs
test
push
rclb
dec
das
clc
fsubs
sub
push
int
sub
inc
cmp
cmp
and
enter
js
add
outsl
cs
or
cmp
sub
fisubl
imul
cmp
lock
aaa
push
push
pushf
icebp
fs
rorl
pop
push
mov
cmp
int3
cmp
pop
adc
imul
mov
xor
imul
and
jmp
or
aas
sub
lahf
inc
adc
mov
or
push
inc
sbb
addb
jbe
jo
sti
and
add
xchg
lock
pop
nop
mov
mov
dec
inc
inc
mov
repnz
push
js
cli
push
pop
mov
test
mov
xor
in
mov
daa
adc
fadds
mov
jne
and
cmp
xlat
enter
xorl
test
jl
add
mov
ljmp
fsts
add
mov
repz
imul
jle
popf
xchg
adc
in
mov
sbb
out
loop
repz
push
jle
stc
fmull
xor
movsl
or
fwait
icebp
mov
test
xchg
pop
out
mov
loope
and
push
jp
es
and
repnz
mov
aas
out
push
mov
dec
sub
test
sub
cmp
imul
inc
adc
mov
aaa
bound
lods
sub
test
rcrb
gs
cli
mov
push
lock
or
out
jb
lods
sbb
sar
mov
dec
push
mov
rolb
or
jl
push
jno
jl
xchg
cmpsb
int
inc
in
imul
dec
sub
mov
mov
scas
add
leave
loope
mov
aad
insb
inc
imul
shll
insb
cs
xchg
dec
sub
daa
push
mov
in
xchg
ja
cmp
jns
cmpsl
cli
test
inc
cmp
les
lcall
dec
aam
and
jae
add
jp
or
mov
mov
js
imul
mov
ds
test
and
ja
jne
mov
lods
lea
mov
sbb
repz
inc
aam
test
jp
popa
lcall
int
xor
mov
adc
jge
or
xchg
int3
es
mov
lods
cmp
pop
mov
idivb
mov
xchg
repz
or
std
imul
push
cmp
imulb
out
jns
adc
imul
rcrb
imulb
test
sbb
mov
pushl
movsb
xchg
jge
hlt
dec
out
push
and
add
add
sbb
pop
loopne
popf
shlb
repz
lcall
leave
repnz
mov
jle
fstl
insb
ja
aad
test
stos
fstps
ja
xchg
xchg
insb
popa
mov
iret
lahf
jl
out
push
inc
pop
sub
dec
andb
push
ret
loope
sbb
xchg
cmpsl
or
loope
dec
gs
int3
into
lret
dec
das
push
xchg
enter
sub
mov
jg
lcall
add
mov
aaa
push
stos
negl
jne
mov
insb
xor
rorb
pop
add
cmpsb
jecxz
addr16
ds
icebp
xchg
pop
fsts
mov
mov
jo
inc
inc
cmp
movsl
scas
insb
adc
movsb
lods
popa
aam
ret
xlat
scas
jmp
loope
jmp
mov
lods
sub
pop
out
mov
fwait
mov
js
pop
in
lret
adc
cmc
iret
iret
loopne
pop
mov
std
repz
cmp
popa
jo
push
lahf
mov
inc
xchg
fs
push
mov
icebp
mov
mov
loop
lret
dec
fidivrs
ret
inc
push
adc
mov
fcomip
shlb
data16
scas
pop
dec
movsb
test
lds
xor
dec
aam
pop
mov
je
cmp
and
fisubrl
test
ja
fwait
xor
sbb
and
cmpsb
jg
sarl
dec
adc
into
cmp
adc
xlat
mov
mov
addr16
cmp
rcll
jl
push
sub
cmp
adc
mov
fimull
push
cltd
push
mov
ja
inc
std
mulb
lret
mov
dec
loop
mov
out
mov
fdivrp
in
jle
jnp
dec
inc
xor
push
outsl
jne
imul
xchg
sub
pop
outsb
mov
outsl
xchg
popa
dec
js
mov
pop
fcoml
das
cld
dec
movsb
andb
inc
fidivl
pop
jo
add
std
adc
pop
jecxz
dec
cmp
bound
in
jecxz
cmp
push
pop
adc
xor
testb
hlt
and
lea
aaa
or
sbb
dec
int3
cltd
jo
lods
loope
mov
scas
outsb
cld
loopne
xor
mov
in
rclb
jge
jl
add
lret
xchg
xlat
sub
ret
mov
mov
mov
push
and
mov
icebp
push
lods
or
inc
insb
mov
pusha
call
ret
dec
inc
push
incl
mov
dec
daa
add
das
lret
lahf
stos
cld
leave
aam
flds
repnz
sub
je
les
adc
insl
lock
dec
lret
nop
insl
dec
aam
jno
sbbb
roll
xor
testl
lahf
pop
cmc
daa
nop
inc
fcoms
loop
dec
pushf
ja
mov
arpl
pop
aas
in
idivl
stos
adc
rcr
jno
xor
pop
jbe
inc
jmp
sub
mov
jnp
mov
pop
movsb
out
ficomps
orb
jle
push
clc
dec
icebp
std
lea
ss
iret
mov
inc
paddb
jmp
stos
leave
out
xchg
mov
mov
lret
ret
nop
cmp
inc
mov
add
out
mov
cmp
jnp
setp
xor
test
sarb
push
ss
mov
jae
test
push
inc
adc
pop
inc
cmpsl
lcall
xchg
fisubl
or
mov
ret
out
or
jb
cmpsb
loop
hlt
push
xor
dec
shlb
lret
push
inc
mov
popa
fiadds
pop
imul
mov
inc
cli
ja
dec
dec
adc
into
lods
or
aam
jbe
movsl
jbe
ds
jle
std
or
jge
sub
and
int
lret
cmp
rcrb
mov
pop
mov
pop
adc
dec
addr16
in
movb
stos
sbb
rorb
xchg
fincstp
aam
repz
pop
dec
dec
and
mov
pusha
cmc
ret
or
div
dec
jno
repz
push
cltd
push
sbb
loopne
pop
dec
xor
and
xor
jge
fwait
js
push
xchg
loope
imul
ret
sbb
jnp
lret
fadds
jne
fld
mov
repnz
ss
xchg
mov
mov
int
add
icebp
sub
xor
sbb
aaa
test
ja
in
or
in
lea
repnz
xchg
fwait
cmp
inc
repz
xlat
bound
fwait
ljmp
fistps
cs
je
push
repnz
pop
je
adc
push
cmp
lds
xchg
or
lock
push
mov
orl
jmp
in
mov
addb
or
cld
outsb
scas
pop
pushf
dec
out
dec
out
inc
cmp
mov
pop
adc
adc
jns
ja
ja
lea
nop
mov
jno
in
lret
inc
insl
shlb
pop
and
lret
lret
adc
sbb
inc
cmc
rolb
loope
push
mov
loope
aam
cmp
je
mov
cmpsl
ss
movsb
rorb
arpl
andl
push
les
aam
sbb
mov
push
imul
pusha
fldt
call
outsl
in
mov
dec
test
outsb
cltd
xchg
imul
out
push
add
xor
fldl
rcrl
mov
jp
aam
int3
lds
add
adc
mov
rcrb
inc
insl
scas
arpl
dec
popa
pop
pop
dec
adc
lea
dec
xchg
inc
cmp
sbb
sub
mov
call
xchg
and
mov
out
das
loopne
add
jmp
mov
sbb
aaa
dec
inc
xchg
and
das
mov
mov
jns
pop
enter
push
lret
fdivrs
fdivrl
les
xchg
stc
adc
xor
xor
jg
xchg
lods
inc
push
mov
xchg
pop
push
push
jns
loope
fsubrl
ftst
pop
mov
fnstenv
xorl
cmp
cmp
and
lahf
aas
pop
in
jp
xor
out
inc
dec
or
xor
arpl
enter
stos
sub
or
mov
mov
adc
fildl
hlt
pop
mov
inc
nop
mov
cmp
shll
and
xchg
mov
sbb
out
loope
add
insb
add
add
insb
lahf
jg
arpl
jo
pop
cltd
out
jle
jae
movsb
push
popa
outsl
mov
je
bound
js
jle
mov
rcrb
sub
sahf
cwtl
fldt
pop
roll
mov
into
mov
mov
xor
or
mov
cmp
imul
and
sub
fidivs
sarb
push
mov
imul
mov
std
insl
push
jge
sbb
in
push
adc
popf
and
jecxz
movsl
add
lcall
pop
xor
popf
insl
popa
inc
xchg
lahf
jne
mov
nop
dec
pop
addl
push
mov
lock
dec
shll
xlat
xchg
adcb
test
jnp
popa
aad
fisubl
test
adc
or
or
imul
cmpsb
lea
les
sbb
nop
mov
in
dec
daa
rorl
fcomps
sub
std
shrl
jbe
dec
and
cmp
mov
fs
popaw
sbb
mov
lea
or
pop
fisubl
js
mov
cmp
mov
mov
cmp
pop
subb
mov
test
aas
pop
lods
call
daa
jmp
test
mov
out
ret
pop
aas
push
loopne
add
lret
je
inc
pop
sbb
mov
into
dec
in
jne
sub
ret
ret
orl
cmp
pop
fbstp
rorb
and
cld
mov
out
lea
mov
stc
mov
divl
jmp
popa
stos
lds
fadds
outsl
mov
xchg
push
sub
cmp
mov
cmp
shrl
jbe
dec
cmp
into
xor
es
push
push
pop
stc
clc
push
out
ja
in
sbb
inc
xchg
repz
jmp
mov
int3
push
lret
mov
int
pop
test
mov
dec
lahf
dec
fcom
pop
adc
repz
xchg
mov
jp
sub
adc
mov
adcl
in
scas
or
xor
pop
dec
into
cmpsl
inc
cmp
add
out
push
push
add
test
test
in
xor
mov
shr
stos
adcb
jecxz
pop
jns
add
in
std
jne
fadds
cmp
insl
mov
xchg
cltd
inc
mov
adc
dec
cs
jmp
mov
cltd
das
inc
sub
mov
mov
dec
imul
fsts
xor
notl
push
insb
leave
hlt
xor
addr16
inc
dec
xchg
nop
push
jo
pop
xlat
mov
out
subb
repz
test
dec
xchg
mov
mov
out
movl
stos
push
mov
or
popa
sahf
ss
fidivrs
mov
jecxz
sub
std
cmpsl
jmp
mov
loopne
and
in
lret
sub
stos
ret
fdivs
pop
and
cld
rclb
leave
dec
cmp
pushf
push
iret
ret
inc
lret
sbb
cmp
daa
sbb
rcrb
add
ss
mov
je
dec
gs
pop
test
stc
lahf
mov
loope
mov
repnz
fisubl
data16
jae
popa
sub
mov
fimull
xchg
mov
dec
outsb
bound
push
fisttpll
js
xorb
out
rcr
jns
ljmp
subl
add
scas
push
addb
dec
dec
mov
decb
add
cwtl
and
and
stos
jns
xchg
cld
clc
insb
mov
fwait
cwtl
orl
mov
je
cli
mov
or
jno
repz
arpl
out
les
cmp
jge
lds
pop
add
cmp
ds
sbbb
dec
cmp
dec
sub
inc
popf
jl
or
loope
arpl
inc
push
jae
mov
and
cltd
cs
lods
loop
inc
xlat
lds
sbb
subb
mov
pop
jno
addb
mov
outsl
sbb
and
push
adc
loop
mov
in
roll
out
adc
sub
ja
arpl
mov
pop
lret
mov
clc
pushf
arpl
push
lock
int
push
cmpsl
xchg
fwait
sub
sbb
rol
inc
lcall
clc
mov
cwtl
stos
pop
inc
sbb
push
aad
cwtl
inc
push
out
in
pop
das
mov
push
iret
test
fdivl
repz
xchg
cli
mov
xchg
hlt
or
jp
addb
push
das
aaa
out
jge
aad
pop
jae
inc
or
aaa
mov
cmp
insb
jge
es
icebp
or
push
lds
sbb
pusha
mov
dec
dec
clts
mov
push
sub
jne
add
inc
aas
nop
nop
test
fsubrs
mov
pop
add
enter
daa
sub
cmp
out
movsb
mov
jl
pop
xchg
lock
pop
lret
mov
cmpsl
mov
bound
push
lods
dec
mov
inc
mov
js
xor
fnstcw
cmp
sti
movb
xchg
bound
push
aad
cltd
ss
cmp
pushf
and
sub
jnp
jo
ljmp
xor
sub
rorl
popf
lahf
mov
sbb
loop
sbb
mov
mov
jbe
leave
or
inc
jo
loope
mov
sarb
mov
lock
sti
pop
fcmovbe
pop
scas
push
jl
pop
xor
mov
xchg
fcoms
data16
ss
testl
imul
mov
ss
xchg
test
mov
aad
jmp
xchg
insb
cmpsb
add
mov
test
mov
test
mov
shrb
push
or
inc
cmp
inc
sbb
inc
mov
inc
xchg
dec
mov
mov
xchg
adc
nop
jp
mov
mov
out
lret
int
loop
pop
stos
mov
inc
fisttps
sahf
int3
fadds
add
mov
mov
imul
pushl
push
cmp
and
call
test
push
mov
stos
and
scas
imul
pop
mov
xor
push
push
sub
add
les
ljmp
enter
fnsave
rorb
test
daa
xchg
push
inc
popf
xchg
nop
stos
cwtl
pop
cmc
push
loope
lret
push
fimuls
or
and
push
xor
or
mov
ss
push
stos
inc
cs
xor
mov
int
mov
jno
and
xor
fsub
inc
je
out
aam
leave
mov
jl
mov
test
jbe
nop
loope
hlt
fstpt
cld
pushf
and
mov
xor
ror
pop
sub
ret
movsb
inc
roll
stos
push
inc
enter
cld
xchg
mov
adc
fmul
test
mov
mov
ds
jno
xchg
enter
enter
lret
sbb
ret
adc
or
push
add
or
out
xchg
lock
jns
sar
mov
inc
sarl
mov
xchg
mov
xor
out
xchg
dec
sti
pusha
js
and
movsl
dec
pop
jne
push
push
dec
bound
data16
push
sbb
jg
add
mov
mov
popa
shrl
pop
pop
sub
cmpsb
push
pop
cmp
jge
ljmp
xchg
sub
xchg
jg
sub
pop
push
leave
fldenv
rcr
std
inc
fmul
jle
push
adc
and
sbb
inc
or
mov
mov
les
out
pusha
push
cmp
lret
mov
dec
jne
daa
daa
jmp
fidivrl
dec
loop
imul
cli
shrl
mov
xchg
inc
push
imul
jo
dec
xchg
adc
adc
leave
add
sub
adc
xchg
nop
mov
or
dec
lods
rolb
mov
outsb
push
pop
sarb
enter
lret
cmpsl
adc
sub
es
addr16
fistl
pop
dec
and
movups
dec
test
inc
stc
cmp
daa
mov
pusha
cmp
ljmp
test
fs
jne
fidivrl
add
fmull
dec
or
ljmp
jb
nop
test
xchg
lret
cmovbe
pop
jmp
fiaddl
push
mov
cli
outsl
dec
andl
fbstp
fwait
add
dec
lret
inc
lods
inc
out
movsb
xorl
push
jle
bound
cwtl
aam
test
arpl
popf
push
adc
in
and
add
or
loope
jns
les
sbb
imul
push
push
out
test
loope
insb
daa
in
adcl
cld
cld
lahf
popa
imul
into
adc
mov
push
aaa
pop
lcall
pop
mov
je
pop
add
or
sti
stos
cmp
jecxz
push
mov
push
and
jae
leave
int3
in
dec
sbb
mov
dec
mov
adc
jg
jl
xchg
or
in
push
xchg
fimuls
add
jno
addl
mov
jmp
inc
not
sub
not
popf
dec
push
mov
adc
push
adc
fists
mov
jne
mov
push
testb
mov
or
cmp
push
loope
mov
lods
push
mov
scas
xchg
insb
or
push
insl
inc
push
add
mov
ss
xor
pop
lds
sub
test
jl
fcoml
xchg
or
rclb
mov
lock
mov
mov
aaa
add
jmp
mov
scas
add
out
loope
loopne
jmp
mov
jecxz
inc
adc
sub
mov
dec
dec
mov
mov
out
insb
xchg
dec
aas
loope
sbb
test
push
testl
or
aam
daa
data16
mov
iret
mov
lret
mov
out
test
xorl
mov
iret
fisttps
pop
sbbb
jle
xor
ss
jbe
sbb
sub
insl
xor
push
fstpt
mov
pop
xlat
lcall
nop
sub
lret
rorb
pop
shrb
leave
sbb
or
pop
xor
push
into
mov
adc
je
inc
icebp
cmpsb
lods
push
out
cld
cmp
jnp
imul
push
repz
and
popf
pop
in
mov
ljmp
popf
lods
ja
mov
xchg
pop
mov
dec
pop
std
fs
test
aas
mull
sub
xchg
jno
jp
in
lcall
cmp
xor
cmp
frstor
xchg
push
xor
je
mov
push
or
aad
orl
jecxz
scas
jno
daa
push
shrl
lret
rep
sub
sbb
push
sub
inc
into
scas
sbb
stc
or
in
lock
xchg
fiadds
bound
mov
in
test
pop
mov
mov
sub
jo
add
data16
dec
sub
jge
jl
mov
jnp
or
scas
sbb
shll
cmpsl
cmp
inc
sbb
nop
out
fnstenv
cmp
loope
stc
dec
popf
inc
test
dec
sbb
and
fdivs
add
ds
das
jge
stc
nop
sbb
or
adc
aam
in
mov
cmp
lds
sub
xchg
inc
pop
in
scas
cli
aad
std
pop
inc
mov
lea
and
icebp
fwait
ds
push
cmp
aad
inc
add
ret
add
xchg
cmp
cmp
push
pop
push
add
repz
mov
adcl
adc
inc
and
icebp
inc
loop
or
mov
jns
jno
ja
inc
xor
or
mov
js
sub
pop
add
or
outsb
and
std
aad
iret
add
idivl
inc
mov
js
inc
cmp
inc
add
ljmp
and
pop
and
push
pop
xchg
inc
cmpl
das
lds
outsl
jae
push
test
xor
and
je
dec
pushf
pop
adc
add
xor
jae
iret
mov
adc
sarb
pop
mov
aaa
mov
pusha
outsl
dec
int
inc
and
push
push
je
cmp
addb
hlt
dec
xchg
test
sub
loop
xor
ljmp
or
andl
sub
adc
sbb
fisttpll
test
sbb
mov
or
xchg
pcmpeqw
xor
loop
lds
shlb
push
int
mov
dec
push
jg
push
orb
push
xor
or
daa
loop
mov
mov
mov
shrl
shll
and
movsl
push
xor
push
rcrl
adc
popl
or
jge
push
pop
test
dec
outsb
push
inc
out
flds
int3
jb
cmpsb
mov
aad
repnz
cmpsb
or
add
xor
adc
cwtl
pop
xor
mov
jbe
xchg
sbb
out
fisubl
fcomps
dec
xor
out
arpl
dec
lret
sar
addr16
lret
sbb
push
push
dec
mov
sub
mov
sub
pop
clc
call
in
xor
enter
cmovl
jns
jmp
mov
scas
insl
cmc
jl
push
fdiv
js
xchg
daa
sbb
or
stos
inc
mov
adc
pop
imul
mov
ja
and
jo
aam
lds
outsl
out
jb
in
dec
lret
iret
jbe
ja
pusha
into
jb
imul
jecxz
inc
jae
adcb
pop
lahf
pop
cli
cli
test
dec
ss
xor
inc
inc
nop
sahf
std
shrl
test
cmp
jae
mov
stos
inc
stos
adc
lock
sub
fsubrs
cmp
xchg
aaa
incl
cltd
xor
outsl
pushf
pop
push
cmpsb
rcrl
lcall
aam
pop
dec
pop
les
lahf
stc
cmpsl
rorl
xlat
insb
sbb
xor
add
mov
mov
in
cmp
arpl
insl
fimull
jnp
xor
das
orl
out
mov
mov
scas
repz
outsb
jbe
in
push
sbb
inc
add
shl
push
js
popf
inc
in
cwtl
les
icebp
out
subb
in
pusha
jecxz
jge
jne
int3
insl
mov
mov
lea
insb
inc
jmp
inc
stos
aad
or
pop
jle
inc
xor
sbb
jg,pn
test
push
fldcw
dec
cwtl
jp
aaa
push
add
jne
jl
int
dec
dec
push
stos
xchg
repnz
fwait
test
xchg
cs
sbb
adc
scas
das
mov
bound
jp
out
call
ds
nop
mov
hlt
or
sub
out
push
add
cmpsb
cltd
ljmp
push
out
shr
xchg
add
ffreep
mov
jno
fs
mov
and
xchg
pop
jne
jo
and
and
fisttps
xor
clc
aad
sub
sub
xchg
repz
sbb
fldl2e
cmp
bound
shl
fidivrl
lods
sbb
or
out
add
repnz
ret
or
inc
jb
sbb
inc
std
cmpsb
dec
pop
push
cld
pop
jmp
cli
bound
lods
adc
mov
push
enter
cli
sub
es
adc
mov
insl
pop
push
dec
mov
das
xchg
jecxz
outsb
lahf
and
mov
bnd
mov
aam
add
mov
shlb
mov
lcall
sbb
mov
les
and
shlb
ret
or
jle
dec
mov
aas
negb
sub
shrb
mov
in
adc
cmc
push
jmp
test
push
out
scas
jb
dec
inc
cmp
inc
lds
sbb
mov
adc
lock
pop
and
adc
repnz
gs
sbb
xchg
pop
adc
jmp
and
sbb
lcall
daa
xchg
sbb
push
cmp
bound
adc
bound
stos
push
mov
jb
flds
cmp
mov
rclb
jno
lcall
inc
push
out
or
push
add
imul
fidivrl
std
jle
cmpsl
adc
iret
or
mov
mov
flds
xor
packsswb
pop
jmp
jge
imul
inc
popf
mov
mov
push
xchg
repnz
push
movsb
adc
sbb
stos
mov
adc
and
pushf
daa
or
add
jle
mov
les
dec
fwait
add
jmp
inc
cmpsb
cmp
inc
xlat
icebp
int3
out
dec
mov
imul
in
dec
clc
dec
xor
inc
js
sbb
xchg
jae
jg
les
mov
dec
lea
les
int3
mov
hlt
jmp
int3
pop
shl
imul
inc
stos
inc
icebp
and
stc
repnz
in
cmpl
outsb
test
shrb
adc
movsb
popa
and
movsb
in
or
fistpl
sub
stos
std
cmc
push
jbe
mov
out
movsb
out
rcl
lock
orb
xchg
sbb
and
add
aam
ret
mov
and
xchg
xor
push
andb
mov
orb
adc
mov
fisttps
imul
aas
cs
rcl
idivl
cmp
ret
ror
or
test
test
push
in
mov
pop
add
int
mov
jecxz
scas
pushl
cmp
test
pop
insl
lcall
js
stos
sub
iret
mov
xchg
dec
inc
in
sub
cmp
mov
enter
mov
in
and
xorl
push
inc
pop
sub
dec
mov
out
int3
sahf
in
pop
cwtl
les
mov
add
mov
aaa
cmpsb
imul
daa
psubb
push
adc
cs
arpl
loop
mov
lahf
rorl
sub
dec
mov
add
push
dec
xor
call
mov
iret
int
xorb
push
ficomps
in
cmp
out
test
cwtl
aas
jo
loop
sub
dec
cmc
dec
or
mov
fisubrl
cmpsl
cmp
hlt
lret
jns
out
lods
mov
jmp
clc
fmulp
insl
lds
pop
cltd
jae
xlat
sub
je
inc
rolw
adc
add
add
xchg
test
ficoms
jp
adc
not
or
mov
and
push
jg
sbb
lds
sub
cwtl
add
fmulp
pop
test
insl
repz
sub
fldenv
mov
repnz
fisttps
cld
notl
orb
lods
sahf
pushl
call
outsl
scas
push
popf
push
int3
popf
cmp
adcb
mov
in
sarl
cmp
mov
sbb
imul
add
push
mov
std
fs
push
cli
repz
mov
push
in
inc
inc
cmpl
insb
adc
mov
jge
rorb
push
sub
aas
outsb
and
movsb
jb
into
testl
js
or
mov
popa
adc
stos
add
popf
mov
les
aam
lock
arpl
notb
sarl
test
outsl
lret
insb
mov
loopne
in
shrl
mov
push
and
daa
repnz
mov
lock
sub
add
mov
scas
stc
cmp
mov
cli
test
mov
add
ds
vmovdqu
stos
dec
cmp
jbe
pop
pop
and
out
jl,pn
cs
add
fiaddl
or
ror
cmovo
push
push
aam
push
mov
notl
iret
stos
jb
ljmp
rcr
jle
xor
into
push
mov
fsqrt
mov
cmp
mov
dec
icebp
lahf
push
fidivl
cmp
sbb
mov
movsb
adc
adcl
add
or
and
xor
push
cmp
ffree
in
fildl
xlat
inc
jo
lahf
pop
test
fisttpl
push
iret
xor
jecxz
mov
xchg
adc
xor
sub
mov
pop
jle
outsl
divl
jge
movsl
shr
sub
jns
push
add
fstpt
inc
jle
mov
adc
lods
and
xlat
inc
aam
xchg
sahf
pop
stc
addb
dec
filds
sarl
mov
pusha
cli
mov
mov
lock
jno
in
outsl
mov
sbb
jl
or
shlb
mov
mov
adcl
cli
xchg
adc
jbe
mov
and
xor
adc
cmp
lods
cmpsb
jnp
roll
push
lock
fldl
dec
lret
or
ret
mov
lret
inc
xchg
add
jmp
xchg
sub
fsubrl
lods
or
xlat
xchg
xchg
sub
mov
loope
mov
sub
aad
shrb
or
sbb
bound
loop
mov
mov
nop
test
mov
fbld
dec
or
jg
out
xchg
push
pop
mov
ret
sub
jns
aaa
mov
test
fdivl
sub
imul
jge
lods
test
inc
push
xchg
lea
add
aaa
scas
add
std
adc
dec
push
mov
push
shrl
ret
push
pop
jge
pop
cmpsl
mov
outsl
mov
or
sbb
lods
xor
test
jle
insl
loopne
pop
jmp
xor
outsb
sti
mov
rcrb
aas
ret
xor
mov
nop
add
outsb
in
jmp
bound
ss
push
mov
mov
pop
leave
aas
popf
scas
shl
pusha
pusha
mov
jb
add
iret
cmpsl
out
popa
stos
fcoml
outsl
rcrb
test
lfs
or
adc
dec
mov
lret
jl
loope
push
rcrb
jb
mov
sub
mov
or
add
add
or
mov
sub
out
lock
inc
or
mov
sub
jp
lock
mov
pop
icebp
movsl
adc
xorl
dec
lock
stos
mov
cmp
pusha
jmp
inc
pop
push
sahf
push
scas
cmp
xor
add
imul
add
icebp
imul
leave
repnz
loope
test
push
fwait
das
insb
pop
iret
mov
pop
lock
pop
icebp
clc
jbe
fsubr
cmpsl
imul
mov
cmp
out
sub
movsb
fiadds
out
push
mov
or
xchg
pop
jecxz
and
clc
jae
or
mov
std
jmp
adc
inc
and
insb
mov
imul
jbe
js
jge
xor
or
xchg
pushf
imul
or
cmp
cmp
insl
pop
cli
adc
sbb
orb
dec
pop
into
inc
pop
loope
mov
mov
or
mov
jnp
pusha
cwtl
push
pusha
xchg
push
or
loop
iret
sbb
fsubrs
sarb
sarl
mov
shlb
xor
popf
sbb
fisubrl
movsl
inc
cltd
sbb
sub
in
push
mov
insb
sbb
jmp
aam
push
sub
pop
mov
mov
fidivrl
test
add
mov
xorb
idivl
imul
clc
ja
clc
scas
and
bound
gs
das
push
adc
insb
sub
pop
inc
stos
mov
shll
aam
pop
add
xor
inc
test
mov
jecxz
repz
inc
mov
outsl
mov
push
xor
bound
roll
jne
rorb
xlat
pop
movb
xchg
call
test
arpl
mov
popl
and
xchg
out
push
jns
push
and
push
mov
xchg
cmp
mov
jne
repnz
adc
out
iret
in
mov
cmp
loop
mov
loope
dec
inc
jle
add
popa
push
std
clc
inc
popa
mov
lret
push
jge
sahf
insl
push
call
xor
ret
push
fstps
jge
xchg
loop
ja
xor
mov
scas
xchg
xchg
xor
or
jle
fwait
pop
test
cmpsb
xlat
arpl
ljmp
test
pop
dec
arpl
jb
mov
lea
sbb
lock
jb
inc
push
sub
cmp
mov
imul
xchg
incl
sahf
sub
movsl
ljmp
int3
cld
xchg
mov
mov
divb
push
and
test
int3
cld
xchg
aas
adc
shll
insb
les
into
das
sti
push
pop
cmp
xchg
loop
or
out
popf
loopne
jns
sub
fimuls
dec
out
mov
or
js
jbe
sub
lahf
xor
push
xlat
xchg
sti
ds
jg
push
icebp
sbbl
ror
pmaddwd
jge
ss
add
faddl
pop
pop
inc
ja
adc
rcrb
mov
pmuludq
jmp
pop
xor
std
xor
fwait
ljmp
and
or
daa
cmp
and
loop
lods
and
xlat
cs
fsubs
jl
mov
aaa
or
xor
sub
in
pop
pop
add
sti
push
imul
push
leave
or
mov
ror
test
pop
filds
enter
jmp
mov
rcrb
add
dec
and
cmp
negl
rcrl
sub
lods
decl
push
ss
mov
push
movsl
aaa
pop
out
push
mov
sbb
sbb
jno
xchg
or
xchg
imull
mov
or
push
aas
test
cld
iret
jae
ljmp
xchg
out
sbb
mov
std
xchg
inc
mov
sbb
mov
mov
cmc
mov
pop
dec
pop
xchg
cwtl
sbb
movsl
roll
add
out
aaa
es
in
fistpl
ficoml
dec
imul
in
shll
orl
popa
scas
cs
addb
gs
in
jle
test
dec
jmp
pop
pop
xchg
cmp
int
adc
in
bound
jmp
mov
fwait
sbbl
push
icebp
xor
adc
pop
push
xchg
loope
sarl
adcl
imul
dec
jge
xchg
enter
sub
iret
sbb
dec
loop
movsl
arpl
imul
cmpsb
sbb
push
mov
icebp
jo
fdivrs
das
insb
les
cmp
test
cmp
jb
outsb
inc
add
popa
inc
xchg
iret
add
pusha
hlt
rol
out
call
clc
or
ficomps
mov
mov
jb
xor
cmp
out
test
les
dec
sbb
dec
pop
in
adc
in
fs
addr16
pop
mov
dec
es
or
push
inc
ja
dec
mov
sub
cltd
push
mov
das
add
mov
ljmp
stos
sbb
aas
mov
movsb
pop
mov
dec
lods
out
jmp
mov
lods
fcomps
add
sarb
lock
inc
outsl
ret
iret
sbb
push
add
dec
mov
xchg
out
cli
inc
imul
fisttpll
movsb
xlat
sbb
gs
inc
loope
cli
push
int3
leave
sub
push
mov
scas
stc
lea
mov
mov
insl
mov
adc
idivb
xchg
das
jno
sbb
inc
sub
loope
push
pop
mov
cmc
cmp
mov
aas
insl
jnp
stos
test
test
adc
jp
jp
push
push
xor
cmp
nop
nop
pop
inc
pop
mov
dec
addl
pop
jnp
inc
pop
sbb
jne
out
out
flds
pop
cmp
inc
maskmovq
divl
jecxz
xor
test
fidivrl
stos
cmp
sub
jns
push
pop
inc
adc
mov
inc
cmpsb
xor
hlt
push
fmul
inc
arpl
and
mov
clc
arpl
dec
adc
mov
sbb
fidivl
mov
call
mov
inc
into
and
mov
xorb
cmp
aaa
push
sbb
pushf
push
sbb
rol
scas
lea
aad
leave
sbbb
out
mov
mov
outsl
idivl
jne
cmp
cmp
xor
pop
sbb
sub
jmp
mov
cld
pop
and
sub
rolb
push
call
jmp
cmp
daa
or
jge
pop
push
aad
daa
lods
ret
nop
xor
and
int
mov
aam
cmp
cwtl
pusha
dec
and
xchg
stos
popa
leave
dec
jg
xor
add
aas
repnz
jge
and
outsl
sub
jecxz
dec
idiv
fcoms
pusha
push
daa
lahf
cltd
mov
movsl
loopne
xor
push
cli
mov
lret
hlt
bound
fstp
stos
mov
mov
mov
rorb
mov
or
std
inc
in
ret
adc
mov
xor
movsbl
movsl
sti
mov
sub
pusha
outsl
sbb
jns
inc
mov
inc
out
insb
xchg
adc
gs
and
insl
add
inc
pop
add
mov
cmp
leave
cs
shll
jb
cmpsl
mov
sbb
out
lahf
iret
in
push
cmpsl
enter
lret
and
mov
out
data16
pop
pop
push
mov
repnz
stc
leave
adc
scas
into
aam
in
shll
fs
inc
jnp
imul
sbb
xor
mov
fcmovne
dec
fisubrs
and
dec
and
mov
mov
cmpxchg8b
inc
inc
push
mov
cmpsb
movsb
push
sub
push
adc
or
xchg
movsb
cmpsb
fsubrl
js
pop
insb
mov
adc
repz
pop
mov
pusha
fdivl
lret
dec
adc
out
mov
enter
bound
fdivl
dec
jns
sahf
xchg
arpl
push
add
scas
pop
jecxz
scas
ja
push
fimuls
mov
cmp
sbb
lds
adc
push
sbb
icebp
xchg
icebp
sub
testl
or
pop
scas
mov
fs
mov
into
cltd
bound
movsl
enter
ss
jecxz
push
mov
xor
xchg
inc
rcl
outsb
cmp
jns
out
pop
lcall
fnstenv
xor
fwait
test
call
adc
inc
aas
sbb
incb
inc
push
inc
mov
imul
push
andb
or
sbb
mov
popf
enter
cwtl
add
cmp
dec
arpl
gs
dec
mov
in
imul
pop
sub
int
popa
lods
jmp
jle
loopne
sbb
testb
adc
out
push
cmp
push
sbb
cmp
adc
popa
mov
fwait
rcrb
mov
push
push
punpcklwd
fidivs
scas
das
ljmp
jne
jnp
or
sub
ss
ljmp
pusha
mov
push
outsb
sub
push
daa
mov
test
out
outsl
test
xchg
out
not
popf
cmpsl
movl
mov
pop
sbb
pop
pop
jb
pop
imul
or
sub
pop
scas
mov
imul
push
add
lods
and
xchg
int3
cli
in
in
iret
sub
data16
xchg
pop
inc
std
rorb
push
xor
and
pop
jo
jns
adc
add
dec
xchg
and
aaa
fldenv
add
adc
jmp
push
jp
add
jb
mov
jo
sub
sbb
cli
mov
ljmp
imull
push
fistl
insb
out
or
data16
jb
inc
or
test
inc
data16
inc
sti
xchg
test
mov
rorb
cmp
pop
jmp
bound
mov
jmp
sbb
sbb
push
jae
dec
jmp
cmp
jno
mov
nop
cli
dec
or
data16
push
mov
loope
decl
dec
orb
inc
add
inc
ljmp
push
imul
aaa
xorb
push
lcall
inc
fdivrl
rcrb
sbb
pop
int3
sbb
add
sti
arpl
cwtl
ret
adc
bt
outsb
push
push
fidivs
xor
pop
inc
inc
and
lock
loope
call
mov
iret
hlt
imul
ljmp
in
rclb
mov
pop
xor
loop
cmp
cli
xchg
into
sub
lcall
dec
mov
mov
xor
in
sarl
push
inc
and
mov
add
push
imul
loope
xor
mov
cmp
pop
jo
adc
xchg
fadds
data16
add
mov
jo
cld
mov
dec
rcrb
push
push
push
mov
push
lds
cwtl
mov
mov
jecxz
hlt
out
mov
test
mov
jge
sti
fcoms
pop
cmpsl
inc
pop
dec
pop
lds
xchg
add
repnz
push
mov
xor
push
jne
dec
push
shrl
dec
movsl
and
mov
jns
testl
xor
int3
arpl
xchg
add
mov
pushl
inc
adc
push
insb
inc
dec
mov
fsubrl
and
js
mov
int3
vmovupd
adc
mov
in
xchg
hlt
popa
dec
add
data16
popf
xchg
mov
rolb
fwait
test
sub
call
ret
mov
jbe
push
sub
mov
int3
daa
adc
pop
xchg
loop
addb
adc
jg
ds
in
in
test
add
xor
and
cmp
mov
mov
push
and
and
mov
sbb
movsb
outsb
das
pop
popa
lahf
push
cmp
pop
dec
jo
or
outsl
cmpsl
add
mov
mov
or
fisubrl
imul
fs
lahf
imul
xchg
shlb
aaa
inc
push
js
out
mov
add
jmp
les
xchg
popf
mov
xor
adc
and
inc
out
ljmp
dec
adc
jnp
call
in
sti
das
jbe
mov
cltd
or
imul
push
mov
rclb
mov
or
nop
test
lret
test
sar
cld
xchg
fistpll
inc
insl
cmc
jne
mov
scas
cmc
call
dec
xchg
pop
fidivrl
adc
lea
outsl
lods
and
push
fadd
sub
jbe
lea
mov
pop
out
mov
mov
subl
ret
in
inc
sub
mov
dec
push
add
sbb
xchg
sub
or
sub
cltd
mov
or
xchg
into
or
cmp
inc
mov
icebp
mov
fldcw
sahf
jge
mov
mov
mov
pop
xor
xchg
bsf
incl
xor
das
test
or
negl
imul
pop
gs
pop
xor
add
pop
sete
jmp
xchg
cmc
cmpsl
push
and
pop
ljmp
je
or
clc
push
mov
in
lods
push
sarb
lds
cld
add
dec
pop
jae
int3
hlt
dec
rcll
xchg
xchg
mov
pop
xchg
jb
test
adc
xor
push
jns
push
int3
jbe
rcl
push
xor
dec
int3
ljmp
jnp
cmp
jb
scas
jno
mov
in
fisttpll
sahf
popa
mov
jg
repz
pshufw
dec
cs
fisttpl
xor
mov
xor
nop
pushf
mov
sbb
sub
sub
jge
test
jbe
test
inc
mov
loope
fwait
das
and
loopne
inc
lcall
into
xchg
scas
inc
adc
pop
sub
insl
mov
mov
mov
mov
adc
jg
and
imul
add
mov
jle
adc
push
out
dec
add
cld
jp
pushf
lcall
adc
lahf
mov
jecxz
popf
fdiv
sbb
mov
mov
inc
inc
and
scas
sub
pop
je
mov
int
jne
sub
xchg
ljmp
in
in
fsubrs
push
cmp
jle
bound
or
push
xlat
pop
aad
fwait
aad
pop
outsl
sbb
aad
icebp
scas
clc
cwtl
shlb
into
dec
jle
cmp
in
add
in
inc
adc
into
cmp
push
push
aas
sub
xchg
and
stos
sub
xchg
rorb
in
lea
mov
adc
add
jb
xchg
in
cmc
xlat
pushf
arpl
dec
push
push
mov
in
pop
xchg
scas
pop
push
data16
inc
xor
gs
pop
daa
insb
jnp
mov
out
cli
xor
jo
push
xor
mov
in
repnz
mov
les
or
std
mov
mov
hlt
pushf
les
cmpsb
cmp
sub
mov
test
leave
orl
dec
sub
lret
xor
sbb
std
mov
lds
cmp
outsb
push
roll
jno
and
add
movsl
data16
and
mov
xchg
decl
pop
cmp
jb
test
xor
or
scas
rolb
jo
sub
xor
std
xorb
in
cltd
outsb
cmp
js
and
xlat
test
rcl
xor
and
subl
push
pop
pop
add
insl
inc
hlt
dec
stc
addr16
iret
push
fnstsw
mov
ja
sub
mov
push
pop
hlt
out
int3
push
add
inc
adc
div
inc
inc
xchg
ffreep
in
dec
cmp
cmc
pop
xor
es
fs
loopne
mov
leave
idivl
fidivl
sub
and
ret
push
mov
add
sbb
adc
orl
mov
or
jg
mov
mov
cmpsl
and
or
loop
push
or
pop
out
pop
cmp
and
popa
fisttpll
push
mulb
sub
in
xchg
test
addr16
or
call
pushf
pop
mov
sub
cmp
popa
and
sub
nop
les
fstps
mov
mov
outsb
loopne
push
ja
mov
hlt
in
aas
xchg
or
in
xor
int3
mov
dec
and
pushf
frstor
popa
cmc
jbe
ljmp
mov
ror
mov
out
adc
negl
fimull
std
cld
adc
jge
test
fldl
mov
dec
pop
pusha
or
das
outsb
jae
roll
fsubrs
push
test
lock
dec
jns
out
pop
roll
negb
dec
and
jo
js
mov
movsl
add
div
inc
mov
mov
push
repnz
xor
das
lret
jp
subl
jle
mov
xor
addr16
in
mov
addl
push
outsl
xor
dec
addr16
mov
jle
xchg
inc
inc
dec
out
push
cmp
addl
mov
int3
je
dec
jp
lret
xor
mov
mov
stos
lock
sahf
add
pushf
mov
mov
inc
aam
jecxz
xchg
push
or
xchg
imul
or
cmpl
mov
pcmpgtb
sbb
loop
or
mov
jae
sub
xor
enter
stos
cmpsl
or
push
in
imul
inc
ds
xor
cmp
mov
rorb
adc
xor
jge
mov
cmp
add
popf
pop
aad
scas
dec
popf
xchg
mov
sar
jnp
push
aad
std
jmp
imul
fistl
mov
fdivrs
add
fdivrs
or
stos
adc
sbb
arpl
repz
sti
popl
pop
clc
xor
aaa
dec
xchg
in
fs
pop
dec
fwait
mov
outsl
fadd
fbld
outsb
mov
xchg
xor
inc
xor
je
pop
ret
imul
xor
into
clc
mov
repnz
adc
jns
mov
push
lahf
gs
dec
jbe
hlt
pop
ljmp
mov
std
popa
sahf
jne
ljmp
dec
ljmp
xchg
sarb
xchg
dec
mov
mov
jge
out
js
add
lods
and
mov
xor
mov
mov
sbb
ret
ja
jecxz
scas
sub
and
mov
pushf
pop
xor
xor
sub
push
sub
lahf
or
xchg
dec
addr16
cmp
dec
je
push
les
int
arpl
filds
sbb
jbe
or
mov
xor
pusha
test
or
ljmp
out
jl
pop
jne
push
movb
movsb
or
xor
push
test
nop
sbb
das
adc
loopne
add
mov
mov
orl
cmp
add
lret
fwait
popa
pop
cmp
pushf
mov
scas
in
stos
fcomip
lods
pop
cmp
pop
lret
fs
mov
stc
dec
popa
clc
gs
xor
adc
mov
push
mov
lcall
mov
push
jmp
mov
jp
dec
bound
frstor
push
ljmp
xor
pop
adc
jb
add
dec
enter
and
pop
add
jmp
lods
daa
scas
movaps
mov
cli
mov
addb
jge
sbb
imul
cli
clc
sbb
xor
std
push
cmp
push
and
jnp
mov
and
push
incl
dec
in
stos
mov
js
cmp
jg
inc
cld
clc
xchg
leave
arpl
push
add
and
cwtl
pushf
nop
into
jbe
sbb
xor
mov
dec
test
lret
xor
mov
cmpsl
adc
js
mov
push
loopne
insb
in
pop
inc
mov
mov
xchg
dec
mov
ret
mov
orl
pop
test
pop
std
ret
lea
ret
jb
xor
mov
adc
rcl
jmp
movsb
rorl
es
mov
shrl
daa
std
cmp
mov
popf
fisubrl
jge
xchg
xor
push
in
inc
movsb
and
test
mov
xor
push
mov
inc
orl
push
bound
mov
mov
pop
sarl
xchg
lods
jnp
lret
popa
in
pop
cld
push
cmp
cmp
pop
add
xchg
addr16
rcll
jnp
add
adc
stc
test
mov
in
jp
sub
adc
and
mov
imul
inc
in
aaa
lock
and
in
mov
imul
testb
dec
push
dec
jmp
repz
adcb
mov
cmp
adc
and
int3
rorb
insl
cltd
pop
cmp
scas
jg
mov
or
add
test
push
shll
mov
xor
stc
dec
inc
es
leave
repnz
mov
sbb
das
insb
or
xchg
pop
int
inc
cmc
xor
aad
or
subb
cli
in
cli
pop
leave
xchg
push
xchg
push
movups
mov
sarb
sahf
inc
vsqrtpd
mov
sbb
jbe
inc
repz
push
sub
xchg
movups
pop
mov
lods
mov
out
sbb
sbb
fcompl
sub
pop
jl
add
mov
jp
aaa
jge
ret
mov
dec
inc
ljmpw
mov
stc
pop
dec
fwait
cmp
cld
mov
hlt
bound
in
lret
out
jmp
adc
outsl
hlt
insb
mov
es
mov
and
add
lea
xchg
inc
xlat
jbe
sbb
mov
repnz
mov
cmp
sbb
insl
mov
push
aaa
dec
bound
mov
ja
sbb
aad
adc
in
mov
sbb
cmp
clc
add
insb
outsl
add
shll
pushf
push
sub
in
dec
jecxz
dec
pop
je
cwtl
sbb
push
push
xor
or
arpl
scas
das
adc
mov
xor
repnz
jae
inc
lea
sub
mov
adc
xchg
decb
stos
stc
imul
fmull
aam
xor
adc
jbe
mov
xchg
lds
mov
and
int3
sub
sbb
test
jg
ljmp
xchg
mov
sbb
out
push
repnz
pop
cmc
dec
mov
cmp
cmp
jo
mov
gs
and
cmp
inc
inc
xchg
lods
and
les
int3
ret
es
ljmp
cmp
bound
inc
decl
movsl
mov
shl
add
xchg
jg
cwtl
and
test
pop
jmp
push
add
into
shr
cmc
pop
xor
jb
add
fisubs
sbb
xchg
xchg
orl
mov
mov
cltd
aas
fstpl
cwtl
push
add
ss
sbb
ror
xchg
inc
sbb
ja
in
mov
shr
add
std
fisttpll
push
xor
scas
xor
test
in
mov
sbb
pop
dec
sbb
push
jae
adcb
mov
icebp
adc
iret
sbb
pop
mov
or
and
das
aaa
loop
ss
cs
pop
push
lock
imul
xchg
jg
into
jp
das
cmp
flds
into
cmp
int
xchg
cltd
jnp
jno
jnp
daa
push
push
mov
ret
ret
add
or
fld
cmp
lret
sub
es
outsl
outsb
sub
add
nop
ss
cmp
push
and
aam
push
notb
stc
sbb
out
fucomi
ret
and
cmp
loop
outsb
cmp
icebp
cmc
pop
jp
cmp
loope
je
nop
add
push
xchg
dec
jbe
ret
mov
cmp
sub
arpl
push
jns
xorl
dec
mov
rcll
orl
cmc
push
mov
push
cwtl
bound
aad
jmp
incb
xor
dec
xchg
stos
jmp
pushf
fnstsw
aaa
aas
xor
mov
add
and
xchg
xchg
dec
psraw
ficompl
or
jle
mov
ror
adc
loopne
ljmp
jns
stos
mov
xchg
jl
out
jnp
gs
test
pop
les
sbb
lret
out
fnstsw
add
movsl
adc
jmp
shll
pop
mov
cmc
add
ret
out
sbb
scas
scas
loope
add
popf
pop
ret
adc
cmp
or
dec
rcrb
data16
call
xchg
std
jg
lods
lcall
and
int3
inc
and
sbb
cmpb
lahf
push
dec
ss
adc
xor
jg
cli
out
and
ficomps
cmpsb
xchg
lret
mov
push
xchg
add
mov
add
out
lret
icebp
outsl
mov
sbb
ror
xchg
sbb
lods
jmp
aam
enter
mov
cwtl
lret
popf
es
add
jecxz
in
dec
out
mov
push
and
fmull
addr16
pop
lods
repz
fwait
mov
call
adc
ds
xchg
int
sbb
and
iret
xchg
xchg
jbe
dec
fbld
inc
scas
pop
mov
push
movsb
shrl
mov
fnsave
mov
int3
jo
sbb
xchg
jle
push
inc
clc
adc
bound
stos
clc
mov
fwait
aaa
jle
dec
shlb
in
outsb
shrl
adc
mov
sub
dec
shl
ret
enter
insl
idivl
rcrb
lret
pop
mov
adc
shlb
xchg
and
mov
mov
cmc
add
xchg
mov
adc
mov
or
push
popa
mov
out
insb
xchg
das
pop
hlt
or
mov
adc
cmpsb
aaa
adc
popf
mov
dec
cwtl
push
inc
lret
fdivl
jbe
xchg
jl
xchg
insl
mov
sbb
cwtl
adc
adc
dec
mov
pop
adc
mov
mov
and
jl
mov
test
pop
repnz
lods
int3
popl
and
out
rcll
cmp
out
ficoms
mov
and
mov
xor
fildl
jecxz
mov
sbbb
mov
pop
cmc
push
mov
xor
roll
pop
xor
rclb
dec
and
add
pop
enter
mov
leave
jle
mov
adc
loop
ficoms
hlt
and
out
mov
jmp
aad
sbb
and
dec
and
mov
enter
jl
mov
cli
jns
sbb
int
insb
mov
mov
cmp
adc
mov
stc
jmp
aaa
cmp
inc
push
xor
cmp
rol
jmp
pop
mov
icebp
xchg
dec
test
jecxz
push
pop
lretw
cmpsl
dec
icebp
test
mov
jmp
mov
mov
jp
nop
sbb
rorb
dec
minps
negl
out
or
ss
cld
cmpsl
cmp
mov
and
test
mov
repz
int
addr16
mov
push
dec
test
jne
call
mov
cwtl
dec
ret
call
jno
icebp
xchg
andb
adc
test
xchg
dec
lret
cwtl
add
push
paddsw
xchg
fimuls
test
push
icebp
sbbl
sarb
mov
inc
iret
js
sbb
mov
rcll
mov
sbb
aas
lcall
and
mov
mov
pop
sahf
rclb
outsb
and
pop
arpl
iret
int
mov
and
shll
bound
mov
fldt
movsb
push
cmp
pop
mov
cmpl
pop
adc
lods
lock
ret
notb
bnd
lret
adcb
xchg
cmpsl
lock
cli
insl
jmp
add
addr16
adc
lret
push
mov
cwtl
lds
mov
jbe
sub
arpl
fiadds
inc
les
xor
mov
into
lods
sbb
push
mov
push
adc
mov
in
js
stos
or
stc
cmp
mov
je
pop
scas
icebp
adc
aad
add
aad
mov
sub
add
lret
rclb
jle
xchg
mov
ret
lret
fs
insl
jb
jb
mov
idivl
repz
inc
sbb
testl
pop
insb
pusha
aaa
add
aad
test
shr
test
mov
xchg
psadbw
mov
ret
sbb
enter
add
mov
cmpsb
sbb
push
fisubrl
sbb
inc
inc
or
mov
or
xor
pop
lock
fwait
cmc
stos
dec
cmp
bnd
int
dec
jmp
dec
popf
or
xlat
dec
ret
sarb
out
adc
scas
stc
das
dec
shlb
lahf
cmp
add
hlt
adc
pop
fcoml
xchg
inc
push
call
jle
js
fildll
aas
cmp
divl
inc
aad
enter
repnz
mov
stc
gs
push
mov
mov
rcrb
test
loope
mov
cli
aas
and
push
lret
add
xorl
pop
push
mov
or
shll
lcall
dec
daa
cmp
dec
int3
push
shld
inc
mov
jnp
es
xor
fsubl
inc
js
jae
or
or
dec
sub
popf
xor
xchg
add
test
daa
loopw
test
add
pop
test
sbb
insl
aaa
cld
sbb
add
jne
mov
lods
dec
push
mov
shll
xchg
lret
mov
mov
xchg
cli
jo
adc
and
jb
rolb
add
and
inc
cmp
aad
sahf
lods
mov
adcl
and
mov
shrb
push
mov
sbb
inc
ret
jle
xor
inc
fisubrs
jle
movsb
inc
js
and
dec
mov
ret
test
pop
insb
stc
xor
lock
mov
iret
lret
or
add
pop
ret
cbtw
out
out
je
pop
mov
sbb
test
push
dec
mov
inc
mov
mov
xor
enter
mov
loop
sub
sub
jl
insb
mov
jg
sub
pop
out
scas
mov
and
xor
push
mov
aaa
hlt
inc
adc
inc
neg
std
scas
lret
mov
mov
inc
push
or
loope
rcrb
add
mov
cmp
in
push
push
daa
xchg
push
xor
popa
add
adc
adc
lcall
fadd
xchg
cltd
xchg
cmp
fiaddl
mov
stos
jl
cmp
aaa
inc
std
mov
sub
pusha
fcoms
cmp
iret
fadds
push
mov
and
adc
aad
dec
movsb
stos
outsb
daa
nop
subb
cs
daa
fisubrl
lods
inc
cmp
in
mov
sbb
or
adc
fildll
je
add
mov
add
dec
add
into
icebp
pusha
mov
mov
popf
and
bound
or
mov
into
add
lcall
jo
push
push
mov
xor
pop
nop
push
xchg
stc
mov
cs
xchg
pop
lahf
and
sti
fimuls
xor
pop
add
lret
sbb
ficoms
nop
mov
sahf
lods
jno
call
icebp
jbe
scas
adc
push
dec
ss
push
ss
insb
push
add
psubw
hlt
cmpsl
popa
out
push
and
or
dec
out
jnp
lcall
cmp
dec
dec
push
faddl
or
push
into
and
dec
and
imul
test
xorb
inc
mov
push
cmp
and
out
push
sar
or
adc
iret
rorb
fs
daa
jae
scas
mov
lcall
pop
dec
imul
xchg
inc
dec
xor
mov
jmp
add
mov
outsb
adc
aad
mov
int3
ret
adc
mov
or
sub
mov
mov
movsl
push
mov
and
mov
fistpl
inc
mov
add
dec
sbb
lock
and
cmc
sarb
pop
lock
adc
fisubrs
push
inc
xchg
cmp
div
loop
cmc
das
xor
mov
dec
mov
and
inc
and
cs
mov
pop
lret
imul
mov
sub
call
xor
or
inc
movsl
lcall
pop
push
loope
jecxz
jle
ja
ds
sub
fdivs
adc
sarb
push
xchg
add
pop
loop
sbb
inc
push
leave
nop
sub
scas
sahf
sub
inc
test
mov
test
add
pop
loopne
and
outsl
pop
sub
aad
and
and
hlt
std
cld
push
pop
outsl
out
popa
or
xor
adcl
je
lock
idivl
in
bound
inc
dec
hlt
jp
dec
add
jns
cli
sbb
inc
push
lds
arpl
pop
fldt
sbb
outsb
scas
stos
into
ljmp
dec
das
lcall
in
aad
or
mov
test
cmp
mov
jae
scas
dec
dec
pop
pop
jbe
out
inc
xchg
and
daa
bound
insl
je
fs
push
mov
into
add
cmp
cltd
push
movsb
sub
stos
out
mov
les
push
push
cmc
cmp
or
mov
pusha
xchg
outsl
push
movsb
pop
pop
pop
push
jnp
add
xor
outsl
xchg
inc
cmp
xor
js
out
repz
mov
lock
sub
sbb
shrl
addb
jbe
and
pop
lahf
in
stos
pushf
in
push
int
inc
xchg
jbe
and
push
subl
xor
repnz
add
mov
xor
sbb
fdivl
cltd
in
add
repnz
shll
and
add
cmp
xchg
movb
daa
lcall
call
inc
adc
mov
jl
mov
mov
sahf
out
enter
hlt
pop
pop
mov
sbb
lods
cmp
dec
in
std
in
mov
loope
and
dec
iret
outsl
cmc
mov
sahf
aam
lahf
lret
xor
nop
mov
xchg
dec
jg
loope
cmp
test
xchg
fs
in
jno
sub
and
arpl
fmuls
add
pop
andb
pop
xchg
push
cmp
in
pushl
out
pop
fs
cmp
mov
jnp
cmp
pushf
mov
pop
add
xor
pop
jecxz
add
add
xchg
cmpsb
mov
jae
ss
outsl
leave
cmc
sarb
or
clc
in
mov
movsb
push
dec
je
mov
lret
int3
cmp
daa
adc
ss
mov
inc
sahf
inc
mov
pop
lods
sbb
sub
in
in
in
outsb
pop
cmpsb
dec
inc
inc
leave
push
cli
into
cmp
scas
push
sbb
popl
cmp
or
mov
adc
lcall
xor
enter
shl
lock
xchg
jo
push
xchg
add
sbb
sbb
cmc
int
push
dec
adc
inc
lahf
fadds
mov
std
xchg
or
inc
dec
or
inc
lods
imul
inc
xchg
in
addb
adc
sub
mov
ret
push
or
inc
call
roll
mov
in
mov
cvttps2pi
rclb
ja
rcrb
pop
mov
pop
mov
mov
int3
mov
pushf
mov
push
add
inc
jge
cmp
das
sbb
movsl
cli
mov
adc
add
xor
push
fiaddl
mov
mov
cmp
adc
fldenv
jp
xchg
rorb
mov
ja
out
setl
add
movsl
add
push
cltd
clc
jle
ret
out
sub
fildl
jns
cltd
mov
shrl
mov
add
in
aas
lods
idivb
negb
fisubl
dec
mov
call
dec
sbbb
test
outsl
repz
sbb
xor
iret
outsb
push
push
inc
into
pop
add
shrl
and
mov
iret
inc
mov
jl
add
mov
jge
sbb
repnz
mov
test
sahf
jb
push
movsb
out
jno
lcall
pusha
lcall
str
inc
mov
cmp
insb
test
out
dec
fs
aad
aam
inc
lret
dec
push
xchg
icebp
ficomps
pop
inc
std
popa
sub
test
mov
jle
jmp
movb
mov
mov
mov
sarl
loope
ss
mov
in
cmc
xchg
xor
test
mov
inc
out
loop
sub
mov
cmp
hlt
lods
sub
mov
inc
in
test
subl
ret
jecxz
dec
adc
outsl
pop
dec
gs
pop
add
push
addr16
adc
cmp
pop
xchg
add
inc
scas
mov
cmp
out
cld
mov
or
xchg
mov
dec
or
add
mov
sub
mov
sbb
popf
mov
addr16
popa
in
adc
aam
popa
shl
mov
or
mov
popf
ret
stos
mov
xor
push
fs
inc
sub
xor
lret
push
in
push
mov
pop
xorl
or
sbb
addr16
enter
je
mov
xor
add
sub
lcall
lods
fisubs
cmp
lods
arpl
sub
jbe
pop
cmp
push
xorl
sub
into
pop
ficoms
std
lds
and
jno
mov
dec
aaa
shll
mov
cmp
arpl
pop
jo
mov
pop
push
arpl
cmp
and
dec
sahf
aas
lods
dec
push
test
dec
lea
pop
push
cmp
daa
sbb
into
loopne
ja
jbe
sahf
mov
dec
pop
sbb
pop
arpl
enter
add
lret
hlt
push
push
lahf
in
dec
mov
mov
mov
adc
fisubs
test
shl
mov
inc
subl
test
rsm
push
and
nop
in
sbb
cmp
cmpsb
mov
cli
out
pop
adcl
add
hlt
loop
add
jnp
lret
cmp
cs
rclb
add
fistpll
sbb
pop
faddl
lahf
clc
mov
xor
ret
add
iret
mov
mov
push
mov
ja
inc
push
sub
adc
test
or
jmp
jo
push
fwait
cmp
push
out
sbb
dec
lea
xchg
add
jns
jb
popa
jae
sarl
cmc
jne
aad
idiv
pushf
dec
fcomp
imul
jae
out
pop
outsb
int3
test
ja
fbld
mov
icebp
scas
nop
and
inc
dec
pop
mov
push
or
lcall
stc
scas
cmc
daa
aas
or
test
mov
enter
pusha
repnz
lret
mov
fdivrl
lret
xlat
cmp
sti
xor
and
mov
arpl
mov
testb
mov
mov
adcl
outsl
fdivr
dec
shrb
ds
xor
pop
or
jnp
jmp
sub
push
or
cmc
pop
lock
cmpsl
outsl
mov
int
in
push
fdivs
in
inc
fcom
sbb
sub
sarb
ret
cmp
sti
dec
or
arpl
fisubrs
push
add
xchg
mov
inc
xchg
xor
sbb
sub
int
lcallw
fbstp
sbb
mov
jl
loopne,pt
aas
push
mov
or
je
cli
lods
mov
test
jg
push
pop
in
cmp
mov
add
stc
pop
jp
aas
loopne,pn
adc
inc
sub
push
test
pop
sub
roll
jmp
daa
cmpl
test
loop
rolb
hlt
int3
ljmp
fistpll
xor
xchg
test
popa
add
sub
loopne
jecxz
push
or
stos
mov
adc
js
stc
jg
popa
out
fmulp
adc
and
cmp
dec
mov
jmp
repnz
imul
vmovhps
pop
fidivs
out
inc
mov
sbb
sub
gs
jg
dec
shrl
jmp
mov
fnstcw
mov
in
dec
rolb
jl
pusha
and
loope
inc
mulb
in
aad
pusha
xor
xchg
mov
jp
or
push
mov
add
jle
stos
cmp
cltd
inc
out
scas
cmpsb
mov
fmul
mov
or
cmpsb
fbstp
or
inc
mov
scas
xchg
add
jl
je
ljmp
fnstcw
sub
push
xor
mov
popf
arpl
in
push
dec
test
sub
ds
dec
ftst
dec
jl
enter
insl
fisttpll
push
icebp
mov
loopne
fsubrs
inc
inc
xor
aas
sbb
imul
mov
cmp
movsb
push
mov
imul
or
pusha
out
pop
repz
lret
xchg
cmp
movsl
mov
pop
and
cmpb
or
cmp
vunpcklpd
mov
jecxz
int3
imul
aaa
lock
xchg
or
fistpl
push
lock
int3
xchg
fldenv
cli
or
imul
cwtl
sub
pop
push
aam
push
inc
jo
pop
shll
out
enter
fwait
scas
and
pop
fwait
cmp
pop
pop
cwtl
ret
clc
fisttpl
lods
es
mov
pop
sub
popa
fs
xchg
rolb
imul
pop
inc
cmp
mov
popf
outsb
call
sete
mov
rcr
out
mov
arpl
insl
xchg
pop
dec
std
lret
add
lahf
fidivrl
xor
sti
fistpl
sti
in
stos
je
enter
lea
xchg
test
loopne
cs
mov
sti
fnstsw
sbb
push
mov
xchg
add
shl
cmpsl
cmp
test
insl
hlt
sub
mov
pop
cmp
jle
adcl
not
add
pushf
push
ljmp
pop
fucomi
testb
pop
mov
ja
mov
push
add
vcmpps
out
scas
fsubs
and
stc
lahf
mov
mov
or
jge
fisubrs
mov
xchg
inc
enter
and
dec
lods
add
insl
stos
test
movsl
cmp
or
sbb
pusha
adc
aam
and
jo
jecxz
fwait
push
mov
pop
inc
arpl
test
push
flds
dec
jp
ret
cs
test
inc
sbb
cmp
inc
lods
inc
dec
mov
repz
jae
out
mov
imul
sahf
mov
rep
mov
outsl
mov
xchg
sub
mov
jge
mov
shlb
ss
sbb
fs
repnz
mov
sahf
fs
pop
fisubrl
test
cmp
divl
jbe
cmp
addr16
movb
mov
rcll
shrb
out
test
movsl
mov
outsb
jne
loopne
push
xchg
adc
add
pop
loop
nop
sbb
ja
sub
and
lea
cmp
and
jae
dec
mov
mov
mov
push
xchg
mov
cmp
lret
lahf
inc
mov
pop
fstl
adc
dec
lret
jmp
lock
roll
test
lret
sbb
sbb
dec
xor
jl
dec
xchg
nop
pop
rcrb
pop
jae
xchg
jle,pt
fwait
pop
mov
and
out
and
add
xor
sbb
mov
inc
dec
ss
cs
and
add
add
leave
pop
imul
in
mov
sbb
arpl
mov
sub
loopne
mov
and
dec
push
cs
les
mov
test
sbb
dec
icebp
and
pop
inc
push
adc
loope
add
dec
dec
outsb
ljmp
arpl
cs
mov
sbb
mov
adc
cmp
icebp
add
stos
cli
je
push
out
ljmp
cwtl
sub
loopne
or
fmuls
mov
xor
jae
aaa
jmp
dec
mov
out
rcr
xchg
pop
pop
add
adc
sbb
or
int3
leave
add
jg
pop
lcall
ds
xchg
xlat
mov
fstpt
cltd
in
sub
mov
orb
xchg
push
pop
xor
push
fnsave
add
sbb
stc
cmc
outsb
inc
adc
orb
or
pop
mov
mulb
adc
stos
sub
rorb
lds
sbb
inc
aaa
mov
enter
std
lds
adc
cmpsb
sbb
inc
lahf
pop
mov
in
int3
test
pop
test
ja
lods
aaa
xchg
aad
in
hlt
popa
and
test
sbb
subb
dec
outsb
jb
mov
arpl
inc
mov
sub
and
push
scas
jo
mov
aas
sbb
hlt
icebp
pop
mov
mov
inc
pop
mov
xchg
sahf
arpl
ss
inc
add
gs
mov
mov
jmp
mov
ret
push
repz
sub
push
mov
andl
cmp
and
lea
fsubrl
inc
lea
ret
or
test
sub
shr
iret
mov
push
mov
xchg
mov
mov
pop
sbbl
xlat
outsl
jnp
loopne
push
mov
fidivs
cmp
es
inc
mov
sbb
xchg
out
jne
jmp
inc
icebp
jge
push
cmp
imul
aaa
cmp
xor
mov
rcrl
xchg
mov
xchg
jp
lock
pop
cltd
pop
adc
data16
lret
pop
dec
push
cmp
jns
fs
add
adc
xorb
xor
xchg
mov
or
aad
push
adc
cmpsb
scas
sbb
xor
out
cmp
mov
dec
or
push
std
loopne
add
outsl
or
adc
jb
pop
das
shll
nop
lea
mov
mov
or
push
inc
cmp
lcall
repz
movsb
add
ret
jb
popf
dec
mov
or
and
sub
cmp
and
and
push
filds
push
ds
aam
inc
jmp
aaa
sub
nop
mov
push
ret
pop
js
imul
in
mov
movsl
in
cmp
mov
pop
mov
adc
pop
sbb
adc
sbb
rol
inc
ja
sbb
pop
mov
test
icebp
or
push
xchg
mov
roll
fcomp
scas
or
loop
mov
xor
push
adc
jae
cmp
add
rcll
es
sub
mov
pop
sbb
mov
push
pop
mov
and
inc
push
xor
pop
push
inc
dec
sbb
add
call
out
pop
xor
scas
cmpsb
movsl
jge
popf
lea
mov
xchg
sub
pop
or
addr16
lods
push
les
lds
test
xchg
pop
xchg
fwait
xacquire
and
lods
jbe
call
loop,pn
nop
je
jg
test
sbb
ja
inc
mov
sub
adc
xchg
imul
sbb
pushf
push
nop
mov
adc
add
jns
popf
sbb
xchg
xchg
dec
jb
out
mov
fcmovu
adc
clc
test
js
xor
inc
dec
ss
add
frstor
mov
pop
jle
test
out
jno
das
xor
clc
arpl
mov
xlat
cmp
xchg
mov
and
jle
insb
out
loope
fcomi
cld
fiadds
ja
data16
adc
js
pop
push
xor
push
cs
and
lahf
pop
ret
jp
mov
xor
cmc
divb
add
fnsave
mov
xchg
sbb
pop
sbb
mov
push
mov
ficomps
scas
inc
inc
rcl
push
push
cmpsl
cmc
xor
ds
xchg
popa
mov
mov
jnp
mov
lret
in
int3
and
fs
adc
push
mov
dec
fimull
sub
adc
test
insl
adcb
arpl
push
or
jae
les
daa
sar
mov
jp
and
aas
cmp
shll
or
add
mov
in
sbb
sbb
cmp
push
push
or
or
and
push
repz
lcall
xchg
sbb
adc
popf
sub
xchg
pop
xor
pop
cmpsb
and
loop
stos
shrb
nop
arpl
scas
jne
xchg
leave
xchg
cmp
iret
rcl
xlat
adc
mov
notb
sbb
imul
push
inc
lods
lahf
out
pop
cmpsb
es
ja
push
shlb
jge
adc
lods
es
and
scas
out
cmp
rol
inc
pushf
movsl
jg
xchg
test
jns
xor
push
lret
pop
mov
loop
cmpsl
ja
movb
jmp
shll
cmpsl
pop
mov
aaa
and
repnz
imull
or
leave
pop
xchg
out
mov
in
sbb
dec
or
stc
lea
cmp
mov
add
mov
inc
icebp
stos
int
icebp
add
adc
mov
mov
jge
sarb
jb
jo
add
dec
mov
and
pop
inc
sub
lods
adc
fcomip
cwtl
ss
xor
jg
pop
stc
inc
pop
lds
pop
mov
cmp
xor
jl
iret
aaa
pop
les
cltd
pop
dec
psubb
stos
and
push
int
stc
xor
nop
mov
jbe
je
jl
pushf
call
into
fldenv
mov
mov
ret
cmp
pop
into
scas
mov
mov
bound
cli
inc
xchg
fwait
inc
dec
pushf
xchg
sbb
inc
sti
mov
daa
out
sub
pop
loop
inc
test
adc
loop
cli
inc
lods
repz
lcall
fucomp
iret
cs
rorb
xchg
mov
and
insl
jnp
adc
inc
js
outsb
cwtl
push
and
mov
xchg
sub
mov
loopne
imul
out
mov
mov
insl
scas
push
flds
xchg
pop
mov
pop
jb
into
cwtl
call
inc
btr
sbb
mov
hlt
dec
arpl
cmpsl
in
mov
xor
xchg
xchg
aas
mov
js
test
mov
fsubl
mov
push
imul
mov
pop
cs
ret
fdivl
push
inc
mov
mov
cmp
jl
int3
notb
cli
add
mov
js
add
ret
aam
gs
jg
pop
sub
lods
jns
add
stos
icebp
push
xor
fcoms
pop
xor
fmull
loopne
sbb
lret
scas
pop
ds
xchg
adc
push
nop
sbb
loopne
mov
push
mov
mov
pop
mov
pop
mov
pop
pushl
and
jnp
pop
sub
ret
lods
or
aas
push
jo
mov
jl
data16
mov
je
mov
fnstsw
adc
push
scas
sub
add
adc
rcll
pop
loop
cmpsl
mov
dec
add
addr16
fistl
or
mov
or
arpl
sub
or
cmp
movd
out
in
inc
cs
jnp
jo
jle
jnp
mov
dec
pop
sahf
xor
subb
mov
mov
mov
mov
inc
clc
lea
hlt
gs
dec
add
push
push
lret
out
fsubs
in
daa
pop
or
xor
and
mov
notb
cmp
mov
idivb
lcall
and
cwtl
pusha
outsl
mov
fadds
dec
xchg
jo
push
rcll
cmp
inc
or
jne
push
mov
pop
loope
cmp
sti
sub
roll
push
push
loopne
jge
lock
jo
std
fsubp
pop
rcrl
xlat
sbb
lods
rorb
or
ja
popa
push
add
outsl
push
cmpsl
xor
sti
cmp
push
jne
sub
jo
pushf
jg
push
pusha
les
lcall
adc
fstl
mov
outsb
ljmp
aam
test
ret
cmp
add
push
pop
add
les
out
cld
xorl
pop
cmpsb
test
into
and
mov
roll
and
push
les
aad
nop
les
in
ja
inc
scas
pusha
out
mov
ret
cmc
dec
sbb
push
xchg
jle
sbb
cmp
sub
cmp
sbb
ret
pop
mov
ss
testl
pop
arpl
loopne
sub
push
add
pop
xor
push
in
pop
pop
sub
mov
notl
mov
adc
shr
call
aad
sub
pop
sar
icebp
push
xor
stos
out
arpl
data16
into
mov
adcb
pusha
daa
xor
xlat
jge
pop
inc
adc
or
xchg
xchg
xchg
push
int
sub
nop
inc
lods
dec
pushf
and
leave
sub
fwait
jmp
inc
mov
jns
push
mov
cmpsl
sbb
insl
xchg
into
mov
popf
icebp
out
sub
ret
or
lods
clc
cltd
arpl
loope
pusha
int3
adc
outsl
xchg
dec
ja
cmp
in
xchg
pop
xor
mov
insl
mov
je
test
jo
xor
cld
xor
cmp
nop
movl
lds
out
stc
xlat
hlt
push
xor
jns
pop
or
movsb
pop
repz
jecxz
adc
negb
mov
mov
mov
jbe
jge
jge
xor
mov
fldl
aas
jp
popa
enter
mov
jle
int
clc
loopne
xchg
mov
movsl
fmull
or
inc
jecxz
adc
cld
sarb
sub
mov
mov
nop
or
inc
daa
adc
jb
aas
pop
xchg
icebp
sub
cwtl
mov
mov
aas
jno
clc
ficoml
jo
cli
xlat
sbb
out
pop
fldt
out
cs
inc
das
test
pop
add
sbb
aas
xor
rcll
jo
in
loop
xor
adc
stos
lahf
adc
adc
inc
icebp
cmpb
xchg
lahf
movsl
rolb
pop
mov
cmp
addr16
fnstsw
push
imull
scas
jl
xchg
or
sub
aaa
movl
in
add
jecxz
je
mov
cmp
pushl
jae
lahf
or
sub
mov
ret
jl
adc
xchg
out
push
mov
gs
jg
adc
les
icebp
push
arpl
cmc
fildl
in
cwtl
stc
mov
add
movsb
out
movsb
mov
pop
jne
les
pop
ss
popf
stos
or
mov
in
bound
icebp
out
roll
in
cld
sbb
repnz
dec
fnstenv
mov
mov
outsb
push
in
or
cmp
dec
mov
or
xchg
sbb
enter
mov
push
add
rcll
rep
jmp
cmp
outsl
jns
lds
cmc
pop
ret
jno
inc
outsl
rclb
mov
lods
into
lea
mov
xor
or
or
mov
stos
imul
xor
iret
mov
dec
icebp
add
mov
mov
imul
rcll
cs
and
and
fs
inc
and
sbb
mov
push
push
mov
pop
sbb
pop
insl
fcomip
adcb
subw
xchg
push
call
inc
fistpll
sub
push
orb
stos
lcall
dec
sub
adc
xor
das
js
fidivrs
fstp
jno
icebp
add
dec
mov
fsubr
shrb
fisubrs
pop
add
in
mov
gs
inc
mov
adc
sub
dec
adc
dec
ljmp
jbe
sti
dec
mov
mov
mov
bound
imul
mov
mov
inc
xor
aad
jae
clc
rol
shll
inc
cld
cwtl
cmp
lcall
inc
daa
dec
or
and
nop
inc
and
nop
ljmp
icebp
mov
mull
push
jl
scas
test
push
add
cmp
dec
or
in
sbb
insl
hlt
push
ljmp
fidivs
sbb
mov
lds
shlb
shll
pop
mov
adc
sub
xchg
jmp
or
in
lea
xchg
orb
xchg
sbbb
push
mov
pop
lds
adc
inc
inc
pop
pushf
test
movsl
in
sbbl
repnz
cmpsb
adc
mov
dec
test
icebp
stos
out
mov
hlt
and
jle
inc
and
loopne
push
imul
sub
xor
add
cs
xorb
mov
and
pusha
arpl
sub
adcb
idivl
cmp
sbb
icebp
push
jecxz
in
add
daa
ss
lods
into
jge
shlb
or
pushfw
or
push
mov
icebp
fdivs
addr16
cmpsl
std
out
cmp
xor
cmc
pop
inc
cmp
es
stos
test
and
and
jmp
mov
or
insl
lock
jle
icebp
mov
xchg
iret
push
cld
mov
mov
xor
inc
add
int
mov
xchg
daa
jl
adc
mov
pop
mov
jmp
hlt
mov
loop
dec
movsl
cmp
sahf
out
fiaddl
xor
nop
fdivrp
ret
xchg
outsl
sarb
int3
loopne
dec
mov
pop
cwtl
xor
adc
cmpsl
push
pushf
mov
insl
loope
xor
xor
leave
fisubl
or
or
int3
shlb
mov
rol
inc
inc
iret
jg
arpl
jmp
inc
rep
sar
arpl
jecxz
cli
psubsw
push
mov
sbb
inc
or
xchg
arpl
push
out
test
pop
pop
jb
out
mov
into
in
push
dec
add
test
inc
fiadds
xor
sti
cmp
fidivrs
push
mov
inc
or
cwtl
std
rclb
lret
or
mov
sub
mov
push
sub
add
enter
dec
xlat
insb
in
dec
xchg
decl
leave
call
mov
mov
das
sbb
mov
push
enter
movsb
adc
out
fwait
and
call
xor
cmp
shll
mov
xchg
cmp
mov
adc
cmpsl
push
and
jbe
mov
pop
cmp
push
inc
mov
shlb
adc
negb
pop
push
xorl
cmp
mov
je
lds
aad
jns
ret
test
add
idivb
push
lret
mov
dec
xor
add
dec
out
cltd
add
loopne
cmp
xchg
cltd
and
sub
icebp
sub
stos
fldt
add
dec
or
or
aas
js
mov
mov
fcomps
bnd
mov
pop
loopne
ljmp
pop
loopne
jnp
adc
pop
pop
fwait
push
ljmp
sub
xor
repnz
lret
lcall
daa
pop
sbb
sbb
ret
sti
mov
loope
mov
jbe
jle
sbb
mov
xchg
pop
mov
pop
mov
hlt
leave
inc
int
xor
stc
mov
dec
xor
inc
call
cmp
add
xchg
dec
mov
and
jno
add
bound
xor
les
dec
mov
sbb
out
mov
mov
rolb
dec
push
repnz
dec
xlat
test
sub
push
outsl
lret
jae
je
loope
pop
mov
mov
mov
das
hlt
mov
jb
ljmp
into
insb
vpandn
dec
popf
test
fwait
push
jb
mov
scas
clc
nop
mulb
andl
mov
pop
cmp
sub
shll
push
jne
cmpsb
lods
leave
je
mov
je
cmpb
stos
adc
and
fs
adc
out
jecxz
aam
jmp
lds
das
dec
dec
mov
mov
inc
mov
xchg
xchg
repz
cs
daa
cmpsb
jp
pop
inc
std
scas
xor
inc
jmp
jb
inc
pop
mov
push
pop
cs
leave
push
and
lcall
scas
lods
push
pop
sub
inc
test
test
adc
test
shl
loope
add
pop
mov
add
dec
jmp
xlat
rorl
mov
mov
xchg
mov
jb
std
mov
cmpsl
add
and
sub
je
mov
fimull
cltd
fwait
xorl
add
mov
push
adc
push
sub
inc
jnp
cld
das
outsb
out
arpl
mov
dec
lea
mov
pop
push
popa
fsub
loopne
push
adc
pop
lea
gs
cmp
mov
imul
mulb
jg
pop
icebp
xor
mov
jns
push
inc
inc
inc
mov
sbb
dec
ret
insl
or
jb
add
inc
imul
inc
push
insb
cmp
push
mov
xor
mov
dec
ds
test
repz
out
pop
mov
mov
cmc
or
mov
jle
mov
xor
add
adc
push
sbb
scas
mov
or
xchg
lcall
cltd
jp
push
into
ror
inc
push
mov
xlat
mul
imul
and
icebp
negb
test
ret
lahf
xchg
push
les
xor
movsl
dec
std
mov
mov
lret
out
dec
xor
hlt
insb
divl
shrb
iret
add
iret
ret
cld
pop
out
in
shl
sahf
and
pop
dec
pop
or
mov
test
jb
ds
mov
lods
imul
or
outsl
data16
dec
sbb
in
push
inc
sbb
maxps
int
xchg
sar
and
aas
verw
or
repz
in
loope
or
lahf
mov
pop
cli
xchg
push
mov
sbb
nop
test
lea
push
and
and
or
mov
jns
adc
mov
pop
cld
fistpll
call
xor
movsb
out
inc
mov
inc
xchg
les
mov
xchg
mov
and
loope
xchg
pop
imul
xchg
xor
lock
movsb
aam
jns
xchg
imul
sbb
nop
int3
insb
push
cltd
dec
imul
outsl
stc
mov
cli
dec
movl
mov
xor
jae
movsb
xor
hlt
push
sbb
fucom
xor
pusha
jg
ret
imul
addb
incl
inc
shll
mov
pop
rolb
lcall
out
adc
jns
test
cmp
push
loop
push
sub
inc
and
dec
mov
pop
enter
mov
sub
inc
adc
cmc
lahf
testl
movsl
jge
cmpsb
loop
int
ret
mov
clc
dec
insb
jecxz
push
aad
icebp
mov
mov
xor
cld
push
mov
xlat
rcrb
and
pop
outsb
jl
in
push
inc
popf
mov
xor
cld
popa
and
sbb
sub
mov
jge
jp
inc
fwait
inc
subb
add
xchg
test
inc
push
ds
push
aad
mov
insb
out
jo
gs
or
push
nop
push
shll
sbb
cwtl
ficoml
outsb
pop
fsubrl
in
or
loop
out
out
stos
fmuls
sub
lret
xor
enter
push
inc
test
imul
mov
dec
popa
mov
ss
xor
cmp
ja
dec
call
pop
out
arpl
cmpsl
jl
popa
pop
mov
and
push
sbb
out
push
jo
mov
jae
and
testl
leave
cld
pop
push
cltd
and
test
cmpsb
jl
push
dec
jg
fstp
mov
fwait
mov
pop
cs
dec
push
mov
xchg
loop
daa
aas
jecxz
pushf
rorl
mov
or
imul
pop
popf
inc
mov
pusha
cmpsl
call
push
mov
xchg
xchg
mov
repnz
mov
pusha
sarb
push
add
push
adc
ljmp
jno
lods
rcrb
xchg
fstp
cmpsb
cmp
push
jle
jne
xchg
mov
push
or
pop
add
add
jnp
sahf
cmp
leave
inc
ret
inc
jno
or
xchg
and
cmc
movsb
xor
leave
xor
dec
pushf
cwtl
pop
je
bound
test
or
inc
std
sbb
pop
cs
in
loopne
je
mov
int
mov
add
out
pop
ss
leave
roll
cmp
mov
enter
cmp
jle
scas
jp,pt
lods
mov
add
outsl
push
push
xor
or
and
sbb
inc
mov
push
cli
or
loope
jp
lret
dec
sahf
dec
pop
lea
sbb
sbb
inc
js
add
push
in
nop
jne
lods
adc
push
data16
test
scas
test
or
mov
cmpsb
mov
adc
dec
fsubl
cmp
repz
cli
pop
jge
sub
lods
scas
sbb
xor
out
and
or
inc
pop
add
xchg
or
daa
shll
addl
das
les
stos
and
push
daa
and
sbb
loopne
push
sub
fsubr
push
ret
sarl
outsb
fnstsw
jmp
or
fcoml
imull
mov
push
fwait
aam
leave
mov
pop
or
pop
mov
cmc
mov
adc
jne
sahf
or
lret
fldt
lds
and
adc
mov
push
jecxz
fwait
jno
sub
cli
imul
das
push
int
outsl
subl
pop
mov
adc
stos
mov
scas
dec
xchg
dec
gs
loop
sub
pop
aad
aas
pusha
cmp
mov
mulb
pop
icebp
in
std
or
sub
mov
xchg
mov
in
inc
aad
lods
xchg
add
mov
insb
ss
cmp
pushf
bound
jbe
xor
imul
dec
sub
ret
adc
or
rcr
scas
fdivl
arpl
je
fisttpl
mov
ret
aad
jno
add
sar
jmp
imul
add
mov
int3
insb
sbb
lret
or
sub
es
pusha
pop
stos
mov
jecxz
push
sub
mov
fiadds
dec
insl
xchg
ja
mov
ljmp
ja
gs
fcmove
cmp
out
pop
sub
mov
data16
movsb
int3
fs
insb
pop
repz
out
ja
push
loop
mov
inc
push
or
bound
push
push
cwtl
rorb
frstor
loopne
dec
mov
pop
jns
out
push
push
jg
ljmp
add
repnz
mov
arpl
adc
outsl
and
icebp
xor
icebp
ja
adc
stc
adc
mov
aam
cwtl
sahf
dec
inc
and
sti
cs
xor
push
repz
mov
jge
jnp
jmp
std
pop
mov
add
jecxz
aam
jne
sbb
in
add
push
jle
add
out
mov
mov
jnp
cmp
and
ret
add
nop
test
jns
lcall
jae
fdivr
pop
push
sahf
mov
iret
mov
mov
ds
push
lret
xor
adc
clc
sbb
mov
popa
jmp
cmp
cmp
xor
mov
add
push
pop
test
daa
ret
jo
ret
lods
push
fwait
pop
dec
dec
stos
mov
imul
mov
adc
clc
fiaddl
inc
sub
dec
movsb
movsl
inc
xor
outsl
in
xchg
dec
or
repnz
xor
ret
cmp
aam
jo
cmp
fdivrs
in
scas
mov
lods
mov
mov
stc
ljmp
test
fdiv
mov
push
sahf
mov
cmpsb
mov
xor
shrb
mov
decb
xor
shlb
call
inc
je
jmp
mov
push
jns
cmp
jo
dec
adc
pop
xchg
and
add
bound
pop
xchg
inc
add
xchg
jbe
and
jo
out
push
xor
js
mov
sbb
mov
imul
xor
jne
pop
test
mov
fs
pop
adc
cwtl
std
cwtl
test
mov
dec
fildll
leave
in
cmpsl
cmp
rorb
out
shlb
xchg
bound
imul
fisttpll
mov
jl
adc
xchg
pushf
repnz
push
adc
js
mov
sbb
loopne,pt
mov
jbe
loopne
out
outsb
push
cmp
pop
fwait
push
insl
movsb
push
shlb
clc
mov
adc
jecxz,pn
cld
ret
insl
ljmp
ljmp
mov
movsl
lds
ret
mov
jo
shl
in
mov
pop
fnstenv
sahf
mov
cmp
and
pop
xor
push
inc
int3
dec
jmp
or
cmp
jnp
leave
inc
jb
cmp
add
push
cmp
mov
jns
jmp
fistps
ljmp
fchs
inc
mov
mov
ss
lahf
push
and
inc
leave
mov
push
test
stos
pushl
or
fildll
mov
cmpb
add
push
int3
mov
jmp
fisubl
test
push
daa
mov
icebp
adc
stos
dec
shl
inc
adc
push
sbb
lock
fwait
ret
jae
mov
sub
movb
dec
sub
mov
mov
xchg
arpl
jnp
mov
repz
loop
jg
jo
mov
mov
mov
std
mov
rorb
or
fdivl
leave
add
push
aam
pop
xor
int3
addr16
jns
sbb
loopne
xor
mov
add
push
aaa
jecxz
pop
adc
sbb
sbb
mov
out
jo
push
sbb
sub
sbb
jo
pmaxub
in
test
cmpsb
jb
jmp
sub
xchg
push
cmpsl
or
push
pop
push
xor
cmc
add
lahf
arpl
xlat
mov
stos
outsb
mov
jb
int3
inc
testl
push
leave
xchg
xchg
mov
pop
sahf
xchg
jg
mov
lcall
or
in
xor
sahf
fisubrs
cmpsl
nop
lret
adc
add
and
addr16
rcrl
out
push
jnp
lock
scas
hlt
or
dec
xchg
push
xchg
sub
mov
aam
cld
or
lods
mov
call
daa
std
mov
cmpsl
push
icebp
psubw
xor
jge
dec
loopne
mov
ds
cwtl
inc
faddl
or
dec
movsl
pop
out
std
hlt
into
lea
pop
mov
jnp
and
and
lock
mov
mov
mov
fidivs
cld
push
or
mov
jno
lock
jg
loope
dec
jbe
aam
add
adc
dec
bound
mov
shrb
pop
xchg
scas
push
sbb
xlat
adc
es
or
test
adc
das
orl
shll
outsb
mov
add
shl
or
jmp
mov
in
test
xchg
scas
adc
cmpsl
add
loop
adc
cli
mov
mov
mov
lahf
push
jge
xor
xchg
shll
sbb
ret
fiadds
pop
push
xchg
lret
std
out
and
or
cmp
mov
pop
sbb
int3
dec
clc
pop
test
cltd
stc
jmp
dec
int3
fs
fisttpl
insl
loop
data16
jle
push
mov
cld
and
cmp
add
cmp
xor
xor
dec
mov
stos
loopne
rcrb
aaa
or
hlt
sbb
fsubl
jp
and
xchg
daa
dec
push
add
jl
aaa
sarl
sbb
mov
iret
iret
incl
out
add
xchg
xor
push
je
cs
mov
aam
fcmovnbe
add
and
xor
test
int
mov
leave
jae
dec
shl
pop
aas
jle
aaa
pop
dec
sti
std
dec
jle
sti
cmp
mov
scas
shl
sub
or
sub
js
stc
movsl
nop
push
fs
adc
shll
ret
negb
sbb
push
repnz
xor
test
pop
andb
xchg
sbb
fwait
jo
push
fisubrs
adc
pop
cmpsl
addl
iret
inc
mov
pusha
jbe
movsl
dec
shll
incl
int3
xchg
pop
int
mov
dec
mov
xchg
or
adc
in
arpl
pop
cmc
mov
cmpsl
dec
out
mov
jle
iret
mov
mov
cmp
decl
add
xor
pushf
jmp
shr
fisttpl
sub
les
subb
push
ljmp
mov
fidivs
push
mov
mov
dec
movsb
ds
xor
bound
push
sbb
data16
repz
mov
xor
adc
push
mov
sbb
xchg
and
inc
pop
loopne
std
test
xor
push
pop
out
inc
lret
pop
add
push
js
mov
jb
call
lods
fistpll
adc
shr
je
imul
adc
adc
push
sub
dec
shl
lds
mov
fsubrl
insb
or
sbb
test
addb
or
pop
sbb
fstpt
and
scas
mov
sbb
xchg
xchg
pop
or
or
cmp
icebp
sbb
subl
mov
enter
jmp
mov
jnp
rorb
lds
dec
cs
or
xor
cmp
mov
aas
xchg
or
mov
and
sbb
mov
jmp
sbb
mov
mov
cmp
dec
xor
ret
scas
cmp
mov
int3
adc
into
cmp
jne,pt
cmp
dec
cmc
inc
fwait
es
jo
inc
push
out
movsl
cs
mov
in
jno
movsl
je
mov
scas
pop
or
scas
nop
inc
sti
pushf
pop
mov
lods
cwtl
fistps
cmp
fistpl
mov
shll
out
add
das
cs
pop
dec
xchg
or
push
jae
mov
pop
call
out
add
mov
fildll
or
jle
scas
repz
cmp
cmc
rol
xor
pop
pop
inc
mov
hlt
aaa
in
mov
inc
hlt
inc
stos
cmp
mov
lret
sbb
lods
dec
imul
cli
mov
jmp
sti
lds
add
jecxz
in
or
mov
test
sarb
test
sub
jnp
inc
cmp
call
cld
lret
ss
or
xor
mov
fs
inc
nop
fdivs
lock
cwtl
and
dec
rol
int
xlat
arpl
imul
xor
jne
loopne
add
and
out
mov
dec
adc
pop
mov
es
push
or
pop
xchg
and
dec
lods
subl
into
leave
jno,pt
jnp
xchg
pop
add
out
adc
inc
xchg
cwtl
dec
pop
arpl
jo
aam
adc
sbb
test
pusha
cmp
inc
sub
das
push
cwtl
push
sub
jae
stos
imul
push
fdivr
orb
pop
add
add
add
cs
test
push
dec
pop
sbb
mov
insl
jmp
or
push
add
xchg
repnz
nop
adc
mov
add
pop
dec
ss
test
add
ljmp
push
loop
dec
or
ja
pop
jl
fnstcw
cli
adc
mov
insl
imul
mov
cmp
imul
push
popa
scas
shlb
dec
xor
sbb
int3
push
faddl
xchg
bound
rcrb
adc
push
repz
andl
inc
aad
iret
inc
cmpl
xchg
fsts
je
adc
jle
and
xchg
sub
pop
gs
inc
push
sti
fsub
adc
and
mov
sub
xchg
data16
in
gs
das
mov
std
sbb
inc
outsb
nop
inc
jmp
or
mov
add
xchg
dec
inc
add
pop
xchg
xor
bound
in
and
sbb
jno
jl
fdivrp
or
out
dec
sbb
outsl
xchg
pop
dec
pop
inc
add
mov
outsl
and
leave
icebp
mov
mov
push
adc
mov
jne
cmpsb
fdivrl
dec
mov
pop
sub
jo
xor
inc
mov
inc
das
mov
mov
mov
ja
pop
push
jmp
mov
repnz
push
add
aad
aas
push
lds
mov
incl
jbe
test
les
xchg
shlb
movsl
mov
dec
test
call
repz
scas
loopne
fdiv
pop
cmp
in
out
add
and
fdivrp
repz
adc
loope
dec
push
or
adc
jne
jae
aam
mov
dec
xor
jo
fimull
popa
mov
shll
sub
adc
xor
cmp
and
pop
repz
mov
push
aaa
arpl
mov
cmp
jg
pop
repz
cltd
mov
and
or
and
roll
sbb
movl
mov
int3
jg
insl
mov
sub
push
enter
fsts
inc
js
ficoml
movsl
popf
jge
shlb
pop
es
adc
divb
popf
sarl
enter
jle
push
inc
xchg
fimull
cmp
loopne
jmp
cmpb
sub
and
cmpsb
insl
std
arpl
add
lcall
inc
std
xor
lahf
mov
inc
data16
out
pop
js
adc
sbb
add
jb
cwtl
insb
gs
mov
jbe
dec
sbb
jg
mov
leave
mov
leave
out
out
push
imul
fs
mov
adc
sbb
add
mov
cmp
fdivrs
das
aam
inc
cmp
bound
std
pop
add
mov
mov
dec
push
xchg
sub
adc
sub
test
push
mov
ffree
call
pop
stos
sarl
repz
into
test
outsl
jno
lds
lock
loope
adc
repz
adc
cltd
loop
fdivs
fisttpl
loope
mov
mov
push
shrl
push
sub
stos
roll
stc
in
gs
sub
and
shll
jae
aam
les
mov
add
push
xor
cmpsl
repz
or
xlat
push
push
fmuls
daa
repz
mov
pop
and
insl
sbb
mov
iret
les
add
jae
cmp
xchg
jl
stos
pop
nop
cmp
xchg
call
adc
mov
mov
mov
sub
mov
arpl
pusha
cs
loope
mov
std
xchg
inc
pop
push
adc
push
test
mov
push
cmp
inc
leave
sbb
dec
pop
repnz
adc
mov
cmpsl
outsl
sbb
mov
insb
push
dec
jle
inc
decl
adc
dec
push
ds
test
push
inc
loope
stc
in
xor
fldenv
mov
sbb
xchg
or
out
mov
shl
test
mov
add
shll
movsl
mov
pop
jbe
js
push
add
jnp
jb
frstor
es
dec
jae
orb
dec
ret
incb
xchg
in
insl
add
sbb
sbb
or
shl
xor
aas
outsl
test
mov
jne
xchg
push
pop
mov
in
jl
cmp
cmp
sbb
cmp
pop
jb
dec
lcall
push
jle
int
jmp
sbb
mov
jmp
stos
and
sub
cli
es
mov
add
pop
sbb
pop
test
mov
push
icebp
sbb
push
cmp
arpl
std
pop
aad
nop/reserved
test
jg
cmpsb
repnz
add
mov
xor
imul
mov
jnp
mov
xchg
jp
add
inc
adc
call
les
imul
pop
ss
cmp
pop
sub
pushf
jmp
or
push
lods
mov
adcb
or
dec
lret
jmp
int3
mov
jl
lret
cwtd
je
in
dec
enter
pushf
fsubrl
inc
int3
sbb
adc
inc
mov
test
cmc
flds
push
ret
mov
push
mov
mov
add
sbb
dec
idivl
pop
cli
mov
jg
jo
dec
sar
fcoml
std
fwait
inc
dec
mov
sbb
or
xchg
mov
jnp
popf
lods
inc
cld
call
imul
addb
cmp
or
pop
stos
adc
xchg
stos
int
xor
sahf
cwtl
cmpsl
aad
mov
cmp
add
mov
sbb
icebp
jmp
divl
lea
cs
add
ljmp
add
imul
mov
mov
or
in
inc
ja
roll
stos
jle
orb
test
dec
mov
lds
mov
in
mov
push
fistpl
ds
mov
test
jecxz
ds
xor
in
rol
dec
iret
rorl
ret
push
cwtl
fcomps
dec
add
ret
push
adc
ds
mov
sti
jle
inc
and
sub
lcall
insb
mov
leave
fists
xor
outsl
loop
xchg
and
leave
xchg
imulw
mov
cld
mov
jne
sbb
and
mov
aam
out
movsb
cmc
mov
fcomps
mov
mov
aam
lds
pop
xor
rcr
dec
push
mov
dec
cmp
add
xchg
sub
jecxz
testl
clc
outsb
jbe
faddl
loopne
jno
sub
ret
test
sarb
les
fwait
pop
out
in
das
inc
fwait
cmp
dec
movsl
mov
xor
test
xchg
je
popf
sub
adc
ret
or
mov
mov
sub
in
lock
in
test
cmpsb
leave
scas
pop
push
mov
mov
and
xchg
and
mov
add
cld
es
call
push
fisttpll
jmp
icebp
fimull
mov
push
bound
mov
or
mov
xchg
adc
xor
out
dec
jb
fsubr
aam
aad
shrb
cwtl
mov
jns
hlt
call
xor
inc
imul
sub
fdivrl
mov
and
addr16
pop
loopne
add
jp
mov
xchg
and
adcb
pop
sub
fisubrs
cmp
mov
dec
xchg
in
mov
fiaddl
cmp
and
pop
test
push
push
adc
cli
subb
mov
repz
lds
xchg
dec
aad
iret
mov
pop
push
mov
and
es
adc
lods
ret
js
mov
popa
dec
dec
and
jne
inc
mov
repnz
rclb
dec
and
inc
lods
pop
or
dec
pusha
loopne
movsb
fdivs
jle
les
mov
adcb
adcb
jp
lea
sahf
cmp
xor
fwait
lods
mov
dec
je
sub
add
rol
xchg
daa
mov
sub
adc
cld
out
lods
testl
out
test
inc
mov
mov
scas
fdiv
dec
mov
addr16
je
into
lods
inc
and
push
lahf
mov
push
mov
sub
cltd
stc
adc
sub
dec
ljmp
push
aas
out
imull
inc
xor
loopne
stc
sub
adc
call
sti
or
ljmp
dec
int3
mov
and
popf
clc
pop
testl
mov
push
in
adc
mov
xor
and
and
popa
in
sbb
xchg
iret
pop
jmp
pop
shrl
jg
pmulhuw
and
test
es
repnz
sbb
fucomip
adc
enter
mov
movsb
into
arpl
mov
outsl
test
push
lock
in
add
lret
sbb
sbb
and
jg
cld
pop
inc
inc
jae
add
out
ljmp
mov
xor
push
jp
nop
adc
test
cld
lret
dec
mov
gs
ljmp
pop
xchg
js
inc
cli
sahf
pop
jecxz
push
daa
addr16
loope
out
test
sub
inc
daa
scas
popf
mov
lea
lret
int
or
pop
lods
bound
popa
stc
cmp
sbb
ja
fwait
ret
inc
push
mov
mov
jecxz
jp
idivl
and
ja
sbb
push
pop
jns
jne
cmp
mov
popf
cmp
ja
pop
sbb
fwait
pop
fisubl
mov
or
das
les
adc
mov
int
flds
push
mov
or
sbb
adcl
in
stos
inc
mov
xor
jle
lods
sbb
pop
pop
adc
mov
ds
add
repz
icebp
out
mov
jnp
dec
pop
das
rolb
lods
mov
int
mov
test
rclb
movsb
dec
dec
jmp
push
test
mov
pop
xor
cld
jo
or
lahf
insb
jecxz
or
sbb
sahf
lcall
aad
mov
loope
daa
sub
repnz
xchg
in
inc
pop
push
xchg
mov
lret
shl
sub
adc
sarb
mov
scas
sub
pop
xchg
jae
push
outsb
adc
push
xor
jmp
insb
xor
rcrb
and
and
test
jns
push
popa
lds
jne
repz
adc
pop
mov
ja
aad
daa
xchg
subb
mov
inc
mov
jo
push
aas
mov
mov
sub
dec
mov
sahf
xor
ja
xchg
mov
jne
jnp
add
add
lret
clc
int
sbb
mov
sbb
xor
push
adc
mov
enter
ret
movups
test
mov
daa
jge
pop
mov
mov
mov
sbb
ss
sbb
sbb
inc
cmp
lock
mov
sbb
popf
fisubrs
arpl
fdivrl
add
and
lods
cmp
in
push
xchg
aas
mov
sbb
out
test
lods
sub
mov
xchg
rolb
data16
xchg
mov
scas
aad
pop
xor
mov
adc
push
xor
in
mov
fisubl
out
dec
test
or
mov
or
xchg
inc
jns
or
testl
or
pop
fwait
push
cmp
jmp
mov
sbb
inc
stc
inc
aam
xchg
xchg
add
mov
daa
notl
xchg
add
adc
in
xchg
pop
sbb
inc
rol
fstps
rolb
fcom
ljmp
mov
ret
pushf
xchg
jnp
add
pop
xor
jg
mov
es
loope
mov
hlt
push
sub
sbb
push
mov
cwtl
data16
xor
popa
pop
into
xor
out
ja
add
test
sarb
std
rorl
pushf
movsb
xchg
lods
mov
xor
call
xchg
and
cmpsb
mov
cmpsl
test
fstl
mov
mov
int
cwtl
insl
pop
pop
mov
das
push
addr16
dec
dec
add
add
fcmovnu
mov
arpl
xchg
test
xchg
repnz
pusha
xchg
lret
jl
push
in
mov
scas
jbe
gs
bound
jns
mov
xlat
ss
inc
push
data16
cld
cmp
std
nop
loope
std
insl
xchg
shlb
mov
mov
dec
packssdw
xchg
push
inc
call
stc
mov
popf
sbb
scas
jno
or
sub
hlt
fdivs
sub
dec
xchg
mov
adc
cmp
sbb
andl
fwait
adc
jmp
mov
repnz
and
aam
call
push
mov
or
push
pop
cmc
fistps
scas
sbb
das
push
push
js
jbe
mov
push
cmp
push
ret
adc
jecxz
xchg
mov
rcll
sbb
jl
add
outsl
rcll
test
sub
xlat
xor
push
js
fimull
jl
jns
or
inc
xor
popa
mov
adc
mov
push
fstpl
test
and
orl
xor
std
scas
rolb
xchg
xchg
das
jl
jnp
cld
and
movsl
add
daa
testl
test
xchg
cmpsl
mov
or
cwtl
mov
adc
fcoml
dec
cmpsl
push
mov
push
add
lea
fsubr
enter
push
push
mov
xor
rorl
mov
fistpll
scas
mov
sub
or
adc
mov
jmp
movsb
scas
jg
sbb
ja
sbbl
sarb
rcll
or
sbb
pusha
xor
xor
stc
sub
fstpt
gs
mov
sti
mov
imul
inc
jne
in
push
xchg
ret
add
jae
loope
leave
mov
gs
hlt
popf
fwait
add
or
ss
adc
in
outsb
mov
add
int
dec
mov
cmpsl
movsl
mov
mov
in
jl
jecxz
mov
call
testl
movsl
leave
scas
push
mov
push
stc
mov
mov
fldl2t
cmp
xchg
dec
mov
daa
ret
repnz
add
in
pushf
adc
out
out
mov
push
jno
and
lahf
test
pop
scas
inc
out
hlt
jmp
inc
sbb
clc
adc
adc
fcoms
or
cmc
and
imul
cmp
sub
popf
adc
iret
jecxz
outsb
cwtl
nop
dec
push
out
leave
adc
dec
jmp
lcall
cwtl
xchg
inc
dec
mov
inc
jnp
scas
in
pop
inc
dec
es
dec
popa
adc
test
shlb
inc
mov
mov
cmp
sub
pusha
jo
adc
adc
movsl
inc
mov
mov
ljmp
push
and
mov
sub
aam
into
pop
shrl
addr16
and
das
lret
jne
push
test
sbb
nop
movsb
jno
jp
outsl
pop
inc
out
jecxz
or
inc
xchg
xchg
mov
fnsave
or
xor
scas
add
add
dec
push
fnstcw
subb
call
outsb
push
push
xchg
add
imul
nop
mov
addl
push
xor
lahf
out
test
scas
rorl
or
pop
jl
jmp
cs
ret
mov
clc
ljmp
lods
pop
fwait
mov
jbe,pt
or
and
add
fbld
fbstp
mov
xchg
loop
cmp
mov
add
sbb
sub
jl
sahf
xchg
dec
popa
cwtl
out
cwtl
lahf
ret
and
pop
jno
jmp
daa
lods
test
sub
pop
loope
lock
jbe
jns,pn
outsb
mov
jle
or
incl
pop
arpl
ret
xchg
nop
xchg
jb
movsb
out
jns
mov
push
mov
sub
and
dec
divl
nopl
pusha
ret
ds
orb
in
jp
cli
sbb
js
pusha
dec
xchg
mov
push
mull
push
mov
cmp
sub
inc
fdivrs
cwtl
jne
enter
aas
mov
imul
sti
jns
imul
mov
inc
jb
sub
jecxz
outsb
sti
jge
lcall
imul
inc
lds
pop
lret
sarl
jmp
adc
fiadds
mov
stos
cmp
arpl
or
inc
mov
xor
dec
insl
insb
icebp
adc
add
sbb
gs
mov
xor
lcall
mov
sub
ja
jge
sub
jnp
mov
imul
loop
lcall
jecxz
add
dec
adc
out
jb
inc
outsl
into
negl
dec
cmpsl
jbe
push
xor
outsb
jo
xchg
dec
repnz
popf
push
jp
ljmp
pop
and
sub
push
into
mov
pop
dec
cmp
mov
add
out
mov
pop
pop
jle
mov
ficomps
imul
xchg
ds
data16
xor
int3
sub
jno
in
sahf
fistpl
stos
inc
push
or
leave
sbb
push
imul
ud0
std
test
sti
pop
push
push
insb
popa
ljmp
xchg
fmull
scas
sbb
repnz
jge
in
mov
lods
ss
arpl
sti
mov
fists
pop
out
add
pushl
jecxz
gs
sbb
dec
pushf
pop
jg
js
jae
xchg
pop
push
mov
cmp
lret
pop
fdivl
add
pop
cmp
fimuls
push
add
loop
mov
and
jns
mov
inc
mov
out
insl
xchg
or
iret
mov
repnz
adc
mulb
test
out
dec
popf
xchg
cld
cmp
adc
xchg
xchg
jp
shlb
aas
mov
pop
sub
mov
adc
leave
sub
dec
call
cmpsl
adc
hlt
cmc
les
xchg
iret
push
idiv
rorl
addr16
fimull
int3
push
mov
push
add
call
sahf
daa
stos
dec
lea
push
push
sub
xchg
xchg
add
mov
call
mov
cmp
pop
mov
adc
add
mov
andb
mov
inc
mov
mov
xlat
xchg
icebp
cmp
dec
push
ret
mov
ja
or
repnz
ja
fwait
or
pop
test
repnz
sti
xor
xor
mov
frstor
addr16
adc
js
lods
call
outsl
inc
mov
pop
add
movsb
push
mov
icebp
inc
push
stc
mov
pop
inc
test
add
insb
pop
lods
push
mov
dec
test
dec
mov
scas
sbb
sbb
jo
xlat
xchg
ret
test
xchg
sbbb
mov
adc
lock
xlat
dec
and
lret
jecxz
and
dec
adc
and
mov
xchg
das
mov
dec
or
push
xchg
mov
and
jmp
jl
loop
sbb
dec
sbb
mov
test
shrb
fistpll
jno
aaa
sbb
mov
fbstp
push
add
aad
out
int3
lds
aaa
cmpsb
jp
push
popa
pop
adc
cmp
inc
xchg
dec
xlat
cmc
jmp
enter
shlb
call
gs
shlb
cmp
and
pop
jb
mov
mov
sub
mov
mov
in
mov
add
dec
jb
ljmp
dec
arpl
mov
or
inc
sbb
jne
lahf
out
xchg
push
dec
inc
fisttps
and
adc
cmpl
in
sub
fwait
add
lret
or
mov
jle
imul
mov
mov
mov
addr16
lods
movsb
ror
jne
pop
mov
cmp
push
cmp
arpl
test
inc
enter
and
dec
push
xor
cmpsl
das
mov
insl
gs
lret
ds
inc
dec
xor
cmp
jmp
fisttpl
inc
jge
clc
pop
pop
and
cli
adc
insl
mov
and
and
pop
sbb
cmpb
mov
fsubr
xor
pop
cwtl
ss
xchg
push
cmpb
xor
stos
dec
or
daa
imul
pop
scas
fists
xchg
out
popf
cmp
out
add
xchg
xchg
push
ret
pushf
test
cmp
popf
mov
stos
mov
inc
jbe
dec
push
inc
bound
out
cld
jmp
or
out
aad
int3
dec
mov
push
jb
pop
je
lods
mov
sbb
pop
xorl
test
es
xchg
pop
dec
rcl
mov
cmp
mov
sahf
rolb
inc
and
inc
push
repnz
addl
dec
inc
or
cmc
in
mov
adc
daa
imul
out
cmp
sbb
mov
jae
xchg
cwtl
dec
pop
data16
addb
in
in
mov
ret
push
pop
pusha
jg
dec
adc
sbb
pushf
sub
cmp
lock
mov
cmp
int3
movsb
push
cmp
push
pop
adc
aam
cltd
fmuls
mov
sti
loop
mov
fwait
push
mov
xor
mov
mov
mov
cmp
push
push
inc
xor
clc
xlat
bound
mov
adc
aad
and
mov
inc
fmulp
out
lret
test
cmpsb
or
cmpl
mov
into
mov
sub
adc
xor
mov
les
int3
adc
pushw
jmp
adc
iret
jbe
cld
inc
in
adc
cmp
jg,pt
insb
sub
aas
mov
add
loopne
push
jg
push
xor
mov
addl
jns
in
add
imull
test
pop
out
imulb
std
cmpsb
insb
jmp
scas
lea
push
mov
rorl
lret
mov
add
or
sbb
stos
loopne
adc
mov
dec
insl
dec
jns
fs
sbb
add
cmpsb
ror
xchg
or
mov
adc
dec
fcoml
icebp
cmp
or
test
inc
mov
mov
sbb
mov
adc
jg
pop
addr16
and
repz
scas
adc
push
mov
aas
popf
out
jo
fstl
enter
push
sub
aam
enter
or
in
or
cli
in
in
pop
paddb
mov
in
mov
cmp
dec
jge
dec
enter
push
dec
mov
pop
sub
inc
sti
sbb
cld
outsl
push
insl
int3
adc
sub
push
xor
stc
ror
test
or
inc
push
out
push
into
adcl
mov
outsl
mov
fdivp
add
dec
inc
jecxz
add
fsub
lahf
aam
inc
and
push
test
cwtl
and
out
or
sbb
mov
fidivrl
lods
in
mov
push
test
leave
or
jno
or
push
cmp
mov
mov
push
sbb
test
pop
xchg
mov
push
imul
sub
mov
call
jns
lahf
lods
ror
movsb
fsubp
in
scas
pop
shrl
fdivs
mov
bound
pop
or
cwtl
and
je
dec
inc
ficompl
neg
mov
stos
aas
mov
lea
imul
dec
bound
adc
movsl
jb
adc
xor
xchg
daa
cld
shr
lds
sub
and
mov
pop
call
vpaddq
daa
or
je
add
mov
fcomi
es
or
dec
mov
pusha
add
test
stc
insl
call
mov
lock
lret
cmp
out
xchg
lock
data16
movsb
stos
ficomps
sub
cmp
pop
mov
out
shrb
dec
inc
mov
cmp
jo
sbb
aam
push
loopne
mov
sbbl
push
fiaddl
fnstsw
mov
cld
mov
pop
fiadds
adc
push
push
push
sub
shlb
imul
shll
leave
inc
enter
xchg
lea
mov
cwtl
add
pop
fmul
mov
or
les
push
inc
fwait
jno
outsl
sti
pusha
out
imul
lock
mov
ret
test
icebp
adcb
xlat
adc
mov
push
jbe
subl
xchg
cmp
fldt
dec
mov
cmpsb
loope
adc
xor
mov
js
bswap
enter
sbb
push
dec
cmp
out
jge
cmp
popf
call
aad
iret
xchg
ss
addr16
inc
dec
imull
roll
test
cmp
and
dec
mov
pop
push
or
or
lahf
xchg
into
out
push
addl
xchg
dec
ror
adc
repnz
jns
xchg
mov
inc
loope
and
cmpsb
xor
cld
jae
cmc
add
cld
test
lods
pop
sbb
shr
aam
push
lahf
fdivrl
cmpsb
popa
out
jg
insl
or
pop
rorl
mov
stos
add
xlat
stos
jb
cltd
mov
mov
mov
and
and
mov
push
dec
shlb
inc
sub
aad
pop
js
dec
popf
das
icebp
push
jp
aas
fsts
cld
cmp
mov
mov
hlt
imul
and
mov
dec
pop
jmp
dec
sbb
push
or
dec
popa
in
dec
push
cli
fstps
mov
inc
dec
and
aas
pop
mov
cmpsl
lock
das
and
mov
lods
mov
lods
sti
cmp
and
stc
jo
bound
loop
cli
jbe
cmp
dec
push
adc
gs
out
inc
cmp
mov
test
cld
or
or
mov
cmp
call
add
outsb
pop
cltd
decb
cmpsl
inc
mov
repz
and
xchg
add
pop
ljmp
arpl
js
or
push
aad
mov
ffreep
pop
lret
int3
xor
pop
or
inc
mov
popf
jb
mov
dec
shlb
repnz
outsb
int
xchg
fnstsw
and
xor
mov
in
les
ret
out
push
inc
adc
dec
bound
jg
les
cmpb
into
push
nop
sbb
mov
and
jbe
loop
addb
adc
pop
add
cmpl
dec
pop
mov
hlt
sbb
ret
lret
mov
aaa
pop
push
or
aad
dec
loope
add
mov
js
mov
jmp
sbb
nop
inc
dec
push
push
insl
test
pop
push
jmp
mov
cmp
outsb
mov
add
sub
gs
jo
mov
cs
push
mov
xor
pop
cmp
vmovaps
mulb
adc
pop
cld
mov
inc
ja
js
dec
add
mov
je
xor
movsl
and
aad
out
push
lds
jmp
xlat
negb
movsl
mov
inc
adc
dec
mov
and
test
shrb
mov
test
sub
repnz
jno
pusha
push
mov
pop
mov
nop
sbb
jbe
movl
mov
pop
push
dec
sbb
dec
mov
loop
jb
adc
adc
mov
movsl
dec
jl
shll
loop
fimuls
adc
shr
sbb
inc
inc
push
mov
gs
lods
sbb
sub
rcrb
addb
sahf
inc
insl
inc
push
add
shrl
mov
nop
jns
mov
or
stos
xchg
fwait
ja
repnz
or
push
push
adc
sarl
push
mov
jb
push
push
sub
in
shll
ds
fdivr
aad
or
test
and
outsb
es
fisttps
nop
jns
mov
xor
int
js
push
in
xor
les
cltd
hlt
xor
xchg
ret
cwtl
sub
sarb
std
leave
addr16
cld
popa
sahf
in
jae,pn
movsl
sub
pop
bound
and
dec
and
mov
in
pop
in
out
xchg
xor
xor
lock
or
adc
mov
gs
inc
pmovmskb
pop
gs
mov
lret
sub
pop
xor
pop
js
fidivl
ljmp
scas
sub
mov
lock
stos
sbbb
cmp
cmp
mov
jge
fimuls
mov
shll
popf
dec
jne
xchg
jmp
test
jae
test
rorb
jl
lret
pusha
data16
or
stc
movsb
out
jbe
push
mov
in
cmp
sub
and
repz
push
add
jmp
leave
shll
xchg
inc
push
clc
test
push
lds
sub
aam
adc
or
or
stos
js
cmp
cwtl
dec
add
das
outsl
add
add
shrb
and
push
dec
jne,pt
fwait
dec
insl
xchg
data16
cmp
and
add
orl
mov
lods
test
int
sub
or
repz
add
mov
cmpsb
adc
adc
out
mov
mov
movsb
cmc
pop
int
add
cmpsl
int
push
insl
mov
add
sbb
adc
cmc
lods
xor
sbb
sbb
scas
fildl
dec
cld
lods
mov
nop
xchg
mov
icebp
xor
cmp
inc
and
je
mov
out
out
adc
out
lods
outsl
test
push
jno
dec
lahf
mull
cmp
js
mov
cli
or
push
mov
hlt
push
icebp
ror
fnsave
call
lret
jb
mov
jg
inc
loope
xchg
or
aam
xor
call
cmp
xor
adc
aad
mov
sub
mov
sarb
mov
iret
pop
mov
idiv
inc
xor
dec
lock
push
movb
fsubp
cli
cmp
cmp
loope
dec
in
fcoms
dec
loop
mov
adc
xchg
mov
add
xor
bswap
mov
jmp
cmp
in
sbb
sub
daa
insb
adc
cwtl
xlat
sbb
and
push
add
mov
jp
les
xlat
ljmp
lret
pop
cmpsl
lea
rcl
test
out
and
repnz
mov
push
imul
clc
cli
int3
fwait
mov
dec
or
aaa
nop
mov
iret
popa
dec
cmc
add
sar
cld
push
jge
push
addr16
roll
adc
cmc
jecxz
insb
sub
scas
pop
notl
add
inc
jnp,pt
xchg
lods
jp
dec
dec
mov
in
dec
jae
jg
inc
popa
mov
and
xor
xlat
into
or
adc
dec
notb
mov
mov
mov
lods
dec
adc
sub
jle
lret
push
pop
fldenv
cmpsl
push
sbb
pusha
and
addr16
sbb
xor
cmp
lahf
addr16
test
data16
sbb
icebp
jge
jmp
sbb
push
nop
add
xlat
mov
addb
mov
and
mov
leave
sbb
sub
call
and
ss
sub
push
rep
bound
push
imul
dec
mov
push
and
fucomip
icebp
mov
pop
ficompl
je
dec
add
jns
sbb
push
in
jle
jo
mov
sub
mov
jl
or
jl
push
push
xor
xchg
add
pop
inc
fnsave
fwait
ljmp
mov
jp
adc
rcrb
cli
jl
stc
push
sbb
xor
push
mov
xor
push
out
mov
cmp
incl
sarb
dec
mov
stc
xchg
dec
or
pop
mov
xor
dec
pop
fidivrl
lock
gs
xorb
loop
ret
jp
loope
in
movsb
push
scas
mov
pop
stos
lods
pop
insl
adc
popf
jnp
rcrl
pop
test
cmp
daa
jo
mov
pop
sarb
cmpsb
lock
repnz
sbb
ljmp
jns
mov
add
fs
sahf
fidivrl
inc
imul
stos
add
js
test
mov
pop
lock
xor
sub
icebp
mov
or
cwtl
out
fsubrs
sbb
adc
adc
mov
dec
cmp
inc
arpl
push
and
gs
push
mov
or
and
pushf
sub
mov
ja
pop
and
dec
cmp
testb
dec
dec
arpl
cwtl
mov
dec
aad
imul
sti
out
mov
pop
repz
mov
iret
mov
cmpsb
add
test
mov
fbld
or
out
jmp
imul
fmul
add
lahf
jae
movsb
lahf
lret
out
cwtl
dec
pop
in
add
flds
clc
xlat
jns
xor
les
imul
pop
imulb
cmp
jmp
pushf
pusha
inc
sbb
sbb
jbe
fldt
sub
push
std
shr
jp
arpl
xchg
jmp
ljmp
rclb
push
mov
mov
push
rcl
cmpsl
pushf
sahf
bound
xchg
addr16
ret
add
shrl
jge
push
cmpsl
imul
fimuls
fsubrl
xorl
popf
imul
adc
push
mov
jne
hlt
ja
xlat
mov
inc
xchg
shlb
clc
loop
clc
sub
rol
repz
mov
dec
jns
jno
mov
gs
mov
mov
scas
pushf
xor
sbb
xchg
dec
mov
cld
stos
mov
xor
xor
push
aas
sub
dec
pop
mov
push
xorl
cwtl
sbb
add
je
xchg
cwtl
lods
cmp
push
leave
pop
lret
xchg
mov
push
out
xchg
xor
sahf
sbb
xchg
push
or
shll
sub
js
cmp
das
imul
dec
push
mov
and
mov
daa
dec
inc
imul
call
or
aas
sbb
rolb
jge
mov
inc
or
int
mov
xchg
ljmp
mov
out
jmp
out
xor
cmp
or
mov
mov
loop
mov
xchg
adc
jmp
inc
pop
mov
lods
and
mov
or
jne
jge
jb
inc
mov
repz
inc
push
fistpl
jp
mov
shlb
inc
jns
dec
je
pop
out
pop
jl
ljmp
jg
inc
pop
inc
xor
out
push
ret
push
push
stos
adc
test
mov
jns
push
and
movsl
loopne
cmpsl
sbb
fadd
push
sbb
pop
sub
inc
rclb
pop
xor
cmp
loopne
sti
jp
push
inc
insb
in
addl
adc
out
outsb
cwtl
push
lahf
inc
in
cwtl
and
mov
repz
mov
jnp
sbb
mov
mov
shl
outsl
sub
imul
leave
mov
mov
ds
gs
adc
stos
sarl
add
add
sub
sbb
adc
push
movsb
lea
inc
loope
push
ds
fwait
outsl
cmp
adc
in
clc
inc
or
pushf
mov
inc
pop
inc
push
mov
mov
inc
enter
notb
add
jmp
leave
jb
xor
cli
push
adc
inc
adc
sbb
jl
rcrb
loop
int
leave
fsubrs
scas
pop
dec
cmpsb
sub
lret
jmp
adcl
mov
jp
and
jl
out
pop
xchg
jmp
into
xchg
adc
adc
or
pop
aam
fwait
aaa
xchg
stos
or
inc
frstor
push
mov
pop
les
cmpsb
ret
and
add
sbb
hlt
pushw
popf
insb
pop
inc
insl
jnp
jmp
add
mov
push
out
add
aam
pop
jns
mov
mov
inc
leave
cld
and
inc
jmp
es
cmpsl
and
mov
sub
into
mov
mov
pop
cmpl
sub
push
ds
js
aam
or
add
movl
push
cmpsb
jl
bound
adc
in
lahf
cmp
xchg
test
cmp
sbb
ja
push
outsl
add
sbb
xlat
sub
into
rcr
rcll
mov
xor
repz
and
sbb
sbb
insl
mov
add
cli
jbe
dec
lret
add
cmc
shlb
pop
scas
pop
add
xor
jne
leave
gs
daa
or
subl
cmp
or
mov
inc
jae
inc
arpl
add
xor
mov
adc
mov
or
or
add
xchg
xchg
inc
lret
sbb
adc
aad
negl
dec
daa
or
icebp
fldcw
aaa
sbb
andb
arpl
add
fwait
shrl
pop
repnz
in
fmul
arpl
clc
adc
mov
cmc
fsubs
imul
and
push
xor
cmc
js
movsl
mov
mov
nop
in
mov
fwait
sub
mov
or
inc
outsb
cwtl
xlat
pop
pop
or
jb
clc
mov
cs
or
dec
pop
sahf
jne
dec
or
push
mov
cmp
or
loop
test
push
mov
inc
outsl
fnsave
adc
jge
stos
les
lcall
lods
sti
mov
xor
mov
imul
mov
or
or
insl
test
mov
outsb
scas
adc
stos
mov
cmp
pop
dec
inc
xchg
fwait
inc
inc
jge
sahf
adc
jno
cmp
jg
inc
mov
int3
sbb
and
push
or
stos
scas
icebp
popa
push
jne
out
sbb
mov
lock
enter
xor
cmpsb
mov
xchg
jnp
xor
fsubr
mov
daa
in
sub
outsb
dec
pop
fcmove
add
xchg
out
adc
lret
adc
and
jecxz
les
jl
add
pop
adc
sbb
pop
and
daa
mov
movsb
push
mov
jno
xor
pop
into
dec
mov
or
loop
lcall
cmp
js
xchg
mov
outsl
mov
stc
bound
ljmp
call
push
dec
je
push
int
push
mov
jge
sub
inc
jl
push
call
leave
in
sub
aas
sub
jge
push
lret
aam
lret
inc
pop
hlt
pop
pop
lahf
inc
xchg
pop
lds
mov
xor
adc
pop
repnz
int3
push
adc
mov
adc
ret
cld
mov
pop
sub
push
pusha
popa
pushf
sbb
or
mov
xchg
push
arpl
cltd
xor
fisubs
stos
mov
dec
dec
mov
stos
mov
shrl
movsb
aas
and
jo
adc
ss
sub
xchg
pop
jbe
cltd
sets
test
aas
add
jmp
loopne
xor
mov
mov
loop
icebp
add
aaa
mov
push
pop
sub
and
jnp
clts
fiadds
shlb
sub
push
js
aad
shll
int
dec
movsl
movswl
xor
sbb
mov
clc
adc
or
int3
into
mov
mov
out
pop
add
aad
xor
stc
mov
xor
sub
negb
icebp
mov
ror
ja
mov
out
mov
rolb
pusha
sbb
test
jge
loope
and
vpalignr
popl
sbb
mov
jp
jmp
mov
fst
outsl
je
cltd
inc
sbb
and
push
cld
sbb
fsubrs
loop
mov
mov
orl
sahf
gs
lds
ja
mov
adc
mov
jle
sub
shrl
or
pop
jg
lcall
popf
test
dec
sti
int3
out
stos
pushf
and
ret
dec
and
push
jl
fwait
sbb
ret
aaa
cmpsb
in
popf
jecxz
out
or
rol
and
dec
out
pop
fidivrl
dec
daa
stc
iret
dec
inc
push
test
insb
lods
std
pop
pop
mov
sub
test
and
pop
test
les
jge
aad
sete
adc
loop
lret
lahf
arpl
push
sub
cmp
loopne
fcmovnbe
cmp
sub
int
scas
fnsave
inc
xor
xlat
aas
jecxz
push
push
imul
adc
fcomps
in
scas
pusha
cmpsb
inc
divl
pop
and
adc
pop
fsubs
jge
push
or
mov
outsl
pop
inc
popf
jbe
jmp
jecxz
jecxz
out
lea
cmp
cmp
xchg
sub
lret
fistps
push
fwait
push
or
movsb
std
mov
enter
mov
inc
aam
enter
push
mov
pop
bound
adc
jo
jb
iret
aad
test
call
out
sbb
fst
mov
xor
pop
or
mov
mov
sbb
mov
iret
push
pop
popf
mov
mov
sbb
lahf
mov
cmp
cmc
leave
bound
int
jecxz
xchg
test
frstor
xchg
in
aam
pop
inc
cmpsb
call
cmp
out
imul
call
jle
dec
cld
or
lcall
push
in
notl
push
movsl
int3
repnz
mov
push
xor
cmc
fists
outsb
jo
inc
jg
fistpl
inc
je
xor
xor
or
gs
mov
or
lcall
fiadds
scas
pushf
mov
mov
call
cmp
pushf
sarb
in
sub
fwait
jno
push
mov
les
add
mov
aas
xchg
push
stc
aaa
test
add
pop
push
js
pop
fstps
jmp
adc
aas
dec
push
into
pop
sti
mov
outsl
insl
xchg
adc
cmc
inc
adc
into
and
dec
enter
lret
nop
inc
data16
cltd
mov
sub
sub
push
sbb
fildl
and
xor
push
es
xchg
dec
mov
out
push
jmp
pop
push
adc
loop
push
dec
in
mov
dec
loope
mov
lret
fwait
inc
jl
leave
xor
xor
lcall
sub
xor
data16
and
sbb
inc
adc
sar
ret
pop
add
sldt
mov
inc
ret
rclb
ret
mov
or
loope
push
pushf
push
cmp
in
mov
mov
out
scas
xor
sub
push
sub
jbe
inc
jae
lahf
jb
xchg
sbb
cmc
outsb
jg
stos
pop
inc
imul
xchg
shlb
dec
lock
clc
mov
mov
stos
sub
gs
fimuls
lods
xor
test
xchg
js,pn
xchg
daa
cmp
jae
or
and
sub
dec
sbbb
add
cmp
jnp
push
xchg
push
cmc
fcomip
xor
jno
adc
js
hlt
inc
cmp
popa
sub
dec
dec
fidivrl
js
lock
fcompl
sub
dec
mov
jg
inc
leave
adc
lods
mov
aaa
mov
in
fcomi
dec
mov
dec
pop
inc
daa
test
push
mov
shlb
push
jb
jmp
and
test
cmp
pop
pushl
sahf
jg
dec
jae
test
push
mov
outsb
adcl
jb
mulb
sbb
bound
lods
cs
sarl
inc
pop
dec
mov
xchg
nop
adc
fildl
mov
call
fcoms
or
dec
dec
cld
xchg
pusha
xchg
xor
testb
inc
push
pusha
xchg
je
aad
pop
fnsave
arpl
addr16
imul
test
lock
data16
fidivl
ret
or
pop
jnp
loop
or
adc
cmp
mov
pop
test
jg
es
inc
add
ss
or
adc
out
in
xchg
lret
notb
mov
xlat
js
push
popl
jne
inc
mov
mov
mov
push
jge
sub
shlb
in
cmp
sbb
cmpsb
dec
fdivrl
jp
xchg
bound
les
jmp
pop
mov
and
stos
ret
hlt
jno
mov
add
xchg
loop
xor
jae
not
popf
repnz
sbb
gs
sbb
lds
sarl
in
push
sbb
roll
loope
and
mov
or
mov
arpl
test
gs
mov
pop
fidivrs
nop
sub
push
adc
or
lret
es
mov
sbb
and
test
std
cmpl
sar
jp
repz
test
int3
sub
ret
sbb
js
jmp
dec
out
pop
lret
sub
push
xchg
adc
xchg
fnstsw
into
sbb
jecxz
lods
mov
sbb
jl
push
jmp
stos
cmp
pop
enter
outsb
imulb
aad
inc
cli
mov
xchg
xchg
jl
add
not
sub
cmp
adc
inc
mov
dec
stos
pop
ljmp
and
addb
repz
daa
cld
sub
cmp
sbb
flds
mov
aaa
pop
push
lahf
pop
int
ficomps
test
cs
out
fnsave
ljmp
sub
xor
sti
mov
fwait
iret
mov
and
js
or
aad
jle
and
jp
add
mov
sti
sub
test
or
shll
sbb
or
xor
push
je
pop
sbb
mov
push
push
jmp
xor
mov
xor
xchg
push
pop
out
adc
shll
adc
mov
scas
add
push
xor
icebp
ret
repz
shll
push
call
mov
adc
daa
jp
xchg
mov
mov
cmp
jle
jge
repnz
outsb
shll
adc
test
sub
adc
lcall
in
pop
xchg
dec
fwait
xor
outsb
push
shld
lcall
ds
sub
loopne
add
mov
leave
or
lea
mov
xchg
mov
dec
jnp
add
popa
mov
dec
out
std
jg
cmp
scas
scas
fisubs
std
sarl
or
xchg
cmp
scas
ret
push
cmp
mov
and
fildll
jmp
in
jecxz
mov
nop
test
out
out
pop
push
shll
pop
andb
arpl
jmp
inc
std
nop
push
add
cli
dec
or
mov
adc
outsb
pop
jle
mov
stos
aam
mov
adc
push
aad
imulb
mov
add
shl
pop
or
test
aas
mov
pop
and
lods
mov
and
sub
push
aaa
mov
imul
adc
sbb
xchg
xor
pop
int3
rclb
out
fsin
mov
lods
fldl
push
aam
xchg
xor
leave
hlt
popl
out
mov
popa
pushf
movb
push
fisubl
mov
in
out
stc
jecxz
test
xchg
push
mov
pop
scas
fsts
ret
cmp
lods
cmp
adc
lea
ljmp
pop
shl
int
xchg
stos
sub
pop
negb
lock
and
jb
sbb
mov
fcmovu
daa
cli
mov
jo
in
xchg
inc
movb
ficomps
mov
jecxz
nop
bswap
push
test
test
into
mov
mov
mov
pop
push
sahf
adc
jae
cld
xor
orb
outsl
mov
mov
out
aas
adc
dec
push
cld
pop
mov
into
stc
mov
shl
lods
xchg
mov
xor
adc
scas
insb
xchg
push
dec
scas
push
inc
mov
jbe
popf
jecxz
add
and
jb
push
pop
ds
jecxz
mov
sub
xchg
jns
js
pop
inc
mov
arpl
cmp
lret
int3
or
or
lods
repnz
mov
add
cwtl
adc
outsb
pop
inc
xchg
fcmovnb
and
fildll
lcall
mov
in
fcmovnbe
ljmp
jg
les
enter
jge
inc
in
add
mov
inc
fcoms
imul
inc
lods
pop
arpl
push
inc
and
inc
adc
xor
add
sbb
add
mov
cltd
or
push
dec
jl
mov
push
mov
or
pop
ret
add
pop
jo
inc
inc
cltd
cmp
dec
cli
and
xor
push
xor
mov
rcrb
xlat
push
lret
xchg
inc
inc
jae
jp
gs
testl
dec
subl
add
pop
repnz
sub
dec
andb
sbb
lods
mov
or
repz
inc
cmp
xor
mov
xor
mov
ljmp
lds
jno
test
xchg
stos
pop
or
aaa
dec
lds
adc
je
out
dec
aad
outsl
cltd
and
rorb
sub
cwtl
mov
or
cmpsl
lea
es
mov
inc
clc
call
cmpsl
sub
xchg
gs
push
int
cmp
cmpsb
mov
in
and
imulb
fnstenv
mov
xor
pop
cs
lods
or
jp
cmp
enter
add
mov
or
loop
ficomps
mov
lea
push
mov
aas
insb
adc
adc
in
fsubrs
and
xchg
enter
adc
test
xchg
repz
fidivs
hlt
inc
mov
dec
and
lock
fmuls
xor
cltd
dec
sahf
mov
into
leave
xchg
daa
aad
mov
adc
repnz
jns
push
ret
aaa
popf
and
lcall
cli
icebp
push
ja
clc
pushf
in
lods
xor
arpl
jns
fistpll
loop
je
xchg
mov
repnz
pop
xchg
movsb
cmp
xchg
loop
dec
int3
rolb
or
lods
imul
addr16
dec
jl
lahf
and
mov
dec
shlb
cmc
mov
rcrb
or
ja
jge
adc
ret
out
repz
sbb
mov
pop
pushf
pusha
cmpsl
push
in
push
rdmsr
inc
loope
in
inc
inc
inc
daa
push
push
sub
sti
cwtl
sbb
and
adc
pop
arpl
and
ljmp
jae
scas
or
and
mov
push
dec
lods
decb
lods
test
out
sbb
leave
mov
shrb
mov
sub
dec
je
pop
hlt
popf
cmp
movsb
pusha
or
xlat
add
xchg
fcoml
insb
sub
aaa
mov
xchg
mov
and
sub
jns
mov
popf
cmp
sub
push
loop
adc
in
push
mov
in
sbb
inc
mov
mov
enter
push
jp
sub
xor
or
es
push
lcall
stos
je
jp
dec
mov
dec
inc
add
in
sub
dec
repnz
sbb
jnp
imul
mov
and
xlat
lds
icebp
call
outsb
and
xchg
loopne
movsl
xorb
fucomp
ffree
ds
xor
fwait
insb
cmpsl
or
xorl
lock
inc
pop
xor
sbb
xchg
int
mov
daa
pop
push
mov
sub
push
sarb
pop
cs
dec
scas
push
inc
movsl
push
mov
clc
lret
dec
arpl
mov
sbb
cmpb
fstpl
cmp
sti
sbbl
push
imull
pop
das
dec
push
add
push
rcrl
inc
lods
daa
sub
sub
fbstp
daa
mov
lahf
cs
in
pop
cmp
jbe
jno
mov
mov
icebp
pop
cwtl
test
popa
push
xchg
repnz
sub
dec
pop
mov
daa
arpl
cltd
fisubl
adc
xor
add
inc
outsl
les
out
lock
xchg
lahf
dec
in
jb
cmp
sub
and
xchg
les
pusha
into
mov
add
ucomiss
inc
lret
sub
pop
or
flds
dec
mov
pop
pusha
lahf
nop
pop
adc
pop
xor
mov
divl
pushf
iret
sbb
enter
xlat
pop
sbb
fwait
dec
sbb
xchg
sub
mov
shr
aaa
lods
stc
stos
cmp
bound
push
ficompl
outsl
or
adc
cmp
xor
dec
cmpsb
sbb
adc
and
cmp
mov
fwait
adc
loop
mov
jmp
push
sahf
add
and
lret
ljmp
inc
mov
xchg
push
jnp
mov
ja
das
imul
xchg
insb
and
repnz
in
shlb
inc
and
loope
decl
mov
lahf
push
cmp
push
je
pop
mov
cltd
push
and
clc
stos
pushf
shrl
cmc
scas
push
movsl
lret
fucomi
jge
into
in
adc
sbb
sbb
or
loopne
mov
sub
pop
in
xor
xor
adc
sub
movsl
mov
pop
or
scas
sub
repnz
shll
ja
jnp
leave
ds
icebp
shrb
adcl
mov
enter
rolb
in
xchg
add
mov
xor
lcall
pop
stc
mull
clc
or
sub
or
adc
fistpll
adcb
push
insb
lods
sub
push
out
mov
inc
mov
addl
lods
testl
jno
lock
in
adc
xor
mov
push
leave
xor
std
cmp
mov
cmp
les
mov
mov
imul
sub
testl
dec
xor
lds
adc
xor
mov
ds
dec
cltd
bound
cmp
loop
mov
fcomi
dec
xlat
jnp
shrb
jl
xchg
mov
mov
jecxz
and
mov
mov
xchg
stos
pop
add
mov
fucomp
rcll
hlt
push
std
pop
in
mov
or
js
in
nop
and
mov
cwtl
pusha
stc
mov
ds
add
into
inc
lods
xor
fildll
inc
fistpl
dec
push
hlt
outsl
xchg
xor
ljmp
in
out
mov
sub
lahf
outsl
nop
idivl
cwtl
lds
xchg
dec
jecxz
or
daa
popf
jecxz
cmovge
push
cmc
pop
inc
clc
cli
adc
fdivrl
cmp
xorl
cmp
push
int3
sbb
insl
rclb
roll
sub
add
xchg
arpl
sbb
sti
mov
mov
out
and
je
ds
mov
jp
insl
and
adc
xchg
or
imul
jmp
sub
jne
movsb
call
daa
jg
and
push
dec
add
lock
pop
daa
pop
add
out
fsts
imull
push
pushf
sub
out
fcomps
fcomp
pop
shrb
fwait
in
xor
xchg
pop
roll
mov
dec
call
push
add
sbb
or
sarb
enter
jg
pop
fdivrl
sbb
push
pop
sbb
pop
int3
inc
sbb
and
mov
push
pop
mov
popaw
jp
xlat
loopne
adc
aaa
rcrb
xchg
push
jl
jno
rcr
fnstcw
xchg
std
cmpsb
int
xor
sub
sbb
mov
test
xor
sub
pop
or
mov
sub
fidivl
icebp
mov
inc
mov
jecxz
int3
inc
dec
aas
lods
dec
pop
add
pop
ljmp
rcrb
hlt
ljmp
mov
adc
inc
jmp
or
mov
cmp
mov
xchg
mov
es
mov
and
les
scas
cmp
jns
push
cld
pop
xor
enter
xor
lcall
pusha
dec
or
push
xchg
in
fldl
and
fcomps
xchg
inc
sub
mov
jle
in
imul
hlt
and
jo
jmp
ficompl
mov
inc
js
jl
xlat
fisttpl
sub
jecxz
xchg
sbb
pop
aas
cmp
inc
lds
es
jns
dec
cmp
gs
sti
cmp
lea
push
test
cli
add
das
mov
dec
mov
roll
mov
loop
xchg
xchg
push
rcrb
inc
mov
jno
mov
dec
in
je
and
lods
add
push
sti
out
cwtl
mov
and
mov
pop
call
enter
insb
dec
jbe
les
adcb
sbb
or
ja
jmp
dec
std
add
jnp
pop
enter
mov
ret
jnp
or
mov
ds
clc
repnz
ret
hlt
addl
aam
jmp
mov
mov
pop
mov
or
jb
and
cmp
pop
shl
mov
and
sub
pop
sahf
sub
andl
fnstenv
and
call
mov
xorl
adc
add
clc
inc
rorb
sbb
xor
ffree
jmp
scas
outsl
ret
push
clc
xchg
loopne
addr16
mov
lock
cld
pop
mov
mov
pushf
lret
or
mov
aad
cmc
add
imul
pushf
add
inc
bound
or
sbb
push
mov
mov
push
inc
js
mov
addl
add
popf
cmp
fmul
xchg
sbbb
aam
sub
cltd
xchg
in
cmp
cmp
icebp
mov
or
add
add
push
fiaddl
inc
mov
out
notb
lods
dec
lds
xchg
out
and
out
and
or
dec
daa
shrl
punpcklwd
mov
cli
fdivp
pop
and
sbb
push
mov
rol
icebp
sbb
sub
adc
in
in
xchg
inc
in
push
fnstenv
push
imul
jge
js
xlat
push
cltd
mov
pop
out
je
cs
sahf
nop
sub
mov
daa
imul
loope
push
rcll
sbb
jmp
into
mov
mov
cmp
xchg
bound
fcmovu
andb
and
pop
sub
sbb
js
cmpsb
fcmovbe
mov
jle
andl
daa
push
mov
mov
in
pusha
fnstsw
lods
mov
dec
sbb
jge
push
adc
pop
mov
out
dec
push
loopne
push
stc
xchg
js
imul
inc
xchg
out
mov
dec
fsubrl
push
or
jo
lret
cmpl
and
lcall
cmpb
xchg
push
mov
lahf
mov
push
aad
cwtl
imull
into
ljmp
data16
cmp
and
mov
sub
gs
movsb
jmp
xor
pop
ja
icebp
push
cmp
cmpsb
lcall
cmpb
nop
pusha
outsb
adc
xor
imul
xor
std
aam
push
sbb
movsl
vhaddpd
dec
into
bound
inc
bound
jnp
or
xabort
cmp
or
xor
or
in
ljmp
aam
jns
xorb
push
ljmp
sub
adc
cmpsl
jbe
or
adc
mov
mov
sarb
mov
rcrb
bound
mov
aas
jne
lret
dec
sub
mov
out
ja
sub
rcll
mov
out
jp
inc
mov
inc
sbb
dec
gs
lret
decl
pop
sti
sbb
mov
jl
rol
dec
ss
cwtl
cmc
rcrb
adc
cs
cmp
sbb
ret
inc
push
jne
mov
fcmovnu
nop
jge
lahf
dec
cmp
mov
cwtl
inc
pop
dec
push
loopne
adc
sbb
jp
aad
out
dec
mov
cs
xchg
int3
out
in
cmpsb
das
mov
xchg
and
dec
ffree
cmp
jo
hlt
jns
jg
mov
jnp
xor
xchg
inc
push
jno
lods
xchg
cli
fwait
dec
cmp
push
mov
push
mov
ss
mov
and
add
repnz
push
fcomps
mov
jbe
orl
leave
bound
push
out
pop
and
adc
clc
xlat
in
and
push
mov
out
inc
testb
repnz
inc
fldenv
stos
pushf
or
dec
in
arpl
mov
mov
sbb
cmpsb
jnp
lret
xchg
add
inc
repnz
lret
ss
jle
jns
jge
jg
or
loop
cli
adc
inc
xchg
insl
clc
dec
cmp
lret
movsl
push
or
xchg
xor
ja
add
shll
jl
mov
inc
mov
pop
int3
cltd
lods
pop
addr16
sar
arpl
mov
inc
es
xor
inc
mov
sbb
push
cld
ret
push
pop
inc
mov
icebp
jg
test
mov
dec
adc
and
iret
sar
loop
test
xor
dec
jb
push
mov
lret
jge
push
inc
insb
adc
push
xchg
in
imulb
mov
shl
aad
dec
loop
aas
icebp
fs
mov
stos
mov
mov
outsb
ss
aam
cmp
push
cmpsl
aad
loope
stos
mov
fs
imul
mov
clc
jb
cmpsb
dec
and
sbb
jne
lods
fstl
je
pusha
pushf
enter
xor
imul
pop
pop
leave
out
into
int
mov
mov
pop
or
ljmp
fmul
rolb
pop
lahf
gs
inc
daa
xorl
les
pop
dec
or
cs
shl
dec
push
inc
push
mov
cwtl
cmp
xor
xchg
and
lods
xor
adc
leave
jmp
mov
push
mov
fbld
lea
mov
fisubrl
push
mov
shll
mov
lcall
cltd
jnp
cld
enter
das
mov
pop
bound
ficompl
and
icebp
xor
or
test
cmp
mov
fnsave
cmp
add
and
das
rcrl
push
stos
jne
stos
sti
loopne
lret
dec
arpl
push
in
pusha
cli
jbe
and
cmp
cmpsl
push
mov
and
stos
push
cmp
or
in
and
xor
stos
loope
data16
sbb
mov
enter
rcl
jne
data16
push
mov
pop
inc
adc
push
mov
loope
cwtl
aam
fsub
dec
mov
outsl
mov
mov
inc
mov
add
clc
mov
hlt
testl
xchg
sbb
inc
pop
out
adc
xchg
cmp
push
out
sub
push
pop
cmp
ss
stos
add
sub
cmc
inc
dec
dec
shl
outsl
jb
jecxz
ds
repnz
mov
add
jp
push
fcmovnbe
sbb
xchg
dec
outsb
inc
mov
xchg
push
and
mov
imul
xchg
cmp
stos
sub
sbb
jge
and
mov
ja
mov
sub
daa
sub
faddl
pop
push
inc
sbb
dec
daa
xor
jns
sbb
rorb
jg
loop
or
insb
mov
into
test
insb
jo
shlb
pop
call
test
and
inc
popl
xor
add
sbb
inc
pushf
pop
test
add
outsb
jno
fiadds
mov
nop
adc
sbb
inc
in
cmpsb
cwtl
jmp
push
cld
push
xor
insl
stos
inc
mull
ljmp
stc
pusha
fbld
xchg
sub
add
aad
fs
inc
sahf
lahf
jl
sbb
sub
pushf
and
call
ds
pop
test
adc
add
mov
mov
cmp
mov
ljmp
mov
jno
cmpsb
mov
adc
imul
insl
inc
shr
stc
rorb
loope
pop
sti
xor
inc
pop
jb
arpl
orb
cli
inc
mov
sub
push
mov
cmp
xlat
ret
jae
dec
out
mov
push
daa
or
adc
std
jmp
sti
dec
sarb
mov
cmp
dec
int
std
jge
rol
pop
xor
xchg
in
xor
xchg
and
rol
dec
sti
fwait
rclb
sahf
cli
fnstenv
cmc
outsb
sub
mov
mov
ret
sbb
dec
insl
ret
xchg
adc
or
stos
xchg
adc
movsb
adcb
inc
in
test
das
out
stos
push
out
int3
push
ja
mov
aas
pop
rolb
sbb
mov
clc
sub
pop
push
fucomip
ret
ja
push
xchg
xor
push
cld
test
or
inc
cmp
cmpsb
das
shll
xlat
xchg
repz
pop
pop
adc
sbb
cltd
rcl
cwtl
lea
and
inc
pop
clc
jmp
loopne
jmp
test
ds
mov
outsl
fcoml
aad
aas
xchg
push
shll
adc
movsl
add
pop
jo
dec
add
mov
jnp,pn
dec
dec
test
aas
xor
int
mov
add
das
push
or
outsl
jg
jo
int
mov
inc
mov
std
leave
xchg
ljmp
shlb
adcb
daa
jbe
aam
push
jo
ds
stos
or
pop
cmp
mov
sub
push
xchg
inc
dec
pushf
sbb
fdiv
jo
mov
shlb
bound
scas
ret
inc
fs
dec
push
outsl
or
sbb
dec
adc
and
add
movsl
mov
neg
testb
jno
sbb
js
ret
xor
cmp
inc
rol
pop
cli
arpl
data16
imul
icebp
jmp
in
dec
aad
ljmp
out
cmc
loop
xor
or
stc
mov
jne
in
daa
sub
inc
leave
xchg
push
clc
lods
imul
xchg
addl
cmc
in
ds
sbb
jne
pop
and
mov
push
mov
xor
mov
popa
xchg
pusha
jge
test
in
std
and
mov
inc
xor
daa
mov
hlt
loopne
in
dec
mov
pop
ficomps
jo
jge
adc
push
xchg
dec
insb
jp
jns
mov
mov
adc
lret
mov
or
xor
push
jge
cli
clc
push
mov
dec
and
mov
jne
add
aaa
inc
xor
icebp
stc
mov
fadd
outsw
mov
iret
jmp
movsl
inc
push
inc
repz
pop
adc
xor
lea
xor
xchg
jg
ret
imul
loope
inc
jmp
js
adc
mov
pop
inc
hlt
or
mov
adc
and
jmp
cmp
add
push
sbb
mov
iret
and
and
dec
rcr
adc
ss
lcall
int3
stos
dec
xchg
mov
cmp
jg
int3
out
rorb
fsubl
inc
and
cmpsb
iret
and
enter
inc
ljmp
js
repz
jnp
adc
cmpsb
jle
int3
cmpsb
pop
fstps
gs
inc
mov
push
push
mov
mov
push
pop
ficomps
jecxz
fcos
jl
cmp
jg
hlt
fwait
mov
cmp
in
cmpsb
in
xchg
cmpsb
out
xchg
cmp
test
call
sbb
pop
mov
cmp
mov
jl
adc
cld
loopne
jne
cld
movsl
jo
shll
sbb
shlb
ljmp
js
jo
and
sti
push
push
loop
pop
dec
xor
push
mov
test
icebp
xchg
push
cld
mov
fcom
fcompl
in
mov
loop
push
rcrl
sub
mov
cmp
mov
ljmp
rcl
adc
add
insl
or
stos
and
cld
imul
push
and
por
test
cmp
push
dec
or
push
int3
rep
mov
pop
fistps
sub
iret
add
xchg
bound
sbb
loopne
push
sub
xchg
jl
sbb
or
les
sub
jbe
mov
popf
lret
add
test
xchg
call
shr
sarb
xchg
xlat
out
stc
mov
mov
lahf
push
sub
push
aas
xchg
shll
arpl
out
lds
xchg
imul
in
movsb
sbb
xchg
mov
addr16
addr16
fisttps
push
cmpps
stos
sbb
rorl
xor
push
sbb
imul
xchg
mov
or
add
aas
jp
mov
adc
adc
andl
fisttpll
cwtl
dec
sbb
imul
cltd
es
or
dec
call
and
xchg
aas
cmp
bound
mov
imul
ja
push
adc
insl
test
pushf
and
inc
test
addr16
jp
push
push
ret
testb
adc
in
pop
popa
mov
leave
orb
fst
xchg
mov
cmp
shr
aad
push
dec
adc
and
dec
fisttpll
sbb
jmp
inc
mov
inc
pop
inc
jbe
inc
mov
mov
jmp
mov
pop
mov
loop
mov
scas
and
xor
add
jb
fadd
and
icebp
in
dec
or
movl
dec
and
stc
cmp
std
lret
adc
fwait
push
xchg
mov
inc
test
sub
test
push
sub
mov
mov
inc
sub
sbb
testl
inc
lock
pop
inc
imull
xlat
cmp
js
out
outsb
mov
mov
pop
icebp
iret
in
mov
adc
mov
push
xchg
and
scas
mov
xchg
pop
or
add
loop
mov
or
add
pminsw
adc
test
pop
notl
mov
test
mov
iret
stos
out
fisubrl
push
mov
and
add
daa
mov
aas
leave
add
and
mov
movsl
bound
jp
mov
std
ljmp
adcb
aas
ret
push
lods
jg
push
enter
addl
outsb
lahf
movsb
movsl
push
icebp
mov
xchg
add
je
cmp
out
and
loopne
in
sahf
inc
ja
mov
cli
or
or
mov
fsubrl
dec
xchg
lret
repz
sub
sub
pop
mov
inc
and
testl
push
sbb
mov
stos
sub
add
sub
jmp
jle
jl
fs
dec
repz
fdivr
pop
mov
sbb
stos
and
dec
loope
out
andl
mov
dec
fldln2
repz
cmp
jbe
movsb
jp
popa
sub
mov
push
cmc
icebp
jo
pop
sbb
insb
out
xchg
shll
inc
mov
shll
leave
pop
sub
fnstsw
xor
iret
mov
push
push
and
lcall
mov
imul
lcall
dec
dec
adc
fldenv
or
mov
mov
sbb
es
push
scas
repnz
rcl
or
test
cli
rorb
mov
xlat
mov
fistps
sub
mov
dec
mov
inc
inc
in
push
push
pushf
dec
repz
push
adc
xor
dec
test
sbb
pop
fsubrs
pop
xor
jbe
mov
mov
stos
out
enter
xlat
dec
int3
pop
mov
push
out
inc
nop
fildl
in
test
inc
adc
int3
cltd
js
fidivs
xchg
xchg
and
sbbl
or
fimull
ja
xchg
ds
add
adc
push
fldl
dec
dec
mov
and
dec
test
addb
hlt
mov
jg
in
ss
jle
push
ret
lcall
daa
outsl
mov
cmp
aas
iret
jl
mov
mov
andb
push
cwtl
or
or
mov
data16
cmp
sub
cmpsl
jmp
loopne
andl
in
cld
cwtl
fldt
sub
cmp
inc
dec
ja
imulb
lds
incl
add
push
sbb
arpl
int3
mul
outsl
rcrl
pop
fmull
xor
out
std
cli
jnp
addr16
addr16
push
bound
popf
js
hlt
iret
pop
scas
jo
aaa
pop
outsb
loop
cld
mov
lds
std
imul
xchg
je
ret
add
lahf
js
adc
dec
movsl
mov
nop
xlat
mov
jne
aaa
lds
or
add
or
xchg
ret
clc
cli
mov
xlat
scas
or
loop
iret
xlat
addr16
sbb
nop
aad
ds
cmpsl
pop
push
ja
imull
add
sub
pop
pop
or
and
aaa
pop
sub
xchg
bound
jns
lods
and
dec
adc
pop
jno
imul
mov
sub
sahf
shrb
adc
xchg
scas
mov
lcall
xchg
or
insb
sbb
xchg
fidivs
in
testb
xor
push
nop
sbb
testb
or
and
mov
pusha
mov
rcrl
push
dec
add
imul
cmp
scas
scas
or
mov
shlb
jge
xchg
dec
adc
sbbb
fwait
addr16
insl
mov
out
jmp
test
fst
rcr
push
js
sub
xor
daa
int3
jmp
lcall
jmp
xlat
fistpl
push
cmp
dec
adc
aam
sub
mov
xchg
movsb
shl
ja
or
mov
pop
push
call
or
fstp
loop
stos
lret
loopne
arpl
push
cwtl
fsubr
jnp
stos
in
test
push
lock
inc
test
fisubs
das
pop
push
pop
pop
pop
mov
mov
loopne
inc
ss
mov
mov
push
ret
mov
pop
xchg
dec
ljmp
fmull
fnsave
mov
shlb
shlb
inc
xlat
sbb
mov
repnz
pop
rcrb
dec
jbe
cs
ret
mull
cltd
dec
scas
sub
test
das
outsl
push
pusha
leave
sbb
adc
or
jns
push
ficompl
inc
lods
sbbb
sub
or
stc
scas
pop
mov
lods
or
fs
data16
push
cli
aad
adc
mov
mov
xor
sub
dec
icebp
ds
jns
jg
sbb
inc
leave
adc
jecxz
dec
rolb
inc
scas
aad
push
push
mov
es
shll
or
cmp
jp
js
xchg
mov
sbb
and
push
xchg
imull
es
cmp
mov
fucomip
jns
fs
xchg
add
imul
jge
ja
dec
or
imul
out
push
pop
jmp
stos
mov
dec
inc
and
adc
leave
xor
jp
cmpsl
shll
test
std
mov
push
aaa
push
out
pushf
mov
push
jmp
and
xlat
adc
imulb
dec
xchg
sbb
pop
mov
adc
leave
loope
je
add
aad
pop
or
cmp
cmp
mov
lret
push
fsubrs
dec
mov
shrb
add
or
xchg
shll
dec
rcll
stos
pop
stc
in
lret
rorb
fldenv
aam
adc
movsb
cmp
cmc
fmuls
int
pop
std
mov
sub
psubb
mov
sbb
in
add
popf
lock
adc
mov
fmuls
push
pop
cmp
lods
add
in
cmpsb
jg
fdivr
or
xor
pop
in
divb
int
jg
mov
cmp
outsb
pop
pop
add
mov
jp
addr16
or
mov
jmp
xlat
out
aad
jno
and
incl
cmp
lods
pushf
loopne
rol
xor
ja
mov
mov
test
sub
cld
push
sbb
cmc
into
fldcw
mov
push
push
xchg
inc
jmp
fwait
fwait
sbb
stos
aas
rclb
or
mov
test
fs
xchg
cld
sub
and
ret
fistps
mov
divb
push
js
sahf
mov
xchg
faddl
lds
jl
dec
pop
inc
jl
mov
inc
movb
sub
in
push
xchg
and
push
cmpsl
repnz
imul
icebp
mov
and
xchg
cmp
jle
inc
les
xchg
mov
imul
adc
shll
repnz
aad
push
push
adc
pusha
ret
insl
xlat
pusha
fs
and
popl
data16
in
cld
jle
push
mov
and
movsb
cwtl
cltd
in
xor
imul
lods
add
push
ja
add
mov
dec
push
or
sarb
adc
xor
or
fwait
lret
loope
pop
iret
sbb
or
sub
or
dec
movsl
pusha
jl
outsl
gs
add
mov
lcall
pusha
lods
imul
iret
or
test
adc
jecxz
push
sar
jb
icebp
into
popa
pop
and
pop
clc
int3
inc
test
mov
add
dec
mov
and
aam
xchg
fidivs
fstl
lock
jns
fistpll
or
mov
adc
test
cmpsl
call
pop
mov
xchg
ficoml
pop
push
add
mov
mov
lock
dec
xchg
roll
mov
out
fsubrs
mov
icebp
subl
dec
mov
cmp
cwtl
inc
insb
inc
jno
or
testl
or
ret
jge
int3
xor
popl
scas
test
fs
in
push
fisttpll
cmp
cli
mov
test
pop
cmp
lcall
dec
fxtract
xchg
pop
pop
pop
cltd
testl
push
xchg
push
cmp
sub
loop
jmp
push
test
sbb
dec
push
push
xchg
aaa
aas
push
daa
call
sbb
lret
call
xor
xchg
xcrypt-ecb
rcll
pusha
lock
loop
mov
push
mov
push
popf
out
das
cmp
fsubrp
mov
sbb
cld
add
pop
shlb
mov
add
cmp
imulb
sahf
sub
xor
xor
sbb
test
add
int
mov
xlat
xchg
das
inc
cmp
sti
inc
cwtl
xor
mov
fstps
xchg
loop
arpl
cs
out
rclb
call
aad
cmp
repz
mov
iret
ret
adc
mov
pop
scas
add
and
push
mov
incl
stc
loop
inc
cmp
out
mov
mov
orb
xchg
sbb
test
orl
or
lret
shrl
pop
push
ffreep
rol
pop
pusha
sub
push
int3
je
adc
test
push
cmc
aad
sbb
add
jne
add
jo
xchg
cwtl
in
stc
imul
xchg
jns
lods
jbe
push
jmp
in
sub
pop
scas
in
roll
ja
ficompl
iret
inc
shll
xchg
dec
sbb
lea
mov
mov
push
imul
bound
cltd
enter
lods
xor
inc
test
push
scas
imul
push
or
sub
outsl
les
or
test
ljmp
xor
mov
pop
inc
pop
xorb
mov
mov
std
pop
add
loopne
pop
sbb
lock
or
adc
testb
rcl
outsl
xor
std
aam
push
loop
mov
insb
mov
leave
xor
cmp
loopne
cwtl
xchg
dec
inc
cmp
lcall
mov
xor
imulb
cmpsl
std
mov
fs
and
mov
jns
xorb
data16
lods
mov
and
insb
push
imull
sub
adcb
call
fdivrs
pushf
mov
in
pop
xchg
cmc
data16
or
aad
push
sbb
fldenv
pushf
add
mov
mov
sbb
lret
fldcw
push
dec
inc
push
mov
loope
mov
push
push
shlb
mov
scas
cmpsl
aaa
xchg
sbb
mov
push
pop
jl
xchg
mov
ja
adc
repz
dec
mov
shl
or
divl
ljmp
call
aam
pop
jge
sti
jmp
jmp
lea
adc
fcmove
sbb
stos
outsb
and
sahf
push
pop
rolb
mov
xchg
inc
cmp
in
mov
sub
in
add
jbe
movb
cmp
cmpsl
lock
push
test
adc
jmp
outsb
fucomip
lea
push
or
dec
xor
ret
jl
xchg
sub
pop
sub
push
pop
ret
jge
data16
imul
mov
mov
cmp
loopne
sub
adcl
popa
in
push
mov
in
mov
clc
lahf
cmpsl
push
pop
pop
sub
mov
pop
mov
repnz
jp
push
and
push
ret
adc
push
push
xchg
and
xor
pop
mov
and
fsubrl
enter
and
pop
leave
imul
inc
shll
sub
aaa
and
push
xor
out
in
sbb
loope
mov
scas
add
mov
jmp
cmpsb
icebp
xor
jne
xchg
into
sahf
arpl
adc
inc
xchg
shrl
and
cwtl
lret
cwtl
sahf
out
pusha
push
scas
mov
addr16
lock
and
push
mov
mov
adc
mov
test
insb
ss
sbb
mov
inc
push
mov
mov
inc
ret
rolb
pushf
lret
sbb
shll
les
push
mov
cmp
mov
and
jne
jo,pn
push
xchg
sbb
mov
repz
mov
pop
pop
jecxz
xchg
sub
cmpsb
cmp
and
iret
mov
lods
lods
mov
ret
jg
inc
jnp
scas
push
xor
out
mov
fwait
test
sbb
sbb
into
lret
mov
jo
push
mov
mov
jecxz
out
aad
or
gs
imul
mov
add
push
push
mov
dec
xchg
jbe
mov
test
and
outsl
gs
add
hlt
sbb
dec
sub
mov
mov
push
movsb
jg
stc
fwait
or
push
push
dec
js
clc
cmc
fidivl
cmc
ret
aam
push
sub
cmpsb
cmpsl
add
mov
jl
xchg
xchg
imul
into
mov
loopne
mov
cli
repnz
faddl
aad
dec
shl
in
out
int3
or
adc
insl
outsl
and
in
jmp
scas
cmpsb
sub
mov
mov
xchg
data16
shlb
lret
mov
adc
mov
orl
pop
pop
inc
xchg
clc
fs
sti
leave
mov
xchg
aad
pusha
mov
jb
addr16
inc
mov
or
pop
pop
xchg
cmp
jb
addb
int
pop
loopne,pn
jno
mov
mov
inc
sub
adc
icebp
xor
in
enter
or
cmp
mov
add
dec
and
mov
inc
mov
out
cltd
mov
add
out
insb
fsubr
cli
mov
push
sbb
lahf
dec
pop
notl
xchg
jl
and
stos
mov
jnp
xchg
mov
fstp
bound
imul
jp
jge
and
mov
adc
es
out
and
mov
int
inc
in
adc
popa
andb
or
insb
adc
push
out
sub
je
push
jl
sbb
push
xor
xchg
icebp
or
lcall
sbb
xor
dec
pop
sub
inc
push
inc
or
cmc
xor
inc
push
jecxz
sbb
inc
mov
daa
xor
mov
or
lcall
xchg
jns
lcall
mov
mov
cmp
cld
sarb
jg
adc
push
adc
iret
fwait
sbb
mov
inc
dec
jns
inc
test
inc
or
mov
adc
xchg
dec
push
int3
ret
or
inc
in
jbe
ret
aaa
jecxz
cmpsb
lods
xchg
mov
les
subb
out
xchg
push
xchg
sub
icebp
lcall
icebp
fdivrs
mov
ss
pop
jne
mov
mov
ficoml
adc
dec
mov
inc
mov
xchg
push
cwtl
cmp
daa
and
ret
xchg
inc
mov
cmpb
fs
test
les
sar
fdivs
sub
js
shlb
ret
add
cmp
lock
xchg
test
jno
xchg
cmpsl
cmpsb
lcall
test
xor
mov
aam
fwait
insb
pop
lret
call
and
out
cmp
scas
addr16
test
jle
sub
xchg
loopne
xchg
pop
mov
mov
mov
xchg
arpl
jecxz
adc
in
das
xor
mov
push
lret
enter
in
pusha
jae
add
adc
sahf
xor
cmp
out
pop
in
push
rcr
pop
and
scas
fisttps
je
and
add
push
pop
fdivs
lods
gs
cmp
outsl
push
dec
mov
push
sahf
addl
sub
jle
lea
xchg
dec
xchg
inc
or
dec
test
sbb
sahf
and
stos
das
add
pushf
push
mov
push
ret
jo
fdivrs
daa
cltd
xlat
ret
pop
call
out
mov
jne
xor
out
fldenv
cwtl
adc
push
cltd
xor
pop
int3
push
cmpsb
xor
pop
dec
flds
les
and
and
inc
or
sub
or
rorb
mov
jo
cmpsl
out
cmc
sarb
daa
add
jge
inc
out
push
jge
add
sub
mov
mov
out
ret
mov
ja
icebp
pop
into
dec
mov
sti
aaa
gs
stc
popf
movsb
and
outsb
in
loopne
cmp
mov
scas
mov
cwtl
mov
int3
call
mov
mov
or
adc
sbb
ret
or
out
dec
subb
sbb
xor
aaa
xor
jnp
std
lcall
push
outsl
xchg
leave
dec
in
jne
add
mov
xchg
dec
jmp
sbb
lea
call
mov
cs
cmpsl
sub
sahf
test
fsubp
clc
enter
adc
lret
jecxz
js
mov
addr16
push
mov
pop
push
sub
pop
mov
fistl
mov
xor
add
xor
mov
js
or
and
mov
popa
fmull
inc
add
mov
das
aad
nop
int
jbe
out
jmp
sub
cmpsl
int
add
scas
sub
inc
mov
mov
xchg
and
xor
jb
cmp
push
xchg
mov
and
lods
push
or
sbb
mov
movsl
jecxz
outsl
pop
pop
cmp
ja
push
pop
mov
or
cmp
mov
iret
hlt
jbe
xchg
mov
mov
inc
xchg
push
repnz
pop
xor
mov
scas
mov
mov
dec
dec
xor
or
jmp
xor
test
xchg
pop
sbb
insb
stos
xchg
ficoms
gs
enter
xchg
adc
clc
inc
push
xchg
or
push
and
sbb
dec
mov
xor
inc
cmp
and
imul
jg
mov
scas
mov
fcoml
lret
xchg
test
adc
xchg
ret
sub
lea
orl
pop
dec
cmovs
jb
fsub
addr16
cmp
inc
pop
mov
in
or
shrb
fists
roll
addl
xchg
bound
and
jbe
sti
cs
mov
add
sub
push
ja
adc
leave
xor
sbb
shlb
arpl
xor
mov
or
mov
sub
js
dec
outsb
sub
addr16
xchg
outsb
add
push
nopl
test
sub
stc
loopne
lret
mov
leave
sub
push
inc
outsl
int3
mov
dec
pop
and
mov
fistl
mov
mov
je
or
outsb
fmulp
ficoms
and
scas
mov
pop
ror
data16
xor
icebp
jmp
jg
roll
jg
js
push
inc
sub
fstpl
jne
mov
aam
call
inc
leave
inc
lret
lahf
ja
lock
add
lret
mov
and
fwait
outsb
pop
push
repz
int3
pop
mov
sahf
insb
cmpsb
int
mov
mov
aam
sbb
movsl
pop
ds
mov
jno
xchg
cmp
ss
clc
call
popf
xor
call
cmpsb
ja
push
or
in
aas
in
sbb
pusha
inc
pop
fs
aam
cld
sbb
ffreep
cmp
cmpsb
dec
inc
cltd
fbld
cld
mov
lret
jmp
ret
mov
lds
fwait
ror
std
shl
imul
add
repz
cs
in
pop
add
aam
mov
xor
add
mov
lds
sbb
dec
lret
shlb
ljmp
mov
test
sbb
sahf
jne
inc
push
nop
xchg
andb
or
pop
cmp
pop
push
sub
rorl
cmp
sbb
shrl
push
push
scas
lods
inc
cmp
add
dec
dec
add
adc
inc
push
sbb
inc
test
ss
inc
daa
add
in
adc
stos
or
mov
sahf
mov
imul
adc
fcomps
push
xlat
mov
pop
push
shrb
add
cmp
jae
inc
jle
sub
sbb
hlt
lds
push
xor
lret
insl
push
dec
lods
sub
mov
btr
push
sbb
sbb
imul
mov
stos
mov
out
adc
push
in
notl
sar
lods
pop
out
inc
outsl
mov
xchg
mov
mov
sub
push
mov
out
sti
pop
inc
pop
mov
sbbb
jmp
lret
andl
in
pop
mov
xlat
rcrl
scas
push
inc
imul
push
or
int
pop
aaa
dec
pop
adc
xor
jmp
mov
pop
push
push
bt
std
stc
and
xchg
xchg
scas
movsl
inc
cmpsb
xchg
push
ds
sub
rcrb
in
push
out
nop
pushf
jle
std
dec
ss
je
test
loopne
pop
push
aad
lock
sbbb
xchg
push
scas
cmc
imul
int3
add
lret
cli
jo
fidivrs
enter
ret
shlb
gs
jecxz
xchg
or
jns
das
push
std
in
jle
xlat
loop
xor
int3
xchg
jo
dec
adc
bound
xlat
mov
call
fs
pushf
fwait
jbe
fld
xor
xchg
or
fdivrs
mov
shl
out
sbb
and
aas
out
ret
dec
lcall
xor
jmp
mov
dec
ret
addl
fmull
stc
adc
stc
in
lock
sub
call
and
enter
cs
mov
ret
cmp
shlb
and
lcall
daa
daa
xor
and
pop
and
fs
outsb
adc
pop
dec
mov
test
jp
adc
xchg
add
mov
fwait
mov
xchg
or
inc
mov
sub
add
push
nop
test
popf
pop
sbb
xchg
cmp
daa
ficoms
push
fisttpll
pop
iret
pop
repz
stos
jp
scas
imul
push
jo
sti
out
jle
sbb
ficomps
adc
dec
jb
mov
ja
sub
lods
push
pop
rcrb
mov
js
sub
shrl
mov
jg
rcrl
ljmp
cmp
push
xor
fistps
cld
js
arpl
push
jle
or
mul
xchg
add
out
stos
pop
sub
js
aam
fldl
jecxz
or
pop
lret
cmp
pop
mov
out
sub
cmc
push
pop
mov
inc
pop
add
fnsave
adc
jo
repz
shrb
sub
or
pop
or
or
push
aad
flds
pop
shll
lea
fisttpl
in
cmp
icebp
shl
enter
leave
lcall
ja
int3
sti
loope
cmp
and
mov
jnp
outsb
and
mov
mov
jb
mov
inc
push
jg
cwtl
test
push
out
inc
jb
jno
cmp
xor
pop
cmp
push
add
mov
mov
outsb
loope
lods
daa
mov
sub
int
cmp
sbb
lret
cmc
xor
mov
sbb
enter
xchg
adc
adc
movsb
notb
mov
or
pop
mov
lds
negb
sbb
out
stos
out
rorb
push
mov
push
sub
mov
sbb
or
imul
xchg
cmc
int
out
shlb
xchg
fsubp
ljmp
xchg
sbb
gs
push
sub
loop
xor
sbb
push
jge
cmp
insb
sti
mov
mov
xor
insl
pop
xor
test
jns
rorb
enter
xchg
jnp
fbstp
addl
ret
pushf
es
push
pushf
jmp
stos
or
pop
lds
stos
xor
std
adc
lock
pop
mov
loopne
sarb
push
push
or
cmpsl
lods
dec
std
adc
xor
pusha
mov
lds
add
push
loope
into
and
out
leave
cmc
idivb
push
and
pop
nop
sbb
fdivrl
cmp
mov
and
xchg
lock
mov
cmpsl
inc
aaa
out
pop
pop
fdivr
mov
pop
gs
dec
fstl
or
fdivl
rcrl
ud2
test
adc
out
and
movsw
push
test
mov
mov
xor
movsl
sub
out
out
jne
aad
mov
cmp
xorl
add
push
in
sti
adc
imul
jmp
add
cmp
jp
lea
mov
mov
clc
push
rcr
and
sub
in
iret
dec
dec
lret
out
pop
movsl
jne
cmp
inc
pop
mov
dec
adc
jno
fwait
pop
loopne
sub
cli
push
sbb
xchg
dec
jno
imul
out
je
dec
es
addr16
or
insb
loop
lock
outsl
cltd
imul
and
cli
test
pop
negl
lea
mov
xor
dec
xchg
fdivrs
jg
into
mov
push
mov
jo
mov
std
pop
jmp
push
js
or
dec
xor
sti
adc
arpl
mov
adc
cs
iret
mov
add
push
sbb
cmpsb
cwtl
and
mov
add
ss
cmpsl
mov
sub
mov
adc
push
fwait
mull
lods
out
out
fldt
stos
data16
movsl
insb
rcl
mov
scas
xor
std
add
dec
dec
out
sub
stos
dec
add
sub
out
aam
xor
pop
dec
cmp
mov
jbe
cli
fcomi
xchg
sub
pop
mov
ljmp
dec
push
stc
aas
movsl
scas
stos
pusha
xor
sbb
dec
cmpl
insb
aaa
mov
add
mov
lahf
sub
sarb
pop
mov
dec
fnstsw
lds
sbb
clc
std
mov
out
ja
cmpsl
mov
xor
aas
and
pop
sub
mov
stc
push
mov
inc
add
inc
xor
adc
jb
xor
push
out
dec
shll
inc
dec
adc
cmp
dec
cld
and
add
iret
jns
pop
pop
add
mov
rorb
dec
inc
add
sub
das
xor
cwtl
jl
pusha
and
out
fistpll
ret
repz
cmp
shll
mov
in
jae
ds
cmp
pop
pop
add
mov
jg
sahf
sub
sbb
mov
sbb
fsubrs
mov
js
and
fisttpll
jmp
add
cmp
imul
pop
insl
int
aaa
call
xor
cmp
js
sti
inc
mov
inc
cmp
sti
arpl
pop
mov
scas
std
mov
and
sub
in
cmp
mov
xor
or
lcall
cmp
push
dec
mov
out
idivb
mov
sub
fwait
mov
push
clc
and
out
dec
testl
or
pop
inc
rclb
push
lea
insl
adc
cmpsb
in
scas
mov
dec
sbb
mov
xchg
or
cmp
ss
call
mov
aas
xchg
mov
mov
dec
out
mov
mov
addb
cmc
mov
ffreep
add
push
testb
sub
sbb
je
add
jle
ljmp
call
mov
push
jo
mov
push
sub
adc
add
mov
lcall
shrb
xlat
fs
test
jnp
testl
adc
fisttpll
aam
cmp
dec
push
xor
mov
mov
inc
cmp
sub
sarb
xchg
dec
movsl
scas
push
dec
mov
nop
aaa
fdivs
jns
mov
fadd
fistpl
push
scas
mov
jo
pop
push
out
xor
mov
push
subl
hlt
and
insb
test
cmpsb
pusha
sbb
jp
hlt
imul
int3
sbbb
cmp
mov
pop
sbb
jae
aas
sub
movsl
mov
push
es
dec
sub
dec
es
mov
cmp
inc
sub
dec
mov
jge
adcb
in
clc
in
xchg
aam
flds
not
or
popf
jbe
movntps
mov
shlb
out
cmp
add
ret
stos
pop
jmp
in
movb
or
lock
addr16
roll
arpl
jnp
fwait
mov
inc
xchg
mov
push
inc
jnp
cltd
lret
xchg
lds
pop
adc
adcl
inc
xor
push
cmp
xor
ss
out
stos
daa
pop
xor
cmp
or
pop
and
mov
add
adc
das
test
data16
icebp
add
mov
rorl
sbb
fdivrl
call
addl
stos
cmpsl
cmpsl
cmp
pusha
std
lahf
push
mov
aas
dec
push
sub
push
insl
xchg
pop
lods
insl
pop
xor
scas
enter
movsb
notb
fnstsw
sbb
mov
push
das
mov
sub
shll
mov
in
enter
outsl
sbb
std
inc
jbe
inc
es
cld
add
cmp
ljmp
dec
pop
mov
jmp
sbb
es
outsl
xor
adc
adc
int3
adc
sbb
mov
cmpsb
cwtl
out
pop
pop
cmp
and
push
icebp
inc
pop
add
add
cmp
push
cmpsl
icebp
fstl
cli
mov
push
nop
sub
pop
test
and
add
cmp
and
test
jl
push
or
dec
pmulhuw
nop
sbb
xchg
mov
lock
sbb
bt
cmp
mov
adc
xor
and
test
mov
and
clc
inc
mov
jp
sub
ljmp
lcall
cltd
cmpsb
movsl
inc
fbstp
sbb
mov
jge
cmpsl
adc
stos
sub
add
loope
daa
test
leave
adc
data16
push
mov
pop
shlb
jl
mov
aam
bswap
push
xor
mov
push
xlat
add
test
mov
cmp
mov
iret
stos
into
xchg
push
push
xor
lret
and
sub
xor
or
imulb
jecxz
clc
lret
mov
inc
lods
fidivl
jb
and
sbb
mov
faddl
lcall
std
mov
and
out
ret
add
jo
xchg
cs
ds
push
jl,pn
jle
fiadds
pop
jo
jle
mov
lds
imul
cs
mov
ficomps
mov
xchg
mov
jno
pop
mov
or
and
sbb
idivl
hlt
jns
fisttps
pop
xchg
inc
push
cmpb
pop
xchg
push
pop
mov
jmp
or
or
xchg
inc
imul
nop
jno
mov
loop
arpl
xchg
pop
push
xor
mov
pop
rclb
jmp
sub
shrl
lea
cmp
hlt
push
pop
cmpsb
lret
adc
lcall
rcl
mov
jp
imul
mov
pop
lret
add
and
push
xchg
shlb
xchg
dec
mov
sub
pop
mov
sbb
pusha
in
sub
int3
stc
lret
enter
aaa
test
das
jecxz
divl
cwtl
loop
or
faddl
pop
sub
fwait
ret
pop
xchg
push
cmp
test
stc
and
add
jle
jl
jg
xor
pop
dec
pop
adc
and
hlt
cs
pop
and
add
das
mov
jecxz
bound
cli
inc
aas
and
bound
movsb
popa
ljmp
pop
sti
ljmp
add
sub
jle
enter
dec
mov
xchg
adc
push
and
xor
xor
xchg
inc
dec
or
jae
imul
mov
sahf
in
imul
sbb
mov
inc
in
push
pop
xchg
orb
dec
fstpt
incb
sahf
ja,pt
push
adc
cltd
ret
jp
and
xor
pop
push
pop
popa
push
xor
loopne
subl
cmp
test
dec
xor
xchg
cli
ss
inc
xchg
jl
and
push
and
mov
or
fdivrp
cmc
xchg
hlt
sbbb
loop
nop
sbb
jbe
and
fs
cli
aad
jbe
rolb
scas
pop
scas
sbb
repnz
sbb
cmpb
enter
rorl
ret
jo
pop
lds
addl
addb
inc
mov
jae
mov
dec
ret
stc
scas
jge
cmp
jno
out
push
bound
cmpsl
pandn
mov
cmpsl
outsb
clc
in
xor
sbbl
and
outsb
loope
test
das
dec
sbb
and
inc
lds
and
mov
jp
jmp
xchg
xchg
out
or
scas
dec
xchg
mov
dec
cmp
aam
lret
insb
pop
mov
mov
push
push
sub
sub
mov
shl
cmpsb
stos
inc
movsb
into
lahf
add
push
sti
mov
hlt
inc
rolb
jno
push
ror
cmc
insl
adc
inc
call
push
jns
xor
cmp
fcoms
fucomi
lahf
movsb
fadd
sub
and
add
and
push
hlt
mov
cmp
pushf
cmp
jae
addr16
sbb
jno
lahf
not
adc
je
add
mov
jo
xor
mov
loope
adc
imul
mov
stos
lods
inc
jle
or
push
aad
out
int3
xchg
js
mov
sub
xchg
sahf
aas
imul
enter
icebp
cmp
int3
les
cmpsb
scas
aam
clc
push
inc
ss
push
sarb
stos
les
inc
out
mov
jecxz,pt
and
fwait
je
mov
dec
pop
mov
fldt
popa
xor
push
sarl
pop
fnsave
dec
lods
pusha
push
inc
popf
cltd
loop
les
shlb
mov
repz
push
mov
sub
jmp
xchg
jp
sti
fdivrs
fnsave
mov
stc
xchg
pop
jmp
loopne
xchg
std
cs
cld
pop
mov
enter
ret
fs
pop
mov
das
lods
push
sub
mov
add
sysret
add
push
push
andb
pop
insl
incl
inc
cld
jno
add
add
loope
popa
cmp
outsl
div
insb
mov
les
shll
movsw
xchg
dec
pop
int3
adc
jecxz
mov
or
mov
xor
mov
push
js
inc
mov
sysexit
or
into
add
pop
mov
mov
cli
fwait
add
mov
enter
shl
pusha
cmc
or
xor
repnz
out
stos
and
jmp
mov
pop
je
repnz
repnz
inc
mov
xchg
popf
push
movsl
pop
mov
xor
and
adc
jno,pt
mov
lcall
rcl
std
mov
dec
pushf
loope
fldcw
sub
sub
enter
idivl
in
aaa
pop
cmpsb
jbe
fimuls
mov
dec
shll
xchg
popa
jecxz
xor
xchg
fstpt
inc
mov
mov
sub
stc
sbb
cmp
syscall
jno
shlb
inc
movsb
pop
ret
sahf
lea
cmp
or
scas
xchg
mov
inc
lret
mov
mov
in
jae
cld
mov
xor
sbb
in
lret
jae
xchg
add
jb
jb
xchg
mov
xor
and
addr16
sbb
fs
jle
std
inc
shlb
mov
loope
repz
pop
push
dec
jno
push
sbb
test
cmp
or
test
popa
bound
push
dec
and
cwtl
popa
push
aad
orb
inc
ds
jnp
mov
cld
adc
repz
movsb
xchg
aad
pushl
pop
stos
ret
fcompl
or
mov
sub
dec
pop
or
in
outsl
into
imul
push
addr16
mov
lds
sub
jne
stos
pop
popf
jecxz
or
dec
cmc
int
add
inc
je
iret
mov
push
cld
lret
sbb
cmp
outsl
fwait
xlat
clc
mov
mov
fnsave
adc
and
pop
nop
mov
iret
enter
jnp
stos
jecxz
cwtl
push
or
sub
mov
arpl
cmpsb
stos
or
popf
rdmsr
or
adc
loope
sti
scas
ret
push
bound
es
push
fistpll
add
or
aaa
mov
out
imul
mov
mov
inc
loopne
out
lock
sub
jmp
lahf
push
cmp
jnp
push
inc
cmpsl
jmp
mov
cmp
test
mov
jg
pop
adc
out
in
sub
and
pop
fs
jp
loopne
in
repz
repz
jns
cltd
cltd
or
nop
jecxz
in
mov
imul
cmp
and
into
or
lcall
or
cmp
fdivp
sub
push
pop
cwtl
repnz
sub
lds
les
cmc
cmp
mov
sbb
inc
jecxz
xor
inc
jns
xor
jge
fsincos
and
jecxz
sub
pop
xchg
sbb
sbbl
jmp
lock
jmp
cmp
xor
movsl
pop
fbld
xor
sbb
xor
sti
dec
mov
add
aas
lock
mov
xchg
jp
push
and
jmp
arpl
pop
mov
xor
je
mov
xchg
jle
pushf
jmp
xchg
test
stc
xor
test
xchg
ljmp
adc
mov
inc
fnstsw
jne
cmp
push
xor
cmpl
sarb
jns
repnz
scas
lock
in
leave
push
es
sub
mov
jno
inc
add
cmpsl
pop
daa
jb
mov
xchg
jae
ja
movsl
in
jns
xorl
mov
jae
pop
xor
add
cmp
sub
and
xchg
repz
repnz
or
adc
pop
es
mov
inc
dec
mov
sub
mov
xor
icebp
inc
xor
sbb
mov
mov
pop
mov
xlat
mov
cli
cltd
mov
mov
dec
addr16
loope
out
mul
sahf
dec
jo
xchg
sub
mov
mov
test
ljmp
mov
aas
rolb
loopne
ss
push
xchg
in
ret
loope
dec
jae
out
jb
aas
push
shll
hlt
je
xchg
insl
jl
sbb
lahf
sub
filds
inc
enter
jnp
jecxz
movl
mov
xchg
mov
loop
repnz
sub
sub
into
and
cltd
xlat
mov
lret
leave
jmp
mov
ja
and
mov
std
mov
inc
xchg
ret
popf
loop
adc
movsb
aam
pop
cmp
ljmp
cmp
pop
xchg
push
rolb
push
insb
pop
xor
cwtl
lahf
pushf
popf
gs
data16
mov
pop
pop
add
cwtl
mov
cmpsb
loope
inc
sahf
test
cmp
fwait
sbb
lret
popa
je
xor
sub
cmpsb
dec
pusha
ja
mov
insl
cmp
dec
addl
xchg
lock
leave
push
hlt
mov
push
ficompl
lods
outsb
ljmp
filds
in
sbb
add
aam
pop
or
jne
push
enter
mov
out
dec
dec
cmp
push
push
push
cs
jb
jmp
mov
repnz
outsb
popa
and
subb
push
dec
test
sub
insl
mov
fs
in
lea
lock
repz
push
imul
push
xchg
test
mov
scas
pushf
popa
add
ficoms
push
xor
int3
sbbb
stc
or
jp
mov
pushl
ret
int
mov
inc
pop
pop
pop
loopne
push
int3
or
daa
data16
aaa
xor
je
xchg
ljmp
in
subb
xlat
roll
daa
loope
repnz
jge
xchg
push
sbb
mov
fmuls
enter
push
lahf
push
inc
mov
or
cld
cmpsb
xchg
stos
lea
dec
push
pop
sbb
cmp
out
add
int3
xchg
jmp
mov
mov
add
scas
vsubpd
mov
or
stc
clc
pop
movsb
add
idivl
loopne
adc
into
pop
movsb
dec
adc
jecxz
imul
add
lock
pop
std
sub
sbb
xor
sub
mov
add
inc
cmp
sbb
inc
mov
mov
aaa
mov
je
aam
jne
ret
mov
lcall
jo
daa
and
fcoml
adc
inc
dec
test
gs
fs
scas
push
aad
mov
jb
cmp
adcb
popa
or
daa
pop
xchg
lahf
stc
xlat
aad
leave
imul
push
fwait
mov
cmp
jne
xor
or
inc
sbb
pop
addl
shlb
icebp
sti
jno
pop
or
sbb
std
xorl
push
xchg
insl
cmpsb
dec
les
jb
mov
pop
lods
sbb
or
pop
icebp
dec
cmpsl
sbb
push
mov
int
leave
dec
jg
cld
dec
push
or
pop
adc
xor
pushf
inc
cmp
pop
pop
outsw
gs
rclb
add
lcall
jnp
in
out
jnp
ljmp
mov
push
outsl
xor
adc
hlt
leave
pusha
and
aaa
mov
adc
sub
mov
jl
xor
or
aad
fisubs
cmp
aad
mov
mov
cs
sahf
in
iret
in
cli
sbb
sbb
xor
push
cmp
push
stc
inc
dec
push
sub
out
sbb
daa
and
lock
mov
out
xor
push
aas
movsb
xor
pushf
imul
bound
popf
xor
mov
popf
jecxz
xor
pop
mov
andl
into
call
bound
fsubrp
into
or
dec
or
out
cmp
incb
xor
add
pop
test
jnp
add
mov
jp
jp
cmc
int3
sub
outsb
arpl
xlat
mov
pop
dec
or
and
mov
mov
mov
shl
xor
add
jmp
mov
mov
pop
loop
adc
fdivr
cmp
in
outsb
jo
es
mov
jbe
xlat
push
insl
subl
pop
pop
daa
push
mov
add
loopne
mov
mov
mov
inc
lahf
cmp
test
jmp
iret
cmpsl
popa
inc
out
jl
xchg
mov
adc
fnstcw
mov
xchg
test
rcl
movsl
xor
sub
pop
fiaddl
dec
cli
iret
dec
jg
mov
cmc
in
std
dec
jmp
xlat
aaa
mov
sbb
fimuls
sub
inc
lds
adc
or
sti
adc
sbb
testl
divb
xor
push
push
mov
mov
mov
test
jne
dec
jbe
sub
aad
adc
dec
push
addr16
sub
andb
dec
push
in
insl
outsb
dec
and
mov
pop
and
cltd
lahf
inc
xchg
push
iret
push
push
sbb
ljmp
mov
mov
cmp
push
out
cmpsl
les
add
sbb
sti
mov
cld
jg
jmp
shlb
mov
inc
daa
stos
mov
clc
fidivl
movsb
test
cmp
add
cld
or
stos
shll
insl
rdtsc
outsl
push
xchg
and
repnz
loope
dec
and
push
sub
jle
push
fisubl
outsl
aam
out
push
jle
sti
pop
adc
sahf
out
mov
lods
dec
int
push
fistpll
je
add
or
repnz
imul
out
adc
jl
inc
xchg
leave
push
xchg
adc
mov
and
lods
jnp
fdivp
jmp
pusha
cmpsl
hlt
les
mov
xor
test
sbb
push
xor
imul
shrb
loopne
cli
push
outsb
jle
leave
xor
popl
mov
jo
jno
ret
cmp
cmp
aad
in
loope
xchg
sbb
aaa
push
push
pusha
es
push
add
xchg
and
inc
or
dec
push
rorl
pop
sar
sub
iret
jne
clc
pop
mov
add
mov
rcrl
mov
hlt
sbb
out
fcom
pop
adc
xor
xchg
mov
fcompl
fidivrs
sbb
inc
aad
test
push
sti
mov
xchg
mov
ret
mov
sub
cmpsl
sbb
push
lret
stos
mov
and
and
xlat
jne
push
cld
xchg
pop
fadds
jns
mov
cwtl
out
jg
adc
cmp
loop
push
sahf
inc
mov
inc
cmp
pop
loop
sbb
rorb
ss
mov
inc
mov
add
movsl
popf
push
or
dec
lods
push
jg
pop
je
pop
pop
es
sbb
inc
xor
pop
aad
lahf
xor
inc
mov
mov
ret
xchg
push
add
lods
es
arpl
pusha
xlat
outsl
dec
mov
mov
mov
dec
jmp
sahf
inc
mov
sub
sbb
cmpsb
xchg
mov
nop
js
andl
fwait
scas
cmp
faddp
out
cmpl
mov
inc
add
icebp
dec
lods
inc
sub
clc
rolb
pop
cld
out
nop
arpl
add
ret
aad
gs
cmp
jge
fdivrs
xor
add
dec
sbb
clc
or
and
mov
and
test
nop
cmpsl
or
enter
inc
cmpsl
push
mull
daa
cmp
mov
subl
addr16
pop
pop
out
jae
outsb
sbb
cmp
out
mov
les
test
hlt
nop
aaa
add
popf
ss
pushf
loopne
or
sbb
in
jmp
pop
ret
loopne
outsl
movsl
add
scas
add
lahf
pop
in
popa
clc
jnp
cmp
cmp
mov
outsl
ljmp
adc
push
lret
test
int
jns
int
das
mov
adc
lds
push
or
pop
sbb
ficompl
pop
ret
mov
mov
push
js
mov
adc
into
sub
mov
cmp
dec
clc
sbb
cmc
sub
lds
fsubl
mov
int
outsb
addr16
sub
xchg
jp
repnz
dec
mov
fiaddl
fmuls
add
pop
mov
std
data16
fldenv
loopne
lock
cli
icebp
lcall
popa
lahf
inc
mov
or
pushf
mov
and
xor
cli
xor
call
mov
nop
rorl
lock
jnp
lock
and
jo
sbb
mov
push
cmpb
push
jge
jno
js
cmp
mov
lret
int3
pop
ja
pop
imul
xor
cmp
sbb
jmp
push
stos
lahf
pop
and
xchg
jge
mov
jl
dec
fsubrl
cli
out
pushf
and
dec
ror
push
js
or
mov
into
aaa
inc
out
cmpsl
push
jae
pop
shll
mov
pop
cmp
test
xchg
out
fiadds
pop
inc
aam
push
lea
mov
arpl
lahf
sub
in
lods
mov
out
stos
mov
dec
mov
jp
cmp
or
dec
sti
cld
mov
das
flds
jne
jp
cs
lods
mov
dec
icebp
orb
sbbb
and
hlt
das
xor
in
ss
jmp
inc
mov
lcall
fcmovnbe
sub
and
jb
mov
out
sub
scas
sub
cmp
fidivs
mov
mov
fldt
or
test
xor
rorb
cmpsl
outsl
jp
or
pop
notb
fisubl
popf
dec
sbbl
push
inc
arpl
pusha
mov
into
jle
lahf
cmp
call
pop
clc
lock
mov
scas
nop
pop
mov
adc
jl
outsl
pop
mov
lods
ret
dec
dec
add
ret
sahf
jae
in
pop
repz
or
cmpsb
es
repnz
xchg
test
imul
iret
fprem1
dec
dec
daa
mov
mov
and
xchg
push
out
sbb
jmp
sub
cltd
ja
dec
lods
arpl
bnd
idivb
out
aam
lea
cwtl
jae
xchg
and
lods
add
jns
jp
fsubrl
inc
dec
ljmp
cld
add
movsb
dec
add
out
loopne
insl
add
int
shlb
and
lcall
lods
mov
cltd
xchg
add
mov
js
in
jp
mov
mov
xor
in
push
in
aas
sbb
dec
sahf
pmulhw
fistl
pop
push
mov
dec
mov
out
fwait
mov
pop
sub
push
jb
sub
add
mov
jae
or
push
shll
popf
insl
inc
sub
xor
and
ret
xchg
sbb
aad
fstl
xchg
lds
jno
das
adc
pop
int
mov
jbe
jge
stos
cmp
popf
add
sbb
addl
push
dec
mov
and
pushf
lcall
lcall
lock
bound
sbb
mov
add
cmp
mov
cmpb
clc
add
mov
mov
vcvtsd2si
dec
inc
cmp
inc
push
inc
inc
xchg
pop
stos
scas
jge
cltd
dec
and
jmp
test
mov
push
adc
iret
xchg
mov
add
inc
mov
ja
add
mov
lcall
les
mov
inc
add
movsl
subl
adc
or
inc
mov
sti
lahf
push
push
mov
movsl
pushf
sbb
ret
cs
cmp
jno
lods
inc
and
push
fwait
cmpsl
inc
repnz
and
jno
ret
std
push
out
ljmp
add
mov
dec
fwait
lods
jno
cmp
stc
fsts
jmp
cmp
aad
jecxz
test
clc
clc
jb
push
into
pop
push
sbb
aad
add
loopne
invd
mov
mov
es
imul
pop
jl
mov
inc
inc
xorl
sbb
shrb
aam
inc
xchg
lret
movsb
dec
ret
scas
xchg
and
repz
jo
or
in
pop
mov
xor
adc
out
arpl
movsl
imul
outsl
sbb
xchg
mov
shufps
cmp
push
push
dec
insl
dec
leave
iret
hlt
mov
or
imul
cmp
xchg
cmpb
adc
add
popf
stos
repz
adc
jecxz
mov
scas
jnp
sti
xor
jecxz
mov
add
push
movsl
rclb
je
popa
test
pop
mov
int
inc
lea
and
cli
lods
ret
dec
int3
int3
mov
adc
mov
ss
dec
shll
sbb
xchg
enter
mov
cmp
into
popa
aam
push
inc
lock
jno
dec
and
aas
insl
aaa
or
negb
jp
inc
mov
sahf
fldenv
pop
lret
decl
out
mov
leave
pop
shrl
cmp
xor
dec
rcl
cmc
jbe
setle
xchg
lods
sbb
stc
popf
leavew
xor
push
insb
cmp
mov
push
jmp
mov
xor
sar
sarl
push
mov
rcrl
loop
xor
mov
sahf
inc
jbe
inc
mov
loop
sarb
sbb
imul
leave
pop
dec
sub
mov
inc
xor
sbb
mov
inc
cs
xchg
mov
pop
jo
mov
mov
fsubrs
lahf
add
ret
nop
jmp
jmp
jl
cmp
jl
or
or
xor
inc
outsl
mov
or
mov
inc
add
push
nop
jns
les
pusha
insl
ret
xchg
cmp
xor
imul
outsl
mov
ds
mov
xchg
aaa
out
call
pop
push
mov
mov
scas
cmp
adc
sbbb
adc
add
add
std
mov
cmp
xchg
mov
lret
xchg
fistps
cmc
inc
lahf
test
scas
inc
out
js
sbb
dec
xchg
in
mov
out
jne
push
int3
roll
xchg
mov
sub
sbb
cld
loop
out
xchg
add
jb
mov
insb
jne
dec
mov
mov
dec
sub
loopne
es
and
pushf
clc
call
movsl
aam
sti
dec
ret
aas
into
or
mov
je
push
xor
loope
lock
or
repz
or
stos
fiaddl
fisttpl
mov
aaa
imul
loop
sub
dec
lea
push
sbb
inc
lret
adc
outsl
cmp
icebp
sub
cs
sub
das
ret
sub
push
decl
insb
inc
dec
cmp
stos
pop
fs
mov
pop
push
divb
ret
add
sti
xlat
mov
sbb
add
cmp
xchg
negb
xchg
pop
flds
push
loop
shl
movsb
mov
or
mov
cli
clc
repnz
imul
cmp
mov
jo
mov
and
lret
hlt
or
dec
aaa
dec
inc
jmp
pop
mov
mov
loopne
sbb
aad
loope
pushf
ja
movsl
add
jmp
mov
out
dec
stos
pop
pop
dec
mov
aam
xor
and
add
icebp
or
or
ja
and
xchg
daa
xchg
dec
pop
lcall
sahf
mov
or
test
shrl
enter
outsl
push
das
js
bound
test
imul
dec
sub
mov
in
cmp
and
aam
repz
xor
ds
call
inc
cmp
outsl
lcall
mov
inc
inc
xlat
mov
pop
sub
ffreep
ret
movsl
or
mov
das
jle
movsb
xchg
arpl
xor
dec
dec
xor
pop
pop
fwait
jge
adc
loopne
int
push
mov
loop
test
int
int3
mov
cmp
adc
xor
lcall
rorb
and
repz
gs
dec
fwait
jmp
loope
ds
icebp
jns
or
jne
xchg
mov
cli
jnp
subl
or
scas
jns
mov
xchg
and
or
ds
fwait
or
adc
clc
pop
aad
int3
pop
and
call
cmc
add
rcll
mov
insb
cmovnp
cld
mov
and
outsl
dec
xchg
test
outsb
jno
push
out
jns
push
rcll
pop
cli
adcl
add
pop
aaa
inc
into
or
inc
mov
or
dec
fs
sub
gs
shlb
inc
bound
test
stos
mov
arpl
loop
pop
mov
sub
fcom
pop
in
test
fmul
movsl
fstps
repz
fstl
cltd
push
inc
dec
inc
cmp
dec
cltd
mov
lock
mov
xlat
sbb
je
add
int3
sarb
mov
enter
cmp
rclb
popf
xor
xchg
cmp
adc
cs
call
insb
and
aaa
push
xor
sub
fucomp
mov
jnp
jge
inc
jge
stos
stos
cmp
mov
imul
push
out
repnz
adc
neg
and
outsl
ljmp
stos
add
mov
iret
repnz
mov
ss
dec
jge
imul
cmp
ficompl
pop
popf
adc
jne
cmp
sbb
pop
and
mov
and
mov
insl
cmpsb
inc
push
subl
push
jl
xadd
arpl
int3
scas
std
lcall
xor
fstps
cld
mov
daa
pop
xchg
mov
int3
xchg
movsl
push
filds
push
cmp
inc
fidivrs
mov
mov
movsb
mov
lock
aad
movsl
cmp
pop
mov
dec
pushf
mov
aas
bound
cmpsb
push
sub
ljmp
mov
ja
pop
jp
aas
mov
into
sbb
inc
adc
xor
sbb
clc
push
sub
sbb
mov
shrb
mov
idivl
repnz
mulb
add
in
cmp
ja,pn
int
iret
push
mov
xchg
es
pop
cmp
movsb
nop
jbe
dec
sar
not
ljmp
sub
test
ror
insl
inc
hlt
jns
push
in
outsl
and
lods
or
or
icebp
push
lods
fwait
mov
fcmove
cmp
mov
xchg
outsl
xchg
push
test
sub
xor
insl
pop
mov
lret
cmp
xor
stos
push
inc
mov
jmp
xlat
in
jne
aaa
mov
lock
jecxz
push
or
pop
mov
out
cmp
js
mov
jns
lcall
es
xor
adc
hlt
inc
pop
enter
scas
in
dec
sbb
mov
mov
mov
in
insl
shrb
pushl
mov
lea
lret
xchg
sahf
lea
jle
jno
sub
jnp
dec
into
das
mov
test
fdivrs
fsubr
pop
xchg
pushf
cmp
cmc
in
inc
mov
xchg
mov
ret
push
clc
jno
idiv
jne
push
call
lods
jnp
pop
notl
pop
pop
xchg
jno
aas
js
shrb
mov
dec
add
rolb
test
push
popf
jb
sbb
js
fmull
jecxz
pop
mov
aaa
in
jge
stos
inc
sub
xchg
pop
leave
arpl
jo
gs
int
mov
sbb
push
repz
dec
cmp
ss
sbb
jno
loope
inc
cmpsl
movsl
cltd
lret
js
xor
cmp
in
xchg
mov
and
clc
js
xchg
ss
lock
push
lahf
gs
addl
js
xor
ret
dec
das
and
in
adc
mov
lock
fnstsw
sub
rorb
outsb
cmc
fcompl
mov
outsl
inc
jle
or
scas
sub
faddp
fldlg2
sbb
xchg
xor
and
ja
lahf
imul
ret
cmpsl
xchg
cmp
mov
pop
mov
jbe
push
iret
out
add
sub
push
add
xor
stc
push
mov
cmpsl
dec
xchg
xchg
lea
xchg
aad
push
xchg
mov
cmpsl
shl
into
neg
popa
imull
add
adc
and
mov
jb
arpl
imulb
ljmp
or
jg
hlt
mov
sahf
aas
mov
dec
outsb
jg
mov
repz
out
enter
add
cld
out
mov
mov
into
cs
les
std
xor
aaa
sbb
insb
mulb
sub
lcall
pop
fildl
and
js
mov
stc
jo
leave
push
inc
inc
notb
mov
in
call
push
mov
test
adc
lret
inc
push
sub
or
jnp
or
rorb
xor
xchg
adc
data16
adc
cmp
cli
jno
add
nop
pop
or
add
bound
and
mov
add
bound
inc
insb
stos
adc
push
stos
pusha
leave
jnp
aaa
jle
cmpsb
pusha
or
imul
inc
nop
cmp
mov
xchg
popf
xor
rcrl
mov
stc
xchg
imul
push
cmp
jp
or
into
sub
sub
xor
dec
mov
push
clc
inc
and
dec
mov
mov
gs
shlb
and
pop
pop
call
adc
je
pop
pop
mov
sub
cmp
push
pop
jne
bswap
fcoms
xor
xchg
mov
mov
xor
push
ds
xchg
fadd
fidivs
push
leave
stos
adc
sub
stos
push
cmp
inc
sbb
xorb
cmp
in
ja
lret
loope
push
dec
fisubs
cmc
into
fsub
and
sub
aas
or
icebp
jecxz
lret
jmp
mov
lods
insl
jnp
push
dec
into
leave
jl
cmpsb
stos
jnp
dec
jmp
loop
pop
mov
mov
jge
add
xchg
jae
jp
mov
adc
jne
and
sbb
inc
out
xchg
or
arpl
xchg
orb
popf
dec
xchg
xor
mov
sar
fmull
sub
mov
cs
inc
call
cmp
data16
inc
data16
mov
adc
stc
clc
and
and
mov
sbbl
jnp
xor
mov
lods
psubw
lret
pop
lds
fdiv
les
addr16
inc
cmp
das
inc
pop
int3
push
js
repz
icebp
sarl
pop
call
loopne
aaa
mov
es
dec
pop
mov
nop
xchg
das
lret
icebp
sub
ret
stc
xchg
in
adc
mov
out
adc
dec
jmp
push
sub
enter
sti
rorl
mov
push
inc
lahf
adc
out
pop
sub
xchg
dec
aas
pop
mov
fistps
test
inc
stos
adc
loopne
sbb
inc
mulb
ss
fcomps
stc
lods
and
rorl
ja
adc
roll
mov
and
rcrl
and
push
pop
push
ret
add
xchg
nop
cmpsb
or
xor
push
call
mov
push
pop
daa
in
cmp
mov
adc
xor
inc
movsb
jle
inc
dec
mov
dec
xchg
add
lahf
stc
xchg
or
call
aam
pushf
mov
sub
ss
les
mov
adc
add
js
mov
aam
outsl
lahf
pop
add
movsb
loop
mov
int
js
lods
adc
mov
push
cmp
cld
daa
mov
test
mov
rcrb
lcall
sub
xchg
pop
roll
inc
shlb
mov
inc
stos
jo
xor
push
push
push
xchg
scas
enter
in
push
inc
icebp
inc
add
in
push
daa
out
fcomip
adc
das
pushf
ret
shl
push
dec
test
repz
inc
mov
aam
mov
xchg
outsl
xchg
adc
mov
add
and
mov
popa
fdivrs
or
imul
stos
pop
adc
cmp
decb
stos
fwait
sbb
jbe
adc
cltd
push
movsl
popf
pop
mov
mov
stos
mov
and
out
fcmovnu
jp
stc
sub
test
sbb
jbe
inc
xchg
bound
sbbb
mov
int3
je
stos
ss
xchg
and
or
mov
inc
sbb
mov
test
xlat
inc
clc
pop
gs
xchg
mov
cld
les
sbb
and
ss
sbb
inc
out
pop
test
cltd
cmpb
pop
in
dec
testb
sub
out
vpunpckhwd
sbbl
ficoml
and
cld
pop
jge
push
inc
jne
mov
mov
pushf
iret
cmp
mov
mov
ljmp
inc
inc
lea
fidivs
ffreep
dec
add
inc
out
mov
inc
xor
add
lock
loop
dec
popl
pop
mov
sbb
fs
ja
pop
in
xor
mov
clc
or
hlt
outsl
adcl
sub
jp
testl
popa
mov
jae
shll
aaa
cmp
mov
inc
ja
or
stos
sub
dec
xchg
fwait
imul
lret
xor
fisubs
cltd
cmc
dec
inc
test
sbb
jb
pop
and
or
ds
pop
jle
shrb
lods
cmp
in
lret
mov
mov
pop
adc
shll
loop
scas
popf
push
lods
sahf
mov
insl
movsb
lds
and
sbb
mov
and
xor
jne
ret
std
int3
pusha
push
lcall
mov
add
pop
jb
movq
ljmp
rorl
lret
push
jne
test
lret
stos
and
jge
cld
stc
iret
jae
addr16
aaa
shll
inc
pusha
ret
mov
inc
repnz
imull
shrb
cmp
and
xor
mov
cld
jmp
movsb
jmp
lods
mov
std
mov
lods
pop
pushf
jmp
xchg
cmpsb
movsb
adc
ret
popa
xlat
mov
mov
sub
loopne
insl
jecxz
aas
jno
fstl
cmc
mov
or
pop
mov
dec
cld
repz
mov
in
int3
adcb
es
adc
sub
dec
xchg
aaa
jns
and
mov
fwait
adc
sbb
sub
add
ret
data16
cmpsl
pop
cmp
jo
out
xlat
ret
aam
mov
and
inc
clc
call
in
in
mov
lods
fisttpl
pop
std
arpl
and
inc
fistpl
push
cmp
jg
mov
push
xor
mov
pop
xchg
mov
sahf
sub
jne
lahf
jle
rorb
adc
aas
std
bound
sub
and
mov
adc
xlat
fmull
cmp
jbe
inc
mov
adc
gs
sbb
add
loopne
fs
incl
mov
cli
scas
stc
cmp
sbb
mov
enter
fs
int3
xchg
iret
or
jae
mov
fadds
lock
testl
jns
and
outsb
adc
dec
jns
mov
mov
scas
push
lcall
sub
sub
dec
hlt
pop
push
mov
stos
movb
nop
jmp
loop
cmp
xor
int
inc
ret
pop
add
outsl
xchg
sbb
jnp
mov
js
and
fbld
sti
sub
xor
add
cmp
shr
aad
test
sarb
jbe
lock
inc
dec
stc
pop
lret
inc
insb
xchg
sub
in
insb
jmp
jb
dec
inc
sbb
adc
or
mov
clc
lods
pop
and
sub
out
sbb
mov
mov
stos
xor
pop
mov
bound
mov
fs
jo
cmpsb
jle
xchg
call
dec
shll
sub
mov
sbb
pop
mov
pop
mov
fldl
or
sbb
movsl
and
fiadds
sahf
popa
pop
or
gs
repnz
fdecstp
rcrl
cltd
adc
push
aaa
shlb
mov
mov
xchg
in
fwait
dec
mov
lods
jne
xor
pop
imul
inc
cmp
push
jge
push
mov
push
xchg
dec
in
aaa
sbb
pop
jo
cld
inc
in
lds
jb
or
xchg
or
cwtl
shl
mov
lret
mov
xor
dec
sbb
es
mov
icebp
sbb
xchg
stc
ja
sti
push
sbb
into
or
test
sub
xor
fdivrp
mov
por
cmp
stc
jge
jne
sahf
mov
icebp
in
push
insb
aaa
dec
xor
in
push
push
pop
jno
gs
lea
test
xchg
add
fidivl
dec
xchg
dec
jb
mov
in
pop
add
hlt
stc
je
adc
dec
cld
jge
inc
or
jns
mov
sbb
mov
cwtl
xor
aaa
xlat
or
jl
ds
sub
ss
pop
out
fwait
xchg
jmp
dec
and
or
pop
sub
sub
push
and
and
mov
daa
or
insb
scas
mov
andl
std
adc
push
cmp
pop
jbe
stc
jo
cmc
jae
mov
pop
jo
mov
lods
fwait
mov
mov
outsb
mov
and
mov
push
cs
jbe
jno
inc
mov
js
xchg
mov
daa
inc
ss
cli
mov
ds
pop
mov
mov
xchg
or
fs
jmp
data16
cld
js
bound
mov
addr16
arpl
scas
push
leavew
sub
bound
inc
adc
cltd
rorl
and
jo
push
pop
sbb
leave
imul
stos
fsub
rolb
add
xlat
test
or
sbb
mov
enter
xchg
cmp
mov
pushf
inc
jb
sbb
lret
add
popa
mov
addl
mov
mov
dec
sub
mov
fsubrl
push
in
xor
pop
cmp
aas
jge
jns
addl
adc
dec
mov
and
xor
xor
xor
jmp
dec
daa
push
dec
int
pop
test
push
jmp
jns
cmp
cli
es
icebp
ds
jnp
rcrb
js
scas
adc
xchg
jb,pn
flds
mov
add
int3
sbb
dec
xor
add
mov
out
std
sbb
movsb
pop
popa
js
ja
aam
xlat
and
insb
push
fnstenv
std
pop
xor
test
ds
jmp
push
lcall
jle
in
cmpsb
ja
shl
stos
ds
in
lret
pop
or
mov
cmp
popa
sub
lcall
into
xor
ret
ss
lret
push
mov
pusha
push
mov
testl
dec
das
mov
add
enter
call
inc
in
sti
mov
push
jl
jae
pushf
test
scas
dec
enter
jmp
and
lods
lret
mov
daa
jno
mov
inc
pop
es
jl
mov
movsl
adc
loope
repz
sbb
notl
xor
and
mov
imul
xor
out
ret
sub
mov
lcall
mov
sarb
mov
outsb
shrl
sub
or
mov
mov
or
pop
leave
lods
fcom
cltd
clc
xchg
data16
ja
push
lcall
pop
xor
fsubrs
mov
das
aad
inc
pop
sub
ret
fdiv
xor
mov
pop
ljmp
adc
mov
imul
lods
or
pop
mov
enter
outsl
xor
fsubrl
add
sbb
inc
dec
ror
push
loopne
mov
fbstp
cmc
cmp
movsb
pop
cmpsl
push
icebp
fcomi
pop
loopne
push
loopne
pop
sarl
call
xor
lret
cwtl
gs
xchg
outsl
jns
cmp
mov
jl
sbb
dec
arpl
jns
shrb
rclb
lock
fcmovnu
addr16
ljmp
pop
in
cmp
push
je
lahf
shll
pop
adc
adc
mov
pop
popa
inc
filds
ficompl
mov
pop
adc
add
popf
mov
pop
or
cmp
add
jge
dec
popf
mov
stos
pop
pop
sbbl
movsl
repz
mov
notb
inc
xchg
sbb
cmp
lret
testb
xchg
sbb
add
ljmp
pop
fstps
rclb
mov
test
mov
aas
out
ficoml
and
mov
mov
lcall
mov
cmp
or
inc
mov
addr16
push
jne
mov
leave
jns
stc
outsl
xchg
loopne
pop
sub
sbb
test
loope
adc
aad
pop
and
dec
cwtl
stos
cpuid
pushf
mov
notl
or
adc
cltd
mov
ja
pop
dec
or
inc
push
cmp
mov
dec
inc
enter
lcall
push
jo
mov
outsb
push
push
push
add
push
out
pusha
ja
mov
loope
movsb
jae
subb
arpl
pop
pop
cmovns
nop
push
pop
dec
inc
cmpsl
ret
mov
mov
and
sbb
inc
pusha
jp
inc
scas
mov
push
test
cmpsl
mov
sbb
and
rorb
inc
je
mov
ret
cli
mov
xchg
add
in
ret
sbb
xor
rorl
mov
out
sbb
mov
adc
or
sbb
repnz
movsl
adc
test
adc
sub
mov
repnz
xchg
pop
adc
and
in
imul
sub
jns
add
jg
cmpsl
je
push
lcall
fs
insb
jecxz
sub
ficompl
push
cwtl
test
addr16
pop
clc
jecxz
dec
int3
mov
out
outsl
add
mov
test
adc
cmp
data16
pop
loopne
icebp
int3
das
push
mov
mov
repnz
push
add
sbb
movsl
xor
push
dec
pop
lret
ja
pop
jns
loopne
fimull
aam
mov
fmulp
xchg
push
pop
xchg
push
inc
out
int
into
inc
sahf
cmp
push
test
or
out
fs
mov
xchg
aas
rolb
leave
mov
loop
jl
scas
adc
mov
aaa
sub
and
pop
inc
xchg
lock
jecxz
cmp
jg
loope
lahf
xor
mov
notl
jge
xor
stos
and
xor
mov
les
mov
test
add
mov
repnz
xchg
shlb
cmp
cmp
cmp
test
movsb
fwait
dec
mov
out
pop
pop
outsl
lcall
into
jae
fiaddl
mov
fcom
inc
ficoml
fnstcw
jnp
xor
inc
xlat
jg
cmpsl
sti
dec
and
inc
jge
xor
mov
fmuls
insb
in
add
shl
fwait
jmp
add
sub
inc
mov
jge
sub
mov
mov
and
in
push
pop
ds
push
mov
ret
shl
les
shrb
mov
adc
xor
loope
add
sbb
out
aas
pop
push
subb
cli
ss
mov
ja
pop
xchg
add
stc
inc
mov
testb
mov
test
jecxz
insb
or
mov
lds
stos
mov
and
aad
lods
mov
lahf
ret
inc
jmp
ror
xor
xor
int
xchg
out
adc
xchg
mov
ja
int
icebp
add
pushf
cld
je
push
mov
addr16
lahf
xchg
roll
cmp
sbb
xchg
sub
xor
into
ja
mov
pop
shll
and
xchg
adc
cmp
push
and
int
mov
pop
pop
mov
neg
add
sub
test
gs
jl
adc
aaa
xchg
addr16
sub
insb
or
dec
pop
adc
inc
aaa
pop
mov
adc
xchg
adc
lods
pop
or
and
cmp
xlat
lods
dec
pop
push
js
popf
pop
lahf
popl
mov
sub
xor
lret
fisttpll
movsl
mov
gs
clc
iret
cmp
stos
testl
cmp
push
leave
sub
sahf
and
out
sbb
out
inc
mov
pop
inc
std
stos
dec
es
in
jno
push
jle
xchg
adc
mov
xchg
enter
inc
ds
dec
clc
out
loope
dec
imul
cmp
fs
cs
sub
cmpsb
push
loope
mov
sar
sub
pop
sub
lahf
push
or
sbb
int3
movb
dec
mov
dec
adc
test
repnz
enter
mov
mov
ret
mov
notl
xlat
jnp
pop
ret
ficomps
jo
adc
rorb
and
repz
jecxz
nop
movsb
xorb
or
jl
jg
mov
xchg
inc
scas
hlt
mov
je
sbb
mov
scas
adc
out
inc
pop
cmp
je
mov
std
push
mov
pop
repnz
cld
sahf
sbb
fnstcw
xor
dec
clc
mov
fs
jo
fcomip
fistps
add
sbb
dec
subl
outsb
inc
xor
int
jmp
add
cltd
sub
cmp
in
xor
insb
sbb
cmp
lock
mov
mov
push
repnz
dec
pusha
dec
lods
xlat
jmp
mov
enter
jns
loopne
sbb
je
and
cwtl
daa
or
sti
dec
arpl
pop
stos
fadds
sub
xchg
add
inc
push
stc
fnsave
push
cs
or
movsb
lea
or
sbb
mov
or
test
add
pop
mov
jae
mov
sbb
push
sbb
leave
bound
jecxz
je
and
cmp
sbb
cmp
cltd
xchg
test
or
test
mov
test
mov
mov
aam
xor
add
lcall
stos
xchg
inc
cltd
cld
test
mov
jnp,pn
test
inc
in
subl
clc
inc
add
aam
sub
jmp
outsl
fistpl
imul
jl
das
sbb
test
in
sbb
dec
pop
xor
imul
sub
fld
out
iret
xor
mov
fdivrs
and
ds
jmp
sub
pusha
jmp
pop
mov
pushaw
dec
xchg
lcall
mov
clc
pop
cld
push
call
xchg
dec
jns
xchg
mov
sub
mov
jmp
or
sbb
pusha
push
dec
cmp
inc
ds
sbb
xor
das
mov
sbb
mov
sbbb
and
imul
mov
pmaxsw
mov
lock
ds
xorl
mov
or
lock
jns
enter
pop
stos
add
and
pop
in
test
out
pop
stos
adc
cld
adc
mov
shl
loop
mov
pop
mov
sub
sbb
cld
sbb
decl
sub
push
mov
in
mov
inc
and
pop
sub
sbb
xchg
dec
scas
jo
lods
fcmovne
adc
inc
cmp
cwtl
sahf
mov
das
sbb
mov
cmp
add
push
std
push
mov
adc
add
insl
xchg
push
out
adc
mov
aas
mov
xor
mov
pop
push
xor
xchg
les
dec
shrb
mov
sub
cwtl
jo
pop
scas
addl
ljmp
repz
sbb
dec
mov
add
loopne
lahf
push
sub
jno
les
inc
xchg
xor
stos
push
jmp
imul
jnp
xor
arpl
hlt
jle
mov
xlat
test
xchg
aam
sub
mov
aas
jns
loop
sbbb
int3
xor
adc
lret
das
dec
cs
sbb
mov
sbb
data16
leave
pop
sbb
mov
cmp
mov
fiaddl
jecxz
pop
cmp
cmp
pop
out
arpl
ss
loope
mov
notb
imulb
cmpsb
xchg
xchg
popf
add
sbb
jg
lds
sbb
sub
push
pop
sbb
inc
dec
pcmpgtw
cmp
fisubs
or
xor
xchg
mov
loope
inc
mov
fcoml
pop
fiadds
mov
outsb
adc
lea
dec
je
bound
lcall
inc
insb
xchg
call
add
lods
lret
dec
add
nop
ret
cmp
sarl
xlat
bound
and
std
das
negl
pop
push
mov
ja
pop
xchg
jae
in
ja
fadds
sbb
xchg
add
gs
push
or
les
aam
cli
mov
dec
adc
sub
xchg
xchg
sub
add
subb
jbe
xor
loop
lahf
and
pop
push
shll
mov
dec
cmp
bound
add
mov
dec
dec
pop
incb
pusha
cmp
fst
test
popl
cmp
mov
repnz
or
fisubrl
mov
int3
cltd
xchg
jbe
adc
add
rolb
sub
mov
jb
lock
xlat
sbbl
add
shrl
ja
and
pop
imul
int3
inc
xchg
fsub
push
icebp
jl
movsb
mov
mov
test
mov
and
enter
stc
inc
jge
add
lea
push
loop
and
jne
out
enter
insb
mov
xchg
push
pop
or
adc
sbb
int
cwtl
outsb
jp
and
jns
mov
aas
in
mov
mov
stc
test
idivl
aaa
inc
inc
lods
movsl
sub
mov
add
sbb
inc
dec
inc
nop
inc
push
fcoml
and
add
mov
pop
movsl
cmc
scas
sub
mov
mov
shlb
or
push
lds
adc
sahf
push
jbe
cltd
cmpsb
cmp
xchg
jns
or
cmp
test
addr16
je
out
mov
jecxz
aaa
ficompl
icebp
fstp
mov
cli
xchg
inc
cltd
lret
ds
xchg
sub
arpl
add
push
stos
ljmp
andb
adc
aaa
cmc
cltd
jge
mov
xchg
cmp
sub
lahf
test
gs
aam
insb
jg
dec
xor
scas
nop
insb
add
scas
inc
cli
inc
mov
jecxz
sbbl
sub
fs
mov
int
xchg
mov
fcmovb
or
shll
out
push
test
movsl
cld
lds
mov
aaa
imul
xor
incb
imul
jno
test
leave
sub
test
lods
icebp
call
notb
rorl
jb
jae
in
fimull
imul
daa
shl
sbb
daa
cmp
mov
cmp
cli
stos
cmp
xchg
dec
ds
xchg
test
cltd
inc
nop
iret
aam
sbb
xchg
mov
idivl
or
jecxz
and
add
jl
sbb
pop
sbb
push
in
mov
mov
mov
mov
fmul
jmp
cli
repnz
mov
cmp
mov
mov
ja
dec
push
out
adc
jo
das
pop
push
inc
cmpsl
je
xor
scas
in
call
call
test
inc
repnz
ljmp
iret
mov
xchg
adc
mov
mov
jg
lea
imul
test
lds
test
in
cmp
nop
sbbb
sbb
in
jp
ljmp
jne
mov
sub
push
ljmp
xchg
inc
in
mov
outsl
fstpt
cmpsl
clc
scas
mov
jnp
xchg
out
pop
ret
repz
sbb
and
jbe
pop
adc
inc
xchg
in
or
pop
jns
mov
lds
shl
push
xchg
xor
xchg
lret
in
es
xlat
inc
int3
jmp
clc
and
inc
icebp
or
push
push
dec
movsl
out
jmp
test
cmp
jnp
adc
adc
mov
cld
fildll
inc
mov
adc
sub
lea
mov
mov
inc
add
gs
mov
leave
or
das
sti
jle
popa
xchg
xor
nop
sbb
outsb
add
mov
adc
cld
cli
mov
scas
imulb
sbb
adc
rcrl
xor
mov
add
out
or
cmc
mov
dec
cmc
and
in
pushf
lods
push
insl
pop
mov
imul
sub
push
dec
mov
mov
clc
mov
arpl
out
loope
ljmp
jno
xor
cltd
inc
iret
push
jecxz,pn
xor
orb
fldt
insl
cmpsb
int3
popf
aas
xor
scas
dec
ljmp
popa
scas
xchg
std
cmp
inc
ret
repnz
popf
dec
mov
push
xchg
pushf
inc
add
sar
rcrb
adc
push
cltd
inc
mov
or
scas
inc
xchg
test
cwtl
in
not
data16
mov
popf
mov
add
cld
orb
cmp
push
sub
inc
outsb
idivl
pop
mov
les
or
jp
imul
sahf
ja
in
sub
mov
sub
dec
pop
mov
icebp
fcmovnb
ret
jne
mov
or
inc
sbb
dec
push
ja
inc
and
jge
cmpsb
xor
repz
js
mov
mov
das
imul
add
sub
jnp
mov
jmp
test
shlw
mov
dec
imul
cmp
or
out
loop
insl
ljmp
lahf
mov
dec
add
lret
repnz
cmp
jecxz
cmp
mov
sub
adc
sbb
mov
lods
in
xchg
mov
pop
outsb
and
push
and
testl
cwtl
adc
sbb
fisubl
push
clc
outsb
inc
stos
retw
lods
paddw
popa
fstpt
pop
dec
mov
icebp
out
decl
rolb
cmp
mov
roll
push
jg
or
pop
cmc
dec
aad
wrmsr
test
push
sbb
enter
lds
adc
xchg
sahf
sub
in
or
cmpsl
mov
mov
int3
fisttpll
les
xor
inc
cmp
mov
into
call
xor
and
rclb
cmp
pop
mov
push
xor
lahf
pop
push
rclb
mov
call
lret
push
shll
pushf
rorb
lds
sub
movsl
push
sarb
out
xchg
dec
mov
clc
xchg
cs
fbld
mov
test
sub
xchg
pushf
sahf
cmp
mov
daa
fmuls
aaa
pop
clc
pop
popa
and
das
shl
scas
rcrl
popf
mov
test
dec
xor
lret
pop
imul
sub
cli
pusha
gs
xor
in
or
test
ret
jle
scas
insb
insb
mov
dec
cwtl
in
ljmp
pop
inc
fcomps
sub
flds
cs
icebp
or
orl
push
jns
fidivl
std
mov
sub
movsl
dec
cmp
testl
push
push
jo
pop
or
test
cmp
scas
loop
sti
mov
cmpsl
adc
ja
shrl
stos
mov
or
insb
cmp
pop
hlt
xor
and
add
stos
test
mov
pop
shr
inc
call
cmp
dec
inc
or
ljmp
mov
les
xor
mov
mov
jge
jg
or
sub
ja
rol
lcall
andb
pop
pop
adc
insb
pop
pop
in
loopne
pushf
into
and
or
mov
mulb
adc
out
cmp
mov
and
adc
out
int3
scas
ss
xor
mov
mov
popf
hlt
inc
xchg
cmp
notb
cmp
ljmp
clc
pushf
mov
xchg
iret
ja
and
jecxz
add
push
pop
and
aam
pop
sbb
xchg
xchg
je
shlb
push
out
pop
nop
push
orb
popa
lret
orl
add
jl
stos
rclb
xor
or
out
push
lcall
into
lahf
pop
ljmp
in
js
jbe
rorb
nop
cld
jp
icebp
imull
dec
adc
mov
jno
mov
shlb
sbb
test
xchg
addl
scas
mov
inc
sahf
jl
sub
pop
mov
sahf
xchg
pop
les
loopne
inc
add
xor
lods
fsubrl
mov
or
stos
leave
in
inc
cmp
lods
cmp
push
stos
mov
and
push
sub
cmpsl
pop
xor
daa
stc
imul
loop
xchg
std
push
test
or
lcall
jne
popf
cld
or
mov
mov
in
jmp
ret
inc
add
std
dec
sbb
nop
outsb
inc
ja
bound
insb
das
popf
jae
lret
pop
dec
arpl
andl
test
btc
je
addr16
dec
cwtl
xor
and
scas
les
imul
xchg
jl
mov
mov
pop
lahf
push
cld
jo
pop
loop
push
loop
push
sub
sbb
insb
decl
pop
sbb
adc
daa
mov
pop
push
test
imul
pop
leave
rorl
rcll
pop
out
outsb
mov
inc
add
push
xor
push
xchg
push
xchg
icebp
int
scas
xchg
cltd
popa
adc
sbb
sarl
dec
test
arpl
iret
jne
scas
dec
imul
fnstenv
popa
aas
xchg
inc
add
loopne
sub
mov
sahf
pop
movsb
decl
mov
das
arpl
pushf
loope
inc
aad
mov
lea
inc
test
sub
in
ljmp
icebp
sub
xchg
imul
outsl
jo
int
cmpsl
mov
and
ja
jmp
ja
aas
jbe
mov
out
inc
shlb
and
stc
xor
iret
mov
pop
popa
push
cs
jge
sti
and
and
and
incb
cmc
out
sub
pop
xor
lret
pushf
mov
out
cwtl
xor
rcll
mov
adc
roll
inc
fimuls
jns
sbb
rcrl
or
lahf
mov
add
sbb
pop
xchg
test
xlat
pusha
mov
mov
scas
push
insb
popa
aad
sub
iret
push
sbb
aaa
pop
dec
inc
xor
and
mov
ja
out
mov
adc
lods
mov
mov
pop
xchg
cwtl
push
js
cmp
bnd
xlat
clc
mov
mov
push
jg
sub
mov
sbb
and
and
dec
sub
cltd
fwait
jb
mov
shrb
ljmp
xchg
pop
rcrb
adc
aaa
test
hlt
in
mov
xor
fdivrl
rorl
testl
inc
sbb
add
inc
and
mov
add
loopne
jp
push
sti
inc
ffreep
sub
push
loopne
inc
iret
popa
push
repnz
fmul
xchg
dec
and
inc
popa
insb
ss
lret
call
mov
sub
or
popa
xor
inc
ljmp
out
fwait
cli
loopne
cmp
xor
test
pop
loope
in
test
add
push
arpl
cwtl
sub
lret
popf
orb
add
mul
mov
push
movsb
aas
lcall
ficompl
sbb
sbb
je
out
cmp
pop
fdivp
mov
icebp
pusha
enter
or
jbe
addb
lcall
out
cmp
sub
shlb
ds
dec
loop
pop
adc
jp
adcl
sbbb
push
ljmp
cli
out
cmp
inc
cmc
les
dec
inc
je
fcoms
je
scas
aaa
or
and
enter
int3
enter
fnstenv
pop
daa
add
sbb
in
in
add
inc
fwait
or
sub
mov
push
hlt
lea
adc
test
pushf
jp
fsubs
dec
jl
add
or
call
aam
cmp
jno
adc
nop
jmp
jmp
shrl
jns
cmpsb
pop
lahf
jmp
movsl
adc
push
xlat
pop
inc
jae
test
mov
inc
dec
inc
add
mov
loope
mov
mov
call
jbe
je
or
gs
dec
dec
aam
jne
jle
dec
fwait
jbe
leave
insb
jae
jle
mov
stc
into
popf
mov
inc
test
pop
nop
insb
orb
xchg
idivb
hlt
inc
pop
dec
push
sub
pop
insb
mov
add
fwait
cld
je
clc
dec
sbb
and
clc
aas
insl
movb
test
xchg
aad
adc
lcall
pop
push
lock
pop
loop
pop
int3
inc
cs
sbb
mov
sbb
test
movsb
inc
idivb
jnp
mov
sub
scas
loop
test
roll
jle
cmpsl
mov
shr
sub
jge
orl
inc
add
enter
dec
or
dec
fsub
mov
add
jns
jns
repnz
pop
pop
out
subb
sub
cmp
mull
fdiv
fsts
add
inc
push
pop
je,pt
dec
sub
icebp
mov
iret
lahf
sub
mov
mov
int3
les
push
fwait
inc
mov
int
cmpsb
lds
dec
std
jmp
sti
arpl
push
jmp
jg
adc
sbb
jmp
int
push
in
outsb
pushf
in
std
dec
fldt
jnp
and
into
unpcklps
jo
push
iret
pop
stc
dec
mov
mov
ds
push
inc
xchg
inc
sbb
rcll
test
push
mov
in
cwtl
ret
mov
ss
mov
je
cli
mov
xor
dec
push
pop
sbb
ret
repz
xor
filds
mov
mov
xor
adcl
repnz
cmp
ja
hlt
cli
aas
cmp
or
enter
jno
rcll
push
test
addr16
fwait
jp
test
sbb
loop
mov
pop
in
popl
mov
mov
adc
cmp
lods
flds
popf
dec
stc
shl
jge
imul
out
repnz
movb
es
push
xchg
mul
jp
mov
idiv
cmpsl
cmc
ds
or
xchg
loopne
popf
push
cs
ljmp
add
popa
lahf
sub
sub
sti
inc
sub
pop
scas
jge
mov
dec
mov
mov
and
adc
mov
fwait
and
push
cmp
pop
push
lea
fs
sub
fdivr
js,pn
sti
mov
cmpsb
cmpsb
or
or
dec
lock
aaa
push
or
mov
movsb
mov
mov
push
cmpsl
push
pop
pop
in
sub
or
push
repnz
loop
dec
nop
cmp
mov
jbe
fwait
jmp
sub
lret
inc
dec
cmp
push
fnstenv
out
shrl
adc
jp
and
mov
mov
call
push
inc
xchg
insl
xor
stos
mov
mov
sbb
mov
cmpsb
les
bound
add
mov
lods
gs
jge
in
aam
dec
bound
push
daa
xor
gs
in
rolb
lcall
mov
or
ljmp
and
stc
out
push
mov
pop
shll
adc
repnz
push
mov
insb
sbbb
out
loopne
add
repz
inc
popa
movsb
xchg
int
mov
inc
daa
xor
insl
out
pop
popa
pusha
movsl
and
test
pop
jl
fs
jae
shll
cmp
pop
pusha
pop
inc
repz
or
push
xchg
push
inc
ficoml
movsb
addr16
std
jp
enter
das
mov
pop
insb
mov
das
cmp
push
xor
arpl
call
fistl
cltd
inc
xchg
lock
jne
push
lds
aad
movsb
pop
pop
sub
mov
mov
xor
inc
in
cmp
ja
mov
jl
push
popf
fiaddl
inc
test
and
popf
xor
inc
sti
fucomip
mov
nop
add
sbb
out
adc
fiaddl
xchg
lea
outsb
lea
pop
rorb
enter
out
xor
scas
lds
data16
popa
in
jno
sarb
xor
and
cld
bound
popf
test
test
lods
add
inc
xchg
int3
dec
inc
jns
cmpsb
inc
int3
cmp
lds
mov
jae
push
inc
pop
movsl
sar
or
and
test
cmc
test
pop
inc
aam
sbb
test
sarl
mov
leave
cmp
adc
cmpl
dec
int3
je
adc
popf
gs
test
push
lret
or
cmpsb
nop
cmc
jnp
cmpsb
test
repz
jns
jae
or
popf
imul
in
stos
data16
movsb
xor
xchg
hlt
xchg
movsl
mov
xor
sub
shlb
pop
adc
inc
cmp
aas
or
test
cmpsl
out
dec
fnstsw
in
cmp
bound
out
out
mov
fsubs
dec
in
cmove
add
mov
es
fldt
popf
lock
or
dec
jnp
inc
pop
xor
jg
adc
dec
nop
adc
dec
scas
imul
jae
mov
push
or
outsb
in
and
sub
adc
mov
xor
push
inc
repz
mov
bound
cli
inc
mov
add
jle
lahf
out
pop
nop
cwtl
xchg
sbb
insl
shll
js
inc
cmp
test
adc
frstor
arpl
add
repnz
popf
popf
jae
fwait
inc
jnp
jmp
movsb
jnp
mov
cmp
xchg
adc
loopne
scas
imul
jbe
push
xor
ds
repz
test
daa
sbb
dec
jne
mov
std
add
sub
xchg
mov
test
shrb
cld
add
lods
shlb
adc
in
daa
mov
in
or
cmp
leave
leave
jge
push
jmp
xor
imul
xchg
stos
int
mov
push
outsl
cmp
adc
inc
add
loope
xchg
jge
sti
jmp
iret
sub
jae
add
push
add
mov
xchg
sub
cmp
cmpsb
inc
mov
pusha
lahf
rcl
bound
je
cwtl
and
add
lret
call
mov
mov
sbb
push
xchg
pop
xor
aam
aas
cmpsl
rclb
int3
and
xor
clc
outsb
in
divb
mov
sbb
cmp
cmc
fimuls
xchg
popa
jge
sub
es
xor
mov
xor
add
dec
cmp
sahf
inc
popa
je
in
ja
roll
mov
mov
xchg
sub
pop
mov
dec
jnp
movsl
ret
ficoml
daa
cld
mov
stos
jb
dec
xchg
movsl
bound
lods
lea
pop
cmc
mov
xchg
xlat
lcall
sbb
mov
sub
sub
push
ret
dec
movsl
jl
shlb
cwtl
mov
mov
mov
xlat
and
imul
mov
loop
insb
cmpsl
xchg
cmp
pushf
inc
ja
jmp
xchg
mov
inc
cwtl
or
mov
les
les
repnz
mov
sbb
test
push
jle
xchg
testb
int3
and
fcompl
mov
ficoms
and
xlat
xor
xor
adc
sbb
aad
lahf
lret
cld
lods
dec
mov
lds
dec
out
daa
add
pop
push
jnp
test
cmc
jne
sub
xor
push
xchg
test
mov
xlat
ret
ja
mov
cmp
lods
sbbb
lret
mov
xchg
sbb
out
lret
sbb
loop
shll
add
mov
add
addr16
xchg
pop
test
cmpsb
arpl
sbb
push
inc
xlat
out
adc
cmp
rcrb
sub
add
divl
push
mov
push
mov
sbb
mov
in
push
lcall
pop
mov
subl
andb
or
pop
scas
sub
sub
xchg
popa
jmp
in
cwtl
movsl
fistl
add
adc
mov
add
mov
ss
dec
and
outsl
pop
bound
jae
mov
lods
sbb
in
sub
pop
mov
cwtl
mov
movsb
or
into
sbb
push
and
xor
pop
cmp
xchg
or
jl
lcall
adc
test
mov
dec
sub
push
scas
push
in
mov
dec
push
stc
rolb
jle,pt
sbb
fcomi
fsubp
imul
rol
test
fcompl
jg
push
fistpl
daa
mov
push
sub
jl
cld
mov
in
jbe
fldl
dec
clc
sub
mov
pop
fwait
mov
lods
mov
or
mov
and
insb
lret
enter
repz
adc
sbb
adc
xor
fprem1
inc
popl
lcall
enter
xchg
inc
cmp
sub
std
cltd
int
sub
fsubl
test
mov
inc
adc
pop
and
sbb
mov
pusha
dec
mov
sbb
and
jns
rcr
mov
or
inc
jo
aam
pop
cmp
mov
sahf
jae
lock
call
cli
gs
loop
sbb
adc
mov
popa
roll
popf
mov
push
sbb
cld
sub
nop
pop
int
insl
loope
andb
lret
bound
ret
jg
call
sbb
dec
jmp
add
or
and
inc
fwait
mov
xchg
and
imul
faddl
loopne
push
icebp
mov
dec
dec
std
push
sub
dec
adc
popa
in
lahf
test
or
mov
and
imull
dec
hlt
faddp
jp
mov
mov
jno
faddp
or
sbb
test
nop
mov
dec
in
popf
stc
dec
and
inc
cmpsb
rcrb
mov
shll
out
lcall
cmp
ss
push
hlt
xlat
dec
cmp
inc
xor
fstps
hlt
movsl
clc
ficomps
lahf
or
orl
xor
sbb
outsb
push
xchg
jg
sub
sbb
clc
out
push
test
fmul
mov
outsb
cli
pop
das
sbb
mov
movsl
iret
pop
add
popf
push
jl
or
xor
mov
adc
out
and
dec
inc
les
in
hlt
pop
mov
call
cmp
add
add
mov
lret
mov
int3
mov
sub
daa
je
pop
popa
xchg
rcl
push
ret
std
in
repnz
ret
fs
and
enter
pop
negb
pop
out
ds
inc
les
sub
sub
cmp
ficompl
gs
cli
ret
in
insb
sti
mov
ret
xlat
loop
sbb
sbb
mov
rolb
inc
or
and
fld
mov
lcall
adc
add
arpl
push
jl
mov
xchg
pushf
add
push
fsubs
outsl
dec
push
or
cli
xchg
stos
daa
outsl
push
jecxz
clc
aas
insb
fcmovb
ret
je
jmp
cs
mov
cmpsl
sarb
xchg
adc
inc
movsl
in
and
ss
pushf
dec
mov
daa
sub
js
xor
sub
outsl
inc
repz
or
in
adc
add
xor
xlat
sub
push
and
and
adc
cs
jle
fsubrs
add
sub
imul
aas
or
repnz
lds
int
loope
xor
lods
gs
cld
in
movb
sub
cwtl
xchg
xchg
dec
mov
pop
rorb
add
lock
push
test
cltd
jbe
arpl
xchg
pushf
pop
repnz
ja
lds
insb
sbb
xor
or
cmc
mov
sub
test
pop
adc
jnp
mov
jl
or
add
add
ret
lret
jae
inc
pop
ret
icebp
inc
sbb
ret
add
or
push
xchg
addr16
dec
lahf
add
fadds
cmp
pusha
fs
adc
and
mov
lock
mov
pop
dec
pop
cmp
jbe
pop
mov
mov
xchg
cltd
sub
jb
sahf
dec
xor
pop
lret
shll
divb
fstl
pop
rorb
adc
xchg
dec
dec
flds
and
jp
out
jo
add
loope
rolb
fnstenv
xchg
stc
pop
enter
xor
xlat
lock
and
xchg
fstps
stos
lret
or
mov
fs
xchg
jmp
loope
fidivs
data16
mov
inc
dec
lea
lods
stos
or
xchg
cmp
insb
pop
adc
ja
dec
mov
fsubrp
popf
in
fsubs
outsl
in
xchg
pushf
les
cli
xlat
add
scas
jbe
mov
cmp
sub
js
fcomps
lret
lcall
mov
pop
or
xor
xchg
out
orl
bound
xor
push
dec
fidivrl
add
js
shll
mov
sub
divb
mov
ds
leave
dec
out
stos
push
call
pop
test
xchg
repz
out
setns
loop
cmp
xchg
stos
jbe
arpl
xor
mov
mov
push
icebp
pop
sub
mov
adc
test
cmp
add
inc
out
aas
xchg
and
mov
test
jne
out
psrld
pop
add
mov
stc
popa
movb
jmp
adc
pop
inc
cltd
mov
jecxz
mov
cltd
cs
jp
pinsrw
xor
push
rol
outsl
loope
sub
sub
fsubs
or
sbb
notl
push
nop
leave
mov
lods
and
cmp
ljmp
sub
scas
adc
add
test
out
ds
push
xchg
inc
lret
lret
aas
cmp
mov
cmp
pop
or
jne
in
or
lret
cmp
mov
out
shll
dec
and
rcr
add
fs
lcall
jp
push
lock
jo
pop
xchg
cmpsb
imul
adc
sub
das
lods
inc
adcl
xor
pop
xchg
cmpsb
xchg
pop
stos
xchg
add
cwtl
stc
jge
arpl
xchg
fimull
adcl
loope
gs
jnp
test
add
mov
dec
mov
cmpsb
adc
shr
std
or
adc
inc
adc
ljmp
adc
jns
jbe
push
out
dec
push
loop
inc
hlt
push
cs
sbb
fdecstp
mov
dec
or
cwtl
mov
fsts
shll
arpl
movsl
stos
xchg
mov
int
sub
cmp
add
cltd
mov
xor
lret
push
data16
nop
jl
es
push
ljmp
in
in
push
ds
leave
mov
mov
rcr
repz
insl
mov
outsl
lock
add
mov
inc
pop
sbb
push
xchg
ds
cmpsl
notb
loop
inc
hlt
fxch
dec
nop
push
in
and
push
mov
ljmp
mov
decb
stc
xor
sbb
lcall
mov
lods
adcb
scas
jp
and
mov
cli
imul
jge
jmp
push
jns
cli
pop
jnp
mov
pop
sbb
rolb
shrl
sub
les
mov
mov
cmpsb
mov
pop
sub
dec
xchg
movsl
mov
fldenv
insb
imul
push
and
mov
aad
std
mov
lea
mov
cli
pop
cmp
out
test
jns
mov
sbbl
adc
ficompl
das
into
adc
mov
xor
popf
and
fwait
enter
cmpsl
nopl
test
jecxz
jle
iret
stos
mov
jae
repnz
repnz
xorb
xor
jg
mov
jno
inc
xor
mov
cs
gs
jl
pop
mov
mov
jmp
pop
mov
bound
mov
cli
shll
pop
movsb
test
pmaddwd
mov
jg
or
push
inc
dec
and
sbb
xor
dec
mov
test
xchg
mov
rolb
add
sbb
pop
cmp
sti
add
movsl
or
into
push
enter
sbb
cmp
xor
push
sbb
sub
bnd
aaa
add
add
jns
sub
sub
fimull
jmp
jmp
mov
jo
mov
gs
push
rclb
cmp
lcall
adc
je
sti
cmc
mov
pop
je
xchg
pusha
xor
data16
push
icebp
ffreep
fisubrl
hlt
sub
sub
xchg
mov
scas
xchg
sbb
insl
or
out
stos
push
sub
fcomps
icebp
shll
jo
hlt
mov
push
mov
push
or
rclb
andb
jmp
push
cltd
into
lods
pop
cltd
adcl
dec
movsl
imul
aaa
dec
push
cmp
aad
and
jbe
and
or
dec
ss
stc
mov
pop
je
test
or
nop
popf
mov
rol
test
aas
fnstcw
sub
out
mov
fists
iret
xchg
adc
clc
stos
xor
out
into
arpl
orb
test
negl
and
pushf
aaa
in
dec
cld
and
add
pop
mov
mov
arpl
pop
mov
xor
lods
push
sahf
push
sub
fsubl
add
rorb
jge
inc
test
push
popa
clc
in
pop
cmp
pop
cmp
push
fistps
in
loop
or
xor
mov
mov
cli
nop
xor
shll
int3
js
loopne
push
dec
ja
xor
jbe
or
jp
cmp
jne
xor
xor
ljmp
add
ljmp
jnp
lods
stc
add
shll
ljmp
mov
aas
lods
in
int
test
fucom
mov
pop
popf
sbb
idivb
sub
ret
lea
aaa
jae
push
pop
xchg
fs
jbe
hlt
push
dec
clc
aad
push
ss
fldenv
adc
mov
dec
dec
pop
sti
xchg
ret
push
sub
mov
mov
rcl
mov
or
mov
and
jb
add
ja
popa
xchg
jbe
insb
leave
push
clc
fstpt
ret
test
cli
dec
add
jno
aam
pop
sbb
jle
out
push
jecxz
or
pusha
jae
imul
stos
pop
pop
call
mov
shll
add
fldl
dec
sbb
inc
or
les
pop
test
cmc
inc
sub
jno
imul
cld
push
jg
repnz
lods
rcrb
out
or
fsubrs
xchg
sub
sbb
cld
faddl
xchg
into
test
mov
idivl
and
vpackuswb
pop
cltd
sarl
mov
bound
add
movsl
mov
inc
sub
xor
mov
lds
lret
jmp
inc
adc
out
ljmp
dec
sbb
mov
enter
adc
ljmp
mov
push
hlt
icebp
mov
inc
jns
cmp
lahf
scas
ret
fnsave
sub
jle
jge
and
insb
xchg
fisubl
add
cmpsl
int3
in
jne
cltd
mov
je
lock
pop
je,pt
mov
arpl
and
add
pop
lea
dec
jbe
mov
pop
rolb
mov
mov
testl
negb
fstpt
or
jmp
or
cltd
cmp
inc
mov
pop
enter
sub
loope
repnz
add
sbb
mov
arpl
jne
push
pop
pop
sbb
mov
or
and
push
pop
dec
jo
pusha
out
xchg
xchg
clc
add
mov
and
cld
imul
sarl
aas
mov
mov
xor
andb
jl
push
aad
cmpsb
scas
ja
ja
xor
in
shrl
jecxz
test
fnstcw
jmp
mov
sub
outsb
in
movsl
mov
jecxz
mov
call
hlt
pusha
dec
cmp
mov
cmp
int3
shrl
fwait
jne
hlt
das
lea
das
sbb
inc
addr16
or
cmp
push
fwait
clc
insb
jae
and
and
das
lahf
jne
pop
mov
clc
jb
scas
jne
sub
mov
and
mov
call
inc
outsb
dec
dec
nop
mov
pop
out
imul
lods
sub
inc
cmpsb
xchg
push
mov
aad
jmp
mov
xor
sbbl
mov
in
mov
or
mov
fbstp
je
mov
test
mov
scas
push
cs
subb
xchg
shll
scas
hlt
xor
mov
movsb
mov
outsb
lret
shlb
mov
lods
mov
sti
mov
mov
imul
inc
mov
movsb
add
lods
or
sub
insb
push
mov
ljmp
sbb
xchg
into
jp
cmp
movsb
cmp
xlat
xchg
mov
dec
dec
loopne
sbb
xor
lret
aaa
adc
jbe
cmpl
push
fimull
fwait
mulb
stc
dec
outsb
gs
dec
shll
mov
fs
dec
hlt
cmpl
jb
cltd
pop
lret
scas
jne
ss
jp
out
push
in
push
sahf
in
lret
in
cmp
sbb
mov
mov
lret
or
adc
push
push
cmpl
lods
push
xchg
mov
push
adc
mov
dec
fsubrl
push
push
and
nop
addb
outsl
jecxz
jns
jns
test
jl
fs
mov
lret
fldln2
ja
in
movlps
nop
loop
sub
push
mov
in
movsl
jle
inc
sub
xchg
mov
pusha
shll
and
xchg
scas
and
dec
push
imul
xchg
jge
lock
xchg
sub
test
lds
pop
in
lcall
mov
mov
cmpsb
or
xchg
mov
ds
sbb
lret
sbb
mov
cld
jno
mov
ljmp
jbe
popa
or
xlat
and
mov
shll
movsl
loope
xor
cmpl
addb
repnz
cmp
mov
jecxz
bound
fistpll
shlb
pop
lods
or
pop
lahf
cmovns
testl
clc
mov
jp
push
push
stos
jno
pop
ret
fmuls
cmp
pusha
xchg
jb
out
adc
arpl
and
fistpl
test
mov
ss
and
insb
dec
aas
or
stc
test
pushf
dec
inc
nop
add
jg
addr16
push
xor
subl
call
sbb
imulb
clc
rcl
cmpsl
and
push
neg
lods
mov
lret
jmp
sub
repnz
cmp
add
sub
fcompl
lret
fcomp
orb
cwtl
cmc
pop
test
push
lcall
xorb
js
ficoms
inc
inc
push
push
mov
test
jecxz
xor
maxps
adc
sub
cwtl
dec
xchg
sub
stos
jg
or
enter
sbbl
scas
icebp
mov
testl
inc
push
cwtl
in
sub
aaa
ja,pn
sub
mov
sbb
adc
arpl
or
stos
push
repnz
mov
pop
fs
dec
sbb
jmp
or
icebp
and
fidivrs
pop
repnz
push
mov
inc
scas
mov
sbb
pushf
out
or
stc
shl
outsb
pushf
mov
jne
shll
arpl
movaps
inc
adc
xchg
push
inc
sbb
ljmp
jl
cmp
mov
and
lcall
in
aad
mov
push
les
push
push
leave
insl
leave
jmp
lret
sbb
arpl
add
repz
shll
fadds
out
repz
mov
mov
or
jne
xchg
fisttpll
ficomps
mov
iret
sbb
int
and
pop
imul
xor
and
fidivrs
mov
mov
and
cwtl
mov
mov
rorb
test
mov
adc
jne
jne
mov
xchg
outsb
in
movsb
add
push
stc
xchg
mov
int
negl
jbe
add
daa
int
adc
mov
push
cmp
jb
adcl
sarl
or
xchg
push
mov
fistpl
testb
inc
jge
insl
mov
movsl
push
cltd
jbe
jns
faddp
xchg
adc
adc
and
std
sar
and
xor
cmpb
xchg
adc
cmp
lock
fidivrs
add
dec
jno
push
movsb
ljmp
outsl
cmp
mov
lcall
movsb
cli
mov
icebp
dec
ret
pop
push
dec
or
scas
mov
ljmp
push
pop
outsl
jmp
xor
lea
repz
lret
cmp
in
inc
cli
push
orl
jecxz
stos
insl
mov
dec
mov
jle
push
sbb
outsb
mov
movsb
adc
jp
scas
jns
jnp
add
inc
adc
loopne
cmp
cwtl
push
xchg
arpl
divl
fstl
lods
mov
jb
bound
fucomp
and
mov
pop
daa
sbb
or
icebp
dec
adcl
bound
ret
imull
inc
sbb
inc
mov
ljmp
jl
push
jbe
fsub
lds
mov
xor
dec
dec
push
cmpl
push
or
sbb
lret
test
gs
inc
call
or
xlat
iret
sub
mov
mov
notl
add
cli
push
inc
xor
imul
cltd
xor
push
mov
cmpsb
repz
cld
stos
lcall
xor
sub
cmp
jmp
lcall
js
jns
es
fcmovnu
mov
int3
adc
daa
fsubl
frstor
xorl
adc
xor
data16
sahf
sub
push
adc
jl
jne
in
mov
mov
loopne
sub
xor
repz
inc
aad
repnz
clc
mov
decb
sbb
sub
pop
or
stos
xchg
adc
pop
test
mov
pop
push
fistpll
xor
movsl
xor
call
mov
orb
rcr
sarl
sub
ss
add
add
xor
aad
pop
jo
jo
jae
cmc
in
fldenv
movsb
xchg
shrl
pop
cmpl
mov
fadds
shl
dec
das
pushf
and
pop
mov
orb
pop
pusha
inc
gs
mov
xor
cmp
pop
mov
les
mov
out
mov
cmp
or
mov
mov
pop
jae
out
mov
sbb
add
xchg
roll
ds
insl
mov
adc
pop
fs
pop
adc
in
imul
and
sbbl
movsl
xchg
lods
sbb
xchg
and
mov
dec
ja
jp
dec
lcall
xchg
sarl
cmc
jmp
add
cmpsl
mov
int
xchg
mov
test
sbbb
xchg
push
frstor
neg
fcmovnb
push
xchg
ret
adc
xor
sub
roll
mov
jecxz
inc
push
adcb
bound
mull
aas
mov
jo
rorl
stos
inc
or
lret
shlb
push
inc
mov
sbb
and
adc
cmp
mov
stos
push
movsl
cmp
push
pop
cmp
pusha
push
ljmp
lea
cmpsl
inc
stc
xchg
pop
or
fdivrs
mov
jno
loopne
fwait
lds
mov
adc
jae
cli
inc
inc
jl
icebp
sbb
jmp
call
jno
les
add
outsb
aam
mov
sub
pushf
xor
pop
push
fdivl
pop
je
pop
jp
adc
xor
mov
adc
sbbb
push
sub
shl
adc
icebp
iret
adc
stos
out
pop
fsubp
push
daa
mov
xchg
xchg
pushf
data16
mov
bound
adc
pusha
sbb
pop
add
scas
stos
cmp
aas
lcall
in
ljmp
repnz
scas
push
mov
in
xchg
pop
loope
sahf
ja
mov
inc
mov
outsl
jae
fldcw
dec
cltd
pushf
sbb
xor
mov
xchg
clc
pop
aad
lret
jle
iret
cmpsl
xchg
push
push
jge
aam
imul
sbb
ret
jae
cmp
pusha
imul
mov
cmp
out
xchg
cltd
mov
mov
sub
rolb
adc
and
lods
and
push
insl
jge
sub
addr16
je
dec
repz
test
xchg
jbe
dec
lods
in
shrl
movsl
inc
and
hlt
sub
mov
ljmp
add
push
movsb
mov
dec
cmpsb
cmp
in
cmp
and
and
jle
nop
jns
in
cmc
inc
sbb
add
out
jae
push
xchg
enter
out
loope
cmp
adc
icebp
pop
add
ret
mov
jmp
nop
xchg
movsl
sbb
fsubs
sahf
sbb
mov
inc
fisttps
jnp
enter
xchg
cmpsl
in
lret
stos
mov
test
add
pusha
xor
push
pop
push
mov
lret
jmp
mov
mov
out
cmp
fiaddl
push
push
mov
pop
push
call
inc
pop
sub
inc
sub
ror
mov
int
pop
loopne
mov
jb
jmp
mov
push
cmpsb
outsl
sub
mov
mov
jecxz
mov
inc
dec
nop
lret
addr16
cmp
mov
mov
mov
cmpsl
nop
nop
das
lods
or
shlb
int3
mov
incb
lcall
movaps
mov
ret
or
xor
dec
pusha
mov
mov
sub
es
dec
lcall
mov
xor
cmpl
push
das
or
mov
lret
sbb
mov
adcl
pop
mov
sarb
mov
das
ja
leave
sbb
pop
push
orb
aad
in
dec
and
mov
mov
scas
push
inc
mov
cmc
lret
adc
fdivs
add
sti
hlt
or
hlt
ficomps
inc
mull
int
jnp
adc
loop
stos
pop
inc
aad
dec
ja
movsb
fiadds
sbb
cmpsb
sub
lods
cmp
out
movsb
xchg
pop
pushf
jge
ucomiss
add
xchg
pop
imul
mov
xchg
aam
xor
jbe
addl
inc
outsb
sub
cli
aas
pop
popf
cwtl
insb
inc
outsb
frstor
pushf
faddl
xor
adc
sar
fidivrl
mov
mov
push
rclb
push
push
fisttpll
mulb
lret
inc
mov
mov
cmc
into
cwtl
cs
hlt
sbb
fwait
cld
repz
fistl
iret
pop
sbb
cli
loopne
in
roll
xchg
ds
repz
cmpb
cs
das
cld
in
and
rcr
faddl
jecxz
push
icebp
movsb
mov
pop
lds
adc
pop
and
sarb
or
sub
data16
testl
pop
out
movsb
inc
js
mov
and
add
enter
mov
sub
jbe
or
inc
mov
lods
jne
ret
negb
adc
mov
sub
imul
add
add
dec
mov
add
out
mov
xor
push
adc
jl
aam
ljmp
adc
xchg
cld
sbb
cmp
in
fwait
xchg
lret
lock
test
lret
jbe
xor
mov
pop
and
jbe
and
dec
movsl
jns
xchg
es
lds
loopne
push
ficompl
pusha
xchg
fdiv
sub
addr16
cmp
sub
pop
pushf
jns
dec
je
and
jbe
daa
jge
sbbl
leave
mov
sbb
jecxz
sbb
bound
mov
pop
fwait
push
mov
push
push
in
push
mov
lahf
mov
mov
lahf
mov
rclb
jge
lds
add
test
stos
lea
fwait
sbb
rcl
sahf
cli
nop
and
pop
sahf
or
cwtl
mov
cmpl
push
loop
shll
test
xchg
add
inc
test
lcall
sti
in
xchg
jge
jne
fists
arpl
pop
outsl
jg
and
icebp
jecxz
test
std
into
xchg
xchg
mov
jo
pushf
mov
sub
popa
insl
gs
sahf
out
xor
stc
shrl
fsubrs
mov
jns
test
gs
xchg
dec
push
add
in
int3
sub
add
push
dec
xlat
sub
andl
dec
sub
aad
into
dec
dec
adc
sbb
adc
fidivrs
mov
mov
pop
dec
addr16
out
call
xchg
xchg
pop
movsl
inc
jne
cmp
mov
ds
in
imul
movsl
add
stos
cltd
sti
inc
outsl
push
sub
pop
push
cmpsb
xchg
jo
loop
aam
out
mov
ret
mov
test
mul
inc
push
jbe
dec
loop
ja
xor
sbb
jno
cmp
fidivl
jmp
loopne
iret
pop
cli
sbb
aas
in
xchg
movb
mov
loope
push
fstps
outsl
or
mov
sub
cmp
add
sbb
push
ret
insb
es
and
xchg
or
das
pop
cmp
push
inc
loop
dec
pop
ss
scas
insl
scas
inc
xchg
mov
and
aam
xchg
push
ficomps
cmc
sub
mov
arpl
pop
and
dec
movb
push
or
repz
sti
data16
ja
cltd
clc
inc
mov
inc
movsb
adc
jge
roll
mov
cmp
and
push
mov
pop
inc
nop
arpl
jle
cmp
mov
and
add
in
adc
je
out
jb
fistpl
push
stc
and
lret
rcrb
push
mov
or
fcmovnbe
dec
xor
cltd
cmp
or
mov
into
stc
dec
push
iret
push
shrl
cmp
add
insl
pop
xchg
fidivl
push
std
bound
dec
shll
inc
sub
mov
mov
divl
sbb
loopne
adc
fcmovnbe
subb
lods
mov
sub
addl
popa
mov
mov
lock
std
mov
inc
iret
pop
mov
sbb
out
fdiv
mov
dec
inc
int3
test
and
test
ret
sbb
bound
cmc
pop
push
pop
testb
cmpsb
pusha
xchg
jecxz
lahf
sbb
inc
fsub
cmpsl
add
popf
xorl
pop
xlat
jmp
bound
sub
add
movsb
inc
mov
adc
and
lahf
cmpb
fimull
enter
outsb
fistpll
ret
scas
int
ss
es
daa
hlt
shll
mov
test
and
cmp
out
dec
stos
out
push
mov
stc
fists
pop
jmp
mov
dec
outsb
daa
movsb
outsb
adc
push
or
cmpsb
push
sbb
lahf
xor
fiaddl
add
in
frstor
sti
das
lret
add
pop
lds
push
push
and
les
inc
mov
jne
pop
mov
add
jno
fstl
mov
aam
aad
pop
mov
fldl
andl
jp
mov
push
mov
repnz
mov
mov
das
fisttpl
mov
inc
dec
add
out
adc
inc
push
fwait
jle
ret
loop
stc
shlb
mov
sbb
xor
mov
push
inc
push
fs
arpl
out
mov
sub
and
fcomip
and
dec
fwait
jb
subb
shrb
fwait
ret
orl
inc
mov
sbb
pusha
in
xchg
aas
mov
jp
or
stos
imul
push
pop
inc
mov
mov
sbb
adc
popf
faddl
xlat
dec
fstpt
std
adcl
inc
mov
sub
pop
push
sub
add
nop
mov
mov
jno
ficoms
movzbl
mov
or
insb
add
inc
push
loopne
stos
push
cs
cmp
mov
cmp
jno
add
stos
or
mov
push
or
adc
cltd
pop
cmp
pop
cmp
insl
xor
leave
pop
int
sahf
out
mov
push
inc
inc
shlb
dec
mov
jl
test
rcll
mov
push
shlb
mov
sbb
test
or
repnz
xchg
pop
repnz
ljmp
enter
leave
aad
movq
sbbb
push
mov
bound
inc
inc
inc
nop
test
xchg
aas
lahf
insl
call
cmp
mov
push
pop
mov
sbb
cmp
push
push
imul
mov
mov
jbe
cmp
push
cmpb
mov
sbb
jg
xchg
push
xchg
fwait
out
fdivrp
enter
push
inc
xor
and
cld
mov
xor
mov
xchg
sti
jl
inc
xchg
sbb
cmc
icebp
xchg
ljmp
call
fsubrs
aad
xor
jnp
jno
andl
loope
mov
lods
push
ja
jno
jae
cmp
imul
jb
pop
std
out
xchg
xor
mov
shlb
jo
bound
stc
in
inc
inc
movsb
gs
sbb
lcall
repnz
jne
mov
out
jae
sub
rclb
sahf
cmpsl
int
addr16
lcall
and
insb
imul
out
mov
dec
adc
rcll
adc
in
repz
sub
xor
popf
add
mov
aas
or
jl
adc
inc
js
fidivrl
or
push
gs
inc
daa
dec
stc
push
jl
cli
fnsave
lods
loop
add
mov
push
imul
lds
add
jno
fcomip
lret
div
addr16
mov
lods
inc
mov
cwtl
lds
fdivs
mov
xchg
xor
xchg
jp
cmpsb
sti
jmp
aas
loop
and
push
mov
les
mov
mov
xchg
mov
cltd
rcrb
mov
pop
loopne
pop
test
mov
push
mov
sbb
cmp
addr16
decb
scas
mov
int
push
sub
repz
insl
sbb
xchg
lret
sbb
int
jbe
cmpsb
stos
cmp
divb
aad
sbb
jge
add
or
int
into
popf
inc
sub
mov
mov
cmp
out
aam
sahf
notb
inc
mov
inc
les
push
test
ds
clc
stos
outsb
xlat
jecxz
or
jge
xchg
and
add
repz
rcr
jae
pushf
rcl
ret
inc
or
dec
sub
fucomi
inc
stc
dec
sbb
or
pop
push
xchg
insl
or
stos
dec
ret
jno
fisubs
ja
mov
and
dec
adc
loope
push
mov
and
xchg
dec
push
dec
loope
push
sarb
scas
xchg
lret
add
sub
sbb
inc
jl
pop
fstps
popa
xor
mov
dec
cmc
js
fsubs
jmp
rorb
scas
xchg
sbb
or
cmp
dec
ja
pop
sti
out
pop
xor
mov
fidivrs
jl
mov
leave
sahf
ret
cmp
xchg
aas
nop
xor
pop
adc
pusha
push
cmc
and
mov
dec
ljmp
pop
nop
jecxz
daa
cmp
roll
lea
out
bound
push
test
and
jg
xchg
mov
ret
ljmp
jg
fstpt
filds
ja
jp
and
adc
dec
addb
outsb
add
sub
gs
loopne
stos
fbld
scas
inc
mov
ds
dec
inc
mov
add
mov
mov
xchg
lock
mov
xor
popa
jns
pop
xor
daa
fsubrl
mov
fsubrs
xorl
fsubl
push
adc
and
xor
push
pop
add
xchg
fs
cmp
aad
cli
and
or
fwait
popl
repz
filds
sub
cmpsl
or
cmc
adc
shll
fidivl
insb
sub
xchg
dec
dec
stc
or
jo
and
shll
or
mov
pop
out
int3
test
daa
xchg
mov
cmp
add
xchg
mov
jl
nop
sbb
shlb
jl
push
adc
inc
inc
push
rcr
loopne
cmp
push
sbb
mov
sub
mov
rcll
ljmp
mov
call
cltd
xchg
inc
movsl
adc
dec
sub
cld
test
jge
pop
sub
into
mov
popa
or
cmp
test
rcr
insb
and
sub
jge
or
cmp
les
pop
push
push
sbb
pop
adc
or
arpl
sbb
dec
xchg
inc
ficompl
sti
add
push
sbb
mov
pop
pop
xor
out
pop
in
xchg
add
shll
into
stos
pusha
sbb
aam
ror
mov
xchg
xor
jmp
inc
arpl
push
mov
mov
ficoms
insl
aad
jbe
push
cmp
iret
inc
sub
sub
enter
sub
loope
push
jb
sub
dec
enter
das
outsl
mov
add
xor
mov
mov
movl
push
jne
leave
cmp
test
int3
repz
mov
add
inc
cmpsl
jmp
test
ljmp
jmp
or
out
mov
ss
xchg
data16
mov
push
mov
insb
push
xor
mov
ds
mov
out
mov
les
add
pop
dec
sub
addr16
pop
jo
jecxz
push
addr16
data16
pop
imul
lea
adc
jp
aas
cmpsb
addr16
fsts
mov
jl
aam
sahf
lret
outsl
and
xor
fidivs
bound
dec
push
repnz
out
clc
sbb
pop
push
aam
addb
xchg
out
aas
imul
mov
inc
and
cmp
das
xchg
mov
dec
xor
xor
mov
push
icebp
fildl
sbb
xchg
outsb
dec
iret
sbb
sbb
arpl
xor
jge
mov
enter
and
sub
adc
mov
mov
dec
sub
fwait
outsb
roll
jne
cld
sub
sbb
subl
test
lret
jge
push
or
int3
jb
mov
dec
dec
sahf
adc
sbb
das
insl
cmp
xchg
mov
jb
shrl
cmp
imul
dec
cmp
xchg
push
push
cmpsl
nop
cmp
sbb
mov
iret
ficoms
and
push
fnstenv
inc
mov
shrb
adc
inc
es
xchg
fs
in
push
mov
stos
mov
dec
cmp
rorl
shlb
adc
mov
jp
pushf
jecxz
pop
mov
push
adc
mov
xchg
adc
lcall
sarl
cmp
mov
sbb
and
push
jne
jg
mov
xchg
adc
cmp
and
mov
hlt
push
mov
ds
test
in
xchg
sbb
xor
pop
and
mov
in
je
push
aas
pop
mov
ljmp
dec
pushf
aam
iret
gs
repz
popf
dec
and
mov
jne
cmp
clc
xchg
jg
dec
xor
ret
cmc
push
sbb
mov
mov
mov
cmp
dec
imul
fcom
cmp
mov
imul
mov
out
mov
ficoms
mov
jb
jne
jle
ss
adc
cwtl
in
add
jg
inc
pop
rcrb
adc
push
jbe
and
lret
xchg
xchg
inc
mov
or
xchg
in
cwtl
jmp
scas
mov
mov
add
jecxz
stos
push
mov
into
cwtl
and
testb
ret
jl
lahf
and
and
lds
shll
jnp
outsl
cs
push
clc
fstp
mov
leave
or
dec
insb
bound
fwait
ds
test
std
aas
push
loopne
pushf
add
iret
mov
adc
insb
ficoml
inc
lahf
inc
adc
pusha
xor
sub
xor
lea
cmpb
and
es
cwtl
mov
adc
mov
xlat
in
popa
adc
adcb
sarl
push
sbb
imul
shrb
pop
pusha
test
adc
jbe
push
addb
push
jo
pop
aam
mov
fwait
xchg
adc
push
test
fadds
jg
testl
cmp
bound
xchg
jp
xchg
mov
dec
adc
shl
and
ss
xor
xchg
mov
lock
pop
sbb
xor
and
push
jno
lods
lret
mov
mulb
mov
inc
pop
faddl
cmc
cmp
pushf
out
loopne
jb
test
mov
add
jns
stos
pop
std
outsl
loop
mov
in
imul
xor
popf
idivl
ja
and
or
ljmp
dec
jo
mov
push
aas
cli
add
adc
xchg
adc
bound
mov
mov
jae
rcrl
jg
nop
hlt
repz
iret
inc
jne
xlat
out
xorb
pop
mov
inc
mov
repz
push
xor
aas
lahf
sahf
mov
nop
jecxz
jnp
out
xchg
rorl
adc
fmul
aam
jae
mov
test
movb
mov
fistps
insb
dec
call
jp
adc
aad
xor
inc
sahf
scas
shrb
sbb
push
pushf
fdivrp
or
jns
inc
sbb
sbb
dec
cmp
add
mov
xchg
add
mov
adc
lret
dec
fstl
xor
stos
fiaddl
pop
xchg
jg
ds
test
das
push
dec
mov
jmp
jns
pop
out
out
pop
cmpsl
call
sub
fwait
mov
dec
in
inc
je
push
sbb
lds
icebp
popf
cmpl
movsb
movsl
or
in
add
pop
pop
push
dec
inc
pushf
std
adc
aad
mov
inc
inc
adc
mov
mov
iret
stos
or
sub
mov
dec
roll
cmp
repz
mov
nop
sbb
cmpsb
or
sti
jb
pop
test
xor
inc
outsl
or
dec
xchg
xor
aas
inc
pop
rcrl
sbb
pop
add
arpl
dec
mov
testl
adc
hlt
rcr
xor
fidivrl
mov
and
pushl
fidivs
cmpb
or
lcall
fsubl
sbb
test
mov
inc
rcrl
pushf
ret
push
cmp
call
lods
cmpsl
and
sub
les
fwait
add
out
mov
mov
xor
in
in
lret
xor
movsb
aam
push
fucomip
jmp
sbb
loopne
jg
es
ljmp
cltd
mov
mov
orl
aas
xchg
fs
fdivs
divb
pop
not
push
sbb
ss
fs
mov
sbb
iret
sub
push
inc
movsl
pop
ss
je
idivl
outsb
js
sub
and
push
rcrl
adc
xchg
std
adc
sub
insb
pop
fistpll
push
xchg
aaa
pop
jp
push
jecxz
in
in
mov
stos
fidivrs
fwait
mov
hlt
clc
cmp
mov
movsb
inc
and
mov
stos
add
pmaddwd
jmp
pop
jno
cmp
xchg
insl
fsub
dec
es
outsb
pop
out
pop
or
stc
inc
jne
pop
gs
mov
pop
push
jo
stos
add
xlat
jnp
inc
out
gs
push
cli
mov
test
fdivr
ror
shl
mov
lcall
loop
sbbb
lcall
pop
outsb
pushf
fmulp
jg
notl
push
roll
inc
and
jnp
xor
into
arpl
imull
xor
mov
xor
mov
mov
lods
mov
test
fnstsw
data16
les
test
xchg
int
inc
xchg
mov
inc
retw
jno
sarl
xlat
xchg
cmp
clc
cli
lea
adc
fldenv
push
xor
push
xor
or
xchg
xchg
push
testb
in
push
add
mov
rcr
pushf
adc
jb
sbb
enter
test
or
push
jae
ds
sbb
cmp
cmp
insb
pop
mov
rcr
dec
pop
or
mov
in
and
in
xchg
mov
mov
shrl
mov
mov
xor
fistl
cmpsl
gs
ficoms
iret
dec
das
ja
push
jl
addr16
testb
stos
lods
xchg
popf
aas
add
push
sarb
xor
cmpsl
xor
dec
daa
sbb
jae
scas
mov
shll
pop
cmpsb
leave
enter
inc
lret
mov
add
mov
mov
ret
sbb
gs
daa
xor
cmp
enter
or
sbb
inc
cmp
mov
lea
cmp
pop
test
jne
cmp
in
iret
es
inc
scas
cmp
xchg
jo
mov
mov
mov
lret
rcrb
add
cmc
add
into
vfmaddpd
xchg
add
push
cmp
jge
jb
cmp
ljmp
testl
push
mov
lcall
pop
icebp
filds
test
push
inc
cld
std
xor
dec
and
les
push
fcom
sub
lea
inc
pop
inc
dec
dec
dec
test
or
mov
sub
push
xchg
aad
push
test
jno
fsubrl
push
fwait
dec
shl
fnstcw
arpl
sbb
mov
es
sub
and
sbb
aam
fucomip
push
lahf
rorb
dec
outsl
ret
in
outsl
or
stos
or
enter
cmp
sbb
mov
xchg
sti
adc
push
or
pop
xchg
dec
jl
es
mov
inc
adc
mov
sub
das
arpl
arpl
stos
ficoml
and
jle
stc
mov
xchg
pop
cwtl
pop
inc
mov
add
std
in
mov
xchg
and
dec
sub
or
pop
pop
pop
pop
fimull
leave
push
enter
inc
jo
pushl
cmp
aaa
sahf
into
cmpl
xchg
mov
pop
adc
sub
pop
push
and
lods
adc
out
adc
pop
shl
ret
clc
mov
mov
and
stc
lock
nop
jne
jno
adc
inc
push
loope
push
mov
es
inc
mov
push
rolb
mov
sbbl
sub
pop
cmp
pop
in
fnstcw
push
cmpsl
xor
in
sbb
adcb
cmp
add
int3
jecxz
lds
fwait
in
stos
dec
dec
imul
and
popf
sub
sub
lea
and
ljmp
cli
push
test
and
sbbl
fstpl
insb
int
xchg
adc
add
test
divb
dec
ret
mov
mov
outsl
pop
xlat
mov
pop
jns
jne
jl
ret
test
cmpl
xchg
inc
and
loope
pop
test
pop
push
push
mov
cmc
push
in
into
cmpsb
testl
outsl
sar
out
lcall
gs
jg
fidivrs
cmp
loop
imul
aaa
pop
ja
sub
pushf
into
shll
xor
rolb
lcall
daa
lret
sub
arpl
iret
cmp
fisttpll
pop
push
xor
test
ret
fidivrs
inc
sbb
loop
inc
es
add
sbb
sub
cmpsl
mov
mov
add
insb
xchg
pop
pop
idivl
cmp
mov
sbb
jno
lds
inc
jg
in
jns
push
pop
xchg
lret
xchg
cltd
ds
or
pop
icebp
int3
addr16
sub
xlat
iret
insb
in
outsb
inc
mov
xor
mov
out
and
and
jecxz
dec
jne
add
mov
and
insl
insl
mov
mov
jo
inc
push
mov
aaa
ret
movsb
aaa
push
in
fisubrl
jmp
gs
ds
frstor
enter
cmp
sbb
sub
lods
jmp
decl
lea
mov
lcall
loope
push
push
cmp
dec
movsb
pop
cmp
insb
mov
fwait
mov
das
shlb
inc
adc
cmpsl
or
push
hlt
rcll
xor
cmp
popf
in
icebp
mov
inc
inc
sti
call
adc
sbb
dec
outsl
jae
jbe
std
pop
ss
clc
aas
cmp
mov
pop
scas
push
mov
mov
mov
test
mov
push
test
jge
mov
testb
lret
pop
mov
jl
xor
data16
or
sbb
lods
adc
sbb
mov
in
sbb
jb
pop
and
mov
pop
adc
scas
cld
int
stos
fisttpl
loop
cmp
mov
xor
out
or
out
out
mov
out
daa
pop
call
push
clc
cmp
cwtl
cmp
jno
fisttpll
dec
adc
cmp
mov
xlat
fstpt
xchg
cmp
mov
lcall
pop
xchg
lret
xor
cld
dec
cmpsb
hlt
outsb
push
mov
das
mov
dec
sarl
cltd
dec
pop
pusha
int
dec
jle
divb
les
scas
xchg
or
jp
dec
mov
cmp
fcomip
xchg
push
test
inc
in
mov
cmpb
cmp
mov
mov
inc
negb
mov
outsb
mov
xchg
or
int
bound
adc
xor
dec
orl
out
lock
cmp
leave
lods
add
dec
and
aad
ds
jno
lock
pop
shll
sbbl
cmp
cmp
mov
xor
mov
cmpb
or
bound
repz
sub
mov
stos
lock
shrb
bound
out
push
add
and
push
cmpl
movsb
sbb
sbb
scas
inc
jmp
mov
mov
fsubr
shrb
xor
pop
push
leave
sti
dec
jno
sub
cmp
jbe
dec
outsl
popa
push
push
orb
orl
push
test
movsb
js
repnz
sbb
loop
mov
icebp
xchg
jmp
mov
inc
sbb
jl
mov
mov
dec
in
fxam
repz
loop
test
jns
loop
pusha
lret
sti
daa
into
xor
ss
xor
inc
sahf
into
cmpb
fiadds
xchg
stc
push
jmp
bsr
sub
leave
in
xchg
mov
or
mov
lcall
inc
push
and
es
pop
pop
jl
cld
int3
cld
sub
in
cmp
test
aas
add
jns
test
lods
mov
jns
adc
ds
adc
push
popa
lock
sub
xor
cmpsb
jmp
jecxz
jmp
prefetch
or
jecxz
repnz
sub
pop
xchg
lret
mov
pop
sbb
push
push
jmp
loopne
cld
xchg
rclb
or
dec
daa
pusha
mov
dec
add
sub
bound
push
psrld
xchg
cltd
ret
mov
lcall
mov
psraw
imul
popf
dec
in
push
sub
std
shl
out
sbb
sub
and
gs
gs
cltd
push
out
enter
mov
call
mov
pushf
cmc
incb
mov
xchg
cmp
mov
pop
inc
xchg
inc
pop
daa
cmp
xor
push
roll
mov
dec
pushf
xlat
cld
sbb
adc
adc
sbb
stc
dec
xor
ficomps
mov
xor
mov
xchg
daa
arpl
adc
inc
repnz
lds
pushf
add
jnp
adc
lds
call
mov
pushl
sahf
pop
mov
inc
cmp
inc
ret
orl
push
mov
and
mov
cli
sub
jnp
insl
pop
dec
into
ds
mov
push
xor
dec
push
mov
adc
lret
leave
sbb
fdivrp
dec
test
push
mov
jge
ds
jge
in
jae
mov
gs
in
aas
cs
sub
rorl
es
rclb
movl
xchg
mov
xor
add
mov
divl
ret
arpl
cmc
fwait
xorl
or
insb
adc
mov
clc
in
outsb
dec
repnz
mov
push
rclb
out
call
fwait
iret
test
fs
jmp
sub
ljmp
push
or
adc
push
subl
data16
mov
add
fistps
fcoml
mov
mov
cli
mov
mov
lret
push
cmp
xor
ret
mov
cwtl
dec
dec
mov
sub
lea
sbb
cmp
push
std
dec
iret
sbb
fisubl
inc
xchg
sub
push
outsl
push
mov
jnp
adc
mov
sbbl
push
and
pop
xlat
adc
pop
out
pop
and
push
popf
adc
xor
jbe
mov
pop
jmp
sub
pop
addr16
add
loop
sbb
gs
jge
cltd
sub
dec
push
aas
dec
add
or
add
push
popa
sbb
sbb
mov
adc
cwtl
xorb
sub
jg
dec
out
push
and
mov
out
or
jg
cmp
es
mov
out
push
popf
cmc
stos
push
xor
fsubr
ss
popf
in
scas
sub
mov
in
xchg
cmp
inc
adc
jno
cmp
xchg
pushf
xchg
ror
dec
es
aas
xor
lret
sarb
aaa
jl
dec
mov
sbb
shll
loop
icebp
sub
stos
cwtl
mov
pop
adc
mov
jle
jo
cld
cld
dec
push
and
pop
popa
mov
int
jl
int3
movsb
mov
inc
leave
test
test
loop
popa
into
cmovno
mov
aaa
xor
or
add
popf
es
jp
dec
sbb
ljmp
mov
outsb
xchg
fwait
imul
mov
lods
fbstp
mov
rol
and
nop
ret
in
sub
xchg
lock
mov
roll
andb
pop
imul
movb
sub
xchg
jo
push
add
pop
sub
pop
cltd
stos
mov
cmp
sti
fucomp
lret
or
repnz
rol
repnz
and
call
jns
rcll
and
xor
out
mov
jno
jb
adc
js
cmpl
dec
mov
mov
or
mov
mov
bound
sahf
in
mov
dec
pop
push
outsl
je
mov
jne
sbb
and
inc
iret
test
adc
jno
xor
xchg
jo
xor
std
mov
pop
jo
mov
dec
xchg
in
adc
ja
ret
mov
incb
push
sub
mov
mov
je
adc
fwait
cltd
sahf
test
int
std
test
inc
push
out
call
xorl
xor
lret
xchg
mov
imul
imul
pop
ret
adcb
imul
xchg
pop
mov
sub
stos
sub
das
inc
adc
ror
jp
lret
call
cmp
stos
jge
imul
loop
daa
jnp
and
push
xchg
pop
fbld
imull
mov
mov
bound
and
pop
cmp
les
or
jle
fisubl
loop
loop
xchg
jmp
shl
mov
dec
add
or
fistpl
iret
sbb
jo
xchg
ja
or
cmp
idiv
out
push
sahf
dec
push
cmc
sahf
pop
repnz
int
cmp
rorb
loopne
in
adc
sbb
jge
fwait
in
inc
jb
lcall
sub
pop
cli
fs
out
push
rcrl
push
sbb
iret
adc
dec
sub
lret
push
movzwl
adcb
mov
xchg
je
inc
cmpsl
inc
dec
cmpsb
add
cld
lret
outsb
sub
lret
cmpsl
fwait
inc
ljmp
or
xchg
dec
push
iret
cmpsb
test
nopl
mov
mov
jge
mov
in
test
jle
imul
jge
in
fstpl
pop
in
js
aad
repnz
sub
inc
ss
cwtl
fsubrs
sar
dec
scas
cmp
aam
xor
subps
fimuls
into
cmp
repnz
lret
mov
xchg
pop
fadd
aam
nop
lret
sbb
in
sti
xchg
add
push
cmp
inc
pusha
lock
addr16
sbb
hlt
mov
in
jbe
dec
sub
inc
sbb
fisubs
mov
adcl
sub
xchg
data16
aam
mov
mov
cmp
lahf
in
lds
int
cmp
pop
inc
or
loop
push
push
xchg
xchg
xchg
aaa
xor
sbb
aad
cmp
addr16
or
mov
jns
xchg
fsubrl
push
and
sbb
and
adc
out
mov
pop
xor
and
ret
lods
std
inc
and
mov
mov
xlat
daa
gs
scas
es
dec
pop
test
mov
sti
push
push
pop
popf
ds
insb
jge
nop
dec
xchg
pop
sbb
ss
add
xor
adc
xchg
ss
into
or
or
push
push
jecxz
inc
pop
arpl
xchg
mov
adc
data16
adc
jae
mov
and
mov
outsb
es
adc
cmp
mov
pop
mov
xor
cld
inc
cmpsb
shll
js
mov
jp
cli
fiaddl
push
pusha
mov
daa
pop
xchg
dec
mov
insb
arpl
mov
mov
xchg
test
ss
test
es
ja
loope
roll
out
outsl
loope
push
pop
stos
mov
sbb
push
jmp
add
jo
syscall
xchg
ja
sbb
imul
lea
movsb
pop
pop
mov
push
push
sub
movsl
mov
fs
sub
adc
xor
mov
rol
rclb
enter
mov
popl
ja
in
fsubp
int
mov
xor
jl
sbb
or
and
outsl
xlat
int3
pop
das
loopne
dec
popf
xchg
inc
mov
das
xor
cld
arpl
sbb
in
out
jecxz
push
and
dec
pop
lods
inc
sub
mov
or
dec
jne
daa
sbb
pop
mov
push
inc
mov
mov
mov
lods
nop
pop
movsl
lock
push
das
lea
inc
int3
out
mov
pop
clc
pop
in
pop
repz
stc
mov
insl
lock
lret
ss
or
pop
inc
push
and
and
sbb
pop
add
pop
add
push
inc
sbb
mov
or
lds
iret
mov
outsb
push
ljmp
push
and
or
jle
int3
scas
cmc
xlat
sbb
ljmp
jae
into
mov
push
dec
mov
and
ljmp
jns
and
cmp
fists
inc
int3
jbe
inc
and
push
jbe
inc
fs
clc
je
push
cmc
ret
mov
add
push
iret
lea
sub
mov
pushf
arpl
mov
fs
pop
mov
aaa
xor
out
addr16
xchg
mov
push
pop
repnz
roll
push
int3
insl
dec
push
sbb
subb
xlat
clc
insl
call
loop
fistps
jae
aaa
sarb
shl
xchg
mov
fidivl
stos
test
add
adc
sbb
int3
movsl
push
mov
out
ljmp
mov
xlat
or
xchg
pop
xor
frstor
fsubrs
loope
pop
aaa
rcll
dec
cmp
notb
pop
mov
push
or
jne
cmp
xor
scas
mov
mov
iret
leave
repnz
push
mov
dec
mov
push
in
lret
std
dec
mov
leave
enter
fmull
pop
fdivl
out
jecxz
adc
ljmp
jbe
call
add
lahf
inc
shll
mov
call
out
dec
add
cli
and
in
mov
mov
jmp
mov
push
fldcw
jle
cmp
cmp
xor
and
adc
cmp
fldt
or
daa
or
dec
xor
sarl
xchg
or
addr16
jge
cmp
or
lods
jo
idiv
std
dec
dec
cmp
push
push
imul
push
and
cwtl
scas
inc
push
adc
out
xor
fsts
push
int
dec
shlb
fwait
lea
push
je
enter
ret
inc
loopne
leave
pop
lods
xchg
push
fcomp
push
int3
mov
notl
xor
mov
and
push
jae
mov
shlb
fdivr
daa
mov
xchg
popa
pop
mov
std
fistpl
das
or
insl
je
popf
sahf
inc
add
aad
fnstcw
clc
inc
jecxz
adc
scas
cli
insb
sub
and
fsts
inc
jae
add
lea
cmpsl
out
mov
popf
out
pop
add
pop
mov
insl
mov
jno
lcall
add
inc
push
cmp
mov
cmpsl
xchg
adc
adc
adc
xchg
mov
rclb
sbb
int
inc
add
rolb
insb
es
mov
adc
test
dec
divl
add
lcall
mov
subl
ljmp
ret
mov
loop
jle
xchg
and
push
adc
repz
popa
adc
sub
lcall
gs
mov
hlt
orb
dec
cwtl
inc
jno
cmpsl
push
sbb
adc
cmp
icebp
sub
push
xchg
aaa
add
xor
sbb
test
or
inc
xor
dec
cmp
and
mov
mov
adc
mov
jecxz
in
lcall
test
mov
mov
je
sarl
mov
mov
and
pop
sub
sbb
mov
lods
dec
cld
arpl
and
or
adc
hlt
hlt
mov
nop
ljmp
xchg
pop
pop
psrlq
xchg
int3
push
sub
pop
pop
push
les
mov
xor
and
imul
pop
push
add
mov
lahf
popf
hlt
adc
adc
push
jle
faddl
add
mov
mov
in
icebp
in
push
pop
jb
push
lret
add
adc
call
pop
add
inc
iret
jecxz
push
lods
inc
jns
xor
fidivl
push
mov
or
mov
repnz
ss
sbb
sub
sub
adc
adc
pop
dec
sar
mov
cmp
movsb
push
loop
ljmp
test
mov
sar
jp
mov
xor
xchg
int
push
mov
or
out
xchg
push
test
scas
jns
test
mov
cmp
call
push
jne
mov
test
aas
test
bound
decl
addr16
lret
jbe
and
test
mov
orl
xchg
lds
rcrb
movsl
pop
fstpl
push
clc
jmp
push
sub
out
mov
imul
neg
insb
or
jae
out
int
movsb
stos
pushf
inc
pop
rcl
faddl
mov
jle
rcl
cmp
sub
pop
xor
std
clc
dec
ret
sbb
or
sbbl
inc
pusha
jno
leave
and
gs
mov
outsb
and
lods
xor
dec
mov
in
scas
rcrl
xor
int3
rclb
shr
sbb
add
addr16
std
imull
hlt
ror
enter
mov
aad
and
lret
push
hlt
sti
add
shl
nop
jl
fsts
orl
xor
cs
xor
cmp
pop
adc
jg
sub
cltd
jb
and
cwtl
clc
in
fwait
outsl
xchg
lret
cs
arpl
jo
xchg
sbb
inc
pusha
out
add
xchg
add
test
addb
in
scas
je
jne
ret
gs
fimuls
out
push
cmp
insb
call
and
orl
inc
xchg
and
add
loope
dec
ds
cltd
xchg
repnz
jmp
repz
cmpsl
cmp
pop
sbb
jno
pop
inc
xor
out
test
add
and
mov
mov
inc
jle
inc
pushf
leave
mov
cli
adc
test
bound
jg
cld
pop
sbb
inc
sbb
adc
adc
mov
or
xor
sahf
mov
cmpsb
cmpsl
cmp
fucomp
mov
and
lcall
out
and
inc
push
outsl
jo
cltd
pop
inc
stos
roll
insb
push
cmpl
xor
cmp
sbb
out
ret
jns
ds
addr16
jno
fbstp
dec
sub
lods
in
add
push
out
lcall
mov
aaa
les
and
pop
je
xchg
dec
mov
inc
push
or
dec
adc
bound
icebp
and
and
loop
into
mov
sub
xor
xchg
out
int3
into
aas
push
cmp
dec
mov
test
idivb
sbb
mov
mov
pop
push
cmp
lea
cmc
add
cmp
pop
xchg
outsl
andl
scas
cmp
rolb
pop
insb
out
test
pop
mov
sub
test
mov
push
or
leave
test
push
pop
fiaddl
sbb
mov
lods
js
testb
jbe
push
mov
das
xor
in
xchg
clc
imul
pop
les
xchg
cmpb
aam
mov
mov
lods
cli
pop
out
pop
inc
add
imul
mov
and
pop
fidivs
mov
or
xor
or
xchg
es
mov
xchg
pop
cltd
cs
xchg
push
and
call
into
or
xlat
rorb
mov
jecxz
imul
add
ljmp
xor
scas
push
and
adc
loopne
add
cs
add
iret
in
push
js
cwtl
cmp
jecxz
sbb
aam
rolb
test
sti
xchg
sbb
xchg
not
push
scas
cld
fsubl
es
loope
jecxz
mov
fidivrl
ds
jl
and
xchg
jno
aad
add
and
loope
push
push
dec
std
xchg
in
or
or
jns
add
dec
outsb
cld
inc
sub
shll
int3
and
aad
cmpsb
ret
mov
popf
sbb
rcrb
pop
mov
and
hlt
add
int
or
fdivr
lea
nop
push
cmpsb
dec
cmpsb
sbb
mov
pop
call
mov
mov
mov
scas
sub
dec
repnz
xchg
scas
std
sbb
insb
rol
mov
mov
sbb
mov
sub
movsb
enter
push
or
pop
xchg
fcoms
cmp
jb
andb
gs
outsb
push
inc
and
and
sub
push
and
rcrl
loope
sub
call
mov
mov
or
in
mov
ret
mov
mov
out
aas
or
push
cmp
outsb
add
arpl
push
adc
pop
mov
js
mov
sub
pop
shrl
mov
or
xchg
mov
fisttps
aaa
inc
mov
cmp
and
stos
sbb
mov
ds
adcl
adc
in
imul
or
negb
in
mov
sbb
mov
xchg
sbb
sub
add
lcall
fldt
cmp
test
push
or
dec
loop
jno
push
pop
cmpsl
test
inc
inc
mov
test
cmpsb
xor
pop
sbb
frstor
fs
lret
mov
mov
test
test
mov
enter
dec
popf
add
popf
pushf
imul
push
lods
pop
xchg
sti
pop
pop
lods
inc
sbb
testb
aam
xchg
stos
xchg
sub
pusha
loop
dec
cmp
mov
mov
mov
inc
sub
cltd
cmp
mov
dec
imul
xchg
add
or
lods
push
and
js
aad
dec
xchg
push
cmp
scas
jno
mov
ss
and
fwait
inc
arpl
sbb
popa
int3
in
mov
test
jbe
je
mov
in
dec
stos
fistpll
push
dec
in
out
fsubl
popf
push
enter
xor
lcall
mov
sub
sbb
xorl
pusha
and
jne
sahf
push
mov
xor
cmpsb
movb
inc
mov
je
xchg
mov
in
xchg
mov
mov
and
movsb
aas
push
mov
outsl
jb
cmp
popf
mov
or
test
call
adc
add
int3
cmp
sub
add
cld
pop
push
jae
or
mov
ja
xchg
fimuls
mov
mov
xor
cmp
stos
in
push
mov
and
jo
lods
dec
fsubp
xchg
inc
mov
jo
or
decb
xor
dec
sti
push
push
sbb
mov
imul
fcoms
jg
push
cmpsl
daa
pop
add
mov
bound
mov
xchg
push
in
and
add
fldt
push
fwait
mov
mov
test
jbe
test
mov
mov
add
scas
pop
ljmp
test
stos
sbb
aaa
mov
jno
and
adc
xchg
leave
fs
test
mov
mov
jmp
pop
jb
aas
shld
xchg
add
arpl
xchg
jb
mov
iret
inc
jo
dec
fistps
into
push
pop
pop
loope
cli
pop
mov
sbb
sbb
outsb
pop
and
adc
repnz
xchg
sub
and
inc
push
inc
push
pushf
adc
movsl
mov
pusha
pop
sbb
sub
lods
jmp
mov
lods
sbb
or
xorl
iret
or
pop
push
mov
aad
cmp
mov
pushf
aam
mov
add
int
stos
push
out
add
cmp
lret
add
int3
adc
pop
mov
lods
movsb
push
adc
xchg
rcrl
outsl
das
jle
add
xchg
and
lahf
rorb
cld
push
imul
add
mov
xchg
repnz
cli
loope
xchg
into
jmp
pop
or
cmpsb
dec
fsubp
lahf
jecxz
dec
hlt
jo
sbb
jno
push
sbb
mov
pop
in
sti
sub
lahf
mov
sbb
sub
outsl
in
lds
cmc
in
shrb
add
das
push
int3
shl
mov
rcll
inc
adc
in
push
int
mov
popf
inc
pop
push
pop
rclb
inc
jge
fidivrl
and
mov
je
xor
adc
jne
rcrl
js
cs
sub
xchg
sub
mov
add
and
test
in
xchg
jge
stc
stc
fwait
cld
xor
lahf
jb
jle,pn
sub
out
inc
adc
cs
xor
jae
testl
js
pop
add
sbb
in
repz
repnz
pop
sub
sbb
cli
int
fstpl
mov
push
dec
mov
cwtl
cs
leave
ret
int3
fxam
and
imull
imul
mov
pop
das
xor
xor
int
fstpt
inc
or
mov
int3
and
outsl
fnstsw
sub
add
mov
sub
xor
jbe
fisubl
xor
mov
loop
jecxz
movsl
sub
jne
xor
cld
xor
in
jo
shll
push
dec
int
xchg
or
adc
je
popf
insb
sub
into
orb
or
and
ret
adc
mov
pop
aam
jecxz
ljmp
jnp
adc
lock
xlat
lret
ret
int3
and
fucomi
out
lds
aas
pop
test
and
jnp
or
rcrl
shlb
out
mov
or
packssdw
mov
dec
leave
and
cmp
out
test
arpl
ss
jp
adcb
out
popa
movsl
add
data16
or
insl
pop
or
loop
cwtl
into
mov
jmp
mov
je
loopne
in
jno
out
ljmp
cli
sahf
mov
pop
and
test
jnp
and
mov
jae
mov
xchg
push
mov
cltd
mov
je
jne
shll
arpl
push
jo
jp
mov
mov
lcall
sub
add
test
inc
adc
pusha
negl
clc
jns
dec
stos
sub
mov
adc
pop
iret
loopne
sbb
or
pop
repnz
lcall
or
or
test
adc
lahf
and
push
mov
out
pop
inc
fsubrl
rcrl
rolb
push
mov
mov
or
sbb
leave
push
xchg
outsb
jne
adc
test
outsl
jmp
loopne
and
das
out
fisubrs
sub
ret
mov
js
inc
imul
cmpb
add
insb
mov
dec
adc
mov
aas
sbb
push
ficoms
mov
lcall
pop
cmpsb
js
jno
std
fstps
dec
ret
lea
sti
ret
xchg
add
sarl
cs
xchg
inc
in
mov
push
jns
sahf
and
jo
jo
mov
dec
je
xlat
xor
sbbl
sbb
lds
jg
mov
mov
daa
jl
push
movl
test
adc
ret
add
and
dec
ljmp
aaa
xor
or
xchg
sub
enter
out
cmp
iret
frstor
ret
mov
and
icebp
in
mov
mov
ds
popf
movsl
add
pusha
push
adc
xor
and
sub
pop
pop
and
jns
jbe
push
mov
xchg
lods
test
outsb
lea
jae
or
cs
pop
dec
push
mov
xchg
xchg
gs
mov
pop
shr
and
dec
push
aam
mov
aad
out
aas
into
push
fisttps
flds
mov
mov
sbb
loopne
mov
sarb
adc
adc
and
enter
sbb
int3
xchg
stos
rcll
mov
into
or
mov
or
aas
ficoml
push
insl
aas
add
mov
or
mov
pop
ds
hlt
rcll
xor
test
adc
cmovs
xchg
or
in
aam
pushl
jecxz
iret
scas
lret
cmp
jne
mov
mov
sbbl
xor
arpl
xor
adc
clc
mov
aad
sbb
imul
xor
push
xchg
or
push
aaa
in
jns
adc
pushf
imul
ret
enter
mov
push
pop
xchg
xor
pop
mov
cmp
sbb
mov
adc
adc
lods
lahf
pop
notl
rorl
cli
adc
mov
icebp
mov
jb
lcall
setbe
inc
das
mov
jns
pop
popf
js
jo
dec
lret
and
jno
mov
sbb
mov
dec
or
dec
jns
fsubs
sbb
nop
scas
lods
popa
movsb
addr16
mov
jne
cmp
clc
aad
add
aad
in
in
clc
mov
and
mov
mov
sub
je
test
push
sub
sahf
push
mov
dec
jne,pn
call
pop
push
mov
or
aam
out
mov
or
ret
add
ljmp
sbb
sbb
icebp
dec
aaa
inc
inc
mov
in
test
jb
dec
inc
addr16
pop
add
xorl
xchg
rclb
in
xor
ljmp
in
dec
lods
pop
int
cltd
mov
push
push
mov
into
ja
pop
mov
and
shlb
pusha
in
notb
pop
shr
enter
rorb
and
push
fldcw
std
cltd
jns
inc
insl
rorb
jmp
add
test
adc
mov
add
push
xor
insl
jge
inc
xor
sarl
dec
imul
lds
outsb
sub
pop
sbb
sbb
nop
mov
fsts
loop
stos
mov
lods
jno
fcmove
jae
addl
push
mov
xchg
repz
in
xchg
lock
mov
xlat
test
lds
xor
out
push
test
add
pop
sub
fnstcw
scas
das
shlb
mov
std
clc
mov
popa
scas
ret
or
cmc
inc
ds
popf
enter
cmpsb
push
daa
xchg
aaa
push
outsl
cli
cmpsb
data16
repz
xor
pop
mov
or
mov
mov
inc
js
addr16
mov
dec
pusha
iret
cmp
mov
pop
mov
cli
scas
mov
imulb
or
xor
popa
subl
subl
sub
stos
inc
in
cmp
pop
inc
jb
loop
push
add
clc
cli
ja
loopne
mov
add
mov
adc
sub
mov
or
nop
jmp
in
cmp
repz
sahf
add
xor
stos
or
icebp
pop
loop
mov
mov
or
shlb
sti
idivb
stc
lock
dec
dec
data16
mov
cwtl
sarl
adc
add
enter
jnp
mov
int
inc
jp
nop
push
push
sbb
leave
adc
cmp
out
push
leave
xor
sub
xchg
fwait
lock
xchg
lret
aam
data16
lods
dec
mov
scas
aas
cs
loopne
push
cwtl
add
and
popa
pop
xor
sub
xlat
daa
sahf
sbb
push
push
div
xchg
adc
cmpsb
out
mov
aas
ja
roll
incl
sub
test
and
xor
cltd
xchg
sbb
mov
mov
inc
adc
andb
jnp
movsl
lods
je
inc
or
pushf
fiadds
addr16
int
rorl
jp
sahf
mov
xor
lret
dec
or
ja
or
mov
nop
xorl
mov
call
rolb
jnp
lock
push
push
lods
jb
sahf
test
cs
dec
outsl
dec
popa
in
mov
das
xor
xor
ret
inc
xchg
pop
sbb
ret
push
cmpsb
ds
jp
xlat
mov
cmp
pop
xchg
dec
inc
inc
jne
dec
stos
fldl
or
aas
push
push
jecxz
or
cmpsb
enter
cmc
push
jp
xchg
cmc
xchg
insb
sub
push
add
xlat
arpl
int3
mov
mov
or
xorl
ret
jbe
pop
mov
mul
sbb
jle
fldcw
insb
arpl
rol
loope
popf
push
repz
dec
outsb
nop
clc
sti
jmp
add
xor
pop
lea
cli
xchg
xchg
sub
jmp
idivb
pushf
inc
pop
sub
mov
mov
mov
pop
fcomi
int
jp
pop
loope
adc
xorb
int3
mov
jle
stos
rcl
or
movsl
scas
bound
mov
ljmp
cmp
mov
ucomiss
daa
or
pop
add
enter
xchg
jae
dec
pop
adc
ds
cmc
add
dec
xor
xlat
movsb
scas
les
stos
js
mov
fwait
cmpsl
mov
popl
movsl
rorl
int3
xor
xorl
jecxz
sub
cmpsb
mov
int3
pop
sbb
insl
and
add
das
pop
mov
mov
and
sbb
cli
push
dec
push
or
stos
pop
pop
fildl
and
outsl
add
sbb
test
push
or
push
jp
mov
push
pop
sub
idivl
gs
rorb
mov
les
push
sbb
sbb
test
sub
add
pop
xchg
addb
loope
adc
pop
adcl
daa
lds
pop
test
dec
jmp
and
mov
mov
add
pop
insb
hlt
cltd
cmp
lret
call
les
dec
push
mov
mov
mov
iret
fwait
enter
xor
push
jge
push
or
insl
push
push
aad
xchg
pop
and
sub
cmp
jle
or
cs
fnstenv
imul
dec
faddl
stc
out
arpl
popf
popf
inc
hlt
pop
fdiv
inc
lcall
je
ret
add
nop
js
pop
xchg
out
dec
mov
add
mov
stc
test
nop
dec
cmp
jae
out
addr16
pop
std
inc
jle
pushf
sub
push
movsl
add
add
dec
dec
mov
inc
loopne
out
and
jno
fwait
in
das
pop
add
pop
ds
pop
arpl
dec
cwtl
dec
lret
leave
push
or
int
push
sbb
pop
aaa
pop
inc
stc
hlt
lds
mov
in
sbb
scas
and
inc
jp
mov
push
and
test
int3
in
xchg
jne
pop
cmp
movsl
ja
insb
enter
push
fdivp
insb
inc
cmp
mov
aaa
pop
pop
popa
mov
fsubrl
cmp
pop
mov
imul
mov
xor
popa
sbb
pop
mov
insb
add
mov
cmpsb
push
dec
jo
es
cmp
fwait
subb
pop
xorb
fadds
ljmp
lods
mov
ja
add
imul
push
adc
bound
ds
cmp
sub
jae
jno
and
pop
pop
inc
pop
dec
push
cmp
leavew
psubw
js
pop
mov
cmp
sbb
ljmp
movsb
sbb
cwtl
mov
cli
add
in
xchg
loope
push
cltd
lods
and
xlat
mov
mov
aas
int
popa
test
scas
xchg
mov
xchg
subl
sti
sbb
scas
pop
xor
push
mov
mov
sahf
mov
lahf
cmp
xlat
inc
clc
push
inc
and
jo
arpl
inc
mov
bound
sti
repz
mov
pextrw
adc
lret
or
add
test
mov
bnd
inc
push
xchg
or
xor
pop
pop
cwtl
and
repnz
mov
dec
enter
mov
pop
cmpsl
inc
cli
cmpsl
sub
movsl
popl
xor
je
outsb
sbb
cmc
stos
out
sbb
pop
repz
cs
faddl
icebp
ja
mov
xchg
xchg
mov
mov
cmp
adc
cld
and
and
xchg
and
mov
stos
inc
std
xor
sbb
mov
test
mov
sub
test
subb
mov
out
xchg
sbb
adc
adc
xor
mov
or
scas
movsb
cwtl
sub
sub
shr
js
out
data16
rclb
jb
pop
jbe
outsl
mov
inc
ss
sbb
jl
push
add
push
and
mov
out
out
mov
xchg
mov
adc
cmp
inc
inc
cwtl
add
sti
jb
push
and
sub
popf
push
in
adc
mov
mov
mov
jle
dec
subb
and
push
jmp
rorl
int3
jbe
cvtdq2ps
pop
push
out
aaa
ret
add
repnz
adc
add
mov
lock
test
cwtl
out
or
mov
lds
mov
arpl
mov
xchg
int3
in
out
push
ret
aad
clc
xor
xor
push
cmovg
pusha
ret
mov
dec
pop
test
and
jg
or
cmpsl
addl
inc
sarl
xchg
cli
jns
sub
mov
xchg
nop
mov
mov
test
lods
mov
loopne
outsb
cmpsb
out
andl
jns
dec
sbb
push
lcall
or
loop
xor
mov
jle
std
ja
and
insb
sarb
xor
int3
jnp
xor
add
pusha
arpl
das
in
popf
in
jg
repnz
sub
in
jo
repz
mov
or
outsl
pop
pop
scas
test
push
push
jno
dec
adc
or
scas
out
push
std
jge
mov
outsb
add
mov
dec
jb
mov
mov
js
xchg
icebp
jns
imul
xor
out
dec
adc
push
inc
mov
lods
add
fsts
xlat
adc
test
cmp
enter
in
cmp
movsl
loop
adc
mov
iret
dec
clc
aaa
movsb
pop
fldl
in
jle
push
ljmp
inc
mov
cli
sahf
fwait
cltd
inc
fldcw
hlt
sub
mov
adc
popf
cmp
or
mov
xor
adc
push
cmp
or
mov
fwait
fwait
inc
cmpl
jnp
nop
inc
in
mov
cli
imul
mov
add
jno
lods
xchg
dec
lods
inc
lea
jge
xlat
cmp
pop
adc
test
inc
mov
xor
cmpsl
pop
and
cli
jle
inc
ljmp
ficoms
xchg
push
push
cmpsl
jno
outsb
inc
cwtl
cmc
fnstcw
push
lea
add
inc
mov
scas
xchg
or
hlt
push
cmpsl
dec
cld
pusha
imul
mov
inc
mov
fnstcw
notl
add
inc
mov
out
lock
xor
mov
incl
push
dec
jmp
jo
xchg
lea
sbb
add
leave
insb
pop
int3
call
stos
dec
in
cs
call
xchg
cmp
loope
ds
enter
sbb
jge
push
popl
push
jnp
out
pusha
dec
mulb
stos
sub
mov
mov
xor
add
dec
xor
cltd
mov
jbe
sub
mov
test
in
push
insl
fisttps
loopne
push
jmp
dec
sbb
cli
pop
mov
out
lret
add
pushf
xor
lret
pop
pop
enter
push
xchg
daa
pop
arpl
ss
mov
dec
cmpsb
mov
xor
and
or
push
adc
mov
sub
xchg
adc
sbb
adc
ss
iret
jge
cmp
cmpl
pop
stos
test
mov
mov
in
loop
repz
je
xor
aam
loope
cmp
fwait
xchg
cwtl
or
fdiv
mull
mov
pop
mov
lret
inc
ss
dec
cltd
iret
pop
jg
xor
inc
loopne
pop
adc
push
leave
push
xor
dec
sbb
pop
or
mov
pop
mov
adc
dec
cmpsl
ficoml
repz
insl
ret
xchg
or
lret
popf
test
mov
mov
xchg
sbb
dec
add
xor
xor
shr
inc
orb
in
jb
cltd
movsb
lea
cmc
xor
lret
add
xor
pop
push
xlat
jg
sbb
insb
sbb
cs
pop
push
sbbl
aam
call
lods
notl
dec
call
jl
sub
pop
and
adc
divl
cltd
in
mov
cld
cmp
mov
mov
comiss
stc
loop
jbe
fidivrl
add
mov
pop
leave
je
jecxz
adc
jnp
dec
movsl
out
loope
xor
addr16
dec
jb
out
nop
or
mov
mulb
pushf
loope
adc
xchg
jo
mov
inc
sub
fsubr
lahf
or
test
je
stos
inc
mov
test
cmp
in
insl
jle
xchg
aam
mov
fs
mov
adc
jl
or
clc
leave
lods
adcb
mov
jge
dec
xchg
inc
out
xchg
clc
mov
rol
xor
mov
int3
lods
popa
loope
in
jns
fsubrl
mov
mov
clc
jnp
mov
ja
mov
push
je
or
jno
in
fucomi
jl
cmc
mov
sbb
xchg
inc
mov
pop
xchg
test
ss
cmp
mov
out
pop
pop
jno
stos
arpl
dec
xor
sbb
lahf
popf
dec
mov
or
mov
pushf
sbb
lods
imul
xor
loope
jle
cs
xchg
popa
out
mov
dec
xor
xor
adcl
fimuls
popa
cwtl
cmc
lret
pop
outsb
sub
sub
sub
outsb
orl
rolb
fdivs
add
es
mov
and
icebp
push
jmp
out
push
shlb
dec
imul
sbb
nop
inc
ds
addr16
add
or
jge
scas
sahf
loopne
cmp
inc
aad
sbbb
push
or
aad
xor
xchg
push
arpl
or
sbb
sub
insb
cltd
adc
roll
push
pusha
in
aad
fnstenv
test
pop
fdivrl
sarl
inc
rclb
int3
inc
mov
push
ljmp
jnp
outsl
inc
out
add
mov
dec
inc
es
ja
dec
subps
pop
xchg
push
and
pop
pop
lret
add
sub
push
xchg
sbb
popf
cltd
outsl
jbe
xchg
jge
push
fstps
jb
or
mov
or
mov
or
or
add
cmp
in
out
inc
adc
cmp
push
xor
lods
and
and
jg
jbe
jecxz
lods
inc
in
rorl
jle
test
push
cmp
or
pop
push
add
xchg
cld
mov
outsl
push
test
xchg
jbe
push
and
xor
out
and
mov
jp
pop
mov
insl
xor
insl
popa
pop
fadds
fldl
mov
repnz
cwtl
or
int3
inc
xchg
movsb
mov
jmp
inc
loop
and
push
enter
and
cltd
ret
repnz
jecxz
orb
adc
outsb
adc
das
sbb
cmc
cmpsb
loope
call
imul
cli
stos
dec
jl
mov
or
xlat
repnz
shrl
mov
test
dec
xchg
pop
cmp
retw
xchg
adc
popf
in
daa
pop
outsl
out
int3
jo
fildl
cmp
mov
sbb
adc
mov
scas
push
xchg
mov
idivl
popf
lock
fldt
sbb
mov
push
std
xchg
fs
outsl
xor
xor
fcmovbe
push
xchg
push
lretw
rorl
sbb
mov
sub
adc
inc
les
sbb
jbe
xor
xchg
mov
xchg
pop
push
dec
sub
push
push
ficoml
lahf
and
pop
outsb
and
mov
inc
xchg
std
jl
or
gs
or
cwtl
aad
aaa
cmp
hlt
sub
orl
and
cmp
into
mov
inc
jp
cmp
inc
jl
lret
inc
push
cmpsl
hlt
fs
outsl
imul
sub
pop
adc
xchg
bound
mov
test
add
push
lea
into
into
or
int
and
cmp
fbstp
sbb
xchg
outsb
rolb
icebp
and
icebp
ret
sub
scas
jno
mov
sbb
jne
cmp
mov
mov
mov
in
sbb
insb
adc
sub
clc
mov
into
push
push
push
inc
lods
sub
mov
sti
push
or
cmc
pop
call
add
mov
mov
ficompl
loopne
rcr
imul
pop
inc
out
test
adc
jge
pop
das
jne
leave
push
mov
push
mov
rcrl
jo
leave
cmpsb
in
inc
mov
or
pop
mov
inc
jp
dec
jecxz
or
inc
jbe
cmp
mov
das
test
gs
fwait
mov
pop
scas
out
pop
out
add
cld
lcall
mov
je
int3
in
cmp
dec
mov
sbb
mov
or
or
mov
out
mov
icebp
xchg
data16
ret
lret
mov
fsts
pusha
ret
lret
lods
and
mov
mov
mov
outsb
movsl
add
dec
das
fldt
bound
imulb
sub
lods
push
adc
cmp
and
es
incl
into
cmp
push
mov
xor
jl
jns
inc
out
js
mov
sub
rclb
inc
sub
xor
xor
mov
rcll
xor
adc
jle
js
lock
push
add
cld
xlat
xor
or
lcall
push
pop
mov
xchg
pusha
mov
inc
in
loop
push
into
je
add
sub
sub
mov
and
or
mov
mov
add
ret
adc
in
cltd
hlt
pop
mov
sbb
dec
movsl
jb
pushf
jnp
cmp
xor
pop
dec
and
out
testl
push
out
xor
jecxz
shl
jl
sbb
icebp
sub
jmp
scas
cmp
mov
add
and
mov
push
and
jnp
push
xor
and
push
jbe
pop
xor
adc
test
sub
insl
xor
iret
les
into
pop
pop
mov
aad
inc
das
cmpsl
add
jg
aad
inc
mov
sbb
test
dec
in
fidivrs
xchg
lds
insl
lea
das
mov
mov
or
mulb
dec
mov
xor
sti
push
cmp
std
mov
push
xchg
mov
mov
fisttpll
jge
lcall
pushf
pop
add
pop
je
jo
add
ret
xchg
fcoml
push
insb
dec
fnsave
movsl
push
add
jmp
cs
xor
test
adc
or
mov
mov
lret
push
jmp
mov
sub
repz
sub
aad
add
adc
xor
mov
and
push
jg
inc
inc
mov
push
push
stos
dec
cmpsl
jp
or
xor
mov
jae
not
int
pop
imull
pop
xchg
rcll
jo
divl
mov
cltd
xchg
test
inc
test
mov
fistl
mov
mov
es
mov
dec
cmp
test
xchg
pushaw
push
ds
pushf
lds
jb
stos
das
pushf
testb
fisttpll
out
cmpsb
add
into
and
mov
and
dec
inc
inc
rorb
movsl
push
roll
dec
jns
and
mov
sub
in
jbe
push
fidivl
cmp
xchg
cld
rcr
dec
out
outsl
cmp
into
push
mov
ss
and
adc
test
mov
xchg
xchg
pop
mov
cmp
divb
pop
pop
inc
test
loop
inc
push
popa
mov
fcmovnu
xchg
cli
leave
xchg
adc
jb
andb
add
aaa
fistl
or
shll
xchg
push
in
fs
je
sub
dec
loope
ds
mov
iret
scas
push
push
iret
lret
shlb
jge
scas
iret
xor
xchg
xor
mov
outsl
dec
mov
jno
shlb
mov
mov
cmp
jae
test
dec
sub
xor
mov
sbb
mov
sub
cmp
lods
or
and
das
fisttpl
daa
repnz
shll
out
int
lds
fdivl
aas
xor
outsb
xlat
ret
jno
mov
cmpb
push
out
rorb
push
std
and
insb
sahf
testb
and
xchg
mov
xchg
inc
lea
scas
fsubs
lcall
testb
mov
in
gs
call
mov
mov
push
sti
xlat
mov
and
testl
into
ljmp
aam
adc
sahf
cmp
push
insb
aad
and
pop
pop
or
xor
pop
mov
aam
addr16
div
pop
or
leave
mov
fstl
ret
das
int
jle
test
mov
jns
mov
xchg
mov
adc
pop
std
out
and
inc
mov
test
pop
shrl
adc
mov
pushf
mov
pop
mov
sbb
dec
stos
xlat
stos
call
mov
ja
pop
jbe
adc
je
jno,pn
rcrb
je
lcall
xchg
add
ds
aam
xor
call
push
dec
sub
push
push
add
add
shl
sub
jp
and
xchg
and
add
roll
fsubrs
mov
daa
cmp
and
addr16
jecxz
xchg
cmpsb
int3
subl
pop
mov
dec
sub
mov
push
movsl
cmp
dec
shll
xchg
mov
out
and
loope
cli
shrl
or
jge
cmp
ret
popf
pop
adc
arpl
xor
cmp
lcall
jns
dec
mov
mov
inc
loope
es
ja
daa
lret
pop
adc
and
push
arpl
insl
jle
aaa
inc
nop
xchg
stos
xchg
aas
lcall
js
mov
xchg
ds
xor
xlat
inc
push
int
fdivl
push
and
and
test
jg
cmpsb
mov
lahf
jo
cpuid
lcall
cmp
pop
mov
addr16
adc
pop
mov
aaa
popf
jle
or
and
fadd
movsb
pop
jmp
pop
roll
dec
jg
sub
lahf
sbb
or
cmp
repnz
xor
xchg
orl
lret
cli
inc
fucom
insb
stc
fistps
sub
push
jbe
or
xorl
cmpl
lods
fbld
pop
sub
dec
mov
sbb
xchg
mov
in
stos
adc
sbb
cmpl
adc
ss
pop
sbb
hlt
ljmp
mov
mov
or
daa
sub
sub
aad
xchg
imul
aam
cltd
icebp
ja
ss
call
mov
lcall
dec
inc
cmpb
mov
cmp
out
std
hlt
outsl
mov
sub
ja
sbb
popf
xor
stc
stos
sbb
sub
dec
xlat
adcb
vmwrite
add
cmc
pop
cs
jp
xorb
std
inc
dec
mov
loope
xor
test
outsl
in
or
xor
dec
and
mov
nop
inc
dec
aam
xchg
out
rol
add
jns
jns
jo
mov
jg
cmp
test
cmpb
pushf
adc
jp
xor
dec
icebp
sbb
pop
into
xchg
gs
sbb
jns
add
int
inc
and
xor
or
ror
cmc
adc
aad
ljmp
test
loop
jnp
adc
and
or
int
push
mov
lahf
xor
cs
mov
jge
pop
in
shll
jmp
int3
std
adcl
or
cld
push
mov
jae
dec
sbb
push
repz
adc
lds
fidivrs
cmp
dec
dec
ds
or
pop
xor
fwait
gs
sub
pop
arpl
ja
cwtl
in
sti
into
fidivl
dec
scas
inc
lods
or
imul
jno
dec
stos
jge
addr16
dec
enter
inc
add
inc
sbb
mov
jo
lods
je,pt
loope
dec
out
iret
xlat
outsl
adc
push
or
push
iret
add
pop
aam
adc
add
cmpsl
pop
daa
jmp
adc
clc
mov
dec
fs
pop
daa
in
adcb
ljmp
jge
popf
call
ljmp
mov
sub
fnstcw
mov
adcl
adc
dec
jnp
jae
hlt
add
jmp
jbe
or
xchg
push
dec
cmpsb
test
cmp
mov
adc
repnz
repz
or
fildll
fbld
aam
push
sbb
mov
das
mov
decl
lea
xor
dec
stos
sub
in
pusha
movsb
clc
loope
nop
sub
popa
loope
push
mov
in
mov
lcall
inc
mov
mov
jp
cmp
mov
jae
sahf
pop
mov
nop
pop
leave
cmp
inc
test
jns
mov
enter
dec
loop
dec
lret
and
lods
rclb
push
sti
mov
mov
mov
cmp
pop
lret
mov
lcall
popf
push
cli
xchg
mov
dec
arpl
push
mov
aad
jae
test
pushf
ja
push
pop
sbb
mov
negb
push
cmp
mov
dec
fs
dec
dec
jb
pop
insl
out
cltd
shll
fiaddl
imul
jl
into
jg
and
pop
fidivrs
mov
sahf
cli
jne
cmp
pop
add
mov
mov
push
push
les
popf
lods
imul
inc
xor
mov
popf
and
and
mov
dec
pop
std
icebp
lock
std
mov
jecxz
xchg
sub
ret
ds
notb
jnp
arpl
add
aas
int3
popf
das
and
sub
fbstp
jnp
daa
mov
jo
lret
jne
jge
jecxz
scas
mov
mov
leave
push
iret
js
daa
pop
push
cmpsl
inc
imul
cmpsb
push
dec
mov
mov
add
mov
lods
xor
mov
das
push
cmp
cmc
adc
sbb
dec
rorl
pushf
xchg
xlat
stos
in
push
pop
cmp
cmp
and
lret
std
jne
mov
adc
outsl
and
shl
lods
or
lods
into
rclb
lcall
insb
jle
mov
stos
fidivl
cmpsl
jb
notl
in
inc
xchg
lcall
orl
pushf
aad
pop
fsub
jne
mov
stos
push
inc
cmpb
outsl
aas
cmp
mov
arpl
jp
scas
out
cltd
loopne
jno
jp
sbb
addr16
dec
and
dec
push
dec
aas
dec
js
add
imul
sbb
jbe
test
pushf
call
icebp
mov
sti
inc
and
push
out
idiv
mov
movsl
lods
ret
inc
adc
adc
xor
in
push
jbe
rorb
sahf
pop
imul
push
mov
add
and
xchg
xchg
mov
push
roll
fmuls
daa
inc
je
xchg
mov
movsb
xchg
or
or
inc
dec
test
or
sbb
mov
push
lock
cmp
push
mov
outsl
pusha
pop
jl
or
cltd
or
mov
in
scas
sub
out
cmc
pop
dec
loop
out
aad
pop
fucomp
jnp
jne
xor
cmpsl
out
mov
or
shll
out
nop
mov
je
xchg
aas
insb
adc
xchg
aaa
jg
stos
cmp
repnz
push
popf
pop
dec
mov
and
mov
sub
push
je
sbb
mov
sbb
aaa
je
mov
gs
test
movsl
jno
cmp
pop
xchg
loopne
mov
sbb
push
sbb
sbb
adc
mov
inc
sub
sti
push
loop
fldl
hlt
fdivrl
sahf
out
xchg
cmc
leave
sbbb
ja
xchg
fwait
xchg
rolb
dec
dec
mov
jmp
ret
out
test
mov
lds
mov
roll
add
xor
cld
push
ret
lcall
pop
xor
add
mov
cmpsb
std
fs
push
pop
lods
push
mov
shl
mov
daa
mov
fcoml
push
test
jb
mov
push
mov
iret
stos
scas
xor
mov
mov
addr16
sbb
mov
lods
or
dec
jo
push
ret
push
dec
neg
cmpsb
popf
js
adc
stc
pusha
loop
test
and
daa
mov
scas
xchg
inc
push
in
push
bound
and
pop
pop
pop
clc
cmp
ret
xor
pause
jge
mov
dec
inc
sarb
int3
sub
push
fimuls
rorb
adc
fnstcw
mov
sub
xor
popa
orl
add
add
dec
cmpsl
andl
jp
in
out
push
jns
dec
cmc
popa
fnsave
add
lret
outsl
outsb
loop
inc
ret
or
out
bound
or
xchg
sub
mov
sub
das
repnz
fwait
mov
sbb
lods
xchg
xor
cli
pop
stos
mov
and
push
mov
pop
pop
add
xor
add
aas
inc
pop
cmpsb
aam
pop
pushf
xchg
imul
xchg
push
mov
cmp
cmp
push
jnp
sub
mov
fwait
outsl
xor
sti
cmpsb
stc
push
sti
jge
push
in
mov
idiv
in
leave
xor
cmp
add
insb
mov
lcall
jns
aaa
pop
in
inc
fisubs
fisubs
gs
jp
outsb
and
xchg
adc
in
rcrb
sub
sub
sbb
in
repz
ss
stos
inc
jo
mov
call
push
fwait
notb
push
shll
scas
lods
out
pop
xchg
scas
or
icebp
push
mov
psadbw
sbb
add
int
jmp
or
das
push
or
and
and
paddw
jmp
cmp
ret
mov
dec
aas
mov
pop
and
test
lret
push
or
xchg
jo
sub
test
jns
ljmp
scas
repz
mov
rolb
lds
sub
inc
lods
ds
cld
sub
xchg
out
cmpsb
loop
push
jge
inc
jl
fmuls
jnp
dec
or
aad
cmp
test
int3
jecxz
pop
sbb
mov
cmpsb
shrb
fisttpl
call
or
iret
std
adcb
sub
cwtl
rcll
outsl
movsb
ljmp
mov
btr
ret
loope
push
cmp
subl
out
pop
sahf
test
or
dec
stos
ljmp
push
std
inc
insl
or
jp
adc
sbb
sub
cmp
pop
cld
inc
lea
lahf
in
jne
or
xchg
in
mov
jecxz
popf
lcall
sbb
in
and
sbb
insb
xor
jmp
push
mov
push
pop
jns
je
pop
lds
sbb
and
insb
push
addb
xchg
scas
andb
dec
pop
jno
mov
jb
mov
lods
jecxz
cmp
mov
dec
lahf
repnz
push
mov
repnz
mov
imul
inc
shlb
shlb
pop
ss
push
cmp
cltd
push
popf
mov
sbb
mov
xor
mov
lods
sbb
lds
inc
add
shlb
sub
loopne
sbb
inc
add
das
inc
push
mov
rolb
testl
add
jbe
pop
xchg
ja
aad
clc
negb
pop
mov
scas
xchg
out
sbb
jbe
unpckhps
out
xchg
fnstcw
pusha
mov
lock
push
push
repnz
cltd
ds
fdivr
aad
jle
jmp
movsb
out
push
push
add
mov
int
sub
pop
sub
or
dec
push
jb
faddl
mov
shll
aas
or
fsubr
xor
mov
add
add
adc
je
addb
push
mov
cmpsl
inc
rcl
lea
lock
pop
sub
mov
stos
inc
sub
push
je
mov
in
or
popf
dec
cmp
sub
test
pop
jl
cmpsl
mov
dec
pop
in
lcall
xor
inc
adc
aas
fucomip
push
mov
stos
rcll
sub
push
dec
call
dec
fimuls
mov
notl
test
je
mov
mov
fisttps
dec
lahf
aaa
mov
or
sar
push
xor
mov
ret
test
pushf
in
push
push
int3
jae
mov
stc
jae
call
mov
push
pop
jmp
mov
pop
xchg
or
outsl
sub
cmp
and
dec
push
and
jno
and
ficompl
push
dec
cmp
enter
loope
dec
dec
fbld
cmp
mov
pop
test
es
in
adc
in
mov
adc
imul
js
pop
push
mov
add
or
in
jl
repz
xchg
adc
mov
shl
enter
xchg
nop
gs
out
loop
xlat
imul
andb
pop
xor
in
std
cmp
jae
push
jb
scas
dec
addb
sbb
cmpsb
cld
rclb
sbb
repnz
rorl
cmc
mov
dec
cmc
mov
lods
popf
test
or
dec
dec
jns
xchg
mov
jnp
imul
ficoml
mov
sbb
and
int
sub
push
push
xchg
jmp
cwtl
mov
cmp
cltd
sbb
aas
scas
sbb
xor
xchg
xchg
ljmp
xchg
into
test
inc
xchg
iret
and
add
dec
shlb
cmp
int3
mov
and
mov
movsl
das
cmpsb
les
pop
xchg
xchg
or
cs
sub
xchg
push
jne
in
sbb
ret
sub
out
rcll
add
loope
jns
bound
mull
into
leave
inc
into
xlat
stc
sbb
mov
xchg
and
mov
addr16
lds
cli
xor
push
mov
cmp
pop
inc
arpl
and
outsl
repnz
mov
mov
fisubrs
or
in
cmp
or
push
cmp
data16
mov
mov
push
cmp
lds
add
aam
dec
subb
and
jle
cmp
cmovp
jnp
xor
stc
hlt
xor
aad
push
fldenv
xor
sub
cmp
adc
stc
cmp
out
pusha
leave
inc
test
cmp
out
test
or
js
cmp
hlt
cmp
sub
out
or
pop
out
add
xor
xchg
or
shlb
mov
ljmp
sbb
mov
outsb
hlt
add
into
mov
add
in
mov
pslld
push
mov
rorl
inc
ret
mov
xchg
addr16
icebp
dec
xlat
rcll
icebp
cmp
mov
and
test
in
mov
popf
inc
insb
aas
dec
pusha
jo
mov
sub
iretw
mov
insb
push
xchg
push
xor
lock
stos
mov
icebp
in
scas
add
fisttps
movsl
adc
data16
testb
jge
fwait
stos
push
xor
jns
aaa
icebp
es
jecxz
adc
pop
test
or
inc
jb
mov
mov
cwtl
jmp
dec
sbb
lret
lods
daa
cwtl
ljmp
pand
in
pop
or
mov
jecxz
adc
push
pop
or
out
sub
push
les
leave
faddl
add
nop
andl
test
inc
fsub
movsb
notl
sbb
sahf
lret
stos
xor
imull
sbb
hlt
clc
sbb
cmp
pop
in
pop
jb,pt
test
cmpsl
pop
negl
adc
and
adc
mov
jg
fucomip
fcomi
enter
mov
mov
scas
lret
sub
jmp
sarb
ret
popf
pop
cmp
fisttps
mov
pop
cs
sub
mov
dec
pop
in
insb
cmpsb
stc
add
push
cmp
ret
lock
inc
pop
push
adc
cltd
repnz
dec
mulb
imul
jmp
sub
test
cmp
les
add
lahf
push
cmc
pop
mov
dec
jecxz
or
cmp
and
data16
sbb
ja,pn
mov
jno
or
int3
imul
add
cmpb
cs
dec
dec
xchg
xchg
movnti
movsl
xchg
call
popa
mov
xorb
test
mov
shlb
jb
pusha
pop
shr
pop
push
cwtl
ja
jns
inc
into
push
test
negb
lahf
dec
jle
fisubrs
scas
mov
dec
xlat
push
xchg
mov
xchg
sub
sbb
loop
add
cltd
sbb
cmpsl
loope
test
or
loopne
dec
inc
push
outsb
or
fdivrs
loopne
mov
or
int
add
xchg
sub
shll
jl
imul
lock
das
xchg
iret
mov
xchg
cli
pop
rorl
rcrb
mov
pop
mov
rorl
and
add
or
sub
mov
scas
mov
das
mov
mov
std
mov
jo
cld
loope
add
ds
pop
imul
or
cmp
adc
push
rcrb
xor
pop
push
mov
rolb
in
pop
es
jp
xchg
bsf
push
sbb
mov
xchg
scas
xchg
sbbb
imul
cmpsl
lret
mov
stos
jb
fcomps
dec
into
out
leave
jne
xchg
clc
ficoml
mov
dec
pop
xor
das
jl
scas
clc
pop
jl
sbb
jae
into
push
mov
cmp
inc
int3
bound
xchg
ljmp
in
cmpsb
inc
out
ffree
mov
mov
unpcklps
addb
push
sub
add
out
mull
test
mov
pushf
mov
fadd
inc
std
fldt
xor
mov
push
adc
and
or
in
popa
adc
loopne
push
jge
shlb
sub
ret
jl
inc
in
jne
cmpl
push
fldl
sti
add
call
fsubrs
popa
scas
adc
repz
insl
cmp
mov
or
mov
jg
aad
cld
and
mov
in
sub
sbb
adc
or
cmp
xchg
ljmp
sbb
adc
inc
and
sub
jmp
insl
xchg
inc
sahf
xor
out
int3
cwtl
jns
lods
addb
push
arpl
fmull
mov
inc
clc
test
or
inc
xchg
lea
roll
div
imul
insb
jnp
fiaddl
scas
sub
fcoms
clc
jle
fcmovu
mov
cs
fdivrp
fcmovnu
jg
int
scas
pop
stc
adc
outsl
add
sbb
or
cmp
mov
aaa
pushf
mov
or
dec
imul
jle
incb
jbe
jl
insb
into
ret
jno
sti
adc
push
andps
push
sbb
jne
xchg
js
filds
jp
cltd
adc
mov
inc
mov
sbb
mov
ret
sbb
mov
adc
mov
loope
insl
mov
xor
adc
mov
jmp
and
inc
inc
sti
cmp
test
dec
outsb
pop
xchg
daa
dec
mov
dec
aad
std
pop
out
push
sbbl
and
and
jb
or
xor
cmp
pop
add
out
xor
sti
fmull
or
dec
test
insl
dec
xchg
push
mov
fdivrl
scas
jmp
fwait
stos
mov
enter
jl
mov
sbb
clc
push
imul
pushf
jo
out
cmp
xchg
lret
sbb
aaa
aaa
push
iret
dec
in
loopne
bound
clc
mov
mov
popa
mov
push
aaa
dec
pusha
stos
in
je
adc
fdiv
movsl
xor
inc
stos
sub
pop
fmull
pop
sbb
xchg
mov
pop
push
mov
clc
jp
push
mov
xchg
mov
nop
pop
xor
add
cmpsl
popa
mov
xchg
cltd
jl
mov
loop
or
and
stos
sub
imul
pusha
test
gs
sub
xor
fnstenv
popa
and
and
cmp
js
push
ds
orb
das
cmpsb
lret
aad
jb
lea
pop
pop
pop
es
mov
push
mov
sub
xchg
cs
cld
stos
or
push
dec
pop
inc
cmp
sbb
sahf
jmp
scas
pop
insl
sub
sub
dec
nop
sbb
mov
cmp
mov
push
and
sub
test
in
mov
hlt
xchg
cmpl
mov
jbe
fs
sub
gs
pop
inc
push
test
test
andl
in
out
sub
lcall
dec
inc
sub
pop
push
sbb
pusha
movsl
popa
sub
sub
pop
inc
cli
adc
rcll
mov
lcall
jne
push
enter
cmp
cmpsl
fsave
pop
hlt
xlat
daa
or
sbb
dec
mov
xor
jle
daa
cmp
loope
nop
cmp
dec
pop
inc
xchg
loop
adc
ss
call
cmp
inc
or
inc
scas
jmp
call
popa
insb
lods
maskmovq
fldcw
pop
adcl
mov
inc
push
gs
pop
cld
add
mov
fisttpll
int3
repnz
gs
xchg
clc
pop
stc
divl
lds
rorl
mov
stos
loope
mov
cmp
mov
pop
test
dec
ljmp
sub
neg
xchg
and
mov
es
loope
outsb
or
les
add
sub
sahf
add
out
ss
add
ljmp
xchg
adc
jl
xor
lcall
xor
adcb
mov
sbb
test
out
loopne
negl
pop
out
xchg
mov
xor
push
inc
xor
test
lods
push
ret
cli
cmp
push
dec
sahf
popf
push
negl
jo
es
adc
cmp
mov
arpl
cmc
in
pop
jle
scas
cmp
adc
mov
xor
hlt
sub
jo
pop
lock
jl
jbe
jns
clc
scas
cwtl
test
sbb
divb
lock
jl
fsub
movsl
int3
mov
jne
sub
push
repnz
std
dec
sub
mov
and
jmp
shlb
add
inc
inc
adc
sarb
ret
sub
clc
sub
ljmp
enter
pop
jb
gs
adc
cli
insl
into
mov
in
push
ljmp
jbe
and
dec
in
lret
and
add
fidivrl
inc
xchg
pop
test
mov
push
fs
and
lret
stc
call
and
xchg
add
ljmp
add
pop
xchg
test
in
pop
mov
xor
push
test
cld
arpl
jmp
outsb
call
mov
xchg
xchg
sbb
iret
dec
mov
xor
or
xchg
and
pop
addr16
add
fstpl
ja
scas
loopne
inc
adc
fistl
lods
adc
and
lods
and
es
dec
xor
xchg
cmc
into
int3
lock
cli
jecxz
mov
mov
dec
pusha
mov
mov
push
cmp
push
imul
test
nop
cltd
dec
aad
add
flds
cmc
test
jb
add
ja
add
fwait
popf
scas
bound
std
jmp
push
pop
mov
lods
insb
repnz
mov
fiadds
and
inc
movsb
jns
lret
push
adc
xor
fstl
add
std
and
or
testl
inc
sub
sbb
inc
loop
movl
jnp
into
fdivl
cmp
push
push
pop
pop
cltd
leave
cmp
lds
inc
pop
pop
outsb
cmc
inc
lret
rol
adc
sbb
jae
ret
outsb
and
xor
add
jo
imul
dec
outsl
xchg
sub
and
stos
push
test
decl
xchg
cs
iret
lahf
mov
sub
add
call
xor
aam
int3
add
dec
dec
sar
sbb
mov
sbb
outsl
mov
fstpl
jl
xchg
enter
inc
push
call
and
adc
xchg
repnz
iret
xchg
dec
mov
mov
ss
and
mov
incl
imul
pop
mov
insb
shrb
and
outsb
ret
jge
mov
cs
and
mov
or
mov
je
out
jg
sub
xorl
sbb
add
cmp
mov
test
xchg
or
sbb
sub
sbb
xor
dec
ds
jl
cwtl
dec
jmp
mov
ja
mov
xorb
adc
out
in
pusha
jp
jmp
jbe
lods
mov
push
adc
sub
clc
jnp
cwtl
mov
iret
call
push
aam
sarl
inc
or
sub
in
enter
add
or
dec
push
mov
cwtl
xchg
js
add
add
and
std
ljmp
lcall
scas
mov
jo
mov
hlt
pop
cs
jmp
xlat
or
pop
mov
adc
iret
jmp
mov
cwtl
into
push
mov
lock
fstpt
cmp
add
icebp
cmpsb
add
jge
test
stc
stc
stos
imul
xchg
push
jg
add
jns
iret
testb
repnz
mov
into
cmp
mov
fdivs
test
sar
push
fildll
shll
pop
stc
xchg
xor
fcomps
gs
pop
mov
lea
loopne
test
fsubr
jo
gs
push
mov
xor
les
stos
scas
xor
insl
jmp
fisttpl
sti
movsb
jbe
dec
les
push
or
imul
loope
cmp
and
push
negb
pushf
or
cmp
push
xor
inc
call
jns
mov
pop
sbb
adc
sub
in
std
sbb
ret
xchg
sbb
xor
pop
sub
es
push
cltd
dec
cmpsl
mov
sbb
xor
pop
lret
iret
push
jge
roll
mov
ds
fcomi
mov
fwait
aad
cld
sbb
aas
sub
push
dec
cmc
in
int
mov
movsb
and
cmp
hlt
dec
jecxz
add
dec
int
int
cli
inc
out
pop
mov
xchg
add
xchg
adc
lds
scas
gs
dec
and
dec
mov
call
js
push
adc
add
addr16
sub
iret
mov
iret
fwait
test
push
xor
mov
jns
in
dec
lret
enter
add
xchg
scas
pop
lahf
mov
xlat
je
les
cmp
dec
mov
xchg
cltd
lret
mov
lret
fwait
in
mov
mov
pusha
int3
sub
mov
std
adc
mov
push
pusha
test
inc
pop
xor
add
jmp
fistpll
jnp
in
pop
sbb
je
into
sub
cli
loop
jl
faddl
add
sub
cwtl
mov
mov
xor
pop
aad
arpl
mov
test
je
jp
sub
loope
xchg
fyl2xp1
cltd
push
push
fmul
sub
xlat
mov
cmp
ret
sbb
repnz
pop
xor
jp
push
cli
xchg
jmp
mov
in
lods
insb
lock
fdivrp
adc
jae
adc
rol
in
lods
push
fmuls
jne
inc
les
jmp
dec
aad
pop
aam
pop
cmp
lock
pop
mov
sub
pop
mov
or
ds
test
pop
dec
cmp
out
mov
inc
inc
pusha
lcall
mov
xlat
push
addr16
iret
sub
mul
mov
shrl
aas
pop
xor
adc
test
das
pop
dec
pop
test
mov
stc
lcall
sahf
xor
fbld
leave
mov
sbb
xchg
or
cwtl
jnp
mov
arpl
dec
test
or
cmp
sbb
jge
ss
sbb
jne
fidivrs
std
jae
add
fistpl
jb
push
cmc
inc
shl
mov
mov
cmp
in
mov
enter
mov
and
sahf
das
inc
das
sbb
or
loope
call
cmc
push
stos
push
sbb
hlt
mov
dec
mov
jge
out
adc
cmc
sub
cs
ja
loop
mov
aas
xor
fistpl
xchg
int
js
outsl
lcall
or
xlat
ret
mov
pusha
mov
xchg
in
cmpsb
xorb
jae
mov
sub
jle
sub
jbe
adc
mov
adc
mov
movsb
aaa
js
cmp
es
shrb
das
std
pop
ret
adc
pop
fucomp
lods
jno
push
lods
lea
xchg
lods
fcoms
mov
lock
sbb
sbb
adc
cmp
or
sti
rorb
add
test
push
inc
cmp
cmpsl
lock
pop
mov
stc
es
sbb
mov
lock
cmp
xchg
xor
daa
call
fld
leave
ja
xchg
pop
insb
push
mov
push
lret
das
mov
push
and
sbb
adc
mov
std
std
cmp
xchg
iret
jno
imul
or
push
inc
jb
sub
and
mov
insb
fwait
fwait
ja
das
lcall
aas
lods
jmp
xchg
jmp
or
cmp
pushf
rcrb
mov
push
sub
pop
cwtl
pop
xchg
or
in
shl
imul
mov
adc
jge
popa
dec
adcl
jbe
pusha
or
xor
repnz
xor
arpl
and
dec
and
decl
insl
or
data16
xchg
movsl
mov
std
movsb
push
xor
push
push
xchg
push
mov
add
pop
dec
and
sub
mov
lcall
push
sub
sbb
dec
adc
inc
lds
inc
mov
cld
mov
add
outsl
js
pop
arpl
mov
mov
sahf
and
cld
mov
and
add
fisttpll
loope
sbb
cmp
sub
sahf
andl
sbb
divb
cs
jp
mov
dec
fdivl
push
mov
rcrl
mov
lods
sub
inc
mov
into
or
ds
mov
pop
push
add
jns
fmul
or
pop
ret
sub
lret
fldt
aam
push
xlat
cltd
mov
decl
cmp
xor
xor
sbb
mov
popf
enter
fcoms
inc
rcl
mov
movsl
cmpsl
push
mov
jb
add
inc
popf
push
mov
jns
dec
inc
mov
cs
mov
movsb
in
cmc
fcomps
sbb
mov
and
mov
mov
xchg
std
inc
push
mov
dec
sub
sub
xchg
and
ja
adc
lock
and
and
cs
ja
testb
pop
cmp
lods
insb
jmp
stos
enter
in
mov
mov
inc
jo
adc
out
cli
icebp
ud2
icebp
rcrl
stos
iret
mov
and
mov
or
loope
movsb
mov
sahf
sbb
fdecstp
aaa
pushl
push
andb
sbb
outsb
push
xor
jmp
mov
xchg
imul
and
out
jb
daa
fisubl
adc
out
not
popa
fisubrl
fistpl
add
rcrb
cmpb
cmp
loopne
lock
mov
enter
pop
fabs
lods
es
js
sub
orb
mov
cmc
jge
cmc
rclb
inc
sub
jmp
push
rclb
inc
mov
cmp
in
pop
mov
iret
psubusw
adc
out
inc
mov
pop
cmp
mov
mov
or
xchg
data16
mov
lret
faddl
mov
dec
pop
test
aam
adc
rcrb
lret
adc
movsl
aad
inc
scas
inc
shll
rep
hlt
int
mov
push
push
and
mov
mov
add
or
ljmp
jecxz
xchg
repz
icebp
ds
xor
pop
or
xchg
mov
ss
imul
outsb
mov
xchg
in
fs
sub
mov
pop
scas
arpl
jne,pn
lock
out
xor
cmpsb
aas
sub
dec
andl
stos
mov
push
jns
in
out
pop
out
mov
dec
mov
mov
add
repz
es
add
out
imul
aam
or
out
cltd
sbb
aad
push
or
mov
sti
fcomp
jbe
or
fadd
mov
int
jns
scas
pop
dec
leave
and
xor
into
mov
adc
pop
or
mov
cmp
xchg
mov
adc
test
sahf
scas
jae
in
mov
adc
js
arpl
cmpsb
outsb
test
arpl
dec
test
mov
inc
aam
or
aam
inc
pop
mov
and
inc
mov
jmp
inc
pop
mov
and
pop
scas
stos
lcall
mov
nop
cli
mov
sbb
cld
pop
mov
jno
adc
outsl
mov
xchg
mov
xchg
dec
inc
lret
popf
mov
dec
dec
lret
jmp
inc
shlb
out
icebp
insl
dec
inc
stc
insb
inc
jle
scas
and
push
push
cmp
xchg
andl
ret
pop
mov
aad
pop
add
in
lret
es
icebp
jnp
sbb
repnz
lods
cmp
into
xor
lcall
and
cs
pop
mov
lret
js
addr16
sbbl
inc
push
iret
push
lea
insb
dec
std
dec
dec
or
xchg
adc
out
add
or
dec
jns
xchg
or
mov
cmpsb
out
push
xchg
mov
ret
fistpl
or
setns
jns
outsb
out
push
aas
cs
mov
cmp
shll
lods
jg
xor
mov
sbb
mov
inc
mov
test
ds
repz
bound
xor
out
sub
mov
mov
aad
std
add
movsb
pop
pop
icebp
mov
fistl
sbb
pop
sbb
push
and
dec
dec
sti
jg
mov
jbe
sbb
sub
pop
fstl
daa
push
mov
cwtl
jge
xor
jg
mov
xchg
movsb
aad
out
sbb
lods
push
cs
sbb
pop
mov
xchg
jg
push
dec
mov
fs
cmp
mov
cmpsb
inc
adc
cmp
push
bound
aas
mov
test
fcmovnb
jns
push
lds
sbb
xor
and
xchg
mov
shr
cld
mov
mov
movups
and
jo
cltd
sti
and
arpl
sbb
jmp
sarb
jmp
push
jecxz
push
daa
add
lock
daa
xchg
mov
mov
sahf
cmp
push
jle
fidivl
hlt
mov
jo
mov
outsl
andb
jnp
jge
dec
mov
nop
pop
sbb
mov
pop
xchg
inc
stos
mov
clc
cmc
mov
mov
inc
pop
jl
das
test
sub
mov
dec
iret
adc
aas
inc
adc
or
jns
decl
push
mov
lds
mov
jns
pop
lret
ja
pop
int3
mov
insl
fwait
repnz
push
test
add
aaa
push
mov
xor
movsb
sbb
add
int3
mov
pop
sbb
dec
dec
lret
lods
into
cli
imul
data16
xchg
les
pop
fs
xchg
sbb
and
movsl
inc
and
inc
popf
xor
cmp
sub
sub
loop
int
je
push
mov
fisttps
sahf
sarb
jmp
pop
sbb
loopne
fistl
movsl
sbb
shrl
adc
clc
aas
mov
sbbl
ret
movntq
push
jb
mov
call
xor
pusha
mov
sbb
jb
xor
mov
daa
int
mov
loopne
sbbb
sbb
xchg
daa
mov
ret
inc
sbb
mov
pop
je
in
rorb
pop
mov
inc
aam
inc
mov
xchg
mov
and
and
adc
push
mov
call
push
or
sbb
sbb
es
test
shr
aaa
mov
sub
xchg
das
mov
adc
jno
ds
dec
dec
xor
and
push
adcl
pop
lock
cmc
imul
push
rcr
shrl
fiaddl
rorl
incl
stos
pop
sbb
jge
ss
scas
adc
std
add
lods
inc
or
in
jl
test
daa
xchg
mov
fcmovne
rclb
aad
jb
sub
mov
xor
xor
jae
sti
out
jno
push
dec
leave
fcmovnb
jge
mov
gs
cli
adc
lods
dec
pop
movsl
dec
mov
sbb
push
add
stos
mov
in
repnz
dec
and
and
mov
in
jnp
adc
icebp
js
mov
jbe
jbe
pop
dec
cmp
dec
int3
out
leave
enter
sar
add
and
ljmp
dec
jl
lret
insl
mov
mov
lret
push
pop
sbb
mov
test
jbe
test
repz
pop
mov
sbb
out
ja
dec
xchg
cltd
out
pusha
gs
or
popf
in
mov
inc
adc
jae
test
pop
push
and
rcrb
fwait
lret
cmpsl
pop
movsl
sub
in
dec
push
rcrl
fwait
test
xor
jge
ret
pop
adc
lcall
adc
hlt
inc
pop
mull
mov
pop
dec
imul
repz
pop
test
and
sahf
or
aas
rolb
aam
dec
push
roll
adc
jge
dec
pop
xor
or
pop
lea
mov
sub
push
call
sti
sub
xchg
mov
xchg
ss
shrl
push
sahf
xor
sbb
dec
imul
mov
xor
jle
adc
lods
mov
test
jl
mov
dec
and
jno
adc
adc
rcrb
mov
push
mov
sbb
scas
movsb
inc
pop
jl
dec
test
popa
push
jg
fistl
lret
lret
hlt
sbb
fadd
fdiv
popf
sbb
mov
movsl
icebp
imul
cli
xlat
nop
jbe
jl
sti
sbb
xchg
js
ds
into
orl
dec
out
lods
sub
lcall
fnstcw
dec
ja
pushf
mov
js
mov
or
mov
cmp
mov
stos
addr16
call
cld
ret
pop
jecxz
add
int3
dec
lahf
push
insl
scas
in
mov
lds
les
push
pop
ds
or
sbb
push
sub
push
pusha
fisubrl
jp
inc
xchg
adc
fwait
xchg
filds
sbb
mov
jno
lods
pop
dec
out
cmp
sbb
fstps
xor
inc
gs
dec
dec
dec
aaa
pop
mov
or
xchg
pop
jp
push
jo
sbb
add
mov
push
addl
call
std
shll
movsb
jns
xchg
inc
lea
cmpsb
xcrypt-ecb
cmpsl
mov
loope
pop
push
push
mov
add
xchg
pop
ret
sbb
in
xor
mov
add
sub
pop
cmp
mov
out
inc
lods
je
call
insl
enter
roll
mov
ljmp
movsl
pop
mov
adc
mov
pop
cmp
inc
mov
mov
lods
loopne
xchg
imull
and
adc
pop
jmp
mov
stc
repz
push
jb
enter
sub
jmp
sub
xlat
sbb
mov
pop
insl
and
ret
sbb
stos
cs
fcompl
mov
mov
and
faddp
and
or
lods
or
call
xchg
pop
cmp
nop
xchg
mov
pop
rclb
ja
xor
fs
mov
add
add
xchg
adcb
js
je
jo
das
push
das
pop
xor
cmp
push
lock
mov
shrb
jns
lock
sub
daa
or
bound
into
inc
pop
rcr
fldt
push
mov
mov
and
in
xlat
fsubrs
mov
imul
xor
lret
xchg
mov
push
dec
and
pusha
addr16
or
xchg
xchg
icebp
enter
aam
or
mov
cltd
sbb
or
mov
or
or
divl
insl
je
xor
and
fstl
cs
dec
imul
sti
test
mov
out
mov
adc
frstor
imul
inc
mov
mov
inc
pop
mov
gs
dec
rcrb
pop
lret
aam
jl
jo
sahf
inc
inc
rcl
inc
xchg
arpl
push
int3
arpl
and
imul
fwait
and
or
xor
inc
add
push
cld
lds
jecxz
addl
cmp
adc
mov
sbbl
rolb
xor
mov
and
mov
mov
mov
and
push
cmp
mov
dec
popf
mov
lds
insb
outsl
sahf
jecxz
cmpsl
cmp
jo
test
mov
mov
pop
pop
rcll
or
hlt
sar
pop
aad
dec
or
push
cmp
aad
dec
xchg
push
cmpsl
pop
push
or
adc
fiadds
ja
mov
xchg
cmp
and
sbb
in
lahf
sbb
jbe
dec
les
outsl
inc
shlb
out
inc
jl
xchg
sahf
out
pusha
pop
mov
repnz
std
mov
incb
out
mov
stos
pusha
inc
fidivl
add
and
or
lahf
scas
sbb
pop
and
mov
loope
dec
out
push
stos
lcall
inc
insb
out
and
cmp
push
pop
pop
lods
pop
inc
mov
pop
jmp
movsb
cli
lahf
xchg
sub
pop
mov
xor
rorb
aam
cmpsb
mov
mov
rclb
mov
pop
dec
pop
test
xor
jns
add
cmpsl
mov
ds
fcmove
push
push
push
mov
jmp
xor
add
pop
push
cmpsl
shll
inc
jbe
movsb
scas
neg
shll
push
xchg
mov
xor
sub
pop
fwait
int
inc
jbe
arpl
fldenv
orl
orb
dec
std
stos
xchg
xchg
or
or
jne
mov
pusha
outsb
or
cltd
ret
fs
mov
out
or
push
aas
xchg
sbb
incl
mov
lahf
stos
aaa
cmp
es
inc
pop
and
ret
in
lods
mov
dec
jp
xchg
lcall
jo
in
pushf
push
pop
es
mov
inc
xor
fsubl
xor
xchg
pop
iret
scas
xchg
test
lock
sbb
pusha
xchg
sbb
sarl
movsb
gs
xchg
test
push
jl
xor
jge
in
sahf
cmpsl
lock
movl
ss
dec
ror
add
popf
hlt
adc
setl
cmp
inc
mov
xor
and
stos
movsl
jno
and
jns
scas
push
hlt
lcall
ficoml
sahf
push
push
xchg
imul
fwait
sub
mov
push
rcl
imulb
mov
pop
and
inc
pop
out
lret
call
add
jg
out
jecxz
adc
inc
sbb
push
add
cmp
pop
ljmp
mov
jnp
repz
aas
outsl
repz
std
mov
pop
in
jae
aas
or
ljmp
int3
mov
ljmp
ja
push
fs
jl
andb
cs
fisubl
mov
repz
and
into
sbb
cmpsb
rorl
cmpps
aas
nop
and
lret
iret
cs
inc
lds
pushf
loope
fdivr
out
daa
mov
ret
dec
scas
out
add
jb
pop
icebp
dec
add
jae
and
cmp
out
lods
jecxz
dec
cmp
pop
outsl
xchg
leave
icebp
enter
mov
lock
xor
mov
xor
inc
daa
movsl
jg
mov
mov
addr16
cmpsb
loopne
mov
xor
xchg
xor
xchg
sbb
jg
push
in
add
fwait
jle
sub
mov
outsb
jl
stos
add
fisubs
adc
push
icebp
outsb
in
daa
adc
jl
xor
cmpsl
std
add
cmc
popf
popa
in
sbb
sub
std
mov
jle,pn
loop
add
push
mov
dec
fcoms
divb
ficoml
mov
xchg
mov
popa
sub
pop
inc
sub
in
daa
push
and
sbb
loop
jg
cs
insl
cmp
sbb
pushf
cmpsl
mov
sti
xchg
sub
arpl
xchg
jnp
aas
and
fildll
adc
fcoml
clc
add
mov
cli
sbbl
mov
dec
cmp
mov
gs
inc
dec
pop
xor
and
inc
repnz
sbb
mov
insb
shl
stc
popf
mov
add
mov
cmp
mov
outsb
xor
lcall
and
inc
jnp
xor
outsl
lds
xor
jae
loope
sbb
in
pop
or
jl
cmp
or
or
and
repnz
clc
cmpsl
int3
mov
mov
push
ret
xchg
aad
xor
pushf
lahf
adc
cltd
dec
sbb
ds
fdivl
sar
and
pop
sar
or
adc
icebp
sbb
outsl
xchg
sahf
pop
xchg
jb
call
scas
jecxz
subl
sbb
sub
jmp
or
ja
out
add
or
dec
mov
enter
in
pop
xor
and
xchg
mov
inc
je
clc
push
inc
arpl
loopne
mov
iret
addr16
cmc
lods
jecxz
sub
add
xchg
jno
jmp
xor
out
scas
xchg
subl
cmp
mov
inc
fisubrs
adc
jbe
xchg
push
pop
aam
loope
lea
push
push
xchg
mov
sbb
in
test
test
daa
push
ror
popf
and
lret
sub
or
popa
or
push
or
inc
xor
popa
loopne
in
bound
iret
adc
sub
xchg
aam
pop
sbb
stos
mov
shr
mov
outsb
dec
and
outsl
cmpsb
sbb
test
sti
cmp
cmpsb
jmp
xor
mov
sub
push
out
lock
out
gs
jmp
fmull
jo
xchg
ss
jecxz
sub
add
lret
jge
jle
incb
inc
imul
mov
in
cmp
push
leave
cmp
mov
xchg
outsb
mov
sub
imul
aaa
fistpl
add
cmp
and
add
xor
xor
sub
cltd
idivb
or
sbb
imul
mov
stos
lahf
adc
daa
sub
xor
xchg
push
adc
mov
and
into
sti
push
aad
imul
fsubp
es
mov
sub
adc
or
jecxz
jb
mov
hlt
mov
mov
lret
andl
mov
or
pop
dec
cld
lods
and
mov
daa
pusha
mov
shl
adc
enter
bound
xchg
pop
ja
data16
mov
stos
xchg
jp
sahf
aas
adc
adcl
lea
inc
cmp
xor
xor
pop
xchg
jbe
scas
add
jge
outsl
sub
dec
arpl
scas
push
es
dec
mov
xchg
dec
mov
std
xchg
pop
pusha
lods
inc
cs
mov
or
movsl
cmpsl
jne
incl
fisubs
inc
insb
xor
popa
pop
out
jno
adc
pop
loope
mov
or
xchg
mov
pop
mov
mov
add
outsb
testl
repz
into
fcoml
mov
xor
mov
cmp
stos
scas
das
jbe
out
lcall
inc
xchg
leave
cld
out
dec
shll
cli
movq
sub
mov
lcall
add
and
xchg
mov
movsl
ret
xchg
pushf
mov
arpl
pop
std
aad
sub
dec
in
add
mov
insb
inc
dec
mov
jp
mov
sub
pop
sub
sbb
add
xchg
cld
dec
les
adc
jp
mov
jl
xor
fcmove
mov
mov
enter
imul
add
add
sahf
dec
stos
inc
add
jl
ljmp
and
sub
mov
xchg
iret
mov
mov
lock
mov
dec
sbb
mov
mov
leave
sbb
sti
test
mov
lcall
data16
xchg
pop
push
loope
sub
jns,pt
cmp
sbb
and
add
or
or
aaa
sbb
dec
xchg
cmp
pop
sbb
dec
ljmp
mov
call
add
or
cwtl
sbb
jmp
popf
pop
pop
sbb
cmp
push
ret
mov
orb
mull
fimuls
pop
dec
pop
daa
lock
push
popw
fwait
test
sarl
inc
fiadds
cmpl
mov
in
lods
jb
jbe
pushf
lret
sub
xor
xchg
adc
mov
jae
cmp
std
subb
pop
gs
movsb
cld
lret
clc
subl
jmp
cwtl
cmpb
cmpsl
pop
ss
xchg
pop
sub
ficoml
fnstcw
mov
adc
outsb
sarb
mov
faddl
cmp
cmp
or
add
out
cwtl
lret
adc
nop
dec
mov
mov
gs
scas
repz
or
shll
mov
lret
test
xchg
lret
pop
repnz
cli
sub
push
aad
pushf
sbb
aas
cmpb
popf
inc
aam
loop
ss
loop
popf
out
inc
jo
jecxz
mov
enter
add
imulb
imul
pusha
popf
add
and
ret
sbb
inc
lahf
or
xchg
ret
test
std
mov
mov
loope
inc
and
sub
jb
mov
jb
push
inc
dec
shll
adc
mov
inc
xor
movsb
cmpsb
mov
adc
aas
xchg
push
push
add
xchg
jae
sarb
les
out
adc
mov
int3
ret
fsts
mov
and
imul
mov
jae
sub
jne
dec
sbb
dec
and
pusha
xchg
pusha
mov
dec
incl
leave
adc
sub
push
stc
loopew
jmp
pop
and
int3
mov
cli
xchg
jmp
cs
addl
mov
lret
fisubs
cmpsb
jne
lcall
push
cmp
test
ljmp
jo
aas
out
pop
xchg
loope
mov
fimull
addr16
and
leave
cwtl
cmp
sbb
inc
fcoml
int3
test
popf
orl
pop
mov
cmp
arpl
mov
push
cmp
in
outsb
pusha
inc
dec
aad
cltd
pop
cmp
scas
pop
neg
pop
pop
cmp
aas
fdivr
popa
popa
push
pop
jg
sbb
mov
push
inc
push
mov
sbb
or
xor
cmp
push
lods
dec
push
ss
shl
test
mov
cmp
mov
inc
push
shr
repz
popa
jmp
lods
xchg
shlb
mov
cmp
fstp
sti
mov
add
jle
test
arpl
insb
gs
inc
scas
enter
nop
xchg
mov
push
fdivs
push
test
adc
out
das
mov
xor
dec
or
cmp
pop
inc
movsl
cmc
into
sbb
fildll
pop
test
jle
pop
leave
dec
movsl
add
ss
adc
rclb
clc
addr16
xor
push
sarb
lret
clc
cmpb
lds
fbstp
xchg
mov
ljmp
mov
mov
test
ljmp
popf
lcall
ljmp
out
pop
mov
mov
and
mov
sub
push
hlt
mov
cmp
inc
xor
hlt
mov
inc
imul
dec
popa
jnp
cmc
int3
ja
sar
inc
xchg
mov
dec
xor
and
adc
or
ret
mov
inc
xchg
fdivrl
sbb
mov
aas
mov
lods
jge
rcll
mov
mov
aad
outsb
mov
xchg
ja
lahf
sub
push
outsl
out
cmc
mov
stos
lcall
push
sahf
lds
out
inc
xchg
fldcw
mov
cmovns
test
dec
enter
xchg
mov
insl
dec
cmp
out
jl
push
lret
in
sbb
sub
jmp
dec
inc
stc
mov
enter
stos
adc
sub
aas
into
jnp
int
bound
out
or
pop
mov
pop
push
aaa
and
mov
mov
out
mov
fwait
push
add
pop
xor
cmc
cld
xor
and
mov
dec
js
insb
in
inc
sbb
int3
cmp
out
insb
and
into
mov
scas
imul
cmp
xor
jnp
psubusw
adcl
cmp
mov
mov
dec
cs
dec
sbb
pop
popf
xor
push
push
sub
sub
aas
imul
scas
jo
arpl
jecxz
in
out
pop
movl
loop
enter
mov
sbb
jo
sbb
xchg
adc
out
jl
out
add
add
lock
push
mov
icebp
cmpsl
lcall
dec
push
add
icebp
outsb
and
dec
out
test
xchg
sbb
emms
dec
xchg
xor
push
adc
fadd
hlt
adc
imul
scas
pop
test
push
popf
es
sbb
or
sbb
out
xchg
push
fisttpl
sbb
add
int
lods
mov
sbb
out
ret
xor
ficoms
or
mov
mov
add
jns
fildl
into
arpl
leave
bound
dec
mov
aaa
cmpsl
cmp
ret
pop
xchg
popa
jns
pop
xchg
les
xchg
lret
pop
jecxz
ds
pop
les
lds
xchg
pop
add
or
xor
add
and
mov
movsl
test
loope
inc
cltd
push
addr16
std
jecxz
cmp
dec
mov
popa
jp
imul
decb
lret
bnd
xor
cmc
insl
push
pop
pop
popa
stos
adc
cmp
pop
cs
mov
pop
mov
mov
sub
and
scas
dec
lods
pop
inc
sub
or
cmpsb
es
lods
fcmovnbe
or
pop
stos
mov
inc
mov
int3
loopne
fldl
sahf
xchg
push
je
daa
dec
aas
ficoml
jl
loope
mov
stc
push
test
ret
loop
cmp
das
mov
mov
jb
sahf
lret
push
out
cmp
fisubrs
pop
fs
sbb
pop
outsb
push
cmpsl
cmp
imul
pop
cmc
jbe
or
dec
imul
mov
or
push
mov
mov
stos
aam
bound
orl
movsb
mov
mov
jbe
sub
push
int3
add
out
cs
xchg
pusha
mov
imulb
stc
add
cmpsb
or
add
pop
sub
fs
scas
stc
xchg
jo
pop
inc
mov
mov
xchg
sub
pushw
in
push
ljmp
aas
xor
xlat
loopne
lds
inc
push
lea
push
movsb
jno
iret
enter
icebp
stos
loope
xor
pop
jmp
test
sbb
ja
imul
xlat
in
sahf
cli
adc
xlat
imul
dec
bound
testb
jbe
lahf
das
stc
in
fcom
jnp
cli
pop
add
pop
scas
inc
orb
or
lds
bound
scas
repz
sbb
pop
leave
or
mov
xchg
add
rol
cmp
sbb
pop
push
daa
mov
sarb
pop
inc
push
comiss
xor
lret
sub
sbb
loop
mov
mov
das
pop
push
add
jle
inc
jl
out
push
fiaddl
jo
outsb
fldenv
sbb
and
aaa
sbb
test
inc
insl
cmpsb
or
push
dec
test
xor
and
pusha
push
shll
cli
in
and
xor
fistpll
repnz
push
aaa
out
mov
mov
popa
into
mov
lahf
enter
in
in
ret
sahf
lods
out
sbb
cs
push
lahf
test
jb
outsl
ret
inc
int3
fimull
mov
repnz
xor
lahf
mov
insl
jge
pusha
and
lcall
gs
lods
adc
jge
roll
jne
scas
push
jmp
dec
shll
xchg
xchg
xchg
enter
lds
out
lods
psraw
or
dec
mov
xchg
push
jns
mov
or
sub
pushf
xchg
inc
js
lret
hlt
push
repnz
lea
movsb
dec
mov
xor
pop
je
push
std
subl
movsl
jnp
cwtl
and
xor
inc
leave
cmpsl
movsl
sti
mov
loopne
data16
mov
sti
sub
hlt
out
movsb
stos
jecxz
cmp
repnz
and
out
lods
push
jle
push
test
imul
xchg
aaa
cld
mov
lahf
cmp
xchg
cmc
lds
loopne
push
and
inc
add
and
mov
jnp
xchg
xchg
or
cmpsl
or
jg
and
xchg
mov
notl
push
xor
pop
int3
lcall
or
mov
lret
and
cmp
popf
int
push
outsl
stos
loop
sub
adc
incb
clc
loop
es
out
iret
and
and
fs
cmc
data16
hlt
ret
daa
push
add
lret
out
outsl
fnsave
and
test
fnstsw
lods
jge
mov
cvtps2pi
jge
cltd
lds
aas
out
inc
insl
and
pop
inc
call
jae
dec
clc
inc
mov
or
mov
loop
pop
push
push
scas
pop
in
lcall
aad
jo
pop
int
imul
mov
push
push
outsl
sti
data16
rclb
inc
cmc
int3
push
clc
fsubl
jg
mov
jge
and
rcl
clc
repnz
rol
jae
iret
bound
sbb
adc
dec
pop
xchg
inc
sub
in
inc
rcll
mov
cld
xor
inc
cld
mov
pop
dec
xchg
mov
nop
icebp
shrl
mov
inc
mov
adc
add
imul
pop
sti
mov
dec
ficomps
cmpsl
sahf
in
xchg
xor
lret
mov
pop
mov
setb
adc
push
insl
out
lahf
sbb
fwait
pandn
xchg
scas
or
test
inc
dec
sbbl
ds
fstp
mov
scas
enter
out
push
enter
fisubl
ret
test
adc
aaa
sbbl
call
popa
xchg
jnp
dec
lods
cmp
mov
sbb
inc
push
jb
shl
fdivr
push
sub
and
mov
lcall
add
push
ljmp
mov
mov
test
xor
jb
push
sub
jae
mov
xchg
gs
aaa
jns
testb
incl
es
les
icebp
cmpsb
adc
mov
jge
call
or
loope
dec
xchg
fwait
sbb
mov
insl
std
aam
movsl
sbb
outsb
sahf
pop
fidivrs
leave
call
rclb
dec
pop
adc
ret
loop
fwait
in
push
mov
sbb
scas
lcall
mov
ret
xchg
mov
or
mov
int3
iret
data16
mov
mov
repnz
pop
add
loopne
mov
jmp
cmc
out
fcoml
sbb
sahf
inc
jno
xlat
sub
push
inc
dec
imul
adc
repz
movsl
loopne
dec
sub
scas
push
lahf
jnp
iret
fldt
cmp
xor
fs
push
les
fcmove
adc
scas
jnp
fnsave
adc
into
nop
push
cmp
xor
pop
sbb
sub
push
test
mov
loope
or
add
int
xchg
xchg
pop
jmp
jl
jmp
mov
addr16
add
xchg
sub
adc
jecxz
ljmp
sbb
push
movsb
into
dec
add
sub
inc
mov
arpl
in
push
aaa
flds
rorb
or
or
adc
xchg
cmp
pop
sbb
aam
xlat
or
test
sbbb
ret
and
jns
aam
sbb
hlt
xchg
in
lret
cmp
mov
push
in
pop
inc
jmp
pushf
fisubrl
sub
std
xchg
or
repnz
movsb
push
rcr
push
cmc
fcoms
inc
or
add
xchg
aam
fsubrl
pop
shll
fdivrl
inc
and
int3
ret
lods
aam
push
aam
mov
into
lods
pop
les
pop
out
negl
or
imul
xor
push
cmp
pop
aaa
pushf
popa
daa
negl
scas
jno
dec
sub
shrb
jo
mov
incb
pop
pop
pushf
je
lock
inc
sbb
es
or
dec
lods
stos
mov
pop
add
inc
pusha
lahf
sbb
jno
pop
aad
scas
or
ret
xchg
mov
push
mov
fsubrl
or
mov
fs
jl
xor
mov
psrlq
mov
add
dec
inc
push
scas
sub
mov
les
pop
testb
pushf
ret
gs
or
addr16
sub
adc
or
cmp
sbb
pop
sub
shrb
mov
and
add
scas
push
pop
repnz
mov
inc
ss
iret
lret
push
inc
mov
daa
or
dec
and
inc
adc
fs
xchg
cltd
sbb
jmp
fstpt
out
pop
es
mov
xor
sti
mov
das
callw
int3
mov
mov
mov
repnz
mov
mov
add
inc
xor
dec
jae
mov
addb
decl
adc
out
jae
xchg
jp
adc
std
mov
adc
add
and
iret
notb
fs
lods
gs
xchg
push
dec
xchg
fsubrs
imul
xlat
or
add
xchg
bound
loopne
xor
xchg
xchg
ficoms
movsb
ret
dec
ss
mov
in
call
inc
roll
int
lea
pop
add
imulb
aam
movsl
cmpsl
inc
loopne
adc
add
inc
ljmp
stos
sub
imul
ja
aas
fidivrs
addr16
fwait
scas
fcmovne
cmp
fstl
adc
xor
xor
icebp
fstpl
inc
cwtl
push
movsl
jl
sti
lret
and
cld
mov
fsubrp
in
dec
pushaw
mov
bound
push
mov
hlt
dec
mov
dec
jbe
stos
testl
mov
dec
fs
addb
fstpt
sbb
cmp
add
and
popa
inc
int3
insl
imul
mov
cmp
jmp
dec
nop
out
test
push
scas
cmpsl
in
xorb
or
stos
and
adc
icebp
stos
mov
inc
imul
out
cld
stos
test
push
pop
pop
fmuls
fsubrs
icebp
fiadds
scas
in
pop
add
les
xchg
cmp
pop
imul
pop
jae
cmp
js
inc
xchg
xchg
imul
and
mov
jno
push
mov
inc
mov
out
or
sub
rcr
cmp
cmp
scas
imul
adc
aas
mov
pop
aad
pop
shrd
sarb
ss
pusha
mov
cmp
push
inc
aas
pop
push
or
aaa
push
ds
adc
jl
jmp
addr16
sbb
sub
mov
repnz
mov
negl
mov
adc
fistps
adc
insb
test
dec
sbb
sbb
out
jns
jns
mov
jecxz
cmc
scas
aad
and
aaa
pop
jmp
push
dec
incb
jl
orb
adc
and
inc
xchg
adc
inc
pusha
fnstcw
incl
mov
sub
fwait
dec
xchg
cwtl
mov
in
xchg
negb
hlt
mov
enter
sub
fiadds
sub
filds
jb
add
xchg
adc
adc
in
sbb
loope
dec
fs
jb
push
call
in
mov
and
mov
xchg
icebp
in
clc
lahf
ret
test
mov
jg
stos
pop
loop
mov
pop
mov
and
leave
pop
cmc
scas
ss
das
clc
dec
add
and
test
mov
sub
and
add
pop
and
out
mov
stos
sbb
adc
adc
je
std
insb
add
xchg
xor
push
push
pop
js
insl
xchg
jge
push
aaa
cmp
mov
scas
sbb
divb
int3
stc
incb
rclb
aam
nop
into
mov
sbbb
mov
in
xchg
xchg
fsubrs
arpl
mov
subl
cmc
daa
ds
or
mov
mulb
call
add
in
xchg
jl
sahf
pushl
into
je
ljmp
subb
add
bound
rolb
push
leave
mov
mov
movnti
sbb
shrl
mov
xchg
push
scas
sub
shlb
test
mov
call
sarb
and
paddb
adc
lcall
sub
jmp
xchg
ret
mov
popf
push
lods
fwait
xor
ds
sbbb
mov
or
push
jno
pop
mov
out
addb
sbb
int
cmpsb
fildl
xchg
push
mov
repnz
pusha
xchg
jg
flds
add
hlt
insb
js
dec
pop
inc
scas
push
movsl
sti
push
lret
push
std
popa
jecxz
sub
and
mov
ds
mov
xchg
aas
inc
sbb
cmpsl
xchg
lret
pop
loop
mov
pop
mov
dec
sbb
jg
dec
sbbl
sub
shr
imul
jno
xor
mov
pushf
add
scas
pop
sub
out
jge
push
push
in
xlat
lods
loop
lock
mov
pop
xchg
mov
imulb
xchg
inc
jne
xor
das
fiaddl
jl
fcomps
ret
cmp
fld1
ficoml
mov
orb
pop
adc
lret
test
aas
mov
fnsave
xor
add
xor
cwtl
xor
ret
pop
das
mov
pop
cmpsl
testl
or
adc
mov
inc
mov
sbb
xchg
fsubrs
andb
fdivrs
mov
mov
sbb
or
mov
pop
xchg
push
lds
loop
xor
cwtl
daa
mov
or
mov
mov
push
or
lcall
stos
jns
adc
jmp
subb
out
mov
pop
jo
and
xchg
jae
cltd
pop
ja
in
and
lods
cltd
loope
daa
test
aam
sbb
adc
out
lret
mov
jno
scas
setae
jnp
loop
mov
jmp
aad
std
mov
aad
je
inc
mov
xor
pop
xchg
xchg
adc
lds
xchg
insl
mov
sahf
lret
shl
mov
inc
pop
xchg
xor
in
dec
sarb
mov
mov
mov
fdivl
es
push
sub
into
dec
rcl
pop
sbb
sub
stos
mov
movsb
xor
mov
pop
iret
das
scas
mov
repnz
inc
test
mov
xor
ret
les
pop
add
add
or
mov
imul
xchg
std
test
cmp
push
test
add
inc
sbb
mov
mov
jb
out
test
mov
jge
or
aaa
inc
fiadds
mov
repz
and
out
scas
popa
lock
stos
and
jge
xchg
iret
mov
jno
icebp
push
arpl
push
mov
jecxz
loopne
and
mov
ret
pop
fsub
cmpsb
andb
imul
add
dec
mov
or
scas
out
loope
push
push
cltd
fildll
jge
movl
mov
push
imul
cmpsl
jbe
dec
int
fwait
in
aas
out
in
sti
rclb
cmp
jne
lock
jg
cmpsb
sub
fs
push
imul
sub
fidivs
cmc
test
pushf
rorb
lds
bound
xor
mov
push
fcomi
roll
ds
fsts
loop
xchg
jbe
faddl
adc
dec
dec
vpmulhuw
dec
aam
orl
push
adc
xor
inc
iret
stos
sub
dec
mov
sub
pop
inc
cmp
jecxz
xlat
mov
aaa
dec
and
jg
shlb
fmuls
dec
mov
mov
adc
xacquire
int
std
push
mov
scas
repnz
outsl
and
aaa
inc
icebp
loop
dec
pop
sub
mov
icebp
mov
testb
aam
movsb
or
mov
fildl
sub
sub
in
jge
pop
decl
js
pop
test
mov
outsb
and
fs
xchg
dec
mov
rol
mov
fmuls
and
icebp
xchg
lea
inc
jl
pop
push
jl
jl
loope
xchg
fadds
jb
add
fwait
test
sub
fistps
jbe
dec
daa
lds
pop
xor
enter
or
xchg
or
and
xor
sub
ds
dec
sub
xorb
push
lret
lods
inc
mov
or
fbld
out
jecxz
mov
dec
pusha
cmp
pop
dec
or
sar
test
or
fdivl
cmp
addr16
adc
scas
clc
neg
test
sbb
adc
mov
popa
iret
jb
mov
mov
imul
daa
mov
ljmp
imul
push
sarb
adc
dec
iret
and
xor
or
das
out
inc
sub
xchg
fwait
roll
arpl
stc
or
mov
mov
fisubl
mov
pusha
cmpsl
xor
mov
xor
pop
mov
inc
inc
sub
imul
fsubrl
mov
pop
jl
sbb
mov
lds
jmp
jp
imul
push
add
insb
xchg
fwait
cmpsl
push
int
mov
mov
mov
rcr
mov
rcll
sbb
bound
lea
pop
lcall
rcrb
movsb
aaa
mov
push
negl
in
popw
xor
lahf
cmp
adc
js
cmp
nop
add
lret
lret
rcr
mov
ret
mov
dec
xlat
test
sub
pop
lahf
xor
mov
sbb
adc
mov
mov
pop
lcall
pop
sbbb
lds
stos
stos
repnz
add
pop
mov
mov
stc
nopl
add
je
xchg
in
sti
xor
iret
stos
fcomps
insl
imul
stos
fs
xchg
popf
pop
inc
or
test
mov
lret
mov
mov
sahf
jno
mov
mov
mov
in
push
xor
lret
cmp
dec
xorl
xchg
xor
mov
push
and
add
push
push
fsubl
movsb
sbb
pop
inc
xor
xor
xchg
clc
jae
insb
imul
mov
aaa
mov
mov
pop
or
pop
int3
mov
mov
test
push
pop
adc
mov
test
leave
insb
pop
idivb
or
and
lcall
mov
push
push
adc
adc
push
mov
rorb
xor
outsb
pop
adc
jbe
shll
jbe
push
ljmp
dec
sbb
xor
test
push
jle
add
and
pop
and
mov
aaa
add
scas
pop
shll
mov
and
lret
push
add
test
xor
and
leave
mov
repz
sub
mov
sbb
adc
daa
cmpsb
jmp
into
cmp
ror
std
loop
or
test
stos
orb
mov
jecxz
and
fisubs
dec
stc
xchg
add
into
clc
inc
dec
pop
dec
lods
lods
or
rcrb
jl
pusha
dec
rolb
cmp
in
clc
les
in
cli
fisttpl
sbb
inc
cli
ljmp
mov
test
repnz
in
and
adcb
inc
out
and
mov
pop
xor
or
adc
xlat
fisubs
int3
es
addl
mov
mov
daa
mov
xchg
loope
ss
jb
pop
push
cs
mov
enter
dec
aas
mov
call
push
popa
push
xor
or
push
pop
arpl
dec
push
jo
fsubr
jmp
and
fwait
add
mov
sub
lahf
ffreep
testl
or
jle
and
sub
push
mov
lods
ds
cmpsb
cmc
loop
cltd
movsl
popa
sahf
lods
movsb
and
mov
mov
jns
aas
ja
inc
mov
fildl
out
push
int
mov
jg
push
jmp
dec
mov
inc
cwtl
cs
cmp
out
dec
inc
xor
mov
nop
insb
es
mov
pop
mov
and
out
mov
hlt
adc
xchg
stc
cmpsl
dec
loopne
in
adc
sub
mov
hlt
fadds
popf
xor
icebp
imul
sub
dec
das
mov
fnstsw
mov
push
jo
xchg
inc
mov
shll
cmp
mov
push
in
int
xor
decb
cmp
int3
xor
ror
inc
jae
test
iret
xor
js
leave
mov
sti
mov
in
mov
push
addl
xlat
out
jo
mov
sub
pop
pop
aas
jl
inc
les
lret
jl
shrb
fstps
adc
outsl
fisubs
pop
push
inc
mov
test
push
jns
sub
insl
mov
scas
add
jle
dec
xor
pop
xor
vpmaxsw
xchg
iret
pop
test
cltd
out
xchg
jb
iret
je
lret
adc
mov
fdiv
lcall
mov
int
das
std
and
mov
sub
xchg
fstl
out
lahf
negb
sbb
mov
inc
mov
test
sbb
mov
fwait
ja
xor
imul
movsl
fbstp
mov
jmp
inc
lods
rcrb
xchg
popf
out
je
mov
jge
add
pop
sarl
jmp
repnz
xor
and
ds
in
dec
dec
mov
add
repz
sbb
add
xchg
jb
pusha
sbb
movsl
cmp
push
clc
push
sub
das
loopne
out
fwait
inc
push
push
lret
jle
leave
fsubs
mulb
nop
insb
cmp
jne
jo
cmp
rorb
insb
or
xchg
push
sub
fwait
rcr
dec
mov
and
stc
inc
mov
or
aas
pop
mov
lret
call
pop
pop
push
icebp
icebp
and
test
es
push
pop
popf
inc
push
push
outsb
cmp
pop
incl
push
shlb
sub
scas
arpl
jae
in
int
mov
xchg
push
int3
test
popfw
mov
add
fisubs
or
aaa
dec
adc
inc
loop
inc
imul
and
stos
in
push
dec
andb
test
push
pop
pop
movsl
fildl
frstor
insb
add
loopne
or
xor
icebp
and
int
xor
cmpsl
mov
sub
push
xchg
shll
push
jo
lahf
jge
sbb
and
js
shlb
mov
nop
sub
fcomps
and
das
xchg
lods
pop
outsb
jg
jge
sub
ljmp
call
out
mov
into
xchg
outsl
add
es
and
lods
inc
lret
sbb
lods
xor
sbb
pop
mov
and
push
xor
jle
sbb
shll
xchg
in
outsl
mov
pop
fsts
ljmp
clc
pushf
scas
in
cld
push
mov
cmp
add
jb
add
rolb
cs
mov
test
fmuls
sub
cmp
mov
cmp
push
pop
jecxz
icebp
lret
adc
nop
xchg
cld
jp
cmp
add
fmull
in
add
sub
lock
lock
sub
lret
cmpb
or
and
out
dec
loopne
arpl
mov
test
or
outsb
jno
push
rorl
outsb
sbb
shrl
shrl
imul
mov
test
dec
mov
add
adc
push
adc
ret
jnp
insb
lret
mov
int3
call
movb
lds
mov
push
add
cmc
out
add
fidivl
mov
and
and
pop
ds
test
mov
int
arpl
push
call
push
arpl
add
sar
pusha
mov
jg
jns
jmp
fs
inc
sahf
lods
rol
nop
adc
call
rorl
mov
xchg
and
inc
dec
int3
adc
aam
cmp
xorb
mov
mov
mov
xchg
cmp
bound
fcomi
sub
lock
stc
add
add
mov
insl
das
xor
xchg
in
sarl
movsl
ja
insl
mov
mov
push
pushf
inc
sahf
rorb
fidivl
fadds
std
insl
sub
aad
xchg
push
fdivrl
lret
aam
das
int3
aam
mov
ss
repz
jbe
std
pop
cmc
lods
lods
jno
pop
pop
sbb
int3
popa
sahf
add
push
sub
iret
vxorps
movsb
push
insb
pop
lcall
add
push
pushf
cmp
or
pop
cmp
arpl
dec
inc
xchg
pop
jae
std
movsb
cwtl
in
xchg
fstpl
mov
add
test
nop
imul
test
lds
leave
xor
xorl
push
lds
mov
rclb
xchg
jb
jne
in
inc
loopne
jmp
sbb
shll
push
jl
sbb
shrl
das
cmpl
sbb
dec
cmc
pop
loop
push
nop
repz
fldln2
or
pop
faddp
mov
jo
mov
aas
fcoml
mov
test
sbb
fs
push
adc
popf
mov
adc
sub
sub
adcl
mov
cmp
sbb
push
push
push
mov
clc
dec
lods
mov
imul
adc
dec
fcmovbe
pusha
dec
xor
fldl2t
fs
jmp
lret
cmp
int3
pop
stos
dec
and
mov
outsl
xorb
fsubrs
xchg
cltd
push
sub
mov
mov
sub
fiaddl
mov
push
pop
stos
xlat
push
nop
push
das
adc
mov
stc
push
movl
jecxz
xchg
add
jnp
popf
out
jno
push
lods
pop
fimuls
jl
push
cwtl
mov
sar
ret
or
push
mov
loopne
cmpsb
inc
dec
imul
mov
aam
fwait
mov
repnz
lret
dec
aad
mov
adc
pop
lcall
jp
xchg
lahf
mov
dec
xchg
mov
mov
and
mov
push
cmpsl
sahf
shll
dec
shll
fcoms
jnp
add
push
or
xchg
mov
and
imul
fidivs
pop
es
cmp
mov
xchg
jmp
dec
incl
dec
mov
cli
xchg
inc
xchg
push
and
les
ret
inc
cmp
ret
add
arpl
pusha
push
test
xchg
mov
pushf
jg
cld
mov
cmp
or
lods
insb
insl
lods
and
es
test
aam
aaa
cmc
sbb
mov
jbe
push
xchg
aas
aaa
push
jmp
and
inc
dec
imul
jne
mov
jle
loop
les
loop
push
test
loope
cltd
or
add
int
repnz
mov
inc
hlt
jp
les
mov
push
js
fildll
cmp
dec
cltd
inc
sbbb
mov
notl
int
loop
push
aas
in
stc
pop
mov
out
cmp
fdivrl
xor
sub
pop
sbb
xorl
mov
cwtl
lock
pop
pop
js
lock
jle
fidivrs
flds
and
repz
lods
cli
inc
push
call
std
cli
popa
adc
js
mov
cmpxchg
sbb
adc
jl
mov
imul
xchg
cmp
mov
mov
or
lea
or
cwtl
xchg
dec
adc
push
pop
loopne
cmp
outsb
inc
cmp
fisubrl
lcall
in
cs
hlt
inc
sbbb
add
xor
call
pop
sbb
repz
jg
repz
cmp
aam
sbbb
imul
or
int
sub
cmpsl
cmpsb
sysexit
mov
mov
mov
inc
add
sarl
in
xor
imul
dec
pop
ss
repz
test
pop
js
mov
sbb
stc
sahf
sub
aad
sub
scas
mov
cmpsb
jbe
andl
pop
and
sbb
mov
ljmp
xor
aaa
cwtl
sbb
daa
mov
inc
xor
aam
leave
cld
es
jno
adc
lret
pop
push
adc
adc
mov
pop
lahf
loop
push
cmpsb
repz
sahf
cmc
pop
inc
mov
lcall
into
out
cltd
imul
ret
xchg
stos
push
jmp
fidivrs
dec
in
inc
nop
inc
jbe
sub
ja
dec
ljmp
sub
adc
or
push
mov
jle
in
bound
jbe
xor
or
mov
push
daa
fisttpl
test
sub
lock
ret
adc
movsb
xchg
push
rcrb
cwtl
inc
ds
in
xor
lock
dec
dec
xor
out
scas
push
out
or
mov
push
push
fcompp
sub
jnp
ja
push
loope
add
aas
and
cmp
dec
mov
xchg
mov
mov
mov
ret
inc
pop
cmp
nop
sub
sbb
push
test
push
fstpt
push
int3
jge
pop
xchg
xor
or
adc
lods
ljmp
mov
dec
rcll
xor
push
push
aad
icebp
cmpsb
fadds
std
xor
idivb
std
adcb
xor
aam
scas
sbb
test
inc
pop
mov
jns
jmp
jl
out
mov
and
test
mov
xchg
jbe
enter
dec
jae
xor
and
out
jo
repnz
in
outsl
mov
incl
in
loop
cmp
pushf
add
clc
jp
pop
inc
xchg
and
sbbb
xor
call
push
push
xchg
loopne
daa
outsb
inc
add
add
jns
sub
push
aaa
sub
and
jmp
sub
in
jne
in
ret
pop
mov
mov
movb
and
imul
mov
notb
pop
data16
sbb
std
cltd
xor
decb
std
mov
out
movb
xor
adc
xor
mov
out
mov
loop
in
into
xchg
mov
jno
fnstcw
push
inc
fldcw
jp
repnz
out
mov
lods
popf
dec
and
cmp
and
push
inc
pop
or
arpl
xchg
adcl
mov
les
lods
pop
sahf
clc
fstl
and
test
ljmp
jg
cli
out
fdivrl
mov
mov
lcall
sbbb
icebp
jecxz
adc
inc
jecxz
adc
dec
mov
addb
xor
cmp
sahf
lcall
imul
fcompl
cmp
or
push
jbe
jnp
loop
mov
cmp
imul
push
lea
mov
pop
repz
das
sub
sbb
pop
mov
addr16
es
shrb
xchg
hlt
lahf
mov
add
fisttpll
ret
out
shll
vorpd
jns
pop
sbb
dec
jl
leave
push
and
sub
mov
xchg
lds
or
sahf
and
jmp
shlb
pop
repnz
or
jmp
jl
jge
jno
add
icebp
dec
xchg
pop
fistpll
adc
push
jmp
sbb
pop
dec
rep
sbb
divl
sub
sub
adc
push
xor
xor
enter
test
sub
jns
or
repz
add
pusha
int3
pop
ret
in
sub
pop
fiaddl
fisttps
pop
mov
mov
sahf
call
inc
adc
int3
adc
sti
or
movl
jp
pop
jae
loop
js
adc
mov
sbb
jp
inc
push
mov
icebp
pop
dec
xor
jge
rolb
sbb
out
pop
push
fldenv
cmp
clc
loope
mov
cltd
xchg
sbb
mov
incb
adc
out
in
ret
jne
mov
lahf
outsb
xchg
jne
mov
mov
add
out
mov
bound
push
test
stc
mov
mov
xchg
dec
xchg
push
push
xchg
jne
xor
mov
xor
mov
jns
jmp
push
inc
mov
cmc
and
ja
inc
sub
jae
cmpsb
loope
mov
daa
push
outsb
js
cmp
jne
dec
and
mov
push
xor
aas
fildl
jecxz
mov
mov
inc
in
mov
add
sub
push
pushf
arpl
incl
jae
lret
xor
xchg
lcall
xor
or
or
mov
dec
push
andb
sar
fldcw
cmp
adc
jge
int
sahf
dec
pop
les
outsl
dec
hlt
lahf
cli
daa
lahf
daa
std
fisttpl
jns
adc
pop
push
popa
xor
sahf
test
clc
jle
xlat
fisubrs
xchg
push
jp
inc
sbb
in
int3
cwtl
aaa
sbb
mov
and
lcall
sbb
aam
pusha
ja
test
je
jg
mov
shl
cmp
jb
out
cmovp
out
and
and
pop
es
xlat
and
mov
sti
push
ja
shlb
mov
dec
cmp
mov
in
add
mov
adc
ror
movl
popa
cmp
jno
pop
jmp
sbbl
icebp
cltd
outsb
or
dec
fnstsw
xchg
stos
pop
push
jge
xor
dec
addl
sti
jg
xchg
mov
inc
xchg
test
push
mov
les
call
add
lods
xchg
ficoml
popa
rclb
iret
sub
push
addb
mov
movsl
repnz
pop
inc
jl
divl
roll
popa
aam
and
xchg
xor
jb
stos
adc
daa
mov
adc
test
fcompl
inc
stc
push
cmp
pop
stc
jb
jecxz
push
stos
add
push
fcompl
adc
inc
lret
stc
call
lahf
pop
bound
loopne
mov
and
leave
mov
adcl
pop
data16
jge
xor
jne
xor
cmp
addb
std
sub
out
pop
shll
cmp
and
mov
xor
das
fs
rcr
dec
mov
mov
jecxz
iret
lock
test
sub
aad
outsb
decb
rcll
mov
sarb
lcall
jo
dec
and
sub
lcall
rcr
cld
adc
mov
ss
sbb
stos
lea
xchg
mov
jae
sub
out
sahf
hlt
cmp
fs
mov
js
mov
mov
pop
dec
inc
int3
hlt
rcl
je
and
jle
or
das
pop
or
xor
aaa
sbb
pop
cmpsb
cmp
mov
cltd
mov
mov
mov
pop
testb
ja
jnp
fs
pop
or
xor
adc
call
cmp
negl
mov
fmul
xchg
mov
mov
addr16
sahf
js
lcall
movsl
jbe
adc
gs
stc
je
pusha
test
inc
jbe
cmp
xorl
pop
sbb
cmp
aam
fwait
cmp
rorl
sbb
ror
mov
xchg
out
push
movsb
in
inc
ret
xchg
call
je
aad
out
rcrb
aas
test
in
dec
cltd
sarl
lock
adc
inc
pop
lock
lahf
loop
test
fistl
call
and
movsl
sahf
mov
lret
pop
jb
and
mov
shr
rcll
cwtl
sbb
stos
mov
insl
ja
push
jge
xchg
repz
lahf
xchg
in
inc
push
xor
xor
call
dec
push
fnsave
jns
inc
dec
push
pusha
lods
pop
scas
and
loop
push
adc
loop
jp
shlb
fnstenv
jecxz
dec
sub
mull
inc
push
pop
or
scas
push
add
ljmp
rcrb
inc
mov
push
gs
push
jge
mov
hlt
in
cmc
jle
push
inc
dec
cltd
imul
jecxz
es
sbb
aas
dec
dec
ret
js
out
sbb
orl
lods
sbb
adc
or
sub
xchg
jbe
imul
jo
jns
movsl
adc
jp
int
xor
inc
xchg
cmpb
xchg
dec
or
push
lds
bnd
sti
lock
pop
adc
pushf
sub
pushf
pop
das
pop
xchg
and
data16
imul
loopne
repnz
xor
lods
leave
fdivs
test
mov
sbb
mov
xor
movsb
mov
inc
xchg
cmp
jecxz
movsl
fstps
add
pop
flds
ficoms
int3
sub
insb
fs
adc
pop
and
pop
inc
mov
add
lds
adc
mov
gs
lret
rol
cltd
outsl
mov
xchg
sbb
ret
sar
xchg
inc
and
jg
enter
cmp
ljmp
xor
repz
inc
mov
data16
int3
popw
dec
mov
fs
pop
pop
mov
cmpsl
pop
mov
pop
mov
icebp
rcl
pop
push
aas
cmpsl
div
cmpsb
cmpb
cli
unpcklps
into
mov
je
in
pop
fidivs
push
mov
jno
inc
push
aas
push
scas
loop
dec
mov
fistpl
xor
mov
in
aas
pop
fcoml
loop
push
sub
push
int
ss
mov
sub
sbb
int3
lret
and
and
or
mov
dec
xor
cltd
fwait
dec
inc
insb
scas
add
xor
mov
inc
lock
pop
cmp
fisttps
dec
jno
xor
inc
and
lds
enter
add
repz
sbb
mov
jl
cmp
ds
clc
xor
xor
pop
push
sbb
pop
je
mov
inc
sbb
fbld
aas
pushf
mov
cmp
imul
xchg
imul
scas
cmp
cltd
or
cwtl
cmc
nop
in
rcr
repnz
lock
test
adcl
aam
mov
ljmp
stos
pop
paddw
mov
cmp
adc
pop
mov
iret
xchg
outsb
and
int
scas
sub
xor
dec
pop
scas
sub
pop
dec
xor
jo
mulb
mov
loopne
test
jno
sbb
adc
imul
pop
rol
xchg
std
ljmp
int
jb
mov
data16
sub
xchg
add
outsb
scas
mov
out
cwtl
iret
daa
loop
out
ud1
push
fcmovu
fwait
ret
sahf
sbb
cmp
flds
icebp
das
mov
lds
mov
mov
dec
call
push
sub
test
xchg
sub
sub
jle
xor
notl
xchg
dec
das
dec
sbb
bound
pop
dec
push
or
shrb
pop
js
inc
lea
ljmp
pop
adc
subb
jno
lcall
loope
ss
je
leave
mov
mov
sub
dec
sbb
add
jecxz
mov
pop
enter
imul
cwtl
repnz
mov
inc
inc
std
imul
xchg
outsl
xchg
jge
scas
pop
sarb
aaa
cmp
or
mov
inc
mov
sub
xchg
ja
mov
mov
aad
pushf
mov
movsl
rcrl
scas
jnp
fsubp
test
or
nop
mov
xchg
sbb
test
inc
jmp
jl
dec
and
push
mov
stos
inc
fidivl
mov
adc
xchg
mov
mov
adc
jne
dec
and
add
ficoms
add
fs
push
mov
mov
lcall
test
aaa
add
in
out
lods
pop
cmp
subl
mov
out
cmp
mov
sbb
movq
pop
mov
hlt
test
hlt
fcomps
xor
xor
mov
sar
sub
or
mov
insl
xchg
xchg
sahf
outsb
aad
jecxz
mov
sub
dec
add
in
adc
ja
sbb
and
fldl
xchg
mov
cmp
fimull
fcoms
mov
ljmp
sub
or
fiadds
push
call
lret
lock
mov
dec
cmp
leave
fcmovbe
out
rol
xor
scas
inc
fistl
mov
aaa
adc
sbb
psubsb
and
adc
lods
pusha
movsl
inc
std
popa
mov
cmpsl
or
add
bound
sub
jo
sbb
xlat
push
mov
iret
cmp
or
sub
jno
out
jmp
or
arpl
out
pop
sub
aad
jge
test
mov
sub
or
adc
jmp
push
stos
loope
out
or
in
pop
add
or
push
or
sub
sub
iret
movsl
xchg
in
out
push
nop
ljmp
into
push
popw
aas
daa
icebp
add
leave
mov
daa
repz
repnz
dec
jae
popa
ja
sbb
sarb
dec
xor
jmp
jbe
enter
push
popa
cmc
jmp
shl
insl
sahf
push
or
dec
mov
clc
adc
and
cmpsb
fwait
jg
scas
adc
lods
les
int
adc
push
test
shrb
mov
test
fcmovb
dec
sbb
gs
pop
dec
dec
imul
shl
movsb
lock
push
sti
mov
aaa
push
out
xchg
bound
adc
sub
and
push
or
sbb
push
daa
pop
aam
dec
mov
cs
je
mov
sub
pop
test
loop
xchg
inc
pop
mov
out
pop
adc
dec
or
and
pop
cmc
sahf
fs
shl
scas
cmp
ljmp
pop
rep
fldenv
je
or
andl
ret
cmp
pop
jno
mov
gs
lods
xchg
jnp
aas
push
jp
sub
outsb
aas
or
andb
push
mov
dec
lods
test
dec
pop
xchg
mov
dec
jg
fsubs
outsl
adc
jb
cmp
mov
cmp
out
dec
lret
and
adc
pop
icebp
je
fcmovbe
or
dec
fisttpll
ja
cli
incl
outsl
jecxz
int3
ja
jmp
add
xchg
mov
into
lock
mov
push
add
shr
cmp
nop
lods
cmpsb
xchg
add
inc
xchg
hlt
dec
insl
rorl
pop
or
mov
sub
pushf
adc
and
popf
fstpt
nop
adc
dec
hlt
mov
je
rcl
lock
mov
cmpsl
das
fmull
jl
leave
lock
fwait
lods
inc
les
icebp
cld
aam
adc
mov
xchg
pop
pop
mov
test
adc
out
xchg
mov
and
mov
sarl
pop
jb
and
fcompl
inc
xchg
repnz
and
out
mov
adc
pop
sub
jae
in
sub
mov
subl
or
pop
mov
cs
aas
notb
mov
es
pop
frstor
cmpsl
adc
js
pop
push
lds
stos
fstpl
sbb
jno
sbb
scas
dec
fstps
xlat
mov
mov
ja
int
pop
lods
jae
setg
cltd
cmc
int
push
mov
popa
sbb
popf
stos
pop
cmc
mov
xor
cmp
xchg
fnstcw
mov
and
dec
movsl
ss
dec
push
or
jnp
outsb
mov
sub
xchg
idivl
push
jle
into
xchg
push
add
push
repz
xor
jg
cwtl
lcall
add
icebp
mov
subl
pop
jmp
and
adc
pop
cltd
pop
movl
pop
mov
ss
mov
loopne
push
add
jge
gs
neg
fisttps
pop
ljmp
lods
fiaddl
inc
rcrb
ljmp
mov
das
or
rolb
cmpsl
pop
push
mov
jb
fidivrl
addr16
setle
and
not
sbb
mov
pusha
inc
and
out
ret
mov
xor
jmp
neg
int3
add
add
repnz
mov
pop
int3
out
or
pop
pop
shl
inc
fisttpll
or
or
inc
insl
rolb
xor
push
lret
sbb
push
xchg
jmp
cmp
lret
adc
test
int
mov
in
arpl
jnp
gs
sub
das
sbb
cmc
xor
mov
cmp
js
xchg
sbb
xchg
icebp
mov
sar
xor
fdiv
je
mov
sub
inc
dec
ljmp
shlb
push
clc
cmpsb
rorl
in
and
ret
xorl
test
fbld
ja
mov
xor
mov
pop
ljmp
ja
pop
push
call
lods
je
sub
push
aas
je
scas
mov
outsl
mov
fs
push
sub
test
sub
nop
aad
add
dec
sbb
loope
xchg
xor
xchg
lret
pop
mov
pop
das
js
icebp
dec
test
mov
push
bound
in
into
insl
aam
loope
adc
or
mulb
add
jbe
andl
cmp
enter
in
mul
dec
fs
aaa
popa
fwait
pop
in
int
inc
or
jp
or
pushf
lret
sbb
push
mov
xchg
out
cmp
and
mov
push
lds
out
je
pushf
sub
loope
imul
mov
jno
jg
jmp
adc
adcl
inc
bound
dec
mov
mov
jg
andl
xchg
jge
movsb
sub
aas
vcvtsi2ssl
pop
pop
push
lods
ss
out
lret
iret
push
mov
dec
inc
sar
push
add
jecxz
ret
into
shll
outsb
jecxz
lahf
mov
jno
std
insb
pop
fldenv
dec
test
sbb
mov
inc
jb
pop
scas
orl
loop
xchg
mov
lea
add
das
data16
jp
xchg
call
xchg
outsb
ret
and
sahf
mov
movsb
jo
popa
dec
test
push
popf
pushf
fwait
xchg
dec
pop
or
mov
mov
cmc
ret
add
js
sbb
jge
out
mov
push
and
push
lret
in
dec
adc
andb
repz
ss
fimuls
mov
xor
pop
stos
add
jno
cltd
jb
adc
es
insl
adc
aas
addb
push
jle
andnps
pop
gs
dec
mov
cltd
add
cmpsb
test
pop
enter
or
adc
stos
jl
roll
das
cs
clc
jnp
in
das
sub
cmpsb
xchg
daa
ficomps
add
or
xchg
xchg
dec
mov
cli
fisttps
test
xor
test
jp
imull
std
pop
lds
mov
adc
arpl
push
bound
cmp
fwait
mov
testl
pop
rolb
cmpsb
aad
xchg
xor
push
test
inc
xchg
add
lea
stos
bound
jns
shlb
or
bound
mov
dec
and
subl
push
and
push
movsb
fldcw
pop
inc
jle
mov
add
and
pop
or
lock
push
sbb
mov
sub
fnsave
inc
stos
rclb
inc
push
mov
push
push
shl
ja
inc
sti
add
or
push
jo
lods
jbe
jo
jae
out
in
sub
imul
push
test
jae
in
imul
inc
xchg
xchg
sub
leave
test
xchg
movsbl
sbbl
fnstcw
mov
outsl
sbb
movl
adcl
jne
push
push
clc
shl
jmp
adc
cmpsb
aad
ret
pusha
xor
sbb
iret
sub
adc
adc
sbb
sahf
lods
mov
sub
rolb
sbb
dec
pop
gs
mov
mov
or
cli
ljmp
mov
fcmovb
test
mov
sub
fbstp
aad
add
cltd
frstor
pusha
adc
and
hlt
inc
sub
pop
sahf
fildll
in
cmpsl
fisubrl
add
add
daa
loop
pop
ret
xlat
imul
repz
leave
stc
and
int
inc
push
popa
pop
cli
or
inc
cltd
add
rorl
sbb
mov
adc
popa
dec
ljmp
mov
insb
sahf
ds
xor
es
in
sub
out
out
push
scas
ljmp
jae
inc
mov
jnp
fcomp
or
add
lea
sbb
repz
leave
mov
mov
lods
movsl
cmpsl
imul
sub
loope
jecxz
pushf
adc
xor
sub
add
and
ja
xor
add
clc
dec
int3
int
fwait
sarl
dec
movsl
mov
lods
dec
pop
cld
xchg
xchg
sahf
call
adc
inc
std
pop
lods
dec
lods
stc
inc
outsl
in
cmp
adc
mov
adc
icebp
fst
jmp
mov
sub
mov
cmpsb
mov
lahf
pop
bound
mov
aaa
lds
or
pop
fstpt
mov
pop
lret
stc
jmp
xchg
fstp
dec
iret
arpl
mov
push
aaa
xlat
filds
in
mov
pop
cmpsb
add
or
push
js
pop
push
das
insb
xor
jmp
sar
call
fcompl
xchg
pop
xchg
inc
or
and
add
mov
lods
fs
loope
mov
cmp
cmp
mov
shlb
jo
mov
mov
loope
clc
rcr
adc
mov
mov
out
mov
fmul
mov
pushf
pop
cmp
add
or
add
call
cmp
pop
add
dec
jp
jne
adc
jp
stos
or
test
jg
jmp
test
xlat
xor
jno
inc
stc
sbb
imul
nop
divb
roll
and
lcall
xchg
or
or
cmp
cmpsl
dec
jno
jbe
xchg
dec
jge
jnp
mov
jp
add
xlat
iret
jl
insb
es
insb
shl
cmp
loop
jo
insb
sti
iret
inc
ret
andb
lcall
sbb
movsb
or
and
rol
gs
in
mov
fs
aad
add
push
fwait
lcall
andb
dec
jo
mov
xchg
rolb
into
sti
fwait
test
insl
pushf
fs
cmp
pop
fisubrl
cmc
int
clc
add
adc
sahf
push
paddb
daa
jl
mov
loope
nop
xlat
imul
mov
jecxz
and
push
xor
mov
push
sti
in
sahf
mov
sahf
nop
pop
and
subl
call
mov
pop
in
inc
push
mov
outsb
jbe
fiadds
or
pushf
push
push
shrl
pushf
stos
push
jo
pushf
std
sbb
add
xor
popf
stc
xor
lock
dec
iret
lret
icebp
popf
lds
pushf
dec
in
mov
stc
sub
push
mov
fdivrp
mov
add
in
jo
incl
push
add
and
dec
sub
inc
ljmp
call
mov
push
pusha
mov
cmc
andb
mov
sub
adc
inc
xchg
movsb
xor
mov
mov
loopne
sbb
mov
dec
loope
inc
lret
xor
adc
sub
push
adc
icebp
mov
cmp
fidivrl
mov
cmp
call
adc
dec
cmp
movsb
or
jbe
mov
mov
popf
xchg
in
and
cmp
sbbl
dec
mov
xchg
dec
dec
clc
inc
lret
fbld
es
cmp
pop
cli
mov
cvtps2pi
shlb
jmp
jl
push
nop
pop
addr16
insl
cmpsl
rclb
cmp
mov
cs
sbb
xchg
jo
mov
insb
pop
xorl
lret
and
lcall
jne
xor
bswap
adc
into
iret
mov
out
xchg
mov
cmp
mov
int3
mov
mov
mov
iret
jne
sbb
enter
pushf
adc
xchg
call
fdivr
mov
cs
xor
das
in
jge
dec
int
inc
cli
hlt
out
in
loopne
call
lret
sbb
stos
aas
cmp
add
aam
dec
pop
push
pushf
or
cmp
ja
jo
lock
dec
insl
enter
xor
or
gs
in
iret
cmpsl
bound
xchg
sub
cmp
out
push
arpl
cmpb
jecxz
adc
addr16
mov
push
xlat
pop
pop
dec
fwait
lret
pushl
insb
adc
pop
xchg
mov
movsl
jbe
xchg
mov
lods
ja
push
das
mov
adc
mov
mov
cmp
scas
stc
xor
mov
jo
and
sbb
pop
cwtl
lret
sub
push
cmp
jge
add
sti
mov
pop
repz
jae
jo
sbb
cmp
adc
inc
lds
add
push
pop
sbb
xor
pop
ret
leave
and
adc
std
fsubrs
sbb
sub
ret
mov
fcoml
xchg
add
lret
loop
adc
out
mov
mov
mov
adcb
cmpsb
pushf
adc
hlt
movsl
cwtl
cmp
mov
loopne
out
dec
sbb
imul
pop
push
sbb
xsave
mov
pop
jle
inc
and
into
shll
aad
xchg
sarb
in
rcr
aas
adc
mov
repnz
inc
insb
mov
mov
divl
jg
sub
push
fwait
lahf
ret
int
xchg
pop
subl
shll
sbb
sub
imul
mov
stos
mov
push
out
push
cmpl
inc
pop
test
jl
sahf
sub
or
xchg
ljmp
mov
mov
xor
mov
adc
cmp
aas
dec
cmpsl
jo
cmp
lods
scas
repnz
in
arpl
sti
mov
bound
mov
sbb
adcl
mov
arpl
sbb
jle
lea
mov
push
cmpsl
pop
roll
jp
jne
jl
xor
movsb
sub
stc
popa
repz
mov
sbb
in
jbe
adc
cmc
mov
insl
xchg
cltd
lods
xorb
int3
xchg
mov
pop
das
shlb
jno,pt
push
push
in
pop
test
das
inc
inc
stos
ljmp
cmp
aas
mov
mov
aaa
mov
arpl
adc
dec
jl
stos
out
mov
or
rclb
ret
and
cmp
jl
fisubs
cli
sbb
out
bound
mov
ss
jbe
int3
outsl
cmp
imul
xchg
or
leave
mov
or
fs
mov
pop
xchg
pop
xchg
sub
push
dec
lahf
push
push
sbb
cli
sar
idivl
xchg
xor
push
jb
test
sbb
xchg
rcll
pop
mov
sub
mov
pop
adc
push
repz
jecxz
pop
mov
ljmp
pop
lock
sub
std
xor
pop
pushf
sub
adc
and
dec
lahf
mov
push
test
push
bound
add
push
fimull
iret
xor
push
xchg
testl
xchg
jecxz
ja
and
mov
ss
mov
push
repz
push
iret
test
xor
xchg
adc
rcl
loope
and
xor
cmpsb
mov
mov
clc
mov
mov
lret
sub
jns
insl
inc
mov
mov
jbe
lds
mov
aaa
insl
es
loop
inc
arpl
sbb
and
cmpsb
adc
in
int3
xchg
sub
add
das
stos
push
cmp
pop
and
pop
push
sbb
cmp
and
mov
mov
and
pusha
popf
push
mov
xchg
xchg
adc
xor
xor
cmpsb
lret
adcb
inc
int
pop
cld
cs
les
mov
pop
xchg
mov
dec
add
xlat
popf
sbb
nop
jmp
jg
inc
and
jl
cmp
inc
es
jecxz
lret
cmpsb
fidivrs
outsb
jp
xchg
sbb
mov
xor
ds
mov
xchg
addb
push
mov
adc
sub
push
clc
out
push
inc
fstl
out
sarb
aaa
es
mov
jo
dec
adc
cltd
xor
repnz
hlt
cmc
pusha
test
out
ljmp
lret
call
mov
rolb
or
sub
int3
ret
popa
inc
push
add
fnstsw
fadd
add
insb
daa
into
jmp
sahf
ljmp
sub
lea
lahf
inc
push
sub
jno
aam
out
mov
outsl
jne
in
fstps
pop
es
push
fdivrs
int
inc
adc
cmpsl
fninit
pop
jp
ja
jbe
iret
pop
xchg
sub
push
pop
push
mov
cmp
cmp
leave
mov
adc
push
adc
cmpsb
jecxz
fs
pop
scas
ficompl
xchg
push
dec
dec
jne
lret
int3
mov
adc
sbb
sbb
jg
sti
scas
xchg
es
cli
mov
xchg
push
aas
push
and
and
outsb
pop
xor
aas
cmp
scas
and
shl
scas
and
xor
sti
jge
mov
mov
push
adc
inc
loop
pusha
xor
jmp
clc
fs
inc
xchg
xor
out
cs
mov
mov
pop
dec
cmpsb
leave
pop
cli
sub
fldcw
adc
sbb
mov
xor
mov
sbb
xorb
rol
aaa
scas
inc
sahf
adc
xchg
fldt
das
push
mov
cmp
mov
fstl
int
cmp
fnsetpm(287
stos
imul
ja
cli
mov
aas
cmp
xchg
sub
fcmovu
and
sbb
mov
pop
sbb
test
and
jnp
movsl
lret
ret
daa
xchg
stc
xor
xchg
shll
cmc
pop
jae
fucomp
pslld
insl
cltd
lahf
aaa
shlb
dec
dec
fisubrs
push
cmp
inc
mov
bndldx
add
cs
jb
icebp
pop
lret
push
stos
sbbl
sub
and
adc
dec
add
lods
idivb
arpl
add
adc
dec
repz
push
cli
mov
sbb
push
call
sub
icebp
xchg
mov
push
xchg
testl
loope
cltd
out
mov
lret
xor
popa
shll
cltd
mov
in
add
push
in
mov
push
loopne
in
add
push
pusha
adc
jl
mov
lcall
sub
mov
lock
in
xor
insb
loop
popa
out
xchg
pusha
movsb
or
adc
lret
daa
cmp
cld
js
or
push
jne
adc
pushf
xchg
push
scas
and
pop
mov
jae
sub
mov
dec
push
mov
orl
dec
xchg
pop
popf
pop
int
cmp
xchg
loop
adc
repz
add
push
enter
pop
repnz
mov
movsb
and
lahf
inc
jno
out
lret
fld
and
test
std
sbb
add
outsl
ss
mov
mov
fwait
pop
daa
dec
adc
icebp
mov
aad
cmp
xchg
test
pop
cmp
and
xor
roll
cs
pop
mov
ret
dec
jg
decb
pusha
jge
lock
adc
test
dec
jecxz
mov
sub
pop
or
imul
lds
fcomps
insb
mov
add
sub
enter
inc
lock
ss
das
adc
push
jl
and
in
or
and
dec
mov
int3
mov
add
sbb
or
sub
lret
movsl
mov
push
mov
lea
ja
cmp
add
ror
push
sub
scas
dec
call
sarb
inc
out
int
or
sbb
js
inc
into
insl
xchg
jb
push
cwtl
and
std
mov
mov
scas
mov
mov
insb
or
scas
in
lea
push
lods
addr16
ljmp
cmpsl
push
dec
ja
in
or
mov
pop
hlt
xlat
push
pushf
leave
cmpsb
test
mov
sbb
inc
gs
stc
xor
out
or
inc
pop
dec
mov
dec
rcrb
mov
adc
clc
mov
int
adc
fiaddl
in
clc
lea
gs
cwtl
loopne
dec
pop
mov
aam
pop
stos
jno
adc
adc
add
mov
imul
ja
push
adc
jle
adc
xor
xor
jmp
xchg
fidivrs
pop
mov
push
or
ja
leave
ljmp
repnz
daa
adc
test
pop
sub
xchg
ds
sub
or
repnz
or
jo
xchg
out
lcall
std
jmp
jae
arpl
in
outsl
cmpsb
pop
adc
jecxz
out
cmp
loope
xchg
mov
jne
insl
and
pop
lahf
lret
add
aas
cmp
stos
pop
rolb
ret
ret
mov
insl
inc
pop
adc
imul
js
xchg
incb
ret
adc
aad
mov
stos
jmp
cmc
xchg
outsb
xchg
mov
fs
mov
in
sahf
test
push
test
cli
xchg
cmp
or
mov
inc
cld
and
fsubrs
dec
arpl
add
cmp
cmp
dec
lea
cmp
cld
xor
pop
daa
pop
xchg
iret
movsl
in
je
fsub
cmp
scas
mov
or
out
insl
shl
into
push
gs
or
scas
out
adc
dec
inc
or
call
fdivrl
or
pop
loop
pop
cmp
aam
popa
push
stos
dec
sbb
call
stos
dec
adc
in
lahf
pop
and
sbb
mov
mov
jle
xor
add
sbb
cmpsb
mov
stos
xchg
or
push
jle
enter
insb
and
dec
mov
inc
mov
push
xor
cmp
addr16
jg
mov
mov
push
or
add
jae
lea
jbe
addb
aam
icebp
das
cmp
sub
dec
mov
outsb
xor
movl
and
imul
pop
repz
outsl
bound
push
jnp
daa
pop
add
movsl
push
jbe
sarb
mov
lods
ss
lahf
push
cmp
mov
mov
jbe
pop
sbb
arpl
inc
lret
adc
insl
dec
loopne
push
pop
jecxz
daa
push
and
inc
test
push
subl
or
add
adc
push
jge
iret
dec
pop
push
adc
xlat
xchg
inc
cmp
stos
aam
adc
xchg
test
daa
ljmp
mov
in
mov
or
push
es
shrd
arpl
fdivr
mov
push
leave
repz
mov
call
jns
aad
icebp
ffree
and
lahf
popa
mov
sti
js
out
and
and
movsl
test
mov
popf
std
mov
pop
loopne
test
push
dec
orb
push
in
out
orb
sar
mov
pop
in
je
call
mov
pop
inc
addb
aam
xor
push
addr16
add
cmp
ds
push
mov
mov
jl
mov
xchg
pop
or
push
idivl
jmp
push
mov
sub
cld
into
cmp
imul
das
gs
inc
pop
mov
sti
ret
push
fcomip
pop
mov
test
push
adc
aaa
jp
add
insl
inc
jne
not
xchg
sbb
lret
add
pop
adc
scas
insl
xor
pop
leave
repz
in
mov
test
call
mov
jecxz
or
mov
mov
outsl
sub
cwtl
popa
cmpsb
mov
lods
sub
cmp
mov
inc
pop
sub
sti
fdiv
xchg
rolb
leave
cmpsl
sub
add
popa
mov
jno
lea
mov
or
xchg
icebp
notl
xchg
mov
loope
jno
aaa
mov
stos
sbb
jns
push
sbb
scas
jg
jne
in
aaa
in
xchg
push
mov
dec
mov
or
imul
icebp
and
mov
fidivl
mov
out
sbb
add
lret
mov
mov
sti
sbb
adc
adc
fsubrl
push
cmpsl
cmp
scas
sbb
aam
iret
push
inc
ds
xchg
mov
cmpsb
lret
test
push
cs
pop
add
pop
gs
leave
nop
out
imul
xchg
dec
pop
cmp
idivl
nop
icebp
inc
xchg
nop
bnd
rcl
bound
flds
fdivp
dec
mov
push
aas
sahf
insl
shr
mov
scas
jno
bound
mov
mov
mov
je
loopne
xchg
push
xor
cmp
movsl
xor
xorb
out
sahf
aad
test
mov
sub
sbb
sub
xor
fs
std
sbb
or
fs
or
cmp
push
cs
mov
inc
mov
daa
lret
leave
push
stc
push
aaa
mov
cmpsl
adc
imul
xor
mov
fisttps
jb
ss
cwtl
fldt
loope
inc
inc
mull
fnstsw
mov
div
xor
insl
or
test
pop
sub
inc
sti
sti
dec
mov
and
pop
fmuls
pop
push
outsl
pop
sbb
cmp
mov
lods
push
lods
lahf
rorl
push
rolb
xor
sub
fsts
leave
andb
mov
mov
rolb
cld
push
add
test
in
and
mov
negb
add
js
pusha
jae
aam
mov
insb
xchg
jae
insl
adc
cmp
addr16
push
lods
xchg
test
ret
mov
loop
cmp
xchg
sub
jnp
add
cmp
pop
cs
lcall
xchg
mov
into
fwait
push
ret
dec
stos
pop
stc
rolb
push
loopne
and
not
mov
je
xchg
sbb
test
clc
popa
mov
pop
leave
xor
fst
out
xor
xchg
xchg
mov
les
cli
cmc
mov
in
jb
xchg
sbb
stc
rorl
dec
daa
mov
shrb
xchg
cs
aad
aaa
cmpsb
insl
push
dec
and
push
stos
ja
rorl
push
jg
dec
repnz
cmc
mov
pop
add
aas
mov
pushf
mov
mov
ljmp
cmp
std
push
sbb
out
stc
mov
mov
add
dec
xchg
mov
lahf
ja
and
out
aad
push
cs
loop
test
sbb
roll
push
push
fbstp
jns
or
or
jns
or
test
fwait
inc
cltd
or
popf
out
stc
ret
out
out
pop
mov
mov
mov
in
sub
sub
jae
mov
std
push
sub
inc
clc
sbbl
inc
or
and
mov
mov
inc
jns
jno
sub
das
jp
mov
push
mov
pusha
or
inc
in
mov
adc
xor
lcall
setne
je
jo
mov
ret
enter
add
orb
into
test
popa
mov
icebp
int3
or
mov
sbb
or
call
xchg
cmp
lods
cmp
stos
and
cmpsb
xchg
xor
add
stos
jne
sub
sub
push
enter
jnp
jecxz
rol
dec
cmpsl
jl
scas
cmpsb
mov
call
add
mov
mov
ds
inc
and
cmp
pop
repnz
pusha
fmull
jp
xor
push
mov
xchg
and
cmp
xor
or
ret
mov
lret
xchg
fdivs
das
adc
jl
jae
jge
cmc
ja,pt
mov
mov
cltd
dec
fwait
aam
adc
push
es
cmpsl
cmp
aas
mov
jno
jg
cmp
lods
repnz
mov
add
xlat
lret
mov
push
outsl
sbb
cli
xor
mov
mov
imul
in
add
out
cs
ret
bound
pcmpgtw
stc
cmp
jo
aaa
push
xchg
shll
xor
dec
data16
dec
fs
rcll
stc
popa
pop
push
call
inc
js
testb
sbb
adc
test
lock
jnp
mov
and
push
decb
pop
push
in
xchg
insl
adc
fisubrl
sbb
xor
fisubs
adc
lret
in
cwtl
xchg
scas
dec
xchg
enter
stos
ja
xchg
cmpsl
add
stc
jnp
and
icebp
mov
cltd
leave
mov
sbb
cli
lret
push
xor
aas
cmp
clc
jae
mov
mov
nop
jo
adc
dec
mov
arpl
sarl
cld
mov
and
xchg
scas
push
sub
jnp
js
or
add
pop
sbb
or
sti
fstpl
push
pop
movsl
pop
and
and
xlat
lds
lea
jo
pop
cld
je
push
fwait
cmp
dec
int
je
jne
aam
mov
dec
pop
adc
inc
xchg
push
mov
popa
xor
lret
mov
add
mov
and
xlat
dec
out
ss
lahf
xchg
sbb
mov
mov
ja
jl
pavgb
aas
inc
out
loopne
push
lcall
shl
repnz
add
inc
std
es
outsl
and
mov
loope
in
and
out
sti
int
sbb
jecxz
lret
bound
and
fcomp
adc
cmp
pop
decb
ljmp
or
mov
stos
mov
mov
cmp
pop
cwtl
mov
and
push
sti
xchg
xchg
pop
es
out
mov
pop
jo
mov
mov
xor
enter
adc
or
pop
and
in
adc
add
dec
cmc
aas
mov
clc
test
xlat
cltd
fdiv
dec
loop
enter
shl
shrl
lods
addr16
mov
add
aaa
xchg
mov
hlt
pop
inc
inc
xchg
pop
mov
sub
ret
jo
dec
pushl
xor
dec
xor
ror
cmp
pop
jmp
mov
lret
xlat
aas
adcl
inc
call
jge
push
xor
sbb
jp
dec
in
cld
pop
jp
outsb
outsb
xor
aam
mov
push
push
aas
scas
xchg
push
sbb
ror
out
push
or
push
test
add
fistpll
push
or
xchg
bound
fdivrs
lret
xchg
cmpl
je
jb
clc
mov
adc
fwait
out
sub
lods
es
int3
leave
xchg
pusha
jb
shl
add
xor
aam
in
lea
xchg
mov
adc
jns
imul
sub
bound
mov
adc
adc
ss
mov
xor
push
fidivrs
pop
ret
lock
push
sbb
mov
sbb
insl
xor
lds
and
push
sbb
mov
sbb
arpl
ret
pop
add
lods
or
jp
and
popl
insl
mov
add
jecxz
jge
loope
in
lods
push
push
repz
pusha
adc
mov
add
add
dec
int
or
sbb
xor
imul
jbe
ret
int3
mov
dec
mov
ss
xchg
pop
xor
sbbl
jmp
shr
shl
aaa
testl
lret
adc
and
push
adc
in
clc
mov
mov
pop
mov
mov
rorl
imul
lea
nop
int3
xchg
mov
subl
sti
into
insb
insl
or
ret
js
movsl
aaa
or
icebp
cli
clc
sbb
lret
jg
sbb
xchg
stos
sahf
in
sub
scas
xor
inc
lea
ds
mov
test
mov
popa
mov
and
push
mov
clc
es
insb
daa
dec
insl
movsb
sub
sbb
daa
push
or
out
leave
test
lahf
pop
mov
mov
mov
adc
das
icebp
insb
sahf
jnp
popa
outsb
jns
pusha
mulb
dec
push
push
push
jle
jge
xor
pop
dec
xchg
jno
loope
cmp
sbb
pusha
mov
pop
or
xor
js
mov
lcall
pushf
mov
clc
jp
cmp
xchg
or
fstp
aam
dec
insl
mov
testb
pop
call
mov
orl
add
add
in
push
fcoms
mov
pop
out
inc
mov
jne
xlat
pop
add
sbb
and
xchg
mov
xor
shrl
imul
add
push
xchg
xor
test
xlat
xchg
faddl
pop
mov
in
test
imul
mov
nop
ret
adc
call
push
jg
xchg
jge
dec
addr16
pop
jno
movsl
ret
mov
jle
les
dec
pushf
inc
pop
push
popf
inc
stos
out
scas
das
insb
clc
lcall
mov
push
or
dec
data16
xor
lret
in
lods
cmc
movsb
js
jmp
es
mov
shl
push
lea
pusha
sbb
shr
or
push
xchg
mov
mov
cltd
jp
xor
jp
mov
fwait
pushf
pop
xor
xchg
cmp
lea
xchg
popf
test
insl
test
pushf
gs
jb
xor
cmpsb
in
xchg
xchg
lcall
pushf
and
or
inc
push
jb
in
inc
or
inc
arpl
adc
inc
push
aas
outsl
sbb
mov
inc
push
loope
push
push
mov
scas
add
mov
cmp
fists
aad
mov
or
scas
mov
in
in
xchg
add
out
pop
in
pop
push
int
repz
cmp
rcrl
adc
cli
add
lods
and
in
add
in
inc
push
push
sahf
inc
mov
insb
jg
iret
fldt
lods
dec
gs
stos
test
hlt
mov
adc
je
push
cltd
lret
imul
repz
push
push
repnz
mov
ficomps
inc
addl
ja
in
lds
adc
xchg
lods
iret
cmp
fstpt
pop
mov
pop
and
jmp
push
jae
mov
in
xor
and
roll
lock
rclb
orl
fdivs
inc
out
jb
pop
test
mov
addr16
mov
lods
mov
pop
mov
xchg
mov
in
sub
push
cmc
rorl
pop
std
in
xchg
pushf
mov
sbb
cmp
in
cmp
repz
pop
xor
pusha
clc
aad
add
jmp
call
push
int
insl
lahf
addl
pusha
lcall
jae
jo
in
incb
imull
jg
arpl
in
in
mov
scas
inc
jle
xor
push
or
and
push
das
or
out
pop
test
outsl
movl
repnz
sbb
inc
xor
cmc
addr16
loopne
call
mov
lea
cs
pop
dec
js
mov
ja
loop
out
jo
ret
iret
jmp
pop
mov
jns
xchg
add
xchg
lods
lret
lcall
mov
les
test
clc
mov
not
mov
push
or
test
push
or
cmc
repnz
std
push
cmp
jb
mov
sub
and
out
inc
pop
les
or
test
sub
sub
test
push
shr
jns
sbb
imul
insl
sbb
mov
xor
loop
cmp
mov
push
lret
add
ss
shl
les
mov
movsb
dec
insb
pop
mov
mov
stos
mov
inc
ljmp
xchg
push
out
adc
fs
mov
xor
pop
lret
ljmp
int
sub
in
cltd
or
roll
xchg
and
popf
sub
dec
lods
jge
clc
sub
jle
pop
je
std
inc
loop
add
push
loope
dec
sbb
adc
test
andb
ror
sbb
mov
mov
sbb
cmp
mov
jnp
adc
out
jno
repz
insl
push
xor
sbb
and
lret
pop
xchg
mov
or
call
hlt
arpl
xor
in
mov
cmp
and
xchg
mov
adc
mov
push
jno
aaa
aad
lret
mov
pop
jns
aaa
mov
repz
aaa
xchg
push
xchg
xchg
test
jmp
cmp
adc
xchg
adcb
jmp
xchg
inc
adc
and
stos
add
and
push
push
andb
rcll
inc
and
imul
imul
popf
ret
ficoml
or
dec
and
pop
xchg
or
popa
inc
lods
repnz
add
jg
sahf
push
jo
and
mov
aad
jae
fs
vpcomd
nop
daa
cmp
push
or
jns
sbb
or
ror
imul
out
push
hlt
jo
push
push
mov
sbb
mov
add
pusha
je
cmc
cltd
xchg
fs
gs
mov
push
out
jl
cli
scas
fcomps
xchg
pop
lock
mov
inc
paddsb
push
pop
arpl
decb
add
notb
insl
xchg
leave
pop
stos
dec
sub
fldln2
xor
pop
inc
xchg
xchg
lds
jecxz
mov
mov
jae
jne
xchg
pop
gs
shlb
pop
cmp
int3
xlat
jne
pop
testl
push
out
fildll
push
das
adc
push
sub
pop
and
enter
mov
push
inc
jecxz
mov
mov
cmp
inc
add
fcmovu
es
dec
cs
popf
idivb
int
scas
std
in
sbb
test
sbb
out
fldenv
mov
rorb
in
call
das
lret
mov
mov
and
ds
shl
mov
push
stos
cmc
scas
test
inc
inc
sbb
lods
jne
popl
and
cmp
jnp
xchg
aas
pop
into
sbb
imul
sbb
xor
repnz
daa
xchg
jmp
dec
jnp
jp
int3
add
pop
stos
xor
mov
fistps
std
mov
popa
in
push
mov
cwtl
xchg
xchg
pop
aam
jo
imul
bound
rcrl
jno
mov
cmpsl
push
adc
xchg
cmpsb
or
rolb
and
pop
scas
fsts
cmp
mov
mov
test
pop
imul
cmp
out
cmc
cli
divb
stc
cltd
call
cs
push
and
fadds
adc
and
fdivr
clc
faddp
rclb
ljmp
gs
mov
aas
imul
inc
add
sub
xchg
fcomp
jmp
xchg
lea
scas
rolb
enter
sub
jl
negl
daa
faddl
imul
jnp
outsb
cmp
xchg
in
int3
dec
into
xchg
xchg
stos
stos
sub
push
jbe
shl
es
sub
pushl
mov
jp
insl
jp
test
jno
xchg
or
mov
lods
outsl
lock
clc
out
and
test
jge
clc
and
test
mov
inc
xor
pop
sub
dec
jbe
xchg
ljmp
pop
shlb
stos
in
jmp
in
mov
pop
and
lcall
loopne
xchg
xor
pop
addr16
mov
testb
sub
add
in
cmpsb
aam
or
adc
lret
imul
jg
outsl
dec
xor
mov
mov
stos
cmp
sub
jb
in
inc
arpl
jns
adc
push
dec
ret
pop
mov
mov
insb
stc
pop
mov
cli
pop
insb
clc
xchg
mov
pushf
dec
mov
xchg
jb
pop
push
lods
jno
iret
jae
mov
loope
testl
aad
notb
push
arpl
test
es
leave
in
jle
mov
filds
lods
or
mov
mov
xchg
in
push
xchg
repnz
aam
xchg
and
hlt
imul
in
leave
scas
jle
andb
cmp
dec
je
in
js
adc
and
je
adc
lret
add
scas
or
movb
sti
mov
sub
dec
fimull
aam
mov
subl
pop
jle
sti
dec
jg
sub
test
inc
mov
in
lret
loope
mov
or
cmp
int3
in
cmpsb
jle
lock
mov
sahf
and
xor
xchg
fiaddl
lock
dec
test
aaa
mov
lock
jbe
sub
loope
test
mov
sub
cld
pushf
mov
test
jne
jb
ret
xor
imulb
cltd
int3
add
shll
mov
mov
fimuls
fildll
push
mov
int3
fidivrl
mov
fwait
or
sbb
mov
mov
les
cld
loope
idivb
xchg
pushf
sbb
xchg
popf
cmp
iret
cmpsl
insb
push
push
add
fisubl
mov
dec
sub
nop
xor
jnp
movb
scas
stc
push
mov
lods
in
xchg
cmp
jbe
cli
dec
movsb
ret
outsl
pop
pop
jge
lds
aaa
adc
adc
in
movsl
dec
xor
popa
inc
and
inc
and
cmpb
cmp
fsubrs
sub
in
mov
in
lret
mov
push
push
imul
cmpsb
aas
iret
inc
call
scas
mov
ss
movsb
jo
sub
out
addr16
inc
push
shrl
add
adc
push
loope
and
cmp
data16
out
loope
dec
lock
gs
jl
aad
lcall
jp
int3
mov
xchg
imul
mov
xchg
sbb
sbbb
aaa
stos
rcl
cmc
pop
test
ja
popf
ficompl
xor
jmp
inc
mov
jle
popf
inc
jbe
cltd
push
inc
or
ja
xor
popf
shlb
pop
push
mov
clc
jl
int
xor
mov
jbe
cmp
jnp
sub
std
pop
test
push
mov
fstpl
or
mov
or
out
jns
push
leave
shlb
jle
lcall
shl
sbb
mov
ja
imul
push
pop
iret
dec
xchg
js
mov
aad
movsl
jo
test
in
jl
lods
sahf
popa
cs
push
mov
adc
jae
movsl
cmp
stos
daa
jle
bsr
clc
stos
pushf
movsb
insl
xchg
inc
in
gs
add
mov
add
push
pusha
flds
dec
rorl
sbb
adc
pop
ret
or
inc
cmp
xor
push
clc
pop
int
fnstsw
or
test
push
cmp
rol
adc
lcall
addb
jns
mov
inc
push
pop
lcall
fwait
push
jmp
pop
ja
cmp
pushf
lret
les
jne
lods
lret
mov
or
ficomps
mov
and
mov
out
or
push
cmpsb
adcl
add
pusha
mov
ret
popf
dec
ret
out
int
add
std
aam
add
arpl
lods
pop
xlat
push
cmp
dec
cmp
and
scas
pop
pop
push
pop
add
loope
fimuls
push
inc
das
push
dec
push
in
test
in
mov
lret
xor
add
daa
fldl
jle
add
push
cmp
rcrl
in
inc
rcrl
adc
fbstp
popf
push
loope
pop
nop
sarl
inc
leave
and
aaa
pop
sub
xchg
and
push
sbb
stos
cli
lock
ljmp
cmp
and
add
out
fs
sub
movsb
mov
pop
mov
fimull
pop
rcpps
and
sahf
pop
pop
rclb
dec
scas
push
js
inc
dec
xor
push
push
push
pop
scas
ret
lea
and
into
cmp
ljmp
mov
fcomip
xchg
mov
jns
mulb
xor
lods
pop
mov
fdivrs
lods
mov
hlt
or
lret
test
movsbl
sbb
shlb
mov
cmpsl
pop
or
lcall
sbb
bound
mov
fbstp
int
push
dec
ss
flds
inc
jge
popa
movb
jnp
loope
jg
lds
pop
sub
add
pop
mov
enter
mov
xor
cld
subl
testl
pop
cmp
shll
adc
push
add
add
pop
cmp
lods
mov
in
lret
fs
add
add
call
jmp
mov
or
aaa
popf
les
push
cmp
xchg
xchg
leave
leave
mov
test
roll
inc
jns
jbe
jmp
inc
mov
shr
scas
mov
push
jbe
outsb
xor
mov
mov
jle
sbb
out
xor
adcl
mov
pushf
mov
negb
xor
mov
mov
aaa
or
fcmovu
fwait
dec
clc
pop
push
dec
aad
and
cwtl
cs
das
push
cmpsb
negb
scas
pop
pushf
ljmp
sti
inc
lock
pop
mov
jl
sub
inc
insb
mov
lods
pop
xlat
pop
bound
xchg
adc
lods
push
fnstcw
sahf
lods
repnz
mov
jbe
js
cmp
lret
shrl
lahf
lock
rorl
loop
xchg
in
jno,pn
inc
jbe
cmp
jmp
and
pop
imul
in
ljmp
nop
faddl
jae
repnz
xchg
stos
pop
sub
jno
cmp
sbb
stos
xchg
scas
daa
ret
adc
sub
inc
cmpsb
enter
das
rcr
adc
or
inc
ret
pusha
dec
mov
test
inc
into
push
clc
scas
out
mov
push
scas
addr16
sub
xchg
mov
lcall
pop
and
and
mov
and
aam
shrb
sub
mov
add
pop
mov
push
leave
fstpl
fs
in
filds
in
lock
sub
and
push
xor
call
loop
and
jae
or
lret
test
and
es
imul
cwtl
add
jo
nop
cmp
mov
dec
push
pop
adc
mov
outsl
lahf
mov
xlat
addr16
cmc
lods
cmpsb
cmc
nop
cmp
jmp
in
jb
or
aaa
mov
outsb
stos
mov
pop
jb
and
fcmove
popa
in
dec
dec
sbb
shlb
xchg
lahf
pop
into
add
in
out
adc
or
adc
mov
fiaddl
lret
xorl
pusha
rcrl
data16
sbb
in
cmc
lcall
jg
mov
pop
fldl
pop
repz
sub
pop
dec
lods
inc
pop
push
flds
inc
clc
adc
push
repnz
fsubrs
and
pop
adc
push
inc
mov
cmp
jno
insl
and
add
sti
out
in
cmp
mov
sub
and
ret
mov
sbb
in
add
sbb
adc
or
das
repnz
in
ret
mov
shrb
or
out
outsb
cmp
push
lar
outsb
or
test
repz
jecxz
lock
and
cmpsl
cs
bound
testb
das
inc
test
mov
cmp
insl
xchg
cs
in
xchg
jo,pt
jnp
out
sbb
mov
add
cmpsb
loope
insl
fwait
fwait
into
repnz
push
out
loop
mov
loop
and
imul
sub
ja
add
out
adc
jl
out
sub
sub
fmuls
test
es
adcb
mov
divl
pop
ja
repz
mov
shll
jns
fdivrs
inc
daa
mov
pushf
mov
enter
test
pop
loop
xor
inc
jl
repz
dec
outsb
scas
sbb
loopne
stos
sbb
push
or
enter
testb
imul
xor
ljmp
push
fstpl
jp
xchg
dec
sub
dec
mov
imull
fistl
pop
int3
imul
insb
cmp
lret
and
mov
shll
hlt
loopne
shl
fwait
jmp
pop
xor
lret
add
inc
dec
mov
adc
outsl
sbb
adc
pop
mov
dec
push
orl
das
adc
adc
jmp
mov
ret
ror
cs
wbinvd
fwait
xor
sub
push
repnz
pop
arpl
stos
xchg
inc
icebp
in
cmpsb
stos
pop
test
aaa
daa
fnstenv
and
cmp
push
push
cmc
pop
gs
xlat
fistps
sbb
mov
out
mov
scas
ja
movd
adc
daa
hlt
jle
ror
adc
mov
hlt
scas
cwtl
nop
add
add
lds
movb
lret
inc
add
in
sub
mov
aam
pop
push
dec
jg
xchg
cmp
aaa
and
sti
aas
adcb
out
rcr
lahf
xchg
js
shlb
cmpsb
sti
popf
fsubrl
jp
xchg
idivl
loop
pop
ss
les
mov
movsb
mov
pusha
sbb
inc
rcrl
in
loope
jmp
popf
or
cmp
out
mov
mov
cltd
add
imul
pop
add
push
imul
adc
push
std
insb
fsubl
add
xor
inc
add
dec
mov
inc
into
fwait
out
push
push
xchg
mov
movsl
das
sbb
and
fsubs
push
mov
lds
inc
jp
cmp
add
cmpsb
stos
jnp
add
repz
lret
fwait
add
add
adc
daa
mov
push
add
loope
inc
pop
add
inc
movsb
adc
add
ficoml
or
mov
or
cld
lods
adc
out
lods
jge
adc
sub
push
mov
sub
sub
add
mov
mov
mov
bound
xchg
push
mov
ret
ds
arpl
rcr
int
xchg
adc
fstps
jne
mov
xchg
mov
pop
stos
je
cs
and
subb
xlat
sbbb
mov
cmc
mov
adc
out
dec
cwtl
ja
popf
cmp
sub
cltd
mov
in
pop
pusha
pop
xor
outsb
or
in
icebp
xor
shrb
scas
push
mov
cmp
mov
aad
popa
shl
filds
dec
cmpsb
clc
add
js
pop
leave
idiv
and
das
cmp
xchg
pop
sub
lcall
pop
sbb
out
lods
scas
shrl
inc
jmp
shrl
stos
into
xchg
sbb
movsb
popf
in
cmp
cmp
sub
es
je
xlat
push
sub
push
or
test
shl
nop
or
sub
ja
mov
adc
push
or
pop
in
mov
or
loopne
xchg
xchg
daa
pop
ret
xchg
sub
clc
sub
popa
pushf
rcrb
sbb
mov
out
pop
sub
mov
shlb
ret
jmp
ret
jbe
sbb
push
push
sbb
push
cs
and
jp
std
out
push
pop
inc
pop
sbb
jle
jnp
push
pop
lock
dec
inc
jae
popf
pop
call
fiadds
testl
push
sti
jbe
xchg
in
adc
outsl
mov
fildll
xlat
aas
mov
fildll
jno
xor
dec
lret
or
pop
jae
cmpsl
std
jb
xor
pop
lock
add
cmpps
scas
js
mov
add
and
cmpsb
cmpsb
mov
das
popf
outsb
adc
mov
sbb
pop
lock
lahf
push
outsb
js
repnz
popa
ret
es
add
or
sbb
icebp
mov
xchg
xor
cmpps
dec
int
into
cs
and
sahf
in
jl
arpl
cld
mov
sub
cli
inc
shll
mov
xchg
cmp
ror
or
aas
fldcw
in
movsl
push
mov
fdivr
mov
dec
xor
ror
dec
mov
mov
lods
mov
cmp
nop
or
and
loopne
fdivs
dec
mov
pop
sbb
mov
jle
stos
xor
js
inc
call
xor
repz
arpl
aam
cmpsb
insb
add
out
mov
or
aaa
imul
mov
loop
adc
or
sub
repnz
les
cmp
movsl
or
sbb
or
adc
and
dec
xor
loopne
pop
xchg
pop
les
dec
push
adc
fistps
in
and
les
fwait
jo
sbb
xchg
ss
and
xchg
xchg
int
xchg
int3
add
int
add
mov
or
adc
push
dec
sbb
orb
ja
gs
aas
sbb
outsl
ljmp
xor
and
inc
jbe
xchg
xchg
int3
sub
mov
sub
xchg
mov
sbb
xchg
and
icebp
mov
xlat
jecxz
jge
out
mov
jmp
and
sbb
adc
cmp
outsl
dec
loop
push
sub
orl
outsl
or
add
and
inc
xlat
mov
test
ret
or
cmc
xor
inc
fldenv
xchg
add
cmpsb
mov
call
jbe
ret
xorb
xor
divb
fnstenv
pop
nop
gs
rclb
fidivl
test
ljmp
fimuls
mov
test
mov
cmc
leave
mov
jle
in
loopne
or
rcll
icebp
lods
lock
and
cli
or
ja
pop
daa
pop
push
sbb
lahf
subl
xor
lret
pop
test
and
jl
lods
scas
push
nop
outsl
ljmp
shll
fnstenv
mov
outsl
sti
in
mov
inc
int
xchg
adc
xchg
jmp
shrl
popf
test
sub
cmp
mov
mov
imul
enter
loop
test
pop
addr16
mov
xlat
outsb
lods
sbb
dec
xchg
xchg
pusha
adc
or
std
mov
mov
xchg
ljmp
pop
or
jne
lea
pop
adc
aaa
pop
xor
mov
pop
pushf
adc
mov
cmp
add
ss
cmp
and
movsb
enter
test
test
dec
inc
xchg
add
imul
cmp
popa
icebp
lock
jo
fs
mov
mov
lret
adc
jp
dec
fsubrl
cmc
idivb
mov
xchg
push
pop
push
in
js
sbb
and
repnz
jp
imul
jns
rolb
xchg
addr16
test
or
jg
push
jo
mov
lret
or
aad
out
jg
add
xor
xchg
inc
pop
stos
pop
sub
addb
xchg
adc
popa
xchg
imul
cli
cmpsb
push
in
sub
int3
rcr
mov
hlt
cmpsl
xor
mov
mov
mov
popa
pop
int3
and
and
daa
test
addr16
bnd
movsb
mov
idivb
inc
rcrb
push
icebp
sub
add
pop
pop
flds
leave
dec
and
sbb
mov
pop
and
ja
sbb
mov
scas
mov
xlat
pop
pop
mov
cmc
addr16
ss
iret
lahf
sarb
jge
daa
int3
mov
push
xchg
je
push
clc
mov
aad
aas
mov
dec
aaa
mov
lods
dec
xchg
aad
mov
shll
xchg
test
xchg
dec
mov
inc
mov
sahf
test
fwait
pop
dec
jno
loop
xlat
sub
clc
std
jns
inc
stc
sti
daa
push
jbe
xchg
xchg
enter
mov
ljmp
mov
movsl
iretw
rorl
jmp
fldcw
xchg
add
inc
push
mov
jnp
clc
jge
jg
fmuls
popa
test
sub
cmpl
push
jp
pop
shlb
daa
mov
fsubrs
inc
jns
mov
dec
leave
sbb
lahf
add
pusha
mov
inc
cmp
mov
or
sub
test
movsl
xchg
cmp
cmp
mov
cmp
fldt
xor
lock
push
sub
dec
lahf
xorb
insb
push
in
stos
test
cmp
cmc
pusha
mov
test
jecxz
test
cmp
add
jle
and
cs
std
xor
add
incb
inc
adc
in
int3
jo
jns
lret
stos
aas
test
jnp
cmc
imul
cmp
inc
lcall
jnp
ja
add
xor
cltd
xchg
hlt
dec
mov
xlat
cmp
cmp
stc
fisubrs
or
rcrl
add
dec
bound
out
sahf
push
sarb
inc
hlt
testl
daa
nop
dec
mov
sbb
and
icebp
adc
inc
push
pusha
cmp
dec
xor
into
sahf
xor
xlat
jl
cli
lret
out
xor
dec
cmp
int3
sbb
loope
loopne
out
push
lods
repnz
stos
clc
add
or
inc
adc
fwait
push
cmpsl
push
xchg
jge
dec
pop
add
sbb
loope
jo
ja
or
push
inc
fisubs
fs
test
test
int
pop
xchg
jns
movsl
shl
test
outsl
cmpsb
cmpb
jnp
fistpl
aam
inc
mov
popa
sbb
lods
mov
pop
int3
push
lret
filds
rorl
push
js
push
repz
ret
shlb
push
push
cmpsb
loope
cmp
out
shlb
jbe
cmc
sbb
rorl
pop
fidivl
dec
imul
gs
int3
mov
add
testl
adc
jne,pt
xchg
or
mov
or
loope
movsw
pop
mov
inc
pop
outsb
in
fwait
jnp
roll
addr16
incb
ret
or
cmp
xchg
cmp
ror
mov
test
mov
shll
jmp
rcrl
iret
jl
and
cltd
push
adc
fnsave
cmpsl
sbb
or
mov
push
jb
leave
js
jmp
xchg
jb
pop
pusha
jg
cli
mov
outsb
shll
ljmp
adc
lock
in
pop
in
cmpsl
test
or
xor
in
mov
lds
dec
mov
arpl
ss
out
pop
push
and
mov
push
xchg
mov
jmp
in
enter
jmp
aaa
rcll
cmp
pop
fiadds
push
loope
mov
pop
out
cld
mov
and
stos
or
and
clc
dec
push
xor
xor
mov
pushf
test
xor
or
jns
loope
xor
mov
ret
aaa
and
aas
dec
add
jns
push
leave
sub
xor
xchg
xor
push
lea
inc
mov
shr
jns
add
out
sbb
sarl
and
aas
cltd
and
cmp
xchg
dec
mov
repz
sahf
or
and
push
mov
imul
lret
sbb
sub
dec
cs
mov
loop
cli
jne
and
lcall
jns
aad
sbb
imul
popa
mov
push
test
adc
pop
mov
dec
inc
pop
fnstenv
pop
cmc
imul
mov
nop
scas
vmovq
adc
or
xchg
sub
insl
mov
sbb
test
cmp
outsl
sub
mov
insb
push
adc
xor
sbb
add
dec
lods
push
lret
mov
lahf
arpl
daa
jo
mov
inc
pop
and
sahf
xorb
sub
jg
leave
fldt
repz
fwait
cmp
cmc
inc
mov
aaa
sbb
push
add
ret
ja
add
das
adc
push
rcrl
loop
test
ret
fstps
ds
mov
add
lahf
mov
pop
test
fucomi
call
sbb
add
sub
outsl
jo
xor
fs
adc
sti
icebp
stc
sub
outsl
rcll
into
ss
cli
movsb
or
hlt
pop
sar
lret
pop
add
mov
popl
fldcw
pop
inc
dec
lods
aad
lret
into
sbb
push
and
sbb
and
je
and
sub
sub
mov
fcmovbe
inc
adc
aaa
clc
pop
dec
insl
or
mov
mov
cmp
insl
rorb
push
sub
leave
mov
sbb
loope
in
xchg
pop
sbb
pop
movsb
mov
clc
stos
es
sarb
or
xor
mov
xchg
arpl
mov
pop
outsl
shr
sub
add
sarb
icebp
icebp
inc
cltd
xchg
iret
stos
addr16
orb
fsubs
insb
sbb
cmp
stc
movsl
les
imul
sbbb
cmc
lcall
mov
fwait
and
lods
pop
or
scas
cmp
xchg
dec
cld
adc
or
popa
dec
or
int3
movsb
xor
fs
jne
mov
adc
inc
lahf
and
int3
adc
pusha
jl
dec
inc
jg
fsubp
ljmp
mov
pop
sbb
inc
add
push
mov
cmp
cltd
hlt
sub
in
xor
mov
int3
push
testl
pop
or
jge
and
movsb
push
sbb
popf
mov
cli
cmpsb
imul
cld
or
mov
cmpsb
pop
mov
repnz
outsl
push
ljmp
div
jle
jge
imul
jne
out
dec
lds
aam
pop
lcall
jo
pushf
sub
insb
cmc
fld
imulb
jnp
mov
xor
outsb
add
xchg
xorb
push
mov
mov
xchg
and
xchg
cmpsb
dec
mov
mov
jge
and
inc
inc
sahf
addr16
and
shufps
jge
leave
push
jle
pop
fs
icebp
cltd
mov
sub
lret
mov
xlat
push
push
pusha
pusha
into
push
jg
rcll
or
jae,pt
mov
push
add
stc
mov
mov
push
cmpsb
push
dec
xor
and
mov
inc
call
lcall
pop
sub
popf
imul
jae
ljmp
dec
sbb
lock
push
shl
jecxz
repz
insb
movsb
pop
out
or
stos
decb
add
mov
int3
in
jge
cmpsb
add
dec
xlat
stos
fidivrl
pop
sbb
imul
adc
das
arpl
sub
fsubl
xor
test
out
sbb
mov
sti
sub
push
mov
cmp
xor
xor
cmc
fisubl
scas
pop
stc
pop
push
mov
fsubs
jo
push
xchg
out
out
and
sbb
push
imul
inc
push
mov
mov
push
popa
mov
rcrb
or
ss
lock
ss
xlat
cmpsl
or
sub
or
fsubs
fsubl
xchg
push
pop
inc
cltd
fildl
js
mov
ret
lcall
rcrl
and
shr
inc
or
cld
fidivl
in
xchg
out
dec
inc
mov
sub
mov
inc
jp
shl
rorl
loope
sahf
xor
dec
inc
jno
xchg
mov
add
jmp
dec
outsl
js
pop
lock
xchg
xchg
rcl
imul
inc
push
mov
cmpsl
push
pop
push
mov
frstor
mov
cmp
mov
jae
jmp
lock
rclb
fisubrl
push
lods
stos
jecxz
pop
movsb
insl
lea
ljmp
outsb
mov
jp
xchg
sub
int
pusha
push
in
dec
dec
sbb
rcrb
mov
jg
mov
enter
pusha
scas
jns
out
decl
cmp
pop
popa
xchg
jecxz
xor
negl
iret
xchg
xor
push
in
cli
and
pop
pop
ljmp
xchg
clc
fs
or
push
push
mov
sbb
pop
jge
mov
aad
out
sub
mov
xorb
push
cs
popf
test
out
jns
adc
mov
sarb
add
lds
outsl
fsubl
sbb
pop
inc
lcall
add
sbbb
cmp
sub
cld
add
faddl
pop
in
leave
lahf
and
hlt
sbb
mov
decb
cli
or
addr16
sub
sarb
rcll
xchg
or
arpl
add
jne
call
movsl
outsb
inc
or
iret
sarl
pusha
data16
leave
sub
mov
cmp
test
xor
aam
pop
scas
xchg
jo
jmp
add
xor
sub
cmp
xchg
test
xchg
mov
push
mov
repnz
push
pop
ret
shll
push
push
addb
fcmovb
call
or
into
jge
out
xor
xchg
add
imul
lcall
jecxz
and
imul
push
popa
roll
jecxz
xchg
adcl
lret
fisttpl
sahf
std
movsb
jb
es
inc
xchg
popf
into
xchg
pop
lret
dec
fistl
pop
mov
push
mov
dec
iret
cmp
inc
xor
imul
adc
sahf
stos
add
scas
jle
xchg
push
outsl
push
pop
jbe
sbb
ficoms
pop
mov
cmp
fadd
push
jl
test
add
aas
shll
mov
push
cmpb
call
xchg
inc
scas
cli
ret
mov
mov
mov
fcoms
les
dec
pop
inc
jae
rol
adc
sub
sti
arpl
movsb
jecxz
movsl
xchg
leave
out
and
imul
cmp
aas
inc
enter
jmp
cmp
popa
es
mov
pusha
les
loopne
lret
pop
add
add
jnp
hlt
jnp
aam
or
jno
shl
in
mov
test
fsts
in
xchg
mov
inc
sub
ffree
enter
sub
or
mov
xchg
sbb
dec
fdivr
mov
pmaddwd
rcr
testl
enter
pushf
sub
push
popa
and
popf
loopne
int
mov
add
cmp
add
adc
mov
fisubl
notl
jo
data16
sub
imul
ret
cmpsl
repnz
in
pop
sub
pop
xor
pop
pop
mov
mov
sub
pop
aas
test
add
xchg
popa
imul
movsl
push
jl
lcall
cmp
pop
sbb
inc
fwait
push
or
cmp
pop
inc
fimuls
and
xchg
int
pop
mov
mov
sub
jle
hlt
push
sbb
outsb
jg
mov
xchg
mov
add
push
or
fwait
xor
pop
dec
adc
adc
mov
shl
jge
sbbb
mov
mov
sti
push
mov
push
pusha
fsts
inc
xchg
lea
mov
jne
inc
mov
int
dec
pusha
mov
stos
lods
arpl
leave
pop
es
mov
push
ds
mov
lods
xchg
and
sub
jns
inc
mov
out
cwtl
rclb
cli
adc
sub
loopne
arpl
xchg
pushl
js
cmpsb
jle
pop
aas
sub
je
add
xchg
push
ljmp
mov
adc
inc
or
addl
cmpsl
jmp
jbe
pop
push
push
xor
test
cmp
cltd
mov
filds
out
out
mov
in
pop
push
sbb
cmpsb
scas
ja
sahf
cltd
fldt
pushf
mov
fildll
sbb
shrb
fs
dec
dec
ficomps
int3
mov
cmp
scas
jg
jnp
ljmp
adc
jnp
call
sbb
lret
sbb
bound
repnz
jnp
cmpsl
loopne
in
stos
mov
movsl
cmc
mov
mov
fprem1
mov
js
mov
xchg
mov
mov
cmc
cwtl
cmpsl
mov
xchg
lcall
call
daa
out
hlt
push
add
imul
data16
cwtl
popf
push
push
adc
mov
sbb
in
std
xlat
faddl
pop
dec
dec
add
xchg
sbb
mov
mov
ficomps
in
adc
xchg
push
mov
leave
jns
sbb
jl
adc
sti
adc
jb
sbb
pop
cwtl
popa
jns
fdivrs
inc
sti
iret
notb
out
mov
push
orb
mov
loope
pop
dec
xchg
pop
test
jge
jge
and
pop
repnz
leave
popa
fildll
pop
push
push
mov
inc
dec
cmp
je
iret
clc
pop
aam
out
sub
pusha
shll
xchg
daa
mov
call
xchg
mov
push
cmpb
add
lock
jbe
mov
jnp
jle
ljmp
xchg
fwait
jno
fs
ss
dec
inc
outsb
in
leave
sub
dec
mov
mov
pop
ret
mov
lret
sub
inc
andb
popf
scas
adc
rol
jl
xchg
insb
fs
xor
jo
icebp
cltd
push
mov
test
lock
aas
mov
cwtl
sbb
xor
sub
test
push
movsl
imul
cwtl
js
out
mov
push
dec
mov
push
dec
sub
cmp
pop
pop
fwait
mov
enter
in
jno
jbe
or
adc
pop
mov
mov
add
movsb
sub
js
mov
push
jb
out
sbb
sbb
push
push
stc
xchg
mov
cmp
xor
call
mov
lcall
or
loop
das
outsb
cmpsb
cmp
or
or
or
in
xchg
jge
sbb
sbb
scas
pop
mov
int
xchg
cltd
out
enter
push
mov
jae
ret
popl
or
fsubl
mov
cmp
fmul
xor
sub
jns
adc
push
pop
sub
es
push
imul
mov
rolb
dec
fdivr
adc
cltd
std
mov
sbb
int
mov
loop
xchg
adc
in
das
shlb
aas
aad
xchg
mov
xchg
lret
lret
or
xchg
add
fwait
xchg
cmp
add
test
pusha
inc
mov
mov
loope
or
mov
aam
jmp
jge
gs
and
test
push
sub
cmp
xor
popf
mov
ret
or
subl
jne
add
xchg
mov
sub
xchg
cmpsb
xor
jnp
add
cmp
in
inc
jb
into
mov
leave
mov
ljmp
into
jno
or
or
pop
test
movsl
adc
push
dec
imul
shrl
xchg
lcall
pop
sbb
push
inc
and
push
ljmp
pop
add
popa
cmp
fiadds
call
sbb
lcall
cmpsl
mov
or
jp
jns
lds
rclb
mov
imul
sarb
lea
push
and
adc
jns
stos
sub
xor
adc
push
sub
sbb
das
inc
clc
jge
ljmp
aas
xchg
cmp
icebp
roll
fs
ss
mov
sub
testl
sbb
outsl
and
in
cs
ret
subb
adc
inc
stos
jmp
les
mov
jge
pop
and
cmp
notl
adcl
cs
sbb
xchg
shl
dec
mov
xchg
sti
lock
xchg
sbb
mov
lret
xchg
fnstenv
inc
out
xchg
scas
adc
sub
fwait
es
dec
push
inc
push
push
pusha
lock
sti
pop
push
mov
sbb
adc
sarl
cltd
stos
cmp
imul
xor
out
mov
fnstcw
mov
mov
loope
cmp
jne
ret
mov
fucomp
dec
mov
inc
mov
xchg
sahf
clc
add
dec
insb
cmp
movsl
cmp
jo
lret
icebp
inc
inc
stos
cmp
out
fists
add
stos
es
jp
pop
pushf
pop
scas
in
pop
xchg
add
or
sbb
mov
jae
xchg
shlb
rcrl
sbb
popa
out
sbb
push
fsubs
dec
xor
dec
cld
scas
cmp
mov
lods
mov
push
pop
cs
aaa
sarl
loope
hlt
loopne
mov
push
inc
xchg
xchg
adc
imul
aam
mov
clc
test
fstl
xchg
rorl
mov
cmpl
sub
add
push
aaa
cmp
mov
dec
scas
enter
das
sbb
and
fmull
orl
push
or
lret
fisttps
mov
lea
push
nop
or
bound
pop
or
mov
rorb
xchg
jo
bound
gs
notb
out
cmovp
add
repz
loopne
push
pop
rep
jo
or
push
sub
ja
arpl
dec
sbb
sbb
xor
lcall
push
and
aas
xor
out
mov
lods
fwait
inc
mov
mov
arpl
sub
js
jg
in
mov
dec
aam
ss
fisttpll
shrd
inc
test
sbb
out
jb
push
pop
mov
pop
imul
notb
jg
mov
js
js
cmpsb
and
aam
stos
cmpsl
fimuls
xlat
jmp
fs
inc
mov
xchg
pusha
rclb
out
dec
sbb
mov
dec
mov
stos
dec
loope
movsl
imul
addb
or
shlb
pop
loopne
int3
sbb
push
cltd
inc
sbb
imul
mov
xor
ret
int
test
sub
mov
add
adc
or
dec
nop
testl
xchg
hlt
aas
inc
fucomp
stos
idiv
out
dec
xorl
or
repnz
adc
out
pop
or
xlat
arpl
pop
jle
sub
pop
push
inc
lret
inc
std
sahf
iret
lahf
icebp
notb
jnp
dec
add
pop
add
imul
push
loopne
cltd
leave
int
or
cmc
outsb
out
je
mov
or
sbb
push
iret
jmp
clc
push
adc
aam
sub
dec
test
movsb
fistpl
imul
daa
int3
fstl
call
arpl
pushf
sub
pushl
popf
push
sbb
mov
mov
out
aaa
cld
pop
ret
xchg
push
pop
mov
fildll
cmp
pop
dec
fistl
pop
pop
sub
rorl
cld
fisttpll
push
repz
lock
test
lds
pop
pop
sub
push
mov
push
ja
mov
push
mov
pop
push
cmp
imul
cmp
dec
mov
decb
ds
xor
lret
ljmp
dec
daa
add
ss
mov
dec
daa
rcll
repnz
and
mov
sbb
test
push
std
gs
out
jns
aas
cwtl
push
mov
stos
inc
fidivrs
push
rclb
pushf
sub
mov
sub
in
ss
lds
hlt
pushf
pop
scas
pusha
popa
inc
push
pop
sub
mov
xor
out
and
and
out
insl
inc
jo
js
jle
cmp
pop
out
xor
nop
aad
and
in
push
and
je
out
mov
jmp
hlt
push
mov
mov
adc
scas
pop
out
mov
mov
fstpt
inc
outsl
clc
sub
sub
push
push
mov
inc
data16
aam
or
jbe
cmp
jp
jb
xchg
xor
ror
hlt
xchg
stc
pop
pop
dec
add
stos
nop
mov
xchg
dec
out
mov
daa
pop
adc
jp
mov
xor
call
ja
cmpsl
push
ficoml
ret
in
mov
xchg
mov
rcl
out
and
or
ficoml
in
push
jl
inc
aad
mov
jl
mov
dec
jl
mov
out
into
dec
mov
aas
pop
scas
fsubrp
pop
ret
push
les
movsb
pop
js
outsb
fisubs
cmp
mov
aad
mov
movsl
mov
sub
jbe
mov
addb
xor
les
mov
xlat
inc
inc
xor
in
fmull
cmpl
pushl
cmp
movsl
mov
sub
kmovb
ds
shr
mov
sbb
lods
mov
mov
insl
call
scas
scas
aas
jle
aas
cmpsl
sub
mov
adc
jp
xor
or
insl
pop
mov
push
shlb
dec
cmp
test
insb
push
mov
or
test
xor
and
pop
clc
je
cmp
mov
pop
fsubrp
icebp
xor
popf
jbe
pop
popf
jne
jbe
jno
aad
test
jo
in
iret
into
out
mov
jecxz
sahf
push
add
push
inc
push
rorl
mov
rol
inc
xor
inc
enter
sbb
ds
mov
pmulhuw
jge
mov
test
sub
dec
jmp
adc
aas
sbb
lods
aad
add
popf
jo
rcrl
jae
xchg
fs
fcoms
adcl
fistps
pop
bnd
inc
pop
pushf
push
icebp
loope
je
mulb
clc
mov
cmp
push
sub
test
sbb
lds
sub
push
ljmp
clc
andb
iret
loop
adc
cli
pop
mov
jecxz
jb
sbb
test
mov
add
or
sub
fisubrs
lock
test
push
test
sbb
dec
cmp
outsb
pop
lods
or
mov
shlb
testb
and
subb
push
mov
inc
pop
mov
push
cld
pop
inc
add
insb
xlat
or
in
das
sub
fdivl
popa
push
stos
mov
or
adcl
in
pop
push
dec
das
mov
stos
cmpl
fildll
push
dec
xor
mov
inc
stos
les
xchg
mov
mov
sbb
mov
xchg
adc
push
mov
in
xchg
in
cld
push
add
sbb
sarl
inc
jmp
loopne
cmp
and
adc
pop
sub
fstpt
fwait
pop
in
mov
ds
mov
mov
mov
push
lahf
cmp
pushw
rcrb
cld
pushf
jl
mov
push
imul
lcall
test
mov
dec
or
mov
out
push
hlt
ss
sbb
mov
lret
popa
inc
sti
adc
ror
jne
jne
leave
outsb
lds
xchg
inc
jns
mov
lods
jmp
scas
and
mov
and
repz
xlat
mov
xor
inc
pop
fdiv
dec
mov
xor
ret
inc
roll
repnz
xchg
frstor
pop
xchg
lret
or
mov
push
rcl
imul
cmpsb
or
leave
jno
clc
jmp
popf
pop
inc
mov
lret
dec
les
mov
stc
sub
in
imul
pop
mov
lret
sti
pop
je
gs
insl
test
insb
xor
add
dec
insl
cmpsl
mov
dec
lret
xor
cmp
jle
and
adc
or
addr16
fildll
xor
imul
and
cs
aas
mov
fimuls
int3
or
cmpsl
cmp
xchg
xor
es
pusha
js
mov
insl
mov
icebp
in
fsts
cld
ror
cmpsl
mov
rcr
jbe
daa
jge
stc
mov
cltd
ja
popf
inc
jne
decb
jp
and
int3
dec
push
mov
mov
fwait
movsl
or
loopne
add
inc
test
jmp
push
repz
xor
dec
add
pop
or
fmull
inc
loopne
arpl
xlat
mov
push
cmc
clc
test
in
push
or
cmc
adc
and
add
push
dec
xor
aad
fisubl
jns
inc
nop
inc
arpl
fimull
lret
mov
jle
jae
addl
dec
std
loope
lret
stos
xor
outsl
out
pop
test
andl
cmp
adc
adc
repz
mov
xor
mov
sahf
fstps
scas
pop
sbb
js
mov
mov
mov
adc
mov
add
sarl
dec
outsb
cld
daa
add
push
sbb
and
push
stc
inc
bound
pushf
and
adc
jb
mov
ja
mov
fbld
xchg
stos
jno
cmp
repnz
add
loop
or
push
jg
sub
jae
int3
enter
inc
adcb
cmp
pop
or
jno
bound
sbb
mov
mov
aas
jecxz
mov
loopne
cmp
mov
push
int3
pop
bound
adc
mov
push
mov
fistl
jp
push
testb
xchg
mov
add
out
fidivl
imul
xchg
mov
icebp
cmp
or
mov
addl
fistps
inc
or
dec
dec
in
hlt
mov
sbb
loope
mov
pop
mov
int
repz
fdiv
pop
xor
or
popa
jnp
xor
and
adc
mov
clc
mov
jns
lods
ss
and
aad
test
mov
xchg
fdivr
pop
lock
push
cld
scas
adc
pop
dec
mov
lock
int
dec
add
inc
add
mov
pop
jo
lahf
add
mov
sbb
sar
decb
and
sbb
ds
xchg
mov
es
sub
dec
pop
sbb
mov
shl
hlt
push
dec
shrb
jecxz
shr
mov
popf
test
test
les
jno
clc
sub
jle
adc
pop
inc
movsl
push
test
movsb
js
imul
lds
mov
jmp
das
mov
fildl
or
sub
test
push
jo
lcall
pop
cwtl
mov
in
jns
mov
subb
enter
mov
push
add
pushf
push
mov
inc
sbb
je
fbld
xchg
arpl
out
jae
pop
orb
xor
pop
cs
fs
pop
int
stc
ja
test
fcmovnb
pop
filds
xchg
adc
iret
or
pop
leave
push
fs
cltd
jle
adc
cs
push
mulb
push
out
stos
js
push
icebp
jg
mov
pusha
jmp
pushf
out
movsl
pop
dec
rorl
mov
test
sub
pavgw
aaa
scas
xchg
out
xchg
sahf
aaa
cld
or
push
lret
or
insl
inc
lods
adc
ret
in
ds
imul
cmp
cmp
push
pusha
inc
mov
dec
sbb
cmp
push
mov
push
pusha
mov
rcl
enter
push
jmp
push
aad
fisubrs
mov
testb
add
add
cld
dec
jl
mov
test
insl
fcoml
out
sbb
mov
mov
xor
xor
and
pmullw
sbb
jbe
pop
dec
ljmp
fs
pop
push
push
sbb
cmp
mov
sub
ret
mov
cmpsb
xchg
into
stos
xchg
movsl
inc
sarw
or
ficomps
in
sbb
out
lea
sbb
sbb
cmp
xchg
xchg
fdivrl
loope
mov
dec
xchg
xor
outsb
mov
or
inc
das
mov
in
push
inc
cmpsl
pop
cs
mov
sbb
mov
shrb
sub
add
adc
dec
xchg
or
nop
test
sarl
push
cmp
stos
pop
lods
in
es
clc
scas
push
pop
imul
inc
xchg
andb
andl
out
cltd
xchg
dec
add
clc
pusha
lods
cmc
sbb
lds
stc
sbb
inc
pop
idivb
xchg
aam
icebp
nop
mov
or
rolb
xchg
arpl
enter
sbb
cmp
jns
jmp
lods
and
lret
push
mov
jo
sahf
pop
inc
stos
sbb
mov
sahf
push
add
idivb
testb
mov
fdecstp
pop
dec
int3
fwait
dec
fldenv
mov
inc
ljmp
lods
sbb
fwait
jae
pop
dec
rep
dec
xlat
out
sbb
mov
lret
sub
inc
and
inc
cmp
mov
xorb
xchg
fisubrl
in
test
jle
mov
scas
icebp
mov
xchg
mov
loope
ss
gs
mov
mov
test
add
mov
mov
cmp
shlb
popl
xor
dec
gs
push
std
stos
cmp
je
in
out
out
leave
in
lret
jb
mov
sbb
xchg
push
add
xchg
inc
push
lahf
lret
dec
cmovle
fcmovb
int3
dec
dec
fisttps
mov
add
jecxz
inc
fucomi
scas
outsb
lret
test
repz
arpl
insb
rcrl
jnp
and
jl
cmp
cmp
dec
jns
imul
push
and
movsl
pop
addl
data16
sbb
leave
pop
lret
cli
jl
repnz
test
scas
sub
cmpsl
in
push
jg
loop
mov
lods
dec
and
lcall
fwait
mov
jbe
or
jae
movsl
lods
push
aam
xchg
cwtl
lret
mov
les
add
and
ret
sub
mov
pop
fsubl
pop
leave
push
cmp
cmp
dec
mov
leave
xor
mov
movb
jne
jnp
popf
dec
xor
adc
mov
cmp
sbb
xorl
xor
stc
mov
cmpsl
mov
repnz
xor
mov
mov
scas
cli
xlat
test
mov
mov
pop
lahf
ficompl
inc
pop
aam
push
and
push
jg
pop
xchg
insb
ds
leave
ret
pop
jle
pop
or
push
int3
xchg
mov
jns
mov
out
scas
test
and
inc
pop
cmp
sub
xchg
stos
daa
or
mov
jae
leave
xor
jge
jmp
loop
clc
or
xor
gs
fidivrl
lret
cmp
icebp
dec
xchg
inc
mov
outsb
push
mov
push
or
jmp
lret
mov
push
push
cmp
dec
push
sbb
ljmp
add
adc
add
into
and
sahf
xchg
cs
in
mov
jl
dec
and
stos
mov
mov
repz
int
sbb
jnp
add
stc
cmp
pop
adc
cs
or
aad
dec
ja
out
sub
fnstenv
dec
push
mov
mov
sub
cmp
inc
add
sbb
jle
dec
fidivs
imul
push
fwait
jns
sahf
das
sarl
js
xorb
aam
jg
adc
aaa
dec
scas
fnstsw
jbe
xor
pushf
cmpsb
xchg
int
call
xchg
movsb
aas
push
mov
fcomps
arpl
out
data16
xchg
xchg
in
push
je
add
pop
fidivrs
cmp
adc
in
rcll
gs
das
scas
mov
fsubrl
cltd
xor
push
call
dec
cmpsl
stc
rorb
sbb
lcall
cmp
push
mov
gs
call
push
test
sbb
mov
jge
add
insw
jno
and
sub
sbb
into
divb
push
push
adc
mov
jle
mov
sbb
sbb
mov
shll
repz
subl
cli
popa
cs
inc
shlb
lock
adc
shll
mov
jb
inc
fs
cmpsb
sub
and
or
xor
pop
mov
sahf
dec
pop
je
repz
cwtl
js
cmp
mov
xchg
inc
jecxz
push
lahf
or
mov
jl
addb
pop
scas
repnz
cmp
cmp
jp
jecxz
rclb
or
inc
lock
add
aaa
aaa
xchg
and
out
fmul
dec
cmpsl
or
repnz
xor
jne
dec
mov
fadd
sti
fwait
jp
enter
push
aaa
pop
push
popa
ja
cli
and
mov
test
lret
push
shrb
adc
iret
xchg
xchg
shl
mov
pop
pop
mov
pop
inc
in
cwtl
imul
mov
inc
cmp
mov
and
mov
fidivl
push
std
scas
jle
movsb
adc
and
fistl
push
jl
fucomip
xor
ja
ret
rcll
stos
lods
mov
cmp
mov
cmc
xchg
xchg
lock
mov
nop
cmp
cwtl
add
loope
arpl
dec
adc
or
push
inc
and
dec
inc
repz
lods
mov
test
cmp
in
test
mul
push
lods
sbb
mov
insb
push
cs
xchg
lcall
sub
sarl
scas
xchg
push
into
pop
rcrl
out
int3
test
scas
rorl
cmp
fsub
stos
fldcw
push
andb
jl
and
sub
scas
xchg
inc
adc
jo
sub
pusha
and
and
mov
dec
bound
jo
scas
push
shrb
push
ja
push
dec
inc
cmp
xchg
jle
and
push
xchg
push
or
lea
sub
lret
mov
cmc
fimull
inc
out
fs
or
sub
jge
mov
inc
adc
inc
mov
fldt
subb
sbb
leave
mov
outsb
adc
push
mov
mov
sahf
dec
inc
push
cmp
ss
pop
jno
cmp
mov
insl
inc
xlat
repnz
scas
fisubrl
xor
pop
rorb
lret
lret
outsb
rcrb
insb
shll
cmp
test
inc
sub
mov
and
jo
lds
xlat
xor
leave
xchg
jno
fwait
cmp
cmp
cltd
mov
xchg
lcall
stos
mov
add
cmovp
leave
enter
pop
jb
jb
decb
out
mov
and
inc
insb
mov
ficoml
aad
cmpsb
xor
mov
pop
mov
or
mov
mov
inc
pop
mov
fxch
and
cli
fwait
or
mov
stos
inc
ljmp
pushf
or
xchg
push
xchg
lahf
jae
cmp
cmp
aad
loope
dec
fidivl
andl
scas
iret
dec
enter
out
out
out
fdivrl
loopne
shl
fisubrs
loopne
aas
aad
push
xchg
push
lahf
inc
inc
push
jecxz
mov
aaa
dec
cld
add
fnstsw
inc
sbb
int
repz
mov
add
scas
jp
pop
xchg
xorb
push
stos
sub
mov
cmc
and
and
mov
pop
cmpsb
cmp
in
mov
pop
fwait
xor
adc
mov
adc
mov
lods
pop
pushf
loope
lods
fnstenv
fsubrl
in
jg
push
aaa
js
xchg
and
bound
inc
daa
jmp
add
js
fs
sbb
popf
mov
pushl
ret
ret
sbb
ljmp
mov
fdivrp
cli
loope
repnz
mov
sub
jl
xchg
rclb
inc
cmpsl
inc
add
dec
sbb
int
call
addb
pop
daa
lods
mov
xchg
mov
lea
sahf
adc
repnz
inc
push
sbbl
loope
out
loop
ss
or
push
stc
fsubrs
pop
mov
mov
and
scas
aam
xor
mov
sti
test
push
out
push
lock
inc
xchg
pop
ds
rcr
test
icebp
addl
xchg
pop
sbb
sbb
push
push
rcrb
out
mov
mov
xchg
outsb
push
imul
inc
ficomps
sbb
cltd
adc
out
das
or
mov
cmp
pop
int3
jo
cmpsb
inc
sbb
jno
sysexit
imul
stos
jmpw
in
inc
int3
dec
aaa
adc
popf
pop
loopne
push
scas
out
or
mov
jge
cltd
jle,pn
sbb
xchg
stc
push
xor
and
loopne
insl
xlat
pusha
xor
adc
je
xchg
jge
pop
imul
scas
fisubl
shlb
push
stos
rcl
loope
iret
dec
lea
inc
sahf
out
push
or
adc
out
xlat
jnp
iret
mov
pop
ficomps
sbb
frstor
dec
push
loope
loopne
pop
cli
or
pusha
lret
hlt
sti
jae
jno
adc
sub
sbb
add
out
push
addb
movsl
pop
cmp
fsubs
ret
dec
or
sub
or
pop
pop
jl
jo
popa
arpl
aaa
and
sbb
mov
pop
inc
xchg
fsubs
jbe
ficoml
andb
pop
mov
jbe
xor
xchg
loopne
das
test
fimull
dec
incb
pop
xchg
sub
push
je
mov
dec
push
sub
dec
dec
or
mov
js
test
and
and
orl
cmp
jbe
jno
xor
fcom
je
mov
dec
pop
xchg
in
adc
dec
pop
or
xchg
push
inc
jle
sub
mov
bound
in
mov
mov
imul
jae
dec
lahf
andw
jl
repnz
xchg
scas
mov
in
loope
pop
fwait
shl
mov
bound
call
jg
mov
or
inc
sbb
jge
jae
or
and
xchg
push
cmp
adc
or
adcl
addr16
daa
nop
cmp
xchg
stos
je
jp
xor
in
cli
mulb
inc
jo
divb
ucomiss
es
push
fsubrs
jmp
inc
ljmp
hlt
dec
imul
mov
popa
cmp
push
int
cltd
ret
jb
std
out
mov
ret
jnp
mov
es
inc
out
fsubr
inc
lcall
std
cmp
pushf
sbb
ljmp
mov
push
push
aad
sbb
and
pop
daa
or
or
add
in
jae
cld
jmp
scas
bnd
sbb
loopne
cs
xchg
dec
pop
mov
dec
loop
push
dec
std
mov
cmp
movsb
out
push
push
fdivl
push
scas
mov
xchg
xchg
pop
xor
int3
fdivrs
fcompl
shrb
mov
mov
mov
lahf
mov
inc
shrl
pop
or
inc
fidivrl
xchg
sub
pusha
mov
push
mov
js
arpl
les
aaa
dec
imull
push
cld
js
cmpb
mov
jno
imul
je
loopne
inc
pop
mov
ret
enter
imul
push
stc
push
orl
ret
adc
fcmovu
inc
xor
mov
fcoml
iret
or
and
ret
jno
cmpsb
adc
pop
jns
leave
lds
pop
testb
add
mov
scas
mov
and
sub
lock
adc
pop
cmp
mov
lcall
flds
sbb
xor
jns
cmp
es
mov
and
loop
pusha
adc
aas
jne
mov
js
movsl
iret
cld
and
adc
dec
fsts
dec
mov
outsl
push
fs
dec
push
jno
lea
or
jp
in
popf
aad
ret
cmp
adc
rclb
add
dec
repz
xchg
or
into
enter
into
push
pop
lahf
nop
xor
data16
aaa
inc
jb
push
in
jnp
inc
jbe
jns
rol
jmp
jbe
jle
test
outsl
jb
pop
cmp
pusha
or
push
mov
mov
nop
data16
sti
jle
divb
pop
iret
lea
daa
and
fimull
lcall
pusha
push
and
and
add
mov
dec
insl
arpl
scas
pop
pop
cli
inc
jae
adc
inc
xchg
roll
or
mov
aam
fiadds
filds
int
fsub
lock
sarb
dec
lods
fsubrl
fwait
fwait
cwtl
mov
jno
push
jns
pop
rol
popa
insb
enter
iret
mov
pop
mov
pusha
pop
sub
fdivrs
loopne
std
shl
cmp
repz
leave
add
test
fwait
or
and
push
sub
xchg
fstp
inc
pushf
pusha
dec
arpl
mov
cmp
lea
mov
aas
int
jbe
repz
insl
mov
cmp
in
dec
mov
lock
fistps
cld
aaa
pop
inc
xchg
ror
ss
mov
daa
lods
scas
xchg
pop
xor
fdivs
sbb
add
mov
mov
repz
dec
sub
lret
nop
fldenv
adc
movl
lods
iret
les
dec
pop
jmp
jge
xchg
fsubr
lret
outsb
cmp
or
pop
scas
incw
mov
push
xor
xor
sbb
mov
lret
lds
fs
subb
jmp
mov
mov
sti
mov
gs
push
push
pop
pop
push
adcb
and
cs
xor
mov
js
enter
aad
fstl
repz
mov
inc
mov
xor
push
adc
dec
and
jbe
lcall
mov
mov
jl
pushf
mov
add
ds
out
sub
stos
test
push
cwtl
std
adc
jge
data16
ja
outsb
pop
mov
mov
cmpsl
lea
mov
push
jg
cmp
push
and
mul
push
rol
pop
lcall
loop
push
mov
outsb
push
jge
pushf
call
loope
stc
pusha
jno
and
mov
stos
addr16
std
sub
aad
rol
repz
inc
pop
sbb
addb
loop
push
aad
inc
loop
push
push
or
ss
dec
cmp
inc
sub
jae
sub
movsb
fwait
in
popf
fldcw
pop
push
jb
or
and
and
xchg
mov
xor
sbb
js
sub
addr16
push
jg
mov
inc
cs
test
ret
imul
dec
fs
in
xor
add
fs
scas
xor
xor
cmp
pop
outsb
sbb
pop
push
cmpsl
je
mov
int
call
or
int
pop
data16
lret
cmp
xor
xchg
leave
add
repz
jecxz
lea
inc
stc
iret
xchg
into
sbb
pop
rcl
xchg
or
or
clc
std
outsb
fadd
jl
pop
add
inc
xor
outsl
mov
dec
xor
gs
sbb
adc
aas
xchg
sub
cmp
ds
ja
out
or
xlat
pop
fidivrs
loope
pop
adc
inc
inc
getsec
loope
stos
jnp
mov
out
dec
xchg
orb
mov
dec
pop
mov
ja
pop
ss
fwait
sub
bound
cs
jp
fcoms
xor
or
arpl
test
dec
fldln2
jb
jl
push
jecxz
xchg
xor
xchg
addr16
pushf
mov
mov
mov
and
sub
push
leave
mov
cs
cmp
aam
jns
xchg
mov
rcll
sahf
seto
mov
xchg
sbb
movsb
ret
sub
push
inc
mov
mov
xlat
inc
cmc
inc
js
ss
jno
mov
inc
mov
or
mov
test
cmp
mov
xor
mov
addl
out
out
cltd
testb
push
cmp
jne
xchg
jmp
jecxz
mov
or
mov
and
jne
sub
mov
dec
out
pop
loope
imul
xchg
push
lret
or
stc
sbb
and
add
sub
mov
jle
rclb
mov
lahf
lock
lds
scas
xchg
push
sub
fisubrl
fidivl
cmpsb
xchg
pop
fsubrp
sbb
jge
shr
ret
pop
subl
dec
jge
jne
and
adc
jno
lea
mov
js
shrb
xchg
mov
mov
jmp
scas
cmp
pop
push
mov
xor
fidivrl
mov
into
cwtl
jo
jg
fsts
sbb
sbb
bound
mov
adc
aad
lahf
sub
fcmovne
movsb
sbb
out
icebp
pop
repz
repz
bound
sub
in
inc
jns
mov
mov
leave
sbb
jae
xor
out
dec
xor
pop
in
fwait
data16
xchg
adc
lret
sti
test
iret
sahf
push
hlt
push
cmpsl
push
push
in
dec
push
ja
xchg
insl
hlt
rcll
js
dec
dec
push
mov
xchg
loop
in
ret
pop
push
and
pop
dec
imul
jb
inc
sti
cwtl
push
popf
in
shrb
or
push
mov
dec
inc
push
pop
test
in
pop
es
test
jmp
xchg
lock
mov
xor
mov
mov
dec
xchg
mov
adc
lods
jb
push
mov
push
mov
out
push
stos
fsts
imulb
inc
das
cltd
sbb
imul
jmp
mov
sbb
xchg
icebp
or
xor
mov
loope
jns
insb
mov
das
int
es
jns
sub
mov
mov
shrb
loop
push
jp
push
ret
mov
xchg
xchg
ss
pop
mov
or
popa
fdiv
test
shlb
mov
dec
in
jle
inc
lds
int
lret
clc
sbb
sub
and
stos
mov
arpl
jae
shrb
jno
xchg
mov
mov
icebp
pusha
xor
push
mov
lods
push
insb
aaa
arpl
filds
nop
and
cmp
dec
xchg
jne
sti
jbe
xor
dec
or
xchg
divl
jb
cmp
mov
lds
sti
sbb
inc
sar
pushf
leave
mov
dec
repnz
cmpsb
mov
repz
push
les
cs
cmpl
addl
lds
es
mov
negb
ja
sub
xchg
int
daa
stos
xchg
jae
fs
fwait
loope
je
cmpsl
shll
loop
cltd
outsb
cmpsb
shll
addr16
les
push
inc
test
jae
and
xor
xor
mov
mov
test
sub
xor
fiaddl
jb
fnstcw
dec
add
inc
popa
and
mov
xor
xchg
cs
adc
imul
data16
add
sub
stos
jl
ljmp
test
cmp
jmp
shll
ljmp
enter
mov
imul
in
xor
add
mov
lcall
cmp
cmp
mov
xchg
jmp
cwtl
pop
push
push
pop
popf
sahf
mov
fcomps
inc
jnp
push
and
dec
xchg
add
inc
cltd
mov
insb
mov
jne
cmp
rcll
leave
mov
rcl
repz
cltd
push
push
jmp
movsb
xor
ret
xchg
add
scas
es
pop
ret
adc
call
pop
inc
test
ret
lret
shl
cmp
dec
mov
sub
fucom
mov
popf
loopne
ds
cmp
dec
jmp
imul
mov
mov
push
xor
in
iret
rol
pop
xchg
sub
or
mov
sbbb
mov
xor
jno
addb
jmp
dec
sti
leave
xchg
xchg
sub
rcr
je
cmp
cmp
add
push
or
dec
push
xchg
testb
mov
std
dec
fldenv
rcrb
arpl
loope
push
jae
mov
popf
inc
movsb
imul
sub
xchg
std
mov
fmull
xor
jo
int3
lahf
jns
dec
dec
in
ret
push
lea
cmpsb
sub
movsb
out
sarb
adc
jg
mov
adc
inc
push
xor
sbb
push
popf
xor
inc
je
fcmovu
jmp
cmpsl
call
lea
ror
or
push
mov
scas
imul
push
or
repz
leave
fadds
sub
add
jo
and
cld
cmpsl
xchg
aad
and
sbb
mov
je
sub
adc
pop
adc
or
test
popl
and
ja
pop
push
stos
push
orb
mov
sbbl
xchg
cmp
cwtd
lret
and
cmc
push
fs
adc
addl
or
xor
add
inc
pop
push
movsl
pop
mov
test
or
jge
lea
in
outsl
lds
insl
inc
repz
pop
push
test
test
and
mov
xchg
sub
jbe
imul
out
jg
jl
lea
xor
push
or
pop
mov
adc
xor
mov
xlat
es
xchg
or
mov
in
jnp
shlb
xor
cmp
stos
bound
push
cmp
scas
arpl
sub
lock
pop
outsl
push
jmp
lds
add
leave
in
jp
and
cmc
jb
popf
in
aas
pop
add
test
xchg
call
rclb
push
out
cltd
daa
lods
cmc
jns
add
inc
mov
xor
jmp
loopne
adc
mov
pop
gs
dec
and
stos
out
out
inc
lahf
cmp
into
hlt
das
mov
movsl
sub
cld
ds
test
negl
cmp
sub
sti
daa
dec
ds
and
inc
inc
lahf
lcall
adc
ret
mov
mov
lcall
push
notl
std
adc
dec
xor
dec
mov
dec
xchg
jno
mov
dec
pushf
fistl
js
push
jbe
in
mov
sti
push
xchg
adcb
jg
pushf
test
push
insb
data16
in
fsubrl
icebp
mov
inc
outsl
mov
fdiv
and
sub
aad
pop
stos
outsb
jbe
aas
xchg
and
out
dec
in
adc
pop
into
adc
lds
cmp
rorb
addb
mov
mov
ja
inc
ljmp
sbb
cld
mov
test
fdivp
dec
jecxz
sbb
cmp
sti
jg
and
int3
divb
dec
sbb
mov
test
sub
mov
addr16
in
lret
lahf
cld
popa
out
dec
mov
pop
mov
hlt
inc
pop
cmc
ror
fadds
cwtl
xor
xorl
push
inc
push
imul
adc
in
jp
call
loope
dec
dec
and
mov
mov
scas
jo
int
dec
xor
ficoms
adc
nop
jb
fdivp
cmc
jmp
adc
mov
in
cmc
or
lahf
ret
stos
add
sub
or
test
jecxz
inc
add
inc
cmc
arpl
in
sahf
cld
popa
sbb
out
mov
dec
mov
push
mov
xchg
popf
cmp
shl
inc
cli
sbb
fstpt
bnd
aam
cld
mov
pushf
mov
xor
mov
aad
mov
repnz
sbb
dec
mov
jle
pushf
sub
stos
insb
xor
and
imul
repz
aam
faddl
and
add
stc
iret
popl
shll
add
xchg
outsb
lret
pop
add
dec
popf
add
int
ljmp
ror
in
loopne
push
mov
dec
mov
adc
jmp
xchg
unpcklps
xlat
shlb
mov
or
sbb
loop
mov
or
sahf
push
test
leave
imul
push
popa
negl
jl
addl
call
or
dec
int
sahf
gs
mov
ret
nop
lahf
and
lcall
test
mov
lods
enter
inc
add
pop
pop
xchg
jmp
repz
jnp
orb
dec
push
ret
push
xchg
in
outsb
pop
outsb
pop
xlat
adc
fs
jns
test
cmp
movsb
cmp
nopl
mov
shl
ret
fstpl
adc
mov
fnstsw
inc
jmp
cmpsb
jp
or
sub
jne
ds
mov
leave
mov
outsb
jmp
sub
roll
mov
sbb
imul
stos
movsl
mov
mov
sbb
adc
add
lock
jge
pop
fsts
push
adc
andl
adc
jo
push
adc
or
testb
icebp
into
adc
lea
movsl
or
imul
sub
lea
xlat
jl
push
add
leave
mov
sub
adc
outsl
xor
mov
frstor
loop
bound
in
inc
cwtl
add
push
lret
popf
shrb
push
int
push
dec
sub
adc
int
sbbb
or
repnz
adc
insl
pop
push
inc
jae
sub
cwtl
out
add
cs
or
xchg
mov
mov
lahf
leave
fwait
push
mov
rorl
idivb
cs
add
mov
imul
stc
cmpb
push
jmp
popf
in
fbstp
mov
jle
adc
xor
adc
in
or
movsl
jne
out
push
xor
movsl
pop
or
lea
int
inc
cli
std
add
add
or
insb
inc
and
or
or
es
mov
pusha
xchg
mov
adc
je
out
out
jl
fldt
and
jb
shl
jae
lods
mov
xor
add
jo
pop
in
out
xlat
xchg
push
iret
unpckhps
mov
mov
push
jg
mov
int3
shr
cmp
jbe
sub
add
or
data16
jle
sub
pop
test
jo
mov
mov
test
test
mov
push
in
roll
gs
inc
outsl
insl
mov
jae
negb
cltd
push
adc
push
jae
sbb
pop
imul
add
mov
sub
arpl
out
or
loop
adc
mov
clc
adc
xchg
ret
ds
lret
out
in
mov
fxch
push
or
shr
shlb
and
daa
sub
xchg
aas
pop
push
ljmp
cs
dec
mov
lds
lahf
or
push
std
pop
cs
fstps
rcrb
jmp
mov
push
cmp
inc
inc
sti
or
aas
das
push
je
push
mulb
mov
pusha
decl
test
shrd
mov
outsb
push
sti
outsl
bswap
aad
jne
sbb
test
sbb
jecxz
mov
movsb
fstps
and
mov
mov
mov
popa
dec
cmpps
pop
mov
repnz
sub
popf
jg
jno
sti
mov
xchg
into
xchg
js
jo
aam
mov
push
pusha
int3
inc
add
pushf
push
jb
mov
test
cmp
push
xchg
jmp
test
mov
bound
mov
push
lods
mov
mov
and
xor
jmp
clc
mov
orl
hlt
mov
xlat
cmp
mov
aam
je
lds
jecxz
mov
mov
cmp
addr16
pop
fildll
mov
xchg
mov
lds
rolb
sub
mov
xchg
movsl
repnz
rcr
push
loope
pop
lods
js
mov
roll
inc
ds
adc
or
push
aam
cmpsb
in
sub
and
xchg
jb
out
int3
in
lock
lahf
mov
das
xchg
push
or
jnp
push
outsl
xor
jp
ret
sbb
cmp
jno
repnz
or
xlat
dec
xchg
outsb
xchg
sub
pushf
pop
cwtl
or
lea
mov
mov
mov
ret
aam
es
dec
jnp
pop
mov
loope
inc
ret
rclb
movsl
iret
dec
out
jbe
cltd
mov
pop
lock
dec
repz
sahf
pop
cmp
jl
mov
bound
adc
flds
addr16
jecxz
jae
xchg
pusha
adc
stos
inc
mov
mov
leave
fwait
xor
mov
pop
xchg
inc
pop
adc
jge
mov
sbbl
mov
lea
pop
cmovs
cmp
fsubp
jmp
mov
inc
or
ljmp
mov
in
xchg
cmpb
lods
into
cmc
aaa
in
comiss
test
xchg
cli
push
push
adc
pop
mov
cltd
outsl
xchg
jecxz
inc
push
mov
aas
sbb
fsubrl
jns
ljmp
movsl
jmp
test
sbb
jp
xor
dec
mov
pop
ret
arpl
inc
pop
push
mov
aad
jne
rorl
icebp
mov
enter
and
sahf
mov
push
mov
inc
das
sbb
fisttpl
cld
ja
push
dec
fldcw
dec
mov
mov
fs
lcall
ds
repz
arpl
sbb
dec
test
mov
dec
adc
cmp
std
negb
mov
std
mov
adc
lock
jno
add
mov
les
xor
inc
aaa
int
mov
mov
addl
addr16
cs
pop
fcoml
add
jle
orl
sub
bound
movsl
push
shlb
enter
dec
dec
push
movsl
jp
cmp
sbb
out
pop
sub
push
mov
mov
sbb
xchg
fisubrs
int
testl
stc
mov
into
incb
dec
cmc
je
adc
add
and
adc
outsb
pop
stc
je
test
jge
add
int
cli
popf
mov
outsb
and
or
sbbl
lcall
xchg
aam
inc
pop
das
stc
loop
bound
pop
mov
add
xchg
mov
mov
lods
aaa
jg
jns
loop
and
push
es
lock
aas
in
mov
lock
mov
mov
mov
fwait
hlt
int3
rcrb
scas
cli
xchg
dec
jp
sbb
sahf
mov
fs
das
mov
pop
mov
xor
push
adcw
ja
cmpsl
push
andb
popf
inc
mov
fnstenv
xchg
mov
daa
xor
push
and
pop
or
insl
push
mov
mov
sahf
dec
sbb
and
cwtl
adc
repz
daa
dec
cmp
xchg
int
xchg
xchg
sub
mov
shl
mov
sarb
out
mov
mov
sbb
in
imul
lods
cmp
xor
mov
cld
rorb
nop
imul
push
cmc
xchg
aam
push
lock
pop
in
pop
pop
pop
rcr
push
shlb
dec
mov
xchg
xor
cltd
fwait
inc
mov
add
scas
mov
test
dec
dec
repz
aaa
mov
fimuls
sti
test
clc
std
add
fcmovne
mov
unpcklps
add
scas
loopne
sub
jge
and
aam
xor
faddl
cmpsl
lahf
jp
cmp
mov
jnp
int3
mov
cmp
fildll
pop
or
adc
jl
flds
in
cli
sbb
push
jle
shr
insb
mov
push
fimuls
xchg
inc
pop
incl
mov
jnp
out
sub
push
add
mov
or
stos
lds
pusha
dec
fildl
mov
mov
xor
insl
push
cmp
imul
fst
out
pop
pop
mov
out
sub
jmp
test
mov
rorb
mov
sbb
popa
int3
add
orb
sti
decl
data16
dec
ljmp
das
mov
repnz
pop
stos
scas
sub
xor
jnp
jmp
les
pop
jl
inc
into
adc
sbb
push
mov
pusha
pop
dec
adc
dec
pop
add
jge
xlat
dec
es
inc
in
test
inc
mov
outsl
je
inc
sbbl
lods
sbb
adc
mov
xchg
jg
push
test
fs
lods
sbb
mov
ret
xorb
add
jnp
out
add
sbbl
loopne
pop
and
scas
cmp
xor
mov
outsb
lret
orb
aas
sbb
call
mov
pushf
xchg
dec
adc
add
ljmp
sbb
shll
add
sti
mov
stos
mov
je
or
mov
inc
cmp
dec
and
fwait
insl
lds
push
mov
push
inc
add
decb
xor
gs
ljmp
nop
mov
jp
repnz
xor
lcall
cmpsl
cli
daa
xorl
jb
mov
out
push
mov
lahf
les
mov
jge
inc
pop
ret
mov
dec
sbb
sbb
shl
mov
push
repnz
popf
lods
xlat
mov
nop
test
mov
icebp
xlat
arpl
mov
jne
inc
inc
push
dec
rorb
sub
pop
mov
in
jge
mov
cmp
fcmovu
fsubrs
stos
or
jecxz
out
fwait
imul
fstl
jo
mov
push
inc
sbb
jmp
je
out
or
cmc
pop
mov
orl
aaa
mov
pop
rcrb
xchg
mov
or
iret
mov
push
out
add
sub
jbe
push
mov
outsl
test
jge
gs
adc
cmp
test
sbb
inc
xchg
inc
fstps
test
xlat
popf
outsl
xchg
sub
xchg
fadd
or
inc
bound
fwait
and
repz
add
sar
mov
repz
shlb
addr16
out
je
xchg
std
rorb
xchg
loope
xor
or
mov
movsl
adc
test
das
pop
dec
dec
pmullw
decl
leave
andb
xchg
arpl
shrb
mov
push
mov
mov
and
xchg
xchg
gs
mov
mov
loopne
mov
inc
mov
cmp
shl
fwait
inc
iret
jae,pt
add
mov
inc
je
jb
xchg
dec
push
sbb
enter
cmpsl
add
cmp
fsubr
and
jne
rcrl
sahf
ja
sbb
cs
sub
insb
roll
mov
xlat
lcall
repz
sbbb
or
mov
jbe
mov
sbb
popa
repz
adc
adc
mov
pop
addr16
popf
js
push
inc
rcll
ljmp
es
push
dec
fwait
or
ret
and
fnstcw
mov
xor
cwtl
pop
add
test
mov
or
fistpll
mov
fists
fistps
stc
dec
sub
test
subl
or
push
sub
les
notb
sub
mov
and
pushf
test
addb
movb
inc
loop
sbb
dec
lea
cs
adc
xor
and
idivb
or
cmc
push
and
jns
dec
ja
lock
fadds
lea
pop
sub
repnz
in
cmpsb
out
lcall
mov
pop
jmp
movsb
cmp
push
dec
ljmp
push
mov
xor
stos
adcb
fwait
dec
inc
rcrl
in
pop
xchg
jecxz
fwait
daa
je
jbe
mov
adc
ficompl
repz
into
or
xchg
lds
daa
loope
mov
sub
cltd
mov
xor
cmp
jne
std
push
xchg
lea
adc
icebp
or
jne,pt
sahf
movsl
push
faddp
and
push
cmpsl
fisttpll
test
mov
sbb
cmp
or
lods
inc
imul
scas
jl
cltd
cmp
mov
adc
pop
daa
push
ss
addr16
pop
popf
popa
fdivrl
jge
mov
cmp
push
outsb
outsl
outsb
mov
mov
push
mov
fidivs
mov
jnp
jno
jnp
cmc
xchg
mov
test
addb
xchg
fyl2xp1
dec
and
cld
pop
insb
xchg
jmp
mov
jge
mov
popf
xchg
inc
in
xlat
inc
inc
loope
or
mov
push
dec
fidivrl
xchg
in
sbb
das
push
ds
add
fs
lcall
sbb
push
jbe
mov
cltd
xchg
lock
adc
push
jb
xchg
xchg
std
repnz
pop
mov
jne
fidivrs
jne
push
sbb
pop
pop
fildl
jae
pop
add
adc
enter
cli
sbb
pop
cmp
cmp
mov
cmp
aas
nop
add
sub
mov
push
and
es
and
ja
fwait
inc
test
jb
shrl
loopne
in
or
pushf
movsl
ror
pushf
mov
cmp
dec
xor
xchg
adc
lds
mov
jno
data16
push
repz
out
mov
shll
mov
roll
inc
lds
es
insb
je
lret
jns
ljmp
adc
pop
cwtl
xor
mov
cmp
cmpsl
adc
jno
dec
adc
or
aas
inc
arpl
dec
out
and
dec
add
lcall
outsl
jb
imul
xchg
mov
add
xchg
addb
xor
lea
aaa
outsb
mov
sub
or
jg
xchg
xchg
adc
cmp
es
daa
sub
orb
pop
mov
cmp
dec
cmp
aaa
cli
jne
sbb
in
leave
xchg
jo
movsb
and
test
xorl
sub
test
fcom
adc
call
mov
xchg
pushf
hlt
cmp
mov
dec
jo
adc
mov
dec
sarb
mov
push
cmp
aam
jae
rolb
fistl
cmp
leave
nop
push
xchg
jb
inc
mov
mov
hlt
testl
outsl
cli
mov
das
ja
cmpsl
adc
pop
dec
sbb
pop
cmp
dec
dec
mov
movsb
sbb
lock
es
xor
sti
mov
repz
out
mov
push
and
lret
pop
fdivr
in
ret
cmc
dec
lock
pop
push
xchg
js
fwait
std
xor
mov
lahf
aas
imul
adcl
jecxz
imul
sbb
dec
pop
rolb
dec
mov
inc
cmp
test
add
ja
popa
rorb
ds
sbb
imul
jp
pop
cmpb
stc
dec
xorb
mov
ds
dec
mov
repnz
inc
fidivrs
and
fs
mov
mov
js
shlb
inc
or
jle
push
or
lods
jmp
xor
popf
xchg
jae
lcall
stos
cld
or
and
xchg
and
adc
lret
divl
pop
xchg
pop
inc
and
inc
aas
orb
leave
jno
test
inc
push
les
and
popf
or
push
iret
ja
jl
fnstcw
adcb
icebp
call
xchg
or
loope
jge
mov
clc
rorb
push
scas
push
ret
int3
mov
xor
cmp
and
pusha
les
sbb
into
out
push
shrb
movsb
sbb
push
leave
mov
dec
adc
or
mov
imul
sbb
jo
mov
push
inc
cmpsl
ss
fildll
and
insb
cmp
clc
rcrb
inc
pop
mov
jbe
push
mov
mov
mov
iret
lea
inc
icebp
mov
dec
xchg
pop
jne
add
pop
gs
scas
test
xchg
js
mov
inc
xchg
xor
icebp
mov
inc
lcall
clc
cld
adc
jg
jbe
add
idivl
cmp
loop
push
sbb
dec
stos
lods
out
push
adc
jno
test
cmp
mov
jmp
jne
mov
sbb
jmp
clc
jmp
inc
mov
fwait
push
mov
and
mov
mov
push
mov
sub
in
imul
and
and
dec
fs
rclb
push
lret
inc
daa
icebp
sbb
andb
cli
inc
bound
pop
cmpsl
xchg
popa
nop
repnz
push
mov
mov
lock
jns
or
lods
rorb
mov
xchg
push
pusha
stos
push
cmp
mov
xor
ja
xor
push
inc
pop
mov
jno
push
inc
or
push
push
ss
push
xchg
add
ret
leave
mov
xchg
fsubr
ja
dec
mov
mov
fst
jb
mov
jae
rorb
cmp
jge
fwait
stc
fsubs
mov
fwait
or
insb
and
gs
and
scas
leave
dec
or
cmp
push
in
stc
inc
ds
fimuls
std
sarb
out
xlat
xor
add
sti
stos
negb
mov
mov
cmp
roll
add
out
sahf
inc
adc
xor
insb
push
das
repnz
fmuls
pop
outsl
mov
sbb
mov
mov
cmp
repnz
mov
cmpb
sub
jmp
xor
pinsrw
mov
test
dec
aad
sub
or
je
call
mov
or
add
inc
lock
xchg
push
cwtl
ss
test
pop
shrb
mov
loope
push
rcrl
rcrb
mov
loop
jbe
jbe
testb
mov
jmp
sbb
pop
mull
es
jno
add
xlat
mov
aad
mov
je
mov
sub
xor
sub
pop
cmp
int
test
xchg
movsb
mov
xchg
repnz
ljmp
mov
dec
aas
jl
fisttpll
out
pop
mov
ds
pop
ret
mov
ret
push
dec
jl
mov
ds
movsl
loope
shlb
jae
incl
mov
add
ret
out
popf
jnp
xchg
out
or
pop
mov
in
push
jecxz
ljmp
jns
aas
mov
push
imul
mov
cmp
and
mov
jns
push
leave
xor
xor
scas
stos
dec
mov
dec
jecxz
adc
adc
fistps
sub
sbb
or
add
fs
lds
mov
mov
adc
mov
andb
sti
outsb
call
repz
and
jmp
loope
testb
pop
dec
dec
ss
mov
das
push
negl
mov
jecxz
cmp
divb
inc
inc
push
dec
leave
cmp
mov
lahf
adc
jae
in
pusha
shll
mov
test
sbb
insb
jg
mov
or
pop
xchg
mov
aad
and
xor
sbb
adc
aad
jge
mov
mov
sub
dec
dec
movsb
aaa
mov
xchg
cld
enter
insl
push
jbe
nop
xor
add
mov
mov
dec
outsb
xor
adc
mov
lods
inc
aad
imul
inc
mov
subb
or
popa
and
movsb
pop
inc
xor
iret
adc
gs
mov
nop
mov
sbb
cmpsl
inc
mov
aam
mov
push
sbbb
mov
push
mov
inc
jle
dec
shrl
jge,pt
repnz
out
sub
cs
in
mov
lcall
push
cld
pop
dec
es
or
xor
int
lahf
outsb
mull
xchg
sahf
xchg
mov
out
or
test
repz
cmpsb
and
pop
std
push
cmp
push
addr16
lret
lock
movsl
mov
mov
add
xlat
or
outsl
fmuls
cmp
mov
repnz
std
push
fildll
das
xchg
add
out
cltd
and
mov
mov
dec
push
push
and
dec
mov
and
sti
jae
mov
push
sbb
fmull
jmp
mov
cmp
sbb
ret
sbb
push
outsl
and
sbb
lret
outsl
scas
hlt
sbb
push
mov
mov
lock
out
push
mov
add
dec
cmp
dec
push
mov
jne
sub
cmp
jmp
jne
ja
cmp
cwtl
call
enter
cs
fiadds
pop
fwait
js
cmpl
popf
pop
into
or
jecxz
sbb
inc
pushf
cmp
sbb
and
sub
pop
aad
nop
cmp
lods
dec
gs
inc
mov
mov
out
mov
ret
jg
sarb
arpl
loopne
popf
mov
fsubrs
inc
cmp
or
inc
mov
mov
dec
bound
inc
mov
pusha
adc
push
jl
dec
repnz
push
add
mov
xchg
daa
mov
sbb
add
sbb
xor
jo
icebp
or
dec
sti
sbb
and
fs
call
cmp
ds
dec
pop
jb
push
inc
add
fwait
out
pop
mov
pop
xlat
loope
loope
icebp
shrb
movsl
xor
xlat
inc
cmpsb
pop
and
pushf
out
or
and
dec
push
add
enter
xchg
stos
adc
pop
xchg
loopne
add
sbb
xchg
pop
das
xchg
test
sbb
psadbw
or
jge
push
dec
or
lods
test
enter
jg
into
inc
mov
or
addr16
das
lods
sub
xlat
mov
lods
or
das
mov
adc
pop
repz
les
sub
mov
push
mov
pop
dec
lods
out
cmc
pop
imul
fsubp
mov
cmp
pushf
xchg
mov
adc
lcall
xchg
mov
fdivl
stos
dec
mov
test
jbe
xchg
pop
movsl
cmp
test
add
popf
popl
xchg
sbb
lds
roll
mov
and
call
js
xchg
cmc
in
and
sbb
fidivrl
test
jl
nop
fcmovnb
outsl
sbb
cmp
add
aaa
arpl
mov
dec
and
in
xchg
aam
icebp
add
mov
cmc
add
pushl
mov
out
je
call
ljmp
test
xchg
dec
lret
out
std
mov
mov
jbe
std
adc
movsb
ljmp
orb
push
dec
repz
jecxz
lahf
dec
int
xchg
jno
add
jns
push
adc
push
push
dec
cmpsb
outsl
lret
mov
xorl
js
je
test
xor
cmpl
pop
push
imul
orb
xor
bound
xchg
xchg
pop
mov
outsb
inc
addr16
sub
jg
sbb
stc
lock
stc
jmp
mov
xchg
mov
xor
jge
imul
loopne
inc
jl
pop
cs
inc
adc
enter
fmuls
push
adc
and
adc
pop
lock
mov
sub
mov
inc
cmp
cs
cli
push
andb
adc
les
in
sbb
push
pop
mov
dec
shll
shlb
jle
jns
xchg
ds
fwait
loopne
jnp
or
and
xchg
gs
sub
add
in
push
mov
and
std
and
sub
in
movsl
mov
xor
xlat
cmpb
cmp
aad
into
xor
movsl
mov
jnp
xor
outsb
xor
es
jmp
xchg
scas
cmp
into
ret
mov
repnz
aas
aam
push
dec
loope
fyl2xp1
or
xchg
mov
adc
jnp
add
ret
andl
notb
sub
nop
xorl
mov
test
dec
loope
repnz
jae
inc
icebp
jo
jl
clc
fs
add
addr16
sbb
jmp
mov
mov
push
pop
in
mov
push
movsl
or
xor
out
rorb
js
fcmovnbe
bound
lahf
das
dec
rorb
lret
push
mov
lock
sbb
push
loop
xchg
inc
push
adc
xor
dec
sub
pop
int3
xchg
cmpsb
sub
cli
xchg
loopne
add
stos
cmp
lds
cwtl
or
mov
rcrb
sti
mov
test
push
mov
les
fucomi
cmp
int
andl
out
stos
leave
and
xorl
cmpsb
sbb
jns
push
fcmovbe
in
jge
sti
sub
mov
and
adc
xorb
mov
mov
sbb
lds
push
outsb
shl
mov
or
outsb
mov
lret
pop
or
shl
cmp
inc
sbb
popf
dec
cmp
jg
mov
loope
jb
ds
ret
pop
je
sub
or
push
mov
sbb
arpl
pop
add
out
and
pushl
ljmp
hlt
nop
shl
mov
daa
nop
ja
and
fists
jno
sbb
or
aam
imul
jnp
jg
mov
sahf
xchg
test
xor
or
mov
adc
jo
out
adc
sbb
shl
mov
sbb
mov
push
cmp
pop
test
mov
mov
shrl
push
jp
mov
sbb
cld
out
in
movsb
sub
out
jmp
in
add
insb
mov
outsl
xor
mov
call
cmp
shlb
pop
inc
mov
or
and
jge
addl
sub
sub
fs
fidivs
push
jno
mov
adc
and
movsl
movsb
mov
xchg
adc
dec
sub
dec
sub
xor
mov
pop
loopne
in
cli
sbb
xor
clc
xchg
popf
dec
xchg
out
lods
das
inc
jecxz
cmc
cmp
cmpsl
push
dec
cs
push
lea
mov
push
dec
and
sbb
loope
repnz
mov
mov
in
sahf
sub
fs
sub
inc
sbb
loopne
addr16
mov
fstpl
adc
lahf
gs
cwtl
jecxz
mov
fbstp
jmp
ljmp
jg
ret
adc
nop
sti
daa
mov
jne
add
push
decl
add
jmp
outsb
and
rcll
cmp
outsb
xchg
lret
jge
out
mov
mov
jmp
inc
sbb
shll
ss
pop
dec
sbb
es
js
cmc
lods
inc
loop
adc
xchg
loop
jg
jnp
push
call
dec
jge
bound
repz
les
aad
pop
mov
lods
xor
or
xor
dec
pop
jae
lahf
in
fistl
pop
and
and
dec
js
mov
stos
adc
gs
sub
ret
mov
dec
mov
add
add
mov
addr16
cli
jno
test
or
fs
pushl
mov
inc
ss
push
out
insl
sub
enter
push
in
out
push
faddl
lods
mov
push
jmp
pop
add
mov
or
push
and
jl
call
daa
arpl
negb
inc
xor
mov
push
pushf
sbb
or
add
bswap
cmp
or
adc
push
inc
imul
std
rcr
jno
pop
pushf
mov
cmp
adc
aad
jns
in
xchg
xor
add
ret
dec
adc
test
je
subb
ret
mov
jno
mov
or
nop
sub
pop
inc
cmpsb
js
cmp
lods
add
lret
or
and
push
mov
jno
jge
enter
ss
xor
mov
movsl
call
mov
out
jle
xchg
movsb
pop
mov
test
andb
fisttpl
add
xchg
out
inc
or
jo
decl
inc
arpl
lahf
aas
rolb
sbb
inc
popf
pusha
sub
cmp
sbb
test
or
sbb
inc
sbb
scas
xchg
insl
lds
fidivl
inc
jmp
jge
jae
mov
fcomps
or
dec
or
add
loopne
adc
mov
add
mov
pop
sbb
inc
aaa
movsb
nop
jp
cmpsl
sbb
cmp
adc
cmp
ds
sahf
cs
loope
fisubl
mov
fnstsw
mov
pop
cmp
pop
and
push
loop
jl
pop
ret
jge
dec
xor
cmp
cwtl
push
jge
mov
cmc
fldcw
leave
mov
sbbl
fnstenv
jbe
mov
std
fildll
cmp
inc
hlt
decl
std
and
js
mov
adc
xor
fsincos
insb
jo
cmp
in
push
mov
cld
and
pop
sbb
leave
repz
jbe
aad
or
les
pop
clc
imul
pop
pop
or
pop
sub
jnp
mov
jo
jno
dec
mov
inc
or
cmp
mov
xchg
sbb
test
mov
int3
int3
dec
mov
jle
inc
leave
pop
cli
ficompl
jae
stos
test
pop
jecxz
jmp
insb
aam
mov
rcr
mov
bound
sub
negb
pop
fsts
sub
mov
pop
js
dec
sbb
xchg
in
xchg
jb
stos
cwtl
and
stc
pop
jle
dec
jmp
adc
inc
lock
inc
popf
shlb
or
push
in
test
stos
dec
mov
int
shl
lret
xchg
in
int3
inc
test
loope
hlt
filds
mov
jb
lahf
jo
mov
sub
inc
std
sub
jbe
xchg
jl
inc
loopne
pop
pop
test
cmpsb
jne
adc
jl
loop
sbb
out
jns
jl
push
pop
jecxz
popa
lret
dec
inc
dec
fstpl
js
in
test
aaa
xor
fisubl
cmc
scas
es
mov
insb
push
shl
or
incl
insl
fsubp
push
ret
dec
mov
fs
scas
adc
leave
push
cmp
fdivs
mov
iret
push
sub
and
popf
lret
inc
gs
inc
stos
stos
into
xchg
mov
mov
das
pop
xchg
cmp
out
inc
andb
xchg
push
inc
xor
mov
fstps
push
mov
pusha
mov
in
out
jo
sbb
mov
call
adc
cmp
mov
rcll
cs
ret
movsb
les
jmp
pop
aam
cmp
sub
mov
mov
mov
push
xor
insb
ss
shrl
xchg
js
stos
fincstp
dec
add
ss
aaa
jecxz
int
mov
adc
mov
je
and
aad
sbb
push
mov
rcll
mov
sbb
mov
and
aad
jmp
or
fs
sahf
ljmp
shlb
nopl
cli
ret
mov
cmpsl
leave
lcall
dec
adc
mov
mov
adc
fiaddl
cwtl
and
xchg
cmp
cmp
or
ret
cmp
cmp
xchg
dec
ret
cmp
pop
adc
int3
test
in
out
or
fadds
or
jmp
mov
lock
mov
inc
push
cmp
cmp
push
lret
sbb
test
enter
cltd
xor
xchg
fstl
add
inc
gs
mov
mov
ffreep
sbb
or
dec
fwait
rolb
fsubs
lds
xchg
jle
push
cltd
mov
and
add
inc
outsb
repz
mov
outsb
int3
int
push
adc
mov
shlb
adc
ds
out
or
xlat
jae
cmpsl
fcmovnb
mov
addr16
xchg
incb
test
add
cmpsl
int3
and
ficoml
adc
push
idiv
xor
outsl
sub
mov
out
sbb
mov
popa
jo
out
lods
aaa
gs
popa
sub
jae
jo
lret
inc
push
or
adc
fsubl
lcall
ds
loop
popf
cmpsl
insb
ljmp
cmpsl
pop
scas
push
jp
divb
mov
sbb
add
push
sahf
jnp
inc
inc
cltd
cmp
into
push
pop
enter
push
jno
mov
aad
data16
lcall
cmp
scas
in
popa
lods
adc
iret
add
xchg
cmc
sub
mov
inc
add
or
cmc
insl
jecxz
pop
shrb
xchg
mov
stos
lret
jmp
xor
inc
or
push
xchg
ret
xor
outsb
jg
cmp
fnstcw
mov
test
test
push
shrl
push
sbb
orl
fisubl
out
or
push
not
inc
sbb
pop
jecxz
pop
adc
lret
pop
and
pop
adc
fsubl
cmp
outsl
in
or
outsb
subl
imul
jnp
push
mov
jne
cmpsb
lahf
jg
or
inc
or
ja
fs
pop
xor
mov
jle
enter
inc
rcrl
faddl
xchg
push
xchg
pushf
and
push
insb
out
xor
xchg
scas
jno
dec
pop
mov
xor
push
lea
sub
mov
fldt
cld
into
rcl
cmp
cmpsl
mov
push
out
pop
add
test
pop
mov
sbb
in
or
imul
std
lcall
push
adc
mov
dec
cmp
arpl
aad
jno
or
mov
pusha
sub
xchg
and
jmp
pop
cmc
imul
iret
and
rcr
jnp
ds
xor
fldcw
xchg
dec
jns
ljmp
incl
sub
sti
in
shlb
aas
outsb
mov
inc
push
movsb
dec
pop
nop
aaa
movlps
sbb
call
shl
imul
mov
out
pop
aaa
outsl
lahf
jl
dec
jg
mov
xchg
scas
xor
out
movl
in
mov
cmpsb
outsl
mov
jnp
xor
mov
je
mov
push
int3
mov
outsb
sbb
or
xchg
test
jae
idivb
mov
xchg
data16
std
add
sub
adc
and
test
lock
jo
or
dec
or
pushf
bound
enter
mov
clc
sub
in
loopne
mov
or
mov
js
test
fisttps
call
stos
inc
lock
fidivrs
in
and
sub
pop
jae
scas
push
sub
bound
sbb
xchg
leave
sub
lcall
daa
das
insl
das
int
repz
das
lea
iret
sbb
repz
test
std
jecxz
cmp
ret
dec
xor
in
xor
lods
jg
adc
adc
lret
sbb
lds
pushf
jge
sbb
adcb
mov
adc
sbbb
and
jp
in
inc
adc
adc
sub
mov
dec
loope
mov
in
shlb
push
push
add
clc
sbb
adc
mov
xlat
notl
lahf
or
or
sub
mov
sbb
pop
inc
cmp
mov
or
dec
pushf
daa
movsl
inc
push
mov
int
lods
cmp
pop
mov
ss
mov
int3
mov
adc
xor
pop
jge
lods
in
data16
cmpsb
or
sbb
nop
and
push
les
dec
mov
dec
sbb
ja
sub
rcrb
mov
mov
enter
xchg
int
mov
int3
rcrb
cmp
imul
sub
cmp
dec
xchg
scas
mov
or
lcall
adc
lds
and
dec
leave
lock
mov
enter
sub
ret
mov
push
and
je
and
inc
mov
xor
mov
jbe
lahf
cmp
and
add
pop
adc
and
loope
add
inc
sbb
aas
mov
mov
sub
aam
ja
addr16
enter
movsl
pop
sub
cli
test
imul
in
insl
push
dec
mov
fsts
js
pop
xor
adc
and
xorl
clc
enter
gs
imul
out
push
rcll
mov
inc
ds
xor
clc
imul
lds
sbb
hlt
lods
mov
repz
mov
sysret
mov
loope
lods
cmp
inc
push
lods
jecxz
push
jnp
xchg
pop
scas
js
aad
push
xor
pop
jbe
sub
inc
push
je
arpl
rcll
jne
insb
andl
shll
dec
mov
mov
test
push
mov
cmp
pop
push
lds
je
popa
mov
pop
sbb
lahf
sbb
fisubrs
lahf
xchg
fidivs
popf
test
lds
jg
jbe
mov
lods
sbb
cmp
inc
sti
add
fs
adc
inc
mov
in
sub
out
loopne
and
divps
or
dec
cmp
add
xor
aaa
pop
xchg
sub
add
out
push
xor
aaa
inc
dec
test
mov
dec
fs
or
xchg
mov
add
pusha
jbe
or
push
mov
xor
ljmp
mov
test
lfs
adc
out
and
add
mov
lods
pop
jle
lcall
rorb
jl
xchg
lret
xor
sti
mov
rorl
xchg
rorb
notl
xchg
mov
xchg
lods
pop
jnp
rcr
push
movsl
arpl
sub
mov
mov
mov
insl
inc
lcall
test
mov
scas
cmpsl
adc
cmp
ja
int3
stos
mov
aas
mov
mov
fbld
lret
aaa
in
mov
pusha
pop
arpl
push
pop
imul
sbb
sub
sbb
adc
mov
pushf
mull
adc
test
imul
cwtl
lea
aad
jl
das
inc
outsl
cmp
add
inc
push
cwtl
lcall
xor
notl
xchg
jnp
dec
or
in
in
pop
lea
shrb
test
insb
dec
jno
xchg
push
sbb
add
push
add
scas
push
jae
cmp
dec
xor
cmp
dec
cwtl
ljmp
mov
lock
scas
push
cmp
popa
fs
sbb
mov
movsl
jb
add
imul
lock
add
xchg
test
roll
iret
aaa
in
daa
or
mov
imul
leave
std
fdivrs
popf
notl
push
not
lahf
dec
fs
add
mov
in
push
bound
lods
pushf
out
push
cmpsb
push
js
arpl
and
ljmp
lcall
xchg
rcrl
xchg
shr
int
add
mov
jb
mov
push
iret
shrb
xor
push
pop
xlat
je
in
pop
or
inc
and
pop
pop
test
ds
andl
cmp
mov
mov
push
stc
nop
xchg
in
popa
mov
sub
cwtl
dec
stc
lods
xchg
popa
pop
cmpsl
fistps
cmp
xchg
cli
loopne
jo
lock
fistps
adc
ds
add
adc
pop
push
push
daa
dec
lret
mov
pop
lret
cmp
adc
cmpsb
push
out
jmp
sub
push
jne
cmp
add
mov
add
add
subb
fsubrl
loop
ds
inc
xchg
outsb
shll
xor
adc
cs
fstpl
push
pushf
sbb
jo
pop
mov
pop
mov
jnp
movsl
cmpsb
jae
inc
das
pop
pop
scas
xor
pop
shll
inc
cld
fcompl
mov
inc
jo
loopne
sub
mov
xor
pop
daa
ffree
sub
daa
fcomps
out
outsb
sub
xchg
orl
scas
xchg
sub
popf
insb
test
aad
out
push
mov
shll
push
jno
pop
push
add
inc
adc
jmp
adc
imul
inc
movsl
fisttpl
mov
cld
and
pushf
xchg
mov
clc
fmuls
or
pop
mov
outsb
sbb
ret
fistl
or
mov
or
cmc
sti
mov
jecxz
clc
mov
pop
dec
and
lods
idiv
jle
nop
cmp
mov
or
pop
loop
or
mov
or
jp
pop
cltd
pop
shl
fwait
add
push
sbb
sti
lods
out
xchg
xorl
push
hlt
js
lret
out
enter
inc
lret
lret
mov
out
test
fcomip
lea
jg
pusha
mov
jg
ret
mov
lret
jmp
inc
test
sahf
enter
sahf
push
call
jnp
das
movsl
insl
fmull
xor
or
xor
mov
out
into
pop
xor
bound
lret
das
int
mov
mov
sbb
je
enter
ret
push
push
icebp
adc
mov
dec
cmp
into
lods
ljmp
jmp
bound
push
sub
shlb
add
lret
fsubr
cmpsl
push
jge
lods
mov
cmpb
lea
sbb
rep
js
or
adc
or
dec
hlt
sbb
xchg
movsl
push
clc
out
cmpsb
dec
cmp
dec
fwait
rorl
pop
popf
test
roll
or
ficomps
jge
adc
sub
je
lods
pop
inc
test
push
xchg
pop
xchg
pop
inc
into
or
xchg
int
imul
jo
bound
cmp
add
add
gs
in
sub
sub
movsl
dec
fldcw
in
loope
xchg
test
out
and
sti
jb
mov
cld
mov
push
es
pop
push
cli
pusha
sahf
scas
and
push
shlb
sub
arpl
sub
sahf
lock
sub
mov
mov
jle
inc
mov
into
xchg
pop
xchg
div
or
icebp
pop
jge
adc
cli
mov
sbb
movsb
cwtl
adc
cmp
lahf
inc
ss
jo
pop
or
push
cmpl
arpl
pop
loope
fisubl
sbb
xchg
pop
loop
inc
out
and
ficomps
xchg
mov
push
idivb
out
lret
leave
dec
sbb
lea
adc
dec
dec
jle
adc
sub
cli
jb
ljmp
and
mov
bound
pop
mov
fwait
push
in
jmp
addb
outsl
add
ds
ret
fwait
inc
push
dec
lea
mov
xchg
ss
test
mov
mov
lds
dec
mov
push
ficoms
push
pop
adc
es
bound
mov
mov
std
push
in
mov
sbbb
inc
sbb
pop
mov
pop
popf
inc
mov
pushf
je
jno
and
dec
dec
cmp
xchg
sub
or
jo
inc
jecxz
push
repz
aas
ss
iret
sbb
push
xor
mov
faddl
push
in
jb
jg
into
jecxz
outsl
icebp
rorb
xchg
sbb
sub
lret
pop
add
cmp
mov
and
pmullw
imul
filds
and
mov
xlat
add
jl
and
xchg
mov
push
add
ds
mov
insl
jno
jbe
mov
fisubrl
xchg
pop
xchg
daa
data16
aam
in
outsb
inc
in
xor
jmp
push
inc
mov
test
mov
out
lock
push
inc
xchg
or
repnz
ss
xchg
pop
pop
push
pusha
xor
inc
data16
cwtl
pushf
sub
add
mov
inc
adc
sahf
pop
mov
arpl
xor
add
in
dec
ret
mov
mov
cmp
mov
mov
lcall
rcrl
rcrl
loop
shrb
xor
pop
jae
test
das
inc
rcrl
fwait
hlt
push
jl
adc
testl
dec
xchg
dec
or
enter
fwait
pusha
cmp
jle
out
dec
push
icebp
mov
insl
std
ljmp
mov
loope
lea
shll
push
sub
add
and
addr16
fists
adc
and
fs
xorl
xchg
lock
xchg
push
mov
icebp
push
imul
je
xchg
sub
add
loop
std
push
xor
cltd
push
and
add
push
and
xor
xchg
xor
xor
mov
mov
daa
jp
nop
daa
ja
arpl
and
es
lahf
popa
mov
pop
sub
mov
js
mov
orl
xlat
ljmp
iret
sbb
in
xchg
sub
pop
pop
fmull
pop
add
int
mov
jns
lret
pop
dec
cmc
pop
sysret
adc
inc
mov
mov
cmp
cmc
outsb
inc
ja
xchg
stc
mov
push
jae
mov
xor
sub
frstor
insb
mov
sub
iret
cmp
xor
lcall
or
scas
lds
mov
jno
or
and
and
pusha
sub
jle
mov
jecxz
js
pop
dec
sub
pop
pop
aaa
push
pop
dec
dec
mov
push
and
mov
xchg
jle
xchg
cmpsb
xchg
bound
in
inc
pop
dec
pusha
xchg
jp
loope
loopne
loopne
inc
mov
mov
add
in
pop
mov
xchg
mov
ljmp
popa
add
js
xchg
dec
xchg
xchg
inc
call
xchg
fisttpll
fidivrl
emms
lock
pushf
push
cs
sub
mov
shl
dec
fs
das
sbb
dec
push
test
stos
sub
sbbl
mov
insl
adc
fisttpll
cmp
jecxz
jb
stos
fstl
rcrb
mov
xchg
adc
mov
pop
add
sub
shr
out
outsl
push
movsl
sbb
adc
in
ret
xchg
pop
jo
inc
jo
mov
jbe
mov
fistl
insb
add
jmp
sbb
cld
inc
movsl
imul
lock
mov
enter
adc
mov
lock
and
gs
push
lahf
leave
push
test
aaa
jb
iret
dec
mov
ss
add
pop
adc
pop
and
xor
push
xor
pushf
and
xchg
ficoml
xor
shll
mov
shr
test
enter
lcall
sub
sub
lret
mov
dec
jns
rolb
pop
mov
mov
ret
mov
mov
sbb
mov
es
mov
sub
out
mov
loop
in
cmc
lock
or
cmp
dec
sbb
test
dec
lret
loop
jbe
pushf
sub
push
fwait
stos
test
addps
push
es
dec
mov
dec
scas
leave
shl
cld
cmpsb
mov
popf
ljmp
dec
lea
mov
sbb
push
jb
mov
enter
outsb
pop
int
xchg
cmp
sahf
xor
pop
sbb
mov
mov
sahf
lret
pop
mov
cmp
test
pushf
or
fs
adc
aad
push
jb
and
daa
adc
pop
push
out
jle
fsubl
xchg
mov
dec
pop
jnp
out
scas
and
mov
ds
fiaddl
roll
sar
mov
xchg
xor
dec
lret
sti
scas
imul
dec
negb
movsb
mov
adc
in
jae
es
fistl
sbb
scas
xor
sbb
jl
mov
adc
ror
or
mov
in
mov
mov
inc
js
js
int3
sahf
mov
idivb
dec
popa
mov
adc
jmp
cltd
jae
inc
push
jl
dec
cmp
shll
dec
popf
and
mov
cmp
jg
test
xchg
xor
jbe
lods
push
lea
ds
mov
movsl
inc
pop
xor
enter
cs
jle
or
xchg
addb
jle
fsubrs
lret
mov
fadds
dec
lret
mov
push
dec
add
stc
lret
pop
jmp
pusha
int3
jecxz
sbb
arpl
aaa
mov
jle
or
and
sub
popf
hlt
iret
pop
dec
mov
push
lahf
adc
mov
cmp
adc
movsl
jae
jmp
test
jnp
repnz
pop
jecxz
sub
add
xor
icebp
incb
clc
mov
push
xor
std
fdivrs
imul
push
pop
es
and
push
cmp
xor
dec
test
sbb
int3
pop
or
out
pop
movsb
fisubrl
add
mov
mov
enter
mov
addr16
xor
test
imull
xchg
xchg
jbe
pop
fidivrs
inc
pop
xchg
mov
sub
mov
push
loope
rcrb
mov
test
adc
fisubl
jp
mov
andl
addr16
xchg
negb
mov
xlat
decl
or
sbb
mov
xchg
repnz
nop
adc
popf
jl
adc
dec
xchg
pop
add
push
out
sarl
shr
pop
xlat
lods
push
iret
mov
and
shlb
adc
testb
movsl
adc
rcrl
ljmp
pop
and
fcoms
out
fwait
inc
lods
imul
push
and
push
inc
fstl
out
sub
scas
jecxz
aam
mov
xchg
mov
pop
lahf
rol
imul
movsb
and
or
in
repnz
outsb
mov
xor
mov
jo
aas
test
ss
mov
jno
xchg
adc
icebp
ja
ret
push
cld
shll
loopne
imul
cmc
fstp
xor
leave
mov
lss
lods
dec
inc
mov
in
inc
sub
lret
int
cmp
ret
in
or
mov
jnp
lock
mov
lea
add
push
jg
and
pop
jne
adc
xor
loope
sbb
add
mov
xor
push
test
mov
frstor
mov
aaa
into
pushf
adcl
outsl
arpl
xchg
rclb
daa
adc
fucomp
xor
addr16
test
enter
adc
xchg
jle
lret
pop
out
dec
jne
push
fs
jnp
jl
jg
sub
fsubr
xlat
ljmp
pop
into
fisttpll
inc
push
jnp
jl
les
cmovbe
pop
pop
xchg
test
fstp
mov
jmp
jno
dec
mov
hlt
outsl
pop
jnp
fnstenv
xchg
lods
icebp
or
sub
fldl
jbe
push
les
add
ss
or
ds
adc
xchg
cmp
aad
loop
test
das
aas
cmpsb
fs
pop
inc
or
aad
cmp
pop
jbe
loopne
adc
inc
mov
fadd
aaa
xchg
outsl
cli
out
xchg
test
cmpsl
pop
lahf
ja
repnz
add
cmc
jo
ds
daa
push
nop
inc
or
arpl
idivl
push
lods
addb
ljmp
push
adc
add
inc
mov
pusha
dec
out
and
push
push
movsl
out
jnp
ds
fmull
lret
sti
ret
inc
divb
dec
in
test
and
adc
imul
ja
jno
repnz
mov
mov
xchg
push
pop
lret
sbb
add
push
push
repz
and
cmc
ret
cmp
mov
imul
pop
pop
rorb
repnz
jle
outsb
int3
sub
dec
in
in
es
test
mov
stos
sti
sti
or
mov
jg
ficompl
mov
nop
jae
and
stc
pop
push
sub
cmp
outsl
push
jbe
notb
dec
sbb
xchg
pop
xlat
push
jmp
push
test
and
cmp
lret
jg
add
lcall
stos
aam
pop
mov
push
add
hlt
repnz
inc
mov
jp
mov
push
dec
lret
adc
xlat
pop
enterw
ror
cmpsl
xor
mov
sub
movsb
cmp
leave
leave
dec
out
pop
sbbb
push
leave
pusha
jg
outsb
or
xlat
outsl
movsb
and
insl
mov
mov
sub
movb
jb
enter
out
into
sub
sbb
sbb
pop
xor
ljmp
mov
lea
mov
fmuls
xorl
ss
dec
das
flds
es
mov
dec
addr16
rclb
js
cmp
aaa
mov
xchg
in
inc
jo
pop
cmc
scas
adc
pop
ret
ds
loop
pop
dec
jmp
sbb
cltd
js
lock
mov
adc
fwait
les
mov
fnstsw
test
sbb
movsl
lea
dec
ss
mov
adc
movsb
sub
add
cld
mov
push
sub
xor
fwait
xor
sbb
sarl
push
stc
leave
ljmp
test
sarb
test
xchg
xchg
stos
pop
ljmp
lea
cld
lret
jmp
adc
xchg
push
div
jnp
jg
sbb
in
lret
and
mov
xor
rolb
dec
push
adc
xor
and
mov
sbb
pop
add
ret
push
mov
xchg
or
aaa
mov
andl
call
fwait
jecxz
cs
stc
mov
xorl
shl
dec
sbb
imul
imul
sbb
pop
sub
ficomps
mov
jp
std
gs
lock
mov
cmc
add
jns
mov
xchg
xor
leave
push
mov
in
pop
xchg
jno
lods
out
shlb
push
add
jbe
arpl
lods
shll
test
enter
inc
pushf
sbb
testl
xchg
sahf
push
test
rorl
mov
sub
inc
stos
pop
lods
out
xchg
daa
negb
icebp
xor
mov
mov
adc
mov
and
cmovle
fists
test
imul
lock
hlt
test
cs
stos
jp
lds
mov
sbb
movsl
aad
lock
inc
add
daa
xchg
std
sbb
lea
push
scas
scas
daa
aam
out
push
insl
lods
jecxz
or
push
mov
loope
lahf
inc
mov
xchg
jmp
sbb
sbb
cmpsb
test
call
subl
sbb
cli
xor
jnp
inc
and
mov
mov
stos
adcb
lcall
lcall
sti
or
shlb
fwait
int
rorl
into
lods
adc
mov
aaa
mov
mov
xor
int
jl
jmp
pop
push
push
loopne
out
xchg
or
mov
lret
test
fistpll
add
sarb
jge
ja
pop
mov
mov
ja
jmp
jo
push
mov
outsb
cmp
outsl
push
mov
push
push
adc
push
mov
out
or
xchg
mov
sub
cs
or
sub
aas
leave
call
sub
call
mov
mov
repnz
scas
sti
out
push
sbb
jnp
inc
jae
sub
fsub
sub
rcrl
mov
cmp
ret
pop
hlt
cmp
arpl
stos
in
add
mov
push
fdivrl
xchg
mov
hlt
jb
sbb
rolb
fidivrs
hlt
push
pop
mov
dec
cmp
ja
cmp
popa
enter
jno
pop
xchg
xchg
or
inc
push
cmp
xchg
les
xchg
push
jecxz
call
das
push
call
pop
mov
pushl
fadd
insl
or
das
outsb
xor
mov
orl
mov
mov
pop
scas
int3
dec
aaa
jb
es
sub
movsb
sbb
leave
cmp
mov
xor
rolb
mov
or
xor
cld
int3
test
testb
add
mov
sub
nop
mov
xchg
pushf
jnp
xor
or
push
test
insl
fwait
idiv
andb
lods
stos
pop
jbe
mov
adc
sub
outsb
mov
daa
lds
out
hlt
xor
iret
scas
ja
mov
aas
mov
jge
aaa
lcall
jne
imul
pop
jecxz
fcmove
fdivrs
pop
push
adc
jns
ds
lds
sub
scas
jae
sub
je
xchg
or
dec
lods
jecxz
test
and
jmp
gs
push
mov
xchg
pop
jbe
sbb
test
or
jp
or
sbb
stc
push
int
add
cld
jno
mov
repz
xor
mov
lcall
add
jp
fs
xor
jnp
jns
xor
adc
sahf
test
les
and
sub
ret
pop
int
xchg
sahf
aam
mov
es
lret
stc
out
nop
push
or
in
test
add
cmpsb
push
ret
incb
js
adc
inc
stos
xchg
pop
rolb
icebp
adc
pop
jne
cld
pop
mov
arpl
xchg
scas
or
lea
sti
aad
sub
push
jae
pusha
jnp
dec
les
pop
xchg
cmp
les
push
push
or
cmp
push
inc
shll
sbb
pop
pop
cmp
std
and
xor
inc
cmp
dec
loop
aam
xor
cmp
sbb
jge
push
addr16
mov
popf
insb
mov
lcall
mov
or
loopne
add
ss
mov
sbb
xor
and
popa
mov
add
mov
xor
inc
mov
or
fnstenv
in
lret
ja
xchg
xchg
sbb
jne
xlat
sub
int3
addr16
jne
pop
push
mov
fiadds
adc
add
sahf
inc
mov
pop
xchg
std
imul
repz
in
push
dec
sub
mov
out
bound
popa
mov
cli
call
sbb
dec
in
jne
test
mov
or
aas
std
rol
into
push
cmpsl
jp
pop
dec
aad
cld
mov
inc
pop
in
sbb
adc
popa
jnp
stos
adc
xchg
icebp
enter
dec
sbb
inc
jb
xor
ja
insb
sub
dec
int3
outsl
sbb
dec
pushf
loop
push
cmp
sub
adc
mov
push
mov
aad
and
add
push
and
mul
mov
popa
dec
mov
push
lret
mov
sbb
pop
popa
in
mov
rolb
push
shll
inc
loop
in
mov
add
push
pop
pop
sub
cmp
daa
std
push
cmpb
jle
mov
dec
out
out
mov
inc
repnz
xor
cmpsb
xorl
xchg
xchg
push
and
adc
push
sbb
scas
adc
xchg
lcall
std
adc
xor
std
adc
aam
pop
lahf
jmp
push
push
adc
or
popa
sub
push
insb
shll
call
nop
inc
xchg
inc
or
add
xlat
lock
lea
addr16
aam
pop
and
adc
or
mov
roll
in
int3
mov
and
xor
pop
imul
push
xlat
adc
lds
adc
adc
sbb
sahf
add
adc
push
negl
dec
daa
rcrl
paddd
jnp
mov
pop
out
stos
sub
xor
inc
in
cld
pop
xor
push
lods
stos
adc
xor
or
jo
stos
and
mov
out
lds
mov
mov
nop
mov
mov
dec
jb
setb
cli
mov
daa
mov
leave
push
stc
mov
mov
aad
in
cmpsl
fstl
mov
dec
add
jne
inc
sarl
or
movl
jnp
fwait
mov
stos
loop
int
jge
xchg
jge
vpcmov
lock
data16
into
jbe
push
xor
pop
fdivl
pop
xchg
mov
add
std
dec
ljmp
sbb
call
shl
mov
xchg
cmp
in
sbb
movsl
xchg
jl
aam
dec
popf
push
mov
sub
mov
mov
ficompl
xor
xor
xor
inc
clc
mov
fdivrl
hlt
lret
mov
lods
call
push
xor
test
and
pop
cmpsl
insl
xor
sub
pop
rorl
pop
sbb
cmpsb
lret
aad
das
int3
popf
add
in
push
adc
mov
mov
pop
push
or
push
cmp
outsb
cli
xchg
insb
push
pop
jg
roll
cmp
mov
mov
popf
or
lods
mov
clc
mov
jmp
xchg
popf
lcall
mov
mov
incl
sub
inc
xchg
and
push
jb
jno
xchg
insb
fnsave
add
pushf
mov
sahf
repz
clc
pop
loop
sub
outsb
mov
mov
aam
cmpsb
xlat
xchg
xor
mov
popf
decb
movsl
into
push
mov
mov
or
cmp
sub
push
pop
cmp
out
add
sahf
jp
sbb
stos
das
push
add
push
lods
dec
push
enter
xor
lcall
xchg
sbb
dec
xchg
push
mov
lret
lea
xchg
inc
adc
aam
cld
jo
repnz
cmc
inc
cmp
xor
cmpsb
into
lds
inc
sarl
aas
icebp
in
fildl
sub
jp
push
jmp
fbstp
mov
incb
cmp
fs
push
push
in
push
iret
imul
loope
xchg
jmp
jmp
adc
pop
in
and
mov
cmc
int
mov
add
test
xchg
or
xorl
pop
jns
fimull
fmul
arpl
pop
pop
cmpsl
xor
sbb
insl
roll
test
mov
push
pop
mov
sbb
xchg
fnstenv
mov
int3
push
out
xor
test
and
push
mov
jge
sub
ja
cmpsl
cltd
into
in
cltd
rcrb
out
clc
divb
iret
jno
in
ret
add
rol
movsb
das
shlb
mov
xchg
push
inc
mov
ret
stc
xchg
nop
lods
pop
popa
push
xor
lock
cmpsb
push
loope
aaa
push
inc
jb
sbb
outsl
or
int
clc
arpl
fnsave
or
push
std
int3
inc
dec
clc
in
pop
and
sub
dec
push
adc
sbb
sub
add
mov
test
mov
pusha
and
jmp
ljmp
pusha
lahf
mov
dec
push
clc
jp
clc
sbb
sbb
test
sbb
push
inc
loopne
xchg
mov
pushf
insl
lods
sbb
leave
fdivr
test
fdivrl
xor
aad
test
push
jno
xchg
out
mov
sbb
mov
mov
mov
push
sub
adc
mov
call
aas
dec
xor
hlt
bound
push
fmull
or
inc
loop
cmp
movsl
push
shr
js
xchg
lods
push
sbb
fists
lea
jbe
lock
out
out
and
mov
sub
dec
mov
mov
pop
pop
scas
mov
and
test
ret
adcl
jnp
shr
in
mull
dec
sbb
fsubl
fstpt
jl
xlat
pop
in
and
lcall
xor
stos
int
xchg
gs
andb
xchg
int
loopne
je
xchg
xchg
inc
lcall
mov
dec
clc
sub
push
inc
fisubrl
push
push
or
sub
scas
push
cmp
push
xchg
xor
adc
xor
repnz
jp
jle
sub
push
aam
rclb
jne
mov
fbld
mov
adc
jge
cmc
ror
movsl
mov
leave
daa
lcall
fildll
and
inc
push
mov
adc
aam
mov
sub
je
push
stos
fcmovbe
sub
dec
adc
test
stc
xor
mov
js
imul
inc
pop
dec
or
inc
pop
add
jle
jp
sub
push
jle
inc
mov
shll
cltd
cld
mov
out
pop
cld
ljmp
and
in
mov
add
lea
xor
adc
aaa
adcb
out
stc
push
les
adc
cwtl
inc
inc
push
push
mov
sbb
mov
pop
mov
mov
add
mov
rcrl
pop
push
inc
xor
sub
loop
jb
leave
push
mov
in
cmp
jle
push
fwait
xchg
int
mov
cld
mov
fisttpll
and
in
adc
fildll
sti
std
jo
mov
rorl
sub
das
mov
add
cli
add
push
mov
dec
pop
mov
mov
dec
and
loop
das
lret
gs
gs
mov
jae
popf
sahf
inc
jo
fimuls
mov
and
loopne
add
adc
add
mov
mov
inc
jmp
sti
into
popw
in
mov
inc
inc
cmp
call
aaa
dec
popl
add
lea
and
les
or
mov
popf
cwtl
arpl
push
cmp
push
shr
xchg
lcall
cli
mov
scas
in
movsl
lods
add
sub
dec
add
daa
mov
jnp
popf
jl
ds
into
push
and
enter
add
lcall
mov
jae
mov
lahf
fistpl
dec
mov
je
ja
ret
in
out
enter
xchg
push
js
cmpsl
sti
xchg
sub
mov
or
and
test
nop
dec
cltd
jne
int3
pop
ja
xor
add
cwtl
lret
dec
dec
rep
lahf
dec
pop
push
add
jmp
push
add
sbb
arpl
and
test
add
push
stos
xor
sub
fsubs
movsl
and
in
sub
mov
add
test
inc
pop
call
push
and
mov
mov
sub
push
int
fsubrl
adc
shl
cmp
fwait
xchg
scas
xchg
sub
xor
inc
gs
xchg
mov
sub
loopne
jp
jnp
xor
lahf
sub
adc
push
sub
lret
loopne
std
pop
sub
out
adc
cmp
fidivl
inc
adc
int3
fidivs
dec
or
shrb
outsl
out
mov
test
pop
and
outsb
jno
iret
sbb
inc
imul
mov
push
sar
movb
mov
pushf
loope
jg
cli
adc
ret
nop
loop
mov
cld
mov
dec
mov
popl
dec
xor
dec
xchg
inc
mov
cltd
in
or
and
push
les
std
jg
sbb
add
jl
sbb
push
jne
mov
fisubs
cmp
sbb
mov
or
rcrb
stos
mov
push
test
scas
inc
sbb
subb
cmp
push
inc
xchg
pop
jno
mov
mov
and
nop
dec
adc
add
push
push
ret
jnp
rolb
aad
je
push
push
push
mov
hlt
fildll
lcall
sub
out
shl
xchg
icebp
adc
flds
mov
and
mov
jnp
push
ss
cs
aam
shll
xchg
aam
add
cmpsb
add
and
mov
movsb
fimuls
jae
add
mov
add
inc
pusha
stc
xor
mov
in
lea
dec
les
xchg
inc
push
xor
cmc
cli
fwait
jg
out
mov
sub
dec
jns
loope
sub
fs
hlt
pop
ja
lea
fucomi
out
sbb
mov
cmc
repnz
jb
adc
jle
xchg
ret
mov
outsb
push
movsl
mov
inc
outsb
mov
lret
out
int3
mov
xor
pop
sub
mov
daa
sub
cmp
inc
mov
inc
or
lcall
in
and
fsubrl
jnp
sub
pop
shrl
test
mov
mov
fcmovnu
push
dec
fisubrs
sbb
mov
add
fdivrp
jmp
cmp
addr16
mov
insb
lret
js
mov
pop
add
cmp
push
scas
jmp
inc
cmovb
cmc
das
mov
lret
cmpsl
mov
push
adc
mov
inc
push
jbe
inc
jnp
jae
lret
repnz
add
xor
ffree
aam
sbb
xor
dec
push
gs
addr16
scas
xchg
stos
mov
sub
fsubrl
test
lea
adc
push
xor
mov
sub
cli
add
adc
fstpl
lods
lcall
sub
jecxz
arpl
int3
je
dec
mov
test
mov
and
adcl
loopne
iret
pop
scas
jae
xchg
loop
adc
sbb
gs
inc
jge
jg
jnp
or
out
xchg
js
test
inc
sahf
ss
mov
pop
xchg
fs
push
cmp
jns
push
loope
loope
gs
mov
sub
lods
movsl
mov
lods
aam
pop
jns
mov
sbb
shl
adc
adc
mov
stos
xchg
dec
repnz
push
es
xchg
enter
incl
fisubs
sbb
popf
das
xor
rcl
xlat
outsl
mov
std
shr
pop
sub
loope
mov
jo
hlt
mov
sub
jnp
sub
pushl
and
and
insb
mull
inc
punpckldq
sbb
insl
roll
out
popa
leave
jb
xor
aam
mov
sahf
mov
pop
sar
sbb
lea
nop
sbb
mov
sbb
mov
adc
outsl
mov
mov
add
aaa
cld
sbb
adc
rclb
decl
xor
mov
repnz
pop
mov
jmp
rorb
add
ret
fmuls
loop
add
add
pushf
sbb
push
jae
dec
mov
out
pop
lahf
cmpsl
fwait
aad
dec
imul
arpl
and
rolb
dec
jecxz
pop
shlb
pusha
mov
lcall
sub
cmp
cwtl
sti
push
or
add
sbb
pop
popa
imul
add
jnp
das
lock
ja
dec
pop
mov
xchg
sub
loop
pop
adc
mov
cmpsl
pop
and
pop
pop
xchg
xchg
xlat
mov
int
fcoms
push
ds
adc
rclb
pop
iret
sbb
sbb
adc
gs
ror
jp
lock
sbb
pop
lret
imul
imul
inc
sub
dec
notb
into
je
stc
inc
adc
fwait
push
aas
iret
ja
cld
add
je
sarb
mov
adc
into
pop
test
push
sbb
or
data16
jne
negb
sbb
shll
pop
add
mov
cmc
idiv
dec
pop
fstpt
add
sub
or
jp
repz
xor
xchg
rolb
jns
cli
int3
test
lcall
pushf
ja
in
out
popf
or
mov
negl
mov
mov
je
xor
stos
pop
fldl
sbb
mov
ljmp
push
and
test
cmp
jns
mov
xchg
out
cltd
popa
pusha
cld
outsb
adc
shlb
xchg
test
mov
inc
outsl
loope
mov
or
aad
push
mov
dec
in
add
xchg
ja
out
fdivs
in
and
adc
fimull
and
jecxz
icebp
push
das
bound
sub
jo
adc
imul
cli
and
xchg
std
test
stos
outsl
in
xchg
not
addl
lock
out
pop
mov
daa
test
and
jle
insb
sahf
sub
rolb
ficoml
push
cmp
idivl
jecxz
scas
and
repz
data16
or
jmp
movsb
loopne
cltd
pop
mov
jno
dec
test
jle
push
mov
out
sub
mov
xor
xor
inc
push
scas
and
je
dec
pop
inc
loopne
or
insb
ret
iret
js
push
test
push
call
pop
add
sahf
and
xor
aam
orb
mov
nop
dec
push
ficoml
pop
sbb
scas
add
cmpsb
dec
mov
mov
jbe
in
and
pop
cmp
lea
sub
sahf
lret
lret
pop
outsb
mov
adc
out
push
pop
add
in
pop
aad
push
or
aaa
push
sbb
xor
push
mov
mov
mov
mov
cmpsl
pop
daa
sbb
dec
fsub
push
sbb
sbb
std
paddb
adc
dec
cld
jecxz
addr16
xor
jns
push
xor
cld
and
repz
test
das
ret
cmp
and
ja
or
sub
add
xchg
xor
ret
scas
addr16
jl
xchg
aas
xchg
fs
adc
inc
stc
add
add
enter
jnp
cld
ffreep
pop
cld
cmpl
or
jecxz
out
sub
cmpsl
in
cmp
stc
sub
inc
inc
les
cwtl
loopnew
mov
adc
pop
cli
add
in
lods
adc
shlb
cmp
das
inc
pushf
ja
adc
mov
lret
push
add
pop
mov
out
dec
mov
jns
xor
les
ljmp
jge
in
stos
sbb
ret
mov
add
bound
das
jne
mov
stos
lock
mov
cmp
in
testb
cmpsb
xor
test
not
mov
fldcw
adc
jnp
rcrl
dec
mov
in
sub
imul
xchg
adc
dec
sar
adc
stos
mov
dec
pop
cmp
add
dec
cwtl
pop
movsl
icebp
xor
aaa
test
jns
cmp
cli
dec
or
int
xchg
cmc
or
or
or
insl
pop
cli
les
xchg
aad
pop
mov
pop
int3
and
adcb
addr16
inc
dec
mov
pop
add
out
pushf
cmp
out
aam
cmc
aad
in
in
stos
hlt
sbb
push
fwait
mov
roll
pop
push
cmpsl
adc
scas
and
sbb
cmp
pop
fstl
add
subb
rclb
push
and
loop
pop
dec
nop
or
push
aad
add
jecxz
adc
outsl
sahf
xchg
xchg
lcall
pop
inc
ss
sbb
mov
xlat
xor
aaa
jl
movsl
and
shll
stos
cmp
minps
call
lds
and
add
add
imulb
in
cld
push
out
pop
sarl
and
push
ja
mov
ja
outsl
outsb
xlat
outsb
test
and
fs
popl
push
in
xchg
jle
in
loopne
jb
cwtl
cld
sub
xlat
xor
push
cmp
aas
scas
mov
and
cmp
bnd
cmpsb
inc
int
or
das
adc
les
dec
test
sub
dec
sbb
sub
or
lock
mov
loope
push
add
stc
popa
aam
jmp
sbb
std
push
fdivrl
add
test
testl
mov
cmp
mov
add
ret
add
ret
lret
sbb
mov
cmp
cmpsb
xor
ljmp
add
lcall
les
push
mov
ret
xchg
mov
push
shl
mov
dec
xor
stos
in
inc
sbb
xor
xchg
dec
pop
cmc
inc
fwait
scas
popa
cli
pop
in
push
xchg
add
cmpsb
js
rcll
pop
popf
ljmp
icebp
add
imul
sarl
stos
movsl
cmc
sbbb
popf
mov
add
xor
jmp
arpl
dec
jg
cmp
mov
outsl
jo,pn
jl
imul
fnop
push
cs
adc
pusha
add
call
enter
ret
cwtl
inc
lds
fadds
pop
push
movsl
std
test
jnp
lods
dec
mov
sbb
addl
sbb
jge
mov
adc
int3
sbb
rol
test
stos
cwtl
or
inc
sub
aaa
fmull
inc
stos
insl
jne
mov
cli
xchg
jns
or
xchg
popa
insb
push
in
mov
mov
je
xchg
call
daa
scas
nop
daa
cmp
push
out
xorl
jmp
jbe
jae
and
cmpsw
mov
insl
sub
cli
dec
jge
or
loopne
push
aam
pop
jg
xchg
loopne
rcrl
stos
mov
flds
or
adc
sub
test
sbb
jg
lcall
mov
iret
sub
cmpsb
mov
cmp
in
mov
sub
or
cmp
int3
jnp
push
fdiv
sub
inc
rcrl
fdivs
push
inc
movsb
adc
outsl
inc
test
lods
scas
mov
push
fs
out
pop
ljmp
add
ljmp
mov
testb
inc
lret
mov
mov
adc
sub
nop
pop
xorb
cld
xor
pop
push
push
stos
jmp
pop
in
ficoml
lds
cmp
xor
iret
add
ljmp
sub
dec
shll
add
imul
add
add
adcl
mov
sub
aam
xchg
cmp
roll
test
pop
shll
inc
cld
xchg
xor
addb
or
arpl
in
out
leave
cmp
or
in
xor
adc
cs
pop
addr16
lea
stos
mov
jne
and
cmp
cmp
rcrb
xchg
jmp
jle
dec
imul
pushf
shlb
lock
add
into
rcrl
test
and
daa
inc
into
cmp
dec
dec
adc
shl
test
add
cs
pusha
mull
hlt
div
cmp
stc
mov
insb
lret
cwtl
add
adc
sub
cmpsl
mov
filds
add
in
fbld
lea
sbb
hlt
xlat
pop
jno
jnp
cmp
int
icebp
adc
and
mov
hlt
int3
adc
in
push
xor
mov
inc
shr
xchg
pushf
cld
jge
test
mov
lods
mov
mov
fsubs
daa
mov
ds
mov
inc
in
rcrl
add
imul
lds
and
mov
movsl
aas
push
add
jle
sub
mov
aam
sbb
mov
push
shrb
xchg
adc
test
xor
pop
ret
gs
fdivl
loop
sti
dec
and
test
xor
ja
insl
lds
and
inc
test
insb
ret
mov
fimuls
pop
pop
inc
pusha
mov
stc
fs
jnp
iret
jo
xlat
pop
xchg
scas
add
and
rorl
into
arpl
stos
push
and
stos
stos
imul
cwtl
clc
in
mov
mov
add
fdivrl
lahf
loope
push
jnp
add
jecxz
not
je
imulb
mov
inc
pop
sbb
scas
sbb
sahf
in
imul
or
mov
sbb
pop
adc
xlat
loop
cmp
dec
in
mov
clc
mov
das
stos
add
addb
shl
cwtl
pop
shl
mov
jecxz
mov
inc
jg
jns
testb
int
mov
aad
popa
inc
loopne
fidivl
in
inc
add
push
push
sbbl
jp
outsb
mov
aas
pop
xlat
dec
inc
ret
lret
push
jae
stc
or
jo
pushw
loopne
pop
jp
mov
cmp
das
sub
bound
push
dec
cmp
jns
stc
sub
xchg
pop
rcll
fsubrp
fwait
movsl
movb
add
ja
dec
int3
dec
faddp
jbe
mov
mov
add
pop
lret
loope
mov
movsl
xchg
xchg
cmp
pop
jp
add
xchg
add
sub
leave
clc
into
cmp
imul
mov
jnp
fldl
xchg
test
out
fbld
mov
test
mov
cltd
aad
rcr
fwait
add
pop
jg
cli
and
inc
or
mov
xor
icebp
mov
fistps
mov
push
loopne
test
adc
jbe
fcmovne
push
pop
daa
in
pop
xchg
loopne
ss
scas
push
lea
pop
mov
aas
sahf
sbb
inc
adc
mov
or
add
out
pop
mov
jmp
cltd
lea
out
mov
sahf
mov
in
and
xchg
lret
scas
inc
mov
mov
jg
jns
call
scas
in
lret
xor
or
shll
jecxz
inc
xchg
dec
out
mov
inc
mov
mov
mov
pop
and
outsl
test
pop
dec
ds
js
xor
lahf
lahf
pop
mov
jns
xor
push
add
push
clc
push
mov
out
push
insb
lcall
sbb
ret
pop
out
sbb
mov
cmp
imul
das
shl
mov
cli
xor
movsl
and
repnz
cmp
jmp
xor
and
pop
pop
ds
xor
es
mov
dec
pop
testl
lcall
scas
or
scas
adc
mov
jmp
cltd
fwait
loop
push
in
nop
xchg
sub
inc
sub
xchg
mov
data16
mov
je
and
int
inc
lock
dec
cmp
data16
insb
xor
mov
lea
dec
mov
dec
ds
fldl
mov
int
xor
in
sbb
std
jle
dec
jno
cmp
jo
in
mov
rorl
mov
and
cmp
in
and
addr16
iret
jl
lret
fildl
fbstp
sbb
inc
sbb
fldcw
int3
jle
cli
cmp
push
outsb
shlb
inc
test
into
int
insb
ds
mov
clc
mov
xorl
loop
ljmp
sbb
pop
cmpb
pop
pop
js
ficomps
jg
imul
adc
fwait
addr16
test
lods
pop
cmovo
push
xlat
push
pop
fwait
cmp
or
cld
mov
adc
js
xor
imul
inc
adc
fcoml
adcb
outsb
cmp
jl
cli
setge
ret
mov
lcall
adc
call
mov
push
test
icebp
popf
adcl
adc
cltd
jecxz
ljmp
rorl
shlb
in
mov
add
xor
scas
cwtl
pop
sbb
outsl
mov
cmc
ret
mov
fwait
jmp
ret
mov
push
ffree
out
fcomp
dec
jl
sub
xchg
nop
inc
movsl
xchg
pop
mov
push
jae
test
mov
rcl
inc
pop
loopne
subl
fimull
or
fstl
fidivrl
fisttpll
or
pusha
addl
jnp
mov
add
movsb
stc
repz
sub
mov
and
and
inc
cmpsl
add
and
stos
jl
lret
mov
cmc
pushf
addr16
xor
mov
cmc
xchg
movsb
push
fwait
fwait
mov
inc
lahf
jbe
push
mov
andl
adc
cmpsb
adc
mov
sahf
dec
sub
sbb
inc
inc
movsl
int
lods
lahf
pusha
xchg
cmp
ret
fbld
inc
xlat
xchg
jmp
lds
lds
ret
mov
into
dec
call
inc
andb
xor
gs
arpl
cmpsb
movl
sbb
test
testb
test
mov
lgs
jmp
lods
sub
cmp
pop
movsl
add
lret
inc
cmp
jbe
fcoms
js
add
jnp
xlat
sub
sub
lcall
daa
jl
xorb
fs
out
and
xchg
test
sbb
repnz
jg
cmp
xor
xchg
xorb
mov
inc
cmp
std
and
or
fists
push
jmp
mov
mov
out
dec
iret
pushaw
data16
sbb
imulb
loop
ret
adc
fwait
jno
adc
push
push
movsl
int
mov
rorl
repz
nop
movsb
mov
dec
out
jb
adc
push
xchg
push
lahf
out
jo
in
or
cmpsl
in
adc
std
push
dec
jnp
gs
inc
rcll
xchg
xor
and
sub
sbb
dec
fldcw
jge
daa
lret
mov
rol
addl
fldl
pop
frstor
mov
mov
xchg
xchg
fadd
sbb
cltd
in
or
lcall
xor
sub
add
add
xor
movsb
lcall
xchg
xor
pop
les
in
jb
mov
mov
sbb
jl
adc
cmp
loopne
stos
sarb
scas
xor
test
mov
imul
js
mov
pop
add
sub
push
ja
mov
movsb
fidivrl
adc
insl
ret
add
lret
cltd
scas
mov
adc
pop
mov
xchg
scas
and
mov
sub
movsl
lods
mov
xchg
mov
xor
das
jge
repz
leave
push
sti
sub
rolb
xchg
inc
sbbl
data16
vpshab
test
fsub
inc
push
andb
xchg
insl
xor
pop
shrl
adc
cmpsb
add
sub
dec
aad
sub
in
adc
sub
bound
out
pop
mov
movsb
repz
fcmovb
sub
test
xor
out
push
fnstcw
ret
sub
cltd
fcomps
inc
ret
or
xor
rdpmc
xor
and
cmp
xchg
movsl
and
jbe
dec
sub
mov
dec
mov
push
test
xchg
stos
xor
cmc
add
ja
jb
jl
loopne
pop
mov
jmp
insb
xchg
addb
push
aad
in
sbb
cwtl
movsl
pop
cmp
cmp
or
mov
mov
int3
icebp
fcmovnu
ss
in
mov
or
and
mov
pop
lcall
xchg
movb
mov
mov
jp
xchg
repnz
insb
es
xchg
ret
jb
pop
clc
or
cmp
push
scas
daa
cmp
ficomps
lods
sahf
fnstenv
inc
scas
add
or
stos
fnsave
pop
sbb
jmp
xor
adc
lcall
xor
imul
mov
jb
ljmp
or
in
dec
enter
sbb
ljmp
push
push
lock
fwait
stos
testl
jns
mov
das
add
ljmp
adc
cld
ds
push
pop
sub
dec
clc
push
iret
xchg
aaa
or
jnp
adc
loopne
add
ss
repz
mov
add
pop
sub
push
mov
aam
imul
test
movntps
cmpsb
dec
dec
cmc
std
lds
gs
nop
pop
gs
sahf
mov
mov
xor
mov
xor
xchg
push
bound
aam
fmull
dec
adc
pop
fs
js
xor
clc
jb
xchg
stc
add
out
xchg
cli
xor
or
data16
cld
insl
mov
movsl
and
mov
mov
dec
lods
inc
pop
dec
stos
inc
lods
loop
insl
inc
std
jo
daa
fldt
out
in
ret
inc
gs
mov
test
sbb
lock
icebp
in
fistpll
les
dec
loopne
cmp
ljmp
add
stc
ljmp
or
cmp
scas
push
bswap
xchg
add
add
lahf
fwait
mov
inc
sbbl
iret
rcrb
xchg
int
mov
popa
out
in
in
jo
sub
ret
sbb
stc
mov
push
movsb
imul
ds
dec
mov
xor
sub
mov
cli
pop
cmpsl
jge
push
popa
pop
pop
cmp
popf
ror
mov
addr16
or
jo
enter
and
mov
xchg
pusha
ds
cmpsl
xor
out
pop
pushw
imul
xchg
jns
pop
rcrl
or
pop
pop
test
and
mov
lea
int
jo
pop
fidivrl
icebp
mov
sub
clc
pop
call
or
iret
and
xor
xor
jmp
xor
paddusw
into
jecxz
out
es
aam
jcxz
mov
and
lret
sbb
push
ret
icebp
scas
and
bound
rcl
lods
push
cmpb
push
out
mov
jae
mov
fdiv
xchg
add
dec
xor
sub
lock
ja
mov
imul
dec
push
xor
and
roll
inc
cltd
inc
add
inc
mov
xchg
adc
jb
jg
mov
and
cmpb
ficoms
jae
pop
inc
jge
jo,pt
arpl
lahf
sbb
adc
lret
push
fwait
mov
out
popf
repz
cmp
lar
jbe
xor
inc
sbb
xchg
lret
adc
addr16
mov
or
insb
sbb
jae
rorl
ret
mov
add
or
cmp
dec
pop
dec
xlat
cmpsl
sbb
adc
mov
nopl
push
cmp
jne
and
mov
or
push
mov
and
pop
iret
test
loope
out
imul
mov
xorl
pop
nop
cmp
jo
add
and
insb
xchg
je
inc
xor
or
cmp
idivb
sub
out
cmpl
mov
jg
cld
out
repz
dec
dec
mov
jbe
daa
test
es
lock
pop
sub
nop
aad
or
xor
cltd
fsubrl
fidivs
fistpll
nop
or
or
pop
pop
setns
or
lcall
inc
lds
cs
adc
cmp
xlat
adc
xor
jns
pop
stc
or
out
dec
mov
inc
push
pop
shll
lret
jns
test
jb
sbb
sub
mov
movsl
jg
fnstsw
cmp
jae
inc
adc
ja
push
jge
int3
sbb
mov
es
out
push
loop
sub
xor
jne
xchg
lods
mov
push
jg
or
in
aam
aam
fnsave
outsl
outsb
xchg
or
adc
insb
xchg
test
inc
loopne
test
lea
int3
mov
xlat
xor
adc
lret
mov
je
in
mov
or
inc
jno
in
add
push
lret
xchg
xor
int3
sarl
out
stos
dec
or
sarb
add
xchg
int3
data16
fsubrs
out
dec
pop
lods
dec
imul
dec
or
pop
lret
lds
jb
and
sarb
inc
or
pop
loop
nop
pusha
dec
call
cli
aad
aaa
mov
pop
cwtl
out
cmp
pop
sub
fdivs
push
mov
inc
and
jno
inc
fs
lods
cmp
fistpl
out
mov
inc
pop
outsb
sbb
sub
imul
jnp
jg
cmp
mov
inc
jge
ja
lret
sbb
dec
movb
gs
stos
mov
add
pop
jne
adc
jle
sub
push
aaa
mov
pusha
sbb
repnz
xorb
lret
cmp
push
inc
or
call
xor
fsubrl
call
les
dec
aaa
xor
pusha
or
push
repz
sub
loop
ljmp
add
xchg
js
in
ret
popf
mov
and
pop
xor
lods
dec
inc
and
inc
fistps
mov
push
mov
xchg
adc
sub
mov
cld
addl
mov
repz
loop
push
fdivp
sub
mov
mov
sbb
ss
lods
adc
inc
loope
hlt
add
imul
fidivrs
test
rcrb
or
fimuls
sub
dec
mov
or
gs
rorl
sti
jbe
cmp
mov
jg
ret
test
test
or
xchg
pop
xor
jae
mov
dec
movsb
aas
clc
ret
inc
or
dec
movsl
stc
push
push
mov
push
loope
lods
scas
enter
xlat
pop
pop
dec
lcall
add
insb
and
xchg
inc
mull
dec
mov
out
cltd
lret
movsb
fucom
mov
test
scas
mov
nop
aaa
or
nop
stc
pushf
or
iret
sbb
cmp
je
nop
pop
jb
gs
loopne
sti
mov
loope
popa
rcll
mov
rorl
bound
cmpsl
mov
cwtl
loop
clc
into
push
xor
xlat
sbb
pop
into
cmp
sbb
jg
add
in
pop
push
cmp
aad
mov
push
pop
call
hlt
sub
inc
cld
jmp
aad
inc
testb
insl
mov
roll
push
out
xchg
movb
jmp
lds
sub
lcall
push
mov
outsb
pop
xchg
mov
sub
inc
and
stc
xchg
lock
mov
adc
enter
imul
xchg
fcomi
push
push
and
clc
dec
cmp
js
sub
mov
dec
cld
add
dec
js
mov
scas
dec
stc
or
and
ret
je
jle
pop
mov
add
sahf
stc
xor
icebp
inc
mov
shlb
mov
push
fidivrs
nop
or
in
sbb
int3
push
add
xchg
sub
cmpl
mov
or
inc
out
fisttpl
xchg
xchg
mov
adc
xchg
cmp
stos
repz
iret
xor
xlat
loop
pop
ficompl
filds
and
jbe
or
xlat
std
push
add
add
js
dec
jmp
jge
mov
jnp
cltd
scas
cmp
imul
pop
inc
lcall
fisubl
add
xchg
inc
movsb
dec
lds
pop
or
cmc
add
cmpsl
ss
out
mov
or
mov
dec
inc
xchg
rcl
std
fisubl
xchg
mov
lret
cs
xchg
jmp
out
loop
mov
adc
cmp
inc
push
lods
lods
fidivrs
pop
dec
add
pop
add
idivb
push
xor
cmp
adc
or
sbb
sub
or
mov
repnz
mov
add
sbb
sbb
inc
pop
shll
loope
popl
lcall
dec
out
ret
stc
jmp
movsl
stos
bound
repnz
repz
cmp
mov
xor
push
or
mov
sbb
mov
push
gs
pusha
daa
lea
or
mov
rorl
ret
aas
jo
sbb
jb
das
jne
loope
sub
int3
add
or
cmp
xor
aam
xchg
clc
push
sahf
pop
mov
int
push
and
inc
call
and
fsubs
repz
ss
popf
xor
fidivrl
orb
add
xchg
or
inc
shll
xor
sahf
inc
test
ja
mov
fisubrl
dec
pop
pop
repnz
cmp
loop
or
mov
fistpl
push
jle
push
xchg
pushf
outsb
xchg
cmp
and
ret
push
and
rorl
jmp
mov
cmc
mov
or
cli
lcall
mov
pusha
stos
push
or
lret
sbb
inc
sub
scas
jb
sub
icebp
sub
inc
dec
out
mov
ret
stos
test
sub
jmp
fwait
lahf
sbb
sarb
sub
adc
sbb
loopne
shrb
mov
mov
jb
sbb
dec
out
pop
jecxz
or
adc
popf
adc
and
insb
or
js
push
sub
jecxz
lds
push
das
ss
movsl
in
mov
nop
push
in
lods
pushf
xor
sub
mov
jle
sbb
pop
cli
inc
shr
ficoms
rolb
pop
add
std
inc
xchg
jo
xor
push
fs
xchg
das
int3
cmp
sbbl
es
repnz
mov
in
lds
sub
xchg
lock
cmp
ds
dec
inc
fbstp
lods
jmp
add
mov
ja
sub
push
mov
pop
mov
mov
push
cmp
cmp
pop
sbb
jb
outsb
out
rclb
cmpsb
mov
adc
pop
sarb
xorl
addb
and
mov
xchg
add
and
add
adc
jae
mov
out
or
mov
mov
cld
fldl
jmp
cmp
pop
fsts
sub
inc
out
xchg
daa
cmp
out
das
nop
pop
out
push
orb
jne
xchg
mov
mov
pusha
sbb
pop
sbb
pop
aas
dec
sbb
or
xchg
fisttpl
cmp
jge
pop
outsl
xchg
xchg
xchg
xchg
mov
mov
jmp
dec
divb
testb
lea
stc
fdivrl
mov
push
nop
cs
stos
sbb
ror
dec
add
dec
mov
push
in
push
add
jecxz
pop
pop
inc
sub
pop
fisubl
adc
jecxz
aas
aam
imul
pop
fdivrp
cmp
aaa
pop
or
fldenv
jg
pop
add
pop
movsb
in
jmp
mov
negl
or
jb
rsqrtps
add
xor
js
pushf
test
fs
jnp
movsl
mov
outsb
sub
out
mov
les
inc
jg
inc
out
clc
loop
push
cmp
jno
sbb
popa
bound
jae
scas
cmc
cmc
std
pop
aas
mov
xor
jmp
xlat
cwtl
and
test
mov
cmp
aas
loop
aad
dec
sub
fimuls
fistl
call
cli
mov
lds
cltd
icebp
jge
es
and
insb
sti
jno
sub
sub
mov
lret
and
lods
sahf
push
inc
imul
pop
push
xchg
jp
in
loope
cmp
mov
mov
and
ja
push
in
push
jg
or
inc
jns
mov
std
and
lods
xor
out
add
fcomp
mov
out
repnz
loope
repnz
and
pushf
jge
xchg
leave
rorl
xor
and
lcall
fs
popa
jecxz
cmp
xlat
inc
pop
xchg
sub
movd
je
stos
xchg
dec
adc
pop
xor
fisttpl
lret
jge
jnp
jge
pushf
pop
sbb
sub
sahf
pop
inc
imul
inc
add
push
lds
sub
mov
and
dec
out
sti
imul
out
stos
outsb
or
dec
inc
xchg
data16
aaa
mov
push
dec
or
pop
dec
mov
movsl
adc
mov
sbb
repnz
pop
push
cmp
mov
popf
outsl
or
xchg
jmpw
mov
and
dec
mov
test
mov
stos
cmp
cmp
cmpsb
mov
call
fisttpl
sbb
or
sbb
pop
xchg
sbb
daa
jmp
dec
xchg
lods
push
or
pop
fcmove
pusha
fisubrs
into
jp
idivb
test
mov
enter
mov
jb
mov
shl
es
xchg
mov
xchg
mov
into
mov
mov
daa
in
jg
push
pop
int
mov
test
jmp
lods
pop
or
sbb
fcompl
sti
add
xor
imul
mov
inc
cmpsb
dec
nop
inc
fs
pusha
dec
ss
or
cmp
imul
sbb
adc
outsl
out
push
and
leave
push
or
pushw
mov
add
sbbl
jl
push
cmpsb
stos
mov
movsl
jne
dec
ljmp
sub
lahf
pop
arpl
or
mov
popf
jns
sub
inc
adc
pusha
aad
stos
loop
cmpb
test
mulb
fsubrs
subl
gs
push
cmpss
jle
divb
mov
mov
fcomi
popa
pop
into
scas
mov
imul
leave
cmp
jecxz
pop
aam
aaa
push
sub
mov
imul
cwtl
cwtl
pusha
xlat
out
test
jb
cltd
jo
scas
mov
loopne
push
xchg
std
arpl
popf
push
scas
addr16
ja
mov
adc
scas
mov
jecxz
mov
hlt
je
icebp
mov
sbb
lahf
cwtl
lret
daa
aaa
add
loopne
hlt
jne
es
fs
push
lret
add
adc
mov
push
fmul
dec
dec
add
dec
xor
mov
fnsave
add
jb
mov
je
xor
lcall
jp
sahf
xchg
nop
inc
insb
cmp
xchg
inc
cli
daa
out
sbb
insb
add
outsb
dec
mov
pop
testb
out
orl
dec
or
out
pop
inc
je
xchg
popf
sbb
leave
xchg
loop
cmp
mov
inc
adc
jg
repnz
aam
adc
into
nop
arpl
and
sbb
mov
les
into
mov
mov
adc
ds
xchg
cmc
aam
push
jno
push
dec
cmpb
cmp
mov
and
scas
sbb
lret
xorb
mov
xchg
fisubl
xor
mov
lds
roll
or
jge
icebp
inc
sub
adc
in
mov
cmp
stos
sahf
fwait
mov
sub
dec
mov
or
lods
mov
into
adc
pop
or
pusha
dec
stos
jecxz
push
sti
pop
pop
js
shlb
cmp
fs
inc
add
hlt
sbb
test
aam
inc
adc
out
pop
hlt
push
cwtl
sahf
mov
lea
orb
pop
xchg
dec
fucomp
ss
sahf
idivb
scas
hlt
mov
fildl
jp
mov
out
andl
aad
cmc
ss
nop
adc
stos
stc
mov
and
nop
or
mov
jne,pt
test
dec
in
and
mov
adcb
dec
out
call
ljmp
sarb
sbb
inc
nop
pop
dec
push
popl
cmp
iret
idivl
ficoml
mov
adc
sbb
stos
addr16
push
push
push
cmp
jne
in
lret
jne
xchg
data16
mov
pop
call
jne
into
popl
std
sub
sub
mov
and
pop
nop
dec
movsb
test
mov
jge
adc
testl
orl
jg
loopne
fldenv
ljmp
sbbl
mov
sti
mov
mov
pop
ret
pop
push
scas
imul
testl
fwait
mov
ja
cwtl
mov
adc
cmp
fidivrl
mov
or
prefetchnta
mov
das
in
cmpsb
xchg
mov
sbb
inc
in
test
xor
xchg
mov
xchg
iret
fildll
cld
imul
mov
inc
add
in
sarl
mov
repz
xchg
das
int
cli
loope
and
imul
adc
aad
ljmp
cs
mov
push
iret
pop
sbb
push
fs
jmp
enter
ds
int
cwtl
das
sbb
jg
inc
in
insl
lea
leave
mov
stos
sar
push
lea
push
imul
jb
sahf
push
mov
popa
push
jle
xchg
push
jb
adc
sub
lds
or
lods
rsm
sti
fdivs
sar
je
cmc
in
xchg
add
call
dec
lock
int3
inc
enter
jo
adc
cmp
lret
fs
aas
out
loopne
add
mov
push
int
jnp
push
xor
push
add
loop
push
sbb
arpl
push
pop
add
jb
mov
scas
cmp
sub
xlat
xor
fwait
inc
mov
xchg
shlb
add
adc
fisubrl
lea
push
stc
adcb
xchg
or
xor
in
jg
adc
fcom
dec
sbb
pop
arpl
jne
pop
fdivs
inc
adc
jmp
cmp
out
cmp
mov
loope
mov
adc
test
pusha
xor
lds
and
roll
xchg
cltd
lcall
in
idivb
rcll
data16
mov
mov
mov
shll
loopne
add
sbb
movsb
lcall
lret
mov
nop
icebp
nop
cwtl
hlt
xchg
or
adc
pop
adc
imul
mov
daa
sbb
addr16
mov
mov
inc
mov
adc
push
aaa
cmp
aaa
push
pop
dec
add
adc
mov
push
lea
jnp
pop
and
jg
cmp
out
xor
movsl
loop
shll
sbbl
in
movl
jnp
cli
lea
jo
fwait
mov
scas
or
mov
cmp
ret
imul
das
fisttpll
bound
pop
mov
xchg
insl
jne
jb
flds
xchg
pusha
addr16
sub
lds
faddp
jbe
aas
push
bound
jae
add
sub
cmp
es
fdivl
adc
pop
mov
rcl
sub
mov
mov
aaa
adc
xor
mov
jns
fimuls
dec
std
push
or
mov
js
xchg
pop
adc
test
cmp
inc
jle
scas
push
idiv
jb
adc
xchg
cwtl
pop
sbb
orb
test
lea
notl
testl
shl
movsl
pop
xor
lret
mov
sbb
mov
repnz
fmull
cli
pop
enter
xor
mov
out
sbb
andl
sub
es
stos
enter
ds
cwtl
adc
and
fnsave
mov
jo
jo
jmp
push
sub
cltd
mov
rclb
inc
clc
ds
out
pushf
ds
test
lret
sysenter
fxch
mov
add
mov
das
cmp
jl
fnstsw
mov
ret
sahf
or
ficompl
shll
xlat
cld
jl
lret
jp
out
loopne
out
add
mov
pop
pop
xor
pop
clc
mov
mov
out
or
stos
or
adc
pop
lds
inc
jne
add
shll
dec
ficomps
repz
lcall
cmp
ss
lcall
mov
es
test
mov
jbe
das
test
inc
and
jno
push
pop
inc
sbbb
rcll
cmp
je
mov
mov
or
loope
mov
pusha
adc
stos
in
sahf
loope
cmpsb
pop
dec
cwtl
in
and
je
incb
xor
pop
mov
cs
xchg
adc
mov
xor
and
fsubp
xchg
movsb
stc
dec
jmp
shlb
mov
sahf
add
fwait
int3
xchg
dec
call
adc
and
cli
repnz
hlt
out
loope
adc
mov
push
cmp
pop
xchg
and
or
in
gs
jnp
inc
aas
jg
push
das
pop
jp
push
lahf
mov
dec
dec
lock
std
or
push
xchg
sti
out
aas
aas
sete
ror
inc
xchg
subb
xchg
les
xchg
push
push
mov
fnstenv
cmp
out
sbbl
insb
dec
cmp
hlt
into
pop
in
pop
repnz
call
out
daa
nop
scas
xor
or
out
les
push
push
pop
int3
imull
and
cld
js
lods
sbb
dec
jns
inc
test
rcrb
sbb
inc
inc
js
jmp
pop
push
loope
push
or
jne
mov
sbb
xor
mov
jbe
lahf
addr16
add
aad
inc
or
mov
mov
inc
outsl
jg
lock
aad
xchg
add
mov
pop
adc
jge
es
imul
or
outsb
out
inc
jg
lcall
push
in
jl
mov
mov
cltd
xchg
and
js
test
lods
mov
add
inc
fdivp
dec
mov
sub
rclb
or
cmp
xlat
in
adc
sbb
push
movsl
out
outsb
cmc
les
push
das
mov
pop
ss
lods
ds
sahf
mov
mov
mov
iret
inc
cltd
inc
insb
cmpb
inc
and
std
das
repz
sub
in
jle
repnz
mov
and
lods
out
sub
pop
and
pushf
sbb
sbb
imul
or
xlat
lods
mov
inc
sbb
scas
neg
lods
shlb
ss
xchg
lret
lcall
mov
scas
cli
cli
imul
sub
jmp
pop
fnstenv
loop
insb
xchg
out
lods
xor
add
mov
jae
test
lock
push
lahf
aad
push
pop
cwtl
out
inc
sub
sub
cwtl
stc
in
les
sahf
xor
xor
imulb
fistl
xor
cmpsb
pushf
and
cmp
fisttpl
push
sbb
adc
mov
aaa
mov
sub
adc
mov
add
cmp
ljmp
shrd
mov
sub
jns
sahf
inc
cmpsb
xor
mov
negb
outsb
lret
jne
test
adc
mov
addl
cmp
cmovge
adc
movsl
lds
sti
mov
sub
sub
jns
dec
popl
sub
clc
pop
mov
into
push
notb
frstors
mov
pop
cwtl
js
mov
leave
dec
data16
subl
aaa
dec
adc
inc
subps
lahf
cltd
xor
inc
leave
rolb
dec
pop
jmp
fucomp
mov
cmp
add
mov
outsb
loope
xor
or
mov
cmc
sub
mov
int
inc
or
aas
mov
pop
lds
leave
sbb
mov
xor
xorb
xor
add
out
xor
mov
xor
outsb
imul
fsubrl
and
out
notl
fistpl
stos
loop
sbb
push
ret
xlat
jmp
push
mov
int
add
push
movb
fwait
test
jg
ffreep
rolb
xor
cmpsb
cs
daa
jno
shlb
clc
sbb
pushf
push
lret
or
aas
push
lret
and
mov
shll
pop
mov
jecxz
cld
aam
fildll
loopne
clc
aam
sahf
dec
lock
data16
push
aam
mov
cltd
push
ret
sbb
pop
adc
sti
iret
cmc
cmp
ljmp
push
fcomi
stc
xchg
loope
pop
stos
cmp
and
popa
fwait
clc
lahf
mov
sub
movsb
insb
daa
pop
inc
mov
sub
sahf
adc
jle
pushf
sub
pop
cmpsl
shlb
sarb
imul
in
or
and
mov
shlb
jbe
cmp
add
aam
lret
pop
mov
sub
into
sub
add
sub
sub
mov
and
sub
mov
and
sbb
lock
or
fs
lods
xlat
cmp
mov
xchg
push
and
mov
sub
popa
push
sbb
adc
jns
enter
push
sub
cli
add
das
fstl
mov
add
inc
outsb
pop
outsl
movsl
ljmp
lock
lock
inc
jg
cs
popf
push
test
out
sbb
ret
fiaddl
lods
mov
popf
xor
cmp
push
push
mov
pop
aam
jo
lahf
jp
lds
cmp
cmp
out
dec
mov
bound
fstpt
push
pop
or
ja
mov
sti
lcall
or
jg
out
aad
cmp
outsb
stos
mov
fists
cmpsl
add
stos
popf
fnstenv
and
shlb
mov
rcrb
jb
inc
xor
sbbl
add
jge
inc
adc
push
xor
add
aad
fsubp
aaa
sub
adc
and
loop
xchg
inc
pop
int
mov
hlt
push
stos
enter
xchg
sbb
push
jl
xchg
pop
mov
into
sti
jmp
sbb
and
mov
popa
test
test
sbbb
aam
jle
pop
mov
adc
int3
pop
test
test
mov
fnstenv
iret
shl
inc
pusha
xchg
sub
mov
sub
sbb
mov
xchg
push
addl
popf
cmp
and
jae
les
xchg
lret
lret
dec
lock
hlt
stc
pop
addb
sub
jge
xchg
xlat
rcrl
scas
xor
pop
js
aad
mov
imul
cmpsl
pop
and
addb
inc
mov
mov
mov
out
dec
inc
push
loopne,pn
mov
nop
pop
inc
push
push
mov
push
test
xor
aam
pop
jae
out
dec
and
jg
hlt
lret
mov
xor
push
gs
dec
scas
dec
or
lret
mov
sub
jae
das
adc
jmp
test
ljmp
xchg
inc
push
int3
sbb
push
pop
lcall
lcall
xchg
jns
stc
scas
out
fiadds
pop
dec
js
sub
sahf
shll
push
lea
cmp
dec
dec
stc
mov
sub
add
scas
lds
rolb
mov
icebp
mov
jecxz
sub
and
pop
pusha
sbb
shrb
or
cmpsb
jae
outsb
rclb
mov
jge
xchg
lods
test
mov
mov
cmp
out
push
add
fcoms
flds
int
mov
inc
jecxz
xchg
push
pop
adc
and
imul
xchg
fwait
mov
inc
hlt
cmc
xchg
sub
or
testb
fyl2xp1
sub
sub
stos
loope
clc
dec
xchg
lahf
mov
add
or
push
xchg
jo
or
leave
push
adcb
xor
mov
out
enter
mov
in
xor
insb
loop
aas
outsb
adc
insb
and
mov
arpl
pop
dec
add
stos
cmp
add
scas
fisttpl
insb
inc
rclb
sub
jae
dec
lds
xchg
repnz
in
fiaddl
rcr
mov
fbstp
or
adcl
sahf
lahf
test
dec
push
push
mov
add
cs
push
push
insl
inc
xchg
imul
imul
cld
fnstsw
out
fwait
sbb
lahf
push
fmull
ljmp
es
push
mov
gs
cltd
jmp
add
push
or
dec
inc
xchg
std
adc
pushf
lret
into
and
cmp
and
pop
jno
jns
mov
xrelease
mov
sub
mov
pop
sarl
jns
adc
out
leave
out
loopne
adc
jo
mov
ret
andb
fbld
dec
idivl
ss
or
das
orl
inc
adc
and
jmp
sub
dec
ret
stos
sbb
ja
pop
or
inc
pop
push
mov
pop
cli
out
add
enter
js
cmpsb
xchg
dec
mov
mov
test
adc
ret
imul
out
ds
jl
pop
cmp
jae
cmpsl
dec
scas
push
lahf
rcll
fs
xor
cmp
or
jmp
cmp
sti
pop
lds
out
shr
andl
pop
lock
pop
lret
xchg
fisubl
inc
add
aaa
jmp
jl
or
lret
sahf
punpcklwd
lds
faddl
pop
dec
imul
int3
cmp
cmc
sbb
and
stos
push
sbb
imul
pushf
jo
push
fildl
movsl
push
and
shll
jns
xchg
fwait
into
mov
pop
or
xchg
mov
jge
add
cwtl
fwait
outsl
sti
mov
or
jns
out
mov
jo
pusha
mov
popa
push
out
arpl
add
dec
and
lds
sub
dec
lock
pushf
movsb
int
and
cmc
stc
push
lods
push
cmpsl
mov
xor
mov
adc
dec
ror
cli
sbb
jg
aas
mov
cmpsl
sbb
f2xm1
push
sbb
ret
jl
sub
jl
or
lods
inc
and
leave
frstor
rcrb
sub
stc
xor
cmp
iret
lea
inc
sti
and
in
mov
in
pushf
out
xchg
bound
sub
sti
sub
push
into
pushf
outsl
addr16
jp
xchg
xchg
add
enter
mov
mov
aas
outsl
adc
ljmp
shll
ret
js
insb
scas
out
xchg
das
stos
jp
lcall
out
xor
adc
dec
pop
push
mov
mov
dec
cmpsb
push
jmp
inc
movsl
push
out
out
cmpsb
inc
in
fsubr
fwait
sahf
mov
jo
sbb
mov
push
pop
adc
cli
inc
test
scas
popf
push
mov
mov
cmpb
es
into
in
xchg
pop
shrb
fcomi
pop
roll
pop
daa
lea
pop
pop
sbb
pop
lcall
lret
mov
xor
cmpsb
sub
testb
mov
bound
rolb
aad
xchg
aaa
xorb
sahf
lods
xor
dec
lahf
lret
jae
imul
fdivr
cmpsl
adc
push
pop
and
xorb
lods
mov
aaa
pop
xchg
js
mov
pop
push
mov
push
js
rolb
lods
inc
xor
xor
pop
fwait
mov
cmp
pop
into
mov
into
lret
push
movsb
aam
dec
jl
test
mov
add
mov
in
pop
jp
mov
movsl
inc
xchg
push
and
sub
cmc
cmp
mov
pop
push
hlt
roll
test
ja
adc
rol
lea
xchg
testb
daa
cmp
movsl
adc
xchg
pusha
hlt
mov
dec
in
xor
cmp
repnz
hlt
imul
add
mov
jae
cmovae
fnstenv
imul
adc
loopne
pusha
andb
add
loop
inc
daa
mov
mov
jnp
int
iret
sahf
xor
sbb
stc
adcb
arpl
adc
fisubrs
sbb
loope
insb
jnp
xchg
mov
fldl
mov
pop
call
fwait
outsb
rcrb
jb
jg
ficomps
jg
mov
shll
push
add
mov
mov
pop
imul
push
shlb
push
sarb
aaa
shll
xchg
fisttpll
cwtl
adc
dec
xor
hlt
adc
add
jge
pusha
jne
cmpsl
cmpsb
mov
mov
mov
aas
cmp
sub
xchg
jbe
mov
mov
and
jle
jno
add
sbb
ret
xor
and
pop
dec
dec
inc
push
mov
clc
cmpsl
jmp
mov
iret
jle
roll
lock
cmp
lea
cmc
pushf
arpl
cmp
and
push
dec
or
sub
jl
pusha
cmpsb
xchg
dec
xlat
in
nop
fwait
mov
fbld
push
subb
push
in
out
lret
psubd
es
sbb
inc
int3
mov
into
insb
push
cmp
sub
addb
sbbb
adc
mov
jg
jo
cmp
rclb
call
xchg
push
loopne
mov
std
movsb
sbb
out
cmp
clc
push
push
ret
mov
adc
mov
adc
lcall
or
cmp
sub
adc
lods
sar
sub
mov
lods
jg
cmp
add
test
cmp
dec
jl
cmpsb
fistps
in
and
sbb
pop
push
mov
mov
iret
loope
pop
mov
enter
inc
outsl
je
and
mov
adcl
and
repnz
xchg
fists
aaa
je
lock
add
xchg
mov
xlat
mov
iret
in
lret
imul
cmp
daa
and
mulb
push
clc
rcrl
cmp
or
stos
mov
faddl
ret
xchg
lock
iret
int3
or
sbb
orb
add
or
mov
cmp
daa
stos
repnz
inc
sti
mov
in
rcll
sbb
mov
pop
adc
xchg
ss
xor
in
cltd
mov
mov
add
or
and
repnz
adc
mov
inc
cmp
xchg
dec
rorb
lcall
mov
out
push
pushf
outsl
mov
mov
inc
jecxz
icebp
fidivrl
and
push
adc
lds
xor
pop
dec
loopne
or
je
insl
lcall
pop
out
cmp
mov
jbe
cmp
push
call
mov
pop
cmp
insb
ret
subl
dec
insb
mov
iret
les
outsb
lcall
sbb
in
pusha
aaa
cs
jbe
and
hlt
std
ds
xchg
arpl
and
inc
sti
mov
aad
jmp
adc
mov
lcall
push
inc
mov
pusha
jecxz
std
dec
mov
arpl
or
adcl
fdivrp
ljmp
jge
div
or
notb
cmp
nop
add
movsl
aam
inc
jae
in
add
jb
xchg
data16
or
cli
push
adc
fldenv
or
sbb
jp
pop
jmp
mov
add
hlt
mov
mov
xchg
push
je
sub
sub
pop
sti
sbb
sbb
imul
daa
sub
shll
mov
loop
sub
cwtl
insb
fisubs
fistpl
adc
pop
stc
mov
sbb
sbb
xor
dec
adc
push
jo
or
xchg
shlb
jge
sub
mov
loop
sbb
aaa
pop
sahf
pop
repz
les
jns
into
out
filds
or
outsb
adc
int3
adc
sti
adcb
mov
pop
mov
cli
mov
outsb
mov
jae
movsb
sub
mov
push
movsb
sbb
adc
xchg
dec
mov
test
shll
dec
mov
int3
mov
jg
dec
xchg
mov
add
test
sbb
or
subb
adc
add
jns
add
dec
fst
xor
scas
cwtl
test
fistpll
jb
pushf
dec
imul
movsb
xchg
xor
mov
dec
jl
push
out
sub
mov
mov
pushf
and
enter
and
cmp
shll
aas
sbb
lcall
xor
jg
cltd
xchg
pushf
stos
repnz
push
push
jnp
jo
rorl
test
xor
lods
inc
or
lea
insb
insb
adc
sti
out
in
arpl
xchg
pop
loope
incl
scas
ja
push
cwtl
push
in
lea
cmp
pop
cmp
notb
loope
ret
lahf
orl
push
mov
mov
fwait
cmp
mov
leave
rep
cmp
lea
aam
add
cmp
inc
divps
fldt
and
or
push
rcll
or
les
cmp
loop
add
daa
clc
out
movsb
fs
ret
std
daa
int
xchg
sub
and
sbb
mov
fcmovb
pop
mov
in
push
dec
sarl
sub
mov
es
xchg
or
lds
int3
add
jp
xor
fldenv
mov
push
mov
stos
loopne
loop
inc
inc
jmp
dec
bnd
xchg
xchg
xchg
call
outsb
push
repz
fwait
int3
push
sbb
sub
out
pop
sahf
roll
fldt
jae,pt
xchg
adc
outsb
mov
nop
xlat
gs
mov
in
sbb
insl
lods
cmovs
popa
mov
sbb
mov
insb
sub
testl
pop
cmc
gs
lret
inc
test
sbb
popf
imul
push
outsb
mov
dec
out
or
mov
bound
push
xchg
and
push
lcall
sbb
mov
mov
into
mov
rorb
jl
cmp
icebp
dec
pop
popf
jl
dec
test
rcrl
push
pop
xchg
ftst
sbb
ja
jle
jmp
push
das
andl
jl
sub
pop
xor
sbb
push
shrl
insl
xchg
in
fnstcw
fdivrs
jo
jle
in
insl
mov
jmp
aad
or
test
push
daa
jb
inc
out
and
sti
shrl
je
fiadds
jg
lcall
lock
cmp
mov
xor
jae
jb
jae
cwtl
mov
push
rcr
cwtl
loopne
sub
mov
pop
mov
adc
std
mov
adc
mov
idivb
pusha
outsb
sti
movsb
push
test
imul
xlat
adc
cli
xchg
mov
sbbl
insb
jmp
mov
jl
push
out
adc
leave
mov
subl
mov
sbb
dec
enter
ja
ss
and
jae
jmp
sbb
pop
cmc
jmp
loope
sub
dec
rcrb
mov
push
inc
xor
rclb
dec
push
and
mov
cmc
fmuls
pop
sahf
add
dec
das
das
sbb
push
repz
mov
iret
or
in
rcl
xor
cli
sahf
jbe
dec
loopne
and
out
aam
sub
ja
iret
add
sahf
mov
adcl
or
mov
and
pop
mov
xchg
aaa
sahf
dec
xlat
mov
mov
cmp
clc
ds
push
test
mov
pop
test
xchg
push
adc
and
ja
dec
std
test
jnp
xor
push
sarb
and
add
cld
cmc
xchg
sahf
sti
mov
add
xor
cwtl
hlt
in
sbb
pop
nop
clc
fsts
and
rcl
inc
mov
cmp
adc
imul
push
ds
lret
fdivrl
repz
f2xm1
cmp
mov
mulb
xor
popa
mov
mov
mov
pop
in
pop
outsl
fdivp
daa
sbb
xor
in
sarb
ret
fmuls
or
jg
xchg
cltd
push
cmpsl
imull
mov
sarl
adc
add
add
jmp
movsl
mov
jmp
xorl
incl
adc
adc
mov
fs
mov
aad
shlb
cltd
sub
jg
mov
dec
dec
rclb
lds
stc
stos
mov
sahf
or
data16
das
addr16
xchg
fwait
in
mov
jle
sbbb
in
pop
and
lea
xchg
lret
jge
repnz
out
adc
notl
mov
mov
mov
imul
subb
lea
jnp
cli
mov
test
int3
push
pop
lods
subl
nop
std
fnsave
ss
dec
leave
sarb
mov
mov
push
mov
push
into
movsl
adc
aam
iret
push
sbb
fisubs
lods
sbb
loopne
and
test
insl
test
jno
stos
or
pop
test
jno
movsl
cmpb
icebp
pop
push
sub
faddl
int3
push
movsb
and
repz
les
push
gs
push
pop
mov
jnp
bound
in
mov
cmp
inc
adc
sub
mov
jge
xchg
sbb
dec
push
pop
movsb
pop
jb
das
inc
shrb
mov
imul
in
jns
mov
xchg
inc
pop
pop
stos
and
cld
outsl
jns
outsl
frstor
cmc
xor
mov
and
push
sbb
mov
insb
mov
or
das
mov
xchg
push
outsl
imul
sbb
mov
lcall
int3
or
icebp
mov
notl
test
stos
xchg
in
fisubl
xchg
mov
loope
stc
xchg
movsl
pop
scas
jle
push
cmpb
xor
and
mov
cmp
sbb
pop
mov
adc
enter
dec
je
js
lea
lahf
cmp
in
xor
inc
pmuludq
cmp
push
jnp
xchg
ljmp
mov
dec
rorl
push
sbb
cmp
jb
adc
lcall
xor
pop
add
sub
fmull
push
mov
mov
inc
mov
in
pop
ret
jge
jae
repnz
mov
and
inc
adc
pop
push
std
cmp
out
mov
cmp
xlat
pop
out
aaa
sbb
pop
mov
aam
les
sub
mov
imul
mov
sub
pop
fdivrl
xor
jae
xchg
dec
xchg
xchg
push
pop
popa
xor
popf
pop
jne
and
xchg
aas
or
ljmp
push
add
mov
push
push
enter
xor
aad
mov
dec
adc
mov
mov
xchg
loope
push
inc
sub
pop
int3
aas
cmpb
pushf
gs
cmp
add
jecxz
out
xorl
inc
add
or
mov
popf
dec
xchg
add
in
add
xchg
dec
dec
push
pop
inc
aas
dec
hlt
jg
es
sub
sahf
stos
mov
add
int
addr16
sub
add
stos
jl
inc
ror
jae
in
cltd
jno
in
icebp
xor
pop
rorl
ss
sub
push
rcrl
xchg
dec
incl
aad
adc
mov
ss
jecxz
call
pop
negl
arpl
rcr
pop
xlat
push
rorb
cmp
addr16
push
sahf
push
xlat
push
ret
cmovge
repnz
mov
in
mov
clc
clc
int3
sbb
in
aaa
pop
data16
adc
xchg
and
cmpsb
cs
pop
sbb
daa
jg
call
adc
icebp
or
jns
xlat
push
mov
mov
push
out
cmp
scas
fsubrl
or
pop
pusha
aas
lret
mov
mov
inc
pushf
adc
arpl
sti
nop
popf
fldcw
mov
mov
push
bound
jp,pn
clc
mov
and
sub
repz
jmp
xorb
mov
scas
cmp
xor
pop
call
xchg
into
sahf
mov
jg
addr16
repnz
cwtl
fidivrs
pop
cmp
mov
sbb
push
pusha
jb
fnstcw
jo
inc
aad
pop
fisttpl
push
fbld
lods
outsl
subb
dec
sub
and
bsf
movl
push
stos
mov
addb
ret
pop
addr16
lahf
idivl
sarl
andl
aam
ja
popf
mov
xchg
es
xorb
push
insb
movsl
dec
js
inc
into
mov
icebp
daa
xchg
cld
or
loop
mov
sbbl
push
ret
inc
pushf
fsub
mov
mov
jb
dec
sbb
ret
test
repz
cmc
lds
sub
test
stos
call
hlt
imul
xor
outsl
jg
mov
cli
mov
lods
stos
out
imul
popa
inc
jp
clc
sarl
in
inc
jnp
mov
jg
outsb
lret
cmp
sub
roll
ret
fwait
adc
das
jle
push
js
int
mov
dec
jo
adc
mov
sub
cltd
pushf
cmpb
das
in
jb
xchg
mov
adc
sbb
dec
shr
ss
push
stos
jmp
jmp
jge
jmp
or
fildll
loop
jle
push
push
fadd
adc
push
aaa
mov
jnp
fmul
sub
xor
dec
pop
add
cli
adc
xchg
add
cmpsb
fidivs
lret
sub
pop
jo
lods
mov
into
xor
adc
dec
cwtl
pusha
aad
xchg
mov
stc
loopne
fidivl
jecxz
fadds
push
ss
fs
mov
ret
int
pop
and
jns
cmp
add
inc
jmp
imul
push
xchg
push
pop
insb
popf
push
out
mov
sub
mov
lret
cltd
sub
jno
mov
or
jmp
sbb
into
ljmp
pop
push
mov
mov
sbb
or
cmp
or
stc
int3
repz
repnz
push
fwait
mov
in
pop
xchg
jmp
aas
cwtl
adc
or
popa
in
fdivs
dec
mov
mov
mov
shll
jbe
cmp
mov
std
mov
imul
and
xorb
xchg
push
ret
and
cmp
ss
in
jne
rcrl
jbe
lods
pop
cmp
filds
mov
add
das
movsb
cmpsl
into
cwtl
ret
ljmp
pop
ret
mov
mov
adc
ficoms
sub
imul
adc
sbb
mov
call
jg
jo
sub
daa
pop
pop
jge
sbb
aad
adc
push
aad
fst
lret
mov
cmp
mov
into
arpl
rol
sub
jmp
dec
and
das
push
gs
dec
shr
in
loop,pn
rcrl
pop
cmp
fstpt
daa
mov
cwtl
mov
dec
int
ljmp
stc
jle
push
add
aam
sub
aad
es
imul
aam
jns
dec
lods
xorb
dec
xchg
dec
or
mov
pushf
imul
daa
aad
mov
push
imul
test
inc
xor
inc
test
push
aad
xchg
mov
mov
loope
psrlw
mov
cmp
pop
int
dec
jl
cmp
rcrb
outsl
arpl
mov
in
ds
test
push
sbb
je
push
mov
pop
fdivs
adc
inc
scas
or
dec
std
lds
cwtl
pop
mov
xchg
dec
or
sub
mov
cmp
mov
cmp
dec
pop
call
mov
insl
sbb
pop
ljmp
lods
push
lahf
jnp
mov
mov
aaa
mov
sub
shlb
mov
add
cmp
push
bound
mov
sub
sbb
movsb
sbb
int3
mov
xor
cltd
fidivs
in
leave
sbb
jns
shrb
ret
cmp
sbb
jnp
psubb
in
jmp
push
int
rcrl
pop
ficomps
pop
cmp
out
pop
push
adc
popa
adc
movsl
mov
pushf
lret
pop
add
mov
cmp
lcall
xchg
arpl
lock
loop
mov
xchg
cld
test
mov
mov
jecxz
dec
fildl
cmpsl
add
mov
sbb
mov
sub
ja
pusha
in
inc
mov
adc
jecxz
repz
mov
add
xchg
xchg
ja
testl
or
sbb
jbe
aam
test
xchg
stos
incl
pop
cmpsb
cmp
jo
not
push
or
pop
mov
adc
das
arpl
into
pop
mov
outsb
adc
xor
mov
addr16
loope
ss
ds
stos
fs
les
fwait
push
lret
sbb
fistps
cltd
sbbb
inc
xor
mov
xlat
inc
inc
pushf
out
inc
inc
lods
add
daa
cmp
mov
push
jo
cwtl
xor
xchg
aaa
out
shrl
xor
inc
outsl
das
xchg
jae
lock
out
cmpb
xchg
sbb
push
dec
jl
pop
push
cld
test
xor
push
cwtl
add
rolb
or
pop
ja
sub
aas
scas
imul
xlat
fldenv
into
sbb
cld
loop
out
or
cld
mov
sarb
stos
pop
cmp
mov
adc
push
push
pop
insl
xor
push
add
cld
mov
stos
ss
pop
data16
pop
ss
fwait
push
pop
pop
dec
push
jmp
inc
sub
xor
push
inc
out
sbb
add
pop
pop
aam
insl
in
rorb
js
sub
bsf
test
jb
xchg
dec
cltd
mov
adc
fwait
add
inc
imul
add
sbb
push
nop
scas
and
daa
lock
mov
pop
pop
nop
pop
shll
popa
jl
icebp
ret
push
lods
addb
cmp
sub
dec
inc
cltd
sub
push
popa
mov
mov
xor
inc
xor
mov
fldcw
repnz
pop
ds
jg
sub
jmp
shr
adc
test
push
jns
insl
jne
or
inc
fst
imul
mov
js
cmp
ss
xchg
mov
filds
mov
jp
cmpsl
sub
ja
add
and
pop
lahf
in
imul
lock
mov
sti
popa
and
das
jb
repnz
rorb
lods
nop
push
cmp
arpl
ss
stc
in
inc
jecxz
or
xor
push
sub
cmp
std
mov
inc
mov
insl
push
inc
or
into
pop
mov
addb
sti
xchg
jb
rcll
adc
pop
cmp
inc
into
fwait
sbb
adc
shrl
lods
subb
pop
aaa
jmp
in
jb
arpl
adc
xchg
pop
bound
xor
fwait
in
jle
add
mov
lcall
and
sbb
outsl
mov
and
int3
adc
mov
mov
adc
hlt
sbb
dec
jo
pusha
mov
out
xlat
inc
lds
sbb
mov
or
push
bound
xor
pushf
repz
shrb
mov
xchg
outsb
fwait
mov
in
push
xchg
inc
test
xchg
rcll
and
mov
and
scas
outsb
xlat
jne
dec
jbe
lahf
mov
mov
push
mov
push
add
lods
sbb
jno
xchg
pop
gs
aaa
or
aam
mov
cmc
adc
fisttps
sahf
mov
sbb
int3
jle
out
les
jg
cltd
dec
or
cmp
das
mov
add
scas
cmpsl
cmp
cld
popa
sub
enter
adc
jnp
sbb
and
sahf
fnsave
fcomp
dec
inc
cmp
push
sub
sbb
push
add
push
aas
or
outsl
daa
pusha
sub
test
in
jns
mov
insl
push
arpl
popa
mov
lock
ja
repnz
or
xor
hlt
mov
addb
js
int3
dec
gs
mov
fstpl
sub
lock
push
sahf
pusha
outsb
popf
sub
lods
adc
jns
test
sbb
in
mov
jnp
sub
addr16
cmp
ss
cld
dec
icebp
fdivrs
mov
pop
shl
push
mov
or
push
sahf
or
outsb
popf
or
sub
pop
inc
mov
dec
in
mov
mov
test
push
cmc
int3
movsl
loop
mov
adc
fiadds
outsb
pop
lahf
jp
cwtl
jnp
jnp
cmp
sub
inc
std
mov
push
pushf
xchg
dec
jl
in
pop
addr16
arpl
adcl
mov
addr16
jb
fwait
loope
sti
mov
mov
aad
test
sbb
fxch
and
stc
fnstsw
push
cs
push
xor
push
out
repz
adc
adc
mov
inc
aas
andl
les
inc
xlat
jo
push
lcall
enter
fcoml
test
xchg
test
pop
iret
cld
cmp
add
sahf
sub
pop
adc
fwait
sahf
jns
movsl
or
mov
mov
repnz
sub
inc
dec
push
sub
out
rcr
xor
and
pop
jp
lods
pop
repz
or
cmp
adc
jecxz
cs
cmp
lcall
lahf
pop
inc
enter
xchg
icebp
int
sub
push
cmp
mov
pop
in
jl
pop
mov
cltd
pushf
divb
cmovno
push
mov
xchg
sti
lods
sarl
push
imul
adc
sub
fisubrl
dec
jno
sbb
js
and
mov
sbb
jp
in
insb
sti
cmp
xchg
mov
adcl
aas
cwtl
mov
fcmovnbe
mov
stos
lret
or
aam
stos
paddd
sbb
jno
cmp
int3
or
sbb
test
int3
xchg
push
in
lahf
xchg
cmp
mov
xor
shrb
fists
jge
push
inc
sub
xchg
nop
out
inc
and
cwtl
cmp
mov
or
dec
and
aas
fimuls
pop
cmp
int
popa
dec
inc
mov
mov
jbe
push
pop
push
or
pop
cmp
xor
mov
mov
scas
push
or
add
mov
add
rcll
lret
orl
xor
pop
mov
in
jg
xchg
xor
js
movsb
into
stos
sbb
out
inc
or
add
pop
mov
cmc
dec
out
sarb
pop
loop
add
test
mov
push
jnp
incb
jle
sbb
or
xchg
ja
push
sbb
lods
addr16
pop
insb
or
mov
push
mov
and
adc
inc
mov
cmc
mov
pop
popf
pusha
pop
icebp
dec
test
rcrl
lahf
add
xchg
jmp
add
shrb
mov
mov
std
pop
xchg
lock
mov
jb
push
mov
pop
pop
pop
addr16
xor
add
mov
cli
jg
into
and
imul
xor
jae
pop
lds
xchg
insb
aaa
nop
pop
or
aas
test
or
cli
loop
inc
adc
mov
xor
in
stc
scas
mov
xor
imul
cs
ja
push
sbb
daa
pushf
shl
cmp
push
shrl
fisubs
or
pop
jnp
jmp
popf
inc
movsb
addr16
xor
mov
push
dec
lret
hlt
bound
cmc
imul
mov
jmp
out
fnstsw
aad
sub
rorb
or
mov
jne
lods
movsl
sbb
ret
outsl
and
or
shl
fs
adc
mov
fnstenv
and
jno
std
jne
clc
fcomps
ds
xor
pusha
pop
fs
or
jle
adc
mov
mov
enter
movsl
xor
stos
out
icebp
pushf
pop
daa
leave
jp
pop
pop
lcall
jo
fiadds
add
lret
clc
test
mov
adc
bound
adc
xchg
mov
in
adc
sub
cmc
inc
imul
pop
mov
mov
and
sti
dec
xchg
outsl
movb
dec
mov
xchg
xor
dec
push
mov
inc
pop
inc
sub
ret
pextrw
mov
mov
int
xlat
test
ljmp
sub
pop
outsb
jbe
arpl
jb
sub
push
sbb
push
push
mov
div
mov
add
pop
popa
popa
push
and
shll
pop
scas
cmp
test
idiv
jl
rolb
ja
loope
insl
dec
repz
jne
or
push
mov
dec
add
andl
cmp
cmp
in
jecxz
lea
jo
repz
and
mov
push
push
divl
mulps
mov
inc
pop
mov
cmp
mov
xchg
inc
add
outsl
out
testb
adc
adc
pop
aam
mov
pushf
mov
in
or
negl
mov
push
out
dec
scas
movsb
mov
pop
pop
inc
ja
adc
mov
sbb
cmp
pop
shrl
sub
iret
sahf
xchg
pop
insb
bound
inc
xchg
and
lods
and
dec
or
mov
jp
sub
lods
into
rclb
and
aaa
xor
mov
push
and
push
pop
or
push
fnstcw
pushf
fcmovne
inc
hlt
inc
add
scas
xor
test
xchg
pop
pusha
lahf
sub
pop
in
iret
adc
push
push
mov
push
adc
cmp
xchg
scas
fldt
push
gs
cmpb
xchg
outsb
mov
out
repnz
cmp
loopne
cmp
imul
push
adc
mov
int3
adc
jmp
shlb
cltd
lahf
ret
sub
mov
or
clc
hlt
roll
loop
mov
push
cltd
push
shlb
sub
jp
push
cmp
loopne
cmpsl
mov
out
and
dec
sbb
insl
iret
in
xchg
negl
dec
jmp
xchg
jns
insl
ljmp
push
push
cmp
dec
pmaxsw
scas
push
fsubrs
push
mov
leave
sub
jo
outsb
sbb
pop
pop
sbb
cmp
cmp
xor
dec
imul
cli
xor
enter
shll
add
jg
arpl
push
cli
or
lret
ljmp
jmp
dec
test
xchg
add
adcl
jbe
sbb
cmp
repz
das
insl
and
add
or
push
pushf
ss
pop
test
inc
jg
mov
jns
gs
aas
xchg
sub
mov
push
xchg
cli
mov
cmp
dec
mov
fldt
lea
sub
pushf
xor
ja
pop
repz
loope
aaa
jnp
mov
scas
out
mov
ja
add
xor
out
ja
pop
push
fwait
nop
mov
out
and
iret
adc
mov
fadd
outsl
inc
pop
je
jl
mov
loopne,pt
jle
xchg
inc
shlb
sti
mov
jmp
test
jbe
add
push
jnp
cmpsl
clc
pusha
push
dec
dec
enter
cmpl
jge
xlat
xor
pop
adc
aas
in
sbb
jno
push
inc
fildl
mov
fxch
xchg
out
stc
jo
or
dec
leave
mov
sti
sub
sub
add
aaa
movsb
mov
lock
cmp
movsb
mov
outsb
cmc
cmpsb
movsb
mov
popf
imul
mov
js
xor
std
lock
cmpsl
jecxz
adc
add
adc
fadds
adc
jno
pop
frstor
shrb
hlt
mov
jno
sar
or
cld
jbe
and
pop
inc
aad
sub
inc
mov
xchg
mov
or
dec
jg
je
pop
sbb
xchg
dec
shrb
dec
lcall
adc
cltd
popa
bound
sahf
jl
scas
int
out
neg
dec
flds
out
fstp
add
cmp
cmp
cwtl
push
jae
cmp
inc
add
and
cli
test
cmp
popf
repz
adc
arpl
movsb
sub
outsb
in
pusha
mov
cmpsb
lods
sub
push
out
cmc
or
mov
insl
and
adc
sbb
push
jno
leave
sub
leave
pop
data16
sbb
sbb
xchg
or
mov
push
negl
aaa
add
in
sahf
ret
test
cmpsl
cmp
add
out
xor
inc
adc
ss
fisubrl
sub
sub
sarl
stos
push
ljmp
stos
roll
scas
sarb
sbbb
sbb
stc
cmp
ljmp
and
pop
enter
testl
add
xorb
rorb
ja
push
stc
sub
sub
mov
fwait
and
fistps
scas
ficoml
add
or
scas
lods
cmp
stos
shl
mov
push
and
cmp
cli
dec
gs
lds
sub
int
sbb
jnp
fwait
js
add
loope
rolb
pop
fdivl
mov
dec
insb
jecxz
pop
xchg
or
cmpsl
inc
orl
push
mov
xchg
mov
idivb
push
cmpsl
bound
cld
pushf
mov
ret
sub
enter
lods
outsb
lcall
xor
pushl
pop
cmpsl
orb
pop
sub
xchg
jo
test
pop
ficomps
and
mov
loope
popa
adc
movsb
outsl
mov
ljmp
lret
int
mov
jmp
mov
lret
jge
cmc
dec
cs
jecxz
push
pop
dec
sbb
mov
mov
ja
shrl
adc
data16
or
clc
dec
inc
cmc
mov
into
fnstsw
mov
movsl
or
loope
jnp
adc
jns
jg
pop
data16
ja
cmp
testb
xchg
add
push
xchg
jo
cs
mov
cmpl
inc
push
sub
push
jne
push
sub
cmp
dec
fsubl
js
mov
adc
cmp
push
fwait
push
mov
bound
ljmp
xchg
add
or
adc
add
insl
mov
scas
shll
scas
add
sbb
mov
imull
cmp
xchg
jno
mov
pop
inc
test
or
push
cmc
pop
outsb
pop
cmc
jge
sbb
cmp
push
cmp
dec
and
sbb
xchg
mov
and
outsl
or
inc
enter
mov
enter
add
fcmovbe
xor
inc
pushf
mov
out
test
gs
add
sbb
pop
in
ret
cmp
fwait
test
int
movl
or
mov
bound
xlat
mov
jno
sub
sub
aam
imul
cltd
dec
adc
mov
sahf
scas
push
syscall
jbe
xor
inc
jns
jl
aam
xchg
sahf
cmpsb
sbb
in
mov
or
push
das
jo
out
lahf
sbb
cmp
pop
arpl
jnp
out
sarw
cmpsl
repz
push
stos
negl
sbbb
inc
xor
jns
cli
lods
push
repz
imul
ss
sub
sbb
pop
dec
xchg
push
fs
mov
jns
aas
sub
and
mov
lods
push
cmp
jmp
sub
repz
ja
dec
sbb
pop
sbb
cltd
xchg
leave
fdivrl
jne
and
subb
mov
jge
mov
xchg
push
repnz
out
push
cmp
mov
adc
push
jle
jnp
add
add
sub
or
incb
cli
mov
out
and
mov
dec
mov
int3
adc
lock
insl
lods
jl
dec
adc
pop
je
push
xor
cli
or
scas
sub
mov
adc
shl
xor
inc
movsb
js
addr16
in
sub
jae
jae
inc
or
shrl
xor
outsl
xlat
test
mov
cltd
popa
mov
add
xor
les
jb
adc
push
test
adc
fnstcw
call
mov
sbb
fwait
shlb
rcll
add
stc
arpl
pop
pop
testl
enter
ljmp
inc
sbb
sbb
loopne
out
cmp
fisubrl
bound
cmp
sbb
out
mov
sahf
scas
xor
jecxz
into
lock
test
lds
fs
data16
sub
jb
jnp
lds
pop
mov
fcoms
mov
movl
dec
mov
daa
lea
or
ja
mov
push
loop
inc
adc
mov
shlb
and
mov
pop
or
je
scas
inc
fwait
test
jecxz
inc
imul
and
inc
push
jmp
and
xchg
pop
orl
jp
loopne
pop
xchg
sbb
cmp
mul
ret
fs
mov
nop
push
icebp
push
mov
leave
dec
and
ficoms
lds
ror
cli
push
into
imul
rcll
call
sbbl
out
cmpsb
cwtl
out
sub
lahf
pop
lods
scas
push
stos
imul
jo
or
in
hlt
add
pop
pop
lods
lods
rcll
jmp
inc
pop
pushf
fst
stos
pop
and
adc
jns
sbb
sub
sub
shll
je
ljmp
rorb
sbb
outsb
xor
lret
push
test
addr16
leave
test
sub
and
push
push
lods
and
sbb
cmpsb
mov
xchg
jp
aas
adc
add
or
movsb
jno
jns
in
jbe
mov
push
mov
mov
inc
inc
enter
jnp
subb
add
repnz
jmp
mov
aaa
fiaddl
and
lahf
pop
ret
dec
ja
pop
jo
in
and
xchg
and
orl
ljmp
add
xchg
or
inc
add
sub
mov
xor
or
sub
scas
jne
in
les
dec
xchg
scas
cmp
int3
outsl
scas
subb
es
cmp
repz
das
rolb
shll
movsl
js
xchg
fxch
mov
mov
es
xor
stos
cmp
sti
lcall
inc
mov
loope
call
and
aaa
sbb
push
pop
pusha
scas
sbb
mov
add
mov
outsb
js
cld
xchg
aas
and
rep
aaa
mov
jo
cs
decb
in
jb
inc
push
add
mov
int
mov
push
lcall
std
sahf
jns
test
popa
sub
je
lahf
mov
loop
int3
sbb
jo
mov
in
xor
push
out
stc
outsl
mov
ret
movsb
iret
jg
out
push
lret
int3
pop
inc
popl
mov
jmp
lock
sbb
add
adc
cmp
dec
iret
xchg
xchg
mov
movsl
xor
xchg
adc
jg
outsl
mov
sub
and
icebp
cld
mov
adc
xlat
mov
lret
jnp
mov
sub
cmp
sub
inc
dec
sbb
push
xchg
jnp
pusha
loopne
inc
into
pop
nop
add
xor
xchg
jo
out
clc
test
and
push
xchg
pop
jno
and
test
dec
scas
mov
js
jo
mov
test
andnps
push
data16
cmp
and
cmp
divps
jns
xchg
xchg
adc
sub
nop
cs
xchg
pop
shlb
popf
sub
outsl
loop
pop
mov
pop
add
loope
ret
dec
iret
mov
push
je
mov
in
mov
daa
sbb
cld
fwait
pop
push
mov
or
sbb
adc
test
jns
sbb
lret
push
mov
mov
jns
pusha
sub
sti
pop
sub
push
loop
xchg
test
jo
movsb
sub
gs
mov
or
inc
aas
xchg
sbb
pop
mov
mov
sbb
lea
aaa
movsl
imul
sub
jmp
addr16
xor
in
sti
sub
leave
pop
lret
adc
mov
ficomps
pop
mov
adc
adcb
in
in
and
paddw
test
sbb
xor
aas
std
add
xchg
outsl
test
shrl
pop
sub
mov
imul
stos
in
test
jnp
js
leave
clc
xchg
sbb
sarb
out
dec
fdivl
cmp
push
sub
scas
jb
orb
mov
sbb
pop
sbb
or
fwait
call
xchg
aas
sub
dec
ljmp
mov
cmp
inc
mov
push
mulb
test
movsl
icebp
ret
sub
push
jo
inc
mov
mov
mov
das
test
ss
xchg
out
jge
mov
and
and
adc
and
mov
push
jne
push
cmp
xchg
inc
cmpsl
fstpt
push
aam
js
fists
sub
sub
ja
bound
xor
or
shl
lods
xor
movsb
jp
scas
insb
xor
ds
push
xchg
cs
xor
jecxz
add
xor
ss
hlt
push
jno
outsb
imull
cmpsb
add
xchg
ds
lock
test
push
pop
mov
mov
stos
mov
pusha
inc
mov
lret
push
cs
add
mov
jge
sub
jo
fidivl
rcrb
das
xchg
data16
xchg
jns
mov
arpl
inc
jecxz
xor
jae
repnz
pop
rolb
push
mov
push
lahf
out
stos
cmp
sub
add
in
lret
movsl
mov
call
inc
pop
clc
xor
imul
loopne
jle
or
jl
sub
div
test
lret
out
jge
jns
dec
push
fs
add
cmp
lahf
daa
ret
push
and
mov
hlt
jae
lods
leave
xchg
pushf
inc
in
lds
enter
sbb
pop
xor
out
fwait
sarl
aam
push
xor
adc
imul
add
pop
nop
xchg
push
mov
popf
cli
movsl
sar
sub
jae
mov
sub
int
pop
and
push
cmpsb
into
fmul
or
lea
pop
pop
je
push
jnp
jae
push
popf
cld
movsb
das
inc
mov
mov
xlat
and
sub
inc
jbe
out
xor
pop
jns
lock
lock
mov
in
divb
xchg
les
xchg
push
push
push
out
mov
std
pop
mov
mov
negb
pop
jecxz
fidivrs
push
add
cmpsl
inc
pop
add
call
pop
sbb
shll
in
stos
add
pop
dec
cmp
dec
mov
idivb
mov
aam
push
rol
mov
jmp
cltd
mov
dec
add
sub
xchg
arpl
cmp
in
lcall
push
jg
jns
bound
loop
jmp
loope
in
enter
aaa
push
adc
push
scas
gs
xor
test
jle
roll
pop
jnp
mov
lock
sub
fcoml
aas
nop
rcr
jmp
mov
int3
push
imul
or
lea
fldenv
sbbb
sbb
cld
jne
push
sub
incb
mov
dec
fisubrs
push
testb
idiv
push
mov
std
arpl
push
inc
lcall
push
jl
dec
sbb
mov
enter
push
mov
nop
add
sbb
popa
lds
cmc
adc
aad
adcl
mov
inc
roll
cmp
mov
cmp
insb
jae
push
inc
xchg
in
std
fabs
or
mov
loop
testb
leave
push
dec
rcr
out
dec
sub
int3
jo
lea
push
stos
orps
add
sub
mov
popa
jo
mov
fs
mov
pop
push
pusha
arpl
roll
add
js
jne
scas
mov
mov
or
shlb
sarl
fwait
outsl
mov
dec
mov
imul
into
jg
enter
xchg
jnp
movsb
xchg
mov
inc
pushf
cltd
and
pop
mov
mov
sub
out
dec
xchg
dec
stos
pop
push
std
insb
sahf
aaa
mov
mov
dec
mov
xorl
push
push
test
les
mov
cld
push
je
and
cld
lret
push
dec
loop
popa
faddl
sbb
fadd
dec
enter
add
add
test
push
mov
xchg
push
cmp
inc
inc
lret
fildll
xchg
rclb
push
mov
jle
mov
outsb
inc
jbe
sar
inc
jmp
add
mov
xchg
jno
imul
dec
rorb
sub
into
or
lcall
mov
add
outsl
shlb
xor
jno
lcall
pop
enter
dec
pop
les
adcb
inc
aad
push
data16
test
insb
mov
mov
pop
pusha
mov
jno
lds
push
cmp
dec
or
mov
nop
pop
add
cltd
test
arpl
lock
add
out
jle
push
imul
or
popf
and
lret
lds
jmp
xor
or
push
sbbb
jbe
fiadds
cli
jmp
hlt
int3
jmp
mov
shlb
mov
mov
adc
sbb
push
dec
mov
xchg
shlb
or
les
inc
vunpckhps
mov
stos
mov
mov
xchg
andl
sbb
jg
mov
inc
adc
push
mov
sub
mov
mov
fcomps
icebp
repnz
idivl
insl
nop
test
dec
jns
push
int
pop
mov
mov
out
das
mov
cs
subl
mov
repz
outsb
push
cwtl
sub
mov
ds
xchg
sti
mov
cld
lods
inc
outsl
push
dec
gs
jne
lret
cmc
adc
or
jb
pop
aas
inc
xchg
jmp
icebp
mov
mov
rcl
and
mov
jne
dec
and
iret
and
cltd
inc
push
add
jo
pop
mov
rolb
icebp
cmp
dec
test
fldt
mov
pushf
push
imul
out
mov
data16
push
adc
cmc
aaa
push
popf
mov
mov
inc
push
jle
nop
insl
lret
inc
cmp
bound
push
add
jmp
pusha
inc
dec
add
sahf
nop
xchg
mov
jnp
lods
xchg
test
cmp
fs
jo
sti
mov
sub
fbld
mov
xchg
ljmp
jae
aaa
mov
loope
adc
ds
cmc
movsb
je
imulb
std
mov
cmp
pop
arpl
in
cmp
ret
jb
mov
daa
xor
subb
fimuls
aam
xor
data16
aam
imul
iret
stos
pop
repz
push
jnp
std
movb
lret
stos
xorl
mov
shrb
adc
add
sub
fisubs
pop
lret
mov
dec
pushf
cld
mov
inc
xchg
and
sbb
and
ss
push
out
ja
add
jns
push
gs
mov
lock
ret
fmuls
repnz
cmp
test
test
mov
push
sti
gs
jl
mov
into
mov
into
ja
push
or
out
popa
ljmp
push
adc
xlat
je
arpl
adc
insb
popf
mov
push
mov
cld
leave
mov
lock
lcall
xor
rorl
xor
dec
inc
add
popl
xor
enter
data16
incb
andb
jb
mov
mov
ljmp
or
cld
imul
mov
std
adc
adc
jle
xchg
call
loope
jmp
jbe
lods
outsb
jnp
sub
inc
mov
mov
adc
jecxz
mov
dec
fidivrs
pop
dec
pop
outsb
push
mov
add
xor
inc
sbb
jmp
or
cld
inc
pop
inc
dec
inc
pop
sbb
aad
push
std
push
xor
mov
stos
popf
mov
xchg
fistl
out
dec
jne
subl
cmc
jns
cmpsl
adc
cmp
pop
in
sbb
sub
add
sbb
xor
xchg
and
ss
cwtl
mov
pop
and
iret
sbb
pop
sbb
stos
jmp
pop
testb
fsubrl
test
lea
cmp
push
ret
dec
mov
testb
mov
orl
push
jge
loop
xor
testl
iret
addb
mov
cld
cmc
add
jge
mov
mov
cmp
test
icebp
ds
lea
stos
adc
repz
jmp
inc
das
inc
xchg
lods
movsb
ret
rolb
or
shrl
dec
inc
mov
mov
arpl
insb
or
int
jb,pt
mov
or
stos
mov
ret
jo
pop
inc
sub
stos
xlat
insb
out
sbb
jb
pextrw
push
and
imulb
js
add
lods
lret
test
scas
inc
pop
out
inc
add
sub
fldcw
insl
stc
les
xchg
paddq
js
adc
mov
sub
addl
pop
cld
and
or
addr16
outsl
cmp
imul
scas
inc
ret
sbbb
xchg
mov
shll
test
sub
sbb
lea
mov
mov
xor
ljmp
bound
dec
std
in
hlt
bnd
inc
add
call
ret
xor
gs
data16
int3
jmp
rcr
loope,pt
push
jo
bound
push
mov
pusha
js
jo
mov
jmp
sar
cmpl
sti
mov
lcall
sub
sbb
arpl
dec
and
ficomps
in
lods
cmp
hlt
pop
mov
call
mov
mov
data16
lahf
scas
cwtl
adc
add
bound
jns
shrb
xchg
test
pushf
and
sub
xor
shl
add
cwtl
cmp
sub
pop
sbb
in
outsl
jp
xorb
gs
leave
pop
pop
add
or
ss
ss
add
loop
mov
aas
loope
mov
hlt
mov
and
add
shl
test
test
lahf
cs
mov
jb
arpl
xor
jae
jg
in
popf
sub
push
bound
sbb
dec
or
lahf
das
dec
div
repz
stos
pop
inc
js
scas
lahf
jae
repz
pop
cmp
push
mov
lret
jns
roll
out
pop
xchg
jne
insl
xchg
mov
iret
test
ss
push
push
cwtl
inc
sbb
cmc
je
les
int
mov
xor
lret
jns
cwtl
leave
lret
ud2
sub
lods
cld
test
cmc
cmp
push
out
xor
adc
ja
enter
sbb
or
jnp
divb
mov
call
sbb
pop
push
dec
pop
cmpsl
incb
mov
xlat
dec
and
lea
dec
and
shrl
add
cmpsb
cmp
cmc
rcll
jp
add
dec
xor
stc
ss
sbb
idivb
fnstsw
out
cs
jmp
pop
aad
loopne
cmp
cs
pop
add
adc
lcall
sbb
lods
mov
ljmp
shll
sbb
std
add
mov
fwait
into
push
pop
lret
data16
jne
loop
ja
xor
data16
mov
push
jnp
aaa
jecxz
rclb
mov
xor
fnsave
adcb
in
or
push
addr16
or
add
and
in
in
daa
jo
subl
mov
leave
mov
add
or
cmp
cli
lock
add
movsb
xchg
xorl
loop
insb
outsl
dec
add
mov
insb
clc
setge
pusha
jl
repnz
mov
pop
mov
xchg
dec
push
xor
test
call
icebp
inc
int3
push
pop
sarl
lock
cld
adc
cltd
adc
mov
pop
push
dec
outsb
mov
push
filds
ljmp
xchg
popf
xchg
adc
fcoms
mov
push
icebp
jb
cmp
cwtl
cli
ret
pop
jmp
lock
xadd
adc
pop
pop
orl
arpl
imul
test
push
sbb
xor
sti
pop
inc
int
nop
jg
add
ds
pop
outsl
aas
mov
jp
icebp
jb
pop
fwait
xchg
ret
insb
xchg
cmc
mov
call
test
rclb
inc
and
mov
and
lock
sub
hlt
sbb
and
and
lods
in
loope
sub
ficompl
dec
push
shrl
mov
or
les
and
scas
pop
xor
ss
in
jle
sub
fistpl
mov
int3
mov
lock
mov
rcl
andl
ja
rcl
out
es
and
rorl
ret
cmc
mov
ficoms
pop
push
das
gs
aam
icebp
movsb
insb
xchg
ljmp
testl
dec
jae
add
adcl
push
xor
addr16
addr16
adc
iret
ds
xor
mov
push
js
push
dec
mov
push
push
sahf
push
pop
mov
cmp
jo
adc
orl
in
sbb
pop
jns
scas
dec
mov
xor
lahf
lods
push
data16
add
aaa
mov
dec
test
adc
outsb
scas
sbb
cmp
dec
mov
push
jns
push
nop
test
int
push
push
jle
sub
ret
rorl
jg
xchg
lcall
lods
add
jmp
or
test
cmp
xor
xchg
loopne
in
cmp
mov
ja
in
test
fwait
cmpsl
stc
mov
inc
enter
in
push
hlt
mov
sahf
xor
sbb
cmp
pop
mov
ret
inc
pop
push
shlb
notl
fisubl
mov
ljmp
pop
aad
pop
pop
icebp
jns
push
orb
inc
sti
mov
push
xsave
clc
js
lahf
inc
shll
je
int
stos
mov
scas
mov
lods
jg
xor
xchg
push
cs
test
flds
aas
cmp
sbb
mov
or
push
mov
sub
les
mov
jp
test
stos
jo
sbb
lea
stos
adc
test
jp
pop
sub
lods
hlt
pop
int
ret
mov
lcall
hlt
mov
dec
mov
dec
pop
and
iret
enter
fcmovnbe
fst
push
leave
cmp
in
mov
cmpsl
push
shll
outsb
fcompl
outsl
popa
adc
mov
mov
lds
notl
shrl
xchg
add
push
pop
jae
jno
mov
aad
push
loope
lock
mov
enter
popl
inc
cmpsl
jo
cmc
into
push
js
xor
sub
mov
sub
repnz
pop
flds
lret
push
incl
jg
in
xchg
mov
pop
jmp
mov
add
mov
ds
or
push
stos
repz
mov
jg
pop
movsb
nop
dec
pop
aam
jne
dec
xchg
fistps
imul
jb
sub
cmc
nop
or
push
mov
sbb
push
sub
mov
pop
test
dec
addr16
add
mov
fldcw
jecxz
sub
test
or
ljmp
jns
xchg
sbb
sub
test
pushf
aas
stos
into
xchg
fisubl
mov
xchg
or
jg
fistpl
jmp
push
adc
dec
cltd
inc
or
sub
mov
add
imul
mov
sub
fstl
outsb
sbb
jae
cmpsb
leave
outsl
leave
mov
ja
lahf
push
mov
out
into
push
arpl
pop
divl
je
pop
sub
add
dec
jne
xchg
add
jp
sti
repz
dec
movsb
cmp
add
sbb
jb
mov
pop
insb
cmp
cmp
push
inc
stos
mov
sbb
sbb
sub
loopne
sub
leave
cmp
mul
mov
out
mov
xor
xchg
xchg
mov
sahf
call
push
pop
cmp
out
mov
add
dec
lcall
dec
addr16
stos
inc
out
add
gs
push
sub
inc
insl
cmp
loopne
movsl
mov
leave
repz
xchg
mov
data16
sub
add
sbb
cmpsl
out
call
xor
inc
test
cmc
lods
test
hlt
push
movsb
and
call
cmpsb
dec
pop
stos
and
add
adc
test
movsb
jle
xor
or
shll
testl
mov
adc
and
mov
mov
pop
sahf
push
cltd
xchg
and
notb
add
push
xor
or
stc
cli
pushf
aad
inc
jno
aaa
dec
cmpsb
std
ds
cmp
repz
loope
out
cltd
sbb
push
cs
ljmp
mov
and
cltd
pop
mov
les
call
popf
arpl
pop
add
ficoml
outsb
and
dec
inc
mov
pop
loope
cmc
enter
gs
mov
push
adc
pop
pop
sbb
sti
mov
sbb
mov
xchg
xchg
push
mov
add
pop
jno
sbb
std
sbb
rol
pusha
jg
add
mov
sbb
cmp
push
xor
cld
bndldx
dec
xor
in
dec
mov
push
int3
ret
sub
and
insb
push
or
je
cli
sub
rolb
pop
xchg
bound
xchg
testl
xchg
les
dec
push
hlt
shll
stc
fcoml
xorl
cmp
insl
gs
pop
test
mov
mov
ljmp
mov
icebp
or
inc
js
test
dec
out
dec
fisubrs
xor
subb
ja
fldl
pop
subb
scas
aam
jl
mov
jbe
inc
sbb
xchg
loope
rcrb
enter
ss
cli
jmp
pop
rcrb
pop
popf
mov
add
setno
or
xchg
fnstsw
mov
add
shrl
fsubr
jg
mov
imul
jnp
mov
pop
or
cmp
sbb
es
pop
imul
imul
sbb
jge
in
mov
inc
add
xlat
jae
push
lahf
js
and
pushf
and
stos
enter
loope
add
inc
mov
dec
jnp
sbb
or
push
jno
cmpsl
xorb
xadd
push
dec
inc
imul
jnp
add
jne
movzwl
jbe
adc
jp
xor
mov
jmp
and
inc
pop
lods
sbb
xor
add
sti
sub
push
and
add
ret
jle
lcall
adc
adc
data16
es
test
adc
insb
lods
jmp
cmp
cmp
arpl
mov
inc
mov
sti
gs
mov
pop
and
xchg
out
add
pusha
push
fsubrl
mov
cwtl
jae
mov
pop
dec
sbb
scas
jbe
int3
or
dec
and
lods
adc
test
push
mov
sahf
add
ja
sub
cmp
fdivr
les
xchg
cmp
loopne
xor
call
sbb
xor
movsb
icebp
lret
push
xor
lcall
dec
pop
rcrb
jle
je
mov
mov
enter
sbb
jnp
cmp
test
add
das
mov
shrl
sub
add
orb
mov
mov
mov
shl
mov
jnp
int
nop
cmp
hlt
jp
dec
pop
in
xlat
add
aas
jp
insb
sbb
or
pop
xor
cmp
xlat
imul
ja
repnz
ffree
or
movsb
mov
clc
cmp
and
jge
clc
fwait
push
icebp
jo
lret
dec
lret
add
les
push
xchg
cmp
mov
push
xchg
js
xor
imul
mov
lock
xchg
in
shl
sub
pop
aad
inc
enter
fs
std
mov
fdivs
icebp
les
testb
mull
push
outsl
dec
cmc
pop
int
jno
das
or
cmpsb
push
fldz
add
mov
out
pop
xor
jl
out
cs
or
adc
out
cmp
cmp
inc
enter
push
enter
decl
push
dec
push
or
mov
add
inc
out
cmp
mov
das
outsl
jmp
push
fsubr
sub
cwtl
cmp
fidivrs
into
outsl
adc
xor
xchg
sub
and
call
jns
stos
xchg
dec
xchg
gs
lret
or
aad
jle
ret
and
sarl
inc
push
push
bound
pop
inc
ret
mov
and
loop
pop
sub
dec
test
push
inc
cli
inc
jmp
movsb
shrb
cmp
bound
test
dec
test
shr
jmp
pusha
je
dec
cld
push
cmp
cmc
insl
out
inc
loopne
cmpsb
inc
test
scas
jno,pt
cli
fadd
rorl
and
insb
in
inc
outsl
adc
or
dec
mov
mov
nop
jl
out
mov
dec
insb
addr16
rcr
jmp
notl
comiss
movsb
and
jae
or
mov
adc
mov
fbstp
das
shlb
das
pop
dec
sub
sub
lcall
fdivs
testb
sub
inc
push
int3
cwtl
inc
mov
repz
dec
cwtl
or
push
test
add
push
sub
add
outsl
outsb
scas
test
or
xchg
mov
arpl
inc
mov
enter
cmp
ja
or
xchg
flds
imul
add
sub
push
cmp
aas
sbb
loop
shrl
sbb
mov
dec
inc
gs
sbb
repnz
bswap
aaa
mov
jge
in
jb
jl
mov
mov
movsb
rclb
jl
cmp
ljmp
pop
and
and
jp
nop
adc
lock
scas
fldt
xor
rclb
and
lods
mov
jecxz
adc
idivb
adc
sbb
nop
pop
jo
inc
add
adc
pop
adc
push
jbe
lcall
xchg
sbb
inc
mov
adc
out
mov
icebp
sub
inc
sub
sbb
test
fstps
dec
sub
sub
insl
push
inc
mov
or
data16
inc
cmp
pusha
dec
divl
mov
iret
and
mov
push
push
or
xchg
ljmp
in
icebp
mov
sub
movsb
lock
jo
mov
test
addr16
es
lock
pop
mov
jnp
mov
and
pop
add
mov
stos
sub
repz
cmpl
in
shll
addl
jmp
mov
jae
inc
mov
sbb
outsl
ret
aam
aam
shlb
shlb
aaa
or
cli
insl
sbb
adc
push
mov
mov
mov
insl
stos
repz
or
mov
jle
push
pop
pop
out
adc
jg
xchg
lret
push
loop
movsb
or
add
imul
push
std
insb
xchg
idiv
push
scas
leave
xchg
mov
dec
dec
adc
ja
enter
aaa
and
inc
cmp
dec
inc
arpl
and
or
testl
pusha
icebp
jecxz
js
push
xchg
cmc
push
jp
ss
mov
int
dec
mov
int3
add
xchg
and
jb
cmp
jbe
adc
push
mov
pusha
mov
dec
cld
jo
pop
jbe
test
jp
dec
or
out
leave
sub
ljmp
cmp
xor
xor
or
repz
test
movsl
outsl
pop
cmpsl
dec
shrl
mov
jg
aam
mov
mov
jo
adc
or
ret
cltd
dec
std
mov
dec
sub
sbb
mov
xchg
push
jl
iret
or
test
ljmp
jmp
out
xor
adc
sahf
out
leave
push
jl
mov
jb
push
pop
outsl
jb
and
aad
dec
mov
mov
add
xor
mov
or
and
std
jg
jg
lds
loope
add
or
and
insb
clc
repnz
fcomps
xchg
pushf
je
mov
stc
sbb
imul
rorb
or
stos
js
or
in
cli
jmp
or
bound
and
call
scas
fdivr
mov
push
mov
leave
lock
lret
sub
mov
pop
loop
add
lret
jl
and
dec
pop
push
sbbl
dec
and
lahf
out
mov
xchg
push
and
cmp
jg
not
pop
or
stos
in
addr16
cs
push
testl
jmp
cmp
dec
or
test
movsl
not
pop
icebp
mov
inc
adc
inc
aas
jge
scas
inc
jmp
mov
jle
ss
jmp
pop
lods
push
cmp
movsb
inc
pushf
out
and
jno
popf
movsb
insl
fchs
pop
add
mov
aas
les
in
in
adc
dec
cmp
mov
mov
pop
and
pushf
xor
push
int
cmp
aad
outsb
ss
jmp
movzwl
sbb
fcompl
and
aaa
push
xchg
pop
icebp
cltd
push
dec
shrb
lret
shrl
pushf
aad
sub
xor
push
and
dec
inc
pop
jmp
cld
enter
aad
stc
mov
mov
and
mov
js
jmp
aas
jae
xchg
pop
mov
or
or
jle
mov
popa
test
imul
and
in
pushl
adc
push
orl
lret
mov
negl
cmp
mov
sub
mov
fistps
xor
jmp
adc
fistpl
dec
lods
sub
dec
inc
dec
dec
std
data16
faddl
sbb
mov
add
int
mov
rolb
daa
fisubl
or
xorb
push
jecxz
push
xchg
imulb
cmp
and
fdiv
test
sub
hlt
xor
iret
jp
and
sub
leave
xor
xchg
and
sbb
dec
aas
int
or
push
mov
ja
add
adc
int3
jo
in
inc
xchg
pop
popf
out
push
sub
sahf
mov
hlt
mov
subb
cs
call
nop
xorb
cmp
lahf
pop
inc
popf
mov
sub
int
mov
inc
push
mov
inc
fiaddl
push
cmp
jge
int3
outsb
cmp
pop
call
lcall
stos
xchg
dec
repz
ds
test
or
jle
test
dec
xor
testb
jne
sbb
cmpsl
mov
mov
mov
negl
adc
pop
dec
push
sbb
mov
pop
sti
sbb
and
je
loop
out
call
shlb
or
sbb
lock
xor
mov
flds
lahf
push
mov
ds
inc
mov
adc
imul
mov
mov
mov
ret
jp
jnp
add
loopne
push
jp
dec
test
adc
push
xchg
pop
nop
adc
testl
jge
jbe
adc
push
divl
fldl
xchg
mov
add
daa
mov
mov
xchg
xchg
jno
xchg
ficompl
xchg
iret
fstpt
fmuls
test
mov
cld
aas
add
mov
lahf
jl
outsl
dec
popf
xchg
cli
inc
mov
lret
fstps
inc
hlt
jmp
and
cmp
or
test
add
cld
jbe
gs
shrb
mov
cmp
mov
js
mov
addr16
bound
mov
inc
jle
inc
dec
aad
jg
mov
mov
fwait
jge
dec
mov
sub
je
bound
bound
repnz
popf
jae
add
arpl
int3
shrl
adc
in
pop
shlb
mov
mov
leave
fdivr
pop
cwtl
xchg
outsl
mov
lock
lods
mov
mov
mov
mov
je
adc
jae
ret
cld
inc
cmp
lds
mov
inc
aaa
xchg
pandn
scas
jge
test
mov
lock
sbb
shrb
mov
jp
push
int3
rcll
push
pop
or
das
movsl
mov
test
xorb
loopne
adc
cmpsb
fadd
in
mov
dec
cmp
insl
adc
pop
push
loope
or
dec
leave
inc
jg
in
aas
sarb
dec
add
push
test
ffreep
sub
add
ja
ds
cmpsb
and
mov
test
in
mov
jns
fiaddl
es
xor
rorl
sbb
ljmp
push
xor
xorb
inc
inc
mov
repz
inc
repnz
adc
scas
jno
ds
sbb
lahf
xchg
sbb
cmpsb
push
das
fcmovbe
xor
lods
and
popa
mov
add
rcll
repnz
repz
inc
or
int
js
das
mov
mov
or
or
pushf
mov
aas
aas
xor
cwtl
cmpl
sarb
dec
mov
sahf
mov
xor
imul
adc
push
cmp
mov
pusha
pop
int3
dec
add
in
mov
mov
dec
test
sahf
ljmp
sar
sahf
mov
scas
inc
stc
pop
push
arpl
loop
or
pop
nop
jns
idivb
mov
cwtl
orb
adc
jbe
hlt
call
fbld
mov
mov
pop
les
aaa
js
or
insb
jbe
sbb
aam
imul
out
mov
adc
nop
mov
mov
out
dec
mov
insb
sbb
scas
movb
out
pop
jno
add
mov
and
sti
xor
push
jnp
adcb
in
mov
push
clc
sub
and
sub
imul
fwait
imull
dec
shll
xor
aaa
xorl
jo
push
gs
movsl
xchg
in
fcom
jbe
sti
fists
xchg
in
mov
inc
pop
cmp
test
mov
dec
jmp
in
xchg
hlt
xor
xor
orb
out
jmp
jb
cmp
mov
pop
jecxz
and
mov
jo
add
sbb
test
loop
movq
cmpsb
testl
dec
mov
sub
mov
mov
fadds
leave
and
add
push
sub
insl
add
in
popa
roll
std
fs
in
out
sub
pop
test
insl
and
imul
dec
sub
add
sub
cld
sub
fcmovnb
mov
shrb
sub
pop
scas
bound
in
ja
or
mov
push
mov
xlat
xor
rclb
insl
adc
xchg
int
fnstcw
loop
lcall
inc
mov
dec
mov
lcall
call
pop
movsb
or
cli
adc
sbb
mov
jbe
jp
lahf
fldt
mov
fisttps
cwtl
push
das
or
sti
mov
cmp
mov
and
sbb
ret
jmp
scas
jno
aam
push
pop
aad
jno
mov
xor
fwait
popf
mov
les
aad
mov
adc
js
stos
adc
jle
dec
cmp
lcall
push
repz
sbb
dec
pop
cmp
xchg
rcr
test
jmp
xchg
sub
das
adc
or
mov
es
cwtl
out
and
and
jo
sub
mov
inc
inc
je
repnz
jns
add
xchg
mov
fsubl
mov
pop
scas
fcoml
in
jecxz
inc
jecxz
dec
jl
outsl
movl
or
push
gs
fcmovu
dec
mov
outsb
dec
in
xchg
mov
loop
mov
int
mov
lods
out
cmpsb
icebp
pushf
dec
inc
dec
jle
push
enter
xlat
inc
mov
lcall
adc
enter
adc
xchg
clc
or
testl
lea
cmp
mov
mov
jge
pop
aas
js
lahf
jmp
jle
out
push
sti
cmp
adc
pop
adc
cmp
push
mov
std
jg
mov
jg
xchg
jbe
daa
sub
and
xchg
adc
loop
jl
cmp
lds
add
sbb
test
inc
imul
sbb
fsubrl
push
out
shl
push
xchg
push
push
sti
mov
or
jecxz
out
xor
mov
xor
fs
fs
sub
and
push
sbb
jle
cmp
inc
inc
cmp
pusha
and
push
movsl
outsb
ja
mov
cmpsb
cltd
insl
dec
jge
jno
inc
cs
cli
sub
lfs
and
sbb
mov
clc
mov
inc
adc
fwait
jno
ficoml
xor
popa
jecxz
jp
repz
icebp
mov
out
inc
pop
insl
adc
and
adc
faddp
or
push
sub
sbb
mov
sub
imul
xchg
sub
xor
mov
xor
xlat
test
push
lret
sbb
in
inc
repz
dec
sub
fs
mov
icebp
and
and
adc
pop
es
clc
sub
mov
jle
pusha
pop
in
repnz
stos
xor
sbb
jmp
or
lret
ja
cmp
stc
imull
xor
bnd
mov
mov
fucomp
aaa
je
mov
jns
dec
xchg
sbb
pop
sub
lea
push
repnz
in
lahf
lahf
sub
arpl
mov
insb
xor
sti
pushf
and
es
mov
dec
jle
xor
inc
dec
scas
cmp
inc
xor
jne
stos
xorb
cs
mov
mov
add
test
mov
outsb
xchg
pusha
sub
ficoms
paddsb
mov
and
aad
iret
add
out
lds
xor
or
jmp
or
fstpl
icebp
or
inc
ret
pop
aad
stos
daa
mov
mov
outsl
xor
arpl
mov
sub
andb
cmpsb
jns
dec
enter
into
sbb
jno
push
jbe
mov
pop
inc
pop
and
lods
or
jno
in
inc
cmp
xlat
pop
mov
lret
fistl
pop
rcrl
imul
aam
or
scas
subl
int3
adc
push
jmp
insb
dec
test
jp
cmp
std
aaa
xor
lods
cltd
xchg
icebp
adc
adc
sarl
not
rcrl
xchg
gs
lret
in
mov
hlt
push
jae
dec
push
sbb
lcall
aaa
adc
clc
popl
orl
lds
add
insl
push
cwtl
into
test
out
cmp
mov
lock
and
and
and
mov
push
pop
shrb
fldcw
cmp
out
pmaddwd
insb
lahf
in
movsl
fiaddl
jl
fidivl
sub
xrelease
mov
shrb
out
je
jbe
pop
subl
in
js
lcall
das
mov
pop
pop
push
ret
cmp
sub
cmp
test
sbb
jne
cwtl
inc
out
xor
inc
insl
push
fwait
addb
xor
fistl
test
mov
xor
out
mov
iret
xchg
and
mov
xchg
cmp
xor
push
aad
dec
cltd
mov
imul
call
aam
out
bound
xchg
push
mov
sahf
push
aaa
push
aaa
out
aad
pop
ss
test
or
fimuls
hlt
stos
shll
call
je
bound
cli
lret
dec
xchg
sysenter
mov
fsubr
sub
sbb
andb
sbb
icebp
mov
dec
xlat
cwtl
mov
lods
repz
mov
sbb
push
repnz
lcall
push
push
ds
sqrtps
jl
out
add
or
xor
mov
add
mov
je
pminsw
sbb
scas
ret
cmpsl
inc
adc
cmp
jb
nop
adc
adc
add
pop
in
xchg
pop
dec
lods
fisubrl
xor
push
insl
sahf
xchg
jne,pt
push
and
popa
push
outsl
cli
imul
rclb
dec
ja
cmpsl
adc
sub
sub
lcall
mov
je
mov
mov
add
xlat
and
lcall
sbb
adcb
aad
iret
mov
int3
mov
insl
js
out
xorb
lds
add
sbb
jbe
inc
lea
mov
outsl
lret
std
push
sub
fcom
test
call
nop
leave
add
rolb
es
pushf
mov
les
sti
add
stc
or
aas
and
mov
testb
mov
rol
add
int3
bound
sahf
mov
insl
and
ficoml
mov
mov
and
mov
mov
xchg
and
sbb
xchg
mov
divb
loopne
pop
mov
insl
xchg
mov
out
insl
xchg
dec
sarl
and
mov
xor
fnstcw
out
rcrl
sub
test
leave
stos
cwtl
std
outsl
push
fcomi
xor
aas
add
cmpsl
adc
scas
scas
sub
int
out
push
and
fs
pop
sub
lock
stos
int3
add
push
stos
add
sti
push
les
dec
je
cmp
mov
repnz
mov
mov
repz
ljmp
cmc
lahf
pop
pushf
sub
movsb
clc
test
jno
clc
int
ds
cmp
ret
aas
xchg
shl
mov
sahf
xchg
cmp
movsb
ret
dec
je
call
and
sub
cltd
jns
mov
sub
shll
sub
test
icebp
sub
add
inc
dec
and
lret
jns
lret
loope
mov
mov
scas
inc
xchg
in
lock
push
decl
xor
sbb
or
imul
xchg
sub
nop
inc
testl
or
pushf
push
test
add
cmp
dec
jg
int
push
push
scas
mov
aas
or
xchg
jmp
sahf
mov
mov
mov
xchg
adc
push
repnz
loop
mov
adc
das
and
lret
loop
stc
in
mov
or
adc
flds
loopne
mov
and
xchg
sbb
daa
fildl
push
cmp
dec
xor
mov
add
sub
fld
push
mov
dec
cwtl
xorb
lret
mov
pop
test
nop
or
call
sbb
or
arpl
mov
push
lods
pop
popf
pop
dec
and
dec
idiv
stc
xchg
stos
pushf
stc
or
mov
jmp
lods
testl
test
jle
pop
jb
or
xor
xchg
arpl
cmp
push
push
pop
lretw
sub
sbb
pop
lcall
xchg
aad
sub
call
stc
idiv
hlt
lock
addr16
mov
lods
and
mov
mov
cmp
int
in
add
mov
loopne
mov
push
jl
dec
mov
push
stos
dec
dec
in
rorb
ss
mov
jns
gs
or
mov
mov
jge
inc
dec
insl
pop
int3
and
test
mov
push
pop
fadd
cli
inc
mov
mov
mov
xchg
push
xchg
sbb
cmc
lock
es
std
dec
inc
add
mov
shlb
hlt
xchg
xorl
cld
jg
in
jge
jae
insb
add
fildl
divl
or
xchg
aad
in
and
fsubrs
andl
push
add
xor
bound
adc
arpl
test
aad
shl
mov
dec
push
push
cmpsb
ss
test
dec
mov
scas
mov
imull
mov
inc
mov
mov
int3
repnz
mov
vcmpss
popf
sbb
mov
xchg
stos
ret
xchg
push
dec
stos
stc
inc
inc
sub
xor
mov
sub
in
push
pop
or
in
imul
cmpsl
stos
ret
push
ljmp
push
test
add
cli
andb
ds
fisttps
push
outsl
test
adc
inc
cltd
loope
enter
jle
loopne
mov
xor
negb
hlt
jae
pop
cltd
mov
lret
mov
add
cmp
outsb
mov
notb
subb
push
aaa
into
push
xor
enter
rolb
lcall
xchg
xchg
mov
push
aam
out
test
push
jne
xor
icebp
sub
std
into
mov
imul
fdivr
mov
stc
test
imul
int
or
cwtl
mov
push
out
add
pushf
sbb
loopne
xchg
int
or
add
mov
iret
sbb
xor
in
dec
nop
out
or
pop
dec
mov
or
lods
sbb
or
les
mov
xor
push
rolb
lcall
sbb
mov
nop
pop
xor
xor
xchg
mov
mov
and
sub
adc
or
lock
gs
ret
lods
jmp
sti
mov
lea
stc
imul
out
pop
mov
jnp
or
test
push
pop
dec
into
xor
sti
daa
mov
or
fistps
rorl
jno
pop
stc
jno
out
jnp
xchg
outsl
xor
xor
push
jb
mov
or
divl
std
cmc
fisubs
xchg
jl
addr16
ja
inc
xchg
rcrb
xor
xchg
pop
dec
cmpb
push
push
clc
addr16
loope
lahf
and
outsl
mov
sub
xor
pop
pop
sbb
ljmp
mov
push
mov
cmc
fdivs
jne
enter
out
cmp
mov
mov
addl
sub
pusha
mov
fsubrp
xchg
jp
xchg
enter
pop
mov
and
sub
lret
lahf
xlat
sahf
into
dec
add
jp
mov
lret
and
loop
test
shll
fidivrl
mov
and
pusha
add
inc
pop
inc
mov
std
mov
mov
mov
xchg
jecxz
cs
mov
sti
and
andb
xlat
dec
out
cmp
add
sahf
scas
push
shlb
or
mov
mov
mov
out
xchg
and
lahf
enter
jb
imul
mov
jge
push
mov
cmpb
ja
and
cmp
cmp
dec
adcl
jb
sti
mov
loopne
push
push
adc
sub
test
cli
xor
notb
lods
sub
or
aad
push
pop
push
mov
pop
mov
pop
sbb
and
sbb
gs
icebp
jecxz
fbld
orb
fwait
pop
mov
outsl
mov
jecxz
mov
cmc
pop
mov
cli
dec
jp
cli
jno
aam
cmp
jge
loopne
sahf
jg
adc
push
adc
cmpsl
out
dec
insb
jmp
call
fistpll
les
pop
mov
loopne
iret
jge
jnp
ljmp
pop
hlt
xchg
push
cwtl
jp
push
imul
cmpsb
jbe
dec
pop
inc
mov
dec
fstpt
daa
sbb
sub
jge
dec
pop
add
cltd
hlt
mov
enter
stc
mov
fnstenv
cmp
repnz
dec
jb
in
or
lods
pop
inc
mov
dec
movl
daa
pop
mov
arpl
mov
cmp
incl
cmp
sbb
cmp
test
adc
mov
sub
mov
cmpsb
inc
roll
mov
lock
aas
stc
insl
sbb
rorb
dec
iret
rclb
adc
pop
jl
add
cs
call
and
sub
mov
leave
jmp
nop
pop
pop
pop
js
xchg
xchg
cmpsb
adc
test
and
iret
outsl
push
dec
push
popf
gs
or
add
dec
cltd
pop
push
or
loopne
in
je
lret
fimull
aad
sbb
clc
outsb
arpl
repnz
scas
enter
imul
fisubrl
inc
sub
add
aaa
daa
lods
jns
add
out
ljmp
xor
filds
or
pusha
inc
push
dec
xchg
hlt
sahf
mov
lea
movsl
mov
clc
inc
lea
shll
pop
sub
push
mov
data16
jne
pop
or
outsl
lea
imul
out
pop
inc
push
push
out
and
movsb
mov
cmp
and
cmc
and
aas
sbb
jno
xor
jp
mov
push
xor
add
mov
inc
pop
fwait
stos
cmp
lret
sub
cld
nop
stc
pop
lret
xchg
and
adc
push
push
rorb
scas
ret
mov
in
negl
cld
sub
jb,pn
lcall
push
jmp
cmp
popf
pop
popa
repnz
adc
xchg
lods
imul
rcrb
in
out
sbb
aam
movsl
cmp
sub
cld
jns
cmc
sub
xchg
jae
mov
loopne
mov
jbe
and
lret
push
ljmp
cltd
popa
mov
insw
iret
mov
mov
xchg
add
cmpb
lret
sbb
cwtl
lock
mov
ret
push
jae
notb
inc
aam
sub
and
cmp
push
adc
inc
aas
pop
stos
sub
and
shll
int3
lock
xor
xor
stos
rcll
cld
inc
dec
or
push
popa
push
int3
mov
adc
dec
dec
push
inc
daa
pause
inc
test
ja
cmp
addr16
aad
fcmovu
out
xor
ret
and
jnp
jns
repz
cltd
xor
inc
mov
or
xor
cmpsl
inc
adc
repnz
cs
fs
and
daa
mov
lock
insl
je
jmp
jmp
pop
shrb
call
jns
push
addr16
shll
int3
xchg
bound
xor
rolb
sub
dec
push
loop
hlt
cltd
stos
sbb
sbb
push
pop
mov
mov
in
out
lret
dec
gs
mov
shll
sub
in
ror
pop
subl
scas
pop
pop
cld
jne
cmc
stos
xchg
mov
je
fdivrp
dec
cmpsb
add
or
into
test
xchg
pusha
gs
int
enter
cmp
pop
adc
push
inc
add
jge
xchg
popf
lock
imul
lods
in
fisubrs
push
pop
pusha
daa
mov
mov
cmp
out
pop
ret
add
push
ljmp
or
aaa
mov
or
mov
xor
xchg
sti
inc
xchg
adc
mov
mov
mov
fs
fdiv
xor
mov
mov
hlt
lret
fnsave
shlb
insl
jge
sub
push
cmc
icebp
inc
dec
clc
sahf
adc
inc
pop
jg
enter
pop
adc
in
pop
loop
adc
aaa
fsubp
scas
jne
mov
ja
inc
add
ret
cmp
sbb
testl
inc
jno
inc
pop
cld
pop
jmp
cmp
enter
orl
pop
mov
std
cmpsl
sbb
xchg
pushf
stos
push
loopne
xchg
add
mov
sbb
inc
test
faddp
push
adc
xlat
test
jp
add
cmp
mov
mov
jno
jecxz
mov
aas
clc
arpl
sbb
xorl
in
xchg
cmovs
les
ret
adc
mov
in
or
lcall
incl
movntps
shll
fcompl
sub
in
jp
mov
cmp
push
les
adc
ss
cmpsl
fistpl
cmpsl
inc
xor
fnstenv
cmp
int3
cli
and
int
rcll
xor
stos
xchg
sub
inc
sbb
rcrl
in
mov
bound
sti
fs
and
popf
sbb
mov
push
xor
add
mov
aad
aas
jge
mull
pop
dec
mov
out
pop
popf
mov
cmp
push
std
std
xchg
adc
addb
xorl
mov
divl
mov
jbe
enter
cmp
stos
cwtl
pop
adc
mov
adc
inc
mov
xchg
std
cmp
es
jo
stc
xchg
or
ficoml
popa
and
mov
or
and
jae
rolb
mov
pop
addr16
sub
mov
dec
out
les
add
imul
movsb
repz
fsts
sbb
mov
outsl
hlt
fidivs
jae
or
dec
outsb
ficoml
jge
jle
fmul
clc
lock
popa
out
pop
lds
orl
mov
dec
push
sub
fadds
xorb
xchg
popa
mov
xchg
test
pop
js
into
mov
je
insl
out
mov
inc
std
adc
or
lcall
aam
jo
fisttpl
test
dec
and
fdivrl
jge
jmp
jnp
pushf
mov
ret
mov
add
fbstp
rsm
pop
movsb
lret
push
and
stos
jmp
push
jb
stos
and
int
icebp
sbb
adc
es
in
imul
cmpsb
mov
mov
fucom
dec
add
outsb
or
pop
mov
dec
les
xlat
aaa
popf
cmp
mov
cmpsl
fimuls
sub
sbb
xor
hlt
mov
or
cltd
ljmp
push
and
mov
popa
xchg
push
jl
push
notb
cmpsl
insb
sbb
and
mov
pushf
push
rolb
lahf
push
frstor
mov
aam
or
add
orb
dec
jge
rcrb
xchg
gs
pop
inc
push
movsb
rol
in
push
mov
push
addr16
push
test
sbb
ret
mov
pop
cmc
xor
test
test
fidivrl
insb
and
fstpl
inc
and
xor
jle
mov
push
enter
pop
sbb
mov
adc
mov
movsl
mov
rcll
xrelease
jle
js
xchg
mov
inc
sahf
dec
das
das
jl
sub
les
pusha
les
popf
pop
jo
sub
and
sub
xchg
aam
mov
xchg
dec
in
mov
dec
scas
aad
fdivl
aad
pop
push
sub
psubsb
pop
cmp
push
std
dec
push
test
or
xor
jp
cs
imul
iret
lret
xor
mov
stos
pop
sbb
sbb
sbbl
mov
jno
lcall
ret
movsl
push
add
notl
fwait
xor
xchg
icebp
sbb
ret
testb
mov
negb
xorb
loop
loope
inc
dec
cmpsl
sbb
mov
aaa
sub
push
ret
sbb
adc
ss
rolb
aaa
and
jnp
dec
shrl
lret
js
fwait
jmp
mov
cmp
cltd
int
mov
fcompl
jae
mov
inc
je
movsl
push
and
addr16
lods
outsb
lahf
mov
ds
repz
call
pop
jns
outsl
pop
adc
push
pop
mov
outsb
lods
push
hlt
loopne
dec
dec
inc
out
adc
dec
and
cmp
lret
icebp
lods
addr16
dec
mov
inc
out
dec
aaa
cmpl
add
sti
lcall
cli
shlb
imul
movsb
popw
cs
jne
and
mov
mov
lods
lds
cmp
xchg
clc
push
fiaddl
mov
repz
xchg
push
fldenv
sbb
rorb
pop
std
cmp
and
push
mov
mov
nop
js
pop
lcall
ljmp
and
push
mov
or
es
stos
mov
insl
mov
xchg
sti
lret
cwtl
and
fcoms
cmc
lret
mov
inc
jge
test
mov
inc
repz
dec
sub
xor
jb
stos
scas
push
in
xchg
into
jle
fld
push
je
fidivrl
jns
addb
lods
sarb
arpl
xchg
mov
jmp
pop
cmc
out
cmpl
dec
pushf
lahf
shlb
sti
jae
or
lods
test
in
push
and
xchg
out
sub
test
fwait
mov
ss
rolb
push
outsb
je
lret
inc
mov
inc
and
add
dec
mov
dec
xlat
cmp
mov
hlt
xchg
mov
shl
repnz
push
cmp
int
xor
sub
cmp
test
jp
imul
sbb
outsb
cmp
aaa
out
sbb
lcall
or
cmp
dec
mov
jne
adc
lret
mov
xchg
cmp
jmp
ja
cmc
stos
sahf
cltd
cs
loop
fxch
scas
mov
fsts
pop
push
pop
mov
push
xchg
pushf
cmp
mov
jns
mov
movups
stc
jb
outsb
fwait
jno
push
ret
ficoml
aas
lahf
fucom
dec
lock
dec
dec
stos
dec
das
and
xor
xor
pop
out
or
cmp
push
leave
in
cli
fsubrl
jne
inc
pop
inc
mov
adc
fs
call
and
inc
shll
xchg
hlt
xchg
stos
fistps
es
xor
adc
insl
pushf
adc
into
or
repnz
cmp
shr
aaa
xchg
dec
sub
pop
adc
lods
push
mov
inc
push
jl
mov
loopne
xlat
dec
pop
imul
movsb
stos
leave
std
cltd
adc
sub
mov
and
jb
add
mov
int
sbb
and
cmc
imul
push
cmp
dec
pop
shl
movsl
out
xchg
jns
sbb
inc
ret
cmpsl
rolb
sub
adc
dec
mov
dec
add
sbb
or
xchg
ss
lret
addr16
stc
in
jge
jae
jbe
out
jae
aaa
jae
jl
aad
pop
popf
push
push
add
sbb
movsl
push
jmp
psllw
xlat
enter
jecxz
mov
cmpsl
jnp
subl
sbb
mov
mov
setne
mov
test
pop
xchg
dec
mov
ljmp
sub
imul
jge
push
sbb
jle
sbb
popl
and
test
and
mov
sbb
xor
push
rclb
orb
mov
ds
rclb
loop
sbb
loope
movsl
add
sahf
pushf
fmul
sub
push
xchg
in
xchg
or
adc
cli
cli
dec
loopne
jp
xlat
xchg
insl
lret
pop
pop
sub
mov
or
sbb
inc
sahf
in
mov
jg
adc
inc
sub
ja
cwtl
inc
sti
insb
stos
daa
je
insb
xchg
xor
mov
mov
rolb
hlt
jmp
mov
push
fldt
inc
sub
pop
dec
sub
ljmp
pop
add
aaa
es
aaa
scas
stos
cmpl
sahf
push
insl
rclb
adc
sbb
enter
inc
rclb
jae
adc
sbb
enter
out
in
lret
das
cmp
cli
dec
add
and
out
jns
sbb
lds
mov
ret
dec
xlat
roll
mov
and
xor
inc
mov
lock
jno
out
mov
loopne
addb
in
out
and
lcall
and
je
adc
add
inc
lds
xchg
mov
jne
aaa
pop
popf
fildl
push
aam
pushf
mov
jle
adc
cmp
add
push
pusha
sub
das
test
in
push
sub
jecxz
mov
mov
insb
push
sub
mov
rorl
cmp
mov
fidivl
stos
sbb
inc
imull
inc
popf
aad
sbb
lds
mov
cmpsl
aas
jns
movsb
in
mov
ja
jmp
jge
push
bound
ljmp
fsubl
scas
xlat
jo
rcll
xchg
div
ret
call
in
jb
in
mov
mov
pop
outsl
stos
pop
lahf
bound
mov
pop
dec
mov
inc
xchg
fsts
fisttps
xor
in
jmp
stos
push
cwtl
jmp
hlt
xchg
out
popf
sub
mov
inc
pop
loop
pop
bound
mov
and
aad
jge
push
cmpsb
lcall
push
mov
cmp
std
jge
icebp
mov
pushf
mov
scas
xchg
xor
insb
mov
mov
test
pop
xchg
sbb
cmp
nop
fnsetpm(287
push
mov
int
inc
es
les
add
or
xchg
add
cs
mov
pop
and
pop
lahf
mov
call
sub
cmp
daa
push
adc
sub
aam
test
mov
jne
dec
jno
xor
xchg
mov
mov
sbb
aam
lahf
cmpsl
push
aaa
pop
jge
and
iret
inc
in
cmp
pop
cmpsl
and
pop
xchg
jg
xlat
push
test
xchg
inc
xchg
ret
push
add
hlt
test
inc
sub
ror
cmp
pop
decb
push
adc
cltd
fsubr
and
mov
jle
pop
stos
mov
mov
pop
daa
cmp
inc
ds
and
idiv
mov
movl
fcmovb
jle
sbb
dec
mov
add
roll
jbe
rorb
or
add
or
fistps
rolb
out
mov
loope
mov
fdivrs
or
inc
cmp
or
outsl
in
inc
das
xor
lods
gs
lret
in
les
cltd
and
pushf
int3
mov
cwtl
add
lods
xor
idivb
cmpsl
dec
sub
fucomi
test
ja
jb
test
mov
push
fcmovne
outsb
bound
test
dec
test
pcmpgtb
test
outsb
fidivrl
inc
inc
push
call
popw
cmpsl
gs
mov
std
push
push
mov
sub
mov
fs
dec
dec
mov
in
adc
rcrl
sub
mulb
push
jbe
sub
dec
sbb
and
daa
xchg
mov
sahf
sbb
fistpl
jne
scas
cmp
mov
sbb
data16
fs
mov
sbb
jbe
ljmp
and
or
cmp
rcrb
leave
pop
sbb
int3
inc
das
call
sbb
pusha
adc
inc
jge
inc
cmpsb
rclb
jne
pop
and
adc
adc
adc
add
mov
xchg
and
popf
stc
lock
xchg
ss
pop
ss
cmp
icebp
xor
mov
ds
rcrl
cmp
aas
jb
xchg
aam
sbb
in
mov
add
mov
cltd
pop
xchg
cmp
scas
push
lods
mov
lret
cmpsb
je
pop
jns,pn
pop
neg
cmpl
push
mov
mov
dec
cmp
cmp
mov
daa
outsl
push
adc
cmp
push
test
mov
mov
sbb
adc
mov
mov
jb
mov
add
mov
jp
notl
xchg
push
hlt
xor
jl
jl
pop
xchg
stc
addl
nop
sub
jl
lds
push
cmp
adc
pop
imulb
das
pop
sbb
pop
mov
cmp
int
sbbl
jp
ja
mov
sub
fcomp
mov
je
dec
pop
xchg
movsl
std
mov
jb
test
or
aam
jge
shll
lock
sbb
push
xor
xchg
push
inc
ja
sbb
outsl
sbb
fwait
mulb
mov
fs
pop
pop
mov
xorb
fsubs
aam
int3
xchg
mov
pop
pop
test
xchg
daa
lahf
xchg
ja
jnp
repnz
xchg
inc
addl
outsl
mov
and
pop
dec
cmp
ja
cmp
jo
xchg
mov
inc
dec
cmpsl
xor
push
sahf
xlat
adc
stos
sbb
and
pop
jo
push
mov
or
les
jne
nop
fdivs
insl
fnstenv
mov
test
sbb
push
mov
unpckhps
sbb
mov
shrl
pop
in
fisubs
add
mov
sub
mov
adc
mov
inc
sub
lods
xchg
int
pop
xlat
ds
push
cmp
mov
test
mov
ret
xchg
ficomps
loope
loopne
stc
data16
cmp
push
gs
aam
fdivl
adc
jb
pop
daa
filds
sub
push
sub
xlat
dec
adc
lahf
inc
arpl
mov
xor
mov
push
jge
pushf
out
jp
pop
in
mov
mov
ljmp
lods
rcr
add
add
lods
lods
mov
fucomp
aaa
pop
outsl
nop
outsb
int
pop
sbb
adc
inc
cmpsl
andb
stc
add
fwait
push
lahf
dec
out
shlb
sub
repz
add
jo
bound
mov
outsl
dec
lds
jp
cltd
cmp
adc
sub
sti
fwait
xor
aad
fldt
movsb
and
cmc
loopne
or
loop
xchg
xchg
invlpg
inc
les
ss
pop
pusha
fldt
push
pop
into
shrb
test
jg
in
neg
dec
or
inc
mov
mov
stos
or
xor
ret
into
push
insl
ret
mov
cltd
test
sub
ds
lea
pop
movups
popa
mov
xor
push
negb
mov
jnp
int
repz
inc
les
sbb
adc
push
jns
dec
add
add
fsubrp
fsubl
xor
sar
int3
dec
mov
repz
add
xor
pop
and
jne
nop
decl
jg
mov
popf
movl
repz
pop
fsubrs
ret
xor
stos
cmpl
cmp
dec
xor
ret
dec
clc
fnsave
pop
cmp
push
xor
test
mov
pop
hlt
jno
mov
sbb
cmc
jl
cmp
adc
jle
push
aaa
arpl
xor
push
xchg
mov
lcall
lds
cmp
fisttpl
rorl
mov
sahf
inc
shlb
incl
repnz
imul
nop
and
jns
jg
inc
cmp
pop
cmp
in
mov
movsb
pop
jo
fbld
loop
in
sub
test
lret
imul
xchg
jae
repz
xchg
dec
inc
outsb
adc
stos
cmpsl
lods
sub
arpl
xlat
push
fdivrp
fisubs
pop
sub
xchg
jne
mov
xor
mov
dec
int
sbb
push
mov
and
cld
jge
mov
rorb
daa
mov
push
mov
test
sbb
jl
andl
mov
gs
loop
mov
inc
mov
aam
xor
cmp
xor
pop
dec
ficompl
pop
mov
loope
jns
stos
and
lahf
roll
repz
and
and
jg
nop
add
aad
xlat
fwait
lea
push
pop
mov
imul
jo
xor
sbb
mov
fcomps
cmpsb
loopne
lods
inc
dec
mov
mov
out
sbb
cmpsb
lea
out
inc
push
push
inc
aam
mov
or
add
push
out
outsl
inc
and
push
subl
jmp
test
loope
pop
insb
inc
mov
ror
sbb
sti
mov
inc
mov
inc
sahf
ja
faddl
xchg
push
cmpsl
push
and
pop
jbe
daa
imul
out
fwait
iret
adc
xor
mov
lret
push
adc
dec
sbb
aaa
xchg
add
pop
shl
jg
data16
ljmp
dec
cli
inc
jmp
and
add
dec
or
in
dec
lods
and
dec
mov
push
test
mov
dec
add
call
and
bound
add
push
xchg
cmp
xor
daa
push
aad
cmpsb
lods
jo
aam
nop
mov
sbb
out
ret
stos
in
mov
or
pop
adc
and
in
mov
push
xor
leave
xchg
dec
int
mov
inc
iret
pop
arpl
mov
aad
cmp
inc
inc
mov
cmp
cmp
insb
mov
pop
gs
jnp
mov
sbb
loop
or
fwait
xor
fsubr
sbb
rclb
pop
jo
xchg
sub
sarl
pushf
xchg
test
sub
outsl
or
loop
pop
jg
or
adc
bound
jbe
mov
xlat
sbb
rcl
fdivrs
rolb
insb
jo
rolb
jne
addl
xorl
add
pop
push
and
fs
xchg
int3
jbe
lods
aaa
arpl
sub
in
adc
or
xor
inc
inc
cwtl
pop
pshufw
sub
and
rcrb
fwait
iret
in
jge
popa
inc
das
orl
inc
xor
in
mov
fwait
pusha
lea
cmpsb
in
iret
lret
js
adc
icebp
jge
sbb
jnp
mov
imul
shl
pop
xor
std
loop
pusha
adc
and
fiadds
insl
sub
mov
add
xor
arpl
and
jge
mov
adc
push
dec
or
mov
sarl
dec
mov
nop
das
pop
mov
jp
add
or
insb
testl
fiaddl
arpl
mov
in
nop
push
inc
test
scas
dec
outsb
and
outsb
push
xor
xchg
test
stos
addr16
push
and
cld
inc
bound
hlt
das
pop
aad
adc
mov
adc
cmc
lods
scas
sbb
int
cmp
and
adc
jge
add
pop
stos
cmc
mov
mov
rorb
sarl
fisubs
and
xchg
mov
or
lods
push
mov
mov
fdivrs
ret
and
in
jo
popf
pop
mov
lds
inc
arpl
cmpsl
in
lods
decb
scas
pop
xor
lock
sti
movsb
cmp
jae
adc
ret
or
and
jecxz
adc
jmp
cmpsl
pop
sbbb
jp
cli
push
and
es
sbb
ret
or
mov
aas
jge
cli
mov
movsb
ds
cmp
fsubrs
or
lock
stos
clc
out
int3
pop
std
jp
ret
sbb
fdivp
mov
push
lods
in
pusha
pop
add
cwtl
stos
mov
push
addl
mov
push
movsb
and
xchg
sub
jge
sub
shl
push
lret
cmp
cmc
ret
stos
push
mov
cltd
sub
gs
icebp
dec
ret
icebp
mov
cmpsl
daa
xchg
mov
nop
dec
add
mov
mov
pusha
outsl
das
pop
iret
aaa
aaa
adc
xorl
pop
xchg
fistl
cwtl
out
enter
sub
jns
movsl
push
loop
add
jge
out
cld
sub
outsl
js
jge
lock
inc
repnz
xor
scas
push
in
sahf
push
pushf
inc
pushf
imul
test
xor
add
add
int3
leave
inc
and
sbb
ds
cs
aaa
inc
ljmp
mov
mov
jmp
rcr
pop
imul
sbb
push
in
test
fldt
loope
mov
sbbl
xchg
sar
negl
shl
xchg
cs
xor
repz
addb
push
pushf
xor
cmpsb
aam
push
in
cmpb
das
xchg
pop
inc
loop
daa
test
jge
aas
dec
push
aad
or
mov
cmpsl
test
test
dec
enter
lahf
incb
dec
orb
je
jb
in
scas
sbb
xor
jae
repz
rcrb
sub
dec
out
pop
mov
and
sub
adc
push
and
icebp
cli
push
cld
sbb
lret
adc
inc
mov
mov
stc
cltd
mov
pop
sahf
dec
pop
mov
push
pop
adc
dec
test
movsl
mov
scas
pushf
sbb
daa
mov
push
jmp
lods
sbb
rclb
xchg
mov
cmp
or
cmp
sbb
rcrl
xchg
icebp
sti
pushf
in
into
mov
and
pushf
mov
jecxz
psrlq
jo
in
xor
cmp
outsl
mov
imul
pop
stos
stos
fistps
adc
mov
push
inc
test
sbb
and
adc
iret
mov
shlb
xchg
in
mov
mov
out
pusha
add
shrl
adc
sub
pop
xchg
cli
jo
pusha
cmc
fmul
sbb
lret
bound
mov
push
push
lods
cld
test
pop
cli
mov
clc
or
dec
inc
cmp
and
mov
sub
jge
testl
insb
mov
mov
mov
xchg
test
add
xor
dec
adc
push
cmp
sub
mov
test
sbb
push
addr16
int3
push
aam
fisttpl
push
test
in
push
std
ljmp
icebp
loop
push
fdivrs
and
iret
add
push
jmp
popf
cld
or
pop
stos
mov
jg
dec
or
xchg
fdivl
fmull
mov
and
jecxz
sbb
jns
cmc
insl
pop
enter
aam
shlb
dec
push
jecxz
lods
cmp
popa
xor
pop
or
imul
repz
sbb
lea
leave
jp
scas
cmpsl
fs
inc
mov
push
adc
aad
add
cmp
insb
inc
or
rcrl
xchg
call
mov
jbe
push
mov
mov
dec
pop
xor
in
fiaddl
jmp
jns
sbb
ret
loopne
outsb
mov
mov
and
jne
int3
dec
xchg
fdivrs
jne
arpl
cmp
pop
lock
js
mov
sbb
out
inc
mov
popa
movsb
jge
sti
cs
sete
pushf
lds
jl
mov
dec
lahf
popa
imul
push
movsb
mov
cmpsl
push
mov
sub
push
mov
mov
lods
enter
pop
and
pop
sarl
mov
jl
push
dec
fcompl
leave
mov
call
inc
push
bound
jge
push
sub
jbe
xor
mov
lea
neg
into
pop
push
stc
nop
xchg
mov
sbbl
mov
adc
sbb
in
pop
cmpsl
sbb
stc
sub
xor
lods
inc
pop
sahf
push
inc
mov
push
rorb
dec
lret
fstpl
sub
je
jne
lcall
push
mov
sti
xchg
js
lds
jp
mov
int
mov
or
lods
popa
nop
inc
in
daa
out
pop
in
lea
cmp
push
imul
add
push
pop
cmp
fidivrl
cmp
pop
in
dec
imul
sub
mov
adc
xchg
add
mov
cmp
cli
scas
mov
mov
adc
xchg
cs
add
mov
bound
and
pop
stc
cmp
mov
or
dec
insl
sub
out
mov
outsb
ficomps
roll
xchg
out
lock
or
cmp
aas
fadds
mov
jg
and
ja
inc
enter
fs
out
test
outsl
adc
cmp
mov
adc
icebp
fidivrs
and
lock
rcrb
movsl
and
mov
test
gs
sub
je
pop
int
dec
add
add
popf
sub
pusha
loopne
dec
subl
mov
xchg
aaa
out
and
push
cli
out
mov
setp
cmp
inc
push
push
rorl
mov
mov
push
in
popf
rsm
mov
sub
adc
sbb
cmp
inc
subb
mov
sbb
jne
mov
xchg
xchg
lret
dec
mov
negb
into
inc
inc
lahf
lds
pop
xchg
dec
subl
inc
xor
push
enter
test
adc
mov
in
sub
stc
std
dec
mov
lods
js
pop
das
lods
test
subl
add
dec
xchg
enter
adc
pop
mov
push
lcall
cltd
arpl
add
popf
out
insl
pop
cwtl
in
xor
dec
sbb
xor
shr
lret
or
in
push
or
fdivr
mov
lahf
cmc
outsb
shlb
sbb
pop
xor
fs
fimull
sti
nop
cmp
mov
fprem
fdivrs
rolb
in
push
iret
fists
and
jbe
pop
mov
cmp
push
sbb
mov
push
adc
lods
pop
cmp
adc
rorl
pop
lds
xorl
jl
jbe
cmp
cmpsb
xchg
cli
mov
or
mov
testb
fwait
movsl
subb
sbb
xor
loopne
xchg
in
push
lock
fsts
xor
xchg
xor
int3
aad
cli
mov
in
roll
aad
cs
sub
mov
dec
adc
add
push
popf
xorl
jecxz
or
cmpsl
out
xchg
sbb
iret
andl
jle
sbbl
push
cwtl
adc
mov
xchg
leave
add
dec
jns
cmpsb
imull
test
and
in
or
push
sub
pop
call
xchg
mov
rol
mov
mov
mov
lds
fistpll
and
or
inc
xchg
dec
fldt
mov
and
inc
sbb
loopne
xchg
push
fisttps
mov
inc
fldcw
or
adc
jl,pt
insl
pushf
xchg
xchg
mov
jno
bound
jb
std
jmp
add
and
push
cs
enter
mov
cmp
jl
fidivrl
scas
dec
imul
xor
int
loopne
fcmove
movsl
std
xor
stos
movsl
ret
les
push
nop
xchg
jl
std
jo
sti
iret
mov
out
lock
pop
adc
popa
imul
mov
mov
pop
out
mov
stc
pop
and
mov
ljmp
add
xchg
sbb
dec
xchg
adc
inc
push
shrb
pop
pop
test
lds
mov
cmc
into
mov
add
mov
cli
cltd
sbb
aas
lea
jecxz
std
test
push
ss
xchg
ss
inc
jbe
jbe
inc
cmp
dec
push
adc
push
cmpsb
jle
jae
lcall
adc
sub
lods
shl
and
mov
cmp
sbb
out
mov
popa
call
sbb
mov
push
and
mov
or
push
out
aam
sub
sahf
xchg
scas
out
aam
push
jge
and
xchg
add
pop
fcomps
dec
add
add
pop
aaa
or
mov
jb
leave
mov
subl
xchg
xchg
enter
enter
inc
xchg
ret
xchg
and
cmpsl
sahf
push
sub
jb
or
mov
and
jge
push
insb
lcall
push
int3
and
addb
in
movsb
je
cli
push
popf
sub
fimuls
sbb
add
sbb
les
jb
xor
xchg
aad
outsl
dec
andb
stc
test
test
xchg
and
fsubl
movsl
cmpsb
movsl
xchg
lret
ret
sub
sbb
adc
sub
push
adc
ss
sub
push
or
push
bound
sti
or
in
fimuls
ror
cmpsl
inc
mov
and
fidivrs
add
jbe
push
adc
xlat
jo
cs
fldl
sub
xchg
fdivrp
inc
mov
mov
hlt
sub
stos
addl
push
xor
and
sti
aas
rol
jmp
in
jecxz
in
jne
push
push
inc
addb
push
xchg
and
scas
xchg
sub
cmp
cmc
and
mov
pusha
popl
xor
fadd
popf
popa
cmpsb
mov
filds
sub
das
jae
fcmovne
pop
pop
dec
repnz
jg
fsubs
push
jbe
andb
fildll
inc
push
cs
add
add
shrb
std
push
out
xor
jl
mov
int3
cli
test
shll
inc
sbb
cmp
dec
call
add
mov
sahf
jae
dec
ficompl
sarl
push
sbb
lea
insb
sub
pop
rclb
push
pop
and
jl
getsec
fnstcw
or
xor
bound
lock
mov
outsl
test
gs
loop
test
adc
sub
imull
mov
pop
insb
cmpsl
push
icebp
mov
mov
add
mov
or
ljmp
adc
jo
scas
pop
xor
gs
sbb
sbbb
xchg
popf
out
mov
or
and
mov
dec
addr16
jl
rcll
jle
shll
mov
xchg
pusha
cmp
popa
mov
ljmp
pop
pop
sbb
fs
mov
arpl
cltd
es
pusha
inc
ljmp
xor
jp
push
inc
ja
mov
mov
fsubrl
stos
dec
jecxz
mov
xchg
adc
xor
ljmp
out
dec
push
ja
pop
sbb
sbb
out
fldl
rorb
xor
and
iret
inc
out
cmc
xchg
push
mov
imull
fwait
ss
ja
push
pop
xchg
loopne
loop
jle
test
aaa
mov
push
and
dec
xor
and
iret
into
lret
lds
fldl
out
shlb
mov
cmp
xor
shll
cmp
xchg
fiadds
es
xor
scas
cwtl
xchg
or
rorl
stos
mov
jb
sarb
xchg
shl
xor
push
shlb
mov
inc
mov
fstp
sub
icebp
clc
cld
jmp
in
push
mov
imul
ficompl
adc
nop
sbb
pop
movsl
loop
jbe
dec
in
insl
scas
xor
mov
jp
daa
xchg
dec
mov
mov
fbstp
xor
out
xor
sbb
mov
mov
mov
inc
scas
push
ja
scas
insb
out
call
shlb
out
int
dec
sbb
push
addb
test
adc
int3
divl
dec
cmpl
sbb
pop
call
push
jg
nop
adc
mov
movsb
in
push
out
xor
xchg
cmp
lidtl
loope
cmp
pop
xchg
jp
jns
sahf
ret
lea
mov
add
bound
sbb
mull
jne
inc
add
inc
in
and
and
frstor
insl
pop
pushf
inc
int3
inc
mov
call
lea
int3
adc
outsl
aas
mov
xor
aaa
cs
int
mov
popa
test
out
add
mov
push
push
js
out
hlt
mov
sub
cmpsb
adc
bound
xor
push
cmp
push
dec
rorl
mov
pop
cmp
test
jle
pop
mov
dec
or
es
sub
jl
mov
sbb
inc
cmp
fwait
add
stos
lods
sub
in
test
mov
jmp
xor
sub
in
adc
scas
int
jnp
loop
mov
andb
xchg
aaa
dec
repz
lahf
stc
pop
pop
lock
push
fists
mov
mov
fsub
imul
enter
sti
rol
inc
sub
xchg
cmp
mov
dec
xchg
or
cmove
jmp
and
and
testb
cmp
idivl
pop
jecxz
icebp
loopne
jnp
xor
xchg
pop
push
add
and
xor
xchg
aad
ja
cwtl
jno
add
repnz
mul
fcompl
xor
movsl
xchg
dec
mov
push
cmpsl
jmp
xchg
js
lret
sbb
push
enter
cmp
leave
stos
gs
cmp
sub
or
loope
xchg
mov
sbb
pop
fisttpl
in
jnp
jge
xor
aam
je
inc
sub
mov
and
inc
mov
or
cmp
cld
inc
xchg
or
test
mov
icebp
scas
iret
push
jns
sbb
xchg
and
sbb
sub
or
ret
sub
mov
scas
mov
jae
sub
adc
ss
pop
sti
sub
xorps
rclb
ljmp
andl
lcall
inc
lret
sbb
mov
xchg
xchg
or
ficompl
popa
call
adc
xor
das
mov
push
stos
pop
stos
dec
xchg
sub
outsl
mov
inc
mov
jmp
mov
int
sbb
pop
cmp
dec
inc
pop
add
push
sub
sbbb
mov
stos
xor
pop
out
test
ljmp
jle
mov
sahf
sbb
enter
xor
mov
pop
add
jg
pusha
inc
and
cwtl
mov
adc
scas
sub
rcrl
rcl
stos
movsb
ja
xchg
sub
in
adc
push
inc
pop
adc
mov
pop
shrl
add
mov
daa
test
pushf
aas
les
hlt
and
and
lods
pop
inc
enter
pushf
adc
scas
cwtl
mov
arpl
mov
fwait
ret
pop
and
xor
imul
scas
daa
mov
jae
outsb
pcmpgtb
ja
xchg
mov
or
jg
xor
es
pop
sbb
jns
out
cmpsl
roll
dec
mov
mov
mov
mov
mov
inc
daa
push
mov
pop
sbb
adc
ror
mov
jle
xchg
pop
mov
or
xchg
out
dec
jns,pt
add
pop
xor
ljmp
push
mov
adc
push
ret
cmpsb
jmp
cltd
adc
iret
or
aaa
popa
cmp
cmp
mov
nop
outsb
adc
xchg
xchg
add
jp
loope
in
or
rcr
mov
dec
pop
outsb
in
adc
int3
cmpsl
xlat
mov
jnp
cmpsl
inc
or
lret
adc
ret
negb
ret
push
loopne
push
stc
insl
pop
push
cmc
insb
or
repnz
cli
repz
insl
jge
dec
insb
and
or
leave
out
cmp
clc
xor
mov
mov
loop
sbbb
pop
sbbl
frstor
pop
lock
xchg
fldcw
mov
cmp
push
stos
cwtl
mov
jne
xor
xchg
mov
scas
sub
add
xor
or
cmp
adc
pop
mov
and
imul
adc
fdivl
dec
mov
loope
aas
fcmovnb
dec
mov
sbb
scas
test
cmp
cltd
push
in
pop
mov
fsubl
out
adc
inc
mov
mov
enter
sbb
or
mov
orl
pusha
sbb
push
sbb
lea
mov
xchg
test
cli
and
shll
stc
push
je
xchg
inc
add
fwait
xchg
push
paddsb
shl
xlat
cwtl
sub
xor
icebp
das
xchg
adcb
mov
fxch
cli
jo
jne
xchg
cmp
adc
test
push
jno
cmp
cmpsb
loopne
dec
icebp
mov
sub
lds
mov
fisubrl
mov
pushf
cmp
adc
adc
and
mov
mov
mov
jns
and
addb
test
aaa
clc
loope
jp
mov
inc
loop
stos
sbb
and
aam
pop
mov
std
out
pop
pop
mov
ret
xchg
sbb
std
aaa
xor
lods
into
fsubl
adc
inc
sub
xadd
cwtl
test
cmp
or
cmpsl
adc
and
push
clc
jmp
or
out
cmc
gs
cmpb
xor
mov
gs
aaa
mov
movsb
jmp
ja
scas
out
fldenv
mov
popf
stos
out
rorl
mov
jb
fisubs
xlat
push
leave
call
push
adc
lds
mov
inc
jg
xchg
cmpsl
add
fldl
adc
aam
jl
or
outsl
enter
int
mov
mov
in
mov
push
pop
jnp
imul
mul
and
or
das
and
insb
xor
mov
adc
scas
rorl
lcall
and
aaa
or
shr
dec
dec
inc
xor
shl
inc
cmpb
test
jmp
popf
xchg
inc
addr16
inc
imul
fildl
mov
push
push
addr16
scas
inc
std
pushf
out
das
insl
cmp
adc
mov
add
shll
push
enter
lods
aas
pop
bound
arpl
fcomip
mov
enter
ret
scas
int
xchg
push
std
mov
test
mov
mov
hlt
xchg
dec
jmp
add
jecxz
in
push
jecxz
push
pop
incb
aaa
nop
xchg
pause
rol
add
push
or
sbb
xor
push
adc
cli
pop
aaa
gs
inc
rcr
jns
addl
and
jae
bound
xor
lahf
fcoms
inc
xor
rcrl
jne
call
mov
pop
das
pop
add
decl
inc
pop
push
sbb
mov
push
jp
jp
inc
popf
pushf
mov
mov
cmp
sbb
mov
sub
xor
cmp
add
mov
dec
mov
loopne
mov
xchg
lcall
outsb
pop
mov
cmp
jbe
das
sahf
sti
test
mov
pop
add
cs
sub
push
nop
lret
or
pop
mov
in
mov
xchg
mov
stc
loope
or
mov
adc
mov
mov
pop
ret
sub
cmp
xchg
out
bound
jl
pop
cld
dec
and
insl
push
sub
add
outsl
mov
sub
mov
enter
int
sbb
das
push
js
xchg
call
movsl
xor
add
cli
push
mov
insb
movsl
out
push
clc
jne
push
aaa
sbb
and
outsb
push
lods
sahf
push
adc
xchg
add
aad
nop
mov
inc
push
xchg
sbb
dec
stc
cmpsb
std
cmp
push
ja
imul
inc
sti
loop
mov
aas
mov
xchg
sub
scas
negl
aaa
ljmp
loopne
and
iret
ret
pop
lds
jle
mov
dec
sbb
pusha
pop
cmpsl
hlt
xchg
inc
push
or
sbb
fsqrt
mov
jns
lcall
imul
scas
and
icebp
xchg
cmpsb
sbb
cmp
pop
jle
mov
and
add
sbb
rorb
cmp
inc
sub
xor
cmp
sahf
pop
or
loope
jae
mov
jmp
pop
movsb
mov
jmp
or
test
jb
dec
stc
or
or
sub
push
cmp
and
popa
pop
cwtl
lret
push
cmp
dec
cwtl
out
test
mov
je
inc
jle
cmp
xchg
sub
call
adc
popf
shlb
jge
jns
stos
mov
movsl
js
shll
adc
loopne
or
out
imul
int3
sarl
fstps
pop
and
cs
loop
scas
xor
imull
int
push
add
sahf
and
jno
out
es
mov
aad
into
fistl
mov
mov
scas
shrl
lds
push
jecxz
mov
jmp
push
es
inc
or
ret
jmp
aas
fldln2
lods
jnp
xchg
movl
cmpsb
les
jb
jae
push
ficomps
mov
or
xchg
movl
xchg
pop
loope
mov
cmp
push
mov
mov
repz
test
sbb
sti
ret
test
dec
inc
mov
jmp
mov
std
call
jecxz
jae
mov
jae
xchg
or
sbb
sti
inc
lods
test
arpl
xlat
push
je
fdivs
push
jge
imul
add
push
jo
jne
into
js
ljmp
dec
test
pusha
cmpsb
lods
ret
fs
cmp
jne
xlat
adc
mov
and
jb
mov
and
pusha
push
mov
add
push
fisubs
insl
inc
out
mov
adc
add
adc
mov
push
lret
mov
lea
test
out
push
lods
int3
mov
sub
out
xor
inc
mov
or
push
call
mov
cmpsl
pushf
lret
into
dec
cmc
test
fpatan
mov
ljmp
adcb
inc
lock
sbb
pop
iret
idivl
call
sbb
inc
xor
sti
popf
shl
call
mov
sbb
es
into
and
mov
stos
and
subl
or
mov
pop
or
pushf
sarb
dec
mov
leave
jae
iret
xor
sbb
sbb
sub
mov
mov
pop
shll
ljmp
mov
fcoms
imul
and
add
cmp
in
aam
ss
mov
fdivrs
cmp
adc
mov
inc
xor
jle
scas
adc
int3
inc
loope
jns
shll
sub
add
addb
push
fistpl
lods
mov
hlt
xor
or
mov
rcrb
rclb
mov
jge
push
and
add
mov
clc
mov
mov
xchg
outsl
dec
jp
pop
stos
es
lds
lds
inc
icebp
out
in
xchg
mov
jge
add
adc
test
jae
gs
cs
int
cmp
stc
push
sti
inc
psrlw
or
loopne
cmp
mov
fcmovnbe
sti
xchg
int3
popa
mov
pop
xor
dec
icebp
pop
enter
lret
mov
ret
sbb
in
fistpl
mov
adc
out
adc
int3
lods
sub
out
xorl
mov
add
push
inc
insb
push
pop
stos
je
or
imul
dec
sub
and
and
and
push
cli
push
sub
sbb
je
inc
cmpsl
or
popf
cmp
imul
aaa
loope
ret
gs
mov
and
xchg
pop
sbb
gs
or
mov
sbb
mov
outsb
pop
xor
aam
jnp
jecxz
jbe
test
mov
data16
fwait
cmp
dec
inc
or
mov
adc
push
imul
jle
aam
lods
shlb
outsl
mov
mov
addr16
add
add
out
in
insb
loop
adc
loope
aas
movsb
movlps
mov
cltd
clc
in
mov
hlt
jp
push
cltd
cwtl
in
jp
xor
jno
movsb
lea
fistpll
pop
xchg
mov
dec
popf
push
cld
fldenv
repnz
push
test
jecxz
sub
mov
jb
xchg
mov
cmpsl
aas
jecxz
and
xor
lock
dec
out
adc
or
pop
mov
inc
push
lret
and
mov
mov
dec
or
xlat
xor
pushf
ror
fmulp
int3
outsb
jg
and
fistps
and
test
arpl
jge
add
repnz
jmp
jmp
test
and
cmp
mov
aas
popa
hlt
inc
les
ss
lock
int3
push
cld
xorb
and
jnp
std
mov
xchg
adc
or
loopne
sahf
push
mov
jecxz
das
lret
pusha
lods
sbb
lock
out
push
dec
cmp
jg
cli
imul
mov
arpl
aas
xlat
pusha
fs
ljmp
xor
add
outsb
in
mov
lock
xchg
and
add
icebp
fisubrs
fistl
shlb
inc
test
cmp
into
sarb
clc
js
pushf
sbb
lods
hlt
sub
mov
push
jb
mov
adc
jnp
mov
test
add
cli
jge
pop
cltd
dec
roll
mov
int
roll
insl
test
int3
rol
sbb
sbb
notb
lea
imul
jle
mov
xchg
iret
gs
mov
loop
rorl
das
sbb
sbb
les
std
scas
ret
fs
mov
stos
xor
loop
mov
pushf
jae
sub
ja
add
iret
pop
cmp
and
enter
aam
xchg
outsb
xchg
mov
outsl
inc
and
aam
pop
jecxz
das
aaa
enter
pop
push
sti
bnd
stc
adc
movsb
or
mov
push
xchg
inc
cltd
sbb
gs
bound
shlb
fdivrs
dec
push
fmull
fwait
adc
cmpsb
test
test
pop
or
movsl
lcall
adc
xchg
stc
lahf
rcl
inc
fnstsw
jb
jmp
data16
sbb
movsl
ss
in
inc
sbbb
xor
or
mov
push
es
lea
mov
stos
shrb
in
sahf
and
daa
cmp
subb
not
mov
xchg
mov
testb
faddl
stc
and
ret
adc
mov
test
lret
push
and
inc
leave
adc
adc
idivb
std
adc
cwtl
cmp
test
das
cli
aaa
lea
push
dec
or
sub
lods
push
pop
sbb
fcompl
clc
jno
das
cmp
cli
and
lret
push
fidivl
or
jae
aam
das
sub
subb
outsb
push
push
fs
sbb
pushf
mov
cltd
ds
test
xor
push
add
xchg
mov
pop
out
add
xor
mov
xchg
cmp
mov
mov
add
pop
out
and
leave
mov
aas
sub
mov
mov
add
or
in
arpl
jecxz
out
mov
cli
add
ss
mov
pop
xchg
jnp
dec
fisubrl
lret
loop
je
add
sti
sbb
lret
add
outsl
negl
adcl
xchg
in
or
subb
jb
repz
jmp
fstpt
clc
lds
outsb
aaa
jns
mov
imul
clc
sti
imul
push
int3
cmp
ljmp
and
dec
mov
jl
ljmp
adc
daa
loop
insl
rep
adc
jmp
stos
pop
or
push
stos
cmp
mov
jno
xchg
mov
arpl
out
int
jge
or
pusha
jmp
inc
daa
lret
and
outsb
insb
mov
xorps
fwait
int
adc
lea
aam
xor
push
cmp
repnz
adc
xor
xor
ja
hlt
ja
std
out
sarl
cmp
pop
test
mov
ds
out
mov
cld
mov
aas
std
inc
ja
test
xor
dec
xor
jecxz
loopne,pn
or
shr
dec
pop
jne
cmp
int3
imulb
int3
leave
push
aam
mov
mov
pop
jnp
lcall
hlt
dec
sbb
jbe
loopne
inc
cmpsl
jae
add
jl
jl
fdivl
stos
outsb
frstor
dec
pop
sahf
xor
stos
scas
cld
add
sub
aad
insb
test
xchg
and
jns
push
xor
outsb
or
pop
xchg
and
adc
dec
lea
lods
sub
sub
inc
add
dec
or
sub
aam
pop
out
or
jg
pusha
cwtl
pop
add
cmp
nop
adc
cmp
cmpsb
cmp
dec
in
lods
mov
jne
mov
push
ror
adc
nop
mov
pop
movsl
pop
dec
adc
dec
lock
pop
and
push
sbb
cli
cli
stos
stos
lea
dec
imul
insb
sti
les
push
cmp
test
in
or
pusha
jb
jbe
cmp
outsb
adc
stc
cltd
mov
push
aam
pop
sub
mov
fdivr
inc
push
push
adc
int
and
fistl
int3
gs
lea
cmp
aad
jb
mov
aas
add
fmuls
pushf
arpl
add
xorb
imul
sub
test
bound
scas
test
cwtl
jge
mov
movsl
push
js
insl
aam
and
add
shl
out
jp
and
jecxz
adc
inc
ss
pop
mov
sarb
jno
pop
mull
cmc
ljmp
sbb
sub
bound
xor
pusha
or
and
aaa
and
adc
ret
add
inc
cmp
mov
cmp
mov
out
jno
lods
fwait
xchg
int3
add
adc
int
mov
out
xlat
test
in
insl
dec
cmp
clc
inc
push
cmpl
mov
jmp
xlat
test
js
lods
jp
inc
sub
inc
nop
push
int
nop
xor
mov
add
inc
sub
sbb
xor
es
lds
lahf
pop
pop
and
movsl
inc
or
and
std
test
loop
test
fdivs
sarl
mov
cmp
in
hlt
mov
jae
loop
loope
xchg
or
in
xchg
push
dec
xchg
adc
das
pop
pop
fdivrl
mov
into
add
iret
loopne
jbe
or
sbb
jecxz
mov
out
shl
in
jno
out
std
dec
and
sbb
adc
add
mov
mov
scas
inc
sbb
ljmp
inc
pop
sbb
xor
gs
cld
jne
cmp
xor
rcrl
mov
fcmovnu
push
fmul
arpl
cmp
cmp
imul
daa
loope,pn
add
int3
pop
cli
out
xor
jnp
sub
ljmp
in
dec
insl
pop
inc
flds
cmpb
sub
push
push
jp
mov
scas
dec
pop
int3
loop
fsubl
cmp
divb
cltd
imul
pop
jns
mov
sub
lcall
cmc
movsb
xor
movsb
loope
cmp
fs
mov
ret
inc
and
fbld
dec
insl
and
lods
sbb
push
ljmp
jle
push
sbb
test
das
ret
rcr
jmp
lods
outsb
dec
pop
shlb
lahf
repnz
cmp
daa
ljmp
push
adc
jecxz
mov
sub
mov
xor
mov
jbe
inc
add
cmp
imul
imul
xor
jmp
sahf
jmp
push
mov
push
filds
test
pop
in
xor
ljmp
xor
gs
data16
mov
outsb
popf
sub
mov
out
cmpsl
hlt
dec
or
lahf
dec
imul
sub
shl
cli
or
adc
stos
dec
in
dec
addr16
cmpl
scas
in
fsubp
dec
mov
and
rcrb
sub
popf
mov
orl
cld
jns
and
push
fildll
stos
aad
rolb
add
jne
fistpl
push
or
ret
out
adc
aaa
hlt
xor
and
inc
cmc
outsb
clc
mov
jo
cli
ljmp
sbb
xchg
lahf
and
fwait
mov
int
xchg
lcall
xor
mov
push
sub
mov
lods
dec
mov
dec
clc
mov
pusha
xchg
mov
hlt
lret
adc
out
ss
mov
mov
xchg
stos
adc
out
mov
or
pop
jb
nop
jns
inc
push
push
inc
xchg
pusha
and
aad
test
xor
pop
lcall
iret
mov
pusha
mov
out
imul
insb
cli
ljmp
je
inc
sub
mov
xchg
xor
out
rcr
adc
push
out
mov
jle
scas
adc
or
mov
push
jmp
mov
pop
and
pop
mov
rcll
out
pusha
pop
mov
cmc
and
adcl
out
sub
and
add
inc
sub
pop
lret
push
ja
push
push
cmp
lds
or
adc
xchg
jecxz
xlat
sbb
clc
ljmp
lretw
ret
jb
mov
nop
ljmp
jp
mov
jle
in
out
push
mov
push
dec
push
fidivrs
test
add
adc
sti
push
jno
lods
mov
xchg
std
mov
jg
int
sub
cmc
int
mov
push
sub
bound
jnp
push
outsb
rcl
push
fisttps
roll
or
xor
aam
lods
sub
jl
movsb
cmp
push
cmp
xchg
movsb
push
sub
and
lcall
arpl
loope
cli
jg
dec
push
outsl
dec
lock
push
pop
jns
jecxz
mov
dec
leave
mov
sub
xor
add
movsb
sahf
lret
imul
cmp
xchg
pop
insb
call
movsb
rol
xchg
and
aad
jnp
sbb
das
xchg
sub
in
adc
jo
or
popa
cli
popa
aam
lret
mov
xchg
cmp
push
arpl
std
cld
jecxz
data16
leave
in
pop
std
ljmp
mov
pop
aad
out
xchg
push
mov
lret
fs
shrb
push
fsts
push
ss
add
stos
inc
push
insb
mov
pop
in
sbb
adcb
movl
push
movb
fisubrl
insb
pop
add
fs
in
add
xchg
repnz
mov
lret
or
xor
xchg
mov
pop
mov
mov
push
push
lcall
push
stos
movsb
cmpsl
scas
mov
add
loopne
mov
inc
push
fcomp
or
pop
or
pushf
negb
mov
push
mov
xchg
je
imul
movsb
out
dec
or
inc
mov
xchg
shrl
xchg
int
jge
push
pop
mov
xchg
mov
mov
mov
out
xor
fldenv
mov
call
iret
xchg
cmp
jecxz
push
dec
jb
mov
xor
clc
lret
outsl
jae
sbb
pop
sahf
daa
call
cmc
push
int3
inc
pop
xchg
enter
mov
xchg
ret
mov
cmp
outsl
call
aam
cmp
xor
imull
and
cs
popf
arpl
repnz
movsb
jb
test
add
arpl
and
add
push
cmp
jno
std
mov
mov
rcll
lret
fisttpl
pop
pop
mov
xchg
inc
jnp
ds
in
sub
int3
mov
and
push
jg
shl
add
cmp
lods
cltd
scas
jno
push
jle
aam
or
lcall
sbb
jle
xchg
adc
sub
imul
imul
dec
outsl
adc
stc
scas
jno
pinsrw
shlb
xchg
pop
push
outsl
mov
push
xchg
lret
inc
push
mov
jp
cmpsb
sbbb
pop
fbld
ja
or
mov
jo
out
pop
mov
js
loop
jnp
sbb
pop
adc
pop
add
dec
pop
int3
fmull
shr
sub
inc
aas
out
push
pushf
pop
mov
cs
rsm
pop
add
repnz
cld
test
subl
icebp
roll
add
fdivrl
test
dec
jl
jo
pop
test
idivl
imul
xor
adc
jbe
xlat
sbb
push
or
insl
mov
fst
in
push
cmp
inc
mov
or
jge
mov
cli
fisubrs
sbb
lea
lcall
xor
movsb
pop
das
xor
inc
cmpsl
push
mov
cmpsb
ds
push
push
out
das
cwtl
fdivrp
adc
in
mov
movsb
imulb
xchg
adc
sbb
push
das
cmp
cmpsb
xchg
pushf
inc
mov
cld
pop
mov
insl
push
adc
in
pop
jbe
fucomi
pusha
fs
or
pop
inc
es
ja
insl
cwtl
ret
hlt
lret
stos
jne
mov
pop
aam
test
fisubs
ja
sub
mov
dec
enter
and
cmpsb
lods
jp
or
sub
shlb
mov
loopne
and
inc
cmp
jle
stc
xchg
lods
inc
xor
sub
and
ss
jnp
or
ficoml
push
clc
movb
ja
sub
in
repnz
inc
dec
add
mov
mov
ret
xor
ja
mov
pop
push
into
xor
mov
pop
mov
mov
cmp
mov
mov
enter
es
lret
and
xor
adc
out
xchg
jge
notb
in
shl
cmp
push
add
xor
xchg
jp
xlat
jle
mov
mov
loop
pop
insb
adc
lcall
and
rcll
push
mov
mov
add
jo
in
dec
or
pmullw
xchg
cmpl
pop
pop
inc
rol
lret
mov
icebp
push
mov
push
or
mov
dec
mov
adc
cwtl
mov
jl
xchg
push
imul
jg
xor
ss
mov
fadds
mov
and
sbb
pop
movsl
jge
push
inc
inc
add
cmpsb
imul
aas
pop
nop
push
int
stos
mov
mov
pop
pop
out
cwtl
cltd
aad
in
jmp
pushf
jp
push
cmpsb
lds
pop
push
sub
lahf
push
cmc
xor
inc
pop
and
pop
iret
scas
std
std
icebp
fcmovu
mov
adc
aam
add
xor
js
leave
push
jmp
push
lret
adc
lea
lods
xor
dec
out
lret
pushf
sbb
adc
pop
sub
jb
dec
loope
sub
and
mov
decb
mov
push
pop
sbb
cmp
push
in
xchg
pushf
aam
in
test
mov
subb
push
es
gs
jl
outsb
mov
add
leave
cmp
jmp
xchg
adc
pusha
and
aas
cvtps2pd
lds
and
mov
rol
aam
add
pop
fld
xchg
adc
push
push
dec
fists
mov
filds
mov
in
mov
ds
push
movsb
mov
loopne
push
test
mov
cmp
gs
add
push
stc
jo
jp
js
in
mov
ret
or
das
pop
call
mov
cs
lahf
jp
out
mov
nop
loope
jb
add
pop
sti
ficompl
cmpsb
aaa
lea
and
dec
pop
inc
push
out
out
push
or
mov
mov
xor
pop
pop
sub
pop
pop
aas
pop
xlat
sbb
fdivrs
les
out
jne
jmp
cmpsl
ds
sub
add
push
xchg
fsubrl
shrl
jno
repnz
cmc
orl
pop
mov
lret
xchg
mov
lret
xor
movsb
enter
push
xor
adc
testl
jmp
add
repnz
xchg
inc
lcall
mov
push
pop
xor
cmc
pop
movsb
mov
in
out
call
mov
adc
inc
jecxz
and
mov
icebp
jl
dec
adc
repz
jne
lret
mov
icebp
lods
mov
mov
adc
sti
mov
insl
bound
push
inc
mov
mov
inc
adc
shlb
cmpsl
data16
cwtl
mov
mov
mov
and
test
jge
push
jbe
fucomip
or
test
js
jbe
pop
mov
add
int
scas
addr16
pop
push
push
and
pop
mov
xor
and
test
sahf
ret
mov
fimuls
ficomps
sbb
scas
adc
xor
or
bound
inc
scas
in
movsb
mov
jle
add
xchg
adc
adc
cmpsb
outsb
fs
sbb
pop
and
andl
jmp
pop
mov
ret
inc
insb
mov
xor
or
cmp
les
mov
push
dec
lahf
ss
es
dec
inc
push
scas
add
sub
sbb
outsb
mov
pop
push
xor
cmp
push
fisttps
and
xchg
inc
inc
rcl
fwait
pusha
out
xchg
push
mov
mov
pop
push
pop
or
aaa
ds
mov
pop
data16
shll
pop
push
test
or
lock
scas
fidivrs
pop
add
lods
jno
dec
push
fistps
mov
int
fsubs
adc
and
leave
push
in
je
loopne
fistl
jae
fdiv
ja
int
cmc
push
xchg
stc
popa
push
mov
mov
std
mov
push
sbb
xor
sti
sbb
insl
mov
fsubs
ficomps
mov
sbbl
xchg
pop
pop
insl
bnd
mov
fcmove
xor
adc
and
andnps
out
add
mov
fldcw
pop
aad
out
pop
pusha
xchg
dec
scas
push
inc
mov
test
or
mov
xor
sti
test
push
mov
cli
inc
mov
jnp
fistpll
cmpsb
adc
inc
adc
cmp
sub
add
bound
pop
sub
mov
and
cmc
or
sbb
into
add
test
int3
or
dec
out
into
sarb
xor
add
popa
jbe
stc
fdivrs
jns
cld
cmpsb
rcl
iret
inc
leave
mov
movsl
pop
push
sub
pop
dec
adc
fstl
pop
out
jb
iret
dec
test
cmp
jle
sub
push
imul
sbb
popa
mov
and
jmp
out
jns
lret
stc
pop
fldl
nop
inc
dec
inc
rcl
adc
enter
adc
push
push
xchg
jecxz
mov
sbb
int3
nop
aam
je
fsubs
add
cmp
inc
lahf
mov
xor
jle
lods
in
cmp
push
addr16
mov
sbb
popfw
push
add
cwtl
dec
addr16
loope
dec
xchg
lret
push
lds
jne
mov
dec
pop
jmp
rorb
cmp
mov
xchg
repz
in
push
hlt
sbb
cmpsb
dec
jg
mov
add
fisubl
ret
loopne
inc
pop
aam
out
repz
out
aas
mov
push
outsb
inc
mov
xchg
cmpsb
iret
lcall
out
ja
sub
cmp
fmuls
fisubl
das
andb
push
rcr
std
and
fiadds
outsb
jl
xor
mov
add
cmpsb
mov
les
popa
push
add
fs
insb
divl
adc
xchg
mov
test
dec
pop
rcl
frstor
aad
xchg
xchg
adc
pusha
repnz
push
int
push
jbe
xor
push
imul
sbb
add
ss
iret
mov
cs
inc
pop
or
mov
cmp
sub
lret
dec
stos
imul
sub
pop
sti
imul
inc
imull
xor
xchg
sbb
cs
add
cmc
push
imul
sub
stos
cwtl
cmpsb
rcl
adc
mov
adc
mov
js
or
push
loopne
xchg
xchg
lods
pop
mov
nop
aam
cmpb
and
cmpl
jne
adc
stc
aas
sbb
aam
xor
add
mov
shrl
add
aad
fldt
xchg
or
sub
lea
cmp
std
adc
xchg
flds
fisubrs
xor
std
jno
ds
sub
jl
xchg
cltd
dec
aad
jecxz
inc
pop
shll
cld
push
stc
cmpsb
ja
lcall
and
stos
pop
notb
test
xor
push
scas
push
hlt
inc
inc
push
or
add
mov
js
jnp
addr16
stos
in
mov
fldpi
sub
sub
push
xor
repnz
or
sub
cltd
mov
inc
xchg
or
sahf
les
repnz
and
jmp
sub
mov
cmp
scas
aad
pop
jmp
lret
lcall
inc
jo
sub
xlat
xchg
stos
test
ljmp
aas
or
inc
pop
xlat
or
add
sbb
aaa
add
icebp
or
push
or
rcl
add
nop
pop
andb
int3
and
shlb
out
js
pop
mov
pop
int3
xchg
repz
sti
pop
into
in
fs
outsb
jmp
push
hlt
mov
xchg
movq
jmp
sbb
xor
xor
mov
call
cli
popl
popf
lea
lea
aaa
sbb
cwtl
jo
in
nop
pop
cltd
mov
ja
and
aas
aas
ss
xchg
stc
iret
std
xchg
push
std
fwait
add
rorb
push
jle
out
push
dec
pop
mov
jne
cld
xor
cmpsb
mov
jmp
cmp
sub
add
sub
and
mov
push
push
sbb
mov
xchg
loopne
lcall
push
sahf
sti
out
pushf
xor
dec
mov
dec
push
sbb
or
inc
clc
rolb
push
jecxz
xchg
cmp
notl
in
movsl
inc
adc
pop
bound
hlt
leave
roll
outsl
mov
mov
loope
jne
or
and
mov
pop
repz
mov
faddl
jecxz
cs
cmp
xchg
push
daa
xchg
ret
mov
sti
sti
mov
mov
mov
fisttpl
stc
xchg
ds
jnp
in
in
out
test
mov
sahf
jp
add
rolb
iret
dec
dec
repz
mov
or
push
hlt
dec
mov
mov
repnz
add
popa
mov
push
or
rclb
stos
push
sti
gs
js
xchg
shlb
mov
xchg
add
lock
out
mov
jmp
addr16
cmpsl
pusha
lret
inc
dec
sub
sub
inc
lock
loope
or
jecxz
in
cmp
xchg
mov
clc
hlt
and
inc
mov
popa
inc
mov
aam
test
mov
xchg
xor
js
out
daa
push
scas
out
test
in
jp
sahf
gs
faddl
fdivs
sub
decb
mov
out
add
push
pop
ja
int3
std
cli
cmp
iret
ss
xor
lods
sbb
sub
leave
stc
jns
loop
cli
xchg
lcall
mov
and
or
inc
or
loopne
mov
ret
das
push
xchg
cmp
push
dec
call
popl
xrelease
xchg
loop
mov
mov
push
sbb
push
cmpsb
cs
sub
out
cmpsl
push
vfrczss
arpl
lds
mov
insl
inc
lods
pop
jl
mov
pop
shrl
pop
mov
imul
adc
adc
pusha
jge
hlt
imul
nop
jne
push
jl
push
mov
jle
sti
mov
scas
lcall
sbb
and
in
jno
idivb
pop
clc
inc
mov
pusha
xchg
popa
pop
add
cmp
call
sub
int
inc
sub
arpl
fimull
iret
pop
push
mov
lea
push
loopne
out
idivb
scas
fdivrl
mov
or
sub
inc
nop
mov
mov
lods
stos
jmp
notl
in
lahf
std
loop
sbb
mov
call
repnz
pop
imul
push
imulb
jne
pushf
out
inc
ja
mov
test
jl
inc
shr
into
or
pop
lret
jb
or
mov
inc
hlt
add
pop
jno
add
mov
inc
push
vpsadbw
shll
mov
sbb
shrl
clc
rol
jo
fwait
push
test
shll
add
jmp
test
or
jmp
imul
add
call
push
aad
sub
lret
mov
ljmp
jecxz
shl
int
addr16
test
mov
pop
or
cmpsl
inc
push
bound
inc
xlat
xchg
mov
ret
mov
xor
rcr
dec
fisubs
fildl
das
xor
push
insb
cmp
ljmp
dec
sbbb
mov
push
adc
leave
fnstenv
lcall
cs
jmp
loope
cltd
les
sbb
mov
cmpsl
movsb
jns
fwait
mov
pusha
call
pop
rol
test
add
pusha
aaa
filds
jmp
movsb
adc
enter
aaa
xchg
leave
xchg
pop
popa
sbb
push
push
mov
stc
cmp
test
inc
leave
mov
mov
adc
xchg
cmp
mov
imul
fldt
popa
scas
bound
or
mov
rcll
mov
clc
faddp
aas
popa
and
add
mov
cmp
pop
mov
xchg
movsl
cmp
add
hlt
pop
mov
test
mov
xchg
mov
fisttps
or
lcall
in
cmpsb
push
mov
loop
loopne
fcompl
subps
dec
push
or
es
popa
mov
ljmp
out
inc
in
cwtl
cmp
and
or
cmpsl
sub
xchg
mov
pop
xor
movsl
stos
and
ficoml
ja
jne
jge
ja
ja
pusha
mov
xchg
fcomi
incl
xchg
rclb
xchg
or
cmp
in
movsb
or
ss
xchg
mov
add
shl
jmp
loope
push
inc
dec
xor
dec
daa
out
add
outsl
aas
push
mov
hlt
mov
out
mov
pop
or
sbb
out
clc
and
into
pop
fsts
sub
ror
fisubrs
sbb
pushf
push
mov
sub
in
daa
div
mov
cli
pop
ja
cmp
sub
cmp
icebp
cmpsb
pop
addb
xchg
mov
mov
sbb
dec
call
or
rcrl
inc
jns
jns
lahf
outsl
gs
jb
orb
jo
and
push
cmpsb
mov
decb
mov
out
or
xchg
mov
xor
pop
cmp
sti
movl
pusha
daa
xchg
mov
pop
mov
mov
rclb
xchg
fldl
push
cmpsb
sbb
sbb
pop
add
add
pop
outsl
sbb
mov
std
aad
jge
loope
xchg
ficoml
inc
mov
mov
cmp
sarl
dec
inc
push
adc
mov
ss
xchg
cmpsl
dec
out
xor
sbb
sub
je
ficoms
testl
push
mov
std
loopne
mov
pop
popa
or
inc
sub
test
int3
pop
and
sub
addl
xorb
sbb
fdivrp
jle,pt
sbb
mov
sub
popa
mov
fadds
inc
test
push
xchg
add
xor
pop
push
mov
push
mov
lds
movsl
dec
lods
sbb
sub
and
cwtl
lods
movlps
jg
rcrb
mov
test
stos
popa
fldt
rcrl
mov
xchg
movsb
or
jp
mov
jmp
out
cmpsb
bound
mov
movsl
lds
xchg
sbb
adc
imul
mov
jle
popa
push
hlt
xorl
outsb
fcom
sub
aas
imul
jle
or
std
add
pop
push
push
mov
int
add
jmp
bound
int3
xor
mov
loop
outsb
sub
pop
scas
stc
sub
das
stos
movsb
mov
jae
jge
adc
adc
adc
cmc
lds
imul
in
je
and
fucomip
cmp
sub
call
in
leave
aas
jb
xor
gs
jecxz
cs
fisubrl
pop
cmpsl
ja
mov
cs
fcomi
mov
lcall
pop
les
xlat
cs
cld
pop
lcall
fdivr
ljmp
insb
mov
mov
sbb
xor
movsb
imul
sbb
sahf
cmpsb
xlat
insl
cltd
push
mov
inc
pushf
pushf
fld1
xor
pop
rcr
rcrl
pop
ror
icebp
dec
inc
jmp
push
sub
call
loopne
xchg
inc
push
ret
xchg
mov
mov
mov
dec
fldt
cmpsb
push
and
xchg
mov
rclb
mov
xchg
sbb
lods
mov
jg
mov
mov
xor
into
in
dec
pop
cmc
or
add
inc
stc
cmpsl
loopne
fmuls
cltd
stc
sbb
mov
push
bnd
in
push
pop
fwait
movsl
pop
adc
xor
push
das
push
ficoms
pushf
in
lods
lods
jo
cmpsb
shll
repnz
out
cmp
cmc
mov
ja
mov
jmp
xor
xchg
call
cmpsb
adc
std
pop
cmpsb
fldenv
jb
mov
add
aaa
stos
fdivs
test
hlt
or
shlb
inc
das
repnz
mov
sub
ds
imul
add
jg
bnd
gs
jb
arpl
xor
loope
and
out
filds
into
or
loopne
mov
jne
scas
inc
add
mov
arpl
iret
popa
sbb
cwtl
jge
push
or
xor
hlt
inc
and
fs
pop
divb
mov
mov
cli
jmp
ljmp
mov
jp
sub
jmp
cltd
push
jge
popa
mov
cmp
jl
inc
xchg
dec
xchg
cli
sti
dec
jne
push
lds
int3
gs
jnp
mov
jnp
or
int
in
inc
pop
or
fcom
int
cld
adc
jno
jae
inc
and
pop
mov
or
sub
push
dec
push
mov
sbb
in
into
cmc
scas
jbe
insl
icebp
mov
std
mov
push
add
fsubl
fwait
dec
outsb
inc
leave
add
aaa
adc
ftst
inc
into
push
push
sbb
mov
je
add
adc
insl
sbb
notl
push
inc
scas
stos
or
inc
or
ds
icebp
inc
pop
and
sub
int3
pop
mov
std
shll
insl
mov
lods
fistps
jge
scas
jne
sub
ljmp
push
fbstp
cmp
popf
add
xchg
sbb
xchg
flds
lret
ja
popf
pop
adc
mov
jecxz
sub
pusha
jp
jmp
or
and
xchg
gs
mov
hlt
xlat
pop
mov
int
dec
xor
icebp
mov
sbb
imul
cmpb
insb
sarb
stc
repz
aad
out
mov
bound
push
sub
mov
icebp
pop
fildll
stc
xchg
or
mov
and
ret
jmp
pop
lret
mov
rclb
decb
push
inc
loopne
inc
nop
iret
out
and
movsl
in
lods
xlat
and
scas
sbb
or
adc
jl
loopne
roll
insb
loopne
or
mov
xor
outsl
push
inc
outsb
push
xor
adc
loop
andl
jmp
iret
fmuls
sub
gs
call
xchg
idivl
bnd
push
fisubs
push
js
adc
fdivs
popa
in
shlb
test
ljmp
test
jle
outsl
imul
sub
xor
dec
pop
cmpsl
aaa
cltd
jp
lock
and
xchg
and
sahf
gs
mov
out
xor
shll
ljmp
addr16
dec
movsb
mov
test
adc
xchg
add
fimuls
or
pop
mov
adc
ret
arpl
cmp
mov
mov
inc
push
imul
jo
fcomps
lret
lea
pop
in
mov
mov
sbb
xor
mov
inc
movb
jecxz
push
bswap
test
addl
xchg
cli
in
push
mov
add
push
stos
inc
sub
or
mov
jnp
int
jno
sbb
lock
in
ljmp
rorl
pop
pmaxsw
xchg
or
mov
mov
pop
mov
lds
sbb
lods
mov
icebp
test
mov
xchg
mov
dec
sub
xor
shll
mov
inc
std
xor
mov
inc
push
push
xor
jne
rolb
ficoms
fcomip
add
stc
sbb
in
xchg
xlat
jmp
xor
and
nop
jns
cmp
inc
incb
jbe
dec
and
jns
mov
cltd
adc
sub
cli
pop
xchg
push
stos
insl
jns
sahf
fistpl
mov
call
mov
inc
mov
sbb
or
ss
and
or
ljmp
in
or
pop
and
jmp
xchg
repnz
push
mov
pop
xor
mov
test
and
hlt
mov
mov
cmp
add
test
or
push
cmp
lds
mov
pop
mov
mov
sub
fucomp
pop
fwait
xchg
mov
addr16
push
dec
push
sahf
add
or
cmp
adc
loopne
jmp
cmp
pusha
inc
sub
pop
aad
cmp
popa
int
mov
sbb
mov
push
mov
fisttpl
mov
loopne
mov
dec
mov
xchg
push
test
cld
ja
scas
daa
mov
push
cmc
inc
js
xchg
xchg
popa
pop
or
cmp
pop
mov
xor
adc
aam
xchg
iret
loopne
adc
mov
inc
clc
push
aam
xchg
popf
push
mov
push
stc
lds
out
lcall
dec
gs
push
jp
xor
andb
icebp
bound
outsb
stos
outsb
fs
fldl
jne
add
sbb
mov
mov
stos
and
mov
test
scas
sbb
and
pop
inc
lret
les
cmp
mov
and
mov
pop
mov
add
push
jle
fdivp
les
mov
inc
cmp
push
push
fidivl
sub
daa
jge
fisubs
pop
mov
mov
adc
addr16
cmp
mov
outsl
xor
jmp
pop
es
mov
push
prefetch
cmp
loop
adc
pop
xchg
cmpsb
in
sbb
jg
iret
cmp
jo
mov
or
icebp
push
xchg
fisttpl
dec
imul
push
rorl
faddl
and
xchg
fucomip
mov
hlt
iret
add
das
xor
mov
insl
cmp
fstl
mov
nop
xchg
jno
mov
xchg
push
push
inc
push
out
sti
lret
or
das
sbb
fcompl
mov
stos
push
dec
icebp
sbb
ja
and
outsb
add
jns
lret
push
gs
pop
mov
hlt
adc
or
mov
mov
push
in
das
ds
jmp
nop
aaa
adc
push
pop
fidivs
es
xchg
sbb
xchg
addr16
aam
xor
mov
cltd
mov
out
add
iret
xchg
mov
cmp
je
adc
movsb
mov
xchg
and
or
cmp
xor
sarl
popa
mov
scas
mov
cmp
int3
inc
ja
mov
xchg
sbb
jmp
loop
fwait
rolb
xchg
testl
jbe
icebp
loop
imul
or
pop
pop
aad
dec
pop
in
pop
jmp
fldenv
or
outsl
outsl
sti
lahf
xchg
mov
out
adc
dec
leave
sbb
inc
sbb
mov
jp
cmpsb
mov
fistpll
sti
sahf
arpl
fmul
cmp
test
push
out
inc
pop
insl
lret
jmp
fwait
or
jns
out
inc
enter
xchg
into
mov
xlat
mov
inc
fiadds
in
lods
xchg
repnz
sarb
pushf
int3
xor
jmp
inc
sbb
mov
pop
and
xchg
dec
in
orl
jne
cltd
pop
pop
lock
test
divb
jne
push
pop
xor
and
jo
add
shrl
in
inc
out
sub
and
xchg
pop
xchg
movsl
or
jmp
mov
add
mov
push
mov
adc
push
lods
sbb
nop
xlat
adc
les
mov
dec
jnp
out
push
cmp
movsb
add
leave
aaa
jecxz
and
aam
test
outsb
jne
pop
fsubrs
out
pusha
push
int3
bound
jnp
and
lahf
dec
push
fcmovne
pop
push
mov
jmp
mov
and
inc
cmp
dec
cmp
cwtl
push
xchg
out
xchg
outsb
xor
repnz
mov
orl
dec
mov
mov
in
dec
psrld
add
mov
mov
insb
mov
call
popf
xlat
scas
dec
push
push
loope
in
inc
pushf
orl
xor
aam
cwtl
cmp
movsb
push
jne
lock
cmpsb
cwtl
mov
add
jb
or
pop
pop
out
negb
cmc
sub
jb
or
xchg
imull
xor
call
sub
push
and
jno
cmp
cld
xchg
xlat
pop
in
cld
mov
add
add
into
out
jmp
in
dec
cs
lea
mov
ja
jns
and
inc
out
sbb
les
jae
pop
lret
std
dec
lock
popa
addl
jl
mov
daa
call
sbb
mov
faddl
loop
cmp
sbb
jbe
das
mov
or
out
mov
pop
cmp
add
das
inc
add
xchg
out
lods
sti
ljmp
adc
or
mov
mov
test
jp
call
cld
push
andl
mov
js
xchg
pop
pop
or
fiadds
mov
push
jmp
inc
lahf
out
mov
mov
xor
bound
cmp
mov
pushf
xor
cmc
nop
fdivl
dec
push
ds
push
divb
inc
out
jl
std
dec
andl
out
ds
movsl
test
roll
sub
gs
sub
adcb
ja
mov
repnz
cmp
fisubs
mov
cmp
movsl
cmp
add
out
sbbl
dec
loope
jp
sub
and
das
sub
mov
data16
mov
xchg
and
or
inc
repnz
fwait
add
inc
sbb
out
jbe
cmpsb
das
mov
test
cmp
enter
xchg
and
imul
or
or
jne
fcom
popf
lea
and
outsb
fcoms
xor
lcall
addr16
mov
fwait
pop
xchg
push
dec
xchg
sbb
pushf
pop
jmp
test
scas
push
jae
arpl
fistl
es
pushf
sub
outsl
imul
dec
mov
sbb
adc
xchg
sbb
negl
xadd
cmpsl
push
mov
nop
out
cmpsl
adc
cmc
jno
sub
mull
leave
ja
mov
push
dec
mov
fmuls
add
outsl
shll
xor
jo
aam
inc
shlb
fcos
loop
mov
sub
push
imul
xchg
add
les
ret
int3
outsb
inc
lret
test
iret
lcall
lahf
lea
faddl
xchg
into
pop
sub
sub
ss
cs
pop
decb
out
and
test
dec
inc
mov
jmp
cmp
push
orb
xor
cltd
pop
je
or
int
push
and
and
jne
fsubl
cmp
pop
push
mov
pusha
xchg
mov
push
call
or
push
fsubrs
into
xlat
dec
push
outsl
jmp
lods
dec
movsb
sub
pop
mov
cwtl
sbbl
test
mov
lahf
cmp
dec
clts
gs
add
xchg
push
test
loop
cmp
loopne
sti
shlb
fs
inc
mov
call
dec
adc
cmpsl
jne
xchg
lods
xchg
xor
sbb
dec
cmp
add
xor
dec
rolb
imul
mov
jnp
sub
jge
dec
jns
repz
js
aad
outsl
ret
and
or
mov
push
les
lds
cld
mov
ret
adc
cmp
add
std
sbb
push
clc
sti
sub
lds
int
lahf
push
sbb
inc
in
xor
dec
pop
cld
fwait
mov
bound
lret
ret
mov
dec
xor
lret
and
mov
jns
shlb
test
push
jae
sahf
insb
imul
popa
mov
and
loop
popa
scas
addr16
ret
idivb
loop
push
ss
dec
loop
cmp
jbe
adc
and
mov
cltd
cmp
pop
testb
inc
mov
mov
lock
out
jo
sbb
les
insb
pop
jns
sub
imul
outsb
scas
xchg
aaa
fucomi
shlb
popa
dec
es
fucomip
mov
mov
cwtl
out
sbb
mov
jg
ret
and
insb
outsl
mov
cwtl
mov
pop
fiadds
das
adc
xor
in
daa
push
push
cmp
lods
pop
push
jae
loope
sub
jae
adc
mov
in
les
cmp
jecxz
test
xlat
stc
imul
mov
es
scas
xchg
inc
mov
repnz
sub
mov
in
pop
out
push
cwtl
and
add
mov
fidivl
xchg
fucomp
sub
push
rorb
fwait
pop
lret
cmp
pop
lods
rolb
or
add
mov
push
jae
mov
push
flds
lods
cltd
cmc
inc
ret
test
lret
sar
push
jo
or
mov
sub
xchg
add
sbb
or
enter
arpl
pop
ja
data16
cli
mov
xchg
fdivl
xchg
sub
mov
dec
jne
stos
in
pusha
pop
xchg
popa
cli
push
dec
sub
add
add
sub
and
adc
in
jno
jnp
add
or
push
push
dec
hlt
push
vphaddbq
mov
push
mov
fistpl
sbb
in
pop
adc
in
xchg
test
mov
jnp
loope
and
or
sub
jle
jnp
inc
sbb
dec
xchg
inc
mov
sub
xchg
push
scas
xchg
lock
inc
loopne
mov
mov
nop
negb
xchg
lods
adc
enter
xor
outsb
sti
call
test
add
lods
xor
lcall
aas
xchg
add
lds
push
fimull
in
aam
jae
xchg
loope
gs
daa
decb
mov
cmp
mov
fiaddl
jmp
cmp
imul
xor
aas
ror
out
pop
popa
es
mov
iret
pop
pop
adc
ds
aaa
inc
je
mov
add
idivl
lods
pop
mov
sbb
mov
xchg
es
ret
or
fs
mov
les
add
dec
dec
mov
xor
lea
scas
pop
jnp
std
xor
inc
testb
lods
iret
fsubrs
and
add
adc
xchg
pop
adc
jno
cmpb
jge
movsb
and
sbb
lock
hlt
nop
stos
pusha
loopne
push
out
add
xor
shll
push
shrb
push
es
out
mov
rol
cmp
lea
and
add
in
cmp
cmp
js
xor
clc
pop
rcll
push
push
arpl
mov
and
or
popw
xlat
fnstenv
pop
mov
add
scas
add
ret
sbb
ficoml
jo
cwtl
loopne
mov
in
rcrb
popa
mov
add
pop
mov
mov
aad
je
cltd
mov
loop
adc
pop
stc
sub
xorb
push
cmp
daa
jl
rcrl
cmp
inc
js
out
push
cmpsb
xor
xchg
ljmp
inc
shrb
fcoms
and
insl
xchg
mov
aaa
movsb
adcb
dec
pop
popa
stos
cmp
outsl
xor
sub
aas
xor
xor
inc
mov
dec
push
pop
popa
aad
mov
outsb
jl
mov
lcall
dec
xor
aas
sbb
pop
cltd
add
and
in
cmp
push
cmp
mov
add
fldl
mov
jg
popa
lds
jbe
push
pop
fstps
cmpsl
pop
ficoml
inc
into
repz
dec
xor
sub
pop
test
loopne
mov
js
push
aaa
test
ror
dec
push
add
lods
fistpll
pop
fisubs
not
daa
sbb
int
or
pushf
fwait
je
outsb
xor
xchg
mov
pop
cmp
sbb
mov
or
daa
sub
and
adc
mov
jge
jp
inc
shrb
popf
cmc
jno
jle
insl
xchg
pop
loopne
clc
cmp
mov
shlb
es
sub
movsb
jb
push
or
sub
daa
fimuls
jecxz
out
leave
int3
sub
icebp
sahf
sbb
cmp
inc
pop
fisubrs
loopne
rolb
jl
jp
xchg
jno
int
or
mov
test
fldl2e
jno
jbe
ret
cmp
sub
jmp
add
dec
xor
xchg
arpl
or
sbb
rclb
inc
mov
loopne
dec
or
and
jne
mov
lahf
mov
clc
sti
cmp
daa
out
mov
jne
jecxz
jb
out
lcall
sarb
sub
jmp
sbbl
mov
cmp
jp
adc
inc
cmpsl
enter
or
ret
icebp
mov
shl
call
adc
pop
mov
dec
ret
mov
pop
fbstp
mov
int3
ror
rclb
test
rcrb
inc
mov
or
xor
into
jb
pop
lock
aas
fnsave
pop
dec
push
loope
adc
dec
into
scas
imul
in
dec
inc
mov
mov
jne
jecxz
inc
and
lret
aad
and
sbb
xor
lcall
mov
leave
test
sub
sbb
shl
cltd
imul
stos
push
pop
test
sub
std
dec
sbb
and
push
or
fadd
cmpsb
ss
cmp
out
push
js
les
subl
out
scas
loop
lods
sub
ficoml
add
mov
in
in
fcmovnb
sbb
adc
lret
or
sbb
sbb
std
xchg
pop
push
ss
jno
xor
sbb
sbb
mov
into
out
mov
add
mov
movsb
mov
jp
xor
mov
testb
out
cs
js
in
sbb
mov
sti
cli
sbbb
and
xor
sub
out
mov
sbb
cmp
or
clc
sub
stc
jl
and
jb
cmpsb
dec
mov
out
inc
in
and
and
popa
sbbl
xchg
lret
int3
mov
dec
sbb
mov
imulb
push
or
and
pop
aas
cmp
add
or
out
cli
lcall
mov
rcrl
jne
cmp
test
dec
add
xor
cmp
test
mov
xchg
dec
lds
pushf
push
push
jae
js
or
out
andb
sti
ss
enter
mov
repz
push
js
ss
iret
test
es
movsl
psrld
test
adc
sub
addr16
xchg
inc
xor
dec
sahf
add
mov
popa
in
sub
jb
call
inc
rol
jb
adc
cmp
negl
inc
add
adc
mov
mov
jbe
jg
out
shrl
idivl
mov
mov
aam
xor
leave
cmpsl
hlt
xor
ret
andb
and
add
or
repz
das
adc
imul
push
aad
scas
lock
pop
pop
repnz
xchg
push
adc
in
dec
jl
repz
mov
sub
push
fisttpll
mov
xchg
mov
fsubrl
daa
push
dec
jnp
insl
int
neg
scas
jb
int3
cltd
dec
addr16
lock
in
and
daa
push
mov
pop
inc
dec
stos
inc
bound
aaa
addr16
mov
loopne
xchg
test
lock
call
jnp
mov
push
loope
cld
call
inc
push
jg
jne
mov
repz
stos
cmp
xchg
into
mov
xchg
mov
push
cmpsl
mov
fwait
mov
mov
leave
mov
leave
mov
mov
dec
push
xor
mov
sbb
lods
mov
inc
xchg
push
scas
jae
dec
mov
daa
lahf
js
stos
xchg
pop
mov
sub
shld
pop
push
fld
adc
loope
imul
xor
in
push
mulps
movsb
pop
add
les
push
cmp
cmpsl
sub
cld
cs
inc
jo
subl
jp
add
push
pushf
stc
loope
and
in
mov
int
and
xor
mov
lods
in
xor
mov
in
mov
cld
push
popf
inc
push
jmp
arpl
std
push
dec
pop
xlat
xchg
fadd
sbb
pop
xchg
in
div
loopne
fwait
mov
out
popf
push
fnstenv
pushf
cmp
shll
and
rcr
xchg
mov
and
filds
mull
inc
scas
test
xlat
mov
jns
or
and
cld
cwtd
mov
xor
and
add
adc
in
add
and
sbb
je
pop
and
sbb
jg
xor
mov
cli
xchg
clc
inc
inc
fiadds
mov
mov
sub
or
mov
in
test
jecxz
std
push
lea
add
pop
add
stos
sub
mov
cmp
adc
push
or
jnp
pop
mov
add
xchg
and
sbb
add
dec
mov
pusha
lahf
or
pop
nop
cmpsb
pop
int3
popw
sub
mov
repz
xor
push
icebp
in
add
cli
cmpsb
fwait
imul
ficoml
push
icebp
inc
xor
jl
mov
fs
call
rcrb
popf
cld
mov
pop
fstpl
or
aam
insb
pop
jmp
stos
cmp
push
pop
adc
cmpsl
movsb
sti
inc
dec
aam
adc
jle
inc
add
cltd
adc
add
inc
pop
fwait
pop
mov
scas
insl
repnz
pop
jnp
hlt
loopne
ja
pop
mov
cmp
loopne
jg
jl
xchg
mov
popf
mov
cld
rcrl
jg
pushf
in
repnz
mov
bound
cmp
repnz
or
ss
mov
sbb
imul
and
or
mov
lods
sbb
mov
shrb
ljmp
fldenv
into
or
pop
jp
fistl
xchg
int
ret
decb
or
inc
js
inc
inc
rolb
loope
imul
cli
rol
scas
mov
call
jge
popa
rolb
mov
or
xor
push
sbb
mov
mov
ret
daa
push
jmp
ret
mov
int
js
inc
scas
into
or
sub
out
clc
repz
xchg
dec
push
jmp
arpl
add
testb
cmpb
pop
in
push
or
es
mov
xchg
cmpsl
in
cld
pop
notb
add
fs
jne
dec
or
sub
add
test
jne
or
sbb
xchg
and
mov
xchg
loope
jae
insb
adc
testb
inc
jbe
jnp
and
ret
push
test
fnstenv
and
test
out
imul
lret
fimuls
pushf
test
es
add
and
mov
inc
and
mov
mov
hlt
stos
mov
or
inc
or
jmp
add
or
icebp
ds
push
xchg
or
sbb
adc
es
pop
cmp
mov
inc
push
shrb
sbb
push
mov
add
and
outsl
jle
rolb
lcall
mov
push
test
data16
jne
and
jno
decb
and
pop
adc
hlt
arpl
in
lret
xlat
xchg
pop
dec
test
js
nop
cmp
leave
push
sbb
xchg
test
movsb
xchg
pop
mov
outsb
xchg
fs
mov
ja
std
div
stos
out
push
lods
pop
xor
mov
cmp
cmpsl
mov
mov
or
pop
push
and
fwait
xor
in
sub
out
push
fisubs
inc
ret
enter
cmp
jns
fimull
pop
loopne
and
les
aam
jne
loop
adc
jno
add
cli
dec
daa
pop
jmp
pop
fisubl
xchg
dec
dec
mov
popa
outsl
xchg
lret
xchg
jo
jmp
push
pop
jne
push
bound
in
out
mov
cmp
sub
mov
rorl
mov
jnp
inc
clc
jg
lock
cwtl
mov
or
dec
sbb
or
cs
jmp
xchg
pop
sahf
movsb
daa
inc
shll
bswap
mov
mov
pop
scas
ja
mov
out
scas
pop
mov
daa
fildl
inc
dec
inc
ds
dec
inc
ret
je
shll
aam
jae
lds
mov
lea
xor
scas
add
mov
fldl
insb
decb
push
popa
lcall
mov
cmp
add
xchg
cmp
inc
movsb
arpl
lea
sar
das
mov
out
lods
stos
lcall
test
vunpckhps
je
pop
or
adc
cwtl
gs
jnp
fnstsw
pop
sub
jle
xchg
jb
arpl
add
ja
xchg
pop
inc
lods
jl
add
cmpsl
out
shll
int
fisttpl
push
imul
sbb
inc
adc
in
repz
and
stc
ljmp
mov
xlat
sub
mov
push
adc
lcall
xor
testb
jnp
xor
enter
xor
pop
mov
push
xor
add
xchg
stc
pusha
cmp
fwait
jecxz
xor
pslld
aas
fmull
das
add
sub
pop
cwtl
hlt
mov
nop
imulb
xor
shr
fwait
xlat
ss
rolb
add
sti
xchg
mov
lods
and
pop
pop
frstor
stos
lea
stos
cmp
dec
push
adc
cmpsb
xchg
mov
jae,pn
cmpsb
daa
loop
insb
cli
add
cmp
xchg
fwait
int3
xor
or
pop
cmp
cmp
pop
inc
inc
pop
cmc
pop
data16
mov
pushf
loopne
test
mov
call
call
xor
sub
scas
leave
repz
sbb
loopne
bound
dec
jecxz
pop
clc
add
mov
cli
inc
bnd
push
jb
stos
push
das
adc
imul
push
and
xor
xchg
sahf
inc
add
xchg
pop
fadd
lods
sub
and
mov
or
or
mov
fisttps
clc
dec
in
test
cs
push
or
inc
call
jmp
loop
xor
push
cmp
mov
mov
jbe
inc
or
sbb
push
and
pop
mov
inc
sbb
ds
cmc
push
ds
add
ja
loop
pusha
sbb
sbb
or
lcall
jp
out
jne
arpl
mov
jno
int3
rorb
sub
dec
push
sub
sti
mov
ret
loopne
int3
xchg
cmp
sub
imulb
lds
push
xchg
dec
fwait
scas
cltd
adc
sub
int
cld
sbb
cmpsl
xchg
popa
outsb
fldcw
in
cs
cld
enter
aad
scas
fsubl
lock
fadds
repnz
das
clc
xchg
xchg
sar
aaa
imul
cmc
xchg
jl
xchg
jb
inc
mov
push
inc
pop
fcoml
or
or
iret
mov
gs
pop
xor
int
inc
add
test
lock
mov
mov
mov
pop
bndstx
cld
sahf
add
imul
jmp
pop
mov
pop
add
xor
test
sar
sar
ret
lret
test
xor
jl
cmp
jge
mov
cltd
cmpl
push
push
inc
sbb
std
or
jbe
mov
jl
add
lea
dec
lret
fisttpll
out
jle
sbb
es
mov
xchg
loopne
aaa
fcompl
aas
pop
cltd
aaa
out
mov
add
loopne
aad
test
fidivl
mov
push
pop
adc
xchg
subl
jl
fiadds
stc
xor
fisubrs
push
pop
sbb
or
xor
pop
lret
sub
mov
pop
mov
jle
jl
xchg
jno
mov
aam
cmpsl
ret
test
mov
loopne
sub
in
outsb
popf
inc
nop
outsl
clc
aam
jmp
xor
ret
lret
fbstp
mov
iret
je
jge
fucom
mov
adc
jbe
inc
mov
push
pop
cs
leave
lds
outsl
xor
xchg
cmp
adc
mov
fldt
outsb
and
subb
xor
loop
repz
jae
dec
xchg
notl
mov
or
pop
or
pop
lods
rolb
ds
xchg
aas
movsl
fisubs
sub
jecxz
pushf
push
cmpsl
sub
mov
xchg
mov
push
cmpsb
xor
in
mov
mov
push
sbb
jl
xchg
icebp
insb
popf
or
arpl
xor
sahf
jle
lock
mov
sbb
lds
shll
icebp
and
sbb
mov
push
mov
or
rorl
or
sbb
push
leave
sub
addr16
cs
jg
nop
and
bound
inc
and
pop
incl
dec
stos
pop
loope
testb
adc
mov
out
push
xor
pop
add
xor
xor
lcall
outsb
into
iret
mov
push
fs
mov
test
addr16
jg
call
test
sub
mov
and
scas
and
xchg
pop
inc
mov
out
shrl
add
in
pop
jecxz
or
jp
xlat
cmp
into
aam
jns
stc
and
adc
lea
insb
js
test
lods
lods
mov
xor
fcmovnb
cmp
jge
les
dec
mov
fcmovu
mov
xor
cmp
mov
into
mov
or
repz
xchg
lret
dec
pop
pop
nop
iret
jb
clc
inc
jg
mov
loopne
push
xchg
and
inc
add
cmpsb
inc
fsubrl
mov
adc
cwtl
pop
cwtl
clc
dec
loopne
push
popf
int
lods
popa
xchg
int
cli
xchg
mov
iret
adc
js
loopne
test
jmp
push
dec
lea
andl
imul
inc
int3
arpl
pop
mov
out
cmp
lds
bound
push
shl
xchg
mov
enter
mov
sti
add
in
bound
jmp
or
lds
push
push
lret
es
jne
push
daa
push
mov
push
roll
cmp
lods
fisubrl
aad
insl
push
jne
in
insl
icebp
sub
mov
adc
out
push
cmp
lock
stos
lcall
xor
add
stos
xchg
mov
imul
jl
cmp
cli
idivl
aam
mov
mov
mov
jne
sbb
cmp
mov
in
negb
mov
dec
push
xchg
ret
dec
inc
mov
imull
lret
pushf
pop
lret
add
rolb
testb
xor
inc
ficompl
leave
mov
sub
mov
push
adc
cmpsl
mov
popf
mov
xor
mov
push
je
jmp
dec
mov
inc
lods
int3
xchg
pop
cwtl
or
mov
test
orl
pshufw
fistpll
pop
clc
xor
lods
jle
icebp
xchg
stos
jg
dec
les
jmp
lods
jl
fldt
ret
mov
pop
pop
push
pushf
push
cmc
popf
mov
sub
xchg
cld
test
fsubrl
rclb
mov
pop
sbb
nop
les
jno
mov
and
sub
je
lahf
mov
cmpsl
adc
push
xlat
add
jp
sbb
test
sub
xor
movsb
sar
dec
out
movsb
push
sub
clc
xor
pop
loope
or
or
or
cmp
fldenv
jns
mov
loopne
call
cmpsl
test
and
add
das
push
jle
adc
lcall
cmp
lret
sbb
xchg
ret
cli
dec
pusha
xor
fsts
or
and
shlb
addb
pop
sub
popa
flds
mov
cmpsl
iret
inc
or
xor
into
int
rcll
int
arpl
mov
xchg
xchg
and
sub
xor
inc
shrb
sub
fxch
cmp
add
xchg
scas
and
repz
imul
data16
push
fmul
fwait
imul
dec
jbe
stos
into
dec
adc
and
movsb
dec
arpl
cmpsl
xor
xchg
pusha
sbb
sbb
pop
jne
xchg
inc
push
xchg
iret
popf
outsl
push
repnz
wrmsr
mov
push
je
fidivs
lea
adc
sub
pop
sbb
push
enter
stos
mov
imul
pushf
jbe
and
pop
inc
push
aad
pop
mov
iret
xchg
scas
clc
pop
inc
jno
popf
sbb
sub
inc
je
xlat
fmull
lret
sbb
jnp
sub
jmp
ffreep
lods
lods
push
and
or
push
mov
xchg
test
jp
and
test
jbe
push
ffree
and
adc
jns
mov
add
jmp
in
inc
call
push
jp
in
outsl
push
hlt
or
scas
or
aaa
or
jb
popf
daa
in
in
add
push
push
sbb
loopne
fisttpl
xor
xchg
rcl
sbb
pushf
jg
cmpsb
imul
js
movsb
fwait
push
push
fsts
and
cmp
stos
test
pusha
fcompl
gs
xchg
pop
rcrb
push
mov
xchg
inc
jp
cltd
movsl
sbb
jbe
xchg
hlt
and
outsb
test
xchg
out
mov
pop
mov
mov
insl
push
cmpsl
jecxz
fxch
js
and
aam
mov
push
cwtd
imul
js
adc
or
jle
scas
pop
pop
cmp
mov
cmp
mov
mov
bound
mov
xor
push
inc
inc
in
mov
lds
xchg
adc
cmp
sahf
jg
clc
sbb
ja
movsb
sub
jp
or
imul
mov
xlat
jnp
dec
xor
xchg
xchg
aaa
aas
inc
and
adc
mov
into
jecxz
out
aam
cmp
sbb
dec
imul
adc
dec
rclb
cmc
or
loopne
sub
lods
stos
push
in
xor
and
imul
mov
or
jge
push
out
sub
popa
rcl
cwtl
out
cli
bnd
cmp
bound
es
add
lods
jecxz
mov
nop
pop
insl
sub
inc
xchg
shrl
flds
fs
pop
pop
inc
mov
in
push
pop
ljmp
xor
and
ret
aad
mov
aas
inc
xchg
mov
movsl
pop
xchg
push
adc
mov
adc
mov
mov
iret
jp
outsl
andl
repnz
jne
jmp
sahf
inc
iret
mov
dec
addb
pop
xchg
test
pop
mov
dec
nop
cmp
jge
push
test
sub
push
push
sub
lock
pushf
out
gs
fnstenv
ror
dec
pop
test
push
stos
xor
cwtl
cmovbe
js
incb
outsl
inc
shll
xor
leave
stc
push
mov
push
shrl
jmp
in
aam
dec
cmpsb
xor
cmp
add
scas
pushf
loopne
mov
jnp
popa
inc
dec
xor
mov
stc
sub
and
aam
fcmove
cmp
xlat
shrb
in
push
xchg
imul
mov
fcoml
pop
shrl
ret
cmp
daa
fstpl
in
loope
jne
ljmp
mov
mov
jae
out
jmp
scas
insl
xor
cmpb
or
rcrb
popa
jp
pop
xchg
movsb
cld
std
std
rcrb
cmp
and
test
js
cs
test
mov
ret
subb
dec
sub
lock
add
pushf
aaa
mov
arpl
bound
aad
repz
jle
fistpl
xchg
mov
jne
call
and
enter
ja
xchg
jne
gs
or
jne
jl
fsubs
xchg
divb
loop
dec
into
movsb
sub
ljmp
adc
jp
sbb
or
jmp
fisubl
lahf
mov
dec
cmp
adc
sub
jne
dec
in
iret
add
inc
scas
xor
push
enter
sub
addr16
into
mov
lcall
xor
inc
mov
push
mov
xchg
xchg
jecxz
push
lcall
mov
sti
stos
cwtl
and
inc
movsl
cmc
jb
imul
add
ss
pop
adc
xchg
int
ds
out
jmp
loopne
fdivr
loopne
lret
sub
xor
test
push
mov
push
je
addr16
cmp
sbbl
in
int
mov
xchg
scas
sub
jne
xor
loop
pop
pop
sahf
movsb
pop
cmpsb
int
notb
xchg
lods
mov
add
pusha
add
out
pop
mov
add
cmp
cmp
mov
das
pop
jbe
cmp
xchg
jo
mov
shr
xor
jbe
xchg
jb
jne
sub
add
push
mov
pop
popf
scas
pop
out
mov
mov
inc
jns
ret
mov
cmpsb
mov
mov
testl
push
fldl
and
jno
cmc
cmp
or
scas
or
lret
inc
add
arpl
push
pop
xchg
insl
xchg
mov
sbb
mov
scas
jge
add
push
pop
push
popa
out
rorl
leave
or
sub
fucomi
mov
mov
inc
gs
sub
daa
push
jp
js
mov
push
mov
jecxz
jmp
jmp
xor
repnz
dec
test
rcr
adc
cmp
ret
rorl
mov
sub
decb
ljmp
data16
xchg
adc
pop
push
sbb
lret
sub
mov
lahf
pop
sbb
lret
xor
xor
insb
mov
mov
call
mov
cli
jg
and
sbb
adc
lock
out
add
jb
ja
popa
outsb
push
mov
ss
inc
mov
lods
stos
xchg
xchg
lods
cli
pop
insb
mov
ss
ljmp
push
xor
and
xor
aaa
mov
jmp
sbb
xchg
lds
pop
aad
mov
xchg
inc
push
in
jp
ret
int
loope
inc
hlt
fs
push
popf
stos
cmp
sub
jmp
hlt
ret
cmp
shl
mov
jle
xlat
sub
sbb
cmp
or
ljmp
nop
mov
dec
mov
pop
cmp
bound
fs
clc
pushf
adc
test
jmp
push
dec
clc
ret
sbb
ss
cmp
scas
cwtl
int3
push
call
stc
and
pop
push
lret
inc
lods
mov
int3
imul
xchg
mov
xchg
cmpl
pop
out
pop
fcmovb
push
mov
pusha
xchg
mov
sub
sbb
jbe
dec
loope
jg
pop
push
cmpsl
mov
out
mov
xor
fcoml
cs
sti
ret
dec
dec
sub
xchg
ss
adc
repnz
icebp
outsl
mov
call
test
fsub
adc
arpl
jns
int3
shll
insb
js
xchg
mov
dec
movsl
sub
sbb
xchg
imul
popf
mov
cmpsl
lods
xor
mul
mov
xor
pop
mov
push
rol
jno
mov
bound
jle
mov
iret
aaa
sbb
movsl
jg
cli
or
jecxz
addl
insl
or
or
movsb
add
or
cld
push
jmp
push
iret
ljmp
mov
rolb
lcall
push
mov
lahf
push
rcl
lahf
push
daa
stos
push
pop
mov
pop
pop
jl
pop
dec
xor
jmp
stc
mov
dec
xchg
mov
jl
sbb
popf
cs
cmpsb
push
and
push
in
xor
jnp
cmp
push
cld
out
test
cwtl
mov
xchg
cs
mov
cmpsl
push
jle
push
fucom
jnp
incb
out
pop
cmpb
or
push
adc
inc
pop
sti
xor
sbb
cmp
mov
or
lods
fisubl
int
jnp
mov
push
fs
sti
movsb
or
enter
fsubl
push
xor
xchg
shll
pusha
imul
push
inc
repnz
test
push
repnz
loopne
pop
push
sahf
sub
inc
fs
lret
mov
inc
xlat
stc
fldenv
pusha
pop
ret
rcr
pop
loopne
shl
ret
pop
lods
mov
xor
push
pushf
push
and
or
xlat
insb
jo
adc
lods
add
mov
bswap
xchg
mov
test
push
aaa
lret
adc
cmc
jb
std
aas
push
jne
outsb
lcall
cld
jbe
add
aas
std
pop
inc
inc
sti
insl
xor
repz
adc
or
rcrb
xchg
scas
in
sbb
sbb
jbe
add
nop
movsb
cmc
jl
ljmp
scas
ss
and
lock
sub
mov
ror
cli
xchg
push
add
aad
cmc
cmp
loop
pop
ss
es
push
cmp
ret
push
test
mov
cwtl
mov
inc
js
xchg
testl
xchg
ja
xor
mov
push
and
push
sub
cli
inc
in
inc
sbb
nop
push
or
bound
inc
ss
mov
clc
sbb
negl
out
mov
jmp
xchg
adc
pop
inc
mov
jae
out
pop
xor
pusha
inc
into
dec
mov
add
fwait
add
xchg
imul
outsb
mov
jmp
ror
pop
xchg
jae
stc
mov
cmc
mov
out
in
and
xor
push
fists
cmp
mov
jge
shll
fs
mov
fs
mov
pop
inc
pop
and
cs
nop
dec
fisttpll
push
push
xor
jae
xor
jmp
icebp
loopne
adc
out
in
in
adc
lods
mov
or
cwtl
pop
push
mov
movsl
addl
or
xchg
pop
icebp
mov
test
sub
push
cld
test
cmp
jo
insb
scas
aad
cltd
movsl
in
inc
or
pop
das
jbe
mov
adc
sbb
mov
cli
leave
or
adc
xlat
mov
arpl
and
mov
xor
mov
mov
xchg
lock
fdivl
in
jne
das
mov
pop
push
mov
aaa
sub
pop
xchg
cwtl
jne
lahf
cld
mov
inc
scas
lock
inc
mov
rcrb
push
sahf
cmp
or
or
lods
cmpsb
pop
fnstenv
testb
inc
sbb
sub
out
cld
pop
movsl
pushl
fsubrs
into
xor
sbb
mov
insl
int3
mov
xchg
jmp
out
movsl
push
test
push
push
loop
lcall
repz
dec
test
scas
jl
lahf
mov
test
movsb
sub
mov
vmwrite
mov
arpl
add
dec
aaa
jbe
leave
sub
aad
pop
inc
stc
add
sub
dec
push
insl
roll
mov
popa
mov
stc
aam
sbb
sub
cmp
aam
pop
cmp
lret
push
stc
mov
test
push
cs
push
int3
idivl
dec
dec
jl
add
shrb
movl
fucom
cmpsb
sub
adc
xor
jae
pop
mov
cmp
icebp
aad
push
jp
dec
lods
and
incl
enter
orl
pop
rolb
ss
sbb
movsb
addr16
push
js
xchg
cmp
adc
push
mov
push
jne
ficomps
or
lock
cmp
xchg
jecxz
stc
mov
pop
fwait
lahf
dec
cmp
aam
imul
dec
loopne
out
call
insl
pop
jnp
inc
ficompl
pop
mov
pop
sub
jnp
pop
xchg
dec
or
nop
xchg
shr
shl
mov
ret
pop
mov
mov
nop
stos
mov
enter
cltd
adc
hlt
es
pushf
outsb
lea
adc
push
xchg
xor
xchg
mov
add
andb
in
pop
xchg
lods
shr
and
jo
mov
and
ljmp
jge
shll
mov
jo
lret
out
jns
push
insl
pop
jp
rcrl
jne
movsb
mov
pop
mov
adcl
xchg
push
jo
cmp
and
inc
sbb
jg
cmpsl
stos
cs
mov
adc
adc
pop
test
pop
int3
scas
mov
out
call
sub
test
mov
adc
and
mov
lcall
ds
in
jle
xlat
mov
lcall
pop
xchg
ja
dec
iret
out
addr16
jb
fldt
in
loopne
outsb
xchg
mov
out
lea
jmp
mov
xchg
cmp
xor
mov
popf
fidivrl
cmc
mov
push
push
ljmp
push
imul
cmp
popa
mov
pop
rclb
mov
jl
dec
roll
jne
mov
sahf
sbb
pop
out
pop
or
shlb
addr16
xchg
inc
xlat
xchg
int3
aaa
lock
fwait
popf
leave
and
and
push
inc
xchg
sbb
push
and
test
add
mov
test
hlt
lcall
fildl
pop
jno
fistpll
or
stos
mov
lock
std
jae
jb
pop
imul
cmp
test
sub
rorb
push
enter
mov
je
sbb
dec
imul
and
dec
pop
je,pn
cmp
jbe
jns
fdivr
nop
jns
jbe
addr16
rorl
bound
bnd
or
push
or
push
adc
dec
push
pop
push
gs
mov
aas
push
xor
mov
cmp
sbb
outsb
aad
and
jle
clc
jae
lret
xchg
lods
push
mov
ret
pop
insb
js
mov
adc
mov
jne
push
xor
iret
cld
pushl
inc
jmp
jno
out
je
jg
das
sbb
xlat
ds
inc
push
lock
sub
xor
mov
icebp
rol
test
and
cmpb
shlb
inc
notl
sub
and
pop
stc
mov
push
xor
movsl
rol
insl
sbb
mov
mov
rcrb
ficomps
aam
arpl
fs
xor
aad
mov
fildl
fbstp
inc
jg
mov
loop
lea
testb
neg
push
in
fsubrs
sub
inc
loop
call
jo
pushf
and
daa
mov
hlt
xor
cmpsl
test
lods
inc
add
jbe
pop
ret
push
sti
xchg
cmp
outsb
cwtl
roll
push
dec
cmpl
ret
sub
add
ret
fnstsw
scas
iret
lods
push
stos
ret
ss
jae
fbstp
test
sbb
sbb
repz
pop
cmp
pop
cmc
jmp
rcl
mov
not
and
std
movb
in
stos
shlb
sbb
xor
or
insl
popa
push
bound
inc
ja
inc
and
adc
je
cs
lock
xlat
lods
popa
cli
and
fdivl
jmp
int3
mov
enter
lret
mov
hlt
push
xor
inc
out
daa
fs
xchg
shlb
dec
push
inc
mov
ja
pop
sbbb
pop
add
enter
stc
ja
in
imul
jns
rcl
sbb
imul
sti
int
call
jp
shl
add
adc
lahf
out
xor
aaa
xor
pop
sbb
fisttps
lds
pop
inc
loop
pusha
lret
jmp
daa
not
inc
adc
cmp
dec
notl
mov
rorl
mov
inc
push
test
inc
int3
mov
add
push
repnz
jg
adc
popf
lcall
fs
mov
test
nop
cmp
xor
loope
jp
test
js
fidivl
and
push
cltd
aad
ret
cld
pop
arpl
push
gs
xor
pop
jp
sub
mov
jge
sbb
adc
cld
fcomp
shrb
fs
jmp
ret
fidivl
lcall
stc
jno
fisttps
and
sub
bound
mov
xchg
dec
ljmp
xchg
rol
mov
cmp
scas
sbb
mov
push
enter
or
mov
xchg
fmuls
insb
sub
push
ss
mov
arpl
pop
sbb
adc
xchg
push
imul
in
cmp
aad
adc
lods
push
mov
push
sbb
sbb
adc
scas
stos
out
xchg
mov
jnp
pop
push
adc
or
xor
jl
and
adc
shll
jg
mov
pushf
adc
out
sbb
pop
push
mov
ss
call
mov
mov
std
mov
arpl
or
int
shll
inc
scas
adc
filds
loopne
je
sar
int
push
lea
popl
iret
pop
mov
cmpb
outsb
andps
sbb
push
xchg
sub
mov
iret
int
sub
idivl
adc
mov
lds
dec
pop
push
cli
js
cmp
adc
adc
sub
mov
mov
popa
pop
and
stos
jge
out
push
es
std
stos
iret
lret
icebp
push
sub
outsb
or
aas
into
sub
fs
mov
xchg
or
or
dec
sbb
mov
fisttpl
sub
dec
mov
xor
xor
call
in
out
jne
stos
test
popa
ret
sbb
mov
xchg
stc
mov
bound
inc
shrl
cltd
xchg
test
mov
data16
insb
mov
into
inc
pop
scas
loopne
mov
mov
pop
cltd
shlb
sbb
mov
icebp
enter
loop
movsl
pushf
push
pop
xchg
and
imul
hlt
xorb
jo
jo
pusha
aas
lret
into
sbb
mov
push
xorb
or
push
lds
mov
mov
sbb
imul
add
jge
lret
hlt
pop
jp
out
ljmp
ret
mov
andb
cmpl
ljmp
jno
add
jno
cmp
pop
cli
jno
jb
int
repnz
dec
lahf
and
cld
jno
pop
std
repz
fisubs
mov
mov
adc
flds
mov
adc
dec
arpl
jne
jb
inc
jns
movsl
mov
sub
adc
and
or
insb
test
lock
ret
insl
lret
inc
into
xor
jg
or
mov
jnp
out
movsl
or
imul
push
inc
lahf
pop
mov
add
push
pop
mov
push
adc
push
stc
pop
les
xor
mov
fsub
leave
out
cmp
lret
push
pop
push
xor
mov
pushf
ljmp
out
negl
movsb
repnz
insl
jae
test
test
xchg
je
xchg
cmp
scas
repz
cs
nop
enter
or
fwait
xchg
shl
sbb
fs
inc
iret
in
push
dec
inc
xchg
push
xchg
nop
mov
cmp
jb
inc
lahf
test
mov
lods
inc
mov
imul
adc
pop
push
sahf
jo
mov
jmp
mov
xor
dec
sbb
int
test
jbe
mov
push
aad
lea
xor
mov
pusha
fwait
insl
jno
jle
jae
pop
fisubrs
and
push
adc
mov
jecxz
cmp
pop
scas
inc
xor
fstp
in
push
mov
lret
fsts
sub
push
bound
cmc
test
mov
aam
jl
shrb
rorl
outsb
cwtl
test
sub
hlt
and
aad
adc
inc
ljmp
fidivl
xchg
xorl
loop
push
inc
pop
loop
stc
addl
pop
stc
ficoml
fs
jns
or
jl
das
jo
iret
or
mov
dec
mov
pop
pop
ret
add
pop
sahf
repz
jae
mov
jns
xchg
xchg
fnsave
adc
pop
dec
ficoms
jmp
and
icebp
jmp
dec
cmp
lock
dec
out
fucompp
and
cmp
fisttpl
shll
ret
dec
mov
jae
inc
mov
mov
dec
cmp
je
in
cmpsb
cli
xchg
aas
fidivs
push
xchg
std
lods
ret
movsb
outsl
loope
xor
lret
loop
jno
mov
mov
jecxz
sbbl
cmp
lret
xor
in
mov
xchg
xchg
scas
and
mov
sbb
sbb
xchg
mov
jge
pop
sub
shlb
jb
pushf
pop
pop
mov
jmp
adc
repz
or
mov
adc
ds
or
xchg
cwtl
mov
mov
movsl
stos
cmc
insl
adc
jbe
mov
mov
xchg
cld
sbb
pop
repz
sar
fdivrl
push
mov
js
mov
jae
push
jae
sbbl
and
out
jo
xchg
mov
jl
xor
xlat
ret
and
scas
adc
sbb
outsl
jns
je
je
std
adc
pop
in
jg
and
jle
xor
mov
sbb
sbb
adc
sbb
adc
inc
sbb
inc
mov
xchg
mov
cmp
mov
or
push
mov
xchg
jecxz
or
leave
popa
decl
or
cs
mov
lods
test
pusha
data16
lods
dec
jl
andb
inc
cmp
pop
ds
push
push
mov
insb
fnsave
push
add
cmp
js
js
test
push
mov
cmc
jne
or
xchg
mov
dec
call
int
xchg
icebp
int
cmc
movb
xchg
cmp
imul
iret
xchg
jg,pt
cli
clc
push
jg
inc
ljmp
jle
sub
inc
int
dec
jb
loope
mov
pop
test
in
mov
mov
push
xchg
jle
pusha
dec
ljmp
mov
repnz
jae
sarb
loope
test
clc
mov
cmpsl
fldenv
out
shlb
dec
inc
into
loopne
int
test
xchg
pop
dec
pusha
repz
int3
inc
ss
shrl
es
xchg
sti
out
sub
mov
fdivrp
mov
push
mov
mov
xor
stos
adc
mov
lahf
aam
adc
pop
or
test
adc
hlt
in
hlt
jecxz
or
xchg
dec
mov
mov
addr16
movsb
in
sub
or
enter
pop
mov
mov
inc
lds
jle
call
lea
sub
stc
ja
or
sahf
data16
pop
ja
mov
shrb
in
xchg
push
pop
xchg
fwait
xchg
out
lock
push
out
sti
lret
dec
mov
cmp
push
mov
dec
lret
and
rclb
sbb
mov
stc
cmp
adc
aas
adcl
lcall
fnstsw
fadds
or
push
push
lret
dec
arpl
jb
mov
pop
bswap
jmp
pop
arpl
push
jge
add
lret
xchg
icebp
or
mov
into
and
mov
mov
xchg
enter
xchg
sub
dec
imul
xchg
push
cmp
or
test
dec
cmpsb
push
xchg
fsubs
dec
pop
lahf
xchg
or
movsb
dec
rclb
cmp
shlb
inc
dec
pop
insl
mov
call
stos
and
sub
cwtl
jmp
imul
sub
pop
neg
lcall
outsb
outsl
gs
xchg
arpl
add
in
out
jb
inc
arpl
push
arpl
loop
shl
scas
mov
sbb
push
pop
pop
push
pop
stos
aam
mov
mov
jne
inc
jl
fsubl
ret
sbbl
mov
lea
rcll
push
out
mov
mov
scas
scas
mov
call
inc
pusha
std
arpl
add
cmp
inc
mov
push
hlt
xor
out
ret
push
jmp
cmp
sub
lahf
xchg
sub
pushf
adc
cmp
sbb
nop
push
jno
js
jae
sbb
je
rcr
repz
stc
adc
scas
cltd
xchg
and
xor
mov
fstpl
hlt
scas
xchg
into
div
testb
cmp
mov
repz
push
loopne
adc
add
mov
daa
dec
mov
lret
mov
mov
loope
xchg
out
fisubrl
insb
insb
insb
aad
hlt
sub
inc
and
pushf
adc
lret
jecxz
sub
inc
mov
add
and
mov
ss
cmpsb
push
cmp
in
xchg
and
pop
xor
cwtl
jp
xor
lods
mov
stc
call
dec
push
mov
jp
scas
jmp
mov
fiadds
pop
mov
mov
hlt
push
mov
and
cmp
fs
push
pusha
in
sahf
stc
out
mov
jg
push
hlt
outsl
ret
lahf
xchg
pop
fldt
sbb
sub
cmp
js
sbb
xchg
mov
jl
pop
mov
inc
add
fstl
neg
mov
dec
cli
notb
out
adc
fcmovnbe
je
daa
adc
imul
xchg
jno
cmp
mov
lea
test
stc
cmp
adc
pop
push
dec
or
sbb
cs
movsb
cmp
loop
fmuls
jns
mov
outsb
pop
xor
or
sti
push
inc
xchg
xor
aad
mov
push
push
fstps
into
jle
push
fwait
iret
xchg
jg
bound
loop
sbb
movsl
in
out
mov
push
ljmp
bound
jmp
jnp
xchg
iret
stos
xchg
push
stos
or
nop
lahf
ret
cmp
popf
imul
addr16
inc
mov
mov
shl
jb
jno
cmpsl
sub
rolb
and
mov
pop
imul
mov
cld
pop
xchg
clc
jle
xor
jle
pusha
ret
push
add
mov
add
jmp
js
add
jns
inc
dec
and
movzwl
cvttps2pi
leave
ss
call
or
jecxz
sub
and
cmp
mov
jno
xor
fwait
mov
push
mov
and
mov
stos
push
push
pop
mov
or
bound
outsb
inc
xor
lret
test
xlat
mov
pop
fs
sbb
cmp
fdivl
inc
aas
xchg
xor
mov
cld
scas
gs
js
add
jle
sub
mov
inc
sbb
inc
in
cmp
mov
cld
xchg
jmp
and
cld
shlb
mov
aaa
in
mov
mov
mov
out
lret
xchg
push
sbb
mov
jge
xor
sbb
repz
gs
je
pusha
pop
mov
testl
pop
int
xchg
fcomip
outsb
aas
mov
sbb
sbb
sbb
jl
std
jge
fimuls
adc
jmp
cld
pop
enter
lock
ficomps
push
clc
xchg
fsubrp
sub
out
pop
push
mov
push
push
adc
call
js
inc
push
hlt
ficoml
std
xorb
jnp
in
iret
daa
add
popa
push
lret
repnz
dec
fwait
repz
push
push
or
push
sub
mov
and
mov
int
aam
call
pop
push
add
dec
je
insl
stos
cmp
adc
inc
sar
add
pop
outsl
fxch
jnp
xor
icebp
jmp
pop
push
or
dec
je
xor
filds
inc
cmpb
sub
inc
cmpsb
xor
xchg
cwtl
sbb
lret
test
ficompl
jecxz
lock
lods
jecxz
inc
rorl
cmp
xchg
repz
sbb
sbb
popa
rorl
mov
push
or
mov
jecxz
enter
rclb
aad
sbb
leave
sbb
mov
outsb
push
push
pop
dec
cmp
or
mov
push
mov
shrl
out
les
shr
cmpsl
in
mov
mov
mulb
std
or
push
push
aad
bound
ljmp
xchg
jp
adc
lds
adc
lods
xor
fcmovne
xchg
fdivs
cmp
sbb
adc
push
sbb
lret
jp
dec
mov
sbb
hlt
push
fdivrs
lret
test
mov
adc
mov
mov
addr16
jb
ds
cmp
lock
push
mov
sbb
sub
popf
cltd
shlb
sbb
or
mov
not
ds
cmp
sarl
scas
ja
ja
mov
jp
adc
cli
repnz
xchg
cld
mov
aas
shlb
and
mov
aam
inc
xchg
sub
lock
jno
adc
and
jnp
add
adc
ljmp
push
mov
cmp
push
xchg
push
divl
fnsave
sahf
fidivrs
mov
push
mov
pop
adc
inc
cmp
sub
ja
clc
insl
loop
add
arpl
push
or
test
fcoms
cmp
jns
pop
inc
mov
sbb
mov
xbegin
lods
adc
mov
inc
push
stc
inc
jmp
jo
mov
sbb
bound
int3
popf
mov
aas
jnp
popf
push
sub
es
and
inc
icebp
lahf
test
addr16
pushf
int3
xchg
cmp
dec
mov
movsb
fisubs
mov
mov
jecxz
xlat
sub
jl
ret
jae
mov
push
inc
lods
add
repz
movsl
cwtl
clc
das
push
add
dec
dec
sbb
daa
hlt
mov
clc
aam
lods
jb
arpl
xor
pop
cltd
out
fsubs
loopne
jl
enter
pop
inc
sbb
push
adc
scas
jl
jp
jle
push
lahf
mov
lea
out
pop
xchg
lods
or
dec
mov
int3
aaa
addr16
pop
sbb
push
or
pushl
mov
xor
jbe
ficoml
daa
std
lret
mov
fs
lock
dec
aas
movsl
pop
lods
roll
cltd
aam
lods
insb
out
test
mov
pop
loope
mov
xor
movb
mov
das
add
faddl
sbbb
hlt
or
push
sbb
cmp
mov
push
add
add
jecxz
xor
and
adc
mov
jp
and
jnp
add
pop
cwtl
lret
aam
ret
mov
sbb
ds
jp
fwait
and
insb
sbb
xor
out
shrb
jbe
dec
movb
std
aad
pop
mov
push
push
lods
lret
and
xor
add
and
decl
pop
bound
inc
add
sahf
pop
xor
fistpll
iret
inc
or
push
adc
push
add
enter
in
jnp
add
or
push
inc
sub
mov
or
lea
push
lds
xor
push
mov
fwait
or
stos
rclb
aas
hlt
pop
jecxz
roll
negl
jp
fwait
out
cmp
nop
fsubrs
pushw
mov
xlat
test
ja
mov
or
push
ret
cli
pop
shlb
xchg
std
sti
aad
mov
scas
lds
cmp
popa
xchg
mov
sbb
jl
lea
sbb
add
cmp
cmp
sub
loopne
push
decl
stos
add
das
cld
aad
rcr
xor
and
inc
xchg
test
push
xor
in
mov
pushf
popf
adc
xor
mov
pop
int
cltd
sti
shl
add
idiv
mov
fisubrl
fidivl
cmp
push
test
loop
jecxz
adc
cmp
lea
mov
jno
mov
mov
and
pop
mov
mov
ss
hlt
dec
sbb
push
outsl
and
pushf
jg
push
nop
adc
pop
push
cmp
xor
push
jg
movsb
cmp
or
popa
cmp
sbb
jecxz
test
scas
xor
mov
xor
jmp
cmpsb
or
mov
in
aam
jns
xor
popf
movsl
jnp
js
outsl
jmp
arpl
dec
call
pop
push
in
dec
cmp
fidivrs
pop
mov
mov
mov
inc
mov
nop
jmp
cmc
imul
in
inc
push
stos
lock
dec
push
jl
or
xchg
out
popa
or
or
pop
inc
mov
aas
inc
pop
sbb
push
scas
cwtl
sahf
xchg
mov
jae
cli
jge
jbe
pop
push
scas
and
stc
cmp
dec
stc
push
mov
and
fwait
mov
jnp
xchg
lcall
aas
arpl
xor
pop
mov
jmp
push
dec
rcrl
mov
shll
xchg
lret
in
mov
lea
mov
in
fdivrl
push
pop
lea
ficoms
jl
mov
mov
xchg
aas
mov
ficoml
and
es
sbb
sbb
ret
ljmp
xchg
push
or
gs
sbb
or
xor
loope
cmp
and
xor
sbb
frstor
ljmp
add
mov
gs
inc
fsubs
cld
mov
sahf
insl
sub
mov
pop
and
mov
lret
fstps
pop
and
data16
pop
adc
dec
ds
mov
bsf
rorb
mov
cld
jge
and
add
lahf
out
or
mov
jge
ret
mov
jbe
pop
mov
inc
in
and
cmp
test
push
clc
dec
nop
mov
adc
jmp
and
mov
mov
mov
xchg
fcompl
xchg
pop
mov
stos
push
adc
mov
sti
cmpl
push
out
ljmp
popf
sbb
push
rcl
push
loop
jae
jbe
xor
pop
xchg
fwait
or
push
inc
cmp
jno
mov
adc
mov
lea
xor
imul
mov
push
jns
fs
dec
leave
insb
push
inc
pop
xor
mov
add
sub
clc
sahf
dec
dec
lods
jne
sub
fdivr
sbb
mov
push
shll
outsl
dec
in
dec
popa
sub
cld
lds
mov
subl
cmp
sbb
fs
adc
sub
or
xor
rcrb
es
xor
dec
jo
jle
rcrb
inc
sub
daa
in
mov
clc
push
mov
xchg
mov
lahf
stc
jae
pushf
imul
xchg
sbb
in
out
mov
gs
orl
ds
mull
pop
fmul
fdiv
pop
std
insb
adc
ret
xor
fs
arpl
sahf
cmp
mov
pushf
push
data16
pop
cmc
mov
lea
pop
jns
mov
cmp
push
add
mov
add
test
xchg
mov
mov
mov
push
xchg
fisubrs
jle
ss
inc
add
rorb
adc
js
xchg
cmp
fs
inc
mov
insb
mov
jg
icebp
and
jp
pop
fisttpll
ror
pop
movsl
jbe
cmc
mov
dec
sub
pop
clc
xor
sahf
ret
daa
jl
call
jl
adc
cltd
dec
sub
jnp
rcll
pushf
or
pop
or
xchg
out
dec
xor
shr
add
mov
insl
sub
mov
push
or
xor
out
push
in
xor
cs
int
xchg
pop
dec
fsubs
js
xchg
mov
inc
stc
fstps
out
jb
lock
add
xor
es
in
jb
hlt
cmp
inc
out
lods
inc
arpl
rcl
inc
inc
pop
cld
loop
out
cmpsl
pop
test
cli
sub
cmp
pop
jg
cli
adcl
into
sbb
fnstsw
mov
dec
repz
sub
sbb
lods
ret
in
jl
mov
icebp
and
nop
lods
ja
dec
push
xchg
sahf
xchg
lock
mov
dec
push
dec
repz
nop
xcrypt-ofb
cmpsl
in
add
mov
test
cmp
outsl
sub
dec
aam
mov
lds
push
push
xchg
popa
cmp
pop
in
repnz
es
and
out
test
out
ffreep
xor
outsb
xchg
mov
jb
frstor
test
jl
rcll
pop
mov
cltd
ja
push
lods
cmp
scas
pop
add
xlat
ljmp
roll
inc
fucomip
adcb
sbb
cli
ljmp
fldln2
dec
iret
call
in
movsl
or
dec
cli
jecxz
test
add
repnz
push
outsl
adcl
xor
out
cltd
cmp
mov
in
ljmp
mov
xchg
scas
fcomi
mov
pop
mov
pop
or
jmp
sbb
cmpsl
lds
ja
cwtl
in
loop
xchg
cmp
and
adc
sbb
int3
shl
into
in
adc
xchg
cltd
cmpsb
lea
sbb
push
or
pusha
mov
cmp
pop
mov
push
or
sbb
cld
icebp
lahf
jmp
mov
add
dec
hlt
dec
loopne
pop
je
fistl
sbb
mov
scas
cmp
xchg
or
fisttps
test
xlat
adc
adc
daa
icebp
scas
dec
lods
add
push
xlat
ja
xor
rclb
push
jns
xchg
insb
fsubrl
data16
ds
aad
shrb
pop
ds
adc
sub
loopne
je
push
mov
xor
lock
mov
imul
in
clc
inc
mov
aas
adc
jno
sub
or
sub
xor
mov
mov
mov
test
sahf
xor
sub
adc
in
stos
pushf
jmp
dec
aaa
gs
xlat
neg
popf
in
xor
in
addl
jp
cld
adc
sbb
add
xchg
push
cmpb
jae
cmpb
rcr
inc
or
clc
cmpsb
xchg
jbe
sarb
aaa
add
aam
jns
jnp
repz
mov
fsubl
mov
sub
inc
imul
xlat
inc
sub
fwait
out
cmp
outsb
gs
push
imul
faddl
movmskps
fisubl
xor
lds
test
out
out
sub
lods
xor
sub
or
cmp
inc
dec
inc
jo
and
xchg
fnsave
xor
testb
cmp
jmp
subb
cmpsl
ds
inc
fldt
js
push
or
lods
rcl
sbb
mov
sbb
sub
je
mov
dec
cmp
andb
push
enter
jo
mov
clc
fsubrl
lods
divb
dec
and
in
sar
xor
jbe
sbb
dec
loop
jl
mov
or
add
scas
and
aas
xor
jmp
mov
mov
cmp
xchg
mov
jmp
scas
adc
inc
hlt
divb
inc
inc
insl
into
sub
jl
sbb
mov
mov
and
push
cld
int3
imul
fidivl
xor
mov
fsubrl
mov
jle
test
subb
or
xor
push
test
stos
jbe
je
or
imul
lcall
aad
test
inc
in
cltd
in
push
adc
and
jecxz
stc
mov
jp
ljmp
mull
fstp
lods
xchg
sbb
sub
popa
lds
jbe
dec
loope
or
adc
iret
dec
xchg
stc
fldcw
or
jge
hlt
sbb
sub
int
jp
iret
xchg
fmulp
xlat
orb
mov
mov
push
cwtl
inc
in
negb
js
lret
insl
push
adc
roll
sbb
aaa
jecxz
dec
sub
sub
fisubrs
cmp
dec
xchg
fs
cmp
mov
imul
add
lahf
rcll
lea
dec
sbb
cwtl
cmp
daa
test
and
lods
clc
bound
sarl
xchg
lcall
test
adc
lret
insl
cmp
les
loop
and
add
sub
inc
shl
jl
call
test
in
push
or
sbb
scas
es
cmp
push
cmp
rcr
call
or
push
mov
add
rol
pop
pop
ret
add
dec
imul
cmp
jne
ds
mov
and
lcall
pusha
lret
inc
cmp
and
fld
mov
xchg
sub
movsl
insl
mull
sub
push
outsb
pop
or
roll
call
aad
or
push
nop
insb
insl
mov
imul
test
or
pushl
fdivrl
push
push
mov
push
ficompl
xor
int
dec
inc
sub
xchg
xor
cmp
shrb
sar
imul
aad
rcr
pushf
je
jne
add
jge
cwtl
nop
pop
jne
imul
lock
and
xchg
pushf
cwtl
or
mov
aad
ret
icebp
cwtl
test
pop
mov
jecxz
inc
sbb
dec
call
imul
es
lahf
fstpl
mov
inc
and
add
mov
pop
pop
out
sbb
mov
in
xchg
aad
sub
cmp
in
xor
stos
sub
les
mov
mov
addr16
dec
pop
pusha
jae
test
ret
pop
insl
jns
cmp
fcomip
popa
dec
sub
stos
bnd
sbb
push
daa
dec
negb
out
jmp
sbb
dec
ficompl
shrl
push
mov
repz
sub
jnp
push
sbb
pop
leave
pusha
fsubrl
cmp
clc
in
pop
cmp
add
pop
mov
xchg
cmp
push
aam
data16
or
icebp
shrb
fnstsw
inc
iret
jae
jmp
imul
mov
sub
jnp
arpl
fstpl
shll
xor
jne
mov
cmp
xor
imul
and
jp
lea
in
ds
xor
or
test
inc
add
sbb
mov
push
adc
mov
pusha
repnz
mov
sbb
bound
in
rcrl
pop
push
cwtl
shrl
xor
lcall
inc
and
pop
cwtl
jb
dec
xor
insb
aam
fwait
mov
das
mov
sarb
xchg
lea
jns
loop
rclb
xchg
lods
add
adc
fisubs
jnp
adc
pop
jbe
shr
repnz
mov
ja
pop
sbb
dec
push
jne
imul
push
mov
popf
jle
aas
xchg
hlt
xchg
imul
push
inc
mov
mov
aam
push
push
xchg
adc
lods
inc
ret
sbb
idivl
lods
fists
mov
gs
rcll
xchg
xor
lds
xor
pop
test
inc
iret
icebp
int3
lods
incl
or
push
rol
repz
movsl
pop
cmp
mov
inc
pop
daa
xor
out
push
inc
dec
mov
lock
jo
push
bound
ret
test
in
mov
ss
in
push
lods
dec
aas
sub
jecxz
scas
xor
cmp
movaps
stos
inc
jo
ja
pop
cmp
inc
push
mov
gs
lcall
mov
sbb
xor
dec
je
cmpb
out
mov
adc
fidivs
cmp
push
aas
mov
mov
cmc
and
jp
or
out
or
test
add
fcompl
inc
inc
hlt
pushf
and
scas
std
sbb
sahf
out
cltd
sbb
div
jecxz
jmp
xorb
pop
jmp
mov
xor
xchg
cld
rcrl
dec
sub
or
ja
fmull
add
sub
fstpl
sub
cmc
daa
cld
repnz
add
icebp
pop
cmp
mov
cmc
inc
scas
add
repz
arpl
add
jp
mov
cmp
pop
mov
push
mov
imul
nop
push
adc
movsl
dec
xor
arpl
sub
mov
stos
sbb
aad
pop
mov
cmc
sbbb
xorb
cmp
sti
gs
push
cmpsl
hlt
sbb
add
mov
sub
cmpsl
pop
lcall
push
cmp
sub
cli
mov
sbb
jne
daa
cmp
jno
add
mov
xor
movsl
add
and
lret
pop
mov
mov
mov
loopne
jg
test
out
push
int
rcrl
daa
add
inc
jge
repnz
mov
or
adc
in
test
pop
out
leave
push
icebp
push
mov
popa
pop
mov
mov
loopne
scas
push
inc
mov
pop
movsb
fs
pop
les
cmp
push
lds
int
lea
or
jl
repnz
xor
sahf
jo
jecxz
mov
mov
xchg
scas
pop
int3
mov
imul
mov
inc
jle
mov
aad
cmpb
pop
mov
test
pop
loope
mov
mov
xor
adcb
test
rorl
jp
mov
and
push
dec
inc
imul
push
or
out
jg
movsb
xchg
push
mov
inc
sbb
stos
das
push
or
sarl
pop
jb
push
fs
push
adc
scas
pushf
ret
pop
pop
sub
fcoml
lret
jmp
add
mov
or
adc
fs
shll
xchg
and
push
dec
popa
xchg
sbb
scas
in
scas
jp
push
loop
fistps
mov
mov
int3
jo
dec
sbb
ja
xchg
test
cwtl
push
xor
insl
xchg
in
je
jecxz
inc
cmp
dec
bound
pop
add
push
fidivrl
adc
movsb
adc
data16
jge
in
movsb
jbe
sub
aad
push
daa
xchg
mov
push
and
mov
mov
xor
push
xchg
pop
xchg
cmc
cmp
add
jecxz
dec
xlat
loop
mov
inc
add
fidivrs
into
xor
inc
call
out
lock
or
pop
fwait
aas
and
xor
push
into
mov
xchg
mov
push
ret
jmp
cwtl
int
adc
idivl
push
loop
add
jecxz
lahf
sub
jmp
js
cmp
xchg
adc
es
xlat
cmp
insb
adc
outsl
cmp
jmp
sbb
das
or
sub
pushf
scas
aaa
push
ficoml
mov
lods
ljmp
mov
mov
sbb
test
rolb
cmc
dec
pop
incb
mov
push
aad
repnz
les
mov
pop
imul
aaa
xor
subb
mov
xor
pushf
adc
adc
stc
or
mov
push
rcll
sub
insb
fsubp
mov
call
scas
xchg
movsl
cwtl
mov
clc
jp
push
jl
aam
jmp
mov
push
mov
mov
out
outsl
push
xorb
lea
insl
add
test
iret
pop
call
xchg
inc
jmp
push
jae
cmp
pop
or
fwait
loop
es
test
bound
in
es
jno
loopne
dec
mov
jne
jmp
aaa
mov
xor
jo
rolb
xchg
jp
in
adc
mov
arpl
jecxz
inc
add
invd
sbb
lcall
cmp
jo
test
or
adc
mov
cmp
add
bound
push
inc
imul
in
or
loopne
mov
int
pop
xor
push
pop
mov
jb
xchg
dec
and
test
mov
dec
out
mov
std
inc
mov
aad
and
mov
and
pop
cmp
xchg
add
imul
and
insl
cld
xchg
fnstsw
xchg
xchg
fcoms
out
mov
jle
sbb
lds
cmp
into
icebp
xchg
and
inc
lret
jle
ljmp
test
or
ret
adc
sub
ss
lds
rorl
daa
lea
sub
sub
xor
aas
jmp
data16
xchg
popf
mov
shll
jecxz
js
sub
push
jb
popf
jmp
int3
pop
ljmp
dec
bound
pop
xor
xor
jb
gs
bound
bound
shlb
mov
push
mov
adc
scas
pop
std
jge
mov
and
pusha
jns
dec
in
dec
icebp
mov
insl
pop
jp
dec
mov
mov
sbb
push
lret
andb
push
clc
and
scas
adc
bswap
pop
mov
ljmp
out
dec
cmpsb
leave
aam
dec
sbb
enter
aaa
iret
fidivrl
rolb
test
xorb
lock
push
cmp
push
cmpb
sbb
adc
push
xlat
mov
mov
sbb
or
std
mov
mov
aaa
mov
push
mov
rol
rcrb
add
in
add
lea
push
ss
int
sub
or
cmpsl
or
into
jo
add
dec
popa
cmc
mov
je
ror
cmpsb
jl,pn
js
push
mov
and
scas
push
sbb
cmp
or
imul
push
rcrb
sbb
inc
cmpsb
inc
fnstcw
int3
sahf
inc
cmp
popf
xor
imul
inc
ret
sub
movzwl
jle
cwtl
jbe
or
push
test
mov
sbb
cwtl
mov
shll
addr16
mov
imul
mov
imul
sub
les
inc
and
repz
inc
sbb
test
rclb
pop
popf
xor
aad
xchg
sbb
dec
ja
outsl
dec
andps
sub
pop
inc
test
xchg
pop
push
sbbb
ja
cwtl
jp
arpl
dec
mov
mov
pop
mov
jb
sbb
pop
movl
mov
jmp
adc
adc
loope
pop
ret
mov
and
sti
mov
lods
pop
dec
push
mov
adc
ja
mov
xchg
pop
push
ja
push
sub
xchg
cld
push
aad
xchg
ficomps
iret
sub
mov
stos
call
fld
scas
popf
adc
out
lahf
and
jnp
rcrl
mov
sbb
adc
jb
adc
mov
jne
rclb
cli
mov
andb
sbb
xlat
lods
push
js
mov
or
notl
adc
les
out
or
and
mov
cmp
pop
push
out
inc
xor
jp
sbb
xchg
pusha
or
out
int
clc
aam
cli
sbb
sub
lret
pop
xor
and
mov
push
mov
add
mov
gs
mov
pusha
push
es
mov
fisubrs
xchg
shrb
and
or
jge
and
sbb
call
mov
adc
dec
cld
lret
inc
hlt
push
xchg
lods
hlt
clc
fcoms
sub
jp
fsubrp
push
data16
cmp
idivb
pop
jne
sbb
xchg
dec
gs
xor
pop
lds
mov
sub
sarl
jo
lret
lcall
or
adc
clc
jno
int3
cmp
in
mov
es
jl
dec
jge
xchg
and
push
stos
mov
das
or
cmpsl
clc
cmc
pop
jns
cmp
jl
rorl
ret
test
mov
or
lret
out
jbe
pop
aas
sub
inc
sbb
clc
adc
enter
ret
adc
in
xchg
imul
insl
les
not
mov
sbb
xchg
jns
call
sub
enter
ljmp
lahf
cli
cmp
lods
inc
pop
push
mov
pop
fcmovbe
push
js
aaa
mov
xchg
mov
push
lea
fdivs
fsub
je
jmp
testb
push
jl
fisttpll
loope
mov
dec
mov
or
and
adc
fdivs
les
xor
sub
pop
addl
push
dec
or
jge
jno
and
inc
aaa
mov
aad
sbb
mov
push
cmpsl
dec
imul
int
movsl
ss
lds
mov
loop
ja
sbb
inc
shlb
ret
cs
cmovae
ret
inc
pop
insl
out
cld
imul
inc
mov
mov
jmp
xlat
adc
rcr
mov
mov
std
std
mov
arpl
rol
pop
mov
mov
cld
rcl
das
cld
sbb
adc
lret
or
xlat
add
jb
aas
and
in
mov
cmpl
adc
dec
jg
fmul
out
fnsave
in
inc
dec
shr
out
loop,pt
dec
jb
int
popf
popf
jg
fucomi
andl
test
jmp
xchg
and
outsb
lods
nop
cmp
imul
and
sub
xchg
and
fstpl
test
xlat
jg
in
aad
sub
jmp
mov
mov
ret
in
std
andl
in
push
mov
ficoms
dec
mov
sbb
cwtl
pop
push
out
mov
pop
pop
and
or
cmp
pop
subb
jp
pop
jbe
or
push
and
loope
shll
rolb
cmp
mov
lds
movsl
jg
sarl
xchg
xor
repnz
xor
loop
enter
mov
mov
test
mov
mov
inc
and
nop
add
loopne
dec
or
and
or
repz
xchg
inc
nop
mov
mov
loopne
add
pop
ds
add
push
jmp
test
int
cmp
xor
icebp
mulb
popa
mov
push
pop
push
imul
sub
dec
jecxz
in
xchg
mov
imul
int3
bound
in
fistl
pop
mov
jae
jl
out
and
outsb
andl
cmpl
and
jp
push
jp
lret
fs
jge
jbe
scas
xchg
sbb
rcrl
and
jge
insl
fmuls
jns
pop
lcall
roll
in
inc
lea
mov
stc
pop
xchg
xchg
xor
in
nop
pusha
movsb
push
pop
xchg
push
imul
enter
jae
inc
insl
mov
dec
sbb
inc
mov
dec
mov
vpunpcklwd
jbe
or
sbb
lret
sbbb
fwait
mov
in
and
cmp
mov
std
inc
cltd
and
or
adc
in
mov
sbbl
test
sbb
pop
in
dec
ja
jge
jmp
aam
mov
dec
sbb
out
adc
pop
dec
pop
nop
mov
and
and
imul
mov
lods
xor
out
popf
cmp
push
loope
bound
sarl
les
or
cld
pop
ja
cmp
out
js
and
sub
mov
adc
add
inc
loope
roll
adc
in
jne
je
dec
xor
push
sti
sub
xor
sbb
and
imulb
add
or
insl
out
mov
in
jp
sti
aas
shll
xchg
pushl
or
pop
outsl
pop
pop
mov
jle
adc
or
mov
imul
pop
xchg
fwait
outsb
push
xlat
cmp
dec
insb
aad
loop
mov
push
lods
sahf
jne
xchg
sahf
shrl
push
sarb
sbb
aas
adc
jg
loop
push
les
stc
int3
les
inc
out
std
adc
stc
leave
xor
push
add
sti
mov
ret
int3
xor
sub
and
mov
mov
cwtl
loop
mov
lcall
loope
fldenv
adc
int3
xchg
neg
lds
nop
mov
shll
jo
test
call
sarl
xchg
jge
out
cmp
cmp
into
xor
sbb
push
xchg
fcomps
arpl
shll
push
mov
mov
sub
lahf
xor
outsb
aas
out
int
mov
jecxz
sti
into
push
mov
cli
mov
cld
repz
rorb
xchg
shlb
cld
xchg
xchg
add
add
call
test
hlt
sub
or
lea
ljmp
mov
jg
inc
repnz
cld
mov
mov
mov
adc
sub
xchg
inc
push
adcl
add
push
xlat
stc
and
fnstenv
dec
stos
xchg
les
add
in
movsl
push
jecxz
gs
scas
inc
cmp
adc
push
sti
mov
popf
xchg
stc
test
clc
pop
call
popa
and
add
sub
pop
daa
push
inc
jecxz
adc
jle
pop
dec
xchg
lods
out
adcl
mov
push
scas
popa
mov
jmp
jl
fmuls
sub
sbb
mov
stos
loope
fcmove
add
mov
sahf
or
mov
inc
pop
test
xchg
mov
lahf
mov
cs
arpl
xor
mov
shlb
and
cmp
insl
in
repz
or
loopne
jns
dec
inc
adcb
mov
jp
adc
mov
adc
js
inc
mov
xor
mov
mov
insb
imul
loope
rolb
dec
jb
sub
mov
mov
aas
push
arpl
mov
lods
int3
jnp
loop
shrb
push
cs
jno
cmp
push
pop
lods
fstl
out
sbb
ljmp
pusha
sti
cmp
dec
ljmp
pop
rcrb
push
test
into
cmpsl
inc
inc
and
mov
loop
pop
push
push
ja
sub
lds
das
cmp
test
imul
push
pop
into
data16
xchg
mov
dec
pop
push
int3
or
xchg
shll
sbb
add
fsubrl
jp
pop
sbb
test
cltd
mov
pop
fwait
sets
ljmp
aam
pop
cli
or
inc
push
ja
outsb
inc
push
lahf
sub
dec
jge
jbe
lahf
pusha
shlb
push
idivl
mov
mov
cs
mov
nop
lret
push
mov
and
mov
mov
cmpsb
mov
mov
fwait
jbe
and
inc
icebp
aas
push
cmp
imul
mov
pop
test
fcompl
xor
rclb
iret
mov
pop
movsl
int3
cmp
xchg
adc
cmp
pop
pop
add
add
imull
pop
out
mov
cmc
inc
lahf
lcall
icebp
adc
mov
inc
lahf
adc
xor
sub
stos
sub
sbb
sarb
in
push
movsl
mov
out
test
roll
jno
out
mov
es
xchg
cmp
mov
inc
negl
xchg
scas
sbbl
jae
leave
xor
vpmaddwd
into
mov
aaa
insb
fldl
in
jae
jns
aad
push
push
jae
out
inc
repnz
ds
adc
std
xor
fcomps
inc
adc
pop
sahf
adc
out
jnp
jno
aam
jae
fisttps
or
clc
cmp
add
mov
ds
in
mov
subb
out
lahf
cmpsb
jne
cli
int
sbb
rcll
loope
push
shll
jbe
xchg
ret
mov
ja
push
jo
outsl
nop
aam
jbe
aas
test
add
push
xchg
and
mov
xchg
outsl
icebp
rcrl
loopne
adc
mov
mov
test
mov
shrl
sahf
jecxz
fadd
in
data16
repnz
push
jp
or
ja
fnstenv
xchg
ror
xlat
mov
pop
and
sub
adc
stc
xchg
xchg
seta
bound
out
scas
pop
mov
sbb
sbb
into
mov
ja
jp
ffree
test
pop
pop
repnz
movb
insb
js
xchg
movsb
inc
pop
test
gs
pusha
fcoml
xchg
test
mov
mov
mov
gs
mov
movsl
mov
clc
inc
cmp
xchg
pop
jecxz
test
pop
iret
jp
xchg
das
mov
pop
andl
cmp
mov
push
outsb
cltd
loopne
sarb
ss
jns
orl
lret
and
int3
mov
push
jo
mov
pop
out
mov
setns
in
test
and
xchg
mov
shll
or
shr
xor
aad
stc
cmp
inc
ret
je
out
clc
fsubrs
arpl
add
add
jecxz
dec
add
mov
cmp
jae
mov
sbbl
fidivrs
lods
inc
inc
mov
xchg
mov
or
cwtl
or
pop
movsl
cs
add
es
jns
pusha
jo
cmp
lods
ret
sub
mov
add
movsb
jns
test
adc
shrl
push
dec
sbb
js
call
jnp
adc
dec
push
jo
cs
imul
cmp
add
in
xchg
lahf
mov
cmc
aam
push
test
jbe
xchg
ret
or
decl
jle
pushf
je,pt
xchg
jns
push
sub
or
xchg
into
les
gs
popf
outsl
dec
movsl
jp
in
pushf
mov
push
and
xor
mov
mov
rcll
lret
inc
pop
call
fucomi
movsl
cs
sbb
cmc
ficoms
sahf
jo
test
test
xchg
cmp
pop
lods
pop
pop
mov
insb
fstps
outsb
sbb
adc
sub
fstpl
mov
ss
mov
pop
dec
jl
mov
cltd
cmp
xchg
mov
lret
adc
inc
cmpsl
ds
in
xlat
push
movsb
push
ljmp
and
jne
and
mov
cwtl
fbld
adc
test
xchg
scas
stos
imul
mov
mov
fs
lahf
push
sub
add
mov
ret
sub
lahf
hlt
and
test
mov
ret
fimull
mov
dec
mov
enter
aaa
cmove
pop
push
mov
mov
jne
pop
ja
mov
push
add
xor
inc
movsb
jns
xorb
fisttpll
xor
adc
sub
sbb
add
inc
sbb
xchg
dec
mov
inc
les
fs
out
push
push
ret
lds
int
xchg
push
mov
or
pop
jns
subl
fsubr
push
aas
shll
cs
scas
hlt
xlat
inc
sbb
pop
jnp
inc
cmp
dec
sbb
andl
int
and
outsl
ret
cld
xor
addb
xchg
cmp
outsl
in
stos
es
jecxz
cmp
mov
leave
dec
and
movsb
mov
adc
dec
cmpb
pusha
ret
gs
jge
mov
jns
jnp
cmp
xchg
jnp
adc
rcrl
jnp
lods
sub
lret
and
js
mov
pushf
xchg
xchg
daa
mov
or
pop
fdivrl
xchg
test
jecxz
push
sbb
xchg
mov
dec
jle
mov
adc
push
xchg
mov
out
mov
mov
or
sahf
or
mov
inc
or
push
inc
sub
mov
mov
cld
mov
fcoml
inc
fmul
or
stos
xor
jle
jmp
aaa
pop
cmpsb
jg
cli
psubb
jne
insl
movsb
lock
mov
push
lcall
inc
sub
test
adc
add
mov
sub
inc
fisttps
jae
pushf
or
jns
pop
mov
dec
pop
push
and
xor
mov
jl
push
test
lods
je
ret
lods
push
pushf
xchg
lods
jnp
inc
inc
pop
into
insb
rcll
imul
jmp
js
rol
mov
popa
arpl
sbb
add
idiv
push
das
jmp
out
mov
enter
in
adc
mov
xor
mov
sbb
push
add
xor
mov
imul
jno
sbb
enter
or
stc
stc
fsubrs
lahf
xchg
fstp
lea
inc
sub
jb
adc
and
pop
push
sahf
pop
lcall
jle
mov
push
xor
std
outsb
mov
adc
pop
aam
jno
mov
push
xchg
sub
stc
sbb
loop
jle
dec
and
outsl
sbb
dec
cmpsb
push
ljmp
add
add
scas
out
mov
dec
ret
mov
gs
fmuls
fcomps
gs
mov
pop
jb
dec
adc
fcom
and
add
scas
repz
flds
and
std
cltd
cltd
inc
jecxz
inc
inc
pop
jae
mov
cltd
pusha
push
int3
loope
pmaxsw
mov
out
xchg
repnz
loopne
push
adc
dec
cmp
cld
shlb
in
sbb
jge
jnp
std
and
lret
mov
xchg
mov
sbbb
ret
leave
hlt
insl
add
pop
lret
pop
je
aas
mov
mov
movsl
sbb
jmp
fcom
out
pop
movb
inc
stos
out
popa
fs
insb
push
in
cltd
or
pop
dec
adc
iret
andl
sbb
pop
adc
add
nop
xchg
mov
movsl
jae
sub
and
dec
fstpt
jmp
enter
add
jge
addb
dec
shl
jbe
and
insb
and
sub
push
mov
sub
loopne
fnsave
in
test
hlt
shrb
imul
pusha
cmp
test
ljmp
sub
cmp
push
dec
jne
add
in
cmp
aaa
dec
movsb
std
shrb
iret
mov
sub
mov
mov
adc
or
fdivs
push
or
aam
movsb
and
lcall
pop
add
pushf
hlt
cmpsb
push
adc
add
rol
inc
xchg
shll
nop
xchg
in
and
imul
pop
dec
lds
cli
das
pop
sub
add
icebp
mov
adc
sub
lds
cwtl
sbb
inc
push
fs
and
mov
fdivs
inc
sbb
faddl
cmc
xor
mov
test
aad
mov
lahf
jle
mov
push
das
shlb
pushf
mov
xorl
daa
call
adc
je
insb
jmp
aaa
vpaddsb
insb
lret
cmp
mov
pop
jp
repnz
cmpsb
inc
xor
mov
fcmovne
and
push
mov
mov
mov
and
cld
out
popf
push
inc
push
in
fwait
addr16
adcl
jecxz
imul
data16
in
mov
xor
or
fs
mov
or
adc
std
int
or
jb
sbb
add
imul
icebp
fdivs
movl
fdivrs
push
fisubrl
mov
inc
and
xor
int
movsb
mov
jns
jne
or
test
xchg
mov
and
lret
jbe
adc
xchg
dec
inc
mulb
push
mov
xor
sti
dec
test
adc
insb
xchg
das
sti
insl
fdivrs
xchg
inc
outsl
scas
mov
ret
sbb
push
mov
fldt
movb
aas
sub
sbb
out
sub
add
mov
mov
roll
lds
out
bound
jb
outsl
int3
lret
mov
xlat
pop
mov
cltd
in
nop
pop
dec
xchg
movsl
jb
pop
stos
mov
mov
mov
ret
in
lret
test
push
in
pop
data16
xor
cwtl
jno
push
push
or
shl
mov
scas
and
adcl
andl
add
xchg
arpl
add
je
out
pop
and
leave
xchg
mov
mov
mov
jle
xlat
add
add
dec
lods
add
enter
lods
mov
cltd
inc
inc
mov
sub
inc
push
mov
xor
std
lcall
gs
jno
xchg
gs
lahf
ja
fucomp
mov
mov
jmp
lret
pop
dec
sub
shrl
xor
and
and
nop
xchg
das
xchg
int
ret
adc
pop
daa
ret
push
scas
dec
sbb
jo
sahf
enter
fildll
jmp
jb
or
mov
loope
push
out
hlt
mov
cmp
adc
std
xor
xor
xchg
xchg
imul
adc
inc
jne
dec
ret
dec
xchg
mov
je
inc
mov
enter
mov
loopne
sahf
fidivrs
sub
dec
loopne
pop
aas
lods
jbe
xchg
xchg
icebp
xor
ret
push
ret
jns
sar
jge
cmp
lahf
popa
lods
in
test
shl
sbb
lock
call
sbb
push
jecxz
out
in
flds
test
jmp
mov
int
loope
cmp
jg
xchg
test
cmpsl
fstpt
outsb
xor
ret
stos
jo
divb
mov
out
and
cs
xlat
push
xchg
mov
push
out
mov
repnz
sbb
int
enter
jns
lret
jne
es
outsb
dec
mov
fs
leave
inc
and
jns
cmpsl
jmp
jle
mov
mov
cmp
adc
test
das
std
sbb
fldz
test
addb
hlt
xchg
fadds
jmp
cli
lcall
mov
lds
dec
mulb
xor
mov
repz
pop
js
push
bound
push
mov
imul
loopne
lock
lock
movsl
mov
pop
imul
push
push
sub
mov
popa
roll
clc
scas
loopne
mov
cs
ficompl
add
scas
rcr
das
ja
pop
cmp
inc
fcoml
mov
ja
fs
lea
dec
fstpt
movsb
dec
lahf
sti
fwait
jmp
dec
icebp
ret
dec
jnp
jecxz
sbb
cmovge
inc
mov
cld
stos
stc
mov
cmp
push
pushf
les
pop
sbb
shll
mov
insb
notb
aam
push
adc
adc
mov
loop
lods
dec
in
scas
out
pop
mov
fnstsw
mov
dec
pop
repnz
arpl
xchg
sub
mov
loope
jnp
cmc
push
rcrb
pushf
adc
aas
lock
sub
xor
mov
push
or
outsl
cld
test
data16
in
and
xor
aaa
xchg
jmp
fdivl
xor
mov
loope
jmp
je
sbb
scas
add
xchg
add
lcall
mov
imul
sbb
and
adc
sub
es
cs
mov
je
sub
shlb
xchg
lock
cmpsl
enter
ds
enter
adc
stos
mov
and
les
xor
int3
push
mov
cli
rcr
nop
repz
stos
jle
inc
xchg
test
pop
jnp
pop
xchg
push
add
js
movsb
mov
jbe
cmp
mov
mov
popf
mov
rorl
loop
mov
shrl
ds
mov
fdivl
xchg
loopne
inc
mov
pop
mov
pusha
dec
adc
in
idiv
lcall
sub
sbb
mov
mulb
cltd
push
xor
ret
cmpb
mov
xor
int
jb
jae
mov
rclb
push
dec
jbe
or
scas
sbb
subl
lret
dec
push
mov
pop
sbb
push
popf
fistpll
cmp
scas
ja
or
dec
push
scas
push
or
mov
inc
ljmp
mov
or
std
xchg
sahf
rorb
ss
jns
dec
xchg
mov
push
push
lds
xchg
mov
imulb
dec
imul
dec
push
stos
je
push
lods
add
inc
fwait
jo
mov
mov
add
inc
or
cs
jbe
inc
xor
pop
stc
dec
lahf
aas
lea
fisubl
std
orl
jge
lcall
insb
xchg
mov
adc
mov
pop
sub
sbb
inc
adc
ljmp
movsl
test
fcomip
or
lahf
xlat
aaa
pusha
sbb
out
lods
jns
push
ret
xor
dec
in
outsl
mov
add
pushf
xorb
push
mov
mov
mov
notb
sbb
mov
cmp
lahf
loop
cmc
or
dec
dec
test
das
shll
pop
xlat
pop
clc
nop
mov
mov
jge
shr
pop
jb
fsubl
and
rolb
stos
inc
xor
lock
xchg
cltd
pop
mov
sbb
cmp
cli
mov
adc
lcall
lret
jbe
in
iret
faddl
ja
dec
ja
sub
mov
sub
in
in
andb
mov
repnz
pop
outsl
add
jnp
cli
push
jge
ja
jno
xlat
xor
add
xchg
lock
mov
push
xor
loop
mov
in
std
mov
sbb
mov
into
fldenv
out
or
dec
add
adc
out
xchg
scas
out
call
lock
pop
jne
js
mov
and
sub
aad
lahf
adc
lcall
inc
push
pop
mov
sub
inc
xchg
pop
push
minps
test
adc
pop
js
xlat
cwtl
sub
mov
jnp
and
sub
insl
and
mov
andb
je
and
xor
cmp
fstpt
inc
push
scas
mov
mov
jecxz
js
sub
aas
addr16
filds
lds
pop
test
push
add
pop
cltd
test
leave
sti
xorb
movsb
mov
xchg
mov
mov
leave
jmp
fidivrs
dec
shl
jle
jle
dec
pop
push
popa
inc
nop
cmpsl
gs
inc
push
notb
arpl
out
bound
mov
divb
mov
xor
dec
jg
xchg
dec
cmp
shrb
dec
stos
dec
add
jns
adc
fiaddl
jae
fstpt
les
int3
js
popa
jnp
push
lahf
mov
sbb
jl
pushl
int
pop
mov
repz
jle
shlb
dec
push
push
fists
aad
jns
aaa
fimull
or
repnz
loope
subb
ljmp
test
or
or
or
inc
dec
movsb
lock
dec
std
ss
cltd
in
mov
xor
aad
movsb
enter
clc
lret
outsb
push
mov
icebp
push
cmp
es
into
jg
sub
and
add
xchg
jmp
sub
int
or
and
cmp
push
and
ljmp
jae
repnz
mov
jl
clc
pop
addr16
addr16
adc
jle
out
shrl
aad
xchg
push
test
sub
jl
call
xchg
sbb
mov
mov
sbb
shrb
int
push
not
imul
jl
pushf
push
and
mov
and
fsubrs
fstpt
fchs
cmpsl
shlb
inc
lahf
aam
mov
nop
and
sbb
flds
pop
xorb
mov
xor
add
mov
leave
xchg
inc
adc
mov
mov
dec
mov
jmp
cmpsl
orb
push
in
push
sbb
call
dec
out
mov
sub
fwait
jmp
inc
vaddsubps
pop
and
out
cmp
in
sbb
das
dec
or
jae
xchg
and
cmp
and
add
cmp
xor
dec
int3
cmpl
and
es
cmp
fstpt
xchg
push
mov
pop
inc
call
scas
faddl
dec
es
push
lret
adc
mov
adc
popf
hlt
cmc
int
xor
sub
sub
cwtl
cltd
xchg
mov
pop
push
in
daa
mov
sbb
dec
clc
cmp
xchg
lea
sub
xor
xorl
cli
add
fcompl
inc
pop
sub
push
adc
sub
int
push
mov
fmuls
js
fisubrs
jmp
arpl
outsl
fmull
mov
jge
or
std
sub
in
sbb
test
int
sarl
mull
mov
adc
push
inc
sbb
das
popa
popa
xchg
ret
jle
xchg
stc
sbb
imul
lods
test
scas
iret
dec
jle
mov
popa
push
in
lahf
insl
sti
inc
rcll
popf
adc
mov
pushf
out
dec
mov
jb
pop
lods
push
dec
pop
add
in
sbb
jb
xchg
in
adc
pop
gs
xchg
sbb
or
movsl
js
movsb
push
push
sbb
mov
outsl
fcoms
test
popf
sahf
mov
mov
sbb
adc
loopne
andb
loopne
dec
sti
cmpsb
xor
sub
xchg
xor
stos
mov
roll
mov
jmp
sub
test
fcom
mov
and
aaa
cmp
jnp
sti
loopne
xor
mov
jne
mov
mov
sub
sti
or
pushf
inc
or
js
out
mov
mov
stc
sbb
sbb
jns
dec
test
mov
xor
push
lahf
push
rorl
insb
js
test
dec
out
rolb
rdtsc
mov
xchg
int3
popf
imul
sbb
dec
shrb
je
lods
in
cltd
inc
ja
mov
mov
xor
xchg
push
leave
mov
cld
int3
ret
mov
cmp
add
sbbb
repz
adc
push
jle
xchg
js
lods
in
and
aad
les
sub
add
movsb
inc
pop
jns
dec
xchg
ljmp
leave
int3
je
push
daa
daa
ret
pop
js
pop
mov
xor
add
flds
inc
gs
and
dec
mov
or
shll
jns
jmp
push
sub
mov
nop
sbb
icebp
notl
mov
xor
jno
in
test
and
es
icebp
aad
lcall
inc
cwtl
dec
rcr
aad
xchg
dec
mov
fisttpl
and
and
int
movsl
mov
mov
and
call
inc
sbb
or
mov
filds
jne
push
mov
std
testl
push
xor
mov
outsb
xor
mov
incb
adc
jecxz
xchg
jo
mov
sti
xor
js
or
mov
add
cmp
pop
sbb
cwtl
idiv
mov
adc
lcall
mov
jnp
clc
loopne
push
mov
enter
pop
shll
aam
cmp
shlb
popf
mov
je
or
sub
arpl
push
aad
shll
or
movsl
lds
jmp
out
pop
cmp
push
xchg
icebp
jb
adc
push
test
repnz
pop
out
cltd
imulb
xchg
cld
inc
sub
addr16
imul
mov
hlt
pushf
fcmovne
pop
scas
cmp
iret
push
jle
jo
outsb
daa
mov
sbb
jp
adc
adc
mov
stos
push
fldl
push
sbb
test
bound
mov
lahf
pusha
in
cwtl
imul
nop
aas
out
adc
mov
sbb
adc
and
sarl
cmp
push
mov
dec
mov
jns
loope
add
leave
or
xor
pop
jbe
mov
inc
pop
pusha
jmp
sbbl
iret
lcall
push
jns
sub
pop
and
ret
cmp
cmpsb
cmp
mov
xchg
push
cmp
push
aaa
repz
cmp
cs
jp
mov
int3
push
cmpsb
xchg
cmp
popl
mov
xor
fistl
xor
push
les
pop
testb
in
inc
mov
mov
cmp
leave
pop
je
push
pop
into
jp
rcl
jge
jl
popa
rcr
pop
and
and
js
insl
cmp
dec
xor
mov
and
and
xor
test
xchg
loopne
pop
sub
and
cs
mov
push
popa
lods
mov
and
mov
add
inc
and
in
scas
sbb
pop
mov
pop
cs
dec
into
jle
jp,pt
xchg
and
add
loope
divl
mov
adc
push
adc
push
mov
cmp
xchg
lock
ds
stos
lea
jbe
xchg
cmpsl
sbb
cmp
fucomi
push
push
test
repnz
sbb
shl
sub
scas
std
sub
fisttpl
xor
aas
fs
jg
sub
push
pushf
hlt
cmpsb
jne
out
in
push
fs
mov
clc
popa
jecxz
sbb
scas
jnp
in
mov
cs
jae
lock
xor
and
xor
jge
enter
sahf
je
loop
aam
dec
filds
jb
cli
inc
loop
jne
fistpl
jns
sub
aas
lock
mov
fnsave
loop
jbe
jmp
sahf
add
mov
pop
sbb
inc
out
in
dec
sahf
mov
lods
jle
sbb
push
push
cs
pop
bound
loopne
js
fidivrl
or
xchg
adc
jmp
cmpsl
mov
fidivs
xlat
mov
cmpsb
fs
jne
inc
cmp
mov
sbb
and
mov
cmp
mov
push
push
jge
mov
rcll
push
fdivrl
and
lret
inc
add
or
test
aas
stos
inc
adc
push
pop
lea
xchg
fwait
add
xchg
xor
aam
fdivs
sti
aaa
xor
scas
shlb
pop
outsb
aam
sbb
mov
pushf
jnp
jmp
jne
xchg
add
fcomp
addr16
outsb
mov
jno
into
push
mov
dec
adc
mov
add
lret
xlat
mov
mov
ret
mov
bswap
push
pop
and
mov
mov
movsl
cmp
rorb
push
test
mul
mov
shl
jne
dec
dec
and
clc
adc
movsl
and
testb
push
or
pop
cmp
mov
mov
adc
lret
decl
push
test
inc
cmp
pop
shll
je
sbb
pop
fnstsw
cs
es
in
or
fcompl
lret
lods
adc
stos
or
push
or
imul
pop
mov
push
cmp
scas
shrb
fs
jg
shlb
mov
fistps
mov
xchg
mov
jnp
pop
xor
mov
cltd
jl
sub
aas
cli
fistps
movsb
adc
dec
int3
movsl
jg
xor
mov
sub
cmp
add
dec
mov
cmp
add
inc
inc
cli
sbb
fs
in
out
aaa
jp
pop
xchg
cmc
cmp
iret
mov
xor
or
or
dec
sbb
iret
mov
arpl
mov
adc
mov
pusha
ret
enter
arpl
add
add
cmp
xchg
mov
loopne
aaa
mov
ds
push
jns
sbb
enter
jge
adc
lds
pop
addr16
and
test
pop
and
insb
rolb
jp
test
movsl
fs
and
xor
lea
and
cld
add
inc
repnz
dec
jge
inc
loopne
test
fucomi
shl
push
cli
pop
push
sub
test
sbb
dec
arpl
mov
aam
xchg
int3
jae
adc
out
repnz
sbb
gs
or
fs
ljmp
fcmovb
js
decb
or
in
fwait
push
mov
movsl
ret
push
and
mov
cmpsl
and
mov
lods
adc
add
sahf
add
sub
or
pusha
movsl
lcall
pop
test
js
or
divl
mov
rorb
lods
rcr
adc
loop
int3
out
fistpll
fnsave
fdivs
imul
xor
in
in
push
cmp
jg
test
fldcw
push
imul
adc
aam
push
lods
fcos
loopne
or
inc
lret
addr16
movsl
sbbb
fstpt
out
jbe
sbb
mov
hlt
scas
push
leave
mov
sub
es
sbb
cmp
cmp
out
mov
ficoml
push
hlt
inc
in
or
mov
push
adc
cmp
jne
lods
inc
ss
jle
push
mov
lcall
xchg
aaa
sbb
hlt
stc
scas
enter
les
sti
aaa
jnp
popa
or
jge
in
in
lret
rcrl
hlt
add
mov
push
lods
ret
out
jo
push
push
addb
inc
arpl
or
dec
xchg
sub
fwait
push
or
lods
enter
pop
xchg
pop
repz
sbb
xor
sub
mov
xor
mov
mov
es
sub
adc
into
cmp
aas
mov
out
aaa
xor
test
and
inc
fs
insl
xor
mov
rorl
mov
push
mov
imul
adc
mov
inc
push
dec
add
lea
inc
ja
xchg
inc
sub
inc
jnp
inc
repz
push
or
push
mov
in
and
enter
inc
sbb
stos
fcomps
mov
shll
mov
cmpsb
xchg
outsl
lahf
push
inc
psrld
xor
jae
stos
int3
out
pop
hlt
scas
imul
cmp
mov
inc
push
dec
loop
jae
popa
test
cwtl
inc
fimull
call
sub
xchg
cmp
imul
mov
add
insb
lret
push
xchg
int
mov
or
lcall
loop
fdivp
hlt
das
cltd
xchg
adcl
or
cmp
pop
out
stos
sub
or
push
sbb
fiaddl
mov
dec
fldl
movsb
push
daa
movsb
mov
hlt
push
mov
and
shlb
mov
mov
dec
jno
mov
notl
or
xchg
jge
lea
ss
xchg
jmp
adc
push
push
loopne
pushf
pop
xchg
push
cmpb
xchg
pop
aas
dec
lahf
sub
aas
aaa
mov
add
dec
nop
in
mov
xlat
adc
push
xchg
out
xor
xchg
mov
sbb
lahf
adc
xchg
jp
adc
xchg
enter
stc
repnz
dec
pop
icebp
test
test
arpl
popf
popa
movsl
sti
js
push
adc
push
xchg
cmp
or
fwait
mov
ret
cmp
cmp
mov
shr
dec
jmp
fdivrs
xchg
push
mov
xchg
xchg
mov
outsl
pushf
lods
std
iret
cltd
call
add
outsl
pusha
mov
idivb
jnp
and
jle
mov
movsl
xchg
cmp
xorl
insl
pop
inc
popf
cltd
and
gs
add
dec
mov
fldl
cmp
xchg
les
adc
mov
xor
adc
jo
mov
xor
pop
mov
imul
shlb
or
std
mov
sbb
sub
clc
xor
xchg
or
mov
les
jae
cltd
repnz
in
sbb
push
leave
and
into
imul
aaa
mov
pop
out
and
mov
jne
enter
dec
shlb
dec
ds
psubsw
xchg
lods
fcoms
sub
repz
fwait
inc
je
push
test
mov
mov
fcmove
stos
or
popl
mov
xchg
lods
cld
inc
pop
mov
fucom
cmpsb
roll
out
mov
pop
cmpsl
xor
mov
pop
adc
and
ret
je
cmp
dec
bound
mov
mov
inc
push
stos
sub
mov
inc
fcom
outsl
pop
push
jb,pn
sbb
adc
xchg
mov
das
and
pop
jp
hlt
cmp
and
mov
mov
rol
imul
sub
mov
inc
cmp
js
aam
sub
cmp
gs
sahf
int3
jmp
adc
mov
sub
js
sub
stos
add
dec
cld
push
mov
add
mov
sub
sbb
lock
xchg
add
push
pop
bound
mov
stos
pop
dec
test
pop
push
cmpl
mov
int3
push
ds
xchg
and
cmc
cmp
xchg
sar
push
shl
pop
xchg
or
ret
pop
pop
sar
jmp
push
jge
or
lea
pushf
xchg
mov
jmp
fnstcw
cmp
and
nop
popa
sarl
in
mov
xchg
call
jmp
movl
mov
sub
jmp
jmp
and
pop
js
popa
cmpb
sbb
and
mov
mov
adc
test
repnz
pop
pop
and
mov
dec
inc
jbe
shrl
push
xor
cmp
add
xchg
movsb
scas
pop
cmp
cli
add
icebp
xor
mov
cli
dec
mov
push
xchg
stos
divl
push
lahf
inc
jae
ret
imul
pusha
cltd
adc
adc
lret
mov
test
jno
repnz
jae
adc
xor
mov
aaa
dec
mov
in
lock
rcrl
pushf
xchg
arpl
sub
sub
xor
sbb
rcll
aas
push
cltd
adc
mov
scas
out
out
leave
mov
cmp
out
cmc
pop
mov
cs
scas
dec
out
out
mov
filds
aaa
movsb
or
sbb
mov
xchg
sarl
insb
and
cltd
mov
inc
aad
mov
fldenv
mov
jle
sbb
test
adc
xor
inc
iret
add
mov
mov
loope
dec
mov
fcompp
repz
jb
pop
pop
push
iret
xchg
pop
push
add
lods
push
sub
imul
lcall
or
jecxz
lods
push
adc
stc
int3
js
xchg
ret
add
fs
test
sbb
mov
les
push
sbb
pop
ror
enter
movsl
cmp
stos
mov
mov
sbb
scas
or
pop
das
inc
enter
mov
cmpsb
dec
sub
inc
fwait
xchg
mov
and
lret
mov
cltd
mov
add
mov
mov
mov
mov
scas
stos
cmpb
hlt
divb
cli
das
inc
out
stos
outsl
sbbb
clc
mov
sahf
pop
out
fsts
fldcw
inc
fadd
lods
mov
or
jne
sahf
js
out
insb
push
imul
sub
pop
das
add
push
jns
mov
test
data16
xchg
jmp
leave
je
lret
fcom
mov
push
test
inc
or
out
dec
sbb
mov
dec
rorl
jno
sub
inc
jb
mov
or
xchg
test
jb
fidivl
add
add
cs
mov
mov
sbb
iret
out
ret
pop
xor
jb
mov
and
add
jmp
in
push
pusha
mov
adc
cmp
sahf
pop
push
push
stos
ret
lea
add
xchg
xchg
insl
sbb
mov
inc
jns
sbb
jb
push
sbb
lds
mov
push
mov
mov
push
push
adc
rolb
loopne
popf
int3
cmp
pop
sti
ficoml
add
mov
adc
xchg
pusha
subl
xchg
adcl
cli
jg
mov
fwait
sti
inc
xorl
xchg
sub
je
xchg
icebp
clc
sbb
pushl
and
cmp
ror
inc
ljmp
xor
inc
test
cmp
mov
pop
inc
dec
or
out
out
add
mov
jb
out
sbb
js
rcll
push
dec
dec
mov
add
lret
dec
test
std
adc
mov
jb
addl
inc
lds
mov
roll
out
push
flds
shrl
dec
inc
pop
daa
or
ss
aas
fucomp
and
xchg
push
xchg
jmp
lods
mov
imul
iret
jmp
mov
adc
in
fdivrl
adc
mov
pop
adc
inc
lds
dec
pop
push
shr
insl
adc
repnz
test
ret
aad
dec
cwtl
dec
out
les
jns
mov
mov
dec
push
mov
mov
and
push
not
mov
lods
add
cmpsl
jb
test
lods
call
lods
out
imul
data16
shrb
ret
xchg
or
pushf
sti
add
cmpsb
jno
setge
inc
repz
push
addr16
imul
jmp
movsl
xor
pop
rcll
movsl
icebp
cli
mov
mov
fistpll
cmpsb
push
mov
data16
aas
xchg
test
repnz
push
xlat
xchg
mov
jb
rcl
push
stc
repz
sub
mov
fs
jge
xor
mull
insb
jns
fistpll
adc
out
scas
cmp
neg
mov
xlat
push
test
rcl
jecxz
fldt
push
adc
stc
jne
xchg
jne
adc
cltd
dec
push
mov
mov
aam
mov
adc
test
stos
adc
sarb
rcll
cmc
pop
sbb
ljmp
lret
or
adc
rcr
daa
lcall
adc
fstps
pop
cmp
inc
mov
ret
and
arpl
and
add
fwait
xor
push
arpl
and
out
mov
sbb
les
icebp
add
iret
loopne
es
fxtract
out
in
adc
xchg
ret
fldl
lar
je
das
sbb
ljmp
adcb
adc
xor
cwtl
and
sti
jnp
cmpsb
jl
mov
jns
cltd
and
add
sbb
mov
sub
pop
xchg
mov
mov
xor
jnp
dec
jb
aad
std
add
sbb
inc
jle
mov
int3
lret
loope
mov
sbb
loop
mov
mov
or
and
push
fisubrs
jns
stc
and
mov
in
sar
je
int
push
mov
ret
pop
xor
pop
dec
stc
out
arpl
loop
mov
scas
jle
xor
xlat
nop
xor
sbb
mov
dec
aaa
cmovae
shlb
add
sahf
and
and
aad
push
lret
stc
inc
movsl
xlat
cs
mov
loop
scas
mov
sub
push
xor
pop
sbb
cmp
mov
push
addb
pusha
or
sbb
mov
mov
mov
jae
mov
jle
or
es
mov
test
sub
je
stos
xchg
push
sahf
add
pop
or
dec
inc
xchg
jnp
cmp
jnp
pop
divb
jl
add
je
inc
mov
insb
pop
cltd
in
cmpsb
add
mov
sub
mov
cmp
cmp
adc
hlt
les
cmp
shll
jnp
ret
jle
sbb
dec
into
xchg
add
dec
outsl
sarl
mov
movsl
push
jmp
inc
fistl
in
out
add
outsl
ret
mov
mov
imul
fidivrl
sbb
mov
outsl
or
fmul
mov
js
notl
mov
jecxz
aam
jmp
pop
mov
lods
cmp
adc
sbb
cli
in
test
and
xor
hlt
dec
or
popa
scas
xor
fldt
dec
and
into
jecxz
xchg
jae
das
push
aam
push
outsl
xlat
jo
mov
stos
push
fcom
ja
xchg
pop
add
xor
ja
shll
bnd
mov
lcall
popa
or
shrb
loopne
mov
mov
xchg
cmp
add
xlat
scas
push
cmp
enter
cmc
call
mov
and
aam
inc
xchg
jnp
jne
mov
jp
lds
jge
add
ror
mov
and
arpl
xor
xchg
int
aad
shlb
pushf
mov
test
adc
icebp
add
dec
or
pop
testb
cmp
jnp
jae
dec
daa
add
fs
ret
add
or
and
mov
adc
mov
or
mov
pop
hlt
sbb
testl
or
and
mov
mov
inc
mov
push
std
scas
je
xor
loopne
cmp
pusha
cmpsb
ss
nop
mov
xchg
push
call
imul
lods
adc
mov
ljmp
outsb
mov
cmp
mov
ss
sbb
enter
or
addb
sub
cmpsb
and
push
repz
lahf
ficomps
mov
push
adc
cmp
jle
inc
jnp
xlat
repz
mov
test
fnsave
shll
jne
sub
cwtl
sarl
fnsave
lahf
jne
ret
push
stos
dec
xchg
mov
popf
mov
push
hlt
adc
out
das
repz
testl
fwait
sbb
mov
push
fwait
scas
pop
outsl
mov
jnp
icebp
mov
das
dec
insb
pop
jl
adc
mov
aad
add
in
cmp
data16
fistpl
les
jns
std
xchg
out
dec
push
jnp
or
inc
mov
call
lods
movsl
iret
dec
jnp
add
fdivr
adc
push
mov
fnsave
add
add
call
mov
fdivs
sub
cmp
jo
int
out
movb
push
sbb
mov
xor
or
and
jg
rclb
mov
mov
js
int3
ljmp
mov
mov
fpatan
scas
mov
inc
dec
adc
fiaddl
cmpsl
in
xor
sbb
cltd
cmp
mov
aas
cmp
cwtl
out
repnz
loope
mov
test
add
lret
xchg
int
shl
lods
test
cmpsl
mov
push
sbb
lock
enter
jg,pn
fildl
cmp
sbb
mov
mov
jle
imul
or
and
sbb
or
inc
or
jle
sbb
mov
inc
jnp
and
adc
mov
add
stos
out
cmp
xchg
mov
cmpsl
aad
adc
stos
jge
and
or
add
xor
out
daa
hlt
xchg
inc
adc
adc
loopne
outsl
fsubr
push
sbb
mov
jmp
jge
dec
bound
out
lea
loop
xchg
inc
insl
push
loopne
stos
mov
pushf
mov
dec
mov
push
push
aam
sarl
aaa
incb
xor
dec
test
and
push
xchg
outsl
sub
or
sti
in
cmp
mov
sub
pop
or
dec
sti
jp
mov
notb
sub
jmp
jne
dec
scas
mov
lahf
je
mov
jnp
scas
add
mov
cmp
pop
fidivl
stos
mov
add
cmp
xor
pop
testb
shlb
jmp
pop
pusha
push
movsb
jae
inc
push
push
test
mov
mov
push
lods
push
adc
ret
orl
and
aas
mov
mov
cmp
outsl
dec
cmp
hlt
popf
pop
lret
jle
fildll
rcrl
lahf
add
xor
and
inc
scas
pop
or
sub
das
push
push
lds
outsb
push
mov
fdivrp
cmc
lods
or
xchg
inc
pop
jl
push
jae
xlat
cld
mov
rorb
add
mov
push
mov
fidivs
fwait
shl
outsl
and
int
push
ror
ja
or
xorl
aas
push
aad
adc
fidivl
push
push
jp
ds
les
jno
mov
xor
sub
or
in
repnz
jnp
xor
mov
out
fidivrs
inc
into
test
mov
popf
inc
mov
aas
jle
sbb
call
movsl
icebp
cmp
js
or
mov
jne
repnz
repnz
testl
sbb
pushf
mov
fsts
dec
push
push
rcl
repnz
movnti
xchg
sub
dec
jnp
push
sub
popa
ret
inc
in
mov
push
aam
and
mov
nop
sub
adc
cvtps2pd
shl
mov
lahf
mov
mov
xchg
int
loope
sahf
insb
sbb
sub
xchg
lret
adc
filds
or
inc
into
or
pop
bound
mov
cs
inc
jns
bound
stc
stos
idivb
jl
adc
iret
call
fdivl
fucom
andb
outsl
arpl
inc
inc
icebp
fbld
iret
mov
jbe
push
repnz
add
xchg
jecxz
mov
dec
mov
scas
jne
les
mov
dec
jmp
xor
imull
clc
mov
sbb
loope
adc
mov
loopne
fsubs
jp
insl
stos
and
xchg
jmp
in
push
shll
mov
out
repnz
sbb
sbb
xchg
enter
int
fwait
add
out
push
jne
sbb
repz
aas
jmp
scas
inc
popf
out
push
cmp
jns
icebp
call
sub
or
leave
test
xchg
imul
cmpsl
inc
es
sub
pop
push
push
je
das
in
push
fcomps
or
or
and
outsl
inc
movsl
push
cmpsb
stc
ret
dec
xchg
fsubrl
jmp
stc
and
xchg
leave
jns
adcl
stos
test
repnz
test
push
xorl
sbb
lods
adc
popf
sbb
pop
cmp
xchg
iret
mov
xchg
mov
pop
insb
ret
cmpsb
mov
inc
insb
pop
cmp
xchg
mov
pushf
mov
push
adc
mov
sarl
push
pop
cltd
add
scas
pusha
dec
mov
movsb
jnp
test
cmc
sbb
sarl
call
out
js
xor
jp
pop
cmc
adc
stos
sbb
cs
ljmp
jecxz
test
push
mov
stc
inc
xor
cmp
rcll
adc
aad
xchg
popf
fstl
mov
shll
xchg
sbb
stos
nop
cmp
loope
or
sub
mov
test
and
rolb
inc
cli
fnstcw
cs
lahf
mov
mov
rcrl
mov
je
jnp
andl
aas
pop
sarl
out
jbe
pop
dec
sub
shll
shr
cmp
dec
inc
push
jne
push
xorb
ljmp
jl
test
aam
add
jbe
adc
clc
sub
xor
inc
adc
test
aaa
push
call
dec
stos
popa
daa
outsb
push
arpl
add
add
pop
sbb
sbb
into
shrl
scas
dec
outsl
xlat
rcr
or
mov
icebp
sub
loope
sub
cmp
mov
sub
xchg
repnz
lock
stos
jecxz
mov
adc
sbbb
aas
push
mov
mov
test
jno
js
cmp
xchg
adc
jp
xor
insl
test
xchg
hlt
adc
lods
out
pop
cld
pop
sub
sbb
fstp
pop
fs
jae
or
jnp
in
add
push
stc
mov
popf
pop
jbe
test
mov
imul
xchg
push
mov
sub
loop
mov
pop
test
xor
pop
aas
repnz
dec
adc
mov
test
sbbb
mov
and
leave
xlat
loopne
dec
daa
in
int3
adc
leave
insb
int
pop
in
lock
lods
gs
inc
mov
jge
mov
sti
jmp
add
pop
pop
sbb
cmp
sub
in
mov
repz
sbb
inc
out
jge
adc
clc
cwtl
jg
mov
jns
xor
jecxz
js
push
xorl
lret
xchg
cmpsl
and
mov
adc
xor
pushf
xorb
stos
loopne
push
sbb
jmp
das
add
mov
loop
pop
pop
fwait
jge
test
repz
adc
repnz
fs
cmp
lods
divl
lea
sub
orb
jae
xor
repnz
stos
in
int
and
roll
dec
and
ffree
ret
pop
shr
mov
iret
xorl
adc
cs
inc
out
or
push
call
in
ds
imul
fwait
mov
xchg
rcr
cmp
lret
jle
mov
sbb
mov
inc
ret
fiaddl
cmpsl
ror
je
adc
mov
dec
xchg
iret
popa
push
sbb
add
ret
lock
outsl
pop
test
outsb
and
jb
and
xchg
or
lcall
lret
ljmp
js
push
sbb
sbb
dec
add
cmpsb
out
les
cmp
lahf
xchg
fs
into
sbb
faddp
adc
and
and
lea
sti
outsb
xchg
fs
bound
pop
in
testb
ds
lods
inc
and
fildl
pushf
add
xchg
mov
sub
fdivrs
fwait
pusha
jg
sarb
in
mov
clc
add
aam
jle
ficoms
clc
xor
pop
mov
addr16
shrb
pop
and
dec
push
fstpl
push
push
mov
xlat
sahf
sbb
fsubl
mov
lcall
push
or
test
je
das
jmp
scas
push
push
fnstcw
mov
outsb
xchg
decb
jb
sbb
xchg
mov
stc
dec
cmpsl
mov
dec
push
pop
push
and
out
or
imul
sti
loop
mov
mov
push
packuswb
repnz
cmp
cmp
sbb
inc
cmp
mov
xchg
inc
int
mov
aam
repz
mov
lods
jno
push
cmpsb
xor
dec
pop
or
rorb
add
nop
mov
in
aam
xchg
pop
lret
addr16
in
and
dec
jp
rcll
bound
sub
dec
stos
lock
lea
push
fisttpll
push
xor
xor
mul
pop
mov
mov
and
and
pusha
aas
repnz
ret
inc
sbb
xchg
adc
and
inc
mov
out
or
insb
js
push
das
mov
movsl
adc
mov
dec
test
fs
sbb
repz
xchg
nop
decl
xchg
xor
push
das
pop
add
subb
inc
xor
insb
mov
test
in
sbb
fists
daa
dec
cmp
push
add
cmc
jb
ds
xchg
ret
addl
add
aaa
pusha
dec
shll
pop
rcrl
push
imul
sub
mov
adc
jne
scas
lds
movsl
jecxz
loop
cli
test
inc
test
insb
in
xchg
jl
ret
cwtl
outsl
rclb
or
adc
cmc
sbb
jp
xchg
fmuls
lds
jo
scas
mov
xchg
shrb
cmp
das
pop
xchg
xchg
je
jge
testl
rcll
inc
cmpsb
or
cwtl
push
and
repnz
sarb
mov
xchg
lods
dec
inc
lea
sbb
ret
nop
jno
or
hlt
shlb
xchg
push
pop
adcb
jns
adc
mov
shl
mov
in
dec
xchg
mov
js
imul
jge
sub
ror
cmpb
aam
mov
iret
jl
andb
mov
iret
lock
lods
lret
pop
ret
jmp
shl
xchg
mov
mov
pushf
pop
roll
push
add
pushf
pushf
popf
mov
or
push
sub
imul
repz
mov
mov
cmc
pushaw
adc
jno
mov
push
pop
xor
push
es
mov
mov
test
push
cli
jbe
lcall
inc
ja
movsl
ss
sub
lcall
cmp
mov
xchg
mov
jae
je
xor
push
jl
in
jge
jb
lock
popf
dec
mov
data16
xchg
pop
rcll
jmp
mov
sbb
ja
mov
xchg
or
pop
xchg
adc
mov
lret
inc
or
jge
push
movsl
lea
mov
int
jnp
xchg
sub
decl
jo
jecxz
adc
orb
mov
cmp
jle
push
into
pop
movl
inc
fmull
or
addr16
push
cmp
xor
test
mov
mov
jae
push
push
std
pop
inc
sahf
cltd
cs
out
xor
push
fstl
roll
clc
xor
jecxz
inc
repnz
dec
ret
jge
xlat
jbe
mov
hlt
scas
mov
mov
fcompl
mov
dec
movsb
cmp
mov
sbb
cmp
ja
adc
push
bound
jne
cmp
aam
sbb
sti
add
add
pop
push
fsubl
push
xor
push
cmp
mov
outsb
sub
iret
ds
fs
adc
push
pushf
in
stos
clc
cmpsl
push
pop
mov
mov
adc
jmp
xchg
test
xchg
sbbb
ljmp
imul
mov
ljmp
sub
inc
fists
fldt
pop
shl
in
jmp
or
mov
bound
dec
and
subb
jmp
out
ret
shld
push
ret
pop
dec
xchg
ds
xchg
pop
fstps
pop
xchg
push
insb
lock
add
aam
ljmp
popf
stos
popf
dec
xor
push
lahf
mov
adc
arpl
pop
pusha
sbb
into
inc
fisubs
cmp
pop
jl
mov
dec
jg
in
ficoms
xchg
popa
jo
popa
rcrb
inc
rol
test
adc
int3
pop
sbb
add
xchg
mov
fcmovnu
hlt
hlt
mov
adc
or
cmpsb
mov
pop
bound
dec
inc
into
push
jmp
stc
pop
pop
lods
and
or
fwait
sbb
icebp
cmp
cli
sar
sbb
inc
jo
pop
mov
in
mov
pushf
adc
sbbl
clc
jnp
cmp
test
xor
into
and
push
lret
sub
paddsw
je
dec
add
mov
out
or
mov
stc
or
fiadds
popf
popa
sbb
add
cs
and
inc
mov
pop
sahf
shrb
stos
xor
pushf
push
push
dec
add
ficomps
and
pop
jnp
aad
ja
pusha
in
xchg
xchg
adc
data16
hlt
or
dec
cs
std
dec
xchg
push
xorb
out
inc
rol
jae
cmp
rol
dec
mov
inc
mov
jecxz
adc
cmp
cltd
mov
imul
fucompp
dec
sub
push
jmp
push
xchg
push
stos
jne
rorb
jbe
cli
and
js
icebp
fucomi
fcomps
ret
pop
inc
call
xchg
shlb
sub
jo
or
lds
add
lret
les
dec
pop
std
push
cmp
dec
sub
cmp
inc
mov
push
int3
lds
sbb
mov
jnp
xchg
xor
jle
dec
in
pop
and
adc
dec
into
cmpb
sahf
pushl
in
adc
push
fdivr
jb
sub
add
xlat
add
xor
xchg
adc
call
xchg
ficoml
add
shll
loop
dec
inc
add
mov
sbb
push
loope
sbbl
jnp
insl
sub
xchg
cmp
stos
inc
pusha
gs
xchg
or
mov
lret
mov
nop
and
xchg
mov
xor
push
scas
test
mov
and
repnz
cmp
scas
jbe
cmpl
push
mov
fmull
sahf
movsb
movsb
cmp
add
lds
push
in
dec
js
mov
and
inc
add
jbe
pop
or
cwtl
adc
icebp
xchg
sbb
xor
sub
aam
decb
push
mov
push
push
xor
pop
repnz
lea
dec
adc
inc
dec
add
cmp
cmpsl
sbb
jp
sahf
pop
aas
loopne
mov
mov
pop
add
aad
lock
xchg
add
cmp
imul
push
lahf
test
push
xor
jnp
movsl
mov
xchg
hlt
imul
iret
fdivs
jo
repnz
push
ljmp
rcr
xchg
and
loop
mov
pop
adc
movsl
shll
inc
fistpl
xchg
lahf
sar
and
cmp
or
in
jae
out
mov
repz
insb
test
and
mov
cli
jecxz
aad
nop
add
icebp
jmp
mov
cwtl
testb
push
cmp
adc
pop
adc
jg
push
mov
xlat
push
pop
dec
xchg
enter
outsb
pop
sbb
aam
xor
xchg
dec
xchg
fisubrl
or
mov
das
icebp
rorl
or
roll
or
xor
test
pushf
mov
scas
push
lret
cmp
inc
xchg
dec
xchg
and
dec
sub
mov
or
int3
roll
cltd
enter
idivb
sbb
pop
adc
add
pop
xchg
mov
pop
leave
je
ljmp
lds
aam
lcall
in
pop
scas
flds
rorl
cmp
inc
or
out
pop
repz
in
add
sbb
or
or
xchg
xchg
adc
sar
popf
inc
jnp
pop
cwtl
ror
fsubl
jp
nop
lods
adc
imul
aam
in
mov
lods
out
push
ret
pushf
jae
lret
pop
test
xor
inc
mov
mov
add
or
gs
loopne
repnz
cmpsl
int3
aam
jb
sbb
push
mov
cmpsb
popa
data16
ljmp
lahf
insl
jge
and
and
mov
push
mov
addr16
dec
leave
lret
repz
add
adc
out
ljmp
jg
arpl
std
jns
cmp
push
or
mov
inc
inc
sti
loope
adc
lahf
ret
pop
mov
gs
sbb
sti
rcll
aam
imul
and
mov
push
inc
movsl
stc
inc
or
scas
mov
pop
pop
lcall
pop
jge
dec
in
xor
or
imul
out
aas
cmp
lret
stos
jle
bound
mov
call
xor
sbb
loop
ss
sub
mov
ret
fwait
push
daa
aad
push
mov
jno
imul
adc
rolb
or
sbb
xchg
mov
add
rolb
orb
outsl
ret
sub
sti
cmpsb
jg
aaa
stos
adcl
rorb
mov
inc
cmpsl
arpl
out
add
sbb
repnz
nop
mov
push
cmpsb
lret
dec
adcl
or
mov
inc
jmp
pop
rcll
and
xchg
push
lock
gs
push
xor
fistpl
fisttpl
addr16
test
int3
out
xchg
inc
rcll
jl
xchg
iret
xchg
imul
out
add
add
sahf
adc
sub
sbb
int
popf
stos
scas
sbb
cs
pop
sbb
loop
jge
mov
popf
imulb
sub
sar
fwait
adc
mov
cmp
adc
pop
test
xor
lret
and
xchg
and
js
add
mov
ds
push
in
sub
jge
or
gs
jmp
fsubr
push
xchg
iret
lods
sti
dec
fwait
push
or
push
ljmp
and
out
mov
mov
push
subl
pop
mov
jbe
sbb
fs
pop
adc
or
push
cmpsb
push
push
out
lcall
xlat
xor
enter
adcb
sub
dec
in
add
xchg
andl
xor
mov
ljmp
cmp
mov
sub
push
sti
push
jb
xchg
ret
dec
repnz
andl
adc
add
xor
pop
push
ja
ds
ficoml
fstps
inc
es
lock
lock
jne
push
xchg
out
sub
mov
dec
repnz
in
negl
fsubl
mov
nop
mov
into
sub
loope
xor
cmp
push
shrl
xor
popa
sub
call
inc
and
mov
mov
xchg
sbb
notl
outsb
sub
mov
mov
js
xchg
sahf
and
sub
sbb
or
enter
jge
push
sbb
and
or
daa
ficoml
pop
cwtl
xchg
jb
xor
add
mov
or
sbb
outsl
cmp
sub
lea
aad
mov
lahf
sub
fsts
lret
mov
pop
pusha
pusha
lea
add
arpl
lea
js
add
sbb
and
dec
repnz
rcl
push
call
or
inc
int
mov
std
xor
aaa
add
cltd
adc
add
push
loopne
push
xor
bswap
rorl
das
cld
out
dec
std
push
push
jg
pop
xchg
ljmp
or
mov
out
pop
pusha
and
sub
loopne
lret
adc
outsl
xchg
clc
popf
sub
rorb
out
xchg
cmc
repnz
sub
loopne
lds
mov
lea
test
test
iret
mov
jnp
cs
je
daa
pop
mov
mov
jge
lea
xchg
mov
sub
popl
xor
testb
idivl
std
sub
xchg
ja
or
jp
test
mov
sbb
lahf
ret
jne
inc
std
fidivl
cmc
in
sub
push
lea
std
repnz
dec
push
and
xor
xlat
lods
sbb
xchg
sub
mov
push
shll
sub
mov
dec
pop
movups
stos
dec
xor
pop
sub
mov
add
or
mov
mov
push
xchg
push
mov
call
cmp
sti
jl
mov
inc
orl
pop
sub
sub
xor
sahf
out
cmpsl
cmpsl
sub
sbb
xchg
adc
fdivrl
imul
popl
pop
mov
enter
into
jae
cmpsb
dec
cmp
lock
int
or
cltd
in
iret
fcoms
lahf
scas
sub
and
mov
jmp
iret
add
shll
add
fisttpl
cld
out
jne
popf
ja
cmp
dec
insl
xchg
push
leave
add
bound
imul
cmpsb
test
xor
xlat
mov
dec
int3
loop
hlt
aas
rcrb
aad
push
dec
bound
in
mov
frstor
js
mov
lds
xor
xchg
mov
push
push
sbb
cmp
mov
rorb
cwtl
lods
xor
adc
mov
js
xchg
inc
xchg
test
pop
xor
jl
lea
out
gs
xchg
xchg
rorl
cld
lds
scas
xchg
subb
mov
jne
mov
mov
lock
popf
xor
out
sbb
pop
adc
cli
mov
xchg
lock
fwait
ror
andl
xchg
push
sahf
repnz
adc
insb
scas
push
shll
cmova
cmpsb
and
cmp
in
sbb
jge
fdivrl
ret
dec
cmpsb
insl
jb
aad
subl
add
subl
mov
sbb
adc
push
popf
sar
sub
lea
mov
scas
inc
xchg
and
add
iret
icebp
push
xchg
lahf
xchg
and
ds
pusha
mov
out
mov
xor
fistpll
push
mov
movsb
push
sbb
pop
gs
cli
js
push
jmp
dec
enter
jno
or
fninit
sub
insb
and
mov
push
fisubl
enter
movsl
mov
jl
je
pop
aaa
addr16
cmp
std
jg
and
loopne
idivb
out
int3
mov
cld
dec
pop
pusha
lds
jae
aam
and
bound
cmp
mov
and
cwtl
test
pusha
inc
movsb
test
dec
push
sub
pop
inc
mov
cmpsl
cwtl
ljmp
pop
in
cmp
daa
cmp
jp
ret
dec
xlat
sbb
xchg
lret
add
das
vpmullw
fcomps
cmpsl
aaa
ret
xchg
jns
sti
mov
xor
mov
mov
adc
mov
push
sub
je
lret
ds
out
lret
scas
sbbb
dec
dec
sub
std
push
pop
jo
mov
outsl
and
ja
es
pusha
adc
mov
or
or
mov
fisubrs
or
fstps
add
iret
es
add
shl
cld
sbb
inc
add
jmp
sbb
xor
jne
std
fdivrl
or
dec
pop
cmp
mov
pop
adc
aam
xchg
scas
hlt
push
shrb
or
daa
xor
pop
sub
sub
lcall
mov
pop
xor
fs
jo
fldcw
fistpl
sbb
int
adc
incl
imul
and
ror
cmp
dec
pop
pop
inc
lahf
subb
lea
mov
or
adc
xchg
jae
sti
outsb
pop
pop
sbb
sub
xchg
shl
rcll
rcrb
jnp
and
sub
out
and
push
rcr
mov
push
jle
out
mov
xlat
or
int3
jmp
dec
push
adc
mov
lea
adc
rcrb
add
xchg
mov
push
hlt
aaa
fwait
dec
mov
sub
add
pop
shll
xor
mov
scas
inc
dec
inc
das
mov
jmp
mov
aam
cld
add
inc
and
subl
mov
jb
inc
sbb
sbb
in
ljmp
fprem
xor
movsb
test
shll
xchg
mov
or
sbb
in
pushf
repnz
mov
out
pop
add
ficoml
sahf
mov
pop
popa
mov
scas
rolb
mov
insb
stos
rclb
mov
cld
mov
push
call
and
or
add
and
pop
mov
mov
push
out
fidivrl
push
pop
pop
push
push
xor
mov
jo
fdivs
es
sbbb
aaa
in
stos
cwtl
andb
popf
popf
mov
cmp
in
jge
sbb
test
xlat
inc
jmp
arpl
in
jne
lods
in
sub
cwtl
stos
mov
lea
lret
mov
aam
jecxz
sti
jo
jne
lods
aaa
fidivrl
stos
lods
cmp
inc
xchg
mov
lods
mov
nop
mov
lea
daa
mov
stos
in
dec
dec
loopne
dec
je
imul
daa
scas
jl
cmp
or
ficoml
cld
sar
ljmp
inc
mov
lret
cmp
pop
les
pop
shll
xor
in
sarl
sti
pop
mov
pop
xchg
movsb
push
ss
xlat
mov
pop
std
mull
cwtl
cmpl
cmp
jl
sbb
daa
out
or
mov
mov
jg
add
or
jno
push
adc
addr16
xchg
xchg
jne
dec
ja
cwtl
sbbl
js
movsb
xchg
jo
inc
cmpsl
bound
sbb
inc
ficoml
add
jnp
in
sub
mov
xor
enter
das
adcl
pop
das
cmp
int
sbb
sbb
push
xchg
and
jae
jns
sti
lock
ret
stc
pop
es
xchg
jae
outsl
push
sub
or
loopne
movsl
sarb
inc
mov
dec
push
pop
sbb
inc
jp
sub
stos
pop
int3
icebp
push
jno
sbb
mov
adc
push
mov
in
sbb
nop
out
inc
adc
lds
ret
jnp
mov
repnz
lret
jge
insb
je
in
jge
addr16
pop
xchg
fbld
push
pop
sub
pop
cmpsb
stos
clc
movsb
sahf
lcall
cmc
mov
scas
sbb
mov
fsubrs
nop
popa
testb
sbb
and
out
je
decb
aas
lods
aas
adc
repz
cmpsl
dec
cmp
fcom
adcb
ret
lret
xchg
cmp
gs
pop
rcl
xor
cmc
movsb
scas
add
pop
shll
aas
cwtl
ds
push
pop
push
sbb
call
adc
test
add
shrl
cmp
push
test
push
aad
jne
mull
icebp
adc
xor
cld
data16
mov
fiaddl
and
fstpl
fldcw
dec
adc
jae
cltd
mov
mov
mov
inc
sbb
sub
arpl
push
imul
subb
fwait
cmp
outsb
push
sub
jmp
add
mov
xor
sub
mov
scas
jne
decl
js
sahf
xchg
mov
ret
ds
jge
inc
leave
clc
iret
xor
xchg
add
fcmovu
mov
dec
mov
mov
rclb
sbb
dec
adc
dec
jo
fdivp
lock
mov
or
pop
lcall
push
mov
das
aad
inc
adc
gs
mov
lods
jnp
repz
xchg
pop
pop
adc
jno
call
push
adc
mov
push
dec
or
ljmp
jecxz
xchg
jb
lea
push
jmp
lcall
imul
enter
loope
pop
cmpsb
cmp
in
jae
dec
pop
adc
xor
insl
inc
outsb
mov
jecxz
int3
pop
sbb
jmp
loopne
mov
inc
or
insb
jge
fs
inc
xor
xchg
incb
and
cmc
pop
ret
inc
xor
test
outsb
nop
dec
jo
xor
adc
test
xchg
lock
adcb
popl
ret
inc
lods
sbb
jp
add
aad
mov
enter
js
lret
mov
stos
cmp
rcll
sbb
mov
daa
xchg
xor
or
test
pop
rcr
inc
jno
sbb
mov
test
fimuls
xor
iret
xlat
lods
push
shlb
pushf
xchg
dec
imul
lods
push
xor
mov
mov
pop
mov
push
jl
sub
jne
sub
and
jae
pop
enter
fldenv
je
push
in
sbb
lcall
dec
lret
cli
sub
cmpsl
jecxz
mov
jnp
push
not
xlat
stos
orb
xor
lahf
fsubrl
xor
cmp
clc
shl
cmpb
fldl
push
pop
jae
fstpl
out
inc
mov
stos
in
out
add
jne
rorl
add
mov
jb
jmp
out
mov
jo
dec
jl
adc
jb
aaa
add
jecxz
inc
push
mov
pop
fmuls
mov
xor
int3
push
cmc
daa
lods
xor
xor
lods
mov
mov
cmc
jmp
sbb
mov
outsl
or
or
jno
xchg
clc
push
pushf
jl
iret
sub
int
mull
inc
mov
icebp
mov
pop
mov
aam
stos
shll
repnz
cmp
adc
cmpsb
dec
sub
fnstsw
push
scas
add
xchg
sub
jo
in
and
iret
mov
test
mov
addr16
pushl
pop
mov
inc
sub
inc
dec
mov
xor
inc
xchg
cltd
adc
push
ret
mov
pop
les
pop
nop
outsl
lods
dec
gs
dec
mov
jge
jns
xchg
add
fs
inc
push
into
push
popf
movsb
push
jg
jns
and
mov
or
stc
ljmp
stos
inc
fnstsw
sarl
out
daa
stos
xchg
in
cwtl
add
mov
jle
push
adc
and
xchg
inc
xor
cmc
outsl
add
mov
pop
xor
popf
or
pusha
add
das
jge
ljmp
out
push
xchg
jne
sbb
inc
clc
pop
xor
clc
in
inc
push
dec
jnp
sub
push
pop
push
enter
test
cmpsb
rcr
and
fimuls
ret
push
inc
dec
arpl
lret
leave
shr
jl
hlt
xor
lods
mov
jl
xor
aas
test
movsl
mov
nop
push
xor
sub
dec
sub
jge
insl
arpl
mov
xchg
jmp
xchg
shlb
xchg
ficoms
lods
in
iret
sub
mov
in
xchg
push
rorb
cmp
hlt
ret
leave
and
sub
xchg
mov
xchg
rolb
dec
mov
pushf
rcr
xchg
ja
xchg
sub
cmp
jg
mov
and
lea
cmp
mov
std
mov
int
into
mov
jl
inc
push
repz
mov
mov
sbb
mov
lret
cli
sbb
lcall
jp
scas
inc
pop
lea
cmp
adc
cmpsb
pop
sub
imul
xlat
aad
xor
or
mov
adc
adc
push
icebp
inc
out
outsl
cmc
in
repz
rcl
int
getsec
loopne
dec
mov
mov
scas
test
arpl
sub
in
insl
daa
cltd
add
pusha
mov
sbb
andb
jo
aad
je
loope
push
xchg
loop
iret
sub
lret
mov
fnstcw
adc
scas
hlt
dec
xor
xchg
nop
mov
icebp
out
inc
int
jnp
stos
ljmp
je
jmp
adc
stos
insb
adc
insb
das
notl
jns
push
mov
loope
fisttps
rcll
rcr
cmp
add
and
xchg
push
sarl
mov
xchg
jno
outsl
fistpll
pop
jge
test
mov
xchg
push
xchg
fstl
addb
mov
ja
cmp
leave
in
loope
mul
cmovbe
xchg
mov
jns
test
popf
mov
xchg
mov
jbe
arpl
mov
repz
inc
push
mov
jae
ret
mov
cli
mov
inc
mov
enter
je
pop
or
lods
fsubs
sub
and
mov
ss
xlat
divb
fldt
aam
and
xchg
and
adc
cmc
movsl
xchg
adc
cwtd
lods
std
lret
shll
lret
sub
push
mov
pushf
add
dec
jg
pop
adc
mov
adc
fsubrp
sbb
mov
das
test
in
and
mov
push
fdivr
mov
call
lahf
push
jae
dec
leave
push
jb
testl
sub
mov
mov
add
insl
and
in
mov
mov
jae
je
nop
pop
test
sub
aas
inc
jp
repnz
adc
aas
aas
cmp
imul
es
push
shll
js
imul
push
arpl
pop
in
jno
push
icebp
repz
mov
lahf
cmp
fxch
movsb
sbbb
scas
push
cmpl
cmp
ja
mov
add
jbe
fdivl
mov
pusha
sub
or
mov
or
jge
sub
push
test
in
fmuls
stos
in
and
mov
mov
mov
mov
rcrl
and
andb
xor
mov
add
clc
movsw
jb
scas
stos
push
mov
jle
aad
jmp
push
cmpsl
inc
sub
inc
in
decl
cmovnp
sub
cli
loopne
pop
and
push
and
or
insl
subb
cwtl
js
add
lahf
mov
lds
in
test
in
iret
xor
and
pop
xor
movsl
and
mov
adc
mov
push
in
xchg
adc
sub
adc
add
dec
inc
jae
dec
mov
pop
add
mov
pop
push
or
jbe
out
dec
cwtl
test
int
pop
lods
movsb
popf
mov
scas
fcomp
pop
mov
imul
sub
xor
xor
adc
mov
push
fisubrs
in
sbb
push
push
sub
and
xchg
into
jmp
dec
lods
or
mov
pop
shl
mov
pop
out
push
call
insb
sub
aam
push
inc
sub
jecxz
mov
scas
js
imul
sub
mov
jbe
mov
lock
sbb
jb
xor
xchg
arpl
movsl
sti
mov
pusha
pusha
lea
lock
cmp
pop
cmp
cs
cmp
lea
add
dec
in
int3
andl
in
dec
sbb
dec
mov
jp
jl
loope
cmp
aaa
jbe
test
sar
popf
sub
std
imul
or
stc
loopne
push
mov
jnp
inc
inc
pop
xchg
fisttpll
dec
or
cli
lock
jg
xchg
ficomps
rclb
fs
cwtl
popf
imul
jno
aam
sub
inc
imul
mov
sub
mov
mov
aas
ljmp
mov
nop
inc
dec
lret
cmp
cmp
fcmovnbe
or
popf
in
ds
data16
push
bnd
ss
jmp
or
jnp
stos
mov
or
jmp
loope
cld
mov
push
dec
cmp
mov
push
inc
mov
int
push
fisttpll
insl
loope
dec
dec
stc
outsb
fnstsw
std
jmp
cs
and
jmp
sti
adc
sbbb
jnp
jp
and
imul
rcll
in
dec
and
push
pop
lcall
mov
mov
mov
xchg
pop
loop
mov
dec
subl
adc
push
leave
js
push
pop
pusha
pop
mov
add
pop
and
lea
lahf
or
clc
fisttpl
pop
mov
mov
sbb
dec
mov
inc
repz
imul
sbb
mov
pop
or
adc
bnd
test
mov
in
cmp
xchg
dec
fldl
sub
lods
jns
jge
push
outsl
cli
pusha
xlat
mov
fstl
repnz
jae
movsb
les
std
jle
sub
testb
lods
mov
and
adc
xchg
fs
and
sbb
or
sbb
rcr
jns
or
lea
pushf
aam
jo
dec
pop
cvtdq2ps
sbb
sub
jb
mov
push
pop
inc
xor
arpl
or
ja
stos
cmp
fnstcw
or
test
adc
xor
leave
lret
push
sub
shl
sub
jo
mov
dec
out
pop
add
stos
and
rcl
and
sti
cmp
adc
pop
pushf
jge
in
jo
loope
xor
xchg
lret
inc
inc
or
push
js
test
pop
pop
pusha
push
xor
mov
mov
mov
cmp
add
xchg
stc
mov
inc
arpl
ja
pop
mov
je
les
mov
je
mov
ret
sahf
xchg
movsbl
lods
lds
xchg
mov
pop
push
sub
and
add
fists
jge
push
xor
sub
in
and
out
imul
jp
or
jno
or
mov
xor
cmp
push
mov
add
sub
sbb
dec
xchg
sti
leave
ljmp
aas
push
and
jmp
inc
and
test
xchg
arpl
xchg
push
cs
dec
mov
jmp
cs
xor
js
mov
add
xchg
jb
sbb
in
in
div
xchg
cld
adc
cmpsb
adc
jae
inc
xchg
div
add
push
sbb
test
in
adc
sub
xor
adc
fxch
adc
fldcw
mov
addl
gs
mov
xchg
lret
jle
lods
push
or
sbb
cmp
lcall
and
pop
outsl
cmpsl
dec
je
mov
sub
aam
addr16
in
xchg
cmc
push
cmp
sbb
pop
mov
call
jge
mov
pop
das
mov
mov
jo
test
pop
and
sbb
cmpsl
fbstp
push
pcmpgtd
adc
insl
cmp
pop
mov
out
pusha
in
or
mov
fldcw
push
adc
jbe
dec
jae
idivb
xchg
cmp
aaa
cmp
inc
fistps
pop
push
cmp
jle
xor
pop
movsb
mov
sub
xchg
enter
xor
fisubs
xor
in
mov
inc
mov
xchg
outsl
mov
andl
mov
dec
mov
loope
or
xchg
test
or
sub
test
mov
xchg
dec
imul
pusha
add
or
mov
pop
ss
lea
int
aaa
lea
clc
sub
cmpsb
inc
dec
or
addr16
repnz
dec
jecxz
fucomip
mull
lret
or
ret
jmp
add
movsl
add
jl
mov
inc
test
rclb
push
lods
mov
ss
push
and
push
sbb
xor
jns
and
stos
adc
loope
cs
xlat
fisubrl
sti
jl
mov
scas
or
fmul
and
push
popf
push
popf
std
iret
repz
ja
or
xchg
mov
in
add
in
push
sub
out
popf
fs
fdivs
icebp
ss
outsb
and
xchg
les
xor
inc
mov
pushl
dec
icebp
lcall
pop
inc
mov
ret
xlat
xor
out
out
pop
out
into
cmp
je
ss
pop
inc
add
int
jae
cmpsl
mov
xchg
popa
pop
or
mov
or
add
lods
imul
iret
cmp
sbb
and
ret
sbb
adc
xchg
add
jb
pop
push
std
ret
inc
push
xor
lock
enter
outsb
pop
sub
sbb
addr16
mov
jmp
sub
or
out
xchg
dec
fcomi
mov
pop
out
adcl
sub
lret
mov
fstps
nop
icebp
fcomp
xlat
outsb
lret
cmp
or
ljmp
lret
adc
test
xor
xor
cltd
cmp
stc
push
or
pop
sbb
mov
mov
jl
ror
mull
jge
test
jle
stos
jnp
ret
sbb
push
pop
jmp
xchg
mov
stos
cwtl
inc
dec
addr16
or
movsl
or
pop
jecxz
sub
popl
inc
and
ljmp
xor
ss
aam
pop
sahf
jle
mov
xchg
aaa
test
sti
xor
push
mov
mov
hlt
push
ja
mov
loopne
inc
out
fimuls
adc
test
popf
neg
ret
shrl
xchg
xor
add
imul
push
loope
mov
mov
push
nop
shll
cli
and
hlt
test
cmp
xor
mov
and
and
add
or
fstl
push
inc
fcmovne
aas
ds
es
out
pop
push
adc
inc
ljmp
inc
decl
add
mov
sub
in
jns
out
ja
xchg
inc
pop
insl
lea
push
ret
mov
fcmovb
jae
mov
popa
fbstp
sbb
sbb
mov
movsl
push
jne
repz
or
cmpsl
mov
sbb
adc
pop
pop
adc
sub
shrb
mov
int3
sub
push
xchg
mov
ljmp
inc
adc
xchg
add
in
add
inc
jecxz
pop
mov
or
scas
pop
jge
and
iret
and
cltd
or
inc
mov
sbb
mov
in
mov
rcll
add
imul
in
das
fwait
jp
and
into
call
in
fbstp
outsl
pop
in
std
push
mov
iret
xor
push
xchg
inc
mov
es
aas
loop
inc
xchg
sbb
popa
loope
clc
xchg
into
pop
and
mov
cmp
loop
inc
int3
out
dec
jle
adcl
xchg
push
push
xchg
inc
push
push
sub
push
jns
xor
adc
sub
sarl
loop
jb
jae
dec
push
ja
scas
xor
bound
sub
call
aas
int
popa
mov
and
xchg
in
loopw
ficomps
repz
in
cs
push
out
sti
out
ficoms
jo
jle
mov
iret
pop
std
imul
jmp
sub
fcompl
enter
dec
sub
pop
bound
push
cmp
mov
ret
mov
je
sub
push
jp
rcll
cmp
or
or
imul
or
and
ficoms
sub
push
mov
push
shrl
pop
nop
inc
pusha
push
cmp
jno
xor
xchg
xor
outsl
aaa
inc
andb
and
out
test
adc
jno
sbb
cmp
cmp
jg
sub
xchg
dec
mov
add
fnstcw
sbb
lret
lcall
jne
xor
lret
pusha
ds
add
and
push
cmp
jno
cmp
int
pop
jecxz
dec
mov
jp
push
xchg
pop
fcmove
mov
xor
push
cmpsl
in
sbb
mov
lret
pop
es
imul
adc
das
sub
scas
aas
popa
or
push
sbbl
call
jns
xchg
fldt
sbb
mov
inc
outsl
je
sub
test
jg
adc
pop
lds
xchg
loope,pn
pop
insl
jl
stc
imul
push
insb
cmp
pop
shlb
enter
xchg
jbe
sub
ss
enter
pushf
pop
in
roll
adc
popa
loopne
mov
xor
jo
pusha
cmp
xlat
dec
sbb
movsl
hlt
lahf
dec
fistl
xchg
es
jmp
push
mov
lods
and
outsl
ret
dec
jb
mov
cmp
int
mov
mov
sti
add
jge
arpl
mov
mov
adcb
out
pop
jne
inc
add
dec
imul
mov
pop
jbe
push
repz
mov
pop
psubq
xchg
pop
cld
push
push
jecxz
xlat
or
in
sbb
mul
push
pop
lret
sbb
js
sub
std
mov
cwtl
ss
sub
mov
shll
outsb
lea
fs
push
insl
aas
test
les
xor
in
sub
sbb
add
xor
jg
mov
mov
addr16
pop
imul
sub
jl
insl
cmp
call
sbb
test
adc
mov
jmp
aaa
cld
mov
nop
clc
and
push
movsl
mov
mov
imul
dec
in
xor
sub
das
cmp
jno
aam
sbb
test
adc
xchg
movsl
icebp
dec
imull
mov
aam
and
popa
jae
ja
fdivs
add
xor
inc
fcmove
enter
repz
insl
or
ja
cmp
mov
gs
push
lds
ret
cmp
sbb
decb
or
push
adc
xchg
outsl
xchg
mov
adc
cmp
shll
in
je
dec
lock
pusha
jae
ljmp
sub
mov
or
mov
mov
push
or
bound
cmc
add
lea
iret
popa
inc
add
mov
dec
repz
and
ret
dec
scas
inc
les
sbb
xor
leave
or
xor
mov
ss
fcomps
cmpsb
sbb
or
and
adc
out
sub
rolb
inc
rclb
mov
adc
mov
int3
fadd
pop
lret
or
mov
mov
push
ljmp
inc
jmp
aam
scas
sti
mov
xchg
gs
pop
push
adc
aad
mov
daa
mov
int3
jae
int
sti
sarb
ds
mov
xor
push
ffree
loop
mov
andb
mov
add
mov
mov
add
movsl
addr16
jecxz
mov
cs
aad
inc
inc
addr16
mov
mov
push
inc
sub
pop
shll
inc
push
or
pop
icebp
inc
inc
jecxz
dec
pop
lret
cmc
loop
jmp
mov
sahf
dec
jmp
mov
or
pop
mov
jmp
xchg
xchg
inc
stos
movsl
ficoms
in
in
xor
decl
vmread
lock
mov
ljmp
leave
push
or
fstp
inc
xchg
repz
lods
ss
xchg
sub
add
add
popf
fptan
dec
stc
inc
xchg
cld
data16
lret
daa
mov
cmp
je
xchg
pop
outsl
nop
fsubl
sahf
jg
loop
or
jo
inc
mov
cmpsl
xchg
pop
and
fisubrl
sbb
add
inc
cli
stos
xchg
jp
fstl
and
outsb
call
out
sarl
out
dec
pushf
outsb
das
inc
or
fbld
inc
mov
mov
and
add
or
xchg
and
mull
stos
and
imul
xchg
mov
mov
dec
pop
or
insl
dec
aad
lahf
sub
pop
or
ret
jae
mov
in
ret
fbstp
jo
shl
push
pop
pop
adc
addr16
call
roll
enter
and
cld
ja
xor
cmpsb
push
jne
cmc
in
fdivl
cmp
cmp
dec
sub
pop
jmp
adc
and
sbb
icebp
jb
xor
jl
pop
mov
inc
aaa
mov
add
popf
cs
ficomps
clc
or
movsl
imul
repz
in
pextrw
pop
imul
adc
cmp
dec
mov
push
out
add
mov
push
jno
scas
stos
xlat
cmp
mov
jle
jno
mov
jb
mov
cmpsb
insb
pop
arpl
int
js
xchg
push
xor
dec
sub
rcll
mov
xchg
imul
call
lods
pop
call
inc
mov
push
inc
mov
ljmp
push
ljmp
mov
pop
pusha
loope
push
lds
jns
sub
or
xor
push
adc
mov
nop
roll
mov
test
gs
and
pushf
mov
das
scas
xlat
mov
div
mov
nop
fwait
mov
repz
stos
push
cmp
jmp
subl
in
pushf
into
xor
rclb
pop
pop
cmc
rcrb
lcall
test
mov
inc
dec
mov
mov
mov
sub
pop
cmp
ret
test
dec
cli
int3
pop
shlb
mov
inc
add
mov
add
add
pop
mov
lcall
mov
add
xchg
jnp
inc
jmp
loop
mov
leave
adc
dec
and
adc
push
push
jne
adcl
adc
cwtl
mov
jno
jp
cld
adc
or
cs
int3
gs
mov
push
repz
int
fmull
scas
cli
or
lock
testl
ljmp
dec
jbe
and
or
sti
cmp
gs
mov
push
add
mov
aad
rorb
push
loopne
inc
lcall
lods
and
xchg
sahf
dec
xor
pop
stc
fmuls
out
add
sahf
mov
and
cvtpi2ps
xor
cmpsb
mov
std
mov
je
push
and
repz
lea
addr16
xor
adc
xchg
xchg
mov
loope
dec
mov
cltd
push
mov
les
pop
jle
lret
loope
dec
inc
adc
idiv
ds
mov
mov
push
pop
lods
das
aad
mov
lds
arpl
xchg
sbbb
sub
or
cmp
cmp
mov
cld
js
call
int3
or
repnz
mov
jne
negb
aas
add
aas
andl
ds
jmp
cmpsb
push
pop
scas
test
popa
mov
icebp
push
popa
add
jbe
adc
movsl
lea
clc
sarl
pop
add
popf
aas
std
mov
fnstenv
repnz
arpl
jmp
lods
ljmp
mov
cmpsb
sbb
int
dec
xor
loop
popf
xchg
or
imul
or
push
lahf
mov
negb
mov
mov
fstps
sti
or
add
cs
insl
xchg
shrl
or
loopne
and
add
pushf
pop
mov
mov
imul
shlb
xchg
shl
and
and
mov
cwtl
add
scas
sub
into
push
pusha
adcb
test
dec
sbb
cltd
add
std
add
testl
loope
pop
or
lret
movsb
lock
push
cmp
xchg
sub
jl
pop
fdivrs
push
pop
lret
jnp,pn
je
imul
mov
sbb
das
leave
sub
lds
ja
sub
rolb
cltd
dec
popf
aaa
fnsave
push
jne
or
mov
dec
xorl
sub
in
push
loop
divl
cmp
inc
sarb
call
outsb
sub
clc
mov
dec
mov
mov
inc
fsubp
pop
test
jns
ficoms
clc
jo
dec
rorl
or
pop
int
pop
jo
stos
popa
mov
faddp
rclb
movsb
ds
lds
stos
push
in
and
xchg
jmp
into
push
push
dec
loopne
mov
sbb
inc
movsb
rep
bound
sbb
pop
jle
dec
push
jno
sub
cltd
jp
mov
inc
push
sub
dec
push
test
adc
mov
int3
test
adc
rorb
mov
inc
stc
in
jle
rorl
rcrl
xor
hlt
xor
push
cli
fstpt
ljmp
add
mov
loop
in
out
jno
pop
aad
xor
into
xchg
push
stc
push
xor
sub
aam
ds
inc
sahf
inc
pop
repnz
jmp
cmc
stos
or
inc
cmc
inc
cmp
dec
cmp
incb
fs
mov
insl
adcb
out
sbb
mov
dec
rclb
mov
subl
or
sub
ss
cltd
lcall
mov
sbb
inc
into
cmc
imul
dec
imul
sub
lods
aam
repnz
lock
stc
iret
cmp
clc
mov
test
or
push
pop
sub
mov
sbb
inc
ficompl
cmp
cmp
push
leave
filds
mov
inc
loopne
mov
out
add
faddl
imul
mov
inc
fdivrs
inc
add
dec
sub
arpl
ret
add
mov
cs
sahf
adc
jle
adc
mov
lea
bound
fldt
nop
cmpsl
adc
ret
and
sub
pop
mov
cmp
adc
push
aas
daa
rcrb
imull
mov
push
test
jle
jbe
xor
mov
add
sub
inc
cmp
rcrl
lods
movsb
mov
shlb
jns
cmp
stos
les
ficompl
loop
subl
jb
rorl
xor
test
add
pushf
jle
xor
out
inc
mov
pop
or
add
lds
mov
cmp
dec
pop
jge
jge
pop
xchg
sahf
lcall
pop
pop
arpl
fdivs
imul
sbb
lods
mov
jb
mov
add
mov
cmc
add
jle
frstor
dec
in
xchg
insl
mov
ror
outsb
xchg
sub
jl
into
cwtl
inc
iret
imul
lods
sarb
jmp
mov
pop
adc
jne
sahf
leave
out
or
adc
ss
xor
xchg
dec
in
lcall
xchg
loope
xchg
pop
xor
adc
pushf
pop
mov
shr
sub
int3
mov
sub
imul
call
adc
mov
dec
mov
pop
dec
subb
adc
inc
mov
int3
add
mov
idivl
xchg
imull
sub
ficoms
scas
push
shlb
movb
repz
pop
icebp
addr16
push
sar
push
inc
mov
movsb
xchg
xchg
in
mov
cli
sub
xorl
pop
sub
jb
sbb
push
scas
cmc
adc
mov
leave
pop
call
pop
lock
inc
cli
xor
add
pop
jmp
outsl
fcoms
mov
scas
lock
inc
test
cmp
push
dec
pop
mov
push
adc
roll
mov
cmp
loop
adcb
fildl
insb
add
adc
popf
mov
clc
fs
jmp
push
jne
jns
inc
xor
dec
rorl
mov
ja
and
das
adcl
lea
xor
sahf
sbb
clc
loope
cmpsb
lret
orl
cmpsl
imul
ret
add
xchg
mov
addl
sub
fstp
jns
adcb
movsb
pop
movsb
inc
mov
or
pop
sbb
push
push
insl
iret
add
mov
leave
je
pop
lock
inc
leave
decl
shlb
aas
cmp
xchg
mov
xchg
sbb
push
decb
lret
je
jmp
mov
test
cmp
aad
dec
sub
push
data16
jb
adc
frstor
push
imull
ja
dec
dec
lods
sub
adc
jecxz
mov
xlat
int3
pushl
insb
aas
sub
adc
arpl
sbb
push
sub
jmp
xchg
add
inc
pop
xor
jnp
pop
repnz
dec
insl
mov
mov
sarb
inc
les
jg
ss
bound
cmpb
push
mov
call
js
or
iret
adc
std
stos
jo
jle
jp
jo
lret
jnp
bnd
push
pop
inc
dec
add
stc
fimull
aas
dec
sbb
pop
sbb
hlt
popf
test
je
xchg
lahf
arpl
inc
cwtl
cmpsb
gs
subl
mov
mov
std
inc
into
push
fadd
call
inc
out
xchg
jl,pt
jnp
dec
push
stos
lock
js
push
xlat
dec
sahf
and
xor
pop
mov
xchg
pop
xor
fnsave
inc
jecxz
adc
sbb
in
fdivs
add
xchg
inc
cmpsl
cmp
or
sahf
je
mov
adc
outsb
xchg
cmp
mov
cmp
sbb
jmp
roll
xchg
mov
fsts
push
xchg
jnp
lahf
xchg
out
in
in
fisttps
jp
call
scas
cld
lods
arpl
es
pop
mov
pop
push
stos
aas
xchg
inc
cld
daa
addr16
sub
test
lods
jnp
and
xor
cmp
fisubs
jle
push
dec
or
in
mov
push
or
pusha
adc
loop
dec
push
pushf
lods
pop
adc
sub
cli
movsb
mov
jae
xor
out
sub
add
fcompl
lahf
cmp
fistpll
sbb
jg
pop
pop
mov
jbe
sbb
adc
and
mov
add
and
xor
jns
xor
xchg
sbb
andl
movsl
scas
jmp
pop
hlt
push
rcrl
inc
xchg
xchg
jge
subl
add
jle
pop
xchg
xchg
arpl
push
movsb
push
xchg
frstor
mov
mov
push
dec
fsubs
sub
lds
adc
xor
mov
sub
aad
sub
xchg
fcmovb
out
add
stc
divl
aaa
sbb
cld
hlt
dec
ret
test
cmpsl
dec
dec
sub
or
gs
hlt
sarb
push
pop
inc
imul
jle
fucomp
jmp
mov
pop
popa
in
cmc
int3
int3
xchg
ljmp
and
jp
mov
jo
ret
push
stc
sarl
mov
mov
arpl
fdiv
lock
imul
int
clc
mov
repnz
or
fwait
cwtl
faddl
mov
push
dec
mulb
jmp
js
xlat
adc
scas
xchg
stos
xchg
mov
mov
es
fcoms
or
aad
mov
setl
filds
loop
scas
ret
adc
outsb
fs
push
jge
mov
add
lahf
fists
ret
or
jg
cmp
outsl
popa
loopne
push
inc
push
nop
repz
out
ljmp
mov
mulb
fdivrs
push
imul
mov
jb
ret
jo
mov
out
imull
into
xchg
adc
xchg
push
cli
mov
inc
xchg
es
lret
fdivrs
adc
xchg
mov
and
xchg
inc
sub
out
jo
jnp
lods
fstps
mov
shrl
cmp
gs
pop
xchg
mov
mov
cltd
mov
pop
dec
sbb
cmp
add
imul
push
cs
imul
sti
stos
jmp
dec
rolb
into
ja
test
mov
or
sub
push
cmp
xchg
test
shll
decl
mov
sbb
or
push
loopne
mov
add
sbb
jg
repz
lods
jmp
sub
dec
daa
dec
out
add
cmc
and
mov
xchg
dec
inc
pushf
pop
cmp
sub
fucomi
cmp
pop
std
iret
jecxz
and
arpl
fsubs
in
pop
adc
std
shr
lds
movsb
je
or
test
inc
pop
xchg
sub
mov
xor
int
ret
mov
or
jbe
inc
cs
ret
mov
sbb
cmp
sbb
addr16
jae
ds
fisubl
hlt
add
ficompl
dec
inc
inc
add
js
aam
cmp
mov
jge
mov
ficomps
repnz
cwtl
fiaddl
int3
fs
sti
sbb
pop
dec
mov
jnp
pop
ja
cltd
add
into
rcl
pusha
imull
stc
repnz
dec
movsl
push
daa
xor
int
lods
out
jge
shlb
xor
ror
mov
cwtl
int
and
testb
out
sub
jecxz
jne
pop
pop
adc
xchg
adc
push
mov
dec
loop
mov
es
xor
mov
and
mov
mov
shll
lods
je
pop
icebp
lods
dec
xlat
movsl
gs
push
inc
gs
dec
push
xor
test
lret
addb
xchg
pop
mov
dec
sbb
rcrl
pop
fldenv
jle
jmp
adc
pop
cli
mov
movsl
mov
adcl
jle
mov
push
inc
call
inc
sbb
movsb
jmp
and
cwtl
cmp
jmp
leave
sbb
ret
xor
and
xchg
dec
mov
xchg
jo
inc
ja
dec
jo
mov
adc
push
cmp
into
xchg
lcall
fimuls
mov
jle
mov
jno
shr
pop
std
cwtl
pop
xor
inc
pushf
push
stc
decb
loopne
ficoms
in
jbe
jge
cmp
push
push
lret
or
adc
push
adc
cmp
dec
dec
aaa
add
add
ds
xchg
ret
mov
insl
adc
int
pusha
sub
loope
jnp
cltd
dec
scas
lret
orb
cmpsb
decl
or
jbe
jmp
dec
and
sub
neg
xor
or
xchg
lea
subb
div
dec
and
jg
jge
jmp
arpl
pcmpeqd
lcall
and
out
mov
data16
mov
cmp
repnz
adc
arpl
insb
out
push
push
in
push
out
lods
lods
sahf
xchg
adc
fistps
mov
sub
pop
ss
jo
stos
sbb
sti
sahf
mov
and
pusha
sbb
push
iret
notl
push
jecxz
pop
in
fs
jg
mov
push
dec
pop
inc
das
mov
add
mov
and
sub
sub
ljmp
popa
pop
jp
cmpsl
dec
add
testl
outsl
dec
imul
push
adc
in
in
cmpsl
mov
cmp
xor
push
sahf
rcl
and
dec
ret
movsl
arpl
test
xlat
outsb
in
push
mov
loop
fisubrl
inc
int
inc
dec
jge
pusha
ss
xchg
rorb
je
fs
pop
inc
mov
cs
inc
xor
xor
push
roll
pushf
dec
rcll
jle
cmc
xor
and
inc
jl
dec
sbbb
in
dec
cmp
dec
sub
lods
xchg
cmp
inc
and
pop
ficompl
bound
fdivl
mov
jp
iret
mov
icebp
push
std
mov
pop
push
dec
sbbl
jnp
popl
jecxz
lret
mov
jl
insl
cltd
adc
adc
mov
cmp
push
enter
mov
std
popa
into
enter
and
push
cmp
mov
push
dec
dec
xchg
push
push
dec
mov
sub
mov
mov
je
ret
ja
stos
outsl
mov
mov
lods
decb
pop
int3
xor
mov
pop
cmp
mov
fcomip
fwait
adc
loope
gs
in
movsb
mov
jecxz
rolb
xor
xor
add
or
loope
es
outsb
mov
sub
xlat
xor
inc
dec
inc
add
imul
mov
inc
dec
clc
mov
lea
xchg
and
ret
sbb
ss
jecxz
push
push
jmp
mov
aaa
ret
xchg
adc
andl
lea
pushf
int3
mov
jmp
shrl
sahf
out
das
divl
add
imul
shll
ret
lea
mov
int
out
jge
or
xor
pop
xchg
rol
aas
jg
cli
xchg
cmp
adc
or
jae
mov
ss
fcom
popa
push
popf
lahf
cmp
dec
inc
movsb
mov
clc
clc
fwait
mov
pop
test
addr16
icebp
cmp
pop
fbstp
lea
faddl
data16
rcl
les
lret
daa
in
push
addb
push
cmp
xor
pusha
xchg
push
pop
outsb
jne
mov
adc
cli
mov
fadds
arpl
ret
push
clc
pushf
jno
shlb
xor
leave
mov
pop
and
icebp
mov
dec
fdiv
stos
dec
add
cmp
mov
sbb
jo
pop
testb
cmc
add
iret
fcoms
outsl
push
in
mov
push
cli
aaa
ret
or
loop
pop
mov
adc
shr
inc
sub
jbe
loop
xchg
imul
lahf
mov
fildl
leave
xchg
mov
movsl
aam
addl
adc
push
hlt
movsl
pop
push
push
out
jle
jo
mov
fwait
xchg
outsb
stos
mov
xchg
jle
sub
mov
outsb
mov
mov
add
push
arpl
mov
mov
cmp
mov
ss
mov
pop
pop
mov
mov
inc
push
shll
jmp
lds
dec
sbb
and
subl
and
imull
jp
and
mov
mov
dec
stos
cmpsb
or
out
sub
cmp
nop
pop
pop
sarb
dec
cmpsl
push
xchg
sub
dec
mov
rcll
xchg
xlat
into
mov
outsb
out
loop
xchg
lret
add
mov
dec
push
aad
and
out
add
pusha
mov
add
mov
repnz
ficompl
cwtl
orl
mov
inc
into
rcrl
push
and
inc
or
ficoml
aas
jae
mov
scas
sub
mov
pop
cli
rcrl
push
fs
cwtl
dec
popa
xor
xchg
ds
les
jne
testb
mov
roll
aad
stos
movsb
and
lahf
in
jge
stc
mov
aam
pop
inc
or
imul
mov
ficompl
lods
pop
cmp
jge
or
xor
cmp
out
mov
dec
lret
mov
flds
lock
cs
push
xchg
jne
jmp
xchg
dec
and
dec
addr16
push
scas
pop
mov
cmp
cmp
out
mov
mov
in
cli
xchg
push
mov
push
loop
cmp
inc
mov
rorl
dec
pop
xchg
xor
adc
pop
test
pop
jg
adc
mov
fisubl
test
inc
rcrb
xchg
aam
sbb
das
push
inc
jns
push
das
mov
mov
addl
jle
xlat
iret
ds
mov
lock
push
bound
pusha
shl
imull
and
test
cmp
aad
repz
icebp
movsb
mov
cld
fwait
mov
fwait
xchg
hlt
cmp
ds
push
jecxz
out
add
adcl
xchg
outsb
and
add
push
out
not
xchg
mov
ljmp
mov
inc
sub
xor
fbld
push
popf
sub
or
lods
mov
xchg
insb
mov
xor
adc
mov
repz
xor
and
cs
jne
cmpl
cmp
inc
jnp
xchg
andb
addr16
int3
aas
arpl
xchg
push
lods
xchg
out
lret
adc
or
ljmp
mov
and
mov
popa
xchg
iret
mov
jge
sbb
stos
adc
inc
pop
xchg
test
sub
push
and
sbb
incb
jnp
testl
fimuls
insl
jg
or
cltd
ficomps
sub
inc
scas
cmpsb
xor
add
mov
xchg
jp
bts
adc
lods
mov
xchg
jmp
sub
sbb
cmp
lea
push
mov
jns
lods
mov
enter
inc
mov
add
aam
sub
out
in
in
ja
pop
inc
fmuls
xchg
mov
popa
inc
std
fbstp
outsb
push
mov
lahf
dec
add
sbb
xchg
ss
inc
jno
stc
aad
sbb
mov
les
mov
fnstcw
pop
pop
adc
lahf
in
addr16
std
jmp
sbb
sub
andb
mov
pop
xchg
out
inc
sub
pop
lcall
loope
or
mov
scas
std
jl
push
and
xchg
add
cltd
push
sahf
jbe
push
pop
imul
dec
pushf
mov
cmpsl
lret
sahf
xchg
mov
pop
enter
shrl
xor
pop
mov
dec
test
xchg
jmp
addr16
daa
ds
jle
dec
mov
aas
insb
lret
add
xor
shlb
sbb
add
push
daa
test
pop
dec
sbb
dec
jp
inc
stos
divb
lahf
jge
bound
das
inc
sbb
test
jnp
lret
add
dec
cs
loope
xorb
xchg
or
mov
cmp
mov
lcall
or
adc
xchg
jl
add
dec
lahf
mov
mov
jo
clc
adc
pop
and
xchg
dec
xchg
shll
inc
bound
and
push
jp
add
cmp
cmp
stc
xchg
fbld
sub
xchg
sti
fdivl
lds
into
dec
popf
push
push
cltd
pushf
test
sbb
aaa
in
mov
mov
and
and
mov
bound
adc
pop
dec
or
popa
aaa
add
jo
push
movsb
loopne
inc
loopne
int
outsl
cld
mov
test
dec
dec
sbb
sbbb
push
stos
or
pop
xor
xor
int
pop
sbb
cmp
adc
mov
orl
xchg
and
fwait
xlat
jmp
jbe
insb
mov
aas
mov
inc
inc
inc
mov
loope
movsb
push
stc
sbbl
lods
call
cmpsb
test
jle
push
loop
roll
sbb
jg
iret
pushf
fcoms
fcomp
mov
hlt
cli
call
cmp
xchg
mov
cmc
nop
repnz
inc
push
adc
mov
out
xchg
mov
out
test
rclb
shrb
pop
jmp
pop
mov
dec
and
mov
adc
enter
mov
add
das
loop
jecxz
push
in
inc
js
or
pop
mov
stos
add
sbb
inc
mov
mov
cmpsb
aaa
sbb
sbb
adc
daa
dec
test
xchg
jns
in
mov
or
js
add
or
push
aam
andl
in
mov
jno
jle
push
inc
dec
js
daa
out
xor
les
mov
jp
in
mov
sti
mov
pop
cmp
and
jae
cwtl
lea
loope
das
sub
ret
lret
cmp
jnp
jmp
enter
in
int
mov
adc
mov
mov
shrl
test
lahf
addb
mov
test
sub
pop
and
sub
xor
jmp
push
xchg
enter
fwait
in
xchg
cltd
cmp
insl
out
or
mov
popf
icebp
je
ljmp
adc
cmpsl
lcall
jnp
bound
add
ds
orl
dec
aad
push
jnp
or
add
add
sub
xchg
sub
int
mov
mov
test
push
push
and
add
push
pop
dec
jo
pop
call
add
sbb
cmp
sarl
arpl
movsb
xor
sbb
inc
sahf
daa
jecxz
mov
push
aam
xchg
sbb
repz
and
popl
dec
jle
jmp
sbb
sbb
mov
fninit
repz
xlat
mov
syscall
pop
lods
sub
cmp
dec
roll
rcl
call
cli
imul
pop
aam
fcoml
or
jp
addr16
add
dec
jno
mov
or
pop
xchg
inc
loope
or
outsl
pop
xor
test
dec
jmp
sub
mov
adc
stos
inc
add
das
pushf
aaa
pop
push
leave
arpl
or
pavgb
cmp
das
push
lea
cli
faddl
in
mov
lahf
mov
mov
ds
push
jbe
fdivl
nop
hlt
push
add
loopne
pop
sahf
fbld
out
movsl
mov
and
xor
pop
clc
pop
pop
push
gs
test
sbb
shlb
jge,pn
and
psubsw
or
stos
addr16
jg
test
arpl
xchg
mov
add
aam
lret
repz
mov
lods
cld
inc
cmc
mov
ficoml
enter
mov
pop
aad
cli
mov
aas
mov
scas
dec
faddp
sbb
mov
mov
inc
mov
fdivl
out
sbb
sub
inc
mov
jge
out
xor
ret
cmp
test
idivl
sub
dec
fs
pop
add
gs
xchg
jecxz
fstps
fldl
or
es
orb
loopne
negl
sub
imul
shl
pop
jg
arpl
mov
sub
test
mov
jne
mov
and
jo
add
sub
sub
cmp
pop
add
and
jns
popa
jb
std
lcall
filds
add
pop
std
lock
and
call
xor
pusha
jp
fnstsw
cld
andb
and
cmp
fmull
pop
cmp
sub
push
mov
or
lods
jno
pushf
scas
inc
loop
xorb
pop
inc
nop
roll
sub
pop
cmpsb
or
insb
xchg
pop
pop
add
pop
mov
push
repnz
add
jge
aas
add
mov
push
pop
sahf
fisttps
jo
jecxz
mov
out
dec
push
stc
test
dec
cltd
int
lea
or
mov
scas
aad
stc
xchg
pushf
sti
sub
divb
sub
mov
jno
je
addr16
or
stos
push
jbe
or
or
arpl
fwait
les
les
dec
hlt
outsb
sub
dec
fcom
bound
imul
dec
ds
addl
ljmp
dec
daa
pop
jg
push
add
xchg
mov
sbb
subb
and
aad
in
xor
movsl
vmwrite
jns
push
xchg
cmp
sbb
int
or
lds
push
pop
hlt
mov
les
jl
jo
mov
fcoml
movsl
xlat
ret
dec
xchg
push
xchg
xlat
loopne
push
cmp
jge
jge
fimull
mov
lahf
cmc
insl
xchg
ffreep
sub
pop
cltd
sub
das
xchg
add
xor
pusha
cmc
dec
mov
lock
fnsave
and
imul
popa
ja
divb
stos
cltd
fmul
sarb
fdivrs
adc
xchg
mov
pop
stos
scas
dec
xor
sub
ret
arpl
sub
cmp
fbstp
movsb
mov
mov
ljmp
ja
sub
or
adc
inc
xlat
repz
lock
test
mov
jmp
loopne
cmp
adc
jle
sub
leave
pop
pop
lahf
jbe
shlb
cs
add
sub
ficomps
fstpt
cltd
push
cltd
cmp
jge
inc
pop
sbb
add
sbb
mov
ficoms
es
aad
xor
and
jl
or
push
or
arpl
scas
ret
arpl
movsl
inc
lea
bound
js
insl
mov
dec
test
repnz
or
or
xor
mov
insb
jecxz
mov
or
jb
hlt
mov
jle
jle
bound
adc
cmp
jo
sbb
push
jne
mov
es
mov
repnz
add
lods
add
mov
aam
xor
jns
pop
jle
ret
bound
jmp
xor
xor
hlt
xlat
les
call
dec
in
addr16
sbbl
adc
roll
pop
sub
call
nop
cmp
out
add
dec
adcl
js
and
add
mov
mov
outsl
inc
sub
adc
push
dec
mov
fldenv
int
mov
stos
push
loope
cmp
iret
mov
cmp
pop
jmp
mov
jl
inc
aam
int3
mov
jb
shlb
cmpsl
daa
sbb
add
dec
add
sub
dec
andl
xor
mov
lret
mov
xchg
sub
adc
decw
xchg
xchg
lcall
mov
aaa
cltd
imul
in
push
repz
mov
adcl
inc
xor
or
inc
xchg
scas
push
mov
repz
lock
push
aam
push
cld
lret
enter
or
dec
jns
lret
push
nop
das
scas
aad
dec
lcall
ret
fstpl
leave
and
cmp
push
and
jmp
pop
jnp
ficoml
ret
dec
add
loope
push
mov
mov
mov
out
mov
lods
in
cld
mov
adc
add
lcall
in
sub
clc
popa
loopne
xor
popf
pushf
lea
xor
into
notl
pushf
or
xchg
fistpll
insb
hlt
dec
movsl
dec
cmp
fistps
mov
add
stos
sub
loope
dec
mov
and
mov
insb
pop
xchg
sub
push
xorb
pop
or
orb
xor
jb,pn
ljmp
push
aaa
into
out
bound
rcrl
pop
add
je
push
push
mov
xor
push
mov
jl
cmp
jb
xchg
aam
pop
push
jo
inc
lret
cs
push
jmp
scas
xor
xchg
pop
in
jg
in
mov
xchg
push
mov
add
pop
pop
shrl
inc
icebp
mul
inc
mov
out
cwtl
cs
dec
jmp
dec
addr16
mov
out
in
enter
dec
and
hlt
in
movsl
pop
pop
jne
adc
repnz
lods
addl
push
lock
jp
jg
and
pop
adc
mov
mov
rorl
xor
mov
jo
enter
and
cmp
cmpsl
std
into
and
xchg
adc
div
fcomip
and
xor
cmp
xor
in
inc
test
lcall
pop
repz
cmp
mov
jl
insb
pop
mov
loop
inc
pop
testl
jmp
cwtl
cmp
cmp
clc
jns
stos
out
pushf
xor
sahf
xchg
jbe
ss
or
xchg
dec
inc
xchg
out
mov
cmp
inc
add
loopne
aaa
pusha
sbb
scas
sub
cmp
push
loopne
lahf
and
pop
leave
scas
or
push
sti
or
fbld
lods
or
cli
or
insl
add
xchg
sub
into
fsts
loopne
inc
leave
cmp
stos
outsb
dec
sbb
ja
xor
cli
xor
xchg
mov
popf
fisttps
inc
dec
inc
cmc
pusha
sbb
lcall
adc
insb
adcl
jle
les
mov
aaa
stc
fwait
in
call
or
lds
fnsave
xchg
dec
lret
ss
adc
sbb
imul
fs
into
cmp
cltd
lds
test
stc
mov
movsb
in
or
xchg
icebp
ret
test
mul
sbb
loopne
push
dec
outsb
shl
jmp
insb
scas
sbb
lret
adc
scas
xchg
popa
lret
rclb
aas
icebp
xlat
add
cmpsl
rclb
mov
inc
xchg
movsl
sbb
sub
lea
mov
xchg
adc
jl
mov
leave
outsl
adc
add
adc
dec
loopne
mov
outsl
push
cmp
in
xchg
insl
imul
dec
test
dec
add
and
inc
push
dec
jbe
movsl
negl
mov
movsb
cld
pop
sub
mov
push
push
lret
pop
sub
adc
dec
cltd
xchg
aaa
pushf
movsb
sbb
and
cmp
xor
shll
clc
jne
mov
sbb
pop
add
pushf
push
cmp
sbb
push
fs
cmpsl
test
lret
mov
ljmp
add
jbe
inc
mov
in
or
cmp
push
inc
into
mov
and
and
lock
mov
pop
or
mov
test
jecxz
fdivl
push
cmp
and
cld
xchg
cmpsl
into
int
push
mov
and
xchg
inc
test
pushf
movsb
adc
scas
adc
sub
es
les
test
into
xor
cli
je
sub
mov
testl
fsubp
mov
sub
cld
bswap
or
lods
mov
xchg
fnstenv
stc
add
jmp
lods
sub
rcr
dec
loope
and
sbb
push
mov
lea
sub
xchg
aam
stos
mov
and
jp
shll
inc
insl
jo
int
stos
or
mov
icebp
mov
jo
mov
movsl
sbb
dec
pop
and
sub
into
stos
imul
and
push
outsb
mov
cmp
cld
and
adc
sub
fdecstp
arpl
jg
push
shlb
pop
out
das
divb
repz
xchg
outsb
or
cmp
pop
pop
and
cmpsl
xchg
insl
pop
roll
add
pop
push
in
sbb
sahf
cli
outsb
das
fmul
or
lds
sbb
test
es
push
add
in
icebp
push
lret
loopne
out
fst
clc
cmp
add
lahf
cli
dec
xchg
inc
and
pop
cld
mov
notb
mov
pop
fnstsw
lods
xchg
sarb
mov
and
and
mov
sbb
test
dec
in
fmuls
sub
fimuls
repz
dec
push
aaa
outsl
leave
pop
fildll
clc
sbb
out
addr16
jg
mov
and
test
push
xchg
fisubrl
loop
fimuls
iret
ja
arpl
aad
push
ds
test
and
and
adc
in
movsl
hlt
sub
testb
mov
push
ror
les
popa
enter
fs
xchg
push
mov
fidivs
xchg
dec
dec
cmpsl
xlat
jmp
mov
fisubrs
add
lods
stc
jp
xchg
push
cwtl
adc
mov
andl
ss
ds
jecxz
dec
mov
add
test
cmp
push
repz
std
fcomps
inc
add
jmp
lret
jne
lcall
fcoml
aam
leave
sbb
mov
jno
xchg
test
cld
enter
sbb
xchg
pop
jecxz
ret
imulb
mov
push
rolb
lahf
add
icebp
stos
stos
insb
movsb
sub
pop
int
sti
dec
lds
jns
lahf
loopne
mov
out
inc
into
cmp
add
fcmovb
jp
std
adc
int
push
in
cltd
aaa
mov
dec
or
xor
lahf
rclb
cmp
fldenv
cmp
mov
adc
test
adc
jmp
iret
out
shrb
fwait
and
test
int
fidivs
or
lret
mov
adc
add
adc
inc
das
cmp
xchg
push
test
pop
mov
xchg
into
aaa
loopne
arpl
lds
adc
sub
pushf
inc
outsl
fisubs
dec
jp
lahf
lcall
inc
jle
push
inc
add
das
out
hlt
ret
data16
add
out
decl
mov
push
repnz
fucom
xchg
das
jo
cs
out
lcall
sbb
sbb
push
mov
push
lods
cmpsl
lret
or
imul
into
das
or
adc
cmpsb
mov
cltd
test
popf
jae
loop
sub
test
xchg
mov
xchg
loopne
shr
mov
mov
sarb
cmp
or
ja
jo
iret
inc
lock
ljmp
cmp
je
hlt
testl
test
arpl
ret
inc
add
lea
mov
rorl
sbb
cmp
out
loop
enter
and
shll
jns
outsl
in
and
icebp
dec
in
mov
jb,pt
lret
jge
ret
movsb
cmp
icebp
inc
cmp
mov
jmp
mov
add
dec
add
adc
jp
in
inc
cmpl
mov
test
fadd
test
loopne
push
insb
loope
mov
xchg
dec
add
sahf
xor
lret
mov
fdivl
scas
mov
ja
in
pop
rcr
cmp
adc
test
ljmp
mov
cmp
roll
push
jne
or
pop
daa
jle
jnp
sbb
inc
inc
movsb
addr16
iret
lret
js
pop
jg
dec
frstor
add
clc
loop
and
das
cli
push
push
add
xchg
sub
cmp
ss
dec
push
pop
jns
cmpl
xchg
lret
cmpsl
push
nop
dec
lahf
sub
mov
jb
out
add
popf
xchg
into
jg
leave
and
gs
xor
int
ficoms
sbb
scas
adc
imul
sbb
pushf
movsl
divl
cltd
je
and
std
add
aam
jg
stc
sub
aaa
ja
scas
mov
xchg
daa
push
fimuls
rsqrtps
dec
repz
jmp
cs
aaa
mov
fneni(8087
cld
dec
inc
inc
xchg
push
mov
sbbb
pop
jno
imul
jae
outsb
jbe
outsl
leave
xor
ljmp
cli
push
adc
sbb
inc
outsl
push
jae
sub
cmp
sbbb
cmpsl
scas
lahf
sti
xchg
sub
adc
insl
cmp
xor
inc
iret
pavgb
je
lahf
stc
dec
xchg
and
lahf
ja
pop
add
jecxz
loope
xchg
shlb
lahf
fdecstp
cld
jae
xchg
jge
dec
push
pop
imul
mov
push
lret
sbb
jmp
outsb
sub
loop
mov
pcmpgtd
leave
subb
pop
or
addr16
stc
fwait
cmpsb
insl
lret
add
xor
xor
or
mov
add
movsl
dec
incb
or
jbe
jmp
dec
cmp
aaa
sbb
cli
ret
fimuls
mov
mov
sub
sub
mov
jg
test
rolb
jp
popf
push
jecxz
sub
les
shrb
mov
push
lahf
push
jle
mov
push
jae
mov
xchg
sbb
icebp
jmp
inc
cli
rcrl
mov
cmpsb
xor
es
sti
mov
jp
loop
in
mov
imul
out
push
rcrl
mov
lock
adc
out
dec
fldt
jge
std
inc
cwtl
mov
lahf
js
imul
mov
ds
jmp
test
dec
cmp
adc
inc
mov
dec
lea
cmpsb
int
inc
fisttpl
fwait
jns
sub
je
lret
ss
jl
imul
pop
or
lahf
xor
lahf
fldenv
aam
pop
out
ret
adc
mov
sub
add
xchg
out
dec
xor
mov
rcll
idivb
clc
push
stos
sub
sbb
mov
mov
xor
mov
inc
push
outsb
xchg
in
cmp
ror
sub
jmp
mov
mov
outsb
mov
notl
pop
aas
cmp
gs
insb
xor
ljmp
adc
out
repnz
jecxz
int
mov
add
adc
or
adc
repz
aas
sub
repz
inc
int3
fnstenv
and
lcall
ret
out
rcll
cwtl
ja
test
rcll
mov
outsb
pop
mov
cld
aad
cmp
lds
in
fsubs
or
and
adc
cwtl
xchg
xorb
or
icebp
dec
insl
pop
mov
push
adc
in
mov
cltd
pushf
inc
popf
mov
or
gs
imul
icebp
popa
mov
cmpb
mov
mov
or
gs
xchg
mov
idivl
out
sbb
and
push
mov
cmp
into
xchg
mov
mov
hlt
fldenv
pop
or
dec
aad
inc
inc
shlb
push
add
pop
ret
movsb
movsb
int3
or
nop
pop
jl
cmp
xorb
inc
inc
pop
dec
popl
inc
adc
dec
and
push
iret
scas
jnp
dec
pop
popw
das
cmpsl
push
lahf
jp
cltd
inc
pushf
adc
sub
mulb
rcrb
mov
cmc
dec
push
mov
ja
sub
adc
push
popa
pop
jns
nop
in
and
add
outsb
fsubs
push
jo
jno
sub
pop
sub
sub
sub
mov
call
mov
aaa
push
xchg
pop
and
dec
movsl
mov
lock
pop
push
fnstsw
popw
mov
shrb
sub
incl
fdivrl
in
mov
fbld
jge
mov
bound
xor
call
cld
js
mov
mov
outsl
test
xchg
les
adc
sti
aas
cmpsb
adc
or
fisubrs
iret
mov
scas
xor
divl
adc
jg
es
mov
mov
pop
imul
jno
xor
mov
fsubp
movsl
jge
ss
sahf
adc
sub
add
pop
ret
and
dec
sbb
sub
jp
mov
pop
fldcw
and
mov
or
pop
push
dec
into
in
scas
mov
out
add
stc
call
xchg
nop
cmp
adc
jmp
aam
aas
add
dec
pop
cmpsb
or
push
icebp
loope
cmp
pop
cmp
pop
mov
in
cmp
dec
mov
and
aad
and
loop
aad
out
nop
imul
mov
pop
jp
cmp
es
jns
into
mov
mov
outsb
lahf
es
in
or
cltd
jb
jp
jae
xor
les
aas
jns
or
or
adc
mov
and
das
mov
lret
add
mov
ss
mov
lret
inc
and
sbb
dec
push
dec
stc
mov
inc
fs
cmp
adc
outsb
fisubl
push
inc
jns
imul
sbb
sbb
xor
cmp
mov
sub
sub
jo
and
imul
and
and
xchg
mov
orl
xor
insl
sub
xor
pop
es
pop
mov
lret
mov
pop
je
in
insb
xor
jno
mov
adc
add
icebp
pop
mov
out
testl
out
sbb
cmp
fs
dec
and
negb
mov
gs
inc
fsubl
pop
sub
and
mov
and
aaa
xchg
cltd
inc
out
mov
ljmp
cmc
and
push
pop
adc
mov
sub
pop
gs
add
xchg
jmp
dec
movsb
incl
sbb
xchg
subb
mov
lret
test
rcl
sti
and
push
movsb
lods
sahf
ret
sub
mov
scas
or
mov
repz
shll
pop
pushf
mov
mov
insb
in
aaa
sahf
jno
pop
aad
je
repnz
xchg
lea
scas
xchg
mov
or
into
fs
cmc
add
push
mov
mulb
ja
ljmp
sbb
int
jne
sbb
fwait
sbb
mov
xor
pop
and
std
cmp
iret
lds
sbb
sbb
and
rclb
lea
sub
jmp
adc
xor
imul
add
or
mov
js
mov
mov
mov
cmc
loopne
cld
fs
jecxz
xchg
stc
or
stos
lea
loope
clc
gs
xchg
pop
fidivl
cli
loopne
mov
ret
aad
stos
clc
mov
in
loopne
jo
xchg
ds
xchg
lret
ret
popa
leave
mov
pop
in
sub
std
or
in
add
outsb
jmp
fdivs
mov
sub
shl
mov
adc
jmp
rorb
icebp
fstpl
add
dec
dec
push
jge
sarb
lret
jg
mov
jne
mov
movsb
dec
outsl
adcb
js
xchg
jecxz
in
int3
in
mov
cs
or
pop
or
mov
je
jp
hlt
pop
mov
mov
jl
dec
mov
adc
test
adc
out
pushf
test
lahf
lock
mov
ljmp
adc
rol
in
scas
mov
je
mov
pop
and
push
insb
and
test
out
jg
xor
rcr
sub
cwtl
in
or
lock
int3
sbb
mov
push
sub
scas
adc
not
sub
loopne
mov
pop
xlat
lahf
pop
out
loopne
je
js
dec
mov
cld
icebp
repnz
push
mov
or
loop
testb
fs
adc
fisubl
scas
xchg
xor
lods
cmp
nop
outsb
popf
adc
jbe
movsb
sbb
xor
ja
je
test
xor
mov
pop
inc
pop
push
popf
lods
dec
out
adc
test
push
imul
pop
cmp
stos
push
xchg
test
mov
mov
xchg
sbb
or
sbb
lret
notb
sub
mov
data16
jmp
or
push
lock
popf
aas
push
into
fdivp
mov
repz
movsl
xor
sub
sub
xchg
and
fwait
pop
mov
bound
out
xchg
int3
lods
lahf
mov
repz
sbb
test
jne
add
fdivrs
jge
int3
sbb
cmp
dec
mov
pop
adc
sub
fsubl
and
mov
xchg
push
sub
mov
daa
push
sar
mov
popf
or
test
dec
repnz
mov
or
pop
cmp
lock
sub
mov
jle
mov
mul
cmp
shrb
in
fidivrl
inc
jb
xor
xor
jmp
sub
test
mov
push
push
popa
clc
lcall
or
mov
xchg
add
jne
sub
lods
pop
addr16
mov
dec
les
and
mov
add
adc
imul
inc
or
outsl
ret
push
sahf
dec
and
loopne
es
adc
outsb
cmpsl
inc
cli
ret
sbb
and
jl
lcall
test
cmpsl
test
mov
jg
or
sbb
shrl
mov
inc
lahf
sar
outsb
sahf
mov
mov
pop
fprem1
enter
imul
jl
or
add
fisubl
mov
push
sub
in
sarb
ret
into
mov
push
lods
push
cs
add
pusha
lds
test
movb
int
sub
dec
or
pop
jp
mov
mov
cmc
mov
push
and
enter
lret
jae
jle
xchg
mov
or
into
jno
outsb
in
jno
cwtl
aam
inc
adc
push
jns
test
scas
fldcw
fwait
pop
icebp
cwtl
cs
lods
fs
push
sbb
pop
fbld
cmp
mov
mov
jb
cli
cs
stos
fwait
sbb
pop
mov
lods
mov
movsb
sahf
fucomi
lret
push
dec
pop
jl
and
push
xchg
and
xchg
stos
jnp
cmc
add
mov
sbb
xchg
in
jne
cmpsl
popa
loope
mov
das
int
lret
mov
fwait
dec
cmp
int
xchg
and
loope
mov
mov
lret
ret
push
jl
xor
sbb
mov
xlat
xchg
mov
jl
lcall
or
das
in
adc
sub
js
mov
sbb
jb
inc
xor
mov
mov
scas
ror
jmp
xchg
das
roll
pusha
cs
pop
stc
cmp
mov
fistps
lret
cmp
cmp
roll
jne
out
xor
xor
xor
mov
divl
adc
push
aas
incl
sub
or
sbb
shl
mov
rcr
les
pmulhw
and
add
or
lock
cmp
int3
test
pop
inc
pop
popa
jmp
loopne
ja
mov
cmc
sahf
pop
neg
pop
pop
les
repz
test
mov
push
push
insl
inc
push
fsubp
add
push
arpl
in
push
rcrb
mov
std
inc
xor
or
mov
sbb
std
jge
fs
loope
clc
repnz
dec
mov
jb
and
inc
mov
sti
cltd
and
and
sub
or
test
test
pop
roll
stos
pop
lahf
push
aam
aaa
dec
stc
leave
mov
jbe
gs
xchg
mov
sub
xor
xlat
lods
push
mov
mov
inc
xor
or
out
sbb
test
inc
or
sbb
mov
dec
mov
xchg
sub
sub
or
mov
xchg
orb
and
sarb
int3
jae
cmp
ficoml
lret
insl
cmp
xor
adc
mov
pop
mov
sub
xchg
repnz
cli
mov
repnz
in
xchg
sti
xor
sbb
aaa
sahf
sbbb
push
std
pushw
or
loop
test
adc
mov
and
adc
mov
popa
in
sbb
cmp
xlat
outsl
adc
mov
jg
sub
jns
jne
mov
test
push
mov
sub
clc
int3
mov
mov
movsl
fnstenv
sarl
adc
lret
sub
dec
dec
push
stos
loop
push
std
fistl
out
enter
ds
frstor
and
mov
xor
clc
jnp
and
jge
rol
sub
cmc
hlt
jg
adc
fadds
jge
out
fcmovbe
xor
xor
push
mov
jge
jecxz
das
dec
pop
dec
mov
leave
fcompl
jo
jecxz
stos
loop
nop
outsb
and
pop
mov
shlb
xor
ret
jle
xlat
imul
xor
mov
cmc
aam
iret
int
cmpsb
sub
cmpsl
je
jns
sbb
test
es
xor
js
sbb
gs
mov
aaa
jo
cmp
mov
stos
or
shl
cmp
ljmp
dec
imul
out
inc
pop
fildll
and
into
loope
iret
loop
psubsw
lcall
dec
push
fidivs
lock
sbb
push
mov
insl
out
test
add
sbb
sub
inc
lret
and
or
dec
cmp
sbb
dec
push
or
push
dec
mov
cmp
out
loopne
int3
lods
dec
stc
lret
fstpl
repz
aas
aam
movsb
pushf
pushf
scas
nop
mov
out
jno
or
mov
ficompl
out
les
dec
mov
insl
cs
dec
sbb
jl
lods
xchg
jl
cli
movsl
dec
mov
ja
ret
cmp
sahf
pop
lcall
in
rep
mov
jns
push
or
mov
inc
mov
inc
pusha
cmp
notb
fnsave
pop
xor
xchg
cwtl
pop
or
sub
inc
pushf
hlt
imul
pushf
fwait
push
pop
test
and
pusha
outsb
and
and
pop
adc
nop
lods
ds
shrl
jne
xchg
mov
sub
mov
test
test
xor
out
xor
clc
mov
insb
out
outsb
mov
loopne
in
shlb
jmp
jl
cmp
popf
xchg
push
cmova
jo
xchg
xchg
add
xor
push
out
daa
ret
fisubs
repnz
push
pop
test
scas
out
fiaddl
sarb
inc
iret
pop
addr16
jns
sbb
popf
push
outsb
sbbl
xchg
jp
fwait
popf
pop
fnstsw
inc
xor
cmp
mov
addr16
cmp
popf
adc
xchg
adc
nop
out
push
jae
icebp
lret
adc
scas
in
lods
cmp
ss
xchg
push
adc
je
addl
mov
lock
lcall
scas
aas
popf
xor
lods
add
cld
pop
xor
shrl
add
mov
inc
jmp
or
cmp
inc
mov
call
mov
push
test
icebp
je
test
imul
cmpsb
pop
xchg
mov
inc
mov
push
jp
adcl
pop
xlat
cmp
dec
insl
repz
dec
xor
cmpsb
ss
push
insb
aad
xchg
jne
xor
test
mov
repnz
fidivl
rclb
fcmovb
stos
cmp
imul
loop
sarl
sbb
push
jecxz
ljmp
mov
jge
fists
leave
jne
mov
call
jns
std
aad
jnp
repnz
or
hlt
pop
adc
mov
cmp
push
pop
mov
push
fdivrl
mov
clc
sbb
jle
add
scas
jne
jp
push
or
or
fldt
mov
rcrb
push
lcall
js
xchg
mov
ljmp
sub
outsl
int3
js
mov
mov
xlat
xor
je
and
push
mov
sbb
jbe
lods
test
es
push
rcrl
inc
in
arpl
inc
xor
jns
jp
movsb
or
add
loope
stc
mov
scas
fisubrs
sub
negb
js
mov
hlt
sub
jne
jmp
in
cmc
sub
jne
stc
ljmp
loop
xchg
mov
push
cmp
loope
lahf
loop
sub
push
leave
gs
ljmp
mov
aad
pop
adc
arpl
cmp
imul
scas
loop
repnz
dec
xor
cmp
ja
das
sub
in
bound
push
lahf
repz
sub
scas
inc
xchg
pop
add
ljmp
jb
das
es
stos
nop
mov
jecxz
test
lods
addl
mov
scas
addr16
aad
iret
shlb
inc
ja
push
mov
cli
push
int3
lahf
adc
and
into
cs
fwait
jo
mov
sub
inc
shlb
dec
push
aas
xchg
dec
es
jno
xchg
imul
mov
daa
outsl
das
pop
add
lret
sbb
xorb
xchg
cmpsb
jbe
mov
jecxz
inc
pop
arpl
adcl
push
leave
aad
sar
push
scas
jne
xor
cmpb
mov
cmc
add
xchg
in
inc
out
xor
repz
dec
add
mov
jbe
sub
mov
adc
mov
int
sbb
cwtl
jb
test
in
addl
mov
add
sbb
inc
mov
lahf
push
xor
idivw
xchg
adc
push
bound
insb
xor
push
ret
mov
or
testl
jg
cmp
fadds
cmpsl
sahf
mov
mov
pusha
dec
call
loopne
je
les
shrb
push
outsl
ret
and
popf
or
mov
fs
or
jo,pn
xrelease
or
ret
cmpsl
arpl
inc
add
push
and
nop
popa
adc
lret
roll
sub
lock
xchg
mov
pushf
cmpsl
fstpt
insl
dec
incb
or
push
iret
push
pushf
cmp
pop
ret
pop
pop
jae
pop
pop
in
jle
push
inc
add
shl
xlat
loop
sti
pop
pop
into
and
inc
pushf
sbb
adc
scas
and
and
sub
mov
xchg
mov
imul
mov
xchg
aam
mov
loopne
push
mov
loop
enter
mov
out
xchg
lds
pop
mov
xor
sti
pop
imul
xchg
js
push
out
jno
jle
xchg
inc
mov
shlb
xchg
dec
stos
popl
cmpsb
jnp
mov
pop
adc
and
mov
and
pop
fs
cwtl
iret
cmp
sub
or
sub
cmp
pop
aas
in
test
out
clc
outsl
xor
cmp
in
subb
mov
les
mov
mov
pushf
cmp
loopne
call
or
jb
lock
xorb
sbb
in
dec
fiaddl
adc
clc
mov
sbb
lods
vmulsd
xchg
mov
add
xchg
testb
adc
and
mov
mov
fisubs
in
in
pop
sub
sub
test
test
jge
lret
aam
dec
loop
fisttpll
xchg
inc
jno
sub
cmp
ss
mov
mov
mov
and
je
out
out
cmpsl
dec
add
loope
and
pop
aad
add
jae
ret
test
sbbb
pop
xlat
inc
cli
cmp
jb
mov
cmpsl
in
lock
cmp
js
out
and
int
xor
aaa
mov
sub
push
adc
mov
pop
mov
rolb
dec
sbb
es
test
pop
and
and
int
imul
aaa
adc
dec
mov
mov
out
repnz
lds
cmc
lahf
leave
adc
mov
rorb
ljmp
scas
push
and
mov
sbb
mov
nop
push
push
cs
negl
hlt
cmpsb
icebp
in
popa
xchg
xchg
xchg
push
push
bound
or
xor
leave
out
aad
popf
dec
dec
loopew
sbbb
xor
stos
loop
inc
test
push
inc
push
cmp
mov
lds
inc
mov
adcb
clc
into
jbe
jl
mul
sub
testb
lahf
adc
inc
add
into
inc
aas
add
pop
cmp
scas
clc
add
lret
cmp
ret
negb
or
push
arpl
pop
ja
bound
mov
lds
notb
adcb
mov
cmp
or
fmul
outsl
adc
divl
data16
adc
push
sub
adc
pop
add
xor
cs
and
enter
fwait
adc
inc
mov
add
mov
pop
sbb
dec
fbld
xor
xor
xchg
jnp
daa
add
idiv
mov
decl
pop
push
or
divb
push
fs
sti
scas
outsb
jbe
mov
inc
addr16
or
incb
xchg
loopne
or
popf
repnz
and
mov
adc
ja
addr16
ds
out
pop
jg
pop
subb
fisttps
imul
mov
sahf
mov
sub
outsl
inc
push
sub
mov
sub
xchg
sbb
sarl
fistps
ja
pop
push
sub
sub
xchg
pop
and
adc
mov
stc
out
jl
lock
mov
nop
cld
xor
stos
pop
popa
and
fcmovnu
add
mov
pop
pushf
imul
aad
jno
test
int
inc
sbb
jne
aam
test
aam
cs
aad
sahf
fucom
aaa
add
outsl
cmp
cmp
sti
and
lret
adc
insb
xchg
xchg
lock
imul
sbbl
jns
es
stos
and
rcr
iret
or
pusha
mov
sar
push
outsb
fsubrl
repz
scas
enter
sti
cmp
add
cmc
ljmp
sbb
insl
mov
sbb
cmpsb
out
xchg
or
in
lock
cmpsb
jbe
mov
and
push
adc
lods
insb
gs
add
mov
sub
mov
dec
sti
sarl
repz
movsl
insl
xchg
mov
cmpsb
aas
daa
cld
imul
dec
nop
imull
arpl
add
cmpsl
add
lock
fcmovb
insb
and
mov
fnstenv
test
mov
pop
sbb
mov
pop
push
out
inc
aas
sub
inc
push
movsb
scas
or
sub
loopne
cwtl
fwait
jae
push
push
outsl
dec
mov
mov
test
popa
push
xchg
inc
inc
inc
pushf
mov
les
addr16
aam
cmc
mov
and
jns
fldcw
out
cmp
dec
cmp
jae
sub
mov
enter
pop
mov
jecxz
imul
cmp
add
insl
call
fimuls
pop
mov
mov
pop
stos
pop
dec
loopne
adc
and
push
pop
test
mov
sbb
sbb
aam
lds
stos
sub
mov
pop
testb
int3
mov
ret
xchg
stc
cmp
mov
dec
nop
jl
adc
into
push
ja
rorl
push
add
mov
cmpsl
sbb
inc
jbe
aam
inc
movsb
loop
addr16
repnz
in
aas
mov
jl
imul
ljmp
mov
testb
mov
sub
movsb
push
cmp
rclb
xchg
lds
xchg
jbe
mov
stos
pop
cwtl
rcrb
loop
mov
mov
dec
insb
out
out
fsubs
lahf
mov
repz
push
add
dec
sub
mov
ds
popf
pop
int3
push
pop
mov
mov
dec
xor
divl
in
add
inc
cmp
push
lods
mov
xor
movsl
mov
mov
pop
pushf
push
cmp
mov
data16
hlt
xchg
or
imulb
and
and
pushf
adc
pop
adcl
fldpi
pop
sti
test
jae
popa
fucom
fdivs
cld
pop
mov
fs
xchg
bswap
xchg
jnp
mov
repnz
loopne
or
cmc
jmp
adc
out
mov
xor
movsl
mov
pusha
push
sbb
pop
je
insb
loopne,pn
or
sahf
cli
lcall
movsl
aaa
inc
loope
mov
into
pop
dec
inc
cmc
push
xchg
xchg
adc
sub
xchg
popa
jp
ret
aaa
pushf
mov
fnstsw
shlb
lcall
pop
or
hlt
nop
or
dec
sub
dec
add
xchg
popf
or
lds
ja
scas
adc
stos
pop
push
lods
movsl
rclb
rol
roll
pop
imul
pop
push
or
daa
js
push
stos
push
sbb
hlt
fimuls
push
lods
pop
add
ret
lock
rolb
and
and
pop
push
and
lock
cmc
push
inc
stc
std
icebp
jmp
push
mov
call
cmp
sti
push
push
pop
jp
xor
mov
in
aas
xchg
adc
fwait
jmp
adc
bound
fadd
mov
cli
jbe
mov
insb
loopne
bound
xor
nop
xchg
pop
rclb
clc
sub
or
daa
imul
cmpsb
jnp
addl
or
cmp
cmpsl
subl
addb
sbb
rsm
ss
imul
or
adc
fcomps
loop
outsb
cmc
mov
xchg
add
mov
sbbb
cmpb
stc
and
int
jb
sbb
jb
das
xchg
cmp
sarl
adc
sub
fisttps
cltd
mov
bound
pop
jecxz
inc
pusha
mov
push
and
push
sub
into
dec
cld
imul
repnz
mov
je
jg
js
cwtl
sbb
push
inc
dec
out
cmp
pop
mov
inc
lret
lret
mov
jbe
fisubrl
pop
enter
xchg
cmp
je
cmp
jb
ja
mov
pop
pop
in
pusha
and
lods
xlat
or
push
pop
mov
call
mov
out
popa
adc
repnz
adc
je
lret
shl
stos
shl
in
adc
jo
mov
shr
testl
in
rol
cltd
push
rcrb
in
call
dec
call
xor
aaa
xor
jg
xor
loope
das
inc
mov
cmp
rcrl
fnstenv
push
mov
insb
sub
stc
loope
pop
insb
flds
sbb
out
jbe
test
pop
and
lds
mov
fdiv
sub
dec
mov
lods
shrl
push
xchg
dec
push
mov
rclb
subb
mov
pusha
jno
cmpsl
xor
jae
fadds
and
xchg
sub
pop
daa
mov
or
push
ret
mov
sbb
or
cmc
dec
pop
pushf
push
lds
adc
test
push
xor
ja
icebp
and
in
push
mov
push
lods
jbe
push
mov
sbb
adc
test
jno
mov
push
or
and
push
add
enter
cld
es
adc
sbb
pop
push
sarl
xchg
add
imul
lock
cmpsl
and
negl
pop
pop
push
out
xchg
stc
cmovl
mov
push
int
jbe
sub
cmp
adc
ljmp
gs
push
inc
jmp
add
pop
xchg
mov
shll
out
or
lods
lret
gs
sbb
xor
jb
mov
jae
fisubrs
sbb
or
pop
fstpt
popf
subl
dec
jl
push
push
jo
shl
sub
enter
jl
sub
xor
jae
test
cwtl
mov
cs
repz
cmp
mov
jg
sbb
imul
add
stc
or
mov
popf
cmp
push
fldcw
js
jecxz
sbb
fs
jg
push
fxch
gs
sahf
cmc
push
add
xor
inc
je
mov
sbb
adc
pop
adc
test
mov
mov
daa
mov
inc
or
lcall
in
mov
bound
pop
out
lea
hlt
notl
mov
fsubs
xchg
loop
sbb
mov
cmp
cmp
out
mov
pop
imulb
jp
mov
xchg
push
xlat
ror
pop
loopne
iret
and
adc
sahf
cmp
jecxz
mov
rolb
sbb
jno
bnd
push
sbbb
sti
sub
not
sbb
adc
inc
dec
repnz
in
push
ja
xchg
stos
jb
and
cmpsl
xchg
xchg
aaa
sbb
cmc
cmp
adc
mov
mov
adc
sbb
xchg
test
jo
out
xor
add
and
cs
cmp
into
jb
mov
pop
and
dec
std
and
scas
pop
push
push
mov
add
ds
xor
xchg
jle
icebp
rorl
out
cmp
sbb
add
js
adc
sbb
mov
or
mov
loopne
stos
aad
xlat
repz
das
add
into
cmp
mov
scas
fcmove
lcall
loop
sbb
xor
or
sub
mov
fwait
push
sub
movsl
lods
pop
notb
in
pop
jbe
push
aas
daa
fsincos
mov
xchg
mov
adc
mov
in
mov
loop
cmp
push
add
xchg
jmp
loope
cwtl
jo
pop
mov
cwtl
in
lret
outsb
es
mov
push
mov
pop
faddl
loope
aaa
fdivl
jnp
rcll
fidivrs
loopne
pusha
stos
dec
clc
xchg
enter
dec
lock
sub
cmpsl
sub
dec
adc
mov
xchg
out
mov
pop
pop
enter
sub
adc
test
test
jae
bound
mov
or
lds
lea
xchg
jae
imul
test
jns
aad
ja
les
inc
stos
mov
mov
daa
roll
cmp
mov
daa
inc
mull
push
loope
adc
outsl
dec
push
int
insl
inc
pop
dec
add
ja
sub
popa
popf
push
lods
push
imul
xchg
jnp
adc
jne
push
sbb
add
jno
mov
jo
inc
and
lret
cmpsb
outsb
inc
add
sub
fs
mov
stc
and
or
cmp
push
xchg
cmpsb
add
negb
xchg
jae
int3
addr16
addr16
shlb
gs
pop
adc
adc
xchg
adcl
popa
data16
into
daa
movsl
jmp
cmp
push
mov
std
adc
ror
jecxz
outsl
mov
gs
push
out
jmp
orb
repnz
roll
and
ja
dec
mov
jle
mov
outsl
pop
mov
imul
xor
les
cli
test
outsl
xorl
mov
inc
mov
les
adc
and
imul
shl
add
rorb
fcompl
repnz
xchg
or
add
bswap
mov
cld
jne
mov
out
les
arpl
jnp
test
fildl
mov
pop
adc
ret
in
mov
cs
gs
push
fucomi
sbb
jge
fldenv
fwait
and
fnstenv
pop
pop
mov
lcall
mov
dec
mov
lods
or
sti
sbb
mov
mov
inc
out
xor
push
xchg
enter
jae
inc
mov
dec
pop
cmc
std
outsb
lods
insl
stc
sub
fcoms
stos
inc
jg
pop
inc
int3
dec
mov
mul
xor
mov
push
dec
fisubrl
inc
fistpl
sti
sub
cltd
inc
jnp
cmp
jg
xor
call
adc
cmp
clc
mov
xchg
pop
mov
fimull
cs
fs
mov
mov
out
xchg
jbe
mov
lret
mov
mov
sahf
pop
jns
xor
jcxz
cmp
adc
and
mov
shlb
dec
push
lahf
movsl
sub
push
push
pushf
inc
cmpsb
push
shll
jle
pushf
sub
and
lds
es
ljmp
pop
xor
push
aas
mov
add
mov
scas
je
sub
pop
jno
pop
push
pop
mov
pop
repz
sub
jmp
xor
add
sub
insb
xor
out
std
cwtd
outsl
scas
pop
icebp
or
xchg
mov
inc
add
out
cs
mov
or
stos
test
push
sbb
repnz
pushf
enter
or
pop
mov
lds
fcomps
scas
mov
arpl
mov
fldenv
mov
lds
add
xor
imul
or
lcall
jp
loop
addr16
mov
or
jg
lahf
mov
and
rolb
mov
ss
adc
jp
sub
aam
in
iret
mov
dec
push
sub
push
sahf
aaa
pop
mov
ljmp
mov
xlat
js
dec
sbb
jmp
scas
fsubrs
xorb
movb
gs
adc
sbb
shl
jecxz
mov
mov
int
push
mov
sub
or
js
stos
mov
pop
pusha
sub
stos
test
stc
jecxz
imul
addr16
adc
cmp
push
mov
add
xor
aam
stos
push
inc
imul
dec
pop
sbb
lcall
pop
outsb
nop
or
lds
rcl
push
inc
mov
lcall
jae
scas
cmpsb
jl
in
xchg
lcall
ds
xor
mov
out
dec
lret
popf
repz
adc
int
jnp
bound
inc
aad
pop
stos
cmp
hlt
push
sahf
push
adc
daa
mov
gs
loope
stos
lret
add
stos
sub
sbb
ret
sbb
push
inc
add
dec
cmp
mull
imul
and
cmp
sub
dec
jnp
lahf
mov
inc
jb
daa
mov
dec
div
xlat
sarb
inc
mov
dec
dec
inc
mov
and
nop
jo
daa
mov
imul
mov
push
inc
xchg
add
push
push
xor
jl
jp
cmpsb
std
push
adc
lret
or
sub
jb
xchg
inc
or
sbb
test
stc
mov
aam
sub
dec
add
pop
sbb
lret
xchg
outsl
inc
out
jecxz
mov
nop
stos
scas
int
subl
and
sti
out
cmpsb
loope
lret
sub
xchg
dec
dec
dec
jl
add
sbb
shrl
iret
jecxz
scas
sub
pop
xlat
es
dec
scas
push
test
mov
shll
mov
frstor
and
inc
faddl
ljmp
popa
push
sbb
sub
dec
test
gs
lods
add
cmp
xchg
cwtl
pop
or
push
popa
inc
lea
xor
imul
aam
cmpsl
inc
and
sub
or
pusha
dec
add
call
push
sbb
sbb
ret
scas
leave
fstpt
bsr
dec
sti
push
mov
aas
test
push
adc
int
push
xchg
dec
andb
mov
clc
sbb
cld
sbb
or
mov
loope,pn
fidivs
mov
and
ss
adc
sub
and
jno
push
xor
mov
inc
mov
add
dec
xchg
test
push
pop
cld
inc
xchg
test
fadd
mov
dec
out
cmp
inc
push
xor
pop
adc
and
outsl
aas
xchg
and
lea
rcll
pop
xor
adc
xchg
dec
and
pushf
ljmp
sar
aad
int3
sbb
push
jnp
push
in
inc
leave
push
sub
scas
frstor
ja
dec
push
push
and
loope
out
jecxz
daa
xor
scas
aad
ja
jecxz
orb
jg
sub
fildll
mov
leave
cmp
or
aas
call
out
sub
xchg
mov
pushf
xchg
pop
cmp
out
aaa
aad
dec
sub
das
in
xor
lahf
mov
jmp
out
add
jle
inc
sub
stc
sbb
dec
mov
call
jo
push
inc
and
adc
ret
popa
scas
and
insw
rorl
push
pop
cmp
subl
out
jp
mov
das
push
mov
mov
adc
sbb
flds
cld
mov
lret
xor
xchg
test
jae
push
push
dec
cld
out
dec
inc
push
mov
cltd
in
sbb
ljmp
std
cmp
pop
fldl
notl
jmp
and
jl
scas
pop
sti
imul
aas
cmc
mov
clc
fldcw
xchg
push
sbb
test
mov
cmc
jg
enter
pop
add
push
es
dec
pop
test
mov
mov
int3
push
ljmp
idivb
loop
pop
testl
fistpl
adc
das
scas
decl
and
fisubrl
aaa
or
or
mov
mov
cmp
pop
cs
fisttpl
mov
push
add
lcall
inc
xor
add
mov
push
jmp
cld
in
mov
popf
mov
fwait
pop
dec
outsb
adc
xlat
xlat
inc
arpl
les
cs
mov
lock
scas
mov
mov
in
pop
lock
mov
jbe
xchg
push
pop
fisubl
sub
jp
shlb
shlb
inc
lret
jno
fwait
test
mov
xchg
pusha
aad
sbb
adc
rolb
sub
jo
mov
std
fnstsw
and
lds
inc
nop
xchg
dec
fiaddl
push
rcrb
fcoms
lea
inc
std
jp
mov
push
jb
sbb
shrl
andl
in
ror
mov
stos
aas
sub
aam
sbb
sbb
in
in
push
cmp
shrb
mov
pushf
js
es
or
inc
lods
fidivl
insb
dec
aam
fldcw
loop
and
negb
push
cmpsl
mov
pop
xor
xchg
xor
sti
dec
test
outsb
shl
sbb
mov
add
dec
ja
xchg
push
fdivrs
cli
cmp
std
in
lods
int
in
fstps
int
pop
inc
dec
push
xchg
daa
cwtl
pop
mov
pcmpeqd
in
jl
pop
cld
push
movsb
sbb
sbb
dec
fwait
and
pusha
in
jb
les
sbb
jmp
stc
js
push
rcrb
push
movsb
inc
test
test
xor
push
mov
mov
inc
push
bound
pop
xor
lcall
test
xorb
fsubl
cmc
in
ja
or
mov
or
fldcw
cmpsb
insb
adc
cli
sub
cmpb
push
adcb
jne
les
push
mov
add
rorb
out
and
fs
lea
outsl
insl
imul
and
inc
lret
and
push
push
dec
sbb
pop
outsl
push
inc
outsb
fdivrl
gs
lds
hlt
bound
ss
inc
loope
pop
je
lds
mov
inc
dec
jg
xor
sub
cmp
lahf
imul
pushf
jbe
popf
jo
inc
int
daa
rorb
fwait
cmp
lea
stos
stos
into
adc
mov
jb
cmc
test
lcall
push
adc
jle
xlat
jb
push
mov
divl
nop
neg
ret
lahf
push
push
ss
push
push
sti
and
and
inc
lahf
mov
sbb
pop
pop
arpl
loopne
push
or
mov
decl
xchg
mov
cltd
int3
fwait
cmpsb
pop
leave
loopne
ljmp
out
enter
mov
call
add
iret
addb
push
inc
into
dec
repnz
pop
mov
cltd
fistpll
ret
sub
mov
cmp
mov
mov
xchg
mov
pop
pop
testl
rorl
mov
mov
jbe
push
test
and
xorb
dec
das
mov
mulb
dec
aaa
jbe
sarl
cld
mov
jae
jecxz
xchg
hlt
mov
mov
jp
out
lods
fsubl
stc
fistps
xchg
mov
in
fldenv
dec
mov
mov
fs
movsl
orl
sub
cwtl
and
sbb
xor
xchg
push
and
shll
test
push
cmc
and
mov
lds
mov
mov
je
mov
into
sbb
pop
push
sub
cmp
pop
cmp
lahf
wrmsr
data16
cmp
sub
lret
inc
test
sbb
repnz
mov
mov
clc
mov
mov
xchg
xchg
push
ds
in
jno
out
jbe
idivb
mov
or
fistpl
jae
lods
mov
mov
mov
icebp
xchg
insl
sub
inc
int3
mov
cmp
xchg
mov
fisubrs
data16
fnsave
outsb
sahf
mov
add
cwtl
pop
jns
mov
in
push
lods
mov
ds
loope
shl
stos
notl
nop
lock
adc
cmpsb
insb
and
adc
mov
dec
pop
cmp
or
and
xchg
les
sub
inc
or
sahf
mov
ret
add
icebp
lock
test
jne
out
pop
out
imul
out
jne
adc
loop
fstpt
cltd
dec
mull
les
jp
fisttps
sbb
gs
enter
dec
dec
add
mov
sbb
movsb
nop
icebp
or
es
cs
push
inc
inc
imul
cli
mov
xor
sbb
std
mov
sbb
dec
xadd
xor
push
stos
hlt
or
lods
or
inc
push
mov
shr
ja
mov
xchg
jae
jmp
xchg
cs
ljmp
call
sub
ret
repz
call
fimuls
push
ret
aad
mov
cmp
pop
sbb
mov
sbb
sub
outsb
fcmovb
push
inc
mov
add
imul
repnz
jmp
rol
es
adc
mov
jbe
movsl
sbb
stc
mov
dec
xorb
arpl
sub
mov
xor
mov
mov
cmpsb
enter
jno
sarb
xchg
in
clc
pop
push
or
push
mov
jp
loope
addb
push
sub
enter
and
cmp
mov
stc
call
repz
dec
sub
cs
pop
jne
sub
sub
jne
sbb
mov
insb
rcrl
adc
dec
lds
jg
sbb
and
jecxz
test
daa
nop
flds
inc
ret
js
pop
jno
out
xchg
mov
xchg
mov
icebp
push
ljmp
stos
cmpsl
mov
pop
out
cmp
adc
jae
adc
or
cmp
mov
sbb
cmp
mov
mov
jmp
pop
or
loopne
add
mov
xchg
test
out
call
or
jae
add
iret
or
mov
jecxz
pop
or
and
ret
shl
dec
out
in
push
enter
add
std
pushf
sub
add
sbb
shll
aad
jne
xchg
fnstsw
mov
xor
xchg
icebp
push
push
push
dec
cld
mov
push
repz
shlb
dec
stc
stc
pop
scas
mov
scas
arpl
pop
iret
xchg
jo
mov
orb
cmpsl
out
sbb
divb
add
lea
or
mov
pop
popf
pop
outsl
insl
sub
outsl
pusha
hlt
jne
xchg
loope
data16
lods
nop
adc
add
mov
cld
into
insl
cld
mov
push
test
cs
xor
sahf
and
aaa
push
inc
mov
rcrb
xchg
lahf
lods
push
ret
cmp
jbe
jge
xor
inc
jecxz
xorb
pop
adc
fsubl
xchg
iret
ljmp
mov
adc
cmp
inc
pop
push
pop
pop
bound
mov
out
ds
in
call
xchg
or
push
divl
pop
fisttpl
jb
lock
mov
inc
jo
xchg
mov
cmp
lret
out
sbb
inc
sub
xor
mov
adc
jo
cmp
push
inc
and
or
rorb
sbb
and
or
dec
inc
mov
mov
in
cmp
and
fisttps
aam
and
stos
push
jmp
mov
gs
xchg
xor
push
xor
adc
mov
pushf
adc
fmuls
hlt
mov
add
loop
out
cmp
and
jb
or
xchg
or
in
push
inc
cmpsb
pop
movsl
push
xlat
fwait
sbb
mov
test
mov
xor
jl
stos
test
xor
xor
sbb
mov
inc
aam
cltd
jecxz
push
xchg
and
push
stos
fcmovbe
cmp
push
push
test
outsb
add
add
inc
setp
inc
inc
jmp
jp
das
sub
lret
shll
sbb
cmpsb
ds
lds
insb
clc
mov
ret
add
push
dec
mov
sbb
repnz
mov
push
aas
pop
mov
lds
dec
mov
mov
fisubs
js
xchg
inc
jae
hlt
inc
test
mov
orb
or
dec
arpl
mov
inc
jmp
sti
adc
xor
ret
and
ljmp
lea
mov
or
cmp
jg
sbb
lcall
add
adc
add
cli
fildll
repz
mov
scas
cmpsl
inc
mov
mov
sti
push
fcomps
fdivs
out
repz
xchg
fcomp
sar
cmp
xchg
jecxz
stos
sub
ret
and
push
in
mov
cmp
pushf
fisubs
lahf
push
mov
adc
ja
ret
cwtl
jl
mov
nop
xchg
inc
jae
scas
popf
or
test
xchg
pop
pop
aaa
sub
pop
xlat
pop
lods
dec
add
mov
rclb
out
inc
testb
lds
enter
scas
jne
adc
adcl
imul
mov
scas
inc
lods
outsl
pop
enter
int3
movb
outsl
aas
or
int
xchg
dec
fidivrs
sub
imul
push
daa
push
bound
stc
popa
cmc
sub
and
test
scas
jo
stos
aad
xchg
out
in
cmp
mov
inc
mov
jns
clc
jmp
dec
mov
jnp
mov
xor
and
adc
or
jno
mov
sti
and
scas
mov
stos
add
jne
add
cmc
in
lcall
fdivrl
fsts
push
lea
dec
dec
ja
fnstenvs
lea
add
or
or
xlat
sbb
mov
jae
cmp
ret
out
rcrb
cs
in
and
scas
mov
sub
and
sti
push
jb
test
cmp
xlat
xchg
dec
mov
rolb
jg
sub
xor
es
jb
out
lcall
mov
push
sub
xchg
ret
int3
imul
mov
repnz
pushf
and
mull
jmp
leave
add
pop
jmp
add
xor
lods
movsb
xorb
mov
movb
jb
and
hlt
inc
jne
cmp
scas
ljmp
pop
or
mov
ror
std
fisubrs
loopne
and
dec
mov
shrl
sbb
mov
and
mov
sbb
pop
pushf
pop
aam
das
popa
or
push
popa
pop
ljmp
fs
imul
add
push
fdiv
xor
push
in
push
bnd
sub
scas
mov
aad
xchg
lea
movsb
sahf
pop
fwait
cwtl
fsubr
or
addb
insl
pusha
fisubl
jmp
stos
fs
inc
fucomp
call
xchg
scas
add
push
cltd
push
mov
mov
fbstp
pop
xorl
imul
add
cmpsl
or
inc
enter
xchg
push
mov
xchg
cmpsb
data16
jecxz
lahf
pop
sub
leave
stc
mov
dec
sbb
pop
mov
mov
cld
adc
lods
nop
xchg
icebp
jmp
adc
test
mov
je
sbb
jp
icebp
push
adc
inc
popa
lods
dec
sbb
pop
and
fimuls
enter
mov
xchg
repz
sub
cs
das
mov
stc
stos
out
insl
xchg
mov
and
callw
in
test
jmp
repz
jp
push
in
cli
or
orb
ja
lock
out
mov
inc
adc
fsubrl
inc
int3
mov
xchg
xchg
cld
or
loope
or
adc
and
insb
loop
outsb
faddl
xchg
or
daa
xor
mov
ss
out
cmpl
sub
fbld
dec
sbb
jge
xor
inc
inc
movsb
rdpmc
push
insl
fnstenv
pop
jge,pt
out
jae,pn
mov
add
test
fwait
inc
scas
xor
sbb
jl
fisttpl
ss
push
fidivl
ret
leave
mov
std
lds
inc
add
xor
pop
jb
lcall
sub
inc
xor
inc
push
movsb
das
mov
dec
inc
sbb
and
loopne
jge
scas
fisttps
jg
xchg
sbb
jno
dec
pop
mov
jns
xchg
mov
stos
sub
xor
popa
push
outsl
push
cmpl
mov
dec
xlat
mov
add
xor
insb
push
pop
inc
jns
cltd
lods
mov
inc
iret
sub
mov
inc
out
add
adc
fisubl
mov
cmp
mov
lfs
dec
sub
mov
push
jecxz
mov
jae
push
jg
and
lcall
mov
stos
lds
inc
add
fcompl
push
fistpl
xchg
adc
fdivl
push
xor
mov
pop
sysexit
dec
add
mov
gs
cmp
mov
cltd
mulb
mov
push
mov
jl
mov
pop
clc
jmp
jns
mov
cwtl
stos
fdivs
aaa
aad
pop
add
inc
fiaddl
test
cmp
cmp
xchg
cmpl
lret
jp
cmovg
inc
arpl
fimull
std
adc
jne
or
fsubs
xchg
repz
daa
jl
ficomps
aaa
cmp
fld
mov
mov
ret
in
jecxz
add
sbb
and
xor
mov
xchg
iret
inc
rolb
daa
inc
jle
push
sbb
jmp
inc
push
push
mov
add
push
and
sbb
sarl
sbb
push
add
sahf
pop
loopne
mov
mov
cli
jecxz
daa
gs
dec
adc
ljmp
xchg
pop
movsl
sbb
fimuls
divb
mov
mov
dec
inc
shll
stos
dec
dec
mov
aas
inc
xchg
inc
scas
inc
sbb
faddp
repz
inc
mov
pop
hlt
outsb
sarl
scas
addr16
mov
shrl
in
outsb
pop
mov
scas
jle
movsb
ficomps
xor
jle
mov
fnstenv
scas
dec
inc
mov
add
mov
hlt
and
ss
je
add
sbb
hlt
mov
or
push
push
add
xchg
lret
mov
xor
das
sub
jne
xor
jle
sbb
enter
xchg
push
xchg
mov
pop
inc
loopne
or
mov
and
pop
aam
or
jecxz
mov
nop
cmc
pushf
iret
mov
loop
iret
std
repnz
mov
sub
jne
xchg
pop
or
jae
cmp
xchg
sbb
cmpsb
lods
pushf
xor
ror
test
or
loope
jb
aaa
xchg
fadd
pop
mov
les
fst
xor
ret
cmp
mov
push
ftst
imul
dec
dec
push
mov
pop
movsb
out
push
xchg
pop
stc
lcall
sbb
les
lds
pop
push
pop
loopne
in
or
arpl
loopne
dec
pop
jg
mov
dec
andps
jmp
out
pop
or
pop
push
aad
and
lds
cmp
push
xor
sub
movsl
pop
cmp
notl
mov
cmp
pop
insb
stc
out
stos
push
push
jge
push
rcrl
arpl
pop
xchg
test
inc
js
or
add
push
fs
out
lods
imul
inc
movsb
fstpt
push
xor
jmp
sbb
stc
cmp
dec
mov
xor
in
pop
dec
out
imul
mov
dec
addr16
jae
in
cmp
pop
jp
push
bound
dec
xor
sahf
test
mov
mov
es
sbb
adc
or
push
inc
xlat
pop
mov
push
out
out
lods
sahf
lahf
andb
push
sub
jbe
mov
imul
js
xchg
push
pushf
mov
stos
imul
adcl
push
pusha
push
xchg
push
dec
js
sbb
pushf
movsb
xor
dec
fiadds
aaa
test
nop
popa
jmp
aad
push
cwtl
dec
pop
sahf
adc
test
aaa
gs
insb
in
xchg
mov
pop
cmpsl
jmp
xchg
inc
sbb
data16
call
pop
iret
dec
jmp
fdivs
mov
push
scas
dec
mov
stc
or
cli
pop
insb
push
sub
xlat
inc
in
mov
mov
addl
push
add
fnsave
push
loope
push
jp
ja
repnz
push
pop
push
ret
pop
jae
fnstsw
cmpsb
xchg
sub
pop
jb
inc
cmp
jmp
push
mov
mov
popa
mov
push
mov
xchg
bound
in
mov
dec
mov
call
xor
arpl
push
pop
ret
xchg
daa
ja
xchg
mov
or
cwtl
scas
or
sbb
adc
hlt
js
je
jecxz
arpl
sbb
rcrb
movsl
stc
xor
nop
cs
and
push
cmpsl
mov
mov
lods
xchg
rclb
mov
mov
sbb
adc
outsb
rcll
mov
adc
insb
push
mov
cmp
pop
fcompp
repz
in
xchg
movsl
mov
mov
lods
jp
push
mov
insb
cmp
mov
cmpsl
imul
sbb
pop
lds
jns
jnp
mov
cmp
and
out
lahf
mov
jne
jo
fsubr
ljmp
jmp
lret
pop
ljmp
loop
repz
aam
mov
in
ds
mov
cltd
ds
jmp
rorb
adcb
dec
jbe
ja
lret
shrb
es
imul
xor
mov
ret
mov
loop
mov
xchg
adc
mov
or
test
dec
cmp
xchg
iret
inc
pop
lahf
xorb
out
push
into
outsl
flds
lret
rorl
in
repnz
add
aaa
lcall
mov
cmpsl
mov
pushf
jno
sub
aaa
add
mov
pop
insb
and
add
and
popf
insl
popf
cmp
cmp
aaa
xchg
aas
mov
push
imul
sub
js
aam
push
cmp
bound
mov
outsb
mov
dec
jmp
lcall
add
xchg
add
adc
mov
lock
pop
jae
std
lcall
pop
lods
loop
add
icebp
repz
sti
cmpsl
or
outsb
jns
cmp
sti
mov
js
xchg
addl
stc
push
stos
sbb
movsb
mov
loope
pop
jnp
out
pop
push
mov
cmpsl
hlt
cmc
out
pop
lods
jle
mov
icebp
or
je
aad
xor
add
pop
pop
fwait
scas
jno
mov
or
jo,pt
adc
push
mov
and
and
sbb
loop
push
push
movsl
cmp
pop
sbb
roll
mov
cli
add
cltd
mov
jnp
cltd
push
aaa
xchg
xchg
icebp
pop
xor
or
test
mov
les
into
add
in
movsb
lods
fidivl
rcrb
jl
outsl
dec
ljmp
lcall
jecxz
push
dec
mov
pop
stos
dec
mov
xchg
gs
jne
jno
cmp
test
imul
addr16
and
mov
cmp
adcb
xchg
push
out
rcr
dec
int
daa
lock
xchg
lahf
cmpsb
clc
dec
addb
jo
xlat
cmc
sub
in
cld
pop
jecxz
imul
pop
inc
negb
jae
cwtl
pop
lret
pop
fwait
loopw
ja
mov
test
fwait
push
pop
add
cmp
mov
fs
in
xor
out
mov
pop
pushf
jnp
xor
movb
add
std
jl
mov
fisubrs
mov
int
fnstcw
in
mov
rorl
lahf
mov
imul
ret
jp
lds
or
jmp
rolb
lea
mov
cmpsl
push
cld
or
divl
enter
push
cmp
cmp
inc
xchg
add
ret
cs
and
das
jb
or
mov
sub
test
sub
fcomps
jbe
jns
dec
pop
divl
or
or
cmc
stos
out
mov
clc
jecxz
out
lds
std
and
test
mov
push
aaa
clc
popa
dec
into
add
adc
xor
jo
frndint
fucomp
adc
inc
pop
pxor
jmp
cwtl
mov
cmp
dec
scas
cmpsb
test
lods
mov
pop
pop
mov
xor
repz
mov
test
and
pop
divb
enter
xchg
ret
push
mov
in
fwait
sbb
imul
sbb
lahf
ds
sbb
or
pushf
or
ljmp
mov
ret
pop
iret
jg
push
addl
pushf
in
sub
adc
mov
cmpsb
and
ds
add
movsl
aas
out
adc
out
arpl
popa
adc
fisttpl
out
cld
xor
ret
sbb
push
push
cwtl
in
mov
ds
push
testl
and
fsub
dec
and
jnp
push
lcall
sarb
neg
inc
pop
idivl
sbb
in
sbb
mov
sub
dec
xor
mov
jecxz
mov
mov
or
jo
popf
jge
cmpsb
push
leave
rcl
push
std
add
movsb
or
ret
inc
popa
pop
mov
int3
mov
in
push
call
stos
clc
js
push
repnz
inc
sbb
mov
in
fcmovnu
push
outsb
int
push
pop
push
push
and
clc
bound
ds
in
sahf
xchg
xor
test
enter
std
cmp
in
fldt
cmp
xor
pop
outsl
cmp
mov
fs
adc
push
mov
xchg
out
js
leave
test
push
addr16
jmp
mov
ficompl
cmp
shl
aam
out
jb
xchg
sbb
sbb
adc
pop
pop
fwait
stos
cli
filds
or
jg
jg
int3
push
lds
mov
adc
test
je
push
stc
pop
xchg
roll
pushf
aaa
push
stos
fucomip
fadd
out
sub
mov
loop
dec
scas
pop
push
xlat
jo
fs
call
mov
xchg
jb
daa
scas
jp
sub
or
adc
mov
in
mov
mov
jge
xchg
cmp
mov
adc
pop
jns
nop
jmp
cmp
xchg
ret
fimull
xorb
sbb
shll
inc
iret
xchg
inc
sbb
movb
sbb
sahf
sub
test
sbb
fs
mov
push
std
lds
fmull
pop
inc
adc
mov
aaa
jecxz
aam
divb
adc
popa
sbb
cmp
push
les
movsl
cmp
aas
jecxz
aaa
out
mov
enter
pop
dec
or
icebp
mov
mov
in
xor
push
scas
pop
or
xor
jae
push
lea
fdivrs
sarb
stos
sub
or
xchg
outsb
das
push
ficomps
daa
or
xchg
mov
adc
dec
in
test
cmp
ja
pop
cmp
pop
iret
pop
sbb
jnp
out
std
outsb
mov
shlb
inc
inc
xchg
pop
adc
add
mov
sbb
pop
stos
cmc
cwtl
mov
push
lds
sbb
or
mov
enter
jb
rcrb
pop
ret
mov
les
jae
mov
sub
rclb
jns
sub
dec
xor
sbb
pop
loope
je
jbe
sub
lock
out
stos
xchg
ror
jmp
sub
mov
sarl
pushf
adc
insb
hlt
imul
jle
or
js
and
xor
cs
jg
push
insb
dec
mov
mov
inc
adc
lcall
cmpb
dec
outsb
mov
pop
sbb
mov
dec
sbb
popa
xor
mov
fsubrl
out
test
xchg
sub
xchg
xor
inc
pop
dec
popf
add
icebp
jno
mov
mov
pop
push
rorl
inc
ja
das
out
xor
mov
sti
loop
aam
lcall
test
xchg
sbb
cs
ja
ret
push
jp
aad
leave
out
or
loopne
imul
cmc
push
stc
cli
sbb
sbb
add
and
sub
pusha
push
shll
pop
aam
push
loop
int3
mov
cmc
insb
mov
mov
and
mov
repz
xlat
ret
icebp
push
shll
es
ja
sbb
and
fs
xchg
sbb
push
or
xchg
lret
stos
sub
jnp
mov
loopne
sbb
cs
fidivrl
into
xchg
mov
cltd
lret
stos
jge
mov
inc
xlat
ss
scas
jle
lret
out
sbb
outsb
cli
fmulp
mov
notb
mov
and
fdivs
cmp
mov
xchg
fdiv
test
mov
mov
int3
add
jno
loop
int
ljmp
pop
in
daa
bnd
mov
xor
mov
bound
sub
retw
inc
ss
or
inc
ds
jg
dec
stc
sahf
jne
fxtract
push
into
push
push
punpcklbw
pop
and
repnz
sbb
loop
add
mov
cmp
jmp
pop
cld
jbe
aad
mull
das
xchg
inc
lcall
movsb
xchg
lret
test
adc
fs
repnz
mov
popa
shlb
xor
or
pop
sbb
test
and
fcomps
push
inc
cli
xor
enter
dec
lahf
cmc
cmp
mov
stos
add
xlat
dec
aaa
test
mov
scas
cmp
rcr
mov
ljmp
std
xor
lock
sar
pop
xor
xchg
mov
fcoml
iret
fxch
mov
cwtl
stc
sub
sub
fsubrs
rorl
add
sbb
mov
mov
decb
scas
mov
fsubs
les
andb
push
fs
jecxz
jne
inc
pop
lcall
jge
jae
insl
js
add
pop
arpl
icebp
add
inc
dec
jmp
stos
imul
jbe
iret
adc
xor
xor
sbb
mov
sub
popa
jmp
cltd
mov
aas
test
aad
mov
fldt
repnz
addb
and
jp
or
pushf
pop
popa
nop
outsb
cmpl
push
std
sub
jnp
jg
inc
sbb
shrb
pop
dec
sub
test
sub
pushf
xchg
ror
loopne
and
cmp
sti
push
pop
pop
fwait
testb
movsb
xchg
hlt
mov
pop
loopne
ja
loop
mov
mov
stc
mov
xor
gs
repz
lret
mov
imulb
mov
out
ffreep
dec
enter
mov
xchg
loopne
pusha
repz
aam
shl
leave
aaa
or
jo
sahf
test
push
sbb
rcl
mov
out
jle
mov
jns
xchg
sub
push
and
in
repz
int
loope
add
mov
xchg
mov
and
sub
outsb
in
bound
cmc
icebp
mov
sbb
wrmsr
and
mov
pop
lods
sub
out
test
aad
or
shll
adc
int
add
sti
fldl2e
fsubr
daa
rcrb
lahf
outsl
pop
push
aaa
aaa
sbb
jae
mov
xor
movsl
sub
imul
inc
push
std
in
sbb
hlt
les
xor
sub
aad
dec
cmpsl
push
jae
xor
iret
mov
mov
pop
sub
push
mov
dec
ret
push
pavgw
hlt
jecxz
pop
out
adc
jb
fdivrs
and
dec
dec
mov
dec
les
data16
add
mov
mov
dec
ret
leave
cmpsb
and
int
negl
cmpsb
repz
mov
test
xchg
xlat
xor
inc
fwait
popf
sub
addl
inc
cmp
push
mov
push
mov
inc
jb
cltd
jl
data16
into
mov
mov
pop
lods
adc
lahf
or
test
test
mov
popf
mov
dec
movsl
and
sbb
rcrl
ljmp
push
pop
xlat
xor
mov
or
adc
pop
pushf
cmp
outsl
jae
in
enter
cmp
jmp
test
sahf
repz
aas
cmp
loopne
fisttps
dec
pop
cmp
push
xchg
ljmp
push
bound
ret
cmp
stc
outsb
mov
sbb
cmp
mov
adc
add
btr
sbb
adc
xchg
push
sbb
outsb
cmp
je
aad
outsl
sbb
arpl
in
mov
aam
adc
push
sub
sbb
int
xchg
push
sub
aas
push
sub
xor
in
into
sub
pop
cmp
js
bound
mov
pop
xchg
cmp
sub
xlat
mov
test
shrl
orl
scas
lock
add
leave
scas
arpl
mov
scas
aad
sbb
mov
cmp
sbb
daa
cld
inc
add
jecxz
je
xor
shll
jb
sbb
movsl
roll
sbb
mov
xor
mov
jp
jmp
dec
das
ljmp
jmp
and
inc
decl
jg
adc
pusha
jecxz
les
pop
sub
lret
push
push
mov
jne
xchg
dec
xor
mov
xchg
sub
or
movsb
lods
cld
add
jmp
or
les
push
adcl
inc
repnz
popf
push
insl
out
jb
lods
mov
shlb
pop
ret
lods
int3
mov
popf
add
mov
dec
xchg
xor
lea
shl
cmp
dec
push
push
push
xchg
lea
cmp
cmp
inc
mov
jp
sarl
xor
mov
ja
loopne
fwait
push
cmpsb
out
mov
inc
push
inc
cmp
repnz
test
pushf
outsl
sbb
cmpsl
mov
mov
cmp
mov
xchg
mov
outsl
mov
loop
mov
and
insl
in
shll
in
cmp
pop
imul
xchg
ja
push
push
cli
add
mov
mov
xor
das
ljmp
pop
push
cmpsl
mov
faddl
mov
jl
pop
cli
inc
push
jmp
ds
push
cli
dec
data16
sbb
les
fst
aaa
loopne
cmpsl
jb
jp
das
adc
sub
ror
sbb
cltd
popa
adc
fcmovu
int
dec
cmp
xchg
pop
jp
andl
clc
notb
inc
stos
pop
test
sub
inc
or
sub
mov
push
mov
sub
stc
out
in
inc
fldenv
xchg
outsb
xchg
scas
shrl
insl
andb
mov
pusha
jb
fs
shlb
xchg
cmp
insl
mov
gs
pop
mov
jne
leave
and
lcall
xlat
cli
mov
addl
or
sub
xor
shll
test
jp
jne
test
sbb
xchg
mull
stc
or
sbb
lds
ret
sub
mov
addl
lret
xor
pop
outsl
dec
cmp
cmp
pop
js
out
ds
mov
rolb
inc
xchg
adc
fdivrl
jecxz
inc
add
cmpsb
cltd
and
jno
cs
iret
sbb
mov
sti
cld
jl
je
std
pushf
jbe
adc
shlb
aaa
lret
loopne
cmp
xor
cmp
sbb
popa
rclb
lods
or
xchg
dec
jbe
fisubl
xchg
out
pop
xor
out
or
add
or
repnz
notl
sub
pop
call
mov
fisttps
loop
add
inc
push
push
dec
sbb
mov
sbbl
jl
push
cs
sub
icebp
push
pop
and
xchg
pop
fwait
ret
outsb
jl
stc
mov
mov
leavew
xor
mov
adc
incl
fnsave
movsb
in
loope
xor
dec
dec
pushf
mov
push
cmp
fistps
jecxz
jmp
jl
push
ds
push
xchg
xor
nop
imul
add
in
xor
insl
or
mov
out
mov
stos
lods
es
sahf
ljmp
lock
sub
push
sub
sbb
inc
or
lret
push
dec
cmp
std
fmul
sub
aad
xor
pop
pop
adc
bound
cld
gs
mov
js
stos
xor
push
test
jbe
movsl
jl
cmp
aaa
and
imulb
and
test
gs
addl
aam
pop
rolb
outsb
incl
xchg
or
push
cmpsb
outsl
add
push
mov
je
sub
stc
mov
pop
insb
loopne
jbe
sbb
or
pop
lret
gs
dec
shll
xchg
sbb
test
push
scas
stc
xor
fldenv
inc
xchg
mov
xor
xchg
and
loope
aad
pushf
cmc
ds
fadds
mov
not
int3
and
in
xchg
addr16
sub
test
sbbl
test
mov
rorl
cmc
in
pop
sbb
jnp
sub
mov
cmc
rorb
insb
adc
ds
push
lea
fdivrs
mov
adc
ds
xlat
sub
movsl
xchg
sbb
xchg
pop
sub
xchg
mov
mov
test
xchg
dec
cwtl
orl
sti
sub
and
in
xor
nop
fs
imul
jns
inc
jbe
cwtl
or
mov
or
dec
data16
sbb
sub
mov
sub
xchg
fs
outsb
aas
inc
mov
push
fcoms
pop
pop
filds
fistpll
andl
or
xchg
cwtl
es
out
sub
ss
loopne
aam
enter
sub
stc
sbb
mov
mov
clc
or
in
mov
jo
cmp
gs
insb
jp
sub
sbbl
mov
adc
fisubrl
xor
stos
add
les
cli
mov
iret
cmpsl
xchg
sbb
pusha
xchg
loop
insb
icebp
dec
mov
icebp
push
andb
outsl
sub
pop
in
mov
xor
sti
call
arpl
lea
jb
xchg
or
pop
sahf
clc
pop
std
adc
pop
aaa
add
lods
arpl
js
mov
icebp
sbb
mov
iret
shll
loope
add
fildl
sub
cmp
stc
add
push
jge
cmp
xchg
jb
inc
push
sub
pop
add
arpl
cwtl
repz
hlt
outsl
add
mov
das
fs
mov
pop
js
dec
roll
inc
push
mov
ja
lds
xchg
jmp
sbb
sbb
pop
xchg
hlt
dec
and
test
add
mov
aad
lods
repnz
dec
fmuls
adc
outsl
jo
lahf
add
scas
sub
xor
ljmp
mov
add
fidivl
movsb
sub
gs
mov
sub
loopne
push
mov
in
jp
pop
aas
ja
rorl
sbb
xchg
shll
lret
xor
jmp
inc
mov
into
lahf
ficomps
push
ss
mov
ret
stos
fisubrs
hlt
push
aaa
cmp
mov
aam
stc
xor
mov
sub
mov
rcrl
lock
sbb
inc
test
xchg
test
mov
ret
cli
pushf
add
inc
std
pushf
mov
xor
stc
inc
dec
fcmovnu
push
jne
int3
mov
sbbl
in
test
xchg
pop
jne
mov
ljmp
sub
cmc
or
das
lea
in
sbb
mov
cmp
jns
mov
inc
sub
fnsave
les
jbe
fs
shrl
mov
add
shll
out
jb
pop
mov
or
jg
sub
xor
and
lahf
xor
mov
xchg
adc
es
push
dec
xchg
xchg
mov
xchg
jge
mov
jg
sbb
cmp
xchg
or
push
enter
sahf
mov
add
sar
aaa
jmp
and
jp
mov
xor
cli
mov
inc
mov
test
int3
push
inc
lods
jg
popf
mov
ret
push
xchg
sbb
out
hlt
add
xchg
inc
or
adc
inc
js
mov
aam
outsb
int3
divl
outsl
mov
aad
add
cmc
and
test
inc
lods
inc
cmpsb
mov
pop
adc
push
packuswb
push
aaa
add
dec
jb
add
leave
inc
xchg
cmp
mov
xor
push
ficomps
and
fs
mov
cmc
loop
test
fcomi
into
gs
mov
dec
in
pushf
sub
pop
roll
emms
lret
in
cmpsb
rorl
mov
out
mov
xlat
ljmp
stos
mov
sahf
ja
dec
int3
rorb
les
sbb
mov
xor
xchg
stos
call
mov
cld
mov
push
pusha
add
sahf
std
int3
inc
mov
cmp
adc
lret
clc
cmp
inc
add
mov
lea
dec
adc
add
adc
xchg
jbe
mov
test
mov
shll
out
and
push
push
mov
sbb
xchg
aaa
dec
jg
push
dec
pushf
int3
fucomip
aam
aaa
test
jo
cli
inc
ds
stos
mov
mov
and
in
fistpll
outsl
sti
mov
dec
lea
aad
or
bound
hlt
fsubrl
lods
testl
sbb
incb
inc
stc
jbe
addr16
leave
pop
call
stc
imul
sti
inc
test
aaa
push
mov
sbb
jae
jl
lcall
adc
xchg
imul
popa
test
dec
fldl
fiaddl
scas
adc
pop
bound
mov
mov
sbb
xor
push
add
daa
sbb
aas
test
out
mov
mov
adc
or
push
js
cmp
testb
test
out
cmp
pop
adc
out
ret
pop
push
dec
mov
mov
aaa
dec
stos
repnz
cmp
add
mov
ss
or
clc
outsb
clc
mov
jae
bound
push
scas
mov
sub
jnp
jno
mov
adc
inc
lahf
pop
pop
loopne
mov
fucomi
cmc
push
aaa
adc
js
cwtl
adc
ja
ror
outsl
lea
nop
int
sub
nop
jo
aam
lcall
mov
jecxz
daa
fcoml
je
mov
jbe
xor
lods
sub
mov
pop
add
adcb
dec
xchg
icebp
push
movsl
xor
mov
testb
pusha
sbb
sbb
push
sbb
out
mov
xor
sti
mov
loop
add
dec
xor
jno
pop
cmpsl
inc
add
jp
cmpsl
lret
sub
scas
adcl
pop
lods
cltd
negl
lock
js
xchg
insl
icebp
out
negb
xor
adc
int3
mov
jle
cli
push
jo
negl
and
fsubrs
and
iret
add
mov
mov
test
xor
adc
lock
sub
in
into
sub
in
push
xchg
jp
sub
xchg
mov
fldenv
pop
ficompl
aaa
mov
push
in
mov
cmp
cmp
mov
and
cmp
dec
lea
push
mov
dec
pop
cs
jns
fwait
adc
cmp
into
mov
push
cmpsb
jno
jl
add
push
clc
sahf
rorb
stos
sbb
popf
jns
pusha
xor
in
andb
outsb
cmc
in
fwait
jo
sbb
scas
inc
fwait
cli
mov
adc
push
aad
inc
arpl
ja
jle
dec
lret
into
dec
xor
test
mov
leave
xor
mov
fidivs
fisttpl
mov
popf
add
xchg
mov
ret
fstl
push
cmovno
mov
mov
movsl
pusha
jg
in
cs
jnp
sbb
pop
fidivl
dec
repz
mov
cld
loop
dec
push
and
stc
enter
daa
addr16
mov
pop
mov
or
pop
mov
jbe
sbb
out
in
mov
out
cmpsl
mov
push
xchg
jecxz
loope
mov
mov
jnp
imul
scas
lcall
aas
movsl
mov
lds
mov
testl
add
lret
jmp
add
xchg
mov
xchg
mov
pop
push
test
ret
pop
out
jmp
mov
shll
sbb
xchg
sbb
lret
ja
int
test
inc
loope
and
faddl
lret
inc
in
xor
mov
jns
jl
addl
icebp
inc
jne
in
ret
push
dec
mov
adc
adc
jno
daa
outsb
outsl
xchg
es
or
bound
movsl
mov
or
mov
into
popf
dec
pop
rcrb
fwait
sti
mov
lods
fwait
adc
mov
push
jecxz
aaa
std
lods
stos
mov
mov
dec
les
cmp
add
cmc
jecxz
movsl
fisubrs
cld
pop
jg
add
mov
arpl
pop
push
scas
cmp
cld
dec
xor
lret
mov
dec
mov
xchg
repnz
cwtl
or
mov
sarb
shlb
std
lret
lcall
outsl
icebp
push
lret
mov
in
addl
and
mov
sbb
mov
sbb
jecxz
ss
addl
lret
clc
outsb
and
loopne
fcmovb
and
adc
jl
xlat
out
jo
subl
ret
out
and
into
push
ds
mov
arpl
cli
pop
insb
fcompl
adc
xchg
lods
mov
jge
data16
divl
decl
add
insb
addb
cmp
adc
adc
jbe
push
pop
mov
fistpll
repnz
dec
xchg
xor
inc
aad
jge
xchg
jecxz
mov
xor
aam
cmp
xor
mov
sarl
cld
stc
and
mov
dec
daa
dec
xchg
stc
scas
push
stc
pushf
in
in
dec
adc
fsubl
cmp
call
pop
pop
in
fcoms
sub
ja
leave
inc
dec
jg
aam
ja
mov
xchg
es
lcall
xorl
jl
push
dec
movsb
gs
fldcw
adc
xchg
push
push
daa
imul
in
jbe
cmp
pop
push
movsb
and
jle
jb
sbbb
xor
icebp
xor
in
stos
xchg
mov
popf
add
fmulp
or
pop
push
dec
mov
xor
add
add
jle
pop
jmp
inc
xchg
sti
pop
psubsw
es
jbe
push
push
xor
js
scas
cmp
xor
into
iret
rcrl
fadd
out
jmp
xchg
js
dec
xchg
lcall
or
and
cli
rorb
enter
orb
mov
dec
or
rclb
loope
int
sahf
imul
orb
fisttps
movsb
jae
dec
xchg
data16
ret
sub
dec
mov
mov
daa
icebp
jg
fsubs
hlt
daa
dec
sbb
divl
mov
cmpb
jo
cwtl
lea
sub
flds
dec
sub
sub
lds
add
pop
sbb
lret
js
and
das
movsl
adc
push
push
add
pop
clc
orl
repz
mov
lcall
cmp
push
cmp
sbbb
mov
inc
call
cmc
cmp
and
inc
jb
sub
sub
movsl
xchg
icebp
int3
xchg
cmp
push
rcll
data16
in
pop
lods
add
xchg
outsl
jmp
adc
mov
add
or
addw
cmp
add
jae
popa
sub
shrl
aas
outsl
les
out
das
cmp
bound
mov
jnp
jp
je
scas
outsb
xchg
and
push
lahf
and
popa
arpl
int3
push
cmp
ja
cmpsl
out
and
xchg
jecxz
xchg
pop
scas
mov
cli
mov
xchg
pop
rcrb
pushf
inc
popa
repnz
xor
movsb
inc
mov
loope
mov
aas
mov
dec
bound
or
sub
mov
push
cmpb
sbbb
int
dec
outsb
mov
cli
pop
mov
pop
fcoms
xchg
ljmp
push
nop
sbb
adc
imul
mov
movsb
fmul
daa
mov
and
dec
xchg
fs
mov
loopne
xor
cmc
imul
dec
cli
lods
loope
cmpsb
insb
notb
mov
mov
mov
bound
data16
cld
cmp
ret
xor
mov
std
repnz
aas
notl
inc
out
hlt
rolb
es
add
notl
jecxz
mov
jnp
shl
hlt
adc
addl
mov
sub
pop
stos
in
pushf
roll
lea
lret
push
and
inc
int3
add
popa
ret
push
inc
aaa
sbb
jns
testb
movsl
into
stos
xchg
sbb
shlb
lret
and
mov
add
xchg
insl
dec
pop
mov
into
xor
cwtl
pop
inc
popa
and
cmpl
mov
push
jecxz
ja
in
ds
push
out
addr16
sbb
aad
ret
imul
int3
rolb
pop
out
in
pop
mov
cmpsb
xchg
jge
scas
fstpt
or
jo
test
pop
jnp
inc
mov
xor
mov
jne
xor
mov
cld
cmpsl
jbe
xchg
icebp
or
imul
jnp
jp
xchg
xorb
negl
dec
sub
cmpsl
stos
cmp
pop
into
mov
sub
dec
ja
inc
xchg
sbb
scas
add
dec
jne
popf
hlt
mov
fsubr
pushf
insl
outsl
cmp
pop
sub
hlt
push
je
pop
inc
cs
fstl
mov
xchg
push
xor
xchg
insb
mov
pop
idiv
pop
cltd
jb
in
daa
pop
testb
or
inc
mov
into
stos
scas
dec
mov
and
push
inc
lea
insb
cmpsb
mov
jnp
dec
arpl
inc
fcmovnb
dec
or
mov
mov
push
push
lea
pushf
dec
dec
mov
mov
jle
xchg
imul
or
insl
push
shll
fdivr
ret
mov
xchg
in
inc
or
dec
sub
scas
jecxz
mov
cli
inc
xor
and
cmp
aad
inc
jge
insb
lret
xchg
ja
or
loop
bound
fdiv
inc
pop
sarb
jecxz
stos
bound
fsincos
cmp
push
jmp
scas
push
inc
add
sub
push
mov
add
dec
adc
xor
shr
lods
lret
and
in
inc
inc
movsl
arpl
fmul
sbb
sbb
stos
cmp
cmp
fstp
xchg
aad
ds
lods
inc
test
and
neg
adc
push
inc
cs
inc
dec
je,pt
test
fisttpll
mov
and
mov
aam
xor
mov
aas
push
call
push
out
jo
in
jl
jo
fsubrs
stc
sbb
test
jae
ja
jae
cld
pop
sbb
cmc
push
cmp
shl
test
push
sbb
fcomps
jg
icebp
std
cmpsl
cmp
xchg
int
scas
daa
addr16
mov
dec
or
inc
or
lret
pop
int3
and
cli
cmp
stos
mov
add
add
sbb
cmpb
mov
xorb
dec
sub
dec
push
popf
xor
and
or
incl
les
mov
sub
int
add
dec
aas
fucomp
push
ret
inc
inc
mov
das
inc
ret
insb
jae
inc
jo
hlt
jnp
shl
out
js
mov
cmp
hlt
lea
out
jge
movsb
pop
mov
loopne
add
std
dec
dec
push
inc
insb
hlt
pop
scas
imul
sbb
in
stos
aaa
call
mov
aad
sahf
leave
shrl
clc
sub
sub
sub
mov
cli
fadds
cmpb
and
cmp
repnz
pushf
cmp
mov
cmp
push
fsubrp
cli
jp
mov
cmpsl
push
adcb
jg
ja
sub
ja
int3
fsubrs
cs
cmp
mov
dec
pop
push
std
push
filds
movsl
add
push
push
pusha
outsl
scas
outsl
xchg
out
add
and
sahf
push
sbb
stos
jl
and
mov
in
push
push
xor
sar
lods
int
mov
xchg
pop
and
or
mov
and
push
or
or
shlb
or
insl
call
je
sub
ret
mov
cltd
mov
int3
push
jbe
push
or
jmp
push
pop
adc
clc
pop
mov
mov
mov
adcl
pop
mov
mov
pop
push
test
mov
ss
mov
pop
xlat
ljmp
push
push
in
rolb
push
jb
lea
adcb
jmp
daa
inc
pop
lods
add
and
jle
sub
mov
ss
mov
mov
xchg
cwtl
out
jle
in
cld
dec
imull
dec
mov
repnz
ljmp
inc
in
sahf
repz
or
sub
dec
div
mov
test
nop
shlb
push
and
sub
jecxz
inc
push
push
je
push
addr16
sti
mov
xor
pop
out
scas
mull
out
mov
cmc
popf
cmpsl
push
jecxz
push
push
adc
mov
dec
scas
shlb
sbb
scas
mov
xlat
out
inc
push
sahf
fs
or
and
inc
pop
pushf
add
fwait
lea
mov
and
fstps
mov
loopne
adc
mov
insl
lret
mov
mov
test
jg
push
adc
xchg
cwtl
fistl
rcr
sub
xchg
int
sub
test
xor
pop
insb
dec
ljmp
mov
pop
dec
and
sbb
movsl
out
popa
sbb
push
sub
cmpsb
xchg
jns
sbb
in
push
fistps
repnz
inc
sub
sub
es
jo
jl
lret
add
cmpsl
loop
vpunpckhdq
daa
xor
rolb
or
sbb
cmp
and
test
icebp
dec
xchg
jbe
xor
mov
sub
mov
add
into
pop
sbb
pop
mov
sub
cmp
and
add
xchg
out
test
jle
cld
jecxz
pop
dec
clc
pop
cmp
or
mov
dec
lock
in
mov
nop
xchg
flds
and
rcrb
cmc
ror
or
lods
jne
das
in
push
xor
scas
mov
adc
xchg
dec
xchg
push
por
mov
mov
lock
inc
call
sti
xor
mov
fistpl
pop
daa
push
imul
test
je
inc
cs
sarl
xchg
push
std
cmp
jnp
dec
mov
lret
repz
sub
add
inc
rorb
jecxz
fisttpll
clc
cs
jo
cmp
test
adc
dec
stos
and
cld
inc
mov
sbb
mov
insb
lahf
ja
cmp
ljmp
jmp
push
push
sbb
jo
xchg
dec
and
pop
mov
fists
repz
dec
mov
je
movb
mov
fs
fcompl
pushl
jbe
bound
mov
cmp
data16
xor
in
jns
inc
mov
xorl
fdivs
cmc
adc
data16
ror
mov
pop
inc
adc
arpl
or
mov
loope
xchg
cmp
test
jmp
jne
call
push
or
push
push
push
xorb
pop
mov
or
adc
movsl
mov
or
adc
fisttpll
or
mov
das
dec
cmpsl
add
jo
cmp
inc
pusha
das
jge
xchg
mov
lods
repz
lock
xchg
xchg
push
push
adc
cmpsl
in
and
imull
cmpsl
push
mov
jmp
add
outsl
test
shll
shlb
jbe
das
jns
or
leave
frstor
push
repz
adc
mov
scas
movsl
sti
adc
cmp
notb
inc
jmp
sub
popfw
sub
lea
sbb
pop
int3
and
pop
pop
sub
sbb
push
ss
test
inc
cmp
in
mov
scas
cmp
dec
icebp
or
add
cmp
sbb
xlat
mov
mov
jge
repz
or
jne
in
enter
xor
cmp
xlat
loop
xchg
and
jge
xlat
in
fsubrs
push
mov
rcrl
ds
nop
or
sti
and
sahf
leave
sbb
subl
adc
adc
cmp
rol
inc
fcomip
ret
dec
aas
scas
imul
out
cmpsb
and
loope
sub
repz
cmc
lods
sbb
dec
sub
scas
scas
scas
mov
lret
arpl
sub
mov
ret
lahf
inc
and
bound
lea
dec
jno
pop
int3
icebp
jge
ds
ficoms
dec
test
stc
and
adc
cmpsb
xchg
cmp
sub
test
mov
jno
sub
xchg
stos
mov
scas
lret
movswl
cmp
insb
push
xor
mov
ljmp
xor
subb
sbb
fldt
push
mov
mov
push
xchg
inc
pop
clc
inc
popf
dec
lahf
mov
shrb
faddp
add
into
imul
lods
pop
jno
mov
push
jb
add
pushf
scas
push
movsb
jno
rorb
aad
ret
dec
stc
ret
sti
mov
cmp
adc
mov
icebp
xchg
add
push
ficomps
xor
xor
pop
std
inc
xor
mov
loop
aas
dec
repnz
in
lahf
int3
mov
inc
mov
mov
mov
pushf
hlt
repz
xchg
clc
adc
dec
inc
sub
data16
pusha
sbbl
push
push
scas
xor
scas
leave
inc
and
adc
fnstcw
sbb
jge
jne
mov
pop
mov
push
sbb
fidivrl
sub
outsb
in
aad
or
sub
jl
lret
stos
ja
inc
shrb
add
scas
shlb
jns
mov
or
cmp
or
mov
loope
dec
mov
int
out
pop
test
adc
pop
and
mov
mov
stos
jns
sahf
shlb
or
xor
cmp
imul
and
lods
and
loop
inc
jne
or
loopne
dec
add
jmp
mov
cmp
mov
mov
inc
push
lahf
dec
push
add
mov
sub
loop
rorb
cmp
daa
add
cmp
dec
mov
ficoms
cld
shl
roll
sbb
push
fsubrp
enter
cli
popa
adc
sub
xchg
test
push
loopne
mov
call
mov
add
loop
fildll
sub
lods
inc
sbbb
rorb
pusha
fcompl
jne
xchg
sub
mov
psubsb
sarl
inc
dec
inc
pusha
push
dec
pop
mov
in
cmp
les
in
cli
lock
dec
data16
push
mov
inc
sub
mov
cmp
sbb
lea
push
rcl
aam
inc
add
jmp
into
jb
pop
in
ficoms
imul
mov
mov
sbb
rcl
mov
mov
dec
dec
adc
push
adc
adc
push
out
lcall
pop
cmp
sbb
push
rcll
pop
aas
js
out
pusha
popa
decl
aam
loopne
movsb
push
std
clc
cs
mov
ret
add
adc
mov
lods
fisttps
xor
jmp
adc
fstpl
std
hlt
mov
xor
and
aaa
outsb
test
jp
jmp
push
adc
fildll
in
add
ss
jbe,pn
mov
in
ret
pop
mov
fadd
mov
push
jne
pop
call
mov
repnz
dec
hlt
test
xchg
jle
cmpl
leave
inc
repnz
pusha
mov
movsb
loopne
iret
aaa
or
lcall
fcompl
push
jge
or
out
adc
flds
aam
push
xor
inc
addr16
ss
fwait
out
push
jns
inc
sarl
jp
sahf
pop
lea
insl
inc
push
data16
int
mov
jge
in
outsb
fnstsw
jae
mov
repnz
dec
test
xchg
jmp
stos
push
pop
mov
pop
or
in
fsubr
adc
outsl
sub
mov
leave
hlt
idivb
mov
adc
imulb
jmp
jne
inc
inc
fs
xor
insb
pop
fs
enter
mov
dec
push
xchg
inc
fsubrs
mov
ja
lcall
dec
inc
mov
dec
or
and
fadds
sub
jne
mov
xor
pop
jae
mov
or
je
ljmp
and
outsb
and
mov
or
pop
fnclex
adc
adc
push
jle
sbb
test
mov
sub
pop
aaa
jns
out
notl
xor
fmuls
ficoms
fistl
pop
out
cs
repnz
test
lds
cwtl
inc
in
inc
mov
mov
ljmp
dec
in
inc
jle
lods
add
fisttpl
test
sarb
xchg
xor
mov
fwait
sub
ljmp
sbb
fbld
xlat
adc
jmp
lods
mov
cs
sbb
movsl
lcall
lea
subl
xor
xchg
mov
xchg
fnsave
push
jns
mov
sarl
inc
and
repnz
inc
add
add
add
jno
mov
mov
jb
mov
mov
mov
jp
push
mov
dec
mov
xchg
cmp
sub
lret
cmp
std
cli
sbb
cltd
aas
or
xchg
int3
inc
shlb
mov
jmp
fsubrl
out
add
add
xchg
sbb
dec
mov
jb
mov
aaa
pushf
fiaddl
aas
insb
pop
into
ret
int
ljmp
mov
andb
or
add
push
mov
push
in
mov
ljmp
scas
adc
aas
hlt
mov
dec
mov
movl
ljmp
daa
mov
in
dec
loopne
mov
lods
ficomps
jnp,pt
adc
sbb
sbb
test
daa
imull
jmp
les
dec
and
dec
sbb
xlat
ja
mov
mov
ja
lahf
sbb
mov
mov
sub
test
push
pop
ret
aaa
je
mov
sbb
mov
fisubrs
movsb
push
or
add
jns
pop
sub
dec
bound
jle
sub
adc
cmp
sbb
daa
fiaddl
insb
jmp
idivb
test
cmc
inc
stos
mov
popf
sbb
and
stos
mov
sub
jae
ja
iret
or
pop
out
inc
lcall
inc
int
mov
dec
xchg
pop
mov
pop
shlb
mov
aad
sub
fimull
mov
fld
adc
test
dec
inc
data16
in
adc
cmp
or
push
imul
sub
orl
xor
into
adc
cmc
pop
jae
pusha
imul
or
les
call
pop
sbbb
xor
xlat
lock
mov
mov
jb
add
inc
in
test
pusha
std
outsb
andb
and
sti
mov
mov
leave
rclb
adc
fdivl
xchg
sbb
push
mov
push
add
xchg
sub
dec
jecxz
lock
cmp
mov
or
xlat
jne
and
xlat
push
cmp
movsb
fcoms
push
std
cmp
cltd
jno
xchg
push
cmp
add
sub
cwtl
lea
loopne,pt
mov
mov
mov
cmp
adc
in
dec
inc
jo
ss
or
cmp
dec
xchg
ds
xchg
dec
leave
test
fiaddl
cltd
test
sub
mov
fiaddl
std
cmp
scas
or
mov
imul
xchg
lock
push
cwtl
scas
cwtl
mov
pop
stc
fwait
sub
es
jb
xchg
push
sbb
fdivp
add
and
les
ljmp
sbb
mov
cld
dec
xor
or
sub
and
loopne
cmc
xlat
jmp
insb
lods
push
imul
xchg
mov
mov
sahf
sbb
add
stos
cmp
rcrl
dec
movsl
ret
cmc
jle
fdivl
loop
sub
push
dec
enter
mov
and
daa
pop
cmp
mov
xchg
stos
adcl
jg
in
pop
aam
fists
fnstsw
rcrl
sbb
popa
inc
addr16
enter
insl
mov
dec
mov
add
pop
enter
popa
push
or
cwtl
repnz
and
adc
out
and
jo
dec
xor
insl
xchg
pushf
pop
ljmp
scas
xor
shlb
shrl
test
xlat
push
inc
or
push
shrl
sbb
fsubr
jae
fwait
or
nop
lret
in
scas
push
addr16
mov
xchg
push
and
imul
jl
sub
jae
push
push
cld
jle
xor
notl
xor
cmp
jl
pop
subl
orl
or
mov
or
sbb
dec
lret
enter
pop
sub
mov
push
mov
mov
shl
dec
jbe
test
push
push
pop
jo
repz
inc
cmp
bound
xchg
sub
sub
xor
inc
mov
outsl
add
out
jp
sbb
add
push
cmp
cwtl
sub
mov
pop
sbb
mov
sub
cs
cli
push
push
sub
outsl
sbb
fnstsw
lret
fstps
jnp
mov
fdivr
cmpps
dec
mov
pop
mov
mov
pop
jo
lcall
lret
in
lret
mov
push
gs
lret
adc
dec
nop
mov
je
or
lret
jl
daa
popa
cmc
jp
mov
pop
mov
in
mov
pop
mov
cwtl
pop
inc
icebp
das
push
int3
mov
loopne
or
movl
clc
mov
push
dec
mov
lcall
ret
sub
jno
xchg
lahf
adcb
push
sbb
lcall
xchg
loopne
inc
psllq
mov
fstp
xor
sbb
inc
mov
js
mov
mov
int
sub
addr16
in
push
inc
mov
pop
ss
sub
xor
xor
jae
stmxcsr
mov
inc
mov
cmpsb
or
mov
mov
inc
or
into
cli
or
sbb
jne
mov
addr16
out
xlat
cmp
ds
out
lahf
lcall
xor
clc
ss
ja
ret
fsubs
leave
sub
and
shll
and
inc
js
mov
pop
testb
xchg
xchg
mov
dec
test
mov
roll
adc
repz
mov
dec
adcl
sbb
test
enter
push
scas
test
or
das
cs
pop
in
ret
xchg
je
jne
loope
movb
mov
inc
cld
out
js
xor
stos
loope
and
fs
into
cmp
mov
mov
sarb
inc
rorb
mov
jbe
mov
jnp
sbb
xchg
push
scas
xchg
pop
push
scas
mov
mov
add
xchg
mov
dec
das
imull
addr16
sub
data16
andl
cmc
rorl
in
insb
cmp
lds
insb
and
pop
xchg
imul
cmp
orb
mov
cmp
pop
pushf
mov
mov
lret
repz
sbb
dec
mov
xor
adc
or
add
loop
js
jne
roll
pop
push
dec
inc
mov
adc
jge
aaa
mov
mov
jg
push
inc
inc
movsb
shrl
jo
push
scas
sbb
mov
adc
dec
and
inc
filds
pop
aam
rcrb
jbe
fldt
fcoms
mov
enter
pop
xor
jg
fsubrl
cmp
pop
sbb
in
xchg
shlb
add
jb
nop
mov
jle
rcrb
jae
lds
iret
pop
lock
push
inc
xchg
test
add
insl
add
rcll
or
cmp
aad
mov
pop
push
sub
mov
or
and
dec
subl
fcoms
jg
stos
cmp
push
mov
and
outsb
cmp
push
adc
pop
push
lahf
scas
push
repz
jbe
jecxz
icebp
out
xor
dec
adc
mov
inc
xchg
xchg
pop
lahf
pop
push
jecxz
rorl
inc
icebp
mov
insl
aad
dec
stc
push
fisubrs
push
inc
or
es
and
bound
pusha
outsl
pop
dec
xchg
mov
rorb
in
adc
aaa
push
or
shrl
mov
or
into
stc
jo
sbb
xchg
lods
mov
mov
fcompl
aad
pop
out
pushf
push
aam
dec
push
jge
pop
mov
adc
nop
adc
je
jne
inc
out
xchg
and
lods
ficoms
mov
jno
pop
dec
xor
rcrl
inc
mov
mov
xlat
mov
in
aas
adc
decb
inc
mov
hlt
rclb
mov
aad
or
frstor
mov
mov
fnstsw
dec
fdivrl
lods
notb
test
popa
xor
cmp
shll
mov
ret
xchg
push
xchg
lret
in
cltd
or
clc
xor
pop
xchg
cmp
xor
mov
mov
push
sub
xor
dec
mov
and
and
mov
xor
sbb
ja
push
call
fld
cmp
sbb
mov
in
sub
pusha
jle
outsb
daa
lods
push
add
or
mov
fstps
and
cmp
push
cltd
aas
adc
lcall
pop
int
ficoms
stos
insb
int3
inc
movsb
in
mov
pop
xchg
dec
loope
lds
imul
xchg
cmp
add
mov
push
jmp
ss
xchg
sbbl
mov
stc
jmp
gs
xorb
iret
out
arpl
sub
call
jle
push
sbb
mov
push
cs
add
aas
fs
out
jecxz
adc
cld
dec
pop
jl
ljmp
mov
adc
add
fildl
in
xor
adc
rcrb
shl
cmpsb
aas
sub
mov
pop
mov
pop
sub
aaa
nop
cmpsb
out
add
mov
xlat
mov
pop
and
test
neg
repnz
ss
xchg
dec
add
fmull
inc
sbb
adc
or
loopne
lock
or
test
and
adc
fisubrs
and
sub
xchg
xor
pop
cltd
mov
aam
int3
and
or
cs
aam
inc
push
pop
rcrl
jmp
mov
cmp
movsb
repnz
loope
lods
sti
mov
dec
inc
fnstcw
fwait
dec
xorb
push
divb
and
rcl
fldt
sub
data16
mov
les
jp
pushf
mov
clc
lcall
loopne
pop
push
pop
cmp
jecxz
insb
add
xor
mov
adc
cmp
push
fcmovnb
rol
push
jo
mov
sub
in
mov
nop
fdivp
jg
inc
inc
mov
loop
cmpsl
ret
ja
int
and
pushf
dec
mov
push
sbb
xchg
jg
mov
mov
mov
addr16
das
lods
dec
int
mov
adc
sti
ret
sbb
insb
negb
in
cltd
lea
test
or
fmull
jo
orb
pop
ljmp
lcall
mov
icebp
addr16
aad
xchg
xor
sbb
shll
inc
push
and
sbb
movsl
leave
mov
push
and
std
inc
and
jge
mov
push
out
out
mov
jns
jne
cmp
dec
in
leave
xor
mov
and
xchg
loopne
inc
ja
xchg
lret
dec
mov
xchg
dec
inc
lds
push
std
out
lds
adc
or
lea
adc
jae
and
xlat
mov
test
sub
push
lret
movsl
outsb
mov
rcrb
stos
jne
lahf
ds
pop
cli
push
add
or
push
rcl
adc
ss
rcrl
lcall
adc
mov
int3
mov
adc
lods
xchg
daa
sbb
loope
loope
jnp
testl
sahf
test
mov
mov
enter
je
inc
xor
jbe
cmp
test
inc
adc
lods
adc
mov
out
pop
fucomp
lcall
shrw
jl
add
lret
pop
inc
aas
xor
xchg
imul
xchg
cwtl
ja
inc
mov
lods
in
and
jl
std
test
mov
inc
lret
push
scas
pop
pusha
inc
mov
push
fiadds
aad
inc
in
leave
sub
mov
out
inc
or
mov
dec
mov
xor
cli
xor
stos
adc
lret
push
in
mov
daa
sti
rolb
in
mov
mov
mov
push
adc
mov
cmp
mov
dec
and
xchg
imull
mov
cmp
cmp
enter
add
push
lds
pushf
xor
lahf
gs
fists
pop
mov
push
xchg
push
xchg
xchg
arpl
push
in
rorl
inc
sub
loop
jecxz
sahf
lea
aaa
test
dec
jg
pop
adc
and
dec
push
mov
nop
sub
dec
ficomps
mov
push
inc
sub
sbb
je
inc
pop
pop
mov
popl
xor
je
cmpl
in
or
inc
mov
mull
cli
sbb
popf
loopne
les
jmp
outsl
repz
aad
cmp
mov
mov
movsb
add
nop
call
test
adc
push
adc
mov
sbb
push
adc
loope
loop
push
push
call
aas
jmp
stos
fdiv
out
cmp
add
rcrl
fidivl
loopne
sbb
sbb
mov
jo
cli
faddp
imul
imul
imul
jle
push
fidivs
outsl
sbb
lahf
xchg
xchg
mov
popf
ljmp
mov
jo
inc
faddl
arpl
testb
insl
inc
mov
mov
mov
test
adc
add
push
add
out
sahf
adcl
and
ds
mov
xor
jb
je
add
jbe
xor
mov
jne
test
add
fwait
daa
add
ret
sarb
sbb
pushl
lret
push
loop
xchg
push
aam
or
and
aaa
faddl
fistl
add
mov
sysret
cmpsb
sti
into
add
fsubs
loopne
iret
orl
clc
mov
les
pop
jmp
aam
fsubrp
lds
punpckhdq
mov
mov
xlat
mov
fimuls
jne
aaa
pop
dec
fisubrs
cmp
mov
popf
pop
cmc
iret
push
shll
pop
inc
outsb
cmpsb
bound
inc
lods
in
mov
mov
mov
jae
sub
inc
dec
mov
jae
js
cmp
and
cld
jns
outsl
fistpl
cmp
cwtl
adc
xchg
pop
bound
adc
sbb
lea
mov
xchg
and
pop
loope
adc
mov
in
fwait
xchg
xor
fistl
js
push
fiaddl
insl
out
inc
pop
call
inc
jge
or
arpl
hlt
out
int
scas
pop
mov
fwait
add
fisubrl
jecxz
jg,pn
std
xchg
fcomps
xchg
inc
dec
lods
test
or
jg
dec
aad
pop
ja
aaa
ss
cmovb
mov
andl
stc
jbe
jno
xchg
mov
mov
sbb
xchg
dec
popa
inc
cmp
fstpt
test
out
sub
mov
push
cmp
pop
ret
or
dec
int
and
add
adc
dec
in
mov
or
add
enter
aam
xor
or
mov
xchg
mov
cs
insb
faddl
je
cltd
dec
arpl
pusha
rorl
sbb
and
pop
jecxz
and
add
lock
mov
das
das
es
push
pop
aam
adc
or
adc
int3
in
mov
jp
fbstp
mov
lea
shlb
add
fwait
or
push
push
fcomps
lea
dec
dec
sub
nop
cmp
incb
fst
adc
cmp
hlt
testb
imul
push
jb
lds
adc
push
mov
insl
pop
push
or
mov
outsb
dec
jecxz
rcl
push
out
jb
loop
sub
add
mov
ja
stos
sahf
or
mov
fwait
mov
sti
jl
adc
add
js
add
xchg
andnps
cmp
or
push
jmp
push
or
mov
inc
lret
jp
imul
jne
ss
jle
rclb
xor
and
inc
and
daa
sahf
je
lds
movsb
or
popf
xchg
shlb
and
aaa
inc
jb
sbb
pop
aas
into
mov
outsb
popf
loope
sub
cmpsl
loope
mov
cmpsb
mov
jbe
lods
sub
mov
insb
or
sahf
dec
jp
push
dec
fisttpll
in
lods
cmp
subb
fs
mov
and
sub
jnp
imul
addr16
adc
xchg
js
xchg
call
mov
xchg
shlb
xchg
jnp
and
lock
js
imul
xlat
iret
or
sahf
ja
inc
lret
dec
and
fs
pop
mov
push
dec
lretw
xchg
mulb
cmp
je
jo
sbbl
mov
jle
ficoms
sahf
divl
inc
xchg
adc
xchg
std
or
xor
add
pop
in
aam
or
jg
jmp
sub
dec
jb
rcll
aad
mov
and
and
nop
sub
cmp
rcr
cmp
xchg
inc
stos
xchg
xchg
xlat
add
sub
mov
mov
fisubrs
dec
icebp
adc
add
jo
shr
and
popf
lea
cmpsb
add
adc
lahf
jmp
inc
fnstenv
imul
fisttpl
mov
adc
scas
sub
pusha
pop
addr16
mov
mov
mov
xlat
out
xor
xor
addr16
cmp
cmp
pop
dec
sti
insb
je
push
rclb
inc
sahf
std
int
mov
aad
and
repz
jl
mov
inc
or
or
inc
arpl
fs
jo
insb
mov
jg
loop
mov
lea
stos
dec
call
mov
cmp
inc
cmpsl
std
pushw
dec
xorl
cmp
sahf
daa
in
xor
cmp
mov
mov
adc
pop
mov
movsb
or
pop
cs
je
cmp
fs
mov
mov
test
xor
jecxz
push
mov
outsl
pushf
adc
push
stos
outsb
cs
push
shrb
jne
into
cmp
aad
push
add
pop
fcoml
fbstp
mov
cmp
xchg
and
jecxz
mov
xlat
mov
cmpsl
dec
ja
es
inc
inc
in
xchg
imul
push
jo
jmp
add
test
inc
xlat
xlat
push
mov
cld
in
cmpb
sub
adcl
gs
cmp
mov
dec
bound
addb
cmc
jbe
add
inc
push
ja
and
or
cmp
add
or
mov
jbe
push
nop
adc
sub
pusha
sbb
push
movsb
jecxz
adc
out
push
pop
xchg
fcomps
scas
dec
push
mov
test
sbb
test
loopne
es
mov
leave
sbb
mov
xchg
mov
inc
or
out
in
pop
fsubrp
xchg
jns
fidivrl
addr16
pusha
dec
test
mov
lock
pop
pop
xor
sbb
mov
sbbl
lock
adc
sub
sbb
pop
mov
aas
cli
iret
or
jp
jle
rorl
sar
popf
push
cmp
sub
pop
pop
repnz
xlat
sub
mov
or
dec
add
xor
adc
icebp
mov
lds
roll
cmpsb
jg
inc
test
xor
mov
es
call
adc
repz
in
add
or
stc
jmp
stc
call
pusha
popf
fnclex
pusha
pop
dec
cmp
faddp
popa
outsl
roll
and
add
movsb
data16
repz
adc
jb
xchg
mov
mov
sbb
push
jb
bound
fwait
cwtl
aaa
aam
insl
or
pop
add
cltd
push
mov
mov
int
stos
cmp
icebp
imul
ja
fsubrs
jp
mov
cwtl
int
xchg
les
rorl
inc
xchg
shl
aas
icebp
lods
icebp
jb
dec
loopne
add
imul
sbb
mov
jae
out
repnz
mov
jns
jl
ret
clc
dec
in
adcl
cmc
out
xchg
arpl
push
lods
pop
stc
xor
sbb
mov
sub
leave
cmp
xchg
cwtl
mov
scas
dec
add
xchg
push
xor
es
outsb
lea
nop
lods
int
or
aam
jne
cmp
sar
push
fcomp
lds
aad
sub
mov
mov
sbb
lahf
packuswb
pushl
jge
dec
test
lds
repz
jbe
cmp
js
arpl
or
mov
xlat
xchg
dec
cmc
inc
push
int3
adc
out
mov
sub
sti
sub
push
mov
js
mov
and
mov
cmc
popf
cmp
out
xor
jg
add
mov
fmuls
dec
mov
or
js
and
sbb
pminsw
mov
repnz
push
mov
addr16
jo
or
shlb
inc
loopne
jae
dec
cltd
int3
or
add
inc
cmp
mov
mov
xor
mov
lods
loope
cmp
aad
xor
jge
jns
mov
add
mov
inc
mov
pop
dec
iret
mov
ret
push
mov
pop
add
jb
and
and
push
and
adc
xchg
sub
sub
aaa
out
rorb
imulb
ret
mov
add
aaa
dec
pop
dec
adc
jg
ss
mov
into
xlat
fst
add
roll
test
in
mov
pop
cmp
adc
fucomp
inc
dec
dec
repz
je
jp
pop
sahf
dec
xor
loop
ret
xchg
cmpsb
ljmp
or
pop
pusha
aaa
xor
addr16
mov
xchg
add
push
cltd
mov
scas
inc
movsb
pusha
ror
jecxz
jnp
pop
scas
add
int3
ficompl
sbb
mov
jne
or
or
pop
shl
test
leave
repnz
inc
xchg
cwtl
pushf
leave
push
sbb
popf
cmp
mov
inc
out
add
xchg
out
mov
adc
mov
mov
lret
dec
and
loopne
dec
call
mov
clc
popf
dec
push
jmp
mov
fcom
adc
xlat
subb
adc
adc
js
shrb
add
dec
pusha
xor
dec
dec
int
orb
out
les
dec
mov
shlb
leave
sub
cmpsl
out
pop
cmp
xor
sub
out
jnp
cmp
insb
push
and
cli
cmp
shr
lds
int3
inc
in
out
out
imul
pop
jno
sub
mov
repnz
and
push
lods
sbb
xor
out
loopne
imul
out
or
fsubrl
les
outsb
pop
lahf
jg
adc
jo
pop
xchg
xor
aam
fwait
adc
enter
iret
ret
shlb
xchg
fcmovb
push
pushf
cltd
jae
cmp
call
out
or
dec
in
xchg
loopne
sub
push
mov
jnp
test
cli
and
pop
xchg
xlat
lret
mov
adc
lods
dec
aam
mov
xor
mov
jp
push
jns
add
jo
pop
cs
or
fcompl
cmpsb
and
jl
xor
dec
cltd
and
jp
test
ja
mov
xor
dec
clc
pop
stos
fnsave
xchg
dec
sbb
and
adc
cmp
test
mov
mov
xor
jns
mov
das
xor
xchg
mov
test
and
or
stos
jno
inc
pop
aam
mov
les
cmp
lahf
clc
pop
in
mov
inc
prefetch
dec
shll
shrl
aas
sub
imul
mov
xor
xchg
or
cmpsb
ja
fstpl
pop
inc
out
jbe
mov
jae
shr
cmp
stos
mov
push
shl
xor
cmp
push
imul
mov
mov
dec
jmp
in
roll
xchg
push
sub
fldcw
loop
lret
je
in
jge
inc
mov
testl
xchg
mov
inc
pop
loopne
jmp
mov
push
cmp
mov
push
xor
test
mov
mov
in
pop
fsubrl
and
test
sub
fwait
add
out
sbb
and
push
dec
into
hlt
mov
push
out
lods
out
cmpsb
shll
cld
xchg
and
daa
cmp
add
inc
push
pop
jmp
rolb
or
test
mov
lea
cmp
bound
jbe
xor
adc
cmp
inc
xlat
push
dec
in
scas
pop
or
cs
jbe
aas
mov
add
inc
cld
pop
stos
int3
adc
aaa
and
jmp
ret
mov
mov
sbb
mov
sub
cmpsb
mov
cltd
outsb
inc
mov
or
push
repz
mov
pop
out
inc
jl
or
push
sbb
jmp
lods
inc
mov
inc
and
jmp
jb
sub
push
loopne
pop
fisttpll
es
out
mov
cwtl
dec
test
pop
dec
jge
mov
mov
scas
mov
pop
scas
mov
nop
jp
cld
cmp
sbb
xor
or
or
cli
mov
ds
add
add
ret
out
dec
adc
or
js
pop
movsl
adc
dec
repz
adc
dec
mov
pushf
iret
fsubs
jge
cmp
adc
push
int
cld
clc
imul
fwait
mov
mov
pop
in
push
jmp
push
pop
jnp
inc
stos
pop
pushf
sbb
jb
daa
stos
lods
push
cltd
nop
sbb
rolb
fldt
sbb
shll
out
xor
push
mov
add
iret
scas
and
loopne
ds
sahf
pop
sbb
test
pop
xchg
gs
filds
fstpl
sbb
fcmovu
cs
imul
cmp
aaa
pop
sbb
add
cmp
stc
fcoml
jae
fldenv
enter
mov
push
movsb
iret
mov
dec
jg
out
mull
sahf
ljmp
pop
idiv
sbb
xchg
in
or
add
call
loop
lretw
nop
mov
xchg
arpl
fdivrl
mull
mov
adc
mov
das
outsl
cmp
or
adc
mov
aam
cmpsl
xor
push
or
dec
shlb
pop
adc
outsb
mov
rolb
neg
pop
mov
jo
xchg
in
mov
iret
or
xchg
xchg
lea
mov
stc
adc
pop
ljmp
inc
sbb
or
lock
loop
out
or
into
test
add
mov
xor
push
xchg
punpckhwd
inc
mov
jecxz
mov
or
mov
lret
incl
loop
subl
pop
cltd
or
inc
jns
xchg
mov
fs
shr
in
mov
les
jl
roll
lds
jbe
xor
ss
mov
mov
adc
loope
mov
call
mov
xchg
out
push
fs
push
mov
xor
xchg
std
xor
push
jb
dec
mov
pop
fidivl
xchg
push
lods
stos
jnp
shll
jmp
add
pop
add
js
cmp
jne
lods
add
sub
jge
inc
shrl
dec
lock
std
mov
rorl
ret
cmpsl
dec
insb
cmpsb
sbb
int3
incb
imul
jno
pop
pop
jae
sar
stc
xchg
or
lds
xor
xchg
outsb
movsl
adc
or
stc
xchg
out
es
inc
push
ds
movsl
icebp
fimull
cmpsl
das
mov
pop
push
loop
mov
ja
ret
outsl
and
and
sub
xchg
add
int
and
mov
adc
insl
rcl
rcll
or
pop
shll
ret
push
push
push
arpl
test
stos
push
sbb
in
pop
divl
jg
sbb
dec
inc
mov
and
inc
shlb
adc
leave
cmpsl
adc
and
ljmp
cmp
adc
arpl
lods
sub
and
fadds
test
xor
and
inc
xor
aaa
inc
jle
xlat
in
rorl
mov
push
aam
inc
xchg
fiadds
ja
arpl
jg
jnp
stos
sbb
ret
sub
aad
inc
lds
jecxz
imul
jae
push
inc
jle
jle
cld
mov
aaa
cs
bound
add
inc
xchg
pop
shll
dec
dec
sbb
cwtl
inc
cmp
xor
inc
mov
fidivs
fldcw
addr16
sub
xor
jp
sub
loopne
aas
sub
adc
imul
push
mov
xorb
inc
xor
imul
loop
lds
imul
jns
fiadds
push
and
cmp
test
insb
adc
outsl
dec
pushf
xlat
arpl
mov
loop
ret
push
inc
mov
fiadds
fcomp
stc
mov
out
loopne
adc
mov
gs
xchg
or
xchg
xor
xchg
or
shl
xchg
hlt
mov
js
aaa
adc
mov
lcall
lret
push
fdivl
outsl
aas
das
jo
cmp
loope
std
icebp
pop
divb
xor
xor
pop
sahf
cs
jae
scas
loopne
jl
jle
clc
mov
ljmp
mov
cmp
imulb
and
adc
xchg
and
insb
inc
xchg
bound
or
cli
data16
xchg
mov
jp
pop
xchg
popa
jecxz
gs
sub
mov
adc
fstpl
in
loop
icebp
fisubl
jg
xchg
shlb
iret
mov
mov
cmc
push
pop
mov
cwtl
jb
leave
mov
ss
stos
pop
push
mov
mov
sbb
movsl
mov
sbb
mov
pushf
test
dec
sbb
or
mov
inc
xchg
mov
sub
dec
dec
dec
pop
rol
in
jmp
dec
test
cmpsl
xlat
hlt
inc
cmpsb
imul
in
ds
outsb
pop
add
pop
xor
dec
xchg
adc
mov
aaa
dec
push
mov
lret
arpl
sbb
dec
leave
push
out
push
jb
mov
xchg
cmp
flds
shrb
ficompl
pop
stos
cmc
xchg
rclb
jmp
sbb
sarb
leave
jg
push
sbb
jmp
jo
ror
outsl
inc
sub
repnz
stc
lret
mov
cmp
in
mov
mov
mov
test
mov
xor
cmpsb
dec
mov
test
lret
test
addb
inc
cmp
xchg
adc
or
or
mov
mov
rcrb
jbe
inc
cmc
adc
iret
xchg
xor
adc
jae
jle
push
data16
add
imul
inc
cli
mov
xchg
daa
inc
fmul
jmp
mov
std
mov
push
jnp
enter
or
mov
test
pop
aaa
cmpsl
cwtl
and
cmp
xchg
pop
loop
sbb
jns
lcall
dec
push
cmp
fwait
push
outsb
pop
ja
in
jb,pn
pushf
loopne
cmp
loop
inc
cld
push
pop
clc
repz
loop
int3
mov
aas
cmp
in
ret
xchg
adc
and
cld
lods
repnz
or
or
loop
jnp
ret
jo
push
sbb
and
popl
pop
mov
sbbb
adc
pop
pop
les
mov
sbb
mov
inc
daa
sti
dec
mov
outsl
mov
xor
jno
push
push
cmp
mov
insl
insl
cmc
adc
pop
lods
ret
or
xor
into
or
mov
aad
outsb
push
cmc
xchg
jne
and
sub
inc
mov
cs
addr16
ds
push
or
jg
lods
jge
pop
cmc
inc
jb
lahf
mov
adc
mov
lahf
dec
xor
std
pop
loope
aam
pop
in
icebp
adc
outsl
ret
mov
enter
int
outsb
mov
push
out
repz
test
jle
adc
mov
add
aaa
ret
jmp
mov
pop
shlb
push
ret
inc
addb
jns
xchg
out
in
dec
jne
jae
ftst
ja
push
sub
nop
inc
mov
daa
adc
mov
sub
cmp
inc
clc
int
mov
jle
imul
arpl
mov
and
nop
insb
xchg
push
sbb
sbb
push
ljmp
shll
mov
es
scas
mov
sub
test
mov
arpl
movsl
adc
rcll
cmpsb
arpl
icebp
push
shl
imull
loop
pop
xchg
mov
pop
push
inc
inc
push
cmp
rorl
pushf
test
xor
sub
pop
inc
test
and
test
mov
jnp
push
fsubs
mov
or
push
call
inc
pop
xchg
jge
aaa
ss
xlat
add
les
sub
push
repnz
push
fsubrl
mov
mov
rclb
or
stos
mov
push
iret
jne
rcr
push
push
stos
push
inc
in
cmc
xchg
lods
or
arpl
sbb
xlat
add
and
xchg
lea
fbld
mov
loopne
decl
insl
sbb
pop
mov
xchg
sahf
test
iret
cmpsl
xchg
std
inc
ret
xchg
xor
xchg
fdivs
fadd
sbb
mov
cmp
push
xor
lcall
lret
dec
roll
mov
int
aaa
dec
dec
cld
dec
ss
call
adc
mov
scas
adc
add
ja
cmc
sti
je
jnp
push
popa
sub
and
in
fldcw
daa
arpl
xchg
fwait
icebp
push
xor
iret
and
scas
xchg
xchg
decl
push
mov
pop
in
and
jg
lea
imul
out
ja
fbld
or
js
mov
jbe
rorb
popf
or
and
sahf
mov
adc
fstps
lret
adc
mov
jge
xchg
mov
cwtl
imul
cmpsb
scas
arpl
cs
int3
mov
lods
pop
enter
movsb
cltd
out
sbb
push
jg
pop
cmp
rclb
xchg
call
idivl
cltd
add
adc
add
adc
jbe
dec
stos
cmpsb
inc
out
fs
cs
aaa
mov
scas
pop
and
jnp
ja
xchg
jmp
push
lods
mov
out
bound
push
loop
imul
or
bound
ja
mov
roll
nop
cmp
mov
or
mov
add
in
notb
icebp
mov
ja
das
jle
mov
jns
sub
lret
xchg
adc
loope
rcll
pushw
mov
cmc
xor
fcoms
leave
push
pushf
stos
ret
cli
pop
dec
mov
adc
cmc
push
xchg
adc
js
mov
add
push
mov
cmp
out
pusha
fistpl
fdivrl
movsb
rclb
fistpl
mov
pop
mov
pop
movsb
icebp
sbb
dec
or
out
gs
push
cmc
cli
repnz
push
mov
xchg
adc
out
pop
decl
adc
xlat
mov
int3
sahf
aam
in
int
push
cmc
push
dec
arpl
repz
jns
add
and
mov
das
sub
xchg
and
mov
cwtl
lods
ja
js
loopne
incb
xor
or
cltd
imul
inc
pushf
outsl
or
pop
out
push
sbb
negb
fcomi
sub
imul
jbe
xchg
push
push
lods
inc
into
xchg
mov
or
cmp
push
das
cmc
mov
pop
pop
stc
addl
mov
jmp
sub
outsl
sub
fs
lret
outsb
addl
xorb
add
xor
test
xchg
mov
stos
push
fadds
xchg
xchg
mov
stc
inc
pop
into
aas
or
enter
test
psllw
stos
into
scas
ror
add
fimull
out
enter
sti
in
insl
xchg
and
shr
xor
aam
loope
cs
cli
clc
sarl
arpl
cmpl
push
pop
dec
mov
cmpsb
js
cli
jg
push
inc
pop
pop
leave
lods
pushf
inc
fwait
jg
push
mov
sub
push
nop
pop
aaa
adc
addl
add
add
mov
adc
mov
out
outsl
sub
std
fists
add
aas
stos
cwtl
icebp
cs
ficomps
or
aas
xchg
fldcw
adc
mov
les
adc
negb
mov
push
stc
xor
mov
das
cmp
cmp
inc
sub
push
inc
jg
push
loope
push
inc
ret
ret
cmpsb
xor
cmp
fmull
sub
rcrl
pop
and
les
ja
fwait
xor
lret
mov
rcrb
sti
sub
push
or
xchg
adc
jge
cmpl
mov
and
mov
mov
mov
outsb
mov
mov
rcll
adc
lock
mov
jl
pop
arpl
enter
adc
jle
pop
pushf
mov
jbe
call
jg
cmp
ret
dec
iret
jmp
or
or
xor
add
and
dec
sub
repnz
cltd
rorl
xor
faddl
lock
pop
and
cmp
add
rcll
dec
cld
popa
scas
sub
addl
and
scas
jecxz
jp
jo
mov
sub
outsl
movsl
mov
mov
adcl
pop
imul
xchg
or
dec
add
sahf
je
or
lock
push
add
add
add
mov
and
fimuls
in
loop
cmc
mov
sub
enter
mov
lcall
icebp
xor
push
loopne
push
mov
inc
ja
xchg
enter
lret
mov
das
dec
mov
sub
cmp
test
call
in
pop
fld1
inc
mov
ret
cmpsb
bound
lds
mov
lds
or
sbb
in
loopne
pop
fldcw
xsha1
cmpsb
mov
xchg
divl
xor
xchg
aas
xor
into
leave
jne
shrb
add
insb
dec
xchg
loop
pop
push
cs
mov
push
test
out
mov
pop
ds
enter
cmp
jg
in
dec
dec
scas
loope
xor
aaa
leave
mov
iret
jne
test
cmpb
inc
mov
xor
dec
push
jbe
sbb
aam
icebp
pushf
mov
jg
or
sti
mov
psrad
inc
mov
jo
xor
pop
xchg
arpl
loope
jo
xchg
sar
scas
mov
mov
jbe
push
out
jl
mov
jecxz
or
jp
xchg
ret
or
clc
mov
pop
jae
test
mov
add
imul
push
imul
shrb
clc
lods
adc
xor
je
pop
or
mov
inc
sbb
xor
push
xchg
pop
int
mov
push
pop
in
sbbl
cmc
sub
sub
dec
xchg
push
rclb
pop
xchg
or
sub
push
push
lods
imul
jg
out
dec
mov
fxch
jg
sub
push
mov
sbb
and
mov
roll
repnz
xor
out
into
mov
and
cmpsb
inc
sbb
pop
adcl
xor
mov
add
mov
cs
in
movsb
adc
jg
pushf
repnz
sub
jl
nop
scas
adc
adcb
shll
cmpsb
out
into
push
xor
push
outsb
enter
mov
daa
fstps
iret
mov
xchg
jge
xor
repnz
xchg
icebp
lds
xor
dec
test
add
movsl
pop
add
shl
popf
rorb
lock
popa
and
fcomps
or
jb
mov
jmp
popf
mov
movsl
test
mov
aad
mov
insb
sbb
fisubrl
lds
inc
add
arpl
mov
adc
lods
testl
cmp
aaa
mov
pop
popa
popf
sub
out
dec
sub
frstor
ficoms
inc
pushf
push
dec
notb
add
aad
push
aam
inc
xor
and
mov
push
test
into
mov
repz
ss
sbbb
jnp
cmc
repnz
inc
lea
daa
cmp
out
adcl
xchg
xchg
es
and
sbb
int
ss
xchg
push
dec
push
cwtl
mov
js
fldt
lds
cmp
sbb
sbb
arpl
push
mov
xorb
cmp
jmp
in
xor
push
dec
mov
or
fwait
ss
xchg
xchg
jle
test
sbb
in
xchg
mov
mov
data16
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
dec
aad
jae
push
or
mov
jmp
lcall
mov
cmp
daa
jne
push
or
les
ffreep
jae
fwait
sahf
ds
add
bound
movsb
push
cltd
jnp
inc
neg
xor
xor
push
fldcw
jg
and
cltd
pusha
xchg
pop
pop
push
movb
adc
sub
push
hlt
sti
xchg
mov
imul
icebp
jmp
sarb
mov
nop
mov
or
cwtl
stos
xor
cmp
xchg
mov
xor
mov
push
lea
push
int3
or
rcrb
pop
ret
or
fistpll
mov
rcll
arpl
movsl
and
xchg
adc
inc
int3
mov
in
dec
sub
testl
lret
jne
jl
mov
mov
popa
enter
sarb
insl
add
push
out
lret
add
cs
lret
int
sub
cmpsb
jne
lret
outsl
mov
iret
fs
pop
aaa
cmpsb
cmc
lea
push
inc
or
lahf
ljmp
add
inc
lods
and
or
pushf
test
dec
fs
adc
fidivs
popa
leave
pop
int
and
test
sub
orb
into
pop
jge
xchg
mov
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
outsl
add
