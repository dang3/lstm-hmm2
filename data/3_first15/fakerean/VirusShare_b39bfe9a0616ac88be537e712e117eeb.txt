sbb
add
mov
xchg
mov
or
jecxz
daa
cmp
xchg
or
jae
mov
sbb
sub
ja
sub
mov
repz
inc
dec
dec
roll
and
out
xor
gs
das
add
movsl
jbe
dec
movsl
mov
mov
inc
bound
cmc
sub
pop
fs
lock
out
sbb
inc
sbb
cld
data16
inc
push
pop
sahf
sub
mov
sub
lret
push
cld
popf
popa
jae
jne
aad
fcomp
mov
cmp
fildll
insb
dec
aaa
fldlg2
filds
clc
andl
fcmove
leave
in
or
ficoms
push
jp
pop
or
lea
sahf
xchg
icebp
mov
jne
pop
hlt
cmp
add
lret
add
fbld
stc
out
aas
mov
ljmp
lods
loopne
daa
jne
inc
scas
xor
test
adc
pop
leave
das
sahf
or
scas
mov
add
push
mov
lret
pcmpeqb
mov
xchg
hlt
mov
scas
lahf
and
push
sub
divl
sbb
xchg
addr16
push
jbe
xchg
mov
call
sub
loopne
ljmp
rorl
cmp
fwait
add
mov
mov
cs
jb
lahf
xchg
je
sub
dec
dec
inc
push
xchg
stos
loopne
push
es
xor
sbb
insb
insb
mov
pop
add
aad
mov
repz
or
repz
cli
pop
dec
sbb
inc
jo
mov
mov
dec
jle
push
xchg
fimuls
pushf
addl
loope
cli
and
sahf
inc
je
mov
xchg
mov
jb
mov
fsubl
movsl
mov
jo
es
pop
ret
jge
std
mov
or
or
xor
arpl
push
xorl
push
js
jmp
movsb
rcl
mov
cwtl
jb
mov
cmp
push
pusha
cmpsb
sbb
lcall
push
jo
xor
sbb
aaa
call
xor
rep
aas
or
arpl
lahf
fnstsw
add
clc
test
inc
pop
xchg
jne
and
sbb
push
mov
and
add
imull
out
dec
imul
gs
inc
in
repz
bound
int3
mov
mov
xor
pop
mov
leave
subb
and
fstl
jp
aaa
jno
test
push
sahf
orl
arpl
push
jno
dec
jp
lea
mov
push
mov
out
dec
je
adc
jo
adcb
les
ret
cmpl
test
adc
jl
jnp
inc
lock
push
stc
xor
inc
pop
das
add
dec
mov
shlb
pop
mov
out
movsl
push
sub
aad
pop
iret
inc
into
out
negl
loopne
out
adc
mov
dec
xchg
imull
push
cmp
hlt
push
push
das
cmpsl
test
sti
outsl
adc
push
or
adc
mov
pop
pusha
incl
lret
flds
jb
adc
jb
jae
mov
add
and
lcall
addr16
dec
movsb
loop
and
insb
mov
pop
daa
mov
push
ja
adc
dec
mov
cld
movsl
push
xor
and
cmpb
lods
iret
loope
daa
adcl
loop
jle
lods
fbstp
popf
mov
push
jg
add
sbb
and
pushl
idivb
pop
or
sbb
and
iret
rcll
add
in
mov
mov
cmpsb
ficompl
push
lock
and
or
inc
into
jno
stos
scas
or
xchg
test
jae
push
add
xchg
lock
les
lea
push
enter
cwtl
fnsave
flds
sbb
jo
or
xchg
pop
shll
pop
ds
lret
gs
popa
or
sbbl
mov
into
push
adc
call
es
xchg
sbb
lahf
and
pop
clc
fisubl
sub
mov
and
insb
ljmp
shll
inc
pop
inc
add
aaa
into
pushf
fidivrs
sub
sbb
xchg
jg
xchg
inc
cmpsb
mov
pop
cld
icebp
sti
loope
mov
push
xchg
xor
and
inc
add
jnp
lret
fxch
cmp
push
cwtl
xchg
es
rcll
xchg
or
imul
mov
dec
push
jb
xor
xor
pusha
mov
repz
sti
mov
cmp
das
insl
dec
sbb
jno
insb
mov
inc
fsubrp
inc
jp
dec
lahf
testb
xsave
pop
pusha
and
or
push
xchg
popf
test
lock
inc
inc
dec
xor
xlat
cld
aad
xor
fwait
or
cmpsb
iret
cltd
xchg
dec
sbb
bound
inc
mov
xor
int3
int
repz
push
ss
adc
xor
xor
sbb
outsb
ret
loopne
mov
lret
loopne
mov
and
xchg
call
pop
insl
test
stos
add
push
fiaddl
rcrl
lock
mov
push
js
jecxz
pop
popf
outsl
dec
shrl
push
fstpt
ret
sbb
movsb
xchg
pop
dec
push
ret
adc
inc
test
sbb
popa
mov
js
bound
insl
shrl
inc
xor
xchg
xchg
rcrl
jle
repz
nop
bound
add
mov
arpl
call
subl
ja
sbb
fdiv
mov
lcall
repz
decl
std
pushf
rcrl
cs
mov
insb
mov
and
int3
push
sbb
test
ljmp
add
ja
insb
outsl
aas
popa
ret
out
mov
lret
pop
les
sub
mov
xchg
pusha
cmp
mov
xor
dec
test
lods
in
es
push
xchg
adc
lock
shr
dec
inc
les
mov
inc
lock
es
xchg
bound
mov
mull
clc
pop
inc
shlb
rorb
leave
dec
pop
test
test
dec
add
xchg
in
jecxz
mov
mov
jae
loope
insb
jl
add
sub
fdivrs
mov
mov
cmovns
test
loope
popa
cmp
push
push
xor
jmp
fwait
and
loopne
sahf
and
xor
push
add
jle
inc
mov
xchg
int
jge
cmp
fcomip
mov
pop
cli
and
jae
dec
or
xor
stos
mov
dec
les
inc
lret
mov
mov
pop
sbb
outsb
xchg
mov
jns
adc
push
and
pop
fs
mov
aaa
fidivl
ret
testb
push
scas
fsubr
push
std
insb
rcll
mov
mov
jl
xchg
sbb
xchg
cltd
dec
dec
add
in
pop
inc
hlt
pop
sahf
mov
xor
out
rcll
insl
pop
sete
roll
mov
mov
mov
sti
fadd
xchg
imul
xchg
push
stc
in
xor
inc
sub
or
data16
mov
sbb
cmp
cld
xchg
sti
iret
imul
scas
push
inc
jmp
hlt
je
jecxz
call
jne
sbb
inc
push
add
aaa
push
shl
sub
xor
mov
add
xchg
mov
push
sbb
xchg
fbstp
xchg
iret
sti
sbb
fistpll
add
cmp
fisubrs
aam
xadd
fbld
inc
in
imul
or
jle
cld
test
add
and
sub
sub
cmpsb
bound
sbb
icebp
stos
xor
adc
lds
inc
add
gs
inc
and
repnz
mov
ror
aaa
clc
and
pop
mov
mov
dec
negb
or
lea
and
cmpl
mov
movsb
nop
pushf
out
pop
jb
push
sbb
push
enter
and
outsl
cmp
xchg
js
outsl
add
jbe
add
xor
dec
xchg
aaa
mov
adc
lock
stos
jne
popf
mov
jecxz
les
or
inc
mov
dec
mov
and
ret
out
aas
mov
test
lret
xchg
repz
das
jp
lods
movb
inc
pop
add
xchg
jbe
cmp
sub
lahf
sub
enter
lock
addr16
addr16
push
ds
call
or
dec
test
push
cmp
push
sbb
pop
fs
jp
xchg
pop
repnz
xchg
test
jecxz
and
cwtl
pusha
jle
std
ror
int3
mov
pop
shl
fcompl
shrl
repz
je
mov
inc
pop
xchg
jecxz
xchg
mov
pop
shlb
movsb
pop
mov
bound
adc
pushf
test
out
pop
sbb
mov
cmc
and
call
adc
aam
outsb
stos
fsubrl
xchg
pusha
inc
insl
shll
out
into
push
rcl
push
leave
cmp
popf
xchg
mov
fildll
add
jae
aaa
cmp
imul
das
mov
inc
cs
std
pop
inc
in
jecxz
aas
fisttpl
adcl
xchg
shl
cmp
arpl
mov
pushf
rcll
negb
and
jno
xchg
or
mov
jno
ret
addr16
jo
xor
es
leave
popa
gs
aas
mov
mov
rcll
aad
and
out
push
inc
pop
rcr
push
notb
ds
sub
mov
mov
je
mov
mov
adc
lret
sub
jno
pushl
clc
or
or
mov
pop
sahf
fisubrs
inc
call
and
test
repnz
mov
inc
pop
mov
call
and
lcall
sbbl
jbe
les
or
mov
leave
inc
xor
cmpsl
cli
jb
sbb
jl
push
outsl
out
push
and
push
pop
test
sub
pop
jmp
ret
aas
aad
mov
or
mov
push
scas
xlat
fsubr
adcl
xchg
mov
push
mov
jne
add
jle
jo
push
push
jl
ret
xor
add
jge
cmp
mov
out
push
rorl
out
mov
pop
push
mov
push
loopne
test
push
push
mov
ffreep
mov
xor
call
repz
pop
dec
inc
sarb
jae
jle
outsb
xchg
imul
test
dec
adc
push
xchg
sub
mov
cltd
loope
mov
jge
insl
adc
adc
cmp
inc
jns
subb
aam
lret
int
lcall
sbb
pop
dec
xor
ds
js
cmp
sub
into
aam
xchg
in
mov
pop
dec
repnz
jp
mov
clc
and
out
or
add
inc
pop
test
pusha
icebp
adc
jl
xor
inc
insb
hlt
push
jle
ds
shlb
dec
stos
jmp
fwait
out
adc
and
repnz
mov
jg
lds
or
inc
cld
aaa
jp
jne
in
loope
push
xchg
sub
psubq
movsb
dec
xor
cmp
cltd
cltd
push
cltd
mov
and
aaa
mov
das
pop
mov
xor
mov
inc
imul
pop
mul
movsb
xlat
xor
popa
adc
jnp
in
mov
jbe
cltd
sbb
insb
cmpsl
dec
dec
sub
divl
xor
jbe
jae
je
push
pop
add
xor
sbb
sbb
call
idivb
xor
sbb
jnp
pop
adc
or
xor
push
cmp
xchg
arpl
das
lret
mov
cld
mov
stos
mov
push
and
cmp
mov
ss
sub
jbe
idivl
push
into
pushf
xor
jo
jp
clc
or
mov
aad
fs
rcrb
in
adc
adc
lds
loope
sbb
outsl
lea
cli
jae
sub
jle
in
jl
and
mov
push
pop
call
inc
stc
testb
insl
sub
push
adcb
sbb
cmp
or
cs
fwait
xchg
inc
mov
sub
pop
lret
sub
dec
inc
pop
pop
or
fidivrs
mov
ds
sub
jae
cmpsl
push
mov
pop
mov
popa
dec
adc
add
jecxz
or
sahf
sahf
xchg
lcall
cmp
pop
outsl
es
aam
out
stos
sbb
or
dec
xor
xor
arpl
or
dec
icebp
pop
cmp
ficomps
sbb
je
inc
pop
cmp
jp
ljmp
das
jb
jnp
xor
xchg
add
xchg
sbbb
out
shll
loop
sbb
in
andl
aas
into
pop
movsb
aad
add
xchg
movsl
rcll
mov
shrb
sahf
lock
jnp
mulb
adc
jns
imul
mov
popf
das
shl
cmp
mov
test
lcall
ja
add
xor
les
cltd
inc
pushf
cwtl
adc
jge
ds
fwait
mov
mov
inc
insl
dec
pop
mov
jmp
jnp
xchg
popf
mov
xor
inc
adc
clc
inc
lret
imul
outsl
sbb
mull
arpl
scas
pop
add
leave
lretw
pop
outsl
add
add
hlt
callw
and
sub
int
pop
inc
in
sub
repz
test
mov
xor
adc
mov
ljmp
jl
outsl
jecxz
add
ss
xchg
das
add
jmp
or
loopne
gs
pop
jge
xchg
pop
pusha
xchg
xor
hlt
pop
inc
dec
cmp
mov
iret
pushf
rolb
dec
or
fwait
test
ret
sub
cmpb
mov
mov
mov
cwtl
jle
mov
testl
lods
imul
loop
jb
fisubrl
push
xor
mov
jae
dec
sbb
scas
imul
jbe
mov
and
andb
stos
cmp
aam
iret
cmp
and
xor
mov
in
ljmp
mov
add
leave
xchg
arpl
adc
es
pushf
out
cltd
dec
jle
outsl
or
int3
inc
lock
mov
mov
and
mov
test
sub
adc
sbb
repnz
int
scas
adc
lods
xorb
inc
ss
mov
mov
ret
adcl
or
or
fcompl
ret
mov
xlat
fistpll
mov
fnstsw
out
loop
outsb
xchg
mov
and
or
cmpsl
mov
aad
jnp
inc
out
dec
pop
ret
repz
and
xchg
loopne
scas
mov
xchg
sbb
push
dec
mov
pop
loop
rcll
imul
push
repnz
and
mov
sti
imul
idivb
jle
loope
mov
pop
add
jbe
out
das
loop
loop
in
jno
js
jb
mov
mov
sbb
push
jo
hlt
outsb
jmp
sub
arpl
cmpsb
mov
sub
jae
mov
inc
cmpb
xchg
mov
stc
test
cmp
mov
mov
pop
push
jp
jecxz
jecxz
into
mov
mov
cmp
adc
imul
ret
mov
add
out
std
stos
xor
out
sbb
push
inc
mov
jo
cmp
lahf
mov
push
cmc
daa
lret
pop
add
lahf
insl
jp
lds
inc
imul
lods
dec
sub
mov
inc
dec
imul
add
mov
and
add
sub
pop
mov
arpl
jo
cli
push
movsl
es
mov
out
push
daa
ds
lcall
cmp
aad
mov
xchg
call
test
stos
ret
adc
or
jns
bswap
push
cwtl
or
sbb
iret
or
adc
and
inc
ja
outsl
icebp
lret
fucomi
xlat
mov
mov
mov
sahf
iret
push
leave
faddl
pusha
enter
ret
aam
xchg
pop
lret
push
roll
aas
gs
xor
mov
std
add
or
xor
int
jno
dec
sti
clc
rorl
lods
adc
mov
xchg
aaa
fmull
adc
into
fsubrl
cli
jecxz
popf
xor
daa
cmp
inc
cmpsb
es
dec
mov
pop
jge
cli
ds
mov
xor
bound
test
lods
sbb
fistl
dec
repnz
mov
inc
es
iret
lcall
sbbl
out
scas
mov
int
xchg
and
les
inc
repnz
mov
test
xchg
adc
mov
addr16
sub
adc
cld
push
cmp
inc
mov
adc
addr16
dec
rcrb
scas
sbb
pop
pop
pushf
xor
xor
pop
sbb
xchg
out
xor
outsl
scas
adc
pop
inc
pop
sbb
jns
imul
cltd
mov
repnz
push
add
cmpl
push
sbb
sub
pop
mov
sbb
out
mov
mov
sub
and
inc
lret
fucomp
mov
in
pop
fsubs
ds
aam
or
cs
dec
std
inc
lods
sub
popf
and
lahf
fsubp
push
lds
and
loopne
into
test
nop
mov
aam
adc
mov
sub
imul
jnp
adc
jl
mov
cmpsb
jmp
outsb
fists
push
xchg
xchg
add
fs
lods
loope
sub
mov
repnz
std
sti
repnz
push
cltd
in
into
clc
pop
lods
int3
sti
in
rcr
xchg
loopne
rcrb
lahf
insl
jp
sti
xchg
out
jle
xchg
stc
cwtl
rolb
adc
push
das
bound
or
addr16
sub
xorb
xchg
imul
stos
data16
and
popa
ljmp
and
int3
sbb
adc
xorb
push
mov
pop
dec
rclb
jnp
or
clc
push
sbb
mov
or
insb
xchg
adc
mov
mov
enter
fcoml
sbb
xchg
cmc
add
nop
les
mov
mov
sub
sub
mov
lcall
fildll
jp
mov
mov
lcall
ret
leave
push
repz
mov
pushl
add
mov
cmp
mov
sbb
repnz
adc
sub
data16
imul
inc
aam
and
pop
mov
sti
xlat
in
out
or
fsts
loopne
popa
mov
and
pop
das
mov
inc
push
jo
in
ret
sub
aad
jg
pop
adc
pop
fsubl
inc
xor
clc
jno
add
sti
ret
dec
scas
pop
iret
cmp
pop
mov
inc
gs
and
xor
sbb
out
ret
add
insl
mov
xchg
sub
je
ret
dec
xor
sub
dec
xor
rcrb
jns
dec
fisubl
sub
adc
icebp
xchg
cmpsb
int
nop
sub
mov
out
shrb
mov
cs
dec
mov
int
sahf
push
stos
and
in
lods
adc
jg
inc
sti
xchg
lea
movsb
push
pushf
out
stos
adc
xchg
sbb
test
dec
ret
mov
bound
dec
enter
and
jns
xor
out
xchg
js
xchg
mov
mov
dec
sub
mov
mov
adc
in
cmp
dec
jmp
ss
add
xorl
xor
jmp
jle
xchg
in
inc
out
xor
fs
mov
popf
sub
dec
pusha
aam
xchg
push
cli
jge
xchg
es
cmp
or
pop
xor
insb
cmpb
inc
movsl
outsl
add
clc
ja
movsl
push
icebp
sbb
out
jno
or
fdivrl
sub
push
stos
scas
and
cmpsl
mov
pop
in
jmp
stos
mov
cmp
lods
sbb
dec
mov
dec
in
push
dec
test
repz
xchg
xchg
inc
mov
faddl
call
lret
dec
in
xor
in
imul
jo
inc
xchg
xor
lret
mov
pop
out
scas
xor
sbb
ret
pop
and
fisttpl
leave
insb
pop
sbb
fbld
lea
xchg
leave
sbb
jno
pop
sbb
orb
add
mov
mov
xchg
pop
mov
lret
mov
adc
lods
imul
loop
in
mov
sbb
popl
call
movsl
pusha
lahf
out
popf
stc
roll
and
repz
xorb
enter
mov
fnsave
dec
int
in
data16
outsl
es
mov
fcoms
or
iret
scas
pop
pop
lods
data16
inc
repnz
dec
push
mov
ljmp
sbb
push
mov
insl
add
pushf
shrl
pop
lds
sub
or
mov
dec
ja
inc
movsl
xchg
pop
punpckhwd
stc
lds
cmp
cmp
xchg
push
lcall
xchg
pop
mov
popf
and
mov
mov
mov
push
inc
aas
xlat
orb
adc
adc
and
std
movntps
jge
and
loopne
ds
or
mov
test
fdivl
or
push
jbe
daa
cli
scas
scas
jg
xchg
mov
or
xchg
popa
out
and
fistl
hlt
pop
mov
mov
push
cmpsb
popl
shlb
xor
idivl
leave
loop
fsubl
cmc
outsb
jmp
stc
add
push
mov
cmpsb
outsl
pop
mov
inc
stc
lock
lret
lds
pop
mov
in
sub
pop
outsb
mov
push
inc
mov
cmpsb
sbb
sub
out
mov
cli
xorl
les
and
lret
in
jne
nop
rcrb
sbb
jle
add
mov
jge
cmc
icebp
inc
mov
or
addr16
ss
pop
mov
jge
cs
xchg
loop
fldl
jmp
gs
mov
bswap
test
jb
jbe
dec
pop
outsb
pop
clc
cs
mov
mov
sbb
movsl
leave
push
mov
xchg
cld
lods
repz
xchg
data16
out
je
and
mov
and
aas
fists
jmp
jg
dec
lods
adc
xor
or
xor
lock
loope
jle
enter
call
incl
test
mov
adc
movsb
xor
xchg
in
pop
cmpsb
std
mov
push
stc
xor
test
adc
adc
repnz
and
sub
xchg
mov
xor
mov
sub
stc
rclb
jb
negl
in
jnp
imul
aad
rcll
mov
fadd
cmpsl
mov
adc
call
negl
ljmp
inc
das
push
shll
repnz
fists
sub
sahf
jnp
jnp
std
stos
out
popa
adc
and
rclb
cwtl
ss
push
lods
and
pop
xchg
push
jo
and
inc
negb
jns
jb
lret
insl
cmp
push
data16
mov
xchg
inc
mov
mov
mov
int3
clc
add
repnz
cmp
push
dec
rclb
sbb
cmpsb
sub
and
in
stos
jbe
fisttpl
add
mov
xor
add
test
fs
stos
sbb
loopne
iret
iret
insb
in
mov
orl
or
ja
xchg
fmul
adcb
data16
cmp
inc
clc
dec
ret
push
ror
xchg
xchg
shrl
mov
arpl
aad
add
shll
push
mov
or
lea
add
pop
mov
pop
test
pop
pusha
and
rcl
sbb
stos
adc
xlat
inc
shl
dec
adc
mov
dec
dec
xlat
and
insb
inc
out
jb
push
fists
icebp
and
sti
dec
aaa
test
dec
fstps
sti
fwait
lahf
lret
test
fwait
push
test
mov
mov
lcall
call
test
test
mov
mov
cmp
lods
adc
nop
mov
mov
imull
pop
pop
xor
xlat
or
fnstenv
rcrl
ds
imul
repnz
inc
xchg
sub
es
jecxz
xlat
idivl
inc
dec
dec
icebp
mov
inc
push
ret
or
in
rcrl
push
inc
cltd
shl
dec
testb
adc
ret
xchg
mov
cmp
adc
inc
aam
push
xor
test
insl
jge
lret
pop
scas
fsubl
mov
sahf
add
mov
mov
or
xchg
xchg
xchg
in
mov
ret
sbb
sub
lods
lock
shrb
xlat
stos
mov
lcall
inc
leave
xchg
into
int3
mov
pushf
sahf
ficoml
push
cltd
cli
push
xchg
ljmp
fnstsw
pop
outsl
stc
aad
mov
jo
sub
cmc
call
vpsadbw
clc
mov
jno
cmp
les
mov
and
cmp
mov
push
lea
jb
lock
inc
xchg
push
jnp
fucom
insl
ret
fisubrs
or
icebp
mov
inc
xchg
adcl
call
sti
push
dec
and
add
dec
mov
pop
ror
mov
pop
push
add
outsl
rolb
push
hlt
orl
stos
mov
jb
pop
rorb
pop
push
insb
std
stc
and
xchg
mov
jge
dec
inc
mov
inc
lods
shl
popf
stc
fsubrl
cmp
dec
ljmp
stos
sbb
sbb
mov
clc
mov
lds
enter
mov
test
arpl
outsl
ljmp
or
add
ds
loop
dec
mov
int3
repnz
out
in
push
lret
int3
xor
jmp
in
test
popf
pop
push
sarb
cltd
dec
addr16
cmc
jl
sti
xor
stos
mov
and
pop
jb
push
es
or
jne
cmpsb
xor
and
shll
aad
sub
in
lret
pop
cmp
andb
into
pop
jne
movsl
movsb
shl
dec
pop
mov
push
adc
mov
stos
leave
push
sbb
stos
rolb
jno
pop
xorl
insl
std
pop
mov
or
push
in
inc
mov
shl
inc
int3
loope
rcl
and
loopne
xor
dec
mov
inc
sub
adc
add
inc
fisubrs
mov
mov
sbb
sbb
aaa
inc
addb
sbb
clc
push
movsl
push
ljmp
push
hlt
xor
test
shrl
loope
movsl
mov
je
enter
out
aas
sbb
xor
in
popa
into
ss
pop
sarb
mov
cmp
bound
fs
jne
enter
lods
loope
xchg
cmp
push
iret
loop
mov
jl
cltd
mov
aad
inc
xor
fwait
adc
mov
sbb
cltd
jnp
ret
xor
iret
and
cs
enter
cmp
push
cmp
inc
mov
out
cmp
sti
mov
enter
imul
add
inc
push
dec
test
test
stos
adc
fiadds
in
push
mov
stc
mov
add
ds
add
lock
pop
daa
ss
jae
call
dec
lds
jmp
jne
and
test
call
pop
jb
adc
sub
mov
push
mov
ret
inc
or
sub
in
lds
cwtl
sahf
xor
int
scas
mov
pop
nop
cmp
or
push
mov
dec
and
cli
mov
lock
imul
test
xchg
mov
jae
mov
jne
cmp
fdivr
adc
dec
pop
lods
mov
sub
and
shr
sub
sub
sahf
icebp
jmp
cmp
cmpsl
adc
mov
dec
lcall
ret
add
test
cli
jecxz
add
adc
or
sarl
adc
sbb
fisttpl
pop
sbb
cmp
jmp
push
pop
xchg
repnz
push
mov
jl
adc
data16
jbe
ret
arpl
cmp
adcb
leave
push
fists
adc
iret
push
ja
mov
aam
mov
mov
xchg
pushf
mov
cmp
or
jns
mov
jle
add
mov
repz
dec
pusha
push
jl
sub
sbb
out
mov
rcrl
repnz
enter
test
fs
mov
sti
mov
dec
push
loop
roll
movsl
ret
jnp
lahf
or
fsubr
xor
push
scas
test
rcrl
iret
decl
adc
cmpsb
and
in
movsl
das
jp
add
jae
loop
test
add
in
xor
stc
loop
cs
sbb
or
leave
lods
stos
cltd
sub
inc
in
mov
add
insb
popf
pop
out
dec
mov
mov
adc
cmp
rorl
push
loope
cltd
lods
jbe
dec
aam
mov
mov
scas
lods
pslld
mov
dec
xchg
pop
jmp
cmp
call
cmp
mov
dec
loopne
out
fimuls
push
imulb
insl
and
pop
adc
push
inc
call
add
pop
vpsrad
dec
sub
out
push
adc
push
xlat
movsb
int3
mov
jg
in
inc
sbb
push
das
lahf
mov
movsl
add
add
lcall
mov
inc
cwtl
cmpsb
xchg
mov
or
sub
xor
push
add
ret
test
repz
cmpsl
mov
cmp
cmp
jle
je
sbb
lfs
jp
mov
gs
sub
pushf
nop
ds
arpl
idivb
jl
in
int
stos
daa
in
inc
mov
insl
push
jns
inc
push
cmp
inc
jno
sub
mov
mov
rcl
mov
cmpsl
in
outsl
pop
adc
sarl
jne
and
and
push
push
fmuls
mov
pop
movsb
inc
ja
adcl
aad
mov
xor
add
cmp
mov
push
pop
pop
lahf
icebp
leave
lret
mov
test
jae
cmp
mov
inc
mov
sbb
mov
add
mov
rolb
add
sbb
pusha
ds
mov
scas
mov
and
sub
sti
in
mov
dec
in
js
inc
fimuls
xor
inc
dec
pop
xchg
imul
push
add
sti
pop
cli
mov
pop
jl
sbb
lods
xor
loop
adc
xchg
mov
cmp
pop
dec
cmp
or
jecxz
mov
push
testb
fisubl
add
in
mov
fdivrl
sbb
xchg
std
movsl
mov
mov
lock
ss
cmp
dec
sbb
adc
add
dec
data16
pop
mov
push
je
loope
lcall
inc
es
int3
in
fwait
rcrl
js
lock
popl
pop
bound
push
pop
xchg
sbbb
cmpsl
es
xor
out
mov
daa
cld
fists
mov
push
rolb
jnp
jge
dec
sub
and
pop
dec
dec
mov
scas
popa
xchg
xor
data16
popa
je
movsb
stos
jb
cmp
lods
and
fwait
inc
dec
mov
mov
push
in
negl
mov
add
fcompl
xchg
iret
or
movsl
pop
enter
xchg
les
jmp
dec
loop
cmpsb
adc
mov
mov
sub
rcll
jbe
adc
add
push
or
out
inc
je
jle
mov
cmp
jns
insl
aam
std
mov
pushf
cmp
xchg
gs
leave
es
test
and
pop
fisubl
ffree
push
adc
jge
inc
arpl
mov
and
push
lcall
pop
fmul
js
popl
sahf
jo,pn
adc
or
test
push
jle
outsl
sub
pop
filds
push
jns
out
fnsave
or
mov
stos
shrl
mov
js
dec
enter
add
test
push
mov
or
cmpsl
daa
popa
ds
scas
cltd
xor
aaa
mov
push
repz
sbb
pop
xchg
popa
mov
adc
sysret
lods
or
push
les
xor
idivb
lds
shrb
push
lret
jne
popa
mov
sbb
fistps
or
add
inc
shr
fnsave
fwait
adc
test
push
clc
xchg
divb
mov
jno
xor
jnp
lcall
mov
sbb
pop
sbb
adc
xor
in
xor
xor
fdivrl
mov
inc
ds
cmp
add
jmp
lret
ja
mov
int
fdivl
mov
cmp
jne
fisttpl
out
ljmp
mov
mov
adc
push
add
lea
pop
xchg
inc
loopne
std
data16
ss
rorl
lods
or
sbb
fninit
push
out
and
mov
xchg
and
lods
dec
or
add
lcall
sub
mov
scas
cli
in
pop
push
jge
in
pop
jp
idivb
call
mov
test
adc
shl
push
adc
stos
lcall
mov
rorb
jge
scas
xor
sahf
jg
cwtl
xorb
lea
cmp
cmc
into
test
repz
fisubrs
in
or
in
add
data16
fsts
cltd
enter
stos
jb
jle
mov
imul
xlat
pop
iret
outsl
clc
adc
xor
fdivrp
pop
push
push
jge
test
fnstenv
dec
sub
in
insl
js
setb
mov
lcallw
jg
xor
in
push
inc
mov
push
add
or
and
pusha
fs
in
fwait
outsb
jo
test
push
push
iret
das
mov
jae
jb
outsl
inc
mov
sarl
stc
ljmp
push
cmp
push
lret
fdivs
sub
lea
movsl
xlat
xor
xchg
inc
push
jne
insl
xor
sub
and
ds
dec
scas
pushf
add
lock
test
popa
out
sub
add
cmp
xchg
ficompl
jno
xchg
inc
xchg
push
sbb
push
test
faddl
pop
push
fdivl
pop
sbb
pusha
mov
sbb
imulb
inc
ja
xor
jg
mov
jg
and
and
cmpsb
sub
mov
pop
out
add
movsb
popf
adcl
stc
ljmp
into
and
xchg
adc
shrl
sbb
daa
mov
mov
test
mov
xlat
xchg
loop
mov
aad
sub
ss
jle
cmp
sub
jmp
in
push
lock
sbb
and
jno
inc
icebp
add
inc
arpl
and
in
jl
in
aas
in
test
sub
mov
push
inc
repz
sahf
test
movsl
dec
lea
call
push
scas
dec
fwait
enter
dec
push
cmpsb
pop
in
in
movsl
inc
cmp
or
pushf
push
adc
in
das
ja
hlt
push
xlat
aaa
add
cmp
mov
lods
test
dec
add
push
das
and
or
xor
push
mov
jb
vmovapd
cld
call
loope
jnp
push
aad
xor
fnstenv
xchg
cld
mov
outsb
sub
clc
cwtl
leave
imul
mov
cmp
rorl
stc
push
in
xorl
inc
push
insl
push
mov
ja
pop
icebp
pop
mov
mov
popl
test
push
loopne
in
add
jge
add
ficompl
inc
std
fimull
fbld
std
rolb
lcall
sub
cmp
jmp
bound
inc
pop
xchg
movsb
pop
leave
les
pop
push
mov
mov
push
xchg
inc
mov
xchg
mov
aaa
filds
inc
pop
out
sbb
cwtl
inc
cld
lock
inc
imul
iret
gs
sahf
mov
jno
sub
iret
cmp
jbe
xor
lods
mov
and
inc
mov
imul
or
xchg
fisubrs
sbb
adc
imulb
push
and
jmp
xchg
or
aam
and
sarl
adc
inc
sbb
mov
mov
pushf
paddq
dec
dec
test
lods
daa
int3
sbb
pop
sbb
jnp
mov
pushf
lcall
xor
into
push
into
leave
cmp
rol
out
pushf
sbb
jnp
scas
fnstenv
inc
mov
push
inc
insb
daa
lcall
loopne
inc
jb
fwait
inc
jp
test
repnz
jae
mov
push
cli
mov
mov
push
int
xor
pusha
mov
les
decl
test
adc
or
gs
xchg
cmp
xchg
je
in
jnp
mov
lret
ljmp
lahf
dec
sub
inc
ret
dec
xor
xchg
movsl
and
insl
ljmp
shll
lcall
call
inc
ret
xchg
sbb
pop
scas
jne
andl
and
cmp
push
ret
add
cltd
jmp
sub
sahf
sub
arpl
and
dec
inc
lock
fsubrs
dec
or
xchg
xchg
mov
js
ret
and
ret
shlb
mov
loope
cmp
sub
fmull
ret
mov
daa
mov
jb
inc
gs
mov
lcall
push
cmp
and
pushf
fmul
push
packsswb
pop
out
adc
xor
and
cmp
and
adc
sbb
mov
and
iret
inc
leave
jg
hlt
push
sub
hlt
cli
cmp
pop
out
pushl
fcoms
test
jl
jns
push
push
subb
inc
push
enter
aam
pop
stos
cmp
jo
mov
xorb
push
pop
cmp
or
push
mov
pusha
sub
adc
aaa
daa
jns
lahf
lahf
insb
aas
iret
push
aam
cli
jecxz
out
jle
cmpsl
mov
xchg
sub
lods
out
and
fdivrp
mov
aaa
cmp
rorl
mov
mov
mov
ds
push
cmp
or
aas
inc
and
int3
sub
inc
jns
mov
xchg
fisubs
movsl
dec
lods
and
xchg
imul
or
push
std
adc
fildll
loopne
mov
rcl
xor
out
jmp
xor
nop
lret
pop
imul
mov
gs
je
ds
pop
mov
pop
cltd
mov
jno
mov
leave
popf
push
pusha
sbb
add
xchg
fisubrs
mov
push
jns
cwtl
mov
fsubrs
fimull
shll
push
mov
xor
pop
lcall
stos
fdivrl
ja
js
pop
push
jno
aas
mov
jmp
movl
mov
or
lahf
mov
popa
cmp
push
push
mov
and
fbld
pop
call
adc
imul
clc
lods
and
gs
cltd
dec
mov
pop
shrl
cwtl
jnp
cmpsl
xchg
xchg
xchg
xchg
popf
bnd
hlt
and
stos
jno
mov
jnp
in
or
ds
arpl
jnp
lock
add
cmp
inc
scas
cmpb
or
xlat
pop
add
inc
push
lea
or
xor
addl
fsubrp
xchg
addl
into
ret
xor
test
jl
lret
lock
mov
insb
lcall
int
cmpsb
cmp
pop
cld
nop
inc
jge
and
cmp
enter
out
push
cltd
jmp
daa
divl
dec
ds
pop
and
imul
test
in
mov
fwait
popa
sub
xchg
mov
xchg
mov
hlt
rcr
inc
adc
leave
adc
mov
hlt
cmp
cld
mov
fcoms
jp,pt
jb
addr16
clc
das
stos
movsl
out
fiadds
cmpsb
xorl
push
loope
cltd
fisubs
lahf
inc
loop
sbb
aas
push
mov
jns
sbb
sbb
fstpl
xchg
out
dec
mov
aad
jmp
dec
xchg
in
pop
test
in
jge
ficoms
sub
cmp
leave
and
out
dec
jae
or
mov
cmpsb
into
jmp
jnp
les
and
cs
dec
rcl
shll
data16
div
xor
cld
mov
iret
js
inc
sarl
leave
jbe
pop
sbb
adc
hlt
mov
cmp
loopne
jmp
push
sarl
test
pop
mov
or
add
daa
cld
cmp
dec
js,pn
mov
ds
popf
aaa
xchg
ja
adc
push
jle
in
jae
add
enter
push
mov
call
aam
and
and
stos
add
outsb
dec
out
cltd
mov
imul
xchg
dec
dec
push
jle
lods
add
popf
mov
in
notb
mov
mov
inc
sahf
inc
push
xor
ljmp
stc
in
mov
bound
jl
pop
jae
aam
sbb
pop
xchg
int3
and
loopne
fldenv
loop
xchg
test
or
and
repnz
outsl
movsl
arpl
shr
je
lret
popa
stos
rcll
sbb
mov
jne
inc
jo
add
stc
fnstenv
push
addb
or
xchg
aas
dec
movsl
or
movl
and
es
cmpsb
sub
pop
xor
pusha
push
fimuls
inc
inc
fsubs
mov
inc
out
sbb
pop
sbb
xor
int3
aad
repnz
jnp
hlt
jno
xchg
jnp
jbe
filds
ljmp
xchg
adc
sub
arpl
xor
mov
rol
xchg
xor
leave
loope
sbb
das
cs
inc
int3
fidivs
xor
sbb
mov
ja
mov
xchg
dec
mov
orl
inc
push
cmpsl
push
hlt
jle
and
push
gs
and
xchg
xchg
mov
sub
push
push
xor
xor
jle
adc
out
insl
adc
jns
fbld
fidivs
xchg
sti
ret
ficoml
aaa
cltd
add
cli
adc
lods
scas
and
xchg
outsl
popa
test
in
sub
lahf
and
enter
cmpsl
sub
cld
in
dec
mov
movb
cli
jb
dec
jno
adc
lods
jecxz
fnstsw
insb
sub
mov
sbb
loop
jmp
push
push
jae
inc
or
jae
xchg
popa
daa
xor
repz
push
xor
dec
insl
hlt
andps
mov
in
out
fstpt
cmp
mov
cwtl
ret
push
push
xchg
call
ljmp
aas
std
neg
mov
and
stos
push
jg
dec
scas
sub
in
push
ja
test
pop
mov
fldt
mov
adc
inc
scas
imul
fdivs
ljmp
outsl
scas
test
outsb
xchg
jmp
rol
in
jge
js
pop
jg
call
scas
push
ror
jnp
cmp
lock
lods
gs
cmovs
ret
clc
outsb
arpl
sbb
addr16
push
push
in
xchg
stos
dec
dec
mov
daa
xchg
inc
inc
sbb
and
jns
pop
cmp
ret
adc
aam
sub
mov
xchg
ficoml
fimull
xor
add
cwtl
fnstsw
stc
xor
mov
in
or
popf
mov
test
inc
dec
lods
out
pop
into
push
lahf
filds
pop
lds
adc
jge
or
sbb
enter
xchg
sbb
jge
shlb
dec
push
jo
insl
push
inc
pop
or
dec
push
cld
test
insl
daa
push
lret
fdiv
outsb
cli
lods
push
push
xor
arpl
xor
push
enter
add
cltd
mov
pop
lea
scas
push
sarl
adc
mov
inc
repnz
mov
sub
dec
loop
jno
mov
arpl
and
or
test
rcll
xor
pop
add
pop
push
int
dec
testb
ret
sbb
mov
mov
js
gs
sub
pop
dec
sbb
mov
mov
xchg
mov
rcrl
lds
test
push
sbb
stc
lcall
mov
roll
adc
cmp
jge
mov
aad
inc
je
xchg
push
movl
xor
pop
xchg
lock
cltd
aad
adc
xor
ss
cmp
lods
test
or
pop
xchg
fsubrl
clc
mov
push
sub
movl
nop
jge
les
lds
add
xchg
insl
and
and
push
and
push
cmp
repz
dec
dec
test
adc
xor
cmp
add
out
aam
ljmp
cmpsl
pop
add
xor
inc
add
cli
add
sbb
xchg
jl
xor
ret
in
mov
jnp
inc
in
adc
repnz
mov
repnz
js
mov
lds
fwait
imul
mov
gs
jno
mov
rcrb
js
hlt
xor
pusha
roll
sbb
cmp
xchg
or
pop
pop
xchg
aam
inc
sbb
push
push
mov
cld
mov
xor
add
out
ja
rolb
or
insl
push
pop
mov
jl
and
test
jecxz
and
out
sbb
into
call
cmc
and
test
popa
jp
xchg
and
clc
sbb
in
cmp
mov
add
jb
repnz
xor
mov
sub
jnp
adc
movsb
mov
adc
push
pop
pop
jbe
push
and
fimull
sbb
add
mov
sahf
scas
ljmp
lods
mov
xchg
cmp
mov
pushf
add
mov
or
xchg
mov
call
push
mov
xor
jle
jbe
rcr
or
dec
in
inc
jno
jbe
ja
popa
xor
fcoms
sbb
pop
mov
xor
jge
stos
or
loope
cmp
and
push
adc
in
out
and
in
sub
sahf
jns
push
gs
cmp
dec
aad
sub
mov
cmpsl
jmp
mov
lcall
aaa
lods
mov
pop
push
test
imul
pop
mov
xor
rolb
in
add
mov
mov
push
out
notb
out
adc
cmpsb
sub
xchg
and
pop
mov
pop
cmp
jno
rclb
jb
mov
xchg
or
outsl
jbe
xchg
int3
repz
add
inc
ds
or
dec
cwtl
ja
scas
jmp
call
daa
mov
fimuls
aam
inc
xchg
dec
xchg
movsb
dec
out
pop
ljmp
loopne
data16
nop
out
xlat
bound
add
in
jg
adc
push
pop
fcmovbe
push
jne
or
pop
out
pop
cltd
icebp
mov
jbe
inc
test
jno
dec
je
lock
data16
subl
outsl
in
push
fnstsw
sub
jae
adc
add
mov
dec
dec
imul
add
mov
out
xchg
pop
xor
es
mov
xor
out
and
dec
or
pusha
lahf
insl
inc
mov
mov
mov
and
cmpsl
mov
sbb
lea
push
mov
add
scas
sub
mov
xor
ds
dec
pop
ds
jle
jns
or
inc
call
jl
push
cwtl
mov
adc
jns
pop
or
icebp
pop
lods
or
inc
testb
jecxz
cmp
lea
cmpsl
xchg
leave
test
pop
adc
mov
call
push
pushf
mov
inc
sahf
xchg
jbe
dec
dec
adc
adc
dec
notl
mov
ja
jmp
cmp
pop
cmp
nop
imul
out
jne
lods
and
out
imul
xchg
jmp
js
dec
and
cmc
out
movsl
sbb
adc
rorb
test
jne
nop
push
rcrl
fmuls
xchg
popa
lods
xchg
or
in
mov
sahf
dec
inc
lock
in
xchg
jle
ds
xor
cltd
and
fwait
mov
rcrl
inc
std
push
inc
fdivr
int
insl
outsl
xchg
and
or
int
adcb
sub
js
mov
sahf
jns
xchg
adc
push
add
dec
cmpsl
sub
sarl
es
push
fisubrl
jmp
cli
mov
xlat
adc
mov
mov
out
xor
xor
jno
xor
shlb
pop
cmp
pop
fldcw
sbb
cmpsb
sub
rol
and
es
dec
out
idivb
imul
pop
dec
pop
jp
fucomp
mov
dec
movsb
sub
mov
push
das
fildll
clc
fcmovnbe
ss
pop
je
cmp
dec
imul
and
cmp
sub
push
shrb
xor
loop
pop
xchg
push
ss
sahf
std
aad
test
repz
lret
pop
insb
call
mov
std
fs
xchg
or
pop
addr16
ret
rcr
stos
adc
sar
jb
sbb
sbb
aaa
or
sahf
cmpsb
jg
mov
jecxz
pusha
xlat
stos
icebp
jne
and
sub
lods
cli
add
loopne
xchg
and
shld
sbb
cltd
loope
sub
xlat
and
xchg
stos
nop
mov
mov
stos
xchg
pushf
jno
push
push
push
cmpsl
or
xor
pop
dec
lods
jle
mov
in
adcl
and
mov
int3
loop
mov
scas
and
fs
xlat
and
dec
mov
cmp
imul
dec
outsl
push
jle
inc
adc
dec
notl
cmpsb
push
xor
pop
add
fbstp
loopne
add
loopne
std
dec
test
cmp
sub
jecxz
nop
inc
sub
sbb
push
out
mov
xor
cld
lds
test
ss
xchg
add
aaa
cmp
jb
mov
and
dec
iret
and
inc
mov
dec
dec
pop
into
mov
scas
lds
or
jne
int3
fistl
push
test
or
daa
jmp
shl
adc
or
pop
cmc
cli
jnp
xchg
stc
xor
mov
mov
pop
nop
stc
xchg
movsl
xchg
push
lcall
movsl
jnp
int3
jno
data16
sub
jne
mov
addl
cmpsl
andb
xchg
popf
shlb
addr16
cmp
pop
and
jne
testl
out
mov
mov
push
xlat
and
xchg
sub
push
xchg
jns
stc
or
mov
addr16
js
std
ja
out
aad
fcomps
fwait
int3
clc
lds
sbb
adc
js
push
aad
sub
fcmovnbe
xchg
aad
sahf
call
sub
jbe
or
and
out
sbb
adc
xchg
cmp
add
cltd
adc
lea
addr16
outsl
rcll
in
sub
out
push
cltd
or
nop
xorb
add
xlat
jnp
sub
and
gs
cwtl
push
cltd
subl
scas
and
or
or
nop
andl
or
xchg
shll
in
adcb
cmpsb
jb
push
jne
mov
mov
mov
ljmp
cmp
inc
mov
mov
lock
push
in
mov
fsubl
jge
push
into
cs
out
xchg
inc
mov
push
outsl
and
cmp
inc
jg
test
mov
movsl
mov
pushf
lock
push
fwait
psubw
cmp
mov
sbb
or
xchg
and
sarb
loope
mov
add
ds
inc
mov
jae
cmp
loop
subl
int3
lahf
inc
int3
push
or
mov
repz
dec
push
xchg
jbe
mov
into
outsl
jle
mov
add
pop
sbb
gs
add
mov
xor
insb
fisubs
sub
pushf
scas
push
sbb
stos
mov
or
jne
pop
xor
xchg
sbb
jbe
orl
movsb
inc
cmc
into
mov
pop
cltd
add
mov
stos
jle
lods
test
xor
repnz
or
mov
xchg
mov
cltd
add
pop
test
pop
fisubrl
jle
mov
repz
jno
je
sbb
and
sub
bnd
jns
lea
movsb
dec
adc
xchg
push
adc
xor
icebp
movsb
arpl
push
mov
sbb
xor
or
cli
cmc
push
dec
dec
cmc
iret
and
outsb
fucom
cli
push
sub
pop
sbb
push
adc
and
ljmp
lret
cmp
jg
adc
push
mov
out
xor
mov
idivb
mov
call
dec
mov
cmpsl
and
cltd
add
lret
aaa
pop
loope
add
cmp
inc
dec
jo
push
stc
mov
jo
mov
lea
cmp
mov
fbld
mov
jp
mov
scas
in
ret
jb
popa
push
push
mov
sub
add
mov
insb
mov
jmp
lret
pop
pop
mov
pop
lods
cmpsl
inc
adc
popf
mov
push
scas
sub
mov
popf
cmp
popa
js
scas
adc
filds
dec
cwtl
stc
imul
jae
roll
push
jbe
orl
or
std
add
mov
fistps
adc
hlt
cmp
in
mov
out
test
and
cmpsb
cmp
jo
scas
inc
cmp
iret
and
imul
aam
push
pop
clc
leave
mov
jge
in
aaa
mov
lahf
and
pop
pop
sub
fcoml
test
fistps
push
jg
add
add
sbbl
pop
cs
mov
mov
mov
push
adc
pop
mov
movsl
pop
fcoml
outsl
ss
xlat
or
movsb
ss
jbe
adc
mov
add
aas
cwtl
insl
adc
in
scas
and
inc
imul
mov
inc
repnz
fldcw
cpuid
mov
repz
aad
lods
or
push
enterw
mov
ret
pop
ljmp
lea
push
mov
cltd
mov
arpl
sbb
in
js
sub
pop
aas
mov
jecxz
push
sbb
fimuls
paddw
jbe
or
insl
loopne
inc
nop
dec
or
xchg
add
sbbb
outsb
mov
inc
jge
int3
mov
mov
jne
or
xchg
sbb
shll
mov
dec
push
pop
out
jno
in
xor
jae
data16
out
mov
push
xchg
cmp
loopne
sbb
jp
mov
enter
loopne
cmp
or
cwtl
xor
push
ret
lret
push
pop
inc
dec
test
push
push
xlat
jmp
mov
aam
xor
mov
rolb
out
rcl
push
cmpsb
out
dec
out
scas
pop
xlat
jecxz
cmpb
f2xm1
or
add
test
jne
or
leave
test
lcall
xlat
cmp
cmp
lahf
or
push
mov
push
out
and
push
jmp
lret
add
lret
push
or
or
daa
dec
push
or
mov
adc
dec
jae
add
out
sub
stc
mov
mov
aad
adc
or
inc
xchg
out
push
sub
mov
inc
fsubs
xchg
mov
lea
push
aas
stos
pop
ret
or
enter
lock
aas
aam
imul
vmovups
sbb
or
pop
xor
or
jecxz
dec
mov
sti
test
jge
push
push
push
out
dec
cmp
ljmp
lahf
xlat
adc
mov
in
push
dec
add
sahf
fs
dec
inc
push
div
hlt
cwtl
mov
subl
inc
cmpsb
add
adc
mov
faddl
sub
rolb
add
and
xchg
out
jb
sbb
mov
mov
insb
mov
push
mov
aam
lock
in
lcall
dec
cmpsb
or
sub
xchg
sbb
pop
add
mov
fcomi
fsubrl
cli
xchg
hlt
data16
sub
unpckhps
or
pop
mov
cmpsl
xor
pop
pop
lcall
and
jne
jecxz
mov
mov
adc
mov
rolb
std
je
push
and
push
imul
cmpsb
adcl
mov
icebp
arpl
out
mov
loope
xor
pop
jno
inc
xor
ljmp
and
out
subb
lods
pop
add
mov
call
sbb
maskmovq
divl
test
sub
adc
fs
ret
add
lds
rorb
push
mov
dec
mov
testb
stos
cli
jecxz
pop
icebp
and
lods
repz
push
enter
fdivp
cli
pop
lods
mov
ss
ja
adc
movsb
sbb
inc
cmp
dec
je
out
push
paddusb
cmp
cmp
in
sub
insl
pop
cmc
sahf
dec
rcll
mov
adc
ss
xchg
mov
or
aaa
out
pushf
lret
dec
outsb
test
adcl
or
popa
outsl
push
jl
cmpsl
jg
xchg
dec
ja
sbb
jmp
xchg
out
movsl
xchg
mov
testb
dec
rcrl
popa
pop
jo
test
xchg
mov
repnz
push
dec
push
sti
mov
cs
sub
call
out
test
push
jne
mov
jp
stc
mov
pop
or
stos
fs
push
insb
sub
adcl
dec
cmp
mov
xchg
out
fdivrp
ret
sub
ret
push
cltd
pop
mov
mulps
lcall
fwait
sub
iret
inc
cmpsl
notl
mov
rorb
fs
notb
fs
aaa
les
cmp
aaa
shr
sub
mov
lods
jno
repz
fnstenv
notb
push
insb
xor
jbe
and
sbb
cld
mov
mov
in
jne
fstl
lods
mov
add
movsl
or
push
flds
daa
loop
xor
lods
leave
inc
push
mov
push
mov
push
push
dec
sub
cwtl
jp
mov
cmp
jmp
xchg
or
mull
mov
sahf
pop
jb
out
fwait
les
jl
out
and
lret
dec
imul
bound
popf
add
ret
ret
jl
imul
xor
xchg
fdivp
mov
mov
mov
ljmp
xchg
cmp
push
jge
add
and
fwait
xchg
jns
xchg
cmp
cli
add
ss
sti
movsb
cli
fadds
sub
fisubl
std
ss
push
mov
fdivl
inc
ret
dec
push
pop
jp
imulb
mov
ret
xorl
ficompl
in
lea
std
cmc
mov
cli
mov
add
pop
mov
iret
fwait
rol
cmp
or
lock
repz
aaa
nop
push
push
cmpsb
in
jns,pt
sbb
push
sarb
xor
shrl
sti
addb
decb
fs
jb
out
je
fcoms
mov
dec
shll
testb
insb
arpl
pop
mov
inc
insb
jmp
hlt
jp
jp
inc
add
ret
add
lds
stos
pusha
push
and
lods
nop
inc
sub
adc
lahf
imul
xchg
sarl
pop
mov
scas
adc
insl
xchg
repnz
daa
repz
rcrb
adc
bound
scas
mov
cmpsb
cld
aad
and
cmpsl
es
arpl
dec
mov
sbb
test
ss
adc
sbb
imul
jnp
dec
add
lods
fildl
lock
and
rcrl
mov
mov
cmpsb
inc
push
into
test
xor
adc
dec
iret
aaa
pop
add
inc
xchg
cli
push
mov
aad
notl
push
inc
xchg
subl
mov
jmp
nop
sti
inc
es
sub
stc
add
aam
fcmovu
xlat
lcall
leave
mov
cmp
xchg
sbb
call
mov
in
idivl
mov
jbe
mov
dec
cmp
mov
push
lahf
mov
sbb
test
jmp
dec
lds
rclb
sahf
dec
test
inc
jp
jg
sbbl
neg
mov
jo
mov
adc
dec
sbb
sbb
dec
shld
ss
dec
shlb
cmp
mov
pop
repnz
sarb
out
xor
cwtl
lea
or
inc
push
jge
cwtl
fsubrp
inc
test
ret
je
mov
sbb
pop
sub
nop
mov
insl
icebp
sahf
push
fwait
sub
and
lds
push
pop
es
fwait
mov
insb
jnp
je
xorb
test
aam
mov
sub
mov
lds
fisubl
sbb
scas
in
out
dec
icebp
stos
rclb
ds
and
sub
cmp
push
in
and
mov
pop
popa
cmp
out
jecxz
jno
test
lahf
test
mov
shrl
inc
into
rcrb
add
lret
mov
arpl
push
call
jecxz
jge
jmp
fldt
jns
jg
sbbl
inc
fdivl
jecxz
sbb
popa
and
adc
fstpl
pop
ret
ficompl
or
shlb
bound
or
insb
leave
fucomi
adc
xchg
adc
into
dec
int3
jle
mov
insl
push
insl
icebp
sbb
fnstsw
sub
cmc
jge
xor
scas
clc
gs
or
fadds
pop
rcl
cwtl
push
mov
sbb
push
push
fcmovu
jbe
mov
add
outsl
xchg
add
loop
jbe
adc
mov
loope
and
push
jnp
add
fnsave
dec
cmp
shl
rol
icebp
popf
lret
xor
pop
mov
cwtl
inc
je
prefetch
adc
call
mov
fcoml
push
mov
int
push
xchg
xor
repz
adc
mov
jmp
mov
cs
inc
adc
mov
adc
sbb
addr16
ss
sbb
js
lods
mov
fmul
cmc
jbe
int3
adc
mov
lock
jb
dec
mov
mov
das
ds
rcll
xchg
jno
in
jg
pop
mov
push
test
mov
mov
ret
icebp
sbb
jmp
js
dec
cmpb
popf
push
scas
pop
repz
ss
jmp
and
lahf
jle
pop
push
cmp
pop
out
and
addr16
push
idivl
mov
xchg
dec
loop
pop
cwtl
mov
leave
mov
sub
xor
adc
test
in
pushf
jmp
mov
push
push
test
push
dec
cmpsl
xchg
or
aam
xor
lock
lret
cwtl
int3
shll
dec
cwtl
nop
movsb
ljmp
xorb
scas
xor
aas
ret
insl
out
sub
ret
mov
scas
popa
inc
cmc
leave
mov
sbb
push
add
shl
dec
insl
pop
insl
add
test
push
fcompl
push
jp
fdivl
mov
xchg
mov
aam
les
mov
add
loope
push
pop
lea
jne
adc
add
push
testl
rcrb
adc
and
push
aam
rolb
jbe
sbb
pop
stos
mov
pop
shrl
add
adc
js
fxch
test
imul
std
push
loop
ljmp
mov
lret
fisttpll
test
data16
lea
sbb
fists
dec
or
jo
mov
mov
popa
loope
dec
or
data16
lds
add
dec
lods
adc
int
mov
push
roll
lock
outsl
fwait
ja
lret
mov
mov
cld
xor
inc
add
adc
rorl
lea
mov
clc
js
xchg
push
xor
fwait
and
jge
loope
in
jmp
pushf
js
or
cmp
xchg
pop
imull
adc
and
mov
lahf
das
xchg
in
cmpsl
sbb
out
or
push
add
push
jg
jnp
jl
xchg
jg
jb
in
pop
cmpsl
or
mov
popa
and
xor
lcall
js
inc
lret
push
sub
pop
test
or
lods
out
ljmp
sbb
jno
and
cmp
stos
pop
dec
fiaddl
mov
and
mov
inc
cmp
and
push
and
cmpb
js
aaa
pop
sub
mov
pop
mov
xor
dec
ja
data16
fmul
mov
lds
lods
into
out
les
mov
mov
adc
sub
int3
add
push
call
jno
add
pop
pop
pop
push
xchg
sub
verw
xchg
jae
jns
cmpsl
dec
imul
stc
fidivs
adc
imul
push
cltd
fcomps
bound
xchg
mov
jle
jne
sub
ljmp
or
mov
fwait
cmp
int3
sub
out
clc
and
cmpsl
ret
add
sbb
inc
cli
mov
jo
cmp
mov
out
cmp
jbe
jb
jb
mov
repnz
mov
inc
or
enter
and
mov
mov
or
xor
adc
push
xchg
aam
sbb
xchg
popa
stc
mov
int
shlb
aas
add
cmp
pop
cmc
mov
cmp
dec
sub
sub
inc
in
adc
dec
sbb
mov
lea
push
clc
push
ud2
adc
lods
sbb
jae
and
push
inc
aam
and
mov
adc
ffreep
es
mov
xchg
shrb
mov
repz
adcb
outsb
pop
xor
inc
adc
aas
imul
in
stc
lahf
shl
jae
sub
jmp
gs
fs
outsb
cli
mov
jnp
mov
into
loopne
add
inc
or
int
sahf
lcall
xchg
call
sub
ljmp
and
jb
adc
pop
sub
push
enter
pop
mov
jg
jp
aad
push
sub
pop
dec
lret
jmp
add
sbb
out
test
sbb
jg
ljmp
adc
sbb
jnp
out
push
mov
cmp
mov
and
jmp
push
pop
or
xor
xlat
loopw
dec
mov
mov
mov
xor
add
scas
push
cs
int3
out
push
orb
and
insb
movsb
rcl
repz
fwait
push
in
in
idivl
fwait
mov
call
inc
sbb
cmp
cmpsb
push
fldenv
mov
dec
ret
lcall
loop
cmc
fcompl
mov
pusha
xchg
push
mov
daa
inc
push
fxch
adc
into
les
add
lock
ds
lret
cmc
daa
sbb
add
mov
lret
or
push
aaa
in
clc
ss
xor
pop
cs
add
push
cmpsb
je
in
dec
push
push
test
std
xchg
repz
out
xchg
aam
cmp
das
loop
pop
out
fadd
cmp
pop
mov
stos
mov
adc
inc
cmc
inc
mov
sub
shl
jbe
pop
add
int3
pop
test
sub
cmp
mov
dec
push
push
dec
inc
push
and
push
pop
jg
mov
stos
dec
lahf
rolw
or
sub
mov
and
pop
mov
lea
jp
xor
daa
inc
pusha
inc
dec
inc
nop
cmp
in
push
out
xlat
ss
fisttpll
int3
mov
out
sbb
pop
addr16
pusha
adc
mov
push
les
mov
sti
pop
mov
ds
adc
xor
push
arpl
pop
in
inc
test
stc
inc
repz
leave
push
out
test
jne
or
cs
push
and
out
jmp
jns
add
xor
fwait
pop
sub
arpl
repz
xor
cltd
lods
lods
fisubrl
iret
daa
insl
loopne
test
lret
dec
mov
movsl
xchg
xchg
or
cmp
mov
push
cmp
push
jne
leave
loope
jo
push
xchg
adc
lret
push
mov
fmul
enter
lahf
push
jle
fbld
push
xor
mov
int
mov
cli
inc
fnstenv
movsl
loope
add
mov
add
movsl
popa
mov
or
inc
js
loopne
and
inc
shrb
jb
les
out
push
fists
or
mov
xor
nop
pop
pop
shll
xlat
add
mov
or
and
jmp
cs
sbb
enter
jo
pop
pop
sbb
add
pop
mov
xchg
and
cld
push
xor
pop
cmp
xor
loope
xchg
leave
in
outsb
nop
ret
jno
lret
adc
mov
or
daa
out
sub
aaa
and
cltd
pop
mov
repnz
lods
add
es
jle
mov
lret
dec
sub
cli
out
addr16
cmp
daa
arpl
push
or
aad
lret
lret
clc
sub
movsb
ror
negl
or
mov
std
call
xlat
add
repz
inc
inc
add
mov
pop
fbld
sub
sti
jb
jmp
jno
push
ljmp
movsl
add
test
mov
in
push
jge
lock
and
jae
sub
push
incl
mov
xchg
mov
arpl
scas
cld
add
xorl
and
ljmp
add
jnp
push
rcrl
xchg
mov
inc
add
xor
leave
pop
mov
pop
nop
xor
adcb
jno
cmp
in
mov
movsb
test
je
daa
out
ljmp
pushl
or
jmp
sbb
sub
testb
push
fldt
loop
int3
ret
pop
jle
addr16
imul
dec
ret
mov
out
mov
fisubrl
cmpsb
icebp
addr16
movsb
sbb
push
data16
popl
mov
sbb
lret
mov
enter
mov
xchg
out
and
mov
push
shrb
hlt
xchg
testl
add
test
xchg
sbb
std
gs
in
je
adc
mov
adc
stos
inc
inc
test
lds
stc
and
push
aaa
and
push
push
das
fcmovnb
mov
and
adc
xchg
xor
jmp
sub
lea
pop
jecxz
mov
out
dec
mov
out
jo
pop
call
adc
push
cmpsl
imul
add
mov
mov
dec
test
repz
outsl
adc
into
mov
push
fwait
fwait
imul
mov
in
mov
push
stos
or
xor
mov
sbb
mov
int
jo
dec
pop
int3
jge
rcrb
mull
and
loope
stos
ja
shll
leave
dec
dec
pop
add
pop
sti
rorl
cmp
es
and
popa
popf
imul
pop
divb
pop
adc
inc
lods
fsubs
out
fldt
dec
outsb
or
lods
mov
mov
add
add
adc
mov
add
jmp
flds
mov
out
mov
and
fcmovnbe
mov
xchg
in
out
ret
aad
andl
pop
outsl
or
pop
and
mov
mov
out
popf
js
xor
stos
shrb
fs
cmpsb
pop
dec
in
jecxz
cmp
adc
pop
adc
in
arpl
loopne
imul
jnp
fidivs
mov
je
int
mov
lods
in
sbb
mov
jge
enter
dec
pop
dec
cwtl
pop
lock
mov
dec
adc
adc
and
movd
push
lret
lea
js
mov
mov
or
lea
mov
or
loop
repz
idivb
mov
mov
daa
jle
push
and
fst
or
cmpsb
jnp
jb
ret
jmp
xchg
stc
push
lahf
jno
in
xor
stos
cwtl
xchg
sub
jl
add
into
fwait
inc
mov
dec
mov
cmp
sbb
rcrl
insl
sbb
sbb
leave
adc
int
cmpb
mov
test
icebp
loop
adc
lds
js
jle
pop
aad
mov
dec
pop
test
adc
imul
in
loop
daa
push
mov
das
loop
into
mov
dec
into
inc
ret
adc
or
dec
xchg
shll
lret
adc
cmpsb
jo
pushf
jnp
fadds
rcrl
icebp
ss
sub
lods
jne
insl
sahf
push
pusha
aas
add
lahf
xchg
cs
push
into
pushf
insb
push
shll
loopne
das
cmp
jae
out
and
pop
add
adc
iret
mov
out
add
aad
adc
rcll
push
cwtl
xchg
xchg
pop
mov
addr16
xlat
sub
mov
cmp
sarb
mov
js
mov
lods
fwait
mov
pop
cmpsl
ja
lea
jae
mov
fistps
pop
ret
jo
adc
add
shlb
out
cmp
xchg
and
add
mov
dec
test
insl
sbb
test
fs
mov
popf
punpckhdq
jle
xor
insb
bound
sbb
pushf
jns
pop
dec
cmpsb
mov
repz
mov
sub
cs
scas
mov
repz
popf
jne
or
add
div
push
mov
mov
cli
jb
cmpsb
xchg
dec
inc
xchg
add
cld
popa
adc
mov
stos
mov
ljmp
in
cld
ss
in
call
xor
sub
jae
dec
mov
or
cmp
setns
xor
lea
lret
cs
adc
push
cli
int
fildll
xlat
fcmovu
mov
or
pop
inc
push
incb
sbbl
mov
push
mov
sbb
ja
in
sub
nop
add
test
stos
ds
xchg
pop
dec
pop
sti
dec
in
stc
sub
lret
je
loope
or
fsubrs
clc
mov
jle
cmp
xor
adc
inc
pop
mov
xchg
mov
or
call
push
adc
jmp
adc
cmc
dec
cmp
fistps
in
iret
lahf
dec
xor
inc
jne
xor
outsb
loope
xchg
aas
add
xchg
push
or
iret
lret
aam
add
or
jns
mov
xor
adc
imul
test
push
and
test
jle
xchg
cmp
int
cmp
push
outsl
fsubrs
cmp
push
push
aaa
jg
loopne
lahf
pop
xor
mov
pop
xchg
push
add
xor
pop
frstor
push
out
cltd
iret
sti
or
shrl
rcr
mov
stc
lds
cltd
mov
rcl
mov
test
push
mov
mov
and
cmp
ds
out
xor
mulb
orl
cli
lahf
insl
mov
xor
shlb
inc
ljmp
outsl
dec
pop
xchg
jp
adc
cmp
data16
and
sub
inc
mov
or
sbb
icebp
loope
jl
out
jecxz
push
and
sbb
adc
push
sbb
mov
jns
call
push
hlt
adc
imul
xor
push
xor
gs
ljmp
lahf
sbb
int3
mov
fdivrs
push
mov
pusha
jae
test
xor
inc
xor
sbb
xor
popf
ljmp
ljmp
dec
incb
push
les
jle
sbb
pop
repnz
pop
push
or
pop
push
fdivr
ja
cmc
ficoml
and
xor
jmp
std
rcr
mov
sub
push
test
xchg
test
xor
mov
ljmp
mov
lahf
ficompl
sahf
mov
rolb
cs
mov
lock
sub
rclb
mov
push
rcrb
sbb
jns
jb
and
mov
psllw
push
loopne
mov
lea
mov
mov
cwtl
lret
dec
sbb
into
push
or
lahf
hlt
dec
sbb
jp
sub
int
mov
xor
mov
inc
movsl
or
lds
sub
lods
sub
hlt
pop
inc
sbb
aam
or
lahf
sub
test
or
repnz
add
jb
pop
or
jge
in
subb
cmc
inc
cli
and
add
dec
loopne
ljmp
jae
fiadds
in
add
cltd
mov
in
xor
push
inc
sub
jno
mov
pop
out
xchg
jne
mov
push
lds
outsl
fistpl
imul
pop
call
jecxz
incl
and
leave
mov
cmp
ja
sbb
dec
mov
jp
adc
sub
pop
lods
or
rol
loop
sti
popf
xor
push
or
inc
sbb
and
lods
mov
add
jb
sub
cmc
inc
cs
fdivl
sub
gs
adc
outsl
inc
stos
jg
pop
mov
add
xchg
sbb
lahf
push
fs
xchg
push
push
mov
mov
cmp
jnp
ja
xchg
sahf
movsl
lea
stos
pop
pop
in
dec
iret
lcall
mov
xchg
mov
xorb
imul
mov
int3
add
cmp
sub
mov
and
push
or
scas
xor
push
movsl
lcall
imul
push
mov
pop
jae
pop
and
pop
subl
jnp
cmp
inc
jno
pushf
addr16
adc
arpl
pop
out
xlat
daa
mov
sub
mov
imul
xchg
imul
cmpb
mov
popf
cli
lret
and
mov
jae
push
cmp
push
add
jb
dec
jmp
mov
adc
loopne
addb
push
arpl
mov
dec
or
pop
loopne
mov
push
xchg
or
sub
sahf
and
push
add
mov
xchg
jge
ljmp
cs
cmp
xchg
imul
push
mov
lahf
pop
mov
mov
jl
ss
mov
jge
repnz
add
mov
jb
pop
out
pop
xor
dec
repz
test
adc
add
mov
insb
das
lcall
dec
popa
mov
mov
nop
lret
mov
xchg
and
pop
fadds
pop
int3
int3
dec
shl
push
add
or
cwtl
je
xchg
call
mov
xchg
xor
scas
sub
cmp
call
loopne
ret
or
push
sub
lret
jb
mov
fmull
jmp
adc
mov
jge
cmp
es
inc
pop
mov
jmp
pop
mov
push
mov
and
jmp
mov
xchg
push
add
sahf
jg
jl
nop
jmp
or
xor
aam
and
fnstcw
add
mov
pushf
iret
cmc
pop
inc
push
test
loope
and
adc
out
rcrl
sub
repnz
adc
popf
insl
cwtl
je
adc
and
cmp
fstps
test
push
xor
fs
xor
ret
cmp
lods
repz
inc
jae
mov
pop
mov
xchg
push
cs
sub
adc
adcb
addr16
push
out
ffreep
pop
inc
sub
xchg
pop
neg
mov
cmpl
pop
outsl
or
push
mov
push
out
push
js
xchg
pop
popa
adc
in
in
xchg
cs
fldl
jge
idivl
adc
mov
lds
in
push
je
and
iret
int
dec
push
imul
cmp
and
and
aaa
dec
movsl
insl
jo
sub
ja
cld
sub
aad
into
popa
adc
mov
jo
xor
stos
lods
sbb
int
gs
outsl
cmc
inc
adc
mov
and
js
sbb
dec
mov
add
adc
rorl
test
sbb
mov
mov
or
int3
in
jb
pushf
mov
push
dec
test
out
mov
sar
in
xchg
mov
fadds
mov
xchg
add
push
inc
pop
insb
outsl
lds
lcall
jae
xor
and
and
outsl
adc
and
loop
xchg
sbbl
out
cmp
das
pop
or
mov
cli
imul
dec
jae
jge
repnz
ror
repz
sub
out
imul
pop
xor
mov
and
jmp
xchg
pushf
test
pop
repz
inc
test
insl
stos
jp
sub
lahf
xor
popa
scas
test
fstpt
sbb
pusha
xlat
and
cld
scas
ficomps
cmovbe
jle
push
or
ljmp
popf
repz
sub
jl
pop
cmpsl
andb
outsl
jmp
scas
pop
daa
sub
fidivl
mov
rorb
dec
push
jb,pn
hlt
xchg
inc
es
or
shll
push
out
adc
jnp
pop
imul
and
in
xlat
sbb
xor
aas
hlt
fs
ret
cmp
dec
fmul
inc
imul
out
push
push
ret
das
mov
and
lods
in
fimuls
mov
cltd
test
xchg
and
pushf
sbb
cmp
aas
adc
ret
cmpsb
add
dec
xor
bnd
addr16
sbb
lock
outsb
sub
jmp
dec
sub
mov
xchg
sub
dec
jb
mov
jne
mov
mov
iret
dec
mov
popf
popa
mov
aaa
adc
inc
jmp
outsl
shr
lret
andl
aam
add
dec
mov
iret
push
aaa
out
xor
xor
pop
cmpsl
pop
jp
ret
aam
pop
xchg
cmp
lds
xor
inc
sbb
cmp
test
mov
nop
xchg
cmp
pop
fwait
jl
js
dec
dec
jle
icebp
scas
lds
repz
xchg
xchg
mov
dec
push
xlat
mov
jl
add
stos
out
pop
fbld
hlt
cs
gs
or
mov
jge
sbb
inc
push
adc
lods
gs
andl
pop
or
int3
add
mov
add
jl
pusha
mov
stc
cwtl
and
pop
push
je
mov
repz
inc
pop
push
testl
fcom
bound
andb
test
popa
ljmp
pusha
xor
imul
pusha
lods
xlat
scas
sbb
outsb
shr
lahf
in
fldl
mov
in
fcoms
add
push
xchg
xchg
mov
bound
fisttps
fidivrl
mov
into
sub
aam
adc
pop
push
rol
test
add
dec
shrl
movsb
jmp
adc
test
test
pop
loop
flds
mov
sarb
stc
dec
fmull
add
dec
xchg
sbb
lcall
rclb
jg
lcall
loop
pop
pop
dec
sbb
in
and
mov
outsb
cmp
lds
into
stos
xchg
ljmp
dec
adc
cmp
xchg
jbe
add
movsl
jle
adc
or
pop
cmpl
pop
mov
push
xchg
out
jno
bound
fistl
stos
inc
loopne
inc
imull
cs
rcr
test
les
repz
sub
xchg
mov
les
shlb
mov
mov
nop
out
andl
xor
hlt
push
test
out
push
adc
inc
xor
ret
sti
adc
inc
jae
dec
jns
or
mov
jle
cs
xchg
mov
add
jp
mov
push
mov
test
fimuls
es
mov
cmp
popa
mov
jmp
add
test
and
sub
pop
and
fstl
cmp
pop
es
inc
lds
icebp
loop
dec
das
mov
in
pop
pop
lret
jp
cmc
outsb
std
in
insb
sub
mov
push
cs
inc
add
and
xor
cmp
outsl
and
sub
add
xor
mov
test
push
fldl
ds
push
in
aaa
mov
je
rcrb
clc
jns
movsb
rorl
or
xchg
shll
push
lea
sbb
inc
or
push
xor
cmp
dec
add
mov
out
ja
sub
and
test
lock
cltd
pop
adc
jae
jnp
fbstp
cmp
imul
xor
hlt
dec
lds
nop
cmp
cs
shl
fists
repz
ljmp
enter
inc
mov
fsubrp
sub
mov
cmpsb
xchg
mov
jb
out
jne
add
mov
loope
int3
or
xor
mov
or
mov
and
mov
xorl
arpl
vmovups
adc
insl
jmp
int
inc
rcrl
imul
add
jbe
lock
cli
xor
pop
cld
xor
xchg
scas
test
jecxz
cs
mov
dec
inc
out
and
jnp
sbb
mov
adc
xchg
add
mov
mov
es
das
test
je
cld
xchg
pop
shl
xlat
out
in
dec
out
out
scas
out
xchg
sbb
into
lret
xchg
and
inc
jbe
pop
lods
add
lds
cmp
sahf
add
mov
out
aaa
mov
aas
ljmp
mov
shr
dec
jnp
adc
scas
inc
out
dec
repz
mov
or
mov
addr16
and
stos
orl
dec
sbb
xchg
out
add
loopne
repnz
xchg
xchg
mov
aad
jo
lret
loopne
cld
sahf
dec
dec
popa
pop
xor
aam
mov
scas
insb
stc
mov
jbe
or
sahf
stc
cmp
adc
sub
fstpt
fidivrl
add
popa
daa
xor
bound
bound
pop
stc
movb
div
jmp
cld
jecxz
jne
test
or
dec
loope
fdivl
clc
in
ss
shl
sti
cli
cmp
je
mov
xchg
bound
pop
jnp
sahf
ljmp
bound
ja
xlat
push
add
repz
mov
scas
xlat
jg
dec
xchg
divl
ret
add
or
insb
int
mov
lcall
jp
pusha
add
test
ljmp
int3
jl
lea
ret
call
mov
and
pop
ss
mov
pop
fmulp
lcall
cmp
dec
mov
cs
data16
pop
push
mov
loopne
mov
idivb
inc
pop
dec
mov
lock
je
fcomp
mov
insb
loope
sub
loopne
in
ljmp
mov
mov
inc
movsb
addb
push
insl
pop
jl
pop
sub
push
insb
mov
push
cmp
mov
and
ds
sti
and
adc
jp
scas
outsb
xchg
icebp
rcl
or
repz
sub
mov
stc
xchg
xor
mov
jle
xor
ljmp
or
jmp
andb
sub
add
sub
push
mov
sbb
mov
aam
aas
rclb
into
dec
add
xchg
xor
shrb
push
inc
xchg
sbb
mov
cmp
adcl
imul
popf
icebp
out
iret
out
ret
ja
mov
dec
dec
and
out
xchg
js
jo
add
push
and
mov
sbb
ffree
test
sahf
xlat
push
and
imulb
cmpsb
push
imulb
jle
xor
xlat
hlt
loop
shlb
int
loope
mov
fildll
sub
mov
mov
mov
fs
test
jle
sub
das
xor
xchg
add
shl
std
pushf
in
and
rcr
outsl
adc
in
data16
jb
jg
jmp
xorb
ds
clc
mov
sbb
sahf
shll
mov
cs
push
inc
rol
imul
jecxz
mov
fs
test
frstor
lret
sub
sub
pxor
out
cmp
into
mov
push
add
inc
notb
setne
stos
call
out
lods
cli
in
mov
cmp
sbb
stos
adc
cmp
mov
mov
xor
mov
je
mov
cs
and
or
enter
push
sub
fsubp
loopne
loope
rolb
popf
out
jl
cmpb
adc
scas
das
dec
cld
dec
xor
outsb
out
pop
outsb
arpl
jecxz
cmp
and
into
mov
rcll
jne
testb
adc
lock
sub
push
mov
lcall
fmuls
lods
scas
ja
std
pop
pop
fsubs
pop
loop
jbe
inc
push
cmp
xchg
fs
pop
fisubl
cmpsl
pop
cwtl
fidivrl
add
pmulhuw
jg
cld
adc
cs
leave
xchg
mov
push
pop
xchg
dec
xor
popf
jmp
mov
je
mov
and
data16
add
in
arpl
dec
cld
cmp
dec
cmc
and
lea
in
mov
mov
test
nop
mov
test
jmp
xor
into
xchg
cld
push
pop
lods
or
test
xchg
lds
cmp
mov
out
dec
stos
testb
mov
push
daa
aas
jg
popf
mov
xchg
mov
addr16
rcr
in
cmp
jge
fidivrs
lret
loop
stos
repnz
xlat
ja
xchg
imul
stos
dec
mov
and
aam
mov
xchg
or
outsl
rorl
xor
xorl
dec
stc
cmp
jae
cld
rcrb
mov
push
lret
and
imulb
into
sbb
frstor
icebp
xchg
xchg
inc
cltd
shrl
lock
xchg
fbld
adc
adc
xor
stos
jg
daa
cmp
and
popa
popa
ja
and
mov
rclb
fmul
inc
arpl
push
mov
xor
push
adc
sbb
mov
in
pop
das
outsb
daa
lret
cmp
lods
jnp
cmc
scas
cwtl
cltd
and
jg
rcr
jge
lret
pop
cli
pop
or
cmp
int3
enter
jo
add
cmp
test
daa
stc
sbb
repnz
lock
fimull
push
sub
adc
xchg
xor
aas
add
xor
adc
inc
popf
xor
inc
es
and
test
mov
jp
and
jmp
cltd
cmpsl
fsubrs
and
sub
xchg
and
jnp
popf
jo
shll
lcall
insl
mov
cwtl
aaa
mov
jns
jmp
testb
xchg
jbe
pop
xchg
enter
push
fwait
lret
outsl
jle
jnp
and
or
repnz
ret
inc
add
andb
mov
sbb
test
mov
jp
scas
jne
shlb
mov
pop
aas
cmp
shll
lock
fsubr
shrl
scas
mov
xchg
ja
mov
sub
inc
ret
jmp
mov
xchg
add
clc
jmp
sbb
movsl
les
stc
sub
cmpsl
fsubs
or
mov
and
pop
jb
push
test
jae
jmp
pop
les
jnp
jmp
pop
aaa
mov
mov
popa
dec
and
mov
sub
in
xchg
int
push
pop
aam
cmp
adc
fldl
push
iret
ret
popa
dec
adc
rclb
je
fsts
scas
inc
xchg
xor
cmp
mov
shl
test
jmp
push
dec
xchg
jge
xchg
pop
dec
jge
inc
jne
and
notb
xchg
cmp
dec
push
cltd
or
or
movsb
sbb
adcb
mov
stc
stos
mov
lcall
xor
sub
out
fdivrl
mov
movsb
mov
xor
loope
adc
mov
pop
xchg
xchg
add
leave
loopne
xor
fsts
push
dec
subb
pop
mov
mov
mov
mov
mov
cwtl
push
or
cmp
mov
fwait
and
pop
add
insb
push
sbbl
push
roll
push
or
sub
pushf
push
inc
stos
add
pop
scas
jo
stos
adc
rcrl
or
lret
fistpl
mov
add
addb
insb
jecxz
add
dec
jle
enter
lock
andl
inc
add
dec
xchg
dec
fidivs
hlt
lea
push
dec
push
mov
fst
adc
xchg
xchg
cmc
addb
mov
sti
sub
mov
out
out
clc
push
mov
push
punpckldq
cmc
jns
arpl
add
add
sub
lods
jmp
xchg
outsb
cmp
repnz
dec
div
or
cmp
int3
or
and
inc
int3
mov
add
ss
jmp
mov
cmp
jnp
sub
and
cmp
add
cs
push
out
scas
mov
jo
xor
sbb
mov
movsb
sbbb
mov
or
addr16
shrb
jg
jns
xor
sti
mov
xor
imul
popf
nop
pop
adc
idivb
imul
inc
mov
shrb
jb
cltd
adc
or
sbb
jg
cmp
or
mov
mov
and
repnz
loopne
or
sahf
pop
xchg
out
jns
push
fstpt
rcrl
outsl
ds
js
add
int3
decb
call
mov
fcompl
sbb
jno
pop
xor
add
test
fisttpll
insl
in
xor
and
cmp
gs
mov
divl
adc
pop
jecxz
mov
dec
mov
push
pop
ljmp
or
adc
push
cld
hlt
or
xchg
iret
mov
adc
push
scas
jae
sbb
outsb
das
mov
loope
or
shrb
frstor
shrl
pop
pop
and
decl
fs
mov
xchg
cmp
jae
sbb
lret
rcrl
es
sbb
jle
aad
xchg
cmp
ret
pminsw
mov
mov
xchg
or
lods
insl
mov
insl
ja
test
xor
mov
negl
mov
pop
das
xor
xchg
popa
iret
push
andb
enter
rol
fwait
movl
push
addb
test
aaa
mov
in
lcall
insl
shrb
or
das
push
aad
pop
sbb
aam
into
sub
push
push
pushf
push
loopne
lret
adc
jnp
sbb
xchg
dec
xor
fucom
icebp
mov
jnp
loopne
fwait
sub
sub
sbb
shlb
popw
mov
push
mov
arpl
mov
pushf
pusha
or
push
push
xchg
movsb
mov
xchg
mov
push
add
cmc
adc
lds
mov
sti
cli
insb
and
outsb
cmp
sub
rcrl
mov
pop
lahf
mov
or
mov
adcw
sbb
test
push
iret
xor
loope
or
or
mov
rdpmc
mov
aas
dec
iret
mov
sbb
or
fsubs
fsts
lock
mov
fdivrp
subl
inc
mov
arpl
inc
xor
jp
sbb
daa
xchg
push
sub
rorb
loope
repz
shl
xchg
xor
xchg
mov
cmp
ret
iret
mov
mov
test
out
repz
mov
mov
ret
add
add
and
and
repz
jbe
into
pop
pop
jno
repz
inc
cwtl
adc
sub
sbb
cmpsl
adc
ljmp
ds
pop
or
pusha
push
jns
scas
add
insb
dec
dec
jp
fidivs
popf
mov
fsubrs
lds
push
pop
divl
push
sbb
jmp
or
cmp
mov
mov
lea
push
sbb
out
mov
sub
fbld
push
and
psubb
pushf
fnstenv
dec
into
cmp
shr
in
hlt
mov
push
aam
sbb
icebp
insl
pushf
xor
mov
loope
jnp
jbe
lahf
out
or
cmc
rol
loopne
insl
andb
dec
adc
in
stos
push
mov
and
loopne
andb
sbb
or
adc
jno
data16
add
ret
pop
loopne
jnp
sahf
out
mov
or
push
mov
inc
dec
lods
jnp
ja
mov
cmp
rorl
pusha
adc
mov
or
add
popf
pop
adc
mov
jg
rorl
arpl
andl
insl
insb
jp
fcomps
fwait
push
enter
xchg
aam
ds
cmp
mov
int
fcmove
fwait
cmp
mov
test
les
mov
jbe
cmp
xor
jae
or
push
nop
stos
loopne
fmull
jp
cmp
and
int
das
fxrstor
fisubrl
js
mov
mov
mov
add
inc
ja
mov
sub
stc
fs
cmp
inc
lds
sbb
mov
mov
les
xlat
ret
mov
xchg
jb
in
mov
lods
in
lods
outsl
sbb
mov
sub
clc
xor
aaa
popf
jo
push
cltd
pop
push
ret
lds
js
dec
xlat
push
scas
out
ret
and
roll
mov
mov
add
popa
int
out
andl
idivb
cltd
sbb
idivl
ret
roll
stc
push
shll
adcl
dec
in
mov
pop
jno
jecxz
adc
mov
out
loop
mov
mov
sub
lock
fbld
fbld
jg
mov
aam
inc
add
xor
xor
sti
pop
popf
fisubrs
fdiv
xor
gs
in
pcmpeqw
push
add
ds
push
pop
push
cmpsl
repz
incb
pop
enter
jg
ret
and
adc
xor
pop
mov
js
mov
cmp
dec
testb
movsl
adc
loopne
mov
gs
or
pop
push
stos
xchg
mov
fwait
mov
lods
movsb
stc
js
pop
sub
and
test
mov
mov
scas
adc
xchg
mov
sti
call
inc
and
test
and
lock
push
add
jmp
test
inc
lahf
cmp
cmp
call
inc
leave
or
mov
mov
fucomp
xchg
mov
insl
repz
mov
mov
das
sbb
xchg
or
loop
xchg
sbbl
popf
pop
jae
jle
mov
ja
xchg
popf
pop
add
mov
out
dec
js
cmpsb
xchg
cs
push
lret
add
movsb
pop
jp
rclb
sub
jecxz
push
mov
ret
jmp
sub
andl
or
adc
dec
pop
aaa
sub
inc
outsl
jb
mov
adc
sti
mov
psubusb
lods
hlt
leave
insl
in
adc
jne
xchg
pop
sti
inc
in
in
fsubs
and
pop
sub
mov
call
sbb
lock
std
andps
out
mov
xor
ss
sbb
mov
test
sbb
jne
jns
sub
dec
adc
ffreep
push
insb
stos
fldt
lea
pop
jmp
test
adc
push
addr16
addr16
popf
ss
jle
add
data16
shl
mov
pop
dec
xchg
jg
arpl
cld
sbb
pop
inc
jb
data16
cli
lcall
rcll
lock
mov
inc
sbb
jl
cld
je
hlt
aaa
ret
lcall
scas
stc
loop
jo
or
fdivrl
mov
sarl
xor
sahf
xor
sbb
fistpll
mov
mov
sahf
repz
repz
fdivrl
fwait
lock
mov
outsb
xor
cmpl
fildl
push
popl
dec
pusha
pop
pop
fildll
mov
push
push
or
mov
mov
inc
jns
aad
add
push
cmp
inc
jbe
adc
adc
icebp
ret
jl
and
mov
cmc
arpl
inc
out
cmp
imul
popf
or
out
push
and
mov
lret
stos
cli
dec
fildll
mov
pop
push
xor
jne
or
mov
add
lods
int
cwtl
mov
mov
mov
dec
adc
int
mov
jbe
movsb
mov
je
ficoms
int
in
movsl
or
cmpsl
mov
xor
fst
mov
sar
jns
or
fs
ljmp
les
rcpps
je
xor
enter
mov
sar
out
jne
ja
or
lods
sub
cli
pcmpeqd
push
push
mov
ret
xchg
sahf
pop
out
fisubrl
mov
test
inc
dec
mov
repz
hlt
xor
and
xchg
mov
xchg
xor
mov
or
xchg
sarl
sbb
je
cmp
comiss
jmp
mov
mov
cs
fnstsw
push
jp
cmpsb
movsl
sti
jg,pt
out
pop
adcl
mov
and
push
clc
out
dec
push
mov
icebp
fdiv
xor
or
push
add
inc
mov
outsb
incl
sarl
jmp
std
cmp
and
inc
outsb
das
in
jp
fcomps
call
mov
addr16
xlat
mov
adc
lods
sbb
mov
dec
mov
shll
jo
mov
outsb
ss
mov
or
stos
xchg
inc
ret
lret
ljmp
mov
cmp
sbb
pop
add
mov
jp
cs
addr16
outsl
pop
or
fsubp
push
iret
add
sub
in
lock
mov
dec
jp
pop
xchg
mov
ret
mov
js
leave
push
cmp
xchg
aam
add
es
lret
push
addr16
xchg
mov
xchg
push
inc
int3
je
and
jmp
mov
leave
mov
push
pop
ds
sbb
pop
fcmovne
icebp
or
icebp
shll
xchg
cs
dec
and
cmp
cmc
subl
or
ljmp
cmp
jno
add
jno
or
fdivp
lret
add
call
push
out
mov
mov
sbb
push
mov
mov
addr16
sub
lock
out
dec
mov
addr16
fildl
xchg
push
lods
mov
mov
ss
ret
sub
dec
out
in
out
dec
fdivr
inc
pop
pusha
out
jb
in
int
js
mov
or
mov
and
popa
inc
clc
arpl
add
inc
lods
dec
addr16
mov
sub
into
push
lods
scas
js
jmp
add
stc
xchg
in
jg
inc
cmp
dec
clc
fcomps
jno,pt
mov
out
stos
repz
mov
mov
std
mov
popf
add
inc
cmp
mov
pop
push
cltd
addb
out
sub
mov
cmpsl
aad
adc
fwait
mull
int
popa
xor
adc
pop
shlb
lret
inc
mov
icebp
stos
jbe
adcb
adc
mov
fisubs
les
xor
les
jle
pop
push
fidivrl
aaa
sbb
xor
push
xchg
pop
jnp
ss
sub
loopne
pushf
sbb
pop
ret
mov
ficomps
xor
mov
js
and
data16
dec
psrlw
sbb
fldt
jp
int3
scas
adc
enter
into
push
ss
ds
push
outsb
loope
sahf
scas
pop
lock
jae
and
xchg
adc
outsb
sbb
pop
shlb
mov
das
roll
cmp
scas
push
repnz
and
mov
sbb
outsb
push
pop
push
mov
jmp
jge
mov
xchg
stc
idivb
idivl
repz
push
pop
jg
dec
daa
aad
ss
dec
pop
sbb
into
fidivl
pop
or
inc
cmp
test
push
inc
adc
sbb
jnp
iret
xor
pop
shll
or
int
hlt
pop
pushf
nop
sub
inc
aas
push
lds
and
nop
stc
imul
cmp
adc
stos
mov
subb
nop
xchg
jmp
xchg
dec
xor
mov
mov
lret
mov
loope
sub
sub
les
mov
mov
fadd
jnp
dec
push
mov
jp
lods
lcall
clts
out
pop
cli
repnz
std
inc
add
push
sti
push
xchg
cmp
int
leave
aad
mov
fsub
sarl
adc
fistl
add
cwtl
jno
push
pop
pop
sbb
les
js
sbb
xchg
dec
xchg
je
bound
pop
jecxz
mov
or
iret
dec
frstor
pop
xor
fldt
cld
aam
cmp
xchg
or
push
movsb
js
aam
xorb
or
jmp
gs
aaa
push
jns
sar
aad
gs
or
repz
pop
mov
mull
imulb
xchg
fdivs
ret
jecxz
xor
fstps
cmp
dec
jnp
mov
dec
push
loope
push
fidivrl
xchg
es
adc
jp
mov
push
cs
stos
mov
and
cmp
or
in
sbb
pop
inc
pusha
pop
ljmpw
mov
aam
ret
in
mov
mov
adc
pop
into
dec
sahf
icebp
pushf
inc
mov
or
mov
leave
jmp
jg
adc
lret
cmp
loopne
int3
dec
jbe
push
sub
mov
xchg
aas
mov
sub
jmp
mov
adc
loop
leave
lret
fs
pop
stos
insb
push
out
out
out
cld
inc
jnp
sbb
mov
mov
xchg
push
xchg
push
gs
dec
cmpsl
sbb
xchg
mov
jp
cld
sbb
add
and
sarb
mov
jne
int3
xchg
mov
cld
or
xchg
outsb
cmpsl
xchg
movsb
les
push
mov
and
cli
int
pop
add
and
mov
xchg
shrb
insl
or
inc
jno
cmp
and
fistl
and
scas
rclb
push
pop
jnp
adc
testl
or
lea
dec
cmp
fs
sbb
js
ja
and
pop
adcl
jmp
mov
mov
mov
cmpsl
xor
enter
sbb
fnstenv
pop
gs
mov
lods
fsubrp
loope
xor
scas
inc
sbb
ss
mov
adcl
movsb
jb
and
out
scas
icebp
idivl
mov
cs
lea
push
mov
filds
test
fbstp
incb
mov
sub
add
lret
leave
rcrb
push
je
and
adc
push
jne
je
push
pop
movsl
push
jge
xchg
cli
fs
icebp
xchg
mov
outsl
test
cli
mov
adc
xchg
out
lods
push
lcall
push
or
insb
mov
shll
shlb
mov
std
sub
cmc
fdivrs
out
mov
enter
jne
inc
lea
cmpsl
stos
jmp
insb
add
lods
shll
add
pop
cwtl
pop
mov
inc
clc
sbb
add
push
jo
nop
mov
push
cmc
lret
adc
aaa
int
clc
and
movsl
push
cmc
push
xor
pop
jae
push
push
sub
cwtl
outsb
push
cld
sub
cmpsb
adc
mov
xlat
mov
cwtl
add
mov
mov
test
mov
fdivl
mov
mov
sbb
fsubl
mov
jns
xor
in
ss
xchg
out
lods
mov
lcall
out
subb
xchg
loopne
or
sub
movsb
xorb
mov
jecxz
loopne
lods
repz
inc
cmp
hlt
test
adc
arpl
and
aaa
cs
and
jno
je
stos
scas
test
add
adc
lods
lds
mov
arpl
scas
repz
idivl
inc
mov
fistpll
ja
fcmovnbe
gs
inc
pop
lods
sub
mov
xor
sbb
xor
pusha
cmc
xchg
pop
pop
pop
dec
sbb
or
cmp
cltd
mov
xchg
or
mov
add
leave
lea
inc
pop
sub
dec
or
sbb
cmp
jae
js
pop
xchg
out
les
jp
mov
jb
mov
dec
jno
adc
iret
into
pop
mov
aas
cs
dec
cwtl
into
mov
fildl
popa
adcl
jae
les
aaa
inc
push
cli
fisttpll
jl
cmpsb
mov
or
mov
xor
xlat
bound
mov
push
mov
adc
cwtl
lret
pop
mov
and
push
inc
aam
aad
insb
pop
pop
test
outsb
push
leave
xor
orw
les
pop
push
cwtl
adc
adc
fldl
mov
test
shlb
mov
jle
ds
and
mov
or
rcrl
xlat
mov
lock
xlat
stos
push
cmp
push
add
mov
inc
cmp
stos
out
adc
fcomps
cld
dec
push
add
mov
add
loopne
out
pop
lods
pop
adc
pop
lock
inc
inc
icebp
mov
inc
pushf
inc
jno
fsubs
aam
pushf
xchg
icebp
jnp
xchg
ljmp
and
xchg
outsl
test
jbe
sbb
in
pop
adc
mov
and
mov
cs
mov
push
mov
push
cmc
xor
mov
mov
out
jnp
sub
popf
inc
or
enter
adc
cmp
rcrb
sbb
add
mov
in
idivl
cltd
std
iret
loop
xchg
dec
mov
rcl
or
outsb
enter
mov
sub
mov
xchg
sbb
lods
and
je
push
in
fisubl
xor
insl
xchg
mov
push
insl
push
mov
repnz
stos
push
lock
stos
ljmp
cmp
imul
daa
xor
insl
cmp
imul
dec
lret
mov
pop
sbb
out
or
mov
les
fadd
into
jl
stos
jbe
jns
sub
push
cmp
loopne
adc
fsubs
xor
mov
fadds
out
xchg
xor
pop
add
sbb
cmp
or
xlat
inc
ret
std
mov
pop
mov
sub
adc
push
loop
cmp
nop
fmuls
jmp
pop
js
mov
aas
jne
xor
stos
lock
push
adc
jnp
scas
adc
frstor
in
jb
push
outsb
lcall
mov
leave
push
sbbb
inc
xor
out
inc
xor
and
ljmp
dec
sub
scas
nop
xchg
mov
and
inc
pushf
push
dec
inc
mov
jp
xor
cmpsb
addr16
pop
jbe
cwtl
rol
popa
or
xchg
cmp
int3
inc
stos
icebp
xchg
jmp
js
dec
xor
sub
fs
dec
outsb
sti
fnstsw
and
or
xor
cwtl
cmpl
pop
arpl
popf
les
aam
pushf
and
mov
cmp
cmp
repz
popf
xor
call
filds
aad
and
inc
sub
arpl
jp
test
xchg
adc
popf
lock
xor
and
bnd
fstpl
pusha
cltd
popa
mov
sub
stc
pop
fistpl
xorb
insl
push
cmp
mov
stos
gs
das
lcall
lret
mov
add
mov
cld
jl
lret
sub
movsb
sub
cmc
stos
xor
ja
orb
and
movsb
mov
or
stc
orl
cmpl
jmp
cmc
out
xchg
loopne
pop
xchg
jle
mov
push
test
adc
in
sahf
cmp
arpl
movsb
cmp
addb
enter
dec
fcmovne
or
add
dec
push
mov
push
sbb
es
push
outsl
lcall
push
inc
ds
mov
out
mov
jl
inc
pop
insl
sub
jns
mov
mov
aam
or
mov
pop
mov
sbb
jle
shrl
es
push
jne
lret
cli
dec
fidivrl
inc
jle
fdivl
cwtl
dec
jg
dec
sub
mov
aad
mov
jnp
in
xchg
into
popf
lds
lods
es
ret
shll
and
sub
ret
shll
mov
dec
ret
les
and
outsb
cltd
test
repnz
sub
or
in
rcr
pop
ret
lea
jg
iret
out
adc
fwait
mov
stos
mov
push
test
cltd
mov
inc
and
mov
xor
out
mov
add
xor
adc
stc
inc
xchg
add
dec
cmp
jae
jge
es
imul
pushf
sub
or
test
pop
aam
push
arpl
sti
pop
aaa
xchg
jge
pop
push
mov
dec
pop
out
sbb
pop
push
xchg
jl
mov
mov
inc
pop
mov
adc
fidivs
and
cltd
into
dec
call
adc
jne
test
xor
mov
cs
pop
jmp
mov
sar
into
inc
rcll
mov
adc
add
pop
jnp
mov
out
mov
cs
sub
mov
je
adcl
jmp
cmp
and
movb
inc
push
test
subb
insl
out
loop
cmp
fisttpll
cmpsl
dec
mul
sbb
adc
outsl
jecxz
pop
or
lds
loop
or
inc
fisubl
sub
xchg
ja
test
mov
loope
push
data16
enter
adc
add
push
mov
cmpsb
sbb
mov
and
jns
sbb
outsl
int3
insl
sar
mov
xor
jmp
arpl
nop
cmp
loopne
sub
lahf
imul
rcr
mov
adc
add
adc
repz
adc
out
mov
push
lahf
pusha
fldt
ja
sbb
in
lret
add
data16
mov
inc
jae
adc
mov
popf
mov
mov
sub
push
mov
in
aam
xor
imul
push
out
in
and
push
mov
xchg
or
popf
addr16
cli
testb
fildll
leave
call
push
iret
push
mov
mov
in
jg
neg
jne
mov
ret
or
jo
scas
sub
imul
sub
xchg
insb
mov
stos
test
mov
fidivrs
jbe
dec
mov
push
ret
or
aad
cmp
push
sub
adc
cwtl
pop
stos
push
pop
imul
rol
data16
loopne
pop
pop
inc
sti
mov
scas
test
aaa
popa
pusha
fisttps
ds
xor
push
pop
mov
mov
sahf
mov
xor
cmpsl
push
mov
pop
xchg
add
out
jl
or
push
cmp
mov
inc
xchg
add
xchg
aam
push
or
rep
lock
sub
push
stos
ds
movsb
mov
xchg
rcrb
sti
mov
adc
and
jl
bound
and
sub
int3
mov
mov
stos
jbe
push
int
rorb
jecxz
adc
divl
inc
dec
rolb
ror
orl
mov
push
cltd
lret
pop
pop
das
test
cmp
push
cmpsl
or
ss
xor
lods
out
in
xchg
mov
nop
cltd
add
scas
sahf
mov
push
or
mov
loope
jg
pop
cltd
ret
imul
insb
xchg
jno
and
dec
mov
xchg
inc
int3
mov
inc
sarl
mov
sti
pop
pushf
mov
movsl
xlat
sbb
movsb
and
in
xor
sbb
pop
adc
roll
jmp
push
adc
in
sub
incb
cmpsb
or
xor
inc
sti
dec
inc
mov
in
cltd
push
frstor
scas
add
cmp
lock
loop
push
inc
xchg
adc
push
es
and
scas
popa
mov
add
fcos
dec
cmp
or
pushf
add
add
lods
mov
loope
sub
sbb
or
lock
inc
in
dec
xor
jnp
ret
cmp
fimuls
lcall
push
repnz
mov
test
out
shrb
imull
cmpsb
mov
test
mov
sbb
movsl
pop
test
cmpl
mov
sub
mov
pop
and
jne
mov
xlat
fistpll
ds
fiadds
xchg
sbb
cmc
ret
int3
addr16
aad
push
dec
xor
lock
mov
adc
andb
xchg
fsubl
movsl
sub
call
xchg
call
sbb
lods
inc
shr
inc
and
xchg
ja
ret
movsb
mov
dec
in
mov
mov
loopne
loop
sbb
fadds
rcll
jmp
push
cli
mov
idivb
jo
fcomps
mov
repz
mov
xchg
stos
mov
cmpsl
or
stos
xor
xlat
ds
imul
or
jmp
cmc
jl
movsb
out
xor
aaa
mov
scas
sbbl
bound
or
xchg
addr16
inc
mov
xor
in
or
ret
inc
adc
stos
ljmp
cmp
pop
pop
gs
pop
add
adc
add
push
sub
fwait
outsl
sub
add
popf
pop
pop
movsl
call
cmpsb
mov
lods
pop
mov
adc
and
stos
and
dec
inc
xor
pop
add
dec
sub
jb
pop
lret
dec
cs
xchg
adc
mov
aas
enter
je
push
xor
adc
adc
xor
add
or
cli
frstor
sbb
mov
xchg
lahf
xchg
add
stc
pushf
jo,pn
pushf
aam
pushf
xorl
sbb
mov
pop
inc
xchg
mov
inc
data16
mov
cmc
xor
dec
jo
mov
mov
test
lods
mov
ljmp
ja
sbb
stos
jmp
adc
and
fs
fidivl
inc
inc
andl
lret
jbe
xchg
mov
mov
loope
jecxz
enter
rolb
jo
pop
aad
pop
fs
test
inc
push
call
lods
call
fisubrs
inc
jg
lgs
xchg
cmp
lods
popa
xor
xchg
sbb
or
mov
out
pushf
jp
cmp
movb
mov
enter
dec
jb
push
inc
lret
loop
mov
clc
clc
sub
adc
pop
decl
loope
sarl
je
repnz
xchg
mov
cmpl
call
sbb
out
pop
lock
cmpsb
loopne
jo
lret
mov
das
and
in
lcall
sub
insl
cmp
push
sbb
add
repnz
mov
mov
jne
lret
std
mov
into
hlt
aaa
fnstcw
cmp
jb
add
in
mov
mov
adc
out
idivb
insl
out
in
dec
cmp
out
or
pop
push
call
sbb
mov
xor
mov
in
outsl
popa
pop
stos
ss
mov
push
and
gs
inc
jge
sub
les
lods
imul
mov
xor
xchg
gs
adc
sbb
push
ja
push
lea
inc
movsb
xchg
ja
std
add
push
push
das
xlat
int3
mov
test
xchg
cltd
dec
orb
jg
sub
sarl
and
in
scas
adc
dec
js
xlat
out
fistl
addr16
mov
mov
jno
dec
pop
je
or
orb
loop
xchg
leave
jnp
pop
out
jbe
inc
mov
xchg
mov
inc
sbb
jae
sti
inc
ret
shlb
gs
addb
add
test
jnp
cmpsb
aaa
xchg
ds
mov
fiaddl
sbb
push
lods
movsl
mov
cs
mov
sub
add
cmp
jns
jns
negb
imul
fwait
rcr
inc
mov
into
fdivrs
sub
cmpsb
fistpll
pushf
mov
in
fnstenv
cmpsb
or
xor
sub
repnz
subb
mov
fsts
lcall
jmp
jg
std
adc
ds
lds
mov
cmp
sub
cwtl
add
xchg
xchg
pop
sti
inc
or
pop
push
pop
imul
and
sarb
jne
mov
in
add
adc
int3
xchg
mov
cmc
pop
sbb
push
je
adc
fisubrl
gs
adc
fs
or
stos
pop
xchg
repz
jle
ljmp
mov
dec
jp
sti
jae
out
sarb
and
inc
test
cwtl
xchg
adc
cmpsb
loope
jno
outsb
xor
das
dec
je
outsl
pop
in
fisubl
negb
mov
add
push
push
test
or
adc
fcoml
and
xchg
scas
jecxz
push
push
jmp
aad
testl
xor
clc
xchg
fmul
aas
add
std
inc
ljmp
jae
push
leave
xor
mov
lret
xor
dec
mov
pop
popf
xor
sub
cmp
or
jbe
lret
sub
jb
pop
push
push
movb
and
cmp
mov
pushf
leave
cmp
in
xor
mov
mov
adc
and
in
frstor
jnp
pop
faddl
dec
jp
cltd
arpl
shlb
out
cmp
cwtl
xor
pop
inc
xor
daa
xor
pop
mov
jne
imul
jo
in
test
mov
lods
push
push
push
jp
sbb
push
xchg
stos
jmp
orl
lods
and
add
gs
add
int
or
xlat
faddl
or
pop
inc
push
and
je
inc
std
or
mov
clc
and
cmp
pop
loopne
xchg
push
cmpsl
test
inc
sbb
dec
push
mov
cmp
cmp
jns
xchg
hlt
jae
pop
mov
lahf
jo
inc
jnp
ret
xorb
mov
imul
incl
xchg
lea
dec
fmuls
adc
cld
pop
cli
sub
mov
mov
daa
mov
jno
jmp
movsl
scas
testl
xorb
pusha
pop
jecxz
hlt
in
xor
ds
test
mov
mov
int
lods
test
xlat
rcl
js
loopne
ret
dec
push
popf
decl
imul
in
sti
lahf
test
mov
mov
dec
sbb
sarb
mov
sarb
jecxz
xchg
and
cs
aam
cmpl
and
cld
or
subl
lea
dec
addr16
shl
mov
push
xlat
dec
inc
sub
cmp
and
int3
mov
pushf
fsubl
inc
lea
xor
push
cmpsl
xor
inc
repnz
idivb
lods
cmp
dec
and
cmp
adc
in
adc
ret
iret
imul
std
cmp
rorl
mov
pop
movsl
int
and
hlt
imul
sbb
js
insb
push
inc
cli
les
xchg
loop
ds
dec
cmp
jmp
cli
jp
xchg
icebp
mov
cli
outsl
mov
psubusb
xchg
loop
in
mov
cld
dec
jge
and
ja
ja
sahf
ret
je
mov
jle
out
aad
ljmp
repnz
sbb
fsubrl
rcrb
imul
pop
daa
and
outsb
sbb
push
xchg
rcll
cmp
mov
popl
sbb
movsl
xorl
fstpl
arpl
xor
sub
push
or
in
jge
xchg
jne
jl
stos
adc
xor
pop
cli
inc
jnp
adc
enter
repz
or
imul
pop
mov
xor
mov
movsl
mov
je
cmp
xor
or
mov
cwtl
mov
repnz
fisttpll
insb
cli
pop
stos
leave
push
jecxz
adc
or
in
push
movsb
js
jne
mov
test
jg
ret
dec
insl
add
int
outsb
push
sbb
fmul
test
test
rep
pop
test
push
adc
push
pusha
add
push
out
mov
in
lock
dec
fcoms
inc
cld
sub
mov
pusha
cmpsl
leave
outsb
and
iret
in
negb
sbb
test
mov
and
inc
cwtl
sub
xor
add
ret
das
xchg
outsb
lock
xchg
and
pop
xor
popa
dec
loop
jo
iret
int
and
mov
push
sub
into
dec
and
les
ror
add
jne
dec
test
and
push
cmp
cmp
pusha
mov
pop
cwtl
xchg
movq
xchg
push
jp
addr16
fsubl
jb
cmpl
xor
adc
mov
inc
loop
popf
fldt
sbb
push
sbb
xchg
sub
sti
outsl
push
jno
adc
sti
enter
mov
lods
xor
push
mov
sub
scas
insl
pushf
pop
dec
inc
sub
or
and
cmpsb
push
mov
jnp
clc
fmull
adc
jl
pop
push
cli
sub
sarb
inc
repnz
pop
popa
cmpsl
loopne
loop
fcoml
add
mov
js
shlb
jge
xchg
add
and
lods
and
and
adc
sahf
pop
out
icebp
xor
pop
or
sbb
sbb
xlat
stos
dec
ret
mov
fsubs
pusha
lcall
sub
mov
jns
jp
mov
rcl
stc
pop
push
adc
loop
clc
mov
ret
mov
jl
add
pop
sarl
add
add
pop
leave
in
mov
pusha
adcb
xor
adc
push
push
scas
frstor
insb
jns
sar
inc
repz
push
xlat
mov
loope
jnp
fldcw
dec
notl
arpl
jns
lcall
jg
jo
dec
pop
mov
sbb
jb
inc
idivb
scas
pushf
dec
cmp
fmuls
adc
add
xor
xrelease
jnp
fcomps
pushf
xchg
adcl
add
shrb
jmp
scas
int3
mov
pop
push
sbb
sub
mov
adc
hlt
cmp
dec
cmpsb
mov
insl
xor
jl
pop
leave
pushf
lods
aad
mov
pop
daa
cmp
or
push
loop
outsb
jbe
inc
fs
loopne
cmp
lret
imul
and
jle
in
mov
push
dec
push
je
push
add
shlb
cmp
imul
cli
divb
lods
inc
outsl
mov
pop
call
cmp
cmpsb
leave
mov
out
repz
arpl
adc
nop
imul
sbb
pop
into
out
cwtl
adc
rol
arpl
mov
cwtl
sarl
movsl
xlat
out
xor
loope
xor
pop
popa
sub
add
push
cwtl
ss
cmp
inc
imul
out
rcr
nop
dec
xchg
cli
sbbl
inc
sub
xchg
divl
xchg
orb
xorb
dec
jg
xchg
imul
xchg
or
les
xchg
cld
nop
or
rcrl
popa
mov
or
push
test
popf
push
mov
push
in
push
mov
aad
sub
insl
std
cmp
mov
jne
sub
mov
loope
addr16
push
add
or
xor
lock
clc
notb
mov
sbb
xor
xchg
mov
ret
mov
je
push
inc
fldt
push
fimull
shr
repz
cmp
mov
insl
inc
cmp
cmp
nop
adcb
mov
outsb
jp
fisubrl
mov
out
add
fisttpl
jge
mov
lahf
sbb
or
in
sub
insb
xor
mov
dec
inc
jnp
ljmp
mov
js
add
loopne
pop
mov
pop
mov
test
stos
mov
out
pop
inc
jo
adc
pop
jne
ret
xor
test
inc
mov
sbb
ret
repnz
mov
mov
cmc
pop
cmp
aaa
mov
repz
push
je
or
jl
sbb
sub
sbb
dec
loop
dec
xchg
mov
stos
insl
inc
stos
xor
out
and
imul
mov
mov
testl
pop
outsl
and
sti
pop
fiaddl
add
pop
loope
pop
pop
adc
into
mov
ret
push
dec
insb
and
in
daa
cs
mov
stc
sbb
mov
mov
mov
or
repz
out
cmp
cmp
lcall
ret
mov
sub
incl
jecxz
mov
cmpsl
clc
mov
mov
mov
jne
mov
ja
sbb
jo
sub
xor
mov
sbb
inc
inc
rcr
std
push
dec
cmp
mov
les
add
dec
cmp
inc
fnstenv
ljmp
ret
jnp
mov
jo
movsb
mov
pusha
out
lods
cmp
and
lahf
add
cmpsb
jns
scas
sbb
in
rorl
ja
movsw
rcrb
js
fldenv
ljmp
cwtl
dec
leave
fdivl
stos
and
and
and
outsl
xor
scas
shlb
inc
mov
lock
pop
sbb
add
and
mov
andb
dec
and
aam
dec
sub
inc
iret
repnz
mov
sbb
jno
xchg
repz
clc
push
sub
mov
adc
mov
scas
xor
leave
div
hlt
adc
mov
ds
gs
cmpb
add
jp
fidivrs
cld
cmpsl
xlat
jo
dec
adc
outsl
mov
mov
push
mov
jne
in
fldl
lods
test
sub
lcall
sbb
mov
inc
rclb
popa
dec
outsl
adc
mov
lret
add
inc
push
jb
mov
leave
mov
test
lret
cld
mov
aaa
js
negl
jne
fs
int3
fildl
xchg
lcall
mov
hlt
cs
fdivl
cli
xor
mov
pop
dec
and
push
inc
test
xchg
in
xchg
jb
sub
xor
enter
mov
mov
mov
iret
fdivrs
dec
shlb
pusha
stos
sarl
mov
es
xchg
movsl
and
and
int3
xchg
repz
fucomip
idiv
cld
xor
into
or
lahf
xor
add
ret
push
mov
xchg
imul
lods
dec
and
jle
sub
rcrl
jp
jg
jo
test
out
push
xor
xor
add
cmp
nop
fistpl
jns
dec
std
pop
mov
inc
rorb
or
dec
cmp
jo
dec
adc
leave
and
sti
jns
movsb
int3
fbstp
jnp
cmp
xchg
cmpsl
adc
pop
mov
movl
fldcw
push
arpl
insl
sbb
leave
adc
les
cmp
jb
pusha
repnz
icebp
cs
lahf
leave
shlb
or
in
inc
push
mov
cmp
rolb
adc
popa
pop
or
dec
push
push
jb
lds
pusha
push
in
or
xlat
js
mov
add
jb
jnp
arpl
mov
imul
daa
mov
or
aad
push
push
mov
into
fsubrl
sti
sahf
or
scas
aas
fldt
mov
xor
xchg
sahf
sbb
aad
mov
repz
in
inc
fimull
xor
or
xor
dec
test
ret
push
add
pop
scas
pop
mov
ljmp
lcall
cmp
xor
fildll
pop
pop
jecxz
insl
adc
jnp
aam
fstps
inc
test
push
stos
shrl
fnstenv
lcall
sbb
imul
jmp
lods
pop
out
inc
insb
imul
std
jg
fs
jne
mov
mov
jbe
add
cld
inc
aad
imul
add
cld
lock
mov
sub
xor
pop
pop
pop
ret
jae
and
pop
pop
lcall
adc
je
fwait
fs
movsb
aaa
out
lds
inc
mov
imul
cmpsb
add
rcll
and
mov
std
xor
leave
mov
in
sub
and
add
sbb
xor
dec
adc
xchg
cld
mov
shlw
mov
ss
add
shr
popf
test
pushf
add
push
out
or
push
loopne
rcll
repz
mov
pushf
sub
mov
push
or
std
in
cmp
aad
xor
pop
loop
repz
cmp
loopne
cmovo
adc
mov
pop
sahf
mov
sbb
push
pop
cmp
arpl
mov
jno
sbb
mov
cld
mov
sub
mov
nop
sub
adc
mov
xchg
sub
jno
cmp
dec
ja
inc
sub
fldt
xor
out
add
lds
sub
mov
data16
or
fcmovnbe
fdivrl
aaa
mov
jae
int
push
in
mov
mov
or
fwait
mov
push
xlat
outsl
inc
test
xor
fildll
xchg
divps
inc
pop
daa
mov
fadds
mov
xchg
jne
mov
push
xor
jecxz
mov
popa
adc
aaa
inc
xor
stos
lret
jmp
stos
xlat
and
out
std
shll
mov
ljmp
jp
orl
jb
xor
xor
sbb
mov
xchg
ret
pmaxub
lret
lods
lcall
and
pushf
jne
xchg
sub
aad
mov
aam
sub
jmp
repnz
dec
icebp
insb
std
sti
div
sbb
icebp
adcl
cs
add
sub
push
fsubs
push
div
fwait
dec
cli
fs
cmp
pop
mov
hlt
pop
xchg
jmp
rcrl
sbb
dec
and
jb
mov
mov
shlb
inc
mov
lods
jo
in
dec
dec
inc
xchg
mov
mov
mov
dec
add
pop
mov
nop
es
rcrl
bound
push
std
push
lods
push
inc
sub
ret
lcall
fs
dec
pop
sub
insl
fsub
mov
repnz
call
fisttpl
mov
in
lods
fadds
sahf
mov
mov
movsb
fiadds
scas
imull
mov
dec
mov
push
neg
cltd
outsl
mov
in
pop
dec
pop
imul
jg
ret
data16
jb
lds
dec
sbb
stos
lods
out
pop
push
pop
or
das
mov
cmp
jp
jne
mov
mov
mov
xor
imul
incb
rcl
cmc
pop
lods
out
mov
adc
shrl
test
push
xchg
test
andb
pushf
jp
jle
sub
sbb
ret
jge
cwtl
jnp
decl
push
pop
cmc
push
bound
and
mov
cmc
subb
dec
add
lahf
ds
icebp
xlat
inc
push
out
leave
or
xor
mov
mov
dec
mov
mov
add
dec
icebp
adc
mov
addr16
xor
andb
insl
inc
add
imul
sbb
pop
jg
jle
aaa
jp
ss
push
mov
xor
std
cs
loop
add
add
push
popf
les
xorl
sahf
les
adc
pop
xchg
mull
cli
xchg
and
mov
paddq
mov
sbb
test
lock
cmp
mov
ret
xchg
mov
add
imul
popf
repnz
daa
push
cmp
jl
imul
xor
icebp
sarl
mov
iret
outsl
test
loope
dec
scas
pop
inc
xor
jae
xchg
repz
mov
lock
cmp
and
outsl
inc
push
jl
fucom
push
inc
mov
sub
lcall
mov
movl
rol
sahf
cmp
push
rcll
or
cmp
insb
adc
out
fildl
mov
jno
mov
and
sbb
ret
icebp
stos
call
push
push
scas
pop
sbb
mov
cmpsb
pop
imul
aas
mov
mov
test
sbb
subl
cmp
xchg
stos
mov
inc
dec
sub
cmp
scas
orb
adc
inc
mov
mov
push
std
dec
xor
xor
pop
ss
in
clc
ficomps
addb
mov
imul
pop
fisttpll
icebp
faddl
imul
mov
cmp
mov
cmp
mov
cli
sbb
sub
stos
xlat
mov
dec
cmp
sub
rol
lods
xor
mov
pop
dec
shlb
push
es
fbstp
add
lea
jmp
fistpll
movsl
int
dec
test
in
mov
lock
ja
push
loope
mov
fisttpll
fwait
rcrb
push
insl
andl
clc
mov
je
in
aas
sahf
add
inc
mov
imul
jno
in
data16
cs
outsb
into
cltd
sbb
fistl
xchg
pop
and
lcall
sar
jae
push
jae
fldl
and
movsb
scas
out
out
roll
xchg
and
leave
adc
daa
add
in
jb
push
sub
mov
es
cmp
mov
xchg
and
cwtl
jne
xor
movsb
sti
jmp
mov
clc
mov
mov
data16
repnz
add
mov
push
loope
or
ljmp
ret
sbb
cmc
pop
xchg
dec
out
jns
test
out
and
cmp
or
sub
push
pop
mov
xbegin
test
ret
sbb
jl
add
leave
add
fsubrs
pop
mov
lods
aas
imul
inc
add
mov
imul
fcom
push
and
push
add
fiadds
ljmp
and
fprem1
imul
mov
mov
jb
jmp
pop
sbb
stc
and
mov
lods
dec
inc
mov
sbb
das
adc
bound
cmc
or
mov
xchg
pop
push
pop
jp
jecxz
sbb
iret
inc
mov
jbe
pop
cmp
pop
jmp
in
pop
push
lret
add
pop
test
jg
out
loopne
jae
sti
and
adc
jp
movsl
shlb
push
ja
stos
test
mov
pop
test
add
loope
xchg
int3
jle
dec
push
mov
mov
lahf
push
aad
xlat
mov
fwait
arpl
sti
cmpsb
adc
cmpsl
in
aam
lcall
sbb
jle
insl
push
or
scas
pushf
push
in
dec
orb
mov
out
out
int
imul
mov
mov
out
cs
cmp
mov
inc
and
mov
imulb
icebp
xchg
jne
clc
cmc
adcb
stos
fstl
mov
lods
shll
xor
in
rol
subb
mov
shlb
jnp
adc
leave
ja
push
fldenv
icebp
shll
ds
push
mov
xchg
lcall
fistpl
or
mov
jnp
push
addr16
adc
adc
sub
test
push
xchg
sbb
loop
jmp
jnp
cwtl
gs
aas
mov
jmp
push
sarl
mov
hlt
iret
mov
data16
pop
cmp
es
ss
and
outsb
nop
hlt
cmp
ljmp
sbb
mov
xchg
sub
add
mov
imul
test
jl
out
mov
imul
pushf
jno
add
mov
xor
mov
cmp
pop
out
fists
dec
inc
fmuls
fwait
test
dec
aaa
das
xchg
in
inc
mov
cltd
lahf
popa
mov
lock
into
lds
xorl
push
outsb
mov
imul
ss
dec
inc
and
or
lahf
and
cmp
fs
xor
aad
scas
xchg
pusha
icebp
cmc
shll
clc
push
xchg
and
test
iret
ss
and
dec
cmpsb
add
add
cli
dec
insl
push
mov
jno
mov
cltd
adc
and
cli
mov
into
xor
push
xor
int
xor
loope
mov
enter
sbb
adc
in
bswap
xchg
lea
mov
cld
or
cmp
insb
mov
fdivr
xor
scas
inc
lret
add
test
push
fs
movaps
loopne
xor
iret
aas
scas
les
push
enter
out
clc
inc
rol
mov
and
lahf
lds
push
inc
add
push
mov
jns
dec
ljmp
mov
pop
addb
mov
dec
popa
sub
es
fsts
inc
xchg
outsb
dec
lods
xor
in
lock
sbb
adc
adc
sbb
outsb
sbb
push
sbb
xchg
scas
ffree
jge
push
cli
lds
xor
shrl
ljmp
mov
stos
cmpsl
cwtl
vfrczps
lret
push
loope
lds
mov
sbb
pop
hlt
sub
cmp
inc
push
nop
jno
out
and
xlat
ljmp
aad
scas
scas
mov
sbb
and
jp
das
mov
add
outsb
fwait
xchg
xor
cs
cmp
and
xor
pop
mov
dec
jmp
sub
jg
xchg
sbb
adc
mov
cmp
push
pop
popf
out
and
fcomps
add
push
test
pop
sub
aaa
sti
out
leave
lea
out
dec
mov
mov
mov
or
lahf
sbb
call
adc
jle
test
rorb
insb
pushf
mov
cmp
or
sarb
vpmaxuw
aam
ljmp
outsb
adc
enter
cmp
orl
sub
inc
mov
dec
cmp
dec
sub
pop
out
dec
mov
xchg
xor
dec
adc
inc
ret
cmp
fwait
mov
pop
icebp
push
sbb
sub
mov
ss
addl
nop
mov
and
fld
push
xchg
ret
ds
jg
xor
xchg
mov
loope
jmp
mov
std
cmp
xchg
lods
daa
insb
inc
outsb
dec
enter
inc
adc
push
sahf
sub
or
mov
xchg
jmp
and
scas
mov
sahf
les
cli
mov
and
fimuls
sti
stc
or
imul
push
push
cmc
sbb
mov
pushf
mov
cmp
or
sbb
or
bswap
out
sub
ja
rcl
inc
dec
cmp
sbb
hlt
sbb
mov
aad
add
inc
xchg
in
push
sbb
adc
xor
je
sbb
cmp
cmp
and
jo
notl
pop
xchg
xchg
adc
pop
xor
das
leave
mov
sbb
lds
jbe
pop
add
daa
xchg
insl
cwtl
inc
es
mov
jl
out
or
imul
pop
outsb
lds
movl
mov
pushf
cli
xchg
out
jmp
mov
xlat
cmp
dec
cmpsb
dec
jno
stc
sbb
dec
cmpsl
mov
stos
add
push
enter
cmc
test
in
insb
sbbb
mov
xor
inc
dec
clc
ret
dec
ljmp
dec
shll
pop
mov
out
dec
in
shlb
add
push
adc
rorb
idivl
dec
or
movsb
icebp
fisttps
sbb
aam
sub
pop
outsl
lahf
idivb
ret
lods
lahf
shlb
stos
fcoms
push
xchg
add
mov
inc
mov
cmp
lea
mov
pop
mov
jl
cmp
sub
push
mov
scas
cmc
push
sbb
dec
dec
inc
mov
mov
ss
insb
or
sbb
sahf
ret
sbb
dec
sbb
pop
hlt
cmp
mov
add
pop
inc
outsb
test
in
loope
je
cmpsl
xchg
xchg
enter
lods
cltd
cmc
xchg
fwait
sbb
dec
add
cltd
jb
or
aaa
xchg
in
cmpsb
pop
sbb
xchg
add
push
push
sub
fldt
cmp
ffree
ss
pop
or
movsb
push
in
pusha
imul
test
lock
pop
push
mov
xchg
jbe
pop
mov
add
js
push
pop
or
aas
dec
dec
mov
dec
in
lcall
nop
lret
fld1
mov
fidivrl
inc
mov
push
ret
into
pop
and
icebp
add
pop
adc
movsb
dec
xchg
xchg
aam
nopl
nop
leave
jg
and
lret
ret
je
inc
mov
imul
ss
bnd
js
mov
xor
mov
sub
insl
inc
dec
cltd
out
lret
jmp
sbb
mov
lahf
xchg
pop
cmp
sub
scas
pop
mov
jb
repz
push
arpl
lret
loopne
cltd
rclb
xchg
jae
loope
mov
dec
mov
add
std
push
mov
insl
lret
shll
inc
fs
in
and
pop
xlat
fiadds
mov
dec
es
nop
jnp
xchg
subl
xchg
stc
cmp
xor
int
aas
jmp
outsl
mov
ret
xor
addr16
test
jae
mov
and
negb
std
add
inc
adc
and
pop
call
lcall
jmp
cmp
xor
or
add
jmp
out
loope
insb
mov
in
sub
mov
dec
jmp
pop
sbb
imul
loop
test
inc
inc
insb
mov
mov
pop
cs
xor
lea
jns
bnd
push
jo
jnp
lahf
sub
fdivrl
ss
push
xorb
mov
xlat
cmp
pop
jge
loopne
pop
std
xchg
test
mov
negl
jp
adc
test
dec
jle
mov
aaa
xchg
inc
sti
mov
je
outsb
push
repnz
xor
push
mov
fildl
xchg
inc
xchg
sub
test
out
sti
repnz
push
stos
adc
mulb
repz
mov
iret
mov
lret
imul
pop
loopne
sub
sbb
clc
dec
dec
test
or
sahf
push
clc
lret
shlb
push
aam
or
nop
or
cmc
lds
mov
inc
ficoml
inc
inc
jmp
loope
js
push
lea
pop
and
aaa
imul
mov
aas
and
add
outsl
jo
dec
fstl
js
mov
inc
pusha
and
in
out
ja
and
xor
mov
out
push
add
imul
out
and
sbb
sbb
dec
add
sahf
stos
sbb
popf
push
mov
lahf
in
xor
test
cld
push
inc
sbb
test
mov
and
xchg
movsb
lcall
sbb
xchg
ja
imul
lods
andl
mov
aam
js
or
inc
cmp
or
cmp
push
movsl
push
enter
mov
mov
enter
jp
adc
cltd
mov
push
lret
daa
daa
mov
cmp
mov
sub
push
fdivrs
dec
leave
daa
sahf
add
sub
sub
leave
jge
cmp
pop
nop
dec
fmuls
pop
mov
jmp
mov
lods
cmp
lods
fsubrs
shll
scas
scas
sti
sub
stos
jne
jo,pt
scas
adc
and
scas
arpl
adc
aad
mov
adc
lret
xchg
rorb
in
push
out
xchg
out
xchg
jecxz
outsb
mov
shrb
lret
xchg
test
push
or
or
lods
gs
sarl
addr16
test
push
sbb
shll
fldl
mov
sub
cs
gs
into
decl
rclb
mov
addr16
adc
jl
jmp
push
das
inc
insb
nop
push
ficomps
push
mov
push
test
or
adc
test
mov
dec
sti
dec
adc
sub
jl
lret
lds
xor
push
mov
xchg
sbb
das
cli
dec
adc
push
cmp
ret
sahf
xlat
add
fsubrl
mov
push
cmp
xor
add
dec
popf
adc
mov
xor
cmp
mov
mov
fsubs
inc
mov
inc
shrb
in
outsl
imul
loope
xchg
mov
lods
push
sbb
xor
jmp
sub
jb
and
push
nop
xor
mov
add
mov
fadds
cld
cmp
int3
ret
mov
jbe
add
dec
xor
add
lds
ss
out
mov
xor
jno
cmp
dec
scas
repz
mov
lret
das
insb
mov
je
daa
in
jne
jl
jg
cwtl
inc
mov
and
shrl
aam
sub
ljmp
es
add
add
daa
aas
add
xor
adc
es
sub
pop
mov
mov
pop
inc
mov
std
sub
cmc
in
loopne
cld
or
std
loope
test
adc
or
arpl
fldl
dec
xchg
or
mov
and
adc
mov
insl
popa
adc
xor
pop
scas
push
insb
sbb
jl
lret
repz
xchg
pop
mov
popf
mov
sub
orb
popl
xor
lock
xchg
lea
pop
das
dec
push
lock
pop
jmp
pop
mov
mov
inc
iret
add
out
jne
shrl
loop
incb
cmp
dec
cmp
int
mov
add
mov
fwait
mov
leave
sbbl
mov
sbb
push
sbb
sbb
xor
dec
push
stos
movsb
inc
popf
xchg
imul
xchg
rol
rcrl
push
rclb
mov
inc
cli
xchg
je
test
mov
adc
mov
mov
cmp
sbb
dec
mov
sbb
nop
arpl
sub
push
cmp
mov
inc
pushf
aas
sub
cmp
repnz
test
faddl
sbb
dec
cmpsl
mov
mov
in
push
cmpl
fimull
xor
inc
inc
xchg
sbb
fisubrs
outsb
sbb
lods
fcom
aas
sbb
or
pop
ja
push
cmc
iret
fbld
sub
inc
das
repnz
sbb
and
lret
sub
stos
pop
lods
cmpsb
mov
rorl
je
shr
dec
sti
int3
jno
fdivrp
rcl
popf
jg
cwtl
jns
lcall
pop
pop
leave
push
dec
jo
test
lret
push
pop
sti
mov
lahf
pop
ret
lahf
dec
aaa
mov
addr16
mov
fmuls
xchg
das
mov
cmp
push
movswl
iret
push
adc
mov
xchg
les
rorb
push
popf
adc
dec
sbb
mov
mov
mov
inc
inc
lret
jnp
aad
inc
fcompl
loop
lea
outsb
daa
cmp
xor
rcl
lcall
cli
inc
mov
jmp
gs
pusha
xchg
push
in
daa
xchg
int3
pop
sbb
fidivrs
stos
sbb
outsl
inc
jle
test
popf
jg
imul
sti
clc
xchg
xchg
pop
into
push
and
js
std
inc
mov
push
and
lea
dec
insl
jns
pop
mov
xor
sbb
or
xchg
jg
jne
sbb
mov
xchg
inc
mov
fcmovnbe
sub
jecxz
adc
cld
or
lds
shll
push
cmp
adc
lcall
ljmp
mov
js,pn
xlat
test
inc
sbb
aas
repnz
cmpsb
das
mov
jb
stos
sub
rclb
jo,pt
int3
xorl
or
push
xchg
insb
rcrl
and
xorl
xchg
push
and
or
sbb
push
mov
sbb
push
dec
int3
pop
fisubs
inc
cmp
add
push
ret
insl
xor
push
xchg
sbb
cmp
dec
and
fldcw
or
pop
aad
mov
mov
mov
stos
repnz
ja
sarl
fs
adc
sbbl
inc
pop
scas
repz
push
sahf
roll
dec
lods
dec
daa
hlt
shl
mov
fstps
xchg
pop
xor
mov
je
movsb
out
sbb
lcall
or
popa
std
mov
fcoms
inc
push
dec
sbb
jb
les
fsincos
movsl
cld
ret
xchg
imul
pushf
add
sub
cli
mov
movsl
mov
popa
stos
push
jo
inc
lock
adc
fisttpll
xchg
ja
mov
insl
mov
scas
push
shrl
sbb
lds
adc
test
lods
rorb
pop
cmp
scas
aam
push
xorb
andl
jp
adc
test
gs
repnz
ljmp
hlt
mov
pop
xor
lock
test
ja
push
push
mov
insb
btc
push
insb
cmpsb
jns
cmp
sub
or
das
lcall
jl
cmpsl
cwtl
enter
sub
add
dec
inc
and
daa
mov
out
fisubl
pop
jle
pushf
into
or
sbb
push
icebp
das
in
and
addr16
mov
push
xor
js
push
fcoml
mov
pop
push
outsb
nop
add
xor
ret
pop
dec
icebp
fsubr
icebp
cli
cmp
insb
mov
sub
jno
adc
add
fbld
add
sti
inc
xchg
lea
aad
xchg
jmp
insb
ficoml
mov
jb
nop
push
mov
adc
sbb
pop
xchg
test
inc
and
lret
int
jle
mov
in
sbb
ss
sbb
jns
cltd
shrb
popa
or
pop
cmp
or
xchg
fs
shrb
in
js
adc
pop
pop
cmp
jmp
mov
fdivp
js
leave
in
imul
push
fidivl
lods
or
pop
adc
mov
fwait
pushl
movsb
imul
xchg
ja
rcrl
xchg
xlat
scas
int3
scas
lods
test
out
call
out
and
fldl
stos
ljmp
add
add
shll
flds
mov
xchg
out
mov
xchg
addr16
sbb
test
add
aaa
lock
xchg
insl
sbb
imul
or
mov
fiaddl
pop
push
add
ror
mov
or
icebp
ficompl
addr16
test
stos
push
mov
mov
test
inc
imul
fimuls
out
cmp
test
rolb
movb
mov
loop
sbb
adc
iret
and
dec
mov
scas
clc
sbb
addr16
test
sbb
cs
xchg
jecxz
sub
fmul
shll
ljmp
xchg
sub
andb
pop
jo
pop
mov
cmp
sbb
aas
cmpb
cs
fcmovnbe
cli
add
xchg
inc
ret
int3
testb
jl
mov
lcall
xor
sbb
rorb
sbb
pop
je
cli
add
dec
cmpsl
jecxz
push
mov
push
mov
add
or
sbb
cmpsl
mov
jo
ss
ljmp
shll
lods
pop
icebp
adc
aaa
push
fsubl
jne
dec
pop
in
sub
mov
loope
scas
insl
and
lret
in
sub
jge
and
pop
sub
insb
mov
dec
rorb
stos
pushf
xchg
sahf
add
push
loope
adc
xchg
and
push
push
in
pusha
dec
sbb
jbe
mov
in
mov
xor
adc
adc
sti
xorl
iret
lods
jecxz
jmp
xor
loopne
ror
dec
xlat
jnp
out
xor
es
out
sbb
xor
movsb
scas
and
mov
inc
in
stos
aaa
push
xchg
cmpsl
mov
mov
mov
cs
xor
out
pop
test
js
insb
push
jno
aas
sub
jbe
call
mov
dec
or
adc
xor
sbb
cmp
enter
in
ljmp
lea
cmp
dec
adc
adc
mov
jnp
jg
mov
mov
inc
repnz
push
in
push
pop
outsb
mov
jmp
scas
jp
sti
scas
mov
mov
pop
mov
jnp
mov
out
mov
xor
mov
inc
push
jbe
jg
xchg
ds
dec
icebp
adc
mov
mov
pop
and
pushf
shlb
repz
pusha
test
ljmp
add
cmp
out
fsubs
mov
inc
shlb
cwtl
lcall
fxch
fidivl
mov
xchg
push
pop
mov
and
jnp
push
ret
in
push
pop
jb
mov
lahf
mov
xor
xlat
mov
and
cmp
and
mov
and
lds
adc
inc
loop
lods
jge
fcmovnbe
mov
dec
call
inc
jno
push
inc
movsb
imul
xchg
xor
jmp
rorb
mov
out
jge
outsb
push
int3
js
mov
cwtl
adc
mov
roll
add
mov
sub
fs
mov
fdivl
fstpl
daa
jne
xchg
pop
cmp
shr
mov
mov
lds
pop
jp
sub
or
pop
nop
jne
fcomps
ja
in
or
outsl
rolb
shrb
mov
mov
push
jecxz
sbb
sbb
jo,pn
scas
mov
ss
imul
xlat
sub
push
mov
sbb
mov
or
push
mov
dec
cmp
jp
sub
test
lods
testl
sbb
mov
push
pop
mov
roll
add
out
jb
dec
imul
cmp
test
inc
aaa
inc
pop
sbb
outsl
cmp
hlt
pop
jbe
jg
pop
imul
mov
mov
push
scas
jl
mov
andb
xor
in
mov
cld
cwtl
or
gs
add
jg
arpl
cld
fcompl
push
dec
jl
xchg
ss
pop
jp
cmc
in
pushf
dec
lret
loope
push
fwait
mov
rorl
jmp
nop
cmp
xor
adc
outsl
das
adc
in
cmp
dec
rcrl
xchg
sbb
inc
sbb
in
ds
cli
outsb
mov
out
dec
fs
bound
and
adc
sbb
mov
insl
push
jbe
adc
pop
mov
es
hlt
fwait
or
xor
shl
into
mov
push
incl
adc
jb
imul
add
and
out
int
xchg
push
mov
repnz
jecxz
xchg
ficoml
imul
sahf
rolb
sbb
add
cmp
lcall
dec
sahf
sbb
aas
jmp
out
sub
and
pusha
and
jecxz
fldcw
pop
adc
add
aas
inc
insl
adc
cmp
xchg
sub
adc
popa
imul
cmpsl
fidivs
adc
addr16
dec
rolb
mov
scas
mov
lock
mov
and
mov
fst
mov
sbb
mov
sub
adc
adc
push
test
or
jne
adc
sbb
push
add
lcall
std
in
fsubrl
pushf
into
jne
jle
sub
adc
inc
mov
addr16
cmp
mov
mov
push
insb
sub
add
fwait
rcl
imul
xor
xor
or
inc
mov
stc
cmc
cmp
inc
mov
pop
lret
or
insb
cmp
xchg
jge
jge
mov
mov
loop
xchg
push
jp
les
std
out
inc
inc
filds
stos
xchg
jle
mov
or
test
mov
faddl
stos
mov
xor
mov
xchg
stc
adc
fistpll
jl
aas
dec
pop
lds
repnz
push
out
leave
call
test
and
in
push
pop
xchg
cmpsb
pop
xchg
shll
fsubrp
lret
js
in
dec
inc
mov
jmp
mov
test
leave
arpl
mov
mov
mov
mov
adc
out
pop
lea
adc
dec
sub
cld
test
push
imul
push
cmpsb
sub
jl
dec
mov
int
ja
cmp
mov
out
cmc
jno
outsb
imul
movsb
scas
outsb
loop
mov
or
sbb
sahf
cli
sbb
ret
stc
int
sbb
imul
mov
inc
dec
and
jmp
xchg
xchg
leave
xchg
xchg
pop
mov
xchg
sti
shl
mov
fcoml
push
outsb
js
pop
pop
xor
sub
outsl
cs
cmova
mov
nop
ja
loopne
in
int
mov
inc
sub
xchg
xor
int3
cltd
cwtl
inc
out
dec
test
push
or
mov
xchg
test
in
mov
aas
in
pop
imul
pop
shlb
or
pushf
mov
lret
out
iret
lock
mov
jns
xor
inc
sub
add
mov
lds
xchg
ljmp
inc
scas
or
pop
leave
outsl
cmc
sti
adc
leave
xor
inc
stc
jge
xlat
scas
xchg
roll
mov
jne
adc
pushf
stos
ret
lret
leave
mov
add
and
aad
adc
adc
lret
stos
push
inc
mov
add
pop
and
divl
jnp
pop
xor
rcrb
js
scas
pop
fstpl
stc
aaa
jae
inc
andl
mov
ljmp
jno
sbb
adc
outsb
mov
and
sbb
popf
cltd
mov
dec
movsb
jle
sarw
loop
add
int
inc
mov
lcall
dec
mov
movsb
mov
out
xchg
movsl
cltd
cmp
aad
jnp
xchg
jns
scas
dec
jno
push
outsb
add
rcrb
mov
xchg
mov
pop
pop
pop
divl
or
sbb
aaa
loope
in
clc
mov
sub
test
or
inc
xchg
loope
xor
jb
int
sub
mov
cmp
push
aad
insb
adc
or
imull
incb
cli
test
add
arpl
jb
insb
mov
loopne
adc
jb
rorl
cld
sbb
pop
xor
popl
repnz
push
adc
cwtl
xchg
xchg
mov
in
cltd
cmp
enter
hlt
jns
out
push
and
fiaddl
cltd
sub
stos
subl
pop
mov
popf
jnp
jg
mov
enter
push
fwait
mov
sbb
fisttpll
adc
leave
add
in
test
test
mov
test
jo
mov
imul
int
sub
adc
daa
lea
js
and
mov
inc
xor
insb
shlb
jp
leave
push
lods
test
mov
pop
jbe
mov
cwtl
data16
jmp
push
into
cwtl
arpl
pop
ret
jecxz
push
jmp
jmp
or
pusha
fimuls
stos
jl
cmpsb
mov
out
dec
xchg
lods
pop
mov
roll
dec
xchg
fildll
cli
fcoml
pushw
fcmovnb
mov
pop
addr16
lcall
insl
xchg
jge
mov
outsb
pop
aam
movsl
cltd
inc
adc
xchg
adc
push
push
imul
loope
sub
lret
mov
mov
imul
fucomi
repnz
xor
lea
xchg
imul
mov
xchg
mov
cld
add
add
arpl
xchg
dec
aas
sub
lock
xchg
push
scas
add
inc
adc
mov
xor
sbb
sbb
push
sbb
incb
cmp
sbb
jno
pop
xor
mov
fnsave
mov
ss
push
les
jno
pop
dec
pop
aas
and
leave
stos
ljmp
xor
lods
outsb
push
pop
mov
add
mov
cmpsl
sub
mov
jae
adc
lds
cli
mov
dec
mov
fistps
lahf
add
stos
gs
push
xor
movd
clc
int
mov
pop
popa
lcall
scas
and
pushf
sahf
call
adc
push
shll
cld
mov
lea
push
movsl
mov
iret
mov
cmp
or
bound
cmp
fwait
aas
out
xor
pop
fisubrl
stc
sahf
insl
sub
je
sbb
xchg
xor
sbb
pop
mov
push
sub
jne
inc
popf
or
daa
xchg
or
sbb
jecxz
sbb
jle
in
mov
lds
cwtl
out
or
repnz
xor
xchg
std
dec
out
insl
mov
cmp
hlt
ja
sbb
lods
or
int
fs
mov
ss
rcr
lods
sahf
push
xchg
stos
dec
cmp
in
jno
push
insl
pop
in
out
bound
pop
dec
jmp
je
cmp
mov
adc
adc
adc
aaa
clc
call
jmp
icebp
das
pop
mov
cli
mov
js
xlat
mov
pop
xchg
rorb
out
or
mov
mov
inc
cmp
cmp
add
mov
adc
mov
pop
mov
mov
icebp
jmp
dec
rclb
pop
xchg
test
pushf
jge
mov
jno
jae
shrb
movsl
jmp
push
push
mov
xor
imul
in
pop
cwtl
push
xor
sub
add
lock
outsl
orb
loop
addb
pushw
cltd
pop
stos
cmp
sbb
pop
jbe
mov
adc
in
es
ljmp
pop
sub
aas
imul
push
jae
or
imul
mov
stos
scas
test
and
cld
xor
mov
dec
mov
push
xchg
xchg
cmc
mov
stc
shlb
mov
rcrb
std
ret
lods
or
cmpsb
fdivrl
sbb
mov
ja
xchg
data16
dec
mul
adc
andb
add
push
mov
or
pushf
cltd
xchg
xor
sti
fwait
adc
mov
inc
or
btr
nop
mov
add
hlt
xor
fcomi
jecxz
push
ss
fwait
sbb
lcall
jb
pop
pop
in
cs
dec
out
adc
lods
sbb
xchg
mov
sbb
xor
pushf
push
dec
adc
shrl
lretw
push
mov
mov
movsl
lds
mov
pop
test
and
loopne
xor
push
cld
mov
mov
out
mov
lock
pop
mov
stc
and
mov
sbb
push
les
cmp
mov
sub
andw
inc
xor
ja
mov
or
jnp
scas
and
pminub
mov
xor
sahf
push
rorb
mov
ljmp
pop
mov
lods
jno
jg
mov
js
jo
enter
int
sub
pop
xchg
out
xor
fabs
je
imul
fwait
or
pop
test
cmp
or
mov
les
fildll
mov
mov
inc
jge
jge
jecxz
add
sub
subl
lret
into
iret
mov
sarb
cmp
test
add
mov
xor
push
test
cli
jno
or
adc
sbbl
jnp
mov
mov
rcl
push
lret
call
imul
dec
dec
cmp
loopne
jmp
pop
outsb
add
bound
push
pop
cltd
std
cmc
lock
mov
test
pop
and
add
or
adc
aaa
or
or
pop
push
cltd
xor
cld
adc
sub
xor
rcl
xor
xor
inc
leave
scas
pop
lret
pop
popa
jno
adcl
in
andl
loope
aas
push
lahf
fildll
adc
add
out
or
jp
dec
dec
and
pop
adc
mov
jmp
sbb
shrl
jecxz
inc
into
icebp
ja
test
push
sub
mov
dec
push
pop
addr16
sub
loop
mov
lock
lock
and
xor
cmpsl
outsb
mov
nop
iret
bound
dec
out
push
loopne
movq
adc
cmp
adc
pushf
mov
insl
insb
pop
ss
jnp
dec
sahf
lret
dec
movsb
mov
repnz
xchg
and
dec
fisubrl
pop
mov
call
stc
xorb
setge
arpl
dec
repz
lock
test
outsb
push
mov
or
add
sbb
pop
cltd
cmp
pop
add
movsl
inc
fisttps
mov
popf
icebp
test
adc
cmp
pop
add
roll
cmpsb
lret
pop
je
add
adc
adc
clc
and
push
push
sbb
dec
fstps
in
arpl
cld
jp
push
sbb
clc
cltd
xor
xchg
add
nop
jae
mov
xchg
xchg
fstpl
int3
arpl
or
insl
icebp
pop
ret
push
mov
sbb
ret
mov
dec
pop
push
cld
xchg
stos
push
dec
sub
icebp
ret
jle
cltd
aam
frstor
mov
ja
lods
push
ud2
jge
in
scas
imul
mov
mov
xor
jne
sahf
in
mov
and
xor
push
rclb
add
aad
inc
aas
mov
cmpsl
xchg
cmp
out
out
mov
xor
xchg
push
ret
jge
push
gs
sbb
push
sub
dec
adc
jo
dec
and
sub
adc
and
or
mov
pop
pusha
jbe
jbe
mov
insl
push
popf
cli
rcr
sub
call
add
ret
divl
call
dec
or
pop
int3
xor
fists
lsl
int
std
xor
mov
sub
pop
inc
fstps
in
sbb
jl
fisttps
ja
enter
roll
subl
lcall
sbb
mov
sbb
jbe
push
inc
dec
repz
enter
das
jo
mov
enter
dec
sub
inc
aam
movsb
psubq
xchg
test
aaa
jmp
test
sub
or
out
mov
bnd
add
cmp
out
outsb
sbb
inc
pop
addr16
push
cltd
jo
cmp
cmpsl
iret
cltd
mov
pop
dec
sbb
xchg
mov
popa
cmp
popa
adc
xor
lahf
or
sbb
cmp
and
push
into
int
cmpsl
les
sbb
imul
insl
inc
iret
popa
jp
push
lahf
aam
js
test
push
jmp
xchg
mov
out
add
push
daa
and
xor
lahf
and
ds
mov
je
into
or
cmp
adc
mov
sbb
add
pushf
cmp
push
neg
fmul
and
addb
cmp
enter
adc
inc
xchg
fwait
jmp
sbb
test
push
xor
and
icebp
add
and
xchg
xor
adc
outsl
mov
mov
mov
cmc
pushf
test
cld
pop
fstpl
je
dec
loope
add
push
mov
mov
push
cltd
xlat
pop
fistps
fmull
cwtl
dec
adc
jnp
test
sbb
call
dec
cmpsl
inc
shl
aas
sub
pop
mov
push
pop
jb
or
cmc
xor
add
lahf
pop
repz
shrb
pop
cltd
ficoml
fsubrs
adc
cmp
jnp
stos
sub
shrl
lods
adc
or
jb
inc
test
icebp
dec
add
loopne
or
fsubl
push
icebp
fstl
mov
inc
pop
mov
inc
inc
sub
test
in
gs
fisubs
or
mov
popa
insb
js
or
cwtl
repnz
dec
pop
pop
jae
cmp
insl
xchg
sub
mov
or
inc
hlt
pop
lahf
test
pop
mov
test
aas
push
jecxz
scas
enter
push
cmpsl
pop
inc
sbb
repnz
enter
adc
subl
jne
xor
xchg
filds
sub
add
lds
test
mov
std
sub
out
mov
push
fldcw
popa
add
xchg
fstpt
pop
loopne
mov
popa
mov
into
stc
das
cmp
jo
cs
mov
jb
sub
push
sub
mov
push
das
mov
jne
je
loope
adc
jne
mov
std
pop
jg
ret
or
cmc
dec
mov
in
fnstsw
dec
or
aam
das
pusha
mov
mov
pushf
push
sub
dec
fsubs
xchg
pop
sub
jmpw
xchg
test
movb
addl
mov
ds
dec
mov
bound
adc
stos
cmpsb
cli
cmp
mov
mov
pop
daa
jae
xchg
xchg
movsl
add
or
into
shl
mov
xchg
cmp
inc
or
xor
xor
xor
add
dec
or
add
fs
push
mov
pop
or
stos
mov
or
cmpl
sub
jle
inc
ret
sub
mov
sub
pop
inc
pop
inc
test
mov
cmp
jbe
xchg
mov
nop
scas
cltd
sub
loope
xor
pop
lcall
dec
jecxz
int3
leave
lcall
sbb
ret
xchg
xchg
adcb
mov
cmc
and
sbb
int3
insl
mov
aaa
mov
cmp
push
scas
sahf
pop
and
dec
push
stos
cmp
call
push
clc
rclb
test
sbb
pop
and
pop
push
repnz
lret
inc
xor
insl
pop
sub
mov
into
or
xchg
jne
decb
inc
sub
ljmp
inc
andl
mov
adc
pop
push
sti
jns
dec
dec
xchg
and
stos
arpl
or
cmp
mov
push
jle
inc
fidivl
dec
sarl
mov
or
das
sbb
out
test
add
xchg
mov
test
sub
push
lahf
or
ret
and
mov
call
dec
fs
add
ret
jp
jg
add
xchg
push
pushf
sub
fistps
clc
lret
add
adc
mov
lds
repz
mov
jmp
sub
add
jbe
pop
test
pop
popa
xchg
pop
adc
xchg
lods
inc
and
and
loop
outsb
bound
in
popf
cmpsl
in
add
js
sarl
jo
scas
in
add
mov
stos
inc
xor
cmp
in
insb
xchg
mov
xor
call
addl
je
mov
fistl
cld
frstor
sub
mov
subb
imul
pop
jbe
ds
dec
loopne
mov
or
lock
scas
movsl
rclb
sbb
push
jo
xor
aam
and
mov
cltd
stos
mov
in
cmc
lock
cmp
pop
sbb
fldl
pop
jbe
xchg
ficompl
dec
cmp
stos
lock
repz
inc
sub
sahf
ret
lods
jle
cvtps2pd
mov
or
out
insb
pop
or
pop
jb
aam
test
push
lods
inc
scas
push
mov
sbb
out
lea
mov
cwtl
dec
and
or
idivb
or
addr16
int
and
lods
inc
mov
loopne
ja
xor
mov
stos
push
aaa
pop
pop
push
icebp
sub
std
and
xchg
test
fimuls
call
movsl
sbbb
inc
adc
jecxz
and
dec
and
or
mov
idivb
movsb
repz
fs
xor
add
out
into
adc
idiv
jge
or
in
movsl
inc
flds
or
test
mov
pop
push
movb
out
int
sbb
rcl
rclb
push
gs
mov
push
adc
nopl
mov
insl
or
rolb
mov
adc
jp
aam
test
pop
cs
out
aaa
sahf
xchg
jge
nop
loop
rcr
adc
and
test
aas
into
in
xor
xchg
sub
or
cmp
jnp
ljmp
sahf
mov
mov
out
lods
sub
xor
dec
sbb
or
push
jno
je
sbb
push
cmp
pushf
ljmp
inc
nop
int3
popf
loopne
enter
andb
dec
lcall
lcall
test
or
cmp
in
jmp
push
inc
test
fisttps
jge
movsl
repz
jmp
and
sub
lret
fmuls
sbb
inc
adc
cmc
dec
jae
sbb
lea
push
sbb
scas
decb
jmp
stc
sub
sbb
or
xor
mov
or
jns
cmp
stos
imul
mov
cli
data16
mov
xchg
bnd
xchg
xchg
jb
aas
mov
mov
pop
outsl
fwait
out
and
xchg
addr16
inc
and
roll
jb
mov
xchg
xchg
pop
cmpsb
pop
inc
arpl
daa
mov
cmp
jmp
and
fwait
ret
dec
lock
jnp
fmuls
or
push
ljmp
inc
mov
xor
ror
fcoml
sbb
out
daa
adc
int
es
xchg
jmp
add
and
cmpsl
inc
sbbb
movsb
or
push
pusha
dec
ja
insb
add
fisttps
mov
dec
subl
xchg
leave
nop
mov
int3
inc
push
jge
xchg
in
sti
lret
aas
jnp
iret
cli
hlt
stos
pop
es
push
and
sahf
and
mov
and
mov
mull
push
dec
mov
call
mov
aaa
mov
xor
fldcw
outsl
in
mov
cmc
lcall
into
jnp
scas
pop
stc
testb
jmp
sub
int
movsb
xor
out
lock
or
lret
mov
inc
add
hlt
out
mov
or
inc
hlt
mov
add
pushf
jl
in
xor
fwait
xor
mov
repz
into
pop
push
mov
leave
jp
out
and
lcall
cld
sbb
xchg
push
and
stos
xor
repnz
cmp
je
xchg
lods
loopnew
add
stc
into
lahf
adc
in
inc
sub
shll
cmpsl
mov
cmc
adc
inc
pop
cwtl
mov
mov
cmpsl
xchg
jg
sbb
in
cmp
xor
cmp
xchg
jmp
popf
loopne
test
xchg
outsl
lahf
int
mov
das
jmp
add
cwtl
in
dec
xchg
xor
mov
aad
int3
inc
xchg
call
mov
xorb
mov
lods
or
push
imul
mov
cmp
inc
in
xchg
push
lock
cltd
enter
or
dec
sbb
and
push
stc
ret
stos
cltd
mov
sbb
mov
insb
lds
jmp
outsb
incb
inc
mov
fwait
mov
xor
pop
cmp
ret
xor
inc
lock
lret
xlat
sahf
cmp
and
xchg
adc
daa
bnd
aad
je
cmp
es
pop
cltd
jo
cld
movsl
sbb
std
cmc
fcoml
ljmp
cwtl
jno
xchg
loope
or
or
cmp
sbb
addr16
lret
ror
push
or
mov
add
add
hlt
push
push
mov
inc
lret
mov
xor
pop
push
mov
cli
outsb
popf
xchg
or
jge
js
inc
cmp
aad
aad
dec
stc
dec
sub
push
std
mov
add
jne
nop
loop,pt
xor
mov
and
lret
inc
je
jne
adc
movsl
mov
ljmp
inc
hlt
xor
cmp
sub
push
xorb
arpl
jmp
or
cmp
inc
mov
jns
cmp
pop
and
push
les
pcmpeqd
pop
lock
imul
js
pop
pop
or
imul
push
aam
dec
adc
dec
push
clc
ret
pushf
ret
fwait
hlt
sub
and
inc
sub
test
fcomps
pop
jmp
cmovs
xchg
repnz
fidivrs
test
mov
cmpsl
cmp
or
sub
out
jnp
aaa
lret
test
mov
xchg
xchg
loopne
adc
cmp
add
movq
ljmp
loopne
inc
loopne
sub
mov
pop
jmp
enter
fbstp
xchg
or
pop
adc
or
int
push
rcrl
pop
data16
in
xor
add
jg
push
lret
inc
nop
rep
jne
in
andl
adc
pop
or
xor
test
mov
cmp
pop
or
out
cs
shll
xchg
mov
mov
pop
add
cli
cltd
imul
mov
xchg
xor
adc
imulb
aam
pop
sub
sbb
push
shlb
and
mov
int3
pop
push
nop
faddp
lods
fimull
div
pop
out
ljmp
repz
jo
xlat
int
push
das
push
std
pop
das
aam
sbb
pop
push
sbb
and
rep
insb
xchg
aam
stc
jns
icebp
into
push
rcl
push
ss
jg
jne
adc
xchg
fadds
addr16
scas
rorb
loopne
fimull
inc
inc
jle
stc
rcll
or
ljmp
sbbl
adc
jle
addr16
mov
mov
hlt
pop
mov
int3
jae
daa
xchg
jg
push
jmp
xchg
or
add
jge
sbb
xor
jb
cmp
out
add
test
or
xchg
and
xor
jmp
inc
mov
cmp
mov
in
aad
mov
lahf
xor
xchg
xchg
out
loope
lds
or
in
mul
sub
scas
mov
cmp
xchg
jnp
test
push
test
sub
xor
mov
mov
test
fcompl
mov
inc
push
shrb
adc
mov
test
mov
sbb
mov
aas
cmp
push
std
addr16
arpl
int3
out
popf
mov
call
xlat
mov
xor
test
xchg
pushf
pop
cld
scas
mov
mov
push
fs
repnz
leave
enter
adc
dec
test
jg
iret
scas
mov
xor
inc
mov
jecxz
push
adc
imul
pop
lret
pop
and
daa
cld
adc
stc
out
xor
jle
push
inc
xchg
fadds
xchg
lahf
and
addl
les
pop
sub
cltd
loop
dec
cmc
push
popa
jecxz
sahf
in
in
pop
pop
sar
shr
in
mov
ror
cs
pop
jmp
cwtl
push
mov
outsb
add
les
xchg
test
aaa
jge
jnp
mov
pop
mov
fstp
jle
cmp
and
pop
or
daa
icebp
xlat
into
inc
int3
sar
mov
rcrl
enter
push
insl
in
add
aam
adcl
adc
push
mov
adc
push
cmp
fdivrl
cmp
push
or
sbb
jecxz
xchg
in
mov
sbb
sbb
or
fbstp
shlb
cmpsl
mov
sub
sub
cmpb
pop
bound
sbb
inc
push
int
fcom
arpl
sbb
jbe
mov
jle
aad
sbb
outsb
scas
mov
mov
aaa
sub
xchg
outsb
xorl
pop
or
xor
push
mov
cs
loope
fwait
lods
add
xor
lcall
cli
jne
push
sbb
insl
ror
xorl
dec
jp
push
cmp
sti
cmp
scas
ss
cmp
insl
push
andb
cs
xchg
test
cmp
pop
or
in
or
mov
pushf
mov
add
jl
fcmovnbe
out
sbb
mov
mov
pop
jno
fst
sub
xchg
mov
ret
out
ds
aam
push
daa
int3
and
jae
ljmp
sub
je
adc
sbb
shl
sbbl
rcl
lahf
loopne
mov
ror
jp
lret
cwtl
push
add
xor
lret
fsubs
pop
inc
mov
adc
push
xchg
push
pop
push
ret
xchg
hlt
hlt
mov
stc
and
cli
jno
and
bound
outsl
and
aaa
roll
jnp
mov
cltd
xchg
mov
fdivrs
xor
xchg
jecxz
and
or
shrb
push
scas
jnp
je
scas
sbb
daa
sub
mov
inc
sub
insl
and
add
pop
and
xchg
adcl
loop
hlt
inc
aam
inc
das
insb
cs
scas
loope
shrb
pop
pop
add
pop
roll
out
or
adc
mov
mov
xor
fisttpll
jl
nop
into
in
cmp
fwait
pop
loopne
lods
mov
mov
jmp
mov
cmc
repz
xor
add
cmp
inc
push
jo
test
adc
lock
dec
pop
add
popa
cmp
jecxz
xchg
adc
mov
testl
ret
lock
mov
dec
xchg
xor
stc
sub
lcall
jmp
addl
dec
sub
jb
xor
jecxz
pop
call
add
fimull
sahf
inc
mov
aam
xchg
in
es
mov
jne
sti
es
xchg
das
arpl
stos
in
push
jo
xchg
cld
mov
stc
mov
cmp
stos
dec
push
adc
inc
pop
data16
shll
add
adc
mov
shrb
das
adc
or
std
mov
xchg
roll
xchg
jp
lods
hlt
sbb
add
ss
dec
dec
dec
sbb
or
scas
sbb
inc
mov
popf
mov
pop
inc
test
mov
dec
pop
add
lods
sbb
add
dec
fmul
scas
daa
or
mov
test
inc
sbb
hlt
sti
adc
sbb
and
nop
rol
pop
xchg
and
sti
xor
push
dec
pop
xlat
ret
popf
fmull
cmc
add
aad
or
insb
divb
push
aaa
rol
adc
mov
and
aad
and
int3
jecxz
cmp
jb
xchg
push
mov
lds
mov
sbbb
ret
and
loopne
out
cmp
xor
cmc
and
xchg
dec
xchg
or
daa
rorb
nop
or
mov
in
jae
ficomps
mov
xor
mov
xor
push
inc
mov
cmc
data16
clc
xor
stos
add
inc
mov
jnp
xor
test
sbb
adcb
aaa
popf
sbb
adc
xchg
pusha
pushf
cmc
jnp
inc
mov
add
aas
mov
ret
cltd
gs
lods
push
sbb
in
outsb
or
mov
fldenv
shrb
mov
pop
mov
mov
adc
popa
inc
add
dec
and
or
cmpsl
movsb
mov
push
movl
xchg
xor
shrb
js
pop
jo
dec
sbb
ds
fmul
outsl
adc
stos
cmp
jae
andb
ss
arpl
xchg
or
push
daa
mov
mov
mov
sbb
out
pop
mov
out
cmp
outsl
pop
xchg
fistl
js
lcall
jae
shl
mov
and
std
out
xor
add
push
enter
push
push
jle
cmp
mov
imul
jge
sbb
push
jge
and
adc
add
add
stos
sbb
pop
push
sbb
fs
cmp
and
mov
int
adc
xor
mov
pop
movsb
push
dec
push
jns
mov
mov
fsub
dec
push
jge
imul
test
insl
pop
jns
sub
pusha
and
jae
push
cmpsb
lock
and
cmp
loope
ja
jmp
inc
push
test
movsl
aad
out
jmp
in
aas
jmp
dec
xchg
mov
pushf
je
jnp
jge
pop
lahf
xlat
fwait
loope
xchg
jo
pop
aad
or
loop
or
icebp
add
mov
fnsave
lea
ret
jne
popa
mov
pop
lock
mov
mov
xchg
fldenv
jns
add
fstpt
pop
push
pusha
sub
mov
insl
sbb
and
adc
jno
int
daa
sub
or
xor
xchg
fs
or
jg
mov
lock
mov
inc
loopne,pt
fdivrs
div
stos
cmp
test
xchg
jbe
outsl
fistpll
jae
sbb
stc
push
jmp
adc
test
out
movsb
in
test
cmp
test
fwait
orl
mov
pop
pop
or
add
stc
mov
jge
sbb
scas
pop
lods
repz
push
lcall
pushf
pop
aad
adc
addl
pop
lahf
loopne
adc
daa
cmp
dec
lds
iret
mov
decl
jae
pop
repnz
enter
stos
jne
mov
in
test
sti
jge
mov
xchg
sti
pop
fnstsw
pop
push
inc
idivl
pop
dec
push
inc
out
addr16
push
mov
fimuls
fcomps
jg
sub
sbb
das
xor
xlat
mov
stos
cli
ret
subl
leave
push
dec
sub
sub
inc
repnz
aam
stos
cmp
mov
sti
sub
cld
pop
outsl
mov
mov
cwtl
jp
ljmp
jle
movsl
cmpsb
pop
jno
sub
push
cmp
and
popa
cmpsb
and
das
or
repz
or
push
mov
adc
aas
insb
or
insl
stos
sub
jmp
push
xchg
aaa
jnp
test
pop
orl
mov
fnsave
out
jmp
push
aaa
push
repz
cli
sub
in
idivb
pushf
sbb
orl
mov
inc
nop
lahf
or
movsl
inc
cmpsb
repnz
shr
push
stos
dec
xor
jbe
xor
mov
adc
fwait
fwait
sub
mov
xor
mov
sbb
filds
fimull
fdivrl
adc
mov
inc
stos
dec
mov
sub
popa
das
cmc
jnp
xorb
mov
mov
xchg
and
and
mov
repnz
sbb
fnstcw
cmpsl
xorb
push
fildl
push
nop
sub
lods
int3
mov
insb
inc
fsubrs
outsl
repz
mov
mov
loope
rclb
push
xor
fidivrl
fnsave
cmp
dec
xor
inc
sbb
lahf
cli
fcomps
inc
inc
adc
mov
mov
push
dec
add
sub
iret
lock
pop
mov
js
fnstcw
outsl
aam
or
out
aad
or
adc
add
mov
repnz
cmc
adc
push
sub
int3
dec
xchg
push
adc
add
orb
inc
xchg
das
adc
fwait
inc
xor
movsl
cmp
mov
xlat
lods
sub
hlt
shrl
xchg
int3
pop
sbb
dec
insl
mov
data16
jae
xlat
mov
push
xchg
hlt
out
inc
ja
push
aad
pop
fs
repnz
fcmovnb
pop
pop
gs
or
popf
add
cmpsb
test
test
xor
addr16
cmp
out
cli
pop
inc
add
push
or
pop
sahf
shr
shll
data16
pushf
test
hlt
sbb
jp
fdivs
cltd
test
inc
mov
inc
push
jecxz
adc
stos
arpl
jmp
out
jp
iret
shlb
es
sti
orl
lret
inc
sub
fwait
lret
les
dec
xchg
filds
inc
flds
dec
fcompl
cmc
adc
push
pushf
dec
ret
mov
dec
lea
mov
sbb
pop
sub
sub
ja,pn
sahf
std
push
xchg
fisubl
int3
or
rcrb
cli
test
cld
loop
loop
jnp
into
test
fcompl
sub
push
jge
dec
mov
add
call
pop
inc
dec
pop
mov
jg
loopne
cltd
hlt
pop
cmp
sub
add
jae
cmp
fidivrs
jle
stc
xor
idivb
shlb
dec
fwait
inc
dec
inc
das
pop
xchg
mov
xchg
mov
aas
out
lock
push
push
rorb
loope
jne
mov
scas
sbb
inc
test
ret
mov
adc
ljmp
ret
nop
stos
sub
out
dec
lcall
push
xchg
mov
clc
mov
or
cltd
adc
insb
in
fmuls
scas
clc
pop
mov
call
mov
cmp
mov
in
mov
sbb
and
pop
pop
pop
xchg
jnp
xchg
aad
xlat
add
xor
mov
lret
mov
pop
xchg
ret
jbe
leave
out
pop
dec
add
jge
popa
fcmove
push
xchg
jns
xchg
adc
adc
div
or
xor
inc
out
mov
mov
call
aas
into
movsb
stc
mov
lea
cmp
mov
fs
test
xchg
add
fld
cmp
rcll
sbb
jb
sbb
test
lods
xchg
jnp
aas
testl
cmpsb
sub
adc
repnz
xor
xchg
stos
loop
cmp
popa
andb
mov
rol
inc
push
and
mov
insl
lods
inc
and
pop
dec
jle
mov
xchg
js
lret
ja
pushf
nop
cmp
mov
out
fsub
jmp
jbe
pop
popa
fwait
rcrb
popa
jle
rcrb
daa
mov
mov
mov
mov
fiadds
push
outsb
or
ret
mov
loop
mov
xchg
cmp
push
ret
lahf
inc
ss
sbb
in
arpl
xor
js
and
mov
fs
push
push
jle
js
add
stos
xchg
int
pop
xchg
and
or
cli
out
cmp
push
cmp
mov
cmp
int
pop
sti
ss
lds
jg
sahf
aas
data16
stos
hlt
pop
movsb
pop
mov
mov
mov
mov
mov
pushf
sub
jle
xchg
inc
in
pop
fildl
mov
insl
xchg
mov
test
mov
lods
dec
out
sahf
inc
sub
inc
adc
addr16
in
mov
test
fld
std
aam
add
repz
pop
pop
out
cmp
arpl
stos
inc
addr16
mov
inc
pop
psubd
cmp
sbbb
add
jns
pop
mov
and
ja
fisttpll
dec
jmp
jle
je
sbb
pushf
dec
inc
mov
rcl
jae
out
mov
popa
fnstenv
fistpl
fisttpll
rclb
fnstsw
pushf
inc
dec
dec
mov
mov
clc
jmp
loopne
shlb
loopne
stos
xchg
roll
stos
push
shlb
push
jmp
pop
mov
xchg
xchg
mov
or
mov
insl
repnz
pop
daa
mov
jmp
mov
dec
shl
fbstp
daa
dec
mov
sbb
call
and
cmp
cmp
testl
sahf
sbb
sbb
repnz
adc
inc
sbb
aaa
sbb
jmp
mov
aas
xor
leave
out
popf
push
add
lods
inc
or
fstp
lcall
mov
lfs
push
and
or
mov
clc
sbb
lret
xchg
pop
mov
add
data16
fidivrl
movsb
inc
mov
push
rcrb
mov
mov
or
mov
and
sub
and
inc
pop
mov
sbb
in
scas
dec
lods
xchg
mov
mov
push
pop
mov
outsb
popf
mov
shll
and
mov
loop
mov
mov
jns
inc
push
ds
sub
mov
mov
ja
leave
cmp
xor
loop
inc
dec
mov
jae
jo
inc
enter
scas
sarl
pop
inc
add
ss
les
inc
aad
jbe
jg
xchg
clc
mov
imul
jb
adc
pop
sbb
mulb
inc
jbe
test
fsave
je
hlt
cmp
addr16
dec
jecxz
dec
insl
in
stos
jl
sub
mov
int
mov
dec
push
jp
lret
dec
mov
je
in
fsubs
dec
sbb
test
js
jb
lds
xor
pop
inc
or
adc
and
rorl
pop
mov
and
pop
push
scas
jne
add
jns
mov
mov
xchg
mov
xchg
jmp
pop
pushf
jo
shlb
xchg
inc
mov
jmp
add
ret
lcall
idivb
lods
cmp
clc
into
xchg
push
fistpl
nop
pop
xlat
xchg
pop
sub
cmp
jl
sub
dec
lods
xchg
push
testb
xchg
mov
mov
xorb
or
outsl
push
out
fs
cld
test
ret
inc
sbb
cmp
adc
jae
into
or
push
dec
and
dec
cmp
jo
push
fadds
push
inc
std
and
out
mov
cmc
adc
popa
ds
dec
xchg
les
out
cmpsl
gs
arpl
mov
pushf
out
xchg
stos
pop
xor
repz
xchg
inc
xor
jne
cmpsb
pop
jmp
add
sub
dec
and
jge
mov
aam
in
jle
mov
cwtl
out
pop
xchg
mov
sbb
ret
mov
sbb
or
or
mov
es
das
lahf
jb
xchg
mov
fadds
popf
insl
ss
je
dec
or
shrl
in
ficompl
push
imul
rorb
je
ja
xchg
xor
sub
inc
aad
mov
lret
cltd
pop
dec
push
rcll
inc
cltd
add
mov
or
jne
pop
adc
mov
stc
shr
sub
clc
cs
out
mov
mov
mov
mov
out
sub
mov
nop
repz
xor
bound
and
mov
and
sub
repnz
pop
lahf
shl
mov
adc
inc
push
xchg
mov
imulb
sub
push
inc
jno
andb
rorl
pop
push
sub
mov
cli
mov
aaa
mov
dec
mov
dec
lret
lret
in
int3
sub
jae
mov
sub
out
pop
jle
push
pop
adc
stc
push
sbb
or
int3
stos
dec
cli
fisttpll
lea
call
aaa
xchg
mov
dec
fstl
dec
jno
gs
inc
lods
add
sahf
mov
dec
and
or
lahf
jmp
jmp
push
adc
xchg
jecxz
test
xor
or
sbb
call
mov
jb
jp
xor
in
cmp
sbb
int
ficompl
loopne
loop
jg
jne
xchg
cmpsl
jg
xchg
push
mov
cli
aaa
mov
mov
sahf
fyl2x
outsl
jge
fnsave
ret
les
ljmp
jo
and
or
enter
add
ljmp
int3
ja
bound
and
out
adc
scas
aad
xchg
dec
lahf
xchg
xor
addr16
dec
mov
pusha
aad
or
xor
add
loope
and
in
pop
out
stos
insl
fs
mov
enter
sbb
movsb
sarb
rorl
sti
pop
jns
push
cwtl
insb
clc
and
ja
dec
daa
jp
int3
scas
add
inc
in
sysenter
pop
pop
sub
pop
enter
dec
lcall
pop
fcomp
fcmovnb
sbb
pop
jbe
and
and
push
mov
jae
sti
ret
mov
clc
stos
mov
mov
outsl
mov
lret
rorb
adc
clc
mov
xchg
lahf
sub
out
call
pop
xlat
push
mov
push
fldenv
pop
in
loop
addl
cmp
dec
xlat
mov
daa
insb
push
stc
hlt
movsl
leave
dec
mov
lcall
inc
loope
sub
lret
add
mov
mov
adc
push
pushf
pusha
fbld
dec
loope
and
mov
icebp
jg
push
lea
fnsave
les
je
je
pop
push
jp
ljmp
int3
inc
inc
fisubrs
dec
ret
lods
xchg
or
in
jnp
cmp
mov
xor
je
push
stos
jae
int
in
jno
mov
and
xor
xor
pop
xchg
jnp
or
sti
dec
imul
in
pop
not
jbe
test
push
mov
in
add
push
add
pop
scas
call
mov
icebp
pusha
push
mov
filds
cmp
fists
jge
pop
and
mov
sti
xchg
js
xor
fiaddl
add
jg
arpl
nop
pop
push
lahf
cmp
aam
popf
cltd
jmp
sbb
push
mov
mov
mov
cwtl
sub
jno
shlb
xorb
ja
pop
in
clc
mov
mov
lock
or
xchg
cld
test
jb
daa
cmpsl
shrl
inc
dec
mov
subl
cwtl
das
imulb
lea
pop
imul
inc
scas
mov
mov
shrl
sti
mov
lahf
fldl
outsb
and
shr
roll
cs
sub
enter
xor
push
rorl
cmp
scas
cmpsb
xchg
fdivs
rclb
lret
mov
aas
lahf
adcb
frstor
pusha
dec
and
aas
and
addl
pop
mov
adc
sub
arpl
mov
mov
mov
jle
stos
mov
test
pop
pop
push
loop
mov
jnp
shlb
push
and
lret
enter
mov
dec
cli
xchg
aam
js
jl
sbb
jecxz
ss
mov
dec
aaa
shll
xlat
sbb
add
sub
stos
cmc
les
cmp
out
mov
aam
jle
test
in
adc
dec
jp
push
sbb
fstpt
addr16
stos
mov
mov
ret
jo
addr16
test
clc
loop
push
mov
jg
mov
push
mov
lods
leave
sahf
and
jle
lods
insl
rep
test
pop
sbb
xchg
xor
adc
adc
sub
loope
cmpsb
inc
jae
mov
mov
mov
add
cmp
shlb
test
lret
in
lcall
jl
test
outsl
jne
cltd
push
imul
dec
mov
jg
mov
movsl
stos
pop
aam
sarl
lods
mov
aaa
jbe
push
or
jns
pop
dec
arpl
lret
inc
aaa
sub
pop
shlb
mov
mov
sub
lret
pop
jnp
out
out
fdivl
add
inc
loope
addr16
or
je
scas
add
aaa
fidivrl
inc
xchg
sub
testb
pushf
inc
push
adc
rcr
out
in
pop
mov
jo
les
mov
scas
cli
jecxz
add
ret
ror
andb
jno
mov
xchg
lahf
out
jnp
jae
or
mov
inc
loop
loop
sub
adc
adc
repnz
and
cmp
adc
dec
das
dec
push
fs
mov
mov
push
xorl
or
dec
popf
jne
fnsave
jecxz
hlt
pusha
movsl
adc
outsl
push
xor
test
fdivrl
and
xchg
mov
push
xor
mov
test
mov
jl
out
vmulss
push
mov
push
or
inc
add
lods
push
jmp
xor
inc
lock
popf
sub
mov
nop
and
stos
or
or
inc
adc
incb
aas
ret
mov
in
push
stc
push
mov
adc
mov
inc
push
xor
mov
xlat
loope
adc
mov
fidivs
dec
xchg
jg
add
sbb
cmc
dec
push
jne
jbe
test
jle
pop
repnz
mov
bound
mov
test
push
inc
repz
jle
mov
or
jl
mov
gs
xchg
in
ror
aad
outsl
arpl
ficompl
fcompl
dec
adc
lock
xorl
dec
and
pop
mov
cmp
inc
incb
jmp
sub
adc
push
lahf
hlt
push
in
popa
std
or
sbb
lds
mov
cmp
cmpsb
out
xchg
data16
aas
sbb
test
jns
sbb
inc
les
xor
adc
test
cltd
mov
lods
cmp
xor
mov
fimuls
out
cmp
mov
jl
aaa
push
sub
nop
inc
xor
or
jmp
sub
shrl
jp
ljmp
inc
insb
mov
xchg
cmp
stos
cld
rcll
out
hlt
mov
cmc
add
sbb
and
dec
push
jbe
sub
nop
dec
orl
jmp
popf
test
pop
jmp
aaa
mov
mov
aam
push
and
fstpt
sti
mov
gs
and
xor
pop
sub
pop
in
mov
rcr
mov
mov
add
in
inc
loopne
sub
aad
js
mov
mov
lods
and
jae
pusha
xor
pop
mov
adc
dec
push
push
xor
fstpt
push
xor
insb
fs
adc
clc
push
cmpsb
outsb
mov
mov
cmpsl
nop
mov
mov
aam
mov
aam
sbb
xor
jns
mov
add
cmp
xlat
loop
andb
dec
jge
daa
out
push
jb
push
outsb
loope
test
xor
cmp
dec
popa
jno
aaa
lret
lret
testb
popa
cltd
movlps
in
or
lds
scas
mov
daa
and
add
scas
cmp
aaa
sbb
push
dec
sarl
je
push
mov
mov
mov
xchg
mov
sub
inc
imul
dec
fsubrl
outsl
out
cmpsl
inc
aam
stos
fdivs
std
arpl
push
mov
jecxz
dec
push
shl
mov
lds
into
mov
in
les
jbe
filds
xchg
xorl
push
xor
mov
push
jg
xor
jmp
dec
inc
dec
out
xor
jmp
fisubl
jo
movsb
adc
stc
out
sbb
test
nop
jmp
adc
js
inc
dec
gs
ljmp
outsb
scas
mov
xor
fnsave
push
pop
das
cs
movsb
dec
aam
repnz
movsl
cli
or
xor
sub
cmp
sub
dec
jns
cwtl
sahf
dec
ljmp
idivl
jle
jne
xchg
pop
in
leave
xchg
jmpw
nop
adc
imul
xchg
test
inc
jmp
adc
xor
outsl
xchg
flds
loope
bound
nop
adc
loop
mov
sti
into
je
loop
test
inc
mov
popa
jns
cltd
leave
lods
pop
in
xor
mov
dec
inc
and
jp
out
or
outsl
pop
sbb
jp
pop
int
fs
mov
inc
push
fwait
ja
movsl
inc
hlt
out
adc
aam
loop
lret
cmp
dec
outsl
cmp
cmp
or
mov
ret
addr16
int3
int
test
cmp
or
xor
pop
das
and
stc
xor
stos
movsl
xor
lahf
sbb
flds
jecxz
fwait
cmpsb
xor
fsubrs
out
push
movsb
adc
fistpll
clc
jecxz
leave
loope
movl
dec
mov
dec
jl
xorb
scas
fsub
mov
xchg
ljmp
mov
cmp
and
mov
mov
inc
in
lret
cmp
sub
cmpsb
sahf
mull
out
in
push
xor
xchg
add
aam
push
insb
sarb
push
mov
inc
dec
pop
inc
fsubr
sbbb
inc
ds
repnz
push
addr16
mov
cmp
call
js
inc
pop
aas
loope
cmpsb
lcall
or
imull
loop
cwtl
imul
pop
jae
flds
cs
or
in
fidivs
outsl
sbb
xchg
xor
add
stos
jb
imul
cmp
icebp
xor
mov
xchg
inc
cmpsl
orl
std
out
mov
and
add
subl
out
sbb
cmp
pop
ret
inc
jmp
bound
out
or
or
dec
xchg
cmpsl
cmpsl
push
daa
mov
repnz
pop
jo
dec
jae
stos
push
jp
mov
jo
jbe
int3
test
sbb
inc
ret
dec
lea
mov
ret
adcl
js,pn
scas
popa
jnp
sub
movsl
in
test
ror
movb
sbb
cmp
arpl
sbb
inc
scas
mov
mov
scas
pop
jge
icebp
subb
lret
mov
test
pop
or
push
adc
in
xchg
or
pop
mulb
das
das
les
mov
popf
scas
inc
push
out
in
leave
push
mov
ds
add
fsub
xor
arpl
cmc
sbb
mov
call
lds
test
mov
outsl
inc
int
pop
sar
outsb
out
ljmp
sub
mov
lods
movsl
mov
push
mov
ljmp
pop
add
and
jle
mov
test
fsubrl
lret
pop
jmp
mov
call
xchg
out
std
jne
data16
cmp
sarb
repnz
lret
add
sbb
xor
cmpsl
nop
ret
mov
div
jge
cmp
mov
add
mov
dec
and
sbb
cmpsl
add
pop
out
jle
loope
aaa
in
pop
movsb
push
mov
jo
push
addl
cmpl
push
push
lahf
mov
ret
push
inc
addr16
adc
cs
mov
outsb
das
incl
outsb
mov
add
xchg
or
add
xor
cmp
xchg
lods
daa
ja
cs
xor
mov
sbb
cmp
jnp
or
mov
dec
int3
imul
push
jb
mov
pop
or
pusha
or
cmp
rcl
sahf
pusha
lods
sbb
and
aam
imul
in
stos
clc
mov
mov
lcall
dec
cmp
mov
shl
cmpsb
push
cltd
nop
xchg
jmp
cmpsl
arpl
sbb
or
cmp
cmp
out
js
mov
rclb
sahf
std
mov
hlt
std
sbb
add
mov
mov
push
xor
shrb
mov
jno
fidivrl
lret
mov
jo
sti
das
pop
push
add
push
push
pop
pop
cmp
lea
sbb
inc
into
inc
stos
rcrl
shl
in
xchg
ja
popa
movsl
ret
adc
mov
add
popa
dec
icebp
xlat
pop
or
dec
pop
ss
adc
cltd
xlat
lock
clc
and
movsl
sub
xchg
insb
cmp
cmp
or
jbe
pop
outsb
sahf
jle
and
decb
add
mov
xor
inc
push
push
and
sbb
in
stc
adc
aam
movsl
cmp
out
sti
or
jb
mov
nop
lock
inc
test
push
test
adc
pushw
bound
xor
lods
popf
insb
stos
cmp
pop
xlat
lahf
ret
andb
imul
or
dec
dec
cmp
mov
cmpsl
hlt
pushf
jnp
or
in
sub
xchg
sbb
ror
cld
popa
ds
pop
out
aam
push
and
add
mov
inc
scas
add
push
jle
fsubl
dec
adc
inc
ffree
loope
xlat
cmp
push
imul
unpcklps
neg
jecxz
fwait
lcall
sahf
pop
cmp
mov
js
in
and
mov
push
cmp
xchg
sbb
in
xchg
stos
fisubrs
fbld
fistpl
and
enter
cmp
adcb
addr16
xchg
stos
lahf
stos
xchg
lahf
ljmp
xchg
sbb
xchg
aam
insb
adc
and
sbb
pop
xchg
sub
push
movsl
push
inc
ljmp
cmp
sub
aas
std
mov
cmp
push
pushf
adc
fdivrl
idiv
mov
jmp
lods
sbb
or
clc
fsubrl
int3
pop
xchg
divb
cmp
subps
cmp
ror
jmp
mov
pusha
xor
sbb
repz
sub
jne
fcompl
lea
std
test
ljmp
lea
call
hlt
mov
cltd
jg
sbb
into
fiadds
push
inc
jo
xchg
xor
xchg
fwait
inc
fwait
mov
push
shrl
push
xchg
mov
mov
or
push
mov
pop
ds
popf
fiaddl
imul
sub
nop
mov
mov
inc
mov
cmp
jno
loope
les
inc
rcrl
push
pop
mov
inc
fists
pop
pop
jle
hlt
jo
iret
jne
lds
test
in
addb
mov
sarb
aam
cmp
mov
mov
ret
data16
inc
xlat
adc
pusha
les
sbb
jge
pushf
enter
xchg
push
mov
inc
jne
repz
pop
mov
loope
call
mov
jl
sub
cmc
cld
sbb
loop
aas
mov
jnp
scas
adc
pcmpgtd
out
jne
aad
dec
mov
inc
js
lahf
ja
shrb
mov
hlt
mov
adc
out
outsb
cltd
inc
shll
sti
push
lea
fucom
inc
jnp
push
or
inc
adc
or
orl
fists
add
push
sarb
cmp
cmp
inc
cmp
std
rcll
call
cmp
jle
sbb
jp
adc
cmp
mov
into
icebp
inc
push
mov
repz
fs
cli
dec
adc
cmp
lret
cmpsl
pop
ljmp
push
lcall
mov
and
inc
js
lock
imul
cmp
and
out
jge
push
ds
in
cld
sbb
in
mov
test
int
sub
stc
jecxz
rcr
xor
xchg
add
inc
mov
dec
cs
mov
xchg
imul
fstp
mov
xor
pop
and
jb
fwait
mov
cld
add
mov
sbb
ja
and
fwait
jo
movsl
jg
pop
jbe
push
test
and
dec
roll
xor
mov
xor
xor
int3
in
enter
add
test
in
cmp
mov
daa
popa
ljmp
loopne
adc
mov
lret
sbb
fdivrp
sbb
test
dec
in
push
inc
and
aaa
inc
add
sub
sub
pop
mov
dec
mov
pushf
sbb
mov
adc
sbb
mov
ja
jns
inc
add
out
gs
pushf
mov
int
std
lds
scas
push
mov
iret
fwait
nop
es
or
aas
mov
shl
ds
mov
rcrb
aas
out
mov
addl
sbbl
enter
pop
loope
jp
enter
mov
mov
loopne
test
inc
test
fst
scas
clc
loopne
push
lahf
dec
dec
sti
popf
and
mov
sarl
fsubs
sub
push
pop
push
push
jmp
mov
add
outsb
sub
addr16
test
addb
mov
aam
sbb
pop
or
cmpl
loop
repnz
adc
out
or
out
mov
in
mov
add
stos
add
stos
or
test
ret
and
mov
xchg
call
mov
fisttpll
loop
cwtl
mov
rorb
and
mov
sbb
fnsave
mov
add
int3
pusha
sbb
ja
into
sbb
call
orl
xchg
fadd
and
dec
ret
and
aaa
mov
loop
or
mov
aam
rorb
loop
outsb
insl
sbb
xchg
movsb
movsb
sti
lods
xchg
xor
jl
mov
pop
cltd
and
inc
dec
jns
jno
int
ja
push
xor
push
add
cmp
ss
push
jmp
xchg
in
sbb
movsb
dec
fidivl
adc
je
out
xchg
xor
test
pop
pop
mov
sub
repz
aaa
pop
loopne
fwait
test
sbb
dec
push
insl
sub
popa
imul
sub
xchg
bts
add
cmp
and
mull
stc
jno
cmp
fs
popf
jmp
out
repz
test
and
jmp
pop
fwait
mov
push
adc
cltd
cmpsl
test
data16
dec
xchg
lret
sub
lret
stc
fcmovne
ds
int3
inc
inc
xor
outsb
scas
mov
pushf
mov
xchg
mov
roll
push
jle
inc
fld
pusha
and
fdivrl
ror
mov
stos
xor
test
fidivl
mov
push
js
rcr
and
stc
lock
cmp
repnz
in
stos
daa
arpl
hlt
sub
pop
sub
andl
push
inc
and
mov
push
mov
xchg
fxch
mov
scas
in
xchg
push
movsb
inc
in
ret
fimuls
mov
pop
adcl
or
dec
lcall
jo
pop
dec
ljmp
cmp
cmp
incl
or
jecxz
mov
test
mov
icebp
push
test
in
add
and
pushf
fisttpl
adcl
pushf
jb
ret
imul
out
and
cs
aad
cmc
lahf
adc
xchg
mov
mov
jg
mov
iret
popf
sub
inc
sub
pop
inc
pusha
adc
mov
loope
push
xchg
cmp
pusha
std
test
mov
fdivp
xchg
sub
mov
shl
andl
mov
pop
sahf
pop
loop
mov
adc
sbb
dec
inc
fnstcw
mov
jp
std
leave
mov
xchg
xor
add
mov
sahf
and
or
mov
dec
int
dec
into
imul
rcl
xchg
pop
jnp
pop
leave
mov
sbb
aaa
jg
push
and
shlb
and
xchg
sbb
imul
dec
fsubl
lcall
outsl
jmp
add
pop
fwait
hlt
fstl
cs
inc
data16
adc
mov
push
add
adc
fyl2x
sbb
cltd
les
in
mov
cmp
pop
mov
push
out
sahf
hlt
jp
push
pop
sti
mov
loope
pop
scas
das
daa
dec
fistl
fs
outsl
test
lea
mov
mov
fwait
mov
sub
pop
std
aam
xchg
imul
jg
lods
ds
xor
nop
cmpsl
push
sbb
sub
mov
mov
add
sub
pop
stos
aaa
cmp
out
mov
testl
in
sbb
mov
pop
adc
push
das
pop
fnstenv
xor
and
lret
mov
jns
jo
jae
imul
mov
cmpsb
push
outsb
ja
loop
je
leave
mov
mov
mov
and
mov
loopne
imul
adc
movsb
dec
insl
testl
pusha
xchg
mov
addr16
lret
es
add
jecxz
sbbl
ficomps
push
shll
shlb
adc
out
out
inc
in
push
xchg
in
push
dec
ret
push
aad
xchg
ljmp
test
cmpsb
cmc
push
and
add
seto
fstps
fldt
jbe
add
mov
mov
lcall
imul
pop
cwtl
inc
dec
adc
cmovl
testl
jne
repnz
sti
add
andl
jecxz
pop
and
mov
pop
scas
pusha
mov
lret
mov
sub
adc
shll
push
dec
push
mov
and
push
popf
or
iret
xchg
sbb
rcr
mov
shll
fwait
jns
pop
sub
xchg
popa
int3
pop
push
pop
pop
stc
sarl
xor
mov
movsl
pop
mov
dec
fidivrs
push
inc
inc
jge,pt
cmpsl
mov
ret
test
int
rcll
cmp
in
out
mov
js
xchg
loopne
adc
push
lahf
insb
enter
cmp
push
mov
shll
je
daa
mov
loop
xor
test
jmp
les
cmp
inc
jl
jno
fwait
iret
jge
xor
cmc
adc
mov
sarb
and
sub
xchg
lret
imulb
cld
popa
mov
mov
cltd
les
pshufw
daa
outsb
mov
mov
mov
cmp
push
cmp
cmp
jecxz
cli
xchg
sbb
mov
cmp
iret
xlat
fwait
dec
sti
dec
cmpl
jo
test
xchg
adc
add
out
andb
aaa
mov
stos
inc
add
push
into
in
outsw
sahf
push
sar
lods
add
dec
xchg
fwait
cmp
out
fs
inc
adc
add
and
mov
arpl
mov
jmp
sub
push
dec
mov
inc
xchg
andb
aad
aam
icebp
adc
mov
push
stos
outsl
xchg
hlt
daa
mov
add
jbe
dec
xchg
pusha
cmc
mov
cltd
js
shrl
xchg
jbe
mov
xchg
xchg
das
mov
loopne
bound
dec
inc
test
fs
push
jle
cld
je
inc
fstps
sbb
mov
into
mov
lods
aas
cmova
xchg
and
or
insb
orl
nop
and
aad
pop
or
xchg
aad
icebp
sub
fdivrp
or
in
xchg
and
mov
mov
icebp
ljmp
xchg
lock
stos
mov
lds
or
xchg
test
inc
dec
and
sbb
adc
or
lock
out
push
dec
mov
push
das
sub
xchg
out
push
lret
out
add
idivb
shr
xchg
cmp
std
pop
dec
add
shll
movsb
mov
aad
lods
mov
clc
sarl
aam
repnz
xchg
or
cmpsb
enter
dec
push
imul
push
jnp
lret
repnz
outsb
adc
lock
adc
add
mov
shll
in
shrl
ss
inc
notb
dec
push
and
std
xor
repz
pop
dec
in
lret
cli
sbb
sbb
mov
add
xor
dec
pop
xchg
daa
xor
inc
sbb
xchg
sub
flds
mov
jecxz
push
xchg
repnz
loop
mov
cmp
xor
xchg
sub
push
sbb
scas
push
scas
push
in
cmp
sub
dec
adc
mov
pop
in
or
orb
push
hlt
fsubrp
movsl
adc
or
and
cmp
inc
jp
lahf
push
aaa
pop
sub
xchg
pop
pop
ret
arpl
enter
cmp
fidivs
push
ret
dec
push
sub
cmpb
nop
push
jns
sub
fsubrl
pop
arpl
cmpl
xor
jecxz
push
fsubs
mov
mov
xchg
vandnps
mov
mov
jne
bnd
mov
jns
rcl
inc
mov
ret
fnstcw
mov
mull
inc
testl
jmp
aam
das
dec
mov
push
mov
clc
inc
aad
pushf
stos
and
push
pop
jmp
mov
cmpsb
ds
icebp
lea
push
push
roll
gs
cltd
test
and
pushf
mov
imul
mov
fcmove
push
cmp
sub
mov
inc
pop
int3
sub
mov
add
sbb
movb
es
testl
fdivs
mov
into
and
fistpl
pushl
and
mul
loop
adc
in
xor
popf
shr
lock
xchg
sbb
int
or
nop
dec
mov
lods
and
cli
xlat
inc
mov
or
pop
xor
push
pushf
push
insl
fdivl
loopne
inc
mov
fiadds
imul
pop
pop
lcall
cltd
xchg
ja
sub
enter
sub
and
cmc
adc
adc
mov
push
xchg
pop
cmp
int
xor
cmp
push
cmp
xchg
push
aam
popa
icebp
into
cs
pop
inc
popf
xchg
outsl
jmp
dec
lock
and
push
xlat
push
mov
loop
xchg
out
clc
popa
sbb
sbb
lcall
mov
cmp
movsl
inc
inc
and
es
xchg
aad
out
sub
sbbl
leave
test
xchg
inc
rclb
outsb
mov
inc
sub
fsts
or
movsb
fdivr
cmc
cmpsb
push
aas
inc
jbe
mov
je
int3
sti
mov
dec
dec
fimull
ror
or
mov
imul
repnz
jl
pop
or
add
addr16
sbb
add
movsb
sub
push
pop
push
mov
loope
nop
fisttps
ret
add
jo
or
xchg
sbb
cmc
mov
push
dec
hlt
orb
pop
jnp
movl
jle
adc
pop
mov
dec
dec
scas
test
jge
xchg
or
ret
lods
cmp
sbb
sbb
mov
xchg
out
sub
in
mov
fcmovbe
mov
or
sahf
xchg
sbbl
pop
or
out
arpl
mov
popl
out
stos
insl
rcll
dec
mov
pop
sbb
stos
mov
dec
rolb
pop
scas
ljmp
fcompl
mov
rcrl
jge
bound
cmp
insl
xchg
daa
adc
mov
lds
add
pop
aaa
dec
jge
pop
mov
fisubrs
inc
clc
xchg
fwait
pop
and
adc
outsl
loop
fwait
cltd
ficoms
xchg
cmpsl
out
es
mov
dec
call
sbb
ljmp
arpl
jnp
pop
xor
mov
push
lcall
add
xchg
hlt
xor
fmul
sahf
stos
loop
ret
push
test
and
inc
jmp
fcoms
mov
push
outsl
push
inc
cmp
imull
in
dec
scas
xchg
add
mov
push
push
andl
icebp
adc
cmp
cmp
je
mov
push
xchg
cmp
aaa
inc
cmc
mov
adc
adc
adc
insl
dec
xchg
js
or
sbb
popf
cltd
or
xor
mov
add
sub
xor
or
cmp
xchg
inc
xchg
imulb
xchg
cmpsb
sahf
loopne
jg
dec
and
mov
into
or
ds
jmp
cltd
fistpl
call
in
loopne
sub
mov
mov
ss
add
or
hlt
inc
test
jnp
inc
jb
sub
stos
ds
dec
ljmp
shll
sbb
imul
push
sub
clc
dec
cmp
and
mov
mov
mov
pusha
jns
mov
repz
cmc
dec
icebp
imul
mov
sub
cmpsb
into
inc
insl
std
scas
inc
xchg
add
call
test
push
nop
mov
rcrl
das
pop
add
lods
adc
in
xchg
dec
bswap
jmp
cwtl
xchg
inc
in
test
cmc
test
pop
cmp
xor
daa
arpl
std
lds
je
sahf
cmp
ds
inc
cld
and
dec
adc
jge
rcrl
mov
addb
pop
jb
in
pop
pop
sbb
movsb
lcall
ror
mov
jle
scas
pop
movsl
cs
into
lods
movsb
adc
lock
push
rcrb
inc
lret
pop
fcomps
jecxz
test
inc
aas
mov
mov
lret
cmp
sbb
loope
jno
ljmp
mov
sbb
xchg
addb
adc
mov
dec
dec
cmp
loopne
dec
xor
movsb
adc
aaa
inc
mov
push
adc
or
sub
js
cmp
push
mov
lods
hlt
in
pop
xchg
lret
outsb
stos
mov
scas
push
aam
pop
pushf
dec
mov
jae
add
aas
aad
mov
insl
pop
mov
sub
mov
fs
or
aam
ja
es
mov
push
mov
inc
add
int
jo
jnp
jmp
push
cmc
adc
iret
add
aad
loopne
cmp
jae
pop
mov
ds
dec
in
aad
and
cs
out
nop
push
xchg
mov
dec
push
mov
adc
xchg
adc
test
pop
ret
aaa
imul
ds
push
aam
and
stos
pusha
sbb
imul
lock
test
inc
leave
hlt
jle
jge
mov
out
stos
xor
insl
adc
loopne
sub
dec
dec
in
or
and
je
mov
xchg
test
dec
add
fstps
xchg
push
fiaddl
movb
jb
fwait
call
mov
inc
xchg
dec
push
cld
cmp
cmp
pusha
cmpsb
ljmp
ret
sub
mov
aad
cmp
sarb
cmp
mov
and
pop
inc
pop
inc
int3
arpl
or
jae
cmpl
sar
call
std
jbe
push
fs
mov
push
rolb
xchg
pop
cmpsl
out
dec
and
outsl
std
test
icebp
stos
jbe
xor
ret
aad
test
cmp
jecxz
or
dec
push
std
jns
mov
inc
add
mov
jns
cmpsb
negb
jno
inc
cmp
and
mov
lcall
clc
arpl
ja
popf
or
imul
daa
pop
insb
repz
enter
sbb
fstl
mov
sub
adc
enter
add
cmp
xor
jne
out
lea
pop
dec
push
jae
scas
rol
pop
adc
xor
pop
mov
jb
mov
xor
dec
mov
push
push
and
cmp
lret
ftst
in
push
push
test
push
pusha
adc
pop
jno
xchg
mov
or
icebp
lret
mov
xlat
cmpsb
dec
xchg
mov
stc
shrl
xchg
movsl
mov
lcall
mov
ret
lods
daa
in
xchg
ficomps
pop
cmp
fcompl
repz
adc
jne
in
ljmp
lock
cwtl
clc
mov
stc
xchg
data16
incb
dec
mov
xchg
cmp
mov
cmp
mov
add
stos
sbb
mov
xor
mov
idiv
cmp
inc
sbb
jae
jmp
ds
stc
insb
ja
pop
add
repz
jnp
inc
in
xor
leave
ja
mov
xor
je
icebp
iret
push
fldt
pop
fildll
sbb
mov
push
jbe
push
cltd
and
push
fmull
repz
subb
or
out
mov
mov
cmpsb
mov
jmp
dec
in
jge
jp
jl
leave
movsb
cmp
mov
push
push
jns
lds
shl
or
outsl
cmp
pop
sub
loope
or
mov
mov
jl
inc
in
jo
xlat
test
test
push
lods
sub
mov
jnp
push
popf
aaa
ja
dec
popf
xchg
loope
insl
mov
sbb
sbb
iret
mov
add
test
dec
shlb
pop
test
sub
mov
jg
icebp
mov
adc
mov
lock
lahf
aaa
movsl
rcl
adc
movsb
adc
or
sbb
loop
lcall
jnp
pop
outsb
cmp
shr
sbb
and
pop
fisubs
out
mov
fimuls
jecxz
movl
inc
or
mov
ret
cmc
js
sub
cmpsb
test
jns
add
or
inc
xor
out
cmp
mov
jmp
mov
dec
in
mov
push
nop
outsb
pop
add
out
pop
dec
mov
sbb
mov
push
int
out
mov
icebp
lods
cmc
push
movsb
add
jecxz
pusha
mov
adc
ficoml
popa
loop
int3
repnz
cmpsl
leave
sub
aam
out
out
lds
out
mov
repz
mov
inc
sub
add
xchg
repz
ja
cld
sub
int3
fcoms
xchg
clc
inc
aad
cmp
and
add
loop
inc
push
pop
inc
daa
sbb
inc
shl
sbb
out
cmp
addr16
sub
subl
minps
sub
outsl
mov
push
cwtl
outsb
mov
mov
insb
push
pop
jg
push
cmc
test
push
pop
jne
daa
mov
mov
mov
bswap
fcompl
pop
push
jne
fadds
jnp
inc
inc
int
ljmp
lods
sbb
jne
inc
out
dec
push
pop
sbb
int
xor
sbb
out
xor
jns
cld
sbb
andl
popf
pushf
loop
into
mov
in
mov
fwait
les
shl
loop
scas
repz
hlt
into
jne
adc
imul
test
inc
dec
pop
subl
outsb
xorb
jge
adc
fstps
ljmp
test
pop
testb
cmp
dec
lret
lcall
mov
pop
dec
mov
int3
dec
lods
push
stos
addr16
jecxz
xlat
aas
xlat
ds
orb
jg
pop
outsl
jl,pt
mov
jle
stos
iret
sbb
cmp
mov
jb
dec
jmp
push
in
jnp
cwtl
aam
insb
popa
inc
cmp
testb
arpl
aas
mov
xchg
mov
and
loope
stos
loopne
lods
mov
and
add
ret
cmp
pop
jmp
je
mov
add
jmp
addr16
repnz
jg
dec
jmp
lret
or
cwtl
lret
jno
or
mov
xchg
rcll
sub
jmp
loopne
mov
fnstsw
lock
pop
dec
pop
dec
fildll
rcrb
jbe
mov
cmp
test
in
push
jnp
das
push
or
sbbb
call
ds
popf
andl
test
jbe
jl
mov
fldcw
movsb
jl
cmp
jl
in
and
imul
lahf
sub
mov
xchg
movsl
movsl
insl
xchg
and
sub
mov
mov
mov
push
ja
leave
mov
pop
pusha
fimuls
mov
popf
mov
nop
sub
sti
out
sti
gs
shl
inc
jne
or
jp
jne
mov
sti
add
xor
xchg
mov
jmp
mov
jbe
jmp
rcrb
fbstp
int
push
stos
xor
subl
pop
cmp
rcrb
call
add
pop
cmp
cmp
fdivs
icebp
stos
cmpsb
ljmp
out
repz
xchg
neg
lock
push
aad
jl
push
and
ret
imul
push
mov
scas
aad
pop
push
jmp
cmp
sahf
adc
jns
lcall
cli
or
mov
inc
movsl
push
popa
sub
ret
repz
push
pop
dec
sub
cltd
push
flds
push
add
notb
sbb
and
lret
xor
mov
xchg
push
cmp
test
sbb
jno
mov
or
std
fisttpl
inc
inc
rorb
pusha
mov
dec
imul
sub
push
or
clc
mov
or
sub
xchg
dec
ja
pop
scas
mov
in
sti
jo
or
xor
idivl
in
xchg
jge
sub
aas
jge
or
adc
adc
imul
iret
jge
insl
fstpl
loop
rol
bound
and
iret
mov
shr
xor
clc
aas
push
xchg
xchg
rcrl
out
inc
loope
adc
fistpll
sub
movsb
xchg
push
and
fldenv
push
subl
sub
les
dec
mov
enter
rorl
sarl
mov
aam
leave
das
or
cltd
xchg
in
adc
shr
cmpsb
stc
pop
pop
xorl
andl
mov
add
pop
insl
pop
shl
pop
mov
stc
push
and
mov
adc
push
fisubl
test
mov
push
mov
addr16
fnsave
mov
jmp
and
lret
mov
in
fldt
jae
cmpl
test
xor
jge
xor
out
inc
mov
in
test
sahf
fs
ror
lahf
or
popf
andb
call
inc
inc
test
mov
xor
pop
rorl
je
fldt
dec
xchg
xchg
fwait
xchg
call
adc
ds
jno
sub
es
dec
pop
sub
mov
xchg
ret
pop
mov
xor
push
mov
sub
and
rol
flds
sbb
push
or
mov
fcmovnb
jp
inc
stos
mov
jb,pt
popa
jmp
lea
cltd
jg
lahf
adc
ficoml
add
jle
adc
cwtl
stc
mov
sahf
mov
aas
sahf
pop
sti
cwtl
and
ret
cmpb
push
inc
js
sub
enter
jne
xchg
out
mov
xor
out
dec
sarl
mov
jno
push
icebp
and
xor
push
push
jg
mov
push
mov
cmc
cltd
xchg
clc
leave
mov
cmp
loope
jg
adc
addr16
push
sbb
jae
daa
neg
arpl
stc
sbb
fists
lcall
sahf
mov
mov
lods
xchg
mov
les
xchg
mov
sub
rcrb
cli
jb
or
les
pusha
xchg
push
stc
xchg
repz
mov
lea
or
in
sub
adc
push
dec
aad
movl
jle
int
dec
imull
cmc
mov
sub
test
cmp
pop
out
insb
xor
mov
or
clc
jo
movsb
mov
mov
lds
clc
cmp
mov
leave
sub
adcl
adc
cmp
xor
jns
inc
movsb
push
popf
arpl
jnp
mov
test
push
cmp
sbb
sbbb
rcll
dec
out
lods
scas
call
cmpsb
dec
and
push
rcl
imul
add
test
cmp
aaa
repz
jne
inc
inc
popf
fs
outsb
adc
loop
xor
loope
inc
mov
daa
movsl
mov
adc
sbb
mov
rcl
loopne
adc
cmp
repz
arpl
repnz
sbb
jmp
mov
inc
inc
xchg
add
test
push
in
dec
daa
add
push
std
dec
pop
fidivrl
in
cmpsl
jge
mov
inc
aaa
adc
int
jle
mov
dec
and
cs
xor
fwait
lret
idiv
xchg
aas
lret
push
mov
les
testb
sti
push
mov
jae
mov
ds
push
mov
lock
push
out
push
mov
jb
inc
scas
add
flds
out
xchg
cmc
sahf
jmp
adc
jge
jnp
cmp
mov
mov
negb
outsb
les
testl
xchg
stos
mov
faddl
adc
add
or
push
jns
sbb
pop
ret
rol
imulb
mov
rcl
sub
sub
sbb
inc
bsf
imul
jmp
mov
ret
nop
scas
ds
mov
divl
mov
jns
cmpsl
mov
xchg
out
mov
mov
cmp
dec
shll
std
repz
incb
shrb
mov
aas
cmc
enter
xlat
loopne
shlb
or
sbb
insb
jmp
xchg
int
loopne
fnstcw
je
nop
cltd
sti
push
mov
mov
fcmovnb
ret
jmp
in
pop
out
ljmp
in
pop
jne
sub
rolb
push
call
push
mov
movsb
mov
cli
in
add
stos
stos
out
pusha
xor
add
mov
or
lods
or
mov
cmpsl
shll
loope
mov
imulb
mov
jmp
adc
xchg
mov
enter
push
cmpsb
xchg
cmp
pop
enter
into
lock
mov
sti
stos
fsubp
inc
lock
frstor
add
adc
inc
decl
fcoms
inc
test
mov
addr16
pop
mov
pop
lcall
jp
stos
dec
scas
inc
pop
mov
aad
xchg
addb
mov
lcall
sub
mov
aas
inc
movsl
lods
popa
dec
incl
sub
add
mov
das
xor
or
xchg
or
leave
in
lcall
and
xchg
xchg
sbb
daa
sahf
and
je
pop
bound
test
xor
enter
dec
inc
cmp
jp
mov
stos
pop
mov
mov
insb
cmp
mov
pop
cmp
pop
js
push
mov
pop
aam
inc
fcomp
inc
mov
sahf
xor
mov
xor
xor
cld
imul
mov
sbb
lods
loop
add
fwait
in
cld
sti
mov
mov
cmp
fisttpll
and
repnz
pop
iret
scas
into
lcall
inc
out
pop
adc
sti
mov
dec
mov
aad
add
negl
pusha
xorl
dec
stos
pop
cld
mov
pop
stos
loop
icebp
enter
das
cli
fidivl
or
mov
cmp
icebp
lods
jle
mov
pop
ret
sub
insl
lods
mov
mov
out
sahf
not
icebp
mov
movaps
push
aam
das
inc
pop
insl
clc
rorb
mov
mov
lret
mov
sbb
xchg
push
movsb
inc
cmpsb
out
les
lahf
sbb
aad
stos
pop
sub
subl
fcomp
mov
xchg
lretw
cmc
je
inc
adc
and
in
int
outsl
xor
add
repz
out
sbb
add
insl
fs
mov
sub
ret
mov
mov
xchg
or
lahf
add
pop
cmp
fldcw
sbb
dec
pop
daa
sub
stos
mov
fistpll
int3
fdivl
sbb
push
ficoml
push
xlat
mov
stos
in
and
lods
aad
xor
repnz
aam
mov
test
lret
repnz
loop
stc
sti
cwtl
cmc
repnz
fistl
sbb
mov
jae
imul
cmp
shl
pop
mov
push
js
pop
cmp
sub
in
sbb
push
inc
je
add
or
add
xchg
in
fisubrs
addb
dec
loope
inc
les
add
jne
dec
filds
mov
cmpsb
cmovnp
inc
in
and
xchg
fs
test
xor
jns
ret
add
movsb
mov
gs
pop
mov
pop
scas
mov
out
mov
test
shl
or
jae
bound
addb
stos
insl
iret
push
push
ss
movsl
enter
adc
pop
push
and
pop
xchg
clc
in
test
rcr
mov
or
sbb
sti
mov
enter
out
mov
rorl
mov
adc
sahf
xor
xor
cltd
cli
jle
leave
push
mov
leave
push
cmp
pusha
mov
aad
daa
sub
xlat
sti
ljmp
mull
dec
call
adc
ss
adc
add
sbb
sub
inc
mov
je
cmp
pop
xchg
xchg
adc
dec
adc
dec
jg
jno
ds
lea
sarl
repz
pushf
mov
cld
call
in
lret
movsl
jecxz
cmp
xchg
sbb
into
idiv
loope
add
push
dec
jns
push
mov
add
stos
int3
push
jae
notl
inc
or
ret
sub
daa
shrb
js
outsl
out
sub
xor
aam
fists
lods
jle
dec
dec
loop
aaa
and
sub
or
jo
cmp
mov
push
data16
sbb
dec
mov
lahf
pop
lods
sub
test
or
stc
mov
out
xchg
mov
std
je
test
movsl
stos
aad
pop
and
mov
cmp
sub
dec
leave
mov
mov
pop
clc
das
pop
sti
adc
in
mov
test
negl
adc
fisttpll
int
sbb
cmp
call
cld
test
lods
jle
sub
push
stos
in
imull
add
lcall
xor
scas
pop
mov
xor
rclb
push
inc
out
pop
daa
cmc
je
mov
or
enter
neg
jecxz
pop
xor
inc
cmp
lret
outsb
mulb
loop
pop
and
push
cmp
mov
fcmovnb
rolb
mov
loop
mov
stos
mov
inc
out
inc
fisttpll
aad
cmp
int
aad
jne
xchg
clc
mov
insl
stc
imul
lret
adc
mov
inc
int
aad
add
cmp
faddp
ds
ss
hlt
js
insl
xchg
mov
dec
push
jecxz
mov
and
mov
ja
dec
xchg
adc
idivb
mov
mov
sub
cmp
iret
das
cmp
xchg
int
lock
xor
in
aaa
shlb
cmp
cmp
mov
out
cmp
out
aas
adc
cmp
popa
les
clc
lahf
sub
jbe
imul
addr16
sbb
inc
mov
xchg
jmp
mov
andl
jno
mov
pop
pusha
mov
mov
mov
dec
iret
aaa
dec
xor
dec
mov
inc
imul
or
stos
lret
out
pop
push
sarl
mov
pop
gs
add
push
mov
loop
insb
mov
inc
repnz
repz
cmp
outsl
repnz
sbb
aas
adc
les
ds
jl
inc
loopew
test
in
dec
test
mov
xchg
out
cs
dec
dec
inc
int
in
out
or
rcrb
mov
lea
adc
push
add
in
es
dec
pop
mov
out
or
sub
addb
push
je
mov
xchg
imul
jns
arpl
test
sbb
into
xchg
mov
lock
fcomip
jae
mov
pop
imul
sbb
sub
fsubr
imulb
jo
xor
cmp
jl
push
insl
fcompl
out
cmp
pop
popa
loope
jns
mov
xchg
inc
pop
lea
push
scas
aam
push
ret
mov
push
jg
fnstenv
pop
push
shrl
cmpsl
rcll
rolb
inc
jp
mov
movsb
jmp
insb
xor
xchg
arpl
fwait
mov
cli
call
test
cmp
ficoms
fldenv
mov
scas
sub
addr16
or
insb
stc
xchg
pop
mov
cmp
out
scas
xchg
mov
jbe
xchg
adc
jno
add
pop
lods
mov
mov
mov
imul
mov
and
rcl
jg
ror
fwait
xchg
pop
mov
aaa
pop
lea
cmpl
out
loopne
and
mov
add
mov
mov
mov
mov
or
bound
pop
mov
sti
xchg
mov
fimull
int
rclb
lds
xlat
inc
outsb
ja
mov
add
jecxz
loopne
xor
inc
xor
inc
cmp
sahf
and
ljmp
jns
cmp
mov
dec
js
sarl
test
enter
xor
stos
sub
addr16
mov
in
scas
ss
adc
das
sahf
dec
mov
push
testl
rcrl
sbb
je
inc
or
lods
fimull
adc
cli
or
pop
sub
sub
dec
jns
pop
mov
xor
out
cmp
xchg
pop
pop
dec
pop
into
xchg
pop
filds
shlb
push
dec
push
push
orl
scas
add
repnz
leave
lds
shl
and
divl
or
adc
push
push
test
outsb
jecxz
add
loop
jecxz
sbb
pop
aad
fisubrl
push
cld
adc
jo
scas
enter
mov
test
sti
movsb
jo
mov
iret
push
jmp
add
repnz
lcall
push
jb
insl
movsl
js
sub
test
cld
jbe
sbb
test
mov
cmp
movsl
mov
and
cmc
or
pop
arpl
sbb
cmc
mov
test
jle
mov
imul
mov
dec
fdivrs
mov
push
adc
fimull
fnstenv
adc
dec
sahf
sbb
and
rorl
call
mov
rcrl
sbb
mov
add
cmp
sbb
jno
mov
xor
das
rorb
or
sbb
sarl
mov
cmp
inc
add
mov
jb
mov
pop
or
lea
std
repz
arpl
inc
lds
jmp
inc
aam
push
sbb
sahf
cmpsb
push
lret
jne
lods
mov
enter
add
mov
adcb
ficomps
lcall
xchg
arpl
ret
cmp
mov
inc
pop
jae
and
repz
lea
mov
loopne
xlat
fwait
push
jecxz
cmp
xchg
sub
leave
add
fbld
mov
push
arpl
mov
gs
rcrl
lret
mov
adc
outsb
dec
fisubl
fildl
je
and
mov
jp
ds
adc
loope
jns
mov
dec
std
dec
add
sbb
mov
cli
cmp
or
jg
lods
sub
jge
cli
stc
cli
push
std
stos
mov
fs
pop
ljmp
movsb
iret
jle
js
mov
out
aas
mov
or
addb
jo
sub
aas
push
inc
aad
aad
pop
fstpl
addr16
xor
sub
bound
adcb
test
adc
call
xchg
adcl
ja
es
aaa
cmp
addr16
fisttpll
and
gs
cmpsl
inc
sbb
scas
pop
int
cmp
pop
js
in
ja
add
cmp
or
inc
data16
dec
or
int3
jecxz
test
jl
aad
adc
and
xlat
loope
fsts
xorl
cmpsl
cltd
adc
mov
mov
jl
addr16
movsb
jbe
adc
int3
in
and
lods
push
sbb
or
leave
cmp
ror
xor
push
scas
and
dec
xchg
cmp
inc
ja
sbb
int
mov
mov
sbb
lret
cmp
or
xchg
push
inc
xor
pop
mov
inc
fsubrl
sbb
mov
add
pop
add
xor
add
loop
out
jl
out
aaa
mov
insb
jno
cmp
pop
mov
mov
cs
cltd
loopne
addl
shl
mov
test
xchg
bound
push
les
mov
sub
push
jo
idivl
push
jne
xor
cmpsl
lds
push
mov
jp
out
mov
sbb
mov
scas
mov
lret
into
lods
cmp
cmp
adc
loopne
pcmpeqd
bound
mov
stos
xchg
or
xchg
jge
in
mov
push
jns
ss
xchg
into
lret
jmp
adc
mov
ja
inc
push
inc
jbe
ja
xchg
fldl
fwait
inc
dec
insb
test
cmp
or
mov
sub
mov
xchg
stos
lcall
ja
cmp
inc
jnp
lods
popf
in
pop
jge
push
fwait
movsl
out
or
cld
sub
dec
sub
test
or
inc
or
push
sub
push
mov
repz
aam
pop
or
call
decb
add
pushf
mov
repnz
cmp
fcompl
arpl
hlt
clc
loope
mov
stos
stos
add
mov
gs
repz
cmp
fldenv
jp
and
ss
ficoml
adc
mov
mov
sub
add
pusha
and
rcrb
lea
imul
adc
in
sbb
mov
loope
xor
sbb
lods
pop
push
fsubrl
in
push
arpl
out
mov
pop
dec
mov
mov
adc
and
sub
sbb
dec
fwait
mov
nop
xchg
std
pop
fists
roll
lcall
out
popf
and
cmc
pop
pusha
jno
jg
mov
jg
imul
cmp
andb
fsts
adc
outsb
outsb
xchg
mov
or
pop
adc
dec
call
mov
pop
shl
loop
xor
xor
jp
sub
add
aad
ret
pop
cwtl
fmull
and
xor
rclb
cld
shlb
lock
stc
cltd
jne
push
sbb
and
or
cmpsl
iret
inc
xor
adc
xor
outsb
ss
mov
int
inc
sub
cmp
xor
mov
out
push
cmpsl
xchg
mov
mov
or
adc
cmp
fildll
das
mov
jno
clc
ret
cmp
cltd
mov
push
mov
cmp
jmp
negl
mov
push
shrb
or
call
pop
lcall
mov
jmp
sub
bound
jne
pop
insb
ss
fmulp
enter
pop
fldcw
jl
cmpsl
loopne
add
int
push
je
and
out
sub
cmpsb
and
call
pop
fsubrl
sbb
or
and
cmpsl
wbinvd
adc
sub
ss
pop
push
and
test
js
in
cmp
rcll
fdiv
pop
and
in
dec
jns
rcl
dec
sub
push
shll
int3
pop
in
add
orb
sub
out
and
les
xchg
sub
jle
clc
cmp
cmp
add
loopne
roll
pushw
sub
mov
push
pop
negl
inc
fs
shl
fs
imul
xchg
mov
aam
lcall
xchg
sbb
xchg
and
jl
in
and
adc
repz
ret
push
mov
dec
rcrb
imul
jb
mov
ret
in
daa
idivl
scas
or
and
out
mov
loope
xor
mov
and
imul
addl
push
mov
push
pop
movl
lret
stos
jle,pt
loopne
and
xchg
sbb
mov
cmp
lods
sbb
sub
push
dec
mov
cmp
je
lods
ja
daa
out
adc
xchg
and
fisttpll
out
lcall
shlb
loop
arpl
cmp
and
mov
imul
mov
subb
test
inc
cmp
fs
or
jns
pop
push
fldt
imul
adc
pushf
mov
dec
movsl
push
cli
lds
lret
mov
jbe
std
mov
popf
imul
xor
lea
imul
stc
mov
and
push
sbb
or
pop
inc
imul
les
mov
push
rcr
nop
loopne
or
xchg
mov
cmpsb
cmpsl
or
pop
mov
test
jne
sahf
mov
stos
insl
ljmp
dec
and
pusha
fmuls
jno
xor
in
sub
out
inc
lds
cmpsb
and
test
lret
adc
xchg
mov
mov
imul
scas
repz
cmpsl
or
jno
or
lahf
mov
cmc
sbb
mov
andl
je
scas
and
inc
xchg
push
ss
cli
popf
push
mov
or
push
paddsb
jge
adc
or
push
cmpb
or
cmp
mov
and
pop
gs
movsb
and
mov
sub
and
dec
push
lods
or
test
ret
in
jb
dec
lret
outsl
bound
xchg
pop
std
bound
cmp
repnz
mov
push
push
ja
faddl
push
or
movsl
repz
in
int3
loope
jp
js
icebp
jl
bound
mov
aad
push
stc
outsl
jb
cmp
xchg
pop
cld
dec
jns
jl
dec
mov
ds
ja
xchg
fwait
xor
scas
jns
hlt
shlb
lret
outsl
pop
mov
jne
mov
cmc
adc
pop
pusha
inc
push
aad
int
js,pt
sbb
fdivl
lret
ret
push
or
and
fwait
aad
call
pop
pop
add
aas
std
jbe
pop
mov
lcall
into
xlat
mov
lea
pop
das
mov
adc
aaa
in
jne
push
into
cmp
scas
sbb
ss
nopl
clc
stc
push
or
mov
lds
repnz
lret
fucomp
mov
je
dec
dec
xlat
or
cwtl
lret
pop
inc
popa
ficomps
ljmp
cmp
sbb
shrl
cmp
mov
push
enter
push
into
dec
pop
mov
leave
sarb
push
dec
xchg
adc
addr16
adc
nop
imul
rorb
nop
dec
lods
js
daa
mov
scas
aam
add
xor
lods
fadds
pop
decb
insl
fmuls
mov
mov
sbb
cli
and
or
lcall
jb
fisttpll
enter
cmp
sub
or
mov
cmp
mov
js
sub
pop
cmpb
cmp
cmc
mov
adcb
addr16
add
stc
ja
xor
jg
inc
repnz
or
dec
pop
pop
xchg
jae
cmc
xor
or
cmp
mov
and
push
jg
je
or
or
mov
rcrl
mov
ficompl
rorl
repz
mov
fildl
mov
pushf
lods
stos
sub
push
negb
mov
hlt
pushf
sub
lods
fsubs
jb
inc
add
xor
leave
mov
int3
fbld
xor
mov
dec
hlt
push
cli
dec
xchg
dec
stos
jns
mov
pop
push
ds
sbb
call
adc
pop
dec
mov
add
sub
mov
movsl
enter
lcall
test
sahf
jae
mov
test
rcrb
ljmp
or
lcall
jg
cmpl
jnp
push
insb
fidivl
out
shlb
decb
lods
mov
and
or
jnp
jge
mov
fisttpl
test
pop
movb
fsubrl
cli
pop
lock
jp
in
or
into
inc
xchg
daa
mov
xchg
and
cmp
sti
popa
or
inc
in
aad
fwait
inc
lcall
scas
and
cld
or
ds
jne
or
call
imul
sahf
lea
repz
roll
lcall
int3
fs
sahf
mov
stc
dec
jmp
jp
imul
sbb
dec
repz
pmulhw
in
jns
xor
nop
arpl
xor
lods
test
mov
pop
es
add
push
movsl
addr16
imulb
ds
data16
and
nop
test
repz
testb
or
je
adc
dec
aaa
imull
jge
fbstp
sti
fmul
mov
mov
pop
push
pop
xchg
daa
dec
jno
fldt
mov
mov
call
imul
xchg
adc
das
scas
xchg
pop
out
cli
mov
push
fxch
rcll
into
sub
pop
int
je
adc
push
std
inc
rorb
mov
jne
test
adc
adc
cmp
lret
xchg
shll
fisubrl
push
insb
movsl
mov
mov
sbb
clc
and
int3
in
or
sub
mov
pop
ret
scas
mov
mov
xor
inc
xchg
mov
mov
push
sti
imul
test
mov
dec
gs
mov
xchg
mov
xor
hlt
mov
and
mov
pop
xor
sti
sub
das
lret
stos
incl
test
mov
loop
loop
pop
push
xor
fidivrs
pop
push
mov
mov
mov
xchg
xlat
cmc
mov
enter
push
cwtl
fbld
addr16
lods
shlb
mov
fnstcw
les
movsl
data16
add
les
aas
push
push
add
mov
fistps
mov
sbb
clc
sahf
dec
mov
add
andb
dec
mov
jnp
dec
xor
push
mulb
add
or
pop
stc
xor
jmp
or
lret
negb
push
mov
pop
ret
push
pusha
sub
and
outsl
repz
and
dec
fisttpl
mov
pushf
xchg
mov
addr16
and
in
icebp
es
inc
xchg
rcll
fcom
das
insb
pop
lcall
and
jae
sub
xchg
pushf
push
inc
push
lahf
pop
push
js
dec
out
mov
cmp
lcall
dec
fidivs
shrb
sbb
stc
push
sbb
add
push
fldt
dec
mov
xor
je
or
loop
xchg
cmpsb
sbb
aam
mov
dec
add
out
lea
jle
mov
pop
or
popa
push
movsb
dec
in
outsb
loopne
or
orl
pop
sbb
jno
sti
mov
ljmp
sbb
push
bound
sbb
xchg
nop
out
dec
xor
cmp
mov
aas
pop
lock
or
pop
sbb
or
push
xlat
mov
cmc
fstl
negb
inc
or
sub
pop
xorl
scas
lods
sub
xchg
into
mov
mov
push
fidivrl
or
pop
rcl
sub
lods
mov
pop
paddsw
ds
bound
dec
jb
fwait
mov
mov
mov
and
xchg
dec
dec
push
dec
add
and
in
xor
shrl
xlat
cs
mov
push
push
decb
aas
popa
pop
xchg
mov
push
aas
jne
or
adc
mov
pusha
inc
ret
sbb
lea
and
add
xchg
pushf
adc
out
pop
push
mov
fistpl
cli
jg
pushf
xchg
mov
push
loope
ss
xor
jo
cli
cmp
fists
outsb
xchg
dec
rcll
ret
cmp
mov
ret
jmp
out
xor
imul
mov
dec
out
lods
daa
push
mov
stos
add
test
pushl
lods
movsl
mov
or
sub
test
push
mov
test
popf
or
call
je
hlt
rcl
push
mov
xor
test
xor
lret
and
lcall
pop
jg
ud2
inc
icebp
dec
xchg
es
xchg
jecxz
push
pop
dec
mov
bound
fdivs
rolb
jge
mov
fsubrl
loop
or
xor
cltd
cmp
or
mov
repnz
fadds
lcall
xchg
adc
jns
add
push
and
daa
mov
lcall
mov
xor
dec
das
adc
clc
xchg
mov
sbb
sub
mov
mov
gs
push
mov
xor
xor
daa
cmp
xchg
cld
repnz
add
dec
negb
push
cltd
push
das
cmpsl
sub
mov
insb
insb
out
test
std
cmpb
sbb
mov
mov
clc
xchg
sub
test
test
xadd
sub
loop
add
adc
sbb
pop
and
aam
sbbb
lds
adc
pop
xor
xor
jo
or
mov
jno
call
xchg
scas
bound
ds
and
or
xor
lahf
gs
dec
lds
roll
sbb
outsl
or
jmp
push
fs
ss
jge
push
inc
jecxz
xchg
xchg
shlb
stos
inc
dec
rolb
push
ss
push
aam
add
push
cmp
js
repnz
fidivrl
sbb
test
ljmp
popa
mov
inc
push
push
dec
js
pusha
daa
or
cmpl
leave
mov
add
adc
mov
sub
add
lock
or
add
jge
clc
cmpsb
movsl
adc
adc
fwait
mov
sub
mov
mov
add
imul
adc
gs
pop
mov
cmp
mov
mov
push
jg
aad
pop
push
test
or
mov
sbb
xor
xchg
inc
xor
pushf
lds
add
sbb
push
mov
fdivrs
push
push
sbb
sbb
push
xor
in
pusha
adc
inc
loope
daa
arpl
es
sub
mov
stos
test
aad
hlt
mov
orl
sbb
cltd
mov
dec
into
bound
les
fwait
xor
mov
sbb
addr16
lods
jl
or
lret
mov
popf
rolb
inc
lods
ljmp
scas
sub
dec
bound
add
repnz
ficoml
inc
sahf
stc
test
sahf
push
arpl
jnp
adc
fcompl
add
mov
xchg
pusha
out
imull
mov
repnz
in
adc
or
outsl
testl
sub
in
xor
mov
pushf
pop
sbb
cs
dec
sbb
scas
scas
js
jae
push
addr16
mov
jns
stos
data16
idivl
inc
nop
shll
imul
xchg
inc
dec
nop
scas
cld
add
lret
imul
or
frstor
pop
les
fnsave
or
pusha
push
xchg
sbb
mov
adc
and
cmp
add
sbb
lea
dec
inc
loopne
cltd
sbb
xor
mov
jae
in
out
sbb
out
inc
movsl
push
dec
xor
add
nop
outsl
stos
mov
adc
mov
lret
xchg
or
in
jmp
or
add
mov
lds
lock
xor
adc
cmpsl
xor
orb
fs
test
pop
pop
sti
inc
mov
jg
stc
rcll
lds
fcoms
jmp
dec
in
or
cld
add
cmpl
ret
mov
sahf
call
sub
sub
fnstcw
mov
jl
nop
sbb
ret
ljmp
cmp
sahf
push
jmp
mov
jle
les
mov
fcoms
imul
push
into
dec
mov
movsb
and
std
jmp
dec
or
jle
lahf
call
out
cmp
inc
mov
jns
out
shrl
loop
sub
mov
pop
mov
mov
dec
and
std
xchg
lock
add
xor
pusha
push
pop
adc
inc
dec
out
inc
dec
xchg
dec
jae
adcl
sub
inc
dec
fs
xor
and
jbe
lea
mov
xor
outsl
mov
repz
test
aas
sbb
shlb
pop
sti
xor
push
mov
inc
fistpll
adc
mov
int3
loope
icebp
sbb
scas
mov
loop
outsb
cmp
loop
inc
jmp
xchg
insb
dec
jo
xchg
loope
not
fprem1
movsl
mov
repz
iret
mov
imul
test
lods
add
jle
paddq
mov
mov
fstpt
push
dec
lea
arpl
jg
or
jno
imul
jnp
jecxz
rclb
pop
adc
sub
imul
jb
ja
xchg
paddw
lahf
xchg
ds
test
xchg
dec
std
jp
jae
nop
shlb
xchg
inc
inc
and
inc
push
outsb
push
add
mov
subb
insl
inc
add
loope
and
push
mov
test
xorb
rcl
mov
sub
and
xchg
jo
pop
xchg
jmp
into
aaa
mov
sbb
cmc
fcomp
pop
xor
lea
loope
adc
sub
fsubrl
shlb
push
pop
adc
hlt
lock
or
lods
ret
mov
popf
cmp
outsb
aam
push
mull
xchg
mov
test
sub
and
movsb
bnd
cmc
in
daa
jmp
adc
xor
jmp
out
jnp
sbb
cmc
xchg
mov
std
sub
mov
mov
rcrb
cld
repz
adc
loop
in
cmp
or
inc
scas
adc
je
cld
lss
inc
xlat
inc
sbb
sbb
js
test
scas
add
xlat
mov
inc
xchg
cmp
and
bound
xlat
sarl
cmp
fdivrs
add
mov
xor
xchg
pop
fisubs
sbb
jb
out
lret
jl
gs
jecxz
jbe
sub
mov
fnsave
xchg
mov
repnz
xchg
and
mov
dec
fstps
test
mov
pop
js
cmp
mov
push
lahf
or
leave
aaa
lock
push
cmp
inc
push
jae
in
into
repz
xchg
in
ss
xor
mov
jp
in
jg
cmpsl
stos
push
movsl
cmpsb
pop
pop
sub
sub
and
orl
daa
xor
test
adc
in
xchg
xchg
and
aad
jb
or
lods
sub
jp
adcl
cltd
das
fildl
and
call
xchg
mov
pop
push
sub
aaa
pusha
shlb
or
lcall
sti
into
sbb
cld
cltd
dec
add
adc
sbb
xor
jb
loop
popf
adc
test
inc
cmp
pushf
push
jmp
scas
mov
faddl
cmpsb
aam
cs
call
ds
cli
push
inc
ret
cmp
inc
ljmp
and
jl
inc
popf
nop
enter
loopne
mov
jle
and
pop
stos
cmpsb
sub
push
dec
cli
icebp
mov
sub
and
mov
enter
xchg
adc
inc
mov
cmp
aam
fbstp
xchg
mov
jmp
ss
mov
fsubrs
and
fucom
aaa
xchg
push
daa
fmulp
mov
push
stc
test
stc
test
fs
push
adc
jnp
mov
and
leave
push
push
xchg
sbb
icebp
push
mov
fisubrl
cmpsl
out
les
sbb
mov
fisttps
adc
out
idiv
repnz
push
movsl
add
stos
and
imul
cmp
das
dec
lock
bound
lock
sub
jb
push
enter
jb
push
add
mov
push
xchg
xor
push
or
out
pop
adc
push
jae
out
or
mov
arpl
hlt
ja
fnstsw
mov
or
imul
sti
sbb
insl
dec
stc
push
xsave
pop
dec
mov
lret
lods
cmp
push
insl
out
clc
sub
arpl
and
lods
push
and
mov
and
sti
inc
cmpsl
jl
aaa
jle
fcmovne
or
ficomps
gs
int3
xlat
gs
sbbl
mov
int
xchg
lahf
rcrl
cli
in
movsb
dec
shl
pop
inc
push
push
adc
mov
divl
add
or
adc
mov
aad
ja
shrl
cs
lcall
pop
loop
xchg
int
ret
rorb
sub
jecxz
xor
jp
es
cmpsl
jne
dec
enter
in
aaa
dec
ds
mov
mov
das
cmp
xchg
jnp
cmp
inc
cli
xor
sbb
jge
jno
mov
aas
push
cmp
mov
or
scas
xor
pop
int3
scas
leave
in
fdiv
add
nop
mov
orl
outsb
lret
shll
inc
or
sub
xchg
lods
movb
and
cltd
outsl
inc
pop
dec
mov
daa
cltd
insb
test
xor
mov
test
dec
roll
inc
popa
sti
ret
int3
movl
popa
mov
mov
push
imul
xor
cmc
adc
add
ficomps
dec
cld
push
in
fwait
adc
out
outsl
mov
jo
jg
dec
mov
pushf
lock
shll
cli
cmp
lds
and
pushl
es
adc
dec
push
aas
sub
sbb
aad
mov
and
mov
jbe
pop
sub
stc
iret
ds
pop
cwtl
jecxz
lret
adc
push
mov
mov
and
in
xor
adc
cmc
cmp
cli
out
mov
mov
xchg
lock
popf
sbb
add
jns
sub
outsb
cli
mov
push
daa
fcoml
fisttpl
jbe
fisttpll
jg
nop
dec
das
inc
das
adc
lods
mov
inc
push
scas
jnp
mov
push
push
in
xor
inc
pop
or
inc
lods
je
mov
mov
mov
idivl
cmp
nop
jmp
mov
mov
test
popa
and
inc
cs
xor
mov
movsb
pop
pop
jge
shll
cmp
push
mov
sub
push
decl
or
adc
ds
outsl
scas
stos
loope
inc
adc
fs
push
rcl
inc
dec
out
popf
outsb
xor
or
ret
mov
push
test
ljmp
repz
inc
cmp
sub
adc
movsl
or
test
int
hlt
sbb
sbbl
test
fsubl
hlt
stc
flds
pusha
xor
test
in
dec
pop
cmp
inc
inc
ret
inc
dec
subb
push
jp
mov
test
in
cwtl
xor
lods
jle
jecxz
adc
lahf
push
sbb
aad
test
addl
mov
cmpsb
das
pop
test
sub
mov
sti
cmp
lahf
out
pop
jo
pushl
sbb
fwait
pshufw
push
and
imul
movsl
add
xor
jg
push
idivl
xor
in
sbb
test
pop
inc
xchg
dec
push
adc
out
and
orl
adc
sahf
aas
xor
sbb
jg
inc
or
adcl
pop
inc
cmp
call
pop
push
adc
xchg
jae
into
add
lods
mov
mov
mov
lcall
lods
mov
or
imull
cmp
xor
xor
test
xchg
add
push
rolb
into
mov
std
fs
cmp
mov
ljmp
imul
adcb
xchg
pusha
inc
popa
push
push
adc
push
inc
xchg
and
xchg
int3
leave
ret
cli
lret
pop
mov
mov
inc
shr
cwtl
or
pop
jle
nop
andl
shlb
mov
jb
rcrl
inc
out
add
mov
lds
dec
dec
sar
push
jno
in
cwtl
push
f2xm1
and
cmp
cmp
aad
loop
arpl
pop
arpl
xchg
inc
sarb
pop
fsub
pop
inc
mov
ret
lods
fdivrs
fucomip
lret
push
stc
jp
insb
push
jg
test
cmp
jbe
shll
ret
fsubrp
adc
and
aaa
outsl
push
icebp
lods
cltd
mov
inc
and
mov
dec
fsubrs
repz
mov
imul
mov
addr16
cltd
dec
pop
cmp
popf
aas
sbb
push
sbb
sbb
xor
sti
mov
popa
jge
fisubrl
addr16
xor
outsb
push
mov
mov
and
repnz
mov
jmp
pop
and
xor
mov
add
pusha
insb
inc
jne
jmp
imul
icebp
xchg
pusha
mov
sbb
bound
pushf
pop
aaa
and
lock
outsl
jb
mov
jns
push
xor
out
pop
sahf
mov
cld
inc
jno
sbb
jbe
push
push
dec
dec
push
mov
mov
jb
and
mov
xchg
clc
fdivp
mov
lea
mov
or
sub
adc
insl
fwait
cmp
popf
jle
mov
hlt
mov
cmp
gs
adc
cld
ret
and
ds
cmp
ja
xchg
popf
mov
mov
pushf
or
fldenv
pop
andb
jb
hlt
out
orl
nop
fnstcw
cmp
jns
aam
xchg
inc
mov
add
rol
sub
sub
mov
mov
inc
addl
iret
mov
popa
notl
stos
push
pop
pop
and
adc
out
leave
in
in
and
and
adc
das
lds
jbe
push
inc
mov
mov
jecxz
xor
ror
test
mov
dec
sub
pop
cmp
cmp
daa
loop
jbe
adc
mov
or
cltd
cld
or
jge
xchg
jle
cmpsl
push
ret
push
jle
mov
xchg
fnstcw
bound
fidivrl
cs
adc
mov
loope
add
and
sub
test
rcl
sub
jge
sub
pusha
ficomps
jg
xlat
mov
sub
or
mov
imul
pop
into
cwtl
and
hlt
lret
lea
sbb
jg
add
jne
cmpsl
add
pop
pop
int3
inc
fdivl
gs
xchg
jnp
fbld
sbb
add
mov
idivl
dec
jne
aad
outsl
pop
enter
imul
repnz
cwtl
ret
jo
lea
pop
pop
jae
call
popa
mov
lods
cmpsl
insl
lret
insl
lds
inc
push
pop
iret
int3
mov
outsb
stc
in
insl
or
xchg
pop
lock
cmpsb
in
xchg
shr
sbb
shl
repnz
xor
andb
iret
out
dec
rolb
lods
pushf
ja
arpl
fdivrp
pusha
jmp
jb
pop
mov
insl
or
inc
jl
lds
les
jl
fxch
loopne
out
packsswb
push
xlat
ljmp
stc
jns
pushf
jmp
fstl
jmp
ljmp
xor
push
addr16
sbb
lods
das
push
mov
add
shll
hlt
ds
xchg
dec
js
sub
mov
sub
and
inc
mov
push
cmp
jne
cld
jbe
jno
gs
xchg
arpl
adc
inc
sbb
xor
sub
sahf
std
inc
cmpsl
cs
aad
fsubl
xchg
dec
aas
push
cmp
orb
lock
ljmp
es
repz
inc
jae
arpl
inc
adc
movb
aas
ja
test
clc
jge
cli
adc
iret
shll
adc
mov
ljmp
mov
int
sbb
push
ja
pusha
push
xchg
bound
pusha
ret
xor
mov
xchg
xlat
push
sub
push
pop
pop
sarl
fdiv
stc
rorb
rclb
outsb
xor
imul
stos
pop
lds
push
ljmp
mov
daa
xchg
sbb
scas
negb
mov
ss
dec
mov
pop
xor
sbb
and
movups
loop
xchg
mov
int
cwtl
add
loopne
mov
jns
adc
arpl
andb
mov
mov
adc
in
pushf
ds
sahf
into
ret
pop
or
icebp
in
push
iret
cmp
stos
in
nop
in
movsb
out
shrb
shlb
in
push
or
int3
in
test
cmpsl
add
aas
push
clc
xchg
pop
push
lret
aaa
shl
fstl
sub
scas
sti
cmp
inc
ficoms
dec
mov
mov
pop
cltd
pop
int3
popa
xlat
jnp
mov
sub
paddusw
es
stc
stos
punpcklwd
push
push
repz
jae
pop
inc
jmp
ficoms
dec
dec
aad
jl
xor
stos
insb
inc
and
or
out
mov
enter
push
cmp
aaa
inc
mov
incl
dec
mov
mov
jbe
fs
stos
cmc
inc
int
mov
add
mov
cmpsb
xor
in
or
mov
out
or
frstor
out
mov
outsl
pop
pop
jns
test
pop
xchg
push
xchg
frstor
pop
or
repnz
cmp
sub
les
mov
std
mov
pop
enter
loopne
mov
icebp
sbb
inc
sub
lds
jl
pop
mov
push
sub
cmpsb
or
call
add
mov
shlb
sbb
out
cmp
and
push
ljmp
push
loop
inc
pop
outsb
sbb
pop
shrb
dec
dec
inc
jmp
mov
sub
xor
subl
pop
push
fs
dec
aas
mov
and
test
popa
sbb
outsb
mov
repz
xchg
lcall
mov
sbb
or
mov
enter
pop
popa
div
lds
outsl
iret
loope
or
int3
sub
jg
pusha
add
loope,pn
sub
mov
and
test
jg
cltd
fildll
push
ljmp
aad
cmpsb
jmp
testb
ss
loope
scas
sbb
das
inc
add
sub
pushf
or
pop
pop
xchg
pop
insb
adc
sub
cwtl
add
sub
jg
addr16
mov
fadds
sub
dec
lahf
adc
and
adc
out
jnp
lahf
pop
or
or
cmp
jae
or
pop
cwtl
and
fmull
aad
shlb
or
jbe
jnp
lar
daa
xchg
sub
or
xchg
adc
sub
dec
or
aas
cmp
inc
jmp
mov
in
lea
dec
inc
and
pop
xchg
add
dec
push
pushf
int3
pusha
or
jge
sbb
popf
cmpsb
jae
jno
les
pop
mov
jne
push
sbb
push
mov
loopne
shrl
mov
jbe
sbb
ret
dec
clc
inc
inc
pop
outsl
add
scas
xchg
sti
sbb
pop
cmp
fnstcw
rcll
addr16
scas
inc
jne
bound
out
adcb
loopne
daa
or
sub
push
cmp
enter
cmpb
jno
pusha
pushf
ret
bound
sub
push
ret
stos
outsl
push
lcall
leave
pop
sti
int
push
pop
sub
cmp
pop
je
cs
mov
negl
sub
int3
test
fnstcw
sub
jle
xor
cs
sub
pusha
div
cltd
test
adc
mov
sub
mov
repz
mov
dec
dec
inc
jno
stos
cmp
test
shlb
mov
pop
fisttps
pop
inc
mulb
inc
mov
pushl
cmp
or
jl
cld
xor
es
cmp
jo
mov
add
add
mov
loop
xchg
fsubl
xchg
lock
push
pop
xor
ja
addl
or
movsb
mov
fadds
and
mov
cmp
in
inc
jno
mov
pop
xchg
je
mov
mov
icebp
out
xchg
mov
jns
mov
test
mov
pop
inc
mov
and
xchg
mov
ss
insl
push
icebp
xchg
js
mov
cmp
mov
adc
inc
push
pushf
mov
loope
and
shl
imulb
inc
or
mov
adc
mov
cltd
mov
lods
mov
int3
ret
dec
jae
pop
xchg
test
les
out
popf
sbb
out
dec
int3
or
pop
scas
mov
pusha
sbb
rsqrtps
push
ljmp
in
pop
movsb
inc
test
std
pop
clc
subb
dec
mov
xchg
stos
outsl
jmp
lea
inc
lea
pop
sbb
movsl
and
mov
mov
pushf
push
in
out
mov
sbb
mov
jecxz
ja
cmp
in
pop
mov
xchg
pop
xor
std
pop
jg
push
fidivrl
mov
stos
hlt
dec
shlb
sbb
hlt
fcompl
xor
daa
daa
clc
push
lret
inc
cmp
daa
subb
push
insb
add
and
push
mov
mov
popf
mov
inc
rclb
roll
and
loope
mov
aas
jnp
ffree
loop
sub
out
mov
jmp
mov
pop
das
cmp
lock
sub
dec
mov
inc
push
xor
jecxz
daa
aam
xchg
in
pop
mov
das
fbstp
hlt
jae
add
repnz
iret
cld
jno
push
inc
sbbb
aad
or
and
jmp
fimuls
ja
push
rcr
shr
pop
lcall
fdivl
mov
imul
add
cld
cmpsb
les
jae
jnp,pn
std
movsl
push
mov
mov
in
pop
adc
push
jo
neg
rorb
fists
idivl
lods
ret
adc
pop
push
jge
push
addl
or
nop
idivb
sub
fidivl
loopne
cmp
or
jp
add
jns
scas
insl
or
aad
stos
fcmovnb
arpl
mov
ret
pop
cld
dec
mov
fcomps
mull
lret
es
inc
ja
stos
lcall
or
data16
and
pop
cmp
mov
push
or
mov
nop
popa
and
jo
dec
mov
adc
inc
adc
insl
xor
mov
sbbb
dec
fs
in
mov
popf
pop
and
mov
iret
daa
push
or
rcrb
aad
pushl
shl
add
sbb
mov
cmp
callw
mov
call
insb
sarl
leave
inc
das
adc
sbb
cltd
sub
dec
push
mov
push
fdivrl
scas
sbb
mov
cmc
mov
test
out
mov
ja
adc
add
jp
aam
inc
mov
sbbl
clc
jp
gs
and
mov
push
jmp
dec
xor
or
push
ja
or
inc
loope
pop
shl
cmp
push
xchg
dec
mov
stos
insb
dec
aas
stos
inc
lahf
fs
add
outsb
push
es
aam
cmc
sbb
in
loopne
popf
mov
or
arpl
or
mov
push
bound
fs
jns
xor
insb
pop
subb
pop
in
cmp
clc
in
std
add
jne
inc
mov
jmp
xchg
xchg
dec
pop
cwtl
dec
movsb
in
emms
or
mov
cmp
xchg
sbb
call
insl
fidivrl
lret
xor
outsb
sub
daa
in
sbb
in
xchg
sarl
mov
xchg
xchg
pop
cs
inc
dec
lret
push
iret
aad
dec
xchg
adc
xchg
pop
inc
add
or
mov
movsl
fnsave
imul
adc
nopl
scas
jecxz
add
mov
imul
pop
cs
loopne
xor
lretw
adc
je
stos
lcall
pop
jmp
mov
ret
mov
xchg
negl
mov
or
out
test
lock
loopne
arpl
std
aas
xor
push
jbe
fcompl
push
loope
stc
mov
xchg
dec
out
xchg
enter
fsubrp
scas
aaa
push
lret
cs
shlb
ret
mov
cmpb
mov
sub
jno
rorl
data16
and
insl
and
xlat
int
mov
sbb
loopne
cld
orl
inc
xlat
scas
push
pushf
into
mov
adc
jge
jbe
xchg
loopne
push
lds
daa
es
movsl
and
dec
inc
and
ret
repz
mov
mov
movsb
push
out
hlt
and
nop
stc
lods
pop
or
fwait
adc
mov
es
fimuls
subb
icebp
aas
jno
pop
mov
pop
push
push
shrb
sub
sbb
pop
lcall
jno
and
xchg
mov
jl
lcall
out
push
outsl
mov
out
jl
sub
xchg
or
into
adc
fwait
lahf
pop
push
dec
push
mov
iret
pushf
push
arpl
test
mov
add
fildll
or
jle
les
or
int3
or
aad
xlat
xchg
or
xchg
mov
sarl
stos
sub
dec
ljmp
popf
loopne
jns,pt
out
jmp
lods
enter
sbb
leave
lods
pop
add
mov
std
push
aaa
cs
sbb
ss
lret
lcall
aam
inc
pop
push
popa
mull
inc
and
into
xchg
dec
xchg
in
or
pop
adc
out
push
out
aas
or
cmp
cmp
fsts
mov
jg
add
mov
push
jnp
cld
repnz
xchg
out
pusha
sbb
orb
pop
jecxz
xchg
dec
mov
cmp
xchg
popa
js
gs
into
xchg
mov
and
dec
stos
nop
sub
cli
or
xchg
push
xlat
in
fidivl
enter
es
pop
aam
mov
pop
test
ret
xor
dec
outsb
movsl
aaa
inc
dec
shll
push
js
fsts
mov
cwtl
les
ficoml
mov
dec
mov
mov
out
add
jo
or
hlt
xchg
scas
add
stos
filds
sar
lods
mov
divl
jns
jb
jg
cmpsl
sub
insb
or
clc
in
test
pop
jbe
mov
mov
sbb
lcall
ds
dec
setns
pop
inc
outsl
and
cs
pop
rorb
jae
stc
cmp
mov
int
pop
fs
cmp
fsubl
or
xor
filds
test
leave
jne
pop
push
xchg
shl
push
cld
scas
ja
ret
xorb
testb
lods
into
shl
int
ljmp
inc
inc
xor
add
shrb
dec
cmp
jl
add
es
push
lahf
push
and
xor
hlt
aas
mov
ljmp
notl
lock
mov
pusha
cmp
nop
addr16
std
cmp
mov
jnp
movd
lock
jno
dec
inc
outsl
jne
inc
es
loop
sub
cld
pushf
cmpsb
sub
jmp
push
jg
adc
jg
xor
xor
add
or
cs
jae
mov
fisubl
and
pushf
fdivp
cld
sub
filds
push
shl
jae
cmp
pop
jns
mov
xchg
lock
mov
stos
jae
test
xchg
arpl
mov
fcomi
sti
xlat
add
lods
loop
mov
bound
sub
or
xor
ss
lret
mov
mov
jns
pop
je
gs
fs
in
cmp
inc
inc
dec
ficompl
or
xchg
jo
inc
insl
jae
sbb
dec
push
ss
addb
xchg
cmpsb
and
arpl
inc
enter
jno
mov
push
sbb
out
les
and
in
je
out
jecxz
adc
sub
push
pop
je
push
cmpl
icebp
bound
pusha
xor
jo
sub
dec
add
cs
movsb
arpl
les
jge
and
ja
stos
inc
pop
jnp
test
inc
shlb
decl
xor
mov
aad
mov
mov
icebp
ja
cmpps
cmp
sub
ret
and
inc
ret
dec
rclb
pop
inc
mov
jl
xor
sarb
inc
pop
cmc
pushf
icebp
aad
gs
sub
dec
lods
popf
std
mov
cmp
xlat
add
mov
mov
jb
lret
pop
add
fildll
jle
stos
adc
packuswb
adc
pop
ljmp
out
pop
mov
cmp
loop
mov
lret
sbb
pop
mov
pop
xchg
bound
add
sti
sti
cmpsb
out
mulb
filds
and
out
pop
lcall
enter
imul
jo
cmp
mov
loopne
sarl
pop
repnz
arpl
insl
pop
lret
dec
mov
pushf
mov
xor
pop
jne
sti
pop
in
xchg
jae
sub
mov
imulb
mov
in
das
test
aaa
cmp
sub
mov
sub
popa
mov
hlt
lods
or
mov
std
int
aaa
jne
add
or
adc
and
leave
add
and
xchg
push
out
popa
mov
cmc
out
and
xchg
dec
fisttpll
jge
pop
xchg
fucomi
cltd
adcb
les
pusha
pop
cli
sti
sahf
cmp
dec
dec
gs
movsb
pop
jg
cmc
ljmp
lahf
dec
arpl
xchg
lea
sbb
hlt
add
scas
shlb
mov
icebp
cmp
das
popa
mov
fimull
daa
jb
leave
mov
adc
fucom
adc
mov
push
push
movsl
fidivrs
hlt
imul
bound
dec
xor
ja
cmp
adc
pcmpeqb
jl
push
mov
xor
pop
sbb
cmp
adc
pop
and
aam
loopne
orl
pop
repnz
cs
in
inc
cmpsb
mov
hlt
add
mov
in
push
fs
pop
mov
jp
push
sub
xor
ret
popf
aaa
repz
lock
sub
jns
sub
ficoms
fsubrl
fmull
jno
push
push
out
cmp
xchg
pop
lcall
add
lods
cwtl
lods
push
adc
ss
inc
xchg
jb
test
cmp
shlb
cmp
hlt
cld
jae
or
ljmp
pop
ror
push
or
mov
ja
inc
adc
cli
inc
adc
mov
sbb
ret
fdivrp
pop
repz
pop
stos
loop
stos
lahf
sub
adc
ljmp
push
fildl
dec
push
cli
push
mov
fisubrl
mov
fs
jl
xchg
push
popf
in
aam
push
mov
mov
and
lahf
sbb
cmp
inc
mov
aam
cld
movsb
shlb
jmp
addr16
std
bound
pushf
sub
fsqrt
mov
aad
and
pop
jp
sbbl
xchg
cwtl
loop
push
in
xlat
add
lret
imul
mov
mov
ds
inc
aaa
cmp
insb
push
jbe
xchg
push
mov
sbb
or
lods
rcr
shll
insl
xchg
loopne
dec
pop
jl
push
cmp
sub
xor
dec
or
jecxz
add
pop
pop
js
pop
adcl
bound
fwait
aas
dec
mov
mov
test
mov
andb
imul
jp
add
lret
pop
into
lcall
aas
imul
or
out
jmp
repnz
mov
sbb
sbb
mov
test
mov
int3
mov
dec
inc
or
or
iret
stc
or
test
sub
mov
jbe
aad
into
cmp
jbe
shr
sub
mov
inc
mov
xchg
jecxz
js
aaa
push
in
lea
jne
xchg
or
pop
pop
inc
mov
shr
aad
mov
xor
add
and
dec
ds
jg
test
pop
dec
or
fsubs
pop
daa
add
add
pop
bnd
loope
mov
ja
push
inc
xor
sbbl
repnz
sub
call
imul
or
sub
xor
popf
mov
xor
into
jne
and
mov
jno
inc
push
sub
bound
xchg
cmp
icebp
int3
and
aad
inc
add
pop
adc
sbb
add
or
sub
jne
jle
rcll
xchg
imul
mov
jnp
mov
in
outsl
push
daa
inc
stos
inc
inc
mov
jl
cmpsl
xor
adc
cltd
inc
mov
xlat
iret
xlat
inc
cmpl
lret
insb
sbb
inc
and
jns
hlt
sbb
stos
ficoms
shl
adc
and
outsl
out
and
adc
test
imul
jg
fs
int
pushf
iret
pop
cmpsb
mov
gs
push
call
popf
xchg
mov
mov
or
push
cmp
bound
push
or
and
test
gs
xchg
out
inc
ja
or
mov
leave
adc
stc
add
jmp
adc
aad
mov
movsb
int3
lods
into
jp
outsb
dec
xchg
arpl
or
mov
or
mov
aaa
scas
jmp
sbb
push
fwait
idivl
sar
inc
sub
and
cltd
mov
adc
push
jbe
push
lods
rorl
loope
js
in
aam
iret
ret
mov
cmpsl
fcoml
divl
pop
fnstcw
jne
add
sti
sub
adc
inc
addr16
mov
or
and
mov
loop
ds
call
pop
icebp
add
and
cmp
inc
jle
xchg
push
testl
push
cmp
mov
mov
leave
cmp
xor
push
fsubrl
add
js
jl
or
andb
js
jmp
and
jecxz
lret
and
sub
mov
push
dec
inc
inc
pop
aam
xor
xchg
xor
insb
mov
jle
sbb
std
sub
in
add
insb
xor
pop
or
mov
lcall
mov
cmpsw
adc
mov
cltd
stc
out
push
fistps
push
fidivrs
jg
test
mov
sub
inc
aas
lret
sub
fisttps
aaa
stos
int3
rcr
out
jecxz
inc
mov
pusha
dec
and
popf
xor
mov
pop
jo
std
repz
jp
mov
shll
movsl
sbb
push
jg
idivb
pushf
mov
lret
mov
adc
cmpb
pop
pop
jmp
popf
cs
popf
mov
lret
adc
xor
sbb
cmc
shll
mov
xchg
scas
fwait
loope
and
jae
dec
cld
push
aad
pop
pop
pop
mov
jb
jns
repnz
fsubrs
filds
dec
dec
sti
std
aaa
popf
sub
sbb
cmc
std
pop
pop
fistpl
rcl
in
adc
xor
out
pop
rclb
sub
or
mov
lret
mov
mov
sub
test
int3
mov
cmovp
frstors
mov
mov
mov
xor
xchg
mov
stos
cwtl
cmp
nop
icebp
or
ds
imul
jb
sub
inc
cmp
mov
cmc
jno
mov
pop
push
sbb
xlat
pop
les
xchg
loope
loope
test
int
mov
mov
fmul
adc
cmp
jge
subb
out
mov
inc
jnp
pop
xchg
out
call
mov
shlb
xchg
jg
popa
xor
and
mov
jecxz
bnd
ljmp
and
cmp
lods
sub
add
mov
shl
dec
leave
adc
call
inc
ret
js
lods
andb
cltd
bound
mov
cld
shrb
fldenv
insl
rcr
pop
andb
add
in
jo
jne
add
in
movsl
outsb
out
lahf
xor
lcall
xchg
sti
pop
push
sbb
pop
sti
xchg
cmp
idivb
mov
inc
pop
clc
fistps
shll
push
inc
aad
repz
add
loope
iret
xor
xor
and
pusha
popf
jg
push
dec
nop
test
push
fdivrs
inc
insl
xchg
push
arpl
adc
arpl
int3
push
cwtl
fildll
lret
or
aas
sbb
sub
inc
jg
dec
subl
imul
add
mov
cmp
adc
aaa
cmp
int
inc
subb
inc
aad
test
inc
inc
movsb
jp
mov
cmp
xlat
sub
jecxz
sahf
shrb
repz
jne
pop
fimull
dec
test
cmpsb
mov
push
push
jl
cmp
outsb
int
inc
mov
mov
push
hlt
add
mov
pop
clc
jbe
xor
test
in
mov
popa
shl
push
std
lea
flds
push
jns
addr16
test
sub
sub
push
mov
sbb
bound
test
sbb
mov
int
inc
push
je
jns
mov
leave
sbb
sti
cli
sbb
sahf
push
xchg
push
iret
cmpsl
ret
ret
lds
out
push
and
mov
pusha
fisubs
test
xchg
jae
add
mov
ds
fidivl
inc
sbb
jb
adc
loop
pusha
loope
dec
pop
out
cs
jle
in
xchg
dec
xchg
mov
sbb
mov
cmp
out
popa
mov
sbb
shrl
mov
sbb
lret
cmp
or
sub
mov
sub
sarb
insb
jbe
push
pop
aas
fs
loope
in
add
xor
mov
adc
out
and
sub
xor
adc
clc
and
push
in
xlat
mov
bound
xchg
cli
fwait
ss
inc
inc
cltd
fnstcw
cmp
stos
and
and
xor
xor
in
gs
sti
jbe
xor
xor
ss
adc
rcrl
or
xchg
lret
adcb
mov
inc
push
or
xchg
hlt
push
inc
stc
negl
insb
jo
imul
mov
jp
and
and
cwtl
out
pop
iret
imul
push
outsl
pop
jp
or
out
stos
out
mov
cltd
push
push
das
or
mov
push
stos
je
jecxz
dec
cmp
scas
inc
leave
ret
es
dec
xor
xchg
cmp
movl
fwait
ljmp
into
push
je
insb
lock
xor
test
mov
and
jle
or
push
sbb
push
pop
pop
pushl
bound
xor
pop
push
sbb
push
and
and
inc
adc
and
cltd
aam
sub
test
sar
sub
daa
adcl
in
jno
xchg
cmc
mov
rol
jmp
cmp
xor
xchg
and
jo
add
in
fs
push
or
loopne
stc
nop
xchg
xchg
mov
jg
xor
fldenv
push
pusha
fldl
loope
and
cmp
sub
popa
push
js
cmpb
dec
outsb
sbb
je
add
sub
mov
xchg
pop
in
data16
push
mov
lcall
ss
enter
push
mov
imul
cmp
jp
inc
sti
cmp
iret
jnp
fstps
inc
dec
std
jmp
pushf
jg
call
xchg
xor
add
pop
fucomi
stos
add
js
leave
lds
popf
or
std
aad
pop
pop
daa
xor
lret
inc
add
scas
pop
fmul
clc
sub
clc
iret
sbb
mov
mov
adc
sub
push
insl
or
aad
pop
push
mov
cmp
in
jp
loope
das
sbb
mov
and
aas
push
aam
inc
or
cli
pop
dec
mov
imul
adc
pop
out
out
push
mov
out
dec
xchg
dec
shrl
jae
cmp
fidivl
jnp
int3
fwait
dec
jne
dec
mov
mov
aas
ffree
sbb
sbb
aad
jl
or
mov
and
add
daa
cli
in
icebp
cmc
ret
pop
and
addr16
jecxz
inc
out
add
and
xchg
fcmovnu
test
in
cmp
add
add
cmp
stos
das
mov
loope
mov
xorb
or
or
pushw
or
sbb
lock
and
mov
sbb
fadds
mov
fucomip
popa
mov
adc
pop
lock
cwtl
mov
jecxz
add
int
iret
jae
aad
pop
or
idivb
or
push
into
ds
jp
jae
ret
ss
inc
in
scas
js
add
xor
sbb
xor
jmp
cmc
push
dec
mov
sbb
jo
push
into
sub
push
repz
sbb
sub
sub
adc
lcall
inc
xchg
mov
sbb
cli
int
rcr
out
cld
cmpsl
mov
jmp
and
cmp
push
xor
popa
scas
inc
jnp
loopne
jmp
or
cmp
jo
mov
insl
out
imul
int
inc
in
nop
addr16
jp
adc
ljmp
jmp
lds
push
repz
movsb
jg
cmc
subl
jae
imul
pop
jmp
jge
push
mov
push
ss
jl
sbb
negb
insb
mov
fs
dec
and
inc
fcomps
adc
and
mov
into
sbb
cli
pop
mov
fcomip
cmp
movsl
mov
aas
sahf
sbb
cmpsb
stos
andl
pop
mov
ret
bound
fistpl
lea
pop
xchg
cmpsl
mov
inc
and
pop
push
or
xor
mov
xlat
jmp
fwait
inc
bound
mov
adc
mov
or
mov
jecxz
sbb
dec
mov
push
filds
mov
fs
adc
pop
mov
or
fimuls
sbb
pop
movsl
or
fiaddl
or
add
mov
push
push
imul
test
xlat
push
push
xor
insl
xchg
rolb
lahf
out
pop
mov
xor
push
das
cmp
or
sub
cmp
cmp
das
dec
adc
sub
cwtl
xchg
ret
popa
test
insb
jecxz
jb
out
sbb
jnp
jne
std
xchg
fists
push
xor
mov
sarl
or
xor
and
dec
or
sub
clc
daa
push
aam
pop
cld
in
push
jo
loop
data16
fstpl
fsubs
dec
push
imul
adc
push
sbb
push
mov
int3
cmc
xchg
push
and
ret
in
xchg
shll
mov
es
pop
xchg
dec
xor
sbb
xchg
push
push
inc
test
das
jge
movsb
xchg
mov
clc
pushf
push
inc
dec
pop
popa
out
lods
popf
mov
pusha
jbe
xchg
repz
inc
rcrb
lret
cmpsb
call
push
push
std
cwtl
mov
cmp
jmp
lods
sub
lret
dec
imul
cmp
aaa
mov
mov
or
iret
pop
mov
cmp
cld
test
lcall
pop
cltd
add
push
mov
orb
inc
shlb
popa
cmp
or
cmpsl
add
mov
fadds
fisttps
xchg
cwtl
and
andl
shll
adc
adc
add
mov
cmp
in
jbe
cmc
push
fs
mov
mov
mov
pop
pushf
testb
dec
aas
clc
stos
sub
enter
dec
shl
cmp
mov
mov
int
dec
sub
addr16
ficoms
nop
andb
jecxz
in
lea
out
xchg
jnp
out
inc
push
cltd
pushf
neg
lds
test
lds
and
inc
out
rorb
ss
sub
out
xchg
push
pop
popa
xor
add
cmp
xchg
out
cmp
and
jecxz
icebp
xor
inc
mov
jp
mov
push
push
sarl
mov
and
mov
enter
cmp
add
int
call
pop
or
movsb
jge
mov
push
inc
add
push
pop
lock
lahf
call
jg
jecxz
stos
or
inc
and
and
mov
imul
xor
push
xor
js
aam
pop
inc
push
popf
push
mov
and
popa
jae
in
sub
or
fstpl
push
cmp
ss
ret
push
int
mov
lret
sbbl
xlat
inc
subb
sbb
ret
inc
mov
xor
loop
rcrb
jl
es
xor
int
scas
xchg
jb
sub
adc
xor
sub
xchg
pop
pop
sub
ret
outsb
adc
nop
push
pushf
jge
or
test
dec
cltd
outsb
add
out
cmpsb
cli
mov
bts
push
repz
jg
out
xor
repz
xchg
push
push
cmp
sti
sti
popa
stos
dec
test
mov
leave
ret
xchg
shl
xchg
daa
out
adc
repz
imul
fistpl
js
dec
push
jne
stos
test
ret
ds
xor
cli
fcomi
nop
push
jb
sahf
aaa
cmp
adc
mov
or
repnz
out
lcall
shl
xlat
mov
jb
or
or
jge
ret
pop
ja
mov
stc
leave
pop
dec
shlb
xor
ret
shll
sbb
faddl
icebp
adcl
sbbb
cltd
in
cli
out
call
xchg
mov
jbe
sbbb
loop
icebp
mov
add
js
divl
push
lods
and
mov
nop
mov
aaa
sti
cmp
aam
imul
mov
aad
test
dec
dec
lods
ss
sbb
out
xor
loopne
mov
mov
mov
sub
loopne
jae
loope
mov
adc
xchg
loope
xchg
out
or
dec
mov
push
ljmp
roll
jae
out
jbe
mov
push
shrb
push
outsl
jle
sub
push
out
sub
or
loopne
ja
rclb
or
jo
gs
les
cli
dec
aam
push
movsb
adc
jp
aad
mov
gs
push
jns
mov
loopne
movsb
xor
push
or
sbbl
dec
mov
jb
mov
movsb
fwait
leave
cwtl
xchg
loopne
sub
enter
jb
xor
add
mov
fwait
pop
xchg
xchg
in
adc
inc
mov
adc
addl
and
in
inc
dec
push
rolb
cmp
imul
xor
mov
popf
mov
movsb
in
jle
and
or
lods
xchg
sbb
mov
cli
push
mov
rcll
or
ds
cwtl
negb
mov
cmp
xchg
addb
jb
inc
mov
jmp
movsl
roll
test
xchg
lahf
push
mov
icebp
jmp
xchg
nop
clc
call
out
mov
jle
mov
stc
sub
push
ljmp
pop
mov
lret
mov
jo,pt
jno
xlat
sbb
aad
aas
push
jl
cmpsl
jle
and
and
pop
mov
xchg
xchg
xchg
inc
fdivl
sbb
push
out
movsb
and
pusha
and
lods
and
aaa
push
dec
mov
cmp
jbe
sub
xor
adc
inc
cmp
cltd
shrl
iret
push
mov
xor
repz
loope
into
push
xchg
rep
dec
mov
data16
add
jo
sub
push
sub
adc
cmp
es
inc
imulb
cmp
popa
add
stc
push
int
js
fldenv
pop
ret
and
popf
xor
push
insb
and
fs
push
push
jmp
lret
scas
pop
cltd
ret
sub
mov
addr16
in
pusha
mov
arpl
loop
xchg
dec
cwtl
add
sbb
mov
test
pop
dec
leave
fwait
aad
sbb
and
fists
push
push
pop
mov
push
xor
pop
inc
and
stos
mov
repz
lea
loop
jae
movsb
pop
fs
aas
adcb
pop
stos
sub
or
movb
or
jl
lahf
es
pop
jno
cli
dec
scas
imul
inc
add
sub
aam
mov
mov
xchg
jp
sub
push
sbb
pop
jno
adc
xchg
insb
popf
push
push
loop
fdivl
bound
loopne
ficomps
into
sbb
xchg
movsl
mov
fsubs
mov
in
xchg
in
in
cmp
jmp
adc
mov
in
push
mov
xchg
mov
aaa
movsl
call
push
add
add
movsb
fdivrl
mov
push
dec
addr16
add
repnz
push
mov
in
push
xor
push
jle
dec
xor
scas
cwtl
cmpsb
xchg
lds
cwtl
imul
dec
fsubrs
mov
cmpsb
xchg
xor
xor
mov
xchg
push
push
xor
rorb
jecxz
testb
xchg
popa
hlt
loop
fcmovu
mov
jo
jnp
popa
fiadds
addr16
xor
push
shr
insl
xor
leave
aas
sub
sub
mov
fcompl
or
pop
push
mov
mov
outsl
adc
daa
std
jg
mov
mov
cmp
cli
dec
sbb
sbb
push
pop
sbb
enter
fistl
insb
jl
or
dec
sahf
xchg
and
jle
in
andl
mov
lea
or
lea
in
cmc
xchg
hlt
iret
lods
mov
sbb
and
inc
lock
fwait
sub
js
into
mov
xchg
pop
push
adc
or
cmpsl
add
in
in
and
adc
andb
test
cmc
mov
ret
jle
bound
mov
inc
xchg
push
notb
sbb
popa
sbb
mov
dec
loope
inc
xchg
mov
mov
test
xor
push
int3
push
shlb
push
dec
pop
stc
leave
dec
lds
cwtl
and
scas
or
inc
andl
mov
mov
je
orb
mov
fldt
dec
inc
mov
imul
xchg
fldl
outsl
ds
es
scas
sub
popf
ficompl
aas
xchg
sbbb
fdivs
xor
cmp
cmp
add
mov
scas
xor
out
inc
mov
inc
pop
pop
xchg
cmc
insl
imulb
add
xchg
jbe
dec
mov
dec
and
ds
add
bound
clc
outsb
test
ret
imul
das
fs
mov
mov
andb
lcall
mov
rolb
sbb
jb
rcrb
and
in
fnstcw
test
cmp
lret
test
jae
inc
cmc
aas
dec
cli
pushf
xor
fwait
sbb
cli
out
inc
int3
shr
mov
je
loop
and
add
dec
dec
push
out
loope
add
fimull
dec
adc
lea
push
roll
dec
test
std
adc
insl
sub
add
add
lret
inc
repnz
dec
test
movsb
mov
sbb
sub
mov
or
and
cltd
pop
addb
cmp
inc
fnstsw
push
ficompl
pop
add
call
xchg
lret
dec
pop
mov
sub
sub
cmp
leave
mov
jnp
sbb
pop
pop
xchg
add
mov
dec
pop
out
xchg
subl
xchg
aam
int3
sub
xor
icebp
inc
cmp
negb
in
or
jl
xchg
popa
push
sbb
and
push
adc
jb
inc
jmp
jecxz
popf
ret
lret
cli
pop
insb
xor
insb
push
lds
out
fisubs
push
aas
clc
push
jg
xor
or
mov
aad
sarl
push
in
xchg
push
jno
jae
and
addl
stos
cmp
xchg
loop
jle
ret
jg
mov
pop
mov
jl
jno
cmp
stc
xchg
mov
iret
push
addr16
fnsave
js
icebp
mov
sub
in
stc
out
xchg
adc
cmc
lock
sbb
rclb
mov
cvttps2pi
pusha
lds
mov
xor
outsl
in
fiadds
cmp
imul
les
inc
test
mov
fidivrl
orl
inc
pop
or
decl
dec
popf
insb
scas
fstpl
scas
sbb
stos
xchg
pop
in
jb
roll
popf
jp
lret
mov
fs
inc
xor
and
cli
mov
adcl
out
mov
mov
xlat
aad
jne
sub
sti
insb
mov
mull
arpl
lcall
or
jb
mov
sbb
cmp
cmc
je
mov
mov
mov
sti
or
pop
and
lods
jmp
and
lock
cli
pop
dec
push
sbb
sbb
mov
int3
inc
andl
xchg
js
add
mov
outsb
fldt
arpl
lret
xchg
ret
mov
inc
iret
push
pop
nop
cmp
nop
lcall
mov
in
or
lock
loope
ds
sti
add
mov
pop
cmp
or
popa
mov
xchg
inc
test
push
xor
into
push
pop
xchg
cmp
mov
add
sub
movsb
popa
mov
pop
add
in
sub
xchg
aas
aaa
jns
mov
ret
bound
mov
mov
xchg
js
scas
or
test
push
inc
xchg
mov
repz
dec
mov
pop
in
iret
sahf
pop
pop
inc
clc
fisttpl
sub
push
nop
stos
loopne
adc
les
or
push
dec
fldl
xor
insb
es
out
jmp
sti
popa
in
mov
add
inc
cmp
movb
inc
shlb
sti
sbb
cmc
fadds
stos
inc
jbe
sub
and
mov
adc
lds
xlat
clc
orl
data16
enter
inc
test
pop
xchg
daa
mov
fs
int
hlt
int
dec
setle
sbb
jb
xor
cmp
nopl
xchg
in
jne
jbe
mov
ljmp
xchg
add
push
dec
ret
movsl
outsl
neg
jne
push
mov
sub
jl
adc
aam
push
call
mov
push
mov
in
into
xor
sub
push
push
jo
sub
sbb
out
lahf
test
pop
lds
xor
pushf
sub
and
inc
dec
pop
add
sbb
inc
shl
stos
sbb
or
nop
hlt
adc
fistpl
pushf
add
dec
sbb
xchg
mov
stc
dec
adcl
leave
xor
std
cmp
or
es
cmpsb
xchg
ret
movsb
popa
mov
adcl
adc
cmp
lcall
lods
and
out
out
shlb
lret
jae
add
mull
push
lock
punpckldq
cwtl
mov
movsb
sbb
cmp
lods
push
pop
mov
adc
sbb
negl
pop
and
jge
sbb
push
mov
out
and
pop
inc
and
int3
xor
dec
cmp
cmpsl
pop
pop
rorb
leave
sahf
insb
fwait
or
mov
cmp
shl
xchg
mov
sub
jecxz
pop
into
call
jmp
pop
mov
add
and
adc
loope
ret
mov
call
xor
cld
in
int3
push
and
daa
mov
push
repz
outsl
jae
mov
ret
mov
mov
popf
imul
push
das
roll
scas
cmp
mov
pop
xchg
mov
and
les
imul
loop
loopne
mov
jecxz
and
mov
fimuls
mov
mov
fsts
push
pop
cmp
aad
hlt
adcb
dec
pop
insb
dec
jo
cltd
stos
xlat
sbb
into
inc
dec
mov
sub
add
gs
mov
scas
mov
xchg
fcomps
jge
or
xchg
mov
push
arpl
mov
push
push
sbb
sbb
xor
push
lds
int3
push
stos
imul
stos
int
inc
push
pop
jbe
mov
add
xor
out
test
cs
fldenv
or
hlt
mov
dec
cmp
pushf
pop
add
js
mov
and
mov
rorl
movsb
sarl
and
shl
push
inc
jmp
sub
loopne
jns
xchg
out
imul
rcr
ficoml
or
sbb
push
xlat
and
sub
inc
dec
pop
insl
sti
movsb
push
es
mov
dec
outsl
cmp
xor
pop
aad
out
sub
or
daa
mov
xchg
enter
cltd
call
in
mov
mov
aam
add
sub
lret
imul
ror
lods
push
les
dec
xchg
lea
xchg
jmp
or
and
inc
add
repz
add
inc
jmp
mov
pop
mov
xor
inc
sahf
mov
dec
push
lea
dec
xchg
xlat
icebp
out
repz
sub
xchg
adc
out
aas
jle
loope
inc
add
shlb
inc
mov
inc
ret
mov
data16
pop
int
push
cld
daa
mov
mov
test
daa
mov
dec
fsubrp
ficompl
fidivl
loopne
xlat
mov
out
fwait
push
inc
aam
or
adc
xor
daa
sub
cmp
jmp
xchg
mov
adc
cwtl
cmp
repnz
mov
push
out
sub
hlt
pushf
dec
xor
movl
and
sub
mov
lock
std
mov
sbb
xor
inc
lcall
popf
mov
dec
test
mov
mov
sub
xor
sbb
movsl
je
jo
and
pop
mov
push
fisubl
jns
or
mov
jg
scas
loope
out
add
pop
aad
xor
in
ret
out
js
ficoml
inc
xchg
pop
popf
jo
loop
cld
in
out
and
jp
add
shrb
lcall
jle
pop
xchg
data16
dec
mov
fnstsw
cmpsl
mov
pop
mov
jb
mov
jo
cmc
xorl
inc
rcrb
enter
imul
xchg
in
mov
shlb
lret
in
ja
xchg
xor
mov
sbb
dec
test
in
mov
push
xchg
je
mov
mov
add
mov
rcll
dec
iret
bound
jo
out
push
testl
cld
ficoml
add
jns
test
jo
popf
cmpsl
jne
cmp
jbe
mov
dec
xchg
mov
jecxz
mov
xor
aad
in
or
dec
imul
mov
mov
jecxz
out
aam
insb
out
inc
jmp
inc
cwtl
call
xor
fwait
int
dec
pop
adc
inc
inc
dec
aaa
cld
bound
pusha
mov
add
xchg
shlb
pop
push
shl
pop
add
or
std
mov
dec
into
insb
inc
daa
jb
lret
gs
lret
test
outsb
jo
scas
inc
sub
loop
mov
mov
scas
dec
mov
aaa
scas
fildll
dec
arpl
dec
push
mov
lock
push
mov
push
dec
mov
cmp
jo
push
iret
stc
mov
popa
pop
lock
lcall
daa
xchg
mov
jmp
adc
jle
inc
and
push
dec
mov
rolb
scas
mov
adc
scas
mov
ret
adc
cmp
scas
cmp
inc
cli
stos
mov
push
bound
orl
fs
shll
cmp
push
dec
arpl
movsb
sub
iret
sub
adc
mov
lret
jo
loopne
rorb
xchg
mov
xchg
cmp
ret
popl
jp
cltd
sbb
push
movsl
jnp
mov
loope
test
out
sub
cmp
in
fwait
into
ret
dec
rorl
into
movsb
ja
dec
ljmp
mov
sub
aaa
add
popa
pop
mov
adc
popa
xchg
inc
mov
call
idivl
cmp
xor
pop
jmp
pop
cmp
bound
repz
sbb
pop
mov
nop
sub
das
data16
cli
sbb
out
mov
cmc
fidivrs
pop
inc
lcall
cld
orb
dec
lcall
cmpsl
mov
mov
push
dec
cmp
pop
adc
and
sti
mov
inc
and
mov
movsb
ret
mov
inc
inc
testl
popf
mov
mov
xchg
sbb
ret
jg
cmp
mov
icebp
inc
mov
or
dec
mov
pop
loope
mov
adc
es
cmp
iret
xchg
mov
adc
sti
push
hlt
push
dec
hlt
and
adc
push
leave
push
je
repz
test
push
and
sbb
sub
sbb
and
idivb
pop
testb
out
movsb
cpuid
cli
mov
sub
or
jmp
lahf
sbb
inc
testl
mov
and
lock
push
sti
and
std
jg
je
lret
mov
push
jo
mov
sbb
sub
push
jnp
cmp
daa
cmpb
jno
js
add
shll
lcall
fimuls
add
call
push
sbb
aad
cmp
scas
or
jg
xorl
filds
mov
sub
aad
jle
frstor
in
pop
pop
addl
or
ss
add
lods
pushf
cmp
pusha
ficomps
cmp
out
adc
daa
or
sbb
xor
lcall
mov
sahf
movl
jno
xchg
pop
jmp
mov
xchg
sub
lea
stos
and
test
fildl
cmp
xor
pop
jecxz
lahf
icebp
inc
out
push
or
cltd
xchg
mov
xchg
or
pusha
mov
fidivl
fmull
mov
mov
lods
mov
pop
lds
imul
inc
inc
pop
outsb
adc
sbb
xorb
mov
pop
in
fcomps
into
rcrb
cmpsb
sub
mov
lcall
mov
bound
xchg
test
jae
pushw
aaa
xchg
wrmsr
test
mov
int3
iret
sbb
mov
xchg
mov
out
lds
jb
mov
jmp
imul
cltd
lret
mov
xchg
imul
scas
stc
lods
push
and
mov
push
icebp
pop
mov
sbb
aaa
test
clc
notb
pop
xchg
sbb
loopnew
mov
nop
shll
cmc
pushf
xchg
in
push
or
insl
push
test
pop
inc
or
gs
push
push
hlt
fs
mov
out
sbb
jge
pop
int3
sbb
movsb
fdivrl
call
pop
sbb
pop
int
jo
jmp
imul
inc
add
outsl
cs
sub
sbb
out
xlat
ja
mov
test
and
pop
mov
fsts
mov
inc
mov
faddl
adc
lahf
clc
xchg
mov
fstps
mov
or
sub
adc
adc
mov
bound
mov
insl
cld
lahf
push
inc
in
sbb
lods
in
push
adc
or
push
mov
bound
mov
clc
fimull
xchg
push
jae
call
add
cmp
mov
sbb
add
gs
mov
int
movsb
dec
xchg
int3
jg
fs
and
and
push
in
xor
xor
push
into
sbb
test
dec
adc
add
aad
enter
sbb
mov
cwtl
fistl
data16
add
loope
aaa
xchg
andb
mov
notb
outsb
sti
push
mov
movq
addr16
push
add
adc
hlt
lock
cmp
cmp
inc
sub
add
mov
pop
and
pop
lea
fdivr
cs
pop
mov
xchg
or
mov
mov
mov
mov
inc
aam
dec
sub
int
pop
jae
pop
mov
or
xchg
sbb
xchg
enter
lahf
push
inc
pop
insb
inc
bound
push
sub
mov
pop
dec
sbb
sub
jg
lret
std
sti
jl
pop
les
fsubs
cmpsl
pop
and
xor
fnstenv
test
mull
or
popa
jmp
mov
cmp
aam
sbb
xchg
jns
ja
mov
cld
ror
inc
mov
mov
aas
fnsave
xorb
fadd
cli
pop
xchg
jbe
push
out
mov
lock
or
aaa
hlt
cmp
mov
jno
sub
dec
sbb
test
sbb
outsl
inc
inc
lret
test
adc
cwtl
jmp
jge,pn
je
stc
fldt
xchg
or
and
lods
sub
out
icebp
popf
and
fimull
sub
in
jne
adc
push
fadds
mov
inc
mov
scas
sbb
jns
sti
inc
sbb
jae
lea
mov
sbb
lahf
lods
xchg
shlb
cmpsb
lea
icebp
test
mov
jbe
push
push
fmul
gs
push
xor
ljmp
fcmove
jp
sbb
pop
cmp
mov
cld
fdivrp
add
pop
in
jo
leave
into
dec
jb
mov
imul
inc
mov
sysenter
call
xbegin
inc
fnsave
faddl
ds
je
jl
xchg
out
xchg
loop
inc
dec
pop
inc
sarl
jge
jecxz
sbb
js
xor
out
cmp
or
sbb
or
cli
mov
xchg
jne
rorl
mov
es
into
mov
adc
xchg
jle
add
inc
sbb
xchg
cwtl
bound
imul
pop
ficompl
pop
adc
dec
sbbl
int3
inc
shll
add
and
inc
cmc
leave
xor
xor
and
fsubrl
mov
sub
ja
cmp
test
out
cwtl
push
fadds
and
loop
out
lods
pop
out
add
loopne
sbb
mov
xchg
and
ljmp
imul
jne
pshufw
rcr
mov
out
subb
inc
push
sub
push
pop
adc
pop
push
inc
push
or
push
es
and
cmp
and
sub
mov
dec
adc
dec
fsubrl
mov
mov
lds
mov
in
push
xlat
jp
movsb
mov
lcall
pop
cld
pusha
movsl
xchg
addr16
lea
mov
decl
std
jp
repnz
dec
adcb
sub
adc
and
xchg
inc
and
pop
mov
and
jbe
xor
sahf
sbb
rol
push
jmp
fisubl
sti
call
int
aam
fdivl
ds
add
push
pushf
nop
and
mov
jmp
cmpb
je
push
jl
dec
jo
cmp
repz
inc
cltd
js
cmp
and
rcrb
mov
dec
lret
in
sub
pushf
xchg
cmp
shl
xchg
loop
mov
dec
outsl
repz
cwtl
call
sti
xchg
inc
lds
ljmp
imul
call
mov
pop
xchg
push
sub
lds
dec
into
jge
and
add
push
jb
nop
or
ret
xor
sbb
popf
xchg
mov
lret
sbb
iret
loope
push
or
xchg
adc
jle
insb
dec
cli
jno
imul
rcrb
insl
push
xor
add
dec
jbe
in
pop
call
lock
or
xchg
pusha
jnp
hlt
incb
iret
clc
jmp
cmc
lret
nop
cltd
dec
jp
insl
xchg
aas
out
scas
fcoms
loope
sub
lods
inc
clc
mov
mov
add
xchg
and
push
xor
lcall
bound
xchg
inc
mov
ret
xor
aad
popf
and
out
inc
jle
loope
stc
dec
rcrl
jecxz
jp
pop
stos
es
and
or
neg
mov
push
leave
hlt
jle
call
sahf
fidivrl
push
xchg
adc
jno
and
or
pusha
movsl
push
sub
fsubl
push
leave
lahf
mov
xchg
inc
push
lret
mov
cmp
jp
hlt
outsb
aas
pop
mov
imul
imul
cs
pop
aaa
mov
int
pop
push
bnd
lahf
fadd
sub
dec
ljmp
test
aaa
and
push
cmp
sub
push
pop
insb
mov
jae
jns
dec
adc
sbb
dec
push
pop
and
mov
push
adc
sahf
popa
clc
push
and
test
leave
pop
xchg
cmp
fisttpl
ret
lea
xor
cmp
call
iret
mov
mov
in
arpl
fcomip
xor
loopne
rcl
mov
jno
xlat
pop
js
pop
or
rcrb
outsb
mov
psrld
in
push
or
jb
mov
imul
cmc
idivb
dec
and
bt
mov
stc
idivl
add
jne
and
stos
outsb
push
rol
add
cmp
aaa
fsubrs
mov
repz
repz
push
jae
loopne
mov
xlat
cwtl
cmp
cmp
xchg
mov
je
sub
inc
jbe
js
xor
pop
sarb
xor
pop
cli
mov
cmp
scas
add
fidivs
mov
rcrb
mov
push
inc
mov
push
add
adc
mov
and
loopne
xchg
stos
lret
aaa
decb
pop
aam
xcrypt-ctr
cmpsl
sbb
jge
pop
cli
or
and
inc
shlb
push
stc
stos
xor
add
int
xorb
out
and
xchg
sbb
xchg
or
push
mov
out
sub
or
repz
jg
fsubrl
or
sarl
dec
xchg
mov
mov
je
clc
loopne
cmpl
jmp
sti
aam
lret
push
scas
jmp
jp
pop
mov
cmpsl
jno
pop
lret
out
lods
xchg
into
jle
leave
das
xchg
mov
call
xchg
push
inc
cmp
imul
sub
pushf
cltd
leave
stos
sub
mov
jmp
scas
pop
out
pop
cmp
loop
mov
cmpsl
jae
and
inc
testl
out
bound
and
and
adc
pop
fcomp
shll
mov
adc
mov
or
hlt
cmp
arpl
adc
and
mov
cmc
mov
mov
iret
ss
xchg
gs
sub
mov
add
add
pop
push
xchg
std
jp
dec
or
aas
xor
test
pop
repz
push
mov
push
cs
fisttps
and
in
cli
mov
mov
clc
sub
jo
fbstp
inc
push
adc
lret
pop
adcl
cmp
jns
adc
sti
iret
xchg
inc
and
jg
jae
sbb
inc
lret
mov
xor
mov
xor
push
ds
mov
push
imul
add
repz
jl
fdivr
outsw
popa
addr16
jmp
shrl
dec
push
xor
movsb
mov
icebp
push
stc
repnz
aad
ja
das
push
call
mov
xlat
ljmp
subl
sahf
lods
or
rcrb
sahf
imul
push
mov
xchg
mov
mov
iret
shrb
and
inc
or
push
jle
and
aaa
vunpcklps
repz
mov
gs
out
sub
fldenv
in
les
cmpsl
dec
jno
lods
jne
shll
out
fistl
and
mov
jecxz,pt
popf
in
xor
lahf
xchg
sbb
and
aad
push
mov
repnz
mov
sti
hlt
imul
repz
inc
sub
xchg
aas
xor
fs
outsb
out
push
jge
in
adc
fdivrl
and
sub
mul
mov
jge
dec
loope
je
mov
add
fstpl
repnz
lds
adc
xchg
ficoml
enter
nop
adc
fiaddl
in
xlat
dec
xor
call
push
or
neg
push
stc
jno
in
repnz
into
cmpsl
mov
lods
mov
outsb
push
add
js
ss
mov
mov
or
sub
gs
sub
lods
dec
mov
mov
mov
cwtl
jmp
fnstcw
loope
jne
bound
push
test
mov
ljmp
mov
xor
mov
push
and
aas
mov
lods
sbb
mov
push
xchg
imul
inc
aad
cs
mov
mov
rcrb
jg
inc
aam
jge
fsubrl
insl
pushf
ds
ret
mov
sbb
ss
cmc
aaa
mov
mov
iret
or
aas
push
push
stc
shrb
rolb
movsl
add
dec
mov
jns
mov
rorb
jmp
sbb
or
pop
pop
ja,pt
movsb
movsb
or
and
mov
adc
jb
push
movsb
call
aad
pop
fbstp
ja
int3
loop
movsl
sub
out
imul
imul
add
xchg
add
fs
ja
sti
and
aaa
or
stos
dec
cmp
xchg
xor
bound
xor
out
lahf
imul
sub
insl
sti
add
notl
push
jbe
roll
xlat
mov
cmp
cltd
insl
insl
mov
les
fldcw
dec
cmpsl
imul
inc
sub
ja
ret
sub
rclb
adc
je
mov
add
adc
scas
xchg
decl
pop
cli
and
mov
fcmovu
jo
cmp
jle
or
adc
sub
dec
bound
add
add
mov
imul
sub
mov
out
adc
sub
mov
xchg
test
das
inc
addr16
decl
push
mov
mov
add
orb
sub
inc
pop
xor
pop
icebp
repz
ret
jle
jo
sbb
pop
movsb
loopne
enter
inc
pop
cmp
dec
cs
pop
xlat
push
test
adc
cmp
mov
sahf
mov
jo
lret
mov
xchg
pop
xor
xor
mov
pop
mov
cmp
sub
sbb
daa
jmp
sti
push
xchg
and
lods
xchg
push
and
addr16
mov
and
loop
lods
out
lahf
xor
push
sbbl
inc
dec
fimull
std
ljmp
xlat
addr16
or
fidivrl
lock
mov
sub
or
sbb
and
sbb
mov
and
xchg
xor
pusha
gs
cli
xchg
cwtl
popf
cmp
iret
jl
lods
movsb
mov
and
in
stc
prefetchwt1
in
add
fwait
mov
ss
mov
ja
repnz
cltd
adc
sahf
push
std
bnd
in
xchg
imul
sub
inc
mov
dec
lret
or
xchg
iret
pop
xor
inc
or
add
dec
movsb
dec
dec
aam
loope
adc
sbb
bound
shl
sahf
fidivl
addr16
out
int
scas
insl
push
mov
ss
mov
jle
mov
iret
jb
leave
dec
out
enter
jno
push
cmp
xchg
pusha
stos
aaa
xchg
sub
sbb
test
adc
jbe
and
xchg
pop
call
sub
xor
mov
aam
call
in
mov
test
je
cmpsl
nop
adc
push
sub
xchg
mov
dec
loop
push
pop
mov
lods
add
jmp
fcompl
arpl
test
or
mov
sbb
sahf
cwtl
mov
test
jecxz
icebp
mov
or
or
cmpsb
cmp
add
mov
insb
mov
mov
sub
repz
ljmp
push
add
mulb
cmp
sahf
bound
enter
jns
jno
pop
xor
hlt
mov
xchg
addr16
movsb
sbb
pusha
int
jle
pop
inc
sbb
add
outsl
orb
sbb
shl
movb
adc
int
mov
sti
in
mov
push
mov
xchg
xor
xchg
stos
or
jmp
and
mov
mov
loop
fsts
rorb
jne
aaa
shrb
sub
shll
or
imul
jmp
roll
jo
btc
es
xchg
mov
cmpb
inc
mov
ljmp
dec
stc
insl
popa
or
cvtps2pd
ss
cli
or
adc
xchg
mov
clc
ss
stc
gs
lods
push
mov
test
inc
inc
add
cmc
mov
fnsave
dec
shlb
and
add
xor
mov
mov
js
pop
subl
pushf
in
push
in
jmp
testb
mov
sub
jae
jb
xchg
sub
cmp
mov
ret
imul
pop
movsl
xchg
xor
mov
jmp
add
ljmp
sub
clc
out
adc
outsl
pushf
shll
das
lret
popf
nop
dec
and
stc
push
xchg
scas
mov
insb
aaa
fwait
push
hlt
and
js
inc
mov
sub
sub
fcmove
fistpll
leave
dec
imul
pop
and
imul
cmc
sbb
cmp
test
cmc
popw
sahf
xchg
push
fsubp
push
std
mov
xor
xor
inc
push
incl
fstpt
mov
xlat
pop
jnp
into
sub
push
lcall
adc
cmp
out
cld
in
add
push
mov
imul
and
mov
stc
xchg
pushf
mov
sub
cltd
dec
sub
sub
add
rorb
in
inc
gs
outsb
dec
pop
xor
shrb
pop
repz
mov
ljmp
xor
cmp
sub
frstor
icebp
adc
jl
and
mov
push
dec
mov
scas
neg
xor
pop
in
sub
ja
movsbl
adc
ret
mov
aam
xor
jl
push
lcall
jne
lock
ds
xchg
popa
nop
add
or
xlat
push
lret
push
add
add
and
mov
push
test
xchg
int
push
daa
shr
ljmp
out
pushf
or
incl
in
repnz
fs
mov
subl
stc
sub
aaa
sbb
xchg
fsubrs
out
mov
push
mov
mov
lods
sbb
sbb
mov
pushf
sbb
scas
and
leave
aas
jno
push
sub
lds
in
jl
mov
ret
rcrb
lods
stos
fcoms
fmull
xor
dec
divl
pop
jmp
pop
or
in
push
jecxz
mov
cmc
jp
xchg
ret
out
mov
jnp
or
push
addb
adc
test
cmp
xchg
push
inc
jb
push
inc
leave
pop
pop
inc
pop
mov
sbb
mov
xchg
jge
clc
push
xorb
xchg
lock
jns
stos
mov
xor
mov
push
testl
push
lds
pop
pop
jne
push
sbbl
lret
pop
sahf
adc
mov
cmp
subb
dec
je
mov
dec
xchg
daa
jge
pusha
ljmp
pop
jno
cs
or
sbb
loopne
mov
cmp
enter
jo
mov
std
cwtl
sub
ret
mov
fdivs
imul
gs
push
jno
jnp
addr16
mov
inc
xchg
fimull
inc
mov
pop
nop
xchg
shl
cmp
add
xchg
jno
aam
mov
insl
aad
ret
jl
push
mov
or
movsl
jne
test
cmp
outsl
and
mov
or
arpl
add
push
fldt
in
cmp
rclb
mov
or
mov
xor
xchg
mov
je
dec
sub
je
cltd
fstps
pushf
or
je
call
mov
jle
push
mov
es
in
fildl
cmp
xchg
add
lods
push
jno
adc
gs
jge
mov
add
mov
xor
xchg
xchg
in
add
lret
and
popa
loop
xor
xor
cmp
mov
adc
xor
imul
fldl
mov
test
mov
jmp
popa
push
pop
sbb
push
sbbl
xor
xchg
add
mov
pmaxub
mov
xor
arpl
jne
dec
push
jo
dec
jp
cmpsb
es
sbb
mov
sub
mov
add
xorl
stos
das
test
cli
xor
sub
mov
arpl
into
push
fucomip
mov
cmp
add
gs
adc
push
jmp
add
sbb
cmpsl
xchg
cltd
inc
mov
repz
xor
shld
rcl
stos
cmc
call
imul
test
inc
sbb
ja
lods
sub
fdiv
outsl
fdiv
shr
nop
in
cld
outsl
dec
or
mov
fisttps
jnp
dec
add
xchg
cli
sbb
or
push
mov
aas
mov
xor
scas
in
pop
jbe
mov
jle
insb
dec
xchg
lret
lret
cli
pop
and
push
sbb
xchg
pop
mov
xchg
test
jo
test
mov
lcall
shrl
push
push
or
inc
shr
scas
push
out
inc
mov
mov
push
cmpsb
cmp
nop
lcall
push
lcall
movsb
imul
daa
adc
pop
fwait
jns
sbb
jge
movsb
xor
dec
or
cwtl
cmp
hlt
mov
aad
adc
add
xor
adc
adc
leave
mov
arpl
mov
push
push
xor
xchg
daa
int
cmp
dec
pop
ja
lret
mov
dec
aas
ja
movsb
cli
mov
cmp
adc
xlat
scas
cmp
and
dec
ljmp
fildl
pop
jnp
pop
pop
lcall
sub
rcll
jmp
pop
out
lret
dec
iret
fwait
push
enter
jno
push
sub
fisttpl
and
xchg
popf
xchg
xchg
xor
fcmovbe
push
loope
xor
mov
xchg
lock
sbb
jecxz
jp
and
cmp
inc
and
push
les
cmp
mov
stc
std
xor
inc
jl
pop
and
je
xchg
mov
lret
xlat
inc
or
mov
inc
sbb
xor
int
add
xchg
sbb
punpcklwd
pop
in
mov
outsl
loope
ss
xchg
pop
jge
inc
js
aaa
adc
inc
addr16
xchg
test
adc
cmp
stos
rcll
fists
mov
iret
jle
jmp
adc
movsb
lock
mov
inc
int3
mov
mov
jnp
movlps
fildl
sub
sub
inc
out
sub
out
add
and
sbb
inc
xchg
xchg
je
ret
cld
scas
mov
es
lret
cmp
dec
subl
cmpsl
jmp
cmpsl
jmp
pop
inc
or
pop
mov
cwtl
mov
gs
fadd
pop
insb
or
xchg
and
push
stos
mov
clc
pushf
js
cmp
orl
outsb
addr16
jle
or
cmc
daa
cmp
lea
cmp
xchg
aas
imul
test
out
and
mov
xlat
fstpt
leave
dec
lods
call
xor
cld
nop
dec
fistps
mov
dec
mov
cli
mov
xchg
push
outsl
mov
mov
mov
out
mov
cld
repz
sbb
sbb
outsb
mov
cmp
inc
cmp
testl
dec
dec
ds
mov
jg
mov
jmp
lret
cltd
negb
cmpsl
cmc
je
pusha
pop
aad
gs
fidivs
out
rcll
jo
xor
sbb
xchg
mov
pop
ret
stos
jge
sbb
das
int3
cwtl
test
lea
mov
jb
js
push
cli
fs
dec
xchg
rcll
mov
sub
xor
popf
outsb
cli
movsl
xchg
loop
xor
add
xorl
out
jmp
std
js
subb
sub
dec
je
push
mov
or
adc
data16
add
fists
mov
fwait
sti
je
pop
mov
in
fistps
movb
addr16
pop
lea
rcll
lret
jle
popf
or
jl
mov
dec
das
xchg
push
lret
xchg
push
subl
test
movsb
push
shlb
xor
shrb
rcl
ficoms
ficoml
idivb
xlat
or
or
ret
push
jmp
mov
push
sarl
cmp
inc
frstor
xor
fisttpll
pop
frstor
call
add
lcall
or
cmp
ljmp
mov
insb
loop
xchg
dec
jmp
sub
xchg
ret
mov
push
pusha
inc
adc
jb
int
and
sbb
ret
sbbl
mov
pusha
mov
mov
pop
push
pop
sarb
sarb
mov
dec
jne
fcmove
lret
xchg
pusha
daa
cmp
pop
jo
bound
xchg
mov
fldt
push
or
insl
inc
add
and
add
push
push
test
mov
or
fsubrs
pop
sub
mov
add
cmpl
add
cmp
sub
sbb
cmp
js
cmpl
sbb
sahf
adc
mov
cmp
xor
cwtl
dec
pushf
mov
aad
and
scas
fwait
imull
hlt
jg
in
or
sbb
dec
test
in
push
push
shl
adc
clc
push
jge
mov
push
ret
movsl
sarl
hlt
imul
je
cs
outsl
fcmovb
loopne
jl
sub
int3
mov
sub
or
rcrb
mov
mov
mov
cld
faddp
and
cwtl
imul
xor
push
std
sbb
bound
jbe
adc
xchg
inc
enter
add
in
and
mov
jp
aam
enter
jno
nop
fs
call
jbe
into
sbb
fisubrs
popf
mov
scas
pushf
lahf
mov
jno
push
mov
rcl
mov
lods
jge
subb
repz
cld
jge
adc
out
pop
push
push
out
lcall
mov
inc
adc
dec
adc
mov
repz
sub
daa
xchg
ss
jne
fldenv
ret
pushf
inc
mov
stos
je
jne
int3
clc
insl
mov
push
out
lahf
call
mov
out
push
sbb
push
and
mov
pop
mov
dec
stos
jne
lcall
in
negb
loop
xchg
in
lds
daa
iret
lea
mov
ficoms
repnz
in
or
sub
and
fdivl
lret
adc
ja
in
loopne
lcall
ret
adc
xchg
loopne
shlb
inc
out
sbb
sbb
mov
popf
add
xchg
jl
cld
sbb
ds
data16
incl
sahf
xor
sbb
sbb
imul
dec
pop
out
push
out
mov
leave
or
or
xor
fildl
shll
add
out
adc
mov
andl
adc
test
mov
stc
decl
sbb
sub
rolb
add
or
xchg
or
push
movsb
fs
lret
push
sbb
mov
jl
cmp
mov
test
or
pop
sbb
dec
pop
push
mov
adcb
jp
mov
js
cld
mov
pop
lods
dec
push
je
int
movsl
adc
xor
inc
fwait
rcr
pusha
lods
mov
jae
and
xchg
imul
xor
das
mov
shll
jg
lds
inc
pop
or
shll
test
mov
lods
or
je
dec
xchg
push
jae
out
pop
dec
xlat
scas
aad
fstl
fs
dec
mov
sbbb
or
gs
inc
jle
repnz
icebp
pop
xor
lcall
push
dec
lret
shll
push
cmp
test
hlt
mov
popf
add
leave
scas
pop
fwait
add
pop
or
das
and
es
bound
sub
sbb
mov
aas
cmpb
inc
aas
lea
sub
push
orb
sti
outsb
sub
or
cmpsl
scas
pop
fldt
cmp
andb
cltd
ja
cld
push
es
iret
mov
pop
out
mov
lods
jp
mov
and
jno
nop
sbb
adc
dec
pop
cmp
mov
xchg
sub
adc
cld
pop
push
lods
inc
jl
ret
inc
mov
sub
cs
repz
je
call
aaa
hlt
mov
test
sbbl
push
loopne
rorl
jge
fs
mov
sbb
push
mov
or
adc
ljmp
ret
mov
mov
push
iret
mov
push
ljmp
je
sbb
dec
adcb
jo
loop
push
test
sbb
jl
mov
inc
and
sbb
hlt
or
scas
in
in
aas
jb
jns
ds
dec
shrb
lahf
and
mov
neg
fisubs
inc
dec
cmpsl
and
sbb
das
mov
mov
dec
aad
jo
mov
mov
fdivl
scas
gs
cmpsb
and
xor
add
xor
scas
in
aam
sub
leave
lcall
add
lret
lods
sub
int
daa
push
cmp
push
xchg
test
test
jnp
add
loopne
out
lods
rcll
sub
add
sbb
ret
loop
inc
push
xchg
pop
enter
mov
cmc
arpl
jne
int3
pop
jg
mov
xor
xchg
jle
cltd
push
lds
dec
lret
shr
jae
dec
dec
adc
or
mov
cmp
je
outsb
cmc
dec
fcmovnu
in
adc
rol
mov
xor
mov
les
inc
nop
and
lock
xor
sub
cmp
stc
les
cmp
inc
inc
int
rol
inc
lock
xchg
scas
imul
test
xchg
and
cmp
cmp
test
popf
cmpsb
pop
mov
dec
mov
cmpsb
pop
jns
outsb
cwtl
pop
jno
and
sub
test
dec
push
test
mov
sbb
dec
mov
or
fistl
adc
in
push
mov
sbb
jg
loope
fisttpl
jbe
mov
scas
mov
sbb
out
xchg
loopne
jle
in
mov
sti
add
push
aas
mov
mov
sub
and
adc
das
ret
xlat
in
fnstenv
fwait
add
or
out
lahf
or
sbb
lods
pop
movsl
sbb
andl
and
aam
sub
lea
jbe
int
xchg
in
pop
xchg
jle
mov
sahf
add
mov
ljmp
mov
dec
xchg
jmp
dec
stos
jae
sub
and
cli
push
popf
mov
adc
cli
enter
mov
in
sub
adcb
jne
and
sbb
jecxz
pop
jmp
jo
adc
xor
jg
mov
push
andl
test
cld
jnp
lods
inc
dec
hlt
push
sbb
or
mov
dec
jae
fisttpl
cmp
imull
aaa
aas
imul
push
jg
insb
lahf
pop
cltd
inc
mov
add
cmpb
push
jno,pt
xchg
in
xchg
std
aad
outsb
mov
shrl
loope
add
int3
fstpl
out
mov
jae
inc
in
dec
jg
sbb
sub
jo
sub
mov
ror
push
lcall
mov
daa
sub
jo
push
ljmp
jmp
push
mov
add
xor
push
jb
fs
movsb
xchg
outsl
push
cld
adc
sub
jle
inc
outsl
das
push
or
mov
mov
xlat
jnp
push
pop
sub
cmpsb
mull
push
dec
or
sahf
pop
faddp
jmp
movsl
sub
push
jmp
pop
sbb
insl
and
mov
mov
scas
jae
cmp
les
push
push
outsb
loopne
lret
pop
pushf
jns
cmp
sbb
lret
cmpsl
adc
in
shrl
in
dec
popa
xchg
lcall
adc
subl
jecxz
fsubrs
sbb
aas
lret
pop
push
lods
inc
mov
push
sbb
cld
and
addl
cmp
jae
inc
bound
sbb
in
test
call
into
aaa
test
mov
ficomps
push
dec
inc
xlat
dec
jmp
loope
scas
xchg
gs
mov
cmp
int3
dec
leave
lods
iret
jns
and
and
into
lcall
xor
imul
cmp
sbb
xchg
pop
iret
cmpb
jae
mov
fdivs
sahf
push
jb
std
aad
mov
and
sub
add
mov
popf
cmp
pop
dec
sub
inc
cltd
cmp
mov
jb
movsl
xor
cs
pop
cmpsl
test
iret
mov
pop
loopne
mov
cli
and
mov
movsb
call
mov
je
pop
cltd
in
ss
dec
ds
insb
jle
cmp
xor
out
sbb
pop
imulb
aad
rcrb
sbb
or
lds
shlb
ss
dec
insl
lret
shll
int
mov
or
and
or
xchg
lods
outsl
adc
push
pop
xorb
insb
cld
pop
ror
in
xlat
push
stc
clc
arpl
jb
aam
and
lea
push
mov
xchg
cmp
xor
repz
mov
pop
test
loopne
movsb
std
lcall
stos
mov
jl
jb
xchg
jb
mov
mov
out
add
outsl
dec
xlat
shrb
lret
mov
test
or
and
mov
iret
xchg
mov
ljmp
or
xchg
jle
or
xchg
dec
mov
push
mov
adc
out
push
into
push
pop
xor
ficoml
push
pop
cltd
out
jno
into
xchg
fs
out
mov
jb
std
fisttpll
out
mov
sub
sbb
cvtps2pd
mov
xor
sbb
dec
repnz
xchg
jno
insb
mov
sbb
test
dec
enter
ret
xor
lret
sti
leave
les
cwtl
xor
icebp
cwtl
adc
lods
aad
push
movsb
cld
push
or
cld
pmulhw
and
dec
cs
faddl
and
push
cmp
adc
lock
aaa
mov
jo
cmp
dec
nop
icebp
mov
neg
out
jp
jmp
dec
pop
mov
adc
jo
push
sbb
mov
in
repnz
add
and
xchg
fdivrs
cltd
cmp
aam
aas
jl
out
lods
cmpsl
mov
pop
rol
pop
and
mov
nop
fdivr
xor
sub
or
lret
mov
mov
push
cltd
cmp
jp
sub
fidivrs
pusha
loopne
jp
roll
xchg
mov
inc
xor
adc
mov
and
movsl
ret
dec
fs
jmp
xor
fcos
jp
or
pop
outsl
jecxz
pop
jo
repnz
repz
lds
and
ret
nop
test
movsl
add
sti
xor
jecxz
popa
or
imul
cli
mov
mov
decl
mov
ret
inc
xor
and
adcb
out
cmpsb
popf
test
loope
jo
aaa
and
xchg
mov
nop
cmp
mov
pop
xchg
in
jge
inc
pushf
lret
pop
pop
jmp
jns
jecxz
xor
mov
fsubrs
ret
loopne
pop
xchg
js
sbb
pmaxub
fsubs
inc
xchg
stos
cltd
add
pop
jl
cmp
gs
and
cld
stos
shrb
xchg
dec
push
jecxz
push
mov
dec
scas
ljmp
pop
xchg
loope
movsl
push
insl
jle
cmp
rorb
adc
out
xchg
pop
fisubrs
sahf
mov
enter
sub
pop
xchg
xchg
sub
adc
insb
cwtl
out
jecxz
mov
jno
mov
rorb
adc
mov
fisttpll
jge
je
pusha
add
add
pop
daa
or
movsl
xor
mov
jge
or
daa
mov
jns
add
dec
xchg
and
xchg
pop
lods
xor
int
cmpsl
xor
sbb
addl
dec
sbb
xor
jbe
add
scas
add
push
sti
pop
in
cwtl
ds
sub
mov
pop
sahf
in
fmull
sahf
mov
in
jne
inc
orl
adcl
fs
ja
addb
mov
and
daa
aad
lods
cmpsb
clc
mov
js
pop
popa
cmc
sar
adc
sbb
pop
aas
out
scas
fnsave
sub
mov
mov
popa
push
mov
shlb
fs
inc
xchg
popa
push
fldenv
mov
and
sahf
sbb
mov
cltd
test
data16
rorb
pop
or
rcrl
ja
jg
push
mov
jp
mov
inc
inc
or
enter
sub
clc
cmp
ret
je
adc
sar
jns
inc
xor
int
jae
push
hlt
pop
dec
sub
lock
add
sahf
js
loope
jmp
mov
inc
divl
lods
movl
lahf
mov
push
adc
outsb
push
cltd
sti
das
push
stc
push
insl
sub
lea
and
jmp
fmuls
xor
pop
mov
add
or
pop
cmp
dec
pop
mov
das
fsubr
jp
inc
xlat
pop
mov
sbb
dec
inc
scas
sub
cmp
dec
and
dec
lea
pushf
mov
sahf
or
pop
movsb
push
xchg
mov
test
stos
mov
push
sbb
cld
lea
xor
aam
into
dec
loope
ret
stos
cmc
xchg
out
adc
roll
inc
mov
mov
daa
gs
push
call
push
push
or
aam
mov
and
mov
outsb
fldl
in
and
xchg
imul
lods
pop
pop
iret
xchg
jbe
mov
pop
push
add
pop
popa
xor
mov
mov
daa
push
and
sti
lods
fwait
stc
cld
and
das
fisubl
add
xorl
jnp
jmp
lods
adcb
fucomp
syscall
ret
andb
mov
push
dec
repnz
iret
xor
daa
pop
insl
lods
rorl
enter
mov
sbb
jl
or
pop
cmpsb
cmp
nop
cmp
mov
les
bound
lret
int
mov
xchg
xor
dec
adc
fcmovnb
std
rcll
adc
ljmp
dec
push
jns
jo
sbb
xchg
mov
pop
jmp
sbb
je
mull
test
cmp
pop
xor
insl
rolb
add
xchg
int
pop
mov
gs
xor
cmpsb
lahf
push
pop
sti
fiaddl
ds
cwtl
push
int
out
in
adc
je
xchg
test
roll
icebp
xor
inc
adc
mov
popa
inc
pcmpeqw
xchg
mov
pusha
inc
mov
sub
icebp
sub
mov
mov
push
icebp
sbb
insb
jmp
ret
sub
outsl
mov
clc
dec
sub
test
dec
cmp
nop
add
jne
xor
hlt
stc
rcrb
sbb
movsl
outsb
inc
jle
dec
repz
inc
jge
sub
stos
or
call
sbb
mov
jae
sbb
cmc
inc
jp
sbb
icebp
xor
xor
mov
arpl
add
jl,pt
testb
fwait
cmpsl
sar
mov
int3
rcrb
add
push
fdivl
add
les
mov
sbbl
xor
into
mov
shll
outsl
dec
inc
dec
fwait
cltd
pop
ljmp
or
aaa
shrb
jl
fisubrs
or
notl
jb
mov
jno
cwtl
xor
xchg
mov
mov
ss
aam
xor
test
sbb
sub
pop
mov
push
inc
cmp
out
xlat
and
in
rcl
pop
add
loopne
cld
enter
push
sub
push
cmpsb
aas
lahf
lods
ds
scas
pop
mov
out
test
shrl
pop
cwtl
loopne
negb
aad
fmull
sahf
mov
mov
pop
hlt
repz
clc
test
roll
jno
adc
out
push
pop
jo
mov
push
xor
xlat
cmp
ljmp
imull
es
test
jecxz
dec
add
adcb
outsl
adc
push
dec
cmpb
movsb
jmp
dec
sti
lds
xor
test
pop
sahf
out
call
sti
mov
rorb
hlt
loopne
adc
sbb
loopne
lods
loopne
scas
stos
sti
and
pop
mov
sbb
mov
xchg
sub
xchg
or
lock
sub
ret
xchg
mov
in
sbb
push
cmp
dec
adc
dec
lcall
lar
inc
lret
sti
or
dec
adc
inc
inc
loopne
xor
xor
nop
or
and
testl
push
pop
jae
dec
fisttpll
dec
inc
lcall
adc
in
popa
mov
jl
dec
iret
sti
mov
scas
dec
jg
loop
cmpsb
mov
cs
fistps
and
insl
aaa
test
cwtl
pop
in
leave
sub
inc
add
loop
scas
or
test
sub
sub
mov
movl
jno
xor
repz
sub
inc
dec
fs
sub
fisubl
xor
inc
push
xlat
jle
cmpsl
xchg
cmp
bound
and
mov
xchg
pop
fwait
cmp
mov
mov
subb
filds
packssdw
inc
insl
cmp
pop
negl
mov
or
lahf
jg
and
mov
div
or
pop
cs
nop
cmc
sahf
fsubrs
fbstp
lods
push
lahf
test
movsb
dec
test
call
pop
fsts
loope
mov
in
xchg
mov
push
pusha
scas
cmp
jp
mov
pop
cmp
addr16
push
faddl
imull
fdivr
xor
mov
push
jnp
icebp
xor
pusha
leave
repz
cld
stos
dec
inc
dec
cmc
add
js
jbe
cmp
and
adc
jecxz
dec
fisttpl
sbb
xchg
inc
rol
jns
add
js
outsb
sub
dec
push
insl
in
adc
add
cli
cli
rcrb
fnstcw
in
xor
shlb
repnz
jmp
out
mov
lcall
inc
lret
jo
rcl
lret
jl
repz
sbb
jae
or
xchg
ret
mov
call
mov
out
or
push
adc
and
pop
jne
ja
pusha
jmp
out
daa
lock
add
popa
mov
jb
sub
xchg
outsl
adc
and
rorb
dec
inc
add
lods
shll
mov
loop
loop
mov
dec
dec
add
in
mov
adc
popa
in
xor
js
xchg
mov
outsl
xor
loope
stos
lret
pop
cli
mov
mov
adc
lds
pop
jecxz
into
sub
xlat
out
sarl
or
jnp
pop
or
pop
jecxz
jmp
cmp
pop
ret
out
xor
filds
popf
mov
mov
notl
or
fisubrs
pushf
xor
add
out
xchg
push
cltd
sbb
push
sar
rclb
mov
in
fwait
hlt
mov
xor
addr16
sbb
xchg
cmp
sub
xchg
jp
and
cmpsl
mov
xor
xor
add
adc
idivb
pop
and
jno
cmp
xor
mov
mov
sub
in
scas
push
mov
sbbb
xor
daa
out
daa
jl
sbb
fwait
loopne
pop
pop
push
loop
notb
mov
xchg
addr16
push
inc
push
das
cmp
dec
cmc
pop
mov
adc
mov
jecxz
addl
dec
jge
push
insl
pop
xor
push
mov
lock
and
and
mov
and
decl
fildll
ja
orl
cld
das
ja
lcall
imul
jp
imul
lahf
pop
dec
and
cmpsb
dec
cmpsl
push
mov
call
movsb
lock
fwait
shrl
mov
iret
fcmovb
sbb
das
mov
mov
and
xor
test
add
mov
xchg
inc
push
mov
add
lock
jbe
test
xchg
cmp
inc
add
mov
leave
mov
push
sub
sahf
and
fwait
shlb
incl
int3
lods
mov
leave
dec
out
xchg
clc
aam
andl
dec
mov
mov
sub
add
mov
push
mov
xchg
add
mov
inc
xor
fdivs
std
aad
fdivl
mov
xlat
sbbb
cld
sub
lea
adc
pop
push
imul
das
das
nop
cwtl
or
aaa
outsb
xchg
jne
add
or
dec
push
sub
mov
sbb
in
jmp
out
stc
xor
pop
xor
int
cmc
fwait
or
loope
imul
fdiv
add
mov
fimull
xchg
or
adc
mov
xor
push
and
xor
outsl
ret
xor
cmpsl
inc
sub
bound
xchg
and
ljmp
sub
inc
ret
adc
xchg
or
jg
incl
jo
repz
sub
inc
sbb
jo
mov
shll
sarb
cmpsl
add
sahf
push
lret
pop
adc
pop
imul
mov
dec
push
aaa
lock
ljmp
popf
cltd
mov
dec
cmpsb
add
or
mov
ljmp
je
xchg
dec
hlt
add
adc
xlat
sti
and
add
push
imul
pushf
mov
icebp
sbbl
cmpsl
mov
daa
outsl
cmp
pusha
mov
cmp
popf
sahf
fnstsw
or
xchg
inc
out
pminub
cmp
bound
shrl
int3
mov
adc
js
inc
cmc
cmpsb
xor
lret
into
pop
lods
cli
pusha
mov
stos
rorl
ret
test
mov
fcompp
and
jle
cli
imul
jecxz
nop
adc
pop
push
jnp
inc
mov
and
lahf
loopne
sbb
adc
sub
scas
sbb
pop
shrb
jns
loop
push
sub
mov
ljmp
mov
loop
mov
sahf
xchg
sub
sbb
sub
mov
xor
repnz
mov
push
push
inc
push
scas
sbb
dec
shl
and
jno
fisubs
scas
popf
lahf
insl
cli
mov
or
push
ljmp
ficompl
mov
rolb
stos
and
cld
pop
loope,pt
mov
xchg
sbb
sbbb
push
adc
mov
push
cmp
cmpsl
sahf
xor
jbe
subps
sbb
popa
lods
push
jmp
lods
lds
dec
sub
iret
js
out
cmovo
xchg
push
imul
jo
mov
movsb
imul
test
pop
push
and
daa
ss
xor
xchg
mov
mov
dec
lahf
and
add
movsl
cmpsb
es
mov
push
testl
xchg
test
push
sbb
add
jo
ds
jnp
addr16
aam
sub
pop
mov
sahf
inc
pop
scas
inc
dec
cld
push
push
jge
das
push
add
cmp
popf
int
loope
lcall
mov
hlt
fsubl
repnz
lea
aas
bound
or
loopne
enter
or
sbb
je
push
mov
mov
jp
lret
out
pop
cmp
clc
loope
aad
sbb
mov
pop
push
fwait
push
daa
and
fdivs
jbe
pop
loopne
xchg
test
fwait
jl
xchg
and
inc
lods
inc
mov
adc
sub
lock
sub
inc
mov
outsl
stc
pop
arpl
adc
loop
pop
imul
and
cmp
sub
shrl
stc
push
stos
cmc
mov
aam
cmp
sub
mov
test
sbbb
inc
cmp
mov
lret
mov
inc
mov
sub
sahf
fsubr
jg
repz
gs
sbb
push
mov
in
xchg
movsl
shll
xchg
dec
cmpsb
outsb
test
loope
add
repz
scas
sbb
out
jnp
call
rcrb
inc
mov
and
arpl
int3
lea
mov
ucomiss
sbb
or
dec
pusha
add
inc
add
loop
xor
or
rorl
inc
xor
outsl
cmp
lret
lret
xchg
xchg
add
fnstenv
fcomps
repnz
mov
adcl
inc
mov
xor
mov
daa
test
rcrb
dec
adc
jl
test
push
sbb
push
xchg
or
fdivrs
lcall
mov
inc
stos
negb
cwtl
push
jmp
push
xchg
int3
pop
pop
mov
mov
xorl
add
aaa
sbb
or
fs
and
repz
lret
push
stos
imul
mov
mov
test
push
bound
push
dec
push
mov
outsb
dec
adc
sbb
scas
ret
push
cmc
leave
xor
dec
or
jae
loopne
clc
mov
insb
aad
sti
test
dec
mov
and
lret
jo
pop
push
sahf
inc
mov
push
imul
dec
xlat
pop
sbb
xor
push
in
mov
push
jno
popf
mov
pop
cmp
dec
inc
xor
gs
pusha
mov
jmp
scas
loope
mov
pop
imul
mov
pop
inc
stos
popa
and
mov
std
decb
rcrl
cwtl
test
fs
test
rcrb
adc
xchg
fdivs
ret
jecxz
dec
arpl
push
mov
insl
dec
pop
inc
dec
cmp
jns
aad
js
adc
pop
mov
inc
subl
and
std
scas
scas
lret
sbb
movsb
icebp
test
out
jbe
pop
inc
xchg
daa
ret
push
adc
das
icebp
xor
xchg
mov
movsl
push
push
and
xor
jns
add
outsl
ss
cld
push
adc
and
insb
test
aad
pop
adc
xor
imul
pop
xchg
popa
xchg
push
sti
jp
add
aam
push
add
sarl
xchg
inc
loop
sub
bound
sbb
iret
jnp
int
mov
imul
jmp
cld
pop
pop
cmp
out
in
lahf
cmp
in
rcl
pop
cld
and
adc
mov
xchg
lods
imul
lahf
mov
pushf
jbe
jl
inc
insb
xor
and
add
dec
loope
in
pop
mov
out
or
pop
test
js
inc
ja
repz
cmp
pop
add
lret
jnp
inc
enter
cld
mov
out
test
imul
xor
push
clc
adc
adc
mov
sub
fnstcw
sbb
or
aam
lods
mov
stos
sub
ljmp
jb
fistl
sub
in
shll
daa
inc
adc
sbb
ss
into
popa
jge
fwait
jmp
lods
xorl
or
jae
icebp
inc
std
add
cld
repz
es
fisubrs
stos
nop
popf
xchg
adc
pop
scas
mov
sub
int
bnd
adcl
fidivl
xor
and
lcall
imul
lds
or
daa
lahf
sub
call
aaa
inc
dec
sbb
cmpsb
inc
fiadds
cs
clc
clc
sbb
das
daa
mov
imul
mov
in
fsubr
or
filds
xchg
ljmp
adc
ret
scas
daa
nop
cmpsb
fdecstp
mov
nop
int
icebp
mov
fwait
mov
ds
jns
cld
sarb
mov
movb
andl
cmp
shl
incl
mov
out
adc
ret
add
outsl
and
lret
or
push
dec
xlat
lahf
test
mov
cmp
cwtl
pushf
mov
dec
divb
cli
mov
and
mov
push
vandps
aas
dec
sub
xor
mov
adcl
inc
push
add
movsl
or
or
push
sti
mov
pop
xchg
jl
jne
add
mov
dec
aas
sbb
cmp
pop
imul
shl
jbe
sub
in
mov
mov
aam
das
nop
cwtl
inc
out
cld
es
test
mov
inc
lds
inc
jmp
sbbb
loop
dec
ret
mov
ljmp
ja
adc
push
leave
inc
cmp
add
fcmovu
xchg
scas
shlb
xor
stos
sbb
pop
out
mov
jle
ret
test
push
sub
sub
imul
shrb
addr16
cmp
inc
lea
pop
jge
xchg
mov
cmp
lods
loope
mov
in
add
cmp
aaa
call
shlb
xchg
ja
outsl
mov
leave
movsb
call
cmp
cmp
push
add
cmp
pop
aas
adc
icebp
outsl
inc
cwtl
inc
pop
scas
sbb
add
test
out
rorb
int
decl
repz
adc
fnstenv
cmp
testb
mov
xchg
frstor
dec
mov
inc
pop
push
cmp
inc
mov
sbb
scas
sub
xchg
push
cltd
fstps
push
pop
add
pop
pop
lahf
push
mov
out
nop
push
mov
jno
xchg
xchg
dec
clc
out
vpmacsww
pop
or
cmp
stos
notl
je
mov
andl
jle
jbe
xorb
lcall
cs
data16
sti
push
push
imul
out
stos
lahf
lea
arpl
inc
orb
jno
movsb
in
jecxz
ficompl
cmpsb
jbe
push
mov
jle
mov
dec
and
pushf
loope
mov
imul
mov
fisubs
jb
cmp
mov
nop
ljmp
cmp
adc
sbb
ljmp
out
repnz
rcrb
and
jo
or
lods
mov
lret
pop
mov
and
test
pop
iret
outsb
mov
rolb
cwtl
push
clc
adc
jae
jecxz,pt
imul
iret
sub
out
dec
out
xchg
mov
mov
jno
clc
movsl
shlb
inc
insl
into
inc
adc
jg
loope
xchg
jmp
sbb
and
nop
add
jge
fisttps
cmpsb
movsl
or
inc
xor
or
inc
test
and
lds
pop
stc
jmp
cmp
xchg
mov
ljmp
dec
add
lds
or
add
mov
mov
inc
hlt
push
mov
outsb
jns
cwtl
imul
pop
push
aad
lret
jno
in
add
push
xor
ds
sub
mov
cld
xchg
and
xor
lahf
pop
fcomps
xchg
arpl
leave
mov
and
jo
xor
stc
inc
or
and
and
in
jmp
mov
popf
decl
pop
sub
scas
pop
adc
push
outsl
jle
pop
mov
or
push
dec
es
stc
dec
or
out
fisubs
dec
push
and
mov
sbb
mov
pop
mov
shrb
xor
and
mov
cltd
mov
adc
push
dec
rcll
mov
ljmp
cmp
jl
xchg
stos
es
bound
arpl
cld
or
negb
mov
jmp
sbb
adc
into
and
imul
sub
mov
adc
and
jo
inc
insl
mov
sub
popa
lods
add
jb
shr
push
or
mov
dec
and
into
push
sbb
push
into
push
push
pop
mov
mov
sub
out
adc
pop
shrb
fcom
pop
dec
imul
mov
out
fmul
jmp
jmp
add
xor
movsb
xchg
aas
adc
mov
jle
sbb
cmpsl
inc
lcall
mov
std
test
test
xor
test
adc
in
cs
jno
inc
mov
inc
in
mov
scas
lcall
cmp
sahf
dec
and
dec
mov
stc
pusha
shlb
sbb
jecxz
sbb
daa
xor
stos
xchg
test
mov
sub
lret
enter
xorb
add
push
dec
cwtl
xchg
aaa
fsubrl
test
mov
mov
sub
jb
out
sarb
mov
fwait
int3
push
push
push
inc
outsl
fimuls
cmp
xor
push
ret
out
jnp
out
push
push
fsubrl
jbe
call
sub
pop
leave
testl
jns
xor
out
jnp
lods
dec
movsb
mov
sub
xchg
js
das
out
fwait
add
xor
mov
mov
push
sub
push
mov
cmp
fsubs
pop
mov
cmc
mov
ljmp
out
notb
lock
xor
dec
adc
mov
sti
or
mov
lret
and
mov
inc
cmp
divl
mov
dec
ret
mov
sub
out
xchg
int
sub
ljmp
cmp
cmc
cld
or
out
adc
add
and
add
cmpsb
sub
push
cmp
mov
dec
ret
cltd
rclb
jmp
lcall
js
inc
cltd
orl
pop
mov
lret
aaa
out
xchg
xchg
sahf
aaa
or
add
adc
lcall
jge
int3
mov
ljmp
xchg
outsb
push
out
mov
mov
test
test
fbld
cmpsb
fs
dec
and
pop
clc
jne
jae
mov
or
stc
bound
pop
test
cli
mov
js
dec
xchg
add
divb
shrl
fs
mov
sbb
mov
dec
mov
dec
xor
das
mov
js
xchg
out
shrb
daa
mov
add
pop
sbb
cmp
in
std
inc
pop
mov
sub
xchg
cltd
aaa
pop
and
xor
adc
xor
xor
or
or
or
lret
int
add
push
jbe
scas
push
mov
lcall
bnd
xchg
sahf
mov
lea
or
or
jge
ficoml
add
sub
xchg
lcall
js
lods
fwait
bound
aad
lret
aas
dec
adc
xchg
push
cmp
cld
mov
xchg
or
pop
adc
out
push
jl
shlb
imul
pop
adc
js
ficomps
movsl
movsl
pushf
mov
cmpsl
jne
insl
cltd
call
sub
lcall
pop
jmp
mov
xchg
pop
mov
out
adc
aas
outsb
jle
push
mov
or
and
mull
mov
daa
mov
adc
arpl
rclb
cs
inc
stos
dec
shlb
or
fisubl
fstps
cmp
sub
jno
mov
cmp
shll
sti
mov
mov
les
dec
pop
sub
sahf
push
dec
addr16
nop
std
in
cmp
xor
std
add
lcall
loope
xchg
adc
stos
xor
in
ret
out
daa
jmp
les
ds
and
outsb
js
push
jns
jbe
data16
repnz
sarl
jg
pop
stc
int
movsl
pushf
cmp
pop
dec
xchg
adcb
fiadds
mov
jp
int
into
dec
push
pop
pop
inc
test
xor
and
mov
in
or
and
test
mov
dec
fcoml
mov
xor
pop
adc
dec
pop
sete
or
or
push
pop
pop
and
push
push
leave
bound
pop
lret
jmp
ja
negl
sbb
shlb
add
xor
or
add
mov
add
jno
and
or
fimull
mov
nop
cld
and
pop
or
mov
aaa
filds
ret
aam
lock
mov
pop
jecxz
and
inc
aaa
aam
addr16
ret
stc
add
pop
fadd
scas
push
enter
lds
loopne
nop
cwtl
test
imul
dec
dec
sti
mov
add
inc
mov
orl
nop
lahf
sarb
adc
in
dec
ds
dec
lcall
push
pandn
insb
mov
fwait
push
inc
sub
mov
adc
pop
roll
or
loop
dec
xchg
push
mov
pop
daa
int
sbb
xorl
and
xor
adc
stc
outsb
adc
pop
cli
mov
cmpsb
loope
jmp
ljmp
es
bound
xchg
lea
lods
xchg
stos
in
adc
arpl
and
adc
mov
int
xlat
ret
test
out
and
adc
aas
cmpsb
sub
rcl
outsb
cmp
sar
dec
aam
jnp
sub
loope
dec
dec
mov
mov
push
das
out
jp
adc
mov
push
xchg
ss
arpl
fcompl
inc
mov
cmpsl
clc
ret
into
in
gs
mov
add
push
sti
les
and
insl
pusha
pusha
in
loop
jno
cmpsb
aam
mov
das
jge
out
pop
out
jns
inc
sbb
cmp
fcmovb
xor
sbb
or
sarl
mov
sub
das
jns
andb
cli
mov
adc
mov
iret
adc
dec
push
ficoml
sti
lods
popa
insl
inc
popl
test
inc
outsb
mull
pop
xor
pop
outsb
xchg
test
sbb
roll
in
cmp
rorl
xchg
notl
out
dec
fs
push
sahf
mov
out
jecxz
pop
shr
jb
rorb
in
pop
inc
fdivr
cltd
sbb
sbb
pop
push
lock
ss
out
dec
sub
mov
lret
je
scas
stc
cmp
cmp
and
scas
or
hlt
in
std
or
adc
std
xchg
fs
mov
sbbb
pop
mulb
sub
scas
out
push
jo
inc
decb
and
hlt
or
cld
pushf
lea
insl
dec
adc
mov
push
mov
lea
pop
aas
cmpsb
inc
or
stos
loopne
pusha
adc
mov
mov
daa
add
sbb
cmc
lods
cs
pushl
xorb
jle
dec
aad
xor
sahf
lds
push
jno
xor
fbld
int
lods
mov
mov
lea
mov
push
inc
xchg
int3
sarl
iret
mov
cld
movsl
or
inc
push
pop
push
mov
push
in
ret
xchg
in
rorb
ret
arpl
xchg
xlat
xor
sbb
subl
aaa
fldenv
adc
test
jbe
push
mov
mov
daa
aad
pop
jbe
popf
adcb
cmp
jnp
lcall
in
push
push
sbb
mov
inc
subl
sub
mov
mov
rclb
pop
loope
ljmp
lds
aad
aaa
shlb
inc
cmpsl
mov
push
fbstp
push
movsb
cmp
xchg
cmovs
sub
scas
sub
push
sub
mov
ficompl
mov
and
mov
loop
enter
push
fs
inc
mov
std
xor
in
decb
jp
cld
mov
add
bound
jge
mov
test
add
jo
fcmove
fadd
subb
or
fdivs
shrl
sub
xchg
xor
adc
addr16
stc
fimuls
lret
push
fiadds
icebp
sbb
and
xchg
inc
fsubrl
xchg
adc
mov
enter
jge
jo
into
ljmp
insl
add
add
mov
rcrl
cltd
scas
lahf
mov
fstps
push
adc
repnz
sbbb
adc
out
xchg
incb
pusha
test
int
mov
and
add
stos
aad
aam
adc
jbe
mov
jns
cwtl
pop
jae
mov
repnz
inc
dec
ljmp
dec
shll
mov
out
shlb
shll
inc
shr
fs
xor
inc
int3
xor
or
lds
xchg
fstl
inc
xchg
jmp
mov
cmp
stc
jl
andb
cli
nop
pop
icebp
lcall
push
add
inc
das
pop
into
sarl
fmul
dec
dec
xor
xchg
or
pop
and
in
cmp
ljmp
jl
dec
jle
fldl
fisubs
fidivrl
imul
mov
call
stc
icebp
cmp
loop
jge
pop
or
lcall
adcl
lahf
mov
and
push
enter
out
jg
and
outsl
cmp
iret
hlt
mov
lahf
pop
inc
shr
or
xor
addl
lods
xlat
push
add
ret
data16
inc
in
sub
mov
scas
int3
std
add
fnsave
add
push
fistl
fwait
aad
adc
mov
out
cmpsb
and
fdivs
loop
mov
mov
xchg
adc
je
js
mov
sahf
cmp
inc
out
jns
adc
cwtl
in
push
inc
in
bound
mov
fistl
jg
int3
cmp
addr16
mov
in
testl
and
or
icebp
enter
fdivs
sub
fxtract
es
cld
imul
cmpsl
cwtl
dec
movsl
arpl
ds
or
pop
mov
cmp
roll
insl
lods
cmp
aad
mov
dec
bound
sbb
aad
dec
add
pop
jge
outsl
or
dec
pop
mov
rorl
pusha
movsb
fidivs
mov
jae
jp
vlddqu
inc
xchg
add
aaa
lcall
pusha
mov
cs
or
mov
pmaxsw
pop
popf
int
mov
dec
or
inc
pop
mov
lcall
bound
insl
sti
imul
enter
test
xchg
scas
push
jns
inc
cmp
sub
pop
pop
popa
xchg
push
jns
mov
mov
into
push
decb
cmpsb
pop
or
shl
adc
pop
ds
imul
adc
pop
pop
sub
xor
loope
sub
lods
pusha
rcrb
inc
in
jecxz
dec
add
arpl
xchg
lods
pop
aaa
stc
lahf
inc
dec
pop
cli
xorb
aam
sti
in
insl
jge
jbe
sub
daa
cmp
or
out
cmp
in
ja
cwtl
std
aad
mov
bound
incl
ret
scas
mov
pushf
sbb
gs
jecxz
cmp
mov
rcrb
idivb
loope
or
pop
ss
push
js
mov
add
add
pop
mov
cmpsl
cmp
mov
sbb
ror
ja
cmp
mov
loop
add
xchg
lret
mov
mov
push
jo
icebp
addb
dec
pop
out
dec
ja
addr16
andb
inc
jo
xor
push
cmp
xchg
cwtl
xchg
lret
pop
mov
mov
lock
or
sub
mov
push
mov
mov
jmp
fisttpll
xor
xor
test
fld
push
movsb
clc
add
sahf
aad
fwait
int3
ret
fldt
leave
jno
aas
xchg
cs
inc
in
inc
xor
outsl
cltd
inc
inc
repnz
leave
repz
js
dec
out
jl
cmpsb
test
bt
loopne
push
mov
jmp
push
pop
fdivs
mov
loope
inc
aam
xchg
sbb
cmp
mov
insl
shrb
adc
je
sahf
cmc
jmp
jne
cmc
inc
aam
and
stc
cwtl
push
std
inc
notb
bound
loop
pop
mov
das
outsb
xchg
sub
mov
sti
xchg
mov
movsl
repnz
fs
cmpsb
in
sbb
mov
and
or
cli
xchg
sub
push
and
pop
push
ss
mov
jb
leave
pop
cmpsl
sub
les
aas
pop
stos
ljmp
dec
add
cltd
pop
jle
outsl
xchg
or
jle
and
jge
jge
mov
jp
addl
or
int
sbb
insb
adc
pushf
fadds
hlt
icebp
shlb
test
dec
leave
int3
xchg
cs
lret
cmp
sti
int
mov
into
sbb
push
stos
lea
mov
out
fimuls
push
lods
je
xor
lret
out
aam
add
or
dec
and
mov
and
mov
imul
sbb
mov
add
cmc
addb
clc
jne
dec
xchg
test
fidivrl
seta
mov
test
mov
jmp
jne
dec
sbb
scas
push
loopne
cld
movsl
cld
loopne
scas
dec
and
fcomps
ljmp
add
clc
loopne
pop
rcll
push
and
sarb
gs
xor
xor
jmpw
and
add
sarl
jae
jnp
mov
sbb
mov
sbb
xor
jns
pop
out
add
ds
sub
stc
sbbb
jns
scas
in
pop
push
sub
in
sbb
push
outsb
jecxz
pop
mov
mov
enter
sahf
fldt
js
sarb
in
sub
rcrb
inc
mov
mov
repnz
mov
pop
fcmove
adc
imul
push
sbb
not
push
out
sbb
fcompl
fs
loop
icebp
xor
mov
out
frstor
aas
scas
push
sbb
arpl
into
sub
sub
aaa
mov
call
mov
mov
addr16
repz
adc
dec
fsubrl
inc
imul
xor
in
sbb
and
sbb
sub
xchg
imul
test
sub
pop
ja
cmc
jne
add
add
pop
mov
add
pop
fbstp
mov
jmp
cmpsl
dec
sub
int
lods
fstl
add
pop
enter
mov
clc
push
add
inc
xor
pop
enter
inc
add
std
mov
mov
int3
imul
push
fs
lods
mull
push
dec
push
mov
insb
mov
mov
mov
sti
mov
test
fmull
jge
inc
sbb
xchg
test
fcoms
mov
cmp
f2xm1
sub
or
sbb
fld
inc
mov
cwtl
mov
fimull
sbb
loop
pop
xchg
mov
mov
call
adc
repnz
int3
leave
stos
push
lods
div
jmp
pop
jns
iret
jl
xor
pop
fs
mov
loope
pop
pop
or
push
pop
mov
xor
sub
sub
cwtl
ss
cmp
mov
int
xchg
mov
sub
fdivrl
inc
sub
xchg
dec
insl
shr
rcll
imul
divl
nop
and
and
cmpl
pop
mov
fwait
inc
jge
lret
out
into
jns
inc
jnp
inc
jne
aad
cmp
push
sbb
cmpb
sti
sti
stos
pushf
jmp
iret
test
ret
or
fsub
jle
cltd
push
jmp
out
dec
cmp
adc
sbb
pop
push
lds
sbb
jns
lret
lock
xchg
test
mov
mov
push
out
fcmove
jecxz
dec
dec
dec
inc
fisubrl
out
sbb
mov
dec
adc
popa
in
xorb
mov
fisttpl
daa
lret
mov
mov
cwtl
jge
xor
jge
lahf
in
scas
in
jb
mov
lahf
stos
and
lods
out
leave
mov
imul
and
cmp
xchg
nop
iret
movsl
sub
dec
pop
repz
fninit
pop
or
gs
cmpb
jne
mov
xchg
inc
push
addr16
dec
js
cs
mov
adc
xor
xchg
hlt
xorb
fcompl
cmovns
clc
fsubrp
jb
data16
scas
adc
xor
adc
imulb
cmp
lcall
into
and
or
sar
out
in
or
push
outsl
out
notb
jae
sbb
push
add
jb
loope
mov
das
ds
or
add
pop
cltd
mov
jns
aam
in
rorb
cmp
stos
sti
pop
arpl
out
test
shlb
stc
outsb
adc
jmp
enter
stc
popf
call
xchg
pop
jmp
inc
push
cmc
cld
xor
jecxz
and
adc
or
mov
lahf
inc
dec
ret
lods
clc
mov
aaa
xchg
cmp
ljmp
cmp
addb
pop
adc
stc
test
inc
pop
sbb
aas
fwait
movsl
and
add
sub
fcmovnu
in
sbb
mov
cltd
into
and
cmp
das
mov
jl
pop
add
mov
xchg
ret
push
jmp
mov
outsl
push
pop
sub
ret
popf
jp
and
sbb
push
pop
sub
lcall
xlat
pop
inc
push
adc
imul
rcrb
ljmp
popa
push
lcall
aad
mov
or
and
xchg
clc
xchg
sahf
nop
sub
or
lahf
jae
jbe
lret
inc
mov
xchg
out
stos
sub
les
fdiv
imul
test
push
js
cvtps2pi
cmp
rcll
pop
icebp
pop
aam
xchg
pop
test
and
test
dec
repnz
mov
cld
or
mov
push
imul
cltd
pop
lods
fiadds
stos
push
scas
add
in
gs
mov
push
and
out
notb
cld
pop
pop
cmp
push
test
fcmovnbe
sarb
in
andl
and
test
dec
inc
js
dec
out
cmp
stc
pop
xchg
sbb
icebp
fadds
ficoml
inc
dec
and
mov
pop
sub
js
stos
mov
iret
test
outsb
push
stc
mov
jle
mov
sub
and
call
repz
loopne
sbb
cs
push
push
dec
adc
mov
ficomps
push
es
push
shlb
pushf
jne
xor
sbb
xchg
ror
inc
jge
addl
push
mov
sarb
and
pop
fs
ss
xor
jecxz
mov
lock
mov
into
sub
sub
add
shrb
ja
xchg
xchg
in
mov
test
xor
test
lea
popf
test
cltd
aas
aaa
jo
pushf
jmp
pop
fildll
push
es
movsb
sahf
add
ja
sahf
scas
and
mov
push
gs
daa
and
idiv
push
jbe
mov
dec
pop
cmpsb
stc
adc
out
push
push
rorl
inc
mov
movsb
shlb
lret
fs
in
test
adc
mov
cli
pop
adc
idiv
mov
in
jne
mov
sub
adc
sub
xlat
out
cmp
fmulp
rorb
lock
ret
daa
jo
shll
pusha
je
dec
leave
xchg
neg
aas
dec
mov
push
xor
push
shlb
mov
push
push
mov
neg
mov
or
pop
or
cli
jecxz
mov
int3
cmpsl
mov
popa
das
mov
pop
cli
imul
dec
push
mov
pop
test
ror
or
add
sbb
aam
cmpsb
cmp
les
bound
int3
in
adc
daa
mov
in
xlat
jb
mov
stos
fcmovnu
loope
push
fstpl
xlat
push
fists
imul
rcrb
and
orb
enter
sti
std
je
jmp
xor
mov
repz
mov
xchg
les
xor
mov
mov
pop
jb
or
lcall
dec
sub
push
cmpsb
clc
inc
mov
xor
insb
xor
shll
ficoms
mov
mov
cmpsb
xor
push
ret
repnz
aaa
sti
cmp
pop
movsl
lods
divb
push
adc
xchg
mov
pop
gs
cmp
mov
ss
loopne
jle
in
sbb
jbe
test
jno
lcall
sbb
mov
jge
xchg
cli
shll
mov
popa
add
imul
push
rclb
jp
out
into
pop
pushf
jl
out
bound
xor
add
in
repnz
cmpsb
push
cmpsl
shlb
sub
sar
stos
in
in
lret
cmpsl
cmp
dec
mov
pop
jl
ffree
insb
leave
cwtl
pop
jge
jbe
frstpm(287
xlat
ret
sti
xor
iret
movlps
and
mov
push
ja
cmp
xchg
js
mov
sbb
push
enter
and
test
sbb
pop
inc
sub
inc
gs
push
stos
mov
mov
repz
movsb
add
or
adc
cmp
mov
paddq
xchg
inc
push
cld
sub
cs
test
and
bound
cmpsl
xchg
lea
and
jecxz
pop
sti
loop
imul
and
shr
mov
cmp
out
icebp
and
push
pop
mov
jnp
test
and
jae
roll
or
cli
into
dec
stc
jo
or
dec
sbbb
inc
pop
pop
fimull
cmp
rcr
adc
lcall
mov
fimuls
les
mov
int3
das
das
lea
adc
xchg
mov
sbb
mov
or
fimull
push
cmc
jo
sbbl
jae
jmp
push
mov
in
sub
sbb
aam
add
outsl
jbe
in
cmp
data16
xorl
fwait
jp
mov
xor
adc
scas
pusha
lds
iret
jb
inc
jle
outsb
int3
mov
js
rclb
int3
adc
cmpsl
jmp
xchg
fwait
sti
lret
rcrb
xor
xor
jmp
in
aas
and
bound
sub
in
popf
inc
pop
popa
cs
jne
inc
dec
mov
fisubrl
sahf
mov
int
xchg
fsubrs
pop
mov
push
xchg
xor
or
notb
fistpl
mov
orl
data16
pop
aas
inc
int
popa
fistps
out
ret
pop
adc
test
loope
pushf
push
popf
out
pop
dec
fisubl
repz
fcoms
test
push
loope
dec
xchg
mov
xor
mov
or
push
lcall
mov
push
adc
test
inc
mov
jb
jg
loope
sub
rolb
inc
sbb
mov
inc
mov
xor
mov
adc
ret
sub
dec
inc
mov
push
jnp
xlat
and
fdivrs
xchg
aam
sub
aam
imul
repz
xchg
pop
ret
fists
inc
pop
push
add
xchg
cmp
mov
jg
stc
add
xchg
mov
pop
clc
test
jo
outsb
mov
mov
outsb
pop
in
js
cli
sub
xor
fadd
jne
xchg
jbe
lods
sub
rolb
clc
sbb
in
sar
jnp
imul
cmc
inc
test
add
popa
in
lods
xor
mov
pushf
popa
or
popf
mov
popa
mov
aas
scas
movsb
addl
mov
add
daa
mov
add
out
lods
push
pop
mov
push
cmc
push
insb
mov
test
pop
pextrw
sbb
loope
imul
and
xchg
pop
std
mov
push
mov
shll
mov
mov
addr16
mov
sub
movsb
or
mov
or
mov
imul
push
jecxz
mov
fstl
test
adc
test
push
fs
mov
cld
cmp
scas
xor
out
ds
mov
pop
scas
push
cltd
fwait
cmp
testl
or
movd
sub
fisubrl
and
imul
test
sbb
gs
inc
daa
jg
or
outsl
cmp
lods
and
orl
or
push
mov
inc
imul
adc
ljmp
lods
loope
bound
roll
lret
cmp
je
jge
sub
mov
daa
sbb
cld
mov
addr16
cmp
pop
or
xchg
fwait
stos
sahf
jbe
adc
lock
testb
jmp
mov
shrb
clc
cmp
xor
pushf
iret
fcomip
mov
inc
aam
lods
xchg
jmp
sahf
loop
adc
xor
dec
jge
and
pop
sarl
xchg
sbb
xchg
jb
push
shr
xchg
enter
or
and
inc
cmpb
xor
pop
mov
es
pop
sub
mov
fldl
lock
xchg
sti
and
push
incb
push
and
bnd
jmp
pop
inc
mov
mov
cmp
icebp
out
push
adc
mov
pop
push
sar
jno
loop
lock
mul
jge
xchg
mov
push
inc
neg
xor
pop
push
ret
sub
mov
jnp
xchg
cmp
and
cmp
stos
inc
xchg
outsl
mov
cmp
std
cmp
push
jae
add
repz
iret
rorl
sarb
loopne
push
or
sbb
add
and
pushf
shrb
cli
out
lods
and
insb
push
shrl
cmp
mov
jb
mov
jecxz
js
jle
jle
test
loope
pop
hlt
xchg
xor
out
rclb
hlt
push
andl
aad
jo
mov
mov
or
adc
cwtl
jmp
push
pop
fwait
add
fwait
push
outsb
sarb
add
scas
mov
mov
xchg
rcll
cmp
stos
addr16
cmp
pop
xchg
xchg
data16
mov
push
adcl
js
add
xchg
push
rclb
sub
test
sbb
bound
repz
repz
imul
ret
sbb
rol
call
mov
aaa
jmp
lods
fdiv
addr16
inc
loopne
pop
or
jle
sbbl
cli
enter
push
aad
push
out
xor
jle
gs
cmp
jp
idivl
stos
cmp
push
dec
shrb
out
lret
nop
xchg
pusha
inc
pusha
scas
adc
jle
ret
and
pop
mov
out
test
xchg
fwait
push
push
sbb
inc
mov
lea
sarb
mov
inc
mov
imul
ds
aam
adc
xchg
dec
outsl
outsl
xchg
loopne
jl
push
mov
popf
mov
dec
pop
jo
or
js
mov
popf
cmp
xchg
mov
fisubs
lret
lcall
lock
jg
inc
or
test
adc
cmp
pushf
mov
ss
pop
jne
add
gs
in
das
sbb
or
mov
dec
inc
push
ja
pop
pop
jl
es
adc
lods
dec
xor
xchg
popf
inc
lock
sbb
imul
pop
inc
mov
mov
adc
cmpsl
sbb
xor
lods
dec
sub
cmp
test
mov
jnp
jecxz
fxch
fisubs
mov
movsl
ret
aas
add
inc
pop
in
repz
mov
insl
jne
sbb
push
enter
pop
cltd
jae
cmpsl
cwtl
loopne
xchg
cmp
mov
aad
push
mov
orb
sbbb
pop
add
xchg
hlt
mov
xchg
push
and
inc
mov
fidivl
lea
out
cmpsb
sahf
push
movsl
cltd
mov
xor
fistpll
aad
movsb
fs
in
insb
mov
std
lahf
jg
in
fimuls
es
aaa
into
dec
popa
xchg
sbb
xchg
sarl
insl
test
mov
sub
das
mov
pop
mov
mov
jne
cmp
andl
jae
push
push
jae
or
jo
gs
imul
lods
cmp
test
insl
out
xchg
mov
aas
insl
aad
pop
je
bound
out
pop
test
inc
cs
inc
mov
mov
ret
mov
pop
dec
sarl
xchg
imul
mov
cli
pusha
in
enter
bound
sub
ror
aad
sarb
call
jg
lcall
adc
repnz
mov
bound
push
mov
inc
rorb
sbb
loope
jp
dec
subb
mov
inc
mov
pop
dec
je
fmull
and
xor
jge
mov
add
outsb
xorl
or
or
xor
jg
out
ds
push
cmpsb
push
int3
sbb
sub
add
ss
xchg
sub
clc
mov
sub
js
mov
sar
jnp
inc
pop
xlat
arpl
adc
lea
sbb
pop
mov
jle
aad
icebp
mov
cmpsb
add
test
out
std
inc
or
ds
ljmp
and
fsubs
sub
fcompl
test
je
and
test
loop
push
gs
adc
mov
test
xchg
sbb
inc
dec
push
fisubs
xchg
mov
repnz
test
cpuid
insb
jbe
xchg
xchg
jbe
adc
mov
mov
xchg
orb
rcrb
add
add
mov
lret
int
pop
cmp
addb
enter
ds
jae
jp
jl
fndisi(8087
aas
mov
pop
push
roll
jmp
xlat
movsl
inc
or
push
mov
adc
xor
outsb
or
cs
out
sbb
mov
arpl
push
push
rorl
dec
pop
lea
adc
sub
jb
mov
clc
into
inc
lea
stc
mov
pushf
repz
fistl
scas
push
inc
daa
mov
push
jbe
push
adc
mov
test
stos
out
mov
xchg
pop
jl
les
cmpb
add
push
pop
xor
mov
add
jo
xor
in
andb
stc
enter
fistl
repz
or
sub
iret
test
fdivrs
mov
push
or
jnp
test
hlt
pop
mov
sub
jp
lods
call
enter
sub
or
inc
or
cwtl
cmpl
loopne
mov
mov
pop
in
repnz
xchg
cmp
popa
mov
lea
push
fidivl
pop
add
mov
sbb
les
sahf
out
out
and
cli
fldt
mov
mov
mov
mov
cld
das
imul
xchg
sub
loopne
movsl
repnz
sub
inc
insb
std
sbb
xchg
nop
cmpsl
clc
test
mov
es
cs
inc
sbb
xor
pop
ja
add
repnz
inc
mov
call
imul
add
pop
aas
mov
adc
mov
xlat
jle
clc
outsl
movsb
jecxz
sbb
popa
adc
scas
cmp
dec
in
inc
cmc
popa
pop
mov
mov
push
or
xchg
push
mov
sub
sub
xorb
and
int
push
into
mov
testl
lods
jo
gs
mov
xor
sub
push
push
sbb
adc
jnp
inc
pop
xchg
or
mov
repz
add
and
jge
jmp
xchg
cmc
gs
xchg
mov
push
push
jbe
lea
shlb
decb
es
add
lea
lcall
out
cmp
xchg
push
jae
and
push
or
leave
out
iret
fcmovu
sbb
or
lret
mov
pop
mov
fwait
jl
jge
std
in
jecxz
rorb
jecxz
test
test
sub
ds
jbe
adc
xchg
lret
pushf
ds
in
jg
cmp
xor
and
xchg
subb
pop
adc
and
stos
push
daa
cmp
ret
andl
enter
push
mov
icebp
aas
mov
adc
cwtl
in
imul
and
mov
mov
scas
outsb
mov
out
jbe
lret
add
sub
ljmp
mov
cmpsb
movsb
rol
pop
dec
mov
cs
out
mov
cmp
xchg
js
fmull
jmp
jle
cmp
out
ficoml
sub
push
jge
cmp
pusha
xor
sub
mov
jo
sbb
sar
mov
roll
and
jb
mov
lock
lret
mov
sti
push
or
sbb
inc
repnz
push
fstp
fistl
orb
sub
outsl
ds
cmp
sub
das
xchg
ds
add
inc
clc
xor
arpl
and
jbe
iret
mov
hlt
inc
push
add
xchg
sub
or
sub
adc
orb
mov
jecxz
andb
mov
ljmp
sub
sbb
dec
repz
cli
mov
push
insb
push
push
push
inc
dec
mov
rcr
gs
dec
ror
ficompl
sahf
stos
add
lds
arpl
lahf
roll
jnp
insb
push
pop
lret
xor
mov
xlat
int3
popa
enter
sbb
pop
movsl
mov
testl
out
lods
test
popf
dec
rcll
cmpsl
dec
mov
and
mov
or
push
mov
add
sahf
mov
std
fstpl
fisubl
push
jmp
xor
adc
ljmp
jecxz
push
push
int
push
sahf
inc
add
call
cwtl
xor
es
pop
dec
mov
push
sbb
stos
push
and
fs
testl
xchg
je
or
pop
jnp
leave
jmp
or
jo
adc
jle
addr16
mov
mov
dec
and
outsb
push
mov
bound
adc
jae
cwtl
insb
xor
mov
sbbl
jmp
jle
test
cmp
xchg
and
push
add
inc
pushf
or
sbb
mov
push
hlt
pop
jo
mov
or
movsb
dec
aaa
and
inc
outsb
dec
subl
or
mov
clc
aad
sub
pop
inc
mov
pop
iret
xchg
bound
dec
insb
mov
jmp
jl
mov
stc
ret
push
push
lods
ret
push
add
adc
mov
orb
dec
mov
stc
orb
push
lcall
loope
orb
jp
mov
pop
bound
data16
adcl
sub
pop
imul
push
aas
ret
roll
pop
xorb
movsb
test
xor
pop
fidivrs
dec
fnstsw
jle
pusha
jne
sub
ficomps
dec
mov
pop
or
xor
sbb
jnp
mov
xchg
cmp
mov
jb
pop
mov
fistpll
push
dec
icebp
lock
mov
jo
popa
test
sub
and
stos
sbbb
outsl
movsl
push
fucomp
xor
sub
movsl
repz
pop
push
shrb
inc
xor
xchg
loopne
push
xchg
fisubrl
inc
cmpsb
push
mov
add
mov
sub
push
xor
in
or
push
leave
pop
fimuls
je
in
or
mov
mov
loop
mov
mov
sub
adc
pushf
adcb
std
fsubs
outsl
or
push
test
push
cmp
cmp
xor
sbb
movsb
jne
pop
fnstsw
xor
dec
sub
pushf
xchg
dec
xchg
jecxz
pushf
dec
xchg
imul
les
mov
rcrb
sub
test
ja
out
in
imul
cs
btc
push
push
clc
or
ds
adc
roll
pop
aam
cltd
int
aas
jle
adc
jg
test
pop
shl
lea
jno
cwtl
push
fdivl
adc
jne
pop
mov
xchg
add
lds
dec
les
and
lods
lea
push
inc
xchg
add
inc
dec
insl
cmp
xor
aaa
mov
fisubs
xor
mov
stos
fs
mov
xor
sbb
inc
js
inc
push
push
test
pop
inc
or
push
add
xor
scas
imul
dec
cmp
and
ret
cli
pop
stc
adc
sbb
popa
cs
cld
xor
mov
add
lods
push
xor
xchg
xchg
mov
and
loope
fnstenv
rorl
shrl
mov
and
into
jbe
leave
ja
adc
idivb
dec
dec
js
mov
out
aas
sub
out
adc
out
jbe
pusha
and
scas
std
cltd
adcb
pop
scas
stos
mov
jge
dec
jmp
cmpsb
add
dec
pop
fldenv
mov
hlt
lods
popa
ss
jmp
shll
xchg
adc
data16
lret
inc
add
mov
mov
sub
dec
arpl
cmp
fistpll
jl
sbb
in
cmp
mov
addl
in
jae
cmpsl
pop
inc
push
mov
test
lds
lahf
mov
stc
movsb
mov
je
xor
jp
cmp
sbb
lds
data16
sub
xchg
pop
rcrb
or
cmc
sahf
aaa
sahf
aas
adc
jb
sub
pop
pop
push
mov
jle
mov
cmp
popa
fdivr
pusha
push
loopne
shrl
pop
or
in
scas
or
sub
dec
mov
jne
inc
jecxz
xor
stos
push
mov
ljmp
push
das
adc
mov
add
das
int3
cmpsb
jp
jl
sbb
adcl
cli
repz
mov
out
jl
pop
xor
je
inc
mov
popf
jecxz
xor
shll
adc
inc
repz
mov
out
sbb
xor
pusha
test
insb
fcomi
mov
repnz
cmp
lds
fdivr
shll
jo
mov
popf
fisttpl
shll
sahf
fs
out
aad
and
dec
mov
imul
dec
js
fcomip
subb
ficoml
pop
xchg
arpl
dec
data16
jl
jb
adc
shrl
jp
jnp
pop
lret
fdivl
lcall
frstor
and
mov
pop
movsl
and
push
or
lock
lahf
mov
stc
call
sub
push
xchg
adcb
test
sbb
xchg
push
popf
and
in
je
mov
je
notb
and
stos
fcoms
fdivr
in
lret
hlt
mov
mov
mov
sbb
dec
int
mov
xchg
xor
aam
mov
in
enter
in
add
dec
sub
push
hlt
mov
std
pop
xchg
test
adc
fnstenv
inc
mov
dec
ja
dec
or
out
outsb
lahf
nop
cmp
inc
mov
inc
ret
adc
add
push
xor
jl
call
inc
mov
cltd
outsl
js
ret
in
loope
in
clc
jecxz
xor
or
iret
mov
pusha
shrl
dec
insb
jb
mov
ret
fists
xchg
out
mov
nop
cmp
shrl
push
or
pop
sti
cmp
sti
negb
movsb
imul
cmp
xchg
std
mov
lods
repnz
clc
sbb
jne
pop
arpl
cld
test
jmp
iret
in
push
rorl
dec
cmp
mov
push
and
and
cmpsb
mov
aam
repnz
das
pushl
test
jmp
xor
insb
add
loop
inc
inc
push
out
fldcw
jge
inc
sub
sub
mov
add
or
idivb
orl
ljmp
cltd
inc
mov
mov
cli
xchg
lds
xor
inc
xchg
add
pop
lock
cli
ljmp
lods
or
xor
popa
xor
jbe
addr16
jle
dec
cwtl
jne
sub
aaa
arpl
enter
das
outsl
mov
mov
xlat
mov
pop
inc
and
subb
sub
jae
out
mov
inc
fadds
adc
repz
pusha
mov
jnp
xor
outsl
push
mov
xchg
icebp
adc
sbb
inc
mov
sub
cli
loop
cmp
repnz
lods
xchg
pop
xlat
and
pop
jl
mov
int
sub
jecxz
xlat
sub
getsec
xchg
jne
pop
popf
sub
ja
add
mov
dec
pop
popa
sbb
mov
xor
or
push
into
shlb
punpckhwd
dec
popa
or
sahf
ret
cmpb
add
test
mov
stos
ret
xchg
pop
shl
xchg
out
es
test
mov
dec
test
push
adc
in
lds
lret
add
test
inc
iret
xchg
int3
inc
inc
cmp
push
fadds
xor
test
adc
ja
pusha
cmc
loop
shrl
or
mov
mov
jg
mov
dec
cmp
test
mov
adc
inc
lock
lds
pop
and
pushf
pop
push
popa
push
imul
int3
push
adc
sbb
test
xchg
inc
sbb
popa
or
ret
es
rcrb
int
mov
cltd
and
push
fwait
inc
push
push
call
jg
mov
ror
aas
arpl
out
ss
sarb
jne
fs
je
sbb
mov
inc
xor
mov
push
mov
add
roll
stos
aaa
pop
pop
xor
cmpsl
xchg
mov
mov
push
sub
push
mov
pop
cmc
andb
jno
lods
stc
insb
jae
lock
cltd
fs
cltd
inc
jge
push
and
fdivr
pushf
xchg
add
cmp
mov
push
repnz
test
mov
or
push
fists
push
std
push
push
mov
xor
mov
mov
jmp
fwait
adc
cmp
xor
stc
adc
in
xchg
mov
pop
cmp
mov
mov
inc
jo
mov
push
in
and
push
std
je
fbstp
mov
ss
fisubrs
sbbb
ret
mov
sub
movsb
add
mov
fs
stos
mov
test
mov
sti
stc
outsl
repz
int3
add
xchg
daa
pushf
pop
jnp
xchg
jle
jmp
mov
xchg
xchg
fnstcw
xchg
mov
dec
dec
mov
ds
cmp
cmpsb
imul
cmp
dec
mov
mov
not
adc
das
adc
and
outsb
ja
cmpsl
pushf
sbb
mov
push
nop
adc
mov
add
nop
mov
inc
mov
insl
fsubrl
add
pop
mov
mov
dec
cmp
pop
loop
out
mov
inc
stos
fnstcw
pop
jecxz
lahf
in
jge
mov
gs
xchg
ja
popf
cmc
mov
sbbl
jne
sub
push
ja
ljmp
ja
test
mov
out
push
jl
cmp
mov
sbb
mov
les
jno
lds
xchg
push
lods
jl
dec
dec
enter
cmp
test
roll
fdivs
call
or
popa
scas
and
mov
sbb
mov
sbb
js
scas
push
add
xor
addr16
test
cmpsl
or
jmp
lcall
xchg
lock
adc
cwtl
mov
jge
mov
movsb
shl
movsl
movntps
cmpsl
test
xor
push
divl
or
lret
gs
sub
addr16
cli
and
in
test
xor
int
ret
icebp
int3
mov
orps
aam
dec
ja
mov
push
movl
cmpsl
cmp
mov
fstl
sub
cwtl
iret
bound
jge
lods
jnp
stc
add
mov
insl
dec
pop
sub
fsubl
test
inc
dec
sbb
hlt
lret
aad
mov
sbb
lss
xchg
mov
mov
cmp
xchg
jmp
sub
push
out
mov
sbb
jmp
popa
inc
adc
popa
mov
pop
xor
dec
in
adc
cmp
cmp
sti
pushf
xor
xor
sub
sub
inc
mov
test
jnp
pop
es
xchg
rclb
push
scas
lcall
xchg
lods
test
adc
mov
cli
jmp
xor
neg
aaa
mov
hlt
lods
inc
nop
inc
xchg
sahf
sbb
mov
mov
mov
icebp
jle
lret
leave
or
movsb
xchg
push
lret
adc
and
jmp
out
ljmp
repz
lret
mov
lret
rorb
jb
std
nop
sbb
xchg
addr16
xor
adc
mov
je
pop
dec
popf
mov
inc
xlat
xchg
sub
into
imul
xor
stc
mov
dec
mov
pop
enter
or
or
mov
mov
cld
sub
outsb
test
in
inc
fists
lock
das
pop
pop
sub
test
add
add
sbb
sub
repnz
cld
push
dec
jg
xchg
imull
dec
or
jns
push
push
lods
divb
les
hlt
dec
push
sub
add
mov
ja
scas
cmp
inc
adcb
and
cltd
fcmovnu
add
ficomps
loopne
cmp
cmp
ljmp
jge
sbb
add
dec
adc
mov
lods
fistl
cmp
popf
jae
fisubl
not
je
cmp
sbb
dec
push
xchg
test
js
fnstsw
arpl
sub
sbb
ljmp
dec
mov
ljmp
or
jge
sbb
push
pop
or
bswap
push
inc
sub
enter
in
or
and
jmp
std
or
imull
lcall
das
ret
xchg
call
lds
je
mov
push
jbe
mov
sahf
jmp
outsl
cmp
in
fwait
sbb
xor
dec
enter
aam
icebp
mov
nop
out
test
cmp
xchg
adc
or
out
lock
xchg
fs
sbb
dec
clc
mov
mov
fidivrl
lds
je
pop
fidivl
sub
cmpsl
pop
adc
mov
cmp
mov
aaa
out
add
clc
stc
add
xchg
scas
repnz
cld
xchg
cmp
sti
jno
lods
cmp
xor
je
push
movsl
mov
xchg
mov
movl
fwait
lds
dec
call
stos
push
xlat
sbb
or
dec
push
push
ja
into
enter
xlat
jbe
fwait
loop
mov
ss
arpl
jns
lret
mov
push
jne
mov
or
mov
jae
insb
mov
dec
dec
aaa
stc
arpl
scas
in
pop
lods
fs
push
adc
jo
icebp
and
repz
sbb
outsb
cmp
push
arpl
in
mov
cmpsb
cmp
ljmp
push
xchg
fmuls
and
mov
pop
dec
mov
adc
addr16
and
mov
mov
inc
xor
mov
icebp
mov
test
icebp
push
push
loop
xor
pushl
call
leave
adcb
mov
adc
into
call
cmpsl
push
icebp
aaa
mov
pop
sbb
adcl
lods
mov
addr16
mov
fsubr
arpl
das
sahf
and
sbbb
arpl
das
mov
inc
flds
mov
daa
mov
in
inc
cmp
hlt
inc
mov
mov
jl
mov
fcoms
mov
lahf
roll
fsubl
fisubl
add
fisubs
jns
inc
lods
dec
jge
sub
movsb
push
mov
mov
or
popa
es
idivl
lcall
mov
and
cltd
cmpsl
sub
add
mov
push
test
jp
les
das
sub
movsl
daa
inc
dec
rorl
mov
insl
test
inc
movsl
gs
test
and
sub
mov
dec
je
xchg
inc
dec
cmp
xor
mov
push
rclb
push
or
fisttps
incb
add
adc
push
add
pop
mov
push
xor
popa
or
imul
jl
lods
add
xchg
mov
sub
dec
repz
pop
mov
loope
push
cmpsb
bound
jl
sbbb
adcb
add
adcb
cli
rolb
sbb
cmpsb
dec
dec
cwtl
jl
aam
sti
cmp
mov
cmp
loop
popa
xchg
cs
and
adc
pop
xchg
mov
mov
sbb
ret
icebp
inc
sbb
arpl
lret
sub
stos
movsb
add
fisttpll
les
push
shrl
nop
daa
adc
cltd
dec
insb
dec
push
xchg
and
push
dec
pop
xor
inc
je
adc
andl
fldt
adc
and
or
dec
xchg
xor
roll
sbb
dec
shll
xchg
cli
dec
or
rorl
xchg
and
xchg
jl
cmpsb
shrl
jnp
aaa
xlat
dec
jbe
imul
or
dec
and
sbb
adc
rolb
jno
xchg
sbb
xchg
inc
add
add
rcl
sub
sub
push
push
push
nop
and
mov
idiv
fs
jl
jl
aam
mov
mov
pusha
mov
jbe
or
movsl
cs
cli
inc
xor
sti
cmp
mov
lahf
pusha
dec
mov
jbe
mov
es
push
xchg
or
imul
inc
leave
outsb
cmpsb
out
and
int3
push
divb
inc
dec
in
js
pop
mov
shl
push
adc
hlt
shll
add
ss
pop
call
adc
ja
fadd
dec
adc
hlt
push
cld
aam
loop
cmp
data16
leave
inc
inc
cmp
scas
cli
fdivl
fcoms
push
mov
iret
out
dec
push
test
jns
sbb
mov
cmc
stc
dec
jnp
add
adc
dec
pop
inc
fisttps
gs
addr16
cld
mov
rorl
jecxz
pop
push
rcrl
pop
bound
and
decl
ret
xor
sar
out
xchg
popf
push
add
shr
mov
call
pop
cmp
movswl
pop
pop
and
test
push
sti
dec
in
cmp
add
xchg
mov
dec
bound
jbe
sub
loope
pushf
cmp
imul
js
adc
or
insl
addr16
in
push
push
nop
mov
sbb
in
push
inc
mov
mov
out
adc
xchg
push
ljmp
xor
fidivrl
sbb
call
in
mov
cld
shll
mov
pop
adc
daa
lret
sbb
loope
add
mov
mov
clc
call
insb
push
aaa
push
jns
inc
daa
mov
sub
jo
and
loope
xchg
lret
push
adc
cmovne
mov
clc
iret
xor
push
mov
pop
int3
sub
stc
mov
repnz
push
imul
xor
aam
bound
push
gs
bound
sub
aad
jmp
inc
add
andl
sub
xorb
fwait
jo
sbb
loopne
aam
jo
jbe
sub
sbb
pop
call
pop
pop
lds
dec
out
jge
shrl
and
push
push
inc
xchg
mov
adc
jecxz
pop
cs
loop
fs
popa
xchg
gs
in
pop
inc
xchg
leave
mov
xor
movsb
or
inc
stos
sub
adc
sbb
sbb
pop
iret
insb
and
sbbb
inc
mov
jle
push
pop
pop
sahf
mov
inc
popa
lcall
sbb
push
add
mov
aad
add
frstor
and
sbb
mov
cld
jmp
loope
lret
xchg
fiadds
shr
jge
pop
mov
scas
mov
mov
xlat
scas
mov
aaa
pusha
rcrb
mov
mov
inc
filds
inc
movsb
pminsw
ljmp
mov
jae
sbb
pop
mov
cmp
incl
enter
js
in
pop
sbb
push
push
pushl
mov
loope
outsb
stos
push
push
pop
fbstp
je
cltd
arpl
mov
push
cltd
pop
loopne
add
pop
rclb
fwait
scas
mov
push
les
pop
cmp
mov
cmc
je
lahf
mov
iret
or
dec
leave
sti
push
std
out
mov
flds
jp
je
mov
call
add
dec
mov
or
mov
xor
ds
or
sbb
lock
subl
sub
out
jge
xor
lods
cmp
mov
sbbl
mov
cmp
ljmp
test
in
fxch
and
jmp
mov
dec
jnp
adc
out
mov
xchg
inc
push
mov
xchg
push
mov
leave
mov
mov
aas
xchg
dec
fwait
push
add
mov
call
pusha
pop
jno
stos
and
cmp
loope
lcall
ss
rcrl
adc
xor
fs
pop
subl
mov
adc
mov
xchg
add
dec
push
sub
inc
mov
addb
andb
fidivs
leave
adc
mov
cmp
lods
push
jne
pop
sbb
loope
fisttpl
add
xor
inc
loope
mov
sarl
enter
fiaddl
pusha
or
int3
movsl
or
push
cmpb
filds
outsl
and
sbb
dec
pushf
ja
sbb
insb
sub
pushf
subl
das
es
cmp
xor
clc
call
iret
sti
push
addr16
test
pop
jecxz
dec
mov
cmc
sub
lcall
clc
arpl
scas
push
jge
mov
mov
popf
sbb
ret
mov
outsl
mov
lock
jne
test
pop
nop
sub
mov
mov
push
mov
lretw
scas
mov
add
fbld
pop
scas
mov
repz
xchg
mov
mov
add
adc
mov
sbb
test
sbb
les
mov
jns
jge
inc
or
fwait
mov
imul
repz
pop
popa
jno
add
lea
test
push
mov
jp
mov
imul
xor
and
cmpsl
pop
fcoms
jecxz
add
inc
lock
sbb
jmp
into
je
adc
fdivrs
rcll
cmp
fdivrs
inc
push
dec
jp
jne
mov
xchg
insl
dec
add
lret
lods
das
jmp
lods
rorb
js
lcall
mov
inc
js
sbb
dec
stos
inc
adc
jo
mov
mov
add
mov
xchg
jne
or
aas
nop
mov
inc
lcall
cmp
push
lock
sub
loope
mov
fldl
cmc
mov
jg
test
hlt
fstl
adc
andb
push
pusha
cmp
dec
mov
mov
or
sbb
dec
mov
cld
addr16
ljmpw
gs
ret
sbb
jbe
and
sub
cli
bound
mov
iret
imul
repz
int3
xchg
js
ret
xchg
test
les
inc
xchg
pop
adcb
inc
pushf
inc
fisubrl
jne
and
dec
pop
dec
xor
ficoml
push
adc
push
out
aas
std
pop
divb
popa
dec
pop
and
inc
les
imul
sbb
out
mov
cmp
and
push
add
int3
jmp
das
jecxz
pop
xor
and
and
out
int3
adc
sbb
inc
fwait
and
ss
bound
pop
iret
or
enter
inc
js
fs
orb
pushf
adc
cmp
dec
leave
ja
xor
sub
leave
xchg
in
sub
sbbb
movsb
mov
dec
fwait
stos
js
loop
jl
into
mov
jmp
loop
jp
mov
sbb
pop
or
lret
jecxz
jl
in
out
daa
dec
inc
fmuls
cmp
aad
sbbb
repnz
stos
and
scas
mov
std
in
rclb
stos
push
mov
and
dec
mov
mov
add
adc
pop
pop
push
sub
sub
leave
imulb
cs
xor
sub
push
sti
test
or
sub
or
adc
xor
push
gs
sahf
xchg
mov
push
addr16
jne
mov
push
push
or
repnz
add
ljmp
sarl
adc
sbb
mov
sarb
and
mov
dec
dec
aaa
insb
push
sahf
sub
xchg
int3
sbb
arpl
stc
cs
jb
mov
neg
jb
adcb
pop
inc
sub
jmp
inc
cmp
inc
mov
sub
cmp
add
out
stos
cli
or
inc
imul
ror
jl
xchg
jmp
clc
xchg
cmp
aad
lret
popf
out
stc
insb
push
push
jns
inc
jo
inc
inc
cmp
out
and
int3
daa
ljmp
and
pop
and
mov
add
cmp
mov
into
and
stos
pop
sti
mov
jbe
inc
jg
cwtl
pop
sub
mov
das
dec
data16
stos
jge
jns
mov
add
aaa
and
push
cmp
or
ljmp
imul
and
ret
mov
aam
cmpsl
imul
mov
ret
pop
pop
out
mov
outsb
ret
sti
inc
and
mov
dec
mov
sbb
mov
pop
sub
dec
fwait
adc
hlt
xor
js
sub
insl
repz
push
movsb
clc
sbb
jbe
mov
cltd
lcall
clc
push
xchg
lods
in
and
and
nop
sbb
mov
or
xchg
cmpsb
addr16
xor
mov
lea
xchg
sub
lahf
xchg
stos
lcall
mov
pop
jp
pop
inc
push
pop
ss
cmp
js
rclb
arpl
mov
into
dec
iret
xchg
sbb
inc
mov
cmp
loopne
xor
push
cmpsb
push
ret
pop
std
or
out
imul
xchg
cmp
int
lds
pop
loop
in
pop
adc
cmp
pop
dec
lcall
ret
test
xor
out
mov
aam
fimull
aad
add
or
mov
ret
xor
add
inc
daa
iret
enter
sub
out
xchg
jg
xor
sbb
mov
add
or
call
test
sbb
push
jb
pop
adcl
jg
scas
sbb
scas
adc
outsl
pop
outsl
sbb
mov
iret
jl
xchg
lret
jns
pop
push
lea
icebp
and
aaa
fs
fstl
adc
jne
add
add
xchg
jnp
cmp
mov
outsb
cld
hlt
push
and
mov
mov
cmp
add
sbb
add
rcrl
jle
or
pushf
pop
hlt
xor
mov
lods
mov
sub
mov
xor
push
and
cmp
sti
adc
cmovg
cltd
xchg
xorl
mov
sub
out
orb
movsl
mov
jns
inc
adc
arpl
nop
mov
xchg
and
and
xchg
cwtl
push
pop
test
or
roll
imul
jle
jge
push
push
pushf
bound
xor
xchg
add
xchg
cwtl
adc
mov
je
ss
add
pop
dec
lcall
jmp
push
enter
jl
xlat
mov
repnz
sub
jl
mov
inc
leave
cmpsl
push
xchg
jbe
lds
pop
push
test
mov
cmp
pusha
xchg
pop
je
push
adc
and
add
xchg
mov
xlat
adc
inc
push
popa
fcoms
shl
mov
dec
and
cmp
push
mov
test
popf
fimuls
mov
fdivrs
jecxz
push
mov
dec
sbb
xlat
jmp
mov
sbb
push
mov
orl
fs
testl
xor
adc
imul
jne
loope
jns
leave
mov
mov
sahf
push
inc
fnsave
insl
icebp
shl
sbb
dec
mov
dec
cmp
push
adc
push
leave
adc
and
dec
mov
xor
add
adc
jno
data16
js
and
movsb
loopne
cmp
bswap
inc
dec
popa
pushf
insl
mov
cld
sub
mov
and
mov
loop
pop
sbb
or
ret
mov
test
repz
mov
cmp
pop
ficompl
ja
push
popf
adc
cmpsl
jbe
jbe
pop
jae
daa
push
ja
js
lret
adc
jns
jne
inc
test
shlb
adc
dec
mov
ret
mov
xchg
cld
and
mov
dec
cmpsb
jle
mov
in
cltd
enter
ret
ret
out
sbb
je
push
cmp
pop
loope
xchg
mov
loopne
push
leave
iret
or
shrb
xor
test
or
push
push
fidivl
push
or
push
xor
cltd
push
push
loope
adc
insl
lock
and
ret
sub
iret
adc
data16
int
fwait
sbb
insl
jno
mov
mov
sbbb
push
mov
cmpsb
sbbb
stos
push
call
mov
inc
test
xchg
jmp
arpl
ds
ret
rorb
fmull
out
mov
lods
mov
adc
mov
cld
dec
sub
or
sub
sub
sarl
dec
hlt
pop
rcrb
mov
jbe
or
mov
ljmp
out
fdivrl
cmp
aad
mov
add
sarb
gs
or
sarb
pop
jge
push
cmp
sub
xor
pop
gs
push
mov
imul
call
ja
dec
stc
sub
adc
es
shll
cmp
shl
loope
and
push
lret
in
ja
scas
cmp
in
push
rcl
test
add
and
ja
aaa
lock
f2xm1
nop
mov
and
outsb
xchg
push
push
fildll
cmp
pushf
xor
push
mov
inc
jno
inc
mov
aaa
adcl
popa
add
jecxz
fwait
repnz
jbe
add
sti
fists
or
xchg
dec
xchg
call
not
jp
ret
pop
popf
pushf
dec
mov
repz
aam
pop
in
xor
mov
outsb
push
pop
shrl
flds
testl
and
xor
mov
int3
jne
test
mov
aas
out
mov
adc
mov
add
jecxz
cmp
cs
and
je
pop
scas
js
adc
sub
add
jecxz
mov
add
js
push
out
in
std
and
lods
mov
xchg
punpckldq
mov
jne
jne
mov
ja
push
xchg
jae
add
dec
mov
xlat
sarl
das
jbe
pop
xorb
push
lahf
jle
jecxz
inc
test
loopne
cli
mov
dec
arpl
repz
shlb
fcomps
mov
mov
jmp
notb
jnp
subb
sub
loopne
es
in
sub
rolb
fisttps
sti
xchg
xchg
test
test
test
xchg
rorl
adc
mov
pop
jnp
jmp
ljmp
ljmp
lods
fsubp
icebp
cmp
testl
adc
dec
pop
push
sub
rep
arpl
and
xchg
rcrl
mov
mov
loop
lcall
ja
or
dec
into
xor
std
adc
out
lret
or
rclb
pop
jl
pop
sbb
shrb
inc
fwait
sub
jb
das
push
push
and
leave
pushf
or
push
push
leave
xor
xor
and
xchg
push
xor
rcr
mov
cmpl
stos
sub
test
jae
aad
lret
ficomps
ja
sti
bnd
add
lret
add
push
cld
inc
faddl
sbb
push
cld
loope
cmpl
jns
ret
ds
hlt
jbe
lea
fdiv
jbe
cmpsl
pop
iret
mov
mov
sbb
pop
and
mov
jge
jge
mov
rolb
mov
push
push
or
or
outsb
leave
fnstsw
fwait
cmp
push
in
pop
and
dec
hlt
xlat
or
cmpsl
push
jecxz
cmpsl
push
adc
mov
scas
sub
sbb
mov
jmp
std
sub
addr16
xchg
sbb
test
mov
sbb
inc
dec
jns
lahf
iret
dec
icebp
push
mov
add
push
lret
nop
mov
jle
mov
mov
nop
pushfw
icebp
push
insb
lock
nop
mov
les
loop
mov
sbb
push
xchg
and
mov
mov
and
mov
jbe
inc
mov
or
mov
sbb
popf
outsb
loop
je
mov
stos
push
and
ret
or
mov
jl
lock
fs
adc
dec
nop
clc
cmpsl
xor
mov
arpl
mov
cli
or
inc
push
xchg
cmpsb
lock
sbbl
mov
stc
inc
movsb
dec
mov
les
incb
loope
lret
scas
dec
and
xchg
pop
push
xchg
sbb
adc
stos
inc
add
cmp
cwtl
jge
pusha
jecxz
adc
addr16
push
dec
call
mov
mov
sub
inc
inc
incl
imul
adc
ljmp
hlt
xor
enter
cmp
pop
outsb
mov
pop
xchg
jno
loope
stos
and
push
dec
mov
lock
aam
ret
mov
pop
roll
and
aam
mov
cmc
dec
add
jno
xor
lea
mov
ss
mov
ret
push
ss
sbb
fwait
mov
je
adc
jo
rol
stos
mov
dec
mov
and
leave
sti
push
cli
mov
jp
scas
ror
mov
or
shll
cmc
repnz
sub
mov
lret
pop
iret
and
lret
pop
mov
pop
jp
fidivrs
arpl
out
pop
add
inc
sub
cmp
and
jns
and
call
ljmp
jmp
jne
jg
enter
and
iret
pop
mov
je
jle
lea
popf
xlat
in
push
add
roll
cld
leave
jo
pop
add
inc
fwait
cmc
pop
imul
dec
scas
int
mov
pop
icebp
mov
mov
clc
xchg
mov
insb
shlb
push
clc
push
les
xchg
ret
jp
rcr
pop
push
xor
mov
jbe
and
mov
in
jl
mov
pop
jmp
sub
mov
lcall
push
push
test
mov
addr16
adc
push
mov
xchg
insb
lret
xchg
shrb
add
sub
adc
ja
test
movsl
hlt
cmp
xchg
fnstcw
ja
push
mov
ljmp
cmc
push
add
cmp
xor
xor
ret
cmpsb
cld
call
fnsave
ret
pop
sub
mov
lods
bound
dec
xchg
xchg
pop
lock
sub
xor
dec
gs
sub
adc
loopne
pop
sbb
dec
mov
push
test
lock
push
icebp
push
cmp
addr16
jecxz
xchg
fdivrs
cs
jl
mov
mov
xor
mov
cmp
insb
xor
dec
popa
mov
cmp
push
dec
xchg
idiv
stos
add
out
and
pop
lahf
in
and
lods
adc
inc
sub
cmp
or
jno
sbb
test
dec
sbb
mov
pop
cld
push
pop
xchg
mov
daa
pop
je
push
pop
mov
xchg
dec
xor
rcrb
sbb
pop
sahf
insb
push
add
sbb
mov
adc
xlat
inc
loopne
xor
mov
sub
inc
aaa
push
fisubrs
push
lods
xchg
pop
push
jle
cs
and
inc
xchg
jnp
or
sahf
mov
repz
mov
leave
out
add
bound
addr16
dec
inc
out
xor
jne
jbe
fimuls
int3
cmp
mov
lods
ja
xchg
xorb
fadd
push
pop
aad
add
mov
lcall
lods
roll
lret
or
sbb
iret
in
xchg
shl
into
or
xor
mov
leave
scas
jnp
sub
je
lods
scas
jmp
push
imul
rcr
in
inc
stc
jb
adc
push
in
pop
add
stos
dec
mov
fldenv
mov
lret
shlb
and
or
fsubrl
adc
in
lods
dec
jecxz
or
in
or
dec
cltd
mov
mov
pop
addl
pushf
sub
mov
sbb
out
movsl
inc
add
lods
and
adc
dec
lds
inc
mov
pop
jnp
dec
pushf
push
lods
push
fsubrs
addr16
movsl
push
testb
jnp
bound
lret
jle
outsl
sub
xchg
repz
push
mov
fwait
lret
or
movsb
aaa
ret
test
push
push
pop
sbb
or
test
fmull
inc
adc
ds
inc
adc
dec
aas
cmc
pusha
aam
shlb
pop
testl
movsb
mov
sbb
in
mov
mov
enter
inc
cmp
inc
push
pop
jmp
adc
pop
or
cmp
push
add
pop
xor
xchg
lret
mov
xchg
push
dec
into
int
mov
xchg
cmp
jge
mov
sub
pop
sbb
into
mov
mov
clc
scas
es
dec
inc
jne
xor
sub
and
in
push
or
push
mov
mov
lods
ss
loopne
mov
popf
enter
jmp
push
mov
inc
mov
andl
push
leave
sbb
inc
sbb
inc
cltd
cmp
mov
test
lea
xorl
or
and
jne
xchg
dec
sbb
test
pop
pop
repz
imul
repnz
lods
dec
lahf
push
roll
fisubs
cmpsb
inc
jge
stos
bound
lds
pop
inc
js
mov
cwtl
jns
inc
lret
pop
or
in
cmp
cmp
xor
adc
iret
les
dec
and
mov
insl
adcl
fisttpl
fcoml
sti
das
test
popf
inc
inc
sbb
inc
mov
mov
lcall
sbb
cli
inc
xor
fisubrl
sbb
jno
hlt
jge
sbb
shrb
or
adc
pop
pop
xchg
cld
pusha
mov
mov
sbbl
adc
cmpsb
dec
mov
mov
jecxz
scas
inc
pop
sbb
push
cwtl
movsb
popf
mov
repz
and
loop
int
adc
jp
or
jge
xchg
aas
and
ret
repnz
mov
les
or
sbb
xor
rcr
dec
leave
xchg
adc
rolb
repz
cmp
adc
les
add
jno
xchg
pop
xchg
imul
inc
in
lods
test
std
jne
or
outsb
sub
jmp
push
pop
xchg
shl
jne
mov
push
push
repz
shl
repz
sub
mov
mov
ret
repnz
cli
cltd
in
cli
stc
cmpsl
pop
sarl
std
ret
xchg
outsl
testb
push
pop
pusha
inc
push
pop
xchg
jmp
rorb
jmp
int
xchg
sarb
stos
push
cld
sub
xorb
jmp
push
pop
sub
or
sbb
mov
xor
sub
ds
xor
adc
push
inc
fadds
jbe
pop
faddp
sbb
sbb
lds
mov
jbe
ds
movb
outsl
xor
lds
dec
enter
lock
pusha
mov
jle
test
sub
repnz
dec
test
inc
pop
testl
xchg
rcr
int
enter
jge
lret
mov
xchg
add
xchg
push
add
jle
hlt
inc
cs
cmpsl
out
sub
leave
dec
xchg
mov
aad
adc
cmp
mov
movsl
scas
jmp
xchg
sbb
lock
jp
xchg
es
add
clc
das
lahf
xchg
xor
imul
inc
mov
enter
push
or
repz
shl
lods
mov
sub
mov
jne
scas
inc
cmp
lock
test
sti
or
in
mov
cli
lods
out
adc
and
inc
sub
imul
insb
push
lea
lods
cmp
pop
ja
js
les
jl
push
cmpsl
push
or
push
pop
lods
mov
mov
rorb
in
cltd
xchg
pop
adc
jl
push
jecxz
popa
adc
test
jb
clc
out
push
stc
mov
addr16
iret
mov
and
jnp
mov
dec
xor
xor
xor
jg
cmp
push
popa
jb
setl
xchg
xchg
push
or
sub
ret
popl
sub
mov
jns
int3
push
or
mov
popf
pop
xchg
sbb
inc
es
jnp
mov
xorb
addr16
xchg
and
stos
add
mov
push
mov
jle
sub
add
hlt
dec
and
pop
jbe
mov
sar
or
in
sbb
xor
lahf
cld
xchg
xchg
in
xchg
shll
lahf
fisttpl
mov
andb
inc
call
test
das
ffreep
mov
in
fdivl
push
movsb
jns
pushf
xchg
sub
mov
popf
mov
negb
jae
pop
push
push
push
in
xchg
mov
push
cmp
sbb
in
sub
adc
dec
arpl
add
bound
mov
jecxz
sbb
and
mov
imul
and
sub
adc
and
jmp
xor
pusha
sahf
call
repz
out
fcoml
pop
xchg
aaa
inc
adc
xchg
cmp
adc
pusha
mov
add
outsb
cmc
xor
push
and
cltd
mov
das
cwtl
rolb
sar
mov
jae
push
scas
jmp
xorl
push
mov
sbb
or
loope
pushf
mov
adc
adc
xor
int
adc
cmp
lock
outsl
gs
notl
ficoml
xlat
leave
bound
adcb
jge
leave
jl
fcmovne
push
sub
mov
xor
pop
stos
adc
jb
xchg
pop
leave
sbb
push
xchg
add
or
test
sbb
es
aam
xor
cmp
xchg
sti
in
testb
je
leave
cmc
cmp
mov
cmc
mov
call
xor
roll
xor
outsb
or
repz
iret
aam
scas
nop
sbb
loopne
jmp
mov
sub
sub
mov
in
mov
mov
das
jno
jecxz
aad
cmpsl
mov
jo
inc
fcmovnbe
or
jg
repz
push
mov
inc
std
jge
mov
add
mov
mov
mov
mov
or
jne
jo
roll
add
insl
mov
jle
cvtps2pd
cwtl
cwtl
nop
cs
mov
and
xchg
mov
push
arpl
jl
lret
and
mov
cmc
cmpsb
add
movsb
xchg
shl
pop
negl
lea
push
gs
mov
les
out
std
enter
jnp
adc
dec
les
movsb
fneni(8087
adc
mov
and
and
or
dec
rolb
mov
fsts
jae
stc
rorb
stos
aam
xchg
pop
lret
lret
cltd
pop
sub
jl
mov
aad
xchg
xor
int3
orb
and
loopne
hlt
push
mov
std
or
imul
jns
xor
sahf
cmp
jge
cltd
lock
push
stos
stc
fisubl
push
push
dec
je
dec
lahf
test
jg
in
out
out
jo
and
or
jno
cli
hlt
fldcw
cmc
popf
repnz
pop
nop
lea
fcompl
push
aam
xchg
sti
rcrb
or
aas
xchg
cltd
aas
into
psrld
jl
arpl
addr16
mov
xchg
xor
icebp
cmc
into
sahf
dec
and
push
enter
jle
add
mov
pop
and
pop
sub
adc
jecxz
and
sub
sub
xor
aas
ds
decl
mov
or
jg
mov
jge
cmp
ds
out
xor
cmp
jg
mov
fisttpll
mov
cltd
xchg
add
into
push
and
dec
fld
addr16
into
lock
insl
leave
sbb
dec
std
push
outsl
and
or
js
push
pop
sti
mov
scas
xchg
or
mov
adc
pop
loop
sub
dec
popf
pop
cltd
inc
popa
push
outsb
loopne
aaa
mov
insb
mov
into
fidivs
or
cltd
ja
daa
fldl2t
lods
mov
loop
sub
dec
popf
xchg
frstor
xor
std
enter
jbe
mov
mov
leave
pop
xor
cmpsl
xlat
push
mov
xchg
and
loopne
sub
xchg
or
jb
test
pushw
rol
lret
jg
cmp
bndldx
add
add
movsl
or
ss
pop
inc
inc
fstps
and
cld
add
movsl
jg
mov
insl
cmp
push
stos
stos
mov
dec
jae
aam
jns
sub
xchg
inc
pop
jge
jb
mov
out
push
push
cmp
les
inc
fists
imul
stos
bswap
loop
add
pop
out
out
lods
andb
subb
add
push
hlt
shrl
fsubrl
xor
jo
call
je
mov
mov
jecxz
add
rcll
nop
pop
ljmp
mov
jmp
inc
jecxz
fstpl
mov
loope
cmp
pop
inc
jne
in
sub
mov
jle
xor
push
enter
fs
arpl
pushf
lods
xchg
mov
inc
xchg
jns
jne
mov
sub
mov
sub
leave
idivl
xor
notl
in
icebp
lcall
inc
loope
addl
out
cmpsl
push
push
jge
add
jns
pop
adc
jb
sbb
sbb
fldt
andb
rorb
notb
sahf
push
inc
rcl
push
es
in
imul
icebp
pushf
xchg
fs
sub
int
ffree
cmp
fcoms
lret
jne
sbbl
jb
mov
lret
cmpsb
push
pushf
into
adc
cmp
and
jmp
aaa
xchg
xchg
lea
jnp
fdivrp
sub
cli
inc
mov
xchg
push
inc
sub
dec
mov
xor
scas
mov
mov
fisttps
iret
pusha
int3
mov
imul
jne
jb
mov
dec
sbb
lret
subl
push
xchg
test
sub
sbb
or
fcmovbe
cmp
sub
mov
inc
mov
rclb
fsqrt
movhps
sub
fisttps
jo
or
inc
into
int
mov
test
inc
jae
pop
adc
pop
adc
xchg
ficoms
dec
dec
addr16
and
cmp
cmp
or
inc
adc
ffree
mov
stos
cmpsl
xchg
add
lock
jg
icebp
mov
in
mov
in
ret
push
and
lret
neg
sub
scas
push
test
aaa
and
in
xor
mov
testl
ds
cmp
cltd
add
fidivrl
popa
dec
mov
jo
xchg
sub
out
dec
stos
pop
mov
fisubrs
gs
scas
xchg
inc
out
sub
cmpsl
cmp
or
xchg
xchg
data16
or
or
mov
stos
or
lcall
xor
cmp
fnstenv
jg
mov
xor
subb
xor
fld
mov
cmp
in
cmp
xor
fstl
rol
dec
loopne
inc
iret
mov
jecxz
push
pop
pop
in
sbb
inc
scas
nop
shrb
sar
pop
jae
xchg
xchg
xlat
cmp
pop
cmpsl
insl
call
outsb
push
out
out
ljmp
cli
dec
xor
test
dec
cld
clc
aad
test
cmp
xlat
fs
ljmp
xor
aas
and
mov
and
pop
mov
cli
sti
push
cmpsb
add
or
cli
dec
mov
insl
mov
aas
fwait
adc
mov
pop
pop
jae
aam
popf
cmpsl
dec
sub
or
adc
cmc
xchg
dec
leave
in
ja
xor
mov
ds
sbb
mov
fidivrs
out
out
sub
cmp
push
mov
sub
fildll
pop
fwait
dec
pusha
std
mov
cmpsb
xchg
inc
pop
mov
mov
jl
push
fcomip
sahf
dec
je
fdivrl
cmp
dec
mov
call
jge
insl
out
mov
xor
mov
sub
aas
or
stos
pop
popa
jo
sbb
xchg
ret
jns
sbbb
lret
cmc
shll
test
add
dec
data16
push
test
push
push
nop
test
and
jle
les
sub
xchg
push
mov
outsl
inc
pushl
inc
mov
mov
pop
divb
push
outsl
mov
test
arpl
loope
pop
adc
xchg
andl
lods
cmp
mov
test
xlat
mov
scas
lret
jmp
outsl
push
sbb
adc
flds
xchg
push
pop
push
lds
out
push
leave
xchg
jae
aas
lret
dec
pop
icebp
getsec
push
insb
inc
cmp
jne
lds
notb
rolb
outsl
fst
stc
fidivl
shl
nop
test
ret
insl
push
test
pusha
stos
cwtl
in
adc
pop
mov
jbe
xor
clc
notl
jp
mov
or
out
mov
je
test
push
sbb
mov
jae
add
mov
frstor
and
cmp
pop
loope
mov
int3
ss
imul
mov
mov
int3
mov
mov
adc
pushf
outsb
into
add
int3
sbb
repz
jno
xor
push
rcll
push
fisubrl
jae
add
add
loope
mov
das
repz
lds
adc
je
lret
std
dec
aam
add
test
pop
sbb
xchg
jb
inc
mov
push
add
sub
cmpsb
cli
insb
movsl
xchg
pop
sti
fcompp
je
cmp
int
mov
push
sbb
push
in
out
push
jle
inc
sbb
jle
das
fidivrs
lock
scas
imul
je
cmpsb
dec
add
mov
mov
dec
mov
adc
rolb
imul
mov
or
or
sbb
push
xor
in
adc
out
repz
nop
sti
dec
pop
orl
xchg
jmp
push
fnstcw
sbb
cld
std
or
icebp
mov
cmc
sti
test
xchg
jg
popf
test
insl
stos
push
adc
sbb
mov
pop
std
bnd
stos
sbbb
cmpsb
incl
jne
mov
fildl
loop
mov
mov
dec
or
xor
jne
cwtl
cmpb
ss
sbb
adc
outsb
xchg
mov
mov
loopne
int
cs
adcb
call
rolb
lods
aad
cwtl
jp
mov
cmp
mov
test
cmp
push
cs
xchg
and
add
popl
mov
cmp
add
popa
rcrb
or
repnz
imul
movb
pop
rcl
inc
sbb
fwait
pop
push
dec
inc
das
push
fcomps
push
jae
call
imul
loope
lret
dec
aas
dec
in
testl
lock
push
ljmp
mov
repnz
and
and
cmp
push
lock
cwtl
gs
xlat
mov
mov
mov
dec
lods
cmp
imul
sti
sub
dec
push
addr16
jbe
lret
and
sub
and
xchg
mov
fildl
jmp
xlat
mov
je
add
idivl
lods
sbbb
sbb
stos
cmp
jo
dec
push
jecxz
adc
lret
mov
cld
and
shrl
lds
mov
sbb
inc
cmp
sub
cmpsl
scas
into
inc
inc
imul
out
popf
adcb
mov
cmp
out
out
ret
or
out
pop
ds
push
nopl
lea
jl
insb
xchg
jmp
sti
andb
cwtl
mov
xor
mov
int3
push
pop
clc
inc
adc
dec
xchg
jmp
dec
push
mov
sahf
jl
scas
pushf
cmp
lret
adc
inc
idiv
movsl
pop
hlt
xchg
ljmp
add
subb
int3
sub
jle
stos
pop
pop
ljmp
jns
push
lret
ret
lahf
subl
sub
cmc
mov
xor
out
adc
adc
or
fcomp
push
adc
outsb
mov
mov
xchg
jg
jo
std
movsl
cmp
push
add
sub
out
push
out
push
lods
inc
testb
adc
push
lret
mov
mov
jbe
aas
cmp
in
or
jne
enter
xlat
sub
aaa
jecxz
pop
shl
rclb
pop
fstps
add
outsb
adc
outsl
clc
rdtsc
rorl
push
lods
jp
adc
decl
mov
xor
das
ret
push
bound
cmp
xor
insl
mov
jno
push
mov
inc
nop
popf
shl
push
pop
rcrl
test
lods
cmp
mov
sub
int
inc
in
addr16
lea
adc
sub
int
int3
jno
sarb
icebp
xchg
iret
pushf
xchg
push
rcrl
bound
pop
icebp
lahf
dec
or
mov
or
cmpsl
xor
ret
jmp
scas
xor
pcmpeqw
cmp
addr16
fistl
ljmp
xor
fistps
jns
dec
xchg
lock
and
ficomps
movl
cld
mov
jnp
mov
in
push
lea
in
xlat
mov
addr16
adc
or
inc
pop
scas
xchg
adc
fs
aas
xor
push
fisubrl
movsl
in
jns
lahf
lods
xorl
xchg
call
and
fs
outsb
ss
lcall
xor
repz
lahf
pop
cmp
jp
hlt
je
sbb
or
cwtl
sbb
stos
inc
shrb
adc
push
stos
mov
add
mov
into
jmp
pop
jb
xchg
xchg
dec
jae
mov
fistpl
or
push
fisttpll
sub
das
dec
ret
jle
mov
rcll
aaa
out
push
outsl
mov
dec
outsb
mov
ret
loope
out
mov
es
inc
out
add
fsqrt
jge,pt
stos
pop
ret
sbbb
push
mov
pop
and
test
call
rorl
add
jae
inc
cmp
lahf
jmp
and
adc
fstl
dec
inc
jge
and
loopne
stos
das
addr16
inc
sub
insl
cmpsl
dec
lret
inc
add
cmp
notb
push
fisubrs
adc
mov
mov
cmp
mov
mov
nop
add
ret
mov
pushf
pop
adcb
lea
jl
dec
out
add
cmp
xor
xchg
inc
mov
xchg
popa
inc
sbb
ret
pop
mov
jo
rcll
cmpsb
add
push
and
fidivs
lods
por
inc
adc
push
fnstcw
mov
fnstenv
stc
shr
outsb
push
inc
sbb
jb
insl
push
xorl
dec
push
inc
ss
push
mov
imul
lahf
into
in
xlat
mov
add
xchg
mov
mov
ret
push
outsb
sub
inc
pushf
xchg
jge
mov
pop
imull
mov
xchg
xchg
mov
lahf
shr
jl
popa
pop
cltd
mov
cld
mov
xlat
jp
fstl
dec
aam
int
add
ret
out
inc
hlt
xchg
jmp
stos
adc
jbe
mov
rorl
aaa
mov
mov
jne
fmul
pop
xchg
xchg
insb
fldenv
pop
and
sbb
incb
inc
gs
out
dec
imul
push
xor
rcrb
fisubrl
lret
cmp
push
dec
sbb
mov
testl
xchg
aad
jg
stc
push
adc
mov
push
dec
ja
adc
lret
icebp
pushf
cmp
or
or
rcr
ljmp
mov
shlb
outsb
out
jp
sub
push
test
popa
xchg
aam
iret
sub
push
mov
stc
mov
pop
xor
jns
or
mov
jae
dec
cltd
rorl
movsb
sbbl
enter
adc
add
push
outsb
sub
stos
pop
loop
and
jns
sbb
inc
sar
push
adc
ret
sbb
cmpsl
leave
rcl
shrb
inc
xchg
out
clc
push
pop
push
mov
pop
xchg
mov
call
push
jo
jb
stos
xor
mov
fcmovne
xchg
adc
ss
and
inc
xchg
ds
push
xchg
xor
es
ljmp
jg
aam
mov
jo
in
rcrb
xchg
jge
push
fsubl
repz
and
pop
mov
js
xlat
and
and
fiadds
xlat
mov
int
pop
mov
movsl
loop
jecxz
pop
add
and
mov
ja
push
xor
stos
dec
inc
pushf
pop
mov
lods
les
scas
dec
hlt
mov
out
add
pop
jb
xchg
loop
inc
pop
sbb
and
inc
xchg
and
jle
add
fs
add
iret
les
stos
or
cmp
inc
ficompl
jl
mov
cmp
fnstenv
and
es
jmp
adc
mov
sbb
xor
cs
cld
jge
mov
ror
push
addr16
mov
popa
lods
insl
or
mov
inc
mov
xlat
xchg
jle
into
mov
repz
into
dec
mov
cmp
lea
mov
rcrb
push
mov
cmpsl
pop
cmpsb
pop
in
mov
adc
repz
cmp
jns
stos
incl
fwait
jo
mov
fadds
add
cmc
aas
mov
xor
xor
int
mov
shrl
dec
mov
adcb
lea
dec
aad
mov
js
ret
fists
or
jb
and
mov
sbb
scas
xlat
dec
dec
inc
adc
mov
bound
lss
orl
call
gs
movsl
push
jb
imul
ret
adc
push
insl
lds
lods
or
push
or
iret
pushf
xor
xor
or
popl
in
scas
jns
jp
bound
cwtl
das
divb
aad
out
and
dec
scas
stos
sub
stc
iret
pop
pop
mov
or
iret
in
mov
orl
mov
stos
loopne
lods
mov
adc
and
mov
mov
and
xchg
lret
inc
add
dec
pop
movsl
and
imul
mov
ret
test
inc
nop
lahf
jno
or
repz
pop
or
dec
fdiv
pusha
cmpsl
mov
scas
and
movb
sbbb
pop
mov
scas
das
aaa
xchg
add
add
xchg
lcall
or
push
ds
dec
mov
mov
push
sti
test
jle
cs
sarl
xchg
or
stc
cmp
nop
ret
xor
ds
lock
xor
fcoml
jno
xchg
pop
outsb
lcall
push
mov
ficompl
dec
popa
subb
xchg
sbb
mov
push
mov
rclb
stos
clc
stos
jmp
jo
out
ret
mov
xchg
fcoml
jae
outsb
lock
or
mov
popa
scas
xchg
push
jge
mov
fsubrl
cmpsl
adc
adc
xor
mov
dec
cmp
mov
mov
mov
clc
jnp
jbe,pt
sarl
cmp
movsl
faddp
popl
test
pop
pusha
mov
pop
in
add
jne
addr16
mov
cmp
xchg
xor
repnz
ds
adc
and
or
lcall
sub
imul
mov
clc
aam
fs
fadds
insb
adc
adc
sub
push
mov
aam
mov
mov
movsb
mov
jns
in
xorb
jno
pop
jp
mov
push
fcmovu
fwait
push
sub
and
pop
mov
or
not
cwtl
cwtl
in
in
fimuls
sbb
shl
mov
push
add
xlat
loopne
sahf
cmc
xchg
repz
xchg
cmpsl
clc
add
cmp
loopne
add
out
lret
in
mov
mov
aaa
xor
ret
mov
mov
pop
xor
aad
mov
mul
jp
xor
inc
mov
or
sub
or
mov
inc
sbb
sbb
jmp
cltd
push
mov
adc
mov
pop
or
in
mov
adc
stc
cmp
add
fcoms
xlat
call
into
mov
iret
inc
dec
adc
sub
out
adc
test
mov
mov
mov
addr16
push
clc
lahf
jbe
xchg
sub
test
and
sub
dec
call
pop
sbb
pop
shlb
stc
iret
push
test
or
pop
inc
lock
push
jbe
pop
adc
jle
jg
icebp
jmp
std
js
icebp
xchg
mov
aad
movsb
mov
sub
cmpb
cmp
xor
pop
push
movsl
mov
mov
jns
in
test
push
test
mov
aam
fwait
push
push
lea
sub
int3
pusha
adc
mov
jmp
push
cld
mov
fwait
test
test
xor
or
adc
notl
push
aaa
stos
sbb
sub
push
inc
sub
ljmp
shlb
pushf
sbb
nop
aad
xchg
sti
or
out
inc
mov
popf
aam
mov
push
hlt
fists
xchg
xchg
imul
leave
or
lret
stos
jle
stos
inc
rcll
and
nop
rol
ret
mov
pop
lahf
sub
out
lds
lea
fldl2t
cwtl
bound
inc
gs
pusha
je
push
out
pop
lock
adc
dec
fsts
andb
js
mov
xor
jecxz
jp
mov
sahf
std
xchg
mov
ds
mov
pop
mov
test
ss
mov
mov
frstor
adc
adc
xchg
lret
xchg
popf
add
sbb
inc
adc
push
sbb
inc
adc
and
cmpsl
xor
mov
or
stc
lret
test
cmpsb
dec
mov
hlt
sbb
ret
les
push
mov
into
xchg
out
cmp
push
push
lods
mov
repnz
leave
fidivrs
or
leave
and
push
lahf
mov
add
ficoms
mov
outsb
mov
dec
faddp
out
iret
adc
mov
or
test
cmp
xchg
sahf
lods
cmp
xor
dec
popa
push
sbb
add
mov
mov
sub
stos
test
adc
pop
mov
sbbb
hlt
xchg
sbb
xchg
sbb
mov
je
jb
or
bound
push
jp
jnp
jnp
bound
and
out
sub
xchg
in
mov
dec
xor
mov
xchg
sub
dec
fisubl
fidivs
inc
aas
mov
jle
and
lret
hlt
ret
or
mov
and
sbb
mov
arpl
sub
mov
jg
sbb
mov
icebp
test
ja
in
mov
add
imul
push
mov
lock
mov
out
inc
sub
movsl
mov
into
and
dec
pop
fincstp
jae
out
or
lcall
das
icebp
shrb
or
jle
lods
js
addr16
mov
jmp
fdiv
xchg
ret
fcompl
jbe
jmp
fistps
sbb
out
push
xor
xchg
add
sub
xor
push
dec
pusha
stos
xchg
outsl
std
int
movb
call
cmp
rorb
mov
jno
adc
jb
dec
and
insb
mov
xchg
imul
loopne
push
les
adc
mov
add
add
jle
ret
cli
stos
pop
jg
pop
popa
jmp
mov
xlat
and
pop
push
jp
jge
and
push
sarl
cmpsb
xchg
fstpt
cld
push
jl
xchg
mov
lds
xchg
sub
in
dec
push
push
adc
cltd
enter
popf
sti
orb
mov
stc
push
xchg
nop
mov
gs
jae
pop
incl
mov
cmp
push
sbb
jne
loope
push
xor
imul
pop
xchg
cmp
das
in
stos
and
fbld
daa
inc
scas
int
push
lods
xchg
dec
addr16
mov
std
push
fisubl
push
adc
imul
rolb
loope
outsb
shll
or
mov
fwait
ja
cwtl
or
data16
movsl
jno
mov
pushf
sbb
add
rcrb
js
pop
mov
push
push
mov
out
ss
or
frstor
sbb
test
push
push
jecxz
mov
shll
cmpsl
xlat
in
mov
jp
jns
addr16
adcl
add
xlat
sub
popf
movsl
pop
nop
jmp
and
pop
inc
in
lahf
popf
mov
loopne
movsb
notl
jo
stc
arpl
dec
fsubrs
ds
sbb
aas
lcall
imul
jno
mov
add
fadd
push
mov
cwtl
fisubrs
movsb
pop
cmp
rorb
cmp
ret
xor
or
pop
xor
adc
arpl
pop
add
dec
insl
push
push
xor
pop
push
pop
xchg
xchg
js
fisubl
negb
pop
lods
push
data16
push
push
rorl
in
lcall
mov
jg
add
or
sbbb
mov
or
movsb
mov
jle
and
scas
cmpsl
lods
stos
sbb
out
ss
inc
add
fidivrs
das
daa
ljmp
fisubrl
cmp
pushf
jp
repnz
adc
or
faddl
mov
cld
orb
adc
rclb
out
add
rorl
adcl
ljmp
insb
test
ficoms
pushf
imul
scas
aam
aam
popf
outsl
mov
mul
dec
insb
push
enter
orb
ja
adc
data16
sbb
sub
sbb
pop
fwait
pshufw
imul
add
jmp
daa
mov
sbb
es
add
jl
insb
jbe
popa
xchg
aas
bound
cmpsl
and
arpl
les
mov
ret
mov
add
cmp
mov
stos
dec
push
cmp
fs
push
leave
mov
sbb
adc
pushf
xor
out
imul
test
sti
addb
xchg
adc
ja
into
or
xchg
fadds
mov
fcoml
xchg
bswap
mov
push
call
mov
add
mov
scas
inc
std
sbb
push
jne
jmp
xchg
cli
imul
lods
loopne
or
call
rclb
or
xchg
jl
mov
ljmp
fwait
scas
push
mov
pusha
xchg
jl
cli
inc
dec
lea
add
push
cmp
cmc
ja
iret
add
pop
push
push
sbb
inc
sub
cmpl
xor
lods
pop
std
ja
inc
stos
incb
das
dec
loop
gs
sub
stc
test
fistl
repz
inc
outsl
dec
cs
testb
clc
mov
clc
stos
push
sbb
jmp
hlt
mov
fwait
cmpl
nop
mov
ja
adc
adc
push
andb
in
es
jns
lret
cmp
shr
mov
movsl
lods
rolb
sbb
data16
je
pop
cmpsb
pop
xor
mov
cmc
int
outsl
popf
cmp
or
pop
inc
push
rcrl
xchg
stos
repz
adc
xor
mov
cmpsb
movb
inc
es
jns
xor
adc
pusha
es
push
loop
jle
mov
aas
add
or
push
lcall
hlt
xlat
aam
xchg
lea
mov
gs
xlat
shlb
sub
popa
data16
or
pop
xor
jmp
xchg
mov
stos
adc
or
inc
sbb
fcomps
mov
rep
lret
jb
mov
pop
mov
mov
test
xor
push
test
lcall
mov
repnz
mov
enter
xor
mov
pop
mov
sbb
imull
sarb
mov
in
dec
dec
sbb
ror
scas
pop
mov
adc
enter
out
pop
cmp
sti
lods
sbb
lret
xchg
xchg
inc
mov
push
in
xor
popf
movsb
std
stos
xorb
mov
movsb
cmp
mov
inc
add
xchg
shr
hlt
sub
ljmp
push
fmull
pop
fisubs
les
push
cmp
jo
mov
sub
daa
mov
arpl
or
cmpsb
pop
xor
cmp
test
inc
jecxz
loope
fldcw
aam
inc
mov
imul
sete
cmp
cld
sub
xor
shl
andb
je
mov
scas
mov
test
sub
out
aam
lea
sbb
sbb
xor
dec
data16
push
ds
jns
in
movsl
xor
pop
push
sbb
sar
xchg
cmp
icebp
cmp
mov
pop
js
bound
leave
jl
scas
ret
adc
popa
mov
cld
mov
cltd
pop
pop
xor
xor
fwait
cwtl
dec
add
dec
add
repz
or
repz
push
inc
sub
push
xlat
or
addr16
jno
pop
lods
xor
mov
or
leave
call
xor
dec
adc
rcrb
jl
mov
mov
push
jae
push
and
insb
cmp
sbb
fildl
mov
pop
andl
jne
fs
cmpsb
out
jmp
and
push
pop
sti
pop
add
mov
enter
mov
sbb
add
push
xor
int3
mov
xor
dec
je
dec
push
push
inc
and
add
sub
mov
insl
mov
je
sub
jmp
outsb
jecxz
sbb
pushf
mov
xchg
imul
stc
in
jb
pop
mov
mov
stc
inc
xchg
stos
cmp
shll
rorl
outsl
into
pusha
sub
adc
es
je
jg
pop
in
mov
sbb
adc
rcll
loopne
iret
dec
adcb
or
lock
jmp
cwtl
mov
stos
cmp
pop
and
rcrb
cmp
mov
and
push
mov
iret
xor
adc
fisttps
inc
lods
or
mov
aaa
mov
lahf
ret
jnp
sbb
lahf
cmp
sub
push
nop
mov
into
movsb
mov
repz
or
ret
or
and
out
rcl
mov
xsaves
aaa
into
mov
les
sahf
fisubs
dec
clc
push
jl
sub
in
loope
bound
stos
lods
aad
arpl
sti
fiaddl
stos
lcall
xchg
inc
rcrl
xorl
out
sub
hlt
shll
mov
fnstsw
jb
sbb
adc
add
or
mov
mov
inc
jp
enter
out
jns
test
dec
and
pop
push
out
clc
out
test
pop
fldt
fcompl
sub
adc
or
test
push
loop
clc
outsl
pusha
or
mov
xlat
test
sub
ljmp
mov
xchg
inc
push
jb
sub
sub
jecxz
pop
loop
cwtl
divb
push
lea
icebp
mov
xchg
fucomi
push
nopl
mov
lods
jmp
adc
sub
push
jmp
rclb
shll
shlb
test
movsb
pop
cmpsb
cs
and
mov
pushf
inc
into
sub
mov
add
adc
mov
mov
ss
pop
jg
fwait
push
push
or
jb
mov
dec
push
stos
cmp
jo
imul
xor
in
jmp
aaa
sub
mov
and
test
fistl
mov
or
or
test
xchg
mov
adc
jne
loope
imul
stc
lds
ret
lahf
mov
push
cmp
sbb
pushf
sbb
jae
pusha
stc
sub
out
cmc
repnz
test
bnd
sti
lahf
arpl
mov
jns
iret
push
fstpt
aaa
inc
mulb
sub
lods
shr
dec
movsl
xor
rcrl
int
mov
dec
sarl
aas
sbb
insl
insb
nop
insl
jnp
adc
xor
sbb
cli
mov
les
mov
hlt
out
insl
clc
xchg
cld
cld
aas
test
cli
aad
mov
sub
mov
jg
jecxz
ja
adc
mov
cmp
dec
mov
daa
adc
sti
or
push
xor
ret
sahf
leave
pop
push
push
jecxz
mov
cwtl
xchg
xchg
out
sbb
xchg
cmp
std
xchg
inc
add
mov
out
fldl
jg
inc
or
dec
test
or
clc
rorl
sub
ret
or
and
into
jb
ret
sbb
es
sub
ret
cmc
cwtl
clts
push
popf
insb
adc
adc
push
insb
scas
jl
xlat
dec
hlt
sub
cmpsb
bound
aam
push
test
push
fiaddl
rclb
pop
cmp
dec
sub
adc
ljmp
jl
sbb
cmp
mov
stos
inc
dec
dec
sub
mov
pop
mov
bound
rcrl
faddl
into
cmpsb
icebp
jbe
aam
fsubrp
test
add
int3
sbb
jecxz
pop
cmp
cli
lds
clc
dec
xor
push
cmpsb
pop
adc
push
es
std
push
rorb
mov
jp
stos
push
pusha
repnz
adc
fcmovnu
cwtl
lret
mov
jp
test
jp
icebp
cmp
xor
mov
cltd
loopne
and
pop
cmpl
pop
adc
mov
cmpsb
sub
sbb
or
fdivl
in
xor
cmpsb
mov
outsb
and
sub
pop
pusha
cmp
mov
cmp
push
or
lods
shl
cmp
jg
stos
testb
cmc
dec
out
enter
inc
es
stos
and
or
cmpsb
add
cmpsl
jns
pop
outsl
xor
and
jno
jnp
aam
fdivrl
test
ds
sbb
mov
adc
in
jge
push
add
cmp
mov
pop
loope
cs
dec
inc
ljmp
push
dec
fisttpll
ret
mov
popa
cli
and
sbb
cmp
outsb
in
dec
jne
fwait
insl
arpl
jb
add
and
and
mov
arpl
xlat
insl
add
in
xchg
imul
outsl
push
cltd
xchg
sbb
xor
lcall
lahf
fldcw
push
cli
inc
into
mov
mov
push
mov
pop
sbb
mov
mov
mov
or
jle
lea
ficompl
mov
or
mov
pushf
fisubrs
push
in
and
inc
aam
sbb
jne
shl
pop
aas
in
testl
sub
dec
xchg
and
dec
int3
insb
bound
roll
or
es
adc
xor
inc
dec
pop
xor
fcomi
stos
clc
vmovq
jmp
out
sub
lods
or
jnp
and
cwtl
je
fldcw
pop
sub
xor
mov
push
inc
sub
push
sub
and
cmp
xor
lahf
and
add
mov
negb
clc
cmp
mov
cmpsb
lods
scas
push
xchg
cmpsl
pop
sti
loope
push
into
into
pop
push
popl
jmp
les
adc
pop
mov
pop
push
push
jns
sub
cltd
pop
cmp
loope
sub
jmp
gs
adc
xor
js
fisubl
push
stos
faddl
movsb
mov
dec
inc
movsb
addr16
aam
repz
popa
inc
jnp
jmp
pop
stc
xchg
cwtl
aaa
fisubrl
mov
cmpsb
lahf
test
jae
rcl
push
adc
adc
sarl
mov
repnz
jmp
push
in
mov
adcl
movsb
cmpb
je
mull
cmc
mov
pop
insb
std
add
and
pushf
xor
sub
add
hlt
cmpsl
or
pop
ja
jnp
fildl
subl
xchg
or
cmpb
inc
mov
jbe
aaa
push
jae
sarb
or
mov
in
push
adc
inc
fiadds
inc
push
jecxz
cmpl
test
aam
aad
je
mov
add
daa
or
and
mov
mov
loop
lock
cmc
mov
cltd
cmc
icebp
mov
jecxz
push
adc
push
inc
push
sbbb
and
sbb
into
or
bound
testb
pop
push
imul
jne
lds
out
repnz
pop
iret
addl
gs
jns
aaa
add
orl
pusha
cltd
outsb
into
sub
jnp
cltd
xchg
ja
sar
adc
sbb
lods
outsb
and
stos
mov
push
or
andl
mov
fwait
cmpsb
enter
popa
inc
cmpsb
pop
push
xchg
ja
xchg
dec
in
cmpb
cmp
inc
loop
fildll
push
xchg
dec
inc
pop
sub
call
rcr
cmp
jle
cmp
stos
imul
mov
cmp
sub
jnp
push
pop
add
addr16
fidivs
jb
xorb
or
push
int3
cmp
cs
enter
imul
xlat
pushf
mov
jmp
adc
xlat
imul
shll
lea
sahf
xchg
xor
outsb
out
adc
add
insb
jae
loopne
add
orl
cld
pop
in
jl
out
push
jmp
sbb
mov
cs
adc
dec
push
inc
xor
dec
aad
mov
or
dec
inc
pop
not
or
jecxz
or
in
push
cmpsl
movhps
divl
pop
dec
mov
sbb
mov
xor
mov
add
pusha
jns
jge
xor
aaa
test
nop
jb
cmp
mov
out
mov
das
aaa
adc
rclb
movsb
mov
pushf
jnp
stc
movsb
lods
imul
and
les
inc
in
jnp
js
and
imul
push
dec
enter
testl
movsl
or
std
aad
cmp
jno
repnz
mov
mov
mov
and
testb
jp
xchg
mov
fmull
movb
shlb
sti
push
cmp
mov
stc
xor
or
fildll
xchg
ss
xchg
aam
sbb
inc
sbbl
aas
cmp
movsb
xor
or
and
loopne
dec
imul
xor
ds
mov
out
sahf
push
cmp
jmp
repnz
cmp
dec
cmp
sbb
int3
mov
repnz
mov
stos
and
test
addr16
movsb
nop
fidivrs
jb
adc
pop
imul
test
stos
xor
add
popf
push
xor
int
outsl
inc
incl
add
test
lock
xor
das
mov
pushl
mov
lods
out
js
dec
movq
adc
mov
mov
xchg
mov
es
test
push
arpl
outsl
sbb
dec
cmp
arpl
and
push
int
mov
insl
gs
jge
inc
mov
int3
pop
dec
fisttps
pop
or
jmp
push
push
lret
pop
and
cli
lds
push
loope
ljmp
inc
rcll
imul
jecxz
xchg
sbb
mov
push
mov
jne
das
push
subl
gs
scas
push
iret
xchg
outsl
gs
lods
mov
pusha
test
push
sbb
pop
jo
nop
xor
mov
pop
loope
or
cltd
inc
mov
fcomi
dec
add
inc
mov
in
push
or
sub
lods
pop
shrb
add
ss
mov
jp
mov
jg
mov
int
cmpsb
cmc
mov
ret
pop
cs
cltd
push
or
dec
pop
sbb
dec
imul
add
xchg
out
mov
sbb
mov
push
scas
push
add
imul
lods
into
shrl
or
aas
mov
int
sub
cmp
mov
pop
scas
mov
push
cmp
mov
jno
adc
shrl
sbb
mov
lahf
inc
rcrw
mov
inc
cs
inc
cltd
addr16
adc
test
push
sub
faddl
mov
xor
sub
in
imul
lock
ds
jo
adc
int3
push
xchg
xor
lea
shll
fxch
addr16
push
sub
loop
movsl
add
ret
xor
mov
mov
mov
xchg
adc
dec
sub
movsb
push
mov
rorl
push
ljmp
pusha
popf
jmp
xchg
xor
ret
call
daa
inc
pop
pop
cmp
data16
pushf
sbb
cmp
mov
or
or
sub
int3
sub
aam
hlt
adcb
int3
mov
adc
xchg
testl
stos
decb
stc
mov
mov
jl
shr
dec
xchg
sbb
fcmovb
inc
test
xchg
movsb
loop
loopne
loope
notb
dec
inc
lahf
fldenv
inc
mov
mov
mov
mov
lret
addr16
xor
imul
mov
hlt
je
lock
out
loop
lds
jl
mov
pop
mov
cld
lea
add
pusha
inc
xchg
fwait
mov
icebp
add
std
dec
aam
jp
jmp
hlt
dec
push
add
pop
cmp
cmpsl
in
test
aad
xchg
mov
lret
shl
push
mov
sbb
shrl
icebp
and
hlt
and
mov
in
out
popa
mov
mov
in
insb
inc
inc
pusha
xchg
and
pop
adc
dec
aas
mulb
xor
cmpb
push
jb
mov
and
roll
inc
xlat
ja
add
xor
xchg
jne
dec
cwtl
push
sbb
insb
push
inc
sbb
repz
iret
ljmp
or
outsl
jecxz
test
ror
add
adc
in
and
mov
push
sahf
and
cltd
pop
ja
lods
sbb
out
mov
xchg
pop
sbb
fsubl
or
jno
or
push
pop
mov
out
cmp
outsl
jecxz
fdivrl
add
in
ret
and
inc
insl
sub
addb
pusha
mov
repz
and
xchg
call
enter
dec
mov
loopne
rcl
lret
mov
push
jp
ja
jb
repnz
xchg
fs
out
popf
ret
ljmp
inc
adc
clc
aaa
push
jns
repnz
test
jmp
xchg
jmp
sbb
aas
xchg
jecxz
jno
jae
mov
clc
sbbb
xchg
popf
push
adc
pushf
xor
mov
inc
inc
xchg
popf
in
in
in
and
push
in
call
pop
pusha
fistps
sahf
sub
aas
sbb
aad
ret
cmp
push
sub
pop
xchg
lock
sub
and
and
cmp
mov
outsb
sahf
sbb
cmp
jg
lock
fisubl
ja
jg
mov
repnz
sbb
outsb
hlt
enter
pop
mov
lret
push
lock
mov
setne
sbb
dec
pop
pop
aad
or
out
fsubrs
cwtl
lahf
fldl
cmp
lret
push
pop
mov
cwtl
pop
mov
movsb
and
enter
imul
dec
push
mov
sbb
rolb
jb
sahf
std
andl
aad
pop
pop
xchg
jg
mov
xchg
movsl
xorb
pop
jno
push
call
in
cmp
inc
imull
cmp
stos
sbb
fiadds
stc
icebp
jb
pop
mov
cli
mov
in
stos
inc
loop
jo
jo
and
ds
dec
sub
push
aam
pusha
mov
or
lods
gs
fwait
mov
loopne
or
daa
sbb
fldcw
adc
mov
in
xor
inc
pusha
xlat
sub
adc
out
jo
test
mov
mov
test
xchg
test
cwtl
popa
or
enter
adc
test
jl
mov
or
inc
outsl
clc
jne
popa
jo
or
insl
fnstcw
das
sarl
insb
lock
shrb
push
sub
push
inc
fcmovnu
add
aaa
xchg
aaa
dec
push
cmp
cmp
mov
xchg
out
adcb
les
icebp
xchg
enter
hlt
shll
xor
das
push
cmpsb
sbbl
fst
repz
pop
mov
js
fwait
das
dec
sub
cltd
cmp
lcall
ja
cli
mov
ficoml
addr16
dec
int
cmp
push
adc
or
and
pop
push
push
xor
xchg
and
xchg
ss
lods
les
push
hlt
insb
cwtl
jp
sti
dec
incb
out
dec
in
push
sbb
ljmp
push
pop
add
mov
jmp
mov
mov
test
negl
cmp
repz
fldenv
in
orb
inc
aas
mov
insb
jecxz
mov
lds
in
loopne
dec
dec
and
dec
lret
sbb
dec
adc
add
popf
sbb
xor
test
in
pop
outsb
pop
mov
scas
jns
imul
test
repz
cmp
push
imul
or
mov
les
mov
mov
xor
popf
pop
inc
rolb
pushf
out
mov
popa
mov
int
or
sar
sub
add
scas
rcrl
xor
jns
xorl
adc
dec
fisubrs
fsubrs
add
lret
and
mov
sub
rcl
ret
stos
orb
lock
enter
ret
loop
mov
packsswb
xlat
jb
int
and
and
lret
lods
js
sbb
mov
xchg
fwait
mov
ljmp
pop
dec
lret
add
mov
test
test
les
lcall
into
xor
sub
sbb
push
shrb
stos
xchg
inc
cmp
or
outsl
cmc
add
repz
dec
dec
or
sbb
loope
cmp
cmpsl
adc
pop
jl
subb
cwtl
jl
movsl
mov
data16
mov
add
dec
sti
mov
add
aaa
enter
pushf
test
adc
xor
inc
push
sub
or
cmp
pop
or
cli
push
loop
push
pop
shrd
scas
fadd
add
aam
sub
push
adc
leave
mov
cltd
inc
out
mov
jmp
jae
sahf
lcall
pop
adc
sub
adc
inc
repz
lahf
bound
dec
dec
mov
add
sub
stos
std
in
mov
aaa
inc
mov
sub
popf
dec
ret
jl
pop
shrb
lock
cmp
jl
pop
pop
lock
test
loop
push
ja
xchg
scas
sub
cli
dec
sbb
cmp
adc
mov
mov
test
mov
iret
jl
out
subb
int3
mov
push
pop
in
push
or
aad
js
add
and
xor
call
mov
mov
push
pop
arpl
pop
fsubrs
sub
popa
loope
mov
pushf
xor
scas
leave
sbb
or
stc
ljmp
in
sub
inc
fistpl
mov
mull
xchg
mov
sub
dec
mov
repz
pop
and
mov
inc
mov
xchg
mov
movsl
xor
add
popf
inc
in
rcr
add
mov
sbb
popa
inc
sub
inc
aam
shl
dec
push
test
fldl
cwtl
fidivl
xlat
mov
mov
mov
push
aam
outsb
inc
mov
bswap
movsb
inc
jae
mov
sub
push
and
jmp
sbb
or
lret
dec
adc
fsts
or
cs
add
mov
out
jo
jnp
mov
dec
insb
js
sub
push
add
add
adc
mov
adc
xor
inc
add
lahf
icebp
testb
lds
outsb
or
pusha
jle
cmc
in
int
test
lret
sub
lds
xchg
inc
addr16
mov
stos
mov
aad
xor
jmp
xlat
clc
xor
ljmp
or
int3
dec
std
mulb
icebp
xor
push
add
cli
or
sub
sub
and
hlt
stos
xchg
sti
pop
out
inc
fwait
shrl
xchg
push
sbb
push
inc
aaa
jbe
inc
mov
imul
cwtl
xor
sbb
mov
fcmovbe
add
mov
cmpb
call
xchg
jb
insl
jns
push
push
pop
mov
xor
lods
jge
and
loope
jae
mov
movsl
cmp
lret
pop
mov
mov
adc
xchg
jb
out
lds
fistl
pop
insb
dec
stc
or
loope
jmp
mov
lret
repz
mov
in
aaa
or
add
stos
and
and
cmp
mov
ror
imul
pop
lods
call
loope
pop
movsl
add
test
repz
out
mov
enter
fisttps
shll
cld
cli
repnz
stc
xor
push
addr16
push
fisubl
cmp
es
jle
dec
popf
xchg
push
jmp
sbbb
sbb
dec
popa
ret
fucomp
mov
repz
dec
add
loopne
into
and
cs
cmp
leave
inc
ja
push
mov
sbb
je
jp
pop
pop
pushw
adc
imul
popa
rcrl
pop
dec
pop
movsb
push
mov
sbbl
add
cmpsl
and
data16
call
scas
dec
pop
stc
adc
cltd
dec
ljmp
movsb
pushf
inc
js
mov
pop
outsb
imul
stc
xor
fmull
cmp
int3
orb
pop
inc
and
adc
push
push
adc
sahf
test
testb
fdivl
mov
rcrb
lods
vpaddw
lret
cmp
pop
das
mov
cmp
and
adc
inc
clc
loop
jp
rcl
rcr
jp
mov
ljmp
in
or
or
and
rcrl
mov
pop
mov
adc
movb
push
jle
push
push
inc
mov
sub
push
cltd
lret
incb
jnp
or
mov
sbb
ret
insl
call
push
xchg
or
orl
aas
pop
fnstcw
mov
rorb
mov
pop
push
pop
pop
ret
fwait
mov
fbstp
sbb
in
mov
into
lcall
cmp
sbb
bound
es
frstor
pop
mov
add
loop
mov
sbb
add
xchg
dec
add
mov
outsl
stos
call
adc
in
mov
sub
rcl
inc
jnp
and
imul
in
inc
sahf
inc
shlb
mov
xlat
lret
scas
pop
push
nop
subb
or
out
cwtl
adc
sbb
push
mov
andb
lahf
repnz
leave
jb
shll
sbb
subb
js
push
inc
adc
scas
jbe
push
popf
add
in
xor
imul
xorb
jnp
stos
iretw
sbb
enter
mov
jo
inc
inc
and
ror
and
adc
into
adc
jns
ja
pop
cmp
cmpl
call
mov
and
mov
add
sub
sub
fnstcw
cwtl
jbe
xchg
inc
rcr
sub
mov
lret
lea
ljmp
imul
sub
and
add
pop
sbb
fldl
fistl
lock
je
sub
xchg
inc
pop
and
cmc
jg
and
dec
push
sub
mov
dec
rolb
adc
mov
int
push
push
lahf
pop
mov
xchg
push
loope
shlb
adc
pop
sbb
adc
out
adcl
pop
repz
inc
int3
mov
xor
jl
or
add
and
jae
sbb
adc
out
setbe
xchg
add
push
fwait
imul
xchg
mov
xchg
test
jnp
xchg
xor
cmp
inc
in
leave
cmc
pusha
addl
neg
jo
inc
aas
mov
cmp
jl
leave
mov
ss
xor
jae
lahf
ds
lret
aad
loopne
lods
inc
test
add
pop
adc
out
mov
lock
subl
mov
int
mov
xchg
out
ret
xor
dec
dec
xchg
sahf
pop
cmp
test
push
mov
sub
pop
les
or
and
les
jecxz
lea
mov
outsb
sar
andb
arpl
lock
xchg
clc
mov
test
pop
mov
cmpsb
clc
push
in
sbb
les
loope
ja
jno
inc
in
cltd
and
jns
or
js
bound
in
pop
outsb
sti
jl
lea
mov
adc
mov
sub
scas
ljmp
dec
sbb
xor
sub
push
mov
xchg
add
dec
inc
xorb
fcomps
pop
sub
orl
sti
inc
dec
mov
inc
jno
add
je
mov
pushf
iret
icebp
and
push
movsl
shrl
std
push
or
xchg
divl
loopnew
ret
dec
out
push
lahf
outsl
mov
mov
push
test
add
dec
es
mov
int3
push
or
jp
imul
sub
sbb
shrb
push
lods
mov
test
lea
push
movsb
ret
sarb
pop
fs
mov
inc
in
into
repnz
sub
sahf
packuswb
mov
push
and
pop
test
insb
and
lret
mov
jmp
mov
dec
jns
stc
pop
ficoml
xlat
xor
and
xchg
inc
into
inc
mov
mov
jne
mov
mov
adc
cli
mov
das
insl
or
fwait
xor
shrl
das
icebp
sbb
dec
sti
test
xchg
cs
cmp
in
mov
add
cmpsb
arpl
fs
fwait
pop
or
les
imul
loope
sub
shrb
fsubl
lahf
sar
dec
cmp
outsl
rorl
call
dec
and
mov
cmp
xor
imul
push
ret
cmpsl
inc
mov
pop
add
in
imul
cmp
movsl
xchg
jno
add
push
mov
adc
es
mov
pop
inc
adc
pop
jo
xchg
sub
scas
pop
cs
je
dec
icebp
ljmp
fs
stos
inc
roll
pop
lds
and
cmp
dec
cmpsl
ljmp
je
sub
pop
fs
pop
jbe
xor
dec
popf
leave
mov
std
add
and
lret
jb
dec
add
jle
mov
push
bound
dec
mov
rolb
jns
in
jmp
cmc
ljmp
rcrb
push
lods
adc
adc
xchg
pop
movsl
cmp
outsl
clc
inc
dec
int3
jbe
decl
ds
mov
rclb
out
shll
ds
lock
mov
arpl
pop
dec
cmc
divb
jmp
jge
jb
cltd
mov
xchg
in
test
push
flds
push
inc
jns
jbe
in
idivl
ret
std
push
inc
std
out
xchg
adc
inc
pop
mov
or
adc
cld
jl
out
mov
into
stos
xchg
orb
clc
imul
fldt
dec
std
fisubl
testl
in
clc
cmp
loopne
cs
ljmp
xor
mov
rorb
mov
outsl
xor
mov
call
push
call
cmp
pop
push
loope
or
in
adc
mov
cmp
nop
out
push
inc
pop
je
mov
cmp
or
mov
mov
and
push
xchg
xchg
xchg
pusha
push
mov
lahf
add
jo
sub
addr16
push
imul
scas
ljmp
cmpsl
inc
mov
popf
sub
loop
push
dec
and
jne
mov
pop
std
pusha
loop
jne
adc
add
mov
cwtl
jnp
pop
out
stos
jne
adc
pushf
rclb
lds
cmp
lret
or
mov
sub
dec
lahf
sbb
push
popa
add
sbb
stos
rclb
fwait
inc
test
inc
mov
aam
pushl
fnstsw
push
mov
mov
pop
scas
repnz
or
rcrb
or
das
adc
insb
dec
jnp
push
scas
or
mov
clc
xchg
jecxz
aas
mov
rcrl
sub
sbb
sahf
stos
hlt
push
and
jmp
mov
mov
or
xor
in
jns
je
rorb
sbb
bound
mov
loope
enter
cmp
pop
iret
call
mov
dec
xchg
pop
ja
fstpl
pop
xchg
xchg
roll
je
dec
mov
gs
scas
rorl
push
xchg
in
and
jbe
sbb
shl
mov
cli
mov
scas
cwtl
pusha
cmp
pop
pop
sub
push
stos
mov
mov
sahf
lcall
inc
jl
inc
imul
mov
jle
in
movsb
xchg
xor
push
sbb
or
dec
ret
mov
mov
test
mov
cmp
push
cmp
inc
ja
sahf
int
lods
rcll
into
adc
frstor
push
movsb
mov
subl
mov
mov
add
cmc
gs
je
sbb
mov
adc
fimull
mov
shrb
mov
pop
scas
mov
ljmp
loope
ds
sbb
mov
stos
sub
push
pop
scas
jo
ficoml
add
pop
sbb
jp
and
and
stc
inc
mov
cs
insb
out
mov
xchg
cmp
pop
lds
fiaddl
rolb
inc
cmpsl
fldcw
sub
push
popa
push
or
inc
sahf
push
inc
cs
into
lret
xchg
jp
cmp
bound
bound
push
test
push
xor
sbb
mov
jge
loopne
xor
jnp
pop
sarl
mov
pop
testb
fimuls
ret
test
dec
ljmp
cli
add
xor
scas
pusha
stc
nop
ret
lcall
mov
cmp
push
aas
cmp
cmp
jge
push
enter
xchg
or
push
xor
cltd
dec
and
enter
ss
dec
addl
xchg
sti
das
rorb
imul
mov
clc
add
adc
xor
xchg
shlb
jno
and
and
push
xchg
imul
scas
xchg
jno
testb
out
jbe
bound
out
test
leave
lods
sub
xor
push
mov
imul
mov
lods
fst
xor
das
jmp
mov
pop
hlt
push
add
scas
mov
mov
or
shl
leave
insb
jg
adc
mov
lock
cmp
pop
int3
jo
dec
into
aam
mov
and
and
lds
mov
sub
stos
pop
test
js
pop
rclb
mov
cmc
inc
out
stos
pop
push
xchg
js
or
adc
xchg
jg
lock
je
inc
hlt
popf
arpl
push
push
jns
cmp
std
test
mov
gs
in
inc
xchg
xchg
das
or
lock
fldcw
rorl
add
jo
cmp
and
xor
mov
ja
mov
popa
inc
sub
push
dec
test
mov
stos
lret
enter
add
jge
adc
loope
aaa
xor
sti
dec
test
fisttps
add
xchg
jge
out
push
rorl
sbb
pop
scas
xor
push
push
xor
lcall
xlat
and
int3
dec
ljmp
cwtl
nop
clc
xchg
clc
lods
xchg
and
dec
jno
add
lds
test
push
outsl
cmp
push
lods
out
int
mov
testb
jnp
jge
sbb
pop
shll
out
and
sub
insb
jecxz
cmp
mulb
in
inc
adc
shlb
mov
mov
cs
fadds
cmc
je
pushf
pop
inc
xchg
or
movl
pop
pop
or
pop
daa
fidivrl
push
xchg
or
push
mov
adc
rcll
mov
mov
push
scas
inc
in
or
cmp
jecxz
int3
jns
test
xchg
push
arpl
and
dec
mov
adc
rorl
scas
scas
sti
cwtl
xor
adc
push
xor
pop
mov
pop
inc
mov
mov
sbb
jns
jecxz
orl
sub
and
cmpb
repnz
or
adc
mov
add
cli
hlt
fst
adcl
fcmovne
add
cmpsl
clc
aam
ss
insl
ss
add
out
ret
int
jb
jno
push
pop
dec
mov
and
sub
mov
sub
sbb
adc
push
mov
movb
imul
or
sti
fdivr
in
cmp
fsubrl
lea
add
repnz
xchg
push
mov
push
cmp
mov
cmp
cmp
and
pop
add
xchg
scas
dec
inc
data16
notb
out
lcall
popf
pop
or
arpl
lea
sub
shrb
ja
mov
lods
sbb
pop
add
daa
int3
cmc
out
jmp
scas
int
sub
loop
cmp
popf
pop
bound
nop
push
sbb
xchg
mov
xchg
pusha
pop
inc
out
movsb
movl
mov
lret
pop
scas
imul
inc
mov
imul
sub
mov
jnp
add
pusha
cld
rorb
aam
fs
mov
xor
icebp
into
fisubs
out
sub
mov
push
cmpsb
enter
xchg
xchg
movsl
sub
sbb
mov
sub
mov
out
xchg
jle
fwait
cmp
jbe
jecxz
sub
dec
movsb
mov
sbb
xchg
iret
insl
push
aaa
inc
inc
jmp
lahf
rcll
lcall
pop
and
test
les
leave
ja
icebp
and
sub
mov
icebp
or
lahf
and
dec
inc
mov
add
dec
sub
and
jge
pop
pop
add
pop
outsl
fnstsw
popf
enter
call
sbb
cmpsb
xor
inc
add
push
repz
cmp
pusha
mov
pop
test
in
add
les
sub
push
shrb
xchg
mov
dec
sub
gs
into
fisubs
icebp
dec
fsubl
out
inc
inc
iret
rcrb
test
jne
sbb
inc
dec
loope
xchg
ror
jl
mov
jg
sub
push
or
gs
arpl
and
pop
imul
movntps
pop
dec
adc
adc
and
xchg
loope
mov
or
inc
cmpsw
dec
int3
in
sbb
daa
insl
mov
sarl
clc
xlat
cmp
mov
mov
lcall
sub
mov
popf
test
jle
push
test
mov
sub
scas
out
adc
sbb
aaa
lds
aaa
lock
inc
inc
cmp
push
xchg
fiaddl
xchg
testb
out
adc
fistpl
shll
ja
loope
movsb
sub
cmp
jb
dec
js
lret
mov
shrl
mov
dec
add
je
sbb
mov
ja
jg
jp
aaa
push
arpl
or
nop
scas
jl,pt
adc
xchg
cmp
out
fmulp
dec
cmp
xorl
mov
dec
cmc
aaa
jmp
sub
pop
cmp
and
xchg
sbb
lret
or
scas
cwtl
jecxz
mov
jg
xchg
adc
stos
ljmp
out
push
and
pop
sti
lret
pop
loop
aaa
sbbl
pop
and
push
fldl
xor
lds
xor
dec
jb
les
fwait
lret
mov
push
insl
cmp
and
ret
push
fisubl
sti
and
adc
iret
mov
dec
loope
mov
push
scas
arpl
and
pop
ret
les
dec
mov
pop
push
loop
movsb
ss
push
push
arpl
or
loope
inc
inc
fldenv
repz
mov
xchg
cmp
add
hlt
loop
insb
fcmovu
gs
fwait
pop
jmp
hlt
shl
and
xchg
rolb
div
inc
test
add
shlb
xchg
call
pusha
inc
pop
xlat
push
inc
push
aam
lods
icebp
sti
dec
mov
pop
xor
sub
orl
stc
fs
je
mov
mov
in
pop
ds
ret
rcr
inc
es
inc
sbb
push
outsl
ljmp
xchg
adc
fstpl
stos
cmp
push
sub
jno
ret
sbb
cmc
outsl
add
xlat
stos
mov
adc
mov
adc
sbb
sbb
repz
hlt
rolb
lock
lret
in
imul
push
adc
jmp
loopne
dec
cltd
cmp
movsb
mov
loopne
xor
sub
push
xor
rcrb
ret
push
hlt
mov
mov
test
lds
ds
jecxz
jg
addr16
mov
adcb
cld
push
pop
push
stos
popf
cmc
loopne
loope
les
and
movsl
push
xchg
enter
lret
cmp
lret
aam
xchg
jmp
push
adc
mov
mov
std
jle
xchg
pop
sub
andl
mov
idiv
pop
inc
push
mov
xor
out
mov
push
lea
or
pusha
test
jge
movsb
loopne
movsb
loope
pop
nop
jl
das
stc
xor
mov
xor
sbb
divl
jge
sbb
xchg
adcl
pushf
ficompl
or
and
fsubs
sbb
or
adc
sub
mov
fisubrs
repz
cld
and
stos
push
into
out
push
lahf
ss
or
or
orb
int
pusha
scas
lahf
sub
push
js
inc
inc
in
xor
mov
cmc
inc
loope
cmp
pusha
xchg
daa
sar
inc
push
popa
sub
out
push
sub
pop
push
movsl
inc
dec
iret
lcall
and
cld
or
sbbb
fstps
aaa
fcompl
rcll
and
mov
scas
rorl
popf
outsb
call
mov
or
adc
xchg
fwait
sahf
cmp
data16
dec
pop
scas
cmp
xchg
popa
arpl
ffreep
xacquire
iret
les
shlb
add
mov
push
leave
push
popa
daa
mov
cld
ret
adc
push
sub
sub
cmp
or
cmp
and
addr16
icebp
pop
call
add
pop
out
sbb
sub
stos
push
push
lahf
movntps
outsl
mov
sub
loopne
cmp
insb
hlt
subl
add
pop
and
push
sbb
push
imul
mov
lea
adc
push
aaa
lcall
stos
aam
loop
movsb
repnz
or
mov
mull
add
lds
sub
mov
mov
push
add
mov
mov
es
mov
pushf
mov
cli
jns
adc
inc
mov
idivl
pushf
push
hlt
or
mov
sub
pop
sbbb
out
jle
xchg
fcomp
cmp
jle
push
pop
mov
outsb
pop
dec
enter
fwait
inc
andl
loope
mov
rcll
xchg
lods
mov
nop
out
test
sub
stos
jle
adc
pop
fcoms
adcl
xlat
in
js
orb
pushf
and
sub
lods
icebp
jb
xor
sarl
adc
ds
repz
pop
jno
add
icebp
ds
xchg
cmp
fwait
push
aaa
push
daa
sub
mov
jnp
and
lock
dec
testl
sub
lret
push
inc
mov
mov
mov
movsb
mov
sub
lret
dec
lahf
and
jg
imul
js
dec
mov
outsb
or
jnp
cmp
or
adc
aas
pop
clc
and
out
jl
mov
insl
jne
add
mov
jmp
ucomiss
pcmpgtd
fs
sarl
sub
mov
les
cmpsl
cwtl
aaa
fsincos
insl
mov
aam
out
nop
rolb
in
or
sub
pop
outsl
lret
gs
insl
repz
pop
add
mov
aaa
jecxz
or
ja
sbb
call
pop
mov
insl
mov
das
dec
dec
scas
ljmp
cmp
mov
mov
enter
arpl
das
fcmovnu
xchg
mov
les
inc
dec
ljmp
push
test
inc
gs
mov
xchg
cmp
or
dec
loopne
jmp
push
test
lret
add
pop
adc
jge
int
and
mov
sub
pop
ds
adc
sti
add
leave
std
push
xor
xchg
test
rol
xchg
cmp
pop
mov
jge
mov
les
adc
out
fdivl
enter
or
call
hlt
inc
push
addr16
orb
dec
dec
mov
sub
popa
cmp
lods
xchg
in
and
pop
arpl
adc
pop
adc
test
fistl
cmp
mov
jb
cmpsl
rorl
push
xchg
pop
xchg
in
inc
pop
adc
and
push
sub
adc
js
test
test
mov
cmp
sahf
test
cmp
mov
pop
or
pop
or
lods
pushf
sbb
out
jmp
push
cmp
xor
jnp
add
pop
push
movsl
sub
or
je
pop
mov
jle
int3
add
mov
les
push
and
ss
push
cli
push
and
test
push
sbb
in
mov
addl
test
into
andl
inc
aaa
pop
or
pop
adc
adcl
sbb
cwtl
xchg
dec
std
imul
shlb
inc
test
cmp
sub
cld
jg
int
add
cmp
stc
mov
cwtl
sbb
mov
lcall
push
aad
cmp
mov
jne
and
fnstsw
popa
leave
jmp
and
nop
out
jecxz
jle
aam
jecxz
aam
jne
out
test
jg
cmpsb
mov
cltd
repz
add
hlt
pop
jb
lods
cmp
sub
cs
jae
leave
jmp
shr
pop
es
loope
stc
iret
add
add
sbb
in
xchg
fcmovbe
scas
or
dec
les
cmp
fidivl
fdivl
je
outsl
jmp
in
inc
dec
addr16
sub
push
push
cli
xor
mov
nop
nop
mov
imul
outsb
cmc
mov
mov
aam
insb
sub
push
push
shll
adc
test
xchg
jae
mov
hlt
inc
inc
push
sub
xchg
xchg
jg
f2xm1
pop
dec
ret
mov
mov
jge
in
pusha
lea
or
arpl
adc
adc
fstl
pushf
incl
jg
xchg
lcall
lds
aam
fwait
xlat
fisttpll
mov
sti
mov
sbb
data16
jbe
add
mov
insb
popa
out
les
lahf
outsl
aas
push
rcrb
push
or
aam
cmpsl
stos
jl
dec
adc
cmp
inc
sbb
repnz
pop
pushf
adc
imul
orb
or
mov
es
lods
mov
push
sbb
jne
lods
push
nop
pusha
xor
jmp
sub
inc
jne
cmp
xor
push
lods
aas
movsb
inc
dec
inc
jg
ja
mov
push
frstor
inc
jo
aad
dec
cmp
cmp
push
lcall
xchg
pop
sub
sub
daa
sub
pop
das
push
pop
popf
xchg
out
mov
stc
sbb
or
loopne
jbe
fwait
movsl
fstl
dec
ret
mov
jp
jae
les
mov
fdivrs
subb
mov
or
add
fldenv
lods
enter
loop
mov
fcoms
add
xchg
mov
ror
jbe
jp
fsubrs
adc
and
add
jae
outsb
or
or
insl
inc
lret
lock
lret
or
xor
pop
fcoml
or
inc
mov
ss
mov
dec
fbld
mov
int3
mov
sbb
mov
or
in
xchg
or
sbb
mov
in
adc
jo
das
adc
mov
leave
push
sbb
andb
sahf
sbb
movl
aad
pusha
push
mov
ss
subb
push
aad
mov
mov
dec
pushf
push
outsb
pop
push
fsubrl
sub
shld
andb
rol
mov
mov
roll
inc
gs
andl
mov
and
inc
inc
pop
add
fld
icebp
xchg
xor
inc
ret
dec
ret
pop
add
jb
mov
pop
add
mov
xor
sbb
dec
leave
cs
out
adc
fwait
sbb
xchg
stc
cmp
ss
je
xor
mov
add
mov
cwtl
aad
jecxz
push
inc
and
push
pop
mov
lcall
inc
cmp
aam
sbbl
arpl
and
add
insb
in
jae
inc
dec
sub
shll
sbb
enter
pop
mov
movsb
dec
call
xchg
xor
rol
sbb
inc
ret
pop
jg
push
cli
lcall
jno
test
xchg
into
movsb
mov
orl
mov
add
repz
sbb
or
mov
test
stos
in
cmpsb
aad
adc
aad
mov
mov
insb
cmp
cmp
lods
and
insl
mov
or
nop
inc
stos
out
mov
mov
mov
into
fsubs
std
mov
xor
add
mov
jne
fstps
bound
rep
push
mov
inc
mov
sub
popf
enter
push
ja
xchg
andb
aas
mov
popf
outsl
add
imul
sbb
pop
dec
dec
jae
repnz
mov
mov
in
mov
bnd
inc
or
sub
pop
cmp
dec
imul
mov
jge
mov
and
push
aaa
sbb
inc
add
psubd
ret
nop
in
push
xchg
sub
test
fnstenv
leave
stos
xchg
mov
test
xchg
in
inc
outsl
bound
in
cwtl
inc
scas
lret
sub
int
je
inc
pop
arpl
pushf
fstl
sbb
dec
out
xor
push
shr
loop
mov
xor
xor
pop
sahf
scas
xchg
sbb
mov
scas
adc
dec
pop
push
sbb
cld
dec
lahf
cmp
leave
push
xlat
mov
pusha
jl
aaa
loope
cmc
fs
leave
cwtl
xor
lret
stos
mov
adc
iret
aaa
jg
xor
jbe
repz
ljmp
mov
fisubs
push
jl
jmp
gs
adc
mov
cld
das
xlat
cmpl
cwtl
xchg
push
sub
push
js
test
sarb
lret
hlt
mov
sahf
or
je
stos
cmp
insb
icebp
lcall
pop
sbb
fisttps
pop
push
push
dec
dec
sti
scas
mov
out
in
cltd
jae
in
mov
or
arpl
ja
cs
icebp
cmp
jnp
and
pushf
hlt
xchg
addr16
sbb
es
popa
xlat
sub
ss
add
sar
jmp
cltd
dec
mov
lret
dec
pop
inc
jmp
rcrb
aad
outsb
das
lods
hlt
dec
mov
rcrl
test
adc
jne
in
arpl
mov
mov
dec
push
es
and
push
cmp
mov
mov
loope
mov
push
hlt
test
mov
das
add
push
jmp
lock
xor
mov
mov
lods
mov
xchg
movsb
cwtl
and
insl
cltd
cmc
cmpsl
sub
popf
scas
fidivrl
fldl
xchg
cs
dec
mov
mov
pop
pop
insb
loop
ss
pop
cmc
jl
xchg
jnp
lods
shll
jo
loopne
test
fstpt
aam
out
mov
xchg
pusha
pop
test
ja
in
xor
ds
mov
shlb
xor
push
pop
xor
xchg
pop
je
stos
mov
dec
xchg
int3
lcall
std
out
xchg
imul
iret
inc
mov
cld
insb
and
imul
aad
push
sub
xchg
sub
shlb
sarb
pop
pop
xchg
pushf
jae
xor
dec
jo
out
outsb
popf
sub
xor
cmp
cmpsl
xchg
and
xchg
in
out
xor
test
adc
xchg
mov
in
out
push
mov
iret
mov
mov
push
mov
mulb
jp
or
scas
pusha
in
mov
mov
jge
push
and
nop
stos
inc
xchg
mov
clc
les
inc
call
stos
fldenv
cwtl
les
jbe
aaa
outsl
add
pop
es
dec
cmp
aaa
aaa
test
jge
inc
repnz
push
jl
aam
jge
xchg
in
sub
loop
loopne
and
add
xorb
adc
pop
mov
cmpsl
add
popa
cmp
test
mov
filds
bound
sub
mov
testb
stc
ja
mov
je
push
cmp
add
mov
pop
push
mov
ret
inc
fwait
adc
jno
jnp
hlt
adc
iret
das
inc
cwtl
out
sub
or
xor
rolb
int3
in
sbb
fcom
push
or
hlt
xchg
or
mov
dec
inc
and
nop
inc
jge
les
jno,pt
call
cmpsb
sub
daa
adc
add
cmp
call
mov
test
es
ss
mov
jno
ret
or
or
inc
sbb
xchg
insb
test
addl
rol
dec
cs
adc
sub
inc
andb
pop
mov
aas
mov
add
je
mov
frstor
pushf
or
pop
inc
mov
sub
jp
add
daa
jle
loopne
fwait
pop
lahf
enter
in
mov
stc
inc
add
mov
push
arpl
outsl
enter
cltd
mov
jmp
cmp
push
es
mov
test
lret
jl
mov
jnp
mov
jp
dec
cld
arpl
lcall
xor
mov
popf
frstor
xchg
lret
jae
jg
pop
mov
lods
pop
stos
adc
vpcmpgtw
cwtl
fwait
bound
call
and
push
test
jecxz
outsl
leave
popa
int3
loop
ret
aad
inc
jecxz
cmp
sbb
dec
outsw
outsb
fisttpl
cli
imul
call
jle
ret
push
cli
sbb
jl
mov
add
test
mov
lods
enter
ds
add
sub
bound
mov
in
jg
cmp
add
and
pusha
and
pop
into
add
xor
xor
dec
enter
mov
aad
jecxz,pn
mov
xlat
lods
xchg
fstps
mov
xor
mov
fbstp
xchg
adc
mov
push
repz
int
mov
adc
or
outsl
inc
mov
xor
pop
and
xor
inc
sbb
cmp
outsl
dec
and
and
sbb
stos
cli
push
jne
push
out
push
sub
mov
insb
bound
cmpl
test
dec
loop
cmp
mov
cmp
or
xchg
or
jno
adc
clc
sarl
gs
ljmp
adc
adc
cli
xor
cs
mov
cltd
repz
or
jmp
mov
push
push
adc
ret
aaa
movsl
mov
ficoms
int3
jo
sbb
xchg
arpl
sub
jae
lret
enter
cwtl
dec
stos
pop
fs
inc
mov
sahf
or
add
xchg
iret
out
dec
mov
mov
pop
mov
push
and
cld
jmp
adc
daa
stc
sbb
test
push
insl
inc
pusha
ljmp
push
gs
movsl
mov
movsb
sahf
and
lret
push
jnp
mov
cmpsl
stc
sub
mov
push
jb
lret
push
xlat
pop
aad
lea
cmpsb
call
out
jno
or
orl
mov
stos
mov
jl
lret
dec
repz
fwait
sbb
out
int3
ljmp
pop
aad
mov
mov
mov
dec
cmpsl
pop
in
push
add
imul
mov
pop
addl
inc
mov
sbb
fwait
fwait
daa
mov
pop
adc
cmp
adc
jo
mov
stos
xor
inc
das
mov
aas
ret
jbe
fistl
mov
movsl
mov
cmc
jl
xor
or
cmp
jmp
cmpsb
xchg
popf
dec
insl
mov
aaa
stc
das
xchg
js
ds
or
xor
pop
add
mov
into
out
in
jmp
outsb
popf
adc
addr16
jnp
add
inc
int3
sbb
sub
pop
mov
cli
pop
adc
leave
jb
cld
rcrl
xchg
ret
loopne
xor
pop
fdivs
add
iret
fidivrs
sub
or
outsb
movd
fnstsw
aaa
fldpi
out
jae
cmpsb
movsb
push
int3
sbb
dec
sbb
jae
mov
cmp
pop
dec
jns
inc
xor
inc
pop
fdivs
cmpsl
leave
and
scas
out
sbb
lret
aas
xor
mov
popf
mov
jne
push
and
fnsave
add
idivb
rorb
mov
jle
push
xchg
cld
xchg
out
ss
stos
loope
insb
hlt
xor
dec
add
jnp
xlat
xor
and
lret
pop
aad
xor
push
pop
adc
out
xor
xchg
dec
fisttpl
jns
or
inc
add
mov
cs
mov
mov
nop
jle
or
inc
es
jae
rolb
pop
das
adc
inc
push
add
xor
shll
mov
push
hlt
mov
hlt
add
xchg
in
inc
mov
mov
ss
test
xor
enter
fsub
lret
ja
adc
cmp
fmull
arpl
ds
push
xchg
out
imul
mov
mov
xchg
inc
adc
jp
xor
pop
test
jg
shll
dec
xor
pop
outsb
adc
inc
cmpsl
sar
sub
push
adcl
movsl
psrlq
push
mov
xchg
pop
stos
sub
push
sarb
shrl
cwtl
loopne
imul
jcxz
sub
ret
inc
lods
test
xchg
inc
mov
stc
lret
cmp
dec
jge
mov
mov
leave
adc
in
pop
stos
push
negb
lret
cmp
es
ret
xor
int3
xor
sub
jmp
and
inc
lcall
inc
pop
xor
add
scas
scas
jmp
sub
out
push
jnp
clc
dec
sbb
or
pop
push
subl
call
xor
jg
xchg
or
inc
iret
fists
ret
clc
adc
adc
inc
outsl
addr16
cmp
popl
xlat
mov
fiaddl
cmc
sbb
mov
add
adc
repz
dec
pusha
aaa
jmp
push
jge
mov
lods
xchg
jns
lock
in
inc
cmpsl
sahf
pop
stc
iret
mov
icebp
in
inc
jmp
and
ja
filds
pop
xor
push
xchg
popf
jecxz
pusha
push
into
sub
dec
xor
push
daa
cmp
pushl
push
xchg
imul
sbb
pop
pop
push
lock
sub
inc
imul
push
push
fs
and
sub
ret
inc
out
pop
sahf
mov
loopne
push
daa
sub
es
repnz
jmp
or
lcall
cli
adc
mov
pop
rcrl
and
mov
enter
pop
daa
movsb
mov
lods
sbb
and
js
inc
cmpsb
sbb
xchg
loope
lret
stos
dec
in
ja
sbb
and
xchg
ljmp
mov
out
nop
les
fwait
push
push
adc
cli
aam
add
fidivrs
enter
pop
cmp
add
orl
out
push
bound
addr16
aas
jns
or
pop
xor
xchg
xchg
aaa
pop
mov
jno
hlt
outsl
cwtl
inc
cmp
push
sbb
ror
outsb
xchg
rcll
jl
int3
fs
clc
addl
push
add
icebp
sbb
and
push
inc
mov
adc
mov
push
mov
leave
pop
pop
jg
rolb
cwtl
sub
push
mov
cmp
mov
jbe
stc
or
mov
push
mov
mov
sarb
sbb
and
pop
jge
mov
push
fcomp
test
das
test
sbb
cmpsl
and
mov
loopne
cmc
andl
mov
sbb
cmpsb
sbb
inc
pop
or
pop
cmp
int
fldl
pushf
std
lret
and
jp
adc
mov
pop
test
dec
scas
in
xor
divl
mov
cltd
cmp
ret
dec
add
shll
xor
lcall
stos
int
dec
ret
mov
dec
push
bndldx
mov
lcall
mov
sub
in
cwtl
pop
stos
das
shll
in
jae
mov
loopne
cmpsb
out
out
xchg
jae
mov
jecxz
ret
cltd
mov
mov
mov
cmp
mov
movsb
pop
dec
jbe
out
jo
testl
mov
shlw
and
pop
shll
fwait
or
ret
loope
add
neg
in
psllw
pusha
loop
rolb
push
sti
into
clc
xchg
dec
mov
clc
lret
pop
outsb
lds
adc
fsubs
xchg
mov
push
adc
cmp
roll
sbb
push
jg
push
jbe
divb
sbb
out
mov
into
cmp
cmc
lcall
mov
add
sub
mov
mov
loop
pop
and
jg
add
adc
or
andl
std
fcoms
dec
fadd
mov
arpl
repz
or
addr16
jnp
or
imul
cmpsb
jnp
or
lahf
leave
xor
loop
push
add
outsl
push
aam
pop
pusha
cmp
mov
jg
leave
xchg
out
push
insb
pop
out
lods
out
inc
insb
xchg
xchg
adc
sub
movsl
push
rcrl
ja
sbb
xchg
sbb
sahf
lahf
or
push
mov
inc
cld
push
js
cmpsb
inc
dec
clc
lret
mov
sub
ret
pushf
pushf
adc
jno
insl
or
push
daa
lea
out
mov
bound
xchg
xchg
push
xchg
jecxz
mov
adc
fdivrs
dec
shll
fs
mov
and
mov
or
xor
lret
mov
sub
jge
mov
sbb
cmpsb
shll
gs
lods
push
out
jmp
or
or
mov
xchg
cmpsb
lret
dec
das
add
or
insl
out
es
repz
ds
pop
test
mov
lcall
jle
push
mov
nop
lcall
lea
aaa
imul
mov
or
aam
imul
sub
jb
mov
rcr
dec
iret
cs
jne
mov
add
ficompl
mov
stos
jle
add
into
cmp
das
push
mov
fs
pop
inc
sub
pop
mov
jo
fwait
in
lahf
jg
mov
mov
lfs
cltd
jmp
lods
or
out
imulb
cli
jg
loop
cltd
cmpb
xchg
mov
push
mov
mov
test
cmp
pop
mov
jne
sbb
sub
sub
out
ret
fimull
enter
jle
mov
test
push
jne
and
inc
les
aad
int
inc
mov
cmp
clc
mov
xchg
jle
cltd
stos
ret
mov
push
lret
xor
jmp
daa
repnz
fldt
jecxz
adc
adc
mov
sub
test
push
enter
enter
inc
popf
mov
push
test
jecxz
xlat
cwtl
adc
dec
or
pop
outsl
fdivr
pop
adc
dec
bswap
push
jae
push
push
popf
sub
and
jnp
fwait
bound
lcall
imul
aas
xlat
roll
cmp
add
jp
mov
adc
bts
xor
ljmp
and
push
push
test
stos
xor
xchg
sub
scas
gs
and
ror
xchg
and
adc
into
bnd
inc
pop
dec
repz
cmp
sbb
push
jge
cmp
mov
dec
out
mov
xor
jecxz
mov
xchg
adc
add
or
jmp
pop
cld
into
nop
mov
popf
push
mov
hlt
je
xchg
in
aam
mul
sub
pusha
loope
jl
inc
push
das
mov
test
andl
and
push
jmp
jo
popa
jl
jp
mov
pop
sub
mov
mov
inc
jns
mov
jg
push
outsl
shr
and
shrl
idivb
dec
loopne
pop
cmp
mov
fnstenv
cli
cmp
loope
sbb
mov
ljmp
inc
fmul
ds
std
pop
or
lret
and
js
sub
mov
pop
add
lret
rcll
dec
lcall
sub
mov
enter
in
lahf
leave
cmp
lret
mov
nop
cwtl
pop
and
negb
push
das
ds
push
adc
or
aaa
imul
mov
daa
mov
adc
insl
lods
hlt
push
sbbl
mov
and
mov
mov
sbb
jmp
xor
and
push
mov
incl
sbb
inc
push
xor
mov
cltd
mov
and
inc
push
rcrb
mov
cltd
and
xchg
and
dec
xor
dec
jo
adc
adcb
adc
cld
fs
mov
ljmp
pop
les
mov
shl
pop
mov
fisttpll
jnp
in
outsl
dec
inc
cmp
and
or
add
aam
imul
mov
sbb
pop
es
aaa
orl
gs
sub
or
pop
ss
and
jae
fwait
and
xchg
ret
cmp
dec
shrl
sub
or
mov
cltd
mov
pusha
pop
lock
mov
or
rorl
in
push
out
lret
sub
jnp
fbld
mov
outsl
rcrl
aam
test
push
cmp
test
imul
cmp
or
mov
ss
out
mov
leave
cmp
mov
jmp
ds
std
mov
push
xor
sub
imul
ror
mov
lcall
sbb
fs
fildl
jecxz
dec
das
cmp
daa
sub
mov
or
scas
in
stos
mov
push
sub
sub
sahf
insl
jle
fwait
out
mov
sub
lcall
cmp
dec
dec
rcll
mov
pop
inc
jl,pn
and
push
negl
in
aam
fsts
adc
es
push
mov
sbb
cmp
lret
xor
pop
xchg
xor
mov
xchg
int3
xor
imul
sub
lret
ret
xlat
rolb
loopne
outsb
out
jle
idiv
rclb
test
jg
out
xchg
sub
jecxz
cwtl
jecxz
cld
sub
test
sbb
sbb
repnz
jl
or
pop
popf
mov
mov
push
sub
add
dec
orl
push
ds
popf
sti
or
dec
mov
aam
rorb
test
mov
aaa
pop
inc
xchg
xchg
ss
dec
iret
or
je
sub
ret
mov
pop
jb
inc
fs
cmpsb
inc
add
mov
lods
lret
mov
test
adc
add
test
addr16
add
lds
sub
and
shl
xchg
cli
jge
jmp
leave
rcrl
lahf
xchg
fxch
ror
jnp
pop
adc
or
adc
mov
push
aad
sbb
or
sahf
outsb
fcoms
fisttpll
fidivs
xor
pop
hlt
push
test
fisubs
loop
leave
stos
jge
xchg
addr16
ficoml
fs
mov
sti
rcrb
cs
mov
test
fwait
sub
mov
ror
cmc
lea
or
loope
sub
xor
call
mov
or
mov
shlb
mov
and
inc
fcomp
sub
cmpsb
xor
or
mov
popa
call
iret
mov
xchg
leave
in
test
mov
les
sub
in
adc
leave
push
aas
add
insb
jge
adc
inc
adc
stos
ljmp
jb
shlb
xchg
ss
push
jle
push
sbb
push
sbb
in
out
test
sbb
cmc
cld
adc
mov
push
push
push
cmp
sahf
sahf
mov
std
mov
mov
xlat
or
xor
jnp
and
cld
cmpsb
push
mov
dec
jno
push
cs
cmpb
cmp
inc
push
stos
and
xchg
push
mov
hlt
rclb
rolb
cmpsb
mov
push
or
push
inc
out
das
pop
ljmp
loopne
inc
xchg
jle
mov
cmp
cs
mov
in
enter
xchg
daa
sub
mul
aas
inc
mov
daa
aad
push
mov
xchg
sub
xchg
push
movsl
int3
bound
adc
inc
loop
add
ss
dec
push
nop
adc
jo
sub
xor
je
add
lods
or
lcall
sub
push
aad
adc
dec
push
adc
loopne
js
jae
call
outsb
sbb
xchg
outsb
cltd
out
push
adc
lret
fsubr
test
jne
and
out
sarl
hlt
cmp
iret
push
lea
dec
pop
mov
pushf
add
pop
in
movsl
stc
mul
mov
fisubrl
ja
out
pop
mov
fucomp
inc
ror
movsl
mov
aaa
outsl
dec
data16
xor
inc
lcall
cmp
add
or
bound
push
jne
test
jne
jge
sbb
mov
lods
push
mov
mov
loope
daa
dec
add
dec
imul
jno
frstors
sub
xchg
stc
sarb
adc
cwtl
xchg
fmulp
leave
cltd
add
push
cmpsl
dec
test
adc
lock
push
pusha
cmp
inc
mov
inc
push
enter
adc
aam
mov
test
lahf
mov
inc
mov
mov
aaa
fadd
stos
jne
movsb
dec
popf
in
int3
lods
inc
add
xchg
pop
mov
mov
cmp
jmp
push
xor
fisubrs
insb
and
cli
sbb
repnz
cld
in
cmp
lds
addb
stos
into
and
dec
fcoml
and
daa
mov
xlat
sub
mov
dec
iret
dec
stos
mov
cli
pusha
popf
outsb
sub
fprem1
aam
cli
loope
pop
imul
dec
dec
mov
sub
sbb
clc
mov
jbe
imul
sbb
jmp
loopne
fwait
xorb
bound
adc
enter
stc
nop
dec
lock
scas
mov
jmp
out
fxch
cmpl
sti
scas
inc
ja
gs
jmp
or
out
inc
push
mov
pop
sarl
dec
mov
and
in
mov
sub
pop
cwtl
or
sbb
xchg
and
sbb
lahf
iret
lret
das
inc
aaa
xor
fidivrs
mov
add
int
je
dec
iret
xchg
hlt
fisubs
sub
push
daa
sub
stos
xor
jge
jmp
into
not
out
inc
xchg
jo
aad
or
jae
es
mov
xor
sbb
insb
ret
jae
xchg
cli
je
xchg
pop
pusha
mov
jns
or
dec
mov
daa
cld
frstpm(287
pop
ljmp
xchg
xor
add
stos
movsb
pushf
movl
mov
xchg
xor
rolb
lods
shr
dec
jne
push
dec
mov
sbb
xor
dec
out
push
jbe
push
pushf
xchg
or
sahf
or
ss
ja
popf
xchg
push
pop
pusha
rdmsr
or
cs
xchg
in
xor
daa
test
sar
lea
loop
scas
andl
movsb
mov
add
xchg
adc
adc
xchg
divb
dec
int3
mov
call
mov
pop
mov
dec
mov
stos
xchg
or
test
cmp
jns
fbld
inc
dec
ss
mov
pop
jp
lret
push
fisttpl
dec
movl
dec
pop
add
jb
enter
dec
push
aaa
imul
mov
sbb
xchg
sbb
push
and
push
aas
aad
lea
repz
out
ljmp
lods
stc
inc
xchg
mov
dec
push
dec
shl
subl
repnz
dec
jns
sbb
sbb
mov
xchg
into
pop
in
sbbl
xchg
pop
mov
int3
cli
insl
or
inc
jne
jae
sub
leave
push
dec
add
jno
xchg
dec
xchg
jns
xor
in
cltd
sub
out
ret
mov
push
fs
jmp
ljmp
arpl
js
mov
int
sub
inc
iret
push
outsb
filds
adc
test
nop
adc
mov
inc
imul
cmp
mov
cmp
mov
xchg
imul
ljmp
add
cmpsb
dec
gs
mov
mov
sbb
mov
mov
push
repnz
les
icebp
jg
jp
push
int3
shr
ja
sub
push
xor
xchg
and
arpl
dec
inc
bound
setg
push
or
int
aaa
shlb
movsl
mov
sub
cmpb
std
xchg
sub
sbb
dec
mov
popf
add
xchg
jg
cli
cmpsl
popf
inc
in
add
sub
xor
lcall
add
pop
sbb
adc
sbb
push
xchg
loope
les
pop
adc
jl
pop
jl
pop
movsl
in
lret
dec
les
jp
or
push
cwtl
jno
loop
sbb
push
outsb
cltd
jae
cwtl
dec
push
jnp
fisttpll
call
cld
adc
add
insb
mov
lahf
lahf
cmpsb
cmpsl
xchg
ret
test
ds
mov
pop
bnd
cmp
inc
outsl
fnstsw
stos
xor
stos
sbb
enter
xchg
es
addr16
loope
jl
pop
and
cld
test
add
cmp
xchg
fcoml
inc
and
add
dec
pop
pop
dec
mov
popa
sbb
xor
xchg
aaa
test
insl
pop
push
dec
hlt
or
mov
mov
mov
and
cwtl
xchg
push
lcall
loope
xchg
mov
or
mov
outsb
out
add
js
aad
xor
push
mov
addb
dec
je
or
into
mov
insb
cmp
mov
inc
js
cmc
mov
hlt
ret
xchg
adc
leave
xor
mov
lods
aas
push
rcll
adc
mov
hlt
sbb
repnz
enter
or
cld
cld
test
sub
mov
mov
adc
lea
ja
fisubrl
jnp
jl
inc
sarl
xchg
or
adc
out
xor
jmp
xchg
insl
lock
repnz
inc
dec
jg
sbb
push
mov
mov
sbb
add
push
jl
jns
mov
and
xor
sub
sbb
xchg
inc
pop
ret
mov
cmova
aad
cmp
jge
cltd
ret
or
or
jp
jo
jno
mov
or
lods
rcrb
test
enter
movq
popa
ficoms
pop
cmc
daa
fucomi
in
imul
sub
dec
aam
jecxz
lcall
test
cmpsb
fimull
lea
imul
clc
xor
cmp
inc
sub
addr16
mov
shrl
daa
xor
xor
adc
mov
sti
push
into
les
push
das
int3
mov
sbb
arpl
or
addr16
and
dec
not
div
cmpl
cltd
fidivrl
sti
je
and
movsb
rol
fisubl
test
call
xlat
jae
lods
sbb
dec
iret
cmp
push
jne
ja
fs
cld
in
push
mov
xchg
mov
lock
or
mov
imul
mov
add
sbb
push
lods
inc
aaa
sarl
sbb
jnp
pop
jge
mov
scas
inc
lods
lods
sar
loopne
sub
data16
inc
add
jmp
xor
and
icebp
in
mov
or
mov
mov
outsl
jmp
movb
fsubrl
lcall
in
adc
push
sbb
inc
negl
subb
mov
clc
enter
pop
inc
push
lret
or
sbb
nop
xchg
mov
sbb
xchg
or
jbe
push
out
jg
and
xor
cmp
mov
mov
int
push
das
cld
repz
and
movsl
repz
xchg
pop
lds
fcmovne
insb
insb
cmc
stc
xchg
inc
jns
fnsave
xor
mov
sahf
mov
rolb
jnp
mov
addb
sbb
imul
arpl
xchg
jne
fistps
dec
jg
xorb
xchg
adc
and
dec
cmpsl
jbe
jo
clc
outsb
ror
sub
clc
iret
mov
ljmp
shl
ljmp
imul
sub
out
mov
xchg
insl
inc
pop
scas
xchg
mov
cmp
jl
mov
pop
dec
mov
jge
xchg
in
ret
mov
pushf
mov
jg
add
stos
xchg
ret
dec
cmp
push
fdivl
in
rcrl
jnp
ret
movl
mov
sub
xor
aam
adc
sub
cmp
mov
addl
pop
mov
cli
jbe
pop
jb
loopne
cwtl
xlat
loope
popf
xchg
out
ds
cmp
jecxz
gs
fcoml
cwtl
hlt
mov
aas
inc
sbb
sub
ret
cs
cmpsb
adc
cltd
mov
pop
jo
scas
ss
add
daa
mov
or
leave
rcrl
and
jns
lds
pop
or
leave
cltd
jb
xor
rorb
imul
cmc
sub
mov
ja
jae
xchg
sub
xor
cli
mov
dec
dec
clc
outsl
xchg
lea
cmp
pop
je
push
je
scas
push
jns
mov
push
pop
scas
pop
push
ret
repz
rolb
scas
imul
pop
mov
jnp
sbb
dec
cld
cli
aam
or
lods
xchg
and
movsb
add
inc
mov
adc
int
pop
cmp
pop
ja
pop
decl
pushl
dec
and
gs
mov
iret
in
sbb
sti
lock
add
pshufw
fs
nop
jno
mov
mov
pusha
shll
mov
pop
inc
inc
sbb
mov
cmpsl
or
shrl
jae
jmp
mov
mov
inc
sbb
movsb
jb
leave
rolb
jmp
cmpsb
fdivrs
pop
add
and
out
jmp
aad
enter
sub
sbb
fstl
cmp
sub
lods
jmp
or
div
jne
pop
stos
dec
pop
stc
out
and
xor
ljmp
mov
subl
or
inc
in
and
sbb
mov
movsb
xlat
add
xchg
inc
mov
lcall
jae
mov
adc
int
sbb
lret
xchg
adc
int
jl
pop
jp
loop
ss
aaa
or
loop
add
insl
push
sub
popf
icebp
shrb
sti
adc
fwait
pop
push
add
fnstenv
lret
insb
mov
jge
push
fists
pop
sbb
push
in
mov
dec
popf
rorl
xchg
test
je
pop
pusha
test
rorb
pavgb
fldcw
insb
popa
ja
jp
jge
in
mov
mov
mov
insb
insb
out
push
std
mov
xor
ja
mov
mov
xchg
xor
leave
ja
stc
popa
xor
pop
shll
jne
fldenv
sti
das
dec
push
jb
lods
inc
push
stc
call
cli
lcall
aam
or
cwtl
test
sub
xchg
movzwl
movsb
lret
in
jle
dec
jmp
pop
mov
dec
adc
or
inc
inc
mov
std
adc
loop
inc
lock
pop
jmp
push
pop
ret
dec
xor
mov
dec
scas
mov
mov
mov
add
sub
sbb
outsl
jg
xor
icebp
adc
inc
adc
addb
popa
inc
dec
fisubrl
pop
repz
xchg
aad
fsubrs
jecxz
lret
hlt
enter
xor
outsb
sbb
pop
or
call
pop
nop
jbe
push
rol
dec
in
stos
mov
cltd
push
jle
iret
cmc
adc
sub
fwait
sbb
dec
in
jno
sbb
inc
mov
mov
mov
popf
dec
cwtl
mov
fwait
je
inc
push
lds
jmp
lods
hlt
mov
mov
incl
sub
add
jno
adc
jl
sbb
orl
jno
or
jnp
jne
addr16
and
mov
fstl
inc
stc
and
roll
jecxz
xor
lods
jbe
cs
mov
sbb
rolb
or
test
shlb
xor
dec
cmp
xlat
lret
adc
lret
inc
cmpsb
sti
hlt
sbb
fisttps
sbb
inc
jb
mov
mov
push
mov
mov
or
adc
cs
mov
xor
xchg
mov
xchg
lods
pop
insl
aad
outsl
loope
stos
movsl
adc
enter
or
lock
test
movsb
movsb
lcall
or
jle
mov
mov
adc
jo
sbb
rcrl
pop
mov
adc
aam
pop
scas
filds
add
sahf
aad
sbbb
sbb
loop
hlt
dec
and
lahf
pop
movsl
arpl
rclb
lahf
sbb
pop
jbe
dec
stos
jb
test
xchg
push
in
sti
sbb
jp
adc
fbstp
pop
shrl
cmc
cmpsb
imul
inc
dec
xchg
scas
jae
cltd
fsubr
enter
shrl
xorl
iret
mov
fisttpl
mov
pop
out
mov
pop
mov
stos
sub
xchg
add
xchg
sbb
cld
cmp
cmp
cmp
mov
clc
dec
pop
mov
mov
pop
je
sahf
mov
mov
dec
jl
adc
sbb
das
adc
aad
dec
outsl
mov
fdivr
sub
cltd
rcrl
sbb
adc
or
mov
lds
lea
popl
mov
hlt
mov
mov
movsb
in
insb
jbe
lods
add
lcall
push
cmc
inc
fwait
adc
xor
cmp
test
mov
gs
sub
push
mov
inc
mov
inc
xlat
nop
sub
lea
sahf
repz
pop
fs
ret
push
or
dec
jae
inc
outsb
lret
es
mov
inc
push
xchg
into
and
jns
clc
inc
mov
mov
movsb
pop
push
dec
sub
fdivs
push
xchg
sbb
decb
sbb
or
incb
sbb
pop
push
push
mov
jno
or
sub
jae
leave
fstpl
cmp
jl
cmp
xor
xor
loopne
aad
repnz
pop
and
ss
xchg
mov
scas
inc
dec
ret
mov
sbb
push
cmp
adc
add
jmp
inc
push
fmull
or
leave
test
xorb
xchg
fmulp
sub
mov
push
adc
call
mov
test
mov
cmp
cwtl
test
rcrb
jp
stc
add
ljmp
imul
adc
insb
xchg
cs
loope
and
jge
mov
sbb
inc
fwait
mov
scas
adc
or
jbe
xor
push
add
mov
dec
les
repz
shr
dec
inc
adc
or
xor
xchg
jae
or
adc
out
mov
ss
movsl
das
cmpl
aas
mov
inc
movsl
loopne
aad
icebp
add
jp
hlt
or
call
push
and
inc
xchg
inc
jle
or
sbb
dec
inc
mov
lea
mov
sub
fwait
jle
mov
daa
nop
and
fldcw
jne
jnp
gs
sbb
call
sub
roll
or
mov
push
fcmovne
mov
test
aaa
pop
fmull
push
cltd
dec
dec
stc
faddp
pop
fcmovu
fs
add
in
out
and
enter
jg
scas
into
lcall
push
mov
inc
repz
lods
jle
sub
aas
lret
imul
adc
gs
cmp
pop
inc
fcomps
in
ds
jne
repnz
cmc
or
lret
jbe
jle
dec
jp
lds
repnz
xor
sub
lods
repnz
mov
sub
sub
negb
push
icebp
loop
cmp
pop
and
ficoms
adc
roll
cmp
notl
or
inc
and
mov
mov
xchg
push
bound
add
xchg
inc
aas
out
mov
adc
cmp
pop
test
xchg
aad
mov
or
rol
jecxz
jbe
popa
xchg
dec
loope
jg
jo
mov
pop
inc
push
pop
or
sub
cmc
or
daa
shl
cmp
cmp
mov
inc
cmp
int
fnstcw
xorl
repnz
or
dec
dec
xchg
mov
mov
jbe
sub
mov
movsb
faddl
mov
jne
std
sbb
test
sub
xlat
inc
enter
sbb
aad
shrb
cs
inc
int
insb
ret
mov
call
sbb
mov
cmp
fidivrs
xchg
sahf
sub
xchg
and
add
mov
sub
popaw
sub
inc
push
dec
push
pop
and
je
or
inc
jge
sbb
lret
aad
cmpl
aam
xchg
cs
push
jecxz
mov
sbb
push
cwtl
push
or
add
sub
stos
mov
cmc
lea
pop
lds
sbb
das
je
pusha
cmp
sbbb
cmpsl
mov
sub
xor
inc
pop
sub
and
cmp
adc
dec
mov
not
pop
and
loope
les
rol
jl
dec
jp
iret
jge
lahf
call
loopne
loopne
cltd
sbb
rcll
mov
fstl
or
cs
push
fcmovnu
or
push
sub
cmpsl
rolb
and
dec
mov
lea
mov
das
daa
arpl
jg
out
push
test
test
clc
push
shlb
xor
lret
cmp
dec
fistps
lahf
lcall
dec
popf
jnp
pop
mov
or
repz
push
outsl
or
and
lock
dec
movsl
mov
rclb
push
push
or
inc
xlat
das
repnz
adc
and
repz
xor
rorl
mov
mov
push
sub
cli
dec
pop
aam
ds
stos
movsb
push
sarl
ljmp
xchg
stos
std
sbb
mov
mov
adc
lahf
or
cmp
adc
mov
cmp
add
mov
add
nop
cli
sti
aaa
pop
mov
cwtl
xchg
mov
mov
sub
sarl
fsubrl
das
push
filds
inc
fwait
aaa
sub
addr16
loop
sub
mov
jmp
xchg
xchg
push
pop
xor
in
add
mov
inc
mov
xor
sub
push
push
adc
push
jo
inc
add
ret
int
aaa
add
mov
jle
addr16
nop
mov
mov
ret
mov
add
xchg
xchg
add
repnz
in
ds
push
inc
fiadds
pusha
inc
or
cld
out
arpl
loop,pt
lahf
sub
mov
idivb
pop
jbe
and
imul
aam
cmpsl
xchg
int
push
lock
idivl
jbe
dec
out
arpl
movsl
mov
pop
lea
dec
negl
shlb
sub
pop
sbb
xchg
fisttpl
out
sbb
adc
cmp
dec
idivl
pusha
mov
clc
adc
lret
icebp
sub
stc
sbb
jns
or
leave
and
stos
icebp
cli
outsl
mov
or
mov
or
push
in
clc
cs
sarl
cmp
add
fsub
stos
lods
xor
scas
fwait
test
jmp
movsb
mov
adc
test
pop
dec
xchg
adc
std
int3
fwait
or
scas
inc
mov
inc
inc
icebp
lods
imul
jno
sub
ret
mov
sbb
xchg
add
ljmp
js
mov
std
lahf
jo
push
shll
adc
cmpb
aam
mov
out
int
sahf
ljmp
testl
test
rsqrtps
sbb
hlt
jne
hlt
je
mov
rcrb
imul
loope
dec
mov
add
iret
push
mov
ljmp
fcompl
rolb
imul
lahf
in
dec
dec
jmp
mov
lcall
fistpl
stc
xor
mov
jbe
mov
cwtl
mov
mov
js
pop
mov
sub
lds
fwait
std
ret
cli
sbb
ljmp
incl
out
jmp
in
jbe
sbb
dec
jl
mov
push
loope
jg
jb
xchg
mov
sbb
cmp
daa
inc
lds
test
test
aam
bound
je
push
ret
xor
mov
das
sbb
jnp
ds
js
movb
pusha
inc
jle
std
xchg
outsl
lcall
xchg
xchg
fwait
outsl
sbb
insl
shlb
add
cmp
mov
addr16
in
xchg
mov
cmp
lret
insb
add
push
lock
ja
scas
shrl
xor
inc
xor
into
pop
stc
xchg
xor
mov
push
cmp
or
lods
push
pop
mov
pop
mov
cmp
mov
jbe
and
mov
dec
jl
orb
mov
enter
push
mov
rclb
pop
das
rorb
or
xor
mov
ds
imul
outsb
outsb
push
push
add
gs
cmp
mov
mov
mov
or
outsl
sub
pop
cmpsl
inc
cmpsl
xchg
push
mov
shl
or
mov
call
ss
mov
shlb
pop
clc
adc
out
lret
rolb
in
xor
shr
inc
ror
repnz
scas
jg
sub
aaa
fdivrp
add
loop
pop
inc
adc
nop
add
mov
loope
daa
inc
out
movsb
inc
inc
neg
mov
dec
icebp
push
pop
ja
mov
mov
loope
and
dec
subb
gs
icebp
lea
clc
push
pop
mov
jmp
pusha
dec
bound
sub
in
pop
jle
loope
imul
xchg
pop
xchg
sub
mov
cmp
adc
pop
mov
pop
int3
repnz
pop
hlt
iret
sbb
movsl
pop
aam
push
outsb
push
popa
pop
and
mov
rorl
inc
stc
pusha
push
stc
out
jo
inc
scas
lods
lahf
jnp
xchg
in
pop
cltd
repnz
xor
mov
xchg
test
cmp
test
aas
add
push
lcall
mov
cmp
push
je
dec
push
popa
test
adc
lock
cmpsl
enter
add
loopne
pop
jecxz
cmc
shll
fdivrp
add
push
jo
mov
sub
cs
or
dec
stos
pushf
ljmp
cwtl
inc
cmp
pop
and
sbb
negb
ja
adcb
inc
fldenv
pop
cmc
jno
push
ret
jl
gs
aad
in
testb
pop
in
mov
add
mov
stos
nop
mov
loope
or
sub
mov
rcll
add
push
cmc
data16
jmp
int3
cmp
std
and
mov
leave
lea
add
jl
stos
pop
push
pop
pusha
mov
lds
dec
push
jle
lods
jbe
lea
arpl
jb
pop
mov
cmpsb
fidivrs
sbb
dec
mov
xor
popf
jecxz
sub
das
or
sti
stc
int
aaa
cmp
xchg
in
fsubs
push
adc
push
mul
mov
nop
dec
xlat
jb
lcall
or
xor
inc
testb
push
pushl
or
dec
xlat
bnd
jae
xchg
sbb
jle
adc
add
and
xor
ficoms
enter
sub
je
and
sub
lods
lret
lret
cmpsb
and
mov
cwtl
xor
out
mov
inc
loope
xchg
ret
rcll
fwait
test
xor
jl
or
lret
in
and
sbb
outsb
dec
dec
or
inc
test
mov
sbb
pop
mull
and
dec
inc
pop
push
inc
inc
nop
aam
mov
jb
cld
add
mov
pop
push
in
pop
addr16
xlat
sub
mov
cmp
lods
mov
in
xchg
sbb
int3
cmc
cs
cwtl
hlt
stos
stc
sarb
inc
popa
insl
mov
sub
test
lcall
xchg
push
lret
mov
fs
adc
or
scas
rclb
adc
jnp
gs
outsb
bound
mov
mov
pshufw
mov
sub
sub
inc
mov
mov
jns
std
sub
inc
inc
cmpsl
xor
and
push
insb
xchg
add
lret
mul
sub
iret
push
lea
cmp
sbb
mov
imul
ja
and
mov
fdivrl
dec
fists
fistps
ja
xchg
shl
jo
xchg
repnz
je
stos
inc
xlat
insb
out
push
imul
loopne
jl
cmpsl
ds
and
das
mov
jge
clc
ss
ljmp
es
sbb
cltd
dec
filds
pop
ss
push
cmp
push
pop
sbb
xor
or
xorb
loop
xchg
call
repnz
sub
xchg
inc
aas
clc
push
dec
aas
sahf
push
xchg
js
and
into
test
push
sahf
movsl
or
jae
scas
mov
jmp
test
andl
bound
outsb
sub
cmpsb
aaa
popa
adc
neg
insb
loop
call
js
scas
xchg
pop
in
sahf
cmpsl
sahf
push
pusha
xchg
data16
enter
jb
push
ficompl
inc
adc
xchg
loopne
and
imul
fistpl
rcrb
fldl
push
pop
ss
popa
lret
pushf
dec
fs
popa
lock
loopne
repnz
add
ret
cli
cmp
test
lds
lock
mov
mov
ds
icebp
dec
inc
js
jnp
and
jge
call
data16
jl
mov
insl
shlb
push
dec
bound
mov
add
inc
lea
xchg
add
or
xchg
mov
divl
push
arpl
inc
in
pop
or
rorl
adc
pusha
jecxz
ljmp
fs
packuswb
cmp
sub
cmp
or
out
sbb
je
sub
cwtl
sti
inc
mov
int
add
mov
sub
in
lods
aam
and
maskmovdqu
negl
pop
cmpsb
push
jge
dec
push
add
and
into
cmp
ret
popf
dec
sub
jae
scas
mov
jp
pop
mov
add
cmpl
mov
fdivrl
adc
je
xor
divb
jmp
and
xchg
cltd
cmp
xorl
lahf
dec
xchg
or
fidivrs
sbb
ret
mov
pop
cld
aad
shl
mov
sub
pop
out
mov
mov
in
nop
sub
pop
xor
cmp
pop
fistps
inc
lahf
mov
orb
push
pop
sbb
aaa
pushf
xor
js
mov
imul
jecxz
sbb
adc
jmp
insb
mov
inc
mov
fidivs
xchg
clc
push
dec
out
lock
xor
and
test
cmp
cmc
lods
mov
stos
into
xchg
jb
mov
push
push
and
inc
out
lea
and
sbb
mov
addr16
iret
and
mov
fldcw
addr16
push
jmp
mov
jg
push
sbb
test
test
add
lahf
sbb
nop
call
push
mov
jno
pop
mov
shll
sub
shll
or
in
andb
sarl
sbb
cmp
or
stos
loop
mov
cmpsb
int3
mov
xchg
or
mov
xchg
test
dec
hlt
aaa
cmc
pop
push
shll
add
icebp
pushf
stos
cmpb
loopne
push
or
or
imul
repz
enter
jl
pop
mov
movsb
mov
mov
inc
sub
loope
pop
movsb
scas
mov
test
pop
outsl
push
hlt
cmp
imul
xchg
pop
scas
aam
jge
jl
cmp
aas
test
jle
shll
mov
mov
fsubr
daa
in
ja
adc
add
iret
loope
cmc
pop
movsb
xor
mov
stos
cld
xchg
mov
cli
xchg
inc
adc
cmc
mov
jecxz
push
jbe
xchg
into
add
jne
mov
dec
out
movsl
mov
ja
sbb
add
pop
xchg
mov
jp
xchg
inc
fadd
gs
xor
cmp
ret
into
add
xchg
xor
test
in
decl
cmc
shlb
pop
xor
jne
ret
xor
mov
addb
cltd
jno
sahf
sbb
fwait
aaa
inc
add
insb
xor
lcall
mov
pop
or
fmul
push
mov
pop
subl
repnz
sarl
pop
xchg
dec
lcall
push
loop
xor
shlb
es
mov
sbb
sub
or
test
dec
loope
inc
pop
rol
sbb
and
or
push
bound
adc
out
xor
cmp
inc
or
loop
je
mov
xor
cs
lret
jmp
out
gs
inc
mov
sub
push
add
push
inc
ret
mov
xor
mov
addb
cwtl
push
jne
cltd
loope
add
test
rcrb
outsl
es
aas
call
stos
stos
mov
pop
pop
sbb
icebp
inc
mov
shll
inc
xor
scas
inc
sbb
fidivrs
cmp
pop
mov
lret
ds
xchg
jbe
jae
pop
xchg
inc
iret
dec
adc
mov
gs
pop
mov
bsf
aaa
cli
fdivr
jnp
jge
sbb
jnp
ljmp
hlt
loope
jecxz
inc
divl
xchg
adc
inc
orb
mov
push
xchg
pusha
cmp
scas
add
add
push
xchg
scas
addr16
inc
cmpsb
int
movb
pop
popa
test
stos
or
fildl
cld
outsb
mov
outsl
or
add
adc
xchg
cmpsb
aad
insb
sbb
adc
es
push
or
ret
or
in
std
inc
xor
push
cmc
dec
rcll
dec
aas
std
push
inc
push
shr
fwait
sub
mov
cmpb
jge
lcall
mov
add
jmp
out
or
in
insl
xchg
test
rcll
and
out
xchg
je
addr16
ljmp
test
test
pop
call
pop
pop
lret
ljmp
jecxz
roll
cmpsb
xor
mov
jmp
ret
jl
in
nop
pop
mov
adc
mov
iret
cmp
mov
xor
sub
lcall
ljmp
push
xlat
mov
pop
push
mov
jno
push
scas
popa
stos
sbb
ret
mov
mov
repnz
and
or
adc
outsl
out
popa
pop
movsb
jp
dec
rcl
xor
stos
imul
shrb
lds
out
push
mov
shl
stc
cld
lods
cltd
push
fs
mov
stos
test
jecxz
jecxz
add
movsl
pop
sbb
std
dec
addr16
in
and
ds
sar
add
jg
push
lret
dec
jecxz
adc
lods
cmc
fidivl
lds
adc
mov
cmp
xchg
iret
rolb
or
mov
out
rep
mov
lcall
mov
pop
dec
inc
hlt
jp
jno
xchg
rcrb
jb
fisubs
push
mov
in
cmc
outsb
mov
aam
icebp
sub
pop
imul
cmp
lret
ret
out
leave
push
lods
clc
jecxz
jb
mov
xchg
mov
stc
push
mov
das
push
lahf
and
xor
inc
xchg
and
mov
mov
loopne
mov
dec
js
mov
mov
ret
mov
cwtl
jb
xchg
loope
insb
outsb
lods
mov
xor
sub
test
jbe
in
inc
add
in
lds
cmp
mov
enter
mov
scas
and
bound
pushf
or
adc
mov
push
adc
push
jae
into
test
gs
lret
jecxz
pop
lods
xchg
test
adc
mov
mov
dec
enter
xor
mov
adc
pop
fsubr
movl
insl
mov
loop
cmpsl
je
je
lods
ficompl
cli
pusha
arpl
popf
xchg
push
cwtl
into
js
nop
mov
or
mov
mov
xchg
xor
pmaxub
pop
sub
ficompl
insb
decl
mov
inc
stos
mov
and
rclb
int3
sbb
jb
mov
and
adc
jecxz
out
lret
push
pop
jge
pop
scas
lea
hlt
jge
lcall
cmpb
insb
fsts
outsl
rolb
bound
js
fnstenv
xor
fwait
cmp
stos
and
adc
stos
mov
or
fidivl
mov
cld
loop
add
sub
lock
fisttpll
mov
add
push
mov
sbb
movsl
jecxz
orl
push
loopne
in
dec
dec
lea
or
pop
mov
sti
lock
mov
lods
fildl
jb
jecxz
loope
int3
ficompl
mov
pusha
pusha
dec
loopne
add
lcall
mov
dec
test
jp
in
aad
inc
fs
inc
das
int3
out
push
stos
aam
xchg
mov
jb
loop
movsb
or
add
pop
ficompl
jp
arpl
or
push
pop
cmp
into
popa
pop
stos
add
push
aas
outsb
enter
sub
sub
mov
mov
subb
repz
push
je
add
decl
enter
rorb
inc
icebp
pop
sbb
xchg
popa
or
pop
iret
and
jns
insl
xor
pop
call
adc
mov
adc
mov
jle
cltd
push
xchg
sub
dec
test
ljmp
sbb
add
gs
or
mov
mov
pop
inc
das
sub
jl
inc
divl
cmp
iret
cmp
ljmp
and
or
push
inc
out
jge
xlat
jo
cs
xor
bound
sbb
or
out
add
xchg
pop
jb
sahf
repnz
test
cmp
hlt
sub
lds
jno
mov
pusha
mov
enter
mov
sbb
jle
xlat
sub
inc
dec
lret
ja
fcmovbe
mov
ret
in
push
ret
and
xchg
xchg
sbb
add
cltd
adc
or
jne
jmp
adc
lcall
pop
inc
filds
inc
lds
xchg
cmp
insb
movsb
daa
roll
sbb
fists
mov
pop
iret
xchg
dec
inc
add
xor
mov
push
cli
push
lods
lock
add
jbe
cld
xor
sbb
fildl
inc
lcall
sbb
aas
call
push
xor
mov
add
push
lahf
jne
lods
test
aaa
xchg
int
sbb
lcall
loop
addr16
jl
jg
arpl
add
out
loopne
jae
push
pop
cli
cld
inc
int3
dec
loop
pop
push
or
xor
mov
add
inc
push
inc
inc
es
lock
daa
push
pop
stos
fsubl
pusha
sarl
sub
outsb
jo
aas
add
mov
out
or
xchg
cmp
sbb
rcrl
shrl
push
sub
repnz
ss
fcoms
sti
sub
popf
xor
cmp
dec
js
out
sub
insb
movsb
mov
mov
adc
ljmp
adc
mov
add
inc
rcl
cld
push
mov
push
repz
hlt
fildl
mov
icebp
sbb
outsb
pop
and
ds
bound
xchg
test
sbb
add
xchg
sbb
fidivrl
adc
shr
js
mov
lret
pop
dec
fstpl
bound
inc
push
imul
jbe
hlt
fstl
cmp
pop
or
push
bound
stc
decl
cmpsl
sarb
push
stos
or
pushf
add
mov
incb
out
leave
ret
clc
cmp
mov
and
jp
cmp
mov
sbb
inc
out
xor
xchg
jecxz
in
loopne
jne
dec
xor
mov
inc
and
and
and
sbb
mulb
in
sahf
and
xchg
in
dec
xchg
jb
scas
mov
shrl
mov
repz
aas
add
xor
repnz
inc
je
fwait
jecxz
gs
dec
push
fcoml
add
jae
movsl
enter
lahf
push
addr16
int
jae
sbb
pusha
lock
pop
inc
mov
add
nopl
xchg
stc
xor
sbb
xor
loop
dec
stc
xor
mov
push
clc
jmp
ja
jo
xchg
pop
xor
out
fildll
testl
adc
sub
inc
pop
cmc
pop
pop
sti
int
lahf
adc
int3
xor
fmul
fnstcw
cmp
jge
dec
pop
push
int
movsl
add
cmpsl
imul
lods
and
loopne
loop
dec
push
xchg
mov
jae
pop
sbb
sbb
mov
pop
jno
sbb
jns
or
mov
int3
pop
std
mov
in
push
es
or
fdivs
lret
popf
xor
shlb
sti
cmp
push
and
popa
pushf
mov
inc
cmp
add
xlat
inc
pop
sbb
sub
xchg
loopne
and
mov
push
and
mov
mov
inc
mov
pushf
in
sbb
mov
sub
mov
ds
mov
push
jl
push
lds
out
and
pop
in
or
sub
xorl
mov
sub
rcrb
cwtl
fisubrs
sub
mov
push
lods
xlat
loope
add
mov
cmpsl
jae
cmpsb
cmp
cmp
adc
xchg
popa
lahf
arpl
lock
fisttpl
shll
mov
popa
dec
xchg
leave
idivl
push
jge
xlat
ss
fisubl
or
and
and
mov
mov
out
sub
or
negl
sahf
xor
xor
fwait
add
mov
test
xor
sub
mov
loop
xor
push
mov
cmp
fisubrl
jmp
push
insb
js
incl
and
cld
dec
xor
push
and
outsb
in
hlt
jecxz
xor
pop
mov
push
sbb
mulb
dec
mov
lcall
or
shrl
mov
daa
mov
into
lock
xor
sti
popf
popf
xchg
push
loope
ret
sahf
out
es
es
out
mov
std
or
int3
ljmp
imul
xor
mull
addl
scas
mov
mov
movsl
push
xor
or
jp
xor
adc
or
jge
push
scas
fwait
and
add
outsl
jbe
lods
jge
ljmp
popf
mov
mov
aam
xchg
push
add
in
jo
jne
clc
jno
or
fsubs
outsb
sbb
xchg
xchg
sub
add
push
arpl
and
adcl
push
mov
jo
mov
dec
inc
lret
movb
dec
aaa
xchg
jae
push
xor
loope
mov
sahf
push
frstor
add
sbb
jge
push
mov
adc
dec
stc
stc
icebp
lcall
jmp
into
adc
mov
mov
xor
pop
dec
bound
xchg
lea
add
imul
push
sub
jns
and
push
push
jle
push
xor
mov
loope
xor
cmp
sbb
add
xlat
into
cmp
pop
cwtl
mov
test
std
xchg
lds
lcall
jmp
adc
lea
or
adc
mov
fidivrl
mov
stos
mov
xor
sub
cmp
sub
dec
repz
xor
inc
add
add
pop
loope
jo
lret
and
ret
push
int
mov
xchg
fstps
mov
mov
std
imul
xchg
xchg
imul
xchg
mov
dec
dec
fwait
push
xchg
dec
popa
pop
xlat
inc
jne
out
gs
in
mov
xor
and
movsl
mov
lahf
cli
idiv
imul
mov
insl
fs
test
lret
movsl
stos
inc
push
dec
sub
cmp
dec
sbb
ljmp
clc
js
xor
aaa
push
ja
lds
inc
mov
sbb
decl
imul
das
sub
and
adc
mov
imul
mov
cli
out
and
rcrl
shlb
mov
clc
aam
rcr
dec
mov
mov
xorb
lret
hlt
in
inc
lock
lock
ret
out
mov
leave
mov
mov
mov
jns
gs
mov
and
jb
iret
lea
push
adc
inc
and
out
pushl
push
inc
jg
ljmp
movsb
inc
jle
rclb
push
aad
icebp
inc
xchg
sbb
cmp
xor
cmp
add
fimull
mov
nop
stos
loop
cmpsl
mov
cmp
jge
test
ss
sub
pop
std
movsl
repz
out
pop
mov
xor
push
push
in
add
or
into
xor
sub
and
xchg
mov
xchg
mov
pop
mov
cmc
inc
nop
dec
out
lods
mov
xchg
aaa
xchg
sub
xchg
enter
scas
cmp
inc
rcrl
pop
adc
in
cmovb
popa
and
call
addl
and
push
loop,pn
in
sahf
leave
repz
mov
shlb
jmp
mov
push
mov
sub
xchg
pop
test
sbb
sbb
das
cltd
add
rcl
lcall
mov
psraw
lret
pop
add
mov
std
imul
lea
inc
stos
insl
mov
jns
pop
xor
mov
xchg
lods
mov
dec
shl
stos
cmp
adc
mov
icebp
repz
iret
mov
imul
into
sbb
mov
or
test
or
mov
adc
cmp
sbbl
xchg
xor
add
movsb
sub
cmc
mov
xorl
and
loope
in
add
jo
shll
es
add
sub
rcl
mov
mov
mov
xor
mov
dec
xor
imul
cs
mov
testb
daa
movsb
adc
hlt
repz
enter
push
in
mov
test
mov
mov
push
roll
cwtl
imul
test
int3
mov
addl
push
xchg
adc
enter
pop
arpl
pop
inc
out
les
bound
imul
sub
or
xchg
mov
repz
xchg
mov
dec
adcl
mov
ljmp
jl
scas
sub
ror
repz
cmpsb
mov
sti
stos
mov
xlat
fs
xor
dec
mov
movsl
adc
mov
imul
jo
jne
xchg
out
pop
adc
push
sub
and
sahf
xor
push
mov
in
dec
pushf
fcmovbe
fs
notb
pop
es
into
arpl
daa
lcall
jecxz
pop
push
adc
jl
push
ljmp
icebp
pop
xor
jp
jnp
les
fcompp
jb
ret
fwait
repnz
mov
mov
inc
xor
push
out
add
out
ret
xchg
xchg
daa
add
mov
xor
mov
adc
loopne
mov
mov
cwtl
in
in
mov
jge
sub
mov
cmpsb
mov
iret
pushf
aaa
jns
imul
rcr
mov
adc
loope
dec
jno
addr16
ret
or
insl
or
ret
dec
stos
ffree
sbb
gs
std
inc
xchg
mov
clc
or
cltd
pop
in
outsl
scas
or
shrb
mov
adc
sub
aaa
xor
call
jmp
xchg
sub
das
insl
jb
pop
iret
mov
lds
pop
je
sbb
mov
nop
js
mov
add
arpl
ret
mov
adc
xor
sti
inc
mov
nop
addr16
xchg
dec
mov
lods
add
cli
and
ja
cmpsl
sub
xchg
mov
shll
stos
cmc
xchg
imul
mov
lds
inc
pop
or
mov
mov
pop
push
ret
push
sub
and
fidivrl
or
in
jb
add
mov
leave
in
mov
jne
ss
mov
dec
jmp
ljmp
insb
and
jp
cltd
mov
fadds
push
jns
ret
outsb
mov
lret
or
cmp
inc
inc
mov
xorl
jae
int
cwtl
xchg
or
pcmpgtd
aam
mov
pusha
adc
and
and
dec
fdivs
cmpsl
add
and
daa
leave
and
daa
xor
ja
or
add
jg
ficomps
lock
hlt
lahf
jl
adc
fildll
cmp
jg
jo
add
shlb
xor
cmpsb
int
scas
stos
pop
fsubl
dec
adc
lret
jecxz
push
sar
pop
idivb
mov
inc
xchg
mov
movsl
adc
push
sbb
in
loopne
ja
fwait
mov
push
fidivrs
pop
xchg
je
inc
jge
adc
adc
inc
or
pop
loopne
sub
jp
adc
scas
sbb
sub
in
repz
mov
jbe
mov
mov
sbb
int3
mov
fdivrl
xlat
and
mov
fisubl
in
or
pop
in
push
fstps
sbb
sub
adc
cmpb
xchg
cmp
minps
push
popa
and
push
fstpt
test
xchg
push
mov
clc
lds
xchg
fdivrl
xchg
sbb
sub
xor
fistpll
std
scas
sahf
mov
stos
xlat
dec
xor
adc
xchg
mov
adc
lcall
and
movsb
and
cmp
aad
add
push
xor
jecxz
dec
push
addr16
rol
clc
fs
jae
movsb
mov
fcoml
loope
inc
out
icebp
inc
std
loope
lcall
mov
shrl
adc
or
or
lods
jle
test
into
mov
cld
push
mov
test
js
sbb
xorl
popf
cmpsb
sarb
rorl
rclb
sub
sbbl
xchg
nop
xlat
sub
in
jle
insl
mov
mov
xor
pop
popa
dec
cmp
xor
push
ret
scas
cwtl
fs
adc
or
cmp
xor
push
sahf
scas
xchg
or
mov
fcoms
jnp
push
sahf
movsl
jno
loop
mov
dec
inc
push
shr
imul
clc
fdiv
pusha
pushf
xchg
push
outsb
rolb
jmp
les
cwtl
push
sub
pop
sbb
add
jmp
aam
mov
push
mov
add
push
adc
add
jge
inc
push
inc
leave
int
into
adc
adc
fwait
cli
inc
mov
sbb
mov
nop
lcall
xchg
pop
pop
inc
xor
jge
fcoms
ss
js
mov
cmc
pop
lret
and
xor
cmp
ja
int
push
repz
pop
inc
pushf
adc
push
sub
push
in
dec
pusha
and
sbb
adc
jl
jp
lahf
cs
ljmpw
xchg
hlt
ret
jnp
jle
jp
sbb
push
int3
push
jb
popf
jns
loop
repnz
mov
in
das
int
scas
stc
dec
arpl
push
dec
cli
repz
and
fldl
and
sti
fwait
ret
out
ret
fst
loop
mov
lds
mov
gs
imul
pop
inc
fiaddl
js
mov
pop
jnp
xchg
jae
push
popf
les
outsb
lock
test
push
aaa
nop
mov
scas
es
loope
lods
or
mov
and
stos
outsb
das
sub
mov
scas
pushf
add
inc
and
mov
adc
ret
clc
push
iret
adc
stos
mov
shrl
cld
jb,pt
pop
cmp
ljmp
mov
mov
in
mov
mov
push
jle
cmp
or
mov
push
or
mov
or
inc
in
jg
pop
shlb
leave
inc
in
pop
sub
pop
cs
and
test
sahf
inc
popa
fisttps
xchg
xchg
jno
sbb
fwait
mov
stos
cmp
fdivs
dec
xchg
xor
scas
add
push
jne
insl
jne
je
test
push
mov
lret
mov
xorl
dec
mov
xchg
mov
xchg
inc
pop
lds
data16
neg
shl
mov
xor
pop
loop
and
test
xchg
pop
insl
dec
mov
in
out
or
out
adc
jecxz
push
das
jp
pop
jne
mov
mov
mov
pushw
pop
xor
pop
pushf
fimull
into
jg
inc
popa
sub
jae
stc
arpl
xadd
shl
hlt
outsb
push
loopne
stc
mov
in
jp
jmp
jns
addr16
pop
fsubl
idiv
out
pop
and
mov
mov
dec
std
andb
mov
pop
enter
aam
aam
inc
hlt
sahf
mov
lcall
add
inc
pop
fwait
pop
xor
and
sbb
push
leave
sbb
sbb
daa
data16
fldl
loope
xchg
jne
pop
je
xor
push
aaa
push
mov
mov
and
call
and
xor
mov
lock
adc
push
sub
ljmp
push
pop
out
hlt
cmpsb
cmp
imul
lret
fidivs
pop
stos
pop
dec
xchg
xchg
xor
dec
fwait
sbb
loopne
into
movsl
mov
cmp
out
loope
rorb
or
push
xor
sbb
in
dec
jns
dec
test
xchg
pop
inc
popf
xchg
mov
pop
sub
add
out
xchg
mov
lods
cwtl
xchg
mov
xchg
in
out
dec
jge
and
imul
mov
adc
fsubs
in
addb
sahf
ja
jnp
les
mov
inc
cli
adc
and
cmc
shrl
fists
jns
mov
mov
sub
jg
mov
adc
fldenv
lds
xor
add
stos
cmp
aas
jns
cmpsb
mov
sbb
addb
ret
enter
lods
pop
inc
test
rolb
cmp
lods
andl
xchg
sarl
adc
or
loop
mov
cwtl
cmp
xor
add
aas
insb
cli
movb
loopne
adc
add
ret
hlt
sbb
insl
push
incb
cld
orl
lret
out
clts
mov
dec
jp
iret
cmp
and
lcall
testb
mov
ss
lds
movb
cmp
fnsave
imul
mov
sbb
ds
mov
pop
leave
dec
in
ds
int
sbb
pop
mov
in
cld
loope
xchg
mov
push
daa
sarl
test
fisubl
jl
mov
scas
mov
xchg
mov
cmp
mov
push
fimull
cs
inc
xor
jbe
sbb
jle
dec
fbld
push
lahf
add
lods
mov
adc
adc
xor
sbb
cmp
push
pop
jp
ja
xchg
shrl
fs
iret
cwtl
adc
xchg
pop
popa
int
mov
icebp
int
stos
popw
pslld
dec
mov
add
xchg
jnp
sbb
iret
lods
jae
push
std
inc
das
cmp
dec
stos
pop
lahf
push
je
out
sub
xchg
arpl
arpl
outsl
push
inc
stos
lods
xor
lret
mov
sbb
nop
js
in
mov
pop
iret
mov
push
mov
jae
out
jbe
fsubrs
mov
mov
pop
js
fnstcw
ss
repnz
push
cmp
xor
ljmp
push
test
mov
mov
and
cmp
fs
mov
dec
mov
sbb
or
cwtl
or
out
arpl
pusha
mov
push
push
in
fdiv
xor
cmpsb
pop
dec
inc
aad
xchg
aas
push
mov
push
mov
inc
inc
xor
rcrl
repz
stos
enter
aaa
in
sbb
andl
adc
hlt
ja
jns
pop
xchg
ljmp
xchg
mov
popa
pop
sbb
stos
dec
mov
push
in
mov
and
andb
xchg
in
leave
xlat
xor
test
test
sahf
pop
sbb
mov
mov
xor
addr16
aaa
add
sub
xor
cli
add
push
mov
mov
xlat
xor
mov
add
lcall
and
push
shrl
xlat
sti
adc
dec
push
test
dec
call
lret
push
in
test
fbld
jle
call
sub
leave
sti
xor
jge
adc
mov
xchg
inc
jnp
dec
lahf
fidivrs
scas
push
mov
adc
outsl
mov
lods
sub
repnz
pop
sub
je
jmp
dec
push
fbstp
mov
push
dec
mov
sbb
mov
mov
push
dec
push
cmp
cmp
in
aam
lcall
pop
mov
adc
mov
les
ffree
dec
movsl
test
stos
into
int3
add
lret
aaa
mov
mov
out
push
xchg
loopne
fwait
rcrb
outsb
cli
sub
or
rorb
inc
push
xor
sub
push
in
xchg
dec
pop
dec
cs
mov
clc
cmpsb
cmp
pop
push
rolb
testb
loop
subb
in
push
sarb
aad
inc
mov
ficomps
cmpsb
sbbl
push
dec
inc
inc
jb
das
scas
pop
leave
adc
loop
xchg
test
cwtl
dec
data16
stos
mov
mul
xor
frstor
xchg
or
outsb
cmp
into
aas
loopne
adc
dec
popa
in
lods
push
or
pop
roll
add
fstpt
inc
filds
lea
pusha
add
jp
jecxz
or
and
push
clc
arpl
ficompl
fisttpll
in
iret
test
cmp
inc
popf
pop
ljmp
pop
int
sbb
movsl
pop
push
push
pop
push
sub
dec
mov
xchg
ret
lea
sub
imul
sbb
cli
adc
jae
daa
mov
push
sbb
cmp
mov
rol
xor
xchg
push
adc
fucomi
mov
jno
pop
push
pop
push
cld
xor
ffree
dec
bound
xchg
mov
lret
jle
cmc
shlb
aad
jo
mov
ss
add
popa
cmp
mov
test
adc
leave
and
dec
cmc
mov
std
add
xchg
arpl
bound
xchg
push
int
jp
scas
outsl
mov
sbb
xchg
add
xor
loope
lea
lcall
dec
adc
sbb
dec
push
dec
push
inc
das
int
adc
push
idiv
cmp
rolb
dec
add
fcomps
pop
xor
int3
aas
sub
aad
outsl
repnz
push
in
add
push
xchg
cltd
sbb
pop
cmp
xchg
cld
ds
xor
inc
jbe
push
xor
and
pop
divl
stos
pop
mov
adc
aas
pop
mov
lock
imul
sbb
dec
fmull
shlb
mull
pop
cld
scas
ret
cmp
pop
pushf
mov
mov
andb
movsl
inc
dec
std
into
fstpt
dec
inc
jb
mov
sbb
jne
lahf
ljmp
mov
imulb
jg
jns
bound
fisttpll
or
jnp
inc
or
repz
pushf
icebp
insb
sub
loope
dec
mov
xchg
out
cmp
cmp
fiadds
add
pop
mov
adc
stc
inc
or
sahf
ss
push
jno
insb
jb
js
cmpsl
cmp
jecxz
push
mov
shlb
lret
outsl
clc
sub
push
mov
jge
sbb
and
ja
or
call
movsb
mov
mov
cld
sahf
inc
and
mov
lahf
dec
push
xchg
mov
mov
repz
movsl
inc
pop
push
scas
cmp
insb
add
clc
mov
addr16
mov
sbbl
xorb
mov
int
rolb
int
mov
xlat
sbbl
sub
lock
shlb
mov
and
dec
ljmp
sbbl
loope
cmp
xor
hlt
sbb
in
lea
inc
jmp
mov
push
in
inc
xchg
lahf
clc
rcrl
fstp
in
dec
add
or
pop
pop
adc
xchg
les
out
add
lret
cld
jbe
inc
out
test
in
add
jbe
cmpsb
push
leave
jns
imul
push
ret
loopne
aaa
les
dec
mov
iret
add
cmc
aad
fnstcw
jmp
cmpsl
ja
mov
scas
and
negb
mov
mov
mov
mov
mov
xor
shrl
aad
pop
dec
les
stos
inc
cmp
push
add
add
or
mov
cmpsb
sub
jb
sub
mov
mov
jo
sarl
push
loope
and
lret
int3
out
mov
cmpsl
and
mov
loop
movsl
cwtl
mov
add
jl
xor
jl
orb
aam
lea
xchg
sbb
outsl
fisubl
fidivl
imul
push
cwtl
fsubrl
scas
insb
or
hlt
scas
sub
jno
dec
cwtl
lret
push
cs
sahf
pop
xchg
xchg
xorps
daa
inc
adc
xor
out
inc
mov
fwait
das
cli
ret
je
dec
sets
fdivr
daa
dec
gs
fs
pop
and
push
out
cmc
mov
lahf
cwtl
sbb
xchg
xchg
add
mov
sbb
lock
ljmp
in
in
and
sbb
in
leave
in
inc
and
out
dec
rol
jg
push
sbb
inc
dec
inc
add
xor
into
ja
mov
mov
ret
push
icebp
xor
fisubs
mov
ss
fcomps
mov
loop
cmp
dec
cmc
xchg
cmpsb
mov
arpl
fwait
dec
bnd
movsb
outsl
xchg
inc
or
aas
xor
push
xor
daa
ja
nop
aam
or
mov
and
int3
and
test
add
leave
adc
cmp
movsl
mov
out
mov
leave
aad
int
test
mov
mov
jmp
jmp
and
inc
mov
push
mov
das
sub
jle
jp
push
adc
andb
inc
notb
repnz
and
mov
rcrl
loop
jecxz
xlat
mov
xchg
stc
jmp
hlt
cs
pop
jg
pop
xor
adc
out
mov
pop
pusha
int3
sbbl
das
dec
icebp
push
lcall
push
or
push
dec
adc
push
sahf
notl
mov
mov
cli
arpl
adc
ret
cmp
push
data16
sahf
push
mov
mov
mov
xor
enter
dec
js
iret
loope
insl
aam
xor
or
cwtl
pop
stc
lods
cwtl
mov
pop
push
cmpsl
fs
fucomp
mov
int3
and
lea
xchg
pop
xchg
ss
pop
push
lock
cli
call
mov
mov
negl
imul
pop
in
loop
stos
repz
push
insb
push
sbb
adc
jne
adc
mov
gs
mov
pop
adc
xchg
pop
add
cltd
or
mov
mov
stos
mov
sub
daa
in
jo
sbb
lahf
lods
hlt
sbbb
loopne
cmp
gs
dec
sbb
sub
pop
sbb
stos
dec
xor
push
jne
mov
sub
imul
les
cwtl
add
add
call
add
popa
hlt
out
int
sub
xchg
xor
daa
jae
sbb
mov
xlat
push
xor
cmp
std
push
sti
jp
cmp
out
xchg
cltd
xlat
add
pop
mov
stos
rcrl
pop
outsl
mov
arpl
add
cmpsb
jne
and
mov
push
mov
mov
std
lret
nop
sbb
mov
popa
and
xor
mov
cmp
fisubs
sbb
or
dec
jbe
aad
cmpsl
cmp
and
pop
sbb
push
lods
mov
pop
mov
add
mov
mov
sub
mov
inc
outsb
mov
orb
pop
mov
dec
mov
sub
sub
and
jbe
lret
sub
test
push
and
cltd
sti
xor
popa
sub
gs
fs
inc
hlt
ja
fsubrp
std
xchg
fiaddl
cmp
imul
mov
pop
in
jno
inc
cld
xchg
int3
mov
add
addl
lods
pop
xor
fs
pop
dec
and
leave
loope
inc
enter
dec
cld
shll
sub
inc
ret
out
sbb
xchg
leave
mov
push
lret
add
bound
dec
aas
jbe
add
or
adc
push
or
mov
mov
loopne
push
add
push
jne
pcmpgtb
jns
sbb
fnstcw
jmp
in
sub
xchg
push
xor
sub
adc
sbb
cmp
push
push
adc
dec
loopne
adc
cmp
sbb
movsl
jmp
add
dec
xlat
push
dec
sti
test
mov
lods
loope
or
test
insb
pop
jo
xchg
and
cmp
mov
push
inc
xor
dec
pop
jae
mov
or
shrl
int3
lods
add
add
ss
fwait
mov
stc
jg
sbb
cltd
inc
fmul
and
sub
xlat
adc
jbe
dec
mov
pop
mov
icebp
shr
sbb
or
mov
adc
sub
inc
out
and
push
sbb
insb
dec
sub
fdivp
fsubrs
xlat
aad
add
fwait
int3
push
and
jne
mov
cmp
cwtl
dec
mov
je
mov
mov
xchg
add
fidivs
shll
pop
xor
pop
loope
dec
ja
add
jns
leave
sub
xchg
sbb
xor
pop
jbe
mov
pop
dec
dec
divb
cmp
ja
and
dec
popf
dec
test
jg
into
and
loop
movsb
push
pusha
aad
mov
cmp
jbe
mov
dec
out
ret
pop
jmp
jne
lea
rcrb
adc
movsl
dec
out
test
xchg
insb
aas
div
insl
jo
loope
sbb
push
nop
add
xor
mov
mov
out
neg
scas
jmp
decl
es
mov
xor
jp
in
fiadds
add
xchg
or
or
out
inc
push
pop
jb,pt
mov
sub
ja
push
jmp
mov
mov
out
push
out
sub
or
adc
outsb
neg
jbe
xor
jecxz
xchg
gs
and
cli
sub
jle
stc
test
das
adc
push
sub
stc
push
shll
dec
xorl
add
fidivrs
sarb
ds
cs
xchg
popa
xchg
adc
lock
ja
pop
mov
daa
mov
repnz
mov
mov
clc
xchg
fstps
xchg
and
xor
xchg
js
std
js
mov
loopne
in
sbb
pop
cmp
popf
pop
dec
add
das
mov
or
test
xchg
scas
pop
lret
xchg
xchg
sbb
roll
popa
mov
sbb
mov
bnd
push
sbb
cltd
aad
cmp
out
inc
icebp
lahf
and
loop
popf
fbld
out
mov
mov
repz
call
cli
xchg
sub
push
addb
stos
pop
inc
cmp
out
mov
rclb
repz
loop
movsl
mov
and
mov
sahf
and
and
aaa
add
push
loop
mov
push
shld
mov
into
push
jno
sbb
popa
adc
cwtl
mov
xchg
lahf
inc
xchg
fsubl
stc
mov
xchg
xor
sbb
xor
sahf
pusha
insl
insb
mov
aas
out
jg
lods
pop
add
sub
insl
add
rcl
movsl
mov
jno
sti
mov
or
add
fcompl
call
push
pop
push
jnp
xor
xor
lret
dec
lds
mov
mov
pop
push
fsubrl
lahf
jge
cld
icebp
xor
cltd
mov
xor
xor
fsubl
fistps
das
test
out
jecxz
gs
push
push
adcb
xor
add
cmc
imul
insb
xchg
imul
xor
cld
dec
pop
jg
cmp
jo
stos
jmp
cmp
popa
add
hlt
pop
dec
and
mov
pop
enter
add
dec
jl
xchg
lods
aam
test
add
pusha
push
pop
push
push
ljmp
jb
int3
pop
jl
lds
pop
in
test
or
fldl
xchg
loop
jo
inc
arpl
push
adc
sbb
mov
out
or
xor
in
movsl
push
push
nop
adc
loope
lods
mov
dec
int
testb
sti
push
cmp
push
out
jmp
sub
rcll
int3
pop
cmpsb
outsb
in
add
mov
push
call
iret
cwtl
or
outsl
bound
ss
push
pop
mov
dec
mov
cld
rol
inc
xor
push
jne
mov
dec
rol
loopne
mov
push
mov
shrb
lahf
cltd
ret
pop
mov
aaa
les
mov
je
xchg
outsb
add
cmp
popa
loop
in
lret
xchg
iret
push
or
cmp
int
cmp
pop
inc
push
fistpl
dec
push
outsb
push
cli
andl
push
nop
push
cwtl
push
in
js
scas
inc
jp
inc
mov
push
xlat
movsl
jl
pop
loop
fldenv
out
ficompl
mov
movsl
in
lods
stos
sahf
ljmp
mov
js
lea
cs
sub
fsubrl
jg
fwait
add
clc
inc
cs
mov
dec
push
arpl
pop
fwait
les
sbb
dec
xlat
pop
cwtl
test
ret
push
xchg
jns
mov
jae
mov
dec
jmp
and
or
adc
mov
test
adc
rclb
cs
push
pop
push
lcall
mov
mov
jns
xchg
repnz
push
sub
lea
lods
sub
mov
mov
imul
les
xchg
sbb
jo
push
cmpsl
jle
push
add
mov
leave
mov
mov
mov
fwait
dec
dec
fwait
dec
stos
pop
mov
cmpsl
inc
add
push
int3
inc
pop
add
std
xor
sub
lcall
pop
mov
xor
mov
xchg
jmp
or
inc
pop
movsb
aas
mov
xor
push
shlb
jmp
adc
rcrb
frstor
ss
insb
jbe
lods
cmp
imul
jnp
in
je
add
sbb
jbe
sbb
imul
xchg
loope
ret
out
mov
pop
sbb
popa
ljmp
xchg
push
dec
sbb
ret
jne
loop
call
pop
jmp
inc
or
ret
test
daa
mov
mov
add
inc
cmp
repz
adc
arpl
dec
mov
fimull
mov
dec
inc
xor
add
inc
adc
int3
int3
imul
lcall
add
adc
lcall
adc
lret
fisttpl
adc
mov
jge
mov
pop
cmp
mov
popa
dec
addb
ljmp
aam
mov
ss
jmp
mov
push
inc
int3
in
js
or
dec
out
pop
mov
sbb
and
mov
loopne
mov
jns
adc
cmp
ja
xor
dec
jecxz
jnp
rcll
dec
sti
sahf
mov
inc
mov
mov
inc
icebp
fnstenv
pusha
test
mov
jmp
call
subb
mov
xchg
aam
or
xchg
or
cli
fimuls
cmp
test
repnz
pop
sbb
pop
mov
repz
ret
lret
and
mov
adc
and
jg
sbb
xlat
and
push
out
ss
aas
shll
out
inc
jmp
fs
mov
mov
gs
and
cmp
mov
push
pop
nop
movsb
aaa
or
out
jbe
dec
jns
inc
inc
xor
cmp
mov
stos
and
jb
sub
popa
daa
and
mov
mov
dec
cmp
popa
ror
addr16
jmp
jb
cmp
fwait
add
add
in
leave
inc
fldt
mov
jecxz
jecxz
push
inc
ftst
loope
loope
in
add
lods
outsb
loope
jmp
imul
repnz
mov
mov
xchg
jmp
jge
dec
enter
bound
adc
cli
dec
inc
lods
shlb
push
fnstcw
pushf
mov
scas
mov
mov
out
in
dec
inc
or
pop
jp
push
jmp
daa
mov
add
and
loopne
sbb
or
out
dec
push
xchg
out
jge
loope
in
addr16
lods
push
push
test
sbb
into
mov
sti
dec
sbb
in
push
jmp
mov
xchg
out
pop
mov
cltd
pushl
out
sbbb
bound
jne
xor
jl
pop
or
mov
lret
mov
mov
cli
pop
cmc
xor
pop
movsb
xchg
popf
out
jle
mov
fs
cltd
push
mov
and
add
inc
dec
jae
daa
mov
jmp
in
hlt
sbb
arpl
fiadds
out
rcll
addr16
push
or
insb
hlt
lret
push
sub
jnp
xor
mov
push
push
cmp
cltd
add
xlat
adc
nop
fwait
lods
fsubrl
xchg
sahf
add
scas
sbb
lret
sbb
es
add
push
cmc
ret
stc
and
jg
lock
xchg
std
pop
xor
je
add
lret
mov
mov
mov
xorb
int3
rorl
xlat
jnp
sub
lret
shl
data16
add
lahf
divps
lcall
mov
fsubrs
mov
pop
repz
icebp
mov
dec
pushf
pop
pop
adc
out
jmp
lods
xchg
mov
mov
add
jp
cwtl
js
sub
test
sub
pop
sbb
jg
cmp
push
xchg
xor
fists
stos
jo
xchg
icebp
dec
cltd
sbb
add
test
aaa
aad
inc
push
imul
pop
hlt
in
imul
shlb
cli
roll
xor
xchg
xor
lret
jl
sbb
adc
out
dec
test
lods
or
cs
cmp
or
push
pop
outsb
add
arpl
jl
notb
je
jle
into
mov
cmp
or
cwtl
cltd
imul
fdivs
pop
pop
jle
loope
std
jg
mov
mov
imul
cs
lcall
movsl
fistl
sbb
xor
popa
aad
sub
ror
mov
mov
dec
push
pop
jnp
pop
adc
pop
jge
mov
test
in
shlb
movsb
loope
mov
fcomps
mov
inc
in
std
mov
mov
negb
aas
xchg
mov
push
dec
mov
sbb
leave
mov
aaa
fsubl
fsubrl
fcomp
xchg
inc
shl
jo
aas
jge
pop
xchg
jp
or
xorb
data16
jno
pusha
popa
imul
mov
adc
sub
fstpt
xlat
inc
js
xor
fwait
or
jns
imul
mov
push
pop
xlat
mov
and
clc
jmp
push
adcb
in
xchg
enter
jbe
insl
pop
cmp
jns
mov
test
sub
in
leave
je
mov
xor
movsb
fnstsw
test
fwait
inc
xor
adc
cmpl
dec
mov
dec
xchg
push
fisttps
icebp
mov
ret
into
ja
jbe
sbb
xor
notl
loopne
test
mov
or
cld
jne
popa
xor
int
andl
and
push
jo
mov
mov
int
pop
xchg
fists
pop
nop
push
sahf
shl
jnp
inc
cs
in
mov
xchg
and
aas
push
mov
and
lea
push
xchg
jne
adc
adc
test
ds
fneni(8087
addr16
ja
cmp
je
test
repnz
das
mov
sub
xchg
sahf
push
hlt
sbb
in
and
dec
pop
or
loopne
cmc
scas
or
loop
aam
outsb
xchg
outsl
fwait
jae
push
push
sbb
adc
into
test
mov
or
inc
ret
add
bound
sbb
in
popa
pop
xchg
add
jae
adc
cmp
arpl
rol
xchg
neg
lahf
test
jbe
or
xchg
lock
loopne
sbb
jl
pop
cmpsb
sbb
add
xor
inc
push
orl
mov
jmp
pop
xor
push
push
ja
into
mov
mov
mov
mov
lret
das
fsubrs
jbe
add
lock
icebp
inc
pop
leave
or
sub
lret
pop
insl
mov
xor
fwait
lods
dec
jnp
push
mov
vdivss
dec
loop
jb
enter
or
mov
pop
inc
jns
cmp
out
xor
sub
add
sarb
add
aad
loopne
ficoms
xchg
jae
flds
cmc
mov
and
aas
mov
fidivl
mov
add
cltd
mov
sbb
mov
mov
sub
test
xchg
stos
int
jb
cli
test
andl
dec
xlat
fdivr
jne
mov
insb
arpl
xchg
cmpsl
shlb
test
test
sub
xchg
arpl
imul
cmpsb
mov
imul
sbb
in
mov
xchg
and
push
iret
adc
dec
xchg
add
stc
push
outsl
enter
push
icebp
shr
sbb
jb
and
shll
stos
subl
or
loopne
das
xchg
and
and
mov
or
out
pop
scas
int
mov
pusha
dec
imul
in
add
sub
in
fwait
in
add
pop
push
sub
sub
pop
mov
inc
sbb
out
mov
mov
out
mov
inc
xchg
inc
pop
pushf
stos
sbb
sbb
cmp
daa
push
xor
int3
imul
sub
arpl
inc
xor
jmp
inc
add
pop
adc
cli
push
iret
cmp
dec
pop
jns
incb
sub
dec
xor
jb
out
inc
mov
dec
pop
dec
out
jmp
jmp
cmp
clc
mov
and
cmp
out
movsb
imul
pop
insl
enter
mov
pusha
adc
push
mov
jle
xor
push
shll
adc
jo
pop
addr16
fldcw
dec
scas
add
pushf
gs
in
push
and
dec
loopne
adc
mov
and
add
sbb
movsl
jns
xor
xchg
sti
fbld
mov
out
mov
sbb
sti
stos
cmp
andb
cmp
mov
mov
aam
std
xor
mov
js
sub
roll
loopne
inc
lds
jne
or
addb
push
sbb
push
pusha
call
mov
dec
jg
int
lds
sarl
add
leave
push
adc
push
add
out
insl
inc
or
sbb
push
cmp
sbb
xchg
test
not
jbe
xchg
jmp
push
insl
adc
ficompl
mov
pop
xor
sbb
jmp
or
cwtl
push
mov
ret
fcoml
push
cwtl
sbb
ja
sub
or
xchg
call
push
inc
stc
movsl
pop
mov
stos
add
xchg
mov
mov
push
ret
dec
and
in
dec
popf
pop
subl
mov
mov
jg
out
jmp
adc
mov
outsl
dec
xor
adc
mov
mov
mov
sub
ret
mov
icebp
addr16
xchg
jns
les
add
inc
mov
icebp
enter
movl
imul
push
jne
or
mov
pop
lods
add
addr16
and
sbb
inc
push
filds
and
lahf
add
inc
lods
xchg
jno
pop
fmuls
xchg
in
das
cmp
push
adc
push
xchg
adc
and
jnp
loope
push
and
push
push
jno
iret
cmp
inc
dec
pop
clc
rcll
jg
shll
jecxz
cmp
xchg
push
pop
je
ljmp
fdivs
sub
fsubl
cltd
mov
icebp
mov
xchg
xor
arpl
lock
xor
in
js
xchg
dec
jne
jo
xor
insb
add
andb
int
and
dec
imul
enter
lahf
cmc
out
add
adc
pop
dec
outsl
mov
punpcklwd
xchg
pop
and
or
inc
mov
aaa
sahf
clc
jmp
or
xchg
or
cmp
dec
pop
imul
sbb
jno
cs
aaa
pop
sub
add
jae
lock
rcrb
cmp
dec
vmwrite
ljmp
ss
lods
lret
push
pusha
xor
out
cmp
outsl
mov
pop
mov
stos
or
test
adc
adc
pop
cli
pop
adc
stos
jg
xchg
pop
jns
loop
mov
cmp
pop
mov
inc
fisttpll
je
push
aad
orl
movsb
sub
jle
mov
inc
sub
pop
pop
inc
adc
and
push
testl
inc
sahf
imul
push
imul
push
int
and
xchg
mov
gs
insb
cli
out
lods
cltd
loopne
je
sbb
ss
push
mov
out
mov
and
inc
into
dec
cmc
inc
sbb
stos
mov
fists
in
repnz
mov
pusha
ds
lret
test
push
sub
push
adc
push
and
mov
or
jmp
cmpsl
orl
leave
add
ja
push
test
inc
nop
into
incb
push
icebp
jae
les
imul
mov
int3
jmp
add
xchg
xchg
adc
repz
pop
xor
mov
dec
sub
jl
ljmp
pushw
fld
sbb
sub
cmpsl
les
andl
int3
test
lds
stc
cmp
out
pop
push
mov
jnp
in
pop
cmp
jmp
or
testl
orb
imul
lahf
testb
scas
dec
test
ds
push
decb
fwait
popf
cmpsl
cmp
loope
mov
hlt
outsb
repnz
int3
ret
punpckhwd
movsl
shll
dec
adc
cli
sbbb
andl
jecxz
rcll
xchg
and
adc
push
ja
jb
lea
dec
pop
mov
test
sbb
cmc
sbb
pop
and
or
or
addr16
inc
call
mov
fs
mov
into
push
stc
xchg
fisttps
dec
mov
sbb
mov
mov
fisubl
sbb
lods
pop
dec
call
cmp
enter
imul
mov
out
push
cmp
push
sub
repz
outsl
mov
xchg
lret
xchg
cmp
cmp
cmp
inc
jmp
stc
cmp
jae
mov
push
xchg
rolb
xlat
mov
adc
adc
or
and
nop
adc
mov
std
es
ret
stc
mov
loope
add
adc
in
jb
dec
data16
inc
cs
and
test
arpl
add
fsubs
jmp
popf
mov
add
inc
aas
xchg
push
and
mov
and
jns
aad
sbb
dec
push
cmc
outsb
int3
lods
cltd
pushf
push
stos
pop
xchg
or
loop
addr16
mov
aad
xchg
aad
iret
iret
out
mov
ret
xor
push
pop
xchg
mov
ljmp
jecxz
inc
cmp
call
scas
ret
jbe
cltd
imul
pop
or
aaa
dec
jp
push
out
fists
push
cmp
adc
pop
pop
mov
outsl
jns
popf
jno
jo
aas
dec
fistpl
mov
bound
cmp
pop
sti
or
sub
jnp
seta
dec
loop
mov
aam
add
lock
dec
dec
arpl
xchg
cmp
sbb
sub
addr16
inc
or
push
rorb
orb
xorb
rclb
add
cld
hlt
popa
pop
push
nop
ret
or
pop
xor
dec
in
stos
lds
xor
fwait
mov
cmp
mov
xlat
mov
jge
andl
sub
mov
sbb
sarl
push
scas
xchg
xchg
sahf
sub
mov
loopne
cmp
or
add
xor
out
imul
jbe
cmp
mov
outsb
ja
fistl
mov
cmp
sahf
out
shrl
dec
clc
sub
mov
mov
jb
in
or
mov
dec
sbb
loop
loope
mov
jne
lods
dec
std
roll
stos
shlb
out
and
pushf
pusha
mov
nop
dec
movsb
add
das
pop
int3
movsl
and
loopne
mov
jnp
mov
push
and
xchg
adc
je
aas
outsb
sub
adc
push
xorb
mov
shll
mov
jb
cmp
ja
dec
fimull
inc
das
shlb
mov
or
clc
and
cld
gs
out
cmpsl
add
or
pop
lcall
test
arpl
icebp
lcall
cltd
sbb
jb
das
lock
cmp
dec
pop
push
cmp
jno
push
out
xlat
pop
dec
inc
pop
inc
and
mov
cld
dec
in
loop
insl
popf
sub
jmp
dec
scas
inc
mov
loopne
sub
stos
inc
adc
inc
out
mov
inc
cmpl
stos
or
adc
popf
pop
inc
xor
push
outsb
mov
adc
stos
cld
dec
lds
mov
fstl
enter
push
sbb
add
xchg
sahf
gs
sbb
push
xchg
xchg
sti
cwtl
sbb
fdivr
fcmovnu
rolb
mov
jo
pop
lahf
jb
mov
mov
xchg
js
cltd
std
sbb
lods
push
aam
mov
xchg
int
mov
jmp
dec
aam
gs
adcb
xor
loop
lock
dec
fildll
dec
fmulp
xor
leave
vmovupd
imul
in
jnp,pt
jge
ret
mov
popa
mov
outsb
mov
sti
pop
dec
imul
cmpsb
aam
pop
test
inc
test
jl
insb
xchg
push
lahf
adc
xlat
js
mov
xchg
push
jmp
rcrl
bound
ljmp
mov
cmpsb
fsubp
push
mov
mov
call
mov
rcr
nop
js
xor
pop
fdivrl
xor
ljmp
orl
pop
or
xchg
xchg
inc
cmp
push
add
mov
mov
xlat
iret
adc
lret
or
into
mov
popf
mov
jbe
jge
lahf
outsb
sbb
mov
pop
pop
cmpl
aaa
lret
pop
or
scas
xchg
cmp
push
xor
imul
outsl
dec
roll
adc
ljmp
lcall
xorb
rolb
in
adc
popf
inc
jns
add
push
enter
mov
out
and
mov
into
mov
or
and
sbb
dec
cmp
dec
loope
fcompl
and
iret
or
scas
fcmovb
je
dec
mov
movsb
mov
sub
arpl
pop
loope
jo
dec
push
jmp
xor
in
xchg
test
in
xchg
pop
dec
loopne
push
popa
jo
int
decl
sub
popf
stos
int3
movb
sbb
adc
pop
sbb
std
aad
jmp
lret
mov
call
cmpl
push
sub
push
pop
inc
mov
xchg
adc
sub
leave
repz
mov
mov
inc
bound
add
xchg
xchg
addl
incb
xchg
sub
mov
rclb
pushf
sbb
sbb
push
mov
xchg
lock
cmp
jmp
repz
rorl
shlb
movsb
inc
loop
test
pop
insl
add
jb
in
inc
push
push
out
shll
mov
jne
gs
jg
push
addr16
xor
inc
popa
xchg
and
sub
out
jge
push
mov
nop
aaa
into
fstps
jnp
sahf
or
es
inc
fs
push
mov
push
call
cmp
or
shll
inc
jnp
mov
icebp
or
cmp
and
mov
xlat
xchg
mov
adc
lods
push
mov
leave
mov
popa
mov
movsl
push
out
mov
push
mov
jge
iret
inc
push
xchg
hlt
pop
cmp
inc
mov
cmp
adc
xchg
sbb
std
nop
lds
clc
pop
lea
and
pop
ret
dec
jo
test
pop
stos
outsl
xchg
xchg
add
push
xchg
adc
mov
fcompl
pop
repnz
fwait
das
push
in
fcomps
out
mov
mov
cs
mov
push
and
imul
mulb
fdivs
aaa
ljmp
call
addr16
push
jne
in
jno
cmp
push
je
mov
repnz
sbb
test
int3
jle
mov
mov
addb
test
mov
in
pop
xchg
sub
pop
mov
inc
dec
fildll
popa
std
fimuls
xchg
int
mov
idiv
sahf
stos
mov
stc
lea
mov
roll
nop
mov
inc
int3
scas
jbe
add
lcall
fcoms
cs
or
icebp
xor
orl
aas
rorl
test
and
int3
or
pop
int
outsl
sbb
xchg
rorl
mov
mov
es
scas
push
scas
add
xchg
test
fwait
add
push
testl
dec
push
mov
add
push
repnz
cltd
cli
lret
jmp
stos
rolb
cmpsl
push
or
pop
inc
lods
je
idivb
dec
jbe
cmp
test
into
fisubrl
ja
lds
mov
cmp
jle
roll
mov
popa
mov
mov
mov
dec
adc
mov
cmp
jne
jnp
dec
out
aad
jg
or
mov
adc
pop
and
je
out
xor
sahf
sbb
decb
cmp
out
hlt
je
test
pop
aas
mov
jnp
and
adc
mov
cmpsl
rcll
adc
jno
lods
jns
cli
or
inc
cs
addr16
pop
inc
jmp
inc
jns
rcrb
ja
inc
inc
insl
ret
sahf
xchg
fsubrs
lea
sbb
sub
loope
sbb
fstl
cmp
call
pop
ds
push
mov
mov
pop
jp
dec
hlt
inc
ja
cmpsb
test
ret
clc
mov
in
clc
popf
fdivl
jl
jb
loopne
loope
add
mulb
sbb
out
jbe
cmp
into
pop
lods
add
mov
mov
xchg
cmp
fistps
dec
push
outsl
cltd
jo
mov
and
mov
insl
xor
pop
jo
std
jo
out
stos
pop
xor
out
cwtl
dec
stc
xor
pop
test
mov
jae
adc
sbb
in
push
adc
in
inc
xsha1
cmpsb
dec
pop
shll
popf
out
mov
movsl
adc
shll
or
adc
aaa
push
adc
push
test
pop
dec
push
cld
loop
xchg
adc
adc
xchg
sbb
arpl
stc
jb
mov
or
loop
loop
leave
mov
xor
xor
and
xchg
push
into
sahf
lahf
loop
jno
adc
lock
iret
loopne
mov
fldt
fidivl
ds
sub
test
mov
in
dec
and
icebp
cld
nop
cmpsb
or
inc
pop
sbb
push
in
push
movsb
or
sub
aam
push
fcoms
xchg
fidivl
call
lods
jbe
sub
popf
cld
push
push
mov
jmp
fldl
int3
mov
mov
push
je
add
fsubs
cmpsb
lret
and
and
sti
add
pop
jle
sbb
inc
or
loope
imul
cld
inc
adc
dec
or
inc
jp
shlb
sbb
xchg
mov
jg
cmpsl
cwtl
mov
xor
push
xlat
das
int
adc
adc
mov
xor
stos
stc
shrl
lret
test
andl
dec
icebp
popf
dec
jp
sbb
push
movsl
loopnew
dec
jg
pop
hlt
jno
fistpl
mov
sub
cli
nop
sbb
push
xchg
hlt
fldt
pop
cs
stos
push
cmpsb
pop
jbe
rcrb
dec
pop
popf
adc
mov
adc
leave
enter
adc
je
loope
pop
xchg
xchg
scas
lret
and
push
or
dec
loope
cmpsl
gs
dec
mov
add
pop
or
vfmsub132ss
mov
cvtdq2ps
mov
fwait
jne
fs
outsl
sbb
lahf
jno
in
sbb
cs
jl
pop
mov
test
lret
mov
inc
inc
outsb
jae
pop
jb
lahf
and
mov
ljmp
xchg
dec
movsl
lcall
stos
cmp
sub
fdivr
mov
fwait
dec
dec
cmp
sahf
lock
enter
add
in
inc
mov
xor
icebp
jns
lods
negl
outsb
adc
pop
out
stc
and
imul
std
aam
fdivrl
jne
sbb
int3
xchg
xchg
pop
pop
push
pusha
jbe
sbb
push
loope
add
push
imul
push
mov
in
add
in
and
add
mov
es
xor
jo
setns
dec
pop
dec
add
xlat
lret
cld
mov
repnz
mov
mov
mov
cld
mov
lock
cmpsb
jbe
mov
push
xchg
xchg
xchg
add
aam
arpl
sbb
xorb
or
adc
lcall
into
push
fisubrs
movsl
mov
add
jo
dec
scas
dec
jp
push
shl
dec
test
and
or
and
movsl
push
and
push
std
les
stos
loop
mov
jno
jnp
push
push
insl
in
aaa
and
nop
xor
sbb
loope
out
cmp
xor
call
sahf
std
iret
mov
xor
loope
jge
test
outsl
loope
cltd
mov
test
xor
cwtl
mov
inc
and
xor
inc
mov
jns
inc
push
push
popf
cmpl
pop
push
loopne
imul
addr16
fcomp
shr
into
push
inc
cltd
or
or
jb
jno
fisttpll
inc
leave
and
xchg
cld
pop
test
sbb
xchg
lret
xchg
mov
xor
push
xchg
int3
xchg
cltd
push
or
movsb
dec
lods
mov
arpl
xor
fwait
jb
test
roll
add
and
inc
xlat
or
ds
les
loop
lods
mov
cmp
lds
dec
push
ss
jp
int3
jmp
stos
out
xor
les
aam
js
jns
add
iret
inc
loop
mov
test
mov
popa
ljmp
int3
push
cmp
fwait
icebp
add
jno
or
push
sub
cmp
dec
and
test
add
xchg
shl
mov
cmp
cmp
stos
push
adc
mov
mov
mov
mov
cltd
inc
pop
pop
ds
add
add
inc
nop
lds
xchg
inc
jnp
mov
stos
push
push
xorb
mov
cs
bound
mov
mov
lahf
test
leave
call
xchg
dec
adc
andl
arpl
lcall
loopne
pop
jge
pop
jle
mov
pop
loopne
dec
inc
lods
aad
cmp
into
or
movsl
popf
dec
and
push
enter
movsb
dec
repnz
loope
inc
mov
lods
movsl
sahf
push
inc
or
hlt
cmp
jo
adc
fistl
outsb
and
lahf
subl
in
pop
lods
mov
shlb
push
fidivrl
xor
lret
mov
rcr
movb
ds
dec
xor
xorb
lock
jle
out
lock
pop
ja
xchg
add
int3
fisttps
or
adc
add
mov
xorl
jb
mov
std
addr16
sub
mov
jns
shl
or
jge
jl
aad
pop
mov
repnz
push
jle
shl
data16
iret
xchg
pusha
jno
divb
dec
or
pop
leave
add
pop
pop
mov
les
push
shrl
or
pop
sub
aad
cld
mov
ficoml
sub
sbb
daa
or
imul
mov
gs
dec
push
in
jg
ror
xchg
repz
cwtl
mov
inc
ss
dec
aad
jl
sarl
jg
mov
add
cmp
and
xchg
out
mov
mov
ds
push
cmpsw
out
test
std
dec
loop
pop
xor
inc
enter
sbb
in
roll
int3
outsl
pop
loope
mov
mov
xor
or
inc
jo
icebp
cmp
insl
cli
lret
cmpsb
in
push
mov
push
loopne
mov
pop
out
sub
jle
push
mov
mov
jns
or
xlat
ror
cmp
push
fbld
clc
and
sub
lret
cld
sub
ret
addr16
xchg
xor
pusha
bound
pusha
jae
repnz
mov
sub
jo
cmp
xchg
add
cmpsb
add
jecxz
loope
stc
fs
test
mov
in
sub
fwait
push
xorb
sub
call
iret
fldcw
bound
pop
or
sbb
loop
shlb
aad
test
push
lret
xchg
or
popf
outsb
mov
daa
lcall
sub
sbb
gs
es
mov
push
adc
xor
scas
cmp
fildll
jmp
stos
xchg
mov
test
in
xlat
pushf
lahf
mov
lahf
xchg
or
dec
test
out
sbb
enter
jmp
fisttpl
xor
mov
repz
dec
jns
jmp
test
dec
cld
aad
dec
cmc
das
ror
add
ja
pusha
xor
mov
push
dec
mov
repz
dec
inc
mov
les
push
mov
mov
mov
pop
xor
xor
push
mov
into
add
push
inc
roll
test
inc
xor
cmp
push
xchg
dec
sbb
mov
push
popa
fwait
mov
jp
mov
arpl
cwtl
xchg
popa
cwtl
dec
jg
jmp
or
ret
sbb
xchg
out
sub
mov
mov
das
or
int3
jne
sti
mov
lods
es
movb
hlt
cmp
mov
xor
lock
lock
jnp
das
xchg
cmp
mov
pop
inc
xor
fs
sti
add
jg
shrl
orl
sbb
sub
push
xchg
push
out
jmp
or
pop
sbb
insb
cli
sub
sub
cmp
dec
pop
mov
pop
roll
cmp
into
and
pop
dec
xorb
adc
scas
mov
push
push
xchg
scas
add
mov
ja
outsb
cmpsl
dec
fwait
leave
aas
pop
je
fistpll
xor
xchg
out
lcall
lods
hlt
jb
arpl
js
ss
xor
pop
push
xor
jmp
pop
stc
jecxz
pop
ror
or
mov
mov
loopne
mov
insb
mov
adc
mov
mov
dec
nop
add
add
xchg
jle
push
in
je
xor
xchg
cltd
mov
out
call
outsb
cmp
fldt
jae
fwait
out
dec
fistl
mov
lcall
fnsave
je
or
jbe
inc
std
lods
repnz
push
mov
jge
movsl
adc
mov
inc
mov
push
out
ss
cmpsb
jo
cs
cmc
pop
nop
sbb
dec
mov
jb
xor
inc
push
ja
xchg
pusha
mov
dec
mov
inc
not
test
push
ja
mov
push
push
in
sub
fs
icebp
popl
xchg
test
aas
pop
ret
push
mov
outsl
andb
sarl
orb
bound
xchg
pop
or
popf
iret
jp
lret
cli
roll
mov
xor
push
jle
add
lahf
jp
mov
lods
shl
xchg
cmp
lods
movsb
rcll
in
lahf
cmpsb
pop
adc
cmp
jnp
push
mov
cltd
negl
in
and
aam
lods
cmpsl
inc
mov
cwtl
les
jmp
mov
jp
outsb
jl
bound
sub
adc
mov
mov
scas
into
adc
loopne
cmpsb
aas
push
inc
ds
adc
fildll
sbb
imul
mov
scas
test
idivl
inc
aas
scas
push
fists
rcrw
daa
mov
insl
or
mov
xchg
out
test
or
in
sarl
sbb
lock
ljmp
inc
cld
pop
cmp
sbb
scas
mov
xor
mov
sub
shl
push
jbe
clc
movsb
inc
and
xchg
xchg
in
sbbb
adc
mov
mov
testl
lcall
and
mov
lret
nop
sub
sub
and
out
or
xor
and
inc
insb
or
jecxz
daa
jge
dec
jb
mov
outsb
mov
inc
data16
xlat
and
add
jb
test
pop
lahf
ret
or
xchg
mov
insl
cmc
add
call
pop
ficomps
adc
add
cltd
cltd
sar
jmp
cltd
or
or
pop
das
mov
cs
scas
imul
cmp
les
sbb
cmp
mov
test
inc
jge
pusha
test
hlt
dec
aam
add
lcall
mov
cmp
repnz
lods
cld
incb
fstps
nop
sbb
pop
xchg
jp
insb
jae
xor
and
push
jbe
or
adc
fwait
insb
add
repnz
lods
cltd
in
dec
mov
stos
cs
push
lahf
xorb
or
jae
shrb
or
jne
lahf
mov
jl
mov
lds
and
stos
adc
mov
fs
xchg
jns
aad
adc
cmp
and
jg
scas
loope
sbb
and
mov
test
adc
cmp
leave
loop
sbb
ljmp
pop
in
mov
outsl
dec
out
sub
jle
int
addb
lds
pop
stos
lret
testl
push
sbb
cmpsl
lods
jg
sub
dec
stc
cs
xor
and
mov
stc
mov
mov
dec
std
scas
clc
jecxz
jne
jmp
push
mov
shll
dec
in
inc
jecxz
roll
imul
or
divb
shlb
xlat
mov
lds
and
push
fisubrs
jp
jb
lods
xlat
or
fdivr
xor
push
mov
test
cmp
dec
icebp
sub
ror
std
loop
add
mov
push
jge
jne
out
cmp
and
pop
pop
pop
inc
pop
and
mov
xchg
pop
nop
imul
cs
push
pop
insl
xor
mov
dec
jmp
dec
test
aaa
aas
ja
shll
enter
lret
or
cld
push
jno
js
jmp
adc
mov
ret
pop
shlb
sbb
inc
sbb
push
movsl
shll
add
fs
test
mov
cs
jmp
push
stc
sti
loope
jg
lock
out
aas
mov
xchg
es
jmp
mov
jbe
loope
mov
psrlw
xor
nop
inc
call
aaa
in
cmp
das
addr16
push
addl
sub
mov
aad
cmpsb
pop
push
inc
xor
ss
test
cmp
adc
iret
and
scas
scas
stos
sbb
js
hlt
das
adc
out
and
pop
daa
sbb
mov
sub
jne
outsb
popf
pusha
dec
cmc
popa
movsb
lock
iret
and
loop
sub
add
arpl
mov
or
femms
ss
je
xor
mov
pop
jp
ljmp
dec
jno
xchg
ficoml
int
icebp
insb
mov
ss
cli
sbb
incb
cmp
hlt
sbb
movsb
popf
lods
das
jl
push
sub
cmp
xor
arpl
movsb
xchg
jns
sbb
out
in
push
xor
mov
xchg
push
mov
or
das
repz
xor
out
jb
outsl
ret
cmp
outsl
push
push
add
mov
test
or
divl
push
loop
rclb
mov
mov
movsl
pushf
sti
push
call
repz
test
fidivs
test
ja
test
inc
popf
stos
divps
lods
fldl
fstpl
imull
inc
push
inc
and
bound
xor
or
jo
fildll
and
mulb
xchg
mov
jp
fcmovb
lods
jae
pop
xchg
packsswb
lahf
xor
scas
and
xchg
pop
imull
in
jnp
jae
arpl
dec
es
addr16
dec
je
sbb
sbb
mov
and
aam
adc
scas
push
sub
loope
test
pop
xchg
jecxz
daa
adc
test
ret
add
les
dec
add
mov
adc
mov
sbb
ret
mov
or
inc
inc
pop
mov
lret
stos
mov
mov
out
cld
fcoms
and
mov
insb
mov
sub
pop
enter
pop
mov
fmull
xchg
or
stos
std
fs
xchg
fildll
pop
adc
popf
mov
loop
add
push
mov
inc
mov
jo
mov
jle
pop
add
lock
push
cwtl
dec
xchg
push
mov
xor
mov
jno
stos
stos
aad
or
mov
cltd
adc
add
pop
idivb
sbb
xorl
repz
mov
movsb
lret
int3
mov
jg
xor
sub
or
dec
add
nop
jbe
and
push
lss
dec
cld
push
xchg
pop
imul
jno
inc
mov
pop
dec
pushf
dec
push
xlat
push
mov
jmp
aas
outsb
xchg
call
pushf
mov
pop
setae
pop
add
adc
std
mov
leave
xor
stos
js
clc
scas
shlb
repnz
add
jmp
cmp
daa
icebp
data16
xchg
add
mov
push
push
cmpl
out
pop
sub
cmp
pop
cmpsb
cmp
mov
mov
sbb
pop
loope
inc
aaa
mov
enter
jg
sbb
addr16
lods
repz
jno
mov
pop
push
in
mov
ss
xlat
jle
inc
dec
sub
daa
jo
loop
addr16
jnp
mov
insb
sub
out
mov
mov
mov
repnz
daa
scas
mov
loopne
lods
cltd
out
xchg
lds
mov
test
outsl
jp
push
into
lds
xlat
aas
in
imul
lret
es
mov
jns
roll
add
add
xchg
jp
add
cwtl
data16
jnp
lcall
mov
loop
add
shl
push
fbld
and
outsb
jne
mov
or
outsb
mov
stos
gs
xchg
or
dec
lea
pop
add
jle
add
imul
pop
repz
ret
stos
subl
cmp
pop
testb
cltd
sahf
pause
jmp
test
mov
dec
mov
jns
push
xor
sub
add
orb
xor
jo
add
push
adc
int3
shll
lds
jo
cmp
pop
mov
push
in
aaa
popa
push
cwtl
jge
stc
jmp
lds
fcoms
mov
xor
jbe
fs
inc
mov
xchg
in
ds
jmp
mov
cltd
mov
mov
jno
popa
roll
scas
js
xor
push
push
mov
call
cmp
insl
aad
inc
lcall
mov
mov
sub
ljmp
pop
push
pop
cmp
out
xchg
or
imul
cmp
or
sub
pop
dec
in
mov
or
and
pop
enter
cmp
cmp
ret
adc
and
add
or
mov
push
xchg
xor
and
out
xor
sub
xchg
inc
icebp
pop
inc
ret
sarl
xor
or
dec
lret
pop
push
mov
iret
dec
jo
stc
xor
aam
push
xor
or
loop
and
rcrl
fidivrs
jl
inc
sub
push
daa
pusha
and
hlt
inc
fs
or
mov
mov
xchg
xor
hlt
cmp
and
insb
add
add
dec
push
add
push
popf
and
cs
in
xchg
pop
mov
pop
cld
xchg
mov
mov
pop
adc
pop
or
mov
int3
popa
in
roll
popa
push
insl
inc
push
mov
and
and
mov
or
imul
mov
mov
fwait
dec
popf
add
mov
xchg
or
shrb
mov
es
ja
mov
jno,pt
push
and
xor
add
adc
jne
jl
or
out
pop
jl
adc
fisubl
dec
pop
push
pop
fnsave
jns
clc
and
mov
pop
adc
pop
fstpt
jecxz
cmp
and
in
cmp
xor
jg
arpl
xchg
pop
jno
iret
cltd
roll
into
mov
and
nop
and
mov
mov
arpl
loop
dec
sbbb
popl
xor
xchg
mov
dec
adc
lods
outsb
pop
stc
out
jo
xor
or
movsb
fldcw
xchg
mov
cltd
je
xchg
cmp
lock
aad
adc
mov
push
mov
mov
aam
cs
stos
or
inc
sub
mov
sar
mov
xor
xor
insb
mov
fs
outsl
pop
xor
xchg
dec
ret
jge
rcrl
push
shrl
dec
adc
vcvtsd2ss
mov
loopne
jge
add
outsb
fistpl
inc
imul
push
mov
mov
popf
xchg
enter
decl
ss
add
in
rolb
insb
gs
dec
or
repnz
aas
push
stc
jmp
or
inc
inc
mov
call
movb
mov
lods
movsl
xorb
out
lret
xchg
sub
adcb
rolb
xor
lret
sbb
ret
push
pop
data16
into
inc
paddusb
or
jb
inc
push
lea
leave
sbb
shrb
lock
xchg
cli
test
scas
jb
sbb
lods
xchg
xchg
clc
aam
push
cmp
cmp
or
movsl
orl
aaa
in
divl
xor
mov
orl
sub
mov
pop
mov
stos
push
jmp
cmpsb
mov
sbb
and
or
gs
xlat
mov
add
aas
pop
mov
mov
rcrb
outsl
pop
rcrb
das
sub
repnz
inc
adc
mov
lods
sti
mov
mov
xchg
pop
outsl
js
mov
push
ja
rorb
das
inc
cmp
hlt
or
mov
popa
mov
push
xor
out
mov
mov
push
jmp
adcl
add
push
sti
or
fwait
arpl
or
sahf
fwait
dec
in
or
inc
out
fmull
sbb
xor
idivl
es
int
push
push
cli
inc
pop
xor
inc
inc
icebp
xchg
idivb
jne
add
sub
jo
mov
in
pop
pop
movsl
loop
or
repnz
pusha
popa
rorb
pushf
mov
pusha
loope
jne
adc
out
test
movsl
cmp
nop
xchg
cwtl
push
push
fwait
mov
pop
jbe
jl
push
sub
mov
mov
jge
jp
iret
cmpsb
rorb
lcall
jne
push
mov
xor
sub
and
mov
mov
aas
sub
jno
mov
sti
inc
dec
and
jns
add
push
jno
pop
mov
ret
outsb
imul
push
aas
fidivrl
push
cld
in
cmpsb
fwait
loop
mov
adc
xor
popf
jl
sub
jecxz
std
mov
imul
jl
mov
or
pop
push
inc
push
mov
sbb
mov
mov
pushf
jb
dec
fsubrs
hlt
mov
ret
mov
jl
bound
jp
aaa
xchg
and
mov
and
mov
sarl
mov
test
pop
push
mov
adc
hlt
fstpl
enter
imul
arpl
jns
push
xchg
push
xchg
daa
dec
into
mov
out
inc
test
add
cmpl
pop
mov
fimuls
shl
jae
scas
out
pop
hlt
inc
cmp
dec
div
in
arpl
insb
cwtl
mov
cltd
mov
fidivrs
sahf
jno
xchg
jecxz
orb
js
cmp
repnz
inc
rorb
adc
mov
xor
jne
scas
mov
sub
cld
loop
daa
jmp
dec
pop
xchg
add
cmp
mov
nop
fnstenv
leave
gs
push
iret
shl
fmul
cmp
xchg
aas
addr16
cmc
mov
xor
scas
cmpsl
mov
dec
push
inc
adcb
mov
mov
push
subl
popl
mov
cwtl
and
xchg
aas
push
sbb
in
fisubl
mov
and
popf
or
ljmp
dec
xchg
bound
stos
imul
mov
cmp
dec
jle
dec
mov
rol
jne
mov
les
dec
cli
inc
fwait
or
scas
into
lahf
das
mov
shll
cli
cld
sbb
mov
jg
ja
dec
shrl
loope
sbb
inc
into
fisttpll
rcll
filds
popa
mov
test
in
inc
js
popf
neg
jns
cmc
out
sub
mov
inc
push
jno
or
das
outsb
cmp
xchg
cmp
mov
enter
mov
in
pop
jl
movl
pop
adc
adc
lcall
mov
out
jne
jge
sbb
repnz
mov
call
sub
jle
adc
add
jnp
inc
jmp
fwait
dec
mov
cmp
movsl
push
lret
xlat
sbb
and
pop
icebp
dec
or
negl
je
insb
mov
into
push
cs
lea
mov
call
clc
and
outsl
fwait
cmpsl
rcrl
adc
jg
in
ror
popf
bound
and
out
sbb
xchg
js
mov
outsl
mov
es
xchg
add
cmp
fcomip
or
mov
in
ss
mov
mov
sbb
inc
mov
xor
insl
adc
movsl
ret
mov
jge
jmp
mov
loop
cmp
jle
negb
ljmp
cmp
ror
in
push
xchg
jl
pop
insb
push
inc
mov
mov
add
mov
push
iret
roll
inc
jmp
adc
xchg
loope
xchg
adc
adc
cli
mov
push
sub
mov
jns
loopne
mov
enter
cwtl
mov
jae
ja
mov
push
jp
lds
pop
sub
and
fimuls
popa
insl
add
ret
cmpb
sbb
out
cmp
insb
xchg
out
test
adc
add
mov
xor
jns
mov
mov
jo
inc
sub
sub
xor
into
mov
pushf
and
aas
lds
mov
jne
mov
pop
fsubrl
leave
scas
lcall
adc
jge
stos
cli
sbb
xlat
push
lea
lret
cmp
sbb
jae
popa
pop
enter
inc
ljmp
pop
push
jb
out
mov
add
adc
sub
ficoml
fmuls
pop
xchg
mov
xchg
popf
repz
clc
xchg
pop
fistpl
jbe
jg
fidivs
lds
cwtl
test
cmp
add
stos
shlb
add
repnz
cmp
push
imul
pushf
lahf
lock
sub
xchg
outsl
mov
mov
cmp
mov
sarb
cwtl
shll
clc
push
jo
push
setge
outsb
vpunpcklqdq
stos
mov
repz
mov
leave
pop
outsb
iret
mov
pushf
jg
into
adc
std
out
repz
pop
hlt
pushf
cmc
loopne
sarl
and
popf
mov
push
mov
outsl
inc
push
dec
cmp
jb
dec
imul
dec
add
stos
ret
scas
jle
lret
pop
inc
mov
inc
sub
cmp
movsl
jp
dec
and
xor
mov
xlat
sbb
in
and
pushf
and
inc
out
ret
xor
pop
inc
hlt
add
xor
push
xor
addl
loopne
push
mov
and
test
xchg
pop
mov
jecxz
sahf
pop
shlb
outsb
imul
push
ret
cmpsb
mov
aam
ret
dec
inc
insl
mov
push
lds
shr
dec
mov
xchg
enter
and
fs
out
or
jge
mov
sub
pop
xor
dec
jmp
jo
sti
cmpsl
push
jl
lret
cmp
fcomip
inc
sbb
mov
movsb
mov
xchg
cmp
dec
pop
mov
cmp
push
xor
aas
es
imul
jno
sti
cmpsb
scas
adc
mov
movsb
xchg
cmpsb
xchg
pop
jl
adc
ljmp
movsb
dec
and
fld
pop
fmull
shlb
aaa
repnz
inc
mov
in
xor
dec
and
add
pop
adc
bnd
push
xlat
psadbw
aas
push
stc
and
sub
inc
or
xchg
ljmp
mov
mov
mov
sbb
nop
js
jmp
aam
push
icebp
xor
stc
pop
and
push
lods
jne
scas
ss
and
dec
movsb
mov
push
mov
push
inc
or
loop
mov
je
pop
hlt
sbb
fdivrs
inc
mov
pushf
cmp
jge
shlb
jmp
cmp
call
std
dec
push
js
mov
or
in
lea
lods
ljmp
lea
in
inc
divb
or
jecxz
push
negl
adc
jnp
inc
and
cmpb
pop
add
data16
add
insl
cmp
xlat
paddw
in
push
cld
dec
or
push
cld
jle
ja
shll
pop
mov
jae
sbb
xor
insb
and
push
push
loop
loop
ret
loop
pusha
subl
hlt
jno
jne
push
notl
sub
test
into
pop
add
cmp
mov
mov
xor
int
inc
mov
leave
stos
adc
pop
jo
insl
popa
sbb
cmp
pop
mov
out
adc
clc
lods
ror
cmc
cltd
stos
xchg
loope
ficoms
fnsave
cwtl
popa
arpl
mov
sarl
and
lea
in
jp
orb
jg
loope
mov
pop
daa
aad
pop
xor
mov
adc
sbb
push
cmovg
xor
jmp
sbb
mov
cmp
xchg
in
rorb
repnz
ret
bound
ja
js
push
lahf
out
negb
cmpsl
dec
arpl
adc
ret
cld
cmp
adc
push
mov
dec
pushf
pop
jnp
dec
in
push
sbb
xchg
jmp
dec
push
adcl
shll
add
xchg
sahf
mov
jo
pop
dec
pop
js
and
xor
movsb
fs
call
add
lret
xchg
add
xor
xor
sbb
in
sbb
icebp
jnp
add
pop
nop
in
pop
gs
insb
and
jp
test
adc
sub
inc
pop
arpl
ss
mov
mov
xor
push
out
and
mov
dec
or
pop
ret
xchg
ret
jecxz
fcmovnb
cmp
push
jo
inc
sub
mov
sub
imul
push
push
jno
xchg
and
lret
scas
data16
and
cltd
sbb
leave
xchg
xchg
rorb
mov
adc
std
jp
mov
loope
cmp
or
enter
jnp
icebp
mov
and
and
lea
shrl
popa
add
stos
clc
arpl
hlt
fld1
fidivrs
cmp
dec
clc
popa
ret
pop
shr
mov
scas
mov
inc
packuswb
loope
sbb
testl
or
mov
push
shll
xchg
cmc
call
fildll
enter
test
sub
pop
adc
dec
jecxz
push
inc
in
inc
dec
outsl
mov
mov
and
div
push
sub
mov
call
jp
jecxz
and
faddl
pop
xor
ljmp
into
push
out
jge
in
adc
mov
js
dec
stos
cmp
jge
cmp
sbb
push
gs
out
lahf
mov
insb
mov
jb
int3
shll
mov
add
and
aam
cmp
push
clc
adc
icebp
add
jg
xchg
out
xchg
insl
inc
or
xchg
test
stos
jmp
cmpb
inc
lcall
cmpsb
dec
mov
pop
movsl
cmp
ljmp
adc
outsb
push
xor
mov
push
jge
and
push
outsb
push
and
out
sbb
mov
cmp
cwtl
mov
or
ja
mov
das
and
or
xchg
shrl
or
fistps
lret
subl
or
mov
mov
imul
jl
testl
xchg
jle
das
into
ret
pop
repnz
xchg
int
fs
push
mov
int3
mov
mov
jbe
imul
add
pop
adc
mov
daa
jg
cmpsl
mov
add
test
inc
out
or
fldt
lock
sub
add
cmpb
stos
inc
addr16
clc
pop
movsl
sub
xor
fnsave
mov
or
incb
stos
fisttpll
mov
mov
inc
movsb
jbe
mov
or
pop
lret
pop
iret
mov
repz
mov
adcl
aas
ss
and
cmp
mov
mov
lret
dec
mov
shrl
inc
mov
out
xchg
mov
push
push
das
test
or
in
add
mov
aad
fnsave
xchg
push
mov
xchg
pop
lret
mov
adc
xlat
daa
js
sub
jecxz
aam
pop
jle
push
sub
orl
push
shrl
bound
std
popa
or
sub
and
sbbl
lcall
aaa
inc
arpl
rcl
pusha
test
inc
pop
fwait
andl
mov
mov
mov
push
mov
loop
iret
adc
stos
lea
icebp
lock
cs
mov
enter
xchg
cmp
and
inc
pop
sbb
stos
jnp
lret
fwait
mov
mov
ljmp
and
jo
xchg
fstl
das
repnz
into
and
flds
push
movsl
aad
imul
mov
inc
je
std
sub
scas
mov
ret
in
std
xor
sub
loope
arpl
cmp
sub
addl
sub
pop
aad
xchg
mov
pop
push
fbld
sub
xorl
xchg
pop
xchg
cmp
push
xchg
or
xchg
loop
add
add
mov
ffree
repz
test
sub
jne
dec
sub
imul
lock
shrl
mov
or
dec
test
mov
push
mov
xlat
sub
jge
stos
js
daa
inc
cmp
das
or
jge
mov
push
std
imul
xlat
cld
pusha
adcl
mov
xchg
push
emms
clc
pop
outsl
bound
inc
hlt
cmc
popa
dec
mov
xor
sbb
sub
fsubr
test
pop
into
jae
push
and
push
in
and
dec
pop
iret
hlt
shll
fwait
mov
lret
js
shll
lret
cli
clc
jmp
je
outsb
push
hlt
enter
mov
clc
jge
jnp
imul
xchg
cld
imul
dec
cmp
inc
dec
jge
fdivrs
mov
mov
jle
xor
decl
xchg
or
add
incl
xor
test
lahf
jp
sub
mov
fwait
mov
sarb
jg
push
stos
add
push
xchg
mov
dec
ljmp
rcl
mov
clc
test
adcl
out
js
push
ds
sub
repz
mov
cmp
dec
dec
sub
rcrb
fdivrs
or
scas
mov
and
ret
xor
xor
sti
int3
sub
jge
jns
cmpl
jno
popa
arpl
enter
cmp
pop
ja
pop
rcrb
or
push
scas
xchg
into
movsl
inc
adc
cmp
sbb
add
push
ret
enter
cmpb
into
iret
ljmp
fistps
sbb
mov
orb
cmpsb
out
and
lods
add
cmpsl
test
xor
cmp
mov
dec
mulb
imul
fs
into
mov
mov
push
cmp
xor
xchg
push
mov
mov
jnp
cmp
add
js
and
push
mov
stos
mov
es
mov
pop
add
pop
mov
inc
shl
xchg
inc
sbb
mulb
mov
pop
push
sub
sti
push
testb
xlat
xor
lret
inc
arpl
cmc
cli
aam
push
shll
mov
sbb
and
push
jo
call
and
xor
cmp
out
ds
fs
cmp
sub
stc
jae
pop
int3
fmul
out
fldenv
cmp
scas
jo
inc
pop
sbb
lods
xor
and
int
xor
add
mov
aas
fwait
xlat
mov
add
divb
js
xor
add
pop
and
push
inc
aaa
adcb
iret
mov
xor
in
mov
test
jno
cmp
push
push
dec
bound
inc
cli
cmp
and
pop
popf
sub
push
xchg
jnp
scas
cmpsb
push
inc
or
dec
and
lods
rclb
mov
call
cmp
inc
pusha
xchg
pop
mov
inc
xorb
push
inc
add
jnp
xor
jl
mov
xchg
xor
mov
push
call
cmpsb
loop
repz
sbb
or
mov
push
and
les
rol
inc
js
test
jne
ret
les
fstps
jbe
clc
xchg
int
and
sti
popf
leave
popf
test
adc
mov
jnp
pop
mov
push
cmpsb
cltd
sbb
push
push
ret
sbb
sti
add
vpcmpeqb
adcb
sbb
rolb
mov
cwtl
pop
mov
outsb
pusha
cs
subb
and
sbb
cli
xor
leave
popa
iret
stos
nop
mov
les
jmp
mov
movsl
loopne
int3
mov
sbb
lock
xchg
mov
lret
lret
cwtl
mov
sbb
stos
repnz
fucomp
push
xor
adcb
dec
test
ret
lea
in
fs
popa
jb
ret
jp
nop
test
push
sub
test
ret
dec
inc
jmp
aaa
out
movsb
push
insb
cmp
clc
sub
and
bndstx
pop
push
into
loope
sub
pop
repnz
mov
cli
push
pop
inc
out
dec
aas
sub
xchg
fdivs
push
std
lret
xor
jnp
out
ficoml
fisttpll
mov
xchg
lret
and
fsubl
mulb
imul
mov
jmp
pop
mov
push
mov
xor
jbe
xor
push
in
sarb
cmp
out
xchg
aam
js
pop
daa
aaa
dec
test
adc
cmc
pop
mov
hlt
jne
pop
mov
mov
arpl
and
xchg
mov
fisubrs
adc
or
inc
jo
adc
mov
ja
mov
or
popl
jbe
scas
pop
ljmp
mov
jne
sbb
stc
lods
iret
mov
jg
xor
fstpl
xorb
sub
mov
push
sbb
jp
test
cmpsl
test
mov
std
xchg
pop
pop
mov
pop
popf
std
lret
mov
push
jmp
or
and
xor
pop
mov
nop
xor
pop
cmp
lret
inc
dec
mov
addl
test
or
in
fs
test
arpl
mov
aad
call
sahf
into
sub
cmp
pop
test
inc
fisttpll
and
jle
xchg
add
imul
pop
or
fcmove
xchg
fwait
out
jl
sbbb
sti
adc
cmp
push
jl
cmp
sub
rol
mov
sub
xchg
fdivrl
movsb
jo
mov
int
jmp
cmp
push
push
cltd
ja
push
xchg
inc
out
jg
test
or
repz
test
js
test
cwtl
or
gs
test
into
dec
xor
orl
test
test
insb
cmpsb
mov
mov
and
push
rclb
cli
push
dec
es
and
pop
or
push
lcall
lods
dec
lret
inc
aad
mov
pusha
push
popf
loopne
cmpsl
in
jg
jae
jg
jmp
cmc
loopne
subb
push
es
into
adc
mov
inc
or
pop
fistps
push
out
push
out
popl
cmpsl
cli
mov
fadd
jl
pop
pop
xor
adc
mov
jbe
add
adc
pop
lcall
mov
sbb
popf
push
add
js
std
push
js
mov
mov
insb
ds
jmp
data16
mov
or
mov
pop
mov
cs
pop
xor
outsb
push
sub
cltd
mov
sub
call
insl
dec
jb
repz
lret
sub
outsb
repnz
scas
cli
popf
xchg
movsb
adc
loopne
call
lea
je
cmp
or
push
out
andl
out
ds
je
fnsave
dec
jg
sahf
mov
xor
and
push
mov
gs
out
inc
push
adc
insb
je
jecxz
mov
call
push
push
jg
loop
outsl
jge
jae
mov
mov
add
push
gs
nop
xchg
mov
orl
or
pop
mov
cmp
push
test
inc
push
in
test
push
adcb
adc
adc
xor
xor
ret
popf
push
pushf
push
scas
dec
in
ficoml
xor
test
mov
xor
dec
stos
jo
inc
cmp
jp
adc
inc
ret
or
shlb
aaa
or
add
pop
cs
sbb
mov
mov
or
jg
mov
pop
loop
and
nop
mov
hlt
jg
mov
xor
cli
outsl
pop
adc
cwtl
cmp
pushf
mov
dec
ljmp
sbb
adc
scas
out
sahf
mov
mov
mov
lock
xchg
pop
lock
cmp
test
mov
js
adc
lcall
out
insb
shrb
xchg
mov
mov
dec
mov
cmp
dec
pop
leave
lods
sbb
fwait
negl
push
bound
mov
cmpsl
add
and
push
pop
aad
les
ficomps
aad
add
jmp
sti
jp
inc
cli
dec
stos
sub
push
mov
shrb
inc
pop
cmp
cmp
sbb
jne
cmp
jns
mov
adc
clc
push
out
pop
int3
or
mov
icebp
leave
stos
insl
add
cs
mov
push
dec
ret
cmp
int3
inc
out
adc
and
inc
or
mov
les
call
sub
movsl
mov
xor
mov
push
popf
imulb
sti
les
sub
inc
mov
mov
test
dec
stc
lcall
xchg
sbb
cltd
xor
dec
les
cmpsl
dec
and
into
cltd
jo
call
cltd
daa
pop
dec
xor
jne
inc
jmp
lock
and
pop
jns
es
add
add
inc
cwtl
movsl
out
sbb
jge
out
jmp
into
int
sbb
sbb
cwtl
arpl
leave
loopne
push
arpl
aad
bound
xchg
mov
cmpsb
cld
sub
or
mov
sbb
mov
mov
lcall
clc
pop
int3
int3
mov
icebp
and
sbb
add
sub
add
inc
leave
loopne
xor
jle
ja
outsb
sbb
pop
stc
jne
push
in
jns
push
fincstp
mov
es
adc
xchg
push
push
jge
cmc
sub
sbb
xchg
adc
andl
jmp
scas
xchg
xchg
sub
lds
push
stc
jl
stc
imul
outsb
and
jp
mov
sub
test
fstpl
jo
xchg
hlt
xor
mov
mov
pop
imul
dec
cmp
pop
iret
repnz
mov
outsb
sbb
into
lret
enter
gs
or
mov
daa
mov
aad
push
cmp
lds
jns
mov
movsb
dec
dec
fisubl
xchg
mov
fucomp
mov
dec
lret
xor
mov
outsb
mov
shl
sub
repnz
push
lret
sbb
xchg
neg
or
addb
and
dec
test
test
mov
and
jne
cmc
pop
outsl
arpl
repnz
ljmp
popa
aam
dec
cmpsb
mov
push
sbb
mov
push
out
mov
dec
sub
stos
mov
mov
xchg
xchg
adc
cld
xlat
ret
int
jnp
or
mov
movb
les
imul
xlat
lods
mov
push
shll
mov
sub
repz
aam
sbb
and
aas
test
lock
icebp
ret
stc
inc
mov
loope
sti
dec
jnp
bound
in
jbe
sub
incb
adc
or
enter
fisttpl
subl
lock
sahf
jne
nop
sub
fs
aad
mov
jns
dec
adcl
out
dec
push
and
dec
pop
mov
jp
lods
enter
and
push
jmp
adc
xor
popf
pusha
cwtl
mov
lcall
into
add
mov
xchg
mov
pop
dec
or
xor
add
xchg
mov
xchg
test
pop
popf
insl
bound
jmp
push
cmp
mov
ljmp
xor
jge
xchg
xchg
ret
inc
jp
test
in
mov
mov
mov
push
xchg
leave
or
jb
jge
in
repz
ret
hlt
ja
mov
add
lock
stos
mov
ja
cwtl
and
and
xchg
cmp
mov
mov
ficoms
loope
cmp
ret
ret
fwait
mov
in
mov
mov
xchg
inc
rcll
insb
in
lahf
inc
push
cmpsl
adc
divl
lods
rcr
rcrb
push
jo
mov
mov
clc
push
mov
add
icebp
mov
loop
lods
cmp
out
xor
push
ljmp
and
pusha
les
test
lods
mov
js
mov
adc
xor
jae
dec
xor
jns
add
out
ret
dec
repnz
or
cltd
cltd
pop
push
aam
insl
fidivrl
ret
mov
aaa
sbb
add
jne
mov
add
adc
dec
pop
push
inc
bound
xor
or
pop
jle
jns
dec
shrb
outsl
mov
pop
sub
jne
cmc
cmp
mov
and
adc
adc
jle
js
movsb
push
inc
orl
pushf
jg
stos
sub
fcmovbe
mov
rcrl
je
std
loope
adc
dec
incb
jmp
sub
push
dec
ja
adc
sub
sub
jo
pop
xor
cmp
scas
jno
loopne
cli
adc
sub
outsl
pusha
ja
clc
pop
aam
das
mov
gs
push
jae
int
sbb
in
sub
mov
push
xor
mov
idivb
lcall
or
es
inc
in
lock
sbb
fcmovu
fisubrs
lret
mov
mov
jecxz
adc
adc
adc
xchg
repz
cli
inc
mov
jb
cld
bndstx
aad
cmp
int
in
inc
mov
push
xor
xor
lret
rcrl
js
mov
subb
or
jnp
cmp
pop
pop
jo
lahf
push
lahf
sbb
daa
jno
gs
sub
cmpsl
jb
jno
aam
dec
sub
fwait
sti
hlt
lret
xchg
or
dec
adc
xor
daa
out
xchg
cmp
cli
jae
loop
sbb
or
sbb
and
add
leave
repnz
push
aam
jge
dec
jmp
mov
fbld
je
in
lcall
pop
lock
inc
pop
cs
dec
jecxz
xchg
pop
mov
or
js
test
pop
cltd
es
push
icebp
jne
xor
xchg
loope
jae
xor
hlt
stc
and
arpl
pop
xchg
sahf
mov
dec
cmp
pop
lea
sub
lock
push
xchg
leave
xchg
shlb
sarb
ret
jp
and
sub
mov
mov
into
inc
or
outsb
cld
mov
or
cltd
or
push
inc
test
cmp
pop
in
xrelease
test
adc
mov
pop
sbb
fwait
inc
pop
jmp
in
sarl
pop
cmpsl
enter
mov
inc
out
jmp
dec
bound
inc
or
push
sbb
arpl
ds
xchg
pop
inc
mov
fs
dec
push
xchg
movsb
fimuls
xchg
jne
insl
lret
in
fisubrl
push
fs
pop
inc
xchg
mov
fidivl
push
mov
lock
mov
shl
scas
add
fs
loopne
xchg
aas
and
ret
pop
push
sub
push
pop
fsts
mov
jo
mov
insb
mov
pop
sbb
jecxz
cs
fldcw
aam
mov
mov
or
notb
xchg
sbb
movsl
test
sbb
push
mov
call
iret
cmc
sbb
inc
dec
cwtl
cmpsl
or
adc
inc
loope
in
mov
and
cmp
adc
icebp
mov
cmp
sub
lds
lods
nop
and
xchg
jnp
and
push
rcrl
test
mov
cmpsb
repz
inc
add
and
jb
int3
and
dec
in
es
cmp
push
pop
jmp
pushf
add
adc
lods
inc
sub
movsl
pop
pop
aad
or
not
test
in
pop
nop
xchg
aaa
add
push
shl
outsb
inc
add
inc
and
movsb
fldenv
push
dec
adc
cmpsb
mov
repz
lds
adc
fwait
mov
shl
bound
mov
fstp
fadd
or
cmpsl
push
jecxz
pop
push
and
jb
insb
aam
aad
mov
test
rcrb
xchg
lret
inc
rcl
sbb
adc
pop
jbe
sbb
sahf
insl
lret
mov
fstp
nop
xor
outsl
repnz
jo
xlat
rorb
cmp
sbb
cld
into
enter
inc
in
loopne
xchg
add
add
call
test
je
dec
inc
mov
fimull
mov
cmp
xchg
loopne
imul
cld
adc
adc
mov
sub
cmp
cld
mov
stos
sbb
and
fbld
mov
adc
sahf
mov
mov
sbb
movsb
lds
and
out
pop
sbb
inc
into
sub
lods
xor
outsb
fs
pop
movsb
incl
pushf
repnz
repz
and
jne
mov
mov
ret
xlat
ds
ds
mov
aaa
dec
imul
push
lods
mov
mov
sbb
andb
inc
mov
and
aas
div
mov
sbb
xchg
pop
stc
push
and
inc
lea
mov
jno
test
ds
imul
stos
outsb
ja
lods
nop
inc
outsl
ds
lea
xchg
shll
clc
je
push
xor
dec
sub
loope
jge
dec
popf
and
ret
cmp
mov
mov
add
cmp
daa
and
cmp
das
sbb
push
mov
inc
pop
xchg
cli
push
mov
push
dec
arpl
fldl
out
pop
pop
push
inc
scas
lds
push
jmp
lock
sbb
cwtl
pushf
mov
rclb
sbb
adc
fstps
out
nop
leavew
aam
push
mov
xchg
inc
ja
in
mov
push
cld
std
mov
mov
and
movd
push
xorb
push
scas
repz
pusha
cltd
sbb
push
aad
sub
inc
fs
mov
mov
jnp
inc
cmp
mov
pusha
dec
jnp
xchg
std
dec
cs
ljmp
or
adc
movsb
xchg
shll
cmp
xchg
push
call
call
mov
pop
xor
jmp
les
add
add
cmp
cmp
es
std
mov
ss
adc
daa
pushf
repz
mov
int3
imul
addr16
das
cmp
cmp
mov
cmp
mov
repz
fnstcw
arpl
and
xor
xchg
and
mov
push
dec
insb
popf
fdivrl
aad
incb
shl
sub
inc
mov
push
sub
js
jnp
cmp
or
and
mov
mulb
push
pusha
rcrb
inc
les
lds
rcr
push
xchg
cmp
dec
sub
jmp
lds
gs
cmp
jae
sbb
sbb
sahf
push
gs
imul
mov
aad
int3
jns
enter
and
jae
ret
pop
pop
in
mov
xchg
inc
cmpb
or
xchg
fld
cli
test
cmc
fistl
pop
out
pop
mov
pusha
inc
and
fistl
adc
psubusb
cmp
cmp
out
rorb
in
mov
aad
mov
icebp
das
pushf
mov
sbb
sbbb
xchg
pop
add
ret
xlat
push
mov
gs
loop
push
push
sbb
call
adc
cmp
or
test
jecxz
fistl
leave
sti
push
push
xchg
cmpsl
shr
out
mov
ret
lods
faddp
stos
pop
pop
lea
lcall
dec
dec
aaa
decl
popl
stc
pop
jecxz
or
fdivp
iret
dec
stc
pop
or
in
mov
lret
std
popf
es
mov
sbb
mov
movb
jmp
in
arpl
test
cmp
negb
adc
std
mov
sbb
adc
out
push
sub
shl
out
jg
adc
test
add
aam
mov
or
in
sub
push
in
in
popf
into
jecxz
js
xchg
js
inc
sbb
xchg
stc
pop
loopne
cli
cli
movsl
mov
xchg
popf
sahf
lcall
mov
in
push
sbb
das
ret
xchg
mov
in
repz
cltd
mov
outsl
shll
push
push
mov
das
cltd
and
bound
test
mov
mov
mov
push
rcl
lds
stos
xchg
scas
cmp
int
adc
mov
lcall
aam
xor
lret
dec
push
fcomip
dec
aas
sbb
pop
dec
jp
cmp
loopne
and
dec
dec
xor
mov
mov
jl
push
mov
lea
lret
cmp
sbb
add
outsb
ret
cmc
movsl
inc
jbe
mov
jg
mov
lods
add
int3
inc
mov
outsl
subl
push
fs
pop
mov
cs
add
lcall
mov
decl
lock
mov
clc
repz
fwait
movsb
add
push
adc
push
test
mov
rcrb
pop
icebp
mov
out
leave
push
adc
and
mov
cmp
add
add
jno
test
pop
sbb
sub
inc
pop
out
pop
and
dec
test
movsl
cmp
pop
sbb
data16
loop
ds
and
inc
xchg
out
popf
mov
xor
xor
push
scas
sub
sti
cmc
jne
stos
push
mov
cmpl
adc
aad
aas
cmp
and
call
jbe
add
ds
push
push
pop
icebp
cwtl
mov
shll
icebp
jne
mov
push
pop
inc
cmp
xchg
adc
jnp
outsb
rorb
and
loop
add
add
repnz
xor
mov
mov
mov
mov
jno
loope
or
aam
subl
mov
sbb
push
daa
ficoms
and
xor
decb
and
xor
mov
fwait
jns
sub
jg
inc
lret
clc
outsb
jp
in
rcrl
and
push
lds
icebp
inc
popf
jns
push
fwait
das
dec
sub
and
nop
hlt
loop
ds
and
pushw
mov
test
stos
in
out
aas
sub
add
dec
mov
imull
lods
imul
jle
pop
sbb
mov
jo
insl
xor
outsb
cmc
pop
push
ret
andl
int
adc
int
arpl
sbb
std
repz
out
dec
lds
and
lret
rcrb
int3
fdivrs
movsl
int3
xor
js
push
sub
aad
mov
jo
mov
insl
das
pop
scas
push
pop
pop
mov
in
jl
stos
mov
push
cmp
jle
push
push
pop
and
pusha
push
xor
movsl
jb
jnp
ret
fs
popa
popf
xlat
pmaddwd
leave
and
addr16
iret
in
data16
sbb
pop
mov
sbb
das
sub
cmp
jmp
out
clc
stos
data16
shrl
pop
add
aam
sub
negl
ss
in
xchg
add
scas
add
sbb
adc
inc
mov
inc
int
pop
dec
pop
xor
cmpsl
and
add
pop
mov
out
push
test
adc
jmp
out
and
xchg
jecxz
or
and
mov
dec
fsubs
xlat
fwait
cwtl
mov
shl
in
push
aam
xchg
pop
inc
aaa
lea
fstpt
xor
jmp
push
ret
lcall
inc
mov
cli
sub
fnstenv
or
xchg
das
and
mov
add
scas
les
in
xchg
ret
mov
jbe
outsl
je
fnstenv
xchg
stos
push
xchg
jnp
lahf
pop
push
xor
repnz
pop
sahf
mov
stos
imul
inc
rclb
fwait
push
clc
scas
lea
add
jp
jmp
add
jg
shll
xchg
shrl
xor
xchg
aad
notb
jecxz
sbb
jae
jo
pop
popf
mov
push
je
jmp
dec
xor
jl
or
mov
imul
mov
adc
mov
sbb
unpcklps
mov
pop
jg
mov
and
leave
bound
shll
psrld
clc
sbb
pop
xchg
pop
mov
sub
sub
cmpsl
cld
push
cmc
cmp
data16
pop
imul
imul
add
or
jmp
mov
or
loop
sub
jecxz
pop
ds
pop
lret
test
adc
mov
push
inc
push
inc
xchg
mov
test
subl
jge
push
aad
pop
mov
add
and
pusha
ds
mov
dec
add
dec
repnz
mov
into
outsb
stc
ss
insb
imul
adc
cmpsl
scas
add
imul
mov
icebp
fsts
lahf
dec
repz
push
subb
mov
pop
fsubrs
mov
sub
imul
push
rcr
or
mov
leave
push
inc
call
push
add
pop
adc
jnp
mov
or
inc
adc
lahf
nop
lock
and
push
sbb
adc
dec
jge
inc
in
jns
xchg
cmp
pop
arpl
inc
aad
xchg
out
sub
sahf
mov
pop
xchg
add
mov
xchg
or
cmc
dec
mov
mov
push
or
mov
add
scas
pop
push
push
cmpsb
xchg
adc
pop
add
xor
repnz
pop
jno
jle
movsb
xor
add
or
inc
adc
dec
xchg
mov
pop
andl
mov
xor
repnz
test
pop
aam
push
dec
pop
mov
sbb
enter
pushf
test
push
inc
int
mov
orl
fdivrl
shll
sbb
pop
or
push
aas
jb
in
add
cmp
sub
xchg
or
jnp
repnz
and
xor
in
fstl
push
push
pop
adc
fstl
nop
adc
add
adc
mov
adc
stc
sbb
mov
cmp
push
mov
lcall
mov
call
dec
cltd
add
pop
xor
jmp
rolb
movsb
das
les
in
mov
add
rolb
mov
sbb
cltd
sub
ljmp
addr16
cmpsl
jmp
cmp
std
nop
and
out
sub
dec
lea
cmp
inc
insb
out
dec
mov
or
in
movsl
dec
lahf
loope
adc
push
js
mov
frstor
xlat
je
pop
dec
pop
lcall
test
clc
push
dec
scas
cltd
xor
fwait
or
stos
mov
jmp
nop
sub
outsb
jecxz
icebp
loope
std
push
sti
into
inc
loope
push
ds
mov
sub
cmpsl
add
xchg
and
or
or
sub
test
mov
sbb
xor
fwait
jne
add
jns
mov
andl
cli
in
jb
popf
mov
scas
jge
pushf
andl
pop
cli
inc
rolb
mov
xor
das
adc
pop
pop
cwtl
dec
int
jecxz
incl
lret
dec
inc
push
and
push
sbb
fwait
mov
mov
in
cwtl
pop
dec
fisubrs
dec
mov
fimull
and
xchg
scas
mov
xchg
popa
andl
das
shll
cmpsl
call
repnz
rcl
adc
cmp
sbb
xor
scas
decb
mov
jecxz
sahf
ss
or
repz
xchg
imul
sti
pop
std
rorl
stc
xor
aas
push
xchg
insl
test
loope
inc
bound
pop
mov
cmp
push
push
dec
roll
mov
jae
sahf
cmpsl
cmp
inc
fstpl
adc
sub
and
imul
inc
in
ds
jno
pop
push
dec
lret
movsl
es
mov
push
mov
push
adc
loope
cmp
popf
fimull
push
stos
insb
or
inc
cli
sahf
push
or
mov
push
mov
adc
adc
outsl
sub
mov
imulb
add
mov
pop
lahf
mov
sbb
mov
add
mov
addr16
movsb
mov
push
in
inc
stc
in
jp
cli
xchg
arpl
inc
mov
and
mov
jmp
cmp
mov
sbb
jl
mov
out
mov
gs
or
and
out
in
cmp
fs
mov
hlt
mov
movsb
push
ljmp
clc
sbb
imul
ss
and
xchg
sbb
cmpsb
xchg
jno
lret
jge
jmp
loope
lcall
xor
cwtl
mov
adc
mov
dec
notb
push
cmc
cmp
push
enter
clc
into
in
add
xor
popf
cmpsb
aad
mov
adc
lret
insb
sub
int
xchg
loop
and
out
test
loopne
sub
dec
test
add
push
or
mov
aaa
mov
scas
add
test
pop
jne
pusha
out
scas
leave
imul
xchg
es
repz
cmp
imul
and
cld
and
lods
fcomi
cmp
rcll
dec
xchg
push
dec
sbb
ret
pop
pop
pop
test
cmpl
int
movsb
push
push
std
lea
push
cmpb
adc
sbb
push
push
mov
pop
mov
cmp
in
mov
and
push
cmp
lea
mov
mov
add
imul
or
cmp
divb
add
sbb
lods
int
or
loop
add
or
or
je
aam
mov
pop
push
ss
or
pop
push
cmp
pop
inc
outsb
mov
jo
cmp
inc
or
inc
sub
jecxz
xlat
adc
stc
mov
cmpb
cmp
lcall
out
xlat
cmp
pushl
in
enter
and
out
pop
xchg
mov
popf
cmc
xor
add
jb
jb
sub
icebp
jp
subb
mov
pop
and
push
test
and
inc
ja
sbb
pop
imul
fcmovnb
or
lcall
les
push
test
xor
push
jmp
lods
je
adc
push
inc
add
or
pop
pop
mov
pop
jo
xor
fldl
xor
adc
push
out
aas
dec
mov
popf
pop
dec
lods
in
int3
add
jo
cmp
repz
pop
mov
ret
sub
lods
repnz
xor
jg
dec
pop
mov
xor
ds
sahf
push
mov
jl
pop
js
shl
les
mov
cmp
pushf
repz
xchg
popf
cli
mov
cltd
push
add
lea
out
dec
push
loop
inc
add
inc
test
adc
cmp
xor
sub
mov
inc
xor
rcpps
dec
or
mov
test
mov
adc
leave
xor
jl
test
pop
jb
es
xor
aaa
push
andb
in
sub
stc
sub
push
inc
or
hlt
mov
dec
call
cmp
add
xchg
jp
cmc
shr
mov
mov
or
adc
xlat
ljmp
loop
js
adc
add
lods
xchg
imulb
cli
xchg
movb
jecxz
ss
or
subl
jg
mov
xchg
nop
clc
adc
sbb
es
ret
inc
nop
jnp
mov
imul
adc
sbb
mov
shll
clc
jl
push
ljmp
into
xor
mov
add
rorb
cmp
mov
mov
add
iret
pushf
pop
cmp
and
loope
mov
xchg
pop
push
ret
iret
adc
push
test
push
adc
popa
mov
pop
pushf
mov
sbb
cli
adc
jnp
mov
add
pop
jecxz
fiaddl
adc
sub
pop
shll
cs
pop
fldcw
cmp
out
jns
addl
inc
in
in
int3
daa
sti
dec
or
jp
es
mov
push
pop
es
repz
sbb
jbe
fcompl
stc
into
inc
insb
ss
ror
adc
das
mov
mov
jmp
jo
and
mov
xchg
imulb
fsubl
adc
call
in
push
inc
xchg
sub
icebp
out
test
sbb
jne
add
xor
cmp
add
mov
rclb
or
jmp
jns
lds
mov
push
pop
lods
stc
fwait
mov
sahf
pushf
add
xlat
and
pusha
cltd
pushf
push
ret
or
jle
pop
sarb
les
repz
and
jns
jecxz
add
xchg
lock
stos
push
pop
notl
ja
push
int
and
add
repz
or
adc
jo
jns
daa
daa
mov
cmp
mov
jnp
bswap
jg
mov
stc
lcall
fnsave
ror
imul
jae
push
test
mov
xor
mov
or
sub
mov
in
jmp
lret
lret
lea
lahf
std
dec
pop
mov
mov
inc
repnz
scas
inc
mov
aas
inc
or
dec
imul
pop
scas
aad
stc
jge
popf
xor
lcall
fstp
cmp
les
cmp
subl
call
push
pop
ss
lcall
sub
clc
and
and
mov
pop
dec
sbb
inc
cmp
sub
ret
sbb
iret
mov
in
push
push
jge
cmp
sbb
and
mov
mov
pop
adc
dec
rcll
aas
ja
loope
fsubrl
mov
in
stc
add
repz
aas
mov
mov
popa
lds
mov
lods
push
xlat
shll
ror
push
icebp
or
sahf
outsl
xchg
or
add
pop
mov
xchg
add
out
fistpll
lcall
xor
and
push
popw
aaa
sub
in
lcall
jb
xchg
fdivl
popf
sub
inc
jns
popa
inc
enter
sbb
addr16
pop
push
sub
js
sbb
inc
leave
inc
jg
xchg
mov
and
jmp
sub
push
sbb
push
outsl
pop
ss
idiv
mov
sbb
shrb
icebp
xchg
xchg
test
or
and
inc
test
daa
aad
imul
popf
pop
jo
mov
lret
ljmp
inc
dec
in
inc
jecxz
mov
out
pusha
add
hlt
jp
ret
in
add
out
hlt
aad
sbb
in
fisubl
shld
cmp
cs
ja
adc
dec
cmp
movsb
ficoms
mov
cmc
cld
push
jg
ret
cmpsl
and
jle
pop
sub
mov
pop
lods
mov
js
xorl
cmpsb
rcll
pusha
imul
mov
daa
or
daa
xchg
cli
lods
adc
frstor
ja
cmp
dec
and
ds
sbb
xor
mov
pop
or
inc
scas
cs
xchg
mov
push
shll
mov
jecxz
fstpt
cltd
notb
push
daa
int
btc
fxch
jo
int
sub
jne
mov
aas
and
lcall
jne
ret
or
loopne
inc
mov
pop
and
add
in
mov
inc
cmp
xor
sub
push
lcall
loopne
xor
cmc
decl
das
outsb
pop
ss
or
out
leave
mov
and
adc
leave
push
psllq
ljmp
cmpsl
pop
pop
jns
push
and
imul
mov
mov
pusha
mov
les
mov
in
or
adc
aaa
aas
fchs
loope
test
cld
test
mov
scas
adc
push
dec
mov
mov
scas
mov
sbb
lods
sub
sbb
push
es
lret
shlb
jmp
push
adc
les
inc
pop
in
cmp
xchg
sbb
faddl
sub
stos
xchg
and
mov
mov
int3
adc
pop
stos
mov
in
rcll
pusha
xchg
pop
shlb
xchg
sbb
mov
inc
and
jne
xor
mov
loopne
inc
insl
adc
repz
out
ret
xchg
dec
mov
xchg
je
hlt
and
or
leave
sub
jo
mov
in
mov
cmp
dec
sub
gs
subb
push
push
fsubl
lahf
arpl
lahf
mov
mov
int
pop
jg
fdivl
and
ret
jae
push
inc
out
cld
mov
stc
dec
push
pop
sbb
addb
and
and
pop
adc
testb
lock
fisubs
fstps
clc
pop
jmp
jo
xchg
inc
xchg
pop
cmp
leave
movb
mov
sbbb
fwait
xchg
jb
cmp
mov
repnz
pop
and
mov
repz
sbb
push
out
sahf
sub
pop
loop
std
ret
jl
aas
neg
repnz
leave
pop
mov
xchg
xchg
jnp
push
sbb
xchg
push
aam
sbb
shlb
add
shrl
or
lds
test
test
pop
jecxz
xchg
jne
cmc
pusha
or
cmpsb
nop
movsl
es
fucomp
add
and
and
hlt
jle
cmp
lret
pop
inc
pusha
bound
mov
lock
cmp
in
lcall
and
push
movsb
push
xor
mov
jp
push
xor
test
int3
and
dec
mov
xlat
arpl
dec
stos
xchg
dec
jno
clc
data16
jb
sub
push
jno
cld
xchg
adc
jne
push
sbb
in
pop
in
xor
xor
pop
mov
pop
addr16
fcmovbe
mov
xchg
jns
in
mov
sbb
or
push
cmpsb
shr
mov
stos
dec
js
ret
loop
clc
mov
aam
xchg
testb
dec
jbe
movsb
sti
sti
imul
in
sahf
push
xor
push
or
mov
shrl
jnp
jl
movsl
fstl
mov
inc
add
enter
call
ds
pusha
cli
dec
in
jae
int
loop
push
add
stos
ja
jae
repnz
scas
sar
ficoml
dec
sub
pop
and
icebp
jb
mov
mov
int
in
faddl
gs
sub
in
xlat
mov
and
jmp
xor
outsl
or
out
pop
cmpsb
les
mov
add
pop
push
mov
ret
or
cwtl
dec
std
sub
pop
adc
inc
pop
inc
jnp
or
jge
scas
add
test
mov
out
loop
movsl
movaps
push
xor
imul
cmp
inc
sub
orl
lock
in
push
out
push
test
cmp
cmp
je
clc
jmp
cld
call
sub
push
fsubrl
pop
dec
and
cmp
cmp
decb
fildll
shrb
aas
push
jle
test
lret
mov
test
push
add
loopne
pop
mov
les
mov
ficoml
das
leave
ret
mov
mov
jnp
jb
adc
stos
std
dec
mov
xchg
or
fwait
cmpsb
sub
add
aad
imul
jno
or
mov
mov
pop
sub
mov
rcr
push
decl
mov
adcl
jo
clc
clc
pop
popa
and
sti
mov
pusha
dec
push
mov
das
or
out
rolb
push
push
jbe
loop
scas
sbb
inc
or
lock
outsl
andl
xchg
push
fwait
sbb
stos
dec
add
mov
add
fldl
or
xor
sbb
jg
mov
inc
sub
mov
roll
xchg
jmp
jl
jns
dec
je
jl
pop
cmp
mov
cmp
fildl
in
or
adc
fs
add
rclb
inc
shrl
test
in
mov
sbb
into
push
pop
mov
les
fstp
sahf
xor
add
mov
pop
mov
or
in
sub
inc
stc
pop
push
or
xchg
arpl
ss
clc
clc
add
imul
mov
ror
or
mov
pop
add
mov
adc
shl
pop
lahf
jmp
fisubl
insb
repz
push
jmp
sbb
ja
cmp
loope
cmp
inc
enter
outsl
movsl
adc
xor
inc
mov
stc
jno
rcrb
sub
inc
jmp
cltd
enter
adc
pop
cmpsb
lods
dec
xchg
outsb
shrb
sbb
pusha
roll
insb
repz
int3
mov
xor
out
scas
imul
sub
xchg
push
loop
cmpsb
lahf
shll
iret
sbb
jecxz
mov
dec
mov
dec
or
add
jecxz
and
push
mov
nop
clc
jne
sub
fisubrs
jmp
imulb
out
and
inc
lahf
iret
leave
lods
hlt
outsb
in
push
movsl
inc
rorl
call
nop
dec
xor
js
jecxz
es
scas
daa
daa
dec
loope
jne
lods
mov
cli
mov
scas
aas
adc
sbb
jg
lods
sahf
leave
sub
pop
push
adc
divb
mov
iret
shll
pop
inc
pop
inc
loopne
add
std
pop
xor
pop
xlat
out
orb
mov
enter
rorl
and
mov
dec
ljmp
scas
mov
cmp
cmpsb
add
mov
mov
movsb
call
loope
add
js
pop
mov
xrelease
mov
and
lcall
mov
push
dec
adc
cmpsb
mov
int3
pop
inc
and
arpl
fdivrl
jmp
pusha
dec
pushf
cltd
ret
jo
xor
decl
repnz
stos
or
xchg
mov
rcl
pusha
xchg
push
and
mov
cmp
pop
fnsave
addb
popa
cmp
scas
inc
enter
xabort
xchg
in
mov
roll
mov
hlt
adc
inc
inc
stc
sub
jp
push
add
ds
jg
add
push
sbb
mov
outsb
aam
loope
add
loop
daa
or
loopne
mov
fists
xor
cmc
call
popf
outsb
sub
add
xchg
push
out
repz
dec
shrl
jno
or
mov
mov
dec
jge
mov
mov
shll
in
pop
lcall
in
adcl
lahf
cld
test
jne
sbb
dec
mov
jns
je
and
push
add
and
loop
xor
jne
lods
dec
cwtl
fnsave
push
xchg
mov
pop
loop
jmp
outsb
adc
neg
sti
or
jp
jp
out
lahf
push
ljmp
mov
xchg
and
in
adc
daa
rclb
push
jno
adc
jp
mov
testb
mov
adc
in
inc
out
iret
xchg
fucomi
negl
test
out
addr16
mov
je
es
nop
push
push
mov
mov
pop
jbe
loopne
jns
sub
pop
ret
dec
mov
pop
push
xor
jecxz
iret
pop
outsb
push
pusha
and
cwtl
jbe
out
adc
je
movsl
lods
adc
or
ljmp
fsubl
mov
and
cmp
xorl
mov
mov
daa
out
inc
jno
test
dec
and
jp
inc
mov
pop
dec
loopne
or
jns
xlat
dec
or
sub
add
js
pop
pop
inc
sarb
and
int3
pusha
xchg
frstor
sub
fidivs
cltd
mov
scas
push
pop
xor
pop
aam
xor
lcall
into
jnp
or
inc
hlt
jnp
rclb
sbb
xchg
addl
and
ljmp
pop
xchg
pop
adc
sbb
xchg
pop
inc
movsb
adc
jmp
fbld
mov
and
xchg
ret
push
mov
iret
fcmovb
sbb
dec
adc
sub
andl
mov
inc
lods
call
fs
jae
in
jo
out
inc
sbb
fcompl
cmp
add
push
xor
jne
and
imul
push
dec
arpl
out
inc
fdivrs
inc
pmaxub
xchg
or
jb
rclb
or
and
outsl
jnp
insb
gs
cmp
lea
popa
jmp
add
lds
dec
into
int3
ja
jae
jne
into
ret
adc
jbe
xchg
divb
lcall
mov
out
inc
iret
mov
lock
inc
push
dec
cs
pop
sub
lods
lods
shr
popa
loopne
inc
ss
fstpt
outsb
enter
ds
test
sub
enter
add
inc
xchg
scas
daa
pushf
xor
pop
js
test
xchg
push
pop
aad
xor
mov
loop
xchg
icebp
sbb
mov
sahf
pop
call
adc
shll
repnz
sbb
int
sahf
inc
xchg
cli
mov
add
call
xchg
scas
inc
cltd
mov
imul
cmp
outsb
xor
mov
cltd
rclb
iret
es
movb
cmp
jle
xor
jo
sahf
imul
hlt
or
pop
sub
ja
jl
add
ret
xor
cmp
fstpt
jmp
dec
pop
xchg
pop
cmp
mov
gs
lahf
add
adc
mov
mov
jae
and
nop
ficomps
sti
inc
xorb
and
imul
leave
xor
jle
cmp
rcll
cwtl
jnp
lock
movsb
repz
shr
loop
sub
sti
mov
and
or
xorl
dec
stos
and
repz
sub
testl
insl
outsb
ficompl
test
jge
aaa
les
into
mov
xchg
xor
int
push
movsl
push
sub
inc
aam
bound
sbb
leave
jnp
ret
clc
addr16
mov
das
jo
mov
and
adc
arpl
imul
rorl
push
sub
add
fs
or
sbb
dec
lea
cmc
lret
rorl
xor
inc
jno
inc
es
mov
push
xorb
cmp
ss
dec
add
mov
push
jp
adc
xlat
ds
xchg
pop
mov
scas
popf
sbb
mov
idivl
pop
push
arpl
adc
bound
push
stos
or
ret
sub
cmc
pop
xchg
pushf
pop
sub
and
push
mov
sar
or
inc
lcall
hlt
insl
jg
fcmovb
loop
mov
incl
insb
rclb
test
fdivrs
scas
inc
mov
pusha
fmuls
pop
das
stos
ret
nop
xchg
loope
cmpsl
jo
sbb
std
clc
ja
mov
add
jno
or
ss
stc
jno
adc
mov
sub
xor
or
mov
mov
xchg
aam
inc
and
xchg
dec
loope
aas
lret
cmp
adc
xchg
out
mov
mov
outsl
pop
inc
bound
add
add
fistps
in
or
jns
pop
movsb
pop
insb
jge
mov
fwait
sub
mov
jge
inc
push
outsl
stc
lock
outsb
mov
push
shl
idivl
sarl
retw
push
out
cwtl
subb
pavgw
pop
xchg
add
lret
jge
add
pushf
mulb
jne
xor
lods
xor
ja
mov
int
mov
fwait
in
mov
test
mov
in
xorb
sbb
xchg
mov
xchg
jns
lods
xor
push
ds
sub
pop
cmpsl
cs
sub
push
ds
mov
ljmp
adc
jne
lds
int
xchg
add
cmp
loop
sbb
bound
mov
sti
adc
pushf
shrb
lock
shl
gs
or
fldcw
aam
ja
add
ljmp
mov
mov
ss
cmpsl
aad
das
mull
push
fnstcw
sub
loopne
mov
push
push
jae
push
leave
and
xchg
mov
ja
lcall
xor
sub
daa
xchg
push
mov
adc
pop
xor
push
xor
clc
in
jb
pushf
loope
pop
lock
scas
out
mov
mov
lcall
sti
mov
inc
lods
sub
popa
fldenv
mov
push
mov
mov
js
xchg
dec
push
push
inc
ret
xor
sbb
movsb
fidivrs
sub
inc
mov
jmp
pop
pop
mov
adc
push
xchg
cmp
adc
jmp
sbb
mov
mov
cmpsl
insl
push
rorl
mov
jecxz
test
mov
push
inc
movsb
and
lret
add
stos
mov
xlat
xchg
addl
pop
hlt
repz
dec
loopne
mov
mov
cmc
cld
pop
stos
lret
xchg
pop
mov
fidivrs
adc
imul
lret
xor
ret
mov
inc
pop
aas
jns
xor
ret
testl
pusha
mov
add
cwtl
sub
test
xchg
push
das
faddl
push
dec
mov
mov
mov
fisttps
mov
or
test
cmp
push
lock
and
dec
mov
xchg
pop
xchg
cmc
loope
and
clc
cmp
pop
dec
jmp
popa
repz
mov
inc
inc
mov
and
mov
push
mov
xchg
in
aaa
jecxz
das
or
adc
cmp
jl
cmp
jle
add
gs
scas
inc
mov
pop
xchg
sarl
int3
in
dec
mov
idivl
adc
cmp
add
imul
scas
aaa
fimuls
inc
pushf
xchg
bound
xor
mov
outsb
js
mov
xor
ficoms
push
ss
adc
test
mov
out
or
cmpsl
mov
arpl
movsl
pop
lcall
inc
adc
jg
das
test
inc
orb
cltd
cwtl
mov
pop
js
test
jle
sub
aad
loop
aas
enter
sbb
mov
xor
icebp
mov
lcall
test
fildl
mov
pop
mov
mov
or
sub
xlat
and
inc
lds
push
inc
dec
mov
ss
clc
and
jne
sub
jae
fldl
sub
insl
add
icebp
out
std
in
inc
stc
fcompl
cwtl
shll
out
cmp
dec
jmp
and
push
adc
jbe
xchg
mov
in
or
jo
out
inc
imul
cmp
cmp
lods
outsb
out
scas
and
call
pop
stos
and
in
jge
pop
pop
push
fdivs
cmp
pop
iret
push
dec
xor
push
mov
pop
and
shl
rcll
stc
enter
cli
cltd
jp
xor
pop
test
mov
xchg
xchg
push
cld
fdivrp
mov
andl
dec
mov
int
xchg
addr16
add
shrb
sbb
adc
sbb
lea
lcall
or
mov
cmc
and
lcall
addr16
jge
jbe
adc
push
aaa
mov
xor
daa
add
jne
andl
lcall
pop
in
ret
pop
jo
or
hlt
inc
sub
std
testl
dec
mov
ds
xchg
stc
jg
or
mov
push
add
dec
sub
in
fiadds
hlt
call
movsl
nop
mov
lcall
popf
mov
jno
and
nop
imul
cmp
and
or
lods
fldl
iret
inc
sub
push
mov
inc
sub
mov
mov
aaa
dec
fwait
cmpsl
in
sub
out
pop
sbb
rcrl
and
inc
popf
mov
xlat
mov
pop
pop
daa
ja
and
sub
ds
std
sti
pop
js
lock
xchg
lret
xor
cmp
aaa
jp
imul
test
and
push
jg
arpl
out
inc
cli
cld
inc
repz
mov
cltd
xor
xor
sub
inc
mov
dec
dec
push
pop
xchg
das
mov
test
clc
xor
insl
and
in
insb
pop
int3
sti
and
jns
ds
cli
add
movb
es
btc
addr16
jb
sub
cwtl
cmp
insl
mov
mov
cmc
jnp
aad
sub
dec
test
jbe
inc
inc
adc
aam
dec
fdivrp
int3
push
add
outsl
pop
orb
in
sub
xchg
pop
push
hlt
cmp
rcll
add
mov
push
sbb
outsb
jb
lods
std
cmp
xchg
push
fisubl
cltd
xlat
lcall
scas
pop
aas
pop
out
or
pop
movsb
je
add
out
dec
out
xor
fsubrs
add
push
stos
sub
mov
adc
in
jmp
jbe
xchg
orl
sbb
pop
sbb
sub
aad
lea
mov
loopne
out
xchg
sbb
and
in
xchg
sub
jl
add
scas
or
outsl
jp
jle
and
ss
lds
leave
leave
xor
sub
test
cmp
and
mov
in
lcall
scas
lods
sbb
mov
xchg
fnstcw
fiadds
fadds
cmp
add
sbb
fsubr
xchg
iret
icebp
pop
xor
cmp
mov
xor
out
push
sub
jne
push
fnstenv
into
andb
data16
pop
in
out
dec
popf
cmpsb
movsb
gs
push
xor
clc
lret
pop
sarl
in
xor
mov
in
lea
jbe
lods
xchg
pop
dec
xchg
out
nop
sbb
addb
sub
pop
xchg
fldcw
jnp
mov
add
mov
out
inc
mov
pop
jmp
pop
xchg
imul
shr
test
xchg
jns
mov
push
or
jg
cmc
test
pop
mov
pusha
pop
roll
sub
push
lret
sub
xchg
push
xchg
mov
mov
or
lret
fsts
and
iret
push
test
into
sub
fucomp
add
aas
push
mov
outsb
ljmp
pop
sahf
ja
cmpb
aaa
test
arpl
xlat
mov
xchg
sbb
jo
imull
mov
sbb
popa
pop
or
inc
flds
pop
and
je
movsb
jmp
jmp
and
outsb
or
cmp
adc
aad
jne
jge
sbb
jb
mov
sub
adc
jge
adc
call
sub
add
push
in
cld
add
cmpsl
xor
push
iret
popa
int3
hlt
lods
popa
mov
lahf
sbb
mov
pop
xor
test
or
popa
inc
pop
mov
ja
movsl
lret
dec
xor
sbb
mov
fdivl
or
add
mov
mov
outsl
insb
or
xor
sub
aad
and
fldcw
sub
insb
loop
ret
cmp
or
arpl
inc
lret
nop
fnsave
lods
sarl
sub
and
jmp
xchg
pop
mov
mov
and
xorl
les
dec
in
mov
jle
mov
sub
mov
rolb
cmp
pusha
lret
xchg
jecxz
imul
scas
test
out
cmp
fsub
jp
mov
dec
jg
mov
int
adc
dec
aas
jl
inc
out
mov
aad
and
mov
xchg
add
in
add
inc
adc
notb
stc
int3
pop
gs
lahf
add
sub
xchg
dec
sbb
pusha
and
decl
cmpb
mov
push
jb
imul
pop
int3
pop
xor
fldl
pusha
and
adcb
lods
sbb
je
and
fwait
das
mov
out
or
mov
and
pushf
cmp
data16
mov
in
mov
jae
mov
bound
out
lcall
frstor
test
add
pop
pusha
out
push
out
leave
sti
sbb
ss
addr16
lret
je
pop
fwait
jno
sarb
xor
or
cli
push
xchg
sub
mov
fistps
fstp
clc
jp
popa
mov
xchg
stos
inc
xor
cmc
stos
mov
add
mov
pop
rclb
push
lods
push
std
int
cmp
int3
cmp
outsl
outsb
js
pop
pop
mov
lds
push
stc
testl
push
jne
inc
fidivrl
popa
pop
jns
mov
mov
xchg
rolb
mov
fwait
ljmp
and
lret
cld
jp
push
ljmp
and
mov
data16
push
sbb
fcmovnb
shll
cmp
in
dec
daa
sub
push
cli
movsl
xchg
cmp
cmpsb
pop
dec
cmp
outsl
adc
les
push
pop
out
sub
loopne
cmc
sub
iret
mov
jae
call
lcall
cmpsl
mov
mov
call
adc
push
test
adc
lahf
data16
bsr
stos
mov
stos
popf
push
sub
cli
gs
jno
dec
pop
or
mov
aaa
xchg
mov
xchg
inc
cli
xor
test
ja
pop
div
rcr
leave
and
cmpsl
mov
push
fsubrs
lock
dec
xor
add
push
fistpl
jmp
cli
aam
aaa
adc
lcall
or
push
jmp
out
lods
ds
sbb
pop
push
fwait
lock
sbb
xchg
cltd
push
loopne
daa
stos
clc
orb
gs
ljmp
sbb
rorl
mov
mov
pop
add
ret
fwait
adc
or
mov
mov
std
imul
shl
test
jo
std
std
or
xchg
add
mov
sti
test
cwtl
dec
das
sub
sub
fildl
sbb
dec
int3
pusha
mov
sub
xchg
add
adc
repnz
loope
sbb
adc
fmuls
mov
fwait
dec
sub
or
jmp
mov
push
pop
int
lea
sub
out
xor
push
pop
jp
insb
lret
lock
pusha
cmpl
and
adc
cmp
pop
push
lock
and
jo
imul
ljmp
jp
xor
shll
adc
sahf
jmp
loope
sub
pop
test
add
test
in
mov
inc
mov
cmp
lds
dec
scas
pop
add
shrl
push
or
out
mov
bound
orl
addr16
and
ljmp
jne
sbb
stc
xchg
push
repnz
clc
jns
incb
jnp
je
pop
jno
inc
dec
add
int
add
imul
jp
ja
cltd
mov
add
mov
jns,pn
sahf
mov
pusha
jae
leave
lods
mov
lahf
mov
stos
in
adc
jg
das
sarl
push
gs
rcll
jnp
push
sub
fstps
cmc
cltd
dec
mov
pusha
add
jp
clc
hlt
in
or
stos
fsubr
push
and
pop
scas
sti
sbb
push
loope
sub
cmp
or
fwait
jae
cmp
push
mov
mov
popa
into
adc
imul
dec
xchg
mov
aad
dec
and
mov
fdivrl
mov
and
pushf
imul
enter
inc
add
test
mov
xor
mov
jb
test
shrl
test
into
adc
push
push
fisubrs
jmp
cmp
cmp
mov
dec
adc
jo
pusha
das
test
lcall
leave
xchg
inc
shrb
sbb
dec
test
adc
xchg
sub
sarl
inc
mov
addr16
dec
mov
cmp
std
lret
arpl
or
jge
scas
in
cwtl
sbb
lock
stos
pop
xchg
mov
fldcw
in
daa
movsl
pop
or
ljmp
xchg
adc
out
sub
xchg
hlt
fs
enter
arpl
jg
imul
cmc
pop
jmp
lods
dec
std
sbb
and
cmc
scas
orl
xor
push
jo
sub
xchg
jmp
adc
sti
mov
addb
rcll
xor
fisttps
mov
les
push
stos
mov
mov
add
sahf
pop
pop
iret
cmpsl
xchg
in
push
sbb
push
lock
add
mov
xor
je
push
dec
sub
add
rcl
push
sarb
test
push
mov
insb
iret
insb
faddl
and
inc
js
dec
in
pslld
repnz
and
inc
push
or
es
adc
mov
jnp
gs
xchg
clc
mov
xlat
add
sub
mov
out
or
cmp
test
fst
test
xor
movsl
shlb
xor
repnz
cmp
dec
in
dec
jle
lods
pop
pop
sub
dec
xor
ljmp
mov
dec
mulb
and
cs
sbb
xchg
out
add
dec
add
adc
scas
mov
xchg
mov
and
hlt
jp
fucomi
add
jo
mov
adc
inc
xor
and
jno
mov
jp
push
lahf
mov
sub
test
ss
push
and
cld
lret
lret
xor
sub
mov
jbe
and
jb
mov
pop
xchg
mov
cmp
dec
xchg
stos
arpl
pop
or
stos
sub
adc
testl
frstor
bound
fsub
mov
jb
add
shl
cmc
jae
xchg
fsubr
xchg
shl
lds
repnz
and
xor
inc
push
xchg
call
mov
loop
sub
push
idiv
jl
xchg
pop
mov
mov
gs
out
shlb
cmpl
popa
or
ret
jb
mov
lahf
sub
adc
sub
dec
adc
pop
int3
mov
add
insb
xchg
push
mov
popf
cwtl
push
xor
dec
mov
xor
ret
xor
add
mov
pop
loope
dec
jbe
sbb
or
dec
mov
cmp
int3
subl
out
rcll
adc
addr16
mov
ffree
hlt
jp
mov
shrl
daa
inc
popf
movsb
and
pusha
arpl
lods
push
loop
mov
xor
out
popa
adcl
outsb
lahf
fdivs
inc
adcl
sbb
cmp
mov
jle
cmpsl
dec
push
fxch
repnz
xor
rep
ret
xchg
sub
test
mov
or
cli
repz
repz
jno
adc
in
jp
mov
mov
std
mov
adc
mov
int3
mov
cmp
lds
pop
movsb
out
icebp
push
inc
cmpsb
call
dec
jle
adc
dec
xchg
add
pop
pushf
xchg
cmc
insl
jbe
and
cli
sub
inc
daa
inc
cmp
pop
add
aaa
and
push
test
and
xchg
jnp
popa
pop
add
cmp
into
jg
mov
cmp
pop
decb
dec
int3
pop
mov
xor
out
sahf
jbe
mov
adc
imul
inc
adc
testl
stc
aaa
fdiv
adc
pop
and
idivb
shrb
push
push
out
mov
out
xor
data16
and
stos
pop
addb
push
ret
mov
push
mov
lods
add
gs
mov
push
test
jg
aam
das
js
pop
arpl
push
nop
stos
mov
mov
in
xor
insb
les
int3
pop
push
pop
sti
mov
popa
mov
lods
enter
mov
movsb
push
outsb
fs
mov
mov
dec
jl
xchg
xor
loope
data16
push
pop
or
jo
or
add
cs
inc
lds
mov
lahf
mov
push
lods
flds
xlat
xchg
cwtl
add
lahf
cmp
bound
rorb
lods
cli
movsl
or
iret
adc
out
ror
test
adc
adc
aas
stc
push
inc
fs
out
dec
loop
push
lcall
scas
fs
xchg
xor
inc
popf
sbbb
jge
repz
clc
fnsave
mov
add
dec
and
cmc
int3
into
lock
dec
outsl
dec
xor
fisubrl
pop
shlb
adc
pop
loope
add
pop
out
je
pusha
xor
adc
cs
cmp
enter
mov
mov
cld
mov
mov
outsl
inc
cmpsb
fwait
out
mov
shrb
cmc
minps
pop
filds
and
pop
into
cmovbe
push
mov
push
insb
jecxz
dec
cwtl
movsb
gs
movsb
or
mov
lcall
mov
pop
and
jp
sbbl
mov
and
mov
lret
inc
add
repz
cltd
addl
daa
leave
or
or
cmpsb
sbb
add
fdecstp
js
je
test
push
xchg
sbb
jo
cwtl
pop
das
sub
xchg
cld
outsl
test
jns
add
sbb
add
push
and
pusha
aaa
xchg
mov
mulb
inc
pusha
xchg
imul
inc
les
mov
mov
int3
in
mov
hlt
fs
mov
dec
insl
fstpl
sbb
and
aaa
je
lretw
ss
jns
jle
pushf
adc
xor
fs
ficoms
pop
xor
xchg
mov
prefetchw
push
mov
stc
sbb
xchg
dec
fisubs
pushf
xchg
inc
adc
xchg
sub
mov
jg
mov
lcall
jae
fcoms
sbb
push
mov
inc
jb
in
lea
fstpl
xchg
daa
sbbb
inc
in
inc
add
movsl
mov
shrb
mov
mov
flds
sbb
sub
cmp
rolb
das
mov
mov
add
cmp
outsl
outsl
lock
xchg
and
pop
xor
add
addr16
cwtl
movsl
or
add
idiv
jnp
push
sbb
cwtl
ret
into
in
shl
sub
fcomps
xchg
outsb
and
mov
je
mov
and
enter
mov
xchg
xor
insl
add
stc
or
hlt
xor
fidivrl
bound
mov
cmc
loop
push
mov
fcompl
dec
inc
jle
icebp
shl
mov
lret
outsb
cld
stc
shll
pop
add
dec
lods
repnz
push
cmp
inc
adc
and
mov
pusha
inc
addr16
in
add
cltd
gs
cs
sarb
inc
mov
push
mov
int3
nop
push
add
and
mov
jl
divb
lahf
add
mov
push
jg
stos
and
test
xlat
fsts
test
cmp
xor
pop
sbb
aam
and
imulb
push
arpl
lock
iret
test
mov
and
popa
addr16
adc
pop
adc
mov
fnsave
push
rclb
sub
icebp
ret
sbb
movsl
push
push
ja
lret
sti
imul
test
sbb
std
pop
imul
sbb
push
jg
jne
gs
hlt
arpl
push
xor
sahf
das
jle
dec
pusha
xchg
adc
shrl
sarb
popf
ss
out
sbb
rcrb
sub
js
push
vmovlps
addb
push
test
mov
enter
das
gs
add
adc
xchg
cmpsb
xorb
pop
push
mulb
adc
adc
sbb
sbb
cltd
out
repz
adc
fwait
movsb
jecxz
mov
xchg
pop
fwait
leave
mov
clc
gs
pop
dec
mov
jnp
cmp
dec
sub
mov
jp
ss
mov
adc
push
stos
xchg
push
push
adc
xor
xchg
sub
leave
sti
mov
adc
adc
xor
fst
adcl
repz
loop
cmp
push
mov
dec
jns
jno
xlat
roll
and
js
mov
out
xchg
jne
idivb
lods
das
aaa
dec
fimull
mov
aaa
inc
stc
jb
xor
adc
arpl
sti
or
mov
jns
nopl
aad
add
mov
repnz
push
xorl
pop
xlat
lea
lcall
or
lahf
push
or
mov
aam
movl
xor
sub
sbb
orb
xor
out
inc
mov
std
stos
fidivrl
mov
dec
call
xlat
sbb
bound
push
jmp
rcll
stc
into
or
jne
lods
xor
inc
std
mov
mov
rorl
call
lahf
jnp
testl
cmp
sub
repnz
enter
sarb
imul
sbbb
mov
xchg
test
xchg
mov
jbe
pop
sbb
jl
cmp
pushf
add
enter
adc
into
add
pop
mov
sbb
xrelease
ja
pop
aam
pop
sub
test
push
xchg
xchg
jno
push
mov
imul
sbb
imull
dec
mov
cltd
mov
fs
jp
cmp
mov
push
inc
imulw
addl
imul
bound
adc
nop
daa
inc
in
push
fsubrp
or
cmp
stc
jg
sub
dec
testl
mov
or
adc
pop
clc
outsl
sbb
cmp
fidivs
call
jle
mov
movsb
out
or
sub
inc
xchg
lods
xor
ljmp
sub
stc
pop
fwait
cmpsb
sti
rolb
jmp
sbb
push
icebp
push
xor
cmp
or
mov
push
fadds
sub
mov
imul
jo
popa
sbb
push
dec
outsb
imul
add
and
enter
ret
mov
dec
cmpsl
aaa
pop
rclb
clts
cwtl
out
lcall
cmp
aam
push
push
lea
push
or
neg
push
mov
cmp
inc
jmp
out
sbb
insb
sub
test
sub
imul
sahf
sbb
arpl
mov
mov
xchg
fildll
xchg
mov
ljmp
cmpsl
xlat
clc
adc
jns
sub
add
movsl
sub
jae
xor
push
popf
adc
sub
hlt
jle
enter
dec
cld
or
sbb
inc
rcrb
push
fmuls
out
cmc
sub
dec
sbb
lret
push
imulb
mov
and
pop
xor
push
out
mov
sub
scas
dec
add
js
xchg
xchg
aam
sub
push
testl
in
aad
adc
inc
jg
mov
jne
lods
mov
inc
cltd
xchg
inc
repnz
inc
mov
push
mov
cld
lret
pop
orl
imulb
pop
xor
sub
cltd
jmp
cmpsl
jo
dec
les
shll
dec
fists
in
mov
push
popa
pop
cwtl
xchg
mov
mov
scas
mov
movsl
mov
pop
lcall
arpl
andb
setbe
addr16
lods
jge
mov
sub
leave
scas
addb
loop
aas
adcl
pop
sbb
and
xchg
inc
mov
push
inc
hlt
pop
loopne
pop
inc
mov
jecxz
hlt
inc
jns
fisubl
and
mov
cs
push
xchg
cmp
lock
dec
rorb
push
imul
lods
pop
pop
xchg
dec
jnp
std
pop
mov
sub
arpl
sub
sahf
xchg
cmp
mov
enter
outsl
fisubrl
xchg
inc
stc
ret
sti
mov
mov
mov
cli
iret
cmpsl
or
test
ss
aaa
rol
addl
incb
popf
lret
add
iret
push
ret
cmpb
xchg
addr16
mov
loopne
sti
repz
push
or
jbe
std
push
cwtl
mov
movsb
std
ret
pop
xor
insb
cli
xchg
inc
test
rorb
adc
mov
and
jge
mov
loopne
movb
cmp
jl
scas
shlb
int3
pop
xlat
shrb
dec
shrl
in
xor
orl
mov
adcl
inc
jecxz
insb
call
loop
push
fisubrs
xorl
lods
sbb
add
xchg
int3
rcrb
or
inc
sbb
mov
add
mov
add
pop
mov
scas
test
jo
cmc
sub
mov
mov
insl
jmp
insb
iret
in
lods
mov
popf
mov
hlt
mov
js
xchg
or
imulb
adc
stos
adc
mov
icebp
shlb
aaa
inc
mov
sbb
pusha
outsl
fldcw
and
mov
orl
push
add
cmpsl
jg
lods
test
fildll
cmp
mov
cld
cmp
cmpsb
sub
jmp
jne
filds
mov
xchg
push
push
shlb
test
stc
andl
push
pop
ds
popa
cmp
jno
cli
out
xor
cld
fwait
ror
jb
mov
xorl
xchg
sub
mov
mov
test
cmp
jbe
ret
mov
inc
add
or
shrl
cmp
cmpsb
cli
jne
insl
andb
mov
je
push
frstor
dec
fsubrs
or
xchg
ljmp
adc
mov
lock
int
inc
mov
setp
push
cmp
dec
mov
mov
arpl
inc
cmp
das
int
fadds
jecxz
mov
jmp
loopne
test
call
addl
movq
ret
xchg
gs
out
pop
jnp
repz
mov
daa
xchg
out
js
addr16
and
or
mov
jns
cs
xor
xchg
adc
stc
shlb
cmpsl
add
push
and
mov
test
int3
cmp
idivl
rorb
mov
mov
loope
ss
repnz
test
xchg
and
popf
sub
ss
bound
jae
and
adc
inc
popf
xchg
fdecstp
lcall
negb
stos
lods
push
pop
pop
xchg
jno
jg
xor
jnp
add
mov
out
lods
or
stc
mov
popa
lds
in
adc
push
les
add
cmp
mov
jns
es
shlb
xchg
mov
lock
ljmp
fidivrl
inc
or
mov
imull
adc
mov
jns
popf
les
xchg
jae
bound
js
and
mov
cmpsl
testl
mov
movsb
int3
daa
adc
shl
inc
mov
sub
test
sahf
push
jmp
sub
loope
pop
mov
rcll
jmp
xor
or
in
xchg
pop
and
add
iret
insb
test
sbb
aaa
mov
or
out
mov
mov
sbb
mov
mov
data16
scas
dec
and
pop
or
repz
loop
sbb
ret
inc
dec
lret
loope
addr16
mov
sbb
sub
mov
mov
jnp
outsb
cmpsl
adc
cmp
in
and
mov
gs
pop
xlat
inc
mov
lcall
bound
xor
loopne
sbb
pop
inc
faddl
push
inc
bnd
mov
sbb
adc
mov
mov
aaa
push
xchg
cmp
jmp
mov
orb
pop
push
popa
in
and
sbb
pop
sbb
out
add
cmc
pop
stos
idivl
rcll
repz
mov
imul
cmp
pop
mov
repnz
int
stc
aad
add
add
sbb
sub
jmp
in
dec
ds
add
out
shlb
loopne
sub
push
pop
testb
or
fwait
xor
xor
mov
lods
pop
jl
fnstcw
lds
inc
jle
sub
mov
sahf
sbb
fwait
inc
dec
or
frstor
call
outsb
mov
or
xchg
daa
out
or
push
xchg
imul
lahf
addr16
cmc
sbb
js
xchg
lahf
nop
xchg
test
mov
sbb
mov
dec
sub
orl
hlt
xlat
mov
pushf
add
fs
inc
fsubrl
out
jp
mov
std
imull
jg
and
xchg
xchg
sbb
adc
ret
jecxz
loope
call
loopne
fs
mov
push
add
movsl
xlat
fstpl
rcl
add
lds
adc
sbb
push
popf
jl
int
out
shrb
imulb
mov
xchg
lods
and
loopne
clc
pop
lret
push
mov
jl
mov
push
call
into
pop
push
sbb
or
cwtl
dec
jle
dec
int3
xchg
in
cmpsl
sbbl
movsb
cmpsl
in
cmpl
stc
adc
lods
jecxz
movsl
in
cmp
mov
jle
mov
or
cmp
in
icebp
add
jg
mov
in
jmp
leave
outsb
in
hlt
pop
in
mov
test
cmp
shll
roll
xor
push
imul
inc
insl
pop
ss
lahf
ja
test
sub
pusha
or
ret
in
les
imul
daa
inc
pop
repnz
hlt
outsl
cmp
inc
push
jno
mov
adc
outsb
push
push
pmullw
mov
je
cmc
or
jb
sbb
or
cmpsl
int3
out
lods
xchg
outsb
cmp
jmp
mov
dec
popf
mov
and
cltd
xor
jne
data16
fcmove
lret
movsl
ror
push
mov
sbb
int3
pop
dec
pop
aam
mov
in
ja
xor
and
jecxz
cs
addr16
mov
adc
jge
out
adc
movsl
mov
ss
cmpsl
lods
popa
ret
push
push
sar
shll
fwait
fwait
push
repnz
stc
inc
fidivrs
and
and
jns
repnz
and
fwait
cld
dec
and
outsb
sbb
mov
ret
jl
sub
adc
or
sub
add
ds
and
jl
push
ret
push
xchg
jae
in
inc
push
mov
pop
lods
fst
xchg
jo
rcll
add
in
cwtl
mov
xor
in
out
test
push
test
fidivrl
les
cs
icebp
cmp
sub
push
imul
adc
andl
mulb
cmp
sub
clc
inc
fisubrs
in
stos
imul
imul
jg
mov
or
adc
xchg
and
mov
int
stos
cmpsl
mov
imul
mov
sti
lahf
xchg
mov
jns
add
in
jo
mov
fdivrp
jmp
inc
ret
roll
inc
repz
mov
fisubrl
dec
mov
sti
push
dec
dec
push
jbe
mov
test
out
loopne
mov
xorl
push
cmp
std
cli
fdivs
lds
push
sbb
dec
jg
xchg
push
xor
fsubrl
mov
dec
iret
cmp
loope
mov
mov
dec
bound
mov
add
mov
xor
jns
sbb
jg
mov
fistpl
ja
lds
daa
xor
scas
repnz
push
ss
lahf
push
stos
mov
roll
add
sbb
mov
add
pop
ja
ss
inc
scas
fsubrl
loopne
stos
loopne
movsb
outsl
xlat
mov
pop
sub
or
add
inc
ret
fs
mov
shll
mov
mov
xor
pop
bound
add
daa
mov
adc
pop
xlat
or
rcll
mov
add
or
add
jbe
ret
xorl
sar
dec
add
jnp
mov
jl
push
push
xchg
adc
cmc
fnstcw
aaa
pmulhuw
pop
and
lea
push
icebp
js
gs
aas
aas
pop
cmpsb
pushf
repnz
out
out
mov
movsl
shrb
mov
aad
ror
inc
popf
icebp
mov
jp
xor
sbb
cmp
fmull
add
mov
mov
out
stc
popf
and
rep
popa
sbb
aad
cmp
or
fcomp
enter
in
jne
sub
cmp
imul
mov
dec
adc
movsl
jo
lock
sub
mov
xchg
sbb
aas
inc
je
mov
fs
test
dec
push
xchg
dec
btr
aaa
aaa
shlb
out
out
andl
adc
ds
fsubs
dec
mov
int3
lods
jmp
adc
fidivrl
mov
fdivr
pop
mov
das
pop
jmp
pushf
xor
cltd
into
pop
pop
loopne
mov
xor
popa
xor
sahf
out
dec
movsb
pushw
test
sub
idivb
mov
jle
or
fsubl
xor
les
mov
dec
xor
les
jne
and
push
push
pop
and
mov
loop
hlt
xorb
or
push
aam
sarb
sbb
pusha
cmp
sbb
lds
cmpsb
dec
add
dec
sbb
rcr
shll
jnp
xchg
movsl
fdivrs
fcoml
inc
or
jno
sub
sub
das
xor
xchg
mov
nop
imul
cmp
cmp
and
pop
sub
lret
cmp
sarl
push
test
mov
or
xor
add
jg
sub
pop
std
int
popf
dec
cmp
or
bound
and
out
mov
sbbl
lret
dec
data16
push
jmp
push
cltd
scas
jbe
fwait
cmp
fistl
inc
push
mov
enter
out
cmp
std
test
cmp
dec
fidivrl
push
ljmp
dec
imul
sub
aas
push
cmpl
rol
xchg
pop
test
cmp
xchg
jbe
std
or
subb
jl
nop
or
xlat
adc
cli
pop
test
js
pop
dec
mov
std
lods
rolb
outsl
and
icebp
fiadds
pop
push
xchg
add
mov
xor
mov
push
sub
lea
add
popa
cmpsl
sbb
popf
les
jns
mov
jne
fsub
mov
or
int3
dec
push
fsts
andb
inc
outsl
and
mov
pop
pop
xchg
outsb
jbe
inc
sub
jo
pop
lret
rolb
push
ficompl
mov
testl
icebp
repnz
ljmpw
push
lea
jmp
push
and
cmp
sbb
ja
addb
xor
sub
dec
mov
leave
scas
xchg
test
in
in
xor
lods
xchg
push
fs
sub
pop
scas
push
xchg
push
pop
fistl
or
ror
in
fdivrs
mov
dec
sbb
sbb
popa
icebp
enter
data16
into
lods
inc
push
push
inc
lcall
lds
stos
jle
pop
or
scas
sbb
add
lret
into
lock
and
pushf
out
adc
inc
and
xchg
add
push
movsl
loope
push
mov
jo
test
insb
push
nop
stos
jae
and
jle
xbegin
mov
adc
pop
xorb
and
sti
mov
mov
push
fwait
adc
outsl
xor
je
adc
aam
or
cmp
push
adc
loop
dec
add
lds
int3
add
lock
xchg
and
stos
syscall
xchg
dec
adc
xor
mov
dec
jp
ss
rorb
clc
inc
adc
sub
mov
xor
arpl
leave
adc
add
ljmp
les
daa
ret
repz
inc
sahf
in
jae,pn
xlat
adc
flds
sub
dec
cltd
sbb
in
popa
loope
jl
lahf
push
call
mov
sbb
lret
jno
pop
iret
cmpsl
cmp
or
cmp
adc
inc
shrl
xchg
mov
repnz
mov
int
test
cld
decb
cwtl
mov
xchg
stc
sub
cmp
mov
lea
mov
jecxz
mov
test
mov
sahf
xlat
or
inc
mov
push
sbb
loope
jbe
insb
lds
mov
sahf
insb
cltd
xlat
fidivs
mov
sbbb
pop
rorb
mov
pop
test
xor
pop
pop
lock
cltd
push
sar
int
jecxz
inc
cwtl
loope
xor
loop
xchg
xchg
movsl
push
inc
cmp
xor
sbb
aaa
aaa
es
ds
mov
movsb
inc
push
jp
loope
sti
cmp
in
popf
jbe
sbb
icebp
mov
jno
jg
xchg
mov
sbb
pop
shl
mov
add
mov
jmp
and
ret
push
test
mov
push
pop
imul
jl
xchg
shrb
sbb
rcr
cs
mov
call
in
mov
mov
in
iret
jecxz
addr16
sub
mov
lret
xchg
fwait
int
in
aam
mov
gs
out
pause
lret
lret
jb
fwait
jg
js
inc
stc
sub
in
loopne
pop
mov
sub
iret
test
nop
into
in
mov
ljmp
adc
jmp
inc
cmp
jp
adc
fs
mov
sbb
lcall
jb
fildl
sub
mov
push
scas
in
push
mov
jmp
hlt
test
mov
sar
mov
jmp
std
mov
sub
cmp
fwait
jl
stos
and
inc
or
mov
sub
lods
xor
je
fidivs
xlat
pop
xchg
mov
add
mov
out
fstpt
rorl
out
sbb
addr16
push
cmpsb
fcmovnb
or
xor
hlt
out
xchg
notl
iret
add
xor
push
cmp
lret
push
lds
xlat
xor
popl
les
test
pop
in
jg
adc
mov
mov
fcmove
vpmacsdqh
jmp
dec
clc
cmpsl
fbstp
out
pop
xchg
insl
adc
lds
mov
mulb
negl
sub
push
pop
outsl
mov
nop
lds
ret
call
fidivrl
movsb
mov
sahf
sbb
outsl
sti
lock
adc
push
lock
mov
sbb
loope
cs
pusha
arpl
cwtl
add
cmc
xchg
add
aam
inc
test
adc
jmp
jb
loope
nop
movb
xchg
jo
cmp
sub
cs
mov
xor
iret
out
mov
xchg
adc
adc
and
add
idivl
in
jge
ds
aad
aad
jnp
dec
out
cmpsb
cmp
adc
mov
mov
xor
push
adc
je
in
sub
dec
mulb
mov
mov
stc
fmul
sub
scas
or
imul
xchg
lds
mov
jae
cmp
cmpsb
mov
stos
dec
fidivl
pop
ror
scas
add
or
into
add
pop
rolb
les
mov
adc
in
out
fbstp
test
adc
stos
movsl
cmp
std
pushf
push
gs
and
push
sub
pop
mov
xchg
test
lret
cmp
lahf
lcall
inc
in
mov
js
add
inc
push
pop
pop
mov
pusha
sbb
popf
pop
push
inc
mov
xchg
imul
add
fidivl
lahf
vdivpd
cs
orl
cmp
push
data16
out
and
xor
dec
mov
or
test
lret
rcl
sbb
mov
push
mov
push
push
mov
js
mov
xor
push
mov
imul
pusha
pop
add
gs
arpl
nop
pusha
xor
mov
int
mov
dec
hlt
mov
pusha
mov
xchg
addr16
push
in
dec
add
shrl
mov
leave
lods
and
add
and
sbb
cmc
ljmp
in
lahf
loop
je
imul
aad
in
xchg
add
je
sub
fidivrs
mov
adc
lret
and
push
sub
dec
or
pop
jge
das
cmpsl
adc
les
dec
mov
movsb
cmp
jp
xchg
insl
or
xor
dec
mov
add
enter
adc
movaps
aas
pusha
popa
or
dec
addr16
ds
sub
mov
jp
adc
add
cmp
and
test
aaa
fbld
jbe
icebp
inc
cmc
ljmp
xchg
jno
push
add
jp
dec
ss
int
lods
int
xor
in
and
xchg
sbb
loopne
jmp
lea
pop
dec
jecxz
test
cwtl
xor
and
add
int
xor
mov
test
aas
pop
in
lea
aas
scas
fs
push
push
or
xorb
and
mov
xchg
jge
mov
les
mov
push
sub
cli
pop
es
out
and
test
push
push
adc
fisubrs
jno
test
test
push
fnstenv
jmp
stc
and
sbb
and
aaa
and
sbb
dec
mov
int
mov
adc
repnz
mov
mov
add
and
popa
jp
fdivs
pusha
rcrb
movsb
dec
and
xchg
xchg
popa
loop
cmp
shrl
adc
push
inc
repz
adc
sti
sti
push
dec
mov
lcall
not
inc
dec
or
mov
popa
dec
dec
cltd
mov
xchg
pop
pop
sti
das
dec
xor
leave
sarb
sub
addr16
sub
sub
mov
rclb
cmpsl
sub
outsl
and
mov
push
mov
clc
cwtl
outsl
push
enter
vxorps
xor
xor
sti
push
pop
mov
push
iret
jmp
xor
cwtl
sub
xchg
pop
pop
popf
sbb
insl
into
xor
in
nop
in
mov
mov
add
mov
mov
mov
das
xchg
mov
lret
and
push
cmp
sub
daa
mov
mov
and
sbb
out
inc
lods
shlb
mov
xor
fdivrs
cmpsb
call
iret
inc
mov
sub
mov
rorl
xor
fcmovbe
jp
xchg
scas
xchg
push
push
add
jp
or
dec
and
ret
push
fadds
adc
cmpsb
pusha
jmp
das
or
ja
mov
loopne
jmp
fisttpll
pop
mov
rorl
pop
mov
in
add
mov
cli
jle
xchg
push
lock
add
adc
xchg
pop
sar
push
xor
mov
dec
adc
call
nop
mov
js
mov
lret
dec
push
sub
mov
cmpsl
add
dec
jae
popa
push
push
sub
scas
push
aaa
je
iret
icebp
ja
add
xor
sti
mov
frstor
je
or
dec
mov
dec
stos
shr
inc
enter
sahf
js
xor
ror
dec
ljmp
mov
sbb
cmp
out
xchg
cwtl
lcall
xor
or
pop
adc
gs
or
es
xchg
bound
mov
cwtl
mov
jp
mov
in
call
and
stos
hlt
pop
shll
cmp
mov
mov
lock
jns
jno
push
in
iret
sbb
stos
cmp
faddl
sub
fbstp
xchg
or
cmp
mov
nop
scas
add
push
mov
dec
add
xor
aad
inc
xor
jmp
xor
std
inc
sub
aam
pop
lds
and
mov
jmp
mov
outsl
fcmovbe
mov
mov
outsb
repnz
push
jecxz
push
xchg
jns
xchg
pop
xchg
sub
rorl
mov
call
cli
add
jp
xlat
popa
push
scas
dec
cs
mov
or
test
add
pop
mov
iret
imul
int
cld
sbb
rclb
xor
lahf
outsb
add
sub
mulb
rcrb
or
test
mov
js
rolb
mov
add
repnz
dec
subl
loop
add
inc
adc
mov
das
cmpsb
lods
fsubr
sub
ret
outsl
xor
in
sbb
sti
or
insl
pop
add
mov
lds
fwait
inc
inc
xchg
dec
repz
loope
neg
inc
cli
daa
mov
into
jnp
xor
loope
jne
jbe
insb
xor
loope
push
fdivs
jo
pop
inc
inc
jbe
lds
icebp
and
xor
mov
dec
imul
sbb
push
aas
mov
xchg
rcll
jp
cmp
adc
lcall
iret
xor
popf
lahf
ds
outsl
cmp
out
ds
enter
fxtract
mov
repnz
xchg
mov
sub
or
adc
inc
pop
outsl
arpl
cmp
jp
int3
js
enter
pop
fisubrl
xchg
jo
mov
sbb
lahf
pop
ffreep
mov
scas
jl
ds
lock
push
and
divl
dec
shll
in
jp
mov
insb
imul
rcrb
cmp
sbb
mov
negl
mov
mov
fstpt
ja
inc
and
mov
es
out
ljmp
shlb
mov
outsl
sbb
mov
in
sub
loop
daa
sti
ja
daa
jnp
pop
out
icebp
xchg
pop
lret
sbb
iret
rcl
mov
cld
xor
fwait
inc
add
fwait
movsl
ss
adc
js
xor
fwait
jle
stos
jbe
aad
lock
mov
mov
ss
sarb
pop
dec
mov
sub
out
sub
mov
mov
scas
sbb
mov
inc
and
clc
push
pushf
in
rolb
aam
out
push
dec
pushf
enter
jle
or
outsb
addr16
into
ljmp
xchg
adc
adc
std
sub
pushf
sbb
xchg
sub
mov
loop
daa
cmp
ja
insb
push
lret
add
popf
stc
cmpsb
adc
adc
test
or
ja
sub
rcr
pop
insb
mov
pop
jbe
push
push
cld
jecxz
sub
add
and
aas
mov
mov
into
push
jno
dec
movsl
mov
shlb
out
mov
in
jge
pop
sub
dec
pushf
mov
pop
mov
roll
rolb
rolb
dec
xlat
sbb
movsb
cmp
or
pop
pop
jne
iret
xlat
nop
nop
pcmpgtw
ficoml
jb
xor
inc
mov
mov
push
inc
call
or
lahf
nop
add
movsb
ljmp
xlat
jb
lret
pop
pop
sbb
cmp
rolb
sbb
enter
xlat
sti
jmp
push
gs
inc
daa
movsb
in
mov
push
test
xchg
mov
mov
push
ret
lret
loopne
loopne
xlat
mov
pop
xor
mov
mov
add
in
push
mov
jp
pop
or
imul
pop
fstpl
decb
xchg
mov
jmp
mov
sbb
xor
loopne
mov
into
sub
outsl
rolb
movsl
adc
and
mov
inc
cmp
insl
mov
inc
int3
dec
inc
cmpb
test
mov
pop
and
ljmp
mov
adc
fnstsw
sub
in
xchg
out
mov
repz
leave
jne
call
jae
scas
mov
add
jp
cmp
push
push
ja
popa
out
and
or
test
dec
xor
cmpsl
pushf
lea
sub
jno
xchg
lea
cmp
jl
cmc
add
push
stos
rol
inc
or
mov
sub
mov
fiadds
lret
mov
cmp
push
in
mov
mov
or
push
daa
dec
jecxz
imul
in
ja
add
or
in
jno
xor
jae
sub
add
inc
push
xlat
aas
xchg
mov
cmp
mov
movsl
int
lods
cli
or
cmpsl
jmp
stos
xor
out
mov
pop
loopne
scas
dec
pop
cltd
sub
lahf
add
ljmp
test
mov
je
nop
push
lahf
sbb
sub
dec
addr16
dec
lcall
out
daa
sub
loope
sbb
cli
lock
jg
and
xor
mov
in
outsb
pop
sbb
and
lret
dec
imul
hlt
testb
ss
ret
pop
dec
push
add
popf
mov
mov
adc
cld
sub
sbb
mov
jbe
inc
pop
cmpsb
inc
enter
pop
sti
int3
jne
test
sarl
add
push
xchg
mov
add
jb
cld
jl
rep
mov
lea
sbb
jge
comiss
lods
mov
xchg
sub
inc
xor
pop
mov
andb
mov
cli
fmuls
sub
test
insl
and
or
ret
je
lds
out
int
and
dec
out
cmc
cmp
mov
mov
cld
and
mov
jecxz
insl
cs
lret
mov
test
cmp
gs
dec
pusha
push
xchg
pusha
outsl
mov
mov
clc
xchg
inc
xrelease
and
mov
adc
mov
nop
ja
cmp
vpshuflw
dec
mov
sbb
push
js
pop
cwtl
adc
js
cli
clc
mov
or
aaa
pushf
mov
pop
pop
adc
dec
mov
mov
mov
lods
movsl
dec
mov
jo
xchg
and
fwait
or
sbb
in
ficomps
pop
das
xchg
mov
fbld
in
fsubrs
rcrl
test
xor
jno
scas
scas
jle
sbb
fcomi
mov
pop
lahf
push
loope
icebp
stos
mov
aad
inc
sbb
cmp
xor
out
stc
nop
sbb
and
push
cld
in
jg
dec
fmul
stc
loopne
cs
sbb
mov
cmp
repz
dec
in
sti
vpmaddwd
sub
ljmp
pop
mov
sahf
sub
outsl
xor
enter
mov
mov
cmp
lock
imul
test
push
scas
test
mov
pop
or
aaa
sti
addr16
daa
adc
arpl
aam
xor
dec
cmp
movsl
push
das
or
jp
push
push
ss
and
mov
xchg
push
jle
test
aam
jge
lods
fcoms
fs
es
cltd
dec
clc
out
sti
dec
scas
pusha
ss
addr16
std
outsl
jmp
mov
push
int3
add
pop
imul
fwait
shlb
cwtl
push
dec
fbstp
cmp
and
xor
xor
rcll
xchg
pop
mov
xorb
faddl
xor
out
mov
sub
cli
adc
sbb
push
add
cmpsb
push
je
mov
jns
ja
cmpsb
sub
pop
cmp
decl
stos
jl
dec
dec
inc
jae
or
pop
out
repz
int
aad
imull
pop
fcompl
cli
jns
dec
lret
mov
cltd
xor
leave
lds
and
enter
mov
jp
loopne
loope
flds
popf
das
fisubl
mov
cmc
inc
sbb
mov
fwait
shl
mov
inc
cmpsl
fstpt
jge
fs
test
cmpsl
pop
mov
inc
mov
das
xor
and
movsl
cltd
insl
popa
cmp
push
mov
mov
jp
and
mov
xchg
test
jae
jmp
call
add
rolb
imul
sub
leave
out
mov
cmp
sbb
loope
pop
xchg
add
dec
dec
ret
jecxz
push
icebp
sahf
fildll
pop
repnz
fdivs
mov
sbb
sub
or
adc
inc
clc
xchg
xchg
int3
into
sbb
adc
jb
sub
sti
test
add
cltd
push
inc
pop
lret
jmp
lds
pop
shr
mov
popf
mov
fucomi
movsl
call
jg
xlat
mov
rcll
jg
iret
jl
aaa
mov
shrl
scas
scas
fistps
and
cmpsl
enter
dec
sti
adc
pop
cmp
setbe
mov
fcom
add
dec
subb
and
pop
enter
out
push
popa
dec
cs
repz
stos
sbb
push
imul
add
mov
out
pop
fcompl
cs
cmp
xchg
loop
xor
dec
push
jp
xchg
inc
in
imul
jmp
ds
arpl
push
roll
adc
rorb
push
fists
out
xchg
dec
rolb
pop
pop
and
cltd
cmp
fcompl
test
push
lods
ss
mov
add
aad
dec
mov
aam
dec
stc
pop
sbb
iret
mov
gs
test
popa
fisubl
fs
orb
mov
mov
jl
xor
stc
xchg
enter
jae
inc
lret
jge
dec
cmp
add
addr16
xchg
jp
ljmp
and
popl
dec
pop
xchg
mov
sub
jecxz
mov
mov
and
sbb
int
pop
or
sti
lods
aad
push
outsb
mov
mov
fdiv
xor
mov
pop
push
xchg
xor
movb
sahf
notb
mov
mov
adc
xchg
fists
xor
rcl
or
jne
adc
mov
mov
adc
gs
rcrl
sbb
aam
mov
sub
rorl
flds
mov
outsb
mov
inc
cmc
jbe
push
adc
test
jecxz
fisttpll
addr16
cmp
pop
out
pusha
jl
and
enter
fwait
outsl
push
lret
outsb
fwait
dec
jp
inc
jcxz
orb
mov
stos
stos
in
pusha
mov
fwait
adc
mov
cmp
cmp
lock
mov
jne
ljmp
imul
scas
jnp
sar
test
inc
test
aaa
or
dec
jp
push
jb
fdivrl
fldt
out
leave
pop
dec
ret
fisttps
xlat
add
push
fimull
or
or
sub
sahf
inc
pop
adcb
add
or
xchg
cmpsb
xchg
pop
push
int3
sbb
push
jno
inc
ror
push
push
shl
test
pop
lock
jmp
add
lods
lds
notb
add
pop
fistpl
mov
xor
cmp
stos
dec
push
sti
cwtl
clc
and
mov
sbb
mov
xchg
mov
xchg
addr16
test
gs
or
sbb
pop
cmp
jnp
inc
mov
inc
cmp
push
cmp
cmp
push
loope
cmpsb
and
mov
jns
jbe
xor
test
jno
jmp
cmpsl
addr16
stos
out
adc
or
mov
and
pop
mov
xor
test
jmp
shl
push
outsw
pushf
sbb
in
mov
xchg
and
sbb
ja
movsb
dec
mov
pop
repnz
imul
test
daa
sbb
insb
std
sbb
ret
loope
cmp
test
fnstcw
jle
fisttps
inc
int3
add
and
enter
das
inc
insb
stos
pop
jmp
sbb
loopne
add
sub
fsubrl
add
ret
mov
dec
test
lods
sbb
inc
lret
shll
push
rcl
push
add
dec
or
outsl
push
cmp
adc
mov
popf
scas
inc
dec
ret
sub
inc
xchg
sub
loop
imul
dec
enter
xchg
push
loopne
ret
ss
push
js
leave
je
pushf
movsb
mov
mov
rolb
les
pop
and
add
push
sub
xchg
fists
sbb
stos
cmpsb
ljmp
or
pop
pop
dec
inc
push
mov
lret
mov
fildl
mov
call
mov
add
sub
out
dec
xchg
push
mov
mov
jmp
add
out
nop
lcall
inc
pop
pusha
pop
xchg
insl
les
jne
adc
loope
imul
loop
int
cmpl
bnd
dec
stc
push
pop
cmp
xor
int3
dec
shr
mov
jecxz
stc
adc
jns
lret
fcompl
mov
dec
pop
pop
cmp
xor
es
lock
jecxz
inc
pop
dec
cltd
jg
xchg
lret
ljmp
shrb
inc
push
ljmp
xor
fmull
pop
je
insb
jp
mov
mov
lods
cltd
pop
sub
jb
pop
lcall
lods
cmc
mov
sbb
scas
mov
mov
js
dec
fidivs
lods
icebp
out
insb
jae
ficoml
push
push
rolb
fucomi
mov
xor
push
fcoms
test
adc
pop
xor
or
jg
jg
in
xlat
popa
icebp
mov
jp
and
pop
mov
push
lds
fldcw
push
shrb
pop
and
jecxz
or
dec
in
nop
xor
mov
stos
popf
cmp
add
nop
inc
pop
subl
sub
in
popf
jl
push
cmp
fs
fsubrs
je
add
in
or
inc
pop
sbb
test
stc
push
push
adc
popa
push
shlb
roll
fsubp
data16
dec
bnd
mov
jg
cwtl
xor
sbb
push
cli
fsubrp
jecxz
xchg
repz
mov
in
lret
jnp
test
jle
adc
cmp
and
jb
and
mov
and
xchg
fisttps
ss
xlat
or
dec
addl
movsb
sbb
mov
setbe
sti
sbb
mov
adc
or
fidivl
jbe
pop
rcrl
dec
in
sbb
adc
push
in
jnp
adc
icebp
push
lcall
fwait
mov
aam
in
ret
rolb
mov
cmp
add
cmp
jae
push
in
add
adc
ljmp
cs
mov
pop
jle
mov
das
ret
das
xchg
dec
lea
sub
xor
xchg
sub
or
lds
mov
mov
or
imul
in
enter
jecxz
push
push
hlt
xchg
push
test
mov
in
mov
rcr
imul
mov
popl
ss
pusha
cmp
adc
insl
mov
mov
jge
cmc
sti
das
in
xchg
push
fbstp
inc
cltd
ja
pop
push
out
inc
cmp
hlt
mov
sbb
adc
loop
ja
into
mov
adc
gs
ja
lret
int3
lea
xlat
jg
out
dec
adcl
inc
mov
mov
xor
icebp
cli
pushf
popf
xchg
pop
insb
scas
dec
jecxz
or
rolb
push
cmp
jle
push
popf
test
cmpsl
scas
mov
mov
mov
fists
out
in
cmp
pop
xchg
and
cmpsl
mov
clc
or
mov
and
mov
subb
mov
push
pop
arpl
jnp
or
push
mov
jmp
add
sub
sbb
outsl
cs
mov
fstpt
jne
mov
jns
sarb
rcll
leave
mov
pop
or
repz
shlb
stos
mov
shrl
pushf
repz
add
xchg
push
out
pop
adc
dec
push
movsb
test
out
and
imul
sahf
outsl
xchg
xchg
add
pop
pop
sub
sar
lods
jl
js
sbb
sub
sahf
sbb
mov
dec
mov
pop
xor
cs
mov
scas
push
sub
xchg
test
shll
cld
shll
mov
push
push
cmp
test
dec
iret
adc
ret
xor
js
xlat
adc
adc
ret
push
popa
imul
ret
mov
imul
shrb
mov
or
push
xor
adc
jns
xor
jg
and
rcr
mov
push
xchg
or
adc
push
fisttps
mull
lret
cmp
xchg
jbe
xchg
lret
xchg
loopne
addr16
lds
shrb
jmp
or
cmpsb
mov
iret
pop
cs
push
stc
mov
repz
cmp
xchg
out
xchg
mov
inc
lahf
icebp
inc
scas
mov
add
jg
or
je
out
inc
push
scas
cwtl
lods
repz
nop
dec
ret
sahf
cmc
add
push
aad
and
testb
arpl
jmp
out
lods
mov
inc
pop
jbe
adc
adc
adc
push
xor
scas
dec
xchg
lcall
aad
cmp
iret
or
cmpsb
xchg
cld
pop
sbb
fcompl
sbb
and
cmc
testb
add
xchg
push
into
stc
xchg
aas
outsb
inc
lahf
rcll
pop
mov
pop
je
aaa
dec
filds
sbb
push
inc
roll
add
adc
lret
mov
flds
adc
movsb
sub
mull
iret
mov
orb
jnp
push
adc
cmp
xor
sbb
out
scas
jle
outsb
daa
cmp
je
ret
cltd
jnp
aam
add
loope
inc
mov
pusha
push
or
sbb
mov
sub
xchg
out
adc
lods
jle
pushf
or
push
pop
data16
or
pop
in
pusha
xchg
outsb
pop
pop
mov
xor
xor
adc
div
or
xor
gs
shrl
les
jbe
aaa
xor
mov
dec
jmp
mov
scas
inc
int3
add
and
mov
imul
mov
loop
xor
push
xlat
sub
push
movsb
imulb
fisubrl
add
adc
sub
xchg
add
jns
bnd
adc
push
inc
fwait
and
fwait
lcall
fs
inc
js
rcll
repz
mov
loop
jbe
loope
and
mov
xchg
pop
sbb
rcr
mov
enter
jmp
insb
push
arpl
mull
test
cli
mov
aas
clc
add
lea
pop
cmp
adc
mov
jmp
shrb
aas
push
xor
test
stos
loopne
mov
add
dec
pushf
mov
aam
mov
dec
mov
inc
arpl
test
lahf
mov
jg
fs
mov
pushf
pop
repz
stos
jbe
insl
pop
adc
rclb
inc
rorl
xchg
ror
mov
xchg
push
dec
jge
hlt
mull
fsubr
xchg
jno
lret
lea
xor
fstl
clc
and
pop
mov
in
test
lret
jmp
cld
jl
xchg
loop
scas
jns
scas
sub
jecxz
xchg
pop
pushf
cmc
and
div
jno
fs
daa
shrl
jp
ds
or
movsl
mov
cmpsb
lock
inc
pop
ret
sub
jo
sbb
dec
or
icebp
mov
xchg
cld
mov
jno
adc
add
ss
mov
xchg
cmpsl
or
negb
in
push
mov
inc
pop
adc
mov
test
pop
sbb
xchg
in
dec
xor
dec
sub
push
pop
xchg
ret
push
es
xchg
enter
imul
adc
jle
add
jno
fildll
leave
or
cmpsb
cmp
push
in
fiadds
mov
mov
dec
jp
les
push
mov
dec
int3
push
dec
inc
jb
lcall
cmp
adc
adc
push
out
pop
test
cmpsb
mov
gs
mov
sbb
cmp
inc
std
xlat
scas
in
lock
xchg
adc
sub
test
pop
mov
das
inc
push
sub
inc
not
scas
in
test
iret
xchg
fiadds
sbb
nop
or
pop
pop
pusha
stos
mov
mov
sbb
mov
dec
mov
sub
dec
inc
test
js
cltd
mov
shr
pop
mov
imul
push
adc
xchg
and
push
repz
mov
int3
push
cmpl
aad
movsl
sub
jbe
repz
roll
cs
lret
mov
sbb
xchg
dec
mov
adc
jbe
bound
fsts
ljmp
mov
pop
jne
je
sub
sbbl
lret
add
out
push
loopne
nop
testl
xor
ljmp
sub
pop
mov
or
lcall
popa
imul
adc
aad
xor
test
push
inc
ret
mov
lret
cltd
fnstenv
mov
pushf
icebp
jg
inc
les
dec
xor
mov
sarb
push
jne
in
pop
pop
mov
sbb
leave
in
les
ret
mov
mov
add
or
psrad
int3
inc
inc
ror
jg
xchg
insl
and
mov
sbb
or
gs
sub
and
ja
ja
pusha
jbe
and
pop
inc
xchg
xlat
cmp
fistps
sbb
add
cltd
out
dec
mov
pop
scas
jo
xchg
xchg
ficomps
aam
stos
dec
xor
adc
enter
push
dec
push
mov
ret
iret
add
add
push
xor
cmpsl
cmp
pop
addr16
call
repnz
xor
daa
loop
shlb
push
cmc
test
mov
pop
adc
lea
dec
jae
cli
jle
les
pop
iret
imul
ja
mov
push
mov
loope
pop
push
sbb
aam
sub
dec
mov
call
add
or
loopne
xchg
stos
mov
jp
rclb
ss
xor
push
cmp
test
mov
int
or
sahf
shr
push
pop
sbbl
in
add
sti
cmp
xor
ret
andl
jno
iret
aam
adc
movsb
cmpsl
or
push
push
data16
cs
sub
push
into
pusha
xchg
mov
lret
out
mov
adc
cmp
outsb
jb
xchg
testl
sub
jp
sbb
int3
mov
stos
mov
fadd
jnp
inc
ss
pop
adc
roll
push
imul
dec
inc
add
dec
jo
add
adc
push
or
out
jle
pop
mov
cltd
outsl
sub
test
test
js
addr16
orl
mov
sbb
insl
mov
mov
and
jo
mov
fldl
je
mov
add
pop
popa
and
jecxz
jecxz
inc
loope
scas
push
fdivp
mov
orb
shrb
inc
mov
cmp
jne
icebp
leave
aad
mov
push
shl
push
jmp
jnp
popf
cwtl
mov
adc
fwait
clc
xchg
shrb
pop
jecxz
movsb
jnp
ret
ja
or
push
outsb
inc
sbb
xor
cmpsb
mov
sbb
add
les
test
mov
jle
movsb
inc
loop
lock
aas
fcompl
js
sbb
mov
shl
and
pop
inc
icebp
xor
adcb
jae
aas
pop
or
jl
add
pop
push
jne
push
sbb
scas
or
lods
push
jbe
inc
data16
ficomps
add
insl
xor
fcompl
in
cltd
mov
stos
leave
test
divl
roll
cli
insb
xchg
mov
pushf
cmpsl
in
clc
dec
and
add
inc
stos
repz
xchg
ret
loope
and
sbb
idivb
ja
call
mov
mov
jg
adc
sarl
cmp
stc
cli
fnstenv
jp
sbb
repnz
fndisi(8087
xchg
repnz
lea
mov
enter
leave
xor
lahf
mov
xlat
decb
and
jb
jb
jge
arpl
inc
fwait
sub
cmp
or
adc
jmp
cmpsb
push
lods
leave
xchg
insb
cmp
adc
adc
cli
insl
or
cltd
push
mov
push
mov
jge
add
ret
repnz
push
clc
pop
sub
mov
inc
movsb
ret
aaa
cmp
nop
mov
shr
xchg
push
adcl
rorb
cmc
test
adc
fdivr
in
addb
shlb
loope
cmp
push
std
loopne
in
nop
enter
jge
into
add
adc
cli
cmp
add
negl
add
insl
adc
outsl
mov
adc
inc
faddl
mov
dec
insl
pop
xor
sbb
sti
jmp
mov
push
in
adc
mov
dec
test
ss
call
into
cmp
xor
into
outsb
add
cmp
xor
mov
pushf
fdivrp
add
js
push
loop
into
xor
sbb
pushf
dec
jne
xchg
dec
aaa
iret
fcoms
cltd
adcl
jecxz
sub
xor
adc
in
loopne
mov
enter
repz
test
ret
adc
aas
pop
dec
pop
sahf
pop
mov
popa
jge
xchg
jmp
or
lods
out
imul
mov
std
cltd
adcb
cmpsb
xorb
xchg
dec
jg
data16
lods
sbb
dec
dec
inc
mov
jp
pop
push
or
xchg
jmp
dec
mov
mov
out
sub
xor
aam
popf
xor
in
dec
popa
repnz
outsb
jg
mov
or
stc
cmc
pop
mov
add
xchg
push
fmull
mov
cltd
in
ss
jno
inc
mov
add
rorb
loopne
adc
repnz
cld
cmpsb
mov
xor
mov
insl
add
mov
fadds
stos
insl
push
inc
xchg
adc
cld
mov
adc
fnstcw
movsl
cmp
mov
mov
sub
movsb
imul
mov
jmp
cmp
jns
popf
add
add
and
mov
aam
aad
cld
jecxz
mov
je,pn
leave
xor
scas
clc
test
cvttps2pi
sbb
int3
in
and
mov
rorl
mov
lods
mov
mov
sti
inc
out
lds
push
sub
cli
mov
call
popf
pop
cmpsl
andb
mov
repz
and
add
add
mov
pop
xor
jne
test
push
lds
shl
ja
lods
or
clc
mov
movsl
hlt
mov
ljmp
and
dec
adc
jnp
mov
test
enter
mov
in
sub
aam
mov
and
xchg
mov
movsb
rol
sbb
cld
shlb
mov
jge
push
add
cmp
adc
or
jne
sub
jae
lea
xlat
lods
push
xchg
adc
mov
mov
cwtl
sbb
dec
jae
stc
lret
mov
outsb
dec
dec
xchg
push
mov
push
dec
pop
add
adc
cli
enter
adc
push
cwtl
dec
xchg
xor
cltd
dec
sbb
mov
mov
dec
sbb
imul
add
cwtl
ficoml
ret
mov
pop
lcall
adc
pop
sbb
xor
pop
and
add
enter
cmp
loop
sub
testl
dec
outsb
mov
jl
data16
fwait
mov
nop
xor
into
js
jl
push
mov
repnz
outsl
mov
and
mov
xlat
leave
sbbb
xchg
arpl
dec
fisttpl
sub
mov
and
xchg
addr16
ficoms
cmp
fs
lahf
pusha
ds
push
lock
mov
insb
push
call
ret
cmp
inc
in
or
mov
out
ja
jno
test
dec
cltd
in
and
xchg
cmpsl
fnstenv
add
pop
adc
inc
sbb
adc
sub
lea
inc
stc
movsl
cwtl
insl
fcoml
jne
mov
arpl
movsl
xchg
or
repz
repz
iret
push
and
pop
dec
add
test
movsl
clc
mov
fcmovb
sbb
stos
cmp
pusha
push
xor
aas
push
loope
aad
adc
addr16
aas
jno
mov
push
jne
jmp
sahf
fsubrp
rol
jg
sbb
dec
sarb
or
repz
imul
jno
jmp
and
adc
movsb
ret
enter
push
adc
add
call
sub
sbb
test
mov
pusha
std
dec
mov
out
data16
scas
leave
xchg
sub
inc
pop
sub
mov
and
and
sub
mov
fcomps
insl
xchg
fcomi
add
mov
cmp
sub
sbb
adc
or
pop
xchg
fsubp
mov
jb
sbb
xchg
sbb
add
push
push
lds
mov
daa
std
int
add
pop
add
int3
pop
jle
cmc
notl
cmp
jp
int3
addr16
sbbl
cmp
adc
add
cmp
add
ljmp
je
adc
popa
mov
inc
mov
cmc
adc
ds
mov
xlat
or
in
jbe
scas
xchg
pusha
daa
cwtl
pop
bound
aam
jp
cmp
mov
pusha
xorl
xor
cmpb
mov
pop
out
out
call
cmp
cs
lcall
sarb
dec
aas
cld
cmpsl
insl
ljmp
xchg
xlat
ss
fwait
inc
push
sub
aas
xor
dec
xlat
cli
test
xchg
andb
fisttps
xchg
and
sbb
fbstp
daa
adc
mov
and
push
ds
xchg
fmul
lea
shrl
adc
mov
loope
xchg
inc
rclb
test
pop
jnp
add
out
sbb
jb
test
pop
dec
stc
pop
fwait
inc
cmp
add
adc
dec
nop
imul
jbe
leave
add
je
aam
insl
daa
fldenv
and
sub
xchg
adc
pop
sbb
xor
xlat
pop
xor
jl
jg
inc
adc
or
xorb
stos
sbb
insb
jecxz
mov
lods
jl
ljmp
fidivs
pop
js
imul
idivl
scas
aam
iret
testb
push
and
add
xchg
mov
xchg
aad
jle
std
pop
insb
stos
cli
cmp
adc
cmp
push
sar
mov
inc
lahf
mov
or
fisubs
xchg
mov
mov
mov
rclb
mov
daa
xor
mov
adc
stos
test
xor
xor
ds
push
add
xchg
stc
call
rclb
jno
mov
test
push
mulb
mov
and
xchg
je
mov
in
sbb
lret
cmc
insb
scas
or
mov
ljmp
into
sub
mov
fwait
andb
xor
xor
inc
lahf
pop
ds
mov
xchg
out
fidivrl
or
cmp
jb
pop
shrl
adc
mov
test
in
sbb
outsb
xchg
adc
sub
mov
dec
xchg
pop
and
ret
or
sbb
rolb
pop
int3
rorl
sahf
xchg
outsl
push
jb
mov
cmp
movsb
mov
xchg
enter
xor
in
jge
test
dec
leave
data16
cwtl
repnz
icebp
cmp
push
mov
xor
es
cmp
xor
ret
in
mov
mov
lcall
test
shll
lods
scas
push
mov
aad
pop
sub
in
mov
sub
xchg
and
inc
adc
mov
xor
mov
mov
pop
rcr
movsl
pop
mov
inc
cmpb
leave
shlb
shlb
aas
sub
push
ret
cmp
push
addr16
or
jne
push
outsl
sub
mov
insl
bound
stos
filds
shrb
aaa
mov
inc
add
rolb
shrl
daa
or
outsl
xchg
or
int
out
loope
jp
arpl
cs
and
xlat
inc
das
cli
imul
roll
outsb
or
inc
fstpl
les
xor
adc
sbb
ror
gs
mov
movsb
jecxz
mov
out
insl
std
mov
pop
int
push
jmp
andb
stc
or
cs
cmp
add
sub
fwait
jle
mov
fs
and
ljmp
popa
insl
scas
test
and
loope
push
adc
sub
mov
imul
sbb
out
push
push
and
loop
sbb
xor
ljmp
ds
cmc
sbb
es
sbb
xchg
jp
ljmp
xor
mov
fptan
jg
dec
cmp
push
sbb
mov
out
loopne
cmp
sbb
mov
stos
xor
or
aam
push
cmp
lret
lahf
shll
imull
pop
addb
mov
xchg
or
movsb
aad
dec
sbb
xchg
fstps
lret
shl
jl
push
movsl
xor
loop
lret
idivb
pop
movsl
frndint
iret
add
sub
into
xchg
inc
iret
es
push
loop
lds
int
addr16
mov
jge
cli
ficoml
and
mov
cmp
jbe
dec
idivl
mov
sub
jbe
pop
in
mov
push
jp
inc
sarb
pusha
test
sub
dec
cmc
sbb
in
jno
pop
shlb
pop
leave
or
adc
shrb
jno
ret
mov
fwait
js
shlb
and
incb
imul
pop
add
pop
mov
dec
in
add
push
and
mov
inc
mov
inc
fimull
cwtl
cmpsl
inc
xor
jmp
in
clc
gs
psubw
sbb
out
je
testl
fsubrs
addr16
dec
jb
ljmp
adc
dec
insl
mov
aas
inc
xor
in
xchg
pop
pop
add
loopne
iret
cmp
push
xor
test
add
stc
jmp
pop
mov
or
jmp
clc
jmp
jnp
push
dec
push
sub
push
jge
ret
xor
movsb
nop
adc
dec
mov
dec
out
insb
jae
mov
popa
xchg
addr16
sbb
cwtl
bound
sbb
sub
cmpl
filds
pop
in
in
into
push
cmp
lret
lret
push
pop
push
and
lcall
push
adc
jb
pop
fsubrl
cli
xchg
es
and
adc
mov
xchg
push
pop
mov
out
adcl
adc
push
data16
jne
adc
add
push
scas
cmp
inc
fsub
cltd
mov
call
sti
xchg
js
shrb
inc
xchg
mov
xchg
sbb
mov
fisttpl
scas
lahf
pop
leave
cmp
mov
rcrl
mov
adc
in
aam
mov
movsb
and
pushf
stc
and
xlat
es
fimuls
in
call
xchg
pop
mov
add
mov
inc
int3
mov
lret
xor
mov
mov
popf
xor
jecxz
xchg
cmpsl
pop
dec
pop
les
imul
gs
into
test
push
dec
rol
stos
sbb
pop
dec
or
jcxz
jg
push
jns
jnp
fwait
pop
inc
std
ds
push
sub
fstpl
mov
popf
mov
pop
aam
mov
scas
out
ret
jecxz
popf
daa
inc
fdivr
fdivl
adc
popf
addb
mov
jnp
jns
ja
or
sbb
cmpb
loop
in
nop
mov
outsb
mov
sbb
aaa
cltd
xchg
rorb
mov
addb
xlat
mov
or
int
xor
negb
mov
push
rcr
jg
stc
cmp
punpckhbw
push
adc
repz
sahf
inc
out
mov
push
test
cli
dec
aaa
xor
leave
add
mov
mov
adc
stc
mov
sahf
hlt
out
cmp
lahf
cs
and
es
adc
xor
nop
sbb
mov
stc
pop
pop
and
gs
sub
cvttps2pi
lret
cli
mov
xchg
imul
aam
mov
leave
fldt
ss
into
xchg
hlt
inc
dec
mov
cmp
pop
xchg
out
or
fcmovbe
shl
pop
lock
xchg
adc
mov
gs
jge
fbstp
lds
loopne
fsubs
pop
repz
pop
out
sbb
adc
cmp
lret
fadds
xchg
bound
outsb
add
sahf
mov
sbb
xor
push
lret
sbb
add
popa
stos
push
outsl
jne
dec
aad
js
sbb
cmp
lahf
inc
mov
aaa
xor
sub
imul
pop
lahf
jge
popa
sbb
mov
jmp
pop
add
pop
pop
or
push
and
mov
in
xlat
jno
lea
lods
adc
jo
pop
mov
inc
mov
xor
dec
cs
in
xor
fdivrl
aas
push
jl
out
das
adcl
adc
shr
stos
mov
pop
push
push
sarb
inc
xor
and
dec
cmc
fldl2e
dec
mov
sbb
scas
mov
adc
orl
dec
xchg
pop
fists
sub
xor
dec
repnz
loop
pop
mov
and
sarb
xchg
cmc
out
out
push
das
sub
lea
dec
or
pop
out
adc
mov
dec
mov
lock
jl
cmp
cwtl
or
pop
ljmp
ffreep
lret
xchg
pop
mov
lret
icebp
jecxz
fldenv
das
mov
iret
out
cmc
movsb
nop
add
xchg
and
lsl
inc
pop
call
negb
je
movsb
pop
cs
pop
inc
int3
xlat
mov
lds
jno
pop
mov
xchg
push
pop
call
xlat
push
jmp
cmp
add
je
test
std
mov
sub
jno
push
dec
pop
int
or
cli
incl
ljmp
clc
enter
insb
pushf
pop
adc
pop
dec
in
pop
xor
jb
dec
enter
xchg
xor
into
or
pop
mov
pop
les
out
mov
fucomip
call
dec
push
sub
cmpsl
mov
push
xor
cmp
call
inc
sarb
aaa
mov
dec
scas
mov
jno
das
mov
aaa
pushf
pop
dec
mov
shll
sbb
and
imul
rcrl
mov
mov
dec
iret
cmp
cmpsb
mov
pushl
outsl
sub
pop
mov
ret
sub
sbbl
inc
je
popf
push
cmpl
jo
out
ret
and
outsb
fidivrs
cmp
adc
ret
inc
mov
loop
aam
or
sbb
andb
xchg
inc
pop
mov
sbb
nop
nop
ret
call
and
les
in
fbld
mov
pop
and
push
leave
sbb
sti
mov
es
int
sti
shrb
test
jg
xchg
inc
out
dec
jecxz
repz
mov
mov
push
push
mov
push
cmp
push
ror
and
sar
in
jb
std
in
fcmovnb
or
out
leave
and
or
ret
or
add
and
outsb
std
sub
xchg
dec
ret
clc
and
ljmp
lcall
or
iret
dec
in
or
xchg
push
aad
or
cmp
add
pop
sbb
leave
scas
jge
aam
in
mov
ret
aam
dec
mov
ljmp
out
cltd
fsubs
movsb
int
jnp
cmpsl
repnz
jne
icebp
repz
sbb
jo
cmp
dec
hlt
push
pop
mov
mov
fsubs
adc
xchg
ret
aam
xor
sub
pusha
xchg
test
fs
loopne
mov
call
dec
pop
pop
outsl
xchg
mov
add
pushf
cmpsb
mov
pop
jb
movsb
cld
sbbb
into
jno
lock
pushf
xchg
test
add
les
push
xchg
out
mov
test
shll
sar
std
std
push
xchg
adc
rclb
mov
es
push
add
mov
jl
and
enter
fwait
jo
mov
daa
popa
or
mov
xchg
and
or
lahf
jnp
pop
loopne
stos
iret
push
scas
jmp
orb
shlb
ret
fstps
xchg
stos
lcall
and
sbb
int3
adc
hlt
inc
fistpl
pop
cmpsb
data16
fists
and
stos
int3
movsb
pop
and
inc
adc
repnz
xchg
push
test
xchg
in
inc
xchg
mov
pop
xor
sub
ret
cmp
xor
test
add
aam
adc
push
sbb
popa
push
adc
scas
dec
and
push
dec
push
test
xchg
sub
fwait
lret
xor
clc
push
push
lods
cmp
pop
add
add
pop
mov
cmc
jb
mov
mov
leave
bound
in
test
repz
fwait
push
lds
fdivrl
pop
lret
or
jecxz
jmp
jmp
loop
stos
ror
ss
sub
inc
idivl
add
mov
sbb
cmp
add
imul
pop
roll
jnp
lods
imul
sbb
sbb
ficomps
push
stc
divb
jo
aad
hlt
fwait
mov
nop
or
outsl
pop
ret
repz
pushf
cmc
inc
lahf
push
xchg
xchg
inc
cmp
cmp
insb
hlt
mov
cwtl
mov
int3
xchg
lret
or
mov
rorb
inc
inc
mov
jge
mov
cmp
jns
xchg
rep
data16
das
gs
adc
mov
sbb
pop
xchg
subl
dec
xchg
xor
outsl
je
jmp
icebp
imul
jl
rcll
adc
clc
cmp
das
sahf
xor
jmp
loope
js
pop
adc
enter
mov
cmpsl
push
or
aaa
subl
rclb
insb
xchg
les
mov
sub
jno
dec
loopne
je
adc
fbld
das
movsb
inc
rolb
ror
data16
rol
mov
andb
nop
sahf
sbb
xor
lods
addl
imul
add
pop
pushf
pop
xchg
test
xor
or
js
sub
and
inc
push
ret
add
rcrl
dec
lret
ss
inc
dec
lods
and
xor
push
lock
mov
rclb
rcr
adc
fisttpl
or
cmpsl
subl
and
daa
test
fsts
push
cmpsb
test
int3
add
mov
and
outsl
mov
jno
inc
fucom
cmpsl
jo
sbb
push
cmpsl
pusha
dec
scas
and
adc
push
xchg
shll
subb
data16
and
push
fwait
and
in
not
push
scas
icebp
or
xor
xchg
shlb
mov
xchg
add
dec
scas
jo
and
dec
inc
sub
out
lds
inc
bound
popf
ret
ret
ja
mov
mov
mov
mov
jne
fcmovnu
mov
out
pop
mov
insl
cmpsl
decl
mov
into
int
lcall
jbe
lods
inc
addr16
pop
inc
mov
mov
pop
or
dec
inc
idivb
mov
xchg
ret
dec
and
inc
orl
lock
mov
loop
sub
stos
lahf
or
sbb
in
dec
popa
fistpll
data16
fnsave
jp
push
outsl
xchg
test
rcrb
sbb
or
fldl
xor
mov
adcb
loopne
fisttpll
push
or
dec
and
leave
xchg
lret
cwtl
stc
iret
inc
or
add
ja
push
fstp
movsl
mov
nop
xor
mov
xor
cwtl
aam
mov
mov
add
and
xchg
xor
cmp
lcall
insl
jno
insb
mov
inc
xchg
mov
int3
pop
mov
movsl
sbb
push
inc
fsubp
scas
pop
shrb
es
aam
mov
jp
push
mov
push
add
cs
cmp
mov
jle
xchg
ss
shrb
and
fildll
or
xchg
orb
xchg
add
xlat
xor
mov
jl
mov
xchg
mov
and
push
mov
adc
sub
and
lret
jle
inc
or
adc
push
dec
add
jg
jnp
ja
push
lods
xchg
inc
add
mov
repz
outsl
mov
insb
sbb
dec
adc
jns
xchg
xchg
pop
outsb
push
arpl
sbb
jg
mov
add
fldt
sub
lret
cwtl
nop
mov
std
sbb
pop
into
sbb
adc
imul
int
mov
mov
mov
xor
pusha
arpl
ja
cmp
jae
leave
add
fdiv
sub
ljmp
mov
das
adc
lds
adc
adc
dec
adc
dec
mov
hlt
mov
jne
jmp
jno
jg
int
push
inc
adc
shll
pop
out
xchg
in
push
sub
js
jg
inc
mov
repnz
jp
mov
leave
jmp
js
add
stos
jnp
mov
movsb
sub
std
add
and
in
lods
fucomip
loope
xchg
cmpl
xorl
cmp
js
mov
jl
pop
movsl
mov
jns
subb
dec
push
lcall
jle
test
xor
or
js
fcoms
aam
xchg
pushf
and
out
fcoml
add
loop
lea
inc
jg
push
cld
mov
sbb
sahf
jae
and
dec
inc
xchg
inc
adc
push
sbb
fnsave
movsb
dec
stos
adc
hlt
sub
call
or
adc
ljmp
xor
jno
pop
xchg
aas
fisubrs
repz
scas
push
push
pusha
sahf
push
sbb
or
mov
dec
in
jns
lods
mov
xor
repnz
jbe
dec
test
add
xchg
int
add
pop
cmp
mov
jp
insb
sub
jg
dec
mov
jmp
push
testl
aaa
cltd
xchg
push
push
jmp
loopne
pushl
sti
or
fcomi
aad
and
push
sbb
adc
push
int3
pop
ret
stos
repz
xchg
jecxz
loopne
or
pop
fs
or
mov
cmpsb
adc
out
cmc
shlb
adc
in
cwtl
push
fiaddl
enter
in
sbb
int3
mov
adc
push
fs
es
and
xor
cwtl
in
les
and
leave
mov
aad
adc
loopne
arpl
shll
clc
icebp
stc
mov
xor
pmaddwd
std
sub
mov
test
cli
sub
inc
insb
mov
sbb
leave
and
pushf
pop
mov
fcoml
in
xor
fsubl
lahf
and
jnp
xlat
inc
scas
test
rclb
xchg
dec
jl
sbb
pop
test
enter
outsl
sub
jl
inc
xor
dec
push
or
jg
cmp
mov
insb
dec
inc
lahf
sbb
cmp
sub
xchg
mov
add
push
stc
fcmovnbe
push
leave
mov
cmp
fwait
sub
or
sub
lfs
ret
inc
cmp
dec
rcrb
pop
sbb
stos
fs
mov
jle
ffree
lret
mov
into
push
aam
jp
sub
test
movsb
dec
inc
enter
jo
aad
sub
aad
adc
test
jae
ss
fwait
repz
aam
leave
fnsave
in
lock
loop
pop
xor
call
xor
xchg
or
push
cmc
push
movl
dec
sub
cmpsb
adc
mov
inc
add
push
add
and
jp
inc
xor
decb
loope
icebp
dec
or
xor
xor
outsb
sub
rolb
and
mov
xor
sub
or
xchg
cmp
pop
in
mov
xlat
ret
jnp
and
mov
int3
sbb
iret
mov
fsubl
ret
dec
and
outsl
lcall
cmc
mov
pop
test
jmp
pop
mov
divl
add
fildll
aaa
std
in
inc
stos
ss
bound
jmp
fildl
repz
xchg
xor
sbb
add
sbb
mov
xchg
jae
data16
dec
xchg
jecxz
xchg
pop
sub
shrl
std
sub
and
sti
cwtl
and
mov
roll
rcll
sub
test
cmp
cli
mov
jnp
out
imul
fwait
nop
adc
sub
jg
xor
push
push
xorb
dec
stos
mov
insl
ja
cli
mov
rep
or
mov
in
mov
fimull
cwtl
loope
sahf
aas
in
cli
sbb
enter
jmp
push
out
xor
pop
sbb
repz
stc
jmp
push
not
add
movswl
mov
clc
stos
test
testl
pop
outsl
es
adc
xor
jp
jecxz
leave
fneni(8087
or
ja
mov
ja
jo
add
std
jle
mov
sub
test
jne
xchg
decb
jge
xchg
lret
cli
into
ds
xor
test
add
les
mov
inc
cmpsl
cmp
dec
mov
cmp
outsl
jbe
jne
fbld
adc
movsl
imul
jbe
adc
shrl
cmpsl
inc
mov
cmp
mov
cwtl
xor
shlb
mov
add
jg
sub
jp
mov
xchg
xlat
and
mov
fisttpll
rcrb
xor
out
ss
ret
cs
data16
push
popl
testb
pop
cli
out
push
pop
cli
mov
addl
test
mov
clc
mov
jae
or
out
push
add
ret
pop
cwtl
dec
fldl
test
xor
pop
push
loopne
cmpsb
inc
fnsave
in
test
and
call
les
and
insb
aaa
sub
adc
vprotb
xchg
adc
lock
jbe
lock
jbe
cmc
adc
push
inc
and
test
popa
adc
loop
or
and
pop
movsb
fsubp
jnp
push
inc
and
adc
cld
in
jo
testb
inc
ret
shrl
mov
rcll
pop
hlt
xchg
xlat
mov
js
gs
icebp
pop
xchg
jle
and
cs
push
xchg
inc
outsb
adc
stc
cmp
pop
cmpsb
lret
lret
or
lret
add
sbb
sbb
data16
pop
and
dec
jmp
mov
push
and
cld
jnp
mov
push
adc
in
enter
sub
dec
sahf
popa
sbb
fisttps
out
inc
mov
add
fcmove
ljmp
fistpl
or
rcrl
cltd
cld
inc
lret
xchg
stos
out
or
leave
jne
cmpsl
xchg
mov
sbb
sbbb
inc
in
in
add
insb
enter
mov
jmp
out
mov
aas
pop
subb
push
sbb
outsb
push
rorb
inc
iret
sbb
cwtl
aas
push
repz
jecxz
push
xchg
add
cmp
mov
mov
jb
and
adc
roll
aaa
aad
fsubrl
arpl
sub
xor
sub
scas
sti
mov
jmp
push
add
adc
pop
je
xchg
mov
pusha
sub
jbe
insb
popf
negl
lret
das
pop
add
push
push
popa
mov
push
icebp
les
lret
xor
adc
push
pop
adc
ficoms
push
xchg
sahf
dec
jp
outsb
mov
pusha
out
mov
mov
in
mov
xchg
hlt
cld
sbb
cmp
imul
ljmp
test
popf
lcall
xchg
jge
xor
stos
and
mov
sub
inc
sub
hlt
divb
imul
xlat
cli
mov
arpl
je
jp
loope
addr16
dec
and
jno
adc
pop
mov
pop
push
mov
xor
adc
addr16
into
add
loopne
cmp
sub
repz
push
mov
dec
or
xor
jmp
out
dec
sbb
gs
pop
xor
pusha
push
xlat
sub
repnz
in
rcll
mov
in
xor
mov
popf
or
adc
das
pop
loope
ss
rorb
lretw
or
lods
popa
dec
push
adc
cs
movsb
in
sbb
lcall
repnz
push
in
and
jp
dec
mov
pop
lret
cs
and
pop
jnp
xchg
idivb
mov
stc
lods
mov
push
pop
bound
cmc
xor
fs
test
push
dec
pop
mov
ficomps
sbb
xchg
pop
leave
adc
bound
pop
xor
xchg
movb
arpl
push
inc
dec
mov
mov
xchg
push
push
push
and
or
push
aad
adc
lods
pop
imul
push
stc
sub
cltd
adc
lahf
lret
rcrb
or
adc
enter
test
jp
stc
aas
sub
sbb
scas
gs
push
out
mov
sub
push
sub
mov
jmp
add
jg
cmp
gs
mov
xchg
imulb
xor
jle
inc
lret
jnp
sub
jg
aad
xor
subb
or
outsb
test
mov
das
cli
dec
sbb
test
pop
pusha
push
ds
andl
adc
sub
gs
push
data16
jno
xor
inc
fs
cwtl
push
push
stos
insl
jns
out
push
mov
idivl
adc
repnz
sub
scas
nop
inc
movsb
mov
fs
adc
stos
call
fwait
nop
add
jle
into
out
cli
inc
mov
cmp
and
lret
insb
push
mov
insb
adc
dec
in
mov
es
push
ret
mov
call
jmp
push
lods
cmp
sti
mov
das
and
mov
es
std
shlb
inc
ja
shll
xor
pushf
flds
mov
pop
into
cld
test
sbb
dec
push
inc
sub
pushf
inc
enter
shrl
xchg
and
int
lods
dec
stos
or
aaa
cmp
shl
jle
pop
lahf
xor
loopne
adc
je
test
pop
icebp
mov
in
lahf
pop
jp
pop
lds
fadd
out
lahf
sbb
inc
mov
inc
and
test
pop
push
lds
frstor
adc
xchg
push
enter
mov
and
adc
into
imul
notb
jmp
xlat
mov
push
sbb
shll
inc
cmpsl
jmp
ds
pop
adc
inc
push
inc
lea
jg
dec
xor
pop
and
popa
flds
mov
rol
and
fwait
fs
stc
add
fisubl
movsb
into
test
sbb
enter
mov
ds
add
adc
and
shll
jp
test
cltd
loop
mov
mov
test
pusha
sub
jge
sti
mov
icebp
sub
push
sub
arpl
das
or
jns
push
and
leavew
fiaddl
sbb
xor
in
inc
sub
mov
lfs
js
jnp
mov
mov
lock
je
jne
cld
jp
ret
xchg
lahf
xlat
pop
jg
loopne
cltd
iret
insl
jp
sbb
hlt
xor
cmp
push
subb
sti
lods
and
add
jp
incb
js
out
jecxz
and
cmpsb
int3
insb
mov
mov
or
jne
cmp
sarl
rcll
xchg
xchg
xor
lahf
clc
fsubr
rolb
mov
repz
adc
inc
aam
mov
test
pop
std
adc
xchg
pop
insl
out
adc
adc
imul
mov
jecxz
cmc
loopne
mov
lcall
inc
dec
jp
sub
daa
stc
sub
addr16
pop
xchg
inc
add
les
pop
cmpsl
lcall
test
int3
in
mov
insb
xor
and
xchg
aad
jnp
and
in
inc
insl
ja
mov
jge
mov
nop
icebp
jo
test
cmpsb
arpl
jo
and
adc
adc
xchg
cli
push
dec
imul
push
mov
jge
js
fists
mov
mov
cmp
xor
xor
int3
in
dec
scas
xchg
sub
das
divl
pop
mov
imul
dec
dec
sub
jle
stos
dec
and
jbe
mov
xchg
pop
dec
test
cli
dec
rorl
add
add
popa
and
pop
fwait
call
jge
mov
dec
lcall
sbbb
mov
jae
push
cwtl
sub
enter
mov
leave
pop
out
dec
xchg
inc
cmp
scas
std
bound
push
xlat
jno
pop
shrb
into
inc
ss
mov
pop
out
push
pop
and
push
daa
repnz
xchg
js
movsb
loop
fcmovbe
fcoml
xor
lock
loop
dec
sbbb
mov
shrb
shlb
jge
sbb
push
in
xorb
add
sub
cmp
inc
dec
loop
adc
pusha
jne
cli
sti
lcall
aaa
fsubrl
add
mov
call
xchg
dec
sub
fwait
fwait
dec
lds
mov
mov
adc
insb
mov
push
push
rorb
xor
jns
iret
shll
inc
adc
es
lcall
inc
and
pusha
push
jge
imul
and
fists
xchg
push
push
out
inc
mov
push
add
fildl
mov
cld
cmp
das
repnz
pop
adc
dec
ret
out
inc
dec
mov
fs
movsl
sbb
mov
int3
dec
jne
jb
push
dec
push
cltd
adc
in
call
int
iret
popa
fists
ss
subl
test
push
sarl
add
mov
sbb
daa
dec
mov
lods
sbb
and
inc
mov
sbb
hlt
pop
mov
or
jnp
cmpsl
pop
jnp
xor
push
cmp
sahf
daa
xor
repz
mov
imul
xor
pop
mov
jmp
repz
xor
push
cmp
outsb
test
loopne
pop
pop
aam
mov
aad
push
imul
lds
pop
sbb
xor
in
adc
xor
lods
jl
pop
sbb
out
test
fiadds
or
dec
out
dec
add
iret
pop
in
gs
mov
adc
jns,pt
push
loop
cmp
pop
std
push
fldln2
adc
in
fucom
es
push
out
out
mov
add
pop
cltd
pop
add
popa
mov
and
fs
fisubs
sub
or
jno
add
insl
or
and
outsb
out
ja
mov
and
xchg
outsb
jno
inc
sub
mov
fdivs
fidivrl
mov
aad
sbb
sub
frstor
jg
cmp
out
dec
cli
cltd
cmpsb
pop
mov
sbb
leave
scas
loopne
jb
pop
adc
add
sub
aas
in
sarb
mov
repz
lods
pop
xor
lods
mov
outsb
rcrl
xor
mov
jp
mov
adc
xchg
mov
outsl
fdivs
aam
or
enter
outsb
cmpsb
adc
pushf
lret
mov
pop
rcll
pop
mov
xor
lea
pop
pop
ret
inc
test
dec
mov
xchg
mov
mov
push
hlt
sbb
loop
mov
push
fldenv
addb
pop
mov
out
lahf
cwtl
add
xlat
fwait
xchg
push
rcl
mov
xchg
bound
cmpb
icebp
pusha
sbb
fwait
add
xchg
lds
mov
in
and
out
repnz
inc
jecxz
mov
addr16
add
sbb
push
sub
or
mov
aad
lret
arpl
loopne
inc
jl
sbb
cmp
push
mov
sti
nop
jnp
cmp
and
mov
add
push
or
xchg
aaa
sarb
fnstenv
cwtl
cs
sahf
sub
cmc
test
sbb
loopne
add
pop
mov
rol
mov
mov
outsb
push
idivb
adc
jmp
addb
sub
rcr
dec
jno
pop
jecxz
into
loope
lods
pop
push
and
loop
xchg
out
shlb
push
pop
fdivrl
shrl
pop
ret
adc
rcrb
add
pop
inc
mov
leave
push
sbb
lret
push
mov
std
aam
gs
cmpsl
jne
les
mov
jge
gs
arpl
outsb
cmp
fldt
addb
pop
pop
call
fsts
andb
mov
inc
jae
imul
int
pop
lcall
cmp
mov
lcall
xor
dec
push
mov
adcl
out
jne
test
insl
pop
mov
shl
ja
jb
jns
mov
subps
sbb
outsl
mov
push
stos
ffree
push
mov
js
and
sti
cltd
mov
pop
adcb
pop
jb
fcmovnb
repnz
push
or
mov
sub
adc
push
adc
cltd
cwtl
jb
out
std
mov
scas
jb
push
dec
mov
in
aas
adc
pop
out
cld
test
or
addl
hlt
out
xchg
cmp
xor
lea
ret
or
ss
orb
sbb
jg
mov
bound
in
add
jge
mov
and
mov
pop
mov
cmpsl
adc
pop
insl
out
pop
les
es
in
xor
lcall
idivb
gs
sub
jo
dec
mov
inc
rcl
jno
das
out
and
pop
mov
mov
es
lods
push
cltd
int
popa
cmpsl
and
dec
aam
dec
pop
dec
fwait
push
pop
shl
fst
mov
xorl
push
jmp
test
jg
cli
mov
pop
dec
rolb
cwtl
mov
inc
out
popf
out
lock
xor
test
mov
push
mov
ss
dec
insl
out
repz
nop
stc
cmp
popa
and
dec
mov
dec
mov
mov
fwait
repnz
jg
in
inc
sbb
or
in
inc
loopne
push
outsb
lcall
rcrb
or
arpl
bound
lds
out
and
cltd
jge
or
push
jb
xchg
push
sahf
xchg
xorl
adc
jge
mov
cltd
dec
adc
pop
jae
dec
xor
addr16
cmp
or
xchg
cmp
out
outsb
xchg
dec
rcll
fisubl
xor
and
or
pop
jmp
xor
movsb
mov
outsb
loope
mov
mov
testl
mov
cmpxchg8b
in
xor
lret
push
cld
inc
repz
stos
dec
pop
mov
mov
jae
push
rolb
pop
mov
icebp
and
push
sub
in
addr16
xchg
mov
push
sub
sub
xor
dec
daa
xor
add
fldcw
mov
pusha
jno
mov
mov
stc
xor
fmull
xlat
pushf
in
pushf
mov
and
arpl
aam
fwait
clc
aaa
mov
lods
mov
mov
jb
sbb
mov
push
adc
sub
fidivl
call
adc
in
xchg
inc
test
enter
mov
push
dec
cs
rcrb
sub
and
inc
insl
sub
push
test
fucomip
cmp
insl
and
int3
push
or
jmp
int3
jae
mov
mov
das
lahf
je
mov
mov
or
popf
outsl
cmc
rcrb
jl
or
sarl
scas
lahf
inc
pop
ljmp
les
mov
popf
add
jb
sahf
stos
push
stos
push
fs
aaa
dec
cld
scas
pusha
push
fcmovb
enter
adc
sahf
jb
aad
aad
dec
setnp
push
sbb
push
cmc
fcomps
and
popa
dec
les
or
addr16
icebp
ror
mov
inc
cmpsb
loop
mov
xchg
test
pop
cmp
sahf
mov
dec
sarl
test
mov
xor
jne
mov
inc
cs
push
ds
aas
cmp
push
mov
fdivrs
cmp
fsubrs
ret
jl
pmullw
xor
push
mov
dec
shll
loope
adc
fwait
in
arpl
fbstp
lahf
sub
inc
jnp
ficoms
push
mov
dec
mov
cmpsb
mov
pop
sbb
ret
sbb
sbb
push
dec
xlat
adcl
pop
push
out
outsl
sub
sahf
fcoms
fdivl
ja
fsubr
xchg
jae
cltd
inc
dec
jle
xchg
cltd
inc
mov
repz
das
dec
popa
sbb
sub
mov
fiadds
ljmp
fists
cmc
imul
js
jecxz
cld
data16
das
cmp
or
mov
test
xor
cmp
rolb
push
xchg
dec
roll
dec
inc
mov
lds
or
mov
jnp
cmpsb
fisubl
mov
sbb
popa
les
cs
or
int3
jge
mov
push
adc
cmp
mov
xchg
push
xor
xchg
jne
ss
and
cwtl
cmp
xchg
dec
scas
in
add
jecxz
mov
mov
xor
fstpl
jge
fstpl
lahf
push
pop
call
imul
mov
lahf
pop
and
mov
js
fwait
adc
mov
mov
mov
stos
lock
int3
mov
sub
rcll
mov
cmp
jecxz
fs
in
push
sbb
add
aam
shrb
data16
xor
subb
pusha
imul
ljmp
push
cmp
xchg
nop
mov
ljmp
cld
push
mov
and
jle
mov
lcall
or
and
xor
xor
or
cmp
sbb
fldenv
dec
mov
mov
jnp
shrb
jmp
mov
mov
push
filds
sub
mov
jo
lahf
call
aam
iret
lahf
pop
xor
stos
mov
jns
loopne
add
lock
subb
push
inc
iret
sub
and
fidivrs
dec
dec
std
divb
ljmp
aaa
jmp
loopne
cltd
nop
int
mov
shlb
push
outsl
push
repz
push
add
popa
mov
push
push
sub
je
shll
in
addr16
xchg
popa
in
push
jge
pop
sbb
inc
and
arpl
xchg
addr16
test
fs
testl
aaa
stc
sub
aad
xchg
outsl
fwait
mov
rorb
xor
and
neg
xchg
or
jmp
mov
lods
lods
fcomi
test
xchg
daa
jns
mov
adc
imul
mov
shlb
dec
out
xchg
ds
fnstenv
in
out
rclb
cmpsl
lret
ret
dec
sbb
les
push
xor
or
add
jmp
mov
insb
and
inc
movsl
add
push
cmp
rcl
loop
lcall
pop
and
sbb
stos
clc
jne
lods
scas
adc
jne
das
mov
aad
sub
mov
lea
mov
or
jp
mov
mov
sti
cli
sub
in
cmp
pop
inc
adc
and
push
sub
popa
or
mov
cltd
jne
cs
xchg
rol
addr16
push
sub
aad
cltd
dec
movsl
dec
jp
ret
inc
cld
mov
lea
adc
shr
fnstcw
sub
je
or
imul
mov
dec
mov
jae
arpl
iret
cmp
inc
fwait
push
or
sbb
in
mov
xor
mov
cmpsl
jns
xchg
imul
rclb
les
sbb
aad
ds
jmp
jne
and
mov
sub
push
xor
sbb
ss
cltd
cmpsb
pop
cwtl
xor
lcall
daa
test
cli
fs
adc
xor
fdivs
test
jne
test
repnz
or
out
add
jmp
jns
fcmovb
clc
out
pop
push
pop
daa
ja
add
push
xorb
jbe
push
sbb
aas
xor
into
repnz
cmp
mov
mov
pop
add
jmp
xor
stos
push
jbe
aad
or
hlt
sub
push
pop
iret
mov
pop
movsl
mov
sub
cmc
nop
jge
adc
add
je
repnz
xchg
loop
movsb
lahf
mov
mov
test
filds
fs
bound
dec
cltd
fwait
rcl
repnz
jge
pop
mov
std
xchg
rcrb
lcall
inc
aam
lea
push
cmp
xor
dec
cmpsb
sub
push
adc
popa
push
xor
add
mov
mov
ds
push
iret
cmp
je
mov
dec
repz
ror
sar
mov
pop
scas
and
xchg
call
mov
xor
sti
call
jbe
std
pop
mov
xchg
cwtl
mov
or
sub
testb
mov
mov
loop
arpl
mov
movsb
sub
push
inc
std
nop
add
xchg
push
int3
leave
adc
jmp
iret
xchg
push
add
add
rcrl
inc
ljmp
arpl
scas
scas
xchg
sub
int
jne
xchg
movsb
lret
and
fbstp
fsts
bound
fsubrl
push
and
daa
pop
jle
xchg
xchg
xchg
repz
out
mov
push
mov
iret
mov
mov
mov
in
movsl
sti
shll
rcl
cwtl
pusha
cmp
dec
shl
cmpsb
lret
push
jbe
out
xchg
int
push
and
xlat
push
jmp
cvtdq2ps
test
inc
enter
loopne
inc
repz
and
stos
xor
push
clc
pmuludq
pop
lret
fisubl
jl
dec
repz
repnz
mov
add
or
int
hlt
sarl
das
sbb
adc
jb
arpl
dec
sub
cmp
pop
xchg
incl
loope
dec
sub
pushl
lock
mov
adc
cmc
push
push
push
lcall
jae
shl
or
nop
mov
in
push
or
je
incl
xchg
imul
jl
xchg
pop
xlat
dec
push
sub
pop
das
xlat
pushf
cmpl
test
lcall
cmp
sub
aaa
inc
aas
pop
xchg
lcall
xchg
xchg
sub
inc
sbb
dec
out
pushf
push
xchg
rorb
fnsave
sbb
pop
pop
cld
popf
aas
adc
les
jo
sbb
dec
mov
lret
orl
loope
out
add
jno
xchg
or
das
sub
fucomip
insl
mov
test
cmpsl
or
iret
leave
jno
xchg
les
push
pop
mov
int
int
xor
js
mov
or
iret
fwait
mov
out
popf
jb
icebp
stos
sbb
fstps
or
popa
adc
sub
push
hlt
daa
adc
aas
lcall
and
and
cmpsb
scas
hlt
pop
inc
gs
add
sub
mov
loope
loope
mov
decb
pop
xchg
ret
xchg
cmpsl
in
inc
cmp
pushf
mov
aad
subl
jle
push
pop
xor
idivl
xchg
out
ja
jno
xchg
scas
aam
rcrb
adc
test
rcrb
sub
or
js
xor
out
mov
bound
cmp
pushf
cmp
adc
xchg
cmp
orl
fimuls
outsl
mov
rcr
xchg
outsb
shll
xor
sbb
pop
lret
mov
jle
sub
push
popf
or
xor
or
es
sbb
std
cmp
imul
mov
sahf
xor
sbb
ss
andl
sbb
rol
fsubrs
pop
jae
andl
ljmp
lahf
or
dec
pcmpeqd
push
dec
xchg
xchg
mov
inc
test
mov
jp
cmpsb
mov
xor
jae
add
adc
test
inc
lahf
sbb
xor
stos
test
popl
nop
clc
push
out
and
jp
out
mull
cltd
adc
mov
popa
mov
dec
sub
out
mov
cmp
enter
arpl
decl
or
cmc
cmpsl
andb
xor
xor
fisttpll
cmp
ret
rcrb
xchg
mov
loopne
sub
dec
imul
xchg
pop
cmpsb
xorb
mov
sbb
adc
sbb
jmp
imul
dec
sub
repnz
adc
hlt
call
int
and
push
in
addb
jle
inc
bound
subl
stos
lret
push
popa
out
imul
sahf
mov
mov
ljmp
int3
cmp
in
inc
stos
hlt
mov
ss
ret
xchg
pop
clc
add
lea
sbb
sahf
sub
aam
div
pusha
rclb
mov
lods
in
fcmovu
sub
lret
in
mov
clc
shlb
dec
and
ret
aam
frstor
out
repz
icebp
adc
lea
dec
sbb
mov
les
push
or
ret
sbb
sbbl
jbe
push
and
loop
mov
mov
cmp
stos
iret
xor
xor
and
lret
ret
ret
fldenv
mov
mov
fs
push
test
sarl
mov
inc
loope
orb
call
jne
fwait
nop
aas
dec
sub
repnz
or
inc
jg
lahf
out
mov
mov
mov
push
lods
stos
xor
lret
mov
jae
mov
xor
and
test
cltd
dec
and
gs
pusha
mov
mov
into
fcompl
daa
and
stos
ret
sbb
cmpsl
adc
or
mov
dec
push
es
add
hlt
adc
xchg
jmp
stos
aad
in
cmp
xor
jb
inc
je
add
jno
cwtl
rorb
xor
or
hlt
jo
insb
fsts
jmp
mov
or
cmpsb
add
push
popf
popf
ss
popf
pop
lock
adc
xchg
pop
mov
mov
pop
add
cld
mov
mov
or
stos
push
subb
push
std
pop
xor
sbb
fnstenv
pop
adc
xchg
jne
pop
or
ret
aaa
sub
sbb
jne
and
adc
mov
sub
lcall
sub
loope
lods
fcmovbe
repz
inc
mov
call
lcall
sbb
dec
iret
aaa
jl
fs
divb
cmp
jb
lock
fdivrl
icebp
mov
jnp
cmc
mov
js
loopne
or
test
mov
loope
xchg
jno
aaa
addr16
lret
xchg
push
loope
xchg
pop
sbbl
data16
divb
in
inc
add
lds
int3
pop
pop
xor
pop
movsl
or
add
pop
cld
mov
dec
dec
cmp
mov
pop
subb
movsl
movsb
mov
mov
push
imul
sbb
aas
into
pop
adc
fs
clc
jo
jno
xchg
add
dec
loop
push
or
or
adc
test
lock
ljmp
xlat
mov
push
push
inc
imul
clc
xchg
or
mov
stos
jne
ja
cmovnp
mov
sub
and
or
pushf
push
xchg
jg
xlat
das
js
sahf
add
fistpll
sub
shrb
sub
push
xchg
inc
stos
cmp
sub
lahf
pop
gs
out
push
jae
cwtl
add
pop
dec
fisttps
sub
test
xchg
jae
pop
dec
mov
popl
inc
scas
push
lret
and
lock
mov
iret
mov
pop
inc
cld
loop
and
lock
pop
dec
mov
lds
sbb
daa
fsubr
and
mov
pop
icebp
inc
xchg
in
xchg
fildl
xchg
cmp
fwait
dec
dec
testb
or
roll
rcll
push
fistps
mov
inc
adc
loop
jmp
cli
cld
adc
imul
outsb
cwtl
pop
lock
cmp
idivl
into
mov
or
dec
pop
add
pop
cmp
xor
jne
adc
cmc
dec
push
xchg
lret
sbbl
jecxz
sub
xor
and
inc
push
std
push
pushf
mov
push
out
add
and
out
mov
int
jbe
mov
push
sub
dec
or
sbb
mov
mov
mov
jo
or
jmp
sub
jp
mov
repz
pop
ror
mov
xchg
xchg
lahf
int
imul
push
pusha
inc
and
adc
push
scas
imul
dec
adc
sub
inc
es
xor
cmpsb
jo
mov
mov
jecxz
and
jecxz
jo
inc
outsb
popa
pop
mov
dec
dec
ss
out
lock
mov
cmpsl
dec
sub
cmp
or
lret
addr16
mov
xor
pop
mov
xchg
and
icebp
shr
scas
pop
pop
loopne
add
je
sbb
in
pushf
pop
scas
stos
movsl
add
mov
cwtl
or
inc
imul
orl
cmpsl
int
xchg
mov
sbb
faddl
aaa
mov
movsl
js
mov
pop
sbb
imul
mov
addr16
adcl
sub
daa
pop
jg
adc
and
mov
and
xchg
pop
je
cmp
leave
test
or
pop
scas
mov
and
sbb
jno
xchg
jb
popa
in
or
out
xor
mov
and
cmpsl
push
fldenv
push
fmull
imul
pushf
xchg
clc
loope
jmp
leave
lods
in
mov
outsb
cmpsb
test
lret
fisubrs
jns
hlt
add
inc
outsl
adc
sub
call
add
dec
shrb
push
xchg
lea
ja
adc
jae
pop
fisubl
mov
popf
cmp
subl
cmp
push
outsb
clc
xor
and
dec
cmp
mov
mov
inc
mov
dec
popa
xlat
js
popaw
dec
test
or
push
dec
dec
jno
lds
stos
xor
out
push
fcoms
push
pop
add
and
or
adc
lock
and
jne
mov
ja
iret
jne
pop
jecxz
jb
lcall
dec
mov
mov
fcomps
in
insb
xchg
mov
mov
add
fmuls
outsb
cmp
pusha
int3
mov
shr
xlat
dec
out
jge
cmp
mov
daa
jne
jns
sbb
and
or
cmp
pop
add
dec
sbb
popa
xchg
sbb
push
adc
imul
sub
sub
std
jo
jo
dec
xchg
stos
and
cmp
sub
adc
daa
loop
jbe
adc
les
iret
adc
lods
cmp
sbb
fisubl
jo
sahf
pop
into
push
ds
test
aaa
imul
xchg
mov
bound
cmp
add
lds
push
jle
dec
sbb
jg
jne
xchg
jo
into
out
shr
xor
stos
movsb
mov
fs
sbb
dec
ds
test
es
pop
das
xchg
cli
mov
add
pushf
sub
mov
dec
xchg
mov
fbstp
cmpb
jbe
stos
out
scas
lds
jle
popa
imul
sub
testb
incl
adc
cmp
cwtl
lret
pop
sub
inc
cmp
xchg
cmp
bound
dec
inc
inc
xchg
push
xchg
ret
sub
xor
or
movsb
xor
mov
jg
ret
lret
cmp
jle
or
mov
mov
push
pop
jmp
fadd
lret
jp
lea
mov
ljmp
xor
outsb
sub
addl
std
shlb
test
mov
cmp
rolb
inc
xor
ficomps
and
push
jno,pt
lock
push
popf
pop
xor
and
leave
int3
dec
jecxz
mov
inc
push
sbb
stos
sub
lcall
dec
pusha
das
mov
lods
push
cwtl
cltd
js
movsb
nop
shll
stos
push
sti
inc
in
mov
dec
ret
jne
push
sbb
xchg
mov
test
mov
pop
cltd
xor
xor
sbb
mov
dec
pop
push
imul
je
ror
in
lret
loopne
xorl
mov
mov
imul
mov
cmpsl
outsb
mov
mov
add
jno
nop
cmp
arpl
aad
add
stos
mov
push
pop
lahf
push
icebp
mov
inc
icebp
jae
dec
int
cwtl
imul
bswap
popa
or
sub
popf
int3
arpl
jle
sub
push
cmpsl
dec
lret
lahf
das
das
and
xchg
add
sbb
lret
dec
unpcklps
inc
lods
pop
pop
ret
iret
mov
enter
jecxz
mov
xor
sbb
xor
adc
xor
in
test
stos
testb
jle
cmp
pop
outsl
jge
test
pop
or
xchg
cmp
pop
rclb
and
cmpsb
mov
pop
loopne
ret
adc
aas
push
mov
mov
dec
inc
mov
test
mov
imul
rorl
movhps
stc
inc
jnp
jb
inc
and
pusha
jno
mov
cmpsl
inc
rolb
imul
je
pop
and
mov
int3
jp
pusha
sub
adcl
mov
cltd
rorb
ljmp
or
inc
cltd
cmp
adc
jp
mov
aad
inc
hlt
xlat
je
xor
rcrl
movsl
jecxz
xor
xchg
xor
popa
ss
xor
popa
dec
stc
fstl
pop
fistpl
lret
jae
sbb
das
lock
inc
or
les
in
pop
xchg
gs
mov
pop
ret
jnp
les
push
inc
lods
xchg
dec
rcll
aad
scas
mov
mov
in
test
pop
es
pop
lahf
movsl
lret
aam
sub
inc
xor
cmp
inc
ja
fcompl
lods
sub
xchg
and
roll
push
iret
fisubl
xchg
xor
or
or
lock
xor
mov
jno
jb
rcl
sbb
sub
jp
cmpsb
dec
push
xor
jo
into
or
dec
out
cmpsb
sbb
jno
les
xchg
sbb
jns
add
mov
int
mov
pop
jle
sahf
cmp
mov
pop
add
outsb
orl
xchg
jns
and
or
jne
push
pop
jl
mov
cltd
sbb
out
xor
cmpb
outsl
into
xchg
add
adc
jl
mov
enter
add
jne
xchg
insb
adc
or
das
mov
jmp
mov
lock
rcrl
or
fisttps
adc
frstpm(287
jno
mov
push
sub
out
movsb
popf
xchg
clc
test
int
loop
pop
inc
and
pop
out
fstpl
hlt
push
sti
pop
and
fisttps
bound
xor
incl
push
cmc
scas
imul
add
xor
sahf
dec
inc
sub
les
leave
nop
insb
out
jg
gs
cwtl
ret
xchg
dec
xchg
mov
cmp
jbe
call
mov
popa
xchg
inc
sti
sbb
mov
mov
pop
adc
int
pop
lret
mov
daa
sub
fwait
mov
xor
in
sbb
pop
jnp,pt
call
cmp
shll
stos
int3
pop
rorl
jle
xor
fwait
pop
mov
lds
dec
scas
adc
loop
inc
mov
mov
cmpsl
shrl
sub
jecxz
dec
jb
dec
sub
mov
int
adc
ucomiss
mov
outsl
out
dec
ficoms
xor
mov
int3
out
sub
add
clc
sub
adc
xchg
ficoml
adc
mov
sahf
mov
inc
mov
rol
mov
sbb
dec
or
fists
lea
pop
and
push
inc
leave
jmp
dec
icebp
cli
mov
pop
mov
and
js
or
in
dec
pop
add
dec
inc
or
fwait
add
mov
jp
out
and
mov
pop
arpl
int
pop
jns
pop
leave
or
adc
enter
fwait
inc
sub
ja
outsb
jne
in
add
sub
adc
mov
push
test
lock
mov
insl
imul
rcrl
aad
xchg
inc
cs
sub
mov
and
xlat
pop
add
lcall
js
xchg
lods
jno
loopne
sub
dec
adc
aaa
jl
in
or
dec
call
inc
shll
insl
insb
xchg
arpl
xchg
push
cmpsb
sub
dec
or
push
out
mov
scas
repz
cli
fcomps
cmc
adc
fistps
fs
repz
mov
and
ret
pushf
mov
popa
or
roll
ret
sub
cli
das
icebp
adcl
je
dec
jmp
loopne
xchg
or
hlt
sub
shll
mov
out
push
stc
inc
cwtl
ficompl
push
jecxz
ficompl
pop
out
fmulp
in
mov
push
arpl
lods
fiadds
scas
dec
inc
inc
ljmp
push
cwtl
cmp
inc
add
filds
aam
cmpsb
sbb
sub
inc
fwait
lock
lea
push
ljmp
or
cmc
jecxz
lock
fisttpll
lods
mov
push
and
test
icebp
xor
xchg
sbb
jmp
popf
pop
and
loopne
out
dec
add
add
pop
jbe
bound
adc
sbb
ss
sbb
mov
pop
dec
fdivrl
addr16
outsl
inc
mov
xlat
pop
xor
leave
fs
lods
dec
jnp
in
mov
ret
enter
shll
sarl
in
mov
jo
aam
mov
fs
inc
pop
jnp
gs
je
lahf
fmulp
daa
cld
test
add
xor
jp
push
mov
xor
cmpsb
dec
push
dec
mov
dec
decb
movsl
mov
cmpsb
repz
pop
adc
je
loopne
arpl
in
in
das
imul
jle
pop
or
es
les
inc
mov
xor
push
roll
cmc
bound
and
or
icebp
sub
movsl
cmpsb
loope
inc
and
or
fstpt
xchg
stos
ljmp
popa
in
hlt
adc
inc
mov
add
push
push
add
ljmp
imul
dec
out
add
icebp
pop
test
ja
cmp
cmpsb
mov
cmc
mov
or
mov
push
fcompl
sbb
jl
mov
xchg
xchg
cwtl
xor
scas
push
xor
push
lahf
or
std
out
icebp
loope
sbb
addr16
ljmp
cmp
inc
add
lcall
xchg
call
repz
imul
push
ret
cltd
sahf
jb
sbb
sti
lret
fisttps
fsubrs
sbb
popa
pop
lret
mov
cmc
scas
adc
push
cmp
push
jge
jo
dec
xlat
jne
add
pop
cmp
jns
dec
and
stc
shl
notl
sahf
lock
js
repz
pop
les
leave
and
jbe
stos
sbb
push
bound
aas
or
lcall
ss
push
add
imul
mov
mov
push
sbb
lock
push
rcrl
mov
cmpb
push
lock
push
pop
mov
fistpl
jle
cwtl
pop
addl
pop
add
cmp
aaa
idivb
ja
dec
test
dec
fidivrs
inc
adc
add
into
in
inc
popa
or
xchg
jmp
sbb
inc
rcrl
xor
xchg
xor
pop
pop
pop
and
or
mov
add
scas
xor
out
ja
mov
sbb
js
sbb
jmp
repnz
in
test
repnz
or
push
lret
cs
mov
shll
rol
lahf
jns
mov
cmp
aad
and
dec
lahf
mov
xchg
filds
sbb
cld
cli
sbb
movb
inc
scas
xchg
scas
into
aas
ja
adc
mov
pop
push
pop
mov
jg
fidivl
loopne
jmp
jbe
pop
fcompl
lock
mov
dec
sub
mov
movsl
test
fildl
sub
ds
in
mov
insb
mov
or
jbe
out
inc
sarl
xchg
jl
lret
es
test
loopne
mov
pop
sub
ret
and
adc
sub
mov
dec
cmp
fsubl
sahf
adc
or
jle
daa
sti
xlat
cwtl
int
mov
bound
and
add
stos
adc
lcall
dec
stos
mov
dec
test
hlt
rorl
hlt
push
std
cmp
daa
data16
nop
mov
addr16
ss
jecxz
push
inc
stos
or
repz
pop
inc
xlat
mov
mov
jb
js
mov
in
mov
sbb
inc
inc
mov
aam
dec
test
adc
cmp
mov
jb
rcrb
adc
popa
in
sbb
jae
loope
imul
mov
add
jge
lds
or
xchg
mov
hlt
into
xchg
jnp
dec
shll
dec
fsubrs
mov
test
pop
loop
push
sub
push
push
cmp
inc
sub
push
mov
sub
cltd
imul
rcrl
cmpsb
in
repnz
jbe
push
cmp
jmp
or
sub
popa
jge
mov
add
aas
inc
shll
stos
jmp
push
mov
ss
scas
inc
ret
mov
in
out
pushf
add
mov
jns
mov
jnp
idivl
bound
push
xchg
call
ds
and
repz
dec
sub
push
cmc
sbb
xchg
imul
jno
pop
jnp
std
and
int3
aas
ljmp
cli
push
test
and
stos
rcl
aad
popf
fcmovu
adc
add
lods
mov
je
les
pop
xchg
push
pop
rcll
sub
xchg
cld
rcll
inc
mov
sub
imull
cwtl
pop
or
popa
mov
jmp
push
loope
into
ret
inc
ret
xchg
sbb
cmc
adc
fidivrs
sbb
add
xchg
and
ds
sub
loop
sarb
jae
and
pop
sbb
fsubr
fistpll
sbb
iret
js
call
cli
mov
popf
sbb
daa
shr
pop
jb
test
inc
mov
aas
sub
adc
adc
outsb
jle
das
mov
mov
arpl
enter
push
xchg
loopne
loope
mov
fldpi
movsb
add
fadds
pop
bound
arpl
and
pop
fsts
sahf
inc
mov
add
mov
iret
mov
test
or
mov
pushf
cmpsb
xchg
scas
lea
sbb
aam
stc
lea
pushl
or
pusha
mov
nop
addl
dec
pop
pushf
cmp
adc
test
repz
xchg
repz
jbe
mov
cli
add
or
push
pop
test
dec
fwait
push
lock
cmovae
movsb
inc
filds
mov
xor
jecxz
push
testl
test
sub
push
push
pop
mov
shll
add
test
jns
xor
add
lahf
add
mov
aas
adc
adc
sub
andl
js
dec
inc
xchg
lods
jmp
push
inc
mov
js
testb
es
jecxz
mov
sti
setae
fnsave
stc
adc
mov
push
cltd
mov
sahf
and
jae
push
insl
mov
cmp
in
and
add
jnp
loope
roll
jge
aaa
popf
jle
int
jg
sti
pop
insb
adc
xchg
push
imull
loopne
cmp
jp
push
out
and
dec
xchg
jmp
push
fwait
lods
loopne
iret
bound
jle
incl
push
mov
outsl
popa
aaa
mov
in
aaa
and
jne
and
inc
mov
push
inc
outsb
adc
lahf
sti
cwtl
popa
lret
sbbb
cmp
sub
cli
arpl
sbb
clc
lock
mov
ljmp
dec
aaa
push
mov
adc
sbb
and
scas
push
js
cs
arpl
call
mov
je
mov
rcll
sub
daa
pop
out
sub
cwtl
jecxz
mov
popf
and
and
mov
or
fstl
push
enter
lcall
xor
jo
out
pop
push
or
sar
mov
pusha
mov
pusha
mov
divb
mull
mov
aas
and
inc
je
shlb
lods
int
sti
in
fstpl
adc
adc
hlt
jno
add
mov
push
sbb
pop
outsb
add
faddl
jl
xchg
push
leave
push
mov
into
jle
ss
mov
iret
sub
repz
std
push
mov
push
and
jecxz
lret
stos
dec
add
add
inc
sbb
adc
jo
inc
out
negl
mov
lods
cmpsl
mov
inc
mov
xor
xchg
je
sbb
mov
arpl
push
pop
cmpsb
shrb
dec
cmp
xchg
popa
bound
push
jb
cltd
fdivl
push
add
mov
ret
jmp
mov
adc
jo
dec
mov
sbb
sbb
mov
xchg
mov
or
daa
loopne
shll
mov
inc
imul
mul
inc
mov
cli
pop
pop
cmp
out
mov
or
cld
xor
adc
daa
sbb
enter
and
cmp
fadds
test
jb
jp
add
cmp
sahf
sbb
insb
rorl
adc
sbb
push
inc
add
push
mov
shll
notl
jne
cmovo
xchg
adc
fbstp
xor
jae
dec
data16
repnz
xorb
jge
mov
jne
loope
std
repnz
std
jne
ret
cmpsb
ds
lods
pop
cli
cmc
jmp
cmp
pop
or
in
fbld
loopne
dec
and
int
and
mov
stc
jl
fsubr
es
and
jg
adc
jmp
repz
push
mov
movsb
nop
mov
lock
pop
into
xor
fs
fists
sbb
push
mov
pop
xchg
je
fistps
or
lock
leave
daa
fadds
les
mov
scas
adc
jge
insl
pusha
in
shlb
and
jp
dec
in
nop
pop
add
xchg
stos
xor
dec
sub
jbe
scas
sub
dec
sbb
gs
dec
testl
addb
pop
push
out
in
jecxz
dec
leave
js
add
xchg
ds
pop
sub
sbb
gs
push
je
shlb
push
pop
ds
sbb
mov
in
dec
es
cs
out
or
lcall
imul
fisubs
pushf
mov
adc
out
xor
dec
aas
cmc
das
and
shll
stos
xor
pop
enter
sbb
lock
lahf
ljmp
mov
popa
in
lock
push
ljmp
mov
les
mov
movsb
ds
jo
mov
mov
dec
test
cmp
xor
movb
cltd
mov
cld
les
pop
imul
fdivrs
test
mov
cmp
repnz
rolb
ljmp
dec
xchg
cmp
cmp
outsl
mov
sub
push
mov
jecxz
xchg
or
rcrl
push
inc
sbb
lret
sbbb
add
shll
out
cld
xor
sbbb
push
in
pop
xchg
movsl
sub
outsb
cltd
mov
imull
pushl
imul
mov
test
dec
stc
cmc
leave
cmp
cwtl
dec
mov
lea
pop
div
jmp
add
and
mov
jae
cmc
xor
pop
data16
and
aaa
outsb
xlat
and
in
lods
and
inc
push
lds
and
and
gs
fcmovnbe
cmpsb
sub
rcrb
mov
scas
xchg
pop
push
into
jp
push
lds
mov
adcl
subl
popa
mov
test
imul
and
or
enter
add
cmp
pop
xor
cmovns
iret
dec
lods
adc
jmp
imul
clc
cltd
dec
and
push
test
cld
insl
sub
add
sub
push
js
sub
insl
fcomps
fildll
daa
jmp
inc
adc
int
cmp
in
jge
fnsave
sti
mov
pop
sub
or
cmc
xchg
pop
jecxz
pop
cs
lret
jmp
lahf
adc
in
mov
and
ljmp
inc
negb
adc
inc
andl
push
mov
push
notb
adc
aad
ljmp
mov
fdiv
das
mov
pop
cmpl
mov
cmp
push
ficompl
dec
mov
lret
ror
cmp
mov
inc
push
xor
push
pop
pop
mov
ss
lret
xchg
jg
addr16
test
popa
or
lret
lea
inc
incb
ljmp
insb
xchg
insl
add
test
adc
and
addr16
mov
rcl
push
push
xchg
std
mov
sbbl
addl
or
orl
mov
fwait
xchg
cmp
mov
lds
fdivrl
shrl
push
pop
ds
loope
push
and
imul
gs
je
scas
push
lea
xchg
les
jo
stc
fisttpl
mov
and
scas
int3
xor
sahf
or
mov
jg
popa
inc
push
jne
pop
cmp
stos
testl
mov
in
sub
daa
xchg
push
xor
dec
xchg
fcmovnu
push
ja
jo
dec
lea
jmp
loop
mov
insb
mov
xchg
cld
pop
fldenv
int3
imul
mov
dec
sub
xchg
pushf
inc
gs
in
mov
popa
pop
cmpsb
in
imul
jnp
cld
jle
jno
lret
lret
inc
ljmp
int3
mov
jmp
pop
aam
cwtl
add
jecxz
add
mov
repz
cltd
leave
push
jge
mov
xchg
fidivrs
sbb
inc
xchg
mov
test
inc
mov
js
aas
das
scas
dec
push
mov
dec
in
int
push
pop
xchg
in
in
js
jecxz
inc
leave
mov
repnz
popa
mov
outsl
xchg
mov
mov
test
je
mov
add
popa
mov
test
cmp
push
mov
popa
sub
cs
xsaveopt
xchg
mov
test
shl
push
or
sbb
mov
lock
jbe
movsl
das
sub
push
addr16
fwait
clc
lea
mov
sti
lret
push
into
inc
rolb
daa
jbe
stc
lea
test
or
retw
lret
mov
dec
in
cs
jbe
aam
adc
jle
jge
adc
xchg
shr
mov
test
lock
mov
jmp
loop
cmc
mov
filds
adc
or
mov
fs
dec
mov
sarb
out
movsb
mov
mov
jnp
fisttpll
cmp
js
pop
es
dec
outsb
jne
aad
jae
out
je
or
xor
movsl
add
lahf
jp
aad
xor
fists
int3
addr16
shrl
cmp
sbb
shrl
and
stos
daa
xchg
pop
nop
cmpsb
test
push
loop
cmc
movsl
nop
clc
xchg
and
loope
popa
xchg
mov
imul
mov
lock
jmp
push
inc
imul
jns
orl
mov
test
sub
cmp
es
bound
ja
jg
cld
xchg
mov
ficoms
adc
jmp
lret
addr16
rcrb
dec
popf
push
popa
into
pop
mov
xor
mov
push
fwait
sahf
jecxz
mov
mov
idivb
jns
push
or
sbb
out
cmp
pop
or
inc
cmp
shlb
jb
sbb
pop
sti
call
inc
mov
out
adc
xchg
mov
fsubrl
dec
mov
push
xorl
into
aaa
test
scas
xchg
sbb
cmp
push
lahf
push
outsb
jmp
cwtl
pusha
xlat
xchg
std
mov
cmp
leave
stos
mov
movsl
lahf
inc
in
arpl
cld
lcall
popa
push
icebp
push
and
ss
fdivr
into
add
notb
sti
aas
dec
pop
cmp
xchg
mov
cmpsl
pop
sub
lds
push
cli
sub
push
nop
ficoms
jb
inc
cwtl
pusha
stos
dec
repnz
ljmp
sub
inc
mov
fwait
mov
cmp
aaa
or
xlat
pop
mov
add
push
in
lahf
mov
mov
sbb
shll
cmpl
xor
push
test
mov
popa
in
inc
nop
int
bound
or
jae
aam
repnz
mov
pop
mov
bound
push
dec
jbe
pop
sahf
sub
pop
push
inc
jo
xor
enter
jp
ljmp
aaa
repnz
cmovns
jo
xchg
add
test
out
push
or
cmp
iret
movsb
mov
lods
mov
sahf
xchg
adc
ss
jo
inc
ficoms
mov
cs
lea
dec
push
dec
call
mov
loopne
xchg
inc
popw
pop
dec
inc
cmp
lods
fdivrl
adc
mov
jno
out
cmp
sub
std
add
xlat
loope
fs
scas
or
cmp
mov
xchg
mov
xchg
ja
imul
orl
jne
sub
gs
in
outsb
pxor
push
sub
sub
test
ret
jecxz
div
cmp
in
ret
inc
int
lcall
xchg
ret
adc
inc
std
mov
dec
out
inc
cmp
addr16
push
into
sbb
jg
cmc
insl
adc
push
daa
cwtl
pop
cld
dec
jle
cmp
aas
outsb
mov
test
out
rol
loop
movsl
push
and
add
clc
in
std
or
inc
lods
idivb
jb
sahf
mov
imul
inc
call
clc
pop
fs
mov
loopne
test
sbb
xorl
pop
js
insb
jb
adc
dec
or
pop
jbe
scas
jg
in
js
and
repnz
flds
testb
and
adc
pop
xor
ds
fistpll
mov
shrb
xchg
fwait
aas
inc
pop
and
cs
sahf
fcomip
cmpsb
push
ds
xchg
or
popf
pop
mov
jp
sbb
inc
xchg
test
pop
xor
aad
mov
ja
std
push
outsb
push
lcall
psrld
and
xchg
shll
cmc
je
nop
icebp
push
int
or
cmp
into
push
xor
mov
cmp
enter
pusha
scas
adc
les
imul
xchg
jl
loope
push
mov
jge
sbb
into
xchg
pop
punpckhwd
adc
mov
and
sub
jb
stc
xchg
ljmp
and
pop
int3
ss
test
mov
repnz
adcb
arpl
jl,pn
push
out
push
mov
lds
ret
mov
xchg
pusha
xchg
push
idivl
cwtl
jo
test
pusha
bound
mov
dec
repz
test
clc
dec
sub
push
loopne
sbb
es
movsb
mov
pop
or
push
dec
mov
stos
adc
inc
rcrl
xchg
mov
inc
xor
sub
fstps
mov
jb
push
mull
les
push
add
mov
xchg
hlt
scas
push
mov
test
aaa
sbb
push
ljmp
imul
mull
ljmp
lret
dec
pop
mov
xchg
out
fisubrs
mov
addr16
rorl
sub
dec
dec
das
sahf
adc
fs
movsl
es
sbb
push
das
mov
push
mov
nop
xchg
shr
dec
loopne
pusha
cld
sbb
lock
add
shrl
cmp
mov
inc
push
repz
fstpt
mov
nop
ss
leave
and
jno
and
test
lret
stos
mov
jecxz
sbb
ficomps
push
pop
sub
xor
nop
out
scas
scas
push
bound
xor
xorl
lock
mov
xor
pop
mov
sub
jg
loope
jne
cmpsb
stos
adc
ds
popf
test
xor
mov
mov
pop
xchg
testl
rcrl
stos
and
loope
cld
ja,pt
push
cli
jo
gs
xchg
gs
mov
je
jge
lds
call
sub
mov
jmp
inc
add
push
xor
shrb
mov
lods
push
fcoms
push
popf
push
pop
dec
sbb
bound
jnp
push
sub
and
lret
jb
add
aam
or
mov
daa
push
cmp
pushf
push
stos
jmp
pop
jbe
mov
sub
xchg
notb
push
mov
in
fsubs
xchg
pop
and
adc
xchg
lock
mov
pop
or
xor
in
std
add
xor
jl
fwait
popl
xchg
out
jmp
sub
shll
mov
stos
and
or
test
xchg
cmp
loope
and
loope
cmp
fidivrl
lods
iret
jne
rclb
fistps
cwtl
ja
or
ficompl
lods
test
cmp
cltd
cmp
jmp
xchg
mov
jnp
jbe
pop
enter
out
mov
mov
jns
cmp
in
jnp
std
lret
inc
or
mov
or
ljmp
shl
push
adc
js
sbb
adc
or
xorl
pop
imul
negl
push
mov
adc
test
xchg
sbb
inc
leave
test
xchg
shll
adc
and
ret
inc
pop
rorb
dec
mov
es
clc
add
sbbl
cmp
cmpsb
andl
stc
xchg
sahf
js
push
lret
add
ficomps
mov
add
or
pop
gs
neg
cmp
xor
mov
daa
mov
fldcw
xchg
inc
lods
lcall
jne
fdivl
clc
iret
mov
inc
rorb
push
aad
pop
fnstcw
sti
test
popf
in
adc
add
or
aam
movsb
gs
sub
sarl
cs
loope
push
out
dec
jmp
cmp
inc
ret
mov
arpl
adc
xchg
pop
test
adc
xchg
loop
sbb
fsub
and
leave
mov
out
or
sar
pop
mov
out
stc
add
xchg
enter
ljmp
or
cmp
mov
cmp
andl
mov
pop
in
mov
negl
push
fwait
in
xor
enter
ret
jg
movsl
inc
sbb
data16
lret
cmp
mov
pop
dec
xchg
sub
mov
push
insl
je
jns
mov
mov
fs
test
dec
mov
enter
mov
aam
shlb
sbb
lock
jp
add
bound
and
mov
movaps
fistl
xchg
scas
push
in
cld
fidivl
std
cs
dec
mov
mov
negl
dec
jle
mov
out
sbb
dec
shl
inc
push
icebp
mov
xchg
dec
dec
ret
rcrb
cmp
loopne
mov
pop
lods
std
jp
repnz
mov
pop
insb
hlt
dec
inc
int3
test
push
mov
pop
adc
cs
std
dec
js
sti
mov
cmpsb
sarl
mov
jbe
mov
jg
sbbl
xor
adc
pop
jb
les
fcompl
push
inc
andl
inc
jo
mov
and
mov
out
stc
inc
ljmp
loopne
icebp
and
cmp
and
loopne
jle
mulb
shl
cmp
jge
xor
inc
sub
fstp
cwtl
loope
loope
outsb
and
rcrb
mov
imul
in
pushf
je
inc
fisttpll
lock
xor
es
adc
out
outsb
cmpsb
push
sbb
cmpsl
les
fistpl
fidivs
sbb
je
pop
and
clc
or
movsb
sub
push
scas
popa
ret
cli
in
sbb
pop
shr
fisubrs
std
pop
add
sbb
into
xchg
inc
sbb
mov
int
pop
aas
in
rolb
push
ljmp
shr
test
dec
mov
mov
or
pop
xchg
mov
rsqrtps
dec
lret
mov
test
add
mov
fcoms
daa
cld
movsb
dec
data16
push
aaa
jne
negb
pusha
inc
lahf
cmp
les
sub
xor
in
outsb
jo
test
rcr
inc
iret
push
xor
sub
cltd
punpckhdq
mov
or
imul
mov
cmp
cld
cmpl
xchg
mov
imul
or
jns
xchg
loope
test
jne
mov
jae
or
jge
out
sub
mov
scas
cwtl
xchg
jl
ds
lcall
test
lcall
adc
and
repnz
mov
cltd
stos
dec
mov
push
arpl
xchg
inc
daa
lahf
lods
pop
addr16
sti
add
jae
cltd
or
dec
shlb
stc
sub
xor
mov
and
adc
mov
dec
pop
pop
mov
jo
mov
mov
add
imul
cmp
lahf
cmp
push
into
and
add
ja
ret
ljmp
nop
mov
and
cmp
lcall
sub
lods
sub
dec
xlat
sbb
xchg
enter
cmpsb
scas
lahf
ds
outsb
inc
imul
test
jl
lret
jo
mov
inc
sbb
mov
mov
nop
xlat
outsb
dec
mov
mov
sahf
scas
inc
daa
jne
cmp
negb
or
cwtl
sub
mov
mov
mov
inc
out
addr16
jg
push
aad
mov
cwtl
cmpsb
loope
repnz
fsubs
in
xchg
mov
pushl
movsl
mov
push
sbb
sahf
inc
adcb
adc
fstl
xlat
adc
mov
and
out
jecxz
int
mov
xchg
dec
outsb
test
sbb
and
pop
sbb
dec
imul
mov
out
ret
sbb
cmpsb
inc
pushf
rorb
pushf
lods
sbb
dec
pop
xor
fldenv
lcall
adc
mov
inc
sbb
flds
jp
cwtl
orb
mov
xlat
outsb
gs
shl
xor
scas
cld
dec
rol
jmp
jp
cltd
jb
pop
enter
cmp
inc
pop
add
and
sbb
pop
dec
insb
movsl
dec
push
cmp
mov
loop
add
fwait
in
fnsave
sub
sub
and
or
dec
aad
mov
fs
xor
jno
stc
sub
push
mov
test
jg
pop
push
into
bound
sbb
iret
repz
jnp
mov
xor
and
mov
aas
mov
fisubrl
fs
and
loope
into
mov
inc
xor
sub
cli
jbe
or
incl
push
adc
sti
daa
rolb
and
cli
in
dec
pop
and
xchg
or
mov
mov
push
shrb
xchg
pushf
lcall
pop
cld
jo
mov
pop
cmp
psllq
mov
xchg
xchg
mov
push
lret
pop
ret
mov
cmp
pop
fsts
cmc
cmp
shl
cmp
divb
adcl
fsubr
and
repnz
and
xchg
into
popf
jl
mov
out
out
je
aam
xchg
mov
mov
dec
xor
push
aad
push
dec
jnp
fldt
add
add
in
cmp
jmp
xchg
fldcw
mov
jae
inc
cmc
cmp
sbbb
icebp
gs
jecxz
pop
dec
imul
cwtl
sahf
test
ds
push
or
dec
das
lock
inc
loop
sbb
add
jo
ljmp
imul
filds
ds
insb
popf
and
ret
xlat
test
adc
imul
or
add
xor
xchg
roll
je
inc
lods
lret
es
out
push
and
mov
daa
mulb
adc
dec
xor
inc
stos
loope
or
lret
sub
les
jmp
sbb
push
rcr
loopne
or
leave
adc
pop
gs
or
in
dec
mov
pop
dec
bound
iret
shrb
in
imul
jg
push
in
adc
inc
mov
outsb
or
push
out
and
mov
push
fdivrp
push
rcl
pushf
in
xlat
jno
ds
add
cs
mov
mov
push
aam
int
incl
and
push
movsl
xor
subb
pop
add
addb
xor
jp
xchg
bound
mov
ficoml
mov
popf
pushf
add
and
mov
cmpsl
inc
jns
mov
jb
in
lcall
inc
push
scas
dec
call
leave
jnp
push
mov
mov
push
jb
and
sbb
gs
dec
inc
mov
fucom
mov
imul
xor
mov
ret
jae
cltd
out
jmp
popa
xchg
jns
pushf
xchg
pop
ret
cmp
fcoms
mov
push
shll
xor
in
jb
fcomi
cwtl
jo
shlb
mov
es
mov
das
lock
pop
sub
outsl
push
mov
dec
imul
mov
mov
xorl
hlt
sbb
and
aas
dec
dec
rolb
adc
pushf
fsts
mov
jbe
stc
xchg
or
aas
fcmovnbe
push
ljmp
hlt
dec
test
rolb
movsb
faddl
cmp
xchg
push
mov
push
pop
cmp
xor
adc
rcrb
pop
cmpsl
scas
adc
loop
icebp
push
fimuls
mov
add
push
inc
xor
sub
inc
or
add
add
inc
rolb
repz
outsl
cmp
out
in
sarl
pop
mov
push
mov
add
mov
test
mov
xchg
orl
into
stc
xor
leave
dec
xor
mov
inc
xlat
daa
call
sbb
leave
fnstsw
nop
mov
sub
pop
dec
fldcw
mov
test
mov
mov
push
mov
dec
fdivrl
clc
and
stos
mov
test
fwait
loope
pop
sti
push
ja
mov
pop
inc
adc
insl
mov
dec
jecxz
pop
das
xor
aad
mov
js
xchg
inc
xchg
mov
or
inc
cld
sub
mov
fsubr
mov
lahf
and
test
cmp
dec
sbb
pop
inc
push
mov
mov
das
mov
add
adcl
jns
sub
mov
add
xor
mov
dec
sub
and
add
jbe
mov
pop
scas
and
push
sbb
addr16
or
fs
jecxz
mov
ficompl
mov
pop
cmp
and
addb
ret
push
jne
repz
mov
lcall
inc
lret
pop
jno
dec
fsubrs
pop
and
xlat
repnz
mov
sub
out
cmp
hlt
sub
dec
fcmovnbe
movsl
pop
dec
or
bound
cmp
fsts
cld
rorl
jp
daa
push
or
shlb
mov
lret
ljmp
ljmp
xchg
ss
and
aam
jmp
popa
and
xor
sub
std
sti
mov
xchg
js
jp
mov
sbb
ret
xor
sbb
sbbb
out
mull
inc
jns
out
je
aam
push
jmp
aaa
daa
mulb
or
xchg
scas
fsin
sahf
dec
jmp
pop
sbb
mov
push
push
stc
dec
mov
cmpsl
cld
jnp
pusha
pop
push
pop
or
or
ljmp
fmull
cmc
xchg
and
cmp
cmp
daa
push
sub
dec
or
cmp
fwait
and
xchg
or
negb
stc
mov
stos
fsts
test
inc
movsb
mov
cmp
or
jo
adc
mov
insb
jno
icebp
mov
gs
or
divps
pop
inc
push
popf
and
data16
pop
add
cwtl
cwtl
jb
mov
lock
jmp
dec
mov
enter
cltd
sub
and
andl
pop
sahf
int3
movsl
and
push
inc
lock
xor
pop
dec
push
in
mov
jecxz
sti
ret
jmp
enter
sahf
test
sbbl
pop
jl
pop
sub
test
dec
mov
sbb
or
fldt
pop
rsm
stos
xchg
adc
imul
xchg
inc
jg
mov
fiadds
inc
xchg
mov
xor
popf
pop
hlt
pop
test
mov
scas
std
dec
mov
scas
jl
insb
or
jle
sbb
daa
frstor
mov
push
push
jns
out
fldenv
adc
adc
lfs
and
pop
aam
imul
roll
and
jmp
ljmp
sub
stos
into
ret
repz
mov
push
and
or
fcmovbe
pop
cmp
mov
lcall
mov
inc
imul
mov
xchg
xchg
lret
pop
xchg
jae
fs
mov
lods
jno
enter
mov
pop
insb
out
mov
je
cmp
das
fcmove
push
adc
test
mov
sbb
aad
jl
fs
mov
xchg
nop
xor
or
sbb
sbb
pop
addb
and
mov
push
or
stc
out
mov
hlt
enter
xchg
jge
mov
mov
mov
jge
loopne
and
out
jle
ds
add
adc
loopne
lock
add
xor
pop
cwtl
pop
in
jnp
or
jb
sbb
movsb
nop
enter
mov
sub
fisttps
mov
mov
and
xor
and
outsb
aas
roll
jnp
mov
ss
aad
fwait
dec
jnp
popa
sbb
adc
inc
inc
les
adc
rorb
cmp
es
jmp
outsl
xchg
xchg
inc
test
xor
sbbl
pop
aaa
push
jno
mov
pop
aam
mov
std
push
dec
jno
xchg
jo
clc
jg
ss
bound
imul
fwait
sbb
insb
scas
push
shlb
xor
pop
jo
or
sub
mov
mov
je
cmp
add
neg
int3
push
mov
outsb
pop
popa
xor
leave
cld
mov
or
adc
in
push
rorl
test
loop
mov
stos
push
test
pop
stos
insl
xlat
nop
pop
push
lcall
stc
sub
aas
pop
movsl
sub
dec
inc
push
sbb
xor
mov
mov
dec
jge
cmp
jne
mov
je
fidivrl
xchg
dec
out
adc
es
and
mov
sbb
mov
hlt
stos
daa
icebp
or
stc
xchg
pop
sub
shrb
cwtl
in
jge
inc
dec
xlat
cmpsl
push
jb
adc
cmp
fbld
inc
fdiv
push
push
jg
int
jg
and
std
fwait
test
xchg
sbbl
push
jnp
mov
xlat
aaa
xchg
lods
lods
je
shrb
jmp
jns
push
xchg
popf
sub
ret
adc
or
jp
inc
in
sub
and
mov
out
xchg
notb
sub
jo
or
rcll
fistpl
push
mov
repz
bound
adc
ds
inc
xchg
out
dec
out
outsb
add
test
loope
popa
dec
lcall
push
popf
ja
xor
add
push
sti
xlat
mov
fiadds
test
push
mov
std
lea
mov
sbb
mov
lret
addr16
bnd
add
adc
in
or
inc
mov
or
mov
mov
add
in
push
mov
fwait
negb
daa
outsb
aad
xor
jl
xor
inc
xor
adc
testb
and
pop
push
scas
xchg
loope
adc
ret
inc
out
test
pop
cmp
mov
lods
push
nop
mov
cs
xor
jnp
enter
mov
add
jge
in
addr16
shl
dec
dec
sti
sarl
rorb
mov
cmc
sub
pop
inc
dec
mov
in
jo
fistps
xorb
and
xchg
stos
jo
xor
or
scas
mov
iret
sbb
repz
pop
dec
jmp
pop
xchg
and
jns
lods
dec
xlat
jle
das
repnz
adc
int
pop
inc
test
push
lret
fcomip
mov
pop
into
jmp
dec
push
jne
xchg
aaa
pop
mov
rcrl
decl
test
fwait
or
les
mov
adc
jg
repz
pop
cltd
sarl
add
add
or
pop
adc
push
cmpsl
aam
subl
inc
test
paddw
push
rcll
ss
inc
jae
push
mov
dec
cmp
mov
in
lcall
ljmp
sbb
cli
int3
pop
es
jno
pop
loope
mov
test
nop
subl
dec
test
loopne
or
mov
and
mov
outsb
xchg
lret
shr
jo
adc
sub
sub
ds
sbb
inc
lret
stos
pop
xor
in
push
pop
scas
je
jge
ret
repnz
sbb
rolb
in
in
ds
sbb
sahf
and
xor
pop
leave
pop
cmovg
fstp
cwtl
imul
cmp
out
jo
sub
and
push
sub
push
pop
jnp
shll
fucomp
mov
arpl
aas
dec
repz
mov
aam
dec
pop
mov
cmpsl
jmp
jl
and
pop
test
data16
addr16
push
cmp
adc
scas
mov
ret
test
mov
jbe
mov
adcb
repnz
xor
xor
xchg
pop
pop
mov
ret
add
inc
adc
in
and
cmpsl
ficomps
jb
movsl
push
imul
and
notl
adc
out
daa
mov
adc
add
jb
out
push
outsl
push
shll
jo
push
fidivrl
xchg
cmp
add
fwait
or
insl
ret
mov
rcrl
xchg
xchg
ds
adc
pop
mov
mov
mov
dec
pusha
jo
add
lret
jecxz
repnz
pop
jl
sub
inc
ret
je
dec
dec
in
sbb
lret
fnstenv
fidivrs
push
cli
es
pop
sbb
mov
mov
push
dec
ljmp
fstpl
stos
and
mov
aas
xchg
xor
daa
and
test
cwtl
xchg
movsl
dec
mov
aaa
mov
jbe
sub
sti
nop
fstpt
je
cmp
xor
stc
les
push
or
jp
and
xchg
icebp
adc
dec
repnz
mov
std
mov
sbb
stos
xchg
ret
rcrb
or
fistps
fdivrl
sbb
pusha
jmp
int3
ds
cli
and
jp
mull
mov
int
cli
rcrb
xchg
daa
ja
cmp
pop
cvtps2pi
fcoms
cld
fildl
jg
mov
jmp
cltd
lahf
stos
out
pop
adc
xchg
xor
dec
orl
adc
roll
push
ret
loope
in
mov
fsubl
jnp
jns
fs
mov
stos
cmp
shll
jno
push
loopne
adc
cmp
push
inc
loopne
out
add
lret
adc
pop
test
adc
dec
into
mov
out
in
lret
mov
roll
sbb
xchg
inc
in
inc
xor
pop
ljmp
mov
pop
jg
jle
mov
jl
data16
out
pop
jne
popa
cmp
test
xchg
sbb
scas
lods
pop
out
add
jb
cmp
loop
rorb
leave
mov
xchg
inc
pop
dec
mov
in
daa
loopne
add
test
sbb
mov
sub
or
scas
push
aas
inc
jg
dec
popf
inc
and
jo
and
or
add
pop
or
mov
pop
jp
repnz
jbe
inc
or
xchg
inc
ret
es
daa
cltd
adc
loop
sub
mov
push
push
loopne
pop
mov
enter
cmp
or
jno
jo
int
pop
cmp
mov
lahf
xlat
cmp
stos
out
xor
loopne
fwait
mov
mov
fdiv
mov
jbe
clc
or
fisubs
add
clc
cmpsl
jg
or
lret
into
sbbl
je
mov
inc
outsl
adc
sahf
dec
icebp
and
outsb
or
mov
add
stos
inc
out
sbb
dec
int
cld
cmpsb
out
aas
push
call
fiaddl
sub
xor
inc
add
pop
cmp
xchg
mov
popa
jge
mov
pushf
ret
jp
add
orb
or
test
inc
lea
jmp
mov
add
movb
push
addr16
pop
mov
mov
push
les
and
ss
push
clc
add
ret
inc
dec
xor
outsb
cmc
ljmp
inc
push
jae
outsb
mov
inc
lcall
jb
scas
pop
loopne
addr16
add
xor
lret
addr16
push
add
cli
leave
push
mov
inc
movsb
jg
ja
pop
cld
cmp
adc
adc
sbb
loopne
les
pop
mov
fst
jae
mov
mull
ficoml
movsl
aaa
std
je
lret
in
popa
popf
mov
mov
icebp
push
mov
pop
cmp
pushf
jp
insb
je
clc
fstps
cmp
sbb
cmpsl
or
jmp
call
pusha
repz
cld
mov
cmpsl
dec
sti
xor
inc
xchg
aam
out
sub
movl
ret
cmpsl
ja
xchg
aaa
outsl
mov
loope
dec
sub
mov
movsl
imul
outsb
leave
insl
mov
js
mov
jp
ret
movsb
cld
xchg
out
cmp
mov
dec
mov
mov
ds
sub
xchg
cs
loope
inc
cmp
pop
fisubrl
mov
dec
hlt
pop
or
add
or
pop
mov
sbb
cs
mov
nop
mov
dec
gs
pop
cmp
cwtl
es
pop
cmp
jo
mov
push
je
lret
cmpsb
cmp
aam
fiaddl
mov
leave
mov
rcrl
xor
outsl
sub
pop
ret
fnstenv
dec
flds
sub
mov
mov
insb
sbb
inc
pop
fwait
nop
cmc
mov
aad
test
mov
add
sti
and
jl
xchg
leave
adc
adc
repz
push
insb
or
xor
jnp
push
rolb
dec
adc
testl
lret
cli
mov
ret
roll
out
sbb
repnz
xor
clc
mov
shlb
or
pushf
sbb
mov
inc
xchg
mov
sub
ret
dec
mov
pop
adcb
sbbl
xor
push
xchg
mov
adc
push
mov
scas
shr
pushf
xor
jns
icebp
repnz
rcrl
sub
decb
mov
xchg
mov
sti
mov
lahf
and
je
inc
pop
mov
dec
faddl
mov
jg
adc
fsubs
jnp
xchg
push
xor
aas
mov
or
aaa
lods
cmc
call
push
jne
mov
mov
push
rcll
mov
sbb
shl
psubsw
mov
cltd
jbe
push
mov
sbb
int3
cmovno
xor
push
jae
push
push
stos
push
and
arpl
ret
subl
nop
rcr
popa
mov
push
test
mov
divl
mov
and
enter
sub
clc
mov
sbb
movsb
in
lcall
adc
insl
jo
add
jns
pop
xchg
daa
inc
cli
push
adc
push
push
lock
rol
or
push
outsb
leave
aas
mov
sub
jb
jbe
adc
or
fists
inc
xchg
sub
pop
ret
lock
addr16
fnstenv
add
lcall
push
aaa
adc
lahf
test
jp
lods
popa
xor
aam
imul
mov
jb
lea
or
adc
cs
dec
cmpsl
lods
xchg
fnstenv
cmp
cmp
sub
adcl
mov
xchg
jge
sbb
pop
mov
mov
mov
enter
mov
jno
add
cmp
movd
push
movsb
mov
jmp
mov
jg
and
push
mov
pop
rcll
inc
inc
cwtl
in
xchg
or
jge
and
xor
jne
jp
cmp
mov
mov
shll
je
in
repnz
cltd
cmpsb
mov
sbb
mov
imul
xchg
in
lret
pop
ficomps
rcll
stos
xchg
lcall
insl
nop
cmp
push
insb
sbb
addr16
sub
lret
sub
outsl
call
and
jge
xchg
pop
decl
jae
stos
sub
push
add
fstl
cmp
jns
pop
cmpsb
inc
sahf
pop
jg
mov
cmp
cmp
mov
dec
lds
add
jo
dec
mov
xchg
lds
cs
mov
stc
dec
rolb
loopne
sar
movsb
fisubrl
dec
adc
xor
sbb
outsl
lods
or
rorb
xor
xchg
pop
imulb
outsb
shrb
sub
in
push
sbb
aam
jb
add
in
pop
bound
pop
jae
movsl
xor
push
sub
out
sarb
out
fsubl
mov
sbb
lock
and
scas
aaa
dec
iret
and
inc
into
jae
jle
or
pop
mov
or
jns
mov
cmp
jno
insb
mov
dec
pop
xchg
popf
aad
push
sub
xchg
mov
sub
scas
repnz
pop
xchg
mov
insb
and
imul
xchg
pop
sub
jl
jmp
nop
mov
mov
es
add
in
adc
mov
stos
jg
jae
sbb
pop
inc
push
and
and
insl
test
adc
cmp
hlt
mov
inc
jns
lcall
mov
int3
outsb
adc
scas
aaa
popa
pop
and
in
cmp
lock
je
fwait
lcall
lods
push
inc
mov
inc
lods
mov
sar
adc
inc
add
dec
add
mov
pop
lcall
and
leave
cmp
lret
mov
push
loope
mov
fstp
xchg
adc
insb
or
data16
std
jno
mov
fs
divb
jno
sbb
mov
mov
mov
stc
dec
aad
cmpsb
mov
testb
or
or
jmp
cmp
rol
call
inc
jge
push
sub
mov
dec
cmp
ss
dec
inc
pop
and
stos
cs
and
popf
pop
fisttpll
icebp
in
inc
jmp
jns
pop
cmp
movsb
jecxz
movb
mov
xor
or
lahf
insb
xchg
sahf
cmpsb
lods
ljmp
in
dec
outsl
fcmovnu
jae
adc
mov
dec
mov
xor
fsubp
es
jle
out
cmpsl
inc
pop
push
or
sahf
ss
je
filds
add
insb
push
movsl
negb
xchg
xor
sub
lea
rcll
aas
ret
pop
fiadds
inc
fcomps
enter
and
xor
loope
cld
cmp
xchg
jns
or
hlt
push
lods
in
sub
mov
push
ret
mov
out
loop
stc
or
mov
fidivl
sarl
jo
cmc
mov
adc
into
andl
test
pop
add
lahf
pop
cmp
add
cli
divl
jae
cmp
cmp
pusha
sti
dec
leave
push
stos
xchg
xor
bound
add
jmp
push
shl
and
mov
push
or
jge
mov
outsl
dec
sbb
dec
cmp
int3
test
jne
outsl
sub
rcrb
roll
push
cmpl
popf
jo
nop
push
pop
jg
addr16
les
sub
sbbl
jp
ret
icebp
lea
sbb
or
leave
aad
loop
shrl
scas
push
xchg
jno
movsl
push
lret
ret
popa
jp
mov
xchg
and
fcoms
daa
dec
adc
aaa
movsl
jo
outsl
cltd
stc
push
pop
dec
ljmp
jp
cmpsb
ret
imul
shrl
mov
nop
add
lret
xor
cwtl
jle
fistpl
xor
gs
mov
fidivs
fwait
push
popf
push
pop
int3
lcall
out
push
push
popf
mov
sub
sbb
push
movsl
decb
mov
adc
push
jg
in
outsl
ffreep
pop
jne
jns
sub
push
dec
fdivr
xchg
push
mov
subl
xor
nop
pop
mov
ds
sbb
add
lahf
xor
lea
fisubs
call
jge
sbb
pop
bound
jmp
jg
lock
pusha
mov
aam
jl
test
inc
lret
adc
jbe
imul
xchg
jp
ds
and
jp
shlb
push
fs
pop
repz
dec
or
insl
xor
gs
popa
dec
push
ljmp
cmpb
sbb
popa
xchg
mov
not
sbb
xor
push
dec
sub
adc
cmc
aam
and
packsswb
es
int3
inc
cmp
mov
out
mov
leavew
test
and
push
jns
fists
pop
mov
mov
les
add
mov
imul
mov
pop
out
out
icebp
dec
dec
lea
sub
add
push
lods
lods
xor
push
and
sbb
popa
lds
cmp
cld
lcall
lds
jne
xor
xchg
iret
dec
xchg
das
xchg
pop
or
mov
fisubs
shr
cwtl
repnz
jle
sub
psrlq
cmp
cmpsl
insb
cli
jmp
inc
cmp
pop
jne
jg
adc
dec
mov
sbb
push
dec
push
adc
mov
ja
jb
adc
rorb
clc
pushf
dec
outsb
inc
push
mov
xchg
push
xor
mov
inc
mov
dec
mov
add
or
popa
in
push
dec
fcoms
dec
xor
outsl
cmp
dec
loopne
cmp
and
xchg
lahf
xor
je
inc
imul
enter
sbb
cwtl
stc
cmpsl
xor
sbb
sbb
cli
jmp
or
rorl
in
pop
in
xchg
pusha
int3
mov
roll
adc
and
adc
sbb
cmpsb
xchg
cmp
cmp
sub
xchg
ljmp
cmpsl
cmp
adc
cwtl
test
jle
testb
push
repnz
outsb
add
test
xor
ds
add
call
leave
cmp
sub
aad
rclb
pushf
cs
je
cmc
ret
call
pop
sti
es
cmpsb
adc
dec
or
jg
mov
ret
add
jnp
inc
xchg
jg
push
in
clc
jp
mov
pop
test
movsl
dec
testl
in
addr16
ljmp
inc
cmp
in
sub
fnstsw
es
jb
xchg
push
mov
nop
inc
fcmovnu
mov
mov
and
lea
fs
popa
ret
dec
adc
jb
inc
stc
push
and
mov
inc
addr16
mov
push
leave
movsb
adc
jp
mov
ja
adcb
and
jl
out
jnp
inc
sub
ret
rorl
push
dec
mov
mov
dec
sbb
sbb
aam
stos
mov
pop
imul
xchg
push
and
sub
jp
jmp
sub
imul
push
mov
push
or
push
jno
dec
mov
or
jae
cmp
add
mov
imul
scas
push
test
mov
mov
push
push
sbbl
out
movb
test
cmp
dec
dec
cmc
push
jno
mov
xor
jecxz
xchg
call
les
push
cli
mov
iret
stc
ret
mov
out
call
sahf
stc
fsubrl
jg
cmp
inc
outsb
add
inc
cli
push
in
pop
and
xor
add
fwait
xchg
leave
xchg
sbb
adc
or
xor
sbb
push
fimull
arpl
cwtl
dec
dec
xchg
mov
shlb
jns
das
xchg
add
call
jmp
mov
popf
in
xor
xchg
xlat
fistpll
sub
sbb
int
stc
cmp
cwtl
jmp
insb
xcrypt-ecb
cmpsl
dec
sbb
into
sbb
fdivrs
inc
inc
jl
lock
dec
pop
in
jno
fnstcw
xor
cmp
aad
repnz
xor
psubb
imul
into
ret
rol
aam
aas
shr
es
cli
xor
sub
jb
adc
sarl
adc
mov
sbb
pop
or
loope
aaa
cltd
sub
and
fld1
jb
push
add
adc
mov
mov
xor
mov
rcrb
ljmp
cmp
inc
sahf
fs
jbe
mov
mov
aas
pusha
cmp
xchg
inc
adc
sub
andl
mov
push
movsl
mov
fcmovbe
xchg
enter
mov
inc
push
dec
dec
jbe
ja,pn
stc
pop
cmc
iret
sti
call
sub
pop
shll
into
imul
push
jne
pop
dec
mov
dec
add
jmp
or
cs
sbb
inc
js
jae
mov
mov
jle
jbe
inc
push
inc
inc
cmp
rcll
les
mov
pop
icebp
and
inc
in
fidivrl
jnp
jle
mov
mov
bound
mov
repnz
mov
je
dec
loopne
add
push
inc
shlb
push
xor
mov
inc
or
shlb
jmp
cs
daa
cmc
add
inc
lcall
pop
lds
add
and
jb
mov
cmp
adc
lret
mov
lea
and
xor
in
inc
lock
or
push
imul
fisubl
into
jne
lcall
mov
inc
cmp
add
fst
add
mov
inc
cmp
iret
pop
sub
push
pop
cmc
pop
inc
pop
cli
out
sub
shl
pop
pusha
enter
push
insb
je
lret
jo
xchg
gs
pop
jmp
add
js
ss
add
sti
lret
pop
aam
ds
cwtl
cs
push
push
fimull
lcall
lds
cmc
add
aad
test
lock
loop
dec
add
xor
popa
ret
mov
inc
xchg
cmp
push
jne
jno
andb
mov
push
popa
into
mov
les
fistpl
sahf
mov
fisubrs
sub
std
adc
and
push
clc
push
adc
jmp
ficomps
ds
pop
push
pop
pop
lahf
scas
test
fisubrl
aas
dec
mov
cmp
mov
fstl
sbb
add
push
mov
arpl
pop
rcll
jns
cltd
jge
int3
ja
test
jne
mov
test
subl
xor
mov
dec
insl
addr16
xchg
sbb
jne
mov
jnp
cmp
scas
xchg
dec
jbe
pushf
jg
cltd
fnsave
loopne
push
mov
call
push
rcll
loop
shrb
out
inc
fwait
cmc
cld
sbb
dec
inc
jnp
stc
adc
shl
icebp
jno
sub
fldl
lret
xchg
or
shll
inc
out
xor
aam
sbb
rcrb
cs
jne
outsb
push
add
dec
aas
sbb
mov
lea
fisubl
pop
adc
cli
ss
mov
or
sahf
ret
jno
push
lret
mov
dec
xchg
int3
lods
inc
sbb
test
jbe
pop
fisttpll
loopne
push
cmp
ss
aam
lock
and
lret
in
and
inc
mov
mov
das
popl
rcrb
faddl
push
cmpsb
dec
push
cmc
test
pop
or
pop
or
lcall
xchg
movsb
mov
mov
push
lcall
dec
and
adc
mov
and
adc
daa
ret
push
jnp
push
jg
sarl
cmp
dec
enter
or
stos
cld
jp
cmp
mov
fst
imul
pop
fsubp
ja
cltd
test
cmp
or
sub
lock
ss
pop
inc
scas
gs
xchg
xchg
arpl
jmp
test
fidivl
cld
fmuls
ret
push
jae
sbb
mov
sti
into
adc
insb
popa
das
cltd
andb
dec
inc
xchg
out
fsts
nop
dec
or
loope
or
dec
dec
repnz
hlt
rcr
and
dec
je
xor
pop
popa
inc
sbb
outsl
jb
pushf
pop
faddl
sub
in
push
lods
xchg
sbb
fnsave
xchg
mov
xor
stos
sbbl
mov
adc
aam
mov
mov
jmp
inc
into
dec
dec
mov
xchg
dec
jbe
cmpl
jno
mov
jl
jmp
add
fs
inc
pop
sub
ss
push
xor
out
dec
xchg
in
dec
cmc
mov
into
testb
dec
push
test
mov
outsl
pop
dec
cmc
stc
dec
xor
xorl
pushf
jo
test
arpl
cmovae
scas
sbb
in
push
call
mov
div
cltd
push
je
jns
movsb
mov
int
xchg
hlt
push
out
mov
clc
fdiv
jmp
cmp
pop
pop
xchg
outsl
lfs
cmpsl
mov
daa
jno
cmp
sahf
loopne
sub
mov
testl
cmpsb
pop
aam
add
fnstcw
push
sbb
lcall
dec
rcrb
loope
js
js
into
xchg
jmp
add
mov
pop
dec
cmp
inc
leave
dec
inc
imul
xlat
rcrb
test
jl
std
cmp
movsb
scas
xchg
lcall
cmp
jmp
mov
es
cmc
data16
mov
loope
nop
hlt
sahf
scas
xor
leave
aas
sub
and
xor
add
cli
and
out
fwait
lret
jecxz
scas
cmpl
dec
popa
xor
jp
push
sbb
ljmp
neg
pop
mov
mov
dec
mov
fbstp
dec
insl
pop
mov
inc
xor
add
in
sahf
pop
aam
jg
dec
popa
inc
in
aam
popa
ja
stos
jmp
into
lea
xlat
push
scas
and
inc
mov
hlt
sub
mov
sahf
xor
mov
int3
test
lods
clc
inc
popa
pop
mov
pop
push
pop
or
int
pop
pop
adc
mov
sti
mov
mov
cmp
arpl
xor
pop
dec
xor
adc
popcnt
ja
scas
stos
jmp
mov
jp
lahf
jns
xbegin
outsl
cltd
mov
pop
repnz
pop
cmp
in
mov
and
mov
mov
scas
faddl
fsubs
iret
cs
call
pop
sub
sahf
dec
xchg
insl
inc
and
push
push
or
call
inc
xor
mov
rorb
xchg
push
addb
push
xchg
xchg
xor
fwait
mov
mov
mov
popf
divb
jecxz
mov
add
mov
sbb
pusha
dec
push
js
ds
pop
cli
out
rclb
rol
adc
sbb
push
sahf
xor
popf
shll
lea
shrb
lds
out
adc
mov
mov
cmpsb
js
bound
cmp
cmpsl
cmp
or
lret
push
adc
xor
addb
mov
xor
sub
jnp
adc
loope
ret
cmp
jns
ficomps
fimuls
loope
out
fistpll
pop
lret
jne
mov
push
mov
int3
std
pushf
outsb
cmpsl
cmp
popf
jae
ds
sar
repnz
gs
jmp
cmc
repz
stos
cmp
sub
cltd
push
mov
jae
mov
add
mov
jl
sub
xchg
mov
packsswb
xor
call
sub
aaa
out
sbb
xchg
and
xor
xchg
inc
incb
popf
xchg
jne
inc
inc
mov
add
hlt
mov
or
dec
sub
xchg
push
mov
push
sub
sub
mov
xchg
int3
xchg
in
jle
push
jo
in
add
mov
push
test
push
stc
xchg
inc
pushf
imul
or
jae
aam
mov
xchg
mov
pop
mov
fsubs
fdiv
jmp
and
add
rolb
pushf
dec
or
adc
jbe
test
adc
pop
iret
push
push
lock
fnstsw
xchg
dec
popa
adc
repnz
aam
xlat
mov
jp
mov
push
jmp
and
dec
push
cmp
je
fistl
rcrb
lea
mov
xchg
out
fsubr
mov
out
cltd
lahf
sbb
leave
add
inc
dec
lcall
pop
or
pop
icebp
push
call
mov
mov
dec
cmp
cltd
rorb
lahf
pop
dec
addr16
pop
ret
mov
in
out
fldln2
mov
fisttpll
mov
shr
jg
sbb
xchg
sub
sbb
stos
pop
mov
mov
dec
cmpsl
pop
jmp
ss
cmpsl
arpl
inc
rclb
xor
sbb
mov
inc
ljmp
sbb
sbb
sahf
pop
bound
in
insl
dec
orl
pop
sub
add
mov
or
dec
cmpsb
in
and
lahf
jge
lds
out
mov
rorl
or
cwtl
mov
cmp
sbb
mov
push
cvttps2pi
ss
jno
add
mov
mov
adc
mov
adc
out
mov
jo
data16
xor
add
mov
sbb
stos
sti
jbe
std
xchg
aam
mulb
jle
fldcw
xorl
clc
shl
sbb
test
inc
out
add
arpl
int3
adc
sbbb
add
dec
mov
int
in
or
dec
push
sti
fdivrl
pop
js
outsb
jge
je
stos
jmp
and
or
inc
jo
fistpl
and
mov
sti
je
lcall
sbb
test
aam
ljmp
xchg
jmp
or
nop
leave
sbb
mov
fists
clc
dec
push
imul
bound
stos
cmp
pop
pop
dec
push
push
inc
loopne
mov
push
xor
es
adc
adc
icebp
pop
lcall
cli
fcomps
sub
sub
popf
mov
insl
ds
mov
je
mov
sub
stos
xchg
or
shrl
ret
out
mov
clc
mov
pushl
stos
ss
mov
fidivrl
cltd
sbb
repnz
jns
jecxz
mov
loop
dec
rolb
add
loop
mov
sar
jle
xlat
popf
jg
inc
iret
scas
sbb
fldt
xor
rcrb
sub
stos
test
or
ljmp
push
jae
out
sbb
lahf
lahf
jmp
les
and
pop
leave
xchg
sub
cmpsb
pop
push
xlat
aas
sbb
test
add
fcomp
cmp
fisubrs
and
and
push
inc
loope
pusha
out
enter
mov
mov
push
xor
cmp
test
sub
cmp
add
pop
sbb
dec
jae
pushl
push
shlb
xor
cli
inc
xchg
clc
push
push
fcmovnbe
jnp
adcl
cmp
test
or
in
jnp
adc
mov
cwtl
or
dec
pop
mov
cmc
mov
push
fldt
incb
jg
lods
insl
adc
jl
fldcw
in
dec
lcall
mov
sbb
and
xchg
pop
mov
enter
jmp
xchg
lret
xlat
jnp
cmp
adc
adc
scas
sub
jp
lods
pop
sub
cltd
push
mov
inc
cmc
mov
inc
in
adc
in
lea
xor
push
sub
ss
jb
daa
fisubrs
gs
cmp
fsubs
leave
sbb
pop
gs
mov
les
jg
in
fldenv
inc
xchg
pop
mov
fnstenv
add
mov
mov
adc
int3
jecxz
cmp
adc
repnz
pop
cmpl
and
jle
loope
xor
imulb
fwait
sub
hlt
xor
in
push
sbb
data16
data16
inc
jp
fnstenv
cmc
xlat
int3
fcmovu
pop
jge
sub
push
push
push
sbb
mov
pop
jns
sub
jb
fistpll
inc
sldt
adc
pop
sub
imul
out
notl
lock
dec
inc
mov
cmp
xchg
jns
rcll
and
xchg
sbb
mov
xor
in
cmc
dec
and
sbb
rcll
int3
pop
fs
pushf
xorb
jae
and
rol
jns
out
addr16
stos
scas
cmp
hlt
prefetch
es
aad
dec
xchg
cmpsl
mov
add
and
jg
fwait
cmpsl
test
jne
sbb
cld
sub
stos
je
and
cmp
push
fsubrs
roll
lods
sub
xchg
xor
mov
jle
mov
das
ds
xorb
or
inc
outsl
test
cmpsb
in
inc
sbb
add
cmpsl
or
or
daa
mov
dec
fiadds
xor
jno
xor
mov
sub
cmc
js
jbe
mov
mov
adc
lea
mov
add
mov
sbb
gs
sub
xchg
test
cs
cmp
mov
scas
in
mov
push
xlat
xchg
in
inc
mov
arpl
adcb
sbb
pop
pushf
test
push
xorps
movsb
add
adc
lock
fidivl
xchg
popa
lret
aam
std
ret
les
xchg
mov
mov
lcall
xchg
pop
push
enter
jb
push
cmpsb
push
pop
sub
repz
mov
lock
push
mov
loop
inc
gs
jp
lds
cs
dec
jno
in
andb
add
out
inc
out
add
inc
loope
subb
cwtl
jae
mov
lds
jg
je
popa
xchg
sub
inc
mov
xor
aaa
imul
iret
jns
scas
outsl
jne
dec
inc
hlt
mov
mov
jb
adc
arpl
push
push
vcvtsd2ss
cwtl
hlt
adcl
adcl
cli
shlb
sub
mov
mov
das
sbb
mov
dec
fstpl
and
pop
mov
rcr
enter
mov
ljmp
mov
dec
repnz
stc
shll
adcb
pushf
sbb
mov
xchg
jo
mov
icebp
and
push
and
add
ja
xlat
jae
push
mov
cmpsb
inc
adc
and
lods
push
sub
and
mov
xchg
xchg
repnz
push
push
out
movsb
cwtl
adc
cmp
test
fmull
or
and
jb
xor
faddl
or
scas
sub
dec
call
xor
sbb
out
xchg
test
rorb
shll
js
rcrb
xchg
mov
loope
lcall
or
dec
shll
mov
cmpsl
jbe
cmp
mov
xchg
dec
outsb
pushf
xchg
stc
mov
pop
hlt
pop
sub
sarb
pop
cwtl
xor
mov
outsl
push
out
test
enter
cltd
cmpsl
xchg
jne
dec
or
sahf
and
cs
dec
adc
das
daa
jge
pop
push
bswap
cmpsl
xor
repz
out
jnp
ja
inc
pushf
xchg
mov
push
push
jae
std
movsl
jbe
stc
leave
pinsrw
jmp
clc
mov
stos
orl
sub
je
jnp
iret
pop
jne
jge
xchg
mov
int
cmp
mov
pop
rorl
ret
stos
in
xchg
les
xor
mov
adc
inc
sbb
jl
outsl
fs
ret
loopne
jmp
sbb
or
mov
add
bound
xor
push
pop
rol
cmc
add
cmp
repz
pavgb
imul
pushf
fnstsw
in
adc
sub
test
cmpsb
mov
mov
and
out
lcall
nop
int
lea
sub
out
iret
rcll
lahf
daa
sub
and
adc
lahf
mulb
jns
mov
mov
xchg
test
lods
cmp
out
daa
cltd
jno
sub
jnp
pop
popf
aam
loop
mov
sub
push
sub
pop
adc
gs
fsts
or
mov
cmpsb
and
or
jg
add
insl
test
ss
mov
fcmovbe
lock
addr16
add
xor
repz
xor
xlat
xor
mov
sbb
repnz
mov
in
insl
insb
stos
sbb
jle
test
xor
scas
fldl
inc
xchg
adc
jnp
dec
repnz
pop
fdivs
in
jg
or
cmp
sarl
dec
ss
mov
xor
push
popa
push
mov
aas
lock
xchg
clc
mov
dec
adc
rcrb
and
cmp
cmp
xchg
mov
out
insl
xchg
lock
jno
mov
cli
imul
push
pop
add
test
mov
daa
xor
lret
std
pushf
cli
ja
mov
jo
adc
sti
xchg
dec
les
test
insl
addr16
rdmsr
leave
push
dec
rorl
mov
jmp
imul
add
and
aaa
xchg
inc
xchg
stc
arpl
subl
add
sub
popa
xchg
push
jae
fwait
jl
sub
mov
jecxz
repz
dec
inc
adc
es
jbe
mov
in
in
mov
pop
dec
hlt
push
shlb
cmpsb
adc
in
jl
das
cmp
fldcw
lock
pop
cmp
add
pop
fnstsw
xor
lcall
or
rcrl
xchg
repz
lods
jl
or
in
lahf
jl
cmc
scas
pop
or
int
mov
dec
pop
inc
and
pop
push
insb
inc
or
cmp
push
xorb
lds
lock
push
xor
dec
mov
aas
mov
cmp
xchg
pop
inc
lock
bound
filds
lahf
ficoml
negb
outsl
lcall
out
mov
push
push
js
sub
push
add
pusha
sbb
xchg
scas
cmp
mov
pushf
hlt
inc
inc
sar
mov
lahf
or
pushf
mov
pop
sub
out
call
pop
cli
dec
inc
dec
std
fimuls
pop
cmp
mov
stos
stc
loope
push
js
inc
jmp
cmp
fwait
add
push
cmp
cld
inc
stos
adc
outsb
or
cmp
push
icebp
dec
imul
sahf
lods
cmc
daa
aam
cmp
or
cmc
cmp
test
jns
mov
jp
fisttps
cmp
popaw
and
xchg
movsb
rol
ljmp
adc
sarl
clc
scas
inc
lods
pusha
add
jge
popf
test
rclb
out
insb
jge
sti
jl
push
pop
pop
xor
lcall
mov
lret
mov
iret
jbe
jb
xor
ficoml
mov
or
mov
mov
std
jae
xchg
imul
jmp
xchg
repnz
cmc
add
pop
pusha
cs
xchg
int
push
pushf
fidivrl
int3
rcr
pop
push
sbb
and
push
mov
daa
add
lahf
int
stos
cltd
ret
outsl
mov
xchg
std
cli
jle
movsb
loopne
mov
dec
or
popa
fisttpl
mov
pop
mov
pop
mov
sarb
sub
addr16
fcompl
jmp
xor
sbb
fnsave
cwtl
push
outsb
add
cli
lods
data16
adc
jp
dec
lock
cmc
mov
push
xor
adc
xchg
out
clc
lock
xlat
shrl
repnz
in
hlt
test
sti
push
lret
negb
shlb
rolb
pushf
jmp
sub
ret
xor
push
mov
and
mov
les
adc
testb
nop
sbbl
cmp
lds
xor
jne
test
xor
xchg
sub
or
xor
adc
loopne
push
xchg
sbb
mov
leave
lcall
stos
mov
data16
push
mov
jmp
dec
rorb
pop
scas
xor
loope
mov
push
cs
stos
cld
pushf
push
popf
call
mov
stos
and
add
sub
fs
test
adc
add
in
jl
bndstx
mov
insb
sbb
daa
fwait
aaa
ret
inc
es
clc
shlb
mov
fidivl
rorb
scas
inc
mov
hlt
xor
fadds
pop
xor
shrb
in
mov
cmp
dec
jmp
or
inc
cmpsb
out
fwait
dec
cli
dec
mov
adc
cwtl
mov
mov
stos
sub
xor
mov
cmp
les
sbb
movsl
cs
sar
in
or
test
repz
sbb
xlat
inc
mov
fbld
cmp
add
insl
sahf
into
insb
xchg
or
xchg
cltd
aad
push
mov
sub
or
fstl
stc
out
and
daa
or
mov
lret
sbb
jns
pop
pop
out
lret
das
xor
out
arpl
lods
sbb
mov
sub
add
arpl
xchg
mov
sub
xchg
lahf
mov
outsb
mov
das
xchg
push
in
xchg
mov
xor
cld
xor
pop
push
add
sbb
scas
pop
out
sbb
mov
jnp
mov
push
jle
jno
in
fsub
jnp
sub
test
inc
push
movsl
icebp
mov
arpl
subb
popf
cmp
push
ljmp
mov
mov
jl,pn
dec
cwtl
mov
cmp
mov
add
negl
gs
loopne
push
push
pop
pop
mov
push
leave
rep
add
adc
in
mov
pop
in
bound
loop
cs
ror
push
mov
pop
cmp
mov
fistpll
pop
aad
push
out
test
add
dec
push
lock
dec
clc
movsl
pop
and
fisttpll
adc
jmp
sbb
cwtl
and
xchg
mov
int3
rcl
repz
jge
in
in
mov
inc
je
push
push
imul
push
ds
jl
dec
lret
sub
mov
in
test
cmp
adc
ja
movsb
mov
dec
xchg
sarb
sbb
mov
fstpt
out
ss
push
imul
pop
or
xchg
int
push
in
out
iret
inc
push
or
push
je
rcl
sub
dec
jle
inc
jle
jns
popf
xchg
lock
jp
and
mov
arpl
push
adc
sbb
das
repnz
pop
or
or
les
mov
cmpsl
adc
repz
push
xor
dec
push
loopne
mov
jp
push
fs
mov
insl
rclb
xor
insl
or
dec
dec
add
add
jb
jg
jbe
cld
mov
test
inc
imul
fs
jg
mov
ja
loop
cld
jns
mov
sahf
jg
sbb
jns
aad
repz
ljmp
xchg
popf
push
push
ficomps
xchg
in
fiadds
push
lods
xlat
iret
or
sbb
jmp
subb
jmp
and
pop
xor
hlt
jg
movsb
nop
jmp
adc
push
hlt
subb
and
push
popa
mov
fs
inc
mov
rcrl
add
sbb
jb
adc
les
movsb
nop
repz
xchg
adc
adc
or
ds
divb
loopne
jno
gs
movsb
xlat
testl
shl
or
call
idivl
or
mov
adc
jne
hlt
adc
int
scas
pusha
xchg
add
ljmp
jb
lods
es
stos
or
out
pop
imull
lods
mov
adc
pop
xor
movsb
or
jno
xchg
test
xchg
xchg
dec
fdivl
cmp
aam
imul
bound
jmp
mov
inc
add
sub
ficoml
insl
lods
mov
aad
add
popf
roll
stos
js
push
jns
jnp
stos
dec
pop
insl
cs
clc
xchg
and
je
fcmovnbe
imul
ficomps
adc
adc
bnd
jge
ss
insl
push
mov
aam
jg
adc
push
mov
popa
mov
cmpsl
pop
aaa
loop
adc
fstpt
jo
mov
mov
dec
xor
pop
or
xchg
enter
mov
dec
inc
pusha
xchg
xchg
cmpsl
ds
jl
sbb
push
stos
in
call
pusha
out
clc
fs
xor
cmpsb
gs
and
lods
repnz
cmp
in
loop
stos
mov
mov
fldt
inc
add
cld
enter
ret
sbb
sub
dec
cli
cmp
fcoms
scas
pop
in
popf
xchg
int
popf
xchg
push
cmpsb
cltd
mov
cli
push
jae
bound
shll
cs
inc
lcall
push
pop
lcall
cmpsb
mov
aad
std
push
lock
arpl
pushw
aam
scas
loope
test
sti
cmp
and
rorl
jb
jp
pop
stc
sub
lods
in
adc
mov
add
pushf
xchg
dec
dec
test
xor
push
and
pop
adc
lods
out
cmp
and
pop
aam
fldenv
add
mov
pusha
push
loop
in
push
fiadds
inc
cmp
dec
add
push
push
sub
lret
int3
cwtl
mov
fnstenv
jo
movsl
xchg
xchg
lea
dec
lods
jo
pop
jmp
sti
idivl
mov
xchg
in
test
cld
pushf
shlb
cld
fdivr
insb
loop
xor
mov
imul
xor
push
push
cmp
aad
mov
fsubr
mov
and
xor
out
jae
xchg
cmpsb
repnz
inc
je
mov
or
scas
push
mov
mov
mov
ret
adc
dec
inc
dec
das
add
iret
sti
ss
add
push
or
xor
sti
mov
jne
push
jbe
ds
std
mov
mov
test
dec
loopne
scas
pop
pop
sbb
inc
scas
test
fwait
lock
mov
cmp
daa
cltd
fstpt
ror
mov
jne
hlt
xchg
stos
cmp
xor
mov
ss
outsl
in
mov
pop
cmp
insl
pop
sarb
mov
jne
fsubl
js
pop
cwtl
add
inc
fidivl
mov
and
scas
dec
daa
in
pusha
arpl
adcl
sub
jne
sahf
movb
inc
lea
mov
icebp
iret
lock
push
mov
adc
jp
mov
mov
cmp
lea
mov
adc
inc
inc
mov
jno
invd
data16
imul
pop
xchg
xor
mov
movsl
mov
pop
jp
cltd
mov
push
mov
into
aas
adc
inc
cmp
imul
data16
jp
fs
mov
mov
pop
add
mov
sbb
inc
ror
jno
and
pusha
enter
rorb
pop
nop
dec
or
xchg
or
stos
mov
cmp
fdivl
icebp
pop
into
repnz
or
inc
icebp
adc
cwtl
stos
mov
dec
lcall
dec
paddsw
jg
testl
or
jnp
push
cs
push
nop
fildl
cli
out
xor
nop
outsb
mov
out
sub
mov
nop
push
cmp
es
iret
daa
data16
xchg
inc
xor
dec
aas
icebp
dec
or
lret
out
sub
mov
stos
sub
inc
insl
xchg
rol
les
mov
sub
inc
les
add
mov
pop
gs
push
testl
mov
sbb
sbb
push
or
scas
cwtl
shr
ja
mov
fcoml
push
mov
mov
mov
cwtl
xor
xor
sti
in
push
insl
cmpsb
push
mov
cmc
mov
cli
enter
xchg
jno
mov
or
adc
pushf
orb
repnz
add
pop
adc
div
cmp
mov
fstpt
cld
xor
scas
xor
lret
add
nop
divb
test
in
xor
push
xlat
mov
lods
dec
cld
test
sub
push
aam
add
arpl
sbb
stc
pop
push
fwait
clc
mov
lret
in
or
enter
roll
pop
fcomi
in
sub
adc
jb
sbb
push
lods
dec
push
adc
insl
xchg
gs
mov
jae
sarl
int3
test
push
sbb
mov
dec
jge
call
cmc
pop
out
or
aas
jle
xchg
cmpsl
test
jno
inc
push
mov
pop
shll
pop
scas
mov
xchg
popa
shlb
mov
cmp
stc
flds
pop
sbb
cli
push
mov
push
or
xchg
and
sbb
mov
sbb
mov
mov
ljmp
add
xor
mov
push
ret
or
xchg
ljmp
cli
lds
mov
lret
jl
inc
jnp
lret
mov
push
xchg
jns
mov
es
movsl
ret
icebp
fldl
push
inc
arpl
fnstenv
sbb
cmp
pop
repnz
pushf
imul
lds
pop
lcall
test
add
push
inc
mov
in
jmp
sub
in
popf
dec
es
xor
xor
dec
sbb
mov
add
mov
ror
out
dec
dec
in
scas
jp
dec
xchg
lea
lcall
mov
rcll
inc
ljmp
pop
dec
cmc
fiadds
xor
fwait
pushf
xchg
repnz
sbb
ja
loopne
jne
test
inc
dec
pop
xchg
dec
mov
jne
mov
push
arpl
push
inc
imul
sarl
andl
cmp
mov
lret
movsl
jo
pop
pop
jns
stos
outsb
testb
cmp
inc
movsl
jb
aam
add
gs
subl
push
pop
cltd
push
idivb
mov
cmpsb
fdiv
ss
sbb
imul
sbb
xlat
push
and
lahf
loop
repz
dec
mov
push
jnp
and
loop
stos
xor
cltd
and
bound
sbb
ja
mov
sub
in
rolb
stc
in
insl
decl
adc
xchg
ds
sub
mov
mov
aam
mov
mov
int
push
int
shrb
out
sbb
test
cld
xor
adc
push
daa
mov
mov
add
cmp
dec
test
fsubr
cmpsl
mov
inc
repnz
lds
pop
xlat
push
xlat
pushl
pop
and
mov
adc
popf
push
aad
mov
and
adc
aad
and
aas
fildl
jnp
rorb
sbb
add
jecxz
mov
dec
hlt
arpl
xor
xchg
xor
push
jecxz
divl
pop
in
and
int3
inc
push
icebp
add
rcrb
in
jl
add
scas
xchg
mov
divb
xor
mov
icebp
xor
or
imul
cmp
or
test
mov
mov
loope
adc
out
dec
mov
sub
adc
sub
and
cltd
and
xchg
or
mov
inc
leave
ss
sarb
lret
dec
push
nop
in
lea
fwait
sub
mov
les
cmpsl
test
inc
outsb
std
cmp
xchg
mov
lds
dec
sbb
ss
cmc
hlt
inc
xlat
loope
fildl
pop
pop
imul
adc
outsb
leave
aam
fdivl
pop
jnp
mov
xchg
xchg
sahf
pushf
lcall
and
dec
dec
inc
cmp
insb
mov
clc
pushf
add
push
cbtw
or
outsb
mov
pushf
dec
adc
xor
lea
insb
jge
or
mov
push
imulb
mov
cmc
mov
cs
dec
xor
aaa
add
in
ds
sahf
pop
dec
inc
cltd
cli
aad
movsl
inc
cmp
das
lods
arpl
arpl
mov
dec
jno
insl
mov
jp
pop
repnz
sbb
push
adc
xchg
and
frstor
mov
mov
jno
jp
clc
push
push
xor
das
dec
mov
and
jne
or
mov
dec
into
mov
negl
shll
in
shlb
in
jg
jge
rorl
dec
inc
in
mov
addl
inc
cmpb
push
cmp
push
xchg
or
or
sbb
push
pop
ret
push
leave
or
xor
out
xor
dec
int3
push
call
and
dec
stc
data16
in
into
daa
jl
cmpsl
dec
pop
adc
movsl
ucomiss
je
mov
cmc
test
push
dec
jecxz
mov
scas
popf
movsl
cmp
lret
cmp
cmc
movsl
ret
push
xchg
jbe
mov
xor
arpl
mov
into
jl
in
sub
inc
loop
lock
arpl
cmp
fs
pop
clc
jo
jns
xchg
jge
dec
daa
or
adc
test
sub
xor
push
cmpsl
vpmacssdqh
mov
shll
mov
in
sarb
hlt
call
pop
dec
nop
cmp
or
outsl
subl
xchg
fildll
inc
fwait
fs
mov
cmp
bound
push
or
fdiv
lret
aad
cmpsb
cmpsb
jmp
jne
fistl
das
dec
mov
sahf
lret
inc
inc
push
cli
or
imul
mov
iret
cmpsl
cmp
mov
clc
lcall
mov
and
adc
add
rolb
ret
lods
fldt
push
scas
idivl
aad
imul
cwtl
xchg
xor
jg
and
and
adc
mov
scas
test
ret
jmp
inc
push
and
std
mov
push
bound
jns
push
lahf
mov
outsb
xchg
arpl
inc
dec
or
mov
stos
pop
sbb
jno
bound
int3
push
xchg
mov
enter
pop
out
lret
pop
es
pop
mov
cmc
mov
movsl
nop
inc
jl
xchg
icebp
pop
pop
out
push
fstps
pop
and
push
mov
lcall
scas
mov
movsl
mov
rcrb
jnp
insl
insl
loope
fldenv
mov
or
aam
out
push
andl
negl
mov
xchg
ja
mov
fstl
jbe
jo
jne
loope
inc
adc
addr16
loopne
out
stc
xor
xlat
mov
adc
add
pop
dec
pop
and
stos
mov
mov
test
add
xchg
or
cmpl
pop
notb
pop
sub
fwait
inc
cltd
rcrl
and
fwait
mov
dec
adc
cltd
or
adc
pop
jbe
push
pop
xlat
cltd
cmp
push
notb
in
mov
jmp
xor
test
jno
js
cltd
mov
jge
xchg
movsl
ja
inc
xor
sub
cld
test
push
dec
xor
jne
jb
subb
dec
popa
adc
ret
addr16
ficomps
in
xchg
fisttpll
hlt
stc
cmp
jmp
xlat
or
sbb
jno
shlb
fstpt
mov
push
adc
int3
mov
les
lcall
jmp
inc
cmp
repnz
push
fcoms
pop
inc
jno
cld
inc
mov
mov
sti
repz
and
testl
sub
in
pusha
push
mov
test
inc
pop
scas
push
loopne
sub
add
xor
or
xchg
fisubrl
mov
inc
pop
hlt
subb
rcl
mov
push
mov
add
inc
dec
lret
imulb
adcb
or
cmpsb
call
sbb
push
lahf
imul
rclb
push
xor
push
dec
outsl
out
out
adc
dec
add
out
sbb
aad
test
in
xor
imul
cltd
fistps
dec
mov
lahf
and
dec
into
push
push
mov
adc
addr16
repnz
adc
pop
mov
or
inc
cmp
pop
mov
les
daa
inc
fadds
mov
adc
inc
sub
orb
pop
push
xchg
cmp
xchg
inc
ljmp
leave
push
push
and
xor
scas
movsb
insl
jns
inc
mov
enter
jns
cmp
sarb
mov
lahf
mov
or
or
cmp
push
mov
xor
pop
hlt
xor
ds
push
jae
and
ss
cmp
mov
out
shr
adc
or
lret
or
jl
fisttpl
sub
icebp
addr16
cmp
jno
inc
cmc
mov
push
mov
and
dec
jg
dec
push
sbb
rorb
xlat
sbb
je
icebp
mov
push
je
or
fsts
lods
push
pop
in
mov
outsb
les
or
mov
out
xchg
repz
xlat
fbstp
movsb
xor
mov
subb
test
insl
pop
mov
sbb
stos
mov
pop
xor
add
mov
aad
stos
loop
inc
daa
in
push
xlat
inc
mov
call
fistpl
leave
std
mov
mov
or
or
push
call
mov
pop
stc
mov
mulb
mov
or
jl
xor
arpl
cmp
add
addr16
jg
xchg
test
mov
fldenv
mov
stos
push
scas
adc
cs
enter
xor
test
popf
loopne
cmpsl
cld
adc
dec
data16
adc
ljmp
subl
fimuls
das
sbbl
inc
ret
mov
stos
insb
fsubl
pushfw
aaa
faddp
push
or
fucomi
mov
dec
or
out
push
adc
cmp
sahf
ret
push
inc
aas
popf
push
pushf
xor
add
jmp
xor
and
in
sub
push
js
fwait
stos
pop
js
or
cld
shlb
sti
dec
xchg
rol
je
jno
cmp
pop
aaa
test
cmc
sub
out
mov
inc
sub
cltd
imul
ret
mov
fcoml
pop
xlat
jg
jecxz
in
adc
cli
fisttpll
and
clc
cld
xor
loop
mov
scas
or
xchg
or
xchg
mov
xlat
and
enter
hlt
adc
movl
ret
cmp
dec
dec
or
sahf
xchg
repnz
jp
lods
jae,pt
sub
and
and
out
or
push
fmuls
push
and
setp
adc
movsl
mov
xchg
rcrl
sbb
test
scas
or
xor
mov
daa
mov
ds
in
shl
insb
xchg
dec
mov
fistpll
jno
adcb
inc
sarl
push
xchg
sub
inc
test
daa
sub
mov
adc
cwtl
pop
mov
xchg
push
ja
cmpb
cld
xchg
shll
add
ja
aaa
fisttpll
lods
sub
add
into
adc
idivb
mov
adc
adc
jg
stos
cmp
push
cltd
jle
cmp
jbe
cwtl
mov
jb
add
push
xlat
rcrl
dec
jbe
cmc
add
lea
fimull
aas
scas
cmp
lds
pop
leave
ficomps
push
mov
mov
in
out
xchg
xchg
mov
lcall
and
pushf
xor
fistl
into
dec
mov
mov
loopne
je
in
inc
movsb
adc
jb
jmp
dec
and
repnz
sbb
ret
imul
iret
inc
scas
aam
ljmp
icebp
push
in
mov
test
push
lods
arpl
jecxz
cmp
or
testl
mov
mov
mov
sub
popf
imul
pushf
jo
ret
dec
sub
xchg
or
xlat
fmuls
mov
and
subb
cltd
orb
sbb
bound
sub
push
sub
cltd
dec
test
push
enter
aad
nop
cltd
push
outsl
lret
sub
push
push
push
cmp
repnz
or
stos
test
mov
cmp
inc
mov
iret
jge
xchg
repz
pushf
mov
xchg
push
pop
xchg
out
clc
ds
pushf
repz
jno
imul
pop
cmp
sub
outsl
push
and
pop
lock
pop
dec
scas
xchg
push
mov
outsl
adc
or
rclb
mov
shrl
pusha
orl
mov
bound
mov
loope
insb
pusha
es
pop
ja
or
push
je
pop
mov
lods
enter
ret
adc
pusha
sahf
and
mov
repnz
mov
movsl
pop
mov
aas
popa
jno
sbb
loop
inc
fisttpll
call
dec
outsl
scas
out
jae
cld
xchg
xchg
jnp
aas
ja
and
push
cmp
test
pop
jl
fisubs
adc
adc
jne
cmpsb
pop
ja
adc
call
call
push
ret
lret
add
shlb
in
and
mov
mov
mov
xor
mov
mov
sbb
jnp
int
testl
and
insl
outsb
mov
arpl
cwtl
jg
inc
in
or
in
adc
mov
rcrb
push
jns
int
into
xor
add
pop
mov
addb
fs
dec
outsb
jecxz
adc
sub
sub
or
pop
mov
aas
subl
mov
inc
lret
fstp
mov
and
insl
hlt
adc
add
arpl
cmp
loop
enter
xchg
adc
push
out
scas
mov
jl
mov
mov
ret
je
cltd
lock
mov
clc
xor
rcrb
rorb
cmp
stos
jmp
push
loopne
sbb
mov
dec
ficoml
mov
xor
ds
pop
in
xchg
inc
push
push
out
rcrb
enter
jp
inc
cmpsl
mov
ss
test
sbb
dec
ds
divb
lock
stos
jo
and
js
ret
sarb
or
sarl
adc
aaa
pop
jno
mov
jno
je
pop
pop
pop
push
popf
mov
and
imul
pop
push
xchg
push
xchg
or
push
sar
pop
stos
jge
lods
inc
and
clc
repnz
mov
lahf
lahf
xchg
clc
sub
mov
pop
enter
lahf
lock
xor
sahf
loop
mov
xchg
cmpsl
jecxz
repnz
and
cwtl
clc
push
cmc
fsts
fistl
push
testl
adc
pop
lcall
popf
cmp
loopne
jne
jle
shll
and
loop
fwait
fs
fimuls
xchg
in
sbb
test
mov
sbb
fs
mov
fadds
sbbl
xchg
cmpsl
subb
inc
mov
in
dec
push
and
js
call
dec
push
mov
gs
out
mov
sti
sbb
es
inc
sarb
jnp
loope
and
shlb
xor
jge
les
iret
dec
sbb
mov
fwait
loope
icebp
pop
pop
ljmp
cld
push
push
push
xlat
outsb
fwait
movsl
sbb
adc
es
jne
inc
es
cmp
div
sbb
imul
jno
mov
push
xchg
cwtl
inc
insl
xor
hlt
bnd
andb
aas
cmp
aas
push
test
aad
dec
pop
cli
push
mov
inc
test
lcall
bound
mov
xor
stos
mov
sub
and
pop
push
jnp
mov
add
outsl
add
pushf
xor
stc
pop
fcomps
mov
rclb
jns
jno
pushl
outsl
mov
add
jl
out
ret
negb
out
pop
lahf
inc
jae
fst
xor
loope
and
adc
scas
lds
lea
pop
andl
xchg
jae
int
leave
stos
in
xorl
sbb
iret
mov
xor
loope
cmpsb
push
call
int
outsw
mov
jno
jecxz
int
les
sahf
adc
je
adc
repnz
xor
jae
and
imul
stos
add
outsb
sbb
adc
mov
or
dec
in
dec
mov
repz
mov
imul
or
mov
mov
enter
sub
xchg
cmp
cmp
int
mov
cmp
in
cmp
insb
mov
mov
adc
movsb
inc
lods
push
cltd
pop
into
mov
arpl
in
mov
mov
pop
jb
daa
test
jno
dec
dec
cmp
mov
sbb
test
push
or
or
sbb
sbb
inc
mov
or
add
xchg
jecxz
ljmp
jl
push
jae
cmc
test
in
gs
sbb
pop
dec
dec
stos
push
imul
movsl
ja
in
push
dec
pop
pop
pop
clc
out
and
sbb
lcall
cmp
aad
movsl
test
imul
inc
pop
ror
js
mov
arpl
adc
inc
sahf
fstpt
popa
cmc
add
sub
bound
rcrl
mov
and
mov
test
xchg
loop
test
mov
stos
jmp
sbb
out
dec
mov
iret
fwait
push
cmp
adc
pop
insb
xor
je
cmp
mov
jg
ss
stos
sbb
andl
ljmp
out
dec
in
jp
xor
xor
jg
inc
adc
insb
out
mov
mov
xor
adc
ror
xchg
push
loop
punpcklwd
mov
divl
xchg
sbbb
subl
shl
dec
or
cmpsl
pop
cmp
jbe
lds
cmpsl
add
push
inc
xor
sbb
fwait
rclb
mov
cs
loope
imull
push
sbb
ljmp
daa
push
lcall
mov
jnp
out
ja
fisubrs
pop
dec
mov
mov
loope
cmpsb
ds
push
cmp
inc
inc
and
mov
jnp
xchg
es
mov
scas
xlat
jmp
loopne
cltd
dec
inc
sbbl
gs
pop
jns
popa
adc
es
ss
fdivp
jmp
add
mov
ret
sbb
xor
popa
pop
loope
mov
enter
or
lret
mov
mov
xchg
add
aad
jb
dec
bound
jle
push
stos
inc
test
ret
jb
bound
fbld
cltd
inc
pop
cmp
cmp
inc
and
xor
jg
adc
cld
pop
adcl
addr16
ficoml
stos
int
mov
flds
sub
cmpsb
js
ds
stos
dec
sbb
js
and
mov
inc
add
pop
call
shll
imul
ljmp
outsl
imul
cmp
xor
nop
int
inc
divb
pushl
ljmp
in
push
xor
fmul
add
outsb
lahf
push
xchg
xchg
pop
in
fiadds
cs
gs
xchg
ja
out
insl
movsl
nop
loop
mov
jge
xchg
sbb
mov
add
fdivr
lods
add
pop
outsl
add
fcomps
outsb
testl
jge
dec
pop
push
inc
shrl
add
js
lea
xor
xchg
lcall
cmp
cmp
cmp
xor
repnz
lahf
out
mov
add
mov
sahf
ja
icebp
add
or
push
sti
jnp
cmpsb
and
and
adc
cmpsl
out
mov
repnz
and
fsts
int3
xor
mov
leave
adc
sbb
imul
inc
adc
cmp
add
mov
cltd
test
mov
mov
lods
xor
rcr
mov
test
fdiv
in
sub
addl
mov
mov
fldl
pop
lret
ljmp
shlb
and
jb
in
or
stos
ljmp
test
push
cld
js
cmpsb
call
lret
cmc
in
in
add
jp
dec
jg
sbb
jae
pop
sub
pop
insl
scas
sbb
cltd
cli
imul
jb
test
cs
mov
mov
inc
jg
pop
xor
sbb
cmp
mov
cs
into
loop
rcrb
add
bound
sub
sbb
fdivs
sahf
or
or
dec
aaa
or
mov
push
jg
sub
or
dec
dec
lods
test
xchg
mov
jecxz
adcb
jns
mov
arpl
sbb
nopl
movsl
scas
jecxz
shll
sbb
push
push
imul
push
pop
dec
frstor
sbb
mov
sub
outsl
out
pop
jmp
enter
movsb
jnp
cmp
nop
pop
fprem1
fnsave
jne
and
xor
cwtl
and
xor
clc
cmp
or
mov
mov
sbb
addl
pop
shr
int3
xlat
int
and
lds
fisubrl
lods
testl
push
add
jne
adc
ljmp
call
push
add
xchg
cmp
divl
outsl
push
sti
int3
dec
lock
or
movsb
nop
fcoms
leave
js
stc
js
jb
gs
std
xor
or
push
jnp
push
popf
sbb
cmpsb
arpl
xchg
popa
pop
in
lea
nop
sbb
mov
sbb
push
and
add
xorb
daa
xchg
sub
addl
xchg
or
ss
jns
xor
out
sub
mov
adc
or
subb
addb
mov
ret
shll
outsb
push
sbb
lea
adc
or
call
out
pop
sti
jle
call
mov
mov
addb
sub
pop
pushf
ficoml
loopne
add
mov
cmp
mov
cwtl
stos
aam
in
inc
mov
repnz
stos
or
sbb
push
nop
sbb
cli
fnstcw
mov
add
add
loope
adc
repnz
push
inc
cmovg
push
out
jne
push
push
mov
cmpsl
mov
jecxz
pop
or
lods
jmp
cmp
xchg
imul
adc
mov
pop
push
iret
lret
jp
mov
mov
sub
jo
sub
cmp
sbb
dec
popa
cmp
jne
push
push
and
jae
iret
xor
lock
repz
adc
sub
mov
popa
mov
cmp
dec
lds
mov
jp
adc
sbb
les
cmpsb
aam
lock
pop
xlat
bound
cwtl
mov
ss
adc
and
jns
sti
imul
pop
mov
adc
mov
jp
xchg
or
push
xor
das
fadds
enter
movsl
mov
stc
arpl
sub
fnsave
ljmp
pushf
not
dec
nop
jae
push
rolb
cwtl
xor
jge
fisttps
test
insb
fs
cmp
sbb
cmp
cwtl
das
push
push
out
int
aas
std
pop
hlt
aad
mov
xor
stc
mov
adc
std
cmp
rorl
adc
pop
pop
in
add
mov
and
cmp
rolb
xchg
inc
andl
or
and
rolb
cld
pop
clc
jns
std
sub
xchg
ljmp
jecxz
pop
mov
rorl
jns
gs
lock
sahf
xchg
je
in
cmp
or
fcomps
and
pop
cs
and
std
fmuls
scas
xlat
pop
fcomps
cmp
cmp
pop
sub
nop
addl
sahf
xor
fwait
cmp
pushf
ljmp
addr16
insb
push
xorl
sub
pop
jl
clc
cmp
sub
inc
xchg
add
ss
xchg
inc
cmp
mov
ss
arpl
cwtl
lahf
and
and
and
rcrl
outsb
inc
adc
or
xor
stos
faddl
sti
jl
fwait
pop
jo
sar
dec
jbe
mov
dec
pop
cmp
jl
mulb
inc
sbb
das
mov
enter
dec
leave
xchg
mov
mov
loopne
lea
lock
cmc
shll
sbb
mov
cmp
enter
int
lahf
ljmp
sarl
mov
pop
call
mov
or
mov
lock
mov
push
inc
rcll
cmp
icebp
mov
shlb
mov
loop
push
xchg
rcl
xchg
add
loop
add
mov
stc
cmp
cmp
rolb
in
popa
imul
push
cld
mov
sahf
ja
cli
dec
test
out
pop
aam
outsb
push
call
aaa
dec
pushf
and
inc
jecxz
clc
test
lcall
dec
jns
xchg
mov
das
push
jb
in
subl
dec
or
push
lds
jle
clc
aas
scas
inc
jno
jmp
movsl
fwait
arpl
xor
cwtl
add
jecxz
push
jbe
lea
imul
cmpsb
fistps
out
xchg
imul
scas
pop
pop
test
jb
inc
rcr
jge
rclb
xchg
cmp
dec
pop
mov
adc
sub
xchg
sti
in
mov
in
or
nop
sub
decl
push
cmp
iret
pop
jo
jb
cmp
aam
xor
cmp
loop
xchg
bound
out
rol
sub
push
ss
test
mov
call
or
dec
adc
aaa
xor
dec
pop
mov
jge
inc
enter
rcrb
pushf
xorl
xor
outsl
js
mov
out
jae
pop
scas
mov
imul
dec
outsb
xor
adc
sahf
adc
fidivrs
add
lret
sub
lret
dec
xlat
pop
nop
test
cli
mov
repz
jne
and
mov
sub
or
xor
push
inc
ficomps
mov
sub
push
xchg
in
ja
cmc
inc
dec
add
jle
sbb
lea
mov
mov
icebp
fwait
xchg
in
mov
stos
inc
lret
pop
sarl
lea
mov
push
je
movsb
enter
mov
or
inc
jno
sub
push
pop
fldenv
into
out
hlt
adc
pushf
add
push
adc
pop
xor
mov
dec
scas
jp
mov
and
or
xor
mov
out
inc
je
jnp
or
pop
fs
loop,pt
mov
adc
xor
jecxz
mov
adc
setl
hlt
sub
mov
loopne
fdivs
fistps
divb
or
lret
sub
sti
push
pushf
mov
jp
dec
stos
adc
pop
in
dec
adc
xchg
popf
jb
jb
subl
pop
dec
push
mov
iret
mov
int
adc
stos
or
cmc
cs
ja
and
jg
cmpsb
mov
xor
sahf
pop
loope
push
lahf
mov
js
and
js
andb
cltd
repz
lret
aas
adc
xchg
ljmp
add
aaa
pop
test
fisubs
jecxz
scas
lods
les
or
mov
inc
jmp
rcrl
ljmp
cli
loopne
out
lods
stos
je
xchg
aas
inc
subl
jae
cmp
popl
and
push
je
jo
insl
out
or
sahf
push
out
mov
adc
punpckhwd
xor
xchg
jge
cmp
push
cmp
cmp
clc
push
ret
jge
xchg
sub
enter
cmp
mov
mov
or
and
repnz
out
inc
mov
jns
add
xchg
mov
fbstp
jge
sbb
aaa
sahf
xor
das
pop
add
push
xor
cmpb
sbb
std
mov
adc
add
icebp
mov
sbb
xchg
fldt
pop
mov
roll
sub
pop
outsb
negl
out
sub
adc
mov
mov
sub
ja
call
jmp
jle
pop
inc
inc
movsl
scas
dec
sbb
add
pop
xchg
inc
in
cmp
mov
stos
cmp
cmpsl
lock
xchg
jle
scas
jno
imul
lock
add
and
or
xchg
push
mov
adc
sbbb
inc
cmp
or
cmpsl
call
in
pop
outsb
fsubr
lds
pusha
aam
out
push
push
jecxz,pn
push
jno
dec
cmp
adc
fcomi
mov
fldl
mov
ss
mov
int
jl
or
lcall
xchg
fistpll
or
jne
lret
aas
pusha
dec
insb
add
push
add
pushf
repz
xor
fsubr
hlt
and
loope
enter
loopne
mov
push
in
jo
and
test
jo
addr16
jmp
aam
mov
data16
xor
sahf
add
and
inc
xchg
pusha
in
add
jg
iret
stc
lahf
fcoml
mov
xchg
lret
aas
cmp
lds
pop
mov
orl
aam
aam
cmp
in
ds
push
mov
pop
ret
xlat
pop
cmpsl
xlat
dec
xor
ret
pop
cmp
or
xchg
mov
pop
or
pop
stc
mov
lahf
lret
or
push
cmp
les
mov
pop
add
fs
inc
outsb
jl
sbb
inc
testl
push
jne
aam
sub
mov
stc
test
dec
add
and
mov
idiv
popf
scas
ds
push
imul
into
movsl
jp
mov
orb
and
xlat
jge
push
hlt
xor
xchg
and
insl
lcall
jo
mov
push
cmp
xor
xchg
or
jmp
cli
repnz
jp
xor
mov
popf
pusha
mov
inc
test
sbb
ja
xchg
push
lods
outsb
xchg
mov
flds
and
pushf
add
sub
popa
push
imul
fldt
or
nop
xchg
push
add
fnsave
incl
int
fstpt
sub
xchg
dec
mov
pushf
pop
mov
jp
out
push
mov
hlt
xlat
scas
jbe
sbb
je
test
aaa
mov
or
pop
repnz
out
movsl
and
push
mov
push
or
shll
out
inc
sbb
xchg
shll
mov
sub
add
lock
jns
inc
xchg
ficompl
mov
mov
nop
mov
mov
cmp
add
push
loopne
push
stos
jl
xchg
rcrl
jge
addb
int3
into
xchg
push
lret
sbb
pop
popa
lret
iret
fsubr
xchg
and
mov
mov
cmp
xchg
sbb
dec
rcl
fisttps
fdivrs
add
clc
push
in
scas
push
repz
add
xor
mov
subb
loope
stc
mov
arpl
test
mov
dec
or
cmpsl
in
arpl
sbb
fmul
and
cmc
and
call
push
add
cli
mov
sub
add
inc
or
cmpsb
pop
push
cld
hlt
movsl
dec
fadds
xchg
in
idiv
pusha
aad
and
or
inc
sahf
cltd
test
jge
rorl
push
xchg
les
dec
out
add
mov
fdivp
icebp
scas
cwtl
push
das
push
sahf
push
pop
out
repnz
ds
sbb
pushf
pop
xor
and
das
je
outsl
scas
xor
mov
and
iret
adc
jb
add
pop
and
lahf
fs
data16
int3
ret
mov
and
mov
adc
sub
jb
inc
movsl
xchg
jno
loope
aas
or
mov
hlt
insb
lret
pop
rcrl
and
cmp
xchg
sub
dec
movsb
push
mov
inc
push
loop
nop
or
testb
mov
ja
out
shrl
jns
mov
mov
ljmp
mov
and
popa
imul
pop
mov
insb
insb
xor
jne
repz
xor
enter
in
pop
outsb
xor
add
and
jmp
repz
mov
jbe
and
add
inc
push
xchg
mov
enter
mov
pop
add
mov
sbb
sub
stc
orb
cmp
sbb
jbe
push
push
jae
push
adc
sahf
sahf
mov
addr16
out
aas
push
and
cmp
dec
inc
test
fiadds
dec
cmp
pop
push
mov
sub
fmul
out
jno
sarl
pop
lods
fcmovbe
stos
cmpsb
stc
jle
xor
lods
lea
jo
movsb
lods
cmp
roll
clts
pop
add
test
loop
insl
andb
dec
add
dec
mov
test
sub
popf
jo
adc
clc
or
pop
mull
mov
es
pop
and
cmpsb
mov
mov
or
inc
jle
shrl
add
cmp
pop
mov
cmc
int
lahf
punpcklbw
inc
dec
ja
xchg
ds
push
ss
cmp
add
daa
pop
cmp
and
sub
fcomps
sub
outsb
daa
out
dec
mov
sub
imul
mov
jg
test
sub
mov
and
popa
movsl
pop
cmpb
and
gs
or
sarl
bound
add
pop
dec
sbb
cmp
lret
bound
sbb
sarb
jnp
sbb
nop
jo
scas
push
and
push
xor
cmpsb
push
pop
pop
loopne
xchg
es
lahf
mov
mov
cmc
mov
jge
xchg
adc
fmul
lods
push
adc
fiadds
std
fdivs
les
jmp
cmp
mov
fildll
add
mov
adcb
jl
fidivl
daa
scas
xchg
cmpsb
mov
dec
fs
inc
iret
adc
lods
adc
add
popf
xchg
dec
or
loopne
leave
test
sub
jb
loopne
popa
lds
scas
mov
sbb
dec
insl
mov
mov
js
pop
and
fsubrl
or
je
mov
lret
out
decl
hlt
xor
sbb
add
in
inc
iret
pop
push
sbb
les
lods
dec
test
hlt
lods
mov
mov
sub
inc
push
xchg
sub
jae
lahf
out
ljmp
test
pop
mov
out
shrb
in
xchg
daa
into
push
pop
and
test
stos
jge
in
mov
aad
ss
pop
mov
clc
mov
add
pop
pop
cli
mov
dec
mov
mov
mov
lock
lods
mov
insl
push
loopne
arpl
inc
adc
das
inc
ljmp
mov
lcall
pop
mov
outsl
std
imul
jge
popf
aam
pop
jp
ss
cwtl
and
lock
ljmp
xor
sub
fs
arpl
fldt
and
movsb
cmpsb
popf
out
cld
mov
scas
push
dec
and
sbb
push
dec
push
mov
xor
dec
rorl
add
jae
add
pop
xchg
pushf
jmp
jns
jle
mov
cld
pop
jmp
mov
cmp
adc
fdivl
loop
adc
and
dec
vcvtpd2uqq
lahf
push
popa
fwait
scas
inc
out
add
pop
jo
jp
iret
sbb
sub
inc
cltd
movsl
cmp
jb
in
xchg
mov
loop
fsubrl
mov
xor
das
jmp
mov
popf
fmul
jnp
sbb
aas
add
add
jge
xcrypt-cfb
cmpsl
in
int
pop
sbb
mov
inc
je
adc
add
push
int3
mov
mov
int3
push
xor
rcl
iret
ficoms
jle
xor
xorl
test
lds
adc
dec
xchg
loope
push
icebp
mov
mov
jnp
daa
add
cmc
inc
sub
notb
cmc
inc
fcomps
mov
or
iret
mov
xchg
push
daa
mov
sub
jl
stc
insl
jns
jno
mov
dec
mov
in
out
ljmp
imul
sbb
push
movsb
dec
nop
rol
fstpt
inc
shrb
dec
in
jbe
bound
ljmp
addl
mov
adc
or
std
xor
movsl
push
lock
into
mov
hlt
push
sub
sub
cltd
dec
add
les
and
sub
jo
adc
dec
enter
dec
dec
insl
jns
adc
lods
jnp
xor
dec
xor
scas
add
aad
ret
test
fwait
push
test
movsl
mov
add
sahf
in
fisttpll
icebp
sbb
in
daa
dec
in
dec
dec
mov
outsb
lods
push
jmp
addb
in
and
sub
hlt
pop
push
aam
gs
add
aaa
jle
push
or
jg
insb
jecxz
inc
std
jns
stos
stc
stos
les
xchg
dec
xchg
push
push
insb
xor
outsb
xchg
pextrw
ss
pop
div
mov
push
es
frstor
xor
scas
stos
out
mov
xchg
pop
adc
dec
sub
push
popa
sbb
adc
xchg
and
add
loope
jecxz
lea
adc
ficomps
sbbl
inc
xchg
js
add
jae
pop
loope
sub
aad
inc
in
pop
dec
add
sbb
stos
arpl
sub
es
popa
xchg
aaa
sbb
hlt
je
xchg
imul
push
inc
ja
cmc
loopne
push
jno
addl
mov
int3
jb
mov
rcrb
sbb
mulb
inc
inc
jge
adc
pop
mov
jmp
mov
lock
xor
push
push
je
mov
or
decl
pop
pop
outsl
pop
push
ds
addr16
mov
rolb
movsl
push
inc
enter
mov
cmp
inc
out
inc
aas
pushl
out
cmc
mov
inc
cmp
xor
fcomps
decb
inc
add
andl
mov
insl
cmp
outsl
pop
mov
inc
mov
sbb
push
rcrb
mov
dec
inc
repz
int
sti
push
jl
cmpsl
sbb
mov
shrl
or
jle
inc
pop
sub
push
add
add
xchg
or
in
mov
les
cmpsb
stos
push
adc
addr16
sub
dec
out
xor
int
fdivrs
adc
push
lock
imul
shrl
fbld
and
xor
divl
test
inc
dec
dec
xchg
addl
loop
sbb
sub
divb
cs
xchg
lahf
push
sub
inc
pop
bound
cltd
add
or
cmp
mov
xchg
pop
cmpsb
push
lds
inc
add
lahf
incb
pop
lret
sahf
mov
or
pusha
add
pusha
bound
lea
aad
push
inc
testb
push
xor
pop
pop
sbb
icebp
jns
cmp
clc
sbb
sub
dec
dec
fisubl
jp
scas
mov
sub
mov
push
lea
aad
sbb
icebp
mov
aaa
mov
mov
insb
jle
cmpsl
sbb
inc
cld
push
inc
or
loopne
sub
mov
rorl
dec
negl
push
push
inc
rcrl
add
ret
addr16
hlt
push
lcall
enter
push
outsl
dec
fistpl
xor
mov
or
les
int
push
xor
xchg
ja
sahf
ds
stos
mov
mov
xchg
pushf
fsub
leave
lds
fs
ja
cmp
pop
push
cmp
add
sub
sbb
lea
out
jbe
mov
idivb
pop
or
pop
std
mov
jp
mov
sarl
pop
shlb
mov
or
test
or
insb
call
add
jbe
and
int3
mov
jb
fldcw
fwait
pop
sbb
outsb
push
aad
imul
outsl
fidivs
jp
mov
push
fcomps
adc
out
dec
sbb
jmp
sbb
in
insl
ret
lret
sarb
stos
cmpsb
pushf
push
or
scas
ds
jecxz
and
lret
dec
xchg
mov
xchg
in
popa
sbb
push
shrd
pop
cmp
pop
rcr
xchg
dec
pmaddwd
dec
push
add
or
cs
add
dec
clc
lea
and
inc
and
mov
test
inc
sbb
pop
std
add
mov
adc
push
jae
push
mov
ss
loopne
lea
jg
push
mov
movsb
out
mov
mov
pop
incb
push
bound
cmc
sub
xor
sub
push
add
js
push
push
aam
mov
push
fidivrs
sub
sbb
imul
xlat
stos
xchg
mov
imul
ror
stos
jns
jecxz
pushf
xchg
pop
flds
mov
je
add
clc
ret
mov
xlat
mov
mov
or
sbb
xchg
pop
leave
ss
out
cs
xor
popa
repz
pop
xchg
push
xchg
sbb
cmp
dec
enter
jns
lahf
cltd
mov
sub
pop
and
fcomps
mov
and
shlb
sti
cmp
xor
inc
cltd
dec
dec
fmuls
pop
xchg
xchg
ds
scas
mov
aaa
repnz
stc
push
divb
and
mov
xor
sarb
jnp
fsubr
das
xchg
xchg
mov
mov
jnp
add
cmp
stos
add
js
lahf
clc
repnz
cmp
push
jb
icebp
insb
sti
add
enter
mov
arpl
xchg
dec
rclb
mov
inc
jecxz
mov
pusha
std
sbb
mov
int
inc
lock
push
cmp
pop
ret
into
repnz
in
cmp
lods
in
inc
mov
pop
outsl
into
out
adc
ja
cld
lea
mov
fdivl
sub
push
bnd
shlb
jle
fistps
je
dec
rclb
jl
mov
rcll
sub
cmp
lods
and
xor
cmp
in
push
stos
xor
out
into
out
pop
ss
cmpb
and
push
jg
shll
jb
addr16
mov
lcall
stc
mov
ja
xchg
mov
subb
ss
mov
flds
mov
cwtl
and
popa
or
mov
out
pop
pop
repnz
lret
and
or
das
jnp
dec
xchg
mov
mov
fcmovnu
mov
pop
mov
shrb
inc
xchg
xor
adc
mov
jp
jno
es
ret
add
es
sbb
or
pop
arpl
fwait
xchg
xchg
or
or
push
jo
xor
outsl
ret
mov
pop
xlat
notb
adc
lcall
mov
fisttpll
mov
in
dec
cli
js
mov
jne
ss
popf
cs
or
adc
and
inc
aaa
mov
shrb
and
and
fs
add
adc
adc
inc
mov
cmpsb
and
sub
mov
jge
jecxz
imul
mov
sarl
push
rcrb
hlt
shl
sub
pop
dec
push
adc
add
cmpsl
jbe
push
xlat
bound
out
cmp
adc
add
or
xchg
test
cltd
mov
jno
sahf
adc
pop
or
pop
imul
push
dec
ja
add
xor
decb
vpsrld
push
jne
adc
lret
test
adc
std
mov
xor
mov
out
xor
fistps
gs
fldt
test
cmp
mov
loopne
pop
pop
pop
lods
lock
out
mov
cmpsb
arpl
mov
dec
ja
imul
and
shll
mov
jne
inc
in
and
sahf
sbb
test
sbb
mov
arpl
push
sbb
jecxz
fisubs
mov
inc
push
mov
test
cltd
and
or
pop
xchg
sub
xchg
fimull
rcrb
daa
bound
xchg
adc
mov
pop
fwait
push
or
outsl
ret
lcall
inc
dec
icebp
js
sbb
sub
ds
pop
test
lret
dec
cmp
cmpsl
aaa
dec
mov
fs
rol
sbb
lods
dec
xchg
arpl
test
xchg
or
add
das
mov
sbb
in
pop
shrb
clc
xor
pop
cltd
test
int3
jns
in
bound
pop
mov
int3
cwtl
imul
sub
repnz
rcr
jb
push
pop
sub
out
mov
and
mov
sbb
loope
lahf
and
or
pop
das
jo
and
repz
loope
out
adc
cmc
lret
adc
in
push
mov
cmp
dec
cmp
mov
shll
push
inc
xor
in
in
idiv
push
mov
mov
ret
cltd
jae
add
daa
dec
mov
lret
sbb
cmpsl
mov
dec
xlat
scas
adc
add
hlt
dec
sub
pop
jnp
inc
mov
lret
subl
clc
call
xchg
jbe
je
xchg
cmp
pop
push
jo
into
jb
push
jle
inc
rcl
and
cli
sub
enter
cmp
stos
dec
iret
into
mov
movl
call
xchg
and
popf
in
push
mov
ret
out
outsb
pop
loope
ss
repnz
mov
xor
ds
stc
xchg
push
or
lock
popa
pop
call
cmp
mov
mov
jle
cmp
pop
jp
mov
cmp
repz
in
leave
jg
push
scas
shlb
jge
scas
push
je
mov
push
jns
push
ret
jno
adc
lods
pop
pop
mov
das
adc
les
xor
movsl
sub
jge
xchg
sbb
adc
in
xchg
mov
push
mov
lea
mov
stc
nop
call
cmp
gs
ljmp
int3
dec
loope
dec
mull
pusha
inc
sbb
add
sti
scas
push
js
dec
adc
dec
jns
pop
lret
sub
sub
mov
mov
in
xor
test
idivl
mov
popa
mov
cmpsb
shrl
fldl
scas
ret
inc
jnp
lea
in
pop
dec
fnstsw
sub
mov
rcr
push
and
xchg
and
cmp
ss
fldcw
ja
call
ja
in
xor
dec
cmp
insb
shrl
inc
aaa
pop
mov
cmp
mov
xor
xlat
fcoms
or
lret
jnp
fidivs
jle
test
ja
fiaddl
or
out
adc
mov
sarl
in
mov
mov
int3
int
dec
lds
push
fiaddl
or
sbb
in
lods
movsb
pop
lock
stos
shr
cltd
mov
std
in
jmp
out
sub
mov
lods
cmpsb
sub
dec
sbb
fistpl
cmpsb
fcoms
xor
cmc
jecxz
aad
nop
mov
xchg
push
insl
sub
lods
iret
out
stc
pop
xchg
cwtl
lods
mov
mov
mov
cmpl
add
stos
test
push
fbld
ret
cmpsb
lcall
repz
icebp
fbld
inc
loopne
mov
addb
fstpt
movsb
xchg
in
mov
lds
lret
mov
add
push
sub
dec
in
test
push
add
cld
cli
insl
rcrb
out
mov
jo
or
add
scas
xchg
and
mov
arpl
adc
mov
xor
mov
mov
mov
fs
out
xchg
sahf
in
addr16
add
pop
and
jp
incl
inc
je
jno
pop
test
test
fwait
adc
loopne
pop
out
cmp
cmpsl
cmp
dec
and
test
fdivrl
inc
and
and
xchg
pop
adc
mov
or
mov
push
and
sahf
les
push
xchg
add
mov
test
lea
pop
lahf
gs
or
mov
stc
add
lcall
bnd
popf
outsl
mov
clc
lret
and
or
inc
xchg
out
int
test
sbb
ljmp
mov
mov
or
test
sbb
test
sub
push
aas
push
push
lahf
adc
aas
data16
inc
cltd
je
pop
mov
jle
int
sub
rcrb
loopne
mov
imul
icebp
fcmovnb
cli
shrd
sub
inc
sub
loope
add
rclb
xor
xor
add
cltd
addr16
sbb
ret
inc
xlat
mov
aaa
in
nop
sub
pop
xor
cmpsl
bndldx
push
adc
jge
add
imul
sti
outsl
mov
test
pop
lds
push
inc
xchg
adc
shlb
adc
add
cmpsb
inc
lret
cmpsb
mov
sti
repz
fisttps
sub
or
and
dec
data16
lds
mov
orl
ss
movsb
scas
and
je
mov
in
lahf
into
or
add
aas
cmpl
xchg
push
popa
insb
shrl
lret
das
xchg
int
scas
in
and
rolb
aas
jp
scas
push
mov
repnz
add
and
xchg
add
mov
fs
test
ror
shl
out
sub
in
adc
push
imul
imul
push
pop
sub
xchg
cmp
out
shr
mov
pop
stc
xchg
call
mov
jmp
xor
clc
jns
xchg
pop
pop
movsl
sbb
xchg
fstl
or
mov
test
lahf
mov
data16
sbb
outsl
and
dec
push
dec
rcl
xchg
mov
push
je
xor
jae
ljmp
cld
push
jnp,pt
cmp
stc
adc
imul
es
cmp
xchg
in
push
lea
subl
mov
movsl
push
pop
or
cwtl
dec
xchg
dec
cmp
mov
pusha
sub
adc
mov
push
jb
mov
enter
cli
clc
in
fcmovb
out
xlat
push
lret
mov
loop
dec
aaa
push
mov
jmp
inc
out
fistpll
mov
rcrl
and
pop
mov
push
cmp
mov
adc
in
test
hlt
and
xor
adc
in
fs
add
ss
lcall
cmp
or
mov
mov
mov
sub
mov
xchg
inc
pop
rcr
je
jo
or
xchg
sbb
sub
sbb
mov
mov
sbb
jae
push
pusha
xchg
xor
jp
out
call
icebp
jnp
mov
jecxz
cltd
sahf
movsb
cmc
cmp
call
in
mov
or
nop
push
cmp
add
loope
outsl
adc
add
shll
push
loop
xchg
imul
pop
je
ds
fsubl
jl
lcall
shrl
dec
push
sbb
jo
jmp
mov
mov
push
mov
inc
into
mov
or
lods
pop
hlt
dec
fildll
and
lret
push
shr
stc
cmp
mov
xor
testl
cmp
dec
popa
dec
insl
data16
dec
xchg
push
mov
rcll
cli
mov
lret
jne
imul
insb
imul
jle
mov
mov
jno
clc
push
lcall
sub
mov
test
out
jmp
push
add
pop
addr16
inc
adc
adc
xor
inc
in
cmpsl
mov
mov
scas
jns
sub
sahf
cwtl
fildll
stc
clc
testb
roll
fiadds
jno
add
out
cwtl
sub
cmp
sub
fildll
outsb
jns
scas
int3
dec
out
fisubl
push
sub
mov
sbb
outsb
sub
xchg
add
sbb
mov
mov
pop
or
fs
mov
pusha
loope
aam
div
sbb
insl
mov
icebp
or
mov
push
in
nop
orb
mov
jnp
stos
icebp
mov
mov
push
push
fmul
sub
leave
in
mov
std
dec
jno
mov
mov
inc
lret
and
xor
int3
sbb
push
outsb
aas
clc
pop
add
mov
leave
call
iret
pop
mov
cmp
push
xabort
or
outsb
shrb
out
xchg
sub
pop
mov
adc
jae
jns
lock
mov
mov
test
mov
stc
jmp
sub
adc
or
orl
stos
lea
movsb
sub
mov
sub
pop
sbb
notb
push
pop
mov
jbe
mov
push
dec
sbb
mov
mov
lret
int
cmp
adcl
or
out
adc
push
inc
dec
mov
jg
push
mov
repz
xor
scas
pop
sbb
add
adc
outsl
std
repz
or
xlat
jbe
jo
xor
call
jl
mov
pop
ret
cli
addr16
mov
jl
scas
shrl
jne
dec
rol
stos
sbbl
cs
mov
inc
mov
xchg
push
lock
dec
cmpsl
mov
lds
dec
ljmp
mov
movsl
ret
icebp
decl
andb
addr16
loopne
fwait
hlt
pusha
out
dec
leave
mov
pop
xchg
inc
insb
jmp
mov
dec
imul
xor
xor
add
sbb
pop
popa
cmp
dec
pop
int3
sti
incb
hlt
mov
jecxz
push
or
bound
stos
ss
movsb
loope
adc
add
stc
enter
fwait
stc
lret
iret
push
mov
cmpsb
shr
mov
mov
sbb
xchg
sti
lds
cmp
mov
jge
xor
jno
cs
imul
dec
adc
insb
pop
cmpsb
add
inc
pusha
jp
mov
adc
push
sbbl
push
insb
adc
xchg
cmp
loop
sbbl
cltd
lahf
adc
gs
out
cld
adc
mov
ret
cmpsb
adc
lds
stos
aaa
inc
xchg
push
cli
enter
ja
insl
mov
inc
add
xchg
test
jecxz
mov
mov
aas
push
addr16
mov
push
lea
in
xchg
cld
sub
outsb
or
mov
ss
push
push
push
or
out
push
js
add
nop
ret
sti
data16
xchg
insb
lcall
dec
and
mov
dec
cmp
add
add
mov
pop
mov
scas
add
out
jnp
push
or
gs
dec
loopne
cmp
in
outsl
test
and
or
es
xchg
rorb
xlat
jl
dec
and
clc
and
fcomi
cmc
mov
movsl
cmp
fnstcw
test
fs
lea
mov
inc
fisttpll
call
jl
mov
fldt
jg
pop
ret
jae
pop
adc
mov
or
aad
mov
lock
sub
shr
jle,pn
dec
mov
sub
fs
and
mov
mov
lahf
pop
or
dec
mov
xor
lods
insl
popf
mov
sub
es
xor
lret
add
out
out
xor
pop
inc
jns
jg
or
push
mov
or
pop
shrb
aam
decl
sbb
mov
mov
rcll
outsl
sbb
xor
jno
in
jno
xchg
pop
xor
push
loop
push
xchg
iret
test
pop
ja
or
mov
cmp
dec
lods
ljmp
mov
sbb
mov
adc
adc
and
ja
repnz
dec
jo
add
out
sub
jmp
mov
shlb
test
mov
subb
aad
and
push
push
jbe
cmp
and
out
sub
daa
enter
movsl
dec
aaa
xor
cmp
xlat
jno
jmp
lods
jecxz
data16
lcall
in
daa
arpl
sub
xchg
cmp
lods
outsl
mov
arpl
push
cmp
mov
push
jne
sbb
in
gs
imul
aas
or
fimull
test
pop
push
iret
pop
add
xchg
scas
pop
adc
movsl
pop
or
aam
mov
repz
mov
dec
or
in
fistpl
mov
sub
xchg
fdiv
pop
ds
add
sarl
xchg
rol
fsub
add
dec
adc
pop
ret
sahf
push
mov
sub
mov
pop
in
out
jmp
mov
lahf
fistpl
xchg
and
sub
sbb
xchg
int
js
jmp
xchg
push
xchg
rclb
mov
xor
stos
cmpsl
cld
aas
ss
or
aas
sub
dec
inc
shr
movsl
pop
lods
aas
popf
rol
push
jns
nop
loopne
in
aaa
loope
lods
lret
mov
xor
dec
mov
jecxz
lahf
and
xchg
sbbb
rcll
xchg
ss
push
dec
lcall
daa
fwait
dec
mov
fisubs
xlat
movsb
mov
xchg
jbe
mov
dec
mov
pop
inc
jmp
inc
mov
xchg
lcall
add
inc
and
lcall
fdiv
and
dec
daa
decb
dec
add
and
stc
mov
push
rcr
imul
lcall
or
ja
mov
push
out
scas
fmulp
add
cltd
cmc
cmc
push
push
push
push
jg
dec
pop
cmc
sbb
or
inc
mov
loopne
push
add
jmp
imul
mov
mov
incl
push
aaa
sahf
push
pop
or
sar
sbb
pop
hlt
lret
bound
xchg
les
xor
clc
ret
mov
adc
mov
sbb
psrlq
xchg
dec
shlb
sti
data16
xchg
test
lea
sbbl
idivl
ljmp
cmp
in
mov
rolb
int3
sbb
enter
sti
icebp
cmp
idivl
cmp
cmpsl
outsb
xor
popf
sub
jnp
das
jne
into
mov
adc
mov
inc
jns
add
mov
je
adc
cmpsb
in
lods
mov
into
and
lock
mov
mov
int3
lea
xchg
test
scas
pushf
or
movsb
nop
mov
xchg
popl
lods
jne
loope
jo
pop
aas
mov
push
push
addr16
add
in
inc
enter
dec
inc
mov
jle
sbb
out
and
movsl
adcl
dec
sbb
fs
into
ljmp
add
dec
lock
adcl
repnz
sub
inc
clc
push
pop
out
pop
mov
push
xor
inc
insl
in
xchg
and
sarb
and
mov
xlat
xchg
cwtl
popa
push
fsts
dec
xlat
loope
pop
xlat
pop
fwait
stc
test
mov
sti
xchg
or
popa
fnstcw
mov
fwait
and
sub
add
adc
cmp
movsb
mov
scas
xor
ss
bound
jmp
mov
shlb
sbb
inc
mov
aas
aaa
cmp
pop
cmp
xchg
imul
in
lds
int
movsl
mov
or
scas
into
sbb
aad
mov
cmpb
or
pop
loop
mov
aas
in
movsl
stc
cmpsw
xchg
mov
ret
push
add
fdivl
push
inc
mov
pop
aad
and
imul
into
adc
cmovne
xchg
pop
add
je
dec
sbb
push
gs
out
aaa
in
gs
adc
lret
bound
push
js
push
outsb
lahf
mov
rolb
mov
rcrb
sub
jb
mov
std
hlt
iret
mov
xor
incb
cmpl
out
gs
insl
cs
in
stc
aam
iret
insb
jg
mov
cmpsb
push
roll
push
js
or
repz
push
stc
sbb
add
dec
movsl
into
negb
out
movsl
addr16
sub
test
adc
xchg
out
aad
xchg
idivb
mov
fsubrs
dec
lea
jb
dec
mov
imulb
xchg
sub
mov
pop
ds
push
mov
pop
rorl
sar
add
loopne
pop
inc
pop
mov
jbe
inc
leave
ljmp
xchg
aam
bnd
xor
mov
push
test
xchg
int
ret
push
bound
mov
aad
adc
mov
push
push
into
mov
imul
cmp
mov
mov
lcall
fists
sub
cmp
sub
movsb
mov
lods
push
dec
gs
enter
add
xor
addr16
stos
pop
push
je
pop
es
fst
dec
cmp
push
lret
cmc
push
fbstp
dec
mov
ds
ret
sti
loop
stos
xor
test
ret
rcr
test
mov
ljmp
mov
or
dec
mov
inc
hlt
mov
repz
jnp
xchg
jae
arpl
pop
leave
hlt
into
sub
pop
xchg
and
cmp
xchg
jecxz
out
cmp
aad
bound
cld
insb
arpl
push
push
addr16
rorb
test
sbb
and
outsl
adc
sti
xor
leave
or
rolb
aas
mov
jne
inc
mov
push
repnz
mul
loop
lds
jmp
mov
adc
ret
inc
push
jne
dec
in
sahf
int3
mov
jno
das
mov
adc
into
lret
adc
rcrb
mov
cmp
sub
and
imul
xchg
insl
or
loop
xchg
addr16
sub
dec
fisttpl
inc
out
outsl
iret
pop
push
into
xchg
jmp
xchg
ror
push
andb
dec
push
xchg
outsl
insl
push
cmc
inc
mov
fnstsw
mov
mov
imul
les
out
mov
jle
les
add
das
inc
mov
shrl
and
cmp
pop
mov
mov
inc
add
mov
mov
repnz
push
in
rclb
lcall
push
enter
push
mov
js
cmp
mov
imul
push
inc
push
xchg
dec
pop
mov
imul
out
out
push
push
cs
xorl
sarb
sbb
or
xor
ja
sbb
sub
jle
mov
dec
sarl
lar
push
or
dec
xchg
push
mov
mov
fs
cmp
cmp
repz
jg
jno
test
mov
movsl
dec
mov
lock
stos
cwtl
pushf
js
in
jno
dec
inc
enter
pop
bound
mov
lods
adc
mov
test
in
adc
fsubs
inc
add
mov
mov
jl
subb
inc
mov
and
or
test
pop
orl
mov
jmp
popa
mov
sub
xchg
mov
pop
adc
push
xchg
clc
pop
mov
test
xor
jae
or
icebp
aas
stos
xor
and
and
out
out
sub
daa
adc
dec
sub
cwtl
dec
les
divl
mov
lret
std
into
sub
ret
dec
leave
lcall
pop
jns
pop
mov
bound
jmp
pop
mov
frstor
mov
pop
std
mov
pop
popf
pop
pusha
mov
pop
push
xchg
daa
les
js
stos
mov
imul
jmp
dec
out
repz
and
sub
sub
inc
sbb
pop
es
sub
outsl
in
or
mov
gs
pusha
lret
mov
insb
pop
jno
mov
lret
cmp
das
pop
pop
inc
cltd
push
dec
pop
xor
int
sbb
fidivl
mov
sub
add
mov
jecxz
fistl
cld
int
mov
push
repnz
lahf
in
loopne
int
push
cmpsb
in
in
xchg
xchg
nop
addr16
add
mov
jmp
mov
rorb
pop
pop
jbe
or
lret
bound
ror
fcomip
xlat
and
mov
mov
cmp
xchg
iret
xorb
das
sbb
jmp
imul
sub
push
sarl
inc
ret
add
testl
adc
into
adc
sbb
stos
inc
cltd
outsl
shl
inc
test
pop
sbb
push
xchg
adc
ljmp
out
fs
fsts
pop
mov
jae
neg
jg
mov
sub
lcall
sub
cs
out
push
xchg
loopne
in
jo
dec
test
push
xchg
and
in
sahf
outsl
test
mov
fdivrs
jecxz
sahf
xchg
insb
add
mov
and
sahf
pop
mov
or
fwait
aaa
or
jecxz
pop
js
stc
dec
jp
jle
sbb
cmp
xchg
xchg
mov
adc
jns
jns
jle
jge
dec
hlt
mov
sbb
push
loope
clc
adc
xlat
stos
inc
aam
push
push
mov
inc
dec
shrl
push
mov
movsb
mov
inc
inc
test
adc
push
mov
mov
call
xchg
mov
inc
dec
inc
out
mov
iret
pop
cmp
push
xor
add
cmpsb
dec
loop
out
iret
xchg
jge
icebp
rcr
inc
xor
jle
cmp
iret
xor
rcrb
fsubrp
in
lahf
inc
dec
sub
sub
adc
mov
test
sub
and
inc
pusha
pop
push
xor
notb
lock
or
dec
push
adc
out
mov
pop
not
jg
lcall
fstpt
inc
out
inc
lret
xor
mov
add
mov
inc
and
jb
pushf
cmp
xchg
jle
pop
into
cmc
xchg
add
aam
add
mov
adc
add
fisubl
mov
mov
test
fisubrl
pop
ss
jp
addr16
push
pop
add
inc
xchg
mov
pop
mov
gs
push
mov
lcall
sahf
jg
adc
es
les
imul
dec
ds
push
test
leave
jg
lret
cmp
adc
xchg
inc
dec
mov
cld
dec
mov
push
fmul
cmpb
mov
jle
jb
push
mov
stos
jo
mov
pop
xchg
mov
inc
mov
lahf
fadd
ss
jp
xor
inc
push
sahf
jnp
and
dec
es
es
lods
bound
ficoml
push
sbb
fwait
mov
or
cwtl
les
dec
shr
mov
popa
std
fstpt
aam
cmp
cltd
jp
call
add
xlat
cmp
or
pop
jge
add
inc
mov
outsb
dec
dec
mov
dec
movsb
sub
dec
jl
add
stos
dec
inc
xor
xchg
repz
cmpsb
pop
xchg
jmp
add
dec
mov
sbb
mov
fisubrs
shrb
insb
push
cmp
lea
jp
xchg
cmp
mov
inc
adc
ud2
inc
jmp
mov
test
xor
clc
add
pop
inc
aaa
jle
cltd
lahf
jecxz
push
cmp
xor
jae
mov
repnz
inc
ja
ficoml
out
out
lock
sti
mov
fidivrl
push
mov
dec
cmp
add
pop
pop
xor
gs
jns
adc
adc
xlat
mov
sbbb
sbb
test
adc
fwait
andl
test
push
fnstcw
cltd
in
dec
pop
xlat
mov
es
stc
orl
std
pop
out
inc
inc
bound
lds
jmp
adcb
pop
decb
sub
mov
sbb
cmp
inc
test
jmp
fistpl
push
push
push
inc
mov
fildl
sbb
adc
adc
xchg
stc
enter
adc
pop
daa
mov
adc
inc
rorl
mov
xor
lods
and
jbe
outsl
in
adc
jg
and
cmp
pusha
mov
mov
lret
push
adc
punpckldq
in
push
jecxz
sbbb
mov
xchg
imul
lahf
dec
cmp
bound
push
mov
loop
push
push
fcoml
jnp
pop
mov
imul
push
test
cld
mov
and
popa
mov
outsl
add
pop
mov
cmpsl
movsl
dec
hlt
push
mov
addr16
outsb
das
shrb
and
pmullw
inc
jge
mov
mov
mov
rorl
movhps
mov
or
aad
and
mov
out
aad
cltd
mov
movsb
imul
in
fcmovnu
test
inc
jl
or
into
sub
scas
fidivl
xor
pop
cs
iret
inc
aad
movl
popa
rcrb
mov
push
insl
inc
imul
cmp
jmp
mov
adc
rorb
jbe
cli
xchg
popf
movsl
out
dec
sbb
insb
cmc
test
int3
mov
fcoms
sbb
clc
lret
pop
insl
mov
cltd
jl
xor
test
jb
int3
ja
pop
and
sub
push
ret
iret
test
cmpsb
sbb
inc
cmpsb
stc
mov
push
insb
loope
js
xor
lods
jbe
pop
inc
jg
adc
les
mov
in
ja
mov
jmp
sub
or
pop
mov
aas
roll
mov
push
jge
mov
dec
jmp
mov
push
clc
movsl
push
aas
out
push
leave
pop
xchg
adc
daa
jp
dec
inc
cld
xor
pop
cmp
into
dec
sub
mov
loope
and
xor
leave
fmulp
jg
lea
lcall
insb
data16
es
ffree
mov
inc
mov
pop
xor
mov
js
adc
adc
in
mov
iret
hlt
mulb
std
pop
jo
stc
jge
mov
and
stos
cli
psubusw
jecxz
call
cli
xor
loope
inc
sbb
cmc
sbb
not
sbb
sbb
imul
jns
nop
imulb
hlt
out
in
shll
int3
in
dec
inc
xchg
inc
add
fimull
sti
adc
add
jnp
mov
mov
push
rcl
pop
icebp
push
popl
jmp
mov
sbb
or
stos
sub
fcmovnb
int3
inc
repz
rcll
stos
or
leave
and
lds
push
pop
clc
outsb
and
cmp
add
xchg
dec
adc
ret
sbb
inc
xchg
imul
ss
jbe
mov
jae
xor
test
cmp
ja
mov
outsl
notb
mov
sub
outsl
dec
jmp
jge
push
dec
lods
enter
or
test
fisttpl
mov
int3
add
mov
clc
push
cmp
adc
mov
mov
popa
xchg
orl
imul
jge
imul
inc
cmp
mov
test
clc
das
call
xchg
cltd
fimull
sarl
push
pop
pop
adc
pop
mov
fldenv
mov
push
mov
stos
mov
rolb
lods
mov
xchg
xchg
enter
lods
inc
das
jp
and
adc
or
out
daa
adc
push
and
pop
push
std
in
dec
or
push
xlat
cmp
movsb
int
sbb
not
cltd
add
xchg
std
sub
pop
and
push
dec
xor
fldcw
data16
jae
imul
loope
sbb
adc
mov
adc
jne
mov
xor
inc
mov
mov
cwtl
cwtl
mov
adc
xor
cmp
int
dec
sub
cmc
push
and
nop
pop
push
shrl
pop
or
fbstp
lahf
inc
fistps
cmp
rorb
rcl
mov
adc
stos
fdivrl
push
ret
mov
mov
les
mov
sub
jg
popf
jp
mov
imul
cmpsl
push
in
pop
jg
cmp
adc
scas
dec
lods
lds
mov
out
or
scas
leave
mov
push
jl
jno
xor
fs
cmpsb
jno
les
mov
xchg
inc
movsl
jp
push
dec
dec
loop
imul
lgs
lcall
xchg
js
push
push
pop
pusha
cli
lods
sbb
jae
push
push
jmp
aaa
pop
jp
stos
mov
cli
push
xor
inc
mov
and
das
push
mov
std
adc
mov
jg
imul
pop
mov
dec
and
sbb
int3
lcall
aas
jno
add
jle
clc
or
pop
jno
inc
sbb
ds
repz
pop
dec
ret
sbb
orl
les
je
pop
cmp
fmuls
push
add
loop
dec
ds
mov
and
movsl
mov
lods
mov
push
repnz
xor
fadd
mov
and
aam
je
xchg
mov
pop
pop
xchg
push
or
cmpsl
mov
leave
jg
or
cld
ret
int3
adc
fsub
je
and
mov
and
jecxz
push
pop
cmpsb
rcl
push
popa
sbb
aad
jns
jge
jge
sbb
jne
incl
jnp
push
adc
inc
orb
in
push
sbb
and
int3
xor
push
mov
std
xlat
sbb
pop
sub
add
jl
cltd
out
lods
mov
lret
mov
std
imul
inc
sub
fnstenv
out
pop
popf
jmp
loope
lds
jbe
and
xor
and
cmp
stos
les
popa
dec
adc
jecxz
push
sub
dec
pop
jg
lahf
inc
mov
jg
arpl
aam
dec
hlt
call
or
and
jp
push
popa
sbb
mov
xchg
jbe
push
popa
xchg
cld
aaa
cli
and
or
movsl
add
xchg
cltd
fucomi
out
insl
xchg
jo
loope
outsl
jne
inc
mov
inc
repz
mov
and
mov
insl
push
add
les
pushf
lret
xchg
mov
cmp
push
mov
test
jne
insb
cld
mov
jno
adc
sbb
adc
hlt
pusha
jecxz
sti
xor
jns
ja
and
loopne
outsb
inc
push
or
dec
mov
pop
sbb
test
cld
arpl
jnp
jns
pop
pop
and
cltd
lret
out
pop
out
fmull
and
jle
data16
out
push
imul
sarb
xchg
mov
sbb
cmp
cmpb
xor
ret
cmpsl
xchg
int3
and
mov
sbb
sarl
push
mov
imulb
pop
loope,pn
stc
cmp
sub
movsb
mov
mov
aas
xchg
fs
adc
or
dec
mov
das
sbb
popa
sub
inc
xchg
shlb
stos
push
pop
addl
shrl
xchg
cs
and
fdivl
jle
in
call
imul
mov
cli
imul
cmp
je
cwtl
pop
add
into
cli
out
xor
aaa
xor
sub
popf
sbb
mov
cmp
insl
repz
mov
mov
in
cmpsb
popf
out
es
mov
inc
ja
bound
sar
jmp
aad
or
inc
lods
sub
in
sbb
inc
push
call
addr16
dec
out
fldenv
pop
xor
mov
cmp
xchg
xchg
iret
jne
ror
cli
xchg
call
mov
insb
subb
notb
pop
ficomps
test
lahf
jbe
adc
adc
xor
sbb
pop
jo
sub
inc
mov
mov
movsb
push
hlt
adc
mov
and
fwait
js
daa
lock
loopne
and
aam
lret
or
dec
mov
stos
xlat
inc
shll
jno
int
sbb
orl
repz
add
ja
dec
mov
loopne
outsb
xor
inc
aaa
rcr
dec
popf
loope
xchg
negb
dec
jecxz
sub
add
sub
mov
dec
adc
bound
loope
xchg
out
sbb
mov
xor
lods
add
das
andl
jnp
test
imul
daa
pop
mov
push
jmp
lret
jno
jo
push
popa
add
in
movsl
push
and
aas
mov
mov
fcompl
shlb
nop
mov
loope
cmp
fdivr
testb
scas
in
testl
js
bound
loopne
mov
fisubrs
fsubrl
scas
sarl
mov
fidivl
cmp
lods
mov
sahf
sbb
std
clc
dec
in
sub
mov
rcrb
xchg
aas
mov
out
insb
out
jns
adc
or
ss
divl
mov
insl
jp
lret
int
adcl
sbb
lahf
mov
or
pusha
inc
sbbl
jnp
call
mov
aam
mov
out
inc
insl
xchg
icebp
fisubrl
lret
pop
adc
jae
inc
sub
sbb
jnp
and
test
rcll
push
sub
shll
sbb
adc
call
mov
psrlq
and
sub
sbb
xchg
scas
cmpsb
pop
outsb
inc
or
insb
mov
jmp
xchg
pushf
rorb
das
inc
sub
mov
sahf
daa
iret
mov
inc
or
mov
addr16
fsubrp
jne
inc
aas
test
jbe
pop
adc
lea
add
jge
adc
fwait
lret
or
pop
iret
xchg
insl
jg
push
outsb
sub
mov
ret
mov
sti
ljmp
arpl
mov
jne
mov
mov
sub
push
xor
stc
mov
xchg
cmp
sub
sbb
notl
jnp
pop
push
mov
aaa
sarb
push
test
push
xchg
pandn
ret
or
pop
aam
or
push
lcall
jbe
add
mov
dec
cwtl
shl
cmp
lahf
fstpl
ficoml
mov
aas
xchg
push
jp
lods
jo
jle
insb
pop
jno
sahf
pop
inc
nop
shll
popf
scas
outsl
or
shr
dec
pop
adc
adc
repnz
pop
cmp
std
mul
and
popf
fwait
sbb
and
shl
test
out
cmpsl
mov
clc
pushl
scas
jne
jnp
xchg
stos
cmp
loop
outsb
mov
test
push
dec
fcom
popl
cli
push
mov
ds
pop
xchg
xorl
not
or
out
mov
dec
xchg
addr16
std
cmp
das
jle
pop
add
mov
les
xchg
int
test
and
test
roll
fsubr
sti
movsl
in
push
ja
and
mov
mov
push
inc
shl
and
insb
ret
imul
outsb
xor
cltd
fldenv
cmp
stc
dec
jl
pop
push
push
cmp
xorl
jb
push
into
sbb
cld
mov
jl
xor
je
mov
push
popl
pop
int
lret
jp
ret
es
lahf
push
out
fstps
and
pop
sub
call
adc
xchg
pop
loop
aam
loopne
and
jo
mov
es
sbb
mov
or
ret
pushf
out
int
pop
dec
adc
jecxz
in
stc
in
xchg
sbb
les
xchg
cli
xlat
in
sbb
jbe
scas
stos
ret
mov
iret
jecxz
mov
out
jg
nop
add
ret
inc
mov
jns
cs
mov
dec
adc
test
out
test
mov
aas
scas
mov
xchg
ret
scas
mov
js
pop
cwtl
pop
mov
testb
dec
cmp
or
iret
test
sbb
pushf
inc
aaa
bound
pop
test
clc
adc
xchg
and
sub
mov
fsub
push
jp
xor
xor
jecxz
jnp
in
xchg
clc
push
incl
cmpsl
mov
repz
jg
clc
jp
jb
popa
loopne
cmp
pushf
outsl
mov
cmp
out
outsl
inc
adc
xchg
mov
lock
inc
cmp
hlt
inc
fnstcw
sub
mov
ds
cmc
rclb
outsb
sbb
fidivrl
xor
inc
pushf
mov
xchg
aaa
aaa
int3
cmp
aad
lret
pushf
and
es
test
xchg
frstor
hlt
nop
in
arpl
pop
dec
xor
push
stos
xchg
iret
push
and
add
cmp
popf
xor
call
pop
push
sahf
pop
mov
sbb
push
adcl
add
push
ffree
popa
fmull
jecxz
enter
adc
mov
or
fidivrs
adc
jae
lahf
frstor
sbb
lods
and
pop
xor
mov
sti
leave
xchg
sub
cld
jae
lret
gs
leave
sbb
jg
dec
sahf
mov
stos
mulb
dec
jge
push
jno
jmp
xor
mov
fisttpl
cltd
ret
mov
sahf
dec
in
jmp
add
int3
addl
cltd
push
popf
push
mov
cmp
add
add
xchg
imul
mov
add
add
cmp
ljmp
xchg
dec
xchg
cmp
outsb
ret
jns
mov
jae
loop
mov
cmp
mov
shll
mov
in
adc
das
bound
shrb
jp
cltd
push
jbe
mov
cwtl
ljmp
clc
insb
and
ja
jnp
push
sub
cld
in
cmp
outsb
js
outsb
pop
pop
aas
push
xchg
and
sub
push
rcrb
sub
jle
icebp
xorb
or
or
loopne
jne
ja
cs
push
test
xor
icebp
lcall
lcall
scas
sub
sti
cld
loope
das
pop
mov
sbb
fimuls
sar
pop
daa
pop
add
mov
cs
xchg
into
or
push
xchg
lds
out
inc
or
xchg
faddl
push
mov
push
pop
cltd
sub
out
sub
call
lea
push
cltd
testl
bound
inc
vcvtsd2ss
dec
mov
lods
leave
cmp
out
push
lods
cmp
cmp
je
and
pop
andl
adcb
lods
sbb
jl
test
test
lds
ja
and
rcll
mov
jp
xor
sbb
data16
add
aad
sub
inc
inc
jmp
fs
pop
daa
icebp
cmp
bound
sub
cmp
ljmp
jno
stos
enter
pushf
lods
cs
xor
clc
mov
mov
mov
fiadds
pop
sbb
sahf
out
das
or
jecxz
pop
fwait
xchg
shrl
sbb
mov
popa
iret
cmp
ja
and
stc
mov
pop
push
fidivl
hlt
aaa
mov
inc
cmp
push
sbb
cmc
xchg
mov
or
repnz
mov
cmpsl
and
shlb
xlat
xchg
movsl
fbld
add
bound
inc
or
rorl
push
cwtl
lock
sub
push
aam
popa
sar
pop
movsl
leave
je
and
orb
rclb
cli
jg
sub
test
pop
cmp
inc
mov
xchg
mov
add
inc
gs
repnz
jnp
mov
sti
inc
mov
and
in
push
cs
add
jbe
xlat
push
inc
jns
pushf
and
xor
inc
addr16
cli
mov
xor
push
mov
test
add
push
add
add
lea
hlt
jge
jae
and
inc
icebp
adc
pop
es
in
sti
lods
int
xchg
mov
enter
into
dec
sbb
xlat
roll
mov
inc
mov
in
sub
xor
je
mov
jl
mov
mov
sbb
mov
hlt
rorl
or
in
orl
aaa
lahf
pop
mov
movsb
mov
mov
push
push
xor
xchg
cmpsl
adcl
mov
sub
mov
insb
mov
or
aas
mov
loope
dec
imul
ret
fldl
xor
rclb
dec
movsb
movsl
aam
out
and
push
jo
sub
push
xchg
cs
jl
or
xor
in
add
icebp
add
mov
xor
lcall
not
mov
sbb
sub
ret
leave
mov
scas
xchg
xor
std
daa
sbb
dec
iret
fdivs
ret
dec
shrb
adc
sub
inc
pop
hlt
int3
rcrl
add
test
sub
fcmovu
mov
lret
call
repz
out
sbb
xchg
sbb
movsl
mov
cs
mov
andb
sub
rclb
ds
leave
mov
mov
lods
jl
ret
testb
mov
lods
inc
dec
jne
jle
sub
lds
loop
mov
adc
sub
popa
push
icebp
adc
or
jle
inc
lret
addr16
push
pop
or
pop
adc
sub
sub
cmp
orl
jbe
pusha
cmpsb
lods
sbb
jmp
or
cli
sti
enter
dec
inc
aas
out
mov
add
pop
lret
std
lret
loopne
fwait
cmp
pop
mov
dec
sbb
jns
jbe
orps
sub
mov
sti
pop
add
lods
dec
adc
subb
sub
je
jnp
cmc
jns
cmp
fistpll
jne
pop
jge
cmp
jo
push
fstl
sbb
mov
lock
sub
jmp
add
mov
push
or
fdivl
cltd
stos
mov
pop
inc
ss
int3
repz
stos
add
outsb
nop
shlb
xchg
jle
push
pop
cmpl
pop
iret
cmpsl
das
xchg
cmpsl
jae
pop
dec
test
outsl
xchg
movsl
and
and
and
pop
or
test
inc
push
sbb
incl
je
dec
popf
aam
jae
pop
jmp
sbb
cmp
nop
jmp
sub
lcall
inc
xor
ljmp
inc
pop
lea
mov
inc
in
mov
movl
adc
mov
imul
inc
mov
sub
push
mov
adc
mov
in
int3
and
popf
repz
mov
adc
mov
lds
xor
push
mov
and
sahf
int3
xor
aam
jnp
dec
or
xor
enter
add
jg
lods
push
dec
mov
andl
dec
push
pusha
mov
cmpsl
std
sub
int
ja
sub
loope
and
jnp
sbb
cwtl
iret
test
loope
mov
mov
dec
out
push
adcl
xchg
and
pop
repz
add
inc
pop
mov
dec
sub
data16
movsb
jbe
pop
cmp
movsb
pop
stos
hlt
xchg
loop
xchg
push
in
jns
insb
fisubl
push
fld
ja
inc
ljmp
jp
inc
outsl
mov
cmp
inc
ja
fcmovbe
ror
cmp
test
stos
mov
inc
add
or
ss
xor
fwait
outsl
xchg
xchg
mov
fwait
add
mov
dec
dec
test
cmp
mov
dec
js
mov
fiaddl
jmp
dec
and
sub
fcmovb
inc
addb
and
loope
rcll
mov
pop
sub
sub
jp
pop
sbb
out
sarb
bound
test
push
mov
addl
hlt
cmp
or
cmp
jnp
fwait
and
jno
jp
sarb
imul
pop
inc
cmp
pop
sbb
or
xchg
or
outsb
push
jle
outsl
fadds
mov
add
xchg
mov
mov
sahf
jae
mov
sub
pop
arpl
cmp
jnp
adc
pop
jo
pop
dec
xchg
sbb
xchg
movsb
test
out
rol
into
pop
ret
adc
sub
mov
add
inc
out
call
xchg
mov
sbb
jl
xchg
adc
mov
and
test
jns
test
pop
add
ds
loope
and
push
mov
ss
sti
adc
push
ret
inc
and
sub
pop
aas
cmpsl
lods
push
pop
imull
div
cli
shrb
out
leave
mov
sub
outsl
mov
bound
adc
push
xchg
filds
shlb
cs
fistpl
dec
jl
out
add
inc
les
pop
cltd
in
negl
xchg
sub
xor
mov
jg
inc
xorl
addr16
jle
mov
mov
outsl
jbe
xchg
sbb
mov
hlt
xchg
pop
mov
pop
les
lods
notl
lcall
push
add
scas
dec
js
std
and
fisttpll
enter
mov
mov
mov
cmp
fisubrs
ja
sbb
sub
outsb
lock
inc
or
movsb
xchg
mov
setge
movsb
das
andb
hlt
insl
loop
jge
sbb
adc
mov
xacquire
sub
push
jecxz
rcll
pop
lret
jl
push
aaa
call
es
jne
xor
inc
xor
add
or
fbstp
pop
in
popf
sub
mov
ret
dec
adc
push
inc
inc
icebp
scas
nop
fsubrl
jb
lahf
test
push
divb
xchg
cltd
and
push
test
mov
mov
lcall
mov
cmpsb
js
enter
imul
pop
mov
lock
out
outsl
xchg
dec
xchg
xchg
push
pop
rorb
push
rclb
insl
jmp
xor
sub
mov
mov
pusha
sub
repnz
dec
xor
sti
int
icebp
push
ret
push
lret
shll
test
les
jecxz
je
dec
mov
jecxz
iret
push
addr16
mov
sbb
cmp
xchg
pop
rcrl
les
and
xorb
cs
insl
xchg
test
es
imul
xor
stc
xchg
cltd
xor
jbe
fwait
mov
or
movsl
fsts
push
std
sbb
out
scas
sub
inc
mov
fldenv
cmp
or
push
add
nop
popf
nop
fs
push
aad
sbb
xchg
daa
cmp
cltd
cmp
cmpsb
xor
cltd
xor
sub
cmpsb
mov
in
add
insb
loope
and
lods
inc
cld
mov
call
pop
xchg
shlb
push
test
and
lret
cmc
int
lahf
and
jmp
sbb
out
jnp
jnp
xor
push
fsubr
jne
and
outsl
aas
or
in
pop
ss
ret
cwtl
xor
inc
inc
jecxz
movsl
mulb
pusha
jle
jge
imul
mov
jg
rcll
stos
add
sub
es
mov
fbld
sbb
adc
xchg
mov
add
test
cmp
mov
lds
jno
adc
jp
mov
mov
andl
aam
sbb
fldenv
adc
dec
inc
icebp
loope
sub
pushf
scas
fsts
cltd
mov
push
out
cwtl
jno
enter
push
mov
pop
aas
mov
push
mov
cmp
jo
aam
fdivr
out
mov
gs
pop
jmp
mov
mov
fnstsw
movsb
fiaddl
mov
call
out
cmp
clc
and
xor
pop
out
push
push
adc
out
xor
ss
push
dec
mov
sub
das
out
lea
mov
lods
iret
xor
enter
push
pop
mov
outsl
lahf
jg
mov
jmp
int3
mov
push
add
cmpsb
pusha
gs
lcall
ljmp
cwtl
pop
mov
sub
pop
cld
jne
pop
lods
xor
xchg
mov
push
fdivp
jnp
subl
dec
dec
push
and
xchg
aas
data16
rol
mov
shlb
mov
fnstenv
jb
bound
fists
push
pushf
mov
outsb
cmp
std
inc
jno
stc
fisubs
jp
int
mov
std
sbb
jg
orl
aam
jecxz
lods
in
out
mov
pop
addr16
loop
jle
jg
icebp
ja
pop
repnz
pop
aaa
icebp
sub
test
jecxz
rorb
jne,pt
adc
daa
push
add
lods
sbb
mov
sub
adc
mov
stos
mov
xchg
pop
in
inc
push
fistl
fs
sti
add
jae
sbb
push
xchg
mov
dec
pusha
adc
mov
out
imul
cld
cmp
push
pop
add
faddl
sbb
xchg
dec
and
filds
and
jmp
sbb
inc
sub
lcall
stos
das
push
mov
fcmovu
shrb
lods
out
and
inc
or
cmp
test
ficoml
push
test
out
shll
jo
dec
cwtl
push
loop
addr16
push
adcb
lret
insb
xchg
pop
arpl
mov
pop
pop
test
mov
sub
stos
sub
sub
movsl
inc
leave
sarb
out
sub
xor
in
das
data16
addr16
ja
sbb
sarl
add
movsl
and
mov
sub
rcr
lcall
das
mov
aad
cmc
inc
outsl
sub
pop
push
or
inc
out
push
insb
or
or
aam
sbb
xor
cltd
pop
sub
mov
add
cmp
ja
cltd
mov
mov
rcll
or
add
pop
adc
jo
xor
jne
jmp
and
or
loopne
xor
push
inc
sub
sub
imul
sbb
add
in
xchg
mov
ret
push
jecxz
sti
fmull
cmc
incl
sti
lods
fnstcw
fdivrp
ljmp
xchg
mov
lcall
and
pop
push
popa
inc
mov
xchg
repnz
adcl
jle
test
rorl
enter
cmp
fistpll
push
dec
inc
fucom
mov
jmp
cld
pop
filds
fiaddl
fistps
cltd
dec
mov
cld
inc
popf
imul
mov
mov
jle
inc
and
lcall
cli
mov
push
test
mov
cmc
xchg
pop
popf
sbb
mov
sbb
outsb
cld
cmp
mov
stc
mov
jns
icebp
lahf
and
les
aas
push
and
lods
add
ret
adc
pop
or
pop
ficomps
xchg
mov
fidivrl
sbb
dec
pop
icebp
ljmp
repnz
cmpsl
fbld
sbb
arpl
into
inc
int
pop
sub
fsts
mov
mov
add
mov
mov
xchg
ds
pop
inc
in
pusha
dec
std
imul
xor
inc
enter
clc
mov
outsb
jecxz
xor
pop
add
inc
mov
divl
cmp
hlt
addr16
mov
lcall
test
ret
xor
sub
jg
and
pop
push
xchg
xlat
fs
sar
adc
int
shlb
lret
lret
push
ss
or
mov
pop
xorb
push
sahf
mov
inc
popa
mov
call
sub
jmp
pop
cmp
pop
in
adc
icebp
ja,pn
mov
inc
xchg
lcall
mov
xchg
enter
in
inc
iret
lods
sub
adc
lahf
lcall
bound
fyl2x
ret
arpl
ret
mov
sarb
pop
iret
push
fs
cmp
mov
call
jecxz
xchg
sub
jle
sub
lahf
add
pop
fsubl
pushf
clc
add
dec
mov
ljmp
jae
adc
dec
xchg
or
addb
inc
lds
ficompl
shll
test
cmp
inc
xchg
gs
cmp
push
dec
mov
mov
mov
xchg
sbb
mov
lods
repnz
xlat
in
and
lcall
push
lcall
mov
jo
push
aaa
add
mov
test
mov
xchg
push
pop
in
leave
mov
call
decb
adcl
aaa
sbb
popa
inc
cld
pop
imul
pushf
and
xor
outsl
loopne
add
pop
std
inc
sub
fldt
mov
fmull
sti
xor
clc
xor
dec
sbb
ss
sub
cs
aam
mov
mov
xor
aad
dec
lea
int
roll
xlat
mov
inc
pop
jno
cmp
jne
mov
pop
cld
out
jbe
sub
fisubs
sub
daa
lcall
mov
fnsave
or
cmp
in
lahf
sub
jns
shrl
jo
mov
or
cld
clc
mov
bound
sbb
push
xchg
mov
mov
das
mov
or
or
or
inc
imul
mov
lahf
inc
test
test
adc
add
xchg
xchg
int3
xchg
mov
mov
xlat
push
mov
mov
popa
test
cwtl
loop
fs
repnz
xor
inc
cmp
and
cmpsl
push
sbbb
bnd
pop
test
sti
mov
mov
mov
push
stc
fnstenv
cmp
aaa
cwtl
clc
loop
mov
adc
scas
inc
movsl
xchg
sub
scas
scas
mov
mov
mov
dec
push
mov
xchg
jg
lock
dec
xor
push
sub
pop
pop
sbb
sub
dec
mov
lret
out
inc
pop
lock
inc
mov
or
popa
xor
and
mov
flds
push
lret
idivl
dec
jns
or
jne
pop
cmp
jo
mov
xchg
sbb
xor
or
daa
jg
mov
xor
adc
mov
je
inc
or
xchg
add
ss
mov
rcr
jmp
push
or
xor
mov
aaa
cmc
and
fidivs
add
cmpl
xchg
jmp
or
xchg
sub
scas
and
or
sbb
cmp
dec
mov
cmpsb
inc
arpl
xrelease
mov
adc
aaa
xchg
add
sbb
stos
pop
lock
sarl
fxtract
out
mov
es
jbe
lods
les
fbld
pop
sahf
fiaddl
xchg
pop
pop
dec
mov
jle
dec
imull
lcall
push
jmp
push
xorl
clc
loop
mov
pop
das
xor
dec
push
add
test
xor
mov
or
xor
mov
das
pop
sub
in
lock
js
aad
mov
les
push
push
mov
and
je
sahf
jne
fcomi
divb
aad
enter
add
out
sarl
xchg
out
jge
outsb
push
mov
pop
xchg
sahf
loop
or
mov
leave
jge
xchg
mov
mov
stc
ss
add
stos
xchg
repz
fistpl
sarb
adc
push
loopne
lret
rclb
pop
mov
xor
call
roll
cmp
xchg
xchg
loopne
push
fsubl
je
addr16
mov
sbb
cltd
mov
and
add
sbb
pop
mov
dec
mov
sub
xlat
xchg
fsts
cmpsl
mov
sub
js
push
and
mov
ret
xchg
xor
dec
lahf
pop
inc
and
mov
repnz
hlt
mov
inc
lahf
lock
in
mov
push
std
imul
fdivr
popf
leave
mov
mov
mov
dec
mov
pop
dec
mov
ret
inc
sbbb
cmpsb
and
sahf
xor
adc
daa
push
push
mov
add
call
inc
mov
push
mov
mov
dec
test
nop
loopne
fucomp
xlat
mov
push
into
out
fcoms
or
dec
jo
xor
scas
fstl
imul
push
pop
xchg
or
inc
jae
mov
loop
mov
rorb
xor
imul
cmpsb
xchg
and
outsl
mov
cld
add
movsl
rol
xor
and
mov
enter
dec
cmpsb
dec
int
xchg
inc
aad
lret
xchg
loope
push
jmp
jle
mov
je
popa
adc
lds
mov
shlb
mov
in
shlb
push
out
test
loope
outsl
les
mov
pop
sbb
pop
cld
test
iret
icebp
sbb
iret
addr16
cwtl
outsl
test
push
pushf
rorl
add
jne
sbb
pop
fstpt
out
loopne
push
or
cmp
xlat
sbb
jne
mov
mov
negb
pop
pop
addr16
mulb
mov
test
hlt
xor
push
cltd
add
push
fstp
sbb
push
dec
xor
mov
pusha
inc
scas
imul
dec
jb
imul
mov
test
inc
sub
mov
sbb
mov
adc
dec
loope
and
hlt
test
cmc
ss
jmp
xorb
add
inc
push
pop
mov
mov
popa
pop
pop
out
jne
mov
lods
mov
add
push
stc
mov
jnp
or
xchg
rclw
dec
add
push
fcmovbe
addr16
lret
mov
inc
loop
roll
pop
jnp
mov
popf
sbb
loope
dec
add
push
add
movsb
xchg
pop
out
mov
rorb
loopne
leave
into
pop
lds
xor
in
incl
stos
or
pop
lret
xchg
push
inc
lea
push
enter
and
cld
int3
or
lea
in
lret
loopne
mov
es
mull
xorl
jb
jge
inc
js
outsl
push
mov
mov
jno
xor
sbb
scas
jb
loope
les
adc
mov
sarb
or
dec
pop
jno
repz
lcall
cmc
sbb
out
adc
int3
out
jmp
add
add
lock
stos
mov
xor
xchg
data16
stos
jns
mov
scas
cmpl
dec
insl
sub
adc
aam
enter
pop
push
xor
rcrl
pop
imul
in
popa
mov
andl
mov
pop
lahf
mov
pop
sbb
arpl
jae
sub
mov
stos
mov
imul
in
loopne
jae
pusha
mov
jl
test
lds
inc
mov
aad
sub
pop
fwait
mov
enter
lret
repnz
jns
mov
xor
in
push
mov
call
loope
das
popf
cltd
outsl
or
ljmp
xor
or
filds
cs
sub
add
mov
push
out
popf
es
icebp
push
sub
sti
js
cmpsl
jbe
cmc
mov
jb
int
insl
mov
jnp
adc
pop
add
xlat
stos
push
jo
stos
mov
fwait
and
repz
mov
xor
jle
and
push
gs
ds
dec
or
loopne
aas
std
cmpl
and
mov
push
or
cmp
mov
shll
loopne
mulb
dec
ljmp
scas
inc
mov
dec
cmp
int3
insb
mov
movsb
jbe
fcmove
pop
add
popf
or
xchg
mov
iret
mov
push
loopne
mov
cmp
push
or
iret
aaa
mov
push
lret
imul
xchg
and
push
aas
js
jle
pusha
aam
and
loopne
ds
dec
inc
pop
lcall
xlat
mov
out
data16
call
std
add
stos
mov
jge
mov
sub
push
sti
push
call
push
xor
mov
mov
mov
pop
out
jg
lahf
xlat
inc
cli
dec
insb
mov
add
mov
fdivl
xorb
scas
sbb
mov
ja
jp
loope
pop
int3
sahf
in
mov
xchg
mov
std
lods
push
bound
orb
shlb
out
cmp
addr16
mov
jbe
pop
pop
adcb
in
insb
mov
push
js
jge
aam
lahf
sbbl
les
inc
stos
clc
cmpb
movl
popf
rorb
xchg
pop
jl
fists
rcrl
jecxz
lods
aas
mov
sbb
xchg
mov
pop
push
loope
rcrl
or
pop
mov
cmpsb
jp
mov
scas
insl
dec
fsubs
arpl
xor
xor
nop
pop
adc
lock
sub
sub
stos
xchg
mov
pop
in
xchg
lock
testl
enter
xor
and
rclb
add
jl
rol
sub
pop
es
in
popa
mov
push
sub
imul
push
inc
ja
cli
adcl
movsb
jmp
fldl
inc
ret
pushf
idiv
and
xchg
push
xchg
adc
and
xor
cmp
sub
cmp
xchg
push
inc
mov
sub
ds
in
cmpb
mov
xor
xchg
jl
add
mov
sbb
add
sbb
loop
sub
and
es
or
pop
push
in
movsl
adc
jo
out
cltd
sub
loope
adcb
xchg
jbe
es
push
addr16
rcrb
adc
in
pop
rolb
in
fwait
add
and
loopne,pn
inc
pop
loop
filds
lds
xor
add
repnz
push
mov
ret
xchg
xchg
xor
in
test
fs
stos
mov
xorb
lret
gs
loop
insl
push
mov
cmp
mov
push
loope
push
outsb
fnstenv
js
addr16
mov
pop
or
int
mov
into
sbb
movsb
mov
pop
fstpl
push
xchg
inc
mov
inc
and
pop
mov
sbbl
cli
mov
jle
push
fstl
xchg
movsl
push
mov
lahf
adc
sbb
cmp
mov
stos
xor
gs
sbb
push
mov
xchg
jb
addr16
jae
hlt
mov
push
inc
cmpsl
sub
movsb
lock
adc
xchg
in
loopne
imul
push
mov
int
out
mov
clc
out
ret
pop
mov
sbb
testl
mov
mov
jns
ss
ficomps
bound
cmp
jae
scas
sti
sbb
or
mov
push
jae
cmc
lock
test
divl
and
jnp
jmp
unpckhps
andl
cmp
add
sub
mov
iret
cmc
scas
xchg
mov
lret
dec
push
lock
or
sbb
add
xor
sub
mov
out
shll
lcall
mov
aaa
and
sarb
mov
rcrb
scas
dec
ret
dec
jns
in
jge
and
mov
jo
cs
mov
adc
cltd
out
adc
imulb
dec
cmp
ret
enter
jns
fidivl
jb
lods
push
inc
cwtl
lds
push
push
je
ficoms
mov
push
sub
push
jg
out
cwtl
or
arpl
mov
push
cmp
jl
cwtl
mov
dec
mov
in
inc
xlat
test
or
cmp
dec
mov
dec
pop
adc
sbb
adc
mov
mov
clc
ret
test
addl
es
inc
mov
jo
add
bnd
or
repnz
mov
add
or
repz
pop
addr16
test
xchg
push
popa
ret
data16
push
aad
pushf
sub
push
push
mov
imul
pop
cmp
dec
jo
pop
push
nop
push
xlat
ret
fldcw
or
inc
cmp
xor
jb
mov
cmp
cmp
pop
aaa
movsl
test
cmp
movsl
andl
push
dec
cwtl
icebp
push
imul
arpl
add
xchg
movsb
mov
jno
sub
pop
in
sbbl
dec
xchg
mov
mov
or
pop
adc
scas
pop
outsw
push
loop
out
les
pop
xor
out
mov
int3
dec
jbe
cmp
lods
or
jg
lock
outsb
inc
sahf
cli
push
int
cmp
pop
fistl
clc
mov
fimuls
arpl
xchg
xchg
movsb
and
push
push
ds
cmp
popa
jb
pop
adc
les
iret
fdivrl
pop
inc
dec
fdivl
mov
outsl
shrl
dec
inc
or
lret
movsb
push
cli
shll
cmp
dec
add
scas
jmp
aad
inc
dec
dec
cmpl
adc
ss
mov
inc
push
sbb
mul
pushf
mov
pop
outsb
shlb
pushf
popf
scas
shll
push
add
nop
jmp
inc
arpl
out
or
aam
add
js
outsl
lcall
fists
xor
and
fwait
sbb
add
inc
testb
xor
into
popa
negb
cmc
mov
int
out
pop
xchg
cmpsb
lea
push
pop
dec
jmp
shr
sbb
repz
lods
mov
dec
sbb
jb
imul
popa
sbb
cmp
or
in
push
cltd
dec
xchg
xor
push
in
jmp
imul
dec
adc
push
aad
jb
std
mov
ret
xchg
insb
mov
lock
mov
aaa
cmp
data16
outsl
test
sub
shrl
mov
fisubs
out
pop
or
leave
in
mov
pop
inc
sub
and
and
dec
push
leave
sbbb
jne
xorl
adc
xor
cli
mov
loope
ljmp
cwtl
pop
sub
stc
scas
add
jns
cmp
sub
clc
push
push
shlb
inc
or
push
cmpsl
jae
out
jecxz
adc
pusha
adc
insl
scas
pop
pop
movsb
add
sahf
cmc
ficoms
xor
pop
or
les
cmpsl
sub
push
leave
ret
or
sbb
lea
fcomps
lods
xchg
das
fs
pop
inc
xchg
push
lds
push
mov
into
mov
inc
inc
stc
jbe
jo
jne
mov
out
dec
test
pop
adc
mov
movsl
into
lods
lret
das
jge
or
xchg
cmpl
jmp
sub
xchg
and
in
and
sarl
aaa
inc
xchg
shr
push
lea
sub
sub
fsubr
into
jb
add
leave
adc
ds
es
sbbb
push
xor
cwtl
adc
sub
scas
test
jb
popf
inc
inc
or
and
push
mov
std
scas
test
scas
sti
push
test
dec
ret
mov
dec
icebp
insb
in
pop
rclb
xor
dec
adc
or
and
adc
cmpsb
pop
cwtl
jmp
rcrb
movsb
dec
sarb
sbb
test
add
sub
cli
movsl
daa
shr
inc
lea
dec
xchg
pop
xchg
mov
mov
daa
cli
cmp
jmp
jmp
loope
notb
data16
test
shll
mov
pop
jp
scas
aad
dec
je
jg
push
testb
aaa
mov
jecxz
cmp
outsl
test
cmp
add
dec
pop
imul
mov
xor
dec
sbb
dec
ja
imul
repz
aaa
and
movzwl
sbb
mov
in
mov
hlt
cmp
jl
push
xchg
cmp
mov
ror
test
loope
adcl
test
cld
and
cmp
jmp
int
mulb
inc
jp
ljmp
and
cltd
call
sbb
outsl
cmp
mov
rcrb
bound
sbb
mov
xchg
cmc
or
push
pop
xchg
int3
outsb
mov
push
outsb
scas
stos
cmpl
xchg
cmc
call
ret
aad
orb
lret
mov
jne
xlat
iret
in
xchg
jb
loope
jo
and
inc
out
std
hlt
in
data16
movsb
andl
or
pavgb
and
push
imul
insb
pushf
insb
dec
inc
shlb
mov
push
add
push
jb
leave
movq
push
push
push
aad
dec
push
data16
push
adc
in
xor
pop
outsb
xchg
fwait
out
jle
clc
mov
push
rcll
out
and
bound
cmp
adc
sub
push
inc
ds
mov
sahf
jmp
daa
aad
imul
xchg
in
pop
jae
mov
cmpsb
or
lock
imul
leave
jecxz
mov
lock
leave
fdivp
inc
ror
mov
shrb
in
lret
pop
and
pop
rorb
adc
push
xchg
cmp
inc
lret
test
pop
icebp
mul
movl
subl
xor
xor
pop
lods
jb
leave
add
jbe
iret
aaa
imul
xchg
xor
xchg
xchg
lds
xchg
scas
pop
test
and
mov
sub
lret
cmpb
cmp
push
adc
std
shr
cwtl
xor
loopne
mov
sub
mov
ffreep
ret
add
mov
cmpsb
ret
out
mov
sub
dec
pusha
loop
es
mov
jmp
pop
lock
push
pushf
sub
inc
or
addr16
xchg
aas
aam
inc
nop
xchg
and
xchg
rep
fstps
pop
sbb
sbb
test
out
mov
push
mov
scas
sub
lea
ror
push
mov
stos
addb
sarb
std
pop
or
jnp
mov
cwtl
inc
cmp
js
add
or
cmovbe
std
pop
inc
mov
cld
lods
iret
dec
out
xchg
gs
rorl
mov
lods
fptan
inc
cmp
aas
insl
adc
mov
cld
mov
stos
dec
xchg
mov
mov
imul
inc
jmp
repz
popf
mov
and
sbb
call
leave
ret
test
push
js
inc
xor
cmp
jge
stos
xchg
call
pop
orb
pop
push
mov
push
dec
fisttpl
test
mov
mov
hlt
es
sub
and
sub
or
push
shll
je
popf
in
or
sahf
push
or
outsl
andb
stc
lea
dec
outsl
rol
int3
int3
mov
or
lds
into
ljmp
mov
push
mov
sub
or
das
cmp
jge
pop
rorb
mov
mov
mov
inc
mov
aad
movl
test
cmc
es
loope
fistl
jge
ds
and
repz
pop
xchg
mov
int
rcrl
daa
shl
jge
lret
leave
cmova
lahf
call
or
mov
cmpsl
mov
inc
lds
out
out
cmp
dec
sbb
pop
inc
cmp
in
sbb
iret
mov
in
repnz
fstl
testl
push
iret
sub
xor
push
cltd
sbb
adc
fildl
stos
add
add
loopne
xchg
add
test
and
mov
in
jmp
mov
xchg
pop
lahf
adc
lds
out
dec
sub
lods
push
xor
or
xchg
mov
mov
cltd
rorb
push
jb
sub
jp
stos
jle
mov
add
and
insb
inc
jl
dec
fsubl
lcall
in
cmp
xchg
pop
lret
cld
mov
and
dec
sub
sub
cmp
push
mov
stc
push
clc
mov
pusha
mov
fnsave
in
xor
insb
dec
lea
or
sub
or
push
insb
scas
mov
adc
or
push
fcmovnb
pop
cmp
pop
inc
push
cmpl
push
pop
addr16
loope
mov
jne
xchg
ljmp
dec
cmp
pushl
inc
xchg
rolb
in
aam
mov
lret
lock
dec
cmpsb
xor
sarb
bound
movsl
aaa
filds
adc
mov
lret
xlat
pop
test
aaa
lcall
adc
adc
adc
shlb
inc
insl
pop
cmp
cmpsb
mov
aad
adc
cmp
xchg
insl
shrl
cltd
push
call
out
idivl
addr16
aam
aam
fwait
enter
in
clc
imul
pop
cltd
xchg
popf
jne
inc
jno
movsb
pop
pop
shlb
xchg
sahf
dec
das
pushf
int
jge
mov
cmp
out
mov
stos
jne
leave
shr
ds
gs
jge
and
jb
xchg
mov
adc
xor
mov
or
outsb
or
adc
in
or
pop
xchg
outsb
negb
cs
mov
xor
pop
enter
lds
jl
daa
adc
dec
outsl
icebp
dec
ret
mull
adc
scas
sarb
adc
cmp
aas
les
xchg
movmskps
mov
xchg
loop
or
pop
cmpsl
push
incb
lods
andb
inc
xor
sahf
jo
lds
mov
cltd
cmp
ljmp
cld
fildll
out
lcall
bnd
scas
cmc
cs
test
cmp
jge
or
sbb
jb
pop
mov
sti
fcompl
test
lret
jb
and
dec
addr16
pusha
es
pop
pop
js
fsub
sbb
fdivl
ljmp
xchg
rolb
adc
dec
in
dec
movsl
inc
gs
jno
addr16
mov
inc
jmp
adc
shll
out
rolb
or
popa
pusha
jnp
cmp
or
mov
add
jmp
or
mov
xor
dec
mov
jl
cmp
add
inc
xchg
jns
pop
wrmsr
cmpsb
xor
pop
in
js
lret
in
lret
rorb
pushl
int3
nop
inc
xlat
out
daa
and
jmp
pop
or
push
sub
outsl
outsb
push
mov
mov
das
insl
sbb
sub
ss
xchg
xchg
imul
cli
add
fcmovb
mov
test
pop
addr16
or
lret
loop
mov
mov
xorb
adc
rcrl
fxch
mov
cmp
mov
aam
inc
push
mov
adc
xor
pop
jg
and
and
int3
pop
xor
cltd
loop
adc
sub
xchg
mov
mov
adc
mov
fisttpll
jle
jbe
cmp
push
ret
and
push
and
stos
lods
lods
xchg
leave
sub
xor
int
jle
ljmp
scas
leave
pop
cli
mov
jb
add
test
mov
push
insl
mov
push
or
out
adc
enter
pushf
mov
cmpsl
ficoml
push
popa
imul
jb
inc
or
add
jecxz
mov
leave
xor
ficomps
dec
jns
cltd
icebp
dec
cmp
dec
jne
cmp
push
int3
jnp
lds
adc
je
js
sbb
inc
cmp
jl
xor
sbb
fmulp
jbe
gs
ficomps
int3
sets
sbb
mov
and
jmp
xchg
lcall
popa
inc
inc
cmp
mov
in
or
or
iret
mov
add
inc
cmovb
ja
inc
and
jnp
push
les
cwtl
ss
add
push
xchg
cmp
scas
adc
stc
dec
push
leave
cmpsb
dec
ja
pop
movsb
data16
pop
push
xchg
jb
or
mov
popf
loopne
js
fcompl
stc
mov
mov
or
mov
and
cmpsb
loopne
and
mov
push
jl
xchg
sbb
pop
das
adc
xchg
dec
int
mov
jb
jns
mov
and
fcompl
push
lods
sub
dec
push
adc
pop
push
sub
and
sbb
cs
ljmp
inc
push
test
and
out
mov
aaa
fbld
mov
adc
in
inc
or
aam
jbe
sbb
hlt
jnp
jp
clc
adc
stos
pop
outsl
xor
sbb
fldcw
ja
mov
jae
mov
shr
in
es
test
mov
scas
inc
add
mov
and
mov
mov
xchg
jmp
loope
and
mov
mov
mov
ja
mov
mov
xlat
or
orl
jmp
jge
pop
lds
nop
jae
mov
add
mov
outsb
or
mov
sti
mov
out
sarl
cmp
sysret
adc
inc
mov
cwtl
cmpsl
je
test
pop
mov
lods
js
xlat
pop
add
sbb
scas
sub
push
adc
pop
cmp
ss
shl
sub
lods
or
mov
inc
and
or
mov
sub
xchg
sub
icebp
mov
cmc
shr
jmp
scas
jg
dec
jns
push
pushf
cmc
xor
std
inc
mov
sbb
orl
jo
jae
inc
pop
jo
mov
adc
push
ljmp
cs
imul
insb
push
jecxz
xor
sbbl
imul
push
insl
dec
aad
shrb
sbb
mov
call
dec
dec
push
insl
pop
jb
add
repnz
adc
lcall
xchg
pop
call
aam
sub
jecxz
rclb
rcrl
ret
icebp
sbb
popf
lea
sbb
sbb
mov
push
mov
pop
vmwrite
push
push
adc
push
stos
rorb
dec
movsb
sub
mov
adc
popf
inc
mov
rol
mov
and
xchg
xchg
decl
pusha
add
add
push
loope
pop
add
aam
or
cmpsl
addr16
daa
mov
push
mov
ret
push
adcl
cli
shl
xorb
push
lds
inc
in
rcl
arpl
test
int3
xchg
data16
cs
pop
stc
pop
inc
cld
adc
jmp
fbld
adc
dec
add
xor
push
mov
mov
enter
fsubl
sub
cmp
out
push
add
mov
imul
or
cld
ja
hlt
aam
test
shlb
pop
popa
and
sbb
cld
daa
mov
stc
cmp
xor
sarb
jbe
xor
jne
lahf
cmp
xchg
sub
or
hlt
scas
pop
push
add
jnp
jns
insl
push
mov
iret
test
mov
xor
sub
inc
push
in
lds
in
lret
mov
in
es
imul
xchg
out
fcomps
lahf
xchg
push
fstpl
aam
adc
rcll
push
xor
and
cmpsl
cmpsb
mov
jne
xor
cmp
sbb
lods
push
lock
or
sbb
call
dec
cld
cli
stc
jp
int3
mov
or
sbb
push
jo
xchg
mov
sahf
sbb
xchg
mov
std
push
mov
mov
or
push
mov
sti
aad
xor
dec
mov
dec
insb
scas
aas
sub
adc
push
fwait
mov
jge
mov
movsb
mov
xchg
pusha
or
into
arpl
das
or
xor
ret
or
mov
or
push
pop
jbe
lret
adc
mov
push
and
jae
push
es
dec
adc
test
dec
sub
dec
je
or
fdivs
mov
mull
xchg
xor
shrl
pop
pop
pop
dec
inc
fimuls
and
and
pop
in
mov
dec
cmp
nop
insl
cmc
or
fnstsw
adc
mov
xchg
sbb
in
fcomps
or
cmp
dec
adc
mov
jns
ret
das
repz
cli
int
add
enter
cmp
jg
xchg
cs
xchg
repz
jmp
xor
cmp
fadds
push
fstpl
out
movsb
shrl
shrb
push
adc
leave
inc
jmp
shl
dec
fcmovb
imul
xor
add
leave
mov
in
xor
sbb
movsl
sub
adc
push
jge
sbb
pusha
mov
mov
jmp
sbb
sahf
mov
ja
mov
adc
pop
popa
jecxz
lret
sub
push
popa
push
jmp
out
jae
add
out
sub
popf
and
jns
cld
lods
sbbb
mov
repz
xchg
jmp
add
cmc
sti
sub
lods
rolb
pop
inc
push
push
pusha
cmc
add
lods
jmp
aaa
out
or
push
jle
shrb
outsb
or
dec
sub
test
jp
add
pusha
inc
inc
std
or
inc
cmc
mov
mov
adc
js
pop
sub
xchg
jmp
push
aas
xor
adcl
insb
mov
in
fwait
shl
dec
push
inc
repnz
mov
outsl
adc
cmp
andl
jmp
call
cmp
popa
xor
jbe
xchg
movsb
add
inc
mov
inc
jno
subl
pop
dec
jg
fwait
dec
loop
sbb
jmp
push
out
inc
arpl
jo
sub
or
mov
mov
xor
imul
pop
stc
jmp
jns
mov
pop
cltd
adc
orb
mov
mov
stos
mov
or
popa
xor
aam
fidivrs
icebp
push
call
in
lret
lock
ret
cmp
mov
or
movl
decb
cmp
mov
pop
or
stos
fadds
sar
sbb
mov
dec
lods
xchg
sub
enter
sarb
pop
xor
jp
stos
out
out
push
lahf
inc
jge
arpl
daa
jmp
cmpsb
mov
jle
ficoms
add
in
and
cmp
and
cmc
sub
test
mov
in
call
in
fwait
je
and
push
fiaddl
jp
pop
fldcw
jb
roll
mov
fdivl
outsb
sbb
divl
or
mov
fmulp
mov
pop
mov
fsubrs
and
or
dec
jl
sub
mov
ret
dec
out
std
inc
orl
dec
mov
clc
out
nop
test
or
jge
scas
push
int
xchg
push
mov
sbb
xchg
cltd
and
xor
test
into
cmpsl
and
fiadds
push
inc
repz
loopne
scas
std
push
jp
testl
mov
mov
jae
pop
or
cmp
sub
fbstp
daa
sarl
in
je
movsb
shlb
mov
xchg
out
in
push
jns
or
aas
xorl
iret
lret
mov
repnz
lret
in
and
mov
pop
adcb
outsb
and
dec
aaa
out
push
cmp
dec
push
push
xchg
xchg
mov
les
stos
sub
xor
jnp
adc
or
xchg
inc
faddp
mov
pop
popl
in
lahf
fwait
cmc
mov
push
dec
mov
jb
jle
jo
add
lret
inc
fwait
mov
xor
ret
inc
aas
jo
dec
icebp
xchg
jecxz
jns
push
ret
add
xchg
sbbb
xchg
jecxz
or
sub
jne
add
and
xlat
jecxz
lods
xorl
push
in
sbb
movsl
xor
in
xchg
jg
mov
mov
ja
repz
and
dec
jle
divl
sbb
repnz
pop
mov
pushf
xchg
movd
mov
inc
adc
incb
cli
dec
jle
or
dec
and
push
bound
aaa
adc
jle
cmp
in
xor
cmp
jnp
arpl
iret
mov
int
stos
mov
mov
fwait
jecxz
adc
aaa
and
andb
stos
jnp
aaa
mov
inc
out
jle
loopne
xchg
adc
xor
xchg
js
int
movsl
jmp
sub
test
lcall
mov
dec
inc
fnstsw
pop
cmp
test
fwait
out
xchg
test
hlt
lds
sahf
pop
adc
cmp
cmp
stos
sbbl
xchg
mov
sub
and
add
sub
scas
pop
xor
test
maskmovq
sub
test
xchg
imul
sahf
hlt
cmp
sub
arpl
push
movb
outsl
add
mov
mov
mulb
pop
mov
pop
cmpl
inc
call
int3
push
dec
mov
push
xchg
jmp
rol
rcrb
lock
xor
int
movsl
pusha
mov
cmp
pop
mov
popf
adc
sub
lds
push
mov
pop
iret
jns
xchg
xchg
add
mov
clc
xor
ret
and
and
subb
inc
jmp
inc
mov
or
pop
or
mov
je
pop
lret
push
push
and
or
popa
add
cwtl
sarb
xlat
adc
pushf
jno
mov
insl
cmp
xchg
or
add
aam
fdiv
adc
rorl
sbb
sub
mov
sbb
inc
das
pop
lods
xorl
mov
fs
add
leave
xchg
mov
mov
jne
dec
das
scas
fcmovnb
push
adc
xor
lcall
mov
iret
rorl
add
lret
mov
gs
call
into
mov
inc
lods
mov
mov
pop
cmpsb
mov
iret
ljmp
add
lahf
rcr
cmc
jbe
pop
aas
and
or
lods
scas
into
cs
xorl
dec
lret
mov
repz
nop
aas
dec
cltd
or
pop
int
add
mov
sbb
lret
into
aas
jmp
adc
jp
push
inc
dec
and
js
lret
neg
pop
daa
cmpsl
push
jg
mov
cltd
mov
call
pusha
jl
pop
sbb
arpl
sar
repz
daa
sub
jno
out
sub
imul
push
inc
adc
jbe
sbb
enter
cmp
pop
stos
mov
rorl
repz
ficoml
dec
sbb
aas
adc
and
mov
sti
add
pop
lret
mov
cmpl
out
jns
pusha
and
ds
pop
dec
imul
xchg
aas
test
sub
mov
xchg
ljmp
pop
mov
in
sub
push
mov
lock
push
xchg
jno
sbb
jbe
mov
mov
cmp
popf
mov
inc
repz
mov
or
ljmp
inc
jno
lods
mov
jnp
in
in
cmp
jno
and
clc
adc
mov
push
xor
adc
in
sub
jnp
or
flds
inc
cs
pop
cmpsl
mov
rclb
jge
xor
cwtl
push
xchg
xlat
sbb
fucom
cs
adc
lahf
insb
jg
cltd
pushf
lods
ficoms
xor
adc
pop
add
aad
int
cs
mov
aad
rcrb
repnz
jns
pop
jo
pop
adc
pop
hlt
push
fisttps
imul
stc
jo
add
sbb
add
rcl
sbb
add
test
add
inc
movsl
push
xchg
shrl
scas
xlat
inc
push
stc
sub
inc
sbb
mov
dec
add
leave
jmp
push
clc
mov
movsl
sbb
push
add
jne
mov
pop
mov
in
mov
popf
int3
lea
and
inc
jb
sbb
mov
jne
jg
jge
loop
dec
gs
pop
scas
insb
add
cld
outsl
mov
mov
adc
sbb
adc
push
mov
sbbl
fsubrs
test
lds
orl
mov
add
je
push
inc
dec
add
iret
notb
scas
popa
stos
ljmp
push
fdivs
cmpsl
pop
in
add
hlt
inc
add
push
enter
cmp
and
loope
push
sub
mov
roll
xor
je
jg
add
stc
push
pushf
das
push
adcb
mov
mov
push
mov
push
mov
pop
push
or
cmp
incl
xlat
push
inc
dec
pop
pop
fbld
cmp
mov
xor
dec
push
xchg
mov
ret
or
rol
sahf
repz
and
lock
xor
repnz
fucomi
mov
cmp
or
adc
pop
mov
inc
movsb
dec
enter
les
jmp
mov
mov
sub
cmp
cmp
or
add
std
pushf
push
pop
call
data16
jb
arpl
lods
dec
insb
sti
in
xchg
xchg
ja
arpl
in
and
rcrl
ds
insb
outsb
jne
in
rcll
insb
fildll
mov
out
ja
stos
xor
jae
or
mov
mov
inc
sbbb
out
dec
idiv
pop
inc
xor
js
js
rorl
mov
dec
in
insl
data16
cld
add
iret
xor
xchg
mov
lds
sbb
xchg
decb
xchg
int3
sti
enter
or
test
int
leave
xchg
and
cmpsl
ljmp
xchg
mull
call
stos
xor
mov
pop
xchg
pop
adc
enter
fnsave
shrl
cmc
mov
jno
inc
xor
movsl
das
les
aaa
or
mov
push
rcr
sarb
cmpsl
movsl
push
dec
xchg
and
out
jns
add
cmc
lea
dec
lret
bound
fadds
pushf
insl
cmpsl
add
leave
test
mov
lods
mov
xchg
jle
lods
pushf
cmp
xlat
les
xchg
sbbb
mov
fcmovnbe
dec
xchg
ret
jecxz
sub
sub
xchg
mov
popa
xchg
in
in
jnp
movsb
mov
in
xor
jecxz
mov
xlat
rorb
push
sbb
mov
mov
inc
mov
jbe
test
mov
push
mov
fdivl
rclb
sbb
loop
inc
insl
push
fmulp
dec
popa
bound
mov
mov
cmpsl
pop
or
cmp
test
adc
int3
enter
add
cmp
jmp
push
cmp
in
in
jecxz
ficoml
cmp
ljmp
daa
xchg
mov
and
xchg
sarl
aas
xchg
xor
mov
in
and
sbb
pop
inc
fiaddl
lds
hlt
shll
jno
rsqrtps
repz
in
test
jne
mov
mov
dec
out
inc
adc
sahf
pop
sbb
xor
adcl
xchg
imul
and
outsb
xchg
mov
out
push
and
xchg
icebp
push
mov
out
and
filds
add
cmp
pop
nop
sahf
pop
dec
dec
pop
lahf
sbb
inc
dec
cmp
sbb
repnz
xchg
and
lods
scas
pop
add
mov
out
data16
cmp
or
add
inc
sub
cmp
dec
ret
pop
movsl
lcall
das
xor
leave
outsl
push
sbb
xlat
push
cmp
sub
and
jecxz
add
xchg
inc
jmp
outsb
mov
pop
sbb
mov
jo
xor
loop
stos
jg
in
insl
scas
xchg
loope
call
ljmp
dec
stc
ret
jecxz
and
xor
or
insb
push
popf
xchg
cltd
push
scas
iret
dec
arpl
dec
sbb
sub
cmp
or
mov
jmp
popf
cmp
mov
cmpsl
mov
cmpb
push
or
aaa
test
adc
ds
cmp
inc
or
dec
xchg
inc
jl
lods
divl
inc
mov
inc
loop
pop
xor
clc
ja
out
sub
jae
mov
add
mov
cmp
push
push
xor
lret
idivl
add
xchg
lds
jg
sub
sub
aaa
push
fistpll
dec
sbb
in
pop
cmp
test
xacquire
and
mov
out
add
pop
enter
mov
in
dec
pop
pushf
push
sub
leave
inc
inc
xor
shrb
xor
xor
and
cmp
mov
push
ds
pop
jl
push
mov
dec
adc
leave
aas
je
outsl
rcl
popa
sar
jnp
fldln2
clc
and
in
shl
sub
pop
fs
ljmp
test
sbb
sub
xor
lret
mov
xchg
cmpsl
pop
xor
inc
cli
pop
arpl
sbb
sub
lods
fcoms
dec
fldenv
pushl
adc
mov
mov
int
mov
cmpsl
mov
test
xchg
mov
cmp
mov
jbe
fisubl
gs
stc
mov
adc
xor
mov
mov
cmp
ja
ret
test
push
sub
data16
cmp
imul
sbb
inc
lahf
sbb
cltd
mov
lcall
cltd
pop
add
mov
cmp
bound
sub
subb
lcall
scas
sbb
jno
rclb
mov
add
xor
cwtl
std
iret
xor
sub
test
dec
pop
inc
adc
and
ja
outsl
push
or
jecxz
in
mov
mov
jbe
jae,pn
add
xchg
outsb
fcomps
mov
push
popa
mov
add
xor
rclb
sub
jl
rcrb
jecxz
loop
mov
xchg
bound
push
add
lods
loop
cli
adc
lret
aaa
lods
pop
or
scas
test
test
lods
shl
add
int
xchg
or
loope
push
mov
js
sbb
add
xchg
jne
test
mov
jp
clc
mov
lods
jb
xchg
mov
bound
leave
cmp
fisubrl
stos
inc
mov
fwait
sub
or
fs
dec
lds
das
lock
cmp
or
or
inc
in
pushf
icebp
out
iret
ja
dec
insl
pop
dec
xchg
inc
sub
add
ja
cmp
daa
xchg
sbb
xchg
gs
add
pop
cltd
push
xor
cltd
add
sbb
push
stc
xchg
mov
in
lea
enter
lock
add
ja
dec
adc
repnz
mov
insb
jae
push
enter
mov
lods
int3
adc
jno
outsb
pop
and
sbb
clc
inc
or
test
test
cmp
add
cmp
int3
pop
loop
pop
pop
repnz
dec
mov
mov
push
dec
lret
jge
lods
add
sbb
fidivrs
leave
mov
or
jb
inc
movsl
dec
sbb
mov
xchg
dec
jne
adc
mov
ja
shl
push
sbb
pop
sub
frstpm(287
and
stc
shrl
aam
adc
and
xor
and
inc
repnz
mov
fadd
sub
pop
inc
in
adc
and
mov
mov
dec
dec
sub
daa
mov
popf
pop
xor
sti
jl
popf
frstor
outsb
outsb
xchg
repnz
ficompl
add
push
and
add
lcall
outsb
popf
jmp
scas
pop
cmp
lret
pop
mov
aad
cmp
ds
ljmp
xchg
ret
addr16
out
xchg
imul
cmc
add
push
sbb
mov
jne
jl
rol
inc
sbb
repz
ds
loope
loopne
or
pop
pusha
fwait
icebp
addr16
or
jno
or
das
test
insl
pusha
push
jmp
das
les
out
pop
mov
xchg
lret
mov
sar
sbb
mov
in
out
mov
iret
jge
sub
ljmp
mov
add
xor
cmp
jge
and
enter
mov
jb
xor
inc
incl
sbb
pop
repnz
jecxz
mov
cmp
ljmp
enter
setle
mov
movsl
mov
stos
xchg
push
inc
fstpl
into
data16
fwait
dec
rorb
jp
inc
lea
pusha
dec
adc
loop
sti
jno
push
roll
sbb
and
gs
xchg
add
addl
imul
ss
aam
add
neg
cmc
cmp
into
cmc
lods
ljmp
push
cmp
pop
mov
push
bsf
test
mov
imull
lods
aaa
sbb
cld
xor
add
push
stos
cmpl
sar
xor
mov
lds
gs
loope
int
cmpsl
jb
popf
and
ds
dec
sbbb
jg
gs
dec
dec
dec
mov
out
sub
popf
mov
sbb
push
add
pushf
mov
mov
mov
shrl
test
cmpsb
sbb
in
push
daa
js
push
ret
fisubrl
es
push
cmp
add
ds
insb
jl
orl
add
mov
mov
mov
icebp
pusha
ret
cmp
jnp
xlat
fs
push
shr
dec
adc
pop
rcrl
sbb
pop
popf
xchg
pcmpgtd
mov
daa
pop
nop
jp
cmpsb
repnz
push
adc
jne
inc
inc
bound
jne
rcrb
jno
mov
pop
mov
xlat
cmp
jb
or
icebp
sbb
and
push
les
mov
cmp
jp
clc
sbb
pop
sub
mov
sub
inc
incb
and
mov
mov
addr16
lods
mulb
sub
inc
add
dec
cmp
dec
sbb
fldl
push
pop
fists
adc
adc
pop
fidivs
ds
cs
jl
fsubrs
dec
mov
xchg
push
sahf
xchg
xor
mov
lods
sbb
dec
cmp
call
ret
dec
loope
or
or
cwtl
pop
sahf
mul
pop
bound
test
cmpsb
push
in
test
icebp
call
test
es
or
mov
js
mov
mov
inc
add
andl
sub
movsl
inc
add
mov
out
push
dec
push
out
or
mov
loope
inc
lret
dec
mov
int3
or
push
test
cmc
adc
inc
insl
mov
test
jmp
push
ss
xchg
movsl
dec
loope
mov
xor
cmp
mov
jmp
ret
popf
in
mov
pop
aaa
jge
xchg
int
je
xchg
pop
ljmp
push
xor
out
lret
das
push
ljmp
sub
dec
ljmp
lods
add
dec
or
call
xor
jmp
pop
ljmp
sbb
mov
cmp
cli
movsl
mov
stc
sar
pop
adc
push
add
mov
jge
mov
repz
jno
push
in
and
adc
or
lds
add
pop
repnz
scas
mov
lcall
xchg
sbb
push
outsb
cltd
adc
das
inc
jp
nop
add
popa
loope
stc
jns
in
sbb
in
mov
xor
popa
std
jle
jns
cmp
sbb
lret
mov
push
pushf
mov
out
or
pop
sahf
mov
movsl
lret
sub
out
mov
jbe
sbb
dec
ffree
or
mov
pop
test
push
lds
mov
push
jle
xor
stos
into
jg
or
popl
in
fldenv
dec
mov
mov
clc
adc
mov
mov
call
jno
push
test
jns
mov
icebp
mov
outsb
add
sbb
xor
mov
test
xor
in
add
inc
sub
pop
jl
pop
pop
shll
shll
sahf
push
sbb
int
cmp
call
les
mov
or
sbb
cld
scas
push
cmp
dec
dec
mov
push
ss
add
sbb
ja
cs
dec
xchg
mov
notb
repz
pusha
mov
push
sahf
and
add
repnz
xor
ja
mov
icebp
movq
pop
adc
addl
inc
aas
mov
mov
lret
sbb
leave
dec
or
xchg
out
fistl
jg
cltd
aaa
mov
es
mov
sbb
mov
dec
and
lea
in
int3
xor
test
lcall
pop
mov
cmpsl
lock
scas
test
and
fnstcw
pop
rcll
and
pushf
mov
add
in
mov
arpl
fsts
mov
cmpb
testl
inc
cli
stos
test
sub
adc
xor
push
xchg
adc
or
stos
cwtl
xor
dec
daa
fisubrs
jp
ljmp
popf
mov
mov
std
pusha
lock
lcall
cmpsb
sahf
cmp
sub
pushf
imul
in
jle
lock
in
ret
fdivrl
sub
jge
dec
push
cmp
fs
into
xor
jmp
call
push
es
fistps
leave
pop
mov
push
xor
cmp
rolb
mov
mov
scas
and
or
pusha
jne,pn
sbb
push
lock
cwtl
and
add
das
into
jmp
push
pop
pop
sahf
inc
sbb
adc
stos
in
xchg
adc
pop
and
mov
arpl
cmc
nop
mov
rorb
popf
mov
inc
xor
xchg
adc
sbb
in
ss
daa
in
hlt
add
fs
inc
push
push
rcrb
leave
sub
aam
lahf
inc
inc
sti
mov
pop
mov
in
lods
lcall
jle
loop
scas
movsl
push
inc
faddp
push
add
andb
aad
cwtl
or
pop
mov
jae
fcmove
lret
popa
mov
lret
div
stos
mov
jbe
push
push
push
cld
or
stos
and
stos
mov
sub
test
push
lock
pushf
sbb
mov
mov
or
ficoms
adc
add
test
xchg
push
sub
pop
ret
movsb
lret
lock
bound
lock
rorl
ljmp
movsb
pop
int3
sar
lret
push
mov
fstpt
test
movsb
fildll
dec
mov
clc
or
mov
xor
out
sbb
das
jns
outsb
and
insb
into
cmp
push
or
or
xchg
cmp
rcl
or
xor
sub
lret
fildll
lret
mov
jle
cmp
sbb
pushf
mov
ret
es
sbb
imul
lret
insl
iret
sub
mov
cmp
pop
add
lock
push
push
dec
inc
imul
adc
or
and
sub
cli
jo
mov
dec
pop
popf
cmp
mov
outsb
into
popf
mov
daa
dec
js
mov
in
imul
insl
ret
push
xchg
adc
lods
ss
outsl
loope
outsb
or
or
xchg
sti
clc
imul
ss
adc
dec
imul
fisubrl
push
es
inc
in
lret
dec
bound
fildl
fs
and
dec
lods
and
cmp
xlat
into
clc
xchg
mov
or
in
imul
mov
push
test
jo
aas
xor
mov
out
mov
push
scas
stos
fisubs
cmpsb
xchg
rcrb
sbb
bound
stos
ret
xor
stc
pop
jmp
sbb
sub
jbe
rcrl
addr16
mov
lahf
rcll
bound
jge
xchg
ror
mov
sub
js
dec
mov
mov
jmp
cld
push
fdivs
orl
sub
les
lods
jns
adc
or
das
lret
jo
jbe
das
je
pop
mov
mov
xchg
pop
sub
negb
pop
repnz
shl
lds
mov
roll
push
xchg
sti
test
pop
xchg
push
int3
inc
push
sbb
mov
inc
push
pop
xor
bnd
inc
adc
scas
fcompl
or
pop
dec
mov
or
mov
lret
ffree
inc
addr16
adc
repnz
xor
xor
cltd
pop
rol
inc
mov
xchg
xchg
add
jmp
shrl
arpl
dec
dec
enter
xor
ja
pop
adc
sub
mov
mov
pop
in
stc
mov
test
repz
dec
sbb
mov
insb
push
jns
adc
in
data16
mov
or
nop
lods
jns
addr16
adc
push
push
mov
lds
jbe
inc
push
mov
lret
jl
add
test
js
jnp
jae
jp
sysexit
ljmp
out
mov
sub
ret
or
mov
js
pop
push
pop
mov
or
out
shlb
insb
mov
mov
lcall
out
mov
nop
fnstsw
and
in
xchg
or
lret
mov
in
sbb
xchg
hlt
pop
pusha
cmpsb
push
loop
mov
into
loop
dec
xor
cmc
pop
jbe
fwait
push
adc
adc
test
adc
jmp
jb
es
inc
shrl
popf
cmc
push
adc
mov
sbb
fsubrl
push
repnz
pop
popa
cmc
xchg
mov
gs
mov
add
and
rcll
xor
cmp
loopne
jge
out
xor
rorl
inc
mov
sarb
mov
notb
lock
xchg
mov
loop
xchg
push
into
add
popa
je
jg
into
pop
pop
xchg
jecxz
pop
cmp
out
roll
push
lret
lea
mov
setl
xor
sub
xchg
insb
test
clc
pop
lahf
inc
test
pop
out
mov
sub
xor
mov
adc
mulb
test
lods
in
clc
cmp
pop
fdivrl
jb
and
std
dec
cwtl
or
pop
cmp
dec
push
ret
loope
sub
test
inc
rorb
dec
xchg
outsb
pop
out
test
jb
add
dec
adc
outsb
fcmovnbe
fnstsw
dec
sbbb
call
loopne
xchg
mov
out
inc
inc
inc
cmp
or
mov
jle
fnstsw
push
cmp
subl
jle
inc
adc
fnstenv
mov
mov
or
add
push
mov
pop
outsb
shlb
stc
test
test
popa
xchg
lret
push
test
aam
cli
sti
sbbb
mov
and
icebp
ret
cmpsl
mov
adc
or
jcxz
sub
enter
adc
ja,pn
out
dec
jb
mov
mov
xchg
mov
cmp
pop
sub
jae
mov
out
das
leave
jecxz
outsb
jle
jbe
push
leave
sbb
ja
adc
je
inc
jno
sbb
mov
daa
ret
dec
sti
fidivrl
mov
je
add
scas
mov
xchg
rcl
xlat
mov
cmp
jnp
jb
mov
dec
or
inc
addr16
mov
clc
dec
inc
jnp
pop
pop
stc
mov
popa
and
jp
mov
popa
mov
stos
push
test
cli
xchg
adc
movsl
xor
shlb
adc
mov
hlt
jno
jno
or
lahf
xor
mov
pusha
inc
push
pop
call
je
inc
popf
inc
data16
outsb
sbb
mov
xchg
pop
test
lea
sti
popa
jne
loop
ss
push
in
scas
cltd
cli
xor
call
je
mov
ja
mov
cmp
pop
dec
xor
cmc
aas
sbb
sbb
xchg
sub
dec
dec
mov
or
inc
out
mov
add
cmp
push
int3
xchg
lds
mov
dec
add
mov
xor
test
loopne
or
cwtl
aaa
xchg
jmp
xor
or
frstor
es
leave
sahf
mov
lcall
add
daa
push
lds
jg
clc
pop
and
push
add
lcall
sub
jae
pusha
test
dec
inc
xchg
pop
loop
mov
xorl
test
mov
mov
outsb
and
shrl
mov
add
sub
bound
rolb
adc
test
add
loope
or
test
stos
xchg
add
shrl
inc
sahf
cmp
stos
inc
xor
and
mov
mov
lock
jp
push
in
pop
cmpb
test
cmp
inc
cltd
aam
pop
das
xor
test
iret
pop
add
push
cmp
mov
inc
mov
fwait
sub
push
mov
cmpsb
out
adc
scas
dec
push
xchg
outsb
gs
je
lret
addb
jno
xor
test
stos
and
inc
daa
sbb
pop
adc
call
cs
lret
sahf
pop
adc
movsb
lea
push
mov
shrl
nop
adcl
jae
or
xor
lcall
sbb
int3
shl
dec
adc
addr16
add
xchg
test
scas
and
mov
inc
mov
xor
repnz
pushf
mov
and
movl
inc
scas
mov
sub
push
mov
in
lret
and
movsb
mov
fadds
or
sahf
rcr
mov
hlt
push
mov
cs
jle
adc
and
jge
fsubl
push
add
dec
out
xchg
or
stc
jo
adc
pop
jns
fistl
out
add
mov
bound
pushl
test
mov
jo
xchg
jp
std
lods
lret
out
rorb
mov
jbe
and
imul
in
std
popf
jle
mov
inc
mov
stos
je
xor
ret
jno
adc
jg
add
mov
mov
shrl
push
fildl
je
cmp
test
sub
mov
mov
sub
pop
hlt
repnz
xchg
repz
aaa
mov
repz
mov
pusha
cmpsl
pop
sbb
sbb
adc
mov
cs
xchg
xor
das
xor
lock
in
jp
dec
lret
test
js
stos
ds
pop
mov
cwtl
and
pop
jbe
pop
pop
mov
adc
lds
mov
jge
hlt
nop
outsl
adc
sbb
xor
push
jne
pop
imul
es
mov
adc
cwtl
jle
outsb
arpl
lret
bound
sbb
jmp
sub
ja
ljmp
in
jnp
xchg
and
inc
inc
aam
js
push
mov
push
test
lods
xor
pop
aas
in
ds
test
or
xor
ret
out
rolb
pusha
repnz
ja
lods
xor
mov
adc
jecxz
mov
orb
dec
inc
clc
shll
lock
sbb
and
jecxz
adc
and
push
mov
jno
jb
test
adc
jae
adc
push
dec
ljmp
cmp
inc
mov
aas
push
out
mov
imulb
sbbl
push
push
int
out
jne
pop
cmp
mov
jo
fmull
pop
outsl
jmp
fwait
mov
call
xchg
imul
push
dec
sub
sub
imul
rorl
test
push
stos
xchg
out
jne
xchg
subl
adc
dec
cmp
pop
cmp
fucomi
sbb
inc
pop
xor
mov
jecxz
pop
lcall
arpl
popa
call
mov
in
push
xor
add
outsb
mov
jo
aas
out
mov
jge
aaa
and
push
je
daa
xchg
mov
xor
shl
loope
dec
int
pop
mov
inc
in
mov
pusha
mov
mov
rcl
cs
push
out
nop
call
insl
pop
aas
ficoml
xchg
ret
hlt
daa
pop
pop
dec
sarb
jae
outsb
sbb
sbb
loopne
mov
fldl
xor
lds
pop
out
or
lret
push
mov
pop
add
inc
jp
push
nop
ds
xchg
add
pminub
aad
scas
or
push
or
orl
sub
xor
in
jge
ljmp
int3
cmpsb
sti
lock
add
mov
inc
push
push
les
inc
mov
sarl
pop
add
int3
mov
sub
test
loop
sbb
arpl
iret
je
push
or
push
jns
xchg
mov
shlb
xchg
sbb
add
and
jg
mov
jg
dec
cmpsl
dec
or
sub
fiadds
scas
mov
or
sbb
lock
pop
push
lret
adc
mov
stc
jbe
inc
pusha
shll
cmp
cmp
or
adc
push
inc
bound
icebp
fs
mov
ss
xchg
in
pop
cli
cmp
outsl
addl
pop
orb
and
jne
pop
fdiv
icebp
movsb
sub
popf
icebp
mov
mov
xchg
pop
movsb
popa
arpl
cmp
popf
fisubrl
mov
xchg
mov
and
hlt
dec
loopne
cli
mov
sub
fsubrs
sbb
mov
pusha
lret
adcl
mov
jmp
dec
cli
pop
push
push
sahf
jl
lock
lret
aam
stos
mull
repz
imul
repz
aam
sbb
fidivs
insl
cmp
cmpb
adc
call
lods
jecxz
fdivrs
movsl
icebp
jl
xlat
xlat
cmp
mov
cmpsb
mov
inc
ds
jg
push
mov
fildl
pop
pop
mov
lods
pop
xor
xor
pushl
pop
out
push
fadds
mov
lods
stos
cmpsb
and
ds
lods
cs
sub
pop
cs
cmp
imul
jl
out
push
or
xor
cli
mov
adc
outsl
test
push
adc
cmp
or
xchg
call
lock
sub
cmp
pusha
popf
mov
leave
pushf
jns
push
cld
ret
xor
lods
cmp
and
xlat
pushf
ss
dec
js
aas
sahf
ror
mov
rcll
dec
inc
pusha
out
mov
fs
adc
inc
out
outsb
and
imul
sbb
shrb
loope
ljmp
push
lcall
lret
in
mov
mov
push
shll
f2xm1
nop
xor
mov
push
icebp
scas
dec
aaa
xchg
ss
adc
xlat
jb
mov
rorl
inc
pop
rorl
mov
xchg
and
xorb
push
and
adc
pop
jns
or
xchg
int
jge
ja
mov
out
adc
pop
mov
das
push
adc
lret
test
adc
test
mov
xchg
fimuls
xchg
add
in
int
ret
addb
mov
imul
sbb
xor
aaa
je
fbstp
scas
mov
push
nop
adc
and
sahf
mov
aad
mov
ret
mov
cmp
cmpb
sub
jge
pop
loope
xchg
sti
cmp
fistpl
add
stc
in
lret
mov
xor
or
insb
push
aaa
or
and
push
ja
out
mov
frndint
inc
icebp
jns
cmp
and
xor
or
dec
cmp
clc
hlt
mov
xor
adc
jge
movsl
jno
or
mov
fnstenv
adc
pop
ljmp
jle
scas
leave
xchg
lea
mov
ret
pop
cmc
jle
mov
jno
pop
in
add
dec
cmp
push
cltd
std
sub
pop
sbb
loope
pop
cmp
addr16
fisubrl
ljmp
push
mov
je,pn
lock
jge
arpl
fs
dec
cld
dec
out
out
ljmp
pop
sub
push
xchg
andl
cmpsl
je
ds
dec
lcall
mov
cs
adc
pop
pop
mov
xchg
pop
inc
fistl
mov
sub
sti
cmpsl
xor
aad
int
in
mov
into
cmp
mov
enter
jnp
in
jl
in
push
enter
mov
jmp
into
xor
sbb
lds
add
pusha
jae
xor
xor
iret
jp
pop
or
lret
and
mov
jle
add
mov
fidivrl
icebp
aam
insb
and
jno
and
out
xor
xchg
inc
cmp
jno
sahf
faddl
cli
sbb
or
mov
pop
pop
adc
clc
mov
sahf
insb
ret
add
lahf
aad
std
cmpsl
aas
xor
and
das
jno
push
addr16
cltd
xchg
aam
hlt
shrb
and
sbb
cmpb
and
aad
jne
out
fucomp
jb
add
jl
cmp
insl
mov
cmp
xchg
mov
push
and
inc
mov
push
push
out
repz
dec
lds
movsb
ret
xchg
out
push
jno
jno
inc
xchg
popf
iret
out
dec
stos
lea
inc
bound
inc
fstl
inc
xor
dec
mov
dec
pop
pop
cmpsl
adc
mov
int3
cmp
lods
call
out
pusha
add
arpl
cmp
adc
sahf
outsb
cwtl
test
js
in
dec
ret
mov
into
push
and
insb
push
mov
lret
sbb
ret
mov
adc
mov
vmptrld
mov
and
bound
int3
fwait
pop
xorl
add
sub
sbbl
in
lods
jno
pop
mov
sbb
mov
fidivrl
lods
adc
jmp
enter
fidivl
and
jmp
mov
pop
clc
test
imul
dec
rcll
or
sub
xchg
scas
xchg
mov
aam
xlat
stc
scas
mov
fcmovnb
mov
pusha
dec
dec
inc
mov
out
add
nop
sub
xor
jecxz
adc
mov
std
jne,pt
ja
xchg
rcr
dec
push
js
insl
aad
dec
sbb
mov
in
or
inc
dec
adc
int3
sub
push
jae
pop
mov
jmp
xchg
inc
mov
ss
push
sbb
leave
xchg
lahf
push
jnp
stos
ret
lock
cli
aam
sbb
outsb
push
in
push
test
and
jnp
test
and
in
push
inc
pop
lahf
jbe
and
loopne
movsb
pop
mov
out
cwtl
jbe
dec
jl
sub
lods
dec
jl
add
xchg
jns
repz
xchg
mov
mov
out
inc
aas
pop
or
in
cli
enter
mov
dec
fnstsw
jne
and
push
xchg
mov
push
in
cmp
clc
cmpsl
xor
int
loope
sub
fst
scas
ds
jmp
push
inc
arpl
cmp
iret
cmp
add
jns
fxch
hlt
push
les
mov
popa
xchg
dec
xchg
push
jne
dec
jmp
icebp
push
pop
movsl
inc
loopne
mov
int
nopl
dec
mov
rcr
xor
sti
mov
dec
lret
push
mov
cmp
mov
mov
movsb
data16
imul
or
scas
inc
sbb
rorl
mov
pop
jmp
xlat
rcrl
xor
negl
cmp
enter
push
mov
pop
push
fwait
pushf
pop
inc
and
xor
out
stc
and
es
adc
rolb
dec
insl
mov
lret
in
xor
lret
sub
in
pop
es
mov
sub
sbb
pop
das
stos
pop
fsubrp
dec
xor
add
ret
rcll
push
add
and
fimull
mov
pop
subb
clc
adc
sub
push
js
outsb
xchg
mul
cli
lds
inc
dec
push
loop
jno
sub
sub
or
notb
mov
or
shr
rdtsc
inc
jns
sar
and
jle
ror
xchg
repnz
inc
sub
fadds
leave
stos
loope
test
dec
ljmp
push
jmp
fbstp
push
push
sarl
ja
inc
jnp
out
xlat
push
shrl
enter
jge
cld
enter
out
dec
jb
sbb
test
in
xlat
popa
rcrb
xchg
jne
cmp
add
insl
ret
push
lcall
notl
jns
sbb
test
jbe
mov
mov
cmp
and
test
sti
xor
mov
lods
push
in
mov
arpl
pop
mov
lods
stc
sti
dec
cmp
jo
dec
inc
inc
sub
push
jl
dec
jo
inc
dec
daa
xchg
xchg
dec
sahf
and
inc
adc
enter
mov
fwait
push
xchg
jge
mov
cmp
cmpsb
lret
pop
out
cmp
jne
test
pop
outsl
mov
filds
push
mov
adc
pop
sub
lret
mov
movsb
movsl
repnz
stc
sti
lret
sbb
adc
or
pushf
jge
sub
mov
adc
sbb
stc
sub
int
mov
popf
dec
mov
dec
push
int
inc
pop
sub
sahf
repz
stos
dec
insb
inc
jp
mov
xlat
mov
sub
adc
cmp
fstps
mov
fstl
add
inc
test
jae
cmp
mov
mov
les
insl
xor
mov
push
adc
gs
cwtl
dec
dec
sarb
add
and
iret
push
push
lret
jb
xchg
cld
scas
mov
mov
ret
push
test
sub
pop
xchg
push
xchg
sbb
cmp
jge
or
pop
pop
adc
pop
cwtl
leave
stc
mov
rorl
je
das
dec
mov
mov
jmp
test
jb
sarl
shr
insb
inc
xor
add
aam
pusha
mov
cmpsb
adc
mov
popf
or
add
sub
xchg
mov
adc
ss
push
xchg
adc
fbstp
ljmp
call
loopne
test
xor
pop
imul
mov
xor
iret
pop
stos
and
sahf
jo
outsl
and
add
cmp
dec
mov
dec
cmc
jnp
outsl
add
iret
inc
xor
add
stos
pop
int3
loop
pop
daa
sbb
cld
hlt
pop
cli
cmp
push
andb
xchg
les
jnp
or
sub
add
inc
lcall
in
in
add
add
flds
inc
dec
adcb
mov
add
pop
jne
and
scas
push
jns
fisttpll
push
pop
addb
sahf
jno
cli
mov
pop
ljmp
pop
ror
sbb
rcr
jmp
cli
jno
cmc
pop
sti
call
dec
or
pop
into
push
push
cmp
xchg
repz
out
or
insb
adc
xchg
cmp
jnp
mov
je
pushl
inc
in
outsl
dec
lock
cmp
inc
lods
pop
xor
and
xchg
data16
xchg
pop
cwtl
xchg
call
and
jo
mov
jns
xchg
call
push
lods
add
test
sub
aad
xor
stos
adc
ja
sub
mov
out
xchg
out
fisubrl
pop
pop
mov
popa
out
je
andl
adc
push
and
push
mov
test
repz
scas
popa
xor
mov
adc
and
push
movsb
in
and
sbb
sarl
dec
sbb
cmc
out
int3
adc
decl
add
cmpl
mov
inc
xor
sub
dec
hlt
cmpsl
ret
pop
sahf
icebp
inc
les
in
sub
out
add
mov
repz
neg
adc
fimull
push
inc
dec
mov
das
mov
ror
cld
nop
or
and
nop
or
stos
add
xor
jmp
into
inc
adc
test
sub
push
ds
push
test
mov
dec
adc
inc
inc
ds
test
sbb
std
loop
fsubr
and
jmp
popa
insb
cmpb
leave
and
fs
mov
sub
xor
outsl
inc
ret
mov
inc
add
movsb
xchg
mov
push
cmp
ret
add
pop
dec
xchg
mov
xchg
cmp
lahf
push
push
or
repnz
call
shrb
xchg
sbb
out
subl
loop
in
rolb
mov
sbb
sbb
pop
daa
sbb
push
jl
lock
idivl
imulb
fs
mov
fldcw
adc
hlt
int
pushf
gs
fwait
mov
pusha
add
neg
sbb
rorl
inc
loop
xlat
jne
sbb
fwait
cli
popf
pop
fisubl
mov
dec
sbb
ljmp
adc
add
and
inc
iret
adc
sarl
js
insb
mov
je
and
jp
shll
test
jb
sub
fwait
popf
inc
lea
cmp
lock
jno
filds
jo
setno
dec
sarb
push
mov
mov
inc
negl
add
xchg
jae
xchg
shll
out
fsubl
lods
loopne
daa
lret
roll
pushf
xchg
sub
int3
mov
js
jg
loope
mov
sub
pop
jnp
js
pop
dec
out
jl
std
adcl
mov
mov
outsl
sub
or
jl
add
roll
xchg
push
out
stos
mov
shll
cmp
lds
shll
stos
jae
jmp
sbb
insb
out
call
stos
fisttpl
cmp
cmp
jp
stc
push
mov
mov
cld
fbstp
jb
into
pop
xor
push
lds
pop
dec
ja
jne
mov
dec
mov
inc
cmp
pop
push
xor
into
cmpsb
jns
mov
outsl
sbb
sbb
push
hlt
nop
ljmp
fsubrl
jl
shll
cmpsl
inc
xchg
cmpsl
test
orb
movsb
fildl
dec
jg
test
hlt
xor
subl
ret
mov
adc
pop
xchg
out
jb
ffreep
adc
mov
iretw
cltd
sbb
sub
or
lahf
pop
daa
push
sub
push
hlt
jg
repnz
insb
lods
push
cmp
add
mov
jne
aam
jecxz
icebp
popf
xor
std
mov
adc
push
sbb
push
lods
add
mov
jae
fildll
mov
nop
inc
cmp
std
xchg
mov
or
popa
and
mov
ljmp
stos
dec
subb
cmp
push
fxtract
push
jle
test
rcrb
sub
pop
adc
arpl
mov
mov
inc
xchg
mov
xorb
cmp
mov
jnp
dec
add
cmp
or
inc
pop
pop
daa
enter
and
outsl
push
ret
xchg
dec
or
jne
shlb
mov
add
sbb
cltd
fstl
rolb
out
aam
leave
leave
hlt
push
cwtl
push
loope
fldt
jmp
inc
mov
or
cmp
mov
pop
mov
jbe
aam
push
mov
clc
add
cltd
sub
push
mov
mov
xchg
dec
das
mov
stos
inc
test
cwtl
test
fdivr
mov
imul
jbe
enter
jnp
fisubrl
ds
dec
stos
inc
sbb
out
pop
test
mov
add
jne
daa
adc
out
mov
jnp
out
loopne
or
push
aad
dec
push
mov
outsb
sub
leave
dec
mov
sbb
xchg
push
lock
insl
pop
icebp
xchg
pop
add
add
jmp
push
ja
xor
rolb
hlt
lea
lea
inc
add
fwait
jns
add
rcr
out
into
and
xor
dec
adc
rclb
and
sbb
or
add
jae
add
icebp
xorl
iret
or
xor
jne
add
jbe
fptan
in
out
pop
cmpsl
or
mov
ret
or
cmp
xchg
divb
ficomps
fcomps
mov
imul
frstor
cmc
or
mov
xchg
cltd
mov
jg
push
and
sbb
fwait
aad
sbb
adc
mov
fistl
insb
data16
add
jbe
mov
sub
ljmp
cmp
mov
int3
xor
xchg
xor
aaa
add
vpsubusb
in
jg
ds
cmpsl
push
and
ss
fcom
iret
loope
or
fildll
mov
dec
mov
ret
test
sbb
adc
mov
sbb
pop
adc
dec
rolb
ss
std
dec
out
cli
das
fstps
into
jne
xchg
pop
lods
test
fcomip
cmp
cs
lods
leave
inc
push
ret
sbb
sub
dec
and
scas
mov
pop
jnp
sti
cmp
test
inc
mov
cmp
pop
lock
mov
enter
push
mov
js
pop
addl
rol
ss
push
mov
aaa
push
popf
mov
mov
mov
bound
lea
out
into
aas
insb
or
and
or
xchg
inc
orl
pop
out
fidivrl
arpl
gs
push
xor
mov
jmp
popa
fwait
adc
mov
sahf
loope
cmpb
jp
outsl
adcb
flds
addr16
push
xor
into
or
aad
dec
push
dec
inc
in
aad
pop
push
clc
aam
fiadds
out
inc
loopne
icebp
dec
in
mov
outsb
mov
and
xchg
or
pushf
jle
mov
mov
scas
loopne
mov
iret
fisttpl
addb
fcomi
ret
shll
cld
cmpb
inc
sarb
cli
bound
clc
loop
sbb
jp
or
xor
addr16
imul
insb
add
xor
pop
testb
mov
pop
aas
mov
xor
ret
pop
xor
clc
jle
sbb
xor
scas
std
sti
mov
pop
xor
push
push
insl
lds
pop
fwait
inc
pop
add
xor
in
push
jnp,pt
or
jl
cmp
xor
jecxz
insl
dec
adc
jl
arpl
sbb
loope
jo
or
and
or
test
or
xor
pop
fisubs
lea
sti
imul
jno
add
in
mov
js
loope
mov
and
icebp
loop
adc
aaa
popf
inc
fimuls
or
jae
stc
je
pop
inc
mov
stc
testb
push
jns
loop
pop
leave
mov
push
pusha
and
stos
std
inc
mov
fnstcw
sarb
das
mov
dec
inc
out
dec
push
les
dec
stos
jns
lds
sbb
out
jmp
std
or
xor
or
aam
or
xor
repz
xchg
dec
dec
cmp
outsb
xchg
jl
out
fdivl
jnp
lods
mov
ljmp
sbbl
in
mov
sti
lods
orb
and
or
das
aad
aam
mov
mov
xchg
out
push
push
imul
mov
imul
divl
maskmovq
idivl
ds
pop
inc
dec
rcrl
mov
mov
sbb
and
popa
pop
dec
or
inc
cmc
xchg
mov
je
sub
pop
data16
push
or
movnti
clc
sub
inc
or
xchg
pop
movsl
adc
out
movsl
inc
mov
lfs
xchg
mov
xchg
jno
mov
loope
loop
xchg
cli
lods
cs
jl
out
fsubrl
sti
stos
inc
lods
push
movb
cmp
xchg
or
stos
or
mov
xchg
outsb
test
mov
ljmp
and
fstps
iret
orb
mov
sti
cmc
or
xchg
aas
pop
mov
xor
mov
jg
mov
mov
push
and
push
imul
pop
and
hlt
jae
jg
add
aaa
and
jecxz
mov
adc
ret
push
faddl
aam
dec
and
sub
add
test
or
adc
xor
cmpsl
stos
fsubrp
cmp
xor
jge
lods
add
sbb
icebp
sbb
leave
stos
sub
inc
adc
mov
ret
cltd
pusha
outsl
stos
sub
xchg
out
sbb
fwait
add
jno
mov
mov
push
adc
loopne
aaa
arpl
sti
or
pop
mov
fadd
push
out
out
add
jns
imul
mov
dec
clc
rcrl
fidivrs
xlat
push
aam
dec
xchg
sbb
pop
shr
cmp
inc
shr
mov
mov
sti
mulb
popa
pop
stos
mov
dec
inc
mov
je
fildl
xchg
push
adc
lea
sub
popf
ret
push
aaa
aas
push
lods
mov
mov
inc
popf
lret
push
fidivs
mov
out
mov
sbb
mov
ds
push
imul
daa
xor
dec
movl
fcmovnu
inc
repz
xor
test
mov
lods
push
xchg
int
add
inc
jnp
cwtl
pushf
sub
jnp
jns
ret
bound
fistpll
mov
fwait
lods
mov
adc
andb
push
jnp
stc
xchg
mov
fdivrs
lea
popf
mov
leave
mov
ror
das
sarb
test
sbb
sbb
mov
lea
dec
mov
add
mov
pop
lret
cltd
mov
sub
xchg
pop
xlat
and
lahf
jge
test
fbstp
inc
lret
rolb
sbb
insb
mov
xor
mov
xorl
mov
ret
adc
add
imul
or
lods
cmp
xor
aas
clc
ja
or
in
adc
test
cld
or
pop
mov
pop
or
inc
out
pause
cmp
jae
jmp
xor
adc
xchg
clc
popf
cli
xor
xor
lahf
sub
in
push
inc
and
mov
sbb
mov
jb
int
push
xor
sti
shlb
push
cmc
or
sub
dec
mov
imul
push
popa
mov
jecxz
jo
sub
stos
sahf
rcll
cmp
jbe
addl
xchg
jecxz
and
cmp
icebp
mov
int
mov
fsubrl
mov
aas
cmpb
adc
push
cld
dec
btc
mov
mov
loopne
lods
repnz
out
fidivrs
or
xor
push
dec
imul
sti
jge
lods
jbe
and
sub
cmp
mov
fldt
inc
lcall
lahf
lcall
inc
xchg
push
push
rol
lock
ja
rcl
les
loopne
in
adc
sbb
sub
test
and
lock
sub
cs
jno
fs
aam
leave
stc
and
jecxz
lcall
test
sub
inc
pop
mov
ds
jmp
pop
ja
pop
shrl
mov
lock
loope
sub
or
lock
enter
outsl
flds
jle
xor
pop
addr16
js
int
cmp
sbb
jne
lret
adc
je
jbe
inc
out
cmpsb
adc
lret
fisttpl
push
icebp
cmp
push
xor
shr
push
xor
ret
popf
push
rol
xchg
xor
mov
push
gs
scas
push
cwtl
lods
push
mov
popa
scas
xchg
jb
add
inc
cmp
sbb
jno
mov
fwait
jge
or
std
cmp
int3
xor
mov
push
cmp
adc
push
loope
inc
popa
pop
inc
push
les
cmpsl
xchg
fwait
and
add
add
sbb
lret
mov
out
shlb
mov
popa
mov
dec
aas
jbe
fdivl
subl
lock
fdivl
lea
xchg
shl
jmp
adc
push
inc
add
add
out
out
loop
inc
fldt
adc
fwait
cmp
jae
fcompl
sbb
addr16
in
lret
xor
mov
inc
imulb
sbb
cmp
pcmpeqb
lds
and
mov
push
inc
inc
bound
sti
jno
in
aam
call
sub
lods
cmp
js
out
mov
sub
mov
out
and
ss
mov
shll
push
movsl
ret
jnp
ljmp
fs
xchg
cmpl
adcb
push
mov
movsl
popa
dec
daa
movsb
push
mov
mov
loop
loope
mov
mov
pop
inc
lds
aad
jmp
out
in
nopl
lods
in
ja
in
mov
mov
ja
xchg
adc
insb
fimuls
dec
ss
ljmp
movsl
cmp
out
and
push
hlt
xchg
sbb
out
sub
mov
or
iret
stos
test
mov
push
sbb
les
mov
loope
test
add
push
pop
jno
fs
mov
adc
push
lret
ss
lods
mov
adc
arpl
push
sarb
sbb
add
in
aaa
arpl
mov
out
jbe
lret
ret
push
roll
push
push
mov
ret
fucomi
jmp
lds
xor
sar
ret
test
jge
jae
das
test
mov
sbb
jmp
push
orb
rcl
loopne
subb
sti
cltd
mov
mov
js
inc
mov
cmp
mov
call
imulb
aad
jge
repnz
xlat
xor
sarb
push
xchg
xchg
xchg
out
jno
cmp
cmpsb
sbb
data16
mov
mov
loop
insb
inc
movsl
push
mov
pusha
push
fdivrs
cmc
inc
mov
add
scas
lods
dec
pop
int
and
loope
push
std
imul
clc
imul
mov
or
pop
sbb
mov
lret
jmp
fs
fists
test
push
push
subl
and
clc
popf
outsl
xchg
cmp
adc
jb
fstpt
cld
jae
inc
data16
xorl
jmp
enter
mov
jnp
add
jmp
push
cmp
imul
dec
mov
sub
shrl
repnz
sbb
or
push
lods
divl
cwtl
inc
xchg
xchg
mov
cld
cwtl
in
sbb
loopne
sub
push
call
popf
fstp
mov
sub
mov
inc
outsl
mov
loope
mov
fchs
xor
clc
pop
add
das
insb
inc
adc
dec
pop
jmp
je
and
xchg
adc
and
and
roll
std
mov
cmp
mov
xchg
jns
cmp
sub
pop
and
sbb
popa
fdivs
pop
and
adc
pop
lret
sti
sub
sub
ss
pop
add
xlat
push
andb
push
imul
sub
popa
js
addr16
lahf
stos
inc
scas
rcr
ja
dec
ljmp
mov
dec
lods
mov
enter
jecxz
mov
ds
pop
paddb
pop
f2xm1
ss
in
inc
and
sub
std
adc
dec
aas
cli
mov
pop
mov
adc
add
pop
negb
ja
call
loopne
xchg
js
and
sub
imulb
pushf
and
stos
xor
mov
mov
repz
inc
je
ljmp
in
std
dec
inc
fdivrp
add
and
jae
adc
mov
cmpsb
andl
push
push
mov
rcrb
pusha
ret
pop
les
stos
lahf
stos
insl
call
dec
scas
imul
add
push
sbb
mov
insl
aam
stc
mov
sbb
out
repnz
cltd
das
or
xlat
push
scas
add
sub
jno
enter
add
imul
arpl
or
idivb
loop
ljmp
xor
mov
ja
es
jae
repnz
and
stos
loopne
dec
cmpsl
in
aas
dec
pop
jp
flds
ja
inc
inc
popf
je
dec
and
push
push
push
adc
bound
mov
fsts
xchg
je
mov
jno
adc
add
lds
jge
xchg
mov
testl
mov
xchg
xchg
add
mov
add
inc
out
aas
out
gs
jmp
dec
adc
push
daa
cmc
fsubl
pop
sbb
and
lret
jl
test
inc
jmp
rcrb
insl
adc
dec
sti
mov
inc
jnp
fstps
jmp
add
fists
ficoml
jnp
sbb
out
out
xor
pop
mov
loope
push
int3
xchg
das
movsb
outsl
loope
lods
jo
xchg
popa
pop
cmp
jns
ret
popa
aaa
sub
out
ds
xor
shl
repnz
pop
inc
test
decl
mov
xchg
mov
inc
out
xor
cmp
aaa
sahf
adcl
mov
add
cmp
fucom
dec
xlat
imul
iret
cmp
icebp
jne
ljmp
mov
decl
sub
out
sub
push
xchg
jae
into
lods
insl
sub
mov
jge
dec
cmp
push
push
or
lcall
mov
inc
mov
cwtl
pop
popl
aad
in
mov
mov
insb
test
xor
cmp
add
jbe
and
sbb
xor
out
add
shrb
mov
inc
jmp
mov
xchg
push
push
sti
cs
mov
sbb
mov
fucomi
xchg
cmp
cmp
xlat
jecxz
mov
movsl
mov
jmp
xor
int3
inc
loope
xchg
in
pop
aas
nop
fisttpll
sbb
push
mov
mov
xor
mov
cmp
pop
add
cmp
mov
outsl
sarb
xor
mov
cmp
dec
xlat
loope
aas
jg
jge
in
xor
cmp
das
dec
jne
xchg
cld
sub
cmp
adc
mov
push
repz
shlb
mov
add
into
jae
jmp
pop
leave
push
sbb
stos
jg
add
imul
add
fadds
repz
bound
sti
xor
jb
adc
iret
in
shlb
add
dec
dec
mov
xchg
ds
lcall
rorl
push
out
dec
push
xor
pop
jns
dec
and
pop
test
push
pop
cld
mov
xor
int
das
mov
push
push
sti
mov
jecxz
mov
mov
arpl
and
sbb
add
push
pop
inc
loop
jmp
lret
mov
mov
out
subb
mov
add
sahf
pop
jnp
test
pop
bound
js
fs
inc
push
cltd
dec
and
pop
dec
pop
and
cli
mov
pop
into
rcpps
cmp
adc
sahf
inc
das
cmc
cmpsl
xchg
mov
cmp
scas
out
mov
xchg
cmp
frstor
push
jg
sub
mov
mov
ja
add
loope
adc
dec
jne
fucom
lahf
cmp
push
jle
pop
test
pop
jns
sub
cmpsb
je
cltd
call
ljmp
lret
pop
sub
dec
leave
ja
ret
fisttps
subb
or
push
xor
dec
add
in
push
add
jmp
or
daa
xor
mov
mov
or
lahf
in
scas
cmp
in
fisubrs
xchg
fidivl
mov
ret
popa
gs
popa
mov
ds
mov
bound
sar
dec
push
lock
push
and
push
and
imul
sub
mov
les
leave
aas
bound
xbegin
stos
fwait
pop
loopne
popa
sub
lret
mov
inc
pop
fadds
scas
ds
pushf
leave
dec
push
xchg
enter
sahf
fistpl
scas
cmp
icebp
adc
adc
mov
xor
xorl
enter
fimuls
inc
clc
cmc
ret
aas
cmp
or
dec
imul
sbb
outsl
scas
cmp
lods
es
pop
push
adc
fildl
fdivr
pop
shl
or
hlt
cmp
lods
popa
mov
xor
std
hlt
pop
adc
insl
push
jp
jg
push
jecxz
mov
das
in
bound
das
xor
ljmp
mov
rep
push
cmp
push
iret
mov
add
and
stc
mov
and
divl
adc
adc
daa
movsb
xor
mov
cld
mov
add
mov
mov
mov
into
push
bound
enter
sarb
es
xchg
mov
in
or
jp
lods
lods
pop
xchg
dec
imul
adc
jno
xor
arpl
xor
shlb
loop
pop
add
or
add
sti
bound
insb
xchg
push
xchg
in
xchg
ds
and
scas
daa
xchg
pop
arpl
sub
fs
int3
jb
and
pop
pop
bound
jno
jns
enter
cld
iret
sub
adc
loopew
and
cmp
not
and
and
xchg
mov
and
leave
cmp
or
lret
jle
mov
add
push
xchg
sub
adc
cmp
jl
jns
pop
jo
lret
enter
out
inc
fmull
sahf
enter
or
jge
push
sbb
or
add
jnp
mov
in
jge
dec
jmp
pop
pop
int
inc
pop
test
lcall
into
sub
test
cmp
mov
jle
sub
sub
or
fdivrl
mov
ret
dec
mov
sbb
inc
enter
inc
xchg
push
outsl
mov
addl
dec
test
rcl
shl
pop
dec
xor
cmc
push
xor
lea
add
xor
aaa
mov
addr16
mov
and
mov
xchg
fcoml
std
inc
and
pop
jle
push
and
ljmp
repnz
push
adc
mov
cmpsl
es
push
and
jecxz
ds
scas
mov
shlb
and
iret
outsb
pop
cmp
hlt
outsw
movsb
cld
ret
in
adc
out
aaa
mov
lahf
bound
fs
and
sub
iret
sarl
mov
out
rolb
pusha
insb
cmpsl
push
lea
sub
sbb
addl
hlt
adc
fxch
test
cwtl
mov
xchg
mov
imul
mov
sbb
lret
das
jge
cmp
mov
mov
push
mov
adc
out
jbe
mov
adc
mov
js
hlt
pop
lret
sub
nop
movsb
xchg
and
xchg
in
mov
ss
mov
dec
xchg
std
insl
jmp
add
lods
add
loopne
mov
push
gs
fisttpll
iret
loopne
sub
xchg
sbb
je
cmc
movsl
lret
or
mov
clc
cld
js
sub
sub
jg
data16
dec
sbb
add
fsubs
mov
scas
lods
pop
cmp
cmc
in
loop
test
lods
in
and
jno
sbb
xor
mov
sti
out
mov
xor
push
test
flds
pop
lret
jnp
nop
mov
cmpsl
adc
jmp
dec
xor
notb
add
push
hlt
jae
je
pop
stc
sub
push
sahf
pop
loopne
loopne
sarb
mov
xor
push
popf
or
jp
out
adc
mov
jle
mov
leave
nop
xchg
movsb
sarb
inc
inc
mov
loop
add
inc
les
cmp
dec
int
sbb
mov
mov
xchg
stos
jl
jae
xchg
sahf
mov
aas
sbb
cltd
aaa
mov
test
jb
shll
in
jnp
fisubrl
inc
or
test
arpl
scas
jae
sub
iret
das
lcall
or
faddl
outsl
sti
push
rolb
sbb
and
int
jae
xor
setbe
sbbl
js
inc
push
psllq
sbb
das
xchg
call
pusha
or
das
mov
cmpsl
mov
xchg
jno
or
dec
daa
jge
decb
pop
movsb
mov
stc
xlat
pop
mov
bound
lret
mov
sbb
mov
jb
push
dec
jnp
push
adc
adc
mov
pop
clc
add
rorb
mov
les
gs
jecxz
insb
insb
pop
loopne
popf
add
adc
xchg
cltd
push
cmp
mov
pusha
add
mov
pop
cmp
ret
popf
adc
dec
out
mov
repz
push
inc
jp
cli
inc
inc
xor
mov
dec
pushf
and
loope
out
cmpsl
repz
sub
les
xlat
sti
pop
push
ret
arpl
aas
mov
cmpsl
sbb
aad
lahf
add
fisttps
pop
xchg
js
clc
sub
cwtl
ljmp
lods
scas
loope
jl
jne
incb
adc
outsl
fadds
pop
notl
int
loop
repnz
mov
dec
push
mov
xor
rolb
pop
ja
icebp
and
sarb
pop
push
js
push
inc
test
sbb
mov
mov
stc
pop
int3
inc
in
test
mov
add
outsb
xchg
xchg
daa
add
dec
ja
lcall
imul
scas
mov
movsl
jne
sbb
xchg
fisttpll
nop
sub
insb
dec
mov
loopne
outsl
ret
inc
addr16
leave
stos
mov
bndcl
es
sti
mov
test
mov
push
and
loopne
test
dec
xchg
dec
xchg
out
daa
les
arpl
test
inc
rcr
daa
cmp
add
in
push
pop
ret
test
dec
pop
js
jo
mov
std
dec
adc
movzwl
and
cmp
adc
push
in
ret
cmpsl
mov
xchg
sub
lods
test
imul
xor
clc
lret
das
xchg
or
call
stos
shlb
loope
stc
pop
mov
icebp
jo
pop
lods
sti
imul
pop
jge
mov
and
imul
imul
in
jl
in
ljmp
lock
popa
decb
mov
mov
nop
xchg
mov
ja
addr16
icebp
push
pop
xchg
or
stos
adc
sub
mov
jmp
mov
mov
in
leave
movsb
scas
cmp
insb
stos
test
mov
mov
or
jmp
mov
in
xchg
jecxz
xchg
mov
sub
jmp
jp
nop
sahf
add
lret
pop
inc
loop
addr16
xor
aam
jno
stos
es
test
and
outsl
jl
rclb
xchg
add
inc
js
add
stos
cmp
xor
jge
jo
mov
dec
in
inc
mov
adc
lods
stos
ss
aaa
int3
fcmovnb
mov
aam
sbb
ljmp
mov
scas
and
and
jl
push
mov
imul
scas
sbb
cmp
add
xchg
insb
fs
roll
imul
aam
insl
sbb
jmp
loop
inc
jns
sub
xor
cmpsb
test
pop
icebp
pop
cmpsb
push
call
xor
and
cmp
cmp
sbb
gs
enter
lods
mov
pop
ficompl
enter
jecxz
mov
popa
add
cmp
addr16
cmc
pop
sub
lret
test
notl
adcb
mov
pop
rcl
jo
and
std
dec
cmp
jno
shlb
jo
xchg
cmp
lret
pop
adc
aam
pop
adc
mov
or
xchg
add
cmc
mov
les
pop
sbb
xor
pop
adc
jge
mov
sbb
loopne
ds
sub
push
out
mov
repnz
clc
lods
pop
xchg
ljmp
cmpsl
xor
mov
push
repz
adc
shlb
sahf
in
add
sbb
ss
scas
dec
cmp
jo
cmpsb
mov
push
insl
cmp
mov
mov
test
pop
inc
jmp
jno
add
dec
stos
sub
cmp
roll
leave
divl
pop
loope
sbb
xchg
xorb
mov
push
into
nop
std
shr
cwtl
lcall
stos
or
inc
or
bound
mov
cmpsl
leave
adc
enter
lea
sub
imul
dec
arpl
addb
mov
sbb
add
test
into
insb
lds
mov
pop
or
ret
mov
les
or
mov
pop
inc
or
sub
jae
pop
sbb
fists
dec
pop
scas
sub
mov
push
or
pop
shll
push
jecxz
pop
mov
mov
jne
xchg
ss
mov
mov
cmp
push
daa
add
gs
mov
aaa
push
ds
push
out
mov
fwait
fwait
or
test
cmp
pop
push
sub
insb
sti
movsl
fdivs
jno
add
int
xor
xor
add
outsl
and
dec
notl
inc
push
cltd
addr16
or
stos
mov
jbe
xchg
cld
cmc
sub
xchg
pop
xchg
pop
jnp
sbb
pusha
rcll
push
enter
sbb
push
pop
pop
cmpsb
mull
push
jmp
adc
cmp
lock
push
sbb
mov
mov
jmp
mov
inc
pop
mov
mov
lret
sub
scas
dec
and
mov
aad
or
lahf
mov
cltd
cmp
push
jne
mov
outsl
or
cs
mov
stos
add
int3
mov
in
add
nop
arpl
xchg
jge
mov
add
fwait
sahf
pop
cmp
test
jmp
jmp
xchg
push
or
int3
dec
push
popf
lret
mov
jl
mov
mov
or
adc
mov
and
pxor
add
add
outsl
or
jle
push
pop
and
dec
jecxz
inc
xor
shll
jge
xchg
add
inc
push
mov
testl
popa
call
pop
add
sub
out
outsl
scas
jp
cmc
test
mov
push
and
mov
add
les
popa
adc
lods
pop
movsl
push
mov
adc
leave
int
add
sarb
push
sub
fstl
pop
adc
push
or
test
mov
and
test
or
mov
inc
in
repnz
dec
sub
daa
clc
lahf
cmp
gs
add
out
stc
loopne
push
push
popf
fisubrl
fucomi
pop
add
int
das
cmp
add
cmp
pop
into
leave
rcrb
adc
nop
gs
adc
mov
dec
fs
or
stc
adc
sbb
movsb
out
int3
sub
repz
pop
xor
mov
jbe
popa
nop
int
loop
cwtl
jb
push
push
fimull
inc
jmp
stos
mov
lock
add
adc
ret
xchg
dec
push
in
roll
inc
sbb
outsb
cmp
enter
mov
outsb
ret
ret
jle
in
insb
adc
xchg
mov
and
lods
push
fdivl
mull
adc
cmc
mov
xchg
clc
repz
inc
ds
test
pmaddwd
insb
cmp
add
xchg
fcmovne
gs
sti
xor
mov
adc
add
gs
jbe
fisttps
and
testl
or
call
negl
lods
push
bound
js
adc
std
dec
adc
iret
mov
mov
add
shl
dec
cmpsl
pop
inc
push
aad
rolb
add
inc
push
andb
stos
cld
push
sub
test
fwait
stc
mov
xchg
inc
movsl
mov
and
xchg
stos
lds
pop
jne
test
sbb
std
mov
jg
bound
sti
insb
mov
shll
jo
inc
std
enter
xchg
leave
sub
mov
sub
xchg
add
addr16
in
mov
cmpsb
jp
leave
dec
cmp
cld
and
jmp
push
clc
xor
jp
imul
cltd
mov
dec
lahf
insb
ret
jl
push
jp
fsubrl
aad
dec
and
and
scas
and
cmp
adc
xorl
pop
std
mov
cmpsb
push
pop
or
mov
cli
testl
in
rdtsc
ljmp
scas
sub
mov
mov
fisttpll
mov
gs
sti
push
cmpsl
lret
icebp
adc
jge
ljmp
ds
cmpsl
xchg
and
xor
shlb
sub
inc
out
insb
fld
and
pop
add
imul
jno
loop
inc
adc
jl
xor
mov
ret
std
insb
cwtl
lods
mov
cwtl
lds
repz
lcall
es
sub
xchg
loope
mov
mov
mov
mov
and
pop
lods
push
xchg
mov
push
add
push
imul
cmp
das
push
and
fstl
xor
xchg
jno
ret
push
push
fs
mov
pop
cs
cltd
sar
mov
lea
adc
rorl
xchg
int3
sub
dec
mov
std
mov
test
jne
push
adc
repnz
pop
mov
xchg
fstpl
ljmp
xchg
and
out
gs
sub
andb
les
leave
xchg
ljmp
lea
cmp
cmp
inc
pop
or
push
jmp
xchg
sbb
in
lock
jne
xchg
xchg
aas
out
xor
push
cmp
pop
das
jne
rcl
movsl
mov
xchg
push
loop
push
test
hlt
fwait
ljmp
add
jns
mov
daa
aaa
rcrl
sub
jnp
push
jbe
int3
push
mull
outsb
dec
mov
stos
int
stc
add
dec
sub
vmovaps
mov
xchg
sub
dec
out
xor
jmp
daa
js
das
aad
je
push
xor
add
out
mov
add
hlt
repnz
jge
cmp
test
dec
jbe
push
add
xlat
fbld
adc
xchg
movsl
jne
es
mov
xchg
ror
int
or
jmp
aas
ret
shl
and
lds
das
adc
sbbl
sbb
shlb
jb
int3
ljmp
in
test
rcrl
push
nop
mov
aad
in
cmpsb
inc
sbb
cltd
xor
jl
inc
cmp
sbb
jg
leave
xor
sub
rol
fnstenv
outsb
xchg
negl
sub
stos
sbb
xchg
pop
adc
arpl
adc
mov
xchg
and
out
sub
mov
inc
mov
xchg
jno
and
mov
in
mov
call
dec
es
inc
mov
cs
lret
ret
cmpsb
push
push
sub
jnp
jns
sub
movsl
loop
and
adc
cwtl
dec
pop
pop
in
les
mov
dec
in
push
pop
cmp
push
cmp
mov
movsb
jl
xor
mov
les
mov
jecxz
orb
jo
jno
aad
jecxz
mov
lret
mov
jb
mov
or
inc
aad
xchg
aam
repnz
mov
sub
repnz
jnp
cmpsb
rcrl
lret
adc
sbb
adc
sub
mov
mov
loopne
cwtl
push
fdivl
xchg
scas
in
dec
add
sub
pop
mov
mov
pop
jg
ja
hlt
xchg
mov
subl
pusha
daa
push
mov
cwtl
loopne
xchg
leave
ret
fwait
mov
cmp
adc
js
mov
dec
and
mov
ja
repz
or
pop
mov
movsb
jmp
loope
jne
dec
or
jg
xor
in
mov
ret
xchg
fldenv
and
xchg
sub
mov
dec
shll
cmp
adc
std
lea
cmpsb
ret
mov
sahf
and
shlb
rcrb
fiadds
es
sub
jg
mov
sub
adc
mov
int3
mov
mov
ja
je
xchg
add
stc
rol
xchg
and
test
cmp
pop
adc
mov
sbb
popa
daa
mov
jo
fwait
cmp
and
fldt
stos
shlb
test
lret
inc
movsl
scas
test
xchg
jmp
mov
push
scas
dec
outsb
popf
jl
mov
faddp
movsl
stos
je
sbb
lret
cld
aas
and
pushf
jns
cmpsl
test
sbb
push
int3
push
loop
sbb
cs
enter
inc
mov
pushf
scas
scas
pusha
out
lea
das
pop
sub
fldl
into
mov
mov
clc
mov
jne
mov
push
ret
loope
icebp
and
mov
mov
mov
cwtl
rorl
mov
mov
and
insb
pop
leave
cmp
repnz
neg
repnz
sub
pop
push
cmpsb
jo
mov
out
out
in
imulb
xchg
ret
outsl
in
and
lods
rorb
or
dec
push
call
cmp
gs
adc
mov
ret
sub
sub
xchg
pop
add
scas
dec
push
dec
jae
jl
push
subl
in
mov
pop
stos
pop
jge
mov
mov
jmp
leave
jno
push
mov
mov
inc
lods
seto
push
jge
or
popa
xlat
xorl
data16
dec
filds
adcb
fbld
aaa
and
test
xchg
mov
stc
adc
pop
adc
inc
sub
std
mov
sarl
or
cmpb
sub
sti
push
fcmove
adc
enter
sbb
pop
jecxz
lcall
out
inc
or
in
ret
mov
mov
xor
jl
iret
mov
inc
fcom
lahf
pusha
mov
pop
lret
inc
ljmp
mov
fnsetpm(287
mov
mov
and
xchg
sbb
fwait
popf
jmp
lcall
fldcw
cmp
pop
int
popa
xchg
aas
add
dec
or
xchg
lret
aas
out
cmc
ja
adc
xor
scas
sbb
adc
bswap
inc
loopne
into
sub
in
fsub
in
mov
cmpsb
fimuls
pop
fs
mov
rclb
add
sub
outsb
mov
sahf
fcmove
xlat
movsb
stos
sbb
xchg
mov
or
stc
testb
scas
and
cld
add
xchg
jecxz
inc
jle
or
push
out
or
mov
ret
repnz
fwait
loope
sbb
cwtl
inc
mov
sub
xchg
xchg
push
mov
or
dec
fwait
out
lahf
xorl
mov
int
cmp
fs
aam
sub
mov
lock
js
jne
aaa
add
cmpsb
jmp
add
sbb
pop
xchg
mov
and
movsl
data16
fistpl
cmp
clc
and
sub
sahf
movsl
adc
mov
nop
jg
sbb
lock
data16
inc
lds
ljmp
imul
iret
jmp
jl
incb
popl
cld
push
insl
jp
jae
out
mov
lea
lea
imul
test
ljmp
sahf
mov
addb
push
je
adc
arpl
add
fistpl
bound
sub
cmpsl
jmp
insl
sub
popf
and
aaa
popf
and
cmp
inc
pop
add
dec
sbb
cmp
sub
xlat
xchg
outsb
test
je
jmp
popa
adc
loop
add
xor
cmovo
int
lcall
inc
out
mov
stc
sbb
xchg
popa
inc
inc
sbb
in
ds
cltd
cld
out
sbb
or
pusha
pop
punpckhdq
imul
pusha
int
gs
and
cmp
in
mov
mov
push
popf
les
lock
pop
mov
push
sbb
mov
or
pop
lods
int
cmp
shl
je
dec
popf
cmp
or
mov
outsl
cs
push
adc
cmpsb
fisubrl
pop
adc
mov
pop
mov
call
dec
adc
out
cmp
xchg
mov
out
cmc
fimull
xchg
in
mov
scas
call
fcompl
pop
xchg
mov
mov
inc
sar
fcmovnb
stos
mov
or
addr16
mov
in
cvtps2pi
adc
test
add
in
sahf
jge
or
stos
psrld
std
lahf
inc
cmc
xchg
jno
popf
and
ljmp
mov
out
imul
inc
mov
jb
inc
jno
mov
jl
aad
fildll
push
cltd
push
idivb
jp
es
sbb
aad
out
stc
stos
subb
adc
test
lods
xor
and
cmp
jg
add
push
dec
imul
xchg
enter
xor
lds
jmp
and
jmp
dec
scas
out
stc
aaa
jp
test
enter
cwtl
pop
sbb
pop
xor
test
in
aam
sub
dec
xchg
mov
xchg
and
lahf
push
enter
out
push
or
call
jle
mov
ds
pop
movsb
and
mov
ja
aam
and
xchg
adcl
and
lods
ldmxcsr
xchg
cmpsl
fnstsw
ss
jge
fstps
lcall
data16
xorl
lods
adc
jns
test
loopne
repz
and
or
arpl
fld
add
mov
cmp
jae
stos
lds
idiv
xchg
test
xchg
dec
mov
ficoms
mov
push
mov
hlt
sti
fistpl
dec
pop
sub
fcoml
pop
jge
es
fmul
sbb
mov
insb
fistpll
imul
in
pop
pop
idiv
test
cli
or
lea
or
mov
mov
sub
jecxz
lods
cltd
mov
out
mov
xchg
addl
push
pop
ds
sti
nop
ljmp
es
mov
xchg
pop
js
andb
adc
dec
lahf
cltd
test
mov
mov
sarb
std
ds
call
je
test
push
cmpsl
out
mov
sahf
gs
mov
fmuls
outsl
orl
dec
xchg
pusha
cmp
bound
push
das
lcall
cmc
std
fsubrs
add
jg
enter
dec
jl
jp
mov
in
sub
clc
inc
aas
sub
xchg
test
popa
test
or
add
cwtl
or
pop
mov
jl
cs
loop
inc
mov
mov
mov
mov
sub
loopne
cmp
adc
mov
adc
popf
and
out
mov
out
mov
push
push
xchg
in
out
inc
cmp
add
pop
dec
test
inc
or
mov
push
pop
push
inc
lea
adc
sub
mov
dec
xchg
test
inc
icebp
cmpsl
lods
jnp
mov
sub
dec
jnp
xchg
mov
imul
sbb
xchg
pop
lcall
ret
fcmovnbe
sub
cmc
fucom
icebp
cmpsl
outsb
outsl
mov
sbb
stos
negb
jmp
les
leave
lds
out
mov
pop
jmp
shll
std
adc
xor
imul
cltd
ss
mov
mov
test
jp
ss
sbbl
jbe
jb
test
and
pop
nop
sti
imul
xchg
and
shrl
sbb
xchg
sbb
jmp
aam
jg
out
or
jmp
roll
lods
frstor
iret
jne
nop
or
dec
inc
mov
and
fwait
into
cmp
xchg
xchg
mov
cmp
scas
dec
mov
ja
jecxz
sbb
and
push
pop
cs
inc
or
mov
mov
xchg
mov
mov
jb
cmpsb
add
add
arpl
fwait
mov
sbb
aad
mov
ds
test
rorb
popa
mov
clc
xchg
lret
cmp
fimuls
mov
adc
mov
jne
icebp
cmp
insl
sbb
inc
imul
sbb
cmp
adc
outsl
jmp
inc
or
das
mov
btc
push
mov
rolb
or
xchg
das
pop
xchg
jae
xorb
pop
xlat
or
mov
push
sbb
jmp
insl
mov
dec
jecxz
jle
data16
push
jmp
or
cwtl
data16
pop
push
pop
mov
sbb
lcall
sub
test
xchg
sbb
jnp
and
insb
mov
insb
test
cmp
lods
loopne
mov
mov
stos
enter
movsb
ret
popf
xchg
cmp
lret
xchg
xchg
mov
sub
sub
nop
daa
jbe
xchg
adc
pusha
jecxz
jbe
rol
mov
jb
shl
or
mov
and
in
out
movsl
fistl
adc
push
adc
cwtl
xchg
and
movsb
fsubl
pop
jne
test
jb
icebp
adcb
add
das
xor
dec
ds
push
jl
ja
push
addl
pop
mov
arpl
pushf
pop
shlb
xchg
jle
dec
jp
add
testb
nop
js
insb
adc
ficompl
repz
cmp
ljmp
mov
dec
push
add
or
xchg
mov
sbb
cmpl
mov
inc
push
out
push
stc
xor
cltd
fidivrs
popf
std
or
inc
mov
pop
incb
gs
pusha
mov
mov
add
inc
pushf
lods
popf
lods
ret
outsb
fcomip
pop
out
sbb
inc
add
test
xor
inc
negb
outsb
or
out
and
pop
jge
lret
repz
insb
mov
repnz
cmp
mov
andb
mov
addr16
mov
movsb
cmpsl
pop
mov
movsl
add
push
cs
cmp
jg
test
mov
pop
dec
rcrb
ja
xchg
lcall
add
and
shlb
jne
mov
inc
jns
divl
mov
rolb
xchg
pop
push
dec
mov
or
in
mov
int
jae
sbb
mov
pop
lcall
inc
and
add
jmp
int
cwtl
cmp
call
jo
int
pusha
lret
sahf
mov
push
mov
sbb
dec
inc
adc
pop
push
xchg
rclb
mov
pop
or
popa
loope
dec
aad
push
cli
push
mov
cmpsl
fisubl
push
xchg
xor
mov
and
or
test
xchg
jb
dec
mov
popf
jb
rclb
in
mov
das
fisttpl
icebp
aam
insb
test
fsts
lock
scas
loopne
pop
pop
adc
or
lods
pop
js
pusha
push
push
pop
aaa
test
ret
addr16
push
dec
mov
push
stc
dec
inc
dec
adc
ror
int
jecxz
cltd
mov
push
data16
add
sbb
mov
test
in
jg
inc
push
add
inc
aaa
sti
iret
xchg
mov
fsts
add
jl
inc
push
push
sbbb
mov
out
inc
sbb
jb
pop
test
cmpsb
jl
pop
mov
or
jbe
fs
pop
int3
and
adc
or
add
in
xor
mov
test
popa
pop
xor
or
mov
jnp
jmp
mov
into
mov
mov
test
cmpl
inc
push
add
test
mov
xchg
fcoml
out
push
jnp
xchg
iret
shll
pop
lds
sub
mov
jge
jo
jne
push
sub
sbb
fs
je
or
sbb
lret
stc
push
shr
dec
sbb
insb
jno
and
mov
add
fwait
jl,pt
ffreep
sub
or
bound
rorl
jo
arpl
push
loope
out
daa
mov
in
inc
in
pop
rcrl
sti
aaa
mov
daa
push
pop
cmp
push
jo
sti
mov
shrl
enter
mov
mov
adc
sbb
jbe
das
pushf
jmp
or
test
mov
fwait
push
pop
shr
cmp
mov
xchg
stos
xor
repz
mov
repz
fcompl
popa
out
jmp
add
ret
les
pop
outsl
ja
adc
mov
push
idivl
sbbb
xlat
jge
sub
push
dec
ds
xchg
sub
mov
lahf
popl
nop
insb
shlb
sbb
mov
xlat
fbld
mov
inc
xor
lock
loop
add
jmp
jmp
jle
fstpl
stos
sub
jo
push
scas
pop
inc
mov
xor
into
push
daa
push
pusha
push
loopne
mov
mov
mov
outsb
xor
jae
push
add
fdivrp
push
out
js
sub
fcoms
mov
popf
mov
add
mov
into
into
cli
cmp
mov
xor
mov
xchg
lcall
fnstsw
mov
loop
jno
add
sub
lock
mov
jge
hlt
add
mov
repnz
fnstcw
xchg
orl
fisubrl
gs
pusha
and
ss
mov
popf
lcall
ret
popf
push
fcomp
mov
sbb
out
ja
inc
repnz
movsb
icebp
xor
cli
mov
aad
cmp
fwait
bound
mov
xor
aas
sub
aam
mov
sbb
add
movsb
or
adc
push
jb
daa
aaa
aas
pusha
aad
fwait
out
adc
pop
loope
in
es
jae
lret
mov
fadd
pop
push
in
push
mov
inc
mov
mov
and
sbb
jb
bound
push
aad
push
jne
adc
mov
arpl
mov
sbb
and
ja
jg
fistpll
jb
dec
aaa
fistpll
mov
or
repnz
jne
cmp
cmp
pop
repz
dec
ret
mov
fisttpll
adc
cmc
push
sub
iret
mov
cmp
dec
or
insl
lods
mov
mov
xlat
jp
lcall
andb
push
and
stos
inc
mov
sbb
pop
mov
loope
ja
cs
je
inc
push
xor
es
in
in
push
sub
and
mov
jg
inc
cmpsb
aas
popf
add
gs
adc
xor
jns
mov
andl
roll
fsub
pop
mov
mov
mov
clc
rcrl
mov
fwait
imul
sbb
repz
rolb
mov
aam
rorl
es
sub
fwait
mov
scas
out
out
and
inc
fdiv
push
sub
and
mov
xchg
out
sarb
sub
inc
pop
jno
cmp
cmp
loop
jl
cmpsb
inc
dec
and
lcall
mov
push
cmp
pop
sbb
cli
xchg
es
jae
jns
lcall
test
xor
lret
adc
mov
cmp
aas
lahf
xchg
mov
push
imul
lahf
in
push
push
or
int
cmp
pop
pop
add
cmp
adc
call
in
test
int3
mov
mov
imul
mov
arpl
jbe
and
pushf
fs
pusha
sub
sub
xor
rorl
push
and
lock
pop
sub
inc
mov
or
pop
mov
imul
jne
movsb
xchg
sbb
scas
mov
rolb
pushf
out
cmp
divl
cmp
mov
int
rclb
jne
mov
mov
add
push
test
rcr
sbb
shll
mov
faddl
repnz
inc
pusha
je
cmp
out
pusha
push
xchg
fidivrl
and
dec
mov
mov
or
daa
jo
adc
add
mov
jmp
arpl
jp
addl
sbb
and
jbe
xchg
xchg
fildl
and
rorl
add
jl
mov
cmpsl
xchg
jo
sbb
or
xchg
pop
sti
in
mov
outsb
mov
lods
in
jecxz
xor
mov
ljmp
pop
enter
cld
jnp
or
in
sbb
lods
jo
stos
in
icebp
sub
inc
adc
mov
test
pop
cmp
sub
and
or
and
dec
pop
fildl
mov
add
push
mov
cwtl
icebp
cmpsl
pop
insb
xchg
sub
inc
jno
addr16
cmp
xchg
fwait
adc
cmc
sahf
ds
out
push
insl
jp
mov
and
and
loopne
aas
push
outsl
jge
or
push
cs
inc
scas
push
mov
repnz
repz
dec
push
outsb
dec
pop
cmp
jge
ja
into
lcall
sbb
sti
jl
js
ds
xchg
sarb
cli
mov
inc
in
mov
sub
push
sbb
scas
dec
in
stos
jp
mov
mov
push
jg
ret
insl
ja
jo
icebp
aam
jmp
cmp
nop
jae
in
les
pop
inc
or
add
inc
sbb
and
sbb
cmp
ret
mov
sbbb
mov
insl
mov
dec
mov
sbb
jbe
test
xchg
rorb
push
scas
pop
js
xor
mov
std
add
jb
sbb
xchg
inc
cmc
repnz
cmp
in
js
and
iret
fldcw
or
sbb
jo
xor
pop
popa
in
jge
sub
cmpsl
sub
aaa
gs
arpl
pop
lret
cmpsl
lcall
mov
adc
subb
add
into
iret
pop
adc
insb
jb
lret
push
jbe
stc
je
push
pop
mov
sbbb
add
or
adc
in
mov
int3
jl
cmp
xchg
test
daa
mov
iret
rclb
mov
push
inc
add
fiadds
loope
pushf
arpl
rolb
loop
test
js
add
pop
pop
daa
push
pop
sbb
and
iret
sub
enter
add
cmp
test
push
insb
icebp
fmuls
out
inc
jg
sbb
dec
fldl
cmpsb
shll
pop
incl
icebp
xchg
cltd
pop
insl
out
decb
cmpsl
popa
jecxz
dec
sbb
sahf
mov
sbb
es
dec
dec
repnz
ja
mov
out
jge
das
xor
data16
dec
mov
shl
xor
mov
jb
push
or
mov
lea
and
nop
mov
adc
test
les
push
xor
push
mov
ljmp
xor
sub
xchg
mov
movsb
ffree
test
dec
ja
data16
mov
xchg
jmp
inc
fcomps
mull
fs
scas
mov
cli
test
mov
inc
xor
xor
push
in
in
outsb
les
shl
push
pop
add
sahf
ljmp
jbe
adc
insl
popa
into
negb
and
pushl
and
xchg
js
cmovnp
jne
into
add
outsl
call
lret
mov
add
cs
cmc
cs
mov
mov
jno
mov
xchg
mov
and
pusha
das
std
es
arpl
cmp
push
inc
jnp
push
xor
sbb
jecxz
cs
push
mov
enter
bound
lods
cmpsl
jle
aam
bound
imul
add
mov
arpl
ss
in
jb
push
mov
push
es
adc
jnp
stc
mov
cld
enter
popf
pmaxub
pop
inc
adc
mov
inc
shlb
js
dec
add
mov
sbb
mov
mov
push
inc
leave
ja
push
outsl
cs
in
add
int
push
xchg
or
fwait
inc
popa
hlt
mov
jl
cltd
les
int
loopne
xchg
jmp
xor
lret
sub
dec
pop
test
insb
sub
cmp
dec
scas
xor
sbb
lahf
fcom
adc
cld
pop
clc
mov
cmp
inc
sarb
xchg
pop
daa
add
not
das
add
jo
pop
int3
pop
dec
shll
mov
cmp
les
jge
xchg
popa
outsb
adc
lahf
pop
jo
mov
orl
jp
or
je
dec
scas
xchg
or
pushw
push
dec
outsl
mov
xchg
test
das
push
dec
mov
jo,pt
push
sti
dec
outsb
pop
add
dec
push
int3
jp
sub
popf
bound
pop
xchg
test
stc
cld
pop
or
push
es
push
inc
mov
inc
add
and
pop
mov
vmulpd
shrb
loopne
or
cmp
dec
or
rorl
gs
mov
rol
sbb
imul
cmp
in
sbb
xor
push
nop
ret
push
push
push
lret
inc
popa
or
adc
int3
outsl
ret
test
xor
jns
repnz
jmp
aam
cmp
or
imul
and
test
and
jbe
insl
int3
loope
not
cld
lret
faddl
inc
imul
adc
mov
mov
fnstcw
je
lock
pushf
outsb
enter
xor
clc
jmp
movsl
jno
cmp
jmp
mov
cmp
mov
sbb
jbe
les
xor
push
je
pop
ret
xor
jne
inc
xchg
nop
les
add
or
iret
das
cmc
andl
lock
imul
push
or
lcall
aad
daa
in
pop
mov
arpl
sbb
lods
push
pop
daa
jo
cmc
jmp
push
mov
add
movsl
mov
sub
sbb
push
jp
jno
sbb
inc
cmpsb
mov
std
xchg
in
movsb
sahf
js
cmpsl
sub
imul
mov
icebp
jecxz,pt
xchg
adc
rcl
lds
xlat
mov
pop
mov
fs
mov
ljmp
cmp
sub
mov
sahf
mov
dec
mov
imul
ret
pushf
pop
data16
jecxz
popa
cmp
push
sbb
sar
pushf
lahf
mov
int3
jo
lcall
lea
ret
call
pop
sbb
pop
jo
stos
ret
imul
fnsave
cmp
mov
lock
xchg
mov
adc
sub
imul
dec
push
loopne
lea
nop
test
mov
lds
lahf
ret
nop
xchg
popf
mov
lret
sbb
jns
jmp
or
int
push
es
push
jmp
push
sbb
jnp
lods
xor
loope
add
inc
subl
inc
pusha
mov
rolb
scas
pop
pop
xchg
jmp
push
and
stos
push
aaa
xor
rorb
lods
inc
insb
jmp
mov
mov
cmp
mov
daa
push
cltd
insb
sub
ret
jmp
mov
xchg
adc
pusha
arpl
cwtl
dec
jmp
cmpsb
xchg
repnz
dec
decb
enter
cmp
jo
mov
sbb
mov
movsl
fwait
ret
adc
and
push
aad
push
mov
push
in
scas
jne
scas
shrl
add
cmpsb
jo
sbb
fisubrs
cli
and
jge
ret
loope
mov
filds
dec
movsl
test
fwait
nop
orb
loopne
ljmp
pop
leave
aaa
and
or
dec
call
add
fistpll
imul
or
in
add
add
stos
addr16
test
xor
add
pop
adc
cmc
xchg
add
ljmp
loope
call
or
or
in
jno
call
call
lods
out
xchg
ficoml
jo,pn
push
frstor
adc
xor
cltd
jecxz
lret
std
xor
inc
rorb
pop
frstpm(287
lods
cmp
mov
fwait
pop
adc
and
ds
fidivl
xor
cld
mov
aaa
add
add
xlat
jne
mov
gs
mov
div
into
loop
sti
ja
arpl
dec
or
sub
loopne
push
dec
das
push
and
or
xchg
push
xchg
stos
add
lods
gs
fsubrl
shll
mov
ficoms
mov
lock
mov
mov
les
aad
xor
cmpsb
dec
lret
lret
sti
into
mov
push
sub
idivl
daa
gs
xchg
cmpl
mov
or
sbb
mov
mull
cmp
cmp
ja
mov
fidivl
enter
jl
test
out
and
pop
hlt
dec
dec
jnp
inc
loopne
cmp
cmp
and
jnp
lea
mov
push
pop
fcomps
pop
xor
and
pop
adc
stc
pop
outsl
push
shlb
out
xchg
cmp
add
pop
mov
cli
cmp
cmp
xchg
or
das
rorb
dec
jle
mov
fldl
testl
movsb
adc
mov
cwtl
push
pop
test
jp
std
aaa
leave
out
or
pop
push
insb
stos
add
ss
iret
int
adc
test
in
lret
orb
test
sub
sbb
jge
pusha
das
cmpsb
movsl
add
jle
adc
pusha
div
lret
xor
loop
adc
imul
xor
fimull
es
inc
insb
mulb
lock
and
xchg
inc
out
pop
jg
jno
fnstsw
xchg
shr
daa
sbb
sub
pop
adc
sub
xchg
or
xlat
sarb
add
add
jecxz
pop
xchg
jge
rcrl
xchg
push
mov
xchg
lds
adc
dec
xor
cmp
or
or
mov
dec
sbb
ret
xchg
rcrb
movsl
mov
or
sub
out
inc
pop
int3
cmp
inc
xchg
xchg
iret
ja
les
arpl
xchg
mov
pop
push
jecxz
mov
sbb
xor
pop
add
test
jmp
mov
fsubrp
xchg
inc
cmp
inc
mov
xor
in
pop
cmp
int3
add
push
call
ror
psrlw
mov
push
cmpsb
imull
insb
adc
xchg
data16
cmpsb
stos
movsl
leave
cli
out
mov
jle
pop
imul
bound
out
push
push
push
dec
andl
xchg
inc
stos
mov
int
fldenv
inc
imul
jbe
loope
mov
rolb
cmc
insl
xchg
mov
sbb
push
lret
mov
adc
xor
push
adc
push
in
decl
pop
das
dec
and
mov
pop
sub
insl
mov
and
loopne
dec
xor
insl
xchg
stos
insb
movsl
or
call
jg
cmpsb
lcall
fisttpll
xor
fucom
gs
daa
push
add
jp
adc
sbb
cs
mov
es
mov
bound
xor
jecxz
fcomps
inc
lods
sbb
mov
push
pop
mov
xlat
test
xor
cmp
addl
add
xor
in
daa
jle
dec
rcrl
outsb
or
popa
sub
in
mov
xchg
fisubrl
les
and
xchg
inc
call
pushf
jmp
imul
movsl
mov
jge
lock
push
jp
test
or
rorl
sbb
in
cmp
outsb
repnz
movsl
mov
mov
fcoml
and
lods
fdivl
or
int3
in
xor
repnz
out
mov
push
prefetch
icebp
mov
mov
pop
xor
or
mov
int
pop
vminps
mov
jmp
dec
sub
insl
pop
jns
inc
shll
inc
fisubrl
loope
shll
adc
popl
pop
or
inc
aas
jbe
lcall
dec
cli
mov
int
fisubl
sbb
sbb
xchg
cmp
jnp
cwtl
cmp
ss
push
dec
xor
outsl
inc
repz
xchg
js
loop
mov
pop
pop
mov
dec
imul
ja
mov
test
cmc
cmp
sbb
insb
lock
stos
ret
xchg
mov
cmp
in
movzbl
cmp
mov
inc
daa
xchg
enter
jecxz
push
mov
je
or
mov
push
aad
sbb
fiaddl
xchg
sbb
xchg
mov
and
add
das
and
sub
sbb
test
or
and
jne
add
xorb
xchg
movsl
mov
pop
jmp
lcall
testl
dec
rcrl
rclb
lds
emms
mov
or
mov
scas
imul
mov
fs
leave
jg
cmp
outsl
lcall
jmp
das
pop
enter
movsb
stos
pop
mov
leave
jmp
aas
add
xor
mov
roll
lret
mov
sub
in
jmp
loopne
jb
pushf
stos
cbtw
nop
sbb
js,pn
cld
mov
xchg
int3
outsb
addr16
outsl
pop
ret
cmp
dec
lds
rcr
cld
das
bound
stos
inc
pushf
jae
xlat
mov
ja
adc
das
pop
sarl
push
dec
insl
aam
mov
addr16
push
push
or
sub
or
out
push
xor
out
cs
mov
jg
push
fsubp
cmp
idivb
stos
daa
pmulhuw
stos
push
test
call
std
jl
or
jg
xchg
cmp
int3
add
cmpsb
push
fsubrs
aam
mov
call
stos
iret
push
outsb
mov
mov
sbb
jl
fnsave
lret
mov
jbe
dec
cli
push
xor
push
xlat
sub
dec
daa
mov
mov
imul
cwtl
sbb
pusha
push
scas
std
cli
cld
mov
insl
shl
out
or
mov
sbb
fistpll
sbb
sub
das
mov
mov
ret
rclb
fidivrs
std
jae
jecxz
dec
je
incl
push
rcll
mov
jno
mov
rcll
cmp
in
xor
aas
mov
mov
jns
jo
leave
lret
rorl
mov
jns
sbbb
xor
dec
xchg
inc
outsl
lea
mov
or
push
xchg
mov
iret
repz
sub
arpl
mov
call
lret
jns
lahf
cmp
mov
add
pusha
lret
movsl
pushf
xchg
dec
xchg
rolb
popa
jl
imull
and
and
sarb
sub
sub
sub
push
push
and
mov
pushf
cmp
into
stc
lods
lods
inc
add
add
repnz
ret
push
sbb
jno
scas
outsb
add
add
push
stos
push
es
cltd
push
fistpll
repz
popa
sarb
push
sub
fcoms
jns
jb
stos
mov
lods
xchg
or
mov
mov
pop
in
xor
pop
adc
scas
aaa
jae
daa
push
sbb
mov
test
popf
aaa
lea
or
jmp
leave
push
pusha
rorb
mov
jecxz
ror
jb
in
in
inc
jp
mov
mov
add
sbb
mul
in
fcomps
popf
pop
pop
mov
sub
ljmp
and
push
cmp
inc
pop
push
call
pop
sub
repnz
mov
cmp
pop
mov
xchg
lods
sbbb
outsb
leave
rcll
pusha
rorb
pop
sub
add
push
sub
sbb
push
imul
scas
andb
movsb
lret
loopne
shl
xchg
and
sbb
in
xchg
aas
push
mov
movsb
mov
in
jb
sbb
cmp
sub
cmp
push
cmpsl
hlt
push
ret
push
es
mov
nop
ret
sbb
push
sbb
adc
ret
sub
cmpl
sbb
jnp
nop
mov
aas
mov
pop
rorl
xor
dec
xchg
jecxz
mov
in
pusha
add
add
inc
jmp
add
pop
int
pushf
lret
or
sbb
sti
in
xlat
mulb
xchg
mov
add
sbb
shrb
insb
js
or
push
cli
push
xchg
mov
rcl
jp
pop
xor
out
mov
pop
int3
mov
and
scas
and
stos
nop
adc
cmp
aaa
add
or
jns
in
enter
aad
sti
jbe
movsb
stos
jle
inc
dec
fs
ljmp
ss
sahf
mov
and
in
imul
cmp
clc
and
xor
mov
dec
mov
sahf
outsl
mov
mov
outsb
mov
ja
push
addr16
pop
scas
pop
aaa
adc
lcall
subb
cmp
cmp
out
scas
loope
adc
scas
addr16
out
popa
jbe
std
fiaddl
xor
cltd
test
sbb
lret
adcb
cmp
adc
push
xchg
std
lret
push
sti
mov
jbe
xlat
and
and
sahf
pop
pop
rcll
add
stc
fldl
lahf
pop
xor
mov
pop
mov
mov
jns
ss
inc
out
inc
xlat
data16
mov
cmp
aad
and
sbb
sti
mov
sub
insl
incb
int3
inc
mov
add
mov
inc
mov
adcb
pop
je
adc
ret
mov
pop
pop
sub
add
rcrb
in
movsl
cltd
lock
scas
xor
push
clc
insb
fldl
adc
test
aad
jae
mov
xor
rclb
out
out
dec
out
add
flds
mov
shl
lock
gs
mov
push
test
daa
xchg
mov
pop
in
pop
jbe
inc
ss
sahf
xchg
clc
cltd
adc
and
in
cwtl
mov
or
dec
bound
gs
notl
push
loopne
repz
dec
dec
push
out
or
pop
imul
pop
jle
mov
mov
mov
xchg
div
sub
push
add
or
out
lea
dec
inc
or
dec
in
dec
sub
mov
inc
or
in
ss
mov
mov
xchg
imul
lds
aam
mov
cmpsb
clc
lahf
push
in
or
sahf
mov
and
dec
cmp
dec
data16
adc
notl
rorb
mov
stos
orl
call
icebp
jmp
fs
test
mov
xor
mov
out
inc
ljmp
add
lret
add
mov
ja
int
aad
lahf
addr16
cwtl
test
aas
notb
or
clc
xchg
mov
xor
mov
call
in
xchg
enter
mov
pop
sahf
lods
pop
push
sbbb
loopne
fnsave
and
ret
setnp
xchg
add
movsl
lret
roll
jg
int3
aas
and
std
outsl
repz
push
rclb
xor
cld
or
cmp
stos
push
add
sub
inc
sar
jnp
popa
push
add
cmpsl
mov
mov
jge
pop
and
xchg
fsubl
cmp
push
or
lock
jp
jmp
sbb
lahf
or
out
jae
xor
addr16
cltd
xchg
imul
enter
dec
dec
cmpl
adc
fsts
int3
lcall
out
and
sub
outsl
or
lods
sbb
cli
adc
cs
mov
mov
dec
repz
cmc
jns
pusha
repnz
sub
lahf
je
push
push
roll
jne
adc
mov
cs
add
repz
lea
or
push
std
imul
adc
or
out
lds
mov
repnz
pop
test
xor
jo
mov
adc
das
popa
jecxz
outsl
scas
enter
jae
jmp
mov
adc
lods
or
mov
or
xchg
mov
sbb
dec
fmulp
push
mov
outsb
adc
pop
push
push
sub
xor
cmpsl
sti
in
push
xchg
push
sbb
xchg
jecxz
in
fdivl
shl
out
mov
hlt
mov
bound
das
cmp
dec
out
push
jle
ds
push
xchg
push
gs
ss
mov
rcr
ds
mov
sbb
mov
fldl
xchg
sub
add
fistps
out
loopne
rclb
xchg
dec
enter
popf
and
lods
pusha
test
cwtl
sarb
shrl
jo
test
or
ret
vcmpsd
dec
iret
leave
fldcw
adc
jmp
adc
jp
xchg
repz
iret
dec
push
jb
fldenv
fwait
mov
mulb
cs
shrb
dec
pop
sub
repz
xor
ja
and
push
push
xchg
sbb
push
popa
push
push
sahf
dec
jnp
inc
and
xchg
std
and
mov
push
popa
insl
pop
out
jnp
cmpsb
testl
popa
mov
xchg
mov
out
sbb
and
and
loope
xor
xchg
dec
rclb
les
mov
pop
pop
enter
push
push
clc
dec
dec
mov
push
and
and
inc
dec
and
aam
fwait
aaa
lods
fwait
jmp
adc
mov
imul
enter
xor
shl
push
jo
sub
push
xchg
shl
imul
cmpl
adc
cmpsl
inc
adc
faddp
clc
lock
out
dec
xchg
pop
inc
xchg
loop
cli
sarb
rolb
cld
cli
insb
js
cwtl
clc
sarl
jnp
jp
inc
test
add
arpl
les
shll
stc
movsb
cli
popf
adc
movsl
dec
xchg
rcll
sub
jno
pop
fwait
jmp
adc
pop
mov
push
jb
andb
mov
std
aam
mov
ja
inc
or
xchg
sub
mov
pop
or
pop
xor
jecxz
xor
mov
or
or
inc
dec
rcr
dec
out
xchg
sub
jge
cltd
fimuls
pop
xchg
sbb
mov
jbe
mov
das
add
cmp
pop
cmp
aad
scas
fstpt
sub
loopne
and
mov
cs
arpl
repnz
or
repnz
sbb
in
je
pop
popf
xchg
push
xchg
roll
iret
call
sub
sub
loop
jne
les
sub
loopne
mov
and
mov
ficoml
xchg
jecxz
sub
dec
xchg
call
aam
fcom
stos
cli
bound
jne
insb
movsl
jno
nop
xchg
add
xlat
xor
out
mov
inc
jno
fwait
mov
imul
push
mov
js
pop
lods
pop
adc
xor
cmpsl
jp
ljmp
insb
lods
loopne
lods
es
adc
arpl
mov
mov
cmp
and
add
dec
fdivr
lods
div
cltd
fcomps
add
xor
scas
pusha
std
jno
je
aad
dec
mov
aam
mov
cld
pop
fbld
mov
xor
lahf
cmpsl
out
mov
dec
and
dec
mov
adc
ret
cmpsb
shrb
out
insb
jno
adc
outsl
jmp
sbb
push
add
jmp
imul
inc
outsl
fstpl
leave
ljmp
jne
mov
addr16
aam
out
xor
data16
cmp
pusha
cmpl
and
imul
cmp
mov
incb
mov
test
jno
pushf
dec
jle
or
push
adc
sub
mov
das
lock
add
push
fwait
sub
or
jns
imul
mov
das
rcrb
in
fbstp
sbb
xor
imul
inc
jno
sub
out
mov
jo
adc
sbb
and
mov
lods
je
pop
inc
mov
push
jo
lods
adc
and
add
mov
mov
mov
lods
inc
sub
flds
scas
popf
jl
test
sub
dec
popa
in
rcll
test
and
and
xchg
fbstp
scas
jle
fstl
mov
test
imul
aas
mov
loope
sub
lock
or
lods
cmpsl
mov
cld
mov
add
or
pop
sub
mov
jle
sub
xchg
push
push
xchg
rolb
int3
rclb
sbb
fcompl
xchg
pop
cmpb
and
idivb
sub
stos
dec
mov
cltd
add
fisttpl
push
add
in
lds
cmp
dec
lods
or
fcomi
xchg
or
mov
fldenv
and
dec
add
adcb
inc
ret
dec
ss
cmp
mov
jmp
stos
and
jo
lea
xor
xor
xor
rcr
or
in
sahf
mov
mov
push
sahf
or
adc
mov
shlb
cmp
fiaddl
mov
fsub
sbb
mov
pop
arpl
pop
test
rclb
xchg
iret
popa
xor
jge
hlt
mov
lret
adc
xchg
pusha
and
push
adc
dec
daa
in
push
ret
stos
dec
scas
mov
outsb
call
inc
mov
push
into
into
sahf
repnz
push
shlb
sti
out
hlt
mov
ret
cmovb
mov
jnp
lods
mov
aad
cld
push
push
fimull
xchg
int3
clc
stc
mov
ret
enter
movsl
jo
sub
cs
testl
movsb
mov
out
ror
icebp
loopne
repnz
xor
cmpsb
adc
inc
adc
test
je
or
sbb
mov
aas
sbb
xlat
lea
adc
stos
rolb
js
inc
inc
fndisi(8087
adc
dec
mov
add
leave
rcrl
add
inc
cmpsl
loope
mov
mov
add
fs
push
jnp
out
cmpsb
mov
mov
shrl
mov
sti
xor
xchg
gs
inc
fisttps
inc
sub
push
mov
lret
sbb
aas
mov
push
inc
lret
js
stos
xor
lret
lret
fs
jbe
cmp
les
filds
popf
or
xor
ret
mov
sbb
mov
into
cld
mov
or
fstpl
cmpsl
shlb
mov
and
clc
nop
xchg
cmp
cld
sbb
adc
xchg
lret
hlt
out
imul
cld
scas
sarl
int3
pop
bound
cli
popf
adc
adc
aaa
in
popa
les
shrl
sbb
popa
sbb
jge
xchg
loope
mov
shll
cs
mov
push
outsb
cmp
sub
insb
popf
xchg
das
xchg
subb
pop
inc
outsl
jecxz
aas
lods
or
mov
jbe
xor
sahf
pop
jo
xlat
jo
jecxz
outsb
ja
cmpsl
int
inc
pop
sarl
lods
mov
call
loopne
add
inc
je
mov
and
fmull
dec
scas
and
es
cld
pop
xchg
popf
mov
test
fsubrl
mov
sbb
add
daa
or
fldl
add
inc
xorl
popa
adc
or
repnz
lahf
in
mov
sahf
cmp
add
les
loopne
pop
lea
and
cli
fnstcw
inc
inc
ja
or
dec
les
rorb
and
loope
inc
fprem
cmp
ss
cmp
out
adc
pop
sbb
mov
and
int3
aam
push
cmp
lret
dec
push
ljmp
xchg
rcrl
sbb
shll
push
cs
sbb
pusha
call
pop
pop
sub
js
aad
daa
inc
int
fistpll
and
jo
dec
cmp
test
add
daa
ja
push
xchg
mov
mov
mov
nop
cmpb
and
mov
loop
hlt
mov
fsubrl
pop
jl
lods
scas
jne
hlt
mov
adc
inc
dec
gs
ja
popa
sub
push
adc
rcrb
xlat
aad
bound
xorb
sbb
sbb
xchg
dec
mov
sahf
or
imulb
mov
ss
adc
push
push
shrl
dec
fidivs
dec
mov
shll
std
out
add
push
lds
push
out
push
enter
ds
dec
in
fsub
pop
sbb
mov
rclb
je
aad
in
mov
cmp
movb
mov
mov
hlt
addl
mov
je
in
xor
ret
add
adc
scas
mov
cs
fwait
pop
push
sub
call
mov
xor
addps
scas
mov
test
sbb
and
je
mov
dec
insb
enter
sub
loope
icebp
inc
rcl
lret
fidivrl
xor
mov
mov
pop
add
cmp
ja
stos
cmp
pop
sbb
repnz
sysexit
es
fists
test
clc
cmp
push
push
adc
sub
cmp
nop
mov
nop
psraw
in
push
sti
cwtl
sbb
outsb
push
roll
xor
movsb
xchg
dec
dec
lock
nop
in
aam
push
movsl
or
rcll
enter
fisttps
push
arpl
sub
xor
rorl
lcall
and
xor
test
rcrb
pop
pop
das
or
jge
fistps
add
adc
mov
mov
jb
cmc
fcompl
xchg
in
and
inc
mov
out
stos
cmpsb
fsubrp
cmp
xor
cli
stos
dec
mov
dec
xchg
cmp
push
and
jb
lds
sbb
rcl
sbb
mov
xor
mov
jo
stos
sbbl
les
cmp
fnstsw
cli
mov
loope
jmp
sub
mov
mov
add
mov
fucomp
or
stc
or
xor
mov
bswap
repz
enter
push
sbb
das
push
in
mov
out
iret
roll
adc
push
test
dec
rol
int
pusha
pop
sub
add
test
fnstenv
lret
cld
sub
cmp
sti
dec
sub
lods
es
jp
push
in
pusha
inc
cmp
cmpb
insb
cwtl
sbb
cmpb
mov
repz
sahf
mov
adc
mov
push
mov
int
mov
out
jae
or
jmp
sarl
int3
cmp
mov
pushf
lds
dec
enter
je
sti
mov
cmp
cmp
pop
pop
std
out
sahf
jmp
push
ret
xchg
add
aam
dec
repz
add
pop
je
bound
lahf
int
pop
scas
out
shrb
xchg
dec
sbb
das
pushf
lahf
pop
ret
sbb
mov
fimuls
repz
jb
pop
dec
enter
adc
sbb
int
mov
pop
sub
xor
push
pop
rcrl
dec
jecxz
inc
sahf
cli
mov
cmp
aas
sbb
cltd
or
ds
mov
xchg
dec
mov
add
push
ficoms
jmp
xor
cmc
xchg
fisttpll
xchg
fimull
inc
stos
pushf
out
sub
das
xchg
dec
dec
or
mov
add
mov
sbb
mov
sub
pop
js
aad
jns
shr
or
loop
xor
clc
pop
faddl
jp
aam
subb
jl
test
add
popf
out
cmp
pop
call
or
dec
scas
fldlg2
push
std
fisubl
mov
shrl
add
and
jns
cmp
pop
icebp
lahf
loope
cmc
imul
mov
sub
fldl
lcall
jae
test
sub
popf
or
fistps
mov
pop
mov
jb
cmp
frstpm(287
loope
mov
cmc
lahf
fucomi
mov
dec
cmp
pop
pop
test
repnz
or
jnp
push
data16
incl
cvtps2pi
nop
push
push
and
xor
xchg
or
inc
inc
mov
inc
xchg
mov
cmp
xlat
adc
bswap
movsb
mov
inc
in
leave
pop
add
inc
mov
jbe
iret
jle
push
and
popa
mov
push
cli
movb
arpl
fists
sub
lret
dec
mov
stos
repz
fadd
xor
lods
xor
nop
xor
js
je
aaa
xchg
xchg
nop
jg
cmc
imul
cltd
sub
dec
in
dec
fs
lods
and
mov
outsl
mov
xor
jns
dec
mov
sub
loopne
orl
mov
cs
test
adc
mov
push
push
xchg
ss
shlb
mov
call
mov
adc
mov
fisttpl
lds
rorb
xchg
push
or
inc
push
mov
out
imull
imul
stos
cltd
jne
mov
xchg
ljmp
shl
stos
xchg
and
test
std
push
jns
lods
mov
adc
cmp
aas
mulb
gs
or
scas
adc
push
scas
mov
lret
jge
cmpsb
adc
inc
hlt
sub
fisttpl
xlat
popa
movsb
ret
sbb
addl
mov
call
push
int3
cmp
enter
jnp
or
mov
ljmp
clc
cmpl
inc
ret
in
jmp
xchg
aaa
and
fsts
xchg
push
cwtl
mov
insl
fldcw
roll
inc
mov
lret
jmp
fsub
iret
in
xlat
lret
cwtl
sbb
stc
idiv
jne
outsb
push
enter
sub
test
hlt
addr16
ja
jge
push
pop
mov
std
mov
stc
int
fwait
rol
mov
push
dec
xchg
cmp
ds
fisubrs
pop
jnp
sbb
sub
inc
xlat
shrb
mov
mul
fucomi
cmpsb
xchg
fistpl
in
fldt
dec
or
mov
int3
or
xchg
ja
out
scas
and
and
fnstenv
sbb
sarb
xlat
out
xor
and
lds
cmpsb
iret
out
lea
and
icebp
scas
mov
rcl
in
fimull
rolb
fsub
jno
or
cmp
das
ret
out
addr16
sti
rcr
lea
mov
pop
xchg
mov
and
adc
insl
and
mov
cmp
xchg
jp
xchg
repz
pop
pop
push
aad
pop
ret
insb
fstps
outsl
ret
sub
jmp
mov
fisttpll
or
ret
xor
in
mov
imul
imul
subb
shll
js
jge
inc
dec
lcall
sub
gs
les
sub
push
push
imul
mov
aas
and
add
fstl
or
pop
mov
cmp
jbe
dec
das
sbb
aaa
outsl
out
mov
stc
lret
por
mov
inc
out
lds
pop
pop
add
cmpsl
mov
xlat
nop
cmpsl
and
adc
adc
fisubrl
daa
or
dec
std
sub
sub
outsb
jmp
andb
int
bound
out
mov
mov
push
js
add
fistps
aam
adc
mov
out
mov
lcall
xor
es
dec
imul
mov
insl
stos
push
xchg
mov
pop
mov
jl
add
dec
repnz
lret
push
sbb
out
push
pusha
jno
inc
xchg
or
mov
imul
ljmp
addr16
xor
arpl
loop
inc
pop
pop
imul
xchg
mov
ficomps
pop
lea
dec
cld
add
subl
loope
adc
dec
mov
add
jl
out
jp
dec
dec
fdivrl
cmp
pop
pop
pop
loope
fildll
test
je
clc
ja
xor
xor
mov
bound
adc
xor
cmp
add
mov
mov
cmpsl
iret
adc
pop
push
and
arpl
cs
jl
mov
pxor
test
cmpl
loope
outsl
fsubrl
rcll
push
and
cmp
inc
jb
aaa
xchg
jne
pop
adc
add
cmp
mov
xor
jbe
jno
outsl
lock
rorb
xchg
sahf
or
pusha
jmp
lods
test
call
inc
xchg
pop
cmc
repnz
movsl
cmp
movzbl
mov
xor
mov
dec
mov
mov
fdiv
pop
fwait
add
movsl
mov
cmpsl
dec
pop
push
fistpll
les
cli
data16
xor
or
cld
cmp
push
icebp
push
mov
ss
aas
ret
jb
xchg
out
dec
add
mov
push
lea
pop
cmp
jnp
sub
pop
push
mov
repnz
jl
arpl
in
and
test
fs
cs
out
xor
lea
out
jmp
sub
cwtd
jp
inc
insb
jno
aad
rclb
pop
sahf
or
fs
and
aaa
ds
nop
sahf
cltd
cmp
fsubl
push
and
cmp
jns
pop
fwait
lds
call
jecxz
fdivr
iret
rcl
jno
xchg
dec
cwtl
mov
jg
or
dec
add
xlat
mov
out
mov
add
mov
ljmp
push
pop
sub
push
add
cli
sbb
cmp
mov
cmp
and
or
mov
and
fs
pop
xor
addl
repnz
pop
mov
or
xor
data16
in
fwait
push
or
add
sahf
scas
mov
cvtps2pi
movsl
shll
add
add
ja
cmp
test
push
jno
clc
lret
aas
insb
dec
rclb
in
push
dec
into
xor
clc
stc
sbb
cmpsb
and
cmp
icebp
stc
fcmove
inc
test
sub
ret
imul
test
push
push
ss
add
sub
inc
bsf
sub
mov
push
xchg
test
pop
sbb
leave
push
daa
xor
add
int
imul
mov
aaa
xchg
push
lcall
inc
ret
xor
sbb
pushf
jno
jo
repnz
mov
ja
mov
sbb
into
popf
mov
xchg
sub
stos
aam
cmc
sbb
in
pop
scas
lds
push
aas
fs
sbb
loopne
test
push
mov
push
movsb
sub
jecxz
insl
cwtl
popa
mov
mov
fmull
push
sbb
stc
pop
fcompl
adc
or
andl
or
push
and
mov
mov
xchg
iret
popf
xchg
bound
pop
mov
and
sbb
loopne
out
mov
stos
pop
into
movsb
add
and
jno,pt
pop
mov
rorl
xor
or
loopne
push
sbb
inc
mov
lcall
jmp
sarl
fadd
jo
jnp
mov
mov
lret
retw
pop
add
inc
fsubs
shrb
push
addr16
inc
adc
ljmp
decb
cli
push
jl
mov
stos
pushf
pop
in
negl
dec
nop
add
in
adc
outsl
into
and
push
xchg
push
jo
mov
dec
stos
fldcw
sti
and
adc
push
push
cmp
aad
xchg
aas
mov
cli
test
out
or
test
sub
xchg
dec
cwtl
cs
or
inc
dec
adc
into
push
mov
lods
mov
subb
rcr
insb
push
mov
ss
mov
test
pushl
in
fistl
sub
pop
int
nop
xchg
lods
vorps
lahf
subb
mov
cmp
xchg
test
or
scas
xchg
add
mov
movsb
pop
add
popf
fisubrs
shrb
lret
xor
incl
adc
int3
iret
jl
loopne
push
adc
incl
sahf
and
xchg
xor
cmp
andl
loopne
xor
fwait
jge
in
sub
mov
loop
dec
lahf
fildl
aad
cmp
jle
das
mov
fidivs
push
lsl
mov
dec
enter
je
aad
lret
and
outsb
imulb
or
outsl
inc
jl
fidivs
jmp
insb
mov
cmp
jecxz
jo
sub
enter
sbb
mov
jecxz
sbb
add
stos
push
push
rol
sub
cmc
test
push
sbb
sub
xchg
dec
orl
cmc
inc
inc
xor
js
and
jmp
pop
fidivs
mov
jae
adc
xor
xchg
dec
test
pop
andl
pop
xor
pop
push
xor
mov
mulb
add
jecxz
cli
xchg
fiadds
adc
inc
push
inc
pop
sub
dec
jns
xorl
movsb
shlb
mov
push
jnp
int
cmpsb
das
ret
add
pushl
add
in
dec
lock
sbb
repnz
cltd
sub
sbb
aad
loop
cmp
mov
pop
xor
jle
dec
out
push
mov
or
jmp
ds
sub
mov
aam
popf
fsts
dec
loope
mov
rorl
mov
jb
push
jg
mov
popa
sbb
pop
cmpsb
inc
cwtl
test
out
mov
rcrl
lret
jnp
mov
sbb
adc
and
inc
gs
lea
movsl
dec
xor
lock
dec
cmp
xchg
and
xchg
sbb
mov
dec
mov
outsl
sub
pop
mov
jmp
outsl
stc
gs
mov
inc
add
cmpsl
dec
shrb
mov
aad
inc
pop
orl
divb
pop
cmpsl
cmp
out
sub
cli
add
pop
lds
pop
jne
insl
mov
xor
jnp
inc
and
rclb
adc
pop
leave
out
fs
pop
nop
xchg
cld
orb
mov
enter
pop
mov
test
mov
pop
pop
adc
mov
aas
cld
or
out
jmp
dec
scas
notb
inc
lods
int3
popa
int
adc
inc
sub
and
stos
movsb
jmp
xchg
push
mov
sub
lret
xor
mov
je
repz
cltd
test
cmpb
inc
dec
xchg
xchg
pop
das
jnp
pop
mov
addl
mov
pusha
call
inc
fadd
rorl
dec
xchg
xor
test
insl
pop
pop
adc
scas
adc
js
stos
mov
fldt
push
ss
jns
sbb
cs
popa
mull
mov
adc
mov
fs
popa
mov
xor
adc
cmpsl
jl
shl
addr16
adc
sbb
stc
ret
fsubrs
xor
mov
dec
or
xchg
insb
vmulss
dec
movsl
sarl
cwtl
das
sbb
adc
push
mov
js
inc
fwait
mov
push
bound
movsb
sbb
test
repz
leave
imul
mov
mov
stos
icebp
push
cmp
std
dec
jne
or
xlat
pop
lcall
ljmp
cmc
call
pop
adc
imul
testb
les
sbb
push
cmpsb
fcoml
mov
jae
je
inc
rolb
jo
imul
mov
or
lods
repz
dec
cmp
inc
repnz
xchg
jns
pop
push
inc
cmp
mov
jmp
es
aad
shrb
es
or
xlat
pop
and
xor
jmp
mov
fsubrl
mov
and
mov
cmpsl
jne
jnp
push
adc
mov
mov
add
icebp
sti
mov
cpuid
pop
mov
hlt
in
iret
adc
cld
pusha
pop
jmp
mov
aaa
push
and
or
lcall
aas
pop
std
and
cmp
push
arpl
fmulp
mov
gs
aam
xor
int3
mov
jo
sbb
dec
push
repz
movsl
xor
cmp
adc
push
mov
in
ret
and
pop
cmp
dec
mov
dec
mov
jno
sti
sahf
sbb
adc
sub
je
mov
fsubl
in
xchg
push
adc
pop
mov
hlt
lock
pop
popa
fs
mov
in
xchg
and
test
std
ds
xor
dec
fisttpl
sub
lret
outsl
push
arpl
aas
shlb
jo
cmp
stos
pop
repnz
data16
lock
mov
aaa
sbb
push
xchg
orl
xchg
fwait
mov
and
mov
xchg
sahf
out
loopne
jmp
popa
sub
add
push
jne
mov
adc
mov
and
mov
out
inc
jmp
push
mov
cmp
push
testb
lock
push
in
sub
lret
sub
xor
or
lods
xlat
das
mov
and
inc
fadds
test
insl
and
adc
fwait
shrl
call
mov
fs
push
cmovb
out
adcb
mov
arpl
shll
push
test
fwait
outsb
sti
and
movsb
dec
xor
loope
pop
mov
lret
mov
shll
pop
xchg
insl
les
adc
xor
and
shll
sub
xchg
mov
jb
fmulp
xchg
jle
add
faddl
lods
adc
aad
and
rcrl
imul
in
test
sahf
and
pop
pop
das
ds
sbb
push
insl
sbb
popf
sbb
in
pop
jbe
mov
jmp
and
inc
jne
pop
ret
add
push
cmpsb
pop
add
and
mov
and
stos
fidivrs
inc
int3
or
mov
clc
pop
cli
stos
and
scas
inc
add
stc
push
call
sub
sbb
mov
mov
sbbb
push
sub
out
lret
arpl
add
pop
push
pop
cmp
inc
sti
cmp
xchg
stos
mov
repz
stos
lock
nop
inc
inc
andl
sub
imul
fistpll
loope
das
xor
xor
aad
jecxz
push
ret
or
jmp
mov
lret
xchg
sbb
rorb
fwait
cmp
jno
hlt
lods
divb
fimuls
xchg
lcall
push
xchg
push
data16
std
mov
pop
add
xchg
mov
jbe
lcall
mov
std
pop
shll
push
es
clc
and
outsb
xor
lods
and
popa
sbb
imul
pop
aas
push
push
xchg
and
jbe
nop
sbb
icebp
push
fistl
outsl
mov
sub
xchg
xor
push
xor
data16
jns
pop
lods
ja,pn
gs
mov
mov
rolb
sbb
aaa
xchg
addr16
ret
inc
nop
hlt
mov
and
rcr
data16
clc
das
jno
mov
pop
xor
in
xchg
scas
out
inc
and
push
cmc
fcompl
sub
enter
xor
shll
ss
mov
adc
xor
xor
add
fstpl
adc
add
ja
and
mov
imul
jle
sbb
and
add
pusha
dec
scas
leave
dec
adcb
out
das
push
mov
imul
push
or
dec
push
pushf
pop
int3
or
sbb
jae
mov
popa
xchg
jl
rcll
cltd
dec
fwait
sahf
mov
sub
das
jbe
lods
stos
xorl
xchg
xchg
rorl
into
mov
rcrl
mov
jbe
mov
or
aam
and
roll
stc
into
loope
mov
icebp
iret
repnz
inc
testl
pop
into
pop
subl
add
push
pop
push
lcall
in
lds
ficoms
aaa
cmp
push
dec
lods
mov
mov
fcoms
mov
pop
push
iret
nop
imul
lods
mov
daa
rorl
das
gs
xchg
add
in
push
xor
jnp
xor
bound
ljmp
lods
test
pop
jns
out
jo
fistpl
pop
mov
xchg
pop
adc
xchg
mov
and
mov
inc
push
insb
sub
pushf
add
adc
jp
and
les
xchg
jmp
sbb
movsb
divb
and
push
lods
ret
adc
xchg
int
scas
fldcw
sbb
lods
or
xor
or
xor
jb
pop
jmp
push
inc
xor
fldcw
je
in
adc
addr16
fwait
loop
pusha
dec
cmp
aaa
std
repnz
scas
adc
or
jp
mov
and
xchg
in
jne
dec
popf
sbb
sub
fldenv
xchg
popf
dec
dec
add
fxch
je
mov
repnz
and
daa
sbb
jbe
and
pop
mov
inc
loope
pop
sar
or
pop
sub
fisttps
outsb
mov
in
add
fdivs
adc
sub
test
scas
lret
outsl
xor
das
imul
cmp
iret
mov
sub
outsb
lret
inc
pop
mov
cmp
or
add
mov
lea
jne
mov
sub
mov
xchg
push
test
fildl
les
imul
lods
iret
inc
xchg
cmp
and
jl
js
lahf
xchg
pusha
xchg
out
add
mull
inc
cs
pop
fistps
push
es
data16
pop
mov
je
push
fsubs
dec
mov
mov
leave
push
inc
push
aas
inc
xorb
lds
ljmp
jnp
dec
adc
mov
sbb
lcall
dec
rorl
out
mov
pop
iret
daa
pushf
cmc
bound
mov
sti
jg
dec
pop
add
push
out
cmp
imul
jne
test
nop
rol
or
js
outsl
xchg
arpl
xchg
dec
add
fstpt
pop
jp
scas
lahf
pop
or
rcrl
pop
adc
lea
cmp
test
stos
aam
or
enter
test
xchg
adc
in
pushf
insl
cld
lahf
pop
add
adc
mov
jae
xor
ljmp
andl
js
and
fwait
adc
ret
xlat
cvttps2pi
jae
pop
out
sbb
rcrl
fldl
jecxz
push
dec
int3
inc
jle
xor
cltd
jecxz
xchg
cmp
sti
mov
inc
push
lock
cli
xchg
icebp
cltd
lea
pop
gs
pop
sbb
outsb
or
test
gs
or
lcall
inc
xor
or
int
out
testl
insl
cwtl
or
pop
inc
test
sbb
or
and
sbb
adc
cld
sahf
inc
fidivrl
je
add
hlt
int
rcll
daa
inc
inc
out
fisubs
cmp
iret
fsts
dec
jae
push
adc
and
jo
or
pop
push
mov
jl
popa
test
push
and
fstpt
ret
inc
mov
in
fldt
pop
mov
int3
stos
sbb
dec
mov
mov
push
adc
cmpsl
fmuls
dec
js
sbb
scas
sbb
mov
js
xchg
lret
clc
cmpsl
fcmove
jle
gs
cmp
push
push
dec
and
mov
das
or
jl
lock
fldl
stos
icebp
xlat
test
ss
xchg
lock
cmp
cmc
sbbl
pop
das
or
jb
pop
or
push
jnp
gs
push
fsubs
sahf
add
jp
xchg
pop
je
out
rcrl
inc
out
xchg
stc
ds
mov
inc
call
cmp
roll
jecxz
xlat
in
mov
push
pop
push
cld
mov
sbbb
push
ret
fs
cs
dec
dec
xor
jb
mov
ja
inc
popa
out
aaa
popf
adc
mov
xchg
pushf
repnz
cwtl
addr16
push
outsb
fs
jno
pop
add
fdivrl
ret
ljmp
clc
mov
sbb
mov
test
in
int3
insl
cmpsl
xchg
mov
add
add
sbbb
push
or
popf
xchg
xchg
les
and
in
fwait
push
mov
mov
mov
add
mov
mov
xlat
push
cli
push
js
insl
add
mov
mov
inc
pop
lds
arpl
loop
pushf
aad
das
sti
test
insl
dec
arpl
std
stc
sub
clc
fcoml
or
ret
inc
stc
out
jmp
pop
dec
jno
sti
imul
leave
xor
and
in
adc
ffreep
xchg
mov
ficoml
insb
pop
shl
push
xchg
cltd
das
das
push
pop
leave
das
xor
test
divb
push
mov
adc
iret
out
jb
mov
lahf
xchg
cmc
hlt
sbb
and
mov
and
std
shrb
mov
out
cmpsb
cmpsb
jo
xchg
jg
jge
cmp
int
xchg
insb
and
mov
push
leave
pop
bound
loope
inc
ret
lock
loopne
add
push
jb
gs
sub
ds
stos
movsl
stos
rclb
loop
mov
inc
sub
out
pop
in
ret
dec
and
leave
ss
cld
xor
sub
or
xlat
add
and
out
jg
in
push
test
test
in
arpl
pusha
push
xor
adc
lret
adc
xlat
lcall
out
mov
js
rclb
add
pcmpgtb
mov
inc
enter
lret
repnz
repz
xchg
aas
mov
xchg
das
mov
in
push
dec
ljmp
sbb
sub
xchg
or
xchg
stos
shll
sub
and
test
mov
mov
addr16
add
jle
rolb
outsl
hlt
out
sbb
mov
lcall
cmpsb
pop
gs
loope
xorb
les
xor
aad
repnz
popa
jo
sub
out
jo
and
pop
adc
lret
inc
mov
cli
out
lea
int3
je
cmp
mov
mov
in
fdivrs
lahf
jns
dec
int
ja
mov
fwait
lcall
jns
and
popl
mov
iret
mov
lods
dec
xchg
sahf
cwtl
sub
cmp
mov
jecxz
outsb
cltd
mov
les
mov
outsb
pop
mov
xchg
nop
sub
aam
add
pop
scas
arpl
cli
pop
mov
test
outsb
mov
pop
sub
fcoms
arpl
mov
inc
cmc
into
test
lods
cmpsb
iret
pop
push
push
in
stos
jb
inc
dec
loopne
movsl
hlt
adc
xchg
in
dec
cmp
xchg
outsb
and
jecxz
frstor
or
mov
sbb
sbb
gs
xchg
mov
jnp
add
test
ja
js
int3
pop
or
popa
sar
pop
fwait
mov
ret
rolb
dec
in
movsl
sub
das
jb
sub
adc
idiv
jp
fs
fsubs
dec
xlat
cmp
push
mov
jmp
sarl
loop
dec
lods
dec
mov
sbb
mov
fists
xor
aas
mov
mov
arpl
push
orl
inc
ss
in
add
notb
jae
xchg
mov
add
test
cmpsb
cmp
in
pusha
insb
dec
jnp
cmp
cmp
push
cld
lahf
lret
in
into
pushf
sub
movsb
or
fwait
push
out
xchg
pop
jnp
test
int3
push
in
jecxz
xor
add
ret
aas
orb
outsb
cwtl
xorl
enter
stos
aas
sub
bound
push
fiadds
cmp
mov
mov
aad
cmp
mov
sbb
int3
sbb
pop
fwait
sbb
imul
mov
sti
test
jae
pop
arpl
push
in
cmpsl
inc
inc
jnp
mov
add
mov
insl
pop
push
stos
addb
pop
push
pop
mov
or
and
addr16
outsb
in
call
test
fiadds
mov
pop
bound
or
jnp
adc
add
test
mov
xchg
or
dec
iret
arpl
mov
inc
loop
cld
cmpsb
inc
lahf
movsl
sarw
xchg
dec
lds
dec
inc
shll
aaa
dec
pop
inc
xor
or
adc
roll
mov
rclb
gs
arpl
dec
mov
dec
mov
jae
insb
cmp
std
jae
out
addr16
add
lret
imul
sarb
scas
or
cmpsb
add
dec
movsb
bound
and
xchg
inc
push
inc
ret
add
sub
repnz
test
cld
add
push
mov
mov
push
push
xchg
lods
arpl
sbb
jl
push
and
jnp
in
stc
test
insb
dec
mov
mov
or
push
sub
xchg
shr
mov
out
addr16
xor
mov
dec
rcrl
cmpsl
mov
xor
in
xchg
add
inc
push
xor
mov
pop
scas
in
xchg
adc
in
popf
out
adc
sub
mov
adc
xor
xchg
mov
and
mov
cmp
pushf
stc
sub
or
arpl
movsb
xchg
fstpt
xchg
notl
lods
jl
push
in
cmp
xchg
call
pop
adc
dec
repnz
lea
dec
not
shll
fdivp
jae
pop
mov
inc
sarl
outsb
in
push
dec
xchg
xchg
aas
insl
sbb
daa
pop
jb
enter
ljmp
jns
adc
xchg
mov
fimull
xor
mov
data16
or
cwtl
ret
sarb
rcl
xchg
mov
fildl
movsb
push
mov
repz
jmp
push
push
out
sub
push
loopne
out
outsb
xchg
xchg
inc
inc
xchg
mov
push
lods
adc
jne
dec
xor
mov
mov
sub
mov
xchg
xchg
mov
sub
and
mov
or
push
div
jne
jp
pop
ret
lret
inc
sbb
pop
lods
mov
cwtl
out
mov
push
js
jg
in
shlb
xchg
add
sbb
paddsw
mov
cs
addr16
in
rol
jp
je
xlat
pop
xchg
enter
push
pop
lods
mov
fdivs
lret
orps
in
lea
rorl
pop
dec
dec
test
add
aad
dec
repz
push
bnd
decb
inc
pop
and
mov
les
negl
fdivrp
cmc
mov
es
xchg
in
mov
jmp
pop
arpl
pop
jecxz
dec
pop
lahf
lods
cmp
repz
pop
cwtl
push
es
insl
mov
add
or
loopne
and
lds
outsb
add
xchg
adc
fcmovne
movsb
cmc
fnsave
xchg
mov
adc
ret
add
out
pop
adc
in
daa
push
jle
cwtl
pop
mov
xor
xor
push
pusha
stc
stos
pop
push
jo
inc
loopne
enter
out
lahf
or
out
stos
push
cmp
setp
mov
pop
sbb
sub
mov
or
dec
mov
xchg
mov
hlt
mov
dec
pusha
in
shll
nop
dec
bound
dec
cli
push
stos
ret
xor
sub
repnz
pop
shlb
scas
ljmp
jns
cltd
dec
pop
lods
test
jne
mov
jno
clc
clc
or
lea
cs
or
inc
push
in
or
xchg
xchg
popf
ret
mov
xchg
sbb
dec
xor
add
test
pop
cmpsl
jb
pop
pusha
jns
pop
mov
dec
pop
push
aam
sub
mov
push
sub
mov
jnp
into
mov
je
out
fstpt
pushf
andl
jbe
out
test
rcrl
ret
jbe
jl
in
adc
addb
into
mov
mov
sbb
rcll
outsl
and
xor
stos
fs
ja
out
jmp
ja
adc
iret
pop
jmp
lods
adc
movsb
insb
clc
inc
mov
sub
inc
idivb
sbb
push
xchg
xor
inc
imul
xor
cld
mov
mov
in
movl
pop
rcrl
mov
int3
cmp
outsb
cmp
cmp
push
repnz
pop
sbb
pop
repz
adc
imul
bound
push
xchg
cmp
insb
int
jp
test
hlt
lea
test
insl
cmp
cmp
pop
xchg
leave
inc
hlt
dec
out
push
xchg
aaa
push
jae
sbb
xlat
inc
mov
cld
sbb
sbb
mov
mov
xchg
call
dec
dec
cs
pop
repnz
daa
push
sahf
jg
pop
imul
aaa
pop
or
rolb
iret
scas
loop
sub
cmp
fistl
outsl
sub
or
cmpsl
jno
mov
pop
fwait
jns,pn
or
lea
sti
jl
rorl
repnz
inc
add
or
mov
inc
jmp
xor
jecxz
xorb
cmp
insl
lret
adc
ds
cmp
cmp
and
into
jne
cmp
xchg
mov
sti
loope
push
mov
decl
or
dec
bnd
lret
lea
and
xchg
movl
xor
pop
jmp
pushf
jno
outsl
popf
stc
pop
fidivs
fwait
xchg
mov
dec
and
cwtl
sub
xlat
cmpl
movsb
push
fsubp
lcall
cmp
das
test
nop
adc
sahf
fidivs
mov
jecxz
and
push
sbb
ja
cmp
dec
cli
sub
and
nop
pop
mov
pop
jecxz
xorb
pop
das
test
push
sub
mov
fsts
out
dec
mov
imul
repz
fidivs
fsub
xor
adc
dec
or
jno
mov
and
or
push
mov
in
int
call
test
jb
sub
iret
mov
in
dec
cli
out
adc
mov
inc
aad
add
inc
push
push
in
div
insb
xor
loope
push
shrb
mov
mov
add
xchg
and
dec
jg
js
popa
orb
fcoml
mov
cmp
call
cmpsl
inc
clc
push
std
loope
mov
orb
add
push
mov
loope
pop
daa
adc
mov
repz
jg
and
mov
nop
cmc
aad
sbb
ss
ret
aam
std
es
sbb
mov
mov
xchg
inc
mov
cmpsl
lods
jge
aaa
push
pop
mov
dec
pop
dec
aaa
lahf
stc
jbe
outsb
and
xor
out
mov
mov
xor
es
outsb
inc
lcall
mov
push
sub
arpl
xor
push
hlt
shlb
xlat
bound
in
iret
xchg
stos
push
bound
xchg
stc
pusha
mov
movsl
sub
xor
xchg
inc
pop
inc
subl
decl
cmpsb
xor
fdivrp
fbstp
add
test
rorl
lock
push
fdivs
xchg
call
adc
push
cmp
add
cmpsl
push
lds
mov
movb
addl
js
cmp
pop
mov
in
lods
push
jae
and
xchg
and
ss
lret
stos
sub
and
insb
jns
pop
pusha
push
icebp
in
fucom
out
and
fldenv
jne
inc
dec
lret
stos
hlt
mov
xchg
mov
insb
lds
outsb
jne
out
aaa
adc
push
xchg
inc
js
or
xchg
in
fcmovbe
cmp
push
jle
jb
jle
push
cmp
jbe
sti
mov
inc
rorb
push
sbb
cmp
push
inc
stc
dec
cltd
out
pop
push
aaa
add
xchg
mov
sbb
mov
pop
decb
ret
pop
je
lcall
enter
outsl
push
lret
cmp
cmp
fbstp
fdivp
xchg
mov
ss
cld
pushf
subb
fsubrs
in
ret
push
inc
cmp
jne
dec
mov
ljmp
xor
pop
pop
pop
nop
pop
pop
dec
setae
icebp
cmp
inc
inc
cmc
js
out
pusha
ss
pusha
dec
jns
cwtl
jnp
xor
into
xchg
out
xchg
pushf
nop
xor
mov
xor
fdiv
popa
push
add
popf
jl
sbb
lods
js
out
dec
test
fucomi
inc
mov
leave
xchg
inc
push
sub
test
sub
filds
sub
inc
lods
xchg
in
fsubs
out
arpl
mov
pop
mov
test
xchg
pop
insb
aas
mov
fwait
cwtl
dec
fcoml
std
jg
dec
subl
xlat
stos
testl
mov
jp
loop
out
rcrl
out
dec
add
mov
cmpsl
leave
sub
xorb
ret
pop
jno
push
scas
insb
lahf
adc
into
int
inc
mov
dec
jl
add
mov
sub
xor
lcall
jl
lcall
sahf
or
test
push
pop
mov
imul
push
jnp
sbb
jl
dec
sbb
or
sbb
leave
xor
sub
fisttps
test
adc
add
jl
call
les
mov
mov
or
mov
adc
and
xchg
push
xor
fcomi
dec
mov
bound
cld
orl
or
imull
imul
gs
stc
inc
insl
mov
pop
idivb
daa
lret
inc
cmp
inc
mull
and
jbe
pop
inc
fnstsw
push
in
push
jg
cmp
cwtl
outsb
mov
mov
icebp
stos
test
bswap
jb
scas
and
push
insl
lret
call
enter
pushf
mov
scas
push
fs
or
je
dec
stc
sbb
enter
aas
stos
push
out
fsubl
dec
lods
pop
jne
xchg
sahf
andl
call
test
jl
adc
subb
push
mov
dec
int
sub
mov
mov
sbb
ffree
mov
negb
mov
pop
xchg
dec
push
mov
mov
test
shl
ss
pop
ljmp
jge
in
cs
sti
les
test
jle
push
lea
xchg
pop
sti
sbb
pop
loope,pt
dec
cli
outsl
leave
pop
sub
dec
repnz
push
ss
pop
mov
cli
xchg
sub
dec
push
dec
repz
jmp
nop
fsubp
or
outsb
pop
sub
and
cld
add
fwait
leave
outsb
add
lahf
cmp
cmpb
jo
inc
sahf
xchg
stos
outsb
shlb
test
pop
cmp
push
stos
outsb
repnz
faddp
mov
popf
xchg
mov
lds
mov
mov
jg
cmp
filds
adc
adc
inc
imul
xor
pop
xchg
shll
xor
add
les
xor
jp
xor
shlb
adc
push
lcall
lods
xchg
sahf
mov
dec
adc
sbb
test
push
inc
mov
cli
inc
cld
int
pop
psrld
xchg
paddb
jl
sahf
divl
ja
mov
ds
iret
cmp
je
imul
pop
loop
mov
xchg
bound
add
or
test
fwait
nop
sbb
push
jnp
push
xor
mov
mov
pusha
out
mov
fmul
add
pop
in
fcoms
or
mov
bound
ja
push
or
xlat
dec
push
pop
jmp
or
push
mov
mov
arpl
dec
test
sub
pop
mov
clc
sti
fnsave
xor
es
push
ret
mov
mov
jle
or
lods
mov
pop
fsubrp
shrb
inc
cmc
lods
mov
sti
jns
shl
jle
cmp
cltd
jbe
or
mov
jmp
jo
lea
test
stos
jecxz
mov
fsts
setg
lcall
scas
hlt
movsl
pop
add
dec
stos
mov
push
cmp
jae
iret
mov
push
rorl
in
das
add
add
adc
sarl
push
test
jmp
out
jb
inc
roll
lret
je
hlt
cmpl
sub
mulb
sbb
sub
mov
lahf
pop
leave
add
dec
es
cmpsb
repz
jo
icebp
int
add
inc
inc
loop
jecxz
sbbl
mov
sub
and
pop
aad
mov
lahf
jp
and
mov
cwtl
pop
jg
or
sbb
call
mov
add
inc
dec
out
mov
push
cld
sbb
fs
fadd
add
sti
dec
cmp
leave
adc
push
push
pop
aaa
xchg
loope
aad
cmp
inc
sbb
jp
pop
dec
shlb
clc
stos
cltd
xchg
stc
inc
in
push
push
rorl
in
cli
jb
adc
push
repz
lret
ds
aas
push
mov
fistps
jmp
in
adc
addb
pop
and
loope
mov
push
imul
bound
mov
jae
push
insb
lods
lahf
cmp
dec
mov
shlb
xor
dec
fcmove
adc
mov
out
sub
mov
adc
mov
dec
or
cmp
outsl
push
out
nop
xor
paddusw
xchg
sti
push
jno
push
or
fs
leave
lods
pop
js
test
mov
pop
iret
xchg
sarb
test
push
imulb
adc
bnd
pushf
sbb
and
sbb
push
xlat
cmp
jbe
jbe
fwait
mov
add
outsb
push
adc
add
sahf
leave
jg
or
mov
xchg
adc
jmp
push
popf
push
je
mov
cmp
pop
lea
mov
shr
das
aad
inc
inc
lods
cmpsl
fistpll
inc
stc
adc
pop
scas
sbb
jecxz
dec
inc
xchg
arpl
lcall
loopne
jmp
cltd
sbb
add
adc
test
xor
dec
test
sbb
dec
and
mov
mov
pop
mov
lock
jg
pop
inc
insb
aaa
scas
aam
mov
sbb
je
pop
inc
fnstsw
mov
cmpsl
inc
inc
adc
adc
pop
es
cltd
mov
sub
cmp
hlt
std
hlt
fidivrl
jmp
mov
mov
sbb
clc
mov
xchg
lds
cli
dec
sbb
call
cwtl
and
inc
js
add
xchg
imul
scas
mov
shlb
mov
ds
fwait
add
mov
add
pushf
sbb
out
push
jmp
js
mov
jno
sub
adc
aam
lods
loope
jmp
and
adc
outsl
cmp
xchg
stos
push
stos
sbb
out
movsl
scas
mov
shr
out
pop
lea
mov
shrb
push
pop
test
mov
sahf
outsb
std
jp
dec
xor
sahf
test
xchg
fildll
pop
sub
loop
pop
add
popf
sub
fdivs
mov
and
jne
int
rolb
out
jmp
pop
mov
push
lahf
ficoms
aad
shrl
ja
mov
sarl
dec
mov
js
adcl
inc
into
lcall
scas
pop
clc
jmp
jae
mov
aad
js
mov
dec
jnp
or
iret
je
adc
adc
lahf
add
push
mov
out
push
adc
sbb
int
adc
outsb
out
pop
idiv
inc
lret
xor
fstps
iret
test
push
fsubl
inc
pop
push
pop
pop
gs
add
dec
sbb
jae
push
testl
in
push
add
ret
mov
testb
mov
out
dec
mov
jno
jmp
mov
sub
sarb
jp
cmp
xchg
or
js
mov
mov
push
test
mov
out
mov
xchg
jns
sub
sbb
loop
sub
and
das
push
ret
lea
fimuls
lret
in
xlat
lock
int3
jmp
ret
jne
xor
andl
jns
imul
inc
inc
push
xchg
pop
fimuls
jge
jnp
xchg
sub
fcoml
cld
jb
lahf
cmpsb
repnz
and
sti
inc
leave
push
leave
hlt
fs
leave
xor
in
je
push
lcall
cmpsl
and
outsl
jbe
mov
std
movsb
jle
sub
mov
dec
hlt
xchg
lcall
aam
enter
xor
mov
ds
or
xchg
inc
jge
lods
sar
add
lock
ds
lret
mov
int
into
clc
sti
jmp
ret
inc
inc
sbb
mov
inc
mov
dec
xchg
xchg
popf
xchg
sbb
xor
sbb
jmp
xchg
jae
dec
sub
add
xorb
sahf
cltd
push
cs
lahf
lret
pop
nop
xchg
sbb
das
mov
cmp
xchg
stc
jno
mov
and
mov
adc
inc
lcall
cld
dec
inc
lea
lcall
in
icebp
mov
lahf
idiv
pop
out
and
dec
dec
fistpll
inc
xlat
jbe
outsb
fistpll
xor
jle
imul
mov
pop
mov
outsb
xchg
daa
add
test
push
push
sti
addb
cmpsb
movlps
nop
loop
hlt
cltd
sbb
or
or
test
jne
xchg
cmpb
loope
sti
sub
lea
outsb
dec
dec
push
dec
sahf
pushl
xchg
rol
in
mov
es
nopl
cmp
lods
push
adc
pop
and
jno
dec
pushf
mov
mov
mov
push
pop
lcall
clc
add
xchg
or
imul
insb
aam
add
scas
mov
pop
cld
lahf
js
mov
sarb
push
fnstenv
lea
fwait
cmp
ja
jg
into
inc
mov
cmp
daa
paddsb
sub
xchg
imul
cs
mov
rcrb
xor
xchg
mov
sti
pop
push
lock
cmp
roll
jne
sub
loopne
mov
xchg
adc
out
pushf
stos
or
ja
or
nop
nop
shlb
fs
inc
fs
cltd
jmp
inc
mov
outsb
add
sbb
inc
or
sub
xlat
jp
cld
sahf
push
lock
xor
test
shl
mov
mov
dec
push
mov
sbb
push
or
dec
scas
xchg
push
pop
js
sbb
js
xor
lds
dec
repnz
sub
and
insl
cmpb
xchg
pop
sbb
jp
or
mov
jnp
pop
and
adc
xchg
xor
push
lret
xor
mov
test
out
rolb
ret
out
sti
mov
inc
mov
outsl
out
cmp
lret
pop
adc
repz
or
xor
inc
mov
lret
cmpsb
push
dec
mov
pop
in
xchg
nop
dec
and
mov
rcrl
xor
ror
dec
mov
cltd
fistps
bound
ss
cmp
push
jne
jae
lods
data16
adc
leave
dec
arpl
xor
outsl
movsb
mov
add
sbb
sbb
mov
or
popf
bound
popa
cmpsl
jo
pop
popf
test
aas
cmp
bound
pop
jg
in
sbb
loop
jo
mov
add
add
cld
dec
clc
ljmp
fisubl
jo
aam
popa
jl
push
inc
arpl
cmp
movsl
scas
inc
add
ret
lahf
sarb
ss
push
mov
scas
sbb
mov
and
sbb
outsb
push
push
in
aam
add
xor
push
orl
push
sub
pop
mov
mov
icebp
inc
cmp
hlt
scas
fsubs
pop
scas
mov
xchg
decl
loopne
dec
xor
mov
xor
mov
jae
shrl
icebp
mov
sbb
sbb
push
sbb
inc
sti
mov
mov
cltd
cmp
mov
push
movl
sub
add
adc
stos
adc
fisubrl
mov
cmp
lock
push
cmp
lahf
scas
pop
xor
mov
jmp
adc
fstpt
scas
js
jnp
out
test
mov
add
test
cli
sarl
sbb
test
mov
inc
ret
sub
in
cs
cmp
adc
and
sbb
in
add
add
dec
mov
cmc
add
mov
pop
mov
into
mov
jbe
hlt
ret
pop
xor
xor
add
xor
movsb
push
pop
xchg
mov
adc
mull
jge
mov
push
cwtl
std
sub
mov
stos
loope
mov
lods
or
cmp
mov
or
js
xchg
lret
adc
jbe
insb
add
pop
data16
xchg
movsb
test
gs
mov
pop
dec
movsl
out
clc
pop
repnz
inc
sbb
fistps
pop
enter
ffreep
aaa
bound
imul
stos
mov
shlb
and
add
pop
add
inc
push
jecxz
xor
or
push
push
gs
and
pop
adc
repnz
cwtl
das
mov
mov
je
mov
mov
add
sbb
out
imul
aas
xchg
xor
sub
cmc
es
cld
push
sti
lcall
mov
sahf
pop
divl
fwait
shl
and
out
pop
inc
mov
xor
xchg
and
adc
out
add
int3
and
cmp
cmp
mov
xchg
out
push
jns
or
call
ret
pusha
and
dec
lock
mov
or
iret
pop
not
inc
inc
aaa
push
into
ja
push
cwtl
cmp
jmp
jb
adc
xchg
and
push
pushf
dec
pop
insb
pop
mov
push
iret
insl
inc
sar
inc
insl
cmp
jae
add
stos
push
sbbb
dec
jge
cmp
mov
inc
fistps
aad
clc
xchg
in
cmp
fidivs
mov
and
adc
iret
repz
out
subl
xchg
jle
cmc
adc
pusha
mov
rcrb
fdivrs
and
popf
and
loopne
repz
fsubrs
inc
pop
xchg
fs
cmp
and
dec
mov
in
ljmp
inc
push
bound
imul
sub
mov
shlb
inc
mov
cmp
inc
loope
fidivrl
xor
lods
push
inc
jae
push
roll
jp
add
fldt
gs
push
xchg
pop
pop
or
rep
fsubp
push
outsb
jp
mov
or
cmp
sbb
xor
ret
js
das
jg
movl
enter
xor
inc
mov
out
adc
cmpsb
or
or
xor
mov
gs
hlt
jg
inc
dec
les
push
nop
pop
xorb
xchg
fcomps
jo
pop
xor
cmpsb
jp
xchg
jge
insl
jo
adc
int3
or
mov
cmc
jns
pop
lods
pop
adc
bound
mov
mov
xlat
roll
and
jge
fs
out
call
xchg
cmp
jp
aad
cltd
icebp
push
repz
cmpsb
stos
out
jnp
cmp
loopne
mov
out
in
lcall
inc
dec
inc
sub
mov
fldenv
and
xorl
sbb
arpl
xchg
mov
and
jg
xor
jmp
sbb
cmp
imul
lock
fisttpl
das
out
inc
lret
popa
mov
aaa
icebp
das
push
xor
sbb
mov
add
mov
nop
and
xchg
mov
push
mov
mov
jno
adc
pop
repz
xchg
outsb
sbb
xor
adc
aad
out
push
ficoms
js
in
in
and
cwtl
jnp
mov
mov
dec
mov
adc
imul
add
inc
sub
cs
inc
dec
stc
ret
loope
dec
add
jne
mov
je
int3
rclb
and
sti
jmp
pushl
sbb
and
or
scas
rcr
shl
fisttpll
adc
or
add
jmp
pop
daa
push
aas
adcb
aas
ja
mov
int3
mov
mul
aam
adc
push
out
add
adc
stos
andb
in
jmp
pop
fidivrs
imul
sbb
push
ss
jno
jns
mov
sbb
fisubs
and
dec
out
sbb
arpl
mov
fprem1
mov
lea
jne
push
arpl
insb
xchg
sahf
dec
bound
adc
icebp
out
test
pop
mov
lods
mov
leave
sbb
sbb
cld
dec
fsubr
notb
ret
lds
mov
mov
out
mov
cmpsb
lds
push
fsubs
daa
into
pop
inc
std
jp
lcall
mov
bswap
movsl
leave
popf
aaa
add
push
orl
pmaxsw
imul
sbbb
arpl
sahf
loop
std
ret
enter
mov
gs
and
xor
in
sub
ljmp
arpl
mov
sub
inc
ret
test
mov
je
rclb
add
sahf
sarb
clc
mov
add
sti
xchg
sub
out
cmc
iret
or
jo
incl
stc
jnp
mov
jg
loopne
xchg
jnp
inc
mov
std
int3
subb
lods
fisttps
pop
test
mov
fmuls
cmp
lahf
xor
jp
es
lret
xchg
imulb
jns
xor
jo
repnz
mov
jbe
lods
push
inc
mov
cmp
push
add
imul
cltd
mov
aad
mov
or
xchg
cld
aaa
lods
or
fiaddl
add
xchg
out
stos
std
pusha
mov
mov
push
clc
std
les
push
insb
push
xor
cmc
sub
inc
pop
incl
sub
mov
adc
push
shl
adc
out
inc
push
mulb
subl
leave
icebp
neg
loope
out
add
xor
lods
mov
sub
fidivrs
adc
xorb
pop
imul
xor
jns
mov
daa
add
cmp
pop
fstpt
cmp
jmp
add
jnp
shld
push
mov
imul
xor
push
aam
cmp
pop
sbb
movsb
paddsw
inc
mov
mov
in
loopne
sbb
les
xchg
insl
push
add
or
mov
insl
push
mov
mov
fnstcw
jecxz
inc
ret
mov
add
ret
mov
imul
imul
dec
enter
lea
icebp
fsubs
or
pusha
mov
mov
or
push
xchg
and
addr16
dec
test
push
repnz
lds
and
or
imul
sub
decb
inc
sbb
aaa
xor
fmul
scas
mov
xchg
outsl
mov
loope
jbe
jl
jmp
fidivs
pop
dec
lret
fwait
mov
mov
negl
mov
cmp
push
jns
sbb
cmp
add
mov
dec
dec
add
mov
pop
push
jg
cs
cmp
les
xor
xor
out
aam
cmp
cwtl
cmp
dec
test
ljmp
add
mov
cmp
xchg
mov
imul
jmp
mov
push
xchg
sub
xchg
loopne
sbb
mov
inc
in
or
testl
push
mov
mov
jnp
lods
adc
push
arpl
xchg
lds
or
shl
jmp
pop
fimull
jl
lds
in
dec
sub
mov
andb
cmc
aaa
push
aad
mov
andl
and
sub
sar
pushf
jp
fiadds
ss
xor
push
call
ljmp
pusha
xchg
cmpsl
and
in
ftst
scas
xor
xchg
inc
imul
inc
lret
mull
cmpsl
and
pop
or
xor
clc
imul
mov
push
in
test
push
addr16
icebp
cld
xchg
mov
int3
subl
shl
sarb
in
mov
or
insl
mov
imul
xor
stos
popa
fildl
xchg
pop
xor
push
ljmp
aas
sahf
repnz
cltd
orb
cmp
movsb
xchg
dec
shlb
ret
sbb
pushf
in
inc
cmp
ror
stos
pusha
cmp
fldl
add
mov
fadds
fistpl
mov
mov
jecxz
mov
mov
or
addr16
xor
jne
inc
jge
mov
iret
xor
stc
xor
sub
dec
or
add
mov
lcall
pusha
dec
adcl
or
dec
fwait
fwait
jmp
push
imul
xor
push
pop
and
inc
popa
sti
mov
jnp
pop
pop
mov
mov
or
repnz
sbb
mov
xchg
mov
dec
ret
mov
rcrb
pusha
lret
inc
sub
das
mov
lret
daa
outsb
addr16
js
insb
js
stos
hlt
hlt
mov
push
mov
adc
mov
cmpl
mulb
mov
jge
adc
test
lods
sbb
sbb
nop
loope
fldlg2
aas
aam
int
push
dec
xor
fnstenv
pop
sbb
and
pop
adc
inc
inc
fwait
xlat
notl
dec
cld
arpl
sbb
inc
out
ljmp
pop
leave
out
out
add
add
cltd
sub
jo
adc
jge
inc
lahf
mov
das
pop
outsb
gs
push
inc
push
fs
gs
lret
sbb
add
mov
out
push
jle
xor
add
xchg
sbb
and
test
rcr
pop
sbb
psubb
in
dec
cmc
or
sub
add
ss
daa
adc
jo
ror
stos
push
mov
cmp
push
fdiv
push
decl
mov
test
mov
outsl
push
cmp
or
mov
sbb
cmp
inc
adc
dec
std
shrl
es
outsb
shr
xorl
and
xchg
bound
push
outsb
fidivrs
lret
push
pushf
stos
das
sub
fbld
mov
int3
inc
xchg
pusha
jo
das
out
outsb
add
fidivs
test
sub
insb
xor
shl
ss
lahf
mov
gs
outsb
cmp
mov
and
sub
mov
sbb
mov
adc
jmp
adc
mov
xchg
ljmp
pop
mov
std
sahf
push
cmpsb
mov
call
xchg
mov
lcall
adc
cs
leave
jno
insb
or
mov
jne
fcomip
mov
mov
popa
pop
loop
sahf
mov
imul
dec
rcrb
shlb
lcall
sbb
test
xchg
jp
add
xchg
incb
mov
call
sarb
aam
ret
fwait
movsb
shlb
mov
jbe,pt
adcb
jbe
jle
cmpsl
mov
scas
pop
mov
and
mov
shlb
lahf
clc
repz
jg
mov
iret
sub
sub
aam
jo
jbe
and
ds
fidivs
sub
sub
test
fwait
repz
or
push
push
sbb
movsb
ss
das
cmp
add
cld
iret
ret
scas
adc
int
jno
mov
sbb
push
movsb
aas
ds
xchg
add
cmp
pop
ds
outsl
push
les
out
cmpsb
pusha
xor
xchg
aam
mov
push
fsubr
and
int
inc
and
enter
mov
mov
dec
lock
and
jae
lahf
insb
pop
int
enter
sub
fistpll
dec
es
adc
push
call
push
sub
mov
xchg
cli
in
push
out
in
fsubrl
arpl
fldenv
cmp
fstps
sub
in
out
addr16
pop
jnp
fwait
cli
sbb
push
cmpsb
pop
jmp
sub
sbb
add
jae
lock
sbbb
orb
hlt
cmp
jns
testl
mov
fisubrs
call
dec
push
out
jg
cmp
sbb
notb
lds
inc
dec
push
lock
gs
iret
test
out
lock
jae
mov
jns
jmp
test
enter
addr16
pop
inc
sbb
dec
clc
pop
stc
out
jp
sarl
push
lods
cmpsb
imul
and
scas
sbb
mov
add
cltd
nop
ja
mov
mov
hlt
xchg
xchg
inc
mov
in
cmp
inc
mov
test
cmp
push
fnstcw
cwtl
sub
jle
stc
test
xor
cmp
inc
or
scas
and
cli
adc
add
cld
jmp
daa
dec
mov
pop
add
es
pushf
sub
icebp
xchg
mov
std
pushf
aam
jne
inc
lock
jae
ja
and
ss
push
pusha
sbb
mov
sbb
pusha
aam
dec
mov
mov
inc
outsb
mov
repz
mov
pop
test
fidivrs
xorl
pushf
xchg
in
icebp
adc
adc
jb
and
pop
sbb
jns
adc
je
inc
add
xchg
rclb
lret
mov
xor
je
mov
cs
adc
fimuls
add
ret
fnsave
repz
cmp
cmpsb
or
jnp
xchg
lock
mov
call
ja
in
push
xor
xor
cli
pop
icebp
lock
jle
push
insl
les
xchg
inc
shl
fildl
cmp
inc
mov
pop
inc
pop
insb
mov
leave
insl
cmp
dec
add
or
movsl
in
xchg
cmp
sbb
in
aad
out
jl
pop
xor
pop
mov
hlt
hlt
push
mov
outsl
lea
mov
stos
mov
push
mov
mov
sti
or
inc
pushf
inc
inc
cs
insb
dec
mov
out
pop
cmpsl
inc
xchg
cmpsl
push
add
cltd
mov
pop
ja
arpl
fdivrl
aas
out
aas
adcl
mov
jmp
lods
pop
aaa
repz
cmp
mov
nop
movsb
inc
dec
std
jbe
or
int3
mov
push
insb
or
cmp
cmpsl
xor
bswap
dec
shrl
sub
cwtl
jmp
push
adc
mov
ret
mov
out
and
sbb
shll
jmp
inc
cmp
xchg
inc
sbb
movsl
ret
cmp
enter
enter
lock
sarb
mov
xor
out
scas
push
pop
pop
jecxz
push
xchg
sbbl
pop
pop
dec
scas
sahf
mov
mov
imul
imul
xor
inc
dec
shl
jle
outsl
mov
outsb
jl
cltd
imul
mov
dec
rorl
cmp
sbb
push
lods
loope
pop
testl
subl
in
fldt
lret
mov
cli
xlat
lods
lock
mov
nop
dec
inc
scas
pop
xchg
add
imul
mov
clc
xchg
add
outsb
lods
loopne
adc
mov
xorb
sbb
xor
cmpsb
scas
cmp
dec
fsubp
data16
movsl
dec
sub
push
or
cmpsl
dec
pop
xor
or
cmp
aas
adc
jg
lahf
jno
stos
int3
or
jns
xchg
inc
jns
push
aas
adc
call
cli
sbb
mov
mov
sbb
out
mov
fidivrl
movsl
add
js
xchg
hlt
imull
rcrb
cltd
jae
aad
in
fidivrl
inc
cmp
dec
popa
push
mov
es
stc
fidivl
adc
mov
aam
mov
ljmp
imul
mov
mov
das
push
adc
aad
pop
gs
lret
adcb
aad
or
arpl
hlt
and
jo
and
stos
cmp
xor
repnz
fcomps
or
jmp
pop
cld
or
mov
add
jmp
cwtl
jle
scas
insl
cmpb
xor
push
scas
les
mov
out
sbb
mov
sub
lea
cmp
and
inc
add
movsb
mov
imul
or
xor
xchg
scas
leave
hlt
sbb
rcr
mov
jl
ror
dec
loop
orb
add
dec
dec
and
fiadds
mov
div
push
imul
pop
cmp
test
fistpll
cmp
pop
push
mov
push
inc
and
insl
adc
push
cmpsb
mov
and
mov
sbb
orb
pop
pop
in
int3
jb
mov
stos
sub
dec
xor
call
xor
mov
pop
inc
cltd
jae
xor
es
dec
push
push
sub
push
lock
sub
das
ret
idivl
inc
mov
sub
cmpsb
or
jo
xchg
cwtl
test
in
mov
arpl
iret
ror
add
jge
nop
dec
loopne
in
lods
test
out
aaa
jbe
das
xchg
ss
orl
sbb
mov
fwait
xchg
inc
pusha
aaa
jae
movsl
jecxz
xchg
xor
cmp
lcall
out
dec
loope
and
lea
push
imul
mov
inc
aad
mov
add
mov
sbb
mov
negb
scas
loopne
jg
inc
inc
or
jle
dec
adc
loopne
mov
xchg
iret
add
stos
add
out
gs
mov
js
rol
mov
push
ret
pop
cmp
fcomps
mov
pop
and
inc
add
scas
cltd
jmp
mov
lahf
inc
movsl
push
adc
test
stos
mov
stos
xchg
pop
movsb
add
clc
pop
cli
mov
mov
mov
xchg
sub
stos
add
jle
jae
xlat
mov
cmpsb
dec
js
or
mov
pop
push
xor
cltd
mov
inc
cmp
jno
sbb
push
inc
mov
add
and
sbb
fwait
bound
lds
inc
out
sub
add
inc
jo
js
cli
mov
stos
adc
pop
adcl
mov
jl
xchg
daa
sub
imul
xchg
loopne
jg
test
jl
dec
mov
mov
cs
cmp
push
or
inc
data16
jmp
mov
cmp
cmpsb
ljmp
call
fs
outsb
sbb
stos
aam
sub
xchg
cmp
loope
mov
mov
in
inc
mov
js
sub
xchg
leave
in
push
aad
into
push
xor
adc
imul
pop
xchg
fcoms
out
lcall
repnz
leave
or
repz
cmp
data16
loop
mov
or
stos
bound
aaa
arpl
fisubs
push
bound
xor
cmp
sbb
xchg
push
test
ja
adc
sub
sarl
mov
push
stos
xchg
mov
mov
sti
inc
or
hlt
cltd
out
addr16
scas
loope
inc
enter
jo
mov
mov
jne
ss
xor
inc
test
mov
jg
pop
or
pop
insb
lock
pop
inc
push
adc
loope
mov
cmpsl
outsb
jne
rorw
cmpsb
aas
mov
pop
ret
int3
jg
xchg
mov
lret
loop
mov
jecxz
lock
push
jecxz
xchg
daa
adc
out
dec
and
mov
or
es
arpl
leave
mov
shll
movsb
sbb
fsubrp
mov
push
int3
add
in
xchg
add
and
out
inc
repz
cmpsl
insl
xchg
data16
pop
sbb
push
or
pop
lea
push
cmp
icebp
xchg
or
xor
js
scas
outsb
inc
inc
xchg
js
subl
push
adc
mov
movsl
clc
adc
or
mov
xchg
cld
imul
inc
sbbl
dec
std
jns
sbb
mov
xlat
jmp
in
outsl
sub
pop
mov
lret
jle
add
out
mov
xchg
mov
loopne
pushf
fcomps
xchg
dec
iret
pop
sti
cmp
lret
xor
shlb
out
arpl
in
dec
pop
insl
sbb
mov
addb
ret
mov
sbb
mov
sub
lcall
lcall
xor
inc
push
add
stos
mov
out
mov
inc
inc
xor
pop
xchg
icebp
push
in
lcall
in
in
adc
push
mov
or
cmp
cld
mov
mov
dec
imulb
in
lods
mov
push
shrb
push
outsl
pop
pusha
sbb
jne
lods
or
cmc
pop
repnz
scas
dec
ss
int
orb
mov
aam
hlt
lret
mov
jl
cltd
pop
inc
jl
adc
pop
push
push
and
inc
dec
in
cltd
sub
sarb
jle
mov
xor
jns
jns
inc
pop
clc
shrl
out
out
shlb
add
cmp
and
inc
jge
cmp
xor
pop
add
cmp
stos
push
adc
rorl
insb
lea
sub
repnz
inc
jge
mov
lea
and
iret
ss
daa
xorl
jbe
or
push
fucomip
popa
dec
loope
mov
test
cmp
push
pop
xor
mov
cmp
scas
lea
xor
pop
out
adc
je
fistps
aaa
shlb
pop
popl
add
pshufw
ljmp
mov
mov
mov
dec
and
xchg
ljmp
jno
std
sbb
repnz
test
imul
mov
ret
scas
jnp
lods
and
pop
adc
aaa
stos
enter
inc
or
imul
test
sub
jmp
mov
push
mov
faddp
insl
cmp
sahf
push
sub
test
pop
cwtl
jnp
sbb
fiadds
movl
cli
xor
mov
adc
mov
jp
stos
push
int3
adc
xor
std
inc
sbb
rcl
pop
in
cmpsl
mov
imul
insl
jecxz
xchg
in
jo
popf
jmp
adc
mov
mov
je
and
mov
jg
rcl
xchg
jno
fiadds
popf
sbb
imul
xor
push
xchg
mov
inc
xor
jp
sub
dec
out
mov
divl
sti
mov
push
popf
cmp
inc
lahf
push
repnz
jg
gs
sbb
lds
or
add
jg
xor
pusha
jne
dec
mov
mov
je
repnz
sbb
inc
cltd
lods
shrb
stc
fmulp
pushf
cmpb
pop
push
mov
push
sub
or
mov
insb
sbb
mov
in
cmp
dec
adc
push
sahf
push
fld
lods
adc
add
insl
js
pop
cmpb
mov
fsubl
and
or
xor
jnp
dec
xlat
call
mov
shrb
lods
aam
push
cmp
repnz
aaa
pop
fnstenv
arpl
push
xor
sub
mov
loop
pop
sbbl
fcompl
icebp
insl
jo
xchg
fmuls
fidivrs
xchg
sub
and
sub
cmp
fistl
xor
aam
dec
adc
pop
mov
push
xchg
pop
ficomps
pop
and
adc
sub
ss
mov
jp,pt
adc
loope
insl
jne
sbb
lods
fildll
xchg
popf
loop
mov
xchg
pusha
icebp
cmp
out
mov
cmp
daa
mov
out
pop
xchg
mov
pop
lods
sahf
pop
add
call
dec
rcrb
insl
inc
xchg
pop
and
inc
mov
cld
jmp
call
in
mov
and
jle
fadds
jl
adc
pop
mov
xor
lcall
dec
inc
or
leave
cmp
mov
pop
popa
out
adc
loop
adc
jno
mov
pop
and
mov
sub
or
jmp
mov
fists
fs
and
pushf
jne
adc
jle
or
mov
repz
and
cmc
xchg
lds
insb
fistpl
lock
mov
jae
jl
call
sarb
xor
dec
push
jle
dec
arpl
addb
aad
mov
and
jmp
test
push
int3
inc
fs
inc
pop
mov
inc
push
es
into
sti
jo
subl
rorl
ss
dec
dec
mov
push
xor
jmp
jne
test
inc
pop
das
sbbb
inc
cmc
jns
add
rcl
repz
pop
fistl
push
sub
mov
popa
outsl
add
adc
add
inc
or
jmp
xchg
lea
mov
push
xchg
inc
mov
jne
insb
jae
dec
fwait
adc
icebp
pop
add
out
jb
xchg
idivb
out
pop
xor
and
mov
lds
cmp
js
in
insb
add
les
dec
mov
fwait
jnp
xor
xor
imul
mov
mov
inc
sbb
mov
in
push
push
cmp
inc
call
mov
sbb
mov
fs
mov
xor
outsb
mov
addr16
push
xchg
in
xchg
inc
cmpb
jo
ljmp
mov
xor
pop
in
movsb
stos
push
in
xchg
pop
lods
fdivl
es
out
adc
push
or
mov
inc
or
adcb
jne
adc
loopne
sbb
jbe
mov
dec
push
test
push
mov
sub
pop
andl
dec
lret
in
xor
movsl
iret
add
enter
xchg
mov
push
int3
repnz
pop
push
dec
outsb
add
test
std
pop
das
add
insb
pop
icebp
fldenv
xchg
xchg
mov
push
or
fmuls
xchg
test
xchg
mov
push
lret
mov
stc
or
xchg
test
and
repz
sub
jo
inc
stc
fdivrs
data16
out
mov
filds
clc
imul
pop
or
mov
cmpsb
pop
push
dec
movsb
das
jmp
idivl
sub
push
mov
jae
xor
icebp
mov
pop
rolb
sarl
xchg
clc
jg
nop
sub
mov
or
pop
aam
xchg
push
fs
mov
jmp
adc
sbb
in
pusha
ja
xor
push
rolb
fs
clc
jae
leave
testb
imul
adc
xor
mov
xchg
xorl
mov
popf
jg
lahf
mov
mov
les
and
push
outsb
adc
sti
cs
or
push
dec
rorl
pop
imul
dec
out
loop
fdivr
dec
fidivl
or
and
shl
ficompl
xchg
cmc
gs
jns
frstpm(287
enter
xor
sbb
sti
lea
mulb
mov
xor
jns
xchg
xchg
mov
fimuls
jo
les
sahf
jnp
xor
insb
dec
lods
mov
cltd
dec
enter
sub
cmpsb
lcall
mov
cmpb
mov
stc
mov
xchg
inc
push
add
test
sub
test
dec
je
or
xor
aad
stos
iret
pop
hlt
and
imul
fstl
xor
push
inc
push
insl
test
ror
ljmp
mov
mov
fidivrl
aaa
add
lcall
mov
xor
and
or
xchg
fnstsw
pusha
cld
push
jl
and
dec
jne
cmp
in
movsb
xchg
inc
cmp
ds
dec
stos
test
xor
lret
call
adc
lcall
xor
std
fnsave
cmp
or
mov
and
jne
push
inc
cmpsl
mov
scas
adc
jg
es
ljmp
in
cmp
aas
cmp
mov
test
push
rorl
das
push
mov
sbb
cmp
movsb
sbb
aaa
jb
or
fscale
repnz
push
stc
jb
cmp
xchg
pusha
fcoml
lret
shrl
push
adc
bound
in
pop
outsb
add
jge
in
pop
sbb
xorb
cmp
and
out
pop
xchg
mov
and
mov
xchg
jae
xor
inc
push
and
or
cmp
lret
dec
pop
pop
lock
cltd
push
movsb
pop
and
lcall
push
scas
rclb
mov
push
jp
xchg
cltd
inc
adc
out
xchg
inc
push
and
xlat
lret
push
aam
imul
push
decb
mov
pop
stos
pop
sub
dec
cli
shrb
fidivl
mov
adc
pop
jno
cmp
sub
push
lods
add
subb
inc
lcall
cmp
xor
xor
rcrl
sub
popf
shrl
mov
fisubrl
xor
insb
test
pop
nop
ss
mov
push
lcall
icebp
and
push
add
dec
pop
or
push
mul
jge
adc
xchg
ljmp
data16
outsl
rorb
xor
add
scas
dec
mov
out
test
sbb
loop
stc
adc
dec
pop
bound
psubd
loope
xor
mov
fwait
cmp
cld
popf
and
adc
inc
push
outsb
cld
ds
out
or
lods
mov
mov
xchg
jge
mov
mov
add
sbb
xor
sbb
xchg
xchg
sbb
push
leave
adc
sbb
cmp
in
inc
and
sbb
jno
add
in
fidivl
jno
pcmpgtw
fs
jle
fadd
add
sbb
clc
mov
out
xlat
cmp
push
imul
jecxz
les
mov
mov
mov
scas
mov
enter
fstpl
jmp
int
mov
mov
das
out
push
sub
or
imul
pop
mov
sub
scas
movsl
pop
lock
mov
in
pop
stc
insb
adc
pusha
decb
mov
loopne
fisubrs
sbb
shlb
incb
push
pop
xor
test
push
cmp
lret
add
cmp
insb
in
test
adc
jg
sti
loop
andb
call
cld
pop
xchg
negl
lcall
add
aam
popa
and
push
sub
dec
sbb
adc
inc
adc
ret
lods
mov
pop
sub
dec
les
pop
in
mov
add
push
mov
rcrl
push
js
sbb
xchg
sub
out
loope
sbb
xlat
sub
pop
adc
and
andb
faddl
std
ja
and
lahf
addr16
sbb
sbb
cli
or
loop
jmp
or
mov
fdivrl
jae
aas
sbb
or
test
add
add
xchg
mulb
outsl
in
xor
dec
mov
repnz
or
xchg
lcall
sbb
scas
pusha
sub
dec
jge
or
sub
mov
dec
rdpmc
xchg
arpl
inc
sbb
adc
pop
rorb
xor
mov
in
faddl
popf
shl
push
shr
adc
frstor
lret
push
stc
sub
xchg
and
std
jmp
jo
es
sbb
js
icebp
mov
mov
clc
loop
test
out
xchg
popf
pushf
pop
xchg
sti
fmuls
push
iret
stc
out
enter
lods
js
enter
fisubrl
dec
nop
adc
cwtl
cmp
in
cwtl
fldl
push
cmpsb
stos
dec
fnstcw
inc
pop
xor
adc
sti
mov
cs
aam
aas
mov
xor
adc
jmp
dec
push
cli
sub
clc
mov
bound
or
pushf
push
and
aad
call
xor
andb
enter
ret
xchg
pop
outsb
repz
mov
dec
xor
fbld
add
mov
lcall
icebp
clc
xor
cltd
enter
cltd
gs
fwait
adc
popa
push
clc
or
bound
xchg
mov
leave
mov
adc
xchg
and
test
and
inc
add
or
push
pop
popa
sbb
push
cmpsb
xlat
lods
es
sub
loope
repnz
insl
nop
es
in
test
aas
test
lcall
lret
fwait
repnz
jnp
mull
js
mov
ret
inc
insb
jge
push
ja
or
xchg
imul
arpl
sub
cmp
jg
orb
mov
loopne
setl
movsb
xchg
popf
add
jge
popf
cmpsl
rolb
inc
std
loopne
or
push
dec
mov
dec
stc
dec
repnz
leave
add
int
test
out
and
stos
mov
mov
mov
xor
mov
mov
push
cmp
mov
xor
cli
shr
xor
or
lret
decl
adc
fldcw
ret
jns
aaa
filds
push
add
pop
insl
cltd
xchg
lods
arpl
dec
or
add
xor
cmp
mov
jbe
mov
js
cli
outsb
mov
xchg
fists
mov
dec
bound
insl
imul
imul
mov
ficoml
and
push
push
pop
sub
pop
mov
xchg
jo
cmpsb
fisubl
lods
out
add
sahf
mov
sbb
cmp
loope
pop
loop
iret
sub
push
add
jbe
pop
ljmp
and
pusha
daa
adc
arpl
jb
mov
out
jmp
adc
cwtl
xor
ret
arpl
mov
loope
xor
fisubrs
add
cmp
jo
pop
pop
pusha
rcr
mov
mov
insl
push
test
test
add
jne
gs
sbb
shll
test
lea
and
std
ret
mov
cmp
loope
mov
les
pop
jbe
stc
ljmp
xchg
mov
roll
out
xor
das
mov
test
ficompl
jns
and
and
inc
cmp
adc
nop
xor
jle
mov
ss
into
jbe
and
repnz
not
lock
or
ret
scas
scas
mov
pop
ret
push
daa
ret
and
lahf
test
rorl
and
js
jnp
clc
push
push
inc
enter
pop
std
addl
mov
movsb
add
scas
xchg
xchg
ret
cs
pop
or
aad
xchg
in
mov
imul
neg
jne
shll
call
lahf
int
push
inc
and
mov
hlt
incl
sbb
push
adc
jp
test
mov
aam
xchg
push
xchg
add
pusha
aaa
roll
or
repz
add
decb
cmp
adc
cmp
popf
jno
sbb
in
inc
dec
xchg
mov
sub
addb
ficomps
jge
xor
push
or
lret
jge
adc
xor
sub
sbb
xchg
sub
mov
mov
fstl
lods
inc
loope
dec
mov
cmp
mov
fmull
lds
sub
and
xchg
ficomps
lods
pop
add
ror
and
insb
int
and
jecxz
or
loope
ljmp
gs
adc
mov
xchg
dec
rcll
dec
xor
cltd
mov
popa
sub
pop
cltd
push
jae
loopne
push
dec
inc
mov
xchg
outsb
addr16
add
push
enter
xchg
roll
xchg
xlat
addr16
adc
insb
out
test
cmpsl
rorb
push
pop
jle
aad
dec
jae
mov
jecxz
inc
jb
popa
cmp
xchg
xorb
scas
push
shlb
xor
inc
ljmp
stc
cmp
cmc
pop
or
sub
ficoms
addl
into
mov
orb
lcall
pop
fwait
mov
jne
jp
outsb
mov
lods
or
leave
sub
and
cmp
push
xor
pop
push
xchg
loope
scas
mov
repz
add
push
sub
adc
mov
neg
andb
ss
push
sub
xchg
push
xor
test
bound
pop
mov
jno
mov
std
lcall
imulb
or
into
push
out
outsl
jbe
shrl
loope
pop
fcmovne
or
adcb
imul
mov
push
or
dec
inc
push
stos
clc
lret
scas
pop
std
sbb
adc
adc
and
stos
or
divb
adc
mov
enter
mov
push
jae
sub
jecxz
out
mov
loopne
mov
lret
jp
cmpsl
sahf
aam
adc
pop
in
cmp
test
xchg
lods
lods
out
mov
jle
mov
fdivs
addr16
add
loope
data16
jno
add
adc
fsts
pop
dec
pop
mov
pop
jae
inc
rcrl
iret
lods
inc
dec
pop
bts
mov
cmpsb
outsb
pop
cmc
out
sbb
dec
sub
fcomp
test
jb
test
push
gs
and
sub
mov
daa
inc
or
cmp
repz
or
popf
pop
fwait
call
std
cli
pusha
mov
mov
lds
pushf
push
mov
rcrl
ficoms
shlb
jb
sarb
add
fisubrs
mov
test
jle
xchg
imul
xor
cwtl
and
daa
outsb
sbbl
cltd
push
mov
mov
test
fisubrl
gs
ljmp
push
mov
push
push
mov
or
shlb
ret
jnp
cmp
cmp
xchg
out
lcall
addl
pop
out
xor
adc
add
in
or
fsubr
cmp
js
xor
add
push
lds
lods
mov
jae
sub
sub
std
sti
mov
lock
jae
pop
add
fnsave
stos
add
test
add
je
or
orb
lahf
loopne
mov
dec
push
jmp
jp
inc
daa
fsubs
ffree
add
xor
xlat
loop
xor
fstps
fwait
aam
or
or
inc
movsb
inc
or
or
push
push
or
push
rcrb
xchg
sub
gs
gs
cmpsb
mov
jmp
xchg
sbb
mov
je
in
sti
into
pop
cs
push
jp
incb
std
push
push
pop
shl
sbb
mov
ds
outsl
bound
push
adc
cmp
mov
aaa
popa
shlb
comiss
loopne
je
sbbb
outsb
inc
dec
push
lods
leave
adc
dec
pop
push
jge
mov
sar
mov
in
in
mov
push
adc
loope
std
cltd
adc
cmpsb
lcall
push
inc
inc
cli
xor
pop
shrl
jmp
sbb
xchg
std
jecxz
cmc
dec
test
and
and
inc
pop
cli
adc
pop
loopne
and
out
or
sbb
bound
movsb
rcll
int3
adc
ljmp
mov
loopnew
jb
or
sahf
mov
pop
cmp
fists
dec
out
mov
pop
mov
rcrb
adc
int
jl
mov
stos
or
int
mov
addr16
mov
mulb
cmp
fdivl
and
cmc
mov
xor
mov
stc
icebp
aaa
out
push
sub
enter
in
sar
popf
icebp
inc
int
stc
mov
test
fsubrs
out
dec
clc
fbstp
dec
cmpsb
shr
sub
jmp
loopne
aad
add
lret
sarb
cltd
sub
add
pop
ds
mov
push
sub
pcmpgtw
xor
adcl
aam
fwait
mov
int3
sub
cmpsb
inc
mov
mov
pop
into
sbb
cmp
lret
cmp
icebp
jl
nop
jno
ss
xor
push
scas
lds
test
sub
jmp
outsl
int3
inc
mov
push
stos
mov
pop
fs
inc
sahf
jns
imulb
mov
repz
add
adc
cltd
lds
pop
sbbl
xlat
mov
out
pushf
leave
mov
xchg
sahf
push
stc
mov
out
mov
pop
cmpl
pop
ljmp
xchg
inc
lea
fwait
xor
cmc
xor
cmp
shlb
sahf
mov
lds
mov
cli
lods
mov
movsb
dec
lock
out
testb
mov
loop
and
add
fnstsw
mov
xchg
push
test
mov
dec
jl
cli
add
cmp
std
xor
mov
adc
je
outsl
test
ljmp
sti
sahf
test
sbb
out
push
dec
pop
pushf
mov
mov
xchg
test
ret
mov
imul
loope
ja
stc
test
inc
gs
mov
xchg
scas
cs
fdiv
pop
mov
adc
sti
out
xor
aam
ss
jns
cwtl
cwtl
lahf
aaa
loop
jle
push
ss
add
adc
xchg
popa
in
scas
les
sbb
lea
push
or
lods
add
mov
repz
push
mov
dec
mov
bound
inc
jmp
scas
sub
mov
outsl
mov
je
ljmp
cmp
add
data16
gs
daa
adc
push
cmp
lret
fiaddl
jo
mov
cmovne
stc
xchg
int3
scas
push
cltd
int
fidivl
mov
fbld
rcrb
pushf
pop
xchg
dec
push
sub
mov
lahf
lahf
ret
imul
orb
repz
clts
xchg
std
movsb
int
stc
js
daa
adc
popa
js
scas
mov
push
outsl
xor
inc
aaa
cmp
mov
sbb
enter
lret
mov
mov
es
repz
loope
into
ss
push
xchg
test
repnz
leave
in
mov
push
sub
in
cltd
ficoms
mov
push
mov
ret
adc
mov
mov
lret
push
sub
insb
mov
xchg
jge
sahf
dec
dec
xchg
cmp
fsubl
arpl
faddl
pop
test
les
sbb
add
mov
mov
xchg
ljmp
inc
pop
clc
outsb
repnz
stos
loopne
xchg
std
xchg
sbb
dec
dec
fisttpl
or
ljmp
cmp
xchg
xor
inc
pop
cld
jge
sbb
sbb
or
pop
leave
out
jge
or
stos
addr16
nop
test
sub
ds
shl
jnp
mov
fnstenv
out
insl
xor
mov
pop
cmp
mov
cmp
jle
lods
sub
add
jecxz
leave
jne
aam
cmp
stc
pop
pop
inc
jle
xor
push
daa
insl
cld
cmpsl
out
out
pop
fildll
fnop
xor
dec
jne
and
mov
fst
cmp
cmp
sbb
jb
cmc
xchg
loopne
xor
pusha
push
je
test
or
dec
test
ds
shrl
pop
adc
adc
add
js
dec
fisubs
xchg
ss
test
xlat
mov
repnz
stc
mov
mov
fwait
mov
clc
mov
enter
pop
push
pop
push
push
push
idiv
and
ss
pop
jl
and
fidivrl
test
fidivrs
imul
add
lock
sti
sbb
test
ljmp
inc
pop
icebp
les
pop
xor
stos
stc
xchg
int3
xchg
push
stc
icebp
and
mov
movsl
repz
popf
push
jecxz
push
jmp
arpl
jno
jo
test
dec
or
and
pusha
out
mov
cmpsl
mov
cld
add
mov
mov
jmp
out
hlt
mov
dec
xor
pop
sub
stos
or
jecxz
rorl
mov
arpl
clc
and
inc
orl
mov
jo
clc
sub
cmp
or
or
fsubp
pop
or
mov
jnp
dec
in
shl
xchg
mov
call
xchg
mov
nop
jl
add
pop
xchg
aas
ja
sub
aaa
mov
out
sbb
cmp
xor
mov
xor
or
dec
xchg
fsubs
and
xor
jp
mov
and
inc
mov
js
xor
fisubrl
adc
test
data16
sbb
repz
ficompl
dec
jbe
lods
pushf
xor
adc
aaa
or
fsubrs
sarl
iret
xchg
cbtw
jae
sahf
jo
enter
or
lea
xchg
push
lahf
enter
push
jns
es
mov
push
xor
jae
and
testb
dec
jle
mov
ljmp
rolb
cmp
enter
xor
sub
mov
jne
ja
sahf
test
icebp
popf
xor
lahf
int3
fs
cmp
jae
int3
xchg
iret
mov
jo
cmp
sbb
jnp
nop
mov
cwtl
lahf
sarb
cmc
cmp
imul
int
mov
mov
inc
imul
adcb
lods
insb
into
add
sahf
ds
xor
push
movsl
fcom
aam
pop
adc
mov
xchg
imul
shrb
dec
divb
ja
out
repz
mov
insl
jno
inc
pusha
jno
add
xchg
repnz
cmp
fldl
loope
sub
and
xchg
inc
addr16
mov
jg
out
lock
es
ret
dec
aas
adc
out
jno
cmp
rorb
cmp
fs
jmp
popa
pusha
rcrb
incl
leave
ja
xor
jmp
iret
adc
jns
jp
shrb
popaw
movsl
int
jb
stc
test
out
aaa
ljmp
mov
mov
fld
icebp
jo
or
pop
add
dec
mov
add
xchg
xor
sub
push
xchg
dec
dec
and
rcr
xor
cmp
sub
testl
mov
cli
cmp
lahf
jnp
fstpl
add
dec
mov
and
mov
mov
adc
icebp
mov
aad
inc
jp
push
je
arpl
jl
smsw
in
fimuls
call
sub
test
fsts
call
loope
xlat
fs
adc
mov
adc
sub
mov
mov
xor
in
mov
jnp
popa
dec
and
adc
xchg
adc
in
les
push
jne
loop
jmp
xor
cs
mov
and
into
sub
xor
movsl
stos
push
insb
loope
push
dec
call
int
jle
lods
dec
inc
cmp
outsb
imul
cmc
push
dec
fmul
jbe
loope
or
dec
stc
mov
adc
jle
sbb
pop
cwtl
stos
xchg
aas
out
inc
aad
pushf
out
fsubrs
scas
mov
jbe
add
ret
push
xorl
aam
and
pop
lret
popa
cwtl
and
xchg
rolb
lahf
pop
inc
je
jmp
pop
or
popf
fsubl
repz
sub
int
addr16
cltd
xor
push
xchg
leave
lahf
stos
std
imul
insl
add
pop
outsl
lret
xchg
push
pop
fstps
xchg
cmp
push
add
scas
mov
jp
and
loopne
mov
pop
loopne
mov
jp
dec
xchg
xor
je
add
pop
movsl
aaa
jg
jle
push
repz
jnp
cmp
aaa
push
xchg
dec
mov
pop
and
hlt
leave
xlat
ds
pop
mov
dec
adcl
cmp
push
jo
inc
fadd
fsubl
stos
je
adc
fsubr
scas
mov
movsb
sub
pop
fmuls
scas
pop
ret
cli
dec
rcrl
aad
mov
arpl
scas
cmc
push
cmp
lret
xchg
fldenv
mov
stc
jp
clc
fdivrs
cltd
mov
xor
pop
mov
rolb
jp
adc
test
cmpsl
cltd
xor
push
lea
jne
push
sbb
xor
rcrl
dec
inc
xor
mov
sti
cli
test
aas
shld
movsl
push
push
xchg
mov
mov
into
push
sti
cld
adc
dec
xchg
cs
or
std
dec
repnz
repz
stos
cmp
out
push
xlat
cmp
out
rcll
push
test
test
add
mov
jg
rcll
stos
sbb
jns
dec
clc
pop
mov
or
call
mov
mov
imul
adc
add
xor
adc
lret
sub
jae
jmp
lret
xlat
outsb
shll
lea
sub
sub
mov
pushf
cmp
enter
xor
pop
jbe
lret
out
sub
sbbl
jp
out
and
lea
dec
out
xor
pop
lods
mov
arpl
int
jae
aad
int
dec
lcall
mov
mov
pusha
sarb
lea
out
rorb
add
incl
dec
cmpsl
mov
jmp
fists
pop
psadbw
jnp
mov
mov
add
test
push
mov
push
rorb
je
sbb
jmp
popf
dec
dec
or
movsb
mov
jg
iret
test
aaa
inc
arpl
ds
repnz
int
fisubrl
push
and
hlt
pop
push
adcb
dec
lods
mov
stos
sbb
pop
and
ficoms
push
fidivs
lret
cmp
mov
xchg
push
imull
enter
stc
xchg
or
pusha
inc
scas
jns
push
iret
mov
mov
inc
in
sub
cmp
daa
mov
xchg
lds
test
mov
xor
inc
and
cmp
mov
mov
ss
outsb
imul
mov
addb
inc
fsubrl
dec
insl
pop
out
je
aad
mov
push
popf
rolb
out
ljmp
lods
mov
xchg
xor
stc
mov
sbb
cmp
fists
xchg
mov
in
mov
mov
and
lock
ja
leave
cld
and
adc
jbe
int3
or
in
xchg
int
and
loope
clc
sbb
repz
call
fldl
lret
push
mov
cld
pop
adc
mov
clc
and
mov
or
leave
dec
popa
mov
shrb
jmp
push
stos
loopne
xor
lods
jecxz
and
lds
inc
jnp
int3
lock
pop
push
repnz
sbb
add
mov
jl
jp
in
loopne
sti
imul
inc
sbb
test
sbb
adc
jl
movsl
cmp
stos
xchg
jbe
icebp
out
pop
cmp
pop
imul
jb
push
mov
pop
out
sub
rorl
lock
je
mov
pop
add
mov
fmul
scas
aam
arpl
jno
sub
adc
jno
inc
addr16
sbb
xor
call
adc
cltd
adc
je
lods
lds
scas
add
loope
and
dec
jbe
mov
pop
pop
out
fwait
into
mov
xchg
xchg
adc
add
xchg
lods
aad
adc
push
mov
shl
out
mov
test
rcrb
int
cmp
adc
xchg
and
nop
rcr
and
scas
inc
fadds
insb
test
jl
sbb
loop
icebp
cmp
adc
fwait
mov
sub
xchg
xor
jb
sbb
out
push
jo
mov
orps
arpl
jne
ret
sahf
not
xorl
ret
mov
inc
outsl
dec
push
out
mov
jge
xor
xlat
xor
pop
stc
call
mov
mulb
jns
cmpsl
or
xor
aaa
jbe
filds
xchg
inc
pushf
or
push
xor
movsl
push
mov
jg
lcall
daa
lods
ja
push
pushf
add
jnp
pop
frstor
ret
daa
les
sub
cmp
sbb
mov
int3
or
in
pop
mov
shrb
imul
mov
stos
sub
js
xchg
inc
popf
adc
sbbl
cmpsb
jo
pop
mov
inc
rorb
stos
dec
rolb
call
cltd
cmpsb
mov
pusha
cmc
jne
js
mov
mov
and
jnp
aas
daa
dec
push
add
mov
dec
lcall
leave
xchg
lods
js
adc
aad
das
cld
mov
lret
xchg
mov
sub
aas
cmp
fidivl
or
xor
dec
loopne
mov
bound
addr16
rcrl
push
daa
fisttpl
xor
sbb
test
cli
jns
rorb
stos
aaa
sub
sub
daa
and
jb
pop
cli
popa
mul
mov
xlat
xor
xlat
fcmove
inc
pushf
fadds
mov
inc
xchg
insb
pop
fs
in
outsb
jp
ja
cmp
arpl
not
push
pusha
mov
sub
hlt
jnp
popf
adc
sti
pop
setns
jno
add
in
xor
aas
enter
aaa
xor
mov
aam
mov
in
mov
cmp
xchg
cmp
stos
cmpsl
jbe
or
popf
in
dec
lret
popf
mov
pop
xor
lcall
push
leave
mov
pusha
xchg
and
cmp
push
cwtl
ficomps
cmpsb
or
addr16
pop
adc
je
in
lahf
fwait
or
adc
pop
xor
nop
xor
jae
in
mov
sub
mov
add
repnz
dec
mov
inc
sarl
or
xor
fisubrs
loopne
pop
lods
out
dec
pop
sub
cmpsl
inc
push
pushf
sub
dec
out
and
aaa
inc
add
test
mov
pop
jl
cmpsl
aaa
pop
out
rorb
push
xor
jge,pn
jnp
jg
or
daa
sub
xor
or
jns
fldenv
xchg
fisttpll
ljmp
lods
pop
push
pop
mov
push
cs
std
add
test
shl
repz
mov
cmp
hlt
pop
xorb
mov
jbe
add
fldl
idivl
subb
inc
add
cltd
xor
pop
xchg
jno
jns
mov
mov
scas
aas
in
fwait
rclb
sbb
inc
jnp
shlb
ljmp
es
lret
cli
out
ret
xor
stc
mov
push
gs
repz
mov
mov
push
jg
mov
and
cmp
mov
out
sbb
xchg
xchg
scas
inc
rsqrtps
pop
and
sbb
mov
pop
mov
mov
arpl
mov
inc
pop
mov
int
fcomp
nop
lret
aam
inc
lret
adc
adc
push
shll
jo
fcomip
xor
roll
inc
sub
or
cli
xor
rcrl
mov
mov
push
push
add
push
sbb
stos
push
xor
jmp
cmc
jle
jmp
push
mov
imul
subb
and
lea
mov
hlt
push
inc
mov
clc
aaa
les
out
aam
mov
mov
jbe
inc
int3
or
ficomps
pop
idiv
sbb
repz
subb
mov
mov
aaa
ret
cld
sbb
jbe
jg
cmc
jle
aas
cmpl
xor
or
push
pop
inc
mov
and
pop
mov
mov
bound
jle
sti
or
movsl
dec
lods
dec
out
mov
push
lcall
rol
jge
dec
add
mov
sbb
cmc
adc
out
push
mov
rcrb
lds
aam
push
adc
cmp
push
pop
jg
cli
mov
xchg
xchg
or
pop
mov
cmc
outsb
sarb
loop
das
and
loopne
cmpsb
or
aad
sbb
xchg
push
rol
sarb
xchg
and
fcompl
add
push
lret
xchg
lcall
pusha
mov
or
sar
mov
sub
negl
insl
addr16
clc
stos
or
pop
cmp
adc
pop
adc
aas
call
fwait
mov
or
inc
mov
cmp
bound
movsw
pop
push
jno
out
xchg
pop
push
inc
push
pop
sub
sbb
mov
adc
mov
repnz
jne
shlb
mov
daa
mov
daa
jp
clc
fdivs
jae
das
push
cmpsb
lcall
mov
pop
push
aas
inc
mov
enter
ret
fcomps
cli
and
adc
gs
and
xchg
roll
cld
test
jbe
and
insl
sahf
jge
jbe
les
or
dec
cltd
movsl
shlb
and
inc
add
or
sub
dec
js
cmp
int
mov
push
movsb
je
inc
out
js
dec
and
add
and
fisttps
mov
in
pushl
scas
adc
imul
sub
dec
js,pn
jno
enter
push
mov
cmp
add
loop
mov
outsl
xor
movsl
mov
in
pop
inc
inc
cmp
mov
xlat
and
mov
popl
addl
out
or
mov
or
aas
mov
movsb
lds
jno
xchg
jle
fcoml
pop
mov
scas
pop
int3
fcmovu
divl
loop
in
std
adc
mov
mov
jmp
and
push
scas
mov
push
mov
xchg
enter
stos
push
jns
dec
adc
jmp
add
xchg
cmp
cs
leave
push
insb
mov
mov
or
aas
sbb
xor
cs
push
lods
mov
call
icebp
xor
and
xchg
mov
fldcw
or
mov
adc
jle
or
cmp
mov
or
lods
sbb
aaa
inc
mov
int3
addr16
ja
popa
cmp
fldenv
out
jo
inc
insb
adcl
lret
cs
sbbl
pop
jecxz
add
push
movsb
pop
jecxz
sbb
or
cmpl
sahf
inc
mov
mov
popa
repnz
pusha
out
cli
mov
fwait
mov
cltd
mov
push
jb
add
mov
insl
repz
and
out
jp
adc
xor
cmpsl
xor
sub
mov
sub
sbb
aam
sti
mov
addr16
pop
push
adc
sub
cwtl
adc
lods
lods
lods
fstps
scas
sbb
mov
jp
push
into
cld
mov
and
cmp
int
or
pop
cmpl
mov
pop
in
clc
mov
pop
lret
call
xchg
or
xor
sbb
jle
adc
mov
les
insb
push
imul
jge
dec
std
jl
cmp
pushf
hlt
test
or
inc
push
inc
movsb
mov
inc
int3
shr
lret
inc
iret
push
ds
and
cmp
pushf
sub
sub
lcall
stc
and
rclb
sbb
movsl
faddl
outsb
jg
jp
and
lahf
jbe
lods
add
pop
loopne
fmul
dec
or
inc
xchg
lea
adc
cld
subl
sbb
push
movsb
or
pop
or
cs
xor
movb
push
stos
mov
test
add
cmp
mov
push
rorl
mov
fbld
lea
or
sbb
sbb
sub
pop
adc
call
test
jae
pop
sub
sarb
sahf
pusha
xlat
imul
lods
add
and
add
sbb
in
xor
cld
pusha
or
in
push
mov
dec
icebp
mov
mov
jnp
push
lret
mov
sbb
fwait
dec
movsb
mov
imul
mov
adc
mov
push
test
mov
mov
test
leave
bound
mov
or
lret
pop
lods
mov
xor
mov
repz
xor
jno
cld
inc
testl
fsubs
jle
mov
test
mov
dec
add
jo
inc
mov
fsubrl
xchg
mov
jb
cmpsb
inc
dec
mov
lods
jns
cmp
not
data16
jp
cwtl
div
call
sub
mov
jmp
mov
cwtl
xor
push
dec
or
fisubrl
cmp
pop
int3
or
or
lret
aas
fisubs
mov
cbtw
in
loop
in
mov
mov
cs
cs
pop
andl
fiaddl
test
loope
add
cmp
mov
in
shrl
mov
dec
mov
imul
aad
test
xor
and
sub
sub
dec
ror
outsb
stc
inc
pop
and
lock
mov
loopne
pushf
repz
orb
cmpsb
fcoms
daa
out
test
xor
pusha
dec
dec
inc
lods
leave
addr16
aaa
cltd
mov
mov
push
xor
stc
pushf
and
jno
dec
dec
pop
mov
xchg
out
jns
inc
icebp
scas
dec
mov
js
gs
mov
aam
mov
idivb
loopne
jo
mov
jae
cltd
int
ljmp
outsl
jmp
adc
mov
loop
jno
jae
mov
inc
or
movsl
fistps
push
jbe
fstps
dec
insb
iret
insb
jne
pop
ss
and
xor
mov
push
jne
imull
dec
in
inc
clc
sti
clc
sahf
dec
mov
xorl
aas
or
out
adc
rclb
cmpsl
pop
enter
repz
sbb
cmpsb
iret
mov
jno
pop
jnp
push
ljmp
xor
xor
and
lods
mov
mov
out
pop
mov
mov
inc
add
scas
ja
in
sbb
mov
pop
cli
in
mov
lcall
popl
std
repnz
cltd
adc
jp
ret
mov
xor
leave
inc
loope
mov
sbb
adc
sbb
sbb
adc
jbe
les
mulb
mov
fsubrs
ljmp
nop
adc
inc
push
push
ljmp
movsb
mov
xchg
jl
mov
sbb
fwait
xor
sub
xor
push
filds
cmp
mov
inc
lgs
or
xchg
loope
push
mov
iret
shlb
pop
xor
in
or
in
mov
out
mov
les
pop
sub
xor
jp
jno
sub
mov
cli
sbb
sub
xor
cmp
in
pop
das
add
jbe
and
loopne
inc
inc
sub
xchg
pop
xchg
movsb
in
ljmp
roll
push
dec
sub
sbb
sar
cmp
cmc
cwtl
xor
out
push
cmc
sti
xchg
aas
inc
ret
sub
mov
ljmp
sbb
cmpsl
nop
shr
cld
movsl
mov
mov
hlt
adc
movsb
cld
pop
or
imul
sbb
imul
in
mov
sahf
cmpsl
ret
cmpb
aas
push
rorl
sbb
in
mov
push
pop
pop
sbb
in
mov
leave
jnp
test
shll
out
ror
dec
mov
mov
stos
jnp
cmpl
mov
mov
in
das
imul
mov
mov
cld
jo
jb
jecxz
mov
movsl
mov
push
sbb
clc
outsl
orb
or
jb
je
mov
or
sbb
dec
mov
push
hlt
movsl
sbb
call
push
dec
mov
fndisi(8087
mov
cmpsb
repnz
enter
sbb
dec
orl
dec
outsb
ret
fiaddl
jbe
lret
jmp
jnp
js
in
hlt
or
push
ficoms
lods
or
sete
sarl
sahf
jne
jbe
daa
dec
shlb
or
mov
mov
insb
cmpsb
xchg
lahf
and
and
dec
push
lods
call
stos
sub
pop
lods
mov
xchg
push
and
sahf
xor
dec
insb
add
sub
and
xchg
les
lcall
cmp
pmullw
mov
sbb
into
test
fcomp
int3
xchg
dec
dec
insb
fsubs
adc
add
hlt
imul
aam
add
adc
push
xor
imul
sub
sub
push
rolb
stos
jbe
xchg
daa
sarl
inc
mov
fistl
inc
xor
mov
gs
mov
pop
into
xorl
xchg
jae
lret
jecxz
das
fwait
aad
xchg
loopne
adc
fstl
mov
sbb
ss
jns
add
fsubl
outsl
and
mov
inc
inc
xor
jg
xchg
mov
lods
adc
mov
mov
in
xor
mov
fistpl
pop
stc
jle
int
mov
sub
nop
pusha
sti
fstps
ret
xchg
jo
sub
sub
push
orb
xor
sub
mov
xor
mov
xor
dec
cmc
test
loopne
xchg
ja
cs
pop
push
inc
sbb
addr16
jl
xchg
and
mov
xchg
stos
and
outsl
inc
mov
mov
lock
inc
push
jg
rorl
lret
out
je
mov
pusha
sub
shl
inc
movsl
mov
xor
xchg
stos
xchg
out
rorb
out
and
addr16
jmp
and
outsb
aaa
fisubl
and
push
add
sub
add
and
lahf
dec
add
in
mov
bound
jle
mov
mov
add
push
dec
pusha
outsb
sbbl
mov
nop
push
mov
adc
push
add
sub
push
ljmp
and
mov
push
leave
sub
xchg
cmp
fbstp
add
or
aam
js
add
shrb
sbb
test
cmp
stos
sub
out
lods
pop
dec
loope
jge
adc
call
ret
jno
ficompl
sbb
scas
adc
movsl
jo
out
xor
sub
stc
insb
in
sub
jne
xchg
insb
movd
in
pushf
xor
inc
push
adc
add
scas
jbe
jg
xchg
cld
into
out
add
test
jle
lahf
jmp
sub
inc
xor
mov
in
fcompl
push
stos
pushf
push
dec
pusha
adc
fdivr
lods
movsb
cwtl
and
popf
and
jbe
cmc
les
dec
cmp
lock
mov
lret
sub
jo
cli
mov
in
aas
jecxz
add
cmp
decl
lahf
mov
jbe
and
jmp
sub
and
mov
out
sbb
xchg
inc
cs
faddl
xchg
and
fisttpl
mov
mov
dec
adc
cltd
mov
shrb
imul
leave
cmp
or
stc
sahf
pop
xchg
lret
push
adc
nop
clc
mov
pop
xor
cltd
and
addr16
xchg
mov
adc
pop
pusha
into
test
dec
cs
repz
out
pop
loopne
mov
fldenv
sbb
sahf
arpl
jns
cmp
fwait
xor
pop
shrl
jge
popa
sti
push
test
clc
pop
push
pop
pop
push
pcmpeqb
mov
scas
pop
pop
testl
xor
jmp
popw
xchg
or
lock
mov
ja
mov
xchg
sub
add
xchg
das
into
mov
jnp
cmp
gs
mov
jle
jbe
mov
shrl
test
sbb
inc
mov
inc
and
and
scas
bound
adc
inc
cli
sar
xchg
frstor
sarl
in
cmpsb
or
push
cmpsl
jle
shll
push
dec
push
push
test
enter
in
in
fstps
mov
pop
addr16
enter
sahf
test
stc
sbb
lea
mov
popf
lcall
add
outsb
push
mov
lods
mov
scas
insl
fs
jns
into
jb
jno
ss
fnsave
or
dec
mov
cmp
in
cmpsl
idivb
mov
iret
stos
add
arpl
rep
loopne
insb
xlat
pushf
xor
push
in
ljmp
pop
pop
inc
mov
sbb
inc
leave
scas
and
add
xchg
mov
mov
or
icebp
inc
jmp
sub
notb
stc
ljmp
gs
shrl
cmpsb
outsb
test
xchg
mov
movsl
jb
outsl
xchg
inc
hlt
jb
cmc
das
jl
sbb
cwtl
jbe
xchg
and
add
jge
sbb
mov
inc
and
insb
daa
test
cmpsb
inc
inc
mov
test
out
cmp
cmp
int
in
lods
test
xlat
jg
push
arpl
les
jmp
cld
jp
sbb
hlt
adc
std
sbb
sub
int
imul
pusha
or
dec
aaa
jno
cld
dec
jmp
inc
ljmp
mov
cld
mov
mov
shlb
cmp
adc
cmp
add
sti
cmp
shrl
mov
stos
sbb
ret
add
cli
pusha
cmp
dec
jns
cmp
scas
stc
sub
adc
sahf
xrelease
lods
lods
mov
push
push
ljmp
inc
mov
sbb
xchg
sub
adc
pop
addl
and
icebp
pop
xor
jg
scas
and
cs
dec
out
shlb
repnz
sub
std
negb
aaa
test
jae
jne
add
pop
pop
pop
icebp
mov
lods
adc
pop
pop
es
pop
add
orb
loop
inc
push
mov
cmp
sbbl
and
jmp
mov
pop
mov
mov
push
cmpsb
sbb
js
push
add
int3
dec
push
cwtl
xlat
cmpsl
and
jp
xlat
sbb
fucomp
movsb
mov
pop
les
jg
loop
int3
aas
cmc
xor
repnz
mov
add
push
dec
xchg
cmp
xor
and
or
xor
adc
shlb
pushf
jg
xchg
dec
cltd
repnz
fwait
lock
and
inc
stc
mov
das
push
adc
inc
cli
mov
cmp
ja
jns
jecxz
jp
fdivl
and
jnp
fcmovnu
and
arpl
in
addb
test
xchg
mov
adc
cmpsl
xor
adc
push
adc
fisubs
mov
lret
fdivl
insl
shl
jnp
notl
pop
sub
push
out
ljmp
test
data16
pop
ret
mov
std
lods
fwait
add
decl
aam
cmp
push
pop
sbb
jmp
adc
pop
jmp
push
or
dec
sub
das
add
adc
gs
and
jb
sbb
cli
sbb
scas
jne
jo
sub
push
lds
mov
xor
cmp
sbb
xchg
lahf
ds
test
cmpl
imul
imul
lds
lods
outsb
xor
xlat
add
mov
mov
mov
pushl
cmp
xorl
push
out
jbe
hlt
pop
shll
xchg
mov
stos
rorl
push
imulb
pop
jmp
fnstenv
xor
jb
popf
xor
negl
jno
jmp
adc
js
ror
or
jns
sub
lea
js
push
lea
sub
xor
pop
inc
mov
cltd
cltd
adc
fdivr
adc
stos
xlat
insb
mov
push
cld
inc
add
mov
push
bound
sub
mov
sub
pushf
sbb
arpl
lret
pop
jae,pn
sub
sbb
adc
ret
out
push
or
mov
inc
flds
int3
jb
clc
cli
jb
mov
clc
xor
adc
ljmp
sbb
inc
fmuls
pop
shlb
xlat
sahf
icebp
mov
xchg
jb
adc
out
push
dec
push
call
fcmovbe
insb
call
arpl
cwtl
and
sbb
cmpsl
addl
cmp
in
adc
xchg
in
dec
fwait
pusha
aad
fimull
leave
insb
stc
mov
fsubl
dec
push
mov
sub
xor
lods
fstl
xlat
je
jae
mov
pop
lods
xchg
cltd
fs
lahf
sbb
pusha
or
add
ds
and
pop
cwtl
sti
add
xor
push
mov
fidivrs
and
dec
mov
pop
mov
insl
cld
movsl
dec
cmp
mov
xor
add
sbb
aas
lock
ljmp
lods
or
jmp
lcall
adc
mov
aad
lea
call
aam
mov
aaa
movsl
lock
int
and
repnz
cli
rolb
mov
rcrl
cmpl
mov
push
jp
int3
mov
cmp
scas
in
xor
xchg
adc
aad
int3
pop
gs
and
push
fstl
jnp
mov
cmp
push
enter
mov
cld
inc
lods
push
std
pop
pop
scas
lds
rcll
sar
xchg
sbb
imul
adc
push
int
mov
jl
add
mov
movsl
rcr
push
sarb
mov
cmpb
xlat
outsb
out
idivl
mov
jnp
mov
and
pop
jno
fildll
aam
push
shrb
ds
add
aaa
es
and
add
sahf
inc
push
jp
addr16
jb
test
add
jbe
and
pop
pusha
ljmp
xor
cwtl
fsubs
call
mov
jno
push
cmp
sbb
fiadds
add
dec
js
push
cmp
hlt
xor
xor
and
andb
and
jbe
sti
fwait
jb
sub
adc
push
push
xchg
das
sbb
cmp
mov
out
out
fcompl
add
mov
dec
sub
gs
jnp
jmp
inc
mov
pushf
inc
jmp
pop
lret
cmp
into
ljmp
mov
popa
daa
push
jg
cmpsb
out
xor
push
mov
and
js
lea
push
sbb
mov
sti
repnz
push
xchg
jne
inc
scas
jg
jo
push
xchg
jmp
push
movb
sbb
ja
jne
jl
mov
mov
adc
xchg
add
adc
mov
push
out
inc
inc
push
jecxz
insb
dec
ja
dec
stos
sarb
jno
stos
dec
lret
sbb
and
inc
push
xchg
mov
shlb
and
shrl
mov
cmp
add
mov
dec
outsl
testl
je
in
rcl
xchg
inc
into
push
sahf
push
dec
sub
into
mov
xchg
lods
push
push
jmp
lods
stos
or
xor
scas
and
push
add
xlat
dec
and
push
add
inc
in
ficomps
cwtl
stos
pop
testl
jae
imul
xchg
out
gs
stc
jp
add
int
mov
jbe
lahf
imul
xchg
dec
add
inc
insb
fistpll
call
negb
repnz
sbb
inc
fisubrl
outsb
pop
div
inc
nop
orl
push
ljmp
aas
jns
std
test
insb
mov
shr
daa
inc
imul
fiadds
loope
lret
pushf
daa
push
sub
push
push
jo
scas
enter
push
stos
xchg
sbb
shll
inc
out
pop
xchg
test
push
jle
xchg
xorl
xchg
push
mov
mov
dec
xor
jne
add
leave
ljmp
fistpl
dec
out
cmpsb
lahf
xchg
add
lret
sub
push
push
pop
fucomp
mov
call
aad
aas
mov
xchg
je
std
pusha
mov
push
add
insb
xorl
pop
and
sub
mov
push
les
xor
mov
sar
pusha
xchg
call
pop
jg
push
mov
ljmp
ret
cmp
sbb
out
cmp
pop
pop
push
jb
xor
sbb
fisttpl
pop
sbb
sbb
mov
sub
and
sbb
pop
nop
or
sub
inc
shlb
adc
test
aad
jne
es
fmulp
test
int
push
adc
xor
push
lock
orl
sbb
xchg
sub
loopne
cltd
fldl
hlt
add
addl
orb
xorb
and
mov
movsl
pop
push
cpuid
test
push
out
jle
mov
rcrl
ret
jnp
pusha
dec
es
pop
int3
shr
inc
std
jle
cmpsb
mov
and
mov
cmp
adc
aaa
and
sbb
loopne
mov
rcpps
out
mov
sarl
xchg
lret
std
ja
xchg
aas
sbb
rclb
mov
mov
and
xlat
push
rclb
lret
lcall
popa
call
push
sbb
fidivl
adc
xor
xchg
nop
or
out
repz
mov
movsl
popa
mov
pop
push
and
bound
mov
repz
mov
and
fimuls
cmp
pop
stos
scas
movmskps
imul
jl
fisttpl
stc
push
sbb
test
mov
shlb
movb
jnp
cmp
xor
mov
clc
dec
pop
rorl
pop
cltd
add
mov
mov
shr
movb
dec
dec
fimuls
cli
xor
ret
icebp
mov
xorl
cli
push
fdivs
pop
rorb
cmpsl
or
inc
cmp
shlb
js
ret
das
rcll
in
xchg
add
mov
and
and
test
add
adc
out
pop
jg
mov
jne
sbb
or
nop
sbb
lret
sti
dec
inc
add
dec
inc
mov
add
cltd
cmc
cmc
sub
mov
mov
push
ret
jno
sbb
xor
or
push
movzwl
scas
test
filds
add
sub
std
divb
jns
lea
mov
xchg
mov
push
aam
push
jmp
fidivrs
aaa
mov
xchg
lock
or
fisttps
jmp
shlb
cmp
mov
lods
test
sti
inc
mov
fs
jecxz
push
jns
dec
loope
push
js
jne
mov
mov
mov
push
xlat
out
push
loope
push
and
jle
lahf
testl
or
cmp
jo
pop
and
mov
lds
push
push
dec
out
xchg
test
loope
loope
add
je
xor
dec
aad
jae
adc
inc
cs
scas
pop
sbb
adc
push
pop
jbe
adc
jle
pop
ja
lea
inc
jo
in
cld
xchg
add
jmp
push
and
pop
jne
jp
push
insl
out
add
rorl
mov
xor
shlb
push
imul
mov
pop
aas
and
out
or
jle
and
test
fdivrp
es
inc
mov
push
clc
sub
jbe
rcl
jns
cmp
cs
aas
movsb
into
js
inc
lret
cmpsb
push
cmp
lea
fwait
ljmp
out
cmpsb
dec
fwait
push
cmp
rol
add
ret
icebp
in
ljmp
clc
imul
jo
cmpsb
mov
xchg
fbstp
lcall
add
pop
sub
aas
std
jecxz
or
sbbl
testb
or
loope
xlat
scas
aaa
rorl
leave
mov
xchg
xchg
dec
jae
pop
xchg
jb
dec
cmpsl
lcall
pusha
rol
push
cmp
sub
ljmp
lret
sbb
jle
xor
movsb
test
dec
jl
rcrl
and
bound
pop
aas
dec
mov
mov
inc
or
push
addr16
aaa
mov
cmp
das
fs
fsubs
or
pushf
xchg
mov
ds
jecxz
ljmp
mov
pop
adcb
out
rcll
adc
push
push
imul
or
push
in
xchg
ret
push
adc
cli
mov
mov
push
cmp
and
testl
int
test
ret
ljmp
out
xchg
push
repnz
jno
movsb
filds
push
icebp
cmp
stc
ficomps
daa
jae
movsl
sbb
xchg
sub
adc
cli
xchg
mov
dec
mov
fisubrs
mov
iret
sbbl
divl
shr
test
mov
shll
jmp
into
sbb
cmp
mov
add
es
ljmp
jno
and
sarb
mov
icebp
ds
in
scas
rcll
sarl
icebp
or
xchg
imul
loopne
dec
push
cltd
clc
js
sbb
sbb
xor
aad
mov
push
lea
scas
leave
xchg
jmp
test
cmp
notb
inc
sub
or
add
sahf
mov
or
loopne
or
std
inc
cmp
sarb
and
rcrl
repnz
sbb
pushf
int
bound
jae
hlt
fcos
test
int3
fwait
and
mov
dec
out
xor
mov
jg
lea
arpl
adc
int
pop
sub
push
cmc
imul
repz
mov
push
test
pop
mov
lahf
mov
fdivr
fs
test
gs
mov
mov
push
aaa
add
mov
pop
mov
xor
mov
add
dec
inc
leave
stos
add
mov
lods
adc
pushf
cli
sahf
jmp
mov
mov
nop
ja
popf
push
arpl
pop
fistpll
imul
mov
xlat
and
out
inc
jo
mov
jl
jmp
jmp
xchg
cld
ficomps
and
mov
hlt
rol
aaa
enter
xor
gs
xlat
pop
jbe
test
rcr
imul
lahf
and
push
pop
add
add
gs
fucom
stc
rorb
sbb
push
stc
add
pop
iret
inc
mov
cmp
push
mov
or
cmp
in
insl
pop
daa
cmp
test
pop
sub
fwait
add
iret
testb
jg
inc
stos
loope
pop
push
xor
sub
dec
xlat
rorl
and
rcll
daa
mov
sti
add
js
dec
inc
adc
pop
xchg
ljmp
into
fistl
push
mov
jb
push
xchg
xlat
xor
pop
in
out
xchg
xchg
cmp
scas
enter
imul
outsb
fidivrs
and
aas
xchg
out
inc
cwtl
test
mov
outsb
sub
add
jecxz
cs
push
pop
jecxz
fwait
mov
int3
xchg
or
adc
rcrb
es
or
lcall
sbb
ds
sahf
adc
or
mov
ror
pushf
cmpsl
icebp
cmpsb
leave
jp
gs
pusha
ljmp
stos
incl
cmpsb
and
and
fisttps
mov
mov
xor
ret
mov
jle
cmp
adc
insb
mov
call
cmp
out
pop
popf
xchg
int3
stos
adc
mov
aad
cmc
push
dec
sbb
int
sub
jmp
fldcw
inc
jle
lods
jp
std
cmp
mov
sti
pop
aaa
jb
or
pop
sub
stos
jge
pop
mov
or
cmp
arpl
xchg
sub
push
mov
pop
pop
add
je
fdivrl
popa
fs
hlt
mov
mov
aad
cwtl
or
jno
or
lods
fnstenv
jno
or
pop
es
rorl
dec
mov
adc
mov
sub
icebp
arpl
aad
xchg
lret
jecxz
push
mov
push
mov
jg
sbb
adc
hlt
sbb
ss
pusha
pusha
adc
push
pusha
adc
lods
add
aas
dec
xor
mov
rcll
cvtps2pi
and
sbb
mov
pop
xchg
iret
imul
ret
push
or
aad
cmp
jg
lea
in
mov
xor
lret
or
cli
lcall
xor
push
sbb
test
inc
ja
xchg
cmpsl
push
jnp
mov
xchg
dec
out
mov
sbb
sbb
shrl
xchg
add
lret
loopne
inc
hlt
push
or
mov
shlb
sbb
mov
es
adc
scas
js
jmp
xlat
sar
or
adc
and
out
ss
mov
pop
enter
push
out
xchg
cli
pusha
clc
pop
jg
xor
jle
inc
std
test
shll
push
xchg
add
push
push
sbb
sub
add
dec
adc
xchg
out
mov
mov
xchg
pop
out
jnp
or
jecxz
jp
and
cmp
stos
data16
lds
cli
xchg
outsb
mov
loopne
fildl
inc
mov
xchg
or
jg
dec
mov
mov
les
jle
xchg
pusha
outsb
mov
push
cli
add
sbb
shll
addr16
xchg
scas
sbb
insb
lock
out
in
mov
pop
xchg
push
fwait
jg
add
pop
out
aaa
and
pop
add
and
pop
cs
mov
pop
int3
das
mov
jbe
pop
adc
jge
add
adc
mov
out
into
mov
cmc
scas
push
pop
mov
fldcw
imul
int
jle
lahf
xchg
aad
scas
int3
cwtl
insl
fstps
jnp
sbb
push
sahf
fstl
and
test
push
mov
cli
lds
shrb
and
sbb
cli
fcomps
in
mov
sub
pop
fmul
iret
mov
mov
aam
pop
push
test
xlat
push
mov
push
js
fwait
scas
dec
mov
cwtl
sub
cmovg
xor
push
imul
xor
push
pop
fiadds
imulb
sbb
mov
sbb
mov
sub
lahf
call
dec
rorb
rorb
and
push
pop
subb
ret
std
push
mov
in
roll
jge
mov
popf
leave
add
js
inc
int
mov
fs
sahf
xlat
push
push
in
xor
xchg
into
mov
in
cmpb
aaa
or
sbb
jmp
aas
add
or
gs
les
lock
jo
sub
adc
call
sbb
adc
test
mov
mov
or
fadd
loop
jne
adc
xchg
cltd
sti
jno
cmp
mov
pop
pop
xor
push
push
mov
xorl
sub
xlat
fs
cmp
movsb
mov
sub
push
or
sbb
pop
jge
cmp
test
cs
pushf
pop
sbb
cld
lret
cmp
sbb
push
mov
or
mov
cmp
hlt
sbb
mov
clc
rol
movl
ds
jmp
xchg
je
sub
mov
jbe
push
out
jbe
lret
pusha
mov
or
push
enter
rcrb
xchg
iret
sub
push
dec
cmp
test
lret
dec
and
or
fstpt
gs
ficompl
xor
dec
in
out
into
cmp
je
pop
sti
stos
adc
mov
imul
xchg
rcrb
push
je
pop
adc
ljmp
jae
rol
cmp
sbb
adc
and
icebp
sub
inc
lret
and
pop
adc
push
ficoms
inc
lock
xchg
cli
jp
outsl
and
hlt
mov
mov
outsb
pop
xor
mov
movsl
pop
adc
lcall
add
mov
push
cmpsl
push
movsb
sub
dec
mov
in
and
and
xor
imul
mov
xchg
leave
fs
loope
lret
push
xor
xor
and
outsb
xor
adc
lock
repnz
lcall
sbb
out
pop
xor
xor
aas
out
fildl
jecxz
pop
sub
arpl
ljmpw
cmc
test
cmp
xchg
repz
jbe
fs
lret
cltd
in
push
push
mov
daa
dec
push
add
mov
xchg
ds
lahf
test
mov
xchg
cmp
cmp
and
fcoms
cmc
inc
cmpsb
sub
pop
pop
cld
inc
or
call
jg
jnp
sub
sub
ja
mov
rolb
xor
dec
test
xor
ret
dec
cmpsb
sbb
notb
xchg
mov
mov
rcr
xchg
dec
mov
in
or
sub
inc
js
hlt
les
xlat
cwtl
sub
insb
adc
xor
xchg
scas
jecxz
in
inc
cmpsb
fcoms
adc
clc
add
clc
adc
scas
cmpsb
xor
mov
stos
popa
enter
push
repz
push
jp
out
jb
or
daa
lea
mov
inc
mov
cmp
mov
add
or
xchg
mov
adc
mov
mov
std
jns
pusha
pop
or
cmp
rcll
cmp
sbb
cli
in
js
adc
cwtl
mov
scas
fisttps
sbb
jns
lock
add
sarl
inc
add
jge
shrl
movsb
repnz
in
std
cmpsl
sbb
lcall
cs
out
jbe
int
imul
inc
jecxz
fnstcw
ret
adc
lret
bound
cld
outsb
add
push
xchg
pop
call
sub
jg
int
pop
cmp
xchg
cmp
jbe
out
out
pop
mov
or
xchg
sahf
lods
xchg
and
add
and
jg
adc
mov
inc
adc
jge
mov
xlat
sbb
je
sbb
add
pusha
pop
cwtl
and
ss
pop
ror
cmp
notl
rcrb
mov
jmp
mov
addr16
fdivr
jno
mov
jmp
mov
xchg
cmp
mov
or
loope
jns
out
and
adc
lcall
outsl
aad
mov
int3
sub
jb
cltd
popf
scas
lock
sub
jl
pop
mov
push
or
mov
ret
scas
mov
cltd
sub
cmp
cs
rcll
stos
pop
sub
jp
mov
sub
dec
push
cmp
push
push
icebp
ss
adc
loope
pop
or
xchg
imul
pop
pushf
adc
cmp
mov
mov
cmp
sub
inc
sbb
pop
add
in
subl
xor
mov
pop
in
mov
xchg
jno
inc
sbb
or
mov
cmpb
jmp
cmp
pop
xchg
shll
lahf
sbb
mov
mov
in
inc
cwtl
jecxz
sbbl
outsb
push
ret
mov
xor
inc
test
fidivs
cld
lods
ret
lds
mov
pop
std
mov
xlat
dec
inc
mulps
imul
xchg
adc
es
jns
out
loop
or
scas
jae
adc
rcrb
pop
test
push
call
jno
cmpsb
xchg
cmpb
mov
fmull
sub
push
cmp
push
dec
scas
fwait
out
mov
lods
cmc
pop
jne
dec
rclb
xor
in
adc
jge
les
test
nop
fldcw
push
stos
mov
cmp
jle
into
or
pop
sub
ret
stos
and
daa
pop
testb
in
push
or
sub
stos
or
das
idiv
test
shrl
or
push
lcall
push
cmp
les
les
push
clc
jg
mov
pop
xchg
dec
ret
push
mov
movsl
lods
xchg
inc
and
iret
sub
int
mov
sbbl
loope
inc
jge
cmpsb
sub
dec
shlb
stc
sahf
sub
insl
add
jb
cmpsb
push
cmp
pop
or
addr16
xabort
or
fst
pop
ljmp
ret
jne
add
push
add
inc
fmuls
pop
dec
mov
xchg
xor
and
out
incb
in
test
out
and
fdiv
xor
fwait
push
fcoml
loope
inc
insl
fwait
mov
sub
out
mov
pop
mov
lret
pushf
mov
sub
cmp
lret
cmp
sbb
xor
mov
das
cmpsl
jbe
sbb
sbb
inc
mov
ret
fsts
lret
cmp
pop
mov
add
into
dec
in
sbb
cmp
insl
insl
mov
cmpsl
dec
dec
xchg
ss
xor
mov
shlb
sarb
pop
and
vpunpcklwd
push
mov
pop
jns
inc
mov
lahf
sub
sbb
sub
sarb
arpl
daa
insl
xchg
mov
pusha
jnp
cltd
mov
mov
jg
pop
mov
mov
adc
cs
cmp
ss
or
sbb
pop
sbb
cmpsb
aam
into
in
adc
fsubp
out
in
in
test
push
ret
fsts
bound
aas
or
sbbl
inc
andl
lcall
and
popf
add
sub
pop
xchg
dec
adc
cwtl
pop
ds
lds
xchg
das
repz
shrl
lret
sbb
or
pop
fs
inc
mov
push
mov
fiaddl
xchg
dec
fwait
push
and
add
lret
clc
aad
mov
mov
sahf
pop
ja
shll
arpl
xchg
fstpt
inc
shr
scas
das
xchg
xor
xchg
cmp
dec
aaa
in
push
mov
cmpb
lods
filds
jl
cmpsl
and
push
and
adc
aad
xor
and
scas
movsl
sbb
push
pop
push
faddl
jg
mov
out
cmp
clc
mov
mov
mov
mov
mov
adc
xor
mov
xchg
je
mov
ficompl
sahf
loope
mov
mov
pop
pop
arpl
fdiv
mov
inc
outsb
sbb
and
push
sbbb
mov
xor
cmp
arpl
mov
jp
lods
inc
mov
xor
adc
or
jmp
mov
imul
aaa
pushf
mov
xchg
mov
fldcw
stos
cmpsb
xchg
ret
dec
movsb
add
push
icebp
out
dec
fucom
sbb
testl
filds
shlb
mov
outsb
push
test
xchg
lds
mov
decl
xchg
aam
fdivl
sbb
xchg
cli
xor
aad
cs
int3
stc
fisubl
xchg
xchg
xor
xchg
mov
xor
imul
inc
and
push
dec
nop
mov
cmp
pop
add
dec
jae
jns
and
jns
pop
int3
dec
ja
dec
mov
add
punpcklbw
daa
lea
add
or
fisttpl
rolb
fldl
jae
vlddqu
dec
hlt
inc
movsl
push
push
mov
ljmp
jno
cmp
pop
bound
in
push
ljmp
mov
sub
js
outsb
jnp
mov
jmp
outsl
or
or
pop
cld
pop
scas
sbb
jg
dec
xchg
mov
pusha
dec
xchg
add
xchg
sub
push
inc
cmpb
int3
fildll
stc
push
jae
sbb
push
outsl
xor
fs
mov
out
xchg
mov
sbb
cmp
fwait
xchg
insb
push
lds
cmp
outsl
pop
nop
xor
jae
ds
nop
shrb
mulb
add
and
mov
sbb
movsl
mov
push
sub
les
scas
cmp
xchg
in
test
mov
jo
divb
dec
mov
and
insl
lret
imul
push
push
push
xchg
adc
les
ret
shlb
adc
add
rcl
test
movsb
out
rcrl
int3
in
push
out
jns
adc
pop
icebp
das
outsl
sbb
imul
movsb
mov
imul
lahf
cmp
sub
pop
jae
dec
addr16
pop
mov
popa
ss
jecxz
lds
movsb
out
fcmovb
jo
lds
mov
movsl
vcvtpd2dqy
inc
fdivl
inc
clc
xchg
mov
inc
and
adcl
jno
aam
test
push
push
jg
dec
insb
push
sub
mov
and
dec
dec
sbb
sub
jbe
out
adc
xchg
pop
mov
dec
fstps
fdivl
cmp
push
adcb
cmp
sahf
mov
xchg
lret
pop
mov
push
sbb
test
cltd
pop
arpl
mov
xchg
fbstp
inc
mov
push
mov
dec
imul
inc
cwtl
jb
rorl
clc
mov
and
mov
mov
dec
fs
xor
cmp
bswap
jge
or
mov
movsb
xor
push
adcb
push
int3
add
je
orl
adc
push
inc
mov
xchg
and
bound
cmpsl
or
insl
jne
mov
daa
inc
push
in
dec
pusha
sbb
dec
ds
jg
scas
in
rorl
jnp
mov
xchg
in
ret
mov
pop
jnp
movsl
ret
mov
jo
aas
xlat
or
inc
sub
and
repnz
sub
out
pop
dec
aas
xchg
pop
negb
or
or
adc
popw
inc
add
ljmp
arpl
cld
stc
fchs
mov
or
push
xor
sbb
int3
pop
adc
mov
pop
cmpsb
dec
out
aaa
dec
and
rorl
push
fstpl
and
mov
pusha
gs
daa
cmpsb
inc
push
ljmp
mov
cmp
je
lahf
push
sub
rolb
bound
push
mov
cld
ss
aam
sub
mov
stos
and
xchg
xchg
cmc
lret
out
or
call
jg
mov
sub
ds
and
dec
cmovge
dec
lret
mov
nop
movsb
jmp
scas
out
hlt
or
test
aas
pop
scas
insb
sbb
sbbb
loopne
push
mov
xor
xlat
push
incl
test
fsubs
mov
inc
ljmp
mov
xchg
cmp
ja
dec
lcall
jb
and
jp
cld
imul
xchg
cmp
in
jbe
mov
push
pop
repz
jecxz
out
or
cwtl
cs
out
cmp
sub
fs
int3
jno
fsubs
lds
xor
xchg
pop
adc
xlat
popa
hlt
repz
mov
test
stc
jbe
inc
add
jbe
aaa
in
and
mov
jo
lods
dec
int
jbe
inc
pop
test
jg
xor
lds
daa
sub
cmp
mov
adc
xor
sbb
xchg
inc
pop
lock
push
filds
lahf
pop
fdivp
mov
testl
mov
mov
icebp
mov
loopne
pop
or
jl
or
dec
pop
lock
sbb
push
add
out
sub
dec
inc
aad
xor
xchg
data16
loopne
cmp
lcall
into
das
ljmp
rol
adc
xor
lret
inc
dec
push
inc
add
lret
or
xor
fdivrl
sbb
dec
xor
mov
cld
jle
cmp
sbb
movsb
pop
fimull
int3
outsl
psraw
cs
imul
clc
jp
test
out
movaps
jae
add
les
cmp
lret
inc
sub
push
sub
in
insb
vmovlpd
xor
mov
testb
dec
add
insb
sub
sub
dec
dec
repz
pop
add
pusha
adc
pusha
movsl
xor
movsb
add
pop
dec
popf
xchg
xchg
int3
jle
or
insb
sub
lea
dec
or
jge
movsl
xor
lods
jge
sub
xchg
lret
xchg
or
out
aad
inc
or
pop
stos
repnz
jne
inc
or
loopne
inc
xchg
xchg
dec
xchg
imulb
stos
hlt
push
jmp
cwtl
mov
movsb
jmp
shlb
fincstp
insl
or
push
xlat
mov
out
popf
inc
stos
jl
in
mov
fsub
inc
dec
sbb
xorb
ss
jg
dec
sahf
inc
push
adc
push
add
ljmp
sti
pop
iret
arpl
arpl
add
cmp
mov
sub
jo
and
push
and
repnz
and
jp
jmp
sti
adc
and
loope
loop
ror
xchg
mov
push
faddl
call
pextrw
repnz
sbb
inc
xor
adc
js
nop
popf
mov
xchg
jecxz
add
sbb
add
lea
sbb
xchg
mov
es
flds
leave
fcompl
aad
sbb
xchg
xchg
out
repz
mov
stc
add
jno
mov
add
jo
cmpl
les
dec
fdivrs
mov
sbb
out
xchg
inc
jne
xchg
repnz
and
std
sbb
popa
sbb
mov
stos
ss
xor
jecxz
bound
mov
and
push
rcll
xchg
pop
or
push
or
or
xchg
mov
insl
pop
or
mov
ds
in
mov
inc
cmpsl
sbb
mov
or
jo
mov
jl
jo
das
sbb
adc
adc
or
xchg
fimull
divb
mov
xor
loop
pop
mov
cmc
scas
ss
mov
in
dec
mov
fisubrs
popf
ret
sbb
xor
mov
pop
ljmp
jno
adc
adc
sbb
mov
push
rolb
jmp
sub
inc
sub
cltd
add
jbe
push
fistps
adc
in
rclb
cmp
lods
loope
xchg
mov
lahf
and
lock
pop
xchg
xchg
shlb
inc
test
mov
iret
mov
leave
adc
and
test
push
xor
addl
adc
fmull
insl
sub
dec
mov
sbb
inc
inc
xchg
push
cli
test
cltd
sub
sub
jae
adc
jnp
adc
or
repz
cs
sub
xor
inc
enter
pop
mov
mov
inc
jb
lret
xchg
mov
into
xchg
lods
push
lds
mov
xchg
pop
lds
daa
xchg
ret
push
int
jmp
add
add
dec
ret
outsl
push
mov
jbe
xchg
popa
cmpsb
push
jae
pop
inc
shll
pop
push
icebp
xchg
cli
outsb
adc
mov
stc
and
inc
xor
mov
add
in
and
cmc
mov
inc
xchg
stos
lods
sub
stos
sti
jae
cmp
rcrl
xlat
sub
push
jg
jne
or
dec
mov
fst
faddl
push
cltd
mov
scas
push
push
int3
ret
xorl
mov
sbb
or
out
mov
popf
sub
test
repnz
ret
cld
sub
jle
or
iret
xlat
sbb
xchg
cs
nop
xchg
inc
aas
mov
push
out
lds
repz
test
or
mov
xor
pop
mov
or
dec
or
push
inc
push
fsubl
mov
scas
xchg
testl
adcb
inc
push
shl
inc
jg
mov
lods
cmpsb
cmc
pop
ror
lcall
jg
sub
jecxz
es
pop
push
jge
adc
mov
push
mov
repz
jle
and
cwtl
fwait
jle
icebp
mov
ss
adc
push
inc
xchg
pop
inc
shrl
lock
test
xchg
addr16
lahf
xor
dec
repz
adc
outsb
pop
pop
dec
jno,pt
insb
inc
mov
pushf
hlt
lock
popf
pop
cmp
xor
mov
enter
pop
in
js
push
sbb
push
repnz
lret
sbb
cld
dec
cmp
ja
or
dec
or
jb
ja
scas
dec
fisubrs
sub
cli
inc
and
das
xor
cld
mov
push
xchg
push
jg
sarl
mov
inc
subb
lock
clc
dec
pop
lock
cltd
cmp
jl
adc
dec
sbb
jge
xor
stos
inc
pusha
jge
nop
xchg
iret
fsubl
lret
dec
mov
and
scas
loop
lds
into
dec
dec
mov
pop
out
mov
mov
dec
jae
and
es
ss
lcall
aaa
xor
and
sahf
bound
adc
pushf
insb
dec
mov
fwait
xorl
scas
stc
adc
mov
pop
jp
jg
push
movsb
sbb
pop
lret
adc
pop
int3
fistpll
shlb
test
pop
test
dec
push
push
xchg
shll
jb
lods
pop
pop
das
vmread
cmpsb
xchg
mov
pop
sbb
arpl
dec
and
outsb
mov
nop
pop
popa
cmp
fcmovnb
leave
sbb
loop
mov
adc
adc
mov
mov
mov
xchg
xchg
shll
data16
pop
mov
xchg
xchg
push
adc
xor
out
sti
cmpsb
aam
sbb
xor
push
add
mov
xor
out
mov
test
mov
push
cwtl
test
mov
xchg
pop
in
adc
sbb
cli
push
mov
or
push
add
adc
shll
test
sbb
jmp
push
mov
cmp
push
xchg
roll
pop
pop
dec
mov
cmp
mov
jbe
adc
movsb
mov
mov
push
mov
and
sbb
outsb
and
ret
push
leave
fists
dec
int
in
jl
mov
xchg
inc
fbld
mov
cmp
aad
jne
das
mov
adc
xor
sub
mov
adc
js
inc
pop
dec
leave
leave
push
fwait
or
dec
mov
adc
addr16
out
adc
jg
sbb
jns
insl
jl
push
ds
jnp
and
lea
xchg
lcall
push
ficoml
mov
pushf
jb
xchg
iret
jmp
dec
lret
pushf
aam
mov
fsubrs
adc
into
dec
push
mov
mov
mov
mov
cmp
push
lods
mov
sbb
mov
cmp
ds
inc
mov
cs
jle
out
push
pop
mov
scas
cmp
std
inc
hlt
in
fistpll
mov
mov
movsl
add
pop
inc
cs
enter
sbbl
imul
jns
mov
pop
test
cmp
leave
iret
mov
add
inc
xchg
shrb
aas
xchg
roll
mov
lret
or
stos
cmp
adc
mov
mov
push
dec
cs
push
cmpsb
mov
pusha
clc
dec
adc
iret
mov
sbbl
and
gs
scas
cli
sbb
push
cmpsl
cwtl
xchg
jle
aad
push
push
mov
push
and
mov
cmp
int3
lret
mov
pop
nopl
sub
inc
test
scas
lods
daa
shlb
lret
stos
mov
xor
loopne
rcll
cmc
add
cmpsb
mov
shr
jae
pop
sbb
add
jnp
lods
sub
lods
pop
or
or
popf
into
mov
mov
mov
out
lahf
sahf
gs
push
jnp
mov
outsl
fs
subl
int
xor
call
int3
out
xlat
cwtl
loope
loop
aam
jl
in
or
dec
mov
or
lock
jo
pop
jle
repz
mov
test
imul
push
pop
shld
out
outsb
push
push
lods
out
loopne
leave
push
mov
gs
xor
xchg
sub
scas
mov
or
mov
subb
mov
lret
mov
faddp
shlb
and
mov
dec
test
daa
pop
loopne
xchg
shl
mov
in
cmp
jno
inc
cli
rcrl
jae
inc
fs
scas
jo
ror
mov
push
jmp
adc
popa
cmp
pop
das
gs
leave
push
fidivl
cmp
les
popf
imul
stos
push
movsb
pop
mov
imul
mov
push
xor
xchg
mov
push
movsb
and
mov
mov
lods
xchg
ja
mov
xorb
rcl
daa
mov
and
int
addr16
or
popf
adc
out
insl
dec
aas
mov
hlt
inc
pop
sbbb
push
sbb
adc
stos
insb
xor
nop
sbb
xor
fnstcw
mov
pushf
into
xchg
scas
lret
and
out
lods
xor
jecxz
cmpb
mov
jg
movsl
sarb
in
mov
mov
rclb
mov
aad
mov
leave
mov
enter
out
lcall
cmp
xor
mov
mov
dec
dec
in
fs
dec
test
pop
sub
cmpsl
pop
sbb
sti
jle
ret
test
jp
cmp
out
add
jp
fimuls
out
out
ljmp
movsl
ret
jl
shll
mov
sbb
outsl
mov
xchg
incl
push
out
shrb
inc
adc
ljmp
insb
jmp
es
xchg
adc
adc
mov
outsb
ds
sbb
ljmp
je
leave
enter
mov
mov
enter
daa
jne
int3
lcall
aaa
icebp
sub
pop
in
inc
repz
sbb
sub
out
imul
xchg
xchg
push
mov
add
and
mov
mov
xchg
xchg
incl
and
xorb
xorl
popa
clc
dec
lea
push
xchg
push
sbb
outsl
cmp
xchg
data16
pop
mov
xor
mov
sub
dec
and
jae
pminsw
or
and
pop
jle
and
inc
mov
push
ss
es
loope
push
xor
movsb
jnp
sbbb
fisubrs
hlt
jle
xor
lahf
mov
cwtl
push
pop
call
jno
fsub
sub
pop
sub
cmp
push
jbe
pop
sbb
pop
leave
pop
lods
clc
or
cmp
pushf
xchg
or
mov
pop
cmp
lock
push
fsts
lahf
push
add
sbb
frstor
push
loopne
mov
cmc
rcr
lret
cld
or
pop
pop
pop
mov
or
inc
in
leave
xor
int
xor
add
ret
int3
or
loop
xor
or
jne
xchg
jo
adc
jle
ljmp
pop
or
sbb
insb
adc
movb
out
inc
in
in
pusha
iret
cli
dec
test
ret
imul
adc
inc
push
arpl
cmpsl
les
inc
outsl
andl
xchg
out
inc
adc
dec
dec
arpl
cmc
sti
clc
or
leave
into
cs
scas
fsts
or
add
xor
cmp
sub
xor
test
or
das
mov
pop
pusha
mov
scas
mov
or
mov
movl
jge
fdivl
addr16
or
push
mov
jno
test
or
je
cmp
scas
loop
xlat
gs
in
ror
imul
testb
bound
lea
aad
and
push
dec
mov
cmpsb
sbbl
stos
stos
or
mov
cmp
outsb
clc
sti
cmpsb
orl
pop
outsb
dec
cmp
hlt
dec
add
subb
aad
filds
jmp
iret
mov
aas
jno
cli
xchg
xchg
pop
add
je
out
cli
subl
imulb
mov
fwait
pop
stos
cltd
jge
pop
mov
inc
dec
lret
idiv
mov
sbb
dec
mov
xchg
test
adc
jo
pop
out
repz
cs
sub
lea
test
icebp
pop
cmc
mov
mov
dec
xor
lret
outsb
insl
cmp
popa
jo
cmpsl
push
les
outsl
mov
not
lds
push
fildl
in
mov
cwtl
pop
sbbb
pop
cwtl
and
nop
je
test
mov
jmp
sub
pop
dec
scas
mov
dec
sub
out
pop
push
popf
dec
sbb
adc
inc
jg
int3
add
sbb
scas
xor
test
sbb
add
mov
test
pop
lahf
arpl
in
mov
adc
push
jb
lahf
outsb
mov
rep
xor
mov
mov
ja
jp
sbb
sahf
js
sahf
test
inc
jnp
push
aaa
pop
lods
xchg
ret
jmp
xor
out
pop
jns
push
ss
push
mov
dec
pusha
mov
enter
push
mov
xor
xchg
arpl
or
negb
das
pop
jb
leave
mov
mov
xor
in
lds
add
sahf
sahf
aaa
call
jns
sti
sahf
lret
dec
dec
adcb
or
inc
sbb
outsl
push
dec
mov
push
push
mov
and
leave
cli
fwait
cmc
pop
xchg
mov
or
adc
cmp
push
idivb
xor
push
je
cmpsl
sbbb
dec
rcr
adc
adc
aad
lds
cmc
sbb
in
push
jne
scas
push
mov
rolb
das
inc
add
sbb
repnz
and
push
fcoms
sub
push
or
jmp
xchg
popf
test
mov
dec
cmp
jne
lret
xor
stc
int
mov
loop
mov
and
clc
or
test
daa
fstl
cmpsb
int
mov
push
mov
inc
fcompl
fs
mov
jnp
arpl
sub
dec
test
imul
rol
outsl
cmpsl
sbb
stc
into
int
and
clc
popf
popf
xchg
ret
fcomi
cmp
popa
mull
in
out
lret
ret
loopne
stos
aas
or
inc
rcrb
fldenv
in
aas
sbb
add
add
sbb
aad
outsb
js
add
xor
ljmp
lods
sbb
lods
lods
cmp
pop
fidivl
push
fcmove
xlat
out
call
cwtl
sti
cwtl
lcall
gs
mov
mov
frstor
fnstcw
mov
rorb
push
dec
mov
mov
mov
out
and
ljmp
cmp
jb
scas
push
xchg
sbb
outsl
fistl
aam
cmp
rcll
ficoml
lcall
repz
lock
test
jecxz
mov
dec
fs
cmp
int
pop
and
add
pop
and
js
int
mov
mov
mov
div
jp
mov
pop
dec
test
std
cwtl
test
std
stc
movsl
imulb
out
dec
addb
pop
out
and
jecxz
jl
push
pop
add
popf
pushf
inc
repnz
out
dec
adc
int3
test
lods
push
sub
lock
in
pop
lock
push
repnz
or
push
inc
leave
outsb
pop
sub
ret
fldln2
mov
jecxz
cmp
push
sahf
adc
fwait
cmp
inc
movsl
outsl
xchg
outsl
shrl
jns
sub
out
cmc
fiadds
lahf
shll
out
dec
movsb
inc
es
push
jg
and
fbld
mov
bound
decb
mov
mov
enter
clc
xchg
push
dec
push
or
cmp
and
pushf
fldenv
inc
incl
inc
call
dec
mov
mov
jge
enter
ret
aas
rcll
or
neg
jecxz
test
cmp
test
cmpl
mov
inc
mov
xchg
adc
push
adc
sbb
mov
pop
lret
pop
pop
out
adc
imul
xor
fadd
insb
mov
cmp
aaa
sti
enter
push
aam
shl
into
mov
cmp
xchg
fistps
adc
mov
icebp
sbb
pop
aas
jb
cmp
fstl
frstor
and
push
arpl
out
jle
cmpsb
add
jg
lahf
and
pop
lea
push
inc
lcall
and
sti
cmp
mov
arpl
icebp
mov
dec
cs
xchg
mov
mov
sti
push
rcrb
pop
jl
pusha
push
dec
pop
sub
cmp
dec
xchg
or
cmpsl
outsl
test
aam
outsl
inc
sub
orb
mov
push
das
or
mov
xor
leave
pop
push
or
pop
xchg
or
inc
or
test
mov
mov
mov
loopne
mov
les
sarl
iret
mov
xchg
dec
push
les
dec
jmp
cmp
xlat
imul
fcomps
add
dec
jmp
mov
mov
cmp
cltd
pop
repz
xor
and
xor
sbb
add
cmp
pop
loopne
adc
mov
sbb
adc
lcall
mov
lret
or
xchg
mov
fs
xchg
inc
pop
push
ja
cmp
insl
sub
outsb
mov
cli
jns
inc
scas
popf
push
push
lods
out
dec
sub
fmuls
xor
cmp
imul
push
aad
das
decl
mov
ret
adc
and
xor
cld
pushf
ss
test
cld
pop
loop
sub
cld
mov
je
jge
pop
or
and
add
pop
in
jge
cmp
jle
test
ja
dec
inc
inc
jo
clc
addb
or
arpl
xchg
test
in
iret
sub
ret
push
add
fimuls
pop
pop
sub
in
jp
mov
sub
je
das
iret
fcmovb
leave
jne
cli
push
lods
testl
fstpl
sar
adc
jno
fisubrl
mov
jb
mov
dec
shrl
cmp
lock
out
shll
scas
or
rorl
add
lahf
jmp
push
fwait
push
loopne
push
aaa
jecxz
shr
int
movsb
push
push
mov
mov
pop
loop
mov
add
fs
jp
in
out
rcll
ficoml
dec
cmpsl
fadd
jne
push
mov
inc
adc
add
jns
dec
pop
add
xchg
data16
fnstenv
fmull
inc
ljmp
push
pushf
cli
adc
jne
sbb
aam
clc
ja
mov
cmp
jb
xor
ds
jb
mov
mov
test
mov
or
jno
aaa
and
popf
pop
add
and
outsl
fs
bound
xor
pushf
dec
stos
repz
push
push
fst
mov
sti
iret
sbb
cs
loopne
pusha
jge
popa
xchg
sbb
das
xchg
push
mov
adcl
adc
dec
lret
xchg
leave
aaa
mov
mov
mov
jmp
push
or
mov
loope
push
sub
fwait
xchg
pop
addr16
into
flds
xor
pop
inc
jne
shll
test
push
iret
xchg
and
and
mov
adc
add
jle
addr16
idivl
and
pop
dec
push
jp
mov
shlb
popf
dec
pop
aad
inc
sub
and
mov
pop
xor
sbb
and
pop
cmp
and
lods
cmpsl
adc
lret
scas
pusha
sbb
inc
add
sbb
rcr
not
xor
inc
cmp
sbb
mov
dec
stos
lret
loop
push
pop
mov
insb
mov
xlat
mov
jns
js
xor
pop
addb
imul
sbbl
scas
int
inc
imul
insl
fsubrp
or
in
xor
mov
xor
test
loop
xor
cs
mov
push
ja
insl
or
xchg
scas
add
sub
shlb
out
push
jge
adc
mov
add
pop
mov
inc
movsb
sti
cmp
enter
fwait
jp
inc
xor
jge
test
test
fadds
adc
xor
push
and
and
mov
pop
pushf
stos
sbb
fisubrl
lods
mov
jo
xor
outsl
popa
aas
xlat
add
jo
push
lods
inc
inc
inc
jo
mov
push
cs
adc
repz
and
mov
and
sahf
jg
sbb
jmp
mov
in
fcmovnu
mov
adc
and
mov
xchg
push
add
pop
daa
inc
movsl
sbb
mov
add
js
in
fisttpl
pop
pop
mov
push
gs
pop
pop
daa
into
adc
xor
insl
lods
jbe
aam
cli
rorb
test
dec
sti
jbe
and
xchg
cwtl
in
fwait
jp
mov
pop
out
inc
pop
push
add
or
xchg
add
addr16
loop
push
das
dec
mov
clc
mov
mov
jmp
in
adc
int3
cmp
out
lahf
push
ret
xchg
mov
js
sbb
scas
jl
xchg
push
insb
in
mov
push
jge
adc
inc
mov
adc
pop
adc
call
or
into
lahf
aad
xor
dec
sahf
adc
add
cltd
outsl
lret
decl
pop
add
and
movzwl
bnd
add
mov
xchg
negl
inc
mov
stc
mov
xchg
addr16
shrb
pop
pop
cmp
rorb
fsub
fmulp
pop
jno
lods
dec
pop
or
add
mov
addr16
aad
outsl
cltd
arpl
repz
or
ljmp
fstpt
pop
or
dec
push
push
lods
adcb
rcrb
sbb
cmp
xor
jge
mov
loopne
fwait
incl
xor
sub
ret
aaa
or
in
inc
clc
pop
adc
dec
push
mov
es
dec
out
fsts
and
daa
pop
pop
popf
out
dec
push
iret
cmp
xor
out
inc
imul
fldenv
push
sub
mov
popa
xchg
daa
outsl
push
rorl
jbe
and
int
xor
cmp
sti
adc
fldl
pop
mov
mov
out
and
iret
repnz
and
jo
sub
loop
sbb
xor
int3
gs
insl
xchg
mov
push
test
mov
div
insb
xchg
xor
or
ds
ficomps
into
adc
jl
int
mov
jnp
outsl
in
dec
stc
adc
mov
leave
cld
add
std
xchg
cmp
pop
call
xchg
or
or
lret
add
aas
fs
pop
jl
repnz
cmp
out
enter
out
rorl
push
data16
aas
inc
push
aad
outsb
sarb
xor
inc
aaa
loope
mull
adc
xor
jb
in
sbb
mov
test
push
sbb
mov
mov
mov
mov
adc
and
in
movsl
pop
sbb
je
mov
pop
xchg
or
push
mov
jne
cltd
jg
dec
mov
lds
and
loope
cmp
enter
inc
fs
mov
pop
jb
or
lock
fcomi
mov
adc
jnp
subb
movsb
fildl
add
or
cld
stos
pop
sbb
pop
int3
rcll
jb
ret
adcl
rorl
out
inc
shrl
xchg
mov
adc
popf
pusha
mov
test
pop
fwait
test
jmp
mov
les
cmc
int
sub
pop
in
sbb
sub
sub
in
negb
out
jecxz
pushf
lds
outsb
repnz
repz
sti
addr16
dec
mov
les
jo
pop
std
dec
das
cwtl
dec
aas
sub
ljmp
fstpt
lods
jp
pop
dec
or
xchg
lret
dec
jge
mov
jnp
mov
push
xchg
jle
adc
sar
imul
pop
shll
xchg
mov
or
es
imul
jnp
insl
aaa
xor
daa
shll
push
outsl
mov
fnstsw
clc
mov
add
mov
pushl
out
pop
push
mov
dec
push
bound
cmpsl
insl
fistps
and
xchg
popa
mov
loopne
stos
mov
pop
insl
push
and
fwait
mov
pop
fsubrl
cmc
stc
cltd
lods
jmp
pop
mov
or
call
sub
xchg
popf
outsl
lcall
sbbl
push
pop
mov
in
ja
sbb
mov
sbb
push
pop
cmp
mov
or
in
pop
jg
inc
push
inc
xchg
cmc
inc
jae
inc
push
mov
and
jp
mov
mov
add
jbe
adc
pop
xor
and
or
leave
push
xchg
insl
push
cmpsb
je
pop
sub
sarb
add
ret
test
xor
xor
lret
gs
jnp
push
insl
ret
pop
mov
adc
push
jno
lods
out
mov
in
lods
add
loop
lods
sub
xchg
push
out
pop
jae
xchg
inc
pop
inc
mov
aas
mov
jae
imul
clc
jp
jecxz
daa
push
push
lds
fists
push
lds
lock
mov
cmpl
rcrb
bound
xchg
inc
push
daa
xor
scas
iret
mov
jb
jle
fbld
push
pop
mov
add
add
data16
inc
scas
adc
add
rorb
ret
rolb
mov
shlb
std
push
pop
lds
push
gs
push
movsl
mov
les
and
stos
dec
fsubs
lcall
push
mov
imul
ret
cmpsl
mov
outsl
pushf
pop
out
adc
pop
lds
mov
dec
repnz
push
and
push
sub
clc
stos
or
mov
cmp
pop
mov
xchg
add
sub
lret
pusha
lret
pop
adc
push
inc
dec
inc
out
fwait
xchg
movsl
popa
pop
pusha
dec
adc
sbb
dec
mov
sarl
mov
dec
pushl
outsb
cmc
sub
dec
fidivs
nop
jnp
nop
shl
xor
ss
lret
push
mov
jecxz
test
xchg
pop
xchg
lods
mov
mov
popa
scas
and
push
cwtl
jo
push
xchg
pop
cmp
insb
orb
mov
xchg
cmp
mov
push
jb
daa
jne
jle
and
pushf
faddl
testb
add
inc
data16
sbb
rorl
xor
jge
mov
stc
push
ss
icebp
cmp
cmp
lods
stos
lret
pop
aad
add
push
sti
iret
xchg
mov
push
roll
daa
lods
out
cmp
jecxz
push
sbb
enter
clc
and
sahf
mov
dec
test
andl
xorl
jge
dec
lret
in
adc
xchg
inc
inc
mov
lret
dec
and
aam
rcrl
rolb
js
loopne
push
ljmp
pushf
dec
sub
sbb
xchg
dec
scas
es
sbb
clc
rol
push
decb
jg
push
adc
and
incb
subl
cs
xor
xor
sub
ss
movsl
jae
xchg
sbb
push
pop
xor
mov
outsb
xor
inc
lds
jb
hlt
push
xchg
push
es
sti
mov
mov
fsubrl
mov
mov
inc
push
push
xchg
push
adc
dec
int3
in
out
sub
out
inc
mov
add
mov
sub
addl
pop
loopne
cmp
fdivrs
pusha
add
repz
inc
add
cmp
xlat
mov
gs
pop
xchg
les
outsb
fidivrs
insl
ljmp
cmp
aam
mov
mov
ss
idivb
test
les
mov
pop
jmp
nopl
add
jnp
movsb
js
dec
inc
xchg
adc
cmc
pusha
mov
hlt
jp
int3
or
loopne
jl
dec
push
rol
test
test
sub
pop
insl
or
pusha
popw
add
sub
fiadds
scas
or
int3
leave
sbb
xchg
aaa
incb
daa
xchg
mov
les
ljmp
rorb
xor
sbb
dec
pop
add
aaa
push
mov
adc
jbe
shll
sahf
dec
inc
jbe
testl
xchg
ss
sahf
repz
mov
sar
nop
fcomps
inc
mov
mov
mov
movsb
inc
mov
sarl
dec
and
dec
lock
in
jae
enter
mov
push
shlb
mov
in
mov
mov
lea
xor
mov
sub
rorl
cld
mov
mov
out
ljmp
mov
adc
fimull
xchg
fsubrl
xchg
inc
daa
adc
or
aaa
pop
push
push
in
rcll
lock
stos
addr16
adc
inc
xlat
cwtl
inc
xchg
xchg
sub
jnp
adc
addr16
or
int3
out
in
jg
insl
mov
daa
pop
addr16
bound
movsb
push
pushf
pop
les
js
fsubrs
inc
ss
stc
mov
push
xlat
inc
leave
das
stos
xor
sarb
int
sbb
int
xor
jp
imul
adc
adc
xacquire
sar
in
sbb
int3
inc
jbe
adc
scas
cwtl
cmp
push
shlb
cmp
iret
call
rolb
pushf
testb
outsb
cld
adcb
push
push
mov
jle
jle
jmp
or
nop
and
mov
dec
idivl
bound
shl
movsb
mov
xor
out
mov
jge
testb
sbbb
das
cmp
xor
add
push
mov
outsl
adc
loop
sbb
icebp
xchg
in
fmull
movb
dec
inc
xor
sbb
dec
orb
xlat
cmp
mov
in
mov
loope
jbe
inc
lock
cli
lods
jle
and
stos
lock
js
loopne
dec
mov
sub
ret
shll
dec
jnp
lret
push
mov
fmull
and
outsl
scas
xor
jecxz
jg
inc
mov
ret
pusha
xor
lcall
adc
or
adc
or
scas
js
and
bound
pop
mov
aaa
test
das
inc
jnp
xor
lock
dec
inc
pop
cmpsb
mov
aas
int3
push
inc
xor
mov
jne
shrb
adc
lods
xchg
xchg
mov
jl
mov
cltd
das
int3
or
in
jnp
in
sbb
add
repz
loopne
xchg
addr16
xor
mov
adc
mov
push
fnstcw
imul
mov
xchg
and
push
mov
dec
repz
data16
pushf
mov
sub
push
pushf
sbb
ficoms
int
loopne
mov
es
inc
andl
enter
cmpsb
lods
sbb
push
shl
fcomi
cmc
iret
into
xor
jb
jmp
lret
jae
pop
das
dec
inc
xchg
repz
jg
and
dec
je
jns
mov
mov
ljmp
jnp
daa
mov
rolb
mov
cs
mov
jno
sbb
jecxz
mov
xchg
adc
mov
dec
pop
and
mov
fstl
das
jg
fwait
imul
push
imul
xchg
dec
dec
cmp
lods
imul
sbb
cmp
or
and
or
cwtl
adc
push
mov
hlt
push
mov
mov
dec
movsb
mov
dec
mov
gs
imul
xchg
sbb
jnp
cmpsl
dec
sub
or
push
call
pushf
jle
mov
xchg
sub
lahf
mov
cmpsl
add
push
fbstp
xchg
cmp
test
pop
leave
add
pushf
gs
add
jae
push
sbb
call
xchg
test
xchg
out
aaa
jns
mov
add
notl
aad
addb
insb
int3
xor
sbb
lcall
adc
fstpt
cmp
mov
cmp
and
xor
xchg
inc
pop
shrl
sub
jns
out
je
cwtl
fisttpll
stc
inc
lret
mov
data16
fs
xor
cmp
jmp
shl
xor
dec
lcall
es
cmp
xchg
fwait
bound
push
leave
xchg
inc
fsub
push
sbb
sub
inc
xchg
mov
jg
testl
bound
or
jnp
aam
xchg
and
movsb
inc
inc
ds
idivb
stos
add
cltd
jb
inc
sub
push
lock
add
jbe
aad
xlat
dec
sbb
mov
jp
insb
jge
pushf
cli
adc
pmaxsw
push
inc
call
fstpt
jl
idivl
xchg
mov
or
cmpsl
mov
sbb
test
inc
js
ret
jle
cmc
push
nop
or
mov
nop
inc
cmp
or
xor
xchg
gs
ds
dec
in
pop
mov
mov
fcompl
int3
fiadds
inc
out
movsb
cmp
adc
xor
stos
in
shr
rcll
push
je
cmpb
ret
pop
insl
jg
pop
pop
clc
sahf
popa
lret
rcrb
mov
and
out
inc
pop
dec
sub
push
pop
sub
shl
int3
pusha
in
xor
cli
stos
mov
shll
xchg
mov
subl
mov
shlb
mov
sbb
dec
pop
sub
icebp
jns
inc
fnstcw
xchg
or
popa
adc
cmp
inc
and
adc
xchg
xchg
push
fldcw
popa
push
push
in
mov
mov
lea
cltd
pop
mov
addr16
int
pop
fs
dec
and
jp
hlt
and
call
pop
inc
jb
xchg
mov
mov
push
sub
sub
mov
sbb
mov
iret
cmp
gs
xlat
and
inc
repz
or
jbe
adc
or
jnp
fadd
jns
pop
andl
fsubrl
push
jne
loop
scas
inc
stos
fcompl
mov
and
mov
inc
loop
lea
push
mov
pop
add
mov
sahf
clc
out
fists
sbb
arpl
js
inc
imul
and
cld
xor
jae
pop
movsb
push
xchg
pushf
pop
and
inc
mov
insl
ret
adc
adc
cmp
push
sub
imul
and
pusha
lahf
push
pop
or
mov
mov
push
mov
pop
loop
cmc
nop
pop
sarl
pop
shll
iret
adc
pop
pop
je
in
repnz
mov
push
rcr
add
loopne
inc
push
clc
es
pop
dec
lods
ljmp
jl
jbe
test
jg
fstpt
in
mov
inc
add
inc
jnp
int3
aas
cmpsb
in
iret
xchg
in
push
stc
and
lds
test
fildl
mov
test
adc
testl
dec
push
mov
inc
out
ret
pop
adc
mov
test
incb
cmp
lahf
icebp
pop
out
add
push
pop
dec
test
inc
push
cli
inc
out
jmp
sub
scas
frstor
and
push
test
or
in
or
movsb
mov
inc
sbb
cmpsb
dec
and
pop
mov
lahf
push
inc
push
sub
mov
call
leave
xor
into
into
addr16
imul
pop
push
clc
call
ud1
int3
in
in
scas
push
jbe
int3
addl
cmc
sbb
movsl
ret
mov
addl
test
push
test
int
xor
inc
in
fwait
mov
flds
xchg
std
mov
adc
in
add
popa
clc
out
leave
inc
dec
and
xor
lcall
out
aas
int
cmp
loope
in
ret
push
insl
push
sub
ds
push
inc
or
push
negb
xor
outsb
cmp
mov
sarb
or
shlb
cmp
add
fwait
dec
lods
fnsave
cltd
mov
clc
jg
xor
or
loope
jno
sbb
dec
push
ret
or
mov
in
add
inc
cld
lahf
mov
jbe
insl
push
mov
cmp
pushf
dec
icebp
aas
adc
pop
xchg
and
call
push
pop
mov
dec
cli
sub
outsb
mov
jae
push
dec
sub
mov
fs
sbb
fdivrs
mov
mov
cmp
js
negl
in
stos
adc
pop
mul
cmp
jle
pop
push
stc
movsl
das
adc
xor
adc
sbb
fisubs
jnp
jb
sbb
mov
mov
jne
mov
loopne
daa
add
sub
adc
in
mov
jae
rcll
repnz
fimull
mov
jmp
out
mov
pop
fbstp
loop
cltd
pop
lock
cwtl
cld
xchg
push
add
lods
ficomps
cmp
xchg
cmp
dec
rcl
push
loop
pop
imul
aam
test
pop
aad
std
pop
xchg
push
loop
mov
iret
pop
mov
adc
pop
cwtl
xchg
inc
dec
jecxz
sti
ds
clc
mov
js
push
loop
pop
cmp
mov
in
push
xchg
cmc
cltd
xor
icebp
adc
ds
mov
das
cltd
dec
into
push
shl
aad
or
or
mov
mov
fidivrl
or
xor
adc
aad
mov
push
imul
sbb
or
push
lea
push
inc
lods
gs
cmp
out
ficoms
ds
jae
dec
ljmp
dec
cmp
mov
cs
mov
inc
sub
jae
fldt
mov
mov
addr16
loop
and
xchg
jl
lret
push
loop
sti
pop
add
pop
and
inc
test
fistpl
xlat
fbstp
out
sbb
rcrl
fistpll
shlb
push
xlat
es
adc
and
and
jae
js
mov
add
adc
leave
mov
mov
push
inc
mov
mov
sub
lods
push
pop
xchg
push
outsb
add
pop
or
cmp
adc
xor
test
stos
stos
out
mov
mov
movl
pop
test
push
push
insb
pop
aam
jl
mov
push
mov
xchg
lock
or
xchg
ja
mov
xor
and
adc
shrl
xchg
dec
mov
or
ret
xchg
push
add
fstl
push
pusha
dec
jl
adc
pop
decb
aad
aas
inc
dec
pushf
sarb
cli
xor
xor
das
in
inc
fwait
dec
push
mov
inc
sbb
arpl
pop
ficoms
jb
mov
int3
mov
lds
in
pushf
xor
aas
mov
lods
adc
and
or
xchg
stos
fwait
push
pop
inc
pop
sahf
or
imul
mov
imul
movsb
scas
fwait
push
xor
push
hlt
insl
and
jbe
or
inc
inc
jge
sti
mov
test
rcr
jmp
and
mov
dec
dec
arpl
test
addr16
pop
push
mov
xchg
fcmovnu
pop
or
sahf
pop
nop
mov
push
popf
cmp
inc
xchg
mov
test
jmp
sub
fnsave
cwtl
mov
repnz
mov
ss
cmp
rolb
popf
sub
dec
sub
cld
mov
push
lds
jbe
lret
mov
jmp
sub
ret
loope
ljmp
int
int3
in
and
repnz
pop
ss
popa
add
sbb
dec
stos
adcl
pop
add
xlat
xchg
mov
or
pop
xchg
in
fs
mov
push
ficoms
fwait
iret
xchg
sarl
xchg
fwait
adc
daa
test
xlat
sar
sbb
aas
cmp
cmp
dec
xor
arpl
ret
ret
lahf
rol
stos
dec
imul
mov
pop
mov
int
sar
ret
loop
pop
cmp
and
cmc
pusha
les
imul
push
movsb
call
out
out
adcb
cmp
push
in
dec
jmp
mov
or
mov
push
or
push
jge
mov
popf
mov
ljmp
push
push
inc
push
sbb
pop
add
inc
mov
sub
outsb
push
lods
je
cs
ja
jb
pop
shll
mov
mov
xor
sbb
inc
out
jae
sti
lods
nop
cmp
xchg
dec
mov
cwtl
push
subb
loop
adcl
or
and
dec
mov
into
push
test
push
stos
aam
push
cmp
mov
dec
nop
xlat
mov
pop
mov
int3
jo
and
stos
mov
fisubs
cltd
test
sti
out
scas
adc
inc
xor
or
xor
inc
cltd
pusha
add
loope
mov
sub
adc
sbb
popa
xor
dec
dec
imul
aaa
stos
push
and
xchg
xchg
inc
cmpsb
sahf
dec
icebp
test
mov
loope
inc
call
pop
and
push
push
icebp
push
repnz
es
sub
mov
inc
mov
scas
add
cmc
ja
shl
pop
enter
add
rcrb
or
and
inc
hlt
jl
movsl
add
sub
imul
sub
cmp
out
xor
movsb
out
xchg
add
sub
cs
call
cmp
dec
js
sub
mov
cmp
or
call
push
dec
xchg
out
pinsrw
inc
mov
mov
test
test
enter
cmp
ja
pusha
popa
mov
adc
push
cmc
int
insl
out
in
sub
jmp
mov
sbbb
xchg
std
popa
cld
pop
iret
xlat
cmc
push
pop
cmp
stc
into
cld
into
push
out
and
pop
jo
inc
and
test
add
cmc
in
sahf
and
int
inc
jb
not
mov
and
inc
and
stos
sbb
cmpl
ret
pop
in
mov
inc
ja
cmp
add
fcomi
punpcklwd
lret
dec
cmpsb
insl
test
xchg
call
inc
sub
dec
mov
cmc
dec
jbe
insb
jecxz
cmp
push
mov
and
int
or
adc
or
aaa
mov
sub
in
pop
sub
and
mov
mov
jge
repnz
ja
outsl
stos
xor
hlt
push
or
jle
loopne
lods
js
dec
adc
into
gs
and
aam
jne
inc
jne
mov
imul
std
pushl
jge
clc
xlat
or
call
pop
sub
mov
hlt
cwtl
push
dec
fidivrl
mov
cs
inc
data16
jbe
mov
rcl
pop
enter
subl
sub
sub
les
sub
sub
cwtl
add
enter
push
fdecstp
sub
mov
scas
xchg
in
loopne
lret
js
imul
push
dec
or
ds
subb
pop
push
add
inc
push
or
outsb
hlt
imul
data16
repz
pop
lret
ss
lret
sub
dec
addr16
inc
arpl
mov
cmp
clc
int
fmuls
out
mov
jmp
rorl
pop
push
pop
pop
pop
mov
jno
mov
or
lahf
xor
pushf
jecxz
rorb
mov
lods
and
or
inc
adc
and
lea
cmpsl
hlt
icebp
call
cwtl
bswap
int
mov
lods
inc
jns
pusha
mov
call
or
outsb
adc
je
pop
fisttps
lods
xor
xchg
sub
fcompl
lret
loop
adc
cmp
lcall
cltd
outsl
dec
cltd
sbb
js
dec
test
push
sub
dec
and
mov
nop
sub
push
call
pop
jg
lods
xchg
int
aam
out
xchg
fmulp
jbe
mov
ss
cmp
ret
and
mov
fisttpll
insl
jae
pop
pop
fnstsw
or
lock
mov
punpckldq
out
sub
leave
in
loop
clc
sar
ja
or
addr16
pop
out
hlt
popf
test
inc
je
out
push
pop
mov
stc
xlat
loope
lock
mov
in
sarb
mov
sbb
xchg
pop
scas
loope
dec
repnz
rolb
int
popa
or
data16
push
cmp
out
mov
fwait
jmp
push
ds
lock
pop
pcmpgtw
in
cmp
ljmp
pop
jle
jecxz
testb
and
mov
add
mov
fwait
mov
mov
shrl
cmp
aam
out
ds
push
pop
mov
mov
push
fists
dec
mov
pop
inc
out
decb
arpl
pop
add
cmp
inc
cs
stos
daa
pop
sbb
ffreep
jb
stos
shl
aas
dec
outsl
mov
mov
cli
sbb
cmp
cli
fdivrl
jp
jae
mov
mov
int
test
out
cmp
ss
ret
sbb
mov
out
add
sub
popf
sbb
jp
jle
fcoms
or
or
movsb
fsubrp
aas
and
insb
xlat
lahf
mov
dec
mov
jb
ret
stc
repnz
xchg
xchg
cmp
lret
shlb
sbb
push
cmpsb
pop
xlat
mov
jae
enter
sbb
xchg
outsb
jno
xchg
or
jmp
sub
or
or
xchg
add
sbb
mov
arpl
movsl
push
sbb
xlat
mov
jne
add
inc
jmp
orl
xchg
mov
mov
in
xchg
pop
cmp
lahf
test
add
push
fildll
xchg
pop
or
sbb
outsl
xchg
stc
mov
push
aam
push
cltd
adc
lock
negl
imulb
test
sti
out
cmp
push
adc
mov
add
js
icebp
movb
xor
push
cmova
push
movsb
aam
lret
push
mov
xor
or
xchg
stos
or
adc
mov
scas
sbb
jecxz
mov
ja
xor
in
mov
std
mov
aaa
lret
idiv
loopnew
inc
xchg
repnz
pushf
cld
adc
push
mov
stos
arpl
repnz
push
xor
cs
or
addb
ljmp
je
mov
mov
cmpsb
adc
shlb
test
pop
cmpsl
dec
lcall
dec
dec
push
pop
stos
outsb
push
dec
test
cli
or
lock
cwtl
xor
dec
sbb
loop
andl
mov
lock
aam
in
cmp
mov
out
fnstcw
dec
enter
mov
aad
pop
xorl
mov
cmp
mov
mov
dec
sbb
push
lods
sub
das
and
sti
cltd
cwtl
mov
dec
add
adc
es
jb
xchg
out
or
pop
sbb
das
cmc
pop
fnstcw
shr
push
inc
mov
mov
add
xchg
sub
xor
scas
mov
data16
inc
int
cmp
mov
dec
rcr
cmpsl
fs
fiadds
push
mov
lea
xchg
adc
pop
xchg
cmc
inc
pop
push
xchg
ficoms
call
push
call
jmp
mov
cmpsl
sub
fwait
sbb
imul
mov
inc
in
in
fstpt
xchg
pop
out
jns,pn
jbe
and
push
scas
out
bound
and
push
sbb
rorl
pop
inc
pop
in
dec
push
mov
mov
mov
inc
cld
ret
jb
push
or
fwait
xor
push
pop
addb
lea
cmpb
jae
sahf
sbb
sbb
pop
adc
fwait
lock
add
fdivp
add
fildll
adc
in
lcall
sub
lea
pop
nop
jb
nop
ss
adc
hlt
loope
dec
mov
xchg
sbb
pop
js
dec
scas
pop
push
push
and
in
loope
push
popa
mov
push
cmpsl
xor
cmp
enter
xchg
or
data16
out
add
xor
test
mov
fwait
push
mov
test
xchg
leave
add
mov
jp
mov
or
pop
xorb
pop
and
fsubr
in
pop
xor
mov
repnz
cmpsl
sti
cwtl
xchg
mov
xchg
and
lods
xchg
js
enter
imul
or
enter
popf
nop
fidivrs
mov
sbb
scas
mov
dec
jnp
call
mov
shlb
add
inc
lock
pusha
jae
pop
sti
divl
aaa
pop
cmp
stc
je
inc
scas
pop
daa
cmpb
sbb
stos
adc
push
test
sub
inc
popf
bound
mulb
dec
lret
cmp
sub
loope
sub
data16
push
jbe
adc
arpl
xor
sbb
xlat
cmc
adc
sbb
fdivl
loopne
jbe
xchg
fidivrs
jno
sub
xchg
scas
shlb
ja
mov
push
adc
fisubl
xchg
push
aad
fidivs
xor
xchg
jbe
mov
daa
scas
mov
clc
xchg
sbb
aad
rorb
inc
mov
pushw
sar
rcl
sbb
mov
push
xchg
pop
mov
sti
cli
jecxz
add
and
jg
sti
std
test
mov
vaddps
bound
aaa
or
xlat
xchg
pop
andb
outsb
push
add
inc
es
or
mov
fisubrs
lds
xorb
or
lcall
sbbb
daa
jp
add
jo
add
movsb
ds
loope
leave
or
lahf
cmc
jg
inc
mov
cmpsb
cmpsb
lahf
pushf
dec
ds
lret
in
lock
int3
stc
ljmp
jge
mov
adcb
xor
mov
adc
aam
stos
jge
push
popa
mov
or
mov
and
scas
test
pop
ret
ret
aad
int
fistpll
rcl
cmp
jmp
lods
ljmp
sti
sub
cwtl
fwait
add
imul
ficoms
andb
push
mov
shl
loope
mov
popf
inc
sub
dec
test
inc
mov
out
std
pop
pop
xor
andb
mov
mov
xor
addr16
mov
pop
add
xor
mov
push
xchg
ss
cwtl
imul
mov
cmc
add
fidivs
mov
rcl
cmp
mov
call
mov
and
and
push
cwtl
ret
popf
into
mov
aad
sti
cmp
inc
int
lret
pusha
pop
jb
aas
mov
jl
add
nop
fwait
out
stos
insl
mov
dec
test
push
lcall
psraw
sbb
mov
fcomp
out
jno
stos
mov
movsb
cmp
pop
push
rclb
addl
inc
out
sub
pop
mov
cmc
rcll
mov
mov
fdivl
inc
mov
xchg
pop
pop
add
int3
fs
daa
jnp
mov
shll
push
lahf
neg
mov
cmp
cli
xorl
mov
fcmovne
test
dec
ljmp
loope
jg
cli
clc
es
sar
mov
adc
xchg
sbb
push
sub
xchg
loop
or
test
in
in
push
or
pushf
cli
in
punpckhdq
iret
daa
repz
mov
jp
enter
mov
sbb
inc
push
dec
add
jle
and
scas
cmp
dec
fs
dec
dec
cmp
adc
xchg
pop
mov
out
mov
pushl
insl
dec
cmp
cmpsb
dec
sub
loope
cmp
push
aas
rcll
and
ret
imul
outsl
sbb
xlat
inc
fst
ss
mov
sub
sbb
mov
xor
call
loope
sbb
arpl
jmp
cli
popa
insl
xor
shrl
inc
int3
pop
xor
cltd
int
mov
cmpsl
test
int
sti
std
push
aad
or
lock
pop
stc
jns
push
icebp
mov
xchg
mov
jno
lret
cltd
mov
jmp
cmc
xchg
rol
xchg
ds
not
fildl
jb
jg
sti
xchg
int
in
mov
and
lahf
fwait
sti
cmc
mov
cmp
adc
lahf
inc
fwait
inc
loopne
dec
dec
fstps
pop
jge
cmpsb
mov
and
cmp
mov
lods
loopne
or
and
xchg
xchg
mov
dec
lds
push
mov
or
clc
stos
jbe
add
xor
sub
xchg
stc
mov
mov
mov
inc
xor
push
mov
lds
dec
push
lods
imul
xchg
into
xchg
out
test
das
ret
push
sbb
hlt
lock
data16
mov
and
sub
les
mov
imul
out
icebp
jns
cmpsl
enter
call
push
xor
and
shll
popa
std
stos
mov
loope
xchg
lds
pushf
sbb
hlt
dec
in
pop
xor
ficoms
dec
inc
sub
in
inc
arpl
xor
loop
dec
or
das
scas
aam
add
pop
cs
add
dec
outsl
mov
arpl
cvtps2pi
testl
imul
scas
vunpcklps
sbb
jmp
aad
jmp
pop
inc
pop
dec
sbb
repz
xchg
xchg
pop
pusha
xchg
push
ds
pop
divb
lea
es
movsl
js
insb
aaa
clc
cmpsl
adc
cli
xor
pop
sbb
pop
ss
add
xchg
test
sbb
shll
das
pop
stos
push
adc
adc
jbe
mov
xchg
test
jbe
mov
push
filds
push
cmpsl
and
lcall
mov
xchg
cmpsl
sti
imul
xlat
popf
inc
and
sub
dec
out
ss
cs
ss
inc
subb
mov
aas
dec
xchg
mov
push
and
and
sbb
lret
cmp
pop
imul
outsl
test
push
sbb
jg
push
adc
mov
pop
inc
mul
xchg
inc
loop
mov
mov
add
mov
and
and
mov
lcall
das
dec
jecxz
sbb
sub
lods
inc
dec
xor
enter
outsl
xor
stc
inc
ds
pop
pop
scas
in
mov
jecxz
jl
or
int
dec
test
hlt
fnsetpm(287
adc
mov
test
or
int3
daa
loopne
int3
push
jg
adc
dec
cmp
das
add
xchg
ljmp
and
cmp
fwait
sahf
inc
pusha
cltd
xchg
movsl
movsl
sub
xorb
hlt
pop
testl
and
mov
test
inc
iret
jle
rcrb
lcall
or
xor
gs
pop
call
into
outsl
add
adc
lret
xor
andb
jo
push
xchg
int
fwait
inc
pop
lods
repnz
inc
push
fidivrl
sbb
xor
pop
and
fcomps
sub
pop
mov
jno
loop
jbe
clc
cmp
cltd
dec
mov
jg
sub
int
and
mov
repz
inc
mov
adc
out
xor
cld
pop
popa
hlt
add
sahf
cmp
addl
sub
aaa
add
in
inc
pop
and
mov
sbb
dec
push
imul
pop
sarl
cltd
xor
int
mov
aaa
jo
int3
sub
jo
ret
cmp
mov
popf
fwait
dec
out
cld
adc
sti
pop
lahf
imul
or
cld
mov
pop
sub
mov
add
js
sbb
call
mov
repnz
insb
testb
push
push
or
lahf
dec
fadds
jne
add
jo
cmp
jmp
mov
icebp
inc
pop
mov
or
mov
test
sbb
xor
adc
jecxz
mov
fdivrl
das
xchg
jne
jb
enter
sbb
lock
insl
mov
jae
stos
aaa
sub
fwait
shlb
inc
addl
pop
jnp
inc
add
pop
icebp
pop
lret
xor
add
push
andb
sarb
mov
ds
inc
jbe
ficoml
sub
and
movsl
leave
cmp
into
adc
clc
call
lcall
or
out
arpl
into
and
jle
test
xchg
jmp
cmp
loopne
insb
stos
and
fstpl
aad
mov
cmp
ss
inc
mov
xchg
dec
xor
pushf
jno
inc
adc
inc
lahf
xchg
fildll
mov
pop
push
adc
mov
jg
push
push
sub
test
rcl
dec
loopne
sbb
shrb
add
cli
clc
rolb
adcl
inc
and
push
out
and
push
mov
stc
sarl
adc
ljmp
cmp
ja
xor
inc
gs
ljmp
xchg
push
and
xchg
gs
dec
push
sub
call
aam
dec
or
jp
pop
pushf
adc
xor
mov
data16
iret
mov
and
sbb
mov
and
or
push
cli
adc
data16
pop
mov
jno
jns
mov
into
pop
bound
pushf
lock
pop
sarb
popa
call
mov
into
fisttps
jno
xchg
xchg
or
and
testl
xchg
rcll
push
xchg
push
sub
fistl
lods
push
fwait
push
sub
xchg
nop
test
pop
add
cmp
arpl
xor
jae
loope
rcrl
popf
push
xor
scas
jns
mov
xlat
cmp
pop
inc
stc
sbb
jecxz
ja
ss
stos
aad
nop
add
shrl
test
push
callw
adc
push
fists
mov
mov
jne
cwtl
outsb
pop
lea
pusha
push
mov
dec
push
ljmp
je
mov
pop
adc
push
fnstsw
rorb
les
std
ljmp
push
jo
push
mov
adc
loop
add
push
add
jbe
jle
pop
cmpsl
or
sub
cmp
mov
pop
xor
dec
xorl
subb
lret
jecxz
sub
repz
mov
js
pop
xor
insl
call
out
imul
das
or
ss
sub
mov
xor
and
cltd
pusha
insb
or
inc
pusha
je
xchg
dec
hlt
cmp
aas
adc
push
movsl
xchg
xor
jno
scas
pop
dec
adc
mov
dec
mov
jae
cwtl
cld
or
loope
arpl
adc
lahf
or
xor
arpl
sbb
xchg
ds
out
js
adc
xchg
in
add
mov
inc
xchg
cmp
adc
mov
shrl
imulb
and
addr16
call
sub
cmp
push
sub
sar
lret
loope
stos
mov
aad
mov
js
and
ljmp
dec
or
sbb
push
aas
xchg
lret
inc
adc
or
insl
xchg
add
fldenv
or
adc
jb
dec
sbb
repnz
sti
xlat
insb
sub
pop
fmuls
jo
leave
mov
cld
imul
insb
imul
sbb
fbld
mov
and
inc
cmp
jle
cmpsb
mov
sbb
int3
shrb
dec
xchg
push
and
fcomip
pop
rorb
sub
in
sbb
or
sbb
and
jecxz
jmp
pop
mov
leave
punpckldq
push
mov
sub
aaa
inc
out
insl
movsb
mov
out
jb
cmp
in
mov
xor
cmp
jb
mov
iret
jp
es
insl
inc
es
jp
shlb
cmc
xacquire
mov
in
hlt
dec
jne
movsl
dec
leave
iret
scas
xor
mov
insl
sub
fwait
pop
pushf
dec
cmp
imul
adc
rol
in
push
push
mov
adc
and
mov
loopne
cmpl
into
loop
ret
jecxz
movsb
cmpsl
scas
icebp
mov
ja
hlt
sub
mov
enter
scas
pop
mov
xor
sbb
xchg
jle
fiadds
das
push
fs
xchg
sbb
pop
mov
sbb
jno
xor
call
sbb
movsl
jg
ss
mov
xor
fs
mov
push
dec
push
in
popa
jp
jno
fisttpl
pop
xor
aas
aad
lds
sti
xor
js
shlb
mov
cmc
sub
mov
fisttps
das
pop
mov
negl
into
pop
scas
mov
add
out
push
in
mov
mov
push
jmp
push
scas
or
roll
ds
xchg
call
push
pop
xor
jg
ja
mov
jl
sub
lahf
stc
sahf
sub
ljmp
cmc
call
sub
pop
xchg
dec
bswap
cmp
cld
test
fdivl
movb
jbe
in
mov
mov
lods
adc
sbb
js
adc
jbe
aaa
scas
jl
mov
add
push
jno
lahf
mov
aas
and
mov
cmp
cmp
hlt
in
xor
iret
sbb
xchg
imul
in
les
jmp
test
outsb
cmp
lods
or
sub
pop
pop
mov
jne
jmp
stos
pop
lcall
jo
fxch
cli
scas
mov
lcall
push
push
hlt
mov
mov
add
xchg
stc
sub
push
lcall
push
mov
lods
and
lds
fsubrp
mov
bnd
ret
mov
mov
test
inc
push
js
push
or
mov
jnp
sub
mov
lods
and
das
or
mov
lret
packssdw
jbe
aam
std
lds
inc
or
loope
xchg
push
and
ss
sub
scas
dec
jno
mov
out
push
lock
adc
cmc
dec
push
inc
stos
aad
lcall
jl
ret
dec
mov
iret
sbb
jecxz
jecxz
repnz
sub
cwtl
push
mov
rep
psrad
aad
out
cld
push
lahf
ja
add
icebp
lret
cmp
inc
dec
jbe
push
pop
ljmp
rolb
jnp
dec
sub
push
pop
stc
mov
push
cltd
pop
and
repnz
inc
movsb
pop
jl
cmp
jnp
inc
nop
jbe
shl
ss
stc
cwtl
push
ds
daa
jno
xchg
sub
pcmpeqd
xor
jb
inc
mov
out
mov
stos
addr16
pop
jbe
inc
jne
into
arpl
mov
sarl
movsb
pushf
pop
ja
add
push
stos
in
jo
jl
sbb
push
std
adc
cli
or
aam
mov
lods
push
ss
jo
add
push
mov
add
sbb
fwait
in
shll
xchg
jb
fisttpl
movsb
inc
inc
pop
sbb
popf
cmp
sub
mov
ljmp
push
push
mov
or
je
ljmp
insb
int3
fs
xchg
and
xlat
std
inc
ds
mov
imul
test
fimuls
xchg
in
sbb
mov
sbb
shl
rcrl
test
cwtl
call
jo
mov
in
std
add
cmp
sbb
jp
jae
cvtpi2ps
mov
in
pushf
addr16
sbb
int
mov
test
jecxz
add
ret
push
add
mov
mov
in
adc
mov
xchg
pop
add
aaa
jmp
jae
cld
shlb
nop
inc
pop
addr16
jbe
sub
xor
inc
ljmp
pop
int3
sub
jno
pop
out
dec
push
pop
jl
sub
inc
daa
mov
jbe
jle
jb
cmp
mov
jmp
lock
lods
and
test
inc
ret
pop
jg
push
lods
adc
xchg
insb
add
arpl
daa
pop
ja
xor
inc
pop
jbe
fld
adc
fistpl
out
js
xacquire
jecxz
jns
imul
pusha
lock
push
sub
aaa
adcl
mov
and
in
push
push
mov
aaa
push
sbb
js
lahf
adc
mov
inc
pushf
push
es
in
push
sbb
inc
add
cmpsb
sahf
pop
les
pop
cmp
popf
pop
jge
jno
in
bound
adc
dec
ljmp
jno
ficoms
std
dec
loope
iret
adc
popa
in
mov
call
jnp
push
ds
in
insb
notl
mov
xor
cltd
push
lds
mov
test
xor
ret
xor
fst
mov
adc
in
aad
or
lcall
cmpl
ffree
arpl
stos
outsb
add
and
xchg
dec
and
iret
adc
ja
dec
sbb
pop
mov
mov
orb
shll
xlat
add
sbb
in
je
in
mov
mov
lcall
jne
loop
out
add
mov
mov
mov
mov
push
cmp
hlt
xor
cwtl
mov
andb
xor
jg
pushf
xchg
test
jge
adc
and
xchg
sar
mov
push
out
mov
add
jmp
fildl
pop
int3
pop
pushf
pop
and
fisttpll
hlt
add
scas
fdivrs
push
jb
mov
xchg
in
jno
sbb
iret
mov
mov
xor
inc
lea
js
scas
mov
aad
lcall
negl
pop
and
mov
js
divl
jbe
xchg
jno
adc
popf
mov
movsl
inc
loope
push
pushf
lock
lcall
cltd
xchg
test
test
mov
ss
adc
sub
int3
mov
ljmp
and
clc
repz
dec
fsubr
mov
jne
mov
and
cmpb
sahf
push
stos
js
notb
rol
mov
mulb
jle
push
mov
inc
cmpsb
mov
jb
int
cmp
push
outsb
jp
sub
pop
xor
mov
push
ficompl
xor
jnp
push
out
mull
push
push
ret
shlb
jb
push
addr16
adc
out
fwait
push
fistl
movsl
or
xchg
sub
stos
cmpsl
or
adc
lret
or
pop
pop
inc
cmp
and
popf
into
clc
or
lret
enter
mov
mov
aam
das
inc
xchg
in
in
je
add
nop
xchg
mov
divl
repz
jle
push
add
pop
negb
xor
jl
stos
popf
ja
rorb
test
inc
cmp
arpl
mov
or
xchg
jmp
sub
sub
outsl
cmpsb
aam
adc
xchg
ret
stos
xor
xor
dec
cmc
mov
inc
inc
pop
bound
lds
loop
xor
xchg
sbb
inc
std
sahf
js
jl
xchg
lds
push
cmp
mov
cli
das
mov
js
jecxz
mov
lods
cmp
and
lret
jb
test
push
sbb
dec
mov
js
int
lods
pusha
mov
pop
fisubl
je
add
std
push
adc
push
stos
dec
mov
mov
push
movsl
or
and
and
jle
lcall
mov
dec
nop
xchg
shll
add
xor
jge
xor
inc
ret
and
out
adc
push
andl
stos
adc
cmp
repz
dec
mov
pop
sbb
add
cs
lods
or
pop
mov
int
in
dec
movsb
lods
sti
dec
loopne
add
out
and
push
jl
push
mov
lds
adc
push
ret
push
insl
clc
aam
cmc
fwait
lret
sbb
test
lds
push
mov
dec
cmp
leave
mov
cli
mov
sahf
imul
mov
dec
fistpl
push
push
cmp
sbb
rolb
mov
fisttps
hlt
sbb
mov
dec
jns
shlb
pop
fcoms
and
loop
inc
test
inc
mov
testb
daa
sub
lods
pop
xchg
xor
stos
cmpsl
xchg
clc
nop
fwait
pop
lret
sub
adc
push
mov
pop
mov
shlb
movsl
and
jb
xchg
ret
shl
and
dec
xor
sub
sbb
scas
inc
fnsave
rorb
outsl
int
jmp
int3
adc
dec
add
xlat
push
imul
stos
out
mov
aam
lods
aad
jno
adc
mov
js
mov
xchg
ret
xor
cmp
inc
jnp
sbb
push
mov
lcall
xor
ds
iret
mov
push
and
jnp
mov
xchg
imul
leave
testl
or
js
shl
repnz
xchg
lock
hlt
push
and
and
jge
mov
add
dec
mov
mov
pop
jne
clc
cwtl
dec
int
out
push
loopne
cwtl
orb
pop
fstpl
mov
cmp
pop
mov
pop
pop
lret
mov
mov
mov
push
xlat
stos
jne
orl
xor
pusha
sbb
ffreep
les
mov
jg
push
dec
xchg
jb
adc
int
scas
cmc
dec
dec
das
lods
into
ss
and
std
ds
aad
push
mov
mov
add
pop
insb
dec
sub
ds
das
rcrb
cmc
aas
mov
scas
cmpsb
jo
fnstsw
fbstp
adc
or
les
stos
fadds
and
pop
mov
cmp
lods
adc
sub
in
jbe
mov
xchg
loopne
sahf
outsb
das
jo
sub
jo
pop
mov
aad
outsb
repz
jae
jge
leave
sbb
sub
rcll
pushf
mov
test
mov
incl
mov
mov
int3
add
fnsave
push
push
and
fcompl
fs
or
fnstenv
push
xor
cltd
inc
cli
and
fwait
lret
adc
push
imul
xchg
add
xor
mov
push
xchg
xchg
mov
xchg
xchg
jb
cmpsb
pop
lcall
pop
jg
out
ficoms
sbb
cmpl
push
push
xor
out
gs
in
push
mov
lret
mov
imul
pop
pop
xlat
cli
lret
and
adc
push
int3
mov
cs
ret
cmp
cmp
andl
clc
insb
in
xchg
inc
push
cltd
mov
add
pop
mov
inc
cmpsl
inc
popa
inc
add
inc
arpl
stos
and
aam
mov
mov
adc
lcall
xor
pop
jge
or
dec
inc
pop
push
aam
push
add
sbb
sbb
call
dec
outsl
add
mov
sbb
and
rcll
fiadds
in
xchg
push
mov
fidivrs
aas
xor
fstps
mov
scas
sbb
shrb
shll
ljmp
ret
gs
nop
imul
mov
test
pop
mov
mov
into
in
js
rcrb
sbb
cmp
cmp
js
stc
mov
repnz
xchg
pop
aad
lret
jb
jg
jne
fildll
inc
movsb
cs
mov
push
or
sub
dec
repnz
adc
out
xor
lock
sub
or
lods
scas
pusha
insl
mov
sbb
mov
lock
pop
jecxz
in
inc
test
sahf
pop
std
dec
mov
ja
fwait
inc
jb
xchg
arpl
push
push
aad
inc
sbb
mov
sbbl
xorb
cwtl
xlat
scas
pop
subl
sub
dec
or
movsl
dec
xchg
push
dec
cltd
hlt
cmp
inc
push
fistpl
jnp
in
in
nop
push
xchg
inc
icebp
mull
arpl
lret
pop
push
js
inc
test
icebp
sbb
cltd
sti
xor
arpl
repnz
adc
mov
cld
repz
int
xor
testl
push
das
insl
ficoms
dec
movsl
sub
inc
sub
mov
push
shll
jge
fwait
mov
js
add
and
cmc
fdivs
adc
out
pop
mov
push
stos
cmc
mov
in
jg
lcall
mull
pop
mov
pop
and
xor
dec
and
sub
add
inc
cmp
call
out
lock
leave
cmp
push
ja
in
cmp
cmp
outsl
cld
orl
inc
ret
pusha
shrl
cmc
jg
sub
jp
jge
pop
dec
sub
xor
das
pop
add
in
dec
scas
or
ret
xchg
push
push
das
fisubrl
mov
adc
aad
imul
out
inc
clc
mov
add
push
pop
jp
xchg
insl
dec
mov
fiadds
loopne
adc
into
test
in
sbb
pop
outsl
jecxz
cmpsl
cld
mov
out
int3
movsb
fdivs
orb
int
rcll
int
push
sbb
flds
psadbw
inc
add
push
out
pop
xchg
je
adc
adc
mulb
jmp
sbb
push
or
mov
imul
or
scas
daa
repnz
call
add
push
fdivrs
xor
xor
pusha
mov
jge
mov
sbb
cmp
inc
sub
je
fs
pop
mov
movsl
hlt
jne
aas
mov
xchg
mov
jmp
push
inc
loop
arpl
rcll
pop
adc
in
shll
and
cmp
adc
mov
or
ss
cmp
jae
mov
pop
cs
fdivrl
xlat
mov
xlat
xchg
in
sbb
iret
movsb
adc
xchg
push
out
cli
lcall
jmp
cli
negl
pushf
fwait
cltd
mov
in
mov
mov
mov
lret
lods
cmp
stc
repz
lods
ficomps
push
mov
push
xchg
out
xlat
popf
mov
insb
inc
jge
sub
inc
mov
cld
lcall
inc
pop
mov
iret
sbb
or
xchg
lods
cmpsb
push
pop
adc
ror
scas
adc
mov
adc
jg
shlb
aaa
and
cmp
push
roll
roll
int
jno
jmp
adc
pop
imul
mov
sbb
pushf
outsb
adc
repz
jmp
ror
sub
xor
pop
sub
ss
dec
sbb
cltd
int
ret
sahf
pmaxub
pop
ret
push
mov
cld
ja
lods
test
ds
sub
shrb
aas
es
jns
hlt
sub
mov
imul
xchg
ljmp
hlt
dec
lcall
insl
sti
int
and
push
xchg
popf
add
outsb
ljmp
jnp
js
jl
repnz
pop
out
sbb
jg
test
jne
cmp
push
aad
pop
cld
js
gs
outsl
bound
jbe
cmpsb
mov
add
adc
int3
jg
jo
xor
cmp
shll
mov
test
sti
sbb
xor
jp
and
lods
push
xchg
and
sbb
cmp
icebp
lahf
aam
dec
add
xor
ret
mov
jb
leave
fstp
cmp
out
andps
movsb
push
pushf
xchg
inc
das
decl
dec
mov
popa
inc
pop
aaa
aaa
mov
inc
loop
cld
ja
ss
jae
xchg
cs
mov
inc
lds
pusha
outsl
fs
enter
mov
dec
xor
dec
loopne
or
push
push
cmp
adc
scas
mov
lea
test
mov
mov
pop
push
pop
insb
cmp
iret
jl
stc
inc
and
sti
cs
jno
add
pop
cmp
pusha
test
pop
roll
xor
sub
scas
mov
push
mov
lods
push
sbb
and
inc
mov
inc
testb
lahf
xchg
xchg
jg
cmp
int3
xchg
jae
mov
in
push
and
mov
imul
add
push
cmp
lahf
pop
inc
sbb
and
inc
and
push
dec
ss
outsl
cwtl
mov
scas
das
dec
adc
faddl
sub
in
jbe
loopne
and
popf
add
pop
out
in
cmpsb
adc
mov
inc
xor
loop
clc
inc
sbb
push
test
iret
test
rcrb
and
bswap
cmp
leave
pushf
xchg
mov
fmull
jp
fistps
sbb
cmp
xchg
sarl
inc
pop
fstps
add
fldcw
xchg
mov
sub
es
dec
aad
inc
and
call
and
cmp
jmp
clc
and
mov
sub
push
or
push
dec
repnz
lea
mov
loopne
cwtl
in
pusha
adc
adc
cli
outsl
ret
lods
mov
xchg
push
sbb
xchg
ljmp
push
xchg
enter
push
lahf
jno
xchg
xor
pop
cmp
cmpsl
fnstsw
hlt
xorl
icebp
loope
fwait
into
mov
lds
cli
push
adc
cmp
mov
outsl
sub
xchg
dec
jecxz
aaa
adc
lds
pop
movsb
shr
xchg
sbb
stc
pop
push
sub
sti
shl
sbb
jnp
bound
pop
fwait
mov
es
in
mov
cmc
rolb
mov
inc
lea
movsb
mov
pop
imul
in
insb
shlb
jle
sub
daa
inc
pop
xchg
std
pop
dec
pop
dec
sbb
lock
mov
push
jmp
fmull
or
add
lds
sub
int3
cs
mov
xchg
cmp
and
pusha
xchg
into
fidivrl
jb
inc
cmp
add
fisubrl
push
pop
sbb
jg
mov
sub
pop
jecxz
mov
inc
or
clc
sbb
adc
shll
cmp
jo
cli
mov
fs
jne
add
shlb
xchg
test
xchg
stos
push
jecxz
mov
lret
out
lahf
mov
xchg
mov
je
das
mov
adcl
push
sti
icebp
pop
mov
mov
mov
xchg
push
test
cld
sub
push
iret
shrb
sub
add
int3
mov
cmp
popa
idiv
mov
cld
in
pushf
adc
mov
es
cmpsl
xor
mov
xor
jp
adc
push
adc
push
jp
in
popa
call
fs
push
cli
jnp
dec
pop
and
enter
and
stos
and
mov
mov
cmp
or
pop
mov
outsb
xchg
push
outsl
cmpb
fimull
push
xchg
cmpb
xor
push
fwait
push
lea
test
cli
rcrb
ss
ficomps
icebp
jmp
nop
aam
sbb
loop
shl
jmp
mov
pusha
ss
fstpt
sub
fsubrp
xor
and
jno
mov
in
sbb
fxch
jb
movsl
clc
mov
inc
stc
cld
jp
add
outsb
es
iret
pushf
enter
jmp
dec
stos
push
jp
xchg
jl
test
movsl
sub
in
ss
or
dec
mov
add
into
sub
add
mov
jmp
fadds
call
fisttpll
orb
arpl
ja
xor
fwait
inc
cmpl
dec
pop
out
je
aaa
xchg
fidivrs
push
lret
movsl
push
dec
jbe
incb
outsb
insb
lahf
adc
aas
jbe
ret
enter
fs
mov
aam
jp
jg
xchg
leave
insb
insb
xchg
in
push
xchg
adc
es
hlt
rcrl
sahf
aad
stos
lcall
mov
push
push
es
cmp
mov
mov
clc
and
xchg
xchg
adc
shr
xchg
xchg
inc
xchg
and
nop
stos
loop
mov
repz
lahf
cld
add
xor
mov
in
push
ja
sbb
push
jnp
clc
imul
jne
pop
mov
sti
mov
push
sub
jne
ss
cmpsl
inc
test
and
imul
ja
pop
outsb
push
sbb
push
add
dec
push
and
clc
das
xlat
fsubr
mov
dec
repnz
sub
sub
sub
mov
in
xor
adc
shlb
or
jmp
mov
pop
jmp
mov
lcall
dec
stc
insl
mov
push
pop
sub
xor
jae
mov
enter
test
shlb
jmp
mov
xchg
add
mov
jnp
enter
adc
sbb
dec
mov
lcall
sbb
jae
notb
xor
sbb
mov
xchg
lahf
xor
xchg
nop
xchg
rcr
sub
mov
aas
mov
outsl
pushf
or
sub
mov
pop
sbb
stos
pop
aas
and
dec
inc
andnps
xchg
push
fistl
lods
scas
scas
out
rcrb
mov
xlat
sbb
repnz
cmc
xor
test
gs
adc
cmp
jo
nop
fimull
sub
adc
or
fwait
sub
jl
popl
clc
or
fs
insb
mov
nop
mov
insl
mov
mov
jge
daa
insl
mov
sub
insl
lods
mov
loop
inc
push
push
inc
inc
xlat
mov
inc
xchg
outsb
gs
lret
push
pushf
ficoml
fisttpl
mov
pop
ss
inc
push
dec
fwait
inc
cmp
sbb
aaa
ret
xchg
and
xor
cmp
dec
repz
out
sbb
aaa
shll
je
pop
out
mov
xchg
pop
and
jne
sbb
pop
scas
xchg
jg
iret
adc
addr16
ja
gs
pop
mov
out
popa
mov
cmp
fists
outsl
and
jl
movsb
adc
inc
bound
xchg
out
adc
or
ret
cltd
jno
fiaddl
or
sti
scas
jl
jmp
leave
les
add
lret
mov
test
or
arpl
stos
sbb
stos
xchg
dec
or
xchg
out
arpl
mov
insl
dec
adcl
cmp
ret
pcmpgtw
add
in
push
ja
cmp
mov
movsb
mov
clc
jge
xchg
cwtl
ficomps
xor
cmp
cmp
negb
std
inc
lods
inc
adc
mov
push
jb
clc
aad
mov
insb
fnsave
dec
mov
out
imull
es
mov
and
ljmp
or
enter
stos
or
mov
sub
xor
jns
mov
arpl
mov
imull
test
push
loop
pop
es
test
and
push
xor
dec
ret
mov
std
jns
stos
xor
xlat
pop
jae
es
testb
pop
scas
pusha
cmp
jp
in
or
iret
mov
cmpl
imul
loop
leave
sbb
fidivrs
push
mov
popf
mov
xchg
js
js
jne
scas
icebp
xor
mov
sti
inc
xchg
push
push
jle
sub
fidivrs
inc
nop
xor
push
jne
sbb
aam
sub
lahf
jb
lret
pop
jge
mov
and
repz
xchg
movb
ret
ljmp
out
mov
and
inc
enter
jle
mov
lea
adc
js
sbb
mov
pop
push
out
mov
mov
sbb
cmp
sub
xchg
push
clc
mov
mov
dec
mov
cmp
test
mov
sbbl
jmp
jecxz
imul
inc
mov
outsb
fistpl
cli
adc
cmp
stos
or
aam
stc
lds
or
xchg
mov
es
cmpsl
fildll
mov
xchg
lret
mov
leave
cli
int
inc
mov
add
mov
xor
jp
out
lock
xchg
sub
call
jns
xchg
push
mov
sbb
push
in
cmp
xchg
mov
inc
cmp
mov
orb
xchg
negl
in
dec
pop
cmpsl
test
sbb
daa
in
movsb
ret
sbb
pop
repz
push
sbb
add
popa
lods
jne
cli
divb
xor
fbstp
adc
push
dec
lret
jle
xor
inc
add
sub
cs
in
loop
sbb
mov
cwtl
pop
inc
pop
mov
outsb
mov
inc
xor
cmp
add
inc
dec
imul
mov
jb
mov
mov
push
cmp
mov
inc
in
stos
adc
test
enter
and
js
into
jns
mov
hlt
dec
cmpsb
in
int3
ljmp
outsb
and
nop
std
jo
imul
imul
adc
mov
sub
ret
mov
dec
jne
or
out
cmp
ds
rcll
push
ds
es
mov
cli
dec
mov
dec
aad
add
cmp
push
ret
fistpll
adc
fisubl
ret
or
cs
ljmp
es
cmc
cmp
je
mov
sbb
cmpb
pop
and
jns
mov
push
lods
test
sub
inc
pop
fsubr
lea
sti
dec
mov
add
sbb
divb
out
bound
repnz
test
shl
and
push
mov
int3
sbb
mov
cmp
shl
out
gs
shrl
mov
jmp
cmpl
xchg
push
lea
pop
stos
jnp
jl
incb
inc
pop
inc
dec
mov
repz
loope
adc
ficoms
sti
mov
js
data16
push
cltd
inc
ss
jmp
dec
in
sub
mov
xor
xor
dec
rclb
cmp
jmp
lds
outsb
sub
mov
lahf
and
mov
add
xlat
mov
clc
stos
out
cs
lods
cmc
cltd
test
xchg
cmp
dec
and
jo
mov
sahf
push
xor
mov
or
jl
jg
out
jo
push
sarl
xchg
mov
ret
movsl
hlt
int3
test
xor
xor
in
clc
or
push
insl
repz
dec
jp
jbe
pop
mov
call
or
out
sbb
dec
pop
xor
movsl
in
xchg
inc
jge
push
mov
orl
push
adc
sbb
fnstcw
dec
push
mov
fs
cmp
sbb
fs
es
mov
js
loop
mov
negb
adc
rorb
jge
in
inc
es
add
lahf
test
mov
inc
add
pop
or
movsl
mov
sbb
adc
pop
sub
cld
push
dec
pop
mov
mov
test
mov
lock
repnz
xlat
subb
jmp
cmp
fnstsw
test
lods
jp
xor
inc
int3
mov
decl
mov
sti
std
push
int3
mov
push
popa
sub
ret
dec
pop
pop
xor
fs
lods
mov
and
jle
movsl
repnz
pop
cmp
lds
mov
lds
and
dec
push
ds
push
mov
xchg
jmp
mov
popf
divl
jae
cld
les
and
sub
ljmp
sbb
jmp
lock
mov
pusha
pop
js
insl
in
movsl
xor
rcr
jmp
cmc
push
jne
cld
es
cmc
pop
imul
lea
daa
mov
xchg
std
or
pop
test
movsl
loop
scas
aam
inc
or
int3
push
fwait
jns
pusha
in
sbb
ja
mov
in
rcrb
rorl
cltd
movsl
pop
popf
mov
lcall
in
push
into
mov
ds
push
mov
aad
aam
iret
iret
sti
jno
inc
dec
and
movsl
in
icebp
and
dec
sti
sub
xor
adc
mov
ret
pop
into
fdivs
push
test
dec
sbb
mov
test
sbb
les
hlt
mov
xchg
rorl
insb
daa
xchg
out
push
fstpl
inc
call
xchg
push
mov
sub
fdivp
adc
adc
popw
loope
jns
jae
sbb
push
clc
inc
lock
sbb
scas
leave
cltd
loop
cmpsl
imull
xchg
and
jl
mov
cmc
imull
inc
cld
mov
roll
pop
movsb
and
push
repz
xor
or
les
fldpi
xorl
ficoml
pushf
xchg
sbb
and
push
xor
cmp
icebp
test
inc
mov
sbb
adc
jge
repnz
push
sti
cmp
sbb
shrb
dec
shrb
jbe
lret
or
in
movsb
sbb
mulb
outsb
clc
add
lods
mov
cwtl
push
inc
xlat
fwait
sarl
jecxz
stos
insl
push
adc
sti
aad
arpl
scas
out
pop
pop
inc
int
mov
adc
in
and
sbb
xchg
mov
add
out
mov
cmp
dec
mov
or
push
sub
push
mov
inc
pop
aaa
std
mov
push
int3
cmp
jnp
xor
pusha
dec
mov
and
ret
out
xchg
mov
adc
push
jmp
pop
std
pop
jl
gs
mov
in
xchg
jno
cmp
mov
push
cmp
adcl
fsts
scas
in
stc
dec
adc
sub
inc
testl
pop
xchg
push
inc
jns
push
mov
and
and
repnz
cltd
push
mov
lret
dec
lret
icebp
sub
mov
das
push
aad
imulb
dec
imul
lret
add
inc
enter
sbb
dec
or
add
cwtl
sub
pop
stc
scas
mov
and
sub
sub
insb
inc
repnz
clc
std
adc
movsl
cmp
rorb
loopne
sti
inc
imul
jnp
jl
rcl
sti
aam
out
jae
pop
and
mov
jo
js
insb
jbe
jns
cmp
xchg
adc
in
or
pop
jle
mov
out
decl
push
insl
mov
in
jl
jbe
imul
out
sbb
fwait
call
xor
pop
dec
adc
mov
dec
sbb
cmp
clc
sbb
pop
pusha
out
shll
pop
mov
nop
lahf
inc
mov
movsl
notb
add
sbb
in
rorl
push
int3
js
pop
lret
xor
lock
cmp
stos
mov
cmc
sub
jbe
mov
imul
stos
jns,pt
sbb
repz
jae
mov
into
xor
jge
nop
xchg
dec
mov
sbbl
dec
mov
iret
addl
out
jo
add
mov
push
xchg
mov
inc
mov
frstor
test
test
imul
sbb
push
ficoms
pop
outsl
pop
outsb
icebp
in
or
push
jne
mov
sbb
mov
adc
cwtl
lret
push
xchg
sbb
cmc
push
faddl
fs
shll
xchg
cmpsb
pop
lds
ret
cli
outsb
imul
lea
lods
iret
dec
sub
mov
insl
out
cmp
loope
enter
and
jp
lds
addb
jecxz
bound
js
in
pop
out
mov
and
dec
popa
sahf
int3
sbb
enter
mov
adc
out
push
cmp
hlt
push
pop
mov
xor
rclb
in
jb
add
leave
inc
das
and
loop
and
sbb
push
and
sub
xchg
or
push
push
ret
mov
add
push
lds
fwait
pushf
ljmp
fsubr
rcl
scas
push
mov
cli
cmpsb
mov
pop
insb
les
pop
sbb
sbb
inc
and
insl
or
xlat
lahf
shlb
insl
sbb
cwtl
and
out
or
orps
xchg
pushf
pop
jl
jl
jmp
lds
shlb
cs
cmp
fcomip
pop
dec
lret
dec
stos
adc
test
bound
mov
inc
jno
outsb
jmp
js
icebp
and
mov
sbb
jo
xor
stos
xchg
cwtl
mov
andl
fdecstp
add
adc
mov
jns
sbb
mov
sub
out
sub
pushf
cmp
shll
push
cli
jge
cmp
sub
sahf
rcrl
jmp
inc
sbb
push
pop
adc
lcall
repz
incb
arpl
fcmovu
pushl
fst
xchg
out
push
jnp
sub
insl
sub
js
insb
in
aas
roll
cld
dec
jb
shll
aas
cmp
mov
sbb
daa
and
adc
adc
aam
icebp
pop
data16
pushf
pusha
jmp
xchg
push
mov
inc
insl
mov
es
fildll
jmp
push
popa
push
repz
and
outsl
inc
or
mov
es
js
mov
lahf
arpl
inc
mov
cld
mov
lds
adc
jo
insl
xchg
dec
jl
jp
in
ljmp
add
jg
and
mov
jg
pop
push
dec
out
mov
or
sbb
add
pop
pop
je
cmp
addr16
popf
jle
mov
xchg
mov
mov
jmp
sbbl
int3
mov
lahf
jl
scas
push
sbb
fdiv
ret
mov
jmp
push
inc
cltd
hlt
xchg
popa
test
in
das
mov
xor
dec
mov
inc
push
loope
addr16
inc
sahf
sub
mov
xchg
inc
xchg
dec
lods
roll
mov
mul
and
mov
lds
cmp
mov
adc
jns
or
inc
xor
add
push
std
inc
or
cltd
outsl
test
pusha
loop
roll
fldcw
adc
insl
int
add
or
cmp
scas
dec
sub
mov
and
js
je
in
push
test
jle
loope
and
or
add
das
push
das
bound
push
hlt
jns
xchg
mov
cli
xchg
addr16
andb
jl
sbb
ljmp
cmpsl
mov
adcl
mov
xlat
fadds
movsl
cmc
lcall
xchg
popa
ja
cmp
dec
inc
add
jno
mov
imul
xor
outsl
in
jb
mov
imul
fs
arpl
imul
test
dec
shll
andb
and
jg
add
leave
push
mov
push
enter
xor
enter
sub
mov
add
inc
stc
movsl
or
push
mov
or
inc
sbb
jnp
xchg
in
jae
pop
xor
int3
jo
xchg
sub
mov
inc
iret
push
sbb
lods
cmp
xchg
or
rorl
repz
fwait
jl
mov
adc
add
dec
xor
cmp
getsec
cmpsb
push
testb
sub
adc
sub
inc
mov
fidivs
xchg
dec
inc
mov
add
in
adc
pop
ror
xchg
push
jmp
cmp
call
push
clc
or
addr16
xor
mov
insl
mov
inc
int3
gs
insb
mov
out
jle
sbb
dec
xor
xchg
repz
or
lds
cmp
pop
lret
and
dec
xchg
pusha
and
insl
into
sub
aas
mov
jno
je
std
cmp
push
lret
sbb
out
pusha
push
jne
and
fwait
scas
mov
fidivrs
xor
sub
mov
lret
daa
sub
in
mov
daa
js
mov
cmp
mov
shrl
mov
jns
dec
cmp
in
adc
add
xchg
mov
out
daa
push
xor
call
shll
push
in
repnz
or
ss
pop
cmp
ret
dec
in
getsec
push
push
pushf
sbb
arpl
fwait
pop
sbbl
jo
fucomp
or
mov
push
int
push
and
pop
das
inc
sbb
push
aad
xor
pusha
pminsw
mov
sub
dec
clc
mov
aam
add
ja
sub
pop
lea
ret
insb
jnp
cmc
ret
rolb
hlt
aaa
add
mov
repnz
jnp
sbb
mov
push
arpl
sbb
or
dec
in
sub
xchg
inc
jbe
xor
jns
negl
cmc
std
ja
cmpsl
add
stos
and
pop
jne
adc
hlt
xlat
movsb
jg
and
imul
or
push
or
adc
jae
out
dec
adcb
xchg
sbb
cmpsb
test
mov
cmp
pop
inc
lret
xor
sub
cmp
inc
fcompl
pusha
xchg
sub
sub
decb
inc
dec
mov
adc
cmp
xor
and
pop
xor
js
ficomps
dec
jecxz
jbe
jns
mov
ficomps
mov
data16
push
push
ja
adc
jmp
lods
roll
cli
push
xorb
fnstsw
pop
ficompl
dec
andb
mov
sti
popa
or
cmp
push
xor
add
movsl
pop
xchg
fwait
outsb
call
adc
mov
call
xor
ret
ljmp
mov
push
nop
ja
bound
pushf
pop
stos
push
rolb
aam
and
ja
cmc
jbe
pop
sub
sbb
inc
jb
jmp
mov
cmp
lret
in
dec
call
imul
mov
dec
sbb
mov
call
cwtl
mov
sub
mov
je
xor
das
es
jge
inc
jb
insl
inc
push
loop
les
xor
stos
insb
adc
adc
fadd
push
loop
fcoms
mov
jne
mov
add
dec
js
push
jae
enter
xlat
dec
scas
cmpsl
sbb
lods
in
xchg
shl
outsl
popf
or
in
mov
faddl
mov
jnp
or
outsb
mov
or
repz
ds
pushf
xchg
or
and
xor
mov
mov
int3
adc
pop
loopne
movsl
daa
add
mov
jg
xor
movsl
in
pop
daa
jne
pop
hlt
pusha
xchg
hlt
xlat
cmpsl
sti
push
lahf
xor
pusha
dec
lea
fwait
sub
jp
push
sti
and
push
lods
fs
addr16
fabs
shlb
push
pop
sarb
aaa
aam
int
add
lahf
mov
pop
xchg
testb
inc
pop
and
mov
scas
pop
iret
cs
xchg
adc
mov
lods
push
scas
mov
xlat
sub
add
xchg
mov
mov
test
rclb
xor
sub
mov
push
scas
iret
loop
push
pop
cld
or
cmp
dec
ljmp
adc
or
sbb
lods
int
sbb
xor
or
movsl
testb
loope
lock
les
faddl
fidivs
pop
dec
stos
scas
jno
push
inc
xor
popa
outsb
fbld
or
jg
mov
cmp
push
add
lret
push
out
stos
mov
push
imul
mov
lcall
ret
arpl
addr16
push
addb
jg
mov
mov
xor
jmp
insb
hlt
rorb
pushf
ja
test
in
sub
bound
xchg
push
add
loope
inc
fs
xor
cmpsb
aad
std
cltd
sahf
jbe
rcrb
sbb
stos
inc
lret
push
lcall
adc
mov
scas
xchg
pop
fwait
or
pop
loopne
leave
pop
and
jb
nop
loope
push
scas
jb
test
sbb
mov
mov
cmpsl
xchg
jno
jmp
sbb
repnz
dec
adc
cli
out
sbb
adc
call
stc
js
test
out
daa
idivb
ja
xchg
sahf
cmp
test
or
test
add
adc
dec
dec
adc
and
loopne
or
mov
jmp
mov
pop
push
jo
push
sbb
lods
imul
jae
pop
inc
mov
add
iret
loopne
cmp
dec
addr16
adc
call
push
inc
adc
xor
xlat
inc
bound
mov
fstl
xchg
push
inc
mov
dec
push
inc
inc
loopne
mov
sub
das
call
pop
and
push
test
mov
pop
add
cmp
lahf
mov
std
into
inc
ret
sub
mov
and
xchg
dec
cltd
add
loopne
jno
dec
mov
movsl
jmp
fcmovb
pop
mov
fwait
inc
shll
jge
mov
adcl
sub
addl
insl
or
push
push
and
cmp
jnp
test
cmp
lea
loopne
push
cmp
andl
int3
out
jmp
inc
fcmovb
je
addr16
cmpsb
lods
js
daa
dec
mov
lds
lods
xor
pop
ss
js
add
sbb
jno
gs
sub
testl
inc
cmp
call
scas
subb
push
push
mov
push
dec
ficoms
loopne
dec
es
and
sbb
ret
adc
inc
add
cmp
sti
jmp
test
sahf
push
jno
int
cmp
push
and
cs
jb
jno
mov
xchg
imul
cmp
sbb
ljmp
imul
sbb
test
je
adc
shll
data16
inc
loopne,pn
xchg
call
jp
jecxz
sub
es
out
pop
insl
push
inc
loop
add
jb
cmpsb
and
lods
push
enter
daa
les
or
lods
imul
pusha
call
xchg
pop
iret
sbb
inc
mov
push
mov
in
jb
jp
mov
in
push
mov
in
clc
xor
pop
les
push
fcompl
sub
fidivrl
or
out
cmp
nop
arpl
lret
cwtl
aam
imul
sarb
sub
mov
pop
xchg
das
xorl
aad
mov
sub
push
sbbl
mov
adc
imul
lds
xor
add
adc
jecxz
dec
or
loop
aam
add
mov
jle
mov
xchg
mov
add
out
lds
cmp
and
jmp
inc
les
lods
mov
sahf
mov
es
add
mov
xchg
inc
pop
mov
sub
icebp
push
xor
call
stc
mov
mov
icebp
xor
push
daa
jno
gs
ret
push
sbbl
add
insb
push
mov
push
dec
rolb
in
push
jecxz
fmuls
sbb
push
or
roll
call
add
xchg
fistpl
hlt
enter
mov
scas
test
or
scas
push
sub
jp
in
mov
lods
and
mov
enter
fstps
dec
cmp
fadds
arpl
push
mov
test
aas
cmp
not
enter
xchg
je
shll
in
ja
push
mov
push
sbb
add
sahf
sbb
scas
or
or
aam
rcll
jae
xchg
fnstenv
dec
add
movsb
pusha
adc
jle
hlt
lods
fiadds
and
sets
jp
pop
adcl
aas
adc
xchg
stos
push
mov
push
push
xchg
cmp
int
jg
jnp
popf
subl
xchg
mov
pop
sbb
xchg
arpl
jle
lds
dec
and
fsubp
test
mov
dec
mov
jne
out
mov
test
ret
mov
lods
shlb
jbe
arpl
inc
push
bound
popa
cmc
pop
adc
jmp
in
sbb
sub
mov
xchg
out
out
lea
push
pop
inc
lret
in
and
jge
cmp
lcall
pop
mov
in
xchg
xchg
xor
cltd
jp
aaa
cli
sub
mov
jle
movsb
push
ss
add
sbb
dec
cmpsb
popa
and
push
pop
lret
sbbl
jmp
jne
sti
jo
sub
and
js
dec
cwtl
add
dec
les
or
inc
jb
popa
mov
emms
cs
inc
gs
andb
out
sarb
mov
xchg
sbb
std
mov
jmp
movsb
push
jnp
les
mov
dec
les
imul
jmp
pusha
jns
aam
dec
les
aaa
push
addr16
loopne
pop
aaa
sbb
xchg
nop
repz
or
inc
adc
loopne
inc
dec
jns
pop
aas
and
ja,pt
push
rolb
xchg
popa
mov
outsb
or
mov
fiaddl
push
in
sbb
pop
sahf
sub
mov
pop
pop
inc
xchg
repz
cli
sub
mov
jae
and
loop
or
fidivrs
pop
rcl
mov
sbb
pop
jo
andl
rcr
shl
adc
orb
repnz
outsb
lea
push
and
jle
or
idivl
arpl
inc
pop
pop
stos
imul
loop
inc
std
mov
sub
mov
inc
insb
das
dec
push
pop
dec
dec
jecxz
push
mov
inc
mov
sbb
jg
out
enter
nop
push
loop
inc
lock
mov
nop
push
mov
jge
xchg
ljmp
mov
mov
or
loop
dec
xor
sbb
mov
cmp
xlat
inc
outsl
out
push
xor
jg
insl
lea
mov
hlt
fldcw
aaa
xchg
xor
sbb
mov
inc
push
pushf
sub
adc
hlt
fildl
sbb
mov
inc
push
sahf
stos
lea
push
add
les
in
xchg
je
arpl
dec
pop
adc
nop
push
xchg
testb
sub
mov
js
or
jb
mov
add
push
popf
fiadds
xchg
es
aam
enter
dec
cld
cmp
pop
leave
fs
xor
fisttpl
lret
push
sbb
sbb
dec
pop
sub
xor
imul
and
pop
movsb
cmc
rolb
sub
int3
pop
rcl
js
mov
sub
fisubs
clc
mov
and
lcall
jle
sub
mov
rcr
dec
jne
arpl
cmpsb
fwait
pop
jbe
call
cs
push
lahf
mov
dec
jnp
cs
pop
outsb
push
mov
gs
pop
xchg
fnsave
popa
lcall
sbb
repnz
mov
xor
out
inc
movsb
push
inc
pop
cmc
iret
stc
xchg
xchg
mov
adc
or
test
icebp
sub
jle
xor
in
movsl
lret
push
jb
cmp
jns
adc
jae
push
fadd
cmp
call
sbb
repnz
xchg
inc
and
pop
dec
or
loop
pop
inc
popa
mov
jp
ret
push
dec
movl
repz
repnz
lea
leave
mov
loopne
fwait
out
gs
sub
lahf
mov
xor
sbb
jp
fwait
adc
or
lods
call
mov
stc
stos
xlat
in
xor
hlt
or
xchg
and
inc
sub
repz
mov
inc
add
popa
mov
and
sbb
add
nop
lret
xchg
iret
sahf
push
push
mov
mov
push
or
sub
push
in
data16
popa
outsl
cmp
and
daa
int3
push
icebp
pop
inc
outsl
pop
hlt
or
arpl
push
aas
xor
xor
xchg
cmp
sub
and
dec
jbe
dec
lock
push
and
ret
dec
mov
mov
push
dec
xchg
sbb
sbb
stc
int
scas
push
cmp
mov
lods
push
xlat
cmp
sbb
xor
inc
sbb
fisttpll
adc
add
cmp
arpl
bound
movsb
cmp
sbb
jle
add
rolb
rcll
gs
pop
push
mov
xchg
xchg
push
sbb
xchg
shrl
ficoml
mov
cmp
sti
xchg
scas
arpl
fiaddl
cmp
or
jl
inc
loope
fisubrl
cs
in
push
cmpsl
mov
pop
and
idivb
and
cmpsb
push
mov
cmp
jmp
and
add
ret
xor
or
cmp
cld
les
outsl
xor
sub
dec
lods
rol
add
and
stos
mov
inc
xchg
enter
dec
cli
inc
xchg
sbb
shrl
add
insb
mov
cmpsl
loope
bound
jp
cmp
std
jg
mul
xchg
pop
into
mov
mov
sbb
test
or
fs
mov
mov
pop
adc
or
scas
pop
in
hlt
stos
aad
inc
scas
add
lock
lock
cld
lcall
sbb
ljmp
push
mov
jne
hlt
push
stos
cmpl
rcl
jl
xchg
das
out
cwtl
mov
inc
jle
popf
int3
mov
mov
cmpl
stos
jnp
push
cmpb
mov
add
jnp
aas
in
or
scas
pop
mov
push
into
mov
cltd
inc
aad
add
stos
xchg
and
daa
dec
push
push
jmp
cmp
js
pop
mov
les
bound
cs
aam
or
jmp
inc
popf
pop
in
xchg
hlt
mov
int3
xor
pusha
push
fidivl
inc
jecxz
and
adc
xchg
cmp
mov
mov
aaa
or
in
ret
xchg
push
jo
je
mov
neg
jb
inc
pop
data16
scas
andb
xchg
add
or
insl
and
imul
shrl
and
mov
sbb
lahf
bound
je
out
jge
loope
xchg
jge
jno
fstps
loope
xchg
xchg
jg
mov
or
int
push
ret
rorl
cs
jl
mov
inc
enter
inc
mov
in
es
add
jae
lcall
adc
xor
test
aas
imul
adc
icebp
mov
sbb
add
fmulp
das
sub
xor
sub
lahf
mov
lods
xchg
lcall
aaa
jp
dec
out
inc
and
sbb
mov
pop
add
into
pop
jae
arpl
mov
movsb
xchg
das
xchg
xchg
pop
xchg
xchg
movb
push
xchg
rorb
mov
int
inc
ficoms
inc
pop
inc
shll
xchg
rcr
cmp
push
fcmovb
inc
es
push
fsubs
or
xchg
sub
lods
ds
ds
lds
outsb
xchg
jo
in
loopne
aad
enter
sub
inc
sar
adc
add
and
dec
into
dec
sub
subl
push
int
iret
xor
adc
mov
hlt
mov
test
push
ja
lods
test
scas
aad
movlps
js
push
pop
lods
xor
lret
cmp
fmuls
xor
mov
xor
int
xor
push
loope
in
fwait
adc
sub
stos
lods
pusha
rcr
jge
mov
push
rolb
push
sub
sahf
int
adc
inc
call
push
nop
xchg
xor
mov
mov
cwtl
cmp
shl
jecxz
hlt
outsb
mov
pop
icebp
jb
cs
sar
mov
xchg
or
loop
adc
or
push
sbb
cmp
cld
scas
xchg
pusha
cmc
cld
std
pop
xchg
jge
add
jg
push
push
stos
and
inc
add
cli
lods
mov
daa
xchg
cmc
add
jnp
pop
es
xchg
out
mov
inc
xor
and
stos
cltd
push
shrb
sbb
jb
out
mov
xorb
sbb
out
mov
test
xchg
leave
push
lret
loop
gs
and
ret
iret
int3
fwait
push
ds
mov
sbb
mull
xchg
ret
into
aam
push
stc
daa
and
mov
aas
ljmp
cs
mov
sbb
or
repz
mov
pop
mov
push
mov
mov
add
fcoms
test
outsb
add
adc
ret
push
aaa
inc
loope
aam
lods
mov
iret
mov
mov
data16
pop
popf
bound
push
and
in
cmp
ret
into
push
sbb
orb
and
or
jmp
imul
data16
jecxz
cmpl
ljmp
mov
push
stos
adc
aad
cmp
fucomi
or
mov
mov
stc
xchg
out
pop
cli
js
aas
in
mov
out
loop
in
jnp
jo
fstl
xchg
jle
cmp
iret
inc
out
mov
fildll
ret
mov
sub
int
ljmp
dec
jp
push
rol
mov
test
fcmovu
in
add
jmp
inc
dec
mov
and
xchg
bound
push
adc
sub
and
inc
lcall
xor
sahf
add
data16
adc
dec
xchg
je
jbe
xor
lds
jbe
push
cwtl
fcomi
in
sahf
jb
push
add
xor
xchg
jne
pop
xlat
jecxz
xor
mov
or
shll
fwait
out
jo
mov
aaa
dec
jmp
xchg
sbb
add
in
ljmp
pop
adc
loopnew
jle
jno
lret
data16
fstpt
andb
and
negb
insb
jae
xchg
scas
jnp
fisubl
call
dec
add
pop
adc
shlb
movsb
add
and
icebp
sbb
lods
mov
xor
and
into
inc
aad
sbb
or
insb
mov
dec
jae
mulb
xlat
mov
lea
jle
mov
jo
push
pop
mov
xchg
jo
ja
push
movsb
test
int
mov
inc
mov
arpl
ret
adc
cltd
daa
or
mov
stc
jne
sbb
adc
movsl
lret
add
xchg
rclb
int3
divl
and
and
in
sub
pop
push
inc
jmp
aam
adc
mov
mov
and
aaa
inc
int3
popa
push
fwait
add
mov
adcb
adc
into
sub
mov
mov
xchg
loope
out
push
adc
mov
and
in
test
mov
cmp
rclb
jmp
xor
dec
xor
push
int
sub
fscale
cmp
mulb
jo
adc
enter
push
mov
pop
push
cwtl
xchg
cmp
dec
jns
xor
imulb
pop
outsl
lsl
push
data16
loope
adc
int3
push
pop
shl
cmpl
jae
dec
aaa
inc
hlt
adc
cwtl
pop
xchg
ret
and
faddl
and
lods
aas
push
lcall
fmuls
imul
pop
mov
push
lods
and
clc
je
daa
inc
imul
stos
stos
pop
andb
mov
icebp
push
pop
sub
flds
and
mov
pop
loope
push
movsl
and
inc
mov
fs
sub
leave
lds
push
scas
lret
lods
lcall
ds
sahf
pop
test
shll
xor
xchg
jbe
lods
aad
and
or
xchg
jnp
imul
sub
subl
mov
popa
loope
xor
and
inc
push
pop
cmc
inc
fldpi
fcmovbe
push
sti
or
cmc
nop
loopne
xchg
and
cmc
pop
add
dec
inc
sub
dec
imul
sbb
push
imul
cmpsl
or
test
nop
int
ss
in
test
sahf
stc
or
fisubrs
inc
pop
or
push
mov
icebp
jl
imul
lret
fidivl
hlt
test
jle
adc
push
dec
out
sub
addr16
xor
clc
scas
ffreep
cmp
daa
je
mov
push
inc
inc
sub
mov
in
cmpl
mov
jo
bnd
inc
pop
push
and
or
sub
enter
xor
xor
jecxz
cmpsb
mov
stos
popa
dec
sbb
cmpsb
adc
fsubrs
test
mov
leave
cmp
test
push
pusha
jmp
or
push
pop
inc
loopne
inc
sti
lds
loope
and
call
outsb
fdecstp
xorl
xchg
xor
or
cmp
inc
subl
fadds
sbb
loop
xlat
push
loopne
sub
cmp
fs
pop
ret
sub
mov
lret
xor
rcr
jle
out
mov
pop
ret
lock
inc
andb
insl
fnsave
jae
jmp
jg
mull
xchg
fldln2
jbe
jge
mov
sahf
mov
lret
pop
gs
insl
fisttpl
fs
stc
mov
cmpsl
mov
das
mov
fs
dec
dec
xchg
cs
add
std
call
xchg
out
dec
mov
jne
ss
stos
ljmp
jecxz
stos
fldenv
cmp
in
add
scas
frndint
cmp
jg
mov
ret
in
sbb
push
loopne
adc
movsb
lods
lret
xchg
xchg
mov
push
mov
sub
xchg
out
inc
add
neg
sbb
or
jmp
cmp
xchg
mov
sti
mov
mov
stos
lret
pop
sti
in
sub
jns
mov
pop
jmp
mov
mov
dec
dec
mov
xor
pop
lahf
cltd
xchg
fdiv
jg
lock
fldcw
cli
std
lock
dec
add
insb
inc
test
leave
movsb
imul
or
sbb
fidivs
adc
jne
mov
das
sahf
add
imul
inc
push
loopne
push
add
dec
cld
pop
push
dec
cmp
aas
add
ja
popa
shl
xchg
imul
ds
jbe
lods
mov
cmc
dec
movl
and
test
jae
sbb
movsb
adc
je
jno
sbbb
cli
arpl
jns
jmp
dec
cmpsl
loope
inc
mov
into
sub
in
je
sbb
std
and
mov
lcall
jmp
mov
ja
push
dec
aam
orb
dec
dec
in
add
jp
mov
jno
push
outsb
add
repnz
lea
movsb
shrl
pop
inc
test
scas
and
das
mov
and
cmp
clc
cltd
dec
sub
iret
popa
call
xchg
lret
mov
mov
loopne
aaa
push
add
leave
repz
or
xlat
mov
push
dec
pop
push
clc
in
or
lods
push
mov
movsl
imul
cmp
xchg
in
lcall
idivb
dec
aam
and
push
or
mov
ljmp
mov
pop
push
jmp
mov
out
xchg
shll
movsl
sub
mov
sbb
mov
and
pushf
ss
fwait
dec
inc
mov
xlat
aam
sbb
mov
lods
dec
jb
sarl
and
xchg
gs
add
jns
out
push
jbe
push
or
push
pop
addb
and
fistpl
push
testb
shrl
sbb
es
test
push
add
repz
les
fimull
push
cmp
dec
sub
push
emms
outsl
inc
clc
mov
cmp
push
sti
out
test
or
jmp
mov
mov
push
mov
dec
rcll
shrb
lahf
icebp
subb
mov
std
pop
cmpsb
jns
xchg
push
sbb
push
adc
inc
mov
xor
in
lds
outsb
ret
cmp
jle
pop
cmpsb
adc
sbb
cmp
ret
hlt
in
add
xor
inc
pop
lret
sub
push
dec
ljmp
inc
pop
pop
sahf
push
add
arpl
popa
pop
mov
and
loope
sub
dec
lods
jns
xor
and
stos
inc
popl
or
imul
cmpsl
inc
test
mov
mov
pop
aam
dec
nop
pop
xchg
iret
or
in
xor
push
stos
dec
das
adc
in
xor
mov
and
dec
cmpsb
notl
fnstenv
fmull
mov
pop
sbb
adcb
out
out
sub
jae
xor
test
fwait
mov
movl
pop
lahf
cmp
mull
and
jp
rcl
imull
fiaddl
xorl
push
les
out
sahf
mov
pusha
lea
dec
cli
dec
lds
and
add
into
sbb
enter
xchg
inc
jle
jecxz
pop
je
or
sub
jns
adc
xchg
nop
inc
push
mov
fildll
sub
xor
lret
mov
pop
sbbl
lea
xchg
add
lcall
aam
push
pop
push
mov
or
mov
mov
test
loope
sub
sbb
in
aas
out
mov
dec
mov
ret
call
into
ret
lods
jg,pt
xchg
jns
sub
hlt
add
sub
call
push
mov
ret
mov
push
sbb
push
std
call
fwait
jo
aas
jo
mov
mov
inc
cs
cmpl
cmp
dec
pop
push
cmp
pop
lock
adc
loop
sbb
jb
sbb
push
cmc
ret
test
in
jbe
sbb
sbb
push
sbb
daa
test
ds
jae
or
cmp
push
and
pop
movsl
mov
clc
insb
xchg
repnz
inc
and
fnsave
xchg
xor
test
les
lock
sub
out
lods
dec
ret
lret
in
movsl
jns
mov
cs
mov
push
out
push
test
enter
sahf
push
jb
movsb
or
dec
xchg
pop
mov
ss
xchg
out
je
push
ret
jmp
inc
add
ficoms
dec
or
push
xchg
dec
sahf
outsb
pop
and
xchg
bound
mov
push
insl
lahf
mov
repz
and
call
sarl
add
add
popf
inc
mov
mov
rcll
mov
imul
les
ljmp
dec
cmp
xor
mov
popl
push
sbb
ja
test
mov
push
sarb
mov
or
test
loope
xor
xor
dec
mov
movl
mov
add
pop
sub
dec
nop
stos
stc
cmpsb
or
or
mov
push
adc
ror
cmp
lea
imul
mov
xor
dec
mov
popa
imulb
mov
imul
pminsw
leave
pop
roll
sub
push
push
adc
dec
push
pop
xchg
addr16
add
daa
lret
jo
xor
lods
lock
dec
shll
or
test
mov
addr16
js
mov
mov
cmp
andb
std
arpl
jmp
sarb
xchg
fsubrp
jo
jp
mov
lcall
sahf
jno
pop
es
sbb
shll
lret
ss
stos
in
sub
mov
aaa
lock
ficoml
cmpsb
cmp
pop
push
imul
mov
jl
arpl
mov
iret
ret
push
insl
xchg
sbb
cmp
pop
into
jno
fidivl
mov
mov
popa
cmc
rcrb
cmp
enter
inc
fwait
xchg
jno
cmp
mov
dec
push
jbe
push
inc
inc
aad
mov
jle
lea
dec
stos
push
xchg
cmp
test
xor
push
fstpl
leave
add
out
add
fucomi
jns
lods
pop
test
sbb
repnz
xor
push
xor
js
rol
cwtl
jnp
popf
shrl
push
xchg
std
or
shrl
xor
insl
xchg
dec
mulb
ret
xor
and
je
push
sub
repnz
fisubl
mov
scas
les
data16
fadd
cmp
sbb
arpl
push
imul
div
rcrb
icebp
sub
popa
mov
mov
icebp
lods
lods
mov
js
cltd
push
add
jg
add
into
inc
sbb
outsl
lret
out
add
xchg
inc
mov
insl
push
jb
xor
inc
cmp
jle
jle
hlt
icebp
das
testb
test
xor
and
sub
repz
movsb
ljmp
je
mov
movsb
inc
bound
lock
push
popf
jg
pushf
fdivp
sub
sub
cwtl
lahf
and
rorl
lcall
rcrl
aas
lds
jmp
inc
or
mov
stc
adc
xor
cmp
stc
inc
rcl
pop
test
gs
lods
jae
cmc
out
lods
inc
movsb
loopne
mov
shlb
cwtl
xchg
std
cmp
and
mov
sahf
push
popf
cmpb
and
xchg
je
cmp
dec
iret
mov
lcall
negl
sbb
fcom
cmp
mov
sub
sbbb
lock
pop
push
cmp
pop
push
test
sahf
int
push
inc
loopne
inc
sbb
push
cs
shrb
shrb
std
or
lahf
bound
push
wrmsr
adc
xor
dec
pop
adc
rorl
jecxz
lods
sbb
mov
push
cmp
mov
xor
in
or
shll
and
insl
xchg
fiaddl
enter
repz
lods
lcall
sarl
sub
in
dec
std
lahf
and
jge
daa
sub
pop
test
dec
scas
mov
cmp
mov
mov
pop
inc
or
mov
jle
xchg
cs
mov
test
jecxz
xor
xchg
cmc
ss
pop
nop
imul
adc
shll
jb
cmp
sub
mov
int3
les
pop
push
bound
lcall
push
dec
movsl
pop
add
xchg
and
icebp
push
lods
cmp
popa
mov
pushf
pusha
mov
outsb
bound
leave
fimull
inc
adc
pop
add
testb
das
mov
int3
dec
pop
cmpsl
enter
add
and
mov
je
jmp
icebp
insb
jns
cwtl
pop
cli
movsb
fsubr
xor
cld
dec
int3
in
mov
outsl
test
scas
icebp
cld
clc
cmp
mov
fistps
xchg
mov
std
push
xor
cmc
xor
arpl
adc
call
mov
ds
sub
and
mov
aas
in
imul
lret
push
sahf
sbb
test
adc
or
sbb
jbe
lds
int
jle
ljmp
ljmp
mov
fwait
stos
mov
mov
push
pop
inc
add
addl
lret
adc
cmp
push
fldl
mov
xchg
mov
lret
push
mov
mov
xchg
or
mov
sahf
pop
std
rcrb
pop
mov
cmpsl
imul
shrl
add
add
js
in
xlat
out
or
jns
lock
jae
sti
or
push
mov
icebp
in
pop
mov
ds
clc
cmp
and
lea
adc
mov
stos
dec
and
push
scas
add
dec
or
xchg
fidivl
cmp
add
xchg
push
imul
pop
pushf
test
ljmp
vbroadcastf32x8
scas
push
loopne
fyl2xp1
loope
ja
mov
out
cmp
incl
call
pop
out
push
lods
sbb
jp
cli
cmp
outsl
ret
outsb
pop
aam
xor
dec
aaa
mov
mov
rcrl
add
push
and
push
sub
sbb
jmp
sub
sbbl
daa
pop
xor
adc
mov
pop
mov
fdivl
mov
jecxz
insb
test
cs
push
push
mov
insl
fcomps
std
adc
mov
or
sub
push
loopne
cli
and
fdivs
or
jne
and
jns
dec
test
mov
andl
test
test
adc
jge
call
mov
sub
cmp
sub
sti
stc
xor
imul
sub
xor
pusha
cmp
aaa
mov
mov
xchg
and
aas
and
sbb
mov
add
insl
sub
int
inc
push
push
mov
int3
stos
lods
sub
lock
fcoml
rclb
push
movsb
xchg
mov
jp
sbb
xchg
mov
adcl
sub
add
add
out
xor
sub
mov
inc
std
das
ljmp
out
add
pop
pop
mov
mov
fstpt
xor
sbb
clc
je
cmp
sbb
repnz
mov
cs
cld
sub
fcoms
jg
popf
jle
jl
mov
adc
fstl
es
sub
rclb
andb
jg
inc
sarb
test
bound
outsl
and
mov
dec
inc
inc
or
idivb
sub
push
xchg
clc
add
mov
ret
mov
jecxz
popf
xor
mov
movsb
cmc
cmp
pop
je
and
push
jle
inc
sbb
fdiv
add
push
rorl
adc
nop
add
std
js
je
das
aam
pushf
addr16
pop
sub
mov
jmp
pop
sub
sub
call
adc
xchg
add
xchg
mov
aaa
inc
jl
insb
loope
in
xchg
pop
pop
jae
insb
or
mov
xchg
aam
sarb
std
sahf
faddp
and
subl
inc
fimull
sbb
repz
dec
or
cmp
cli
fcomp
and
scas
aaa
aaa
pop
dec
sbbb
fmuls
arpl
lcall
aaa
nop
or
xor
les
stos
inc
cmp
xchg
rcl
cmp
xor
jo
bound
sbb
lahf
adc
std
insl
lret
push
jo
stos
imul
jb
inc
shrb
addr16
sbb
inc
inc
comiss
jno
aaa
add
outsb
adc
push
shlb
mov
mov
sub
jbe
shrb
xchg
xchg
xchg
mov
out
in
xchg
pushf
push
xor
fwait
and
sub
das
insl
push
lahf
xchg
repnz
icebp
adc
rorl
adc
aaa
jo
push
xor
lods
mov
xchg
inc
repnz
pop
push
push
jne
cmpsb
fs
xchg
das
stc
shr
out
push
popf
jne
dec
push
mov
adc
push
fwait
stos
pop
cs
mov
add
xchg
gs
xchg
lock
and
je
and
cmpsb
inc
bound
iret
jmp
mov
jg
add
shrl
or
dec
add
aad
mov
imulb
notb
inc
mov
jne
add
jae
lea
sbb
fcompl
ja
rep
mov
shll
scas
jb
into
rorb
pusha
and
xchg
mov
rcl
add
out
mov
pop
xchg
je
jo
xor
sbb
mov
ror
and
test
add
cmc
jle
clc
fwait
loopne
aad
loop
sbb
fistpl
lea
lcall
sbb
mov
push
scas
mov
clc
popa
xchg
dec
and
pop
pushf
fmuls
inc
or
cmp
in
add
and
shlb
int3
rorl
jne
incl
add
cmp
call
andl
and
xchg
mov
or
shrl
repz
ss
subb
push
mov
mov
pop
inc
dec
orl
cmp
mov
sub
lock
and
les
sub
sbb
or
jae
gs
fcoms
rcrb
mov
jne
xchg
inc
dec
leave
and
outsb
mov
dec
inc
daa
popa
cmpsb
and
xchg
push
mov
xchg
mov
icebp
jns
adc
dec
push
rolb
jmp
adc
mov
mov
sbb
inc
insb
in
popf
mov
fidivrs
mov
out
lcall
push
cwtl
mov
sbb
outsb
xchg
xor
mov
pushf
jmp
cmp
fists
mov
movsl
sbb
push
int3
or
je
and
xlat
sub
leave
repnz
add
rolb
dec
test
movzbl
fadds
test
xchg
push
leave
insl
mov
push
and
xchg
jo
addr16
gs
insb
test
pop
scas
rorb
cmp
or
mov
xchg
pop
out
sbb
sbb
lea
scas
je
fcmovnbe
xchg
in
leave
pop
add
fdivrs
out
or
fwait
js
add
xchg
pop
push
shll
enter
sti
jb
cmp
popf
stc
insb
xchg
cmpsl
cmp
jnp
int3
cld
lret
pop
fnstsw
sbbl
xchg
pop
mov
push
xor
sbbl
in
aam
xor
out
add
fimuls
jno
rcll
push
mov
sub
or
mull
cltd
dec
dec
mov
add
repz
cmpsl
ror
jne
out
mov
jle
push
jl
arpl
adc
sahf
shll
int3
add
cmpsb
add
jecxz
jb
mov
cmp
popf
nop
fnstenv
ljmp
out
cmp
adc
shlb
sti
jg
jecxz
push
adc
cmpsb
or
mov
mov
xchg
icebp
xor
hlt
pop
inc
shlb
jle
fdivrs
push
sbb
or
inc
inc
jmp
inc
enter
mov
add
repz
sbb
scas
dec
outsb
scas
inc
xor
pop
xchg
bound
daa
fldcw
int
aaa
shlb
pop
stos
loopne
jmp
sbb
movsb
aam
dec
add
dec
xor
notb
jg
inc
push
and
push
dec
divl
lods
cmpsl
fstpl
push
xor
mov
data16
sbb
mov
popf
jb
nop
pop
add
dec
out
adc
push
add
jmp
test
cs
pop
fwait
lret
in
cwtl
outsb
out
mov
fsubs
xorb
cmp
and
js
jmp
add
out
mov
push
lock
jmp
rcrl
jle
adc
fnstenv
cmp
dec
fs
inc
cmp
jo
fstpt
ficompl
addr16
jl
adc
aaa
cs
dec
ja
hlt
std
popf
scas
ds
pop
mov
stos
jbe
xor
cs
in
cmp
dec
sqrtps
fsubrl
xor
rorb
aam
clc
xor
ja
test
pop
lcall
mov
jae
push
jno
mov
and
mov
xchg
push
adc
inc
pause
sub
test
dec
addr16
mov
mov
cmpsl
pop
jb
pop
ljmp
lret
outsl
mov
push
push
out
fldenv
lret
sti
adcl
mov
jns
aas
lods
outsb
dec
shrb
imul
jb
sbb
cs
adc
fwait
aaa
in
push
mov
xor
scas
pop
push
adcl
sub
aaa
push
stos
mov
fisttpl
insl
out
test
push
add
dec
pop
daa
enter
aam
repz
jecxz
cli
xchg
or
jnp
outsw
pop
inc
int3
xchg
ffreep
mov
add
push
mov
and
cmp
pusha
iret
cmpsl
es
fwait
and
push
jbe
loopne
sub
adc
test
leave
les
daa
cli
push
dec
add
pop
mov
xor
lods
jmp
sub
test
les
add
push
jmp
int
out
push
xchg
fisubl
pushf
mov
insl
leave
das
sub
jnp
jge
xchg
lods
sti
call
xlat
mov
dec
push
test
or
cmp
sub
jp
fadds
ss
sti
mov
pushf
loop
xchg
pop
sbb
cmp
loope
inc
adc
cmp
jae
mov
inc
push
aaa
xchg
dec
jg
jle
cmp
adc
pop
pop
rcrb
sub
pop
aas
testb
adc
sub
add
cwtl
movl
fimull
push
mov
lahf
cmpsb
and
int
lods
repnz
adc
shlb
xchg
ljmp
imulb
sbb
jno
inc
mov
pop
outsb
jp
cmp
pop
inc
out
shll
frstor
les
stc
mov
jo
xchg
pop
movsl
or
and
fsubs
xchg
xchg
add
xchg
sbb
cltd
dec
adc
popf
in
sbbl
push
pop
mov
shll
sbb
test
test
or
jne
fidivs
adc
fiadds
pushf
ret
outsb
sti
das
lods
pop
inc
into
jp
inc
dec
insb
orl
dec
jo
dec
jnp
mov
ficomps
mov
dec
push
lea
out
in
jle
int
mov
ror
add
fs
xchg
rclb
sti
add
jg
test
xor
into
and
mov
and
fdivrs
add
adc
into
negb
insb
adc
pushf
sub
in
sbb
mov
shr
or
inc
in
lcall
mov
sbb
loopne
lods
imul
xchg
xor
sub
and
shlb
lds
stos
xor
decl
ret
call
mov
cmp
fdivs
mov
out
lret
pop
push
ds
neg
dec
hlt
add
adc
aas
lcall
pop
and
aas
popa
in
in
lock
lret
data16
pop
sub
or
inc
xor
sbb
inc
insl
xor
int
mov
mov
add
inc
gs
adc
rcll
aam
je
mov
mov
clc
pop
sti
and
xchg
dec
pop
lods
and
std
pop
into
rcl
lds
clc
out
aaa
movsl
test
mov
pushf
mov
jo
gs
enter
jle
loope
and
ret
lcall
xchg
repz
pop
dec
fldlg2
jb
sub
push
sbb
iret
push
dec
aaa
xchg
fiaddl
ljmp
jle
jbe
gs
cmpsl
jns
pop
or
test
mov
shlb
sub
movsl
andl
movsb
adc
loopne
xchg
mov
add
mov
cmp
pop
test
daa
repz
mov
push
cmp
pop
dec
sbb
lock
jo
mov
sbbb
les
cmc
jb
mov
pop
popa
out
add
or
and
aad
push
jne
aas
out
aas
arpl
mov
iret
mov
bound
idivl
arpl
xor
sub
fdivrs
mov
ficoms
cli
sbb
cmp
inc
cmpl
sbbb
jl
loopne
xchg
adcl
ja
adc
sbb
pushf
daa
mov
loope
daa
inc
xor
pushf
mov
popf
and
and
rolb
fwait
dec
fmuls
sti
jmp
cli
rclb
int
shll
fucomi
mov
sbb
sbb
lods
shlb
adc
dec
add
fistpll
ret
pusha
test
cmp
and
add
and
subl
int
sub
xchg
fldl
call
repnz
xor
shlb
rorl
mov
lret
jne
xchg
sub
ret
lods
test
xor
push
cmp
pop
add
add
jno
push
mov
fdivl
or
push
mov
mov
pop
hlt
xor
scas
enter
mov
jae
cmp
mov
data16
adc
fdivrl
shlb
sbb
cmp
jbe
dec
dec
in
mov
add
subl
shlw
xchg
xchg
fld1
push
lret
adc
jmp
cmp
out
mov
xchg
mov
jbe
in
lock
xchg
add
mov
adc
adc
repz
and
cmp
imull
mov
mov
push
out
mov
dec
and
divl
popf
dec
sub
mov
cmpsb
addr16
xor
faddp
xchg
and
jmp
jle
pop
push
fs
aam
add
lret
shrb
xor
jecxz
test
mov
xlat
cmpsb
insb
cmp
out
sub
inc
xor
xchg
inc
lcall
fildl
mov
mov
inc
out
rcrb
jmp
cmp
movsl
mov
pushl
jl
xchg
mov
sub
adc
push
add
adc
fistpll
jbe
in
sub
mov
dec
pavgb
sub
test
pop
arpl
pop
je
jmp
repz
cli
insl
gs
or
popf
xor
sbbl
or
mov
cmp
mov
add
mov
andl
dec
sub
adc
jne
cmp
lahf
js
shrb
es
xchg
fnstenv
es
scas
shll
mov
pop
insb
fldt
cltd
fisubl
xchg
xor
dec
dec
sbb
arpl
xchg
sti
gs
xor
das
push
mov
adc
adc
sahf
cmp
popa
icebp
call
imul
sbb
add
mov
mov
pop
cmp
idiv
mov
inc
xchg
insl
dec
cmp
bound
in
pop
and
clc
mov
push
adc
dec
in
mov
in
ljmp
gs
cwtl
xlat
mov
ss
lahf
popa
sbb
mov
jmp
ljmp
outsl
and
push
xor
mov
out
xchg
xchg
inc
sub
pusha
xchg
or
movl
and
xchg
xlat
dec
push
cld
mov
ret
in
fstl
or
jne
mov
mov
push
mov
pop
test
rcll
in
pop
out
xor
xchg
rcll
xchg
jbe
cmp
call
pushf
test
in
jecxz
cmp
adc
push
pop
popf
and
xchg
scas
dec
adc
gs
pushf
dec
push
sahf
push
imul
lcall
adc
fisttps
jae
arpl
pop
popa
icebp
dec
loope
leave
sbb
pop
push
sub
push
mov
xchg
sub
add
test
cmpsl
dec
lods
inc
lcall
shrl
and
push
inc
lret
or
mov
rorb
dec
scas
rcl
neg
andl
ljmp
mov
movsl
lods
cmp
or
sbb
rorb
pop
iret
test
jb
dec
and
jmp
dec
sbb
sbb
in
inc
pop
movsb
xchg
push
out
sub
ret
mov
push
push
push
loopne
and
call
sub
das
sbbl
es
popa
incl
pop
pop
imul
sub
into
jl
in
mov
cmc
mov
fisttpll
xchg
jae
xchg
inc
jge
xchg
in
jl
jp
fcomi
sarl
mov
mov
xchg
fistpl
cmp
pushf
xor
mov
add
lret
mov
sbb
sub
into
cs
mov
push
and
and
arpl
sub
imul
sbb
loopne
es
outsl
adc
cld
push
sub
pop
cmp
adc
int
mov
push
inc
xchg
push
leave
and
cli
dec
icebp
gs
imul
imul
inc
xor
adc
rcrb
data16
repnz
xchg
stc
fwait
call
and
jno
into
xchg
sbb
mov
dec
cmpsl
sub
fldl2t
push
dec
xchg
cmp
lret
adc
cmpsb
jno
mov
fldcw
sub
scas
fsubl
fstpt
add
mov
aaa
mov
pop
mov
jp
ljmp
or
jg
dec
add
in
call
nop
out
movsl
push
xor
adc
out
lods
ret
add
xor
inc
scas
test
mov
xchg
push
lret
std
cmc
dec
mov
aad
movsb
aas
arpl
aas
jg
pop
pop
sub
scas
adc
inc
xchg
xor
sub
daa
mov
xchg
cmp
les
gs
gs
jmp
add
scas
outsl
dec
or
push
jg
sbb
inc
and
dec
in
iret
in
pusha
stos
xor
mov
cmc
faddl
shll
pop
call
in
scas
daa
mov
dec
inc
pop
xor
jg
pop
shll
addl
stos
fnstsw
mov
inc
jbe
mov
adc
call
in
xor
sub
gs
nopl
xor
inc
addr16
mov
or
pop
mov
in
aaa
ja
add
pushf
sbb
mov
call
mov
jnp
sub
xchg
cmp
aas
pop
sbb
loop
fisttpl
jmp
jbe
push
aaa
clc
xchg
xorl
jmp
subl
adc
cmp
div
scas
push
movsl
add
lock
sbbl
xorb
cmc
in
ds
jmp
lods
lret
mov
int
pusha
mov
sbb
int3
push
dec
mov
mov
xchg
les
stos
cmpsb
xchg
in
xor
cmp
sahf
xchg
in
cmp
mov
cmp
jg
and
cmp
fildl
call
js
push
out
sahf
out
sbb
roll
insb
sbb
bound
push
bnd
mov
sbb
repnz
cwtl
movsl
out
mov
push
clc
mov
or
lods
hlt
xchg
inc
out
nop
jl
repz
push
and
pop
in
loopne
sub
and
push
add
pop
imul
jb
pop
inc
fbld
ret
jl
mov
adc
xchg
mov
add
rol
inc
xchg
dec
sbb
out
in
roll
loopne
jno
pushf
jmp
jno
outsl
hlt
mov
repz
jmp
dec
aaa
push
shrb
mov
pusha
mov
jg
ficompl
loopne
add
push
xchg
xor
cmp
add
mov
test
jbe
cltd
scas
pop
push
pop
mov
sub
jnp
mov
int
jl
mov
or
cmpsb
jns,pn
int
lahf
pop
or
das
inc
andb
mov
jo
das
stc
adc
adc
cmp
sbb
ficoml
in
sbb
addr16
mov
insb
xor
mov
fists
mov
ja
add
sbb
loope
xor
push
xchg
shlb
cmc
jne
rorl
dec
cmp
mov
popf
mov
mov
xorb
add
inc
mov
adc
xor
or
push
xchg
pop
push
int
mov
ret
movsl
dec
sub
xor
push
mov
lcall
dec
cmp
xchg
add
cmpw
shrb
addl
out
leave
js
cmpsl
or
xchg
or
subb
out
lock
pushf
sub
lcall
adc
in
lods
cmp
ljmp
inc
inc
ds
mov
int3
sbb
jmp
jge
ja
repz
push
hlt
in
pop
add
mov
inc
and
sti
fstl
push
and
daa
sub
neg
imul
sub
or
imul
xchg
fs
cmpsl
xor
mov
push
mov
sbb
xchg
addr16
cmpsb
loop
rcrb
pop
xchg
dec
aaa
test
fists
or
sbb
out
dec
shll
push
lods
sub
jmp
mov
nop
mov
xor
arpl
popa
cltd
imul
cmp
sbb
mov
loope
out
push
lds
cmpsl
or
scas
in
inc
adc
lcall
pop
xor
je
call
pop
in
lret
ljmp
loopne
fcmovb
lcall
mov
cs
mov
out
add
xor
outsl
xchg
stos
arpl
push
pusha
scas
cwtl
push
in
rclb
adc
sbb
dec
sbb
in
icebp
sbb
inc
sbb
xchg
mov
int3
aam
jl
stos
loope
shlb
xchg
sbb
dec
fisubs
shll
test
negb
fcmovne
xor
xor
mov
inc
and
mov
ljmp
in
jno
adc
pop
sahf
cmpsl
jg
in
or
shl
inc
sub
rorb
stos
lret
pop
push
mov
or
lahf
push
js
test
loop
add
xchg
rcrb
or
sub
adc
xchg
jne
imul
add
or
add
and
rorl
out
dec
pop
mov
lds
rclb
shll
mov
fsubs
sbb
fstpl
xchg
scas
mov
push
lea
fnstcw
push
popa
mov
mov
xor
jge
sub
push
shll
jb
sar
lcall
xchg
test
movsb
sbb
adc
mov
cmpsb
fs
outsl
jg
repz
in
das
dec
xchg
push
bound
add
sbb
aad
lods
ja
pop
or
cltd
jae
lods
mov
subl
fs
lahf
and
push
and
dec
mov
push
push
push
iret
outsb
rorl
sub
push
daa
sbb
jns
jb
pop
ds
es
push
and
sarb
sub
clc
cmp
push
popa
ret
mov
iret
dec
ret
int
and
pushf
push
add
sbb
imul
and
aas
mov
jge
add
mov
int3
loopne
pop
jb
aam
mov
push
stos
xor
sahf
mov
push
test
xor
jb
outsl
dec
pop
mov
xchg
fwait
sahf
sbb
pop
pusha
push
add
xchg
insl
enter
push
jo
mov
pop
test
out
xchg
js
iret
out
imul
lret
outsl
xchg
inc
push
test
in
pop
add
cmp
fcompl
das
sbb
sbb
mov
lret
pop
dec
sbb
sub
mov
lret
pop
push
fs
push
cli
cmc
in
lret
push
scas
sbb
cli
cmpsb
mov
aad
push
adc
cmpsl
inc
lods
adc
jmp
mov
xchg
sub
ljmp
jmp
mov
inc
inc
subb
popf
pop
in
fnstsw
loopne
mov
call
pop
cli
sbb
sarl
ljmp
fnstenv
jecxz
push
add
ret
pusha
lret
inc
lret
adc
shll
push
sbb
out
push
xchg
adc
fisubl
lods
arpl
test
mov
add
lods
jno
inc
aam
das
clc
in
dec
mov
push
mov
push
test
aaa
or
inc
add
pop
inc
jne
addr16
in
sbb
jecxz
mov
jno
sbb
inc
push
incb
dec
xor
enter
ret
push
inc
outsb
mov
jge
shll
cltd
push
test
sbb
js
jae
negb
out
add
sub
mov
iret
pop
and
int3
inc
pushf
pushf
sub
int3
fdiv
push
shrl
je
pop
cmpsb
xor
xor
push
or
aad
xchg
push
cwtl
call
adc
sub
rolb
sbbl
pop
jecxz
test
dec
stos
loope
xor
scas
pop
adc
xchg
push
dec
jne
xchg
lahf
xchg
cmp
icebp
int3
and
dec
fwait
add
xlat
mov
sbb
cmpsl
in
testl
xor
std
ljmp
dec
pop
cmp
cmp
int
cmp
jo
and
mov
xor
dec
sub
jne
jno
sahf
pop
pop
cmp
or
shlb
dec
loopne
cmp
ja
xor
and
scas
icebp
filds
lods
sti
jb
dec
dec
sub
inc
xchg
jne
loope
faddl
adc
andl
repnz
sub
jl
cli
mov
xlat
sub
mov
int3
or
push
jp
scas
push
bound
int
sbbl
daa
nop
jb
cld
xchg
or
vrcpss
adc
pop
mov
fs
jnp
adc
xchg
push
dec
dec
add
hlt
add
sbb
and
pop
scas
pop
shll
jl
mov
nop
mov
and
movsl
leave
pop
rcrb
add
and
aam
sbb
aam
dec
outsl
aaa
aaa
hlt
notl
in
stos
int3
dec
jbe
pop
sbb
je
push
stos
jmp
mov
cltd
push
test
pop
mov
test
fisubrl
add
in
jo
cmp
jecxz
int
ss
push
stos
cmp
lods
iret
inc
pop
pop
mov
testl
mov
push
jbe
sti
push
pushf
or
jb
daa
outsl
pop
sub
dec
sahf
cmp
xor
dec
loop
call
mov
xchg
es
dec
dec
pop
daa
and
xchg
and
fcoml
pop
sahf
fldl
adc
adc
cmp
and
push
jo
jmp
pusha
mov
jle
dec
stos
or
arpl
test
inc
addr16
repnz
cltd
out
sub
enter
dec
pop
daa
pushl
mov
fldt
test
sbb
mov
cmc
mov
dec
jno
js
add
cli
inc
out
push
fs
mov
sub
push
popa
jp
dec
lock
add
je
cmpsb
loope
inc
push
insl
imul
loopne
mov
sbbl
testl
lret
add
mov
dec
subb
adc
push
and
inc
mov
cld
adc
std
push
xchg
aam
leave
leave
xchg
add
or
dec
jmp
mov
mov
in
rorl
pusha
je
in
push
jmp
test
mov
jnp
jne
mull
mov
or
sub
test
cmp
fdivs
stos
push
push
call
call
xchg
ret
xlat
repnz
cmp
sub
lds
out
push
and
xor
adc
popa
imul
add
stos
or
pop
or
jnp
inc
sub
fwait
xchg
push
inc
xor
mov
jmp
jp
in
sti
mov
loope
xchg
out
xchg
les
mov
jmp
movsl
shlb
pop
sub
insb
and
push
and
mov
lds
out
lret
mov
aas
fbld
xchg
inc
test
pop
repz
es
lods
das
testl
mov
dec
sub
cmp
les
dec
in
lods
cmpsl
cltd
test
mov
popf
out
addr16
testb
shl
sub
sbb
mov
hlt
xchg
ret
push
cld
je
adc
pushf
pop
xchg
and
int
jo
rcl
imul
or
push
sbb
sub
stos
push
inc
aad
cmp
cli
cld
mov
mov
fdivs
dec
ret
pop
push
std
mov
push
add
insb
push
lret
cmpsb
das
inc
push
cltd
inc
or
xchg
addl
enter
mov
pop
sub
ljmp
in
inc
icebp
xor
int
jo
fists
inc
mov
icebp
cmp
ljmp
in
das
and
jmp
cld
stc
filds
sarl
pushf
ret
push
cs
xchg
push
cltd
daa
outsl
push
rol
sbb
jbe
adcl
inc
jmp
les
mov
cmp
cwtl
ljmp
push
cltd
xchg
pop
inc
stc
inc
dec
cs
rcr
incb
orb
pop
mov
push
mov
cmp
lds
das
stos
and
popa
daa
dec
xchg
in
loop
xchg
mov
icebp
sub
rol
movsb
xchg
mov
xchg
sbb
bound
lds
mov
mov
test
lahf
lock
sbb
imul
and
pop
inc
lock
int3
mov
dec
sbb
imul
in
add
ja
sbb
jg
mov
insl
loop
cwtl
cmc
sub
int3
clc
pusha
and
aaa
aas
adc
les
jp
cmpsb
pop
mov
pop
sub
pop
mov
pop
int3
es
fwait
jle
mov
inc
mov
and
jae
mov
nop
lea
das
xchg
sub
addb
dec
mov
scas
imul
lret
aam
and
int
cmp
pop
filds
cmp
popa
push
xchg
jb
adc
subl
and
or
pop
cli
fmuls
loopne
mov
dec
dec
adc
xor
cs
ret
jbe
adc
fdiv
aam
outsl
cmp
imul
and
in
jge
pslld
mov
pop
les
adcb
fcomi
jg
cmpsb
xchg
test
jb
inc
pop
lods
sbb
imull
cmp
pop
scas
jg
add
js
jo
rcrb
sub
mov
fwait
jge
jp
xchg
stos
aam
orb
mov
xor
lods
adc
xchg
arpl
scas
jl
xchg
adc
push
push
insl
jbe
cmp
xchg
xchg
push
push
in
jnp
xchg
cmc
dec
xor
lods
in
jmp
imul
popa
imul
daa
sub
fabs
push
inc
mov
mov
in
mov
ss
xchg
test
sbb
call
in
pusha
mov
push
scas
movsl
xchg
dec
leave
and
or
adc
dec
adc
sub
bound
into
xor
jg
xor
roll
jnp
clc
xchg
adcl
sbb
fwait
mov
cs
push
mov
push
and
push
sub
enter
jnp
and
or
mov
mov
insb
out
xchg
ja
adc
mov
mov
into
pop
cmpsl
mul
push
xor
or
push
pushf
push
mov
out
in
shlb
sub
lods
lcall
out
add
insl
mov
jp
push
mov
fists
mov
pop
sbb
inc
flds
lahf
sub
or
dec
sub
fdivrl
sarb
adc
mov
xor
push
shll
or
das
jmp
les
in
aad
cwtl
xor
fwait
sbb
xlat
lahf
cltd
mov
cmc
insb
xchg
mov
addr16
test
mov
mov
xor
push
jne
fdivrs
xchg
bound
test
mov
adc
int
xor
mov
mov
lret
gs
out
test
cmp
dec
mov
or
xor
aas
scas
test
inc
in
inc
xor
std
cs
pushf
mov
lahf
jbe
js
mov
in
lods
push
fdivs
sbb
mov
andb
incl
jmp
mov
imul
add
les
xchg
and
into
data16
and
fdiv
pop
cmp
or
lret
in
mov
outsl
push
cmp
rcl
and
arpl
dec
or
pop
fcoms
dec
xchg
mov
inc
mov
xor
mov
mov
insb
pop
aas
rolb
jmp
lock
and
inc
mov
mov
testb
push
loopne
mov
xchg
leave
jne
jle
enter
lock
jmp
or
out
lods
mov
lock
cmp
ror
out
sub
jg
jne
dec
xor
mov
inc
push
xor
fadds
shrb
pusha
mov
pop
int3
xor
mov
xor
mov
test
clc
arpl
movsl
xorl
cltd
stos
sbb
push
movsl
push
int3
jge
cmp
std
cmpb
cmpsl
mov
sbb
sub
les
xor
out
outsl
rcrb
cltd
insb
std
add
shl
sbb
cmpsb
inc
clc
add
add
hlt
pop
jecxz
fwait
sbb
es
mov
popa
in
bound
fidivl
dec
inc
loope
mov
ljmp
mov
pop
mov
insb
jae
push
push
inc
and
mov
dec
leave
es
sub
sub
arpl
and
leave
ret
loop
adc
push
xorb
xor
push
daa
cmpl
sbb
movb
add
sbb
mov
rcl
jp
into
lahf
mov
cmc
jl
in
repnz
insb
test
or
sbb
inc
dec
divl
popa
jle
rol
jae
or
movlps
icebp
mov
lods
jae
lock
push
lock
push
stos
cmp
jo
nop
and
xor
shlb
in
push
nop
adc
cmp
cmpb
lods
popa
jno
iret
daa
in
fimuls
hlt
pop
dec
gs
mov
sti
fstpt
mov
lret
test
xor
sbb
call
mov
or
test
inc
shll
js
inc
call
insl
negb
mov
andl
ror
mov
mov
cmpsb
push
jg
fidivrs
push
sbb
xor
pop
and
dec
in
fcompp
push
movsl
xlat
cwtl
cltd
push
out
lea
rorl
mov
fcmovnb
push
push
mov
fwait
sbb
push
fs
enter
inc
cmpsl
sbb
dec
outsl
stos
fcoms
cmpsb
iret
and
lcall
lret
push
aaa
pop
scas
sbb
push
add
push
sbb
and
movsl
xchg
xlat
lock
clc
nop
nop
scas
call
inc
int3
in
mov
jb
test
sub
in
mov
inc
cmp
push
leave
std
jb
lds
sub
sbb
jno
jne
lret
mov
and
scas
xor
fwait
jne
push
outsb
decl
outsl
scas
std
loop
icebp
fcmovne
rcll
fmul
jb
inc
daa
fbld
push
lcall
sub
or
inc
sub
sbb
push
mov
mov
testl
jmp
sbb
mov
fs
mov
gs
dec
dec
scas
add
addl
inc
popf
push
dec
idiv
hlt
cmpsl
loop
outsl
cmpl
xor
inc
xchg
jp
push
icebp
pop
pop
imul
test
jecxz
divb
sbbl
test
mov
imul
sti
test
pop
adc
popf
cmp
out
sahf
notl
out
mov
xorb
cmpsl
ffree
rcrb
test
sbb
in
out
out
out
mov
jp
or
sub
js
test
stos
xchg
lea
cmp
cmp
fistpl
mov
sarl
cld
shr
mov
into
stos
adc
aas
jge
or
call
aaa
fists
mov
int
les
shll
lahf
aas
outsl
inc
and
xchg
imul
pop
aad
cmpl
cs
in
xor
cmp
std
dec
shlb
pop
ss
or
mov
popa
add
dec
jns
call
cltd
jge
xor
add
lahf
xchg
sbb
loope
sub
mov
ror
xchg
ljmp
jnp
fucomip
cmp
loope
gs
sti
shrb
xor
push
fstl
add
inc
movl
arpl
inc
xor
xor
pop
push
dec
imul
out
repz
cmc
mov
int3
xor
mov
sbb
sti
mov
add
testb
jge
loopne
scas
addps
push
stos
lret
add
in
mov
inc
call
xchg
xor
outsl
test
mov
sub
sbb
inc
lahf
imul
lret
mov
mov
dec
insb
bound
push
jnp
shlb
aad
stos
das
arpl
mov
inc
addr16
add
mov
popf
adc
inc
mov
mov
dec
out
lret
xchg
dec
lea
and
xor
in
iret
xchg
push
pop
stos
push
pushf
adc
mov
dec
rcrl
daa
jae
andb
inc
bound
es
inc
adc
cmpb
call
xchg
lcall
cmp
push
stc
xor
mov
push
repnz
pop
fldl
aad
jmp
xchg
pop
cs
cmp
jbe
xchg
inc
loopne
cli
fistpll
push
pop
jae
pop
imul
inc
add
jno
out
addps
sub
mov
jo
call
rorb
shll
mov
push
incb
dec
mov
dec
jae
out
out
clc
lods
lods
cli
jne
jne
daa
movsb
pop
call
push
inc
int
push
adc
xchg
push
notb
xchg
insl
mov
xchg
cmpsb
ja
lods
dec
push
mov
jae
or
das
pop
out
jecxz
orl
xor
or
cmpsb
ret
cwtl
inc
cltd
push
push
dec
xchg
addb
mov
adc
or
hlt
into
fisubl
dec
movb
imul
in
jbe
xchg
mov
sbb
add
dec
stos
jnp
mov
jbe
clc
inc
mov
rcl
dec
sub
or
sub
in
je
jmp
or
xchg
sbb
sbb
ja
jg
scas
cmc
mov
push
push
cmp
nop
pop
push
loop
pushf
xor
pop
adc
push
mov
mov
pop
stos
leave
scas
push
and
add
loope
and
dec
pop
mov
and
aas
insb
test
and
ds
cmp
outsb
sub
jne
loopne
or
mov
pop
or
pop
push
xor
iret
iret
lret
push
sbb
cmp
cli
mov
sub
mov
in
push
call
sub
ja
jecxz
inc
scas
xchg
daa
gs
dec
mov
repz
mov
xchg
dec
xor
mov
in
hlt
jne
in
xor
dec
pop
es
cltd
mov
push
mov
gs
movb
mov
xchg
sub
gs
dec
xchg
push
push
stos
pop
lcall
and
mov
inc
sub
mov
arpl
and
lcall
cmp
cmp
pusha
rcll
cmp
adc
pop
cmp
int
inc
xchg
cmp
mov
test
dec
cmp
jnp
in
int
dec
jmp
pusha
sbb
js
in
mov
mov
sub
xchg
push
mov
sub
mov
dec
repz
outsl
mov
jae
jne
push
cmc
aaa
outsb
insb
push
call
and
add
jnp
cmp
insl
and
inc
add
cmc
sub
stos
adc
and
mov
mov
mov
jb
popa
popa
pop
or
loopne
mov
inc
enter
and
push
sbbb
push
lcall
mov
cli
outsb
into
push
insl
or
popf
mov
pop
jbe
cmp
hlt
in
cld
rcr
sti
cmp
insl
mov
push
cmp
xchg
fcoms
sti
pop
mov
and
pop
jns
out
and
test
test
mov
xchg
cmpsl
daa
add
shrb
mov
mov
sti
mov
rclb
xor
xchg
popf
jge
push
inc
jmp
scas
xchg
stos
cmc
or
fiadds
loop
sbb
xchg
push
out
mov
pushw
inc
loop
add
pop
cmp
mov
push
xchg
xchg
cwtl
cmp
inc
xchg
cld
aam
icebp
mov
cli
lret
mov
sub
popa
jge
outsl
xchg
idivb
mov
movsb
xchg
cmp
mov
sbb
adc
xchg
out
mov
cmpb
in
test
push
fs
sbb
leave
cmp
je
out
xchg
xchg
nop
gs
push
or
shr
pop
out
loopne
iret
adc
mul
aaa
and
fcmovnb
cwtl
cmp
cmpsb
stos
fldenv
sbbl
add
mov
lds
leave
xor
sub
shll
in
enter
pop
push
xchg
sti
sub
decb
pop
test
adc
xor
sub
xlat
aad
cld
cltd
outsl
sarl
xchg
xchg
xchg
mov
sbb
daa
cli
iret
pop
std
iret
cmp
xor
and
xor
sbb
push
lock
repz
push
gs
je
push
pop
xchg
sbb
sub
mov
push
fiaddl
cltd
data16
pusha
push
ds
in
pop
xchg
sub
lahf
push
jmp
test
es
das
xchg
lods
cmp
cmp
mov
dec
lahf
fmuls
xchg
mov
lahf
cmp
and
rorl
aaa
push
adc
int3
stc
out
push
sub
pop
icebp
iret
xlat
sub
adc
cmpsb
addb
out
sbb
lock
lcall
mov
mov
cmp
cmp
jno
dec
icebp
inc
sub
cli
jnp
xchg
and
icebp
inc
das
mov
add
lahf
leave
push
and
inc
cs
insl
ljmp
mov
sbb
mov
lret
out
push
jno
pop
cwtl
cmp
aas
pusha
jg
fmuls
sub
dec
outsb
mov
dec
pop
adc
out
dec
aas
push
and
xchg
es
push
test
xor
int3
out
push
pop
mov
notrack
aaa
dec
adc
pushf
cmp
les
int
or
mov
pop
mov
es
fidivrl
leave
cmp
jno
fiaddl
int3
xor
xchg
in
test
pop
std
push
jne
fstp
arpl
lods
xor
pop
sbbb
inc
popa
xor
sbb
popf
sbb
inc
les
sub
pop
add
sarb
jecxz
xchg
cld
add
scas
ss
fbstp
push
jge
or
mov
sbb
sub
test
imul
dec
xchg
in
jns
or
cmpsl
push
adc
or
data16
xlat
pusha
cmp
arpl
cmp
jge
mov
mov
xchg
cmp
and
sbb
test
xchg
inc
inc
movsl
sbb
xor
mov
inc
or
inc
test
cltd
xchg
imul
pop
roll
push
fidivl
lods
push
pop
js
sub
and
lods
outsb
out
movsl
mov
mov
inc
cmpsl
cmp
cmpsb
dec
loop
mov
push
xchg
jle
aaa
mov
orl
ret
cltd
pop
cld
cmovo
cmpsl
inc
mov
adc
shl
add
popf
dec
outsb
insb
cmp
push
xchg
add
mov
dec
aas
mov
add
jnp
push
adc
add
and
jmp
test
fbld
mov
mov
test
iret
shll
push
testl
sbb
mov
popf
mov
cmp
dec
and
sub
repnz
insl
scas
add
popa
xchg
shl
dec
mov
call
jmp
popf
imul
sarb
dec
mov
imul
push
lea
adc
testb
sub
pop
pop
imul
ss
xlat
out
rclb
sub
in
popf
aad
dec
mov
mov
mov
and
pushf
std
dec
xchg
in
or
and
ret
pop
pop
mov
mov
sub
dec
sub
xor
dec
jno
jmp
nop
jmp
lods
popf
xor
mov
lock
add
mov
enter
xchg
enter
sub
xchg
and
xchg
jl
les
mov
add
sbb
inc
out
mov
scas
cmp
fldenv
loop
sub
xor
mov
sub
data16
add
inc
jo
imul
cwtl
push
lcallw
jmp
sbb
pop
jne
fmull
mov
inc
sbb
aad
shlb
or
int
int
push
and
xchg
push
scas
adc
clc
out
jecxz
xchg
imul
xchg
or
jbe
jl
jb
fs
xchg
push
fmuls
gs
enter
cmp
sbb
repz
inc
jle
addl
pushf
mov
xchg
test
add
and
jg
leave
jle
xchg
or
push
fcmovnu
shll
cmp
dec
jl
push
sub
frstor
sub
xor
jno
cmp
xchg
push
fsubrs
fdivrs
dec
jb
cmp
out
adc
aam
cmp
lcall
and
sub
and
jno
jb
add
adc
mov
adc
xor
push
cmpsb
cmp
fwait
arpl
mov
data16
xchg
sahf
adc
mov
sbbl
outsl
rcr
dec
dec
push
sub
push
cmp
mov
xchg
jg
xchg
inc
xor
ds
icebp
dec
jl
pusha
push
dec
cld
imul
hlt
out
lahf
mov
dec
mov
push
mov
pop
insb
inc
fstpl
test
mov
lea
cld
add
mov
mov
cli
xor
ss
xchg
xlat
xor
js
or
and
or
out
xor
fsubrl
dec
mov
pop
ret
ret
sbb
out
push
shl
or
or
cmc
add
sbb
hlt
cmp
inc
popa
sbb
xor
lret
sub
xchg
outsb
fisubrs
imul
sub
js
sub
lock
cli
inc
leave
addr16
fbstp
sbb
xchg
cmp
xor
and
rclb
push
jae
repnz
fstpt
pushf
inc
fnstcw
sub
outsl
ja
movsb
rol
adc
add
cltd
jg
mov
and
push
int
fiadds
push
mov
mov
and
scas
xchg
mov
aad
ret
mov
cs
cmc
mov
adc
iret
test
pop
jl
or
rcr
fnstenv
cld
pop
sarl
mov
clc
pop
inc
or
mov
adc
push
popf
fsubs
stc
cmp
ds
xor
and
notb
divl
inc
ret
rorb
int3
iret
fs
xchg
test
mov
cwtl
sahf
xchg
das
lcall
stos
push
xor
popa
or
adc
xchg
fisttps
lret
pop
adc
fidivs
rcll
std
test
cmp
pop
xchg
mov
mov
fimuls
lods
mov
outsl
aad
adc
push
cld
js
mov
mov
js
popf
out
scas
in
jae
into
adc
test
lahf
pop
fchs
dec
sbb
jno
adc
cmpb
jecxz
add
sbb
mov
lods
cwtl
adc
ret
cmp
lret
push
test
dec
cmpsb
xchg
lea
ret
mov
jmp
push
ds
scas
mov
push
shlb
test
rorl
outsb
adc
inc
adc
sub
jbe
and
aam
xchg
imul
fwait
push
mov
repnz
rcll
xchg
xor
test
cmpl
and
adc
fcmovu
into
js
les
mov
leave
test
jmp
inc
daa
insb
movl
orl
push
dec
lret
jno
movsb
add
pop
mov
mov
and
inc
and
inc
sbb
push
cmp
inc
addb
cmp
cmp
inc
sbb
scas
in
cmc
inc
xchg
jae
daa
fistpll
inc
clc
lock
dec
shlb
mov
pop
push
pop
pop
loopne
les
push
les
imul
shrl
cmp
jp
xor
pop
jns
jno
adc
pop
push
lods
or
rcll
pop
bound
pusha
mov
in
stc
test
pop
out
popa
insl
movsb
push
jge
test
jno
dec
sbb
movsb
mov
cmp
lods
mov
mov
mov
xchg
insl
dec
xor
stos
sbb
pushf
movsb
xchg
iret
and
fldt
jecxz
pop
ja
sub
lahf
clc
mov
xchg
or
int
ficompl
test
ljmp
fcoms
aam
popf
mov
dec
xchg
and
xor
gs
sub
leave
test
imul
add
add
mull
mov
adc
pop
xchg
mov
push
sbb
gs
jl
jb
aam
push
push
jl,pn
insb
lcall
add
push
mov
mov
cltd
jecxz
enter
out
flds
xlat
and
mov
imul
ljmp
movsb
mov
xchg
mov
inc
cmp
sbb
out
mov
mov
insl
clc
xor
jno
dec
loopne
sahf
shlb
jnp
je
mov
dec
imul
hlt
adc
add
mov
sbb
xor
sbb
mov
adc
push
loope
imul
sbb
test
sbb
jge
lret
stos
mov
mov
sbb
outsb
push
sbb
adc
je
aaa
ss
mov
mov
jbe
add
ficomps
mov
add
aam
jno
int3
imull
loopne
adc
hlt
andl
adc
push
jl
jl
xor
loopne
xor
jbe
and
mov
outsb
jge
lcall
cwtl
xor
mov
mov
push
pop
mov
std
mov
xor
pop
popa
pusha
inc
sbb
leave
jns
insb
and
cltd
jns
sahf
jge
ljmp
adc
pop
xor
xchg
cmp
out
mov
test
push
test
push
xchg
xchg
add
das
push
lret
popf
aad
pusha
inc
or
icebp
outsl
fisttps
jae
imul
sub
lods
and
sub
push
cli
xor
xchg
ficoml
or
push
sbb
pusha
cmpl
cmpsb
dec
sub
and
out
fnsave
repz
cmp
push
int3
aaa
ss
mov
jnp
sahf
arpl
leave
mov
mul
ljmp
cmp
hlt
add
or
inc
push
add
insl
mov
ret
mov
ret
xchg
cld
mov
out
ljmp
cld
mov
push
xchg
jge
cs
jg
add
repz
cmpsl
add
cmp
fldenv
dec
icebp
mov
jno
mov
test
and
das
xor
push
sbb
sub
mov
mov
jle
jnp
sbbb
push
jmp
mov
jl
vpor
lcall
pop
pop
in
jp
js
or
mov
fwait
or
cmp
pop
out
stos
fidivrl
jne
ret
ss
out
pop
sbbl
stos
pop
fisubrl
xchg
ficoml
mov
sub
cs
add
ud0
inc
int3
icebp
fmull
imull
inc
push
arpl
stos
mov
push
sahf
jnp
sahf
divb
and
pop
sub
or
sbb
push
xor
stc
test
jp
pop
xor
mov
add
push
or
divb
mov
outsb
or
shll
xchg
sub
sub
dec
sarb
push
xor
das
or
mov
mov
lds
enter
call
movsl
scas
jg
sub
pop
in
push
rcrl
and
jo
insb
icebp
movsb
nop
popf
cmp
jns
icebp
test
sbb
push
scas
lcall
arpl
int
adc
mov
jg
pop
cmpl
mov
lcall
scas
dec
xor
mov
das
jbe
mov
call
out
test
mov
out
inc
std
movd
jge
xor
inc
lret
push
sti
mov
cs
icebp
jecxz
pop
mov
add
sbb
movsb
imul
add
lret
pop
jb
insb
push
sti
in
lods
pop
inc
scas
sbb
lods
fsubr
insl
ja
fimull
push
out
mov
and
adc
push
cmp
mov
lret
int
push
adc
cwtl
xor
nop
adc
aad
xchg
add
cld
push
test
add
jl
dec
ret
pop
aam
shrl
xchg
scas
cmp
nop
stos
rcll
mov
adc
rcrl
pop
mov
setns
lahf
push
and
cwtl
inc
inc
jns
enter
das
dec
xor
jmp
mov
in
cld
push
xchg
lcall
movsb
mov
int3
dec
or
or
sub
pop
pop
icebp
sub
or
push
loopne
xor
lcall
xchg
scas
jg
in
movsl
and
aam
cs
inc
test
fcmovbe
hlt
jnp
push
into
aad
popf
test
repz
rcll
adc
add
es
adc
fsubrs
pop
ja
xor
cmp
sbb
nop
outsl
pop
test
adc
outsl
and
mov
lods
and
subl
mov
je
adc
pusha
push
add
fbstp
lea
scas
loope
loopne
std
mov
mov
popl
and
enter
xchg
ret
dec
clc
imul
mov
sub
adc
xchg
push
clc
and
pop
lret
test
add
jns
mov
mov
inc
testl
jp
test
pop
sbb
xor
mov
mov
subb
and
push
enter
rorl
or
enter
mov
pop
cmp
sti
xorb
cs
imulb
pop
cmpsl
dec
je
jp
lea
scas
cmpb
test
rcrl
push
in
jp
roll
dec
add
adcb
push
das
inc
addr16
jmp
fwait
adc
out
xchg
icebp
mov
inc
inc
or
and
in
mov
jmp
and
sub
push
repnz
sahf
xchg
in
lods
mov
mov
pusha
push
cmpsl
sbb
loopne
mov
lods
in
push
xchg
push
pop
fnstcw
cmp
dec
out
cltd
xchg
jge
into
in
sub
or
xchg
xchg
push
inc
imul
rcrl
cmp
jbe
test
test
into
dec
pusha
xor
sarb
xchg
sbb
je
pop
pushf
lods
sub
out
in
daa
lret
mov
xor
lahf
jne
push
faddl
jb
fsubrl
scas
mov
dec
lret
inc
cmpl
and
mov
std
jae
int3
subb
push
mov
lods
cmpsl
jns
addr16
dec
pusha
sub
and
adc
sbb
and
inc
push
fwait
xchg
cwtl
enter
xor
es
std
fxch
lock
adc
jb
mov
rol
xor
inc
add
rcl
mov
popf
adc
xchg
imul
stos
xchg
inc
xchg
enter
sub
and
scas
sub
ss
adc
push
les
cli
inc
pop
fisttpll
jnp
pop
std
jo
pop
xchg
popf
and
pop
jae
mov
iret
scas
addr16
jnp
test
data16
mov
mov
jecxz
jle
xor
dec
repnz
sarb
scas
rcl
mov
inc
mov
inc
or
xor
lret
out
aaa
lds
js
xor
test
adc
popf
gs
lock
mov
jae
lds
inc
dec
in
sub
in
fadds
aam
cmp
rolb
in
in
mov
pushl
mov
popa
mov
and
fwait
outsl
sbb
xchg
into
cs
inc
xlat
mov
inc
popf
scas
adc
pop
jns
iret
pop
sub
clc
pushf
pop
mov
push
mov
repz
outsl
loope
mov
mov
sarb
mov
mov
daa
xchg
orl
sub
adc
cmp
aad
sbb
testl
lock
sbbl
and
je
ret
daa
jno
sarb
xchg
inc
clc
js
jno
popa
dec
and
inc
pop
push
mov
jb
and
sub
push
lret
mov
lea
ds
decl
sti
fs
mov
arpl
imul
js
test
fstl
mov
ljmp
jbe
pop
imulb
cmp
inc
lds
jnp
sub
lea
lds
movsb
das
fcmovbe
add
adc
sub
jno
mov
dec
test
scas
pop
inc
icebp
adc
daa
popa
dec
mov
or
xor
add
ss
xor
or
jge
arpl
sti
add
jb
pop
push
and
rcrl
imul
cmpsl
mov
pop
pop
mov
fs
imul
mov
pushf
cmp
jle
jecxz
add
ror
push
bound
or
popa
jmp
inc
and
mov
notb
pop
dec
subl
cmc
sub
and
dec
mov
insb
cmpsb
cltd
pop
dec
arpl
daa
test
xor
mov
xchg
mov
sub
js
test
int3
insb
mov
jmp
sbb
inc
xchg
xchg
mov
and
stos
in
jb
fwait
ds
rolb
bound
vprotd
mov
insb
repnz
xor
sbb
mov
bound
mov
and
aad
jp
out
push
sbbb
cli
mov
popa
dec
loop
in
testl
mov
mov
sbb
cmpsb
mov
sbb
dec
stos
test
mov
mov
cli
mov
and
mov
push
push
and
sub
nop
sub
mov
das
pop
jne
push
sbb
mov
push
lahf
hlt
loop
jle
jb
outsl
test
aam
cmp
adc
mov
ss
aas
pop
ss
orb
mov
aam
jg
xchg
movsb
das
xor
push
push
dec
les
sar
call
jle
mov
sarb
push
inc
sbb
cmc
ljmp
inc
cmp
cld
inc
cmpsl
aad
std
ja
out
shrl
test
fidivs
lcallw
push
dec
sti
outsl
jne
iret
mov
in
jb
mov
cmpsb
movb
sub
nop
cmpsb
jnp
dec
cltd
shr
lret
and
pop
and
push
sub
int
xor
jge
js
lods
jne
and
cwtl
mov
sub
imul
int3
sub
cld
rcrl
ds
push
and
das
mov
pop
xchg
jg
aad
jle,pn
pandn
dec
stos
aam
std
sub
xlat
push
sbb
sub
or
aas
inc
xor
imul
or
out
fistps
push
pop
cmpsw
mov
and
jnp
repz
outsl
jge
mov
sub
in
negb
sbb
insl
push
mov
xchg
out
insb
out
inc
iret
sub
mov
xor
cmp
bound
dec
int
xchg
fdivl
push
repz
xor
mov
repz
cmpsb
sbbb
xchg
inc
sub
fdiv
xchg
or
adc
jae
test
pop
cmpsb
or
or
shll
mov
adcl
pusha
inc
ret
mov
imul
int
cmp
or
mov
lea
lret
sbb
adc
sub
push
push
inc
lds
push
aaa
jnp
and
aaa
lret
lea
scas
and
repnz
popl
inc
add
cld
push
lock
jp
inc
jl
mov
jbe
test
subb
pop
push
scas
jbe,pt
test
fsts
js
add
loop
and
les
inc
jl
jb
add
paddsb
std
inc
pop
push
mov
aam
rcl
pop
adc
mov
imul
or
cltd
inc
repz
xchg
cwtl
and
pop
mov
insb
mov
xor
push
mov
xor
pushf
inc
inc
enter
sub
push
xor
jb
and
push
mov
aaa
lahf
test
xor
nop
sub
mov
xchg
fdiv
sbb
aaa
add
xchg
nop
iret
inc
int
imul
mov
bound
sti
mov
adc
mov
cmpsl
dec
push
xchg
and
outsl
test
or
insl
push
inc
adc
or
push
xorl
dec
cwtl
dec
insb
mov
into
rcrb
inc
jecxz
inc
js,pn
outsl
enter
or
push
adc
and
sbb
ret
notb
jnp
sahf
lahf
ja
ja
cli
jp
popf
inc
push
mov
out
mov
sbb
fs
cmp
and
add
push
dec
inc
fldenv
fiaddl
and
and
nop
mov
insb
inc
fisttps
xchg
mov
cmp
popf
idivl
loope
xor
push
xchg
lds
pop
mov
sub
xchg
dec
fisttps
iret
add
stos
sbb
jge
mov
clc
call
outsl
pushf
add
xchg
cmp
xchg
adc
mov
mov
fsubr
out
cmp
xor
shlb
in
sarb
inc
and
loopne
xor
add
dec
leave
dec
inc
jmp
and
jo
add
xchg
in
sub
dec
cmpsl
cmpsl
mov
xchg
loopne
adc
mov
cltd
xchg
sbb
pushf
iret
scas
cmp
xor
scas
gs
inc
cmc
je
imul
jbe
add
jb
loop
jnp
pop
mov
adc
loopne
push
adc
xchg
xor
dec
mov
or
jne
std
cltd
cmp
push
adc
push
jnp
jmp
inc
out
add
xchg
icebp
jle
xchg
hlt
ret
sub
mov
jae
mov
cmpsb
pushf
aad
negb
adc
jle
test
jns
stc
dec
lret
xchg
add
jae
adc
dec
repz
outsl
xchg
ss
stc
inc
shrb
xor
cmp
adc
int
or
dec
lock
or
ret
or
stos
dec
test
jo
push
test
sahf
fmuls
cmp
jno
push
imul
cwtl
ret
mov
das
mov
adc
or
push
jg
sbb
notl
ret
cli
jmp
pop
mov
arpl
dec
pop
ficoms
mov
push
int3
mov
test
jg
adc
jge
push
jl
imul
mov
mov
ja
stos
mov
push
mov
imul
mov
in
push
pop
cs
mov
shrl
stc
adc
pop
das
mov
sbb
sti
ret
dec
fs
cmp
xchg
sbb
mov
jo
push
int3
lahf
std
ret
or
mov
inc
and
pop
sub
test
aam
add
clc
iret
or
xor
add
movsb
daa
xor
xor
sti
stos
movlps
repnz
mov
xor
cltd
les
insl
test
lods
fcomps
sbb
push
fldenv
dec
aas
les
mov
clc
mov
jo
aam
mov
adc
push
xchg
pop
or
jg
lret
push
adc
mov
mov
lcall
xlat
mov
stos
pop
sub
push
clc
clc
fildl
cmp
pusha
mov
jge
inc
das
pop
lea
mov
jg
xchg
fs
mov
aaa
loopne
js
inc
push
xor
pop
in
sub
jmp
sbb
xchg
lahf
sbb
cwtl
cmp
daa
push
scas
adc
test
call
daa
jo
and
insb
rcr
dec
outsl
mov
push
xchg
jmp
inc
xchg
fsubrs
das
mov
lahf
sbb
data16
sbb
sub
movsl
add
mov
adc
sub
inc
xchg
push
mov
cwtl
add
pushl
pop
in
push
cmp
inc
lea
ficompl
add
ja
cld
mov
in
scas
hlt
lret
insl
jae
pop
daa
mov
pusha
inc
xchg
ljmp
xor
add
and
test
or
loope
mov
lock
sti
fnstsw
inc
push
pop
cmpsl
out
jmp
dec
repnz
inc
mov
in
add
pop
lods
aam
lods
inc
mov
dec
rcrb
dec
stos
cmp
bound
sarb
leave
nop
sub
scas
pop
sbb
inc
out
xor
mov
lds
fsubrl
inc
jg
mov
adc
inc
inc
inc
movsl
js
sub
jne
insb
jge
sub
xchg
mov
xchg
insb
scas
inc
add
sub
mov
cld
cwtl
ljmp
mov
outsl
inc
sbb
inc
fidivl
popa
sbb
mov
lea
repnz
std
ss
push
in
idivl
jo
lods
in
cmpsb
jbe
mov
pop
pop
sub
decb
xchg
dec
push
jae
dec
gs
sbb
scas
mov
and
push
mov
loopne
pop
scas
mov
shll
in
ret
fcmovnu
xor
push
pop
sbb
hlt
scas
test
push
fldt
xchg
jns
sub
imul
js
daa
xchg
hlt
data16
jne
cmpsb
jno
dec
movsl
cli
out
scas
xchg
mov
shrl
jbe
inc
lds
xchg
push
adc
xchg
call
ss
repz
out
iret
pop
lock
cmpsl
pop
pop
jg
divb
cwtl
cmp
sbb
adc
ret
iret
mov
jle
clc
jno
push
bound
ljmp
mov
dec
jecxz
fisttps
or
popa
ret
inc
jg
xor
and
daa
push
sub
cmpsl
cmp
mov
mov
jb
or
cmp
nop
ljmp
cwtl
js
jnp
fcoml
ss
fldcw
xchg
jnp
shll
sub
push
push
aaa
jbe
iret
scas
xlat
pusha
fisubs
add
shrb
inc
scas
mov
std
mov
out
jne
cld
ja
inc
sub
les
sti
add
jne
push
pop
enter
xchg
enter
xor
add
pop
jle
fidivl
inc
pop
push
notb
mov
xlat
int
es
movsb
test
imul
mov
in
xchg
repz
sbb
lds
arpl
pusha
dec
leave
pop
fisttpll
leave
stc
out
fwait
daa
jle
loope
in
idivl
xchg
shr
stos
loopne
scas
mov
inc
sbb
cmc
loop
jle
xor
dec
fisttps
aad
sub
add
push
dec
fs
loopne
out
sbb
jbe
fadd
xchg
fcomps
sub
test
popf
mov
inc
mov
imul
mov
filds
mov
stos
mov
pop
mov
push
pop
dec
jo
nop
push
push
pushf
or
les
cld
cmp
out
jl
pop
int3
push
inc
mov
mov
jnp
xchg
jbe
xor
clc
mov
cmp
mov
cmp
mov
xchg
push
ds
inc
insl
rolb
sub
ljmp
sub
repz
lds
xlat
fs
pushf
ljmp
jne
iret
cmc
loop
jae
mov
adc
insl
jle
jno
xchg
scas
ficompl
pushl
int3
adc
xchg
movsb
dec
pop
xchg
pop
dec
popf
jle
mov
push
lcall
lds
and
cmp
jae
ret
push
mov
scas
int
xchg
jb
shl
inc
loope
inc
and
pop
sbb
mov
rcll
jo
cmp
xchg
adc
mov
test
jl
jo
or
in
cltd
data16
xchg
loope
in
cmpsl
and
movsb
enter
pop
xchg
fmuls
mov
mov
repnz
pop
mov
lahf
jl
fadds
xchg
shrl
lock
ss
stos
push
out
test
jnp
fnstcw
je
cmp
ds
hlt
aad
xchg
bound
loop
cmpsl
and
ficoml
jge
mov
ja
xor
adc
movsb
add
gs
lcall
inc
xor
scas
cmp
ja
mov
stc
insl
int
xchg
fcmovnbe
pop
xor
sbb
and
push
jnp
arpl
imul
adc
and
adc
aam
in
dec
in
out
addr16
stos
cmp
mov
std
mov
mov
lods
inc
push
push
dec
or
mov
inc
jle
and
jg
pop
leave
lock
fimull
lods
sub
xor
jmp
aaa
ja
sub
mov
and
jne
std
cmp
jl
arpl
stos
or
mov
mov
enter
jno
cli
lret
or
xchg
iret
dec
pop
rcr
leave
arpl
leave
adc
xorl
arpl
lea
lea
push
ret
add
dec
cld
jae
stos
pop
popa
xchg
jns
aas
nop
bound
lds
xor
or
in
pop
and
xchg
sbb
jns
lock
aaa
pop
into
pop
fcoms
or
xor
mov
and
lret
push
dec
sub
cwtl
daa
mov
cmp
dec
sbb
push
jecxz
pop
js
xlat
repnz
push
jmp
jne
loope
fldt
test
sub
jecxz
push
lahf
stos
mov
fdivl
mov
push
in
inc
int
jo
mov
cmp
mov
dec
enter
jnp
jns
into
in
data16
push
mov
add
nop
xchg
jecxz
sub
pop
sub
leave
pushf
cs
test
cwtl
out
arpl
enter
mov
in
sbb
push
loope
fs
push
bound
pop
dec
addr16
ljmp
mov
jae
or
and
mov
fdivl
rclb
or
test
or
adc
mov
mov
sahf
std
cmp
and
jge
int
pop
mov
jne
test
aad
xchg
push
ljmp
sarb
scas
mov
xchg
sub
inc
adc
lret
test
in
add
jle
mov
scas
mov
shl
in
lods
daa
mov
mov
out
pop
je
bnd
adc
aas
xor
jmp
popf
mov
rcll
inc
or
sbb
es
sub
xchg
sbb
jb
into
sarb
push
sbb
rcrb
mov
push
lods
cli
push
dec
or
adc
sbb
add
mov
daa
pop
pop
jl
cmp
cli
ljmp
shll
daa
pop
iret
ss
lock
insb
jae
shll
and
sub
mov
mov
jbe
loop
pop
fnstenv
jbe
inc
mov
lods
and
push
sbb
addb
loopne
mov
cmp
sbb
jmp
aad
icebp
jg
rcr
push
push
sub
or
dec
push
xchg
test
mov
mov
lahf
mov
cli
fcoms
or
mov
ljmp
pop
xchg
div
mov
add
scas
mov
jmp
ret
clc
or
or
popf
mov
add
jecxz
inc
and
js
jb
jmp
adc
rcl
sub
pop
xchg
lcall
icebp
out
inc
add
call
lahf
mov
test
push
mov
pop
sbb
imul
push
pop
loopne
fstps
xchg
push
xchg
insl
out
aam
mov
mov
mov
push
out
push
insb
jbe
dec
sbb
rorb
jo
pop
mov
shrb
aam
lock
xor
mov
mov
call
adc
mov
fimull
add
push
loopne
fldenv
jl
sbb
test
push
repz
xlat
enter
mov
testb
add
iret
sub
or
int3
clc
xchg
xchg
and
xchg
stos
push
mov
jb
lahf
in
stos
mov
icebp
push
push
sub
jecxz
xor
mov
outsl
xchg
daa
punpcklwd
popf
fwait
mov
pop
push
mov
push
call
inc
aaa
push
insl
sub
scas
js
ret
test
cmp
jne
jno
outsl
clc
stos
xor
repz
loope
hlt
mov
mov
loop
cmpsb
push
push
jbe
push
dec
and
out
int
notl
dec
mov
gs
jae
push
mov
jb
cmp
inc
sbb
mov
icebp
sbb
and
es
cmpsl
sub
mov
jle
pop
mov
out
or
arpl
adc
int
jge,pt
aaa
dec
mov
dec
fs
mov
mov
stos
push
cmpsb
pop
dec
icebp
xlat
es
inc
out
inc
add
addl
int3
js
outsl
cmp
loopne
jl
xor
mov
jae
sub
ret
stos
outsb
xor
cmp
push
and
out
push
pop
stc
cmpsb
mov
aad
cmp
pop
popf
or
dec
push
mov
and
xor
mov
jnp
adc
jg
gs
mov
jge
sbb
loopne
insl
add
or
push
aaa
xchg
fsubr
out
push
lods
and
aas
inc
or
sub
iret
pop
imul
popa
lock
sub
and
jg
imul
inc
dec
int
mov
sub
pushl
mov
scas
cwtl
flds
sbb
xchg
mov
into
movsb
mov
lock
pop
sub
in
dec
lcall
jb
pushl
sbb
inc
mov
hlt
xchg
movsb
cld
pop
dec
in
pop
jp
js
mov
xor
es
aas
xlat
mov
ret
pushl
ljmp
push
mov
push
xchg
lret
push
incl
addr16
in
test
mov
adc
rolb
aad
out
mov
sbb
je
or
push
pop
sar
nop
mov
pop
pop
ss
cli
popa
mov
add
push
pop
cmp
aaa
loop
andl
mov
aas
jp
pop
jbe
cmp
pushl
sub
test
lods
jp
aas
or
and
stos
roll
mov
xor
aaa
xor
dec
pop
xchg
pop
add
jnp
int3
add
adc
sub
paddd
daa
ret
push
xor
popf
sub
dec
sub
in
in
xor
and
lods
xchg
mov
mov
jmp
int3
mov
loopne
mov
jmp
pop
mov
enter
mov
iret
lea
pop
dec
test
into
in
add
shrb
fists
push
mov
mov
pop
xor
xor
add
or
sbb
cmpl
pop
cmpsl
cmp
cmpsl
mov
lret
inc
push
repnz
adc
out
jmp
jbe
ja
data16
xor
dec
dec
test
dec
loope
gs
sbb
stos
loop
mov
mov
pop
in
add
stc
push
mov
jne
pop
cmp
into
push
pop
lret
test
xor
mov
mov
xchg
sti
xor
rcrb
push
popa
and
inc
or
cmp
mov
fnstsw
jg
push
test
ret
cs
push
dec
add
xchg
stc
test
add
mov
and
lret
xorl
sbb
dec
testb
mov
adc
bound
into
add
cmp
pop
rorl
cmp
or
mov
fisubrl
inc
pop
and
mov
hlt
aad
sti
stos
cld
cmpsl
daa
lock
sahf
movsb
ds
inc
dec
inc
repnz
nop
push
sub
fldenv
mov
andl
xor
xchg
stos
lods
xchg
cs
cmp
insl
andb
test
lcall
adc
push
or
pop
push
sub
cmc
pop
rolb
jp
ss
test
xor
test
sarl
xchg
out
xchg
sbb
pop
pusha
fs
or
jmp
add
nop
mov
in
push
mov
sahf
xchg
fisttpll
test
dec
shl
shlb
xorb
jl
jle
xchg
enter
xchg
mov
sbbl
enter
call
sub
or
mov
and
sbb
fldcw
ja
jb
movsb
out
fmuls
hlt
into
mov
pop
fucomi
imul
xor
aaa
add
xor
cmpsl
mov
mov
in
or
pop
push
mov
add
and
dec
sub
gs
jmp
fadds
jne
mov
inc
mov
mov
or
repz
hlt
fmull
pushw
inc
scas
pusha
loop
repnz
ret
rorb
xchg
dec
rcrb
or
out
xor
orl
xlat
jl
pop
and
or
call
add
scas
inc
in
xor
dec
bound
pop
jnp
je
lock
enter
push
cli
cmpsl
sub
jg
xor
stos
mov
and
push
push
inc
mov
ret
mov
xorb
rcl
iret
in
sbb
lahf
aam
pusha
subl
dec
sbb
inc
and
loopne
mov
sub
popf
xchg
jne
pusha
ret
mov
or
mov
data16
inc
das
mov
les
add
sub
jp
sub
lea
mov
sub
sub
mov
or
arpl
pop
out
mov
aam
dec
pop
jp
popa
imul
push
lock
fsubs
dec
dec
scas
xor
cld
or
xchg
psrlq
jecxz
scas
test
ret
adc
cltd
jge
jmp
into
in
rclw
lock
pop
mov
pop
xor
scas
mov
push
insb
lods
cmpsb
push
hlt
mov
and
mov
lahf
loope
inc
aam
push
jne
ret
stc
and
pop
lret
and
scas
int3
sub
mov
sub
mov
movb
xchg
pusha
orl
xor
mov
pop
lahf
scas
in
cmp
inc
sarb
dec
rclb
adc
pusha
test
jmp
jbe
mov
lock
mov
lds
sub
in
or
or
dec
stos
mov
inc
aaa
mov
aaa
push
push
addr16
mov
icebp
int
aad
push
cwtl
outsb
imul
sub
mov
out
adc
imul
pop
pop
cmpb
movl
add
cmpb
sar
xor
sbb
push
popa
adc
out
shrl
aas
xchg
insb
ljmp
cmpsb
stc
rcrb
std
sbb
xchg
aam
fs
ljmp
jne
mov
decb
fildl
pop
or
lock
lods
aad
punpckldq
dec
sbbl
pop
push
sub
bound
lds
mov
mov
sahf
pop
sbb
cmc
jecxz
lock
mov
sbb
pop
xorl
movsl
and
div
or
ljmp
cli
movsb
scas
cmp
cmp
mov
insb
stc
loop
pop
clc
push
pop
cmp
adc
push
sub
jecxz
xchg
pushf
or
xorl
adc
ret
scas
scas
hlt
jle
xchg
push
outsb
fildl
inc
xchg
push
xor
adc
or
rcr
mov
mov
jno
gs
cli
loop
stos
mov
es
std
imull
mov
cmp
les
fsubl
pop
cmp
push
pop
mov
test
xchg
addr16
fisubrs
insb
outsb
test
inc
incb
bound
stc
test
fistps
mov
popa
scas
in
lcall
std
ret
sahf
sbb
xchg
mov
arpl
adc
jecxz
fisttpll
cmpsl
decb
stos
dec
int
dec
xchg
dec
out
aaa
pusha
pop
ss
push
add
in
or
test
out
xor
adc
xor
addr16
push
mov
rcrl
sbb
cmp
out
loope
jnp
dec
cmp
loope
cmpsb
jmp
sub
repnz
cmpsl
add
xchg
jle
push
jg
test
mov
add
sarl
sbbb
xchg
sbb
mov
dec
leave
xor
lret
sahf
jae
xchg
sahf
pop
add
mov
xchg
shl
ljmp
and
mov
jmp
jns
sub
test
pop
in
mov
ret
out
cli
and
iret
lods
fcmove
daa
jmp
push
sahf
stc
pop
pushf
mov
cmp
clc
test
jmp
pop
dec
fwait
pop
jge
pop
jmp
flds
add
into
and
aaa
sub
pusha
sub
jp
int3
pop
stc
sbb
mov
jl
jae
mov
adc
mov
ljmp
add
mov
clc
xchg
cli
xchg
xchg
and
test
adc
mov
cmpsb
lock
imul
xor
aad
or
out
stos
int
jno
mov
xor
test
xor
mov
jl
jne
xor
call
mov
lret
dec
sub
pop
pop
iret
or
xchg
xor
cmp
jnp
jle
pop
add
pop
in
mov
push
cmc
icebp
jb
pop
lret
jne
fdivr
and
scas
scas
sbb
add
sbb
stos
fcoms
jnp
fmull
push
aad
xchg
test
push
sub
ss
mov
mov
mov
scas
mulb
cld
ja
sub
dec
stc
mov
mov
cmp
loopne
repz
pop
jae
cmc
in
ffreep
xor
testl
outsb
xlat
mov
and
les
dec
scas
add
aas
dec
inc
mov
jge
loopne
lea
in
sbb
outsb
out
hlt
fsubl
cmp
xorb
mov
jp
xchg
xor
mov
out
pop
push
fmuls
arpl
adc
leave
lock
lods
and
nop
sbb
outsb
jno
xor
cld
sbbl
mov
and
lret
cmp
jmp
subb
cmc
imul
das
into
sahf
lcall
stc
jno
adc
jl
or
lcall
sbb
add
stc
aas
mov
xor
and
jne
out
ret
jno
loope
and
mov
lahf
add
fldcw
adc
sbbl
or
jo
js
sbb
mov
inc
daa
sub
call
nop
adc
in
iret
jb
pop
push
test
ret
out
xchg
js
adc
jecxz
loope
rorb
xorl
xchg
cld
ret
fisubrs
out
jns
lock
ss
aad
outsl
andb
or
popa
push
push
xlat
cltd
sub
dec
leave
jge
test
shll
js
or
add
push
inc
or
aaa
sbb
adc
jp
lea
pop
ja
insl
fwait
inc
jg
adc
inc
push
movb
mov
sub
insl
ss
cmp
dec
int
into
push
push
lea
mov
ja
negb
lahf
movsl
lret
ja
pop
adc
cmp
dec
xchg
stc
insl
and
jb
or
sbb
mov
mov
or
inc
test
js
imul
sub
jmp
bound
cli
and
xchg
inc
dec
iret
rol
lods
or
fistps
fisubs
adc
mov
out
or
movsb
push
sub
and
mov
fwait
add
cmp
pop
arpl
movw
lahf
aas
stos
sarl
clc
mov
pop
jne
jg
push
xchg
call
sarl
movsb
mov
and
dec
cld
sarl
lahf
add
andb
dec
lds
das
leave
stc
dec
cmpsl
inc
rcrb
mov
mov
imul
arpl
mov
jge
pop
mov
mov
mov
and
sahf
leave
lahf
hlt
dec
dec
icebp
lret
sbb
aas
nop
mov
test
push
dec
jl
cmp
cli
adc
scas
push
xchg
cli
add
out
jp
clc
mov
pushf
arpl
sub
pop
cwtl
adc
ret
ja
push
cwtl
sbb
mov
int
test
inc
xor
jne
nop
cwtl
xor
pop
cs
jl
lock
pop
mov
xchg
jae
sub
icebp
outsl
fsubrp
outsl
fldln2
xlat
pop
add
jae
rcll
or
jnp
fcmovnb
jl
idivb
test
xchg
ret
dec
imul
pop
mov
inc
lods
or
xchg
mov
mov
mov
insb
pop
mov
inc
and
push
mov
xor
push
dec
inc
imul
lret
lock
fdivl
dec
dec
push
pop
insb
popa
mov
cmp
mov
mov
jae
mov
fsubrl
inc
or
cli
dec
outsl
push
out
pop
outsb
shl
mov
add
adc
inc
xlat
cmpsb
jp
adc
mov
mov
loopne
mov
dec
adc
jbe
into
xchg
stos
cmp
xchg
sti
xor
jb
orb
popa
jmp
lods
mov
rolb
dec
int3
cld
cltd
sbb
push
pop
mov
xor
push
jb
xor
rcll
pop
mov
addr16
xchg
movsb
movsl
out
movsb
jp
inc
mov
rcrl
ret
cmpsl
cmpsl
xchg
push
jmp
stos
xor
rorb
aad
jno
arpl
mov
test
push
loope
lods
pop
pop
hlt
sbb
mov
jae
data16
push
xchg
flds
sub
push
popf
ret
pop
mov
fsubr
push
cld
pop
dec
and
out
ficoml
out
lahf
dec
sti
mov
repz
and
pop
mov
ret
fwait
dec
int
enter
dec
popf
pushl
stos
jno
std
je
bound
inc
les
sti
in
cmp
adcl
xchg
icebp
aas
hlt
insl
xor
mov
lea
or
sbb
mov
test
arpl
mov
lods
inc
pop
cmc
fbstp
shll
and
xor
out
pop
iret
or
pop
lods
sahf
lcall
aam
dec
cltd
mov
pop
rcll
dec
daa
mov
call
pop
repnz
push
xor
orl
mov
push
xchg
hlt
addr16
pop
mov
inc
jns
shrb
mov
adc
fdivs
clc
icebp
push
jmp
cmp
ficomps
mov
xor
sbb
call
jb
cmc
repnz
mov
push
push
inc
push
movl
sbb
arpl
out
ljmp
cwtl
mov
and
test
lea
mov
sarl
push
or
pushf
and
cmpsl
lret
jnp
mov
sbb
and
in
add
icebp
out
outsl
lret
and
push
jmp
enter
aad
arpl
das
sbb
pushf
inc
push
shll
or
push
movsl
lds
aam
sbb
enter
xchg
mov
clc
ficomps
dec
jmp
jno
jnp
mov
je
sti
jno
popa
xchg
sbb
inc
shlb
fcoms
hlt
sub
jo
icebp
lcall
pop
push
cmp
fadd
jecxz
bound
clc
aaa
ja
out
jo
das
adc
shrb
push
fdivp
mov
xchg
push
jp
xchg
xchg
movsb
movsl
inc
addr16
lock
pop
xchg
lock
pop
aad
push
mov
jo
adc
push
jae
scas
xor
jmp
push
add
imul
jbe
add
jno
lds
cld
jmp
stos
imul
data16
mov
mov
cmp
xlat
mov
cli
testb
sub
adc
lds
push
jbe
xchg
fdivs
xchg
cltd
daa
popf
aam
cld
cld
push
popf
jecxz
pcmpgtb
mov
loopne
mov
bound
sub
cmc
lret
jp
mov
jne
xchg
test
stc
aaa
push
inc
dec
inc
sub
mov
shlb
push
sub
js
dec
and
movsb
leave
lods
mov
into
or
pop
or
lds
sub
popa
stos
xor
mov
dec
push
jmp
dec
sbb
jge
xchg
scas
push
and
fisttps
lods
inc
in
inc
dec
insl
shlb
xchg
add
test
std
divb
pusha
mov
iret
xchg
mov
cmp
pop
jbe
pop
pop
orb
out
cwtl
mov
and
aad
mov
lahf
sub
add
addr16
int3
jno
mov
cmc
in
movsb
es
ljmp
iret
notb
mov
pop
jmp
xchg
mov
addr16
and
es
adcl
gs
cli
call
xchg
lock
xor
rcl
xchg
adc
hlt
icebp
fdivs
cmova
fistpll
sarl
jne
adc
and
push
cli
push
hlt
rcr
push
dec
shlb
aaa
outsl
pop
jne
push
or
lahf
cmp
pusha
push
xchg
pop
push
pop
test
orl
sub
push
mov
or
inc
dec
movsl
mov
scas
std
or
xchg
and
adc
popa
push
sbb
xor
pushf
pop
insl
pop
or
loope
les
mov
data16
lea
insl
add
fmull
rcll
ja
adc
push
xchg
test
loope
or
cmp
repz
pandn
cmpsb
xor
cmp
movsb
cmpl
sbb
movsl
js
push
inc
mov
aaa
sbb
aad
push
mov
cltd
int
jne
xor
es
add
xor
jnp
ljmp
push
daa
in
fisubrs
dec
or
int
xor
adc
lods
bound
in
mov
faddp
xor
dec
mov
push
mov
nop
lods
cmp
out
sti
cmp
mov
flds
lea
iret
mov
push
fisttpl
mov
std
cmpsl
ss
jge
mov
lahf
xor
mov
push
mov
jbe
and
pop
fwait
cli
mov
xchg
sub
xor
scas
scas
roll
pop
in
jl
jnp
mov
pusha
add
adc
rcrl
and
mov
pop
ret
ss
inc
hlt
sbb
sahf
fnstenv
pop
fisttpll
xchg
fucomip
pusha
dec
sbb
jae
adc
add
in
xor
mov
push
add
dec
out
cwtl
cmp
popf
push
add
mov
push
push
push
and
cs
stos
test
push
or
shll
pop
xchg
pop
shrl
fwait
and
insl
push
sub
cmp
idivb
pop
cli
out
mov
jne
stos
lret
mov
adc
fldt
out
dec
test
pop
add
mov
aam
mov
call
jg
maxps
cwtl
xor
aad
aaa
popa
and
adc
enter
sbb
dec
ret
lret
aaa
cwtl
pop
sbb
lock
cmp
mov
or
out
cld
rol
mov
mov
lret
mov
pop
hlt
mov
or
cmp
out
add
lahf
xchg
mov
hlt
jp
js
jle
data16
lds
das
ficompl
push
loopne
lods
in
lods
and
cmpl
or
insl
pushf
adc
pop
mov
rolb
and
int
imul
jl
lret
test
fstps
ret
lret
xchg
pop
xchg
sub
loop
jae
push
int
sbb
cmc
xchg
mov
push
sahf
in
out
das
cld
sub
xor
arpl
lret
push
inc
dec
lods
mov
ds
xchg
mov
mov
fimull
mov
push
inc
xchg
push
scas
pop
push
ja
xchg
cltd
lds
xor
jmp
xchg
cmpsb
movsb
icebp
xor
movsl
lcall
inc
sbb
loope
mov
xchg
adc
xchg
push
shl
into
adc
jns
pop
out
and
push
das
mov
out
xor
arpl
xchg
xchg
lret
pop
pop
mov
pop
push
pusha
sbb
imul
adc
in
xchg
rorl
das
aas
or
push
cmp
loop
js
inc
and
and
pop
pop
inc
rol
mov
movsl
js
mov
adc
inc
jb
loope
xchg
or
adc
mov
mov
outsb
movsb
mov
jb
lret
mov
incl
mov
out
push
addr16
in
lcall
test
pop
hlt
mov
insl
xchg
lods
subb
subb
inc
stc
inc
stos
jle
scas
and
loop
pop
out
ret
cmc
push
inc
sbb
push
dec
mov
shll
stc
movhlps
int
fstl
outsb
out
fimuls
push
fnclex
in
xor
and
fcoms
inc
rcl
or
push
xor
cmp
sbb
cmpsb
imul
mov
or
xor
pop
in
xor
sbb
dec
add
popf
mov
xchg
push
lea
push
sbb
dec
xchg
loopne
inc
cmp
fs
xchg
rol
subl
outsb
ljmp
mov
addr16
jae
loop
mov
adc
js
sti
and
pushf
sarl
sub
push
add
divl
or
mov
push
dec
pop
shlb
jmp
clc
xor
add
call
mov
dec
sbb
push
sahf
adc
add
repnz
mov
cs
loope
lret
leave
ss
lock
add
xor
insl
je
inc
aas
movsb
mov
cs
adc
jg
testb
fs
mov
stos
sbb
movsb
adc
cmpsb
in
cltd
cmp
xor
and
cmp
and
xchg
cmpb
inc
inc
dec
jno
mov
pop
mov
pop
pop
push
int
add
pop
add
mov
sbb
xchg
mov
iret
stc
mov
xor
call
mov
sbb
lret
adc
inc
popf
add
in
push
xlat
sbb
ret
sbb
push
aas
jmp
sub
je
dec
push
jnp
rclb
xor
lret
rolb
in
ds
sti
cmp
or
adcb
stos
loopne
in
movsb
mov
fadds
pop
into
jne
and
outsb
loop
cltd
push
inc
ss
call
adc
sbb
fisubrs
mov
int
hlt
out
push
cltd
sbb
aad
pop
test
pusha
add
fstps
mov
int
stc
inc
adc
push
rol
mov
cmp
mov
mov
into
add
mov
fsubs
dec
inc
xor
mov
pop
xchg
add
sub
mov
push
movsb
xlat
andl
jmp
inc
les
jae
push
mov
xor
xchg
and
subl
ret
jmp
hlt
clc
iret
sahf
into
cltd
cmp
into
shrb
movlhps
xor
cs
divb
mov
xchg
pop
inc
call
cmp
dec
sbb
sub
mov
dec
pop
dec
int3
sbb
sbb
enter
cmc
sub
push
dec
pop
push
mov
push
daa
in
in
popf
cmc
bound
jbe
ficomps
mov
jmp
xchg
flds
shlb
inc
in
fnstenv
jmp
mov
fsubl
jg
jne
cmpsb
pop
jle
adc
je
push
sti
outsb
xchg
pop
lock
rcl
in
sbbb
out
lock
testl
test
adc
ja
mov
scas
adc
je
adc
insb
pop
imul
jge
das
jecxz
sahf
adc
add
shlb
aaa
sub
add
inc
or
push
in
call
push
shl
mov
mov
sub
dec
and
pop
sbb
fs
xchg
outsl
xor
lea
or
dec
imul
cmp
movsl
loop
and
inc
sahf
pop
xor
pop
push
test
out
xchg
mov
push
outsb
mov
leave
dec
out
mov
inc
cld
pushf
jg
mov
push
cld
sar
out
cld
add
mov
test
mov
jb
lcall
daa
cmpsl
mov
xlat
aaa
xor
mov
add
cmc
incl
sub
mov
je
add
pop
test
jnp
repz
pop
rorb
jg
and
stos
or
pop
les
cmc
movsl
and
jnp
xor
xchg
push
inc
sahf
jmp
sbb
call
pushf
ja
orl
jae
xlat
imul
sbb
int
jmp
mov
cli
hlt
sbb
js
pop
lcall
aad
cmpl
movsb
rcll
pop
out
out
test
inc
test
mov
inc
mov
dec
mov
data16
or
xchg
movsb
cltd
jl
orb
push
fidivrs
daa
lock
lods
shll
in
and
push
icebp
movsb
sarl
les
sub
je
inc
xorl
mov
scas
jl
fimull
scas
imul
arpl
mov
jo
negl
lods
imul
jae
push
push
or
scas
xchg
aas
fwait
sub
pop
in
jmp
frndint
mov
in
lahf
push
push
ret
inc
jecxz
adc
nop
lahf
or
dec
sarl
adc
stos
call
dec
cmp
mov
jg
mov
xor
ja
sbb
scas
sbb
xchg
jbe
repz
mov
and
xchg
sub
rorb
lret
cmp
cmp
lods
pop
cmp
mov
in
clc
ja
mov
out
pop
fcoml
pushf
in
cwtl
pop
fstpt
mov
hlt
inc
lcall
loope
cmp
cwtl
dec
icebp
data16
outsl
inc
jno
mov
xor
or
and
mov
sbb
hlt
adc
fcmove
scas
adc
stos
js
or
out
mov
and
outsl
cli
stc
pop
push
aaa
loop
leave
mov
cmp
fdivr
popa
and
movsl
call
push
mov
xor
jo
push
cmpsb
mov
ficoml
lret
pop
xchg
shl
sbb
jp
jnp
jb
mov
and
adc
lret
push
cmp
jne
jg
and
and
dec
or
cmpsb
movsb
loop
mov
inc
sbb
mov
mov
test
push
testl
lret
inc
lds
jg
push
or
dec
pop
or
mov
ficoms
sub
push
sbb
mov
push
pop
push
mov
call
add
push
loopne
fwait
lret
push
push
sub
popa
inc
push
leave
lcall
sbb
addr16
jp
jecxz
pop
data16
or
lcall
dec
popa
repnz
and
ret
aam
pop
push
das
outsl
sti
add
lret
sbb
xchg
mov
pop
sbb
test
xchg
pusha
clc
cs
xchg
enter
in
in
pop
ds
mov
cmpsb
cmpsb
inc
xchg
jge
je
mov
add
shl
jmp
dec
xchg
je
or
fisubs
stos
stos
insl
rcr
movsb
addr16
mov
pop
jb
dec
imul
cmp
sbb
add
rcll
push
pop
cli
xchg
decb
jo
into
stos
cmp
mov
adc
shrl
shlb
push
mov
and
sbb
and
cli
fldt
addr16
in
cli
pop
lods
cld
in
mov
push
xor
add
push
jnp
scas
dec
subb
mov
mov
pop
mov
jge
xor
xor
repnz
push
popa
cmpsb
jne
icebp
rol
sub
rorb
leave
and
inc
add
mov
and
jne
inc
stc
and
xor
or
sub
cmp
mov
das
xchg
mov
in
insb
mov
mov
and
dec
sahf
xor
lods
and
movsb
xchg
mov
shrl
xchg
clc
sti
push
jle
add
stos
fwait
push
arpl
xor
adc
mov
jns
xchg
mov
or
stos
mov
mov
stos
xchg
pop
pop
inc
nop
mov
roll
daa
loop
inc
xchg
dec
sbb
mov
mov
xor
adc
xchg
dec
inc
pop
xchg
fstpt
cmpsl
add
hlt
ret
pop
aaa
xlat
test
or
sbb
jns
pop
pop
xchg
negb
leave
mov
lahf
enter
jne
adc
xor
mov
popf
in
cltd
or
mov
jmp
outsb
sbb
aaa
dec
ljmp
push
daa
jb
dec
mov
add
and
fists
icebp
out
or
mov
pop
sbb
das
out
push
sbb
jmp
lahf
jge
stc
add
sub
iret
ss
lcall
cwtl
ss
lret
cmc
outsb
iret
mov
jo
sub
fwait
inc
jecxz
xchg
outsl
pop
xchg
cmp
bound
call
insb
add
sub
lods
mov
sbb
mov
filds
fcmove
xor
das
pop
inc
push
or
mov
xchg
mov
cmp
outsb
aaa
add
inc
imul
sbb
test
out
push
dec
cli
xchg
jns
adcl
scas
mov
in
and
jp
sub
enter
mov
sub
pop
xor
xchg
inc
loope
xor
xchg
icebp
jmp
adc
idivb
dec
nop
add
jne
add
imul
rorb
xorb
pop
mov
fisubrs
push
lock
imul
fdivs
inc
inc
aad
and
test
or
adcl
mov
dec
sti
push
mov
xchg
or
popf
sub
push
cmc
cmp
test
lea
nop
sbb
xor
or
mov
cmp
xor
push
xchg
fisubrs
leave
in
outsb
sarl
test
ret
dec
dec
shrb
dec
cmp
aam
faddl
pop
mov
adc
xchg
mov
fwait
push
std
mov
and
mov
gs
jnp
mov
pop
cmpb
jne
push
ret
sub
mov
notl
or
dec
sbb
xchg
hlt
lea
flds
fwait
aas
cltd
and
pop
nop
imul
sbb
pop
mov
adc
cmp
and
addb
inc
pop
aam
clc
xor
pop
push
cmpsb
in
mov
xor
dec
js
insb
mov
jnp
adc
insl
mov
mov
call
int3
jnp
mov
clc
popa
xchg
xchg
dec
add
gs
addl
push
jb
test
cwtl
incl
enter
idivb
jb
sub
dec
add
fists
std
xchg
cmp
outsb
cld
xchg
das
dec
fwait
or
shll
loope
dec
scas
aas
mov
mov
loopne
xchg
lret
or
mov
rorb
out
or
outsb
or
push
and
scas
loopne
in
ret
adc
xchg
cli
adc
inc
ret
adcl
adc
push
test
mov
test
bound
mov
mov
push
roll
popf
and
cmpsl
pushf
jo
dec
sbb
gs
and
data16
add
pop
rolb
data16
push
jl
leave
ja
fnstsw
mov
or
sub
lea
lret
push
jmp
xchg
int
loope
lds
push
cmpsb
jnp
enter
adc
popa
xorl
incl
mov
mov
aad
jnp
fiadds
es
push
jecxz
jmp
insb
pop
adc
cmp
cmpb
test
fbld
push
fmul
push
inc
fcompp
es
stc
int3
sbb
push
in
and
adc
test
or
int3
loopne
xchg
shrb
mov
in
fdiv
into
and
and
adc
jmp
dec
mov
addr16
lcall
sbb
lock
imul
insb
enter
stos
lods
jbe
repnz
push
imul
or
add
call
inc
sub
test
xchg
add
sub
xchg
adc
adc
nop
mov
sti
aad
lret
nop
repz
pushf
jl
sbbb
xchg
in
lods
cmp
jb
insl
stos
test
pop
jb
jecxz
mov
stos
lret
sub
cli
pop
vunpcklps
arpl
cmp
or
mov
add
and
mov
cmp
add
jns
rdpmc
fs
sbb
test
stos
jbe
mov
mov
mov
push
ret
or
stos
add
and
jecxz
outsl
push
jo
and
sub
sbb
rcr
xor
dec
repnz
ljmp
xchg
pop
push
jp
int3
addl
shll
adc
push
clc
repnz
clc
inc
lods
pop
add
xchg
adc
push
cmp
adcl
test
aad
mov
sbb
rcrl
ret
mov
xchg
pop
add
fs
mov
jle
sbb
cltd
adc
push
int
add
cmc
test
pushf
ret
push
add
lcall
sub
cmp
mov
mov
dec
cmpsl
adc
jl
mulb
jge
shrl
clc
adc
mov
mov
push
cs
mov
dec
inc
fsubrs
pop
vmaxss
movsl
push
je
adc
and
jmp
fs
cld
lcall
add
fbstp
pop
sbb
mov
jns
dec
pushf
bnd
ds
or
insb
pop
fisubs
xchg
pop
xorb
clc
aad
dec
xor
sarl
pushf
adc
push
pushf
scas
xor
fdivrs
pop
idiv
ss
and
xor
subl
sbb
xor
jne
into
pop
jmp
imul
mov
push
lea
push
inc
push
jne
lods
ret
mov
outsl
mov
into
mov
sub
arpl
call
in
insl
push
cmp
push
sti
scas
popf
dec
and
adcl
cwtl
sub
in
daa
pop
add
shrl
ret
leave
jbe
cmp
sub
test
stc
iret
xor
test
and
and
inc
dec
int
ds
rcrl
add
jb
cmpsb
fdivrs
mov
push
push
int3
int
inc
lcall
repz
arpl
push
sbbl
mov
call
and
fdivrl
fldenv
xchg
mov
rcrl
repnz
add
ds
cld
sub
jle
xchg
in
fcmovbe
mov
fcmovne
dec
fisttps
insl
enter
inc
test
mov
mov
rolb
pop
repnz
adc
push
push
enter
data16
cs
pop
dec
xor
and
xor
mov
out
rolb
inc
adc
jb
outsb
dec
push
jp
mov
inc
aaa
sbb
adc
and
xchg
dec
stc
or
fimull
shl
mov
idivb
pop
push
cwtl
push
push
dec
sahf
cltd
je
mov
bound
cs
movsb
imul
or
lea
scas
jae
scas
cli
mov
sub
pop
int
sub
dec
jae
popf
and
jg
adc
lods
mov
in
mov
push
rcr
and
sbb
movl
xor
mov
pushf
add
jl
lods
loop
shll
aaa
fstps
clc
movzwl
xchg
pushf
fstpl
adc
xor
sub
jg
cmp
cwtl
mov
sub
shr
je
pop
mov
add
mov
popf
pop
mov
jns
arpl
repnz
out
mov
push
or
xor
insb
cli
adc
mov
fmull
jns
mov
js
sbb
sti
outsl
pushf
sbbl
cmp
push
scas
push
sbb
mov
cmp
sbb
jne
sti
paddusb
stc
imul
stc
adc
cmp
and
and
inc
push
push
and
popf
fwait
jnp
or
cwtl
xor
aas
or
cwtl
inc
movsl
dec
jns
mov
pop
push
lods
and
sbb
or
cmp
lret
mov
jns
push
and
dec
addr16
mov
sahf
sti
and
aam
cmp
adc
in
aaa
shlb
push
add
push
jmp
mov
out
push
jno
ret
or
aam
push
movsb
mov
lock
scas
jge
inc
mov
mov
std
pop
pop
cmc
or
inc
and
addb
mov
cwtl
stos
outsb
arpl
lahf
xchg
movsb
jns
subl
mov
mov
jno
loop
pushf
and
sub
sub
push
mov
aam
jo
repnz
jns
lock
dec
pop
scas
incb
cmp
mov
ja
sub
inc
test
mov
repnz
mov
repz
aad
push
cli
fmulp
sahf
test
es
xor
and
sti
dec
les
cmp
mov
ss
ss
in
xchg
mov
leave
jle
or
xor
pop
shll
inc
scas
inc
mov
mov
pushf
insl
push
add
fwait
int
push
aad
roll
mov
mov
data16
ret
pushf
test
andl
popf
leave
aaa
out
mov
mov
rcll
xchg
dec
sbbl
lret
dec
or
test
or
jno
scas
sbb
stos
call
sahf
scas
frstor
xchg
mov
mov
xchg
mov
pusha
aas
pushf
pop
les
in
inc
cmp
fwait
test
in
pop
xchg
mov
xchg
sub
and
mov
icebp
adc
sub
pop
scas
icebp
shrb
dec
push
vreducess
into
mov
xchg
out
movsb
push
add
pop
fwait
das
jbe
mov
adcl
xchg
sub
nop
adcl
jnp
adc
inc
cwtl
mov
arpl
pop
sbb
push
jne,pn
scas
or
xor
xchg
add
sub
lock
or
mov
gs
loope
inc
aaa
mov
sub
mov
lock
pop
mov
mov
test
out
add
pushf
dec
icebp
mov
mov
mov
lret
jecxz
sub
push
sbb
stos
inc
lds
dec
or
aad
stos
pop
stos
mov
in
movsb
in
xchg
mov
jbe
push
add
popl
add
inc
fdivs
das
and
bound
pop
clc
push
into
imul
lret
xchg
sbb
dec
push
in
pminub
dec
gs
mov
pop
push
sbb
jecxz
push
push
push
dec
push
sbbl
sahf
shll
pop
addr16
pop
mov
fdivrs
inc
pushf
cmpsb
std
lea
mov
xor
call
notb
int3
push
jecxz
outsl
xchg
jae
into
outsl
cwtl
das
fistps
jg
pop
push
scas
icebp
jecxz
xlat
sub
shr
scas
dec
shr
data16
push
mov
sbb
mov
inc
fidivrs
sbb
pop
mov
cltd
jns
push
adc
data16
mov
jl
cmpsb
push
xor
sub
in
mov
ja
mov
ret
xor
ss
js
les
cmp
mov
mov
loope
popf
or
push
fistl
mov
rcr
xchg
jle
and
repnz
or
sbb
jl
lock
xchg
push
aaa
enter
loopne
push
push
or
in
xor
jns
clc
lods
jne
xchg
in
jae
ret
adc
pop
and
popa
mov
cs
push
filds
hlt
push
repnz
pop
fidivs
imul
pop
std
stos
jnp
mov
dec
scas
xchg
sbb
push
push
iret
test
inc
xor
xchg
fimull
sbb
js
xchg
aam
and
stos
jb
stos
mov
jg
mov
repnz
jmp
hlt
jae
dec
add
pop
iret
mov
stos
addb
push
rcll
add
push
add
xor
aad
xchg
repnz
cmpsb
pop
cs
ljmp
loopne
ds
xor
pop
or
nop
insb
dec
push
fnstcw
into
lret
push
push
ret
mov
inc
js
push
fistpll
nop
mov
cmpsl
movl
dec
repnz
mov
pop
fwait
les
sbb
xchg
pop
push
test
js
flds
not
push
popf
mov
mov
push
gs
test
inc
icebp
pop
stc
push
cmp
jae
pop
pushf
lods
dec
push
add
movb
pop
pop
pop
ds
loopne
dec
adc
sub
mov
out
cwtl
mov
mov
pop
das
or
lock
in
aam
mov
outsl
cmp
out
or
push
lock
std
sbb
dec
aas
lock
test
push
adc
and
cmp
push
or
lods
jo
add
leave
jb
lcall
rcrb
lahf
cmp
jns
lret
cmp
loope
mov
insb
or
popa
push
bound
lret
lods
lahf
sbb
loope
sbb
dec
repnz
push
ljmp
jle
dec
mov
jae
xchg
push
push
fbstp
mov
and
mov
add
cmpsl
cmpsl
push
sbb
jp
mov
clc
daa
out
inc
push
cmp
mov
lcall
out
adc
cld
inc
cwtl
mov
stos
sahf
add
cld
cltd
mov
inc
inc
filds
add
mov
inc
lock
mov
out
jmp
push
cs
mov
mov
dec
jo
mov
int3
or
test
insl
xor
xchg
jl
push
mov
mov
xchg
cwtl
rolb
mul
mov
test
mov
outsb
push
mov
imulb
mov
mov
pop
imulb
ret
xor
ret
movsb
mov
add
and
enter
test
xor
and
pop
jb
bound
mov
jnp
xchg
out
push
fsub
enter
mul
inc
jo
lret
cmp
jecxz
inc
mov
lds
test
cmp
and
mov
cmp
adc
lods
sub
mov
inc
sub
xchg
scas
push
and
jp
jmp
aam
cmpl
xrelease
or
test
lods
xchg
stos
arpl
xchg
fdivs
cli
jecxz
push
sbbb
sbb
fwait
les
inc
inc
xor
xor
xor
jg
push
outsl
xchg
ds
mov
loope
mov
loop
scas
cld
adc
cmc
adc
scas
fdivl
mov
jle
jne
arpl
push
mov
movsb
outsl
jae
mov
aam
mov
mov
xchg
jecxz
push
adc
leave
or
jl
push
cmp
sub
gs
in
aad
outsb
test
adc
add
xchg
aaa
cld
sti
sahf
xor
push
sbb
fxch
xchg
test
pop
std
stc
rcrl
scas
rcrl
sbb
movsb
xor
or
cmp
ds
push
les
pop
data16
xor
cvtdq2ps
jbe
leave
and
inc
cli
mov
ds
fcomi
push
bswap
loope
inc
or
sbb
movsb
add
mov
mov
flds
jae
test
imul
or
push
xchg
xchg
dec
mov
dec
out
mov
xchg
ds
pop
addl
fs
je
dec
mov
mov
imul
dec
mov
lds
fwait
mov
sbb
add
and
js
fmull
jno
xorl
pop
mov
in
mov
or
mov
cmp
pop
sbb
sbb
popf
arpl
out
bound
xor
jge
adc
mov
out
lahf
ja
mov
sub
mov
or
notb
cs
sub
pop
lcall
lds
vpmulhuw
out
shll
and
sub
out
cltd
push
sbbb
or
cltd
dec
sub
int
mov
sahf
sub
sti
ljmp
adc
xchg
xchg
popf
ret
sub
stos
lock
sub
mov
in
pop
pop
mov
jnp
clc
fbstp
test
cmp
cli
xlat
pop
inc
stc
dec
addr16
mov
and
and
into
push
cld
jle
xor
lods
jp
fisttps
xor
dec
adc
and
in
lahf
xchg
mov
mov
mov
cmc
xor
mov
cltd
gs
mov
xchg
cmp
mov
adc
test
insl
pusha
or
xchg
adc
mov
fdivrs
add
pop
clc
inc
add
mov
cld
das
enter
pop
bound
mov
popf
mov
fisubs
cmp
push
shll
outsb
pop
mov
jno
fnstsw
cwtl
jno
adc
push
scas
push
rorb
jmp
sbb
inc
stc
lret
xor
jne
fistpl
popl
sbb
pop
and
pop
cmp
data16
jb
push
dec
pop
loope
xlat
xchg
adc
cwtl
dec
and
jns
sbb
out
and
je
movsb
cmp
mov
and
aaa
sbb
fbstp
jnp
cmp
lahf
pop
add
push
stos
push
mov
daa
dec
sub
clc
int
add
and
or
adc
adc
aad
or
xlat
bound
and
stos
mov
in
jbe
arpl
pop
add
mov
nop
cmp
mov
das
adc
xor
xchg
lea
in
adc
out
xchg
fs
sub
ror
test
and
leave
cltd
push
scas
sbb
xor
repz
push
add
push
jg
cmc
in
pop
cmp
xchg
pop
add
leave
mov
inc
push
adc
or
cld
add
fcmove
mov
sahf
lods
aaa
out
into
sbb
in
xchg
push
pushf
mov
cltd
sahf
fs
std
ja
ret
mov
ss
pop
xchg
mov
or
repz
rcrb
mov
xchg
enter
jg
shlb
or
xchg
xor
sbb
lods
add
xchg
cli
pusha
cmpsl
lds
sub
inc
pop
pusha
icebp
addr16
scas
sbb
sbb
pop
loope
jge
leave
jle
movsl
cwtl
ja
mov
fwait
inc
xor
out
or
fdiv
mov
mov
and
jb
in
xchg
ret
jecxz
fisttpl
pop
cltd
jbe
int3
cmp
xor
jp
stc
or
pop
cmp
and
cltd
aaa
insl
lret
add
dec
cltd
lea
stos
mov
adc
sub
dec
pop
ds
nop
and
cmpsl
aaa
lahf
xorb
insb
mov
mov
ret
cld
or
mov
neg
stos
mov
lea
pop
jnp
fistl
lcall
in
filds
adc
daa
sar
lahf
dec
roll
sti
or
add
xchg
pop
push
imul
dec
mov
sahf
push
fnstenv
mov
test
mov
push
jne
mov
push
inc
mov
inc
mov
ds
data16
cwtl
mov
and
ds
jne
sahf
mov
out
xchg
inc
out
mov
push
loope
inc
nop
pusha
sti
jl
sub
xchg
bnd
pop
lret
out
addr16
dec
imul
push
inc
dec
repnz
pop
fmul
inc
es
mov
jge
mov
in
push
pushf
adc
ds
add
outsl
into
lods
mov
fstpl
mov
jmp
xchg
and
xchg
add
dec
mov
adc
jmp
adc
mov
xor
mov
lahf
ljmp
adc
ja
mov
add
pushf
xchg
decl
cld
add
fisttpll
sahf
sub
or
shll
jo
icebp
and
adc
xlat
sub
loop
mov
movsb
fisubrl
push
inc
push
inc
pusha
and
jge
stc
ss
movb
jmp
lods
and
repnz
ret
jle
icebp
lods
cld
inc
fwait
das
cmpsb
sbbb
out
or
mov
fsubl
inc
rolb
int
lds
pop
pop
xchg
ljmp
inc
jns
out
cmc
jle
or
rcll
xor
xor
pop
xchg
push
add
dec
xchg
pop
and
adc
mov
pop
xor
adc
add
pop
pop
aaa
push
mov
jmp
les
pop
pop
pop
add
mov
and
mov
fcomps
cmp
xor
cltd
les
rcr
lds
in
cmpsl
adc
sbbb
mov
ss
loopne
cmp
xor
jecxz
loope
jle
push
push
xorl
mull
mov
dec
in
add
sub
dec
scas
in
add
mov
pop
xor
enter
or
mov
stos
mov
xchg
inc
lock
lret
clc
aad
cmp
data16
push
pop
cli
or
pop
sbb
mov
xor
test
cwtl
es
sbb
xorb
aas
mov
ljmp
jae
xchg
lds
push
cmp
add
outsb
imul
mov
xor
jo
fisubl
lcall
test
xchg
inc
lds
xchg
scas
push
call
loop
mov
push
sahf
movsl
das
aam
jae
mov
and
sbb
xchg
movsb
shr
lds
cmp
daa
xchg
subb
cmovae
jno
add
fdivrl
fcmovbe
ret
fiaddl
in
push
leave
nop
iret
cmp
mov
mov
scas
fsubrl
inc
push
js
xchg
cmp
jb
sub
sahf
sbbb
hlt
push
rcr
aaa
inc
es
arpl
js
outsl
cwtl
pop
mov
movsl
jle
xor
mov
addr16
out
in
nop
add
add
adc
ds
ret
xchg
push
call
in
xchg
je
lret
notl
xor
mov
xchg
mov
cwtl
je
cmp
mov
test
push
push
ffree
out
jbe
pop
ret
insb
xchg
out
push
pop
std
aaa
rcrb
push
lret
cmc
mov
adc
add
divb
pusha
clc
dec
call
dec
shrb
enter
pop
bound
mov
mov
movsl
add
push
inc
inc
ss
jmp
popa
mov
cmpsl
pop
jne
xor
fcomps
cmp
cmpsb
xchg
adc
lret
aaa
std
xchg
add
xlat
cmp
lret
push
popf
xlat
lcall
dec
sahf
mov
lods
incb
in
loop
ds
push
imul
iret
outsl
pop
imul
pop
mov
push
jecxz
or
adc
aad
cwtl
mov
push
xchg
addr16
mov
in
addr16
mov
das
xor
mov
stos
and
leave
ret
inc
into
fists
hlt
cmpsb
rcrl
mov
xchg
mov
xchg
aaa
mov
shl
add
push
lods
add
mov
les
mov
mov
push
stos
ficomps
jo
jge
sbb
push
xchg
inc
inc
stos
addr16
ret
sub
sub
xchg
insb
add
push
mov
and
xor
xor
xor
and
sub
movsl
shll
in
inc
notb
mov
clc
insl
jmp
jmp
or
test
std
and
int3
mov
addr16
rclb
imul
sbb
cmp
dec
and
subb
fs
fcomps
test
test
xchg
pop
mov
cmp
cld
aam
pmaxub
jo
mul
gs
in
jae
jp
scas
xor
cwtl
out
push
and
cld
fbld
xor
lret
mov
push
xor
outsb
inc
in
push
fisubrs
add
shrl
pushf
sub
sbb
jno
pop
out
addr16
movsb
icebp
insb
push
aad
setp
push
sub
lods
cmp
cmpsl
dec
xchg
jno
xchg
mov
imul
jne
aam
xchg
hlt
jecxz
decb
xchg
sahf
scas
gs
fwait
in
sbb
pop
psraw
mov
sub
and
jg
outsl
push
out
pop
and
xor
jmp
cs
testb
out
jne
scas
popa
aad
clc
inc
pop
or
lock
adc
daa
xor
xor
jle
jne
sbb
sub
pop
add
repz
pop
inc
mov
xchg
or
sarb
mov
imul
push
push
arpl
xor
inc
xchg
lret
testb
cmpsl
push
int
bound
or
out
cltd
xor
sti
sahf
mov
xchg
ljmp
bound
or
int
orb
mov
fsubrl
iret
ja
and
fwait
mov
xorb
rorb
outsl
lock
and
orl
das
sbb
loop
fildll
jp
sub
ljmp
mov
and
xor
pop
mov
or
fidivl
addr16
insb
add
jae
mov
push
out
arpl
pop
and
shll
inc
pop
cmp
and
sub
cmpsb
mov
cwtl
mov
into
pop
dec
adc
sub
push
mov
adc
loope
xchg
push
pop
subl
out
xchg
sbbb
leave
int
mov
movsb
xchg
loopne
lahf
mov
dec
jno
mov
cs
push
fldcw
ror
add
dec
inc
pusha
out
xlat
inc
or
pop
or
out
frstor
bound
test
imul
hlt
inc
and
in
iret
fcom
in
dec
push
sbb
rorl
adc
imul
or
and
loopne
inc
or
jns
dec
cmp
sbb
pop
adc
arpl
mov
scas
outsb
cmp
pop
les
loope
xchg
mov
shll
movsb
fidivl
xor
and
aas
xchg
jmp
test
cmp
fistl
adcl
insb
arpl
xor
mov
pop
or
das
das
repnz
mov
fs
sbb
das
cmc
inc
pop
stos
and
sbb
mov
mov
movsb
lret
adc
cmp
mov
scas
stos
js
in
bound
pop
sub
aad
inc
out
test
cmp
xchg
sub
dec
mov
subb
jecxz
or
jg
cld
daa
aas
sub
adc
daa
flds
xor
jl
jle
clc
test
roll
adcl
xchg
aam
std
shrb
and
jnp
jns
nop
mov
jle
dec
push
xor
mov
adcb
or
std
push
adc
clc
dec
inc
enter
inc
into
sbb
jnp
mov
popa
fsub
rcrl
pushf
inc
or
repz
fcmovu
mov
push
inc
lret
sahf
pop
es
stos
call
inc
je
cmp
pop
sbb
and
ljmp
jbe
addb
mov
mov
inc
inc
stc
and
int
pop
int3
pop
test
xchg
icebp
arpl
lahf
ret
cltd
pushf
in
repz
mov
rcrb
cmp
xor
js
mov
ds
lret
pop
ljmp
or
sub
xchg
in
push
test
sbb
fstpt
xor
jae
enter
xchg
mov
mov
fimuls
push
inc
jnp
mov
push
lods
testl
mov
pop
mov
and
stc
jo
xchg
pop
fs
jbe
out
jecxz
imul
pushf
jge
cmp
jg
sub
loopne
inc
daa
lea
ss
push
xchg
ljmp
addr16
inc
jle
mov
stos
cltd
xlat
cmc
mov
and
xor
iret
outsb
push
aad
fwait
orl
subl
mov
dec
mov
lret
cltd
mov
sub
inc
cmp
sub
push
mov
or
ljmp
movsb
and
xchg
in
je
imul
addl
loop
out
hlt
sub
fmuls
push
insl
xchg
subb
xchg
jns
pop
dec
rolb
sub
sub
xchg
push
jmp
insl
inc
adc
lret
inc
movsb
out
mov
out
push
leave
test
cmp
addl
mov
inc
pop
jae
in
cli
xchg
int
call
int
and
test
add
adc
loope
loope
cmpsl
cwtl
adc
arpl
aas
xchg
mov
mov
sub
pop
inc
out
movsl
sbbl
or
mov
clc
nop
sbb
and
fs
lods
dec
mov
or
push
cmp
jne
test
in
cld
gs
std
xorl
into
ret
push
push
jmp
sub
jmp
dec
int
jle
clc
repnz
test
loope
jmp
in
xchg
lcall
pop
sub
inc
mov
popf
into
test
imul
or
iret
sahf
jmp
loopne
cmpsl
mov
int
push
cltd
inc
scas
movb
mov
jg
icebp
fcmove
xchg
mov
out
out
and
hlt
adc
lret
or
lods
pop
jo
inc
pop
jmp
in
loop
inc
sbb
loop
xor
cwtl
popa
mov
mov
and
std
mov
sbb
adc
inc
cwtl
xor
movsl
push
cmpl
popf
cmp
pop
xchg
jmp
subb
stos
in
push
mov
mov
add
popf
or
ja
jmp
gs
in
outsl
arpl
lods
sar
sbb
jmp
in
push
jecxz
mov
push
mov
ja
xchg
sbb
roll
mov
ja
je
jo
jmp
push
sub
stos
sar
jl
or
sub
mov
xor
pusha
subb
cmp
ficoms
adc
sbb
pop
nop
push
inc
pushf
xchg
xor
push
sub
cmp
or
or
fnstenv
lahf
lcall
add
xor
adcl
jge
shll
in
and
incl
sarb
sub
call
mov
lret
or
mov
mov
mov
mov
pusha
add
divb
inc
push
sub
adc
push
sub
and
les
andb
test
inc
insb
mov
sbb
pop
dec
stos
ret
mov
xchg
sub
mov
dec
hlt
jp
lret
std
xchg
test
inc
mov
mov
dec
aam
add
and
stos
repz
sbb
xchg
mov
and
ds
lahf
mov
aad
mov
outsb
bound
mov
add
mov
sbb
inc
xchg
test
lcall
xchg
sub
call
mov
ljmp
loopne
cmc
aam
pop
mov
jmp
xor
hlt
into
lods
cltd
loop
inc
data16
sub
insb
cld
adc
gs
les
push
test
lods
cld
sub
xchg
or
adcl
push
insl
into
bound
sbb
jmp
mov
mov
in
fnstenv
lret
pop
xchg
lea
cmp
test
test
sbb
sbb
loopne
fwait
add
push
push
mov
adc
xor
pop
nop
mov
add
aaa
push
mov
movsl
push
mov
test
pushf
and
dec
sbb
cmp
out
mov
out
or
add
fisubrl
pop
add
sub
leave
enter
mov
pop
dec
enter
nop
xchg
out
outsb
sbb
roll
sahf
test
lock
mov
dec
dec
repz
push
jmp
lods
mov
mov
adc
lret
shrl
push
jb
cli
lea
adc
xor
inc
ss
adc
cmpsb
or
ror
push
xchg
sub
arpl
repnz
cwtl
add
iret
sbb
cltd
mov
inc
cmp
fcoms
mov
cmp
mov
lods
pusha
mov
pop
mov
outsb
fsubrl
xchg
enter
mov
sbb
call
sbb
jnp
imul
mov
loope
jp
sub
fxtract
roll
adc
cli
inc
sahf
jno
xchg
xchg
sahf
dec
cmp
jb
fcom
inc
fsubrl
xlat
fmull
or
mov
add
fcmovnb
mov
push
mov
lock
inc
lcall
jg
fstps
inc
or
push
cmp
mov
icebp
pop
imul
outsl
test
fcomps
ret
push
jmp
mov
mov
nop
push
xor
fildll
pop
ficoms
jns
clc
add
icebp
jo
rolb
mov
bound
loope
xchg
dec
fwait
add
xchg
lea
sub
mov
adc
das
adc
aam
mov
sar
clc
push
outsl
inc
fbld
and
je
fcmovne
cwtl
test
push
and
push
je
les
dec
jo
int3
popa
pusha
fs
ja
idiv
imul
xor
insl
jl
scas
add
cmp
mov
daa
and
adc
data16
aas
lds
movsb
in
push
addr16
out
add
xor
jns
fcomip
adc
pmaddwd
sub
inc
scas
aas
shlb
fildl
daa
mov
repnz
fisubrl
dec
xor
add
fucomip
dec
adc
push
xchg
dec
or
jecxz
in
les
dec
and
sbb
pop
jg
les
fcoms
push
jb
cmpsl
cmp
cmpsb
pop
jg
stc
pop
pop
shrl
mov
pop
insb
enter
out
add
aad
orb
in
lods
add
icebp
cmpsl
cmp
in
lods
push
aas
push
pushf
call
pop
jne
sbb
into
adc
mov
lods
movsl
xlat
loopne
sub
test
xor
and
add
daa
and
dec
and
mov
xchg
xchg
push
fbld
jmp
dec
cmp
mov
insb
fistps
ds
sbb
jns
mov
jle
push
loopne
outsb
into
mov
push
fadds
cs
stc
lea
mov
ljmp
out
fwait
add
pop
push
push
shll
mov
jl
stos
or
mov
push
rcrl
test
xchg
or
dec
repz
sub
ss
mov
push
rclb
and
inc
sub
and
pop
mov
cltd
inc
fwait
cmp
add
xchg
cmp
pop
jmp
inc
pop
sub
ja
jmp
push
jb
mov
or
fildl
sbb
pop
jbe
mov
inc
push
das
call
scas
lret
loope
jno
push
adc
xchg
xchg
xor
mov
sti
jmp
xlat
popl
or
pop
or
cs
pusha
dec
xorl
sbb
cmpsl
add
inc
lds
insl
adc
mov
and
in
add
jl
inc
and
out
sbb
sub
enter
adcl
mov
test
pop
jecxz
fs
mov
sahf
or
sqrtps
pop
jle
cli
sub
push
xchg
jmp
mov
popa
inc
cld
sbbb
mov
or
insb
push
out
loop
icebp
fldenv
daa
xor
push
adc
push
aas
xchg
outsb
mov
mov
dec
adc
sbbb
adc
xchg
pop
into
sub
mov
dec
je
sub
nop
sub
pop
inc
xlat
jecxz
popa
iret
add
pop
cltd
stos
andl
mov
int3
shrl
sub
outsl
push
repnz
cwtl
xlat
nop
jne
clc
jnp
in
icebp
mov
push
adc
cmp
popf
xor
rclb
je
or
repnz
adc
xchg
insl
das
jb
ror
test
jne
jbe
inc
es
hlt
mov
movw
and
inc
pop
inc
scas
inc
in
mov
jl
mov
mov
and
pushf
xor
inc
xchg
push
outsb
inc
scas
lock
int3
mov
mov
sub
movsl
lea
lahf
imul
pop
mov
stc
stc
cmp
add
or
jae
arpl
sbb
mov
arpl
dec
jns
test
pop
cmp
ja
jnp
xchg
int
sbb
xchg
add
push
dec
imul
push
icebp
rolb
stc
inc
mov
jb
cltd
insl
insb
mov
popf
mov
fstps
inc
cld
cli
test
jae
ss
inc
test
cmpl
and
adc
cmpsb
pusha
dec
adc
mov
loope
pop
pop
xor
ret
jmp
inc
jae
jg
scas
pop
sub
jle
xchg
jg,pt
les
rcll
jb
push
and
or
xor
or
call
xchg
inc
clc
cltd
sti
pop
xor
adc
adc
push
js
add
dec
popa
negl
popa
push
dec
mov
mov
aas
outsb
in
lock
or
imul
xlat
cmp
cmp
cmp
gs
inc
sbb
aad
hlt
push
fwait
sub
dec
sub
mov
into
xchg
lods
out
enter
mov
xchg
adcb
outsl
mov
popa
or
fdivs
out
adc
lds
jmp
dec
sbb
outsb
pop
test
or
outsb
jns
xor
loope
aam
addr16
lods
and
data16
or
adc
mov
leave
mov
inc
xor
add
jle
cmpsb
faddl
inc
shl
int
int3
loope
outsb
sbb
jmp
cmpl
mov
xchg
fsub
out
sti
iret
leave
xorb
dec
loope
mov
aaa
inc
cmc
pop
les
xor
jecxz
ret
insb
imul
push
xchg
cld
inc
dec
pop
xchg
adc
clc
mov
out
jo
hlt
sub
ret
orl
and
cmpsb
jno
push
ss
shlb
cmpsl
inc
sbb
and
cmp
pop
xchg
mov
add
hlt
pop
in
or
jno
xor
mov
cltd
orl
loopne
sti
rep
ret
jp
add
arpl
fsubrl
mov
js
fistpl
mov
pop
stos
pusha
pop
mov
imul
mov
sbb
ja
repnz
iret
sub
inc
sub
jb
sbb
or
mov
xor
stos
xchg
xor
pop
lea
xor
dec
mov
loope
push
lcall
mul
stos
mov
xchg
stos
shrl
sub
push
fcmovnu
fdivrs
divl
fsubrp
fs
mov
push
cmp
dec
daa
daa
sarb
sti
xchg
xchg
mov
mov
sbb
cmpb
fists
mov
cmp
and
lea
add
aad
das
outsl
shlb
je
or
les
add
xchg
pop
adc
mov
insb
mov
frstor
jae
jne
scas
aad
adc
movsb
dec
jge
mov
ret
jp
hlt
push
mov
or
inc
and
jbe
xchg
sbb
cmpsb
aas
sar
aam
sbb
jns
out
in
daa
sub
fsts
add
adc
ret
cmc
xchg
cmpsl
pop
and
sub
and
loope
outsl
add
mov
mov
sti
roll
movsl
leave
mov
cmp
ds
ljmp
or
push
lods
sub
loopne
test
lcall
in
pop
pop
je
addr16
xchg
scas
sbb
test
call
stos
adc
incl
sbb
jnp
inc
jnp
mov
pusha
rol
int3
xor
cli
outsl
dec
xchg
mov
sti
cmp
push
sbb
addr16
push
sbb
inc
mov
subl
xchg
mov
add
test
cmc
mov
out
pushf
addr16
shll
inc
jl
inc
ret
leave
sbb
push
fwait
ds
in
ds
mov
nop
sti
iret
das
sbb
and
push
fldenv
leave
aad
imul
out
sub
ret
cli
aaa
sbb
outsb
cs
sub
icebp
icebp
add
inc
push
pushf
int3
adc
je
adc
pusha
sub
cld
pop
xor
mov
sub
lret
call
outsb
shr
adc
mov
pop
dec
mov
and
fs
mov
aad
inc
int3
orl
aas
aam
std
jo
das
loopne
xor
scas
jge
add
rolb
pop
dec
les
jbe
in
in
or
dec
ja
xor
shll
inc
pop
lock
jecxz
push
aad
cmpsl
pop
pop
add
inc
fwait
out
jmp
out
repz
mov
in
addr16
idivb
in
dec
in
jp
jecxz
sti
push
sbb
sub
fwait
das
ds
call
inc
orb
mov
enter
sbb
popf
or
cltd
outsb
sbb
push
dec
insb
lods
mov
push
mov
xor
push
bound
imul
das
inc
mov
jnp
pop
dec
mov
jg
fildl
js
add
add
mov
xchg
incl
dec
out
pop
xor
outsb
lods
ss
mov
dec
rorl
ja
imul
movsb
mov
test
dec
and
sbb
hlt
xchg
xor
mov
jmp
icebp
push
push
jnp
les
mov
lds
and
aaa
push
sbb
inc
dec
stos
ss
loopne
push
loop
scas
xchg
lds
jo
inc
stos
cmp
out
lods
dec
cwtl
cmpsb
jnp
inc
xchg
test
gs
inc
loopne
fists
push
xor
and
xchg
push
adc
jns
insl
pop
mov
mov
xor
mov
dec
add
je
pushf
loopne
iret
loop
xor
push
add
cli
add
orl
push
enter
xchg
loope
movsb
mov
xchg
xchg
inc
clts
pop
inc
xchg
adc
test
sbb
loopne
cmp
repnz
and
jne
inc
sahf
adcb
out
out
outsb
test
flds
popa
xor
cmp
pop
movsl
adc
repz
xchg
jmp
or
movsb
jle
jne
sub
or
lea
inc
inc
mov
jp
dec
loopne
movsb
mov
mov
push
addb
int3
pop
rorl
push
cmc
std
out
cmpsl
or
out
ficoml
pusha
add
xor
mov
imul
int3
xlat
add
fwait
test
xchg
sbbl
or
jmp
pusha
sbb
je
push
ret
iret
or
pop
or
outsl
cmp
movsb
not
inc
std
jmp
sbb
adc
in
xchg
xor
js
mov
fcompl
repnz
ja
dec
insb
insb
mov
xor
lods
inc
mov
in
inc
jne
adc
ret
lahf
int3
jbe
nop
dec
xor
pop
xor
mov
xchg
push
pop
push
mov
in
mov
out
jno
aas
leave
jp
push
repz
pop
test
pop
cmpb
lcall
xchg
test
repnz
orb
std
mov
ror
aas
fwait
and
sarl
lret
fldl
enter
mov
mov
sbb
sub
xchg
aam
or
ds
lods
lock
jno
jae
out
stc
jns
jno
push
nop
int
cmp
lret
imul
cmp
shlb
loop
es
rolb
push
xchg
push
mov
jbe
xor
push
inc
stos
dec
sbb
adc
pop
aam
pop
jno
lods
cmp
sub
fcompl
add
sbb
jae
sti
repz
inc
xchg
in
sub
mov
mov
sbb
push
sub
mov
sbb
scas
pusha
scas
xchg
jl
cli
fildll
jecxz
daa
sub
ss
bound
int3
pop
xchg
ljmp
lea
cli
mov
cmp
ds
or
lcall
cli
clc
sub
pop
fidivrl
imul
jg
sub
inc
adcl
pushf
popf
lock
int3
in
xchg
push
call
xchg
add
adc
adc
xor
pop
adc
xchg
fbstp
scas
push
imul
or
pop
gs
in
cltd
xor
imul
fwait
pushf
movsl
clc
movsl
scas
xor
xchg
push
inc
in
and
lahf
popf
insl
jb
fcompl
push
mov
jg
mov
lret
adc
push
lea
ss
cmpsl
lock
cli
inc
cwtl
cltd
sub
call
mov
push
loop
xor
adc
pop
outsb
roll
push
cmc
repz
xchg
outsl
lcall
outsl
lret
push
loope
notl
pop
stos
loope
mov
fidivl
fs
lods
push
mov
pop
jg
push
cmp
out
cmpsl
jle
sub
dec
fxch
in
cmpsl
mov
clc
xchg
stos
pop
inc
repz
out
in
subl
dec
mov
push
scas
sbb
mov
add
adc
xchg
stos
adc
mov
outsl
pusha
jae
adc
jp
mov
adc
pop
add
and
cli
xchg
andl
addr16
clc
mov
gs
add
mov
repz
mov
cli
outsl
ds
add
mov
mov
in
aad
pop
jnp
jo
nop
add
sbb
lcall
stc
enter
xor
faddl
xlat
or
add
sahf
in
cmpsb
cmp
incl
in
sbb
pop
mov
mov
gs
add
lods
sbbb
gs
mov
xchg
dec
stc
cli
push
ret
int3
dec
arpl
repnz
outsl
jl
ds
xchg
dec
push
in
xchg
push
cmp
mov
pop
in
mov
pushf
inc
jle
iret
jo
push
xor
dec
mov
xchg
fidivl
mov
adc
and
sbb
pop
mov
or
loop
pop
in
mov
mov
pop
lods
or
jle
push
or
and
add
mov
inc
cmp
pop
cmp
or
dec
loopne
or
addb
sbb
sub
mov
dec
mov
add
dec
mov
sahf
push
pop
xor
pop
hlt
mov
pop
ljmp
pop
sbb
aad
jp
jecxz
stc
aaa
incl
jbe
sbb
ja
or
ret
stc
push
aad
xchg
andb
lea
push
mov
fsubrs
fsubrp
inc
mov
mov
mov
sub
incl
mov
mov
cmp
sbb
gs
std
lods
lcall
and
dec
test
pop
pop
sub
out
int
push
mov
jo
adc
mov
test
sbb
xchg
sbb
jbe
mov
loop
mov
push
mov
add
mov
xor
cmc
xchg
jo
movsl
aad
cmp
and
adc
fdivl
mov
movsb
xchg
dec
jnp
loopne
insb
mov
push
cmp
and
jnp
adc
insb
mov
jo
pop
xchg
sub
fdivr
mov
ret
in
rorl
add
lret
cmpsb
xor
inc
aas
rclb
cmc
push
cmpsl
ss
pusha
pop
mov
xor
inc
xchg
jg
cmpsb
jge
in
das
jb
leave
mov
inc
mov
sub
inc
ss
rcrb
mov
cld
adc
push
push
sub
xor
sbb
popf
dec
mov
xchg
std
insb
out
dec
insl
ss
outsb
mov
lods
gs
or
pop
cmpsl
xchg
icebp
mov
repnz
fstpt
cmp
inc
ret
xchg
and
inc
js
dec
ljmp
test
repnz
fstl
jge
sbb
out
aam
and
adc
push
insb
mov
push
sub
mov
or
mov
inc
loop
sub
aaa
mov
mov
cmp
aam
lret
mov
repnz
xor
stos
mov
movsl
enter
ja
mov
jecxz
and
push
mov
fnstsw
sub
inc
cmp
loopne
rol
ret
mov
mov
stos
mov
adc
adc
lods
pop
iret
das
test
mov
xchg
icebp
inc
loop
lock
ss
sub
jp
sar
stc
cwtl
mov
loopne
daa
mov
rcll
xchg
loope
adc
dec
sbb
sbb
out
pop
icebp
es
push
arpl
icebp
mov
push
inc
xchg
lret
gs
mov
mov
mov
les
movsb
cmp
popa
mov
incl
int3
push
mov
push
xchg
or
push
jmp
mov
or
jnp
out
jg
pop
adc
pop
mov
scas
jo
xchg
dec
jl
lock
cmpsb
fdivrs
xlat
rclb
call
mov
lea
movsl
push
fwait
negb
test
out
inc
pop
or
enter
lock
sub
mov
xchg
test
aad
jmp
cwtl
test
jle
jno
sub
cmpsl
sub
int
mov
lds
push
lods
pop
in
lret
fs
cmpsl
mov
pop
lea
arpl
push
je
sub
push
sbb
cmp
dec
mov
mov
lds
dec
push
xchg
ljmp
insl
aad
pop
loop
mov
mov
mov
and
sbb
jmp
ljmp
lahf
mulb
pop
push
inc
fwait
dec
dec
sub
fwait
inc
cmp
fdecstp
mov
stos
adc
mov
cmc
pop
je
sbb
push
push
out
push
mov
push
adc
push
mov
out
outsl
push
mov
xchg
and
leave
mov
mov
inc
or
insl
mov
and
mov
add
push
int3
adc
sub
shrl
sbb
mov
cmpsl
pop
dec
push
cmp
xor
fstps
xchg
xor
pop
push
inc
fiadds
or
xor
cmpsb
mov
xchg
icebp
adc
int
nop
inc
xor
test
jns
shlb
mov
sti
xor
adc
inc
sbb
mov
sahf
mov
test
jp
mov
lea
cmp
cmc
bound
rcrl
scas
lret
push
sahf
out
inc
jecxz
cmp
xchg
jne
pushf
outsl
adc
sbb
sub
lods
and
dec
sbb
sti
or
push
push
mov
mov
add
insl
rorl
inc
push
or
in
mov
sbb
lea
loop
repnz
mov
adc
out
xchg
push
push
stos
rol
pop
add
ret
add
sbb
movb
cmpsb
sti
pop
rorl
jecxz
rclb
xchg
mov
out
push
add
lahf
das
or
orl
cmp
inc
jecxz
sub
test
cli
sub
gs
ja
mov
push
sbb
push
dec
jmp
dec
popa
push
sbb
push
push
push
or
jb
inc
push
std
test
sub
inc
std
call
and
adc
pop
xor
clc
call
out
push
add
or
cwtl
dec
imulb
std
inc
cltd
data16
push
inc
cmc
dec
stos
dec
jmp
jns
dec
stos
adc
cld
stc
push
lods
push
jns
jae
stc
daa
adc
sbb
idivl
roll
scas
les
sbb
and
repz
fdiv
das
adc
cmp
jne
movb
cs
popa
pop
jae
ret
jnp
jl
sti
inc
sbb
or
js
iret
add
mov
pushf
mov
scas
jo
and
outsb
cmpsl
imul
cmp
mov
and
imul
mov
inc
shlb
and
or
jecxz
mov
into
inc
pop
sub
andb
cli
idivl
cmp
mov
sub
mov
test
out
mov
je
dec
scas
das
push
stos
test
push
rcrb
mov
fldt
mov
jl
loopne
stos
ret
mov
test
sbb
push
xlat
dec
mov
fucomp
or
sbb
dec
mov
scas
aas
loop
dec
jnp
cmp
jns
dec
hlt
loopne
pop
decb
sub
fdivrl
xchg
out
add
dec
push
lods
cs
ficoms
adc
in
adc
imul
mov
fcomps
jle
dec
scas
mov
mov
out
sub
push
inc
dec
popf
jns
inc
shl
pop
int
es
lret
in
adc
rcll
in
aam
scas
ret
inc
inc
fstl
repz
call
sbb
push
jns
lds
pop
cmpsl
adc
pushf
andb
sub
lods
jb
sub
xchg
imul
lret
jecxz
and
aaa
jl
cmp
lcall
jmp
xchg
xor
scas
dec
mov
cmc
pop
outsl
xchg
stos
js
cmp
cld
shlb
cmp
xchg
shll
mov
lods
pop
cli
mov
dec
jb
jae
pusha
xchg
sbb
dec
cltd
je
push
dec
push
push
pop
ficomps
fmuls
outsl
push
inc
icebp
test
pushf
adc
add
push
inc
lds
adc
dec
mov
gs
test
stc
mov
mov
dec
jns
leave
outsl
aam
rcr
leave
dec
xchg
test
int3
loopne
lret
or
mov
adc
into
push
mov
scas
bound
mov
les
mov
les
fs
mov
std
jns
scas
mov
imul
mov
mov
or
dec
out
xor
and
cmc
pop
xchg
stos
jge
sub
push
jg
sub
mov
mov
mov
sti
fs
in
xchg
hlt
push
fildll
aaa
add
inc
sahf
lds
outsl
xchg
shll
xor
pop
and
call
or
das
aaa
mov
out
stc
mov
push
jne
mov
imul
sti
lea
loope
mov
jmp
sub
mov
mov
adc
jmp
mov
adc
sbb
push
fadd
sub
in
les
mov
mov
jle
push
push
lcall
fld
sub
lahf
mov
mov
mov
adcl
jb
sbb
shll
ds
outsl
sbb
lods
or
inc
pop
mov
rcll
mov
push
jo
ror
fisttpl
mov
adc
mov
xor
aad
movsl
sbb
push
mov
fisubs
shrb
add
mov
pop
sub
push
pop
shlb
lret
cld
call
ljmp
dec
or
leave
leave
test
in
ss
mov
addb
sbb
push
movsb
push
stos
sbb
xor
jecxz
push
mov
imulb
cmovns
jp
aam
mov
movsl
xchg
iret
sti
pop
adc
jmp
stc
mov
lock
pop
adc
pop
dec
jle
das
sbbb
call
sbb
es
push
les
or
xor
fisubrs
add
stos
adc
mov
push
cld
xor
dec
jmp
test
xor
jns
jb
icebp
xor
pushf
sub
and
ret
adc
addr16
mov
cmp
push
lods
aam
xchg
sub
sbb
movsl
push
cmpb
loope
dec
mov
cmp
ja
sahf
mov
in
sub
push
insb
jecxz
stos
jecxz
xchg
push
inc
inc
inc
or
rcrb
rcll
xor
icebp
push
and
sub
mov
lods
cli
fimuls
cld
incb
dec
mov
pop
jae
out
sub
push
cmp
popf
insl
push
adc
lods
fxch
mov
adc
stos
repz
xor
jle
mov
mov
push
bound
xor
push
ret
popa
mov
je
push
scas
pop
mov
jp
and
and
lods
and
push
lock
wrmsr
lea
test
inc
and
aaa
test
cli
cld
inc
cmp
sbb
push
int3
inc
outsb
leave
pushl
inc
popf
fmull
subl
push
pop
sbb
jno
pop
scas
loop
push
jp
shrb
movsl
xor
mov
in
fsubrs
pop
jnp
adc
iret
mov
out
mov
inc
mov
mov
mov
arpl
movups
cmp
sbbb
mov
xor
mov
xchg
sub
and
loopne
cld
sub
jmp
jbe
das
xchg
into
jg
lds
push
dec
out
and
jge
mov
lds
sbb
sub
ss
mov
mov
repnz
sub
sub
cmp
mov
shlb
fcmovne
mov
out
mov
stc
xchg
sbb
cwtl
or
pop
popf
popf
adc
aas
pop
cwtl
or
mov
pop
add
cmc
cmp
xchg
jae
ss
leave
push
sub
pop
xor
lds
push
stc
push
clc
aam
shlb
push
cmp
out
sub
jg
pop
or
pop
lock
inc
mov
pop
inc
xchg
dec
fldenv
push
inc
xchg
loope
outsl
sbb
pop
int3
cwtl
into
xor
nop
popf
rol
lds
ret
push
xchg
add
popf
lods
pop
daa
pop
ljmp
aam
mov
mov
fidivl
mov
sub
mov
cmpsb
shlb
jge
dec
arpl
mov
or
ret
pop
xchg
pop
xor
inc
fucompp
dec
loop
sbb
mov
pop
test
in
adc
mov
and
jecxz
xchg
inc
push
or
mov
and
mov
push
cli
or
sbb
jge
je
and
cmpsl
pop
rorl
mov
aaa
repz
fs
cmp
add
inc
mov
mov
andl
cs
adc
xor
popa
push
mov
and
push
fs
mov
shlb
clc
push
mov
repz
lcall
test
shll
hlt
adc
pop
aas
int
add
outsl
mov
rol
xchg
sub
mov
jg
fdivrs
fwait
add
aad
cmp
or
mov
orl
xlat
fimull
and
pop
mov
pop
mov
mov
and
xor
push
jb
dec
push
sbb
ret
inc
icebp
xchg
cmp
in
pop
add
jbe
scas
mov
fwait
pop
sub
sub
shr
pop
xchg
mov
jno
or
mov
mov
out
xor
imul
test
in
test
dec
out
rolb
fimuls
in
fsubrl
scas
addr16
in
adc
popa
xchg
fldl2t
xor
jp
fdivs
jns
lods
adc
loopne
mov
mov
cwtl
fnstsw
jnp
inc
rcrb
popf
jge
test
test
neg
orl
ja
lea
je
push
icebp
push
iret
cmp
mov
push
hlt
mov
mov
rcll
ljmp
sar
in
sbb
shlb
jmp
mov
inc
push
xchg
or
dec
pop
add
adc
lahf
mov
movsl
clc
lock
in
ljmp
cmp
outsl
push
jb
or
das
xchg
push
or
cmpsb
sub
sti
xchg
push
inc
jmp
mov
jb
ljmp
fisttpll
sbb
pusha
in
xchg
adc
gs
inc
and
sbb
push
les
mov
loopne
push
mov
and
orl
fdivrl
arpl
loop,pn
jmp
push
or
cmp
jno
ret
sub
rcl
das
adc
jp
movsb
repnz
std
xchg
stos
inc
je
and
pop
mov
xchg
int
mov
mov
xor
xor
insl
es
ss
jecxz
and
push
sub
jne
int3
sbb
push
xchg
sbb
cs
leave
mov
mov
xor
fs
mov
pop
jle
mov
int
jns
and
out
mov
add
push
xlat
lcall
sbb
xchg
mov
aad
insl
and
pop
xchg
pop
xlat
inc
inc
call
fisttpll
cmp
jle
cltd
fsubp
jno
inc
aam
repz
sbb
test
and
stos
xor
mov
add
and
or
je
sub
or
repnz
js
sub
inc
add
sub
push
ret
repz
adc
or
pop
arpl
xor
or
xchg
push
mov
ds
bound
jae
mov
outsl
push
into
add
jns
movsb
xchg
movsb
dec
pop
in
add
iret
out
fwait
movsl
add
mov
scas
mov
cmp
scas
cmp
aas
cld
fdivrl
inc
sub
mov
push
sti
iret
fwait
sub
insl
or
aas
cmp
outsl
xchg
orl
add
out
loope
or
test
xrelease
jno
pusha
cmc
int
adc
loopne
dec
dec
xchg
xchg
lahf
jnp
sahf
inc
sbb
mov
mov
xchg
imul
lods
scas
shlb
pop
lods
or
cmp
xchg
shr
sbb
out
mov
in
xchg
pushf
out
loope
push
mov
mov
test
imul
or
jge
sti
call
xchg
fiadds
cmp
xor
push
ds
add
pop
lock
fisttps
xchg
out
jo
xchg
pushf
loop
insl
dec
ja
and
push
jl
loop
data16
mov
cmpsb
add
movsl
adc
mov
cmp
mov
add
jo
dec
out
xor
sub
sub
iret
ss
push
mov
push
lcall
mov
out
pop
xchg
sbbl
pop
cmpl
aam
test
cmpsb
mov
daa
or
adc
adc
sub
inc
aad
imul
aas
mov
mov
sbb
xchg
push
fs
in
xchg
xorb
sahf
xchg
je
pusha
xrelease
xchg
repnz
aam
ja
jg
push
mov
cmp
divb
mov
insl
push
jbe
fistpll
cld
mov
outsl
in
inc
sub
and
dec
cmpsb
jp
lret
lods
inc
mov
cltd
mov
aas
daa
ret
mov
nop
imul
std
or
xchg
pop
ficoml
test
call
dec
dec
mov
xchg
lret
jmp
ret
fidivl
mov
sbb
mov
rcl
pop
lret
dec
mov
pushf
and
add
cmpsl
rcll
push
add
and
dec
loope
sbb
mov
jae
mov
mov
inc
stos
mov
xchg
jp
xchg
jg
int3
push
sbb
sbb
stos
sub
mov
sub
das
dec
je
cmp
jbe
aas
mov
push
rcrb
xchg
add
push
pushf
cli
in
cmp
pop
outsl
ljmp
cli
fistpl
jo
push
test
cmp
mov
js,pn
int3
add
ret
mov
xchg
imul
int3
fistpl
mov
icebp
push
fldcw
lret
lcall
sub
xor
loopne
fisttpll
add
cmc
les
cmpsb
push
mov
xlat
sub
xchg
and
int
ret
mov
push
jno
js
dec
inc
loope
cmp
add
add
aaa
push
pop
shll
gs
push
jg
sub
stos
loop
repz
push
mov
int3
add
scas
mov
cmp
outsb
mov
outsl
push
push
push
andb
mov
insl
sub
imul
pavgb
mov
dec
repnz
adc
clc
xchg
fs
test
mov
xor
fcoms
faddl
ds
ret
xor
dec
jne
out
push
cmp
sti
push
adc
add
inc
push
fdivl
in
mov
aaa
stos
push
cld
pop
lret
int
sbb
push
outsb
cmpsb
enter
lahf
or
dec
fisubrl
int3
mov
sti
xchg
test
in
cmp
mov
push
pop
scas
stos
pop
sub
jno
mov
jle
sub
pop
and
test
jecxz
cld
nop
mov
jl
or
mov
mov
push
sbb
ljmp
sti
popl
xor
xchg
push
pop
lock
movsb
inc
loope
clc
insb
mov
incl
or
jmp
or
push
cs
mov
cld
mov
loope
and
lods
sbb
push
scas
mov
imul
pop
xor
std
cwtl
mov
mov
sbb
bound
cmp
ljmp
mov
mov
or
pop
negb
popa
sub
adc
popa
test
rorl
loop
aam
lret
pop
sub
push
push
aas
sub
dec
out
sub
xorb
push
pushf
xchg
and
add
mov
hlt
lcall
data16
sub
xchg
pop
and
je
adc
inc
push
jmp
add
mov
aas
loopne
mov
ja
in
sbb
lock
cmp
scas
inc
mov
add
out
dec
test
mov
sbb
xchg
xchg
clc
mov
fisubrs
push
out
xchg
call
add
pop
ret
and
xor
jle
pop
icebp
mov
sbb
out
or
addr16
test
jecxz
sahf
loop
mov
add
mov
jp
in
fisubs
sbbl
movsb
ret
pop
int
or
sub
adc
dec
or
in
mov
xor
mov
inc
lock
stos
xor
pop
into
push
jne
jbe
sub
cs
in
ffreep
push
sub
mov
jb
add
pop
xchg
add
fstpl
mov
add
mov
mov
je
pop
sbb
jl
imul
ficompl
test
inc
lret
push
cmp
add
repnz
enter
xchg
int
call
cmpsl
popa
mov
and
or
lods
insb
popf
push
sbb
sbb
mov
xlat
popf
sarb
jns
es
xchg
xchg
dec
gs
nop
or
movsl
sbb
sub
push
cmpsb
fs
xor
adc
pop
jl,pn
add
inc
cmp
imull
fidivl
or
cld
or
mov
test
mov
mov
popa
and
push
lock
pop
push
jl
jg
and
inc
fimull
ds
xchg
mov
aas
cmp
div
pop
push
stos
pop
cmp
sub
xlat
mov
in
fisttpl
sub
xor
xchg
mov
rorb
fxch
popf
dec
xlat
sub
jmp
pushf
mov
pusha
sub
inc
lret
sbb
out
or
mov
jecxz
mov
idiv
push
jno
dec
add
inc
add
inc
sbb
push
push
add
flds
dec
out
dec
xor
fdivs
add
stc
sbb
dec
in
inc
cmpsl
cmpsb
and
inc
gs
jecxz
add
dec
mov
inc
fldt
or
out
fsubrl
test
lea
notb
lahf
loope
fs
mov
ljmp
sub
fdivl
pushf
popa
scas
rol
mov
mov
int3
dec
jb
repnz
xor
mov
addr16
decl
xor
out
dec
sbbb
lret
mov
scas
test
ficomps
xor
pusha
aad
mov
cmp
pop
jae
popf
jecxz
jns
aad
push
cmpsb
loope
dec
inc
out
in
xchg
clc
xchg
dec
stos
fcoms
push
movsb
jnp
popl
sub
idivl
jmp
aad
cmc
sbb
sbbb
icebp
jo
out
mov
in
adc
hlt
pop
in
pop
mov
push
pop
push
jecxz
mov
push
mov
mov
int3
fdivrs
test
adc
ja
loope
mov
or
lcall
xchg
insl
jmp
push
shlb
pop
xchg
push
inc
dec
jmp
das
mov
inc
pop
mov
je
push
jns
sti
lret
sahf
xchg
push
iret
pop
fildll
xchg
mov
dec
movsb
loopne
jg
jae
pop
mov
cmc
xchg
cltd
dec
call
in
and
sbb
jns
push
clc
dec
push
popa
xor
and
jb
daa
cmp
rcll
or
out
in
adc
mov
js
outsb
das
test
push
popa
stc
clc
subl
cld
aad
cmp
pop
jmp
outsl
addb
pop
xor
push
jl
adc
adc
outsb
inc
fnsave
xchg
into
leave
cmp
cmpsb
sbb
mov
mov
push
inc
xor
mov
popa
hlt
cmp
cmp
fidivrs
mov
scas
fdivrp
cmp
pop
jae
in
add
int
add
outsl
sub
mov
mov
xchg
mov
fistps
inc
popa
xor
cwtl
call
mov
sub
jb
mov
add
mov
adc
addr16
test
add
xor
imul
loope
jnp
sbb
shll
mov
int
inc
mov
aad
cmp
fstpl
inc
aam
dec
push
std
mov
pop
mov
jmp
notb
or
pop
and
fimuls
mov
fcom
lods
xor
inc
aam
out
and
jl
adcl
cs
cmpb
push
push
mov
sahf
fldl
ss
lock
pop
jno
mov
ds
jbe
mov
sarl
or
push
mov
pop
adc
stc
iret
jp
dec
add
inc
jp
in
adc
xchg
inc
mov
outsl
fsubrp
movsl
inc
fisttpl
in
fisttpll
filds
test
xor
repz
inc
mov
dec
out
pop
jne
das
cmpl
ljmp
out
mov
mov
jg
and
mov
xor
ds
xlat
les
ret
mov
lods
sahf
rcr
xchg
lods
inc
inc
pushf
xor
jmp
push
and
sbb
sub
cmp
add
inc
or
out
inc
push
aam
rorl
and
aad
mov
lods
sbbb
ds
pop
jns,pn
call
inc
sarb
test
dec
cmp
push
orb
insl
xchg
cbtw
pushf
cmp
xor
mov
in
xlat
nop
repnz
test
mov
or
shrl
addl
icebp
push
rcrb
cmpsl
add
shrb
pop
stos
roll
stos
lahf
int
jbe
fistpl
lods
data16
dec
lock
dec
xchg
sbb
nop
call
xor
mov
add
pushf
pop
fstpl
mov
sti
mov
push
mov
xchg
mov
inc
imul
mov
inc
stc
rcrl
add
or
pushf
fsubrs
jecxz
xchg
addb
sub
pop
dec
add
cmp
and
mov
fcomps
dec
iret
cmp
or
sahf
cmp
jae
or
scas
dec
sarb
into
sub
imul
jg
imul
mov
mov
sub
sub
lods
popf
nop
or
fbld
popa
ret
adcl
mov
push
in
aaa
push
cs
jne
fiadds
in
add
rcll
push
push
cmp
jne
inc
mov
sbb
push
pop
jne
mov
nop
adc
pop
outsl
or
xor
or
int
xchg
pop
and
mov
adc
iret
xchg
xorb
daa
sbbb
lret
cltd
call
push
and
or
xchg
lods
sub
xor
fidivs
insl
pop
jb
loopne
mov
add
into
pop
xorl
xchg
bound
pop
jecxz
or
fs
test
mov
cmc
outsl
sub
xchg
pop
shlb
mov
mov
cmpsb
cmc
jl
lret
cli
inc
fisubl
out
mov
rolb
icebp
aam
int
mov
out
aam
inc
pop
adcb
sti
imul
xor
jecxz
fistl
mov
pop
test
jne
es
insb
push
mov
mov
pusha
popa
lds
xor
je
loopne
mov
adc
xchg
clc
mov
pop
mov
dec
xchg
xor
in
pop
imul
xor
mov
xchg
je
andb
jbe
clc
xchg
mov
ficomps
cmp
sub
arpl
inc
rorb
jnp
cli
dec
test
loopne
rorb
ljmp
cmp
lret
leave
pop
das
cmpsl
mov
push
js
mov
jae
out
insl
addr16
pop
jo
cmp
add
loop
xor
sahf
call
jge
add
and
jmp
cmovae
jne
and
fisubl
lahf
insb
push
in
and
loope
mov
push
and
test
dec
and
imul
loope
ficoms
dec
inc
xchg
and
pop
arpl
repnz
ret
dec
pop
out
and
push
adc
mov
imul
js
je
jb
xor
iret
sub
cmpb
pop
xor
in
pop
sarl
add
xor
icebp
sub
add
pushf
cmpsb
fstpt
mov
and
adc
lahf
pop
les
aaa
sub
jl
hlt
inc
cmp
inc
imul
mov
insl
xor
mov
mov
pop
repnz
xchg
xchg
comiss
es
iret
mov
mov
scas
or
arpl
push
sbb
das
fwait
andb
adc
lcall
imul
or
ret
mov
repnz
push
mov
lods
rcr
xor
rcrl
cmp
gs
popf
jl
xchg
xchg
pop
call
shlb
stc
xor
push
in
add
or
mov
rcll
lods
jge
dec
jae
lret
and
add
fidivl
inc
scas
or
leave
push
fcoms
jnp
and
adc
mov
das
adc
scas
sbb
push
test
mov
aad
ret
scas
cmp
nop
int3
shlb
cmp
cwtl
mov
cltd
push
out
out
inc
cld
add
aas
xor
pop
aas
adc
ret
aaa
imul
nop
jg
cmpsl
pop
dec
out
pop
das
loopne
aas
inc
pop
cs
xchg
pop
shrl
les
stc
jae
pop
aam
lock
scas
xor
rclb
jle
cltd
scas
out
ret
sub
paddq
pusha
xor
mov
ss
fstpt
popa
push
sub
jne
fcmovnb
pop
clc
sarb
jge
pop
mov
add
push
cmpsb
adc
push
cltd
jmp
add
cmp
ficompl
and
pop
mov
or
rcll
or
xchg
sub
jnp
lds
adc
in
add
mov
push
mov
adc
mov
mov
mov
loop
dec
cltd
popa
hlt
xchg
mov
add
sub
mov
icebp
aas
lret
imul
mov
clc
sub
adcb
push
push
fwait
mov
adc
mov
jnp
out
movsl
dec
mov
inc
mov
fldenv
imul
out
and
cld
or
inc
into
jl
cmp
cmpsl
ret
xchg
adc
add
adc
and
sbb
ss
pop
in
mov
cmp
les
dec
mov
popf
xchg
push
rcrl
shrb
and
jle
xor
fsub
mov
mov
push
or
cmp
int3
pop
rcll
loop
nop
in
mov
jnp
std
mov
cli
paddsw
xlat
in
and
sahf
xor
fndisi(8087
fwait
sbb
orb
clc
fs
add
sahf
loopne
push
adc
sbb
orb
lret
js
into
decb
adc
scas
enter
arpl
test
mov
xor
push
pop
ds
jecxz
rclb
cmp
nop
xor
inc
lret
lret
fcoml
dec
fsub
call
jmp
or
push
xchg
add
es
iret
push
lahf
insl
lea
test
lock
push
cmp
in
stc
xor
js
or
inc
stos
sub
arpl
push
es
or
sub
stos
xor
xor
orl
xchg
mov
rolb
mov
dec
sbb
out
ljmp
sbb
call
lahf
jnp
push
cmovo
sub
call
xor
xchg
movsb
hlt
lds
push
addb
mov
insb
test
lods
adc
sbbl
es
movsb
test
iret
cmc
cmc
xchg
aaa
adc
pop
in
adcb
les
push
out
sahf
push
adcl
data16
lds
movsb
jg
addr16
insl
pop
xchg
adc
pop
cmp
sub
out
out
test
xchg
lcall
gs
loopne
mov
xor
xchg
stos
bound
outsb
sbb
dec
fxam
mov
add
push
fistl
int3
pop
inc
pop
mov
rcrl
add
xchg
and
daa
mov
jmp
popf
ljmp
lods
xchg
and
jno
sar
pop
sbb
stc
add
jp
in
mov
repz
mov
lcall
and
add
lret
xchg
pop
into
push
mov
dec
pop
inc
popw
adc
sub
data16
xchg
daa
adc
adc
jge
clc
bound
scas
lret
cmp
cmp
nop
mov
and
je
or
cs
sbb
sbb
dec
pop
mov
das
shlb
cmp
push
lret
or
imul
lcall
adc
push
cli
or
mov
mov
and
cwtl
mov
add
adc
pop
test
out
std
loope
movsb
gs
bound
out
mov
add
jmp
in
rol
repz
xchg
jg
imul
into
in
or
lds
jg
xchg
dec
mov
jecxz
lds
lods
loope
fisttpll
jle
mov
imull
in
rorb
or
sub
stc
out
fisttpl
orl
cmpsb
fisttpll
insb
es
insl
push
das
cmp
xchg
test
nop
adc
push
dec
add
or
jecxz
arpl
xchg
sarl
push
mov
ret
mov
rolb
jmp
loopne
js
push
dec
and
sbb
xchg
cmp
mov
cmp
xchg
sbb
cli
sub
sbb
ret
xchg
stc
xor
outsb
sti
ret
clc
les
pop
dec
push
or
outsl
clc
sub
pop
add
and
push
ss
cwtl
test
test
stos
xchg
mov
sbb
int3
mov
or
xchg
fwait
push
insl
ret
add
mov
icebp
dec
adc
in
fwait
mov
clc
push
lret
mov
enter
sti
bound
aam
mov
mov
dec
fcomps
insb
push
and
jae
sbb
cli
or
andl
mov
dec
mov
add
daa
sbb
add
stos
pop
enter
ret
fadd
in
dec
and
bound
loopne
lds
add
and
add
mov
int3
cld
xchg
lret
movsb
cmp
jge
int
test
jmp
and
ljmp
sub
roll
sbb
sbb
idivl
sti
cmp
test
addr16
push
and
sub
aas
push
roll
dec
add
jg
fistpl
mov
cmpsb
push
mov
xor
push
mov
dec
mov
sar
movsl
mov
jb
lcall
sub
fdivrp
pushf
mov
sbb
gs
in
inc
sar
push
ret
pop
jns
inc
adc
orl
and
nop
test
mov
sbb
andps
movsb
pop
sbb
jb
add
rorb
loopne
inc
inc
popf
jns
aaa
push
insl
lcall
aad
test
jbe
mov
test
sub
xchg
ret
jmp
dec
idiv
insl
fwait
jne
lea
sub
lods
mov
into
mov
int
je
insl
jne
xor
iret
add
shlb
adc
into
faddl
sbb
hlt
mov
dec
stos
adc
iret
cs
pop
inc
jl
inc
js
into
repz
hlt
jge
cmp
out
lret
int
std
lahf
scas
jl
jge
es
mov
mov
lahf
jns
jl
es
adc
loope
jp
jecxz
enter
out
popf
out
push
fnstsw
or
ss
add
pop
cmp
cwtl
lods
push
es
out
test
aam
jnp
ret
pop
pop
cltd
jae
push
xor
mov
dec
rclb
push
mov
xbegin
sbb
popa
aaa
push
repnz
mov
and
xchg
cmp
outsb
loopne
jmp
xchg
sub
rcll
push
xchg
test
in
xchg
or
and
das
xor
cwtl
clc
stc
or
and
cmc
mov
push
inc
mov
cmp
shrd
insl
outsb
lea
pusha
neg
loope
jae
or
int3
aas
movsb
sub
test
mov
dec
mov
mov
xchg
rcrb
cmp
fisubl
mov
push
je
ss
cmpsb
stos
test
push
xlat
inc
xor
cmpsl
ljmp
int
or
sbb
insb
cmp
push
add
aam
lret
rorb
fcmove
adcl
dec
jge
sbb
xor
hlt
in
pop
or
xchg
mov
aam
xchg
add
insl
aad
mov
mov
xchg
inc
je
pop
push
jl
dec
ror
or
push
fildll
sbb
xchg
push
jg
das
fimuls
lret
xchg
push
call
pop
es
inc
call
imul
lods
inc
popf
setns
fists
inc
mov
cmc
push
jg
push
adc
cmp
mov
enter
stos
fxtract
jno
test
rcrl
add
jg
push
sbb
and
dec
sub
sub
pusha
loop
sbb
aam
xor
ret
sbb
test
xor
insb
xor
test
jae
xchg
dec
insl
cld
xchg
xchg
adc
cmpsl
lods
mov
adc
sbb
mov
test
jle
add
out
push
and
out
xchg
and
in
pop
lahf
icebp
add
sub
stc
les
scas
in
pusha
test
xchg
shll
inc
enter
ljmp
leave
icebp
add
pushf
lods
in
in
dec
dec
or
push
jg
movsl
lods
cmpl
sti
cs
ja
rcll
xchg
xchg
nop
sbb
ljmp
pop
out
pop
push
jmp
incb
mov
std
roll
repnz
or
sbb
pushf
test
sbb
pop
fiadds
ds
ror
sub
lds
lret
inc
hlt
push
pop
idiv
movsb
xor
rolb
stos
outsb
inc
push
jns
push
fwait
into
int
push
cwtl
pop
shll
dec
jp
sti
mov
jbe
pop
xor
push
ja
cltd
aad
and
ret
loop
ljmp
scas
jmp
dec
jbe
jg
orb
push
shr
sbb
or
cmp
mov
test
add
in
dec
cmp
xchg
xchg
jp
es
mov
mov
cld
sub
cmp
lea
or
or
pop
in
lahf
cs
fsts
mov
sahf
rcrl
push
push
pop
idivl
ret
push
loopne
mov
xor
dec
pushf
add
lret
ret
jnp
mulb
mov
ds
fisttps
mov
and
ljmp
add
int
jo
hlt
fwait
ja
mov
insl
jb
les
inc
cs
sahf
mov
test
rorl
sub
inc
cli
in
cmp
cmp
inc
ljmp
sbb
sub
out
es
stc
push
jge
xor
out
into
adcb
lahf
pushf
insb
and
sbb
jo
and
or
gs
and
jns
xchg
ja
in
imul
movsb
lods
push
mov
les
nop
adc
dec
pop
call
fst
dec
cmpsl
or
mov
aam
lret
outsb
jbe
loope
xor
mov
cli
movsl
sbb
adc
hlt
jle
sub
outsl
dec
xchg
in
lret
sahf
jl
sub
cmpsb
lahf
test
sbb
mov
subl
jb
in
mov
movsb
stos
or
clc
mov
xchg
xchg
fiaddl
inc
dec
jne
lods
adc
jae
fs
xchg
fadds
data16
fldcw
pushf
adc
jmp
ds
aas
leave
outsb
fs
movsb
lea
mov
test
test
popf
sbb
pop
ds
sbb
bnd
pop
xchg
mov
add
lret
insb
adc
dec
gs
jno
sbb
xchg
lcall
data16
mov
push
cmpsb
push
lock
mov
aas
hlt
sbb
cwtl
jbe
pop
pop
fcoml
popf
clc
enter
mov
rcr
xor
push
pop
push
dec
push
cmp
dec
in
pop
sarb
popa
push
mov
push
repz
and
mov
cmp
fwait
inc
pop
push
pop
mov
enter
jmp
pop
or
jecxz
adc
mov
add
xchg
loope
push
mov
cmp
hlt
pop
cmpsb
add
push
in
jmp
push
movsb
inc
in
adc
imul
imul
adc
fmull
mov
fldcw
test
mov
aam
adc
xor
outsb
lods
xchg
bound
nop
ljmp
and
push
cmpsl
shl
pop
jne
aad
sahf
xor
ret
sar
inc
xchg
mov
push
repz
int3
and
jmp
stos
dec
and
lahf
adcb
adc
in
push
xchg
sbb
xor
dec
and
shll
lcall
sbb
call
jb
lahf
mov
push
enter
xchg
dec
mov
and
jl
aad
sbb
sub
stc
mov
jbe
loop
xchg
sbb
push
rcrb
outsb
lcall
add
mov
gs
add
adc
es
xor
lods
cmpb
mov
gs
xchg
cmpsb
in
sbb
pop
and
in
clc
sbb
mov
lahf
push
xchg
jb
loopne
mov
or
mov
in
test
and
add
dec
popf
dec
xchg
aas
mov
cmp
fs
mov
mov
xchg
jp
imul
inc
das
icebp
mov
jecxz
pop
sub
inc
mov
lret
xor
or
xor
imul
iret
ficoml
rclb
mov
pusha
rcll
push
arpl
and
es
addr16
adc
movsb
inc
xor
jecxz,pn
or
out
xchg
pop
jbe
sbb
add
jb
arpl
data16
popf
xchg
lcall
loope
lret
fs
dec
dec
mov
mov
fwait
movb
mov
mov
int
xlat
jmp
cmpsb
js
popa
fs
and
lahf
fldcw
or
stos
sub
pop
test
jns
jno
and
xchg
push
inc
loope
ljmp
bnd
leave
inc
leave
cmc
dec
data16
arpl
inc
popf
mov
lea
sub
inc
pop
insb
out
xchg
mov
addr16
mov
dec
cld
imul
gs
test
and
les
or
sahf
adc
pop
out
mov
stos
in
and
addl
jge
cmp
test
pop
dec
mov
push
mov
outsl
es
bound
xor
pop
sahf
jle
cmp
es
fsubl
xorl
and
hlt
sbb
aam
push
aas
sarb
add
leave
inc
push
xlat
les
jle
outsl
inc
sti
fbstp
fwait
mov
mov
jnp
testl
fcompl
loop
movsb
mov
subl
cmp
enter
pop
dec
shld
inc
xor
ret
pminub
aad
jle
icebp
adc
dec
adc
cs
fstl
ja
repz
push
or
push
add
lea
sub
ja
inc
rorb
insb
test
jns
pop
cs
sub
jns
into
push
mov
xorb
ret
lock
movsl
ret
int3
int3
lods
frstor
dec
fdivp
cld
lahf
addr16
or
stos
lea
xchg
dec
xor
pop
mov
out
mov
push
mov
out
ror
sbbl
mov
pop
jl
ret
jecxz
fldenv
or
shlb
or
xchg
pusha
repnz
jecxz
repnz
inc
xorb
mov
sub
jmp
sub
sub
outsl
dec
shl
xor
xchg
cmp
mov
pop
mov
aad
xor
sbb
repz
push
add
gs
bound
pop
rcrl
xchg
es
iret
mov
push
push
push
xor
xor
shlb
mov
js
mov
cmpsl
xor
in
pop
pop
repnz
mov
mulb
mov
adc
lea
pop
repz
scas
add
xchg
sub
loopne
bound
xlat
inc
mov
sti
pop
stos
jle
mov
or
cmp
loope
stc
sti
lods
mov
dec
std
jbe
repz
in
pop
or
jno
leave
or
icebp
mov
push
inc
dec
sub
xchg
dec
lret
insb
popf
mov
imul
cs
mov
cmp
dec
nop
mov
int3
aas
arpl
fcmovu
sarl
sub
xor
dec
or
iret
cmp
fnstsw
adc
gs
cli
repnz
sbb
pop
jmp
shr
sbb
xor
enterw
das
push
ljmp
sbb
push
lahf
lcall
push
xchg
in
jl
test
jb
inc
sbb
cld
loopne
sbb
add
out
daa
in
lds
popa
or
mov
mov
notl
adc
mov
mov
ljmp
or
ljmp
cltd
mov
out
and
stos
dec
and
scas
test
sbb
push
pop
jb
clc
push
push
adc
orb
xlat
mov
movsb
jecxz
ds
mov
push
or
insl
add
daa
enter
pop
outsl
mov
mov
js
mov
sbb
fdivs
and
icebp
sub
dec
push
jb
push
jecxz
adcb
fcmovnu
imul
adc
adc
cmpsl
sbb
repz
mov
add
loopne
sbb
adc
or
test
lahf
ret
push
cmp
or
dec
xchg
jno
scas
lret
push
and
lea
xor
insl
test
daa
adc
repnz
cmp
xor
jne
ret
jae
mov
xchg
mov
stos
cmpsb
cld
jge
mov
dec
cmp
jne
mov
mov
add
stos
dec
jmp
and
or
sub
dec
popf
lea
mov
sub
out
inc
sbb
sub
lock
shlb
inc
loope
xor
and
inc
add
or
xchg
test
cmp
idivb
nop
iret
inc
inc
out
mov
xchg
popa
jnp
testb
fildll
pop
jae
xlat
insl
xor
jne
inc
rcr
aas
mov
adc
cwtl
mov
mov
aam
jno
push
jo
inc
pop
cmc
loopne
movsb
xchg
lock
daa
in
inc
cmp
shlb
adc
icebp
pop
sbb
arpl
mov
ljmp
adc
aad
jnp
js
and
mov
xchg
sub
jbe
repnz
hlt
cs
push
sahf
jp
leave
jmp
and
lcall
loopne
fistpl
mov
sub
repnz
lret
dec
dec
test
ljmp
dec
jno
ljmp
cs
adc
mov
loope
outsl
push
cmpsb
and
out
pop
shr
lea
xchg
in
inc
add
loopne
call
sbb
mov
hlt
mov
mov
test
cmp
xchg
fwait
xchg
repnz
shrl
lret
in
jae
inc
mov
repnz
add
enter
pop
sub
movsl
push
sub
int3
js
stc
sahf
mov
aaa
adc
xor
shrl
cli
mov
rcrl
xchg
pop
jecxz
jne
mov
fwait
dec
xor
mov
jbe
ja
iret
pop
fidivl
imul
pushf
icebp
mov
popa
gs
lods
lret
pushf
add
push
sbb
mov
les
daa
cli
pop
push
ja
jecxz
insb
mov
pop
jne
push
xor
test
and
out
jge
adc
cmc
loope
pop
inc
dec
push
jmp
aaa
mov
mov
pop
dec
mov
jno
dec
hlt
ret
out
push
mov
push
je
jno
iret
inc
mov
and
stos
mov
cli
pop
jg
sahf
loope
xchg
cmp
clc
mov
fisubrs
aas
movsl
imul
mov
adc
das
mov
ficoml
lods
push
daa
andb
jo
test
adc
clc
pop
mov
dec
dec
adc
xchg
dec
inc
adc
lahf
filds
xchg
cli
call
or
addr16
push
sub
fisttpl
sub
sbb
fiaddl
cmp
jge
clc
test
dec
lret
xchg
lds
or
pusha
clc
addb
mov
mov
loope
hlt
sbb
loopne
cmpsw
xchg
or
loopne
and
cmp
imul
into
std
shll
xchg
negb
mov
pop
push
mov
ror
pop
aaa
dec
cmp
shrl
push
pop
shll
pop
inc
stos
add
or
addr16
mov
ljmp
out
mov
pushf
insb
pop
lcall
outsl
fnstsw
out
xor
and
mov
xchg
sbb
xor
dec
in
jle
inc
into
jge
push
pop
xor
dec
daa
outsl
push
and
or
cmp
sub
test
sub
cltd
popa
sti
shlb
cmp
lret
push
mov
pop
das
xchg
ja
mov
lgs
cwtl
sbb
and
inc
rcll
push
js
outsb
js
data16
insl
pop
inc
sub
call
push
popa
sti
rolb
test
push
dec
stos
pop
andb
pop
mov
out
test
add
cli
icebp
or
lods
lret
gs
pop
xchg
scas
aaa
pop
cmp
push
imul
cwtl
nop
fimuls
dec
dec
adc
inc
pop
push
pusha
out
aam
or
out
mulb
sbb
test
test
testb
xchg
dec
xor
repnz
mov
aad
ljmp
cmp
enter
nop
mov
out
mov
jp
mov
out
iret
movsl
es
enter
movb
and
stos
pushf
sbb
push
and
mov
mov
xor
mov
fucom
sbb
push
jbe
mov
das
xchg
add
filds
push
push
test
ror
xchg
add
call
push
xchg
mov
dec
cs
xor
fs
clc
jge
inc
push
sub
adc
cmp
sbbl
in
mov
in
sti
jl
cld
out
mov
repnz
add
sbb
repz
xchg
repz
jbe
negb
aam
je
dec
aaa
imul
lcall
ljmp
jl
pop
nop
imul
mov
push
push
mov
fisttps
and
xor
test
cltd
hlt
push
das
and
pushf
push
sub
push
mov
cmp
xchg
call
popa
outsb
loopnew
enter
adc
test
lods
fsubrl
xchg
mov
push
inc
fisttpll
pusha
out
push
jmp
add
popa
jge
xchg
or
mov
mov
or
les
sarl
cmp
repz
cmpl
adc
daa
in
sub
aaa
out
push
test
xchg
jo
iret
push
nop
enter
mov
std
es
pop
out
bound
ret
mov
cltd
addr16
and
fdivr
xchg
inc
mov
inc
sti
scas
add
mov
gs
mov
xchg
ds
mov
call
or
call
rcrl
popa
aaa
sub
insl
mov
rcrb
jns
and
in
lods
popf
insl
shl
test
and
addr16
pushf
scas
sbb
mov
or
orl
int3
or
enter
popf
leave
lock
fwait
jecxz
movsb
sbb
inc
test
and
jns
lahf
adc
mov
dec
adc
and
andb
jae
push
mov
jo
js
sti
pop
fisubrl
mov
aaa
mov
mov
in
fadds
or
je
hlt
jl
rorb
loope
or
mov
jge
fildll
mov
xchg
add
add
subb
es
jb
pop
stos
jge
data16
xchg
fsubr
out
mov
ret
iret
outsb
mov
cld
jns,pn
push
push
ficomps
jbe
dec
lret
enter
and
inc
shl
add
into
and
pop
inc
mov
jg
test
lods
enter
fs
xor
xlat
dec
adc
repz
inc
xorb
inc
dec
outsb
idivl
mov
sar
xchg
js
repz
bound
scas
or
cltd
out
jno
loop
mov
add
sarl
leave
cwtl
and
dec
das
sub
movsl
or
dec
jnp
mov
les
lcall
inc
std
xor
jl
sarb
movsl
sbb
aad
mov
ret
mov
loope
push
mov
lds
movsl
xchg
ljmp
sbb
jns
jo
ret
lock
pop
testl
negl
jecxz
and
mov
fs
inc
pop
or
stos
adc
xchg
in
cmp
mov
pop
mov
aad
mov
stos
mov
gs
ficompl
or
das
cmove
and
jp
or
mov
sub
mov
repnz
movsl
sahf
push
and
pop
scas
jmp
xor
mov
aas
divb
mov
push
mov
xlat
gs
cmp
movsl
iret
pop
ficoms
data16
pop
fisubrl
out
popa
sub
jmp
into
mov
adc
sub
dec
repnz
aam
and
imul
mov
repnz
cmc
ljmp
jns
scas
pop
lods
pop
scas
insl
incb
push
xor
jl
xor
fwait
dec
xchg
pop
fwait
add
das
jg
lahf
or
push
sbb
cmp
into
dec
sub
shll
mov
clc
dec
sti
scas
pusha
xor
test
rorl
sub
adc
popf
add
pop
or
adc
fstl
adc
sbb
les
in
inc
sbb
push
xor
je
movsb
xor
popf
xchg
pop
sahf
adc
mov
lahf
pusha
insl
cmc
mov
jecxz
xchg
push
push
push
lcall
pop
nop
mov
sbb
mov
out
dec
adc
ret
insl
xchg
and
ja
pop
loopne
repz
xchg
jl
sub
mov
add
pop
lahf
std
lahf
sbb
in
fs
mov
les
sub
lahf
sbb
jns
ja
xor
sbb
adc
sub
rcrb
sahf
pop
push
cltd
adc
nop
out
fadds
inc
add
pop
sub
loopne
iret
mov
sbb
push
nop
std
int
mov
das
loope
mov
psignb
mov
dec
jmp
lcall
lret
mov
xchg
mov
lret
pop
push
mov
ja
dec
jnp
sub
cmpl
push
movsb
cmp
test
mov
mov
mov
ficoms
out
out
sub
or
mov
outsb
das
mov
xchg
or
test
adc
fdivs
push
cmp
mov
and
sub
pop
imulb
jb
cmp
fsubrl
inc
xchg
cmp
xchg
hlt
repnz
inc
adc
sbb
sub
push
nop
mov
lea
aam
push
hlt
add
mov
ret
xor
mov
xor
sti
xor
aaa
push
cltd
int3
add
imul
sub
out
test
in
pop
dec
dec
dec
pop
or
andb
fstpl
repnz
mov
add
imul
or
add
in
ja
sub
js
out
repnz
loope
or
dec
movl
rcrl
decl
loopne
xor
sbb
outsl
cmp
xchg
pop
loope
lret
xchg
xor
and
scas
cmpsb
push
pusha
push
popa
ljmp
sbb
cmp
in
mov
mov
sahf
lods
pop
xchg
popa
and
scas
in
xchg
add
lret
mov
push
mov
pop
and
pop
jns
mov
sub
jno
mov
pushf
not
add
or
repz
scas
mov
aam
mov
xchg
pop
je
xor
push
xchg
aad
mov
mov
shlb
adc
adc
pop
imul
xchg
push
leave
in
nop
shlb
scas
mov
inc
hlt
cmpsb
es
pop
lds
xor
pusha
loopne
andb
xor
mov
mov
cmp
sbb
cmc
add
repz
imul
or
loop
enter
stos
lret
and
adc
fidivs
push
mov
cmp
std
stos
fs
and
imul
pop
mov
sbb
adc
mov
dec
addr16
add
cmp
mov
dec
int3
lock
sub
loop
pop
xchg
mov
shll
add
xor
pop
mov
mov
push
mov
cmp
jg
xchg
jecxz
mov
jle
mov
add
testl
movsl
mov
jge
add
repnz
adc
push
lock
repz
xlat
dec
push
xchg
outsl
jl
or
or
into
cmpsb
sbb
mov
add
add
cmp
and
aas
gs
pop
in
xor
xchg
cwtl
mov
shrl
ret
aas
das
popf
push
shr
mov
push
jecxz
lret
loopne
enter
icebp
loope
adc
loope
jo
sub
cmp
pop
aaa
mov
in
lahf
push
and
dec
int3
ret
mov
mov
and
and
insb
inc
inc
xchg
mov
repnz
adc
lret
and
imul
jae
xor
xchg
or
mov
gs
jo
in
jmp
stos
or
xchg
or
pop
jecxz
repnz
enter
xor
jne
mov
cmp
rcrb
xor
mov
push
outsb
xchg
xor
jnp
cmpsl
and
fadds
daa
xor
fmuls
imul
daa
popa
into
aas
mov
outsl
data16
or
or
jge
popa
mov
mov
mov
ret
mov
je
inc
or
mov
pushf
lret
imul
pop
fsts
arpl
out
fdiv
inc
mov
fldl
jl
sub
stos
jo
popf
xlat
in
loop
outsb
xor
push
add
push
jb
inc
into
in
and
pop
mov
divb
dec
inc
call
movsl
cmpsb
cmpl
insb
lock
sbb
add
scas
mov
ss
mov
jp
stos
ja
jecxz
cmp
pusha
imul
xor
push
negl
cmp
stos
cwtl
sbb
fldl
jp
shl
mov
mov
daa
add
xor
test
js
sbb
movsb
in
ret
jge
imul
sbb
push
int
mov
cmpsl
jge
outsb
xchg
sarb
cmp
test
xchg
dec
mov
fcmove
adc
shlb
test
mov
pop
xor
ficoml
adc
rcrl
sub
mov
xchg
pop
dec
or
aaa
scas
ror
in
inc
cmp
rcll
loop
popa
push
lds
sti
xchg
call
inc
cld
cs
sbb
mov
pop
jns
lahf
neg
add
shld
inc
lcall
mov
sti
sub
shll
stos
pop
cmp
xchg
out
jle
pop
mov
push
mov
xchg
adc
mov
int3
cltd
cmp
inc
cmp
insb
cmp
outsb
add
cmp
add
dec
xor
mov
shl
dec
jae
adc
dec
cmp
rcrb
mov
adc
push
flds
test
mov
movsb
test
mov
push
inc
push
inc
mov
fcoml
jle
adc
insl
stc
inc
int3
leave
sub
jb
and
mov
inc
jg
dec
push
and
xchg
mov
mov
repnz
les
ljmp
pushf
movl
outsb
add
xchg
push
lods
dec
cmp
xchg
outsb
or
rclb
jg
jecxz
sbb
pop
mov
insl
jno
inc
pop
mov
mov
pop
test
shl
stos
inc
jmp
xchg
mov
sub
inc
cmp
mov
xlat
mov
sbb
xor
mov
cwtl
dec
and
xor
sub
pop
mov
test
adc
dec
stos
fadd
jae
jp
dec
or
imul
jne
mov
insb
inc
mov
stc
sub
cmp
push
sbb
jo
scas
mov
fwait
and
fistpl
push
adc
arpl
sub
aas
ljmp
insb
in
cmc
jno
push
xor
test
inc
stos
jo
mov
inc
test
push
mov
ret
dec
shrb
mov
iret
js
pop
mov
stos
xchg
mov
jb
or
or
movsl
popf
ret
es
sbb
insl
dec
jle
mov
mov
jno
cltd
mov
lea
aaa
xor
mov
aad
adc
outsb
fstps
addb
mov
dec
cwtl
sbb
lods
xor
xchg
jb
mov
inc
cmc
imul
mov
mov
and
add
cmpsb
and
insb
dec
push
mov
cmp
je
mov
repz
imul
jbe
mov
lret
xchg
call
sub
movsl
mov
or
mov
adc
ret
movsl
pop
inc
rcrb
clc
pop
mov
pop
negb
sub
adc
movups
pop
sbb
popa
dec
idivl
popa
push
addr16
jo
inc
pusha
loop
sbb
daa
mov
mov
mov
dec
scas
cmp
push
cmp
popf
out
dec
addr16
push
call
cmpsb
aad
cmp
fstpt
repnz
and
cmp
cmp
fistpll
inc
push
mov
xchg
xor
mov
jbe
fcmove
gs
fs
testl
sbb
sbb
inc
cwtl
push
mov
and
sbb
hlt
xor
dec
and
or
ds
shll
ret
xchg
pop
mov
jge
subb
popf
jns
sahf
adc
fildl
pop
sub
sub
stc
add
sbb
sbb
mov
outsl
es
hlt
lods
dec
shll
cld
push
pop
je
lea
sbb
repz
into
pop
enter
add
aam
in
inc
out
das
pop
popa
ja
jns
xor
loope
mov
fs
outsb
cmpl
pop
and
ret
fwait
shll
aad
or
stos
dec
or
addb
jne
adc
hlt
movsb
jge
and
jmp
fs
and
adc
inc
push
xchg
or
dec
mov
jmp
mov
mov
call
pop
jg
sub
or
daa
xchg
je
pop
ds
test
repz
push
int3
ds
push
imul
pop
push
jmp
and
inc
jmp
xorl
test
push
sbb
dec
cmp
mov
pop
jbe
addr16
inc
insb
mov
lret
ret
pop
stos
mov
dec
cld
push
mov
ficoms
pop
pop
and
sbb
jmp
loope
loop
sub
repnz
stos
outsb
push
mov
and
mov
cmc
sub
test
sub
in
add
xchg
push
addr16
cli
cmp
dec
jb
mov
inc
sub
movsl
pop
dec
mov
outsl
lret
or
mov
add
push
aas
je
pop
outsb
rcrl
inc
popf
sub
jo
mov
fmull
sub
fbld
sub
pop
and
mov
sub
lahf
or
movsb
daa
push
inc
xor
roll
sbb
ret
or
ret
movsl
std
mov
xor
push
cld
push
sbb
cld
sbb
mov
push
push
gs
dec
fwait
test
jo
arpl
movsb
mov
xor
ss
mov
push
js
jmp
clc
cmp
cwtl
fbld
je
add
arpl
stc
jb
mov
mov
bswap
xchg
out
cmp
in
and
mov
jg
loop
outsb
push
mov
fbstp
js
mov
shll
push
cmc
push
adcb
mov
xor
scas
xor
jle
shlb
push
pop
aaa
xor
out
mov
mov
pop
loop
aad
call
inc
jbe
repz
loopne
test
mov
xchg
in
mov
mov
cmp
push
dec
jb
int3
mov
fists
clc
dec
sbb
jge
lea
or
sub
sbb
into
adc
dec
aaa
cmpsb
push
dec
in
aam
ret
xor
call
and
pop
pop
dec
fucomp
lret
daa
mul
mov
inc
cmp
and
pop
add
loopne
imull
sub
inc
cld
fstpl
aam
pop
push
outsl
into
int
sub
push
dec
and
int3
cmp
mov
sti
or
rcll
cli
cmpsb
push
push
adc
cld
scas
in
pop
inc
push
fldt
jb
bound
inc
sbb
cmc
ss
sbb
dec
inc
or
mov
or
outsb
data16
insl
testb
mov
add
out
shlb
and
lret
nop
inc
lea
xor
adc
frstor
and
push
shr
jge
add
je
jge
fld
int3
aam
add
fs
or
shr
lods
cmpsb
in
pop
xchg
ret
and
call
sub
inc
out
push
cld
lahf
jle
inc
sbb
and
popa
adc
inc
dec
divb
cmp
movsb
je
and
ffreep
aaa
jbe
daa
push
les
mov
inc
movsl
push
jp
xor
aam
stos
jecxz
adc
ljmp
popa
mov
lcall
push
cwtl
enter
stos
rorl
in
out
int3
stc
pop
insl
into
push
mov
movl
enter
scas
mov
test
aaa
xchg
cli
mov
lret
inc
daa
fdivrs
xor
mov
int
leave
pop
mov
addr16
ja
jl
out
cmp
pop
js
xchg
dec
mov
push
sbb
js
dec
cltd
pop
or
insb
add
pop
cmp
stos
fsubs
dec
test
adc
pop
std
in
hlt
pop
testl
adc
fwait
iret
dec
out
adc
fwait
or
sub
testl
xchg
mov
cmp
into
mov
dec
lcall
push
pushf
xor
imul
mull
dec
push
xor
jl
xchg
mov
cmp
push
push
jbe
test
jge
imul
ja
and
aaa
int
sub
int3
inc
mov
imul
enter
cmpsl
in
lcall
push
jae
cmc
insb
pop
sti
std
add
xor
add
pop
jl
stos
inc
sbb
xor
mov
in
int
push
and
push
dec
mov
cmp
and
in
popf
in
push
adc
dec
cmp
adc
mov
or
stos
xchg
xchg
lcall
xchg
adc
leave
mov
cltd
mov
pop
pop
dec
sbbl
and
or
pop
xchg
outsb
adc
xchg
in
xor
les
jae
push
pusha
in
int3
xchg
xchg
je
notl
push
jecxz
xor
popf
cmc
pop
sbb
dec
mov
sar
repnz
imull
add
testl
insb
jb
push
adc
repnz
in
mov
or
add
jecxz
add
imul
pop
popf
mov
repz
push
fcomip
jbe
lock
jp
lahf
jb
pop
test
sub
jnp
insb
mov
ret
pop
ret
dec
xchg
lea
aam
call
ja
adc
dec
psubd
mov
adc
xor
repnz
gs
jge
and
jae
test
ficoml
dec
orb
fsubs
sahf
dec
je
fwait
or
popf
out
popf
stos
mov
dec
stos
cmp
lds
jae
movsb
mov
sbb
pop
jns
add
scas
mov
loope
xor
jmp
jmp
jb
ja
outsl
push
cmp
push
sti
xor
cmp
mov
mov
js
cmp
icebp
jns
notl
mov
dec
arpl
xchg
movsl
jae
adc
orl
mov
pop
fcmovnb
idiv
call
push
aaa
lcall
insb
sbb
es
insb
outsb
repz
sub
fisubs
mov
xchg
xor
or
repz
movl
mov
jno
lock
and
pop
lahf
jecxz
aas
lds
adc
mov
mov
pop
xchg
or
sub
adc
add
push
outsl
add
cmpsb
mov
mov
popf
fsubrs
push
inc
and
jb
cmp
loope
test
adc
add
add
outsb
repz
sahf
mov
pop
sbb
dec
sbb
jp
cmp
clc
jmp
ret
jno
xor
scas
push
aad
jns
cmp
push
xchg
and
jmp
mov
sub
test
ja
dec
cmp
push
out
rorb
jns
xchg
sub
jecxz
hlt
test
dec
data16
sub
clc
jg
push
pushf
fldl
ret
mov
cmp
test
bound
xor
hlt
es
dec
outsl
roll
push
daa
ret
insb
out
push
jg
popf
mov
mov
dec
or
dec
ljmp
sub
mov
js
inc
fldz
mov
fwait
xchg
and
or
xor
scas
mov
pop
push
daa
ds
out
sbb
sbb
push
jmp
cld
leave
adc
lcall
jmp
dec
mov
xor
sub
and
dec
out
ficomps
mov
jp
insb
dec
cmp
test
loope
gs
std
lret
jne
xchg
jg
adc
push
and
adc
push
movsb
sti
out
out
mov
adc
pop
andl
and
lods
testb
adc
pop
out
or
jae
xchg
mov
sbb
mov
jns
notb
xchg
dec
fisttpll
jne
leave
push
rcrb
jne
pusha
push
rolb
xchg
add
fwait
push
sbb
aad
push
xor
pop
mov
and
test
jle
pop
and
jmp
test
mov
jo
shll
les
aas
sub
adc
jl
insl
icebp
pusha
jbe
ss
clc
mov
test
rorl
insb
ret
notl
cmp
rcr
ds
inc
out
xor
rcll
mov
cmpsb
cmp
and
add
js
cmp
jg
ficompl
or
inc
xchg
icebp
add
fwait
in
imul
idivb
adc
mov
lret
scas
or
in
test
sbb
adc
pop
adc
test
in
add
stos
imul
push
or
in
push
push
mov
jnp
cmp
and
andl
cmpsb
lds
xchg
xchg
nop
rcll
pusha
add
cmp
ds
lret
add
imul
xor
gs
jno
or
sarb
les
icebp
jbe
out
mov
in
jmp
add
pop
pop
adcl
sti
add
test
sbb
mov
fsubrs
leave
icebp
xor
mov
cmp
xchg
aad
lock
cmp
lods
ljmp
fists
xchg
xor
or
rcr
mov
and
xchg
out
or
ror
lcall
les
fwait
xor
jecxz
xchg
cmp
cmp
mov
adc
push
mov
icebp
xor
out
inc
arpl
in
inc
inc
fistpll
mov
dec
sbbl
stos
cwtl
push
inc
mov
push
xorl
xor
lods
xor
ret
fistps
mov
sub
inc
subb
cltd
arpl
movsb
shlb
inc
shrb
dec
jmp
mov
and
subb
push
jo
sbb
xor
stc
testb
lahf
or
loopne
cmp
jl
movsl
mov
pop
out
call
mov
mov
xor
jl
adc
mov
popa
cmp
xchg
lea
mov
mov
lods
lret
xchg
push
push
pop
and
or
dec
hlt
je
adc
xlat
and
jbe
mov
mov
addr16
ret
jge
inc
cwtl
dec
jae
mov
rorb
adc
adc
cmpsl
push
imul
and
push
clc
xchg
sub
sbb
pop
dec
dec
push
add
fisubl
test
push
push
fucomip
mov
xor
mov
bound
cmpsb
xor
out
ret
icebp
or
in
frstor
movsb
sub
jge
out
xchg
inc
and
out
and
icebp
xchg
xchg
adc
rclb
out
test
outsl
dec
push
test
jbe
loopne
push
pushf
mov
push
mov
jno
lret
jmp
push
push
lock
or
stc
add
pop
push
mov
lret
insl
pop
pop
mov
jnp
mov
push
pop
xchg
lea
rol
mov
and
cld
aad
insb
aaa
lea
mov
mov
sub
pop
xor
fdiv
imul
out
lret
in
xorb
ja
pop
xchg
test
push
loop
dec
mov
in
out
ja
outsb
std
adc
and
lods
imull
pop
ds
push
aas
inc
insb
pop
jl
xchg
jne
je
xchg
out
mov
pop
mov
pop
data16
push
and
aaa
daa
lret
jb
aad
mov
and
or
lret
cmpl
jmp
in
jg
stos
mov
or
add
mov
jp
roll
inc
and
or
sbb
xor
dec
cwtl
push
jge
inc
sti
clc
ljmp
mov
lea
orl
mov
int3
clc
inc
pop
popf
stos
cld
sbb
leave
adc
push
xor
jo
sub
lahf
xchg
fldcw
pop
fs
pop
adc
in
pop
xchg
call
and
lds
adc
in
mov
jge
clc
inc
dec
sahf
dec
dec
dec
fs
xchg
inc
flds
push
xor
aaa
xchg
lcall
les
or
and
inc
pop
jbe
cmc
fwait
cmp
fldenv
jne
sarb
mov
mov
sub
test
inc
mov
shrb
mov
jnp
pop
xor
dec
inc
jecxz
xchg
xchg
xor
cwtl
mov
sub
xor
ja
test
xchg
mov
push
sub
xchg
sub
or
cmp
das
aad
cld
pop
xor
inc
pop
cmp
movsb
add
adc
adc
jb
cwtl
or
add
dec
shl
dec
les
iret
int3
popa
xor
fimuls
sub
subb
push
sbb
outsl
mov
pop
jnp
inc
cld
loope
repz
pop
cli
mov
or
sti
cltd
push
cmp
fcoml
push
sahf
outsb
clc
mov
xor
cmp
out
rol
or
ds
sub
inc
mov
xchg
hlt
arpl
data16
inc
adc
movsl
cmp
and
add
mov
cwtl
into
pop
and
or
lcall
or
imul
jae
mov
cmpsb
stos
xchg
jne
repnz
or
cmp
sub
mov
pop
mov
xchg
lret
inc
outsb
xchg
pop
adc
lds
cmp
pop
xchg
scas
loope
fdivs
dec
loope
rclb
mov
or
xor
cmp
push
pusha
sub
aas
aad
lret
cld
xlat
aas
rcr
mov
stos
push
mov
std
rorb
jnp
pop
lcall
mov
cmpl
gs
mov
mov
lock
mov
or
add
mov
cmp
sahf
lahf
int3
mov
inc
add
add
in
outsb
dec
inc
mov
xor
pusha
adc
ja
mov
or
gs
out
mov
es
add
leave
stos
in
mov
adc
mov
fs
dec
mov
and
add
xchg
shll
aaa
cmc
or
mov
pop
movsb
push
cmp
lret
cmp
nop
cli
mov
out
aaa
popf
sub
mov
fnstcw
jle
pop
inc
pop
sbb
test
ret
loop
mov
add
out
adc
push
push
fsubp
xlat
pop
pop
xor
nop
mov
mov
cltd
movsb
and
loop
sbb
add
sub
rcr
or
ret
arpl
iret
mov
and
clc
aam
lcall
push
outsb
and
test
fisttpl
mov
xchg
adc
add
xchg
pop
out
dec
arpl
gs
sbbb
jg
mov
sub
xor
add
jge
ror
in
cmpsb
jno
xor
mov
mov
mov
xchg
mov
sub
push
jecxz
mov
aad
mov
or
adc
jns
inc
js
outsl
fwait
sbb
icebp
dec
insl
push
pop
or
stc
call
mov
sahf
stos
adc
adc
clc
jge
sbb
xchg
adc
and
scas
fildl
loop
push
jg
jnp
pop
pop
std
jp
adc
enter
dec
xor
adc
scas
jle
js
out
cmc
icebp
pop
inc
push
cmp
lods
sub
jg
mov
imulb
movsl
insl
clc
aaa
movsl
lret
clc
les
adc
pop
sub
call
push
or
int
in
inc
lods
jae
inc
inc
add
mov
jb
insl
adc
mov
pop
xor
repnz
pop
or
xchg
lret
push
dec
stos
int3
sub
mov
push
ror
fisubrs
cld
stos
adc
dec
inc
adc
mov
test
movsb
sbbl
pop
std
hlt
js
shl
adc
popl
in
arpl
lods
movsb
jns
test
gs
js
stc
movb
pop
mov
fimuls
loope
orb
jns
call
add
fbld
leave
js
sub
nop
cli
aaa
add
test
xchg
mov
add
push
xor
rcrl
dec
push
pushf
and
jg
icebp
rorl
in
clc
mov
fisttpll
movsl
sti
mov
cmc
jno
jbe
idivb
call
push
int3
push
ljmp
mov
inc
in
ja
inc
pop
ret
xchg
pop
or
adc
adc
push
sbb
inc
jecxz
fisubrl
mov
jle
scas
or
test
loopne
je
push
mov
push
sbbl
sub
std
mov
hlt
pop
in
mov
inc
push
test
sub
push
inc
les
add
popf
mov
dec
fbstp
jecxz
dec
mov
lods
mov
in
into
sbb
jno
pop
inc
mov
inc
mov
jb
inc
dec
cmp
cltd
cmp
jmp
out
fistpl
pop
adc
cmp
enter
add
xor
hlt
mulb
add
mov
iret
or
or
in
pop
and
cmp
ljmp
inc
jmp
lock
xor
jle
decl
or
flds
inc
push
rcl
or
and
bnd
xchg
xchg
add
xor
mov
pop
xor
push
adc
test
cmp
sbb
or
and
push
adc
dec
pop
mov
mov
addr16
mov
int
lods
mov
pushl
xchg
out
and
inc
add
jae
mov
rcrl
test
imul
fs
or
dec
add
mov
xchg
fwait
adc
inc
mov
outsl
inc
add
sti
pushf
push
jns
jb
xchg
push
mov
mov
sbb
push
bound
iret
insl
xor
lods
or
sub
and
pop
xchg
cmp
jae
cmp
jo
inc
mov
mov
dec
sahf
mov
inc
mov
add
outsl
cli
and
shrl
scas
xlat
xorb
aaa
jb
jmp
into
in
jno
or
xchg
sarl
add
inc
mov
sbb
push
in
je
xor
push
clc
xchg
sub
jecxz
mov
popf
dec
pop
aam
out
adc
test
jp
inc
mov
and
pop
push
pushf
and
inc
add
lods
sbb
fs
push
add
movsb
mov
sbb
leave
adc
push
sbb
inc
push
scas
ret
sbb
mov
out
arpl
les
out
imul
shll
push
and
imul
dec
mov
lcall
cs
nop
aam
or
fisttps
dec
xor
idivb
cmp
xchg
mov
push
mov
fidivl
rcrb
lock
movsb
push
fists
mov
sub
sahf
and
arpl
lret
adc
cs
inc
mov
sbb
mov
loopne
das
aad
out
cmp
popf
pop
addr16
cs
add
ljmp
pop
add
das
frstor
jno
fs
nop
jmp
lahf
mov
cmp
enter
mov
mov
xor
jns
cmp
jo
dec
lcall
cs
sub
shlb
leave
mov
loopne
adc
andl
inc
daa
pop
stc
add
scas
push
fst
lret
cwtl
mov
insb
mov
inc
xor
subl
add
sub
ss
out
xchg
fcmovu
popf
pop
into
cs
test
data16
and
ret
pop
sub
cmp
cmpsl
ret
repnz
insb
mov
add
dec
gs
xor
mov
xor
adc
xor
jle
bound
sub
dec
xchg
jecxz
scas
push
fdivl
xor
shrb
xor
push
sbb
addr16
push
sbb
std
jl
mov
cmp
jl
lret
inc
add
negl
es
loop
int
jne
adc
mov
nop
idivb
pop
xor
mul
cmp
dec
mov
stc
movb
push
in
sti
push
mov
push
jg
mov
into
stos
and
dec
add
cs
out
iret
cmpsb
xchg
add
jg
push
lret
mov
mov
pop
cmp
dec
femms
outsb
popf
iret
fisubrl
mov
push
jp
dec
sbb
cmp
pop
mov
daa
pop
xchg
scas
jle
add
inc
and
ss
pop
arpl
mov
push
testb
push
jne
push
pusha
mov
mov
ds
jbe
mov
add
pop
cmp
imul
insl
mov
enter
lds
mov
add
test
shlb
dec
rcrl
repz
fwait
sub
scas
testb
ret
pop
jbe
push
push
ljmp
out
fildl
mov
jne,pn
mov
mov
jb
xchg
xchg
inc
std
mov
inc
movsb
jo
jne
jecxz
push
shlb
add
pop
ds
sub
and
mov
loope
int3
pop
cmpb
mov
and
jns
movsb
idivb
lods
pop
xchg
inc
xchg
or
inc
xchg
lea
sbb
pusha
push
fwait
insl
adc
filds
mov
add
sarb
push
push
push
inc
inc
pop
shlb
test
lds
ror
add
pop
sarb
adc
push
or
mov
das
dec
jbe
shrb
popf
lods
pusha
lea
sbbb
jecxz
push
xchg
mov
xlat
xchg
adc
dec
ficompl
andl
or
xchg
or
mov
or
popa
cld
cmpsl
nop
hlt
dec
xlat
xor
pop
xchg
push
test
mov
xor
test
adc
push
and
rclb
int3
mov
and
push
ret
orb
push
out
dec
inc
insl
mov
shlb
sti
mov
call
xchg
sti
scas
rcr
push
cmp
stc
sub
mov
lret
out
imull
mov
xor
shrl
pop
hlt
xchg
lods
shll
xor
ljmp
push
jae
lret
outsl
sub
push
mov
add
jne
lds
jge
loop
data16
mov
scas
ror
call
pusha
xlat
mov
sahf
iret
fs
xchg
into
dec
fidivrs
test
sbb
mov
scas
fs
and
stos
mov
xchg
or
repnz
lods
movsb
stc
stos
xchg
loop
fwait
sbb
repnz
mov
pushl
lea
xlat
sub
dec
ss
andb
fbld
imul
push
fcmovnbe
arpl
mov
mov
jno
cmp
pusha
mov
cmpsl
dec
or
or
call
cmp
mov
nop
inc
bound
fwait
cmp
pop
icebp
ret
aad
mov
dec
xchg
mov
popa
inc
call
clc
push
sub
outsb
stos
or
addb
mov
cmp
push
push
sti
rol
mov
push
push
sbb
push
mov
mov
push
test
insl
outsl
and
test
out
add
mov
stos
dec
push
and
pop
stos
les
sbb
iret
gs
or
loop
pop
scas
imul
lret
fimuls
pop
imul
test
icebp
imul
gs
add
adc
inc
push
dec
scas
aaa
jae
out
xlat
jmp
repnz
mov
cs
jno
mov
jnp
add
xchg
out
mov
inc
xor
int
add
cwtd
pop
fnstenv
out
dec
inc
rolb
insl
push
inc
add
sti
aaa
ljmp
dec
outsb
mov
and
add
divl
jg
data16
cmp
sub
movsl
repz
aaa
mov
stc
jl
cmpsl
sub
mov
dec
inc
and
cld
rcrb
xor
test
scas
scas
pop
xchg
fiaddl
mov
adc
push
into
int3
rcrb
mov
arpl
subl
insb
ds
in
xchg
push
add
pop
pop
aad
shlb
test
mov
icebp
fmuls
dec
sub
mov
fcmovne
fsubs
loope
cli
lods
daa
add
je
inc
shrl
fstps
imul
or
jae
sbb
icebp
pop
sbb
mov
dec
aas
xor
stos
testb
jno
push
xchg
inc
jnp
or
insl
adc
xchg
xchg
or
mov
clc
jle
sub
pop
int3
mov
xchg
inc
ljmp
xor
lds
mov
cwtl
jp
nop
sub
pop
mov
push
adc
jnp
fwait
mov
pop
xor
sub
and
popa
and
and
push
clc
sahf
jne
out
inc
xchg
scas
add
je
xor
mov
cltd
fwait
mov
jnp
imul
xchg
jbe
mov
pusha
in
xchg
scas
outsl
mov
or
fistps
pop
sbb
add
negl
inc
pop
in
loope
mov
repnz
ja
rcrl
add
dec
ja
iret
lret
and
in
fadd
and
or
or
lods
cmp
xor
push
popa
and
push
repz
pop
adc
out
mov
or
lcall
sub
xchg
xor
xor
leave
mov
and
into
adc
lds
leave
int
stos
xchg
arpl
inc
push
mov
leave
ss
test
fstpl
push
movsb
and
inc
dec
push
mov
jne
repz
or
loopne
decl
idivl
mov
cmp
lcall
mov
mov
or
xchg
cmp
stc
cld
test
popa
je
mull
mov
sahf
jmp
insl
jnp
int3
in
jno
push
incb
mov
test
aas
xorl
out
fisubs
aaa
adc
call
add
sbbb
mov
or
and
lock
jmp
and
adc
popa
out
sbb
sub
adc
je
fsubs
inc
cmp
mov
add
cmp
leave
inc
and
jle
pop
out
enter
push
or
pop
std
xchg
pop
jno
add
scas
dec
xchg
out
xchg
nop
call
into
cmp
hlt
xchg
cs
arpl
inc
add
fnstenv
ss
imul
dec
test
jnp
fdiv
mov
xchg
mov
pop
shll
inc
mov
daa
cmpsb
imul
add
je
mov
push
aam
cmp
jbe
or
mov
ss
adc
paddd
ljmp
outsb
push
loopne
pop
sub
mov
mov
and
in
pop
push
pushf
jae
dec
repz
insl
pop
jle
xchg
mov
xor
sbb
arpl
outsl
ljmp
lock
fs
xchg
mov
stc
push
xorl
mov
dec
je
mov
rorb
ss
jno
push
fdivrs
sbb
jae
fbstp
push
xor
sbb
es
push
pop
add
push
push
and
push
cmp
mov
bound
stos
pop
fmull
xlat
add
and
pop
les
roll
cmp
mov
sbb
insl
sahf
divl
mov
fucomi
add
pop
cmp
xchg
pushf
mov
ss
movsb
pusha
test
push
add
pop
loop
loop
int
push
inc
in
movsb
clc
cwtl
add
push
cmp
enter
out
push
nop
xor
xchg
inc
push
dec
adc
jecxz
mov
mov
sbb
jmp
sbb
adc
jns
cmp
push
jne
dec
xchg
sti
sub
lods
pop
adcl
sub
cld
jb
and
imul
jne
les
cmp
dec
in
jmp
das
mov
repz
cs
mov
enter
mov
mov
jo
movntq
xor
ja
push
fldcw
inc
push
shrl
fcomps
mov
mov
repz
push
in
inc
mov
jbe
cs
sahf
xchg
mov
and
sbb
push
inc
pop
cmpsb
dec
mov
adc
subb
or
pushw
data16
cmp
sub
xchg
negb
push
imul
movsl
imul
inc
xor
mov
aad
add
xchg
push
daa
es
cmp
jl
push
sbb
sub
adc
xor
jne
ret
xchg
sub
cmp
cmpsl
dec
pop
lock
pop
dec
iret
clc
jno
int3
mov
cmp
pop
pusha
adc
xchg
ljmp
test
mov
xor
das
mov
fwait
stc
jmp
movsl
cli
push
lahf
adc
sbb
ljmp
add
idivl
mov
scas
xor
push
iret
test
or
adc
xchg
inc
mov
xlat
xor
outsl
or
xchg
cmp
fimull
leave
movsl
das
push
mov
insb
pop
mov
mov
dec
call
hlt
inc
out
mov
push
shlb
in
sub
roll
push
push
lea
sub
dec
sub
inc
xchg
test
cs
in
fisttps
into
dec
dec
stc
adc
lahf
add
addr16
xor
sbb
scas
inc
adc
inc
lods
fucomp
add
xchg
jmp
hlt
lcall
rcr
lret
mov
or
add
orl
or
push
into
testl
mov
repz
push
in
in
jecxz
inc
and
jecxz
pusha
ss
jecxz
out
mov
lock
sbb
inc
ret
or
ljmp
into
cmp
pop
cmp
sbb
xor
lcall
repz
fisttpll
lahf
insl
pop
dec
cmp
ret
sbb
cmp
js
add
mov
jns
inc
inc
int
jecxz
cmpsb
sahf
or
mov
scas
push
jge
cltd
mov
fistpl
and
dec
ds
cmp
inc
ds
jl
mov
jo
or
push
cmp
inc
pop
std
xlat
pop
cmp
sbb
cmpsb
mov
dec
imul
push
jns
adc
sbb
sub
and
inc
popf
sbbl
push
adc
mov
insb
movsl
pop
lock
mov
das
xchg
pop
jae
call
cmp
adc
test
push
cmc
lret
add
rcll
fsubl
cli
push
dec
push
mov
push
imul
pop
and
scas
xor
lock
cli
call
sbb
notl
addr16
aad
sub
adc
int3
cmpsl
pop
push
push
mov
sub
popa
and
dec
push
fnsave
mov
inc
int3
in
shrb
push
cmp
push
pop
cmpsl
cwtl
in
ljmp
xor
daa
stos
sub
xchg
mov
scas
adc
mov
ljmp
shlb
push
jg
pop
push
inc
cltd
push
push
or
push
sbb
mov
pop
pop
lret
in
ljmp
int3
xchg
outsl
cmp
push
cmp
mov
sub
shl
xor
filds
jp
jmp
push
stc
in
push
ret
sub
mov
into
or
fisubs
jecxz
in
mov
repz
or
push
ljmp
dec
adc
aaa
mov
ror
mov
mov
sbb
ja
loopne
ja
jl
jne
xchg
enter
push
mov
add
dec
sub
jbe
push
fs
push
jbe
jbe
cmp
inc
or
mov
xor
cmp
faddl
sub
es
sbb
push
dec
mov
test
ret
jmp
js
mov
aam
jns
mov
fisttps
sbb
pop
xchg
pop
dec
mov
mov
rcrl
enter
jae
inc
xor
jno
jp
jge
aam
mov
popa
mov
fwait
adc
mov
mov
jl
fcmovu
fptan
lock
shll
xor
mov
xor
lcall
sub
jg
insb
cs
iret
adc
sbb
into
sub
shrl
push
inc
imul
cld
xchg
push
and
sbb
sub
mov
xor
adc
mov
ja
lcall
outsl
cmpl
das
lcall
movsl
ss
cmp
stc
sbb
mov
add
mul
jno
ds
pop
xor
inc
shll
fwait
and
or
dec
mov
loopw
or
mov
in
stc
pop
push
jg
xchg
jo
imul
xrelease
jo
popa
mov
lahf
bound
pop
out
and
sbb
inc
cmpsb
cmpsb
icebp
xor
push
shl
movl
pop
cmpsb
mov
inc
push
mov
in
and
stc
dec
dec
adc
push
shlb
int
fstl
xor
icebp
and
idivb
lret
arpl
std
adcb
arpl
mov
push
mov
test
fmuls
orb
or
xorl
push
rcrl
aam
push
xchg
mov
adc
lcall
xchg
movsl
jae
je
adc
fisubrl
rorb
mov
push
jne
loopne
dec
sbb
pop
dec
or
dec
cltd
ja
scas
outsb
popa
test
insl
inc
or
pop
ja
loopne
adc
in
enter
push
dec
mov
sbb
shrl
insl
test
mov
pusha
orb
sbb
lods
push
loop
loopne
scas
fs
js
rep
pop
adc
test
andl
es
in
ds
push
int
out
xchg
mov
les
or
stos
jae
enter
pop
xchg
cmpsl
fldcw
test
inc
sub
jl
xchg
mov
dec
outsl
inc
sbb
push
sbb
adc
add
sub
mov
fiaddl
test
int3
or
sbb
lods
adc
mov
out
inc
ret
mov
aam
xlat
in
xlat
adc
mov
stos
lock
mov
dec
mov
mov
sahf
xor
stc
dec
mov
shll
arpl
ja
mov
jbe
fmuls
into
push
inc
stos
or
mov
inc
dec
sub
sbb
xchg
or
mov
in
push
mov
lods
xchg
cwtl
mov
test
out
xchg
and
add
sarl
add
rcr
das
cld
push
mov
jbe
inc
cwtl
pop
ss
jae
mov
cmpsb
lret
or
data16
add
insl
adc
movsb
sbb
add
mov
fs
or
das
shl
push
mov
flds
test
dec
adc
cmp
pusha
inc
pop
fs
push
xchg
jge
dec
inc
shll
stc
cmp
loop
pop
cmp
push
xor
jns
div
xchg
jb
lock
xor
jl
mov
cld
stc
and
cmp
hlt
pop
test
push
loopne
add
stos
les
add
and
dec
ret
pop
jp
mov
sbb
loop
sub
sub
cmp
xchg
cmpsb
and
pushf
sti
push
cli
sub
or
inc
adc
jmp
push
hlt
xor
cmp
cmpsl
adc
sub
pop
push
jbe
cwtl
jg
mov
add
cmp
data16
aas
movsb
aaa
fisubs
testl
dec
mov
dec
mov
or
mov
pop
xor
sbb
xor
je
lahf
inc
insb
xchg
movsl
ja
je
jbe
inc
and
cmp
pop
fmuls
cwtl
in
iret
add
sbb
adc
add
inc
loopne
daa
outsl
test
outsl
ss
add
mov
loope
bnd
daa
xor
test
inc
movsl
sbb
divb
lock
iret
mov
rol
jl
fisubl
xor
jns
movsl
mov
lock
pop
or
enter
fsub
movsb
dec
enter
data16
outsb
pop
in
or
xchg
in
jmp
pop
cmc
jmp
enter
rclb
or
mov
push
inc
lock
out
jnp
sahf
jmp
mov
add
shll
icebp
inc
push
mov
test
mov
mov
mov
mov
in
data16
push
or
dec
stc
cli
jbe
inc
mull
in
fwait
pop
popa
sbb
jmp
fistpl
adc
test
mov
dec
fdivl
mov
subb
sbb
cli
xchg
and
xchg
in
pop
xchg
loopne
sub
and
xchg
xchg
push
and
pop
mov
xor
int3
neg
rcll
stos
call
cmp
jbe
inc
fnstenv
sahf
rcrb
push
negl
push
mov
pop
dec
out
cmp
mov
iret
popa
mov
decb
aas
jl
mov
inc
test
daa
fnstcw
mov
notb
adc
sbb
lods
sbb
or
out
neg
pop
pop
inc
stos
lods
jmp
add
pop
push
sub
out
jne
sub
imul
lcall
ret
jo
int
mov
xor
sub
out
pop
jns
aas
ljmp
nop
cmpsb
jecxz
std
sub
mov
inc
stc
xacquire
in
pop
adc
xchg
or
xchg
lcall
mov
jp
mov
das
mov
push
mov
hlt
testb
mov
jg
and
fisubrs
js
dec
and
mov
add
cmp
lods
push
lret
mov
stos
inc
sbb
nop
push
and
sub
and
in
jne
fdiv
push
subb
jne
xchg
popf
cmp
mull
and
add
cmp
push
sbb
jp
push
and
pop
sahf
adc
ret
mov
cmp
mov
cmp
add
gs
data16
enterw
cli
insl
inc
js
adc
push
call
xchg
fwait
mov
mov
stos
mov
jmp
cmp
clc
jmp
out
pushf
mov
mov
mov
out
inc
sbb
sbb
das
loope
pop
mov
push
mov
mov
lcall
mov
pop
test
outsl
xlat
enter
leave
or
or
sub
ficoml
and
jp
push
or
repnz
mov
out
outsl
les
cmpb
rorl
roll
jle
ret
sbb
mov
ret
sarl
addr16
pop
scas
inc
cmpsl
push
es
inc
xlat
jg
sbbb
test
loope
mov
ljmp
mov
dec
sbb
lidtl
pop
cmp
mov
mov
lock
imul
add
into
out
xchg
mov
pop
cltd
sbb
bound
xchg
or
fiadds
outsl
or
or
adc
pop
mov
iret
xor
orl
cmp
cmpsl
jo
mov
shrl
pop
int
data16
cmp
ret
inc
xchg
mov
dec
lods
mov
and
inc
in
fistps
fisubs
inc
xor
pushf
cs
ret
cmpsl
xorl
fistl
shll
aas
out
jl
inc
xor
mov
add
add
and
adc
fwait
inc
pop
xor
stc
scas
jle
jge
add
cmc
xchg
mov
add
jp
sahf
sub
adc
pushf
lea
xchg
in
sub
add
sahf
cmpsb
stc
or
ss
pop
inc
popa
dec
adc
dec
cmpsb
loope
clc
loop
leave
ret
daa
mov
inc
mov
jno
sbb
inc
sub
jge
loope
dec
pop
and
imul
xchg
out
neg
icebp
dec
mov
stos
aas
pop
and
mov
xor
out
push
repz
xor
adc
adc
call
pop
add
adc
xorb
frstor
sti
mov
xor
dec
fcmovnu
sub
cmp
aam
push
jns
inc
inc
pop
push
cmp
fsubl
mov
lret
scas
je
mov
popf
imul
movsb
andl
iret
pop
mov
pusha
les
or
mov
loop
mov
ss
pop
in
into
pop
adc
or
push
xchg
mov
inc
dec
ja
and
test
mov
cmp
cmp
adc
pop
mov
popa
adc
pop
outsl
repnz
insb
xor
movsl
call
add
pop
test
sarl
cmp
divb
inc
and
mov
dec
mov
mov
mov
mov
int
outsb
fwait
mov
xor
clc
sarb
mov
xor
mov
sub
jb
pop
test
sbb
add
lcall
inc
mov
aaa
mov
or
js
xor
mov
jle
xlat
push
xchg
add
mov
jo,pn
in
repz
arpl
fs
mov
repnz
mov
rcr
imulb
test
pop
xor
mov
lock
repz
push
add
adc
jnp
or
sbb
test
or
fadds
dec
sbb
in
fdivr
es
pop
shrl
cmp
and
jge
movsl
sbbb
test
loopne
mov
sub
lods
add
or
sbb
and
mov
cwtl
bound
dec
incb
sbb
add
imul
ja
mov
int
arpl
pop
mov
lret
push
or
xor
dec
adc
lock
add
outsl
enter
mov
or
jns
out
xchg
mov
dec
push
fiadds
or
inc
lods
out
sub
pop
inc
push
mov
mov
enter
mov
mov
add
test
dec
testb
xchg
inc
push
mov
loope
scas
jl
push
out
pop
mov
inc
xor
loopne
in
loopne
outsb
inc
lret
out
imul
and
cmp
pcmpgtb
mov
imul
cmp
adc
lods
sbb
pop
jbe
fbld
je
psubusb
rcrl
cmp
jge
mov
xlat
fbstp
cmpsl
pop
nop
xchg
imul
fldt
sub
in
lods
xor
pop
inc
je
nop
or
push
into
andl
cld
inc
sub
outsb
cmp
stos
cmc
xor
xchg
pop
aam
in
pop
add
push
pop
xchg
add
ret
add
sbb
dec
ret
xchg
inc
fstl
std
lods
cmpsl
cld
mov
jne
fidivrl
cli
ret
jo
out
insb
out
sbbl
jb
rclb
and
dec
scas
sar
push
xor
pop
arpl
stos
mov
cmp
dec
adc
movsb
jecxz
pop
adc
andb
mov
add
sbb
xor
clc
lret
cmc
iret
xlat
pop
aaa
dec
fsubr
cmp
pop
adc
addl
out
xor
imul
dec
push
scas
xor
gs
sub
sub
ljmp
xor
xor
bound
or
jle
scas
pop
pop
mov
outsl
bound
lcall
clc
push
repz
push
lods
xor
mov
pushf
data16
xchg
test
fnstcw
adc
push
xor
sub
leave
sbb
cltd
xchg
fadds
inc
and
loop
xchg
jbe
adc
cli
shrb
mov
pop
test
aaa
lret
push
in
inc
ja
faddl
je
in
xor
sbb
sub
popl
outsb
ficomps
shll
adc
cmp
in
popf
push
and
fcomi
lret
jl
mov
cmp
pop
andb
or
out
xchg
rorb
sbb
push
inc
hlt
arpl
inc
movsb
mov
sub
gs
jno
daa
push
aam
jb
mov
and
stc
popa
call
sub
inc
call
pop
pusha
inc
push
testl
ds
out
adc
mov
sbb
nop
loope
sub
cmp
push
leave
iret
outsl
pop
xchg
xchg
pop
xor
mov
jae
sbb
jne
or
jnp
or
jg
insl
nop
ljmp
in
sbb
xchg
aas
or
mov
dec
cmc
inc
testl
rorl
push
test
mov
inc
xchg
shll
mov
sub
sub
mov
jmp
sbb
popa
popa
jp
mov
adc
cmp
xor
xor
ret
xorb
mov
mov
pusha
fs
and
gs
cmp
add
lret
adc
lret
into
cmp
sahf
sbb
mov
dec
push
push
mov
inc
movsl
int3
mov
pusha
sub
and
aas
jmp
jae
stos
pop
shlb
ss
sub
xchg
je
sti
out
mov
js
or
xchg
and
and
stos
js
mov
insl
aam
popa
scas
xor
and
ds
in
test
xchg
jbe
cwtl
xchg
inc
xor
cli
out
fsub
jge
lods
pop
jmp
jnp
jns
daa
jle
inc
mov
mov
push
inc
test
xchg
pop
les
lahf
and
xor
xor
adc
leave
mov
adc
xchg
lods
jmp
shld
inc
cmp
or
sub
int3
frstor
inc
jne
mov
xor
cmp
pop
call
sub
add
mov
push
mov
push
jecxz
jmp
pop
ret
outsb
test
lret
inc
cmp
inc
inc
mov
addl
sub
das
jg
jl
add
mov
nop
scas
call
call
mov
sub
aas
gs
stos
arpl
pusha
xchg
fcomps
xor
test
sbbb
jb
stc
ljmp
fidivrs
or
or
xor
mov
and
sub
mov
xchg
cwtl
cmp
repnz
dec
jnp
adc
or
xchg
add
ret
movsl
sub
fsubrp
jp
mov
add
ud2
aam
cmp
push
repz
sbb
sub
sbb
stos
das
fstpl
lcall
push
mov
popa
pusha
or
bound
shrl
fcoms
jge
je
add
push
pop
bound
outsb
inc
push
and
mov
into
push
xor
lret
xor
das
imul
fstpl
xchg
cmp
jbe
lcall
insl
push
pop
aad
or
and
iret
fsubp
dec
popf
fildll
or
ljmp
data16
mov
loop
inc
or
shrl
inc
xchg
ds
lahf
mov
xchg
sbb
cwtl
test
adc
push
fnstsw
out
ja
or
in
test
rclb
aad
dec
cmp
mov
test
jae
add
xor
sbb
mov
sub
and
mov
lock
test
cmp
jns
dec
into
inc
in
cmc
pop
addr16
jmp
aaa
leave
lret
or
addb
sbb
xor
filds
lea
sub
adc
into
xorb
das
mov
imul
daa
cmpb
lret
pop
and
push
int
xchg
sub
ja
xor
cs
ja
inc
pop
imul
adc
pop
xlat
jmp
daa
adc
arpl
ds
notl
dec
adc
pop
ljmp
aaa
cmp
mov
jmp
mov
sub
cmp
leave
mov
adc
pop
lcall
push
inc
inc
in
fldl
inc
out
mov
xchg
xchg
pop
jl
mov
mov
inc
dec
aam
call
in
mov
outsl
cmp
pop
ret
ljmp
lahf
mov
stos
stc
dec
mov
xchg
fcmove
cmpsb
lret
stos
inc
stos
movsl
jnp
mov
stc
imul
xchg
lock
rolb
add
outsl
and
pop
les
cmp
sbb
jmpw
sbb
push
scas
xor
fwait
mov
ja
mov
add
or
mov
das
jbe
jnp
test
or
cmp
pop
mov
out
adc
outsb
mov
mov
loope
fstps
xchg
dec
pusha
arpl
push
loope
pop
sahf
jo
gs
pusha
hlt
aad
int3
cmc
fsts
adc
ret
scas
sbb
pop
dec
rep
daa
sti
inc
and
inc
fyl2xp1
xchg
insl
inc
fwait
subb
int
mov
pop
dec
fdivl
sbb
fisttpll
cmp
insl
inc
dec
push
ja
into
mov
movsb
add
incl
jo
rcl
daa
hlt
in
in
fistps
repnz
xor
sbbb
insl
sub
cmp
sbb
ja,pn
into
dec
or
push
leave
jo
jmp
pusha
cmp
jbe
lods
jecxz
cmpsb
pop
sti
cwtd
xor
jp
inc
jle
xlat
mov
ret
ret
mov
cwtl
or
loope
sbb
inc
cmp
fsts
movsb
sub
out
xchg
cmp
push
push
sarl
push
or
inc
mov
pop
inc
inc
insb
ljmp
outsb
shll
insb
scas
aas
repz
mov
jge
dec
aam
imul
dec
push
dec
pop
das
jae
lret
mov
imul
add
mov
adc
or
pushf
sub
in
frstor
mov
test
daa
mov
inc
fs
adc
test
stc
pop
mov
cwtl
test
dec
adc
push
push
dec
mov
ds
rorb
cwtl
xchg
or
push
movl
scas
jb
mov
dec
xchg
jmp
mov
bound
cmp
mov
pusha
and
adc
dec
testb
sub
mov
ret
mov
aas
insl
ljmp
mov
mov
icebp
jmp
pop
xchg
and
xor
xor
pop
stos
jecxz
add
lahf
sti
arpl
mov
imul
push
fwait
outsb
mov
imul
or
mov
mov
add
xchg
pushf
xor
sub
cmpsl
push
notl
jns
aam
jne
pushf
mov
fisubrl
test
jo
xchg
cmpsl
mov
adc
jae
pop
lock
sbb
and
insb
dec
xchg
push
nop
test
ja
add
mov
repnz
bnd
and
popf
pop
nop
cmp
mov
sbb
loope
mov
xchg
icebp
jg
mov
fnstsw
lret
popf
xchg
das
fldenv
sub
jo
fld
insb
xchg
dec
es
movsb
jns
jns
xor
out
je
pop
sti
jnp
enter
rorl
outsl
cmpsb
push
les
gs
cmpsb
call
mov
pop
add
aaa
jl
mov
js
dec
jp
cmp
sbb
or
xorl
or
xchg
mov
mov
test
inc
cld
push
jae
pop
and
and
js
pushf
sbb
fs
mov
mov
aam
sbb
mov
and
lods
shlb
lock
adc
rep
sbb
scas
adc
jg
addl
inc
cmp
dec
adc
and
fsubrs
je
stos
std
push
mov
cld
mov
mov
fdivs
jae
addr16
mov
mov
je
jl
inc
shrl
test
mov
push
in
sahf
outsb
dec
ds
xchg
push
mov
jg
xchg
or
stos
xchg
push
fst
dec
xor
outsb
es
xor
xor
sti
icebp
insb
jp
mov
mov
xor
nop
arpl
cwtl
inc
das
pop
pop
fsts
imul
aam
cltd
xchg
test
test
and
sbb
jne
daa
jg
push
mov
or
jns
xchg
lds
and
fcmovnb
adc
loope
pop
cmp
sub
push
std
jl
icebp
mov
into
pop
pop
or
stos
imul
dec
push
stos
ficoms
jnp
adc
push
aas
ljmp
push
xor
lahf
daa
jnp
jne
inc
adc
mov
mov
xchg
icebp
adc
lock
jmp
jle
sar
push
iret
insl
push
or
jo
outsl
xchg
or
mov
fcoml
and
fucomp
xchg
fsubrl
jge
inc
in
icebp
inc
inc
mov
or
mov
and
ret
xor
rcl
aas
mov
iret
dec
out
imulb
pop
mov
or
mov
lcall
xor
adc
in
sub
inc
repnz
pusha
mov
addb
lods
mov
jae
or
adc
test
bound
and
xchg
test
in
das
gs
cld
in
or
pop
insl
cld
xlat
sti
arpl
xor
dec
cmp
ret
pop
pop
mov
xor
xor
push
clc
insb
xor
clc
jno
cli
call
xchg
test
cmpsl
dec
lret
dec
ja
call
shr
lds
pop
cli
sbb
fisttpll
rcll
jmp
pop
mov
ret
and
jecxz
xor
into
mov
inc
fsubl
sbb
testb
pop
mov
add
lods
cs
add
adc
sbb
jnp
sub
jo
idivl
out
mov
scas
sub
aas
inc
or
adc
popf
popl
inc
lock
xchg
dec
repz
js
sbb
movsb
mov
push
outsl
aaa
jle
cmp
addr16
adc
xor
xor
dec
mov
imul
ljmp
out
cmpsl
pop
adc
dec
test
mov
inc
test
stos
fsubrl
imul
bound
lods
sbb
stc
xor
movsb
out
mov
movsb
outsl
lret
call
jg
jno
cmp
int
jecxz
add
dec
xor
sub
shrl
or
iret
repz
in
push
test
lods
add
pop
cmc
mov
out
fnstsw
ret
fwait
pop
pop
iret
inc
loope
stos
out
fdivl
outsb
xor
mov
sbb
fisttps
inc
lret
xor
dec
test
xchg
lods
jg
or
inc
popf
stos
sbb
mov
out
dec
fcmovbe
mov
mov
adcl
ja
scas
inc
pop
cmpsb
aas
movsb
mov
dec
jge
fucomp
movsb
out
or
out
popf
or
repnz
insl
xor
cs
shll
cs
loope
cmpsl
jne
fcomps
out
adc
inc
mov
lret
mov
ja
in
or
sub
dec
stos
repnz
push
movsl
pop
scas
js
mov
lea
ljmp
cmp
sti
shld
in
cmp
fs
rolb
fdivrl
out
mov
cmp
mov
jg
or
and
mov
xchg
loope
mov
dec
jb
and
push
dec
xchg
ds
mov
jo
cmc
cmpsb
imul
push
popa
ffreep
pop
jg
cmp
push
lods
cmp
lret
and
cmp
incb
cwtl
out
addl
pop
pusha
iret
loopne
popa
daa
hlt
xor
inc
ret
leave
je
iret
sbb
stos
incl
adc
inc
sbb
pop
or
pop
or
insb
or
add
aad
cwtl
push
sbb
ret
sbb
std
sbb
sub
xchg
xor
or
cmp
xor
popf
mov
pop
cli
mov
adc
int3
xor
mov
mov
dec
orl
add
adc
fldl
fbstp
cmp
push
xchg
mov
inc
xchg
outsb
daa
nop
and
and
mov
mov
push
in
mov
dec
ffreep
dec
icebp
pop
ret
adc
jne
sbb
jg
push
movsl
push
dec
scas
dec
cmc
cmpsb
or
sub
test
mov
out
push
out
daa
out
inc
cld
cmpsb
mov
ficomps
test
dec
sub
xor
lods
cld
push
fistl
inc
add
adc
in
xor
pusha
xlat
pusha
fsub
roll
add
xor
lods
push
xor
inc
sub
orb
ret
movsl
lods
leave
sbbb
sar
mov
ret
jae
cmp
mov
xchg
aad
popf
mov
aam
cmp
mov
or
int3
adc
mov
popa
shl
sbb
stos
fistl
inc
stos
sahf
xor
fdivr
movsb
outsl
jns
jae
xchg
push
push
cmp
in
push
scas
lret
dec
xor
imul
jae
test
mov
call
rorb
pop
push
lret
mov
dec
in
cmpb
std
jle
clc
loop
jne
sbb
mov
mov
add
pop
lret
dec
pusha
fcmovne
pop
inc
scas
mov
dec
aaa
std
cmp
adc
xlat
shrb
bnd
mov
dec
cmp
mov
dec
repz
fmull
cld
add
mov
jmp
xchg
shl
fcmovbe
dec
adc
bound
ja,pt
cmp
mov
aad
popf
js
jl
lahf
ss
cmp
push
adc
mov
cs
mov
mov
jg
sbb
in
xchg
sbb
pop
push
dec
mov
arpl
push
add
push
sbb
stos
xor
iret
xor
inc
sbb
inc
jecxz
mov
cmp
mov
or
pop
outsb
push
insb
mov
sub
sahf
mov
subl
xor
push
jne
addb
cld
hlt
imul
out
mov
mov
lds
or
inc
mov
xchg
ficoms
mov
or
scas
aaa
scas
sti
lock
rolb
sbbb
sbb
adc
les
mov
push
rolb
pop
aam
xor
enter
mov
std
repz
into
inc
jge
hlt
scas
sbb
pop
push
mov
pop
adc
jns
add
jb
ret
push
cmpsb
out
push
int
lret
pop
bound
xor
pop
xchg
sbb
push
aaa
mov
mov
in
std
insb
xchg
lret
dec
cmc
xchg
lahf
xor
pop
mov
or
push
push
xchg
jle
fsubl
pop
mov
mov
pop
sbb
inc
repz
mov
push
cltd
or
mov
xchg
out
cmp
pslld
jp
and
mov
js
xchg
lahf
sbb
rcrl
test
sbb
jns
bound
mov
mov
sub
cmpsb
cmc
cmpsb
js
jg
xchg
xor
lods
mov
dec
out
loope
jge
dec
pushf
sub
push
jae
aas
cmp
jmp
arpl
adc
jbe
jns
jge
cltd
aaa
dec
sar
aaa
sub
faddp
lds
sbb
push
dec
cmp
add
push
ljmp
cwtl
out
notb
dec
popf
test
test
push
sub
mov
mov
loop
das
mov
dec
fcmovne
mov
and
xor
mov
lret
mov
pop
fdivr
fldt
jbe
jmp
pop
mov
xchg
scas
fnstcw
out
dec
stos
stos
mov
sbb
sbb
aas
dec
sbb
xor
ljmp
push
aam
rcr
sub
loope
shll
mov
out
imul
adc
lret
cmpsb
xorps
sub
push
pop
sahf
stos
push
push
in
push
in
test
fsubrs
cmp
add
push
jbe
test
push
dec
fidivrl
fadd
dec
add
cmp
movl
mov
push
stc
add
dec
push
test
cmpsb
adc
sbb
notb
xor
or
div
pop
lret
sub
outsl
push
sbb
clc
cltd
lds
xchg
mov
xor
mov
mov
movsl
test
add
mov
call
insb
outsb
sub
mov
pop
outsb
inc
scas
fnstenv
xchg
popa
loopne
sub
jnp
icebp
or
jno
lods
nop
test
fwait
jle
mov
jl
add
and
sbbl
jp
or
mov
clc
inc
or
jge
sbb
mov
lretw
pop
or
xorb
movups
into
les
lahf
shrb
add
push
ljmp
xor
mov
dec
mov
mov
out
fcompl
dec
ret
push
pop
nop
les
mov
jne
lret
cmp
sbb
adc
xchg
cmpsl
ja
sti
push
out
add
mov
jns
cmpsb
sub
gs
mov
xor
ss
mov
rorb
shr
cltd
add
arpl
mov
jge
pushf
ds
jl
ljmp
imul
dec
les
notl
in
adcb
iret
push
in
inc
loop
add
jae
sub
jmp
or
pop
std
and
call
in
pop
ljmp
mov
xorb
or
cs
test
cmp
hlt
scas
sbb
int
dec
mov
movsl
dec
and
fisttpll
jp
push
mov
stc
jo
fs
cltd
mov
in
push
test
mov
imul
adc
daa
inc
jbe
aad
dec
stos
pushf
mov
ficompl
sbb
cs
aaa
mov
adcb
cmp
bnd
mov
int
adc
inc
pop
or
lods
lods
lcall
ja
mov
dec
dec
adc
ret
xor
dec
addr16
mov
cmpsl
nop
ficoms
push
insb
in
test
sub
ret
lds
xchg
and
bound
push
mov
jne
cli
mov
push
cli
es
aaa
xchg
xor
cli
push
jae
imul
jge
in
fucomp
test
enter
daa
lods
mov
jmp
stos
xchg
scas
dec
ret
lods
xchg
out
cld
lock
int
mov
enter
out
sub
js
les
xchg
and
daa
arpl
das
push
bound
cwtl
xchg
notl
out
outsl
fdivl
mov
iret
cmpsl
fnstsw
xchg
dec
stos
call
jl
popf
dec
dec
or
sub
popa
mov
das
mov
or
push
pop
pop
stos
xor
stos
cltd
jmp
lock
cltd
shl
sbb
push
outsb
sti
mov
pop
mov
loope
xchg
cld
mov
jo
fwait
rcl
js
rcr
nop
shlb
jp
mov
pop
dec
jbe
push
jp
mov
jecxz
sbb
xor
out
xor
out
or
out
cmp
dec
cmp
dec
das
cld
hlt
stos
push
dec
scas
daa
sbb
add
jmp
sbb
movsl
ror
std
mov
and
lods
cmp
bound
xor
gs
mov
in
mov
dec
pop
sbb
dec
xchg
mov
and
mov
pusha
and
pop
sti
vpmacsdql
orb
jmp
fsubl
iret
push
loope
mov
mul
stos
les
cmp
sub
xor
cmp
adc
fwait
mov
addb
subb
ss
popa
filds
mov
push
cwtl
cwtl
add
sbb
aam
iret
lret
pop
mov
mov
insb
cli
nop
cmp
in
daa
or
mov
lcall
mov
mov
push
popa
xchg
add
js
and
xor
fnstcw
adc
les
cltd
mov
add
jne
mov
idivb
jb
mov
pop
sbb
les
sbb
adc
fcoml
inc
xchg
sbb
pop
mov
push
pop
in
addl
dec
xlat
mov
mov
xorl
addr16
in
jge
mov
sbb
fbld
std
mov
sbb
scas
cltd
lret
stos
add
ret
outsb
loopne
fiaddl
xchg
jnp
sbbl
pop
add
sbb
push
out
push
inc
mov
bound
and
out
fld
mov
inc
sahf
icebp
dec
push
pop
xorl
push
icebp
stos
jecxz
test
aaa
repnz
test
fisubrs
imul
mov
mov
dec
and
rcrb
add
dec
or
dec
shll
rolb
je
test
decb
jae
inc
xchg
ds
xchg
cmpb
test
shrb
pusha
xchg
imul
loopne
push
ret
xor
pop
sarb
out
adc
ds
dec
pushf
out
inc
pop
push
cmc
lahf
in
cmp
out
push
xchg
lea
bound
jb
lret
adc
mov
nop
jg
dec
cltd
mov
xor
scas
inc
fwait
scas
mov
int3
pusha
pop
pop
inc
fs
jle
enter
in
popf
or
xchg
sub
pop
mov
lods
xchg
inc
mov
xor
insb
in
mov
out
add
xor
dec
mov
pop
jg
push
push
jb
andb
mov
cmc
mov
push
xor
mov
cs
lea
pop
vmread
mov
xchg
inc
push
sub
xchg
xchg
loop
and
push
in
daa
dec
les
test
push
inc
pop
loopne
lcall
fsts
bswap
std
sti
mov
inc
push
jne
sub
jno
enter
js
pop
js
test
sbb
jp
lds
bound
xchg
cmp
lods
add
inc
and
fldl
aad
js
leave
into
pusha
mov
sbb
insb
adc
add
dec
push
xor
sbb
nop
pushf
repnz
mov
jbe
adc
shlb
mov
push
dec
test
inc
cmp
mov
sub
dec
mov
push
shll
mov
arpl
mov
into
repz
lods
js
sbbb
push
sbb
stos
sbb
add
testl
aam
imull
sbb
js
std
adc
xor
into
push
mov
adc
arpl
xor
in
ret
dec
cmp
jbe
aaa
cltd
dec
cli
lret
push
pop
inc
popa
ss
jnp
cmp
push
lds
in
and
mov
push
adc
dec
mov
inc
push
inc
pop
inc
iret
mov
and
mov
into
daa
pop
adc
je
lea
mov
pop
push
pop
bound
std
cmp
scas
inc
adc
sbb
js
cmc
pop
icebp
push
mov
lods
sahf
shrb
icebp
inc
out
ret
pop
lahf
cmpsl
or
inc
pop
fisttpll
sbb
adc
loop
mov
ds
and
pusha
pop
fsubl
pop
ljmp
or
loopne
movsb
cmp
ja
mov
outsb
mov
repnz
push
jp
lret
iret
int
or
jl
insl
adc
mov
ret
dec
and
scas
fists
sub
pusha
xlat
pop
sbb
mov
mov
push
pop
mov
mov
cmpsb
dec
fiaddl
das
pop
insb
mov
adc
dec
arpl
mov
push
mov
xor
lds
pop
jae
notl
push
je
rorl
rol
jp
sbb
add
in
stos
or
int3
inc
shll
and
jbe
cli
xor
mov
int3
adc
dec
es
cmp
in
cmp
push
dec
jnp
adc
mov
aaa
insl
sbbl
icebp
arpl
add
fwait
test
jnp
adc
int
or
lock
pop
mov
and
pop
iret
sbb
in
dec
mov
mov
add
cmp
xor
imul
lcall
add
dec
mov
dec
dec
sbb
outsb
and
into
xchg
dec
mov
cmp
in
sarl
and
lcall
cwtl
mov
fwait
sub
arpl
iret
lock
sub
popf
rcll
mov
imul
in
push
dec
mov
or
insl
out
adc
in
jae
sar
push
aam
in
nop
addr16
mov
andl
mov
cld
add
pop
out
lds
jge
sbb
dec
jp
movsb
aaa
fwait
push
in
mov
nop
xchg
aaa
push
sub
mov
jecxz
xchg
add
ret
adc
push
adc
and
popf
out
fildll
ret
xchg
cmc
jns
fnsave
dec
mov
jl
aam
aad
pop
pop
addr16
mov
jle
ffree
jbe
sti
jb
stos
stos
fadds
les
adc
pop
lret
shll
mov
sub
call
mov
sbb
xor
mov
inc
sub
pusha
aam
addr16
aam
jbe
stc
lret
inc
push
ljmp
xor
jecxz
das
sti
cmp
pop
push
loopne
aas
cmp
mov
mov
push
push
mov
bound
not
js
sahf
push
fwait
call
inc
or
xchg
imul
sbb
push
xor
pop
testl
aaa
and
lret
cld
inc
sbb
aad
jb
repz
into
cmp
in
and
popa
push
and
cli
jg
call
xor
add
cli
fcomi
inc
mov
xchg
popf
movsl
icebp
push
add
lods
adc
pop
xor
out
cld
rclb
mov
cmp
addl
fdivl
adc
adc
pop
loope
mov
lods
shl
lret
pop
adcb
les
hlt
cmp
jmp
ret
push
test
iret
lods
mov
adc
fcompl
andb
and
xchg
cli
fistpll
or
daa
lret
sub
push
lahf
enter
cmpsl
or
sub
fwait
mov
jnp
cmp
sub
jmp
sbb
int
inc
push
subb
jb
xor
xchg
inc
movsb
add
pop
pop
jb
mov
sub
inc
popa
cmp
unpckhps
lcall
ja
sarl
call
pop
inc
das
cmc
test
xlat
cmc
imul
jbe
addl
scas
arpl
cli
sub
popf
xor
mov
and
rorl
lock
jle
mov
andb
lock
cmp
vcmpsd
inc
in
sub
std
call
frstor
addl
xchg
fst
push
inc
lods
in
mov
push
inc
test
mov
int3
push
pop
inc
jmp
and
cmp
push
fstps
sub
repnz
outsb
sbb
dec
outsl
pop
into
pop
jmp
aad
js
sbb
inc
push
cld
push
je
add
loope
jo
aad
dec
aaa
out
cmp
add
rsm
mov
jne
call
sub
cmp
rcr
test
sbb
into
jg
stc
pop
je
add
and
cli
ffree
lahf
pusha
push
insl
in
pop
push
rorl
jbe
std
adc
cmp
loop
dec
mov
enter
in
jnp
mov
or
pop
jge
dec
sbb
sbb
sbb
rorb
xor
jb
dec
push
movlps
xor
sbbl
test
mov
int3
mov
sub
stos
cmp
outsl
fidivs
inc
lds
pop
loopne
xchg
inc
fcomps
inc
push
adc
ljmp
addr16
mov
dec
mov
int3
add
mov
cwtl
pop
xchg
jo
movsb
mov
stos
popf
je
xchg
adc
sbb
mov
scas
ljmp
mov
js
rolb
sbb
inc
inc
addr16
leave
hlt
sbb
or
add
call
or
popl
push
xchg
out
jne
fldt
mov
push
in
adc
pop
mov
cli
mov
stc
pop
stc
push
inc
sub
dec
hlt
adc
adc
sbb
or
cmc
imul
int3
jmp
mov
sbb
daa
rorl
out
cld
lock
lock
cmp
gs
sbb
mov
adc
sub
in
aaa
cmp
mov
imul
mov
xchg
adc
into
jbe
adc
in
xchg
jo
cli
inc
fst
dec
leave
repz
push
inc
push
sub
adc
or
xchg
das
ror
pop
loop
pusha
pop
out
lret
shr
sbb
int3
add
mov
cwtl
mov
mov
lock
imul
mov
sti
push
rcrl
lock
iret
inc
test
sbb
jno
or
fwait
imul
pop
cmp
mov
imul
cwtl
mov
or
mov
xor
sub
enter
pop
xchg
mov
repnz
mov
int3
or
cmpsl
sbb
cltd
mov
cmp
lret
rolb
shr
xor
call
or
dec
xchg
aam
add
mov
jbe
mov
pop
xor
pop
sahf
or
push
mov
adc
sti
mov
push
pop
mov
mov
call
add
adc
aam
out
pushf
subb
dec
pop
lahf
call
es
scas
jne
xchg
mov
insl
xchg
push
jnp
sub
inc
sbb
push
mov
test
call
sub
push
mov
cli
in
stos
mov
rsm
inc
inc
cmc
loop
cmpsl
xchg
in
call
cltd
mov
daa
xor
xor
rorl
push
adc
push
xchg
pop
sub
or
xchg
stos
into
lods
lds
jge
jp
mov
cmp
cmc
jno
fwait
inc
testb
sub
mov
cmp
dec
fadds
loop
sti
bound
adc
mov
fdivrs
rcrb
xor
mov
pop
sbbl
cmc
dec
aam
xchg
les
dec
in
jne
jbe
mov
fucomp
loope
dec
xor
pushf
psubsw
and
adc
jp
cmp
or
jb
adc
loopne
hlt
xchg
je
inc
push
in
or
movsl
scas
and
mov
int
cs
adc
roll
sub
filds
adc
xlat
stos
add
add
mov
aad
lock
shl
lea
sbb
sub
pusha
loope
lret
or
es
sahf
xlat
adc
sbb
mov
add
insl
pop
loopne
inc
mov
mov
mov
jns
sbb
lahf
rcll
dec
cld
jle
iret
out
add
insl
out
ret
add
xchg
xor
sbb
stos
pusha
stos
ja
dec
aas
cwtl
shlb
xchg
cmp
xor
enter
lock
cmc
push
inc
mov
leave
outsl
pop
dec
ja
scas
pop
scas
sub
fcmovu
ds
and
inc
mov
in
pop
pop
sbb
enter
roll
push
mov
push
or
jbe
mov
sbb
xor
stc
into
pop
sub
pop
push
das
nop
test
roll
mov
jg
xchg
push
push
jno
add
aam
sarl
cmp
in
ljmp
pop
hlt
fcoms
mov
sbb
and
adc
sub
rcrb
jmp
xorl
or
cs
daa
and
ds
int3
push
xor
ljmp
mov
cli
inc
xchg
and
jecxz
jmp
xor
lret
mov
xchg
mov
jle
mov
popa
addb
bound
sub
xchg
lods
iret
inc
lock
movsl
fildl
fs
and
mov
and
mov
insb
pop
adc
test
or
adc
mov
mov
or
std
inc
dec
mov
sub
sub
adc
adc
and
push
pop
push
inc
sarl
mov
cld
outsl
fdiv
sbb
adc
neg
dec
xor
add
add
xor
jnp
inc
pop
jmp
jae
ja
jae
mov
mov
sti
mov
out
and
neg
ss
mov
pusha
mov
fs
xor
repnz
mov
imul
test
daa
add
mov
pop
inc
cmpsb
out
in
fisubl
mov
xor
cmp
xor
int3
add
mov
shll
mov
push
shll
xchg
push
stc
sub
test
int3
insb
mov
xor
lds
sub
add
adc
push
mov
push
mov
nop
cmpsb
ret
sub
and
enter
push
sahf
aas
and
push
add
mov
pop
repz
xchg
out
popf
push
test
dec
mov
push
test
mov
dec
mov
dec
cmp
data16
cs
sarl
stc
mov
lcall
sbb
sbb
movsl
in
dec
cmp
jno
into
mov
movsb
xchg
mov
fistpll
in
push
test
or
inc
adc
xchg
loopne
mov
or
and
add
or
or
adc
ret
lods
jnp
add
mov
jmp
addl
sub
mov
andb
jo
inc
imul
sti
mov
lock
je
jnp
add
jg
mov
push
xchg
mov
sbb
jb
cmpl
movsl
push
pop
das
lret
adcl
stos
xor
mov
pop
push
cli
and
inc
loop
iret
rolb
ja
scas
cs
imul
outsb
pusha
pop
mov
icebp
neg
xchg
sbbb
jp
add
jne
repnz
loop
call
jecxz
aas
mov
mov
mov
add
jne
jne
jo
neg
inc
cld
in
sbbl
out
and
mov
sbb
push
and
dec
dec
inc
fs
repz
lahf
lcall
cmp
cmp
cmp
mov
insb
mov
inc
aam
or
mov
mov
mov
mov
sub
popf
jne
sbb
enter
or
imul
popf
fildl
gs
outsb
mov
push
xor
pop
pop
mov
hlt
push
cmp
test
cli
pop
fists
loop
lret
sub
fmull
int3
sbb
lods
sbb
pop
add
pop
fsub
mov
ret
pop
dec
inc
add
push
fstl
xchg
jo
xchg
aad
inc
lds
xchg
push
xor
cmpsl
push
popa
jns
mov
out
mov
rorl
pushf
leave
scas
call
mov
mov
cmp
out
test
dec
aad
std
out
push
jmp
addb
mov
jnp
std
jo
add
cli
mov
std
xor
push
or
dec
lret
repz
scas
push
pop
je
ss
cmp
and
rorl
mov
push
rolb
outsl
adc
lods
cmp
int3
sahf
std
pop
cwtl
movsl
rclb
xlat
inc
pop
aam
fimull
add
jl
movsl
popa
testb
enter
popa
push
lods
bound
adc
mov
cmp
and
stos
loope
sbb
jno
mov
xor
incb
fnstsw
mov
movsb
popf
push
add
cmp
add
outsl
hlt
add
out
sbb
jo
cmpsb
dec
dec
repz
jl
loop
mov
les
jnp
xor
dec
mov
jg
int3
aad
push
mov
adcb
sbb
sub
push
sarl
or
icebp
push
imul
jb,pn
mov
je
into
sarb
enter
mov
loop
data16
scas
gs
in
mov
mov
dec
jp
gs
inc
dec
pop
shll
stos
rorb
inc
ja
xchg
into
add
jno
lock
fwait
ret
rclb
mulb
mov
pop
not
ror
mov
repz
inc
mov
xor
push
sarb
jecxz
sub
lods
lods
adc
dec
ja
dec
adc
sub
dec
fs
push
lods
and
mov
mov
scas
das
scas
dec
mov
out
sbb
push
sbb
dec
inc
dec
xor
jnp
adc
ds
inc
mov
or
inc
ja
leave
jae
cmpsb
movl
fcomps
or
and
in
shrb
jb
shr
jns
scas
or
andl
push
in
jb
loopne
fnsave
sbb
add
sti
dec
push
mov
pop
adcl
cmp
pusha
out
loope
notb
nop
jb
sar
or
push
xchg
fidivs
or
fmuls
mov
ror
xchg
add
or
in
cmp
lea
imul
stos
in
jg
leave
dec
cmp
sbb
stos
pop
into
mov
repz
mov
pop
imul
iret
xlat
pop
mov
pop
jle
dec
mov
mov
sub
cltd
es
les
push
push
shlb
clc
dec
jbe
sub
cmp
aam
aas
mov
xor
push
sub
jmp
popf
movsb
psubw
pop
dec
or
mov
adc
push
xchg
dec
or
call
testb
xchg
or
mov
ljmp
mov
sarb
paddq
ss
cmp
push
pop
and
and
vpmacssww
jmp
jmp
into
cld
pop
aam
and
std
push
mov
stos
mov
inc
daa
aaa
cmp
add
hlt
mov
mov
sbb
xor
enter
jmp
cmp
cld
inc
cmc
jb
sub
inc
cmc
dec
sub
cld
fdivp
int3
or
sbb
in
stos
std
xor
std
daa
pop
xor
stos
out
lea
or
std
mov
popf
mov
enter
or
push
icebp
loopne
pop
inc
pop
pushf
lock
loope
lretw
inc
pop
lret
int
inc
jae
inc
stos
aaa
jbe
xor
push
mov
cltd
lahf
insb
roll
movsl
mov
popa
fdivl
jae
jl
mov
ret
leave
push
and
mov
ja
push
push
jb
mov
mov
mov
dec
or
ror
and
or
cli
ret
pop
jns
xchg
data16
cmp
les
jecxz
paddd
stos
inc
xor
jl
sbb
fiadds
sahf
not
mov
sar
jnp
mov
or
sbb
daa
outsl
lods
adc
testl
push
in
mov
mov
fadd
pop
ret
sub
push
bound
sbb
dec
repz
mov
jbe
popa
orb
cwtl
mov
test
aas
push
xchg
push
orb
pop
pop
loopne
divl
les
ret
cmp
shlb
jbe
xor
push
jnp
cmpsl
sbb
cmp
pop
xchg
nop
fs
pop
xchg
outsl
mov
adc
jecxz
clc
outsb
ftst
or
loop
fstpl
lret
sub
push
rorl
and
sbb
fwait
int
aam
cmpsl
fcomps
mov
push
mov
pop
adc
test
dec
in
and
cmp
in
iret
add
out
push
pusha
dec
sbb
jbe
mov
lret
ds
outsl
mov
fistpl
outsl
mov
ret
cmc
addr16
dec
xchg
cmp
in
scas
sub
mov
cs
jae
add
sbb
or
jge
outsl
outsb
inc
xor
jbe
dec
jmp
cli
notl
inc
fsub
pop
cltd
stos
push
leave
dec
sti
cmc
lret
pop
jmp
daa
jae
insb
cs
repnz
pop
sbbl
jmp
daa
jmp
lock
xor
pushf
cmpl
mov
mov
adc
pop
xchg
enter
in
push
repnz
int
mov
icebp
fdivl
jno
fnstsw
dec
daa
out
cld
xchg
cmpsl
enter
xor
cld
push
xor
lods
pop
pop
je
inc
push
jno
push
dec
ljmp
push
imul
popa
push
cmp
loopne
ret
mov
das
pushf
xchg
popa
repz
fiaddl
adc
xor
xchg
xchg
fstpl
adc
inc
jmp
mov
ds
sbbb
sbb
adc
dec
paddusb
mov
inc
out
sarl
into
jecxz
lret
xor
dec
and
in
sbbb
sti
sbb
pop
lahf
arpl
cld
and
out
test
dec
xchg
lds
xor
xor
mov
ror
jae
jge
add
sub
cltd
push
shll
mov
roll
shrl
adc
jne
sbb
or
pop
push
add
add
pop
and
aam
inc
js
mov
iret
cmp
sarb
cs
ficomps
cmc
mov
int3
add
ds
popa
lds
cmp
dec
sti
cmpb
mov
test
or
imulb
icebp
pop
movsl
xchg
push
into
stos
mov
push
movsl
lret
pop
adc
and
iret
dec
popf
or
pop
xchg
repz
bound
pushfw
sbb
rcrb
or
divl
push
inc
fs
out
inc
fs
pop
int
push
ja
dec
inc
pushf
lret
fldcw
jecxz
sub
nop
ror
sarb
jb
jb
sbb
icebp
into
daa
or
sbb
ljmp
xchg
aaa
rcl
mov
aas
inc
or
sar
and
cltd
or
sub
cmpsl
mov
cmp
ss
inc
subl
add
rcll
xchg
jp
stc
xorb
aam
lcall
push
sub
mov
mov
sbb
flds
push
insb
stos
and
dec
clc
fcompl
pop
insb
mov
pusha
sbb
push
add
loop
or
insl
flds
pushf
daa
je
push
enter
pop
sbbl
popf
cmpsb
sub
push
mov
lahf
adc
cltd
popf
fstpt
data16
sub
scas
jg
lock
mov
and
pop
out
mov
mov
movb
xchg
das
cmp
adc
dec
lods
xor
and
pop
rclb
popa
std
xchg
push
popf
dec
jle
mov
rolb
sbb
sub
test
ret
leave
jle
push
mov
mov
cmp
jbe
mov
or
add
add
popa
stos
jmp
mov
data16
push
jge
sbb
xlat
cmp
cmpsb
mov
inc
les
jmp
shr
push
dec
sub
movl
fimull
movsb
sbb
sti
xor
jl
ds
dec
test
add
or
mov
push
cwtl
jecxz
jl
lcall
aad
adc
pop
lcall
bound
mov
in
jns
es
icebp
add
dec
cs
test
addr16
jns
xor
ljmp
ljmp
out
daa
leave
movsl
cmp
movsl
repz
jge
aas
enter
aas
fisttpl
pop
jae
mov
bnd
xchg
push
sbb
jno
mov
in
insl
out
movsl
rcll
sub
insl
adc
push
cmp
stos
ljmp
cmp
dec
pop
xor
data16
cmpb
test
dec
or
mov
pop
pop
subl
popf
xchg
in
cmp
mov
mul
popf
add
outsl
mov
scas
movb
lods
shrl
xchg
or
mov
loope
lret
loop
inc
aas
lock
or
aad
lds
addr16
repz
js
adc
inc
lahf
sahf
bound
lcall
pop
xor
sub
jae
mov
bnd
movsl
adc
xor
lret
add
cmp
rorb
mov
pusha
scas
lcall
fdivs
hlt
cmpsb
or
push
rcll
pop
sbb
mov
inc
push
les
int
cs
bound
jno
testl
add
push
adc
mov
movb
loopne
xor
mov
sarl
mov
or
shl
cld
pop
imul
adc
ljmp
inc
push
mov
cmp
hlt
lret
push
in
lods
mov
xorl
mov
insb
sbb
dec
shll
mov
jno
movsb
dec
hlt
xor
out
dec
rcrb
mov
cmp
rclb
and
add
loope
addr16
sti
es
sbb
inc
xor
push
mov
in
js
jo
sub
ret
fmul
cmpsl
jle
scas
jne
orl
fidivrs
fidivrl
or
js
aad
test
ja
adc
out
ja
dec
mov
push
cs
or
fnstsw
lret
int3
popa
jp
push
jl
sub
inc
loope
xchg
jb
ficomps
mov
inc
sbb
repz
outsb
mov
xor
or
cmp
mov
jne
aas
xor
sarb
dec
lock
rorb
clc
js
lods
adc
xlat
jno
pop
xor
stc
xorl
shlb
jne
test
mov
movb
sbb
sub
movb
imulb
fsubrl
fs
mov
xor
push
loop
hlt
or
xorb
xor
cmp
sti
movb
ret
mov
out
shrb
ss
mov
cmp
jmp
insb
hlt
mov
mov
daa
ljmp
aas
mov
in
xor
adc
mov
test
or
cmp
cmp
movsb
jg
aad
test
pop
nop
stos
mov
sbb
jnp
push
sarb
ljmp
sub
mov
mov
xor
aam
mov
mov
pop
insl
decb
dec
adc
push
clc
cmp
and
movsl
fsubrl
xor
fcompl
test
and
popf
int
movaps
push
sbb
xor
iret
inc
jo
xchg
adc
or
testb
mov
loop
dec
pusha
pusha
test
outsb
mull
jle
stc
sbb
hlt
ds
lds
cwtl
imul
roll
push
pop
fiaddl
mov
pop
push
das
jae
mov
pushf
jnp
cmp
leave
push
mov
jno
sahf
or
ret
jecxz
dec
sarl
mov
sbb
test
pop
test
or
lahf
lret
and
xor
mov
sub
dec
pusha
das
mov
gs
out
insb
outsl
lods
sub
hlt
idivl
push
add
leave
not
fcomps
push
mov
xchg
stos
clc
lds
jecxz
dec
leave
fnstenv
adc
adc
cli
test
ljmp
mov
inc
mov
out
outsl
and
jle
sub
lret
and
enter
icebp
aaa
mov
xchg
iret
scas
push
gs
inc
and
ljmp
repz
push
xor
fst
outsb
addr16
aad
mov
push
aam
fcmovnb
push
dec
addr16
sbb
shl
mov
adc
push
lret
mov
pusha
mov
aam
and
ret
sbb
cli
mov
shll
mov
push
rorl
mov
scas
xchg
in
cmp
dec
jbe
sar
mov
daa
adc
dec
pop
jae
xchg
pop
and
scas
rcrl
mov
push
cs
popa
out
sti
xor
pop
or
aam
mov
data16
in
idivl
push
and
decb
aaa
ds
jmp
popa
ja
repnz
add
ret
mov
inc
lods
fwait
clc
notl
xor
mov
imul
cmp
xchg
js
xchg
dec
jp
gs
popf
ss
orl
or
jg
inc
dec
test
inc
or
inc
sarb
xchg
add
insl
pop
icebp
jl
pop
xchg
xchg
pusha
jmp
lods
xor
mov
dec
scas
mov
push
test
mov
xchg
lret
inc
pop
adc
inc
adc
xor
jae
xor
sbb
xchg
cltd
add
cs
outsl
ja
repz
scas
mov
aad
or
out
andb
mov
int3
xchg
mov
scas
sbbl
mov
shrl
mov
sbb
std
inc
ror
dec
mov
jns
adc
or
xor
sbb
push
lds
lret
jle
jb
in
push
and
test
pusha
pop
inc
add
loopne
pop
pop
jle
aam
mov
mov
imul
push
loopne
push
or
clc
movsl
inc
arpl
sub
mov
call
push
push
xor
lret
pusha
call
fidivs
test
and
or
jbe
stc
cltd
xchg
sbb
insl
push
ja
loop
cmpsl
jns
dec
mov
mov
cld
pop
fldcw
test
pop
movsl
pop
ja
xchg
cmp
mov
in
nop
movsb
and
fwait
subl
pusha
rorb
pushf
icebp
sbb
mov
scas
xor
stc
cmp
insb
push
push
lds
xlat
les
add
mov
pop
mov
loope
xor
cmc
ror
in
mov
add
sub
xchg
push
add
int3
fwait
call
jo
push
scas
icebp
loop
cmp
push
xor
or
sub
das
insl
or
adc
push
mov
xor
push
mov
ljmp
test
inc
mov
xchg
fstl
out
dec
shlb
cmc
mov
push
xchg
insb
inc
rcr
sub
add
push
jecxz
inc
or
add
dec
mov
movsl
js
push
imul
rcl
jbe
push
mov
adc
pusha
shl
add
cmp
push
fs
cmp
fmuls
nop
jp
push
fisubs
push
sbbl
dec
ja
pop
push
daa
jns
lods
hlt
xor
sbb
or
sarl
jmp
xchg
push
dec
mov
add
loope
pop
test
and
xchg
rorl
jg
data16
stos
js
mov
addr16
pop
cli
stos
pop
and
pop
gs
pop
popf
adc
imul
shr
inc
jbe
fstps
mov
mov
mov
scas
sarb
or
inc
cmc
mov
adc
xor
jle
inc
out
ss
adc
je
jl
stos
out
shlb
ss
test
inc
xchg
xchg
add
xor
mov
aaa
xchg
fcmovnu
repz
and
std
hlt
or
or
mov
or
test
sbb
mov
or
jl
leave
jmp
mov
mov
rorb
push
stos
test
scas
jg
or
xor
push
data16
movsb
bound
jnp
sub
popa
inc
imul
js
inc
mov
cmc
add
imul
inc
mov
and
jae
mov
adc
xchg
mov
mov
jge
mov
enter
xor
xchg
adc
call
push
int3
scas
jne
jb
ror
out
push
adc
lea
sub
loop
sbb
and
or
loope
sti
xor
xchg
rcrb
fstpt
inc
xor
sbbl
add
test
mov
push
fs
jle
stos
dec
xchg
mov
insl
adc
push
pop
and
fimuls
sub
mov
add
filds
repnz
scas
mov
xchg
fildll
jmp
mov
mov
push
sub
xor
in
cmpsb
push
pop
ficompl
scas
je
mov
add
mov
jmp
cmp
movsl
test
push
fcmovne
mul
mov
or
pop
arpl
cmpl
xchg
add
sbb
in
cwtl
fstpt
loop
mov
cltd
jbe
xchg
cmpl
xchg
sbb
aam
into
mov
inc
call
dec
in
mov
ret
mov
add
xchg
pop
stos
enter
mov
inc
adc
aad
repz
lcall
adc
enter
lea
xor
in
ds
and
ljmp
push
or
pop
xor
lock
jecxz
outsb
loopne
or
iret
les
lret
leave
ja
sub
sbb
mov
and
mov
and
mov
jecxz
pop
iret
shlb
xchg
scas
ljmp
jg
adc
sar
mov
inc
adc
pop
jg
xchg
pusha
push
das
jae
push
cmp
xor
and
ret
scas
pop
insl
adc
insl
mov
iret
jl
scas
push
insl
imul
mov
js
sub
xchg
pop
in
cmp
and
insb
cmp
test
mov
bound
xchg
mov
lret
idiv
cmp
xchg
into
rolb
xlat
das
cwtl
jecxz
stc
aad
shl
scas
mov
push
dec
cmpsl
push
push
push
adc
nop
xchg
imul
rorl
mov
mov
pop
dec
push
xchg
mov
mov
cmp
in
cmp
pop
ficomps
jl
cmc
cmpsb
inc
dec
mov
jg
ja
std
imul
pop
das
xor
int
lahf
fwait
add
mov
add
pop
pushf
scas
mov
dec
jl
test
inc
and
into
clc
jb
adc
in
xchg
sub
cltd
cmp
pop
xchg
mov
adc
pop
imul
adc
or
icebp
cmpsb
pop
xor
shlb
imulb
ljmp
outsl
in
inc
jnp
jne
pusha
mov
sub
push
jnp
inc
sub
dec
xchg
inc
pushf
pop
popf
ret
test
mov
sub
mov
popf
rorb
cmpsl
sub
ror
jae
push
mov
stc
outsb
ljmp
lahf
sahf
in
sahf
pop
mov
mov
jbe
sbb
and
sub
hlt
stos
loope
popa
jecxz
mov
mov
enter
lea
dec
push
lahf
adc
jne
fildll
sahf
adc
pop
mov
mov
mov
push
add
out
pushf
fldcw
inc
das
outsl
jae
fcmovu
pop
and
or
int
jge
dec
fcoms
pushf
cmp
mov
jno
mov
popf
mov
mull
or
rorl
push
mov
outsb
xor
xchg
iret
push
test
add
mov
ja
cltd
rcll
jnp
mov
xor
adc
ret
dec
inc
imulb
imul
xchg
loop
popf
fistpl
xchg
movsb
add
push
mov
enter
outsl
dec
dec
sti
jge
pushf
push
cmp
pop
and
inc
xchg
add
sbb
sbb
gs
mov
cmp
and
xlat
mov
jp
xchg
pop
add
cmpsl
into
stos
lcall
sub
xchg
and
outsb
es
xchg
test
mov
int
into
adc
call
jb
cmpsl
fucomi
das
add
and
add
leave
hlt
scas
mov
add
pushf
pop
adc
add
sbb
divb
dec
push
lret
lds
push
cmp
pushf
pop
in
loope
cmp
dec
pusha
ds
xchg
lret
jecxz
mov
ss
and
mov
icebp
mov
jp
or
popa
mov
mov
das
xor
int3
mov
pop
sbb
and
dec
in
fucomp
je
fsubl
es
mov
push
dec
data16
outsl
jns
inc
xor
fwait
sub
inc
lock
xchg
stc
aaa
jmp
nop
fldenv
sbb
jg
cmpsb
stc
les
ret
pushf
mul
or
xchg
notl
sub
jmp
jge
sub
movsb
in
pop
test
pop
sbb
sbb
inc
out
mov
mov
aam
xchg
xchg
and
scas
pushf
inc
sti
and
sub
call
push
push
inc
sahf
cmpsl
lods
mov
and
out
in
ds
enter
cmc
sahf
cmp
push
movsl
jb
test
aad
dec
xor
xchg
out
sti
loope
and
jnp
add
in
or
cmc
mov
adc
lahf
movsl
mov
sbb
push
cwtl
loope
mov
sbb
dec
push
into
jbe
add
push
insb
scas
sub
aas
cld
cmp
lds
sub
repnz
popf
jecxz
mov
adc
out
sub
imul
and
shll
mov
lods
push
fcmovb
or
push
dec
fwait
cmpsl
push
pop
aad
test
fcmovb
int3
and
sbb
cmp
inc
cmp
add
outsl
jb
loopne
lret
dec
std
out
inc
mov
lock
arpl
jne
fldlg2
push
in
jae
inc
dec
sarb
lds
and
rcrl
push
gs
mov
pop
into
icebp
push
xchg
dec
pop
clc
sbb
lret
in
mov
jle
enter
test
das
stos
adc
dec
cmpsb
sbb
mov
adc
sbb
push
xchg
pushf
inc
test
xchg
cli
mov
stc
push
push
sbb
dec
out
cld
outsl
call
push
ss
iret
pushf
fsts
cmp
imul
jl
fs
mov
ret
push
adc
lahf
ret
jo
jg
lahf
addr16
push
dec
push
push
add
test
cmpsl
add
xor
arpl
sub
ss
dec
mov
pop
jmp
add
adc
out
inc
shll
and
enter
mov
ds
push
mov
push
cli
ret
popf
roll
inc
jb
xor
imul
mov
mov
jmp
mov
cmpsl
inc
lahf
xor
out
mov
mov
ljmp
dec
sub
cmpsb
sahf
nop
adc
push
pop
mov
sti
ds
daa
add
push
out
inc
insb
and
int3
pop
test
shl
mov
push
test
and
xchg
mov
pushf
adc
imul
sub
mov
pop
xor
jno
adcb
dec
cli
jne
icebp
xchg
push
popf
fwait
xchg
sti
xlat
sbb
stos
inc
test
mov
dec
jecxz
xor
push
dec
int3
jb
push
fucomip
in
xor
jmp
lret
fidivl
mov
sbb
adc
adc
xchg
out
pop
repz
jae
in
outsb
push
out
sub
jmp
and
cltd
loope
jb
inc
lcall
test
leave
push
test
pop
popa
ret
sti
into
adc
cli
lahf
inc
and
xchg
negl
pop
mov
add
sarb
dec
inc
fwait
xchg
jmp
jmp
lea
jl
and
cmp
decl
in
or
add
imul
enter
out
int
inc
xchg
xchg
stc
push
ror
popa
push
and
jb
js
cwtl
cmp
jmp
or
cld
dec
jb
cli
jb
jle
mov
push
push
loopne
fisttps
test
out
aam
loope
popl
sbb
xor
imul
orps
or
lds
movsl
inc
lcall
mov
jmp
xor
icebp
mov
aad
mov
fiadds
out
idivl
push
mov
dec
pop
sbb
mov
test
in
jbe
and
popf
sub
js
stos
test
dec
lahf
mov
lcall
nop
cwtl
sahf
push
mov
mov
pop
inc
insb
loop
sub
popf
push
and
xchg
mov
mov
xor
or
push
pop
cmc
pop
cld
add
jecxz
cmc
add
stos
cli
into
adc
xchg
jns
loopne
mov
enter
dec
pop
clc
add
pop
mov
sti
mov
mov
fs
outsl
lock
shrl
mov
scas
cmp
cmpb
xchg
add
pop
ret
mov
lret
andl
mov
stos
in
movsb
lahf
mov
cld
mov
stos
inc
aam
mov
xor
push
mov
jecxz
inc
push
lret
mov
gs
inc
add
cmp
xchg
lret
fnsave
arpl
xchg
enter
push
int3
cmp
repz
mov
adc
add
lea
adc
icebp
xchg
xchg
mov
movl
push
mov
into
stos
mov
ljmp
jp
cmp
or
jb
sbbb
xchg
rcl
and
call
mov
cld
orl
scas
sub
adc
jnp
jb
clc
xchg
arpl
mov
in
add
addl
arpl
mov
mov
cmovne
test
inc
sahf
jl
dec
pop
sbb
xchg
lods
scas
ds
sahf
mov
cli
cmp
inc
mov
add
xor
xlat
dec
xlat
das
sbb
inc
pop
pop
sub
out
add
ljmp
mov
pop
mov
cmc
sub
mov
hlt
pop
xorl
jnp
sti
jo
pop
push
mov
movsb
push
inc
add
cmp
mov
adc
mov
and
inc
pop
movsb
sub
inc
adc
test
rol
cmp
sahf
aaa
xor
gs
ficoml
adc
inc
test
jl
mov
xor
cmp
in
test
repnz
adc
enter
jl
jns
daa
push
jnp
adc
and
and
loop
or
stos
dec
xor
fiaddl
and
adc
mov
adc
test
mov
daa
imul
movl
mov
imul
pop
and
sbb
outsl
sub
push
mov
push
xlat
inc
xchg
shll
lahf
dec
imul
insb
pop
cltd
or
int3
mov
lret
lea
aaa
add
ficoms
mov
shrb
add
pop
jp
push
cmp
xchg
jns
mov
sar
pop
rorb
xor
xor
pop
pop
lds
subl
fisubrl
cmp
sarb
cmp
int3
and
push
subl
fnstcw
push
gs
stc
loop
les
jle
push
xchg
jbe
sub
sti
and
and
jae
lods
mov
push
notb
or
imul
xchg
or
loope
or
dec
arpl
lock
mov
mov
inc
iret
adc
inc
jo
push
pop
lods
pop
sub
adc
andb
xor
and
shr
dec
orl
add
adc
testb
fbstp
icebp
or
enter
test
xchg
and
pop
inc
jmp
sbb
std
push
inc
sbb
add
xchg
scas
xlat
lock
fiaddl
stos
fsubrl
xchg
push
scas
and
xlat
xchg
cld
push
pop
aas
jns
add
sub
and
or
fisubs
ret
ret
rcrb
xorb
pusha
mov
roll
ss
add
and
cmpsl
aaa
in
nop
or
cwtl
jne
and
xor
fucomi
inc
ret
mov
das
rorl
add
sti
sub
ss
or
pop
dec
jo
lds
js
mov
and
ljmp
dec
jge
hlt
sbb
nop
aas
jno
xchg
icebp
jns
loope
or
push
push
pop
and
mov
ds
sbb
in
jne
clc
pop
or
adc
add
mov
jno
xchg
and
cmp
or
addr16
jne
mov
into
inc
ror
and
dec
sbb
xor
hlt
shll
pop
jae
mov
mov
sbb
adcb
jno
je
xor
scas
leave
mov
in
hlt
dec
daa
notb
loopne
lahf
out
aam
lret
sbb
jbe
adc
push
mov
sub
pop
dec
test
and
out
mov
fcmovu
adc
scas
movsb
loop
mov
dec
mov
xor
cmp
push
rorl
push
jecxz
jo,pn
inc
mov
lock
popf
fwait
test
jecxz
jmp
test
aas
out
push
mov
cld
cmpsl
xchg
les
or
mov
in
repnz
adc
gs
or
mov
pop
push
test
and
mov
or
and
push
adc
dec
jp
pop
cmp
testl
cmp
out
pop
orl
orb
xor
push
sbb
hlt
push
inc
clc
xlat
add
sti
sbb
mov
ds
push
inc
adc
out
roll
sub
je
jo
pop
imul
outsl
stc
mov
push
cmp
test
pop
or
dec
int
jae
push
enter
pop
out
pop
insl
adc
inc
and
decl
push
dec
and
inc
add
jno
add
mov
inc
fildll
sahf
push
lods
ret
insl
in
rcrb
jge
push
jns
fnstenv
fs
xor
cs
cli
repz
sbb
and
cmc
adc
mov
sub
bound
jle
adc
mov
stos
lret
icebp
mov
in
test
add
test
sahf
nop
imul
push
push
mov
sbb
sub
fnstsw
lcall
add
xor
aad
sbb
mov
cmp
sub
test
dec
inc
es
add
add
fucom
xchg
push
xchg
out
xchg
adc
fildl
xchg
pop
mov
and
leave
aas
add
jmp
jae
cs
int3
xor
mov
pushf
push
add
imull
xchg
add
and
ljmp
jb
mov
jge
ret
sbb
bound
xchg
cmp
mov
out
popf
fnstcw
dec
divl
ss
out
xchg
and
cmpsl
jmp
aam
inc
and
outsl
stc
jae
stc
jmp
mov
xor
add
sub
sti
xchg
loope
jg
pop
pusha
sbb
xchg
inc
mov
or
sbb
out
insb
sarb
rolb
jmp
inc
mov
insl
test
cmpsl
fiaddl
add
std
fwait
inc
shrb
push
out
rcll
nop
xor
xchg
inc
gs
cs
ds
mov
lock
arpl
or
test
hlt
dec
aam
mov
sbb
pop
xchg
pop
sub
rorl
sub
mov
cmpsb
popf
sub
sub
cmp
xchg
jo
mov
les
dec
repz
push
mov
add
bound
sub
pop
add
in
pop
and
dec
cltd
aam
test
aaa
jl
inc
call
xchg
sub
ds
push
mov
cmp
pop
or
and
jmp
jg
ficoml
fmul
lret
xchg
popf
lods
inc
imul
into
sub
sbb
outsl
xchg
dec
in
scas
or
leave
outsl
mov
rorl
and
imul
pop
movsb
cmpsb
ret
mov
daa
xlat
push
int
mov
loopne
sub
iret
test
pop
pop
addr16
sbb
loop
dec
les
testl
add
and
push
mov
cmp
jle
push
or
pop
mov
call
xchg
adc
outsl
aad
popa
lods
inc
enter
out
xchg
adc
int
cmp
mov
cmpsb
lea
push
cmp
or
fsubr
cmp
aad
loopne
mov
jns
mov
or
ljmp
mov
cmpsb
mov
js
or
jp
add
stos
daa
mov
push
mov
test
and
add
popa
test
cmp
repnz
and
dec
addb
imul
cwtl
xor
xchg
aas
pop
and
lret
mov
mov
push
cmp
repz
sbb
sbb
push
or
inc
mov
enter
sub
xchg
rol
xchg
out
incl
rol
into
shll
cwtl
sub
test
hlt
stos
sbb
out
add
pop
arpl
cmpsl
push
neg
in
outsb
jno
mov
sbb
out
ret
pop
push
inc
mov
shll
roll
ss
mov
sbb
test
push
xchg
adc
lcall
push
hlt
lods
lahf
call
gs
mov
mov
sbb
imul
sbb
xchg
pop
mov
add
pop
xor
pop
or
loop
cmp
pop
nop
xor
xor
push
and
sub
outsl
mov
mov
test
lock
cmpsl
scas
lods
or
dec
repnz
adc
jge
dec
and
fwait
sub
sbb
ljmp
test
or
pop
pop
sub
mov
add
loope
sbb
adc
sub
cli
mov
ret
pusha
mov
jg
insl
shrl
dec
add
mov
ffree
xor
inc
inc
xor
push
fisttpl
loope
imul
call
cmp
mov
ds
lds
inc
or
ljmp
loope
das
jg
js
jne
xor
push
cmp
sbb
adc
mov
sub
icebp
dec
sub
adc
add
mov
into
ja
or
pop
insb
ja
xor
cmp
mov
gs
test
cld
mov
mov
cmpsl
cmp
xlat
add
adc
mov
cwtl
insl
inc
data16
sbb
fisubrs
in
xor
les
mov
push
push
pop
imul
mov
sub
mov
addb
loop
mov
movsb
push
xor
adc
ret
iret
adc
push
es
add
mov
lret
push
or
test
jmp
aas
mov
add
bound
inc
adc
daa
jge
aam
testl
loope
cli
icebp
xchg
xchg
sarl
negl
pop
mov
mull
je
rcll
int
pop
arpl
mov
int
call
jg
adc
ds
sub
dec
cmpb
es
popf
jl
into
jecxz
test
adc
cmp
leave
and
add
and
dec
sbb
lret
sahf
sub
add
div
das
xadd
in
sub
lahf
cmc
xor
loopne
popa
test
pushf
mov
lret
sbb
pusha
mov
and
xor
xchg
or
lret
add
ror
outsl
jnp
jp
xor
in
subl
dec
lea
sbb
xchg
fcmove
add
mov
sbb
and
mov
pop
mov
or
aas
std
std
push
push
jo
cmp
out
dec
stos
mov
das
sub
cmp
jmp
jne
mov
bound
adc
stos
popl
mov
mov
xor
mov
fstpt
int
push
pop
mov
xor
jge
divl
sbb
std
or
push
loope
xor
mov
push
js
mov
dec
mov
lahf
aad
imul
mov
inc
cmp
fisubs
add
dec
ss
xchg
imul
lahf
mov
jbe
shll
sti
cmpsb
movsb
sub
jge
lods
xor
shll
push
loop
js
pushl
scas
test
aaa
sub
out
inc
lahf
add
cmp
lock
mov
jmp
pop
jno
aad
bound
pusha
lock
das
pop
outsl
dec
xchg
icebp
stos
stos
cmp
fimuls
mov
lahf
push
repz
inc
mov
mov
sub
dec
test
pop
fimuls
sbb
sbbl
lret
jecxz
jmp
stc
ss
stos
je
aas
mov
xchg
or
xchg
popf
push
je
push
stos
stos
mov
or
inc
mov
pop
and
movl
push
inc
sbb
and
clc
jle
or
jl
or
outsb
out
xor
shlb
mov
subl
xor
add
scas
out
mov
xor
mov
or
mov
jnp
push
shlb
push
stos
jns
mov
notb
pop
iret
cmp
sahf
jo
xchg
xor
dec
pusha
frstor
outsb
mov
mov
mov
pop
cmpsl
jmp
lret
testb
and
cwtl
mov
jne
xor
fcomp
dec
jp
mov
pop
and
sbb
xorb
push
cmp
adc
cli
sbb
or
pop
ficomps
imul
pop
rorl
popf
cmp
fisttps
sub
and
jmp
lods
out
cmp
sub
xchg
xchg
and
cmp
pop
aad
in
xor
imul
vrsqrtps
or
sub
xchg
and
loop
cmp
push
ss
jne
in
push
aad
jb
sbb
cmpsb
test
bound
test
hlt
jae
mov
enter
aas
mov
jmp
adc
add
es
test
adc
mov
fcoms
dec
sti
cmpsl
push
sub
sbb
test
stos
sub
mov
sbb
and
or
movb
and
cmpb
test
adc
cmp
xchg
cltd
aad
cmp
xchg
gs
subb
popa
cli
out
pop
inc
repz
mov
enter
fs
cmpsb
test
sbb
pop
sub
mov
push
mov
mov
test
cwtl
loop
cli
adc
int3
mov
push
inc
mov
repz
mov
mov
and
xor
jnp
imul
jbe
mov
adc
and
loope
push
faddl
movsb
or
sub
js
or
dec
cmc
mov
xor
inc
scas
mov
or
cltd
rcl
shrb
mov
mov
outsb
lds
xor
mov
fsubrs
negb
xor
out
dec
xor
in
jp
sbb
ret
shrl
into
mov
push
fidivrs
clc
pop
divb
data16
std
in
dec
mov
stos
push
scas
lret
sub
lods
in
lret
add
sahf
pop
mov
test
xchg
sbb
in
leave
xchg
or
insb
jns
leave
sbb
sbb
frstor
xchg
ljmp
icebp
ss
ljmp
mov
in
jg
pop
sbb
jmp
jp
iret
lock
subl
add
push
pop
jge
das
jo
and
dec
sarb
xchg
cmpsl
add
xchg
jne
mov
js
cmp
lahf
or
gs
scas
xlat
inc
shlb
jnp
mov
data16
and
and
sbb
jl
jg
jb
jno
xor
adc
pop
ss
bound
mov
xor
lods
mov
lock
lcall
outsb
or
shlb
jle
mov
adc
aam
lods
jecxz
int
push
daa
in
stos
mov
add
mov
mov
and
dec
mov
add
call
xor
pop
shlb
test
mov
cwtl
jo
push
push
mov
fidivl
in
pop
lcall
clc
inc
and
or
or
fadd
popa
dec
cli
std
or
rcll
std
jg
inc
lods
addr16
arpl
push
dec
lods
and
push
jns
cmc
aas
cmovge
stos
mov
xchg
sbb
mov
cli
xor
cmpsb
push
push
movups
jge
add
push
mov
mov
fwait
mov
lret
dec
inc
mov
mov
test
std
jbe
xchg
cmc
mov
sbb
sub
cmp
test
test
dec
cmpsl
jae
jns
push
movsb
addb
jbe
sbb
push
ret
sub
rclb
cltd
sub
mov
adc
outsl
sub
push
cmc
fimull
jno
sti
pop
dec
scas
rol
xor
mov
sarb
icebp
iret
or
in
jne
sub
jp
je
addb
push
addr16
cltd
jo
popa
gs
ds
loop
les
xchg
mov
add
dec
lea
sub
rorb
adc
adc
mov
jb
cwtl
gs
in
sbb
subl
imul
pop
es
bound
ficompl
mov
mov
test
xor
repnz
cmp
test
xor
and
vmovaps
jno
jmp
pop
adc
lds
xor
loop
dec
cld
adc
ret
mov
jne
fwait
aaa
or
mov
add
push
pop
dec
inc
popf
andb
jb
js
iret
sbb
push
lcall
leave
daa
dec
mulb
jno
fstl
xor
mov
mov
cwtl
mov
fs
fbld
lock
int
xchg
lea
outsb
lret
pmulhuw
jo
data16
imul
movsl
cmp
incl
mov
in
aad
xchg
inc
mov
pushf
sbb
lods
cmp
sub
lret
pop
incl
mov
cmp
aas
mov
cld
mulb
cmp
sti
aaa
jae
inc
sarb
pop
and
sti
mov
and
out
daa
adc
mov
push
aaa
cld
int
cmp
mov
adc
xor
dec
xchg
fwait
movsb
add
fimull
ja
push
cmp
lahf
pop
jns
sbbb
iret
fistpl
xor
pop
xchg
hlt
adc
and
cmpsb
sbb
aad
push
dec
scas
pop
inc
pop
into
pushl
scas
stos
fpatan
xor
andb
adc
pop
aas
mov
stos
and
mov
adc
je
ret
cmpsb
orl
xor
loopne
sbb
or
cmpsb
arpl
fildll
daa
fmul
push
xchg
pusha
cltd
leave
sbb
cwtl
add
rolb
adc
mov
int
push
pop
cmp
in
adc
lret
ss
ss
mov
jle
and
sub
mov
pop
sti
xor
lods
push
lods
dec
pushfw
cmp
out
and
sahf
ficomps
or
add
clc
loopne
xor
les
sub
out
into
cs
mov
repz
xlat
gs
lds
gs
sub
nop
into
mov
xchg
hlt
lds
add
jmp
add
in
fists
jecxz
mov
jnp
arpl
mov
cmp
pop
sub
add
daa
aad
sahf
jne
xchg
inc
dec
dec
adc
aaa
add
into
ja
test
imul
scas
call
int
lret
jnp
pushl
in
inc
mov
pop
out
fdivrs
loopne
clc
or
stos
mov
fsubl
andb
adc
cmp
inc
jg
ja
hlt
mov
inc
cmpsl
in
das
ja
pop
jl
cli
mov
add
xorb
dec
in
mov
ret
ljmp
gs
enter
shlb
mov
aam
add
lcall
callw
je
fidivrl
popa
es
loop
test
sub
into
repnz
rep
push
fsubp
mov
inc
mov
xchg
scas
jmp
cmp
push
fwait
cli
bound
push
or
xor
and
inc
push
insb
push
insl
into
mov
push
xchg
repnz
mov
stos
enter
push
mov
inc
push
adc
imul
mov
mov
mov
cmp
stos
cmpsl
and
pop
xchg
out
xor
popf
outsl
push
or
inc
push
or
loop
or
adc
mov
mov
out
xor
or
mov
add
pop
jb
test
loopne
pushf
pusha
jmp
push
push
xchg
lcall
pop
pop
rcrl
xchg
xor
inc
push
push
add
jnp
jnp
pop
add
daa
jb
ljmp
push
mov
shll
cmpsl
sbb
inc
les
filds
jns
test
jns
pushf
jmp
and
push
lret
stc
sub
test
movsl
sar
stos
push
sahf
inc
ret
sub
push
pop
sub
cmpsb
xchg
cld
inc
roll
push
pop
inc
rcll
pop
int
aas
fprem
adc
jae
inc
mov
xor
or
daa
ljmp
add
call
ud2
push
aad
jle
lods
push
repz
mov
cmp
sbb
push
or
jno
fiaddl
push
in
in
dec
insl
cmc
stc
push
add
jnp
xchg
std
repnz
and
int3
dec
in
sbb
iret
test
enter
or
jl
cwtl
mov
roll
dec
cmp
sub
pop
daa
pop
in
jl
lret
roll
cltd
adcl
sub
jmp
fiadds
cld
movsl
stc
jns
lock
outsl
scas
jp
push
push
and
dec
stos
xor
leave
cmpsb
sbb
and
aam
loop
jns
adcl
adc
xlat
jge
test
sub
adc
mull
pop
pop
xchg
pushf
jne
or
sbb
mov
lahf
out
mov
mov
push
pop
push
call
sub
push
repz
movb
xchg
inc
sti
inc
push
push
mov
and
jae
push
in
xchg
dec
add
out
push
jge
pop
mov
ljmp
cmp
jno
dec
mov
shlb
sbb
lods
cmpsl
rsqrtps
lahf
in
push
push
imul
addr16
push
or
lcall
inc
idivl
in
xor
dec
mov
mov
add
push
dec
test
cs
mov
push
movsb
push
test
xchg
aas
in
dec
not
push
rclb
pop
bswap
jge
push
push
sbb
in
and
pop
push
adc
add
jbe
mov
fdiv
fnstcw
dec
jb
jo
mov
outsl
or
sbb
xor
cli
push
xchg
push
and
sar
inc
dec
cltd
adc
stc
and
jg
fisttpll
push
mov
push
pop
pop
cmpsb
mov
mov
mov
xor
mov
mov
adc
aaa
mov
lret
or
adc
int3
pusha
mov
vmwrite
cmp
dec
mov
mov
rcll
repz
rorl
mov
std
sti
mov
xchg
int3
sbb
inc
jne
nop
and
insb
jp
sahf
cmp
jg
mov
or
leave
test
pusha
and
movsb
pop
mov
jp
inc
mov
xchg
sub
ja
mov
jge
movsb
mov
stos
adc
xor
push
shrb
icebp
gs
ja
and
jno
mov
shr
inc
push
pop
inc
or
pop
icebp
mov
dec
jp
jp
test
lods
clc
out
mov
call
mov
add
push
mov
ret
inc
imul
xor
pop
xchg
pop
adc
add
xor
xchg
adc
mov
fdiv
push
sub
mov
mov
jnp
loope
mov
jns
sbb
clc
and
mov
dec
xor
notl
jmp
sbb
mov
cmp
test
sbb
cmp
xor
cmp
xchg
lods
les
mov
cmp
pop
out
clc
add
push
inc
and
cmp
xchg
mov
adc
std
push
fnstsw
and
lret
icebp
or
sbb
cmp
cmp
push
das
xchg
or
fistpll
mulb
pop
fildl
dec
inc
mov
mov
aaa
jmp
pop
movsl
ds
pop
xor
and
pop
mov
leave
jnp
lods
and
cltd
cltd
fbld
out
dec
call
call
jecxz
ret
in
push
push
or
jno
mov
imul
push
repz
or
outsb
js
pop
leave
or
xchg
mov
nop
jae
out
adcl
ret
xchg
mov
lcall
sub
xor
ret
je
or
lahf
nop
mov
and
jns
outsb
lock
cld
mov
push
ss
repnz
xor
out
sub
and
dec
push
dec
add
dec
pop
push
fiadds
rorb
inc
movsl
jmp
dec
sbb
and
bound
mov
scas
jb
jecxz
sti
inc
xchg
xchg
inc
dec
dec
lea
mov
dec
pop
aad
xchg
mov
jbe
pop
jecxz
rolb
pop
jns
push
lret
sbb
movsl
dec
push
test
adc
and
jb
cld
movsb
xlat
je
clc
xchg
data16
testl
pusha
cld
pop
into
and
mov
ja
inc
dec
daa
mov
lret
inc
decb
xchg
ret
jae
scas
int
pusha
sbb
hlt
mov
or
mov
mov
lods
sahf
imul
lea
rcl
xchg
xchg
xchg
adc
push
or
adc
aas
mov
cmpsb
jmp
sbb
add
les
nop
push
cmpsl
mov
cmp
and
jmp
jae
loope
xor
mov
xor
rorb
ss
sti
scas
push
or
mov
cmp
movsl
mov
sbb
mov
dec
cmp
and
xchg
push
mov
lea
in
mov
clc
push
push
xchg
or
sub
cli
jmp
xchg
sti
loopne
xor
rcrb
adc
in
cmp
ret
add
or
popf
jae
push
lock
movsl
outsb
sbb
mov
out
jno
adc
jno
dec
xor
ds
mov
arpl
test
xchg
and
sub
cmp
out
mov
inc
test
push
xor
iret
xchg
dec
loope
jns
test
jno
adc
inc
loop
mov
jmp
mov
test
lcall
int3
and
jbe
or
sti
xchg
loope
push
testl
mov
and
lds
mov
int
jmp
add
lret
inc
cmpsl
inc
add
mov
pop
push
fldcw
sbb
sub
mov
sub
cwtl
xchg
popa
cmp
add
in
int
sbb
psrad
adc
stc
cltd
cmc
mov
jo
pusha
mov
inc
xor
mov
dec
sbb
and
xchg
xor
adcb
inc
loope
mov
xor
xor
cwtl
outsl
jne
jae
xchg
or
push
cli
adc
mov
and
fisubrl
aam
cmp
jecxz
addb
xchg
pop
out
xor
pop
jae
fcomp
aaa
lcall
jg
loopne
add
lahf
in
mov
sbb
jno
dec
lret
jl
jge
neg
xchg
cmp
stos
sbb
sbb
sbb
call
fldenv
jg
jg
xorl
mov
xor
stc
and
mov
andb
pop
jg
mov
push
jg
fmuls
push
mov
push
mov
mov
leave
push
xor
daa
cmp
push
stc
shl
xor
or
mov
lds
out
cmp
or
loopne
out
mov
std
sub
cmpsl
popa
jp
cmp
loopne
in
frstor
lret
sub
sub
jge
xlat
dec
cmpsl
xchg
sti
push
jge
push
or
or
jb
push
outsb
mov
or
sbb
cmp
in
xchg
sbb
insl
fucomip
loopne
dec
lret
mov
sub
inc
adcl
or
jmp
push
leave
mov
out
pop
cs
cltd
inc
add
lret
aad
sbb
push
fldcw
testl
mov
inc
or
es
aam
outsl
mov
jle
ss
sbb
sub
xor
movsb
mov
mov
ljmp
fidivrs
cmp
out
jecxz
cmp
fsub
mov
push
stc
mov
daa
cmp
xor
cmp
mov
bound
xor
orb
icebp
xor
cmp
add
rorl
add
mov
icebp
jno
aad
jae
push
pop
inc
shr
sti
sbb
dec
jmp
andl
sub
out
push
movsb
loopne
loopne
inc
mov
clc
mov
sub
imul
enter
mov
decb
fbstp
sub
sti
cmpsl
repnz
ret
lock
es
xchg
arpl
mov
mov
test
dec
repnz
scas
ret
pop
mov
lret
jg
xor
add
mov
mov
sahf
xor
lods
movl
dec
sub
add
mov
movsl
shll
inc
xchg
mov
mull
dec
lods
xor
test
sbbb
subl
pop
stos
xor
pop
insb
div
iret
lret
pop
jns
repz
add
sub
cmp
and
inc
add
push
shlb
in
cltd
dec
push
lcall
bound
push
jbe
xchg
jns
adcl
push
cmpsl
pop
cmp
mov
or
jl
push
ds
popf
mov
push
popa
sub
fisttpll
scas
test
mov
pop
scas
lret
or
push
sub
dec
test
in
loop
xchg
and
dec
test
cmp
sbb
scas
add
fcmovbe
mov
stc
adc
or
test
cmp
adc
scas
push
rcrl
loopne
lods
aad
hlt
or
mov
jne
jmp
aas
pop
cmp
push
dec
jne
stos
xor
sbb
cmp
and
mov
and
push
popa
andl
mov
movsl
mov
stos
lods
pushf
xor
inc
pushf
add
sbb
sti
rep
add
mov
insb
sub
adc
add
int
sub
pop
push
adc
jb
addr16
jmp
mov
jg
inc
adc
ret
das
cli
xor
mov
pop
mov
sub
stc
lcall
xchg
push
cs
push
or
or
pop
aad
sub
push
and
pop
dec
jmp
xchg
inc
fst
xor
sahf
fidivrs
mov
jne
jne
cmp
sbb
jb
mov
push
test
cmp
mov
aam
inc
and
cltd
popf
jno
push
fildll
mov
inc
adc
xor
mov
sub
dec
scas
inc
icebp
imul
pop
push
cli
mov
call
fists
les
inc
iret
adc
jae
fucomp
mov
lret
cmpsl
rol
sbb
mov
aas
push
ds
ret
mov
adc
mov
nop
cmc
shr
push
std
test
push
inc
popf
test
popf
jne
int
mov
cld
jbe
cmpsb
test
hlt
das
xor
shll
mov
je
push
mov
add
ljmp
mov
xchg
mov
daa
xor
aad
cmp
popf
lock
sti
les
jae
fildll
popa
jl
stos
mov
pop
sbb
fistps
sarb
movsl
popa
dec
push
pusha
loopne
jmpw
and
pop
test
push
pop
bound
ss
dec
aad
pop
aad
lods
xor
xor
push
dec
dec
push
addr16
lret
scas
je
add
stc
xlat
or
gs
outsb
lret
sbb
mov
fwait
sbb
dec
lret
insl
mov
sub
test
pop
movsl
jae
lcall
jne
sti
sbb
loope
jle
pusha
cmp
mov
jmp
jae
sahf
stos
and
in
add
mov
xchg
std
inc
stos
xchg
dec
jl
pop
or
enter
dec
pop
inc
mov
dec
jns
bound
jo
add
inc
push
clc
loopne
lods
movl
pusha
stos
pop
ret
adc
fcoml
lods
je
popf
jge
mov
mov
sub
sub
cmpsb
clc
bound
and
sarl
adc
call
mov
test
in
loopne
adcl
cmpb
nop
add
pop
es
mov
cmp
push
mov
or
adcl
sbb
orb
add
sbb
jo
rol
push
xor
and
out
xchg
cld
cmp
outsb
repnz
push
sub
jns
test
fdivrs
mov
in
dec
xchg
push
pop
push
mov
mov
iret
and
fildl
jge
out
mov
fs
sarb
bound
test
test
or
lods
dec
fidivl
fcoml
add
cmpb
dec
mov
insw
sub
jl
ss
stos
push
jmp
dec
popf
movsb
arpl
xor
push
fistl
push
test
test
imul
cmpsb
hlt
xchg
cmp
xchg
jp
or
adc
repz
out
dec
iret
xchg
lds
jge
cmp
push
mov
add
imul
and
mov
cmp
and
push
dec
dec
adc
mov
pop
mov
xor
lods
xchg
mov
fsub
iret
fwait
sbb
rcl
xchg
or
nop
cmpsb
adc
mov
pop
and
mov
shlb
pop
adc
test
out
xor
repz
pushl
es
xor
stos
icebp
pop
mov
imul
mov
lods
popf
outsb
sub
cmp
pop
shll
fisttps
scas
jg
jg
bound
imulb
es
add
jb
push
mov
call
out
daa
lock
mov
push
fidivrl
gs
stos
pop
xchg
xchg
rol
lahf
lcall
mov
and
jns
andl
fnstsw
outsb
xchg
out
lcall
loopne
cmp
pushf
adc
and
scas
add
sbb
mov
inc
fnsave
xor
popf
repnz
mov
push
lea
add
mov
inc
rolb
mov
xor
mov
stos
push
jns
add
dec
mov
test
aas
jno
xor
push
sbb
in
push
ja
pop
push
aas
subb
mov
adc
in
push
daa
loope
je
ljmp
jb
push
adc
aad
divb
and
icebp
mov
adcl
cs
cmp
push
scas
pushf
or
aaa
push
jmp
pop
imul
lret
lods
sub
cltd
push
gs
clc
xorb
mov
mov
push
popa
pop
sbb
jnp
test
jo
sahf
mov
in
xchg
pushf
xor
inc
xorb
insb
add
and
popf
dec
movsb
mov
pop
repnz
or
pop
xchg
and
addr16
adc
and
inc
pop
aaa
leave
pop
das
fisubrs
jb
push
jp
je
or
orb
loopne
out
popf
outsl
xchg
sbb
sbb
jbe
xchg
and
push
jp
push
add
cmc
iret
jp
jne
inc
ss
sbb
popa
fwait
inc
xchg
lods
or
push
addr16
test
xchg
jge
ret
or
fcmovu
sbbb
adc
jns
fnstcw
mov
out
jo
hlt
mov
aam
addr16
jnp
into
jl
inc
mov
and
and
leave
mov
mov
std
jle
icebp
adc
xchg
or
inc
sub
rol
cmpsl
push
xchg
pop
add
aas
in
sti
adc
rclb
and
lret
cmp
xor
push
es
add
jno
push
ss
mov
out
insb
push
add
xor
xchg
clc
or
push
cmp
outsb
xor
jns
pop
mov
pop
ret
dec
dec
stos
jecxz
pop
dec
jnp
lret
sub
cmp
ret
xor
adc
jne
jl
das
mov
pop
repnz
mov
les
int
jbe
inc
add
and
and
inc
popf
sub
pop
lahf
ffreep
std
imul
cmpsl
xor
mov
in
movb
add
insb
xchg
scas
mov
inc
xor
mov
fildl
pop
mov
mov
add
or
loope
ret
push
in
fs
sbb
mov
dec
cmp
sub
movsb
pop
loop
fwait
adc
sbb
daa
xchg
iret
xor
pop
int3
sub
xlat
shll
test
repz
bts
pop
mov
pop
jo
inc
sahf
push
fstpt
test
dec
jle
jmp
xchg
popa
scas
cmp
push
and
insl
and
daa
int
lcall
ds
jecxz
andb
movsb
or
rorb
lahf
loope
adc
out
mov
icebp
and
xchg
pop
sar
movsl
mov
mov
sub
jbe
stc
sarb
jle
ja
mov
push
jne
mov
jecxz
jle
outsl
loope
ds
jecxz
jge
xchg
or
pop
xchg
jl
or
cs
sub
aad
sbb
lods
fcoms
movsb
add
jmp
or
sub
push
and
insb
push
add
pop
or
push
inc
lret
jae
call
cmp
mov
test
arpl
cli
sbb
or
add
imul
and
inc
cli
xchg
xchg
jg
pop
pop
call
insb
adc
push
cmpsb
xchg
out
pop
cmpsb
fiadds
jl
push
lret
pop
cli
jne
test
adc
iret
pop
fwait
sbb
int
mov
xchg
lret
fistpl
pushf
adc
insl
dec
shll
dec
int
xchg
push
test
lahf
hlt
fnsave
adc
imul
mov
or
nop
fsubr
fwait
ja
cli
into
out
push
xor
xor
pop
dec
xor
mov
int3
lcall
rorl
sbb
iret
inc
fisubs
add
jmp
mov
xor
or
dec
test
aaa
ficoms
mov
cld
and
sti
in
cmpsb
jp
jecxz
push
and
cmp
in
jle,pt
mov
repz
mov
xor
mov
js
jns
push
cvtps2pd
leave
mov
push
sti
std
jno
test
loope
scas
pop
mov
or
and
pop
jg
mov
ret
jmp
mov
pop
jle
or
adc
xchg
call
gs
movsl
cmp
sub
sub
cmp
pop
mov
ret
push
mov
insl
fadd
cmpsl
iret
jo
imul
or
push
xchg
sbbl
loop
inc
stos
add
xor
or
pop
pop
cmp
xchg
fisubrs
cmp
insb
pop
xchg
std
xchg
mov
add
pop
jns
sahf
sti
movsl
xchg
outsb
sbb
push
xchg
pop
dec
adc
sub
jae
rcl
sbb
mov
mov
int3
and
in
and
xor
cmp
cmp
jne
mov
repnz
repnz
jg
push
fidivl
shrl
insb
sbb
mov
andl
sahf
pop
or
aas
cmp
fsts
bound
inc
cld
pop
adcl
jo
dec
jo
pop
mov
mov
out
hlt
lahf
fsubrl
arpl
pusha
mov
inc
xchg
sub
cmp
orb
test
sahf
jl
pop
adc
xchg
cmpsl
jo
lds
ja
pop
in
ret
sub
sbb
xlat
mov
rorb
test
mov
jecxz
and
mov
xchg
mov
mov
test
adc
insl
cmp
das
ds
int3
sahf
pop
imul
xor
shll
push
decb
push
mov
or
sbb
stc
jg
fs
pop
sahf
jle
arpl
outsl
mov
insb
xchg
add
xor
jle
pop
daa
jne
mov
stc
rorb
int
les
cmp
aaa
loopne
or
loop
add
mov
jg
sub
pusha
mov
popf
push
mov
push
pop
jb
xlat
fnstcw
jg
in
dec
stos
jo
leave
lea
ljmp
xor
adcb
dec
jns
mov
mov
pop
sbb
fdivl
fisttps
idivl
loope
mov
add
int3
shlb
std
sbb
in
adc
push
insl
cmp
ja
mov
icebp
ds
sub
mov
mov
sbb
cli
xchg
sti
psrlw
pop
mov
sbb
dec
sub
cld
and
sub
mov
std
pop
out
dec
fcmove
stos
shr
push
ret
pop
int
jo
push
and
and
fisubrl
ja
mov
aas
jb
mov
movsb
iret
int3
movsb
ss
mov
pcmpeqw
lds
loopne
fwait
inc
and
stos
out
mov
jge
xchg
mov
pop
pop
mov
mov
lea
inc
xchg
hlt
cmpl
and
cmpsl
inc
dec
fnstenv
aam
sub
test
jmp
mov
dec
fldt
jo
push
mov
sti
push
pop
scas
sbb
cmp
push
xchg
push
xor
mov
mov
cmpsb
fiaddl
adc
sub
adc
stc
in
scas
divb
retw
xor
std
pushf
sbb
repz
pop
cld
mov
mov
ficompl
mov
and
xchg
mov
subb
mov
fsubr
push
ret
xlat
daa
sbb
in
test
sub
fs
ret
inc
clc
and
and
xchg
mov
jae
push
out
pusha
push
xchg
insb
push
mov
add
out
inc
es
and
jge
dec
mov
or
out
out
sbb
xchg
popf
into
roll
mov
cmpl
pop
adc
sub
dec
ds
call
mov
xor
dec
loopne
cmp
call
add
ss
adc
mov
data16
jmp
je
in
jns
sub
xor
out
xor
mov
dec
xchg
push
or
xor
nop
adc
xorb
and
inc
ja
es
mov
out
cmp
sbb
pop
pop
push
adc
shlb
cmpsb
in
cmpb
jl
lods
pop
rorb
stc
das
push
stc
sub
sbb
lea
xor
adc
cmp
push
mov
sbb
sbb
test
jle
enter
push
add
pop
inc
lods
negb
adc
inc
stos
jae
adc
sub
repnz
hlt
movsl
mov
cmc
scas
push
sti
stos
fildl
aam
lret
jl
mov
int3
xchg
or
test
push
arpl
jge
data16
adc
jb
lds
xlat
fwait
and
cli
lods
mov
inc
fwait
cmp
xor
push
sbb
cmp
adcb
mov
cs
shll
pop
push
inc
adc
xchg
xchg
xchg
aam
xor
ret
dec
incl
mov
out
mov
xchg
hlt
pusha
shlb
adcb
jb
cmp
hlt
out
and
xlat
inc
adc
dec
push
push
das
xchg
fldl
jae
jg
mov
mov
xor
and
sub
stos
dec
stc
sbb
aam
xchg
or
mov
in
adc
xor
pop
ret
std
dec
dec
ret
dec
es
mov
cs
pop
jno
jecxz
movsb
stos
es
pop
add
push
push
inc
xor
lcall
pop
pop
xchg
and
idivl
cmc
xchg
mov
das
fwait
dec
repnz
inc
ret
repnz
jmp
rorb
clc
sbb
dec
jl
and
mov
mov
sbb
ret
or
add
movsb
sbb
sti
repz
pop
popa
or
adcl
sub
add
ret
sub
stos
cli
sub
aam
dec
adc
rclb
push
jmp
xor
adc
fs
jecxz
mov
mov
mov
icebp
outsl
add
scas
and
push
or
sub
hlt
call
adc
sub
adc
mov
test
xchg
mov
mov
add
jl
mov
push
mov
pop
bound
dec
sub
jbe
int3
dec
or
add
jo
sub
lcall
jae
push
cmp
out
xchg
cmp
mov
dec
mov
or
mov
enter
xchg
sti
xchg
scas
rorb
cmp
sbb
and
pop
insb
into
xor
jbe
add
aam
sub
test
push
test
push
add
jo
cltd
inc
pop
in
loope
and
in
les
push
mov
outsb
mov
mov
xchg
cwtl
xchg
fs
lret
popf
adcb
lcall
mov
or
mov
cmp
test
addr16
popa
sbb
jge
lods
fimull
and
in
or
push
scas
aam
clc
scas
ds
nop
ljmp
cmp
jno
mull
lret
pop
lret
fwait
aas
cwtl
data16
daa
mov
pop
xchg
fsubl
cmp
push
ja
daa
inc
iret
or
dec
ljmp
mov
test
fwait
mov
jg
popa
loope
outsb
out
adc
sub
stos
in
xchg
mov
insb
stc
cltd
or
mov
add
inc
sti
jno
fcom
mov
jecxz
in
mov
in
and
pop
test
and
call
and
sarl
mov
push
mov
or
mov
or
cmp
dec
push
ror
mov
shrl
les
cmpsb
notb
cmp
xor
mov
pop
adc
test
inc
sbb
or
pop
cmp
jecxz
mov
cld
or
mov
test
les
pop
push
or
inc
hlt
in
or
jg
in
inc
cmp
or
out
sub
sub
xchg
les
lods
les
daa
push
mov
sub
insl
sbbb
cltd
jb
int3
shlb
xor
dec
jmp
jae
and
push
rcrl
mov
adc
loop
repz
lock
xchg
cltd
push
sub
pushf
sub
or
cld
cmp
in
pop
push
push
mov
lock
sti
cmp
inc
jns
mov
mov
out
sub
sub
movsl
push
xchg
fldenv
cwtl
testb
test
adc
jmp
cmpsl
les
inc
inc
popf
sub
out
pop
dec
stos
mov
lods
loopne
inc
dec
sbb
cmp
adc
lcall
push
xchg
push
pusha
xor
xchg
inc
xchg
mov
mov
cmp
pushf
pop
pop
ljmp
test
xor
mov
ffree
dec
jne
add
mov
jg
popa
int3
jmp
sub
loope
pop
jg
push
stc
lods
xchg
and
stc
cmc
sub
cmp
cmp
out
and
inc
outsl
sbb
fs
mov
daa
push
int
sbb
and
fwait
push
mov
test
and
outsb
addr16
push
fwait
adc
push
xor
sub
adc
in
cwtl
pop
jge
sbb
popa
cmpsl
pop
sbb
je
stos
div
pop
pushf
mov
lock
stos
rol
jno
pop
enter
xor
cmpsl
push
fsubs
sbb
sahf
jnp
and
or
or
add
fcmovnb
add
out
mov
xchg
pop
cmpsl
pop
leave
test
add
adc
pop
xor
and
call
dec
mov
aaa
repz
lds
nop
or
rcr
dec
daa
push
jmp
cwtl
jl
push
aam
pop
fs
push
mov
add
push
in
sarb
add
inc
and
inc
cmp
aam
jl
fsts
jge
mov
mov
in
inc
mov
sub
repnz
out
mov
adc
clc
fisubl
dec
dec
mov
sbb
add
cmp
outsb
xchg
pop
sub
jp
add
mov
sbb
repnz
loope
das
ja
push
enter
bnd
adc
push
lods
jmp
int
or
aad
or
sub
mov
mov
sbb
and
jmp
shrl
inc
sub
sub
push
cs
sub
push
cld
popf
inc
fwait
xor
shl
mov
shrl
aam
mov
mov
jge
loope
cmp
pop
pop
push
add
and
mov
jnp
outsl
rclb
mov
lret
mov
mov
addb
rcrb
mov
jbe
fidivrs
push
pop
mov
stos
or
push
roll
mov
push
enter
cld
xor
and
xchg
inc
sub
orb
or
inc
imul
icebp
clc
pop
xchg
int3
xchg
xchg
and
arpl
adc
mov
pop
lods
xor
mov
cmp
add
lods
lds
mov
in
fistpll
sub
adc
add
shlb
mov
jnp
fnstenv
push
in
push
imul
es
fsts
cltd
cmp
out
adc
lahf
inc
sub
imul
or
xchg
test
test
pop
xchg
push
jp
imulb
or
push
fs
subb
loope,pt
dec
popa
in
into
dec
test
dec
inc
push
xor
int3
fstps
push
dec
int3
data16
cmpsl
dec
test
push
lret
ljmp
call
xchg
fbstp
je
js
lods
or
sbb
jb
pop
test
inc
or
hlt
xchg
jae
cmpsb
dec
sub
and
outsl
sbb
cwtl
mov
inc
ret
fisttps
stos
enter
out
xchg
cld
lods
in
aas
cltd
imul
out
inc
mov
adc
aas
cmp
ret
xor
stc
add
shll
jae
addr16
outsb
cld
sub
push
mov
xchg
mov
xor
push
add
fwait
int
fists
ret
popa
clc
cmp
bound
nop
cmc
je
in
sbb
cs
or
sbb
or
pop
cmpsb
cmp
lahf
mov
dec
arpl
sbb
jg
adc
jbe
movsl
and
data16
out
mov
mov
mov
xchg
into
xor
pop
cmp
jnp
icebp
mov
cmp
jns
ss
cs
insb
push
dec
mov
cmpsl
scas
into
nop
bound
pop
sub
rorl
pushf
fisttpll
ds
xorl
xor
in
inc
pop
arpl
aam
dec
and
fnstsw
sbb
in
mov
mov
ret
sub
in
test
jmp
movsb
lods
in
cmp
or
jae
mov
sub
xchg
mov
mov
mov
imul
jl
icebp
push
ret
mov
jo
push
mov
fidivs
mov
sbb
and
pushf
cmpsb
jp
push
pop
push
cmp
sbb
mov
sbb
jns
pop
jae
push
stc
test
or
jp
mov
and
add
mov
adc
int3
mov
adc
pop
loop
fildl
in
cs
dec
ljmp
pop
push
sub
mov
dec
les
ror
inc
mov
scas
cli
inc
sub
icebp
dec
sub
and
in
cs
xchg
fisttpl
sahf
push
mov
pinsrw
cmpsl
fcmovu
sbb
pop
fstpl
mov
add
sub
cwtl
enter
cltd
sbb
sti
std
xchg
nop
mov
leave
mov
inc
rcll
inc
cmpb
cmp
pop
cwtl
movsb
inc
dec
mov
stos
push
jl
insb
sidtl
insl
add
sahf
inc
cmpsl
inc
xor
scas
out
testl
dec
push
adc
cmovns
cmc
jae
xchg
push
repz
mov
xchg
fadd
lods
fs
add
add
cltd
and
xchg
pop
mov
push
push
into
jb
cmp
movsl
inc
scas
outsb
sbb
jns
mov
std
inc
jb
negl
fisttps
add
lahf
dec
addb
std
arpl
sbb
fbld
in
std
cmp
add
movsb
xlat
jno
data16
sub
or
dec
fildll
ja
and
popa
push
jecxz
pop
fs
repnz
movsl
jmp
sahf
fwait
insb
adc
je
int
pop
dec
cmp
lret
push
sub
stos
adc
inc
sub
bound
push
pop
and
cmpsb
sub
movsl
stos
mov
in
popl
xchg
jg
test
xlat
xor
in
rol
inc
and
jne
jns
dec
bound
push
inc
pop
push
in
stos
cmc
lret
hlt
sbbl
test
scas
cwtl
daa
inc
and
sub
dec
sub
leave
out
icebp
mov
adc
aaa
lret
jae
mov
push
fldcw
fisubs
add
pop
adcl
mov
push
mov
and
sub
pop
mov
mov
inc
dec
inc
mov
and
add
sub
mov
push
pop
push
sub
xchg
add
adc
aaa
test
jmp
sbb
push
add
sarl
ds
mov
xorl
fsubrs
sub
mov
in
xor
adc
dec
pop
clc
les
sub
fst
scas
insl
je
lods
cmpsb
mov
fdivr
xchg
clc
push
ja
gs
addr16
in
scas
jge
icebp
popf
xor
and
jmp
mov
add
inc
in
cwtl
rclb
push
jmp
cmp
push
ljmp
addr16
rcr
call
pop
jo
xor
repz
gs
paddb
aaa
sbb
jmp
cs
incl
mov
xchg
mov
mov
mov
in
push
xchg
dec
sbb
inc
push
sbb
jl
leave
cmp
adc
dec
outsb
sub
push
mov
test
xchg
or
mov
or
jo
add
sbb
cmp
fldt
je
pop
mov
jecxz
mov
mov
or
mov
lahf
push
shr
mov
cli
fdivrp
jne
scas
popa
dec
pop
jp
and
xchg
inc
add
pop
ljmp
sarb
scas
sub
or
pop
mov
and
adc
out
pusha
ja
adc
push
cld
add
out
mov
xchg
mov
nop
test
push
cwtl
add
push
fcomip
nop
mov
data16
and
outsl
mov
and
cwtl
insb
into
outsl
leave
leave
sbb
pop
pop
adc
je
insb
jae
xor
cwtl
adc
xlat
mov
adcb
add
loop
dec
xchg
aam
xchg
jno
jbe
psllq
sarl
xlat
mov
mov
jnp
mov
mov
jecxz
push
sbb
mov
jo
mov
and
pop
dec
repnz
push
sbb
cmp
pop
pushf
dec
mov
call
sarl
lds
push
scas
scas
inc
mov
jmp
push
dec
insl
sub
std
or
dec
cwtl
lods
mov
jae
pop
test
xchg
arpl
xchg
cltd
lret
or
in
sbb
jl
inc
jne
push
jp
xlat
fdivrl
sahf
int3
ret
jle
xchg
ja
in
cmpl
sub
enter
adc
cmp
xchg
ds
je
fisttps
cmpsl
sahf
repz
fs
mov
dec
bound
mov
push
push
mov
sbb
mov
mov
and
gs
cltd
lret
mov
mov
xchg
lods
xor
hlt
push
mov
jnp
mov
scas
leave
mov
cld
xchg
mov
mov
popa
fisttpl
push
arpl
arpl
dec
fwait
icebp
in
sub
pop
or
mov
mov
cmp
push
xor
push
ljmp
mov
nop
cmp
mov
into
and
popf
pop
out
xor
xchg
xor
sahf
cmp
ret
pop
and
imul
sbb
jmp
xlat
enter
mov
sub
in
mov
out
pop
loop
lock
imul
jecxz
addr16
loopne
subb
jl
hlt
sar
inc
mov
mov
and
sub
xor
xchg
sahf
jne
ss
inc
cld
pop
sahf
js
mov
cmp
mov
mov
jo
in
adc
push
xchg
adc
sub
sahf
push
xor
add
in
subl
xlat
stos
inc
iret
aas
dec
xchg
adc
xor
fwait
jbe
push
and
lods
push
xchg
inc
and
xor
lods
push
ret
filds
jecxz
add
push
repz
and
sbb
dec
aad
in
cli
and
mov
pushf
add
mov
push
mov
aam
add
xor
movsb
and
int3
lods
in
fsubr
hlt
inc
in
sub
daa
or
adc
movsb
xchg
dec
mov
add
sub
adc
test
pop
scas
add
sub
mov
lods
mov
jl
aaa
dec
jbe
int
enter
push
clc
jmp
outsb
dec
lock
sbb
mov
jg
cmc
cmc
shr
dec
jnp
fcos
mov
iret
leave
sbb
and
mov
push
adc
jl
push
jb
testb
ret
push
xor
or
das
pop
lahf
outsb
add
cmp
dec
cmp
orb
test
rolb
xor
popf
dec
inc
jne
adc
call
mov
add
subb
test
int
imul
add
adc
mov
hlt
ds
mov
pop
addl
cmp
hlt
and
jle
pop
popa
push
cmc
loope
fidivrs
lods
jns
and
xor
mov
daa
sub
aas
dec
mov
push
sub
lret
add
mov
add
faddl
test
dec
xchg
mov
jmp
push
cmp
cmp
fwait
popa
cmp
and
loopne
xchg
nop
mov
inc
arpl
fistps
lret
out
lds
sub
das
daa
inc
rorl
push
inc
ljmp
push
or
ljmp
cmp
mov
loop
mov
xchg
out
out
cli
push
pop
mov
push
popf
xorb
xchg
loopne
insl
cmc
inc
jp
aad
sub
adc
jl
or
xor
add
popa
adc
shlb
jno
cld
pop
ficompl
pop
je
sub
data16
dec
inc
mov
inc
cmp
ror
jmp
mov
push
insb
mov
xchg
adc
jne
notl
loope
addb
mov
imul
outsb
inc
lods
dec
xor
mov
add
ret
rclb
adc
xchg
clc
mov
jmp
cld
cs
jns
into
or
fs
sti
adc
adc
and
lret
shll
push
push
popa
into
adc
mov
jmp
jp
popf
mov
fcomps
insb
jge
xor
aas
pop
fidivrs
lcall
shll
mov
iret
test
mov
mov
add
jle
pop
mov
xor
cmp
mov
leave
fcomp
ja
pop
gs
push
mov
sub
ficoms
cmp
loop
push
sub
movb
cmpsl
sbb
cld
jge
imul
cmp
mov
pop
lret
jnp
pop
push
or
ret
mov
xor
arpl
pop
fistpl
lds
rcl
outsb
xchg
pop
bnd
push
pushf
or
dec
pushf
push
push
sbb
sbb
incl
push
lock
xchg
movsb
push
test
pop
sbb
rcrb
mov
scas
lret
mov
mov
dec
fdivl
mov
xchg
inc
sbb
mov
sub
and
inc
and
inc
in
fdivs
or
cmpsb
push
mov
and
xor
jle
dec
lcall
mov
data16
push
jge
cwtl
in
cmpb
pusha
out
dec
mov
iret
dec
and
insl
daa
scas
aas
inc
mov
into
call
pusha
rep
outsb
mov
cld
jl
lcall
bound
sub
cmpsl
sahf
sub
lcall
sbb
jge
aaa
in
int
outsb
push
aad
mov
enter
aam
addb
inc
jmp
jmp
xchg
loop
and
xor
mov
jno
fsubrl
sub
push
ljmp
inc
mov
filds
mov
and
jge
xchg
lods
mov
repnz
xor
sbb
test
bound
scas
add
adc
inc
lea
mov
pop
push
dec
or
mov
sarl
xchg
push
out
shlb
sub
sub
xchg
loope
les
xchg
sbb
pop
xchg
addb
fildll
fdivl
iret
icebp
dec
sub
xchg
mov
nop
in
xchg
sub
stc
or
cmp
lea
mov
add
push
push
xchg
insl
jge
pop
lahf
jp
push
adc
xor
xor
decb
mov
add
in
es
jno
movsb
cltd
rclb
es
das
jbe
inc
cmpsl
add
movsl
cmp
xchg
dec
or
jb
xchg
scas
adc
inc
out
mov
xlat
mov
cmp
xchg
les
dec
bound
add
lret
scas
add
insb
or
out
and
nop
adc
and
jg
insb
cmp
fistpl
inc
push
or
clc
out
adc
lret
inc
jnp
sub
sub
xor
jle
inc
stos
mov
rol
cld
push
popa
das
adcl
pushf
dec
dec
sahf
sub
or
loopne
outsb
aam
or
ljmp
das
insb
imull
imul
aam
ret
in
data16
dec
mov
out
int3
push
push
pop
out
cli
sbb
data16
int3
or
add
ljmp
je
repnz
mov
xchg
cwtl
adc
cmp
stos
mov
call
dec
adc
push
pop
call
js
dec
imul
push
lock
arpl
sbb
lods
mov
push
icebp
sub
pushf
mov
scas
mov
push
mov
cmp
push
insl
xor
pop
clc
adc
add
rolb
das
push
xchg
mov
cli
mov
jmp
jns
mov
sbb
sbb
fnstenv
mov
iret
outsb
loope
fidivrl
mov
ja
insb
push
add
lcall
cmpsb
aaa
jb
mov
cltd
adc
into
mov
mov
sub
pop
aas
notb
mov
xor
addr16
hlt
inc
test
sahf
pop
pop
test
push
mov
push
xchg
mov
jmp
jno
xor
or
sbb
dec
pop
lods
rorb
mov
inc
push
out
mov
ja
xor
ds
loopne
add
cmp
cmp
fistps
or
sahf
nop
jl
out
mov
inc
sbb
dec
lea
dec
cmpsl
andl
fcomps
dec
push
popf
lret
dec
mov
test
outsb
jnp
dec
out
lea
pop
cmp
cmp
or
xchg
sbb
fcom
pushl
test
pop
pusha
push
pusha
mov
push
pop
iret
iret
inc
xchg
cmpsl
dec
add
jmp
cmp
dec
cltd
cmc
or
cltd
bt
inc
fcmovne
mov
or
not
movsb
les
test
in
or
mov
pop
dec
jno
mov
push
outsl
mov
and
stos
cmc
push
dec
jns
cwtl
lds
jne
adc
sbb
adc
loopne
inc
add
imul
jno
dec
or
das
cmovae
je
jae
add
cmp
data16
out
mov
mov
and
push
lock
movsb
fcmovnb
scas
shlb
es
sub
or
data16
sti
ret
cmc
push
scas
mov
and
popa
out
adc
rorl
mov
repnz
mov
fidivl
cld
cwtl
jl
fwait
pop
das
sti
out
clc
push
and
cmp
or
nop
call
jle
cmc
xor
add
xchg
loopne
dec
jnp
test
xchg
stos
xlat
in
in
push
pop
pop
mov
dec
test
fdivl
sbb
pop
mov
mov
cld
add
xlat
push
movsb
push
stc
stc
cmp
dec
sbb
pop
rorl
add
pcmpeqd
lock
mov
adc
adc
mov
sbb
cmc
dec
das
sbb
subl
ja
xchg
push
movsl
add
or
mov
imul
jbe
push
mov
rcpps
fld
and
cmp
sbb
fnstsw
mov
jne
mov
arpl
lds
fcmovne
sahf
inc
fwait
cmpsl
fimuls
xorb
outsl
cmp
inc
loope
cmp
pop
jo
test
iret
and
or
fimuls
ja
cmp
inc
add
mov
repnz
notl
inc
push
or
add
test
mov
or
push
fimuls
out
rcrb
dec
out
pop
nop
push
adc
mov
ret
mov
or
fiaddl
jbe
call
test
in
aad
pop
repnz
or
dec
jg
jns
faddl
add
std
sbb
test
jp
mov
adc
clc
insl
xor
outsl
ja
pop
popa
pop
ja
je
loopne
in
shlb
movsb
ss
sub
pop
mov
cmp
lea
or
leave
int3
rcr
shrl
xor
pop
or
or
or
hlt
jle
jp
les
iret
lcall
jl
fs
aam
mov
or
push
repz
imul
cld
ljmp
add
dec
mov
xchg
dec
hlt
jl
sub
shrl
fmull
jmp
pop
in
lcall
cld
sub
decl
dec
test
leave
lcall
mov
fs
not
fs
push
inc
outsl
test
and
push
test
xchg
cld
dec
mov
sub
and
mov
xlat
ss
jbe
and
sub
movsl
pop
cmp
outsl
cmpb
xchg
jge
in
jno
sbb
imull
xlat
push
sti
fcos
mov
mov
push
es
cmp
cmp
adc
sbb
and
pop
out
xor
cli
aad
das
fdivl
scas
movsb
adc
and
ret
daa
arpl
adc
mov
adc
out
iret
lret
into
gs
scas
out
jp
xchg
jecxz
add
shll
mov
jl
xor
or
aad
jb
mov
ret
enter
sub
cmp
xchg
mov
add
and
mov
idivl
leave
pop
pop
cmp
aas
dec
insl
xor
out
jp
es
scas
xchg
pop
or
inc
and
cmc
loop
pop
cwtl
fmulp
adc
inc
xchg
fs
jne
fs
push
xchg
sub
or
sbb
mov
inc
or
pop
or
aad
lret
jmp
mov
loopne
test
es
nop
xlat
test
int
xchg
xchg
mov
cmp
jae
mov
sub
jns
out
cmp
sahf
mov
adc
pop
pop
mov
xorb
cmp
adc
popa
dec
repz
mov
pop
shrb
rcl
leave
iret
outsb
jp
stos
jno
rcrb
daa
shrl
in
scas
pop
cltd
push
mov
pop
andl
xlat
scas
lock
sbb
lods
sub
push
lret
xchg
insl
repz
sbb
iret
cld
in
addb
sbb
pop
mov
mov
sub
xchg
push
fs
xor
xor
mov
cmp
loop
adc
pop
js
fs
add
stc
mov
jns
rol
dec
mov
pop
sub
pop
dec
jecxz
xchg
repnz
lds
xor
push
sbb
cmp
dec
xchg
scas
cmpsb
jne
testb
push
xor
adc
mov
jns
stos
push
shlb
push
test
cltd
pop
inc
inc
iret
jge
mov
inc
xchg
cmp
outsb
jl
fidivl
aas
adc
inc
sbbl
arpl
adcl
jo
push
sub
lret
out
and
push
incb
adc
mov
mov
lods
mov
xor
and
jnp
int3
aas
cmp
cmpsl
jge
pop
movsb
outsb
xorl
popf
cmp
lret
stos
xchg
add
idivb
sti
or
sub
pmaddwd
dec
dec
pop
xor
pop
push
mov
repz
mov
gs
inc
xor
push
sbb
mov
pushf
xor
inc
mov
xor
pop
adc
add
leave
mov
mov
or
cmp
sbb
xchg
sbb
imul
pop
xchg
jle
and
pop
loopne
and
shl
std
scas
jne
pusha
call
push
mov
sub
mov
sub
pop
dec
jno
addl
jl
test
test
je
fs
test
cmp
neg
pop
cmp
pushf
das
adc
addr16
xchg
sub
nop
jae
sbb
and
lods
inc
cmp
in
ret
add
adc
xor
adc
push
pop
inc
dec
mov
call
negl
sarl
pop
and
jb
lcall
sbb
pop
loop
xor
mov
pushl
push
out
popf
cmp
mov
and
or
ret
mov
test
fcoms
sbb
or
and
sub
xor
lds
add
iret
imul
mov
movzwl
add
mov
jle
inc
dec
cmp
push
jnp
cmpb
mov
xlat
rorb
addr16
fisubrl
fwait
test
ret
into
pop
mov
cwtl
mov
fcmovnb
xrelease
xchg
add
fdiv
orl
xchg
loopne
test
cltd
xor
in
jl
inc
cwtl
lds
mov
inc
inc
inc
fisttpl
add
push
stc
scas
mov
push
aam
cmpsb
in
pusha
or
xor
mov
adc
push
dec
jecxz
aad
out
ret
and
mov
ja
rclb
js
sbb
clc
cld
in
cmp
inc
dec
adc
aam
outsb
pop
push
fidivrl
pop
mov
dec
insl
push
imul
cwtl
push
addr16
inc
gs
dec
lds
dec
lret
cmpsb
lea
outsb
repnz
and
sub
out
arpl
stos
mov
jnp
in
xor
cmp
loop
dec
jecxz
jae
popf
mov
loopne
subl
dec
jb
fmuls
mov
xor
xchg
das
loope
xchg
stc
ljmp
bound
mov
insl
pop
push
outsb
and
shlb
or
xor
or
mov
cmpsb
add
cmp
rorb
das
sarl
scas
mov
mov
xor
bound
sbb
pop
push
cmpsl
xor
push
or
lret
scas
dec
repz
mov
inc
scas
icebp
and
scas
mov
addb
imul
inc
pop
and
cmpsl
mov
addr16
sub
daa
icebp
xor
shlb
pushf
loop
jl
aaa
xor
sub
lahf
adc
xor
xor
mov
lret
aas
scas
decl
jecxz
fadd
movsl
and
inc
aaa
lret
shrb
loopne
inc
dec
push
ret
mov
cmpsb
push
loope
fstl
ret
fildl
and
push
in
bound
push
fidivl
jp
jo
cmp
dec
dec
push
lods
ret
push
push
mov
dec
in
push
xchg
shll
and
add
insb
mov
movsl
xchg
and
or
je
test
push
cmp
cli
mov
cmp
jne
mov
fcmovu
jle
add
outsl
inc
rclb
xor
xor
test
xor
sub
xchg
xchg
jnp
stos
fldcw
xor
cwtl
mov
icebp
sub
aad
mov
jge
fistpl
adc
test
je
aam
xchg
test
scas
es
mov
inc
and
jl
cmp
mov
and
jns
cmp
push
loop
faddl
cltd
pop
cmp
jl
imul
cmp
sub
lods
mov
mov
fsts
sbb
cmp
mov
or
fisubrl
mov
es
lds
xor
lcall
add
dec
jne
and
cli
push
add
and
push
ljmp
push
dec
sub
cmp
leave
cmp
cmp
inc
gs
lods
fistps
jle
loop
inc
jae
inc
push
sahf
xor
shlb
lods
lahf
or
pop
jne
ret
pop
sub
loope
mov
inc
jg
sbb
mov
push
cmp
xor
cmpsb
adc
add
movsb
popa
pop
call
test
adc
mov
insb
adc
test
enter
mov
ds
jmp
in
cmp
das
sbb
fimull
insl
pop
fwait
sub
jb
mov
or
rcr
mov
iret
dec
sub
mov
addl
enter
or
stos
or
aad
xchg
mov
jg
mov
mov
fisttps
push
sbb
lods
sub
dec
loopne
xor
sbb
or
pusha
es
sbb
cmp
jns
xor
inc
in
cmp
inc
gs
pop
mov
cmpsb
xlat
mov
sbb
das
adc
or
push
inc
xchg
adc
push
rcl
test
aas
or
mov
outsb
pop
repnz
xchg
mov
sarb
pop
stos
cmp
sbbl
adc
shr
jo
shll
inc
scas
fdivl
mov
and
aas
test
mov
pop
in
xchg
xor
xor
adc
xor
ret
push
rcrl
notb
xchg
scas
push
insl
adc
in
shl
fucomip
call
inc
lret
lds
cmpsl
sar
cmpsl
inc
enter
mov
xchg
mov
and
jp
or
in
ret
inc
ljmp
xor
loopne
clc
faddl
mov
out
mov
pushf
out
xorps
dec
sahf
es
xchg
sahf
test
jae
call
inc
jns
push
push
mov
lret
pusha
lods
cltd
pop
sti
loopne
stos
adc
mov
hlt
ss
loopne
pop
mov
cmp
ret
and
add
cmp
mov
pop
inc
call
mov
stc
fcmovbe
out
sahf
sbb
lea
jbe
push
sbb
out
insl
mov
adc
sbb
sbb
lea
lahf
imul
sbb
xor
push
xchg
pop
aad
dec
mov
ds
gs
sub
push
or
out
or
adc
mov
sub
movsl
adc
in
jnp
sub
fnstcw
mov
les
out
std
sbb
push
and
out
call
xchg
scas
inc
pusha
mov
jecxz
xchg
mov
push
les
inc
cmpsl
iret
mov
adc
cmpsb
jo
test
pop
filds
pushfw
add
subps
inc
mov
sub
das
sub
sahf
adc
repz
je
pusha
mov
or
sbb
push
insl
ss
aam
xchg
test
or
lock
push
in
bound
into
ret
loopne
mov
in
cmp
scas
addl
dec
push
or
cli
dec
pop
cmpsb
lods
test
or
inc
mov
iret
cmc
cmpb
mov
stos
std
mov
dec
mov
push
rcrb
xchg
jno
jge
mov
or
in
add
mov
popf
and
push
mov
xchg
push
fsts
mov
stos
cmp
pushf
int
cmpb
jne
add
push
xlat
cli
push
cmp
sub
in
lret
and
jl
and
pushl
mov
imul
dec
cmp
or
jle
ljmp
fcmovu
mov
sub
sbb
test
inc
dec
xlat
mov
ja
jl
push
mov
mov
out
test
pusha
scas
or
push
jns
sbb
je
mov
cmp
push
mov
adc
int3
inc
fsts
test
cltd
scas
jns
movsb
xchg
repz
lods
out
pop
jns
inc
lcall
cmc
aaa
sub
add
pop
add
push
dec
or
enter
jge
xor
mov
and
rcrl
jbe
dec
fdivs
outsb
adc
dec
sbb
jns
ss
or
dec
popa
les
icebp
sub
int
lea
mov
push
loop
std
fstp
adc
test
inc
int3
insl
mov
sbb
shll
add
jo
push
loopne
inc
jp
dec
jmp
cld
arpl
rcll
test
pop
pop
or
xchg
lea
sbb
sahf
shl
mov
stos
cmp
pop
rcrl
jp
adc
dec
pop
les
and
add
shl
xor
aad
aad
sub
mov
push
popf
popa
fsubrl
pop
or
jbe
mov
sub
addl
mov
lds
add
mov
cmp
cmp
in
xor
pop
xchg
dec
test
inc
lods
xchg
xchg
pushl
inc
push
fnstenv
cs
adc
cli
mov
pop
psubusw
dec
mov
mov
icebp
fimuls
repnz
cmpsl
aad
sbb
sbb
aas
mov
and
xlat
int3
push
mov
push
outsl
lcall
mov
pop
and
mov
sub
outsl
rclb
push
sub
incb
and
addr16
or
xor
xchg
add
popf
push
mov
mov
test
xchg
lret
adc
call
jo
push
cmp
sbb
inc
cmpsb
sub
out
dec
hlt
in
pop
into
and
sbb
cmp
das
out
or
push
ficompl
ficompl
push
sti
or
or
jge
repz
lea
popf
sub
ja
lods
fists
into
or
out
in
repnz
aam
nop
in
mov
fdivrs
ljmpw
lock
cmp
dec
or
ficompl
sbb
movsb
inc
test
out
bound
xor
out
mov
lds
adc
adc
int
push
or
popf
cmpb
lahf
and
xor
xchg
das
or
inc
xor
cmp
cmp
iret
lock
shrl
dec
xchg
pop
loope
int3
je
sub
hlt
ficoms
iret
xlat
inc
lcall
les
mov
inc
loopne
iret
sbbl
mov
mov
rclb
mov
jl
call
loop
and
nop
mov
in
jle
loop
xchg
cmp
mov
addr16
sbb
fwait
jno
loope
movsb
mov
xor
push
gs
jnp
and
mov
out
push
cmp
lea
fwait
dec
into
cld
xchg
jge
push
sbb
cmp
fists
sbb
inc
cwtl
lea
pop
push
lds
dec
mov
sbb
test
mov
jno
push
push
into
mov
notb
fstpl
rcl
xor
into
pop
cmp
loop
mov
xlat
or
pusha
ret
xor
lret
push
mov
fstl
xchg
jb
sbb
rcl
sbb
inc
lcall
ror
xor
pop
dec
dec
rcrb
fwait
or
inc
fwait
pop
push
ret
testl
js
outsl
loope
lds
sar
repnz
add
outsl
rolb
inc
pop
movsb
inc
stos
cmc
hlt
and
pop
aad
imull
ret
adc
cmp
pop
mov
bound
sub
pop
enter
repnz
dec
pop
cmp
call
cld
outsb
push
cli
jo
sahf
xchg
sub
dec
add
out
cmc
mov
popa
jnp
push
scas
into
orb
jecxz
mov
push
adc
sbb
mov
cmpsl
xor
clc
jmp
test
sahf
xchg
int
jmp
fsubr
js
dec
mov
fwait
xor
imul
pop
incb
add
fwait
inc
in
push
rorl
sbb
pop
mov
sub
fldl
mov
sub
inc
and
cmp
lods
popa
push
gs
outsb
xor
add
push
adc
adc
or
adc
xor
mov
pusha
jnp
push
cmpsb
outsb
pop
inc
and
or
mov
lea
aas
ss
in
pop
pop
jbe
lahf
imul
jmp
loope
lahf
pop
sar
and
jns
push
dec
push
fs
mov
lock
pop
cmpsl
push
dec
lahf
mov
add
lret
xchg
aam
jg
cld
sbb
xor
pop
stos
jo
rorl
add
jne
call
mov
add
or
push
pop
mov
jmp
sbb
dec
mov
sbb
mov
insb
xor
leave
push
rcrl
inc
mov
jmp
mov
lahf
mov
cs
lods
xor
push
jl
call
into
or
pop
xchg
in
inc
dec
xor
push
mov
sarl
dec
bound
inc
sbb
ds
call
push
daa
mov
jecxz
inc
jp
jl
add
mov
repnz
sarl
sbb
aaa
icebp
inc
popf
mov
cmpsb
sahf
and
lods
cmp
and
loope
push
xchg
sub
and
mov
mov
cmp
sbb
cmp
xor
inc
sbb
ret
push
push
mov
mov
xlat
mov
jge
add
popa
and
out
add
jne
aaa
nop
scas
stc
cmp
or
mov
mov
imull
xchg
adc
idivb
fadd
add
cmp
mov
cmpsb
push
out
xor
inc
stc
dec
loopne
and
jge
adc
sbb
jl
xor
sbb
loope
es
loope
mov
and
jb
je
je
ficomps
push
popf
pusha
mov
pop
and
sub
rclb
orb
stc
mov
lods
inc
les
in
inc
jl
mov
rcrl
fdiv
popf
xchg
add
push
js
movsb
add
adc
push
aam
and
and
jb
in
sbb
call
jecxz
cs
xchg
jmp
fmul
scas
idivl
mov
out
sarl
data16
push
mov
push
mov
pop
fwait
xlat
lahf
lret
je
sbb
ja
cmp
xchg
jle
imul
rcll
lret
xor
into
inc
jno
inc
xabort
sub
adc
add
in
mov
xor
mov
and
stc
jmp
cmp
push
push
adc
mov
cmp
jle
insb
pop
push
push
data16
call
stc
mov
cmp
sbb
inc
or
bswap
lret
or
sbb
adc
mov
push
sahf
mov
cmp
incl
and
pop
stc
lret
jge
lcall
loopne
sbb
push
call
xchg
imulb
dec
in
mov
addr16
out
mov
mov
inc
in
cld
and
in
mov
cwtl
test
fists
xchg
xor
inc
xchg
sub
dec
mov
add
lret
out
jg
xchg
adc
dec
shlb
push
push
jmp
pushl
jnp
test
popf
xchg
lock
pop
jp
loop
lods
xlat
xchg
sbb
rclb
sahf
add
aam
movsb
fidivl
in
mov
cltd
psrld
addr16
pop
fwait
aas
ret
mov
add
push
or
dec
inc
mov
std
jg
mov
mov
jle
rorl
push
fstpt
cmp
repz
jno
cmc
or
lds
and
mov
push
sbb
push
xor
push
out
jg
mov
imul
shll
mov
nop
aaa
call
add
xchg
outsl
inc
pusha
inc
arpl
mov
arpl
das
movsl
loopne
push
push
adc
movsl
leave
popf
push
jle
push
sbb
bound
mov
xchg
lea
mov
inc
frstor
mov
das
lock
mov
popa
lds
bound
adc
pop
cld
mov
cwtl
loop
cmpsl
mov
lods
sahf
ja
xchg
cmp
adc
jno
add
jnp
pop
outsb
test
inc
jbe
xchg
mov
inc
fsub
push
xorl
insb
xor
inc
inc
push
jo
dec
fidivs
rcrl
imul
outsl
and
and
dec
inc
mov
mov
hlt
psubusw
and
int3
mov
push
jmp
xor
testl
pop
arpl
adcl
pop
scas
ret
push
js
mov
jo
ss
inc
data16
cmp
hlt
nop
insb
daa
stc
fmul
loop
std
add
jge
test
sbb
pop
loope
pop
mov
and
fstps
jns
fucom
ret
andl
fdivrs
pop
rcll
rorb
cmp
jge
sbb
cmpsb
inc
or
loope
add
cmc
push
sbb
mov
sbb
jmp
ss
orb
arpl
sti
sbb
sbb
mov
mov
jo
or
fucomip
mov
sbb
loope
sti
push
lret
dec
mov
cmp
mov
cwtl
sub
jecxz
push
push
mov
mov
sbb
mov
orb
divb
push
jmp
dec
mov
xlat
lds
loopne
pusha
iret
ffree
cmp
mov
dec
xchg
cli
pop
adc
fwait
cmc
jg
hlt
out
xchg
into
scas
sar
aad
popf
pusha
out
mov
mov
push
and
popf
sub
outsb
ret
add
or
and
inc
das
dec
push
cmpsl
std
loopne
jmp
repnz
mull
adc
sub
in
insb
and
pop
test
xor
clc
xor
lcall
repnz
mov
xchg
mov
cld
imul
in
cmpl
dec
jmp
xchg
push
mov
cmp
push
and
loop
mov
jne
cmpsl
dec
and
adc
jmp
dec
dec
movsb
jp
pushf
fsubl
push
sbb
lods
mov
ret
fcmove
into
les
dec
jb
mov
dec
and
outsl
pop
push
xchg
das
pop
test
jo
xor
pushf
roll
xchg
sub
pop
jbe
in
xorb
arpl
and
sahf
in
fprem
jg
stos
or
fcoms
mov
xchg
push
cmpsb
stos
mov
cli
pop
add
into
leave
orb
fwait
lret
push
iret
adc
loop
mov
inc
inc
nop
pop
cmp
pop
inc
repnz
cmpsb
outsl
cwtl
mov
pop
aas
jbe
add
mov
loop
push
cltd
jmp
iret
sub
pushf
test
pop
jo
ss
jo
into
sub
mov
insb
adc
in
imul
aas
or
cmpb
int
xchg
or
lret
mov
jg
push
rcrl
jns
mov
loope
dec
add
inc
imul
fcmovb
cmp
lret
in
dec
rcr
sbb
sbb
adc
in
add
pop
mov
arpl
mov
mov
insb
dec
jmp
sub
push
mov
inc
out
adc
ret
orb
cs
jmp
or
fmuls
dec
int
push
inc
mov
pop
lds
pop
push
sti
xor
dec
push
aad
adc
test
push
mov
xchg
adcb
data16
mov
and
daa
mov
popf
je
push
jecxz
je
sbb
hlt
clc
js
xchg
lea
dec
pop
mov
jmp
mov
pop
jnp
into
pusha
dec
cltd
popf
and
scas
cwtl
int
pop
lods
dec
out
inc
arpl
xor
mov
ret
insb
push
mov
scas
loop
inc
jae
cmp
cld
mov
push
mov
call
mov
rorb
test
push
ds
pop
in
xchg
pushf
lret
and
lds
fadds
add
jb
call
rclb
out
xor
sub
cwtl
sarb
inc
xchg
outsb
and
push
mov
mov
test
in
lock
sahf
xchg
cmpsl
adc
loop
push
xchg
outsl
stos
movsb
jns
sbb
ja
dec
jo
fstpl
jle
sub
ja
push
or
mov
lcall
rcrb
mov
es
xor
and
xchg
icebp
in
lods
cltd
mov
testb
ret
sbb
mov
sub
add
xchg
sahf
mov
adc
mov
cwtl
mov
sbb
fwait
lret
jno
dec
mov
addr16
lock
rep
sahf
repz
dec
rorb
sub
sbb
add
test
push
jnp
loope,pt
in
sahf
in
xchg
aad
cmp
adc
mov
jg
mov
jl
or
adcb
mov
dec
sarb
xor
pop
lahf
les
arpl
pusha
stc
popa
mov
and
stos
sahf
push
ret
mov
int
dec
jp
fbld
xchg
bound
adc
fld
adc
or
addl
mov
sub
sbb
in
ljmp
mul
push
push
push
mov
clc
cli
fs
and
loop
call
stos
and
repnz
into
popa
push
lea
xchg
mov
mov
insl
adc
sahf
test
sbb
lods
push
mov
mov
stc
fldcw
pop
mov
mov
mov
sti
mov
xchg
mov
xchg
fs
unpcklps
add
aaa
adc
pop
or
mov
add
fnstenv
ror
mov
cmp
pop
int3
and
cmc
add
in
dec
loopne
and
and
sahf
mov
mov
pop
cltd
sub
jns
mov
add
adc
subb
and
outsl
jb
add
jmp
cli
stos
enter
jno
sbb
rcrb
and
pop
dec
push
jmp
iret
inc
inc
cmp
fstps
xchg
sbb
adc
std
sbb
pop
xchg
fnstcw
adc
shlb
sbb
dec
jmp
arpl
in
dec
test
int
sahf
mov
mov
xor
mov
push
js
add
push
adc
paddw
pop
adc
jecxz
xchg
outsl
xor
pop
push
repz
sub
or
and
sbb
repz
inc
push
out
jmp
rorb
cs
add
pop
scas
lods
lcall
addr16
fldenv
push
test
mov
movsw
insl
test
pusha
js
jg
cmp
pop
jbe
lods
mov
mov
addr16
rcrb
xchg
pop
inc
cmp
pusha
inc
in
pop
pop
or
jp
ds
shrd
int3
sub
add
inc
add
dec
pop
decl
fildll
jne
dec
ret
push
loop
xor
push
fdivl
pop
and
out
lret
mov
sbb
push
leave
inc
mov
mov
add
or
outsb
lcall
scas
fstl
ljmp
inc
lock
out
inc
cmp
shll
push
movsb
aad
in
mov
jge
cmp
cmp
gs
setb
out
mov
cmp
xor
rcrl
add
repnz
int
addl
mov
insl
mov
test
std
mov
aad
stos
mov
add
dec
dec
movsl
sti
lret
xlat
insb
out
mov
inc
add
mov
dec
add
sbb
testb
xchg
cwtl
xlat
mov
pop
outsb
inc
jno
mov
xchg
loopne
jmp
leave
int3
stc
pop
cltd
bound
push
fs
mov
enter
lock
mov
cwtl
xchg
sbb
loop
push
cmpsb
and
cwtl
imul
mov
or
jbe
out
and
xchg
xchg
mov
lret
cmp
mov
ror
bound
cltd
adc
mov
ljmp
xor
mov
sbb
test
cmc
or
js
push
data16
dec
sbb
xchg
flds
ret
leave
lcall
test
and
dec
shl
sti
outsl
dec
mulb
cld
xchg
aam
imul
xor
cmpsb
mov
je
aad
add
pusha
fstp
imul
mov
or
loope
movsl
seto
out
add
ds
gs
rol
lret
inc
sub
dec
daa
add
imul
add
add
mov
rcr
out
xor
icebp
mov
dec
hlt
jbe
mov
push
add
test
pushf
jecxz
sub
or
push
mov
ret
dec
les
shl
sbb
adc
xchg
mov
outsl
push
roll
and
push
push
out
inc
das
mov
or
dec
bnd
add
sbb
jmp
jbe
cmp
jbe
add
test
inc
sbb
popa
mov
jmp
jg
push
pop
sub
lret
add
push
jmp
in
out
aam
sub
fdivrs
pop
adc
dec
cltd
jae
or
loop
out
sub
stos
int
push
dec
es
mov
pop
pushf
ljmp
push
mov
adc
add
xchg
and
leave
cmpsb
es
dec
add
jo
add
test
jnp
aam
xor
adc
push
mov
in
outsl
stc
sbb
jg
shr
inc
pop
xor
rorb
cmpsl
leave
xor
add
rorl
sub
in
mov
loope
add
les
leave
xor
xchg
push
xor
fmuls
fiaddl
negb
xor
sub
mov
aam
mov
imul
jns
test
jae
fildll
dec
pop
or
rcrb
pop
mov
mov
add
dec
data16
test
xor
popf
insb
xchg
xor
xchg
push
dec
call
shl
pop
dec
insb
cs
sti
scas
or
bound
jle
adc
sbb
sub
jg
pop
add
xchg
repz
stc
lahf
ret
jbe
jmp
add
cmp
cmp
push
jp
loope
stos
add
mov
pop
cmp
or
pushf
jecxz
adc
xlat
push
aas
into
pop
push
mov
inc
cmp
aad
inc
or
aad
inc
xchg
mov
mull
adc
sbb
pop
add
cmpsl
pop
cli
jno
notl
icebp
xchg
cmp
jns
iret
das
mov
xchg
push
jo
inc
aad
cld
xchg
push
movsl
and
mov
xor
shlb
enter
dec
ret
push
lea
dec
insl
mov
inc
add
pop
or
mov
popf
push
mov
add
pop
inc
and
fwait
adc
jne
sbb
dec
out
and
addl
repnz
xchg
sub
out
xchg
aad
dec
cwtl
daa
xorb
sub
pop
cmpsl
pop
in
and
or
dec
pop
out
xchg
jno
jle
push
cmp
push
mov
lret
inc
mov
loop
sub
adc
inc
jno
aaa
out
push
push
repnz
pop
ret
orl
movl
push
mov
int
cmpsb
es
jnp
add
imul
mov
imul
mov
xor
xchg
je
cmc
or
mov
leave
stos
out
mov
call
xchg
inc
push
or
decl
push
movsl
jmp
out
out
out
scas
das
in
xchg
mov
pop
and
testl
stos
outsb
cli
pop
imul
in
mov
jle
jecxz
testl
bound
push
fstl
xor
jbe
test
lret
add
ret
inc
cmp
lahf
lea
push
popl
xchg
push
xor
movsb
aaa
push
xchg
out
fidivs
shrl
orl
adc
int3
fidivl
outsl
mov
pop
mov
cltd
sbb
or
jecxz
xlat
cmp
clc
xor
and
mov
mov
push
cmp
out
lret
cmp
or
jecxz
mov
mov
xchg
clc
mov
test
jo
cmpsl
das
dec
push
shll
ja
je
mov
mov
mov
pop
leave
dec
movsl
mov
mov
dec
les
cmp
mov
in
cli
mov
pop
fsubrl
sbb
stos
cmp
daa
sub
cmpb
nop
arpl
jae
inc
mov
pop
sub
jmp
mov
xchg
addr16
and
test
loope
addl
jnp
add
xchg
jecxz
sti
add
push
pushf
pop
push
mov
push
xchg
pop
scas
xchg
idiv
in
or
lea
repnz
out
sub
xchg
cltd
loope
mov
or
sub
insb
fisubl
test
mov
mov
jl
lea
cmp
stc
fsubl
loopne
inc
je
fnsave
jb
repnz
test
or
mov
stos
mov
push
mov
test
jl
popa
xor
mov
sbb
mov
mov
or
hlt
xchg
xchg
insl
jle
ja
rorb
mov
xchg
jae
je
stos
dec
push
mov
dec
sbb
pop
xchg
and
clc
inc
sbb
and
iret
sub
fwait
sbb
mov
popf
es
dec
pop
push
fs
fsin
inc
adc
inc
inc
aas
mov
mov
icebp
cmpsl
jl
jg
lahf
mov
cmp
sub
xor
mov
pushf
mov
cli
lret
push
repnz
sub
adc
mov
andl
dec
push
lret
loopne
inc
ljmp
add
or
sub
lret
jg
in
lret
orb
push
cmpb
lret
lock
sub
cltd
rolb
mov
ficompl
and
cmp
outsl
cmp
or
cmp
inc
push
fsts
je
push
mov
ds
add
adc
popf
lret
cld
sbb
pop
lds
xlat
jp
hlt
jo
jp
jmp
addr16
mov
int3
movsl
mov
inc
test
lods
push
test
std
jmp
cmpsb
repnz
pushf
inc
mov
or
sahf
pop
int
popl
jge
pop
outsb
stos
jo
pop
cmpsl
aam
out
hlt
push
adc
mov
adc
sahf
pushf
mov
sbb
mov
or
and
mov
push
or
into
jne
mov
sub
mov
fdivl
inc
es
adc
stos
jmp
int
ja
div
add
dec
xor
lds
sbb
cmp
fucomp
jb
cld
fwait
negl
dec
mov
xchg
daa
pop
push
pop
gs
movsb
lods
movsl
rclb
sub
push
sub
xor
aas
mov
bound
xchg
or
pop
sbb
mov
mov
xchg
popf
cltd
inc
sahf
das
push
add
fcomps
test
lods
and
mov
arpl
jg
or
negb
or
pop
pop
jl
fisubs
imul
jbe
xchg
jmp
jge
int
mov
lret
cmc
lock
add
mov
test
frstor
xor
test
out
push
xchg
xchg
add
es
xchg
adc
add
std
push
lret
sub
push
jle
dec
lret
lds
jnp
cld
aaa
out
lds
inc
mov
jl
mov
mov
std
push
xor
sub
lods
jo
hlt
pusha
aad
mov
fcoml
mov
ja
push
notl
lods
push
mov
xor
addl
dec
leave
and
dec
nop
xchg
test
iret
lods
paddsw
lcall
sub
test
push
jl
mov
hlt
mov
mov
and
pop
mov
inc
out
cmpsl
xlat
notl
in
sub
mov
mov
call
mov
mov
call
loope
jl
dec
das
mov
jecxz
pusha
or
mov
jl
mov
dec
cmp
adc
lahf
add
xchg
cmp
and
int3
sub
dec
jp
push
pop
adc
mov
outsl
pusha
outsl
jl
add
or
cmp
pusha
or
xchg
sbb
mov
adc
mov
sub
fscale
xor
mov
jnp
mov
orb
jge
outsb
and
mov
mov
sbb
out
sbb
cmc
fstpt
sub
and
es
sbb
nop
fcmovnu
int3
sbb
sbb
dec
inc
sbb
sub
imul
adc
out
sbb
lcall
les
mov
fidivs
daa
mov
mov
push
mov
ja
adc
mov
sub
xchg
shlb
pop
lret
popf
inc
or
sub
xchg
pop
fnstcw
push
cmp
mov
cmp
icebp
aam
mov
pushf
dec
push
jne
dec
icebp
aas
push
mov
mov
dec
xchg
xlat
mov
xchg
push
sbbl
dec
pop
je
flds
dec
data16
les
jecxz
mov
data16
repz
push
adc
mov
cmpsb
push
push
adc
mov
sbb
sub
dec
adc
repnz
sub
xchg
or
dec
mov
adc
and
xor
stos
or
xchg
loopne
shll
add
int3
pusha
or
or
dec
mov
mov
pusha
std
dec
inc
jge
fwait
dec
call
push
dec
repnz
jnp
fs
outsl
cltd
xchg
cmpsb
roll
adc
or
pop
stc
shll
sahf
push
xor
mov
in
mov
cli
push
jno
jbe
fiaddl
in
or
pcmpeqb
sub
imul
sbb
or
lcall
xchg
or
adc
add
lods
add
mov
jmp
in
xor
mov
sub
insb
ret
sub
jo
dec
rclb
inc
lea
ficoms
jg
mov
mov
int
ljmp
mov
cmp
fisubl
push
dec
fists
pop
loopne
cmpl
push
daa
bound
xor
or
mov
pop
xchg
push
mov
test
xorb
int
mov
sub
jno
xchg
fists
cmp
cmp
mov
adc
out
jle
and
pop
jmp
or
lods
xor
mov
out
outsl
fwait
or
jge
scas
mov
sbb
push
xchg
ret
sbb
jns
push
push
cmpl
add
addr16
adcl
inc
movsb
inc
sbb
fwait
or
sub
lret
test
cld
mov
mov
add
and
ffree
xor
hlt
push
sub
xor
mov
cmpsb
mov
insl
insb
adc
push
in
enter
enter
imul
mov
je
cltd
or
cwtl
adc
addb
xor
mov
movsl
pusha
sub
sbb
or
and
pop
pop
aaa
xchg
xor
jne
sub
pop
sbb
fnstsw
lods
pop
jne
cmp
daa
adc
xchg
push
mov
inc
sbbb
test
outsb
jne
pop
fdivl
outsl
cwtl
pop
scas
mov
outsb
inc
jno
icebp
aas
cmp
push
pusha
lods
lret
mov
loopne
out
jns
lret
sub
ficomps
cmpsb
pushf
jae
cmp
hlt
ja
cmp
add
popa
mov
test
arpl
divb
in
dec
test
sahf
cmp
pop
jne
and
roll
rol
jne
jg
sub
mov
fcom
addr16
popa
insl
jne
mov
in
rolb
gs
pop
adc
sbb
dec
jmp
mov
pop
mov
mov
sahf
jnp
scas
int
xor
into
and
lds
mov
adc
lods
js
sbb
or
rorl
lret
mov
mov
push
gs
lds
pop
adc
or
push
fiaddl
cld
jnp
jae
pop
js
test
mov
inc
inc
dec
loop
xchg
pop
rclb
test
xchg
mov
jns
sub
adc
jne
inc
icebp
or
jg
movsb
mov
mov
sub
push
fnsave
stos
les
rcll
xor
sub
imul
jnp
test
push
adc
push
ficomps
sbb
out
dec
bound
cmc
loop
bound
dec
cmpsl
or
test
sub
imull
test
fxch
fstpt
loopne
mov
pop
push
jbe
std
add
jo
or
jge
lahf
dec
leave
sbb
jae
fwait
sub
scas
test
into
inc
out
aas
mov
cmpb
mov
xchg
pop
cmpsb
xchg
sbb
jp
pop
int
push
adc
xchg
pop
imul
and
shlb
out
lods
cltd
inc
js
test
in
rol
jg
cmp
xchg
dec
aaa
add
jb
aaa
in
test
int
inc
jo
xorl
xor
adc
test
mov
or
scas
je
sahf
pop
leave
sahf
mov
jmp
mov
outsb
out
mov
out
js
mov
cmc
xchg
pcmpeqw
add
or
fisubl
cli
mov
es
insb
xchg
xor
push
push
lock
ret
and
in
rorl
inc
xchg
mov
xchg
pop
pop
rclb
sub
mov
push
fldcw
sar
mov
add
jge
add
stos
lret
stos
inc
loop
sub
push
iret
loopne
ja
andb
loopne
jae
out
gs
cmp
and
add
mov
iret
push
or
or
scas
movsb
pop
and
shlb
lea
add
pushl
shl
loop
lods
jnp
incl
push
es
xor
mov
and
sbb
dec
repz
or
dec
mov
andb
pop
popa
lds
sbb
mov
sbb
dec
ja
jle
mov
add
shlb
or
ds
mov
pop
fs
fwait
mov
dec
fwait
adc
daa
outsl
fucomip
mov
dec
and
jns
andl
xchg
cmp
mov
sub
mov
jo
mov
sbbb
adc
enter
lock
fidivrl
push
cmp
or
movsl
dec
or
out
mov
bound
and
pop
push
out
das
jl
jo
add
dec
xchg
and
xor
test
jl
sbb
sub
dec
sbbb
dec
test
nop
sarb
addb
enter
jp
popf
in
xor
xchg
sbb
sbb
clc
xchg
shll
mov
pop
aam
adc
or
mov
pop
adc
and
js
jecxz
add
lock
xor
xorb
mov
xchg
lods
test
xchg
popf
sbb
mov
sub
out
and
mov
xchg
inc
insl
xor
push
shrb
sbb
ja
lret
mov
imul
adc
sub
ds
dec
mov
bound
ja
out
cmp
sub
int3
rcrb
inc
cmp
fidivrl
shll
adc
fidivrl
enter
mov
dec
pop
push
fwait
stos
in
dec
pop
cmpsb
sub
adc
cltd
inc
ret
or
shlb
jmp
movsb
lcall
push
mov
dec
mov
cmpsl
push
jp
dec
mov
jecxz
int
xor
cmpsl
jne
outsl
andb
fldt
pop
rorb
push
test
add
jno
sbb
das
mov
and
xchg
aam
test
jl
fwait
outsb
xor
les
sbb
nop
inc
mov
mov
iret
iret
adcl
cmp
mov
and
test
mov
and
xchg
fcmovnu
stos
lods
outsb
test
vpsadbw
cwtl
shrl
dec
aad
loop
cmp
push
mov
call
dec
sbb
sbb
mov
ret
clc
mov
cli
cmpsl
mov
lea
mov
or
outsl
das
mov
mov
mov
jbe
xor
sti
subb
sbb
in
mov
add
movsl
or
cmpsl
mov
repz
cmc
push
xchg
add
jp
dec
xor
jnp
adc
sbb
add
lea
cli
hlt
xor
mov
adc
imul
dec
or
sub
outsl
mov
mov
stc
adcb
jno
sbb
imull
cmp
cmp
pop
js
cmpl
loopne
dec
or
dec
mov
pop
cltd
cmp
dec
jns
xor
in
movl
push
lock
stos
xchg
sbb
xchg
hlt
cmp
sbb
lea
fildll
and
js
iret
add
jnp,pn
and
push
icebp
sub
inc
pop
aam
dec
adc
xchg
mov
push
loope
and
mov
fmull
sbb
fcomps
or
mov
or
dec
clc
push
and
inc
jae
and
fwait
jnp
jp
icebp
sti
mov
fdivrl
ja
dec
ss
test
fcom
lods
stos
hlt
clc
jl
jne
cmp
pop
mov
mov
stos
sbb
mov
loop
fs
gs
stc
push
and
mov
dec
pop
jnp
jbe
sbb
stos
pop
movsl
lock
andb
rol
gs
mov
das
jnp
xor
add
mov
repnz
adc
push
jmp
fsubp
gs
gs
clc
cltd
adcl
pop
mov
xchg
test
popa
mov
insb
pop
mov
adc
pop
int
mov
shlb
mov
adc
insl
arpl
inc
fwait
and
js
or
push
dec
test
and
xchg
sub
icebp
pop
rcrl
or
rol
lea
pop
shrl
dec
fucomp
pop
lods
sub
popl
outsb
sbb
stos
cmp
icebp
cli
pop
mov
int3
popa
lcall
ja
pusha
repnz
outsb
lods
or
jecxz
icebp
xor
lock
add
shll
in
imul
loop
xchg
rol
arpl
cmp
sbb
fnsave
shl
mov
inc
dec
scas
fstp
repz
adc
mov
ds
orl
cltd
dec
das
repz
push
pop
mov
rorb
add
rorb
dec
gs
pop
cmp
lret
mov
cmpb
mov
out
pop
mov
jg
out
shrl
sub
xchg
cmp
lcall
xchg
lock
out
out
mov
js
mov
repz
adcl
fdivs
jb
add
nop
mov
aam
ljmp
lods
push
fwait
push
in
pop
test
jno
adc
insl
cltd
mov
sub
xor
hlt
popa
mov
addr16
mov
dec
fstps
lahf
inc
sub
roll
lret
sub
addb
lods
pusha
rcll
shll
ret
stos
lods
cwtl
daa
scas
ror
push
es
mov
jne
or
call
fs
xchg
repz
repz
shrl
sub
jmp
xor
add
icebp
aad
fcmovb
out
or
inc
pushf
ret
jle
insb
or
movsb
push
jns
jge
or
pop
test
or
push
mov
pop
push
out
xchg
and
jae
push
mov
fs
aas
movsl
xor
push
xchg
adc
bound
clc
leave
fisttpll
and
adc
pop
iret
faddp
andb
out
mull
push
jle
mov
aas
adc
mov
push
clc
add
mov
stos
lds
fidivrl
and
mov
adc
out
jecxz
in
pop
stos
out
shr
imul
sbb
pop
shrl
mov
ss
mov
xchg
and
xor
pop
inc
dec
push
outsb
push
adcb
pop
div
mov
fidivrs
mov
arpl
dec
bound
mov
mov
xchg
in
sub
mov
es
rcll
mov
inc
movsl
cli
xchg
addr16
test
or
fldenv
test
daa
mov
pop
inc
mov
mov
subb
cmp
leave
or
movsl
repnz
sbb
lahf
mov
lods
push
das
dec
dec
cmp
fisttpll
in
das
lret
or
les
mov
jl
test
stos
sbb
outsl
xor
xor
out
fstps
je
push
pusha
dec
sub
cmp
lock
xor
jne
enter
push
enter
and
xor
scas
sbbl
add
xchg
enter
sbb
inc
shll
mov
adc
pop
jecxz
rorb
inc
xchg
dec
das
or
xchg
mov
aaa
aam
ja
leave
enter
mov
and
sbb
jae
sbb
jle
mov
inc
push
fistpll
movsl
shrb
enter
sbb
mov
rolb
daa
add
dec
repnz
xor
xchg
adc
sbb
jle
xchg
movntq
out
cltd
jno
adc
lods
stc
leave
xor
lock
add
aam
pop
pop
xchg
add
xor
mov
jnp
out
sbb
nop
inc
mov
icebp
cmp
sti
adc
repz
xchg
xchg
lcall
xchg
and
mov
dec
in
xor
inc
xor
cmpsb
fdivs
push
nop
ljmp
dec
pop
mov
jb
cltd
imul
shlb
ds
flds
mov
mov
gs
inc
dec
cld
lcall
lods
xor
pop
into
fistpl
or
dec
divb
jp
push
jb
jno
push
mov
jns
mov
jecxz
mov
int
push
out
fimuls
mov
adc
xchg
or
push
nop
movsl
adc
int3
fstpl
jbe
sub
sub
sti
mov
inc
and
xor
sub
insl
add
or
or
sahf
mov
sub
cmp
add
test
stos
les
data16
or
cmc
pmuludq
idivl
int
mov
push
das
sub
outsl
ss
xlat
and
jne
rclb
ds
insl
xor
sub
mov
je
les
lock
jbe
pushw
jge
and
jne
cmpb
rcrl
mov
cli
push
mov
cli
orb
add
mov
js
aas
pop
sbb
xchg
adc
mov
pop
and
cli
repz
popf
ficoms
push
mov
inc
xor
daa
mov
and
lcall
push
scas
xlat
es
inc
daa
mov
mov
push
scas
adc
ja
mov
test
add
mov
or
flds
imul
sub
mov
movsl
xchg
jle
pop
stos
not
jno
cmp
mov
cmp
add
pop
aas
sbbl
aas
jmp
or
push
sarb
cmp
xchg
in
pop
jmp
ljmp
mov
inc
xchg
dec
cs
sahf
sbb
sbb
lods
rol
inc
xor
lods
and
pop
leave
in
jmp
outsb
jmp
les
cld
mov
mov
call
push
sbb
jns
push
outsl
push
std
shr
add
movsl
lret
frstor
push
mov
in
rcr
rcl
sub
or
leave
mov
push
inc
pop
dec
fwait
sbb
dec
xchg
in
xor
and
iret
or
cli
sbb
in
das
push
cmpsl
and
out
jo
or
xor
outsl
pop
les
rorl
addr16
or
inc
adc
js
inc
jg
push
mov
inc
xor
inc
push
cmpsl
sub
ds
jecxz
add
cld
adc
pop
mov
add
outsb
scas
jge
mov
add
adc
and
cmp
push
mov
dec
add
loopne
lock
popa
xor
fwait
int3
cs
cmpsb
ret
inc
call
adc
lea
out
lods
sbb
outsb
enter
xchg
dec
fs
push
scas
test
outsl
xlat
inc
std
mov
out
inc
outsb
subl
scas
cmc
jg
dec
shrb
ret
push
enter
and
out
add
adc
add
mov
sub
aad
int3
adc
mov
inc
lods
inc
inc
and
outsb
cmpsl
shl
and
pop
jge
fstpt
add
jo
loopne
inc
scas
mov
xchg
lret
les
push
stos
sahf
enter
pand
push
sbb
or
sub
imul
ja
fldl
push
test
loope
and
sub
mov
loop
push
jp
pop
addr16
inc
push
psubw
call
insb
stos
adc
pop
clc
scas
cmp
lods
lea
std
cmp
and
in
in
rclb
sub
mov
mov
pusha
mov
mov
jp
movsl
and
stos
fisttpll
jmp
out
xchg
insb
ficompl
mov
loop
and
lret
out
stos
out
repz
mov
rcrl
movsl
ret
leave
or
pop
mov
xchg
cmp
sbb
outsl
mov
jmp
sub
jmp
push
cmp
add
inc
xlat
sub
pushf
in
inc
pushf
arpl
out
push
cmp
cmp
scas
out
vpand
insb
dec
sbb
or
pop
gs
add
daa
mov
push
cmpsb
ret
ficoms
cltd
sub
adc
pop
jns
decl
nop
aad
jne
sbb
mov
adc
ljmp
pop
mov
xor
xor
sub
out
push
jo
ljmp
imulb
jle
dec
data16
jno
hlt
jl
popa
mov
xchg
out
push
xchg
imul
lret
scas
inc
lods
sbb
push
mov
mov
and
mov
jp
or
jns
sub
ret
movsl
pop
sbb
mov
push
xlat
int3
ret
cs
call
sub
fldcw
mov
out
sbb
in
mov
or
xlat
pop
or
push
or
dec
outsl
add
add
daa
in
push
gs
lods
push
lcall
push
add
jo
repz
idivb
push
data16
push
sub
dec
push
push
leave
mov
add
mov
mov
nop
push
push
test
xchg
ret
je
iret
ret
stos
mov
out
xlat
bound
adc
push
jmp
ret
sbb
jo
cmp
or
loopne
aam
in
push
imul
lods
push
pop
xchg
cltd
xchg
pushf
push
inc
loopne
cmp
out
mov
sub
pop
dec
jnp
push
inc
repz
mov
js
imul
das
sub
and
dec
sarb
movsb
cmp
mov
cltd
jl
scas
stc
push
out
and
inc
jecxz
popf
mov
mov
cmc
cmc
test
cmp
mov
cmp
dec
mov
xchg
scas
sub
sbb
mov
in
data16
adc
icebp
cmp
xchg
mov
push
jl
xlat
push
lea
adc
pop
xor
mov
mov
mov
dec
ds
jno
push
xchg
popf
or
dec
inc
jae
andb
or
mov
xchg
adc
xchg
push
xchg
clc
cmp
jg
or
mov
dec
inc
mov
iret
jle
insl
jae
lret
dec
add
push
pop
mov
cmpsl
shl
pop
xchg
js
inc
dec
inc
fcomip
not
xor
mov
push
psrlw
inc
pop
bound
negb
sub
int3
inc
out
shlb
out
leave
orl
scas
das
xor
pop
lock
mov
jbe
push
sbb
pop
fdivrs
adc
pop
sub
pop
xor
pop
pop
mov
xor
jnp
mov
fwait
dec
mov
push
sbb
je
jns
js
dec
adc
xor
js
mov
mov
das
fdivrs
xchg
notl
inc
xor
stos
ret
and
sbb
xlat
divl
scas
clc
es
into
iret
loopne
mov
sbb
lcall
test
jecxz
xchg
dec
stc
mov
nop
incl
push
je
mov
sti
jge
lods
fdivrl
push
mov
cli
rolb
dec
xor
pop
int3
js,pn
mov
pop
cmp
and
jmp
es
adc
fidivl
gs
mov
call
pop
pop
ret
xchg
outsl
fucomi
int
pop
sub
loopne
sahf
stos
mov
xchg
jle
lret
ljmp
or
sbb
jl
pop
xchg
rorb
xchg
ljmp
movsb
sub
xorl
shl
push
mov
fdivr
jo
adc
dec
add
sub
xor
xlat
out
adc
dec
imul
fwait
or
in
cmpsl
outsb
stos
push
das
push
das
mov
fidivl
pop
fmuls
aaa
js
push
dec
call
mov
pop
jecxz
icebp
sbb
rorb
dec
std
hlt
cmpsl
add
jmp
sbb
loope
out
inc
pop
jmp
mov
insl
jg
das
sbb
repz
rolb
push
mov
dec
in
or
push
mov
pop
lcall
clc
and
inc
cmp
mov
fs
sub
adc
mov
lret
pop
mov
sbb
pop
mov
mov
or
xchg
out
or
xchg
js
pop
cmp
add
fcoms
ljmp
inc
pop
jge
sub
ret
cmpsb
imul
movsl
adc
clc
lock
inc
stc
test
mov
and
dec
adc
push
sti
pop
idivb
jmp
cmp
mov
xchg
sbbb
dec
mov
mov
jns
gs
test
mov
popa
scas
mov
sbb
dec
and
ja
stos
mov
jb
loopne
lea
enter
call
ficoml
jne
add
xor
xchg
push
or
iret
aaa
stc
and
add
push
es
jecxz
adc
xor
add
mov
dec
rolb
pop
sub
icebp
enter
and
sbb
add
sub
insl
lds
jp
or
outsl
outsl
jo
lds
pop
popf
ret
adc
pop
cmp
imul
lahf
loope
mov
sub
clc
std
sub
aad
mov
push
out
testb
or
ds
mov
and
fistps
into
mov
xchg
cmp
ja
and
orb
ss
add
add
pushf
int3
imul
les
pop
xor
adc
test
jmp
dec
ss
ret
movsb
dec
pushf
inc
cmp
push
adc
mov
sarb
pop
xor
ret
es
enter
out
rcl
jle
fistpll
mov
outsl
mov
and
jo
cltd
xor
lcall
dec
into
cltd
xor
shll
dec
sbb
stos
mov
jle
lods
int
movsb
aad
add
mov
ret
das
mov
jg
push
mov
xor
lods
jno
clc
filds
sub
testb
mov
lcall
lcall
fnsave
cmp
inc
dec
int
movsl
pop
cli
mov
adc
xor
push
inc
dec
xchg
pop
sbb
cmp
push
adc
or
stos
fs
cmp
or
insb
icebp
push
xor
lret
cmp
inc
sbbb
in
push
inc
adc
insl
ffree
daa
adc
into
pop
jns
jnp
in
fwait
jg
mov
xchg
int3
mov
xchg
lds
pusha
push
dec
cmp
ficoms
lds
inc
out
mov
or
cmp
inc
aaa
roll
insb
cmc
pop
xchg
adc
sbb
fnstsw
out
xchg
dec
push
notb
push
add
jl
jl
and
rcrl
jle
mov
test
xchg
sub
cmp
lods
testb
jbe
sti
data16
push
repnz
xor
cmp
jmp
mov
push
div
dec
hlt
pop
sub
push
scas
jb
int
out
or
sahf
mov
lods
ffree
xchg
int3
mov
push
hlt
or
mov
loopne
xchg
jne
or
cmp
ret
add
push
mov
ficoml
push
stos
jne
lea
inc
pop
mov
lds
iret
fstpt
movsl
inc
mov
shl
push
pop
mov
pop
repnz
dec
fcoms
push
mov
mov
and
pop
jo
mov
pop
in
pop
mov
lds
ds
push
iret
fbld
or
adc
data16
add
nop
jns
dec
inc
and
and
imull
ljmp
fisubrs
lret
push
mov
mov
xor
into
and
jge
jnp
push
in
pop
xor
jle
lcall
and
mov
sub
adcl
jmp
jl
mov
adc
out
dec
sub
cmp
pop
mov
jbe
test
in
rcrl
shlb
xchg
fdivs
hlt
mov
out
push
and
inc
mov
sbb
ja
das
xchg
xor
pop
jbe
xor
rol
add
fidivl
rorl
xor
jg
sub
jae
sub
sti
push
push
inc
cmp
and
jns
lods
es
scas
jae
jge
jo
scas
push
out
mov
fbld
ja
jecxz
out
add
push
lods
je
mov
and
mul
or
mov
inc
incb
jb
repnz
imul
test
pop
mov
cmp
aad
push
xchg
inc
push
push
fstpl
or
ds
out
leave
popa
movsl
loopne
inc
sub
out
jmp
sub
sub
mov
xor
out
outsl
decl
mov
dec
sub
jae
and
testl
dec
hlt
iret
in
push
push
lret
repnz
or
mov
daa
sbb
mov
fcoml
jnp
jno
dec
shll
mulb
push
inc
add
dec
xorl
mov
adc
daa
fdivrp
cmpsl
imul
xchg
and
aam
lret
fisttpll
sub
movsl
jg
xchg
inc
push
dec
addr16
dec
push
lret
repz
je
je
xor
out
jne
cmp
test
std
fldcw
pusha
mov
ret
mov
aas
jno
cmp
xor
sahf
stos
scas
xchg
xchg
rcl
nop
call
mov
dec
jmp
and
insb
adc
les
pushf
fwait
sub
movl
jmp
xlat
dec
sbb
pop
sti
stos
cmp
mov
pop
int3
fsubrp
push
insl
enter
mov
out
and
mov
imul
sub
mov
fcmovne
add
sub
data16
mov
out
clc
dec
mov
and
xor
xlat
pop
mov
shll
mov
pop
mov
enter
add
dec
stc
fadd
mov
mov
or
fcoml
movsl
push
pop
mov
lea
and
cltd
ror
jne
nop
outsl
mov
jl
imul
or
push
dec
cmpsb
sub
sbb
jmp
insb
mov
push
jle
repnz
or
cmp
jle
add
adc
or
jl
mov
mov
sbb
hlt
aad
jl
lcall
subl
xchg
popf
movsb
imul
sbb
xor
retw
push
jmp
cmpsb
or
xor
cwtl
cwtl
push
in
jns
mov
stc
mov
pop
pop
and
test
jl
inc
push
test
es
jge
aad
push
aaa
imul
inc
out
mov
jp
sbb
shlb
pop
fldt
les
inc
cs
out
pop
sbb
or
fists
out
mov
daa
push
fs
into
out
or
xchg
fmull
mov
jmp
and
xchg
xchg
fmulp
fsubrl
sahf
sahf
test
mov
or
sahf
imul
je
cmovns
mov
rolb
jge
test
lret
out
repnz
daa
ror
sbb
ja
out
int3
sbb
or
jns
scas
mov
push
in
inc
lcall
adc
cmp
lods
jbe
cmp
rol
xor
sti
fldt
cmp
mov
jno
mov
sub
ss
sub
jae
jne
into
and
fxch
dec
lret
xorl
rolb
outsl
adc
in
enter
and
mov
lock
mov
imul
jge
jge
dec
inc
add
and
pop
aaa
jno
xchg
in
pop
test
sbb
cmpsl
mov
cli
or
adc
daa
push
mov
aad
fiaddl
fucomi
lods
sub
xor
dec
cmp
hlt
jns
adc
mov
cmp
xchg
out
push
fcoms
pop
js
jl
cld
addl
ret
sub
lds
cs
mov
insl
adc
pop
mov
xchg
adc
sbb
std
in
clc
test
fldcw
add
sbb
int
mov
out
imul
aaa
xor
adc
mov
jmp
ljmp
and
rorb
cs
outsb
sub
or
arpl
aam
imul
ds
sarl
inc
xchg
sub
lret
leave
fbstp
stc
popf
sahf
fdivrs
jns
in
test
adc
mov
jno
int
in
in
xchg
dec
cwtl
xchg
aaa
xchg
or
test
sub
das
and
mov
test
in
shrb
mov
pop
enter
pop
push
fistps
loop
xchg
movsb
popf
mov
mov
addl
fmul
jbe
popf
push
pop
push
es
cmpl
jno
mov
sub
push
xchg
mov
add
jne
add
mov
dec
sub
popf
outsb
in
roll
jp
cmp
stos
mov
icebp
mov
or
pop
add
fistpll
lds
jp
aas
fisubrs
xor
push
imulb
scas
push
loope
jge
xlat
lods
jb
jns
jecxz
pop
push
inc
and
jmp
inc
repnz
pop
insb
movsl
js
sub
jne
repz
call
loope
lods
pop
mov
xchg
leave
inc
dec
mov
sbb
sbb
push
pop
test
sahf
divl
sbb
mov
icebp
addr16
jb
addl
inc
jecxz
into
pop
push
dec
pop
cmpsb
and
cmp
fwait
test
jnp
xor
bound
cli
lret
aaa
nop
and
pushf
les
xchg
fwait
xlat
jle
in
sbb
idiv
pushf
xor
jp
int3
std
and
sub
add
aad
adc
std
cmp
in
sbb
stc
xchg
hlt
mov
jle
cld
sar
xchg
mov
imul
popf
mov
mov
jge
add
mov
pop
mov
push
pop
and
add
pop
cmpsl
dec
or
sub
aaa
add
iret
orl
cltd
cmp
inc
fmul
jg
in
daa
es
ss
sbb
sahf
sbb
into
pop
xchg
and
adc
cmp
jae
cmp
clc
enter
inc
scas
ror
aaa
mov
scas
stos
daa
pop
cmp
jp
pop
xor
push
or
pop
jp
jecxz
or
pop
enter
inc
mov
inc
mov
repz
jl
orb
jmp
add
mov
xchg
xor
inc
xchg
adc
loop
dec
repz
cli
jl
dec
xchg
fdivs
push
mov
test
push
push
push
mov
into
mov
insb
leave
xlat
mov
jo
pusha
nop
cmp
popf
aas
and
std
fwait
aam
mov
xchg
jp
addl
xlat
or
pop
mov
pop
out
jb
test
jge
imul
cltd
and
call
push
or
filds
mov
repz
or
incl
jne
ss
jne
rcll
or
movsl
mov
dec
loope
jbe
inc
cmpsl
lahf
adcb
pop
out
inc
jle
add
test
xorl
jg
mov
xchg
pop
aaa
cli
or
pop
in
pop
adc
mov
cmp
push
insb
jg
fld
dec
test
leave
add
xchg
lods
dec
cmpsb
pop
and
mov
jns
adc
fs
mov
repz
fmull
cmpsl
push
and
ljmp
cmpsb
leave
xor
in
push
add
jmp
jmp
pop
add
in
scas
dec
or
addr16
nop
or
call
pop
mov
sub
aad
push
sub
push
and
into
adc
add
in
test
orb
push
add
pop
leave
pop
je
stc
mov
add
jp
js
fstpt
cs
cmpsl
pop
mov
cmp
mov
or
out
aam
jnp
push
mov
cld
mov
ljmp
out
mov
lcall
mov
push
dec
adc
inc
mov
lea
lret
jnp
mov
mov
push
aaa
ds
sbbl
aam
mov
push
xchg
aam
or
xchg
xchg
sub
jae
mov
sbb
add
ljmp
inc
add
push
lea
inc
lods
fs
icebp
aad
andb
stc
jmp
dec
push
addb
push
xchg
repnz
stos
in
pop
add
fisttpll
or
daa
pusha
nop
clc
pop
incb
ret
add
or
out
cmc
inc
leave
jae
out
push
mov
decb
popa
lods
shlb
enter
pop
icebp
sub
scas
aad
cmp
fdivs
dec
jecxz
cmp
daa
mov
in
into
xlat
gs
stos
push
pop
icebp
xor
dec
scas
adc
jle
lahf
popa
call
int
mov
and
sub
mov
idivl
jb
and
pushf
andl
lea
test
in
cmp
and
lcall
lods
pop
jmp
and
lret
sahf
push
popl
sub
jge
jne
dec
cltd
mov
xor
aam
dec
lds
or
push
mov
ds
pop
nop
sti
xor
stc
xchg
inc
mov
inc
pusha
push
incl
inc
and
jmp
lods
cmp
sbb
fcoml
clc
hlt
push
mov
rolb
mov
dec
mov
jmp
lcall
adc
xor
mov
adc
mov
mov
push
adc
call
fistpll
xchg
dec
sbbb
push
mov
jnp
mov
pusha
hlt
aam
imul
movsl
idivb
leave
gs
mov
push
jno
decl
leave
aaa
lea
and
mov
lods
gs
and
popa
and
icebp
movd
cmpsl
pushf
cmp
push
cld
popa
lods
ja
repz
lcall
lcall
sbb
test
push
mov
call
out
cmp
fstpl
bound
mov
xor
scas
jne
js
xchg
insl
dec
pop
mov
add
xor
xor
push
rorl
pop
cltd
imul
fbstp
iret
jecxz
cli
lcall
cwtl
push
adc
pop
fldt
in
movsl
repz
loopne
mov
stos
cmp
pushf
sbb
dec
pop
mov
loop
xchg
push
and
sbb
adcl
and
pop
sti
arpl
adc
fists
and
notb
and
out
adc
cs
loope
sub
jmp
add
jle
loope
adc
inc
data16
xorb
outsb
lahf
adc
insl
clc
xchg
es
jnp
addr16
pop
cmp
loope
sbb
test
push
int3
pop
push
lahf
adc
test
addl
insb
mov
sbb
out
add
add
bound
add
adc
fcompl
enter
aas
pop
aaa
sbb
cmp
sub
xor
cwtl
addr16
in
test
insl
ret
cs
mov
loopne
mov
or
cli
mov
and
sbb
test
fldt
orl
lret
stos
loopne
mov
les
xchg
loopne
fs
fwait
or
xor
pushf
cmovne
adc
inc
lea
shll
mov
sbb
mov
sbb
xor
lock
outsb
mov
mov
mov
or
xchg
and
xchg
test
lret
sub
cs
sbb
mov
lods
jb
bound
jge
or
adc
mov
xor
rclb
cs
xor
jno
fsubrs
xchg
mov
aam
rcrl
aas
xchg
test
orb
std
inc
inc
fadd
pop
jne
mov
jns
xor
cmp
fxch
int3
in
lahf
mov
sbb
out
cmpsl
adc
scas
push
cmp
inc
loop
jmp
inc
and
xchg
xor
mov
cmp
pop
xlat
push
loopne
std
and
bound
faddl
repnz
test
jge
popf
repnz
cltd
int3
inc
mov
jae
fld
in
xchg
xchg
cmp
xor
add
inc
leave
cmp
adcl
xor
popa
mov
mov
jae
and
jnp
jnp
or
add
cmpsb
xlat
mov
mov
out
adc
out
test
jbe
inc
inc
mov
pminsw
xchg
or
sbb
std
repnz
pushf
lret
jecxz
gs
fimuls
xchg
iret
or
and
dec
jg
or
adc
mov
cmp
dec
sbb
push
rorb
or
pop
movsl
imul
negb
mov
xchg
pop
cmp
stos
xchg
jo
and
jg
mov
adc
sti
mov
xlat
in
xor
les
dec
pushf
les
lcall
pop
ss
adc
inc
stos
stos
push
daa
mov
lret
loop,pt
ds
mov
xor
fadd
sti
dec
les
push
mov
cmp
mov
xor
push
cmp
push
popl
dec
mov
sahf
sbb
push
aas
push
lds
push
and
inc
dec
mov
mov
in
in
aad
lret
adc
sbb
lods
bound
stos
dec
xor
xor
je
adc
pop
out
std
mov
rcll
add
mov
pop
xchg
jbe
dec
mov
outsb
adc
aaa
adc
mov
and
pop
jbe
mov
aam
scas
cmp
out
jo
rcrb
adc
xchg
adc
or
sub
adc
ss
rcrb
pop
and
mov
xor
ja
fsts
dec
pandn
fcompp
int
xchg
outsl
stos
aaa
xchg
cmpsb
jns
dec
idivb
xchg
int
sbb
popa
inc
jl
xor
enter
dec
lahf
bound
popf
cmp
inc
decl
inc
cltd
jle
pop
sar
out
pop
inc
mov
movsl
jg
out
inc
and
jb
in
push
and
ss
mov
mov
jge
daa
insl
xor
pop
dec
push
aam
lods
sbb
bound
movsb
mov
push
lret
in
push
xchg
push
xchg
and
hlt
cmpsl
ds
and
loope
movsb
pop
rep
cmpsl
add
gs
int
adc
sub
jmp
mov
jg
pop
jae
enter
inc
jl
push
cmp
xor
pusha
mov
sbb
inc
mov
push
and
lahf
imulb
clc
loopne
sbb
ljmp
or
push
pop
add
mov
lods
rolb
rcr
lret
lock
pop
lods
mov
mov
and
push
sbb
leave
sbb
adc
subb
shll
ficoml
fsubl
aam
enter
xchg
loop
movsb
push
cmp
cmpl
xchg
mov
fwait
test
enter
add
mov
jl
mov
lret
in
scas
push
add
pop
sub
aam
mov
cmc
pop
pop
mov
sti
xchg
xchg
adc
or
xchg
stos
mov
mov
imul
movsb
mov
xchg
sbb
lods
jl
mov
jbe
cmp
jl
adc
jnp
adc
mov
and
mul
mov
add
push
movsl
lahf
xchg
ret
rorl
movsb
lret
pop
das
lods
adc
test
sbb
jbe
sub
stos
mov
or
movsl
inc
ljmp
jmp
mov
mov
fxch
lcall
mov
push
add
sbb
or
or
popa
pop
push
mov
push
pushf
nop
pop
mov
aas
js
cmpsb
addr16
sahf
lret
pop
jle
mov
mov
enter
mov
andb
sub
jo
pop
add
bound
xor
xorb
jne
insl
jne
hlt
pop
mov
hlt
cmp
dec
dec
mov
inc
cmp
jno
xor
sbb
dec
enter
clc
cmp
test
add
jecxz
lahf
or
push
les
jo
icebp
or
pusha
pop
mov
lods
aas
iretw
pop
cmpsl
scas
cwtl
cmp
rclb
adc
inc
xchg
imul
xchg
sub
dec
sbb
std
mov
sar
cltd
inc
or
fwait
test
push
inc
insl
pop
leave
daa
dec
xor
jb
fdivs
and
xchg
jnp
jl
and
das
in
inc
cmpsl
out
mov
cmp
push
xchg
push
xor
lds
insl
stos
sbb
or
xor
test
add
pmuludq
push
je
sub
cmpsl
mov
mov
add
jmp
add
lds
adc
jno
dec
add
pop
or
xor
mov
and
mov
xor
fmuls
fmull
insb
fs
and
jo
xchg
adc
lahf
cs
shrb
xor
fisubrs
inc
push
jecxz
xchg
enter
loopne
inc
test
lret
loope
dec
mov
stos
dec
sbb
aas
es
pop
jae
jae
pop
add
sub
lcall
jl
lret
sub
pop
roll
pop
bound
push
pop
cwtl
loop
jmp
mov
xor
fbstp
ljmp
lds
mov
push
loope
lods
jns
add
adc
push
xchg
mov
sahf
xlat
sub
mov
pop
mov
jmp
mov
aas
cmpb
jae
je
lock
aam
enter
adc
cld
sahf
xchg
cmp
cmc
test
pusha
sub
jo
mov
sbb
pushf
repz
aaa
sbb
push
cltd
out
sbb
fwait
pop
addr16
stc
pop
fistpll
and
js
out
and
in
gs
xor
jecxz
pop
or
int3
add
nop
or
inc
push
adc
je
sarl
xor
hlt
pushf
es
insb
jns
mov
out
rorb
mov
cmp
jno
mov
add
std
aam
mov
out
pushf
lods
sub
mov
jge
pop
sbb
cmpsl
out
push
in
rcl
pop
lahf
out
xor
push
je
push
in
addb
push
xor
mov
dec
lods
pusha
xchg
dec
fs
fsubl
push
ljmp
ljmp
aad
imull
aas
imul
jnp
dec
je
scas
outsb
into
gs
mov
adc
jl
js
mov
bound
in
into
adc
xor
mov
push
mov
push
push
push
addl
divl
inc
out
outsl
lods
lods
daa
loop
frstor
das
inc
ljmp
xchg
ljmp
or
xor
or
rolb
faddp
mov
and
cmp
or
sbb
dec
mov
mov
jo
dec
test
test
fcmovnb
mov
aad
aas
mov
and
sbb
and
mov
loop
sbb
pushf
daa
icebp
hlt
inc
stos
push
jge
fidivs
lcall
mov
xor
or
sbb
mov
cs
test
or
clc
imul
mov
fisubl
sub
aad
into
or
les
loope
ljmp
adc
adcb
mov
and
xlat
push
rorb
pop
arpl
mov
popl
lods
aas
pop
shll
rcrb
xchg
cmp
imul
sarb
outsb
jb
lods
cmp
xchg
sbb
stos
cmp
lds
sub
xchg
lods
and
xchg
mov
push
mov
stos
adc
xor
inc
hlt
dec
aam
cld
fldt
cwtl
jmp
push
add
nop
insb
push
and
insb
icebp
jno
loop
sbb
int
cltd
cmp
xor
or
sub
adc
xchg
or
into
out
pop
mov
addr16
lds
in
pop
insl
ja
ret
lods
jp
test
fldl2e
dec
sbb
mov
out
mov
push
mov
add
mov
data16
ret
je
jmp
dec
clc
pop
fimull
out
push
cli
push
sbbl
fdivr
xorb
repnz
pop
aas
xchg
sar
or
adc
dec
mov
mov
lea
stos
jge
aas
push
roll
push
jecxz
outsl
scas
and
popa
lock
push
insb
iret
clc
movsb
loope
lods
sub
sarb
arpl
dec
jae
push
out
gs
loope
dec
setb
inc
pop
xor
fisubs
fsts
not
mov
sbb
lds
cmp
mov
lods
xor
xchg
jl
cmpsl
pop
leave
xchg
push
sub
lods
lret
adc
lret
sti
test
xchg
repnz
iret
mov
xchg
dec
addl
sub
dec
sti
pop
out
lods
xchg
inc
rorb
bound
push
lds
fdivl
pop
pusha
cmp
fnsave
and
jnp
cli
scas
fs
ss
xchg
test
imul
xchg
ja
adc
push
iret
stos
mov
out
out
ja
mov
lea
lcall
and
int3
pop
rcl
scas
mov
call
inc
rclb
inc
push
data16
lret
mov
add
rcl
mov
cmc
jmp
iret
mov
and
sub
stos
sub
inc
stos
movsb
outsb
inc
movsl
and
fbld
and
or
inc
repnz
push
cltd
jnp
movb
jae
daa
dec
xchg
sbb
add
cli
sahf
and
jp
xchg
push
out
sar
sub
dec
mov
sbb
loop
roll
xor
mov
cmpsl
jge
dec
subb
mov
dec
sub
sbb
push
jne,pt
mov
adc
js
push
inc
leave
mov
jns
push
xchg
ret
and
jnp
pop
dec
xchg
pop
xchg
sub
sti
xchg
push
or
push
insb
mov
push
cmp
pop
add
nop
cmp
stos
lock
push
hlt
gs
adc
sbb
mov
out
ja
roll
cmp
mov
sbbb
and
lea
seto
dec
push
push
cmp
inc
or
ljmp
fidivl
adc
jns
ret
xchg
stc
xchg
push
cmp
inc
pop
in
add
loopne
mov
push
sub
jg
mov
xchg
add
dec
xor
xchg
or
lea
push
subb
pop
mov
in
cmp
aaa
jp
aad
or
test
push
push
jns
stc
xor
push
mov
repz
mov
decl
jmp
push
fwait
sti
fnstsw
fadd
lcall
pop
fimull
xor
fstpl
inc
or
sbb
xor
mov
sar
mov
xchg
cltd
and
mov
mov
mov
xor
fcmovnu
lcall
les
stos
in
sbb
pop
bound
mov
push
clc
movsl
out
mov
sub
xchg
and
push
lods
jbe
loop
dec
add
xlat
in
jno
out
lock
mov
mov
pop
inc
jge
pop
out
mov
pop
aaa
jns
insb
call
int3
and
xor
xchg
out
into
icebp
mov
push
jb
adc
ret
lds
mov
js
xor
push
dec
js
sbb
mov
inc
and
sub
jno
lods
mov
add
inc
jne
or
test
xchg
xchg
repnz
addl
leave
les
push
test
mov
push
cmpsb
fbld
dec
insl
insl
out
gs
into
jle
fists
scas
cmpb
icebp
sbb
pop
or
xor
stos
fwait
and
outsb
gs
repz
adc
and
idivl
and
test
inc
or
sub
inc
mov
or
nop
adc
xor
insb
into
push
call
js
sub
mov
outsl
test
and
sahf
repnz
mov
mov
fsts
out
and
push
stos
leave
popa
add
jg
xchg
xor
orb
divl
in
jg
mov
xchg
insl
mov
movsl
pop
in
popa
rclb
mov
dec
pop
inc
cmp
punpckldq
mov
and
mov
and
push
mov
stos
sbb
cmp
add
inc
push
mov
cmpsb
out
push
les
hlt
xchg
xor
adc
or
push
add
sbb
dec
jno
mov
subl
or
sahf
aas
adc
mov
xchg
je,pt
adc
arpl
dec
and
mov
inc
into
adc
cli
fildll
clc
test
dec
mov
popf
mov
inc
ret
dec
and
jg
dec
cmp
dec
pop
mov
test
sub
and
iret
loop
stos
and
aad
or
loop
dec
call
sarl
sub
and
cwtl
hlt
roll
pop
mov
sbb
sub
shlb
aaa
xor
stc
fldenv
testb
inc
les
adc
push
fstpt
test
loop
test
sub
dec
jge
pop
outsb
aam
sub
cmc
and
jae
stc
and
aad
fidivrs
clc
sub
repz
je
sub
enter
cmc
mov
cltd
and
aas
lds
enter
add
jb
std
lods
push
scas
pop
mov
jp
cmpsl
cmp
xchg
xlat
mov
ljmp
in
int3
cmpsl
add
xchg
xor
or
dec
xor
and
adc
jns
loopne
adc
scas
cmp
bound
outsb
pushf
mov
andb
sub
ja
cmpsl
dec
sub
and
cs
jbe
push
sub
repnz
jb
lcall
and
xchg
jb
and
xor
iret
out
mov
rolb
mov
rcr
imul
xchg
sbb
push
fs
iret
pusha
inc
movsb
aaa
test
sti
mov
jno
loopne
or
pusha
and
mov
mov
inc
divl
cmp
call
mov
leave
inc
rep
xchg
or
hlt
push
repz
jp
jmp
arpl
mov
xchg
sub
push
int3
xchg
add
mov
pop
test
add
in
dec
std
arpl
mov
mov
xor
cld
ret
push
les
hlt
pop
adc
loopne
stos
jnp
inc
ss
jne
cwtl
pusha
out
scas
stc
adc
lret
pop
in
pop
rep
enter
sbb
lret
jle
stc
out
mov
daa
ror
sub
mov
inc
lahf
pop
jge
cmpsb
int3
ficomps
mov
bound
out
sbb
insl
push
stc
cmp
mov
cmpb
inc
stc
inc
inc
pop
shll
fs
xchg
cli
push
movl
pop
adc
adc
mov
or
pop
ret
mov
lods
lock
add
jle
fsubrs
cmp
cmpsl
cltd
jno
jbe
jg
xor
inc
jns
jg,pt
es
pusha
popa
xchg
imul
leave
xchg
sbb
ret
dec
cmp
ds
pop
jg
mov
adc
js
enter
adc
sub
cmpsb
fs
in
mov
fildl
add
mov
cmp
add
imul
fwait
cli
dec
push
and
or
in
aas
sbb
push
movsl
pop
inc
inc
xchg
js
push
data16
out
scas
xchg
inc
out
pop
mov
subb
push
mov
or
xor
pop
je
push
or
testb
and
mov
sbb
pop
sub
fstps
and
ret
icebp
test
jns
fidivrl
shll
add
ljmp
and
sti
jecxz
shl
loope
cmp
ds
js
cmpsl
add
mov
fs
mov
mov
mov
daa
jp
adc
lea
sbb
push
mov
in
lahf
movsl
mov
sbb
roll
inc
scas
mov
sbb
push
sbbb
sbbb
lcall
test
mov
dec
jp
and
push
mov
into
jp
push
popf
jns
dec
or
icebp
test
jge
dec
cld
cli
add
push
pop
dec
and
movsl
aaa
mov
pop
popa
lret
pop
pop
push
inc
lea
gs
inc
insl
xchg
arpl
jg
hlt
dec
js
sbb
loopne
mov
sahf
gs
dec
ss
sub
fwait
insb
out
fldl
xchg
pop
fwait
xchg
inc
and
mov
daa
mov
inc
sbb
xor
ds
xor
and
mov
jge
cmp
jbe
fadd
cmp
adc
push
xchg
lahf
cmp
cmc
arpl
lcall
rclb
add
out
int3
dec
dec
es
pushf
adc
mov
lret
sub
aas
faddp
pushl
xchg
out
out
pusha
stc
xchg
pop
rclb
sub
lcall
sbb
icebp
pop
pop
fildll
sbb
fisubl
das
ja
bound
xchg
loopne
enter
cmp
nop
mov
addr16
and
fs
pusha
jb
leave
stc
inc
pushf
ljmp
sbbb
pop
test
sub
or
bnd
outsl
add
call
popf
lcall
and
pop
add
mov
pop
cmc
mov
jge
xchg
pop
xlat
dec
jle
and
add
lock
xchg
or
push
push
test
cltd
mov
sarb
mov
das
cmp
cmp
sub
and
dec
jne
pop
push
fdivs
bound
mov
jae
fmuls
imul
xchg
ja
into
je
cld
fistl
mov
sti
adc
rorl
adc
mov
mov
in
pop
in
sub
add
js
jne
ljmp
arpl
mov
in
daa
fidivl
and
mov
call
and
xor
rorl
inc
add
outsl
sbb
aam
xlat
adc
xor
out
pop
jle
xor
js
add
pop
mov
shrl
repnz
out
lea
dec
add
mov
sub
inc
jo
mov
dec
roll
sbb
pop
rcl
jno
cmp
faddp
push
orl
daa
mov
inc
xor
cmp
sbb
sti
push
pop
xor
daa
loop
and
or
lods
or
test
add
imul
mov
push
stos
jg
jo
pop
jp
mul
mov
mov
cmp
shlb
jne
push
adc
xchg
push
inc
jb
jae
mov
push
dec
jl
stc
mov
iret
jo
or
and
insl
jl
sub
xor
adc
stc
mov
sbb
or
ja
cmc
mov
cld
pop
add
mov
clc
mov
js
sarl
add
dec
and
add
or
push
icebp
pushf
adc
cmpsb
xor
mov
scas
lds
pop
out
sub
or
inc
movsb
in
stos
int3
lods
lcall
mov
jbe
int3
pop
lods
pop
cmovl
shrb
test
fs
andl
lea
sub
or
movsl
into
dec
shrl
loopne
sbb
stos
sbb
jns
jo
cs
cmp
pop
sbb
push
add
pop
push
sub
fldenv
ret
jns
sbbl
cs
add
xor
in
adc
leave
push
aas
aas
loop
stos
sete
jg
je
or
les
jno
jo
sarl
jo
push
subl
sbb
pushf
mov
daa
xchg
push
cmpsb
xor
cmp
push
xor
subl
mov
jmp
fmull
xchg
and
push
push
sbb
mov
adc
or
xor
dec
ret
imul
aaa
and
popa
mov
imull
nop
imull
add
loope
scas
and
and
mov
dec
or
outsb
aad
scas
xchg
loopne
and
inc
sahf
jb
stos
sub
iret
sub
and
sub
push
jae
stos
cmp
stos
push
push
cltd
lret
push
xchg
dec
xchg
cmp
push
xchg
mov
lea
or
outsl
lret
out
aaa
in
sahf
jae
adc
gs
fcmovu
xchg
dec
sub
fcoms
outsb
ret
pop
inc
test
leave
shrl
sti
test
inc
dec
shlb
pop
lock
stc
sbb
adc
mov
xchg
test
hlt
adc
fstp
loopne
dec
gs
xor
inc
cmpsl
cltd
xlat
jl
cmp
or
adc
aas
mov
outsl
mov
movl
lahf
push
cmpsb
pop
jo
xorl
cmpsb
out
ds
sti
pop
sbb
dec
call
mov
jns
cmc
cmpsb
ja
adc
mov
mov
movsl
xchg
pop
xlat
pop
xorb
xchg
std
cltd
and
ret
xor
ss
sub
jb
adc
and
loope
or
xchg
sbb
lea
je
dec
dec
pushf
outsb
pop
or
or
mov
mov
in
xchg
mov
sbb
jo
cs
jg
cmp
cmp
std
std
xor
mov
ja
xlat
lret
sub
adc
xor
and
adc
imul
clc
jns
andnps
push
je
mov
fs
rcrl
aad
mov
xchg
jb
cmpsl
cli
inc
movsl
ficomps
int
shl
pop
aas
mov
push
dec
add
jecxz
sub
inc
cld
in
sub
xor
call
in
iret
dec
sub
rorl
fdivl
mov
or
shrb
or
jmp
add
popa
mov
adc
jno
xchg
push
into
push
jb
icebp
adc
iret
push
out
cwtl
insl
jae
lods
pop
push
xchg
or
addb
jl
scas
cs
cmp
insb
jecxz
aam
pop
imul
cltd
ljmp
mov
adcb
daa
mov
mov
fiaddl
pop
mov
lods
fimuls
fmull
mov
sbb
push
negl
pop
ljmp
scas
and
sbb
cmpsl
ja
jl
pop
mov
out
fst
insl
dec
gs
cmp
js
cmp
lds
jmp
shrb
cmp
push
mov
and
outsl
xorl
pop
lret
insl
dec
xchg
loope
pop
outsl
dec
or
push
sti
push
xchg
ficompl
pop
xchg
lock
cli
pop
adc
daa
sbb
pop
add
rcrb
lcall
inc
inc
arpl
push
add
clc
cld
sarl
hlt
jp
and
stc
stos
jb
mov
stc
add
pop
rcrb
fstps
lds
push
add
mov
ja
repz
pop
mov
scas
adcb
xchg
xorl
fst
push
cmp
lds
jo
icebp
aam
iret
mov
iret
clc
test
cld
xchg
or
inc
dec
cmp
and
jecxz
add
sarb
jne
or
rol
aad
jle
mov
lds
loop
pop
sbbl
enter
pop
loope
rcl
movsl
mov
aaa
and
sbb
xor
fsubrl
test
bound
pop
xchg
out
negb
xor
sti
sbb
in
out
or
and
jmp
js
xchg
cmp
push
push
les
mov
add
in
lds
pop
je
add
mov
clc
mov
call
push
push
and
in
stc
gs
push
add
movsb
dec
mov
fcompl
jle
cmp
pop
ss
inc
inc
ja
aad
loope
mov
iret
lods
loope
mov
sub
sbb
mov
pop
test
and
push
cmp
jl
push
inc
out
sarl
popa
adc
std
scas
test
fldl
shrl
ja
mov
pop
aad
loopne
nop
iret
xchg
imul
in
mov
jg
and
mov
push
add
ja
fldt
fnstcw
xchg
into
or
aam
movsb
pop
mov
ret
movsb
cli
jno
mov
mov
shrb
daa
test
pop
sub
mov
gs
fsave
xchg
mov
add
push
aaa
inc
or
dec
jg
inc
jl
jns
push
fs
mov
inc
sub
mov
iret
out
jmp
pop
push
cld
stos
pop
cmc
sub
xchg
pop
inc
movsb
enter
push
cmpsb
push
fiadds
mov
sub
call
add
xor
xchg
cmp
mov
cltd
xchg
adc
push
jp
mov
stos
xor
repnz
mov
mov
sbb
jle
pop
lods
rol
gs
jbe
bound
xlat
cmp
mov
sub
push
inc
pop
lods
xor
or
adc
fldcw
imul
push
mov
mov
jne
out
and
or
push
outsb
jp
mov
mov
xor
cld
lods
dec
pop
cld
and
pusha
mov
rorl
push
dec
add
cmpsb
addr16
ret
and
int
add
iret
mov
pop
jmp
dec
lea
xchg
push
sub
insl
sbb
jg
mov
xor
and
mov
pop
dec
cwtl
sar
aaa
dec
mov
outsl
sbb
cmpsl
test
int
add
mov
jno
cmpsl
scas
and
pop
in
cltd
push
pop
sub
and
or
push
add
rcl
jge
push
out
cmp
iret
loopne
lret
or
stc
add
jbe
loop
xor
mov
test
pop
ret
mov
test
sbb
inc
lahf
movsl
cli
shll
push
mov
lcall
sub
enter
mov
cmp
xchg
mov
movsb
mov
sbbb
mov
jmp
hlt
iret
adc
mov
sahf
lret
or
jmp
push
lock
jne
jle
push
std
nop
scas
cld
cmp
mov
std
cmp
pop
aam
lcall
cld
xchg
pop
inc
inc
fnstsw
adcb
jns
ss
fldt
outsb
fldcw
cmc
inc
js
insl
mov
mov
int
add
xchg
fs
xor
ret
cmpsl
repz
adc
scas
push
xchg
outsb
pop
xor
notl
dec
outsl
test
adc
negb
mov
push
dec
mov
inc
lea
and
mov
adc
add
pop
div
mov
jge
int
jns
dec
pop
cwtl
repnz
dec
pop
shr
dec
sbbb
add
cmp
and
ds
sbb
sti
sub
notl
fisubl
xor
and
mov
sarl
mov
lock
and
or
int3
sub
into
out
push
cli
cmpsl
mov
mov
insl
fwait
push
ss
sub
and
aaa
jl
jmp
jbe
mov
cmc
xchg
and
push
faddl
add
cmc
mov
aam
fs
jae
popf
bnd
negl
jge
pop
dec
call
repnz
rorb
and
mov
cmpsl
loopne
lods
fdivrl
in
test
add
scas
or
mov
aad
jo
add
rep
cmpsb
sahf
inc
xchg
fldl
in
and
outsl
lcall
xor
les
rorb
stos
sbb
test
mov
mov
push
cmc
das
out
cmovae
sbb
push
cs
lds
daa
jg
outsb
xchg
daa
rcrb
sti
scas
popa
adc
dec
sub
stos
lcall
sbb
repz
cmp
jb
dec
fidivl
push
in
jg
mov
mov
cs
cmp
jl
xchg
pop
inc
ljmp
mov
sbb
dec
out
jp
cwtl
dec
mov
or
sbbb
movsb
les
xor
mov
movsb
xor
lcall
cwtl
sub
xchg
in
inc
fcomp
mov
mov
imul
dec
pop
lahf
lds
lahf
int3
cmpsl
popf
int
insl
fstpt
addps
sbb
cmc
mov
lcall
dec
je
mov
pop
mov
pop
jnp
aaa
arpl
sbb
mov
lea
cmp
fiadds
add
dec
or
shl
int3
stos
sub
movsb
mov
jl
push
out
fisubs
lahf
divb
rorl
xor
sbb
and
pop
inc
dec
test
in
ss
xor
xchg
fildl
das
push
cmc
sbb
cli
inc
xchg
jle
dec
push
dec
mov
jbe
dec
jae
aam
mov
sbb
subl
sti
dec
clc
inc
aas
ffreep
dec
or
sub
cmp
or
pop
inc
leave
subb
int
mov
sbb
inc
les
std
cmp
test
scas
sbb
add
and
jecxz
adc
xchg
xchg
out
rcrl
jae
cli
hlt
push
pushw
les
xor
push
add
stos
xchg
movsb
or
int3
xorl
mov
outsl
dec
mov
push
repz
cmp
scas
outsl
ljmp
insl
in
xorl
roll
mov
nop
lahf
lcall
sbb
jmp
xchg
dec
pop
xorb
in
ret
movsl
mov
call
mov
scas
or
scas
or
outsb
mov
movsl
dec
fisubrl
notl
mov
in
push
xorl
mov
cltd
outsl
shll
test
jmp
loop
inc
inc
xchg
dec
jmp
in
outsb
push
xlat
ret
fsubp
xchg
mov
insl
mov
sar
sub
cmp
and
int
jns
xchg
testb
into
cmpl
aaa
daa
and
cltd
roll
int3
scas
loope
lock
fwait
or
les
cltd
sbb
iret
ds
loope
icebp
or
lods
pop
std
outsl
scas
or
adc
sbb
ds
outsb
in
das
subl
xchg
mov
adc
std
push
push
iret
arpl
and
fldenv
mov
add
cmp
or
arpl
leave
lock
js
jge
or
xchg
loop
push
popa
xchg
ds
testl
and
scas
push
lcall
mov
stos
imul
mov
mov
sbb
lods
scas
inc
mov
xchg
pop
out
stos
jns
test
sub
movsl
push
pusha
sar
jge
mov
pushf
add
inc
xchg
mov
or
out
in
sub
xor
mov
jmp
or
add
imul
adc
int
fisubrl
ficoml
mulb
push
add
mov
push
ja
xchg
sub
std
jle
scas
mov
scas
or
add
ljmp
mov
scas
xor
addr16
orb
mov
xor
jns
call
iret
cltd
fisubl
pop
dec
and
out
and
push
fists
ds
in
xchg
roll
lds
adc
xchg
push
popa
loop
sub
repnz
or
imul
jmp
enter
add
in
arpl
jno
sbb
jge
fstps
repz
notl
rclb
pop
jmp
lcall
test
mov
clc
push
aam
loop
xchg
jbe
out
cmp
cmp
sub
rclb
jge
scas
add
outsl
ret
shr
xchg
ss
gs
lods
mov
xchg
xlat
rcr
inc
mov
jecxz
pushf
dec
pop
lcall
bound
nop
test
inc
insb
or
mov
sub
insl
pop
ret
in
subb
rorb
aad
mov
add
adc
push
xor
repnz
dec
sbb
sarl
cmp
add
adc
push
sarl
mov
stos
mov
pop
sub
push
adc
push
popf
jp
test
inc
adc
loop
xor
jae
lcall
cmpsb
movsb
and
dec
mov
push
subl
add
cmp
arpl
sub
jp
pop
dec
cmp
into
cld
ret
out
dec
mov
cltd
into
fcmovne
xchg
push
or
in
xor
ret
lcall
shlb
fdivrl
mov
pop
xorb
dec
xor
dec
jb
add
pop
sbb
mov
xor
dec
xchg
orb
int3
into
into
loopne
bound
in
sub
xor
pop
sub
mov
dec
scas
cwtl
sbb
imul
sahf
imul
aaa
sub
xchg
mov
es
dec
daa
out
xor
adc
pop
idivb
cmp
or
dec
pop
mov
pop
or
int
jns
in
lret
push
lret
daa
mov
ds
sbb
jo
lods
xor
ss
xor
rep
xchg
nop
ret
repz
loopne
ljmp
mov
jge
push
sbb
cltd
pop
push
sub
jle
jg
movsl
repz
call
mov
insl
stc
xchg
or
lds
mov
data16
test
movsb
out
fbld
les
lret
test
ja
pop
scas
dec
lret
add
sahf
ret
xor
repnz
stos
daa
push
or
mov
xor
adc
movsl
rcll
sub
cmp
out
or
pop
xlat
lods
jg
xor
out
nop
dec
arpl
stos
jecxz
repz
xor
imul
push
je
dec
dec
and
fs
lods
lds
mov
or
nop
xor
scas
pop
lods
mov
jo
icebp
scas
inc
or
out
sbb
cli
fdivl
jmp
loop
jae
xchg
cmp
ljmp
mov
pusha
xor
sub
inc
pop
mov
and
sbb
out
movsb
test
cmc
push
sbb
mov
ss
ljmp
inc
cwtl
pop
out
std
insb
push
and
inc
movb
lret
and
adc
scas
repz
pop
outsb
mov
xchg
xor
leave
mov
shl
push
pop
dec
jmp
ret
xor
mov
mov
and
icebp
insl
push
clc
test
lods
int3
out
pop
push
add
leave
pusha
xchg
insb
adc
push
jmp
pop
or
xor
mov
dec
xor
mov
sbb
xor
ret
xchg
adcb
lock
jle
add
cmpsb
loop
xor
insl
mov
xor
in
sahf
inc
mov
adc
or
sub
sbb
aas
shlb
and
inc
stos
and
jecxz
jg
pop
insl
fsubs
pop
cmp
or
lods
jae
imul
add
in
jno
jmp
push
stc
aas
lods
jle
mov
xchg
mov
repz
sub
push
stos
xchg
hlt
mov
push
outsb
dec
pop
or
out
inc
pushf
sar
lret
mov
pop
inc
loop
sbb
inc
push
and
pusha
int
test
std
pmovmskb
or
rcr
adc
push
mov
ljmp
mov
fcoml
test
stos
or
inc
out
mov
or
out
sbb
ficoml
dec
in
push
bound
inc
jecxz
or
dec
jl
jb
adc
inc
dec
mov
adc
xchg
hlt
lods
hlt
mov
mov
inc
scas
scas
test
test
arpl
xorb
out
rclb
arpl
mov
pop
and
ja
inc
xor
mov
mov
pushw
mov
test
add
and
lcall
lods
inc
in
cwtl
or
inc
inc
leave
xchg
inc
cld
in
push
mov
call
sbbl
cmpsb
call
pushf
cmp
ljmp
loope
or
insl
sbb
add
cmp
loopne
inc
mov
lret
aad
scas
sbb
wbinvd
in
stc
lock
pusha
adc
lret
pop
hlt
and
sti
es
add
xor
mov
jae
insb
inc
or
mov
enter
test
cwtl
mov
lcall
out
int3
jae
mov
fs
aam
push
mov
test
xchg
lcall
out
sbb
cmp
mov
mov
jno
sub
shll
scas
sub
orl
mov
mov
aas
mov
xor
out
mov
je
ret
ja
notl
push
mov
inc
jge
ror
cmp
fnstsw
or
leave
into
adc
mov
pop
pop
ja
push
pop
push
sti
mov
stc
fildl
jno
xor
xchg
jmp
sbb
jo
inc
sarl
pushl
cmp
sub
add
jecxz
jo
mov
ljmp
jmp
push
inc
stos
cmp
dec
sbb
pop
push
in
add
lods
xorl
int
pop
xchg
ss
lahf
out
lcall
imul
fidivl
ret
ret
xchg
in
mov
fistps
inc
jle
push
ljmp
arpl
mov
xchg
inc
dec
in
sub
inc
fists
jmp
loopnew
push
std
pusha
cmp
fidivl
sbb
add
loope
inc
sbb
dec
dec
xchg
ss
mov
pop
cmp
xchg
int3
in
pop
sbb
cmpsb
xchg
out
mov
push
rorb
cltd
pop
stc
js
faddl
decb
jg
sbb
imul
jo
stos
lods
jp
in
stc
testb
sbb
mov
jns
sub
xchg
call
insl
xchg
jne
cmp
lea
pusha
daa
orb
push
mov
lock
test
shlb
jp
mov
sahf
xchg
pusha
and
roll
mov
push
rorb
cltd
mov
jne
adc
pusha
xchg
sarb
or
jge
aaa
clc
iret
insl
mov
adc
ljmp
loop
or
xchg
jne
mov
and
cmp
mov
lahf
into
jge
lock
add
and
mov
xor
in
sub
test
push
mov
push
lods
addb
fmuls
cli
outsb
lret
xchg
mov
mov
add
cmp
xchg
fcomps
dec
cmc
xor
adc
shlb
fwait
aad
repz
adc
dec
retw
push
mov
pop
jo
inc
sub
jg
push
mov
in
call
mov
xor
xor
ljmp
dec
cltd
mov
cltd
incb
xor
mov
add
mov
outsb
mov
int3
popa
aaa
sub
ret
in
inc
aas
xor
fstpl
fbld
sti
adc
jle
cmp
sub
inc
and
fs
dec
and
out
mov
cmp
enter
cld
xor
sub
filds
adc
je
or
inc
sub
sbb
adc
push
inc
lahf
sti
mov
aam
dec
scas
jnp
and
aaa
inc
icebp
and
lods
lock
push
push
xor
pop
test
call
hlt
ja
xchg
loop
xor
sbbl
int3
inc
mov
enter
in
inc
call
xchg
outsb
mov
xor
dec
test
iret
inc
mov
daa
dec
test
jecxz
pop
rcrb
popf
pusha
shufps
xor
mov
pop
ret
call
inc
std
inc
pop
mov
fcmovu
int3
sub
sub
rorb
or
inc
sub
outsb
xchg
jecxz
das
sbb
roll
js
and
enter
int3
stos
stos
sbb
fldt
jbe
cmp
ret
cmp
add
xchg
jnp
xchg
cltd
mov
sub
sub
adc
cmp
imul
out
cmp
repnz
imul
call
mov
jg
sarb
aam
or
jne
sub
or
xchg
push
dec
stos
fdiv
cwtl
clc
in
nop
sub
stc
dec
pop
or
jae
filds
xchg
adc
push
mov
xchg
lcall
mov
outsb
into
addb
inc
add
inc
mov
and
pop
daa
mov
andl
adc
and
add
cltd
xchg
and
out
and
lods
sub
jge
loope
int
or
iret
aas
pushf
inc
pop
incl
xor
stos
mov
xor
mov
cmp
cmp
insb
icebp
jne
ljmp
ja
fucomip
mov
lds
insl
sbb
rclb
jecxz
test
dec
btc
jae
in
ret
mov
cmpsb
in
daa
inc
fdivl
and
repz
into
and
fs
frstor
jnp
dec
lahf
fmull
cmpsb
cmp
mov
popf
push
mov
jb
dec
stos
loop
dec
data16
fmuls
push
aas
iret
sbb
clc
lret
mull
cmp
xchg
sbb
push
push
cmpsl
stc
aaa
test
jnp
sub
in
xchg
or
sub
sbb
cmp
push
in
mov
std
stc
pop
je
dec
lea
cmpsl
test
sbb
xchg
out
jbe
fadd
cs
sub
stc
sub
dec
inc
popa
sbb
iret
lock
dec
inc
cld
sbb
sbb
call
or
xor
insl
call
dec
mov
xor
stos
fmull
jae
push
insb
mov
inc
xor
mov
imul
je
adc
ljmp
ja
or
cmp
mov
or
and
rcrl
push
xchg
aam
and
or
adc
or
rorl
xchg
sti
push
sub
leave
push
dec
je
scas
xchg
jne
cmp
addb
hlt
js
lret
in
inc
das
lea
mov
ja
push
sti
dec
xor
scas
movq
cmp
adc
imul
aad
xchg
mov
push
jl
cltd
xchg
pop
repz
xchg
jne
push
insl
es
out
outsl
iret
les
leave
in
mov
xor
push
cmc
push
jle
fucomi
cs
push
ss
test
cli
ja
mov
pop
outsb
fisubrl
dec
and
cwtl
arpl
mov
dec
pop
out
ds
or
mov
adc
add
fisubrl
mov
xor
lcall
fstpl
dec
mov
frstor
mov
cltd
inc
arpl
imul
xchg
aam
cmpsl
ficomps
roll
mov
and
fsts
stos
push
in
cmp
mov
sarl
mov
add
sub
push
inc
out
add
ja
jp
dec
pop
inc
cs
push
mov
in
and
lahf
test
sbb
pop
push
dec
cwtl
aaa
mov
cwtl
add
xor
sbb
cmpsb
sub
stos
mov
call
mov
jg
sub
out
mov
cltd
jge
cmpsl
xor
movsl
int
insb
adc
repnz
mov
cwtl
cmp
mov
mov
push
les
rcl
arpl
or
sub
inc
dec
insl
cmp
hlt
push
daa
test
add
int
dec
insb
lret
xchg
shrb
aas
pusha
add
xchg
push
sub
xorl
mov
add
jecxz
lods
in
mov
pop
scas
inc
jb
test
leave
clc
add
js
cmc
sub
int3
iret
inc
and
pop
imul
mov
fmull
loop
xor
cmpsb
lods
xor
pop
mov
fsubs
rcll
push
test
add
sbb
gs
mov
sti
jmp
repz
jno
rcrb
stos
pop
mov
leave
add
lret
out
insb
ss
repz
xor
xlat
mov
shll
inc
movsb
sub
sub
mov
filds
push
xchg
adc
cmc
adcl
std
fs
in
dec
out
or
cs
test
lahf
jb
xlat
xchg
mov
sbb
push
lods
xchg
xchg
lret
and
cs
int
sub
add
mov
icebp
loope
xor
das
xchg
mov
test
inc
sti
xchg
mov
in
in
cli
ja
das
fadd
sub
movsb
aam
stos
test
loop
fwait
mov
lahf
sarl
cmpsl
mov
push
outsb
pop
push
lea
sub
add
push
mov
mov
mov
insb
in
imul
shrl
push
shl
push
pop
push
push
repz
imul
insb
or
mov
aam
rcll
stos
cmpsl
ljmp
das
adc
aas
jmp
in
jg
jb
imul
lret
pop
jge
or
jl
adc
bnd
xorb
pop
inc
insb
ret
adc
pop
in
jne
xchg
inc
fists
movsb
movsl
mov
mov
xor
push
mov
std
push
inc
jnp
xchg
daa
dec
pop
pop
in
dec
sub
cli
and
mov
addr16
test
cmpb
in
mov
pop
mov
push
push
lock
xlat
fildl
push
and
push
jp
sbb
loopne
lret
push
sbb
clc
pop
cmp
dec
jg
sbb
adc
cmpsl
sarl
push
call
xor
and
xchg
sbb
shl
or
dec
f2xm1
fwait
or
xchg
cmpl
sbb
cmp
jmp
cmp
hlt
fsubp
jae
sbb
negl
push
xor
pop
inc
insb
jl
cmp
sbbl
cmp
mov
les
ret
dec
or
mov
push
idivb
push
sti
mov
jge
loopne
lret
inc
fwait
shll
or
int
in
in
pcmpeqd
dec
out
loope
stos
push
cs
int3
lods
pushf
adc
icebp
lret
sbb
mov
dec
in
mov
lcall
cltd
xchg
fmull
lock
xor
fisubl
mov
std
fcoms
out
adc
mov
pop
andb
es
js
pop
fdivrs
sub
xchg
mov
xchg
sbb
rcrl
mov
sahf
adc
pop
shrb
sti
into
and
fnstenv
cmp
adc
cltd
jl
dec
sbb
xor
mov
and
sub
push
pop
or
and
roll
mov
ljmp
int
loopne
xor
or
push
lcall
int
jp
cmp
jp
cltd
push
insl
sub
xchg
sub
fists
rcl
xchg
add
push
cmpsb
mov
ss
jbe
out
fmul
cmc
sahf
in
in
xchg
cmpsl
add
inc
push
cmp
xlat
lock
or
lods
or
sub
inc
shrl
mov
insl
and
movsl
push
pop
shrl
jge
sbb
pop
arpl
ret
les
iret
sbb
outsb
insb
dec
xor
out
sbb
sbb
push
pop
xor
insl
push
mov
fidivrs
jno
push
jle
sarl
popl
outsl
cmp
and
in
hlt
ja
mov
sub
pop
mov
call
adc
sub
add
mov
test
mov
cld
pop
lahf
jmp
xlat
cmp
les
xchg
adc
mov
insb
push
dec
in
lds
mov
mov
in
xor
rcrb
pusha
push
cli
sub
addr16
fsubs
lods
xor
ljmp
cwtl
cmp
popf
mov
or
adc
in
inc
and
sbb
cwtl
and
and
popf
sub
insl
loope
idivb
adc
xor
dec
cwtl
rorb
lret
inc
dec
jecxz
and
xchg
mov
int3
testl
ret
dec
lods
xor
int3
cmc
jecxz
add
xor
pop
scas
push
rcrl
mov
lock
popa
mov
loope
lret
and
xchg
fistl
cmp
out
mov
into
push
out
jle
dec
xchg
jo
pop
test
insl
cmc
jae
shll
adc
push
mov
sub
adc
inc
mov
push
push
adc
dec
fcmovne
inc
mov
and
push
jno
xchg
inc
ret
les
loopne
xor
mov
push
pop
push
pop
fucomi
sub
push
cmpl
in
xchg
aaa
mov
jo,pn
dec
pop
mov
fmuls
and
xchg
pop
das
fildll
pusha
sub
hlt
gs
icebp
mov
pop
or
xchg
ret
sub
sbb
insb
in
mov
mull
or
rcr
and
cmp
sbb
shrb
mov
lahf
inc
adc
cwtl
cltd
pusha
imul
or
gs
xor
mov
imul
jb
pop
stos
jnp
rcrb
inc
cmc
jb
lock
inc
js
or
inc
sbb
stos
push
pop
push
sbb
push
ret
fisttps
mov
fistpll
ja
jge
xor
jmp
mov
fs
sub
jae
xor
test
cmc
cld
insb
and
inc
lods
dec
sub
jge
lds
cmc
aas
addb
jge
or
popf
cmp
jne
adc
sub
pop
or
and
pop
movsb
mov
popf
jnp
sub
pushw
xorb
sahf
pop
and
sub
test
lcall
pop
aas
lret
add
in
sub
ret
mov
add
mov
addr16
loop
pop
dec
xor
push
jg
sbb
jge
sub
xchg
xor
mov
sub
mov
inc
xor
out
sub
push
test
mov
icebp
stos
cmp
enter
scas
arpl
sub
divl
stos
ljmp
mov
or
sub
mov
jb
sar
rcll
fwait
lods
sahf
test
mov
push
lock
rcll
inc
and
nop
sbb
in
mov
pusha
push
into
lods
and
push
out
lea
and
js
mov
aas
imul
mov
dec
sub
ficoml
leave
iret
adc
rcrl
roll
mov
mov
ret
jbe
jp
daa
sub
jbe
pop
pop
pop
xor
imul
into
cmpsb
pop
jecxz
test
out
jp
mov
push
call
int3
jle
jp
add
popf
push
or
inc
mov
cs
jge
popf
mov
jg
out
push
pusha
cld
movsl
or
outsl
dec
xchg
lock
mov
clc
jg
jecxz
lret
push
jl
mov
xor
pop
pop
mov
je
or
ret
xor
xor
mov
mov
aas
lods
pop
int
imul
cmp
cmpsl
outsb
popf
adcl
mov
pop
jle
insl
adc
mov
lock
test
pop
decl
orb
sets
fstpl
add
cmp
cmp
sub
sbb
loop
aaa
jns
dec
movsl
xor
fmulp
pusha
mulb
and
cli
sub
mov
pop
dec
mov
add
out
mov
or
mov
movsb
and
mov
mov
enter
popa
mov
push
jl
loopne
neg
jecxz
in
repz
xchg
cwtl
xor
rcr
or
into
leave
pop
inc
or
imul
out
jge
pop
imul
gs
adc
jge
sub
es
sarl
jecxz
lock
adc
or
repz
mov
push
shll
leave
xchg
and
mov
push
lahf
jecxz
ret
testl
cwtl
std
xor
cwtl
clc
pop
mov
icebp
xchg
cmpb
inc
lret
pusha
fcompl
in
div
loope
and
xchg
std
cmpsl
or
mov
pop
addl
sbb
fwait
mov
les
ret
add
dec
sbb
stc
mov
bound
dec
or
mov
mov
mov
icebp
in
or
sbb
mov
lods
sub
push
dec
jecxz
or
sub
inc
inc
pop
daa
jne
inc
pop
and
les
push
sbb
popa
push
xor
jmp
sbb
and
sti
sub
mov
jnp
fcomi
add
addl
lret
or
dec
ror
jnp
xor
xor
je
mov
dec
or
adc
gs
fdivs
mov
int3
pop
xchg
xchg
dec
cmp
mov
sbb
inc
in
mov
lods
mov
push
repnz
js
stos
or
out
push
scas
jp
pop
jo
dec
loop
fnstenv
stos
xchg
adc
ss
sub
dec
or
mov
mov
cmp
xchg
mov
dec
pop
ljmp
jns
dec
dec
gs
ficoml
cmp
shufps
mov
adc
cmpsb
iret
cmpsl
mov
hlt
aas
loop
inc
out
test
xchg
cwtl
inc
fimull
ret
inc
mov
adc
ljmp
mov
or
jnp
pop
xor
push
mov
stc
sahf
ljmp
in
pushf
les
pop
jle
pop
and
ds
pop
js
aam
pop
cmp
push
call
adc
mov
sub
js
cmpsb
jne
xlat
jl
movsl
ret
mov
mov
jecxz
andb
lds
inc
shll
xor
hlt
mov
inc
push
mov
decb
outsl
in
in
push
loopne
and
xor
xorb
movsl
imul
add
fiadds
in
dec
inc
test
cld
adc
pop
jmp
pusha
outsb
jno
sbb
mov
pop
out
std
mov
jg
dec
pop
sub
add
test
cmp
pop
and
lret
test
shlb
fcom
jecxz
add
bound
mov
xlat
and
mov
lods
dec
or
ret
mov
fbld
xchg
mov
push
cli
flds
dec
add
mov
sbb
mov
mov
cmp
xor
sbb
mov
cmc
add
pop
pop
data16
test
xchg
inc
ljmp
ja
test
cmp
adc
mov
insl
inc
mov
fdiv
icebp
mov
fisttpl
cli
mov
inc
stos
out
popf
mov
out
loope
aaa
out
subl
sub
mov
jbe
add
cmp
movsb
lcall
xor
fldenv
mov
fstps
mov
dec
adc
ss
cmp
popf
dec
je
insb
shll
repz
sbb
lds
sti
ja
test
push
cmp
or
ret
adcb
imulb
add
or
xor
inc
adc
rorb
cld
or
mov
or
int
sbb
adc
push
std
sbb
jle
mov
cmp
xchg
mov
or
xchg
xchg
fisubrs
popa
sub
jns
mov
jo
mov
push
inc
push
test
sub
xor
adcb
and
xchg
test
inc
pop
dec
movsl
dec
xchg
jecxz
lret
mov
dec
mov
gs
push
test
nop
aas
and
outsl
js
mov
mov
sub
out
rcl
lcall
fimull
scas
enter
mov
stc
testb
cmpsb
out
mov
inc
cmp
mov
stos
adc
imul
xlat
jmp
cmc
mov
adc
ja
add
sbb
nop
add
xor
mov
movsl
push
inc
icebp
sub
push
inc
scas
inc
lods
shr
cli
mov
lods
cmp
imull
jp
stc
or
mov
and
inc
ja
out
out
ror
in
pop
shl
out
push
popa
pusha
push
mov
inc
lods
ss
loope
ds
cmc
inc
leave
inc
mov
fcomps
enter
pushf
mov
dec
sbb
push
insl
jmp
ficoml
mov
and
sti
lcall
ljmp
jae
pop
cmc
imul
call
sbb
movsb
sub
stc
mov
aaa
mov
and
arpl
adc
xlat
lods
lods
sbb
fwait
xchg
xlat
pop
dec
xor
mov
and
daa
adc
lods
mov
data16
pop
mov
rorb
mov
shlb
stc
loopne
mov
cmp
mov
loop
pop
adc
movsl
test
push
cmpsb
mov
mov
aam
xchg
xlat
xor
outsl
mov
jl
mov
enter
inc
gs
lods
dec
xor
mov
or
push
inc
or
inc
fnstsw
mov
and
aaa
or
sub
add
dec
or
ret
push
popa
pop
fiaddl
aaa
ds
sub
call
adc
in
and
pop
and
les
add
mov
xchg
test
fstpl
inc
mov
scas
imul
ret
leave
mov
jnp
add
xor
xlat
push
or
out
pop
addr16
dec
pop
cld
mov
inc
out
fildl
jbe
mov
lret
mov
dec
jge
push
mov
or
stos
xchg
outsb
jmp
aam
outsl
mov
inc
dec
mov
jb
outsl
sub
in
add
jge
mov
bound
repz
fs
es
ret
xchg
jae
je
adc
cmp
out
nop
aas
lahf
call
arpl
in
out
push
and
push
sub
xorl
in
inc
mov
in
add
push
loop
bound
out
int3
out
xor
adc
in
and
sbb
lret
out
ds
addr16
dec
push
push
mov
cs
int
sbb
mov
cmp
sub
inc
adc
and
pop
lea
pop
cld
mov
xor
adcl
fs
mov
popa
imul
sbb
push
mov
mov
dec
or
push
adcb
or
adc
cmpsb
xchg
pop
pushf
xchg
cs
pushl
xchg
push
add
notl
push
jl
iret
cmp
lret
jl
mov
cmpsl
ficomps
push
pop
ret
mov
lods
jmp
fs
aaa
hlt
push
push
xlat
mull
fs
rolb
ss
cmp
lss
sbb
xchg
cmp
sub
imul
jbe
fisttpll
xor
idiv
xor
and
dec
lock
xlat
adc
push
jb
outsl
jnp
mov
inc
dec
or
int3
test
pop
sub
fsubp
test
ss
or
insl
ss
shlb
into
mov
pop
aad
add
mov
test
pop
mov
divb
fdivr
add
pusha
rep
push
in
in
jecxz
mov
outsl
push
outsb
in
dec
mov
aas
cmpsb
loopne
pop
add
jbe
push
mov
and
mov
fadds
xchg
movsl
pop
pop
repz
mov
insl
inc
mov
cmpsb
call
sbb
mov
sub
jns
cltd
push
push
cs
xor
out
cltd
ss
cmp
add
mov
cmp
sahf
or
std
push
stos
jg
test
inc
lea
in
cmp
outsb
ljmp
and
push
push
cs
mov
popf
xchg
xor
jl
repz
add
mov
out
or
shrl
cld
aaa
scas
sbb
adc
mov
fimull
ljmp
in
test
mov
scas
jge
rcrl
xor
pushf
call
mov
mov
cmp
test
mov
sarl
sbb
icebp
das
sbb
je,pn
and
push
ljmp
pop
in
jbe
in
jle
push
sub
out
mov
gs
sbb
pop
sahf
cmp
or
iret
or
pop
mov
imul
dec
jl
fwait
push
push
xor
lahf
mov
mov
nop
or
cmp
xor
adc
test
jbe
cmp
fldenv
mov
cmpb
mov
mov
pop
inc
lock
lahf
mov
xchg
lahf
jns
mov
popa
sar
jb
outsl
or
jl
jmp
insl
jp
mov
cmp
cltd
mov
xchg
xchg
adc
mov
dec
test
rcr
mov
sub
mov
xor
mov
or
xchg
mov
cmc
insb
out
movsl
mov
sbb
sti
adc
mov
sub
dec
into
add
fadds
into
cltd
std
ds
pop
stc
mov
pop
insl
fcomps
sbb
jp
pop
jl
sub
cs
jno
pop
add
sub
sub
jns
inc
out
xchg
test
push
add
inc
push
sti
push
rorl
cmp
and
sbb
rcrl
mov
cltd
add
xchg
scas
sahf
fimuls
add
jne
out
call
push
and
cli
fisttps
inc
mov
insb
pop
shlb
mov
call
lret
xor
push
fidivrs
dec
cmpsl
pop
pop
xchg
sbb
lret
push
movsb
iret
icebp
cmpsl
push
std
mov
and
xor
fsubrs
roll
fsts
adc
loope
sbb
ret
aaa
cmc
lcall
lea
pop
test
inc
loop
cmc
es
popf
mov
add
jl
shlb
std
jl
jl
xchg
mov
pop
fsubr
cmpsl
jb
sbb
jle
pop
testl
rorb
ret
and
inc
jmp
scas
nop
in
mov
or
sub
scas
and
jbe
inc
lds
push
movl
ljmp
in
fstl
mov
inc
ljmp
and
mov
or
pop
jle
aam
sbbb
lcall
inc
push
aas
sub
add
xlat
push
jge
pop
int3
ds
int
and
mov
movsl
stos
aas
orb
jnp
imul
push
rorl
out
lcall
mov
cwtl
or
mov
sti
jl
int3
popf
push
and
xchg
fcomps
mov
and
popa
mov
dec
xor
dec
mov
into
je
repnz
nop
cmp
xorb
mov
sahf
jg
or
lcall
jno
stos
xor
rcr
add
aas
sbb
daa
push
push
sbb
xor
pop
enter
aam
jnp
outsl
mov
test
test
pop
imul
aas
inc
mov
dec
push
inc
xchg
nop
ret
test
jecxz
and
jge
stc
in
cmp
insl
cli
bound
aam
jae
and
jnp
push
in
enter
out
shrb
xchg
imul
cwtl
dec
xchg
xchg
cmpsb
jmp
stos
in
sub
sbb
out
push
push
cmpsb
subl
inc
xor
sbb
mov
adc
cmp
sbb
out
cmp
rclb
pusha
out
inc
aas
mov
adc
in
mov
fistpl
or
aas
xor
std
inc
mov
mov
and
iret
nop
pop
jns
mov
stos
push
repz
and
inc
test
jge
test
xorl
fs
jg
mov
xchg
jg
insl
mov
xchg
cmp
dec
out
mov
loop
pushf
shrb
sahf
inc
add
imul
aas
pop
outsb
rolb
testb
pop
push
push
jle
pop
dec
sub
and
xor
push
push
push
xchg
aaa
and
push
aam
repnz
mov
insl
test
shlb
pop
push
push
out
pop
mov
pop
xor
leave
or
aaa
mov
leave
fdivrl
mov
mov
ja
imul
and
push
xor
xchg
imul
pop
lret
adc
cmp
dec
out
les
sub
xchg
mov
or
inc
mov
lods
in
pop
insl
scas
rcrl
xlat
mov
dec
shll
orb
loope
sahf
int
sbbl
inc
and
lock
cmp
push
out
jecxz
pop
adc
cmp
sahf
mov
xor
movsl
dec
jne
xchg
xchg
pop
dec
int
mov
dec
mov
push
jne
out
mov
or
ja
push
sub
aaa
fsub
shrb
ljmp
cmp
nop
mov
inc
jb
lcall
icebp
insl
ror
mov
inc
daa
in
fisttpll
ljmp
movsl
mov
test
and
add
imul
test
int3
add
pop
outsl
and
fwait
push
ss
inc
adc
mov
test
fcoml
ret
insb
push
xchg
cmp
pusha
sarb
mov
pop
popa
mov
xchg
jecxz
inc
adc
and
jo
or
xor
and
es
or
je
pop
push
sbb
xor
mov
push
mov
xor
jbe
sbb
mov
decb
and
push
dec
pop
rcrl
mov
dec
mov
scas
shl
cmpsl
and
xchg
xor
xchg
adc
sub
add
xchg
sar
mov
cld
loop
sub
cmp
pop
fistps
or
out
cmp
xlat
jae
mov
xor
shl
xchg
cmp
xchg
aas
fmull
lods
sbb
jo
test
xor
xchg
loopne
inc
lret
ljmp
lcall
push
in
rolb
adc
adcl
test
out
cmc
adc
pop
aaa
lahf
jno
pop
clc
scas
fisttps
or
orb
adc
addr16
call
xlat
pop
icebp
push
and
inc
xchg
jp
push
clc
mov
pop
in
cld
cmp
xchg
and
stos
inc
nop
adc
outsl
cmp
out
and
pop
mov
dec
cmp
out
dec
mov
dec
jns
sbb
lcall
lds
les
in
mov
inc
adc
mov
adc
jecxz
dec
and
mov
fwait
mov
cmp
addr16
ret
or
sub
out
shll
js
cld
jae
sbb
icebp
mov
xchg
jbe
xchg
orl
rolb
mov
sub
lds
and
out
cmpsl
out
je
jnp
pop
mov
xchg
sub
cs
mov
xchg
aaa
addl
stos
xor
ss
stc
notb
xchg
testl
fwait
dec
ret
pop
mov
insb
je
icebp
daa
and
andb
mov
mov
repnz
aad
pop
pop
or
outsb
faddl
in
fs
pop
mov
jle
stc
bound
rcrb
and
dec
mov
push
inc
paddusb
mov
dec
movsl
and
leave
bound
inc
xor
or
test
ret
movl
xchg
or
hlt
ss
lods
pop
pop
xor
aas
dec
mov
sub
imul
popa
addb
add
cmc
cmp
fisubl
mov
sub
mov
jb
or
sbb
testl
jb
pop
and
enter
mov
mov
push
dec
repz
repz
adc
lret
or
sahf
dec
ret
mov
push
sbb
sti
sub
cwtl
mov
inc
daa
xchg
fstpt
sbb
push
rcl
mov
jge
ljmp
pushf
mov
lock
sbb
push
es
adc
test
fwait
or
rcrl
fiaddl
cmp
or
out
test
icebp
mov
mov
fimull
repz
les
xchg
pop
or
mov
pop
adc
addr16
nop
sub
div
jne
adc
lret
lods
jbe
and
lret
cwtl
ficoml
sub
pop
lds
mov
lock
jmp
pop
shlb
dec
std
push
jmp
repnz
mov
add
or
dec
das
loopne
and
cli
xchg
push
mov
and
lods
sbb
pop
outsl
sub
jl
in
sbbb
jge
mov
cmp
or
and
movsl
aad
iret
clc
arpl
inc
clc
mov
add
sub
cmp
cmp
cmp
inc
test
dec
nop
addr16
mov
aad
mov
aas
mov
aaa
hlt
xchg
push
mov
test
sbb
dec
movsl
scas
cmc
daa
inc
add
and
mov
jle
mov
cmp
outsl
adc
mov
xlat
mov
enter
cmp
lret
cwtl
sub
repnz
mov
ficomps
fidivs
jp
and
outsl
into
xchg
mov
sub
push
imul
or
xchg
lea
test
test
sbbb
insl
xchg
or
jnp
stos
adc
jns
pop
push
mov
cmc
cmpsl
dec
sub
xor
dec
gs
sbb
insb
js
xchg
mov
cmp
fistps
rolb
lock
lcall
mov
cmp
mov
xchg
mov
mov
into
sub
mov
mov
xchg
lock
mov
out
rcl
or
fs
stos
ret
repnz
mov
fsubr
js
aad
add
stos
add
lahf
ljmp
or
data16
add
test
aam
and
add
sti
int
call
xchg
stos
add
xchg
sbb
adc
out
sub
sbb
and
popl
out
scas
dec
stos
or
cs
jle
add
popf
push
xor
fdivp
add
sbb
call
sbb
unpcklps
das
xchg
mov
dec
clc
xchg
cmp
mov
pop
add
mov
push
clc
xor
xor
or
clc
lret
sub
pop
ds
repz
insl
jnp
gs
adc
mov
adc
lods
mov
cs
lcall
add
sub
mov
std
xlat
adc
jecxz
cmc
hlt
aad
push
xor
dec
lret
pop
loope
push
or
lock
std
inc
test
pop
pop
inc
inc
les
mov
out
in
lock
dec
mov
sub
jmp
mov
mov
jnp
test
mov
pop
rorb
notl
out
ljmp
imul
inc
pop
data16
enter
gs
dec
jle
fwait
sub
in
in
iret
pusha
adc
sbb
pop
incl
addl
jne
mov
aas
xchg
jmp
mov
in
sub
jp
ds
pushf
es
dec
es
repnz
inc
dec
mov
inc
jmp
or
ljmp
push
jle
jle
sub
jne
leave
sbb
push
add
push
xor
mov
gs
outsl
jl
mov
dec
add
stc
xchg
movsl
jno
mov
push
aaa
and
push
or
in
addr16
pop
jmp
sub
mov
les
in
pop
incb
imul
insl
xlat
lahf
xor
mov
cli
bound
test
cmp
push
or
sbb
stc
xchg
stc
ljmp
add
inc
add
push
or
lret
cmpsl
ret
cld
xor
sbb
mov
pop
add
aad
ret
push
dec
push
push
xchg
pop
xorl
addr16
or
or
xchg
pop
cmp
xchg
sub
dec
int3
jmp
lock
dec
pop
pushf
lock
dec
clc
or
lds
or
repnz
test
hlt
cmpsb
and
lea
popa
pop
es
mov
mov
jae
mov
fdivl
mov
js
leave
inc
repz
dec
push
ljmp
add
dec
loop
jo
insb
jbe
push
xchg
mov
dec
push
in
jmp
roll
cmp
add
push
cmp
out
mov
adc
nop
mov
mov
xor
push
sahf
movsl
mov
in
add
lcall
or
sbb
cld
jno
enter
stos
pop
pop
mov
imul
test
int
jne
fstps
popa
test
wbinvd
sbb
orb
ret
add
pushf
inc
pavgw
icebp
mov
xchg
mov
pop
or
int
xchg
mov
sbb
or
loop
adc
push
jecxz
pop
jl
add
es
mov
int3
pusha
iret
aam
adc
jns
lock
mov
and
push
mov
pop
jecxz
gs
addr16
pushf
add
or
mov
clc
push
push
icebp
lods
loop
cltd
aas
adc
or
jae
std
dec
cmc
call
inc
js
xor
mov
sub
jecxz
ret
push
lods
and
addr16
mov
xlat
mov
jl
mov
mov
jne
xchg
xor
ror
add
jae
sbbl
ret
fisttpll
pop
imul
push
sarb
fbld
xor
shl
push
in
loopne
fmul
jns
icebp
push
push
lock
add
and
jge
dec
addr16
mov
std
xor
and
pop
and
xor
fcompl
dec
jno
movsl
xchg
mov
hlt
sub
push
pop
aaa
dec
pop
mov
sub
lods
xchg
mov
es
adc
sbb
rcrb
jl
dec
mov
insl
in
in
lds
and
outsl
mov
add
adc
js,pt
inc
add
das
pop
pop
xor
mov
pop
add
mov
in
cli
lret
inc
lret
repnz
pop
adc
daa
jp
pop
mov
pop
pop
jecxz
xchg
xchg
into
xchg
outsb
cmp
into
mov
fs
mov
adc
mov
pop
pop
sub
xor
daa
sub
dec
test
lea
xlat
cmpsl
mov
pop
push
addr16
dec
and
push
sti
shlb
push
bound
clc
sbb
lods
mov
icebp
ret
scas
loopne
pop
jno
jo
pop
idivb
cmp
mov
push
push
mov
pop
xor
ficoml
cmc
arpl
aas
pop
pusha
mov
xchg
das
ss
mov
sbb
push
loop
insb
sub
sbb
jae
mov
xchg
xor
aam
cmp
pop
pop
mov
or
lock
std
in
insb
inc
stos
cmp
pop
bound
je
pop
mov
inc
inc
andb
adc
nop
outsl
add
jg
addr16
add
rcr
mov
pop
leave
mov
fmul
loop
rcll
mov
adc
mov
mov
popf
std
dec
and
int
int
cmpsl
adc
sub
jp
nop
nop
inc
stos
mov
or
fnsave
pop
jno
cmp
pushf
sar
xchg
sub
xor
dec
ljmp
and
xchg
clc
loop
and
or
sahf
cltd
xor
adc
insl
jmp
or
mov
push
cmp
pop
out
rcrb
cmp
mov
repnz
cld
push
xor
push
pop
imul
xor
adc
js
decb
jmp
sbb
or
mov
outsl
ret
push
mov
scas
arpl
fistpll
sub
mov
xor
pop
scas
inc
mov
mov
dec
leave
test
in
inc
mov
pusha
pop
xchg
xchg
fs
dec
jae
push
add
gs
mov
or
popa
cmp
sbb
mov
cwtl
inc
mov
cmpl
inc
test
adc
dec
mov
aad
mov
mov
push
sbb
xchg
je
les
outsl
cmp
test
sbb
pop
iret
jne
push
dec
cmc
pusha
xchg
lret
or
jl
cmpsl
outsl
xchg
fucomi
sbb
out
mov
ds
lds
xchg
pop
rorb
inc
aaa
movsl
loope
inc
lea
sti
adc
dec
int
stc
jge
adc
ja
mov
xor
cwtl
xor
mov
pusha
mov
xchg
es
ljmp
add
into
sahf
data16
add
or
push
xchg
clc
cltd
push
leave
inc
lret
pop
insb
mov
psubq
and
popa
mov
pop
xchg
and
int
fstps
std
xchg
push
outsb
push
adc
lea
sbb
outsl
lret
jl
mov
mov
mov
mov
fcmovbe
sub
xor
push
cmp
iret
out
xchg
and
pushl
dec
pop
clc
cmpb
scas
inc
inc
mov
xchg
lret
inc
popf
xchg
dec
xor
pop
pop
mov
mov
shll
call
or
jg
testl
xchg
daa
dec
pop
insl
movsb
mov
add
fldcw
enter
stos
mov
xchg
insl
loop
mov
add
push
cmpsb
outsb
xchg
sub
pop
sti
cmp
pop
push
pop
cld
push
sub
popa
lods
pop
pop
iret
dec
jne
inc
mov
into
jmp
out
int3
mov
imulb
nop
pop
stc
rcr
adc
gs
repnz
lods
cmp
jae
icebp
mov
jo
rol
jge
incb
inc
sub
xchg
ds
sahf
pop
movsb
popf
or
cmp
add
inc
mov
es
jae
xchg
out
push
sub
push
xchg
lret
xchg
bound
mov
ljmp
out
mov
fisubrs
jge
xor
mov
sub
repnz
int
mov
mov
pop
inc
xchg
xchg
das
mov
inc
jnp
sbb
add
loope
and
push
pop
mov
js
outsl
xchg
mov
sarl
mov
cmp
mov
in
or
mov
and
lods
cld
sbb
mov
lock
and
jbe
mov
mov
test
mov
test
mov
das
sub
outsl
cmp
dec
shl
sub
fwait
and
dec
das
sub
div
xchg
test
lcall
shrl
push
out
mov
mov
or
ret
push
leave
add
pop
iret
xlat
cltd
in
arpl
arpl
push
push
notb
push
xchg
jno
xor
xchg
out
inc
adc
test
xchg
loop
add
in
fwait
pusha
scas
sbb
pop
rclb
mov
or
push
pop
jp
mov
push
scas
and
ret
fisttpll
inc
lock
mov
push
push
fiadds
sub
into
xor
lret
adc
rorb
pop
pop
je
mov
shlb
mov
inc
sbbb
mov
or
scas
or
mov
mov
jnp
xchg
sub
lret
mov
jge
rcl
rclb
sub
call
insb
clc
aas
sbb
sub
and
sbb
jge
cmp
sub
push
outsb
imul
mov
cs
xchg
inc
xchg
fmul
iret
movsl
enter
daa
hlt
and
ret
jecxz
mov
pop
rolb
cld
add
dec
rcl
pop
and
add
xor
cwtl
adc
es
pusha
jmp
lock
ror
push
mov
inc
lods
mov
ret
and
test
pop
mov
dec
inc
in
xor
pushf
push
aam
adc
imul
inc
mov
mov
mov
pop
fldt
lods
fsubl
gs
imul
subb
cmp
xor
cli
cmpsb
mov
outsb
cmc
sub
mov
push
out
jmp
test
daa
movsl
sbb
shrb
pop
das
aad
jns
jns
push
arpl
and
sub
mov
cmp
clc
push
push
inc
jle
sti
dec
xor
lcall
sbbl
cmp
loop
inc
inc
xchg
mov
in
scas
inc
add
xor
pop
jmp
push
subl
and
cli
push
arpl
setle
movsl
outsl
adc
adc
outsl
cltd
bound
shlb
mov
daa
or
add
cmp
add
shr
js
loope
and
cmp
test
ret
mov
pop
fdiv
push
int
sub
and
ja
and
fsts
leave
repnz
in
mov
outsb
loope
stos
into
adcl
inc
in
addb
jmp
inc
or
sbb
mov
sbb
outsb
mov
sbb
in
add
cld
cmp
pop
aas
mov
inc
push
xor
popf
js
mov
and
inc
inc
fldl
lcall
arpl
jecxz
hlt
sbb
mov
sub
inc
iret
jae
test
inc
rcll
mov
push
lds
cmp
lahf
lret
fsub
lock
div
adc
sub
push
cwtl
mov
adc
shrb
inc
dec
push
xchg
mov
into
sbb
insl
out
addr16
mov
dec
pop
push
or
shlb
out
and
out
sub
scas
dec
pop
nop
xor
jbe
or
inc
gs
sbbb
test
lahf
shrb
inc
sbb
or
pushf
lock
xor
pop
or
jl
gs
mov
scas
push
imul
and
cmc
push
cmpb
xchg
test
mov
mov
mov
je
sub
inc
ja
cli
arpl
ds
mov
shlb
xchg
inc
in
test
jmp
adc
cmp
std
xor
sub
inc
pop
int
lock
mov
js,pt
jne
imul
add
add
sbb
cmp
stc
in
movsl
mov
pushf
or
fsubrp
call
ret
testl
mov
test
insb
arpl
dec
jnp
sub
cmpsl
inc
jo
fbstp
jecxz
cmp
inc
add
push
shl
mov
adc
inc
xchg
add
xor
adc
pop
psrld
xchg
cmp
insb
cmpsl
push
lds
xchg
push
pop
cs
jns
xchg
movb
movsl
push
jnp
mov
xchg
insl
into
shll
mov
and
out
es
cmpsl
jb
add
jge
rcl
fistpll
cmp
pop
rol
jnp
sbb
js
mov
xchg
xchg
enter
in
mov
jns
push
pop
or
adc
ss
popa
mov
jb
adc
sbb
addr16
les
push
aaa
xlat
sbb
sub
out
lods
jne
js
adc
mov
aaa
sarl
jg
mov
jp
or
repz
or
add
movsb
shrl
std
ja
rolb
test
rcrl
xlat
or
xor
mov
call
test
mov
popa
pop
sbb
mov
mov
inc
push
jnp
or
pushf
int
xchg
or
cmpsb
les
mov
icebp
cmp
lcall
push
movsb
mov
repnz
push
xor
roll
add
insb
xchg
iret
adc
mov
inc
imul
les
sbb
cmp
mov
sbb
arpl
sbb
inc
add
mov
xchg
and
push
jl
inc
or
jl
test
in
popa
stos
add
jge
sbb
and
cmp
mov
int
dec
in
push
arpl
mov
cwtl
aaa
push
push
jl
xchg
and
cmp
jge
lahf
sub
lock
sub
cmpsl
mov
push
dec
movsb
cwtl
xchg
out
mov
pop
mov
or
nop
adc
add
shlb
sbb
inc
xor
loope
movsl
vpmovzxwd
mov
cli
add
inc
cwtl
mov
dec
mov
ret
sub
inc
ja
aas
out
sub
es
imul
pop
push
push
mov
sbb
out
or
push
imul
andb
insl
mov
mov
popa
notl
das
repnz
xchg
iret
nop
xchg
loop
iret
xor
xor
outsb
outsb
push
ja
add
negl
aaa
xchg
adc
adc
roll
push
ss
cmpsb
add
inc
jb
inc
mov
dec
idivl
stc
repnz
aas
into
sbbl
stos
into
mov
cli
jno
mov
stc
repnz
imul
loop
pop
sbb
push
inc
xchg
es
cmp
leave
push
jns
add
je
sbb
outsb
shl
sbb
xchg
ljmp
sbb
push
sub
arpl
mov
fidivl
mov
adc
loop
jmp
add
jmp
std
out
cmpsl
xor
stos
push
cmc
cmpsb
push
and
push
inc
out
sub
fdivr
dec
pop
push
jae
dec
mov
pusha
arpl
mov
jp
shll
jl
mov
ss
pop
mov
jge
fcompl
rcll
mov
push
fbstp
cmc
sbb
sbbb
jg
leave
movsb
cmp
jb
pop
dec
and
pop
imul
test
loopne
sub
jp
aas
jge
push
sbb
jo
and
pop
repz
idivb
cmp
sub
call
repz
lret
mov
leave
cmp
inc
and
xchg
xchg
cmp
out
into
cmpsb
or
mov
or
sbb
mov
test
daa
addl
push
fwait
lret
cmpb
cmc
pop
jmp
cs
pop
mov
cs
cmpsb
insb
jle
mov
mov
cmp
xor
cmp
jl
dec
sub
icebp
jno
jl
test
pop
and
jle
mov
or
ds
xor
add
dec
add
daa
adcb
sub
mov
sub
out
popa
int3
gs
test
and
fcmove
loop
sbb
cld
sub
xchg
cmpsl
xchg
test
adc
cmp
ret
xchg
out
dec
cmp
push
or
popf
cmpsb
sbb
movsl
sub
inc
xchg
xor
popa
jne
imul
cwtl
sbb
cld
lods
fldl
inc
mov
add
lods
and
pop
rclb
xor
and
cmp
or
sbb
inc
sbb
out
push
orb
and
pop
mov
push
push
ret
sub
das
inc
jbe
fwait
xchg
imul
ds
mov
pop
insl
jb,pn
or
sbb
sub
mov
daa
cli
sbb
lock
sbb
add
daa
lods
or
push
mov
mov
mov
mov
daa
jb
pop
shrb
xchg
push
pop
fildl
cmp
out
loopne
mov
repz
js
divl
sub
cmp
daa
orl
jecxz
mov
sub
shrb
cs
push
mov
jmp
mov
and
sti
call
idiv
mov
rep
jecxz
clc
in
cld
or
cmp
or
mov
popf
imul
js
mov
jg
add
cmp
inc
popa
mov
stos
mov
dec
scas
pop
inc
and
mov
cmp
shl
mov
mov
lret
fucomi
add
jp
mov
test
mov
hlt
fildll
adc
imul
shlb
shrb
push
outsl
sbb
sbb
cld
rcrl
jbe
das
push
push
inc
int3
clc
mov
ret
mov
shrb
pop
pop
jne,pn
js
nop
adc
jne
es
cmp
sub
dec
cwtl
push
orl
adc
in
pop
mov
mov
gs
sbb
mov
cmpl
jbe
aas
leave
lret
gs
shrb
dec
sub
shlb
dec
sub
xor
ficoml
insl
pop
and
cli
sub
aaa
sbb
sbb
jl
in
lods
pop
xor
js
ja
cmp
sub
enter
fisubrl
xlat
mov
mov
ds
and
add
addb
lcall
pusha
call
mov
cmc
ds
jl
add
dec
shll
into
and
push
fmuls
xchg
add
loop
roll
sbb
je
push
scas
leave
dec
lds
fs
mov
out
fistps
mov
push
pushf
add
fdivr
pushf
loope
test
rep
inc
xchg
fwait
mov
adc
popf
jmp
dec
in
sub
adc
pop
mov
mov
fnstcw
sub
fcompl
cmp
xchg
sub
mov
shrl
int
jp
cmp
sub
push
push
int
fwait
add
rcrl
jne
jbe
imul
mov
lods
hlt
jns
sub
rolb
outsl
pop
ss
push
xor
sub
push
xor
push
daa
cwtl
in
roll
and
xor
xchg
std
lea
sarb
sbb
out
cmp
in
arpl
xchg
push
lea
xchg
sub
or
in
jb
jo
add
popa
or
jbe
pop
sahf
push
sbb
cs
and
mov
jo
ret
imul
sarl
xchg
rcll
cli
adc
fiadds
in
push
icebp
adc
dec
xchg
arpl
mov
in
cmp
sbb
test
enter
mov
roll
rorl
das
lahf
in
mov
sub
cld
pop
and
mov
mov
mov
xchg
jmp
pusha
jl
sarl
shlb
mov
popa
nop
xchg
out
inc
sub
or
roll
les
xor
jp
sbb
jecxz
dec
dec
jmp
out
sahf
bound
inc
mov
scas
push
fcoms
test
lahf
mov
cld
scas
lret
sarl
pop
cmp
mov
mov
xchg
inc
sub
pop
push
add
gs
push
pop
mov
ficompl
daa
loopne
cltd
dec
es
setnp
dec
sahf
inc
push
push
cmpsb
les
cmpl
jecxz
mov
arpl
and
es
cmp
out
dec
aad
aam
es
loop
mov
or
scas
mov
fdiv
lods
mov
inc
lods
sub
xor
iret
and
jmp
xchg
scas
adc
daa
jmp
repnz
out
pop
in
cli
dec
mov
std
jmp
mov
ss
mov
mov
iret
lods
lcall
cmpsb
inc
add
mov
ds
js
mov
cmpsl
rcrl
push
repnz
xchg
ljmp
out
mov
subb
cwtl
sub
mov
mov
mov
dec
loopne
dec
xor
fists
cmpb
mov
add
pop
add
mov
aas
inc
int
lret
in
cltd
pusha
jnp
push
xor
mov
lahf
mov
loopne
jae
and
lea
fsubr
nop
cmp
mov
outsb
loopne
sub
fcomps
xor
shl
lds
icebp
inc
sbb
sti
add
add
xor
xchg
das
fstpl
or
jp
sbbl
rol
or
clc
mov
xchg
mov
xchg
flds
or
js
mov
lods
mov
out
decb
test
in
out
sbb
loop
ss
test
mov
unpcklps
jecxz
jnp
inc
add
or
movsb
imul
ret
cmpsb
ds
sub
jo
in
xchg
inc
out
jns
or
fwait
shll
pushf
sbb
iret
sti
pop
fcmovbe
or
jle
ljmp
test
iret
mov
in
mov
inc
and
and
or
dec
push
push
cmpsl
test
loope
popa
dec
sbb
mov
inc
mov
adc
je
in
addr16
jo
cltd
cmp
pop
bt
inc
adc
js
out
sbb
mov
push
push
lds
push
pop
adc
mov
push
dec
icebp
xor
rclb
push
lahf
jb
negb
sarl
test
xor
mov
jae
mov
lock
fdivrs
push
mov
add
ljmp
stos
inc
test
pushf
addl
popa
shrb
out
mov
clc
addr16
jbe
jp
cmpsl
pop
dec
mov
int
fld
cwtl
stc
mov
roll
shl
and
or
lcall
inc
jo
or
pop
inc
sbb
insb
out
jmp
int3
aam
out
out
and
cmpsb
das
fisubl
push
arpl
push
ret
daa
into
xor
cmp
cmp
sub
cmp
out
jns
outsl
xchg
aam
mov
fidivl
adc
call
jb
mov
mov
mov
mov
dec
pusha
scas
xor
sbb
add
jecxz
mov
pop
add
lods
cmp
sub
jns
sub
push
jp
divl
sti
push
nop
mov
sub
dec
jae
fsubp
gs
adc
push
push
push
mov
icebp
popf
pusha
pop
jmp
fidivrs
cwtl
loope
in
push
dec
jg
sbb
push
jbe
cmpsl
xchg
pushf
nop
je
mov
cwtl
inc
rorb
sbb
lret
clc
mov
sub
js
inc
iret
icebp
test
dec
xchg
adc
mov
cmp
call
mov
adc
iret
imul
test
dec
mov
addr16
pop
xor
hlt
mov
push
xchg
or
test
movsb
jecxz
aad
call
sub
mov
jbe
adc
jecxz
leave
shlb
mov
adc
mov
jl
jbe
pop
lahf
adc
test
loope
push
or
mov
shrl
or
sub
in
cmp
out
aam
data16
pop
mov
or
and
nop
hlt
sub
mov
lcall
inc
mov
mov
int
lret
push
and
dec
jg
pusha
pop
ret
cmc
cs
mov
mov
sti
fstpt
inc
add
mov
stos
lret
shll
stos
dec
iret
push
sub
aas
and
fisttps
into
xor
inc
cltd
rclb
xor
jmp
xchg
icebp
sbb
or
xor
sbb
sbb
mov
out
jae
xchg
ja
sbb
mov
jns
adcl
inc
mov
lret
fdivrl
sahf
mov
inc
mov
cmp
outsl
push
mov
push
ret
je
fcoml
sbbb
xchg
xchg
out
mov
cwtl
je
test
adc
jae
sbb
push
xchg
jg
inc
in
aad
adc
mov
jns
sbb
sub
ja
repnz
fadd
jno
int
add
dec
mov
mov
jp
outsl
push
in
and
mov
inc
into
jge
adc
pushf
cmp
add
mov
rcrl
push
dec
pop
mov
or
and
stc
fistpll
cmp
push
and
cmc
mov
jns
pushf
push
and
pop
dec
jnp
cwtl
jecxz
cmp
or
sbb
js
jecxz
xchg
and
and
int3
frstpm(287
sub
sbb
push
jo
shlb
pop
push
or
jl
add
cmpsb
out
fisttpll
fdivrs
std
sub
gs
daa
in
jne
cmp
loope
cmpsl
pop
popf
adc
add
inc
ret
jnp
or
fdivl
mov
sub
mov
roll
adc
add
int
add
pop
sub
pushf
pop
or
es
cwtl
jecxz
inc
cmp
cli
inc
and
mov
addl
shll
imul
sar
out
lock
inc
js
loop
dec
stc
xor
repnz
mov
sbb
out
push
inc
aad
mov
dec
mov
insb
test
pop
mov
pop
fbld
aaa
insl
test
lret
jno
nop
repz
adc
aas
inc
mov
jb
mov
jbe
mov
addl
ss
leave
and
cs
and
ret
std
sub
movsb
fwait
incl
mov
lahf
xchg
jb
loopne
xor
add
sbb
sbb
sub
mov
repz
push
ret
rcll
test
jmp
mov
sbb
sub
rcrl
std
xchg
loopne
mov
push
cld
cli
and
rorl
dec
push
testb
mov
and
xchg
push
cmpsb
mov
and
lret
push
aaa
outsl
data16
or
xchg
cs
inc
neg
cmp
movsb
inc
inc
or
mov
or
les
jbe
cli
lcall
pop
mov
pop
subl
in
add
test
enter
push
mov
addr16
fisttps
and
lret
jns
dec
mov
cmpsl
and
aaa
xchg
addr16
insb
repz
cmp
outsl
outsb
adc
stos
lods
fidivl
dec
mov
hlt
dec
mov
pop
sub
cltd
cmp
std
dec
or
andl
mov
jae
daa
sti
mov
push
jno
dec
inc
push
add
dec
add
push
out
cmp
stc
decb
int3
xchg
pop
data16
mov
add
test
push
push
or
pmuludq
push
pop
rcrl
les
mov
push
stos
adc
inc
dec
mov
inc
push
add
mov
or
adc
es
add
rol
cwtl
ret
imul
mov
pop
mov
dec
pop
and
pop
add
subl
sbb
repnz
dec
mov
pop
loopne
int3
mov
iret
nop
scas
mov
adc
pop
das
fisubl
mov
push
jecxz
aaa
inc
dec
pop
scas
xchg
xchg
jnp
pop
in
sub
pop
inc
into
push
stc
inc
fs
mov
inc
jbe
imul
ss
push
fcomps
rcll
scas
into
push
hlt
cmpl
jb
cmp
hlt
sbb
sub
lods
lods
inc
pop
les
scas
inc
das
mov
jecxz
mov
lods
dec
roll
push
sub
push
jge
cmpsl
mov
scas
iret
lods
fcmovbe
fstpl
lret
fwait
adc
add
nop
fsubr
sub
cmp
fldenv
repnz
daa
dec
bound
iret
out
outsl
popa
inc
pop
jle
in
inc
shrb
mull
and
or
jo
rorb
jno
aad
or
sub
fisttps
or
mov
jbe
mov
je
loopne
test
test
dec
imul
movsl
xchg
out
loopne
jne
xor
out
shll
test
adc
jae
jo
sub
mov
xchg
jae
adc
dec
iret
jnp
push
xchg
fcoms
adc
iret
push
fsubl
jne
stc
call
mov
dec
mov
fs
jb
out
or
cmpsb
cmp
mov
std
out
jbe
xchg
mov
outsb
pop
cmp
adc
test
and
repz
xor
subb
jmp
lods
lock
popl
push
sub
inc
test
subb
out
rolb
pop
cmp
fcompl
ss
mov
push
in
mov
jmp
ret
adc
dec
pop
cltd
inc
cld
aam
add
inc
cmc
daa
sub
iret
in
adc
in
cmovle
xor
sti
mov
xchg
cli
xor
insl
sub
adc
push
cli
stos
xchg
mov
lret
lods
mov
aaa
mov
inc
addr16
inc
imul
push
sbb
dec
int
jae
inc
iret
jb
add
xchg
nop
add
lods
mov
test
iret
std
js
lock
sbb
in
xchg
aad
lea
jnp
and
xchg
adc
std
lahf
cli
fimull
xchg
ret
pop
sar
stos
repnz
inc
xor
stc
and
popa
or
fcoml
stos
aas
insl
inc
pop
inc
lods
cmp
dec
mov
mov
stc
aam
pop
pop
jbe
pop
sysenter
mov
inc
das
aaa
popf
dec
sbb
ret
outsb
mov
stos
xchg
and
pop
and
sub
xchg
les
xchg
aam
dec
roll
jbe
nop
lret
stos
fcoml
jb
test
sub
push
xchg
xor
fstps
xor
hlt
pop
cmp
sbb
pop
push
pop
inc
lret
enter
xchg
jecxz
in
mov
sbb
vpmadcswd
mov
mov
pop
sbb
pop
push
insb
xor
jg
mov
adc
test
lods
mov
dec
add
jne
stos
pop
jmp
leave
and
sti
leave
inc
jns
adc
enter
add
in
jno
test
xor
cltd
or
inc
imul
fs
arpl
icebp
rclb
and
mov
js
bound
jmp
sahf
mov
add
nop
outsl
ja
cmpsl
mov
imul
and
lcall
unpcklps
fsubs
adc
lea
fstpt
inc
push
sbb
lcall
lcall
testl
mov
inc
fucomp
xor
cmp
or
add
lock
jo
movsb
std
add
orb
cmp
jl
add
mov
insb
lret
ror
sbb
pop
xor
js
stos
mov
mov
mov
out
loope
call
mov
add
pop
mov
cmp
or
mov
mov
hlt
data16
dec
inc
das
lret
jle
xor
nop
imul
js
hlt
jle
movsb
out
jb
lods
sub
push
and
fcompl
das
fstpt
and
xor
jno
or
lret
clc
sarb
add
daa
mov
fnstcw
push
cmp
push
rclb
mov
mov
or
fisubrl
and
xchg
push
jns
sahf
adc
lods
loop
push
cmp
mov
stc
rcrb
incb
aad
fldenv
shl
scas
in
sbb
xchg
push
nop
xchg
add
and
pusha
add
push
cmpsb
pop
mov
notl
adc
cmc
in
int3
cwtl
lods
dec
lea
ror
adc
mov
in
ja
mov
push
jmp
ret
imul
xor
inc
pop
push
jo
xchg
pop
jmp
dec
movsb
jb
mov
pop
int
rol
repz
int
adc
pop
fsubrl
pusha
cmpsb
pop
orb
mov
aas
mov
addb
mov
jnp
add
xchg
xor
pop
pop
add
sbb
cmp
imull
icebp
sub
loopne
cwtl
fisttps
mov
pop
mov
cwtl
mov
jge
jge
test
push
lods
sbb
mov
xorb
jmp
rcrb
sbb
test
rolb
mov
idivb
jo
fimull
mov
jge
push
xchg
orb
pop
out
iret
adc
nop
mov
dec
xchg
jae
sub
mov
std
test
sti
scas
sbb
mov
cmpsb
lcall
fidivrs
in
loopne
mov
jg
fadds
gs
mov
fmulp
pop
jbe
inc
push
or
cltd
les
dec
bound
ret
add
xchg
ret
popf
xor
inc
cli
add
mov
inc
mov
mov
mov
ret
dec
jno
movsl
pop
ss
xchg
js
inc
cs
sbb
cli
xchg
adc
int3
xchg
jne
xor
dec
int3
stc
dec
insl
mov
dec
mov
mov
ss
xchg
outsb
jle
lret
shll
fidivrl
xchg
sbbl
int
xchg
ret
in
mov
fwait
jae
mov
mov
frstor
sub
fsubrl
js
xchg
push
daa
lds
fstpt
and
pop
roll
mov
pop
pop
inc
addr16
ja
add
add
enter
je
or
adcb
repnz
sbb
rcll
out
int
mov
cli
cld
mov
sub
inc
scas
mov
xchg
adc
mov
xchg
inc
and
cli
mov
fwait
iret
mov
leave
fbld
and
cli
push
jno
xchg
sub
mov
add
lahf
and
dec
leave
cmc
popa
iret
sbb
jg
shrb
add
andb
mov
xor
jg
imull
adc
mov
pop
adc
jmp
ja
hlt
shrb
cmc
xor
leave
jp
xor
dec
dec
push
ficomps
push
push
push
xchg
pushf
pop
sahf
xchg
inc
cmpsl
xor
add
cmpsb
lahf
imul
xchg
mov
daa
psubsb
sub
and
and
mov
cmpsb
int
imul
lret
addb
jnp
roll
setae
inc
push
cwtl
pop
sahf
cltd
pop
movl
nop
pop
inc
js
gs
popl
jge
sub
repz
call
mov
push
in
add
mov
out
daa
push
movsb
sbb
lret
and
lret
ja
mov
mov
out
dec
cld
aaa
leave
jmp
and
mov
in
adc
push
sbb
enter
jbe
xchg
add
popf
jmp
jp
mov
push
xchg
stos
and
cmp
xor
fwait
divl
mov
mov
shll
lock
mov
jecxz
mov
fdivrl
inc
loope
sub
outsb
mov
mov
popl
sbb
sarb
jmp
rorb
loope
inc
pop
cmp
ss
push
sti
arpl
icebp
mov
sbb
pop
jae
add
lret
call
adc
push
or
mov
dec
aas
es
test
ja
lahf
imul
test
xchg
inc
fidivl
adc
inc
clc
push
nop
mov
in
out
jbe
out
cmp
lods
mov
dec
test
sarl
stc
loopne
nop
xchg
mov
push
xchg
js
inc
mov
in
push
sub
in
pushw
aas
iret
xchg
add
dec
test
sub
and
jo
xchg
jns
lea
mov
cmp
mov
xchg
mov
aam
add
jge
jbe
scas
pop
aaa
cmp
lahf
in
dec
call
dec
pop
or
nop
stc
lret
cmpsl
pop
roll
lcall
fcoms
fisubs
sub
insl
jge
xor
sar
ss
insb
inc
and
out
mov
push
xor
push
xchg
adcb
dec
sub
cmp
iret
gs
stos
jecxz
jno
cs
call
clc
push
jp
scas
test
idivb
push
jmp
rcrl
rcr
jmp
lock
adc
mov
mov
sbb
icebp
rep
cs
push
inc
adc
out
push
xchg
out
lret
sub
and
bound
jmp
js
dec
test
dec
push
loopne
scas
iret
call
jo
mov
cmp
and
pop
dec
adc
mov
mov
loope
popa
js
cld
aas
fstpt
call
fsubrl
out
movsb
mov
jge
bound
lock
inc
push
fiadds
subb
or
sbb
cmp
mov
mull
inc
pop
lret
int
cmp
mov
aam
xor
clc
dec
xchg
iret
int
sahf
ret
mov
clc
fsubp
pop
xlat
dec
jbe
or
fimull
loop
lea
jmp
sbb
iret
cwtl
test
xor
and
xchg
stos
mov
imul
and
data16
jbe
xchg
fs
mov
ret
sbb
cmp
das
fisttpll
sahf
xor
lods
aaa
jbe
mov
sti
loopne
sub
arpl
in
ret
pop
fmulp
or
pop
pop
push
les
and
sub
cmp
ds
xchg
push
adc
cmpsb
lea
ja
subl
inc
enter
pop
enter
mov
inc
in
mov
lds
outsb
out
sub
push
sbb
add
sbb
sub
pop
popa
test
pushf
das
jle
sahf
add
mov
fmull
iret
lcall
cli
jne
jge
fnstenv
jnp
push
push
ret
push
jg
popf
insb
push
add
or
and
xchg
imul
scas
add
aam
in
mov
pop
push
inc
into
mov
mov
ljmp
cmp
jp
mov
out
mov
out
cmpsb
fstps
fdivs
sub
idiv
add
dec
aas
or
adc
xchg
dec
mov
push
data16
and
xor
outsl
sti
into
mov
cmp
xor
add
stos
fidivs
bswap
nop
pop
cmp
xchg
ret
inc
and
fimuls
sub
cmp
mov
mov
cli
mov
dec
inc
mov
ja
test
out
loopne
sbb
out
enter
enter
loopne
int3
dec
push
jecxz
out
shlb
add
mov
mov
jno
fwait
test
das
lcall
dec
arpl
ja
lahf
push
shlb
push
add
cmp
fimuls
jns
int
cmp
add
xorb
imul
pop
aad
mov
scas
and
sti
ret
les
aad
pop
mov
dec
out
xchg
or
bound
loope
cmp
push
mov
jno
xor
out
sub
sbb
or
in
fs
xchg
xchg
dec
loop
idivb
les
fstpt
pop
cld
adc
fmuls
in
sub
push
inc
mov
lds
arpl
xchg
mov
jmp
xor
push
xor
sbb
sub
pop
jp
and
shlb
sub
add
pop
adc
mov
or
out
jp
iret
xor
cmp
aaa
or
jnp
stos
ss
fbld
ss
mov
xor
insl
std
and
mov
imul
dec
sub
lods
es
sti
out
cmpsb
mov
cltd
inc
out
fisubs
fisttps
push
mov
sarb
cli
mov
mov
inc
popf
xchg
xor
fiadds
add
xor
paddd
sahf
andl
loopne
data16
adc
or
push
stos
or
fcoml
jmp
push
or
push
fwait
dec
jl
stc
mov
sar
and
test
scas
into
push
ljmp
push
dec
dec
aad
and
pop
mov
dec
ds
or
ret
mov
rcrl
sti
outsb
and
pop
dec
aad
dec
sbb
int
xchg
arpl
sti
adc
pop
pop
rcl
push
xchg
imul
add
cmpsl
and
jnp
inc
lahf
aad
pop
cmc
mov
pop
adc
inc
adcb
rorl
lahf
lods
jge
jecxz
test
mov
icebp
sub
fisubl
je
add
jp
shll
jl
jp
loopne
aas
jle
add
dec
nop
rcr
mov
sahf
adc
inc
cmp
pop
adc
push
int3
xor
sahf
or
popl
adc
cltd
mov
scas
je
out
adc
inc
jecxz
les
ds
out
mov
push
mov
addl
shl
xchg
mov
ret
adc
clc
push
push
pushf
dec
outsb
rep
mov
int
test
fdivs
popf
aad
cmpsl
lret
xchg
popa
arpl
xchg
mov
xchg
data16
sub
icebp
movsl
xchg
iret
xchg
stos
mov
fwait
mov
out
shll
pop
add
push
int3
push
or
xorl
in
into
mov
inc
push
inc
push
xbegin
cmp
aas
scas
xchg
jp
clc
frstor
push
pop
inc
lods
dec
dec
and
ror
push
cmp
xchg
sub
hlt
dec
stos
sahf
lock
clc
mov
xchg
lcall
dec
mov
pop
mov
sbb
aas
sbb
jnp
push
out
rcr
arpl
xchg
sysenter
adc
aaa
inc
fwait
xadd
test
fidivl
pushf
outsl
adc
outsl
shlb
inc
ljmp
jge
cmp
push
std
jmp
jmp
int
xchg
pop
pcmpeqw
mov
ss
fcoms
or
adc
sahf
xor
xchg
or
xchg
push
xchg
movl
xor
or
adcb
clc
jae
inc
call
cmp
xchg
aad
push
jl
push
ret
mov
outsb
pop
jae
add
sub
movsl
and
and
inc
insb
into
add
cmp
xchg
xlat
das
inc
push
sbb
fnstsw
fsubl
xlat
jge
xchg
popf
mov
pop
push
ja
xor
jae
fildll
test
test
insl
int3
jmp
repnz
cmp
or
mov
pop
stc
das
pop
xchg
mov
cmp
cltd
out
or
mov
test
std
repnz
mov
imul
mov
sub
mov
fwait
add
in
aas
or
movsl
xchg
mov
mov
fildll
mov
push
mov
xchg
ja
pop
push
mov
push
out
sbb
sahf
jne
bound
xchg
movsb
xchg
jg
dec
pop
sbb
cmp
xchg
push
test
insl
fucom
inc
sub
pop
push
pop
sub
sbb
and
lock
mov
pop
sub
loopne
cmp
dec
enter
and
loope
or
or
cmp
cwtl
mov
inc
enter
jnp
repnz
sub
jnp
sahf
in
cmpsl
loop
and
push
cld
xchg
and
sub
jne
shr
icebp
sub
pop
mov
sbb
mov
es
push
sub
ret
loop
imul
cs
daa
or
lock
stos
out
cmpsb
and
bswap
xor
das
mov
adc
icebp
inc
and
pop
push
mov
and
pop
fsubl
aad
and
imul
pushf
cli
push
add
adc
int3
lock
cmp
popf
scas
dec
sbb
xchg
sub
scas
push
test
imul
movsl
mov
in
pop
cmpl
sbb
inc
aad
inc
insl
and
aam
add
and
jecxz
in
loop
scas
cmp
ds
pop
out
addr16
repz
mov
stos
xor
int3
xchg
ficoms
push
push
inc
stos
sub
inc
pop
xchg
lods
cmpsb
aam
imul
and
ret
dec
jae
pop
gs
and
mov
jmp
lahf
cltd
fcom
lahf
adc
das
xchg
in
dec
xor
leave
lahf
mov
clc
fldcw
push
in
sahf
xchg
jg
inc
je
stos
cwtl
mov
imull
adc
xor
dec
sbb
inc
inc
xlat
fistpl
sbb
in
xchg
mov
das
mov
push
iret
mov
mov
cmp
mov
jb
sub
add
mov
pusha
stos
mov
outsb
inc
pusha
and
nop
je
aaa
ret
pusha
fucomp
lret
fists
pop
or
pop
insl
inc
mov
nop
xchg
sbb
pop
pop
jnp
sub
jb
cmp
cmpsl
pop
sub
jno
pop
ret
jg
je,pt
div
loop
mov
jecxz
sbb
xchg
fdivrp
outsl
lret
sar
push
aad
pop
scas
mov
lods
cmp
add
or
jp
addb
gs
cmp
sbb
push
in
cmc
adc
dec
adc
out
jmp
mov
lds
fwait
aas
repnz
jae
inc
dec
sbb
cmp
add
cmp
dec
inc
xor
out
cltd
pop
or
jne
aam
sbbl
int
fists
add
xchg
std
and
das
sub
cli
cmp
ss
ret
lcall
sbb
sbb
fstl
into
jg
fwait
mov
psrlw
insl
pop
loopne
rclb
xchg
cli
xor
int3
lods
les
cli
dec
ds
rolb
mov
std
pushf
psubb
and
mov
fisubrl
mov
xor
stc
imul
dec
lcall
adc
in
inc
pop
fidivrl
xlat
call
push
and
pop
fs
pop
scas
mov
dec
loope
cmpsl
dec
mov
in
jl
jne
shll
subl
insl
lods
xchg
es
es
pop
mov
data16
jmp
cmp
xlat
push
adc
daa
mov
lock
nop
mov
int3
jo
sub
aaa
cltd
scas
mov
int3
icebp
pop
int
inc
mov
sbb
push
inc
cmp
sub
call
cmpsb
out
cmp
mov
int
loopne
mov
jae
push
sbb
sbb
pop
ss
mov
jnp
xchg
add
cmpsb
xchg
sub
aad
ds
and
mov
dec
mov
jne
pop
jle
inc
adc
ja
cmp
mov
inc
hlt
scas
inc
cmc
ret
dec
into
mov
dec
nop
mov
loopne
mov
add
mov
sbb
cmp
and
sbb
mov
dec
shl
add
inc
cltd
adc
cwtl
inc
push
imul
mov
aad
lods
xchg
test
ds
mov
cmp
pushf
sahf
lock
lods
jnp
dec
push
jne
pop
jbe
in
xor
sub
pop
mov
inc
filds
sahf
add
out
dec
cmp
ljmp
jns
mov
stos
pop
jecxz
shr
jnp
cmp
mov
lea
je,pn
cmpsb
xor
adc
iret
out
cmp
mov
sbb
daa
dec
pop
adc
jg
sbb
loopne
imul
cmc
inc
mov
dec
mov
mov
xchg
cmpsl
mov
cltd
push
shl
lcall
and
test
inc
or
sbb
inc
insl
scas
dec
stos
lret
in
cmpsb
mov
pop
movsl
incb
sub
cmp
cltd
mov
loopne
jae
bound
loopne
ds
push
mov
in
outsl
push
fwait
fidivrs
lret
add
jg
jae
xor
lcall
mov
ret
popf
mov
addb
lahf
pop
jmp
adc
ret
xor
test
mov
repz
pop
cwtl
add
mov
fdivrs
push
xchg
mov
je
sub
fsubs
mov
or
stos
es
jle
leave
jbe
inc
xchg
arpl
mov
mov
sbb
jge
pop
cmp
mov
mov
pop
push
clc
mov
push
enter
rcrb
mov
inc
push
hlt
cmc
jle
mov
jmp
fs
in
gs
dec
sbb
mov
cmp
inc
and
daa
adc
push
jae
nop
pusha
in
paddusw
dec
jge
js
popf
in
dec
shl
jmp
pop
dec
out
mov
cmpb
rcrl
loope
jmp
xchg
push
lret
or
cwtl
gs
sti
jae
movsl
xor
hlt
jge
stos
in
xchg
sbb
push
mov
sub
mov
mov
mov
fmulp
xchg
or
push
subl
mov
ja
mov
cltd
ret
mov
inc
or
lahf
dec
popa
pmuludq
mov
or
les
shrl
movsb
dec
movsb
ljmp
push
or
jmp
mov
je
add
and
fisttpl
and
xor
inc
mov
and
inc
or
repz
or
test
clc
xlat
in
mov
mov
xchg
jno
enter
inc
mov
xor
push
stos
cmc
popa
int3
inc
jo
les
sub
or
popa
or
add
lcall
lcall
clc
div
xor
mov
pushf
stc
fwait
lock
cmp
push
out
movsl
jmp
insl
inc
movsb
lret
jg
ja
and
mov
lcall
aas
ret
pop
dec
and
jge
je
faddl
ljmp
sbb
jmp
popl
in
andl
jmp
test
mov
or
pop
notb
sub
inc
mov
fisttpll
mov
loop
in
leave
pop
adc
cmpsl
loop
sarb
fstps
or
lcall
out
enter
and
int3
insb
push
adc
mov
inc
addb
mov
xchg
js
dec
mov
inc
fcomps
nop
fidivs
mov
cmp
xchg
into
ret
xor
fistpll
push
std
inc
int3
dec
jmp
fisttpll
push
pop
lret
fs
outsl
add
lcall
ret
mov
jae
test
sub
movsb
jl
les
xchg
push
jne
sub
fistps
loop
nop
aaa
lea
loopne
dec
fsts
rolb
outsl
loope
jno
lahf
push
popf
mov
fmul
cmpsl
test
lahf
xchg
jbe
push
xchg
inc
outsb
jge
das
test
sbb
adcb
mov
xor
mov
jge
into
movsl
stos
or
jae
fldcw
subb
cmp
dec
push
mov
xlat
xor
addr16
fs
inc
dec
push
and
mov
sbb
stos
call
cmp
insb
and
sbb
sti
ror
push
push
push
lea
rclb
mov
fsubl
test
ljmp
and
clc
movsl
xchg
outsb
roll
sarl
or
lret
sti
sbb
out
call
xor
mov
cmp
jp
xor
test
pop
push
cwtl
pop
adc
das
cmpxchg
xchg
lods
sub
pop
adc
stc
sub
ljmp
jnp
or
test
int3
xor
out
push
lods
outsl
xchg
add
or
movsl
jne
mov
xchg
bound
fs
imul
gs
outsl
mov
icebp
jmp
movsl
leave
mov
rcr
mov
push
cmp
or
jp
jno
shll
scas
pop
pop
or
mov
fstpl
or
pushf
hlt
jg
add
movsb
lods
mov
scas
and
lods
aam
cli
inc
mov
push
push
outsl
mov
ret
jmp
jnp
mov
cld
loopne
out
es
cmc
cs
sub
xor
test
jo
jae
xorb
repz
mov
jle
and
sbb
jb
shrl
lea
iret
push
shlb
aam
mov
xor
mov
add
mov
sub
mov
mov
sub
xorb
inc
inc
pop
rcll
lcall
insb
mov
lds
fldl
pop
and
xchg
cld
mov
mov
fildll
shlb
mov
add
mov
enter
icebp
cmp
xchg
inc
cltd
xchg
add
fildll
ret
int
jp
mov
lds
lahf
stc
sti
dec
jle
sub
lret
xchg
cmpsb
mov
cwtl
adc
neg
dec
cmpsb
lahf
xchg
aam
sbb
gs
aad
roll
lret
xlat
rol
push
mov
into
ret
in
jae
inc
out
cmp
sbb
and
nop
adc
sti
jae
stos
nop
xchg
mov
cwtl
nop
cmp
std
pop
popa
mov
into
fiaddl
repz
add
clc
mov
lds
ret
rcll
icebp
or
in
notb
inc
sbb
xchg
pop
sub
imul
add
scas
add
sub
adc
idivb
sub
test
punpckhwd
stc
lea
mov
mov
and
xchg
cld
sbb
pusha
fistpll
aaa
sbb
add
out
out
dec
dec
dec
daa
xor
js
mov
mov
add
sub
and
shl
push
out
mov
outsb
or
sbb
sbb
push
add
fwait
fwait
pop
xchg
ficoms
mov
push
rol
test
idivl
mov
mov
dec
in
mov
mov
pusha
ss
shll
and
xor
and
movsl
test
xchg
dec
add
adc
cld
addr16
mov
orl
and
fmul
test
add
add
dec
sbb
pop
cmp
inc
frstor
mov
jns
inc
mov
ds
movsb
xchg
mov
xchg
rcrl
jmp
or
xchg
cmp
insl
cmp
sbbb
mov
and
mov
mov
leave
cli
ret
das
jecxz
pop
inc
pop
addb
or
mov
pushf
aad
inc
mov
out
push
cwtl
dec
lods
orb
and
mov
add
xchg
xlat
jmp
mov
scas
jbe
xor
xchg
cltd
inc
scas
push
sahf
push
mov
add
cs
bound
outsb
mov
popf
aad
mov
inc
addb
jns
pop
int3
inc
mov
cmp
or
stc
fnstcw
ja
cmp
loope
or
mov
sbb
test
shll
jge
test
mov
and
arpl
dec
mov
jg
add
jnp
dec
xchg
jl
or
pop
movsl
cli
mov
rcrl
jbe
ret
adc
inc
ret
mov
push
ficompl
lret
cmp
cs
mov
push
dec
loop
push
scas
shl
mov
dec
lds
imul
addb
das
jo
dec
jno
jle
in
popf
and
inc
jno
jae
in
ror
sahf
cltd
ja
aaa
adc
rcl
aaa
scas
and
out
cli
cmp
ja
out
js
jb
push
dec
nop
cld
aas
sbb
loope
test
jnp
in
inc
jg
jne
sbb
add
lea
mov
dec
inc
je
dec
cmp
push
inc
lea
std
sbb
or
dec
cltd
fstps
adc
pop
in
cli
lcall
je
cmp
push
lcall
into
jmp
repnz
aad
push
mov
pop
sub
jmp
insl
ja
cmp
jns
sbb
sub
push
sbb
rolb
jmp
and
add
sub
incl
pushf
cld
xor
jmp
or
pop
sbbb
aad
push
insb
or
mov
sbb
xchg
sar
fwait
loop
sbb
sub
lock
mov
out
fwait
sbb
sub
lods
push
rcll
das
out
daa
adc
xchg
jae
jmp
push
lods
mov
adc
mov
xchg
jne
lea
inc
sti
cltd
das
enter
sti
movsl
lods
shrb
data16
mov
popa
outsb
pusha
fisttpll
mov
xchg
movsl
cmp
mov
sub
inc
sub
loopne
mov
enter
dec
movsl
ljmp
iret
mov
adc
loope
jne
aam
stc
push
mov
cmp
inc
xor
pop
and
cmp
jmp
lea
cli
insb
xor
ss
dec
or
rcrb
iret
or
lahf
jb
pop
icebp
testl
and
xor
xor
in
xor
mov
cmc
mov
sbb
xchg
add
fwait
mov
jge
sub
int
sbb
dec
shrb
sub
push
arpl
cli
mov
mulb
in
mov
mov
pusha
stos
xchg
test
enter
and
jo
lret
lea
inc
mov
filds
pushf
scas
cmc
and
adc
ret
in
cmp
dec
and
pop
xchg
in
dec
out
leave
mov
xorl
testl
repz
movsl
sbb
enter
aad
loop
rcrb
adc
xchg
loope
int
daa
mov
lahf
in
mov
dec
int3
aam
cli
sub
call
add
push
in
daa
and
call
jne
or
dec
enter
push
sbb
pop
pop
imul
aad
xor
dec
push
inc
pop
mov
sub
inc
inc
loope
jecxz
dec
cwtd
arpl
push
dec
push
sub
shlb
sub
xor
jle
mov
ljmp
pop
push
mov
pop
jne
or
pop
fldt
xorl
or
xor
or
push
sbb
aas
add
cwtl
pop
mov
test
sub
stos
lret
js
xchg
mov
pop
push
sbb
movsl
les
div
pop
sbb
stc
sub
incl
adc
jg
call
mov
clc
outsb
mov
mov
jp
mov
movsl
prefetch
or
adc
or
push
pop
or
aaa
fisubrl
das
mov
pop
cwtl
xchg
addr16
xor
shrl
mov
jp
push
xor
arpl
cmpsb
or
jae
insb
xor
mov
in
xor
addr16
sub
jns
lds
mov
int3
xor
cmpsl
test
mov
xor
push
mov
pusha
lods
mov
lret
jo
cmc
push
rclb
aad
ss
mov
xor
jae
mov
test
aam
in
arpl
dec
mov
mov
lret
incl
lods
mov
add
lahf
push
pop
push
mov
stos
cmpb
aaa
fs
mov
lahf
push
ret
jmp
push
mov
push
clc
lahf
mov
jno
xchg
push
mov
pushf
ret
shrb
sub
mov
out
xchg
shrb
in
jb
jmp
add
gs
cmp
cmp
rorl
mov
fistpll
mov
rolb
inc
cmc
and
outsl
mov
mov
sti
pop
faddl
lds
xor
mov
push
sahf
stc
fstpl
in
enter
pop
push
insl
cmpsb
cltd
jg
jmp
pop
cmp
fisubs
adc
dec
lret
std
roll
pop
mov
test
add
adc
sub
arpl
or
lock
daa
mov
jle
xor
mov
inc
mov
jb
cmp
mov
leave
jl
adc
push
mov
cmp
fstps
or
jl
cmp
mov
adc
leave
fdivrl
jbe
enter
sarb
add
push
push
cmp
gs
push
xor
imul
push
xor
add
pop
outsb
sub
push
and
mov
cmp
es
leave
flds
stos
xor
mov
and
out
mov
dec
sbb
int
movsl
jle
jg
loop
jne
in
pop
and
stc
scas
xor
pop
push
sti
and
gs
fistpl
mov
sub
faddp
es
aaa
repnz
insb
imul
movsl
ret
or
je
sti
cmp
cmp
outsb
ja
push
fdivl
or
pop
sbb
adcl
jbe
xchg
adc
add
enter
in
pushf
mov
jle
jbe
mov
push
pop
in
les
push
loopne
push
xchg
data16
jno
and
or
cvtps2pi
adc
xorl
cld
push
lahf
fwait
pop
je
xor
fwait
push
mov
dec
ret
or
mov
mov
mov
test
push
clc
jle
movb
adcb
daa
mov
mov
mov
ja
xlat
mov
cs
pop
cmp
sbb
or
inc
scas
sbb
sub
sbb
out
mov
nop
mov
mov
adc
lds
dec
add
jecxz
pop
and
mov
cli
and
lock
dec
add
frstor
inc
sbb
mov
and
out
scas
dec
lahf
mov
dec
aaa
jo
inc
or
arpl
mov
fldenv
cmp
int
outsb
dec
out
mov
inc
imul
mov
cmc
inc
dec
add
mov
jg
ja
jno
fs
ficoms
je
sub
dec
dec
xchg
repnz
aad
add
push
call
jno
hlt
movsl
ficoms
repz
adc
xchg
push
lret
mov
or
popf
push
mov
pusha
enter
mov
mov
std
push
mov
pop
fcompl
in
sbb
insl
rcrl
lock
dec
and
jl
iret
dec
call
push
dec
fdivl
or
mov
mov
cli
repz
sbb
and
insb
loopne
scas
pop
jnp
cmp
push
movsl
inc
insb
out
push
pop
dec
data16
add
mov
rorb
lcall
inc
add
lret
aas
lock
mov
std
push
rcll
testb
mov
mov
leave
outsl
xchg
addb
cwtl
or
mov
andb
pop
xchg
pop
fs
inc
je
testb
dec
lahf
cmc
leave
xor
push
out
xorb
lea
ds
mov
mov
and
add
push
mov
outsb
add
int
mov
xchg
add
push
jmp
popf
lcall
sub
in
adc
push
push
je
push
push
mov
jl
in
mov
loop
cmp
sahf
or
mov
cmp
mov
loope
adc
movsb
xor
dec
xchg
push
int
dec
dec
test
cmp
popf
jb
lahf
jmp
sub
pop
icebp
lock
sti
lock
gs
lods
fildll
je
stc
lods
pop
repz
adcl
cmp
bound
hlt
int
jae
cmc
mov
pop
cld
jl
out
xor
sub
cmp
sbb
pop
inc
dec
int
loop
push
popa
test
loop
inc
or
mov
inc
push
aam
in
sti
add
cmpsb
enter
ds
add
fdivr
fstpt
sbb
andl
add
pop
pop
rclb
les
neg
scas
movsb
mov
xchg
adc
fsubl
add
mov
iret
or
fldl
xorl
addb
sub
cmp
mov
push
cwtl
sahf
call
mov
jo
xlat
pop
iret
adc
aaa
xchg
mov
loop
mov
cmp
sarb
pop
sarl
pop
lock
fs
mov
or
insl
inc
pop
fcompl
or
adc
inc
stc
fwait
xor
pop
test
idivl
pop
adc
in
sti
and
sbb
shl
add
sbbl
dec
cwtl
adc
jle
mov
pop
test
mov
and
xor
or
dec
adc
mov
jmp
xor
out
jae
sub
and
test
loope
sbb
ja
jmp
shlb
ja
dec
add
stos
and
dec
adc
and
cmp
popa
imul
fldenv
mov
jbe
push
aam
jb
push
add
clc
xchg
inc
das
movsb
sbb
jge
into
stos
push
cmp
mov
fdivr
out
neg
shld
scas
in
jae
faddp
mov
dec
out
bound
movb
sbb
lret
pushf
lods
imul
lods
cmpl
sbb
insb
dec
push
xlat
jbe
iret
fsubr
pop
push
lret
xchg
xor
push
cmp
and
and
mov
mov
push
shll
xchg
or
pop
sbb
inc
sub
pop
inc
dec
pushf
call
mov
pop
mov
sbb
aaa
pushf
ret
in
repz
lcall
arpl
stc
mov
inc
or
xchg
push
test
and
aas
cmp
push
imul
addr16
xor
xor
mov
sub
lret
mov
dec
add
fcoms
inc
imul
and
dec
adc
mov
idivb
pop
inc
mov
stc
popf
fwait
pusha
jne
lret
mov
jge
push
fadd
fmuls
loop
cltd
pop
push
jo
dec
rorb
cld
repz
std
dec
fstp
mov
cs
cmp
sahf
sbb
xorl
icebp
mov
pop
hlt
das
lahf
je
jle
pusha
push
add
out
test
lods
mov
push
mov
ja
jae
xor
jns
jne
or
mov
fwait
cmpsb
inc
fnstenv
xor
mov
cwtl
cmp
std
into
orl
jb
adc
xchg
lcall
xchg
pop
xor
and
push
adc
in
sahf
daa
or
push
ret
inc
call
insb
cmp
mov
xchg
ss
inc
jns
sub
mov
adc
dec
fs
cs
aam
jecxz
lret
cmp
ds
movsb
mov
movl
cs
push
rolb
adc
sti
fidivl
pop
adc
xchg
xor
movsb
inc
lds
ljmp
jbe
or
and
inc
fmuls
pop
or
leave
mov
xor
jg
xor
sbb
push
xchg
pop
sbb
xor
mov
add
sub
shrb
in
push
xor
mov
jle
add
jl
out
and
mov
push
and
inc
inc
lcall
and
xchg
rorb
inc
mov
pop
ret
scas
sub
les
cld
dec
je
stc
mov
pop
mov
int
iret
xor
mov
mov
jns
in
and
xchg
ficoms
addl
ja
mov
jg
push
adc
pushaw
cmp
ficompl
or
in
pop
aas
jns
jg
xchg
xchg
popf
jg
push
je
mov
daa
dec
mov
inc
cmp
jp
push
outsb
adc
lcall
lods
lahf
cltd
loope
xor
mov
xlat
xor
jge
dec
fmulp
cld
test
cmp
ret
and
std
and
mov
jns
jecxz
stos
adc
lret
push
add
pop
cmp
addr16
xchg
adc
imul
adc
xchg
push
stos
mov
roll
dec
lds
xor
call
out
loop
mov
dec
es
scas
out
outsl
inc
jecxz
gs
mov
mov
add
mov
lock
push
dec
faddl
jbe
mov
jge
aad
adc
fs
lods
mov
xorl
or
int3
bound
fstpl
push
fstpl
in
dec
sbb
pop
lods
lds
dec
ds
inc
dec
lods
enter
adc
dec
pop
sar
mov
fidivrs
ljmp
in
std
xor
or
or
pop
rcll
mov
es
inc
sub
cmpsb
or
add
xchg
insl
add
test
pushf
push
rcl
pop
out
push
or
pop
push
inc
jnp
adc
mov
xchg
gs
push
cmp
push
aam
and
inc
mov
and
jle
insb
xor
addr16
xor
and
mov
out
push
mov
stc
ficoms
je
lret
mov
mov
push
jl
mov
sub
cli
mov
pop
mov
lahf
jno
testb
fcoms
clc
das
inc
pop
inc
add
cmp
scas
test
mov
sub
ljmp
dec
cs
inc
outsb
leave
nop
fists
fists
or
adc
std
mov
push
inc
bnd
or
ljmp
inc
fcomip
add
mov
dec
adc
xor
pop
lcall
sub
xchg
push
subb
mov
inc
mov
loop
mov
cmp
repz
mov
or
vpaddusw
add
sub
movsb
into
jb
jecxz
arpl
leave
adc
sbb
cli
jge
add
xor
jae
mov
in
leave
adc
mov
addb
pusha
mov
or
jle
mov
cli
or
je
xchg
and
and
push
add
frstor
je
addr16
push
push
loop
jg
dec
and
int
xchg
clc
xchg
test
sti
mov
mov
inc
popf
fwait
push
mov
add
popf
ficoms
push
addr16
mov
xchg
push
dec
inc
xlat
pop
or
jp
dec
movsl
inc
xor
xchg
mov
add
loopne
nop
sub
mov
out
int
insl
movsl
enter
lods
mov
or
mov
jne
xor
dec
aam
jge
gs
int3
push
jne
mov
sub
cmc
adc
push
es
es
cmc
pushf
data16
testb
sbbb
scas
dec
js
adc
mov
pushf
fmuls
orb
or
fwait
in
ds
push
and
xchg
ds
fildll
cmc
mov
or
mov
push
jge
call
fadds
cmp
or
add
pop
loop
out
test
mov
adc
add
fidivrs
sbb
test
pop
pop
push
stc
int3
mov
jae
ds
dec
adc
lret
out
pop
dec
jnp
xor
jae
int3
sbb
loopne
imul
nop
xor
push
xor
or
cmp
cmp
jle
cmp
icebp
test
notl
push
or
gs
jmp
imul
outsb
daa
std
jae
mov
fmuls
cmpsl
negl
cmp
frstor
sbb
pop
mov
cld
in
lds
loop
sbb
cmp
sbb
dec
fsubrs
adc
in
scas
test
mov
insl
cltd
jbe
test
mov
dec
hlt
xor
jle
cltd
mov
rorl
and
movsb
xor
js
sbb
cld
mov
das
pop
jae
jle
aad
mov
and
scas
sub
jl
mov
jae
dec
in
jno
loopne
xor
fldpi
std
lret
dec
fstpl
out
outsb
out
adc
xchg
jne
js
mov
outsb
mov
jnp
aaa
dec
pop
jmp
add
cmp
xchg
daa
jae
adc
pop
std
into
dec
dec
cmp
fildl
push
pop
dec
mov
xchg
inc
fdivr
adc
cmc
fs
pushf
roll
xlat
ja
insl
ds
adc
push
hlt
xor
xchg
inc
jle
test
nop
sbb
insb
mov
movsl
jle
movaps
lahf
xchg
rorb
call
int
xor
cmp
add
movsl
jmp
adc
int
mov
xchg
xchg
or
in
ficompl
sub
push
jo
and
data16
or
cmp
xchg
mov
loop
mov
jo
jae
int3
add
int
or
mov
cmp
dec
ljmp
out
and
out
sub
add
clc
gs
dec
push
mov
xchg
or
test
push
mov
xchg
enter
das
sub
mov
or
inc
pop
fistl
adc
leave
shl
sub
jp
sbb
repnz
bound
xor
icebp
mov
sbb
mov
dec
sub
cwtl
inc
ret
xor
and
shl
xchg
add
out
sbb
xor
dec
lret
cwtl
mov
aas
push
push
aas
mov
push
inc
test
inc
in
pop
jno
fwait
in
insl
popf
sbbb
push
push
pushf
jb
inc
pop
push
mov
mov
mov
jns
cld
jp
jle
xchg
cmpsb
mov
stos
hlt
adc
or
mov
andb
rol
sahf
pop
stos
or
push
call
jecxz
pop
xadd
js
adc
sbb
stc
xchg
nop
hlt
repz
imul
loop
pop
aaa
sub
xor
imul
jmp
pop
cmpsb
pop
adc
xor
sbb
popf
mov
adc
es
mov
push
cwtl
pop
jno
fstpt
shll
jp
in
mov
push
pop
mov
mov
aaa
int
jb
jae
test
sub
xchg
fisttpll
pushf
mov
into
xor
cmp
sub
pop
mov
push
and
push
mov
sti
jge
in
cmpsb
test
cld
cmpsb
ja
orl
shl
and
jmp
lahf
js
int
dec
xchg
push
mov
repnz
ljmp
lcall
push
lcall
cmp
int
adc
xor
mov
cltd
inc
cs
stc
inc
adc
lret
das
bound
out
movsl
loope
pop
jb
push
sub
dec
jle
dec
xor
pop
lret
enter
aam
dec
ja
pop
cmp
mov
mov
dec
xchg
xor
sub
std
scas
xor
insb
stos
fwait
mov
jbe
sub
add
and
int
mov
jle
loop
lcall
xlat
aaa
jne
push
or
roll
sbb
xchg
fmull
xchg
dec
lret
lods
lds
mov
mov
sbb
fsubrp
mov
jecxz
out
or
mov
inc
cli
jnp
orl
sub
lret
and
push
repz
add
inc
push
negb
addl
inc
xlat
or
insb
cmp
and
fwait
cmpsb
test
stos
or
dec
imul
add
cwtl
cwtl
cmc
mov
jno
sbb
enter
dec
fwait
xchg
sahf
lret
lahf
ss
pushf
sub
dec
les
inc
das
xchg
cmp
iret
mov
xor
mov
jae
cmpb
addr16
sub
mov
cmpl
aam
pushf
jae
cmpsl
aam
adc
push
mov
test
pop
xchg
lock
out
in
ds
fwait
in
mov
mov
dec
ljmp
jmp
and
sti
aas
pop
notl
pushf
cmp
mov
into
push
hlt
sub
out
adc
lock
dec
dec
add
dec
push
adc
add
push
hlt
fdivrp
lcall
popa
dec
mov
cmp
and
into
push
add
xchg
out
mov
cmp
daa
in
xor
addr16
std
jle
jo
loop
lea
sub
lahf
xor
dec
jp
orl
shlb
bound
or
inc
cmp
aad
xchg
pop
neg
fimull
jl
mov
loopne
fcoms
mov
push
rclb
enter
xchg
popf
push
das
pop
sub
and
or
mov
jg
xor
jmp
divb
jne
cmp
rol
fcomps
mov
scas
adc
into
mov
jbe
out
pop
or
mov
xchg
outsl
movsl
xchg
int3
dec
mov
call
dec
cmp
xorb
stc
imul
pop
cmp
addl
loope
inc
hlt
fdivs
cmp
daa
into
divb
mov
xchg
pop
inc
inc
test
push
jo
inc
adc
lds
and
sbb
fwait
out
and
mov
mov
mov
mov
in
or
add
jecxz
push
sub
movsb
sbb
ss
incl
add
lret
inc
pop
sub
sub
lret
mov
xchg
adc
mov
sbb
and
sub
nop
adc
fildl
cmp
into
inc
aaa
lock
add
pushf
insb
mov
push
popa
out
imul
adc
xchg
cltd
dec
leave
lock
aam
gs
lret
shll
jb
lret
imul
jecxz
mov
add
fidivrl
lcall
xor
icebp
cmp
stc
cmp
aad
adc
jp
fcmove
or
enter
adc
pop
push
mov
es
and
xchg
lret
in
aas
mov
sbb
int3
adc
scas
insl
std
cmpsb
jo
in
pop
mov
ljmp
call
lods
mov
das
cmp
sbb
in
mov
sub
mov
clc
test
jge
dec
sti
dec
sahf
xor
sub
daa
pop
call
leave
sub
push
or
pop
add
xor
jmp
in
pushf
outsl
cmp
ret
rolb
add
mov
gs
sbbb
and
outsb
cmpb
or
fwait
push
aas
es
mov
xor
and
lret
dec
sub
mov
push
movsl
out
jp
pop
dec
lgs
mov
ficoml
lret
lods
into
sbb
mov
mov
adc
inc
xor
jle
repnz
or
mov
push
repnz
test
rcll
inc
or
hlt
mov
int
cmp
mov
push
and
sbb
mov
mov
push
push
cmpsl
inc
dec
push
cltd
cmp
push
cmc
es
lock
cmp
xchg
jge
shll
cs
sbb
lahf
xlat
and
mov
aas
das
call
popf
dec
xchg
push
aam
shll
lret
pop
pop
outsb
cmp
imul
mov
pushl
sbb
push
test
into
jl
dec
ficomps
mov
dec
andl
les
cmp
in
pop
mov
xor
pop
in
sub
and
mov
cmc
add
xor
adc
jnp
out
int
inc
loope
sub
fxtract
push
push
faddl
je
pop
fcmovnu
xor
mov
sbb
and
divb
bound
mov
add
out
dec
arpl
xchg
lcall
daa
stc
shrb
movb
push
repnz
test
xchg
jp
mov
sub
xchg
sub
int3
js
iret
shrl
dec
pop
sbb
loop
dec
icebp
lods
scas
insb
pop
cmpsl
pushf
out
add
cmp
jg
xchg
std
inc
pop
in
cmc
lds
dec
call
sbb
int
cltd
call
xor
daa
pop
aaa
push
pop
dec
cmp
mov
adc
sbb
aad
mov
cmpsb
rorb
in
stos
pop
aam
popa
xchg
jo
inc
pop
imul
jecxz
sar
mov
add
lahf
icebp
mov
adc
pop
insl
jg
and
gs
in
aaa
lret
lcall
mov
mov
jp
lods
add
sbb
xchg
idivb
clc
ficompl
xchg
incb
sub
cmp
adc
andb
ret
xchg
jle
in
lahf
lods
fs
inc
cmpsl
xchg
xchg
sub
sbb
call
imul
mov
bound
stc
insb
pop
jno
aaa
insb
xor
ficoms
aaa
test
rcrb
fistpl
mov
popa
xor
or
insl
ret
sbb
adc
clc
dec
xlat
leave
inc
sub
sub
pop
mov
inc
xor
xchg
mov
jns
jecxz
push
imul
mov
cmp
push
or
loopne
ljmp
sub
mov
sti
push
rcr
xchg
sub
sub
push
push
jge
and
sbb
xlat
and
or
push
xor
sub
push
lfs
aaa
add
push
jne
sahf
mov
aam
jb
mov
dec
dec
mov
cmp
mov
xchg
out
inc
popf
xor
sbb
loop
adc
sub
je
sub
inc
or
loop
cmpsl
adcl
or
fisttpll
lahf
mov
mov
push
shll
and
lods
out
ljmp
lock
mov
pushl
arpl
pop
dec
js
or
test
and
movsb
movsl
pop
fildl
push
or
jp
push
inc
fldcw
out
mov
call
rol
popf
cld
fnsave
cwtl
jb
push
push
rol
push
das
cli
sti
nop
sti
mov
out
and
scas
fdivl
sbb
sarb
fstl
cmc
movsb
popa
sbb
xlat
pop
pop
adc
imull
stos
lahf
add
inc
sbb
mov
rcl
mov
insb
mov
nop
test
mov
icebp
lea
into
test
sbb
out
xlat
xor
shrl
arpl
ss
stos
or
std
add
dec
mov
mov
or
cmpl
out
ror
shlb
nopl
movsl
cmp
mov
xor
dec
mov
jg
jg
mov
test
fdivl
addb
mov
imul
je
mov
imul
xchg
shl
pop
xor
add
push
cmp
cli
mov
in
xor
push
mov
nop
or
cmp
sbb
arpl
ret
stos
sub
or
dec
pop
pop
mov
cmpsb
sarb
mov
pop
mov
cmpsb
jg
xor
sahf
and
insb
pop
mov
push
push
jl
stos
loope
ss
adc
xchg
shll
es
loope
jb
dec
aad
push
xchg
push
aad
movsb
idivb
inc
mov
ss
aas
out
cwtl
hlt
pop
or
inc
int3
fstp
push
cmc
mov
sti
fildll
xor
loop
xor
xor
leave
push
jnp
addr16
fcoms
xchg
jg
cmp
add
dec
jle
xchg
outsl
lret
rorl
pop
lret
xor
jnp
rcrb
std
pop
sbb
add
pop
or
addr16
pop
rolb
or
in
mov
rcrb
test
inc
fcoml
xchg
repnz
in
or
dec
inc
cmc
add
or
pop
mov
push
xor
dec
ja
js
mov
mov
ds
mov
lret
stos
dec
xlat
cs
popa
imul
or
add
movsb
inc
daa
int3
add
dec
dec
mov
dec
js
xor
lock
cmp
fldenv
in
and
dec
orb
in
and
outsb
mov
add
inc
adc
xor
pop
les
add
movl
pop
jbe
iret
xchg
mov
cmp
dec
dec
rol
fcomps
cmp
pop
and
xchg
add
jae
repnz
sbb
mov
idivl
in
loope
arpl
into
bound
in
negl
stc
pop
push
xchg
test
push
mov
jmp
mov
sbb
dec
dec
cmpsl
test
mov
mov
adc
fildll
dec
mov
add
stc
dec
in
fisttpll
inc
jno
push
add
jecxz
imul
xchg
ja
sub
jo
enter
jmp
lret
aaa
or
push
xor
mov
movsb
or
aam
mov
add
or
jbe
add
lds
lahf
pop
mov
dec
jecxz
addr16
shlb
mov
push
daa
fcoms
das
imul
xchg
mov
push
into
mov
push
data16
loop
iret
paddd
mov
xchg
sub
pushf
cs
xor
fstpt
sub
fs
cld
daa
das
jae
lret
loopne
lret
jmp
cwtl
outsl
cs
gs
aas
push
popf
std
je
jge
lcall
cwtl
mov
sub
scas
int
test
xor
push
xor
stos
pop
mov
xchg
fldt
push
repz
mov
sbb
pop
in
pop
leave
xor
hlt
push
or
movsl
cld
ret
inc
rcrw
inc
xchg
cmp
xchg
xchg
sete
out
loopne
popf
lods
and
dec
lcall
dec
inc
test
xor
les
push
mov
fistl
mov
add
sub
rcl
xchg
imul
jl
inc
hlt
xchg
cmpsb
mov
int3
cmp
or
aad
pop
cmp
rol
mov
mov
in
sub
sbb
jl
lea
mov
xchg
mov
xchg
sub
pop
push
andl
mov
ret
push
mov
adc
das
add
inc
mov
sbb
addr16
mov
aas
lea
and
imul
iret
insb
mov
cmp
mov
loope
lret
xor
adc
arpl
js
jo
push
mov
sar
lahf
inc
lea
cwtl
adc
cmp
add
js
data16
mov
aas
or
ljmp
es
pop
xchg
jo
mov
jmp
adc
test
mov
aas
idivb
or
or
insl
mov
and
cmp
loope
mov
jmp
xchg
jae
inc
scas
cmp
in
and
mov
scas
int3
lret
sbb
outsl
inc
adc
mov
insl
test
and
push
movsl
jne
popa
jno
xor
inc
les
test
or
or
add
lret
faddl
ds
xor
xor
ja
out
lcall
les
js
pop
aaa
in
roll
cmp
nop
dec
stc
andb
icebp
repnz
insl
daa
mov
push
mov
aam
imul
push
fldcw
andl
xorl
cltd
mov
in
sub
sete
rcrl
inc
data16
jne
test
xchg
cmp
push
jg
lea
enter
divl
add
mov
cmp
push
cwtl
andl
loope
push
pop
lcall
rorl
cmp
push
mov
pop
cwtl
inc
rol
mov
fistpll
hlt
sarb
inc
mov
je
orb
adc
aad
xchg
je
nop
ds
lods
adc
dec
movb
xor
sbb
data16
shrb
cmp
jnp
mov
xchg
mov
jg
or
sbb
test
outsb
or
sbb
push
push
jg
adc
xchg
push
mov
sub
scas
push
mov
jp
push
and
ficoms
mov
outsl
test
gs
lea
adc
jno
inc
push
xchg
mov
or
pop
dec
sbb
inc
cltd
xor
or
add
cld
addr16
adc
cmc
movsb
lret
mov
add
or
rol
fmuls
in
cmp
xchg
ljmp
cltd
and
jge
sub
js
adc
pop
icebp
mov
lods
jnp
or
movsb
jecxz
pop
mov
jp
ucomiss
test
sar
in
leave
inc
cld
xor
or
sbb
outsl
in
sets
ret
adc
xchg
xor
mov
fnstsw
push
fldl
jnp
and
imul
addr16
movsb
es
je
cmp
sti
stos
push
idivl
cli
inc
add
daa
add
test
addb
stc
add
adc
lret
es
sti
ljmp
cmpb
lcall
aad
cmpsl
mov
jne
xor
xchg
insl
lcall
xchg
mov
dec
mov
xchg
sub
mov
sbbb
mov
xchg
dec
or
sbb
xor
jno
mov
fidivs
rcrb
push
mov
das
xorl
cld
mov
enter
and
int3
xchg
push
cmp
lcall
out
ljmp
outsl
inc
inc
xchg
mov
fstpl
push
sbb
bound
test
imul
push
iret
mov
into
push
inc
scas
mov
xor
xchg
loopne
xchg
fsts
fwait
in
jb
cwtl
and
in
mov
cmpsb
sarl
inc
imul
das
mov
dec
out
addr16
lret
mov
cmp
aas
cmp
and
cld
adc
xchg
fwait
pop
scas
std
jbe
cmp
repz
push
lret
test
xor
sbb
push
xchg
jge
gs
aam
pop
out
dec
add
or
add
sbb
push
cmp
ror
jl
mov
lcall
popa
push
in
adc
dec
aam
test
xchg
xor
sub
push
cmp
ss
and
mov
cltd
jno
jbe
ret
in
and
jb
in
hlt
nop
leave
push
outsb
adc
mov
xor
icebp
je
inc
movsl
jecxz
aad
orb
mov
ja
jo
mov
sbb
imul
push
sub
jb
cmp
es
ss
push
add
es
pop
add
push
lahf
jmp
xor
xor
sahf
pop
push
stos
or
rorl
loopne
fsubrs
cmpl
fists
xor
mov
nop
xchg
sbb
jge
mov
adc
cmp
adc
mov
test
out
fwait
mov
idiv
cli
xor
test
or
bound
inc
push
pushf
fnstenv
ffreep
mov
dec
adc
inc
popf
lods
jns
out
fadd
xor
loope
jb
jle
cmc
or
pop
shrl
cmp
ljmp
cmpsl
xchg
into
sub
int3
adcb
call
xchg
sub
push
pop
sbb
fistpl
xchg
and
jne
xor
sbb
sub
dec
inc
or
mov
mov
jg
jmp
test
mov
cli
es
aam
in
cmp
mov
mov
mov
out
push
stos
mov
jg
xchg
dec
xchg
rcrb
in
ss
jecxz
fisttpll
cmp
clc
pop
test
sbb
mov
scas
outsl
sbb
sbb
mov
mov
jae
loopne
test
dec
cmpsl
sti
sbb
push
imul
daa
arpl
pusha
scas
add
sbb
ja
repz
push
adc
mov
dec
lds
inc
out
mov
aam
scas
cmp
js
mov
fistps
jb
and
aaa
ret
push
aas
pop
les
fs
add
lret
pop
cmpsl
push
sub
outsl
lret
in
or
test
in
add
jae
xchg
insb
enter
sbb
inc
pop
sbb
push
push
xchg
int3
pop
sbb
negb
sub
xchg
inc
popf
pop
js
addb
xchg
stos
ja
dec
ja
lcall
loop
out
aad
aad
mov
push
lea
cmpb
xor
push
or
decl
outsb
mov
mov
bnd
push
jno
pop
mov
mov
add
add
mov
andl
xor
insb
fadd
stos
pop
fs
mov
cltd
jg
mov
outsb
cmp
das
push
cmp
lret
pop
mov
out
in
loope
cmp
in
out
or
push
rcr
stos
or
dec
sbb
xchg
sbb
sub
or
inc
mov
fbld
and
sbb
mov
mov
cmp
and
mov
push
imul
insl
mov
cld
fisubrs
pop
bound
das
push
outsb
ja
xchg
add
jae
cmp
outsl
push
dec
ret
jb
std
xchg
jg
add
inc
and
fcmovbe
sbb
bound
add
xchg
loopne
and
cmpsb
xchg
sbb
stos
mov
aaa
call
jge
cltd
in
aaa
nop
in
arpl
arpl
cmp
and
cmpsl
mov
push
into
sbb
mov
cmpsb
jo
out
pop
inc
les
cmp
repnz
roll
fistpll
std
cmp
icebp
in
cmp
inc
bound
dec
dec
cs
in
hlt
movl
std
push
shlb
in
fwait
das
frstor
mov
cmpsb
mov
in
stc
mov
dec
jbe
dec
dec
insl
inc
sbb
mov
and
icebp
mov
ret
xchg
sub
fisubl
sahf
push
or
movsb
inc
mov
sbb
cld
xchg
push
push
pop
jnp
mov
add
pop
pop
enter
pushf
pop
decl
cmpsb
pop
jbe
inc
add
jp
adc
xlat
cli
ret
pop
cltd
test
jnp
roll
loopne
pop
xchg
das
pop
add
xor
jmp
ljmp
sbb
jecxz
hlt
xor
and
cmp
lock
pop
mov
es
push
inc
push
xlat
inc
adc
outsl
add
jns
lods
int3
pop
xchg
sub
fidivrl
sti
les
loop
sbb
icebp
movsb
push
sbbl
mov
in
lock
jg
fistps
rorb
xchg
mov
mov
in
xchg
scas
rcrl
or
sbb
mov
ljmp
ljmp
loopne
xchg
fidivl
jb
xor
jge
inc
ror
mov
inc
inc
sub
jmp
stos
add
loope
mov
push
add
ds
test
shrl
cmp
test
mov
hlt
pop
cli
outsl
or
imul
mov
lods
or
addr16
mov
sub
inc
lods
inc
sub
arpl
inc
leave
mov
xchg
test
in
lds
fs
rorb
mov
negb
movups
cwtl
je
imul
into
test
push
add
fcmove
mov
fs
cmp
je
popa
adc
or
push
lahf
nop
pop
fistpll
pop
xchg
mov
push
adc
push
imul
inc
aam
sbb
stos
call
or
mov
adc
mov
subl
int
xchg
shll
xor
js
out
mov
inc
mov
mov
mov
cmp
arpl
in
imul
scas
repz
dec
movsb
scas
add
sbb
cmp
test
out
sarl
jl
enter
mov
adc
mov
pushw
arpl
sbb
xchg
daa
pop
cmp
scas
aad
test
outsb
loop
jne
mov
pop
xchg
bound
lret
add
mov
mov
mov
dec
xor
lea
and
test
ljmp
ret
movsb
sbb
sub
xchg
std
mov
xchg
fcom
clc
xchg
push
jg
push
and
mov
movsl
inc
mov
pushf
or
addl
imul
sub
push
out
fnstenv
shlb
sub
xchg
imul
bound
icebp
xchg
ret
mov
js
sub
inc
es
inc
inc
fcomp
pop
fwait
leave
fstpl
mov
loope
fdivs
aas
insl
and
push
sbb
daa
std
adc
popf
cli
cmp
inc
push
adc
adc
aam
out
jg
out
mov
je
aam
movzbl
sbb
sbb
adcb
inc
inc
fimull
ja
cld
mov
sbb
jle
int
testb
in
dec
popf
or
dec
addr16
std
andb
xchg
cmp
subb
in
and
mov
jmp
js
cmp
adcb
add
lds
ret
fcmove
bnd
int
ror
out
xchg
add
adc
jae
lret
imul
loop
negb
dec
pop
rcrb
leave
xchg
nop
pop
mov
pusha
pop
mov
pusha
std
mov
inc
dec
xchg
mov
mov
popf
xchg
push
jno
or
fmull
in
outsb
filds
icebp
test
insb
sub
jb
cmp
mov
jo
pop
mov
push
sarl
addr16
pop
mov
mov
fdivs
push
clc
and
mov
popa
mov
cli
scas
sub
out
rcr
sbb
or
cmp
ja
mov
mov
or
cmpsb
adc
xchg
adc
ror
mov
xchg
mov
les
aam
dec
mov
mov
out
rcrb
sub
jne
dec
add
mov
loopne
dec
and
lea
rcrl
outsl
cmp
mov
fistpll
andl
int
pop
clc
jmp
shl
xlat
es
jo
inc
mov
lret
dec
add
mov
mov
push
mov
jmp
shll
cli
xchg
pusha
cld
inc
jg
xchg
push
jge
test
std
xchg
int
aad
push
pop
mov
pop
dec
imul
in
out
jl
or
movl
push
add
cltd
fdivrs
push
or
adc
in
out
test
in
push
jne
and
cmp
mov
rorb
insl
por
popa
es
mov
xchg
stc
cmp
and
int
insl
sbb
das
xchg
dec
imul
and
cmpsl
ljmp
push
in
dec
lds
pusha
jnp
jmp
mov
dec
aaa
iret
adc
movsl
icebp
out
je
add
sub
inc
je
push
mov
pushf
lds
xor
bound
pop
jg
dec
lcall
insl
jmp
and
aad
or
sti
and
ficompl
aas
sarl
mov
les
dec
add
sub
sub
cmp
divb
loope
sbb
stos
pop
popf
ret
xchg
inc
sbb
les
rorl
push
or
insl
cmp
jnp
xor
sub
adc
adc
xor
dec
jmp
fisubrs
shll
loop
stos
aas
fimuls
inc
stos
hlt
dec
out
scas
test
ja
push
pop
inc
ficompl
pop
or
cwtl
cmp
int3
jl
cmp
xchg
or
pushf
jp
xor
inc
scas
dec
pop
rclb
shl
gs
outsb
dec
dec
leave
add
lret
inc
imul
adc
stos
ficoms
into
sahf
in
jp
sbb
movsb
loope
rorb
or
insl
push
cmpsb
mov
mov
sbb
jae
scas
mov
mov
xchg
dec
insb
mov
pop
mov
xor
popa
int3
shl
call
xor
adc
dec
sbb
ds
stc
hlt
mov
lea
bound
push
outsb
dec
insl
repnz
or
stos
gs
loope
in
and
lds
sarb
xor
push
sbb
sub
push
adc
fs
xchg
dec
loopne
test
mulb
xor
lds
enter
jle
inc
fs
imul
flds
mov
push
lock
movsb
dec
jb
ja
test
leave
sbb
and
movsl
mov
or
dec
mov
jge
std
cmp
and
push
jne
push
xor
push
ljmp
mov
rclb
dec
stc
mov
cmp
adc
in
mov
fstl
test
or
sub
imul
mov
inc
mov
mov
cmp
push
aaa
les
or
push
pop
xchg
mov
and
xchg
jne
inc
rclb
ret
decb
jnp
outsb
das
adc
aas
jno
xor
addb
loopne
fwait
out
outsl
add
int
jne
outsl
inc
dec
xchg
xor
es
movb
inc
dec
mov
rol
popf
push
cmc
ret
mov
mov
lock
stos
idiv
ret
and
stos
clc
xchg
insb
cmc
mov
pop
and
sub
repnz
jle
and
imul
add
sub
dec
icebp
and
mov
sub
mov
jmp
xor
div
aaa
jb
into
hlt
insl
or
rolb
cs
leave
nop
fdivrl
sub
adc
cmp
mov
or
pop
add
rol
ss
fwait
insl
test
pushf
push
inc
mov
pop
xchg
cld
dec
and
in
or
ret
mov
lods
add
sbbb
dec
mov
push
or
push
jns
and
out
inc
mov
lret
fdivs
test
imul
and
sub
in
fnstenv
std
cmpsl
loop
and
clc
mov
daa
ret
in
cmp
xchg
pop
jb
push
andl
inc
pop
movsl
xchg
cmc
lret
cmp
xchg
pop
or
jecxz
inc
popa
jnp
cmpl
push
inc
and
aam
sahf
cmpsb
add
enter
lods
idivl
insb
push
jl
aad
ljmp
inc
add
pop
stos
aas
lcall
push
and
pushw
outsb
mov
dec
push
mov
jl
sbb
mov
out
mov
sub
loope
and
dec
mov
add
sbb
push
ror
test
xchg
gs
in
movsb
add
xor
dec
jg
push
xor
cmp
fcmove
dec
pop
shlb
inc
insb
subl
popf
test
inc
jno
jns
andb
sbb
in
arpl
rorb
or
testl
negb
and
aam
lods
jl
and
js
scas
add
and
mov
fdivrs
xor
negl
stc
mov
xchg
ficoms
dec
xchg
dec
es
mov
in
push
and
adc
cld
push
popa
pop
mov
pushf
es
std
icebp
out
fwait
movsl
xchg
mov
or
movsb
cmp
shl
adc
add
inc
int3
cmp
jl
adc
cwtl
and
mov
psubq
in
push
xor
cmp
testb
inc
mov
test
cmp
jecxz
stos
pop
xchg
and
mov
lcall
popf
iret
stc
push
jmp
test
jns
sub
and
add
in
std
mov
mov
inc
imul
jne
sbb
fidivrl
rorb
mov
pop
dec
popa
adc
xor
inc
dec
fs
f2xm1
addl
shrl
mov
add
mov
jp
inc
jbe
cwtl
jle
add
and
stos
mov
pusha
adc
or
fidivs
mov
cmc
icebp
jge
push
inc
sbb
cmp
cld
fidivrs
dec
pop
movsb
mov
lahf
stc
or
scas
bound
test
sub
cld
xchg
mov
mov
jl
les
or
inc
into
mov
dec
xchg
push
enter
shrl
cltd
mov
dec
dec
hlt
jecxz
jbe
lods
adc
mov
enter
mov
int3
rcrb
mov
mov
fldln2
cld
dec
iret
xchg
hlt
dec
ret
cmp
mov
push
orb
xchg
rcrb
fsubrs
daa
mov
mov
sub
push
mov
rcl
fs
nop
clc
mov
pop
ljmp
mov
test
stos
cmpsb
lcall
mov
push
lods
scas
add
cmp
scas
dec
cmpb
addl
loopne
clc
sub
out
inc
hlt
cwtl
repnz
nop
and
add
rcl
mov
mov
cmc
mov
repnz
gs
mov
jnp
mov
push
fsubl
and
or
push
xlat
dec
loope
jb
cmp
std
test
es
sahf
jecxz
bound
je
mov
fsts
or
xor
fnstenv
mov
rcrl
repz
daa
enter
push
pop
aam
pop
int
notl
xor
jno
xor
out
adc
sub
mov
dec
cmpl
and
lret
adc
cmp
loopne
sbb
and
sub
pop
jge
cld
cmp
push
cmp
fs
cmp
aas
jbe
and
lret
shll
push
insb
inc
sub
pop
test
dec
inc
adc
jle
sbb
and
sub
push
rol
loop
aad
sbb
int3
dec
out
pop
mov
adc
je
mov
mov
insb
outsl
add
mov
sbb
xchg
in
int
ja
ficoms
cltd
cwtl
mov
icebp
pop
jecxz
sbb
cmp
inc
mov
inc
jns
pop
enter
test
imul
ficoml
jg
adc
xchg
fwait
out
jp
mov
xchg
mov
dec
jmp
add
in
loope
mov
fld
fcomps
mov
xor
pop
cmp
cmp
sahf
and
add
dec
sbb
inc
enter
xchg
and
sbb
mov
or
cmpsl
xorb
dec
sbb
inc
mov
ret
out
mov
inc
sub
mov
lds
adc
xor
adc
es
jg
adc
cmpsl
shr
fisubrs
mov
cmp
jae
and
pop
adc
shlb
popf
jp
in
test
stos
nop
push
sbb
or
stc
xorb
xchg
push
mov
das
test
mov
inc
dec
dec
test
mov
lea
push
pop
jmp
aad
iret
shlb
mov
cmc
out
rcrb
jbe
xchg
or
mov
and
mov
fists
jecxz
das
dec
in
cld
daa
fiadds
mov
jg
incl
das
in
sub
mov
mov
enter
adc
and
inc
movsl
mov
imul
int3
shll
movsl
lahf
outsb
cli
cltd
push
xchg
outsl
mov
adc
out
jl
mov
testb
movsl
lret
add
out
faddl
clc
imul
xchg
divb
outsl
mov
stos
xchg
lcall
pop
pop
popa
cmp
scas
mov
mov
lcall
add
sub
roll
cmpsl
fimull
pop
inc
dec
push
movsb
jo
fwait
sub
mov
pop
inc
sub
das
dec
jg
insl
or
jge
add
outsb
xchg
dec
mov
or
insl
int
mov
jmp
out
jb
fdivs
movsb
push
cmp
cmp
shll
ret
inc
fstl
jne
shll
rcr
mov
leave
arpl
loop
ffreep
imul
sub
dec
or
pop
in
sub
mov
and
inc
push
in
cwtl
pop
fistps
xor
jp
adc
filds
mov
sub
pop
scas
push
addb
lock
cmpsb
fisttpl
les
sbb
mov
jecxz
out
and
adcl
push
sbb
fiadds
jne
cs
cmp
fdivrs
cmp
sub
dec
aas
push
xchg
aas
jnp
and
push
cmpsl
addr16
movsb
leave
dec
mov
in
mov
jno
mov
pop
lods
stos
mov
mov
sbb
fwait
jg
data16
dec
add
movsb
iret
subl
mov
mov
lret
pop
inc
jmp
out
pop
xchg
cmp
mov
ds
or
cmpsl
and
add
scas
jno
pop
adc
pushf
cmp
xlat
cmpl
out
sub
movsl
add
cmp
fld
xorb
insl
movsl
pop
in
clc
mov
or
xchg
scas
hlt
movsb
xlat
jno
xor
sub
xchg
dec
insb
xor
push
xchg
adcl
xor
and
daa
adc
sbb
or
daa
call
dec
ss
and
test
xchg
loop
into
and
dec
incb
imull
inc
xchg
fmull
or
fadd
stos
pop
push
xor
cmp
and
pushf
mov
fnstenv
aaa
ja
repz
cmp
movsl
je
fmuls
mov
repnz
sbb
lea
stos
jmp
dec
sbb
mov
iret
call
bound
sarb
mov
test
xor
sti
jle
mov
mov
xchg
xor
mov
xor
push
xchg
jge
or
mov
xor
cmp
repz
xor
xor
stos
fcoml
imul
xor
dec
frstor
pop
xchg
mov
sub
sub
and
jne
dec
jle
sti
data16
inc
stos
jg
loopne
dec
jns
mov
lcall
xchg
inc
cli
insb
addr16
out
inc
jo
je
test
and
xchg
mov
and
add
stos
adc
inc
and
cli
icebp
ret
add
std
ficoms
push
push
fstl
add
inc
dec
outsb
call
mov
xchg
clc
cs
mov
jae
hlt
or
fbld
cmp
push
stos
or
nop
xor
repnz
push
mov
mov
xchg
jo
clc
ret
xchg
hlt
aas
inc
or
xor
adc
lcall
sbb
sbb
push
cmpl
movsb
push
int
mov
sub
inc
dec
popf
pop
icebp
pop
mov
js
test
or
adc
pop
mov
cld
or
xchg
sbb
sbb
mov
loopne
ljmp
loope
or
imul
xchg
lret
lret
out
push
inc
nop
sub
fistpll
mov
iret
andb
nop
sar
or
xor
mov
jmp
mov
push
dec
or
xchg
aad
sub
mov
into
leave
repnz
int3
fwait
mov
sbb
add
hlt
bound
mov
cwtl
imul
je
test
pop
repz
outsl
pushf
test
cmpsl
out
push
adc
fisttpl
shll
shrl
call
add
pop
cwtl
mov
mov
xchg
add
jae
int
cmp
push
mov
dec
fwait
push
inc
cmp
gs
pop
sub
and
ja
dec
xchg
loope
ds
jb
nop
mov
push
dec
xor
sar
mov
aad
and
addl
jo
test
lahf
add
inc
pusha
pop
add
mov
sub
jp
sbb
int3
and
pop
or
icebp
mov
in
xchg
or
add
push
into
jmp
mov
stc
mov
push
jle
jbe
pop
in
mov
sub
insl
call
leave
cmpl
cmpsl
in
sbb
push
pop
push
sahf
mov
pop
mov
popa
dec
gs
imul
xchg
nop
sbb
push
adc
adc
aad
out
sbb
push
dec
dec
addb
pop
sub
dec
adc
not
mov
aam
inc
mov
lea
mov
imul
or
call
cli
sbb
test
inc
sbb
mov
test
jb
clc
test
push
lods
sbb
icebp
imul
ss
rclb
je
nop
mov
iret
xchg
mov
pop
movsl
shll
push
cmpl
xor
jae
outsl
mov
sbb
shrb
repz
xor
dec
sti
ds
cwtl
mov
out
mov
xchg
pop
and
addl
cmp
jns
clc
fcmovne
movsb
mov
shll
jle
mov
cli
xchg
ja
pushf
popf
cld
xchg
shlb
das
mov
pushf
insb
fnstsw
push
or
xor
dec
push
ret
mov
out
gs
xor
pop
sub
mov
cs
xor
mov
xchg
out
fs
mov
or
add
sub
addr16
loope
loope
pop
mov
jb
or
in
xor
sub
inc
xlat
cmpsb
cwtl
xchg
cmp
dec
xchg
loope
fyl2xp1
mov
push
fcoml
pop
and
imul
in
outsb
adc
jecxz
sub
push
aaa
icebp
sub
les
mov
mov
cli
fsubr
lret
add
fcompl
push
add
sub
sub
jae
sbb
cli
push
movsb
jge
aam
mov
popa
dec
pushf
add
inc
bnd
movl
xchg
xor
cmp
cli
js
xor
inc
into
aad
cltd
xlat
push
lret
int
xorb
insl
pop
cmp
xchg
imul
mov
jnp
jne
sub
bound
out
pop
test
sbb
andl
and
mov
mov
add
pop
lahf
and
imul
and
stos
pop
mov
jbe
cwtl
mov
js
mov
pop
add
into
adc
pand
dec
adc
outsb
mov
aam
xchg
pinsrw
pop
push
xchg
add
pushf
imul
mov
add
aad
inc
adc
mov
rorl
add
xor
add
inc
mov
fs
mov
xlat
inc
cmp
clc
jg
int
xchg
xchg
jecxz
lcall
dec
mov
adc
adc
cltd
loope
mov
xchg
stc
and
fs
push
mov
enter
cmpsl
mov
fnstenv
adc
inc
or
jle
pop
sbb
cmovne
mov
jle
aas
in
cmpsl
fmuls
push
fidivrl
inc
clc
mov
and
mov
std
stc
loop
insl
adc
loope
daa
insl
jne
popa
js
and
xchg
mov
out
imul
jecxz
push
push
aam
lods
xchg
inc
call
loop
xchg
or
push
dec
in
mov
mov
xor
dec
cmp
mov
adc
stos
ret
mov
mov
jae
aas
or
or
pusha
jg
push
aad
jmp
rorl
or
loope
lock
rol
fwait
push
into
mov
dec
dec
pop
faddl
mov
jno
push
enter
das
dec
xchg
xor
inc
fdivrs
inc
add
subb
sub
jno
pop
pop
xchg
pop
mov
ds
adc
push
sub
add
jg
mov
mov
daa
and
dec
fdivrs
pop
adc
orl
jl
pop
mov
mov
pop
aam
cmp
test
in
pop
pop
dec
cli
xchg
mov
mov
subb
lea
push
inc
imul
outsl
mov
fucomp
or
jns
push
xor
pop
add
or
push
xor
sbb
dec
jae
sub
sbb
cs
sbb
lock
and
out
xor
movb
and
test
xor
rorb
jbe
fdivrs
pop
arpl
mov
mov
inc
shl
repz
pop
ds
mov
jno
cmp
jno
ds
push
enter
addl
and
xchg
push
aam
add
and
sbb
xor
and
push
imul
and
mov
pop
xor
shl
testb
and
cltd
jle
clc
mov
inc
loope
inc
rcl
mov
sbb
mov
or
ret
add
orb
js
jne
repnz
cmp
push
pop
mov
xor
lret
js
mov
and
sbb
mov
and
add
sbb
mov
aaa
dec
int
xor
test
push
and
xchg
shll
mov
xchg
fidivrs
ljmp
cmp
fwait
cmp
inc
and
cld
pop
je
xchg
lods
out
movsb
dec
test
jbe
fwait
jge
ljmp
xor
mov
outsb
dec
jg
or
filds
cmp
or
sbbb
push
jmp
xchg
xor
and
jmp
in
push
out
arpl
dec
jb
adc
lret
rclb
std
push
arpl
adc
ds
mov
nop
dec
xchg
rcll
push
xor
hlt
rorl
popa
cmp
ret
dec
sub
loopne
push
pop
lods
divl
jecxz
out
in
sub
mov
xor
into
loop
push
int
xor
sub
divb
lret
ret
jl
push
push
mov
sub
xor
xor
les
sti
sub
in
xor
xchg
pop
daa
mov
jmp
cwtl
sbb
loopne
xchg
push
mov
das
lock
push
pop
in
xchg
jns
mov
xor
sub
cmp
and
mull
adc
xchg
jp
out
fdivrs
add
ret
mov
jnp
jbe
adc
jmp
or
stos
cwtl
add
push
int3
dec
mov
in
cmp
rolb
int3
in
shrl
aam
mov
inc
loopne
jb
shlb
push
inc
popf
sub
and
fcoml
inc
mov
int
inc
mov
test
outsl
xor
sub
ret
sbb
es
push
fs
inc
std
es
mov
and
icebp
lock
addr16
mov
mov
les
inc
xor
sbb
test
int
imul
or
or
push
shll
and
jge
dec
sub
leave
les
xchg
cltd
cmp
sbb
gs
jne
test
aaa
push
jl
add
inc
or
jno
fstps
enter
shr
rcl
outsb
xorl
mov
xlat
push
cmp
jns
ret
outsb
faddl
add
sahf
test
pop
les
cmc
popf
pop
insl
in
dec
add
cs
ret
pop
adc
pop
lahf
test
imul
xor
addr16
data16
jge
cmp
push
jle
mov
bound
stos
mov
sub
cmp
mov
and
mov
mov
lds
jecxz
push
ljmp
mov
test
jg
sub
pushl
enter
dec
push
pop
inc
test
or
cli
std
ds
adc
pop
sar
mov
loopne
popa
bound
pop
jl
xchg
aad
cmp
jns
add
sbb
xlat
ret
dec
loope
out
shl
test
jne
fstpt
dec
mov
push
sub
stos
inc
push
push
dec
imulb
js
subl
xor
in
testb
sbb
jbe
stc
or
outsb
xor
aas
push
in
cmpsl
scas
stos
mov
sbb
push
jns
gs
mov
add
sub
stos
mov
push
jg
xlat
ljmp
dec
test
dec
push
adc
sub
or
pop
push
aam
lea
js
mov
out
jno
aad
ret
mov
mov
push
pop
imul
mov
sti
sub
and
test
loope
adc
gs
push
sub
xchg
pop
dec
mov
notb
mov
or
jae
ret
fcmovb
fistps
jg
clc
and
stc
and
lods
or
push
rclb
aad
outsl
leave
out
imul
dec
decb
pop
fldenv
mov
cmp
push
sub
test
aam
mov
sub
lods
cmp
add
add
movsb
pop
xchg
pushw
mov
pop
repz
xchg
mov
xor
pop
bound
jp
adc
pop
out
ljmp
add
mov
push
ljmp
mov
jge
mov
insl
leave
loopne
xor
add
sub
push
cmp
nop
xchg
add
movl
xchg
mov
xchg
jb
xchg
sahf
cmc
inc
add
sbb
push
loope
mov
push
xor
cmp
dec
push
inc
and
jno
mov
das
mov
jl
loop
ja
xor
mov
in
bound
dec
scas
cld
iret
movsl
fcoml
aaa
in
adc
pop
push
daa
mov
push
aam
add
insb
ror
mov
pop
repnz
aad
dec
sbb
adc
cmp
popa
push
pop
rcll
or
mov
ja
sbb
mov
movsl
mov
test
ret
daa
test
ljmp
fists
into
mov
and
xchg
and
movsl
dec
jo
adc
mov
dec
ret
sub
mov
push
sbb
bound
push
loope
push
cmpb
lret
and
sysexit
test
jg
mov
or
leave
ret
sub
or
inc
fisubs
dec
and
repz
cld
lahf
in
andl
and
shlb
je
push
xorl
inc
addr16
xchg
aaa
xchg
xchg
xor
mov
cmc
insl
int
fadds
dec
and
sub
mov
test
cwtl
out
mov
push
int3
test
pop
iret
sbb
or
sbb
aad
xchg
cmp
and
dec
dec
jp
mov
push
aam
xchg
xor
pop
sbb
aas
movhlps
mov
mov
imull
mov
sbb
je
add
add
and
push
add
nop
jne
push
sti
lret
push
scas
arpl
mov
sbb
out
fwait
jle
inc
sbb
pop
and
xlat
mov
or
or
cli
mov
pop
call
sbb
popa
stos
inc
inc
lret
jns
adc
pop
cmc
movsb
iret
ficomps
dec
xor
insl
test
cmp
or
stos
je
in
add
gs
dec
in
or
adc
fwait
test
push
arpl
xchg
mov
push
mov
inc
out
sub
push
jne
push
aaa
add
imul
cmp
sbb
nop
pop
loopne
dec
fyl2x
mov
mov
push
push
aaa
mov
daa
out
sarb
pop
movsl
cmp
sbb
add
jge
push
int3
mov
cmp
aam
shrl
loopne
je
push
idivl
lret
popf
lea
mov
mov
fsubs
xor
scas
lods
mov
lds
sti
movsb
or
pop
jmp
jae
pop
sub
jbe
mov
jo
test
dec
das
xor
push
in
push
sub
insb
cmp
cmp
rcr
out
clc
int
out
push
icebp
mov
adc
add
sbb
shlb
sahf
mov
mov
adc
scas
lcall
in
and
push
sub
fldt
mov
repnz
xor
jnp
add
std
inc
fcoml
vpsllw
mov
jae
push
orl
fisubrl
jp
sti
fnstcw
pushf
xor
and
push
xlat
xchg
sbb
jne
pop
fmuls
jnp
movl
and
ficoml
hlt
mov
ja
popf
jg
xor
bound
cmp
repnz
arpl
scas
sub
jecxz
xlat
xor
fstpl
loop
adc
inc
and
gs
jbe
jno
inc
notl
push
add
push
dec
popf
inc
and
xchg
test
and
add
cmp
push
gs
push
jne
push
out
cmovb
bound
clc
mulb
pusha
fcmove
gs
adc
shrl
push
and
push
mov
push
push
fimull
mov
ficoml
or
xlat
fcmovu
sub
adc
push
pop
movb
movsl
mov
jg
movsl
fisubl
inc
nop
xlat
xor
cmp
mov
fnstenv
loope
xchg
cwtl
hlt
in
dec
movsb
outsl
or
and
cmp
fnstcw
mull
cmp
leave
sub
repnz
aad
je
xchg
push
stos
aaa
xor
stc
xor
popf
hlt
ljmp
jmp
push
ficoml
dec
into
fstp
mov
mov
xchg
jnp
and
enter
jg
adc
push
leave
lahf
movsl
push
sbbb
mov
mov
jecxz
xor
bound
imul
inc
rolb
xor
fmul
call
lret
mov
into
fs
sbbl
aaa
adc
cltd
xor
add
jo
xchg
iret
push
jge
fisubs
enter
xchg
mov
add
add
add
pop
aam
aad
xor
repnz
mov
loopw
mov
ficomps
pop
xchg
push
outsb
outsb
add
lock
sbb
sub
popf
jge
imul
adc
mov
aaa
cli
sbb
add
dec
xchg
rclb
repz
ljmp
icebp
push
mov
xor
mov
outsl
xchg
jmp
xlat
popf
cmp
movsb
and
xchg
rcrb
arpl
out
sub
xchg
push
sub
aas
or
loop
sarb
jp
xchg
out
stc
call
test
loopne
shrb
pusha
xor
xchg
pusha
xchg
outsl
sub
pusha
repz
push
push
pop
and
ret
pop
aas
push
roll
pop
cmc
mulb
cmp
inc
sbb
lods
xlat
mov
sub
shlb
xchg
stos
and
pop
mov
ljmp
xor
xchg
lcall
cmpsb
push
push
addb
and
add
and
or
mov
popf
mov
jmp
mov
movsb
cwtl
mov
test
inc
test
mov
mov
sti
repnz
leave
mov
aam
mov
add
mov
dec
inc
sbb
out
mov
ja
cs
jnp
cmpsl
negl
xchg
mov
fstps
cltd
cmp
dec
mov
fists
xor
jl
out
adc
andl
sub
sub
int
dec
test
or
lret
push
shll
jle
cltd
lahf
push
dec
push
cmp
test
jbe
mov
loope
add
cmc
push
div
aas
xchg
pop
fdivl
cmp
arpl
fdivrl
mov
pop
mov
push
enter
js
xlat
push
cmpl
int
movsl
mov
xchg
dec
or
and
in
push
bound
out
pushf
lcall
shlb
shrl
mov
xchg
into
xchg
sub
test
mov
mov
in
jo
scas
xor
pop
or
inc
mov
test
clc
adc
paddusb
cvtps2pi
std
in
out
pop
push
sbb
fildll
insb
fldl
mov
mov
adcl
and
mov
and
bound
add
xchg
and
and
rcrb
orb
lahf
inc
mov
pop
ret
mov
fs
mov
fwait
jl
xchg
jp
mov
lret
lahf
in
and
divb
int3
push
jb
push
adc
lock
movsl
xor
cli
call
jno
xchg
push
mov
push
jno
hlt
lds
fadds
sbb
mov
ss
incb
mov
jmp
mov
mov
les
xor
popa
cld
fisttpll
fnstenv
test
mov
cmp
ss
leave
cmpsb
sbb
sbb
mov
lds
mov
cmp
stos
ret
hlt
int
jl
push
jbe
data16
lea
pushf
sbb
aas
mov
push
movsb
pop
adc
addr16
stos
ljmp
mov
jne
push
iret
xchg
xchg
mov
enter
fildll
push
pop
rorl
jb
out
mov
cwtl
jno
sub
cmp
xlat
push
jge
pop
xchg
ror
mov
add
push
jae
and
mov
pop
add
inc
dec
inc
ds
stos
aad
jge
mov
filds
cld
int
stc
xchg
jnp
or
jecxz
pop
int3
outsl
sub
xor
sub
cmp
in
rcrl
addr16
setle
lds
fists
pop
jp
insl
sub
js
xchg
pop
mov
or
lcall
and
mov
cmc
push
dec
sub
mov
arpl
out
mov
pop
cmc
dec
mov
sub
in
inc
mov
dec
and
sub
inc
pop
inc
in
xor
push
push
jns
repnz
jle
rolb
jns
daa
dec
dec
std
sbb
shl
dec
rorl
addr16
sbb
pop
xor
jmp
push
xor
adc
jle
push
pop
ljmp
and
sti
setae
push
icebp
mov
popa
fwait
ss
out
mov
cwtl
subl
ret
adc
pop
cltd
aaa
pop
nop
sbbb
hlt
push
ja
scas
inc
mov
jae
fbstp
popa
call
sbb
ljmp
xor
jbe
mov
mov
ss
cli
mov
cmc
in
and
test
dec
icebp
jl
in
addr16
inc
jg
or
mov
mov
jmp
jmp
aad
xchg
fstpt
js
cmp
outsl
push
pusha
lea
mov
lock
je
or
psrlq
clc
into
repz
in
dec
cmpsl
or
daa
cmp
adc
push
jb
lds
xchg
push
xchg
mov
dec
sbb
mov
xor
push
das
xchg
adc
nop
inc
ficoml
imul
arpl
sbb
jb,pn
cld
das
mov
jge
pushf
inc
cmc
sbb
fidivrl
lods
shlb
cmp
xchg
xor
mov
adc
push
inc
fxch
iret
sub
aas
inc
ds
fnstenv
or
mov
rcr
popf
push
dec
jno
xchg
sub
scas
into
jnp
es
inc
cmp
das
imul
data16
adc
outsl
je
hlt
ljmp
and
push
out
addr16
ljmp
jb
data16
sbb
aaa
dec
int
adc
popf
cmpsb
sbb
leave
out
mov
je
dec
popa
lods
or
fwait
loop
fucompp
mov
inc
inc
push
jle
push
sbb
ret
gs
iret
in
cmpsl
leave
std
mov
das
mov
int3
in
sub
xchg
ljmp
add
xor
adc
mov
xor
push
stos
or
movsb
inc
es
xchg
mov
outsl
push
sub
xchg
mov
mov
and
mov
leave
xchg
imul
lock
arpl
xchg
pop
mov
or
fstpt
lock
scas
jb
stc
mov
loop
xchg
fcmovu
jle
ljmp
pop
or
xchg
cmc
lea
loopne
add
movsb
lods
aam
rclb
outsl
inc
pop
cltd
sub
lcall
aaa
movsl
outsl
jl
loope
popa
push
inc
loop
xchg
xor
inc
mov
and
lahf
mov
cwtl
je
jb
jb
adc
dec
out
out
fisttpl
outsb
mov
adc
in
xchg
stc
stos
jo
push
mov
xor
or
jle
test
sub
mov
mov
inc
pushf
rcr
fnstcw
shll
sbb
loopne
ret
hlt
and
int3
push
movsb
pop
mov
mov
cmpsb
leave
out
xor
js
enter
or
dec
pop
cltd
jae
jns
and
add
push
mov
sbbb
leave
push
push
gs
add
les
fdivs
dec
dec
idiv
dec
sub
jle
dec
mov
lret
stos
push
je
sub
es
gs
imul
push
call
je
mov
sbbb
xchg
cli
add
or
scas
dec
cli
in
sub
mov
mov
xchg
cmp
call
scas
imul
dec
pop
stos
push
ret
mov
rcll
or
xor
lea
or
inc
mov
adc
sahf
mov
test
cmp
pushf
mov
mov
adc
leave
clc
subl
dec
or
push
add
cltd
jbe
call
push
cmpsl
xor
push
cwtl
lret
mov
shll
mov
out
push
xor
xchg
ja
push
or
pop
sub
popf
xorl
repnz
mov
lahf
in
push
mov
dec
incl
cmp
icebp
jae
cmp
xchg
push
mov
xor
outsl
dec
in
xor
dec
push
int
lock
popa
sub
test
inc
sbb
mov
stc
push
sub
cltd
test
jo
fcompl
rolb
add
xchg
push
mov
outsb
mov
into
jge
addr16
cld
dec
pop
and
mov
and
les
mov
std
mov
andb
call
add
xor
adc
movsb
addr16
or
add
lcall
lea
and
and
pop
notl
in
test
mov
xlat
dec
dec
into
or
je
out
xchg
in
lods
out
xchg
sub
push
mov
cmc
cmp
aaa
xor
loop
add
add
popf
daa
mov
push
data16
jp
or
cltd
xor
push
jp
mov
cmp
int
xchg
sti
pop
xchg
jns
in
inc
cmpsb
pop
mov
fwait
cli
fdivl
push
bound
push
mov
popa
test
ret
out
mov
fistl
icebp
aaa
mov
dec
inc
mov
ret
jne
jnp
or
pop
push
shl
or
and
adc
sbb
xchg
loopne
pop
mov
xor
push
mov
jl
xchg
mov
or
sarl
test
je
and
pop
xchg
sarl
ret
insl
jp
fs
pop
imul
and
dec
sbb
push
into
dec
cmp
xorb
push
imul
fucomp
add
or
test
xchg
lods
sub
call
pop
dec
stc
or
pop
adc
push
pushf
mov
icebp
push
jmp
imul
mov
pop
sbb
sbb
dec
dec
pop
out
rclb
idivl
and
jbe
jb
or
mov
push
mov
inc
nop
stos
mov
loop
fmull
jno
mov
repz
movsb
cmp
inc
xlat
cmp
inc
inc
fs
pop
and
mov
rcrl
vxorpd
mov
andl
pop
movsb
pusha
lods
stos
outsl
add
and
jae
bndldx
adc
add
xorb
adc
pop
dec
rcrb
out
pushf
jmp
sbb
sbb
arpl
ljmp
pushl
cmc
mov
mov
xchg
lods
xchg
mov
mov
hlt
decb
add
sti
dec
xchg
loopne
dec
xchg
fidivs
add
inc
mov
jg
mov
pusha
adc
dec
in
push
sub
pop
scas
cmp
insl
dec
cltd
mov
xchg
push
xchg
pushf
fistps
cmp
icebp
inc
stos
pop
lods
test
sub
dec
test
shll
mov
mov
jno
imul
cmpsb
lret
pop
aad
sub
jecxz
cmp
fucomip
mov
adc
dec
sbb
lahf
sbb
cmp
mov
xor
out
cmpsl
pop
sbb
in
addr16
push
loop
fildl
popf
sub
mov
lea
or
push
mov
shlb
pop
xor
mov
je
rorl
sub
pop
cmp
stos
mov
pop
jl
xchg
cmp
inc
adc
push
rcrl
ret
xchg
cld
inc
push
int3
xorl
or
loope
cmp
pop
sub
std
scas
pop
add
mov
imul
push
inc
mov
arpl
mov
mov
ds
jg
fyl2x
xchg
cli
push
popf
je
cmc
imul
popf
addr16
mov
fistps
aas
sahf
les
mov
in
add
or
or
sub
cmp
gs
sbb
lretw
int
add
push
aas
mov
mov
stos
decl
push
xor
insl
lods
adc
adc
fiadds
lods
jg
movsb
adc
sbb
inc
mov
mov
stc
lods
stc
or
push
mov
outsb
jo
add
push
arpl
stos
xor
mov
xor
mov
jecxz
stos
ret
je
sbb
fists
jmpw
iret
lret
sbb
mov
aam
xchg
imul
jno
leave
xchg
adc
push
and
lods
dec
sub
call
loopne
add
cmp
add
cwtl
add
in
in
dec
xor
mov
jo,pt
mov
sub
pop
mov
nop
dec
fsubrs
cmpsb
push
rclb
aaa
sbbl
pop
pusha
das
xchg
mov
or
adcl
pop
xchg
dec
cli
xchg
mov
cmpsb
fnsave
aad
lahf
jl
dec
xchg
pop
ss
cld
mov
mov
pushf
and
dec
pop
adc
test
in
enter
ret
imul
adc
shlb
mov
aas
dec
xchg
push
fsubs
xor
mov
cmp
popf
dec
and
xchg
lods
mov
cld
fcoml
or
lahf
pop
pusha
dec
in
dec
iret
inc
mov
inc
sub
jge
jp
adc
cmpsb
jbe
imul
movsb
inc
cs
pushf
push
inc
out
nop
xor
movl
lcall
mov
xor
xor
hlt
or
or
and
jle
or
add
xchg
mov
fstl
lret
fnstsw
leave
jns
push
add
mov
lds
out
jbe
insl
xchg
aas
xchg
and
iret
adc
insb
in
sbb
jp
dec
imul
push
push
or
mov
sub
inc
notl
sub
or
mov
pop
mov
dec
addb
ss
daa
test
add
fstpt
mov
fcompl
xor
xchg
aam
scas
lret
push
ffreep
stc
jnp
js
xor
mov
cld
sbbb
loope
out
aas
jecxz
cld
sbb
push
sbb
xor
or
dec
inc
test
fnstenv
jecxz
jecxz
loop
loope
adc
scas
ljmp
jp
jge
test
pop
mov
mov
mov
jns
aas
shlb
in
mov
inc
push
sbb
stc
sub
jns
rcr
add
out
test
enter
inc
mov
push
daa
es
popa
leave
subb
pop
inc
mov
call
inc
inc
push
insb
mov
add
mov
cmp
mov
addl
cs
jmp
das
stc
and
mov
mov
sbb
ret
imulb
sub
cmc
test
dec
iret
imul
in
pop
push
cmp
leave
test
pop
mov
sub
idivl
shl
mov
out
cmc
fmuls
test
sbb
popa
sub
and
mov
inc
cwtl
inc
clc
or
xchg
cld
pop
jne
jp
rclb
je
bswap
shll
pop
and
out
push
lea
push
lcall
mov
xchg
outsb
mov
inc
push
test
mov
xchg
jae
je
aad
xchg
repnz
sbb
xor
cli
dec
xchg
dec
dec
mov
inc
dec
repnz
dec
and
in
aad
popa
jmp
sbb
xor
xchg
jo
sti
fisubrl
mov
ret
loope
xchg
js
test
imul
adcl
repnz
add
jg
sbb
cmpb
or
lea
stos
pop
cmp
cld
inc
rol
xchg
xlat
push
jmp
mov
nop
push
push
mov
cmp
ja
bnd
int3
test
fcoml
adc
adc
add
jge
mov
add
sti
cli
lret
test
lahf
out
lcall
fwait
xchg
rolb
dec
ds
fsubrs
xor
jno
lret
jo
ret
lds
hlt
dec
test
lcall
mov
xchg
and
cwtl
ss
sbbl
sbb
inc
xchg
adc
or
dec
imull
fs
stos
int
mov
xor
jmp
push
sub
fcompl
cmp
pop
sbbl
mov
pop
fidivrs
xor
mov
add
inc
mov
cmp
xlat
mov
lahf
lcall
lret
mov
bound
fnsave
les
mul
mov
jo
repz
push
mov
fcompl
add
xlat
dec
movsl
or
icebp
enter
lea
mov
loopne
das
xchg
cmp
fstp
hlt
xor
fdivl
nop
icebp
movb
xchg
iret
sahf
jb
ja
lods
cmp
jge
mov
dec
test
hlt
test
andl
add
mov
and
mov
or
ret
jge
scas
xor
sbb
fs
in
or
push
lock
icebp
xchg
push
cmp
cld
mov
mov
lods
mov
scas
aas
sub
mov
sub
pop
dec
shll
insl
int3
mull
loope
jo
pop
ljmp
or
in
mulb
push
xchg
sub
jge
xchg
inc
adc
mov
sarl
fdivrs
cmp
into
push
mov
hlt
movsb
pushf
in
adc
fs
push
inc
pop
hlt
or
mov
xchg
loope
mov
cmp
lcall
out
ficoms
jae
jb
pop
mov
cs
jecxz
imul
leave
xor
addl
add
inc
aas
int3
jge
cli
mov
enter
stc
cmc
rorb
xor
add
lods
sbb
adc
fisttps
and
mov
je
mov
shl
jmp
mov
ret
xchg
fdivs
mov
xor
shlb
repz
iret
imul
testl
push
jne
or
mov
push
jae
cli
dec
icebp
xchg
jne
ret
mov
in
sub
test
jbe
pop
sbb
add
hlt
dec
outsb
mov
dec
ret
add
sub
in
push
adc
mov
xchg
dec
xchg
enter
and
dec
pop
scas
push
jge
jo
sub
dec
sub
stc
mov
mov
sbb
out
or
inc
nop
shll
imulb
lcall
jb
dec
mov
mov
mov
pop
divl
mov
jmp
pop
xlat
pop
sub
mov
mov
into
jb
mov
and
aaa
cmpsl
fiaddl
fiadds
arpl
outsl
cmp
ss
and
xor
lcall
mov
ds
movsb
stc
or
loope
lea
in
outsl
imul
daa
mov
aaa
add
stc
ret
dec
call
lea
xchg
cmpsl
rcll
mulb
cli
fs
jmp
mov
xor
jae
xor
roll
add
call
mov
jg
das
xchg
pop
fisubrs
lds
mov
fcomi
aam
shrb
push
sti
push
pushf
push
jae
js
xor
aaa
adc
loop
shll
scas
ljmp
dec
in
jmp
push
fs
movsb
movsl
pop
add
pop
clc
lods
cmpsb
roll
dec
or
push
sarl
mov
scas
int3
mov
mov
ds
pop
xor
cwtl
push
ror
xchg
sbb
sub
icebp
dec
xchg
call
dec
jmp
mov
clc
xchg
and
test
mov
pop
aas
pop
in
lods
aas
loope
je
nop
sbb
xchg
push
mov
jae
push
or
inc
xchg
dec
pop
jo
cmp
lahf
jp
sub
rorb
lahf
xor
int3
add
adc
rcr
cs
pop
test
addr16
xchg
stc
sarl
jnp
sub
cmc
in
xchg
aaa
cmp
out
sbb
pop
lods
xchg
xchg
addr16
test
or
addr16
inc
in
push
cld
pop
push
bound
lahf
cltd
popf
sbb
pop
mov
inc
aas
and
test
ret
cld
jge
cmp
addr16
xor
adc
xor
cmp
mov
mov
sbb
and
push
stos
adc
xlat
enter
cmp
adc
lret
lea
mov
push
mov
sti
xchg
push
das
pop
ss
push
dec
fisttpll
xor
dec
push
dec
jl
or
xchg
cmp
xchg
mov
call
cmp
shlb
and
repnz
addr16
fidivrl
push
hlt
sti
icebp
and
cmp
lret
out
cltd
inc
xchg
int
mulb
cltd
fsts
push
ja
jno
xor
stos
imulb
cmp
iret
mov
inc
mov
pusha
xchg
or
jge
cld
ret
popa
and
lahf
pop
incl
lods
mov
or
sti
arpl
cmpsl
fstp
mov
pop
cmp
jmp
push
sti
sub
pop
xchg
push
or
sub
dec
dec
lea
push
pop
mov
mov
hlt
push
fldenv
cmc
test
mov
pop
jno
int
xor
xchg
xchg
jno
jge
js
push
dec
mov
push
lcall
mov
inc
rcrl
inc
inc
in
in
mov
xchg
rcll
adc
or
jae
gs
jb
imulb
insl
ror
dec
jne
push
pop
adc
mov
sub
adc
push
and
lds
adc
test
lcall
inc
inc
jmp
sub
lock
test
cltd
mov
sbb
ret
repnz
jns
cmp
cwtl
scas
cltd
movsl
mov
and
or
and
cmp
mov
sbb
jl
pop
repz
icebp
or
imul
mov
movl
movsb
aad
mov
add
je
push
pop
out
and
sub
xor
js
mov
lods
in
out
mov
inc
sti
pop
sub
push
and
outsb
pusha
add
mov
inc
jns
jbe
pop
adc
nop
dec
dec
mov
pop
xchg
or
addr16
imul
mov
movsb
push
and
dec
rolb
loop
outsl
pop
in
push
fsubs
into
data16
into
lea
lods
iret
push
movb
mov
xchg
inc
subl
out
mov
sarb
pop
push
sbb
mov
jae
je
cmpl
push
in
imul
xor
movsl
ret
addr16
call
pushf
hlt
bt
xrelease
xor
je
es
out
adc
cmp
imul
mov
inc
mov
push
xor
jne
pop
ss
data16
or
scas
out
subb
insb
mov
sub
gs
mov
add
stos
cmp
test
sub
add
fwait
push
loope
push
pop
subl
repz
add
lock
cs
mov
mov
push
inc
mov
or
lods
push
push
inc
push
outsb
cmpsb
lahf
leave
mov
call
call
in
dec
pushf
jmp
add
cmp
xchg
sbb
cmc
push
push
push
add
popf
std
loope
orb
cwtl
mov
lods
inc
outsb
push
sbb
mov
sub
pop
mov
insb
push
andl
pop
add
cmpb
cwtl
test
xchg
std
out
int
in
outsl
cmp
add
loopne
imul
mov
cmp
imul
enter
cmp
dec
push
ds
jecxz
dec
movsb
xchg
xchg
idivb
jo
clc
sbb
mov
pop
pop
xorl
xor
insb
cmp
jg
dec
add
jb
xor
popf
inc
mov
inc
jb
outsb
in
push
int3
or
jle
jge
jge
jmp
leave
mov
sbb
and
mov
loop
gs
int
jnp
int
hlt
ljmp
mov
cmc
push
mov
push
int
ret
xchg
mov
cmpsb
cmp
test
or
sbb
cs
lahf
sahf
or
dec
testl
jecxz
repnz
and
mov
mov
sqrtps
pusha
inc
add
rcrl
int
ja
mov
test
sub
addb
jno
test
dec
and
add
roll
ret
xor
inc
arpl
out
hlt
add
enter
adc
sbb
test
sub
loope
mov
push
sbb
mov
push
iret
jno
out
stc
loop
addb
ja
inc
std
inc
fdivs
pop
cmc
inc
pop
cwtl
shr
inc
push
mov
mov
mov
and
ret
aad
addr16
adc
fsubrs
call
icebp
pushf
in
xchg
pushf
pop
loop
lahf
mov
ds
mov
push
mov
cmp
fwait
cld
imul
xor
inc
test
jl
or
adc
add
inc
and
and
inc
in
jb
mov
in
dec
dec
xchg
mov
sub
cmp
shlb
jbe
jbe
sub
push
xor
pop
in
fbld
js
inc
scas
xchg
mov
push
and
inc
xchg
aad
lret
addr16
sub
dec
mov
inc
and
mov
daa
push
hlt
jbe
jbe
rolb
testl
push
or
rcrb
inc
mov
dec
mov
shll
outsb
jne
xor
mov
push
adc
xchg
xor
pop
jg
and
popf
mov
repnz
xchg
push
xchg
fistpl
or
jbe
fsts
jne
bound
repnz
clc
adc
mov
outsl
andl
ljmp
gs
jecxz
ret
mov
mov
popa
mov
outsl
fistl
push
xchg
xor
and
mov
inc
jmp
jl
fs
js
mov
push
or
mov
cmp
mov
and
lret
push
out
movsl
or
mov
jnp
mov
xchg
test
cmp
pop
mov
sti
mov
jno
es
inc
cmp
add
mov
cmp
jo
pushf
in
into
and
mov
ret
and
rclb
jmp
push
cmp
fldz
pop
popa
xor
les
lods
xor
sub
mov
mov
idivl
mov
or
xor
xchg
mov
aam
movsl
popa
in
dec
dec
enter
jg
pusha
and
ret
cld
mov
cmc
sarl
js
scas
orl
dec
test
mov
in
arpl
in
cmp
sub
cs
leave
fwait
inc
mov
inc
lea
fidivs
sbb
jbe
mov
repnz
lret
iret
negl
fwait
or
inc
dec
mov
mov
popa
xor
push
sahf
addb
icebp
and
inc
in
ds
mov
pop
lods
das
adc
add
out
negb
jb
mov
ret
xor
inc
xlat
xchg
and
push
sub
and
push
jbe
mov
fildll
sub
hlt
pusha
imul
pop
movsb
add
and
xor
cmp
out
sbb
sub
in
ja
insb
adc
je
ds
push
out
push
aad
or
push
mov
arpl
cli
pop
cmp
cmovle
xor
popf
add
gs
addr16
shl
push
mov
jg
test
cwtl
mov
mov
jne
imull
mov
ljmp
cmp
adc
mov
scas
sahf
inc
mov
popf
shrb
pop
push
test
dec
aad
xchg
push
scas
fdiv
pop
hlt
adc
mov
push
cmp
enter
nop
loopne
popf
push
les
leave
sbb
jae
adc
inc
movsl
es
jo
sarb
push
jecxz
xchg
xchg
repz
imul
push
aam
lret
pop
and
jg
pop
xchg
xlat
insb
addr16
test
shll
out
fldl2t
push
out
icebp
cmpsb
stos
imull
add
add
push
movsl
imul
gs
mov
push
or
push
popl
inc
push
xor
jp
or
xchg
shufps
mov
mov
mov
dec
cltd
pop
subb
sub
xor
adc
test
add
out
cmpsl
dec
mov
mov
mov
push
out
cmc
scas
xchg
xchg
jl
stos
shll
sub
ja
jmp
es
xlat
cwtl
out
sub
mov
xor
cmp
stos
movsl
je
into
ss
dec
enter
add
pop
xor
sbb
and
pusha
fisttpll
pop
arpl
mov
cld
leave
xor
in
pop
rcr
jne
or
iret
pop
in
test
stos
into
fldcw
cmpsl
dec
test
loopne
pop
adc
cmp
dec
in
cltd
inc
clc
imul
pop
add
adc
das
mov
xor
and
push
and
xchg
xchg
and
imul
std
imul
decl
int
pushf
or
test
dec
mov
icebp
outsb
imul
ja
or
es
sbb
push
xchg
or
xchg
andb
dec
xlat
add
in
mov
mov
push
jns
shll
imul
in
mov
aad
pop
dec
add
mov
dec
aad
aas
pop
adc
iret
xchg
movsb
push
mov
fsubrs
xor
jb
cltd
cmpsl
outsb
cmc
jb
mov
rcll
mov
xor
ja
fcompp
mov
inc
lret
ret
dec
adc
bound
fst
pushf
sub
cli
incl
sub
xor
aam
push
bound
push
and
into
adc
stos
cmpb
inc
sysret
pop
adc
lret
pop
add
pop
sbb
dec
dec
hlt
cwtl
fnstcw
mov
mov
js
sub
xchg
call
into
aad
rcll
and
xlat
icebp
aaa
lea
mov
xchg
mov
hlt
mov
movsl
das
push
cmp
xor
clc
or
mov
inc
add
xlat
push
mov
out
fstps
push
iret
cltd
fdivrs
shll
xchg
mov
and
pop
jno
mov
mov
xchg
jmp
daa
inc
aam
insl
jge
adc
adc
add
out
mov
pop
or
mov
lret
stc
std
cld
sub
push
pop
or
jge
push
mov
fstp
cwtl
aaa
stc
lahf
jne
jp
repz
fs
les
or
jp
cmp
add
dec
call
jecxz
mov
sub
inc
sub
or
out
mov
push
push
inc
sti
add
sub
pop
dec
xor
shlb
sub
add
sub
add
jmp
dec
cld
mov
pop
test
cmpsb
lahf
cli
loopnew
jl
imull
push
out
add
shll
imul
mov
loopne
imul
nop
pop
xchg
imul
xor
sub
or
pop
add
insb
mov
int
andl
fbstp
mov
xor
in
js
sbb
pop
enter
fdivrp
popa
xor
inc
sub
loop
enter
lahf
bnd
shlb
mov
push
dec
pop
int
push
faddl
sub
cs
or
push
sub
into
push
in
lock
push
adc
test
ja
rcll
mov
pop
shrb
js
pop
jo
mov
sbb
cmp
das
mov
cmp
lock
or
mov
xor
jb
divb
mov
popa
lahf
scas
dec
xor
cltd
sahf
aad
daa
and
bound
sub
js
inc
outsb
cltd
add
mov
aad
add
jmp
inc
orb
mov
dec
out
xlat
das
inc
out
mov
stos
in
push
arpl
out
mov
ret
lods
xor
add
in
cli
pop
dec
jge
imul
cmpsb
xchg
andl
pop
push
mov
xor
loopne
clc
lret
sbb
inc
addr16
icebp
jp
stc
imul
or
and
nop
cmpsb
ds
mov
pop
add
jle
in
in
aam
mov
pop
pop
gs
cmp
je
sti
xor
sbb
sbb
jnp
leave
cmp
add
lods
push
jp
mov
movsb
push
jle
jp
mov
push
dec
adc
dec
xor
arpl
cmpsb
movsl
ja
dec
push
push
xchg
fs
imul
or
add
xchg
or
dec
jmp
outsb
fs
les
sbb
sbb
pop
lods
popf
les
sub
inc
sbb
int3
mov
mov
lods
jb
mov
inc
mov
pop
fldt
aaa
jbe
inc
or
jecxz
jp
inc
cmp
push
inc
mov
xor
lahf
jp
in
fcomps
imul
inc
jbe
sub
sbb
and
hlt
mov
aam
mov
push
lahf
pop
cld
pop
inc
and
outsb
imul
je
inc
js
sub
push
fucom
jno
jb
jle
data16
fs
pusha
nop
sbb
cmpsl
mov
dec
aaa
shlb
pushf
lods
lret
sbbl
movsl
push
ds
repnz
mov
and
sbb
pop
push
enter
mov
jmp
lock
insl
add
adc
fildl
fabs
sbbb
dec
or
add
or
sbb
xlat
cmp
leave
repz
xchg
fnstenv
fldcw
jecxz
sub
push
cmp
sbb
lods
jle
mov
push
inc
loopne
ret
xor
jg
and
es
jbe
rcrb
or
mov
jbe
and
sbb
fcomps
std
sarb
cmp
dec
sbb
cwtl
rol
rcr
fwait
pop
cmp
fisttps
and
add
lock
pop
sub
sub
cmpb
cmc
stos
xchg
mov
mov
jbe
lcall
jo
rol
dec
mov
fcomps
loope
rolb
test
mov
aad
addr16
mov
scas
jp
stc
xorb
inc
sbb
xlat
sub
xchg
call
sbb
xor
jb
nop
sbb
in
add
test
popa
add
mov
xchg
cs
mov
cmp
jnp
jl
sbb
mov
jnp
aam
in
call
or
and
inc
sbb
sbb
outsb
sbb
xor
mov
rolb
aam
ss
mov
mov
sbb
mov
dec
cmp
mov
test
insb
xor
dec
ss
dec
scas
orl
xor
sub
jle
mov
in
ficompl
enter
push
cmp
imul
add
xor
and
shrb
clc
push
sbbb
gs
fs
daa
sahf
call
cmp
fcoms
xcrypt-cfb
cmpsl
out
cmc
in
xchg
jl
xchg
repnz
pusha
imul
push
js
lods
mov
jecxz
sbb
sbb
inc
mov
out
cmp
mov
jl
leave
mov
cld
mov
mov
inc
xor
shl
cltd
jp
stos
in
mov
jp
mov
mov
fstpt
ja
pop
in
dec
adc
sbb
outsb
jb
scas
out
and
dec
push
sub
lods
cltd
ffree
push
aam
mov
push
dec
inc
dec
inc
sub
fdivr
ficoms
cwtl
sbb
lahf
lret
inc
int
xchg
in
sub
sub
hlt
mov
aas
shlb
out
mov
popf
lcall
andl
pop
andl
mov
jp
cmpsl
jmp
mov
cmp
mov
jle
sahf
inc
inc
jecxz
cmpsl
pop
and
mov
jno
insb
cli
or
jle
pushf
pop
data16
mov
push
adc
imul
jp
das
push
add
adc
pop
sub
inc
lea
sti
fbstp
mov
inc
xchg
loope
test
aas
imul
fisubrl
inc
inc
aad
fisubrs
movaps
ss
into
sub
mov
cmp
out
mov
mov
inc
mov
pushf
dec
mov
sub
adc
mov
es
inc
loope
and
rclb
pop
mov
aad
test
jns
ss
ds
pop
mov
push
std
dec
jae
hlt
test
ja
movb
mov
into
push
int3
sub
xchg
mov
stos
imul
enter
xchg
xchg
sub
inc
mov
popf
enter
add
inc
xor
sub
mov
jae
mov
dec
and
fldcw
fisubl
jl
insb
sbb
popl
leave
movsb
in
mov
and
ficoms
shlb
xor
mov
cmp
fstpl
ror
add
mov
fs
icebp
lods
inc
jmp
lea
lea
std
mov
mov
out
jbe
pop
fxch
je
lock
push
adcb
inc
mov
sub
frstor
stos
icebp
fiaddl
iret
addl
push
movsl
mov
fwait
dec
or
add
push
fs
sti
loop
scas
test
dec
cwtl
jae
push
jg
lret
cmpsl
cmp
imul
mov
stc
xchg
xchg
sub
aam
sbb
xor
jns
and
and
xorl
aam
in
xor
and
loopne
arpl
imul
xchg
mov
jl
pop
stc
movsl
cmp
or
or
xor
pop
stc
iret
fwait
scas
dec
fldl
pop
out
roll
out
jbe
fcoml
or
inc
mull
mov
rolb
mov
test
clc
shrb
mov
push
fcmovbe
lods
imulb
cmp
adc
into
in
sub
es
jle
in
jae
ss
mov
sub
jmp
jmp
xlat
enter
out
mov
xor
cmpsb
jl
and
add
pusha
xchg
cmp
cmpsl
mov
adc
jnp
mov
clc
add
test
xor
and
loopne
into
mov
test
push
mov
sub
push
sahf
shlb
xchg
mov
stos
outsb
ficoml
jl
pusha
inc
out
inc
je
loopne
daa
loopne
add
add
movsl
es
into
mov
ret
inc
xor
cmp
xchg
adc
pop
out
dec
push
mov
loop
jmp
mov
pusha
das
lds
movsl
cmpsl
into
adcl
sbb
fdivrs
or
mov
add
mov
insb
fisttpl
lret
xor
in
mov
rcrl
mov
ss
ret
in
or
xor
xor
xor
aad
dec
sub
je
dec
inc
adc
inc
fisubrs
test
or
jecxz
in
incb
out
push
fstps
flds
inc
scas
push
out
mov
cmp
setle
xor
popf
xchg
mov
adc
mov
mov
fucomi
pop
xor
int
stc
inc
bound
mov
repz
cmp
add
sahf
lret
aaa
pop
and
adc
fwait
push
dec
out
scas
in
test
ljmp
gs
je
pop
ds
nop
jae
dec
mov
adc
cltd
movsl
std
push
or
je
cltd
call
add
mov
xor
bswap
mov
mov
sti
pushf
into
cld
adc
adc
inc
pop
sahf
sbb
inc
inc
repz
aas
dec
stc
fldl2t
hlt
pushf
mov
inc
sarb
mov
mov
push
add
xor
int3
sub
cmp
xchg
mov
ret
jae
or
repnz
sbb
pushf
add
gs
jae
hlt
in
dec
mov
in
push
adc
mov
adc
inc
ds
pop
jge
xchg
jb
mov
icebp
pop
orb
cmp
popa
xchg
jbe
jg
jbe
inc
add
enter
je
les
pop
movsl
mov
sbb
mov
xor
push
xchg
xor
pinsrw
sbb
std
fimuls
jl
inc
cmp
mov
add
incb
aad
or
mov
fiadds
lret
dec
mov
xchg
cmp
mov
sub
std
fldcw
sub
addr16
in
xlat
pop
stc
out
mov
sbb
popf
jp
gs
les
mov
pop
in
jo
sahf
pop
mov
pop
in
repnz
jmp
mov
xchg
jl
call
mov
lock
scas
aaa
xor
push
and
fmuls
out
dec
andb
pop
mov
verr
enter
xor
xchg
sub
xorb
lds
popf
adc
and
mov
sahf
push
testl
jge
xchg
jmp
arpl
idiv
cmpsb
out
mov
fcoms
ss
movsl
inc
imul
mov
cmp
mov
sub
cld
mov
icebp
jb
jbe
jp
lods
jb
fldenv
sbb
gs
mov
xlat
clc
shlb
mov
jle
ljmp
push
test
loop
test
decl
mov
lret
jl
xchg
sbb
negl
pop
dec
sub
cmp
xor
adc
lods
xchg
push
fwait
scas
and
or
or
xor
pop
aaa
dec
mov
fcompl
adc
mov
jb
aad
and
xlat
pusha
fidivs
sbb
sub
sub
in
or
lods
and
xor
push
mov
fstps
das
adc
sbb
lea
jo
jb
and
sti
insb
push
iret
dec
rolb
or
fisttpl
sar
push
nop
sub
mov
fdivs
lret
and
scas
mov
cmp
sbb
push
in
orb
sub
hlt
jo
aaa
dec
push
ret
inc
mov
jno
and
enter
inc
xchg
clc
and
xor
xchg
push
imul
and
in
sbb
std
fs
adc
push
loope
aaa
aas
push
mov
scas
fcoms
xor
daa
push
and
in
sti
scas
inc
pop
aas
aam
clc
mov
push
je
sub
stos
nop
pop
pushf
rcr
orl
mov
xor
outsl
lods
movsl
int3
xor
push
mov
imulb
mov
mov
fidivl
dec
xor
ficompl
jl
imul
mov
cs
cmp
dec
dec
fadds
push
ljmp
sahf
movl
inc
imul
out
ret
jns
adc
dec
pop
outsl
cmp
xchg
andl
mov
push
mov
sbb
scas
push
fnstenv
sub
pop
push
add
lock
xor
inc
aas
fs
test
int3
into
and
sub
and
mov
or
add
push
ja
mov
int3
adc
jnp
pushf
sbb
or
pop
jae
cmc
mov
ficoms
or
aas
jo
or
pop
popa
fnstsw
psubusw
dec
fcmovu
xchg
sbb
or
out
cmpsl
gs
mov
mov
mov
sbb
lahf
push
push
mov
les
bound
mov
addb
fs
test
pusha
inc
dec
das
lret
je
int
and
lea
mov
stc
imul
sahf
pop
ret
pop
or
xor
aam
pop
fchs
lret
mov
cmc
ret
or
lock
push
test
lahf
pop
inc
inc
aas
xchg
out
ret
jl
cmp
mov
aad
aas
sbb
or
nop
vucomisd
xor
ljmp
push
in
jno
cmpsb
je
cli
je
and
jge
arpl
jno
push
sub
js
dec
inc
in
jne
ja
dec
test
sbb
xchg
in
cmpsb
and
or
aaa
and
flds
outsb
out
jo
mov
xchg
daa
popa
or
cmpsl
sub
jl
add
aas
fstpl
push
stc
mov
adc
orl
incb
int
cmc
inc
mov
pop
nop
repnz
or
add
aaa
insl
fildll
shrb
add
add
and
in
rol
dec
sbb
adc
sub
test
lahf
sbb
aas
dec
icebp
mov
xor
icebp
test
lods
shrl
addr16
inc
lods
mov
rcr
and
push
out
inc
mov
xchg
lea
pop
leave
std
clc
lret
cwtl
jo
fwait
inc
dec
mov
out
je
jmp
mov
xor
in
mov
cs
jmp
dec
out
lret
imul
aaa
xchg
jns
lahf
sti
aas
lock
popa
rcrl
inc
push
and
and
je
pop
clc
icebp
fistps
cmp
jmp
push
pusha
sahf
inc
clc
aas
cmp
xor
pop
pop
fists
lods
aam
jne
lods
sub
push
or
inc
sti
call
arpl
mov
ficomps
dec
int
dec
dec
adc
imul
mov
push
xor
outsb
pop
add
fs
or
jb
bound
lcall
je
sahf
stc
incl
outsl
mov
mov
into
inc
cwtl
mov
xor
and
sti
xchg
ds
cltd
fmul
sbb
popa
bound
pop
out
cmc
nop
jo
pop
popf
call
mov
mov
cmpsb
outsb
pop
es
push
sbb
out
adc
sbbb
pop
clc
xlat
mov
push
cld
das
sbb
leave
sub
data16
into
ret
mov
lods
scas
push
ss
stc
ds
das
fimuls
jb
jns
cld
mov
push
imul
push
inc
jne
movsl
sub
sub
adc
xchg
sbb
aaa
mov
or
pusha
out
adc
and
add
inc
mov
push
cltd
xor
push
ret
nop
xchg
cltd
pop
lock
push
jb
clc
jno
idiv
pop
and
mov
ja
data16
add
cs
inc
xchg
xchg
cwtl
push
pop
insl
sti
lock
mov
fldl
inc
call
int
or
inc
and
cmp
push
fdivrl
adc
popa
dec
lock
mov
lock
loope
imul
adc
add
add
ret
out
xchg
rcll
cmp
push
fidivl
pop
into
mov
push
inc
or
pop
push
inc
imul
fistpl
jg
mov
mov
cs
fisubs
push
push
scas
insl
xchg
pop
ds
dec
lock
in
pop
jb
nop
test
inc
sub
xchg
push
jae
cmp
fs
push
enter
scas
sub
push
out
subb
sbb
mov
push
mov
mov
fwait
mov
fnop
mov
pop
or
icebp
aad
cmp
inc
rcrl
repnz
cmpsb
inc
pushl
std
pop
sti
mov
aaa
jge
dec
loope
test
dec
std
data16
in
fcmovbe
andl
sub
call
xchg
xchg
int
and
decl
sahf
cmp
cmc
inc
push
int3
jns
add
lea
jb
jp
leave
cmpsl
push
xor
daa
cmp
xchg
dec
test
insl
je
shlb
mov
pop
adc
leave
sub
and
push
and
enter
in
pop
dec
dec
sti
add
out
rcrb
mov
dec
add
inc
ret
stos
push
icebp
or
and
jo
push
dec
xor
mov
mov
pop
xor
ss
push
jae
or
in
jo
clc
fimuls
mov
dec
ror
sub
sbbb
popf
fistps
test
imul
fnstcw
lcall
ud1
xchg
and
mov
sbb
adc
mov
jmp
or
addr16
adc
negb
std
inc
fcoml
int
pushf
pop
dec
pop
sbb
mov
dec
inc
in
popa
or
xlat
dec
les
inc
ljmp
or
cwtl
rcl
inc
push
fisubs
add
dec
imul
daa
out
push
mov
mov
aas
dec
adc
outsb
sub
int3
jl
incb
pushf
pop
sti
push
cmp
insl
daa
mov
push
or
xchg
movb
jge
out
std
add
push
ret
mov
push
and
insl
cli
leave
inc
inc
pop
dec
cmpsb
sbbl
pop
xor
loop
push
imul
dec
xor
out
loopne
and
sub
pop
xchg
fdiv
jnp
or
adc
lods
test
or
push
mov
mov
push
cli
lock
test
cmp
push
rolb
sbb
idivb
or
rcr
lahf
push
jno
shrl
sbb
lods
pop
repnz
fucomi
test
dec
test
adc
mov
test
call
xor
outsb
add
cs
xchg
mov
sbb
xchg
push
inc
mov
or
cltd
inc
cmp
bound
and
orb
mov
mov
hlt
repz
loope
fcmovnb
mov
xchg
std
add
shrl
push
sbb
pop
and
inc
bound
sbb
rclb
icebp
push
lock
and
ljmp
popa
push
inc
clc
pusha
xchg
cli
pop
jb
push
and
xor
ficoms
jecxz
pop
fs
insl
outsl
xchg
cmpsb
enter
mov
js
pushf
dec
test
dec
scas
mov
fstpt
shrl
adc
inc
sbb
push
clc
pop
inc
dec
test
jl
hlt
and
imul
sbb
sbb
sahf
call
adc
addr16
outsl
pop
andl
pusha
pop
jbe
mov
xchg
fs
xchg
rcrl
jl
hlt
mov
xchg
xchg
push
jb
push
imul
jg
mov
mov
dec
adc
or
xor
mov
xchg
cmc
add
scas
adc
cmp
vminsd
cmpsb
fistpl
js
rep
adc
or
mov
daa
pop
cli
arpl
add
arpl
scas
inc
insl
insl
out
jns
pop
mov
test
xchg
in
sarb
mov
jecxz
pop
insl
mov
add
or
push
leave
ds
adc
dec
sahf
push
push
cs
out
lds
push
sbb
inc
setle
push
sub
or
adc
dec
daa
mov
lods
lahf
xlat
push
or
jg
ret
adc
jo
loope
xchg
pop
imul
pop
loopne
stc
test
or
cmp
and
lods
mov
xchg
lcall
push
pusha
sub
add
dec
dec
in
orl
mov
cs
push
dec
es
jecxz
hlt
adc
bnd
ds
sub
jnp
mov
jge
mov
mov
mov
or
das
mov
aad
mov
loope
int3
scas
jg
push
rcrb
cltd
adc
xchg
ja
pop
mov
fidivs
push
sbb
sbb
push
and
sbb
sbb
js
or
add
jb
test
sub
dec
mov
aam
out
inc
xor
fadd
xor
lods
imul
out
push
or
inc
insb
mov
lods
xor
cmpb
mov
xchg
add
ljmp
aam
adc
dec
test
lock
xchg
arpl
push
ds
mov
stos
sbb
jns
cmp
jo
mov
int
mov
or
pop
adc
out
mov
push
xchg
pcmpgtw
xchg
xchg
into
dec
sub
sub
fadds
push
inc
ja
mov
cltd
stos
cltd
test
add
mov
push
adc
imul
xchg
sub
scas
fidivs
jo
pop
jns
mov
cmp
ljmp
sub
or
aaa
dec
cmp
dec
ud1
mov
pop
mov
xchg
out
pushf
movsb
sub
xor
cmp
icebp
test
cmp
dec
fimull
ds
loope
out
pop
imul
in
mov
loopne
iret
push
push
inc
mov
outsb
or
mov
mov
mov
lret
fmuls
pop
pop
xlat
mov
add
iret
push
cmpsl
in
les
leave
and
and
xlat
and
ret
loope
pop
nop
imul
lods
mov
into
xchg
lods
mov
sbb
add
mov
ret
in
lret
or
shrb
cld
data16
pop
jb
jecxz
mov
sarb
dec
pop
cmp
jae
sub
loope
xchg
adc
xor
outsb
stos
ds
dec
jbe
mov
jmp
inc
lahf
scas
sbb
scas
lds
xchg
lock
dec
sbb
lds
jnp
mov
incb
mov
or
aas
jne
gs
adc
mov
neg
push
imul
aad
mov
lds
xchg
or
push
inc
fistl
ss
fildll
mov
mov
shlb
cwtl
add
add
push
fwait
cmp
fidivl
xchg
lret
loop
or
loope
ret
cmpb
xchg
test
ljmp
push
cwtl
shlb
mov
hlt
mov
adc
pop
mov
pop
popa
aas
pop
jae
mov
xchg
sub
mov
loop
popf
push
loop
lods
arpl
xor
cli
scas
and
xchg
fs
fs
lods
push
int3
repz
push
xor
push
enter
int
xor
stc
or
ds
xchg
xchg
test
mov
js
pop
fwait
mov
jmp
cld
clc
leave
inc
xor
and
dec
cmp
xlat
std
out
add
or
and
inc
xchg
or
cli
add
mov
fsubl
sub
mov
pop
sub
push
push
xchg
inc
mov
add
ret
jmp
sbb
inc
mov
mov
mov
mov
jecxz
inc
pop
stos
rclb
addr16
mov
jmp
insb
cmpsb
xor
aam
cmp
add
dec
mov
test
pusha
orb
or
movsl
mov
fs
sbb
mov
mov
stos
push
add
mov
xor
push
call
and
iret
add
cmp
jo
sbb
and
ss
addb
test
push
pop
or
add
cmc
inc
and
sbb
mov
or
mov
adc
popf
push
or
cmp
mov
int3
ret
lds
xor
aaa
test
fmuls
lods
inc
or
int
pop
addb
lret
xchg
jp
push
add
out
inc
mov
lea
sahf
jnp
in
cmp
insb
les
dec
aaa
ficoml
loope
insb
icebp
aad
cmp
test
cwtl
or
shll
adc
pop
mov
cmp
scas
popa
xchg
bound
fldl
rclb
or
cmc
pusha
popa
push
ljmp
cmp
dec
sub
jg
imul
adc
mov
mov
pop
xchg
pop
repnz
ljmp
push
dec
iret
aad
cwtl
or
jge
fwait
push
ds
inc
in
loope
mov
jne
jno
jne
arpl
sahf
push
pop
push
notl
insl
pop
push
pusha
jl
test
int
xchg
std
mov
jb
ret
ja
cwtl
xchg
fwait
mov
sbb
mov
imul
mov
push
cltd
add
mov
dec
jae
inc
aam
cld
cld
adcl
insl
push
xchg
add
pop
sti
movsb
call
fisubl
inc
cltd
sbb
sbb
fstpl
test
cmp
pop
push
clc
stc
out
jg
test
fldenv
jmp
pop
add
xor
and
es
mov
jb
std
inc
inc
add
adc
addb
imul
inc
pop
stos
js
or
sbb
les
inc
loop
sbb
in
mov
mov
mov
and
lods
adc
pop
scas
addr16
add
ret
ret
ljmp
jle
ret
imul
dec
cmovne
xchg
xor
icebp
outsl
pop
stos
cli
sub
add
cmp
sarl
sbb
push
jle
push
sub
mov
fsts
jnp
shl
xchg
scas
out
hlt
cmc
cmp
xchg
movsl
xchg
jle
aaa
sti
sub
mov
pushf
icebp
sub
sbbl
stos
sub
cmpsl
sub
mov
aaa
pop
shll
push
ja
sarl
dec
fldt
out
adc
mov
frstor
mov
mov
mov
enter
test
loopne
push
mov
sub
adc
lods
or
insl
adc
aaa
jnp
jbe
cli
inc
iret
adc
clc
add
mov
push
pop
xchg
inc
jge
int
pop
jmp
xchg
cmp
popf
sub
insb
in
add
push
hlt
divb
repnz
jle
sbb
leave
in
mov
sbb
xchg
xchg
jno
lock
ret
shl
std
test
mov
outsb
je
mov
xlat
push
inc
push
int3
sub
xor
adc
cs
jno
pop
mov
mov
jg
xchg
push
jnp
xor
xor
dec
xchg
pop
insb
xchg
xor
add
jmp
sarl
sub
mov
ljmp
fs
stos
cmp
push
add
scas
jb
inc
inc
pushf
and
arpl
mov
stos
inc
push
loope
cmp
and
xchg
inc
dec
inc
pop
jns
ljmp
popa
out
pop
cmp
cmp
fisubrl
cmp
cli
jo
xor
lret
clc
jge
jnp
int
push
outsl
outsb
icebp
in
pop
ret
jmp
dec
lods
jae
bound
fistps
rcll
rcll
push
in
dec
mov
je
out
xchg
imul
adc
and
inc
pop
pop
js
ret
setnp
js,pn
pop
mov
or
xor
into
out
pop
push
sarb
inc
ljmp
call
mov
out
xchg
outsl
lock
and
mov
test
xchg
xor
fstl
xchg
sahf
inc
xchg
in
dec
hlt
hlt
int
jo
inc
ret
mov
mov
ja
aam
adc
lock
ds
cwtl
inc
mov
stos
pop
imul
loop
popa
out
repnz
jmp
sbb
jge
xor
out
stc
push
lea
scas
cmpb
enter
iret
sbb
out
sub
movq
aas
push
cmp
cmp
cmp
xchg
loope
pop
movsbl
pop
leave
in
negb
push
cmp
xchg
push
jo
mov
xchg
cli
mov
mov
fs
fwait
pop
mov
add
jnp
inc
pop
imulb
mov
rcrb
ficompl
enter
push
and
ret
mov
pop
mov
sarb
cmc
out
shrb
jo
jge
aam
fmul
pop
add
ss
addl
icebp
lds
test
or
xor
xor
mov
loop
dec
movsb
sbb
aad
stos
js
sti
mov
cmpsb
xchg
and
add
jge
inc
pusha
fcmovne
pop
xchg
imull
ss
pop
comiss
stos
std
xor
xorl
xor
push
fmul
sbb
pusha
sbb
loop
loopne
push
or
pop
xchg
rcl
mov
cmp
clc
inc
jnp
sub
fchs
leave
int3
outsl
js
cmp
cmpsb
xchg
mov
mov
negl
in
cmp
in
gs
loope
pop
push
add
pusha
push
xor
insl
jecxz
aaa
dec
stc
dec
fimuls
xor
cmc
jecxz
testb
bound
xor
sub
fcoms
pushf
lods
dec
shll
test
jmp
jl
xchg
imul
xchg
movaps
mov
jae
iret
arpl
xchg
scas
cld
shlb
dec
dec
rcrl
mov
insb
ret
stos
cmp
cli
enter
arpl
pop
mov
insl
or
lock
shrl
int
mov
inc
in
push
jmp
mov
subb
fwait
sbb
sbb
fldl
jno
ja
ficompl
cmpl
out
cmp
sbb
lds
or
std
mov
sub
rclb
fisttps
cmpsl
in
cmc
push
ss
xchg
in
adc
js
jge
cmpb
insb
rcrl
push
adc
or
lock
mov
sub
push
out
movsb
push
repz
push
nop
add
popa
shl
movsl
cld
dec
movsb
and
daa
mov
cmp
jmp
jg
mov
jb
adc
push
test
inc
enter
dec
int
add
clc
movsb
dec
and
int
insb
and
gs
jmp
pop
pusha
cmpsb
inc
mov
hlt
bnd
push
mov
fidivrl
scas
movsb
jbe
or
aad
cmp
shr
hlt
out
inc
test
lea
sbb
mov
out
xchg
xor
ret
inc
test
out
rdmsr
rclb
mul
sub
enter
inc
mov
cmp
xchg
aam
cmpsb
mov
pop
or
jge
jmp
ud2
and
popa
cld
adcl
stos
rcrb
divl
int3
mov
rolb
inc
leave
jecxz
out
out
push
lods
aaa
push
shr
mov
popa
dec
xor
xor
adc
movsb
nop
or
xor
imul
fwait
push
or
cli
jnp
pop
sahf
stos
xchg
test
fwait
out
sub
xor
lods
mov
mov
pop
mov
mov
and
mov
cli
pmaddwd
mov
repnz
push
test
loope
lock
fisubl
int
leave
ss
mov
pop
outsb
push
mov
sbb
lods
inc
dec
xchg
mov
lock
push
cmp
sahf
out
ds
xor
int3
sub
jae
push
xor
ljmp
inc
mov
sub
pop
xchg
jo
xor
sub
add
sbb
lahf
inc
sti
mov
jbe
sub
xor
sub
push
punpckhbw
movsb
mov
scas
adc
push
in
test
cwtl
xchg
les
incb
mov
push
jb
inc
out
icebp
xor
js
sub
and
pop
dec
mov
enter
shl
std
inc
xchg
or
aad
push
aaa
dec
or
xchg
lret
xchg
int
mov
pop
mov
call
or
cltd
or
out
sub
imul
dec
mov
mov
pop
outsb
fcmovbe
je,pt
xchg
mov
or
lock
cmp
lret
adc
and
xor
into
lods
pop
rcrb
insb
fs
mov
subb
adc
push
iret
insb
sub
mov
divb
lds
rol
xchg
inc
sbb
dec
or
sbb
dec
sub
cmp
hlt
cwtl
test
rolb
cli
add
or
call
ja
lcall
mov
ljmp
pop
add
pusha
mov
fs
sub
sbb
dec
fsubr
or
adc
or
fdivrl
gs
mov
insl
push
xor
dec
xor
xchg
popa
push
add
pop
sbbl
arpl
fsub
fmull
adc
sub
dec
dec
cld
mov
iret
adc
ss
icebp
sbb
xchg
test
mov
pop
mov
shll
push
dec
mov
es
bound
rcrb
mov
xchg
fwait
add
daa
out
mov
mull
loope
in
lock
cmp
repz
inc
inc
sub
cmp
jo
fwait
lods
dec
popa
pop
clc
push
mov
pop
fwait
add
adc
adc
aam
cmpsl
out
movl
test
icebp
insb
and
push
adc
jecxz
andl
mov
fisubs
sarb
and
adc
popf
adc
mov
sbb
xchg
jae
pop
xor
cmp
sti
sbb
push
bswap
aam
ljmp
out
push
jo
in
hlt
sbb
dec
fstpl
adc
dec
xchg
push
xor
add
das
xor
and
xchg
vpshad
xor
fistpl
cltd
out
insb
mov
iret
shlb
dec
jno
std
ds
pop
rcrb
sub
imul
negl
pop
add
mov
sub
pop
test
sbb
sbbb
xlat
mov
push
lcall
fadd
sub
mov
adc
ss
cmp
lods
push
pusha
fxch
sti
scas
movsb
push
pushf
daa
sahf
dec
push
xor
fcmove
push
insl
mov
and
ret
cmc
dec
push
mov
repnz
sub
xor
mov
in
hlt
inc
inc
inc
stos
xor
out
divb
stc
and
ljmp
fisttps
push
daa
pop
fisubrs
shrb
sub
out
and
adc
aam
jge
pop
and
xchg
add
or
inc
aas
add
cltd
cmc
ja
popf
jecxz
xor
mov
cmpsl
or
popf
pop
cmp
lods
jns
stos
in
or
xchg
lcall
sub
push
inc
sbb
test
cmp
hlt
fisubl
pop
arpl
add
minps
into
dec
shlb
cmp
add
and
jmp
fbld
pushf
outsb
mov
ret
dec
xorb
jnp
test
pop
nop
mov
mov
inc
neg
cmpb
sbb
and
add
push
sbb
mov
jp
sub
mov
fstl
mov
shlb
add
enter
ret
test
sbb
xchg
dec
inc
repz
repnz
popa
mov
cld
shl
or
lock
out
addb
mov
sub
push
lcall
jmp
dec
cwtl
mov
and
push
and
inc
pusha
pop
sub
pop
mov
into
mov
daa
imul
xor
and
lcall
popa
or
lds
outsb
pop
dec
icebp
ds
mov
xor
mov
test
test
icebp
fisttps
popf
add
inc
push
jne
cmp
push
pop
or
and
imul
sub
out
scas
jecxz
jo
scas
mov
and
jge
push
test
pop
mov
add
mov
ds
add
pop
cmp
insb
pop
pop
nop
in
inc
pop
dec
pop
cli
mov
faddp
sub
sbb
mov
idivl
or
fs
mov
dec
pop
adc
addr16
jno
pop
add
inc
sahf
lahf
mov
movsb
cs
xor
cmpsb
xlat
xor
inc
inc
mov
mov
mov
lock
mov
int3
loop
ret
shl
in
xor
popa
dec
es
mov
add
out
lret
dec
sahf
cwtl
out
scas
and
leave
mov
ja
mov
adc
rcrl
cmp
add
lret
sub
loop
inc
jg
or
mov
adc
push
lret
push
sar
push
mov
setno
and
and
sub
iret
int3
mov
fldt
sar
push
clc
mov
sbb
cmp
in
cltd
mov
lods
stc
div
test
lret
movsl
push
sub
add
pop
sti
ret
test
xchg
movsb
test
test
mov
faddl
cmp
adc
rorb
int
insl
ja
out
push
cs
or
xor
mov
jge
xor
scas
ret
jle
dec
repz
stos
pop
lahf
mov
mov
cmp
out
sub
push
arpl
pop
pop
xchg
sbb
or
clc
xchg
mov
add
xorl
lea
std
fildll
data16
sahf
mov
imul
insb
jb
jne
push
imul
and
pusha
sub
stc
icebp
enter
out
sbb
mov
sub
xchg
int
push
filds
mov
loopne
xlat
leave
test
dec
lcall
mov
rorb
fldcw
mov
push
cwtl
fidivrl
mov
dec
push
add
push
cmpb
outsl
pop
inc
sbb
fdivs
jmp
out
cmp
adc
loop
mov
inc
clc
jmp
inc
push
das
ret
lret
mov
dec
xchg
scas
mov
xchg
popf
dec
clc
push
cmovbe
push
sbb
shll
push
enter
aad
add
pop
in
push
mov
pop
fdiv
pop
popa
notl
or
sbb
fnsave
sub
pop
imull
daa
lock
arpl
push
cltd
arpl
nop
xchg
mov
mov
mov
push
test
lret
hlt
shlb
ret
pop
ss
adc
cmpl
add
je
sbb
fldl
imul
aaa
test
dec
dec
inc
xchg
movsb
cmpsb
inc
jb
or
mov
jmp
cmp
das
jmp
add
ss
adc
inc
sub
jge
call
xor
notb
xor
mov
or
lods
or
cltd
cmpsb
xchg
mov
scas
mov
lods
pop
and
loop
dec
mov
jns
lds
cmp
cmpsb
enter
les
xchg
push
int3
sbb
popa
fistpl
ljmp
xchg
inc
inc
stos
adc
ja
dec
push
fldenv
das
xor
lock
jnp
inc
es
mov
push
xor
fistl
xlat
into
fsubp
cmp
sub
ds
mov
push
mov
hlt
movsl
and
cmp
or
cmpsl
dec
adc
sti
js
and
cwtl
int
jle
pop
mov
and
fstl
pop
addl
xorb
jno
cmc
mov
and
cmc
popa
or
rcrl
les
daa
push
or
das
mov
lods
enter
mov
mov
mov
int
jmp
out
lret
xor
imul
iret
cmp
cld
inc
faddl
insb
push
lods
test
xchg
fwait
mov
inc
or
pop
xchg
imul
jns
inc
xchg
pop
dec
sbb
jnp
outsl
sti
and
jp
pushl
subb
add
fxtract
mov
fs
and
push
je
aaa
popf
adc
and
cmp
lods
and
out
inc
lret
paddsb
cmpsl
les
les
dec
pop
cmc
inc
lret
sbb
mov
fcoml
out
in
cmpsb
adc
mov
mov
ja
pop
sub
push
xor
arpl
adc
mov
cmpsl
sub
fisttpl
hlt
aam
jmp
mov
pop
loope
lret
cmpb
decl
call
jae
sub
fcmovu
test
mov
jle
jmp
insl
mov
gs
rorb
pop
movsl
scas
or
adc
jne
dec
lods
mov
jns
dec
jns
or
test
ds
pop
xchg
je
out
lcall
adc
push
lods
push
imul
icebp
adc
cs
xor
fidivl
out
cli
aaa
imul
rcrl
test
sub
xchg
xor
jbe
in
nop
lsl
out
cwtl
jo
pop
pop
pop
jae
xchg
insb
push
mov
jno
mov
repz
lds
scas
jns
mov
sbb
into
or
adc
sub
pop
scas
pop
lods
jo
movsl
push
add
and
jne
cli
lretw
addr16
je
pop
cmpsb
sbb
or
pop
dec
xchg
pop
les
jl
repnz
rcrb
dec
mov
popf
mov
xor
js
add
dec
cmc
or
adc
jbe
pop
or
movsb
fsts
cmc
fdiv
icebp
and
add
or
mov
icebp
add
pop
mov
xchg
popl
cmp
in
and
test
xor
push
lods
sahf
sub
jecxz
pop
dec
push
ret
stos
xchg
movsb
pop
gs
dec
and
sahf
pop
xlat
dec
repnz
outsl
adcl
xchg
xor
outsb
int3
and
loopne
mov
es
jmp
cmp
inc
cwtl
inc
push
push
push
jnp
ja
mov
pushf
orb
in
emms
scas
jno
pop
cmp
xchg
sbb
mov
aad
cltd
pop
into
lea
sub
scas
lock
mov
imul
dec
xchg
dec
mov
jg
push
leave
add
xchg
sarb
sbb
mov
xor
cmp
push
out
push
sbb
dec
jmp
jl
and
iret
jl
arpl
int
cwtl
ss
and
scas
cmp
ja
mov
pop
daa
leave
andl
sbb
lahf
sahf
ret
jl
xor
fnstsw
and
and
rcl
setae
negb
inc
cli
inc
add
and
jmp
dec
jnp
xor
fwait
adc
iret
or
mov
mov
dec
popf
in
std
xor
jbe
aas
test
movsb
mov
in
cmpsb
aam
mov
xchg
xchg
data16
out
cwtl
out
mov
mov
ja
dec
test
iret
cwtl
mov
cmpl
adc
ds
nop
pop
push
outsl
and
inc
pop
in
add
dec
out
push
fistps
push
or
mov
sbb
cwtl
ffree
xor
cmp
push
lds
clc
ss
les
iret
pop
adc
decb
pop
jo
dec
or
es
xor
inc
cltd
cmpsl
cwtl
add
cmpsb
adcl
push
lds
or
cltd
sbb
xchg
mov
fistps
xchg
add
add
daa
repz
lahf
xlat
lds
pop
xchg
jne
xchg
pop
adc
jmp
jp
inc
lret
add
int3
pop
jmp
ljmp
aad
ficompl
add
mov
test
imul
jecxz
lods
xor
repnz
addb
repnz
or
lods
mov
xorb
xchg
mov
push
mov
in
add
jmp
push
add
adc
push
or
and
push
repz
inc
mov
mov
cmc
xor
enter
in
and
jmp
lss
icebp
cmpsb
mov
lea
cmpsl
mov
and
mov
sbb
aad
nop
lret
cmp
jbe
test
or
insl
out
test
outsb
loopne
test
jle
mov
daa
call
push
mov
adc
js
jnp
jno
or
mov
shll
int3
adc
mov
dec
push
cmc
xor
and
sub
mov
push
out
push
mov
cmp
enter
push
call
pop
out
notb
cs
loop
mov
jns
cmpsb
roll
mov
sbb
cld
out
cmp
cmp
pop
lret
test
cltd
or
xor
repnz
imul
icebp
arpl
or
mov
add
fildll
hlt
stos
inc
out
sbb
jno
or
mov
xor
or
add
inc
imul
dec
fstl
dec
jns
dec
xchg
imul
std
xchg
cmp
jno
mov
ret
inc
push
or
adc
lock
cmp
imul
ds
fs
pop
movsb
xor
jns
xor
fnstsw
xchg
sub
mov
insl
xor
mov
push
mov
push
mov
pusha
in
fisttps
xor
pop
test
mov
jg
jnp
pop
fcompl
adc
xor
lcall
pop
flds
jge,pt
cmp
and
out
call
inc
dec
or
test
dec
cld
lods
popf
stos
int3
outsb
js
dec
jecxz
mov
jbe
rorb
or
insb
add
inc
cmp
je
mov
xchg
rcrb
lods
sub
mov
mov
jno
sub
bound
out
push
jb
rcl
dec
pusha
inc
dec
inc
dec
or
repz
mov
fistpll
fs
lock
push
fdiv
sub
push
daa
jb
das
jo
mov
pop
repnz
in
and
sub
ret
test
out
aaa
lcall
or
mov
mov
addr16
or
shlb
sbb
repz
in
pop
cwtl
push
mov
into
fdivrp
shrl
subl
pop
sbbl
aam
sarb
sbb
jmp
sahf
dec
lret
out
lret
enter
aaa
adc
dec
popa
fstpl
leave
and
mov
push
clc
mov
bound
jns
jmp
popf
push
sub
std
mov
and
jecxz
xchg
lea
cmp
sub
push
imul
gs
sub
mull
lret
cmp
or
push
or
into
jno
mov
punpckhdq
fnstsw
divb
popf
sbb
rorl
negb
push
dec
int
orb
xchg
mov
icebp
jne
loopne
clc
jns
mov
xchg
cmpl
and
jmp
add
push
mov
jae
push
dec
pop
add
mov
ds
mov
xchg
adc
insl
add
pop
push
cmp
sub
arpl
loope
inc
jns
ja
gs
das
out
aad
dec
dec
mov
data16
sbb
insb
sbb
mov
inc
lods
pop
divl
scas
sbb
dec
loope
and
pop
sbb
out
and
cmpsl
sahf
push
xchg
mov
mov
bound
lods
xchg
aaa
mov
das
xchg
jbe
pop
cmpsl
mov
outsb
sarb
mov
and
and
lea
cmp
dec
lods
add
mov
sub
andb
cld
int3
nop
les
inc
popf
sbb
ret
shr
add
fdivs
int
cwtl
sarb
loop
ljmp
mov
cli
add
dec
test
shll
stos
dec
and
sbb
xorl
sbb
rcrl
bound
dec
inc
push
ret
mov
jbe
mov
or
sti
pushf
adc
fistps
xchg
sbb
jmp
in
jo
pushf
dec
js
fmul
xor
in
mov
jle
dec
rorb
or
mov
mov
mov
pcmpgtd
jl
mov
enter
mov
out
in
sub
cmp
in
mov
dec
mov
popl
arpl
dec
pop
push
scas
or
push
inc
mov
adcl
addr16
into
adc
jns
and
subl
cmp
sub
lock
pop
add
add
loop
test
jae
sub
push
or
lret
aam
or
sub
dec
jp
inc
nop
int
aam
inc
pop
ljmp
jbe
push
sbb
jns
mov
push
imulb
jge
inc
pop
add
xor
lret
pop
ja
into
add
cmp
add
lods
stc
sarl
pushf
sbb
or
test
gs
mov
mov
imul
call
and
bound
aaa
in
cmpl
int3
or
jb,pn
cli
add
jne
xor
push
rclb
xchg
mov
sub
pop
and
setp
pop
sub
or
sarl
cmp
test
pushf
xchg
outsl
dec
cli
inc
incl
ja
stos
mov
cmpsb
xchg
addr16
lret
xchg
jp
shll
lods
outsl
mov
and
and
xor
pop
in
adc
std
dec
je
sbb
pop
mov
test
add
or
shl
test
push
aad
fwait
xchg
inc
cmpsb
cmp
mov
fldenv
sub
gs
movsb
cmpsl
popa
stos
sub
mov
adcl
sub
fsubl
arpl
lret
jb
jmp
mov
sbb
aaa
jg
mov
mov
jecxz
adc
mov
jae
cmpsl
inc
es
sbb
add
stc
cmp
adc
das
and
sbb
mov
test
shlb
xor
jle
inc
out
mov
jmp
mov
mov
fisttpl
dec
rcl
mov
add
pop
enter
data16
jp
lea
xchg
stos
dec
jno
cmpsb
call
rcr
inc
stc
xor
mov
pop
fcoml
cmp
nop
jge
xchg
insb
aam
cmp
fstps
sbb
popf
call
mov
pop
mov
and
and
nop
or
in
xchg
dec
sbb
das
xchg
cmp
popa
scas
and
test
xor
repz
push
aad
push
inc
popf
add
mov
movsb
movsb
cmp
rclb
pop
cmpsb
xchg
idivl
aas
shll
add
cs
pushf
dec
adcb
xchg
add
push
jle
or
inc
test
pop
sub
sub
or
xor
mov
outsb
out
jne
adc
std
aad
notl
andl
mov
pop
push
xor
jno
jne
insb
xchg
dec
jg
jp
add
push
inc
std
jne
dec
sub
subb
jae
sbb
js
jno
add
lahf
rclb
mov
xchg
sbb
jae
popf
xorl
xchg
loope
push
xchg
push
loop
ss
std
outsl
mov
mov
or
jns
sti
pusha
sub
xchg
lods
push
incb
pop
mov
inc
in
xor
lret
dec
loop
push
pop
mov
mov
sub
add
lret
in
xchg
stos
scas
dec
push
cltd
fwait
mov
jecxz
in
outsb
je
pop
push
mov
movsb
xor
add
jne
xchg
nop
xor
pop
testb
iret
cwtl
cmp
pushf
imul
adc
lods
ss
sub
and
and
xchg
mov
std
and
movsl
shr
jns
cld
jp
cmp
adc
sbb
sbb
mov
scas
sbb
pushf
xlat
shrl
in
sbb
jmp
adc
sbb
leave
xchg
pop
faddl
lock
mov
sub
pop
add
icebp
or
cmp
cmc
jge
lret
fs
mov
sahf
mov
in
movlps
imul
inc
loop
sbb
dec
cmpl
sbb
int
adc
pop
stos
ret
leave
xchg
int3
and
lods
xlat
ret
mov
out
rolb
jge
test
loop
jne
ret
in
adc
jl
push
pop
xchg
imul
add
data16
cmp
and
mov
jns
push
nop
test
les
test
pusha
mov
pushf
repz
fisubrs
inc
mov
cmpsl
dec
repz
in
cwtl
push
ret
loopne
mov
inc
out
stc
add
dec
add
movsb
jno
sub
shrb
mov
cmp
fistps
xor
jnp
sbb
xor
jns
mov
jg
enter
xchg
test
aas
sti
push
push
cld
mov
pop
test
xchg
sti
xchg
rcll
or
xor
mov
jge
cmp
mov
cmp
push
mov
jo
js
add
rcl
dec
xor
dec
stos
push
rcll
test
push
add
in
jp
test
lods
sar
sub
clc
cmp
pop
rcrl
stos
aaa
mov
imul
push
aad
xor
stc
or
out
imul
shll
xchg
lea
mov
fistl
lods
js
repz
or
jnp
inc
out
inc
ja
mov
rolb
clc
dec
cwtl
cli
push
pop
arpl
mov
repnz
xlat
inc
imul
and
ret
repz
jle
jnp
sbb
mov
cwtl
pop
adc
pusha
ror
sti
out
mov
dec
pop
in
pop
inc
not
push
xchg
mov
lahf
jo
sbb
int3
data16
xor
and
push
and
or
add
fwait
cli
imul
mov
imull
cmp
cmp
jge
ss
outsb
in
mov
jecxz
cli
jge
or
js
add
insl
notl
inc
jno
or
add
sti
in
aas
cmp
mov
inc
pop
fadds
push
fcompl
jbe
push
mov
daa
cmp
dec
jl
outsl
mov
pushf
aam
jns
ds
call
arpl
fiadds
push
test
out
add
addr16
sbb
xchg
add
jge
ret
ja
outsl
mov
int3
addl
cli
mov
jle
mov
add
inc
cmp
cli
jecxz
xchg
lea
and
xorb
es
mov
push
xor
mov
ljmp
mov
inc
lret
mov
stos
test
insb
lahf
movsl
ror
icebp
or
leave
movsl
cmp
popa
inc
push
add
js
xlat
addr16
inc
lahf
adc
aad
mov
cmp
jns
ds
daa
cmp
sarl
pop
pusha
jnp
sbb
aas
call
cltd
or
out
ja
mov
mov
add
scas
mov
stos
jp
jmp
popa
xor
xchg
lcall
cs
mov
cli
test
jb
rcr
std
in
loopne
lahf
inc
ljmp
jns
movsl
xchg
or
push
push
je
mov
push
pop
push
jbe
fcmovnu
push
adcl
std
jge
dec
xor
ret
push
loope
fidivrl
stc
dec
fstpt
xchg
dec
lea
push
xchg
mov
into
sti
and
mov
sub
hlt
pop
mov
jp
adc
rcpps
cmp
cs
in
ja
jae
lret
or
cwtl
sarl
cwtl
xor
test
sbb
cld
flds
inc
jae
lret
iret
cld
xchg
inc
sub
out
or
pop
fwait
jp
and
cmpsl
add
inc
adc
add
push
fisttpl
and
xor
mov
mov
inc
hlt
fsubrl
ficompl
jle
lret
testb
adc
add
stc
xorb
mov
pop
rep
inc
scas
dec
lea
push
jmp
pop
sahf
mull
arpl
mov
adcl
fiadds
and
cmp
dec
jns
insb
dec
sub
add
aad
outsb
jecxz
add
repz
add
sti
or
popa
dec
test
arpl
in
std
mov
jb
push
popf
lcall
test
adc
mov
pop
jmp
mov
and
mov
dec
scas
pop
lods
jb
test
xor
xchg
cmpsl
inc
aaa
inc
xor
jb
push
es
popf
cmp
pop
mov
call
push
xlat
add
dec
and
cs
inc
dec
or
pusha
add
sbb
stos
dec
mov
bound
pusha
lock
mov
rorl
aaa
out
lea
adc
xor
mov
ds
xlat
es
out
stc
movsl
push
and
sub
or
mov
loope
stos
mov
je
xchg
push
adc
jo
sub
movsb
adcl
push
add
cmp
aaa
sub
test
jne
sub
adc
test
or
call
sbb
dec
mov
mov
imul
and
clc
sahf
xor
aas
mov
and
or
mov
lret
push
mov
icebp
test
lret
lahf
in
mov
jmp
dec
mov
pop
movsb
loopne
add
xchg
cmp
pushf
sbb
dec
jns
push
andb
jecxz
les
jmp
mov
mov
loop
jecxz
mov
jnp
icebp
lahf
fmulp
push
cmpsb
cltd
test
push
add
idivl
jbe
mov
jbe
dec
movsl
ret
out
mov
xor
test
gs
xor
jns
xchg
test
lret
fnstcw
ret
push
and
push
nop
ljmp
imul
mov
out
mov
mov
mov
pushf
cmc
xchg
lahf
mul
sub
mov
xor
test
cmpb
add
dec
lahf
leave
dec
and
fildll
stos
mov
sbb
sbb
pushf
xor
lock
scas
push
out
inc
lret
mov
ljmp
mov
or
mov
or
ud2
cli
jns
fwait
push
rcll
repz
push
push
mov
mov
or
dec
xchg
cs
cltd
and
popf
cmc
ljmp
fstl
loop
pop
jo
arpl
les
or
out
into
mov
jl
pop
rcrl
xchg
sub
xor
adc
mov
fxch
or
pop
or
sub
mov
xorl
xchg
or
mov
hlt
enter
loope
adc
cwtl
call
mov
or
lahf
pop
pop
call
or
mov
push
ja
out
pop
xor
sar
push
mov
call
insb
mov
mov
xor
add
cmpb
and
aaa
xchg
mov
out
cmpsb
hlt
fimull
arpl
sbb
scas
mov
es
xor
cwtl
mov
cmp
sti
je
push
stc
pushf
dec
insb
ret
push
jbe
add
and
jae
das
arpl
xchg
divb
in
out
jmp
ret
and
push
and
push
pop
scas
lcall
in
test
xchg
lret
lods
mov
dec
popf
xchg
gs
repnz
clc
xchg
dec
fwait
addr16
push
pop
xlat
inc
into
pop
mov
aaa
mov
jne
out
xor
pop
jle
in
pop
and
cld
xor
xor
in
aad
jg
xchg
insb
fldt
mov
lods
sub
lds
addr16
xorb
mov
push
test
mov
fldenv
sub
ja
stc
ja
add
bound
sahf
cmc
or
lea
push
outsl
dec
sub
test
mov
int3
cmp
in
xor
push
or
xchg
neg
or
mov
push
out
add
jb
jbe
scas
xchg
pushf
xchg
sarl
or
mov
ljmp
and
sbb
xorb
xor
adc
jl
sbb
mov
pop
inc
mov
mov
loop
js
imul
stos
ror
dec
xchg
jle
inc
pop
lret
xorl
lcall
cltd
jmp
jae
xlat
and
push
jmp
xchg
jo
mov
push
ret
lret
xorl
in
jp
cltd
mov
daa
jbe
and
jae
pushl
ljmp
lock
pop
dec
out
test
test
xchg
lds
or
inc
scas
xor
sub
xchg
add
push
push
jge
push
rcrl
sbb
and
sub
adc
mov
cmpsl
inc
fsubr
add
or
adc
aas
adc
fcmovu
pop
push
mov
rclb
and
out
mov
cmp
inc
ficoml
rcr
lahf
cmpb
mov
dec
xchg
or
test
pop
imul
jae
inc
mov
daa
push
cs
test
ret
and
gs
insb
fs
ljmp
pop
fcmovu
orl
mov
lods
push
and
adc
mov
push
test
rorl
sar
ret
xor
and
jmp
cmp
sub
clc
sti
push
push
int
pop
push
inc
pop
test
andb
cmpl
fdivl
repz
subl
sub
pop
ljmp
jnp
pop
stc
out
movsl
mov
push
add
pop
daa
data16
xchg
mov
test
inc
pop
xchg
xchg
lret
fisubrl
popa
or
or
bound
sub
mov
shr
dec
push
sub
fs
push
sub
mov
out
into
bound
and
ds
inc
stos
rclb
mov
jge
cmp
push
fdivrp
jg,pt
shlb
lock
xchg
cmc
lret
dec
jno
xlat
popa
push
lea
pop
fbld
cld
popf
fstl
push
jo
iret
pop
cmp
sbb
xchg
adc
jmp
cli
push
inc
sub
test
iret
dec
sub
jo
js
sub
push
push
and
push
je
in
add
scas
xor
not
dec
int
fs
aaa
pop
mov
in
stos
pop
and
int
lds
xchg
cli
fldlg2
pop
lods
sbb
sbb
ds
jns
popf
insl
test
push
imul
cltd
mov
fdiv
xor
stc
shlb
int3
pop
mov
jnp
shld
push
push
ja
xor
jae
adc
xor
sub
adc
or
inc
push
test
pop
inc
lods
pop
cmp
insb
jg
movups
mov
clc
cmp
mov
jb
jmp
mov
xchg
roll
out
rcr
mov
and
cmp
xchg
clc
sub
mov
aam
in
arpl
cmpsb
xchg
cs
push
ja
insl
jnp
repnz
pop
xchg
mov
insb
xchg
push
in
push
test
leave
je
mov
outsb
mov
fsincos
push
sub
cld
inc
pop
push
sub
addr16
cvtpi2ps
iret
mov
mov
add
fisubl
sbbl
fwait
cli
mov
pop
iret
movsl
pop
in
stc
imul
cmp
pop
add
pop
mov
pop
or
sub
shl
xor
inc
inc
es
jno
imul
pmaxub
jmp
mov
insl
fildll
popf
inc
add
mov
fidivrs
sbb
xchg
mov
popa
adc
int
fbstp
xchg
pop
xchg
mov
shll
or
std
popf
jg
icebp
or
push
mov
je
imul
insb
call
daa
arpl
and
cmp
fwait
sub
arpl
mov
call
jno
or
testb
push
cmp
push
fwait
pop
aas
push
imul
aas
ss
movsb
dec
add
movsb
mov
fucomp
data16
sarl
nop
lret
out
arpl
fistps
lock
jmp
in
jns
nop
jge
xor
cmp
cmpsl
xchg
jmp
cltd
xchg
scas
xor
inc
mov
mov
arpl
out
xor
movsb
xor
sub
fldcw
cli
test
fimull
shll
jl
cwtl
or
lahf
mov
push
jp
pop
push
aad
and
inc
pushf
fisubrs
mov
jnp
push
in
inc
or
ljmp
cmpsb
jb
fsubr
jnp
xchg
repnz
jle
movsb
test
xchg
or
aad
or
int3
and
mov
or
or
es
adc
push
sub
jle
mov
cs
test
je
adc
cs
push
mov
ja
cmpsb
and
and
fldpi
jne
cmpsl
mov
ret
push
mov
aam
sbb
lods
push
out
jmp
fisubrl
and
mov
and
push
inc
ja
xor
jmp
jge
add
push
cmp
lret
orl
inc
xchg
fists
sarl
loop
cwtl
pop
mov
inc
outsl
mov
lods
push
dec
push
call
xchg
data16
sub
xor
loopne
int
decl
mov
lock
xchg
out
push
in
dec
push
push
jge
ljmp
popa
pop
outsl
jmp
ss
lods
and
sbb
ja
addr16
out
mov
jge
xor
sbb
ljmp
call
pop
dec
jns
outsb
dec
xor
pop
add
hlt
xorb
jo
adc
shlb
cmpsb
sbb
outsb
aas
lods
cmp
cli
out
sarb
cmp
jmp
gs
aad
jl
push
in
in
pushf
cmp
or
cmpl
sbb
fs
lret
add
shrb
call
outsb
fisttpll
sub
sub
rcrb
sub
cmp
xchg
pop
pop
dec
adc
mov
sbb
sbb
xor
cmp
stos
inc
lds
inc
cltd
mov
sub
xchg
int3
mov
fwait
xlat
imul
jmp
mov
pusha
sbb
js
push
call
lret
in
shll
adc
xchg
dec
cmpsb
inc
int
xchg
imul
xchg
inc
xlat
loopne
lods
inc
dec
xchg
ljmp
fidivrl
sbb
sbb
lods
and
push
lds
scas
fldcw
or
xor
xchg
xlat
xchg
ljmp
push
push
push
cmp
push
fwait
or
mov
decb
mov
push
jbe
jne
jnp
sbbl
jp
jno
mov
aas
push
xorl
or
mov
js
jo
and
jne
fcoml
notl
insb
in
cld
or
xor
or
call
or
sub
cmp
mov
popf
repz
and
cld
gs
in
dec
clc
aad
cmc
jnp
aas
pop
pusha
or
adcl
test
fsts
scas
fstps
dec
or
hlt
and
xchg
push
jb
inc
aad
and
add
int3
adc
add
mov
fs
loopne
int
xchg
pushf
pop
pop
cwtl
jle
xor
pop
scas
pushf
inc
or
pushf
push
jb
jmp
orb
into
xlat
mov
mov
adc
push
mov
psrad
out
pop
fnsave
fistps
cs
pop
cltd
lds
xor
inc
cmp
xchg
mov
es
pop
push
push
lods
jbe
cld
push
xor
fadds
cmpsb
fsubl
or
jb
xchg
out
mov
inc
mov
shl
movsb
scas
fnstcw
lock
push
jge
data16
jmp
add
cs
sub
lods
sbb
add
inc
xchg
jecxz
mov
insb
jne
les
jns
jno
sbb
fsubl
rcll
or
out
pop
and
inc
mov
add
cmp
int
or
mov
and
aas
fists
push
cmpsl
jmp
cld
mov
mov
xor
loop
das
in
movsb
mov
mov
xor
add
inc
mov
inc
stc
fists
call
lds
ja
pop
int3
in
sti
fs
xchg
xor
ss
shrb
insb
daa
cmpsb
sbb
in
mov
add
cld
mov
xchg
inc
cmpsl
jmp
sbb
cltd
dec
fisttpll
pop
inc
fadds
cmpsl
or
xchg
mov
xor
sbb
outsb
dec
insl
mov
push
jg
hlt
sar
adc
xor
call
adc
push
jne
insl
je
add
or
and
mov
push
cmp
ficoms
jge
sbbb
aad
push
and
movsl
jne
cwtl
sub
cmp
inc
lods
fsubl
mov
lcall
inc
mov
movl
das
pop
push
sbb
xor
xor
jg
sti
dec
sub
lods
stc
inc
or
xor
sub
hlt
mov
not
cmp
xchg
xchg
xchg
cli
rclb
cmc
fmull
mov
out
ret
dec
js
dec
jnp
dec
xor
lcall
mov
push
jo
jb
negl
push
shr
cmp
movsl
int
cli
lock
xchg
or
outsb
sub
push
pop
mov
adc
push
cmp
adc
add
cmp
xchg
dec
mov
xor
pop
cmp
call
sub
inc
loope
mov
push
sub
mov
repz
xlat
jle
add
mov
or
test
add
out
in
out
or
or
sub
pop
sarl
cltd
xchg
push
and
jg
orl
sub
outsb
gs
sarl
xchg
push
mov
sbb
shll
mov
push
imul
lds
xor
loop
cmp
leave
jb
mov
xchg
stos
iret
dec
in
mov
aam
rol
outsl
sub
cmp
lea
shrb
mov
add
adc
pop
push
xlat
movsl
pop
mov
cltd
js
mov
add
mov
inc
jle
ds
das
sar
inc
dec
push
inc
sbb
cmp
aam
loope
cmp
inc
cmp
fcomps
xor
mov
mov
pop
test
mov
cmp
gs
popa
dec
das
jge
mov
push
int
or
mov
movsl
adc
scas
jne
stc
pop
xchg
lcall
mov
aad
ja
sbb
mov
cmp
xor
pop
push
push
xchg
sbb
cmp
pop
xchg
xor
in
jo
subl
vmwrite
or
mov
sbb
and
call
sbb
push
stos
test
inc
cld
lods
ljmp
sbb
das
jecxz
into
fxch
nop
mov
fcomps
outsb
dec
ljmp
xchg
add
inc
or
pop
ffree
dec
dec
ds
xchg
lods
je
cmp
test
cmp
mov
lcall
pop
mov
pop
es
jno
push
sub
mov
lds
mov
cwtl
lcall
jns
test
jle
sbb
sbb
outsb
lods
shrb
xchg
pusha
rorb
mov
ret
add
sbb
sti
imul
xchg
mov
ja
lods
imul
jno
inc
jl
jns
pop
fisttpl
popf
xor
in
xorb
sbb
outsb
mov
arpl
pop
outsb
outsl
pusha
or
xor
ror
mov
insl
pusha
cmp
cmpl
dec
and
popa
ficomps
sarb
mov
enter
push
cmp
xlat
push
add
dec
repnz
test
loop
repnz
or
cwtl
push
ss
das
out
adc
push
scas
xchg
push
fcmovnbe
jnp
jbe
imul
data16
push
aad
push
mov
xchg
cmp
cli
pop
ljmp
mov
inc
xchg
and
sub
xchg
mov
cmp
and
addl
xor
rcll
dec
mov
cmp
and
repz
jb
inc
push
nop
aaa
push
jb
sub
add
and
sbb
jbe
pop
cmp
test
jno
xchg
popf
xcrypt-ofb
cmpsl
imul
mov
sub
mov
push
mov
iret
cmpsl
call
popa
adc
dec
aas
out
pop
icebp
inc
cmp
out
es
mov
adc
aas
fstp
cmp
fdiv
add
lcall
sbb
xorb
call
and
cmp
popa
pop
subl
sub
or
push
mov
loop
lahf
push
jg
xchg
popf
pop
mov
insl
int3
add
lcall
cmp
imul
xchg
mov
fs
mov
fldl2t
les
mov
mov
and
outsb
sbb
filds
xor
enter
dec
cmp
lcall
jp
arpl
lret
cmovs
sub
test
testb
and
cmpsl
mov
mov
and
mov
shlb
test
pop
xchg
xchg
popl
ja
add
daa
ja
and
mov
fnsave
pop
enter
aam
rcr
xchg
nop
sbbl
add
in
jb
xor
mov
push
push
mov
pusha
lock
cmp
or
out
sbb
inc
cmp
test
pop
jno
testl
mov
test
mov
xor
daa
xchg
jb
mov
mov
jmp
pushf
mov
arpl
mov
addl
fistpl
and
xor
push
inc
xchg
sbb
sub
in
in
sub
jbe
xchg
jl
cld
loope
shrl
cli
out
arpl
mov
jp
xlat
sub
popa
inc
xchg
jle
jecxz
iret
xchg
outsl
mov
pop
inc
cld
in
add
lret
mov
or
and
test
push
rcll
dec
into
cmp
leave
outsl
push
jnp
scas
inc
lahf
sub
mov
and
jnp
and
stc
pop
call
lret
out
cmp
je
shll
fmuls
call
pop
mov
in
xor
mov
pop
xor
sbb
cld
sub
dec
pop
sahf
js
sbb
out
pop
lods
cwtl
inc
test
xor
or
out
orl
pushf
jmp
xor
in
add
push
out
or
clc
sahf
popw
fadds
repz
fs
popa
lret
or
inc
inc
mov
out
cld
mov
ficoms
pop
icebp
in
jo
fcomi
mov
nop
push
mov
insb
dec
pop
dec
rolb
cld
pop
jle
push
fadds
push
xchg
call
andb
leave
mov
movsb
aaa
lret
pop
mov
adc
lret
cltd
pop
sbb
rcrl
or
adc
ret
pop
and
push
jge
cmp
sbb
shll
dec
push
les
mov
xor
addr16
or
dec
mov
push
jg
das
mov
inc
mov
jmp
mov
fldt
sub
xchg
fldl
inc
gs
dec
add
cs
xchg
jg
xor
pop
fwait
test
int3
call
popf
ja
jo
std
in
xor
jmp
mov
mov
adc
stc
stos
inc
orb
cmp
pusha
insl
lret
dec
shll
popf
fnstcw
nop
jno
repz
mov
mov
shlb
mov
mov
pushf
inc
adc
sub
arpl
roll
jns
bound
loopne
mov
ss
sbb
jne
mov
stos
test
bound
movsl
cld
and
pop
jge
xchg
test
les
cmpsb
pop
add
cmpsl
jne
push
in
xor
mov
push
cltd
pop
and
ficomps
adc
mov
sbb
sbb
stos
add
or
ror
and
jbe
jb
test
dec
xchg
test
ror
push
xchg
repnz
icebp
dec
lcall
jo
dec
jmp
mov
add
xchg
push
repz
mov
pop
mov
adc
mov
push
fistl
adc
cmp
mov
lahf
jle
outsl
jae
push
ret
adc
jle
push
sti
movsl
enter
jo
push
bnd
mov
inc
mov
inc
xchg
subb
and
mov
push
loope
jle
inc
mov
pusha
pop
inc
in
push
xchg
sub
scas
mov
xchg
push
cli
add
and
push
mov
mov
cmp
push
gs
shl
sbb
out
xor
push
fidivs
mov
mov
into
xchg
pop
and
pop
inc
mov
push
lea
xchg
in
cwtl
mov
jmp
dec
mov
rclb
push
cli
add
out
call
in
pop
aad
xchg
push
jns
adc
xor
cmp
mov
push
ss
jg
lcall
test
and
out
sti
ficoms
mov
add
leave
lret
mov
test
fstl
out
xor
sbb
pop
jbe
stc
test
push
and
push
daa
mov
xchg
push
sahf
leave
int3
jp
shrl
mov
aam
lfs
sbb
mov
sub
fwait
mov
mov
aaa
fmul
cwtl
cli
into
cld
lret
xor
sub
add
mov
addr16
xchg
xchg
xchg
call
pop
adc
fcompl
dec
outsl
fucom
mov
test
sbb
mov
inc
add
xorl
in
daa
jb
in
jge
cwtl
inc
jle
popa
add
mov
xorb
das
sub
or
popa
mov
lcall
mov
ficoms
into
xor
xor
sub
ret
outsl
scas
pop
push
sarb
lahf
cwtl
xchg
repz
dec
aas
cmpsb
fistpl
lcall
xchg
cmp
test
mov
pop
jbe
push
sbb
je
mov
and
lahf
mov
or
mov
ret
aad
dec
mov
sub
arpl
jns
loop
push
repnz
inc
inc
mov
ds
jmp
enter
push
rcl
xchg
gs
lcall
mov
outsl
jl
cmp
fnstenv
sbb
inc
mov
shrb
nop
in
icebp
pop
andl
sub
aam
inc
mov
out
outsb
xchg
mov
fists
prefetchw
lods
insb
mov
xchg
cmp
pop
jo
pop
dec
jno
hlt
jno
and
sbb
sub
adc
xchg
jmp
divl
xchg
jp
jno
pop
sbb
xor
sbb
data16
and
adc
push
adc
pop
or
je
stos
jge
stos
out
lcall
imul
jmp
cmp
lock
cmp
lret
xchg
movsl
mov
rorb
xchg
test
jle
shlb
push
and
jne
jp
js
loop
adc
mov
or
mov
lret
repz
add
loop
pop
stos
add
mov
call
jp
sahf
pop
mov
int3
push
sahf
cmp
out
shrl
stos
rolb
loop
inc
enter
fimuls
or
pop
mov
int
arpl
add
cmpsl
dec
or
xchg
int
cwtl
mov
jne
adcb
clc
xchg
movsl
push
sbb
enter
lock
xor
aaa
inc
sub
testb
mov
add
repz
xor
adc
insb
mov
sarb
and
movsl
add
in
inc
xchg
and
outsl
jmp
mov
std
inc
and
pop
and
inc
jae
int
jge
mov
inc
cmp
rcr
les
imul
mov
and
add
sbbl
sub
repz
xchg
jge
dec
popf
jecxz
mov
cmp
mov
repz
in
fsubs
test
xchg
xchg
icebp
dec
nop
jle
popl
fdivl
xchg
pushf
out
push
ljmp
pop
xor
loopne
int
inc
leave
ss
hlt
sbb
test
xor
jne
jecxz
mov
xor
sbb
sbbb
ret
das
dec
pop
ret
jne
pop
push
roll
jno
ljmp
mov
lret
or
or
cmp
testl
jge
gs
cld
dec
cmp
xlat
pusha
mov
mov
xchg
cld
sti
mov
cmp
lea
outsb
int
inc
test
loope
push
fsubs
or
cmp
outsl
xchg
cwtl
add
push
pop
sbb
dec
sbb
leave
and
cli
push
pop
add
jmp
mov
and
cmpsl
adc
stos
mov
inc
inc
jmp
or
mov
add
pop
mov
fisttpl
into
or
jno
ds
xchg
loope
sbb
jns
shrl
aad
sbb
mov
das
mov
outsl
dec
push
cmp
arpl
scas
push
pushf
call
cmp
nop
repnz
insl
adc
ficomps
mov
dec
rcrl
in
cmpsl
lret
andb
push
insl
push
in
out
jecxz
xchg
inc
add
sbb
pop
ds
add
dec
mov
dec
mov
jo
mov
push
lcall
lods
dec
pushf
lods
xor
repz
push
pop
cmp
sbb
xor
add
push
std
stos
sub
fcoms
fimuls
jb
insb
mov
dec
test
jae
xchg
pop
or
test
inc
out
jmp
insl
jle
push
jbe
je
push
and
xchg
xchg
aam
leave
mov
jmp
xor
addr16
mov
shl
fsts
xchg
or
scas
int3
xor
mov
and
bnd
lret
iret
push
and
pop
ds
out
gs
dec
inc
mov
mov
adc
test
jg
es
push
stc
pop
jmp
adc
pop
popf
inc
leave
aam
divb
pop
mov
imul
inc
jne
cltd
jbe
add
cltd
mov
divb
adc
xor
fnstenv
jp
leave
and
test
xchg
fnstcw
sub
xchg
dec
mov
xor
jb
jnp
lahf
or
mov
incl
not
es
mov
rcrl
mov
xchg
push
fisttps
sub
aam
mov
je
xchg
negb
adc
es
aas
insb
adc
es
mov
dec
add
leave
push
add
es
inc
or
push
mov
imul
sub
leave
cltd
decl
adc
leave
mov
push
jmp
mov
int3
cmpl
stos
stc
int3
add
insl
pop
call
dec
sahf
mov
ret
fistl
adc
aad
mov
push
fimull
fisttpll
cmpsl
sbb
test
lret
xor
das
mov
or
push
aad
mov
pop
out
test
lods
popa
push
mov
scas
mov
xlat
test
js
call
lods
loope
mov
jp
add
xchg
test
shlb
push
pop
adc
xor
and
lea
xchg
dec
imul
xor
inc
addr16
push
push
popf
and
and
mov
xchg
cwtl
sub
and
mov
xchg
add
or
mov
cli
push
arpl
into
or
repnz
push
leave
adc
push
cmpb
mov
cld
push
out
stos
xchg
ret
fidivs
data16
lock
xchg
or
jno
lea
imul
sbb
lcall
push
hlt
lods
lock
mov
adc
mov
loope
xor
jp
imul
push
insl
xchg
xlat
js
mov
jle
push
int3
xor
test
cmp
push
lea
fmuls
inc
loop
sti
lahf
cmpsb
jns
flds
mov
xchg
repnz
adc
jp
jns
lret
mov
imulb
bound
and
cld
lods
ret
mov
cmp
lcall
sarb
out
cli
xchg
push
mov
jb
pop
std
adc
subb
fimuls
mov
cmc
or
lods
outsl
pop
shlb
in
pop
dec
push
fnstsw
mov
push
pop
sub
and
pop
loopne
cmp
dec
sbb
and
sub
ds
adc
cmp
fcoms
xlat
daa
mov
js,pt
xor
mov
xchg
pop
mov
push
lret
xchg
jl
or
inc
xor
testb
fs
ja
mov
mov
sub
xchg
aas
in
pushf
or
adc
aam
mov
adc
add
rorl
xchg
pop
inc
and
je
pop
cmc
or
pop
mov
jnp
dec
xor
xor
dec
mov
mov
jne
cmpsb
pop
cltd
sti
pop
sbb
rcr
pop
mov
push
lahf
cld
pop
test
imul
lahf
mov
lods
out
adc
ljmp
std
hlt
pop
cmp
sub
xlat
fxtract
int
xchg
cmpsl
test
adc
lahf
jge
daa
cmp
mov
jl
jns
mov
pop
out
stc
out
flds
dec
jmp
adc
xchg
push
arpl
negl
rcrb
xor
pushf
scas
mov
mov
mov
lock
cmpsl
mov
stos
add
or
mov
add
inc
rorb
push
mov
cmp
and
out
cltd
out
adc
stc
adc
outsb
test
and
adc
rolb
daa
inc
in
testl
outsl
cwtl
rep
jle
mov
pop
jno
push
lods
push
mov
frstor
pop
sub
jl
push
or
jae
dec
rcl
mov
dec
out
sub
rclb
inc
xor
dec
mov
lods
mov
scas
push
push
subb
push
lods
into
push
out
shll
fnsave
pop
mov
jb
aas
dec
jmp
adc
inc
test
lods
add
pop
and
les
into
outsl
mov
aas
add
mov
mov
iretw
pop
mov
fisubrs
lods
push
mov
push
jno
cmp
jge
cld
inc
out
lods
push
out
aam
sub
push
push
pop
pop
das
xchg
mov
shll
das
xchg
push
dec
mov
andb
mov
fnstsw
mov
out
push
movsl
ret
sub
and
cmp
shll
or
imul
cmpsl
lods
xor
and
push
add
movsw
pop
jge
shll
push
and
mov
cmp
inc
pop
or
xor
icebp
rcrl
push
stos
jmp
mov
lea
outsl
in
jbe
gs
sub
mov
push
mov
push
xchg
lcall
cs
cmc
data16
sub
lcall
and
imul
movsl
cmp
cli
xor
and
outsb
shll
leave
mov
in
inc
xchg
into
clc
js
inc
add
ret
cld
out
sub
lcall
es
adc
cltd
inc
inc
mov
ret
xor
xchg
loope
cltd
jnp
scas
mov
in
adc
xchg
test
repnz
lods
pop
leave
aaa
popf
xor
inc
cmp
cmpsl
mov
fcmovnbe
inc
pop
mov
test
ljmp
negb
idivb
clc
pop
jle
xor
mov
loopne
std
arpl
rcr
and
mov
iret
sbb
dec
xchg
and
fsub
icebp
lds
add
call
in
hlt
add
or
pushf
divl
mov
or
ret
inc
enter
pop
cs
pandn
push
sbb
mov
cmp
leave
fs
mov
jmp
dec
jo
push
mov
stc
mov
divb
push
fistpl
add
es
lods
loope
sbb
pop
in
fisubl
adc
outsl
out
pop
std
xchg
das
push
dec
and
int3
cmp
mov
lret
dec
aaa
push
sub
inc
int
repz
cltd
xorb
cmpsl
imull
imul
in
divb
add
sti
mov
jg
out
ret
sbb
inc
cmpsb
fdivl
cmc
pop
sbb
xchg
in
pop
jns
stc
lcall
mov
ficoml
push
adc
mov
cmpsb
in
sbb
mov
in
cmp
inc
ljmp
push
repz
adc
repz
mov
dec
inc
shll
lcall
pop
nopl
push
mov
pushf
lods
push
add
lds
rcll
jge
push
sbb
pop
outsl
xchg
loopne
loope
lods
cmp
add
add
xor
sahf
or
jno
stos
cmp
jp
sub
push
mov
ret
mov
inc
loop
aad
por
fimuls
xor
push
not
mov
or
cmp
lock
fadd
sub
jmp
lea
and
pop
xchg
adc
cli
and
or
xor
sbb
movl
scas
movsl
test
scas
stos
fldl
jl
cmp
xchg
push
int3
pop
bound
fistps
js
repz
mov
sub
es
push
jp
cmp
test
push
aaa
fdivp
pop
and
mov
adc
add
inc
in
mov
xor
adc
lds
stc
imul
outsb
add
bound
ret
xchg
lea
les
bound
mov
insl
cmp
movsl
loop
imul
hlt
movl
pushf
jmp
pusha
fcom
cs
and
pop
xchg
jnp
call
xchg
out
sbb
js
push
add
cmp
sti
ficompl
xlat
test
cwtl
fld
sbb
inc
test
mov
and
in
inc
inc
jl
sbb
inc
fucomp
insb
hlt
jns
dec
jnp
xchg
mov
xchg
mov
dec
rcll
pusha
sbb
xchg
imul
mov
mov
mov
mov
mov
mov
push
out
mov
mov
stc
repz
push
jp
mov
rcrl
bound
dec
pop
jnp
ja
mov
push
add
js
rcrb
add
jae
jmp
push
push
ret
mov
fildll
inc
sbb
mov
sub
jmp
mov
or
fidivs
incb
aaa
and
jge
mov
idiv
mov
jg
xor
dec
push
adc
mov
loope
xchg
inc
fwait
and
push
jle
aam
imul
punpckhdq
lahf
jmp
jle
imul
mov
dec
jl,pn
clc
jmp
or
in
sbb
sbb
popa
out
xchg
lock
faddl
fstl
add
pushf
loop
xor
dec
mov
lret
push
mov
and
std
nop
sub
fstpt
xchg
mov
xor
in
mov
inc
stos
out
or
pop
lahf
jg
rcrb
cltd
push
stc
push
mov
inc
push
fs
add
mov
sub
aad
adcb
cltd
add
cmp
inc
adc
push
insb
lods
je
pusha
jle
add
in
iret
lods
pop
push
inc
loopne
push
nop
repz
sbb
out
inc
pop
lret
xor
add
dec
pop
sti
mov
xlat
fincstp
pop
mov
and
sahf
push
and
fwait
jl
pushf
mov
fwait
imul
stc
cmp
sbb
push
push
std
pop
sub
cmp
dec
adc
movsb
sub
sbb
comiss
and
xorl
ja
jmp
enter
sub
jnp
xchg
imul
cs
push
cmp
imul
mov
and
imul
xchg
mov
clc
jno
fistpll
adc
push
adc
sbb
adc
and
bound
mov
mov
or
dec
sti
es
cld
xor
call
cld
xchg
subl
je
mov
push
fmuls
mov
or
jns
push
les
ja
xor
xchg
mov
xlat
xorb
out
jl
push
movsl
push
das
rcrb
iret
xor
xor
jb
adc
shl
cmp
insl
loopne
loope
mov
insl
loopne
sbb
rcr
addr16
add
dec
pop
aas
xor
mov
scas
push
imull
push
jae
je
stc
xchg
loopne
ljmp
and
mov
insb
jae
mov
lock
pop
cs
movsl
sar
into
fisttps
or
xchg
push
out
out
mov
jle
push
jne
insb
mov
in
dec
sbb
cmp
xor
lock
jmp
mov
rcll
ret
jmp
mov
mov
and
addl
rorl
pop
rorb
stc
xor
cmpsb
jbe
imul
push
cmc
insb
out
cmp
mov
mov
sbb
test
mov
cmp
dec
fdivrs
push
sbb
scas
xchg
or
dec
test
insb
and
xchg
mov
inc
jbe
inc
out
and
jnp
or
popa
mov
mov
ljmp
loop
out
aam
xor
push
cwtl
in
cmp
rclb
cmp
addr16
pop
push
push
imul
sub
jge
mov
xor
fsubl
lahf
adc
mov
and
mov
sub
les
dec
cmpsb
fcomps
iret
push
sbb
cs
jp
test
push
test
mov
stos
pop
fiadds
xor
les
clc
xchg
sbb
in
cli
lahf
add
movsl
jecxz
xchg
sub
aaa
fwait
dec
adc
jp
sbb
mov
je
adc
insl
xchg
cld
xchg
mov
add
inc
xor
add
mov
jne
inc
cld
int3
pop
shlb
in
test
and
dec
mov
es
xor
imul
std
jns
pop
jno
dec
sbb
and
cli
popf
cmp
sub
pop
push
adc
jecxz
insl
arpl
dec
jo
inc
nop
enter
mov
mov
mov
stc
and
fdivrs
pandn
mov
cs
sub
lods
add
scas
add
cmpsl
jnp
push
aam
gs
jp
cmp
xor
mov
inc
add
leave
xchg
xchg
dec
testl
push
pop
pushf
pop
push
mov
mov
dec
push
cmp
mov
aaa
sub
jbe
jns
mov
stc
sbb
dec
jae
push
xor
stos
push
inc
cmp
sub
cmp
add
mov
mov
divb
xchg
mov
adc
hlt
inc
xchg
cltd
sbb
dec
mov
pop
and
adc
addl
inc
dec
inc
pop
ja
call
ficoml
pop
mov
jp
test
std
or
push
and
fdivs
push
repz
xlat
pop
jmp
push
ss
xor
loope
ljmp
xor
jle
add
lahf
xchg
dec
lret
add
or
unpckhps
clc
rcll
jecxz
sti
adc
iret
lock
fldl
bound
dec
mov
xchg
out
shlb
and
mov
in
repnz
stos
ficomps
dec
pop
idivl
xor
inc
loope
repz
and
mov
lods
mov
icebp
test
add
add
lea
icebp
xchg
add
fsubrs
ret
int3
xchg
aas
fnstcw
dec
test
cmp
and
lods
popa
out
add
cld
clc
into
std
fimuls
mov
shll
aad
and
int
cltd
mov
and
cmp
lret
hlt
call
test
shr
in
or
dec
insb
repz
push
popa
outsb
xor
xchg
sti
adc
dec
xchg
pop
or
xchg
jecxz
into
aad
aaa
add
pop
lods
insl
insb
push
and
jns
and
dec
mov
sub
lods
repnz
mov
push
push
pop
es
dec
fxch
or
cli
pop
mov
in
mov
pushf
xchg
pushf
cld
mov
filds
dec
adcl
xchg
jg
inc
sub
inc
xchg
pop
jae
push
pusha
repz
testb
test
stos
dec
orl
sub
test
fistpll
ds
std
add
outsb
in
mov
ret
sbb
mov
les
out
jg
xor
aad
jae
and
push
movsl
out
inc
mov
push
mov
inc
mov
dec
icebp
mov
mov
std
xor
ss
movb
test
je
pop
mov
sub
cmpsb
clc
mov
adc
sti
test
insl
mov
enter
ret
mov
sbb
out
idivl
jg
adc
push
sbb
inc
movsb
ffree
mov
jge
pop
xchg
sbb
xlat
test
pop
xorl
movsb
mov
rcll
fidivl
out
shlb
cmp
pop
insl
xlat
pop
adc
mov
das
in
int
cwtl
and
cwtl
xor
es
clc
pinsrw
out
mov
dec
add
lret
lds
add
cmc
inc
mov
shl
mov
out
jbe
outsl
sub
and
lods
cmpsl
and
lock
cmpsb
lahf
push
sbb
inc
addr16
icebp
int3
xor
adc
pop
inc
sbb
xor
in
dec
mov
ret
lods
pop
sub
cmc
mov
pop
mov
xchg
pop
movsb
xchg
loopne
mov
and
popa
or
push
sub
mov
sbb
addl
xchg
jp
loopne
push
icebp
aam
pop
mov
mov
push
mov
inc
test
inc
sub
flds
insl
jnp
mov
xor
je
in
mov
stc
cmp
mov
sbb
call
movsl
mov
enter
jno
adc
sbb
jl
cmp
or
arpl
add
and
pop
sub
xlat
adc
arpl
and
xchg
jbe
adc
data16
or
mov
lds
mov
and
jnp
imul
mov
xchg
xchg
andb
lock
jae
adc
xor
aam
sbbl
cmp
mov
roll
sub
bound
fistl
mov
bound
mov
mov
xchg
stc
lods
dec
in
mov
ficompl
lods
stos
mov
pop
cmp
fwait
lds
lret
adc
aad
push
push
movsb
ja
pop
rcrb
cli
lret
xor
sub
cmp
imul
test
test
nop
loope
ret
mov
fwait
xchg
cmp
and
or
and
gs
xchg
popf
mov
data16
mov
aad
xor
mulb
ds
insl
cltd
push
mov
in
sar
ss
or
sub
scas
test
daa
sahf
or
ret
insl
ja
outsb
jle
sbb
rolb
adc
ret
and
enter
fidivs
cmpb
into
inc
out
loope
sub
mov
insl
fisttps
adc
inc
rcr
xor
arpl
imul
and
pop
xchg
adc
xor
pop
push
lret
dec
pop
xchg
pop
or
sbb
popa
jge
mov
dec
pusha
das
andb
fmuls
ds
jo
pop
lret
xchg
cmp
mov
add
mulb
adc
sbb
imul
push
sbb
xchg
test
push
inc
add
mov
pusha
mov
mov
outsb
add
imul
into
adc
andb
inc
xchg
sub
repz
sbb
seta
sarb
popa
sbb
push
xor
dec
int
mov
repnz
movsl
sub
and
sbb
add
mov
cmp
loope
push
pop
clc
es
or
push
and
pop
lret
loopne
push
fildll
add
mov
dec
repnz
jl
adc
fcmovnb
popf
dec
sbb
sbb
dec
call
cmp
pop
xor
sbb
mov
lret
fwait
lods
aas
and
or
test
scas
fmul
cmp
insl
jbe
fsts
mov
mov
rcrl
add
lods
sbb
dec
fidivl
sarl
inc
mov
movsb
sub
lcall
push
push
cmp
repnz
cmpsl
xchg
push
sub
orl
xor
push
sbb
sbb
sti
mov
mov
or
jp
arpl
leave
jg
imul
sbb
jbe
xor
insb
xchg
inc
sub
loop
pusha
mov
lods
outsb
sub
pop
jns
decb
xchg
test
fsubr
or
loopne
cmp
add
div
stc
js
sub
fsubr
popf
faddl
ror
push
xlat
sarl
sbb
out
ja
sbb
cwtl
cld
test
jnp
cmpsl
push
aaa
out
inc
push
sbb
fsubrs
inc
pusha
adc
cltd
or
mov
gs
lds
incl
jae
int
movsb
mov
hlt
ror
sbb
stos
dec
imul
adc
pop
mov
fldcw
or
cmp
decl
btc
adc
or
mov
bound
adc
out
jne
or
inc
fcmove
js
mov
cmp
or
fmuls
ret
stos
les
popf
loope
xchg
and
aad
push
sub
loop
fdivs
xchg
out
fwait
rcrl
mov
andb
fsubp
xchg
xchg
xor
adc
aad
and
in
mov
fs
dec
add
mov
dec
ds
xor
adc
lahf
push
imul
sub
fsubs
xchg
mov
mov
scas
xor
mov
and
fmuls
ja
adc
or
popa
in
inc
mov
mov
xor
test
dec
sti
stos
sti
lock
mov
cmp
and
jge
in
inc
lea
pop
cltd
cmp
repz
adc
xchg
subl
popa
insl
xchg
inc
cvtpi2ps
mov
popa
push
les
xchg
jge
mov
jp
daa
jns
jecxz
jbe
xor
cltd
notb
shll
pop
mov
add
gs
jbe
sbb
clc
sub
test
cmp
pop
into
es
mov
ficoml
aas
mov
mov
shl
subl
cli
lds
xorb
sbb
pop
push
jmp
jmp
aam
inc
mov
out
popf
jo
jbe
lock
or
inc
xchg
xor
lea
mov
testl
hlt
out
mov
push
inc
call
xchg
pop
push
add
call
sbb
shlb
test
push
xchg
jle
sub
pop
out
mov
lods
or
arpl
fistl
incl
or
loopne
call
stos
sub
aaa
sbb
jnp
pop
push
jne
lock
pusha
sub
mov
mov
cmp
stos
lods
scas
or
andl
inc
pop
mov
jp
cmp
iret
ret
loop
pop
cmp
jp,pn
ljmp
push
dec
mov
xor
repnz
or
adc
addb
fimull
loope
sub
cmp
xchg
xlat
push
add
sbb
into
adc
aas
and
push
es
fcoml
mov
xchg
das
scas
mov
ljmp
adc
cwtl
push
stos
and
xor
lahf
xchg
aad
outsl
lock
cli
push
popf
mov
cmp
pop
mov
cmpsl
pop
stc
mov
xlat
xchg
lahf
addl
dec
or
pop
pop
push
and
icebp
and
nop
bound
sti
fnstsw
hlt
xchg
pop
push
push
stc
adc
mov
lods
sbb
xchg
movsb
mov
xchg
jmp
ss
adc
push
shlb
mov
aad
sbb
cmpsl
push
pop
aad
dec
sbb
add
pop
or
loope
es
dec
orl
pop
sbb
shll
xor
lods
scas
pop
bound
imul
xorl
dec
into
popa
mov
pop
lods
cmp
cltd
scas
pushf
sub
pop
imul
pop
aas
into
mov
mov
in
cmpsl
mov
jmp
sbb
lock
outsb
je
fnstenv
mov
mov
cli
sbb
pop
cmp
lock
aas
cmp
inc
scas
jle
orb
xor
sub
aam
jb
push
jmp
mov
and
inc
pop
es
jnp
aas
enter
mov
lret
rcrl
mov
mov
loopne
jg
or
xor
icebp
push
fsubl
inc
sahf
sbb
sbb
jae
inc
pop
pushf
pop
xor
push
testb
cmp
popa
mov
jg
enter
xor
scas
loopne
xor
int
stos
dec
pusha
scas
xor
outsl
xchg
mov
cmpb
mov
js
out
loopne
outsb
mov
sbb
mov
cmp
cmp
enter
lret
adc
pop
jno
pop
inc
jno
fildl
sbb
into
adc
mov
das
xchg
cmp
mov
or
xchg
jo
jno
cli
sbb
cs
pop
loop
loop
popa
mov
add
push
ret
sti
pop
or
je
jbe
jne
pop
repnz
mov
cmp
or
cmp
sub
iret
in
test
and
xor
jmp
jb
mov
push
mov
adc
jae
add
out
mov
out
mov
or
imul
sub
aad
xor
mov
or
adc
and
cmpsb
fwait
push
cmpsl
xor
cltd
addb
cwtl
or
mov
lahf
mov
add
pusha
jmp
enter
or
movsl
add
sub
pop
mov
popa
addr16
dec
mov
cmpl
dec
iret
aam
stc
inc
call
lods
dec
std
mov
ljmp
push
out
adc
insl
mov
dec
lods
ret
cs
jmp
repz
jns
adc
adc
push
or
inc
outsb
fisttpll
mov
dec
sbb
pop
fnsave
push
incb
adc
es
sarl
push
pop
mov
push
and
xchg
and
pop
fadds
push
out
jns
test
imul
cmc
or
insl
fcompl
xor
fadds
push
xchg
orl
hlt
fscale
xor
adc
loope
pop
icebp
xorl
ret
out
jle
push
loopne
mov
sub
push
aaa
fidivrl
lret
inc
je
inc
ja
cld
leave
push
cmp
cmp
ds
xchg
stc
imulb
adc
push
inc
xchg
das
cli
jle
xor
push
add
popf
add
imul
sub
fs
or
inc
repz
mov
aam
pushf
xor
mov
jae
adc
pop
loope
jle
dec
int
mov
cmp
loop
adc
add
inc
icebp
jg
sti
adc
push
push
add
sti
xlat
xchg
movsl
inc
mov
jecxz
inc
jmp
pop
inc
sti
je
push
mov
adc
jge
cmp
scas
aas
bnd
sbb
gs
fsub
ljmp
mov
mov
js
sarl
frstor
in
cmp
push
sub
insb
push
addr16
mov
aam
cmc
mov
aad
scas
adc
sbb
sbb
enter
sub
mov
adc
or
sub
in
out
scas
fsub
das
test
push
jbe
fsts
sbb
and
mov
adc
push
adc
stc
dec
cmp
jp
mov
pop
shl
adc
loop
and
mov
or
adc
imul
jno
lahf
or
pushf
dec
and
or
hlt
mov
shlb
cmp
addr16
lods
leave
inc
and
sub
out
je
mov
out
movsl
bound
cmp
dec
iret
scas
repnz
sbb
lea
les
xchg
fistl
xchg
movsl
push
popa
dec
xlat
icebp
jp
testb
mov
inc
fnsave
fwait
je
mov
scas
push
push
jae
cmp
stc
dec
mov
fsubs
mov
sar
test
or
loope
ret
call
jmp
and
in
mov
cmp
addb
fnsave
mov
push
outsb
xor
mov
in
leave
mov
rcrb
cs
stc
xor
lret
pop
js
mov
int3
mov
in
xlat
push
test
push
imul
aam
push
push
jo
imulb
pop
xor
leave
xlat
adc
lcall
lds
ret
and
mov
add
jp
repz
fmuls
test
daa
data16
cs
lea
xchg
das
pop
in
daa
and
nop
mov
cmp
sahf
fstpl
mov
or
push
xor
xchg
push
bound
jns
faddp
adc
stos
sti
int
call
cmp
lods
mov
stos
das
mov
mov
loop
push
fildl
inc
pop
lcallw
rol
enter
movsl
sub
mov
dec
nop
adc
inc
addb
pop
inc
sub
out
xchg
mov
mov
xchg
sub
push
jge
mov
orl
fildl
out
cmp
loope
imul
jmp
test
push
in
std
inc
or
sbb
push
sbb
stos
push
mov
out
xor
std
add
push
fwait
jb
lds
pop
sbb
iret
and
icebp
push
fsubrs
mov
fnstenv
adc
pushf
loope
cmpsb
or
ret
adc
sbb
les
dec
mov
sbb
in
bound
and
lods
pop
repnz
shrl
jnp
mov
xchg
dec
movsl
push
loope
push
jg
sbb
sbb
icebp
mov
call
push
sbb
jl
scas
cmp
mov
clc
and
mov
mov
dec
out
outsb
test
lock
les
or
scas
or
stos
mov
inc
repz
jg
into
mov
pusha
lahf
out
push
repz
and
fistpll
test
cwtl
xor
mov
popf
xchg
lods
xchg
add
iret
mov
test
jo
add
jmp
mov
aas
xchg
add
jo
push
inc
sbb
mov
inc
cmp
dec
cmp
dec
je
sbb
inc
hlt
mov
and
sub
test
movsb
and
je
mov
mov
into
cmpsl
int3
jg
andl
push
add
jno
subl
mov
sbb
push
mov
mov
rcrb
xchg
mov
mov
sub
jl
add
xor
sbbl
xchg
jle
push
adc
fyl2x
dec
push
xor
mov
addb
mov
loop
sbb
jnp
adc
mov
test
inc
loop
arpl
mov
jmp
sub
jl,pn
aaa
pop
ja
call
mov
insl
nop
mov
data16
inc
lods
js
dec
fwait
xchg
jge
jmp
xchg
jne
stc
js
ret
mov
xchg
add
or
sub
out
bound
push
insl
imull
imul
mov
lcall
mov
lods
cmp
lods
fimull
xchg
pop
mov
call
scas
add
into
cmpsl
pop
mov
inc
mov
sub
mov
xchg
cmpsl
mov
push
dec
int
xchg
push
and
mov
in
push
dec
push
cmp
add
pusha
enter
jbe
and
or
mov
outsl
scas
dec
repnz
cmpl
test
lea
or
dec
fwait
jge
sub
bound
ret
sarl
dec
mov
pop
mov
adc
xor
mov
pushf
inc
push
mov
int3
sahf
js
pop
imul
adc
and
rol
je
scas
les
adc
xchg
cltd
das
sub
mov
xchg
xor
out
cmc
fucomp
cltd
jp
test
ficoml
add
push
push
fdivp
movsb
sub
pop
scas
cltd
mov
fmuls
icebp
andb
addr16
in
orl
scas
jns
pop
icebp
mov
daa
fs
pusha
into
inc
int3
pop
sub
mov
pmaxsw
and
adc
sti
xor
sub
xor
ret
push
nop
adc
pop
xlat
and
nop
sbb
sub
jmp
leave
push
push
popf
fildll
or
mov
pop
jmp
xor
sbb
les
test
enter
fstl
aaa
sbb
mov
jns
pop
and
loopne
cmc
pop
icebp
push
out
ljmp
imul
ss
dec
jae
adc
stos
lcall
sarl
inc
adc
xor
jmp
sbb
adc
xchg
mov
gs
adc
or
lret
stos
push
shlb
or
in
mov
push
sub
dec
sbb
mov
stc
cmpl
cmpl
push
nop
mov
clc
add
call
daa
mov
shll
arpl
mov
xor
fs
jmp
mov
adc
xor
adcl
es
jo
xchg
lds
sub
jge
mov
push
mov
dec
xlat
pop
xchg
movsl
test
rorb
push
stc
jb
addb
jmp
loope
sub
in
cmp
in
sysenter
pusha
ljmp
or
out
out
sbb
cmp
clc
add
pop
pusha
xchg
cmp
jbe
pcmpeqw
lret
sub
xor
pop
pop
mov
pop
xor
sub
sbb
cmpsb
ret
jle
in
sbb
mov
pop
sahf
ret
addb
in
hlt
xchg
cld
aad
iret
inc
jg
inc
fcmovnb
jbe
stos
insl
repnz
cmpb
shrb
dec
pop
ds
lea
xchg
adc
ret
xchg
movb
insb
xchg
sub
sub
les
or
ret
push
inc
mov
loop
cmc
fisttps
adc
popf
int3
pop
inc
jl
mov
sub
cmp
out
mov
std
push
in
jnp
sti
sbb
xor
cmp
xchg
popa
stos
xchg
inc
cmp
data16
js
pop
test
imul
out
lcall
dec
xchg
fcmovnbe
xchg
mov
xchg
and
ljmp
iret
inc
lcall
push
adc
rcl
jns
inc
jno
inc
leave
sub
int
pop
mov
sbb
iret
push
divb
enter
push
pop
dec
testb
je
xchg
lods
repz
mov
fs
test
jnp
xor
sub
xchg
push
enter
pop
push
cmp
mov
sbb
xor
mov
in
filds
mov
xor
mov
cmc
cmp
dec
pop
call
cltd
shrb
add
mov
or
lcall
into
in
ret
pop
and
cmp
mov
in
push
sbb
cld
add
dec
imul
xchg
ret
dec
testl
ljmp
out
addr16
clc
lea
ret
cmp
jne
cmpb
inc
add
lcall
rorb
insb
idivl
mov
xor
sub
scas
jno
aad
xlat
test
daa
mov
jg
test
mov
jb
adc
jge
arpl
push
and
in
nop
and
xor
jp
lock
les
test
in
mov
jb
cltd
movsl
test
les
in
pop
movsl
incb
mov
push
cmpsb
inc
iret
xor
fs
sub
movsl
out
sbb
stos
sub
ret
loope
sbb
sub
rcl
stos
sbb
ss
jne
test
scas
push
lret
pop
dec
pop
cmpsb
enter
xor
sbb
jecxz
sub
push
rorl
push
adc
stc
or
sbb
test
cmp
stc
clc
or
lahf
dec
cld
call
push
and
push
vpaddsw
and
arpl
sbb
ret
data16
mov
sub
movsl
inc
jmp
xchg
js
pop
sti
int
popa
inc
cwtl
dec
cmpsb
sbb
fcoml
xor
pop
sub
cmp
add
imul
and
lcall
push
test
cwtl
hlt
xor
in
pop
daa
mov
cltd
nop
loop
sbb
iret
mov
in
add
mov
jne
xchg
shlb
pusha
fadds
xor
js
sub
enter
xor
mov
das
loop
jmp
push
cmp
dec
xchg
scas
pusha
push
xchg
push
add
adc
pop
push
mov
movsb
in
fsubl
lock
pusha
jge
cmp
pop
cmpsl
out
mov
or
fisttpl
movsl
inc
shl
push
mov
mov
popf
test
mov
sbb
ss
push
sbb
jmp
mov
aad
push
xchg
jo
mov
stos
ljmp
mov
test
add
test
sbb
out
sti
outsl
push
xor
insl
stc
jle
sarl
lahf
fmuls
shl
pop
mov
sub
repz
and
mov
xor
lea
js
idivl
push
mov
xadd
stos
mov
js
bound
nop
ss
arpl
inc
std
xor
out
or
insl
pop
jp
frstor
xchg
and
fdivrs
xchg
sbb
sbb
mov
mov
mov
orb
ljmp
into
rol
mov
ja
jmp
jecxz
int
pop
das
out
sub
push
int3
pop
mov
out
dec
in
fldenv
ja
or
adc
test
out
fdivrs
popa
lahf
lret
ds
aad
mov
test
sbb
int3
dec
popa
pop
cmpsl
jb
popf
cmp
ret
mov
cltd
lock
xor
pop
push
out
xor
jns
shlb
sub
aam
cmp
pop
loopne
adc
xor
arpl
push
mov
aam
imul
sbb
das
andl
cmp
popf
and
out
dec
sub
pop
xchg
push
cli
int
xor
push
pop
pop
mov
mov
jle
mov
es
mov
ret
mov
lcall
sbb
ret
and
rolb
mov
loop
and
mov
scas
loopne
pop
pop
or
leave
adc
notl
xor
rorl
inc
scas
insl
jno
push
das
push
pop
lock
mov
jne
aaa
scas
dec
lea
xor
pop
jo
mov
divl
icebp
imul
faddl
add
inc
aas
lret
mov
fnstsw
inc
or
mov
sub
pop
sbb
jge
je
roll
push
fidivrl
fstpt
sbb
jb
adc
aad
xchg
lret
stos
lock
jno
cmp
ljmp
xor
push
bound
adc
pop
test
in
into
inc
loope,pn
mov
or
ret
inc
adc
popf
dec
mov
int
mov
add
mov
rcrl
fs
mov
into
xor
inc
aas
sbb
or
ja
lret
xchg
data16
mov
insl
mov
add
shrl
pusha
mov
fistps
cmpb
xchg
jle
dec
or
les
xor
push
lock
dec
rorb
xchg
xchg
add
sbb
pop
imul
mov
and
inc
dec
ss
dec
pop
mov
outsb
cmp
or
nop
les
pop
iret
jg
sbb
mov
ret
aad
daa
adc
lret
iret
add
push
cltd
cmp
pop
iret
cld
ds
cmc
repz
cs
mov
cmp
aam
jg
or
dec
rcrb
add
js
fdivs
cmc
or
int3
insb
adcb
sbb
outsb
cmp
leave
pop
or
or
icebp
or
data16
scas
mov
into
outsb
fwait
sti
movsl
fidivrl
mov
scas
adc
dec
mov
leave
loope
cmc
or
mov
notb
mov
push
lods
pop
imul
lods
mov
clc
cmp
mov
mov
pushf
xorl
sbb
cmp
xchg
idivb
std
call
out
icebp
xor
outsl
fs
addr16
outsl
push
jecxz
sbb
pop
xchg
lcall
sbb
out
bound
out
lock
jmp
dec
in
sub
mov
jp
repnz
mov
xlat
mov
push
lea
or
faddp
jge
shl
inc
jne
bound
inc
lret
xor
mov
push
cmc
scas
scas
imul
into
lcall
add
xor
daa
leave
divl
mov
xchg
dec
test
jecxz
xlat
iret
cli
fcmovnbe
mov
out
scas
push
sbb
adc
mov
scas
decl
jb
sbb
jmp
push
pop
jne
push
jge
cld
pop
adc
scas
mov
call
ja
mov
mov
and
inc
test
daa
add
lret
dec
cmp
mov
adc
mov
sbb
stos
repnz
insb
lods
loope
cmpsl
xchg
mov
outsl
lods
mov
pushf
das
imul
mov
adc
movsl
popf
pop
jnp
fisttpl
xor
cmc
xor
outsl
mov
test
fdivp
mov
pop
in
add
inc
xor
xor
sbbl
push
mov
imul
pusha
int
popf
xor
dec
xchg
mov
dec
hlt
and
dec
test
sbbl
mov
addl
testl
jb
push
cmp
xor
inc
loop
xor
test
dec
jecxz
add
dec
lds
adc
sbb
cvtdq2ps
daa
xchg
jbe,pt
outsl
icebp
in
jge
movb
push
lods
dec
and
push
xor
jae
mov
push
aaa
cld
ljmp
sub
xor
sbb
movsb
mov
leave
sub
lahf
and
push
jmp
addr16
jns
ret
adc
mov
jecxz
pop
jge
pop
out
je
mov
cmp
aam
jmp
enter
cmc
jp
insb
jbe
and
dec
rcll
sub
jp
fidivs
xchg
inc
lret
sub
lods
mov
int
hlt
xor
push
lock
cmp
imul
and
es
ss
cmp
out
repnz
mov
push
ljmp
xchg
pop
in
cli
jne
or
das
push
jne
mov
shrb
aam
and
pushl
hlt
iret
push
movl
and
pop
shrl
or
xor
test
je
pop
jmp
and
fwait
xchg
vcvtdq2pd
mov
xor
cld
mov
pop
cmpxchg8b
int3
adc
iret
add
nop
arpl
inc
mov
jmp
cltd
dec
call
mov
gs
icebp
scas
loope
adc
in
pop
and
jo
fisubl
mov
cmp
ret
xchg
ret
dec
mov
fwait
adc
add
or
je
enter
xor
outsl
pop
sbb
and
mov
lahf
out
jns
jb
add
adc
xor
lret
adc
out
lret
stos
aad
cwtl
pop
fsubs
jbe
movb
adc
hlt
notb
lock
cmp
psadbw
in
mov
sbbb
ret
and
mov
lea
pop
sbb
rolb
cmp
cwtl
jl
cmpsl
xchg
push
sub
push
jg
sahf
jg
pushf
jmp
movsb
or
leave
or
and
in
mov
in
lods
pop
jmp
std
and
lahf
jp
push
es
ljmp
popf
fnstsw
pop
mov
int3
jns
dec
mov
lea
push
sub
sbb
test
mov
sbb
sub
fwait
xor
push
stos
into
inc
xlat
sbb
xchg
mov
shll
aas
mov
fs
cld
push
adc
inc
leave
sbb
sbb
jmp
jl
xchg
icebp
lods
mov
jl
lcall
cmp
lds
cmp
mov
inc
psllq
fs
cmp
outsb
out
addr16
inc
pop
xchg
das
leave
jae
jecxz
mov
adc
and
jg
pop
arpl
rolb
rcr
ljmp
jg
and
pop
divl
lret
mov
cmp
mov
inc
or
push
fwait
push
pop
cltd
adc
xor
inc
sbbl
js
add
xchg
adc
and
fimull
jmp
rep
orb
inc
xchg
jo
add
mov
jno
dec
test
jne
sar
xor
imul
fidivs
or
ret
mov
or
mov
fwait
xor
jne
mov
test
xor
or
adc
jnp
or
xchg
testl
adc
int3
inc
insl
inc
stos
and
add
lock
loope
dec
pusha
sbb
dec
add
push
cld
rolb
jne
xchg
dec
cmpsb
push
scas
stos
pop
in
mov
jge
mov
add
and
sub
xor
cmpl
into
loop
dec
jge,pn
in
dec
inc
stos
jg
mov
xor
mov
lock
in
push
hlt
cltd
movntps
popf
sbb
lcall
call
mov
ret
add
dec
add
adc
adcb
mov
in
mov
and
or
cmpsl
push
fistpl
out
jp
jae
push
push
pushf
mov
inc
stos
sub
mov
out
test
cmp
incb
push
mov
hlt
push
and
and
jp
and
dec
cmp
repnz
cmpsb
fwait
push
push
inc
out
and
mov
cmp
sbb
dec
mov
gs
mov
outsl
xchg
cld
push
pop
daa
inc
push
clc
dec
inc
test
in
pop
inc
das
andps
jns
jecxz
xchg
add
mov
lods
rorl
cwtl
adc
adc
clc
sub
ja
xchg
push
push
icebp
notb
popa
and
frstpm(287
jecxz
cli
xlat
ret
xchg
inc
ss
push
out
sbbl
cmp
pop
mov
push
inc
hlt
pop
mov
lods
out
xchg
inc
rolb
dec
xchg
leave
jge
dec
or
mov
aam
imul
xor
add
lret
insb
stos
push
xchg
cmp
aam
sbb
ss
push
movsl
push
adc
cli
mov
jg
mov
pop
xchg
cmpsb
pop
fisubl
stos
dec
inc
imul
and
jmp
addr16
inc
mov
cmpsb
adc
push
pop
and
bound
xor
xorb
cmp
loope
inc
adc
cld
mov
push
mov
sbb
inc
mov
stc
out
mov
mov
call
inc
jo
xor
faddl
shr
and
add
lcall
cmp
popa
adc
jmp
fidivs
and
xchg
pop
shrb
xor
repz
adc
mov
push
mov
add
aad
movsb
in
lods
hlt
out
xor
nop
shl
in
xor
imul
push
push
pusha
les
add
cmpb
das
fistl
pop
push
xchg
adc
out
dec
sub
mov
sbb
rorb
mov
aad
mov
adc
jb
sbb
bound
xor
mov
out
inc
pop
add
std
ficoml
into
cmp
loop
adc
xchg
add
test
jl
int
ljmp
cmp
ret
xchg
fsubrl
xor
shlb
push
jne
jnp
sub
mov
adcb
jns
jp
dec
call
xchg
insl
push
pop
jl
mov
test
dec
inc
mov
xlat
lret
or
pushl
and
mov
ljmp
ds
pop
xchg
insl
fincstp
int3
dec
in
mov
cmc
stos
test
enter
shl
loope
mov
jg
dec
push
jnp
sahf
sbb
outsl
sar
mov
add
sbb
cmp
jl
sbb
pop
inc
int3
pop
xchg
pusha
adc
pop
aaa
fs
adc
jno
or
inc
add
rorb
das
lahf
stos
fdivp
and
mov
mov
out
aad
jl
mov
sub
fsts
movsl
les
inc
lea
sub
dec
mov
aam
dec
mov
out
lret
jno
sbb
adc
sti
jg
or
in
or
push
push
cmpsl
outsb
test
ja
fcomp
adc
fnsave
inc
mov
mov
int3
cmp
leave
in
imul
shrl
sahf
adc
and
insl
mov
sbb
sbb
and
inc
testl
mov
mov
les
mov
jne
mov
int3
leave
push
jmp
shrl
rcll
movsb
cs
cmc
push
xchg
mov
push
sbb
out
mov
mov
jb
push
sahf
mov
sbb
popa
mov
jb
xchg
and
mov
out
mov
pop
mov
fisubrs
cmovns
mov
jle
movsl
pop
push
mov
pop
xor
call
loopne
aad
js
jl
stos
sub
and
xchg
out
fwait
xchg
xchg
xchg
fwait
xlat
popf
clc
shll
stos
ds
jmp
les
mov
hlt
pop
push
int3
jl
insb
pop
test
push
mov
lods
enter
fwait
cltd
cmp
jno
jbe
stos
adc
je
fisttpll
sti
cld
dec
pusha
jmp
jl
nop
push
nop
jb
mov
pop
nopl
mov
or
call
sub
into
fcoms
jmp
les
mov
sbb
popf
movsb
dec
sbb
or
add
push
mov
push
out
arpl
lcall
scas
sbb
xor
icebp
lods
hlt
les
mov
add
movsl
shll
xor
xchg
and
xor
fcomps
pop
add
sarb
sbb
addl
mov
mov
rclb
add
pop
pop
mov
jp
push
sub
xor
movl
lds
push
push
popa
xchg
test
xor
popa
xlat
ds
mov
sub
repnz
jge
inc
pop
imul
jp
ja
sub
in
ret
repz
sbb
icebp
cmc
and
mov
lock
pusha
insb
in
scas
and
popa
mov
in
outsl
lret
mov
mov
inc
imul
jnp
add
mov
into
fmull
popf
mov
mov
test
cli
imull
inc
jmp
ret
or
or
pop
lods
cwtl
aam
fbstp
sahf
push
lds
das
ret
sbb
out
das
mov
ret
movsl
fildl
mov
call
sbb
sub
out
jo
xchg
pop
in
mov
xor
mov
test
cmp
sbb
mov
mov
into
mov
mov
out
ss
jno
in
cmpsb
jno
or
push
sub
es
adc
push
sarl
and
mov
sahf
pop
lods
xchg
roll
in
loop
clc
or
cmp
dec
iret
aad
or
shl
or
and
mov
push
push
lods
notl
jmp
xchg
adc
ds
test
dec
imul
adc
add
shrl
lock
out
xchg
jmp
add
cmpsl
inc
mov
sbb
sub
lock
cmc
add
out
out
cld
popa
xchg
bound
ret
lds
in
aaa
xchg
fstl
sub
pop
out
sbb
aas
push
push
sub
data16
lods
test
movswl
xchg
repz
lods
pop
imul
inc
jle
xor
pop
pop
loope
inc
mov
out
lret
aaa
dec
fldl
push
push
push
std
es
sbb
cmc
movsl
imul
or
leave
or
cmpsl
or
dec
les
jae
ja
aam
xchg
push
jmp
or
into
mov
sbb
fdivs
int
scas
shll
dec
out
or
fs
sbbl
cmp
add
sarl
lret
call
fdivs
push
daa
lods
ja
and
jle
fisubrl
mov
mov
jns
cmp
inc
lcall
mov
xor
ror
popa
lcall
ret
cmpsb
jmp
mov
add
sbb
mov
ss
les
pop
jp
jge
daa
dec
inc
lret
stos
shll
inc
pop
fisttps
loop
sub
repnz
xchg
loop
add
hlt
loopne
push
mov
ret
rol
sbb
push
mov
test
pop
inc
in
insb
test
fmull
sub
divl
add
dec
testb
mov
dec
pushf
enter
dec
inc
std
iret
cmp
and
xchg
test
cmpsb
mov
mov
pop
ljmp
add
shl
std
push
je
faddl
xchg
pushf
and
inc
xlat
xchg
jmp
roll
arpl
push
jae
popf
inc
arpl
cmp
mov
sbb
push
cmpsl
fimull
xor
cli
push
xor
pop
lret
lds
pop
jle
mov
je
inc
sub
mov
jo
aaa
push
add
pop
jns
pop
cwtl
cmc
push
and
push
out
push
xor
pop
fldl
pop
aas
inc
add
jecxz
sbb
imul
sbb
arpl
mov
stos
mov
loope
mov
pmullw
xor
mov
sbb
dec
js
outsl
pop
push
loope
movsb
fstpt
flds
sbb
jae
adc
pop
mov
cld
ss
lea
or
pop
mov
cwtl
popa
xchg
add
shr
push
or
fidivrs
aam
sar
stc
jo
ret
jns
pop
hlt
xchg
xor
popa
pop
xchg
push
sbb
cmp
int3
arpl
and
jnp
and
scas
icebp
fsubr
mov
scas
movl
inc
cmpsb
stc
in
mull
cltd
aas
jnp
jl
das
and
rcl
jb
inc
inc
push
rcll
cld
cld
idivl
pop
cmpsl
iret
mov
push
je
jb
mov
mov
movsl
cltd
ljmp
in
push
cli
movsl
and
cmp
test
push
dec
jp
sti
inc
in
fsqrt
dec
adc
mulb
ljmp
arpl
shll
or
mov
orb
jb
mov
enter
mov
xor
or
xchg
xchg
mov
addr16
mov
repnz
enter
push
mov
lcall
rcl
sub
imul
mov
mov
mov
cmpsb
and
out
aas
dec
mov
cmp
adc
cwtl
ss
das
xor
clc
in
mov
fildl
in
jge
dec
ds
stos
mov
in
fs
sub
or
je
je
xor
mov
or
scas
cmp
and
jp
syscall
xor
sti
jecxz
pop
dec
mulb
inc
mov
lods
loope
mov
sub
push
outsb
adc
sub
call
cmp
sbb
pusha
mov
mov
dec
jae
xor
shrb
mov
sub
mov
subl
std
and
dec
sbb
mov
outsb
adc
call
in
adc
inc
cwtl
stc
inc
push
lds
scas
mov
out
pop
cmp
mov
and
fmul
sub
dec
nop
insl
ja
xor
or
out
dec
or
mov
pop
sub
mov
sbb
aaa
push
push
jnp
dec
lret
jnp
jle
pop
data16
cmp
jle
bound
pusha
jbe
outsl
imul
xchg
adc
in
cmp
aad
lahf
mov
negb
ja
adc
stos
xchg
in
lret
lret
pusha
push
and
jbe
ds
sub
shl
addr16
mov
lret
sti
lret
in
mov
imul
into
subl
mov
jp
mov
imul
cmp
outsb
xchg
xor
pop
lods
mov
scas
pusha
push
cmpsb
sbb
add
rcll
mov
lds
dec
push
push
xor
sub
or
jg
add
popa
or
xor
leave
adc
inc
loope
imul
pop
sar
push
pushf
inc
cmp
mov
pop
in
outsb
inc
cltd
xor
push
or
pop
cs
adc
es
lods
mov
jbe
dec
pop
inc
popf
repz
and
inc
fiadds
mov
fisttpll
and
inc
dec
daa
mov
in
fisubs
fstl
and
mov
pop
pop
loope
push
shlb
inc
inc
leave
cmp
jnp
or
lock
dec
mov
movsb
push
add
push
sahf
add
mov
xchg
pusha
pop
cmpsl
inc
sub
lcall
incl
inc
push
cld
leave
cmp
cmc
inc
xchg
and
pop
pop
orb
or
mov
or
in
adc
outsl
in
leave
mov
mov
mov
test
add
inc
mov
aad
dec
fbstp
inc
adc
adc
imul
insb
movsb
mov
inc
lock
mov
cmp
xor
cltd
repz
dec
adc
jns
sub
stc
fists
and
loop
lock
cld
xchg
dec
repz
in
les
test
insl
repnz
mov
adc
inc
mov
pop
push
jno
fs
add
sbb
sbb
fnstenv
mov
repz
push
roll
out
insb
ficoml
sub
adc
arpl
fimull
or
cli
aaa
sub
int
cmp
imulb
aam
pop
xor
mov
mov
enter
hlt
pop
push
inc
add
cwtl
repnz
xchg
mov
inc
shlb
add
mov
loopne
jns
subb
jbe
xchg
add
xchg
jno
das
add
stc
push
push
cmc
xchg
mov
push
add
fwait
test
or
movsb
mov
xchg
sub
inc
adc
lock
jno
mov
jg
mov
test
mov
out
das
xor
je
mov
shl
jge
ja
sub
in
rcl
ror
lods
out
movl
pop
jnp
lock
mov
xor
jp
cmp
add
repnz
lods
push
filds
icebp
enter
mov
dec
pop
adc
xchg
testb
push
subb
sbb
or
sbb
lret
mov
ds
mov
jns
add
xchg
mov
hlt
movsl
xchg
cmpsb
mov
xchg
arpl
xchg
add
hlt
data16
loop
push
pop
cld
icebp
loop
push
aam
int3
sbb
out
jae
mov
xchg
ds
jle
mov
inc
ss
mov
mulb
out
pusha
adc
stos
mov
insl
jns
push
sbb
jmp
rol
inc
xor
lock
mov
dec
les
or
sarb
js
in
adc
xchg
push
ret
pop
loop
pop
jno
pop
aaa
rol
test
xlat
xor
push
cmp
movsb
add
and
xchg
dec
imul
int
int3
loop
and
lods
outsb
bound
mov
rcr
into
sbb
roll
add
mov
gs
pop
adc
and
push
inc
fucomp
mov
mov
stos
pop
xlat
shrl
sub
mov
ffree
push
jns
fs
arpl
add
jno
dec
mov
jns
enter
outsb
mov
out
inc
and
into
lret
sarb
fcomps
pop
scas
mov
aam
sub
mov
scas
add
movl
mov
mov
lret
outsb
sub
je
mov
pop
arpl
fisubl
loopne
gs
xor
out
stos
push
test
cmp
push
pop
cmpb
adc
rcr
inc
aaa
mov
mov
mov
insl
in
dec
dec
jo
xor
clc
sub
xor
add
push
sub
fwait
and
jmp
mov
mov
hlt
aad
out
mov
stos
test
inc
aas
add
push
push
setne
mov
jle
out
cmp
xor
mov
mov
dec
mov
iret
ja
divb
add
shl
insb
or
add
clc
add
rorb
lcall
sar
dec
fwait
out
out
rorl
cmp
insb
into
fwait
mov
pop
loope
lret
jmp
xor
cs
aaa
push
jmp
out
pop
clc
fmul
sbb
test
test
notb
jg
jecxz
mov
jno
inc
repnz
mov
mov
push
addr16
and
sbb
data16
das
stc
xor
fsubrl
jl
aaa
icebp
inc
repz
lods
aam
add
pushf
icebp
jle
les
fs
mull
stos
nop
dec
jle
push
push
add
sub
pop
jo
sti
sub
outsl
pop
test
xor
inc
sbb
dec
imul
aam
lret
cmp
adc
cmpsb
lods
fisttpll
arpl
syscall
iret
popf
popf
ds
je
daa
outsl
jb
mov
scas
das
jl
mov
and
repnz
jmp
jae
xor
jnp
lock
adc
and
fisttpll
lret
add
in
pop
sbb
sti
jns
out
loop
xor
push
adc
inc
cmpb
and
mov
pop
sbb
orb
notl
and
pop
subb
stc
inc
push
add
out
pop
xchg
push
jno
jp
fs
repnz
jmp
xor
add
push
mov
inc
int
xor
cmp
cld
flds
xchg
jnp
pop
nop
and
and
mov
test
sbb
das
mov
push
out
arpl
sub
lret
test
cmp
cmp
leave
setne
push
push
pop
sbb
and
pusha
inc
add
cli
xchg
stos
into
fiaddl
inc
or
cld
pop
sbb
cmc
sbb
test
aaa
leave
mov
push
test
mov
pop
out
xchg
testb
jmp
push
mov
sbb
aam
push
movsl
test
out
dec
ret
pop
test
fwait
jbe
mov
cmp
maxps
sarb
and
cmc
push
ret
fwait
jae
pop
push
out
incb
cmp
sahf
das
pop
out
cmpsb
leave
sbbb
inc
shlb
neg
aad
shll
sub
xlat
cmp
stos
test
pop
pop
inc
cmpsb
dec
rolb
cltd
mov
hlt
or
mov
das
lret
add
cmp
add
add
std
les
add
adc
push
mov
insl
imull
add
lea
loop
xchg
or
pop
jns
push
mov
stos
cld
pushf
mov
nop
push
jl
out
sbb
imul
pop
adc
inc
fstpt
ds
push
mov
mov
adcl
push
dec
movsb
sbb
jle
aas
rorl
jmp
aas
ds
insb
into
bound
sub
xchg
inc
ret
lods
lcall
dec
inc
icebp
jg
xchg
dec
in
sbbl
das
inc
pop
or
or
xlat
mov
out
cmpsb
scas
enter
dec
stos
xlat
pop
out
dec
cmp
addb
xor
movsb
notb
aam
jo
and
hlt
mov
lods
fstl
shl
test
std
addr16
jg
out
dec
pop
mov
jno
sarb
mov
mov
out
pop
ret
nop
fadds
dec
inc
dec
or
enter
mov
inc
test
push
cltd
outsb
out
mov
loopne
lret
dec
sbb
and
test
loopne
fsub
sub
jb
aas
pmullw
mov
add
sbb
fst
fadds
ss
add
movsl
mov
ret
xlat
push
xchg
jnp
push
xchg
mov
pop
aaa
push
push
mov
or
test
mov
pushf
add
pop
fcompl
dec
cmc
insl
and
nop
inc
inc
stos
dec
push
push
loop
andb
std
dec
push
scas
mov
aad
pop
fcmovne
mov
xchg
mov
scas
jg
cmc
or
shll
inc
inc
jle
bound
xor
xor
adc
add
into
mov
dec
ja
or
sub
jg
inc
add
imul
push
or
sti
bound
or
sbb
stos
aaa
or
adc
in
fwait
pop
test
mov
xchg
stc
ds
pushf
cltd
mov
dec
out
shlb
sarb
lahf
ss
clc
int
in
negb
add
xchg
out
enter
outsl
shlb
outsl
inc
les
jge
popf
jmp
xor
and
pop
out
inc
and
test
push
or
add
cmc
xor
aaa
or
jb
add
inc
mov
insb
stos
adc
or
stc
stc
jg
xor
nop
call
jb
fldl
ret
mov
mov
fnsave
popf
cld
je
cmpsb
shrl
jne
mov
div
pop
std
mov
cwtl
jae
push
jge
dec
andb
js
lret
push
test
ss
aaa
aam
mov
lcall
out
xor
inc
adc
cwtl
idivl
jmp
push
xor
cmp
aad
jo
xchg
outsl
pop
inc
mov
push
ror
add
or
in
mov
sub
xchg
psllw
and
push
cmpl
sbb
or
shlb
je
push
dec
out
push
xor
mov
pop
rclb
ja
lods
jecxz
lcall
out
aaa
insl
dec
and
jg
jl
jge
jmp
xlat
inc
mov
inc
jb
std
mov
insl
lahf
inc
dec
xor
mov
inc
rorl
mov
ljmp
rorb
mov
jae
test
push
and
push
ljmp
pop
lods
sbb
pop
and
loopne
lahf
cs
add
lcall
or
cmc
mov
test
inc
lds
xchg
sub
out
mov
pop
jle
sub
insb
mov
mov
aas
inc
jecxz
jmp
arpl
sbb
adc
stos
bound
xlat
adc
inc
push
ror
loop
xor
stc
mov
or
xchg
imul
sbbl
inc
lock
pusha
lock
jne
arpl
sbb
sbb
ret
and
je
and
pusha
and
jl
cmpsl
lea
push
lret
sbbl
sbb
jmp
mov
testl
inc
mov
jo
stos
fucomp
xchg
cmp
lret
std
mov
les
jg
popf
lcall
stos
mov
push
xchg
enter
dec
rol
inc
sti
scas
aad
daa
std
jns
fsubp
cld
int
fnstenv
or
fwait
sub
dec
fldenv
add
adc
cwtl
xor
fists
das
xchg
or
mov
lahf
lret
mov
xor
rcrb
dec
xchg
out
mov
ljmp
cmp
inc
mov
push
test
icebp
cmpsl
inc
and
push
xchg
aas
adc
mov
shrb
stc
arpl
gs
fdivp
xchg
fidivs
sub
mov
ja
cmpsl
cmp
leave
loop
adc
in
sahf
sahf
add
sub
ja
inc
mov
push
call
jle
push
xchg
sbb
and
aad
jp
adc
and
jecxz
loopne
les
movsb
daa
shrb
int
mov
adc
push
std
jl
xchg
inc
jbe
pop
aad
lret
addr16
xchg
sub
mov
mov
dec
je
jo
xor
xchg
mov
mov
outsb
mov
cmp
cmp
cmc
rcl
mov
cmpsl
icebp
jl
dec
jne
sti
mov
inc
insl
out
out
lds
adc
adc
dec
call
aad
out
inc
out
cmp
mov
jne
pop
and
dec
pop
jge
push
movsb
insl
pop
cmp
push
sub
push
mov
xor
inc
call
hlt
rep
test
and
mov
in
or
xchg
adc
call
dec
ja
mov
xor
dec
scas
leave
jmp
sti
cli
sub
pop
cmpsl
and
xor
dec
jae
or
arpl
into
rolb
ja
loopne
push
mov
sub
les
sbb
imul
cmpsb
inc
dec
aaa
mov
mov
pushf
and
and
shlb
pushf
stos
push
mov
xchg
in
lahf
xor
insl
inc
loopne
push
pop
sub
and
cmpsb
pop
popa
bound
pop
cltd
aas
lcall
adc
cmp
ljmp
jae
pop
aam
nop
cmp
call
mov
in
out
sbb
enter
adc
sahf
jae
push
sbb
cltd
lods
cmp
add
mov
in
jl
cltd
pop
mov
mov
jecxz
cmpsl
push
jne
in
int
aam
xlat
jecxz
es
xchg
or
call
fisubl
pop
imull
pop
test
insb
loope
enter
mov
mov
test
shr
xchg
sti
sti
mov
mov
mov
data16
mov
add
mov
dec
mov
mov
lret
js
jle
movsb
and
stos
jno
pop
mov
sbb
fwait
sbb
fs
repz
in
mov
mov
xlat
xchg
fists
fucomi
dec
lret
movsl
movl
adc
je
clc
hlt
out
imul
mov
jecxz
mov
icebp
jb
adc
cmpsl
jae
or
test
cmp
incl
mov
imulb
push
call
subl
mov
popf
dec
and
add
movsl
jle
add
in
add
pushf
and
std
and
cli
pushf
mov
add
push
dec
mov
fs
xchg
incb
lahf
out
push
loop
sub
pop
sbb
call
push
iret
es
add
xor
cld
inc
leave
in
loope
mov
in
call
and
and
jns
mov
call
btc
push
mov
test
in
push
ret
cmp
stos
test
js
in
sub
xorl
inc
xor
rol
add
rolb
lock
pop
repnz
mulb
into
bound
out
xor
mov
pop
jecxz
xchg
sub
and
cwtl
or
mov
mov
mov
rorl
mov
push
mov
inc
jno
sbb
inc
dec
cmpsb
push
jle
inc
push
insb
jl
dec
add
mov
dec
push
sub
bound
pop
dec
mov
stc
mov
mov
adc
fisubs
pop
das
fiaddl
in
lods
cmpsl
fcomp
pop
adc
jg
pop
inc
push
test
cmp
call
aad
iret
mov
push
shll
stos
loopne
push
dec
cmp
or
gs
dec
in
xchg
das
popf
aaa
mov
std
enter
sbb
cmp
shrl
and
insb
outsl
adc
pop
repnz
fsts
or
jge
xor
add
or
adc
mov
fists
jle
imul
jge
push
pop
in
pop
sub
fs
and
lret
out
sbb
adc
scas
mov
sbb
xor
mov
notb
mov
fistps
xor
test
push
or
repz
mov
dec
xchg
cs
hlt
sub
push
adc
pop
fucom
or
outsb
mov
pop
xor
mov
mov
into
dec
jl
sbb
loop
push
inc
gs
imul
roll
repz
in
cli
fstps
arpl
push
fcomip
jg
out
loop
ret
mov
and
cs
out
lret
sbb
ja
lret
addb
movsb
push
lock
sub
repz
cli
in
or
in
xor
fbstp
cmpsb
push
cmc
mov
lods
scas
add
fbstp
or
cs
cmc
and
mov
test
pop
mov
adc
sub
dec
add
xlat
or
negb
ret
push
into
or
xchg
rcrb
jbe
xchg
mov
add
or
fwait
cmpsb
add
jns
jne
xchg
std
dec
pop
add
mov
outsl
imul
jnp
nop
lcall
xchg
mov
cli
mov
lret
mov
das
or
fistps
jge
sbb
push
rorb
push
mov
negb
stc
pop
mov
sbb
dec
cmp
fs
outsb
xchg
es
lret
movsl
mov
cmp
call
outsb
test
cmp
pop
out
jl
xor
subb
adc
mov
push
cltd
icebp
mov
cmp
movsb
and
notb
cld
mov
push
and
xchg
lret
andl
arpl
pusha
testb
lods
ret
daa
and
xchg
es
push
cmp
jl
xchg
push
lds
divl
arpl
adc
mov
cmp
xchg
outsl
jns
movsl
fwait
ss
sahf
sub
popf
test
xchg
pop
push
shl
xor
pop
out
push
out
mov
push
dec
aas
sbb
adc
cwtl
xchg
adc
inc
xchg
pop
push
test
xchg
lea
or
insl
std
mov
inc
or
fs
or
inc
js
mov
ret
outsb
fstpt
icebp
shr
int3
pop
js
fwait
xchg
cmp
std
dec
imul
sub
or
push
outsl
stos
xchg
push
clc
in
push
or
pop
xchg
ja
rcll
dec
dec
jecxz
fcmove
cmpsb
sub
xor
orl
mov
push
xor
call
testb
mov
xchg
and
loopne
loop
lret
sbb
sbb
test
push
into
addr16
stos
arpl
cmpsb
fwait
out
fnstsw
jae
adc
xor
sbb
xor
in
add
movsl
out
push
int3
call
subb
jbe
lret
mov
xchg
ja
pop
test
mov
xchg
ret
pusha
xchg
hlt
mov
jnp
add
ficompl
fidivs
fsts
sbbb
idivb
addl
mov
mov
add
inc
pop
mov
popf
aaa
faddp
and
in
lds
hlt
movsl
cmpsl
fwait
loopne
mov
repz
fisubl
xor
repnz
jne
lcall
add
sub
cmp
mov
loope
pop
test
mov
and
mov
andb
test
push
test
or
inc
fmuls
add
lea
in
roll
dec
jle
adc
jne
fs
pushf
inc
inc
loopne
xlat
mov
or
imul
xor
insb
xchg
das
push
pop
jo
leave
sbb
push
xchg
cmp
add
push
js
or
cmp
adc
and
fists
fnstsw
out
and
xchg
and
xchg
fsubr
xor
sbb
jg
pusha
or
scas
and
mov
out
setb
ss
aaa
out
jmp
call
mov
push
adc
push
loope
mov
fstl
push
xchg
out
push
loopne
aam
call
mov
adc
call
jmp
xchg
fdivr
dec
or
in
jmp
movsl
mov
popf
sub
fnstenv
fistps
inc
add
mov
aam
loopne
push
mov
sub
mov
fdivrl
or
mov
sub
push
lcall
sub
popa
popa
push
xchg
stos
ss
jl
test
adc
das
cltd
xor
add
adc
outsb
pusha
fiaddl
add
movsl
fwait
or
jecxz
mov
cld
mov
out
dec
inc
xchg
inc
lcall
sbb
aam
les
jecxz
into
pushf
jne
aad
fdivl
mov
cli
movsl
lods
call
inc
push
jmp
aaa
loope
dec
inc
lahf
inc
imul
das
xlat
inc
int
testl
push
cmp
je
or
xor
cmp
mov
popa
loop
bnd
xor
mov
pop
outsb
int3
add
dec
adcb
std
sbb
les
mov
ja
icebp
add
jl
sahf
out
or
fwait
pop
jle
int3
xlat
shrb
out
pop
test
push
mov
mov
dec
xor
repnz
sub
hlt
push
cmp
addl
push
or
lret
sbb
dec
fidivl
out
inc
cltd
xor
xchg
movsb
nop
or
dec
inc
loop
lcall
jmp
stos
inc
ret
in
pop
hlt
jb
mov
div
dec
push
push
sti
cltd
and
sbb
into
jne
pop
mov
shrb
mov
imul
iret
loope
fldln2
pop
bound
mov
mov
es
mov
dec
lods
inc
sbb
repz
jne
jg
or
or
dec
sbb
lds
sub
mov
lods
out
lahf
shrl
xchg
mov
cmp
mov
push
xchg
cld
pop
stos
xor
push
sbb
cltd
pop
repnz
and
xchg
mov
mov
aam
push
xlat
or
adc
inc
outsb
gs
lods
lods
sbb
mov
dec
mov
xchg
hlt
sbbb
cmp
pop
mov
mov
pushf
jecxz
dec
leave
push
mov
cs
or
cmp
imul
xor
add
lods
testl
jo
mov
pop
push
lret
jmp
popa
js
dec
dec
iret
and
sti
decl
es
or
add
push
jg
xchg
cmp
mov
and
xor
and
jo
sbb
push
stos
push
pop
mov
imul
inc
sub
stos
xchg
pop
scas
test
sbb
mov
nop
adc
and
js
lock
ljmp
scas
mov
cli
ficompl
stc
je
ljmp
cmp
push
in
sbb
out
mov
xchg
test
or
dec
fs
sub
pop
sbb
sub
push
dec
sbb
and
jl
mov
fcomps
pop
sub
cmp
pop
adc
pop
mov
rcr
testl
push
mov
les
lods
dec
dec
out
pop
inc
sub
cli
aas
rcrl
or
xorl
cmp
jns
imul
push
fnsave
push
iret
sub
enter
adc
dec
or
cmpb
inc
adc
test
and
push
add
fdiv
mov
adc
jge
insb
sti
pop
jbe
insb
push
add
imul
dec
add
ror
mov
out
insb
push
and
sub
fidivs
int3
imul
shrb
int3
sbb
xor
fimuls
and
jmp
jne
dec
clc
sbb
repz
and
xor
and
sub
rcrb
scas
xchg
ds
push
pushl
lods
in
mov
xchg
cwtl
lret
xor
cmpsb
fdivp
push
push
adc
and
aas
les
stc
repz
insb
loopne
das
in
scas
jnp
dec
lods
call
movsl
pop
xor
scas
mov
mov
cmp
in
adc
inc
xchg
push
cmp
ficoml
sbb
jo
push
xor
out
sbb
xor
inc
pop
or
or
bnd
outsl
out
cmp
xchg
dec
fbstp
push
loopne
adc
add
mov
mov
adc
mov
int
mov
cmp
mov
or
lahf
xchg
or
shlb
adc
push
or
xchg
loop
push
or
pop
add
mov
out
es
jne
lret
roll
adc
icebp
jnp
notl
fstps
ja
sahf
test
adc
gs
adc
pop
xchg
sub
sti
outsb
stos
add
outsl
cmp
lret
pop
or
jno
rorl
jmp
dec
js
bound
dec
pop
or
mov
test
mov
push
xor
popf
sub
out
or
mov
mov
out
and
and
and
cltd
fxch
arpl
sbb
xchg
pushf
dec
or
add
lods
fidivrs
cwtl
lcall
int
lds
push
pusha
mov
addl
inc
sub
xchg
pop
push
addb
loop
or
popa
int
popa
sbb
int3
add
cmp
imul
and
je
in
sbb
mul
mov
lcall
mov
or
out
neg
mov
pop
setno
std
sbb
push
int
rorl
fstpt
test
daa
cld
fistps
dec
nop
sbb
adc
jbe
or
sbb
mov
mov
sub
xrelease
jecxz
bound
ds
ret
mov
xchg
aam
out
sub
lock
inc
mov
dec
push
aad
xchg
out
int3
fcompl
mov
cmc
dec
sbb
in
testl
push
fdivl
hlt
mov
sbb
jmp
lea
mov
mov
std
adc
sub
arpl
jmp
repnz
and
mov
mov
push
mov
divl
in
mov
inc
mov
rolb
adc
je
ds
dec
adc
xorb
mov
pop
xor
push
stos
dec
push
popa
mov
ss
mov
lcall
or
jno
dec
lods
mov
xorl
xchg
insl
out
fsubrs
inc
dec
xor
jmp
pop
outsb
std
shrl
xor
dec
push
mov
sbb
js
push
mov
mov
xchg
dec
jg
test
mov
rolb
sub
push
pop
push
popa
inc
popf
mulb
cmpsb
pop
ljmp
fxch
loop
dec
mov
insb
sarl
ret
ljmp
mov
add
leave
fisttpll
xchg
mov
mov
mov
dec
lods
stos
add
mov
cmp
sarb
clc
popf
xchg
pop
mov
xor
cmp
mov
or
pop
push
xor
fwait
jno
aad
lret
arpl
xchg
imul
mov
jbe
test
arpl
ds
dec
notb
into
decl
mov
out
sbb
iret
xlat
lcall
sub
in
mov
rcll
pop
cmp
lods
pop
jmp
ss
mov
imul
nop
or
inc
into
mov
or
push
cmp
aas
lods
inc
mov
popf
xor
add
jae
lret
push
cmp
mov
xchg
imul
ja
mov
add
adc
sbb
sbb
fwait
adc
mov
pop
xchg
mov
add
loope
jno
ja
stos
sbb
and
scas
pop
insl
sbb
xchg
ret
pop
jae
repz
aaa
fmul
out
and
dec
pop
push
mov
test
mov
sbb
jecxz
repnz
inc
or
or
cltd
dec
jmp
mul
or
or
ss
into
xor
cmpsl
pop
daa
xor
add
pop
pushf
mov
dec
sub
or
xchg
sbb
sbb
push
xchg
pop
imul
imulb
push
int3
fimull
movsl
jne
or
enter
js
and
mov
sub
lds
imul
enter
adc
stos
inc
push
cld
lcall
lret
fs
fsubs
xor
dec
int
lds
pop
add
clc
push
repnz
jae
cmpsb
sbb
data16
xor
adcb
jbe
jns
add
lret
jno
sbb
dec
pop
loopne
arpl
xor
jo
push
je
sub
vmulps
sbb
jbe
clc
mov
les
jecxz
aam
sbb
pop
dec
test
cs
aam
xlat
dec
jl
jbe
pop
sub
or
lods
rorl
cmpsb
test
push
loop
mov
mov
call
push
ss
sbb
enter
jle
mov
ds
insb
testb
sub
push
or
xor
push
push
lds
push
sub
ffree
arpl
mov
aaa
fbstp
arpl
test
jae
popf
mov
pop
popa
push
mov
add
push
rorb
sbb
in
add
cwtl
out
push
xchg
mov
inc
test
test
jae
mov
or
xchg
fstpl
filds
andb
sub
out
inc
call
push
lea
mov
mov
nop
in
andb
dec
or
or
mov
ds
cmpsb
inc
imulb
stos
cltd
mov
movsb
inc
pop
cld
push
inc
test
ret
movsb
mov
xor
test
aam
jns
mov
mov
xchg
imulb
cltd
push
mov
pushf
mov
loopne
aaa
mov
push
lea
icebp
daa
add
jp
sub
bound
dec
push
inc
fs
or
imul
sbb
xor
or
ret
popa
popf
negl
xlat
imul
movsb
mov
call
cmp
jle
arpl
add
push
push
xchg
ds
aam
lret
rolb
popa
add
negl
fsub
push
and
cmp
cmpsl
test
dec
btr
in
xor
nop
cltd
scas
adc
imul
ds
jb
or
adc
adc
leave
imulb
dec
std
xchg
sti
dec
mov
inc
dec
js
jp
xchg
ja
mov
dec
scas
add
sbb
push
jmp
add
inc
scas
push
fdivrs
mov
add
popa
jp
sbb
inc
jbe
pusha
mov
nop
dec
stos
push
rcrb
mov
adcl
sub
push
in
xchg
fsubs
add
dec
jae
or
lret
ret
insb
xor
or
mov
fwait
ja
sarl
fidivrs
pop
jmp
jg
jle
jnp
imul
mov
in
lahf
stc
inc
ret
and
iret
lock
mov
cmp
ss
xchg
or
insl
mov
data16
sbb
xlat
push
dec
cltd
dec
add
lcall
adc
ss
jecxz
pop
frstor
sub
mov
addr16
inc
cmp
adc
adc
push
sbb
shll
aad
aaa
bound
mov
inc
pop
scas
pop
jg
push
jl
imul
pop
and
cmp
adc
mov
inc
mov
xchg
push
xor
sub
les
std
sbb
popa
push
add
xor
les
lret
es
push
jnp
incl
addr16
loopne
nop
push
or
or
sarl
mov
into
call
inc
sub
loope
lods
inc
repnz
imul
or
das
nop
adc
subl
mov
mov
mov
iret
loopne
cwtl
sti
dec
jne
fmuls
ret
outsb
mov
ljmp
xchg
ja
xchg
lea
and
fs
push
xor
sub
adc
cmp
lock
or
fistps
inc
dec
push
xor
push
cmpsl
jmp
cld
mov
add
repz
push
mov
imul
ljmp
popf
or
test
or
add
out
jne
notl
ljmp
mov
movsl
lock
xchg
push
movsl
jnp
data16
inc
inc
arpl
inc
cwtl
or
mov
pop
negb
stc
or
mov
leave
iret
cmp
outsb
push
insb
std
sarl
popa
dec
loope
fneni(8087
fs
jns
cs
jl
push
push
xor
fcompl
test
js
fdivs
pusha
fildll
jae
pusha
mov
cltd
rcl
mov
dec
gs
out
aad
rcl
cmpl
xor
aas
clc
jmp
arpl
xchg
jne
dec
inc
ljmp
sub
pop
pusha
mov
xchg
loopne
lods
std
sbb
mov
repnz
pop
adc
inc
pop
or
push
adc
cmp
jp
enter
jecxz
push
push
sahf
inc
xorb
js
inc
sbb
out
nop
push
pop
xchg
xchg
inc
inc
sub
rcrb
addr16
insb
push
lret
sbb
dec
nop
cmp
lock
test
or
test
test
dec
sbb
fimuls
add
push
dec
lret
add
mov
imul
sti
iret
dec
rcr
jbe
clc
inc
dec
inc
jg
cmp
mov
adc
stos
insb
inc
fmul
pop
ss
jmp
push
xchg
fcomps
insb
inc
push
test
rcrb
fiadds
adc
sbb
popa
xor
sahf
cs
and
sub
push
in
data16
jns
or
sbb
cmpsb
jae
sub
mov
test
inc
cmc
xchg
push
addr16
dec
xor
adc
xor
rcr
jge
push
fistl
repz
xchg
add
test
or
cmp
inc
xor
sbb
out
mov
pushf
xor
xchg
in
repz
nop
outsl
push
jl
sbb
xchg
imul
fwait
pusha
or
rcrl
aam
les
call
jns
jb
stc
andl
jne
in
fldt
pop
cmp
dec
lahf
enter
push
daa
cli
pop
mov
xchg
insl
stc
push
ret
cmpsl
xchg
and
shll
push
push
fwait
cmp
or
jns
shll
push
cld
out
in
and
repnz
subb
push
cmp
pop
les
stos
cmpsb
jecxz
add
xchg
push
pop
pop
in
jae
push
test
js
push
rorb
push
daa
aam
or
scas
or
out
lods
das
adc
jno
out
idivb
in
jne
pop
fsts
fs
xor
sub
std
sbb
in
sbb
pop
jg
out
ss
addl
pop
dec
test
stc
sbb
in
cmc
arpl
ret
push
inc
pop
repz
testb
sbb
jno
mov
push
pushf
mov
sbb
cmpsb
shr
jge
sahf
xchg
pop
adc
sub
ret
aas
push
xor
mov
or
cltd
scas
ljmp
xchg
inc
cwtl
cld
ljmp
dec
fwait
push
add
pop
ret
and
add
jmp
cmpsl
jb
cld
adc
rcll
and
mov
fucomi
pop
punpckhdq
ds
mov
aam
sahf
mov
mov
push
dec
and
xchg
loopne
popf
jae
and
aad
xchg
daa
sub
lods
lods
cmpsl
fs
mov
xor
fcom
mov
pop
fcomp
test
stos
das
aad
jg
repz
mov
add
loope
scas
fwait
iret
loopne
ret
fs
ljmp
ljmp
and
jl
sbb
ficomps
push
stos
or
ficoml
jae
loope
or
inc
push
rol
inc
jg
fnstenv
cwtl
mov
sub
mov
xorb
andl
and
inc
loop
pop
mov
inc
mov
aaa
mov
pop
sub
int3
ja
cli
scas
dec
and
xchg
ss
mov
jp
pop
fs
ja
or
cmpl
jecxz
into
lds
dec
frstor
xor
or
pop
xor
sub
jnp
or
test
sbb
ljmp
lea
dec
or
pusha
inc
shrb
push
inc
sub
into
sub
gs
cmpsl
mov
and
sub
sub
ret
pop
jp
popa
dec
pusha
adc
sbb
sub
xchg
out
adc
push
and
fld
lods
pop
int
loop
out
insl
lock
jns
fwait
push
xchg
pop
lcall
sub
jp
mov
xor
xor
repz
jno
dec
cli
ds
mov
or
mov
mov
add
out
aad
jp
or
jp
xchg
pushf
shrl
jmp
xchg
jae
and
nop
add
bound
add
or
fisubrl
cmpsb
dec
sbb
out
push
inc
imul
mov
jge
stc
lret
push
push
mov
loopne
jb
cmp
dec
cmpsl
push
push
cmp
enter
pop
cmp
xchg
xor
in
dec
lahf
das
sbb
loope
nop
mov
push
mov
shll
adc
test
test
sbb
cli
cmpsb
mov
outsl
dec
clc
iret
mov
aad
xchg
rcll
lods
lds
jae
and
fsubp
adc
and
xor
sbb
insl
dec
xchg
lock
add
shlb
push
push
cmp
in
pusha
mov
pop
xor
jle
mov
pop
roll
jb
xor
dec
scas
or
subps
xor
xor
or
divl
sub
mull
jle
daa
dec
test
mov
pop
adc
pushf
and
sub
jo
lret
fistpl
das
je
inc
and
mov
adc
les
addr16
adcl
loop
xor
in
cmpsl
xchg
push
stc
mov
dec
mov
push
gs
sbb
mov
andb
mov
cmp
rcr
jne
sbb
xchg
arpl
mov
shrb
mov
add
and
jno
xchg
cmp
pop
and
aam
stos
cli
dec
push
call
mov
mov
jae
dec
fadd
push
dec
or
or
fsubs
adc
mov
insl
fcomip
xlat
or
js
idivb
call
mov
movsl
sub
cld
xor
test
in
jle
jl
aad
lea
inc
sub
mov
mov
jge
ljmp
sub
inc
div
and
cmp
addb
mov
xor
cltd
enter
add
jae
or
aaa
xchg
std
and
mov
ficoml
jno
ljmp
fimuls
or
mov
aaa
add
dec
inc
fnsave
bound
dec
cmp
lcall
test
popa
mov
push
jmp
sbb
push
lea
dec
test
mov
pop
iret
xchg
mov
pop
iret
push
mov
xchg
int3
xchg
aaa
nop
jbe
pop
add
cmpsb
stos
mov
int
sub
xchg
popf
adc
mov
cmpsb
je
dec
jne
mov
jmp
push
lods
fs
or
cltd
pop
stos
incb
movsl
jne
ljmp
inc
mov
fnstsw
mov
cmp
push
adcb
aaa
pop
push
inc
data16
add
outsb
pusha
xor
aam
icebp
sahf
adc
lcall
imul
push
xor
and
es
add
add
xor
jle
pop
pop
insl
fidivrl
mov
sbbb
inc
pop
call
iret
add
push
push
push
mov
int3
sbb
jno
adc
push
or
stos
jns
test
add
sbb
dec
pusha
sbb
rcr
stos
call
xlat
push
sub
sbb
ds
cmp
cmpsl
mov
xchg
jp
add
not
sahf
add
leave
jge
and
cmpsb
pop
sub
scas
and
popa
mov
xor
mov
andb
test
and
mov
inc
shll
add
mov
xchg
insb
or
pop
cld
jle
push
sahf
push
setno
inc
jg
mov
popf
aas
adc
testl
icebp
and
cmp
pop
loop
in
outsl
fnsave
add
outsl
sbb
imul
mov
flds
push
add
ss
out
in
xchg
fildll
outsl
insb
test
popa
ds
dec
xor
push
mov
and
les
mov
and
fimuls
jns
popa
iret
lock
loopne,pt
and
jns
jno
jecxz
sahf
pop
xor
loope
mov
dec
mov
sbb
dec
sub
mov
cmpsb
ss
pop
sbb
adc
dec
in
sbb
sahf
adc
xchg
mov
lods
dec
or
mov
das
stos
aam
out
dec
push
xchg
push
ds
xchg
xchg
mov
dec
shrl
pop
scas
lods
mov
insl
cld
loop
lret
and
push
adc
jge
push
push
loopne
xchg
idiv
jb
bound
pop
cmpsb
mov
dec
jmp
push
lods
ja
pop
sbb
in
cmpsl
add
inc
lds
mov
loopne
push
es
imul
outsl
incl
mov
push
jns
mov
test
sub
mov
pop
fnstsw
dec
nopl
mov
add
inc
xchg
shll
jno
pop
test
insl
xchg
cld
or
jne
and
push
dec
push
aam
scas
push
out
pushl
daa
aam
xchg
loopne
rorl
mov
jmp
mov
pop
fisubrl
fldenv
or
or
addr16
lahf
push
sbbl
sbb
subb
sti
movsl
mov
int3
xchg
jb
ficoms
iret
add
imul
or
std
idiv
sbb
xor
pop
dec
loope
add
lds
icebp
outsl
in
xchg
and
call
je
push
addr16
cmc
data16
mov
and
bound
lret
jge
jns
pop
adc
xlat
ret
mov
cltd
push
pop
xor
dec
mov
sub
sti
shr
mov
das
or
sub
arpl
movsl
std
clc
jnp
jbe
cltd
int3
push
push
ret
xorl
push
iret
arpl
and
imul
and
faddl
fisubrl
or
push
ret
test
cmp
rep
in
ja
mov
jb
xchg
adc
mov
cmp
xorb
jmp
flds
fildll
mov
fnstsw
lcall
xor
jmp
inc
sarb
lods
ljmp
loopne
push
std
adc
dec
dec
nop
incl
stc
xor
cmpl
jl
into
pusha
xchg
lcall
inc
adc
aam
outsb
shrb
sub
fldenv
mov
test
lods
mulb
js
sub
sbb
xlat
stc
inc
shl
outsb
push
dec
pop
test
pop
mov
cmc
pop
xorb
std
stc
lods
pushf
pop
mov
inc
leave
jno
mov
cmpsb
cmpsb
imull
pop
pop
sub
add
add
push
cmc
js
add
mov
imul
cmp
in
xlat
sub
xor
xchg
jno
std
sbb
pop
jbe
mov
xor
daa
es
pop
jge
push
fimuls
cmp
mov
and
inc
sub
inc
sbb
xchg
jbe
ret
leave
sbb
add
pop
push
pop
jp
pop
adc
fnstenv
pushf
add
inc
and
stos
aaa
xor
inc
negl
fxch
inc
sbbl
leave
xor
inc
add
lods
insb
mov
jmp
and
repz
shlb
mov
bound
jnp
or
jb
jl
rcrb
mov
cmp
pop
loop
ficoml
push
mov
gs
mov
mov
or
xchg
push
xor
adc
mov
popa
stos
adc
xor
fildll
das
push
ds
mov
sbb
shr
outsl
mov
sub
mov
shll
movsb
xor
es
adc
dec
mov
js
adc
lahf
jae
aaa
push
jge
stos
popf
cmp
cld
push
jp
pop
or
insb
repz
jg
clc
add
jl
leave
fiaddl
fstpt
iret
repz
and
into
movsb
test
sahf
rcll
in
jge
jle
cmc
in
push
ret
push
fwait
mov
push
xchg
sti
popa
pop
les
mov
mov
cmp
push
mov
out
cmp
adc
mov
adc
mov
xor
pop
add
mov
nop
nop
adc
rorb
push
mov
push
cmpsb
pop
push
push
repnz
imul
dec
sbb
add
test
cmp
es
xchg
insb
ss
aas
imul
arpl
add
jo
in
lahf
mov
inc
ss
sbb
insl
lcall
lcall
lahf
inc
pop
loope
outsb
jecxz
and
pop
scas
xchg
fsubrl
ja
mov
or
dec
jmp
adc
add
jo
xchg
mov
outsb
sub
insb
cmp
or
lea
stc
in
sub
les
mov
cmp
pop
xlat
sub
leave
lds
cmp
jecxz
loopne
repz
mov
das
push
xlat
cmpsl
movsl
xchg
mov
inc
stc
jne
lods
loop
xchg
sub
imul
rcrb
push
or
clc
mov
adc
inc
mov
pop
mov
inc
ret
inc
xor
fistpl
nop
push
pop
push
sarb
ljmp
sub
push
mov
cmp
mov
mov
push
stos
dec
aam
cld
inc
mov
ror
div
ss
mov
sub
jge
outsl
fdivs
dec
std
xor
dec
add
lcall
add
outsl
in
iret
sbb
fcoms
ds
stc
movsl
inc
adc
cmp
cmp
ficomps
repnz
lret
fs
repz
js
jle
pop
sub
push
movsl
hlt
aad
and
imulb
jmp
mov
test
dec
push
xchg
test
ret
jae
jo
xchg
adc
lret
cmp
dec
mul
push
jb
xchg
lods
pop
stos
aad
jnp
mov
pop
nop
fmull
push
push
mov
cmpsb
lret
es
xchg
mov
rclb
and
outsb
or
gs
push
stos
jb
xor
inc
jns
push
jo
fadds
ss
mov
insb
or
sub
addr16
lret
jns
loopne
imull
out
fsubrl
fdivrs
imul
adc
pop
xchg
mov
add
xlat
lahf
mov
add
mov
push
imull
sbb
lahf
push
inc
pop
or
fstpt
jns
cmpsb
xor
cmp
mov
rcll
imul
int3
push
insb
jbe
jl
or
mov
hlt
cmpsb
movsb
pop
fldenv
and
addr16
in
movsl
pop
jne
and
rorb
outsl
adc
aaa
fadds
mov
in
dec
aas
and
or
daa
lea
lcall
and
rcrb
fisttpll
mov
scas
cli
lods
bound
xor
push
xlat
add
sbb
inc
cmp
cmp
lcall
sbb
mov
mov
mov
sbb
mov
movsl
fcompl
mov
mov
lods
push
xor
jbe
xchg
sub
pop
inc
pop
es
in
movsl
orb
ret
or
dec
mov
add
sub
and
incb
mov
out
imul
cmp
rclb
jg
push
and
int3
je
adc
mov
lds
aam
out
xor
mov
sbb
mov
cmp
ss
mov
in
inc
jb
scas
outsl
imul
ret
jp
xchg
je
lds
int
mov
jb
mov
ja
push
cld
cwtl
test
xor
pop
jb
ljmp
enter
sub
xor
in
out
inc
das
and
pop
sti
pop
or
lods
xchg
out
dec
lds
adc
pop
adc
push
inc
cwtl
jle
dec
jle
shlb
nop
sbb
psrlq
push
push
stc
andb
adc
sbbl
pusha
mov
jne
call
das
dec
cmc
mov
inc
dec
jle
fists
mov
dec
sbb
jp
push
and
sub
insl
icebp
jecxz
pop
adcb
sbb
sahf
mov
mov
das
loop
shl
adc
push
xor
sbb
cmp
push
lock
fdiv
pop
pop
or
lock
into
je
leave
outsl
movsl
pop
repnz
cmpsl
jg
pop
adc
push
aaa
cmp
sbb
aaa
jo
sub
in
lret
adc
jle
aaa
paddsb
sbb
push
jle
lar
sub
outsb
decl
pop
ds
mov
xlat
cmp
cmp
push
rolb
cmp
pop
mov
sub
inc
cmp
xor
push
cmpsl
mov
add
in
push
lods
pop
out
pop
push
inc
jno
negb
lret
mov
mov
ret
mov
popa
adc
not
lock
mov
fimull
jne
inc
dec
xchg
mov
stc
in
dec
call
pusha
xchg
inc
notl
lret
jge
cwtl
pop
push
add
mov
in
sbb
mov
in
adc
movsl
sti
in
lahf
test
mov
test
sarl
fsub
xchg
arpl
add
cltd
cmc
xor
out
push
pop
xchg
cmp
out
and
jle
mov
xlat
sbb
mov
mov
fadd
push
adc
xorb
pop
jns
addl
out
in
iret
cmp
in
inc
lret
or
jns
bound
lds
jno
pop
push
fsubrs
add
ljmp
stc
inc
pop
jp
lret
mov
enter
sub
test
dec
stos
gs
pop
or
fcoms
xchg
addr16
or
fmuls
cmp
in
xchg
dec
cmp
lock
jae
inc
js
mov
test
xchg
aad
mov
test
push
push
je
mov
aad
xchg
cli
sub
adcl
lds
cmove
and
into
jae
cmp
imulb
lods
mov
dec
stc
push
into
sbb
mov
push
out
pop
stos
test
dec
push
inc
jmp
mov
pop
rcrl
subb
add
fnstenv
add
xor
inc
sahf
je
push
xchg
mov
mov
leave
cmp
jo
sarl
pop
xchg
lcall
lcall
arpl
mov
imul
jge
in
push
jnp
fsubrs
push
mov
add
aad
loope
sbb
sub
test
iret
inc
lret
cld
add
icebp
xchg
std
lods
or
loopne
icebp
leave
jae
jl
scas
jne
cmc
popf
or
out
pop
mov
mov
jbe
and
call
sub
mull
pop
mov
aas
or
in
dec
data16
dec
outsl
shll
daa
loopne
movsb
or
std
ljmp
push
insl
add
mov
inc
pop
xor
jne
push
in
mulb
inc
sbb
dec
rorb
sbb
int3
inc
fnstcw
push
out
and
insl
aaa
jl
daa
out
cmp
xchg
pusha
inc
das
xchg
std
ret
mov
sbb
xor
jmp
rorl
int3
pop
xlat
ret
and
pop
jnp
mov
orb
nop
inc
xlat
sbb
jb
pop
out
shl
mov
cmpsl
mov
mov
subl
push
or
xor
xchg
je
adc
out
pop
daa
repnz
sbb
fdivrs
sbb
mov
xchg
push
aad
insl
push
ffree
push
jecxz
jl
xchg
out
popf
xchg
int3
pop
aaa
ret
push
rep
sahf
out
std
and
xor
adc
dec
jns
or
push
std
cmp
adc
int3
jns
pop
insl
js
pop
push
dec
dec
pop
filds
insb
inc
in
testl
mov
dec
push
sbb
out
scas
cmp
xorb
shl
cmpsb
pop
and
mov
fsts
cmp
jo
mov
push
pop
and
loop
sub
push
push
push
pop
enter
or
pop
add
ss
bound
inc
out
mov
les
bnd
in
jbe
push
outsb
mov
stos
and
stos
sub
dec
stos
sbb
pop
push
out
insl
sbb
mov
mov
andl
inc
mov
adc
mov
cmp
mov
fwait
mov
out
pop
stc
fcmovb
addr16
mov
pop
mov
cmp
jb
and
mov
xchg
or
sbb
dec
lahf
fidivrs
jae
mov
lret
pop
adc
adc
xor
sub
or
mov
popf
fiadds
fcomps
pushf
shlb
das
sbbb
scas
pusha
mov
add
mov
comiss
sbb
adc
cs
xchg
jle
mov
dec
loopne
mov
push
addl
aad
cmp
test
push
call
xor
test
bound
jmp
push
or
fnsave
cmc
jle
sub
movsl
in
xor
mov
or
icebp
cmpsb
mov
ds
imull
pop
mov
push
aas
mov
data16
sahf
mov
push
mov
push
mov
or
out
into
imulb
imul
push
inc
sub
xchg
adc
out
jmp
iret
adc
pop
aam
mov
add
mov
mov
xchg
xor
aam
gs
jae
push
insl
push
mov
adcl
das
shl
call
mov
leave
jns,pn
insl
adcb
add
push
es
test
dec
fmull
in
daa
pop
sub
popf
mov
cmp
arpl
ret
xchg
pusha
inc
leave
mov
test
xor
mov
pop
test
xor
xchg
push
add
mov
push
mov
mov
mov
mov
sbb
testl
push
shl
mov
push
xor
push
filds
jo
subb
lret
xorl
lods
dec
xrelease
shll
push
in
je
push
imul
movsb
aad
movsl
cwtl
pop
sbb
cmp
ret
lcall
jp
pushf
arpl
leave
push
push
mov
mov
jg
cmpsb
inc
sbb
adc
xchg
es
pop
xchg
inc
js
push
in
shlb
test
adc
rcrb
sbb
cli
pop
jae
xlat
jle
insl
int3
imul
xchg
rcrl
std
push
movsb
pop
xor
lods
orl
push
fldt
lahf
bound
pop
outsb
sti
push
jbe
xor
mov
pusha
stos
mov
mov
push
jo
das
xchg
xchg
cmp
pusha
in
aad
test
push
inc
aad
and
mov
sti
xlat
int
jnp
ss
std
in
aam
pop
or
sbb
popa
fwait
ret
cmp
push
cmp
jno
or
or
pop
fiaddl
mov
mov
stos
scas
jmp
cs
cld
lret
mov
stc
les
inc
cmp
dec
inc
push
jno
pop
and
out
lret
inc
cmp
push
imul
imul
faddl
int3
pop
mov
adc
sahf
mov
or
sub
mov
stc
test
mov
mov
adc
pop
pop
icebp
add
lock
pop
lret
ja
jb
sbb
mov
jae
repnz
sahf
inc
js
mov
jno
inc
jno
jge
pusha
cmp
insl
mov
addr16
dec
movsb
fcoml
sub
xchg
arpl
and
inc
mov
negl
mov
pop
push
pop
and
loopne
xor
rcll
int3
push
popf
pushf
pop
in
sbb
cltd
pop
shrb
insb
cltd
or
les
mov
or
pop
dec
push
or
xlat
aad
pusha
mov
das
pop
push
outsl
xor
pop
push
in
jl
fiadds
or
mov
mov
cmpsl
push
inc
pop
movsl
jmp
ret
cmp
jmp
mov
dec
jae
loop
cltd
or
mov
cmp
out
mov
cltd
aad
lret
or
cmp
test
adc
fisubs
cmp
pop
push
add
mov
lock
adc
icebp
dec
push
adc
inc
add
mov
pop
jne
mov
sub
xchg
cmpsb
lret
loop
dec
insl
lock
inc
mov
je
ret
call
xor
cmpsl
aad
jecxz
test
cmp
lret
fdivl
outsl
iret
dec
mov
or
hlt
xor
cmp
enter
jle
test
inc
jg
sub
imul
sub
les
sub
xor
cmp
mov
cmp
js
lock
into
mov
shll
in
and
xor
lret
mov
sub
adc
pop
inc
jbe
mov
pushf
mov
nop
outsb
mov
dec
repnz
cmp
orl
das
das
mov
xchg
xor
test
mov
xchg
adc
mov
jge
or
push
jmp
fwait
mov
not
mov
jae
add
aam
mov
push
outsl
mov
mov
jg
jb
popa
lcall
call
sbb
dec
mov
and
cmp
jl
sahf
in
sub
add
mov
dec
mov
out
push
jb
xchg
jo
mov
mulb
out
sarl
int3
and
xlat
int
stc
out
pop
ja
jle
out
pop
stos
push
pop
mulb
rorl
fucomip
jnp
push
inc
cmp
out
adc
scas
loope
cwtl
cmpsl
add
fcmovu
roll
sbb
test
inc
mov
sub
mov
jl
sbb
out
jo
jnp
inc
add
insl
inc
js
out
aad
mov
fldl
sarb
and
and
mov
cmp
mov
mov
rcrl
pop
jle
in
es
daa
scas
xchg
sub
sub
jp
clc
out
ret
add
add
xor
jmp
std
in
ds
aam
jle
xchg
testl
insb
aam
xchg
jecxz
ret
lods
cmp
sbb
mov
inc
cmpsl
sahf
js
mov
and
push
stos
jne
pop
loope
addb
push
aaa
push
aas
or
fwait
stos
xchg
insb
add
add
lock
cmp
push
cmp
stos
ss
iret
xor
aaa
xchg
test
sub
dec
mov
pop
jecxz
add
in
es
pop
fdivs
and
jle
gs
mov
test
sub
mov
push
push
cmp
xor
dec
inc
sub
lahf
cltd
or
aam
daa
ds
mov
pop
push
push
insb
jl
lcall
push
inc
mov
pop
xor
incl
push
sub
sahf
push
out
push
jbe
push
cmp
xor
jne
in
imul
pop
pusha
xor
pop
sub
ljmp
in
inc
push
sub
jae
mov
pop
insl
stc
inc
std
pusha
jg
sub
push
xchg
jge
inc
mov
adc
js
aam
xor
sub
add
loop
mov
test
or
lods
xchg
and
jg
xor
xor
fstpl
leave
ret
iret
dec
inc
lods
aam
orb
push
stos
stc
hlt
pop
jo
stc
ja
outsl
mov
hlt
dec
inc
ficoms
data16
idivl
dec
or
xor
xor
dec
pushw
loopne
mov
add
pop
pop
aaa
daa
or
or
pushf
sub
mov
sub
into
cmp
push
int3
push
pop
lds
mov
pop
and
or
push
insb
out
inc
mov
mov
sub
jmp
int
sbb
js
xor
cmc
popf
outsb
cmc
mov
cmp
mov
sub
rep
loope
xor
clc
out
lods
rorl
popl
shll
fiadds
pop
jb
cltd
out
sbb
cmpsl
hlt
sub
stos
mov
jne
lahf
xchg
cmp
mov
imul
das
loop
rcll
dec
repnz
inc
lods
and
popf
sbb
aas
mov
mov
je
xchg
sbb
negb
xlat
cmp
sbb
rcl
and
push
push
in
and
push
and
inc
pusha
mov
mov
push
pop
inc
sti
pop
mov
out
and
in
mov
bound
push
in
inc
jp
pusha
cmp
popf
xor
fst
int
aam
pop
lods
bnd
jp
push
enter
inc
xorl
mul
and
insl
outsb
xchg
test
aas
clc
insb
sarl
pop
and
add
adc
xor
dec
icebp
stos
shrb
mov
pushf
pop
xchg
and
jl
aas
xor
jne
out
das
mov
out
sti
fistps
test
leave
fs
xchg
push
sbb
aad
sti
stos
repnz
icebp
mov
lcall
lods
adc
stos
aas
mov
jne
out
vmovq
add
add
fwait
and
mov
inc
daa
push
mov
jbe
stos
cltd
pop
mov
fadds
shll
into
cmp
imul
mov
inc
out
mov
in
push
mov
add
jae
and
jae
out
aaa
and
lcall
loop
sbbb
subl
lret
or
push
imul
mov
xchg
scas
loope
xchg
xor
and
dec
mov
adc
inc
lret
push
mov
mov
outsl
add
push
outsb
shrl
scas
and
in
out
imul
and
xchg
jmp
adc
sti
jno
mov
dec
xchg
aaa
mov
xchg
sbb
mov
stos
ret
pop
mov
dec
xor
scas
cs
fcom
pop
cmp
inc
inc
aad
pusha
cmpsb
rclb
mov
repnz
jns
imul
icebp
loop
jge
mov
dec
push
in
stc
sti
push
xlat
push
xchg
std
dec
push
cs
stos
xchg
push
stos
mov
sub
insb
arpl
mov
sbb
fisubrl
lods
add
fs
push
ret
or
inc
mov
and
data16
push
push
ljmp
pop
cmp
stos
mov
jle
dec
inc
vmaxps
xchg
sar
push
inc
out
jl
mov
sub
in
mov
push
push
imull
and
jge
lea
mov
leave
sarl
les
inc
inc
xor
adc
aam
sbb
xor
shl
mov
es
scas
dec
sub
sub
mov
daa
scas
xlat
xchg
jno
shlb
and
faddp
out
shll
jmp
pop
cld
push
fadd
mov
sub
add
testb
jns
js
test
pop
vfrczpd
test
xchg
sub
idivl
repnz
xchg
ja
push
jge
orb
repz
pop
cmp
jne
dec
hlt
inc
push
into
vpmacsww
repnz
out
lahf
inc
pop
add
faddl
stc
jmp
fprem
jecxz
xchg
add
rclb
rol
jae
insl
enter
pop
add
mov
dec
popa
sbbb
push
dec
jl
shl
adc
inc
insb
repnz
jmp
or
movsl
hlt
and
or
sub
pop
sbb
movsb
mov
mov
cmpsb
pushf
je
sbb
lea
mov
movsl
mov
or
inc
hlt
sbb
xchg
push
sbb
add
xchg
out
dec
xor
fstpt
pop
pop
iret
jg
aaa
xchg
jl
add
lods
push
mov
aas
sub
cmp
das
or
lock
iret
lret
mov
outsl
xor
sbb
and
mov
mov
adc
iret
add
stc
mov
sub
icebp
ret
cli
push
push
aaa
or
addr16
fnstcw
int3
fs
sub
popa
nop
pop
jnp
loope
pop
fisubl
fwait
in
xchg
aam
fldenv
test
daa
lods
dec
adc
lret
das
test
fwait
nop
pop
xor
sti
jmp
push
jbe
stc
xchg
pop
xchg
mov
add
gs
cs
stos
in
push
inc
repz
lahf
ljmp
xchg
fs
lds
jne
shl
add
dec
call
fimuls
lods
pop
sbb
int3
inc
pop
mov
xchg
enter
lock
jl
std
pop
lods
loope
outsl
xor
dec
lock
mov
js
aaa
out
adc
stos
arpl
aad
notl
int
lret
loope
sbb
dec
pop
mov
and
or
xor
les
cld
out
in
cs
adc
sub
aas
fstps
in
mov
jbe
into
mov
xchg
dec
cs
and
ja
je
fimuls
xor
sub
sub
rorl
jmp
xchg
insl
push
lret
fimuls
icebp
jns
das
sahf
mov
cmc
pop
sbbl
mov
mov
adc
mov
mov
ror
sbb
and
in
sahf
mov
enter
cli
andb
sub
lods
scas
nop
sbb
les
mov
xchg
cld
xor
cmp
mov
rcrl
or
mov
xor
or
jmp
lahf
nop
mov
push
data16
movb
dec
xor
xchg
sbb
dec
mov
add
mov
sbbl
mov
jp
test
aam
out
fcmovu
push
insb
lds
es
fucom
and
push
jl
inc
sbb
in
push
push
dec
mov
xor
cmp
jl
sub
lock
test
jp
cmp
stc
in
stos
dec
push
rcrb
fimull
adc
adc
mov
xchg
dec
in
dec
loopne
or
push
mov
leave
dec
test
cs
jbe
in
mov
cwtl
cmpsb
sar
push
cmp
dec
mov
int3
mov
sbb
dec
fld
enter
cwtl
mov
or
pop
shrl
sbb
iret
stc
loop
sbb
mov
xchg
test
mov
push
pop
adc
outsl
mov
test
fistpl
rcrb
aaa
outsl
dec
adc
fsubl
xchg
xchg
jno
xor
leave
cmpsl
cmp
lock
mov
mov
mov
pop
call
adcl
cmpsb
es
xor
dec
jp
movsl
sub
out
xchg
ret
stc
sbb
inc
arpl
add
dec
ss
js
or
adc
repz
je
les
jns
cmp
push
xchg
ja
inc
pop
scas
or
les
adc
jo
outsl
arpl
jb
leave
mov
fisubrs
stos
jbe
xchg
pop
dec
in
aas
std
pop
outsb
ss
int
outsb
in
iret
add
fbld
loopne
mov
pop
mov
jge
push
rcrl
cmc
xchg
sbb
sub
fistpl
add
mov
orl
mov
pop
dec
stos
jae
dec
lods
jbe
xchg
stc
dec
je
scas
call
pmaddwd
adc
and
nop
jo
sbb
insl
bound
outsl
push
add
imul
movsb
cld
jbe
pop
hlt
repz
sahf
out
pop
stos
or
inc
cmp
dec
jecxz
aas
xor
xor
and
mov
imul
aaa
into
mov
into
pop
insl
and
sub
and
xchg
and
data16
movsl
gs
mov
pop
das
mov
jg
xchg
mov
call
std
inc
dec
clc
je
call
out
cmp
push
sub
sbb
mov
jns
mov
push
push
std
xor
inc
adc
cmc
dec
xor
cwtl
mov
mov
dec
push
test
inc
sahf
jle
aas
sbb
imul
add
scas
cmp
push
imul
sti
daa
cmp
mov
shrb
jae
popf
ljmp
xor
lods
pushf
mov
pop
cmp
je
sub
hlt
dec
out
dec
jno
push
pop
jecxz
mov
les
or
cwtl
lock
or
or
inc
fimull
loope
or
inc
fstl
mov
loop
fisubs
and
mov
insb
or
cwtl
or
mov
jnp
out
xchg
cmpsl
insl
fistps
cmp
aas
movsb
dec
jae
mov
cs
iret
shlb
test
or
and
jb
std
xchg
sub
push
test
dec
lret
add
fs
arpl
loop
sbb
pusha
pop
sub
shr
aaa
sbb
fsubrl
out
pop
mov
rcrl
mov
jbe
repz
xlat
xorb
add
rcll
popa
pop
fistpl
ljmp
mov
shll
mov
repnz
jl
int
push
push
push
jno
mov
scas
test
aam
stc
nop
jns
jl
jo
xchg
mov
mov
jae
add
jae
cmc
fwait
scas
pusha
divl
xor
in
cs
test
shr
mov
stos
gs
push
cmp
mov
maxps
push
stos
cmpsb
push
jge,pn
movb
jne
bnd
popf
push
mov
xchg
pop
enter
or
adc
jae
cmp
aad
sub
insb
mov
push
mov
lods
adc
sub
cli
cmp
jg
imul
into
int3
loope
dec
adc
mov
cmp
out
xchg
mov
pop
xchg
incl
pop
fldt
adc
xor
sbbl
aaa
pop
jmp
xchg
test
fildll
inc
fmull
xor
cltd
out
lods
test
int3
je
cld
push
jp
js
in
es
jle
cmc
sahf
mov
mov
scas
icebp
test
sbb
jbe
sub
int
hlt
pop
into
mov
xor
dec
xlat
std
jmp
jb
inc
sub
outsb
pusha
bnd
cli
adcb
hlt
xor
rclb
lods
sbb
les
adc
out
xchg
mov
sbb
inc
push
jg
in
roll
dec
cmp
imull
in
sbb
push
add
xchg
add
ret
stos
mov
pop
pop
xor
cmp
fldl
fnstsw
rolb
add
les
fstpt
scas
xor
rorl
movsb
loop
mov
xchg
fdivr
and
push
in
insl
cli
hlt
inc
mov
cmpsl
jp
sbb
push
lahf
lods
mov
add
mov
mov
sbb
das
push
mov
out
push
push
int3
cmp
les
and
aaa
pop
mov
jae
mov
insb
sbb
ja
popa
xor
pop
cs
scas
mov
divl
data16
xlat
sub
nop
in
sbb
mov
orb
lods
dec
pop
cmp
dec
repnz
inc
mov
insl
lcall
and
cmc
mov
in
pop
popl
dec
push
cmp
or
sub
dec
ficompl
imul
test
fwait
pop
pop
and
dec
pop
fs
sub
in
adc
push
mov
or
xchg
rorb
mov
adc
pop
imul
cltd
dec
sub
xchg
push
xchg
mov
jno
cli
sbb
adc
je
dec
push
leave
inc
out
dec
jge
add
jo
aam
pop
adc
jbe
testb
dec
pop
sbb
ja
ljmp
mov
aas
stos
data16
ljmp
sti
iret
dec
inc
jp
pop
sbb
out
inc
mov
sub
add
mov
or
mov
je
in
xor
rcrb
jae
jbe
dec
pop
addr16
adc
mov
je
sub
jo
out
fimuls
lret
adc
adc
rcr
stos
inc
push
dec
insb
les
xchg
nop
mov
mov
xchg
loopne
dec
bound
mov
aam
cmp
sub
push
jge
addr16
xor
lds
nop
or
add
int
subl
out
xchg
or
dec
cmp
pop
inc
arpl
fwait
adc
mov
adc
dec
movb
mov
mov
ret
aam
addr16
push
and
jae
and
cmp
pop
push
movsb
roll
loope
cmp
addr16
cmp
inc
insb
dec
push
into
cmpsb
stc
pop
pop
mov
insb
loopne
sbb
int3
sahf
in
xor
dec
add
lcall
inc
sbbl
adc
pusha
xchg
rolb
outsb
ja
mov
adcb
xchg
insl
add
ret
pop
aam
scas
add
push
inc
ja
cmpsl
dec
xchg
xchg
stos
ljmp
cmc
fldl
mov
movsl
push
stos
dec
test
movl
xor
not
push
clc
jecxz
cmpsb
jnp
and
mov
mov
xor
in
popa
pop
pop
or
cmp
arpl
popf
xor
sbb
or
or
mov
sti
cmp
test
mov
xchg
in
inc
mov
cmpsl
cli
testb
fwait
mov
cmpsl
xchg
popa
sub
mov
mov
jns
cmp
shrl
cmp
rorl
mov
cmp
adc
ret
adcb
les
mov
or
cmp
addr16
xchg
cmpsl
dec
aaa
push
jo
xor
das
cmp
arpl
pop
pop
mov
in
int3
stos
and
test
ret
mov
lahf
mov
lret
sub
jl
daa
sahf
sbb
sub
fwait
out
adc
test
or
adc
dec
xor
mov
sbb
xor
arpl
outsl
daa
movnti
jl
out
pop
sbb
rorl
adc
dec
jge
adc
stc
fwait
inc
jp
xor
mov
ljmp
or
xlat
add
push
push
inc
and
dec
pop
pop
mov
lret
stc
or
inc
lahf
fst
fs
roll
cwtl
mov
and
cmp
mull
addr16
cmpsb
jnp
push
xchg
mov
add
cltd
cmpsb
out
sbb
sub
pop
cli
push
pop
int
cmc
fwait
xchg
xor
dec
pop
cmp
fcmove
xor
out
push
lcall
lea
jecxz,pt
push
lahf
mov
push
faddl
int3
ljmp
pop
xor
mov
mov
jmp
push
pop
pop
add
push
mov
fistps
xor
sub
js
add
mov
ds
fdivrs
aad
iret
int
ljmp
mov
sti
jmp
inc
cmp
movsl
iret
mov
les
adc
sbb
test
aad
cmp
ret
and
adc
rcr
addr16
lods
pusha
xchg
rclb
fstps
loope
jle
pusha
xchg
add
xchg
ds
push
jne
fucomip
mov
imul
push
call
jnp
mov
fwait
icebp
ss
xor
cmp
sub
jns
pop
ffreep
push
cmp
push
cmp
jmp
sbbb
cmpl
or
mov
push
mov
xchg
and
imul
fmul
popl
mov
test
sbb
shll
or
insl
sti
mov
call
dec
ljmp
sbbb
dec
les
sbb
cmp
movsl
mov
push
stc
jg
cmc
add
movsb
xchg
ljmp
icebp
sub
test
mov
mov
leave
mov
cmpsb
movsl
nop
les
js
and
mov
mov
xor
ret
jnp
je
testl
adc
lds
int
add
cmp
in
aaa
dec
adc
xlat
xchg
inc
pop
test
daa
in
mov
pop
mov
rol
pop
sub
push
call
mov
jecxz
popf
iret
push
inc
adc
jns
jmp
jnp
dec
mov
jbe
inc
and
xchg
cmc
cmp
and
sahf
test
jle
les
adc
out
sbb
das
aam
scas
mov
xchg
mov
or
fisttpl
mov
fcomps
div
pop
push
pop
imul
adc
xchg
in
push
xchg
ss
add
xor
mov
xor
mov
and
push
adc
je
sbb
stos
test
adc
addr16
pushl
push
sbb
jb
or
jmp
cld
mov
mov
scas
lcall
inc
xchg
loope
in
jns
mov
imul
or
out
aaa
fisttps
lods
imul
jne
lock
shlb
int3
js
gs
sub
cld
insb
and
fcmovbe
xchg
insb
mov
fstps
in
jo
push
sahf
pop
or
inc
aas
pop
adc
inc
aas
push
or
ret
je
mov
imul
jae
repz
xchg
in
dec
xchg
clc
data16
sarl
sbb
add
test
push
ret
jb
mov
cli
arpl
dec
lea
mov
bound
fcomp
sub
ds
dec
bound
dec
pop
push
mov
jb
cs
dec
test
rolb
orb
jg
and
call
adc
xchg
sahf
icebp
nop
gs
int3
push
cltd
mov
mov
idivb
repz
xchg
xchg
mov
je
cmp
lahf
jle
outsb
xchg
ds
sarb
ss
and
mov
dec
mov
cli
push
jns
dec
mov
mov
and
lret
addl
cmp
outsl
mov
insl
jp
pop
xchg
jno
cmpsb
hlt
jge
and
ror
movsl
pop
sbb
fsubrl
inc
push
pop
lods
cmc
push
cs
pop
inc
loope
mov
xchg
inc
xchg
das
inc
and
add
fildl
mov
lahf
std
sbb
arpl
xchg
xor
gs
inc
dec
loope
jb
sti
pop
outsl
lods
popa
out
fldenv
les
add
dec
movsl
sbb
dec
cmpsb
imul
sti
shrl
fwait
dec
xorb
pop
pop
inc
and
sub
sbb
or
fisubs
sti
push
push
adc
cli
jecxz
push
cmp
ret
jae
sub
out
leave
lock
pop
add
sub
add
sti
hlt
sahf
jmp
cmp
mov
js
rcll
push
lret
sub
dec
xchg
es
push
das
out
dec
or
in
stos
nop
out
test
dec
orl
lock
clc
cmp
xchg
fwait
icebp
frstor
mov
cmp
sahf
scas
stos
mov
mov
lcall
xor
xlat
xor
aaa
adc
cmp
xor
lahf
sub
mov
lcall
cmp
xor
loopne
aas
adc
xor
or
int
xchg
jg
xchg
dec
ds
loope
lahf
out
loop
jg
fildll
xchg
std
pop
bound
jo
xor
mov
pop
pop
call
push
test
popf
jecxz
push
mov
cmp
cmp
xchg
es
push
adc
sbb
pop
es
test
out
add
push
push
jmp
sahf
scas
mov
cmc
gs
leave
cmp
push
rol
adc
in
sahf
iret
aas
mov
pop
inc
sbb
loope
mov
mov
xchg
imul
fidivl
in
pop
iret
pop
xchg
pop
xor
xchg
movsb
jl
jbe
jle
pop
lods
lock
push
ljmp
mulb
dec
lock
push
sub
lds
fmull
rol
ret
mov
inc
ljmp
out
xor
dec
ja
push
jmp
jp
out
jp
sub
addr16
dec
leave
pop
cmp
mov
or
incb
daa
add
xchg
mov
or
hlt
jae
mov
mov
jno
pop
sti
lds
mov
adc
pop
stos
and
shll
mov
add
lahf
testl
pushf
int3
xchg
and
mov
dec
ss
mov
push
call
loope
dec
sbb
mov
mov
and
cmp
pop
sbb
inc
mov
push
xchg
fcoml
dec
sbbl
insl
nop
xchg
jg
test
nop
mov
fnstenv
gs
mov
movsb
cmp
mov
sub
test
adc
sbb
fsubr
pusha
movsl
rcrl
sub
add
pushf
mov
dec
and
sbb
jne
lret
pop
popf
call
cs
incl
and
push
outsb
sbb
or
push
xchg
dec
jae
pop
mov
xchg
bound
outsb
xchg
inc
inc
in
and
jecxz
xor
stc
addr16
setne
lcall
inc
sub
mov
jl
sahf
test
les
jecxz
in
jmp
pop
loop
in
daa
cmp
in
and
push
lret
sbb
sbb
inc
or
jo
je
adc
jmp
ret
adc
xchg
stc
imul
sbb
push
sbb
clc
insl
mov
outsl
icebp
xor
out
or
mov
mov
xlat
mov
mov
xor
sahf
fwait
mov
sbb
sub
mov
aad
jl
inc
cmp
ss
inc
mov
lods
inc
or
faddl
cwtl
fwait
inc
lods
dec
or
mov
ficomps
dec
and
xchg
mov
arpl
jecxz
cmp
mov
pop
sbb
and
jns
imul
pop
xchg
push
push
pop
aam
or
mov
xchg
inc
mov
repz
add
pusha
sbb
jo
xorb
inc
xchg
adcl
jmp
pop
dec
roll
mov
jo
inc
lods
mov
jae
xor
cmp
dec
lock
ds
inc
push
xor
call
inc
sarb
adc
out
arpl
dec
pop
scas
int
addl
sub
in
dec
nop
or
sub
inc
inc
jae
aaa
cli
movb
push
fldenv
loope
ljmp
cmp
cs
xchg
pop
mov
pop
cmpsb
push
arpl
jne
pop
push
mov
orb
mov
aad
xchg
jmp
mov
nop
subb
xor
jnp
stc
repnz
adc
ret
xor
mov
inc
dec
sub
and
inc
xor
rcrb
pop
fnstenv
fldl
popf
and
test
adc
mov
lret
jmp
push
and
loop
ds
movsl
inc
xchg
insb
cli
sub
mov
dec
mov
sti
mov
sub
divl
fisubs
loope
push
xchg
sahf
leave
in
pop
pop
mov
das
popf
ja
inc
adc
shrl
jp
and
xor
iret
es
and
add
fsubrp
shrl
popf
push
xchg
aam
push
mov
mov
xchg
cmp
cmp
mov
dec
lret
fimuls
jl
xor
stc
push
ja
bound
push
jbe
fiadds
cmpsb
mov
sub
lea
stos
jge
movsb
push
or
mov
add
sti
lods
fistpll
fsubrs
push
es
sub
push
lahf
mov
loop
cld
push
sub
inc
jmp
or
mov
push
jns
pop
push
push
aas
jne
jno
push
inc
and
sub
cmp
inc
xchg
in
and
mov
fistps
and
int3
cmp
mov
mov
lret
in
iret
lods
fwait
mov
loopne
cltd
sbb
sahf
mov
jb
pop
push
mov
push
dec
or
pop
dec
sub
imul
jmp
xchg
fs
aas
frstor
loope
pop
xchg
ucomiss
je
js
xchg
aad
dec
cmp
stc
sub
adc
das
mov
sub
sub
div
pop
add
mov
pusha
shll
mov
lret
in
push
in
mull
or
adc
outsb
mov
int
or
cmp
movsl
cmp
xchg
int
xor
push
test
jno
push
cmp
nop
aaa
cmp
add
mov
mov
stos
add
loope
xchg
push
into
ror
jo
and
and
fisubrs
xor
iret
push
mov
mov
das
sti
mov
or
inc
mov
jo
lcall
std
jns
pop
lcall
in
xchg
loopne
insb
mov
outsl
orps
or
jno
mov
leave
outsb
int3
jge
mov
xchg
sbb
lret
leave
mov
aaa
and
xchg
rcr
repz
sbb
mov
dec
mov
mov
dec
ljmp
pusha
jg
lds
jle
dec
xor
jns
sub
movsl
decb
test
in
or
hlt
dec
loop
sahf
push
punpckhbw
xor
dec
fstpt
in
in
cmpsl
arpl
movsb
outsb
add
pop
fmuls
xchg
jnp
ds
mov
scas
inc
loop
mov
fstpl
dec
and
cmp
loopne
imul
inc
push
or
push
cli
dec
push
xchg
ret
aaa
mov
ja
stos
push
push
repz
nop
pop
mov
cmp
out
mov
cmp
dec
sahf
fdivrs
insb
xlat
add
lods
push
cmp
lret
mov
pop
inc
xchg
push
sub
subl
push
das
sub
mov
xchg
out
add
mov
and
cs
sbb
lds
shlb
dec
popf
xor
mov
jo
sar
jnp
cmpsb
push
mov
aas
push
popf
inc
push
in
movsl
rorb
or
pop
push
or
push
scas
pop
lock
pusha
out
jns
fcmovne
xchg
mov
push
lcall
mov
sbb
and
sub
test
pop
movsb
xor
sbb
nop
pop
jmp
jecxz
dec
xchg
insl
add
scas
pop
inc
mov
mov
sbb
clc
mov
fiaddl
or
sarl
lea
pop
stos
or
mov
andb
pop
xchg
sub
pop
jb
aad
test
ds
xchg
xchg
cli
mov
jle
cmp
push
inc
adc
or
sahf
mov
inc
xor
push
and
jp
imulb
cs
mov
push
fsub
mov
filds
or
aam
cmp
mov
aas
ds
adc
je
xor
lods
mov
sbb
adc
outsl
dec
jge
cmp
faddp
jp
adc
inc
addb
add
popa
popf
cmc
adc
fiaddl
dec
sbb
out
negl
js
shrb
push
es
pusha
js
imulb
cld
inc
cs
cmp
jmp
add
and
gs
mov
jg
xchg
cwtl
shlb
sub
push
mov
lahf
out
into
nop
mov
xchg
push
push
pop
jb
lods
in
pushw
pop
repz
int
stos
add
mov
popa
mov
adc
lock
jnp
lds
cmpl
cltd
cmc
out
xor
in
stos
and
xor
das
lret
int3
dec
mov
adc
lock
jno
leave
xor
movsl
jle
jge
ja
sub
dec
sbb
push
fisubl
dec
add
mov
jl
cltd
rcr
and
cld
lods
and
cmp
xchg
cli
push
bound
sti
mov
rcrl
dec
pop
in
pusha
sub
add
mov
ret
push
xchg
out
in
lods
xlat
lds
pop
xor
stc
lahf
test
mov
or
xor
add
mov
push
loopne
xchg
rcl
adc
mov
sbb
sbb
mov
add
movsl
or
jne
and
pop
sub
inc
nop
imul
adc
outsb
push
ret
jle
out
and
loope
inc
cltd
cmc
inc
xchg
loope
nop
sub
shl
pusha
push
jp
cmp
scas
jbe
push
out
int
xchg
in
mov
outsb
add
js
out
int
jecxz
push
add
jg
in
adc
gs
jne
ret
popa
jb
and
mov
mov
std
xor
icebp
dec
into
and
mov
cmc
or
xlat
dec
int
pushf
pop
cmpsl
mov
movsl
mov
or
outsb
divb
dec
fs
dec
pusha
test
and
jbe
mov
cmp
dec
jle
in
adc
or
shlb
mov
mov
stos
pushf
nop
add
add
jno
call
gs
insl
and
pusha
ret
fs
aam
bound
push
cmpsl
jp
sbb
jbe
jb
in
xchg
fldt
or
iret
mov
push
cmp
test
cmc
dec
push
rcll
ss
cmp
outsb
or
push
loop
mov
cmp
adc
mov
add
rclb
cmpsl
sub
push
and
pop
mov
jl
push
dec
pop
orb
xor
dec
push
loopne
neg
imul
prefetchw
popa
mov
js
inc
xor
sub
popa
jb
and
dec
cs
arpl
popf
mov
lock
inc
lret
out
fadds
push
or
push
mov
in
out
lea
test
jle
ljmpw
or
orl
xchg
sbb
test
lret
and
push
sbb
and
loopne
insl
pop
push
sub
pushf
dec
or
or
xchg
enter
stos
fwait
pop
out
and
movsl
shrl
ret
pop
es
push
outsb
nop
xchg
fstl
sbb
and
outsb
cmp
imul
loop
sub
cmp
ss
xchg
pop
mov
xchg
mov
out
fimuls
addr16
or
adc
loop
lret
jo
push
in
pop
arpl
decb
fdivl
nop
dec
mov
pop
fs
jbe
adc
les
scas
dec
mov
and
and
adc
cmpsl
mov
sarl
mov
stos
xchg
jae
or
mov
gs
mov
test
adc
cmp
inc
stos
cmc
cli
inc
mov
and
mov
mov
fsubrs
outsl
xchg
push
out
xchg
sbb
movsb
sub
xor
or
lods
imul
push
push
pop
repz
xor
sub
pop
fildll
sub
out
enter
xchg
scas
hlt
daa
mov
out
adc
mov
repnz
ficoms
jo
ja
jbe
jnp
and
jmp
or
out
ss
cmp
outsb
pushl
and
sub
dec
and
jns
pop
lret
jge
cmp
test
and
pop
pop
mov
shl
fcomps
insl
adc
movsl
imul
cltd
mov
jno
sub
jae
xchg
imul
shlb
rcrl
xlat
popf
xchg
sbb
aaa
pushf
movsl
ljmp
push
in
xchg
sub
fnsave
push
js
adc
jne
pop
movsb
dec
xor
imul
mov
mov
lods
fsubrl
test
daa
cmp
daa
mov
cmp
stos
int
jp
xchg
add
ret
lods
pop
dec
and
mov
jl
and
lods
and
push
sbb
lret
sti
int3
int
loop
cmp
std
pop
jb
mov
xchg
subl
xor
push
mov
stos
xchg
cmp
pop
pop
out
xchg
lret
jne
sbb
nop
ljmp
mov
xchg
fcmovnb
adc
jbe
insb
dec
xor
jecxz
xor
popf
test
stos
jb
add
test
pop
cmp
or
dec
repz
test
dec
clc
jnp
sbb
lret
ja
mov
adc
ds
cmpsb
subb
xchg
xchg
pop
jle
dec
popf
outsb
pusha
xchg
or
rclb
fs
xor
inc
lea
jo
jecxz
sub
lret
loopne
inc
cltd
jecxz
or
repz
loope
adc
stos
in
xor
push
mov
push
cvtdq2ps
aas
jbe
cmp
jl
jg
inc
xor
and
lods
adc
or
outsb
loopne
and
cwtl
sbb
dec
pop
xor
inc
imul
loopne
sub
stc
push
pop
jmp
cltd
loop
fsts
shlb
jmp
aad
sub
mov
mov
xchg
aas
rorl
lock
fidivrl
dec
adc
push
inc
int3
sbb
mov
imulb
pop
ds
lret
into
inc
add
fcoml
and
notb
or
jnp
fs
mov
or
arpl
adc
adc
mov
inc
and
mov
cmpl
ss
ds
and
push
xchg
fstl
jmp
mov
gs
push
int
call
jmp
jae
add
pushf
xchg
js
inc
aas
ss
or
mov
in
cwtl
je
fs
or
mov
xchg
jae
xchg
pushf
push
fistpll
stos
adc
xchg
mov
cmpb
push
out
es
sti
std
fiaddl
add
mov
sbbl
sbb
daa
aam
pop
lock
mov
push
mov
jmp
mov
imul
push
not
cmp
mov
cmp
xchg
mov
inc
mov
push
mov
mov
rcrb
inc
cmpsl
mov
jno
nop
or
push
dec
pop
and
fdivs
out
xchg
inc
xor
fwait
ret
int3
and
sahf
insl
test
lods
xchg
pop
mov
scas
xor
adc
leave
sahf
mov
xchg
pop
lcall
push
sbb
loop
scas
mov
aam
jbe
dec
inc
sti
sub
and
jb
push
sub
pop
cmp
inc
loope
addr16
adc
les
outsb
notl
repnz
ss
nop
jmp
rorl
popa
mov
dec
sahf
dec
dec
mov
ret
arpl
jecxz
pusha
sbb
mov
or
clc
cmc
stc
inc
subb
inc
hlt
lret
push
ss
jne
add
add
mov
jne
fsubl
inc
icebp
lret
fldenv
aad
sub
jb
rcr
and
sbb
sub
js
add
sub
and
inc
in
nop
insl
fs
fsubrl
imul
fucompp
xchg
mov
popl
filds
sbb
cld
int
test
push
lock
call
or
jle,pn
ret
or
sbb
jns
mov
es
push
sarb
xor
jge
hlt
mov
test
orb
sub
mov
dec
cli
mov
jne
daa
push
mov
add
das
cmpl
std
pop
in
sbb
pop
add
and
inc
or
daa
xchg
sbb
dec
gs
xor
sub
jle
and
xor
jae
pusha
mov
xchg
lahf
loop
pop
lock
addr16
lods
int
popf
outsl
sbb
in
ljmp
ret
repnz
mov
rorl
je
inc
das
outsb
dec
imul
ljmp
sbb
cli
fiaddl
ds
testl
adc
xor
lods
aad
lret
xor
inc
xor
imul
popa
lcall
dec
testl
movsl
sbb
lahf
out
mov
xchg
shrl
rolb
mov
pop
mov
cmpsl
push
std
aaa
aam
mov
aad
fildll
sub
es
mov
icebp
test
aam
fwait
in
pop
test
in
sbb
js
inc
out
dec
daa
mov
pop
mov
lret
pop
hlt
ret
cmp
mov
push
sti
cmpsb
movsl
mov
loope
loop
dec
sbbb
mov
sbb
mov
jecxz
or
jne
mov
rclb
and
push
insl
sarl
dec
xor
dec
mov
lock
or
cmc
in
jmp
mov
dec
and
scas
lock
mov
cmp
mov
pushf
push
cmp
rol
xor
jbe
jne
jnp
icebp
or
aaa
jnp
sub
out
fistl
scas
outsb
push
jp
jmp
ret
ljmp
les
jae
push
icebp
push
dec
pop
dec
je
mul
xchg
adc
arpl
sbb
xor
repz
hlt
mov
outsb
shl
jb
movsb
mov
adc
pop
xchg
add
mov
sbb
xchg
scas
filds
xchg
sbb
les
aaa
dec
dec
fadd
or
scas
testb
pop
pop
enter
pop
sbb
add
push
popa
cltd
jecxz
dec
xlat
adc
test
push
leave
insb
sbb
sarl
in
ret
xor
xchg
pop
push
outsl
adc
or
sub
outsb
sub
mov
sbb
mov
sahf
iret
fsubp
addr16
fdivrs
insb
or
or
icebp
out
fcomps
ret
xchg
cld
jno
xorb
jbe
inc
sbb
imul
mov
pop
lods
xor
ret
mov
jns
xor
inc
in
sbb
pop
fnsave
dec
daa
push
cmp
rcl
jb
and
xchg
lea
cmp
dec
popa
mov
mov
xchg
add
sbbb
lahf
divl
sbb
clc
loope
stc
jmp
mov
sbb
push
cmp
cmp
pop
xchg
mov
and
adcl
out
inc
or
orl
mov
fisttpl
sar
in
sbb
cmpsl
enter
inc
add
loopne
int3
aaa
mov
repz
popa
bound
jl
xor
mov
jnp
cmp
mov
fs
pop
inc
mov
test
pop
xor
or
sub
pop
ja
ja
in
push
push
movaps
push
fcompl
mov
jno
test
fldenv
xchg
cltd
imul
bound
dec
cmp
clc
mov
and
inc
push
adc
shll
mov
push
cmpb
cmpsb
push
mov
bound
int
enter
test
sbbb
hlt
mov
inc
inc
enter
stos
adc
aam
daa
out
adc
mov
or
jno
cmpsb
mov
nop
lock
push
lds
cmp
rcl
or
mov
sub
ret
inc
xchg
fadd
pusha
mov
mov
dec
jl
cmp
sti
cmp
in
pop
ret
fists
inc
pop
or
or
ljmp
ja
stc
ljmp
and
popa
push
pop
pop
out
mov
in
ret
jb
in
pop
lret
icebp
or
pop
dec
cmp
iret
or
jl
in
subl
pop
add
sti
gs
iret
leave
sub
cmp
std
mov
dec
sbb
test
mov
popf
sbb
mov
ret
mov
ret
mov
lods
push
pop
rolb
popa
push
jl
cmpsl
fmuls
je
popf
sub
imul
pop
aaa
push
push
jecxz
pop
cmpsl
xorb
push
fsubrl
sub
aaa
pusha
loopne
xor
fs
loopne
jge
and
mov
mov
movsb
mov
mov
clc
cmpsb
mov
or
cmp
pushf
enter
jb
shlb
xor
jbe
cmpsb
sarl
lds
jmp
lret
in
xor
mov
lret
cmp
xchg
lret
sub
test
addr16
out
rorl
insl
dec
aam
xchg
cmp
xor
jp
sbb
js
fcomip
cmp
xor
cmp
cwtl
adc
pop
fisubrs
add
pop
or
pop
xor
mov
mov
jp
mov
pusha
jnp
sbb
pop
xchg
scas
xchg
fsts
in
maskmovq
mov
lock
push
push
scas
cld
mov
pop
ja
mov
push
sbb
mov
lret
cmp
cld
pop
sbb
mov
jp
sub
cmp
inc
jbe
xor
cmc
out
xchg
mov
rcrl
popa
dec
arpl
shll
cmpsb
inc
int3
mov
xchg
or
movsl
inc
decl
sub
cmp
enter
mov
cmpsl
push
ret
clc
cmp
movsb
sbb
mov
fimull
xor
scas
test
push
push
in
repz
mov
adc
shll
lret
push
sub
jecxz
jns
pop
mov
aas
jl
add
iret
sbb
sbb
std
fwait
xchg
enter
jg
scas
dec
push
sbb
pop
or
sbb
cmp
xor
rorb
xchg
jle
or
xor
mov
and
test
lret
fistl
cmp
enter
es
inc
aas
mov
adc
cmp
xchg
dec
jns
xorb
mul
in
std
dec
mov
inc
xchg
stos
mov
jnp
cmpl
shr
fistpll
roll
mov
outsl
int3
movsb
outsb
xchg
data16
int3
cmpsb
in
push
mov
lea
mov
insl
js
jnp
bound
jo
das
loop
pop
sbb
in
jae
rol
in
cmp
push
xor
pop
pop
hlt
ss
stc
xlat
mov
imul
aad
mov
xor
mov
mov
jl
mov
sub
jns
dec
pushf
loop
popa
jmp
mov
sbb
stc
sub
daa
xchg
jnp
jnp
hlt
inc
sahf
inc
cltd
or
je
pop
dec
mov
test
or
dec
cwtl
or
jecxz
divb
imul
mul
fimuls
xor
mov
and
jecxz
jle
gs
arpl
add
sarb
dec
sub
aad
cmp
daa
popf
lea
or
adc
jnp
incl
pusha
repz
es
mov
and
test
imul
push
mov
and
js
pop
mov
test
jecxz
cmp
cmp
clc
aam
mov
call
xchg
int
cmp
xchg
movsb
cld
push
repz
or
mov
or
repnz
aam
stc
xchg
out
in
sarl
add
int
flds
cltd
fs
jmp
gs
outsl
mov
pop
inc
xor
cmp
mov
sbb
push
mov
in
mov
fwait
stos
repz
pop
or
xlat
sub
add
sub
insb
mov
hlt
aam
sbbb
cmp
loope
addb
jle
mov
jne
pop
xchg
cmp
stos
ds
leave
arpl
push
stos
in
adc
jle
pop
fcom
movsl
inc
adc
in
sub
cltd
aaa
add
inc
test
dec
data16
xor
stos
aam
data16
es
in
popa
aad
xchg
cli
loope
xorl
subb
xor
pusha
jp
out
adc
rolb
xor
or
jle
popf
jle
xchg
mov
cld
ficomps
iret
adc
es
pop
inc
xlat
pop
in
xor
call
inc
aam
jb
mov
push
jno
xor
jbe
or
xor
mov
outsl
or
ljmp
inc
pushf
ss
add
xchg
call
push
push
mov
neg
orl
es
push
push
dec
in
inc
cmp
mov
push
scas
xor
insb
pop
push
adc
call
sub
cld
inc
icebp
mov
cmp
cmp
arpl
add
sub
dec
stos
cmpsl
jnp
dec
es
adc
push
jne
movsl
push
lock
out
addr16
xchg
in
pop
cmp
dec
mov
mov
mov
je
xchg
dec
das
and
push
cmpl
xchg
dec
dec
aaa
push
cmp
enter
mov
pop
popf
adc
pop
mov
stos
fbld
aaa
xor
test
mov
fwait
bound
pop
mov
test
mov
out
loopne,pt
dec
mov
in
cltd
xchg
aam
jecxz
fistpll
test
leave
call
jmp
scas
cmc
add
movsl
push
jge
and
lods
and
cmp
xor
fidivs
sub
ret
ja
adc
mov
hlt
fnstcw
pop
jl
lods
xchg
mov
dec
scas
aaa
inc
jne
mov
pop
xorb
mov
inc
lret
lods
cmpsl
cmpsl
das
and
sbb
jnp
sbb
or
mov
push
and
pop
dec
dec
lahf
xchg
xchg
mov
and
pop
orb
into
jnp
mov
int3
jle
test
out
lahf
push
test
cltd
adc
mov
add
jmp
mulb
test
adc
sbb
sub
inc
clc
mov
ss
pop
xor
push
xchg
lock
jnp
aam
or
in
mov
or
cld
test
addr16
jbe
and
pusha
cmpsl
outsb
push
jge
scas
xor
add
inc
mov
data16
lret
imul
pop
jno
aad
and
gs
lods
test
loopne
das
dec
jno
cmp
sbbb
fcom
insb
mov
dec
pushf
stc
xor
inc
jmp
mov
je
add
call
aam
scas
pop
mov
sbb
nop
test
call
pushf
and
es
stos
ret
cmpsl
pop
mov
pushf
mov
in
jmp
mov
add
push
jns
loopne
jecxz
arpl
lret
or
sbb
xchg
cmp
out
jo
sahf
push
testl
loope
aam
jge
xor
bound
movsb
and
arpl
in
mov
pop
cmp
adc
dec
stc
out
popf
mov
sub
fxch
out
dec
ficomps
dec
dec
and
fimull
fildl
cmc
cmp
cmpsl
bound
adc
add
adc
andb
xor
adc
xchg
mov
dec
mov
sbb
xchg
mov
lock
testl
aam
movsl
lcall
pop
sahf
fadds
test
lods
sub
adc
sti
sub
xchg
mov
sbb
out
loope
int3
mov
or
insl
ja
pusha
aas
inc
aas
add
roll
loop
add
leave
nop
jnp
jg
jns
jle
int
imul
add
xchg
nop
mov
inc
cmp
mov
add
lods
rcrl
and
sti
js
mov
push
scas
sbb
mov
repz
push
and
pop
xorl
jo
in
je
sbb
push
pop
into
insb
adcl
push
sub
ljmp
push
push
mov
and
mov
lret
mov
cmc
push
pop
ret
cltd
cmp
adc
pop
clc
scas
jg
popa
int
repnz
mov
clc
add
jmp
sbb
inc
cmp
lret
push
add
lods
xchg
inc
cld
sub
mov
mov
data16
adc
pop
lods
adc
repz
pop
dec
lret
pop
cmp
sbb
jge
or
imul
push
or
jle
add
and
cmc
mov
stc
fsts
lods
xchg
push
popa
imul
xchg
shl
cmpsb
xor
sbb
in
int
fstp
xor
cli
popa
inc
pop
iret
ret
push
imul
inc
lret
xchg
loope
xchg
cld
jge
js
sbb
push
sub
mov
push
js
in
mov
jns
data16
sub
mov
xchg
mov
in
hlt
in
mov
or
cmpsb
sub
cmpsb
push
pop
movsb
adc
xchg
mov
ficomps
sbb
inc
add
adc
pushf
mov
cmp
xor
push
or
or
sub
adc
add
and
sub
pushf
pop
mov
ljmpw
decl
lret
push
out
inc
gs
clc
xchg
pop
dec
add
ret
je
data16
and
push
movsb
pop
xchg
mov
push
cld
sbbl
inc
enter
or
xchg
int
dec
ficomps
fnstsw
int
mov
xchg
lret
notb
ja
inc
loope
jl
dec
sbb
sub
jp
cld
and
repz
pop
inc
sub
jle
idivl
dec
icebp
ficompl
test
jnp
or
push
ljmp
gs
sahf
int
cs
push
inc
nop
or
movsb
leave
push
in
dec
mov
test
loope
imul
mov
push
sbb
lcall
std
das
xorl
out
in
mov
out
jo
xchg
adc
sbb
mov
xchg
inc
mov
les
mov
or
pop
ret
mov
sub
iret
lret
mov
lahf
push
sbb
mov
cmc
sarl
xchg
mov
pusha
xor
cmp
repnz
sarl
or
cmp
sti
pop
push
fs
repz
dec
adc
leave
pop
lds
push
jne
repz
das
popf
mov
repnz
adc
jp
dec
push
iret
xchg
pop
or
out
jne
pusha
pop
mov
hlt
pop
mov
sub
add
loop
mov
hlt
and
sub
adc
hlt
sub
lcall
out
mov
stos
cli
cmp
adcl
inc
mov
ds
cltd
mov
dec
fistl
ret
mov
arpl
pop
stos
sub
daa
cmc
mov
insl
test
jno
dec
jae
sub
add
insb
stos
mov
jns
fwait
mov
pushl
call
aam
enter
pop
add
jp
xchg
lea
rclb
int
int
pop
sbb
lods
hlt
int
mov
add
push
ds
adc
out
into
imul
enter
sub
std
mov
push
mov
fdiv
lret
pop
jmp
push
loop
cmp
mov
int3
inc
ljmp
or
mov
roll
jo
das
adc
cwtl
in
addr16
jp
sub
out
test
rcll
leave
dec
xchg
int3
dec
mov
roll
hlt
lahf
data16
out
jo
mov
arpl
cltd
inc
sbb
add
inc
push
mov
and
mov
add
icebp
inc
test
mov
shrl
jo
inc
clc
lret
jns
std
sbb
in
push
lods
nop
orl
or
jecxz
subb
pop
xor
imul
jbe
vaddsubpd
repz
mov
pop
xchg
add
xchg
sub
jbe
clc
lret
inc
xchg
jo
jge
leave
movsl
lods
sahf
mov
daa
ret
cmp
addr16
cmc
arpl
push
xchg
frstor
mov
fstps
sbb
stos
test
fucomp
cmc
dec
orb
fwait
outsb
test
loop
daa
mov
in
xchg
sbb
scas
dec
pop
xchg
call
sub
cmpsb
out
sbb
imul
pop
push
hlt
inc
ret
sbb
sbb
fmul
std
pusha
jo
gs
mov
cwtl
jne
les
aad
inc
xlat
mov
adc
frstor
inc
pop
mov
ss
xchg
mov
pop
mov
jns
pushf
sub
xor
dec
subb
movsb
pop
xor
out
inc
in
mov
push
repz
add
mov
aam
push
dec
stos
adc
imul
mov
push
pop
sbb
pushl
mov
insl
pushf
mov
cmp
lret
dec
je
ret
in
roll
mov
pop
and
lahf
mov
aam
cld
ret
int
imul
adc
add
mov
pop
and
call
cld
xchg
call
lods
pop
cmc
sbb
sbb
outsl
xchg
jns
divb
dec
jae
in
adc
imul
xor
roll
icebp
xor
pop
in
xor
stos
push
in
jbe
mov
int3
add
sbb
jnp
fidivrs
dec
cmc
push
mov
addr16
jge
xchg
cmp
dec
or
sbb
jl
lea
dec
cltd
jo
fistpll
int
xchg
lfs
sub
mov
dec
jb
sbb
test
pushf
sub
mov
adc
pop
pop
adc
add
imul
dec
push
test
clc
lock
pop
jno
dec
xchg
dec
imul
hlt
mov
or
jmp
mov
push
push
push
xchg
cli
adc
fcoms
aas
mov
mov
mov
push
pop
int3
shrl
adc
fistpll
add
push
aam
mov
xor
mov
pop
push
sub
dec
outsl
jae
scas
sarb
sub
addr16
sub
pop
push
enter
mov
dec
or
lock
inc
in
lea
lret
sub
adcl
inc
mov
jg
roll
cmpsl
aas
xchg
pop
scas
insb
lods
mov
jo
decl
out
subb
out
loopne
outsl
imul
pop
cmp
and
arpl
cmp
cmpl
rcr
push
rolb
das
add
out
sub
push
call
imull
jno
dec
adc
inc
dec
mov
inc
jmp
push
push
push
jmp
add
xlat
dec
pop
pop
roll
mov
and
imul
fcmovne
in
ror
adc
lods
in
jmp
push
pusha
test
mov
sub
insl
push
clc
sub
jge
in
or
inc
mov
push
jge
imul
sti
fcmovb
fwait
test
je
mov
xchg
cmpl
orb
inc
outsb
dec
mov
push
sti
data16
test
ds
add
ds
leave
aam
adc
adc
rcll
ret
mov
das
cmp
stos
in
xchg
and
sbb
cwtl
fisubrl
in
iret
lret
mov
pop
push
dec
lods
xchg
and
fcmovnb
pop
sbb
push
cmc
cs
jne
bound
xchg
lods
jo
in
and
push
mov
test
pop
repnz
lods
and
mov
cmp
xchg
jbe
push
lret
les
pop
cli
mov
inc
inc
bound
cld
enter
sub
adc
jmp
and
mov
or
test
pop
flds
mov
cmp
sub
mov
xchg
xor
inc
icebp
push
and
mov
jb
cli
dec
xchg
add
rolb
movsl
cs
pop
mov
mov
daa
insb
test
sti
inc
lods
loop
mov
lea
test
jle
test
sbb
pop
icebp
cmp
mov
mov
enter
adc
test
lea
or
mov
mov
lret
sbb
mov
add
fwait
xor
cmp
sub
sahf
jae
pop
nop
test
xor
xchg
in
mov
or
jns
shlb
or
pop
jae
mov
mov
mov
pusha
lods
movsb
imul
cmpsl
sub
mov
dec
insl
ret
inc
mov
jne
mov
ret
jmp
mov
sbb
mov
push
pusha
hlt
pushf
lds
jge
inc
inc
cwtl
push
ljmp
orb
jle
dec
fsubs
mov
add
adcl
cli
xor
add
inc
mov
in
mull
pop
shl
sub
inc
je
fcomp
mov
insb
ret
arpl
mov
in
pop
cmp
icebp
in
mov
adc
dec
push
popa
or
jae
mov
fmul
ds
les
out
movsb
cmp
mov
jb
cmp
das
lods
out
clc
or
push
jmp
mov
test
push
pop
dec
pop
stos
mov
ds
xor
in
movsl
sbb
test
jno
jecxz
add
je
shr
lods
jb
jmp
cmp
fs
out
inc
pop
sbb
xor
jbe
fwait
nop
loope
and
or
mov
pop
out
pop
lcall
pop
ljmp
mov
xchg
inc
dec
sub
push
dec
sar
push
lock
and
pop
ret
movsb
jae
cmp
ljmp
mov
fmuls
stos
mov
or
mov
mov
cs
int3
jb
popa
lret
pusha
lcall
dec
sbb
add
sbb
mov
sbb
int
ja
dec
cmpsl
inc
jo
sbb
pop
jnp
jge
xchg
cmp
push
ljmp
dec
push
aam
sar
mov
xchg
arpl
ljmp
pop
imul
inc
push
mov
fwait
dec
add
cmp
xchg
inc
ja
xchg
fistl
inc
lret
aas
jl
loope
rorb
jmp
ljmp
shll
mov
mov
xchg
pushl
push
sub
mov
jecxz
daa
mov
ja
sub
ret
aad
inc
pushw
mov
dec
enter
adc
cwtl
adc
push
or
rcrl
mov
mov
xchg
sbb
xor
and
popa
aad
test
pop
es
lods
add
inc
dec
xchg
adc
xchg
pop
xor
das
xchg
pop
std
or
cmc
cli
test
lds
imul
and
jmp
push
and
xchg
cmp
repnz
aam
stos
adc
sub
bound
xchg
pop
add
and
ret
sti
fwait
arpl
jg
outsb
dec
xor
std
push
inc
fst
dec
cltd
sbb
into
adc
xorl
test
cmovb
xor
repz
fistpll
add
mov
add
sahf
dec
out
pop
pusha
jne
cli
jno
xchg
test
arpl
adc
adcb
int
sub
mov
xchg
xor
out
testb
outsl
pop
mov
xor
popa
cmpsb
push
fdivl
jo
mov
sbb
imul
scas
test
sti
sub
mov
cmp
fdivp
xchg
test
in
adc
or
int3
cltd
jle
dec
inc
jecxz
push
lcall
adc
fdivs
aas
jl
rclb
call
adc
or
xchg
mov
mov
ret
lods
xor
cmpsl
sub
ja
aas
out
add
idivl
int3
jbe
add
push
repnz
jb
cmc
jge
int3
and
cmp
fmul
mov
mov
pop
cld
or
push
int
insb
xor
movsl
push
cld
incl
in
lock
int
xchg
mov
cld
js
add
outsl
mov
stos
stos
in
arpl
push
xchg
mov
fsubrl
lcall
mov
je
push
add
lcall
fisubrl
xchg
push
dec
adc
sub
aaa
cmp
rolb
push
cmp
rcl
stos
inc
xor
enter
call
inc
cmp
loop
cmpsb
push
mov
je
xor
jmp
lock
push
and
ret
adc
dec
lahf
cmp
xchg
stc
in
xor
xchg
xchg
sbb
dec
inc
imulb
shlb
mov
jne
jb
insb
movsl
xchg
frstor
leave
xorb
jg,pn
and
jnp
in
mov
mov
lcall
xchg
xchg
cld
ret
js
mov
mov
mov
jle
cmp
dec
mov
xchg
push
mov
stos
aam
mov
daa
in
jmp
push
mov
out
xor
jle
insb
mov
ret
jecxz
mov
fbld
repz
mov
in
orb
jl
jecxz
mov
inc
cmc
add
jns
jb
in
lock
hlt
xor
fisttps
in
popf
shl
or
push
scas
jbe
xchg
xor
adc
adc
shlb
mov
popf
jns
jbe
rorl
xor
imul
mov
std
push
repnz
add
jle
loop
inc
movsb
add
outsb
jae
dec
fstp
rcll
and
imul
sub
fldl
lret
inc
adc
and
xchg
mov
dec
fwait
jo
jge
xchg
les
aas
add
mov
pop
cmp
fstl
fmuls
ja
xor
push
imul
and
mov
ds
cmp
outsl
call
iret
gs
push
pop
lret
movsl
enter
ret
xchg
xchg
mov
xor
data16
sahf
mov
fsts
data16
xchg
clc
fs
pop
push
ljmp
and
leave
cmp
mov
jmp
jl
adc
dec
mov
adc
inc
sbb
pop
and
jg
fdivrl
xchg
mov
xchg
mov
in
and
add
jmp
scas
rorl
xor
sbb
or
adc
xchg
lcall
fwait
pop
pop
lock
out
jae
cltd
enter
or
subb
add
mov
add
dec
xlat
sbb
mov
outsl
fiadds
xor
add
xor
or
jbe
shrb
xor
push
push
out
mov
xchg
imul
sub
or
das
xchg
testb
sbb
in
jl
push
xchg
push
test
pop
outsl
cld
adc
jns
jl
rclb
add
push
stos
xlat
add
ja
jb
jbe
mov
pop
pop
mov
into
mov
push
inc
dec
or
gs
cltd
stos
adc
mov
cltd
iret
mov
loope
xlat
push
push
out
sbb
and
push
imul
adc
sbb
orb
imull
sub
rol
push
loop
mull
jns
add
jno
mov
mov
pop
push
test
pop
iret
and
sti
pop
rol
in
jno
shr
adc
add
lods
jae
pop
ret
enter
add
sub
pop
jb
in
and
push
imul
adc
icebp
fidivs
mov
jge
pop
in
call
pop
sbb
mov
mov
pushf
jnp
out
adc
leave
cmp
pop
les
mov
push
dec
xorl
or
sub
popa
or
lds
adcl
test
movsl
xchg
hlt
int
mov
jg
push
sbb
ret
shlb
push
pop
pusha
adc
int
iret
inc
je
xchg
sub
push
test
hlt
nop
aad
xor
or
outsl
ljmp
call
popf
fimull
mov
fsincos
jne
mov
dec
mov
adcl
jge
mov
mov
dec
popf
pusha
movsl
fldenv
cmpsl
mov
push
nop
test
jle
test
pop
sbb
ljmp
imul
mov
cmc
cld
push
and
loope
mov
movl
dec
dec
sbb
dec
jne
cmp
jge
iret
rcr
rcrb
jns
inc
sar
and
inc
sbb
adc
cmc
ljmp
in
cmpsb
and
stc
pop
xlat
push
call
and
bound
pop
xor
gs
loop
or
and
outsb
fwait
add
push
cmpsb
pop
or
popf
loope
or
push
scas
cwtl
icebp
ss
int3
fcmovb
mov
xor
push
jmp
cmp
lcall
rclb
adc
add
push
adc
jge
lods
xor
rcrb
jecxz
sahf
or
lcall
jbe
pushf
out
outsl
repnz
pop
add
adc
fmulp
or
sbb
ja
insl
std
sbb
stos
xor
js
xor
pusha
adc
int
mov
push
jp
pop
xor
lock
push
scas
cmp
fistpll
rcrb
aaa
cmp
jp
sbb
aaa
xchg
insl
xchg
jb
out
sbb
jp
lcall
lret
dec
and
popf
add
std
xor
sub
adc
xor
inc
adc
push
cs
scas
sbb
adc
sahf
push
sub
jmp
dec
adc
mov
aad
push
pop
addr16
mov
flds
pop
out
cmp
sbb
je
mov
xor
mov
dec
and
push
loopne
push
cmc
loope
mov
jp
cmp
dec
mov
push
stc
lods
xlat
pop
add
rcr
add
ljmp
outsb
in
sbb
mov
rolb
enter
int
les
jno
xor
xor
push
adc
cmpsl
and
into
mov
add
mov
vmovlps
data16
imul
je
xchg
das
jno
or
sbb
fstl
div
lds
xchg
mul
mov
xchg
fsubrs
jmp
cmp
dec
dec
mov
mov
lock
push
mov
repz
icebp
ljmp
push
xor
sahf
xor
mov
shlb
adcb
adc
cmp
testl
push
jne
xchg
mov
mov
pop
mov
mov
xchg
in
ss
push
mov
scas
push
sub
jle
pop
aam
movsl
in
dec
mov
mov
sbb
repz
cs
dec
push
jle
outsb
fildl
xchg
out
addr16
inc
cmc
leave
iret
mov
mov
adc
sbb
sub
lahf
repz
pop
repz
adc
push
pop
out
lods
sub
dec
bound
aas
sub
push
imul
push
or
push
gs
cs
lods
add
adc
fdivp
dec
push
flds
jae
int3
fisttpll
jns
cmp
sbb
pop
adc
jecxz
pop
nop
popa
sbb
imul
xor
cs
cmp
call
lock
dec
dec
addb
mov
addr16
cmpsl
aaa
pop
cmp
jecxz
adc
icebp
loope
fisubrs
frstor
imull
imul
mov
push
test
bound
nop
push
xchg
ds
rclb
pop
inc
dec
mov
fs
pusha
sbb
int
fcmovb
test
sbb
dec
mov
test
fiadds
lret
mov
or
xchg
cmp
or
leave
addr16
or
sub
shll
cmp
sub
add
sub
jle
or
fidivrl
or
fstpl
push
iret
and
aam
call
xchg
xchg
and
adc
je
cwtl
adc
rol
jl
es
mov
inc
push
mov
aaa
lret
jge
sbb
cmp
mov
add
jo
shlb
out
in
lret
repz
push
and
leave
nop
cmp
sub
lcall
sbb
and
push
aaa
popf
lods
dec
add
push
adc
stos
push
push
insl
in
mov
mov
cmpsl
test
jge,pn
lret
aaa
cmp
inc
fldpi
pushf
enter
aam
jb
xor
and
dec
mov
outsb
cmpsb
sub
adc
xchg
pop
xchg
push
in
addr16
or
pop
and
ss
xchg
int3
xchg
xchg
sub
or
pop
and
mov
scas
sbbl
sbb
pop
pop
jbe
and
scas
xor
jnp
mov
jecxz
data16
dec
pop
cmp
lahf
mov
orb
ret
mov
shll
call
push
lods
addl
mov
rolb
adc
push
xlat
cwtl
in
xor
pop
mov
shl
xchg
rclb
mov
in
adc
inc
mov
subb
movsl
mov
jg
popf
insb
sti
or
xchg
xchg
mov
les
xchg
xchg
push
in
jne
mov
scas
add
add
add
fmuls
cmpsb
cwtl
cli
and
push
nop
xor
inc
inc
mov
mov
call
jb
push
int3
testl
mov
lret
mov
mov
pop
pop
jb
ds
mov
or
jns
rcll
xor
and
push
fsubr
inc
fldt
pop
and
sbbl
pop
pop
ret
or
xchg
dec
push
add
cmp
cmp
rclb
pop
icebp
xor
imul
inc
and
xchg
or
push
sarl
adc
push
imul
sub
pop
push
cmove
adc
sahf
pop
inc
pop
pop
lods
mov
inc
aad
and
adc
push
cs
xor
icebp
out
pop
add
add
aas
fidivrs
jno
mov
imull
loop
hlt
sar
add
mov
movsl
and
jns
in
inc
xor
lods
sarb
cmc
fwait
dec
xor
aad
push
cld
mov
daa
enter
mov
int
test
mov
lds
sub
cli
xor
mov
push
jge
pop
out
jmp
sub
dec
or
jge
imull
xchg
loope
mov
inc
test
xlat
cbtw
xchg
nop
lret
inc
das
add
in
out
and
add
lahf
gs
xchg
add
icebp
xchg
rcl
xchg
imul
jg
and
push
test
push
cmc
loop
inc
frstor
pusha
dec
mov
cmp
push
inc
and
fmull
rcrl
shll
fnstsw
mov
dec
push
xchg
mov
es
mov
aaa
stos
mov
rolb
aam
lods
stc
or
mov
cmc
addr16
rcrb
sub
nop
jo
and
les
lcall
je
sub
iret
loope
mov
sub
fidivs
cltd
sbb
ljmp
xor
btrl
leave
das
aad
push
add
pop
dec
pusha
imul
pop
gs
imul
aaa
dec
insl
or
mov
dec
flds
sbb
movsb
icebp
ret
pavgb
jmp
shll
mov
jle
lea
leave
int3
jg
or
stos
lret
add
daa
cld
lods
sbb
cmp
std
shlb
push
push
inc
out
imul
mov
mov
mov
js
and
dec
testb
clc
xor
cltd
pusha
fdiv
mov
mov
subb
push
clc
push
cmpsb
loope
mov
push
daa
aas
dec
iret
es
stc
push
push
dec
call
int
jno
inc
sbb
cltd
fldcw
pop
fdiv
pop
mov
lock
add
iret
cmp
rorb
hlt
mov
lret
mov
frstor
mov
push
cmpsb
dec
sub
sbb
or
mov
xchg
sub
pop
adc
xor
jle
andl
imul
in
scas
clc
adc
jne
loop
inc
lcall
xor
loopne
comiss
adc
imul
aam
ds
cmp
and
sbb
adc
inc
filds
xchg
aaa
or
aaa
rorl
pop
jecxz
add
in
call
into
test
imul
imul
sbb
jbe
and
pop
fisubrl
sbbb
mov
subl
out
pop
mov
xor
jae
daa
and
int3
push
fidivrs
xchg
xchg
inc
jnp
scas
mov
sbb
add
out
popa
cmc
sub
jl
adc
sbb
daa
addr16
sub
mov
clc
jl
push
pop
push
insl
jmp
std
cmp
and
inc
repnz
pop
mov
cmpsb
push
sbb
sub
gs
pop
enter
test
imul
or
daa
mov
xor
pop
xor
ret
lahf
cltd
jb
mov
out
jnp
das
cli
ret
jl
mov
pop
adcl
mov
in
adc
or
rcrl
leave
inc
push
scas
sbb
push
pminsw
fsub
or
addb
cli
mov
jmp
inc
adc
mov
fsubs
push
arpl
es
cwtl
inc
mov
out
fbstp
mov
cs
in
scas
lods
jmp
xorb
sub
test
push
loopne
or
sub
inc
jno
aam
mov
or
jo
push
sahf
lret
sti
sub
sub
push
inc
enter
aas
pop
fs
mov
pop
fcoml
movsl
inc
push
push
mov
cmc
shll
add
sbb
or
and
test
sbb
adc
pop
jnp
aad
xor
mov
add
mov
pop
pop
lret
ret
fmul
xlat
cmp
fldl
std
sub
xchg
or
xor
adc
pop
loopne
mov
insb
pop
mov
gs
xchg
gs
jp
xor
xor
mov
xchg
je
inc
xchg
cmp
cmp
jb
ljmp
lods
into
out
repz
cld
mov
or
cmp
cmp
hlt
and
addr16
leave
scas
testl
or
and
cwtl
sub
inc
mov
shll
jne
xor
sarb
add
repz
mov
xor
and
dec
or
mov
adc
sbb
inc
inc
lahf
pushf
es
hlt
lock
sti
xchg
cmp
xchg
mov
jmp
cld
aaa
nop
adc
fsubrp
sahf
jnp
cmp
cmpsl
cmp
and
or
or
popa
push
fmuls
mov
mov
pop
mov
mov
int3
mov
in
push
xlat
pop
dec
mov
xor
mov
js
shll
movsb
cltd
xorl
in
aam
test
mov
andl
jle
jb
add
push
ror
gs
xchg
mov
xor
jae
sub
lret
push
sub
aam
fdivr
and
jbe
add
lcall
or
mov
pushf
push
sarl
xchg
sub
loope
dec
pop
push
mov
cmp
mov
or
xor
add
sub
pop
ret
fisttpl
xchg
in
pmullw
xor
sahf
lock
popa
cmp
adc
add
call
mov
sub
sbb
call
in
push
imul
jbe
mov
sub
and
out
sub
xchg
sbb
cmpsb
inc
jg
arpl
fucomip
rcll
inc
in
mov
mov
sub
jae
test
dec
scas
adc
aad
ret
out
inc
iret
sbb
js
push
loope
dec
jne
jns
ret
dec
int
imul
mov
sbb
jg
jecxz
lcall
inc
jbe
mov
jno
cmp
push
addr16
mov
fcomps
pop
insl
pop
cwtl
insb
sbb
and
out
lahf
mov
dec
fcmovne
ss
loop
int3
xchg
dec
pop
lahf
jb
cmp
cmp
ret
loop
cmpsl
sbb
xor
outsb
adc
in
adc
mov
cmp
adc
nop
enter
ucomiss
cli
int
sbb
add
or
insl
jbe
movsl
inc
inc
test
inc
popf
and
rorb
aaa
xor
lahf
cmp
pop
push
mov
add
lret
roll
inc
adc
xchg
cmp
mov
xchg
adcl
xor
push
popf
std
test
mov
insl
ja
negl
mov
test
cwtl
ss
pop
push
fadds
add
add
and
adc
mov
in
xchg
int
or
mov
mov
repnz
int
inc
cld
mov
xchg
pop
mov
mov
xchg
shrl
push
inc
loopne
push
cli
fisttpl
dec
aaa
xor
push
pop
or
or
enter
pop
fisubs
mov
into
loopne
jno
imul
pop
test
sbb
cltd
pop
aaa
gs
out
add
xor
xlat
cmpsl
adc
cmp
xor
dec
out
or
jns
sbbb
out
rcrb
jmp
sub
call
push
or
xchg
faddl
sub
mov
push
ss
ret
in
ret
dec
jl
adc
arpl
push
cmpsb
jecxz
std
jecxz
loopne
insl
and
xlat
insb
ds
push
mov
mov
sbb
aas
xor
mov
and
inc
or
dec
mov
sarl
ret
sub
std
jg
js
inc
sti
popa
std
sarb
jnp
icebp
das
ret
xor
mov
and
jbe
jbe
jo
push
mov
sarl
dec
mov
movsb
out
cmp
push
add
lahf
sbb
mov
jbe
cmp
imul
cli
imul
dec
idiv
outsl
popf
lock
ss
jmp
repnz
fcomp
push
or
test
pop
imul
std
outsb
rolb
cmpb
inc
lods
aas
cmp
add
leave
pop
and
fs
shrb
inc
adc
fs
dec
pusha
clc
ljmp
lea
or
add
enter
mov
bound
fists
lahf
dec
mov
inc
loope
bound
out
sub
jp
adc
clc
ds
cld
jmp
jmp
mov
sbb
call
add
lret
cmp
mov
xor
push
jmp
fiadds
inc
ljmp
or
xchg
mov
das
std
push
push
subb
scas
loopne
and
pop
jge
cmp
and
mov
scas
dec
imul
and
stc
jp
inc
fdivs
pop
sbb
aam
ja
mov
outsl
sub
inc
daa
subl
test
dec
aad
in
inc
cmp
fistl
jecxz
lahf
loop
into
idivb
cmp
cltd
jge
dec
add
fdiv
mov
pop
imul
jno
lret
outsb
leave
int
jb
pop
dec
bound
mov
pusha
mov
push
xchg
mov
mov
xor
pop
sbb
es
movd
and
add
add
cltd
lret
push
xor
mov
cmpsl
cli
pushl
add
insl
data16
inc
les
rclb
movl
xchg
jne
mov
ret
cltd
xor
xchg
cmp
jmp
pop
imul
in
mov
mov
rorl
sub
inc
lods
xor
jg
inc
cld
int
or
insl
neg
and
push
pop
inc
push
jne
pop
repnz
out
sub
mov
xchg
add
nop
imul
add
stos
sub
loope
sbb
mov
mov
push
pushf
ja
stos
pop
gs
cmpsb
je
repz
stos
sub
es
cs
mov
jg
fpatan
adc
sti
mov
inc
rorb
mov
test
mov
and
dec
je
lcall
xor
aad
popf
shlb
xor
sbb
cmpsl
jmp
jno
divl
pop
mov
push
adc
add
sub
dec
sbb
xchg
loopne
lods
push
das
push
lds
arpl
and
mov
mov
jo
rclb
mov
mov
mov
testb
call
fiadds
dec
sbb
and
jns
mov
lods
shll
sar
js
mov
les
xchg
xor
xor
ss
jae
and
lret
adc
lahf
out
data16
push
xchg
imul
scas
enter
adc
push
or
int
sub
lahf
xchg
xchg
cwtl
cld
pop
or
arpl
pop
jg,pt
imul
sahf
pop
lea
aas
cmp
subl
iret
les
stos
stos
jns
pop
mov
cld
mov
jg
lock
cmp
lret
aaa
rol
cmp
mov
mov
jl
sbb
push
iret
fsub
jmp
ret
ror
icebp
shrb
lock
inc
cmp
cmp
in
and
movsb
jl
fadds
test
pop
lea
sub
jle
je
das
cmc
sub
pushf
dec
adc
lret
mov
nop
aas
pop
mov
ret
daa
out
aam
call
and
sbb
lds
rolb
mov
aaa
jbe
lods
push
mov
mov
mov
mov
ja
ficoml
ds
jne
push
dec
jne
inc
insl
mov
aaa
into
push
pushl
mov
adc
sub
and
loopne
pop
testl
fs
in
pop
out
adc
outsb
jl
fdivrs
and
dec
mov
mov
addr16
mov
pop
pop
push
xchg
push
sbb
in
test
inc
int3
adc
inc
pop
jb
outsb
xchg
inc
mov
cltd
aam
push
outsl
pop
mov
cmp
xor
pop
sbb
sub
cmp
rorb
mov
popa
add
lock
movsb
jge
cmpsb
icebp
stos
sub
arpl
push
jb
mov
stos
cltd
inc
mov
pop
imul
pop
pushf
out
and
mov
scas
std
in
cmp
cltd
sti
imul
pop
cld
jge,pt
sbb
or
pop
xor
testl
inc
lods
stos
pop
aas
fildl
add
hlt
mov
and
lds
insl
pop
inc
or
add
mov
cmp
and
push
movsl
mov
mov
jg
inc
cmp
cs
leave
xor
jns
inc
cmp
cld
shll
xchg
into
add
mov
or
inc
mov
sahf
fistl
cmpsb
jns
jb
add
push
call
pop
call
ja
pop
dec
ds
jno
imul
xchg
aas
dec
cmp
sbbl
popf
pop
or
add
divps
or
xor
pop
in
lahf
mov
test
repnz
inc
xchg
jge
jp
cmp
adc
sub
dec
xchg
daa
xchg
sti
cmc
dec
std
xchg
lea
out
lahf
pop
cmc
mov
cmpsl
movsl
iret
xchg
mov
and
push
jo
xchg
ja
mov
or
mov
inc
ficoms
bound
js
adc
shrb
fsubl
cmc
nop
mov
leave
mov
pushf
arpl
jns
and
cwtl
dec
sub
xchg
and
sub
adc
pushf
jae
pop
pop
lock
push
sti
fisubl
pop
push
jae
add
inc
scas
aaa
mov
mov
std
jnp
cmp
push
rcrb
out
frstor
cmp
jle
out
and
inc
push
and
lds
dec
pusha
pop
push
int3
fdivs
ljmp
mov
sbb
pop
jl
mov
pop
pop
xchg
lcall
mov
into
dec
adc
pop
lret
sarl
dec
jmp
mov
mov
ds
sub
lcall
repz
fstps
bound
or
subl
xchg
fdivrl
aaa
mov
cmp
cmpsb
add
lea
add
adc
js
mov
ret
shrl
addr16
incb
inc
aam
mov
add
cmpsl
fwait
adc
shll
adc
mov
fidivl
dec
and
inc
pusha
mov
push
in
clc
xchg
inc
movsl
ds
mov
mov
jo
xor
repnz
vpslld
add
in
mov
push
std
ret
lahf
dec
nop
cs
or
add
cmp
xor
and
mov
lret
test
mov
cmp
pop
mov
push
and
lahf
fnstenv
scas
adc
test
inc
xchg
mov
mov
aam
pop
nop
mov
pop
and
xchg
lret
stos
dec
mov
roll
inc
add
pushf
sarb
xor
mov
outsb
push
out
test
mov
aad
les
push
mov
int
std
dec
fistpl
pop
outsl
push
sub
jmp
sar
cmc
in
ficompl
or
scas
sbb
sbbl
jns
and
lahf
rcr
cwtl
cmc
xchg
rcll
lcall
bound
xchg
adc
mov
push
inc
repnz
fbstp
pop
mov
xor
pop
sub
outsl
pop
cli
adc
mov
data16
nop
mov
cmp
adc
push
test
imul
ret
loop
sub
das
pop
loop
clc
add
mov
cpuid
push
pop
rcrl
out
jne
sub
xor
mov
bound
call
outsl
mov
insl
sub
push
sbb
nop
mov
push
sbb
in
inc
loop
cmp
shll
fisubrl
mov
add
arpl
pop
cwtl
cmp
sbb
fs
leave
rcl
sub
mov
push
pop
push
stos
int
fisttpl
sarb
rcrb
lret
xrelease
push
or
popa
xor
hlt
inc
idivl
out
jecxz
ds
add
mov
xlat
mov
shrb
cld
leave
cmp
repnz
xorl
push
orl
mov
into
mov
jmp
jnp
repz
shlb
add
adc
int
stos
mov
jge
daa
rolb
rcl
das
jno
stos
in
adc
xchg
or
ds
xor
push
icebp
mov
mov
push
jecxz
loopne
imul
enter
outsb
test
xor
aaa
out
fistl
in
bound
jns
js
push
pop
xorb
in
mov
aaa
test
incl
or
xchg
adc
push
inc
dec
xchg
adc
mov
jge
scas
pusha
push
pop
mov
int
test
jno
xchg
adc
int3
pop
xorl
dec
out
fsubrl
xor
pop
cmp
shll
outsb
sbb
loop
rcll
jmp
mov
lods
cmpsl
cmp
or
pop
lea
push
adc
xor
lds
and
cmpsb
js
mov
mov
popa
sbb
xchg
inc
mov
fldt
movsb
or
mov
loope
in
fs
icebp
arpl
mov
dec
jbe
or
out
pushf
xor
mov
cli
sbb
mov
inc
push
inc
mov
cmp
add
inc
repnz
adc
test
mov
push
lea
sub
sub
inc
mov
push
sub
lds
push
cltd
je
sbb
dec
inc
imul
bound
addr16
imul
inc
sbb
pop
pop
ucomiss
sar
sahf
andb
cmpsl
sbb
subl
das
cmp
cmp
std
xlat
iret
bnd
out
jmp
jle
hlt
aaa
out
mov
lods
clc
push
sub
and
sbb
cld
adc
mov
inc
repz
cmp
push
out
mov
sub
das
push
faddp
aam
cmp
rcrb
divl
rorl
xchg
or
and
sbb
stos
jnp
sbb
adc
mov
mov
insl
data16
sbb
arpl
mov
or
cmc
andps
jmp
pop
push
mov
or
xchg
sub
add
pop
sub
js
aaa
aam
in
dec
aam
inc
out
or
cmpsl
enter
int
push
cmp
push
lods
rol
cli
lds
scas
lret
xlat
nop
imul
imul
dec
and
jmp
testl
loop
xchg
outsl
sub
shlb
inc
test
and
mov
repnz
lahf
inc
mov
mov
push
call
std
sub
out
mov
lret
push
sti
pop
loope
xor
aaa
xor
cmp
adc
cltd
xchg
pop
jne
sub
cmp
sbb
popa
jns
or
or
inc
cli
sub
push
add
fidivl
mov
xchg
or
xor
int
xor
push
loopne
xlat
cmovl
pop
loope
not
movsb
and
lock
sub
repz
jmp
sub
out
ret
roll
push
lea
into
mov
sub
inc
hlt
sub
mov
cmp
fidivrl
adc
mov
and
lret
imul
je
or
add
std
inc
xor
push
mov
cltd
cmp
movsb
fwait
cmp
push
mov
xchg
es
les
jnp
imul
xor
sub
fisttpl
adc
xor
jp
push
cmc
pushf
xchg
xor
adc
jns
xor
jnp
mov
insb
in
fcmovne
xor
pop
int
cmp
std
jg
ljmp
testb
scas
cmp
cs
loopne
into
or
sub
pop
push
addl
cmpsb
push
mov
jne
mov
xchg
inc
pop
cld
popl
mov
mov
lahf
insl
mov
jle
popa
clc
inc
aas
push
int
mov
lock
dec
jle
fdivp
lods
sarb
loope
sub
jecxz
pop
or
mov
in
or
cmp
sub
shll
jbe
adc
cmc
jb
or
mov
and
loop
pop
sbb
sub
mov
xchg
xor
test
or
data16
push
fsubr
inc
mov
adc
in
and
jnp
stc
loope
push
cmp
pop
cmp
out
nop
std
lock
daa
dec
repnz
xchg
jno
adcb
lahf
mov
pop
jge
dec
inc
dec
jl
outsb
mov
lds
push
gs
mov
xchg
xlat
sbb
fwait
aas
scas
or
push
cmp
pop
add
jl
fdivl
xchg
jmp
dec
dec
push
in
dec
sarl
sbb
sbb
test
jnp
shlb
pop
push
iret
dec
out
pushf
subl
fs
aas
jns
adc
mov
inc
lahf
dec
add
fs
lods
inc
push
inc
inc
xchg
movsl
mov
sahf
or
cltd
mov
and
int3
adc
xchg
sbb
imul
out
xor
in
out
lret
hlt
jno
xchg
jmp
xchg
push
stc
pop
lea
add
xchg
fs
mov
jne
stos
sbb
loop
lahf
fucomp
push
xchg
into
cmp
dec
cmpsb
std
les
js
mov
cmp
cmp
pop
sbbl
in
iret
mov
in
scas
xor
insb
or
sub
insl
inc
sarb
popa
mov
int
inc
and
mov
push
bound
nop
notb
imul
ss
aad
pop
xor
mov
enter
mov
mov
cwtl
arpl
push
add
add
es
sti
mov
cmc
or
cmp
iret
int3
leave
and
jg
sahf
ret
es
ljmp
into
test
es
pop
mov
adc
lahf
push
repnz
jnp
testl
mov
or
sbb
in
jnp
outsb
iret
xchg
add
cmp
jbe
sub
push
loop
sbb
dec
fstpt
js
push
stos
cmp
pop
mov
pop
or
cmpsl
loope
bound
xchg
jno
test
stc
js
in
in
cltd
add
outsb
fildll
enter
loope
cli
push
xor
jne
int3
adc
adc
xor
jbe
jge
loopne
mov
jp
xlat
dec
notb
loope
mov
stos
mov
and
in
nop
jg
cmc
xchg
jecxz
pop
dec
mov
movsl
sub
aad
int3
into
shll
fs
sub
xor
mov
aad
leave
mov
sbb
xchg
in
subb
and
loope
inc
out
lods
lods
add
jb
les
xlat
cmp
mov
mov
mov
or
lret
fbld
xchg
andb
cmp
repnz
inc
addr16
pop
add
sub
fildl
insl
jnp
sub
sub
gs
test
ds
adc
jle
or
divl
testl
scas
aam
xchg
outsb
add
into
pop
int3
lea
cmp
test
hlt
adc
push
lcall
jne
jmp
dec
mull
movsb
mov
mov
mov
jmp
out
jo
lcall
dec
jne
mov
mov
lea
lods
adc
inc
lahf
popa
add
inc
sti
cs
jl
lds
or
es
incb
xchg
daa
mov
mov
mov
jb
shrb
jb
add
call
jl
decb
test
jge
ds
adc
cli
nop
ljmp
xchg
loop,pn
cli
mov
mov
fsubl
neg
push
test
and
fistpl
pop
jno
mov
leave
push
cld
push
aad
add
mov
rcr
dec
pop
cmp
aad
aas
ret
fstpl
mov
lods
add
mov
stc
inc
inc
dec
mov
jo
test
sbb
dec
cmpb
lods
mov
lcall
or
ss
icebp
mov
mov
sub
cltd
sub
fcomi
jbe
out
sbb
pop
xchg
or
aam
push
jns
or
cmc
pop
dec
sti
cmp
decl
dec
daa
xor
add
repz
outsb
movsb
in
data16
push
sti
mov
aad
add
mov
add
cmpsl
nop
dec
in
add
ret
pop
xor
pop
xchg
popa
mov
pop
lds
jmp
push
sti
dec
inc
sub
imul
cmp
in
add
mov
aas
push
mov
into
cmp
es
xor
dec
jb
mov
es
adc
or
push
mov
stc
xorl
push
iret
mov
mov
mov
inc
adc
test
test
push
cmp
add
aad
fisttps
mov
mul
aaa
stos
push
rclb
cmp
sub
int
pusha
push
aam
inc
loop
lock
stc
mov
in
cmpsb
out
mov
stc
sub
push
in
push
xchg
fistpll
enter
dec
cli
rclb
arpl
xor
or
or
or
movsb
dec
sbb
insl
aam
pop
in
jb
ret
out
hlt
adc
inc
xor
jbe
pop
jl
fcompl
imul
inc
inc
jge
xor
testl
push
loopne
sub
loop
lds
inc
lock
mov
cmp
rclb
mov
jmp
add
xorl
aas
cmp
cli
xchg
or
ss
cmc
orb
dec
xor
movsb
sbb
push
push
loop
cmc
in
cmp
pusha
pop
or
cmpsl
xor
dec
sarb
adc
iret
sbb
outsb
and
fmul
mov
in
jb
imul
fistpll
shrl
fbld
fsubl
mov
out
jnp
or
rorl
xchg
movsl
in
jns
lock
add
mov
sub
and
cmp
lcall
mov
xchg
imul
mov
pop
cmp
inc
popf
ljmp
mov
mov
sbb
adc
stc
pop
jecxz
scas
lock
pop
and
adc
sbb
push
subb
lds
insb
fisttps
das
mov
jl
nop
test
inc
in
in
push
mov
adc
and
jnp
shl
inc
sahf
out
fistpl
dec
scas
or
imul
ret
mov
loopne
std
xchg
rcl
sbb
inc
cmc
scas
add
out
add
pop
sbb
outsl
mov
mov
gs
jl
ja
sbb
pop
sub
lea
sti
lock
pop
push
jnp
stc
cwtl
mov
mov
pop
cli
and
stc
imul
xchg
clc
stos
or
cs
fstpt
mov
or
rolb
inc
mov
and
pop
push
in
or
test
fimull
or
lahf
mov
sarl
sbb
inc
mov
mov
push
mov
dec
pop
stos
jns
jne
sub
movsb
inc
xchg
arpl
jo
xchg
pop
push
xorb
mov
jg
sub
ret
sbb
shlb
cmp
mov
inc
push
mov
push
xor
cmpsl
aam
xor
mov
jl
sub
pop
or
mov
cmp
jmp
adc
cmp
cmp
negl
mov
and
data16
add
aaa
jecxz
dec
adcl
cmp
mov
dec
arpl
lods
mov
cmp
out
and
popf
lods
push
sbb
jbe
roll
adc
cmpsb
adc
dec
aaa
jae
ret
adc
push
sub
mov
insb
je
sub
orb
test
dec
in
imul
lods
rcr
nop
in
mov
gs
jb
xor
movsl
lcall
adc
inc
aad
roll
mov
jno
inc
daa
pop
adc
hlt
sarb
lret
adcl
fists
jbe
rcll
jno
xor
roll
and
jo
mov
cmp
xchg
in
pop
mov
insb
lds
mov
push
cmp
dec
cmp
add
or
pop
pop
xlat
lock
inc
lret
inc
test
inc
inc
cmpsl
and
sub
cwtl
cmp
push
aaa
cmp
adc
inc
mulps
pop
sub
ror
xor
es
push
inc
addr16
mov
mov
mov
inc
repz
and
xchg
xchg
add
fsts
rcr
divb
mov
lods
es
mov
cmp
cs
xchg
or
adc
lods
gs
aaa
xor
dec
mov
cmp
and
cmp
pop
mov
inc
mov
push
pop
mov
inc
sbb
jg
push
dec
mov
mov
xchg
rcr
pop
pop
out
dec
xchg
lret
cmp
xorl
fildl
fisttps
or
push
insl
cltd
cmc
lret
mulb
pop
inc
lods
lods
jo
imul
pop
inc
jbe
int
jno
ds
pop
gs
test
or
inc
cltd
push
mov
sub
mov
mov
imul
pop
bound
dec
push
mov
xchg
jns
loopne
inc
mov
js
jecxz
sbb
mov
dec
movsb
mov
mov
push
jecxz
pop
js
aam
cmp
and
shlb
fiaddl
cmp
cltd
xlat
gs
int
repnz
or
leave
jo
loope
sbb
es
fs
dec
insb
mov
xor
adc
lock
fdivs
ret
popa
add
icebp
push
scas
push
cmpsb
popf
cmp
pop
mov
dec
fisttpll
cmp
pop
loope
mov
lcall
cmp
mov
cmp
add
movsb
imul
mov
hlt
push
or
leave
cmpsb
lods
mov
pusha
xchg
sti
push
sub
mov
in
dec
xor
fisubs
xchg
in
shll
rcrb
adc
mov
icebp
fbld
fcoml
cwtl
xor
leave
cmp
xor
cld
sbb
mov
hlt
sbb
shll
or
sar
fwait
pop
lds
int3
bound
cmp
add
and
xchg
fisubs
aam
jns
adc
xchg
fcomps
mov
hlt
aas
jge
jl
jnp
lock
sar
clc
outsl
push
cmp
dec
ffree
testl
lods
lret
mov
inc
add
pop
and
mov
aad
sub
cmovno
sti
pop
pop
fdivrl
movsl
ret
mov
imulb
lret
sbb
mov
cmp
mov
add
mov
sbb
jmp
add
jmp
cmpb
cmp
nop
and
outsb
mov
cwtl
neg
mov
cli
outsl
inc
sbb
push
loopne
mov
pop
jno
inc
or
lds
stc
scas
orb
movsl
mov
loop
push
in
testl
sarl
push
adc
loope
fnstsw
cmc
aas
sbb
pop
mov
adc
iret
inc
std
aas
inc
jbe
ret
push
repnz
mov
add
stc
mov
stc
pop
mov
push
cltd
mov
inc
enter
or
and
mov
adc
mov
testb
push
int3
in
imul
stc
sbb
fsubrl
mov
jne
mov
jge
je
push
or
and
shll
ljmp
repnz
fmull
pop
out
push
mov
icebp
lret
cmp
pop
pop
test
shrb
pop
imul
adc
cmp
inc
fsubr
jbe
push
ret
out
dec
cmpsl
aad
cli
adc
clc
sbb
cmp
jg
and
xchg
push
mov
addl
ljmp
push
adc
mov
test
xor
test
lds
dec
aam
sbb
call
add
jp
jmp
jns
in
sti
push
and
jo
dec
jae
shll
pop
lds
orl
dec
add
std
daa
outsl
call
sahf
in
push
fs
fstpl
inc
ret
subb
or
loop
ljmp
mov
pusha
jb
mov
inc
aas
jge
dec
aas
lods
out
or
add
data16
mov
hlt
inc
cli
ds
xor
mov
pop
mov
arpl
repz
add
ret
push
mov
xor
pusha
xor
rcr
adc
ret
psraw
mov
or
adc
in
andb
sbb
xchg
pop
dec
or
into
into
repnz
test
xor
stos
mov
shlb
pop
pop
xlat
cltd
cmc
popf
clc
mov
dec
int
leave
stc
rcl
xor
in
or
call
jmp
rcll
sub
dec
gs
out
call
dec
or
mov
addr16
scas
cmp
or
cld
add
xor
fmuls
lock
push
mov
pop
int3
jbe
push
push
subb
xor
sar
mov
sbb
shrl
mov
clc
das
mov
fstps
test
mov
in
repnz
loop
or
sbb
ljmp
cmp
pop
sub
je
in
mov
and
push
dec
and
push
xchg
in
test
jge
sub
test
adc
mov
mov
jbe
lods
cmp
int3
rclb
cmp
add
aam
push
sub
fwait
dec
imul
mov
out
cmp
les
lods
cmpsb
push
daa
lods
and
add
jne
sbb
cmp
adc
insl
mov
or
outsl
push
shrb
mov
mov
mov
lods
cmp
mov
pop
inc
popf
out
ja
hlt
lods
fcoml
int3
rcl
sbb
mov
or
int3
repz
ss
addr16
cmp
lret
sub
jl
enter
jmp
xchg
dec
ss
mov
loopne
jmp
or
data16
or
ljmp
or
jge
insb
jle
sbb
or
adc
pop
out
add
push
sbb
xchg
ljmp
add
push
nop
cmc
lock
jle
cmp
test
push
fiadds
mov
jne
inc
call
lret
outsb
insl
mov
push
outsl
mov
call
add
cltd
scas
xchg
fbld
and
sub
lahf
je
add
outsl
push
jne
dec
cmpsl
cmp
adc
jno
mov
sub
sub
push
mov
add
cmp
clc
ret
push
scas
jge
mov
inc
or
cmp
push
adc
cmp
lret
cmp
out
movsb
sub
ret
adc
filds
jmp
ret
repnz
rol
inc
loope
loope
test
jecxz
dec
lods
stc
cmp
jne
pop
xchg
mov
loop
dec
mov
sbb
sbb
mov
mov
bound
mov
mov
lcall
pushl
jg
mov
popa
outsl
imul
pop
test
and
xchg
adc
out
lock
sub
movsb
jne
insl
enter
mov
clc
lcall
pop
mov
js
sysexit
mov
push
mov
stos
adc
pop
les
lds
lcall
or
inc
and
or
repnz
jo
dec
dec
pop
mov
mov
inc
mov
add
sbb
or
sub
push
add
cmp
xor
and
ss
cli
xchg
mov
add
test
and
jno
mov
pop
arpl
cmp
jns
sbb
incb
push
xchg
cltd
mov
scas
jno
jp
shll
in
pusha
sbb
das
add
dec
lret
xlat
popa
in
jno
sbb
test
cmp
jbe
add
mov
jns
xchg
ss
xchg
sub
ss
cmc
psubq
int
jo
dec
int
mov
arpl
loop
int3
sub
jbe
mov
mov
mov
add
sub
jg
sub
test
cmp
out
xchg
addl
nop
leave
or
pop
ret
mov
adc
aad
sbbl
mov
push
aaa
aad
fwait
ss
sti
mov
int
test
imul
push
lahf
sti
pop
cmpsb
pop
dec
jae
imul
cmp
jbe
and
mov
xchg
into
repnz
jno
push
bound
shll
inc
xchg
lods
mov
inc
out
fld
int
xchg
out
or
sub
cmp
sti
sahf
call
push
bound
lcall
mov
xchg
jmp
icebp
jne
dec
cmc
or
mov
cmp
adc
inc
ljmp
ds
pop
fwait
in
jecxz
add
mov
divb
push
lods
cli
shlb
lea
xchg
repnz
lret
jbe
imul
nop
jne
in
xchg
jo
rorl
loopne
cld
mov
decl
insl
mov
and
mov
cmp
xor
ds
das
cmp
jge
xchg
mov
in
xchg
les
aad
enter
lds
sbb
cltd
mov
insl
push
pop
adc
dec
jo
mov
and
dec
xor
push
mov
jo
ret
in
and
rcll
xchg
mov
ds
test
adc
out
aas
leave
sbbl
push
shr
rcl
out
daa
xchg
xchg
xchg
dec
andb
mov
sub
cmpsb
jb
loopne
xchg
cs
add
mov
xor
lret
cmc
lret
dec
dec
push
jno
data16
scas
mov
into
inc
xor
hlt
mov
add
out
les
sub
mov
jmp
popa
movntq
sub
imul
push
jp
pop
adc
clc
cmp
jo
loop
lods
mov
ret
and
mov
xchg
inc
hlt
cmp
pop
or
call
mov
pop
ss
pop
sbb
cwtl
sbb
push
mov
jg
add
and
adc
lahf
pop
pushf
scas
xlat
cmp
mov
cltd
in
ss
mov
cmp
mov
cmp
hlt
imul
shl
pop
or
dec
or
push
dec
dec
cmp
mov
sbb
mov
and
xchg
push
je
insl
push
cmp
fcompl
push
mov
mov
xor
imul
mov
repz
sub
push
rorl
push
inc
adc
lahf
mov
sbb
dec
sahf
lahf
fs
push
xchg
gs
fmull
popf
stos
push
add
into
mov
in
faddl
cmc
sbb
sbb
jno
cmp
jmp
mov
jecxz
sarb
push
repnz
sub
xorb
adc
cwtl
sub
dec
hlt
pop
int3
and
ds
pop
ret
pusha
int
push
mov
jge
adc
mov
addb
movsb
loopne
mov
movsl
nop
sub
icebp
add
aam
stc
lds
in
push
inc
pop
nop
imul
test
imul
mov
adc
push
adc
mov
rcpps
notb
xchg
xchg
stos
dec
arpl
or
in
fsubp
sub
jbe
xor
mov
pop
sarb
dec
inc
sbb
rcll
xchg
sahf
xchg
inc
test
xor
pop
subl
add
pop
xlat
jp
jno
cmp
fistpll
push
rclb
cmpsb
sahf
mull
outsb
leave
jecxz,pt
je
inc
fsts
mov
pop
test
pop
inc
push
mov
lds
pop
test
fidivrs
push
sub
scas
ret
jae
popa
orl
push
insb
lods
aam
ljmp
push
jmp
in
push
insb
lods
pop
repz
insb
lea
fwait
or
fisttps
pop
mov
idivb
enter
int
add
push
shlb
rcl
sahf
int
movsl
rolb
lea
cmpsb
popa
pop
cmp
mov
popa
jl
loope
fcoml
rorl
inc
lods
push
imul
jmp
lret
xor
and
inc
bnd
jmp
sbb
pop
mov
cmp
das
dec
adc
aas
sbb
fmull
test
les
and
pop
and
cltd
xchg
les
inc
loop
mov
xchg
pop
mov
mov
mov
xchg
add
xor
jb
sarb
cmc
jg
dec
jne
push
jb
inc
pop
loopne
dec
fdiv
sbb
gs
rcl
push
ss
xchg
ret
jb
mov
cmpsb
cmpsb
cs
in
lock
pop
fidivl
sub
xor
leave
push
sti
popf
push
sub
addr16
jp
out
cmc
icebp
ret
mov
and
iret
gs
push
xlat
into
mov
hlt
mov
fbstp
pop
mov
xor
push
cmpsb
mov
jmp
mov
fwait
pop
out
mov
push
ja
sub
xor
mov
mov
mov
push
cmc
cwtl
xchg
pop
hlt
sub
stos
adc
incb
adc
stc
frstor
xchg
push
dec
dec
dec
out
mov
adc
xor
sbb
test
jnp
push
jae
pop
mov
pusha
lahf
mull
and
jge
lcall
mov
inc
repnz
lds
sub
sub
adc
loopne
xchg
insl
dec
pushf
xchg
mov
sbb
fwait
shrb
scas
cli
add
movsb
mov
rol
fbstp
lret
inc
call
loope
push
ror
mov
out
sbb
gs
push
jmp
mov
jae
sbbl
jmp
test
dec
aas
push
push
bound
sub
movsb
popa
xor
clc
pop
fidivs
mov
push
out
icebp
cmp
xchg
and
insl
add
call
out
or
xchg
xor
out
pop
pop
test
mov
lcall
dec
jge
mov
mov
pop
inc
pop
lcall
imul
jne
xor
and
negl
andb
xor
mov
shll
push
add
xor
sbb
repz
lcall
jo
xchg
divb
inc
outsb
ja
xchg
aaa
loope
rcrl
sub
cs
adc
cltd
and
in
lods
add
dec
push
xchg
insl
jae
popf
inc
aas
xlat
mov
xlat
dec
push
cmpsb
jns
out
xchg
push
rorl
daa
leave
in
sbb
fwait
sbb
inc
div
pop
ret
lods
jg
mov
outsb
mov
lods
scas
ss
stc
stc
jge
hlt
xchg
testb
inc
ret
pop
jne
cmp
ss
xchg
fcmovnu
push
ret
faddl
cmp
mov
xchg
xchg
cld
jae
inc
inc
cli
sub
pop
mov
cmpb
inc
js
jno
xchg
push
shll
or
fisubs
mov
pop
pop
cwtl
iret
lea
stos
push
push
mov
push
scas
adc
pop
out
mov
xchg
push
out
jmp
ret
xor
mov
inc
fs
lods
aas
fidivrl
dec
jo
lds
jne
xchg
mov
jl
and
jp
popa
loop
xor
js
stos
in
test
je
loope
insl
or
mov
test
jno
ffree
imul
xchg
cmc
insb
std
jg
sti
mov
cmp
inc
jns
imulb
icebp
mov
stos
movb
mov
xchg
or
ds
aam
jle
dec
out
sti
lcall
pop
mov
push
mov
jne
sub
cmp
mov
into
out
int3
insb
aas
fisubl
mov
xchg
stos
jbe
inc
dec
shl
adc
xor
sub
sub
cmp
mov
ficoml
imul
cmc
repz
subl
repz
dec
popf
xor
adc
cmp
test
aam
push
bound
sub
mov
das
add
addb
cmpsl
pop
push
add
rolb
pop
mov
icebp
insl
aad
out
dec
call
cmp
aas
mov
loopne
test
mov
out
xchg
cmpsb
icebp
daa
insb
mov
sbb
mov
inc
sbb
int
inc
jmp
faddl
bound
mov
repz
ffreep
xchg
adc
out
and
inc
stos
push
fidivl
aad
xor
push
or
ret
mov
xchg
fistps
rcll
in
nop
push
adc
cwtl
pushf
movsl
xchg
push
sub
dec
in
jne
imul
or
mov
sub
xchg
popf
aad
adcb
pop
mov
fidivrs
lea
rcll
sbb
pop
test
dec
mov
into
pop
mov
in
scas
ror
pop
sub
mov
xchg
jne
fdivr
adc
int3
pop
lcall
push
pop
push
adc
out
jno
cmp
mov
scas
aad
std
push
add
scas
jp
cmpsb
dec
xor
pop
cmp
es
outsl
jg
cmp
sub
outsl
icebp
fucomip
xchg
rol
adc
outsl
mov
ljmp
fldl
js
pusha
int
push
or
rolb
push
aam
testb
sbb
jmp
fldcw
lds
int
test
div
inc
or
and
dec
inc
pop
cmc
lods
and
movsl
and
repz
mov
jp
ret
mov
xchg
cmc
repz
cld
imul
or
adc
fsubrl
arpl
push
pop
int3
aaa
mov
imul
jnp
sbb
lock
stos
pop
nop
mulb
popa
pop
out
dec
pop
xchg
daa
cmpsl
sub
xchg
xchg
or
pop
add
sbb
and
and
dec
nop
cmc
inc
popa
jns
pusha
lea
mov
outsb
shrb
aam
pop
sahf
test
dec
jno
xor
lea
mov
js
in
sahf
cmp
push
lcall
insl
mov
mov
push
testb
in
hlt
push
into
mov
xor
pushf
push
lods
add
push
sbbl
lret
loope
ja
pop
pop
pop
sbb
cmp
cmpsb
jecxz
or
jno
dec
shrl
mov
or
cwtl
inc
pop
add
dec
mov
xchg
jns
add
and
sahf
mov
lds
xor
pusha
sar
mov
dec
vxorps
test
sbb
in
cmp
xor
repz
gs
mov
push
push
sti
js
jne
nop
mov
cmp
les
or
dec
lock
addr16
roll
mov
inc
mov
cmp
cmpsl
jle
pop
adc
inc
mov
gs
xchg
sub
sub
mov
xor
cmp
inc
cs
adc
test
mov
cmp
xor
jge
movsb
jnp
or
cmp
aad
sarb
add
test
sub
sub
xchg
cwtl
sarb
pop
aaa
jge
mov
xor
and
loopne
push
xor
jmp
lea
adc
cmp
in
popf
into
jle
mov
js
mov
shl
push
mov
mov
pop
push
pop
mov
mov
mov
daa
lea
repnz
jbe
movsb
leave
je
call
pop
add
add
insl
lods
add
inc
pop
sub
pop
add
ds
jle
push
sbb
mov
pop
imul
adc
inc
mov
mov
cmpb
mov
ljmp
mov
adc
leave
cmp
mov
stos
inc
inc
dec
out
xor
push
push
mov
int3
cmp
pop
pop
loope
movl
add
int3
test
out
push
xchg
mov
arpl
cmpsb
cwtl
mov
mov
cmp
add
or
mov
insb
into
lahf
je
mov
gs
jge
in
ficoms
sub
shrb
in
scas
or
lcall
push
in
mov
sub
pop
stc
adc
push
ret
test
enter
pop
mov
jo
data16
fidivrs
iret
dec
and
dec
data16
xchg
cmp
dec
outsl
in
mov
sub
mov
push
push
xor
push
cmc
dec
mov
into
out
mov
dec
inc
into
fdivs
lahf
xor
test
adcl
scas
and
test
cmp
popa
adc
arpl
mov
mov
mov
adc
sbb
js
sub
cmpsl
jmp
push
mov
sub
je
loopne
add
scas
cmp
push
cld
xchg
lret
mov
daa
stos
cmp
fldcw
jle
push
test
jne
adc
and
daa
fwait
mov
mov
add
rcrb
outsl
and
aas
cli
scas
pop
xchg
int3
jle
leave
daa
repnz
pop
dec
movsb
inc
mov
nop
sub
inc
jp
popa
mov
imul
lahf
or
gs
imull
sub
bound
jnp
sub
scas
imul
push
xchg
ds
sub
das
test
test
rcll
and
lock
lahf
rorl
lcall
rolb
loope
push
dec
lcall
jbe
ds
xchg
mov
lods
movsb
mov
fbld
ds
jmp
out
cmpsb
xchg
aaa
cmp
les
je
xchg
insl
inc
pop
arpl
pop
insl
cmp
dec
cmp
adc
jp
outsl
inc
outsb
and
mov
data16
xor
adc
popf
dec
add
dec
scas
lea
sbb
mov
and
and
jmp
xchg
ret
mov
push
stos
dec
sbb
mov
mov
out
movsb
ficoml
mov
aas
dec
lea
std
jmp
sarl
dec
add
cmp
mov
mov
sbb
imul
das
add
aaa
fldenv
xchg
inc
add
pop
xchg
data16
mov
mov
out
fisubrs
daa
shrl
loop
pop
jbe
lea
gs
pop
jae
sarl
lahf
xchg
lock
test
cmpb
adc
jmp
cmp
add
jg
popf
jmp
cmpl
cmp
push
pop
mov
inc
mov
xor
test
popa
lret
mov
icebp
mov
and
cld
js
dec
mov
inc
mov
icebp
leave
jp
int
push
jnp
pusha
jl
fidivrs
or
dec
cwtl
je
mov
ret
aam
xor
add
pop
adc
out
push
popa
testb
in
fbld
iret
or
cmp
adc
sbb
add
rcrb
cld
mov
gs
mov
scas
mov
push
push
and
imul
dec
and
and
movl
sarb
xchg
sub
cltd
test
cmp
aaa
cltd
mov
sbb
push
mov
mov
andl
addr16
jge
fldenv
ret
test
dec
test
and
daa
dec
in
stc
xlat
mov
adc
xchg
jle
sbb
and
push
inc
lcall
pop
cltd
adc
stc
inc
cmp
add
dec
mov
data16
lods
mov
lds
inc
fisubl
insl
push
cmp
jo
pusha
mov
jns
js
inc
aas
cmp
add
mov
sub
mov
xchg
popa
mov
push
cmpsb
lret
je
sub
lds
or
inc
stos
loopne
mov
xchg
dec
jno
dec
push
add
lret
mov
rolb
pop
out
add
cltd
test
push
int
stos
jae
cmp
push
dec
push
inc
lcall
cwtl
pop
sub
leave
ret
das
xorl
aad
mov
mov
mov
sbb
mov
sub
fildl
pop
in
notl
shlb
jns
push
insb
inc
xlat
scas
shrl
inc
rolb
adc
and
xchg
rclb
cmp
cwtl
sub
daa
mov
xor
jb
mov
cwtl
pop
mov
fcoml
cmc
insl
jl
jb
fs
jo
aas
loopne
lds
add
fmul
aam
sahf
jmp
dec
scas
fld1
lcall
mov
sbb
push
data16
push
mov
mov
jp
mov
idiv
jno
lods
jp
ds
jge,pt
push
sub
cmp
sub
xor
test
leave
mov
xchg
or
sbb
lods
mov
cmpsl
ss
test
mov
xchg
leave
mov
sti
xchg
adc
popf
xor
sbb
add
sub
mov
add
paddd
ja
jo
sbbl
pop
clc
mov
enter
pop
pop
call
int
mov
push
jno
jp
xchg
insb
aam
test
fwait
lcall
mov
sub
mov
pushf
xchg
push
out
sbb
cmp
std
adcb
push
insl
imul
cmp
ficoml
nop
jecxz
xchg
es
mov
xlat
or
out
in
cmp
ficoml
insb
loop
out
mov
or
pushf
inc
in
add
divl
mov
add
scas
insb
hlt
mov
faddl
and
and
repz
out
dec
cmc
vpand
cmc
and
shrb
mov
pusha
into
decb
sbbl
test
xchg
cwtl
lods
fisubrs
jmp
aaa
mov
outsb
dec
les
jb
aad
inc
and
mov
mov
pushf
in
adc
icebp
sbb
mov
fldl
sub
xchg
fs
out
sti
push
cmpsb
lds
neg
daa
ja
lock
pop
orl
xor
sarb
sub
aaa
inc
push
fcmovu
mov
ja
mov
addr16
add
in
decl
add
fildl
scas
mov
xchg
jge
cmp
movsb
lock
sarl
lods
xor
pop
das
xchg
and
xchg
in
add
mov
push
outsl
lock
clc
dec
push
xchg
outsl
inc
rcrl
mov
sbb
sub
jg
ljmp
pop
jecxz
test
push
cs
and
cmp
adc
cli
push
stos
push
xor
scas
pushf
xor
rolb
pop
mov
push
inc
movsl
push
xchg
push
sub
push
pop
lods
pop
sar
daa
mov
push
or
orb
aad
inc
test
jne
dec
jg
lret
icebp
xchg
fldt
push
repz
scas
push
rcrb
adc
stc
xchg
icebp
mov
cmp
adc
mov
jo
cmc
adc
out
pusha
fiadds
sub
push
rorb
dec
push
into
rcrl
mov
sub
xchg
clc
push
mov
push
mov
adc
and
adc
mov
andl
xchg
pop
mov
pop
jg
les
cmp
push
sub
subl
inc
jg
adc
movsb
add
or
ljmp
push
push
mov
xchg
fisttpll
xor
test
out
mov
cld
jnp
ficomps
inc
in
out
enter
pop
push
adc
mov
jo
out
push
loope
pusha
imul
push
lahf
cwtl
cmpsl
jns
les
dec
push
shrl
sti
bound
mull
test
imul
sub
mov
loop
mov
add
mov
xchg
pop
in
dec
movsb
dec
cmp
xor
and
inc
xor
repz
daa
stos
xlat
fsubr
cmp
jo
xchg
outsb
popf
add
jl
xchg
js
leave
push
ds
mov
jne
xchg
mov
mov
cmp
jns
lods
test
in
pop
sti
and
sarb
dec
js
sub
jp
int3
jb
jae
mov
ds
vcvtsd2ss
inc
sahf
shrb
xchg
push
outsl
xor
bound
clc
jno
push
xor
push
lds
cld
pop
repnz
in
jo
loopne
ds
sbb
jnp
lcall
jmp
stos
sbbb
jno
sti
mov
mov
cmp
aad
mov
mov
rcrl
fistl
pop
push
repnz
adc
fcmovnb
and
mov
sub
mov
or
cwtl
mov
xchg
mov
mov
pop
mov
adc
and
cmpsl
push
jle
mov
nop
das
xor
lahf
stos
xor
aam
pop
cmpsb
aaa
adc
xor
mov
jmp
je
inc
ljmp
loope
and
out
test
pop
mov
push
mov
stos
enter
lret
push
adc
sbb
fcomps
xchg
inc
xor
jecxz
rorb
std
push
shl
out
xchg
add
mov
jne
out
lret
insl
mov
mov
mov
xchg
arpl
movsl
mov
aad
mov
adc
cmovne
mov
aam
add
pop
mov
scas
push
dec
xchg
mov
jb
ret
int
mov
ret
inc
push
jns
and
fnsave
iret
mov
lret
xchg
dec
pop
jmp
arpl
cmpsl
inc
sahf
or
xor
pop
gs
and
dec
cmpsl
in
dec
push
adc
or
imul
pop
ret
inc
leave
jle
int3
mov
mov
and
jbe
cmp
icebp
adc
xor
jge
fwait
cs
sbb
push
cmp
pushf
ss
test
push
add
outsl
or
pop
cmp
movsl
nop
outsl
daa
mov
xor
inc
jb
inc
mov
or
outsl
pop
pop
push
mov
cmp
aam
popl
add
xchg
lcall
hlt
ret
jns
out
daa
or
pop
shrl
mov
mov
xchg
setle
xor
push
dec
ret
in
in
adc
fstpt
pop
inc
xor
movsl
jg
mov
push
mov
out
rol
xorl
push
imul
ret
divl
idivb
orl
rorl
pop
inc
xchg
rclb
push
lcall
repz
movsb
aad
movb
or
aaa
lods
sbb
adc
cli
sbb
enter
xchg
mov
pop
cmpsb
push
rolb
push
stos
pop
aad
push
xor
addb
jge
xchg
sbb
lods
jge
sub
cmp
cmp
pop
jns
mov
cwtl
pop
push
jbe
xorb
inc
sub
xor
xlat
inc
inc
xor
clc
inc
jbe
mov
clc
loop
pop
xor
jge
lahf
mov
push
adc
mov
test
pushf
cmp
pop
fwait
addb
mov
ret
ds
mov
outsl
xchg
dec
jno
ja
pop
jnp
je
stos
push
mov
lahf
jns
sarl
stos
sbb
out
or
lea
mov
out
repnz
sub
push
aas
or
test
mov
inc
mov
lock
adc
pop
inc
mov
sub
mov
jg
fsubp
icebp
xor
lret
cmpsl
add
push
mov
and
imul
mov
jl
mov
arpl
cld
and
gs
and
push
cmp
mov
pop
or
jmp
dec
jg
push
in
aad
mov
fwait
imul
push
ss
inc
mov
sub
fisubrs
aad
imul
and
int3
scas
or
repz
fists
jp
mov
add
jg
xor
insl
or
jno
jnp
xchg
jb
dec
iret
shlb
cmc
sbb
mov
cwtl
stos
fnstsw
mov
mov
mov
mov
sub
out
mov
add
les
mov
adc
pushf
fwait
sbb
xor
sub
lods
rolb
fs
popf
push
and
jmp
loop
int
adc
mov
enter
outsl
mov
mov
js
out
inc
dec
aam
mov
sbb
loopne
jg
scas
jp
dec
rcrb
data16
gs
dec
nop
mov
and
dec
out
decb
mov
xor
aas
cmp
push
lea
aaa
cmp
xchg
into
imul
add
cmp
lock
inc
lret
daa
movsl
cmpsb
loope
fdivrs
repz
jmp
or
test
cmp
mov
push
cmpsb
ficoml
adc
lahf
enter
mov
lds
call
jns
push
push
imul
dec
shlb
mov
movsl
mov
fsubs
sbb
mov
xchg
call
mov
rcl
add
leave
sub
mov
mov
les
sub
pop
enter
xor
daa
mov
testw
xchg
mov
clc
or
sub
xor
roll
les
mov
or
push
scas
push
call
cmp
fs
jl
mov
mov
or
stos
stos
lds
mov
getsec
pop
cltd
movb
and
xlat
push
je
shrb
push
aaa
stos
repnz
mov
jns
add
cmp
pop
cmp
push
inc
push
fldcw
pop
sbb
inc
jno
xor
and
cwtl
mov
and
mov
punpcklwd
aas
jne
pop
iret
xchg
cmpb
cmp
push
sbb
pop
push
outsb
push
call
mov
notl
popa
repnz
mov
cs
xchg
jae
daa
out
jle
add
push
rorl
lock
mul
and
xchg
xchg
jno
popf
xchg
jb
repz
call
pop
loope
push
pop
daa
mov
movsb
int
cmp
mov
xchg
pop
mov
lret
mov
xchg
jge
mov
repz
inc
fdivs
std
or
xchg
mov
and
jne
shl
out
mov
pop
xlat
xchg
scas
adc
int
adc
fisubs
mov
mov
cmp
test
add
ss
add
inc
sti
out
cmp
jmp
pop
pcmpeqb
mov
add
mov
and
into
iret
es
test
jle
lds
cltd
lret
mov
mov
jb
pop
nop
mov
adc
jo
add
into
pop
pushaw
adc
out
leave
enter
dec
mov
mov
pop
lds
insl
jmp
jnp
test
dec
or
mov
idiv
inc
jnp
insb
sahf
ss
inc
jnp
sarl
jge
jmp
nop
jg
insl
insb
cli
xor
mov
jno
sub
icebp
cmpsb
xor
test
lock
push
push
push
xchg
jbe
cmp
in
jnp
adc
call
or
enter
enter
sbb
xchg
fiadds
orb
adc
and
into
jl
jne
or
or
insl
jge
sbb
xor
loope
fstpt
loopne
inc
inc
xchg
ljmp
push
xor
stc
jl
cmpsl
sbb
lahf
insl
ja
and
inc
inc
daa
std
push
fxch
add
enter
inc
lock
das
movsl
int
lret
xchg
xchg
dec
mov
inc
popf
jns
jns
test
cmp
sahf
cmp
mov
mov
cmpsl
cmp
bound
bound
cwtl
sbb
cmp
push
mov
and
lds
jle
mov
in
jmp
xor
sahf
sub
xchg
mov
rorb
iret
mov
adc
mov
jns
lods
xor
xlat
inc
jnp,pn
cwtl
sub
loope
out
cltd
leave
inc
push
lcall
je
add
ficoms
sbb
mov
stc
mov
fisubrl
inc
dec
jns
pop
sub
in
pop
lds
add
xchg
nop
and
aad
test
mov
rol
insl
gs
mov
mov
shll
jo
lret
jmp
sbb
jnp
cmovbe
pushf
cmp
jns
mov
outsb
jle
cmp
xor
sti
dec
or
xchg
lcall
outsl
inc
fxch
insb
call
inc
xchg
out
mov
cwtl
sub
icebp
dec
filds
cmp
or
inc
clc
pop
fs
lea
cmp
mov
scas
push
sub
mov
iret
lret
loopne
xchg
stos
outsb
nop
fildll
sti
js
sbb
roll
into
aas
outsl
aaa
push
cmp
cmp
scas
sub
sbb
inc
add
sbb
lods
dec
pop
clc
jg
bound
fsubrs
test
fnsave
iret
loopne
dec
enter
fists
ret
hlt
andl
sub
cli
sbb
lock
push
or
imul
cmc
xlat
mov
inc
stos
mov
pop
xchg
lds
xchg
push
or
sbb
dec
adc
push
in
negb
lret
add
mov
xchg
pop
jcxz
fisttpl
inc
adc
gs
mov
add
daa
lahf
jmp
push
loopne
cld
push
sbb
cld
pop
ja
push
andl
ljmp
jmp
movsb
jg
adc
ret
or
adc
and
jne
jb
push
jbe
sbb
xor
jp
sbb
and
adc
adc
lods
xchg
repnz
fs
fwait
sahf
add
movsl
dec
dec
push
add
stos
xchg
push
lret
jae
repnz
inc
dec
test
pushf
xor
pop
dec
aaa
lds
iret
cmp
lret
fcmovb
cmc
jecxz
es
cmp
stc
aam
imul
push
mov
jl
jne
pop
mov
insb
adc
mov
mov
jle
mov
js
lods
das
or
add
pop
xchg
lret
into
clc
cmp
imul
dec
jp
cwtl
mov
pop
fnstsw
push
ret
cwtl
sub
sti
ss
sbbb
sub
lret
mov
mov
jnp
std
jbe
or
jl
push
test
pop
dec
sub
push
push
stos
xchg
cmp
lret
pop
push
jge
inc
cmp
mov
jp
cli
sti
jge
lcall
ss
clc
sbb
in
pop
aad
jecxz
and
inc
add
dec
lahf
sub
es
loope
out
jg
sub
xchg
shlb
loop
mov
inc
cmpsb
mov
inc
sbb
stos
aas
insb
mov
or
or
push
jne
mov
lea
fistl
test
sub
mov
jbe
ss
in
pop
mov
int3
aad
je
lods
fistps
or
sti
sbb
dec
mov
push
test
jmp
or
mov
aaa
addl
mov
inc
sarb
xchg
pop
into
sbb
cmc
mov
pop
aam
lds
fs
out
int3
add
mov
outsb
sub
test
inc
mov
xlat
fldcw
push
in
clc
fiadds
jle
sub
jmp
jb
shll
ljmp
popa
push
cmp
inc
mov
iret
das
xchg
push
enter
clc
sub
push
and
divl
push
sub
das
div
rolb
outsl
fistpl
test
mov
inc
scas
dec
xor
pop
pop
popf
cltd
xchg
cmc
cmp
rcl
pusha
les
jge
xchg
mov
mov
inc
jne
push
sbb
es
xchg
cwtl
sbb
push
adc
test
jmp
or
sbb
jmp
sub
pushf
clc
inc
aad
stos
bound
xchg
jb
pop
enter
adcl
imul
loope
repnz
lds
popa
jne
xchg
jbe
pop
and
test
push
pop
imul
insb
shlb
daa
xchg
pop
aaa
sbb
pusha
pop
dec
aaa
push
and
pop
sbb
out
aad
adc
sti
sbb
sub
into
pop
sub
dec
out
dec
jecxz
sbbl
mov
dec
stos
sbb
fcmovnb
pop
push
cwtl
and
inc
or
mov
aam
rcll
lret
pop
ret
mov
ret
add
out
jns
ret
test
sarb
xchg
pop
sub
mov
out
aad
push
mov
int
push
cmp
sahf
adc
cmc
sbb
notl
outsb
cs
cld
add
jle
gs
popa
ss
lcall
cmp
and
cmp
sub
inc
pop
ss
fisubs
jg
int3
mov
mov
sub
aad
lcall
push
je
xchg
repnz
mov
lods
adc
push
pop
add
xchg
and
sub
mov
mov
bound
sbb
pop
add
pop
xor
sub
sub
repz
sub
sub
xchg
cmp
and
fdivrl
sub
out
shrl
iret
je
push
sub
jle
es
dec
push
inc
lds
test
dec
cld
adc
in
outsb
scas
outsb
sbb
and
pop
jbe
shl
mov
mov
jle
test
andb
sbb
xor
push
popf
and
sti
mov
lods
sub
lds
xor
lea
imul
or
dec
or
iret
pop
sbb
je
mov
jno
sbb
repz
aaa
sub
push
call
inc
sub
in
fsubs
mov
add
or
arpl
aad
cwtl
fdivrp
mov
or
mov
dec
gs
sub
dec
sti
daa
pop
sbb
mov
int
push
pop
dec
or
pop
je
std
gs
xor
loopne
add
lea
outsb
jle
xor
sahf
dec
sbb
adc
daa
and
repnz
pop
pop
imul
ret
adc
sub
loop
xchg
jmp
dec
pop
popa
loope
lret
jo
push
aad
pushf
sbb
sbbl
and
xorw
addr16
in
stos
pop
cli
push
fldt
mov
jnp
jp
lods
pop
call
stos
fmul
xchg
pop
jbe
cmp
jbe
or
mov
add
fnstsw
lcallw
xor
xor
imul
cmp
adc
ror
sbb
add
cmp
jne
daa
cmc
ds
lock
in
mulb
nop
addr16
lock
xchg
out
and
mov
mov
clc
sub
jno
mull
popa
mov
mov
insb
push
fs
daa
cs
lds
sub
inc
pop
dec
cmpsl
dec
jnp
popa
lock
pushf
or
lret
and
mov
xchg
aas
popf
add
cs
inc
outsb
movsl
into
pop
mov
bound
fdivl
push
decl
lahf
aas
adc
push
loopne
mov
std
or
jo
xchg
dec
jp
popf
outsb
pop
neg
aas
xor
sbb
or
cmc
ja
add
cmp
adc
cmp
xstore-rng
cmpsl
add
and
jns
ss
repnz
pop
sbb
xchg
mov
and
and
stos
or
ffree
adc
inc
lds
pop
push
sub
mov
sub
sbb
xor
out
xor
iret
addb
fninit
cmpsb
mov
cli
out
add
lods
jmp
push
fadds
mov
dec
push
jecxz
dec
cmp
int3
movsl
lds
inc
test
aaa
add
push
divb
outsb
mov
cmp
push
int
out
adc
sbb
cmp
adc
xchg
push
mov
mov
mov
jbe
into
sub
adc
popa
inc
mov
out
add
icebp
scas
cmc
mov
xor
loopne
mov
js
lods
pop
push
sub
ljmp
push
stos
sub
jg
dec
sub
popf
testl
ja
dec
xor
fstpt
inc
stos
adc
and
in
repz
lret
les
inc
xorl
jmp
lock
xchg
sti
sbb
fnstcw
or
cmp
cmp
mov
push
pop
icebp
dec
arpl
popa
cltd
addr16
test
cmc
lcall
jp
shrb
sub
mov
popf
or
mov
lret
dec
mov
mov
mov
loope
mov
fldt
xor
cltd
jg
cld
call
sub
or
push
push
mov
mov
xchg
sub
fnstcw
mov
pop
data16
ret
outsl
xor
movsb
fld
daa
sub
pop
insb
mov
dec
movsb
cmp
lahf
pop
aam
in
pop
nop
xor
fnstsw
call
xlat
imul
and
mov
jnp
ljmp
js
sbb
or
jno
imul
int
add
das
dec
rcll
jmp
pop
and
daa
aaa
shrb
adc
pop
enter
mov
mov
inc
jb
arpl
push
mov
ret
push
popf
mov
pop
lods
pop
push
decl
iret
inc
xor
add
push
and
cmp
lahf
and
test
loopne
enter
mov
push
call
or
mov
addr16
pop
call
mov
mov
mov
xlat
add
push
cmp
lds
ror
jno
in
and
sarl
pop
les
insb
flds
popa
stos
pop
sub
repnz
fiadds
mov
sub
jp
push
lock
pop
mov
inc
jo
data16
adc
in
push
add
inc
fldpi
js
mov
sub
xchg
popf
dec
nop
push
xor
stos
xor
cmp
xor
daa
xchg
add
mov
in
shll
mov
addl
stos
inc
pop
jbe
movsl
xor
dec
mov
les
xchg
push
gs
cmp
pop
xor
aad
in
out
jecxz
or
jnp
push
mov
or
inc
and
stos
xchg
xor
sbb
mov
in
lret
negl
je
je
sub
adc
jp
sub
or
faddp
pop
dec
ds
push
mov
popf
and
xor
add
repnz
pop
shl
inc
sbb
outsl
or
sbb
push
dec
adc
xor
cmpsb
mov
xchg
xor
pop
dec
aad
or
bound
out
and
aad
and
push
rclb
jle
je
cmp
pop
sub
lahf
jle
ss
leave
jb
jnp
mov
dec
xchg
sbb
mov
fstpl
mov
cld
inc
fwait
inc
stc
loope
push
cmpl
fs
mov
outsb
out
push
pusha
in
jbe
inc
pushf
movsb
mov
xchg
cmp
in
popa
popa
sbb
lret
or
inc
sbb
fsubp
cwtl
fstps
pusha
jl
rcrb
add
imul
roll
mov
xchg
adc
mov
push
lock
push
lcall
add
sub
pop
or
xor
lcall
clc
inc
ljmp
jo
out
ret
push
add
scas
xor
lea
or
pop
mov
je
mov
loopne
es
stos
orb
push
fnstsw
lods
cltd
sbbb
hlt
pop
pop
fsubl
ret
shrb
pop
punpckhwd
sbb
xchg
daa
pop
cmp
pushf
mov
in
xorl
ffree
leave
or
sub
sub
push
std
xor
push
ret
pop
or
jg
push
xor
xor
inc
sub
sub
test
mov
jnp
jmp
mov
sahf
sub
push
int
loopne
inc
jp
xchg
sbb
cmp
out
int3
xchg
dec
loopne
add
xchg
aas
pushf
cld
mov
or
cltd
dec
inc
pop
cmpb
js
mov
cmpsl
stos
push
mov
lcall
std
je
int
insl
stos
imul
sti
stos
in
daa
mov
cs
push
aas
dec
aad
ret
aas
adc
jne
in
pop
js
cld
and
inc
mov
imul
data16
fildll
jne
push
sbb
ljmp
arpl
lea
jnp
jbe
sbb
sbbb
jns
ss
jbe
and
test
sub
push
js
sbb
push
clc
shll
daa
imul
fdivl
cwtl
mov
push
enter
int3
dec
ret
jl
icebp
mov
pop
xchg
jge
lret
jno
inc
adc
lods
dec
push
lods
test
adc
iret
rcl
shll
jnp
mov
inc
in
push
fs
ljmp
mov
popa
inc
mov
mov
cmpsb
pop
mov
xchg
fsubs
xor
or
enter
adc
mov
lea
lret
jecxz
mov
pushf
xchg
ss
movsl
mov
cmpsl
rcll
mov
and
sbb
and
and
xchg
stos
enter
js
int
sbb
lods
imul
pop
shrb
and
pop
push
xchg
jne
ss
in
cmp
cmpsb
aad
or
sub
fxch
cmpsl
mov
sub
push
mov
jb
cmp
sahf
test
xlat
push
movb
lock
pop
jno
movsb
mov
hlt
xchg
sbb
ret
mov
or
mov
filds
add
mov
lret
inc
aam
add
test
and
cmpsb
adc
jne
sub
push
mov
out
call
repz
xchg
dec
cmp
clc
pop
call
movsb
pop
sbb
les
cld
dec
sub
loope
and
mov
push
loop
xchg
in
les
shrl
fidivrs
push
mov
xchg
icebp
stc
mov
ss
insb
pop
jp
pop
sarl
shl
jnp
rclb
xchg
pop
xor
or
push
cmp
int
das
in
aas
sbb
repnz
cmp
out
adcb
sti
divb
data16
jb
push
xchg
mov
mov
ljmp
out
insb
stos
mov
aas
mov
lods
dec
ret
popl
repnz
movb
repz
jno
popa
and
aam
jno
cmp
cmpsl
icebp
sahf
xor
movsl
xor
les
out
mov
jne
jecxz
push
mov
scas
jg
in
repz
jo
out
lods
in
int3
fcoms
jbe
fiaddl
sbb
jle
pop
xchg
jmp
scas
sub
fwait
mov
imul
pusha
mov
in
imul
xor
adc
nop
cld
scas
pusha
fwait
adc
mov
mov
lret
pop
pusha
sbb
fmul
je
pop
into
pop
add
cmp
xchg
xor
pop
xchg
cmp
fistpll
aad
inc
cmp
xchg
inc
xchg
cld
push
ljmp
scas
sbb
inc
testb
call
sbb
aaa
push
aad
mov
rol
jo
push
xchg
hlt
push
lock
push
jmp
sub
push
xchg
fbstp
into
pusha
mov
imul
push
ret
test
cmp
adc
aas
pop
hlt
aad
gs
hlt
outsl
cmpsl
mov
data16
xor
insl
ss
add
add
sti
testl
cs
add
enter
outsl
ret
lret
or
cmpsl
rcll
mov
xor
mov
pop
sbb
sbb
sbb
aad
and
testb
shll
add
outsb
mov
lods
clc
inc
inc
mov
xchg
lods
dec
push
mov
push
mov
and
imul
inc
mov
popf
into
jbe
sub
cltd
xor
sbb
and
or
pop
movsl
mov
xorl
jge
add
pop
adc
test
and
repnz
test
icebp
cld
in
test
cltd
or
sbb
lcall
adc
fmulp
sub
lea
and
cmp
ja
inc
jbe
loopne
scas
inc
cmpsl
jbe
cmp
jnp
ret
adc
xchg
push
add
je
popf
jle
xor
lret
je
cmp
lea
pop
ret
int3
mov
ds
cli
jg
inc
fsubrs
jmp
mov
in
in
pop
test
mov
clc
lock
popa
rcrl
xchg
pop
es
mov
jns
imul
pop
cmp
adc
sub
adc
mov
fs
add
add
ds
jmp
push
and
jns
adc
push
int3
cld
adc
fmull
push
add
xor
jae
js
int3
push
gs
das
xor
jnp
subb
mov
dec
pop
test
mov
addr16
mov
add
pop
xchg
lcall
mov
cwtl
ficomps
jne
into
pop
push
mov
repz
xchg
ficoms
inc
loopne
dec
pop
xchg
pop
or
mov
mov
jno
xor
push
insl
sbb
sarb
mov
adc
mov
adc
cmp
iret
lret
bound
xor
jge
in
add
rcr
mov
xchg
inc
ja
push
jo
pop
push
xor
jns
adcb
push
and
jmp
insl
daa
add
loop
pop
leave
loop
and
dec
adc
jbe
or
out
lock
or
adc
push
ljmp
or
jp
or
jne
add
mov
fisttpl
ret
test
add
pop
clc
imul
lods
out
jge
arpl
push
mov
hlt
or
pusha
lret
xchg
jmp
in
or
subb
jp
lahf
xchg
je
incb
sbb
lret
fnstcw
inc
arpl
cltd
jbe
cwtl
mov
jmp
or
sub
inc
push
inc
fisubl
mov
call
enter
inc
jg
stos
or
dec
jo
cmp
jle
jmp
mov
imul
push
jbe
mov
pop
add
sub
imulb
rol
mov
mov
jle
add
xchg
ret
push
std
aam
test
cmp
pop
lea
inc
lods
addr16
adc
push
mov
jmp
and
rol
adc
icebp
das
mov
rclb
test
jns
shll
insb
push
lods
icebp
sbb
test
rolb
pop
push
into
jl
call
pop
scas
pop
xchg
rolb
mov
movsl
scas
or
push
cmp
push
daa
je
notb
int3
xor
inc
jmp
dec
movsl
pop
int3
adc
test
daa
pushl
xor
sub
jns
inc
add
and
mov
cmpsl
and
jl
int
jp
or
inc
jmp
sbb
sbb
inc
xor
xor
or
lods
cmpsl
jae
dec
mov
shlb
or
jp
inc
rcl
add
adc
push
and
inc
lods
add
lret
push
sub
jae
fistpll
fmul
or
xlat
add
adc
jb
sbb
jg,pn
cli
jno
jb
test
inc
xchg
cmp
pop
push
add
sbb
popa
push
push
lods
clc
xlat
jp
test
pop
popf
in
add
rclb
jbe
mul
out
or
inc
pusha
push
popf
mov
dec
xor
insb
aaa
xchg
xchg
or
xor
mov
pop
cwtl
jmp
pop
dec
in
dec
sbb
xchg
and
adc
pop
add
xor
sti
or
cwtl
aad
mov
cs
sbb
out
outsl
call
pop
out
incb
dec
int3
pop
xchg
negl
pop
jge
add
pop
jle
adc
sub
jp
xchg
shll
test
pop
imul
movb
xor
pushf
dec
sbb
test
jg
and
jmp
pop
adc
add
cmp
mov
arpl
sub
out
add
scas
inc
mov
in
addl
inc
in
fadds
xchg
mov
cmp
lds
fldenv
jmp
mov
mov
inc
loopne
sbb
out
or
cmp
and
mov
inc
in
fs
mov
inc
int3
mov
orb
mov
int
mov
fisubl
cmp
mov
mov
mov
mov
roll
push
or
xor
adc
dec
aas
ja
jne
mov
mov
mov
arpl
jl
adcb
dec
sbb
and
cld
jge
cwtl
movsb
pop
insl
mov
mov
arpl
sbb
adc
stos
mov
lock
mov
movsl
cmp
pop
and
imul
push
jbe
jbe
nop
test
hlt
and
jbe
adc
clc
jge
idivl
rol
sbb
jns
rolb
push
sbb
clc
in
mov
nop
mov
pop
or
add
jae
leave
jns
arpl
test
repz
or
stc
mov
inc
test
aad
adc
xchg
gs
imul
ror
inc
dec
pop
mov
xlat
xchg
rcl
imul
out
cmp
lea
rcrl
int
xor
mov
das
outsl
push
leave
in
cmc
jl
sbb
or
jmp
inc
jns
jae
ficoml
and
fsubr
sbb
push
cmp
aaa
jbe
xchg
sbb
aaa
xchg
and
insl
mov
push
xchg
sub
fdiv
stos
aad
cmp
aaa
mov
pop
dec
sub
cltd
orb
scas
std
sub
test
mov
icebp
fwait
testl
enter
xor
pop
or
and
lahf
push
mov
xor
dec
add
mov
test
sbbb
push
and
mov
xchg
jae
sbb
mov
mov
adc
test
push
std
pop
bound
rcr
sar
dec
inc
jp
mov
push
add
cmc
jb
push
test
push
insl
mov
cmp
jge
inc
xor
in
adc
xor
fmuls
xlat
cmp
rol
mov
ret
sub
dec
orl
imul
fidivrs
adc
dec
lea
cmc
scas
jne
lds
add
mov
je
inc
popa
and
fistpl
lret
lea
hlt
imul
dec
adc
rolb
gs
notl
dec
adc
or
es
aaa
jnp
xlat
sub
fbstp
adc
std
adc
inc
ja
mov
ret
lcall
adc
cld
fwait
in
add
bound
int3
dec
dec
sbb
inc
mov
fcmovnbe
test
rcrb
pop
das
repnz
sub
xchg
push
or
js,pn
adc
ret
jo
dec
out
shll
push
in
sbb
imul
lcall
flds
lahf
xchg
jae
nop
mov
xchg
jmp
xor
rcrl
mov
sub
imull
xchg
jle
jmp
ret
adc
incb
inc
pop
xlat
adc
add
sbb
imul
lea
jl
dec
adc
push
daa
int3
sub
movsb
mov
jnp
xor
lret
dec
testb
mov
add
inc
cmp
imul
push
pushf
and
fs
sbb
repnz
inc
add
jge
pop
in
pusha
and
test
pop
xchg
jmp
adc
stos
jbe
in
popf
ret
jae
movsb
push
pushf
lock
xchg
pop
pushf
cmp
cmp
sbbl
dec
and
repnz
cmp
cs
mov
dec
or
mov
sti
mov
fisubrs
inc
es
loope
mov
js
jo
aas
add
ds
sub
rcrl
es
jg
sbb
orl
and
push
xchg
cs
cmp
pop
mov
jmp
and
jne
es
fisttps
sti
mov
and
and
pop
and
dec
scas
sub
xchg
cli
adcb
ret
dec
movsb
in
inc
mov
stc
test
xchg
push
ret
pop
aas
ficomps
cmp
inc
dec
mov
pop
xor
js
pushf
pushf
popa
js
xorl
sub
sbb
mov
pop
sub
aas
in
add
xlat
and
mov
jns
or
xor
pop
fdivrp
jg
into
fs
test
out
push
jp
xchg
dec
iret
lods
les
ret
call
nop
mov
jg
cvtps2pd
cmp
or
dec
loopne
sub
ficoms
loopne
and
adcl
inc
xchg
and
mov
mov
pop
mov
subl
jo
psraw
sub
sti
repz
test
pushf
mov
incl
dec
sub
imul
mov
add
outsb
and
jg
mov
xchg
lock
in
stos
rclb
es
test
jo
pop
sbb
pushf
inc
int
add
mov
out
adc
or
or
aad
gs
int
enter
popa
test
mov
jp
popf
xchg
mov
mov
xor
jmp
xchg
imul
ss
fsubp
cmp
and
jg
sti
jne
add
jmp
mov
sbb
inc
clc
xor
sbb
mov
and
xorb
jmp
cld
lds
sar
hlt
cmp
inc
pop
pop
ret
sti
or
pop
mov
xor
or
cmp
inc
fsubrs
inc
dec
in
fbstp
fildl
out
ret
imul
repnz
mov
mov
add
add
adc
loopne
and
rclb
jo
ret
repnz
iret
jb
mov
ja
inc
rcrb
sub
in
cltd
cli
das
pop
rcrb
ret
xor
cwtl
mov
out
mul
sbb
leave
mov
push
xlat
mov
xor
jns
fs
mov
dec
cmp
and
loop
mov
xchg
lahf
mov
dec
imul
cmp
xchg
lcall
and
fistps
mov
dec
sti
lret
ret
out
push
cmp
and
cwtl
sar
inc
inc
xchg
push
xchg
add
je
adc
and
jno
or
imul
fnstsw
je
cmpsb
mov
test
sbb
pushf
sbb
add
sub
lret
cmp
je
sub
cmpsl
stc
push
cwtl
int
mov
xchg
cmp
lahf
mov
adc
sahf
fninit
out
mov
pop
or
jle
xchg
mov
test
outsl
mov
cmp
sub
add
repz
push
mov
inc
jns
inc
int
iret
fwait
ret
fs
adc
pop
pusha
push
xor
add
and
and
leave
mov
mov
jb
int3
sbb
hlt
add
add
pop
xor
xlat
or
cld
jl
dec
test
cmp
inc
sbb
cmp
in
cmp
inc
shr
ret
dec
inc
pop
sub
lret
mov
cmc
mulb
inc
push
es
out
sbb
loope
stos
in
sub
mov
js
imull
sub
popf
out
jne
lea
xchg
sbb
mov
bound
xor
inc
sbb
jnp
inc
pop
add
shrl
xor
or
jae
aaa
std
inc
lods
repnz
jle
ds
mov
dec
test
cmpsl
lret
jae
cmp
mov
cmp
aas
addr16
jbe
movsl
ss
and
nop
cmp
xor
jo
insl
stc
or
mov
jecxz
cmp
mov
inc
mov
addr16
lcall
enter
outsb
test
jo
inc
mov
dec
pusha
and
out
test
dec
mov
mov
push
inc
stos
jae
pop
adc
push
mov
push
stos
xor
lods
sbb
int
test
cmpsb
jae
push
push
fdivl
aad
scas
pop
imul
mov
je
adc
in
adc
sti
xchg
push
cli
test
ss
dec
cmp
jo
push
mov
xchg
out
jb
roll
call
dec
nop
sbb
stc
popa
jle
sbb
out
xor
inc
iret
sbb
push
push
repnz
fcompl
add
les
adc
mov
xchg
repz
icebp
out
xor
out
bound
in
xor
or
mov
xor
push
jmp
pusha
adc
dec
cmp
cwtl
int3
aas
mov
xchg
stos
push
xchg
das
pop
mov
in
pop
push
cmp
sarl
jge
xchg
out
jnp
dec
push
mov
add
and
mov
out
cmpsb
dec
mov
jle
jge
mov
out
cmp
jecxz
lret
mov
fcomi
test
dec
hlt
pop
idivl
push
mov
cmp
push
loopne
aam
xchg
stc
je
cld
jp
jmp
or
sbb
cmp
push
lds
imul
popa
sbb
mov
xor
arpl
xchg
pushf
clc
inc
xlat
dec
out
jp
xchg
loopne
sahf
fs
or
ss
adc
fs
mov
inc
js
popa
mov
es
lret
and
xchg
jmp
xor
and
aad
adc
jo
test
sti
mov
pop
mov
imul
or
xor
dec
xor
sbb
xor
push
aaa
adc
ret
adc
pusha
popa
mov
mov
push
or
insl
mov
or
inc
rorl
mov
movsl
push
xor
or
mov
data16
jno
jecxz
mov
fninit
aad
push
dec
jnp
sub
cmp
cmc
dec
push
xor
or
sub
fwait
xchg
or
lret
and
inc
ljmp
and
adc
loope
push
sub
dec
cs
popa
cmp
rcrb
and
and
mov
lea
mov
call
jae
or
dec
in
stos
into
mov
and
xorl
nop
dec
sub
xlat
mov
stos
xor
out
xlat
fldcw
sbb
in
fdivl
ret
fnstsw
fdivr
sub
or
fwait
out
in
adc
and
jge
fdivr
xor
bound
jns
gs
shll
inc
jnp
mov
sbb
sbb
fbld
es
sbb
int3
or
jp
adc
jmp
lds
mov
repz
xchg
adc
outsl
pop
out
sbb
das
push
xchg
cmc
out
rcll
fcompl
notl
and
and
insl
jg
lea
dec
ljmp
leave
mov
iret
push
and
outsl
popa
repz
cwtl
inc
cmp
sub
fisubrl
lcall
dec
dec
mov
shl
mov
cltd
or
mov
and
jae
xor
mov
loopne
movsl
inc
out
mov
aad
pop
mov
mov
shrl
js
popf
adc
push
adc
daa
test
lcall
xor
mov
push
inc
jne
insl
pushf
mov
add
je
dec
add
jns
jle
rcll
push
dec
cmpsl
cwtl
fadd
push
adc
mov
dec
mov
addb
scas
pop
and
jmp
pop
pusha
or
pop
jae
out
jp
stos
or
xor
jbe
test
and
pop
add
cwtl
mov
out
jle
int
sbb
out
mov
push
daa
imulb
or
sub
inc
xor
xchg
push
xchg
imul
adc
out
xor
cltd
mov
or
ret
dec
sbb
adc
push
mov
cmpsb
test
adc
mov
repz
ret
shlb
scas
or
pop
lock
cmp
loope
hlt
sbb
or
out
jp
idivl
adc
ret
dec
je
sbb
test
mov
xchg
sub
mulb
mov
push
mov
dec
ja
scas
scas
xchg
jb
dec
jge
imul
xchg
imul
cwtl
out
jg
bound
push
or
sahf
or
jnp
mov
bnd
mov
ljmp
xchg
in
lods
into
push
repnz
push
hlt
lea
mov
or
imul
scas
std
fimuls
jo
jp
dec
jl
bound
add
rolb
inc
das
mov
mov
mov
icebp
mov
repz
outsb
push
rcrl
inc
mov
addb
mov
es
in
jae
or
xor
sbb
iret
pop
cmpsb
or
setnp
pop
nop
pop
jp
and
lds
lret
mov
xlat
insl
pop
enter
jl
lahf
stc
fdiv
mov
jecxz
xchg
in
gs
adc
inc
or
jmp
scas
pop
gs
cli
daa
sbbl
cmpsb
into
aad
mov
xor
mov
adc
subb
data16
lret
adc
push
sahf
or
dec
and
sub
xor
mov
clc
or
adc
aam
mov
jne
dec
test
jb
in
push
sbb
sbb
cmp
cmp
lds
lret
out
sbb
push
jl
push
sarl
mov
cmp
push
inc
leave
fistpll
leave
cli
add
lret
sbb
xchg
pop
and
lods
xchg
std
xchg
push
fwait
and
jge
sbbb
ljmp
xor
cmp
pop
xchg
int
loopne
int
mov
lahf
xlat
push
mov
sbb
push
xor
sub
sub
mov
test
dec
loope
fdivp
xchg
xchg
clc
in
testl
add
or
dec
xchg
and
inc
lods
adc
jl
sbb
sbb
iret
xchg
into
mov
sub
xor
test
call
insl
jb
jae
popf
pusha
dec
jbe
lcall
mov
pusha
jb
stos
cld
dec
jecxz
mov
jecxz
in
pop
pop
add
popa
jae
data16
push
adc
mov
mov
je
clc
sub
lock
push
sbb
aam
fcoms
dec
lock
push
cmp
lcall
lret
push
xor
cmpsb
mov
subb
fcomps
inc
adc
pop
sub
adc
adc
inc
pop
sub
pop
dec
adc
push
into
inc
mov
inc
mov
cmc
pop
jl
pop
jne
and
mov
mov
mov
cli
ret
call
fnstenv
loop
fstpl
jbe
sbb
sub
les
out
sub
sub
pop
mov
push
mov
pslld
in
test
or
xor
sahf
stc
cmp
stos
sahf
mov
push
dec
mov
push
rclb
push
iret
mov
mov
jmp
out
cmp
mov
fisubrs
push
rcll
mov
mov
cmpsb
movsb
xchg
add
add
and
jmp
inc
fcmovne
dec
les
jnp
xchg
in
pop
arpl
mov
aam
inc
andb
inc
sahf
pop
add
cmp
shll
ficompl
cmp
sbb
in
shlb
jmp
mov
mov
hlt
pop
mov
popa
and
mov
inc
push
push
adc
loop
or
in
push
int
cwtl
cmp
and
jp
mov
in
xor
insb
adc
dec
or
xchg
out
stos
cmp
lahf
in
test
pop
loope
push
aam
fbld
pop
pushf
and
in
sub
ret
aad
cmp
aas
jnp
push
mov
bound
or
dec
test
xor
popl
jo
add
test
sbbl
sti
xor
stos
mov
pop
xcrypt-ecb
cmpsl
dec
les
sub
push
mov
inc
rcr
hlt
sbb
and
ret
or
pop
sbb
shl
mov
and
push
flds
fldt
in
add
push
fs
and
icebp
mov
rorb
fwait
adc
adc
pop
inc
mov
and
test
or
mov
mov
ret
xlat
ficoml
inc
pop
fwait
sahf
fidivrl
mov
pop
scas
lock
jnp
xchg
mov
cmc
sub
je
sub
sti
push
js
mov
insl
pop
push
add
push
push
and
jae
jmp
stc
mov
mov
lea
ret
jmp
inc
jae
dec
cli
mov
mov
push
adc
xor
aad
arpl
dec
test
test
pop
mov
push
lahf
mov
stos
xchg
xchg
daa
sbb
jne
xor
imul
cmp
ret
popf
fstps
adc
daa
mov
jae
xor
mov
xor
jae
jnp
push
mov
xor
rcl
jge
std
cli
jb
push
jg
test
add
stos
jge
fsubrs
dec
xor
and
dec
sahf
jns
push
adc
movsl
stc
inc
mov
rcrb
stc
popf
popf
adc
xor
and
test
fs
inc
and
and
pop
sbb
cs
xor
pop
aad
xchg
cld
insb
adc
iret
mov
faddl
gs
mov
jg
lock
pop
mov
push
or
imul
jnp
es
in
mov
or
cmpsb
loop
enter
or
push
sub
out
sbb
mov
and
mov
sbb
dec
or
arpl
sbb
inc
adc
movsl
mov
push
mov
mov
xchg
arpl
sbb
sbb
ffree
icebp
hlt
stos
sahf
les
in
rol
jecxz
xor
imul
arpl
push
dec
outsl
pop
xchg
adc
push
push
pop
push
in
xchg
frstor
jbe
imul
cs
andb
fs
into
inc
out
cmp
data16
ss
test
mov
bound
lret
mov
fwait
lret
mov
mov
push
mov
idiv
mov
pop
movsb
cltd
and
cmpb
fstl
adc
call
pop
movsl
dec
xor
jno
cs
test
sub
push
lods
cwtl
sbb
pop
nop
insl
adc
lahf
xor
push
movsl
jns,pt
dec
mov
lahf
mov
cmp
xchg
jnp
mov
scas
jbe
loopne
sbb
mov
int
int3
adc
xchg
push
inc
xor
inc
mov
pop
cmp
test
adc
sbb
xchg
cmp
sub
dec
out
xlat
fidivs
mov
cli
lret
lahf
mov
sbb
jg
ja
in
xor
sbb
iret
ss
pusha
mov
or
lret
outsl
jne
iret
inc
loopne
lret
and
jo
adc
jne
mov
lods
cwtl
xor
fdivs
lods
mov
push
jmp
or
call
mov
jle
lock
mov
pop
mov
sbb
adc
jno
xlat
cli
in
dec
jb
sbb
xor
jo
sub
hlt
mov
xor
mov
adc
and
xor
js
mov
add
rorl
xor
in
xchg
lds
push
idivl
xchg
cmpsb
cmpsb
mov
std
fmulp
out
and
sar
push
popa
or
ret
mov
fsts
nop
dec
jns
jge
inc
jmp
loopne
fmull
notl
ss
xor
lock
jb
std
xor
sbb
mov
fsubl
sti
stos
pop
sub
icebp
dec
inc
fimull
vmulpd
jecxz
popl
jmp
decb
popa
jl
add
add
dec
jnp
int3
mov
repnz
cmp
iret
xor
jo
push
mov
inc
testl
mov
insl
and
mov
int
add
mov
add
dec
out
pop
ret
add
ljmp
mov
test
pop
out
ret
sarb
dec
sahf
outsb
add
mov
mov
out
and
or
imul
cltd
xor
add
pop
in
add
mov
inc
jmp
push
hlt
fstl
push
adc
nop
push
push
or
lcall
lcall
pop
push
sub
inc
xor
nop
lea
push
sub
cmp
sub
push
test
xchg
cld
mov
scas
mov
test
and
jb
rorl
adc
cmp
dec
adc
testb
nop
jmp
push
movsb
cwtl
les
lds
in
dec
push
push
lds
shr
xchg
pop
xchg
jecxz
push
lock
test
and
xchg
push
adc
mov
out
xor
mov
xorl
add
daa
les
lea
jmp
sub
jle
loope
lods
add
and
mov
lea
cmp
ret
adcb
cld
jmp
shrl
and
inc
mov
fs
lahf
xor
pop
pop
ja
push
or
movsb
arpl
icebp
cmp
jb
insb
lcall
aam
mov
iret
lods
jecxz
jne
adc
xchg
stos
adc
jg
fcompl
and
mov
lahf
or
jmp
add
pop
out
and
out
fldt
sbb
js
sbb
imul
adc
and
mov
cld
aas
cmpsl
mov
or
pop
div
ljmp
mov
insb
sti
dec
or
int3
insl
add
cmp
jb
test
icebp
add
jg
xchg
sbb
sub
jae
testb
xchg
cmpsb
sub
into
les
cmp
pop
cmp
shlb
dec
jns
ljmp
jmp
inc
pop
jb
shl
rorb
jbe
push
mov
push
inc
sub
lcall
clc
mov
cli
popf
gs
xchg
loopne
outsb
cwtl
addr16
pusha
dec
dec
xor
dec
dec
testl
les
xchg
pop
push
or
pusha
xchg
pop
sub
mov
push
loope
pusha
adc
add
les
pop
mov
cmp
cmp
xor
sub
mov
loopne
inc
pop
out
adc
lea
clc
rolb
jle
mov
pusha
scas
xchg
loope
mov
fnstenv
cli
jnp
stos
and
push
inc
sub
sub
jmp
enter
xchg
mov
iret
xorl
cmp
cld
lret
std
movsl
mov
inc
xorb
mov
pushf
xor
hlt
dec
mov
in
pop
popf
cmc
dec
cmpb
out
mov
ds
loop
adc
call
push
sahf
xchg
icebp
adc
out
ja
pop
sar
shlb
enter
pop
jbe
inc
sar
std
push
inc
loope
decl
in
cmpsb
or
mov
outsl
es
or
dec
pop
adcl
or
push
xchg
in
mov
leave
outsb
leave
pop
stos
je
pop
pop
mov
mov
sahf
mov
xor
aad
pop
and
cmpsl
push
jnp
dec
add
aam
xchg
cwtl
and
mov
das
pop
pop
jge
mov
pushl
sub
int3
inc
movsl
aam
loopne
lock
cmpsb
sti
cmpsb
fwait
testb
xorb
and
mov
jns
xchg
stos
inc
push
ljmp
mov
cmp
jg
xorb
stos
gs
es
jns
dec
cwtl
adc
pop
add
and
negb
push
outsb
inc
and
push
adc
push
push
sub
mov
mov
enter
xchg
push
and
pop
adc
rcl
js
add
shl
insb
push
movsl
sbb
mov
movsl
ds
out
or
lret
insl
loope
stos
mov
pop
mov
ja
test
xchg
dec
adc
pop
cmp
imul
sub
mov
icebp
cld
push
jo
movsb
xchg
dec
push
fcoms
push
lea
das
jmp
sub
in
xchg
in
mov
mov
push
pop
ja
sub
sar
hlt
daa
sbb
push
mul
inc
je
ror
mov
cli
ret
push
jnp
ret
sbb
icebp
xor
inc
mov
pop
xchg
insb
pop
ficoml
adc
fildl
cmpsl
lds
inc
iret
aaa
mov
push
push
jmp
lret
jl
sbb
and
imul
sub
lahf
sbbb
outsb
fs
faddl
jp
inc
addl
repnz
pop
cmp
cmpsl
push
cmp
lret
mov
pop
and
int3
push
jp
lret
jle
arpl
and
lcall
xchg
add
mov
loopne
add
ljmp
gs
jae
push
mov
mov
sbb
dec
adcl
lcall
lahf
xor
iret
jge
in
sub
subb
lcall
xorb
insl
dec
fnstcw
pusha
mov
ret
lea
jae
cwtl
sub
xchg
add
add
push
jnp
xor
movsl
enter
imulb
mov
jp
adc
test
or
pop
lcall
xchg
jecxz
fisttps
jge
outsl
mov
add
stos
js
ss
aas
add
mov
fcompl
sbb
mov
gs
out
and
fcmove
cmp
nop
or
xchg
hlt
aas
in
lods
sti
std
sbb
jnp
outsb
mov
push
movsl
mov
inc
in
mov
and
inc
mov
jl
cli
jno
mov
pop
and
lods
sub
xchg
cmc
and
rol
cmp
fs
xor
rolb
test
jp
jnp
inc
xor
ret
sbb
adc
add
int3
bound
xor
cmp
popa
xor
outsb
push
xor
jp
adc
mov
and
or
jo
repnz
addr16
ror
popa
shll
cmp
cmp
test
lret
or
jnp
fildll
mov
mov
clc
mov
nop
cmp
lret
and
lcall
push
sub
cmp
imul
cmp
pop
xchg
mov
lock
in
shll
cmp
cmpsl
dec
mov
jb
icebp
jmp
pop
sbbl
enter
int
imul
dec
pop
mov
dec
bnd
push
cmp
hlt
call
push
movsl
cmp
es
push
add
and
add
shrl
mov
sub
lds
mov
fcoms
sbb
pop
jle
rorl
dec
flds
adc
iret
repnz
lret
rcrl
outsb
and
call
hlt
pop
or
xlat
and
mov
adc
jp
mov
push
sub
jnp
xchg
ss
push
int3
lds
inc
out
mov
mov
jle
add
cltd
mov
sahf
popa
mov
push
fimuls
inc
fimull
push
dec
test
psubd
mov
push
insl
push
or
push
push
mov
pop
movsl
fisubl
lods
push
xchg
or
lret
xor
rclb
mov
adc
jb
mov
aad
or
mov
xor
aad
sub
mov
jbe
orl
add
notl
out
add
push
add
or
inc
and
pop
sub
xlat
test
rcr
movsl
int
inc
xchg
clc
sub
jb
and
push
aaa
push
ja
mov
and
xchg
in
mov
mov
ds
mov
int3
addr16
nop
les
sub
jb
in
xchg
lock
sti
pop
in
inc
sarb
pmullw
mov
push
test
mov
addr16
cmp
pop
pop
jne
repz
notl
or
push
aas
scas
xor
lret
jno
dec
outsl
test
adc
cld
insb
mov
sbb
nop
test
adc
mov
loop
jle
pop
push
jo
leave
mov
je
or
pop
rolb
ret
iret
out
pop
ss
nop
in
pop
leave
dec
call
jb
xor
nop
push
mov
popf
lahf
call
jne
inc
aam
or
inc
sbb
shlb
leave
inc
fninit
mov
adc
cli
rorl
ret
xchg
cmc
lcall
adcb
arpl
clc
cmp
mov
adc
pop
stos
inc
js
dec
mov
clc
mov
jo
xor
enter
mov
fidivl
jmp
ss
sbb
pop
stos
sahf
loopne
cmc
bound
loopne
out
testb
jmp
mov
cltd
sbb
and
adc
jnp
xchg
imul
out
scas
icebp
pop
cmp
arpl
cmp
addb
in
repnz
orb
sub
enter
push
hlt
clc
into
insl
xor
push
jb
ds
mov
pop
fistl
aad
dec
inc
jns
into
dec
jne
or
xor
dec
adc
or
lock
add
int
insl
loop
mov
inc
jbe
push
mov
xchg
out
mov
je
std
test
mov
jge
dec
mov
sbb
mov
jl
in
dec
pop
push
sbb
int3
push
jp
inc
shl
scas
xor
mov
mov
sub
dec
std
xor
in
and
gs
arpl
insb
aam
push
push
add
sahf
sub
fcmovu
xchg
xchg
sub
sahf
jb
mov
dec
cmp
jge
es
sbb
jp
jecxz
scas
call
add
inc
xchg
xor
pop
jle
js
les
fiadds
mov
and
ret
aam
cmp
push
cmp
pop
lret
dec
pushf
inc
adc
push
test
fcoms
mov
or
dec
mov
mov
push
sub
add
in
loope
cmpsb
shll
pop
inc
scas
aad
sub
mov
and
ret
das
adc
mov
mov
or
shll
bound
repnz
lcall
push
cwtl
mov
mov
xchg
pusha
pushf
xor
add
repz
into
pusha
aas
mov
aaa
insb
fwait
rorl
push
mov
rol
int3
movsb
or
mov
sahf
stos
imul
adc
decl
sub
sbb
adc
faddp
sbb
outsl
xlat
cmpsl
lret
cwtl
in
mov
xor
push
push
push
aaa
stc
rcrl
add
fmulp
cmpsb
inc
mov
push
sahf
arpl
push
mov
inc
mov
xchg
pop
lds
pop
ficoml
stc
shll
mov
out
inc
loop
adc
bound
mov
jl
popf
fnstcw
push
xchg
loope
cmp
ss
xchg
call
push
jo
adc
das
je
out
ljmp
pop
or
cld
mov
das
fidivrl
movsl
adc
notl
stc
xchg
lock
ror
outsl
xchg
movsb
mov
mov
xor
pop
fsubrp
lea
enter
xchg
fldcw
push
les
and
ficompl
fcomi
xchg
lcall
mov
xchg
fcoms
sbb
or
pop
bound
fisubrs
sahf
imul
test
rclb
leave
inc
mov
mov
cld
movsl
rcll
aad
jno
maskmovq
testl
xchg
scas
jae
dec
in
nop
clc
jle
aaa
jae
pop
jns
gs
xchg
hlt
int3
mov
push
dec
mov
arpl
xchg
xchg
ljmp
jno
sbb
lods
imul
int
lahf
movsl
ljmp
add
dec
and
xchg
and
dec
mov
pop
bound
or
mov
mov
cmp
repz
mov
aam
and
ss
fstl
inc
ret
inc
jnp
cmpsb
aam
repz
leave
xchg
xor
sbb
out
add
and
dec
xchg
vphaddbw
inc
push
addr16
mov
dec
push
in
pushf
lea
sti
push
and
jo
sub
xor
arpl
fs
or
cmp
mov
jle
cltd
int
add
mov
pop
into
sbb
push
subl
ja
mov
adc
je
mov
xchg
js
xor
ss
in
jo
pop
push
test
dec
push
daa
and
xchg
push
xor
push
pop
fimull
rcll
mov
mov
or
cld
jecxz
out
mov
scas
xor
bound
sbb
xchg
sub
mov
cld
adc
icebp
stc
cmp
or
in
sub
push
in
dec
xor
push
or
jl
leave
mov
dec
inc
sbb
xchg
test
lds
push
into
and
int
push
and
jae
aas
xor
call
xchg
pop
add
cmp
xchg
mov
int
inc
push
int3
dec
jmp
dec
fwait
cli
int3
sbbl
dec
push
add
cvtdq2ps
mov
in
fidivrl
add
push
push
cmc
add
cltd
arpl
inc
fcoms
dec
mov
out
packsswb
inc
adc
adc
adc
das
xchg
in
mov
mov
sbb
inc
pop
idivl
cmpsb
push
add
repnz
xor
out
jp
fisttpll
insb
push
iret
cmpb
icebp
enter
jo
sbb
push
mov
rcll
xchg
sub
sbb
movntps
mov
jg
mov
adc
js
adc
inc
cmpsb
adc
push
stos
cli
cmp
test
cmp
dec
mov
push
mov
xchg
in
out
rolb
andl
call
out
adc
in
xor
nop
mov
js
xchg
inc
xor
pushf
mov
leave
and
inc
lret
scas
sti
push
lahf
sbb
pop
ret
push
repnz
sub
mov
cmp
mov
jo
test
outsb
inc
push
and
mov
xor
repz
std
lret
sub
xchg
pushf
mov
sti
mov
or
pop
dec
inc
cmc
sbb
jae
fs
orl
cwtl
inc
scas
frstor
pop
rcl
mov
movsb
mov
dec
adc
addl
lea
xchg
popf
repz
and
aas
dec
jno
add
fstl
cmpsl
les
hlt
scas
mov
inc
dec
mov
aam
cwtl
sti
jl
push
mov
inc
pop
pushf
lods
xchg
cwtl
fdivl
xchg
leave
xchg
or
les
pop
add
mov
add
cltd
or
jp
mov
pushf
in
pop
mov
mov
out
sbb
inc
stos
mov
cmp
inc
insl
pop
push
pop
mov
jo
inc
shl
sub
shrl
and
stc
aam
stos
loope
adc
enter
testb
hlt
repnz
je
sti
insl
xchg
push
cs
jl
push
cmpsl
mov
push
inc
sbb
add
adc
mov
div
std
ljmp
insl
mov
xchg
push
cwtl
mov
and
xor
mov
push
je
xor
scas
xchg
jg
xchg
push
sbb
imul
fmul
es
dec
inc
clc
sti
cmp
or
sub
cli
push
inc
sub
mov
mov
insl
out
push
lds
pop
je
jbe
sub
inc
cmp
movsb
push
xchg
sub
sti
adc
ficomps
ret
lods
ljmp
mov
psubq
add
icebp
xor
jle
or
mov
push
jno
popa
addr16
mov
mov
pop
dec
mov
arpl
jo
imul
sahf
repz
mov
add
scas
add
xchg
ljmp
popf
test
loop
add
or
std
jmp
pop
in
xor
inc
pop
aaa
js
adc
pop
dec
inc
pop
sub
mov
test
test
xchg
mov
xlat
aam
fs
clc
div
cwtl
xor
js
shlb
ss
xor
pushf
imul
pushf
ja
sahf
arpl
sbb
mov
repnz
outsl
cwtl
adc
lret
dec
jle
aad
cmp
std
in
aaa
out
sbb
and
addr16
add
xor
sbbl
dec
scas
cmp
pop
add
sahf
es
pop
mov
or
in
jnp
pop
jl
pop
xchg
pop
mov
out
dec
arpl
movsb
mov
xor
pop
imul
gs
push
arpl
and
sbb
push
lcall
ds
in
inc
stos
iret
adc
jnp
xor
loope
xchg
int
pusha
in
jb
sbb
jg
insl
loope
jns
xchg
jg
add
lcall
jno
mov
pop
mov
adc
aas
scas
xor
insb
enter
mov
adc
cmpsl
jnp
inc
inc
into
sti
xchg
int
in
mov
lea
arpl
mov
inc
xchg
nop
aam
cmp
sub
sti
scas
jno
addb
mov
xchg
cmpsb
rcrl
pop
shll
push
pop
inc
mov
jg,pn
push
lds
jae
mov
cmp
pop
xor
pmaxsw
sbb
cwtl
in
sahf
lea
pop
jb
sti
mov
mov
lahf
xchg
testl
jo
adc
in
mov
sbb
inc
xor
scas
xor
mov
xchg
and
shll
sbb
push
insl
add
inc
test
cmp
mov
and
repz
pop
or
dec
push
sbb
or
lret
aas
ret
test
stos
add
sub
lret
adcb
loop
ret
popfw
xchg
jo
lcall
mov
popf
nop
pop
add
outsb
inc
add
inc
mov
jns
daa
adc
call
xor
and
lret
push
mov
imul
add
cmpsl
mov
add
push
mov
ss
jge
negb
in
mov
xor
push
out
cwtl
mov
outsb
shrb
pop
pusha
xor
pop
mov
sti
test
xchg
mov
or
inc
and
popf
fidivrs
popf
imul
ja
iret
xchg
std
ltr
add
fists
xchg
pop
dec
loopne
orb
xchg
fcmovnb
lret
cs
adc
fs
mov
sbb
mov
cwtl
or
jl,pt
orl
cmp
fcomi
popf
xchg
jne
rclb
and
adc
or
or
jns
out
out
and
idivb
xor
pop
in
orl
testb
daa
jecxz
and
rorl
pop
jmp
push
jae
inc
imul
dec
adc
lret
aas
imul
or
les
fisubrl
xchg
rclb
sub
test
inc
insl
pushf
ficoml
cwtl
rcrb
imul
cmp
add
movsb
adc
dec
std
pop
scas
xchg
cmp
data16
add
sub
add
inc
or
repnz
xchg
pop
insb
jb
mov
dec
jb
xor
ljmp
in
out
ljmp
rolb
xor
test
mov
push
pop
outsl
ss
daa
push
xchg
jmp
and
in
mov
in
sub
mov
stos
fildl
inc
lea
sahf
cld
pop
out
xchg
insl
push
sub
jae
in
xchg
xchg
iret
dec
cmp
inc
jae
leave
loope
and
pop
imul
xorb
pop
scas
scas
cmp
fidivrl
neg
dec
lret
lods
mov
repz
mov
adc
xorb
xchg
cmp
movsb
sbb
imul
jnp
mov
mov
pop
mov
fadd
iret
fisttpl
inc
sub
jl
jne
clc
negb
adc
in
aad
and
mulb
int3
xor
add
test
inc
sbb
jae
mov
adc
pop
pop
in
mov
cmp
and
jo
repz
sub
push
outsb
mov
fidivs
je
cmp
xchg
shrl
in
push
push
pop
ret
stos
mov
pushl
jge
push
sbb
mov
in
imul
in
fldenv
and
sub
sbb
mov
mov
pextrw
xor
sub
cld
cltd
out
movl
out
lea
out
cli
imul
pop
dec
sbbb
enter
popa
leave
mov
lds
jl
stos
mov
je
repz
inc
lods
jae
push
mov
pop
jp
addb
xlat
push
les
sahf
push
mov
daa
leave
fst
test
jle
ret
ss
insb
sbb
mov
out
pop
xchg
cmc
xor
jmp
inc
push
adc
mov
push
sbbl
aad
pop
out
jmp
mov
sbb
jle
mov
repz
or
jb
out
in
pop
imul
mov
insb
in
stc
insl
pop
cmpsl
cmp
shll
js
addb
push
jb
add
xchg
repz
lahf
rcr
stc
cwtl
xchg
bound
sbb
movsb
scas
mov
mov
jp
adc
jg
sarb
pop
xor
popf
lcall
mov
jmp
xchg
sbb
jno
xor
inc
adc
add
stos
daa
jecxz
inc
in
shlb
sahf
inc
cmovg
xchg
inc
stos
mov
mov
mov
pop
leave
cmpsb
iret
stos
loopne
push
or
hlt
loopne
cmp
out
mov
outsb
cmp
fldt
imul
pushf
dec
jo
inc
push
sub
jmp
jl
imul
clc
dec
iret
cmp
or
pop
out
adc
xchg
inc
pop
sub
insb
repz
pop
dec
roll
push
jecxz
pushf
mov
push
cmpsb
imul
xor
test
push
or
cmpsb
pop
stc
cltd
xchg
shl
jmp
mov
popf
mov
hlt
clc
or
mov
bound
ja
sbb
or
incl
out
cmp
xchg
mov
test
mov
push
mov
xorb
sub
in
mov
pop
push
movsb
xlat
es
idivl
out
adc
mov
pop
mov
shrl
in
jecxz
add
pop
cmpsl
addl
out
sahf
mov
loop
mov
outsl
pop
nop
cli
pushw
das
pop
and
test
fs
fistps
add
push
enter
lock
pop
sbb
push
mov
xchg
push
inc
and
cltd
and
fdivrs
pop
push
sbb
cwtl
test
dec
in
mov
shrb
add
and
mov
imul
popf
cmp
jecxz
sbb
adc
xor
inc
test
lock
decw
add
lea
mov
sub
stos
test
pop
nop
ret
jae
rclb
add
outsb
cmp
sbb
dec
mov
mov
addr16
popf
jo
fs
dec
xor
mov
mov
jle
fstps
sbb
movsb
mov
mov
loopne
mov
mov
test
outsb
mov
out
and
pop
dec
add
cmpsl
sahf
cmp
ret
inc
clc
xchg
cld
sub
mov
mov
fcoml
insb
sbb
add
je
pop
cmp
std
insl
xlat
mov
sub
push
sar
xchg
and
mov
das
adc
test
jecxz
and
pusha
jle
mov
scas
and
lock
pop
mov
adc
cmc
jne
and
inc
mov
cmp
imul
cmp
scas
aad
add
add
add
lock
clc
adc
sbb
jg
lods
adc
dec
push
fistl
gs
cld
inc
mov
push
sub
mov
arpl
lret
and
movsl
or
pop
and
aam
mov
int
in
mov
popf
xchg
inc
sbb
rcrl
jle
and
pop
loope
xor
pop
btc
insl
scas
fsubrl
adc
mov
and
sbb
mov
in
outsl
fdivs
or
dec
dec
pop
jne
push
mov
jae
sbbl
inc
and
call
sub
fnstcw
lcall
lock
stos
lahf
add
ficoms
pop
cli
adc
xchg
add
lahf
scas
jo
or
sbb
sub
mov
or
or
xchg
mov
filds
dec
and
mov
scas
test
fisttps
jl
ret
push
push
stc
lret
daa
loopne
mov
push
fnstcw
loop
fsts
or
scas
and
loop
jl
test
adc
adc
sbb
cmp
pushf
cmp
leave
fmul
xchg
rolb
shrl
jae
cmp
push
adc
lock
jbe
inc
mov
mov
inc
xchg
fistpll
lahf
jge
notb
and
movsb
cmp
mov
sbb
pop
adc
stos
stos
out
subl
mov
icebp
push
lret
fcomip
test
pushf
sbb
test
rcll
cmpsl
fbstp
xchg
fidivrl
or
cmp
push
iret
jno
fldcw
movsb
pop
xchg
aaa
insl
mov
mov
addr16
jo
js
inc
push
cmp
mov
cmpsb
inc
dec
ret
or
orl
sub
les
push
bound
clc
cmp
mov
lods
push
pop
inc
mov
push
out
rolb
jb
movsb
ds
stos
push
push
xchg
addr16
mov
push
ljmp
imul
inc
aad
call
cltd
mov
xor
movl
dec
les
dec
nop
adcb
pop
pop
push
js
sbb
add
test
xor
pop
mov
outsb
mov
inc
fisttpl
mov
mov
sub
xchg
les
mov
jae
imul
mov
fdivrl
stos
nop
cmp
mov
daa
xchg
sub
xchg
push
pop
ljmp
xchg
push
hlt
test
mov
insl
mov
sbb
std
xchg
dec
sub
mov
aaa
jecxz
cli
lods
fsts
jecxz
daa
andb
dec
xchg
lcall
xor
outsb
sbb
xor
jg
out
pop
xor
mul
pop
and
sbb
add
adc
sbb
mov
jns
icebp
outsb
push
test
cmp
cmp
mov
cmp
popa
mov
adc
push
aam
bswap
xchg
out
sbb
fdiv
xchg
jno
cmp
push
std
mov
aaa
lods
xchg
pop
int3
dec
mov
mov
leave
add
idivl
movb
mov
aad
not
addr16
rorb
dec
jmp
inc
int
add
movsl
ljmp
add
lods
jle
dec
fimuls
insb
and
data16
push
lea
imul
out
loopne
and
loope
arpl
add
add
movsb
mov
and
push
sbb
imul
clc
sbb
hlt
andb
stos
xchg
pushf
and
and
and
fimull
mov
xor
xchg
fnsave
sahf
sub
and
sub
popl
scas
or
in
xchg
and
and
imul
aas
cmpsb
roll
cmp
je
fcmovne
xor
out
inc
jge
out
ss
nopl
xor
inc
or
scas
jne
repz
out
add
movl
pop
and
call
adc
std
test
fidivs
sub
pop
pusha
cld
stos
sbb
rcl
xchg
jl
lret
sbb
add
clc
jns
cmc
mov
jbe
cmpsb
push
roll
popa
aam
popf
sti
scas
fwait
aaa
mov
leave
sub
xchg
pop
push
dec
hlt
test
imul
pop
xchg
pop
xchg
cmpsl
data16
xchg
insl
stos
push
fcompl
cmc
dec
mov
inc
or
lods
test
jge
loopne
xor
loope
mov
ds
inc
sar
xor
ja
rorl
xor
pop
cmpsb
mov
mov
pop
popf
arpl
pop
repnz
into
lret
fistps
and
aad
incb
jp
push
mov
cpuid
cmp
es
mov
cmc
movsl
jbe
sarl
sbbl
insb
mov
dec
dec
mov
pop
cmp
fisttpl
out
in
ljmp
jg
lods
repnz
out
test
add
push
in
imul
clc
clc
addr16
mov
cld
enter
or
out
imul
sub
xchg
push
jle
ss
or
dec
or
and
lret
jb
mov
in
cmc
push
xor
daa
icebp
orb
mov
cld
fstp
mov
and
stos
mov
and
pop
mov
pop
sahf
dec
sbbb
inc
and
popf
xchg
lds
xchg
or
jge
cltd
jp
movsl
mov
xor
shlb
adcl
add
cmp
icebp
insb
push
dec
incb
fisubs
aaa
std
cli
mov
stc
adc
mov
shlb
push
inc
mov
jns
nop
fiaddl
push
pusha
and
rcrl
push
enter
sub
outsl
mov
test
or
sti
jnp
movsl
ret
int
in
dec
xor
xor
aas
out
call
dec
xchg
mov
xlat
sbb
lret
jg
rcl
push
and
fistpll
ss
in
add
jp
mov
popa
sbb
add
call
ret
push
xor
icebp
outsl
pop
jo
push
mov
adc
iret
aas
cli
mov
inc
push
iret
add
push
adc
add
enter
int
data16
pusha
or
and
sarb
pop
cwtl
bound
or
cmpsb
jp
push
add
shll
mov
pop
mul
pop
nop
push
or
pushf
clc
sub
xchg
jnp
push
adc
inc
lret
sti
fisttpll
mov
and
int3
pop
xor
bound
sbb
xchg
pop
xchg
daa
mov
mov
rorb
inc
mov
xchg
loop
ss
sbb
rolb
arpl
push
xor
stc
dec
mov
lock
add
out
mull
scas
sar
mov
clc
push
pop
int3
jo
es
add
stos
scas
inc
pop
or
cltd
icebp
and
ret
push
xchg
outsb
rcrb
call
xchg
aas
sub
adc
hlt
dec
shr
inc
sub
or
and
ja
sub
dec
pop
hlt
mov
add
test
and
ja
int
in
ja
cmp
and
dec
scas
mov
lds
or
bound
or
loope
dec
xchg
xlat
jmp
push
dec
stos
cld
xchg
add
and
pop
cmp
pop
xor
lds
xchg
push
icebp
lea
or
mov
xchg
push
mov
out
add
out
mov
in
adc
fistps
ss
test
jnp
inc
sub
ret
mov
add
xor
mov
popa
jmp
sbb
loope
repz
popa
xor
jnp
mov
mov
fcoms
jg
fs
imul
xor
sbb
inc
push
mov
pop
orl
ds
push
mov
fcoms
sbbl
dec
mov
dec
scas
js
inc
xor
adc
test
jns
sbb
xor
cmp
out
jle
mov
aaa
add
repz
movsb
push
inc
lcall
sub
push
inc
das
out
fwait
jle
xchg
pop
mov
mov
cmpsl
movaps
loope
mov
cmc
jne
ret
outsl
mov
pop
lret
add
xchg
sbb
and
data16
lods
ja
jmp
loopne
sub
mov
adc
dec
popf
lea
xchg
mov
sub
dec
jne
stos
loopne
push
cmp
imul
out
inc
cli
movsb
jecxz
mov
in
sar
test
out
cmp
adc
mov
inc
test
and
dec
mov
bound
push
jno
mov
mov
outsl
mov
jl
mov
pop
daa
cmpsl
icebp
jg
lods
jl
adc
push
js
in
jno
imul
data16
cmpsb
rcrl
mov
and
enter
and
sbb
xchg
rol
adc
fistpl
das
jbe
mov
push
add
fsubs
div
or
je
adc
mov
cmp
cmpsb
ficoml
frstor
push
add
out
out
arpl
push
dec
jge
mov
icebp
pop
dec
bound
jmp
pop
loop
mov
mov
xor
dec
imul
cwtl
mov
gs
xchg
add
aas
adc
fdivs
test
andl
repz
push
cwtl
xor
add
imul
cmp
outsb
mov
xlat
pushf
add
shrl
int3
out
lea
jmp
pop
iret
and
add
adc
cmp
test
pop
imul
outsb
push
adc
les
mov
rcrb
adc
inc
fs
jle
ret
in
push
sub
cmp
and
sbb
ret
mov
in
pushf
addr16
enter
cmpsl
cwtl
mov
push
into
cli
rorb
push
js
cvtpi2ps
mov
scas
sub
pushf
fadds
dec
stc
mov
orb
mov
insb
dec
fcomps
cmp
fs
pop
xor
mov
stos
iret
sbb
out
pushf
fmuls
pop
jno
test
pusha
xchg
in
rcrl
movsb
repnz
scas
das
sbb
repnz
inc
repnz
hlt
mov
pop
dec
xchg
mov
adc
es
ja
mov
incl
scas
add
cltd
mov
inc
jmp
in
stos
jno
mov
gs
ret
jmp
pop
jnp
mov
add
xor
loop
sub
lods
adc
insb
fucomi
push
sarb
dec
insb
adc
push
add
mov
mov
enter
xlat
mov
ds
mov
je
xor
cltd
ja
stos
cmp
sbb
mov
movl
arpl
dec
cmp
daa
adcl
jp
movsb
mov
out
popf
repnz
or
adc
and
cmp
dec
sbb
add
xchg
stos
aas
inc
dec
rolb
adc
movsb
push
clc
data16
xchg
movsb
mov
imul
lock
cmc
xor
jne
fstps
repnz
push
fists
and
orl
fstl
mov
jns
insb
dec
aas
cli
pop
dec
sbb
mov
fwait
nop
cmpsl
mov
mov
mov
dec
ds
mov
dec
ss
or
lcall
sbb
mov
shlb
imull
sbb
loopne
addr16
push
jbe
add
loop
scas
mov
mov
dec
out
dec
xchg
imul
enter
pusha
dec
xchg
outsl
test
fisttpll
data16
push
fwait
aas
inc
pop
js
imul
xchg
cmpsb
fs
fistps
les
fildll
aaa
mov
xchg
aad
adc
and
jns
icebp
sbb
add
push
add
cwtl
push
in
cmp
scas
mov
or
jge,pt
sbb
xor
or
mov
aad
test
cmp
out
repz
mov
sti
jo
loop
fisubrl
and
mov
add
mov
movsl
sbb
xor
dec
inc
jns
sbb
cld
mov
shl
xchg
xor
aas
lret
dec
mov
inc
push
dec
pop
inc
xchg
popa
cmp
imul
andl
mov
lods
or
fsubrs
movsb
out
sbb
leave
insl
jl,pn
lahf
ja
jb
mov
subb
loop
mov
pop
and
adc
inc
popf
ss
lcall
xchg
movsb
pop
inc
mov
mov
xorb
aam
jno
aad
pop
mov
out
adc
pop
push
insl
push
xor
sahf
cmp
jae
inc
inc
or
push
xchg
aas
nop
cli
pop
lret
loop
hlt
fisttps
testl
inc
fdivl
jmp
pop
cmp
imulb
or
ja
mov
mov
mov
jno
mov
dec
cltd
sahf
out
mov
cli
mov
pop
cmpsb
cmc
pop
das
xchg
sub
sub
mov
add
inc
push
mov
xor
fs
cmp
ja
loope
mov
xchg
js
pop
lods
int3
or
sbb
dec
pop
test
jno
loope
sbb
mov
and
cltd
jp
ljmp
addb
mov
lret
ljmp
stos
cmp
or
int3
daa
sarb
cmc
aam
icebp
aaa
vunpckhps
sub
leave
push
or
dec
jae
xchg
insl
scas
sbb
mov
rolb
lds
scas
sbb
loop
sbb
inc
sar
push
mov
mov
push
jmp
mov
jb
inc
jge
paddd
push
inc
rep
je
scas
or
sbb
cmpsb
cmpsl
imul
adcl
bound
xchg
inc
bound
ja
ja
data16
mov
cmp
shlb
and
iret
cmp
push
ds
gs
and
retw
cmp
je
cmp
push
comiss
jge
xchg
adc
repz
insl
xor
or
or
lret
das
pop
mov
mov
pop
dec
arpl
cmpsl
xchg
mov
push
pop
xlat
sbb
dec
adc
dec
xchg
xor
movsl
pop
or
pop
xor
pushf
pop
imul
fst
js
out
in
push
les
js
das
push
fdivs
jp
inc
or
adc
rorb
arpl
mov
shr
or
mov
mov
adc
lock
movsb
enter
loop
jge
sub
mov
and
nop
mov
mov
jl
xchg
pusha
bound
and
cmp
dec
cltd
rcr
bound
cmp
icebp
fstpl
pop
mulb
cli
adc
inc
push
test
arpl
pop
pop
sbb
enter
rcll
stos
inc
fsubs
cmpsb
int3
mov
inc
jnp
test
push
inc
ljmp
inc
out
sti
lock
sub
mov
movsl
mov
add
cmp
popf
cmp
mov
out
popa
jl
and
cmp
lods
sbb
dec
repz
mov
sbb
or
cltd
dec
inc
ret
and
cmp
lock
sub
mov
testl
shlb
dec
stos
mov
fsubrs
or
sbb
data16
int
repz
sbbl
out
xchg
test
push
enter
js
cld
jp
xchg
sub
into
pop
jb
das
mul
mov
jno
jge
pop
pop
jl
mov
sahf
incl
shlb
cmpsl
arpl
pop
add
sbb
mov
mov
and
pop
notl
inc
xor
sub
fcompl
in
mov
aam
jno
cltd
rcll
jbe
cli
xchg
sbb
test
out
enter
mov
cmpsb
cmpl
fstps
out
mov
dec
cwtl
push
pop
jg
inc
fldl
push
dec
shr
inc
inc
xchg
inc
dec
ss
out
scas
inc
pop
loop
and
mov
push
dec
xchg
out
mov
std
rep
repnz
or
repnz
pop
rolb
add
and
jp
clc
fimuls
sbb
ss
daa
add
imul
push
ss
js
and
aam
xchg
mov
jns
sbb
push
loop,pt
pop
nop
cmp
sub
rclb
mov
xor
stc
aad
dec
pop
stos
push
push
cmpsb
stos
mov
in
or
mov
adc
std
aam
pop
and
cmp
inc
pop
jnp
jmp
add
mov
sub
iret
xchg
cmp
jmp
push
sub
mov
xor
jae
lret
cmp
pusha
fidivrs
in
adc
or
inc
out
xchg
iret
out
dec
outsb
jnp
jmp
jmp
test
adc
mov
xlat
sub
cmp
js
mov
inc
mov
test
cmp
std
dec
pop
jg
xchg
inc
lret
mov
jbe
gs
inc
leave
test
dec
ss
fstp
cli
insb
adcb
xorb
or
in
dec
inc
cltd
fnstsw
clc
mov
imulb
xor
cmp
pop
movsl
fldcw
ss
in
movsl
out
scas
jno
xchg
out
mov
jns
out
iret
pop
stos
pop
cli
lea
mov
xor
xchg
sbb
outsl
aaa
mov
jp
mov
pop
push
movsb
repz
outsb
aaa
push
out
pop
pop
sub
mov
ret
rcll
inc
mov
push
jle
add
imul
scas
lcall
out
cmp
dec
subl
add
mov
mov
out
dec
rcl
xor
sbb
popf
add
gs
gs
xchg
push
gs
cmp
pushl
adc
cmp
repz
clc
xchg
int
add
jns
movsb
sbb
dec
jae
cmp
mov
ret
cmp
imul
aad
cwtl
inc
mov
and
inc
rcrl
pop
sbb
in
jns
dec
jns
dec
push
iret
or
inc
xchg
leave
ret
test
dec
adc
mov
sbb
fcmovnbe
mov
adc
out
es
xlat
cmp
daa
call
das
in
aas
fsts
adc
aas
scas
jp
std
jmp
fidivs
xor
add
repz
mov
dec
adc
repnz
imul
rorl
cwtl
cmpsl
mov
sbb
dec
xchg
xor
jne
push
inc
inc
jbe
jge
and
iret
adc
xchg
insl
sbb
gs
lds
jmp
cmpsl
es
out
sbb
movl
popa
rorl
lahf
ret
orl
mov
dec
inc
adc
mov
add
jecxz
sarl
jl
cmp
enter
bound
arpl
loop
mov
shrb
es
mov
xchg
dec
jmp
jnp
cmp
add
stc
inc
push
jg
sti
or
adc
mov
lds
fiadds
pop
and
pop
add
cmp
xchg
xlat
push
sbb
inc
push
jae
ss
icebp
das
andb
cmp
jecxz
push
sub
inc
adc
pop
pushf
aam
push
into
xchg
jge
insl
addr16
fsubs
jne
insl
mov
outsl
dec
xor
sub
adc
repnz
jecxz
mov
adc
call
push
lret
leave
lret
btc
ljmp
pop
loopne
jb
lea
cmp
jl
add
out
jb
cmp
pop
ss
mov
out
fwait
inc
adc
sbb
mov
pop
cmc
ffree
cli
je
dec
aas
rol
xor
inc
flds
add
loope
jp
in
insl
loope
roll
fisubs
std
std
andl
xchg
out
adc
mov
lcall
enter
arpl
fistl
push
das
xchg
mov
ljmp
sub
lods
shl
jb
or
outsl
mov
js
inc
add
shlb
mov
shll
jo
aas
sub
dec
sbb
cmp
inc
sub
cmp
mov
push
sbb
mov
repnz
cmp
sub
pusha
outsb
out
jbe
jl
jne
inc
cmc
sbb
and
push
inc
shrl
xor
popa
push
roll
xor
hlt
jne
add
ss
stos
iret
jge
push
sub
jmp
add
inc
imull
movsl
dec
or
and
and
cld
xor
pop
jo
fisubl
push
cmpsl
pop
scas
mov
push
adc
fisubrl
mov
mov
inc
pop
test
xlat
push
hlt
fistpll
loope
push
sbbl
cmp
mov
aaa
insl
gs
push
mov
pop
mov
movsl
dec
xor
sub
outsl
insb
fidivrl
mov
faddl
shll
xor
jmp
pop
int3
dec
push
inc
cli
sbb
data16
ljmp
and
sub
outsb
fs
xchg
stos
sub
es
mov
xorb
lock
out
fwait
sub
add
adc
cwtl
loope
test
mov
clc
imul
dec
imul
or
add
in
add
cmp
dec
sub
cmp
out
cmp
mov
js
ja
sbb
mov
fwait
pop
lea
xchg
sub
or
ds
clc
push
inc
sbb
or
adc
data16
mov
ss
cli
sti
inc
lret
aas
loopne
lods
jle
stos
add
sbb
xchg
mov
mov
push
pop
daa
int3
push
data16
fbld
loope
mov
mov
sub
mov
pop
jbe
fnstsw
jl
push
mov
scas
jb
sub
fcomi
dec
mov
add
imul
jecxz
cmpsb
iret
jl
decl
pop
and
pop
and
inc
movsl
inc
rcr
in
in
dec
icebp
fsubs
xchg
and
sub
mov
stos
inc
lcall
and
inc
xchg
jl
or
xor
andl
imul
dec
mov
pop
lahf
add
cld
leave
aaa
fstpl
daa
insl
sub
mov
in
cmp
xchg
test
lock
jl
cmc
ret
fld
dec
push
push
repz
popf
inc
in
int3
das
push
sti
sub
aad
popf
jmp
cmp
out
test
jg
pop
ja
adcl
xor
scas
xchg
jge
in
fidivrl
jbe
xor
or
repz
xchg
add
push
iret
stos
or
or
push
adc
into
fdivs
pop
stc
addb
ret
loope
mov
adc
inc
das
cli
outsb
sbb
adc
inc
subb
mov
cmc
test
inc
pop
mov
jp
push
fiaddl
test
jp
push
outsl
pop
call
in
fsubl
out
dec
jecxz
and
cli
cmp
xor
shl
pop
rol
stos
out
loopne
inc
mov
mov
aam
pop
mov
jmp
repnz
and
adc
and
mov
mov
in
daa
push
inc
push
nop
fdivs
shrb
mov
dec
or
fdivl
int3
add
andl
add
pusha
es
cli
xor
adc
les
int3
mov
xchg
pop
ret
out
dec
xor
pop
xchg
cmp
addr16
outsl
mov
fwait
or
cmc
mov
push
inc
mov
mov
daa
cmp
sub
pop
andl
adc
xor
sub
lock
inc
lcall
add
xchg
mov
cmp
push
sbb
push
add
test
sbb
add
out
je
stos
mov
xchg
movsl
in
xchg
or
jo
mov
sbbl
jge
sub
jecxz
or
insb
cmc
js
jo
loope
add
jne
cmp
push
repnz
gs
adc
jp
add
xchg
scas
rcr
cmp
adc
scas
or
leave
sbb
jl
roll
stc
std
movsb
xlat
jmp
fsubrs
cmp
leave
fimuls
lods
and
jp
inc
or
sub
mov
xchg
adcl
inc
mov
or
cwtl
insb
jo
xor
repz
add
stos
fs
dec
loop
push
inc
addb
dec
call
lret
je
or
dec
lea
jp
out
stc
paddw
and
mov
and
ret
inc
push
adc
ret
outsl
jge
jb,pn
ret
sub
jno
sub
jmp
enter
out
add
inc
test
mov
push
sub
sub
sub
add
aas
xor
inc
or
and
cmpsl
xor
pusha
push
cmp
scas
or
leave
dec
pushf
xchg
icebp
fsubrs
dec
mov
cli
mov
cmp
mov
cmpsb
fsts
aam
sarl
adcl
in
xor
push
mov
mov
fs
cli
int3
xchg
pop
push
pop
sbb
inc
mov
xchg
and
push
int3
popf
adc
or
and
outsl
lahf
scas
lods
jno
jg
push
cmp
test
lock
pop
call
hlt
outsb
sub
in
enter
jnp
xlat
aaa
xchg
pop
mov
into
inc
outsb
jecxz
pushf
xchg
bound
push
jbe
pop
xchg
pop
lcall
dec
push
add
lds
test
xchg
and
push
nop
and
int3
ss
rcll
loope
fisttpll
mov
mov
out
adc
and
xor
call
push
notb
add
xchg
sub
cwtl
mov
loopne
sahf
idiv
rcrb
push
dec
inc
les
cmp
cli
insl
xor
and
push
ss
sub
sub
mov
pop
stos
mov
xchg
mov
add
ffreep
sub
and
pushf
lcall
push
xor
add
mov
loop
out
inc
cld
adc
sbb
inc
sbb
das
sub
lea
dec
fimull
mov
in
aam
or
loop
std
pop
lods
push
xchg
push
sti
xor
je
das
dec
test
xchg
mov
mov
notl
and
mov
adc
adc
dec
or
and
mov
and
xchg
mov
fiadds
xor
xchg
in
inc
loopne
fldt
test
push
sub
in
pop
mov
mov
mov
sbb
sar
jae
repz
ljmp
ja
and
jne
add
jle
pop
sbb
mov
das
push
xchg
fildl
repz
mov
aas
out
in
dec
cmc
arpl
gs
call
cmp
jno
jl
jecxz
mov
lret
js
leave
push
mov
sub
xor
sbb
inc
sti
xchg
cld
test
push
sarl
test
int
dec
xchg
nop
and
popf
mov
fldl
inc
cltd
mov
jae
les
and
lods
insl
iret
scas
push
push
cltd
inc
fstps
outsb
xchg
stos
cmp
test
inc
dec
test
arpl
jl
add
roll
enter
sbb
daa
ja
imul
ret
mov
mov
arpl
fcoms
out
push
xchg
mov
rorb
sub
outsl
cltd
ljmp
das
mov
arpl
jne
and
add
or
je
or
dec
frstor
imul
pop
nop
xor
mov
pop
cmp
imul
rorl
mov
popa
jno
xchg
ljmp
bound
xchg
jne
xlat
insb
sub
cmc
sarl
clc
xchg
lods
dec
mov
sbb
fsts
popf
jae
fs
out
xchg
mov
movsb
aam
mov
pop
rcll
dec
enter
dec
stos
pusha
std
outsb
sbb
movsb
cltd
cwtl
sbb
cli
jns
inc
addr16
pop
cmc
sub
cmp
mov
addr16
push
popa
sahf
add
push
inc
jge
jbe
dec
rolb
pop
adc
das
adc
sub
outsb
and
and
push
or
jge
ss
mov
sub
mov
jae
xchg
sub
mov
stos
fmul
enter
cmp
sbb
hlt
xor
adc
mov
and
push
push
sahf
test
inc
les
setl
nop
mov
mov
fstp
stos
clc
mov
dec
sahf
dec
pop
lock
xor
fs
dec
mov
ss
xchg
sbb
inc
push
push
popa
xlat
ss
pop
dec
ret
xchg
adc
cld
mov
fldenv
sbbb
and
scas
imul
xor
push
push
in
sub
fisttps
or
mov
pop
pextrw
push
mov
jo
or
lahf
mov
test
insb
es
mov
mov
loope
xlat
imul
stc
add
repnz
int3
jne
mov
or
add
adc
mov
inc
pop
lcall
lcall
cmp
xor
push
and
cmpsl
add
lret
imul
mov
xor
sub
inc
ljmp
jle
mov
bound
jae
xor
scas
shll
mov
adc
push
lcall
dec
pop
shll
flds
dec
cmp
cmp
pop
xchg
loopne
push
sarl
rorb
mov
fisubs
jle
fstpl
xchg
call
sub
fstl
fdivs
push
ljmp
mov
mov
lds
dec
cmp
jnp
mov
fdivrl
or
in
push
mov
and
mov
sti
mov
sti
jne
pop
mov
xor
out
int3
mov
lahf
mov
or
outsb
pop
push
addr16
insb
or
pop
mov
and
jp
mov
pushf
mov
adc
jnp
out
mov
sub
xchg
xor
sub
jae
ja
call
dec
inc
insl
cld
mov
push
push
dec
mov
mov
jg
fdivrl
pop
repnz
cltd
adc
stos
roll
out
push
lods
and
shlb
int3
ja
outsl
iret
std
les
leave
iret
enter
jae
loopne
cmp
rorb
add
jno
inc
dec
test
pusha
or
xchg
cmp
jge
repnz
mov
mov
mov
inc
pop
arpl
test
dec
xor
scas
mov
shl
cs
push
cltd
sub
add
in
xchg
in
fildl
ss
dec
cld
xchg
inc
iret
mov
fsubr
shlb
xor
inc
fldcw
add
ficoms
int3
ljmp
jns
pop
mov
lock
mov
sub
push
lret
sub
stos
enter
pop
notl
sub
lods
mov
pop
pop
outsl
sbb
test
lods
das
push
xor
das
push
mov
jg
and
sbb
movsl
loopne
cwtl
std
fstp
mov
adc
adc
xchg
mov
in
cwtl
jp
fwait
pop
imul
sbb
sbb
popf
xchg
stos
and
mov
ds
mov
push
jge
jo
insb
fstpl
sub
daa
cmc
mov
popa
stos
lock
lcall
jp
int
mov
imul
jmp
jecxz
sbb
adc
rcrl
xchg
pop
sar
add
les
cmc
scas
test
mov
jle
xor
xchg
mov
pop
ret
jno
mov
movsl
shrl
and
or
into
scas
daa
or
pop
ds
icebp
es
jo
into
fiadds
mov
jne
dec
das
mov
mov
sbb
inc
xchg
repnz
jmpw
push
int
inc
cwtl
stos
dec
sbb
aam
daa
and
or
cmp
aas
cmc
mov
pop
or
and
pop
lahf
add
jmp
add
bound
call
ret
pop
push
rorl
and
enter
push
mov
push
repnz
jg
inc
hlt
jg
mov
xor
leave
sbb
push
adc
in
movsb
xor
stc
iret
adcb
pop
insl
shlb
push
xor
pop
shll
pop
inc
repnz
xor
jecxz
inc
outsl
xchg
and
stos
pop
mov
pop
fstpl
seta
int3
aaa
dec
and
jbe
add
xchg
mov
fsubrp
lods
inc
mov
cltd
inc
lahf
dec
out
lret
cmp
push
subl
adc
adc
pop
fisubl
lea
movsl
test
les
fistl
fwait
test
cmpsl
sbb
call
dec
stos
lock
pop
mov
lock
adc
ret
push
mov
inc
movsb
mov
shll
xlat
or
or
dec
mov
subl
int3
adc
dec
icebp
in
mov
cmpps
mov
imul
add
xor
outsl
push
aas
popf
clc
flds
loopne
sbbl
sbb
jns
dec
test
jns
aas
aas
out
dec
xor
push
shlb
gs
add
arpl
fs
mov
movsl
add
jl
addr16
inc
fldl
fisttps
lods
xchg
test
mov
hlt
and
fstpt
add
pusha
cli
mov
in
icebp
cwtl
les
mov
mov
or
push
aas
add
push
leave
fisubrs
pop
mov
fnstenv
add
pop
js
and
push
push
es
cmpsb
leave
and
mov
xor
sbb
pop
out
dec
in
and
push
in
jbe
addr16
pusha
push
adc
mov
fs
jecxz
xchg
in
and
push
shll
mov
sbb
add
mov
in
int3
outsb
lahf
cmp
scas
cmp
or
inc
divl
adc
shll
rolb
inc
jb
mov
push
insl
push
roll
scas
and
adc
std
inc
loopne
mov
and
fiaddl
scas
cmp
in
mov
cmpsl
imul
push
mov
pushf
stos
subb
ror
xchg
decb
pop
mov
call
cld
call
pcmpgtw
mov
push
cli
inc
insl
clc
cltd
xor
out
imul
mov
in
sbb
xlat
jg
data16
jo
ret
xor
mov
sub
mov
sub
icebp
js
push
shlb
inc
call
aam
dec
clc
xor
adc
test
sahf
sarl
pop
add
int
mov
lods
arpl
push
pop
int3
mov
inc
dec
push
sti
jl
push
push
ljmp
lcall
test
and
push
jnp
call
sub
fs
adc
sahf
xchg
cmc
sbb
daa
fs
cmpb
mov
inc
imul
sub
jl
outsb
or
sub
dec
lock
xor
push
repnz
xchg
out
popa
inc
popf
xor
pop
xchg
jb
cmp
loopne
and
xchg
movsl
pop
outsb
sbb
add
ljmp
sub
dec
lret
and
cmp
push
mov
push
inc
into
movsl
enter
mov
cmp
sbbb
dec
or
lret
sahf
mov
jno
fcom
mov
enter
adc
lret
adc
lret
dec
fnstsw
sbb
fisubl
sbb
mov
test
pop
and
mov
dec
push
mov
les
mov
inc
rcrl
rolb
mov
sbb
insl
xchg
xor
sbb
rorl
adc
jno
ss
push
mov
jno
inc
or
jbe
pop
orps
jbe
cmp
test
mov
fdivs
or
pushf
es
divb
sbb
push
or
jno
inc
xchg
das
movsl
aas
iret
sub
push
add
push
lods
pop
add
iret
mov
lahf
jb
je
or
sbb
or
dec
or
das
pop
call
jecxz
test
bound
imul
dec
fwait
data16
inc
test
pop
adc
sub
out
ljmp
push
mov
lods
or
outsl
xchg
pop
cmp
mov
nop
xchg
popf
loop
or
pushf
push
add
sbb
cmp
pop
add
fst
lods
mov
movsl
or
jmp
inc
adc
adc
mov
dec
mov
pop
lods
scas
cmp
je
sbb
int
sbb
sbb
mov
mov
and
xorb
jnp
mov
jo
jle
lds
sbb
out
out
add
jne
add
push
test
enter
test
jb
cli
cmpsb
and
mov
mov
jecxz
cld
ret
cmp
push
mov
cmpsl
jmp
or
jle
lods
loope
mov
inc
repnz
mov
mov
push
fsubrl
aas
push
pop
mov
fcoml
ret
inc
dec
jmp
mov
lods
test
repnz
mov
cmp
push
jbe
dec
adc
cmp
pop
jmp
pusha
pop
ss
dec
xchg
ss
sub
or
jne
cmp
sbb
std
jg
daa
outsb
lods
cmp
xor
movsl
sub
add
leave
gs
pop
xor
cmp
test
lret
andb
stos
lea
les
and
je
shll
jecxz
loopne
bound
fisttpll
aas
leave
mov
push
add
add
sub
push
cmc
mov
mov
sbb
fmull
mov
test
insb
sub
ljmp
scas
scas
aad
push
fadds
jo
stos
mov
clc
cmc
xchg
addb
into
fadds
iret
cltd
jnp
and
xor
and
jge
insl
inc
xor
dec
nop
outsl
dec
push
mov
movb
es
push
inc
mov
pop
cld
pop
dec
cmpsl
mov
cmc
shrl
out
cmp
stos
fcomi
and
jl
lret
sbb
push
cmpsb
jmp
add
das
stc
xlat
mov
dec
shl
xchg
xchg
decb
ss
out
mov
fneni(8087
xchg
ret
ds
jp
push
add
pop
cmc
in
leave
mov
sbb
ret
push
lea
adc
xor
popa
ficoml
ret
cltd
out
jecxz
sbb
clc
cmpsb
and
leave
lock
stos
dec
push
movsb
and
push
fisubrl
hlt
mov
cltd
cmpl
je
adc
in
sbbb
pop
pop
packuswb
loopne
xchg
mov
shrl
sbb
xor
ljmp
mov
inc
stc
pop
lods
and
imul
out
clc
adc
adc
lds
mov
inc
mov
sbb
dec
fwait
mul
jno
daa
sbb
dec
adc
cmpsb
mov
dec
mov
mov
addl
dec
push
xor
mov
imul
add
fidivl
inc
add
rcrl
mov
or
jb
mov
subl
dec
mov
mov
std
test
fwait
aaa
push
adc
outsl
scas
outsb
les
push
cmp
das
xchg
ret
cmp
jg
pop
test
stos
test
les
pusha
mov
mov
xchg
lahf
mov
pop
cwtl
inc
jle
imul
aaa
and
mov
mov
mov
jmp
jo
sbb
sbb
pop
mov
jle
xchg
push
push
push
mov
filds
cmp
outsb
or
mov
xor
jns
jp
in
andl
cli
enter
or
dec
push
mov
sub
inc
push
movsl
push
ret
cmp
addr16
pop
mov
mov
sbb
lret
adc
jae
sbb
negb
fdivrs
mov
xor
mov
xchg
rcrb
mov
lret
mov
data16
pop
scas
pop
ffreep
mov
sbb
adc
sub
outsl
shll
mov
ret
les
aaa
push
sarb
rcrl
outsb
push
std
adc
psraw
adcb
xchg
add
add
cli
add
lcall
lret
mov
daa
adc
adc
cltd
mov
jns
sbb
push
hlt
das
jbe
sbb
adc
cmpsl
xchg
add
jno
adc
rcrl
dec
pushl
sarb
xchg
xor
push
aam
ret
lret
cmp
popa
dec
mov
clc
add
cs
pop
notb
add
jge
cwtl
or
jp
leave
lea
test
add
mov
dec
int3
outsl
fnsave
lret
xchg
dec
stc
jecxz
pop
xchg
mov
jno
xchg
sbb
fdivr
in
mov
xchg
xorb
fcmovu
inc
sub
fnstenv
mov
or
mov
lock
data16
lods
xor
sarl
les
jnp
dec
mov
mov
fildl
loopne
add
jge
ss
or
ds
fnsave
adc
sbb
cmpsb
mov
push
test
pop
mov
mov
jge
imul
inc
into
cmp
fadds
xorl
out
lahf
dec
cwtl
push
addr16
mov
mov
imul
ja
jae
icebp
in
adc
and
mov
mov
jbe
mov
cs
gs
lcall
imul
and
xchg
loopne
add
dec
cmc
fwait
sub
pop
add
push
push
push
je
test
movsb
jg
cmp
outsl
push
jl
shlb
inc
shrb
adc
es
xor
rcr
mov
divb
push
xchg
mov
mov
inc
es
sub
sub
inc
adc
in
mov
xchg
jne
xor
dec
sti
clc
lock
jbe
pop
jmp
les
push
fldcw
cmp
incb
add
jmp
repnz
jge
cmp
push
loop
imul
lahf
jp
andl
xchg
xchg
dec
and
roll
js
test
mov
adc
push
loopne
xchg
xor
in
xor
jno
inc
push
mov
aaa
aad
lods
pop
fdivr
pop
js
mov
mov
mov
data16
xor
mov
iret
insl
inc
aaa
out
xchg
xchg
push
pcmpeqd
xlat
mov
and
jp
aaa
out
insl
stos
in
lret
ret
mov
inc
lock
inc
mov
push
sbbb
fimuls
into
and
ds
pop
lea
and
jnp
jl
out
dec
inc
iret
adc
adc
pusha
mov
inc
leave
dec
jb
into
cmpsl
mov
mov
dec
fwait
mov
adc
stos
in
pop
popa
cmpsb
repnz
cmp
jae
cmpsb
rep
xchg
lret
and
hlt
cwtl
out
daa
dec
loop
cwtl
jl
pusha
int3
std
pop
mov
imul
and
push
adc
adc
test
sub
addb
jne
pusha
ret
movups
jae
aaa
mov
and
add
cmp
jae
shrl
pushf
int3
mov
adc
jmp
test
pusha
jge
addr16
cmpsl
fmull
mov
jl
push
es
pop
and
cmp
sbb
xchg
andb
add
mov
mov
mov
or
adc
xlat
ds
and
shll
dec
jp
sub
mov
cltd
mov
adc
insl
fdivs
jge
mov
rcrl
cmpsl
adc
inc
shll
adc
mov
mov
aaa
mov
insl
inc
mov
movsb
out
std
loope
mov
cmp
adc
dec
xchg
fistl
sbb
cmpsb
imul
cmpsb
pop
js
roll
leave
dec
lods
or
repz
inc
pop
xchg
or
mov
fists
sub
push
out
lret
dec
test
out
sbbl
arpl
xchg
scas
in
shr
in
sub
shll
push
push
mov
xor
sub
imul
adc
testb
lcall
add
das
mov
jmp
jno
mov
push
bound
sub
cwtl
add
fsubl
ja
out
out
icebp
sbb
cli
jecxz
cmc
test
mov
sub
sarl
xlat
push
je
stos
mov
or
fisubl
loop
lds
inc
xlat
and
inc
lret
pusha
mov
arpl
or
imul
pop
jecxz
iret
and
fs
fs
sub
aaa
lret
xchg
vorps
cli
xchg
arpl
xor
testl
jge
leave
dec
mov
dec
xlat
xchg
jg
test
jl
mov
jo
push
lods
sub
negb
xor
xchg
scas
cmp
fimuls
out
pop
add
inc
insl
mov
mov
xlat
xchg
fcmovu
mov
xchg
fs
lock
dec
pop
test
out
fwait
and
dec
cmc
mov
fidivrs
shll
scas
dec
data16
fsqrt
stos
movsb
shll
push
gs
push
pop
inc
in
pop
out
out
adc
jp
mov
cltd
or
add
mov
pop
push
xchg
lock
cmpsb
pop
mov
fs
pop
enter
mov
lahf
rclb
push
das
in
add
sbb
popa
xor
lods
loop
sub
enter
add
repz
or
fsubr
movsl
out
lcall
hlt
pop
addl
push
jne
hlt
adc
fistps
jge
jb
int
xchg
popa
repnz
jae
sbb
cmpsb
and
leave
jge
sbb
sub
nop
popf
sbb
mov
loope
pop
and
enter
mov
or
sub
fcoml
pop
adc
mov
push
inc
add
push
inc
sub
outsb
aaa
fsubrl
scas
pop
outsl
adc
add
sbb
cmp
daa
bound
scas
push
jle
dec
call
outsl
xchg
pushf
sub
mov
push
enter
add
arpl
push
mov
stos
ja
in
add
inc
cmp
sti
gs
cli
sub
iret
and
sahf
subb
aad
mov
push
and
pop
inc
sbb
and
push
out
rcrl
int3
out
lahf
fstpl
mov
call
jne
mov
aam
cli
jo
jbe
mov
lock
pusha
enter
sub
sarb
xor
cli
movb
adc
fsubrl
pop
xchg
xchg
es
xor
ret
mov
mov
out
ret
test
pop
inc
pusha
jl
cmpsl
mov
test
repnz
push
push
push
cmp
and
movsb
lds
push
cwtl
adc
pop
and
ds
or
and
push
jl
in
addb
rcrl
mov
inc
dec
fiaddl
es
mov
mov
inc
push
enter
ds
or
leave
fsubl
push
call
mov
mov
sub
push
nop
int3
test
gs
bound
nop
insb
mov
ret
adc
rcll
mov
jae
js
xchg
outsl
adc
inc
mov
cs
arpl
cmc
push
pop
rcll
rcrl
sbb
addr16
fwait
neg
test
fisubs
pop
jmp
adc
gs
lock
jecxz
xchg
mov
cwtl
and
fldenv
shll
mov
dec
pop
in
mov
ret
popl
movsb
xor
sub
add
adc
jg
mov
xor
or
call
es
mov
adc
sub
and
mov
cwtl
imul
out
cmpb
int3
int3
sbb
cmpl
pop
mov
iret
add
sub
pop
popf
inc
mov
popf
lds
mov
pop
xchg
jb
lea
fists
ficomps
or
push
mov
fs
in
enter
sbb
icebp
aam
push
mov
dec
sbb
loope
test
add
popa
aam
clc
ljmp
cmp
lods
pop
rcr
adc
jbe
add
mov
je
sub
popf
xchg
iret
ret
push
pop
push
inc
ljmp
add
das
sbb
jb
loope
fldl
mov
jae
push
popf
roll
ja
clc
in
out
mov
negb
jl
aad
bound
mov
call
push
out
test
out
cwtl
adc
popa
add
jecxz
bound
mov
push
imul
add
rorl
cli
ja
mov
mov
rcrb
shrb
shlb
sub
add
call
sbb
cmp
roll
rolb
fld
inc
xchg
xlat
push
xchg
jb
xor
jl
mov
outsb
mov
std
cmpsb
ficoml
mov
jo
iret
dec
sub
pop
push
pop
mov
repnz
mov
adc
aas
or
cmp
jg
lahf
xchg
loope
daa
rol
lea
in
dec
arpl
mov
lds
js
mov
dec
add
jle
divb
or
aas
lret
pop
cltd
and
xor
std
scas
imul
jle
outsb
loop
xchg
gs
loopne
decb
sbb
lods
jnp
sar
aad
vsqrtpd
sub
cmpsb
insb
outsb
out
cwtl
cvtdq2ps
popf
fisttpl
in
iret
in
push
test
stos
xor
pcmpeqb
and
jecxz
adc
insb
das
inc
pop
sbb
test
and
add
pop
xlat
xchg
adc
xchg
lds
mov
test
lock
aaa
arpl
mov
cs
cmp
pop
insb
shlb
and
repnz
mov
mov
insl
addr16
js
push
flds
sbb
scas
test
cmp
sub
mov
adc
cmpsb
lods
xchg
cmp
cmp
cwtl
popa
push
fcmovbe
pop
test
jnp
jle
jns
nop
jg
add
insl
jb
jbe
jne
push
or
aad
nop
js
out
jo
mov
scas
xor
insb
mov
mov
cmp
icebp
pop
add
loopne
lea
push
xor
je
imul
jmp
inc
out
dec
aad
out
mov
mov
dec
mov
push
push
mov
imul
and
inc
push
inc
or
nop
movsb
cmp
lods
mov
stos
add
mov
popf
jecxz
cmp
inc
and
pusha
add
sbb
scas
and
getsec
aas
sbb
fwait
popa
pop
ljmp
ficomps
arpl
in
outsb
mov
stos
mov
jo
shll
jbe
pop
clc
and
inc
push
pop
adc
lock
nopl
test
xchg
std
mov
mov
lods
into
add
dec
push
mov
pop
jge
push
or
outsl
mov
cmpsl
sub
fcoms
add
push
xor
or
test
ds
lahf
ja
subb
cmpsl
inc
mov
sub
fwait
sbb
sbb
mov
xor
cmc
adc
inc
and
add
popf
imul
sub
pop
mov
mov
iret
jl
push
fs
outsl
sbb
ret
cmpsl
lea
fldl2e
and
xor
sbb
shlb
fsubrp
inc
lcall
cmpsb
dec
jg
insb
loop
jp
pushl
stc
loope
in
mov
and
idiv
cmpb
enter
add
add
xchg
das
test
inc
hlt
outsl
fcmovbe
adc
push
shl
cmpsl
rcl
inc
jecxz
pop
sub
xchg
jp
push
sub
shll
ds
mov
stc
pop
adc
adc
jmp
jge
scas
or
iret
mov
int
pop
cmp
cwtl
fcoms
sti
icebp
mov
mov
jmp
inc
ret
mov
inc
mov
js
lahf
in
add
push
ret
jp
ret
pop
xor
aaa
sbb
clc
fldt
jnp
inc
sbb
sub
wbinvd
icebp
or
jle
jg
xor
push
test
xchg
fmul
xchg
xlat
test
stos
into
push
xchg
rcrb
loopne
sub
push
pop
cmp
mov
cmp
cli
sub
or
jp
movsl
test
mov
inc
scas
sub
adc
outsl
dec
push
dec
pop
mov
push
inc
cli
push
mov
nop
xor
or
cs
dec
lds
fsub
pop
aad
pop
push
push
notb
push
cmpb
call
adc
cmp
pop
push
out
aad
fucomp
add
dec
push
clc
adc
dec
mov
or
mov
ja
fstpl
fsubs
lret
mov
sub
in
and
inc
cs
cmc
jecxz
and
lret
das
popa
push
jecxz
jecxz
adc
in
jl
je
in
in
push
add
dec
add
loop
nop
sub
loop
jne
xchg
and
sti
stos
cmpl
es
hlt
shlb
sti
mov
shll
aaa
mov
dec
sub
jl
mov
dec
and
pop
aam
xchg
out
repnz
inc
out
push
lds
xorb
je
fwait
dec
icebp
adc
sbb
jae
mov
test
sarl
mov
and
aad
icebp
dec
and
sub
mov
push
fsubrs
cmp
adc
jb
cli
adc
push
insl
add
xlat
inc
mov
fiadds
and
sbb
jnp
xor
or
shll
mov
loopne
mov
mov
sub
cld
xchg
push
push
hlt
and
xor
and
scas
sbb
mov
inc
mov
mov
sbb
popf
add
jae
insl
xor
pop
xchg
mov
sub
movsl
mov
push
mov
es
mov
mov
icebp
ficoms
xchg
dec
call
pop
sahf
das
sub
dec
aaa
or
fldenv
mov
aas
adc
cmp
inc
pop
or
in
dec
push
movsb
jecxz
jns
pop
mov
pop
sub
imul
adc
push
dec
ret
sub
popa
hlt
and
cmp
es
mov
outsl
pushf
sarl
sarl
and
dec
mov
fiaddl
push
xorl
pop
mov
dec
stos
rcl
popf
addr16
cmp
mov
dec
aad
mov
popf
or
in
movsl
aas
inc
and
dec
jbe
sbbb
push
mov
mov
pop
sarl
stos
and
dec
xchg
xor
mov
movl
sub
test
push
data16
hlt
sbb
js
and
pop
and
js
es
sbb
mov
rcrl
add
ljmp
out
mov
nop
dec
mov
mov
aas
cmp
cmp
jno
jmp
inc
sub
mov
sub
push
mov
mov
adc
fcmovbe
sub
mov
dec
inc
sbb
cmp
adc
mov
in
movsl
fwait
dec
adc
and
pop
cli
jge
loopne
inc
aas
fsubp
pop
shr
shlb
loopne
pop
cli
es
inc
dec
dec
out
ds
mov
lds
adc
inc
sahf
xor
xor
adc
add
mov
xor
mov
dec
mov
ja
cmc
cld
fcompl
xor
push
ret
push
loopne
mov
or
dec
xchg
jnp
mov
or
lods
imul
jl
push
mov
jl
dec
or
mov
xor
add
xchg
aas
jnp
sbb
iretw
test
xlat
sbb
jecxz
push
mov
adc
ljmp
pop
pushf
adc
lods
mov
rcll
enter
mov
adc
jp
incb
das
sub
testl
xor
es
pop
inc
ljmp
mov
or
lret
fnsave
xlat
popa
in
adc
lock
ss
sti
insl
xor
inc
adc
test
push
mov
add
orb
sbb
jp
into
mov
jo
jl
fistpl
xor
fs
call
dec
jle
add
scas
loope
push
inc
fisttpll
push
repnz
adc
push
jge
imul
cmp
aam
xchg
insb
add
fcmove
dec
imul
ja
filds
setns
pop
xchg
addl
je
imul
pop
xlat
jae
push
out
fwait
sub
insb
mov
lcall
xchg
out
aam
lods
dec
add
push
cmc
xchg
clc
pop
das
mulb
cmp
shll
and
pop
test
xor
pop
adc
stos
arpl
roll
adc
cmp
jne
inc
outsb
mov
pop
imul
ret
fldcw
xchg
xor
jecxz
fs
inc
jne
lret
lret
call
fwait
loopne
int
repnz
repz
mov
in
popa
into
sub
pop
inc
addl
in
mov
push
jo
xor
mov
imull
add
ret
scas
sbb
push
imull
mov
sbb
pcmpeqw
dec
ret
adc
pushf
imul
sbb
push
dec
in
add
or
add
icebp
icebp
jbe
adc
adc
mov
sbb
sar
sbb
fstpl
and
stos
push
pop
cmp
scas
cmpsb
cmp
movsl
lods
push
shrb
jle
rcl
pop
xor
xchg
sbb
mov
shll
iret
xchg
add
inc
pop
sti
fsubs
leave
mov
xchg
popf
cmp
orb
push
sti
fists
data16
jg
test
xorl
xor
cld
and
jge
mov
imul
mov
popw
out
js
sub
xor
daa
mov
mov
test
adc
fstps
inc
pop
inc
and
xchg
mov
push
scas
xchg
out
lea
insb
jg
xor
pushf
jb
pushf
mov
aas
sti
into
ds
mov
loopne
loopne
sti
mov
sbb
shrb
add
icebp
inc
aas
fadds
rol
adc
out
mov
xor
lock
jp
out
push
push
xchg
sbb
lock
lock
sub
mov
xor
pop
mov
inc
xor
add
pop
mov
jp
pop
sbb
sbb
jecxz
notb
sarl
into
popa
mov
sarl
add
dec
adc
sbb
and
adc
pusha
loopne
xchg
subb
loopne
or
adc
shlb
fmull
cs
jbe
cmp
add
stos
push
repz
clc
shlb
xor
cmpsb
es
push
inc
fwait
sbb
jle
test
and
int
xchg
xchg
fldcw
loope
push
and
mov
push
cmpsl
adc
inc
jle
push
pop
mov
fwait
mov
addb
data16
jmp
mov
pop
xchg
sub
std
push
in
inc
add
cltd
push
decb
dec
lret
sbb
jp
dec
enter
lds
call
push
inc
jne
leave
jns
fcmovu
and
adc
jge
sbb
jo
push
cmp
sbb
add
repnz
popf
xchg
popa
aam
and
adc
xchg
arpl
mov
rclb
loop
dec
ret
out
mov
sbb
sbb
mov
mov
mov
in
jecxz
jno
xchg
push
cmp
mov
leave
cmpsl
and
cld
cmc
stos
inc
xchg
xchg
xchg
or
or
sbb
add
xorl
lods
and
call
in
lock
incb
xchg
mov
lods
outsl
mov
ja
mov
scas
aam
ss
sub
pop
mov
or
lahf
add
std
test
imulb
mov
or
and
push
insl
hlt
dec
je
ss
les
xor
xor
jmp
xchg
xchg
cli
jge
sbb
dec
dec
push
fs
adc
adc
and
mov
pop
out
arpl
std
lahf
cmp
add
mov
out
mov
fwait
int
push
or
ljmp
or
and
adc
addr16
push
xor
lock
dec
xchg
xchg
mov
inc
push
loop
inc
xor
pop
addr16
mov
addb
xor
adc
mov
sbb
add
mov
inc
stos
daa
mov
inc
and
push
je
popa
cmpl
lret
mov
pop
scas
in
lods
dec
popa
mov
pusha
pop
push
jo
pop
fwait
or
cld
cld
cmpsl
bound
stos
push
and
test
stos
rclb
mov
div
inc
popa
aam
mov
loop
movaps
jmp
add
add
jge
xor
pop
pop
xchg
test
je
add
cmp
cmovs
in
inc
adc
mov
inc
push
popf
loop
sbb
call
mov
movsl
outsl
push
mov
jae
xor
test
mov
xor
mov
enter
add
popa
leave
push
js
testb
or
shrl
js
or
sbb
mov
or
lods
jnp
cs
xor
push
lods
pop
push
std
pmaxsw
imul
lret
or
jo
ret
add
out
es
and
pop
push
or
push
jno
and
ret
xchg
or
bound
lods
fnsave
cmp
inc
cs
xor
mov
call
dec
movsb
xchg
mov
push
or
jne
mov
je
sub
out
pop
cli
mov
mov
outsl
cwtl
call
inc
mov
adc
cmp
imul
out
or
mov
jae
mov
push
xchg
mov
fs
jb
aaa
xor
loopne
inc
jg
sbb
mov
adc
enter
mov
push
xor
scas
jecxz
xchg
clts
mov
push
xchg
js
lret
mov
add
mov
daa
fs
sbb
sbb
cmp
imul
mov
dec
and
insb
xor
fwait
or
adc
gs
test
bound
mov
inc
pushl
inc
inc
sub
jae
aaa
dec
gs
pop
imul
mov
push
idivb
xor
adc
xchg
mov
sbb
jecxz
test
xchg
gs
xchg
orb
ljmp
out
lds
push
and
push
pop
mov
dec
mov
xor
mov
cs
jo
int3
fmulp
pop
mov
push
push
mov
add
dec
cwtl
sbb
inc
adc
mov
aad
dec
or
mov
jecxz
lret
sti
lods
push
inc
in
add
mov
outsb
punpckhdq
dec
push
inc
imul
and
xchg
lds
pop
cmc
test
fildl
ret
lea
adcb
popa
pusha
arpl
add
xchg
out
jg
pop
rol
test
adc
repnz
andl
sbb
xchg
cmp
aam
popf
loope
mov
push
dec
pop
insb
sbb
or
sahf
cmp
sbbl
jo
cltd
pop
aaa
inc
mov
into
jns
adc
hlt
cmp
or
push
mov
sti
inc
out
push
shlb
cmpl
lcall
lret
sbb
cmpl
add
in
jne
sahf
xchg
cmp
push
fs
jg
push
in
dec
testb
sub
push
scas
mov
sbb
outsl
jecxz
out
in
popa
cltd
xorb
lcall
pop
fimuls
xchg
mov
dec
popf
xchg
add
fs
es
dec
push
xchg
cmpsl
outsb
sbb
js
lcall
cwtl
sub
lock
cmp
faddp
imul
cwtl
inc
push
add
dec
mov
pop
jmp
stos
ret
out
jb
loop
inc
add
sbb
test
sbb
sar
cld
cmp
cmp
inc
aas
ss
jbe
jl
dec
je
cwtl
sahf
xchg
add
sub
push
jns
xchg
xor
inc
cwtl
dec
push
adc
fcompl
dec
dec
push
sbb
pop
popa
daa
or
gs
sbb
xchg
gs
repz
sbb
mov
mov
xchg
test
je
mov
fwait
rcr
ret
lret
mov
push
dec
and
shrb
out
adc
ficomps
pushf
into
lods
scas
sub
adc
loop
icebp
lods
mov
test
ds
and
dec
cltd
pop
adc
jl
adc
in
add
mov
or
pop
int3
outsl
popa
in
mov
out
push
mov
xchg
int
mov
cmp
aam
sahf
push
push
in
nop
in
sub
and
sub
test
fnstcw
push
xchg
push
pop
dec
cltd
mov
inc
fsubrs
ficoml
dec
leave
jns
les
inc
push
in
or
hlt
xchg
lret
xlat
inc
shrb
lods
imul
and
pop
in
out
repz
imul
pushf
fcomip
ret
test
in
enter
mov
jle
sti
ljmp
mov
sbb
jb
hlt
mov
je
imul
das
lds
sub
sub
xchg
adc
adc
cmp
cmp
jnp
pop
and
pop
push
movsb
push
push
stos
repnz
inc
jge
les
mov
cmp
insb
movsl
mov
mov
mov
cld
push
ret
or
testl
mov
movsl
xor
jbe
adc
js
inc
push
in
push
xchg
int3
loop
and
and
hlt
push
ljmp
loop
test
aam
fcmovnu
push
add
inc
cld
mov
jge
mov
test
mov
fwait
rcll
pop
adc
daa
inc
fstl
cmp
cmpsl
inc
inc
imul
add
sbb
rcrb
cmc
jp
adc
push
add
dec
int
int
xor
mov
and
ficoms
inc
mov
test
mov
xor
arpl
mov
jl
clc
cld
stos
mov
lods
mov
nop
xchg
jns
or
stos
add
sbb
loopew
jmp
std
fdivs
and
adc
mov
popf
mov
push
jb
cmc
adc
fwait
ljmp
ficompl
mov
mov
jo
mov
push
out
fucomi
repnz
lds
popf
dec
jne
repz
dec
add
mov
pop
jmp
and
hlt
movsb
aas
movsl
or
add
int3
jmp
pop
sbb
dec
jmp
stc
test
pushf
sbb
test
and
lret
mov
cmp
aaa
inc
add
dec
push
rclb
add
mov
outsb
imul
pop
adc
dec
jb
or
movsb
jb,pt
xor
int3
imull
mov
insb
stc
sbb
cli
push
adc
int3
pop
push
test
inc
xchg
movsl
loop
sub
xchg
mov
aam
push
cltd
adc
add
jg
cmp
xchg
jecxz
or
insl
leave
add
lcall
out
add
pop
xchg
in
mov
js
and
outsb
add
mov
lds
mov
je
inc
lret
movsl
sub
sub
jmp
sbb
ds
xchg
push
push
xchg
inc
or
lcall
mov
or
in
inc
test
ror
leave
and
movsl
xor
mov
push
sub
jmp
call
xor
icebp
in
test
add
ljmp
aam
imul
push
movsl
push
push
dec
icebp
lds
cwtl
cmp
xor
or
mov
and
mov
cmpsl
ret
xor
pusha
mov
push
pop
pop
mov
jge
push
lcall
push
clc
adc
leave
or
sbb
out
imul
stos
jmp
dec
cli
movsl
jg
jb
xor
or
andb
push
mov
sub
pop
fisttpll
add
ror
add
movsb
les
hlt
ljmp
pop
adc
push
sbb
pusha
les
jg
movsl
in
gs
insb
cltd
cmp
stc
mov
fcompl
and
rcl
clc
pop
mov
and
and
repz
pop
dec
lods
test
data16
xor
add
popa
add
sub
mov
lret
xchg
aaa
data16
pop
in
sti
lahf
cmpsl
movb
outsl
cltd
in
in
dec
jns
ja
lret
push
adc
lock
ds
lods
call
lret
pop
jle
mov
cli
dec
xor
xchg
dec
jns
adc
mov
xor
iret
shrb
jnp
les
jne
test
test
xchg
or
imul
or
cmp
jl
es
lods
mov
mov
dec
in
decb
sub
fisubrl
mov
mov
push
adc
add
mov
cld
lea
in
lcall
mov
jnp
nop
inc
dec
mov
xchg
adc
fdivr
sbb
xor
pusha
cmpsb
int
mov
andb
test
mov
and
and
movsb
les
add
aam
pop
jg
fmuls
enter
jmp
insb
sub
loop
dec
pop
inc
mov
pop
rcll
mov
cltd
out
dec
sub
or
popl
scas
push
xchg
mov
sub
sbb
or
adcb
mov
pusha
inc
jl
sbb
ljmp
not
mov
add
cld
adc
sti
mov
popf
cmpsb
jmp
xor
mov
push
sub
sub
mov
pop
push
jecxz
stc
lahf
testl
mov
inc
inc
push
push
jl
outsb
hlt
outsb
fimuls
push
pop
xchg
icebp
cmp
ret
les
mov
mov
push
xchg
pop
xchg
sahf
xchg
sub
fmuls
mov
push
or
arpl
ja
mov
movb
push
and
xchg
shll
mov
adc
negl
or
mov
lods
call
cmp
mov
xor
inc
or
imul
or
stc
lret
movsb
repz
test
xor
arpl
in
inc
int
add
pop
add
cmp
inc
insb
mov
repz
sbb
xchg
add
add
sub
cli
in
push
loop
jp
sbb
adcb
add
les
int
adc
pop
cmc
test
mov
jg
std
enter
dec
orl
scas
fildl
dec
mov
insb
out
inc
adc
in
mov
jg
mov
mov
rcr
movsb
rcrl
scas
pop
xchg
clc
ja
pusha
clc
jb
push
ds
xchg
and
test
bound
dec
xor
mov
cltd
pop
inc
icebp
add
cltd
ljmp
shld
lea
fildl
fimull
incb
pusha
mov
shlb
xor
ljmp
cmpsl
push
sbb
add
jmp
mov
out
add
fmul
pop
inc
out
sbb
mov
xchg
repz
sub
sarb
adc
xor
and
lcall
dec
loop
lds
subb
xor
scas
pop
orl
decl
outsl
push
rcrl
in
pop
push
push
lret
ja
mov
push
and
push
inc
std
std
int3
pop
mov
ficoml
dec
xor
std
xor
clc
mov
movsl
push
jae,pt
lahf
imul
loop
push
cmp
pop
inc
push
mov
int3
sbb
addr16
sub
add
ds
jp
adc
mov
mov
in
pop
or
ja
add
push
add
and
sbb
pop
sub
sub
cs
shll
jo
add
mov
arpl
sar
pusha
xor
mov
jge
icebp
cltd
cmp
fildl
xor
fcomp
jl
dec
and
pusha
bound
sbb
jb
mov
sbb
push
mov
dec
scas
ljmp
push
push
jb
dec
test
xchg
cmp
xor
mov
mov
rcll
pop
xchg
test
jmp
mov
popf
pop
sbb
outsl
mov
fwait
mov
inc
add
mov
sub
push
test
add
or
mov
adc
pop
insl
and
fdivrl
pop
mov
std
int
inc
sbb
xchg
decb
outsl
mov
mov
mov
loope
jo
sub
pop
mov
sbb
aad
pop
inc
imul
mov
aas
mov
cmpl
mov
icebp
or
xor
jmp
xchg
mov
fstpl
in
mov
jl
je
sub
push
inc
insl
fnstenv
push
arpl
test
mov
xchg
ds
and
and
mov
xchg
je
inc
idiv
inc
and
movsl
jnp
loopne
dec
shll
add
mov
inc
fcmovnbe
cmp
xchg
scas
sti
ss
cmp
sub
ja
loope
jp
mov
jl
out
xor
lcall
cmp
repnz
mov
mov
arpl
cmp
adc
mov
mov
sub
pop
jmp
and
fs
jbe
or
xchg
jnp
xlat
jle
ja
and
inc
mov
mov
push
rcll
dec
adc
lahf
notb
mov
ja
jns
sub
and
sub
loope
push
lret
out
fsub
pushw
push
mov
ret
lods
aas
xor
xor
adc
add
sub
shlb
lcall
cmpl
fidivs
mov
fwait
ljmp
adcl
mov
in
int3
arpl
dec
xor
and
jle
cmpsl
push
rcr
cmp
pushf
out
push
cli
leave
inc
sbb
testl
sub
or
imul
lcall
pop
mov
test
ret
insl
cmp
lea
pushf
pop
push
cmp
xchg
jb
pop
mov
lods
mov
jmp
jbe
jp
js
lea
fadds
rorl
sub
pushf
faddl
movsb
stos
mov
or
push
data16
lret
mov
in
mov
mov
inc
outsl
ljmp
push
lret
lret
jne
pop
push
dec
add
mov
xchg
mov
cmpsb
sahf
stos
pop
push
imul
push
jp
pminsw
addr16
pop
or
imul
fwait
cmp
jecxz
test
mov
dec
ja
mov
addl
int3
in
push
cmpsb
mov
fwait
lcall
out
cmp
pop
add
jl
out
stc
repz
adc
mov
jp
popf
adc
popf
add
jmp
test
lods
pop
jge
mov
aam
in
arpl
inc
lock
xor
jmp
daa
out
mov
cwtl
push
cli
inc
pop
ret
scas
add
and
push
and
and
push
mov
pop
jae
ret
cmp
js
cmp
pop
or
mov
sbb
out
sub
sbb
and
fistps
mov
sub
test
ja
xor
pop
js
cmp
loopne
jge
cmp
outsl
or
and
and
mov
jae
dec
pop
gs
in
addl
mov
sti
jp
clc
stos
adc
jbe
into
and
xchg
pandn
lret
sbb
icebp
dec
lret
pop
inc
ret
and
cmc
jnp
cwtl
dec
jge
iret
inc
push
xorl
jl
mov
cmp
lret
pop
cmp
mov
shrl
jae
out
push
mov
in
frstor
ja
int3
sbb
adc
nop
popa
ljmp
add
scas
push
push
insb
cmp
arpl
test
and
mov
jb
lock
lods
mov
test
mov
jl
sahf
push
fs
mov
xchg
lret
push
fiadds
das
negl
dec
out
xchg
mov
imul
xchg
fwait
jno
inc
les
dec
mov
enter
adc
push
jo
mov
xchg
jae
shlb
sti
cmp
lret
icebp
adc
test
mov
test
fcmovb
loopne
stos
cld
into
sbb
dec
mov
int
jne
pop
ja
xlat
negl
xor
xor
inc
imul
les
pop
ficoms
jnp
fadd
inc
test
lahf
or
inc
lcall
les
popf
add
jl
cmp
out
lcall
in
lock
cmp
hlt
mov
sub
pusha
jae
sbb
lret
dec
pop
xchg
push
in
add
ret
adcl
push
insl
cltd
rcl
sbb
jge
es
je
clc
fwait
mov
lret
int
pushf
sub
addr16
aas
je
or
and
mov
faddl
data16
jb
ret
push
sar
cmp
aas
and
sub
pop
pop
xor
outsb
out
das
sbb
fs
mov
jbe
pop
cmp
nop
mov
js
sbb
aaa
mov
push
sub
xor
dec
mov
or
xchg
fnsave
mov
mov
in
shll
out
mov
and
rcll
out
inc
insb
push
pop
insb
and
mov
loop
push
mov
les
mov
lods
push
push
out
dec
push
jne
dec
adc
and
push
movsb
scas
out
aad
or
sbb
pop
movsb
lahf
mov
jo
add
xor
out
rcll
pop
pop
daa
and
add
pop
jo
scas
mov
arpl
dec
pop
imul
ja
jge
icebp
test
mov
jo
test
xor
scas
lods
ljmp
rol
lds
dec
cli
in
arpl
shr
and
enter
jg
addb
sbb
sbb
mov
and
mov
push
mov
sbb
push
sub
dec
loope
push
push
adc
inc
daa
xor
inc
insl
ja
out
or
sub
test
dec
adc
dec
inc
dec
sub
sub
mov
mov
mov
pop
repz
in
add
inc
test
sahf
mov
add
and
pop
inc
mov
push
xor
inc
rcrl
out
in
sub
clc
dec
leave
sbb
js
jne
cmp
sbb
in
mov
lds
push
std
lock
mov
ret
jl
mov
push
xchg
sub
pusha
mov
out
pushf
mov
mov
mov
mov
sahf
fsub
dec
ljmp
jbe
jg
push
cmpsl
ret
not
insl
mov
lock
mov
ja
imul
fadds
adcb
cvttps2pi
add
scas
dec
mov
jae
in
add
cmpsl
xor
jl
inc
sbb
orb
sub
and
jge
pop
and
xchg
cwtl
jae
decl
outsb
mov
adc
xchg
mov
ret
and
mov
dec
test
lret
lock
sub
cli
loop
adc
xchg
and
sub
sbb
movsl
jns
idivb
xor
mov
scas
pop
fisubl
mov
call
jbe
push
subl
shrb
mov
jle
or
loope
das
mov
jge
cmc
mov
cmp
add
add
shlb
outsl
enter
or
arpl
pop
pop
outsb
mov
dec
sub
dec
pop
push
loope
mov
mov
push
repz
xchg
jle
dec
dec
fldenv
repnz
pop
fistl
loope
mov
xlat
mov
jnp
cli
mov
cmpb
clc
call
es
sbb
sub
pop
aam
inc
std
push
xor
jge
rcrb
mov
pushf
cmp
das
mov
jbe
mov
shl
mov
xor
push
inc
sub
mov
inc
xlat
out
mov
xor
push
xchg
ret
cmpb
dec
scas
cmpsb
dec
push
jl
decl
and
aas
out
or
jb
jg
dec
mov
cmc
out
data16
pop
pushf
lods
adc
cli
cli
cmpsl
ret
jae
dec
scas
pop
push
aaa
push
cmpsl
leave
mov
test
lds
push
add
lds
repnz
and
stc
cmp
pop
in
jp
repnz
sbb
addr16
call
jle
test
cltd
jb
lock
mov
dec
daa
test
inc
inc
cmpsl
mov
push
pop
in
add
push
aad
clc
scas
pop
aas
push
xchg
sahf
into
adc
jl
in
jg
jmp
ljmp
cmp
mov
sub
sbb
lret
aas
lods
jmp
cmpsb
cmp
cs
test
or
fsubr
sub
jmp
cmp
mov
pop
jg
dec
je
xchg
mov
sarl
ret
pop
xchg
loop
push
fidivl
insb
mov
pop
bound
leavew
cmp
loop
fsts
pop
push
sbb
mov
cmp
add
jmp
push
rol
imul
scas
outsb
push
push
imul
mov
mov
rcrl
push
aam
insb
mov
xor
mov
inc
sbb
scas
xchg
and
xchg
cs
inc
adc
mov
loop
divl
xchg
xchg
cwtl
sub
cmpsl
pop
dec
in
addl
pusha
sbb
sbb
ja
xorl
out
adc
add
dec
fldcw
ss
xor
pop
xor
jp
mov
and
insb
cli
mov
ret
js
pop
dec
test
mov
push
pushf
and
inc
sbb
addr16
mov
sbb
loope
dec
in
cmc
rolb
or
cmp
sub
jne,pt
test
push
aad
mov
rclb
stc
mov
dec
mov
mov
out
lahf
jle
aam
sub
xor
inc
ds
and
popf
daa
in
stc
call
xor
mov
imul
jb
daa
lods
and
mov
lods
enter
fsubrl
sub
imul
mov
ds
push
out
and
xor
mov
stos
icebp
inc
repnz
mov
xchg
arpl
and
inc
add
add
pop
cmp
cmp
jo
sbb
mov
in
adc
test
loope
jl
or
inc
inc
int3
aad
outsl
jbe,pt
sub
cmp
pop
sub
jae
into
sbb
clc
mov
rcr
mov
push
out
inc
enter
inc
cmp
pop
cmp
fnstsw
dec
xchg
pop
pop
adc
imul
iret
ret
mov
arpl
aas
in
adc
inc
decb
push
or
or
jl
iret
inc
loopne
pushf
xor
add
repz
nop
test
xchg
jg
xchg
arpl
insl
sarl
inc
arpl
jmp
cmp
aam
xchg
sti
cli
mov
or
cmp
mov
pop
mov
jle
mov
push
pushf
or
adc
or
pusha
pop
dec
shlb
inc
ljmp
jmp
xchg
fcmovne
cmp
sub
or
out
mov
dec
sbb
or
cmp
shrl
ss
and
push
xlat
or
cpuid
icebp
push
mov
lods
mov
mov
sbb
movsb
rcl
leave
mov
pop
cmp
mov
mov
icebp
fsubp
rolb
jno
lret
mov
push
sahf
popa
add
enter
int
ja
loopne
cltd
mov
jnp
and
pop
inc
adc
aaa
sub
mov
loope
clc
cmp
insl
mov
arpl
stos
dec
xchg
clc
mov
lea
dec
and
mov
dec
rclb
data16
xor
cld
cmpsb
movsl
push
mov
cmp
cmp
xorb
pop
das
rcrl
rcr
push
movsb
clc
xlat
xchg
mov
inc
out
pop
out
pop
mov
andl
cmp
notl
inc
jne
fidivs
pop
les
lret
and
ret
mov
dec
xlat
repnz
mov
push
mov
ss
pushf
sahf
je
mov
mov
adc
imul
adc
rolb
mulb
rol
jb
mov
int3
in
mov
pop
mov
dec
ds
in
or
imul
sarb
mov
cmp
or
mov
cmp
out
mov
cmp
inc
sub
leave
bound
xor
stos
dec
stos
js
into
adc
loopne
lahf
jge
jae
imul
xchg
ret
mov
xor
fimuls
and
cmpsb
adc
sbb
sbb
mov
mov
cmp
ficoms
or
rcrl
fwait
call
push
pop
xor
cmp
addr16
inc
jle
xor
call
lret
pop
pop
push
lret
inc
pop
hlt
les
es
out
ljmp
daa
int3
movsl
mov
sahf
push
bound
or
loope
mov
cmp
push
out
pop
orl
call
jmp
jbe
aas
data16
out
mov
sbb
test
arpl
jl
data16
and
lea
outsl
sub
jle
sbb
lods
mov
or
pop
mov
push
xchg
cmp
daa
gs
nop
inc
orl
inc
fscale
sub
movsl
popa
cmp
xchg
test
rcl
cmc
pop
mov
fstps
test
sahf
mov
nop
mov
cli
rorl
leave
adc
bound
push
mov
nop
inc
popf
jp
outsl
pushf
insl
fldt
bound
sbb
dec
in
shrb
xlat
data16
in
xor
lea
inc
enter
jge
xor
push
in
bound
pop
cld
mov
jecxz
fs
add
mov
dec
subl
add
sub
push
nop
xchg
add
out
mov
nop
fcmovnbe
repz
in
ds
nop
and
mov
or
in
mov
pop
add
cmp
pop
mov
lock
or
pop
lcall
sti
xor
rorl
push
jno
cmp
mov
test
gs
inc
mov
or
ret
inc
adc
and
or
jl
dec
inc
ret
mov
mov
mov
mov
xor
adc
xor
sub
cs
and
cmp
pop
sub
add
xor
stos
icebp
jle
mov
push
dec
scas
push
subb
add
pop
mov
bound
xchg
mov
and
sub
mov
xchg
inc
cs
mov
mov
push
stos
mov
xchg
add
jbe
jb
fs
popf
push
andl
push
adc
outsl
movsb
cmp
cmpsl
push
mov
addr16
shlb
sbb
jge
adc
xor
xchg
cmp
xor
xchg
sarb
and
aas
cmp
movsb
or
xor
ja
call
and
mov
adc
push
mov
add
add
pushf
sahf
outsl
lret
add
stos
in
das
mov
adc
pop
mov
jb
pop
cmp
rol
push
adc
repz
xlat
nop
mov
push
mov
pop
sbb
push
sub
jmp
jo
mov
push
fld1
in
lds
sbb
and
mov
das
push
cld
sbb
mov
arpl
adc
leave
mov
adc
std
xor
loope
lds
jbe
push
je
inc
pop
adc
les
mov
cld
pop
pop
dec
fsubrs
add
rorl
push
add
out
xchg
mov
leave
sub
mov
ss
iret
out
pop
xchg
add
les
sub
ds
jb
movsb
in
clc
xchg
mov
sbb
cmp
mov
loopne
call
cli
jnp
sahf
mov
repz
sub
int3
pop
and
and
add
mov
scas
repz
push
mov
jmp
sbb
popf
ret
ret
push
xchg
xchg
push
pop
mov
mov
lods
adc
jp
inc
push
icebp
inc
mov
or
or
orb
movsb
cs
push
repnz
xchg
rorl
or
dec
dec
cli
pop
ss
xchg
xchg
sbb
dec
aas
pop
mov
xor
fstps
xor
addl
jbe
sbb
sti
mov
pop
and
cwtl
outsb
push
addb
xor
pop
or
xlat
push
adc
push
lret
xor
imul
adcb
mov
in
dec
mul
sahf
dec
xor
call
clc
or
xor
or
sub
cmp
dec
lahf
sbb
daa
dec
push
inc
sub
mov
mov
test
jns
push
jno
mov
pop
arpl
or
dec
mov
mov
cmp
hlt
cmp
iret
jmp
sbb
out
add
out
adc
addr16
dec
dec
dec
push
mov
lcall
pop
lods
xorb
rcl
add
cmp
mov
dec
mov
push
pusha
out
adc
loopne
lret
adc
imul
stos
lret
rdpmc
fistps
mov
mov
and
sub
jmp
flds
fs
xor
and
sbb
das
mov
test
push
andb
popa
mov
push
jne
aad
ds
mov
jecxz
adc
inc
stos
or
mov
dec
xor
jns
das
inc
in
cmp
xor
sti
rcr
dec
mov
sti
lock
imul
adc
sub
mov
sub
mov
cli
jmp
fsubrs
dec
enter
fnsave
and
out
mov
mov
enter
cmpps
dec
int
imul
cmp
in
adc
add
add
mov
test
cmp
sub
shll
in
outsl
ret
lea
mov
aam
cmp
add
sbb
call
fdiv
mov
iret
repz
sub
ret
sub
lock
popf
adc
mov
push
adc
aad
stc
ljmp
sub
pop
aaa
in
push
dec
stos
xchg
pop
movsb
in
rcrb
mov
sbb
negl
pop
js
fs
fdivrs
pop
fidivrl
or
cmp
hlt
adc
rcrb
mov
cmp
push
dec
arpl
xor
and
pop
negb
aad
lcall
lea
dec
insb
lea
sub
jno
cs
icebp
mov
or
dec
mov
cld
mov
nop
daa
neg
insl
in
xor
aaa
inc
dec
outsb
add
jle
jne
cmpb
push
sar
out
pop
je
iret
pop
or
dec
lods
js
loopne
repnz
mov
lea
bound
adc
dec
mov
mov
inc
ficoml
sub
mov
scas
daa
iret
mov
mov
inc
decb
inc
notb
lcall
popf
insl
dec
iret
mov
lea
jnp
pop
cmp
xor
cmpsl
lret
outsb
loop
push
sub
test
lret
sahf
mov
in
test
sub
fwait
jb
test
aad
nop
xor
jecxz
inc
pop
and
cmp
jb
xor
or
pushf
aad
loope
das
insl
push
pop
mov
dec
mov
gs
xchg
mov
add
frstor
loop
mov
push
or
loopne
and
enter
int3
sti
fdivp
in
negl
cs
les
ret
sbb
fimuls
adc
cmpsl
mov
rcr
out
lret
ret
icebp
mov
push
push
push
jno
mov
ljmp
iret
or
and
dec
pop
dec
lea
and
cs
push
cmp
push
ret
imul
pop
nop
lods
loop
clc
and
aaa
cmp
xchg
and
pop
stos
mov
in
push
dec
sahf
loopne
loope
sub
aad
inc
jge
or
push
lods
pop
or
rorb
mov
xor
and
xchg
and
icebp
dec
fcoml
pop
popf
add
dec
jmp
cld
xchg
movsb
in
sbb
sub
ja
das
fiaddl
jmp
dec
ljmp
mov
mov
test
cli
out
cli
sbb
push
xchg
cs
dec
icebp
pop
int
cwtl
mov
lds
push
inc
mov
push
outsb
fnstsw
cmp
pop
ja
out
mov
sti
and
pop
out
sbb
and
test
mov
test
sbb
pop
pushf
mov
rorl
stos
dec
ds
sub
add
imul
mov
int3
jo
jecxz
inc
and
arpl
xchg
or
iret
push
jge
addr16
inc
arpl
pop
mov
push
add
mov
test
adc
pop
jae
push
add
sub
mov
jecxz
push
lret
xchg
cmp
addb
jp
mov
sbb
inc
pushf
lcall
jns
cmpsl
jmp
push
push
loope
icebp
out
aad
jmp
jle
dec
mov
mov
pop
dec
inc
mov
jmp
mov
cmp
cltd
dec
xorl
or
int3
jmp
sbb
mov
pop
gs
xor
outsl
mov
dec
or
sbb
cwtl
outsb
pushf
nop
andb
mov
adc
pusha
adc
lea
jbe
pushf
jp
js
add
ret
mov
mov
sbb
shlb
imulb
cvtpi2ps
pop
cmp
mov
mulb
lahf
aam
sbb
push
lahf
and
pop
sbb
js
pop
ja
pop
add
mov
insb
inc
fildll
movsb
xchg
fpatan
xlat
repz
mov
cmc
and
std
dec
stos
jns
mov
hlt
shl
and
pop
jnp
mov
aaa
ljmp
mov
ja
out
stos
sar
stos
fcomps
mov
sbb
add
fsin
fimuls
or
xchg
ljmp
aaa
sub
jb
jp
loopne
pop
jle
jmp
pushf
sub
out
jae
adc
and
les
cmpb
clc
movsl
inc
lds
pusha
call
lds
imul
mov
aad
mov
mov
ja
clc
jns
xchg
int
jbe
mov
vmovupd
jne
mov
push
jno
lcall
out
jo
fs
push
ljmp
push
ret
icebp
fs
clc
mov
xor
sar
xchg
and
and
xlat
push
pop
and
or
imul
mov
flds
and
mov
fs
mov
or
adc
and
pop
cmp
jbe
cltd
lods
xchg
jg
pushf
adc
jns
or
cmpsl
les
add
lea
stos
xor
xchg
scas
gs
std
add
fcoms
inc
mov
jmp
xchg
ss
add
jae
dec
out
mov
push
mov
popf
mov
das
jne
jmp
std
es
mov
inc
or
or
jo
lcall
jmp
jl
out
subl
push
mov
cmpb
inc
lock
mov
lahf
add
pop
ss
mov
pop
ror
inc
mov
shl
pushf
push
add
inc
rcl
repnz
addr16
inc
ret
and
or
test
mov
push
scas
jecxz
push
sbb
popa
jg
xchg
add
and
mov
push
data16
lods
push
adc
mov
fimuls
loope
dec
stos
push
rolb
cltd
fwait
mov
cmp
push
mov
sbb
stc
cmp
cmc
inc
jnp
insl
push
into
in
or
push
sbb
pop
testl
lahf
cwtl
scas
mov
fisttpl
dec
push
push
mov
cmp
xchg
jne
cli
xlat
idivl
adcl
xchg
stc
mov
pop
addr16
frstor
jp
hlt
cli
mull
xor
fdivrl
outsl
dec
add
sub
lods
fwait
mov
sarl
aad
mov
cltd
jo
ret
xor
mov
aam
imul
cmc
mov
cmp
leave
scas
mov
and
pusha
mov
jle
cmpsl
or
or
jge
push
inc
cwtl
push
ljmp
mov
adc
pop
int
ljmp
mov
mov
call
aas
pop
lods
cmp
or
sbb
jne
lcall
mov
sub
hlt
sub
jnp
pop
pop
add
xor
jecxz
xor
cmpsb
test
stos
mov
pop
cmc
dec
nop
mov
jae
inc
fwait
jmp
pop
push
jb
ds
mov
pop
push
sbb
inc
jne
jbe
cmpsl
push
shrl
inc
lock
add
mov
cmp
ret
inc
sub
shrb
push
out
pop
xchg
fcomip
add
lods
dec
xor
test
clc
mov
jns
sbb
cs
pop
add
out
add
or
sbb
int3
pop
inc
xchg
cmp
loop
leave
divb
mov
mov
mov
mov
roll
sti
cmp
mov
or
cmpl
or
xlat
xor
and
jns
jp
adc
inc
lock
mov
addb
sbb
std
scas
pushf
mov
lahf
aad
sarl
xor
add
mov
cs
jl
mov
push
cmpsl
add
sbb
sub
stos
sti
xor
push
push
int3
out
xor
inc
pop
lret
adc
fwait
dec
jp
fwait
mov
push
dec
mov
xchg
data16
loopne
popf
push
loopne
movsl
dec
mov
push
xchg
hlt
rcl
popf
nop
xlat
popa
mov
adc
loopne
xor
in
lods
mov
repnz
push
xchg
mov
adc
imul
es
adc
xor
and
shrl
into
jns
mov
int3
push
aad
sub
jmp
push
clc
data16
mov
sub
movsb
dec
sbb
loope
mov
jo
pop
cmpsl
fimuls
add
dec
sbb
sbb
push
lock
es
rcll
movsb
xchg
pushf
cmc
mov
dec
mov
sbb
mov
adc
daa
jns
out
int3
std
jl
jge
dec
mov
pop
lods
pusha
mov
sub
scas
mov
pusha
test
inc
sub
mov
mov
psllw
jno
call
inc
mov
or
outsl
lret
movsl
lods
outsb
xor
jge
subl
cltd
mov
gs
jmp
push
repz
pop
and
dec
mov
inc
lcall
dec
xchg
ret
add
das
mov
and
add
dec
and
sub
out
iret
arpl
adc
inc
inc
pop
jge
jb
push
ds
pop
icebp
inc
sbb
movsb
jbe
or
cmp
mov
test
inc
scas
mov
lock
rcr
push
negl
sbb
jl
mov
shll
sbb
enter
out
dec
ljmp
add
lea
movsl
dec
sbb
je
aas
adc
xchg
orb
cld
and
arpl
sbb
pop
test
lret
bound
dec
cmpsb
cli
mov
lret
pop
or
mov
aad
mov
jle
out
ss
out
test
xlat
inc
jb
xor
dec
or
aaa
imul
call
aad
mov
cmp
imul
les
push
movsb
shr
xor
mov
sbb
roll
insb
add
lea
adc
ds
sub
or
aaa
jb
adc
cmp
jns
imul
pop
mov
stos
mov
jne
jp
aaa
test
jns
mov
xchg
enter
add
xor
lahf
add
adc
scas
lret
sti
mov
xchg
push
push
sub
jno
mov
jns
dec
or
xor
punpckldq
loop
andb
enter
and
inc
add
popf
jge
int3
subb
mov
in
sub
clc
adc
lahf
mov
test
fdivrp
stc
or
mov
push
pop
and
or
dec
xor
pusha
rcl
xchg
or
cmpb
cmp
dec
psubusb
popf
stos
fs
mov
cs
xor
mov
dec
icebp
and
inc
arpl
pop
mov
lret
pop
cli
fmull
adc
jnp
pop
mov
pop
sub
mov
xchg
xchg
or
out
adc
mov
jecxz
adc
pop
dec
icebp
insl
call
mov
movsl
testl
jl
scas
adc
jecxz
cmpl
add
mov
test
ret
mov
mov
scas
push
or
sub
ss
jg
jnp
ds
int
jle
sub
call
mov
cli
sbb
cmp
inc
or
push
push
mov
push
data16
and
repnz
mov
pop
mov
push
rorl
mov
jbe
imul
mov
dec
push
cltd
mov
gs
lret
dec
mov
pusha
dec
sbb
sbbl
mov
cwtl
sbb
ljmp
cmp
mov
xchg
or
cmp
jp
addb
sbb
sub
pop
dec
xchg
mov
mov
lcall
jne
scas
inc
mov
pop
mov
jbe
mov
cltd
mov
inc
jp,pt
enter
fstps
hlt
push
xor
movsb
add
dec
movsl
adc
xchg
xor
fcmovu
lock
repnz
aam
or
aam
dec
xchg
push
ret
fwait
sbb
in
mov
adcb
jnp
mov
movsl
dec
hlt
cmpsb
sbb
mov
add
mov
inc
xor
fidivs
stos
ljmp
fstps
inc
lret
leave
mov
jp
adc
xor
jmp
and
adc
xchg
cmp
mov
mov
movsl
mov
inc
cmpb
stc
divb
repz
or
out
add
fcoml
cmp
imul
pop
movsl
push
insb
out
test
jb
pop
sbb
aad
cmove
arpl
pop
pop
push
mov
pop
sub
mov
lods
xor
push
out
std
aaa
test
or
dec
jnp
orl
sbb
mov
test
ss
loopne
shll
movsl
ss
dec
mov
lahf
stc
jno
cmp
and
mov
sub
decl
xor
jb
movsl
imul
gs
dec
data16
xchg
inc
jmp
out
push
mov
ja
sub
add
cmp
movsb
dec
xor
cwtl
or
outsl
inc
imul
ljmp
mov
and
push
mov
jg
sbb
mov
test
testl
xchg
mov
rorl
mov
dec
push
cmp
cltd
sub
xor
xor
aam
mov
inc
or
popf
adc
ret
fcom
mov
into
scas
jno
mov
pop
mov
adc
pop
sub
addr16
or
sub
fwait
call
jo
and
std
addr16
test
mov
cs
std
inc
pop
stc
mov
ja
inc
push
dec
jge
mov
or
fildl
enter
or
pop
insl
xchg
fldl
jecxz
imul
add
dec
mov
lds
ret
jo
mov
cs
stos
xorl
stos
push
dec
xchg
cld
lahf
nop
mov
gs
push
lock
sbb
aam
sub
iret
mov
hlt
jg
mov
ds
psubd
xchg
xchg
mov
jns
or
in
jge
push
and
pushf
shll
popf
fildll
test
sub
stos
psraw
mov
add
and
andl
test
pop
cmpsb
xchg
jecxz
mov
filds
lahf
jne
and
ret
lods
lret
fldt
sub
jp
sbb
into
pop
rclb
aas
inc
or
orb
xchg
add
stos
mov
cmp
sub
mov
jnp
pop
cltd
rclb
in
loopne
rclb
mov
pop
sbb
rol
in
bound
xchg
mov
or
stos
add
or
bound
ret
fwait
shl
and
aad
nop
repnz
into
xchg
mov
cltd
iret
adc
mov
push
lret
push
inc
out
out
std
lods
sahf
push
test
pop
in
xchg
jg
pop
push
cmpsl
cmp
cs
movhps
and
fwait
repz
push
mov
scas
inc
aam
mov
push
xchg
cmp
mov
movsl
jp
into
repz
imul
enter
js
adcb
cmp
test
in
cmp
xchg
xor
inc
pop
int
adc
dec
outsb
aad
mov
cli
dec
xor
out
data16
cmp
or
test
mov
pop
mov
aas
cmpsl
and
xchg
fdiv
dec
pop
push
mov
push
fwait
lock
jne
dec
fsub
subl
mov
sarl
aas
mov
and
mov
jle
js
fistl
test
mov
es
adc
std
mov
mov
cmovp
mov
stos
lea
in
add
sahf
sti
out
sbb
adc
sub
dec
pop
outsb
xchg
in
mov
mov
jns
in
mov
movsl
rcr
sbb
jno
cmc
jo
jbe
js
enter
xlat
mov
ret
pop
test
ja
pop
sahf
nop
dec
and
jl
inc
pop
xor
rcrl
sub
mov
subl
pop
pop
in
pop
push
fistl
popa
rcrb
or
out
clc
pop
gs
xor
pop
mov
imul
mov
ret
or
xor
lret
xor
push
in
xor
scas
in
cwtl
clc
jns
add
mov
pop
mov
sbb
scas
insl
outsb
sub
mov
pop
lahf
rol
dec
ret
xor
mov
sub
push
test
adc
xchg
fs
dec
scas
mov
out
xorb
mov
adc
push
js
sbb
dec
lahf
adc
mov
mov
iret
cltd
cli
mov
popa
icebp
mov
movsl
xor
pop
mov
test
pop
pop
dec
push
push
fimull
insl
rcrl
push
orb
add
jbe
mov
fmuls
push
stc
mov
xor
mov
mov
jle
xor
sbb
push
sti
pop
iret
mov
aad
scas
scas
in
mov
dec
cmp
jle
mov
cmc
xor
pop
push
ss
xor
xlat
ss
scas
mov
mov
mov
jo
lcall
dec
push
test
lahf
subl
push
sbb
scas
pusha
add
mov
and
outsl
lcall
adc
jae
adc
mov
lea
mov
mull
das
cmp
dec
xor
dec
mov
imul
fbstp
fwait
adc
js
pop
fisubl
pop
lcall
lahf
mov
pop
push
lahf
jg
in
mov
xor
in
xchg
les
pushf
outsl
mov
data16
jno
cld
jge
test
in
dec
outsb
cwtl
xchg
je
xor
int
popf
pop
pop
xchg
sti
mov
icebp
xlat
add
aad
cmpsb
int3
add
push
sbb
sbb
out
daa
loopne
mov
push
jg
ljmp
sbb
push
dec
int
in
in
inc
in
pop
push
mov
pop
sub
sub
rcrl
jno
in
push
ret
movsb
sub
add
outsl
jmp
mov
out
test
adc
dec
es
and
xor
clc
test
jl
imul
and
sbb
mov
cmovo
xchg
aas
jecxz
sbb
and
push
xchg
push
sahf
jno
pop
es
popa
sbb
lock
leave
inc
jo
ret
sbb
ret
xchg
cli
pop
nop
dec
cmp
adc
add
push
ret
cmc
movsb
mov
xor
call
jecxz
mov
stos
pop
cmpsl
clc
add
mov
sub
sbb
push
mov
mov
push
fistpll
xchg
jns
loopne
fisubs
stc
nop
fucom
adc
cs
sti
lahf
inc
mov
push
in
outsl
insb
xor
xchg
mov
lret
xor
xor
lcall
movsl
mov
mov
or
imul
xchg
add
iret
or
aad
movsb
and
stc
std
dec
mov
jmp
js
out
jne
gs
data16
mov
lods
ljmp
lea
inc
jl
mov
and
jns
add
stc
out
movb
xor
xchg
mov
movsl
call
hlt
scas
pushw
ss
xchg
mov
out
dec
fs
xlat
jle
popa
orl
and
lds
push
repnz
ret
mov
jbe
leave
xchg
jnp
loopne
pop
mov
fldl
jbe
jne
ficomps
jle
icebp
aam
hlt
adc
inc
mov
test
cmp
outsl
sub
jmp
repnz
shlb
dec
je,pn
lcall
push
pop
xor
iret
cli
jbe
ficoms
push
popf
add
and
inc
push
xchg
mov
insb
lds
out
fnsave
xor
jle
sub
push
ror
loope,pn
push
adc
pop
outsl
inc
mov
rolb
inc
add
loope
push
fisttpl
dec
or
adc
adc
scas
xchg
out
sub
rcrb
cmpl
dec
test
cwtl
loopne
into
pop
enter
repnz
insb
mov
xchg
cmp
pop
dec
push
jae
adc
or
mulb
mov
or
jae
inc
mov
jge
or
or
pop
ficoms
jo
fdivrp
int
mov
xor
int
std
je
loopne
sbb
adc
jae
xchg
stc
mov
jmp
fiaddl
out
scas
xor
sbb
xchg
sub
stos
push
pop
test
adc
gs
fdivl
mov
push
je
inc
cwtl
hlt
cmpsl
notb
lock
lcall
or
cld
test
sbb
aaa
and
push
decl
hlt
mov
mov
cmp
sub
jge
adc
jne
call
mov
sbb
or
icebp
or
insb
aaa
pop
mov
xchg
movsl
andb
pop
dec
dec
jp
scas
pop
ret
xchg
mov
outsl
rcrl
mov
mov
xchg
into
inc
mov
shlb
jno
add
in
ss
mov
std
scas
arpl
jecxz
add
test
aad
adc
dec
pop
addl
sbb
scas
add
jb
inc
bound
mov
jp
mov
mov
inc
or
loopne
mov
jp
inc
and
stos
mov
push
adc
aas
xchg
inc
test
inc
jno
cmp
in
adc
sub
xor
lcall
jnp,pn
sub
xor
imul
cmp
clc
into
gs
sbb
mov
mov
cmp
mov
lret
mov
push
inc
stos
inc
pop
sahf
popf
cmp
pop
cmp
mov
xchg
xlat
dec
push
jne
lea
dec
movsb
ret
inc
and
sub
dec
test
adc
arpl
pusha
mov
jns
subl
enter
loopne
rclb
mov
mov
xor
xchg
dec
loopne
add
jne
test
jns
lock
jp
cltd
test
cmp
into
and
adc
jmp
fmull
adc
jae
roll
pop
mov
andl
push
inc
dec
sbb
sub
inc
call
addr16
xchg
in
sbb
test
dec
inc
enter
mov
fadds
jne
ljmp
es
fs
push
sub
or
xor
es
jmp
adc
sbb
xor
push
pop
push
xor
mov
sub
sub
les
jno
arpl
and
and
mov
lods
outsb
popa
out
and
inc
or
test
mov
mov
ja
sub
call
repnz
dec
inc
cmp
fbstp
es
push
inc
mov
push
dec
imul
xchg
jg
cmp
test
std
jg
enter
push
loopne
adc
xlat
mov
pop
pop
nop
jmp
scas
nop
lahf
cmp
aas
add
xchg
jnp
icebp
arpl
dec
nop
and
and
jb
xor
pop
adc
xor
push
cli
dec
scas
jge
jl
inc
int3
add
stos
fldcw
sub
out
hlt
shrl
mov
adc
call
add
lea
ficomps
push
mov
inc
mov
in
jge
imulb
pop
dec
jne
inc
test
lret
or
lea
sbb
cmp
mov
mull
xlat
jne
jmp
cmp
xorl
bound
xor
mov
fcomps
add
cmpsb
push
dec
aad
jmp
in
sub
xchg
mov
add
es
sub
jle
insb
mov
push
repz
scas
xor
xchg
cmp
popf
and
jb
sbb
jmp
mov
adc
pusha
out
hlt
ret
and
sub
fstpl
int
out
out
icebp
mov
in
daa
and
sub
je
push
ret
lods
sbb
mov
popa
int
cld
aaa
pop
fisubrl
cmp
sbb
jecxz
or
adc
addr16
shl
in
orb
dec
pop
mov
sub
pop
lcall
popf
rep
int3
ficomps
scas
ret
xchg
mov
ret
fisubrl
adc
adc
push
or
push
jl
ss
cmp
xchg
lock
in
popa
and
data16
mov
sbb
aam
cwtl
aad
dec
jle
les
movsl
std
es
mov
repz
xchg
jmp
leave
pushf
xor
in
inc
and
push
mov
scas
lods
pusha
movsb
lods
out
adc
ja
sub
sbb
xchg
lahf
imul
sbb
outsl
icebp
mov
dec
inc
dec
pop
inc
movsl
insb
jo
xchg
testl
popa
pop
stos
repnz
push
loope
shll
insl
mov
add
int3
aas
mov
call
mov
nop
in
fs
lret
mov
ss
frstor
pop
sbb
sub
sbbb
push
movl
push
notb
cmp
nop
sub
pop
shlb
insl
and
mov
lods
in
mov
xor
add
cwtl
inc
lods
daa
repz
fimull
jmp
xchg
xchg
mov
xor
sti
mov
aaa
out
enter
cld
xor
mov
nop
mov
mov
jb
jg
jns
lret
and
test
or
mov
mov
pop
loop
movsl
adc
cwtl
sub
sbb
ret
mov
xlat
aaa
lcall
inc
bound
lea
repnz
add
jno
mov
or
jns
out
roll
mov
aam
movsl
sti
lcall
lea
pop
shl
sbb
iret
mov
js
mov
adc
xchg
or
inc
cmp
leave
mov
jno
jae
jbe
lret
arpl
add
add
dec
pop
lret
je
rorb
fwait
testb
push
sub
ss
adc
in
call
push
sbb
aad
sub
mov
test
inc
out
jle
and
sbb
fldenv
daa
loop
xchg
lock
pop
lcall
mov
jne
repz
mov
xor
aas
xchg
sub
adc
xor
jmp
dec
sub
and
ds
incb
mov
in
insb
cli
mov
mov
mov
outsb
in
loope
mov
cld
jo
inc
mov
cmpsb
scas
scas
jl
cmpsl
mov
or
addb
fwait
adc
pop
push
xchg
out
mov
cwtl
and
test
stos
lcall
xchg
imul
mov
loopne
add
xor
lahf
inc
arpl
lss
icebp
sub
dec
rcr
int
and
adc
push
and
imul
push
js
call
or
and
jbe
add
subl
pop
sub
mov
dec
pop
filds
popa
rcll
pop
sahf
es
sbb
dec
xchg
js
daa
lcall
mov
inc
and
adc
stos
dec
adc
fistpll
gs
std
mov
jo
pop
mov
add
jle
push
sbb
lcall
push
jle
jl
xchg
xor
xchg
insb
test
pusha
popf
aas
push
add
mov
xor
out
call
fisttpll
js
scas
das
ss
jmp
je
ret
pop
je
aam
add
xor
inc
fs
xchg
fdiv
fs
add
std
mov
jecxz
xchg
in
adc
mov
arpl
add
jge
fcomps
xor
lret
xlat
xchg
pop
jae
cmp
int3
insb
mov
mov
loop
mov
subb
cmpsl
pop
adc
cmp
pop
or
ljmp
fildll
jns
xchg
pop
prefetcht0
imul
sub
jae
ss
dec
jne
adc
and
cmp
idivb
pop
cmpsb
or
fnsave
das
addb
sub
push
fs
popa
mov
lods
subb
out
pop
push
imulb
push
jae
adc
mov
xchg
je
shl
out
mov
jo
daa
out
adc
sub
adc
and
cmp
int
lahf
cmp
cltd
xchg
pop
cmp
sub
lahf
arpl
inc
test
push
imul
jne
pop
inc
scas
sbb
add
and
fs
jl
xor
imul
pop
lds
adc
bound
add
cmp
mov
inc
xchg
mov
add
mov
jb
stc
sub
stos
call
xlat
or
inc
ljmp
xor
enter
xchg
test
fwait
in
std
and
xlat
sbb
int
adc
repz
pop
dec
in
push
outsb
push
dec
inc
sub
lahf
repz
scas
inc
cld
roll
sahf
fst
inc
pop
mov
jp
jnp
repnz
stc
mov
bound
xor
popf
rcr
rolb
shll
add
addb
cs
iret
ljmp
nop
xchg
daa
inc
je
test
sbb
push
imul
xchg
addb
out
loopne
or
mov
popa
mov
movsl
mov
push
inc
rcr
cmp
sbb
les
and
fistps
lcall
mov
pop
ds
test
ljmp
ja
leave
mov
cmpsb
sub
loopne
pop
dec
and
or
lock
lret
ja
nop
popa
push
xchg
fists
push
test
or
sahf
lcall
ficoms
xor
cmpsl
lods
jo
mov
ja
mov
rol
clc
sti
cmpxchg
pop
das
inc
inc
xor
sbb
xchg
mov
out
pop
dec
loope
addr16
adc
mov
call
dec
ja
pusha
inc
jbe
sahf
ss
int3
leave
lcall
mov
leave
and
cwtl
outsb
iret
xchg
aaa
cmpsb
inc
mov
mov
add
inc
mov
cmpl
dec
mov
pop
xor
sbb
add
push
jno
into
mov
loopnew
xrelease
test
sti
sbb
loopne
xchg
fidivl
adc
xchg
adc
ja
pop
ss
sahf
dec
mov
loope
shlb
mov
shll
mov
mov
and
in
mov
test
outsl
pop
lcall
iret
test
daa
push
mov
loop
add
test
push
cmc
fstpl
inc
mov
dec
ds
mov
and
sub
or
push
testl
stos
test
out
push
andl
movsb
adc
push
repz
jo
jp
ret
ljmp
jbe
pop
scas
mov
arpl
or
jnp
xor
add
mov
or
inc
cs
gs
lea
mov
adc
and
mov
mov
fldcw
ljmp
xor
negb
insl
das
jae
xor
sub
pusha
cmp
pop
shlb
in
xor
cmp
mov
iret
lock
sub
pop
jne
push
dec
jmp
fwait
or
push
mov
js
pop
adc
mov
cmp
push
pushf
lock
jp
mov
inc
sub
dec
movsl
inc
dec
mov
dec
pop
add
rclb
jge
sti
mov
xchg
adc
xor
push
and
aam
mov
inc
mov
arpl
adc
loope
je
roll
sbbb
addr16
and
rorl
or
ror
outsl
daa
mov
or
fistl
xlat
and
and
in
lock
mov
cmpsb
bnd
dec
fwait
pop
lret
sbb
aaa
mov
cmp
xor
mov
mov
inc
lods
cmp
cwtl
dec
push
jecxz
sahf
sbb
mov
leave
or
xor
das
cmp
mov
mov
lea
fistpl
mov
in
mov
stos
add
and
push
and
sub
dec
out
imul
jae
das
sar
lea
call
cmpsl
fstpl
fistl
aas
jl
test
jae
xor
insl
cmpsl
mov
idivb
push
mov
add
popa
mov
in
out
xor
dec
mov
cs
sub
and
test
fidivs
mov
mov
xlat
xlat
mov
dec
fs
sbb
arpl
pop
shlb
push
mov
fdiv
icebp
leave
push
ret
stos
jne
popa
fsubs
pop
cld
insb
shll
jmp
inc
cmpsb
mov
outsb
sub
push
aas
xor
jne
out
mov
mov
dec
aaa
dec
mov
cmp
lret
and
dec
mov
push
fbstp
in
inc
rcrb
sub
cli
dec
mov
add
xchg
iret
xor
or
mov
into
pop
jo
fcmovnb
xor
gs
xchg
or
in
xchg
lods
mov
sub
inc
pop
enter
xor
adc
push
aad
stos
mov
xor
daa
pusha
leave
or
adc
sbb
jl
and
outsl
pusha
pushf
iret
dec
xchg
xchg
mulb
mov
mov
push
stc
out
lods
xor
sub
mov
xor
push
mov
or
stos
bound
arpl
pop
inc
jmp
push
mov
add
xor
push
xchg
loop
sbb
cmp
jl
ljmp
jno
loope
lahf
push
mov
add
inc
loopne
xchg
cld
loope
lahf
mov
repnz
loopne
adc
push
ret
je
jg
xor
and
neg
push
dec
js
loope
and
pushf
cmp
jne
divl
jns
rorl
lods
cmc
mov
or
sbbb
out
subb
das
adc
pop
lock
mov
jp
xor
in
lds
stos
aam
jmp
sbb
xchg
stos
adcb
add
and
mov
loope
mov
idivb
xchg
pop
cwtl
daa
sarl
mov
mov
adc
or
lret
fnstenv
adc
sbb
mov
mov
sbb
mov
stos
sahf
dec
call
loope
je
xor
push
pop
sub
xchg
sti
shlb
sti
sbb
or
xchg
addr16
aad
fstpt
add
lret
sbb
hlt
sbb
daa
mov
push
sub
clc
pop
aas
or
jl
pop
xor
insl
push
and
cld
jge,pt
pop
call
mov
jne
jnp
pop
fs
into
add
cmp
mov
xchg
mov
daa
bound
mov
cmpsl
sahf
xchg
filds
cld
cld
and
mov
mov
push
int
push
dec
int
pop
fwait
sbb
fs
xor
imul
das
jmp
pop
enter
pusha
sbb
lds
push
test
sahf
mov
pop
adc
jo
ja
dec
aaa
lods
mov
and
outsb
mov
add
loop
xchg
push
mov
jnp
idiv
out
rcr
push
jle
mov
das
jno
xchg
cmp
dec
imul
dec
and
sub
push
imul
push
mov
push
call
shlb
sbb
add
push
jnp
inc
nop
or
xchg
add
mov
push
cmpsb
fbld
fcomps
fisubs
push
movsl
mov
movl
push
fldenv
into
xor
adc
enter
sub
test
test
add
pop
add
jnp
inc
adc
cwtl
fs
and
dec
repz
out
gs
mov
or
inc
sub
push
or
sub
pop
insb
addr16
inc
inc
and
and
stos
mov
push
pop
popf
int3
iret
adc
les
arpl
mov
push
push
into
jbe
inc
sahf
mov
repz
nop
xchg
pop
movsl
lcall
mov
pushf
lret
jl
dec
push
les
ds
dec
insl
add
in
jg
fs
loope
popf
filds
push
xchg
push
jno
xlat
outsb
in
nop
dec
adc
push
out
xchg
jnp
mov
in
std
and
push
lret
mov
enter
cli
mov
cmpsb
xorl
sub
stos
add
sbb
xor
iret
sub
je
cmpsb
cltd
xor
shrl
pop
xchg
push
mov
dec
ret
jmp
mov
mov
sbb
lahf
int
add
mov
out
cmp
dec
jo
mov
aas
cli
test
imull
cmp
in
inc
or
sti
pop
ds
cmp
pop
add
shll
mov
lods
popf
movsl
pop
addl
mov
sbb
out
xchg
ds
pop
ss
std
jp
lods
adc
out
std
jmp
divl
lods
dec
add
sahf
dec
scas
push
lahf
stos
xchg
jno
dec
mov
mov
insb
outsl
push
cmc
pusha
pop
fmull
mov
ja
cmp
push
ret
incl
cmpb
subl
xor
xor
inc
cmp
aam
daa
lds
loopne
out
divps
add
sub
sub
test
pushf
shrl
out
aam
inc
and
pop
hlt
jb
ljmp
mov
xor
stc
mov
orl
aas
xor
es
lock
xchg
rolb
ja
mov
adc
jecxz
loop
ljmp
push
xor
add
ficompl
pop
xchg
loopne
lcall
cmpsb
hlt
inc
std
call
inc
hlt
in
aad
cmp
fdiv
scas
out
mov
jnp
es
cltd
xchg
mov
scas
dec
xchg
cmp
shr
and
mov
mov
mov
arpl
or
sub
shlb
jle
rorb
imul
in
xor
xchg
js
inc
rorb
cmp
dec
rolb
and
sub
add
adc
fwait
jmp
aam
xchg
nop
iret
jne
add
mov
dec
les
xor
or
scas
jo
dec
les
cltd
leave
int
jle
dec
xchg
fcmovnu
jl
lcall
out
int3
or
sbb
movsl
adc
mov
iret
mov
mov
outsl
sbb
int3
test
mov
popf
out
pop
add
orb
sarb
sarl
loope
fldcw
and
inc
cltd
ds
adc
inc
mov
movsl
jb
adc
pop
or
pop
sbb
outsl
xor
bound
sbb
aam
lret
lock
cs
shrb
sti
outsl
xor
sbbb
js
sbb
inc
outsl
negb
test
sbb
mov
inc
cmp
mov
imulb
cmp
imul
fucom
inc
push
aaa
in
lds
shll
cmpsb
dec
mov
rcrb
adc
outsb
adc
in
adc
pusha
push
or
dec
movsl
sub
adc
xor
cld
outsl
jns
sahf
cmc
mov
mov
push
cli
cltd
in
fidivrs
jge
and
xor
pop
bnd
or
mov
nop
mov
or
jl
frstor
jne
cmpsb
fcmovbe
gs
subl
stos
jno
sbb
sub
icebp
add
mull
lds
outsb
out
loopne
daa
insb
lcall
inc
int
outsb
std
cmc
add
ds
scas
jmp
movsl
cmp
sbbb
pusha
adc
sarl
negl
inc
ja
sub
icebp
mov
jne
rol
out
and
inc
loopne
flds
ljmp
lods
jl
mov
mov
mov
cmp
psubsw
sbb
ficoms
mov
mov
js
mov
test
icebp
xor
ret
pop
outsb
fldl
fscale
jmp
lds
inc
imulb
and
fnstsw
xchg
cmp
jno
pop
das
movsl
mov
lahf
cmp
jae
addb
fdivl
shrl
lock
dec
adc
dec
pop
rorb
in
orb
add
xchg
cmp
inc
push
dec
xchg
and
jecxz
adc
xchg
push
out
fpatan
addb
jo
dec
add
aam
shrb
xchg
or
aaa
lds
gs
ret
or
je
in
in
repnz
fsubr
mov
jl
add
xlat
out
lods
mov
mov
test
dec
loop
jge
push
jb
mov
mov
sub
dec
xor
jl
cld
mov
or
cmp
testl
sub
xor
aas
ret
pop
in
pop
push
cs
sbb
lods
out
mov
mov
dec
push
mov
jno
imul
xchg
and
pop
xor
xor
test
popa
aaa
dec
lahf
lcall
stos
pop
fcomps
mov
pop
cmp
jmp
mov
pop
iret
xlat
adc
pop
mov
xlat
and
xor
aam
mov
and
movl
dec
xor
xchg
inc
and
jae
sub
push
inc
into
movsl
mov
movb
pusha
xlat
mov
iret
sub
clc
push
imul
fdivr
add
test
outsb
sub
mov
pop
adc
mov
dec
sub
xorb
das
dec
jae
cmp
mov
push
in
xchg
pop
jo
sbbl
addl
jg
cmp
push
pop
mov
mov
fcomip
stos
push
dec
fadd
mov
jne
in
xchg
cmp
inc
adc
mov
push
mov
sub
sub
icebp
lret
in
adc
jg
jp
xchg
push
inc
xchg
mov
push
mov
stos
cmpsb
shl
bound
and
enter
mov
adc
adc
loope
cmp
ret
xor
cltd
loope
pop
xchg
ljmp
notl
xor
mov
in
pushf
mov
jmp
movsl
es
add
jg
aaa
add
jae
lcall
mov
fmuls
add
pop
adc
push
xchg
iret
cmp
std
lock
mov
fmull
xchg
loop
push
xor
fimull
mov
push
jl
push
push
jns
cmc
sti
inc
xchg
dec
arpl
pop
jecxz
and
jne
ja
lods
mov
mov
mov
adc
fsub
test
adc
scas
clc
out
decl
or
inc
movsb
push
test
sub
imul
sahf
sbb
and
xor
add
dec
sub
cmc
iret
adc
fucomip
or
and
jecxz
imul
clc
sarl
test
in
mov
in
push
sbb
inc
jb
movsb
cmc
jns
cmc
cmp
repz
jl
cmpb
ja
jmp
pop
in
mov
xor
cmp
push
or
adc
into
mov
or
adc
lret
lahf
add
and
mov
pop
enter
sub
inc
arpl
testl
and
loope
inc
movsb
sbb
mov
les
repnz
mov
lahf
dec
and
push
mov
push
mov
add
sub
cs
lock
lret
jne
push
or
mov
mov
push
push
ret
call
push
xor
mov
cmp
ds
enter
mov
push
add
inc
fidivs
es
test
leave
iret
lea
call
ret
icebp
and
mov
pop
imul
out
jp
not
lds
fucomp
les
scas
sbb
mov
outsb
adc
or
mov
xor
pop
pushl
mov
adc
scas
repz
dec
ret
xchg
jg
mov
inc
mov
sbb
mov
sti
inc
ds
lods
das
mov
lock
fstps
mov
dec
sbb
je
mov
repnz
rcrb
mov
push
sbb
lret
faddl
xor
cmpsb
jmp
mov
dec
cld
pop
lds
dec
ss
mov
sub
pushl
lret
sub
inc
pop
mov
ja
js
jo
hlt
push
rclb
pop
nop
into
or
mov
pop
dec
out
push
stc
jl
jge
inc
lds
xor
push
jb
push
adc
loope
sbb
lds
cltd
lods
out
push
inc
cmp
mov
lcall
pop
lds
clc
jecxz
pop
cmc
mov
or
mov
and
jmp
cli
call
test
mov
xlat
xor
shll
lods
cmp
jecxz
pop
push
dec
daa
bound
xor
into
pop
mov
and
into
lahf
movsb
and
std
pop
fbstp
icebp
sbb
lret
push
je
push
jb
aad
adc
jp
andb
leave
xor
and
and
arpl
inc
orl
push
inc
aam
sarl
jae
shlb
in
hlt
sbb
fsubs
mov
loopne
xor
mov
jbe
push
fstpt
aaa
xchg
mov
add
inc
and
xor
fimuls
xchg
xor
push
cmp
inc
dec
xor
xor
pop
pop
sbb
jp
push
jg
outsl
push
xchg
jns
mov
mov
repnz
add
hlt
cmp
or
dec
aas
popf
xchg
je
xchg
jp
xchg
or
nop
repz
sbb
adc
fisubrs
or
jo
xchg
sbb
andb
jmp
or
adc
insb
pushf
repnz
jne
cmp
and
outsl
fwait
rorl
cmpl
lea
cmpsl
cmovg
test
lahf
jb
pop
mov
sbb
scas
push
movsb
or
dec
call
xchg
repz
push
pushf
leave
sahf
lock
js
inc
out
jge
loopnew
and
pop
icebp
xlat
xchg
sbb
mov
loopne
jmp
ds
and
sub
add
lahf
fisubrs
js
pop
mov
nop
daa
add
arpl
sub
aam
es
out
mov
or
mov
push
sub
fsubl
cli
ljmp
imul
mov
jbe
push
sub
and
cmp
mov
jbe
nop
cmpsl
cmp
jmp
bound
popa
mov
repnz
pop
jmp
cmp
in
in
or
mov
cmpsl
les
pusha
push
out
mov
dec
cwtl
push
push
mov
loope
cmpsl
or
loop
dec
push
push
xchg
or
in
das
inc
cmpsl
int3
movhps
push
and
add
sub
mov
sub
loope
mov
jne
inc
movb
repz
ljmp
ljmp
mov
nop
iret
mov
fnstenv
iret
xchg
shlb
sub
sub
addr16
ret
pop
shrb
ret
mov
xchg
ljmp
xchg
push
and
cmpsl
add
es
pushf
ret
mov
inc
sbb
test
push
sarb
scas
jbe
xor
xor
insl
fsubs
sub
sub
mov
push
insb
or
xchg
lods
cmp
nop
cmp
lods
daa
lret
test
fwait
push
sbb
add
in
addl
adc
bound
sahf
lcall
push
pop
push
sbb
in
cmp
lock
sub
test
and
outsb
jbe
rolb
ja
sub
bound
inc
sahf
inc
pop
and
dec
pop
aaa
jge
sbb
out
in
push
xor
inc
inc
mov
std
aas
sarb
shlb
fcmovbe
lock
lcall
lcall
paddq
jle
push
add
popf
popf
out
dec
mov
push
adc
add
mov
stos
sub
fwait
adc
movsl
mov
and
in
lods
loope
mov
ja
insb
fsubrl
imul
xor
push
push
test
mov
fstp
ret
lds
and
shrb
insl
iret
out
mov
mov
dec
mov
pusha
iret
enter
mov
fnstenv
push
sbb
scas
mov
xor
add
imul
jb
mov
and
lds
sbb
stos
aam
scas
out
add
subb
mov
iret
sti
lea
mov
ja
imul
sbb
inc
icebp
push
stc
std
lea
insl
inc
inc
lahf
sub
add
jnp
shlb
push
push
loopne
add
aaa
hlt
xor
sbb
xchg
jp
jno
jge
add
jb
xor
inc
adc
mov
dec
jle
ds
push
jle
punpckhwd
cld
push
cli
iret
push
cld
cmp
int
dec
cs
rclb
fists
fdivl
sbb
xchg
mov
mov
adc
out
adc
imul
xchg
or
or
xchg
insb
shlb
add
sub
pop
push
adc
mov
push
cmpsl
repz
dec
xor
cmpl
sub
adc
test
insl
ss
dec
lods
call
outsl
pop
in
imul
jle
std
cmp
cmp
jmp
shr
cmp
repnz
aaa
cmp
jb
test
adc
pop
cwtl
jmp
mov
lods
mov
enter
insl
pop
cld
pop
inc
iret
cmp
loope
and
and
nop
lock
push
mov
rcr
loop
pop
inc
add
xchg
mov
mov
mov
mov
or
scas
jge
mov
insb
push
lret
lret
xor
rcl
add
cli
lcall
pop
call
rcr
adc
add
scas
insb
dec
xchg
in
dec
daa
iret
add
jb
jb
mov
mov
push
xchg
mov
imul
and
push
xchg
icebp
in
lods
mov
daa
sbb
sbb
stos
mov
push
outsb
rcrl
int3
cld
out
in
test
or
jge
test
ja
lds
testb
scas
roll
mov
or
cmp
jae
push
pop
aaa
cmpsl
lahf
aam
jle
jle
inc
out
jge
addr16
pushf
rcrl
ret
stos
mov
sub
mov
dec
repz
pop
xor
adc
sbb
or
mov
popa
jnp
pop
das
push
inc
rcl
push
rclb
mov
dec
popf
js
xchg
jecxz
in
push
lret
sbb
add
fstl
shlb
xor
fimuls
addb
sbb
das
and
lcall
inc
or
hlt
les
inc
mov
mov
jne
inc
jno
in
popa
xchg
dec
data16
aas
jb
inc
out
fstpt
cltd
inc
xor
mov
inc
xlat
pop
inc
jp
stc
mov
imul
setns
movsl
jne
int3
xchg
jle
mov
shrb
movsb
sub
dec
mov
orl
out
lea
test
nop
std
pop
or
adc
lea
negl
sub
xor
sbb
adc
mov
jmp
call
fsubr
jae
adc
jmp
jnp
call
push
inc
aad
dec
pop
out
xchg
xchg
js
pop
mov
add
sbb
sbb
cmpsl
cmp
adc
lret
xor
in
pop
push
xchg
add
loop
es
and
or
jmp
pop
sub
jo
sub
loop
mov
adc
in
les
int
stc
xor
ljmp
cmp
test
outsb
sub
insl
or
inc
clc
ja
mov
add
aas
lret
pop
sbbl
jecxz
out
jns
mov
faddl
sub
pop
adc
scas
sub
popa
push
ss
out
lea
outsl
hlt
dec
cmpsl
xor
mov
and
fstp
repnz
mov
jmp
and
aam
ret
sbbl
pop
pop
jle
sub
jns
enter
test
dec
push
inc
lea
jae
pop
pop
push
repz
mov
ret
jg
jnp
rcr
cwtl
jge
or
and
pushf
loop
inc
xchg
mov
dec
push
daa
xchg
jmp
mov
lahf
cli
pop
clc
gs
xchg
mov
loop
mov
or
dec
test
jne
fdivs
dec
aaa
jne
pop
mov
aas
mov
arpl
pop
roll
mov
mov
mov
jp
lret
aas
adcl
adcl
cmpsl
scas
pop
lds
xor
neg
push
dec
xchg
dec
sub
out
pop
cmp
das
dec
xchg
imul
mov
push
out
pop
in
add
repz
jns
subb
add
inc
or
mov
cmp
mov
mov
adc
push
mov
jl
add
add
lds
std
push
and
pop
nop
shll
mov
inc
mov
push
xor
test
loopne
cld
mov
jle
push
popa
inc
push
cmpsb
rorl
sub
stc
fwait
movsb
fwait
cmp
sub
pop
xor
mov
lret
mov
and
xor
call
insb
sbb
jmp
adc
orb
pop
jg
movsb
aad
fildl
mov
cltd
out
cmc
push
sub
push
and
xorb
xchg
sbb
fldcw
lea
sub
xchg
inc
das
shrl
loopne
mov
clc
jmp
pop
imul
ficoml
sbb
mov
cmpsl
xchg
fstpt
or
rolb
ss
sbbb
jle
xchg
pop
repnz
loope
pop
icebp
cmp
cmpsl
testl
rolb
jnp
pop
fdivrl
cld
mov
inc
mov
sub
bound
pop
rolb
jg
jle
rcrl
int3
iret
mov
and
repz
cmp
in
push
mov
pushf
xchg
mov
jmp
add
cmc
into
push
sub
mov
mov
dec
jne
mov
inc
xor
stos
cmp
add
xchg
sbb
pushf
xor
or
sbb
sbb
inc
ljmp
cltd
ror
push
aam
mov
sub
lret
aam
das
test
fldt
ljmp
aas
cmp
and
mov
mov
outsl
clc
jb
imul
pop
out
imul
pop
lret
int3
movsl
rol
insl
mov
jno
call
in
jle,pn
subb
mov
inc
jle
jae
xlat
or
xchg
push
cmpsl
lahf
add
nop
stos
adc
sbb
xor
sarl
xchg
cmp
fisttpl
repnz
lea
mov
pop
or
inc
or
dec
jbe
jg
ja
outsl
dec
lcall
hlt
imul
xor
imul
and
das
jne
adc
jecxz
sub
scas
dec
mov
or
ret
das
lcall
xchg
xor
pop
inc
mov
or
les
mov
sbb
and
mov
cmpsb
lea
gs
sti
test
mov
jno
pop
mov
pusha
cmc
xchg
sub
daa
mov
shll
xchg
mov
dec
outsl
pop
test
mov
sbb
push
xchg
ret
sub
scas
pushf
lahf
cmpsl
sub
jb
jnp
xchg
inc
xchg
data16
xlat
aaa
mov
inc
cltd
jnp
hlt
adc
push
add
jle
pop
mov
stos
mov
dec
fimuls
hlt
xchg
jmp
mul
les
popa
inc
outsb
add
dec
into
cmp
pop
mov
aad
push
mov
aad
shlb
insb
push
lea
mov
int3
in
stos
enter
xor
sbb
pop
insb
ljmp
push
mov
xchg
xlat
cs
jle
adc
test
push
jo
cmp
loope
pop
xchg
jl
insb
cltd
inc
outsb
add
fnstenv
and
sub
cmp
out
popa
sbbb
outsb
movsl
sub
adc
repnz
push
mov
sub
leave
adc
sbb
stos
jae
dec
xor
sub
pop
adc
je
mov
stos
adc
not
xor
fisttpl
jno,pn
in
fstps
mov
dec
pop
mov
dec
mov
mov
pop
cld
scas
or
pushf
and
mov
lcall
enter
jbe,pn
dec
outsl
add
movsl
inc
fldt
xchg
jecxz
xchg
adc
jo
inc
inc
pop
mov
scas
dec
adc
push
leave
jl
hlt
in
sahf
jne
das
into
inc
jmp
les
mov
mov
je
xchg
xlat
mov
fwait
pop
scas
rorl
adc
xchg
jp
jne
ja
add
mov
and
add
adc
cmpsl
add
in
xorl
loope
push
arpl
movsb
push
mov
stos
sbb
ret
push
jno
lock
sub
repnz
sbb
lret
test
ret
inc
mov
cmc
pop
push
shl
in
lret
inc
push
cmc
mov
addl
sub
fdecstp
fmull
ljmp
add
jl
inc
icebp
ja
in
out
outsb
aaa
push
call
add
or
adc
or
add
mov
in
pop
sbb
mov
clc
pop
daa
adc
cmp
lods
js
arpl
add
cmp
sarb
cld
adc
sahf
and
xchg
mov
mov
mov
xor
sbb
push
data16
rorl
testl
push
add
sub
aaa
aad
cmp
loopne
lahf
lea
adc
int
pop
insb
jg
lods
sub
cmp
stc
filds
and
fimull
inc
sarb
insl
sbbl
gs
xchg
vmovhpd
sbb
hlt
sbb
xchg
push
cmp
cmp
mov
sub
repnz
jbe
inc
cmp
sub
test
js
and
lret
cmp
xor
jbe
xor
daa
push
stc
in
or
adc
ret
dec
lcall
in
ljmp
addb
in
jle
adcl
cwtl
add
inc
sbb
mov
outsl
push
pop
cmp
dec
pop
mov
ret
adc
js
mov
add
or
jmp
fldl
das
aam
sub
and
add
pop
add
push
sbb
pop
mov
dec
out
gs
ljmp
repz
xchg
mov
aaa
push
lahf
hlt
sub
mov
js
arpl
or
into
jno
enter
mov
add
test
dec
sbb
mov
out
outsl
jbe
jl
fdivrs
imul
xchg
in
dec
jns
adc
int3
nop
sbb
into
repz
mov
inc
mov
ror
ret
imul
add
xor
jge,pt
scas
and
sbb
jbe
fwait
inc
push
sahf
les
mov
xor
mov
daa
adc
ret
ret
sub
push
xchg
mov
mulb
mov
mov
cld
jl
add
xchg
mov
xlat
bound
xchg
xor
xchg
insb
mov
mov
sub
js
jno
cmp
daa
repnz
test
jnp
cmp
lahf
jbe
icebp
out
nop
ds
xchg
mov
in
arpl
scas
shll
shll
mov
test
hlt
pop
xchg
lahf
icebp
cmp
mov
xor
fadds
xchg
ffreep
iret
pop
push
mov
inc
add
aas
js
arpl
fmull
out
xor
cmp
or
add
add
les
xchg
js
cs
add
mov
addr16
out
push
dec
ja
icebp
mov
or
es
test
rcrb
push
cmp
int3
mov
das
loop
cmp
and
jae
stos
negb
jnp
lods
ret
jno
mov
call
popf
insl
xor
xlat
fcmovnb
scas
or
subb
out
mov
decb
jnp
jb
stos
pop
pop
daa
push
mov
cwtl
xlat
add
cmp
dec
cs
stos
cmpsb
ret
pop
call
mov
aaa
sahf
mov
fnstenv
cwtl
cmpsb
lds
fst
mov
sbb
in
fwait
addl
push
jo
cltd
or
sti
mov
fcoms
mov
cmp
xor
sarb
rcrl
jno
xor
adc
test
push
add
scas
lock
adc
cmc
lock
mov
sbb
jae
push
orl
aas
lcall
orb
jns
rorb
imul
cmc
shrl
adcb
das
aad
orl
iret
aaa
pop
vcomiss
adc
nop
adc
adc
mov
adcb
insb
add
pop
rcr
test
adc
icebp
jecxz
cmp
call
push
imul
or
rolb
jmp
pop
shrl
push
dec
pop
mov
cmpsb
loop
cs
cmp
jne
xchg
xchg
inc
repnz
cli
lds
mov
mov
arpl
or
pop
add
into
hlt
jne
or
into
aad
lahf
pop
add
push
sbb
xchg
jo
mov
dec
addr16
mov
scas
add
sbb
lock
scas
xchg
pushf
iret
sub
aam
cmp
stos
scas
sbb
je
insb
mov
js
hlt
dec
push
pop
aad
call
scas
mov
test
into
lret
fucomp
sub
pop
inc
cmc
mov
and
inc
push
popl
adcb
mov
pop
jecxz
xor
stos
add
ret
xchg
sub
push
leave
je
push
mov
or
out
mov
mov
in
iret
push
mov
lds
mov
and
sbb
xor
xor
xor
xchg
outsb
xlat
lock
fiadds
xchg
lret
jecxz
dec
sbb
adc
pop
adc
jae
cmp
jne
push
dec
sub
push
std
andl
adcb
mulb
aam
xor
outsl
lods
scas
imul
inc
arpl
insl
subb
in
push
mov
std
scas
rcrl
int3
movsl
es
cmpsb
arpl
mov
pop
mov
out
xor
mov
xor
mov
popa
push
and
in
out
xchg
sti
push
mov
or
in
cmp
aam
sbb
add
mov
or
into
int
iret
imul
ljmp
repnz
add
fmuls
cs
rorb
push
mov
fisubrl
jmp
mov
and
neg
xor
incb
jo
pop
push
lods
insl
inc
mov
into
xor
stos
cmp
iret
jbe
shlb
dec
imul
mov
inc
repz
stos
adc
mov
inc
mov
loope
push
aam
sub
leave
push
scas
or
mov
enter
outsb
in
add
jbe
push
jg
outsb
ja
insb
adc
sbb
imul
aas
mov
scas
lcall
adc
aaa
cmc
mov
jb
push
gs
insl
ljmp
call
push
cs
and
or
idivl
mov
movsw
pop
mov
incl
jnp
rorl
adc
popa
push
dec
repnz
mov
popa
cld
inc
mov
fisubl
push
push
lods
outsb
loopne
jp
je
nop
sahf
ljmp
fxch
jnp
mov
jne
jge
popf
sub
push
dec
iret
out
mov
inc
and
sbb
dec
sub
cmovs
dec
shrb
adc
jb,pt
stos
ljmp
inc
push
std
cs
movsl
subb
push
xor
dec
in
repnz
out
mov
mov
push
into
imul
pop
and
sbbb
int
shrl
jmp
arpl
aad
cltd
rcr
cmp
jb
movsb
repz
xchg
shll
std
cld
lods
fnstcw
jb
ss
sub
pop
pop
jp
mov
or
push
imul
xchg
nop
and
dec
sub
push
cmpsb
jmp
push
rolb
pop
lcall
push
sub
lock
jae
mov
pop
inc
test
pop
sub
arpl
mov
clc
pop
stos
lock
push
mov
pop
sub
push
arpl
xchg
adc
pop
call
jecxz
push
or
sbb
insb
jl
sbb
inc
leave
inc
int3
inc
mul
call
add
push
repz
mov
frndint
pop
enter
mov
xchg
fisttps
inc
push
dec
push
sub
into
addr16
or
mov
cli
mov
push
sub
add
out
fidivrl
and
inc
inc
push
pop
lock
jae
stos
xor
push
roll
adc
lock
sub
mov
mov
mov
leave
push
mov
scas
aam
lea
js
add
in
imul
lea
dec
sbb
jge
call
ret
shr
push
sar
ret
add
and
in
pop
xlat
adc
xchg
cmp
xchg
push
es
and
test
gs
mov
add
in
les
adc
outsb
fbstp
scas
adc
jp
inc
xchg
test
jae
adc
and
ret
cmp
push
cmpsb
lret
mov
sbb
repnz
mov
nop
cltd
js
fstpt
test
add
ds
add
dec
pop
movsb
mov
and
jo
xor
mov
sbb
jl
mov
shr
cmp
pop
sbb
add
je
add
pop
mov
xchg
test
les
lods
ljmp
cltd
xchg
jb
jnp
sti
cmp
insb
icebp
cmp
pop
cmpsl
or
sub
int3
fidivrs
mov
ds
xor
cmpsl
push
fcompl
dec
sbb
xchg
and
fld
jmp
mov
sahf
sahf
sarl
shrl
mov
jp
hlt
xor
jp
xchg
sub
xchg
stc
addr16
divb
pusha
inc
adc
ss
dec
pop
mov
fildl
inc
jb
cwtl
icebp
push
xchg
shlb
jnp
loop
stc
loopnew
xchg
mov
sub
sub
movsl
inc
nop
cld
cmp
cmc
das
sbb
stc
inc
add
mov
in
jns
mov
adc
push
jnp
in
aam
xchg
scas
jmp
add
inc
or
fstpt
push
int
push
je
stos
std
enter
mov
fdivrp
dec
cmp
mov
arpl
xor
lock
jge
pushf
jns
insb
sahf
insl
insl
mov
cmpsb
lahf
das
sbb
inc
xchg
aas
shl
cmpsl
cs
aas
dec
lods
aaa
sti
repz
std
repnz
xchg
lret
mov
push
mulb
inc
pop
and
push
dec
mov
es
mov
adc
cli
fnsave
jl
in
mov
mov
add
cs
add
loop
sub
movsl
inc
inc
xor
jp
push
xchg
sbb
imul
vpsubq
test
push
jmp
xchg
neg
xchg
xchg
aaa
mov
movsl
je
std
in
mov
xchg
scas
inc
ret
fbld
mov
pop
dec
mov
cmp
in
hlt
fdivr
fimuls
sbb
dec
aad
ds
adc
push
pop
out
les
sub
xor
inc
sub
jns
js
add
sub
add
jmp
hlt
dec
dec
dec
subl
add
push
lahf
das
adc
vmulss
inc
cmc
outsl
loope
test
dec
jp
xchg
out
ljmp
cmp
decl
adc
outsb
adc
push
shl
negb
stos
cmpl
in
push
fimuls
and
cltd
cmp
shll
std
cmpsb
test
and
lahf
or
xchg
insl
dec
sahf
mov
mov
or
ja
rorl
fwait
out
fcomip
call
ret
bound
pusha
scas
dec
cld
test
mov
mov
dec
and
inc
xor
icebp
in
dec
pop
mov
add
push
sahf
shr
jae
pop
imul
or
and
aas
xchg
pop
bound
or
repz
jbe
lods
arpl
pop
fwait
stos
lcall
sbb
es
mov
cmpsl
mov
adc
mov
cmp
push
push
cld
push
cmp
mov
dec
cmp
rcr
xchg
jl
lea
lods
rol
cli
pop
adc
inc
icebp
dec
jns
mov
popa
cmp
dec
dec
pop
testl
popf
mov
aaa
mov
cmc
or
les
xchg
push
mov
adc
ds
mov
popf
aad
inc
mov
push
or
push
jmp
xchg
cltd
inc
inc
addr16
dec
cmpsb
pop
inc
sbb
and
adc
in
insl
dec
insb
pop
movsl
cwtl
push
and
fdivrs
adc
mov
pop
sub
cltd
cmc
sbb
push
in
call
push
daa
xchg
push
push
mov
hlt
adc
or
fstl
stos
inc
push
ficompl
mov
pop
mov
in
and
insb
aam
cmp
shll
jb
adc
mov
sahf
jo
pop
adc
xchg
cmpsb
or
mov
les
push
sbb
add
in
stc
aaa
and
lods
and
pop
out
rcl
and
rcll
rcrl
adc
out
sub
pusha
dec
dec
rclb
mov
nop
cmp
bound
in
xchg
inc
dec
out
in
rolb
in
mov
inc
scas
pop
ret
sbb
outsb
sub
ret
push
pop
sub
xor
pop
pop
mov
xchg
pusha
xchg
out
sub
movsl
inc
xchg
dec
imul
sti
fbstp
ret
cli
aaa
mov
xor
adc
mov
insb
and
ret
ds
in
xor
outsb
cmpsl
stos
jmp
ret
pop
cmp
push
add
std
addl
add
inc
aas
xchg
fiaddl
lock
add
jns
cwtl
xchg
xor
rclb
loop
ss
js
mov
je
subb
dec
push
adc
idivb
or
add
push
inc
gs
add
mov
mov
and
mov
cmp
push
mov
daa
mov
rcll
outsl
xchg
in
sahf
cld
stos
stos
iret
shrl
xchg
add
rclb
stc
pop
scas
dec
nop
push
stc
mov
push
inc
cli
pop
fdiv
out
test
nop
and
push
test
pop
fstpl
pop
insb
repz
scas
jl
cs
add
in
lahf
mov
lds
fsubrl
mov
fidivs
or
mov
cmp
adc
inc
je
mov
test
add
faddl
cltd
mov
pop
lret
subb
lea
dec
adc
daa
and
popl
stos
adc
int
data16
shrl
or
mov
enter
cmpsb
lock
rcl
add
or
loopne
xor
dec
sahf
lock
push
lret
pop
mov
xchg
jnp
dec
clc
xchg
pop
dec
mov
iret
xor
mov
jp
inc
repnz
ficoml
mov
int
imul
aam
or
lcall
int3
push
pop
movsl
scas
inc
push
mov
jmp
outsl
sti
es
xor
out
xor
ss
cmp
and
sbb
or
mov
adc
dec
hlt
aas
pusha
loope
xchg
fdivrs
ljmp
aam
push
test
push
scas
cmc
pop
and
inc
push
frstor
sub
in
lods
test
in
nop
dec
loopne
icebp
out
pop
pop
divb
mov
push
lahf
inc
and
out
sub
insb
xchg
sub
mov
js
add
mov
pop
dec
cmp
sub
cmc
or
int
push
xlat
scas
lods
cltd
and
or
inc
clc
stos
add
adc
pusha
jge
rorb
sbb
pop
fwait
in
xchg
xchg
add
push
xchg
push
xchg
sbb
test
rorl
ret
shll
addr16
jle
arpl
hlt
inc
scas
sbb
int3
movsb
std
pop
fs
ja
jnp
insb
loopne
xor
fcmovnb
ds
push
xchg
ret
outsb
pop
leave
cmp
xor
mov
pause
cld
sarl
stos
xor
xchg
out
scas
pop
adc
add
clc
add
and
jp
mov
lock
nop
and
pop
push
dec
sbb
mov
enter
fiadds
js
loope
and
adc
xchg
scas
negb
xchg
clc
mov
xor
call
mov
or
mov
xor
lret
lods
add
std
in
hlt
cmp
xchg
sarb
test
xchg
push
fsub
shl
push
adcb
jnp
cmp
cmpsl
dec
outsl
mov
jle
jmp
dec
shl
push
sti
loope
cmp
sub
pop
out
xchg
fwait
je
jbe,pn
jge
scas
test
das
iret
add
and
xchg
shrb
push
mov
sti
adc
scas
ljmp
jnp
leave
insl
pop
cld
sbbb
xchg
inc
push
cmp
test
stos
fiadds
push
mov
push
lea
inc
incl
inc
dec
dec
adc
pop
or
decb
movsl
fldl
cmc
push
nop
mov
fsubrp
inc
out
ficoml
in
in
push
push
sub
js
bound
ds
sbb
in
rolb
les
aaa
pop
jmp
push
cmp
out
jbe
mov
add
cli
push
push
fcoms
sar
xchg
andb
add
ret
leave
cmc
in
xchg
mov
push
lret
test
hlt
rcl
in
sub
fcmove
in
add
push
ja
sahf
into
loopne
inc
btc
cmp
out
adcb
jnp
cmp
orb
mov
stc
popa
ret
cli
imul
or
xchg
fmuls
pop
xor
dec
adc
scas
popf
in
fistpl
xchg
push
data16
push
in
imul
pop
ss
pop
mov
sbb
mov
cmp
addr16
cmpsb
roll
mov
clc
enter
sbb
pop
jmp
test
sub
insb
shlb
and
jbe
in
addr16
ds
lret
mov
ret
xor
testb
lret
xchg
push
fbstp
pop
stos
out
inc
mov
xor
in
and
aam
mov
cli
dec
call
mov
adc
inc
dec
jbe
int
sbb
sbbb
push
ret
fs
add
mov
xor
jno
xlat
repz
sbbb
outsl
decl
adc
cmp
aad
jo
je
and
ss
mov
mov
ljmp
mov
daa
cmpsb
pop
pop
pop
out
stos
cmp
fnstsw
xor
js
mov
mov
int3
imul
lret
or
inc
pop
out
mov
jmp
insb
imul
mov
add
call
add
cmp
lods
mov
xor
aas
inc
or
mov
fiadds
fs
mov
fs
mov
daa
aaa
pop
add
push
xchg
or
cwtl
adc
adc
jg
mov
cmp
ret
or
fnsave
data16
into
fbstp
das
mov
int3
pop
call
add
fsubs
popa
inc
add
add
mov
ror
nop
rol
ret
repnz
out
icebp
cld
scas
push
stos
cmp
jecxz
xchg
add
nop
mov
outsb
leave
shll
inc
stos
mov
loop
rorl
into
add
dec
jg
inc
int
jg
test
adc
xor
adc
arpl
pop
cmpsl
adc
cld
jae
loope
pop
imul
test
or
je
mov
cmp
xor
adcb
sahf
add
adc
jle
xchg
scas
les
sahf
jmp
push
xchg
aam
xchg
dec
adc
lahf
mov
je
ja
pushf
add
pop
aad
or
addr16
xlat
mov
out
sub
or
repnz
mov
xchg
push
or
and
xlat
mov
addr16
int3
sarl
xchg
push
mov
mov
cld
mov
data16
aas
lret
in
popa
xorb
dec
sarl
or
mov
pop
xor
stos
cli
loop
mov
push
out
push
data16
add
jno
dec
xchg
shlb
icebp
and
jmp
dec
pop
lcall
push
icebp
pop
std
jg
add
std
inc
jno
in
mov
aas
mov
mov
mov
mov
dec
in
lahf
shlb
mov
xor
daa
lods
push
or
bnd
xchg
scas
shr
push
jae
push
mov
inc
test
and
and
xorb
push
gs
hlt
add
fwait
in
mov
adc
inc
hlt
aam
jns
cli
jnp
loop
cmp
cmp
pusha
clc
push
test
bound
and
test
cmp
out
add
add
pop
outsl
mov
loope
push
pop
fdivrl
push
pop
iret
and
lds
adc
cltd
jp
xchg
shlb
test
clc
mov
movsb
xchg
arpl
or
push
sbb
test
repz
mov
or
pop
test
mov
imul
lahf
add
pop
xchg
aad
xor
jle
ret
cmpb
aaa
or
jns
gs
cwtl
scas
mov
cli
pop
sub
mov
fistpll
mov
jnp
movsb
inc
out
add
movsl
cmp
mov
jbe
cmpsl
es
push
cwtl
pushf
adc
push
push
mov
add
xchg
mov
test
sbb
in
jb
sbb
mov
sbb
mov
push
push
mov
repnz
dec
stos
mov
in
sbb
movsl
cwtl
xor
imul
pop
push
inc
and
sbb
sub
dec
mov
jecxz
sbb
lret
ja
in
push
mov
arpl
or
xor
cld
xor
cwtl
imul
scas
leave
adc
pusha
or
aad
xor
mov
jo
sbb
enter
sub
imul
test
stc
fsubr
fucomi
into
adc
xor
movsl
stos
inc
push
mov
dec
imul
mov
imul
pusha
dec
std
int
out
sub
jne
dec
dec
test
xchg
les
test
mov
and
push
iret
cmc
adc
xchg
gs
ja
push
sahf
sbb
xor
xchg
mov
sarb
xchg
pop
cld
jge
or
cwtl
insl
xchg
and
and
loop
sbb
insl
mov
jbe
scas
ret
in
pop
adc
out
leave
push
test
fdivrp
mov
add
call
mov
jecxz
mov
pop
sub
sbb
inc
repnz
std
incb
jg
jle
inc
or
rcrl
sbb
push
xlat
pop
push
test
add
sbb
test
jmp
std
pop
outsb
lock
push
scas
push
add
mov
push
lods
cld
xchg
adc
in
in
push
repz
loopne
push
jecxz
mov
jle
jecxz
into
and
mov
pop
mov
jge
push
xchg
fxch
inc
cmp
mov
dec
xor
and
lods
pop
jbe
or
test
jno
pop
dec
xlat
jg
insl
cmp
aas
movsb
negl
dec
mov
jmp
lods
lock
lahf
pusha
cmp
stc
arpl
loop
add
dec
sub
adc
pushf
push
jge
or
sub
pop
cmp
add
pop
push
mov
nop
xchg
push
mov
cltd
inc
cld
nop
mov
sub
sub
scas
pop
mov
jmp
test
cmp
call
fmuls
mov
addb
pop
icebp
pop
pop
sbb
xor
test
cmpsl
addr16
add
daa
cmp
imul
xchg
pusha
dec
leave
test
out
mov
dec
push
mov
cmp
insb
in
sub
push
xchg
cmp
jecxz
jp
mov
fucom
mov
cmp
mov
std
pop
cmp
jge
mov
sub
push
in
push
mov
or
pop
push
inc
inc
sub
jl
cs
pop
push
push
popf
mov
jne
or
loop
mov
push
pop
mov
jae
push
mov
sahf
mov
hlt
popa
add
aas
movsb
addr16
in
loop
lock
xor
mov
push
sub
mov
mov
cli
jge
cmpsl
push
add
push
pop
lea
mov
int3
mov
sub
or
stos
shll
xchg
dec
adc
outsb
cmpsb
xchg
add
daa
lock
fistps
inc
in
push
shll
xor
and
enter
sub
xor
popl
xchg
jl
xor
inc
mov
jae
outsl
movsl
fistps
insb
outsl
inc
cli
sbb
jae
insl
xchg
call
sarl
jo
ret
flds
xchg
sub
and
out
or
imul
aaa
mov
rcl
and
and
mov
mov
and
inc
add
and
std
inc
scas
xchg
mov
in
xor
inc
cli
pushf
pop
add
aad
faddl
and
imul
aaa
in
mov
push
adc
fisubs
sub
xor
xchg
les
dec
inc
mov
repnz
sub
cwtl
popf
xchg
cmpsl
clc
loop
add
or
fisttps
lret
movl
mov
or
xchg
sbb
iret
in
xchg
outsl
pop
aas
inc
test
shrb
movsl
dec
out
sarb
push
push
mov
push
out
push
icebp
scas
les
test
xchg
jno
rcrb
lds
loop
cmp
pop
cld
sarl
lods
shrl
lret
xchg
in
lret
push
fcmovbe
sub
fisubl
cmp
fcmovb
dec
in
mov
popa
popa
jle
cmp
outsb
mov
xor
xor
aam
push
sbb
outsb
or
dec
dec
mov
adc
shl
outsl
mov
call
sarb
xor
scas
cmp
imul
mov
inc
scas
dec
mov
cmp
pop
test
iret
arpl
fidivl
sub
sub
fdivrs
mov
pop
aaa
mov
adc
scas
and
adcb
and
dec
outsb
loope
pusha
cli
adc
ret
sub
mov
jl
sbb
sbb
or
cmc
es
stos
mov
inc
inc
mov
add
int3
fidivl
lret
pop
movsb
dec
xchg
jbe
push
pushf
adc
cmp
in
add
xor
stc
in
adc
xchg
clc
clc
adc
lahf
sti
mov
rclb
and
inc
push
sbb
cmp
clc
insl
push
std
pop
or
inc
in
lahf
mov
insl
cmp
roll
lods
push
inc
test
in
or
add
sti
in
jecxz
mov
jo
daa
mov
adc
mov
out
jl
stos
shlb
scas
mov
lods
cmp
mov
adc
std
fcmovne
sahf
cs
dec
subl
imul
cmp
outsl
xchg
sub
lcall
mov
or
shrl
cld
scas
mov
and
mov
imul
mov
out
mov
in
jg
rolb
movsb
dec
adc
push
shr
and
out
sub
cltd
sahf
xor
lock
add
fsts
bound
loope
inc
mov
mov
mov
scas
cmp
out
sahf
or
pop
dec
jle
xchg
mov
pop
cmp
aaa
inc
lea
testb
pop
and
stc
cwtl
pop
adc
fimull
fnstcw
arpl
int3
mov
movsb
stos
iret
add
imul
clc
in
dec
adc
xor
fucomi
sub
rol
push
and
insb
rclb
cli
pop
push
sarb
sub
test
sub
popf
pop
movsl
adc
daa
mov
pop
or
test
leave
ss
stc
pop
mov
cmp
mov
xor
hlt
repnz
and
fisttps
cmp
fucomi
loope
int
mov
xor
mov
pop
rorb
xchg
pop
dec
cli
jbe
js
pop
roll
xchg
inc
cmp
call
les
mov
mov
sub
das
int
fimuls
push
jb
mov
je
mov
sti
test
ss
fistl
cmp
jle
pop
daa
dec
mov
adc
jbe
fdecstp
sbb
call
hlt
scas
inc
fcomp
test
dec
sbb
mov
sbb
push
xchg
inc
daa
push
dec
dec
ficoml
mov
test
cmc
or
fdivrs
lret
jl
jl
fstpt
xor
mov
and
scas
sahf
fisttps
sub
ljmp
or
cmc
rorb
and
movsb
rcrb
and
push
mov
aad
mov
aam
in
out
in
je
sub
in
mov
out
mov
imul
pop
mov
jns
loopne
ljmp
das
test
jno
aad
xchg
and
mov
push
mov
scas
sub
ja
nop
mov
mov
inc
push
pop
sbb
adc
sar
adc
sub
lock
ljmp
fdivrs
mov
jne
pushf
mov
add
mov
dec
clc
or
dec
rorl
sub
pop
inc
in
push
dec
push
xchg
sbb
cmpsl
loop
scas
adc
int3
out
add
xor
cmp
push
into
push
pushf
xchg
jecxz
nop
gs
dec
mov
jmp
adc
cli
adc
fisubrl
adc
and
in
add
cmp
xchg
scas
arpl
popf
xchg
pop
jp
aas
or
push
notl
xor
iret
cld
out
push
int3
cmpsb
push
scas
xchg
sub
icebp
cmpsl
jno
loope
std
xchg
push
push
sub
xchg
stc
loopne
mov
push
aas
adc
cmpsb
add
test
push
cli
scas
jecxz
mov
and
out
popf
and
mov
xor
xchg
sub
or
mov
and
int3
test
mov
das
negb
push
or
or
xor
mov
stos
iret
daa
inc
jle
fs
xor
cmpsb
std
dec
ret
imul
inc
or
inc
jle
das
add
xor
or
into
xor
nop
ja
xchg
push
cmp
mov
addps
push
int
adc
movsl
fchs
jecxz
gs
pushf
sub
test
sbb
sbb
and
xor
push
fbstp
scas
lahf
cmp
mov
test
mov
xchg
ret
out
mov
cmp
xchg
mov
sub
in
and
aad
jle
icebp
add
loopne
mov
je
fldt
pop
inc
mov
out
mov
add
mov
sub
jno
fs
jo
fbstp
xchg
xor
sbb
inc
sbb
insl
pop
lret
lock
stos
lcall
test
push
std
insl
insl
ret
int
loopne
adc
lahf
int3
cltd
gs
test
cld
and
test
test
mov
sarl
mov
xchg
xlat
jmp
pop
fs
sub
into
ja
lcall
daa
pop
out
outsb
sbb
outsl
loope
pop
arpl
pusha
xchg
sub
xor
dec
daa
jg
aam
xchg
test
adc
add
inc
xlat
dec
adc
aam
lcall
shlb
xor
ret
cmp
mov
sbb
sbbl
out
leave
xchg
incl
cwtl
jnp
or
nop
out
mov
add
sbb
xlat
lock
dec
add
push
pop
mov
dec
push
in
leave
dec
pop
les
sbb
push
dec
rcrl
mov
jmp
or
aam
push
adc
push
pop
sqrtps
rcrl
hlt
enter
adc
popf
mov
jmp
mov
je
addl
movsb
push
lock
movsl
icebp
fldcw
hlt
popw
pushf
sbb
out
rorl
gs
scas
in
and
clc
mov
xor
dec
push
adc
stos
jns
push
xlat
cmc
pop
sbb
aaa
repnz
std
mov
not
dec
testl
sti
and
xchg
pop
and
out
push
orb
inc
adc
fbld
or
cli
sarb
insl
mov
xor
pusha
test
pop
jns
pop
les
nop
xor
test
cmc
or
adc
jmp
pop
daa
inc
mov
jecxz
rcrb
pop
subps
movl
sub
and
dec
daa
cwtl
stos
pushf
push
push
sbb
push
out
pop
xchg
cmp
jle
out
mov
adc
xchg
jmp
xor
movlps
lods
adc
dec
cmp
pop
cmpsb
and
mov
frndint
cmp
mov
add
sbb
and
mov
ficoml
push
mov
repz
rol
mov
sub
xchg
push
xor
and
mov
les
icebp
repz
fisubs
and
mov
data16
mov
jp
or
cmp
push
shlb
push
push
lcall
xchg
out
or
sub
cli
rcrb
dec
mov
jne
gs
and
jbe
roll
sbb
push
movl
flds
pop
js
mov
iret
lock
xor
aad
xor
dec
andb
mov
xchg
pop
sbb
ret
enter
cld
out
adc
push
rorl
inc
lods
aas
imul
push
inc
xchg
ja
xchg
loopne
adc
pusha
lahf
rcrl
add
push
fisubrs
test
mov
lahf
insb
mov
shrl
stc
stos
repnz
push
test
icebp
xor
test
mov
xchg
leave
ret
xchg
cmpxchg
nop
mov
mov
adc
sub
push
mov
xor
mov
jns
cs
cmpsl
inc
jg
mov
cltd
scas
enter
inc
mov
jno
jl
ret
les
daa
les
gs
mov
mov
sub
lods
or
repnz
sbb
popf
pop
add
movsb
test
mov
pop
mov
mulb
rcrl
mov
pop
outsl
jnp
outsl
or
test
pop
cmp
xchg
fs
adc
push
sahf
sub
inc
push
pop
stos
push
mov
mov
mov
lods
mov
loope
shlb
int
xchg
inc
aas
outsl
cmp
push
aas
push
add
aam
in
adc
pop
mov
adc
mov
pop
push
dec
add
cwtl
int
pop
outsl
enter
pop
sbb
pusha
repnz
in
enter
xlat
in
and
sub
xchg
lret
mov
and
loopne
and
cltd
testl
loope
dec
add
xchg
adc
stc
push
movsb
fsubr
dec
xchg
and
add
nop
outsb
jl
hlt
cmp
push
shr
test
or
fcompl
stos
mov
and
lar
imul
adc
das
out
sbb
pop
inc
mov
inc
inc
push
adc
gs
add
mov
and
mov
sub
sbb
repnz
dec
or
or
mov
mov
dec
sar
insl
fwait
insb
push
rcrb
sub
outsb
mov
in
sbb
addr16
fbstp
jge
dec
sti
cwtl
and
jo
push
inc
outsl
lea
test
jnp
push
push
jmp
mov
inc
or
dec
enter
bound
inc
mov
fnstenv
mov
pop
sbb
fdivs
cmp
cmp
icebp
lods
sbb
aad
int
ret
cmpsl
adc
xor
fdivl
add
sbb
clc
cmp
mov
push
mov
sahf
iret
push
xor
lds
cwtl
ret
jo
sbbl
xchg
jbe
xorl
lods
cmpsb
jns
imul
movsl
mov
popa
cmp
sarl
push
sbb
pop
lock
pushl
jle
pop
outsl
push
adc
and
adc
shl
inc
enter
rol
rolb
setp
int3
hlt
dec
mov
xchg
imul
xchg
mov
and
hlt
gs
cmp
pop
icebp
xchg
xlat
test
fildll
jnp
mov
add
cmp
loop
aaa
lds
mov
insl
adc
cmp
or
mov
enter
xchg
jg
aaa
and
xor
dec
and
popw
inc
mov
push
das
pop
add
fildl
into
xchg
arpl
cmpl
xchg
jg
pop
xchg
push
out
rcll
cltd
fisubrl
mov
cmc
inc
jge
xor
jae
pop
lea
movsb
adc
and
jnp
xchg
enter
sahf
jo
push
lahf
pop
xor
xor
and
jno
jmp
out
test
cmp
cmpsb
mov
xchg
jnp
dec
and
insb
pop
jae
pop
sub
mov
jmp
adc
add
call
pop
lds
or
sahf
inc
sbb
imul
dec
jecxz
pop
or
pop
sbb
xor
mov
jl
sbb
jle
jbe
jmp
cli
lret
inc
nop
out
adc
pop
fldl
push
popa
xchg
xchg
imul
jl
mov
lea
shrl
repnz
adcl
mov
sbb
xchg
pop
adc
or
ret
mov
outsl
sti
mov
add
ljmp
pushf
push
cmp
test
fidivl
inc
and
mov
mov
push
call
dec
xor
sar
fsub
repnz
sbb
ficompl
lahf
and
fildl
cmp
in
es
jne,pn
mov
out
aaa
int3
mov
sti
pop
popa
add
fdivs
out
jns
les
lret
jns
sub
mov
jns
jmp
dec
std
push
out
ret
test
mov
mov
mov
sbb
mov
or
sarl
dec
mov
out
bound
shll
in
inc
pop
enter
and
cltd
push
mov
les
popf
enter
sarl
mov
fwait
xchg
dec
lahf
lds
and
dec
loop
jle
std
and
dec
push
push
ds
dec
pop
cltd
stos
and
outsl
xchg
mov
cmp
pop
aaa
in
jmp
xor
ds
xchg
jge
pop
in
aaa
xor
jecxz
mov
sar
addr16
xchg
sub
aam
dec
add
sub
clc
stc
xor
ljmp
in
mov
inc
mov
mov
fdivrl
faddl
jb
ja
xchg
cmpsb
es
sbb
imul
fcoms
sub
cmp
ret
adc
sub
push
fwait
out
and
or
sbb
mov
mov
mov
in
popf
maskmovq
testl
fwait
adc
repnz
mov
add
pusha
pop
daa
mov
icebp
push
outsb
and
arpl
aam
dec
adc
es
scas
cmp
nop
sbb
sub
jp
aad
pushf
out
xor
xchg
iret
mov
cmp
arpl
cmc
fdecstp
sub
mov
and
mov
sbb
jno
fbld
int3
int3
xchg
cltd
xlat
pop
cmp
xchg
sbb
out
cld
and
fiadds
fwait
arpl
movsb
adc
das
inc
loop
fldpi
das
aam
test
mov
testl
pop
pop
cs
push
add
xchg
lcall
lock
les
jae
dec
shrl
andl
xor
pop
ficomps
cmc
ljmp
fcompl
xorl
mov
dec
cli
aad
lock
push
aaa
imul
fcomps
flds
dec
cmp
mov
and
mov
icebp
outsb
pop
mov
and
adcb
rcrl
mov
sub
popa
push
adc
out
sub
adc
insb
mov
xor
sub
mov
adc
inc
iret
dec
cmp
sub
mov
jb
and
mov
cmc
mov
mov
pop
add
or
out
enter
adc
in
aaa
loope
jmp
and
jge
jp
and
std
je
aaa
ret
adc
pop
dec
jno
sub
js
or
push
loop
clc
or
sbb
or
cli
mov
rcrb
idivl
lods
jg
ja
iret
or
lret
xor
je
adc
lcall
scas
addb
adc
pop
sub
shlb
incl
repz
inc
pminub
leave
cmpsb
icebp
outsl
or
inc
mov
pop
icebp
push
fstps
cmp
inc
hlt
cmp
adc
mov
insb
push
out
sub
push
bound
add
les
in
icebp
cmp
ss
lods
mov
andb
adc
inc
dec
insb
inc
ffree
mov
lock
cmp
gs
fisttpl
jne
arpl
pushl
mov
jns
cmp
dec
or
jl
loop
lock
pop
fidivrs
ficompl
fwait
in
mov
fs
jecxz
push
popf
sbb
xlat
loop
and
and
mov
ret
push
ret
imul
mov
jb
xchg
insl
mov
ljmp
sub
test
hlt
jne
bnd
shr
jnp
stos
sti
jnp
rorb
sarl
inc
or
add
aas
ja
cmp
mov
mov
adc
das
test
out
adc
inc
mov
fld
aaa
outsb
roll
inc
xchg
fisttpll
in
aaa
xchg
ficoml
jle
enter
rcrl
std
dec
aas
test
add
inc
pop
dec
adc
xchg
scas
jo
pop
popfw
pop
mov
push
mov
pop
shlb
rcrl
loope
outsl
out
push
lret
or
loopne
aas
data16
push
push
dec
dec
adc
jns
and
imul
adc
aad
das
adc
sub
sub
pop
push
aaa
dec
icebp
addr16
jmp
aaa
push
push
bound
adc
push
dec
cmc
nop
jo
mov
out
cmp
stc
outsl
gs
add
loop
mov
add
jmp
inc
fsubrl
adc
xchg
sbb
stc
cmpsl
mov
mov
xor
fildll
xchg
fstpl
adc
inc
scas
push
add
rolb
push
mov
std
arpl
inc
int3
mov
cwtl
mov
pop
pop
daa
and
leave
and
xchg
add
cmc
jb
sub
inc
and
outsl
imul
cmc
jmp
sub
dec
ror
int3
fs
fldl
pushl
mov
add
popf
add
aad
or
fldenv
xor
push
jl
lock
aam
cmp
in
lahf
fwait
cmp
mov
sub
and
in
cwtl
dec
popl
and
jnp
mov
neg
pop
lods
mov
in
xlat
xor
sbb
or
scas
enter
mov
or
push
std
insl
mov
js
mov
xor
mov
fsubl
xor
std
mov
repnz
movsb
std
enter
in
xor
pop
lahf
jl
sub
mov
push
sbb
lds
icebp
jge
adc
mov
jns
dec
pusha
push
outsb
push
fwait
cmp
dec
adc
rcl
cmp
inc
fwait
mov
ss
add
pusha
pop
xchg
inc
mov
dec
xchg
mov
mov
or
mov
sub
jp
ret
cs
movsl
mov
mov
mov
dec
fs
or
andl
out
xchg
and
push
testb
or
push
fisttpl
ds
pop
imul
lods
jecxz
loopne
xor
sbb
aam
jmp
pop
jge
sti
das
jecxz
mov
push
ljmp
jo
aaa
std
lds
mov
and
rolb
add
xchg
outsb
je
mov
cmp
mov
dec
jle
cmpsl
ret
test
mov
adc
clc
add
dec
cli
test
jmp
out
adc
in
fsubl
loopne
ficomps
imul
inc
repz
lods
sbb
cmp
push
push
sub
ret
xchg
sub
cmpsl
pop
aad
cltd
mov
lea
es
sub
in
lahf
js
sub
mov
iret
ret
lds
and
imul
outsl
sbb
fisubs
arpl
fsubr
ret
popf
and
lret
inc
popf
out
mov
out
fbstp
ds
push
dec
mov
and
mov
jge
xor
addb
js
push
jne
in
popa
insl
mov
rolb
and
xchg
clc
inc
mov
sbb
fbld
xchg
imul
mov
scas
sbb
fstpl
mov
insl
gs
cmp
or
sahf
add
jo
pop
in
fcoms
inc
jbe
dec
cmp
pop
jmp
dec
mov
pop
push
cmpsl
in
mov
in
out
jge
adc
push
call
lcall
mov
loop
aad
outsl
adc
gs
movsb
pop
out
stc
adc
or
mov
lret
mov
fistpl
scas
add
dec
scas
jg
test
in
mov
ljmp
cmpsl
inc
jle
shll
gs
test
xor
push
push
push
mov
js
mov
pop
and
aas
inc
cmc
push
lods
xchg
pop
popa
mov
inc
loop
jno
xchg
dec
mov
inc
pop
dec
cmpsb
js
jle
dec
inc
mov
sti
outsb
scas
mov
jae
es
sub
ljmp
mov
into
inc
lods
cltd
sbb
jns
sub
adcl
dec
push
gs
hlt
lds
dec
popa
shll
mov
xor
sahf
scas
jae
lock
pop
clc
pop
int3
lock
or
int
adc
test
out
jg
lret
pop
in
add
mov
sub
and
gs
adc
loop
cmpsl
adc
jo
adc
daa
mov
cmp
jge
mov
fcmovbe
xor
add
test
repnz
add
xor
add
pop
add
pop
leave
mov
cmp
test
xor
sub
add
jns
pop
add
xchg
xor
xchg
adc
lea
push
lret
out
xor
das
ja
pop
cmp
ret
adc
out
sub
or
repz
mov
adc
jg
dec
aam
dec
cmp
dec
adc
lods
adc
pop
and
ficoms
repnz
lock
pusha
nop
scas
jnp
mov
lods
inc
pop
pop
mov
jae
push
push
pop
sbb
push
insl
shlb
push
pusha
test
adc
jmp
or
dec
inc
stos
mov
mov
int
icebp
lret
lods
addl
insb
push
loopne
add
pop
addr16
jecxz
jo
jmp
icebp
stc
and
mov
gs
addr16
out
pusha
out
addr16
adc
dec
lds
cwtl
pop
xor
jge
jmp
scas
gs
repnz
xor
sarb
jo
cmpsb
push
js
fsubl
sbb
xchg
mov
sub
xchg
inc
int
cwtl
xchg
mov
mov
pop
outsb
fdivrl
or
adc
aam
fdivrl
ret
push
sbb
stos
arpl
popf
pop
lret
push
jl
aas
rcrb
std
insb
pop
mov
cmc
mull
fdivrs
jecxz
push
fcoml
mov
jle
enter
push
push
fmull
inc
sub
sbb
adc
xor
cmp
lea
cmp
popa
popa
leave
stos
leave
sub
ds
push
movsl
or
ret
movsb
loope
stos
mov
jge
pop
or
ret
adc
lea
pop
ret
xchg
ficomps
stos
lahf
cmp
adc
call
fnstenv
inc
add
out
jne
clc
gs
pop
rcr
dec
mov
sbb
outsl
push
and
call
out
sub
fnstcw
jle
scas
cmp
out
gs
xchg
test
and
jo
aad
inc
sbb
addr16
pop
into
adc
mov
loope
jmp
popf
mov
andb
mov
xchg
cmp
addr16
add
adc
sahf
push
mov
rorb
int
test
es
or
adc
pop
mov
subb
mov
jo
inc
outsl
inc
xor
test
pop
addl
jno
ds
inc
lret
push
mov
fcomp
decb
mov
lahf
pop
aas
int3
adc
xchg
fmul
movsb
into
cmp
in
es
dec
dec
rolb
fs
add
jne
adc
sub
mov
sbb
jno
inc
dec
mov
psubq
xchg
mov
out
mov
sar
xchg
cmp
cmc
mov
push
mov
in
cmpsb
mov
jo
push
popf
or
jbe
sbb
sub
test
inc
dec
shlb
jae
push
mov
mov
in
xchg
mov
jle
or
lret
mov
xlat
js
cmp
xchg
sub
aam
insb
inc
pop
xchg
std
xor
in
mov
mov
outsl
pop
push
mov
cmp
in
push
mov
in
pop
in
movl
pop
ljmp
ret
jb
sub
mov
enter
and
mov
mov
push
jg
sahf
test
sub
push
sub
and
or
mov
add
mov
mov
les
or
cwtl
adc
xchg
mov
sub
sbb
hlt
adc
lret
pop
out
jmp
push
push
push
jg
pop
ret
jns
cmp
mov
pop
mov
out
dec
jno
mov
mov
push
adc
inc
sub
xchg
adc
mov
mov
and
mov
xchg
push
pushf
stc
outsl
test
orb
push
xchg
xor
cli
dec
out
fistpl
fsubl
inc
sbb
mov
push
mov
lods
jle
mov
dec
les
sub
testb
mov
ret
jo
cmpsb
hlt
jnp
wrmsr
xor
pop
mov
pop
and
mov
cwtl
mulb
jle
jnp
dec
das
xchg
rcl
or
lods
and
push
sub
lock
adc
imull
mov
mov
inc
pop
push
sub
test
add
mov
call
mov
js
mov
rcll
daa
mov
arpl
xorl
or
push
out
adc
push
aad
fisubl
imul
mov
pop
adc
int
xor
bound
into
xor
sub
push
fimuls
push
cmp
es
out
icebp
fdivrl
addr16
js
iret
pusha
lock
add
jmp
sub
outsb
hlt
jb
and
jae
cmc
inc
in
jae
inc
jae
push
adc
or
idivb
cld
fsub
out
in
test
lahf
pop
stc
scas
stos
inc
dec
test
jo
xorl
fnstenv
test
jae
add
jno
xchg
sti
mov
adc
jnp
cltd
cwtl
out
pop
mov
enter
scas
filds
out
mov
dec
xchg
flds
dec
pop
iret
imul
test
cmc
and
cld
fmul
movsl
clc
fisttpll
or
pushf
shrb
xor
sbb
adc
aas
jae
inc
mov
stc
repz
mov
pop
inc
fcoms
popf
ljmp
sahf
mov
rcr
stos
les
pop
fcoms
ret
adc
xor
and
jg
daa
dec
cmp
xor
xchg
gs
jo
int3
lods
or
cld
in
aas
mov
rcrl
xor
loop
je
lahf
pop
jne
or
in
scas
adc
popl
mov
repnz
adc
and
scas
xchg
das
decb
jo
sbb
push
das
jns
adc
jnp
pop
sbb
sub
out
cvtps2pd
add
mov
rorb
fbstp
pusha
cmp
lea
xor
pop
push
push
clc
aam
icebp
test
insl
fsubrs
movsb
fdivrl
push
lret
xchg
add
or
cmp
pop
rclb
and
enter
test
dec
pop
ss
mov
sbb
xor
inc
pop
shll
add
gs
inc
testb
stos
jb
mov
cmpsl
psubq
fcomi
addr16
lret
mov
jno
xchg
aam
cmp
xor
sbb
cli
pop
inc
mov
lds
rcl
push
ds
movsl
out
sbb
adc
pop
das
mov
loopne
arpl
or
xor
push
jmp
xchg
popa
in
adc
repnz
add
push
stos
stc
addr16
cmp
subl
scas
mov
test
bound
rclb
mov
cmp
imul
cmc
incl
sub
sbb
or
fmulp
ret
and
jmp
add
mov
and
pushf
cmpsl
gs
popa
push
js
pop
ret
cmp
push
cld
mov
inc
jns
fwait
fwait
xchg
daa
out
fs
aaa
shlb
jne
hlt
mov
dec
sub
in
repnz
sahf
mov
mov
popf
push
mov
fwait
loop
jbe
scas
mov
vmovsd
addr16
xchg
add
clc
xchg
mov
loop
sarl
loop
in
test
div
daa
pop
je
pop
sub
xor
pop
adc
pop
ret
in
cmc
and
pop
push
pop
ret
inc
das
ljmp
mov
cmp
mov
fistl
mov
bound
test
stc
and
cmpsl
mov
xchg
cmp
xchg
lea
mov
jnp
or
and
pop
out
add
incb
imul
or
cmp
lea
adc
adc
shrb
out
cmp
inc
je
lea
mov
sbb
int
push
mov
je
scas
das
sbb
jg
dec
mov
fnstenv
add
mov
fnstcw
aas
jmp
movsl
stos
pop
or
mov
xchg
clc
jbe
mov
add
jmp
xchg
divb
fisttpll
pop
clc
shlb
icebp
test
inc
cmp
and
faddl
mov
call
cmp
ljmp
lds
pushf
lcall
cs
push
cmp
dec
mov
mov
xor
adc
subb
lds
aad
mov
pop
xchg
inc
mov
hlt
and
pop
outsl
dec
xorb
jnp
scas
in
dec
push
cmp
push
jle
arpl
cs
in
mov
in
lahf
mov
gs
imul
pop
adc
cmp
pop
lret
sbb
dec
jns
or
pop
add
rcrl
popa
outsb
cmpxchg
sbb
pop
div
mov
pop
jbe,pn
pop
fsubl
cltd
es
jl
in
jp
cmpsb
out
sbb
out
out
notl
mov
ret
pop
xor
scas
inc
cli
loop
sbb
movd
push
mov
dec
ret
ss
xchg
mov
or
jb
dec
fcmovbe
lds
dec
data16
pop
rcrl
repnz
idivl
pop
ds
dec
adc
notl
loopne
dec
adcl
add
dec
push
xlat
decb
push
cmc
fildll
inc
test
add
inc
push
insb
pop
jae
int
adc
movsb
ds
outsb
icebp
xchg
xchg
movsb
fs
sbb
jp
rol
into
ja
js
fistpll
sbb
lock
push
adc
mov
test
push
aas
jnp
cmpsl
jge
dec
or
aam
or
xor
ds
cmp
ds
fcmovnb
push
pushl
outsl
mov
adc
popf
in
pop
sbb
jnp
incb
mov
jmp
movsb
cmp
rcrl
mov
lods
push
loop
xor
lea
inc
cld
cmp
mov
iret
ljmp
movsb
jle
cltd
push
xor
ja
mov
push
cmp
mov
insb
dec
mov
sub
add
aas
push
cmp
push
mov
js
outsb
adc
ror
adc
add
repnz
mov
jp
in
insb
lahf
pop
daa
lret
xchg
ret
push
js
sarb
inc
push
insl
sub
xor
jp
jle
fistpll
and
add
clc
and
pop
inc
nop
adc
fcoml
cwtl
mov
push
repnz
fs
sbb
xchg
dec
push
jmp
lds
push
mov
push
jmp
shlb
inc
jae
lret
or
add
outsl
xchg
mov
out
mov
inc
xor
mov
push
insb
or
mov
push
fstpt
add
pop
or
push
jg
movsb
push
in
mov
xor
das
mov
clc
call
cltd
mov
daa
rcrb
fidivs
jno
inc
sbb
xchg
push
sbb
pop
xchg
test
dec
sbb
push
ret
xor
gs
xor
cli
mov
movsb
cmp
loope
dec
and
incl
scas
cmpsb
lods
sub
adc
sarl
flds
push
push
xor
fcmovu
sbb
scas
aad
nop
fwait
pop
push
sub
out
cltd
mov
sbb
push
stos
pop
out
clc
mov
jne
mov
fxch
add
fdivrp
hlt
mov
int
jns
cmp
and
add
inc
adc
fisubs
sub
xchg
cli
and
mov
fisubrl
rorl
and
add
nop
adc
test
cmp
xchg
or
in
call
push
mov
in
dec
fdiv
pop
push
dec
faddl
jmp
lods
fcompl
insb
adc
js
add
repz
mov
in
xchg
xchg
xor
out
xor
imul
popf
or
push
or
xlat
nop
icebp
xchg
xchg
pop
shll
lea
fadd
sbb
mov
cmc
ds
popa
pop
pop
sbb
add
or
push
sbb
ds
test
stos
or
fstl
push
cmp
data16
and
xchg
loopne
and
mov
or
xor
add
xor
mov
ss
adc
sahf
inc
loopne
pusha
pop
jmp
cltd
pop
mov
mov
ja
fistpll
push
cmp
fildl
dec
jae
sbb
inc
outsl
mov
int
test
movsb
hlt
lgs
out
push
test
pop
repnz
lahf
rclb
xchg
cmp
cmpsb
sub
mov
rol
in
mov
or
jge
lds
sub
loop
mov
mov
dec
je
fs
ret
enter
enter
inc
jbe
mov
sub
nop
mov
stos
fisubrs
mov
loopne
icebp
xchg
push
sarl
outsl
cmp
imul
call
test
btr
pop
pop
test
mov
popa
aas
sub
fimull
loop
add
ret
sarb
sub
pop
pop
in
xchg
fbstp
shll
fnsave
fs
notl
loopne
hlt
pusha
fisttpll
push
out
cmpsl
rcl
xor
add
cmp
lcall
push
xor
jne
rcrl
nop
lret
mov
push
call
je
xchg
adc
subl
inc
and
mov
pop
mov
push
push
or
and
mov
repz
leave
lcall
imul
jle
xor
mov
mov
out
jne
sahf
xor
adc
jbe
cli
icebp
adc
pop
and
sub
imul
xor
push
sbb
and
sbb
notb
mov
inc
xchg
pop
pushf
sbb
pop
inc
xchg
sub
xchg
bound
inc
sbb
add
pop
idiv
repnz
inc
cmp
ret
sbb
adc
sbb
cltd
test
and
cmpsb
and
fdivrl
loopne
arpl
adc
int
xor
arpl
mov
ds
adc
and
idivb
pop
xlat
sub
call
push
xchg
pop
out
dec
clc
in
inc
xchg
mov
pop
push
or
push
mov
ss
fildll
push
lret
add
mov
push
in
das
frstor
sbb
add
xor
aad
in
pop
std
push
sbb
push
sbb
jge
push
mov
add
adc
adc
or
lcall
imul
addr16
cli
mov
mov
les
fildll
pop
outsl
cli
adc
int3
jp
jae
mov
mov
sub
lcall
out
adc
test
xor
std
lods
push
hlt
push
mov
pop
sbb
xor
add
lds
fwait
addr16
jnp
jae
mov
mov
lret
cli
sti
test
push
pushf
or
stos
mov
pop
lods
push
inc
lahf
adc
fcompl
pop
js
aam
in
or
and
pop
xchg
mov
fisttps
push
xor
mov
les
lret
lahf
add
loopne
movsb
xchg
pushl
adc
mov
lods
sub
stc
mov
jmp
js
lret
xor
mov
sbb
ret
jbe
jl
les
mov
or
aas
or
pop
scas
in
sub
enter
rorb
sub
das
push
cmc
cmp
fwait
pop
ficompl
fdivl
insb
add
iret
fcmovu
mov
imul
mov
mov
in
inc
and
testb
jge
lea
inc
jl
xor
cmc
lretw
push
mov
sub
and
mov
loope
movsb
bound
xor
dec
push
xor
mov
mov
sbb
jl
adc
leave
xchg
push
int3
ss
popl
jge
push
std
adc
stos
cmc
leave
xor
ret
inc
inc
sub
sahf
jns
sub
loopew
dec
xchg
mov
jle
negl
jnp
jecxz
fwait
xor
stc
fcomps
dec
sub
dec
mov
mov
mov
cmpsl
add
stos
aad
push
add
xchg
sbb
sub
mov
cld
cmp
fdivr
outsb
push
int
lret
mov
outsb
jge
insl
ret
fcoms
mov
mov
out
xor
adc
dec
and
mov
sbb
mov
scas
pop
test
inc
inc
cmp
int3
xchg
lea
rclb
pusha
sbb
pop
orl
and
fcoml
dec
jbe
xchg
add
popf
or
sbb
dec
or
imul
jb
in
dec
mov
rorl
dec
shll
bound
xchg
sbb
mov
scas
cmp
aad
scas
pop
movsl
xor
adc
inc
aaa
cmc
jne
xlat
xor
mov
pop
push
adc
je
in
and
adc
xchg
xchg
add
xor
pop
cmpsl
pop
inc
push
pop
and
dec
je
leave
mov
mov
in
outsb
push
sti
lods
fwait
mov
add
int3
jbe
repz
mov
out
xor
push
dec
xor
imul
xorl
mov
add
pop
mov
addl
add
push
mov
pop
stc
cmpsb
push
fcomp
cltd
inc
fstpl
pop
adc
mov
adc
inc
fwait
push
test
sub
cmp
insl
sub
stc
bound
adc
fwait
pop
xchg
push
push
aaa
and
leave
sti
lods
loopne
xor
add
outsb
push
cmp
repz
out
or
ss
sub
jbe
outsb
mov
das
cltd
dec
push
scas
and
fwait
scas
xchg
mov
adc
ljmp
outsb
ss
sti
or
iret
cmp
adc
push
and
xchg
mov
loop
sbb
fsub
cmc
ret
orb
cwtl
insb
mov
push
movb
mov
out
fs
push
jo
pop
dec
ja
xlat
movsl
jnp,pn
sub
lds
sub
lock
mov
lock
and
adc
lcall
jo
in
mov
sarl
xor
mov
arpl
mov
add
les
sbb
xchg
sbb
aam
sbbl
sbb
es
mov
pop
push
lahf
cmp
addr16
inc
aam
pop
push
test
pop
aaa
jo
xorl
imul
pop
enter
adc
fwait
mov
vaddpd
mov
sahf
iret
call
popa
mov
mov
arpl
popa
xchg
push
gs
push
pusha
sbb
clc
jp
in
or
adc
sub
lahf
or
inc
dec
mov
or
scas
or
sbb
inc
mov
je
les
push
adc
sbb
pop
test
xor
and
pushf
mov
hlt
addr16
int
mov
xorb
sub
arpl
lahf
pop
jno
xchg
sub
sbb
mov
mov
xchg
aam
lcall
repnz
xor
roll
push
cmp
fs
sub
cltd
fidivrs
mov
mov
test
in
cmpsb
jb
xchg
inc
int3
mov
fcomip
jmp
pop
cmp
popf
sbb
fisubrs
ja
inc
imul
dec
pop
lret
pop
dec
out
sub
mov
push
js
mov
pop
mov
mov
fadds
sub
sub
jnp
cmp
aad
bound
imulb
das
in
add
sub
movsl
cwtl
jnp
pop
leave
sbb
inc
fisubrs
xchg
repnz
shlb
ja
mov
sarl
pop
movsb
pop
jnp
js
sbb
xchg
mov
cmp
sub
adc
xcrypt-ecb
cmpsl
or
jno
sub
repz
pop
rclb
lods
lahf
jle
repz
push
ret
addr16
out
das
test
aad
mov
stos
enter
inc
cmpsl
pop
insb
add
cmp
xchg
mov
fldt
aam
cmpsl
inc
pop
ret
xchg
iret
inc
mov
shll
mov
cmpsb
mov
xor
xchg
pop
xlat
jg
inc
jnp
enter
stc
loop
mov
xchg
inc
sbb
dec
js
sbb
adc
mov
testl
inc
inc
inc
jp
jo
ret
pop
lods
lods
or
jne
sub
mov
leave
push
stc
mov
jb
iret
xorb
push
cmpsb
mov
add
loop
adc
sub
int3
adc
cmpsb
cmp
jb
adc
icebp
lods
rol
cmp
loopne
or
mov
enter
add
lahf
rcrl
cwtl
dec
stos
test
scas
jb
push
jp
push
cmp
loopne
jne
adc
int
imulb
add
and
fwait
add
rorb
cmp
mov
in
sub
imul
in
repnz
push
xchg
cwtl
outsb
lcall
ret
mov
jne
mov
lods
mov
sub
push
ret
testb
pop
cwtl
out
jl
cld
in
testl
cmovl
xorb
xor
mov
sub
rcrl
jg
lret
xchg
in
into
lcall
mov
sbb
pop
icebp
roll
inc
es
cld
xor
rcll
mov
mov
jge
mov
xchg
mov
xor
call
les
mov
add
movsb
dec
pushf
daa
jp
popa
push
bound
loope
mov
adc
jae
or
adc
stc
int3
adc
popf
pop
cmc
std
adcb
add
out
cmpsb
pop
addl
ficoms
push
pop
mov
xchg
pmuludq
xlat
pop
lret
adc
xchg
inc
inc
push
xor
dec
or
dec
cmp
nop
mov
sub
lret
xchg
outsl
jno
xor
cmpsb
cmp
jno
push
mov
add
lahf
mov
sub
shll
movsl
test
jp
xor
xchg
add
dec
xchg
add
insb
dec
out
push
xor
stos
push
call
xchg
xor
rcr
mov
cmp
add
cmp
leave
test
int3
test
aas
movl
pop
mov
and
adc
cs
gs
sbb
jg
daa
notl
in
jb
mov
mov
xchg
pop
mov
mov
jge
add
jnp
jno
jge
andb
pop
fdivrs
or
out
dec
cli
push
ja
cmpsb
adcb
popf
sti
push
icebp
mov
ss
aas
xchg
jnp
add
and
lods
aam
mov
xor
inc
fbstp
scas
push
leave
xlat
lock
push
xor
xor
dec
xchg
icebp
lcall
insl
aas
push
jo
cmc
mov
mov
adc
pop
das
xor
jl
test
out
pop
lods
std
aaa
aas
mov
add
scas
xchg
add
repz
xchg
or
xchg
xchg
loope
stc
mov
xchg
jo
mov
popf
sbb
dec
je
movsl
loopne
incb
xor
add
push
mov
mov
ss
dec
mov
push
movsb
icebp
rclb
stc
aaa
jo
fdivrl
add
loope
int
add
push
in
fs
dec
mov
xchg
fwait
ret
sbb
std
pop
ljmp
push
adc
cmp
push
loope
addb
rorb
mov
add
rorl
cwtl
lods
std
lea
pusha
cli
mov
sbb
sti
or
lods
pop
jns
aad
stos
les
and
cltd
loope
imul
adc
je
jmp
subl
xchg
jno
xchg
lods
aaa
idiv
or
mov
es
sub
imul
inc
filds
mov
dec
decb
repnz
ljmp
push
insl
push
mov
mov
xlat
in
xchg
push
jo
jge
cmp
sbb
jg
cmp
out
movsl
inc
addr16
outsl
roll
sbb
sti
cs
outsl
or
inc
lock
jbe
out
repnz
leave
lods
xor
push
aaa
outsl
arpl
jae
inc
cli
dec
mov
das
inc
jecxz
or
sub
cmp
rcrb
out
xchg
sbb
xchg
lcall
push
mov
iret
xchg
shll
pushf
and
dec
pusha
std
js
loopne
push
fildl
mov
mov
sub
hlt
mov
push
hlt
cltd
inc
xchg
jae
dec
pushf
sahf
mov
es
shlb
xor
imul
sti
repz
ja
movsb
xor
wrmsr
addr16
xchg
sti
stc
scas
scas
push
sub
pop
inc
aaa
lock
or
adc
jp
scas
jmp
push
outsl
pop
cmp
cmc
add
cltd
push
dec
push
adc
les
mov
cwtl
mov
iret
jle
in
pusha
sbb
in
sarl
cmp
repnz
das
mov
add
lea
mov
jecxz
sub
repz
out
nop
mov
sub
sbb
pop
jo
aad
std
dec
and
inc
aas
add
in
pop
and
sbb
mov
lret
xchg
xor
mov
test
xchg
clc
dec
pop
sub
andb
into
mov
icebp
xchg
fs
arpl
sub
mov
sbb
add
mov
xor
call
xchg
in
dec
adc
xchg
push
or
inc
mov
xchg
lcall
int
lea
loopne
and
xor
andb
aaa
ds
inc
jg
mov
and
add
and
push
and
mov
cmp
inc
mov
adc
mov
outsb
mov
dec
xlat
or
mov
mov
int3
rcr
add
fisttps
cwtl
pushf
add
cmpsb
jae
cmp
loopne,pn
mov
leave
pop
xor
or
stos
jno
xchg
jno
dec
in
inc
cmpsb
xchg
out
lds
jns
pop
mov
push
mov
xchg
popa
cmpsl
pop
or
dec
call
mov
aad
sbb
les
xchg
fcmove
into
lock
cmpl
dec
mov
xchg
cmp
pop
inc
adc
dec
sbb
mov
mov
jecxz
or
ljmp
mov
ret
mov
sarb
and
cli
fs
daa
cli
xor
adc
ficompl
mov
mov
inc
mov
repz
adcl
into
xchg
push
push
pop
dec
xchg
jno
xchg
and
add
loopne
stos
jmp
mov
jnp
sub
and
fidivrs
int3
xchg
and
inc
hlt
test
lcall
ret
adc
mov
dec
dec
adc
xchg
jl
into
xor
popa
mov
push
lea
int
push
xchg
xchg
sub
push
popa
stos
mov
pop
sub
pop
ret
inc
mov
adc
clc
fstpl
xlat
pop
sub
in
out
sbb
ficoml
sub
out
dec
leave
xor
inc
aam
ljmp
jbe
fidivrl
mov
jmp
shl
mov
xchg
jne
and
push
loop
add
in
adc
mov
add
in
pop
adc
arpl
filds
outsl
gs
popa
sub
fimull
jmp
xchg
aaa
push
xor
sub
loope
ret
out
je
pusha
and
mov
or
int3
test
divb
loope
and
hlt
push
testb
mov
lods
xchg
fcmovne
inc
fidivrl
inc
inc
js
scas
dec
push
insb
mov
inc
xor
orb
rcrb
lods
outsb
loope
mov
adc
lock
or
iret
adc
or
xor
pop
rcl
inc
cmp
and
dec
xorl
push
dec
and
mov
ret
xchg
xchg
and
out
daa
lahf
push
dec
push
adc
cmpsb
add
or
xchg
add
sbb
loopne
fisubl
std
insl
mov
xlat
popa
fdivl
sub
cmp
sbb
pop
inc
leave
mov
cmpsb
and
push
daa
repnz
xlat
and
cmp
notl
loop
cmpsl
pop
cmp
or
dec
inc
repnz
addl
aas
aad
inc
sub
push
repnz
xchg
test
cmpb
ret
xchg
fidivrs
sub
dec
adc
roll
fsubl
lahf
xchg
and
icebp
out
ljmp
insl
cmp
cli
movsb
in
in
stc
mov
in
ss
cmp
sub
sarl
push
mov
sub
push
or
int
xchg
je
pop
stos
popf
flds
lahf
lods
loop
pop
mov
xchg
punpckhwd
push
lcall
sbb
lret
imul
sti
lret
leave
bound
mov
fiaddl
lret
mov
dec
push
or
mov
sbb
mov
fsubrl
xchg
adc
movb
cmp
sarb
push
ja
mov
mov
aad
cmp
xchg
daa
dec
arpl
jb
xor
dec
mov
mov
lcall
mov
mov
mov
aad
std
mov
pop
add
in
xchg
inc
leave
sub
jle
imul
into
xchg
jmp
out
or
clc
dec
inc
inc
scas
in
xor
stos
popa
cmp
add
sub
sti
fstl
and
lret
dec
aaa
xlat
or
fwait
jno
xorb
fidivs
aaa
cmp
add
mov
outsl
jae
ds
clc
ret
xchg
mov
xchg
sub
mov
sti
jb
imul
mov
bound
outsl
sar
or
int
loopne
adc
jg
call
rcll
sar
or
sbb
out
ss
jns
shrl
subl
mov
mov
in
mov
popa
lcall
sarl
sbb
lahf
pusha
out
aas
or
insl
jmp
mov
jecxz
mov
pop
pop
push
push
daa
test
fs
sub
xor
sarb
out
xchg
jae
call
sub
test
aas
icebp
mov
dec
outsb
lods
neg
mov
inc
rcrb
xchg
cmp
clc
subb
repz
xchg
inc
xchg
cli
lods
xor
out
or
inc
push
push
xor
jp
daa
add
sbb
mov
mov
lret
pop
xchg
jecxz
add
inc
fdivrl
mov
test
outsb
mov
mov
fisubs
jne
int
sub
enter
out
out
lods
pusha
enter
test
mov
mov
mov
jg
out
out
rol
xchg
xor
cmp
sub
scas
sub
or
sahf
dec
sbb
ret
lahf
test
or
dec
pusha
xchg
sahf
dec
xchg
sub
pop
icebp
inc
ret
jbe
icebp
mov
test
push
lea
and
dec
test
and
push
bound
adc
add
cmp
xorb
push
daa
jle
loop
stos
mov
rcll
enter
xor
sub
sub
xchg
stc
mov
shl
sbb
push
push
or
xor
bound
mov
xchg
test
inc
int3
and
adc
xchg
dec
sub
in
je
push
loop
popf
or
sbb
enter
pop
sbb
push
fcmovbe
jp
popa
rol
sbb
cli
fidivl
push
xor
sub
mov
inc
insb
inc
fisubrs
ret
lahf
inc
jmp
adc
mov
jg
jne
in
pop
sub
icebp
or
orb
mov
push
fwait
insb
xlat
insl
push
je
push
rorl
sub
adc
pop
mov
inc
xchg
int3
inc
inc
add
arpl
movsl
and
js
and
rorb
addl
pop
sbb
sub
jb
dec
fsubs
pop
inc
popf
cmp
call
int
sarb
adc
inc
sbb
sahf
repnz
push
push
sub
cmp
xor
pop
mov
sahf
ss
test
js
leave
cmp
or
dec
fnstenv
mov
fsubs
lret
xor
js
fwait
stos
xor
out
and
and
sub
fs
aad
lods
add
push
mov
popf
hlt
repz
inc
adc
dec
sbbb
lods
iret
jae
add
cmpsb
jb
push
icebp
mov
push
lods
testb
jl
jge
cmp
add
adc
adc
pop
mov
fistpl
dec
inc
mov
dec
sub
rorb
icebp
mov
xchg
or
repz
das
cwtl
sub
xchg
insb
lret
mov
jo
jnp
sbb
jne
jge
sbb
jne
jno
jnp
xchg
and
push
push
sahf
ret
inc
roll
fsub
fucomp
push
rcrl
lahf
cmp
andb
js
jns
sbbb
inc
fwait
xor
xor
sub
inc
inc
roll
jmp
sub
lahf
mov
dec
sub
test
xor
push
and
lods
mov
fnsave
push
fsubrs
xchg
outsb
xchg
es
add
mov
mov
pusha
fdivrp
rcr
xchg
mov
fimull
jmp
add
jp
push
dec
insb
aas
dec
mov
arpl
imul
in
mov
popa
push
loop
xchg
mov
stos
ret
in
mov
movsb
cmp
dec
imul
adc
and
lahf
lods
shlb
sub
cmpsb
mov
in
push
push
pop
mov
or
in
or
dec
mov
in
adc
sahf
ss
push
add
or
mov
cmp
icebp
pop
rolb
popf
pop
pushl
mov
push
lar
add
or
gs
push
sarl
flds
jne
inc
adc
hlt
or
das
jmp
jmp
cmp
aad
decl
shl
mov
mov
in
loop
subl
mov
movsb
lods
fimull
ficoml
jo
and
and
pop
jns
jle
ds
negb
sub
add
int3
iret
imul
cmp
pop
fldl
sbb
dec
jle
lods
pop
es
std
push
sbb
xchg
jl
cld
aad
jbe
push
cltd
inc
fucomip
lds
fwait
cwtl
jmp
add
inc
inc
adcb
xor
pop
cwtl
pop
loopne
shr
sbb
push
scas
mov
mov
mov
pop
int3
cmp
and
push
out
sub
adc
lock
in
in
insl
repnz
test
sub
and
pusha
mov
pop
mov
mov
jo
lea
inc
mov
push
pop
dec
stc
or
cmpsl
inc
pop
xor
push
and
mov
loope
nop
or
pushf
outsl
leave
pop
int3
stos
xchg
jae
ja
inc
xorl
mov
cmp
out
inc
xchg
fcmovne
xor
ljmp
out
mov
into
push
ljmp
pop
mov
andl
cs
and
mov
imul
ljmp
or
ljmp
mov
xchg
aas
out
cmp
repz
jns
in
insl
mul
dec
incb
xchg
sti
jne
add
pop
push
sub
and
ret
jo
push
and
pop
sarb
push
stos
inc
cmp
inc
mov
mov
bound
pushf
mov
adc
dec
dec
pop
xchg
hlt
jbe
inc
jmp
lret
in
cmp
adc
lahf
test
imul
mov
xchg
loopne
shl
les
push
mov
nop
cwtl
imul
addl
mov
adc
adc
in
dec
and
push
aad
or
cs
sbb
js
loope
fucom
les
lods
out
jp
push
dec
jge
int
and
in
jb
enter
jb
int
lcall
or
out
xor
pushf
jnp
fildl
stos
jno
cmp
hlt
mov
loopne
aam
es
rcrl
imul
xlat
inc
push
cs
push
ljmp
ret
cli
push
sti
sbb
dec
lds
cmc
sub
cli
shlb
add
hlt
sub
icebp
dec
fistps
push
mov
ds
jp
push
jno
jmp
mov
fdivl
test
xorb
in
fs
or
mov
dec
sahf
shlb
ljmp
ljmp
fstl
test
cmpsb
sub
jbe
out
imul
pop
ret
push
xor
pop
xchg
xor
lock
in
pop
addl
and
fiadds
int
es
adc
hlt
mov
xchg
andl
or
lods
push
loope
xchg
js
add
mov
insb
fwait
movsb
sahf
dec
mov
or
sahf
mov
in
xchg
mov
lret
add
pop
incb
enter
fdivr
dec
sahf
clc
push
popa
sub
lods
mov
loopne
int
ficoml
aas
jmp
add
mov
rcr
jae
iret
insl
shlb
out
or
rcr
fsts
add
pop
icebp
or
sbb
shrb
mov
testl
jge
mov
jle
repz
xchg
dec
xchg
movsl
mov
stc
adc
adc
mov
add
dec
loop
pusha
stc
mov
sub
dec
out
test
enter
cmp
jne
xchg
mov
mov
or
mov
ret
bnd
inc
inc
sahf
loopne
adc
cmp
push
int
mov
xchg
jbe
add
xor
mov
pushf
lods
rorb
xor
int3
xchg
mov
inc
test
rorl
mov
jg
push
cltd
dec
push
test
xor
imul
outsb
jo
out
mov
xlat
cmp
imul
jns
mov
pop
mov
pop
sti
ret
je
jge
add
or
push
mov
mull
jb
adc
loopne
cmp
push
rcrl
sub
or
push
int
xor
outsb
pop
lret
jmp
jge
std
hlt
push
sub
dec
sbb
and
xor
ljmp
dec
xor
and
dec
out
lahf
mov
dec
in
jne
fistpll
jbe
push
add
dec
adc
movsb
fwait
hlt
cmp
cmp
sbb
jnp
sahf
or
movsl
fdivl
mov
add
pop
jns
push
idiv
lock
stos
mov
cltd
fldl
cmp
mul
push
xchg
jmp
insb
rcrl
pushf
je
mov
cmp
je
cmpb
xchg
pop
ss
dec
jae
ret
out
insb
stos
mov
mov
xchg
pushf
xor
fimull
aam
dec
out
xchg
push
ret
jbe
mov
adc
iret
in
fwait
aaa
sub
jle
jmp
repnz
push
imul
into
out
scas
sub
out
rolb
outsb
fisubrl
insl
or
stos
dec
cmp
pop
popf
bound
mov
lret
movsb
lcall
ja
dec
addr16
test
lahf
cmpsb
repnz
cmp
scas
mov
mov
in
pop
inc
dec
icebp
in
mov
pop
addl
sub
sbb
into
jns
inc
mov
aas
dec
repnz
dec
loopne
loop
jns
icebp
mov
out
sub
daa
jns
mov
fistpl
adc
mov
filds
xor
mov
lret
cli
adc
fimuls
insb
add
sub
clc
mov
push
or
adcb
movsb
mov
and
sbbb
sbb
negl
shl
mov
aas
arpl
dec
fdiv
push
iret
ret
pop
jmp
jno
cmp
fdivs
lret
sti
push
and
bnd
decb
hlt
inc
roll
in
pop
add
add
iret
push
ret
dec
xchg
dec
sarb
scas
cmp
mov
leave
in
inc
hlt
mov
inc
sbb
push
xchg
out
hlt
mov
dec
lret
xor
push
jnp
sub
aad
xchg
and
adc
mov
jmp
daa
aam
sbb
out
popa
pop
aas
dec
popf
pop
sbb
cs
loop
outsb
push
dec
mov
imul
dec
mov
inc
xor
add
movntq
out
push
jo
dec
jo
int3
movsb
test
mov
xor
push
push
jge
imul
push
mov
test
into
loop
dec
xchg
sbb
inc
enter
out
adc
pop
xchg
inc
mov
iret
popf
xlat
jp
push
rcll
in
xor
enter
movsl
loope
jle
push
loopne
cld
inc
lret
mov
mov
inc
xchg
leave
fists
add
sub
fidivs
das
adc
mov
pop
push
mov
sar
das
sbbl
lea
pusha
outsl
dec
fistpl
jo
bound
loop
clc
in
and
repnz
rcrb
inc
mov
and
movsb
out
jnp
xor
nop
popa
xor
sbb
je
outsl
jge
les
pop
pop
lcall
xor
daa
into
or
sub
jecxz
arpl
ret
lock
sarl
hlt
inc
loop
roll
js
in
popa
mov
xchg
mov
inc
mov
add
int
push
cmp
xlat
sbbb
xor
in
jge
stos
rcll
and
jo
lret
aas
inc
or
sub
sub
fstps
std
lods
add
popa
push
pop
xor
pop
aam
dec
iret
imul
pop
movsb
push
pop
je
daa
mov
inc
xchg
mov
ja
daa
aam
sbb
xor
je
dec
or
stos
xchg
push
outsl
fstl
loopne
aad
les
adc
mov
inc
push
fcom
scas
add
add
mov
xchg
rorb
insl
jns
ja
push
sub
enter
mov
iret
or
sahf
adcl
pusha
mov
inc
nop
les
aam
add
icebp
outsb
add
jb
sub
mov
xchg
push
push
jae
push
pop
or
push
add
sub
mov
sahf
dec
js
lock
pusha
loope
cmc
in
sarl
jmp
and
add
lcall
fildl
sub
test
in
jnp
mov
dec
mov
inc
in
insl
jp
pop
lock
fdivrs
add
int3
fistl
jne
outsl
addr16
jmp
mov
ja
mov
dec
and
daa
jo
cmpsl
push
jmp
sbb
mov
inc
addr16
and
repz
xchg
sub
gs
push
in
data16
pusha
pop
movsl
fstpl
divb
mov
out
push
cmp
testl
cmpsl
nop
xorb
and
test
loope
and
cmpl
jl
pop
cli
jl
aam
add
loope
imul
es
out
pop
adcb
sbb
lahf
sub
push
pop
ja
push
xchg
movsl
rorl
addr16
mov
pop
xchg
into
mov
bound
lock
lret
mov
inc
mov
pop
inc
cmpsb
sbb
adc
jne
cld
ja
pop
insl
xor
fiadds
inc
ss
js
mov
in
xor
test
aad
into
sub
push
addr16
mov
mov
mov
xchg
xor
push
fldenv
xchg
pusha
push
and
hlt
popa
stos
rcr
popf
jns
xlat
or
and
xchg
sbb
cs
adc
or
push
insl
lods
lahf
xor
mov
sbb
inc
nop
loop
in
mov
insl
rorb
testb
aam
xor
rdmsr
jecxz
sub
inc
pop
enter
push
jg
test
adc
js
ds
mov
bound
stc
cmpsb
into
dec
pop
mov
pop
push
pop
repz
cld
lcall
or
sub
punpckhdq
fidivs
rol
lcall
and
dec
xchg
adc
or
or
xchg
sbb
mov
push
mov
or
dec
repz
inc
inc
add
fwait
repnz
xor
jnp
lds
or
sbb
cmp
outsl
daa
push
je
out
hlt
lods
jne
test
js
mov
hlt
inc
add
inc
cmp
and
and
hlt
test
jne
dec
mov
mov
jge
jg
ds
xor
jne
jbe
mov
divb
stos
xlat
scas
cltd
movsl
inc
nop
pop
sub
mov
cmc
nop
daa
cmpsl
mov
cli
xlat
ja
jno
pop
push
cmp
scas
or
cmp
mov
ret
fninit
jmp
sub
push
dec
enter
lcall
scas
bound
mov
scas
in
lahf
xchg
sub
sbb
sub
sahf
push
cwtl
nop
in
shl
lods
out
cmp
and
icebp
cwtl
aaa
pop
sub
repz
mov
and
cmpb
mov
data16
jle
cmp
pop
leave
pushf
xor
and
cmpsl
loopne
push
push
jge
push
xlat
ss
loope
fstl
sbb
mov
loop
push
cmp
ss
aas
and
cmp
xchg
cmp
cld
cmc
nop
push
popf
cwtl
jmp
imul
or
push
popf
dec
enter
test
adc
xor
adc
in
sbb
mov
add
push
fs
aaa
mov
sub
cs
fimull
mov
jne
xchg
push
inc
ret
pop
dec
push
bound
std
dec
dec
in
out
mov
ret
inc
sahf
popa
xchg
or
push
divb
xorl
nop
xchg
iret
xor
dec
pop
sub
mov
jp
sbb
test
cmp
xchg
clc
sub
jg
icebp
fimuls
sbb
lea
popf
push
sub
rclb
sub
inc
adc
sub
push
cwtl
and
mov
add
fcomps
adc
repnz
and
or
xor
adc
sbb
outsl
int
mov
es
jae
mov
mov
and
pop
xchg
sub
into
mov
sahf
pop
incl
out
lcall
add
add
jne
or
mov
shr
enter
mov
xchg
ja
or
cmpb
xor
push
push
dec
xchg
jle
test
mov
push
push
fisttpl
adc
xor
sti
xchg
xchg
in
or
xor
stos
cmp
xor
lods
mov
inc
push
mov
lods
test
in
mov
cmp
stos
inc
subl
lret
inc
pop
ljmp
push
push
and
bound
test
or
xor
sub
cli
pop
sub
cmp
loopne
sbb
mov
test
xchg
pushf
sub
ret
in
cmpsl
hlt
fwait
cmp
mov
outsl
pop
into
xor
scas
add
adc
jle
ss
push
iret
dec
insl
emms
xchg
sbb
scas
or
arpl
xchg
lods
inc
ds
inc
ds
push
sti
test
mov
inc
jp
fisubs
cmp
jecxz
in
pop
jmp
shl
add
xchg
js
xchg
push
imul
inc
je
cmp
lock
jl
in
outsb
stos
cmp
inc
rcrb
adc
xchg
xchg
or
dec
xchg
ret
cmp
inc
shlb
fsubrl
mov
lret
adc
xor
rcll
aam
dec
mov
adc
rorb
dec
push
icebp
mov
and
dec
add
lcall
xor
arpl
out
hlt
cld
in
adc
insb
cli
seto
add
lea
scas
mov
les
loopne
bound
cwtl
sub
imul
in
and
push
pop
mov
inc
xchg
test
aam
push
or
add
mov
fimuls
or
cmp
add
test
pop
xor
shr
repnz
dec
jg
in
push
scas
inc
aad
or
mov
cmp
out
divl
pop
xor
xchg
loop
jns
cmp
ss
xor
call
fldt
shrb
hlt
in
mov
sbb
jge
dec
pop
push
dec
setg
xor
mov
cs
mov
insl
and
loopne
in
jae
cs
imul
mov
pop
or
out
mov
cli
sbbb
addb
and
and
xchg
in
add
fsubl
pop
adc
inc
dec
std
adc
and
fmuls
jnp
dec
sub
pop
lea
push
insl
push
int
loope
pop
fists
in
cmc
cmp
pop
add
push
pusha
add
mov
repz
loopne
popl
sub
add
aaa
or
mov
je
call
pop
xchg
adc
outsb
cmp
pop
sbb
dec
repnz
aaa
fdivp
xchg
sub
mov
mov
push
and
insl
pop
mov
dec
add
repnz
hlt
xor
adc
inc
insl
dec
std
push
lds
sbb
fmull
in
push
push
jmp
orl
mov
push
bound
daa
mov
jo
call
mov
scas
ret
push
mov
sahf
pop
imul
orb
daa
jg
call
lcall
lds
clc
mov
xor
lods
sub
leave
aas
cmpsb
pop
xor
sub
adc
sub
stos
and
fcoml
rorl
push
lahf
push
arpl
scas
or
enter
movb
repz
inc
movsb
or
test
aaa
cmp
pop
cs
repnz
div
iret
jmp
stos
mov
ret
imul
dec
lcall
mov
jnp
test
sbb
pop
orb
push
aam
dec
ret
leave
out
sbb
sti
test
fdivrs
pop
add
pop
or
jno
test
xor
mov
hlt
mov
shr
inc
ret
ljmp
icebp
sub
xor
mov
sub
xchg
sub
xlat
jbe
adc
adc
outsb
rolb
pop
xchg
cmp
pop
aad
fcmovnbe
push
mov
add
xchg
sbb
xchg
cmp
adc
xchg
ds
out
popf
outsl
jl
cmpsb
loopne
xchg
loope
mov
scas
or
int
ja
mov
mov
push
add
sarl
mov
out
or
je
scas
mov
bound
and
lahf
pop
mov
movsb
mov
xorb
test
into
jno
repz
cmp
cld
pop
mov
lods
call
mov
fdivrs
xchg
mov
les
xchg
lock
clc
jne
js
lods
or
xlat
cwtl
lret
add
jl
data16
mov
cli
and
daa
inc
pop
std
test
push
test
jl
mov
iret
repnz
test
dec
into
lret
aam
mov
xchg
mov
xchg
sbb
pusha
flds
jbe
dec
outsl
test
mov
and
out
cs
pop
enter
inc
fdivrp
jnp
addl
adc
sbb
outsb
xchg
pop
jmp
adc
mov
out
aad
ja,pt
mov
es
sbb
cmp
jg,pt
mov
jbe
push
mov
and
ss
int
test
adc
sub
test
push
iret
pop
dec
add
bound
jae
jb
dec
push
mov
or
repz
divl
cs
sbb
jp
push
idivl
stos
sahf
and
xchg
adc
mov
lahf
and
aas
push
movsb
mov
xor
test
test
mov
popf
and
das
fstpl
dec
scas
lcall
ss
das
loop
push
mov
stos
push
xor
pop
mov
test
xor
adc
mov
jno
push
sub
bound
adc
push
mov
mov
lods
cwtl
dec
insb
popf
enterw
push
hlt
push
call
mov
int
fists
pop
shrb
pop
aam
std
in
and
enter
je
rorb
or
mov
fs
mov
jnp
cmp
mov
mov
mov
imul
ret
mov
js
or
outsb
inc
jbe
cmc
xchg
in
repnz
lret
cld
mov
lods
fiaddl
ret
stos
add
push
scas
mov
jne
and
ds
leave
les
dec
sub
in
pop
pop
fists
mov
push
cmp
test
sub
adc
inc
stos
jnp
loop
sub
pushl
add
shll
push
sti
mulb
push
inc
or
cmp
sub
xchg
ljmp
cmp
jbe
sbb
sahf
and
jg
pop
xor
xor
and
dec
lcall
or
xor
pop
xor
test
int
xor
fwait
add
cmp
adc
cld
lahf
stos
cltd
or
shll
popa
mov
dec
test
inc
and
push
pop
jno
lcall
and
or
dec
xor
xchg
sub
inc
or
and
jno
cmp
shlb
ret
js
cmpl
adc
lds
add
push
add
ja
scas
idivb
rcl
cmc
xlat
mov
dec
jg
bound
ret
addl
imul
std
jge
cmp
andb
arpl
mov
or
jmp
in
bound
leave
push
pop
repz
lret
pop
bound
data16
gs
mov
mov
mov
int
sub
jge
adc
jnp
sbb
fiaddl
mov
les
push
cltd
jg
mov
cmp
adcb
out
dec
shr
addr16
adc
mov
fcoml
ror
hlt
or
inc
push
push
fidivrl
and
jno
mov
adc
mov
pop
std
jae
das
cmpb
pop
mov
adc
fs
out
arpl
push
cltd
ret
xchg
shll
lahf
leave
les
arpl
cmpb
loop
add
mov
jb
sbb
shrl
test
fs
lret
dec
cmpsb
scas
mov
inc
pop
cmp
cmp
outsb
mov
and
imul
lret
sub
jecxz
mov
in
fistpl
stos
or
mov
scas
xchg
sub
inc
ret
lods
mov
push
cltd
nop
push
sbb
data16
mov
movsb
mov
pop
xchg
ljmp
nop
sub
mov
adc
mov
out
imul
adc
xchg
and
push
sub
cli
inc
dec
mov
mov
ljmp
mov
jge
mov
in
mov
faddl
out
mov
mov
jbe
lea
aas
push
adc
arpl
in
int3
pop
addr16
popf
shll
negb
or
jg
push
mov
push
mov
or
mov
mov
es
mov
loopne
loopne
outsb
adc
outsl
mov
pop
pop
sbb
inc
pop
or
fists
repnz
ljmp
notb
out
aas
inc
xchg
sub
dec
jmp
outsb
mov
gs
jne
lods
sub
dec
xchg
dec
inc
inc
push
sbb
aaa
and
push
out
xchg
addr16
pop
dec
pop
push
mov
mov
jg
mov
ja
pop
cmp
call
sbb
pop
shrl
push
add
ret
je
test
dec
jecxz
inc
hlt
loope
cmp
aas
sbb
in
out
jbe
mov
xchg
or
push
fidivrs
cmpb
stos
ficoml
fmull
cmp
mov
add
push
cmp
or
dec
xchg
mov
fs
xchg
in
out
cli
ds
pushf
scas
decb
cmpsb
call
out
mov
xchg
adc
gs
jge
in
cmp
pop
call
or
mov
test
xchg
xchg
inc
cwtl
jnp
inc
fstps
insb
stos
pop
daa
push
clc
mov
inc
xchg
mov
popa
push
or
add
adc
js
ljmp
fnstenv
push
lcall
dec
in
addr16
mov
xchg
mov
out
mov
cmp
adc
cld
inc
mov
adc
pop
test
add
adc
pusha
stos
lret
dec
and
push
dec
ret
jnp
sti
lds
jo
movsl
jb
push
xchg
inc
pop
inc
push
aam
shrl
in
movsb
push
mov
scas
out
call
xor
xor
das
aad
in
xor
lock
js
push
fadd
stc
xchg
push
mov
rcrb
cmp
pushf
pop
stc
es
push
out
xchg
cmp
sub
jbe
adc
mov
es
das
imul
xchg
cli
pop
fs
jl
or
xlat
test
jmp
dec
imul
push
inc
jecxz
outsl
dec
int3
adc
cli
dec
leave
push
pop
popa
cmpsb
or
sub
and
jle,pn
push
xchg
ss
adc
xor
out
sub
mov
sub
outsb
add
cmp
pop
cltd
jo
ret
add
cli
jle
xchg
cmp
sar
in
xor
pop
call
fwait
or
loop
push
jge
sti
test
in
sbb
fisttpl
sbb
xor
nop
clc
xchg
push
and
cmp
jbe
test
add
pop
shrl
dec
push
push
xor
in
loopne
test
inc
pop
jmp
daa
std
ds
mov
data16
pop
add
sub
sbb
mov
add
push
or
cmp
cltd
push
ret
push
faddl
in
in
out
inc
pushf
inc
rcll
repnz
rcll
lcall
gs
push
push
sahf
dec
call
shrb
and
xchg
pop
mov
test
mov
sub
sbb
push
lods
add
or
cwtl
stos
stc
out
bound
outsl
popw
popl
mov
inc
sbb
aam
bound
add
das
mov
inc
add
lods
sahf
pop
mov
or
mov
xor
ja
push
int3
cwtl
sub
fwait
cmp
pop
andl
test
std
es
lea
mov
int3
shl
sahf
cli
cmp
sahf
mov
xchg
lods
andb
push
dec
dec
mov
push
test
adc
or
inc
imul
in
or
jmp
mov
adc
fcoml
lret
inc
mov
push
cmp
mov
int3
bound
or
adc
int
cmc
jl
lret
call
xchg
call
add
lock
push
inc
outsb
mov
sbb
sub
fbstp
lods
std
fdivrs
jmp
les
cmpsl
ficoml
cmp
or
mulb
into
pop
adc
insl
xchg
xlat
xlat
push
fs
xor
xor
push
leave
movsl
pusha
pop
cmp
xchg
clc
push
push
stos
cmp
mov
jbe
dec
sbb
stos
xchg
or
imul
jl
inc
lods
cmp
and
loop
in
inc
cli
sbb
mov
xchg
iret
lcall
sub
mov
mov
faddp
jl
mov
sahf
cs
enter
cld
addr16
xchg
add
sbb
xchg
mov
dec
fidivs
mov
nop
mov
and
jp
icebp
jne
dec
inc
or
or
pop
out
out
dec
xchg
or
dec
sub
mov
cs
mov
xchg
in
fmul
sub
repz
fwait
add
sub
and
inc
stc
lahf
test
push
jge
ljmp
fcos
test
push
add
repnz
arpl
inc
xor
sbb
adc
push
inc
add
stc
push
sbb
aas
xchg
xorl
fnstenv
arpl
cld
ss
push
mov
imull
xor
inc
test
shl
scas
and
stos
sti
sub
adc
sarl
loopne
lods
xor
lret
jno
push
enter
cltd
lret
aad
xor
xchg
cmp
push
pop
fnstsw
sub
fwait
sub
push
fisubrs
cs
fs
std
and
mov
lahf
ror
cmp
scas
inc
add
push
je
inc
imul
adc
fistps
sub
loopne
stos
loopne
push
pop
push
lret
lock
in
sarb
sahf
add
movsl
mov
or
dec
fiadds
sub
sub
xchg
roll
and
add
jmp
jnp
sbb
or
mov
cmpb
stos
shl
mov
sbb
or
shrl
mov
fmull
mov
shl
out
in
jg
fstpt
stos
mov
lret
loope
addr16
aaa
bound
mov
adc
xchg
inc
sbb
cmp
popa
mov
mov
je
rcrb
or
shrb
divb
inc
loop
push
out
or
orl
aad
movsl
mov
lahf
arpl
or
cs
mov
shll
add
inc
das
scas
mov
push
mov
into
add
dec
inc
divb
ret
hlt
test
push
or
jns
mov
fcmovnbe
in
les
out
enter
mov
dec
lock
ret
inc
daa
push
pop
jp
pop
jne
inc
lods
sbbb
call
sub
mov
mov
sarl
lods
dec
jmp
jb
out
lds
test
addl
pop
test
or
or
push
fcomps
sub
dec
cmp
adc
loop
int
and
mov
lahf
mov
ljmp
add
pop
dec
or
mov
stos
adcb
inc
jmp
scas
jo
mov
lock
jmp
push
add
ror
mov
xchg
or
setb
jl
and
mov
rcl
xlat
shrb
mov
xchg
dec
add
dec
popf
cmp
pop
repz
pop
push
mov
movsb
fwait
sahf
sarl
mov
inc
imul
sub
icebp
mov
in
loope
insl
outsb
pop
add
add
adc
mov
or
xchg
lock
nopl
sub
pop
mov
nop
or
cltd
sbb
add
movsl
fldenv
fistps
sbb
pop
mov
cwtl
pop
shll
in
es
clc
and
cwtl
sbb
clc
lods
mov
popa
test
and
shrb
fwait
scas
pop
stc
out
stos
cmp
stc
dec
gs
mov
addr16
aas
xchg
clc
jne
lods
sub
adcb
xchg
fldcw
pop
test
roll
mov
push
push
and
xor
cmpsl
pop
adc
jne
pop
sub
lds
stos
xorl
and
xor
loopne
or
ja
and
ljmp
mov
xchg
notb
xor
mov
mov
out
add
fs
xor
sbb
xor
or
push
jge
fmull
push
cmp
xchg
pop
sarl
mov
daa
das
loop
rolb
testb
xor
adc
fsubr
lods
adc
shr
xchg
ja
and
adc
ret
icebp
xor
iret
pop
and
dec
and
in
dec
iret
pop
dec
inc
dec
mov
testl
xchg
adc
clc
push
sbb
mov
leave
fildl
mov
loop
ja
mov
jecxz
ja
adc
xor
lahf
mov
jo
movsb
pop
bound
stos
arpl
lds
dec
xchg
insl
xchg
cmp
dec
xor
add
lea
and
sbb
mov
jg
sub
adc
sbbb
rolb
and
cmp
lret
dec
add
loopne
adc
mull
push
sub
inc
add
lock
aas
jns
repz
hlt
cmpsb
fdivr
xor
mov
push
ss
sub
inc
pop
jo
sub
adc
push
cmpsb
call
lea
jp
dec
push
adc
adc
cmp
je
mov
test
adc
ss
movsl
or
inc
mov
lock
cli
pop
gs
dec
push
ds
sbb
dec
adcl
dec
movb
sbb
cmp
xchg
xor
nop
dec
std
adc
lods
popf
sahf
dec
sbb
arpl
arpl
insb
mov
push
test
popf
xlat
dec
pusha
movsb
subb
pop
hlt
aaa
sarb
or
cltd
test
or
ret
lahf
xor
xchg
cli
xchg
dec
or
push
inc
jae
xchg
shr
mov
out
test
xor
and
andb
push
imul
gs
and
or
mov
inc
jge
lock
stc
jbe
jo
jno
fildll
or
dec
loop
test
das
subl
mov
adc
xchg
inc
scas
inc
sbb
pop
xor
xor
addr16
stos
pop
loope
stos
test
jg
add
fsubs
fstpt
inc
pushf
cli
add
sahf
or
testl
daa
ret
pusha
mov
xor
stc
movsb
jg
lahf
dec
call
inc
arpl
jle
mov
cmp
xchg
int
push
hlt
les
daa
stos
in
or
jne
rorb
jb
nop
std
sub
mov
ss
fsubs
pop
pop
outsl
xchg
jno
stc
jo
ret
mov
xor
dec
jns
loop
push
cld
sbb
jp
andl
mov
jns
sub
ljmp
pop
cmp
push
cmp
ljmpw
out
loopne
or
enter
cmp
or
sti
cmpsb
mov
mov
leave
cmp
fsubrs
cli
sub
dec
out
test
inc
push
mov
popa
test
popa
ds
pop
insl
add
leave
aas
push
scas
push
das
hlt
pop
mov
fisubrs
sub
imul
adc
xor
in
testl
pop
cmp
outsb
or
fwait
cmp
shrb
mov
pop
cmc
int3
xchg
and
mov
jne
outsb
sub
sub
dec
inc
ja
pop
mov
gs
loop
decb
cmp
andb
lea
xchg
fwait
xchg
sub
imul
or
xlat
test
dec
mov
mov
push
imul
jmp
ds
fdivl
xchg
test
leave
out
push
insb
inc
dec
sbb
dec
jb
fcomp
mov
xlat
add
cmp
rcll
pop
inc
mov
inc
or
hlt
pop
sbb
sbb
xchg
pop
adc
je
bound
add
pop
lret
add
push
sahf
jae
push
cld
jo
daa
dec
lret
gs
push
test
sti
scas
daa
sbb
cmc
adc
dec
and
cwtl
stos
sbb
push
daa
pusha
push
les
jne
mov
dec
jl
cmp
sub
ljmp
push
jp
pop
xor
stos
adc
jnp
out
add
cmp
test
bound
cmpsl
xchg
icebp
lea
dec
shrb
jns
mov
lds
jp
push
push
cmpb
inc
hlt
and
ficoml
pop
adc
sbbb
mov
adc
add
xchg
subb
into
in
mov
insb
jns
loop
pop
jecxz
repnz
popf
xlat
outsl
test
cmp
mov
ficompl
out
movsl
rolb
mov
sbb
cmp
mov
or
movsb
mov
cmpl
bound
pusha
and
jb
jg
imul
dec
or
xchg
sub
push
sahf
xchg
leave
or
adcb
inc
andb
sub
test
andb
loopne
std
dec
add
jge
sti
push
sub
cmp
mov
cmp
lock
std
and
test
in
dec
cmp
and
cltd
mov
fildll
enter
mov
mov
ret
lret
or
leave
pop
mov
imul
out
sub
aaa
repnz
icebp
adc
push
mov
sub
jno
mov
shl
insl
out
lcall
les
adc
pop
mov
ret
test
xor
mov
sbb
test
and
pop
into
cmp
data16
lods
popa
sbb
pushf
sub
mov
mov
adc
popa
mov
inc
call
repnz
add
loope
mov
cli
movl
pop
inc
sahf
mov
lcall
xor
stos
jmp
pop
mov
xor
pop
and
imul
pop
pop
jmp
adc
push
div
jle
xor
sbbb
test
inc
push
jno
aam
push
pop
in
insb
sti
je
cmc
insl
mov
mov
imul
test
dec
sub
pop
mov
pop
sarl
mov
jle
ss
jg
jle
imul
xchg
and
adc
mov
nop
push
dec
pusha
push
pop
add
sti
leave
or
add
push
lahf
imul
lret
orl
jecxz
cmp
or
add
pop
in
cld
inc
push
sarl
ret
shrb
add
sub
repnz
mov
inc
xor
out
loope
jle
push
cmpsl
mov
insb
imul
imul
fwait
mov
mov
sbb
xchg
xchg
mov
push
pop
dec
and
mov
jmp
notb
mov
jge
push
inc
fwait
mov
ret
add
mov
repnz
rcrl
popf
orl
daa
and
pusha
imul
repnz
out
cmp
data16
jmp
mov
dec
scas
aaa
or
hlt
pop
xor
inc
fstl
fs
repz
pop
enter
inc
mov
mov
mov
mov
inc
jle
jp
xor
adc
pop
jnp
mov
insb
int
ljmp
cmp
fcoml
bound
ret
popf
gs
mov
shrl
inc
popf
jbe
adc
cmc
xchg
xchg
les
dec
dec
sarb
std
adc
cmc
jp
mov
je
or
or
and
scas
xor
xor
mov
test
cmp
xor
jecxz
inc
mov
out
nop
into
inc
xchg
stos
gs
hlt
pop
daa
insb
xlat
cmp
pop
movsb
mov
mov
inc
sbbb
cli
daa
scas
mov
and
cmp
inc
mov
bound
insb
xchg
out
fsubs
and
push
or
icebp
mov
xlat
das
divl
and
add
das
inc
sbb
aas
repz
or
scas
mov
incb
xchg
jle
nop
les
add
pusha
inc
int3
scas
jg
xchg
mov
adc
outsb
mov
int3
inc
sbb
mov
and
loop
hlt
push
sbb
roll
sub
cmpsb
mov
sub
adc
jno
in
outsb
and
xor
mul
leave
jg
lock
jle
xchg
xor
inc
lahf
xchg
out
mov
jecxz
push
mov
jae
ret
push
mov
into
adc
negl
mov
out
push
movsb
lock
roll
das
repnz
mov
cmpsb
dec
or
mov
loop
fidivl
pop
mov
inc
mov
pop
fiaddl
mov
and
or
shrd
out
inc
jp
shl
je
jae
dec
fldcw
cmpl
pop
lock
pop
dec
std
leave
adc
xchg
cltd
ja
pop
ficoms
in
mov
and
icebp
shrb
movsl
mov
pop
push
ss
adc
int3
in
pop
ja
int
jge
cmp
in
sbb
cs
in
movsl
mov
adc
imul
pop
lret
daa
sub
pop
enter
pop
test
ljmp
dec
lods
sbb
decb
aad
xchg
adc
sbb
ja
mov
adcb
call
dec
inc
pop
add
les
mov
rclb
popa
loop
jl
js
icebp
xor
add
loope
mov
cmp
cmp
xor
sbb
scas
test
mov
insb
jle
pop
cmpsb
insb
js
cmpsl
fldt
mov
cmp
sbb
sub
inc
cmp
sub
fiadds
in
scas
xchg
sub
add
std
add
push
xor
push
in
stos
mov
jb
in
fs
pushl
ret
sbb
or
cmp
inc
mov
push
inc
stos
jbe
fmull
aaa
fs
jo
add
cmp
or
js
int
jle
stos
ror
sub
in
setae
cmp
fnstcw
cld
xchg
sub
inc
nop
lret
dec
ds
push
into
cmc
js
ret
and
mov
ret
shrl
cwtl
cmpsb
add
mov
mov
push
xor
out
inc
pop
lods
loope
ja
and
je
xor
dec
jmp
cmc
cmpl
or
dec
lret
fisubl
pop
sbb
out
sub
clc
push
mov
aas
or
fistpll
xchg
ljmp
add
push
or
repz
and
js
das
fbld
sbb
push
pop
rclb
mov
cmp
mov
add
inc
dec
imul
mov
inc
and
shll
mov
loop
arpl
or
rcr
inc
or
dec
lds
dec
test
mov
xlat
jb
mov
in
popa
scas
jle
out
mov
or
bnd
clc
mov
cmpsl
jnp
outsl
and
add
mov
xor
fsubp
inc
mov
fcomps
jns
fmull
or
scas
ja
lock
xor
stos
jnp
mov
addr16
cltd
and
pusha
lds
jp
sbbl
add
call
cld
and
sbb
xchg
adc
insb
pop
outsl
jne
popf
test
mov
mov
jg
cmp
adc
lds
inc
mov
imul
call
mov
pop
loope
add
jl
mov
cwtl
mov
dec
mov
cmp
cli
nop
scas
adc
push
or
call
rorl
dec
sbb
out
test
jns
jne
pop
mov
adc
sbb
clc
lret
adc
leave
adc
cld
cmp
cs
lds
das
lret
push
ret
adc
mov
mov
and
xchg
pop
call
rcll
mov
vmaxps
add
movsl
jae
fcoml
pop
and
lock
xor
out
nop
xor
shlb
xchg
cltd
sbb
sub
sub
js
push
nop
andl
mov
adcl
fnstcw
decl
mov
jb
pop
das
mov
call
jl
and
movsb
xchg
aad
add
fbstp
daa
repnz
faddl
add
jnp
outsb
popa
mov
adc
ret
xor
les
pop
ret
mov
jae
fldcw
inc
dec
test
or
or
cmpsb
lods
or
xor
repz
imul
in
sbb
or
popf
pop
xchg
std
loop
das
pop
insl
leave
aas
bound
or
mov
ljmp
mov
sbb
les
les
pop
xor
xchg
mov
lret
mov
or
js
insb
mov
call
dec
push
xchg
out
int3
jae
es
add
in
push
pushf
xchg
repnz
sbb
and
or
dec
insl
sbb
xor
sbb
mov
in
repz
adc
mov
repz
movsl
mov
jno
adc
pop
pop
scas
mov
enter
lock
imul
sarb
cmpsb
icebp
lcall
hlt
ljmp
jae
cmp
gs
cmp
in
test
icebp
pop
cld
adc
test
test
cmc
pop
pop
pop
fs
adc
sbb
mov
aas
subl
jne
ds
or
inc
sbb
adc
aad
cmp
add
es
sbb
subl
xor
sbb
scas
in
pop
ret
mov
movsb
stos
fsubrs
mov
mov
sbb
xlat
stos
into
std
xchg
jb
ljmp
add
mov
add
pop
lcall
lret
cmc
sbb
push
cmpsb
pop
xchg
in
sbb
test
aam
ljmp
pop
imul
cmp
into
out
sbb
cmpsb
popa
jl
xchg
pop
fsubrl
test
imul
and
cltd
mov
or
or
aam
outsb
cmp
jb
jae
xchg
lret
cs
dec
imul
repz
inc
vunpcklps
mov
addb
ss
cmp
xchg
insb
or
push
insl
int3
dec
ret
jl
pop
nop
mov
jae
mov
add
cmp
jg
call
nop
cmc
shll
out
fwait
rolb
iret
into
jne
jle
xor
cmp
rclb
push
cmp
jae
dec
cmc
rclb
in
sub
test
fst
pop
aaa
jns
cmpsb
pop
mov
dec
call
jl
aad
push
mov
roll
or
cmp
dec
mov
shll
adc
bound
adcb
inc
or
push
ss
push
fwait
or
pop
inc
sub
hlt
in
xchg
push
xchg
cld
push
or
sub
insb
lret
jp
push
rorb
stos
fwait
out
dec
out
add
test
cmp
push
arpl
mov
std
repz
stos
lea
popf
insb
and
adc
adc
lea
mov
push
mov
ljmp
mov
xchg
popa
mov
mov
xor
insb
mov
and
test
mov
jl
data16
mov
mov
mov
negb
ljmp
scas
sbb
jns
or
fistl
add
icebp
push
and
and
sub
lock
fists
sbb
nop
mov
xchg
int3
fcos
std
mov
dec
popf
or
js
scas
fidivrl
and
sti
jle
loop
xchg
aad
xlat
mov
sbb
sub
push
dec
pop
mov
test
dec
cmp
or
add
andl
into
in
inc
das
fwait
mov
int
mov
lods
push
test
mov
cmp
push
in
inc
fildll
lods
pop
mov
rcl
les
and
mov
out
sub
push
add
push
mov
lahf
xchg
mov
adc
add
mov
sqrtps
ss
in
in
mov
pop
adc
sbb
fidivs
out
xor
mov
pop
sbb
outsb
sub
rcrl
in
imul
or
push
out
adc
mov
mov
shll
inc
in
or
and
repnz
roll
and
rolb
gs
sti
bound
ret
push
ret
jl
inc
mov
jae
sub
xchg
icebp
inc
sahf
mov
adc
stos
andb
cmp
or
mov
inc
and
lea
loopne
xchg
nop
fsubl
pop
dec
mov
out
sahf
mov
nop
mull
gs
clc
std
rorb
add
xchg
pop
inc
mov
xor
jg
or
push
sti
adc
add
mov
fidivs
mov
es
pop
ret
sbb
lea
ds
mov
dec
pop
popa
stos
test
jecxz
into
in
push
add
cltd
mov
sub
lret
aad
sbb
adc
in
add
pop
mov
cli
ret
stos
mov
or
fsubrs
bound
xlat
sbb
lret
mov
mov
call
stos
addr16
mov
in
mov
mov
push
jl
jge
loope
mov
add
jne
lahf
xor
mov
popf
jns
jb
test
mov
stc
fucom
ljmp
daa
inc
pop
add
inc
fnstsw
loope
push
push
std
xor
mov
xor
pop
or
scas
cld
push
das
mov
movsl
or
ret
lret
xor
loop
mov
cmc
push
sub
lret
sbb
sub
dec
outsb
pushf
je
lea
lcall
xchg
lods
leave
mov
clc
ficoms
sub
xchg
loop
or
mov
repz
daa
pop
stos
imul
xor
mov
daa
dec
lret
xor
in
mov
or
jae
jp
sbb
push
push
rcl
popl
sub
inc
mov
fisttpll
xchg
xchg
nop
inc
cmp
mov
mov
push
loopne
mov
jecxz
inc
jnp
push
gs
or
fs
das
mov
mov
jo
stc
pop
outsb
js
leave
push
sbb
mov
loop
or
mov
stos
sbb
sbbb
ds
inc
mov
je
aad
fiadds
je
mov
adc
mov
nop
ja
out
xchg
jae
ja
dec
mov
jg
or
xor
xorl
sti
mov
inc
mov
lds
aas
mov
add
or
jmp
lahf
or
mov
dec
pop
es
pop
aas
cld
out
test
jnp
outsb
adc
cmpsb
call
ja
js
xchg
cmp
movsb
cltd
add
data16
jnp
mov
arpl
push
adc
cmc
add
mov
ret
enter
lds
sub
jns
popa
sbb
push
fs
or
in
imul
cld
cmp
xchg
push
fs
jecxz
aaa
sbb
aas
movsl
dec
cmp
popa
in
adc
adc
mov
outsb
pop
lcall
mov
mov
and
jae
pop
stos
and
mov
repnz
lcall
inc
dec
xchg
push
sahf
les
lret
jnp
xchg
jnp
shll
push
repz
ja
shr
gs
mov
xchg
and
mov
fs
cmp
dec
xor
add
loope
cmpsl
xor
fisubrs
sti
in
jne
aaa
inc
nop
stos
ret
inc
xchg
pop
jmp
xlat
sub
xor
lds
jl
mov
test
out
push
adc
je
sbb
sti
and
scas
shlb
mov
lahf
std
jg
imull
ficomps
or
xor
cmp
cmpb
dec
mov
xchg
and
jns
and
jmp
arpl
inc
sbbl
inc
hlt
cmpb
popa
inc
pop
jg
inc
gs
bound
jl
sub
push
xchg
iret
or
outsb
jnp
je
in
jae
cmp
dec
or
hlt
or
or
mov
xor
inc
bound
dec
les
les
mov
es
mov
jno
or
ds
js
hlt
inc
jns
push
divl
cmp
fildl
outsb
and
mov
xor
lahf
lret
cmc
dec
and
cmp
movsb
scas
das
mov
sbb
cmp
push
imul
sub
sub
aad
push
cmp
push
sarb
aaa
cmp
cmpsb
pushf
fimull
fldt
out
out
in
cld
push
add
jbe
add
loope
push
add
lods
movsb
mov
lods
fisubs
addr16
or
or
ficomps
inc
pop
dec
fists
pop
pop
inc
jecxz
stos
pop
mov
push
insb
add
push
xor
inc
dec
or
outsb
pop
aad
jb
xchg
popf
jo
out
xchg
in
pop
jmp
setg
push
incl
adc
or
movsb
outsb
xchg
popa
inc
cmp
jp
adc
popf
lcall
xchg
xlat
mov
stc
fwait
leave
jnp
lea
mov
test
jle
lret
add
push
inc
daa
in
das
sub
ds
mov
mov
imul
and
cmp
inc
xchg
add
cli
rcrb
pop
jns,pt
jge
ss
or
sbb
cwtl
fs
inc
add
xlat
lcall
movsl
ficoms
pop
push
sbb
mov
xchg
fcmovb
loopne
fisubs
aad
ja
dec
or
jg
add
xchg
in
cwtl
dec
sahf
mov
gs
push
sbb
es
pop
dec
mov
add
mov
cltd
imul
or
adc
cwtl
in
lcall
xor
or
or
mov
or
aam
push
jmp
add
lock
dec
pop
sar
xor
xchg
and
test
sbb
sub
movsb
cmp
popa
cmpsl
outsl
push
sbb
cmp
mov
xor
aad
and
inc
sub
jns
movsl
jno
arpl
pop
cmp
cltd
or
sbb
in
daa
cwtl
mov
sbb
xlat
jne
mov
psadbw
dec
cs
icebp
test
loope
fwait
loope
mov
out
adc
xchg
dec
cwtl
and
aas
divb
js
pop
jp
cmpsl
lods
test
ljmp
arpl
fadd
sbb
jmp
add
adc
stos
add
dec
popf
pop
pop
jg
lods
inc
fisubrl
mov
push
or
cmpsl
addl
sub
loope
sub
xchg
mov
clc
push
test
je
dec
push
cli
lods
aaa
jecxz
pusha
xor
mov
xchg
pop
sbb
push
pop
gs
xchg
mov
xchg
add
negb
popf
inc
shlb
test
rclb
push
cwtl
int
lods
test
sbb
mov
ret
std
dec
pop
sub
enter
bound
std
fadd
mov
cmp
imul
ror
es
aas
fmull
into
insl
outsl
pop
jno
hlt
inc
aaa
test
pop
sahf
ss
cmp
add
inc
mov
mov
mov
stos
es
jp
and
lcall
lret
cld
pop
nopl
xchg
bound
fnstcw
mov
and
hlt
out
sbbl
pslld
inc
mov
push
lret
xchg
clc
cmp
out
fisttps
mov
pusha
fwait
jge
lea
sbb
and
push
pop
fwait
mov
add
add
roll
sub
push
mov
dec
mov
jae
testl
jns
add
sub
leave
add
cmpb
repnz
jb
push
push
jge
iret
sbb
cmc
rep
scas
cmp
arpl
xchg
cmpsl
push
lds
mov
adc
mov
adc
cmp
push
mov
test
mov
cmpsl
fs
mov
cmp
mov
cmp
fs
sub
xchg
push
pushf
and
mov
push
pop
mov
out
dec
push
movsb
ret
in
pop
imul
xchg
and
loop
jnp
movsl
sub
mov
push
popa
lahf
aas
ficompl
or
mov
or
adc
in
mov
je
push
xchg
dec
xor
push
push
or
jbe
fisttpll
insl
push
sarl
jne
jle
popf
in
fsub
movsb
cmpsb
imul
dec
cmp
loopne
int
mov
cmc
xchg
sbb
pop
ret
inc
mov
sbb
loope
cs
inc
lret
add
xor
jo
xchg
inc
into
xor
test
mov
pop
int3
rorb
push
repnz
sbb
sub
stos
out
shr
movsl
mov
push
mov
inc
fcmovb
jecxz
cmp
xlat
mov
inc
add
sub
or
mov
jns
pop
xacquire
xchg
xchg
cmpsb
loope
push
cli
leave
sbb
dec
xor
stos
pop
or
mov
sti
negb
xchg
mov
ljmp
out
in
push
jle
and
es
jne
jmp
mov
sbb
movsl
sbb
add
std
xchg
vpsubb
cmpsb
pop
cli
sarb
sub
iret
daa
adc
push
pop
out
faddl
fsubrl
loope
mov
leave
xor
clc
negb
push
rolb
call
iret
insl
jp
fsubr
repz
inc
test
out
cmc
or
mov
adc
aaa
sub
nop
les
jnp
and
mov
and
dec
ja
xchg
imul
push
sti
call
mov
stos
add
lret
arpl
stos
add
fsubs
or
lds
inc
in
xchg
sub
cmp
int3
fwait
jg
pop
loope
orl
stc
pop
push
lcall
mov
lds
mov
testl
jae
jae
dec
sbb
sbb
loop
xchg
xlat
mov
or
xor
jne
test
sub
test
aad
arpl
push
lods
cltd
pop
cmpl
decl
push
push
push
and
fsubl
rcpps
scas
cs
sub
push
inc
jmp
adc
shlb
loope
hlt
rcl
lret
loop
dec
mov
outsl
daa
xlat
xor
scas
je
inc
data16
scas
xchg
cmpsl
xor
cltd
add
out
jl
arpl
mov
faddl
insb
push
xchg
push
jns
rcl
mov
bound
cmp
loope
lods
dec
imul
lods
xchg
insl
cwtl
mov
mov
repnz
test
insl
mov
dec
sub
jmp
ja
aam
adc
jns
sbb
inc
mov
test
xor
push
xlat
or
jb
and
cli
test
mov
add
ss
fstps
js
in
cmp
or
push
and
movsb
push
mov
inc
fs
mov
fistpl
ret
das
sbb
arpl
and
fmul
xchg
mov
adc
push
insb
push
das
sub
inc
xchg
push
jp
testb
lahf
testb
xchg
sbb
sub
repz
dec
aaa
in
adc
xchg
pop
clc
pushf
aad
dec
lea
shr
xchg
pop
fs
pop
dec
sub
cli
fistps
dec
rol
out
cli
xchg
add
adc
mov
ret
jbe
xor
jle
pop
out
dec
outsb
cli
out
mov
cld
mov
xlat
out
aam
insb
jb
leave
cs
imul
xchg
xchg
out
fnsave
push
pop
scas
mov
rorb
in
fsts
je
in
out
test
pushf
dec
jl
mov
push
out
sbb
pop
mov
das
decb
adc
cwtl
xchg
ljmp
xor
out
iret
mov
adc
loopne
movsl
ror
out
mov
jae
dec
dec
in
cwtl
jle
inc
and
mov
pop
cs
loope
lds
push
sbb
sub
jmp
test
mov
mov
mov
movsb
cmpsl
fs
or
test
mov
outsl
cmp
push
inc
mov
pusha
fisubl
push
inc
dec
or
xor
sbb
in
and
and
std
xchg
divl
insb
xchg
lret
popa
xchg
jmp
test
fld
xor
mov
je
push
jns
add
and
inc
pop
adc
cli
divb
inc
and
orl
inc
loopne
notb
mov
daa
adc
or
sub
fdivrs
mov
xchg
inc
test
ffreep
sub
cs
into
and
imul
sbbb
pop
xor
inc
pop
mov
mov
testl
mov
xchg
ljmp
push
sub
jo
or
mov
jno
into
cmc
in
enter
lcall
jp
or
sbb
jbe
call
fsubl
inc
movsb
fidivrl
lahf
out
fcmovne
mov
arpl
sbb
and
loop
lret
outsb
cmc
repz
loopne
lods
cmpb
inc
inc
cmc
sbb
inc
fwait
jbe
xchg
int3
test
outsl
stc
dec
shl
addr16
ja
pop
inc
jmp
sti
shl
mov
jnp
mov
std
adc
sub
in
lea
lcall
xchg
dec
pusha
imul
jmp
nop
sbb
cltd
jae
and
pop
inc
movsb
rcl
arpl
enter
and
pop
mov
or
xlat
dec
push
lock
push
inc
xorl
in
mov
inc
sbb
cmpsl
in
sti
outsb
xor
outsl
test
push
das
pop
sti
and
sub
cltd
and
test
lock
aas
mov
mov
in
mov
cmp
mov
xor
fsubrl
push
outsl
fs
js
mov
or
faddl
mov
mov
fs
in
insl
push
movsl
inc
push
std
mov
sahf
fidivl
loop
arpl
push
dec
push
xchg
pop
push
inc
into
inc
mov
loopne
inc
xchg
push
sbb
ror
sub
fistpl
fucomp
pop
jl
fldcw
jbe
sub
ja
out
icebp
push
mov
sub
lcall
dec
rcl
pop
inc
test
pop
sahf
push
std
mov
popa
aas
push
jne
adc
push
arpl
mov
and
jns
pop
pop
xor
push
jg
dec
xchg
pusha
jns
mov
cmp
sti
fadds
out
mov
adc
out
push
popa
sahf
add
pushf
sub
add
cmp
in
xor
push
dec
es
cmpsb
xor
lock
out
xchg
mov
add
jle
std
push
bound
push
imul
ret
adc
aam
mov
cmc
xchg
lret
in
pop
jge
adc
sbb
inc
je
add
mov
xchg
pop
push
or
dec
mov
or
mov
add
and
out
std
lock
shl
sti
icebp
cmpsl
jl
outsl
movsl
shll
int
inc
jp
cmc
or
xor
sbb
or
lahf
idivl
call
jp
mov
jno
sahf
std
das
lahf
push
push
xor
dec
cmp
mov
daa
mov
push
dec
xor
sarl
fisubl
sub
in
dec
cmp
fists
ja
insb
cmp
cmpsb
fs
adc
cld
mov
cmp
sub
mov
test
fildl
popa
dec
sub
aas
mov
ljmp
sub
std
vshufpd
push
loop
idivl
adc
test
add
inc
dec
lret
out
xor
pop
cmp
mov
stos
xor
out
scas
in
arpl
shll
mov
pop
mov
add
pop
bnd
call
shll
add
repz
mov
xchg
xchg
out
daa
mov
mov
dec
cmpl
mov
aaa
ds
data16
loope
es
mov
fstps
dec
enter
cmp
xor
dec
mov
sub
ficoml
cmp
shll
pop
call
xor
mov
les
mov
adcb
stos
pusha
stos
fldt
pusha
out
jl
add
cmp
mov
stos
popa
daa
shll
scas
les
repz
cwtl
xor
lea
sub
addl
mulb
xlat
lods
xor
mov
cmp
aaa
push
pop
inc
bound
mov
mov
pusha
sti
sarl
jmp
cmpsl
mov
push
aaa
movsl
std
jns
add
call
xchg
lds
hlt
fidivrs
lret
jg
mov
sahf
sub
test
inc
push
loop
mov
les
shrl
fiaddl
jmp
or
or
iret
mov
cltd
mov
jne
gs
xchg
sbb
jo
lods
pop
xchg
lock
sbb
divl
repnz
dec
fisttpll
mov
adc
orb
mov
cltd
loop
mov
lcall
dec
leave
jbe
sub
stos
pop
inc
pop
stos
pop
mov
cmp
adc
sub
pop
movsb
mov
out
push
cmpsb
jno
mov
jge
sbb
xchg
sbb
mov
addr16
inc
rorl
mov
paddsb
mov
addr16
mov
jnp
subl
push
mov
js
xchg
dec
mov
ds
sbb
fcoml
mov
pop
insb
add
or
mov
mov
jl
adc
add
and
testb
sbb
es
push
addr16
push
sbb
ficoms
movsl
and
push
out
mov
int
cld
sub
inc
test
nop
movsb
wrmsr
sahf
and
sbb
inc
in
test
adc
inc
and
lcall
add
add
xchg
dec
pusha
lret
cmp
pop
sub
adc
divl
frstor
and
pop
rcl
dec
sahf
je
jge
add
lds
int3
xchg
push
xor
dec
dec
aam
xlat
out
dec
ljmp
stos
sub
je
push
jo
shrb
dec
arpl
mov
cmp
push
ja
rsqrtps
cmp
int
add
jne
lods
pop
jno
pop
jnp
lret
xor
lds
adc
xor
or
mov
dec
mov
fisttpl
cmpsl
out
ret
je
mov
jge
dec
stos
outsb
sbb
js
jae
filds
dec
dec
push
push
or
mov
add
pushf
add
loope
mov
add
inc
fwait
es
cmp
stos
inc
or
and
dec
pop
rol
push
jbe
out
ljmp
test
subl
mov
scas
push
mov
add
mov
push
icebp
js
cmpsl
jg
cmp
dec
cltd
fildll
cld
adc
cmp
inc
je
sbb
daa
fcoms
les
paddusb
xor
and
mov
sub
cli
push
inc
jo
mov
aaa
xorl
sub
push
dec
xor
sbb
push
hlt
mov
fadd
push
sub
push
mov
sub
push
jp
mov
sub
rcll
push
sbb
xchg
push
ficoms
pop
mov
jl
insl
imul
mov
cmp
and
sti
scas
aad
cmp
xor
mov
jb
jns
aam
fists
test
mov
push
mov
adc
inc
aas
push
xor
cmp
sub
fsubr
dec
cltd
stos
lea
popa
testb
pop
inc
mov
mov
mov
mov
cmp
add
mov
cs
sub
sti
dec
xchg
test
or
pop
fcompl
mov
push
mov
jmp
scas
jle
adc
pop
push
and
mov
orl
ljmp
fs
and
cmp
out
xchg
xchg
ljmp
or
cmp
jecxz
dec
push
mov
cwtl
and
int
or
and
mov
pop
out
xor
adc
imul
pop
shlb
push
add
notb
lret
lahf
sub
pop
lods
or
dec
nop
push
jle
or
add
ss
cmp
jnp
pop
push
subl
lods
jns
call
adc
std
rol
mov
mov
adc
lahf
aaa
push
xchg
sti
ds
mov
sbb
je
les
test
inc
add
push
lea
jb
mov
loop
push
and
mov
out
adc
cmp
dec
clc
push
dec
cli
lods
push
movsl
and
jecxz
lret
fcompl
mov
cmp
fldl
cmp
adc
lods
adc
jge
sbb
push
dec
cmpsl
mov
xor
push
mov
popf
fstps
ljmp
jl
out
aad
mov
sub
cwtl
aas
not
xlat
jo
and
inc
lods
out
jne
sub
scas
outsb
out
mov
jne
aas
jb
and
fs
xchg
add
xchg
mov
mov
cld
push
inc
in
sbb
inc
pop
add
cld
stc
js
test
cmp
int3
in
adc
dec
sub
movsb
add
add
sub
sub
gs
inc
repnz
fdivs
enter
pop
xor
xlat
adc
sub
and
cli
jecxz
adc
sbb
imul
scas
or
jg
dec
in
adcb
or
mov
push
mov
mov
ds
arpl
and
inc
sub
ja
sbb
push
add
adc
add
movsl
outsl
cmpl
push
adc
in
negb
sub
push
adc
mov
xor
cmp
subl
push
pusha
adc
mov
mov
and
sbb
or
adc
fs
sub
pop
popa
fdivrl
and
mov
jo
sti
mov
int
lods
jmp
lcall
pop
adc
pop
xchg
jle
push
ret
pop
inc
push
insl
jnp
mov
adc
aam
jge
fdivs
mov
adc
push
add
lret
mov
and
pop
lock
lods
mov
inc
xchg
mov
rcrb
jb
adc
xchg
and
lds
rol
js
xor
mov
sahf
js
add
lahf
lods
lret
xor
sbb
and
jno
mov
add
into
imul
mov
stos
lods
pop
les
mov
shrl
mov
and
outsl
inc
shlb
les
mov
push
aad
or
call
xor
dec
inc
in
arpl
dec
jbe
jg
push
mov
lock
cs
test
in
mov
gs
and
imul
sti
js
cli
jecxz
insb
pop
xchg
or
jo
movsl
sbb
jbe
dec
ret
int3
mov
mov
jmp
mov
mov
bound
repnz
mov
or
or
jg
inc
or
orl
and
clc
icebp
pop
cli
iret
ret
rcrb
out
xor
orb
mov
push
pop
dec
inc
mov
shl
into
into
sbb
and
add
sbb
adc
dec
dec
cs
jl
mov
xchg
mov
std
push
mov
out
imul
cmpb
push
mov
jbe
add
bound
dec
ret
xor
pop
push
xchg
out
mov
incb
add
mov
or
stos
movsb
add
fsubrl
cmpsl
xor
mov
repnz
imul
mov
pusha
and
in
shrl
xor
test
dec
popl
sbb
shrl
repnz
mov
clc
xchg
pop
dec
dec
pop
ret
insl
mov
data16
push
fisubrl
mov
add
xor
and
ret
loope
push
push
inc
cmpsl
push
push
test
data16
inc
or
je
push
adc
lods
sahf
jecxz
add
xchg
cmc
xchg
dec
push
mov
or
out
les
or
xchg
hlt
test
sub
mov
push
mov
pop
fimull
fidivs
ret
mov
add
add
ljmp
loope
cmp
rolb
xlat
xor
pop
adc
dec
cli
out
pop
out
cmp
cmp
push
pop
test
fnstenv
cld
out
jne
pop
mov
stos
jge
or
call
cwtl
call
mov
add
inc
int3
add
jb
fwait
clc
mov
mov
clc
cmp
mov
loop
jbe
add
lahf
mov
cmc
inc
cmpsb
fs
and
sbb
in
xor
repz
inc
pop
jbe
popa
xor
mov
test
rclb
fs
call
test
mov
inc
dec
xorb
mov
hlt
xlat
les
xchg
xor
xchg
jmp
std
fsub
lret
repz
adc
test
ja
das
sbb
mov
jecxz
mov
xchg
mov
fistpll
leave
xor
add
add
mov
push
lea
mov
fistpl
pop
xor
rolb
push
dec
test
add
mov
ficoml
pop
sbbb
out
fdivs
dec
andb
in
lahf
loope
adcl
das
inc
aaa
add
ret
iret
fldln2
push
rol
mov
pusha
sbb
popa
jne
imul
pushf
mov
adc
packssdw
push
iret
jge
fcomi
aad
lock
pop
jns
sub
sbb
cmp
in
int3
pop
stc
aas
add
mov
sbb
stc
cwtl
fstpt
ret
or
and
cltd
rol
push
addl
iret
mov
mov
add
jae
and
xor
setle
sbb
pop
adc
out
sbb
jae
in
in
xor
in
inc
mov
lods
xlat
pop
jbe
stos
mov
inc
sbb
lods
pop
mov
jmp
fcom
pop
mov
lahf
xor
or
mov
dec
pop
loop
fst
jl
mov
xchg
jo
push
lods
daa
push
jno
ss
mov
jne
cwtl
fisubl
add
xchg
adc
cmpl
xchg
lret
mov
cmpsb
push
xchg
test
lods
js
scas
mov
mov
pop
call
mov
cmpsb
daa
xorl
xchg
mov
imul
ret
insb
jno
lock
pop
lcall
mov
jo
test
aad
in
add
test
rcll
bound
out
adc
lods
fwait
mov
jecxz
mov
sbb
push
dec
cwtl
or
pop
add
adc
xor
add
sysexit
mov
lea
call
jle
sbb
movsl
mov
cmovnp
xchg
enter
ja
adc
adc
cmpsl
stos
pop
xor
inc
inc
push
inc
mov
jo
clc
jns
jle
and
xchg
or
sbb
scas
cltd
pop
xchg
xchg
mov
xchg
pop
mov
jns
mov
add
mov
cmpsb
and
and
xor
xchg
cmp
in
int
movsl
or
cmp
mov
pop
out
or
shrl
pop
test
mov
inc
lea
aas
xor
inc
aas
xchg
js
mov
cli
inc
sar
xor
mov
cmp
sub
adc
outsl
lods
sarb
push
cmpsl
mov
fsubr
test
add
jbe
pop
in
xchg
jp
stc
pop
jae
data16
jmp
idiv
pushf
mov
lods
jl
xor
loope
insl
out
mov
stos
adc
xchg
mov
add
inc
fwait
xor
insb
jle,pn
mov
and
mov
iret
and
iret
decl
lock
pop
inc
jmp
add
ret
rclb
inc
ja
dec
icebp
add
dec
mov
and
stos
and
pop
add
stc
jle
xchg
sarl
aas
sub
out
sti
mov
push
sbb
divl
ljmp
mov
mov
pop
enter
cmp
cmpsb
or
addr16
aaa
inc
cld
mov
addl
cmp
add
push
les
aaa
lret
repnz
dec
lods
outsl
movsb
pop
push
insl
test
idivl
adc
fwait
inc
mov
or
push
pusha
cmp
inc
pop
lods
data16
fwait
pop
dec
pop
sti
add
popa
fs
ret
jo
adc
or
test
xchg
cmp
test
jle
inc
aaa
arpl
in
mov
jnp
fisubl
inc
mov
lock
mov
sub
xor
lods
cmpsb
repnz
hlt
loop
int
gs
push
fld
push
add
push
mov
out
xchg
aam
out
mov
cltd
xchg
imul
lods
push
push
aas
data16
adc
and
dec
xchg
pop
pop
imul
jge
sub
repnz
jp
push
jp
outsb
insb
dec
sbb
mov
gs
jecxz
ret
pop
or
and
sahf
fsts
sbb
jmp
hlt
rorl
or
pop
sbb
fdivr
scas
push
cmp
sbb
pop
xchg
nop
fs
xor
loop
ffree
in
fsubrp
push
jecxz
les
test
in
mov
xchg
lds
xor
or
push
cmp
mov
push
jns
leave
sbb
push
lret
push
movsl
xor
call
out
dec
je
popf
mov
jmp
iret
mov
and
add
subb
mov
adc
xchg
inc
add
add
push
push
sub
ret
jle
gs
xlat
in
cmp
mov
mov
pop
cs
mov
xchg
sbb
pusha
in
dec
lods
inc
fwait
jmp
jns
mov
out
ds
mov
rcrb
cld
nop
movups
push
dec
mov
insb
aam
cmc
jmp
add
dec
adc
cmp
lea
nop
adc
add
iret
pop
adc
jbe
test
enter
mov
divb
xchg
xor
add
mov
add
adc
cld
jp
add
mov
jno
mov
aam
lahf
nop
mov
push
daa
les
jmp
bswap
sbb
adc
xor
iret
xchg
pop
in
or
pop
mov
in
sub
jge
xchg
sti
xchg
imul
sbb
mov
or
mov
dec
sbb
add
in
pushf
testl
cmp
test
clc
das
mov
jl
inc
mov
cltd
cwtl
mov
cli
jg
cmc
jbe
add
in
mov
call
sbb
jg
jbe
and
cmc
lds
xor
and
or
pushf
or
cmc
shlb
pop
iret
xorl
push
in
rorb
cmp
arpl
push
aas
mov
lcall
addr16
rclb
mov
movsl
cmpsb
sbb
in
cltd
jl
jbe
cmc
out
out
clc
fsubr
rorl
lret
adc
cwtl
push
orl
repz
inc
sahf
or
inc
scas
rcrb
cs
aad
outsb
cmpsl
sbb
xor
test
add
cmpsl
cmpsl
cwtl
mov
push
adc
add
cmpsb
gs
ja
fiaddl
jbe
xor
sbbl
pop
iret
mov
fadds
jmp
pop
push
or
rorb
xchg
ss
jae
xchg
outsl
lea
mov
flds
adc
repnz
lods
xchg
faddl
cmp
sbb
sbb
cmpsl
xorb
fwait
add
shll
hlt
jb
mov
pop
xchg
jl
pop
int3
andb
mov
adc
mov
int3
stos
stos
mov
mov
adc
xchg
inc
repnz
push
fisubrl
add
stos
out
inc
add
xchg
int3
sub
clc
sub
lods
dec
pop
cmpsl
xchg
cld
dec
mov
js
sub
adcl
dec
inc
xchg
jb
add
jecxz
xchg
mov
sbb
std
jmp
fildl
jae
jl
adc
sub
push
out
sbb
bound
jnp
insl
das
xchg
mov
push
xchg
mov
push
jmp
loop
rcrb
pusha
add
mov
lret
lods
bswap
sub
inc
fidivrl
enter
mov
ds
outsb
dec
pop
jle
sbb
je
jnp
stc
scas
mov
stc
xchg
inc
push
out
in
shlb
jmp
call
add
mov
ljmp
aad
jmp
dec
jle
shrb
iret
sub
and
sub
int
clc
mov
imul
sbb
pop
jmp
mov
mov
lea
ljmp
ss
jno
add
push
insb
pusha
and
push
or
xchg
or
out
cltd
jbe
xor
lds
jno
pop
cmp
int3
push
int
or
mov
dec
gs
lahf
or
dec
loop
mov
mov
xchg
push
dec
mov
jle
mov
roll
jl
jp
push
push
push
or
daa
jmp
mov
ljmp
stos
add
pop
les
out
int
dec
xor
je
ss
add
pusha
jno
fmull
jmp
lret
mov
dec
add
loop
in
lock
adc
iret
mov
pop
inc
popf
popa
test
push
scas
mov
sbb
int3
loop
and
dec
xchg
ja
or
shll
outsl
or
cmp
imul
push
jp
adc
sahf
adcl
xor
and
cmpsb
xor
leave
pushf
mov
sarb
cmpsl
inc
fwait
ljmp
xor
fcomp
fcompl
and
sahf
popa
pop
mov
sub
nop
and
push
pop
jb
dec
jle
add
test
arpl
les
outsb
and
add
push
mov
cwtl
jle
negb
add
mov
sbb
inc
dec
clc
mov
cmc
lret
shl
push
mov
adc
mov
fs
fisubs
mov
js
pop
cltd
adc
repnz
mov
lods
sahf
and
pop
cmp
cli
sub
pop
push
das
jb
cmp
push
addr16
adc
jo
or
test
out
xchg
in
mov
jmp
and
icebp
jmp
or
mov
dec
push
pop
loope
sti
jl,pn
adc
mov
daa
pop
adc
inc
gs
cmp
leave
inc
ss
xor
mov
inc
push
leave
and
add
sub
rcrb
lret
ss
je
and
add
jle
lea
pop
mov
or
cmp
push
stos
mov
dec
inc
xchg
dec
shlb
dec
adc
pop
cmpsb
sub
sub
xchg
mov
stos
jecxz
cmpsb
loope
sub
cmp
repnz
pop
xchg
and
sti
arpl
test
mov
mov
sarb
xor
jns
aaa
push
adc
mov
mov
ds
mov
pop
pop
aam
cmp
mov
mov
sub
and
push
jl,pt
fisttpll
pop
cltd
mov
ja
daa
push
aam
xchg
inc
idiv
and
rclb
mov
repnz
adc
fbld
adcl
adc
mov
inc
push
dec
push
inc
jbe
lea
in
sbb
je
cmpsb
inc
mov
inc
and
shll
into
and
inc
xorb
sub
sub
jnp
xchg
add
mov
mov
add
xchg
push
pop
out
mov
andl
adcl
lret
push
mov
mov
rcrl
dec
icebp
lds
jecxz
jae
and
adc
fmul
rol
into
lret
fucomi
enter
popa
cltd
shr
neg
cmp
hlt
divl
adc
out
and
pop
cltd
push
lret
xchg
mull
mov
dec
enter
or
sub
fs
lods
iret
mov
inc
int
add
mov
fcomip
stc
sbb
jb
mov
ljmp
add
mov
test
pop
pop
fdivrl
aad
sarb
jb
add
test
or
lcall
cmc
sbb
dec
movsl
sbb
ss
add
add
mov
in
ret
mov
mov
and
jg
cli
mov
stos
lret
mov
dec
ret
or
xchg
ficomps
lods
pop
jl
dec
and
sahf
push
cli
xchg
push
jns
sbb
mov
stos
sti
cmc
add
mov
nop
jbe,pn
ljmp
dec
sub
outsl
and
loope
out
jb
ljmp
cmp
jnp
cmpsb
pop
mov
adc
push
sbb
insb
mov
mov
lods
dec
dec
jno
repz
loop
imul
pushf
inc
inc
dec
cwtl
push
lret
pushf
sbb
inc
xor
push
int3
dec
rcll
dec
lret
idiv
mov
xlat
jmp
jge
cld
inc
pusha
mov
sbb
int
outsb
lods
in
aad
pop
mov
lods
xor
outsb
rorl
or
add
add
ret
cs
push
in
and
jmp
in
je
bound
push
dec
mov
jl
jne
mov
ja
mov
mov
push
push
jl
aad
nop
push
sbb
mov
in
and
cli
adc
mov
push
mov
popa
or
lods
pop
inc
rcr
sub
dec
call
jmp
idiv
in
add
subl
push
flds
insb
jnp
cwtl
cmp
fdivl
leave
out
ljmp
push
dec
pushf
mov
fwait
push
repz
mov
shll
or
pop
cmp
mov
fwait
testl
sahf
cs
std
cmp
dec
jbe
xchg
mov
or
std
jmp
cmc
push
jl
sti
sbb
and
lea
aam
dec
movsl
lds
or
inc
xchg
or
repnz
adc
jns
pop
add
aam
roll
xor
int3
jl
cmp
jne
jmp
repnz
mov
fists
aad
adc
pop
pop
popa
push
fbld
fldenv
dec
dec
shrl
mov
xchg
jns
movsb
mov
cltd
or
push
xor
lret
aas
mov
cmc
ret
xchg
xor
into
pop
adc
fldenv
arpl
xchg
cli
and
iret
imul
dec
aad
cwtl
dec
xor
mov
ja
pop
iret
dec
leave
lds
xchg
cmc
aas
insl
nop
lahf
jns
psubd
lahf
lahf
xchg
outsb
mov
pop
lea
sbb
leave
inc
mov
inc
or
pusha
xchg
adc
in
pop
test
cmpsb
sbb
aas
jge
cmp
arpl
jmp
cs
aad
jae
in
mov
mov
loop
inc
cmpsb
jg
addr16
pop
nop
mov
jmp
es
arpl
and
sti
lods
add
loope
mov
aaa
mov
dec
pop
xor
mov
mov
jle
adcb
jmp
or
ret
inc
imul
mov
push
fld
cmp
aas
pop
cmp
rorl
and
jmp
sbb
outsb
mov
lds
rcr
call
int3
gs
mov
adc
loop
out
push
inc
add
pop
jp
pusha
or
icebp
mov
sbb
push
adc
out
add
pop
jae
cmp
pop
pusha
insb
loope
lock
push
sbb
push
mov
icebp
data16
pop
jmp
loopne
jl
jne
xchg
lcall
addr16
out
mov
mov
xchg
imul
ds
aaa
fildl
into
push
scas
fidivrs
mov
fsubrl
jge
push
shrl
pop
xchg
dec
ljmp
xchg
xor
dec
mov
negl
inc
dec
rcr
es
fisubl
inc
jle
push
or
fldcw
dec
dec
loop
xor
jo
xchg
mov
mov
xorb
and
stos
push
in
sbb
testl
mov
or
pop
nop
fwait
loop
adc
mov
xchg
push
lods
mov
mov
shrl
es
verr
dec
loop
sbb
int
popa
test
jmp
loope
dec
test
js
mov
jae
sbb
lock
xchg
int3
pop
xor
lret
imull
push
gs
test
jns
lods
push
sub
aad
pusha
out
cmc
test
rclb
out
xchg
dec
pop
jo
js
lret
mov
hlt
fdivrs
loopne
jecxz
jp
mov
imulb
xchg
fwait
xchg
scas
in
repnz
ja
add
mov
inc
push
lds
sub
dec
call
pop
cmp
inc
popa
inc
sbb
sub
cs
icebp
ljmp
nop
mov
cmpsb
andl
cmpsb
es
sahf
cwtl
and
scas
cmp
jne
lahf
loope
ja
test
sbb
js
inc
mov
dec
xor
xchg
adc
dec
sbbl
ret
shrd
popa
inc
mov
push
adc
mov
sahf
and
jbe
ret
push
adc
inc
rcrb
fs
or
mov
ljmp
add
lds
roll
ja
add
les
sahf
mov
int
cmp
adc
mov
sbb
xor
mov
cmp
mov
test
push
mov
mov
mov
fs
loopne
sbb
aam
xor
ds
mov
lahf
outsl
lcall
cli
sti
push
adc
push
ja
jle
sbb
xchg
stos
pop
inc
or
ror
mov
in
xor
push
pop
sbb
mov
add
push
int3
in
pusha
sarb
mov
cmp
loopne
lcall
ret
lret
pop
cli
jge
fwait
ds
adc
imul
mov
shlb
adc
or
shr
clc
cmc
and
roll
lahf
hlt
movsb
fwait
scas
cmp
jne
repz
fs
add
jne
inc
dec
jmp
cli
mov
fldt
or
mov
jnp
mov
shll
xchg
adc
stos
and
lock
mov
out
mov
popf
call
loop
pop
rcrl
in
pop
dec
movb
data16
jne
push
mov
adc
cmp
mov
sbb
mov
sbb
mov
test
in
pop
pusha
test
mov
bnd
dec
mov
cmp
loopne
jp
movl
ret
cmpsb
ret
in
mov
jno
sbb
push
out
xchg
movsb
movsl
lret
mov
jl
push
mov
cmp
inc
outsl
aas
faddl
pop
dec
jae
insb
cltd
sub
xchg
lret
dec
mov
ja
add
xchg
push
cwtl
aas
mov
lcall
mov
ja
rorl
mov
into
mov
jb
and
pop
xor
xchg
xchg
sub
dec
inc
mov
imul
fnstsw
test
pop
mov
pop
cwtl
fimull
mov
das
sub
stc
inc
mov
imul
fld
cmpb
mov
sbb
jl
adc
push
fcmovnb
inc
push
add
push
clc
notl
mov
imul
mov
popa
scas
fidivl
aad
mov
mov
mov
fidivrl
or
arpl
sbb
loope
in
mov
pop
jno
xchg
sub
push
cld
cmp
dec
push
ret
dec
rcll
jl
sbb
mov
das
ficoms
mov
add
jecxz
push
and
jge
test
fists
nop
push
push
fistps
daa
ja
pusha
inc
adc
inc
and
addr16
adc
and
and
loopne
ret
lahf
mov
inc
cwtl
repnz
push
fxch
add
data16
iret
mov
out
pop
adcl
dec
enter
hlt
cmp
in
push
es
mov
add
push
inc
ja
fists
mov
xchg
jnp
test
and
push
scas
xchg
addr16
pop
mov
daa
jl
sbb
pop
jbe
push
pop
aas
outsl
pop
push
scas
lret
out
mov
shll
and
nop
jmp
sahf
outsl
faddl
jle
and
xor
cmp
rorb
popa
jecxz
push
jae
ljmp
add
jne
gs
shll
mov
push
or
andb
jl
pop
push
jmp
iret
add
rcrl
mov
test
adc
cmp
sbb
in
into
cld
xor
xlat
mov
rolb
out
divb
pop
cmp
mov
clc
mov
jns
fdivrl
mov
jecxz
cltd
jne
lret
std
clc
call
sbb
pslld
add
xchg
je
sbb
leave
cmpsl
insl
in
andb
addr16
jnp
or
inc
bound
add
add
orl
sahf
jle
and
push
adc
scas
aas
outsl
cld
mov
jmp
cli
movsb
fadds
pop
push
cmc
dec
jecxz
inc
xor
adc
test
pop
roll
push
mov
dec
cmp
inc
adc
out
jp
lea
push
dec
faddl
jl
jne
loopne
xchg
popf
ret
jge
jge
lods
dec
sub
lods
addl
lea
outsb
cs
fldl
loop
cmc
cli
insb
xchg
and
popf
scas
lret
cli
rorl
mov
push
cwtl
jns
int3
jle
sub
cmp
jge
cmp
adc
add
popa
cltd
jp
cmp
add
xchg
in
dec
push
cmp
pop
adc
js
push
call
push
pop
fisubrs
mov
add
mov
and
and
test
shll
mov
imul
pop
or
mov
inc
push
mov
dec
rol
push
out
ljmp
orb
inc
jg
sbb
xchg
ficomps
insl
cmc
popa
in
les
add
push
add
lcall
dec
data16
add
fildll
and
daa
ds
jns
pop
xor
cmp
push
popf
sub
mov
inc
nop
or
out
in
adcl
ret
mov
jp
int3
gs
jp
dec
adc
fstl
mov
xor
xor
push
xor
jmp
and
pop
sahf
and
pop
cmp
repz
jg
ret
xchg
add
adc
mov
adc
out
inc
rcll
dec
daa
lock
dec
lds
aam
sub
and
in
or
insb
sti
or
cmpsb
cmp
push
out
js
mov
out
xor
mov
lret
stos
or
iret
dec
imul
adc
push
dec
adc
xor
test
mov
or
jmp
sbb
dec
adc
lret
lahf
out
stos
add
pop
ljmp
sarb
adc
push
popf
xchg
cld
jge
add
adc
mov
xchg
popa
cmp
sub
insb
in
xor
inc
addr16
mov
cmc
mov
shrb
jbe
mov
sub
mov
ud2
jge
test
sbb
cld
inc
call
mov
jp
mov
jg
sbb
or
pop
and
sub
in
fsub
cmp
scas
outsl
fsubrs
out
push
mov
cmp
jle
mov
cmpl
repz
add
outsb
mov
inc
stos
xchg
sbb
inc
sbb
popa
mov
js
call
push
adcb
mov
rolb
mov
dec
fisubrs
addb
stc
mov
and
mull
mov
pop
popa
iret
mov
cs
fsin
aaa
int3
inc
iret
xor
ds
ss
mov
out
mov
jl
add
dec
sbb
daa
pop
xchg
movsl
pusha
mov
int
out
mov
pop
mov
into
inc
cs
dec
je
sti
imul
xor
imul
xchg
outsl
pop
clc
mov
in
adc
cmpsb
xchg
rcrl
cmp
fsubl
xor
cmpl
cltd
lods
mov
xchg
xchg
or
lods
mov
mov
rcrb
data16
sbb
push
outsb
cmp
cmp
adc
cmp
push
test
sbb
xchg
or
push
push
mov
xor
outsb
or
cwtl
icebp
add
sub
stos
lods
scas
fnsave
sbb
xor
push
jo
fadds
cwtl
xchg
iret
push
aaa
inc
stos
adc
xor
test
pop
push
hlt
ljmp
xor
jo
stos
mov
jle
stos
pop
mov
sub
inc
mov
shlb
lret
loope
sub
js
pop
sbb
arpl
das
jbe
in
jne
jae
sarb
gs
or
xchg
or
fmuls
loopne
or
inc
mov
push
push
mov
xor
and
popa
loop
and
cmp
cmp
ss
jns
push
mov
mov
cmp
rol
aaa
out
popa
sarl
sbb
or
lcall
les
mov
and
es
aaa
lret
scas
es
hlt
push
outsl
loope
push
add
push
loop
andb
pop
fiadds
sbb
jb
sub
and
sarb
aam
dec
clc
adc
icebp
pop
mov
stos
mov
mov
sub
imul
das
adc
and
pop
cmp
mov
mov
bound
sbbl
xchg
cli
xorl
xchg
loopne
dec
cmpsl
jbe
jg
mov
push
movsl
stc
pop
cmpsl
repnz
ja
int
mov
cmp
pop
or
adc
mov
fchs
mov
push
and
or
push
jmp
xor
subl
mov
and
out
inc
xor
inc
pop
add
push
pop
sub
loop
aam
sbb
sub
xchg
dec
mov
bound
loop
sete
adc
es
sbb
lret
out
cmp
stc
imul
adc
test
add
movsl
or
cmp
popl
and
push
add
xchg
mov
sbb
shl
cs
notb
dec
outsb
mov
vmaxss
cmp
and
ss
orl
in
sub
ret
lods
insl
je
cmpsb
and
and
xor
add
movsb
imul
mov
cltd
insb
lock
xor
in
cs
jnp
cwtl
sbbb
mov
mov
push
popf
addr16
adc
xchg
jnp
dec
arpl
or
xchg
mov
repnz
ret
bnd
mov
cmp
jmp
pavgw
jp
out
jg
hlt
sbb
cmpsl
sub
pop
shrd
mov
xor
lret
cmp
cmc
lods
mov
jle
pop
jo
mull
mov
xor
imul
and
mov
pop
cmp
dec
push
test
xor
push
mov
xor
call
inc
aad
rclb
pushf
aaa
push
mov
stc
cltd
add
ljmp
xchg
xchg
mov
mov
add
mov
mov
dec
push
fucom
out
bsf
loop
xchg
xchg
push
imul
fimuls
push
cltd
push
mov
addr16
leave
mov
add
push
cmpsl
inc
std
jne
test
shll
ret
mov
pop
in
testb
in
adc
inc
pop
jl
sbb
fwait
sub
daa
mov
xor
lahf
sbb
lods
add
sti
sbbl
out
xor
or
ret
rcrl
xchg
fdivp
iret
test
inc
add
sbb
xor
mov
jp
int
inc
in
fs
and
nop
cwtl
ficompl
outsb
aaa
into
les
cltd
adc
adc
outsb
sahf
adc
rcll
add
outsb
add
lret
jo
adc
clc
inc
add
push
xchg
pop
mov
enter
xchg
cli
int
pop
adc
into
pop
xor
push
inc
imul
pop
test
ret
jb
add
rcll
stc
mov
inc
int
out
sbb
lods
and
in
test
xor
jl
mov
xchg
inc
orb
mov
pop
and
mov
scas
mov
mov
mov
and
outsb
movsb
cmp
lods
testl
adc
out
aam
rcrl
popa
adc
sub
into
mov
pop
scas
sub
inc
fists
jg
add
inc
adc
popf
push
sub
mov
push
jne
mov
cltd
dec
loope
addr16
je
data16
mov
dec
mov
inc
cwtl
push
loop
ret
jmp
js
pop
mov
adc
and
mov
gs
scas
cs
jno
jnp
fidivrs
scas
push
movsl
stos
cwtl
adcl
test
loop
scas
fwait
jb
dec
dec
pushf
int
xchg
adc
out
or
cmpb
pop
cmp
adc
mov
adc
scas
roll
ret
adc
add
aam
add
rcr
pop
ds
jle
enter
fnstsw
into
aam
cmp
int3
jno
mov
fbstp
and
lods
cld
es
addr16
sahf
jp
and
mov
lret
push
stos
nop
and
cmpsb
cld
ss
xlat
pop
mov
mov
push
and
add
aaa
mov
imul
cltd
pop
pop
add
test
jne,pn
test
and
das
mov
jp
mov
lods
mov
imul
loop
pop
repnz
repz
sbb
popf
leave
imul
cmpsb
loope
push
push
je
pop
pop
daa
xchg
mov
leave
xor
movsb
leave
adc
adc
jb
inc
add
sbb
push
mov
xor
sub
cmp
imul
or
xor
outsb
fists
push
testl
inc
stos
cmpsb
int3
aas
mov
mov
mov
sub
gs
cmpsb
or
sub
out
lds
clc
mov
lds
xchg
xlat
adc
outsl
ljmp
aam
jle
pop
shr
adc
dec
and
stos
add
fldenv
cld
mov
mov
pusha
push
pop
test
test
divl
cmpsl
add
fidivl
push
xchg
repz
notb
flds
mov
push
mov
xor
or
push
bound
pop
pop
in
out
lret
nop
mov
mov
push
inc
data16
out
cmp
aam
inc
jmp
sub
adc
mov
cmp
cmp
clc
pushf
mov
in
jb
repz
xchg
lock
fists
pop
sbb
imull
repz
xor
out
add
dec
out
inc
loop
cmpsb
xchg
push
xchg
cmp
hlt
mov
inc
jge
push
cmpsb
repz
add
cwtl
mov
cmc
mov
fisubrl
push
inc
dec
pop
lret
jns
pop
dec
lea
clc
out
dec
jl
and
pop
aad
pushl
jmp
shrb
movd
shll
lods
or
stos
cltd
test
push
es
jmp
adc
loop
js
xchg
inc
push
daa
cmp
xor
adc
jge
ljmp
mov
push
inc
negb
out
xor
hlt
in
mov
jmp
jge
mov
es
std
adc
pop
push
jb
inc
and
sub
xor
loopne
jp
insb
sub
adc
jo
imul
jo
roll
stc
orl
sbb
push
sbb
fldt
je
pusha
sub
dec
and
sbb
mov
cmpsl
dec
clc
sub
lods
popf
xor
mov
pop
adc
inc
push
sub
xchg
bound
push
inc
fists
add
inc
stc
or
cld
push
xchg
rolb
in
push
out
or
fidivs
pop
cmp
jnp
aas
repnz
jp
cmpsb
xor
out
xchg
insl
jnp
cmpsb
push
insb
icebp
in
inc
dec
add
jne
mov
outsb
loopne
and
or
jp
ja
adcl
push
insl
imul
xchg
sbb
cmp
add
fyl2x
test
popa
fnsave
movsl
std
outsl
movsl
cmpsl
in
fs
mov
mov
out
push
popf
push
js
gs
dec
adc
stos
dec
push
jae
movsl
dec
sub
cmp
test
xor
scas
rclb
jp
imul
dec
aaa
pop
push
mov
push
in
addb
mov
les
mov
or
scas
pop
push
xor
pusha
in
adc
arpl
jbe
xor
fsub
sub
mov
inc
mov
je
ljmp
mov
das
cmp
mov
fimuls
push
and
or
add
xchg
sbbl
shrb
mov
jmp
xor
lods
je
loope
int3
xchg
mov
cli
negl
int
or
imul
rcr
xchg
inc
clc
pop
lods
adc
sub
push
mov
or
xchg
out
lret
lods
ljmp
sbb
cmp
lods
in
jecxz
xchg
xchg
pop
xor
pop
es
bound
dec
sbb
subl
test
push
cmpb
mov
lcall
push
jne
dec
sbb
pop
movnti
cs
inc
aad
loopne
aam
jno
jl
in
lds
das
pop
dec
xchg
shll
xlat
cli
test
mov
sub
sti
mov
bound
stos
jae
shr
shll
jo
lods
mov
inc
or
stc
and
cld
call
mov
cs
mov
inc
or
push
and
int
int3
push
dec
mov
xchg
pusha
cmp
mov
push
sbb
sbb
xor
int3
sbb
dec
andl
int
add
ljmp
int3
push
sub
sub
cmp
xchg
mov
scas
test
icebp
jae
cmc
sbb
int3
mov
sub
xor
movsb
jge
scas
loop
adc
jecxz
imul
pop
dec
int3
out
cmc
push
sub
sub
sbb
insb
rolb
xor
bound
insl
mov
aaa
mov
jmp
insl
xor
frstor
ljmp
add
stos
fists
adc
mov
jns
bound
ret
xchg
inc
inc
addr16
xor
hlt
mov
test
jg
push
into
mov
or
cld
jp
shr
dec
push
lods
fnstsw
add
pushl
or
adc
dec
cs
test
inc
ror
inc
mov
mov
inc
mov
nop
call
mov
sarb
pop
pop
mov
idiv
mov
mov
insl
cmpl
jecxz
fwait
xchg
jne
pop
clc
push
push
daa
mov
aam
cld
inc
sarb
dec
incb
paddusw
sahf
push
out
cmp
or
movsl
ret
xchg
mov
jbe
test
lea
bound
arpl
push
mov
jo
push
pop
das
mov
repnz
mov
sarl
shll
mov
xchg
fsts
sbb
jl
dec
jnp
and
or
xchg
out
subb
lods
cmc
pop
mov
nop
push
std
aas
mov
js
cmp
mov
mov
jbe
hlt
das
dec
jmp
pushf
mov
stos
mov
sti
cmp
aam
cld
cmp
xchg
jle
shll
nop
into
mov
es
loope
jecxz
add
rol
scas
into
sbb
push
mov
sbb
inc
fldt
hlt
and
in
cmp
call
negb
jbe
cmpb
lods
pop
mov
pop
aaa
adc
cmpsb
jecxz
adc
repz
cmp
std
sarb
and
repnz
jno
push
adc
push
sub
das
pop
pop
xchg
sar
lods
push
jnp
jbe
cmp
sti
adc
lods
stc
imul
sbb
shr
jmp
push
stc
pop
notl
jl
inc
and
xchg
fdiv
in
push
clc
scas
icebp
sub
imul
inc
orb
ss
add
add
aaa
dec
test
adcl
aaa
test
mov
jle
addb
fisubs
leave
push
nop
add
pop
sub
xchg
scas
into
adc
cli
mov
repz
mov
fsubl
push
setle
aam
test
add
in
and
jne
arpl
mov
shlb
ret
jbe
jg
push
cmp
xchg
cmc
data16
ds
lds
inc
mov
outsb
cmp
shlb
test
out
xor
push
pop
sbb
fsubl
mov
cltd
ds
sti
and
push
mov
add
inc
xor
mov
cli
sbb
xchg
mov
mov
pop
adc
pop
popa
test
pop
jbe
and
or
sub
pop
cltd
pusha
jbe
jmp
push
imul
dec
sarb
insl
out
and
sbb
sbb
mov
or
rcr
push
jne
js
test
xchg
addr16
push
std
xor
xchg
rolb
sbbb
sbb
dec
out
pushf
mov
mov
or
sub
flds
aam
in
insb
jg
icebp
cli
or
fmull
xchg
lods
andb
sahf
lret
inc
pop
movb
dec
or
imul
sbb
xchg
jo
and
cmpsb
inc
sbb
inc
pop
fistpll
sub
mov
fmull
dec
cmp
push
mov
sub
adc
ret
lods
fimuls
call
xorb
addl
arpl
jb
pop
enter
jo
add
imull
or
cmp
dec
clc
mov
dec
or
std
xor
sub
sbb
std
push
and
test
es
sbb
xchg
pop
test
sub
in
inc
stc
mov
mov
sbb
mov
xchg
icebp
test
jbe
pop
ljmp
pop
leave
inc
push
mov
or
rcrl
pop
dec
push
cltd
mov
es
out
jbe
jge
cmpsb
jge
sbb
add
fildll
insl
bound
push
sub
repnz
sbb
in
sub
mov
xchg
pop
rcl
lahf
and
bound
adc
cli
cmp
fnstsw
push
aam
orb
stos
ds
aas
lock
fidivl
dec
lret
pop
xor
rcrb
add
mov
push
into
mov
xchg
sti
mov
xor
push
test
std
int
leave
ja
mov
lret
cmc
mov
inc
popa
jmp
pushf
hlt
push
mov
addr16
adc
adc
xchg
data16
xchg
pop
pop
outsb
shll
xchg
je
xchg
fldcw
mov
add
adc
out
les
xor
pop
stc
stos
rorb
or
dec
aad
sbb
jmp
and
pop
scas
pop
xchg
sarb
push
mov
adc
arpl
in
mov
xor
jo
pop
push
dec
mov
addr16
or
insl
xchg
mov
push
das
iret
xlat
dec
mov
sbb
jp
daa
mov
pop
add
cli
mov
adc
pop
shl
je
iret
jl
xchg
mov
add
xor
sub
fwait
jo
ret
nop
addr16
cmc
sub
jmp
out
iret
push
repnz
inc
mov
xchg
in
sbb
lret
push
les
inc
jne
aam
mov
addr16
rorb
in
hlt
xor
out
call
sbb
aam
or
int3
out
add
in
or
bound
stc
pushf
mov
rcll
cmp
lret
insb
mov
and
lcall
mov
add
pop
sbb
xlat
imul
ljmp
iret
in
mov
adc
loopne
test
and
dec
bound
in
orl
inc
lea
subb
arpl
jne
popa
jnp
cli
leave
rcr
das
ljmp
inc
out
jo
mov
pop
inc
mov
push
xor
add
scas
cmp
cmp
in
and
inc
push
jae
in
scas
call
cmp
jmp
int
mov
cmp
mov
xchg
xor
insl
push
jmp
dec
into
push
xor
cwtl
mov
enter
hlt
loopne
ja
cli
sub
jge
sti
imul
sub
loopne
aaa
icebp
cmpsb
jge
pop
jb
rclb
nop
xchg
xchg
mov
cmc
movsb
inc
out
pop
cwtl
daa
jne
rcll
jmp
mov
adc
adc
pop
inc
or
sub
adc
test
rcrb
mov
mov
aaa
movsb
xchg
inc
or
ud0
mov
or
lods
in
and
mov
dec
or
lret
push
xor
mov
stc
jne
in
mov
stos
lret
in
cltd
lcall
xchg
enter
push
test
aas
stos
pop
xor
into
sub
frstor
and
push
xchg
jp
aad
in
or
out
out
push
cltd
inc
andb
popa
popf
outsb
cmp
mov
mov
fwait
jae
adc
push
insl
fs
or
das
and
std
in
pusha
cmpsl
ja
dec
je
aaa
subl
xor
rorb
add
cltd
call
lea
loope
adc
mov
dec
cld
out
fs
adc
add
dec
sbb
inc
inc
xchg
in
xchg
xor
pcmpeqd
imul
popf
xorl
gs
pop
sbb
add
scas
shll
test
sbb
push
leave
dec
pop
enter
es
inc
inc
out
subb
and
subb
call
inc
lahf
cmp
andb
sbb
xchg
cmp
test
test
lea
dec
sbb
insl
xchg
or
popa
std
test
in
je
faddl
push
xor
vhsubps
idivl
pop
xor
lds
ret
adc
pop
cwtl
push
ret
push
js
fucomp
leave
pop
stos
pminub
cmp
ja
jg
daa
aad
repnz
mov
or
xor
push
sbb
or
push
inc
ret
pop
cmp
jbe
add
and
mov
jne
mov
cld
sbb
enter
sbb
mov
cld
loopne
or
or
leave
cmp
scas
frstor
cltd
nop
fidivrl
sub
fldl
pushf
and
jb
fnstenv
or
cli
inc
scas
xchg
fs
mov
jmp
mov
ret
sbbb
push
rol
ja
dec
rclb
mov
std
jbe
mov
jmp
scas
mov
out
and
cmpsb
push
ss
das
lcall
hlt
fsts
ficoml
jb
pushf
cli
jecxz
fs
lcall
xchg
jge
push
mov
roll
and
arpl
xor
sub
rcrl
pop
in
mov
sub
mov
popf
dec
testb
mov
mov
cmp
sub
shll
aam
test
or
dec
les
out
je
roll
add
daa
jge
fildll
sbb
fbstp
mov
fwait
inc
hlt
inc
push
mov
mov
pop
in
xor
rep
enter
stc
adc
pop
pop
into
pop
sbb
mov
cs
xlat
mov
jmp
xchg
mov
cli
jno
daa
mov
lcall
push
mov
test
adc
test
or
or
scas
sti
je
mov
inc
sub
int3
pop
push
inc
cwtl
int
xlat
xor
arpl
jl
pop
sbbl
cmpsl
addr16
xor
xor
in
jb
add
cwtl
iret
mov
dec
mov
hlt
pop
lcall
xlat
pop
or
jo
cmpsb
jg
push
sub
fs
pop
in
loope
cmpsl
das
aaa
ret
xor
aad
lods
arpl
push
nop
int
stos
jb
mov
dec
mov
or
call
in
pusha
xchg
or
out
int3
faddp
cmp
xor
loopne
bound
push
or
ds
push
ret
cmp
int
mov
jmp
xchg
packsswb
mov
and
icebp
lods
call
dec
popf
sub
dec
lret
inc
push
outsb
xor
fdivrs
mov
out
cmpsb
push
das
pop
push
outsl
fisttps
cmp
dec
ss
mov
test
pop
movsl
inc
cwtl
mov
pop
out
mov
lock
pop
mov
lea
and
test
push
pop
push
mov
std
rcrb
xchg
iret
add
mov
mov
ret
aaa
gs
xchg
mov
rclb
loopne
push
movb
daa
pushl
out
ret
mov
push
aas
sub
scas
scas
jbe
cld
and
dec
inc
lock
iret
stc
and
dec
dec
add
rol
pop
repz
cmp
jb
cmc
lea
push
push
in
repnz
icebp
negl
mov
aam
pop
and
push
xchg
add
cld
sbb
test
and
int
pop
mov
sub
fsts
mov
into
push
xor
loopne
and
inc
jno
push
divl
gs
or
test
in
lret
xchg
xchg
pop
mov
sub
adc
loop
rolb
push
mov
push
pop
outsb
popa
cli
int
sahf
das
add
ja
and
fwait
mov
ds
push
repz
repnz
and
mov
daa
or
add
mov
aam
adc
out
movsl
cwtl
in
lock
out
xchg
push
int3
mov
mov
xchg
dec
mov
mov
filds
inc
inc
je
aaa
outsb
pushaw
pop
and
stc
xchg
and
movsl
jmp
mov
loop
mov
jne
inc
mov
inc
mov
inc
pop
daa
insl
stos
outsb
int
stc
or
jns
jae
in
dec
push
fdivrl
fbld
ja
fidivrs
dec
xchg
test
out
xor
in
jg
test
pop
jl
or
movsb
jp
jnp
pop
std
icebp
cmp
clc
fisttpl
hlt
push
cmpsl
dec
inc
xor
aas
or
cmp
leave
insb
mov
je
imul
fwait
mov
ret
stos
push
stc
dec
dec
nop
mov
sbb
inc
add
scas
stos
xchg
or
push
sbb
cmpsl
and
sub
fld
lds
loopne
test
push
or
cmp
arpl
xlat
ds
push
mov
sbb
leave
shlb
or
sub
imulb
dec
pop
cld
jg
cmp
push
fs
mov
gs
or
and
lret
jbe
hlt
and
ja,pn
js
lret
std
jmp
jne
adc
cmp
adc
hlt
roll
test
adc
aas
xchg
mov
fnstsw
mov
xchg
mov
mov
cmp
repz
imul
fiadds
hlt
aaa
je
scas
test
push
dec
mov
jle
xchg
cs
mov
lods
fistl
jns
jo
fnstsw
mov
test
pusha
call
mov
push
add
cmp
repz
add
cmp
icebp
test
aam
mov
mov
inc
aad
dec
sbbb
and
xor
or
cmp
lcall
movsb
jb
int3
mov
dec
test
clc
orb
in
mov
mov
test
sbb
sbb
cmpsb
sub
dec
cld
stc
outsl
cmp
xchg
leave
jle
adc
icebp
sbb
loope
fdivl
cld
xchg
xchg
arpl
data16
adc
test
cmpsl
jg
jno
popf
aaa
gs
sub
sbbb
xchg
aad
imul
push
xor
push
push
dec
push
repz
add
mov
sarb
cltd
ds
push
jecxz
adc
jecxz
adc
lods
sbbb
in
cmpl
les
pop
mov
dec
mov
ret
mov
repz
les
xchg
pop
nop
mov
lret
mul
cmpsb
int
adc
cltd
scas
add
push
jns
add
cmpsb
xor
addr16
mov
mov
xor
nop
das
in
jecxz
inc
ljmp
ret
cmp
fsubr
rcrb
and
roll
jns
lahf
add
dec
ja
push
cmpsl
xlat
or
add
aad
scas
mov
inc
jae
push
dec
hlt
test
cmpsl
xchg
enter
les
xor
mov
stc
mov
xor
adc
sti
les
mov
cmp
or
les
adcl
jnp
push
push
jno
fnstcw
out
add
pusha
test
pop
xor
inc
mov
ja
aam
lret
andb
leave
pushf
xlat
or
cmp
mov
dec
mov
movntps
ljmp
mov
pop
or
or
push
mov
movsl
or
dec
jae
in
call
dec
mov
mov
icebp
pop
shll
jo
xor
cmp
shll
mov
mov
shl
leave
popa
and
cmc
sbb
cmpl
jp
ja
jp
fsubs
incl
mov
in
test
xor
push
xchg
fdivrp
or
dec
sti
xchg
mov
lea
daa
aad
fidivrl
iret
mov
outsl
push
shll
xor
jbe
add
fmuls
roll
loopne
ret
clc
in
mov
jnp
call
lock
ret
test
xor
jnp
push
jecxz
leave
lods
add
push
call
repnz
int
dec
flds
in
sahf
and
fadd
pop
cmp
je
push
push
arpl
xchg
pop
inc
push
xor
dec
xor
sbb
pop
xor
imul
mov
sbb
mov
sti
ds
les
pop
mov
dec
push
popf
and
icebp
test
cli
mov
js
push
test
jg
mov
sbb
or
vpsubsw
fnsave
stc
xor
cmpsl
shlb
push
pop
popf
sahf
lods
repnz
xor
fidivl
flds
push
fwait
push
rep
sbb
sbb
mov
mov
push
subl
rcr
addr16
test
scas
outsb
int3
add
jo
fs
bound
add
stos
arpl
aad
cmc
sarb
mov
sbb
mov
scas
xchg
xchg
mov
pop
loop
mov
sbb
xchg
ror
push
aad
or
test
mov
jo
dec
inc
jo
in
xor
out
jns
in
js
adc
sub
add
int3
mov
push
icebp
std
mov
sub
or
push
lods
bnd
aas
or
sahf
push
iret
mov
inc
loopne
scas
xchg
enter
bound
cltd
aaa
imul
mov
fstpt
inc
mov
dec
or
inc
dec
jno
push
fidivrs
pusha
pop
mov
pushf
push
aas
jp
push
popfw
inc
pop
loop
sahf
pop
dec
mov
jno
and
push
ret
aam
sbb
cmp
inc
addr16
and
mov
sbb
mov
and
inc
icebp
xor
call
mov
addr16
pop
pop
ljmp
sti
outsl
xor
inc
shr
dec
push
andb
sahf
jmp
xchg
int
popa
cmp
stos
cmpsl
xchg
mov
dec
divl
pop
dec
pop
repnz
xchg
cmp
std
cli
cld
sub
test
gs
dec
mov
mov
and
or
daa
fs
inc
scas
pop
lods
xchg
dec
sub
jb
cld
test
lcall
loope
mov
cmpsb
pop
aas
push
ret
mov
scas
sub
sbb
aaa
loopne
shrl
dec
fdivrp
inc
xor
out
inc
add
int
and
push
mov
pop
shrl
fcoms
push
mov
inc
test
shrl
lret
sub
pop
pop
in
int3
int3
mov
leave
das
xor
dec
xchg
xchg
aaa
sbb
mov
add
clc
cwtl
loope
sahf
sbb
ja
cmp
divb
inc
lcall
adc
add
push
push
mov
sub
inc
shrl
inc
xchg
lcall
sub
stos
xchg
loop
in
insb
mov
mov
test
int3
aas
push
sbb
and
jl
adc
movsbl
xchg
add
ret
lods
and
pop
xchg
sti
lcall
xchg
std
jmp
jg
in
jge
imul
aaa
add
or
fucomip
push
js
insb
inc
or
pop
iret
dec
not
push
xchg
sub
xchg
cmp
adcl
mov
push
adc
scas
dec
nop
dec
pop
pop
movsb
out
mov
and
sbb
mov
rorb
imul
inc
mov
jmp
jae
arpl
inc
arpl
mov
jge
mov
cwtl
rcll
sahf
lods
pop
movsb
mov
or
insb
into
xor
clc
scas
ss
ffree
cwtl
dec
xchg
stc
push
push
shll
popa
aaa
cmp
jmp
out
push
pop
push
dec
aad
cmc
ret
jae
shll
add
sbb
insb
cltd
test
sbb
dec
ja
pusha
pop
mov
mov
cmp
jmp
outsb
jnp
enter
sti
adc
xchg
cli
lahf
inc
adc
lret
add
xlat
mov
daa
dec
cmp
mov
in
les
lea
push
loopne
lahf
cld
popf
jae
ss
mov
pop
dec
out
push
pop
loop
xchg
or
mov
or
inc
inc
add
xor
or
loopne
fcmovnu
pop
mov
mov
ss
mov
sub
pop
scas
xor
and
xor
icebp
insb
stos
ljmp
lea
sub
mov
lds
int
aaa
xor
mov
push
aaa
cli
sub
push
sub
lds
fsubrs
mov
push
jb
outsl
mov
sub
xchg
xchg
lds
dec
je
push
adc
imul
cld
xor
mov
mov
aaa
dec
punpckhdq
jae
es
xchg
xor
jmp
and
sub
jmp
inc
push
mov
dec
aam
mov
sbb
xchg
cmp
repz
or
call
test
loop
lds
and
stc
stc
push
cmpsl
sub
aad
and
or
mov
stos
aam
insl
ret
dec
imul
sbb
mov
or
pop
rolb
fstps
jge
arpl
jo
pop
xchg
hlt
sub
les
dec
jmp
jae
cmpsl
std
in
inc
rorl
ljmp
xchg
jbe
imul
push
xchg
cltd
adc
lock
push
lret
mov
scas
inc
bound
lret
xor
sahf
cli
push
push
cmp
mov
add
push
jbe
add
adc
faddl
clc
jbe
ret
mov
push
or
xor
lret
xor
xorl
shr
lret
push
sbb
cmp
xchg
out
sbb
jno
test
pop
adc
pop
cmp
inc
addr16
popa
jnp
cmp
test
lret
stos
mov
shrl
fs
int3
jg
xchg
stc
popf
dec
push
test
cmpl
jl
jae
push
add
mov
push
push
mov
mov
jmp
pop
insl
addb
mov
dec
int
lcall
popl
xchg
or
mov
stos
lahf
inc
xorb
and
into
push
inc
mov
cltd
outsb
adc
stos
bound
jp
pop
push
dec
and
or
push
ljmp
xor
pop
xchg
xchg
pop
leave
pop
push
stc
add
xchg
insl
aad
cli
push
imul
push
pop
xchg
shlb
adc
mov
out
push
int
fwait
sub
lahf
sub
dec
mov
sbb
cwtl
push
cmp
and
lods
add
insb
int3
outsl
xchg
xlat
mov
inc
push
les
push
cs
jle
inc
icebp
and
mov
insb
xorb
and
xor
add
into
imul
insl
test
jg
mov
xlat
mov
mov
and
lret
and
clc
jmp
cmpsl
stc
adc
out
xchg
jmp
pop
xchg
test
hlt
xor
arpl
outsl
loopne
cmpsl
aad
lret
pop
popf
pop
sub
mov
iret
lods
imull
pushf
fwait
lea
dec
sbb
scas
push
sub
mov
shlb
stc
mov
pop
cmp
lock
lret
xor
stc
and
fisubrl
inc
movsl
shrb
push
mov
and
xchg
and
repz
movsb
xchg
sbbb
mov
xor
nop
inc
jb
sbb
lret
cmpb
loope
mov
test
and
cmp
test
mov
jp
mov
out
dec
lahf
ljmp
subb
and
and
jl
sub
xchg
jbe
or
loop
sahf
dec
jo
dec
scas
jns
mov
jnp
inc
jo,pt
mov
mov
pop
mov
pusha
dec
pop
das
sub
jne
or
test
loopne
cwtl
cmp
rcl
rorl
push
cmp
push
ds
sarb
dec
add
push
push
or
xor
movsl
mov
gs
stos
out
and
aas
in
imul
cli
cs
movsb
lds
pop
popf
es
das
ljmp
lods
adc
ja
fisubl
cmp
inc
movsl
cld
add
dec
pop
repnz
aas
inc
xchg
test
lea
aam
shlb
movhlps
lods
mov
adc
and
ljmp
dec
int
lods
xor
sbb
les
fistps
mul
das
int
xchg
fwait
scas
mov
mov
mov
dec
pop
lea
lret
jmp
dec
arpl
and
dec
in
inc
stos
sub
or
sub
repz
subl
xor
pop
sbb
es
pop
mov
and
inc
mov
test
add
mov
imul
jmp
xchg
test
or
ds
iret
bound
shrw
addr16
mov
cld
sbb
add
xor
adc
sarl
cwtl
mov
push
adc
pop
xor
jb
push
cmp
add
cld
ja
xor
stc
repnz
sbb
or
cmp
jmp
sbb
inc
fcoml
hlt
push
popf
mov
mov
leave
sub
leave
jne
sbb
int
fisubrs
pop
addl
mov
xor
scas
rcrl
dec
or
popa
push
lods
jle
jns
sbb
je
and
leave
negb
sbb
sahf
sbb
or
imul
adc
xchg
daa
sahf
in
cs
sub
lock
fwait
mov
dec
repz
sub
adc
loopne
xchg
xrelease
or
repz
cs
mov
mov
fldcw
int
notl
mov
jae
testb
cmpsb
mov
addb
lret
lcall
and
cmc
sahf
pop
inc
gs
mov
mov
shlb
mov
scas
out
jo
mov
push
lea
pop
mov
out
add
dec
scas
ja
ja
fwait
je
ret
int
inc
xchg
lcall
insb
and
loopne
jbe
adc
in
inc
xchg
dec
adc
mov
adc
popa
sbb
sub
push
rclb
and
es
push
jle
push
call
ljmp
sub
xor
addr16
sarl
inc
out
call
sahf
cmc
repz
sub
cmp
push
xchg
leave
sar
pop
cmp
xchg
and
jno
and
mov
mov
push
pop
repz
aas
push
das
pop
inc
pop
inc
lret
xorb
je
ficoml
jne
popa
in
mov
daa
xchg
popf
push
mov
iret
data16
addl
std
aaa
fs
push
jecxz
xor
mov
icebp
pop
aam
and
roll
loop
xchg
xchg
shrl
aam
stos
lea
mov
jno
add
mov
xchg
inc
pop
and
movsl
dec
iret
xchg
jg
out
gs
sahf
shr
xor
add
ja
add
sahf
ljmp
js
stc
std
insl
hlt
jl
mov
loope
mov
call
hlt
std
xor
pushf
and
or
loopne
ja
mov
loopne
xor
sub
outsb
iret
or
dec
cmp
inc
sub
pop
mov
mov
adc
and
push
sub
mov
stos
pop
imul
icebp
aam
in
cmp
add
dec
mov
add
ret
ja
mov
dec
mov
cmp
xchg
sub
pushf
ss
cli
clc
and
in
shll
or
xchg
and
adc
test
into
xchg
mov
in
clc
shll
or
sub
sub
aas
aam
mov
push
mov
mov
push
lock
lea
mov
pusha
lret
out
fnstenv
cmp
into
dec
cmp
cmp
in
inc
jge
out
fcmovnb
ret
jnp
xchg
xchg
stc
lods
test
and
lods
fs
addr16
adc
addl
cwtl
push
mov
incb
call
js
jb
mov
and
out
dec
mull
or
nop
pop
dec
jmp
ret
and
jmp
mov
mov
mov
lods
jo
aas
pop
jnp
mov
jnp
mov
jnp
dec
aaa
cmp
xor
cli
dec
dec
daa
xchg
adc
stos
stos
loopne
lcall
nop
or
rcrl
inc
mov
movsb
xchg
xchg
pop
cld
pop
xchg
cwtl
je
or
lock
mov
iret
pusha
and
popa
stos
xor
cwtl
cmpsb
out
add
push
sub
or
in
idivb
mov
sbb
daa
push
push
lcall
in
jg
pusha
jnp
sub
xchg
loopne
mov
cmp
cmc
idivb
les
xchg
shll
jne
sti
mov
roll
push
jno
pop
leave
jmp
aaa
aaa
cmp
lods
or
stos
xchg
test
mov
test
dec
or
sub
inc
add
push
pop
ficomps
push
adc
jle
popa
fdivl
mov
jg
sbb
xlat
mov
mov
and
dec
in
fdivs
sbb
mov
dec
mov
sbb
mov
out
pop
cld
or
lahf
push
dec
or
sub
addr16
insl
movsb
mov
lahf
lahf
push
pushf
lahf
addr16
pop
repnz
mov
sbb
mov
subl
add
and
push
ficomps
mov
jecxz
xorl
mov
je
or
cmp
int
shlb
js
clc
jo
sahf
aad
inc
imul
mov
movsb
fisttpll
int
hlt
mov
das
movsb
rcrb
fmul
push
pop
daa
aas
xchg
or
fnstenv
sbb
add
shlb
push
testl
jecxz
xor
lret
xor
mov
xor
mov
sub
xchg
pop
or
jp
mov
popf
jnp
dec
pop
pop
sub
mov
gs
hlt
cli
je
xchg
ficompl
int3
xchg
mov
cmp
dec
movsb
cmp
jmp
inc
xor
sbb
test
or
loop
mov
cmp
or
xchg
and
xchg
jae
sbb
imul
cmp
test
sub
testb
cmp
out
add
out
sti
stc
in
push
movsl
xchg
inc
mov
sahf
test
lret
sbb
lods
cmpsb
fnstsw
repz
xchg
push
inc
xor
push
in
gs
mov
jne
daa
ret
pop
test
and
imul
sub
push
sbb
push
xchg
mov
xchg
fsubs
pop
test
fcomi
bound
inc
push
mov
mov
adc
insb
push
jae
lds
sub
pop
in
popl
mov
loop
dec
jecxz
push
into
inc
arpl
fadds
into
xchg
mov
mov
mov
xchg
lea
inc
pop
pushf
loopne
add
xor
jnp
movsl
or
aam
loopne
lret
rclb
xchg
jnp
in
cmp
out
dec
dec
out
sub
imul
mov
mov
jmp
sbb
out
lods
push
pusha
cmp
stos
lods
lock
jle
pop
ret
or
call
lods
loope
repnz
aaa
cs
lds
test
mov
stc
add
xchg
fstps
adc
jp
out
ret
cltd
lcall
stos
push
pop
mov
push
loopne
stos
lods
roll
test
gs
jbe
jp
negl
mov
mov
mov
adc
iret
lds
xchg
pop
ret
test
repz
in
xchg
pop
sbbl
aam
popf
adc
add
jg
out
pop
adc
sbb
mov
dec
mov
cmpsl
testl
inc
cmp
loop
push
testb
jp
pop
imul
dec
into
fistpl
addr16
sbb
add
sub
ja
int3
inc
lret
adcl
mov
movsl
and
xchg
push
jg
inc
push
nop
das
or
sub
push
and
pop
loopne
scas
xor
je
dec
push
jne
mov
cld
daa
add
push
cmc
cmpl
adc
mov
or
xlat
push
cli
out
fsubrl
mov
cwtl
mov
pop
jo
pop
sub
jns
lock
xchg
mov
mov
outsb
jae
and
xor
fcomps
or
mov
cwtl
xchg
stos
mov
out
mov
out
sahf
lcall
pop
ljmp
ds
xlat
jns
pushf
mov
sub
push
cld
sbb
pop
add
in
test
aaa
lock
les
dec
mov
mov
mov
pop
repz
mov
fidivrs
push
hlt
adc
in
xor
rorb
lahf
sbb
adc
xor
test
sarb
mov
repz
dec
int3
popa
test
jo
out
aas
cmp
jle
xor
fs
and
add
sbb
mov
and
clc
in
out
dec
cli
push
xor
mov
test
pop
das
sub
in
divb
pop
sbb
imul
mov
add
push
or
icebp
mov
lea
push
inc
sbb
ja
fimuls
mov
ds
inc
sbb
jge
repnz
cmove
clc
andb
outsl
andb
mov
push
sub
cld
stos
pop
and
dec
js
jg
scas
gs
aaa
fsubl
and
pop
sbb
sbb
int
in
mov
fisubl
inc
jno,pt
or
xchg
aam
mov
lock
int3
push
gs
mov
push
std
loop
adc
pop
rolb
add
cs
es
push
mov
push
pop
xchg
xor
shlb
sbb
xor
mov
mov
push
rcrb
adc
mov
mov
movsl
test
cmpl
mov
sti
sbb
push
jl
mov
jp
inc
test
dec
lea
xor
lahf
mov
and
out
dec
ja
sbb
jne
repnz
lea
lret
dec
popf
sbb
push
sub
sbb
out
push
lret
sub
cmp
les
ds
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
and
test
out
pop
out
sbb
lret
dec
ret
in
jbe
fs
xchg
and
js
outsl
mov
stc
repnz
fcomps
or
leave
xchg
stos
lret
fisubs
mov
sahf
aam
pop
push
pusha
cmc
jo
in
sub
xchg
movsb
xchg
inc
loop
and
movsb
mov
fnsave
push
adc
sub
cltd
dec
cmp
and
cmpsb
std
test
sbb
es
pop
xchg
cld
pop
mov
enter
in
inc
sub
mov
mov
inc
enter
inc
les
loope
jno
sbb
lret
and
mov
sub
mov
mov
xlat
jns
fisubl
dec
inc
or
sub
push
mov
aas
mov
pushfw
pop
aaa
mov
test
call
pop
sar
sbb
retw
repnz
xor
xchg
push
pop
stos
mov
test
std
ss
or
mov
cmp
fwait
and
pushf
jbe
mov
cmpsb
jbe
dec
jo
mov
lret
loopne
cmp
nop
jno
jae
out
sbb
ret
lock
movsl
xlat
jns
popf
jnp
mov
xchg
dec
and
jmp
bound
add
or
add
mov
je
inc
push
mov
adc
icebp
mov
jo
xor
test
cmc
xchg
pop
sbb
xorb
xchg
fadd
sbb
mov
arpl
sahf
fidivs
fucomi
or
aaa
idivl
mov
roll
xchg
lods
and
insl
dec
mov
fs
stos
lods
test
mov
add
gs
mov
push
mov
cmp
push
aaa
sub
xorl
sti
jl
cmp
lods
dec
pop
mov
loop
mov
pop
in
fdivs
adc
loopne
test
ljmp
push
push
sub
inc
gs
inc
pop
sub
call
inc
test
ja
fiaddl
adc
sbb
and
pusha
pmullw
es
sbb
xor
leave
mov
mov
and
rcr
int3
xor
ret
js
sbb
fcmovnb
repnz
xor
stos
jbe
outsb
pop
mov
adc
jae
xchg
lret
xorl
xchg
push
pushf
inc
jg
push
sub
pop
out
sbb
add
fisubl
bound
popf
mov
cmpsb
inc
dec
mov
inc
mov
shl
fs
mov
outsb
subb
hlt
jg
sbb
fimuls
xor
mov
arpl
adc
repz
jg
scas
decb
lcall
in
add
jb
int
mov
inc
std
inc
outsl
dec
jae
sbbl
xor
cmpsb
mov
sub
mov
inc
mov
test
sub
mov
int
dec
scas
jle
rcr
xor
xchg
aaa
pushf
enter
scas
xchg
cmpsl
aam
push
dec
inc
adc
sbb
xor
and
loope
pop
mov
scas
ror
mov
jle
out
sbb
mov
pop
pop
dec
hlt
addr16
jns
dec
es
dec
pusha
xchg
mov
rorb
or
mull
lods
icebp
ss
fnstenv
sub
cs
call
mov
movsb
push
or
xlat
sub
inc
cmp
ja
stos
rorl
daa
and
adc
sahf
js
mov
cli
adc
mov
sti
iret
or
test
cmp
popa
cli
mov
mov
xor
mov
jmp
out
bsf
push
cmp
dec
adcb
mov
pushf
mov
cmp
aad
cwtl
mov
jecxz
lret
icebp
xchg
xchg
lods
mov
int
xchg
xor
leave
and
rcrb
xor
mov
lds
rep
inc
cwtl
push
push
popf
jg
xchg
inc
popf
lods
or
mov
cmp
subb
xor
or
xchg
jmp
xorb
push
pop
sarb
aad
stc
inc
or
cmc
popa
xor
orb
dec
or
pushf
xor
mov
xchg
mov
push
xor
shlb
sbb
fbld
pusha
inc
imul
mov
pop
out
cwtl
mov
icebp
push
dec
add
mov
and
adc
mov
in
or
sahf
xor
fistpll
popa
cmp
test
les
aam
jb
add
push
and
dec
sbb
jle
shlb
mov
outsb
adc
xor
out
popf
cmp
or
rolb
shll
xchg
sub
std
subl
std
jae
add
stc
insl
mov
xor
xchg
xlat
push
gs
imul
jmp
daa
inc
mov
int3
inc
push
xchg
sbb
and
push
dec
mov
fisubl
mov
mov
aas
xchg
inc
sub
jnp
dec
xchg
jno
mov
in
imul
dec
or
int
loope
dec
gs
sub
notl
cwtl
jmp
jmp
movsl
repnz
out
jl
pop
mov
add
pop
inc
rcrb
aam
xchg
lret
loop
jecxz
adc
sub
dec
loope
push
popf
movsb
mov
jo
mov
sub
inc
pop
xor
push
dec
pushf
fisttpl
adc
test
and
rcrb
adc
jmp
push
dec
jl
fdivs
test
outsb
stc
xor
daa
xor
adc
aaa
je
shll
in
add
cmp
xchg
add
fs
adc
cmpsl
inc
xchg
cltd
jecxz
lods
aam
mov
inc
icebp
bound
xchg
xchg
xchg
dec
mov
or
push
sbb
mov
fistl
xor
add
mov
mov
xor
adc
scas
add
pop
mov
int3
lock
cmp
loope
les
jecxz
xchg
test
pop
push
imul
out
cld
movsb
pop
test
rclb
lcall
jno
xchg
mov
leave
pop
in
int3
mov
ja
add
out
inc
frstor
or
int
lret
aas
movsl
in
sub
xchg
jg
xchg
sti
dec
into
mov
jecxz
sahf
rorb
int
jb
fs
jnp
aad
pop
aad
jnp
lock
lds
imul
scas
dec
push
jmp
inc
push
xchg
push
fwait
pop
scas
jmp
add
mov
mov
test
jns
das
or
or
cwtl
icebp
jae
sbb
jbe
fwait
push
out
insb
call
ss
or
call
xlat
dec
jns
rorb
or
mov
roll
out
cmp
andl
lret
mov
test
idivl
stc
addb
xchg
add
jp
sub
dec
push
outsb
dec
shrl
loop
js
and
mov
mov
mov
adc
aad
mov
sti
or
jmp
fdivrl
pop
dec
shrl
int3
mov
mov
movsb
push
popa
inc
cmp
jbe
cmpsl
mov
ljmp
cltd
inc
add
mov
insl
adcb
pop
or
arpl
rorl
inc
adc
movsl
dec
out
hlt
adc
sbb
testb
xchg
inc
mov
and
scas
movsl
push
test
jl
fwait
and
inc
mov
mov
bound
push
les
popa
dec
test
mov
pop
dec
sub
in
rol
dec
pop
imul
call
mov
push
jp
stc
add
addr16
data16
inc
das
nop
shll
stos
pop
push
mov
cmp
hlt
pushf
js
and
push
or
insb
jp
in
rep
fidivl
xor
incl
addb
jae
cmp
sbbb
je
xchg
insl
or
adc
mov
outsl
mov
pop
sub
push
pop
adc
mov
test
aam
int3
jno
cwtl
dec
js
sub
and
cmpsb
push
sarl
into
ret
popf
je
sar
lret
adc
mov
inc
cltd
mov
pop
ss
mov
sub
adc
divb
and
add
adc
xlat
adc
push
xchg
xchg
loopne
pop
movsl
inc
dec
lcall
dec
mov
or
out
mov
shlb
adcb
icebp
repz
sbb
push
in
shl
adc
in
mov
xor
das
fcos
xchg
add
stc
loope
pop
pop
push
sub
popa
or
sar
xchg
lods
into
std
test
jmp
cmpsb
sarb
sti
repnz
shll
faddl
mov
test
mov
inc
cltd
lock
inc
dec
xchg
jnp
jle
jb
call
aaa
lods
movb
jb
stos
cmp
xor
xchg
cli
jo
pop
mov
loope
push
dec
lret
imul
rol
enter
xchg
repnz
scas
out
and
and
ja
stos
push
es
cli
fbstp
in
aas
mov
popf
mov
mov
repz
out
loop
imul
in
dec
xchg
fcmovbe
jl
sbb
and
and
dec
jns
dec
mov
adc
push
icebp
or
inc
and
mov
in
sub
dec
dec
xchg
ljmp
push
xchg
test
int3
cld
and
rcll
jmp
lret
scas
sub
sub
mov
shrb
fld
sub
xlat
sbb
call
mov
cmp
iret
add
push
mov
sub
adc
roll
addr16
pop
lahf
cmp
enter
mov
idiv
sub
jbe
cmpsb
sbb
sbb
es
imul
movsb
mov
popl
pop
jno
ret
dec
mov
outsb
inc
xchg
inc
xor
loop
or
and
push
cmp
add
push
pushf
iret
ret
or
cmc
in
scas
xchg
mov
adc
mov
scas
xor
mov
pop
fistps
sbb
cmpsb
add
shl
sub
mov
imul
mov
adc
jl
filds
pop
pop
push
sar
inc
or
hlt
sahf
mov
fists
or
es
mov
nop
xor
inc
pop
sub
test
or
int3
xor
mov
fcoms
cmp
insb
loopne
sbb
jns
mov
sub
xchg
pop
fdivrs
jecxz
outsl
cmp
jo
dec
loope
xor
pop
rolb
sbb
mov
out
movsb
popf
push
mov
mov
jae
outsl
cmpsl
dec
out
add
add
pop
pop
xchg
jmp
jle
test
scas
add
test
or
inc
pop
data16
fsubl
subl
inc
inc
lods
shll
ja
inc
movsb
jb
fxch
push
aad
cs
in
imul
sub
je
or
cmp
scas
bound
push
mov
sahf
notb
cli
mov
subl
lret
scas
jl
in
push
jmp
in
inc
fldenv
repz
jmp
aaa
add
lcall
xor
hlt
cwtl
mov
push
pop
fidivrs
sub
mov
cltd
cmp
stos
ss
pop
cmpsb
jbe
jle
je
sbb
arpl
mov
inc
rol
out
inc
mov
sub
incb
add
into
loope
mov
and
inc
andl
xor
push
jecxz
or
jle
ret
lcall
repnz
cmp
test
das
bound
rcrb
stos
fildl
sub
push
lock
pop
inc
mov
xchg
in
pusha
cli
test
daa
sbb
fdivl
sbb
jge
push
mov
or
xchg
mov
sbb
mov
cmp
inc
call
je
repz
lea
inc
cmp
insb
out
lcall
dec
shlb
idivb
inc
pusha
fstpt
int3
out
mov
xlat
pop
ret
cwtl
and
mov
stos
mov
push
repz
mov
pop
int3
cmp
mov
xor
mov
mov
mov
jno
lea
sub
lret
xor
aaa
popa
cmp
in
mov
dec
sbb
dec
sub
xor
adc
aam
lahf
sbb
sbb
cmp
pop
popf
fcmovne
xor
jmp
fs
aam
decl
xor
pop
jno
xchg
push
mov
addr16
pop
jo
adc
jg
daa
or
notl
shl
xchg
push
test
pop
aas
aam
out
mov
adc
xchg
int
cli
cmc
push
hlt
test
or
imul
idivl
sub
add
push
into
mov
xor
and
sbb
xor
sub
sub
mov
or
mov
pop
cmp
push
aam
add
sbbb
push
inc
push
inc
cmpb
enter
sub
push
ljmp
or
lcall
pushf
xchg
inc
cmp
push
ds
push
fisubrl
rorl
xor
or
movsl
mov
shlb
leave
jecxz
cmp
movsl
xor
fcmovnu
push
dec
mov
call
jns
jnp
mov
xchg
adc
dec
mov
xchg
rcr
fiaddl
pop
mov
fisttpll
cld
jbe
xor
adc
aad
cs
daa
and
pop
repnz
cmpl
incb
adc
loop
std
inc
pop
add
mov
out
cs
pop
pop
pop
enter
mov
sarb
fisubs
mov
js
ds
sbb
addl
int
mov
insb
xor
data16
popa
outsl
push
mov
adc
lock
inc
int
mulb
in
pushf
movsl
mov
iret
and
push
push
jle
ret
lret
mov
out
lcall
dec
pop
pop
fcompl
jns
stos
cmpsl
enter
fisttpl
adc
mov
inc
cmc
gs
jg
out
in
scas
popf
jae
iret
jno
pop
mov
mov
rcrl
fmul
xor
lahf
imul
lods
jns
stos
jne
daa
jno
or
scas
lock
pop
pop
sbb
or
lret
popa
mov
out
cmp
sub
mov
stos
inc
pop
in
or
pusha
mov
jo
out
fnstenv
mov
iret
sbb
fstl
xor
xlat
mov
pop
mov
xchg
pop
ret
xchg
pop
mov
lea
inc
gs
adc
or
sbb
pop
rol
or
test
jl
ret
ds
lahf
add
call
mov
shr
imull
cmp
cmp
or
push
rolb
into
into
inc
cltd
addb
adc
arpl
mulb
das
sbbb
push
clc
lret
rorb
jge
push
or
cwtl
mov
stos
cmp
adc
mov
jbe
add
pop
or
fisubrs
cmp
repz
dec
fidivl
cmp
xor
aaa
js
dec
pop
dec
pop
fs
call
lock
aas
inc
jp
pop
mov
enter
insl
xchg
jp
inc
dec
shl
gs
and
push
fbld
xchg
jo
inc
gs
mov
nop
loope
insl
sbb
outsb
insb
inc
push
es
orl
sub
lods
push
lret
xlat
lods
jp
js
inc
lea
sbb
jg
mov
xor
inc
mov
push
pop
push
lea
xchg
xor
pop
jecxz
or
inc
and
cmpsl
imul
out
fistpll
add
bound
xchg
shlb
sub
push
sti
or
push
xor
ljmp
outsl
mov
xchg
stc
or
lods
dec
test
stos
out
push
test
xchg
add
and
push
jl
pop
jle
and
fisttps
push
xchg
cld
mov
cli
mov
aas
sbb
enter
enter
rorl
repz
cmp
scas
lcall
pop
lods
push
mov
mov
adc
fnsave
pop
insl
jmp
popf
das
pop
leave
test
shl
das
les
aas
aas
dec
ss
pop
daa
lds
fcmovu
sahf
xchg
adc
add
mov
or
sub
xor
mov
test
and
sub
cmpsb
fisttpl
imul
mov
xchg
sarb
rcrl
mov
fldt
fcmove
xor
push
repnz
int
fdiv
in
js
fbld
lods
add
dec
pop
or
ja
loop
stos
mov
lock
cmp
les
xlat
push
mov
arpl
test
push
in
mov
adc
pop
lcall
jne
faddl
push
loopne
stos
in
and
mov
adc
rorb
push
incl
popf
lock
mov
aad
bound
add
add
xor
xchg
ss
pop
rorl
and
ret
movlps
loope
sti
sub
leave
xor
dec
adc
test
or
je
push
inc
mov
loop
xchg
sbb
inc
xchg
jmp
out
jb
outsb
xchg
cmp
xchg
shr
mov
insb
lret
xor
dec
pop
daa
in
sub
and
lea
sti
add
jbe
out
jnp
cmp
addr16
loopne
movsl
aad
jp
mov
mov
lock
ljmp
stos
jle
xchg
jns
mov
insb
and
outsb
inc
cmpl
cmpsb
xchg
ret
bound
xchg
sbbb
push
notb
jns
sahf
cmpsl
jne
stos
int3
inc
xor
jp
dec
dec
sbb
arpl
mov
mov
xor
add
pop
pop
fstl
sbb
mov
add
or
dec
arpl
sti
cmp
xchg
sbb
movsb
arpl
cmp
inc
pop
scas
les
dec
cld
repnz
jae
dec
xchg
mov
clc
jns
add
jo
dec
or
cmp
jecxz
or
or
jne
push
xchg
lret
inc
out
or
xor
or
jle
in
inc
add
fldlg2
lret
push
sub
out
jmp
lea
sti
ja
rcl
stc
inc
repnz
scas
data16
fmulp
jno
mull
repnz
iret
das
fs
aas
lock
pop
jno
sub
outsl
rcrb
push
inc
das
inc
push
stc
mov
shrl
out
dec
les
movsb
inc
xchg
add
bound
nop
test
jb,pt
or
jge
test
addr16
adc
cmp
xchg
pop
fdivs
and
adcb
stc
leave
fxch
mov
pop
pusha
adc
mov
dec
test
xlat
jl
cmpsl
out
bound
in
dec
add
and
jae
outsl
ja
pop
das
cmp
mov
push
test
mov
lods
cmp
adc
pop
imul
scas
jmp
dec
das
fistl
sbb
ds
ror
add
out
scas
or
sub
rolb
jecxz
inc
aad
sub
xchg
divl
sbb
lock
filds
popa
stos
mov
xchg
xchg
nop
mov
stos
out
mov
leave
scas
cmp
and
out
imul
mov
pop
mov
mov
mov
std
aaa
cli
stos
adc
add
nop
push
cwtl
mov
stos
test
loopne
cmp
mov
shrb
jle
xor
sub
test
pop
movsl
pop
dec
and
xchg
test
scas
lret
sub
push
mov
sub
pop
int3
and
aam
adc
jge
mov
out
xor
mov
shlb
lahf
jmp
inc
xchg
pop
mov
xchg
xchg
les
mov
jno
stos
imul
clc
push
icebp
push
or
jo
cmpsb
push
push
stos
pop
xchg
jmp
or
mulps
inc
andb
test
es
nop
hlt
or
add
shlb
inc
and
cmp
dec
movsl
inc
sbb
idivb
stos
je
lret
incb
sub
pop
mov
pop
wbinvd
and
or
aas
cmp
add
sbb
int3
andl
movsb
scas
cmpsb
je
lcall
push
cmp
sbb
add
sbb
jle
orl
stos
inc
add
cmp
movsb
pop
cs
dec
jp
sti
ja
or
aam
stos
shll
lahf
push
lods
pushf
shlb
push
in
push
popa
add
jb
pop
pop
pusha
aaa
enter
mov
icebp
mov
data16
inc
movsb
loop
loope
popa
dec
cwtl
shrl
inc
cmp
pop
dec
mov
cld
push
lea
mov
xor
xchg
or
rcrb
adc
bound
loope
dec
fwait
cmpl
or
jl
into
jp
add
add
or
addr16
xchg
xchg
push
in
and
mov
push
addr16
push
cmp
jmp
or
cmp
adc
jno
ja
push
orb
mov
xor
js
cltd
out
cmp
jge
cmc
and
stos
mov
aaa
mov
xor
test
lods
movhps
lcall
sub
out
orl
lock
push
xchg
out
add
out
mov
jno
in
sbb
mov
dec
out
push
jecxz
gs
mov
dec
ds
sbb
imul
std
je
add
lret
addr16
jnp
add
outsl
push
sahf
or
push
filds
sbb
mov
mov
cwtl
insb
push
push
ljmp
test
xor
leave
push
jl
sub
xlat
dec
sub
push
add
iret
daa
or
sub
insb
fxch
repz
mov
push
out
adc
popf
mov
aad
pop
pop
daa
push
dec
lock
mov
test
pop
mov
stos
shlb
ret
hlt
mov
pop
out
pop
in
jg
out
inc
cmp
mov
inc
imul
shrb
ss
neg
mov
popa
and
insl
and
shlb
or
inc
fadd
xchg
addr16
sti
inc
sub
cwtl
or
subb
inc
shlb
mov
inc
lods
jmp
and
inc
inc
stos
xchg
jae
fs
dec
lea
pop
test
lds
pop
test
nop
xchg
sbb
mov
jmp
push
out
imul
push
lea
sbb
mov
add
das
pop
test
pop
jnp
js
mov
xchg
inc
jl
stc
or
mov
out
mov
test
jo
pusha
call
daa
pop
sbb
mov
jg
arpl
push
inc
cmp
lahf
and
push
aad
dec
outsl
mov
or
vmovlps
rolb
fildl
leave
mov
push
sub
adc
mov
lods
pop
and
mov
dec
imul
xchg
mov
or
rcrl
cli
in
mov
cli
outsb
fdivs
inc
es
dec
iret
rcrb
mov
add
dec
mov
fcmovne
out
jmp
adcl
mov
icebp
jp
sbb
addb
or
jae
pop
xchg
or
flds
lods
loope
mov
jmp
loop
arpl
aam
imul
pop
aam
outsb
and
test
inc
inc
mov
loopne
jns
mov
add
mov
inc
xor
adc
sbb
sbb
mov
xchg
push
sbb
mov
pop
cli
pop
iret
jmp
rclb
enter
sbb
xor
xlat
push
mov
push
sbb
shll
sub
stc
push
and
leave
fwait
cmpsb
or
movsl
jle
popa
mov
pushf
or
iret
inc
mov
and
fwait
sbbl
xor
mov
movsb
aas
jbe
shlb
push
mov
xchg
sbb
mov
dec
orl
stc
aam
lea
decb
mov
sbb
and
loopne
mov
pop
mov
cmpsl
pop
in
jle
aaa
jae
jmp
pop
push
sbb
inc
sbb
xor
int3
lods
inc
mov
fs
sub
xor
xchg
imul
in
lret
aas
pop
loop
lea
loop
pusha
sbb
sbb
push
pop
test
push
idivb
mov
mov
push
dec
pop
movb
cli
insb
out
xchg
loope
pop
andb
pop
shl
jne
xchg
sahf
xchg
pop
ret
adc
mov
add
push
imul
dec
xor
test
and
aas
mov
sbb
pushf
push
mov
pop
data16
jns
mov
add
add
add
add
inc
xchg
pusha
add
jp
popa
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
xchg
mov
add
mov
