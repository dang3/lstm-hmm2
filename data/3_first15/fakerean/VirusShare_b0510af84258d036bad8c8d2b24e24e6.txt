xchg
ja
mov
out
mov
jmp
ja
and
ja
imul
ja
mov
in
mov
jmp
ja
and
ja
insl
in
jl
jmp
dec
mov
ja
pop
jmp
xor
out
adc
out
mov
out
dec
stc
in
imul
ja
popa
cmp
mov
pop
xor
ja
scas
cmp
adc
ja
cmp
ja
movsl
cmp
imul
push
cmp
cmp
fstpt
ja
cmp
ja
add
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jns
je
insl
push
imul
imul
jns
add
add
imul
jo
imul
gs
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
add
imul
gs
arpl
add
add
outsb
inc
jbe
outsb
je
add
add
jb
data16
gs
imul
inc
add
add
je
push
push
gs
arpl
inc
outsb
je
jns
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
popa
jae
inc
jb
outsl
jb
add
insb
jae
jb
insl
jo
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
add
outsb
fs
imul
jne
gs
outsl
jne
je
outsl
imul
inc
insb
jne
push
dec
inc
imul
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
add
popa
fs
outsl
outsb
jae
insb
gs
outsb
jo
je
add
add
je
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
inc
outsb
jne
push
jns
je
insl
dec
popa
outsb
addr16
addr16
jb
jne
jae
add
add
outsl
arpl
jae
fs
outsl
push
gs
imul
add
jb
popa
je
gs
popa
addr16
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
insl
outsl
jbe
inc
imul
jns
add
add
arpl
outsb
arpl
insl
gs
imul
outsb
jne
inc
imul
outsl
outsb
imul
inc
jb
popa
je
inc
imul
imul
jb
insl
inc
add
add
je
jb
insl
popa
outsb
push
imul
add
jne
inc
push
imul
add
push
outsl
jae
push
push
dec
gs
popa
addr16
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
popa
outsb
addr16
imul
gs
imul
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
add
je
arpl
insb
insb
push
popa
outsb
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
add
inc
gs
jne
jae
jb
outsl
jae
add
dec
jae
imul
imul
add
je
insb
imul
push
imul
add
je
imul
popa
arpl
outsb
je
add
inc
popa
insb
insb
dec
jae
inc
imul
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
les
add
adc
add
adc
add
add
sbb
add
sub
add
cmp
add
dec
adc
add
add
adcb
add
adc
add
add
jmp
add
add
add
adc
add
sub
add
inc
adc
add
add
outsl
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
adc
add
add
adc
add
adc
add
jno
inc
dec
inc
and
lea
movswl
dec
jne
dec
mov
inc
sub
pop
dec
or
pop
lea
mov
pop
inc
dec
add
inc
or
lea
mov
add
inc
dec
inc
add
ret
push
add
lea
mov
add
inc
sub
inc
xor
push
push
push
push
lea
mov
sub
push
dec
add
dec
and
lea
imul
sub
dec
dec
mov
add
push
add
lea
xor
imul
add
push
inc
inc
push
inc
xor
pushl
lea
call
movswl
add
inc
dec
inc
dec
add
lea
mov
pop
ret
imul
inc
dec
dec
inc
mov
xor
lea
cmp
jb
mov
dec
add
xor
inc
dec
xor
add
lea
pop
movzwl
add
test
jbe
dec
inc
dec
sub
lea
mov
dec
dec
dec
dec
sub
lea
sub
dec
inc
inc
inc
add
lea
mov
inc
dec
dec
and
dec
or
mov
lea
movsbl
movzbl
dec
inc
add
dec
add
and
xor
lea
mov
movsbl
dec
mov
dec
inc
mov
inc
or
mov
lea
mov
dec
dec
dec
dec
dec
jne
add
mov
lea
dec
dec
dec
inc
add
lea
mov
sub
mov
inc
dec
add
and
lea
movzwl
dec
dec
mov
dec
sub
test
jbe
add
lea
mov
dec
add
inc
inc
add
lea
mov
inc
dec
add
add
xor
inc
lea
mov
inc
inc
dec
dec
and
sub
lea
mov
movzbl
add
movzbl
dec
inc
add
dec
or
and
lea
mov
mov
inc
inc
movzbl
dec
add
mov
add
lea
mov
mov
inc
movzbl
inc
inc
add
dec
and
and
lea
imul
movzbl
inc
inc
xor
dec
dec
inc
or
jmp
pop
ret
push
dec
dec
sub
dec
sub
lea
mov
dec
sub
add
dec
add
xor
lea
mov
sub
dec
inc
push
dec
call
xor
lea
mov
dec
sub
inc
dec
and
lea
push
mov
inc
push
add
inc
push
dec
call
or
add
lea
mov
dec
dec
cmp
je
inc
int3
inc
xor
lea
mov
inc
add
inc
inc
add
lea
mov
inc
add
inc
dec
xor
lea
imul
add
inc
inc
sub
or
lea
pop
mov
ret
push
dec
push
inc
dec
push
inc
push
sub
push
lea
imul
push
add
dec
dec
dec
and
call
lea
push
mov
add
sub
mov
inc
mov
inc
xor
mov
lea
mov
test
je
inc
dec
inc
add
and
lea
movsbl
inc
inc
mov
dec
add
sub
lea
mov
dec
dec
inc
repnz
dec
xor
add
lea
jmp
mov
inc
inc
sub
inc
xor
jmp
lea
imul
inc
add
dec
inc
pop
pop
ret
push
and
push
lea
call
mov
add
dec
add
dec
or
lea
imul
dec
add
pop
ret
sub
add
mov
inc
add
mov
lea
mov
mov
inc
dec
mov
inc
inc
xor
add
lea
mov
mov
inc
inc
inc
dec
dec
and
lea
movsbl
cmp
jb
sub
push
inc
dec
push
sub
or
push
lea
mov
mov
dec
inc
xor
add
inc
xor
add
lea
xor
mov
inc
push
sub
dec
xor
add
xor
mov
lea
mov
dec
dec
movzbl
sub
dec
and
lea
add
inc
add
sub
inc
movzbl
inc
add
lea
inc
sub
dec
dec
inc
or
lea
mov
mov
dec
inc
inc
inc
sub
cmp
jb
lea
xor
imul
dec
mov
add
inc
mov
inc
xor
inc
lea
jmp
push
mov
mov
inc
call
dec
inc
inc
or
lea
mov
call
call
call
call
call
add
push
dec
sub
inc
and
lea
call
mov
inc
dec
add
inc
or
lea
mov
call
dec
inc
call
inc
add
sub
lea
mov
sub
inc
inc
dec
pop
xor
lea
mov
add
dec
pop
sub
inc
pop
dec
or
lea
mov
pop
inc
inc
add
dec
or
lea
movzwl
inc
pop
dec
sub
pop
inc
sub
mov
lea
mov
call
inc
add
dec
inc
ret
or
lea
push
mov
add
push
sub
inc
push
dec
sub
push
lea
mov
push
dec
inc
mov
add
inc
push
or
ret
push
lea
movzwl
sub
push
inc
sub
push
dec
xor
push
lea
mov
inc
call
add
inc
inc
or
lea
inc
add
dec
dec
or
lea
mov
sub
dec
dec
inc
sub
lea
movswl
jmp
divps
gs
sub
test
xchg
stos
nop
popf
jle
push
rclb
decb
add
and
xor
add
xchg
and
stos
mov
dec
or
adcb
lock
std
mov
cs
xchg
ljmp
aas
mov
mov
clc
push
push
icebp
mov
loopne
imul
add
outsb
mov
in
push
bnd
sbbl
stc
fcmovnbe
xchg
mov
and
mov
sahf
adc
fcoml
test
mov
cmp
xor
pop
push
test
insl
movl
rorb
stc
push
das
imul
adc
cld
cmc
cmp
jae
fistps
rclb
fiaddl
or
pop
sub
xor
icebp
icebp
enter
pop
stc
out
or
jbe
jl
scas
js
fucom
sub
pop
and
ds
movsb
pop
jo
out
jo
popa
mov
push
leave
mov
adc
xchg
dec
jne
jge
cmp
xor
cmp
adc
sbb
insb
jae
lds
jns
and
pop
jbe
sbbb
pushf
or
cmpl
pop
fwait
mov
loop
int3
or
push
jmp
mov
out
dec
mul
mov
aad
pop
push
cmp
dec
mov
adc
lods
push
xor
mov
and
loopne
roll
ret
sbb
sub
cmp
aam
das
pushf
aaa
adc
adc
and
movsl
hlt
push
adc
dec
dec
iret
push
aad
cs
dec
sbb
xchg
dec
mov
insl
dec
mov
frstor
daa
jl
jg
js
push
and
push
mov
pushf
lret
xor
inc
in
jno
mov
decb
or
das
scas
stos
dec
fwait
xchg
iret
sbb
repz
jb
jle
push
lods
cmpsb
jo
js
fistl
scas
inc
jp
dec
roll
xchg
pop
and
xchg
mov
es
or
push
sbb
leave
and
jl
sub
gs
or
cmp
mov
xor
call
push
pop
inc
xchg
dec
pop
ja
clc
imul
cmc
fadd
lret
pop
stos
das
lahf
xorl
push
pop
aam
push
cli
jmp
mov
shr
mov
jg
jbe
and
sub
loopne
dec
inc
jmp
adc
or
das
aas
icebp
push
inc
mov
jns
out
imul
add
fwait
test
fisttpll
jmp
jne
inc
push
ret
jl
pop
lret
test
lock
ss
dec
shl
sub
fxch
dec
std
ret
jmp
xchg
lcall
add
pop
mov
dec
jo
sub
dec
inc
cmp
lcall
pop
popf
bound
pop
xchg
mov
clc
popf
push
lods
push
or
daa
seto
pop
jle
insl
lea
mov
repz
push
in
out
adc
and
faddp
fistps
mov
das
or
adc
flds
lret
pusha
outsl
push
push
lret
test
mov
fcoml
fidivs
popa
daa
icebp
lret
leave
les
mov
mov
inc
nop
mov
sti
imul
aad
fidivrl
arpl
inc
add
leave
cmp
cmpsl
jp
or
mov
and
cld
add
xchg
fiaddl
out
dec
jg
inc
mov
fcmovnbe
repnz
push
lcall
push
imul
cmp
xchg
test
pop
leave
test
cmpsl
xchg
out
aas
mov
das
xor
jo
jnp
mov
icebp
cmpsl
add
adc
ret
scas
into
mov
or
jbe
int
aaa
ret
cmpb
adc
mov
loop
pushf
bound
and
or
and
push
inc
jae
mov
add
mov
cmp
loope
cmc
add
add
out
sub
or
add
into
mov
pop
cltd
push
dec
dec
movsb
mov
pop
sbb
in
jg
sahf
push
inc
int3
mov
jns
lahf
mov
loopne
movsb
ss
and
jo
adc
add
lcall
rorb
lret
adc
sar
xor
iret
test
xor
xor
adc
xchg
pop
cmp
inc
jp
xchg
in
shrb
fimuls
int
aaa
push
adcb
test
sub
pop
and
fyl2xp1
mov
imul
jae
daa
jno
pop
fdiv
loope
adc
jp
mov
or
xchg
rcrb
movsl
mov
repz
daa
popa
mov
push
aad
mov
out
insb
ds
test
js
xor
jno
mov
pushf
lods
fbstp
in
cmp
push
jbe
jmp
xchg
cmpsl
test
push
outsl
into
pop
pop
sub
inc
fs
imul
push
movsl
adc
sub
ja
cmp
fimuls
insb
std
push
xchg
addr16
xor
insb
xchg
loopne
testb
movsl
sub
std
mov
push
push
orl
jae
aaa
sub
add
add
xchg
aad
fcmovnu
jmp
arpl
xor
cmp
dec
movsl
cmc
push
gs
out
shll
rcrl
cld
imul
lods
mov
push
mov
clc
in
movl
rorl
cmp
pop
pusha
push
jne
cmp
lods
ret
dec
pop
push
pushf
pop
in
xchg
mull
dec
adc
cmc
adc
add
lock
mov
rcll
pop
jmp
pop
xor
mov
addr16
inc
orl
jge
inc
xorl
adc
add
out
addr16
mov
mov
and
insb
in
add
cld
inc
fists
inc
in
lcall
sub
jl
xor
push
sub
mov
cmp
cld
stc
mov
jmp
aaa
mov
or
addr16
xchg
sbb
dec
add
mov
push
bound
inc
adc
addb
fmul
mov
and
in
mov
pop
mov
jnp
stos
aas
repnz
js
out
sbb
jnp
stos
jle
inc
aam
sub
fisubl
sbb
sbb
mov
fstp
and
subl
lcall
outsb
push
mov
popa
mov
mov
mov
imul
push
push
add
nop
sbb
xchg
loop
mov
add
dec
cmc
hlt
rclb
loop
mov
xchg
sahf
movsb
cmp
mov
sub
inc
pop
into
outsb
test
cwtl
cmp
sub
sub
lahf
sub
push
xor
sbb
jns
fcmovnbe
xchg
filds
xchg
int3
loopne
insb
push
in
mov
decl
xchg
insl
xchg
jno
shl
xchg
ss
mov
push
gs
je
insb
xchg
fistpl
cmc
fs
mov
inc
and
hlt
adc
or
mov
pushf
add
mov
adc
mov
inc
icebp
cmpsl
xchg
xchg
jmp
xor
loop
movsb
add
mov
adc
inc
idivl
sbb
ljmp
repnz
hlt
jg
mov
mov
dec
push
cmp
mov
cmpsb
inc
fstpl
in
ds
push
mov
sub
pop
adc
fwait
push
inc
and
cmp
aad
dec
xor
push
inc
mov
pop
jp
sub
pop
jge
push
pop
insb
fsubrl
outsl
adc
data16
cs
jo
mov
shll
pop
dec
lea
mov
inc
into
sahf
mov
mov
outsb
incb
push
insb
cli
jmp
mov
jp
sub
insb
fnstsw
stos
cmp
sbb
frstor
xor
push
fs
adc
or
ror
xor
sbb
lock
icebp
les
arpl
cmp
or
out
lock
mov
jnp
cmp
stos
xchg
and
je
daa
je
and
jmp
lahf
cmc
mov
out
inc
cmp
cmp
jmp
jno
adc
lods
les
out
mov
dec
push
inc
and
xchg
pusha
ret
add
ljmp
sbb
add
pop
inc
mov
sbb
sahf
inc
inc
push
ret
cld
mov
pushf
sahf
push
push
clc
and
sbb
push
add
pop
lahf
daa
xchg
js
std
clc
lock
cmp
ja
jmp
mov
jo
sbb
ret
mov
inc
rorb
mov
or
loope
pop
push
setnp
add
mov
jmp
pusha
push
test
call
xchg
int3
data16
adc
inc
and
push
dec
mov
xor
mov
pop
sub
insl
mov
enter
push
aad
pop
xchg
imul
push
lcall
mov
lea
addl
mov
fs
push
call
dec
xor
mov
xchg
test
popa
stc
ret
mov
or
jle
stos
sahf
push
dec
dec
mov
xchg
insl
sbb
mov
popf
lea
aas
xor
or
jl
test
adc
test
arpl
push
test
dec
xchg
dec
out
insl
or
add
sti
dec
mov
mov
cmp
pusha
ret
mov
clc
mov
in
cmp
add
adc
add
pop
xor
mov
aam
adc
jnp
pop
out
mov
shrl
fwait
pushl
cmp
push
mov
dec
inc
stos
andl
rcrl
dec
push
cs
pop
insb
inc
jo
or
repz
or
iret
mov
aad
inc
out
jo
rcrl
repz
adc
pop
std
jle
lahf
mov
das
and
fisubs
adc
lahf
andl
push
mov
insl
inc
pop
inc
cmc
inc
mov
sbb
out
pop
add
mov
push
loope
int3
mov
shl
insl
icebp
xor
xchg
xchg
sbb
incb
xlat
mov
in
mov
stos
movl
and
lods
xorb
jg
mov
ficoms
jecxz
or
outsl
xchg
inc
mov
fstpl
movsb
mov
movsl
mov
aas
cwtl
ret
sti
sbb
insb
fimull
cmp
leave
fildll
int
dec
adc
xchg
loope
or
mov
lret
xlat
ljmp
and
ret
daa
aaa
rorl
dec
jecxz
sar
push
jl
mov
out
push
jnp
xor
fsts
push
xor
outsb
movsl
fsts
cmc
neg
inc
mov
push
loop
scas
sbb
xchg
sbb
out
loope
pop
stos
fiaddl
negb
sahf
pop
jns
movsb
movsl
mov
getsec
daa
mov
psubusw
inc
mov
and
dec
mov
pop
lcall
lahf
jb
gs
mov
out
mov
xor
call
shlb
or
mov
push
ret
addr16
fpatan
fwait
jge
fldl
sbb
jecxz
test
cmp
adc
outsb
imul
lea
push
xor
jbe
out
fsubrl
imul
cli
push
shrl
ret
cmp
ds
addb
jle
std
mov
clc
clc
call
scas
jnp
pop
push
into
cmp
daa
or
outsl
lcall
dec
cmp
out
rorb
inc
mov
popa
and
push
les
mov
or
lock
out
shlb
cmp
vcvtdq2ps
mov
fsin
inc
mov
ja
movsb
sti
push
dec
push
sub
or
sbb
mov
fstps
mov
mov
and
das
or
in
push
mov
scas
cmp
nop
push
into
mov
out
add
movsl
test
cld
ja
jo
in
mov
outsb
xor
pop
jmp
lods
dec
adc
test
sarl
leave
and
mov
push
fistpl
movsb
int3
mov
jno
in
roll
adc
fdiv
mul
push
lcall
in
push
push
adc
mov
popa
push
cmc
mov
ret
test
pop
leave
std
jmp
mov
aaa
inc
sahf
out
mov
mov
daa
cmc
mov
and
rolb
ret
and
fwait
ljmp
enter
xor
mov
mov
lods
lds
mov
and
sub
mov
and
out
ljmp
cmp
ja
xorl
in
mov
push
xor
jmp
jmp
sub
adcb
cmpsl
jle
xchg
and
xor
push
pop
sub
xchg
adc
jno
mov
mov
or
or
add
fimull
rclb
push
add
out
xchg
outsl
mov
movsl
jge
scas
loop
in
jle
inc
das
lcall
sub
adc
adc
inc
cmc
enter
test
add
call
test
or
cli
stos
aas
in
mov
loop
pop
jno
in
mov
loope
fadd
aad
mov
movsb
xchg
divl
ret
mov
xor
adc
fisubs
aad
sbb
and
mov
pop
or
js
mov
orl
cmp
lea
in
sub
ret
fldl2t
nop
pop
fcoms
sub
pop
xor
mov
mov
xchg
repz
sub
or
jge
mov
cmp
je
mov
jno
out
mov
adc
fsubrp
cmp
popf
mov
or
inc
scas
ja
mov
int3
bswap
adc
pop
pop
sbb
adc
cmp
xor
aas
test
test
das
outsl
popa
ret
cltd
inc
sub
pushf
mov
bound
or
divl
aad
jle
mov
inc
or
lds
jle
mov
sahf
test
dec
leave
dec
ljmp
dec
mov
push
sbb
ljmp
mov
je
xor
push
loope
int3
adc
jg
fnstcw
test
lret
arpl
dec
int3
movsb
mov
mov
lods
push
mov
dec
or
and
adc
aaa
js
mov
pop
fcoms
aad
cmp
fs
pop
push
cmp
outsb
xor
cmp
arpl
testb
ret
pop
fcoms
nop
clc
mov
lahf
jge
cmp
mov
test
cmpsb
xchg
enter
sar
lods
popa
in
push
or
rorl
cmpsl
xchg
shr
sub
sub
testl
sbb
mov
rcrb
in
cli
in
xor
fbstp
gs
or
test
lcall
cmp
push
push
imul
push
xchg
sub
lods
in
xor
loop
and
jecxz
push
xchg
sub
js
mov
lret
fwait
aam
fidivrs
mov
bound
jns
xchg
into
leave
mov
mov
mov
xorb
push
ror
pop
test
jmp
mov
mov
xor
testb
je
sub
sub
iret
jb
andl
add
rorl
frstor
int
pop
mov
push
adc
pop
or
dec
adc
mov
inc
pop
stos
or
mov
inc
repnz
mov
xor
roll
sub
jmp
nop
jecxz
sbb
mov
xchg
aam
dec
es
jns
mov
xor
clc
pusha
bound
cld
rorb
xor
cmpsl
dec
sahf
add
dec
stc
fldenv
inc
mov
das
add
out
mov
inc
scas
les
push
aaa
lahf
add
popa
push
in
pop
cmp
sti
push
add
adc
das
loopne
xor
std
and
inc
sbb
and
test
mov
jp
popa
xchg
addr16
and
adc
mov
cmpsb
aaa
adc
ret
xchg
jo
push
push
cmp
stos
xor
dec
je
add
jnp
rcl
inc
pop
data16
in
jecxz
test
cmp
push
jns
push
je
test
aam
stos
jae
and
inc
or
jg
movsl
jge
jge
xchg
leave
hlt
mov
pusha
push
dec
fstp
cwtl
xchg
mov
sbb
out
int3
ljmp
push
inc
sti
sbb
sbbb
xor
aam
sarl
scas
sbb
inc
sub
fs
fwait
jp
jg
je
cmp
in
fwait
lods
popa
in
inc
hlt
pop
mov
sub
push
mov
test
rcr
or
adc
je
stos
clc
push
cmp
std
and
cs
je
fs
pushf
outsl
lret
pop
ss
sbb
xor
aad
fists
pop
cmc
lea
mov
dec
hlt
fdivr
shl
adc
jl
inc
rorb
das
cmpsl
pop
push
leave
sahf
out
out
cmp
lds
inc
mov
adc
out
pop
xchg
std
or
inc
clc
enter
or
repnz
fistpll
sbb
nop
shlb
pop
add
push
push
js
test
sub
and
test
inc
push
pushf
or
cmp
jmp
add
out
cmp
or
mov
outsl
out
ja
xchg
repz
dec
or
rol
outsb
lcall
std
scas
inc
mov
iret
mov
and
inc
push
das
in
mov
daa
dec
rol
aam
xor
idivl
repnz
adc
fs
xlat
subb
insl
jbe
dec
jl
mov
dec
and
mov
dec
mov
mov
stos
ret
mov
sbb
in
mov
lods
cs
shrb
dec
repz
lret
gs
cli
xor
xor
jmp
call
je,pt
inc
add
mov
test
push
sbb
lds
or
add
dec
or
sahf
dec
dec
decb
and
iret
xor
pushf
xor
pop
and
add
fnstcw
out
shll
jg
xchg
mov
in
aam
repz
addr16
sub
cmpsl
rcl
xchg
xor
xor
xchg
pusha
test
push
outsl
cs
pop
fistps
stc
lahf
inc
sbb
sbb
fmull
mov
jne
outsl
repz
mov
fnstcw
into
jle
repz
mov
ja
mov
idivb
pop
xchg
cmpsb
pusha
rcll
stc
lds
cmpsb
iret
out
lods
enter
lods
or
stc
dec
pop
daa
dec
cwtl
das
loop
lods
mov
sbbb
stc
into
sub
sub
les
push
push
mov
ss
lahf
adc
adc
inc
and
gs
pop
insb
jecxz
outsl
inc
loope
adc
cmpsl
lcall
pop
sub
and
sub
cmp
mov
repz
and
out
ret
add
popf
mov
sub
imul
mov
fdivrs
cltd
insl
mov
mov
xchg
adc
xchg
loopne
shlb
fistpl
and
mov
daa
insb
jbe
xchg
push
add
movsb
inc
cld
jne
std
xchg
popa
mov
les
mov
lods
aad
mov
clc
add
push
fndisi(8087
xchg
je
mov
loop
cmp
cwtd
scas
sub
shlb
jo
in
cmp
sbb
inc
test
pop
jo
loope
in
mov
ja
push
imul
jno
sahf
pop
in
shll
call
sbb
inc
out
cmp
mov
shr
jle
sbb
or
js
movsb
push
or
sti
sub
pop
scas
fadd
xor
scas
push
xor
hlt
inc
insl
dec
inc
pop
imul
xchg
rorb
popf
adc
sub
and
ss
daa
mov
pop
loope
fwait
out
shll
add
gs
rcrl
xchg
repnz
stos
mov
or
xlat
loopne
ret
jne
and
jb
xchg
cmp
sub
and
scas
and
pop
insl
mov
inc
xchg
daa
scas
mov
xor
int3
mov
leave
mov
pusha
dec
in
test
stos
jmp
sub
insl
out
or
popa
xchg
mov
cmp
dec
mov
movsb
sbb
sbb
popa
shr
test
gs
sahf
fwait
call
in
les
loopne
sarb
mov
cmpsl
cmp
push
in
les
sbb
adc
icebp
rcll
mov
inc
lods
lea
and
rorl
stos
mov
xchg
and
lahf
sti
je
hlt
jno
or
stos
int3
in
popf
or
imul
adc
shl
test
mov
dec
bound
fdivrs
xlat
js
xchg
aaa
ss
and
or
inc
insl
mov
ret
mov
test
ficomps
mov
sbb
xor
rorl
inc
aam
rcrl
mov
jnp
pop
out
shlb
xor
pop
push
or
in
cmp
dec
jns
iret
pop
xor
add
sub
sahf
lret
fwait
ss
lods
inc
mov
xor
loopne
repz
pop
jne
lret
or
add
test
test
add
pop
xor
adc
push
cmp
jno
xchg
pop
sbb
sub
ljmp
lods
push
pushf
xchg
inc
xor
pop
in
imul
jecxz
loopne
xchg
test
mov
fucomip
mov
lea
cmpsb
mov
stos
call
test
mov
adc
jmp
in
stos
jae
clc
pop
and
lret
cld
inc
fsubrl
jnp,pt
and
add
fcmovnbe
xchg
dec
popf
test
or
test
gs
mov
ret
sbb
jnp
mov
cmp
or
add
dec
sub
dec
lods
out
jbe
mov
aad
test
xchg
testb
cs
es
cmpsb
sub
mov
cmp
xchg
jne
or
adcb
add
call
ret
mov
mov
push
cmpsl
and
cwtl
xchg
mov
dec
aas
lock
mov
lods
data16
mov
js
add
lcall
scas
out
je
rcrb
cmpsl
rorb
cwtl
add
inc
int3
movsl
mov
in
jge
inc
stos
xchg
add
addr16
stos
push
cmp
mov
fnsave
imul
outsl
icebp
adc
xchg
cli
pop
ret
push
sbb
push
in
add
scas
xor
sub
and
mov
popf
xorl
inc
adc
sbb
test
xchg
ja
fs
call
clc
adcb
insl
inc
lcall
xlat
add
inc
adc
add
lret
xor
mov
cmp
leave
in
jmp
jb
pop
sarb
xor
scas
xor
lods
lret
add
js
leave
iret
mov
cmc
stc
dec
inc
inc
clc
mov
cmp
mov
mov
pop
pop
pushf
xor
dec
and
dec
sbb
fadds
dec
pop
push
popa
out
and
movsl
add
pop
jbe
cmp
inc
mov
pop
fsubrs
scas
sub
divl
in
jns
and
pushf
popf
std
idiv
pop
clc
xor
cmp
inc
add
adc
push
mov
jg
cld
cmp
in
add
pushf
loopne
jl
inc
in
jnp
xchg
sbb
sbb
int3
test
mov
shrb
mov
aas
movsb
out
adc
fistpll
cmpsb
rcrb
mov
xor
add
ds
scas
mov
mov
aad
cmp
mov
clc
stc
iret
fs
popa
jo
cmpsb
or
dec
insb
fnsave
cmpsl
push
mov
sbb
jg
cmp
test
add
repnz
or
shrl
sub
add
mov
dec
mov
loop
rolb
mov
push
leave
xchg
std
sub
mov
punpcklwd
xor
stos
aaa
push
add
xchg
xor
aaa
rcrb
adc
sub
pop
call
or
sbb
arpl
jge
push
xchg
xchg
inc
xor
inc
add
rolb
jne
xor
mov
xchg
sub
cmpl
and
std
pop
inc
xchg
aam
push
in
lods
sahf
ja
mov
sub
out
test
dec
pop
and
and
fildl
lods
xchg
jno
mov
push
movsb
push
jbe
imul
pusha
mov
cltd
arpl
gs
xchg
xchg
cmpsl
push
pop
pop
sbb
ja
fnstsw
pushf
out
andb
lods
mov
jae
nop
push
xlat
dec
jle
cwtl
mov
cmp
mov
cwtl
scas
sub
fmul
and
push
mov
cvttps2pi
pop
fwait
sbb
sub
stos
inc
repz
push
or
in
dec
xchg
cmp
add
ret
lret
sti
push
or
xchg
mov
cmp
stos
mulb
out
loope
out
lret
stos
daa
mov
mov
jb
out
mov
mov
cmp
push
in
popl
lock
and
adc
shrl
mov
dec
dec
xchg
rcrl
or
jp
pop
jae
sub
mov
inc
mov
push
shrb
xchg
push
xchg
outsl
mov
sbb
pop
pop
arpl
lods
mov
pop
or
lods
lcall
pop
in
stos
and
imul
fldl
xchg
adc
adc
mov
pop
push
cmp
xor
loope
out
clc
mov
aaa
icebp
pop
inc
lea
sti
enter
push
xor
add
out
or
mov
sahf
xor
aam
stos
arpl
les
repz
and
rcrl
fsts
jecxz
andl
rorl
test
into
icebp
movsb
jge
and
lods
push
imul
arpl
fists
aam
jbe
rcrl
cld
and
repnz
jae
push
sbb
jle
sub
jnp
dec
sarb
xchg
mov
inc
and
nop
mov
add
mov
pop
inc
in
in
inc
push
sub
mov
ljmp
es
mov
mov
inc
pusha
stc
mov
mov
mov
imul
dec
sub
and
add
sbb
pusha
test
mov
inc
mov
inc
jp
jno
jp
jp
aas
cmp
adc
loop
jbe
fs
int3
pop
test
mov
adc
movsb
mov
in
movsl
and
push
cltd
arpl
fdivrs
inc
push
mov
xlat
xchg
icebp
dec
push
and
xchg
jae
pop
orb
mov
mov
pop
mov
roll
pop
push
mov
test
sbb
jb
cli
sub
icebp
lock
out
and
inc
in
jmp
out
push
imul
jp
bsr
orl
call
insl
lods
sahf
xor
push
pusha
mov
mov
lahf
xchg
daa
mov
sti
scas
push
rolb
push
mov
cli
and
add
cmp
fimull
push
add
cmp
mov
xchg
scas
inc
jae
stos
mov
mov
loope
and
hlt
jae
out
in
outsb
aad
jne
push
leave
pop
sbb
mov
sti
xchg
movsb
xor
fdiv
out
outsb
cld
pop
push
gs
cmp
mov
xor
jmp
loopne
xchg
clc
in
fldenv
inc
jmp
xor
call
mov
push
jg
and
push
xchg
push
pushf
pop
test
cmp
jne
mov
add
lods
popf
cwtl
fwait
xor
cld
sarb
pop
out
flds
mov
xlat
addr16
push
push
icebp
or
add
inc
mov
or
xchg
lret
add
lret
out
sahf
or
in
loope
imul
mov
dec
pusha
bound
fsubs
jmp
aas
fwait
sub
mov
push
xorb
sti
hlt
in
sub
pop
add
rorl
dec
sar
test
push
cld
mov
inc
xchg
out
jmp
sub
lcall
testb
mov
jnp
fiadds
adc
cmp
xchg
inc
cmc
lods
adc
mov
dec
mov
mov
mov
pushl
mov
inc
or
adc
pop
add
jb
sbb
inc
or
pop
filds
stc
push
fwait
pusha
push
mov
or
repnz
leave
loop
pop
cmc
mov
sbb
std
scas
cmp
pop
push
ja
movsl
outsl
setle
aaa
mov
push
test
fwait
movsl
loop
ret
imulb
push
imul
dec
insb
xor
mov
dec
loope
pop
aaa
adc
es
mov
mov
insl
addl
push
xadd
dec
xor
adc
aaa
add
push
mov
xchg
xchg
out
jo
ficoms
sarb
cmp
push
rcrl
std
jp
flds
aaa
scas
push
and
loop
sti
sbb
bound
inc
mov
out
mov
mov
cmpsb
repz
push
dec
adc
and
inc
jae
lods
mov
jnp
repnz
icebp
xchg
mov
out
adc
inc
push
push
push
jb
aas
icebp
push
out
sbb
cmp
call
cmp
adc
adc
imul
scas
fcomps
in
pop
pop
xrelease
jl
pop
pop
mov
jne
in
mov
fprem
push
aad
jns
mov
addr16
js
add
hlt
xchg
inc
rep
pop
aas
sub
pop
nop
hlt
lods
cs
popf
testb
inc
cmp
adc
inc
push
push
mov
lock
inc
adc
jge
jle
jae
sub
addr16
push
jno
and
cld
mov
lcall
dec
jle
pop
jg
xchg
test
cltd
inc
mov
fcmovnbe
xor
sbb
movq
push
mov
insb
or
or
xor
enter
scas
fsubrs
mov
ret
xchg
outsl
push
ret
mov
sbb
jno
fisubs
pusha
or
cmp
dec
dec
filds
mov
sub
ret
or
shr
daa
fistpll
xchg
adc
dec
int
loope
or
adc
rcr
mov
lods
sub
lahf
mov
push
lcall
push
aad
mov
out
pop
cmpsl
adc
test
imul
jle
popf
rorb
lock
and
jmp
cmp
out
cltd
inc
icebp
mov
sbb
dec
repz
and
adc
mov
inc
pop
xor
pop
test
sub
mov
sbb
push
arpl
or
fdivs
dec
popa
in
inc
jo
out
out
popa
and
mov
rorb
cld
jno
scas
jns
mov
cmc
lods
test
bound
gs
pop
jl
sbb
adc
dec
movsb
or
pusha
inc
xor
fdiv
cmc
outsl
mov
adc
and
stos
inc
outsb
xchg
xchg
mov
mov
mov
push
add
xor
stos
nop
sarl
pop
shll
push
mov
dec
cmc
jno
test
pop
outsb
cmpsl
imul
or
pop
adc
out
mov
sbb
and
in
loop
ds
arpl
xor
insb
jo
hlt
rolb
inc
in
aas
or
mov
nop
insl
cmpsl
sub
lds
das
out
push
jge
ljmp
mov
mov
jle
dec
flds
jbe
out
push
or
cmc
pushf
fs
lds
sbb
add
xchg
or
loopne
xor
mov
dec
shlb
iret
popa
sbb
cmp
or
out
test
add
ret
sahf
or
push
pusha
pop
daa
xor
adc
test
push
pop
out
jbe
insb
or
popa
sbb
inc
xchg
popf
sbb
scas
lods
cwtl
div
outsb
inc
ret
or
lret
push
out
adcb
pop
icebp
add
push
sahf
insb
addr16
fiadds
mov
push
ret
adc
int3
loope
pushf
sub
xor
adc
xor
sbb
js
loop
mov
inc
inc
pop
pop
push
jle
xchg
test
adcb
jl
sbb
mov
mov
xchg
push
lea
je
test
push
lock
test
jl
aaa
cwtl
test
push
and
mov
adc
mov
fwait
xchg
gs
and
loopne
in
add
fmul
dec
inc
movsb
mov
int
fprem
xor
lret
cmc
fwait
loopne
lods
xchg
ljmp
insb
mov
xor
mov
fsubrl
xchg
ror
lods
ja
push
and
out
mov
incb
mov
fwait
int3
adc
out
aas
push
jbe
push
icebp
mov
cli
jae
mov
ret
and
mov
push
adcb
adc
mov
dec
icebp
out
mov
inc
cmpsl
mov
inc
ret
push
add
popa
mov
mov
mov
outsl
and
rolb
xchg
xor
stos
out
test
jmp
in
mov
sub
mull
push
jl
push
cmc
addr16
ret
mov
test
aaa
cmp
stos
popf
pop
int3
push
imul
imul
bound
mov
ss
cmc
loope
mov
mov
ja
out
out
and
and
js
xchg
scas
pop
test
jmp
repnz
mov
mov
popl
sub
jl
cs
or
mov
pop
fcomps
xor
movsb
mov
je
lea
jle
popf
mov
push
inc
cmp
clc
addl
cmpsl
addr16
add
shrb
das
aaa
xor
sarb
adc
sub
std
dec
fmuls
mov
stc
mov
fldenv
jne
pop
xor
sub
cs
lret
xlat
nop
ss
jg
lea
xor
bound
dec
mov
jb
sub
cmp
fistpl
mov
loope
popa
or
sbb
movsl
inc
fwait
das
imul
or
je
jecxz
gs
jbe
push
jl
jno
inc
inc
xchg
outsl
xorb
dec
mov
insl
inc
arpl
mov
test
sbb
jge
mov
rolb
xor
pop
lahf
pop
xor
mov
dec
test
or
cwtl
cmp
sbb
mov
cmp
bnd
inc
dec
lds
push
and
xor
lret
fisttps
xlat
das
sbb
scas
dec
loopne
xor
sub
stc
out
jne
and
call
adcl
std
lret
pop
or
cmc
je
in
sub
mov
adc
dec
sbb
mov
ret
mov
int3
repz
pop
in
lea
shll
mov
into
loop
and
cltd
xchg
lahf
cmp
push
aas
sub
jo
mov
push
rcr
and
mov
scas
mov
cltd
stos
leave
push
jmp
mov
or
outsb
push
sub
adc
and
mov
orb
int3
jle
and
push
xchg
negl
test
mov
jbe
mov
mov
xchg
add
rolb
adcl
adc
cmp
jb
push
push
call
rcl
cli
cmpsb
shr
pushf
lret
lcall
clc
sbb
sbb
divb
inc
jns
loop
inc
xor
insl
pop
sbb
ja
pop
fidivl
andl
je
jmp
push
cmp
mov
inc
stc
or
sub
test
dec
nop
mov
ficoml
mulb
loop
sub
inc
loope
aad
pop
icebp
shl
mov
or
and
push
cmp
call
adc
adc
xchg
loope
data16
add
lea
filds
cld
mov
jne
in
push
inc
xor
dec
lock
ss
dec
xchg
aas
sbb
out
ja
sbb
out
icebp
mov
sub
scas
xor
or
sbb
xchg
xchg
insl
test
adc
out
add
inc
sbb
stos
mov
outsl
dec
pop
add
mov
cmp
clc
ljmp
sub
iret
rclb
in
adcl
outsb
hlt
jnp
push
mov
mov
push
mov
shr
cs
ss
in
lds
dec
mov
aaa
push
je
sbbb
rolb
rcll
mov
stos
push
inc
rclb
cmp
loopne
sbb
mov
fsubl
movsl
mov
mov
jb
push
adc
pop
mov
push
dec
adc
pop
inc
aad
frstor
xchg
scas
inc
cli
idivb
fcoml
sub
fcomps
jo
sub
outsl
iret
stos
adc
add
mov
mov
arpl
pop
sbb
dec
adcl
fwait
mov
mov
fmuls
das
idiv
fstp
jbe
pop
sbb
arpl
enter
push
cmovl
and
loop
xor
pop
fiaddl
xchg
mov
or
sub
clc
icebp
sub
inc
pop
push
mov
outsb
gs
add
jl
adc
loop
xchg
test
sub
sbb
outsb
sarb
nop
push
jge
cltd
xchg
mov
ret
ljmp
out
add
mov
jmp
out
fs
add
adc
mov
hlt
xor
mov
sbb
mov
lock
fucomip
mov
add
pop
fsts
shlb
jno
jecxz
in
and
jne
ljmp
icebp
ficompl
jle
mov
clc
mov
test
jno
xorl
pop
mov
add
mov
sbb
pop
mov
pusha
ja
pop
jg
sbb
push
roll
mov
stos
adc
sbb
push
out
das
nop
xor
repnz
ja
jno
xchg
loope
mov
movsl
les
pop
mov
sbb
lock
cmp
daa
js
jbe
dec
out
jae
mov
iret
or
jg
fs
out
lds
xchg
in
xor
call
mov
dec
sub
push
sar
mov
cld
sar
push
cmp
adc
mov
iret
test
jb
movsl
add
adc
xchg
imul
xor
rclb
lods
call
sub
rolb
xchg
call
sub
scas
adc
pop
aaa
inc
push
inc
popf
pushf
decb
dec
push
je
lret
cwtl
out
jae
adc
xor
pop
cmp
push
bound
xchg
and
imul
aad
jne
cwtl
dec
jmp
mov
insb
adc
mov
pop
mov
sub
hlt
cld
cmp
scas
ja
pushf
in
das
mov
fcoms
out
testl
fstps
xchg
xlat
or
sbb
mov
call
dec
dec
test
xchg
lcall
js
out
test
mov
xchg
fst
out
xor
idivl
lret
mov
mov
fistl
add
out
and
xchg
xchg
stos
lahf
or
test
setno
lds
push
ret
adc
mov
jns
cmpxchg
push
loop
inc
jp
and
xlat
and
cmp
ss
xor
sbb
ret
sub
cwtl
ja
ss
cmp
jge
mov
or
arpl
mov
popfw
and
je
cld
scas
or
sbb
int
cwtl
outsb
push
ljmp
sub
xchg
push
push
mov
dec
pop
inc
out
pop
mov
sahf
dec
rorb
xor
stc
sub
jp
in
xchg
mov
inc
loopne
cmp
loope
outsb
push
xor
dec
inc
mov
pusha
lds
push
jb
sbb
in
sbb
sub
pop
icebp
xor
add
jmp
ror
subl
cwtl
test
adc
cmpsl
dec
ret
scas
sub
inc
daa
int
sbb
push
mov
sub
cmpsl
push
sub
movsb
ss
mov
jbe
add
jp
ljmp
cltd
push
dec
ljmp
pusha
mov
xlat
ds
ds
cwtl
lahf
lds
loopne
adc
adc
and
mov
xor
jne
ds
fsubrs
call
or
lea
inc
aam
xor
ja
pusha
push
lods
ficomps
rclb
iret
xorb
fs
inc
insl
lock
mov
add
test
cmp
or
mov
fildl
push
stc
inc
outsb
add
add
aas
arpl
scas
push
filds
xchg
cmp
shrb
fisubs
insl
andl
dec
in
int
in
aas
cmp
fdivl
fdiv
ja
and
pop
adc
nop
xchg
mov
inc
enter
les
inc
ss
ss
fs
lret
add
test
push
xchg
xchg
xor
dec
test
pop
dec
mov
stos
xchg
cli
js
sub
jge
stos
or
mov
hlt
pushf
aaa
and
xchg
adcb
pop
mov
and
out
fsubrl
push
rolb
shll
pop
jno
xlat
test
dec
xchg
sub
xchg
xor
pandn
sbb
enter
pushf
sbb
mov
cmpsb
fisubs
inc
mov
popf
sub
fcomps
jno
gs
sarl
popa
testl
adc
and
cmp
or
mov
test
adc
push
push
mov
mov
mov
jb
mul
pop
shrb
fisubs
xchg
movsb
arpl
pop
int
ljmp
jp
pop
scas
lcall
out
mov
das
test
xor
mov
js
movsl
sub
dec
push
pop
movsw
call
iret
adc
movsb
insl
mov
and
cmp
mov
subl
cmpsb
fstl
arpl
inc
fldenv
add
push
push
outsb
das
pop
pusha
sbb
gs
pop
xor
mov
cltd
dec
xchg
mov
in
xchg
jecxz
and
out
sbb
and
idivl
lea
inc
aam
data16
aam
push
jo
test
outsl
shlb
push
test
jns
add
ja
lcall
inc
dec
lods
dec
cmpsb
mov
mov
in
or
addr16
xchg
mov
jmp
dec
cmp
add
jmp
out
aaa
mov
lods
sub
jae
pop
add
jo
mov
mov
int
ja
cmpsl
push
dec
and
inc
jecxz
cmpsb
sti
add
and
shlb
adc
or
iret
in
dec
push
or
jle
pop
insb
mov
add
in
arpl
les
cmp
out
xor
enter
add
pop
mov
stc
sahf
xchg
jnp
xor
sbb
mov
push
out
pop
test
cltd
daa
mov
loope
mov
into
push
xchg
jns
fs
inc
push
mov
stc
push
leave
cmp
in
leave
push
and
das
ljmp
jg
xchg
rcrl
test
std
and
sbb
fisubl
mov
lods
pop
or
jp
add
xor
xor
fdivl
jge
repnz
imul
pop
aas
in
loopne
jecxz
adc
rorl
insb
out
enter
lock
dec
xchg
hlt
mov
dec
adc
push
sar
add
rcrb
ror
inc
and
ret
jne
mov
and
push
and
push
daa
mov
jno
sbb
adc
adc
out
cmpsl
jp
scas
inc
xor
mov
repz
iret
lods
pop
das
xchg
fistpll
std
xchg
mov
ror
xchg
outsl
push
mov
sahf
stc
jb
dec
sub
rorl
push
lahf
fdivr
cmp
notl
les
adc
adc
push
popa
sbb
or
sbb
mov
sub
das
adc
push
popf
pop
data16
inc
or
mov
jl
fucompp
mov
in
jae
xchg
lods
xchg
and
cmp
xchg
jns
mov
sub
mov
cmpb
cmp
adc
mov
cmpsb
or
xchg
mov
jo
cmp
jecxz
dec
je
fistl
addr16
xchg
cmp
call
movsl
sub
sub
lods
cli
das
decl
pop
push
jle
pop
push
mov
outsl
data16
gs
in
fisubrl
dec
stos
movsl
das
sub
ret
out
loop
dec
adc
xor
mov
dec
ds
and
jmp
sahf
pop
roll
add
add
jle
cmp
gs
xor
pop
test
bound
xor
cmc
pop
xchg
fwait
nop
scas
or
jnp
add
push
movsl
sahf
lea
sub
sarl
xor
mov
jnp
out
add
sbb
and
ds
sub
loop
fwait
iret
sub
ret
clc
or
ret
pop
push
repz
push
xor
cmp
and
lods
push
ret
mov
int3
xor
cltd
pop
dec
mov
sbb
mov
inc
pop
in
mov
sbb
sbb
insl
and
pop
dec
push
sbb
fistpl
push
pop
cmp
sahf
jp
das
les
xchg
cmp
pop
mov
add
adc
inc
adc
clc
scas
add
andl
xchg
xor
dec
mov
mov
cmp
pusha
push
repz
add
pop
pop
jne
fs
push
add
jae
mov
adc
cmp
mov
ja
int
pop
xor
insl
ds
mov
xchg
jo
mov
stc
adc
pop
stos
cmp
adc
push
sub
mov
xor
push
xchg
push
loopne
std
les
lds
sub
cmp
lahf
scas
test
jmp
movsl
sbb
pop
xor
scas
pop
sub
mov
das
xor
jo
pop
mov
pop
stc
jb
or
jmp
lret
daa
aas
mov
or
push
scas
jo
add
dec
add
out
dec
pop
mov
and
sbb
imulb
push
out
imul
out
or
cmpxchg
hlt
scas
xor
iret
jge
pop
cmp
pop
or
loop
test
inc
out
jmp
mov
cli
cmp
cmp
inc
jb
or
sub
cmp
xchg
jg
push
adc
insl
in
push
into
mov
jno
cmpsl
pop
cmp
adc
xchg
cmp
mov
add
sub
xor
fldt
xor
aad
in
or
movb
mov
cmp
xchg
mov
inc
xchg
int3
roll
or
int
push
imul
mov
ljmp
adc
inc
sub
test
or
in
ret
mov
pop
sub
pop
adc
push
inc
test
jb
mov
inc
mov
xchg
stos
and
andb
jbe
loopne
adc
aad
notb
imul
dec
mov
cmpsl
pop
gs
jmp
sub
cmp
cltd
sbb
stc
pop
unpckhps
adc
jecxz
mov
push
adc
xor
mov
test
jp
sarb
pushf
jne
pop
loope
fdivrl
jge
lahf
add
mov
cs
dec
pop
mov
push
jmp
cmp
into
insb
adc
popl
cld
jb
or
pop
cmp
mov
rolb
xchg
in
jp
inc
sbb
roll
lret
shlb
out
das
dec
mov
andb
xor
loopne
push
cltd
pop
mov
adc
cwtl
repnz
int
aad
dec
add
movsl
push
call
sbb
aad
cltd
inc
mov
and
sub
and
mov
enter
out
ds
mov
sarb
repz
popf
inc
sbb
and
adc
pop
cmpsb
repnz
fld1
test
je
test
mov
imul
or
push
imul
repz
imul
ljmp
aaa
mov
and
ss
out
pop
sti
std
and
jns
mov
pop
clc
xchg
xor
pop
adc
xchg
or
push
test
jle
xor
dec
fwait
cmpsb
mov
or
xor
or
sub
int3
adc
mov
movsb
lods
adc
fldt
pop
sti
int3
cmc
pusha
or
push
xlat
push
mov
mov
inc
adc
cmp
pushf
mov
test
xor
adc
fisttps
push
pop
mov
pop
or
into
sub
mov
stos
cmpsb
stos
filds
mov
cmp
add
hlt
mov
testl
mov
xchg
pop
mov
and
mov
push
test
mov
dec
push
loope
lock
mov
iret
ss
cltd
fiaddl
rol
or
pop
lods
jnp
pop
jno
rorl
cltd
pop
mov
xchg
adc
cmp
into
cld
xor
and
stos
mov
push
xchg
out
mov
imul
xchg
ds
sbb
lea
cmp
cmp
sbb
xor
pop
mov
daa
sub
in
in
fistpll
add
pop
bound
pushf
mov
xor
or
std
sbbb
int3
popf
sbb
popa
ret
hlt
xor
daa
lahf
in
pop
hlt
filds
jmp
pop
push
or
stc
addr16
sub
mov
and
pop
add
stos
leave
pop
dec
sbb
leave
xor
sbb
adc
stc
jle
jno
xlat
lods
sub
mov
ljmp
and
adc
int3
dec
out
dec
data16
test
fildll
adc
xor
test
mov
fdivrl
ss
popf
jge
ret
pop
pop
imul
mov
ljmp
cmp
cltd
mov
loop
test
mov
data16
sarl
jbe
adc
xlat
pop
dec
mov
jg
push
in
fmull
mov
jo
ja
jl
divb
cmpsl
or
xor
in
ja
jp
jo
call
ja
lret
push
test
test
pop
push
out
dec
mov
leave
decl
mov
mov
inc
gs
popf
push
jmp
adc
push
mov
in
repz
das
call
sub
aas
pop
dec
cmp
and
test
xchg
mov
sub
inc
cmpsl
push
pop
mov
sbb
xor
mov
pop
mov
inc
dec
test
mov
popa
mov
pop
jno
mov
xor
loopne
dec
jmp
iret
clc
fcmovb
and
pop
pop
or
dec
lock
xor
pop
and
push
xor
mov
pop
fadds
xchg
sbb
mov
aad
xchg
xchg
sub
mov
pop
jo
mov
pusha
test
jnp
cmp
test
movsl
sti
cmp
and
fcompl
cs
mov
shl
xor
out
mov
mov
mov
xchg
shll
and
hlt
inc
add
xlat
ss
and
mov
mov
push
aam
aaa
dec
in
add
inc
mov
cltd
cmp
xchg
cmp
or
mov
mov
sub
mov
stos
mov
out
std
mov
inc
aaa
lock
or
add
mov
out
icebp
iret
mov
mov
jns
sahf
rcll
lods
lret
fiaddl
and
ss
pop
jne
adcb
imul
xchg
mov
leave
jle
lods
mov
push
xor
clc
mov
push
jns
enter
out
xchg
fcoml
add
into
cmpl
push
cmpsb
dec
push
adc
sbb
adc
mov
inc
iret
ret
scas
lea
dec
jnp
xlat
into
stos
add
mov
sub
aaa
enter
mov
mov
mov
shr
pop
clc
jmp
lahf
or
aad
inc
mov
mov
dec
jle
aad
aad
push
mov
incl
iret
cmpsl
pop
sbb
dec
bound
bound
push
inc
imul
pop
adc
test
xor
out
ret
daa
lahf
es
mov
orl
jle
push
fnstcw
inc
and
mov
jno
cmp
pop
pop
dec
mov
mov
sarl
cmp
in
pop
mov
aaa
int3
aaa
mov
xchg
out
jbe,pt
rolb
stc
adc
and
jmp
mov
stos
in
xchg
cld
addr16
and
rorl
iret
pop
add
data16
rcr
nop
imul
imul
pop
lods
jp
pusha
jp
popf
mov
pushf
mov
movsl
mov
lret
sbb
pushf
inc
pop
imul
ret
and
sbb
mov
cwtl
test
mov
xor
pushf
jle
xchg
adc
mov
lods
lcall
jae
mov
lcall
and
fdivl
std
push
loopne
and
sbb
je
popl
addr16
in
mov
adc
ljmp
fs
sbb
aad
imul
lods
sub
dec
repnz
mov
pop
mov
add
mov
mov
push
sahf
jg
sbb
sbb
xchg
je
pop
das
add
pop
and
pop
fldt
xor
mov
and
rclb
sbb
mov
xchg
jg
sub
scas
lret
cmp
dec
stos
out
adc
xchg
cmp
mov
sub
clc
mov
pop
cmpsb
sbb
mov
mov
add
and
adc
out
fmul
jecxz
sub
arpl
jmp
xchg
or
and
mov
and
imul
hlt
pop
xor
in
mov
out
pop
pop
xchg
push
shr
pop
mov
popf
jmp
shr
sub
cmpsb
xchg
dec
sar
fistpl
mov
cmpsl
mov
cwtl
jnp
aas
mov
fsubs
inc
dec
imul
inc
test
sti
fistl
jne
mov
sarb
or
call
ret
push
inc
pop
cltd
mov
fbld
sbb
rcrb
in
mov
pop
out
ror
out
es
jg
vmaxpd
rcrb
std
out
pop
in
stc
out
sub
psllw
jle
xor
push
les
les
dec
ja
xchg
outsl
dec
scas
cmp
addr16
enter
sub
cmp
test
dec
inc
mov
push
inc
pop
push
aad
xor
dec
lcall
loope
or
push
xor
insl
aam
sub
dec
xchg
push
or
adc
jae
stos
jmp
jbe
lods
cmc
cltd
xor
inc
push
push
sbb
add
imul
scas
push
mov
ss
jmp
mov
in
dec
cmc
lahf
pop
jge
shll
and
leave
inc
fwait
jg
stos
cs
dec
or
inc
lods
push
sub
scas
xchg
jmp
adc
pop
mov
xor
das
in
jno
or
pop
add
rolb
in
scas
aam
xor
mov
fsubs
push
pop
dec
adc
dec
xchg
push
xchg
rcrl
lea
pop
ret
adc
lods
mov
mov
mov
imul
mov
rorb
in
rcrb
mov
jg
cmc
add
cmpsl
inc
fldcw
bound
inc
inc
jmp
mov
dec
xchg
lods
cmp
loope
test
sarb
push
leave
clc
mov
cwtl
push
mov
xor
popa
push
mov
and
dec
ror
sub
addr16
dec
fisubs
loope
push
fsubrs
ss
fs
clc
push
pushf
inc
ja
jne
stos
pop
scas
scas
dec
cmc
mov
pushf
push
mov
repnz
jle
sar
jmp
frstor
in
mov
pop
orb
jne
enter
jbe
pop
jecxz
push
scas
nop
add
leave
sarb
and
popf
sbb
xor
ret
fs
out
xchg
je
pop
in
test
push
into
jae
jo
repz
aam
movsb
jecxz
test
in
jge
mov
jno
pop
pushl
add
mov
jmp
xchg
sbb
mov
out
dec
adc
mov
popf
jmp
add
rorb
inc
sub
dec
fucomip
adc
sarb
lock
add
inc
mov
fidivrl
stos
fidivs
dec
xchg
jg
or
sti
fwait
dec
or
xchg
loopne
repz
xchg
pop
das
add
lret
sbb
frstor
mov
sete
mov
fcmovu
scas
dec
push
pop
lahf
sahf
xchg
cmp
pop
fs
fldenv
insl
cmp
mov
cmp
xchg
int3
jl
jle
xor
add
andl
mov
mov
mov
movsl
inc
mov
pushf
jge
add
inc
out
ror
xor
pop
int3
ds
inc
int
mov
ficoms
std
cmp
repz
pop
test
cs
jno
sub
add
clc
ret
pop
inc
cltd
push
imul
dec
xorl
xchg
push
int3
lahf
push
push
inc
and
mov
repz
pop
dec
jp
mov
fs
xchg
ljmp
iret
push
mov
or
test
and
lock
test
imul
mov
movsb
mov
push
loopne
negb
push
jns
xor
stos
cltd
bound
stos
cmpsb
into
sub
loopne
dec
cmp
xchg
pusha
negb
add
notb
add
push
xchg
insl
icebp
xchg
dec
xchg
popf
jg
and
cwtl
add
add
sbbl
sub
cmp
mov
mov
xchg
mov
dec
iret
aaa
xchg
inc
orl
cwtl
daa
addr16
xor
cld
repz
inc
xlat
xchg
and
xchg
and
jb
sbb
mov
xor
inc
push
arpl
insb
es
fiadds
jns
mov
subl
or
scas
mov
shr
inc
pop
jb
jne
jo
scas
inc
add
or
ret
shrb
inc
and
les
add
fs
pop
mov
mov
arpl
mov
adc
sbb
out
cmp
scas
bnd
aad
and
test
sbbl
insl
cmp
rorl
movsb
or
dec
sbb
ljmp
sti
mov
xor
mov
push
sub
xorb
jmp
adcb
mov
mov
lcall
xchg
dec
fidivrl
movsl
xchg
ja
cmp
pop
insb
mov
ds
push
jns
dec
cld
cmp
mov
adc
push
mov
and
inc
sbb
ss
mov
cli
test
fimull
xchg
js
dec
cmp
loop
or
daa
movsl
lret
jp
sub
lret
xchg
fstp
fnstenv
out
scas
ret
pop
repnz
jl
xlat
xor
in
push
popa
and
sbb
mov
popa
lcall
xlat
ret
dec
adc
std
test
cwtl
sub
lods
cltd
aaa
pcmpeqw
addr16
mov
jne
mov
sbb
push
je
sub
cwtl
add
xlat
push
cmp
in
adc
push
fisubrl
enter
movsb
std
test
into
jnp
stos
xchg
popa
sbb
cmp
stos
lcall
mov
lods
or
jge
cwtl
into
mov
jle
dec
inc
ret
mov
imul
in
in
dec
pop
xor
pop
adc
jle
clc
adc
add
xchg
and
push
lods
jmp
cli
xor
adc
jg
scas
xchg
pusha
cwtl
adc
inc
xor
movb
iret
lret
fidivrl
call
cmpsb
sti
shlb
cld
fstpt
scas
pop
dec
xor
mov
xchg
lret
stos
into
mov
dec
cmpsl
mov
dec
pop
xchg
iret
xchg
cmp
ret
pop
push
jp
push
lods
sbb
sbb
inc
ret
xorb
jle
imul
sti
mov
std
ret
rorl
push
arpl
shlb
jb
mov
andl
icebp
aaa
lcall
push
pop
push
clc
xor
cmp
test
stos
cmpsb
out
pop
data16
xor
cmpsl
or
jnp
popa
rcr
jo
jmp
ds
out
adc
push
sub
sub
mov
pop
xchg
adc
test
mov
sbb
popf
sbb
pop
pop
rcl
add
dec
pop
sarl
sbb
test
mov
xor
in
xorl
jge
inc
mov
mov
dec
fwait
cs
xlat
hlt
ret
jg
fistps
jns
jp
dec
call
in
mov
test
insl
adc
and
adc
mov
cmp
call
loope
jno
xor
aas
push
push
xchg
sti
je
or
test
int
bound
sbb
std
outsl
add
clc
fistpll
outsl
mov
cs
inc
inc
adc
ret
movsb
pop
ja,pn
out
cmpsb
mov
mov
jbe
mov
aad
dec
and
je
cmp
pop
fistpll
out
aaa
mov
dec
ljmp
or
or
mov
les
inc
push
sbb
adc
sbbl
fcmovne
imul
jge
lret
dec
test
or
pop
insb
cmp
and
jl
sbb
loop
in
lock
enter
jle
xor
fsts
test
outsb
out
loop
xlat
and
stos
pop
pop
lcall
and
xor
loope
xor
incw
jg
lock
outsb
icebp
insl
dec
rorl
mov
cmp
cmp
push
loope
scas
add
sbb
inc
pop
call
jb
mov
enter
mov
push
fdivrs
shrl
in
pop
xchg
js
das
jae
cmpsl
push
cmpsl
ljmp
xor
inc
mov
and
movsb
dec
inc
stos
or
addl
jbe
inc
pushf
lds
mov
hlt
icebp
mov
stc
dec
cmc
iret
push
inc
pop
mov
mov
hlt
cmp
mov
aad
arpl
xor
iret
stos
cltd
roll
fs
in
pop
xchg
test
or
pop
loope
inc
insl
push
decl
ror
leave
add
dec
cmp
inc
jno
das
int3
aaa
mov
mov
xchg
mov
jp
sarb
mov
test
cmp
cmp
test
aam
xchg
mov
sahf
xor
xchg
mov
ljmp
mov
inc
add
ljmp
loopne
scas
dec
xor
jno
lods
dec
adc
sub
xchg
stc
jne
or
jle
sti
shll
mov
xchg
fbld
mov
mov
mov
sub
jle
lock
icebp
pop
adc
fstps
out
lods
mov
jmp
insb
adc
cmp
cmp
push
in
lahf
into
pusha
xchg
addr16
shlb
fisubrl
jo
out
clc
lods
imul
xlat
clc
jg
push
and
mov
push
data16
js
sbb
push
jp
ljmp
push
mov
imul
pop
sub
jmp
into
out
cmp
push
fidivrl
xchg
lret
xchg
je
xchg
ja
adc
je
push
sub
push
xor
sarb
fisttpll
aaa
repz
addb
pop
mov
xor
ret
cwtl
out
lods
stos
inc
aam
test
aam
pop
cmp
cmp
cmp
out
adc
inc
clc
cmp
fnstenv
pcmpeqb
mov
mov
iret
mull
pop
push
iret
adc
mov
mov
mov
in
test
and
mov
jns
push
stos
roll
ss
inc
jg
mov
fdivrs
cmp
push
pop
or
xchg
ljmp
mulb
cmc
int
in
fdivr
lcall
jo
subb
pop
fiadds
dec
stc
pop
lret
aad
shrb
xchg
sbb
sbb
test
inc
lea
dec
arpl
cmc
pop
push
outsb
cwtl
call
pop
testb
pop
adc
jnp
outsl
xor
aas
dec
cmp
arpl
call
mov
mov
mov
inc
fnsetpm(287
pop
scas
inc
into
mov
out
and
push
xchg
adc
test
nop
shll
stc
push
in
ficoml
push
lds
rcll
pop
dec
sub
cmpsb
aas
jmp
add
dec
cwtl
dec
scas
xor
fisubrs
dec
shlb
jle
shll
xchg
mov
out
xchg
roll
jge
loop
aam
jle
cmp
xlat
pop
sbb
in
inc
clc
cmp
xchg
movsb
pop
jmp
out
push
mov
pop
cmp
cld
nop
cltd
pop
pop
or
pextrw
mov
mov
pop
push
je
adc
mov
shll
jno
testl
push
jno
cmp
mov
jmp
addl
cmp
in
popf
lret
add
js
xor
lods
xor
xchg
les
nop
shr
jge
cmp
outsl
xchg
lret
mov
push
aaa
adc
cli
push
stos
dec
xor
sub
dec
rorb
stc
mov
icebp
cmp
out
pop
push
add
int3
sub
ja
adc
sarb
arpl
in
cmp
stos
xor
mov
mov
lods
rolb
sbb
sarl
aad
push
call
cmp
mov
insl
sub
pop
dec
mov
pushf
cmpsl
ficompl
jnp
adc
push
sub
inc
lea
jnp
mov
pushf
addr16
popf
lret
test
imul
push
loope
xor
pop
add
imul
lods
xchg
cwtl
and
mov
int3
push
divl
and
sub
and
push
shl
int3
mov
sub
sub
rclb
mov
xor
xchg
push
popa
add
stc
insl
mov
repz
out
cmpl
ja
dec
dec
cmp
out
repz
push
out
testl
jecxz
cmp
pop
jg
loope
icebp
adc
or
test
ss
push
jg
in
ds
xchg
adc
mov
in
jmp
push
jge
sub
mov
je
in
aaa
sub
pop
and
leave
fmull
dec
pop
jecxz
mov
push
jnp
lds
xchg
repnz
cmp
xor
dec
stos
xor
cmp
popa
dec
out
mov
inc
pop
std
cmp
popa
cwtl
decl
out
add
xor
iret
cmpsl
cmp
dec
cmp
hlt
fxch
loope
jl
push
inc
mov
clc
cmp
inc
fnstcw
xchg
mov
push
in
dec
call
ja
and
sahf
xor
inc
pop
sarb
subl
negb
jl
leave
xchg
je
jne
pop
into
push
outsl
out
inc
inc
mov
ret
push
out
cmp
bound
jle
xor
aaa
pop
std
and
fs
jecxz
mov
mov
push
out
mov
push
jb
sub
outsb
das
cmp
dec
and
cmp
icebp
fildll
ret
outsl
push
push
cmp
les
add
mov
xor
in
mov
in
inc
ret
xchg
mov
in
mov
outsb
inc
or
sbb
jp
aas
xor
cmp
pushf
sti
inc
stos
lret
int
das
push
xchg
pop
insb
out
les
mov
fcom
cmp
lods
sbb
push
xchg
pop
pop
out
mov
xchg
mov
fs
dec
and
scas
pushf
sub
mov
pop
aad
push
loope
pop
xor
fs
cmp
sub
fildll
fisubs
lahf
dec
adc
fimuls
push
lods
inc
xchg
cmp
xchg
sti
call
jmp
jecxz
xchg
mov
cwtl
movsb
xor
cmp
popa
out
add
in
xor
jp
ss
lods
call
clc
sarb
xchg
addr16
imul
fbstp
cmp
xchg
pop
lret
xor
les
cmpb
inc
popf
ficompl
test
mov
into
sbb
dec
adc
dec
cmp
cmpsl
je
test
adc
lret
mov
push
inc
jne
and
sbb
sbb
xor
or
stc
jge
add
lret
xor
cmpsl
cltd
loopne
cs
dec
sub
inc
popf
cld
into
arpl
movsb
pop
sbb
adc
mov
sbb
jbe
mov
xchg
fbstp
movsb
mov
mov
add
add
jg
gs
adc
and
rol
or
pop
mull
inc
fs
pop
cs
mov
mov
mov
test
orb
rolb
adcb
and
inc
push
inc
insb
sbb
cmp
pusha
sbb
xchg
mov
adc
out
test
dec
pop
fs
push
adc
popf
push
fisubs
aas
cmp
ja
add
push
fisubrl
aaa
and
fsubrl
out
push
xlat
pusha
mov
cli
or
outsb
cmpsl
and
call
jno
inc
jae
xor
fwait
push
cmp
js
shlb
popf
mov
shll
mov
loop
cmp
mov
lds
icebp
add
call
add
call
adc
outsl
sahf
jo
cli
imul
inc
xchg
test
xchg
xchg
jmp
es
mov
fwait
mov
rcll
push
pop
xchg
jp
mov
sub
adc
mov
iret
push
mov
pop
pop
cmpsl
nop
int
sub
or
addr16
cmp
jl
sub
pop
inc
insl
push
orl
dec
xchg
in
je
test
test
mov
cmp
outsl
addr16
mov
call
push
lcall
clc
jle
mov
or
enter
xor
addr16
jno
dec
roll
test
sbb
jp
sub
je
gs
jne
flds
adc
ljmp
inc
hlt
das
cmpsb
sub
and
call
xor
sbb
mov
ljmp
pusha
cmp
ret
dec
mov
and
xor
mov
xchg
pushf
iret
movsl
inc
out
jmp
mov
pop
rcrl
mov
push
jmp
push
push
aaa
mov
loopne
xchg
or
sbb
jecxz
cmp
jbe
add
lahf
cmp
push
pop
enter
xchg
jno
pushl
mov
xchg
cs
iret
pop
out
hlt
test
stc
dec
mov
mov
inc
test
stos
movsb
and
dec
mov
and
mov
cli
out
dec
jg
xor
mov
xor
pop
jae
out
nop
ds
fs
cmp
enter
jle
ds
decl
hlt
std
push
xchg
dec
lods
dec
xor
inc
sub
add
inc
movsl
mov
xchg
stc
cmp
or
insb
lcall
in
mov
mov
lods
xchg
std
and
cmp
sbb
push
loop
mov
arpl
sti
jl
popa
lret
fidivl
inc
inc
push
movsl
shl
idivl
mov
push
jnp
lods
cmpsl
and
jno
push
cmp
mov
add
push
fmull
push
or
inc
mov
jmp
das
call
sahf
mov
mov
push
movsb
or
leave
sbb
out
ja
xchg
dec
lret
or
push
repz
sub
add
das
add
xchg
loope
outsl
aaa
cmc
aam
push
push
jp
imul
imulb
addl
adc
cmp
sub
subl
pop
xorl
sub
or
add
jle
mov
mov
jbe
xchg
insl
aad
adc
xor
pop
ficoml
es
cmpsb
scas
or
xchg
imull
or
mov
xchg
pop
hlt
jbe
out
mov
xor
fsub
cmp
stc
cmp
fstp
and
mov
adc
xchg
xor
mov
gs
pop
dec
loop
les
fcoms
lods
rorl
adc
jae
mov
xchg
xchg
test
inc
fistpll
hlt
jne
mov
stc
outsb
mov
sbb
out
xor
dec
iret
fbld
sub
mov
xchg
imul
inc
mov
rcrl
movl
cli
mov
push
mov
jbe
sti
jne
daa
fldl
sbb
mov
add
cmp
into
es
adc
aad
lret
xchg
cli
or
sahf
push
cld
bound
push
xchg
sub
mov
pop
jne
aad
mov
mov
pop
sbb
ja
test
mov
mov
ja
lret
xor
loop
fistps
xchg
cmpsl
fiadds
inc
jne
data16
xchg
ret
ljmp
nop
mov
and
shlb
or
aas
sbb
movsb
xchg
jb
pusha
jl
fldcw
cmpsb
sbb
xchg
adc
push
push
xchg
and
push
cli
imul
lret
and
out
sbb
andl
xchg
inc
pop
push
icebp
or
push
push
in
add
jae
into
dec
push
sahf
enter
push
ja
nop
loopne,pn
jge
xor
pop
ds
xor
lods
cmp
shll
ret
mov
cmpsb
pop
stc
lahf
addr16
push
jmp
and
loopne
sub
call
cmp
stc
mov
xor
and
mov
sub
pop
and
pop
jbe
jmp
movsb
or
ja
das
scas
sbb
sbb
jns
pop
push
add
out
lea
std
xor
rclb
or
mov
cmp
ja
xchg
dec
sti
shlb
jmp
and
sbb
sti
pusha
push
and
mov
pop
fidivrl
scas
xchg
scas
ret
adc
incb
lods
sub
and
xchg
into
notb
add
mov
mov
gs
aam
xor
repnz
fs
pop
push
ds
mov
xchg
inc
bnd
jbe
xchg
xor
adc
lahf
fs
or
pop
lret
orb
xor
test
mov
dec
and
dec
xchg
push
insb
fisubl
xor
or
aas
xor
mov
push
add
leave
fs
mov
mov
add
mov
cmp
ret
add
std
or
outsl
xlat
das
pop
imul
popf
cld
ret
jle
cs
xor
and
xor
sahf
out
inc
lcall
cmp
mov
insl
push
cwtl
mov
out
je
mov
shlb
or
out
xchg
insl
idivb
mov
xchg
test
mov
inc
test
cmp
ja
shll
push
in
or
cmp
mov
arpl
cmpsl
mov
mov
and
notl
out
loop
xchg
mov
add
cld
sbb
pop
inc
ja
mov
fcomps
test
scas
inc
outsb
mov
adcb
and
neg
xchg
adc
mov
sti
lea
jno
or
scas
cmpsb
in
push
jbe
sub
fisttpl
sbb
out
sub
and
push
roll
loopne
inc
fisttpll
in
aad
or
lahf
adc
jge
mov
jmp
xor
lods
cmp
sbb
lds
push
dec
dec
sub
je
outsb
je
movsb
in
and
nop
jo
mov
dec
aad
je
cs
lcall
lahf
and
fsubrl
mov
dec
cmc
dec
inc
jo
loop
fldt
mov
mov
inc
jl
sbb
aad
or
push
cmp
mov
fs
jle
adc
rclb
mov
or
add
push
outsl
lds
inc
inc
mov
mov
xor
sar
call
mov
or
in
fsubs
fistpl
sbb
gs
mov
inc
lret
inc
int3
mov
sahf
push
ljmp
std
adcb
hlt
loope
jge
fistl
int3
rolb
sbb
lcall
jle
popf
or
mov
sub
in
mov
jns
test
addr16
aaa
pop
or
sar
cmp
idivl
in
fcomps
bound
jno
or
xchg
jnp
cmpsb
lret
pop
outsl
ss
lcall
lahf
rcll
jnp
nop
daa
scas
sbb
dec
mov
scas
adc
test
jp
ljmp
orl
inc
sub
repnz
mov
jno
sbb
sahf
inc
lret
xor
adc
push
xchg
in
lret
push
scas
scas
fsubrs
nop
out
in
mov
icebp
ss
jl
call
dec
push
mov
gs
js
inc
std
call
cmpl
dec
sbb
sbb
sub
cmp
mov
fdivs
xchg
push
outsl
mov
dec
fidivrs
jnp
push
lcall
add
cmpsl
shll
pop
out
pop
cmp
xchg
add
mov
decb
or
out
xchg
jg
out
pop
cmc
fidivrs
push
cmp
or
adc
hlt
dec
shl
lcall
or
rclb
into
sbb
ret
aam
cmp
repnz
int3
cwtl
xor
xchg
pushf
je
jns
mov
add
mov
lea
rorb
jb
pop
mov
mov
insb
pop
pop
imul
bound
jae
cmp
sub
sbb
adc
mov
pop
lds
fdivs
add
push
loopne
ljmp
push
js
cld
sub
xchg
xlat
push
icebp
xor
and
dec
xor
cmp
into
and
pop
test
mov
xor
adc
lcall
cmpb
adcb
fnstenv
fildl
pop
daa
or
les
push
cmp
jns
push
iret
fnstenv
mov
sar
bound
jecxz
cmpsl
cld
aaa
jbe
stos
ficompl
js
gs
popa
rolb
pop
push
fdivrs
cmp
ret
inc
sarb
push
inc
enter
mov
sbb
fstl
lret
lahf
into
aaa
xchg
xor
inc
test
mov
xchg
push
js
inc
xor
addr16
adc
xlat
pop
std
pop
aaa
and
xchg
mov
mov
addl
rcl
daa
stos
pushf
jmp
cmp
xchg
inc
jo
jnp
xchg
jnp
inc
push
fnstenv
movsb
dec
dec
jecxz
jmp
push
shlb
ret
cmp
scas
js
xlat
xchg
daa
pop
add
rorb
inc
mov
addl
jnp
mov
cmp
dec
arpl
les
sbb
xchg
mov
mov
sbbb
mov
dec
getsec
roll
mov
fimull
adc
icebp
pop
pop
and
mov
std
pop
out
scas
sbb
mov
notb
test
xchg
mov
into
xchg
push
ret
xor
push
fwait
adc
cmp
aad
and
mov
das
cmc
int3
sbb
stos
lds
jb
sbb
repz
insb
lret
jne
mov
scas
stc
rolb
mov
ret
ss
gs
addr16
pushl
jle
mov
ret
ljmp
stos
cltd
and
dec
out
fistl
push
adc
inc
mov
dec
jmp
aam
ja
inc
lock
lods
ss
cmp
loope
rcrl
jb
les
push
xor
inc
test
inc
xorl
movsb
mov
lds
leave
ds
jbe
or
jns
jecxz
add
fldenv
sbb
mov
xchg
nop
adc
stos
sbb
bound
push
int3
xchg
popf
jge
mov
mov
ljmp
push
mov
ret
lods
outsb
mov
mov
cld
and
xchg
rcl
orb
gs
test
fists
adc
popa
push
mov
cmpsb
pop
call
out
cs
inc
fdiv
clc
mov
lret
scas
addr16
mov
repz
mov
or
mov
sub
pop
je
test
xchg
fwait
lcall
nop
enter
hlt
dec
add
shlb
int3
jge
adc
sbb
les
sbb
jle
lods
mov
mov
jne
xchg
pop
xchg
inc
out
lds
and
cmp
pop
imul
push
and
decl
push
ja
fnstsw
cltd
repz
popf
jge
jecxz
add
pop
fdivrs
lret
mov
jo
jl
push
lea
pop
insb
dec
lods
ficompl
imulb
clc
rclb
lahf
mov
mov
xor
or
dec
out
adc
shr
sbb
mov
dec
fwait
jp
int
in
imul
in
in
xchg
lahf
cwtl
xor
push
jle
mov
fs
adc
adc
add
xorl
xlat
mov
out
xor
mov
add
das
xchg
mov
inc
iret
ja
cmpl
sti
cld
cmpsb
dec
incb
insb
repz
jecxz
pop
xchg
cmp
jb
inc
push
xchg
mov
jae
cs
mov
and
cmpsl
fmulp
xchg
call
dec
mov
jae
or
push
mov
pop
cs
int
inc
mov
add
sub
add
mov
shlb
outsl
repnz
jl
mov
stos
pop
push
push
movsb
repnz
xor
fisubrl
dec
add
jmp
cmpsb
sub
and
gs
ljmp
and
loop
xchg
push
cli
jne
mov
fsub
or
push
mov
out
daa
xchg
push
add
lahf
dec
xor
call
xchg
adc
dec
mov
sbb
lods
xchg
cwtl
ljmp
jns
shrl
or
movsb
fwait
mov
ret
add
movsl
dec
sub
push
or
or
and
pop
hlt
cmp
nop
mov
sbbb
mov
test
fsts
stc
arpl
mov
jno
jge
lahf
inc
sbb
nop
pop
or
les
repz
aaa
lock
std
int
daa
add
cmpb
enter
cmp
mov
sbb
in
pop
test
ret
sub
fwait
bound
pop
mov
inc
ljmp
ss
imul
imul
pop
out
mov
mov
out
cmp
std
mov
dec
inc
pop
in
iret
int
push
aas
push
leave
fwait
loop
loope
sbb
inc
fldcw
test
sub
add
xchg
jnp
out
mov
lret
cld
int3
aas
js
je
lahf
cmpsb
push
ret
fbld
out
cli
loope
jnp
and
scas
jne
mov
sahf
icebp
test
mov
push
adc
adc
cmp
call
xchg
cmp
push
dec
sarb
cmp
lds
mov
sub
fldt
repz
xor
sarl
lret
or
sub
add
jg
fptan
push
xchg
mov
imul
push
pop
insb
xchg
out
es
push
repnz
pop
imul
xchg
rol
lahf
push
sub
ficompl
inc
jne
jmp
jno
pop
jmp
fwait
pop
out
mov
xlat
pop
push
lock
testl
push
pusha
or
and
in
push
enter
jns
add
mov
shll
scas
int3
cmp
pushf
cmp
lods
addl
dec
mov
cmp
pop
mov
add
mov
jnp
repnz
adc
lods
and
mov
ret
xor
cmp
xor
dec
mov
mov
cmp
ds
cmpl
sub
dec
js
hlt
mov
icebp
mov
or
lret
jg
mov
enter
outsb
nop
pmaddwd
pop
inc
in
xchg
push
mov
movzbl
loopne
sub
es
lret
add
lds
jecxz
cmp
dec
jge,pt
outsb
jecxz
mov
push
leave
fisttps
lock
mov
adc
jne
int3
mov
xchg
sbb
jae
or
test
fmul
insb
mov
int
fstpt
jne
and
mov
jmp
sub
addr16
pop
hlt
sub
daa
lcall
cmc
push
inc
fnstsw
lahf
inc
popf
or
mov
cmc
xor
popa
ds
insb
push
aad
clc
clc
sub
ss
ret
mov
push
in
sti
sbb
push
out
mov
repnz
or
or
mov
mov
jmp
mov
outsl
pop
pop
add
add
mov
scas
xlat
insl
sbb
xchg
out
adc
shll
and
dec
push
loop
and
mov
test
orl
jl
jnp
repnz
fsts
aam
adc
mov
mov
faddp
nop
adc
fcoml
test
cmp
cmp
clc
clc
mov
shll
out
enter
or
ljmp
stc
xchg
lret
or
fdivrs
pop
data16
pusha
and
mov
inc
mov
dec
sbb
jbe
fists
es
add
xchg
adc
dec
mov
inc
test
outsb
mov
add
into
sbb
pop
xor
loop
jns
addl
or
inc
out
or
sub
push
iret
pop
repnz
imul
xor
dec
icebp
std
dec
adc
lds
in
out
jne
dec
stos
mov
jmp
cmpl
mov
adc
fs
inc
mov
mov
mov
movsb
mov
push
scas
dec
xor
push
xchg
inc
dec
jb
add
gs
xor
jae
imul
push
arpl
inc
repz
cmp
shll
sti
enter
adc
xor
popa
test
stos
jbe
arpl
outsl
pop
out
fcomip
or
loope
shll
jne
or
shrl
jmp
insb
ds
leave
dec
or
test
call
and
lcall
int3
pop
xor
add
dec
mov
lcall
push
ret
sub
adc
mov
push
pop
aam
insl
je
cmp
jo
push
jg
mov
loope
leave
decb
test
out
sub
mov
in
mov
mov
cmp
rcll
pushf
sub
inc
sbb
adc
cmp
or
cwtl
fistps
call
adc
push
mov
pop
out
fisubrs
pop
pop
mov
inc
std
outsl
mov
aaa
fldl
shrb
into
rcll
inc
push
or
pop
push
and
ds
cmp
insb
jo
es
sub
faddl
cltd
fwait
and
mov
mov
push
pop
jl
jb
outsb
or
or
mov
mov
xor
dec
xchg
pop
loope
sub
icebp
outsb
sahf
jno
xchg
fimull
in
in
sbb
fdivrl
fistpll
leave
arpl
jb
sub
push
inc
fistpll
stc
mov
jmp
dec
notl
add
inc
leave
push
jb
int
aam
das
std
das
inc
dec
cltd
faddl
lret
or
sti
dec
in
leave
push
mov
in
inc
cld
adc
loope
inc
loop
repz
xor
imul
out
fdivrs
lds
mov
jbe
aam
sub
jmp
test
sbb
xchg
dec
fucomi
mov
into
sbb
adc
cld
mov
lods
scas
ljmp
loope
xchg
out
jecxz
stos
push
inc
nop
test
lret
les
in
out
jecxz
daa
jno
jo
insb
and
mov
clc
ss
cs
dec
addr16
and
lea
sbb
test
add
mov
pop
cli
xchg
cmpsl
pop
mov
mov
xchg
cmp
fldl
inc
jecxz
cld
outsl
jo
js
or
mov
mov
in
aad
mov
or
cli
adc
in
cwtl
add
xchg
jge
loopne
xchg
sahf
or
addb
ds
push
dec
test
mov
adc
inc
je
mov
fwait
jno
sub
fstpl
pop
stos
cmp
daa
js
rorb
dec
aaa
stos
das
nop
sub
sub
rcll
push
rorl
adc
mov
loopne
jne
mov
in
sbb
push
mov
jmp
out
pop
add
mov
add
or
sbb
dec
lahf
adc
sti
push
call
iret
xor
inc
and
fldl
rolb
push
adc
push
scas
adc
mov
jno
mov
out
aad
add
add
add
shll
jmp
and
addr16
movups
cmc
sbb
cmp
push
das
imul
pop
ja
sarl
punpckhbw
jecxz
add
push
js
cmp
and
pop
sub
dec
cwtl
sub
daa
fcmove
pusha
xor
adc
mov
add
scas
mov
cs
mov
sarb
mov
mov
addl
ljmp
sbb
subl
jae
sub
jmp
xlat
cmp
andb
sti
or
lods
clc
movsb
dec
cmp
adc
sbb
rclb
insl
pop
and
loope
mov
shr
xchg
jl
xchg
bound
and
nop
pop
lret
fbld
jp
out
cmp
or
aaa
xlat
add
aad
outsl
pop
add
fildl
xorl
mov
or
outsb
mov
enter
stos
cld
into
add
push
pop
xchg
orb
popa
out
aam
xor
gs
xchg
cmc
sbb
and
push
mov
pusha
cltd
mov
inc
repnz
mov
insl
cwtl
cmp
mov
or
xchg
clc
sub
ficoml
stos
ficoms
fisubs
xchg
call
faddl
rorl
mov
popa
pop
mov
add
stc
ljmp
cli
fistl
adc
mov
jb
popa
push
jge
pop
ss
in
fiaddl
cmpsl
dec
in
add
movsb
in
cld
mov
je
jmp
fnstsw
mov
div
gs
ja
add
jb
pushf
push
xchg
add
sbb
pop
or
lahf
cs
push
mov
out
or
mov
dec
dec
orl
and
mov
sub
arpl
xlat
dec
mov
adc
stos
dec
les
testb
xor
ret
pop
xchg
dec
cmp
imul
js
rcr
outsb
cld
and
test
push
lock
cmp
pop
xor
call
inc
dec
in
jno
insl
add
shlb
lret
xchg
sbb
out
pop
stos
sbb
cmp
sub
pop
pusha
out
cmp
sub
sti
mulb
std
dec
inc
cmc
fidivrs
dec
sti
negb
sbb
lret
cmpsl
mov
das
aas
rorl
xchg
scas
xor
xchg
in
aam
or
lea
push
loop
pop
cltd
sbb
inc
inc
dec
add
inc
fistps
incl
mov
roll
mov
fwait
mov
and
sbb
cmp
sti
push
jl
xchg
out
push
loopne
pop
lahf
movsb
inc
jb
loopne
dec
xor
or
cmp
in
pop
lock
cmpsb
jl
or
pop
jecxz
xchg
jp
dec
adc
movsb
cmp
jl
jle
xchg
mov
ljmp
and
cmp
mov
push
das
repnz
dec
sub
jmp
loopne
sub
push
jns
jbe
or
lret
add
cmp
cltd
add
sub
mov
mov
sub
add
mov
dec
std
fmull
push
add
cmp
stos
pop
int
push
jp
xchg
fistps
sub
and
add
ret
fwait
mov
stos
jae
fmuls
stos
inc
sub
lds
jne
nop
mov
mov
dec
fidivrl
movsb
sahf
xor
fs
les
rcll
cwtl
sarb
test
insl
cwtl
dec
xchg
test
nop
add
imul
add
lahf
cmp
and
or
inc
lret
sbb
int
out
or
cli
pop
lock
lock
loope
daa
enter
adc
rol
jae
jno
pop
jg
xlat
sbb
mov
subb
jecxz
aaa
lahf
cmp
es
or
lret
add
cmp
cs
add
or
inc
mov
jne
xchg
cmc
mov
loop
test
test
dec
pushf
jle
insl
leave
cltd
rolb
jbe
lods
pop
push
jno
mov
fwait
mov
popa
dec
sbb
mov
addr16
cmc
xor
fmuls
fbstp
repnz
pop
push
dec
sub
cmp
out
jns
xchg
mov
sbb
xor
cltd
jg
jl
iret
test
imul
nop
mov
push
xchg
ret
pop
sub
mov
cmpb
sahf
xchg
scas
add
pop
stos
lods
into
push
add
mov
test
dec
push
adc
xrelease
loop
jae
aas
movsl
adc
xchg
jle
mov
test
cmp
imull
jmp
and
jb
cmp
push
insl
out
jmp
or
je
cmp
scas
pop
iret
data16
sahf
int
adc
cmp
incl
jne
jg
lret
leave
shll
or
sbb
test
aam
je
daa
xchg
sbb
mov
mov
or
cwtl
test
xor
aad
xchg
xlat
lahf
cmc
pop
cld
in
mov
sti
jns
cs
or
cmp
mov
sbb
sub
sub
push
nop
xlat
sub
and
xor
cli
fildl
scas
scas
outsb
repnz
push
pop
lods
in
push
loope
jno
mov
fstl
lds
movups
adc
pusha
sbb
dec
fistpl
add
push
test
inc
popf
mov
sub
xchg
jne
jl
test
push
gs
in
adc
insl
js
hlt
mov
mov
add
subb
in
aam
std
xchg
mov
pop
icebp
test
inc
std
and
ss
sbb
in
xchg
pop
lds
mov
mov
dec
xchg
cmp
sbb
add
mov
lock
in
xchg
mov
pop
leave
dec
jmp
mov
outsl
xlat
push
sub
jmp
or
mov
je
insb
fsubr
lods
cmpsb
insl
cmp
xchg
inc
cli
push
push
cmp
cmpsl
scas
mov
sbb
lods
push
inc
lcall
push
test
and
outsb
and
sarb
adc
aaa
ret
cmpsl
jbe
sbb
sub
jne
jp
fdivl
and
test
inc
ror
xor
outsb
jne
call
mov
loope
jmp
pop
cwtl
pop
out
or
test
imulw
out
stos
mov
mov
sub
dec
lcall
enter
je
and
xchg
mov
ror
inc
cmpsl
out
fisubrl
mov
repz
adc
jle
cmp
mov
push
ss
sub
adc
aaa
add
movsl
xor
dec
gs
lret
dec
insb
pushf
dec
aam
nop
scas
adc
xor
ss
push
push
ret
jl
mov
sbb
mov
insl
add
test
mov
xlat
out
push
int
sub
dec
in
adc
scas
inc
out
xor
clc
mov
sub
aam
pop
push
mov
ljmp
inc
and
cmc
adc
adc
jnp
mov
add
xor
inc
xchg
add
or
bnd
cmp
dec
movsl
out
pop
xchg
aam
pop
sti
pushf
inc
mov
in
int3
nop
repz
sub
mov
push
dec
rcrl
cmp
dec
into
jg
and
fwait
leave
test
push
mov
sti
mov
stos
dec
mov
or
flds
insl
jmp
add
or
gs
hlt
adc
pop
jg
sbb
ret
test
xor
pop
adc
fs
lcall
xchg
stos
fsts
adcl
add
std
loop
gs
cwtl
sbb
cmpsl
rclb
jg
add
sahf
scas
mov
cmc
cltd
pop
loop
adc
insb
xor
mov
pop
js
push
icebp
xchg
xor
test
out
adc
addr16
daa
xor
jl
divps
and
hlt
jb
pop
cmpsb
bound
stos
loope
in
lcall
test
outsb
in
mov
pop
push
nop
inc
popf
and
push
xchg
fwait
hlt
push
shll
dec
jbe
adc
aaa
xor
add
push
mov
add
out
sarl
movsb
and
aam
xchg
fildl
idivl
adc
mov
ret
inc
fisubrs
mov
dec
xchg
or
aam
rcl
movsb
and
iret
cld
popf
arpl
nop
sti
jns
out
sti
repz
cmpsb
loopne
adc
jns
dec
shlb
ljmp
xor
push
add
inc
loope
sub
jne
int
mov
test
bound
cmp
fwait
lods
fisubl
gs
sub
mov
jnp
xor
repnz
lock
mov
cltd
pop
add
cltd
stos
push
push
pop
jg
or
and
xchg
mov
pop
scas
in
push
cmc
jle
pop
pop
xlat
sti
test
mov
xchg
mov
push
cmp
out
xchg
inc
push
pop
call
or
jmp
outsb
xor
lahf
mov
mov
jl
ljmp
jl
cmpsb
xchg
lea
rorb
sarb
fisttps
add
jg,pt
mov
jmp
cmc
ret
aas
jns
insl
or
ljmp
imul
js
cmp
sysret
jle
adc
sar
jae
popa
add
flds
pop
mov
push
movsb
push
push
mov
aas
dec
movsb
out
in
ss
mov
sub
sti
shll
push
sahf
and
and
rcrl
insb
js
cld
and
filds
into
push
sbb
leave
adc
ret
popf
out
sbb
jg
mov
jns
loope
pop
test
dec
lock
add
jnp
pop
xor
jge
cmc
je
push
call
mov
adc
scas
add
testb
and
jo
aam
lret
pop
mov
shl
add
pushf
hlt
xchg
jle
es
arpl
fists
out
ds
mov
jle
into
push
fsubs
pushf
movsb
mov
out
fwait
xlat
sub
mov
test
js
outsb
adcl
mov
jo
enter
lods
fsubrp
jnp
out
clc
mov
dec
jge
push
jbe
lds
sbb
sbb
popa
out
xchg
lahf
sub
xor
stc
mov
lret
popf
addr16
scas
add
jge
out
sub
ja
test
bound
xchg
cwtl
mov
sub
sti
mov
dec
cmpsb
icebp
lods
xor
mov
pop
aaa
add
test
and
fld
xchg
cmpsb
mov
mov
xchg
sub
jnp
pop
iret
out
lods
cmp
outsb
push
movsb
jmp
push
pusha
pop
mov
sbb
cmp
es
dec
in
js
lods
inc
ja
add
rcl
imul
lret
sub
adc
or
aas
lahf
das
les
push
adc
cs
je
sbb
lds
xor
test
jg
cmc
nop
or
jmp
inc
int3
imul
lock
shl
mov
cltd
mov
call
das
loop,pt
call
ds
jl
sbb
adc
inc
pop
inc
pop
pop
test
out
pop
mov
loope
push
repz
out
dec
and
ljmp
fnsave
mov
shrb
sahf
data16
cmp
lods
out
inc
xor
lcall
mov
adc
aam
jl
lds
lods
inc
stc
shl
sbb
cmp
sbb
dec
cmp
sbb
jb
out
cltd
xlat
lods
das
sahf
and
xor
adcl
dec
les
sbb
xchg
cmc
or
add
adc
sbb
mov
mov
mov
cmp
rcrl
jns
aaa
iret
xchg
bnd
pop
mov
and
aad
shlb
add
nop
dec
sub
add
aam
dec
fwait
mov
mov
jecxz
mov
and
sahf
bound
or
mov
pop
or
sub
pop
mov
mov
cmp
dec
jmp
pop
fistl
pop
jg
sub
popa
push
and
leave
mov
in
addr16
lret
cmp
add
cmp
mov
inc
push
lcall
les
mov
into
lea
out
loopne
mov
sub
movsb
jnp
cmp
icebp
fwait
icebp
fldt
jg
stos
pop
imul
cmp
icebp
cmp
aaa
inc
xchg
mov
daa
ss
andb
scas
fdivs
adc
js
aad
inc
fmuls
test
jns
lods
cld
movsl
jne
test
mov
jnp
sub
jge
push
dec
scas
mull
cmp
push
jge
mov
mov
dec
sbb
mov
loopne
cmp
out
and
aas
adc
pop
or
jno
push
pop
fsts
cs
or
int3
aaa
sub
pop
sub
xlat
xchg
mov
mov
or
in
ljmp
inc
push
movsb
adc
cmp
pop
inc
pop
sub
mov
mov
pusha
mov
sub
jnp
enter
cli
xchg
test
fwait
daa
ss
jns
sub
pushf
mov
into
sysret
pop
imul
inc
mov
lods
fs
mov
dec
and
pusha
lods
add
aam
mov
in
dec
add
push
xor
dec
xor
and
sbb
test
dec
add
jae
adc
push
adc
pop
inc
lret
je
mov
mov
mov
push
mov
push
outsl
out
fisttps
out
fnsave
mov
cltd
jmp
cld
testl
xor
fwait
outsl
sar
adc
enter
lret
arpl
mov
ficomps
cmpsb
push
ret
mov
mov
es
sub
xlat
les
sbb
pop
negl
inc
std
inc
into
enter
scas
sbb
stos
lds
sahf
nop
sub
or
pop
sbb
gs
adcl
pusha
and
call
xor
push
lcall
adc
mov
movsb
jl
add
in
int
adc
add
or
push
and
xor
jp
sub
les
bnd
adc
push
and
pop
clc
sub
lods
out
cmp
dec
sub
mov
ret
push
lret
idiv
out
ret
ret
mov
xor
inc
jbe
mov
or
or
loop
clc
add
inc
push
mov
addb
scas
and
fistpll
movsb
push
mov
adc
jmp
leave
mov
jae
inc
insl
push
scas
shrb
mov
mov
outsl
inc
adc
ss
int
ret
test
sub
and
adc
xchg
jge
lods
mov
cmp
dec
sbb
push
in
pop
dec
inc
insb
out
out
and
incl
jo
push
ss
push
js
push
mov
mov
mov
fldcw
sbb
dec
nop
push
pop
rolb
cmpsl
jno
lock
mov
dec
sbb
ss
aad
pop
mov
les
jne
fs
sti
mov
lret
pushf
loopne
jae
push
aad
jle
aam
or
sbb
pop
sbb
sub
lods
xor
popa
mov
outsb
mov
in
xchg
enterw
sbb
sbb
xor
sti
add
cmp
icebp
into
movl
cmp
sbb
push
out
sub
jb
pop
inc
mov
push
enter
jl
clc
mov
cmpsb
pop
inc
dec
push
fs
mov
shr
pop
imul
jmp
lods
inc
movsl
xchg
inc
lods
jle
add
inc
aad
xchg
shrb
in
iret
ljmp
in
or
fisttpll
pushf
push
jo
stos
cwtl
inc
mov
test
jg
xchg
pusha
pop
test
adc
aad
pop
cwtl
cli
mov
xchg
in
int
jle
sub
sbb
out
pusha
adc
xchg
notb
hlt
daa
incb
mov
cli
aad
pop
xchg
dec
subb
cmpsb
test
in
cmp
ljmp
inc
sub
jnp
inc
jae
enter
jnp
pop
sbb
xchg
mov
mov
inc
jbe
add
shl
xchg
shl
out
test
cmc
mov
outsb
jecxz
or
aam
push
xor
push
pusha
adc
xchg
lock
xor
jecxz
cli
enter
push
adcb
test
cmpl
push
push
add
push
adc
out
add
orl
xchg
ds
icebp
xchg
popa
sub
rorb
sub
sti
pop
xchg
adc
sbb
inc
jb
add
jmp
dec
lea
out
fs
leave
fnsave
jns
nop
pop
loop
pusha
inc
jp
sets
aaa
adc
stc
dec
sti
inc
cmc
sahf
fcmove
pop
aam
inc
iret
jge
pop
or
add
jg
cs
inc
movsb
jns
stos
inc
xchg
adc
push
lods
leave
cmp
and
leave
mov
sahf
adc
cli
push
sub
jle
push
sbb
push
sub
call
jbe
fistps
test
and
fcmovu
push
pop
icebp
dec
sbb
ss
inc
ja
es
imul
mov
xor
lock
and
mov
xchg
cs
adc
add
stc
and
lods
xchg
mov
ficompl
clc
rcrl
nop
sbbb
pop
mov
cld
and
stos
xchg
cmp
mov
push
loopne
testb
into
cmpsb
inc
or
and
les
jb
adc
jmp
add
sti
mov
nop
mov
add
xor
xor
xchg
js
sbb
clc
leave
outsl
bound
mov
stc
sub
dec
xchg
insb
enter
mov
jo
imul
dec
je
pop
jne
loop
movsl
fildll
mov
loope
in
nop
inc
stos
jb
add
inc
shlb
xorl
pop
mov
lods
and
xchg
add
shld
inc
add
fnstsw
push
stos
pop
test
push
pop
je
movsl
repnz
sbb
mov
fs
in
mov
pop
cmp
scas
idivb
inc
push
dec
jmp
mov
or
inc
test
jae
xlat
cltd
orl
inc
mov
ficoms
jae
push
jmp
clc
fldl
adc
inc
xchg
inc
mov
lods
jl
inc
in
int
inc
xor
or
dec
dec
pop
fwait
call
jnp
fwait
and
arpl
add
jl
or
sub
mov
pop
sbb
xchg
out
ret
jae
push
addr16
iret
push
mov
cld
imul
nop
aas
dec
or
xchg
mov
adc
adc
hlt
adc
icebp
imul
cmp
and
shrl
pop
adcl
mov
mov
test
iret
aas
je
xor
out
adc
test
int3
xchg
mov
pop
xlat
outsl
iret
add
test
mov
jno
jp
scas
loopne
and
xchg
push
mov
mov
and
push
retw
and
or
xchg
jno
and
lcall
mov
rorl
mov
dec
ret
push
mov
dec
out
enter
add
in
popf
pusha
xlat
fsubl
lcallw
mov
ss
mov
repnz
shl
int
lea
dec
jns
push
and
das
push
cmc
in
xchg
ret
pusha
pop
xchg
mov
xchg
inc
hlt
or
cld
rcl
and
fsubl
mov
pop
mov
xchg
cmp
mov
lret
inc
mov
xchg
js
std
push
ds
sbb
xchg
xchg
sbb
sbb
mov
mov
leave
outsb
dec
icebp
sahf
pop
out
repz
and
pop
jno
fnstsw
inc
movsb
push
test
or
jns
jle
jmp
int
ret
xchg
imul
clc
sub
add
sub
adc
stos
rcl
cmc
push
jae
jg
and
hlt
adc
inc
in
push
jp
jle
mov
xor
fucomp
testb
movsb
jg
arpl
out
lds
adc
pop
je
mov
sti
movsb
sub
and
sub
dec
repnz
xchg
ljmp
xchg
in
rcrb
outsl
xor
jb
mov
dec
pop
inc
xchg
mov
div
push
jle
jle
je
dec
scas
test
pop
flds
into
mov
daa
inc
and
rcrb
jno
pop
add
stos
iret
pop
ss
jle
aam
dec
jp
icebp
pop
sub
mov
dec
lods
or
push
sub
xchg
fdivrs
shld
add
pushf
faddl
sub
or
outsb
aad
icebp
pusha
repz
dec
gs
fs
jnp
ljmp
mov
in
cmpsb
int
inc
adc
cmpsl
stos
hlt
and
or
mov
jb
outsl
lret
paddq
sub
xchg
pop
psrlq
movsb
mov
add
sbb
inc
or
fisubrs
imul
das
or
fiadds
or
scas
add
mov
js
jp
xor
mov
sub
jecxz
jg
and
into
mov
aaa
xlat
fisttpl
fs
pusha
fsubl
add
icebp
inc
sub
test
les
xchg
push
and
add
mov
mov
push
push
aam
cs
mov
decb
enter
out
aas
aad
jb
ljmp
enter
inc
shr
shrb
and
mov
adc
xchg
movb
adc
cld
ficoms
push
dec
addr16
and
int
sbb
iret
imul
movsb
mov
xchg
icebp
xchg
in
test
cli
jp
push
lock
mov
cmp
push
hlt
dec
insl
sub
mov
int
cmp
in
fs
push
xchg
cltd
dec
aam
mov
outsl
sub
sbb
xor
stos
sub
cmp
insb
sub
or
fistps
mov
rcll
test
sub
xor
push
pusha
mov
es
lcall
cmp
div
test
movsb
mov
sbb
test
out
sbb
inc
lods
cmp
mov
outsl
mull
mov
dec
sub
data16
sbb
shll
cmpl
cmp
xchg
and
xchg
out
lahf
and
or
adc
das
push
lahf
out
sahf
mov
xor
xchg
mov
in
push
scas
mov
or
adc
sub
or
add
clc
mov
daa
stc
mov
daa
xor
mov
mov
or
sbb
pop
subl
imul
pop
push
test
mov
shl
fisttps
repnz
cmp
push
add
fidivl
ljmp
jl
push
out
sub
inc
scas
pop
stos
adc
negl
xor
sbb
cmpsb
pop
fs
dec
sbb
leave
and
cmp
jecxz
add
push
out
js
jo
sbb
cmp
mov
lds
in
fisubl
inc
lahf
sti
mov
mov
cltd
adc
jae
sub
out
xchg
out
fidivrl
out
cmc
nop
icebp
or
xor
cmpb
push
or
mov
movsb
ret
insl
mov
or
push
dec
pushf
mov
test
ja
mov
mov
out
or
test
inc
xchg
repz
ss
jl
ss
sbb
insl
mov
dec
lock
enter
ja
fs
mov
inc
inc
pop
xchg
adc
ret
xchg
xchg
adc
int3
jp
push
scas
cmp
sbb
push
inc
inc
shll
add
cmpsb
stos
test
push
mov
xchg
xchg
cmpsl
sbb
cmpsl
adc
add
mov
add
cs
repz
xorb
pop
adc
xchg
es
enter
loopne
cmc
jnp
int
mov
sub
or
push
call
jp
shl
jbe
aas
lahf
popa
jb
pop
js
inc
mov
and
pop
lcall
call
cmp
cs
mov
adc
add
stc
mov
sahf
repz
je
cltd
ret
push
cmp
ds
and
mul
in
dec
pop
push
xchg
mov
or
sub
add
xor
cmp
sti
leave
push
inc
addb
mov
sbb
mov
adc
repnz
jne
cmp
dec
pusha
xchg
mov
insb
sahf
or
push
adc
cli
popa
popa
ret
test
leave
mov
jmp
dec
adc
xchg
pop
outsl
scas
insl
sbb
xor
sbb
xchg
fs
mov
and
jae
fimuls
adc
repz
mov
sahf
sub
scas
adc
xlat
adcb
leave
int3
and
jo
jb
les
lds
stos
lods
icebp
shl
mov
gs
je
cmpsb
popa
jl
jmp
mov
lods
jge
dec
mov
shll
pop
push
adc
add
push
lret
xor
mov
adc
scas
pop
mov
bound
adc
loop
mov
outsb
xchg
xor
push
and
cmpsl
scas
ss
jns
addl
enter
clc
sub
imul
sbb
xchg
push
inc
shll
test
in
imul
popf
popf
popa
scas
xor
sub
inc
cli
mov
inc
xchg
out
ja
sub
shll
jmp
out
js
mov
insl
sbb
and
hlt
cmpb
les
cmpsb
fdivs
outsl
test
push
movsl
test
aas
sarl
jae
adc
sub
pshufw
mov
stos
xlat
add
or
popf
orb
popl
ds
dec
pop
xchg
out
mov
in
ss
jnp
xor
dec
jmp
ss
pop
jge
ja
push
mov
jge
lds
int
jno
push
jmp
mov
xor
mov
outsb
fwait
jbe
or
adc
pop
pop
cmp
roll
mov
dec
mov
sbb
inc
pop
je
test
inc
pop
push
mov
stc
push
pop
mov
jbe
cltd
mov
stos
loopne
test
jle
ror
jl
std
lods
pusha
add
andb
inc
ret
loop
xor
inc
mov
test
mov
xlat
push
sub
xor
pusha
mov
sbbb
fldt
sbb
add
xor
hlt
test
jbe
cmpsb
std
or
dec
mov
pop
imul
mov
sbb
int
out
aad
bswap
jnp
xchg
mov
xor
mov
in
pop
cwtl
pop
jmp
sahf
pusha
add
sub
lea
sub
push
cwtl
xor
xchg
mov
cltd
les
jl
int
fiadds
fwait
in
cli
repz
lcall
cmp
loop
cmpsl
sar
fisubs
mov
push
mov
cli
aad
and
xchg
addr16
test
ljmp
adc
sti
imul
scas
and
cmp
mov
mov
add
mov
imul
insb
pop
ds
mov
push
xor
dec
jl
insl
inc
lea
adc
stos
sub
movsl
cmpsb
pop
jb
test
mov
or
out
rorb
dec
or
fiadds
icebp
mov
and
cs
loopne
lods
jb
dec
mov
mov
idivl
int
add
mov
or
add
jnp
cmp
pop
dec
cmp
jns
xchg
pop
xchg
fwait
sbb
mov
push
dec
cwtl
sub
int3
sub
lods
in
test
aas
cmp
je
loope
aam
xchg
mov
rcrl
sbb
sbb
and
mov
fdivs
push
sub
movsb
inc
ds
js
iret
repnz
inc
mov
jns
mov
stc
sahf
int
insb
push
pop
lock
lahf
jg
xchg
test
pop
loopne
jmp
dec
arpl
div
add
pop
or
cmp
insb
sub
jne
insb
sbb
pop
pop
push
push
and
add
jae
pop
inc
sub
lods
or
xor
lahf
jle
les
fisttpll
xchg
mov
adc
and
xchg
push
sub
push
add
xor
add
xor
mov
jae
push
inc
and
shr
or
sub
mov
adc
push
sub
add
cmc
outsl
jbe
rcrb
xchg
fsub
out
pushf
lea
ret
bound
lods
mov
fcoms
mov
mov
fists
test
add
daa
pop
rcl
xor
or
mov
idivb
sub
mov
jo
cltd
pop
ja
dec
cmpsb
lcall
xor
pushf
jmp
jle
decb
test
ja
mov
add
sub
mov
mov
add
push
cmp
js
js
inc
xchg
fildll
add
daa
shlb
in
jb
dec
lret
or
repz
andb
adc
mov
pop
mov
xchg
push
pop
push
mov
jp
mov
sub
xor
sbb
mov
adc
into
push
ljmp
loop
push
into
in
sti
fs
out
push
add
imul
gs
add
xchg
adc
jns
fidivrl
out
push
int
pop
sub
cmp
lcall
rep
mov
mov
pop
nop
inc
adc
gs
addr16
push
dec
flds
cmp
cld
jecxz
push
jno
mov
mov
stos
pop
sub
in
and
outsb
data16
insb
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
adc
add
sbb
add
add
notb
add
ljmp
add
adc
add
adc
add
adc
add
sbb
add
sub
add
dec
sbb
add
pop
add
popf
pop
add
sbb
add
add
add
mov
add
xor
add
dec
mov
add
mov
add
jg
add
mov
add
pushf
mov
add
mov
add
shll
add
mov
add
out
add
icebp
mov
add
inc
insb
outsl
jae
push
jne
insb
push
dec
insl
jns
outsb
js
outsl
je
push
gs
gs
jbe
add
outsb
push
jne
imul
dec
outsw
push
outsb
data16
inc
ja
outsb
jbe
arpl
jbe
push
jb
je
push
jne
insl
je
data16
jno
dec
insl
outsb
outsb
push
bound
outsb
add
outsl
js
jbe
ja
dec
js
ja
popa
add
fs
bound
imul
gs
jno
imul
inc
insl
outsb
insl
fs
jae
jno
inc
fs
jae
jns
bound
add
je
ja
insb
jo
popa
push
add
push
jb
inc
ja
arpl
js
inc
jb
jbe
ja
add
outsl
jb
insl
gs
push
gs
je
bound
